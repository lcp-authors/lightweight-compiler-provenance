
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000112c0 <.init>:
   112c0:	push	{r3, lr}
   112c4:	bl	1173c <sprintf@plt+0x48>
   112c8:	pop	{r3, pc}

Disassembly of section .plt:

000112cc <sigemptyset@plt-0x14>:
   112cc:	push	{lr}		; (str lr, [sp, #-4]!)
   112d0:	ldr	lr, [pc, #4]	; 112dc <sigemptyset@plt-0x4>
   112d4:	add	lr, pc, lr
   112d8:	ldr	pc, [lr, #8]!
   112dc:	andeq	lr, r1, r4, lsr #26

000112e0 <sigemptyset@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #122880	; 0x1e000
   112e8:	ldr	pc, [ip, #3364]!	; 0xd24

000112ec <strerror@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #122880	; 0x1e000
   112f4:	ldr	pc, [ip, #3356]!	; 0xd1c

000112f8 <rb_helper_loop@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #122880	; 0x1e000
   11300:	ldr	pc, [ip, #3348]!	; 0xd14

00011304 <abort@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #122880	; 0x1e000
   1130c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011310 <rb_event_addish@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #122880	; 0x1e000
   11318:	ldr	pc, [ip, #3332]!	; 0xd04

0001131c <getsockname@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #122880	; 0x1e000
   11324:	ldr	pc, [ip, #3324]!	; 0xcfc

00011328 <rb_ignore_errno@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #122880	; 0x1e000
   11330:	ldr	pc, [ip, #3316]!	; 0xcf4

00011334 <rb_connect_tcp_ssl@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #122880	; 0x1e000
   1133c:	ldr	pc, [ip, #3308]!	; 0xcec

00011340 <rb_connect_tcp@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #122880	; 0x1e000
   11348:	ldr	pc, [ip, #3300]!	; 0xce4

0001134c <memcmp@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #122880	; 0x1e000
   11354:	ldr	pc, [ip, #3292]!	; 0xcdc

00011358 <__libc_start_main@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #122880	; 0x1e000
   11360:	ldr	pc, [ip, #3284]!	; 0xcd4

00011364 <rb_event_delete@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #122880	; 0x1e000
   1136c:	ldr	pc, [ip, #3276]!	; 0xccc

00011370 <rb_setselect@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #122880	; 0x1e000
   11378:	ldr	pc, [ip, #3268]!	; 0xcc4

0001137c <rb_get_fd@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #122880	; 0x1e000
   11384:	ldr	pc, [ip, #3260]!	; 0xcbc

00011388 <__gmon_start__@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #122880	; 0x1e000
   11390:	ldr	pc, [ip, #3252]!	; 0xcb4

00011394 <vsnprintf@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #122880	; 0x1e000
   1139c:	ldr	pc, [ip, #3244]!	; 0xcac

000113a0 <rb_socket@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #122880	; 0x1e000
   113a8:	ldr	pc, [ip, #3236]!	; 0xca4

000113ac <fclose@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #122880	; 0x1e000
   113b4:	ldr	pc, [ip, #3228]!	; 0xc9c

000113b8 <fgets@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #122880	; 0x1e000
   113c0:	ldr	pc, [ip, #3220]!	; 0xc94

000113c4 <rb_strtok_r@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #122880	; 0x1e000
   113cc:	ldr	pc, [ip, #3212]!	; 0xc8c

000113d0 <strchr@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #122880	; 0x1e000
   113d8:	ldr	pc, [ip, #3204]!	; 0xc84

000113dc <rb_dictionary_foreach_cur@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #122880	; 0x1e000
   113e4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113e8 <strcasecmp@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #122880	; 0x1e000
   113f0:	ldr	pc, [ip, #3188]!	; 0xc74

000113f4 <calloc@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #122880	; 0x1e000
   113fc:	ldr	pc, [ip, #3180]!	; 0xc6c

00011400 <rb_helper_child@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #122880	; 0x1e000
   11408:	ldr	pc, [ip, #3172]!	; 0xc64

0001140c <sendto@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #122880	; 0x1e000
   11414:	ldr	pc, [ip, #3164]!	; 0xc5c

00011418 <htons@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #122880	; 0x1e000
   11420:	ldr	pc, [ip, #3156]!	; 0xc54

00011424 <fopen@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #122880	; 0x1e000
   1142c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011430 <memset@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #122880	; 0x1e000
   11438:	ldr	pc, [ip, #3140]!	; 0xc44

0001143c <freeaddrinfo@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #122880	; 0x1e000
   11444:	ldr	pc, [ip, #3132]!	; 0xc3c

00011448 <strrchr@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #122880	; 0x1e000
   11450:	ldr	pc, [ip, #3124]!	; 0xc34

00011454 <rb_write@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #122880	; 0x1e000
   1145c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011460 <__assert_fail@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #122880	; 0x1e000
   11468:	ldr	pc, [ip, #3108]!	; 0xc24

0001146c <rb_strlcpy@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #122880	; 0x1e000
   11474:	ldr	pc, [ip, #3100]!	; 0xc1c

00011478 <strtoull@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #122880	; 0x1e000
   11480:	ldr	pc, [ip, #3092]!	; 0xc14

00011484 <rb_dictionary_foreach_next@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #122880	; 0x1e000
   1148c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011490 <free@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #122880	; 0x1e000
   11498:	ldr	pc, [ip, #3076]!	; 0xc04

0001149c <rb_string_to_array@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #122880	; 0x1e000
   114a4:	ldr	pc, [ip, #3068]!	; 0xbfc

000114a8 <rb_read@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #122880	; 0x1e000
   114b0:	ldr	pc, [ip, #3060]!	; 0xbf4

000114b4 <rb_strcasecmp@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #122880	; 0x1e000
   114bc:	ldr	pc, [ip, #3052]!	; 0xbec

000114c0 <getaddrinfo@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #122880	; 0x1e000
   114c8:	ldr	pc, [ip, #3044]!	; 0xbe4

000114cc <rb_dictionary_foreach_start@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #122880	; 0x1e000
   114d4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114d8 <ntohs@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #122880	; 0x1e000
   114e0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114e4 <rb_inet_pton_sock@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #122880	; 0x1e000
   114ec:	ldr	pc, [ip, #3020]!	; 0xbcc

000114f0 <strlen@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #122880	; 0x1e000
   114f8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114fc <rb_current_time@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #122880	; 0x1e000
   11504:	ldr	pc, [ip, #3004]!	; 0xbbc

00011508 <rb_dictionary_delete@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #122880	; 0x1e000
   11510:	ldr	pc, [ip, #2996]!	; 0xbb4

00011514 <memcpy@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #122880	; 0x1e000
   1151c:	ldr	pc, [ip, #2988]!	; 0xbac

00011520 <rb_free_rb_dlink_node@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #122880	; 0x1e000
   11528:	ldr	pc, [ip, #2980]!	; 0xba4

0001152c <rb_close@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #122880	; 0x1e000
   11534:	ldr	pc, [ip, #2972]!	; 0xb9c

00011538 <strtol@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #122880	; 0x1e000
   11540:	ldr	pc, [ip, #2964]!	; 0xb94

00011544 <sigaddset@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #122880	; 0x1e000
   1154c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011550 <strcpy@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #122880	; 0x1e000
   11558:	ldr	pc, [ip, #2948]!	; 0xb84

0001155c <raise@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #122880	; 0x1e000
   11564:	ldr	pc, [ip, #2940]!	; 0xb7c

00011568 <atoi@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #122880	; 0x1e000
   11570:	ldr	pc, [ip, #2932]!	; 0xb74

00011574 <rb_dictionary_destroy@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #122880	; 0x1e000
   1157c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011580 <bind@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #122880	; 0x1e000
   11588:	ldr	pc, [ip, #2916]!	; 0xb64

0001158c <rb_lib_log@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #122880	; 0x1e000
   11594:	ldr	pc, [ip, #2908]!	; 0xb5c

00011598 <strstr@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #122880	; 0x1e000
   115a0:	ldr	pc, [ip, #2900]!	; 0xb54

000115a4 <fwrite@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #122880	; 0x1e000
   115ac:	ldr	pc, [ip, #2892]!	; 0xb4c

000115b0 <rb_init_prng@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #122880	; 0x1e000
   115b8:	ldr	pc, [ip, #2884]!	; 0xb44

000115bc <rb_dictionary_retrieve@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #122880	; 0x1e000
   115c4:	ldr	pc, [ip, #2876]!	; 0xb3c

000115c8 <rb_outofmemory@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #122880	; 0x1e000
   115d0:	ldr	pc, [ip, #2868]!	; 0xb34

000115d4 <__ctype_b_loc@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #122880	; 0x1e000
   115dc:	ldr	pc, [ip, #2860]!	; 0xb2c

000115e0 <rb_dictionary_add@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #122880	; 0x1e000
   115e8:	ldr	pc, [ip, #2852]!	; 0xb24

000115ec <rb_set_time@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #122880	; 0x1e000
   115f4:	ldr	pc, [ip, #2844]!	; 0xb1c

000115f8 <malloc@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #122880	; 0x1e000
   11600:	ldr	pc, [ip, #2836]!	; 0xb14

00011604 <sigaction@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #122880	; 0x1e000
   1160c:	ldr	pc, [ip, #2828]!	; 0xb0c

00011610 <rb_helper_read@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #122880	; 0x1e000
   11618:	ldr	pc, [ip, #2820]!	; 0xb04

0001161c <rb_inet_ntop_sock@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #122880	; 0x1e000
   11624:	ldr	pc, [ip, #2812]!	; 0xafc

00011628 <rb_dictionary_find@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #122880	; 0x1e000
   11630:	ldr	pc, [ip, #2804]!	; 0xaf4

00011634 <rb_dictionary_create@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #122880	; 0x1e000
   1163c:	ldr	pc, [ip, #2796]!	; 0xaec

00011640 <memmove@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #122880	; 0x1e000
   11648:	ldr	pc, [ip, #2788]!	; 0xae4

0001164c <rb_accept_tcp@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #122880	; 0x1e000
   11654:	ldr	pc, [ip, #2780]!	; 0xadc

00011658 <rb_helper_write@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #122880	; 0x1e000
   11660:	ldr	pc, [ip, #2772]!	; 0xad4

00011664 <rb_event_add@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #122880	; 0x1e000
   1166c:	ldr	pc, [ip, #2764]!	; 0xacc

00011670 <rb_get_random@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #122880	; 0x1e000
   11678:	ldr	pc, [ip, #2756]!	; 0xac4

0001167c <rb_make_rb_dlink_node@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #122880	; 0x1e000
   11684:	ldr	pc, [ip, #2748]!	; 0xabc

00011688 <snprintf@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #122880	; 0x1e000
   11690:	ldr	pc, [ip, #2740]!	; 0xab4

00011694 <rb_listen@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #122880	; 0x1e000
   1169c:	ldr	pc, [ip, #2732]!	; 0xaac

000116a0 <strncmp@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #122880	; 0x1e000
   116a8:	ldr	pc, [ip, #2724]!	; 0xaa4

000116ac <recvfrom@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #122880	; 0x1e000
   116b4:	ldr	pc, [ip, #2716]!	; 0xa9c

000116b8 <setsockopt@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #122880	; 0x1e000
   116c0:	ldr	pc, [ip, #2708]!	; 0xa94

000116c4 <strpbrk@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #122880	; 0x1e000
   116cc:	ldr	pc, [ip, #2700]!	; 0xa8c

000116d0 <strcmp@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #122880	; 0x1e000
   116d8:	ldr	pc, [ip, #2692]!	; 0xa84

000116dc <exit@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #122880	; 0x1e000
   116e4:	ldr	pc, [ip, #2684]!	; 0xa7c

000116e8 <__errno_location@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #122880	; 0x1e000
   116f0:	ldr	pc, [ip, #2676]!	; 0xa74

000116f4 <sprintf@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #122880	; 0x1e000
   116fc:	ldr	pc, [ip, #2668]!	; 0xa6c

Disassembly of section .text:

00011700 <.text>:
   11700:	mov	fp, #0
   11704:	mov	lr, #0
   11708:	pop	{r1}		; (ldr r1, [sp], #4)
   1170c:	mov	r2, sp
   11710:	push	{r2}		; (str r2, [sp, #-4]!)
   11714:	push	{r0}		; (str r0, [sp, #-4]!)
   11718:	ldr	ip, [pc, #16]	; 11730 <sprintf@plt+0x3c>
   1171c:	push	{ip}		; (str ip, [sp, #-4]!)
   11720:	ldr	r0, [pc, #12]	; 11734 <sprintf@plt+0x40>
   11724:	ldr	r3, [pc, #12]	; 11738 <sprintf@plt+0x44>
   11728:	bl	11358 <__libc_start_main@plt>
   1172c:	bl	11304 <abort@plt>
   11730:	andeq	lr, r1, r8, asr #14
   11734:	andeq	r1, r1, r8, asr #26
   11738:	andeq	lr, r1, r8, ror #13
   1173c:	ldr	r3, [pc, #20]	; 11758 <sprintf@plt+0x64>
   11740:	ldr	r2, [pc, #20]	; 1175c <sprintf@plt+0x68>
   11744:	add	r3, pc, r3
   11748:	ldr	r2, [r3, r2]
   1174c:	cmp	r2, #0
   11750:	bxeq	lr
   11754:	b	11388 <__gmon_start__@plt>
   11758:			; <UNDEFINED> instruction: 0x0001e8b4
   1175c:	andeq	r0, r0, r0, ror r1
   11760:	ldr	r3, [pc, #28]	; 11784 <sprintf@plt+0x90>
   11764:	ldr	r0, [pc, #28]	; 11788 <sprintf@plt+0x94>
   11768:	sub	r3, r3, r0
   1176c:	cmp	r3, #6
   11770:	bxls	lr
   11774:	ldr	r3, [pc, #16]	; 1178c <sprintf@plt+0x98>
   11778:	cmp	r3, #0
   1177c:	bxeq	lr
   11780:	bx	r3
   11784:			; <UNDEFINED> instruction: 0x00030fbf
   11788:			; <UNDEFINED> instruction: 0x00030fbc
   1178c:	andeq	r0, r0, r0
   11790:	ldr	r1, [pc, #36]	; 117bc <sprintf@plt+0xc8>
   11794:	ldr	r0, [pc, #36]	; 117c0 <sprintf@plt+0xcc>
   11798:	sub	r1, r1, r0
   1179c:	asr	r1, r1, #2
   117a0:	add	r1, r1, r1, lsr #31
   117a4:	asrs	r1, r1, #1
   117a8:	bxeq	lr
   117ac:	ldr	r3, [pc, #16]	; 117c4 <sprintf@plt+0xd0>
   117b0:	cmp	r3, #0
   117b4:	bxeq	lr
   117b8:	bx	r3
   117bc:			; <UNDEFINED> instruction: 0x00030fbc
   117c0:			; <UNDEFINED> instruction: 0x00030fbc
   117c4:	andeq	r0, r0, r0
   117c8:	push	{r4, lr}
   117cc:	ldr	r4, [pc, #24]	; 117ec <sprintf@plt+0xf8>
   117d0:	ldrb	r3, [r4]
   117d4:	cmp	r3, #0
   117d8:	popne	{r4, pc}
   117dc:	bl	11760 <sprintf@plt+0x6c>
   117e0:	mov	r3, #1
   117e4:	strb	r3, [r4]
   117e8:	pop	{r4, pc}
   117ec:	andeq	r0, r3, r0, asr #31
   117f0:	ldr	r0, [pc, #40]	; 11820 <sprintf@plt+0x12c>
   117f4:	ldr	r3, [r0]
   117f8:	cmp	r3, #0
   117fc:	bne	11804 <sprintf@plt+0x110>
   11800:	b	11790 <sprintf@plt+0x9c>
   11804:	ldr	r3, [pc, #24]	; 11824 <sprintf@plt+0x130>
   11808:	cmp	r3, #0
   1180c:	beq	11800 <sprintf@plt+0x10c>
   11810:	push	{r4, lr}
   11814:	blx	r3
   11818:	pop	{r4, lr}
   1181c:	b	11790 <sprintf@plt+0x9c>
   11820:	strdeq	pc, [r2], -ip
   11824:	andeq	r0, r0, r0
   11828:	push	{r4, fp, lr}
   1182c:	add	fp, sp, #8
   11830:	sub	sp, sp, #28
   11834:	str	r0, [fp, #-32]	; 0xffffffe0
   11838:	str	r1, [fp, #-36]	; 0xffffffdc
   1183c:	ldr	r4, [pc, #232]	; 1192c <sprintf@plt+0x238>
   11840:	add	r4, pc, r4
   11844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11848:	cmp	r3, #2
   1184c:	bgt	1186c <sprintf@plt+0x178>
   11850:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11854:	ldr	r3, [pc, #212]	; 11930 <sprintf@plt+0x23c>
   11858:	add	r3, pc, r3
   1185c:	mov	r1, r3
   11860:	mov	r0, #67	; 0x43
   11864:	bl	12a60 <sprintf@plt+0x136c>
   11868:	b	11924 <sprintf@plt+0x230>
   1186c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11870:	add	r3, r3, #4
   11874:	ldr	r3, [r3]
   11878:	mov	r2, #16
   1187c:	mov	r1, #0
   11880:	mov	r0, r3
   11884:	bl	11478 <strtoull@plt>
   11888:	strd	r0, [fp, #-20]	; 0xffffffec
   1188c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11890:	mvn	r0, #0
   11894:	mov	r1, #0
   11898:	cmp	r3, r1
   1189c:	cmpeq	r2, r0
   118a0:	bls	118cc <sprintf@plt+0x1d8>
   118a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118a8:	add	r3, r3, #4
   118ac:	ldr	r3, [r3]
   118b0:	mov	r2, r3
   118b4:	ldr	r3, [pc, #120]	; 11934 <sprintf@plt+0x240>
   118b8:	add	r3, pc, r3
   118bc:	mov	r1, r3
   118c0:	mov	r0, #67	; 0x43
   118c4:	bl	12a60 <sprintf@plt+0x136c>
   118c8:	b	11924 <sprintf@plt+0x230>
   118cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118d0:	add	r3, r3, #8
   118d4:	ldr	r3, [r3]
   118d8:	ldrb	r3, [r3]
   118dc:	mov	r2, r3
   118e0:	ldr	r3, [pc, #80]	; 11938 <sprintf@plt+0x244>
   118e4:	ldr	r3, [r4, r3]
   118e8:	ldr	r3, [r3, r2, lsl #2]
   118ec:	str	r3, [fp, #-24]	; 0xffffffe8
   118f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118f4:	cmp	r3, #0
   118f8:	beq	11920 <sprintf@plt+0x22c>
   118fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   11900:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11904:	add	r3, r3, #8
   11908:	ldr	r3, [r3]
   1190c:	ldrb	r1, [r3]
   11910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11914:	mov	r0, r2
   11918:	blx	r3
   1191c:	b	11924 <sprintf@plt+0x230>
   11920:	nop			; (mov r0, r0)
   11924:	sub	sp, fp, #8
   11928:	pop	{r4, fp, pc}
   1192c:			; <UNDEFINED> instruction: 0x0001e7b8
   11930:	strdeq	ip, [r0], -r8
   11934:	andeq	ip, r0, r4, ror #29
   11938:	andeq	r0, r0, ip, lsr #3
   1193c:	push	{fp, lr}
   11940:	add	fp, sp, #4
   11944:	sub	sp, sp, #16
   11948:	str	r0, [fp, #-16]
   1194c:	str	r1, [fp, #-20]	; 0xffffffec
   11950:	ldr	r2, [pc, #236]	; 11a44 <sprintf@plt+0x350>
   11954:	add	r2, pc, r2
   11958:	ldr	r3, [fp, #-16]
   1195c:	cmp	r3, #1
   11960:	bgt	11980 <sprintf@plt+0x28c>
   11964:	ldr	r2, [fp, #-16]
   11968:	ldr	r3, [pc, #216]	; 11a48 <sprintf@plt+0x354>
   1196c:	add	r3, pc, r3
   11970:	mov	r1, r3
   11974:	mov	r0, #67	; 0x43
   11978:	bl	12a60 <sprintf@plt+0x136c>
   1197c:	b	11a3c <sprintf@plt+0x348>
   11980:	ldr	r3, [pc, #196]	; 11a4c <sprintf@plt+0x358>
   11984:	ldr	r3, [r2, r3]
   11988:	ldr	r2, [r3]
   1198c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11990:	add	r3, r3, #4
   11994:	ldr	r3, [r3]
   11998:	mov	r1, r3
   1199c:	mov	r0, r2
   119a0:	bl	115bc <rb_dictionary_retrieve@plt>
   119a4:	str	r0, [fp, #-8]
   119a8:	ldr	r3, [fp, #-8]
   119ac:	cmp	r3, #0
   119b0:	bne	119dc <sprintf@plt+0x2e8>
   119b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   119b8:	add	r3, r3, #4
   119bc:	ldr	r3, [r3]
   119c0:	mov	r2, r3
   119c4:	ldr	r3, [pc, #132]	; 11a50 <sprintf@plt+0x35c>
   119c8:	add	r3, pc, r3
   119cc:	mov	r1, r3
   119d0:	mov	r0, #67	; 0x43
   119d4:	bl	12a60 <sprintf@plt+0x136c>
   119d8:	b	11a3c <sprintf@plt+0x348>
   119dc:	ldr	r3, [fp, #-16]
   119e0:	sub	r2, r3, #2
   119e4:	ldr	r3, [fp, #-8]
   119e8:	ldr	r3, [r3, #4]
   119ec:	cmp	r2, r3
   119f0:	bge	11a14 <sprintf@plt+0x320>
   119f4:	ldr	r3, [fp, #-8]
   119f8:	ldr	r2, [r3, #4]
   119fc:	ldr	r3, [fp, #-16]
   11a00:	ldr	r1, [pc, #76]	; 11a54 <sprintf@plt+0x360>
   11a04:	add	r1, pc, r1
   11a08:	mov	r0, #67	; 0x43
   11a0c:	bl	12a60 <sprintf@plt+0x136c>
   11a10:	b	11a3c <sprintf@plt+0x348>
   11a14:	ldr	r3, [fp, #-8]
   11a18:	ldr	r3, [r3, #8]
   11a1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11a20:	add	r2, r2, #4
   11a24:	ldr	r0, [r2]
   11a28:	ldr	r2, [fp, #-16]
   11a2c:	sub	r1, r2, #2
   11a30:	ldr	r2, [fp, #-20]	; 0xffffffec
   11a34:	add	r2, r2, #8
   11a38:	blx	r3
   11a3c:	sub	sp, fp, #4
   11a40:	pop	{fp, pc}
   11a44:	andeq	lr, r1, r4, lsr #13
   11a48:	andeq	ip, r0, r4, ror #28
   11a4c:	muleq	r0, r4, r1
   11a50:	andeq	ip, r0, r8, asr lr
   11a54:	andeq	ip, r0, ip, asr #28
   11a58:	push	{r4, fp, lr}
   11a5c:	add	fp, sp, #8
   11a60:	sub	sp, sp, #20
   11a64:	str	r0, [fp, #-24]	; 0xffffffe8
   11a68:	str	r1, [fp, #-28]	; 0xffffffe4
   11a6c:	ldr	r4, [pc, #196]	; 11b38 <sprintf@plt+0x444>
   11a70:	add	r4, pc, r4
   11a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a78:	cmp	r3, #2
   11a7c:	bgt	11adc <sprintf@plt+0x3e8>
   11a80:	mov	r3, #0
   11a84:	str	r3, [fp, #-16]
   11a88:	b	11acc <sprintf@plt+0x3d8>
   11a8c:	ldr	r3, [fp, #-16]
   11a90:	uxtb	r3, r3
   11a94:	mov	r2, r3
   11a98:	ldr	r3, [pc, #156]	; 11b3c <sprintf@plt+0x448>
   11a9c:	ldr	r3, [r4, r3]
   11aa0:	ldr	r3, [r3, r2, lsl #2]
   11aa4:	str	r3, [fp, #-20]	; 0xffffffec
   11aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11aac:	cmp	r3, #0
   11ab0:	beq	11ac0 <sprintf@plt+0x3cc>
   11ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ab8:	mov	r0, #0
   11abc:	blx	r3
   11ac0:	ldr	r3, [fp, #-16]
   11ac4:	add	r3, r3, #1
   11ac8:	str	r3, [fp, #-16]
   11acc:	ldr	r3, [fp, #-16]
   11ad0:	cmp	r3, #255	; 0xff
   11ad4:	bls	11a8c <sprintf@plt+0x398>
   11ad8:	b	11b30 <sprintf@plt+0x43c>
   11adc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ae0:	add	r3, r3, #4
   11ae4:	ldr	r3, [r3]
   11ae8:	ldrb	r3, [r3]
   11aec:	mov	r2, r3
   11af0:	ldr	r3, [pc, #68]	; 11b3c <sprintf@plt+0x448>
   11af4:	ldr	r3, [r4, r3]
   11af8:	ldr	r3, [r3, r2, lsl #2]
   11afc:	str	r3, [fp, #-20]	; 0xffffffec
   11b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b04:	cmp	r3, #0
   11b08:	beq	11b2c <sprintf@plt+0x438>
   11b0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11b10:	add	r3, r3, #4
   11b14:	ldr	r3, [r3]
   11b18:	ldrb	r2, [r3]
   11b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b20:	mov	r0, r2
   11b24:	blx	r3
   11b28:	b	11b30 <sprintf@plt+0x43c>
   11b2c:	nop			; (mov r0, r0)
   11b30:	sub	sp, fp, #8
   11b34:	pop	{r4, fp, pc}
   11b38:	andeq	lr, r1, r8, lsl #11
   11b3c:	andeq	r0, r0, r0, lsr #3
   11b40:	push	{r4, fp, lr}
   11b44:	add	fp, sp, #8
   11b48:	sub	sp, sp, #28
   11b4c:	str	r0, [fp, #-32]	; 0xffffffe0
   11b50:	ldr	r4, [pc, #180]	; 11c0c <sprintf@plt+0x518>
   11b54:	add	r4, pc, r4
   11b58:	b	11bd8 <sprintf@plt+0x4e4>
   11b5c:	mov	r2, #10
   11b60:	ldr	r3, [pc, #168]	; 11c10 <sprintf@plt+0x51c>
   11b64:	add	r3, pc, r3
   11b68:	mov	r1, r3
   11b6c:	ldr	r3, [pc, #160]	; 11c14 <sprintf@plt+0x520>
   11b70:	add	r3, pc, r3
   11b74:	mov	r0, r3
   11b78:	bl	1149c <rb_string_to_array@plt>
   11b7c:	str	r0, [fp, #-20]	; 0xffffffec
   11b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b84:	cmp	r3, #0
   11b88:	bgt	11b90 <sprintf@plt+0x49c>
   11b8c:	b	11bd8 <sprintf@plt+0x4e4>
   11b90:	ldr	r3, [pc, #128]	; 11c18 <sprintf@plt+0x524>
   11b94:	add	r3, pc, r3
   11b98:	ldr	r3, [r3]
   11b9c:	ldrb	r3, [r3]
   11ba0:	mov	r2, r3
   11ba4:	ldr	r3, [pc, #112]	; 11c1c <sprintf@plt+0x528>
   11ba8:	ldr	r3, [r4, r3]
   11bac:	ldr	r3, [r3, r2, lsl #2]
   11bb0:	str	r3, [fp, #-24]	; 0xffffffe8
   11bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bb8:	cmp	r3, #0
   11bbc:	beq	11bd8 <sprintf@plt+0x4e4>
   11bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bc4:	ldr	r2, [pc, #84]	; 11c20 <sprintf@plt+0x52c>
   11bc8:	add	r2, pc, r2
   11bcc:	mov	r1, r2
   11bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11bd4:	blx	r3
   11bd8:	mov	r2, #16384	; 0x4000
   11bdc:	ldr	r3, [pc, #64]	; 11c24 <sprintf@plt+0x530>
   11be0:	add	r3, pc, r3
   11be4:	mov	r1, r3
   11be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11bec:	bl	11610 <rb_helper_read@plt>
   11bf0:	str	r0, [fp, #-16]
   11bf4:	ldr	r3, [fp, #-16]
   11bf8:	cmp	r3, #0
   11bfc:	bgt	11b5c <sprintf@plt+0x468>
   11c00:	nop			; (mov r0, r0)
   11c04:	sub	sp, fp, #8
   11c08:	pop	{r4, fp, pc}
   11c0c:	andeq	lr, r1, r4, lsr #9
   11c10:	andeq	r3, r2, ip, asr r4
   11c14:	andeq	pc, r1, r0, asr r4	; <UNPREDICTABLE>
   11c18:	andeq	r3, r2, ip, lsr #8
   11c1c:	andeq	r0, r0, r4, ror r1
   11c20:	strdeq	r3, [r2], -r8
   11c24:	andeq	pc, r1, r0, ror #7
   11c28:	push	{fp, lr}
   11c2c:	add	fp, sp, #4
   11c30:	sub	sp, sp, #8
   11c34:	str	r0, [fp, #-8]
   11c38:	mov	r0, #1
   11c3c:	bl	116dc <exit@plt>
   11c40:	push	{fp}		; (str fp, [sp, #-4]!)
   11c44:	add	fp, sp, #0
   11c48:	sub	sp, sp, #12
   11c4c:	str	r0, [fp, #-8]
   11c50:	nop			; (mov r0, r0)
   11c54:	add	sp, fp, #0
   11c58:	pop	{fp}		; (ldr fp, [sp], #4)
   11c5c:	bx	lr
   11c60:	push	{fp, lr}
   11c64:	add	fp, sp, #4
   11c68:	sub	sp, sp, #144	; 0x90
   11c6c:	mov	r3, #0
   11c70:	str	r3, [fp, #-12]
   11c74:	mov	r3, #1
   11c78:	str	r3, [fp, #-144]	; 0xffffff70
   11c7c:	sub	r3, fp, #144	; 0x90
   11c80:	add	r3, r3, #4
   11c84:	mov	r0, r3
   11c88:	bl	112e0 <sigemptyset@plt>
   11c8c:	sub	r3, fp, #144	; 0x90
   11c90:	add	r3, r3, #4
   11c94:	mov	r1, #13
   11c98:	mov	r0, r3
   11c9c:	bl	11544 <sigaddset@plt>
   11ca0:	sub	r3, fp, #144	; 0x90
   11ca4:	add	r3, r3, #4
   11ca8:	mov	r1, #14
   11cac:	mov	r0, r3
   11cb0:	bl	11544 <sigaddset@plt>
   11cb4:	sub	r3, fp, #144	; 0x90
   11cb8:	add	r3, r3, #4
   11cbc:	mov	r1, #5
   11cc0:	mov	r0, r3
   11cc4:	bl	11544 <sigaddset@plt>
   11cc8:	sub	r3, fp, #144	; 0x90
   11ccc:	add	r3, r3, #4
   11cd0:	mov	r1, #28
   11cd4:	mov	r0, r3
   11cd8:	bl	11544 <sigaddset@plt>
   11cdc:	sub	r3, fp, #144	; 0x90
   11ce0:	mov	r2, #0
   11ce4:	mov	r1, r3
   11ce8:	mov	r0, #28
   11cec:	bl	11604 <sigaction@plt>
   11cf0:	sub	r3, fp, #144	; 0x90
   11cf4:	mov	r2, #0
   11cf8:	mov	r1, r3
   11cfc:	mov	r0, #13
   11d00:	bl	11604 <sigaction@plt>
   11d04:	sub	r3, fp, #144	; 0x90
   11d08:	mov	r2, #0
   11d0c:	mov	r1, r3
   11d10:	mov	r0, #5
   11d14:	bl	11604 <sigaction@plt>
   11d18:	ldr	r3, [pc, #36]	; 11d44 <sprintf@plt+0x650>
   11d1c:	add	r3, pc, r3
   11d20:	str	r3, [fp, #-144]	; 0xffffff70
   11d24:	sub	r3, fp, #144	; 0x90
   11d28:	mov	r2, #0
   11d2c:	mov	r1, r3
   11d30:	mov	r0, #14
   11d34:	bl	11604 <sigaction@plt>
   11d38:	nop			; (mov r0, r0)
   11d3c:	sub	sp, fp, #4
   11d40:	pop	{fp, pc}
   11d44:			; <UNDEFINED> instruction: 0xffffff1c
   11d48:	push	{r4, fp, lr}
   11d4c:	add	fp, sp, #8
   11d50:	sub	sp, sp, #28
   11d54:	str	r0, [fp, #-16]
   11d58:	str	r1, [fp, #-20]	; 0xffffffec
   11d5c:	ldr	r4, [pc, #236]	; 11e50 <sprintf@plt+0x75c>
   11d60:	add	r4, pc, r4
   11d64:	bl	11c60 <sprintf@plt+0x56c>
   11d68:	mov	r3, #256	; 0x100
   11d6c:	str	r3, [sp, #12]
   11d70:	mov	r3, #256	; 0x100
   11d74:	str	r3, [sp, #8]
   11d78:	mov	r3, #256	; 0x100
   11d7c:	str	r3, [sp, #4]
   11d80:	mov	r3, #0
   11d84:	str	r3, [sp]
   11d88:	mov	r3, #0
   11d8c:	mov	r2, #0
   11d90:	ldr	r1, [pc, #188]	; 11e54 <sprintf@plt+0x760>
   11d94:	add	r1, pc, r1
   11d98:	ldr	r0, [pc, #184]	; 11e58 <sprintf@plt+0x764>
   11d9c:	add	r0, pc, r0
   11da0:	bl	11400 <rb_helper_child@plt>
   11da4:	mov	r2, r0
   11da8:	ldr	r3, [pc, #172]	; 11e5c <sprintf@plt+0x768>
   11dac:	ldr	r3, [r4, r3]
   11db0:	str	r2, [r3]
   11db4:	ldr	r3, [pc, #160]	; 11e5c <sprintf@plt+0x768>
   11db8:	ldr	r3, [r4, r3]
   11dbc:	ldr	r3, [r3]
   11dc0:	cmp	r3, #0
   11dc4:	bne	11df0 <sprintf@plt+0x6fc>
   11dc8:	ldr	r3, [pc, #144]	; 11e60 <sprintf@plt+0x76c>
   11dcc:	ldr	r3, [r4, r3]
   11dd0:	ldr	r3, [r3]
   11dd4:	mov	r2, #46	; 0x2e
   11dd8:	mov	r1, #1
   11ddc:	ldr	r0, [pc, #128]	; 11e64 <sprintf@plt+0x770>
   11de0:	add	r0, pc, r0
   11de4:	bl	115a4 <fwrite@plt>
   11de8:	mov	r0, #1
   11dec:	bl	116dc <exit@plt>
   11df0:	bl	115ec <rb_set_time@plt>
   11df4:	bl	11c60 <sprintf@plt+0x56c>
   11df8:	ldr	r3, [pc, #104]	; 11e68 <sprintf@plt+0x774>
   11dfc:	ldr	r3, [r4, r3]
   11e00:	mov	r1, r3
   11e04:	ldr	r3, [pc, #96]	; 11e6c <sprintf@plt+0x778>
   11e08:	add	r3, pc, r3
   11e0c:	mov	r0, r3
   11e10:	bl	11634 <rb_dictionary_create@plt>
   11e14:	mov	r2, r0
   11e18:	ldr	r3, [pc, #80]	; 11e70 <sprintf@plt+0x77c>
   11e1c:	ldr	r3, [r4, r3]
   11e20:	str	r2, [r3]
   11e24:	bl	149c4 <sprintf@plt+0x32d0>
   11e28:	bl	13190 <sprintf@plt+0x1a9c>
   11e2c:	mov	r1, #1
   11e30:	mov	r0, #0
   11e34:	bl	115b0 <rb_init_prng@plt>
   11e38:	ldr	r3, [pc, #28]	; 11e5c <sprintf@plt+0x768>
   11e3c:	ldr	r3, [r4, r3]
   11e40:	ldr	r3, [r3]
   11e44:	mov	r1, #0
   11e48:	mov	r0, r3
   11e4c:	bl	112f8 <rb_helper_loop@plt>
   11e50:	muleq	r1, r8, r2
   11e54:			; <UNDEFINED> instruction: 0xfffffe8c
   11e58:			; <UNDEFINED> instruction: 0xfffffd9c
   11e5c:	andeq	r0, r0, r8, lsr #3
   11e60:	andeq	r0, r0, r4, lsr #3
   11e64:	andeq	ip, r0, r0, asr #21
   11e68:	muleq	r0, r0, r1
   11e6c:	andeq	ip, r0, r8, asr #21
   11e70:	muleq	r0, r4, r1
   11e74:	push	{fp, lr}
   11e78:	add	fp, sp, #4
   11e7c:	sub	sp, sp, #16
   11e80:	str	r0, [fp, #-16]
   11e84:	ldr	r1, [fp, #-16]
   11e88:	mov	r0, #1
   11e8c:	bl	113f4 <calloc@plt>
   11e90:	mov	r3, r0
   11e94:	str	r3, [fp, #-8]
   11e98:	ldr	r3, [fp, #-8]
   11e9c:	cmp	r3, #0
   11ea0:	moveq	r3, #1
   11ea4:	movne	r3, #0
   11ea8:	uxtb	r3, r3
   11eac:	cmp	r3, #0
   11eb0:	beq	11eb8 <sprintf@plt+0x7c4>
   11eb4:	bl	115c8 <rb_outofmemory@plt>
   11eb8:	ldr	r3, [fp, #-8]
   11ebc:	mov	r0, r3
   11ec0:	sub	sp, fp, #4
   11ec4:	pop	{fp, pc}
   11ec8:	push	{fp, lr}
   11ecc:	add	fp, sp, #4
   11ed0:	sub	sp, sp, #16
   11ed4:	str	r0, [fp, #-16]
   11ed8:	ldr	r0, [fp, #-16]
   11edc:	bl	114f0 <strlen@plt>
   11ee0:	mov	r3, r0
   11ee4:	add	r3, r3, #1
   11ee8:	mov	r0, r3
   11eec:	bl	115f8 <malloc@plt>
   11ef0:	mov	r3, r0
   11ef4:	str	r3, [fp, #-8]
   11ef8:	ldr	r3, [fp, #-8]
   11efc:	cmp	r3, #0
   11f00:	moveq	r3, #1
   11f04:	movne	r3, #0
   11f08:	uxtb	r3, r3
   11f0c:	cmp	r3, #0
   11f10:	beq	11f18 <sprintf@plt+0x824>
   11f14:	bl	115c8 <rb_outofmemory@plt>
   11f18:	ldr	r1, [fp, #-16]
   11f1c:	ldr	r0, [fp, #-8]
   11f20:	bl	11550 <strcpy@plt>
   11f24:	ldr	r3, [fp, #-8]
   11f28:	mov	r0, r3
   11f2c:	sub	sp, fp, #4
   11f30:	pop	{fp, pc}
   11f34:	push	{fp, lr}
   11f38:	add	fp, sp, #4
   11f3c:	sub	sp, sp, #8
   11f40:	str	r0, [fp, #-8]
   11f44:	ldr	r3, [fp, #-8]
   11f48:	cmp	r3, #0
   11f4c:	movne	r3, #1
   11f50:	moveq	r3, #0
   11f54:	uxtb	r3, r3
   11f58:	cmp	r3, #0
   11f5c:	beq	11f68 <sprintf@plt+0x874>
   11f60:	ldr	r0, [fp, #-8]
   11f64:	bl	11490 <free@plt>
   11f68:	nop			; (mov r0, r0)
   11f6c:	sub	sp, fp, #4
   11f70:	pop	{fp, pc}
   11f74:	push	{r4, fp, lr}
   11f78:	add	fp, sp, #8
   11f7c:	sub	sp, sp, #28
   11f80:	str	r0, [fp, #-24]	; 0xffffffe8
   11f84:	str	r1, [fp, #-28]	; 0xffffffe4
   11f88:	str	r2, [fp, #-32]	; 0xffffffe0
   11f8c:	str	r3, [fp, #-36]	; 0xffffffdc
   11f90:	ldr	r4, [pc, #228]	; 1207c <sprintf@plt+0x988>
   11f94:	add	r4, pc, r4
   11f98:	mov	r0, #160	; 0xa0
   11f9c:	bl	11e74 <sprintf@plt+0x780>
   11fa0:	str	r0, [fp, #-20]	; 0xffffffec
   11fa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fa8:	cmp	r3, #2
   11fac:	bne	11fc8 <sprintf@plt+0x8d4>
   11fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11fb4:	mov	r2, #52	; 0x34
   11fb8:	str	r2, [r3, #8]
   11fbc:	mov	r3, #1
   11fc0:	str	r3, [fp, #-16]
   11fc4:	b	11ffc <sprintf@plt+0x908>
   11fc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fcc:	cmp	r3, #10
   11fd0:	bne	11fec <sprintf@plt+0x8f8>
   11fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11fd8:	mov	r2, #54	; 0x36
   11fdc:	str	r2, [r3, #8]
   11fe0:	mov	r3, #28
   11fe4:	str	r3, [fp, #-16]
   11fe8:	b	11ffc <sprintf@plt+0x908>
   11fec:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ff0:	bl	11f34 <sprintf@plt+0x840>
   11ff4:	mov	r3, #0
   11ff8:	b	12070 <sprintf@plt+0x97c>
   11ffc:	ldr	r3, [pc, #124]	; 12080 <sprintf@plt+0x98c>
   12000:	ldr	r3, [r4, r3]
   12004:	ldrd	r2, [r3]
   12008:	adds	r0, r2, #1
   1200c:	adc	r1, r3, #0
   12010:	ldr	ip, [pc, #104]	; 12080 <sprintf@plt+0x98c>
   12014:	ldr	ip, [r4, ip]
   12018:	strd	r0, [ip]
   1201c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12020:	strd	r2, [r1, #144]	; 0x90
   12024:	ldr	r3, [fp, #-20]	; 0xffffffec
   12028:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1202c:	str	r2, [r3, #152]	; 0x98
   12030:	ldr	r3, [fp, #-20]	; 0xffffffec
   12034:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12038:	str	r2, [r3, #156]	; 0x9c
   1203c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12040:	ldr	r2, [fp, #-20]	; 0xffffffec
   12044:	str	r2, [r3]
   12048:	ldr	r3, [fp, #-20]	; 0xffffffec
   1204c:	ldr	r2, [pc, #48]	; 12084 <sprintf@plt+0x990>
   12050:	add	r2, pc, r2
   12054:	str	r2, [r3, #4]
   12058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1205c:	ldr	r2, [fp, #-16]
   12060:	mov	r1, r3
   12064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12068:	bl	14fe8 <sprintf@plt+0x38f4>
   1206c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12070:	mov	r0, r3
   12074:	sub	sp, fp, #8
   12078:	pop	{r4, fp, pc}
   1207c:	andeq	lr, r1, r4, rrx
   12080:			; <UNDEFINED> instruction: 0x000001b0
   12084:	andeq	r0, r0, ip, lsr #3
   12088:	push	{r4, fp, lr}
   1208c:	add	fp, sp, #8
   12090:	sub	sp, sp, #28
   12094:	str	r0, [fp, #-24]	; 0xffffffe8
   12098:	str	r1, [fp, #-28]	; 0xffffffe4
   1209c:	str	r2, [fp, #-32]	; 0xffffffe0
   120a0:	ldr	r4, [pc, #280]	; 121c0 <sprintf@plt+0xacc>
   120a4:	add	r4, pc, r4
   120a8:	mov	r0, #160	; 0xa0
   120ac:	bl	11e74 <sprintf@plt+0x780>
   120b0:	str	r0, [fp, #-16]
   120b4:	ldr	r3, [fp, #-16]
   120b8:	add	r3, r3, #12
   120bc:	mov	r1, r3
   120c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120c4:	bl	114e4 <rb_inet_pton_sock@plt>
   120c8:	mov	r3, r0
   120cc:	cmp	r3, #0
   120d0:	bne	120e4 <sprintf@plt+0x9f0>
   120d4:	ldr	r0, [fp, #-16]
   120d8:	bl	11f34 <sprintf@plt+0x840>
   120dc:	mov	r3, #0
   120e0:	b	121b4 <sprintf@plt+0xac0>
   120e4:	ldr	r3, [fp, #-16]
   120e8:	add	r3, r3, #12
   120ec:	ldrh	r3, [r3]
   120f0:	str	r3, [fp, #-20]	; 0xffffffec
   120f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   120f8:	cmp	r3, #2
   120fc:	bne	12110 <sprintf@plt+0xa1c>
   12100:	ldr	r3, [fp, #-16]
   12104:	mov	r2, #82	; 0x52
   12108:	str	r2, [r3, #8]
   1210c:	b	1213c <sprintf@plt+0xa48>
   12110:	ldr	r3, [fp, #-20]	; 0xffffffec
   12114:	cmp	r3, #10
   12118:	bne	1212c <sprintf@plt+0xa38>
   1211c:	ldr	r3, [fp, #-16]
   12120:	mov	r2, #83	; 0x53
   12124:	str	r2, [r3, #8]
   12128:	b	1213c <sprintf@plt+0xa48>
   1212c:	ldr	r0, [fp, #-16]
   12130:	bl	11f34 <sprintf@plt+0x840>
   12134:	mov	r3, #0
   12138:	b	121b4 <sprintf@plt+0xac0>
   1213c:	ldr	r3, [pc, #128]	; 121c4 <sprintf@plt+0xad0>
   12140:	ldr	r3, [r4, r3]
   12144:	ldrd	r2, [r3]
   12148:	adds	r0, r2, #1
   1214c:	adc	r1, r3, #0
   12150:	ldr	ip, [pc, #108]	; 121c4 <sprintf@plt+0xad0>
   12154:	ldr	ip, [r4, ip]
   12158:	strd	r0, [ip]
   1215c:	ldr	r1, [fp, #-16]
   12160:	strd	r2, [r1, #144]	; 0x90
   12164:	ldr	r3, [fp, #-16]
   12168:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1216c:	str	r2, [r3, #152]	; 0x98
   12170:	ldr	r3, [fp, #-16]
   12174:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12178:	str	r2, [r3, #156]	; 0x9c
   1217c:	ldr	r3, [fp, #-16]
   12180:	ldr	r2, [fp, #-16]
   12184:	str	r2, [r3]
   12188:	ldr	r3, [fp, #-16]
   1218c:	ldr	r2, [pc, #52]	; 121c8 <sprintf@plt+0xad4>
   12190:	add	r2, pc, r2
   12194:	str	r2, [r3, #4]
   12198:	ldr	r3, [fp, #-16]
   1219c:	add	r3, r3, #12
   121a0:	ldr	r2, [fp, #-16]
   121a4:	mov	r1, r2
   121a8:	mov	r0, r3
   121ac:	bl	150f0 <sprintf@plt+0x39fc>
   121b0:	ldr	r3, [fp, #-16]
   121b4:	mov	r0, r3
   121b8:	sub	sp, fp, #8
   121bc:	pop	{r4, fp, pc}
   121c0:	andeq	sp, r1, r4, asr pc
   121c4:			; <UNDEFINED> instruction: 0x000001b0
   121c8:	andeq	r0, r0, r8, lsr #4
   121cc:	push	{fp}		; (str fp, [sp, #-4]!)
   121d0:	add	fp, sp, #0
   121d4:	sub	sp, sp, #12
   121d8:	str	r0, [fp, #-8]
   121dc:	ldr	r3, [fp, #-8]
   121e0:	mov	r2, #0
   121e4:	str	r2, [r3, #156]	; 0x9c
   121e8:	ldr	r3, [fp, #-8]
   121ec:	mov	r2, #0
   121f0:	str	r2, [r3, #152]	; 0x98
   121f4:	nop			; (mov r0, r0)
   121f8:	add	sp, fp, #0
   121fc:	pop	{fp}		; (ldr fp, [sp], #4)
   12200:	bx	lr
   12204:	push	{r4, fp, lr}
   12208:	add	fp, sp, #8
   1220c:	sub	sp, sp, #76	; 0x4c
   12210:	str	r0, [fp, #-80]	; 0xffffffb0
   12214:	str	r1, [fp, #-84]	; 0xffffffac
   12218:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1221c:	str	r3, [fp, #-16]
   12220:	mov	r3, #42	; 0x2a
   12224:	str	r3, [fp, #-72]	; 0xffffffb8
   12228:	sub	r3, fp, #68	; 0x44
   1222c:	mov	r2, #49	; 0x31
   12230:	mov	r1, #0
   12234:	mov	r0, r3
   12238:	bl	11430 <memset@plt>
   1223c:	ldr	r3, [fp, #-16]
   12240:	cmp	r3, #0
   12244:	bne	12264 <sprintf@plt+0xb70>
   12248:	ldr	r3, [pc, #360]	; 123b8 <sprintf@plt+0xcc4>
   1224c:	add	r3, pc, r3
   12250:	mov	r1, r3
   12254:	mov	r0, #67	; 0x43
   12258:	bl	12a60 <sprintf@plt+0x136c>
   1225c:	mov	r0, #2
   12260:	bl	116dc <exit@plt>
   12264:	ldr	r3, [fp, #-84]	; 0xffffffac
   12268:	cmp	r3, #0
   1226c:	beq	1234c <sprintf@plt+0xc58>
   12270:	ldr	r3, [fp, #-16]
   12274:	ldr	r3, [r3, #8]
   12278:	cmp	r3, #52	; 0x34
   1227c:	beq	1228c <sprintf@plt+0xb98>
   12280:	cmp	r3, #54	; 0x36
   12284:	beq	122bc <sprintf@plt+0xbc8>
   12288:	b	12324 <sprintf@plt+0xc30>
   1228c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12290:	add	r3, r3, #4
   12294:	ldrh	r3, [r3]
   12298:	cmp	r3, #2
   1229c:	bne	12354 <sprintf@plt+0xc60>
   122a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   122a4:	add	r3, r3, #4
   122a8:	sub	r1, fp, #72	; 0x48
   122ac:	mov	r2, #53	; 0x35
   122b0:	mov	r0, r3
   122b4:	bl	1161c <rb_inet_ntop_sock@plt>
   122b8:	b	12354 <sprintf@plt+0xc60>
   122bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   122c0:	add	r3, r3, #4
   122c4:	ldrh	r3, [r3]
   122c8:	cmp	r3, #10
   122cc:	bne	1235c <sprintf@plt+0xc68>
   122d0:	ldr	r3, [fp, #-84]	; 0xffffffac
   122d4:	add	r3, r3, #4
   122d8:	sub	r1, fp, #72	; 0x48
   122dc:	mov	r2, #53	; 0x35
   122e0:	mov	r0, r3
   122e4:	bl	1161c <rb_inet_ntop_sock@plt>
   122e8:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   122ec:	cmp	r3, #58	; 0x3a
   122f0:	bne	1235c <sprintf@plt+0xc68>
   122f4:	sub	r3, fp, #72	; 0x48
   122f8:	mov	r0, r3
   122fc:	bl	114f0 <strlen@plt>
   12300:	mov	r2, r0
   12304:	sub	r1, fp, #72	; 0x48
   12308:	sub	r3, fp, #72	; 0x48
   1230c:	add	r3, r3, #1
   12310:	mov	r0, r3
   12314:	bl	11640 <memmove@plt>
   12318:	mov	r3, #48	; 0x30
   1231c:	strb	r3, [fp, #-72]	; 0xffffffb8
   12320:	b	1235c <sprintf@plt+0xc68>
   12324:	ldr	r3, [fp, #-16]
   12328:	ldr	r3, [r3, #8]
   1232c:	mov	r2, r3
   12330:	ldr	r3, [pc, #132]	; 123bc <sprintf@plt+0xcc8>
   12334:	add	r3, pc, r3
   12338:	mov	r1, r3
   1233c:	mov	r0, #67	; 0x43
   12340:	bl	12a60 <sprintf@plt+0x136c>
   12344:	mov	r0, #2
   12348:	bl	116dc <exit@plt>
   1234c:	nop			; (mov r0, r0)
   12350:	b	12360 <sprintf@plt+0xc6c>
   12354:	nop			; (mov r0, r0)
   12358:	b	12360 <sprintf@plt+0xc6c>
   1235c:	nop			; (mov r0, r0)
   12360:	ldr	r3, [fp, #-16]
   12364:	ldr	r3, [r3, #152]	; 0x98
   12368:	cmp	r3, #0
   1236c:	beq	123a4 <sprintf@plt+0xcb0>
   12370:	ldr	r3, [fp, #-16]
   12374:	ldr	r4, [r3, #152]	; 0x98
   12378:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   1237c:	cmp	r3, #42	; 0x2a
   12380:	movne	r3, #1
   12384:	moveq	r3, #0
   12388:	uxtb	r1, r3
   1238c:	ldr	r3, [fp, #-16]
   12390:	ldr	r2, [r3, #8]
   12394:	ldr	r3, [fp, #-16]
   12398:	ldr	r3, [r3, #156]	; 0x9c
   1239c:	sub	r0, fp, #72	; 0x48
   123a0:	blx	r4
   123a4:	ldr	r0, [fp, #-16]
   123a8:	bl	11f34 <sprintf@plt+0x840>
   123ac:	nop			; (mov r0, r0)
   123b0:	sub	sp, fp, #8
   123b4:	pop	{r4, fp, pc}
   123b8:	muleq	r0, ip, r6
   123bc:	andeq	ip, r0, r0, ror #11
   123c0:	push	{r4, fp, lr}
   123c4:	add	fp, sp, #8
   123c8:	sub	sp, sp, #36	; 0x24
   123cc:	str	r0, [fp, #-40]	; 0xffffffd8
   123d0:	str	r1, [fp, #-44]	; 0xffffffd4
   123d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   123d8:	str	r3, [fp, #-20]	; 0xffffffec
   123dc:	mov	r3, #0
   123e0:	str	r3, [fp, #-16]
   123e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   123e8:	cmp	r3, #0
   123ec:	bne	1240c <sprintf@plt+0xd18>
   123f0:	ldr	r3, [pc, #340]	; 1254c <sprintf@plt+0xe58>
   123f4:	add	r3, pc, r3
   123f8:	mov	r1, r3
   123fc:	mov	r0, #67	; 0x43
   12400:	bl	12a60 <sprintf@plt+0x136c>
   12404:	mov	r0, #2
   12408:	bl	116dc <exit@plt>
   1240c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12410:	cmp	r3, #0
   12414:	beq	124f0 <sprintf@plt+0xdfc>
   12418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1241c:	ldr	r3, [r3, #8]
   12420:	cmp	r3, #82	; 0x52
   12424:	bne	12468 <sprintf@plt+0xd74>
   12428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1242c:	add	r3, r3, #12
   12430:	str	r3, [fp, #-24]	; 0xffffffe8
   12434:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12438:	add	r3, r3, #4
   1243c:	str	r3, [fp, #-28]	; 0xffffffe4
   12440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12444:	ldr	r2, [r3, #4]
   12448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1244c:	ldr	r3, [r3, #4]
   12450:	cmp	r2, r3
   12454:	bne	124f4 <sprintf@plt+0xe00>
   12458:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1245c:	ldr	r3, [r3]
   12460:	str	r3, [fp, #-16]
   12464:	b	124f4 <sprintf@plt+0xe00>
   12468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1246c:	ldr	r3, [r3, #8]
   12470:	cmp	r3, #83	; 0x53
   12474:	bne	124c8 <sprintf@plt+0xdd4>
   12478:	ldr	r3, [fp, #-20]	; 0xffffffec
   1247c:	add	r3, r3, #12
   12480:	str	r3, [fp, #-32]	; 0xffffffe0
   12484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12488:	add	r3, r3, #4
   1248c:	str	r3, [fp, #-36]	; 0xffffffdc
   12490:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12494:	add	r0, r3, #8
   12498:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1249c:	add	r3, r3, #8
   124a0:	mov	r2, #16
   124a4:	mov	r1, r3
   124a8:	bl	1134c <memcmp@plt>
   124ac:	mov	r3, r0
   124b0:	cmp	r3, #0
   124b4:	bne	124f4 <sprintf@plt+0xe00>
   124b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124bc:	ldr	r3, [r3]
   124c0:	str	r3, [fp, #-16]
   124c4:	b	124f4 <sprintf@plt+0xe00>
   124c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124cc:	ldr	r3, [r3, #8]
   124d0:	mov	r2, r3
   124d4:	ldr	r3, [pc, #116]	; 12550 <sprintf@plt+0xe5c>
   124d8:	add	r3, pc, r3
   124dc:	mov	r1, r3
   124e0:	mov	r0, #67	; 0x43
   124e4:	bl	12a60 <sprintf@plt+0x136c>
   124e8:	mov	r0, #2
   124ec:	bl	116dc <exit@plt>
   124f0:	nop			; (mov r0, r0)
   124f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   124f8:	ldr	r3, [r3, #152]	; 0x98
   124fc:	cmp	r3, #0
   12500:	beq	12538 <sprintf@plt+0xe44>
   12504:	ldr	r3, [fp, #-20]	; 0xffffffec
   12508:	ldr	r4, [r3, #152]	; 0x98
   1250c:	ldr	r3, [fp, #-16]
   12510:	cmp	r3, #0
   12514:	movne	r3, #1
   12518:	moveq	r3, #0
   1251c:	uxtb	r1, r3
   12520:	ldr	r3, [fp, #-20]	; 0xffffffec
   12524:	ldr	r2, [r3, #8]
   12528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1252c:	ldr	r3, [r3, #156]	; 0x9c
   12530:	ldr	r0, [fp, #-16]
   12534:	blx	r4
   12538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1253c:	bl	11f34 <sprintf@plt+0x840>
   12540:	nop			; (mov r0, r0)
   12544:	sub	sp, fp, #8
   12548:	pop	{r4, fp, pc}
   1254c:	andeq	ip, r0, r4, asr r5
   12550:	andeq	ip, r0, r4, lsr #9
   12554:	push	{fp, lr}
   12558:	add	fp, sp, #4
   1255c:	sub	sp, sp, #32
   12560:	str	r0, [fp, #-16]
   12564:	str	r2, [fp, #-24]	; 0xffffffe8
   12568:	str	r3, [fp, #-28]	; 0xffffffe4
   1256c:	mov	r3, r1
   12570:	strb	r3, [fp, #-17]	; 0xffffffef
   12574:	ldr	r3, [pc, #192]	; 1263c <sprintf@plt+0xf48>
   12578:	add	r3, pc, r3
   1257c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12580:	str	r2, [fp, #-8]
   12584:	ldr	r2, [fp, #-8]
   12588:	cmp	r2, #0
   1258c:	beq	1259c <sprintf@plt+0xea8>
   12590:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12594:	cmp	r2, #0
   12598:	bne	125b8 <sprintf@plt+0xec4>
   1259c:	ldr	r3, [pc, #156]	; 12640 <sprintf@plt+0xf4c>
   125a0:	add	r3, pc, r3
   125a4:	mov	r1, r3
   125a8:	mov	r0, #67	; 0x43
   125ac:	bl	12a60 <sprintf@plt+0x136c>
   125b0:	mov	r0, #2
   125b4:	bl	116dc <exit@plt>
   125b8:	ldr	r2, [fp, #-16]
   125bc:	cmp	r2, #0
   125c0:	beq	125d8 <sprintf@plt+0xee4>
   125c4:	ldrb	r2, [fp, #-17]	; 0xffffffef
   125c8:	eor	r2, r2, #1
   125cc:	uxtb	r2, r2
   125d0:	cmp	r2, #0
   125d4:	beq	12604 <sprintf@plt+0xf10>
   125d8:	ldr	r2, [pc, #100]	; 12644 <sprintf@plt+0xf50>
   125dc:	ldr	r3, [r3, r2]
   125e0:	ldr	r0, [r3]
   125e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125e8:	ldr	r2, [fp, #-8]
   125ec:	ldr	r1, [pc, #84]	; 12648 <sprintf@plt+0xf54>
   125f0:	add	r1, pc, r1
   125f4:	bl	11658 <rb_helper_write@plt>
   125f8:	ldr	r0, [fp, #-8]
   125fc:	bl	11f34 <sprintf@plt+0x840>
   12600:	b	12634 <sprintf@plt+0xf40>
   12604:	ldr	r2, [pc, #56]	; 12644 <sprintf@plt+0xf50>
   12608:	ldr	r3, [r3, r2]
   1260c:	ldr	r0, [r3]
   12610:	ldr	r3, [fp, #-16]
   12614:	str	r3, [sp]
   12618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1261c:	ldr	r2, [fp, #-8]
   12620:	ldr	r1, [pc, #36]	; 1264c <sprintf@plt+0xf58>
   12624:	add	r1, pc, r1
   12628:	bl	11658 <rb_helper_write@plt>
   1262c:	ldr	r0, [fp, #-8]
   12630:	bl	11f34 <sprintf@plt+0x840>
   12634:	sub	sp, fp, #4
   12638:	pop	{fp, pc}
   1263c:	andeq	sp, r1, r0, lsl #21
   12640:	andeq	ip, r0, r8, lsl r4
   12644:	andeq	r0, r0, r8, lsr #3
   12648:	strdeq	ip, [r0], -r4
   1264c:	andeq	ip, r0, ip, asr #7
   12650:	push	{fp, lr}
   12654:	add	fp, sp, #4
   12658:	sub	sp, sp, #24
   1265c:	str	r0, [fp, #-24]	; 0xffffffe8
   12660:	str	r1, [fp, #-28]	; 0xffffffe4
   12664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12668:	add	r3, r3, #4
   1266c:	ldr	r3, [r3]
   12670:	mov	r0, r3
   12674:	bl	11ec8 <sprintf@plt+0x7d4>
   12678:	str	r0, [fp, #-12]
   1267c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12680:	add	r3, r3, #8
   12684:	ldr	r3, [r3]
   12688:	ldrb	r3, [r3]
   1268c:	strb	r3, [fp, #-13]
   12690:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12694:	ldr	r3, [r3, #12]
   12698:	str	r3, [fp, #-20]	; 0xffffffec
   1269c:	mov	r3, #2
   126a0:	str	r3, [fp, #-8]
   126a4:	ldrb	r3, [fp, #-13]
   126a8:	sub	r3, r3, #52	; 0x34
   126ac:	cmp	r3, #31
   126b0:	addls	pc, pc, r3, lsl #2
   126b4:	b	127b8 <sprintf@plt+0x10c4>
   126b8:	b	12740 <sprintf@plt+0x104c>
   126bc:	b	127b8 <sprintf@plt+0x10c4>
   126c0:	b	12738 <sprintf@plt+0x1044>
   126c4:	b	127b8 <sprintf@plt+0x10c4>
   126c8:	b	127b8 <sprintf@plt+0x10c4>
   126cc:	b	127b8 <sprintf@plt+0x10c4>
   126d0:	b	127b8 <sprintf@plt+0x10c4>
   126d4:	b	127b8 <sprintf@plt+0x10c4>
   126d8:	b	127b8 <sprintf@plt+0x10c4>
   126dc:	b	127b8 <sprintf@plt+0x10c4>
   126e0:	b	127b8 <sprintf@plt+0x10c4>
   126e4:	b	127b8 <sprintf@plt+0x10c4>
   126e8:	b	127b8 <sprintf@plt+0x10c4>
   126ec:	b	127b8 <sprintf@plt+0x10c4>
   126f0:	b	127b8 <sprintf@plt+0x10c4>
   126f4:	b	127b8 <sprintf@plt+0x10c4>
   126f8:	b	127b8 <sprintf@plt+0x10c4>
   126fc:	b	127b8 <sprintf@plt+0x10c4>
   12700:	b	127b8 <sprintf@plt+0x10c4>
   12704:	b	127b8 <sprintf@plt+0x10c4>
   12708:	b	127b8 <sprintf@plt+0x10c4>
   1270c:	b	127b8 <sprintf@plt+0x10c4>
   12710:	b	127b8 <sprintf@plt+0x10c4>
   12714:	b	127b8 <sprintf@plt+0x10c4>
   12718:	b	127b8 <sprintf@plt+0x10c4>
   1271c:	b	127b8 <sprintf@plt+0x10c4>
   12720:	b	127b8 <sprintf@plt+0x10c4>
   12724:	b	127b8 <sprintf@plt+0x10c4>
   12728:	b	127b8 <sprintf@plt+0x10c4>
   1272c:	b	127b8 <sprintf@plt+0x10c4>
   12730:	b	1277c <sprintf@plt+0x1088>
   12734:	b	1277c <sprintf@plt+0x1088>
   12738:	mov	r3, #10
   1273c:	str	r3, [fp, #-8]
   12740:	ldr	r3, [fp, #-12]
   12744:	ldr	r2, [pc, #168]	; 127f4 <sprintf@plt+0x1100>
   12748:	add	r2, pc, r2
   1274c:	ldr	r1, [fp, #-8]
   12750:	ldr	r0, [fp, #-20]	; 0xffffffec
   12754:	bl	11f74 <sprintf@plt+0x880>
   12758:	mov	r3, r0
   1275c:	cmp	r3, #0
   12760:	bne	127dc <sprintf@plt+0x10e8>
   12764:	ldrb	r2, [fp, #-13]
   12768:	mov	r3, #0
   1276c:	mov	r1, #0
   12770:	mov	r0, #0
   12774:	bl	12554 <sprintf@plt+0xe60>
   12778:	b	127dc <sprintf@plt+0x10e8>
   1277c:	ldr	r2, [fp, #-12]
   12780:	ldr	r3, [pc, #112]	; 127f8 <sprintf@plt+0x1104>
   12784:	add	r3, pc, r3
   12788:	mov	r1, r3
   1278c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12790:	bl	12088 <sprintf@plt+0x994>
   12794:	mov	r3, r0
   12798:	cmp	r3, #0
   1279c:	bne	127e4 <sprintf@plt+0x10f0>
   127a0:	ldrb	r2, [fp, #-13]
   127a4:	mov	r3, #0
   127a8:	mov	r1, #0
   127ac:	mov	r0, #0
   127b0:	bl	12554 <sprintf@plt+0xe60>
   127b4:	b	127e4 <sprintf@plt+0x10f0>
   127b8:	ldrb	r3, [fp, #-13]
   127bc:	mov	r2, r3
   127c0:	ldr	r3, [pc, #52]	; 127fc <sprintf@plt+0x1108>
   127c4:	add	r3, pc, r3
   127c8:	mov	r1, r3
   127cc:	mov	r0, #67	; 0x43
   127d0:	bl	12a60 <sprintf@plt+0x136c>
   127d4:	mov	r0, #2
   127d8:	bl	116dc <exit@plt>
   127dc:	nop			; (mov r0, r0)
   127e0:	b	127e8 <sprintf@plt+0x10f4>
   127e4:	nop			; (mov r0, r0)
   127e8:	nop			; (mov r0, r0)
   127ec:	sub	sp, fp, #4
   127f0:	pop	{fp, pc}
   127f4:			; <UNDEFINED> instruction: 0xfffffe04
   127f8:			; <UNDEFINED> instruction: 0xfffffdc8
   127fc:	andeq	ip, r0, ip, lsr r2
   12800:	push	{r4, fp, lr}
   12804:	add	fp, sp, #8
   12808:	sub	sp, sp, #620	; 0x26c
   1280c:	str	r0, [fp, #-624]	; 0xfffffd90
   12810:	mov	r3, r1
   12814:	strb	r3, [fp, #-625]	; 0xfffffd8f
   12818:	ldr	r4, [pc, #384]	; 129a0 <sprintf@plt+0x12ac>
   1281c:	add	r4, pc, r4
   12820:	mov	r3, #0
   12824:	str	r3, [fp, #-16]
   12828:	ldr	r3, [pc, #372]	; 129a4 <sprintf@plt+0x12b0>
   1282c:	ldr	r3, [r4, r3]
   12830:	ldr	r3, [r3]
   12834:	cmp	r3, #0
   12838:	bne	12870 <sprintf@plt+0x117c>
   1283c:	ldr	r3, [pc, #356]	; 129a8 <sprintf@plt+0x12b4>
   12840:	add	r3, pc, r3
   12844:	mov	r1, r3
   12848:	mov	r0, #67	; 0x43
   1284c:	bl	12a60 <sprintf@plt+0x136c>
   12850:	ldrb	r3, [fp, #-625]	; 0xfffffd8f
   12854:	ldr	r2, [pc, #336]	; 129ac <sprintf@plt+0x12b8>
   12858:	add	r2, pc, r2
   1285c:	mov	r1, r3
   12860:	ldr	r0, [fp, #-624]	; 0xfffffd90
   12864:	bl	12b64 <sprintf@plt+0x1470>
   12868:	mov	r0, #2
   1286c:	bl	116dc <exit@plt>
   12870:	mov	r3, #0
   12874:	str	r3, [fp, #-20]	; 0xffffffec
   12878:	b	12938 <sprintf@plt+0x1244>
   1287c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12880:	lsl	r3, r3, #7
   12884:	ldr	r2, [pc, #292]	; 129b0 <sprintf@plt+0x12bc>
   12888:	ldr	r2, [r4, r2]
   1288c:	add	r3, r3, r2
   12890:	sub	r1, fp, #620	; 0x26c
   12894:	mov	r2, #53	; 0x35
   12898:	mov	r0, r3
   1289c:	bl	1161c <rb_inet_ntop_sock@plt>
   128a0:	ldrb	r3, [fp, #-620]	; 0xfffffd94
   128a4:	cmp	r3, #0
   128a8:	bne	128e0 <sprintf@plt+0x11ec>
   128ac:	ldr	r3, [pc, #256]	; 129b4 <sprintf@plt+0x12c0>
   128b0:	add	r3, pc, r3
   128b4:	mov	r1, r3
   128b8:	mov	r0, #67	; 0x43
   128bc:	bl	12a60 <sprintf@plt+0x136c>
   128c0:	ldrb	r3, [fp, #-625]	; 0xfffffd8f
   128c4:	ldr	r2, [pc, #236]	; 129b8 <sprintf@plt+0x12c4>
   128c8:	add	r2, pc, r2
   128cc:	mov	r1, r3
   128d0:	ldr	r0, [fp, #-624]	; 0xfffffd90
   128d4:	bl	12b64 <sprintf@plt+0x1470>
   128d8:	mov	r0, #2
   128dc:	bl	116dc <exit@plt>
   128e0:	sub	r3, fp, #620	; 0x26c
   128e4:	mov	r0, r3
   128e8:	bl	114f0 <strlen@plt>
   128ec:	mov	r3, r0
   128f0:	add	r3, r3, #1
   128f4:	str	r3, [fp, #-24]	; 0xffffffe8
   128f8:	sub	r2, fp, #564	; 0x234
   128fc:	ldr	r3, [fp, #-16]
   12900:	add	r0, r2, r3
   12904:	ldr	r3, [fp, #-16]
   12908:	rsb	r1, r3, #540	; 0x21c
   1290c:	sub	r3, fp, #620	; 0x26c
   12910:	ldr	r2, [pc, #164]	; 129bc <sprintf@plt+0x12c8>
   12914:	add	r2, pc, r2
   12918:	bl	11688 <snprintf@plt>
   1291c:	ldr	r2, [fp, #-16]
   12920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12924:	add	r3, r2, r3
   12928:	str	r3, [fp, #-16]
   1292c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12930:	add	r3, r3, #1
   12934:	str	r3, [fp, #-20]	; 0xffffffec
   12938:	ldr	r3, [pc, #100]	; 129a4 <sprintf@plt+0x12b0>
   1293c:	ldr	r3, [r4, r3]
   12940:	ldr	r3, [r3]
   12944:	ldr	r2, [fp, #-20]	; 0xffffffec
   12948:	cmp	r2, r3
   1294c:	blt	1287c <sprintf@plt+0x1188>
   12950:	ldr	r3, [fp, #-16]
   12954:	cmp	r3, #0
   12958:	beq	1297c <sprintf@plt+0x1288>
   1295c:	ldr	r3, [fp, #-16]
   12960:	sub	r3, r3, #1
   12964:	str	r3, [fp, #-16]
   12968:	sub	r2, fp, #564	; 0x234
   1296c:	ldr	r3, [fp, #-16]
   12970:	add	r3, r2, r3
   12974:	mov	r2, #0
   12978:	strb	r2, [r3]
   1297c:	sub	r3, fp, #564	; 0x234
   12980:	ldrb	r1, [fp, #-625]	; 0xfffffd8f
   12984:	ldr	r2, [pc, #52]	; 129c0 <sprintf@plt+0x12cc>
   12988:	add	r2, pc, r2
   1298c:	ldr	r0, [fp, #-624]	; 0xfffffd90
   12990:	bl	12ad8 <sprintf@plt+0x13e4>
   12994:	nop			; (mov r0, r0)
   12998:	sub	sp, fp, #8
   1299c:	pop	{r4, fp, pc}
   129a0:	ldrdeq	sp, [r1], -ip
   129a4:	andeq	r0, r0, r0, lsl #3
   129a8:	strdeq	ip, [r0], -r4
   129ac:	strdeq	ip, [r0], -r4
   129b0:	andeq	r0, r0, ip, lsl #3
   129b4:	andeq	ip, r0, ip, lsr #3
   129b8:	andeq	ip, r0, ip, lsr #3
   129bc:	andeq	ip, r0, r4, ror r1
   129c0:	andeq	ip, r0, r4, lsl #2
   129c4:	push	{fp, lr}
   129c8:	add	fp, sp, #4
   129cc:	sub	sp, sp, #8
   129d0:	mov	r3, r0
   129d4:	strb	r3, [fp, #-5]
   129d8:	bl	149d8 <sprintf@plt+0x32e4>
   129dc:	nop			; (mov r0, r0)
   129e0:	sub	sp, fp, #4
   129e4:	pop	{fp, pc}
   129e8:	push	{r1, r2, r3}
   129ec:	push	{r4, fp, lr}
   129f0:	add	fp, sp, #8
   129f4:	sub	sp, sp, #528	; 0x210
   129f8:	str	r0, [fp, #-532]	; 0xfffffdec
   129fc:	ldr	r4, [pc, #80]	; 12a54 <sprintf@plt+0x1360>
   12a00:	add	r4, pc, r4
   12a04:	add	r3, fp, #8
   12a08:	str	r3, [fp, #-524]	; 0xfffffdf4
   12a0c:	sub	r0, fp, #520	; 0x208
   12a10:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   12a14:	ldr	r2, [fp, #4]
   12a18:	mov	r1, #512	; 0x200
   12a1c:	bl	11394 <vsnprintf@plt>
   12a20:	ldr	r3, [pc, #48]	; 12a58 <sprintf@plt+0x1364>
   12a24:	ldr	r3, [r4, r3]
   12a28:	ldr	r0, [r3]
   12a2c:	sub	r3, fp, #520	; 0x208
   12a30:	ldr	r2, [fp, #-532]	; 0xfffffdec
   12a34:	ldr	r1, [pc, #32]	; 12a5c <sprintf@plt+0x1368>
   12a38:	add	r1, pc, r1
   12a3c:	bl	11658 <rb_helper_write@plt>
   12a40:	nop			; (mov r0, r0)
   12a44:	sub	sp, fp, #8
   12a48:	pop	{r4, fp, lr}
   12a4c:	add	sp, sp, #12
   12a50:	bx	lr
   12a54:	strdeq	sp, [r1], -r8
   12a58:	andeq	r0, r0, r8, lsr #3
   12a5c:	andeq	ip, r0, r8, asr r0
   12a60:	push	{r1, r2, r3}
   12a64:	push	{r4, fp, lr}
   12a68:	add	fp, sp, #8
   12a6c:	sub	sp, sp, #528	; 0x210
   12a70:	str	r0, [fp, #-532]	; 0xfffffdec
   12a74:	ldr	r4, [pc, #80]	; 12acc <sprintf@plt+0x13d8>
   12a78:	add	r4, pc, r4
   12a7c:	add	r3, fp, #8
   12a80:	str	r3, [fp, #-524]	; 0xfffffdf4
   12a84:	sub	r0, fp, #520	; 0x208
   12a88:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   12a8c:	ldr	r2, [fp, #4]
   12a90:	mov	r1, #512	; 0x200
   12a94:	bl	11394 <vsnprintf@plt>
   12a98:	ldr	r3, [pc, #48]	; 12ad0 <sprintf@plt+0x13dc>
   12a9c:	ldr	r3, [r4, r3]
   12aa0:	ldr	r0, [r3]
   12aa4:	sub	r3, fp, #520	; 0x208
   12aa8:	ldr	r2, [fp, #-532]	; 0xfffffdec
   12aac:	ldr	r1, [pc, #32]	; 12ad4 <sprintf@plt+0x13e0>
   12ab0:	add	r1, pc, r1
   12ab4:	bl	11658 <rb_helper_write@plt>
   12ab8:	nop			; (mov r0, r0)
   12abc:	sub	sp, fp, #8
   12ac0:	pop	{r4, fp, lr}
   12ac4:	add	sp, sp, #12
   12ac8:	bx	lr
   12acc:	andeq	sp, r1, r0, lsl #11
   12ad0:	andeq	r0, r0, r8, lsr #3
   12ad4:	andeq	fp, r0, ip, ror #31
   12ad8:	push	{r2, r3}
   12adc:	push	{r4, fp, lr}
   12ae0:	add	fp, sp, #8
   12ae4:	sub	sp, sp, #540	; 0x21c
   12ae8:	str	r0, [fp, #-536]	; 0xfffffde8
   12aec:	mov	r3, r1
   12af0:	strb	r3, [fp, #-537]	; 0xfffffde7
   12af4:	ldr	r4, [pc, #92]	; 12b58 <sprintf@plt+0x1464>
   12af8:	add	r4, pc, r4
   12afc:	add	r3, fp, #8
   12b00:	str	r3, [fp, #-528]	; 0xfffffdf0
   12b04:	sub	r0, fp, #524	; 0x20c
   12b08:	ldr	r3, [fp, #-528]	; 0xfffffdf0
   12b0c:	ldr	r2, [fp, #4]
   12b10:	mov	r1, #512	; 0x200
   12b14:	bl	11394 <vsnprintf@plt>
   12b18:	ldr	r3, [pc, #60]	; 12b5c <sprintf@plt+0x1468>
   12b1c:	ldr	r3, [r4, r3]
   12b20:	ldr	r0, [r3]
   12b24:	ldrb	r2, [fp, #-537]	; 0xfffffde7
   12b28:	sub	r3, fp, #524	; 0x20c
   12b2c:	str	r3, [sp]
   12b30:	mov	r3, r2
   12b34:	ldr	r2, [fp, #-536]	; 0xfffffde8
   12b38:	ldr	r1, [pc, #32]	; 12b60 <sprintf@plt+0x146c>
   12b3c:	add	r1, pc, r1
   12b40:	bl	11658 <rb_helper_write@plt>
   12b44:	nop			; (mov r0, r0)
   12b48:	sub	sp, fp, #8
   12b4c:	pop	{r4, fp, lr}
   12b50:	add	sp, sp, #8
   12b54:	bx	lr
   12b58:	andeq	sp, r1, r0, lsl #10
   12b5c:	andeq	r0, r0, r8, lsr #3
   12b60:	andeq	fp, r0, ip, ror #30
   12b64:	push	{r2, r3}
   12b68:	push	{r4, fp, lr}
   12b6c:	add	fp, sp, #8
   12b70:	sub	sp, sp, #540	; 0x21c
   12b74:	str	r0, [fp, #-536]	; 0xfffffde8
   12b78:	mov	r3, r1
   12b7c:	strb	r3, [fp, #-537]	; 0xfffffde7
   12b80:	ldr	r4, [pc, #92]	; 12be4 <sprintf@plt+0x14f0>
   12b84:	add	r4, pc, r4
   12b88:	add	r3, fp, #8
   12b8c:	str	r3, [fp, #-528]	; 0xfffffdf0
   12b90:	sub	r0, fp, #524	; 0x20c
   12b94:	ldr	r3, [fp, #-528]	; 0xfffffdf0
   12b98:	ldr	r2, [fp, #4]
   12b9c:	mov	r1, #512	; 0x200
   12ba0:	bl	11394 <vsnprintf@plt>
   12ba4:	ldr	r3, [pc, #60]	; 12be8 <sprintf@plt+0x14f4>
   12ba8:	ldr	r3, [r4, r3]
   12bac:	ldr	r0, [r3]
   12bb0:	ldrb	r2, [fp, #-537]	; 0xfffffde7
   12bb4:	sub	r3, fp, #524	; 0x20c
   12bb8:	str	r3, [sp]
   12bbc:	mov	r3, r2
   12bc0:	ldr	r2, [fp, #-536]	; 0xfffffde8
   12bc4:	ldr	r1, [pc, #32]	; 12bec <sprintf@plt+0x14f8>
   12bc8:	add	r1, pc, r1
   12bcc:	bl	11658 <rb_helper_write@plt>
   12bd0:	nop			; (mov r0, r0)
   12bd4:	sub	sp, fp, #8
   12bd8:	pop	{r4, fp, lr}
   12bdc:	add	sp, sp, #8
   12be0:	bx	lr
   12be4:	andeq	sp, r1, r4, ror r4
   12be8:	andeq	r0, r0, r8, lsr #3
   12bec:	andeq	fp, r0, ip, ror #29
   12bf0:	push	{fp, lr}
   12bf4:	add	fp, sp, #4
   12bf8:	sub	sp, sp, #8
   12bfc:	str	r0, [fp, #-8]
   12c00:	mov	r3, r1
   12c04:	strb	r3, [fp, #-9]
   12c08:	ldr	r2, [pc, #44]	; 12c3c <sprintf@plt+0x1548>
   12c0c:	add	r2, pc, r2
   12c10:	ldr	r3, [pc, #40]	; 12c40 <sprintf@plt+0x154c>
   12c14:	ldr	r3, [r2, r3]
   12c18:	ldr	r0, [r3]
   12c1c:	ldrb	r3, [fp, #-9]
   12c20:	ldr	r2, [fp, #-8]
   12c24:	ldr	r1, [pc, #24]	; 12c44 <sprintf@plt+0x1550>
   12c28:	add	r1, pc, r1
   12c2c:	bl	11658 <rb_helper_write@plt>
   12c30:	nop			; (mov r0, r0)
   12c34:	sub	sp, fp, #4
   12c38:	pop	{fp, pc}
   12c3c:	andeq	sp, r1, ip, ror #7
   12c40:	andeq	r0, r0, r8, lsr #3
   12c44:	muleq	r0, r8, lr
   12c48:	push	{fp, lr}
   12c4c:	add	fp, sp, #4
   12c50:	sub	sp, sp, #16
   12c54:	str	r0, [fp, #-8]
   12c58:	str	r1, [fp, #-12]
   12c5c:	str	r2, [fp, #-16]
   12c60:	ldr	r3, [fp, #-8]
   12c64:	cmp	r3, #0
   12c68:	bne	12c8c <sprintf@plt+0x1598>
   12c6c:	ldr	r3, [pc, #260]	; 12d78 <sprintf@plt+0x1684>
   12c70:	add	r3, pc, r3
   12c74:	mov	r2, #143	; 0x8f
   12c78:	ldr	r1, [pc, #252]	; 12d7c <sprintf@plt+0x1688>
   12c7c:	add	r1, pc, r1
   12c80:	ldr	r0, [pc, #248]	; 12d80 <sprintf@plt+0x168c>
   12c84:	add	r0, pc, r0
   12c88:	bl	11460 <__assert_fail@plt>
   12c8c:	ldr	r3, [fp, #-12]
   12c90:	cmp	r3, #0
   12c94:	bne	12cb8 <sprintf@plt+0x15c4>
   12c98:	ldr	r3, [pc, #228]	; 12d84 <sprintf@plt+0x1690>
   12c9c:	add	r3, pc, r3
   12ca0:	mov	r2, #144	; 0x90
   12ca4:	ldr	r1, [pc, #220]	; 12d88 <sprintf@plt+0x1694>
   12ca8:	add	r1, pc, r1
   12cac:	ldr	r0, [pc, #216]	; 12d8c <sprintf@plt+0x1698>
   12cb0:	add	r0, pc, r0
   12cb4:	bl	11460 <__assert_fail@plt>
   12cb8:	ldr	r3, [fp, #-16]
   12cbc:	cmp	r3, #0
   12cc0:	bne	12ce4 <sprintf@plt+0x15f0>
   12cc4:	ldr	r3, [pc, #196]	; 12d90 <sprintf@plt+0x169c>
   12cc8:	add	r3, pc, r3
   12ccc:	mov	r2, #145	; 0x91
   12cd0:	ldr	r1, [pc, #188]	; 12d94 <sprintf@plt+0x16a0>
   12cd4:	add	r1, pc, r1
   12cd8:	ldr	r0, [pc, #184]	; 12d98 <sprintf@plt+0x16a4>
   12cdc:	add	r0, pc, r0
   12ce0:	bl	11460 <__assert_fail@plt>
   12ce4:	ldr	r3, [fp, #-12]
   12ce8:	ldr	r2, [fp, #-8]
   12cec:	str	r2, [r3]
   12cf0:	ldr	r3, [fp, #-12]
   12cf4:	mov	r2, #0
   12cf8:	str	r2, [r3, #4]
   12cfc:	ldr	r3, [fp, #-16]
   12d00:	ldr	r2, [r3]
   12d04:	ldr	r3, [fp, #-12]
   12d08:	str	r2, [r3, #8]
   12d0c:	ldr	r3, [fp, #-16]
   12d10:	ldr	r3, [r3]
   12d14:	cmp	r3, #0
   12d18:	beq	12d30 <sprintf@plt+0x163c>
   12d1c:	ldr	r3, [fp, #-16]
   12d20:	ldr	r3, [r3]
   12d24:	ldr	r2, [fp, #-12]
   12d28:	str	r2, [r3, #4]
   12d2c:	b	12d4c <sprintf@plt+0x1658>
   12d30:	ldr	r3, [fp, #-16]
   12d34:	ldr	r3, [r3, #4]
   12d38:	cmp	r3, #0
   12d3c:	bne	12d4c <sprintf@plt+0x1658>
   12d40:	ldr	r3, [fp, #-16]
   12d44:	ldr	r2, [fp, #-12]
   12d48:	str	r2, [r3, #4]
   12d4c:	ldr	r3, [fp, #-16]
   12d50:	ldr	r2, [fp, #-12]
   12d54:	str	r2, [r3]
   12d58:	ldr	r3, [fp, #-16]
   12d5c:	ldr	r3, [r3, #8]
   12d60:	add	r2, r3, #1
   12d64:	ldr	r3, [fp, #-16]
   12d68:	str	r2, [r3, #8]
   12d6c:	nop			; (mov r0, r0)
   12d70:	sub	sp, fp, #4
   12d74:	pop	{fp, pc}
   12d78:	muleq	r0, r8, r0
   12d7c:	andeq	fp, r0, ip, asr #28
   12d80:	andeq	fp, r0, r0, ror #28
   12d84:	andeq	ip, r0, ip, rrx
   12d88:	andeq	fp, r0, r0, lsr #28
   12d8c:	andeq	fp, r0, r4, asr #28
   12d90:	andeq	ip, r0, r0, asr #32
   12d94:	strdeq	fp, [r0], -r4
   12d98:	andeq	fp, r0, r4, lsr #28
   12d9c:	push	{fp, lr}
   12da0:	add	fp, sp, #4
   12da4:	sub	sp, sp, #8
   12da8:	str	r0, [fp, #-8]
   12dac:	str	r1, [fp, #-12]
   12db0:	ldr	r3, [fp, #-8]
   12db4:	cmp	r3, #0
   12db8:	bne	12ddc <sprintf@plt+0x16e8>
   12dbc:	ldr	r3, [pc, #240]	; 12eb4 <sprintf@plt+0x17c0>
   12dc0:	add	r3, pc, r3
   12dc4:	mov	r2, #235	; 0xeb
   12dc8:	ldr	r1, [pc, #232]	; 12eb8 <sprintf@plt+0x17c4>
   12dcc:	add	r1, pc, r1
   12dd0:	ldr	r0, [pc, #228]	; 12ebc <sprintf@plt+0x17c8>
   12dd4:	add	r0, pc, r0
   12dd8:	bl	11460 <__assert_fail@plt>
   12ddc:	ldr	r3, [fp, #-12]
   12de0:	cmp	r3, #0
   12de4:	bne	12e08 <sprintf@plt+0x1714>
   12de8:	ldr	r3, [pc, #208]	; 12ec0 <sprintf@plt+0x17cc>
   12dec:	add	r3, pc, r3
   12df0:	mov	r2, #236	; 0xec
   12df4:	ldr	r1, [pc, #200]	; 12ec4 <sprintf@plt+0x17d0>
   12df8:	add	r1, pc, r1
   12dfc:	ldr	r0, [pc, #196]	; 12ec8 <sprintf@plt+0x17d4>
   12e00:	add	r0, pc, r0
   12e04:	bl	11460 <__assert_fail@plt>
   12e08:	ldr	r3, [fp, #-8]
   12e0c:	ldr	r3, [r3, #8]
   12e10:	cmp	r3, #0
   12e14:	beq	12e30 <sprintf@plt+0x173c>
   12e18:	ldr	r3, [fp, #-8]
   12e1c:	ldr	r3, [r3, #8]
   12e20:	ldr	r2, [fp, #-8]
   12e24:	ldr	r2, [r2, #4]
   12e28:	str	r2, [r3, #4]
   12e2c:	b	12e40 <sprintf@plt+0x174c>
   12e30:	ldr	r3, [fp, #-8]
   12e34:	ldr	r2, [r3, #4]
   12e38:	ldr	r3, [fp, #-12]
   12e3c:	str	r2, [r3, #4]
   12e40:	ldr	r3, [fp, #-8]
   12e44:	ldr	r3, [r3, #4]
   12e48:	cmp	r3, #0
   12e4c:	beq	12e68 <sprintf@plt+0x1774>
   12e50:	ldr	r3, [fp, #-8]
   12e54:	ldr	r3, [r3, #4]
   12e58:	ldr	r2, [fp, #-8]
   12e5c:	ldr	r2, [r2, #8]
   12e60:	str	r2, [r3, #8]
   12e64:	b	12e78 <sprintf@plt+0x1784>
   12e68:	ldr	r3, [fp, #-8]
   12e6c:	ldr	r2, [r3, #8]
   12e70:	ldr	r3, [fp, #-12]
   12e74:	str	r2, [r3]
   12e78:	ldr	r3, [fp, #-8]
   12e7c:	mov	r2, #0
   12e80:	str	r2, [r3, #4]
   12e84:	ldr	r3, [fp, #-8]
   12e88:	ldr	r2, [r3, #4]
   12e8c:	ldr	r3, [fp, #-8]
   12e90:	str	r2, [r3, #8]
   12e94:	ldr	r3, [fp, #-12]
   12e98:	ldr	r3, [r3, #8]
   12e9c:	sub	r2, r3, #1
   12ea0:	ldr	r3, [fp, #-12]
   12ea4:	str	r2, [r3, #8]
   12ea8:	nop			; (mov r0, r0)
   12eac:	sub	sp, fp, #4
   12eb0:	pop	{fp, pc}
   12eb4:	andeq	fp, r0, r8, lsr pc
   12eb8:	strdeq	fp, [r0], -ip
   12ebc:	andeq	fp, r0, r0, lsr #26
   12ec0:	andeq	fp, r0, ip, lsl #30
   12ec4:	ldrdeq	fp, [r0], -r0
   12ec8:	andeq	fp, r0, r0, lsl #26
   12ecc:	push	{fp, lr}
   12ed0:	add	fp, sp, #4
   12ed4:	sub	sp, sp, #16
   12ed8:	str	r0, [fp, #-16]
   12edc:	ldr	r1, [fp, #-16]
   12ee0:	mov	r0, #1
   12ee4:	bl	113f4 <calloc@plt>
   12ee8:	mov	r3, r0
   12eec:	str	r3, [fp, #-8]
   12ef0:	ldr	r3, [fp, #-8]
   12ef4:	cmp	r3, #0
   12ef8:	moveq	r3, #1
   12efc:	movne	r3, #0
   12f00:	uxtb	r3, r3
   12f04:	cmp	r3, #0
   12f08:	beq	12f10 <sprintf@plt+0x181c>
   12f0c:	bl	115c8 <rb_outofmemory@plt>
   12f10:	ldr	r3, [fp, #-8]
   12f14:	mov	r0, r3
   12f18:	sub	sp, fp, #4
   12f1c:	pop	{fp, pc}
   12f20:	push	{fp, lr}
   12f24:	add	fp, sp, #4
   12f28:	sub	sp, sp, #8
   12f2c:	str	r0, [fp, #-8]
   12f30:	ldr	r3, [fp, #-8]
   12f34:	cmp	r3, #0
   12f38:	movne	r3, #1
   12f3c:	moveq	r3, #0
   12f40:	uxtb	r3, r3
   12f44:	cmp	r3, #0
   12f48:	beq	12f54 <sprintf@plt+0x1860>
   12f4c:	ldr	r0, [fp, #-8]
   12f50:	bl	11490 <free@plt>
   12f54:	nop			; (mov r0, r0)
   12f58:	sub	sp, fp, #4
   12f5c:	pop	{fp, pc}
   12f60:	push	{fp}		; (str fp, [sp, #-4]!)
   12f64:	add	fp, sp, #0
   12f68:	sub	sp, sp, #12
   12f6c:	str	r0, [fp, #-8]
   12f70:	str	r1, [fp, #-12]
   12f74:	ldr	r2, [fp, #-12]
   12f78:	ldr	r3, [fp, #-8]
   12f7c:	sub	r3, r2, r3
   12f80:	mov	r0, r3
   12f84:	add	sp, fp, #0
   12f88:	pop	{fp}		; (ldr fp, [sp], #4)
   12f8c:	bx	lr
   12f90:	push	{fp}		; (str fp, [sp, #-4]!)
   12f94:	add	fp, sp, #0
   12f98:	sub	sp, sp, #12
   12f9c:	str	r0, [fp, #-8]
   12fa0:	ldr	r3, [fp, #-8]
   12fa4:	ldr	r3, [r3, #460]	; 0x1cc
   12fa8:	add	r2, r3, #1
   12fac:	ldr	r3, [fp, #-8]
   12fb0:	str	r2, [r3, #460]	; 0x1cc
   12fb4:	nop			; (mov r0, r0)
   12fb8:	add	sp, fp, #0
   12fbc:	pop	{fp}		; (ldr fp, [sp], #4)
   12fc0:	bx	lr
   12fc4:	push	{fp, lr}
   12fc8:	add	fp, sp, #4
   12fcc:	sub	sp, sp, #8
   12fd0:	str	r0, [fp, #-8]
   12fd4:	ldr	r3, [fp, #-8]
   12fd8:	ldr	r3, [r3, #460]	; 0x1cc
   12fdc:	sub	r2, r3, #1
   12fe0:	ldr	r3, [fp, #-8]
   12fe4:	str	r2, [r3, #460]	; 0x1cc
   12fe8:	ldr	r3, [fp, #-8]
   12fec:	ldr	r3, [r3, #460]	; 0x1cc
   12ff0:	cmp	r3, #0
   12ff4:	bne	13000 <sprintf@plt+0x190c>
   12ff8:	ldr	r0, [fp, #-8]
   12ffc:	bl	1370c <sprintf@plt+0x2018>
   13000:	nop			; (mov r0, r0)
   13004:	sub	sp, fp, #4
   13008:	pop	{fp, pc}
   1300c:	push	{fp}		; (str fp, [sp, #-4]!)
   13010:	add	fp, sp, #0
   13014:	sub	sp, sp, #12
   13018:	str	r0, [fp, #-8]
   1301c:	str	r1, [fp, #-12]
   13020:	ldr	r3, [fp, #-8]
   13024:	ldr	r2, [r3, #464]	; 0x1d0
   13028:	ldr	r3, [fp, #-12]
   1302c:	lsl	r3, r3, #4
   13030:	add	r3, r2, r3
   13034:	ldr	r3, [r3, #12]
   13038:	mov	r0, r3
   1303c:	add	sp, fp, #0
   13040:	pop	{fp}		; (ldr fp, [sp], #4)
   13044:	bx	lr
   13048:	push	{fp, lr}
   1304c:	add	fp, sp, #4
   13050:	sub	sp, sp, #8
   13054:	str	r0, [fp, #-8]
   13058:	str	r1, [fp, #-12]
   1305c:	ldr	r1, [fp, #-12]
   13060:	ldr	r0, [fp, #-8]
   13064:	bl	1300c <sprintf@plt+0x1918>
   13068:	mov	r3, r0
   1306c:	cmp	r3, #1
   13070:	moveq	r3, #1
   13074:	movne	r3, #0
   13078:	uxtb	r3, r3
   1307c:	mov	r0, r3
   13080:	sub	sp, fp, #4
   13084:	pop	{fp, pc}
   13088:	push	{fp}		; (str fp, [sp, #-4]!)
   1308c:	add	fp, sp, #0
   13090:	sub	sp, sp, #12
   13094:	str	r0, [fp, #-8]
   13098:	str	r1, [fp, #-12]
   1309c:	ldr	r3, [fp, #-8]
   130a0:	ldr	r2, [r3, #464]	; 0x1d0
   130a4:	ldr	r3, [fp, #-12]
   130a8:	lsl	r3, r3, #4
   130ac:	add	r3, r2, r3
   130b0:	ldr	r3, [r3, #4]
   130b4:	mov	r0, r3
   130b8:	add	sp, fp, #0
   130bc:	pop	{fp}		; (ldr fp, [sp], #4)
   130c0:	bx	lr
   130c4:	push	{fp}		; (str fp, [sp, #-4]!)
   130c8:	add	fp, sp, #0
   130cc:	sub	sp, sp, #20
   130d0:	str	r0, [fp, #-8]
   130d4:	str	r1, [fp, #-12]
   130d8:	str	r2, [fp, #-16]
   130dc:	ldr	r3, [fp, #-8]
   130e0:	ldr	r2, [r3, #464]	; 0x1d0
   130e4:	ldr	r3, [fp, #-12]
   130e8:	lsl	r3, r3, #4
   130ec:	add	r3, r2, r3
   130f0:	ldr	r2, [fp, #-16]
   130f4:	str	r2, [r3, #12]
   130f8:	nop			; (mov r0, r0)
   130fc:	add	sp, fp, #0
   13100:	pop	{fp}		; (ldr fp, [sp], #4)
   13104:	bx	lr
   13108:	push	{fp, lr}
   1310c:	add	fp, sp, #4
   13110:	sub	sp, sp, #8
   13114:	str	r0, [fp, #-8]
   13118:	str	r1, [fp, #-12]
   1311c:	ldr	r3, [fp, #-8]
   13120:	ldr	r3, [r3, #456]	; 0x1c8
   13124:	add	r2, r3, #1
   13128:	ldr	r3, [fp, #-8]
   1312c:	str	r2, [r3, #456]	; 0x1c8
   13130:	mov	r2, #1
   13134:	ldr	r1, [fp, #-12]
   13138:	ldr	r0, [fp, #-8]
   1313c:	bl	130c4 <sprintf@plt+0x19d0>
   13140:	nop			; (mov r0, r0)
   13144:	sub	sp, fp, #4
   13148:	pop	{fp, pc}
   1314c:	push	{fp, lr}
   13150:	add	fp, sp, #4
   13154:	sub	sp, sp, #8
   13158:	str	r0, [fp, #-8]
   1315c:	str	r1, [fp, #-12]
   13160:	mov	r2, #2
   13164:	ldr	r1, [fp, #-12]
   13168:	ldr	r0, [fp, #-8]
   1316c:	bl	130c4 <sprintf@plt+0x19d0>
   13170:	ldr	r3, [fp, #-8]
   13174:	ldr	r3, [r3, #456]	; 0x1c8
   13178:	sub	r2, r3, #1
   1317c:	ldr	r3, [fp, #-8]
   13180:	str	r2, [r3, #456]	; 0x1c8
   13184:	nop			; (mov r0, r0)
   13188:	sub	sp, fp, #4
   1318c:	pop	{fp, pc}
   13190:	push	{r4, r5, fp, lr}
   13194:	add	fp, sp, #12
   13198:	ldr	r4, [pc, #160]	; 13240 <sprintf@plt+0x1b4c>
   1319c:	add	r4, pc, r4
   131a0:	ldr	r3, [pc, #156]	; 13244 <sprintf@plt+0x1b50>
   131a4:	add	r3, pc, r3
   131a8:	mov	r1, r3
   131ac:	ldr	r3, [pc, #148]	; 13248 <sprintf@plt+0x1b54>
   131b0:	add	r3, pc, r3
   131b4:	mov	r0, r3
   131b8:	bl	11634 <rb_dictionary_create@plt>
   131bc:	mov	r2, r0
   131c0:	ldr	r3, [pc, #132]	; 1324c <sprintf@plt+0x1b58>
   131c4:	ldr	r3, [r4, r3]
   131c8:	str	r2, [r3]
   131cc:	mov	r3, #1
   131d0:	mov	r2, #0
   131d4:	ldr	r1, [pc, #116]	; 13250 <sprintf@plt+0x1b5c>
   131d8:	add	r1, pc, r1
   131dc:	ldr	r0, [pc, #112]	; 13254 <sprintf@plt+0x1b60>
   131e0:	add	r0, pc, r0
   131e4:	bl	11310 <rb_event_addish@plt>
   131e8:	mov	r2, r0
   131ec:	ldr	r3, [pc, #100]	; 13258 <sprintf@plt+0x1b64>
   131f0:	add	r3, pc, r3
   131f4:	str	r2, [r3]
   131f8:	ldr	r3, [pc, #92]	; 1325c <sprintf@plt+0x1b68>
   131fc:	ldr	r3, [r4, r3]
   13200:	mov	r0, r3
   13204:	bl	1340c <sprintf@plt+0x1d18>
   13208:	ldr	r3, [pc, #80]	; 13260 <sprintf@plt+0x1b6c>
   1320c:	ldr	r3, [r4, r3]
   13210:	mov	r0, r3
   13214:	bl	1340c <sprintf@plt+0x1d18>
   13218:	ldr	r3, [pc, #68]	; 13264 <sprintf@plt+0x1b70>
   1321c:	ldr	r3, [r4, r3]
   13220:	mov	r0, r3
   13224:	bl	1340c <sprintf@plt+0x1d18>
   13228:	ldr	r3, [pc, #56]	; 13268 <sprintf@plt+0x1b74>
   1322c:	ldr	r3, [r4, r3]
   13230:	mov	r0, r3
   13234:	bl	1340c <sprintf@plt+0x1d18>
   13238:	nop			; (mov r0, r0)
   1323c:	pop	{r4, r5, fp, pc}
   13240:	andeq	ip, r1, ip, asr lr
   13244:			; <UNDEFINED> instruction: 0xfffffdb4
   13248:	andeq	fp, r0, r0, ror #18
   1324c:	andeq	r0, r0, ip, ror #2
   13250:	andeq	r0, r0, r4, ror lr
   13254:	andeq	fp, r0, r8, asr #18
   13258:	andeq	r1, r2, r8, lsl lr
   1325c:	muleq	r0, ip, r1
   13260:	muleq	r0, r8, r1
   13264:	andeq	r0, r0, ip, ror r1
   13268:	andeq	r0, r0, r8, ror r1
   1326c:	push	{r4, fp, lr}
   13270:	add	fp, sp, #8
   13274:	sub	sp, sp, #28
   13278:	ldr	r4, [pc, #372]	; 133f4 <sprintf@plt+0x1d00>
   1327c:	add	r4, pc, r4
   13280:	ldr	r3, [pc, #368]	; 133f8 <sprintf@plt+0x1d04>
   13284:	ldr	r3, [r4, r3]
   13288:	ldr	r3, [r3]
   1328c:	sub	r2, fp, #36	; 0x24
   13290:	mov	r1, r2
   13294:	mov	r0, r3
   13298:	bl	114cc <rb_dictionary_foreach_start@plt>
   1329c:	b	132e8 <sprintf@plt+0x1bf4>
   132a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132a4:	bl	12f90 <sprintf@plt+0x189c>
   132a8:	ldr	r3, [pc, #332]	; 133fc <sprintf@plt+0x1d08>
   132ac:	add	r3, pc, r3
   132b0:	ldr	r2, [pc, #328]	; 13400 <sprintf@plt+0x1d0c>
   132b4:	add	r2, pc, r2
   132b8:	mvn	r1, #0
   132bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132c0:	bl	1392c <sprintf@plt+0x2238>
   132c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132c8:	bl	12fc4 <sprintf@plt+0x18d0>
   132cc:	ldr	r3, [pc, #292]	; 133f8 <sprintf@plt+0x1d04>
   132d0:	ldr	r3, [r4, r3]
   132d4:	ldr	r3, [r3]
   132d8:	sub	r2, fp, #36	; 0x24
   132dc:	mov	r1, r2
   132e0:	mov	r0, r3
   132e4:	bl	11484 <rb_dictionary_foreach_next@plt>
   132e8:	ldr	r3, [pc, #264]	; 133f8 <sprintf@plt+0x1d04>
   132ec:	ldr	r3, [r4, r3]
   132f0:	ldr	r3, [r3]
   132f4:	sub	r2, fp, #36	; 0x24
   132f8:	mov	r1, r2
   132fc:	mov	r0, r3
   13300:	bl	113dc <rb_dictionary_foreach_cur@plt>
   13304:	str	r0, [fp, #-24]	; 0xffffffe8
   13308:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1330c:	cmp	r3, #0
   13310:	bne	132a0 <sprintf@plt+0x1bac>
   13314:	ldr	r3, [pc, #232]	; 13404 <sprintf@plt+0x1d10>
   13318:	ldr	r3, [r4, r3]
   1331c:	ldr	r3, [r3]
   13320:	str	r3, [fp, #-16]
   13324:	ldr	r3, [fp, #-16]
   13328:	cmp	r3, #0
   1332c:	beq	1333c <sprintf@plt+0x1c48>
   13330:	ldr	r3, [fp, #-16]
   13334:	ldr	r3, [r3, #8]
   13338:	b	13340 <sprintf@plt+0x1c4c>
   1333c:	mov	r3, #0
   13340:	str	r3, [fp, #-20]	; 0xffffffec
   13344:	b	133ac <sprintf@plt+0x1cb8>
   13348:	ldr	r3, [fp, #-16]
   1334c:	ldr	r3, [r3]
   13350:	str	r3, [fp, #-28]	; 0xffffffe4
   13354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13358:	ldr	r3, [r3, #28]
   1335c:	cmp	r3, #0
   13360:	beq	13370 <sprintf@plt+0x1c7c>
   13364:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13368:	ldr	r3, [r3, #28]
   1336c:	blx	r3
   13370:	ldr	r3, [pc, #140]	; 13404 <sprintf@plt+0x1d10>
   13374:	ldr	r3, [r4, r3]
   13378:	mov	r1, r3
   1337c:	ldr	r0, [fp, #-16]
   13380:	bl	12d9c <sprintf@plt+0x16a8>
   13384:	ldr	r3, [fp, #-20]	; 0xffffffec
   13388:	str	r3, [fp, #-16]
   1338c:	ldr	r3, [fp, #-16]
   13390:	cmp	r3, #0
   13394:	beq	133a4 <sprintf@plt+0x1cb0>
   13398:	ldr	r3, [fp, #-16]
   1339c:	ldr	r3, [r3, #8]
   133a0:	b	133a8 <sprintf@plt+0x1cb4>
   133a4:	mov	r3, #0
   133a8:	str	r3, [fp, #-20]	; 0xffffffec
   133ac:	ldr	r3, [fp, #-16]
   133b0:	cmp	r3, #0
   133b4:	bne	13348 <sprintf@plt+0x1c54>
   133b8:	ldr	r3, [pc, #56]	; 133f8 <sprintf@plt+0x1d04>
   133bc:	ldr	r3, [r4, r3]
   133c0:	ldr	r3, [r3]
   133c4:	mov	r2, #0
   133c8:	mov	r1, #0
   133cc:	mov	r0, r3
   133d0:	bl	11574 <rb_dictionary_destroy@plt>
   133d4:	ldr	r3, [pc, #44]	; 13408 <sprintf@plt+0x1d14>
   133d8:	add	r3, pc, r3
   133dc:	ldr	r3, [r3]
   133e0:	mov	r0, r3
   133e4:	bl	11364 <rb_event_delete@plt>
   133e8:	nop			; (mov r0, r0)
   133ec:	sub	sp, fp, #8
   133f0:	pop	{r4, fp, pc}
   133f4:	andeq	ip, r1, ip, ror sp
   133f8:	andeq	r0, r0, ip, ror #2
   133fc:	muleq	r0, r4, r8
   13400:	ldrdeq	fp, [r0], -r0
   13404:			; <UNDEFINED> instruction: 0x000001b4
   13408:	andeq	r1, r2, r0, lsr ip
   1340c:	push	{r4, fp, lr}
   13410:	add	fp, sp, #8
   13414:	sub	sp, sp, #20
   13418:	str	r0, [fp, #-24]	; 0xffffffe8
   1341c:	ldr	r4, [pc, #404]	; 135b8 <sprintf@plt+0x1ec4>
   13420:	add	r4, pc, r4
   13424:	ldr	r3, [pc, #400]	; 135bc <sprintf@plt+0x1ec8>
   13428:	add	r3, pc, r3
   1342c:	ldr	r3, [r3, #8]
   13430:	cmp	r3, #0
   13434:	beq	1348c <sprintf@plt+0x1d98>
   13438:	ldr	r3, [pc, #384]	; 135c0 <sprintf@plt+0x1ecc>
   1343c:	add	r3, pc, r3
   13440:	ldr	r3, [r3]
   13444:	ldr	r3, [r3]
   13448:	mov	r2, r3
   1344c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13450:	str	r2, [r3, #12]
   13454:	ldr	r3, [pc, #360]	; 135c4 <sprintf@plt+0x1ed0>
   13458:	add	r3, pc, r3
   1345c:	ldr	r3, [r3]
   13460:	ldr	r2, [pc, #352]	; 135c8 <sprintf@plt+0x1ed4>
   13464:	add	r2, pc, r2
   13468:	mov	r1, r2
   1346c:	mov	r0, r3
   13470:	bl	12d9c <sprintf@plt+0x16a8>
   13474:	ldr	r3, [pc, #336]	; 135cc <sprintf@plt+0x1ed8>
   13478:	add	r3, pc, r3
   1347c:	ldr	r3, [r3]
   13480:	mov	r0, r3
   13484:	bl	11520 <rb_free_rb_dlink_node@plt>
   13488:	b	134f0 <sprintf@plt+0x1dfc>
   1348c:	ldr	r3, [pc, #316]	; 135d0 <sprintf@plt+0x1edc>
   13490:	add	r3, pc, r3
   13494:	ldr	r3, [r3]
   13498:	cmp	r3, #32
   1349c:	beq	134b4 <sprintf@plt+0x1dc0>
   134a0:	ldr	r3, [pc, #300]	; 135d4 <sprintf@plt+0x1ee0>
   134a4:	add	r3, pc, r3
   134a8:	ldr	r3, [r3]
   134ac:	cmn	r3, #1
   134b0:	bne	134cc <sprintf@plt+0x1dd8>
   134b4:	ldr	r3, [pc, #284]	; 135d8 <sprintf@plt+0x1ee4>
   134b8:	add	r3, pc, r3
   134bc:	mov	r1, r3
   134c0:	mov	r0, #87	; 0x57
   134c4:	bl	12a60 <sprintf@plt+0x136c>
   134c8:	b	135b0 <sprintf@plt+0x1ebc>
   134cc:	ldr	r3, [pc, #264]	; 135dc <sprintf@plt+0x1ee8>
   134d0:	add	r3, pc, r3
   134d4:	ldr	r3, [r3]
   134d8:	add	r1, r3, #1
   134dc:	ldr	r2, [pc, #252]	; 135e0 <sprintf@plt+0x1eec>
   134e0:	add	r2, pc, r2
   134e4:	str	r1, [r2]
   134e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   134ec:	str	r3, [r2, #12]
   134f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134f4:	ldr	r3, [r3, #56]	; 0x38
   134f8:	cmp	r3, #0
   134fc:	beq	1354c <sprintf@plt+0x1e58>
   13500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13504:	ldr	r3, [r3, #56]	; 0x38
   13508:	str	r3, [fp, #-16]
   1350c:	b	1353c <sprintf@plt+0x1e48>
   13510:	ldr	r3, [pc, #204]	; 135e4 <sprintf@plt+0x1ef0>
   13514:	ldr	r3, [r4, r3]
   13518:	ldr	r0, [r3]
   1351c:	ldr	r3, [fp, #-16]
   13520:	ldr	r3, [r3]
   13524:	ldr	r2, [fp, #-16]
   13528:	mov	r1, r3
   1352c:	bl	115e0 <rb_dictionary_add@plt>
   13530:	ldr	r3, [fp, #-16]
   13534:	add	r3, r3, #12
   13538:	str	r3, [fp, #-16]
   1353c:	ldr	r3, [fp, #-16]
   13540:	ldr	r3, [r3]
   13544:	cmp	r3, #0
   13548:	bne	13510 <sprintf@plt+0x1e1c>
   1354c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13550:	ldrb	r3, [r3, #48]	; 0x30
   13554:	cmp	r3, #0
   13558:	beq	1357c <sprintf@plt+0x1e88>
   1355c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13560:	ldrb	r3, [r3, #48]	; 0x30
   13564:	mov	r1, r3
   13568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1356c:	ldr	r2, [r3, #52]	; 0x34
   13570:	ldr	r3, [pc, #112]	; 135e8 <sprintf@plt+0x1ef4>
   13574:	ldr	r3, [r4, r3]
   13578:	str	r2, [r3, r1, lsl #2]
   1357c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13580:	ldr	r3, [r3, #24]
   13584:	cmp	r3, #0
   13588:	beq	13598 <sprintf@plt+0x1ea4>
   1358c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13590:	ldr	r3, [r3, #24]
   13594:	blx	r3
   13598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1359c:	ldr	r3, [pc, #72]	; 135ec <sprintf@plt+0x1ef8>
   135a0:	ldr	r3, [r4, r3]
   135a4:	mov	r2, r3
   135a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135ac:	bl	12c48 <sprintf@plt+0x1554>
   135b0:	sub	sp, fp, #8
   135b4:	pop	{r4, fp, pc}
   135b8:	ldrdeq	ip, [r1], -r8
   135bc:	ldrdeq	r1, [r2], -r0
   135c0:			; <UNDEFINED> instruction: 0x00021bbc
   135c4:	andeq	r1, r2, r0, lsr #23
   135c8:	muleq	r2, r4, fp
   135cc:	andeq	r1, r2, r0, lsl #23
   135d0:	andeq	r1, r2, r4, ror fp
   135d4:	andeq	r1, r2, r0, ror #22
   135d8:	ldrdeq	fp, [r0], -r4
   135dc:	andeq	r1, r2, r4, lsr fp
   135e0:	andeq	r1, r2, r4, lsr #22
   135e4:	muleq	r0, r4, r1
   135e8:	andeq	r0, r0, ip, lsr #3
   135ec:			; <UNDEFINED> instruction: 0x000001b4
   135f0:	push	{r4, fp, lr}
   135f4:	add	fp, sp, #8
   135f8:	sub	sp, sp, #20
   135fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13600:	ldr	r4, [pc, #240]	; 136f8 <sprintf@plt+0x2004>
   13604:	add	r4, pc, r4
   13608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1360c:	ldr	r3, [r3, #56]	; 0x38
   13610:	cmp	r3, #0
   13614:	beq	13664 <sprintf@plt+0x1f70>
   13618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1361c:	ldr	r3, [r3, #56]	; 0x38
   13620:	str	r3, [fp, #-16]
   13624:	b	13654 <sprintf@plt+0x1f60>
   13628:	ldr	r3, [pc, #204]	; 136fc <sprintf@plt+0x2008>
   1362c:	ldr	r3, [r4, r3]
   13630:	ldr	r2, [r3]
   13634:	ldr	r3, [fp, #-16]
   13638:	ldr	r3, [r3]
   1363c:	mov	r1, r3
   13640:	mov	r0, r2
   13644:	bl	11508 <rb_dictionary_delete@plt>
   13648:	ldr	r3, [fp, #-16]
   1364c:	add	r3, r3, #12
   13650:	str	r3, [fp, #-16]
   13654:	ldr	r3, [fp, #-16]
   13658:	ldr	r3, [r3]
   1365c:	cmp	r3, #0
   13660:	bne	13628 <sprintf@plt+0x1f34>
   13664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13668:	ldrb	r3, [r3, #48]	; 0x30
   1366c:	cmp	r3, #0
   13670:	beq	13690 <sprintf@plt+0x1f9c>
   13674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13678:	ldrb	r3, [r3, #48]	; 0x30
   1367c:	mov	r1, r3
   13680:	ldr	r3, [pc, #120]	; 13700 <sprintf@plt+0x200c>
   13684:	ldr	r3, [r4, r3]
   13688:	mov	r2, #0
   1368c:	str	r2, [r3, r1, lsl #2]
   13690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13694:	ldr	r3, [r3, #28]
   13698:	cmp	r3, #0
   1369c:	beq	136ac <sprintf@plt+0x1fb8>
   136a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136a4:	ldr	r3, [r3, #28]
   136a8:	blx	r3
   136ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   136b0:	ldr	r3, [pc, #76]	; 13704 <sprintf@plt+0x2010>
   136b4:	ldr	r3, [r4, r3]
   136b8:	mov	r1, r3
   136bc:	mov	r0, r2
   136c0:	bl	12d9c <sprintf@plt+0x16a8>
   136c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136c8:	ldr	r3, [r3, #12]
   136cc:	mov	r4, r3
   136d0:	bl	1167c <rb_make_rb_dlink_node@plt>
   136d4:	mov	r1, r0
   136d8:	ldr	r3, [pc, #40]	; 13708 <sprintf@plt+0x2014>
   136dc:	add	r3, pc, r3
   136e0:	mov	r2, r3
   136e4:	mov	r0, r4
   136e8:	bl	12c48 <sprintf@plt+0x1554>
   136ec:	nop			; (mov r0, r0)
   136f0:	sub	sp, fp, #8
   136f4:	pop	{r4, fp, pc}
   136f8:	strdeq	ip, [r1], -r4
   136fc:	muleq	r0, r4, r1
   13700:	andeq	r0, r0, ip, lsr #3
   13704:			; <UNDEFINED> instruction: 0x000001b4
   13708:	andeq	r1, r2, ip, lsl r9
   1370c:	push	{fp, lr}
   13710:	add	fp, sp, #4
   13714:	sub	sp, sp, #8
   13718:	str	r0, [fp, #-8]
   1371c:	ldr	r2, [pc, #68]	; 13768 <sprintf@plt+0x2074>
   13720:	add	r2, pc, r2
   13724:	ldr	r3, [pc, #64]	; 1376c <sprintf@plt+0x2078>
   13728:	ldr	r3, [r2, r3]
   1372c:	ldr	r2, [r3]
   13730:	ldr	r3, [fp, #-8]
   13734:	ldr	r3, [r3]
   13738:	mov	r1, r3
   1373c:	mov	r0, r2
   13740:	bl	11508 <rb_dictionary_delete@plt>
   13744:	ldr	r3, [fp, #-8]
   13748:	ldr	r3, [r3, #464]	; 0x1d0
   1374c:	mov	r0, r3
   13750:	bl	12f20 <sprintf@plt+0x182c>
   13754:	ldr	r0, [fp, #-8]
   13758:	bl	12f20 <sprintf@plt+0x182c>
   1375c:	nop			; (mov r0, r0)
   13760:	sub	sp, fp, #4
   13764:	pop	{fp, pc}
   13768:	ldrdeq	ip, [r1], -r8
   1376c:	andeq	r0, r0, ip, ror #2
   13770:	push	{fp, lr}
   13774:	add	fp, sp, #4
   13778:	sub	sp, sp, #16
   1377c:	str	r0, [fp, #-16]
   13780:	ldr	r2, [pc, #180]	; 1383c <sprintf@plt+0x2148>
   13784:	add	r2, pc, r2
   13788:	ldr	r3, [fp, #-16]
   1378c:	ldrb	r3, [r3, #452]	; 0x1c4
   13790:	cmp	r3, #0
   13794:	bne	13830 <sprintf@plt+0x213c>
   13798:	ldr	r3, [fp, #-16]
   1379c:	mov	r1, #1
   137a0:	strb	r1, [r3, #452]	; 0x1c4
   137a4:	ldr	r3, [fp, #-16]
   137a8:	ldr	r3, [r3, #456]	; 0x1c8
   137ac:	cmp	r3, #0
   137b0:	beq	13834 <sprintf@plt+0x2140>
   137b4:	ldr	r3, [pc, #132]	; 13840 <sprintf@plt+0x214c>
   137b8:	ldr	r3, [r2, r3]
   137bc:	ldr	r3, [r3]
   137c0:	str	r3, [fp, #-8]
   137c4:	b	13820 <sprintf@plt+0x212c>
   137c8:	ldr	r3, [fp, #-8]
   137cc:	ldr	r3, [r3]
   137d0:	str	r3, [fp, #-12]
   137d4:	ldr	r3, [fp, #-12]
   137d8:	ldr	r3, [r3, #36]	; 0x24
   137dc:	cmp	r3, #0
   137e0:	beq	13814 <sprintf@plt+0x2120>
   137e4:	ldr	r3, [fp, #-12]
   137e8:	ldr	r3, [r3, #12]
   137ec:	mov	r1, r3
   137f0:	ldr	r0, [fp, #-16]
   137f4:	bl	13048 <sprintf@plt+0x1954>
   137f8:	mov	r3, r0
   137fc:	cmp	r3, #0
   13800:	beq	13814 <sprintf@plt+0x2120>
   13804:	ldr	r3, [fp, #-12]
   13808:	ldr	r3, [r3, #36]	; 0x24
   1380c:	ldr	r0, [fp, #-16]
   13810:	blx	r3
   13814:	ldr	r3, [fp, #-8]
   13818:	ldr	r3, [r3, #8]
   1381c:	str	r3, [fp, #-8]
   13820:	ldr	r3, [fp, #-8]
   13824:	cmp	r3, #0
   13828:	bne	137c8 <sprintf@plt+0x20d4>
   1382c:	b	13834 <sprintf@plt+0x2140>
   13830:	nop			; (mov r0, r0)
   13834:	sub	sp, fp, #4
   13838:	pop	{fp, pc}
   1383c:	andeq	ip, r1, r4, ror r8
   13840:			; <UNDEFINED> instruction: 0x000001b4
   13844:	push	{r4, fp, lr}
   13848:	add	fp, sp, #8
   1384c:	sub	sp, sp, #20
   13850:	str	r0, [fp, #-24]	; 0xffffffe8
   13854:	str	r1, [fp, #-28]	; 0xffffffe4
   13858:	ldr	r4, [pc, #196]	; 13924 <sprintf@plt+0x2230>
   1385c:	add	r4, pc, r4
   13860:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13868:	bl	1314c <sprintf@plt+0x1a58>
   1386c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13870:	ldr	r3, [r3, #456]	; 0x1c8
   13874:	cmp	r3, #0
   13878:	bne	138a0 <sprintf@plt+0x21ac>
   1387c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13880:	ldrb	r3, [r3, #451]	; 0x1c3
   13884:	eor	r3, r3, #1
   13888:	uxtb	r3, r3
   1388c:	cmp	r3, #0
   13890:	beq	138a0 <sprintf@plt+0x21ac>
   13894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13898:	bl	13a50 <sprintf@plt+0x235c>
   1389c:	b	1391c <sprintf@plt+0x2228>
   138a0:	ldr	r3, [pc, #128]	; 13928 <sprintf@plt+0x2234>
   138a4:	ldr	r3, [r4, r3]
   138a8:	ldr	r3, [r3]
   138ac:	str	r3, [fp, #-16]
   138b0:	b	13910 <sprintf@plt+0x221c>
   138b4:	ldr	r3, [fp, #-16]
   138b8:	ldr	r3, [r3]
   138bc:	str	r3, [fp, #-20]	; 0xffffffec
   138c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   138c4:	ldr	r3, [r3, #44]	; 0x2c
   138c8:	cmp	r3, #0
   138cc:	beq	13904 <sprintf@plt+0x2210>
   138d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   138d4:	ldr	r3, [r3, #12]
   138d8:	mov	r1, r3
   138dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138e0:	bl	13048 <sprintf@plt+0x1954>
   138e4:	mov	r3, r0
   138e8:	cmp	r3, #0
   138ec:	beq	13904 <sprintf@plt+0x2210>
   138f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   138f4:	ldr	r3, [r3, #44]	; 0x2c
   138f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13900:	blx	r3
   13904:	ldr	r3, [fp, #-16]
   13908:	ldr	r3, [r3, #8]
   1390c:	str	r3, [fp, #-16]
   13910:	ldr	r3, [fp, #-16]
   13914:	cmp	r3, #0
   13918:	bne	138b4 <sprintf@plt+0x21c0>
   1391c:	sub	sp, fp, #8
   13920:	pop	{r4, fp, pc}
   13924:	muleq	r1, ip, r7
   13928:			; <UNDEFINED> instruction: 0x000001b4
   1392c:	push	{r3}		; (str r3, [sp, #-4]!)
   13930:	push	{r4, fp, lr}
   13934:	add	fp, sp, #8
   13938:	sub	sp, sp, #552	; 0x228
   1393c:	str	r0, [fp, #-532]	; 0xfffffdec
   13940:	str	r1, [fp, #-536]	; 0xfffffde8
   13944:	str	r2, [fp, #-540]	; 0xfffffde4
   13948:	ldr	r4, [pc, #240]	; 13a40 <sprintf@plt+0x234c>
   1394c:	add	r4, pc, r4
   13950:	add	r3, fp, #8
   13954:	str	r3, [fp, #-524]	; 0xfffffdf4
   13958:	sub	r0, fp, #520	; 0x208
   1395c:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   13960:	ldr	r2, [fp, #4]
   13964:	mov	r1, #512	; 0x200
   13968:	bl	11394 <vsnprintf@plt>
   1396c:	ldr	r3, [pc, #208]	; 13a44 <sprintf@plt+0x2350>
   13970:	ldr	r3, [r4, r3]
   13974:	ldr	ip, [r3]
   13978:	ldr	r3, [fp, #-532]	; 0xfffffdec
   1397c:	ldr	lr, [r3]
   13980:	ldr	r3, [fp, #-536]	; 0xfffffde8
   13984:	cmn	r3, #1
   13988:	beq	139b0 <sprintf@plt+0x22bc>
   1398c:	ldr	r3, [fp, #-532]	; 0xfffffdec
   13990:	ldr	r2, [r3, #464]	; 0x1d0
   13994:	ldr	r3, [fp, #-536]	; 0xfffffde8
   13998:	lsl	r3, r3, #4
   1399c:	add	r3, r2, r3
   139a0:	ldr	r3, [r3]
   139a4:	ldrb	r3, [r3, #20]
   139a8:	mov	r4, r3
   139ac:	b	139b4 <sprintf@plt+0x22c0>
   139b0:	mov	r4, #42	; 0x2a
   139b4:	ldr	r3, [fp, #-532]	; 0xfffffdec
   139b8:	add	r2, r3, #440	; 0x1b8
   139bc:	ldr	r3, [fp, #-532]	; 0xfffffdec
   139c0:	add	r1, r3, #376	; 0x178
   139c4:	ldr	r3, [fp, #-540]	; 0xfffffde4
   139c8:	cmp	r3, #0
   139cc:	beq	139d8 <sprintf@plt+0x22e4>
   139d0:	ldr	r3, [fp, #-540]	; 0xfffffde4
   139d4:	b	139e0 <sprintf@plt+0x22ec>
   139d8:	ldr	r3, [pc, #104]	; 13a48 <sprintf@plt+0x2354>
   139dc:	add	r3, pc, r3
   139e0:	sub	r0, fp, #520	; 0x208
   139e4:	str	r0, [sp, #12]
   139e8:	str	r3, [sp, #8]
   139ec:	str	r1, [sp, #4]
   139f0:	str	r2, [sp]
   139f4:	mov	r3, r4
   139f8:	mov	r2, lr
   139fc:	ldr	r1, [pc, #72]	; 13a4c <sprintf@plt+0x2358>
   13a00:	add	r1, pc, r1
   13a04:	mov	r0, ip
   13a08:	bl	11658 <rb_helper_write@plt>
   13a0c:	ldr	r3, [fp, #-536]	; 0xfffffde8
   13a10:	cmn	r3, #1
   13a14:	beq	13a24 <sprintf@plt+0x2330>
   13a18:	ldr	r1, [fp, #-536]	; 0xfffffde8
   13a1c:	ldr	r0, [fp, #-532]	; 0xfffffdec
   13a20:	bl	1314c <sprintf@plt+0x1a58>
   13a24:	ldr	r0, [fp, #-532]	; 0xfffffdec
   13a28:	bl	13770 <sprintf@plt+0x207c>
   13a2c:	nop			; (mov r0, r0)
   13a30:	sub	sp, fp, #8
   13a34:	pop	{r4, fp, lr}
   13a38:	add	sp, sp, #4
   13a3c:	bx	lr
   13a40:	andeq	ip, r1, ip, lsr #13
   13a44:	andeq	r0, r0, r8, lsr #3
   13a48:	andeq	fp, r0, r0, ror #3
   13a4c:	andeq	fp, r0, r0, asr #3
   13a50:	push	{fp, lr}
   13a54:	add	fp, sp, #4
   13a58:	sub	sp, sp, #16
   13a5c:	str	r0, [fp, #-8]
   13a60:	ldr	r2, [pc, #76]	; 13ab4 <sprintf@plt+0x23c0>
   13a64:	add	r2, pc, r2
   13a68:	ldr	r3, [pc, #72]	; 13ab8 <sprintf@plt+0x23c4>
   13a6c:	ldr	r3, [r2, r3]
   13a70:	ldr	r0, [r3]
   13a74:	ldr	r3, [fp, #-8]
   13a78:	ldr	r2, [r3]
   13a7c:	ldr	r3, [fp, #-8]
   13a80:	add	r1, r3, #440	; 0x1b8
   13a84:	ldr	r3, [fp, #-8]
   13a88:	add	r3, r3, #376	; 0x178
   13a8c:	str	r3, [sp]
   13a90:	mov	r3, r1
   13a94:	ldr	r1, [pc, #32]	; 13abc <sprintf@plt+0x23c8>
   13a98:	add	r1, pc, r1
   13a9c:	bl	11658 <rb_helper_write@plt>
   13aa0:	ldr	r0, [fp, #-8]
   13aa4:	bl	13770 <sprintf@plt+0x207c>
   13aa8:	nop			; (mov r0, r0)
   13aac:	sub	sp, fp, #4
   13ab0:	pop	{fp, pc}
   13ab4:	muleq	r1, r4, r5
   13ab8:	andeq	r0, r0, r8, lsr #3
   13abc:	andeq	fp, r0, r0, asr #2
   13ac0:	push	{r4, r5, fp, lr}
   13ac4:	add	fp, sp, #12
   13ac8:	sub	sp, sp, #40	; 0x28
   13acc:	str	r0, [fp, #-40]	; 0xffffffd8
   13ad0:	str	r1, [fp, #-44]	; 0xffffffd4
   13ad4:	str	r2, [fp, #-48]	; 0xffffffd0
   13ad8:	str	r3, [fp, #-52]	; 0xffffffcc
   13adc:	ldr	r4, [pc, #884]	; 13e58 <sprintf@plt+0x2764>
   13ae0:	add	r4, pc, r4
   13ae4:	mov	r2, #16
   13ae8:	mov	r1, #0
   13aec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13af0:	bl	11478 <strtoull@plt>
   13af4:	strd	r0, [fp, #-28]	; 0xffffffe4
   13af8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13afc:	orrs	r3, r2, r3
   13b00:	beq	13e4c <sprintf@plt+0x2758>
   13b04:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13b08:	mvn	r0, #0
   13b0c:	mov	r1, #0
   13b10:	cmp	r3, r1
   13b14:	cmpeq	r2, r0
   13b18:	bhi	13e4c <sprintf@plt+0x2758>
   13b1c:	mov	r0, #468	; 0x1d4
   13b20:	bl	12ecc <sprintf@plt+0x17d8>
   13b24:	str	r0, [fp, #-32]	; 0xffffffe0
   13b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b2c:	bl	12f90 <sprintf@plt+0x189c>
   13b30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13b38:	str	r2, [r3]
   13b3c:	ldr	r3, [pc, #792]	; 13e5c <sprintf@plt+0x2768>
   13b40:	ldr	r3, [r4, r3]
   13b44:	ldr	r2, [r3]
   13b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13b4c:	ldr	r3, [r3]
   13b50:	mov	r1, r3
   13b54:	mov	r0, r2
   13b58:	bl	11628 <rb_dictionary_find@plt>
   13b5c:	mov	r3, r0
   13b60:	cmp	r3, #0
   13b64:	bne	13c04 <sprintf@plt+0x2510>
   13b68:	ldr	r3, [pc, #748]	; 13e5c <sprintf@plt+0x2768>
   13b6c:	ldr	r3, [r4, r3]
   13b70:	ldr	r0, [r3]
   13b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13b78:	ldr	r3, [r3]
   13b7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b80:	mov	r1, r3
   13b84:	bl	115e0 <rb_dictionary_add@plt>
   13b88:	mov	r2, #16
   13b8c:	mov	r1, #0
   13b90:	ldr	r0, [fp, #8]
   13b94:	bl	11478 <strtoull@plt>
   13b98:	mov	r2, r0
   13b9c:	mov	r3, r1
   13ba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ba4:	str	r2, [r3, #4]
   13ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bac:	add	r3, r3, #8
   13bb0:	mov	r2, #54	; 0x36
   13bb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bb8:	mov	r0, r3
   13bbc:	bl	1146c <rb_strlcpy@plt>
   13bc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13bc4:	bl	11568 <atoi@plt>
   13bc8:	mov	r3, r0
   13bcc:	uxth	r2, r3
   13bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bd4:	strh	r2, [r3, #62]	; 0x3e
   13bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bdc:	add	r3, r3, #64	; 0x40
   13be0:	mov	r1, r3
   13be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13be8:	bl	114e4 <rb_inet_pton_sock@plt>
   13bec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bf0:	add	r3, r3, #64	; 0x40
   13bf4:	ldrh	r3, [r3]
   13bf8:	cmp	r3, #2
   13bfc:	bne	13c48 <sprintf@plt+0x2554>
   13c00:	b	13c24 <sprintf@plt+0x2530>
   13c04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13c08:	ldr	r3, [pc, #592]	; 13e60 <sprintf@plt+0x276c>
   13c0c:	add	r3, pc, r3
   13c10:	mov	r1, r3
   13c14:	mov	r0, #67	; 0x43
   13c18:	bl	12a60 <sprintf@plt+0x136c>
   13c1c:	mov	r0, #3
   13c20:	bl	116dc <exit@plt>
   13c24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c28:	add	r5, r3, #64	; 0x40
   13c2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c30:	ldrh	r3, [r3, #62]	; 0x3e
   13c34:	mov	r0, r3
   13c38:	bl	11418 <htons@plt>
   13c3c:	mov	r3, r0
   13c40:	strh	r3, [r5, #2]
   13c44:	b	13c68 <sprintf@plt+0x2574>
   13c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c4c:	add	r5, r3, #64	; 0x40
   13c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c54:	ldrh	r3, [r3, #62]	; 0x3e
   13c58:	mov	r0, r3
   13c5c:	bl	11418 <htons@plt>
   13c60:	mov	r3, r0
   13c64:	strh	r3, [r5, #2]
   13c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c6c:	add	r3, r3, #192	; 0xc0
   13c70:	mov	r2, #54	; 0x36
   13c74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13c78:	mov	r0, r3
   13c7c:	bl	1146c <rb_strlcpy@plt>
   13c80:	ldr	r0, [fp, #4]
   13c84:	bl	11568 <atoi@plt>
   13c88:	mov	r3, r0
   13c8c:	uxth	r2, r3
   13c90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c94:	strh	r2, [r3, #246]	; 0xf6
   13c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c9c:	add	r3, r3, #248	; 0xf8
   13ca0:	mov	r1, r3
   13ca4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ca8:	bl	114e4 <rb_inet_pton_sock@plt>
   13cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cb0:	add	r3, r3, #248	; 0xf8
   13cb4:	ldrh	r3, [r3]
   13cb8:	cmp	r3, #2
   13cbc:	bne	13ce4 <sprintf@plt+0x25f0>
   13cc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cc4:	add	r5, r3, #248	; 0xf8
   13cc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ccc:	ldrh	r3, [r3, #246]	; 0xf6
   13cd0:	mov	r0, r3
   13cd4:	bl	11418 <htons@plt>
   13cd8:	mov	r3, r0
   13cdc:	strh	r3, [r5, #2]
   13ce0:	b	13d04 <sprintf@plt+0x2610>
   13ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ce8:	add	r5, r3, #248	; 0xf8
   13cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cf0:	ldrh	r3, [r3, #246]	; 0xf6
   13cf4:	mov	r0, r3
   13cf8:	bl	11418 <htons@plt>
   13cfc:	mov	r3, r0
   13d00:	strh	r3, [r5, #2]
   13d04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d08:	add	r3, r3, #376	; 0x178
   13d0c:	mov	r2, #64	; 0x40
   13d10:	ldr	r1, [pc, #332]	; 13e64 <sprintf@plt+0x2770>
   13d14:	add	r1, pc, r1
   13d18:	mov	r0, r3
   13d1c:	bl	1146c <rb_strlcpy@plt>
   13d20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d24:	add	r3, r3, #440	; 0x1b8
   13d28:	mov	r2, #11
   13d2c:	ldr	r1, [pc, #308]	; 13e68 <sprintf@plt+0x2774>
   13d30:	add	r1, pc, r1
   13d34:	mov	r0, r3
   13d38:	bl	1146c <rb_strlcpy@plt>
   13d3c:	ldr	r3, [pc, #296]	; 13e6c <sprintf@plt+0x2778>
   13d40:	add	r3, pc, r3
   13d44:	ldr	r3, [r3]
   13d48:	lsl	r3, r3, #4
   13d4c:	mov	r0, r3
   13d50:	bl	12ecc <sprintf@plt+0x17d8>
   13d54:	mov	r2, r0
   13d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d5c:	str	r2, [r3, #464]	; 0x1d0
   13d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d64:	mov	r2, #1
   13d68:	strb	r2, [r3, #451]	; 0x1c3
   13d6c:	ldr	r3, [pc, #252]	; 13e70 <sprintf@plt+0x277c>
   13d70:	ldr	r3, [r4, r3]
   13d74:	ldr	r3, [r3]
   13d78:	str	r3, [fp, #-16]
   13d7c:	b	13e00 <sprintf@plt+0x270c>
   13d80:	ldr	r3, [fp, #-16]
   13d84:	ldr	r3, [r3]
   13d88:	str	r3, [fp, #-36]	; 0xffffffdc
   13d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d90:	ldr	r2, [r3, #464]	; 0x1d0
   13d94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13d98:	ldr	r3, [r3, #12]
   13d9c:	lsl	r3, r3, #4
   13da0:	add	r3, r2, r3
   13da4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13da8:	str	r2, [r3]
   13dac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13db0:	ldr	r3, [r3, #12]
   13db4:	mov	r1, r3
   13db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dbc:	bl	13108 <sprintf@plt+0x1a14>
   13dc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13dc4:	ldr	r3, [r3, #32]
   13dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dcc:	blx	r3
   13dd0:	mov	r3, r0
   13dd4:	eor	r3, r3, #1
   13dd8:	uxtb	r3, r3
   13ddc:	cmp	r3, #0
   13de0:	bne	13e3c <sprintf@plt+0x2748>
   13de4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13de8:	ldrb	r3, [r3, #452]	; 0x1c4
   13dec:	cmp	r3, #0
   13df0:	bne	13e10 <sprintf@plt+0x271c>
   13df4:	ldr	r3, [fp, #-16]
   13df8:	ldr	r3, [r3, #8]
   13dfc:	str	r3, [fp, #-16]
   13e00:	ldr	r3, [fp, #-16]
   13e04:	cmp	r3, #0
   13e08:	bne	13d80 <sprintf@plt+0x268c>
   13e0c:	b	13e14 <sprintf@plt+0x2720>
   13e10:	nop			; (mov r0, r0)
   13e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e18:	mov	r2, #0
   13e1c:	strb	r2, [r3, #451]	; 0x1c3
   13e20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e24:	ldr	r3, [r3, #456]	; 0x1c8
   13e28:	cmp	r3, #0
   13e2c:	bne	13e40 <sprintf@plt+0x274c>
   13e30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e34:	bl	13a50 <sprintf@plt+0x235c>
   13e38:	b	13e40 <sprintf@plt+0x274c>
   13e3c:	nop			; (mov r0, r0)
   13e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e44:	bl	12fc4 <sprintf@plt+0x18d0>
   13e48:	b	13e50 <sprintf@plt+0x275c>
   13e4c:	nop			; (mov r0, r0)
   13e50:	sub	sp, fp, #12
   13e54:	pop	{r4, r5, fp, pc}
   13e58:	andeq	ip, r1, r8, lsl r5
   13e5c:	andeq	r0, r0, ip, ror #2
   13e60:	ldrdeq	sl, [r0], -r8
   13e64:	andeq	sl, r0, r8, lsr #29
   13e68:	andeq	sl, r0, ip, lsl #29
   13e6c:	andeq	r1, r2, r4, asr #5
   13e70:			; <UNDEFINED> instruction: 0x000001b4
   13e74:	push	{fp, lr}
   13e78:	add	fp, sp, #4
   13e7c:	sub	sp, sp, #16
   13e80:	str	r0, [fp, #-8]
   13e84:	str	r1, [fp, #-12]
   13e88:	ldr	r3, [fp, #-8]
   13e8c:	cmp	r3, #5
   13e90:	bgt	13eb4 <sprintf@plt+0x27c0>
   13e94:	ldr	r2, [fp, #-8]
   13e98:	ldr	r3, [pc, #144]	; 13f30 <sprintf@plt+0x283c>
   13e9c:	add	r3, pc, r3
   13ea0:	mov	r1, r3
   13ea4:	mov	r0, #67	; 0x43
   13ea8:	bl	12a60 <sprintf@plt+0x136c>
   13eac:	mov	r0, #3
   13eb0:	bl	116dc <exit@plt>
   13eb4:	ldr	r3, [fp, #-12]
   13eb8:	add	r3, r3, #4
   13ebc:	ldr	r0, [r3]
   13ec0:	ldr	r3, [fp, #-12]
   13ec4:	add	r3, r3, #8
   13ec8:	ldr	r1, [r3]
   13ecc:	ldr	r3, [fp, #-12]
   13ed0:	add	r3, r3, #12
   13ed4:	ldr	ip, [r3]
   13ed8:	ldr	r3, [fp, #-12]
   13edc:	add	r3, r3, #16
   13ee0:	ldr	lr, [r3]
   13ee4:	ldr	r3, [fp, #-12]
   13ee8:	add	r3, r3, #20
   13eec:	ldr	r2, [r3]
   13ef0:	ldr	r3, [fp, #-8]
   13ef4:	cmp	r3, #6
   13ef8:	ble	13f08 <sprintf@plt+0x2814>
   13efc:	ldr	r3, [fp, #-12]
   13f00:	ldr	r3, [r3, #24]
   13f04:	b	13f10 <sprintf@plt+0x281c>
   13f08:	ldr	r3, [pc, #36]	; 13f34 <sprintf@plt+0x2840>
   13f0c:	add	r3, pc, r3
   13f10:	str	r3, [sp, #4]
   13f14:	str	r2, [sp]
   13f18:	mov	r3, lr
   13f1c:	mov	r2, ip
   13f20:	bl	13ac0 <sprintf@plt+0x23cc>
   13f24:	nop			; (mov r0, r0)
   13f28:	sub	sp, fp, #4
   13f2c:	pop	{fp, pc}
   13f30:	andeq	sl, r0, ip, ror sp
   13f34:	andeq	sl, r0, r8, asr sp
   13f38:	push	{r4, fp, lr}
   13f3c:	add	fp, sp, #8
   13f40:	sub	sp, sp, #28
   13f44:	str	r0, [fp, #-32]	; 0xffffffe0
   13f48:	str	r1, [fp, #-36]	; 0xffffffdc
   13f4c:	ldr	r4, [pc, #240]	; 14044 <sprintf@plt+0x2950>
   13f50:	add	r4, pc, r4
   13f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f58:	cmp	r3, #1
   13f5c:	bgt	13f80 <sprintf@plt+0x288c>
   13f60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f64:	ldr	r3, [pc, #220]	; 14048 <sprintf@plt+0x2954>
   13f68:	add	r3, pc, r3
   13f6c:	mov	r1, r3
   13f70:	mov	r0, #67	; 0x43
   13f74:	bl	12a60 <sprintf@plt+0x136c>
   13f78:	mov	r0, #3
   13f7c:	bl	116dc <exit@plt>
   13f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13f84:	add	r3, r3, #4
   13f88:	ldr	r3, [r3]
   13f8c:	mov	r2, #16
   13f90:	mov	r1, #0
   13f94:	mov	r0, r3
   13f98:	bl	11478 <strtoull@plt>
   13f9c:	strd	r0, [fp, #-20]	; 0xffffffec
   13fa0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   13fa4:	orrs	r3, r2, r3
   13fa8:	beq	13fc4 <sprintf@plt+0x28d0>
   13fac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   13fb0:	mvn	r0, #0
   13fb4:	mov	r1, #0
   13fb8:	cmp	r3, r1
   13fbc:	cmpeq	r2, r0
   13fc0:	bls	13ff0 <sprintf@plt+0x28fc>
   13fc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fc8:	add	r3, r3, #4
   13fcc:	ldr	r3, [r3]
   13fd0:	mov	r2, r3
   13fd4:	ldr	r3, [pc, #112]	; 1404c <sprintf@plt+0x2958>
   13fd8:	add	r3, pc, r3
   13fdc:	mov	r1, r3
   13fe0:	mov	r0, #67	; 0x43
   13fe4:	bl	12a60 <sprintf@plt+0x136c>
   13fe8:	mov	r0, #3
   13fec:	bl	116dc <exit@plt>
   13ff0:	ldr	r3, [pc, #88]	; 14050 <sprintf@plt+0x295c>
   13ff4:	ldr	r3, [r4, r3]
   13ff8:	ldr	r3, [r3]
   13ffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14000:	mov	r1, r2
   14004:	mov	r0, r3
   14008:	bl	115bc <rb_dictionary_retrieve@plt>
   1400c:	str	r0, [fp, #-24]	; 0xffffffe8
   14010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14014:	cmp	r3, #0
   14018:	beq	14038 <sprintf@plt+0x2944>
   1401c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14020:	bl	12f90 <sprintf@plt+0x189c>
   14024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14028:	bl	13770 <sprintf@plt+0x207c>
   1402c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14030:	bl	12fc4 <sprintf@plt+0x18d0>
   14034:	b	1403c <sprintf@plt+0x2948>
   14038:	nop			; (mov r0, r0)
   1403c:	sub	sp, fp, #8
   14040:	pop	{r4, fp, pc}
   14044:	andeq	ip, r1, r8, lsr #1
   14048:	andeq	sl, r0, r0, lsl #26
   1404c:	ldrdeq	sl, [r0], -ip
   14050:	andeq	r0, r0, ip, ror #2
   14054:	push	{r4, fp, lr}
   14058:	add	fp, sp, #8
   1405c:	sub	sp, sp, #44	; 0x2c
   14060:	str	r0, [fp, #-48]	; 0xffffffd0
   14064:	ldr	r4, [pc, #312]	; 141a4 <sprintf@plt+0x2ab0>
   14068:	add	r4, pc, r4
   1406c:	bl	114fc <rb_current_time@plt>
   14070:	str	r0, [fp, #-20]	; 0xffffffec
   14074:	ldr	r3, [pc, #300]	; 141a8 <sprintf@plt+0x2ab4>
   14078:	ldr	r3, [r4, r3]
   1407c:	ldr	r3, [r3]
   14080:	sub	r2, fp, #40	; 0x28
   14084:	mov	r1, r2
   14088:	mov	r0, r3
   1408c:	bl	114cc <rb_dictionary_foreach_start@plt>
   14090:	b	1416c <sprintf@plt+0x2a78>
   14094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14098:	bl	12f90 <sprintf@plt+0x189c>
   1409c:	ldr	r3, [pc, #264]	; 141ac <sprintf@plt+0x2ab8>
   140a0:	ldr	r3, [r4, r3]
   140a4:	ldr	r3, [r3]
   140a8:	str	r3, [fp, #-16]
   140ac:	b	1413c <sprintf@plt+0x2a48>
   140b0:	ldr	r3, [fp, #-16]
   140b4:	ldr	r3, [r3]
   140b8:	str	r3, [fp, #-28]	; 0xffffffe4
   140bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140c0:	ldr	r3, [r3, #12]
   140c4:	mov	r1, r3
   140c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140cc:	bl	13088 <sprintf@plt+0x1994>
   140d0:	str	r0, [fp, #-32]	; 0xffffffe0
   140d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140d8:	ldr	r3, [r3, #12]
   140dc:	mov	r1, r3
   140e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140e4:	bl	13048 <sprintf@plt+0x1954>
   140e8:	mov	r3, r0
   140ec:	cmp	r3, #0
   140f0:	beq	14130 <sprintf@plt+0x2a3c>
   140f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140f8:	ldr	r3, [r3, #40]	; 0x28
   140fc:	cmp	r3, #0
   14100:	beq	14130 <sprintf@plt+0x2a3c>
   14104:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14108:	cmp	r3, #0
   1410c:	ble	14130 <sprintf@plt+0x2a3c>
   14110:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14114:	ldr	r3, [fp, #-20]	; 0xffffffec
   14118:	cmp	r2, r3
   1411c:	bge	14130 <sprintf@plt+0x2a3c>
   14120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14124:	ldr	r3, [r3, #40]	; 0x28
   14128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1412c:	blx	r3
   14130:	ldr	r3, [fp, #-16]
   14134:	ldr	r3, [r3, #8]
   14138:	str	r3, [fp, #-16]
   1413c:	ldr	r3, [fp, #-16]
   14140:	cmp	r3, #0
   14144:	bne	140b0 <sprintf@plt+0x29bc>
   14148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1414c:	bl	12fc4 <sprintf@plt+0x18d0>
   14150:	ldr	r3, [pc, #80]	; 141a8 <sprintf@plt+0x2ab4>
   14154:	ldr	r3, [r4, r3]
   14158:	ldr	r3, [r3]
   1415c:	sub	r2, fp, #40	; 0x28
   14160:	mov	r1, r2
   14164:	mov	r0, r3
   14168:	bl	11484 <rb_dictionary_foreach_next@plt>
   1416c:	ldr	r3, [pc, #52]	; 141a8 <sprintf@plt+0x2ab4>
   14170:	ldr	r3, [r4, r3]
   14174:	ldr	r3, [r3]
   14178:	sub	r2, fp, #40	; 0x28
   1417c:	mov	r1, r2
   14180:	mov	r0, r3
   14184:	bl	113dc <rb_dictionary_foreach_cur@plt>
   14188:	str	r0, [fp, #-24]	; 0xffffffe8
   1418c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14190:	cmp	r3, #0
   14194:	bne	14094 <sprintf@plt+0x29a0>
   14198:	nop			; (mov r0, r0)
   1419c:	sub	sp, fp, #8
   141a0:	pop	{r4, fp, pc}
   141a4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   141a8:	andeq	r0, r0, ip, ror #2
   141ac:			; <UNDEFINED> instruction: 0x000001b4
   141b0:	push	{fp, lr}
   141b4:	add	fp, sp, #4
   141b8:	sub	sp, sp, #16
   141bc:	str	r0, [fp, #-8]
   141c0:	str	r1, [fp, #-12]
   141c4:	str	r2, [fp, #-16]
   141c8:	ldr	r3, [fp, #-8]
   141cc:	cmp	r3, #0
   141d0:	bne	141f4 <sprintf@plt+0x2b00>
   141d4:	ldr	r3, [pc, #260]	; 142e0 <sprintf@plt+0x2bec>
   141d8:	add	r3, pc, r3
   141dc:	mov	r2, #143	; 0x8f
   141e0:	ldr	r1, [pc, #252]	; 142e4 <sprintf@plt+0x2bf0>
   141e4:	add	r1, pc, r1
   141e8:	ldr	r0, [pc, #248]	; 142e8 <sprintf@plt+0x2bf4>
   141ec:	add	r0, pc, r0
   141f0:	bl	11460 <__assert_fail@plt>
   141f4:	ldr	r3, [fp, #-12]
   141f8:	cmp	r3, #0
   141fc:	bne	14220 <sprintf@plt+0x2b2c>
   14200:	ldr	r3, [pc, #228]	; 142ec <sprintf@plt+0x2bf8>
   14204:	add	r3, pc, r3
   14208:	mov	r2, #144	; 0x90
   1420c:	ldr	r1, [pc, #220]	; 142f0 <sprintf@plt+0x2bfc>
   14210:	add	r1, pc, r1
   14214:	ldr	r0, [pc, #216]	; 142f4 <sprintf@plt+0x2c00>
   14218:	add	r0, pc, r0
   1421c:	bl	11460 <__assert_fail@plt>
   14220:	ldr	r3, [fp, #-16]
   14224:	cmp	r3, #0
   14228:	bne	1424c <sprintf@plt+0x2b58>
   1422c:	ldr	r3, [pc, #196]	; 142f8 <sprintf@plt+0x2c04>
   14230:	add	r3, pc, r3
   14234:	mov	r2, #145	; 0x91
   14238:	ldr	r1, [pc, #188]	; 142fc <sprintf@plt+0x2c08>
   1423c:	add	r1, pc, r1
   14240:	ldr	r0, [pc, #184]	; 14300 <sprintf@plt+0x2c0c>
   14244:	add	r0, pc, r0
   14248:	bl	11460 <__assert_fail@plt>
   1424c:	ldr	r3, [fp, #-12]
   14250:	ldr	r2, [fp, #-8]
   14254:	str	r2, [r3]
   14258:	ldr	r3, [fp, #-12]
   1425c:	mov	r2, #0
   14260:	str	r2, [r3, #4]
   14264:	ldr	r3, [fp, #-16]
   14268:	ldr	r2, [r3]
   1426c:	ldr	r3, [fp, #-12]
   14270:	str	r2, [r3, #8]
   14274:	ldr	r3, [fp, #-16]
   14278:	ldr	r3, [r3]
   1427c:	cmp	r3, #0
   14280:	beq	14298 <sprintf@plt+0x2ba4>
   14284:	ldr	r3, [fp, #-16]
   14288:	ldr	r3, [r3]
   1428c:	ldr	r2, [fp, #-12]
   14290:	str	r2, [r3, #4]
   14294:	b	142b4 <sprintf@plt+0x2bc0>
   14298:	ldr	r3, [fp, #-16]
   1429c:	ldr	r3, [r3, #4]
   142a0:	cmp	r3, #0
   142a4:	bne	142b4 <sprintf@plt+0x2bc0>
   142a8:	ldr	r3, [fp, #-16]
   142ac:	ldr	r2, [fp, #-12]
   142b0:	str	r2, [r3, #4]
   142b4:	ldr	r3, [fp, #-16]
   142b8:	ldr	r2, [fp, #-12]
   142bc:	str	r2, [r3]
   142c0:	ldr	r3, [fp, #-16]
   142c4:	ldr	r3, [r3, #8]
   142c8:	add	r2, r3, #1
   142cc:	ldr	r3, [fp, #-16]
   142d0:	str	r2, [r3, #8]
   142d4:	nop			; (mov r0, r0)
   142d8:	sub	sp, fp, #4
   142dc:	pop	{fp, pc}
   142e0:			; <UNDEFINED> instruction: 0x0000acbc
   142e4:	andeq	sl, r0, r0, lsr fp
   142e8:	andeq	sl, r0, r4, asr #22
   142ec:	muleq	r0, r0, ip
   142f0:	andeq	sl, r0, r4, lsl #22
   142f4:	andeq	sl, r0, r8, lsr #22
   142f8:	andeq	sl, r0, r4, ror #24
   142fc:	ldrdeq	sl, [r0], -r8
   14300:	andeq	sl, r0, r8, lsl #22
   14304:	push	{fp, lr}
   14308:	add	fp, sp, #4
   1430c:	sub	sp, sp, #8
   14310:	str	r0, [fp, #-8]
   14314:	str	r1, [fp, #-12]
   14318:	ldr	r3, [fp, #-8]
   1431c:	cmp	r3, #0
   14320:	bne	14344 <sprintf@plt+0x2c50>
   14324:	ldr	r3, [pc, #240]	; 1441c <sprintf@plt+0x2d28>
   14328:	add	r3, pc, r3
   1432c:	mov	r2, #235	; 0xeb
   14330:	ldr	r1, [pc, #232]	; 14420 <sprintf@plt+0x2d2c>
   14334:	add	r1, pc, r1
   14338:	ldr	r0, [pc, #228]	; 14424 <sprintf@plt+0x2d30>
   1433c:	add	r0, pc, r0
   14340:	bl	11460 <__assert_fail@plt>
   14344:	ldr	r3, [fp, #-12]
   14348:	cmp	r3, #0
   1434c:	bne	14370 <sprintf@plt+0x2c7c>
   14350:	ldr	r3, [pc, #208]	; 14428 <sprintf@plt+0x2d34>
   14354:	add	r3, pc, r3
   14358:	mov	r2, #236	; 0xec
   1435c:	ldr	r1, [pc, #200]	; 1442c <sprintf@plt+0x2d38>
   14360:	add	r1, pc, r1
   14364:	ldr	r0, [pc, #196]	; 14430 <sprintf@plt+0x2d3c>
   14368:	add	r0, pc, r0
   1436c:	bl	11460 <__assert_fail@plt>
   14370:	ldr	r3, [fp, #-8]
   14374:	ldr	r3, [r3, #8]
   14378:	cmp	r3, #0
   1437c:	beq	14398 <sprintf@plt+0x2ca4>
   14380:	ldr	r3, [fp, #-8]
   14384:	ldr	r3, [r3, #8]
   14388:	ldr	r2, [fp, #-8]
   1438c:	ldr	r2, [r2, #4]
   14390:	str	r2, [r3, #4]
   14394:	b	143a8 <sprintf@plt+0x2cb4>
   14398:	ldr	r3, [fp, #-8]
   1439c:	ldr	r2, [r3, #4]
   143a0:	ldr	r3, [fp, #-12]
   143a4:	str	r2, [r3, #4]
   143a8:	ldr	r3, [fp, #-8]
   143ac:	ldr	r3, [r3, #4]
   143b0:	cmp	r3, #0
   143b4:	beq	143d0 <sprintf@plt+0x2cdc>
   143b8:	ldr	r3, [fp, #-8]
   143bc:	ldr	r3, [r3, #4]
   143c0:	ldr	r2, [fp, #-8]
   143c4:	ldr	r2, [r2, #8]
   143c8:	str	r2, [r3, #8]
   143cc:	b	143e0 <sprintf@plt+0x2cec>
   143d0:	ldr	r3, [fp, #-8]
   143d4:	ldr	r2, [r3, #8]
   143d8:	ldr	r3, [fp, #-12]
   143dc:	str	r2, [r3]
   143e0:	ldr	r3, [fp, #-8]
   143e4:	mov	r2, #0
   143e8:	str	r2, [r3, #4]
   143ec:	ldr	r3, [fp, #-8]
   143f0:	ldr	r2, [r3, #4]
   143f4:	ldr	r3, [fp, #-8]
   143f8:	str	r2, [r3, #8]
   143fc:	ldr	r3, [fp, #-12]
   14400:	ldr	r3, [r3, #8]
   14404:	sub	r2, r3, #1
   14408:	ldr	r3, [fp, #-12]
   1440c:	str	r2, [r3, #8]
   14410:	nop			; (mov r0, r0)
   14414:	sub	sp, fp, #4
   14418:	pop	{fp, pc}
   1441c:	andeq	sl, r0, ip, asr fp
   14420:	andeq	sl, r0, r0, ror #19
   14424:	andeq	sl, r0, r4, lsl #20
   14428:	andeq	sl, r0, r0, lsr fp
   1442c:			; <UNDEFINED> instruction: 0x0000a9b4
   14430:	andeq	sl, r0, r4, ror #19
   14434:	push	{fp, lr}
   14438:	add	fp, sp, #4
   1443c:	sub	sp, sp, #16
   14440:	str	r0, [fp, #-16]
   14444:	ldr	r1, [fp, #-16]
   14448:	mov	r0, #1
   1444c:	bl	113f4 <calloc@plt>
   14450:	mov	r3, r0
   14454:	str	r3, [fp, #-8]
   14458:	ldr	r3, [fp, #-8]
   1445c:	cmp	r3, #0
   14460:	moveq	r3, #1
   14464:	movne	r3, #0
   14468:	uxtb	r3, r3
   1446c:	cmp	r3, #0
   14470:	beq	14478 <sprintf@plt+0x2d84>
   14474:	bl	115c8 <rb_outofmemory@plt>
   14478:	ldr	r3, [fp, #-8]
   1447c:	mov	r0, r3
   14480:	sub	sp, fp, #4
   14484:	pop	{fp, pc}
   14488:	push	{fp, lr}
   1448c:	add	fp, sp, #4
   14490:	sub	sp, sp, #16
   14494:	str	r0, [fp, #-16]
   14498:	ldr	r0, [fp, #-16]
   1449c:	bl	114f0 <strlen@plt>
   144a0:	mov	r3, r0
   144a4:	add	r3, r3, #1
   144a8:	mov	r0, r3
   144ac:	bl	115f8 <malloc@plt>
   144b0:	mov	r3, r0
   144b4:	str	r3, [fp, #-8]
   144b8:	ldr	r3, [fp, #-8]
   144bc:	cmp	r3, #0
   144c0:	moveq	r3, #1
   144c4:	movne	r3, #0
   144c8:	uxtb	r3, r3
   144cc:	cmp	r3, #0
   144d0:	beq	144d8 <sprintf@plt+0x2de4>
   144d4:	bl	115c8 <rb_outofmemory@plt>
   144d8:	ldr	r1, [fp, #-16]
   144dc:	ldr	r0, [fp, #-8]
   144e0:	bl	11550 <strcpy@plt>
   144e4:	ldr	r3, [fp, #-8]
   144e8:	mov	r0, r3
   144ec:	sub	sp, fp, #4
   144f0:	pop	{fp, pc}
   144f4:	push	{fp, lr}
   144f8:	add	fp, sp, #4
   144fc:	sub	sp, sp, #8
   14500:	str	r0, [fp, #-8]
   14504:	ldr	r3, [fp, #-8]
   14508:	cmp	r3, #0
   1450c:	movne	r3, #1
   14510:	moveq	r3, #0
   14514:	uxtb	r3, r3
   14518:	cmp	r3, #0
   1451c:	beq	14528 <sprintf@plt+0x2e34>
   14520:	ldr	r0, [fp, #-8]
   14524:	bl	11490 <free@plt>
   14528:	nop			; (mov r0, r0)
   1452c:	sub	sp, fp, #4
   14530:	pop	{fp, pc}
   14534:	push	{r4, fp, lr}
   14538:	add	fp, sp, #8
   1453c:	sub	sp, sp, #36	; 0x24
   14540:	str	r0, [fp, #-40]	; 0xffffffd8
   14544:	ldr	r4, [pc, #392]	; 146d4 <sprintf@plt+0x2fe0>
   14548:	add	r4, pc, r4
   1454c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14550:	str	r3, [fp, #-20]	; 0xffffffec
   14554:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14558:	str	r3, [fp, #-24]	; 0xffffffe8
   1455c:	mov	r3, #0
   14560:	str	r3, [fp, #-16]
   14564:	b	146ac <sprintf@plt+0x2fb8>
   14568:	ldr	r3, [fp, #-16]
   1456c:	lsl	r3, r3, #7
   14570:	ldr	r2, [pc, #352]	; 146d8 <sprintf@plt+0x2fe4>
   14574:	ldr	r2, [r4, r2]
   14578:	add	r3, r3, r2
   1457c:	str	r3, [fp, #-28]	; 0xffffffe4
   14580:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14584:	str	r3, [fp, #-32]	; 0xffffffe0
   14588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1458c:	str	r3, [fp, #-36]	; 0xffffffdc
   14590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14594:	ldrh	r3, [r3]
   14598:	cmp	r3, #2
   1459c:	beq	14634 <sprintf@plt+0x2f40>
   145a0:	cmp	r3, #10
   145a4:	beq	145ac <sprintf@plt+0x2eb8>
   145a8:	b	146a0 <sprintf@plt+0x2fac>
   145ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   145b0:	ldrh	r2, [r3]
   145b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   145b8:	ldrh	r3, [r3]
   145bc:	cmp	r2, r3
   145c0:	bne	14694 <sprintf@plt+0x2fa0>
   145c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145c8:	ldrh	r2, [r3, #2]
   145cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   145d0:	ldrh	r3, [r3, #2]
   145d4:	cmp	r2, r3
   145d8:	bne	14694 <sprintf@plt+0x2fa0>
   145dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145e0:	add	r0, r3, #8
   145e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145e8:	add	r3, r3, #8
   145ec:	mov	r2, #16
   145f0:	mov	r1, r3
   145f4:	bl	1134c <memcmp@plt>
   145f8:	mov	r3, r0
   145fc:	cmp	r3, #0
   14600:	beq	1462c <sprintf@plt+0x2f38>
   14604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14608:	add	r0, r3, #8
   1460c:	mov	r2, #16
   14610:	ldr	r3, [pc, #196]	; 146dc <sprintf@plt+0x2fe8>
   14614:	ldr	r3, [r4, r3]
   14618:	mov	r1, r3
   1461c:	bl	1134c <memcmp@plt>
   14620:	mov	r3, r0
   14624:	cmp	r3, #0
   14628:	bne	14694 <sprintf@plt+0x2fa0>
   1462c:	mov	r3, #1
   14630:	b	146c8 <sprintf@plt+0x2fd4>
   14634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14638:	ldrh	r2, [r3]
   1463c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14640:	ldrh	r3, [r3]
   14644:	cmp	r2, r3
   14648:	bne	1469c <sprintf@plt+0x2fa8>
   1464c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14650:	ldrh	r2, [r3, #2]
   14654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14658:	ldrh	r3, [r3, #2]
   1465c:	cmp	r2, r3
   14660:	bne	1469c <sprintf@plt+0x2fa8>
   14664:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14668:	ldr	r3, [r3, #4]
   1466c:	cmp	r3, #0
   14670:	beq	1468c <sprintf@plt+0x2f98>
   14674:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14678:	ldr	r2, [r3, #4]
   1467c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14680:	ldr	r3, [r3, #4]
   14684:	cmp	r2, r3
   14688:	bne	1469c <sprintf@plt+0x2fa8>
   1468c:	mov	r3, #1
   14690:	b	146c8 <sprintf@plt+0x2fd4>
   14694:	nop			; (mov r0, r0)
   14698:	b	146a0 <sprintf@plt+0x2fac>
   1469c:	nop			; (mov r0, r0)
   146a0:	ldr	r3, [fp, #-16]
   146a4:	add	r3, r3, #1
   146a8:	str	r3, [fp, #-16]
   146ac:	ldr	r3, [pc, #44]	; 146e0 <sprintf@plt+0x2fec>
   146b0:	ldr	r3, [r4, r3]
   146b4:	ldr	r3, [r3]
   146b8:	ldr	r2, [fp, #-16]
   146bc:	cmp	r2, r3
   146c0:	blt	14568 <sprintf@plt+0x2e74>
   146c4:	mov	r3, #0
   146c8:	mov	r0, r3
   146cc:	sub	sp, fp, #8
   146d0:	pop	{r4, fp, pc}
   146d4:			; <UNDEFINED> instruction: 0x0001bab0
   146d8:	andeq	r0, r0, ip, lsl #3
   146dc:	andeq	r0, r0, r8, lsl #3
   146e0:	andeq	r0, r0, r0, lsl #3
   146e4:	push	{fp, lr}
   146e8:	add	fp, sp, #4
   146ec:	sub	sp, sp, #32
   146f0:	str	r0, [fp, #-32]	; 0xffffffe0
   146f4:	mov	r3, #0
   146f8:	str	r3, [fp, #-16]
   146fc:	mov	r3, #0
   14700:	str	r3, [fp, #-20]	; 0xffffffec
   14704:	ldr	r3, [pc, #312]	; 14844 <sprintf@plt+0x3150>
   14708:	add	r3, pc, r3
   1470c:	ldr	r3, [r3]
   14710:	str	r3, [fp, #-8]
   14714:	ldr	r3, [fp, #-8]
   14718:	cmp	r3, #0
   1471c:	beq	1472c <sprintf@plt+0x3038>
   14720:	ldr	r3, [fp, #-8]
   14724:	ldr	r3, [r3, #8]
   14728:	b	14730 <sprintf@plt+0x303c>
   1472c:	mov	r3, #0
   14730:	str	r3, [fp, #-12]
   14734:	b	1480c <sprintf@plt+0x3118>
   14738:	ldr	r3, [fp, #-8]
   1473c:	ldr	r3, [r3]
   14740:	str	r3, [fp, #-24]	; 0xffffffe8
   14744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14748:	ldr	r2, [r3, #280]	; 0x118
   1474c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14750:	ldr	r3, [r3, #284]	; 0x11c
   14754:	add	r3, r2, r3
   14758:	str	r3, [fp, #-20]	; 0xffffffec
   1475c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14760:	ldr	r3, [fp, #-20]	; 0xffffffec
   14764:	cmp	r2, r3
   14768:	blt	147c0 <sprintf@plt+0x30cc>
   1476c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14770:	ldr	r3, [r3, #288]	; 0x120
   14774:	ldr	r2, [pc, #204]	; 14848 <sprintf@plt+0x3154>
   14778:	add	r2, pc, r2
   1477c:	ldr	r2, [r2, r3, lsl #2]
   14780:	add	r1, r2, #1
   14784:	ldr	r2, [pc, #192]	; 1484c <sprintf@plt+0x3158>
   14788:	add	r2, pc, r2
   1478c:	str	r1, [r2, r3, lsl #2]
   14790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14794:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14798:	str	r2, [r3, #280]	; 0x118
   1479c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147a0:	ldr	r2, [r3, #284]	; 0x11c
   147a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147a8:	ldr	r3, [r3, #284]	; 0x11c
   147ac:	add	r2, r2, r3
   147b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147b4:	str	r2, [r3, #284]	; 0x11c
   147b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147bc:	bl	157d4 <sprintf@plt+0x40e0>
   147c0:	ldr	r3, [fp, #-16]
   147c4:	cmp	r3, #0
   147c8:	beq	147dc <sprintf@plt+0x30e8>
   147cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   147d0:	ldr	r3, [fp, #-16]
   147d4:	cmp	r2, r3
   147d8:	bge	147e4 <sprintf@plt+0x30f0>
   147dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   147e0:	str	r3, [fp, #-16]
   147e4:	ldr	r3, [fp, #-12]
   147e8:	str	r3, [fp, #-8]
   147ec:	ldr	r3, [fp, #-8]
   147f0:	cmp	r3, #0
   147f4:	beq	14804 <sprintf@plt+0x3110>
   147f8:	ldr	r3, [fp, #-8]
   147fc:	ldr	r3, [r3, #8]
   14800:	b	14808 <sprintf@plt+0x3114>
   14804:	mov	r3, #0
   14808:	str	r3, [fp, #-12]
   1480c:	ldr	r3, [fp, #-8]
   14810:	cmp	r3, #0
   14814:	bne	14738 <sprintf@plt+0x3044>
   14818:	ldr	r2, [fp, #-16]
   1481c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14820:	cmp	r2, r3
   14824:	bgt	14834 <sprintf@plt+0x3140>
   14828:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1482c:	add	r3, r3, #600	; 0x258
   14830:	b	14838 <sprintf@plt+0x3144>
   14834:	ldr	r3, [fp, #-16]
   14838:	mov	r0, r3
   1483c:	sub	sp, fp, #4
   14840:	pop	{fp, pc}
   14844:	andeq	r0, r2, r8, lsl #18
   14848:	andeq	r0, r2, r4, lsr #17
   1484c:	muleq	r2, r4, r8
   14850:	push	{fp, lr}
   14854:	add	fp, sp, #4
   14858:	sub	sp, sp, #8
   1485c:	str	r0, [fp, #-8]
   14860:	bl	114fc <rb_current_time@plt>
   14864:	mov	r3, r0
   14868:	mov	r0, r3
   1486c:	bl	146e4 <sprintf@plt+0x2ff0>
   14870:	nop			; (mov r0, r0)
   14874:	sub	sp, fp, #4
   14878:	pop	{fp, pc}
   1487c:	push	{r4, fp, lr}
   14880:	add	fp, sp, #8
   14884:	sub	sp, sp, #12
   14888:	ldr	r4, [pc, #256]	; 14990 <sprintf@plt+0x329c>
   1488c:	add	r4, pc, r4
   14890:	bl	16300 <sprintf@plt+0x4c0c>
   14894:	mov	r3, #0
   14898:	str	r3, [fp, #-16]
   1489c:	b	148c0 <sprintf@plt+0x31cc>
   148a0:	ldr	r3, [pc, #236]	; 14994 <sprintf@plt+0x32a0>
   148a4:	add	r3, pc, r3
   148a8:	ldr	r2, [fp, #-16]
   148ac:	mov	r1, #0
   148b0:	str	r1, [r3, r2, lsl #2]
   148b4:	ldr	r3, [fp, #-16]
   148b8:	add	r3, r3, #1
   148bc:	str	r3, [fp, #-16]
   148c0:	ldr	r3, [pc, #208]	; 14998 <sprintf@plt+0x32a4>
   148c4:	ldr	r3, [r4, r3]
   148c8:	ldr	r3, [r3]
   148cc:	ldr	r2, [fp, #-16]
   148d0:	cmp	r2, r3
   148d4:	blt	148a0 <sprintf@plt+0x31ac>
   148d8:	ldr	r3, [pc, #188]	; 1499c <sprintf@plt+0x32a8>
   148dc:	add	r3, pc, r3
   148e0:	ldr	r3, [r3]
   148e4:	cmp	r3, #0
   148e8:	bne	14988 <sprintf@plt+0x3294>
   148ec:	ldr	r3, [pc, #172]	; 149a0 <sprintf@plt+0x32ac>
   148f0:	ldr	r3, [r4, r3]
   148f4:	ldrh	r3, [r3]
   148f8:	mov	r0, r3
   148fc:	ldr	r3, [pc, #160]	; 149a4 <sprintf@plt+0x32b0>
   14900:	add	r3, pc, r3
   14904:	mov	r2, #0
   14908:	mov	r1, #2
   1490c:	bl	113a0 <rb_socket@plt>
   14910:	mov	r2, r0
   14914:	ldr	r3, [pc, #140]	; 149a8 <sprintf@plt+0x32b4>
   14918:	add	r3, pc, r3
   1491c:	str	r2, [r3]
   14920:	ldr	r3, [pc, #132]	; 149ac <sprintf@plt+0x32b8>
   14924:	add	r3, pc, r3
   14928:	ldr	r3, [r3]
   1492c:	cmp	r3, #0
   14930:	beq	14984 <sprintf@plt+0x3290>
   14934:	ldr	r3, [pc, #116]	; 149b0 <sprintf@plt+0x32bc>
   14938:	add	r3, pc, r3
   1493c:	ldr	r0, [r3]
   14940:	mov	r3, #0
   14944:	ldr	r2, [pc, #104]	; 149b4 <sprintf@plt+0x32c0>
   14948:	add	r2, pc, r2
   1494c:	mov	r1, #1
   14950:	bl	11370 <rb_setselect@plt>
   14954:	mov	r3, #1
   14958:	mov	r2, #0
   1495c:	ldr	r1, [pc, #84]	; 149b8 <sprintf@plt+0x32c4>
   14960:	add	r1, pc, r1
   14964:	ldr	r0, [pc, #80]	; 149bc <sprintf@plt+0x32c8>
   14968:	add	r0, pc, r0
   1496c:	bl	11664 <rb_event_add@plt>
   14970:	mov	r2, r0
   14974:	ldr	r3, [pc, #68]	; 149c0 <sprintf@plt+0x32cc>
   14978:	add	r3, pc, r3
   1497c:	str	r2, [r3]
   14980:	b	14988 <sprintf@plt+0x3294>
   14984:	nop			; (mov r0, r0)
   14988:	sub	sp, fp, #8
   1498c:	pop	{r4, fp, pc}
   14990:	andeq	fp, r1, ip, ror #14
   14994:	andeq	r0, r2, r8, ror r7
   14998:	andeq	r0, r0, r0, lsl #3
   1499c:	andeq	r0, r2, r0, lsr r7
   149a0:	andeq	r0, r0, ip, lsl #3
   149a4:	andeq	sl, r0, ip, asr r4
   149a8:	strdeq	r0, [r2], -r4
   149ac:	andeq	r0, r2, r8, ror #13
   149b0:	ldrdeq	r0, [r2], -r4
   149b4:	andeq	r1, r0, r8, ror r8
   149b8:			; <UNDEFINED> instruction: 0xfffffee8
   149bc:	andeq	sl, r0, r8, lsl #8
   149c0:	andeq	r0, r2, ip, asr #13
   149c4:	push	{fp, lr}
   149c8:	add	fp, sp, #4
   149cc:	bl	1487c <sprintf@plt+0x3188>
   149d0:	nop			; (mov r0, r0)
   149d4:	pop	{fp, pc}
   149d8:	push	{fp, lr}
   149dc:	add	fp, sp, #4
   149e0:	ldr	r3, [pc, #60]	; 14a24 <sprintf@plt+0x3330>
   149e4:	add	r3, pc, r3
   149e8:	ldr	r3, [r3]
   149ec:	mov	r0, r3
   149f0:	bl	1152c <rb_close@plt>
   149f4:	ldr	r3, [pc, #44]	; 14a28 <sprintf@plt+0x3334>
   149f8:	add	r3, pc, r3
   149fc:	mov	r2, #0
   14a00:	str	r2, [r3]
   14a04:	ldr	r3, [pc, #32]	; 14a2c <sprintf@plt+0x3338>
   14a08:	add	r3, pc, r3
   14a0c:	ldr	r3, [r3]
   14a10:	mov	r0, r3
   14a14:	bl	11364 <rb_event_delete@plt>
   14a18:	bl	1487c <sprintf@plt+0x3188>
   14a1c:	nop			; (mov r0, r0)
   14a20:	pop	{fp, pc}
   14a24:	andeq	r0, r2, r8, lsr #12
   14a28:	andeq	r0, r2, r4, lsl r6
   14a2c:	andeq	r0, r2, ip, lsr r6
   14a30:	push	{r4, fp, lr}
   14a34:	add	fp, sp, #8
   14a38:	sub	sp, sp, #20
   14a3c:	str	r0, [fp, #-24]	; 0xffffffe8
   14a40:	str	r1, [fp, #-28]	; 0xffffffe4
   14a44:	ldr	r4, [pc, #172]	; 14af8 <sprintf@plt+0x3404>
   14a48:	add	r4, pc, r4
   14a4c:	mov	r1, #46	; 0x2e
   14a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a54:	bl	113d0 <strchr@plt>
   14a58:	mov	r3, r0
   14a5c:	cmp	r3, #0
   14a60:	bne	14aec <sprintf@plt+0x33f8>
   14a64:	ldr	r3, [pc, #144]	; 14afc <sprintf@plt+0x3408>
   14a68:	ldr	r3, [r4, r3]
   14a6c:	ldrb	r3, [r3]
   14a70:	cmp	r3, #0
   14a74:	beq	14aec <sprintf@plt+0x33f8>
   14a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a7c:	bl	114f0 <strlen@plt>
   14a80:	str	r0, [fp, #-16]
   14a84:	ldr	r3, [pc, #112]	; 14afc <sprintf@plt+0x3408>
   14a88:	ldr	r3, [r4, r3]
   14a8c:	mov	r0, r3
   14a90:	bl	114f0 <strlen@plt>
   14a94:	mov	r2, r0
   14a98:	ldr	r3, [fp, #-16]
   14a9c:	add	r3, r2, r3
   14aa0:	add	r2, r3, #2
   14aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14aa8:	cmp	r2, r3
   14aac:	bcs	14aec <sprintf@plt+0x33f8>
   14ab0:	ldr	r3, [fp, #-16]
   14ab4:	add	r2, r3, #1
   14ab8:	str	r2, [fp, #-16]
   14abc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ac0:	add	r3, r2, r3
   14ac4:	mov	r2, #46	; 0x2e
   14ac8:	strb	r2, [r3]
   14acc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ad0:	ldr	r3, [fp, #-16]
   14ad4:	add	r2, r2, r3
   14ad8:	ldr	r3, [pc, #28]	; 14afc <sprintf@plt+0x3408>
   14adc:	ldr	r3, [r4, r3]
   14ae0:	mov	r1, r3
   14ae4:	mov	r0, r2
   14ae8:	bl	11550 <strcpy@plt>
   14aec:	nop			; (mov r0, r0)
   14af0:	sub	sp, fp, #8
   14af4:	pop	{r4, fp, pc}
   14af8:			; <UNDEFINED> instruction: 0x0001b5b0
   14afc:	andeq	r0, r0, r4, lsl #3
   14b00:	push	{fp, lr}
   14b04:	add	fp, sp, #4
   14b08:	sub	sp, sp, #8
   14b0c:	str	r0, [fp, #-8]
   14b10:	ldr	r3, [fp, #-8]
   14b14:	ldr	r2, [pc, #48]	; 14b4c <sprintf@plt+0x3458>
   14b18:	add	r2, pc, r2
   14b1c:	mov	r1, r2
   14b20:	mov	r0, r3
   14b24:	bl	14304 <sprintf@plt+0x2c10>
   14b28:	ldr	r3, [fp, #-8]
   14b2c:	ldr	r3, [r3, #420]	; 0x1a4
   14b30:	mov	r0, r3
   14b34:	bl	144f4 <sprintf@plt+0x2e00>
   14b38:	ldr	r0, [fp, #-8]
   14b3c:	bl	144f4 <sprintf@plt+0x2e00>
   14b40:	nop			; (mov r0, r0)
   14b44:	sub	sp, fp, #4
   14b48:	pop	{fp, pc}
   14b4c:	strdeq	r0, [r2], -r8
   14b50:	push	{fp, lr}
   14b54:	add	fp, sp, #4
   14b58:	sub	sp, sp, #16
   14b5c:	str	r0, [fp, #-16]
   14b60:	mov	r0, #428	; 0x1ac
   14b64:	bl	14434 <sprintf@plt+0x2d40>
   14b68:	str	r0, [fp, #-8]
   14b6c:	bl	114fc <rb_current_time@plt>
   14b70:	mov	r2, r0
   14b74:	ldr	r3, [fp, #-8]
   14b78:	str	r2, [r3, #280]	; 0x118
   14b7c:	ldr	r3, [fp, #-8]
   14b80:	mov	r2, #3
   14b84:	strb	r2, [r3, #277]	; 0x115
   14b88:	ldr	r3, [fp, #-8]
   14b8c:	mov	r2, #4
   14b90:	str	r2, [r3, #284]	; 0x11c
   14b94:	ldr	r3, [fp, #-8]
   14b98:	ldr	r2, [fp, #-16]
   14b9c:	str	r2, [r3, #424]	; 0x1a8
   14ba0:	bl	14f94 <sprintf@plt+0x38a0>
   14ba4:	mov	r3, r0
   14ba8:	mov	r2, r3
   14bac:	ldr	r3, [fp, #-8]
   14bb0:	str	r2, [r3, #12]
   14bb4:	ldr	r3, [fp, #-8]
   14bb8:	ldr	r2, [pc, #28]	; 14bdc <sprintf@plt+0x34e8>
   14bbc:	add	r2, pc, r2
   14bc0:	mov	r1, r3
   14bc4:	ldr	r0, [fp, #-8]
   14bc8:	bl	141b0 <sprintf@plt+0x2abc>
   14bcc:	ldr	r3, [fp, #-8]
   14bd0:	mov	r0, r3
   14bd4:	sub	sp, fp, #4
   14bd8:	pop	{fp, pc}
   14bdc:	andeq	r0, r2, r4, asr r4
   14be0:	push	{fp}		; (str fp, [sp, #-4]!)
   14be4:	add	fp, sp, #0
   14be8:	sub	sp, sp, #12
   14bec:	str	r0, [fp, #-8]
   14bf0:	ldr	r3, [fp, #-8]
   14bf4:	sub	r3, r3, #1
   14bf8:	cmp	r3, #3
   14bfc:	addls	pc, pc, r3, lsl #2
   14c00:	b	14c34 <sprintf@plt+0x3540>
   14c04:	b	14c14 <sprintf@plt+0x3520>
   14c08:	b	14c1c <sprintf@plt+0x3528>
   14c0c:	b	14c24 <sprintf@plt+0x3530>
   14c10:	b	14c2c <sprintf@plt+0x3538>
   14c14:	mov	r3, #3
   14c18:	b	14c38 <sprintf@plt+0x3544>
   14c1c:	mov	r3, #9
   14c20:	b	14c38 <sprintf@plt+0x3544>
   14c24:	mov	r3, #27
   14c28:	b	14c38 <sprintf@plt+0x3544>
   14c2c:	mov	r3, #81	; 0x51
   14c30:	b	14c38 <sprintf@plt+0x3544>
   14c34:	mov	r3, #243	; 0xf3
   14c38:	mov	r0, r3
   14c3c:	add	sp, fp, #0
   14c40:	pop	{fp}		; (ldr fp, [sp], #4)
   14c44:	bx	lr
   14c48:	push	{r4, r5, fp, lr}
   14c4c:	add	fp, sp, #12
   14c50:	sub	sp, sp, #32
   14c54:	str	r0, [fp, #-24]	; 0xffffffe8
   14c58:	str	r1, [fp, #-28]	; 0xffffffe4
   14c5c:	str	r2, [fp, #-32]	; 0xffffffe0
   14c60:	ldr	r4, [pc, #644]	; 14eec <sprintf@plt+0x37f8>
   14c64:	add	r4, pc, r4
   14c68:	ldr	r3, [pc, #640]	; 14ef0 <sprintf@plt+0x37fc>
   14c6c:	add	r3, pc, r3
   14c70:	ldr	r3, [r3]
   14c74:	add	r2, r3, #1
   14c78:	ldr	r3, [pc, #628]	; 14ef4 <sprintf@plt+0x3800>
   14c7c:	add	r3, pc, r3
   14c80:	str	r2, [r3]
   14c84:	mov	r3, #0
   14c88:	str	r3, [fp, #-16]
   14c8c:	b	14db8 <sprintf@plt+0x36c4>
   14c90:	ldr	r2, [fp, #-16]
   14c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14c98:	add	r3, r2, r3
   14c9c:	sub	r2, r3, #1
   14ca0:	ldr	r3, [pc, #592]	; 14ef8 <sprintf@plt+0x3804>
   14ca4:	ldr	r3, [r4, r3]
   14ca8:	ldr	r3, [r3]
   14cac:	mov	r1, r3
   14cb0:	mov	r0, r2
   14cb4:	bl	1e6b8 <sprintf@plt+0xcfc4>
   14cb8:	mov	r3, r1
   14cbc:	str	r3, [fp, #-20]	; 0xffffffec
   14cc0:	ldr	r3, [pc, #564]	; 14efc <sprintf@plt+0x3808>
   14cc4:	add	r3, pc, r3
   14cc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ccc:	ldr	r3, [r3, r2, lsl #2]
   14cd0:	cmp	r3, #0
   14cd4:	beq	14d18 <sprintf@plt+0x3624>
   14cd8:	ldr	r3, [pc, #544]	; 14f00 <sprintf@plt+0x380c>
   14cdc:	add	r3, pc, r3
   14ce0:	ldr	r5, [r3]
   14ce4:	ldr	r3, [pc, #536]	; 14f04 <sprintf@plt+0x3810>
   14ce8:	add	r3, pc, r3
   14cec:	ldr	r2, [fp, #-20]	; 0xffffffec
   14cf0:	ldr	r3, [r3, r2, lsl #2]
   14cf4:	mov	r0, r3
   14cf8:	bl	14be0 <sprintf@plt+0x34ec>
   14cfc:	mov	r3, r0
   14d00:	mov	r1, r3
   14d04:	mov	r0, r5
   14d08:	bl	1e6b8 <sprintf@plt+0xcfc4>
   14d0c:	mov	r3, r1
   14d10:	cmp	r3, #0
   14d14:	bne	14da8 <sprintf@plt+0x36b4>
   14d18:	ldr	r3, [pc, #488]	; 14f08 <sprintf@plt+0x3814>
   14d1c:	add	r3, pc, r3
   14d20:	ldr	r3, [r3]
   14d24:	mov	r0, r3
   14d28:	bl	1137c <rb_get_fd@plt>
   14d2c:	mov	ip, r0
   14d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d38:	lsl	r3, r3, #7
   14d3c:	ldr	r2, [pc, #456]	; 14f0c <sprintf@plt+0x3818>
   14d40:	ldr	r2, [r4, r2]
   14d44:	add	r3, r3, r2
   14d48:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d4c:	lsl	r2, r2, #7
   14d50:	ldr	r1, [pc, #436]	; 14f0c <sprintf@plt+0x3818>
   14d54:	ldr	r1, [r4, r1]
   14d58:	add	r2, r2, r1
   14d5c:	ldrh	r2, [r2]
   14d60:	cmp	r2, #2
   14d64:	bne	14d70 <sprintf@plt+0x367c>
   14d68:	mov	r2, #16
   14d6c:	b	14d74 <sprintf@plt+0x3680>
   14d70:	mov	r2, #28
   14d74:	str	r2, [sp, #4]
   14d78:	str	r3, [sp]
   14d7c:	mov	r3, #0
   14d80:	mov	r2, r0
   14d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d88:	mov	r0, ip
   14d8c:	bl	1140c <sendto@plt>
   14d90:	mov	r2, r0
   14d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d98:	cmp	r2, r3
   14d9c:	bne	14dac <sprintf@plt+0x36b8>
   14da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14da4:	b	14ee0 <sprintf@plt+0x37ec>
   14da8:	nop			; (mov r0, r0)
   14dac:	ldr	r3, [fp, #-16]
   14db0:	add	r3, r3, #1
   14db4:	str	r3, [fp, #-16]
   14db8:	ldr	r3, [pc, #312]	; 14ef8 <sprintf@plt+0x3804>
   14dbc:	ldr	r3, [r4, r3]
   14dc0:	ldr	r3, [r3]
   14dc4:	ldr	r2, [fp, #-16]
   14dc8:	cmp	r2, r3
   14dcc:	blt	14c90 <sprintf@plt+0x359c>
   14dd0:	mov	r3, #0
   14dd4:	str	r3, [fp, #-16]
   14dd8:	b	14ec4 <sprintf@plt+0x37d0>
   14ddc:	ldr	r2, [fp, #-16]
   14de0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14de4:	add	r3, r2, r3
   14de8:	sub	r2, r3, #1
   14dec:	ldr	r3, [pc, #260]	; 14ef8 <sprintf@plt+0x3804>
   14df0:	ldr	r3, [r4, r3]
   14df4:	ldr	r3, [r3]
   14df8:	mov	r1, r3
   14dfc:	mov	r0, r2
   14e00:	bl	1e6b8 <sprintf@plt+0xcfc4>
   14e04:	mov	r3, r1
   14e08:	str	r3, [fp, #-20]	; 0xffffffec
   14e0c:	ldr	r3, [pc, #252]	; 14f10 <sprintf@plt+0x381c>
   14e10:	add	r3, pc, r3
   14e14:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e18:	ldr	r3, [r3, r2, lsl #2]
   14e1c:	cmp	r3, #0
   14e20:	beq	14eb4 <sprintf@plt+0x37c0>
   14e24:	ldr	r3, [pc, #232]	; 14f14 <sprintf@plt+0x3820>
   14e28:	add	r3, pc, r3
   14e2c:	ldr	r3, [r3]
   14e30:	mov	r0, r3
   14e34:	bl	1137c <rb_get_fd@plt>
   14e38:	mov	ip, r0
   14e3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e44:	lsl	r3, r3, #7
   14e48:	ldr	r2, [pc, #188]	; 14f0c <sprintf@plt+0x3818>
   14e4c:	ldr	r2, [r4, r2]
   14e50:	add	r3, r3, r2
   14e54:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e58:	lsl	r2, r2, #7
   14e5c:	ldr	r1, [pc, #168]	; 14f0c <sprintf@plt+0x3818>
   14e60:	ldr	r1, [r4, r1]
   14e64:	add	r2, r2, r1
   14e68:	ldrh	r2, [r2]
   14e6c:	cmp	r2, #2
   14e70:	bne	14e7c <sprintf@plt+0x3788>
   14e74:	mov	r2, #16
   14e78:	b	14e80 <sprintf@plt+0x378c>
   14e7c:	mov	r2, #28
   14e80:	str	r2, [sp, #4]
   14e84:	str	r3, [sp]
   14e88:	mov	r3, #0
   14e8c:	mov	r2, r0
   14e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14e94:	mov	r0, ip
   14e98:	bl	1140c <sendto@plt>
   14e9c:	mov	r2, r0
   14ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ea4:	cmp	r2, r3
   14ea8:	bne	14eb8 <sprintf@plt+0x37c4>
   14eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14eb0:	b	14ee0 <sprintf@plt+0x37ec>
   14eb4:	nop			; (mov r0, r0)
   14eb8:	ldr	r3, [fp, #-16]
   14ebc:	add	r3, r3, #1
   14ec0:	str	r3, [fp, #-16]
   14ec4:	ldr	r3, [pc, #44]	; 14ef8 <sprintf@plt+0x3804>
   14ec8:	ldr	r3, [r4, r3]
   14ecc:	ldr	r3, [r3]
   14ed0:	ldr	r2, [fp, #-16]
   14ed4:	cmp	r2, r3
   14ed8:	blt	14ddc <sprintf@plt+0x36e8>
   14edc:	mvn	r3, #0
   14ee0:	mov	r0, r3
   14ee4:	sub	sp, fp, #12
   14ee8:	pop	{r4, r5, fp, pc}
   14eec:	muleq	r1, r4, r3
   14ef0:	ldrdeq	r0, [r2], -ip
   14ef4:	andeq	r0, r2, ip, asr #7
   14ef8:	andeq	r0, r0, r0, lsl #3
   14efc:	andeq	r0, r2, r8, asr r3
   14f00:	andeq	r0, r2, ip, ror #6
   14f04:	andeq	r0, r2, r4, lsr r3
   14f08:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   14f0c:	andeq	r0, r0, ip, lsl #3
   14f10:	andeq	r0, r2, ip, lsl #4
   14f14:	andeq	r0, r2, r4, ror #3
   14f18:	push	{fp}		; (str fp, [sp, #-4]!)
   14f1c:	add	fp, sp, #0
   14f20:	sub	sp, sp, #20
   14f24:	str	r0, [fp, #-16]
   14f28:	ldr	r3, [pc, #96]	; 14f90 <sprintf@plt+0x389c>
   14f2c:	add	r3, pc, r3
   14f30:	ldr	r3, [r3]
   14f34:	str	r3, [fp, #-8]
   14f38:	b	14f70 <sprintf@plt+0x387c>
   14f3c:	ldr	r3, [fp, #-8]
   14f40:	ldr	r3, [r3]
   14f44:	str	r3, [fp, #-12]
   14f48:	ldr	r3, [fp, #-12]
   14f4c:	ldr	r2, [r3, #12]
   14f50:	ldr	r3, [fp, #-16]
   14f54:	cmp	r2, r3
   14f58:	bne	14f64 <sprintf@plt+0x3870>
   14f5c:	ldr	r3, [fp, #-12]
   14f60:	b	14f80 <sprintf@plt+0x388c>
   14f64:	ldr	r3, [fp, #-8]
   14f68:	ldr	r3, [r3, #8]
   14f6c:	str	r3, [fp, #-8]
   14f70:	ldr	r3, [fp, #-8]
   14f74:	cmp	r3, #0
   14f78:	bne	14f3c <sprintf@plt+0x3848>
   14f7c:	mov	r3, #0
   14f80:	mov	r0, r3
   14f84:	add	sp, fp, #0
   14f88:	pop	{fp}		; (ldr fp, [sp], #4)
   14f8c:	bx	lr
   14f90:	andeq	r0, r2, r4, ror #1
   14f94:	push	{fp, lr}
   14f98:	add	fp, sp, #4
   14f9c:	sub	sp, sp, #8
   14fa0:	sub	r3, fp, #6
   14fa4:	mov	r1, #2
   14fa8:	mov	r0, r3
   14fac:	bl	11670 <rb_get_random@plt>
   14fb0:	ldrh	r3, [fp, #-6]
   14fb4:	ldr	r2, [pc, #40]	; 14fe4 <sprintf@plt+0x38f0>
   14fb8:	cmp	r3, r2
   14fbc:	ldrh	r3, [fp, #-6]
   14fc0:	mov	r0, r3
   14fc4:	bl	14f18 <sprintf@plt+0x3824>
   14fc8:	mov	r3, r0
   14fcc:	cmp	r3, #0
   14fd0:	bne	14fa0 <sprintf@plt+0x38ac>
   14fd4:	ldrh	r3, [fp, #-6]
   14fd8:	mov	r0, r3
   14fdc:	sub	sp, fp, #4
   14fe0:	pop	{fp, pc}
   14fe4:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   14fe8:	push	{fp, lr}
   14fec:	add	fp, sp, #4
   14ff0:	sub	sp, sp, #272	; 0x110
   14ff4:	str	r0, [fp, #-264]	; 0xfffffef8
   14ff8:	str	r1, [fp, #-268]	; 0xfffffef4
   14ffc:	str	r2, [fp, #-272]	; 0xfffffef0
   15000:	ldr	r3, [fp, #-264]	; 0xfffffef8
   15004:	cmp	r3, #0
   15008:	bne	1502c <sprintf@plt+0x3938>
   1500c:	ldr	r3, [pc, #92]	; 15070 <sprintf@plt+0x397c>
   15010:	add	r3, pc, r3
   15014:	mov	r2, #412	; 0x19c
   15018:	ldr	r1, [pc, #84]	; 15074 <sprintf@plt+0x3980>
   1501c:	add	r1, pc, r1
   15020:	ldr	r0, [pc, #80]	; 15078 <sprintf@plt+0x3984>
   15024:	add	r0, pc, r0
   15028:	bl	11460 <__assert_fail@plt>
   1502c:	sub	r3, fp, #260	; 0x104
   15030:	mov	r2, #256	; 0x100
   15034:	ldr	r1, [fp, #-264]	; 0xfffffef8
   15038:	mov	r0, r3
   1503c:	bl	1146c <rb_strlcpy@plt>
   15040:	sub	r3, fp, #260	; 0x104
   15044:	mov	r1, #255	; 0xff
   15048:	mov	r0, r3
   1504c:	bl	14a30 <sprintf@plt+0x333c>
   15050:	sub	r3, fp, #260	; 0x104
   15054:	ldr	r2, [fp, #-272]	; 0xfffffef0
   15058:	ldr	r1, [fp, #-268]	; 0xfffffef4
   1505c:	mov	r0, r3
   15060:	bl	1507c <sprintf@plt+0x3988>
   15064:	nop			; (mov r0, r0)
   15068:	sub	sp, fp, #4
   1506c:	pop	{fp, pc}
   15070:	muleq	r0, r0, lr
   15074:	andeq	r9, r0, r8, ror #26
   15078:	andeq	r9, r0, r8, ror #26
   1507c:	push	{fp, lr}
   15080:	add	fp, sp, #4
   15084:	sub	sp, sp, #16
   15088:	str	r0, [fp, #-8]
   1508c:	str	r1, [fp, #-12]
   15090:	str	r2, [fp, #-16]
   15094:	ldr	r3, [fp, #-8]
   15098:	cmp	r3, #0
   1509c:	bne	150c0 <sprintf@plt+0x39cc>
   150a0:	ldr	r3, [pc, #56]	; 150e0 <sprintf@plt+0x39ec>
   150a4:	add	r3, pc, r3
   150a8:	ldr	r2, [pc, #52]	; 150e4 <sprintf@plt+0x39f0>
   150ac:	ldr	r1, [pc, #52]	; 150e8 <sprintf@plt+0x39f4>
   150b0:	add	r1, pc, r1
   150b4:	ldr	r0, [pc, #48]	; 150ec <sprintf@plt+0x39f8>
   150b8:	add	r0, pc, r0
   150bc:	bl	11460 <__assert_fail@plt>
   150c0:	ldr	r3, [fp, #-16]
   150c4:	mov	r2, #0
   150c8:	ldr	r1, [fp, #-8]
   150cc:	ldr	r0, [fp, #-12]
   150d0:	bl	15120 <sprintf@plt+0x3a2c>
   150d4:	nop			; (mov r0, r0)
   150d8:	sub	sp, fp, #4
   150dc:	pop	{fp, pc}
   150e0:	andeq	r9, r0, r0, lsl lr
   150e4:	andeq	r0, r0, r9, lsr #3
   150e8:	ldrdeq	r9, [r0], -r4
   150ec:	ldrdeq	r9, [r0], -r4
   150f0:	push	{fp, lr}
   150f4:	add	fp, sp, #4
   150f8:	sub	sp, sp, #8
   150fc:	str	r0, [fp, #-8]
   15100:	str	r1, [fp, #-12]
   15104:	mov	r2, #0
   15108:	ldr	r1, [fp, #-8]
   1510c:	ldr	r0, [fp, #-12]
   15110:	bl	15640 <sprintf@plt+0x3f4c>
   15114:	nop			; (mov r0, r0)
   15118:	sub	sp, fp, #4
   1511c:	pop	{fp, pc}
   15120:	push	{fp, lr}
   15124:	add	fp, sp, #4
   15128:	sub	sp, sp, #16
   1512c:	str	r0, [fp, #-8]
   15130:	str	r1, [fp, #-12]
   15134:	str	r2, [fp, #-16]
   15138:	str	r3, [fp, #-20]	; 0xffffffec
   1513c:	ldr	r3, [fp, #-16]
   15140:	cmp	r3, #0
   15144:	bne	15168 <sprintf@plt+0x3a74>
   15148:	ldr	r0, [fp, #-8]
   1514c:	bl	14b50 <sprintf@plt+0x345c>
   15150:	str	r0, [fp, #-16]
   15154:	ldr	r0, [fp, #-12]
   15158:	bl	14488 <sprintf@plt+0x2d94>
   1515c:	mov	r2, r0
   15160:	ldr	r3, [fp, #-16]
   15164:	str	r2, [r3, #420]	; 0x1a4
   15168:	ldr	r3, [fp, #-16]
   1516c:	add	r3, r3, #21
   15170:	mov	r2, #256	; 0x100
   15174:	ldr	r1, [fp, #-12]
   15178:	mov	r0, r3
   1517c:	bl	1146c <rb_strlcpy@plt>
   15180:	ldr	r3, [fp, #-20]	; 0xffffffec
   15184:	uxtb	r2, r3
   15188:	ldr	r3, [fp, #-16]
   1518c:	strb	r2, [r3, #20]
   15190:	ldr	r0, [fp, #-16]
   15194:	bl	156d4 <sprintf@plt+0x3fe0>
   15198:	nop			; (mov r0, r0)
   1519c:	sub	sp, fp, #4
   151a0:	pop	{fp, pc}
   151a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151a8:	add	fp, sp, #32
   151ac:	sub	sp, sp, #244	; 0xf4
   151b0:	str	r0, [fp, #-56]	; 0xffffffc8
   151b4:	str	r1, [fp, #-60]	; 0xffffffc4
   151b8:	str	r2, [fp, #-64]	; 0xffffffc0
   151bc:	str	r3, [fp, #-68]	; 0xffffffbc
   151c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   151c4:	ldrh	r3, [r3]
   151c8:	cmp	r3, #2
   151cc:	bne	15268 <sprintf@plt+0x3b74>
   151d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   151d4:	str	r3, [fp, #-40]	; 0xffffffd8
   151d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   151dc:	add	r3, r3, #4
   151e0:	str	r3, [fp, #-44]	; 0xffffffd4
   151e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   151e8:	add	r3, r3, #3
   151ec:	ldrb	r3, [r3]
   151f0:	mov	ip, r3
   151f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   151f8:	add	r3, r3, #2
   151fc:	ldrb	r3, [r3]
   15200:	mov	r2, r3
   15204:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15208:	add	r3, r3, #1
   1520c:	ldrb	r3, [r3]
   15210:	mov	r1, r3
   15214:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15218:	ldrb	r3, [r3]
   1521c:	mov	r0, r3
   15220:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15224:	cmp	r3, #0
   15228:	beq	15234 <sprintf@plt+0x3b40>
   1522c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15230:	b	1523c <sprintf@plt+0x3b48>
   15234:	ldr	r3, [pc, #1012]	; 15630 <sprintf@plt+0x3f3c>
   15238:	add	r3, pc, r3
   1523c:	str	r3, [sp, #12]
   15240:	str	r0, [sp, #8]
   15244:	str	r1, [sp, #4]
   15248:	str	r2, [sp]
   1524c:	mov	r3, ip
   15250:	ldr	r2, [pc, #988]	; 15634 <sprintf@plt+0x3f40>
   15254:	add	r2, pc, r2
   15258:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1525c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15260:	bl	11688 <snprintf@plt>
   15264:	b	15624 <sprintf@plt+0x3f30>
   15268:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1526c:	ldrh	r3, [r3]
   15270:	cmp	r3, #10
   15274:	bne	15624 <sprintf@plt+0x3f30>
   15278:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1527c:	str	r3, [fp, #-48]	; 0xffffffd0
   15280:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15284:	add	r3, r3, #8
   15288:	str	r3, [fp, #-44]	; 0xffffffd4
   1528c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15290:	add	r3, r3, #15
   15294:	ldrb	r3, [r3]
   15298:	and	r3, r3, #15
   1529c:	str	r3, [fp, #-72]	; 0xffffffb8
   152a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152a4:	add	r3, r3, #15
   152a8:	ldrb	r3, [r3]
   152ac:	lsr	r3, r3, #4
   152b0:	uxtb	r3, r3
   152b4:	str	r3, [fp, #-76]	; 0xffffffb4
   152b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152bc:	add	r3, r3, #14
   152c0:	ldrb	r3, [r3]
   152c4:	and	r3, r3, #15
   152c8:	str	r3, [fp, #-80]	; 0xffffffb0
   152cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152d0:	add	r3, r3, #14
   152d4:	ldrb	r3, [r3]
   152d8:	lsr	r3, r3, #4
   152dc:	uxtb	r3, r3
   152e0:	str	r3, [fp, #-84]	; 0xffffffac
   152e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152e8:	add	r3, r3, #13
   152ec:	ldrb	r3, [r3]
   152f0:	and	r3, r3, #15
   152f4:	str	r3, [fp, #-88]	; 0xffffffa8
   152f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152fc:	add	r3, r3, #13
   15300:	ldrb	r3, [r3]
   15304:	lsr	r3, r3, #4
   15308:	uxtb	r3, r3
   1530c:	str	r3, [fp, #-92]	; 0xffffffa4
   15310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15314:	add	r3, r3, #12
   15318:	ldrb	r3, [r3]
   1531c:	and	r3, r3, #15
   15320:	str	r3, [fp, #-96]	; 0xffffffa0
   15324:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15328:	add	r3, r3, #12
   1532c:	ldrb	r3, [r3]
   15330:	lsr	r3, r3, #4
   15334:	uxtb	r3, r3
   15338:	str	r3, [fp, #-100]	; 0xffffff9c
   1533c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15340:	add	r3, r3, #11
   15344:	ldrb	r3, [r3]
   15348:	and	r3, r3, #15
   1534c:	str	r3, [fp, #-104]	; 0xffffff98
   15350:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15354:	add	r3, r3, #11
   15358:	ldrb	r3, [r3]
   1535c:	lsr	r3, r3, #4
   15360:	uxtb	r3, r3
   15364:	str	r3, [fp, #-108]	; 0xffffff94
   15368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1536c:	add	r3, r3, #10
   15370:	ldrb	r3, [r3]
   15374:	and	r3, r3, #15
   15378:	str	r3, [fp, #-112]	; 0xffffff90
   1537c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15380:	add	r3, r3, #10
   15384:	ldrb	r3, [r3]
   15388:	lsr	r3, r3, #4
   1538c:	uxtb	r3, r3
   15390:	str	r3, [fp, #-116]	; 0xffffff8c
   15394:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15398:	add	r3, r3, #9
   1539c:	ldrb	r3, [r3]
   153a0:	and	r3, r3, #15
   153a4:	str	r3, [fp, #-120]	; 0xffffff88
   153a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153ac:	add	r3, r3, #9
   153b0:	ldrb	r3, [r3]
   153b4:	lsr	r3, r3, #4
   153b8:	uxtb	r3, r3
   153bc:	str	r3, [fp, #-124]	; 0xffffff84
   153c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153c4:	add	r3, r3, #8
   153c8:	ldrb	r3, [r3]
   153cc:	and	r3, r3, #15
   153d0:	str	r3, [fp, #-128]	; 0xffffff80
   153d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153d8:	add	r3, r3, #8
   153dc:	ldrb	r3, [r3]
   153e0:	lsr	r3, r3, #4
   153e4:	uxtb	r3, r3
   153e8:	str	r3, [fp, #-132]	; 0xffffff7c
   153ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153f0:	add	r3, r3, #7
   153f4:	ldrb	r3, [r3]
   153f8:	and	sl, r3, #15
   153fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15400:	add	r3, r3, #7
   15404:	ldrb	r3, [r3]
   15408:	lsr	r3, r3, #4
   1540c:	uxtb	r3, r3
   15410:	str	r3, [fp, #-136]	; 0xffffff78
   15414:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15418:	add	r3, r3, #6
   1541c:	ldrb	r3, [r3]
   15420:	and	r9, r3, #15
   15424:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15428:	add	r3, r3, #6
   1542c:	ldrb	r3, [r3]
   15430:	lsr	r3, r3, #4
   15434:	uxtb	r3, r3
   15438:	str	r3, [fp, #-140]	; 0xffffff74
   1543c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15440:	add	r3, r3, #5
   15444:	ldrb	r3, [r3]
   15448:	and	r7, r3, #15
   1544c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15450:	add	r3, r3, #5
   15454:	ldrb	r3, [r3]
   15458:	lsr	r3, r3, #4
   1545c:	uxtb	r3, r3
   15460:	str	r3, [fp, #-144]	; 0xffffff70
   15464:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15468:	add	r3, r3, #4
   1546c:	ldrb	r3, [r3]
   15470:	and	r6, r3, #15
   15474:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15478:	add	r3, r3, #4
   1547c:	ldrb	r3, [r3]
   15480:	lsr	r3, r3, #4
   15484:	uxtb	r3, r3
   15488:	str	r3, [fp, #-148]	; 0xffffff6c
   1548c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15490:	add	r3, r3, #3
   15494:	ldrb	r3, [r3]
   15498:	and	r4, r3, #15
   1549c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154a0:	add	r3, r3, #3
   154a4:	ldrb	r3, [r3]
   154a8:	lsr	r3, r3, #4
   154ac:	uxtb	r3, r3
   154b0:	mov	r8, r3
   154b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154b8:	add	r3, r3, #2
   154bc:	ldrb	r3, [r3]
   154c0:	and	lr, r3, #15
   154c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154c8:	add	r3, r3, #2
   154cc:	ldrb	r3, [r3]
   154d0:	lsr	r3, r3, #4
   154d4:	uxtb	r3, r3
   154d8:	mov	r5, r3
   154dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154e0:	add	r3, r3, #1
   154e4:	ldrb	r3, [r3]
   154e8:	and	r0, r3, #15
   154ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154f0:	add	r3, r3, #1
   154f4:	ldrb	r3, [r3]
   154f8:	lsr	r3, r3, #4
   154fc:	uxtb	r3, r3
   15500:	mov	ip, r3
   15504:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15508:	ldrb	r3, [r3]
   1550c:	and	r2, r3, #15
   15510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15514:	ldrb	r3, [r3]
   15518:	lsr	r3, r3, #4
   1551c:	uxtb	r3, r3
   15520:	mov	r1, r3
   15524:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15528:	cmp	r3, #0
   1552c:	beq	15538 <sprintf@plt+0x3e44>
   15530:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15534:	b	15540 <sprintf@plt+0x3e4c>
   15538:	ldr	r3, [pc, #248]	; 15638 <sprintf@plt+0x3f44>
   1553c:	add	r3, pc, r3
   15540:	str	r3, [sp, #124]	; 0x7c
   15544:	str	r1, [sp, #120]	; 0x78
   15548:	str	r2, [sp, #116]	; 0x74
   1554c:	str	ip, [sp, #112]	; 0x70
   15550:	str	r0, [sp, #108]	; 0x6c
   15554:	str	r5, [sp, #104]	; 0x68
   15558:	str	lr, [sp, #100]	; 0x64
   1555c:	str	r8, [sp, #96]	; 0x60
   15560:	str	r4, [sp, #92]	; 0x5c
   15564:	ldr	r3, [fp, #-148]	; 0xffffff6c
   15568:	str	r3, [sp, #88]	; 0x58
   1556c:	str	r6, [sp, #84]	; 0x54
   15570:	ldr	r3, [fp, #-144]	; 0xffffff70
   15574:	str	r3, [sp, #80]	; 0x50
   15578:	str	r7, [sp, #76]	; 0x4c
   1557c:	ldr	r3, [fp, #-140]	; 0xffffff74
   15580:	str	r3, [sp, #72]	; 0x48
   15584:	str	r9, [sp, #68]	; 0x44
   15588:	ldr	r3, [fp, #-136]	; 0xffffff78
   1558c:	str	r3, [sp, #64]	; 0x40
   15590:	str	sl, [sp, #60]	; 0x3c
   15594:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15598:	str	r3, [sp, #56]	; 0x38
   1559c:	ldr	r3, [fp, #-128]	; 0xffffff80
   155a0:	str	r3, [sp, #52]	; 0x34
   155a4:	ldr	r3, [fp, #-124]	; 0xffffff84
   155a8:	str	r3, [sp, #48]	; 0x30
   155ac:	ldr	r3, [fp, #-120]	; 0xffffff88
   155b0:	str	r3, [sp, #44]	; 0x2c
   155b4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   155b8:	str	r3, [sp, #40]	; 0x28
   155bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   155c0:	str	r3, [sp, #36]	; 0x24
   155c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   155c8:	str	r3, [sp, #32]
   155cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   155d0:	str	r3, [sp, #28]
   155d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155d8:	str	r3, [sp, #24]
   155dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   155e0:	str	r3, [sp, #20]
   155e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155e8:	str	r3, [sp, #16]
   155ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   155f0:	str	r3, [sp, #12]
   155f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   155f8:	str	r3, [sp, #8]
   155fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15600:	str	r3, [sp, #4]
   15604:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15608:	str	r3, [sp]
   1560c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15610:	ldr	r2, [pc, #36]	; 1563c <sprintf@plt+0x3f48>
   15614:	add	r2, pc, r2
   15618:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1561c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15620:	bl	11688 <snprintf@plt>
   15624:	nop			; (mov r0, r0)
   15628:	sub	sp, fp, #32
   1562c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15630:	andeq	r9, r0, r0, ror #22
   15634:	andeq	r9, r0, r4, asr fp
   15638:	andeq	r9, r0, ip, ror r8
   1563c:			; <UNDEFINED> instruction: 0x000097b0
   15640:	push	{fp, lr}
   15644:	add	fp, sp, #4
   15648:	sub	sp, sp, #16
   1564c:	str	r0, [fp, #-8]
   15650:	str	r1, [fp, #-12]
   15654:	str	r2, [fp, #-16]
   15658:	ldr	r3, [fp, #-16]
   1565c:	cmp	r3, #0
   15660:	bne	1569c <sprintf@plt+0x3fa8>
   15664:	ldr	r0, [fp, #-8]
   15668:	bl	14b50 <sprintf@plt+0x345c>
   1566c:	str	r0, [fp, #-16]
   15670:	ldr	r3, [fp, #-16]
   15674:	add	r3, r3, #292	; 0x124
   15678:	mov	r2, #128	; 0x80
   1567c:	ldr	r1, [fp, #-12]
   15680:	mov	r0, r3
   15684:	bl	11514 <memcpy@plt>
   15688:	mov	r0, #256	; 0x100
   1568c:	bl	14434 <sprintf@plt+0x2d40>
   15690:	mov	r2, r0
   15694:	ldr	r3, [fp, #-16]
   15698:	str	r2, [r3, #420]	; 0x1a4
   1569c:	ldr	r3, [fp, #-16]
   156a0:	add	r0, r3, #21
   156a4:	mov	r3, #0
   156a8:	ldr	r2, [fp, #-12]
   156ac:	mov	r1, #256	; 0x100
   156b0:	bl	151a4 <sprintf@plt+0x3ab0>
   156b4:	ldr	r3, [fp, #-16]
   156b8:	mov	r2, #12
   156bc:	strb	r2, [r3, #20]
   156c0:	ldr	r0, [fp, #-16]
   156c4:	bl	156d4 <sprintf@plt+0x3fe0>
   156c8:	nop			; (mov r0, r0)
   156cc:	sub	sp, fp, #4
   156d0:	pop	{fp, pc}
   156d4:	push	{fp, lr}
   156d8:	add	fp, sp, #4
   156dc:	sub	sp, sp, #1056	; 0x420
   156e0:	str	r0, [fp, #-1048]	; 0xfffffbe8
   156e4:	mov	r3, #0
   156e8:	str	r3, [fp, #-8]
   156ec:	sub	r3, fp, #1024	; 0x400
   156f0:	sub	r3, r3, #4
   156f4:	sub	r3, r3, #12
   156f8:	mov	r2, #1024	; 0x400
   156fc:	mov	r1, #0
   15700:	mov	r0, r3
   15704:	bl	11430 <memset@plt>
   15708:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   1570c:	add	r0, r3, #21
   15710:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15714:	ldrb	r3, [r3, #20]
   15718:	mov	r1, r3
   1571c:	sub	r3, fp, #1024	; 0x400
   15720:	sub	r3, r3, #4
   15724:	sub	r3, r3, #12
   15728:	mov	r2, #1024	; 0x400
   1572c:	str	r2, [sp]
   15730:	mov	r2, r1
   15734:	mov	r1, #1
   15738:	bl	18870 <sprintf@plt+0x717c>
   1573c:	str	r0, [fp, #-8]
   15740:	ldr	r3, [fp, #-8]
   15744:	cmp	r3, #0
   15748:	ble	157c8 <sprintf@plt+0x40d4>
   1574c:	sub	r3, fp, #1024	; 0x400
   15750:	sub	r3, r3, #4
   15754:	sub	r3, r3, #12
   15758:	str	r3, [fp, #-12]
   1575c:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15760:	ldr	r3, [r3, #12]
   15764:	uxth	r2, r3
   15768:	ldr	r3, [fp, #-12]
   1576c:	strh	r2, [r3]
   15770:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15774:	ldrb	r3, [r3, #278]	; 0x116
   15778:	add	r3, r3, #1
   1577c:	uxtb	r2, r3
   15780:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   15784:	strb	r2, [r3, #278]	; 0x116
   15788:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   1578c:	ldrb	r3, [r3, #278]	; 0x116
   15790:	mov	r2, r3
   15794:	sub	r3, fp, #1024	; 0x400
   15798:	sub	r3, r3, #4
   1579c:	sub	r3, r3, #12
   157a0:	ldr	r1, [fp, #-8]
   157a4:	mov	r0, r3
   157a8:	bl	14c48 <sprintf@plt+0x3554>
   157ac:	str	r0, [fp, #-16]
   157b0:	ldr	r3, [fp, #-16]
   157b4:	cmn	r3, #1
   157b8:	beq	157c8 <sprintf@plt+0x40d4>
   157bc:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   157c0:	ldr	r2, [fp, #-16]
   157c4:	str	r2, [r3, #288]	; 0x120
   157c8:	nop			; (mov r0, r0)
   157cc:	sub	sp, fp, #4
   157d0:	pop	{fp, pc}
   157d4:	push	{fp, lr}
   157d8:	add	fp, sp, #4
   157dc:	sub	sp, sp, #8
   157e0:	str	r0, [fp, #-8]
   157e4:	ldr	r3, [fp, #-8]
   157e8:	ldrb	r3, [r3, #277]	; 0x115
   157ec:	sub	r3, r3, #1
   157f0:	uxtb	r2, r3
   157f4:	ldr	r3, [fp, #-8]
   157f8:	strb	r2, [r3, #277]	; 0x115
   157fc:	ldr	r3, [fp, #-8]
   15800:	ldrb	r3, [r3, #277]	; 0x115
   15804:	cmp	r3, #0
   15808:	bne	1583c <sprintf@plt+0x4148>
   1580c:	ldr	r3, [fp, #-8]
   15810:	ldr	r3, [r3, #424]	; 0x1a8
   15814:	ldr	r3, [r3, #4]
   15818:	ldr	r2, [fp, #-8]
   1581c:	ldr	r2, [r2, #424]	; 0x1a8
   15820:	ldr	r2, [r2]
   15824:	mov	r1, #0
   15828:	mov	r0, r2
   1582c:	blx	r3
   15830:	ldr	r0, [fp, #-8]
   15834:	bl	14b00 <sprintf@plt+0x340c>
   15838:	b	1589c <sprintf@plt+0x41a8>
   1583c:	ldr	r3, [fp, #-8]
   15840:	ldrb	r3, [r3, #20]
   15844:	cmp	r3, #12
   15848:	beq	15860 <sprintf@plt+0x416c>
   1584c:	cmp	r3, #28
   15850:	beq	1587c <sprintf@plt+0x4188>
   15854:	cmp	r3, #1
   15858:	beq	1587c <sprintf@plt+0x4188>
   1585c:	b	1589c <sprintf@plt+0x41a8>
   15860:	ldr	r3, [fp, #-8]
   15864:	add	r3, r3, #292	; 0x124
   15868:	ldr	r2, [fp, #-8]
   1586c:	mov	r1, r3
   15870:	mov	r0, #0
   15874:	bl	15640 <sprintf@plt+0x3f4c>
   15878:	b	1589c <sprintf@plt+0x41a8>
   1587c:	ldr	r3, [fp, #-8]
   15880:	ldr	r1, [r3, #420]	; 0x1a4
   15884:	ldr	r3, [fp, #-8]
   15888:	ldrb	r3, [r3, #20]
   1588c:	ldr	r2, [fp, #-8]
   15890:	mov	r0, #0
   15894:	bl	15120 <sprintf@plt+0x3a2c>
   15898:	nop			; (mov r0, r0)
   1589c:	sub	sp, fp, #4
   158a0:	pop	{fp, pc}
   158a4:	push	{fp, lr}
   158a8:	add	fp, sp, #4
   158ac:	sub	sp, sp, #288	; 0x120
   158b0:	str	r0, [fp, #-272]	; 0xfffffef0
   158b4:	str	r1, [fp, #-276]	; 0xfffffeec
   158b8:	str	r2, [fp, #-280]	; 0xfffffee8
   158bc:	str	r3, [fp, #-284]	; 0xfffffee4
   158c0:	ldr	r3, [fp, #-280]	; 0xfffffee8
   158c4:	add	r3, r3, #12
   158c8:	str	r3, [fp, #-8]
   158cc:	ldr	r3, [fp, #-276]	; 0xfffffeec
   158d0:	ldrh	r3, [r3, #4]
   158d4:	cmp	r3, #1
   158d8:	beq	158e4 <sprintf@plt+0x41f0>
   158dc:	mov	r3, #0
   158e0:	b	1594c <sprintf@plt+0x4258>
   158e4:	sub	r2, fp, #268	; 0x10c
   158e8:	mov	r3, #256	; 0x100
   158ec:	str	r3, [sp]
   158f0:	mov	r3, r2
   158f4:	ldr	r2, [fp, #-8]
   158f8:	ldr	r1, [fp, #-284]	; 0xfffffee4
   158fc:	ldr	r0, [fp, #-280]	; 0xfffffee8
   15900:	bl	16758 <sprintf@plt+0x5064>
   15904:	str	r0, [fp, #-12]
   15908:	ldr	r3, [fp, #-12]
   1590c:	cmp	r3, #0
   15910:	bgt	1591c <sprintf@plt+0x4228>
   15914:	mov	r3, #0
   15918:	b	1594c <sprintf@plt+0x4258>
   1591c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15920:	add	r2, r3, #21
   15924:	sub	r3, fp, #268	; 0x10c
   15928:	mov	r1, r2
   1592c:	mov	r0, r3
   15930:	bl	114b4 <rb_strcasecmp@plt>
   15934:	mov	r3, r0
   15938:	cmp	r3, #0
   1593c:	beq	15948 <sprintf@plt+0x4254>
   15940:	mov	r3, #0
   15944:	b	1594c <sprintf@plt+0x4258>
   15948:	mov	r3, #1
   1594c:	mov	r0, r3
   15950:	sub	sp, fp, #4
   15954:	pop	{fp, pc}
   15958:	push	{fp, lr}
   1595c:	add	fp, sp, #4
   15960:	sub	sp, sp, #408	; 0x198
   15964:	str	r0, [fp, #-392]	; 0xfffffe78
   15968:	str	r1, [fp, #-396]	; 0xfffffe74
   1596c:	str	r2, [fp, #-400]	; 0xfffffe70
   15970:	str	r3, [fp, #-404]	; 0xfffffe6c
   15974:	ldr	r3, [fp, #-400]	; 0xfffffe70
   15978:	add	r3, r3, #12
   1597c:	str	r3, [fp, #-8]
   15980:	b	159d4 <sprintf@plt+0x42e0>
   15984:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   15988:	ldr	r0, [fp, #-8]
   1598c:	bl	16ff0 <sprintf@plt+0x58fc>
   15990:	str	r0, [fp, #-12]
   15994:	ldr	r3, [fp, #-12]
   15998:	cmp	r3, #0
   1599c:	bge	159a8 <sprintf@plt+0x42b4>
   159a0:	mov	r3, #0
   159a4:	b	15cb8 <sprintf@plt+0x45c4>
   159a8:	ldr	r3, [fp, #-12]
   159ac:	add	r3, r3, #4
   159b0:	ldr	r2, [fp, #-8]
   159b4:	add	r3, r2, r3
   159b8:	str	r3, [fp, #-8]
   159bc:	ldr	r3, [fp, #-396]	; 0xfffffe74
   159c0:	ldrh	r3, [r3, #4]
   159c4:	sub	r3, r3, #1
   159c8:	uxth	r2, r3
   159cc:	ldr	r3, [fp, #-396]	; 0xfffffe74
   159d0:	strh	r2, [r3, #4]
   159d4:	ldr	r3, [fp, #-396]	; 0xfffffe74
   159d8:	ldrh	r3, [r3, #4]
   159dc:	cmp	r3, #0
   159e0:	bne	15984 <sprintf@plt+0x4290>
   159e4:	b	15c8c <sprintf@plt+0x4598>
   159e8:	ldr	r3, [fp, #-396]	; 0xfffffe74
   159ec:	ldrh	r3, [r3, #6]
   159f0:	sub	r3, r3, #1
   159f4:	uxth	r2, r3
   159f8:	ldr	r3, [fp, #-396]	; 0xfffffe74
   159fc:	strh	r2, [r3, #6]
   15a00:	sub	r2, fp, #384	; 0x180
   15a04:	ldr	r3, [pc, #696]	; 15cc4 <sprintf@plt+0x45d0>
   15a08:	str	r3, [sp]
   15a0c:	mov	r3, r2
   15a10:	ldr	r2, [fp, #-8]
   15a14:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   15a18:	ldr	r0, [fp, #-400]	; 0xfffffe70
   15a1c:	bl	16758 <sprintf@plt+0x5064>
   15a20:	str	r0, [fp, #-12]
   15a24:	ldr	r3, [fp, #-12]
   15a28:	cmp	r3, #0
   15a2c:	bge	15a38 <sprintf@plt+0x4344>
   15a30:	mov	r3, #0
   15a34:	b	15cb8 <sprintf@plt+0x45c4>
   15a38:	ldr	r3, [fp, #-12]
   15a3c:	cmp	r3, #0
   15a40:	bne	15a4c <sprintf@plt+0x4358>
   15a44:	mov	r3, #0
   15a48:	b	15cb8 <sprintf@plt+0x45c4>
   15a4c:	mov	r3, #0
   15a50:	strb	r3, [fp, #-129]	; 0xffffff7f
   15a54:	ldr	r3, [fp, #-12]
   15a58:	ldr	r2, [fp, #-8]
   15a5c:	add	r3, r2, r3
   15a60:	str	r3, [fp, #-8]
   15a64:	ldr	r3, [fp, #-8]
   15a68:	add	r2, r3, #10
   15a6c:	ldr	r3, [fp, #-404]	; 0xfffffe6c
   15a70:	cmp	r2, r3
   15a74:	bcs	15cb0 <sprintf@plt+0x45bc>
   15a78:	ldr	r0, [fp, #-8]
   15a7c:	bl	17190 <sprintf@plt+0x5a9c>
   15a80:	mov	r3, r0
   15a84:	str	r3, [fp, #-16]
   15a88:	ldr	r3, [fp, #-8]
   15a8c:	add	r3, r3, #2
   15a90:	str	r3, [fp, #-8]
   15a94:	ldr	r0, [fp, #-8]
   15a98:	bl	17190 <sprintf@plt+0x5a9c>
   15a9c:	ldr	r3, [fp, #-8]
   15aa0:	add	r3, r3, #2
   15aa4:	str	r3, [fp, #-8]
   15aa8:	ldr	r0, [fp, #-8]
   15aac:	bl	171e8 <sprintf@plt+0x5af4>
   15ab0:	mov	r3, r0
   15ab4:	mov	r2, r3
   15ab8:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15abc:	str	r2, [r3, #16]
   15ac0:	ldr	r3, [fp, #-8]
   15ac4:	add	r3, r3, #4
   15ac8:	str	r3, [fp, #-8]
   15acc:	ldr	r0, [fp, #-8]
   15ad0:	bl	17190 <sprintf@plt+0x5a9c>
   15ad4:	mov	r3, r0
   15ad8:	str	r3, [fp, #-20]	; 0xffffffec
   15adc:	ldr	r3, [fp, #-8]
   15ae0:	add	r3, r3, #2
   15ae4:	str	r3, [fp, #-8]
   15ae8:	ldr	r3, [fp, #-16]
   15aec:	cmp	r3, #12
   15af0:	beq	15bf8 <sprintf@plt+0x4504>
   15af4:	cmp	r3, #28
   15af8:	beq	15b7c <sprintf@plt+0x4488>
   15afc:	cmp	r3, #1
   15b00:	bne	15c7c <sprintf@plt+0x4588>
   15b04:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15b08:	ldrb	r3, [r3, #20]
   15b0c:	cmp	r3, #1
   15b10:	beq	15b1c <sprintf@plt+0x4428>
   15b14:	mov	r3, #0
   15b18:	b	15cb8 <sprintf@plt+0x45c4>
   15b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b20:	cmp	r3, #4
   15b24:	beq	15b30 <sprintf@plt+0x443c>
   15b28:	mov	r3, #0
   15b2c:	b	15cb8 <sprintf@plt+0x45c4>
   15b30:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15b34:	add	r3, r3, #292	; 0x124
   15b38:	str	r3, [fp, #-24]	; 0xffffffe8
   15b3c:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15b40:	add	r3, r3, #292	; 0x124
   15b44:	ldr	r2, [fp, #-392]	; 0xfffffe78
   15b48:	add	r2, r2, #292	; 0x124
   15b4c:	ldrh	r2, [r2]
   15b50:	strh	r2, [r3]
   15b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b58:	mov	r2, #2
   15b5c:	strh	r2, [r3]
   15b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b64:	add	r3, r3, #4
   15b68:	ldr	r2, [fp, #-8]
   15b6c:	ldr	r2, [r2]
   15b70:	str	r2, [r3]
   15b74:	mov	r3, #1
   15b78:	b	15cb8 <sprintf@plt+0x45c4>
   15b7c:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15b80:	ldrb	r3, [r3, #20]
   15b84:	cmp	r3, #28
   15b88:	beq	15b94 <sprintf@plt+0x44a0>
   15b8c:	mov	r3, #0
   15b90:	b	15cb8 <sprintf@plt+0x45c4>
   15b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b98:	cmp	r3, #16
   15b9c:	beq	15ba8 <sprintf@plt+0x44b4>
   15ba0:	mov	r3, #0
   15ba4:	b	15cb8 <sprintf@plt+0x45c4>
   15ba8:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15bac:	add	r3, r3, #292	; 0x124
   15bb0:	ldr	r2, [fp, #-392]	; 0xfffffe78
   15bb4:	add	r2, r2, #292	; 0x124
   15bb8:	ldrh	r2, [r2]
   15bbc:	strh	r2, [r3]
   15bc0:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15bc4:	add	r3, r3, #292	; 0x124
   15bc8:	str	r3, [fp, #-28]	; 0xffffffe4
   15bcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bd0:	mov	r2, #10
   15bd4:	strh	r2, [r3]
   15bd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bdc:	add	r3, r3, #8
   15be0:	mov	r2, #16
   15be4:	ldr	r1, [fp, #-8]
   15be8:	mov	r0, r3
   15bec:	bl	11514 <memcpy@plt>
   15bf0:	mov	r3, #1
   15bf4:	b	15cb8 <sprintf@plt+0x45c4>
   15bf8:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15bfc:	ldrb	r3, [r3, #20]
   15c00:	cmp	r3, #12
   15c04:	beq	15c10 <sprintf@plt+0x451c>
   15c08:	mov	r3, #0
   15c0c:	b	15cb8 <sprintf@plt+0x45c4>
   15c10:	sub	r2, fp, #384	; 0x180
   15c14:	ldr	r3, [pc, #168]	; 15cc4 <sprintf@plt+0x45d0>
   15c18:	str	r3, [sp]
   15c1c:	mov	r3, r2
   15c20:	ldr	r2, [fp, #-8]
   15c24:	ldr	r1, [fp, #-404]	; 0xfffffe6c
   15c28:	ldr	r0, [fp, #-400]	; 0xfffffe70
   15c2c:	bl	16758 <sprintf@plt+0x5064>
   15c30:	str	r0, [fp, #-12]
   15c34:	ldr	r3, [fp, #-12]
   15c38:	cmp	r3, #0
   15c3c:	bge	15c48 <sprintf@plt+0x4554>
   15c40:	mov	r3, #0
   15c44:	b	15cb8 <sprintf@plt+0x45c4>
   15c48:	ldr	r3, [fp, #-12]
   15c4c:	cmp	r3, #0
   15c50:	bne	15c5c <sprintf@plt+0x4568>
   15c54:	mov	r3, #0
   15c58:	b	15cb8 <sprintf@plt+0x45c4>
   15c5c:	ldr	r3, [fp, #-392]	; 0xfffffe78
   15c60:	ldr	r3, [r3, #420]	; 0x1a4
   15c64:	sub	r1, fp, #384	; 0x180
   15c68:	mov	r2, #256	; 0x100
   15c6c:	mov	r0, r3
   15c70:	bl	1146c <rb_strlcpy@plt>
   15c74:	mov	r3, #1
   15c78:	b	15cb8 <sprintf@plt+0x45c4>
   15c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c80:	ldr	r2, [fp, #-8]
   15c84:	add	r3, r2, r3
   15c88:	str	r3, [fp, #-8]
   15c8c:	ldr	r3, [fp, #-396]	; 0xfffffe74
   15c90:	ldrh	r3, [r3, #6]
   15c94:	cmp	r3, #0
   15c98:	beq	15cb4 <sprintf@plt+0x45c0>
   15c9c:	ldr	r2, [fp, #-8]
   15ca0:	ldr	r3, [fp, #-404]	; 0xfffffe6c
   15ca4:	cmp	r2, r3
   15ca8:	bcc	159e8 <sprintf@plt+0x42f4>
   15cac:	b	15cb4 <sprintf@plt+0x45c0>
   15cb0:	nop			; (mov r0, r0)
   15cb4:	mov	r3, #1
   15cb8:	mov	r0, r3
   15cbc:	sub	sp, fp, #4
   15cc0:	pop	{fp, pc}
   15cc4:	andeq	r0, r0, r3, ror #2
   15cc8:	push	{fp, lr}
   15ccc:	add	fp, sp, #4
   15cd0:	sub	sp, sp, #1200	; 0x4b0
   15cd4:	sub	sp, sp, #8
   15cd8:	str	r0, [fp, #-1200]	; 0xfffffb50
   15cdc:	str	r1, [fp, #-1204]	; 0xfffffb4c
   15ce0:	mov	r3, #0
   15ce4:	str	r3, [fp, #-8]
   15ce8:	mov	r3, #0
   15cec:	str	r3, [fp, #-12]
   15cf0:	mov	r3, #128	; 0x80
   15cf4:	str	r3, [fp, #-1068]	; 0xfffffbd4
   15cf8:	ldr	r0, [fp, #-1200]	; 0xfffffb50
   15cfc:	bl	1137c <rb_get_fd@plt>
   15d00:	sub	r1, fp, #1056	; 0x420
   15d04:	sub	r1, r1, #4
   15d08:	sub	r1, r1, #4
   15d0c:	sub	r3, fp, #1056	; 0x420
   15d10:	sub	r3, r3, #4
   15d14:	sub	r3, r3, #8
   15d18:	str	r3, [sp, #4]
   15d1c:	sub	r3, fp, #1184	; 0x4a0
   15d20:	sub	r3, r3, #4
   15d24:	sub	r3, r3, #8
   15d28:	str	r3, [sp]
   15d2c:	mov	r3, #0
   15d30:	ldr	r2, [pc, #1116]	; 16194 <sprintf@plt+0x4aa0>
   15d34:	bl	116ac <recvfrom@plt>
   15d38:	str	r0, [fp, #-16]
   15d3c:	ldr	r3, [fp, #-16]
   15d40:	cmp	r3, #0
   15d44:	beq	15d54 <sprintf@plt+0x4660>
   15d48:	ldr	r3, [fp, #-16]
   15d4c:	cmn	r3, #1
   15d50:	bne	15d5c <sprintf@plt+0x4668>
   15d54:	mov	r3, #0
   15d58:	b	16188 <sprintf@plt+0x4a94>
   15d5c:	ldr	r3, [fp, #-16]
   15d60:	cmp	r3, #12
   15d64:	bgt	15d70 <sprintf@plt+0x467c>
   15d68:	mov	r3, #1
   15d6c:	b	16188 <sprintf@plt+0x4a94>
   15d70:	sub	r3, fp, #1056	; 0x420
   15d74:	sub	r3, r3, #4
   15d78:	sub	r3, r3, #4
   15d7c:	str	r3, [fp, #-20]	; 0xffffffec
   15d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d84:	ldrh	r3, [r3, #6]
   15d88:	mov	r0, r3
   15d8c:	bl	114d8 <ntohs@plt>
   15d90:	mov	r3, r0
   15d94:	mov	r2, r3
   15d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d9c:	strh	r2, [r3, #6]
   15da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15da4:	ldrh	r3, [r3, #4]
   15da8:	mov	r0, r3
   15dac:	bl	114d8 <ntohs@plt>
   15db0:	mov	r3, r0
   15db4:	mov	r2, r3
   15db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15dbc:	strh	r2, [r3, #4]
   15dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15dc4:	ldrh	r3, [r3, #8]
   15dc8:	mov	r0, r3
   15dcc:	bl	114d8 <ntohs@plt>
   15dd0:	mov	r3, r0
   15dd4:	mov	r2, r3
   15dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ddc:	strh	r2, [r3, #8]
   15de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15de4:	ldrh	r3, [r3, #10]
   15de8:	mov	r0, r3
   15dec:	bl	114d8 <ntohs@plt>
   15df0:	mov	r3, r0
   15df4:	mov	r2, r3
   15df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15dfc:	strh	r2, [r3, #10]
   15e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e04:	ldrh	r3, [r3]
   15e08:	mov	r0, r3
   15e0c:	bl	14f18 <sprintf@plt+0x3824>
   15e10:	str	r0, [fp, #-8]
   15e14:	ldr	r3, [fp, #-8]
   15e18:	cmp	r3, #0
   15e1c:	bne	15e28 <sprintf@plt+0x4734>
   15e20:	mov	r3, #1
   15e24:	b	16188 <sprintf@plt+0x4a94>
   15e28:	sub	r3, fp, #1184	; 0x4a0
   15e2c:	sub	r3, r3, #4
   15e30:	sub	r3, r3, #8
   15e34:	mov	r0, r3
   15e38:	bl	14534 <sprintf@plt+0x2e40>
   15e3c:	str	r0, [fp, #-24]	; 0xffffffe8
   15e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e44:	cmn	r3, #1
   15e48:	bne	15e54 <sprintf@plt+0x4760>
   15e4c:	mov	r3, #1
   15e50:	b	16188 <sprintf@plt+0x4a94>
   15e54:	ldr	r3, [fp, #-8]
   15e58:	ldr	r2, [r3, #288]	; 0x120
   15e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e60:	cmp	r2, r3
   15e64:	beq	15e8c <sprintf@plt+0x4798>
   15e68:	ldr	r3, [pc, #808]	; 16198 <sprintf@plt+0x4aa4>
   15e6c:	add	r3, pc, r3
   15e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e74:	ldr	r3, [r3, r2, lsl #2]
   15e78:	add	r1, r3, #3
   15e7c:	ldr	r3, [pc, #792]	; 1619c <sprintf@plt+0x4aa8>
   15e80:	add	r3, pc, r3
   15e84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e88:	str	r1, [r3, r2, lsl #2]
   15e8c:	ldr	r2, [fp, #-16]
   15e90:	sub	r3, fp, #1056	; 0x420
   15e94:	sub	r3, r3, #4
   15e98:	sub	r3, r3, #4
   15e9c:	add	r3, r3, r2
   15ea0:	sub	r2, fp, #1056	; 0x420
   15ea4:	sub	r2, r2, #4
   15ea8:	sub	r2, r2, #4
   15eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   15eb0:	ldr	r0, [fp, #-8]
   15eb4:	bl	158a4 <sprintf@plt+0x41b0>
   15eb8:	mov	r3, r0
   15ebc:	cmp	r3, #0
   15ec0:	bne	15ecc <sprintf@plt+0x47d8>
   15ec4:	mov	r3, #1
   15ec8:	b	16188 <sprintf@plt+0x4a94>
   15ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ed0:	ldrb	r3, [r3, #3]
   15ed4:	and	r3, r3, #15
   15ed8:	uxtb	r3, r3
   15edc:	cmp	r3, #0
   15ee0:	bne	15ef4 <sprintf@plt+0x4800>
   15ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ee8:	ldrh	r3, [r3, #6]
   15eec:	cmp	r3, #0
   15ef0:	bne	15ff0 <sprintf@plt+0x48fc>
   15ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ef8:	ldrb	r3, [r3, #3]
   15efc:	and	r3, r3, #15
   15f00:	uxtb	r3, r3
   15f04:	cmp	r3, #2
   15f08:	beq	15f3c <sprintf@plt+0x4848>
   15f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f10:	ldrb	r3, [r3, #3]
   15f14:	and	r3, r3, #15
   15f18:	uxtb	r3, r3
   15f1c:	cmp	r3, #4
   15f20:	beq	15f3c <sprintf@plt+0x4848>
   15f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f28:	ldrb	r3, [r3, #3]
   15f2c:	and	r3, r3, #15
   15f30:	uxtb	r3, r3
   15f34:	cmp	r3, #5
   15f38:	bne	15f6c <sprintf@plt+0x4878>
   15f3c:	ldr	r3, [pc, #604]	; 161a0 <sprintf@plt+0x4aac>
   15f40:	add	r3, pc, r3
   15f44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f48:	ldr	r3, [r3, r2, lsl #2]
   15f4c:	add	r1, r3, #1
   15f50:	ldr	r3, [pc, #588]	; 161a4 <sprintf@plt+0x4ab0>
   15f54:	add	r3, pc, r3
   15f58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f5c:	str	r1, [r3, r2, lsl #2]
   15f60:	ldr	r0, [fp, #-8]
   15f64:	bl	157d4 <sprintf@plt+0x40e0>
   15f68:	b	15fe8 <sprintf@plt+0x48f4>
   15f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f70:	ldrb	r3, [r3, #3]
   15f74:	and	r3, r3, #15
   15f78:	uxtb	r3, r3
   15f7c:	cmp	r3, #3
   15f80:	bne	15fbc <sprintf@plt+0x48c8>
   15f84:	ldr	r3, [pc, #540]	; 161a8 <sprintf@plt+0x4ab4>
   15f88:	add	r3, pc, r3
   15f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f90:	ldr	r3, [r3, r2, lsl #2]
   15f94:	add	r2, r3, #3
   15f98:	cmp	r3, #0
   15f9c:	movlt	r3, r2
   15fa0:	movge	r3, r3
   15fa4:	asr	r3, r3, #2
   15fa8:	mov	r1, r3
   15fac:	ldr	r3, [pc, #504]	; 161ac <sprintf@plt+0x4ab8>
   15fb0:	add	r3, pc, r3
   15fb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15fb8:	str	r1, [r3, r2, lsl #2]
   15fbc:	ldr	r3, [fp, #-8]
   15fc0:	ldr	r3, [r3, #424]	; 0x1a8
   15fc4:	ldr	r3, [r3, #4]
   15fc8:	ldr	r2, [fp, #-8]
   15fcc:	ldr	r2, [r2, #424]	; 0x1a8
   15fd0:	ldr	r2, [r2]
   15fd4:	mov	r1, #0
   15fd8:	mov	r0, r2
   15fdc:	blx	r3
   15fe0:	ldr	r0, [fp, #-8]
   15fe4:	bl	14b00 <sprintf@plt+0x340c>
   15fe8:	mov	r3, #1
   15fec:	b	16188 <sprintf@plt+0x4a94>
   15ff0:	ldr	r2, [fp, #-16]
   15ff4:	sub	r3, fp, #1056	; 0x420
   15ff8:	sub	r3, r3, #4
   15ffc:	sub	r3, r3, #4
   16000:	add	r3, r3, r2
   16004:	sub	r2, fp, #1056	; 0x420
   16008:	sub	r2, r2, #4
   1600c:	sub	r2, r2, #4
   16010:	ldr	r1, [fp, #-20]	; 0xffffffec
   16014:	ldr	r0, [fp, #-8]
   16018:	bl	15958 <sprintf@plt+0x4264>
   1601c:	str	r0, [fp, #-28]	; 0xffffffe4
   16020:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16024:	cmp	r3, #0
   16028:	beq	16158 <sprintf@plt+0x4a64>
   1602c:	ldr	r3, [fp, #-8]
   16030:	ldrb	r3, [r3, #20]
   16034:	cmp	r3, #12
   16038:	bne	160dc <sprintf@plt+0x49e8>
   1603c:	ldr	r3, [fp, #-8]
   16040:	ldr	r3, [r3, #420]	; 0x1a4
   16044:	cmp	r3, #0
   16048:	bne	16080 <sprintf@plt+0x498c>
   1604c:	ldr	r3, [pc, #348]	; 161b0 <sprintf@plt+0x4abc>
   16050:	add	r3, pc, r3
   16054:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16058:	ldr	r3, [r3, r2, lsl #2]
   1605c:	add	r1, r3, #1
   16060:	ldr	r3, [pc, #332]	; 161b4 <sprintf@plt+0x4ac0>
   16064:	add	r3, pc, r3
   16068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1606c:	str	r1, [r3, r2, lsl #2]
   16070:	ldr	r0, [fp, #-8]
   16074:	bl	157d4 <sprintf@plt+0x40e0>
   16078:	mov	r3, #1
   1607c:	b	16188 <sprintf@plt+0x4a94>
   16080:	ldr	r3, [fp, #-8]
   16084:	add	r3, r3, #292	; 0x124
   16088:	ldrh	r3, [r3]
   1608c:	cmp	r3, #10
   16090:	bne	160b4 <sprintf@plt+0x49c0>
   16094:	ldr	r3, [fp, #-8]
   16098:	ldr	r0, [r3, #420]	; 0x1a4
   1609c:	ldr	r3, [fp, #-8]
   160a0:	ldr	r3, [r3, #424]	; 0x1a8
   160a4:	mov	r2, #28
   160a8:	mov	r1, r3
   160ac:	bl	1507c <sprintf@plt+0x3988>
   160b0:	b	160d0 <sprintf@plt+0x49dc>
   160b4:	ldr	r3, [fp, #-8]
   160b8:	ldr	r0, [r3, #420]	; 0x1a4
   160bc:	ldr	r3, [fp, #-8]
   160c0:	ldr	r3, [r3, #424]	; 0x1a8
   160c4:	mov	r2, #1
   160c8:	mov	r1, r3
   160cc:	bl	1507c <sprintf@plt+0x3988>
   160d0:	ldr	r0, [fp, #-8]
   160d4:	bl	14b00 <sprintf@plt+0x340c>
   160d8:	b	1611c <sprintf@plt+0x4a28>
   160dc:	ldr	r0, [fp, #-8]
   160e0:	bl	16220 <sprintf@plt+0x4b2c>
   160e4:	str	r0, [fp, #-12]
   160e8:	ldr	r3, [fp, #-8]
   160ec:	ldr	r3, [r3, #424]	; 0x1a8
   160f0:	ldr	r3, [r3, #4]
   160f4:	ldr	r2, [fp, #-8]
   160f8:	ldr	r2, [r2, #424]	; 0x1a8
   160fc:	ldr	r2, [r2]
   16100:	ldr	r1, [fp, #-12]
   16104:	mov	r0, r2
   16108:	blx	r3
   1610c:	ldr	r0, [fp, #-12]
   16110:	bl	144f4 <sprintf@plt+0x2e00>
   16114:	ldr	r0, [fp, #-8]
   16118:	bl	14b00 <sprintf@plt+0x340c>
   1611c:	ldr	r3, [pc, #148]	; 161b8 <sprintf@plt+0x4ac4>
   16120:	add	r3, pc, r3
   16124:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16128:	ldr	r3, [r3, r2, lsl #2]
   1612c:	add	r2, r3, #3
   16130:	cmp	r3, #0
   16134:	movlt	r3, r2
   16138:	movge	r3, r3
   1613c:	asr	r3, r3, #2
   16140:	mov	r1, r3
   16144:	ldr	r3, [pc, #112]	; 161bc <sprintf@plt+0x4ac8>
   16148:	add	r3, pc, r3
   1614c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16150:	str	r1, [r3, r2, lsl #2]
   16154:	b	16184 <sprintf@plt+0x4a90>
   16158:	ldr	r3, [pc, #96]	; 161c0 <sprintf@plt+0x4acc>
   1615c:	add	r3, pc, r3
   16160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16164:	ldr	r3, [r3, r2, lsl #2]
   16168:	add	r1, r3, #1
   1616c:	ldr	r3, [pc, #80]	; 161c4 <sprintf@plt+0x4ad0>
   16170:	add	r3, pc, r3
   16174:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16178:	str	r1, [r3, r2, lsl #2]
   1617c:	ldr	r0, [fp, #-8]
   16180:	bl	157d4 <sprintf@plt+0x40e0>
   16184:	mov	r3, #1
   16188:	mov	r0, r3
   1618c:	sub	sp, fp, #4
   16190:	pop	{fp, pc}
   16194:	andeq	r0, r0, ip, lsl #8
   16198:			; <UNDEFINED> instruction: 0x0001f1b0
   1619c:	muleq	r1, ip, r1
   161a0:	ldrdeq	pc, [r1], -ip
   161a4:	andeq	pc, r1, r8, asr #1
   161a8:	muleq	r1, r4, r0
   161ac:	andeq	pc, r1, ip, rrx
   161b0:	andeq	lr, r1, ip, asr #31
   161b4:			; <UNDEFINED> instruction: 0x0001efb8
   161b8:	strdeq	lr, [r1], -ip
   161bc:	ldrdeq	lr, [r1], -r4
   161c0:	andeq	lr, r1, r0, asr #29
   161c4:	andeq	lr, r1, ip, lsr #29
   161c8:	push	{fp, lr}
   161cc:	add	fp, sp, #4
   161d0:	sub	sp, sp, #8
   161d4:	str	r0, [fp, #-8]
   161d8:	str	r1, [fp, #-12]
   161dc:	nop			; (mov r0, r0)
   161e0:	ldr	r1, [fp, #-12]
   161e4:	ldr	r0, [fp, #-8]
   161e8:	bl	15cc8 <sprintf@plt+0x45d4>
   161ec:	mov	r3, r0
   161f0:	cmp	r3, #0
   161f4:	bne	161e0 <sprintf@plt+0x4aec>
   161f8:	mov	r3, #0
   161fc:	ldr	r2, [pc, #24]	; 1621c <sprintf@plt+0x4b28>
   16200:	add	r2, pc, r2
   16204:	mov	r1, #1
   16208:	ldr	r0, [fp, #-8]
   1620c:	bl	11370 <rb_setselect@plt>
   16210:	nop			; (mov r0, r0)
   16214:	sub	sp, fp, #4
   16218:	pop	{fp, pc}
   1621c:			; <UNDEFINED> instruction: 0xffffffc0
   16220:	push	{fp, lr}
   16224:	add	fp, sp, #4
   16228:	sub	sp, sp, #24
   1622c:	str	r0, [fp, #-16]
   16230:	ldr	r3, [fp, #-16]
   16234:	cmp	r3, #0
   16238:	movne	r3, #1
   1623c:	moveq	r3, #0
   16240:	uxtb	r3, r3
   16244:	cmp	r3, #0
   16248:	bne	16298 <sprintf@plt+0x4ba4>
   1624c:	ldr	r3, [pc, #140]	; 162e0 <sprintf@plt+0x4bec>
   16250:	add	r3, pc, r3
   16254:	str	r3, [sp]
   16258:	ldr	r3, [pc, #132]	; 162e4 <sprintf@plt+0x4bf0>
   1625c:	add	r3, pc, r3
   16260:	ldr	r2, [pc, #128]	; 162e8 <sprintf@plt+0x4bf4>
   16264:	ldr	r1, [pc, #128]	; 162ec <sprintf@plt+0x4bf8>
   16268:	add	r1, pc, r1
   1626c:	ldr	r0, [pc, #124]	; 162f0 <sprintf@plt+0x4bfc>
   16270:	add	r0, pc, r0
   16274:	bl	1158c <rb_lib_log@plt>
   16278:	ldr	r3, [pc, #116]	; 162f4 <sprintf@plt+0x4c00>
   1627c:	add	r3, pc, r3
   16280:	ldr	r2, [pc, #96]	; 162e8 <sprintf@plt+0x4bf4>
   16284:	ldr	r1, [pc, #108]	; 162f8 <sprintf@plt+0x4c04>
   16288:	add	r1, pc, r1
   1628c:	ldr	r0, [pc, #104]	; 162fc <sprintf@plt+0x4c08>
   16290:	add	r0, pc, r0
   16294:	bl	11460 <__assert_fail@plt>
   16298:	mov	r0, #132	; 0x84
   1629c:	bl	14434 <sprintf@plt+0x2d40>
   162a0:	str	r0, [fp, #-8]
   162a4:	ldr	r3, [fp, #-16]
   162a8:	ldr	r2, [r3, #420]	; 0x1a4
   162ac:	ldr	r3, [fp, #-8]
   162b0:	str	r2, [r3]
   162b4:	ldr	r3, [fp, #-8]
   162b8:	add	r0, r3, #4
   162bc:	ldr	r3, [fp, #-16]
   162c0:	add	r3, r3, #292	; 0x124
   162c4:	mov	r2, #128	; 0x80
   162c8:	mov	r1, r3
   162cc:	bl	11514 <memcpy@plt>
   162d0:	ldr	r3, [fp, #-8]
   162d4:	mov	r0, r3
   162d8:	sub	sp, fp, #4
   162dc:	pop	{fp, pc}
   162e0:	andeq	r8, r0, r8, lsl #24
   162e4:	andeq	r8, r0, r4, ror ip
   162e8:	andeq	r0, r0, lr, ror #6
   162ec:	andeq	r8, r0, ip, lsl fp
   162f0:			; <UNDEFINED> instruction: 0x00008bb8
   162f4:	andeq	r8, r0, r4, asr ip
   162f8:	strdeq	r8, [r0], -ip
   162fc:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   16300:	push	{r4, r5, fp, lr}
   16304:	add	fp, sp, #12
   16308:	ldr	r4, [pc, #68]	; 16354 <sprintf@plt+0x4c60>
   1630c:	add	r4, pc, r4
   16310:	ldr	r3, [pc, #64]	; 16358 <sprintf@plt+0x4c64>
   16314:	ldr	r3, [r4, r3]
   16318:	mov	r2, #0
   1631c:	str	r2, [r3]
   16320:	bl	16360 <sprintf@plt+0x4c6c>
   16324:	ldr	r3, [pc, #44]	; 16358 <sprintf@plt+0x4c64>
   16328:	ldr	r3, [r4, r3]
   1632c:	ldr	r3, [r3]
   16330:	cmp	r3, #0
   16334:	bne	16348 <sprintf@plt+0x4c54>
   16338:	ldr	r3, [pc, #28]	; 1635c <sprintf@plt+0x4c68>
   1633c:	add	r3, pc, r3
   16340:	mov	r0, r3
   16344:	bl	16604 <sprintf@plt+0x4f10>
   16348:	mov	r3, #0
   1634c:	mov	r0, r3
   16350:	pop	{r4, r5, fp, pc}
   16354:	andeq	r9, r1, ip, ror #25
   16358:	andeq	r0, r0, r0, lsl #3
   1635c:			; <UNDEFINED> instruction: 0x00008cb0
   16360:	push	{r4, fp, lr}
   16364:	add	fp, sp, #8
   16368:	sub	sp, sp, #148	; 0x94
   1636c:	ldr	r4, [pc, #624]	; 165e4 <sprintf@plt+0x4ef0>
   16370:	add	r4, pc, r4
   16374:	ldr	r3, [pc, #620]	; 165e8 <sprintf@plt+0x4ef4>
   16378:	add	r3, pc, r3
   1637c:	mov	r1, r3
   16380:	ldr	r3, [pc, #612]	; 165ec <sprintf@plt+0x4ef8>
   16384:	add	r3, pc, r3
   16388:	mov	r0, r3
   1638c:	bl	11424 <fopen@plt>
   16390:	str	r0, [fp, #-20]	; 0xffffffec
   16394:	ldr	r3, [fp, #-20]	; 0xffffffec
   16398:	cmp	r3, #0
   1639c:	bne	165ac <sprintf@plt+0x4eb8>
   163a0:	mvn	r3, #0
   163a4:	b	165d8 <sprintf@plt+0x4ee4>
   163a8:	sub	r3, fp, #156	; 0x9c
   163ac:	ldr	r2, [pc, #572]	; 165f0 <sprintf@plt+0x4efc>
   163b0:	add	r2, pc, r2
   163b4:	mov	r1, r2
   163b8:	mov	r0, r3
   163bc:	bl	116c4 <strpbrk@plt>
   163c0:	str	r0, [fp, #-16]
   163c4:	ldr	r3, [fp, #-16]
   163c8:	cmp	r3, #0
   163cc:	beq	163dc <sprintf@plt+0x4ce8>
   163d0:	ldr	r3, [fp, #-16]
   163d4:	mov	r2, #0
   163d8:	strb	r2, [r3]
   163dc:	sub	r3, fp, #156	; 0x9c
   163e0:	str	r3, [fp, #-16]
   163e4:	b	163f4 <sprintf@plt+0x4d00>
   163e8:	ldr	r3, [fp, #-16]
   163ec:	add	r3, r3, #1
   163f0:	str	r3, [fp, #-16]
   163f4:	bl	115d4 <__ctype_b_loc@plt>
   163f8:	mov	r3, r0
   163fc:	ldr	r2, [r3]
   16400:	ldr	r3, [fp, #-16]
   16404:	ldrb	r3, [r3]
   16408:	lsl	r3, r3, #1
   1640c:	add	r3, r2, r3
   16410:	ldrh	r3, [r3]
   16414:	and	r3, r3, #8192	; 0x2000
   16418:	cmp	r3, #0
   1641c:	bne	163e8 <sprintf@plt+0x4cf4>
   16420:	ldr	r3, [fp, #-16]
   16424:	ldrb	r3, [r3]
   16428:	cmp	r3, #0
   1642c:	bne	16434 <sprintf@plt+0x4d40>
   16430:	b	165ac <sprintf@plt+0x4eb8>
   16434:	ldr	r3, [fp, #-16]
   16438:	ldrb	r3, [r3]
   1643c:	cmp	r3, #35	; 0x23
   16440:	beq	165ac <sprintf@plt+0x4eb8>
   16444:	ldr	r3, [fp, #-16]
   16448:	ldrb	r3, [r3]
   1644c:	cmp	r3, #59	; 0x3b
   16450:	bne	16458 <sprintf@plt+0x4d64>
   16454:	b	165ac <sprintf@plt+0x4eb8>
   16458:	ldr	r3, [fp, #-16]
   1645c:	str	r3, [fp, #-24]	; 0xffffffe8
   16460:	b	16470 <sprintf@plt+0x4d7c>
   16464:	ldr	r3, [fp, #-16]
   16468:	add	r3, r3, #1
   1646c:	str	r3, [fp, #-16]
   16470:	bl	115d4 <__ctype_b_loc@plt>
   16474:	mov	r3, r0
   16478:	ldr	r2, [r3]
   1647c:	ldr	r3, [fp, #-16]
   16480:	ldrb	r3, [r3]
   16484:	lsl	r3, r3, #1
   16488:	add	r3, r2, r3
   1648c:	ldrh	r3, [r3]
   16490:	and	r3, r3, #8192	; 0x2000
   16494:	cmp	r3, #0
   16498:	bne	164ac <sprintf@plt+0x4db8>
   1649c:	ldr	r3, [fp, #-16]
   164a0:	ldrb	r3, [r3]
   164a4:	cmp	r3, #0
   164a8:	bne	16464 <sprintf@plt+0x4d70>
   164ac:	ldr	r3, [fp, #-16]
   164b0:	ldrb	r3, [r3]
   164b4:	cmp	r3, #0
   164b8:	bne	164c0 <sprintf@plt+0x4dcc>
   164bc:	b	165ac <sprintf@plt+0x4eb8>
   164c0:	ldr	r3, [fp, #-16]
   164c4:	add	r2, r3, #1
   164c8:	str	r2, [fp, #-16]
   164cc:	mov	r2, #0
   164d0:	strb	r2, [r3]
   164d4:	b	164e4 <sprintf@plt+0x4df0>
   164d8:	ldr	r3, [fp, #-16]
   164dc:	add	r3, r3, #1
   164e0:	str	r3, [fp, #-16]
   164e4:	bl	115d4 <__ctype_b_loc@plt>
   164e8:	mov	r3, r0
   164ec:	ldr	r2, [r3]
   164f0:	ldr	r3, [fp, #-16]
   164f4:	ldrb	r3, [r3]
   164f8:	lsl	r3, r3, #1
   164fc:	add	r3, r2, r3
   16500:	ldrh	r3, [r3]
   16504:	and	r3, r3, #8192	; 0x2000
   16508:	cmp	r3, #0
   1650c:	bne	164d8 <sprintf@plt+0x4de4>
   16510:	ldr	r3, [fp, #-16]
   16514:	str	r3, [fp, #-28]	; 0xffffffe4
   16518:	ldr	r3, [pc, #212]	; 165f4 <sprintf@plt+0x4f00>
   1651c:	add	r3, pc, r3
   16520:	mov	r1, r3
   16524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16528:	bl	116c4 <strpbrk@plt>
   1652c:	str	r0, [fp, #-16]
   16530:	ldr	r3, [fp, #-16]
   16534:	cmp	r3, #0
   16538:	beq	16548 <sprintf@plt+0x4e54>
   1653c:	ldr	r3, [fp, #-16]
   16540:	mov	r2, #0
   16544:	strb	r2, [r3]
   16548:	ldr	r3, [pc, #168]	; 165f8 <sprintf@plt+0x4f04>
   1654c:	add	r3, pc, r3
   16550:	mov	r1, r3
   16554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16558:	bl	114b4 <rb_strcasecmp@plt>
   1655c:	mov	r3, r0
   16560:	cmp	r3, #0
   16564:	bne	16584 <sprintf@plt+0x4e90>
   16568:	mov	r2, #256	; 0x100
   1656c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16570:	ldr	r3, [pc, #132]	; 165fc <sprintf@plt+0x4f08>
   16574:	ldr	r3, [r4, r3]
   16578:	mov	r0, r3
   1657c:	bl	1146c <rb_strlcpy@plt>
   16580:	b	165ac <sprintf@plt+0x4eb8>
   16584:	ldr	r3, [pc, #116]	; 16600 <sprintf@plt+0x4f0c>
   16588:	add	r3, pc, r3
   1658c:	mov	r1, r3
   16590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16594:	bl	114b4 <rb_strcasecmp@plt>
   16598:	mov	r3, r0
   1659c:	cmp	r3, #0
   165a0:	bne	165ac <sprintf@plt+0x4eb8>
   165a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   165a8:	bl	16604 <sprintf@plt+0x4f10>
   165ac:	sub	r3, fp, #156	; 0x9c
   165b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   165b4:	mov	r1, #128	; 0x80
   165b8:	mov	r0, r3
   165bc:	bl	113b8 <fgets@plt>
   165c0:	mov	r3, r0
   165c4:	cmp	r3, #0
   165c8:	bne	163a8 <sprintf@plt+0x4cb4>
   165cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   165d0:	bl	113ac <fclose@plt>
   165d4:	mov	r3, #0
   165d8:	mov	r0, r3
   165dc:	sub	sp, fp, #8
   165e0:	pop	{r4, fp, pc}
   165e4:	andeq	r9, r1, r8, lsl #25
   165e8:	andeq	r8, r0, r0, lsl #25
   165ec:	andeq	r8, r0, r8, ror ip
   165f0:	andeq	r8, r0, r0, ror #24
   165f4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   165f8:	andeq	r8, r0, ip, asr #21
   165fc:	andeq	r0, r0, r4, lsl #3
   16600:	muleq	r0, r8, sl
   16604:	push	{r4, fp, lr}
   16608:	add	fp, sp, #8
   1660c:	sub	sp, sp, #52	; 0x34
   16610:	str	r0, [fp, #-56]	; 0xffffffc8
   16614:	ldr	r4, [pc, #300]	; 16748 <sprintf@plt+0x5054>
   16618:	add	r4, pc, r4
   1661c:	ldr	r3, [pc, #296]	; 1674c <sprintf@plt+0x5058>
   16620:	ldr	r3, [r4, r3]
   16624:	ldr	r3, [r3]
   16628:	cmp	r3, #9
   1662c:	bgt	1672c <sprintf@plt+0x5038>
   16630:	sub	r3, fp, #44	; 0x2c
   16634:	mov	r2, #32
   16638:	mov	r1, #0
   1663c:	mov	r0, r3
   16640:	bl	11430 <memset@plt>
   16644:	mov	r3, #0
   16648:	str	r3, [fp, #-40]	; 0xffffffd8
   1664c:	mov	r3, #2
   16650:	str	r3, [fp, #-36]	; 0xffffffdc
   16654:	mov	r3, #5
   16658:	str	r3, [fp, #-44]	; 0xffffffd4
   1665c:	sub	r3, fp, #48	; 0x30
   16660:	sub	r2, fp, #44	; 0x2c
   16664:	ldr	r1, [pc, #228]	; 16750 <sprintf@plt+0x505c>
   16668:	add	r1, pc, r1
   1666c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16670:	bl	114c0 <getaddrinfo@plt>
   16674:	mov	r3, r0
   16678:	cmp	r3, #0
   1667c:	bne	16734 <sprintf@plt+0x5040>
   16680:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16684:	cmp	r3, #0
   16688:	beq	1673c <sprintf@plt+0x5048>
   1668c:	ldr	r3, [pc, #184]	; 1674c <sprintf@plt+0x5058>
   16690:	ldr	r3, [r4, r3]
   16694:	ldr	r3, [r3]
   16698:	lsl	r3, r3, #7
   1669c:	ldr	r2, [pc, #176]	; 16754 <sprintf@plt+0x5060>
   166a0:	ldr	r2, [r4, r2]
   166a4:	add	r0, r3, r2
   166a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   166ac:	ldr	r1, [r3, #20]
   166b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   166b4:	ldr	r3, [r3, #16]
   166b8:	mov	r2, r3
   166bc:	bl	11514 <memcpy@plt>
   166c0:	ldr	r3, [pc, #132]	; 1674c <sprintf@plt+0x5058>
   166c4:	ldr	r3, [r4, r3]
   166c8:	ldr	r3, [r3]
   166cc:	lsl	r3, r3, #7
   166d0:	ldr	r2, [pc, #124]	; 16754 <sprintf@plt+0x5060>
   166d4:	ldr	r2, [r4, r2]
   166d8:	add	r3, r3, r2
   166dc:	ldr	r2, [pc, #104]	; 1674c <sprintf@plt+0x5058>
   166e0:	ldr	r2, [r4, r2]
   166e4:	ldr	r2, [r2]
   166e8:	lsl	r2, r2, #7
   166ec:	ldr	r1, [pc, #96]	; 16754 <sprintf@plt+0x5060>
   166f0:	ldr	r1, [r4, r1]
   166f4:	add	r2, r2, r1
   166f8:	ldrh	r2, [r2]
   166fc:	strh	r2, [r3]
   16700:	ldr	r3, [pc, #68]	; 1674c <sprintf@plt+0x5058>
   16704:	ldr	r3, [r4, r3]
   16708:	ldr	r3, [r3]
   1670c:	add	r2, r3, #1
   16710:	ldr	r3, [pc, #52]	; 1674c <sprintf@plt+0x5058>
   16714:	ldr	r3, [r4, r3]
   16718:	str	r2, [r3]
   1671c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16720:	mov	r0, r3
   16724:	bl	1143c <freeaddrinfo@plt>
   16728:	b	16740 <sprintf@plt+0x504c>
   1672c:	nop			; (mov r0, r0)
   16730:	b	16740 <sprintf@plt+0x504c>
   16734:	nop			; (mov r0, r0)
   16738:	b	16740 <sprintf@plt+0x504c>
   1673c:	nop			; (mov r0, r0)
   16740:	sub	sp, fp, #8
   16744:	pop	{r4, fp, pc}
   16748:	andeq	r9, r1, r0, ror #19
   1674c:	andeq	r0, r0, r0, lsl #3
   16750:			; <UNDEFINED> instruction: 0x000089b0
   16754:	andeq	r0, r0, ip, lsl #3
   16758:	push	{fp, lr}
   1675c:	add	fp, sp, #4
   16760:	sub	sp, sp, #32
   16764:	str	r0, [fp, #-16]
   16768:	str	r1, [fp, #-20]	; 0xffffffec
   1676c:	str	r2, [fp, #-24]	; 0xffffffe8
   16770:	str	r3, [fp, #-28]	; 0xffffffe4
   16774:	ldr	r3, [fp, #4]
   16778:	str	r3, [sp]
   1677c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16784:	ldr	r1, [fp, #-20]	; 0xffffffec
   16788:	ldr	r0, [fp, #-16]
   1678c:	bl	167cc <sprintf@plt+0x50d8>
   16790:	str	r0, [fp, #-8]
   16794:	ldr	r3, [fp, #-8]
   16798:	cmp	r3, #0
   1679c:	ble	167bc <sprintf@plt+0x50c8>
   167a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167a4:	ldrb	r3, [r3]
   167a8:	cmp	r3, #46	; 0x2e
   167ac:	bne	167bc <sprintf@plt+0x50c8>
   167b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167b4:	mov	r2, #0
   167b8:	strb	r2, [r3]
   167bc:	ldr	r3, [fp, #-8]
   167c0:	mov	r0, r3
   167c4:	sub	sp, fp, #4
   167c8:	pop	{fp, pc}
   167cc:	push	{fp, lr}
   167d0:	add	fp, sp, #4
   167d4:	sub	sp, sp, #288	; 0x120
   167d8:	str	r0, [fp, #-272]	; 0xfffffef0
   167dc:	str	r1, [fp, #-276]	; 0xfffffeec
   167e0:	str	r2, [fp, #-280]	; 0xfffffee8
   167e4:	str	r3, [fp, #-284]	; 0xfffffee4
   167e8:	sub	r2, fp, #264	; 0x108
   167ec:	mov	r3, #255	; 0xff
   167f0:	str	r3, [sp]
   167f4:	mov	r3, r2
   167f8:	ldr	r2, [fp, #-280]	; 0xfffffee8
   167fc:	ldr	r1, [fp, #-276]	; 0xfffffeec
   16800:	ldr	r0, [fp, #-272]	; 0xfffffef0
   16804:	bl	16858 <sprintf@plt+0x5164>
   16808:	str	r0, [fp, #-8]
   1680c:	ldr	r3, [fp, #-8]
   16810:	cmn	r3, #1
   16814:	bne	16820 <sprintf@plt+0x512c>
   16818:	mvn	r3, #0
   1681c:	b	1684c <sprintf@plt+0x5158>
   16820:	sub	r3, fp, #264	; 0x108
   16824:	ldr	r2, [fp, #4]
   16828:	ldr	r1, [fp, #-284]	; 0xfffffee4
   1682c:	mov	r0, r3
   16830:	bl	16b38 <sprintf@plt+0x5444>
   16834:	mov	r3, r0
   16838:	cmn	r3, #1
   1683c:	bne	16848 <sprintf@plt+0x5154>
   16840:	mvn	r3, #0
   16844:	b	1684c <sprintf@plt+0x5158>
   16848:	ldr	r3, [fp, #-8]
   1684c:	mov	r0, r3
   16850:	sub	sp, fp, #4
   16854:	pop	{fp, pc}
   16858:	push	{fp, lr}
   1685c:	add	fp, sp, #4
   16860:	sub	sp, sp, #48	; 0x30
   16864:	str	r0, [fp, #-40]	; 0xffffffd8
   16868:	str	r1, [fp, #-44]	; 0xffffffd4
   1686c:	str	r2, [fp, #-48]	; 0xffffffd0
   16870:	str	r3, [fp, #-52]	; 0xffffffcc
   16874:	mvn	r3, #0
   16878:	str	r3, [fp, #-16]
   1687c:	mov	r3, #0
   16880:	str	r3, [fp, #-20]	; 0xffffffec
   16884:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16888:	str	r3, [fp, #-12]
   1688c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16890:	str	r3, [fp, #-8]
   16894:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16898:	ldr	r3, [fp, #4]
   1689c:	add	r3, r2, r3
   168a0:	str	r3, [fp, #-24]	; 0xffffffe8
   168a4:	ldr	r2, [fp, #-8]
   168a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   168ac:	cmp	r2, r3
   168b0:	bcc	168c4 <sprintf@plt+0x51d0>
   168b4:	ldr	r2, [fp, #-8]
   168b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   168bc:	cmp	r2, r3
   168c0:	bcc	16ae0 <sprintf@plt+0x53ec>
   168c4:	bl	116e8 <__errno_location@plt>
   168c8:	mov	r2, r0
   168cc:	mov	r3, #90	; 0x5a
   168d0:	str	r3, [r2]
   168d4:	mvn	r3, #0
   168d8:	b	16b2c <sprintf@plt+0x5438>
   168dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   168e0:	and	r3, r3, #192	; 0xc0
   168e4:	cmp	r3, #64	; 0x40
   168e8:	beq	168fc <sprintf@plt+0x5208>
   168ec:	cmp	r3, #192	; 0xc0
   168f0:	beq	169e4 <sprintf@plt+0x52f0>
   168f4:	cmp	r3, #0
   168f8:	bne	16ac8 <sprintf@plt+0x53d4>
   168fc:	ldr	r3, [fp, #-8]
   16900:	sub	r3, r3, #1
   16904:	mov	r0, r3
   16908:	bl	174a8 <sprintf@plt+0x5db4>
   1690c:	str	r0, [fp, #-32]	; 0xffffffe0
   16910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16914:	cmp	r3, #0
   16918:	bge	16934 <sprintf@plt+0x5240>
   1691c:	bl	116e8 <__errno_location@plt>
   16920:	mov	r2, r0
   16924:	mov	r3, #90	; 0x5a
   16928:	str	r3, [r2]
   1692c:	mvn	r3, #0
   16930:	b	16b2c <sprintf@plt+0x5438>
   16934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16938:	add	r3, r3, #1
   1693c:	ldr	r2, [fp, #-12]
   16940:	add	r2, r2, r3
   16944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16948:	cmp	r2, r3
   1694c:	bcs	16968 <sprintf@plt+0x5274>
   16950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16954:	ldr	r2, [fp, #-8]
   16958:	add	r2, r2, r3
   1695c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16960:	cmp	r2, r3
   16964:	bcc	16980 <sprintf@plt+0x528c>
   16968:	bl	116e8 <__errno_location@plt>
   1696c:	mov	r2, r0
   16970:	mov	r3, #90	; 0x5a
   16974:	str	r3, [r2]
   16978:	mvn	r3, #0
   1697c:	b	16b2c <sprintf@plt+0x5438>
   16980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16984:	add	r3, r3, #1
   16988:	ldr	r2, [fp, #-20]	; 0xffffffec
   1698c:	add	r3, r2, r3
   16990:	str	r3, [fp, #-20]	; 0xffffffec
   16994:	ldr	r3, [fp, #-12]
   16998:	add	r2, r3, #1
   1699c:	str	r2, [fp, #-12]
   169a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   169a4:	uxtb	r2, r2
   169a8:	strb	r2, [r3]
   169ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   169b0:	mov	r2, r3
   169b4:	ldr	r1, [fp, #-8]
   169b8:	ldr	r0, [fp, #-12]
   169bc:	bl	11514 <memcpy@plt>
   169c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   169c4:	ldr	r2, [fp, #-12]
   169c8:	add	r3, r2, r3
   169cc:	str	r3, [fp, #-12]
   169d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   169d4:	ldr	r2, [fp, #-8]
   169d8:	add	r3, r2, r3
   169dc:	str	r3, [fp, #-8]
   169e0:	b	16ae0 <sprintf@plt+0x53ec>
   169e4:	ldr	r2, [fp, #-8]
   169e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169ec:	cmp	r2, r3
   169f0:	bcc	16a0c <sprintf@plt+0x5318>
   169f4:	bl	116e8 <__errno_location@plt>
   169f8:	mov	r2, r0
   169fc:	mov	r3, #90	; 0x5a
   16a00:	str	r3, [r2]
   16a04:	mvn	r3, #0
   16a08:	b	16b2c <sprintf@plt+0x5438>
   16a0c:	ldr	r3, [fp, #-16]
   16a10:	cmp	r3, #0
   16a14:	bge	16a2c <sprintf@plt+0x5338>
   16a18:	ldr	r2, [fp, #-8]
   16a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a20:	sub	r3, r2, r3
   16a24:	add	r3, r3, #1
   16a28:	str	r3, [fp, #-16]
   16a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a30:	lsl	r3, r3, #8
   16a34:	and	r3, r3, #16128	; 0x3f00
   16a38:	ldr	r2, [fp, #-8]
   16a3c:	ldrb	r2, [r2]
   16a40:	orr	r3, r3, r2
   16a44:	mov	r2, r3
   16a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a4c:	add	r3, r3, r2
   16a50:	str	r3, [fp, #-8]
   16a54:	ldr	r2, [fp, #-8]
   16a58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a5c:	cmp	r2, r3
   16a60:	bcc	16a74 <sprintf@plt+0x5380>
   16a64:	ldr	r2, [fp, #-8]
   16a68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a6c:	cmp	r2, r3
   16a70:	bcc	16a8c <sprintf@plt+0x5398>
   16a74:	bl	116e8 <__errno_location@plt>
   16a78:	mov	r2, r0
   16a7c:	mov	r3, #90	; 0x5a
   16a80:	str	r3, [r2]
   16a84:	mvn	r3, #0
   16a88:	b	16b2c <sprintf@plt+0x5438>
   16a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a90:	add	r3, r3, #2
   16a94:	str	r3, [fp, #-20]	; 0xffffffec
   16a98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16aa0:	sub	r2, r2, r3
   16aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16aa8:	cmp	r2, r3
   16aac:	bgt	16ae0 <sprintf@plt+0x53ec>
   16ab0:	bl	116e8 <__errno_location@plt>
   16ab4:	mov	r2, r0
   16ab8:	mov	r3, #90	; 0x5a
   16abc:	str	r3, [r2]
   16ac0:	mvn	r3, #0
   16ac4:	b	16b2c <sprintf@plt+0x5438>
   16ac8:	bl	116e8 <__errno_location@plt>
   16acc:	mov	r2, r0
   16ad0:	mov	r3, #90	; 0x5a
   16ad4:	str	r3, [r2]
   16ad8:	mvn	r3, #0
   16adc:	b	16b2c <sprintf@plt+0x5438>
   16ae0:	ldr	r3, [fp, #-8]
   16ae4:	add	r2, r3, #1
   16ae8:	str	r2, [fp, #-8]
   16aec:	ldrb	r3, [r3]
   16af0:	str	r3, [fp, #-28]	; 0xffffffe4
   16af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16af8:	cmp	r3, #0
   16afc:	bne	168dc <sprintf@plt+0x51e8>
   16b00:	ldr	r3, [fp, #-12]
   16b04:	mov	r2, #0
   16b08:	strb	r2, [r3]
   16b0c:	ldr	r3, [fp, #-16]
   16b10:	cmp	r3, #0
   16b14:	bge	16b28 <sprintf@plt+0x5434>
   16b18:	ldr	r2, [fp, #-8]
   16b1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16b20:	sub	r3, r2, r3
   16b24:	str	r3, [fp, #-16]
   16b28:	ldr	r3, [fp, #-16]
   16b2c:	mov	r0, r3
   16b30:	sub	sp, fp, #4
   16b34:	pop	{fp, pc}
   16b38:	push	{fp, lr}
   16b3c:	add	fp, sp, #4
   16b40:	sub	sp, sp, #48	; 0x30
   16b44:	str	r0, [fp, #-40]	; 0xffffffd8
   16b48:	str	r1, [fp, #-44]	; 0xffffffd4
   16b4c:	str	r2, [fp, #-48]	; 0xffffffd0
   16b50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b54:	str	r3, [fp, #-32]	; 0xffffffe0
   16b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b5c:	str	r3, [fp, #-8]
   16b60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16b64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16b68:	add	r3, r2, r3
   16b6c:	str	r3, [fp, #-16]
   16b70:	b	16ed4 <sprintf@plt+0x57e0>
   16b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b78:	and	r3, r3, #192	; 0xc0
   16b7c:	cmp	r3, #192	; 0xc0
   16b80:	bne	16b9c <sprintf@plt+0x54a8>
   16b84:	bl	116e8 <__errno_location@plt>
   16b88:	mov	r2, r0
   16b8c:	mov	r3, #90	; 0x5a
   16b90:	str	r3, [r2]
   16b94:	mvn	r3, #0
   16b98:	b	16f88 <sprintf@plt+0x5894>
   16b9c:	ldr	r2, [fp, #-8]
   16ba0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ba4:	cmp	r2, r3
   16ba8:	beq	16be8 <sprintf@plt+0x54f4>
   16bac:	ldr	r2, [fp, #-8]
   16bb0:	ldr	r3, [fp, #-16]
   16bb4:	cmp	r2, r3
   16bb8:	bcc	16bd4 <sprintf@plt+0x54e0>
   16bbc:	bl	116e8 <__errno_location@plt>
   16bc0:	mov	r2, r0
   16bc4:	mov	r3, #90	; 0x5a
   16bc8:	str	r3, [r2]
   16bcc:	mvn	r3, #0
   16bd0:	b	16f88 <sprintf@plt+0x5894>
   16bd4:	ldr	r3, [fp, #-8]
   16bd8:	add	r2, r3, #1
   16bdc:	str	r2, [fp, #-8]
   16be0:	mov	r2, #46	; 0x2e
   16be4:	strb	r2, [r3]
   16be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16bec:	sub	r3, r3, #1
   16bf0:	mov	r0, r3
   16bf4:	bl	174a8 <sprintf@plt+0x5db4>
   16bf8:	str	r0, [fp, #-12]
   16bfc:	ldr	r3, [fp, #-12]
   16c00:	cmp	r3, #0
   16c04:	bge	16c20 <sprintf@plt+0x552c>
   16c08:	bl	116e8 <__errno_location@plt>
   16c0c:	mov	r2, r0
   16c10:	mov	r3, #90	; 0x5a
   16c14:	str	r3, [r2]
   16c18:	mvn	r3, #0
   16c1c:	b	16f88 <sprintf@plt+0x5894>
   16c20:	ldr	r3, [fp, #-12]
   16c24:	ldr	r2, [fp, #-8]
   16c28:	add	r2, r2, r3
   16c2c:	ldr	r3, [fp, #-16]
   16c30:	cmp	r2, r3
   16c34:	bcc	16c50 <sprintf@plt+0x555c>
   16c38:	bl	116e8 <__errno_location@plt>
   16c3c:	mov	r2, r0
   16c40:	mov	r3, #90	; 0x5a
   16c44:	str	r3, [r2]
   16c48:	mvn	r3, #0
   16c4c:	b	16f88 <sprintf@plt+0x5894>
   16c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c54:	and	r3, r3, #192	; 0xc0
   16c58:	cmp	r3, #64	; 0x40
   16c5c:	bne	16ec8 <sprintf@plt+0x57d4>
   16c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c64:	cmp	r3, #65	; 0x41
   16c68:	beq	16c84 <sprintf@plt+0x5590>
   16c6c:	bl	116e8 <__errno_location@plt>
   16c70:	mov	r2, r0
   16c74:	mov	r3, #22
   16c78:	str	r3, [r2]
   16c7c:	mvn	r3, #0
   16c80:	b	16f88 <sprintf@plt+0x5894>
   16c84:	sub	r3, fp, #32
   16c88:	ldr	r2, [fp, #-16]
   16c8c:	ldr	r1, [fp, #-8]
   16c90:	mov	r0, r3
   16c94:	bl	175a0 <sprintf@plt+0x5eac>
   16c98:	str	r0, [fp, #-24]	; 0xffffffe8
   16c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ca0:	cmp	r3, #0
   16ca4:	bge	16cc0 <sprintf@plt+0x55cc>
   16ca8:	bl	116e8 <__errno_location@plt>
   16cac:	mov	r2, r0
   16cb0:	mov	r3, #90	; 0x5a
   16cb4:	str	r3, [r2]
   16cb8:	mvn	r3, #0
   16cbc:	b	16f88 <sprintf@plt+0x5894>
   16cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16cc4:	ldr	r2, [fp, #-8]
   16cc8:	add	r3, r2, r3
   16ccc:	str	r3, [fp, #-8]
   16cd0:	b	16ed4 <sprintf@plt+0x57e0>
   16cd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16cd8:	add	r2, r3, #1
   16cdc:	str	r2, [fp, #-32]	; 0xffffffe0
   16ce0:	ldrb	r3, [r3]
   16ce4:	strb	r3, [fp, #-25]	; 0xffffffe7
   16ce8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   16cec:	mov	r0, r3
   16cf0:	bl	1737c <sprintf@plt+0x5c88>
   16cf4:	mov	r3, r0
   16cf8:	cmp	r3, #0
   16cfc:	beq	16d58 <sprintf@plt+0x5664>
   16d00:	ldr	r3, [fp, #-8]
   16d04:	add	r2, r3, #1
   16d08:	ldr	r3, [fp, #-16]
   16d0c:	cmp	r2, r3
   16d10:	bcc	16d2c <sprintf@plt+0x5638>
   16d14:	bl	116e8 <__errno_location@plt>
   16d18:	mov	r2, r0
   16d1c:	mov	r3, #90	; 0x5a
   16d20:	str	r3, [r2]
   16d24:	mvn	r3, #0
   16d28:	b	16f88 <sprintf@plt+0x5894>
   16d2c:	ldr	r3, [fp, #-8]
   16d30:	add	r2, r3, #1
   16d34:	str	r2, [fp, #-8]
   16d38:	mov	r2, #92	; 0x5c
   16d3c:	strb	r2, [r3]
   16d40:	ldr	r3, [fp, #-8]
   16d44:	add	r2, r3, #1
   16d48:	str	r2, [fp, #-8]
   16d4c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   16d50:	strb	r2, [r3]
   16d54:	b	16ebc <sprintf@plt+0x57c8>
   16d58:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   16d5c:	mov	r0, r3
   16d60:	bl	1755c <sprintf@plt+0x5e68>
   16d64:	mov	r3, r0
   16d68:	cmp	r3, #0
   16d6c:	bne	16e80 <sprintf@plt+0x578c>
   16d70:	ldr	r3, [fp, #-8]
   16d74:	add	r2, r3, #3
   16d78:	ldr	r3, [fp, #-16]
   16d7c:	cmp	r2, r3
   16d80:	bcc	16d9c <sprintf@plt+0x56a8>
   16d84:	bl	116e8 <__errno_location@plt>
   16d88:	mov	r2, r0
   16d8c:	mov	r3, #90	; 0x5a
   16d90:	str	r3, [r2]
   16d94:	mvn	r3, #0
   16d98:	b	16f88 <sprintf@plt+0x5894>
   16d9c:	ldr	r3, [fp, #-8]
   16da0:	add	r2, r3, #1
   16da4:	str	r2, [fp, #-8]
   16da8:	mov	r2, #92	; 0x5c
   16dac:	strb	r2, [r3]
   16db0:	ldr	r3, [fp, #-8]
   16db4:	add	r2, r3, #1
   16db8:	str	r2, [fp, #-8]
   16dbc:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   16dc0:	ldr	r1, [pc, #460]	; 16f94 <sprintf@plt+0x58a0>
   16dc4:	umull	r1, r2, r1, r2
   16dc8:	lsr	r2, r2, #5
   16dcc:	uxtb	r2, r2
   16dd0:	mov	r1, r2
   16dd4:	ldr	r2, [pc, #444]	; 16f98 <sprintf@plt+0x58a4>
   16dd8:	add	r2, pc, r2
   16ddc:	ldrb	r2, [r2, r1]
   16de0:	strb	r2, [r3]
   16de4:	ldr	r3, [fp, #-8]
   16de8:	add	r2, r3, #1
   16dec:	str	r2, [fp, #-8]
   16df0:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   16df4:	ldr	r1, [pc, #408]	; 16f94 <sprintf@plt+0x58a0>
   16df8:	umull	r0, r1, r1, r2
   16dfc:	lsr	r1, r1, #5
   16e00:	mov	r0, #100	; 0x64
   16e04:	mul	r1, r0, r1
   16e08:	sub	r2, r2, r1
   16e0c:	uxtb	r2, r2
   16e10:	ldr	r1, [pc, #388]	; 16f9c <sprintf@plt+0x58a8>
   16e14:	umull	r1, r2, r1, r2
   16e18:	lsr	r2, r2, #3
   16e1c:	uxtb	r2, r2
   16e20:	mov	r1, r2
   16e24:	ldr	r2, [pc, #372]	; 16fa0 <sprintf@plt+0x58ac>
   16e28:	add	r2, pc, r2
   16e2c:	ldrb	r2, [r2, r1]
   16e30:	strb	r2, [r3]
   16e34:	ldr	r2, [fp, #-8]
   16e38:	add	r3, r2, #1
   16e3c:	str	r3, [fp, #-8]
   16e40:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   16e44:	ldr	r3, [pc, #336]	; 16f9c <sprintf@plt+0x58a8>
   16e48:	umull	r0, r3, r3, r1
   16e4c:	lsr	r0, r3, #3
   16e50:	mov	r3, r0
   16e54:	lsl	r3, r3, #2
   16e58:	add	r3, r3, r0
   16e5c:	lsl	r3, r3, #1
   16e60:	sub	r3, r1, r3
   16e64:	uxtb	r3, r3
   16e68:	mov	r1, r3
   16e6c:	ldr	r3, [pc, #304]	; 16fa4 <sprintf@plt+0x58b0>
   16e70:	add	r3, pc, r3
   16e74:	ldrb	r3, [r3, r1]
   16e78:	strb	r3, [r2]
   16e7c:	b	16ebc <sprintf@plt+0x57c8>
   16e80:	ldr	r2, [fp, #-8]
   16e84:	ldr	r3, [fp, #-16]
   16e88:	cmp	r2, r3
   16e8c:	bcc	16ea8 <sprintf@plt+0x57b4>
   16e90:	bl	116e8 <__errno_location@plt>
   16e94:	mov	r2, r0
   16e98:	mov	r3, #90	; 0x5a
   16e9c:	str	r3, [r2]
   16ea0:	mvn	r3, #0
   16ea4:	b	16f88 <sprintf@plt+0x5894>
   16ea8:	ldr	r3, [fp, #-8]
   16eac:	add	r2, r3, #1
   16eb0:	str	r2, [fp, #-8]
   16eb4:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   16eb8:	strb	r2, [r3]
   16ebc:	ldr	r3, [fp, #-12]
   16ec0:	sub	r3, r3, #1
   16ec4:	str	r3, [fp, #-12]
   16ec8:	ldr	r3, [fp, #-12]
   16ecc:	cmp	r3, #0
   16ed0:	bgt	16cd4 <sprintf@plt+0x55e0>
   16ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16ed8:	add	r2, r3, #1
   16edc:	str	r2, [fp, #-32]	; 0xffffffe0
   16ee0:	ldrb	r3, [r3]
   16ee4:	str	r3, [fp, #-20]	; 0xffffffec
   16ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16eec:	cmp	r3, #0
   16ef0:	bne	16b74 <sprintf@plt+0x5480>
   16ef4:	ldr	r2, [fp, #-8]
   16ef8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16efc:	cmp	r2, r3
   16f00:	bne	16f40 <sprintf@plt+0x584c>
   16f04:	ldr	r2, [fp, #-8]
   16f08:	ldr	r3, [fp, #-16]
   16f0c:	cmp	r2, r3
   16f10:	bcc	16f2c <sprintf@plt+0x5838>
   16f14:	bl	116e8 <__errno_location@plt>
   16f18:	mov	r2, r0
   16f1c:	mov	r3, #90	; 0x5a
   16f20:	str	r3, [r2]
   16f24:	mvn	r3, #0
   16f28:	b	16f88 <sprintf@plt+0x5894>
   16f2c:	ldr	r3, [fp, #-8]
   16f30:	add	r2, r3, #1
   16f34:	str	r2, [fp, #-8]
   16f38:	mov	r2, #46	; 0x2e
   16f3c:	strb	r2, [r3]
   16f40:	ldr	r2, [fp, #-8]
   16f44:	ldr	r3, [fp, #-16]
   16f48:	cmp	r2, r3
   16f4c:	bcc	16f68 <sprintf@plt+0x5874>
   16f50:	bl	116e8 <__errno_location@plt>
   16f54:	mov	r2, r0
   16f58:	mov	r3, #90	; 0x5a
   16f5c:	str	r3, [r2]
   16f60:	mvn	r3, #0
   16f64:	b	16f88 <sprintf@plt+0x5894>
   16f68:	ldr	r3, [fp, #-8]
   16f6c:	add	r2, r3, #1
   16f70:	str	r2, [fp, #-8]
   16f74:	mov	r2, #0
   16f78:	strb	r2, [r3]
   16f7c:	ldr	r2, [fp, #-8]
   16f80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f84:	sub	r3, r2, r3
   16f88:	mov	r0, r3
   16f8c:	sub	sp, fp, #4
   16f90:	pop	{fp, pc}
   16f94:	mvnpl	r8, pc, lsl r5
   16f98:	andeq	r8, r0, r8, lsl #4
   16f9c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   16fa0:			; <UNDEFINED> instruction: 0x000081b8
   16fa4:	andeq	r8, r0, r0, ror r1
   16fa8:	push	{fp, lr}
   16fac:	add	fp, sp, #4
   16fb0:	sub	sp, sp, #24
   16fb4:	str	r0, [fp, #-8]
   16fb8:	str	r1, [fp, #-12]
   16fbc:	str	r2, [fp, #-16]
   16fc0:	str	r3, [fp, #-20]	; 0xffffffec
   16fc4:	ldr	r2, [fp, #-16]
   16fc8:	ldr	r3, [fp, #4]
   16fcc:	str	r3, [sp]
   16fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fd4:	ldr	r1, [fp, #-12]
   16fd8:	ldr	r0, [fp, #-8]
   16fdc:	bl	18198 <sprintf@plt+0x6aa4>
   16fe0:	mov	r3, r0
   16fe4:	mov	r0, r3
   16fe8:	sub	sp, fp, #4
   16fec:	pop	{fp, pc}
   16ff0:	push	{fp, lr}
   16ff4:	add	fp, sp, #4
   16ff8:	sub	sp, sp, #16
   16ffc:	str	r0, [fp, #-16]
   17000:	str	r1, [fp, #-20]	; 0xffffffec
   17004:	ldr	r3, [fp, #-16]
   17008:	str	r3, [fp, #-8]
   1700c:	sub	r3, fp, #16
   17010:	ldr	r1, [fp, #-20]	; 0xffffffec
   17014:	mov	r0, r3
   17018:	bl	1704c <sprintf@plt+0x5958>
   1701c:	mov	r3, r0
   17020:	cmn	r3, #1
   17024:	bne	17030 <sprintf@plt+0x593c>
   17028:	mvn	r3, #0
   1702c:	b	17040 <sprintf@plt+0x594c>
   17030:	ldr	r3, [fp, #-16]
   17034:	mov	r2, r3
   17038:	ldr	r3, [fp, #-8]
   1703c:	sub	r3, r2, r3
   17040:	mov	r0, r3
   17044:	sub	sp, fp, #4
   17048:	pop	{fp, pc}
   1704c:	push	{fp, lr}
   17050:	add	fp, sp, #4
   17054:	sub	sp, sp, #24
   17058:	str	r0, [fp, #-24]	; 0xffffffe8
   1705c:	str	r1, [fp, #-28]	; 0xffffffe4
   17060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17064:	ldr	r3, [r3]
   17068:	str	r3, [fp, #-8]
   1706c:	b	1711c <sprintf@plt+0x5a28>
   17070:	ldr	r3, [fp, #-12]
   17074:	and	r3, r3, #192	; 0xc0
   17078:	cmp	r3, #64	; 0x40
   1707c:	beq	170a4 <sprintf@plt+0x59b0>
   17080:	cmp	r3, #192	; 0xc0
   17084:	beq	170f0 <sprintf@plt+0x59fc>
   17088:	cmp	r3, #0
   1708c:	bne	17104 <sprintf@plt+0x5a10>
   17090:	ldr	r2, [fp, #-8]
   17094:	ldr	r3, [fp, #-12]
   17098:	add	r3, r2, r3
   1709c:	str	r3, [fp, #-8]
   170a0:	b	1711c <sprintf@plt+0x5a28>
   170a4:	ldr	r3, [fp, #-8]
   170a8:	sub	r3, r3, #1
   170ac:	mov	r0, r3
   170b0:	bl	174a8 <sprintf@plt+0x5db4>
   170b4:	str	r0, [fp, #-16]
   170b8:	ldr	r3, [fp, #-16]
   170bc:	cmp	r3, #0
   170c0:	bge	170dc <sprintf@plt+0x59e8>
   170c4:	bl	116e8 <__errno_location@plt>
   170c8:	mov	r2, r0
   170cc:	mov	r3, #90	; 0x5a
   170d0:	str	r3, [r2]
   170d4:	mvn	r3, #0
   170d8:	b	17184 <sprintf@plt+0x5a90>
   170dc:	ldr	r3, [fp, #-16]
   170e0:	ldr	r2, [fp, #-8]
   170e4:	add	r3, r2, r3
   170e8:	str	r3, [fp, #-8]
   170ec:	b	1711c <sprintf@plt+0x5a28>
   170f0:	ldr	r3, [fp, #-8]
   170f4:	add	r3, r3, #1
   170f8:	str	r3, [fp, #-8]
   170fc:	nop			; (mov r0, r0)
   17100:	b	1714c <sprintf@plt+0x5a58>
   17104:	bl	116e8 <__errno_location@plt>
   17108:	mov	r2, r0
   1710c:	mov	r3, #90	; 0x5a
   17110:	str	r3, [r2]
   17114:	mvn	r3, #0
   17118:	b	17184 <sprintf@plt+0x5a90>
   1711c:	ldr	r2, [fp, #-8]
   17120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17124:	cmp	r2, r3
   17128:	bcs	1714c <sprintf@plt+0x5a58>
   1712c:	ldr	r3, [fp, #-8]
   17130:	add	r2, r3, #1
   17134:	str	r2, [fp, #-8]
   17138:	ldrb	r3, [r3]
   1713c:	str	r3, [fp, #-12]
   17140:	ldr	r3, [fp, #-12]
   17144:	cmp	r3, #0
   17148:	bne	17070 <sprintf@plt+0x597c>
   1714c:	ldr	r2, [fp, #-8]
   17150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17154:	cmp	r2, r3
   17158:	bls	17174 <sprintf@plt+0x5a80>
   1715c:	bl	116e8 <__errno_location@plt>
   17160:	mov	r2, r0
   17164:	mov	r3, #90	; 0x5a
   17168:	str	r3, [r2]
   1716c:	mvn	r3, #0
   17170:	b	17184 <sprintf@plt+0x5a90>
   17174:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17178:	ldr	r2, [fp, #-8]
   1717c:	str	r2, [r3]
   17180:	mov	r3, #0
   17184:	mov	r0, r3
   17188:	sub	sp, fp, #4
   1718c:	pop	{fp, pc}
   17190:	push	{fp}		; (str fp, [sp, #-4]!)
   17194:	add	fp, sp, #0
   17198:	sub	sp, sp, #20
   1719c:	str	r0, [fp, #-16]
   171a0:	ldr	r3, [fp, #-16]
   171a4:	str	r3, [fp, #-8]
   171a8:	ldr	r3, [fp, #-8]
   171ac:	ldrb	r3, [r3]
   171b0:	lsl	r3, r3, #8
   171b4:	ldr	r2, [fp, #-8]
   171b8:	add	r2, r2, #1
   171bc:	ldrb	r2, [r2]
   171c0:	orr	r3, r3, r2
   171c4:	str	r3, [fp, #-12]
   171c8:	ldr	r3, [fp, #-16]
   171cc:	add	r3, r3, #2
   171d0:	str	r3, [fp, #-16]
   171d4:	ldr	r3, [fp, #-12]
   171d8:	mov	r0, r3
   171dc:	add	sp, fp, #0
   171e0:	pop	{fp}		; (ldr fp, [sp], #4)
   171e4:	bx	lr
   171e8:	push	{fp}		; (str fp, [sp, #-4]!)
   171ec:	add	fp, sp, #0
   171f0:	sub	sp, sp, #20
   171f4:	str	r0, [fp, #-16]
   171f8:	ldr	r3, [fp, #-16]
   171fc:	str	r3, [fp, #-8]
   17200:	ldr	r3, [fp, #-8]
   17204:	ldrb	r3, [r3]
   17208:	lsl	r2, r3, #24
   1720c:	ldr	r3, [fp, #-8]
   17210:	add	r3, r3, #1
   17214:	ldrb	r3, [r3]
   17218:	lsl	r3, r3, #16
   1721c:	orr	r2, r2, r3
   17220:	ldr	r3, [fp, #-8]
   17224:	add	r3, r3, #2
   17228:	ldrb	r3, [r3]
   1722c:	lsl	r3, r3, #8
   17230:	orr	r3, r2, r3
   17234:	ldr	r2, [fp, #-8]
   17238:	add	r2, r2, #3
   1723c:	ldrb	r2, [r2]
   17240:	orr	r3, r3, r2
   17244:	str	r3, [fp, #-12]
   17248:	ldr	r3, [fp, #-16]
   1724c:	add	r3, r3, #4
   17250:	str	r3, [fp, #-16]
   17254:	ldr	r3, [fp, #-12]
   17258:	mov	r0, r3
   1725c:	add	sp, fp, #0
   17260:	pop	{fp}		; (ldr fp, [sp], #4)
   17264:	bx	lr
   17268:	push	{fp}		; (str fp, [sp, #-4]!)
   1726c:	add	fp, sp, #0
   17270:	sub	sp, sp, #20
   17274:	str	r0, [fp, #-16]
   17278:	str	r1, [fp, #-20]	; 0xffffffec
   1727c:	ldr	r3, [fp, #-16]
   17280:	strh	r3, [fp, #-6]
   17284:	ldr	r3, [fp, #-20]	; 0xffffffec
   17288:	str	r3, [fp, #-12]
   1728c:	ldr	r3, [fp, #-12]
   17290:	add	r2, r3, #1
   17294:	str	r2, [fp, #-12]
   17298:	ldrh	r2, [fp, #-6]
   1729c:	lsr	r2, r2, #8
   172a0:	uxth	r2, r2
   172a4:	uxtb	r2, r2
   172a8:	strb	r2, [r3]
   172ac:	ldrh	r3, [fp, #-6]
   172b0:	uxtb	r2, r3
   172b4:	ldr	r3, [fp, #-12]
   172b8:	strb	r2, [r3]
   172bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   172c0:	add	r3, r3, #2
   172c4:	str	r3, [fp, #-20]	; 0xffffffec
   172c8:	nop			; (mov r0, r0)
   172cc:	add	sp, fp, #0
   172d0:	pop	{fp}		; (ldr fp, [sp], #4)
   172d4:	bx	lr
   172d8:	push	{fp}		; (str fp, [sp, #-4]!)
   172dc:	add	fp, sp, #0
   172e0:	sub	sp, sp, #20
   172e4:	str	r0, [fp, #-16]
   172e8:	str	r1, [fp, #-20]	; 0xffffffec
   172ec:	ldr	r3, [fp, #-16]
   172f0:	str	r3, [fp, #-8]
   172f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   172f8:	str	r3, [fp, #-12]
   172fc:	ldr	r3, [fp, #-12]
   17300:	add	r2, r3, #1
   17304:	str	r2, [fp, #-12]
   17308:	ldr	r2, [fp, #-8]
   1730c:	lsr	r2, r2, #24
   17310:	uxtb	r2, r2
   17314:	strb	r2, [r3]
   17318:	ldr	r3, [fp, #-12]
   1731c:	add	r2, r3, #1
   17320:	str	r2, [fp, #-12]
   17324:	ldr	r2, [fp, #-8]
   17328:	lsr	r2, r2, #16
   1732c:	uxtb	r2, r2
   17330:	strb	r2, [r3]
   17334:	ldr	r3, [fp, #-12]
   17338:	add	r2, r3, #1
   1733c:	str	r2, [fp, #-12]
   17340:	ldr	r2, [fp, #-8]
   17344:	lsr	r2, r2, #8
   17348:	uxtb	r2, r2
   1734c:	strb	r2, [r3]
   17350:	ldr	r3, [fp, #-8]
   17354:	uxtb	r2, r3
   17358:	ldr	r3, [fp, #-12]
   1735c:	strb	r2, [r3]
   17360:	ldr	r3, [fp, #-20]	; 0xffffffec
   17364:	add	r3, r3, #4
   17368:	str	r3, [fp, #-20]	; 0xffffffec
   1736c:	nop			; (mov r0, r0)
   17370:	add	sp, fp, #0
   17374:	pop	{fp}		; (ldr fp, [sp], #4)
   17378:	bx	lr
   1737c:	push	{fp}		; (str fp, [sp, #-4]!)
   17380:	add	fp, sp, #0
   17384:	sub	sp, sp, #12
   17388:	str	r0, [fp, #-8]
   1738c:	ldr	r3, [fp, #-8]
   17390:	sub	r3, r3, #34	; 0x22
   17394:	cmp	r3, #58	; 0x3a
   17398:	addls	pc, pc, r3, lsl #2
   1739c:	b	17494 <sprintf@plt+0x5da0>
   173a0:	b	1748c <sprintf@plt+0x5d98>
   173a4:	b	17494 <sprintf@plt+0x5da0>
   173a8:	b	1748c <sprintf@plt+0x5d98>
   173ac:	b	17494 <sprintf@plt+0x5da0>
   173b0:	b	17494 <sprintf@plt+0x5da0>
   173b4:	b	17494 <sprintf@plt+0x5da0>
   173b8:	b	1748c <sprintf@plt+0x5d98>
   173bc:	b	1748c <sprintf@plt+0x5d98>
   173c0:	b	17494 <sprintf@plt+0x5da0>
   173c4:	b	17494 <sprintf@plt+0x5da0>
   173c8:	b	17494 <sprintf@plt+0x5da0>
   173cc:	b	17494 <sprintf@plt+0x5da0>
   173d0:	b	1748c <sprintf@plt+0x5d98>
   173d4:	b	17494 <sprintf@plt+0x5da0>
   173d8:	b	17494 <sprintf@plt+0x5da0>
   173dc:	b	17494 <sprintf@plt+0x5da0>
   173e0:	b	17494 <sprintf@plt+0x5da0>
   173e4:	b	17494 <sprintf@plt+0x5da0>
   173e8:	b	17494 <sprintf@plt+0x5da0>
   173ec:	b	17494 <sprintf@plt+0x5da0>
   173f0:	b	17494 <sprintf@plt+0x5da0>
   173f4:	b	17494 <sprintf@plt+0x5da0>
   173f8:	b	17494 <sprintf@plt+0x5da0>
   173fc:	b	17494 <sprintf@plt+0x5da0>
   17400:	b	17494 <sprintf@plt+0x5da0>
   17404:	b	1748c <sprintf@plt+0x5d98>
   17408:	b	17494 <sprintf@plt+0x5da0>
   1740c:	b	17494 <sprintf@plt+0x5da0>
   17410:	b	17494 <sprintf@plt+0x5da0>
   17414:	b	17494 <sprintf@plt+0x5da0>
   17418:	b	1748c <sprintf@plt+0x5d98>
   1741c:	b	17494 <sprintf@plt+0x5da0>
   17420:	b	17494 <sprintf@plt+0x5da0>
   17424:	b	17494 <sprintf@plt+0x5da0>
   17428:	b	17494 <sprintf@plt+0x5da0>
   1742c:	b	17494 <sprintf@plt+0x5da0>
   17430:	b	17494 <sprintf@plt+0x5da0>
   17434:	b	17494 <sprintf@plt+0x5da0>
   17438:	b	17494 <sprintf@plt+0x5da0>
   1743c:	b	17494 <sprintf@plt+0x5da0>
   17440:	b	17494 <sprintf@plt+0x5da0>
   17444:	b	17494 <sprintf@plt+0x5da0>
   17448:	b	17494 <sprintf@plt+0x5da0>
   1744c:	b	17494 <sprintf@plt+0x5da0>
   17450:	b	17494 <sprintf@plt+0x5da0>
   17454:	b	17494 <sprintf@plt+0x5da0>
   17458:	b	17494 <sprintf@plt+0x5da0>
   1745c:	b	17494 <sprintf@plt+0x5da0>
   17460:	b	17494 <sprintf@plt+0x5da0>
   17464:	b	17494 <sprintf@plt+0x5da0>
   17468:	b	17494 <sprintf@plt+0x5da0>
   1746c:	b	17494 <sprintf@plt+0x5da0>
   17470:	b	17494 <sprintf@plt+0x5da0>
   17474:	b	17494 <sprintf@plt+0x5da0>
   17478:	b	17494 <sprintf@plt+0x5da0>
   1747c:	b	17494 <sprintf@plt+0x5da0>
   17480:	b	17494 <sprintf@plt+0x5da0>
   17484:	b	17494 <sprintf@plt+0x5da0>
   17488:	b	1748c <sprintf@plt+0x5d98>
   1748c:	mov	r3, #1
   17490:	b	17498 <sprintf@plt+0x5da4>
   17494:	mov	r3, #0
   17498:	mov	r0, r3
   1749c:	add	sp, fp, #0
   174a0:	pop	{fp}		; (ldr fp, [sp], #4)
   174a4:	bx	lr
   174a8:	push	{fp}		; (str fp, [sp, #-4]!)
   174ac:	add	fp, sp, #0
   174b0:	sub	sp, sp, #20
   174b4:	str	r0, [fp, #-16]
   174b8:	ldr	r3, [fp, #-16]
   174bc:	ldrb	r3, [r3]
   174c0:	strb	r3, [fp, #-9]
   174c4:	ldrb	r3, [fp, #-9]
   174c8:	and	r3, r3, #192	; 0xc0
   174cc:	cmp	r3, #192	; 0xc0
   174d0:	bne	174dc <sprintf@plt+0x5de8>
   174d4:	mvn	r3, #0
   174d8:	b	1754c <sprintf@plt+0x5e58>
   174dc:	ldrb	r3, [fp, #-9]
   174e0:	and	r3, r3, #192	; 0xc0
   174e4:	cmp	r3, #64	; 0x40
   174e8:	bne	17548 <sprintf@plt+0x5e54>
   174ec:	ldrb	r3, [fp, #-9]
   174f0:	cmp	r3, #65	; 0x41
   174f4:	bne	17540 <sprintf@plt+0x5e4c>
   174f8:	ldr	r3, [fp, #-16]
   174fc:	add	r3, r3, #1
   17500:	ldrb	r3, [r3]
   17504:	str	r3, [fp, #-8]
   17508:	ldr	r3, [fp, #-8]
   1750c:	cmp	r3, #0
   17510:	bne	1751c <sprintf@plt+0x5e28>
   17514:	mov	r3, #256	; 0x100
   17518:	str	r3, [fp, #-8]
   1751c:	ldr	r3, [fp, #-8]
   17520:	add	r3, r3, #7
   17524:	add	r2, r3, #7
   17528:	cmp	r3, #0
   1752c:	movlt	r3, r2
   17530:	movge	r3, r3
   17534:	asr	r3, r3, #3
   17538:	add	r3, r3, #1
   1753c:	b	1754c <sprintf@plt+0x5e58>
   17540:	mvn	r3, #0
   17544:	b	1754c <sprintf@plt+0x5e58>
   17548:	ldrb	r3, [fp, #-9]
   1754c:	mov	r0, r3
   17550:	add	sp, fp, #0
   17554:	pop	{fp}		; (ldr fp, [sp], #4)
   17558:	bx	lr
   1755c:	push	{fp}		; (str fp, [sp, #-4]!)
   17560:	add	fp, sp, #0
   17564:	sub	sp, sp, #12
   17568:	str	r0, [fp, #-8]
   1756c:	ldr	r3, [fp, #-8]
   17570:	cmp	r3, #32
   17574:	ble	1758c <sprintf@plt+0x5e98>
   17578:	ldr	r3, [fp, #-8]
   1757c:	cmp	r3, #126	; 0x7e
   17580:	bgt	1758c <sprintf@plt+0x5e98>
   17584:	mov	r3, #1
   17588:	b	17590 <sprintf@plt+0x5e9c>
   1758c:	mov	r3, #0
   17590:	mov	r0, r3
   17594:	add	sp, fp, #0
   17598:	pop	{fp}		; (ldr fp, [sp], #4)
   1759c:	bx	lr
   175a0:	push	{fp, lr}
   175a4:	add	fp, sp, #4
   175a8:	sub	sp, sp, #40	; 0x28
   175ac:	str	r0, [fp, #-32]	; 0xffffffe0
   175b0:	str	r1, [fp, #-36]	; 0xffffffdc
   175b4:	str	r2, [fp, #-40]	; 0xffffffd8
   175b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   175bc:	ldr	r3, [r3]
   175c0:	str	r3, [fp, #-8]
   175c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175c8:	str	r3, [fp, #-20]	; 0xffffffec
   175cc:	ldr	r3, [fp, #-8]
   175d0:	ldrb	r3, [r3]
   175d4:	str	r3, [fp, #-16]
   175d8:	ldr	r3, [fp, #-16]
   175dc:	cmp	r3, #0
   175e0:	bne	175ec <sprintf@plt+0x5ef8>
   175e4:	mov	r3, #256	; 0x100
   175e8:	str	r3, [fp, #-16]
   175ec:	ldr	r3, [fp, #-16]
   175f0:	add	r3, r3, #3
   175f4:	add	r2, r3, #3
   175f8:	cmp	r3, #0
   175fc:	movlt	r3, r2
   17600:	movge	r3, r3
   17604:	asr	r3, r3, #2
   17608:	str	r3, [fp, #-24]	; 0xffffffe8
   1760c:	ldr	r3, [fp, #-16]
   17610:	cmp	r3, #99	; 0x63
   17614:	bgt	17634 <sprintf@plt+0x5f40>
   17618:	ldr	r3, [fp, #-16]
   1761c:	cmp	r3, #9
   17620:	ble	1762c <sprintf@plt+0x5f38>
   17624:	mov	r3, #8
   17628:	b	17638 <sprintf@plt+0x5f44>
   1762c:	mov	r3, #7
   17630:	b	17638 <sprintf@plt+0x5f44>
   17634:	mov	r3, #9
   17638:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1763c:	add	r3, r3, r2
   17640:	str	r3, [fp, #-24]	; 0xffffffe8
   17644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17648:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1764c:	add	r2, r2, r3
   17650:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17654:	cmp	r2, r3
   17658:	bcc	17664 <sprintf@plt+0x5f70>
   1765c:	mvn	r3, #0
   17660:	b	17818 <sprintf@plt+0x6124>
   17664:	ldr	r3, [fp, #-8]
   17668:	add	r3, r3, #1
   1766c:	str	r3, [fp, #-8]
   17670:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17674:	ldr	r2, [pc, #424]	; 17824 <sprintf@plt+0x6130>
   17678:	add	r2, pc, r2
   1767c:	ldr	r0, [r2]
   17680:	str	r0, [r3]
   17684:	mov	r3, #3
   17688:	mov	r2, r3
   1768c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17690:	add	r3, r3, r2
   17694:	str	r3, [fp, #-36]	; 0xffffffdc
   17698:	ldr	r3, [fp, #-16]
   1769c:	str	r3, [fp, #-12]
   176a0:	b	176f0 <sprintf@plt+0x5ffc>
   176a4:	ldr	r3, [fp, #-8]
   176a8:	ldrb	r3, [r3]
   176ac:	mov	r2, r3
   176b0:	ldr	r3, [pc, #368]	; 17828 <sprintf@plt+0x6134>
   176b4:	add	r3, pc, r3
   176b8:	mov	r1, r3
   176bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176c0:	bl	116f4 <sprintf@plt>
   176c4:	mov	r3, r0
   176c8:	mov	r2, r3
   176cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   176d0:	add	r3, r3, r2
   176d4:	str	r3, [fp, #-36]	; 0xffffffdc
   176d8:	ldr	r3, [fp, #-12]
   176dc:	sub	r3, r3, #8
   176e0:	str	r3, [fp, #-12]
   176e4:	ldr	r3, [fp, #-8]
   176e8:	add	r3, r3, #1
   176ec:	str	r3, [fp, #-8]
   176f0:	ldr	r3, [fp, #-12]
   176f4:	cmp	r3, #7
   176f8:	bgt	176a4 <sprintf@plt+0x5fb0>
   176fc:	ldr	r3, [fp, #-12]
   17700:	cmp	r3, #4
   17704:	ble	17764 <sprintf@plt+0x6070>
   17708:	ldr	r3, [fp, #-8]
   1770c:	add	r2, r3, #1
   17710:	str	r2, [fp, #-8]
   17714:	ldrb	r3, [r3]
   17718:	strb	r3, [fp, #-25]	; 0xffffffe7
   1771c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   17720:	ldr	r3, [fp, #-12]
   17724:	rsb	r3, r3, #8
   17728:	mov	r1, #255	; 0xff
   1772c:	lsl	r3, r1, r3
   17730:	and	r3, r3, r2
   17734:	mov	r2, r3
   17738:	ldr	r3, [pc, #236]	; 1782c <sprintf@plt+0x6138>
   1773c:	add	r3, pc, r3
   17740:	mov	r1, r3
   17744:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17748:	bl	116f4 <sprintf@plt>
   1774c:	mov	r3, r0
   17750:	mov	r2, r3
   17754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17758:	add	r3, r3, r2
   1775c:	str	r3, [fp, #-36]	; 0xffffffdc
   17760:	b	177d4 <sprintf@plt+0x60e0>
   17764:	ldr	r3, [fp, #-12]
   17768:	cmp	r3, #0
   1776c:	ble	177d4 <sprintf@plt+0x60e0>
   17770:	ldr	r3, [fp, #-8]
   17774:	add	r2, r3, #1
   17778:	str	r2, [fp, #-8]
   1777c:	ldrb	r3, [r3]
   17780:	strb	r3, [fp, #-25]	; 0xffffffe7
   17784:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   17788:	lsr	r3, r3, #4
   1778c:	uxtb	r3, r3
   17790:	and	r2, r3, #15
   17794:	ldr	r3, [fp, #-12]
   17798:	rsb	r3, r3, #4
   1779c:	mov	r1, #15
   177a0:	lsl	r3, r1, r3
   177a4:	and	r3, r3, r2
   177a8:	mov	r2, r3
   177ac:	ldr	r3, [pc, #124]	; 17830 <sprintf@plt+0x613c>
   177b0:	add	r3, pc, r3
   177b4:	mov	r1, r3
   177b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177bc:	bl	116f4 <sprintf@plt>
   177c0:	mov	r3, r0
   177c4:	mov	r2, r3
   177c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   177cc:	add	r3, r3, r2
   177d0:	str	r3, [fp, #-36]	; 0xffffffdc
   177d4:	ldr	r2, [fp, #-16]
   177d8:	ldr	r3, [pc, #84]	; 17834 <sprintf@plt+0x6140>
   177dc:	add	r3, pc, r3
   177e0:	mov	r1, r3
   177e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177e8:	bl	116f4 <sprintf@plt>
   177ec:	mov	r3, r0
   177f0:	mov	r2, r3
   177f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   177f8:	add	r3, r3, r2
   177fc:	str	r3, [fp, #-36]	; 0xffffffdc
   17800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17804:	ldr	r2, [fp, #-8]
   17808:	str	r2, [r3]
   1780c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17810:	ldr	r3, [fp, #-20]	; 0xffffffec
   17814:	sub	r3, r2, r3
   17818:	mov	r0, r3
   1781c:	sub	sp, fp, #4
   17820:	pop	{fp, pc}
   17824:			; <UNDEFINED> instruction: 0x000079b4
   17828:	andeq	r7, r0, ip, ror r9
   1782c:	strdeq	r7, [r0], -r4
   17830:	andeq	r7, r0, r8, lsl #17
   17834:	andeq	r7, r0, r0, ror #16
   17838:	push	{fp, lr}
   1783c:	add	fp, sp, #4
   17840:	sub	sp, sp, #56	; 0x38
   17844:	str	r0, [fp, #-40]	; 0xffffffd8
   17848:	str	r1, [fp, #-44]	; 0xffffffd4
   1784c:	str	r2, [fp, #-48]	; 0xffffffd0
   17850:	mov	r3, #0
   17854:	str	r3, [fp, #-16]
   17858:	mov	r3, #0
   1785c:	str	r3, [fp, #-12]
   17860:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17864:	str	r3, [fp, #-36]	; 0xffffffdc
   17868:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1786c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17870:	add	r3, r2, r3
   17874:	str	r3, [fp, #-20]	; 0xffffffec
   17878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1787c:	add	r2, r3, #1
   17880:	str	r2, [fp, #-36]	; 0xffffffdc
   17884:	str	r3, [fp, #-32]	; 0xffffffe0
   17888:	b	17cb4 <sprintf@plt+0x65c0>
   1788c:	ldr	r3, [fp, #-12]
   17890:	cmp	r3, #0
   17894:	beq	17b00 <sprintf@plt+0x640c>
   17898:	ldr	r3, [fp, #-8]
   1789c:	cmp	r3, #91	; 0x5b
   178a0:	bne	17984 <sprintf@plt+0x6290>
   178a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   178a8:	mov	r1, #93	; 0x5d
   178ac:	mov	r0, r3
   178b0:	bl	113d0 <strchr@plt>
   178b4:	str	r0, [fp, #-24]	; 0xffffffe8
   178b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178bc:	cmp	r3, #0
   178c0:	bne	178dc <sprintf@plt+0x61e8>
   178c4:	bl	116e8 <__errno_location@plt>
   178c8:	mov	r2, r0
   178cc:	mov	r3, #22
   178d0:	str	r3, [r2]
   178d4:	mvn	r3, #0
   178d8:	b	17dcc <sprintf@plt+0x66d8>
   178dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178e0:	add	r1, r3, #2
   178e4:	sub	ip, fp, #36	; 0x24
   178e8:	sub	r2, fp, #32
   178ec:	sub	r0, fp, #40	; 0x28
   178f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   178f4:	str	r3, [sp]
   178f8:	mov	r3, ip
   178fc:	bl	18208 <sprintf@plt+0x6b14>
   17900:	str	r0, [fp, #-16]
   17904:	ldr	r3, [fp, #-16]
   17908:	cmp	r3, #0
   1790c:	beq	17928 <sprintf@plt+0x6234>
   17910:	bl	116e8 <__errno_location@plt>
   17914:	mov	r2, r0
   17918:	ldr	r3, [fp, #-16]
   1791c:	str	r3, [r2]
   17920:	mvn	r3, #0
   17924:	b	17dcc <sprintf@plt+0x66d8>
   17928:	mov	r3, #0
   1792c:	str	r3, [fp, #-12]
   17930:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17934:	add	r2, r3, #1
   17938:	str	r2, [fp, #-36]	; 0xffffffdc
   1793c:	str	r3, [fp, #-32]	; 0xffffffe0
   17940:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17944:	add	r2, r3, #1
   17948:	str	r2, [fp, #-40]	; 0xffffffd8
   1794c:	ldrb	r3, [r3]
   17950:	str	r3, [fp, #-8]
   17954:	ldr	r3, [fp, #-8]
   17958:	cmp	r3, #0
   1795c:	beq	17d14 <sprintf@plt+0x6620>
   17960:	ldr	r3, [fp, #-8]
   17964:	cmp	r3, #46	; 0x2e
   17968:	beq	17cb4 <sprintf@plt+0x65c0>
   1796c:	bl	116e8 <__errno_location@plt>
   17970:	mov	r2, r0
   17974:	mov	r3, #22
   17978:	str	r3, [r2]
   1797c:	mvn	r3, #0
   17980:	b	17dcc <sprintf@plt+0x66d8>
   17984:	ldr	r1, [fp, #-8]
   17988:	ldr	r3, [pc, #1096]	; 17dd8 <sprintf@plt+0x66e4>
   1798c:	add	r3, pc, r3
   17990:	mov	r0, r3
   17994:	bl	113d0 <strchr@plt>
   17998:	str	r0, [fp, #-24]	; 0xffffffe8
   1799c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179a0:	cmp	r3, #0
   179a4:	beq	17af4 <sprintf@plt+0x6400>
   179a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179ac:	ldr	r2, [pc, #1064]	; 17ddc <sprintf@plt+0x66e8>
   179b0:	add	r2, pc, r2
   179b4:	sub	r3, r3, r2
   179b8:	mov	r2, #100	; 0x64
   179bc:	mul	r3, r2, r3
   179c0:	str	r3, [fp, #-28]	; 0xffffffe4
   179c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   179c8:	add	r2, r3, #1
   179cc:	str	r2, [fp, #-40]	; 0xffffffd8
   179d0:	ldrb	r3, [r3]
   179d4:	str	r3, [fp, #-8]
   179d8:	ldr	r3, [fp, #-8]
   179dc:	cmp	r3, #0
   179e0:	beq	17a08 <sprintf@plt+0x6314>
   179e4:	ldr	r1, [fp, #-8]
   179e8:	ldr	r3, [pc, #1008]	; 17de0 <sprintf@plt+0x66ec>
   179ec:	add	r3, pc, r3
   179f0:	mov	r0, r3
   179f4:	bl	113d0 <strchr@plt>
   179f8:	str	r0, [fp, #-24]	; 0xffffffe8
   179fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a00:	cmp	r3, #0
   17a04:	bne	17a20 <sprintf@plt+0x632c>
   17a08:	bl	116e8 <__errno_location@plt>
   17a0c:	mov	r2, r0
   17a10:	mov	r3, #90	; 0x5a
   17a14:	str	r3, [r2]
   17a18:	mvn	r3, #0
   17a1c:	b	17dcc <sprintf@plt+0x66d8>
   17a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a24:	ldr	r2, [pc, #952]	; 17de4 <sprintf@plt+0x66f0>
   17a28:	add	r2, pc, r2
   17a2c:	sub	r2, r3, r2
   17a30:	mov	r3, r2
   17a34:	lsl	r3, r3, #2
   17a38:	add	r3, r3, r2
   17a3c:	lsl	r3, r3, #1
   17a40:	mov	r2, r3
   17a44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17a48:	add	r3, r3, r2
   17a4c:	str	r3, [fp, #-28]	; 0xffffffe4
   17a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17a54:	add	r2, r3, #1
   17a58:	str	r2, [fp, #-40]	; 0xffffffd8
   17a5c:	ldrb	r3, [r3]
   17a60:	str	r3, [fp, #-8]
   17a64:	ldr	r3, [fp, #-8]
   17a68:	cmp	r3, #0
   17a6c:	beq	17a94 <sprintf@plt+0x63a0>
   17a70:	ldr	r1, [fp, #-8]
   17a74:	ldr	r3, [pc, #876]	; 17de8 <sprintf@plt+0x66f4>
   17a78:	add	r3, pc, r3
   17a7c:	mov	r0, r3
   17a80:	bl	113d0 <strchr@plt>
   17a84:	str	r0, [fp, #-24]	; 0xffffffe8
   17a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a8c:	cmp	r3, #0
   17a90:	bne	17aac <sprintf@plt+0x63b8>
   17a94:	bl	116e8 <__errno_location@plt>
   17a98:	mov	r2, r0
   17a9c:	mov	r3, #90	; 0x5a
   17aa0:	str	r3, [r2]
   17aa4:	mvn	r3, #0
   17aa8:	b	17dcc <sprintf@plt+0x66d8>
   17aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ab0:	ldr	r2, [pc, #820]	; 17dec <sprintf@plt+0x66f8>
   17ab4:	add	r2, pc, r2
   17ab8:	sub	r3, r3, r2
   17abc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17ac0:	add	r3, r2, r3
   17ac4:	str	r3, [fp, #-28]	; 0xffffffe4
   17ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17acc:	cmp	r3, #255	; 0xff
   17ad0:	ble	17aec <sprintf@plt+0x63f8>
   17ad4:	bl	116e8 <__errno_location@plt>
   17ad8:	mov	r2, r0
   17adc:	mov	r3, #90	; 0x5a
   17ae0:	str	r3, [r2]
   17ae4:	mvn	r3, #0
   17ae8:	b	17dcc <sprintf@plt+0x66d8>
   17aec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17af0:	str	r3, [fp, #-8]
   17af4:	mov	r3, #0
   17af8:	str	r3, [fp, #-12]
   17afc:	b	17c74 <sprintf@plt+0x6580>
   17b00:	ldr	r3, [fp, #-8]
   17b04:	cmp	r3, #92	; 0x5c
   17b08:	bne	17b18 <sprintf@plt+0x6424>
   17b0c:	mov	r3, #1
   17b10:	str	r3, [fp, #-12]
   17b14:	b	17cb4 <sprintf@plt+0x65c0>
   17b18:	ldr	r3, [fp, #-8]
   17b1c:	cmp	r3, #46	; 0x2e
   17b20:	bne	17c74 <sprintf@plt+0x6580>
   17b24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b28:	mov	r2, r3
   17b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b30:	sub	r3, r2, r3
   17b34:	sub	r3, r3, #1
   17b38:	str	r3, [fp, #-8]
   17b3c:	ldr	r3, [fp, #-8]
   17b40:	and	r3, r3, #192	; 0xc0
   17b44:	cmp	r3, #0
   17b48:	beq	17b64 <sprintf@plt+0x6470>
   17b4c:	bl	116e8 <__errno_location@plt>
   17b50:	mov	r2, r0
   17b54:	mov	r3, #90	; 0x5a
   17b58:	str	r3, [r2]
   17b5c:	mvn	r3, #0
   17b60:	b	17dcc <sprintf@plt+0x66d8>
   17b64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17b68:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b6c:	cmp	r2, r3
   17b70:	bcc	17b8c <sprintf@plt+0x6498>
   17b74:	bl	116e8 <__errno_location@plt>
   17b78:	mov	r2, r0
   17b7c:	mov	r3, #90	; 0x5a
   17b80:	str	r3, [r2]
   17b84:	mvn	r3, #0
   17b88:	b	17dcc <sprintf@plt+0x66d8>
   17b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b90:	ldr	r2, [fp, #-8]
   17b94:	uxtb	r2, r2
   17b98:	strb	r2, [r3]
   17b9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17ba0:	ldrb	r3, [r3]
   17ba4:	cmp	r3, #0
   17ba8:	bne	17c2c <sprintf@plt+0x6538>
   17bac:	ldr	r3, [fp, #-8]
   17bb0:	cmp	r3, #0
   17bb4:	beq	17bf4 <sprintf@plt+0x6500>
   17bb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17bc0:	cmp	r2, r3
   17bc4:	bcc	17be0 <sprintf@plt+0x64ec>
   17bc8:	bl	116e8 <__errno_location@plt>
   17bcc:	mov	r2, r0
   17bd0:	mov	r3, #90	; 0x5a
   17bd4:	str	r3, [r2]
   17bd8:	mvn	r3, #0
   17bdc:	b	17dcc <sprintf@plt+0x66d8>
   17be0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17be4:	add	r2, r3, #1
   17be8:	str	r2, [fp, #-36]	; 0xffffffdc
   17bec:	mov	r2, #0
   17bf0:	strb	r2, [r3]
   17bf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bf8:	mov	r2, r3
   17bfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17c00:	sub	r3, r2, r3
   17c04:	cmp	r3, #255	; 0xff
   17c08:	ble	17c24 <sprintf@plt+0x6530>
   17c0c:	bl	116e8 <__errno_location@plt>
   17c10:	mov	r2, r0
   17c14:	mov	r3, #90	; 0x5a
   17c18:	str	r3, [r2]
   17c1c:	mvn	r3, #0
   17c20:	b	17dcc <sprintf@plt+0x66d8>
   17c24:	mov	r3, #1
   17c28:	b	17dcc <sprintf@plt+0x66d8>
   17c2c:	ldr	r3, [fp, #-8]
   17c30:	cmp	r3, #0
   17c34:	beq	17c48 <sprintf@plt+0x6554>
   17c38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17c3c:	ldrb	r3, [r3]
   17c40:	cmp	r3, #46	; 0x2e
   17c44:	bne	17c60 <sprintf@plt+0x656c>
   17c48:	bl	116e8 <__errno_location@plt>
   17c4c:	mov	r2, r0
   17c50:	mov	r3, #90	; 0x5a
   17c54:	str	r3, [r2]
   17c58:	mvn	r3, #0
   17c5c:	b	17dcc <sprintf@plt+0x66d8>
   17c60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c64:	add	r2, r3, #1
   17c68:	str	r2, [fp, #-36]	; 0xffffffdc
   17c6c:	str	r3, [fp, #-32]	; 0xffffffe0
   17c70:	b	17cb4 <sprintf@plt+0x65c0>
   17c74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c78:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c7c:	cmp	r2, r3
   17c80:	bcc	17c9c <sprintf@plt+0x65a8>
   17c84:	bl	116e8 <__errno_location@plt>
   17c88:	mov	r2, r0
   17c8c:	mov	r3, #90	; 0x5a
   17c90:	str	r3, [r2]
   17c94:	mvn	r3, #0
   17c98:	b	17dcc <sprintf@plt+0x66d8>
   17c9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ca0:	add	r2, r3, #1
   17ca4:	str	r2, [fp, #-36]	; 0xffffffdc
   17ca8:	ldr	r2, [fp, #-8]
   17cac:	uxtb	r2, r2
   17cb0:	strb	r2, [r3]
   17cb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17cb8:	add	r2, r3, #1
   17cbc:	str	r2, [fp, #-40]	; 0xffffffd8
   17cc0:	ldrb	r3, [r3]
   17cc4:	str	r3, [fp, #-8]
   17cc8:	ldr	r3, [fp, #-8]
   17ccc:	cmp	r3, #0
   17cd0:	bne	1788c <sprintf@plt+0x6198>
   17cd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17cd8:	mov	r2, r3
   17cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ce0:	sub	r3, r2, r3
   17ce4:	sub	r3, r3, #1
   17ce8:	str	r3, [fp, #-8]
   17cec:	ldr	r3, [fp, #-8]
   17cf0:	and	r3, r3, #192	; 0xc0
   17cf4:	cmp	r3, #0
   17cf8:	beq	17d18 <sprintf@plt+0x6624>
   17cfc:	bl	116e8 <__errno_location@plt>
   17d00:	mov	r2, r0
   17d04:	mov	r3, #90	; 0x5a
   17d08:	str	r3, [r2]
   17d0c:	mvn	r3, #0
   17d10:	b	17dcc <sprintf@plt+0x66d8>
   17d14:	nop			; (mov r0, r0)
   17d18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d20:	cmp	r2, r3
   17d24:	bcc	17d40 <sprintf@plt+0x664c>
   17d28:	bl	116e8 <__errno_location@plt>
   17d2c:	mov	r2, r0
   17d30:	mov	r3, #90	; 0x5a
   17d34:	str	r3, [r2]
   17d38:	mvn	r3, #0
   17d3c:	b	17dcc <sprintf@plt+0x66d8>
   17d40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d44:	ldr	r2, [fp, #-8]
   17d48:	uxtb	r2, r2
   17d4c:	strb	r2, [r3]
   17d50:	ldr	r3, [fp, #-8]
   17d54:	cmp	r3, #0
   17d58:	beq	17d98 <sprintf@plt+0x66a4>
   17d5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d60:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d64:	cmp	r2, r3
   17d68:	bcc	17d84 <sprintf@plt+0x6690>
   17d6c:	bl	116e8 <__errno_location@plt>
   17d70:	mov	r2, r0
   17d74:	mov	r3, #90	; 0x5a
   17d78:	str	r3, [r2]
   17d7c:	mvn	r3, #0
   17d80:	b	17dcc <sprintf@plt+0x66d8>
   17d84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d88:	add	r2, r3, #1
   17d8c:	str	r2, [fp, #-36]	; 0xffffffdc
   17d90:	mov	r2, #0
   17d94:	strb	r2, [r3]
   17d98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d9c:	mov	r2, r3
   17da0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17da4:	sub	r3, r2, r3
   17da8:	cmp	r3, #255	; 0xff
   17dac:	ble	17dc8 <sprintf@plt+0x66d4>
   17db0:	bl	116e8 <__errno_location@plt>
   17db4:	mov	r2, r0
   17db8:	mov	r3, #90	; 0x5a
   17dbc:	str	r3, [r2]
   17dc0:	mvn	r3, #0
   17dc4:	b	17dcc <sprintf@plt+0x66d8>
   17dc8:	mov	r3, #0
   17dcc:	mov	r0, r3
   17dd0:	sub	sp, fp, #4
   17dd4:	pop	{fp, pc}
   17dd8:	andeq	r7, r0, r4, asr r6
   17ddc:	andeq	r7, r0, r0, lsr r6
   17de0:	strdeq	r7, [r0], -r4
   17de4:			; <UNDEFINED> instruction: 0x000075b8
   17de8:	andeq	r7, r0, r8, ror #10
   17dec:	andeq	r7, r0, ip, lsr #10
   17df0:	push	{fp, lr}
   17df4:	add	fp, sp, #4
   17df8:	sub	sp, sp, #56	; 0x38
   17dfc:	str	r0, [fp, #-48]	; 0xffffffd0
   17e00:	str	r1, [fp, #-52]	; 0xffffffcc
   17e04:	str	r2, [fp, #-56]	; 0xffffffc8
   17e08:	str	r3, [fp, #-60]	; 0xffffffc4
   17e0c:	mov	r3, #1
   17e10:	str	r3, [fp, #-32]	; 0xffffffe0
   17e14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17e18:	str	r3, [fp, #-24]	; 0xffffffe8
   17e1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17e20:	str	r3, [fp, #-8]
   17e24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17e28:	ldr	r2, [fp, #-8]
   17e2c:	add	r3, r2, r3
   17e30:	str	r3, [fp, #-36]	; 0xffffffdc
   17e34:	mov	r3, #0
   17e38:	str	r3, [fp, #-12]
   17e3c:	ldr	r3, [fp, #-12]
   17e40:	str	r3, [fp, #-16]
   17e44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17e48:	cmp	r3, #0
   17e4c:	beq	17ea4 <sprintf@plt+0x67b0>
   17e50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17e54:	add	r2, r3, #4
   17e58:	str	r2, [fp, #-60]	; 0xffffffc4
   17e5c:	ldr	r3, [r3]
   17e60:	str	r3, [fp, #-20]	; 0xffffffec
   17e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e68:	cmp	r3, #0
   17e6c:	beq	17eac <sprintf@plt+0x67b8>
   17e70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17e74:	str	r3, [fp, #-12]
   17e78:	b	17e88 <sprintf@plt+0x6794>
   17e7c:	ldr	r3, [fp, #-12]
   17e80:	add	r3, r3, #4
   17e84:	str	r3, [fp, #-12]
   17e88:	ldr	r3, [fp, #-12]
   17e8c:	ldr	r3, [r3]
   17e90:	cmp	r3, #0
   17e94:	bne	17e7c <sprintf@plt+0x6788>
   17e98:	ldr	r3, [fp, #-12]
   17e9c:	str	r3, [fp, #-16]
   17ea0:	b	17eac <sprintf@plt+0x67b8>
   17ea4:	mov	r3, #0
   17ea8:	str	r3, [fp, #-20]	; 0xffffffec
   17eac:	mov	r3, #0
   17eb0:	str	r3, [fp, #-28]	; 0xffffffe4
   17eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17eb8:	ldrb	r3, [r3]
   17ebc:	str	r3, [fp, #-40]	; 0xffffffd8
   17ec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17ec4:	and	r3, r3, #192	; 0xc0
   17ec8:	cmp	r3, #192	; 0xc0
   17ecc:	bne	17ee8 <sprintf@plt+0x67f4>
   17ed0:	bl	116e8 <__errno_location@plt>
   17ed4:	mov	r2, r0
   17ed8:	mov	r3, #90	; 0x5a
   17edc:	str	r3, [r2]
   17ee0:	mvn	r3, #0
   17ee4:	b	1818c <sprintf@plt+0x6a98>
   17ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eec:	bl	174a8 <sprintf@plt+0x5db4>
   17ef0:	str	r0, [fp, #-44]	; 0xffffffd4
   17ef4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ef8:	cmp	r3, #0
   17efc:	bge	17f18 <sprintf@plt+0x6824>
   17f00:	bl	116e8 <__errno_location@plt>
   17f04:	mov	r2, r0
   17f08:	mov	r3, #22
   17f0c:	str	r3, [r2]
   17f10:	mvn	r3, #0
   17f14:	b	1818c <sprintf@plt+0x6a98>
   17f18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17f1c:	add	r3, r3, #1
   17f20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f24:	add	r3, r2, r3
   17f28:	str	r3, [fp, #-28]	; 0xffffffe4
   17f2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17f30:	cmp	r3, #255	; 0xff
   17f34:	ble	17f50 <sprintf@plt+0x685c>
   17f38:	bl	116e8 <__errno_location@plt>
   17f3c:	mov	r2, r0
   17f40:	mov	r3, #90	; 0x5a
   17f44:	str	r3, [r2]
   17f48:	mvn	r3, #0
   17f4c:	b	1818c <sprintf@plt+0x6a98>
   17f50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17f54:	add	r3, r3, #1
   17f58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f5c:	add	r3, r2, r3
   17f60:	str	r3, [fp, #-24]	; 0xffffffe8
   17f64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17f68:	cmp	r3, #0
   17f6c:	bne	17eb4 <sprintf@plt+0x67c0>
   17f70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17f74:	str	r3, [fp, #-24]	; 0xffffffe8
   17f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f7c:	ldrb	r3, [r3]
   17f80:	str	r3, [fp, #-40]	; 0xffffffd8
   17f84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17f88:	cmp	r3, #0
   17f8c:	beq	180a4 <sprintf@plt+0x69b0>
   17f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f94:	cmp	r3, #0
   17f98:	beq	180a4 <sprintf@plt+0x69b0>
   17f9c:	ldr	r3, [fp, #-16]
   17fa0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fac:	bl	185e4 <sprintf@plt+0x6ef0>
   17fb0:	str	r0, [fp, #-28]	; 0xffffffe4
   17fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17fb8:	cmp	r3, #0
   17fbc:	blt	1803c <sprintf@plt+0x6948>
   17fc0:	ldr	r3, [fp, #-8]
   17fc4:	add	r2, r3, #1
   17fc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17fcc:	cmp	r2, r3
   17fd0:	bcs	1813c <sprintf@plt+0x6a48>
   17fd4:	ldr	r2, [fp, #-8]
   17fd8:	add	r3, r2, #1
   17fdc:	str	r3, [fp, #-8]
   17fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17fe4:	asr	r3, r3, #8
   17fe8:	sxtb	r3, r3
   17fec:	mvn	r3, r3, lsl #26
   17ff0:	mvn	r3, r3, lsr #26
   17ff4:	sxtb	r3, r3
   17ff8:	uxtb	r3, r3
   17ffc:	strb	r3, [r2]
   18000:	ldr	r3, [fp, #-8]
   18004:	add	r2, r3, #1
   18008:	str	r2, [fp, #-8]
   1800c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18010:	asr	r2, r1, #31
   18014:	lsr	r2, r2, #24
   18018:	add	r1, r1, r2
   1801c:	uxtb	r1, r1
   18020:	sub	r2, r1, r2
   18024:	uxtb	r2, r2
   18028:	strb	r2, [r3]
   1802c:	ldr	r2, [fp, #-8]
   18030:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18034:	sub	r3, r2, r3
   18038:	b	1818c <sprintf@plt+0x6a98>
   1803c:	ldr	r3, [fp, #4]
   18040:	cmp	r3, #0
   18044:	beq	180a4 <sprintf@plt+0x69b0>
   18048:	ldr	r3, [fp, #4]
   1804c:	sub	r2, r3, #4
   18050:	ldr	r3, [fp, #-12]
   18054:	cmp	r2, r3
   18058:	bls	180a4 <sprintf@plt+0x69b0>
   1805c:	ldr	r2, [fp, #-8]
   18060:	ldr	r3, [fp, #-20]	; 0xffffffec
   18064:	sub	r3, r2, r3
   18068:	cmp	r3, #16384	; 0x4000
   1806c:	bge	180a4 <sprintf@plt+0x69b0>
   18070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18074:	cmp	r3, #0
   18078:	beq	180a4 <sprintf@plt+0x69b0>
   1807c:	ldr	r3, [fp, #-12]
   18080:	add	r2, r3, #4
   18084:	str	r2, [fp, #-12]
   18088:	ldr	r2, [fp, #-8]
   1808c:	str	r2, [r3]
   18090:	ldr	r3, [fp, #-12]
   18094:	mov	r2, #0
   18098:	str	r2, [r3]
   1809c:	mov	r3, #0
   180a0:	str	r3, [fp, #-32]	; 0xffffffe0
   180a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   180a8:	and	r3, r3, #192	; 0xc0
   180ac:	cmp	r3, #192	; 0xc0
   180b0:	beq	18144 <sprintf@plt+0x6a50>
   180b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180b8:	bl	174a8 <sprintf@plt+0x5db4>
   180bc:	str	r0, [fp, #-40]	; 0xffffffd8
   180c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   180c4:	add	r3, r3, #1
   180c8:	ldr	r2, [fp, #-8]
   180cc:	add	r2, r2, r3
   180d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180d4:	cmp	r2, r3
   180d8:	bcs	1814c <sprintf@plt+0x6a58>
   180dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   180e0:	add	r3, r3, #1
   180e4:	mov	r2, r3
   180e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180ec:	ldr	r0, [fp, #-8]
   180f0:	bl	11514 <memcpy@plt>
   180f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   180f8:	add	r3, r3, #1
   180fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18100:	add	r3, r2, r3
   18104:	str	r3, [fp, #-24]	; 0xffffffe8
   18108:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1810c:	add	r3, r3, #1
   18110:	ldr	r2, [fp, #-8]
   18114:	add	r3, r2, r3
   18118:	str	r3, [fp, #-8]
   1811c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18120:	cmp	r3, #0
   18124:	bne	17f78 <sprintf@plt+0x6884>
   18128:	ldr	r2, [fp, #-8]
   1812c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18130:	cmp	r2, r3
   18134:	bls	18180 <sprintf@plt+0x6a8c>
   18138:	b	18150 <sprintf@plt+0x6a5c>
   1813c:	nop			; (mov r0, r0)
   18140:	b	18150 <sprintf@plt+0x6a5c>
   18144:	nop			; (mov r0, r0)
   18148:	b	18150 <sprintf@plt+0x6a5c>
   1814c:	nop			; (mov r0, r0)
   18150:	ldr	r3, [fp, #-20]	; 0xffffffec
   18154:	cmp	r3, #0
   18158:	beq	18168 <sprintf@plt+0x6a74>
   1815c:	ldr	r3, [fp, #-16]
   18160:	mov	r2, #0
   18164:	str	r2, [r3]
   18168:	bl	116e8 <__errno_location@plt>
   1816c:	mov	r2, r0
   18170:	mov	r3, #90	; 0x5a
   18174:	str	r3, [r2]
   18178:	mvn	r3, #0
   1817c:	b	1818c <sprintf@plt+0x6a98>
   18180:	ldr	r2, [fp, #-8]
   18184:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18188:	sub	r3, r2, r3
   1818c:	mov	r0, r3
   18190:	sub	sp, fp, #4
   18194:	pop	{fp, pc}
   18198:	push	{fp, lr}
   1819c:	add	fp, sp, #4
   181a0:	sub	sp, sp, #280	; 0x118
   181a4:	str	r0, [fp, #-264]	; 0xfffffef8
   181a8:	str	r1, [fp, #-268]	; 0xfffffef4
   181ac:	str	r2, [fp, #-272]	; 0xfffffef0
   181b0:	str	r3, [fp, #-276]	; 0xfffffeec
   181b4:	sub	r3, fp, #260	; 0x104
   181b8:	mov	r2, #255	; 0xff
   181bc:	mov	r1, r3
   181c0:	ldr	r0, [fp, #-264]	; 0xfffffef8
   181c4:	bl	17838 <sprintf@plt+0x6144>
   181c8:	mov	r3, r0
   181cc:	cmn	r3, #1
   181d0:	bne	181dc <sprintf@plt+0x6ae8>
   181d4:	mvn	r3, #0
   181d8:	b	181fc <sprintf@plt+0x6b08>
   181dc:	ldr	r2, [fp, #-272]	; 0xfffffef0
   181e0:	sub	r0, fp, #260	; 0x104
   181e4:	ldr	r3, [fp, #4]
   181e8:	str	r3, [sp]
   181ec:	ldr	r3, [fp, #-276]	; 0xfffffeec
   181f0:	ldr	r1, [fp, #-268]	; 0xfffffef4
   181f4:	bl	17df0 <sprintf@plt+0x66fc>
   181f8:	mov	r3, r0
   181fc:	mov	r0, r3
   18200:	sub	sp, fp, #4
   18204:	pop	{fp, pc}
   18208:	push	{fp, lr}
   1820c:	add	fp, sp, #4
   18210:	sub	sp, sp, #64	; 0x40
   18214:	str	r0, [fp, #-56]	; 0xffffffc8
   18218:	str	r1, [fp, #-60]	; 0xffffffc4
   1821c:	str	r2, [fp, #-64]	; 0xffffffc0
   18220:	str	r3, [fp, #-68]	; 0xffffffbc
   18224:	mov	r3, #0
   18228:	str	r3, [fp, #-8]
   1822c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18230:	ldr	r3, [r3]
   18234:	str	r3, [fp, #-12]
   18238:	mov	r3, #0
   1823c:	str	r3, [fp, #-48]	; 0xffffffd0
   18240:	mov	r3, #0
   18244:	str	r3, [fp, #-24]	; 0xffffffe8
   18248:	mov	r3, #0
   1824c:	str	r3, [fp, #-28]	; 0xffffffe4
   18250:	mov	r3, #0
   18254:	str	r3, [fp, #-32]	; 0xffffffe0
   18258:	mov	r3, #0
   1825c:	str	r3, [fp, #-36]	; 0xffffffdc
   18260:	mov	r3, #0
   18264:	str	r3, [fp, #-48]	; 0xffffffd0
   18268:	mov	r3, #0
   1826c:	str	r3, [fp, #-20]	; 0xffffffec
   18270:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18274:	ldr	r3, [fp, #-12]
   18278:	sub	r3, r2, r3
   1827c:	cmp	r3, #1
   18280:	bgt	1828c <sprintf@plt+0x6b98>
   18284:	mov	r3, #22
   18288:	b	185d4 <sprintf@plt+0x6ee0>
   1828c:	ldr	r3, [fp, #-12]
   18290:	add	r2, r3, #1
   18294:	str	r2, [fp, #-12]
   18298:	ldrb	r3, [r3]
   1829c:	cmp	r3, #120	; 0x78
   182a0:	beq	182ac <sprintf@plt+0x6bb8>
   182a4:	mov	r3, #22
   182a8:	b	185d4 <sprintf@plt+0x6ee0>
   182ac:	bl	115d4 <__ctype_b_loc@plt>
   182b0:	mov	r3, r0
   182b4:	ldr	r2, [r3]
   182b8:	ldr	r3, [fp, #-12]
   182bc:	ldrb	r3, [r3]
   182c0:	lsl	r3, r3, #1
   182c4:	add	r3, r2, r3
   182c8:	ldrh	r3, [r3]
   182cc:	and	r3, r3, #4096	; 0x1000
   182d0:	cmp	r3, #0
   182d4:	bne	182e0 <sprintf@plt+0x6bec>
   182d8:	mov	r3, #22
   182dc:	b	185d4 <sprintf@plt+0x6ee0>
   182e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   182e4:	add	r3, r3, #4
   182e8:	str	r3, [fp, #-16]
   182ec:	b	184d0 <sprintf@plt+0x6ddc>
   182f0:	ldr	r3, [fp, #-12]
   182f4:	ldrb	r3, [r3]
   182f8:	strb	r3, [fp, #-37]	; 0xffffffdb
   182fc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18300:	cmp	r3, #47	; 0x2f
   18304:	beq	18398 <sprintf@plt+0x6ca4>
   18308:	cmp	r3, #93	; 0x5d
   1830c:	bne	183a4 <sprintf@plt+0x6cb0>
   18310:	ldr	r3, [fp, #-8]
   18314:	cmp	r3, #0
   18318:	beq	18360 <sprintf@plt+0x6c6c>
   1831c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18320:	cmp	r3, #0
   18324:	bne	18330 <sprintf@plt+0x6c3c>
   18328:	mov	r3, #22
   1832c:	b	185d4 <sprintf@plt+0x6ee0>
   18330:	sub	r3, fp, #48	; 0x30
   18334:	mov	r2, #10
   18338:	mov	r1, r3
   1833c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18340:	bl	11538 <strtol@plt>
   18344:	str	r0, [fp, #-36]	; 0xffffffdc
   18348:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1834c:	ldrb	r3, [r3]
   18350:	cmp	r3, #93	; 0x5d
   18354:	beq	18360 <sprintf@plt+0x6c6c>
   18358:	mov	r3, #22
   1835c:	b	185d4 <sprintf@plt+0x6ee0>
   18360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18364:	cmp	r3, #0
   18368:	beq	18388 <sprintf@plt+0x6c94>
   1836c:	ldr	r3, [fp, #-16]
   18370:	add	r2, r3, #1
   18374:	str	r2, [fp, #-16]
   18378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1837c:	lsl	r2, r2, #4
   18380:	uxtb	r2, r2
   18384:	strb	r2, [r3]
   18388:	ldr	r3, [fp, #-12]
   1838c:	add	r3, r3, #1
   18390:	str	r3, [fp, #-12]
   18394:	b	184f0 <sprintf@plt+0x6dfc>
   18398:	mov	r3, #1
   1839c:	str	r3, [fp, #-8]
   183a0:	b	184c4 <sprintf@plt+0x6dd0>
   183a4:	ldr	r3, [fp, #-8]
   183a8:	cmp	r3, #0
   183ac:	beq	1840c <sprintf@plt+0x6d18>
   183b0:	bl	115d4 <__ctype_b_loc@plt>
   183b4:	mov	r3, r0
   183b8:	ldr	r2, [r3]
   183bc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   183c0:	lsl	r3, r3, #1
   183c4:	add	r3, r2, r3
   183c8:	ldrh	r3, [r3]
   183cc:	and	r3, r3, #2048	; 0x800
   183d0:	cmp	r3, #0
   183d4:	bne	183e0 <sprintf@plt+0x6cec>
   183d8:	mov	r3, #22
   183dc:	b	185d4 <sprintf@plt+0x6ee0>
   183e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   183e4:	cmp	r3, #0
   183e8:	bne	184c0 <sprintf@plt+0x6dcc>
   183ec:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   183f0:	cmp	r3, #48	; 0x30
   183f4:	bne	18400 <sprintf@plt+0x6d0c>
   183f8:	mov	r3, #22
   183fc:	b	185d4 <sprintf@plt+0x6ee0>
   18400:	ldr	r3, [fp, #-12]
   18404:	str	r3, [fp, #-20]	; 0xffffffec
   18408:	b	184c0 <sprintf@plt+0x6dcc>
   1840c:	bl	115d4 <__ctype_b_loc@plt>
   18410:	mov	r3, r0
   18414:	ldr	r2, [r3]
   18418:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1841c:	lsl	r3, r3, #1
   18420:	add	r3, r2, r3
   18424:	ldrh	r3, [r3]
   18428:	and	r3, r3, #4096	; 0x1000
   1842c:	cmp	r3, #0
   18430:	bne	1843c <sprintf@plt+0x6d48>
   18434:	mov	r3, #22
   18438:	b	185d4 <sprintf@plt+0x6ee0>
   1843c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18440:	lsl	r3, r3, #4
   18444:	str	r3, [fp, #-24]	; 0xffffffe8
   18448:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1844c:	ldr	r2, [pc, #396]	; 185e0 <sprintf@plt+0x6eec>
   18450:	add	r2, pc, r2
   18454:	ldrb	r3, [r2, r3]
   18458:	mov	r2, r3
   1845c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18460:	add	r3, r3, r2
   18464:	str	r3, [fp, #-24]	; 0xffffffe8
   18468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1846c:	add	r3, r3, #4
   18470:	str	r3, [fp, #-28]	; 0xffffffe4
   18474:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18478:	add	r3, r3, #4
   1847c:	str	r3, [fp, #-32]	; 0xffffffe0
   18480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18484:	cmp	r3, #256	; 0x100
   18488:	ble	18494 <sprintf@plt+0x6da0>
   1848c:	mov	r3, #22
   18490:	b	185d4 <sprintf@plt+0x6ee0>
   18494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18498:	cmp	r3, #8
   1849c:	bne	184c0 <sprintf@plt+0x6dcc>
   184a0:	ldr	r3, [fp, #-16]
   184a4:	add	r2, r3, #1
   184a8:	str	r2, [fp, #-16]
   184ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184b0:	uxtb	r2, r2
   184b4:	strb	r2, [r3]
   184b8:	mov	r3, #0
   184bc:	str	r3, [fp, #-28]	; 0xffffffe4
   184c0:	nop			; (mov r0, r0)
   184c4:	ldr	r3, [fp, #-12]
   184c8:	add	r3, r3, #1
   184cc:	str	r3, [fp, #-12]
   184d0:	ldr	r2, [fp, #-12]
   184d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   184d8:	cmp	r2, r3
   184dc:	bcs	184f0 <sprintf@plt+0x6dfc>
   184e0:	ldr	r2, [fp, #-16]
   184e4:	ldr	r3, [fp, #4]
   184e8:	cmp	r2, r3
   184ec:	bcc	182f0 <sprintf@plt+0x6bfc>
   184f0:	ldr	r2, [fp, #-12]
   184f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   184f8:	cmp	r2, r3
   184fc:	bcs	18510 <sprintf@plt+0x6e1c>
   18500:	ldr	r2, [fp, #-16]
   18504:	ldr	r3, [fp, #4]
   18508:	cmp	r2, r3
   1850c:	bcc	18518 <sprintf@plt+0x6e24>
   18510:	mov	r3, #90	; 0x5a
   18514:	b	185d4 <sprintf@plt+0x6ee0>
   18518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1851c:	cmp	r3, #0
   18520:	ble	18578 <sprintf@plt+0x6e84>
   18524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18528:	add	r3, r3, #3
   1852c:	bic	r2, r3, #3
   18530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18534:	cmp	r2, r3
   18538:	beq	18544 <sprintf@plt+0x6e50>
   1853c:	mov	r3, #22
   18540:	b	185d4 <sprintf@plt+0x6ee0>
   18544:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18548:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1854c:	sub	r3, r2, r3
   18550:	str	r3, [fp, #-44]	; 0xffffffd4
   18554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18558:	rsb	r3, r3, #8
   1855c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18560:	lsl	r3, r2, r3
   18564:	uxtb	r3, r3
   18568:	cmp	r3, #0
   1856c:	beq	18580 <sprintf@plt+0x6e8c>
   18570:	mov	r3, #22
   18574:	b	185d4 <sprintf@plt+0x6ee0>
   18578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1857c:	str	r3, [fp, #-36]	; 0xffffffdc
   18580:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18584:	cmp	r3, #256	; 0x100
   18588:	bne	18594 <sprintf@plt+0x6ea0>
   1858c:	mov	r3, #0
   18590:	str	r3, [fp, #-36]	; 0xffffffdc
   18594:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18598:	ldr	r3, [r3]
   1859c:	mov	r2, #65	; 0x41
   185a0:	strb	r2, [r3]
   185a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   185a8:	ldr	r3, [r3]
   185ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   185b0:	uxtb	r2, r2
   185b4:	strb	r2, [r3]
   185b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   185bc:	ldr	r2, [fp, #-12]
   185c0:	str	r2, [r3]
   185c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   185c8:	ldr	r2, [fp, #-16]
   185cc:	str	r2, [r3]
   185d0:	mov	r3, #0
   185d4:	mov	r0, r3
   185d8:	sub	sp, fp, #4
   185dc:	pop	{fp, pc}
   185e0:	muleq	r0, r0, sl
   185e4:	push	{r4, fp, lr}
   185e8:	add	fp, sp, #8
   185ec:	sub	sp, sp, #44	; 0x2c
   185f0:	str	r0, [fp, #-40]	; 0xffffffd8
   185f4:	str	r1, [fp, #-44]	; 0xffffffd4
   185f8:	str	r2, [fp, #-48]	; 0xffffffd0
   185fc:	str	r3, [fp, #-52]	; 0xffffffcc
   18600:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18604:	str	r3, [fp, #-28]	; 0xffffffe4
   18608:	b	187f8 <sprintf@plt+0x7104>
   1860c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18610:	ldr	r3, [r3]
   18614:	str	r3, [fp, #-24]	; 0xffffffe8
   18618:	b	187b4 <sprintf@plt+0x70c0>
   1861c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18620:	str	r3, [fp, #-16]
   18624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18628:	str	r3, [fp, #-20]	; 0xffffffec
   1862c:	b	18764 <sprintf@plt+0x7070>
   18630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18634:	and	r3, r3, #192	; 0xc0
   18638:	cmp	r3, #0
   1863c:	beq	1864c <sprintf@plt+0x6f58>
   18640:	cmp	r3, #192	; 0xc0
   18644:	beq	18724 <sprintf@plt+0x7030>
   18648:	b	1874c <sprintf@plt+0x7058>
   1864c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18650:	sub	r3, r3, #1
   18654:	mov	r0, r3
   18658:	bl	174a8 <sprintf@plt+0x5db4>
   1865c:	mov	r3, r0
   18660:	str	r3, [fp, #-32]	; 0xffffffe0
   18664:	ldr	r3, [fp, #-16]
   18668:	add	r2, r3, #1
   1866c:	str	r2, [fp, #-16]
   18670:	ldrb	r3, [r3]
   18674:	mov	r2, r3
   18678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1867c:	cmp	r2, r3
   18680:	bne	18788 <sprintf@plt+0x7094>
   18684:	b	186d4 <sprintf@plt+0x6fe0>
   18688:	ldr	r3, [fp, #-16]
   1868c:	add	r2, r3, #1
   18690:	str	r2, [fp, #-16]
   18694:	ldrb	r3, [r3]
   18698:	mov	r0, r3
   1869c:	bl	18828 <sprintf@plt+0x7134>
   186a0:	mov	r4, r0
   186a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   186a8:	add	r2, r3, #1
   186ac:	str	r2, [fp, #-20]	; 0xffffffec
   186b0:	ldrb	r3, [r3]
   186b4:	mov	r0, r3
   186b8:	bl	18828 <sprintf@plt+0x7134>
   186bc:	mov	r3, r0
   186c0:	cmp	r4, r3
   186c4:	bne	18790 <sprintf@plt+0x709c>
   186c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   186cc:	sub	r3, r3, #1
   186d0:	str	r3, [fp, #-32]	; 0xffffffe0
   186d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   186d8:	cmp	r3, #0
   186dc:	bne	18688 <sprintf@plt+0x6f94>
   186e0:	ldr	r3, [fp, #-16]
   186e4:	ldrb	r3, [r3]
   186e8:	cmp	r3, #0
   186ec:	bne	18710 <sprintf@plt+0x701c>
   186f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   186f4:	ldrb	r3, [r3]
   186f8:	cmp	r3, #0
   186fc:	bne	18710 <sprintf@plt+0x701c>
   18700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18708:	sub	r3, r2, r3
   1870c:	b	1881c <sprintf@plt+0x7128>
   18710:	ldr	r3, [fp, #-16]
   18714:	ldrb	r3, [r3]
   18718:	cmp	r3, #0
   1871c:	beq	18798 <sprintf@plt+0x70a4>
   18720:	b	18764 <sprintf@plt+0x7070>
   18724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18728:	lsl	r3, r3, #8
   1872c:	and	r3, r3, #16128	; 0x3f00
   18730:	ldr	r2, [fp, #-20]	; 0xffffffec
   18734:	ldrb	r2, [r2]
   18738:	orr	r3, r3, r2
   1873c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18740:	add	r3, r2, r3
   18744:	str	r3, [fp, #-20]	; 0xffffffec
   18748:	b	18764 <sprintf@plt+0x7070>
   1874c:	bl	116e8 <__errno_location@plt>
   18750:	mov	r2, r0
   18754:	mov	r3, #90	; 0x5a
   18758:	str	r3, [r2]
   1875c:	mvn	r3, #0
   18760:	b	1881c <sprintf@plt+0x7128>
   18764:	ldr	r3, [fp, #-20]	; 0xffffffec
   18768:	add	r2, r3, #1
   1876c:	str	r2, [fp, #-20]	; 0xffffffec
   18770:	ldrb	r3, [r3]
   18774:	str	r3, [fp, #-32]	; 0xffffffe0
   18778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1877c:	cmp	r3, #0
   18780:	bne	18630 <sprintf@plt+0x6f3c>
   18784:	b	1879c <sprintf@plt+0x70a8>
   18788:	nop			; (mov r0, r0)
   1878c:	b	1879c <sprintf@plt+0x70a8>
   18790:	nop			; (mov r0, r0)
   18794:	b	1879c <sprintf@plt+0x70a8>
   18798:	nop			; (mov r0, r0)
   1879c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187a0:	ldrb	r3, [r3]
   187a4:	add	r3, r3, #1
   187a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187ac:	add	r3, r2, r3
   187b0:	str	r3, [fp, #-24]	; 0xffffffe8
   187b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187b8:	ldrb	r3, [r3]
   187bc:	cmp	r3, #0
   187c0:	beq	187ec <sprintf@plt+0x70f8>
   187c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187c8:	ldrb	r3, [r3]
   187cc:	and	r3, r3, #192	; 0xc0
   187d0:	cmp	r3, #0
   187d4:	bne	187ec <sprintf@plt+0x70f8>
   187d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   187e0:	sub	r3, r2, r3
   187e4:	cmp	r3, #16384	; 0x4000
   187e8:	blt	1861c <sprintf@plt+0x6f28>
   187ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   187f0:	add	r3, r3, #4
   187f4:	str	r3, [fp, #-28]	; 0xffffffe4
   187f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   187fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18800:	cmp	r2, r3
   18804:	bcc	1860c <sprintf@plt+0x6f18>
   18808:	bl	116e8 <__errno_location@plt>
   1880c:	mov	r2, r0
   18810:	mov	r3, #2
   18814:	str	r3, [r2]
   18818:	mvn	r3, #0
   1881c:	mov	r0, r3
   18820:	sub	sp, fp, #8
   18824:	pop	{r4, fp, pc}
   18828:	push	{fp}		; (str fp, [sp, #-4]!)
   1882c:	add	fp, sp, #0
   18830:	sub	sp, sp, #12
   18834:	str	r0, [fp, #-8]
   18838:	ldr	r3, [fp, #-8]
   1883c:	cmp	r3, #64	; 0x40
   18840:	ble	1885c <sprintf@plt+0x7168>
   18844:	ldr	r3, [fp, #-8]
   18848:	cmp	r3, #90	; 0x5a
   1884c:	bgt	1885c <sprintf@plt+0x7168>
   18850:	ldr	r3, [fp, #-8]
   18854:	add	r3, r3, #32
   18858:	b	18860 <sprintf@plt+0x716c>
   1885c:	ldr	r3, [fp, #-8]
   18860:	mov	r0, r3
   18864:	add	sp, fp, #0
   18868:	pop	{fp}		; (ldr fp, [sp], #4)
   1886c:	bx	lr
   18870:	push	{fp, lr}
   18874:	add	fp, sp, #4
   18878:	sub	sp, sp, #144	; 0x90
   1887c:	str	r0, [fp, #-128]	; 0xffffff80
   18880:	str	r1, [fp, #-132]	; 0xffffff7c
   18884:	str	r2, [fp, #-136]	; 0xffffff78
   18888:	str	r3, [fp, #-140]	; 0xffffff74
   1888c:	ldr	r3, [fp, #-140]	; 0xffffff74
   18890:	cmp	r3, #0
   18894:	beq	188a4 <sprintf@plt+0x71b0>
   18898:	ldr	r3, [fp, #4]
   1889c:	cmp	r3, #11
   188a0:	bgt	188ac <sprintf@plt+0x71b8>
   188a4:	mvn	r3, #0
   188a8:	b	18a88 <sprintf@plt+0x7394>
   188ac:	mov	r2, #12
   188b0:	mov	r1, #0
   188b4:	ldr	r0, [fp, #-140]	; 0xffffff74
   188b8:	bl	11430 <memset@plt>
   188bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   188c0:	str	r3, [fp, #-8]
   188c4:	ldr	r3, [fp, #-8]
   188c8:	mov	r2, #0
   188cc:	strh	r2, [r3]
   188d0:	ldr	r2, [fp, #-8]
   188d4:	ldrb	r3, [r2, #2]
   188d8:	bic	r3, r3, #120	; 0x78
   188dc:	strb	r3, [r2, #2]
   188e0:	ldr	r2, [fp, #-8]
   188e4:	ldrb	r3, [r2, #2]
   188e8:	orr	r3, r3, #1
   188ec:	strb	r3, [r2, #2]
   188f0:	ldr	r2, [fp, #-8]
   188f4:	ldrb	r3, [r2, #3]
   188f8:	bic	r3, r3, #15
   188fc:	strb	r3, [r2, #3]
   18900:	ldr	r3, [fp, #-140]	; 0xffffff74
   18904:	add	r3, r3, #12
   18908:	str	r3, [fp, #-12]
   1890c:	ldr	r3, [fp, #4]
   18910:	sub	r3, r3, #12
   18914:	str	r3, [fp, #4]
   18918:	sub	r3, fp, #120	; 0x78
   1891c:	str	r3, [fp, #-16]
   18920:	ldr	r3, [fp, #-16]
   18924:	add	r2, r3, #4
   18928:	str	r2, [fp, #-16]
   1892c:	ldr	r2, [fp, #-140]	; 0xffffff74
   18930:	str	r2, [r3]
   18934:	ldr	r3, [fp, #-16]
   18938:	add	r2, r3, #4
   1893c:	str	r2, [fp, #-16]
   18940:	mov	r2, #0
   18944:	str	r2, [r3]
   18948:	sub	r3, fp, #120	; 0x78
   1894c:	add	r3, r3, #80	; 0x50
   18950:	str	r3, [fp, #-20]	; 0xffffffec
   18954:	ldr	r3, [fp, #4]
   18958:	sub	r3, r3, #4
   1895c:	str	r3, [fp, #4]
   18960:	ldr	r3, [fp, #4]
   18964:	cmp	r3, #0
   18968:	bge	18974 <sprintf@plt+0x7280>
   1896c:	mvn	r3, #0
   18970:	b	18a88 <sprintf@plt+0x7394>
   18974:	sub	r2, fp, #120	; 0x78
   18978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1897c:	str	r3, [sp]
   18980:	mov	r3, r2
   18984:	ldr	r2, [fp, #4]
   18988:	ldr	r1, [fp, #-12]
   1898c:	ldr	r0, [fp, #-128]	; 0xffffff80
   18990:	bl	16fa8 <sprintf@plt+0x58b4>
   18994:	str	r0, [fp, #-24]	; 0xffffffe8
   18998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1899c:	cmp	r3, #0
   189a0:	bge	189ac <sprintf@plt+0x72b8>
   189a4:	mvn	r3, #0
   189a8:	b	18a88 <sprintf@plt+0x7394>
   189ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189b0:	ldr	r2, [fp, #-12]
   189b4:	add	r3, r2, r3
   189b8:	str	r3, [fp, #-12]
   189bc:	ldr	r2, [fp, #4]
   189c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189c4:	sub	r3, r2, r3
   189c8:	str	r3, [fp, #4]
   189cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   189d0:	strh	r3, [fp, #-26]	; 0xffffffe6
   189d4:	ldr	r3, [fp, #-12]
   189d8:	str	r3, [fp, #-32]	; 0xffffffe0
   189dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189e0:	add	r2, r3, #1
   189e4:	str	r2, [fp, #-32]	; 0xffffffe0
   189e8:	ldrh	r2, [fp, #-26]	; 0xffffffe6
   189ec:	lsr	r2, r2, #8
   189f0:	uxth	r2, r2
   189f4:	uxtb	r2, r2
   189f8:	strb	r2, [r3]
   189fc:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   18a00:	uxtb	r2, r3
   18a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a08:	strb	r2, [r3]
   18a0c:	ldr	r3, [fp, #-12]
   18a10:	add	r3, r3, #2
   18a14:	str	r3, [fp, #-12]
   18a18:	ldr	r3, [fp, #-132]	; 0xffffff7c
   18a1c:	strh	r3, [fp, #-34]	; 0xffffffde
   18a20:	ldr	r3, [fp, #-12]
   18a24:	str	r3, [fp, #-40]	; 0xffffffd8
   18a28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a2c:	add	r2, r3, #1
   18a30:	str	r2, [fp, #-40]	; 0xffffffd8
   18a34:	ldrh	r2, [fp, #-34]	; 0xffffffde
   18a38:	lsr	r2, r2, #8
   18a3c:	uxth	r2, r2
   18a40:	uxtb	r2, r2
   18a44:	strb	r2, [r3]
   18a48:	ldrh	r3, [fp, #-34]	; 0xffffffde
   18a4c:	uxtb	r2, r3
   18a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a54:	strb	r2, [r3]
   18a58:	ldr	r3, [fp, #-12]
   18a5c:	add	r3, r3, #2
   18a60:	str	r3, [fp, #-12]
   18a64:	mov	r0, #1
   18a68:	bl	11418 <htons@plt>
   18a6c:	mov	r3, r0
   18a70:	mov	r2, r3
   18a74:	ldr	r3, [fp, #-8]
   18a78:	strh	r2, [r3, #4]
   18a7c:	ldr	r2, [fp, #-12]
   18a80:	ldr	r3, [fp, #-140]	; 0xffffff74
   18a84:	sub	r3, r2, r3
   18a88:	mov	r0, r3
   18a8c:	sub	sp, fp, #4
   18a90:	pop	{fp, pc}
   18a94:	push	{fp, lr}
   18a98:	add	fp, sp, #4
   18a9c:	sub	sp, sp, #16
   18aa0:	str	r0, [fp, #-8]
   18aa4:	str	r1, [fp, #-12]
   18aa8:	str	r2, [fp, #-16]
   18aac:	ldr	r3, [fp, #-8]
   18ab0:	cmp	r3, #0
   18ab4:	bne	18ad8 <sprintf@plt+0x73e4>
   18ab8:	ldr	r3, [pc, #260]	; 18bc4 <sprintf@plt+0x74d0>
   18abc:	add	r3, pc, r3
   18ac0:	mov	r2, #143	; 0x8f
   18ac4:	ldr	r1, [pc, #252]	; 18bc8 <sprintf@plt+0x74d4>
   18ac8:	add	r1, pc, r1
   18acc:	ldr	r0, [pc, #248]	; 18bcc <sprintf@plt+0x74d8>
   18ad0:	add	r0, pc, r0
   18ad4:	bl	11460 <__assert_fail@plt>
   18ad8:	ldr	r3, [fp, #-12]
   18adc:	cmp	r3, #0
   18ae0:	bne	18b04 <sprintf@plt+0x7410>
   18ae4:	ldr	r3, [pc, #228]	; 18bd0 <sprintf@plt+0x74dc>
   18ae8:	add	r3, pc, r3
   18aec:	mov	r2, #144	; 0x90
   18af0:	ldr	r1, [pc, #220]	; 18bd4 <sprintf@plt+0x74e0>
   18af4:	add	r1, pc, r1
   18af8:	ldr	r0, [pc, #216]	; 18bd8 <sprintf@plt+0x74e4>
   18afc:	add	r0, pc, r0
   18b00:	bl	11460 <__assert_fail@plt>
   18b04:	ldr	r3, [fp, #-16]
   18b08:	cmp	r3, #0
   18b0c:	bne	18b30 <sprintf@plt+0x743c>
   18b10:	ldr	r3, [pc, #196]	; 18bdc <sprintf@plt+0x74e8>
   18b14:	add	r3, pc, r3
   18b18:	mov	r2, #145	; 0x91
   18b1c:	ldr	r1, [pc, #188]	; 18be0 <sprintf@plt+0x74ec>
   18b20:	add	r1, pc, r1
   18b24:	ldr	r0, [pc, #184]	; 18be4 <sprintf@plt+0x74f0>
   18b28:	add	r0, pc, r0
   18b2c:	bl	11460 <__assert_fail@plt>
   18b30:	ldr	r3, [fp, #-12]
   18b34:	ldr	r2, [fp, #-8]
   18b38:	str	r2, [r3]
   18b3c:	ldr	r3, [fp, #-12]
   18b40:	mov	r2, #0
   18b44:	str	r2, [r3, #4]
   18b48:	ldr	r3, [fp, #-16]
   18b4c:	ldr	r2, [r3]
   18b50:	ldr	r3, [fp, #-12]
   18b54:	str	r2, [r3, #8]
   18b58:	ldr	r3, [fp, #-16]
   18b5c:	ldr	r3, [r3]
   18b60:	cmp	r3, #0
   18b64:	beq	18b7c <sprintf@plt+0x7488>
   18b68:	ldr	r3, [fp, #-16]
   18b6c:	ldr	r3, [r3]
   18b70:	ldr	r2, [fp, #-12]
   18b74:	str	r2, [r3, #4]
   18b78:	b	18b98 <sprintf@plt+0x74a4>
   18b7c:	ldr	r3, [fp, #-16]
   18b80:	ldr	r3, [r3, #4]
   18b84:	cmp	r3, #0
   18b88:	bne	18b98 <sprintf@plt+0x74a4>
   18b8c:	ldr	r3, [fp, #-16]
   18b90:	ldr	r2, [fp, #-12]
   18b94:	str	r2, [r3, #4]
   18b98:	ldr	r3, [fp, #-16]
   18b9c:	ldr	r2, [fp, #-12]
   18ba0:	str	r2, [r3]
   18ba4:	ldr	r3, [fp, #-16]
   18ba8:	ldr	r3, [r3, #8]
   18bac:	add	r2, r3, #1
   18bb0:	ldr	r3, [fp, #-16]
   18bb4:	str	r2, [r3, #8]
   18bb8:	nop			; (mov r0, r0)
   18bbc:	sub	sp, fp, #4
   18bc0:	pop	{fp, pc}
   18bc4:	andeq	r6, r0, r4, asr #17
   18bc8:	andeq	r6, r0, ip, ror r5
   18bcc:	muleq	r0, r0, r5
   18bd0:	muleq	r0, r8, r8
   18bd4:	andeq	r6, r0, r0, asr r5
   18bd8:	andeq	r6, r0, r4, ror r5
   18bdc:	andeq	r6, r0, ip, ror #16
   18be0:	andeq	r6, r0, r4, lsr #10
   18be4:	andeq	r6, r0, r4, asr r5
   18be8:	push	{fp, lr}
   18bec:	add	fp, sp, #4
   18bf0:	sub	sp, sp, #8
   18bf4:	str	r0, [fp, #-8]
   18bf8:	str	r1, [fp, #-12]
   18bfc:	ldr	r3, [fp, #-8]
   18c00:	cmp	r3, #0
   18c04:	bne	18c28 <sprintf@plt+0x7534>
   18c08:	ldr	r3, [pc, #240]	; 18d00 <sprintf@plt+0x760c>
   18c0c:	add	r3, pc, r3
   18c10:	mov	r2, #235	; 0xeb
   18c14:	ldr	r1, [pc, #232]	; 18d04 <sprintf@plt+0x7610>
   18c18:	add	r1, pc, r1
   18c1c:	ldr	r0, [pc, #228]	; 18d08 <sprintf@plt+0x7614>
   18c20:	add	r0, pc, r0
   18c24:	bl	11460 <__assert_fail@plt>
   18c28:	ldr	r3, [fp, #-12]
   18c2c:	cmp	r3, #0
   18c30:	bne	18c54 <sprintf@plt+0x7560>
   18c34:	ldr	r3, [pc, #208]	; 18d0c <sprintf@plt+0x7618>
   18c38:	add	r3, pc, r3
   18c3c:	mov	r2, #236	; 0xec
   18c40:	ldr	r1, [pc, #200]	; 18d10 <sprintf@plt+0x761c>
   18c44:	add	r1, pc, r1
   18c48:	ldr	r0, [pc, #196]	; 18d14 <sprintf@plt+0x7620>
   18c4c:	add	r0, pc, r0
   18c50:	bl	11460 <__assert_fail@plt>
   18c54:	ldr	r3, [fp, #-8]
   18c58:	ldr	r3, [r3, #8]
   18c5c:	cmp	r3, #0
   18c60:	beq	18c7c <sprintf@plt+0x7588>
   18c64:	ldr	r3, [fp, #-8]
   18c68:	ldr	r3, [r3, #8]
   18c6c:	ldr	r2, [fp, #-8]
   18c70:	ldr	r2, [r2, #4]
   18c74:	str	r2, [r3, #4]
   18c78:	b	18c8c <sprintf@plt+0x7598>
   18c7c:	ldr	r3, [fp, #-8]
   18c80:	ldr	r2, [r3, #4]
   18c84:	ldr	r3, [fp, #-12]
   18c88:	str	r2, [r3, #4]
   18c8c:	ldr	r3, [fp, #-8]
   18c90:	ldr	r3, [r3, #4]
   18c94:	cmp	r3, #0
   18c98:	beq	18cb4 <sprintf@plt+0x75c0>
   18c9c:	ldr	r3, [fp, #-8]
   18ca0:	ldr	r3, [r3, #4]
   18ca4:	ldr	r2, [fp, #-8]
   18ca8:	ldr	r2, [r2, #8]
   18cac:	str	r2, [r3, #8]
   18cb0:	b	18cc4 <sprintf@plt+0x75d0>
   18cb4:	ldr	r3, [fp, #-8]
   18cb8:	ldr	r2, [r3, #8]
   18cbc:	ldr	r3, [fp, #-12]
   18cc0:	str	r2, [r3]
   18cc4:	ldr	r3, [fp, #-8]
   18cc8:	mov	r2, #0
   18ccc:	str	r2, [r3, #4]
   18cd0:	ldr	r3, [fp, #-8]
   18cd4:	ldr	r2, [r3, #4]
   18cd8:	ldr	r3, [fp, #-8]
   18cdc:	str	r2, [r3, #8]
   18ce0:	ldr	r3, [fp, #-12]
   18ce4:	ldr	r3, [r3, #8]
   18ce8:	sub	r2, r3, #1
   18cec:	ldr	r3, [fp, #-12]
   18cf0:	str	r2, [r3, #8]
   18cf4:	nop			; (mov r0, r0)
   18cf8:	sub	sp, fp, #4
   18cfc:	pop	{fp, pc}
   18d00:	andeq	r6, r0, ip, lsr r7
   18d04:	andeq	r6, r0, ip, lsr #8
   18d08:	andeq	r6, r0, r0, asr r4
   18d0c:	andeq	r6, r0, r0, lsl r7
   18d10:	andeq	r6, r0, r0, lsl #8
   18d14:	andeq	r6, r0, r0, lsr r4
   18d18:	push	{fp, lr}
   18d1c:	add	fp, sp, #4
   18d20:	sub	sp, sp, #16
   18d24:	str	r0, [fp, #-16]
   18d28:	str	r1, [fp, #-20]	; 0xffffffec
   18d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d30:	cmp	r3, #0
   18d34:	bne	18d58 <sprintf@plt+0x7664>
   18d38:	ldr	r3, [pc, #316]	; 18e7c <sprintf@plt+0x7788>
   18d3c:	add	r3, pc, r3
   18d40:	ldr	r2, [pc, #312]	; 18e80 <sprintf@plt+0x778c>
   18d44:	ldr	r1, [pc, #312]	; 18e84 <sprintf@plt+0x7790>
   18d48:	add	r1, pc, r1
   18d4c:	ldr	r0, [pc, #308]	; 18e88 <sprintf@plt+0x7794>
   18d50:	add	r0, pc, r0
   18d54:	bl	11460 <__assert_fail@plt>
   18d58:	ldr	r3, [fp, #-16]
   18d5c:	cmp	r3, #0
   18d60:	bne	18d84 <sprintf@plt+0x7690>
   18d64:	ldr	r3, [pc, #288]	; 18e8c <sprintf@plt+0x7798>
   18d68:	add	r3, pc, r3
   18d6c:	ldr	r2, [pc, #284]	; 18e90 <sprintf@plt+0x779c>
   18d70:	ldr	r1, [pc, #284]	; 18e94 <sprintf@plt+0x77a0>
   18d74:	add	r1, pc, r1
   18d78:	ldr	r0, [pc, #280]	; 18e98 <sprintf@plt+0x77a4>
   18d7c:	add	r0, pc, r0
   18d80:	bl	11460 <__assert_fail@plt>
   18d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d88:	ldr	r3, [r3]
   18d8c:	str	r3, [fp, #-8]
   18d90:	b	18e60 <sprintf@plt+0x776c>
   18d94:	ldr	r3, [fp, #-8]
   18d98:	ldr	r2, [r3]
   18d9c:	ldr	r3, [fp, #-16]
   18da0:	cmp	r2, r3
   18da4:	beq	18db8 <sprintf@plt+0x76c4>
   18da8:	ldr	r3, [fp, #-8]
   18dac:	ldr	r3, [r3, #8]
   18db0:	str	r3, [fp, #-8]
   18db4:	b	18e60 <sprintf@plt+0x776c>
   18db8:	ldr	r3, [fp, #-8]
   18dbc:	ldr	r3, [r3, #8]
   18dc0:	cmp	r3, #0
   18dc4:	beq	18de0 <sprintf@plt+0x76ec>
   18dc8:	ldr	r3, [fp, #-8]
   18dcc:	ldr	r3, [r3, #8]
   18dd0:	ldr	r2, [fp, #-8]
   18dd4:	ldr	r2, [r2, #4]
   18dd8:	str	r2, [r3, #4]
   18ddc:	b	18df0 <sprintf@plt+0x76fc>
   18de0:	ldr	r3, [fp, #-8]
   18de4:	ldr	r2, [r3, #4]
   18de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dec:	str	r2, [r3, #4]
   18df0:	ldr	r3, [fp, #-8]
   18df4:	ldr	r3, [r3, #4]
   18df8:	cmp	r3, #0
   18dfc:	beq	18e18 <sprintf@plt+0x7724>
   18e00:	ldr	r3, [fp, #-8]
   18e04:	ldr	r3, [r3, #4]
   18e08:	ldr	r2, [fp, #-8]
   18e0c:	ldr	r2, [r2, #8]
   18e10:	str	r2, [r3, #8]
   18e14:	b	18e28 <sprintf@plt+0x7734>
   18e18:	ldr	r3, [fp, #-8]
   18e1c:	ldr	r2, [r3, #8]
   18e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e24:	str	r2, [r3]
   18e28:	ldr	r3, [fp, #-8]
   18e2c:	mov	r2, #0
   18e30:	str	r2, [r3, #4]
   18e34:	ldr	r3, [fp, #-8]
   18e38:	ldr	r2, [r3, #4]
   18e3c:	ldr	r3, [fp, #-8]
   18e40:	str	r2, [r3, #8]
   18e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e48:	ldr	r3, [r3, #8]
   18e4c:	sub	r2, r3, #1
   18e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e54:	str	r2, [r3, #8]
   18e58:	ldr	r3, [fp, #-8]
   18e5c:	b	18e70 <sprintf@plt+0x777c>
   18e60:	ldr	r3, [fp, #-8]
   18e64:	cmp	r3, #0
   18e68:	bne	18d94 <sprintf@plt+0x76a0>
   18e6c:	mov	r3, #0
   18e70:	mov	r0, r3
   18e74:	sub	sp, fp, #4
   18e78:	pop	{fp, pc}
   18e7c:	andeq	r6, r0, r0, lsr r6
   18e80:	andeq	r0, r0, r2, lsl #2
   18e84:	strdeq	r6, [r0], -ip
   18e88:	andeq	r6, r0, ip, lsr #6
   18e8c:	andeq	r6, r0, r4, lsl #12
   18e90:	andeq	r0, r0, r3, lsl #2
   18e94:	ldrdeq	r6, [r0], -r0
   18e98:	andeq	r6, r0, r4, ror #5
   18e9c:	push	{fp, lr}
   18ea0:	add	fp, sp, #4
   18ea4:	sub	sp, sp, #16
   18ea8:	str	r0, [fp, #-16]
   18eac:	str	r1, [fp, #-20]	; 0xffffffec
   18eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18eb4:	cmp	r3, #0
   18eb8:	bne	18edc <sprintf@plt+0x77e8>
   18ebc:	ldr	r3, [pc, #128]	; 18f44 <sprintf@plt+0x7850>
   18ec0:	add	r3, pc, r3
   18ec4:	ldr	r2, [pc, #124]	; 18f48 <sprintf@plt+0x7854>
   18ec8:	ldr	r1, [pc, #124]	; 18f4c <sprintf@plt+0x7858>
   18ecc:	add	r1, pc, r1
   18ed0:	ldr	r0, [pc, #120]	; 18f50 <sprintf@plt+0x785c>
   18ed4:	add	r0, pc, r0
   18ed8:	bl	11460 <__assert_fail@plt>
   18edc:	ldr	r3, [fp, #-16]
   18ee0:	cmp	r3, #0
   18ee4:	bne	18f08 <sprintf@plt+0x7814>
   18ee8:	ldr	r3, [pc, #100]	; 18f54 <sprintf@plt+0x7860>
   18eec:	add	r3, pc, r3
   18ef0:	mov	r2, #288	; 0x120
   18ef4:	ldr	r1, [pc, #92]	; 18f58 <sprintf@plt+0x7864>
   18ef8:	add	r1, pc, r1
   18efc:	ldr	r0, [pc, #88]	; 18f5c <sprintf@plt+0x7868>
   18f00:	add	r0, pc, r0
   18f04:	bl	11460 <__assert_fail@plt>
   18f08:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f0c:	ldr	r0, [fp, #-16]
   18f10:	bl	18d18 <sprintf@plt+0x7624>
   18f14:	str	r0, [fp, #-8]
   18f18:	ldr	r3, [fp, #-8]
   18f1c:	cmp	r3, #0
   18f20:	beq	18f34 <sprintf@plt+0x7840>
   18f24:	ldr	r0, [fp, #-8]
   18f28:	bl	11520 <rb_free_rb_dlink_node@plt>
   18f2c:	mov	r3, #1
   18f30:	b	18f38 <sprintf@plt+0x7844>
   18f34:	mov	r3, #0
   18f38:	mov	r0, r3
   18f3c:	sub	sp, fp, #4
   18f40:	pop	{fp, pc}
   18f44:	muleq	r0, r8, r4
   18f48:	andeq	r0, r0, pc, lsl r1
   18f4c:	andeq	r6, r0, r8, ror r1
   18f50:	andeq	r6, r0, r8, lsr #3
   18f54:	andeq	r6, r0, ip, ror #8
   18f58:	andeq	r6, r0, ip, asr #2
   18f5c:	andeq	r6, r0, r0, ror #2
   18f60:	push	{fp, lr}
   18f64:	add	fp, sp, #4
   18f68:	sub	sp, sp, #8
   18f6c:	str	r0, [fp, #-8]
   18f70:	str	r1, [fp, #-12]
   18f74:	ldr	r3, [fp, #-8]
   18f78:	cmp	r3, #0
   18f7c:	bne	18fa0 <sprintf@plt+0x78ac>
   18f80:	ldr	r3, [pc, #332]	; 190d4 <sprintf@plt+0x79e0>
   18f84:	add	r3, pc, r3
   18f88:	mov	r2, #324	; 0x144
   18f8c:	ldr	r1, [pc, #324]	; 190d8 <sprintf@plt+0x79e4>
   18f90:	add	r1, pc, r1
   18f94:	ldr	r0, [pc, #320]	; 190dc <sprintf@plt+0x79e8>
   18f98:	add	r0, pc, r0
   18f9c:	bl	11460 <__assert_fail@plt>
   18fa0:	ldr	r3, [fp, #-12]
   18fa4:	cmp	r3, #0
   18fa8:	bne	18fcc <sprintf@plt+0x78d8>
   18fac:	ldr	r3, [pc, #300]	; 190e0 <sprintf@plt+0x79ec>
   18fb0:	add	r3, pc, r3
   18fb4:	ldr	r2, [pc, #296]	; 190e4 <sprintf@plt+0x79f0>
   18fb8:	ldr	r1, [pc, #296]	; 190e8 <sprintf@plt+0x79f4>
   18fbc:	add	r1, pc, r1
   18fc0:	ldr	r0, [pc, #292]	; 190ec <sprintf@plt+0x79f8>
   18fc4:	add	r0, pc, r0
   18fc8:	bl	11460 <__assert_fail@plt>
   18fcc:	ldr	r3, [fp, #-8]
   18fd0:	ldr	r3, [r3]
   18fd4:	cmp	r3, #0
   18fd8:	beq	190c8 <sprintf@plt+0x79d4>
   18fdc:	ldr	r3, [fp, #-12]
   18fe0:	ldr	r3, [r3]
   18fe4:	cmp	r3, #0
   18fe8:	bne	19048 <sprintf@plt+0x7954>
   18fec:	ldr	r3, [fp, #-8]
   18ff0:	ldr	r2, [r3]
   18ff4:	ldr	r3, [fp, #-12]
   18ff8:	str	r2, [r3]
   18ffc:	ldr	r3, [fp, #-8]
   19000:	ldr	r2, [r3, #4]
   19004:	ldr	r3, [fp, #-12]
   19008:	str	r2, [r3, #4]
   1900c:	ldr	r3, [fp, #-8]
   19010:	mov	r2, #0
   19014:	str	r2, [r3, #4]
   19018:	ldr	r3, [fp, #-8]
   1901c:	ldr	r2, [r3, #4]
   19020:	ldr	r3, [fp, #-8]
   19024:	str	r2, [r3]
   19028:	ldr	r3, [fp, #-8]
   1902c:	ldr	r2, [r3, #8]
   19030:	ldr	r3, [fp, #-12]
   19034:	str	r2, [r3, #8]
   19038:	ldr	r3, [fp, #-8]
   1903c:	mov	r2, #0
   19040:	str	r2, [r3, #8]
   19044:	b	190cc <sprintf@plt+0x79d8>
   19048:	ldr	r3, [fp, #-8]
   1904c:	ldr	r3, [r3, #4]
   19050:	ldr	r2, [fp, #-12]
   19054:	ldr	r2, [r2]
   19058:	str	r2, [r3, #8]
   1905c:	ldr	r3, [fp, #-12]
   19060:	ldr	r3, [r3]
   19064:	ldr	r2, [fp, #-8]
   19068:	ldr	r2, [r2, #4]
   1906c:	str	r2, [r3, #4]
   19070:	ldr	r3, [fp, #-8]
   19074:	ldr	r2, [r3]
   19078:	ldr	r3, [fp, #-12]
   1907c:	str	r2, [r3]
   19080:	ldr	r3, [fp, #-8]
   19084:	mov	r2, #0
   19088:	str	r2, [r3, #4]
   1908c:	ldr	r3, [fp, #-8]
   19090:	ldr	r2, [r3, #4]
   19094:	ldr	r3, [fp, #-8]
   19098:	str	r2, [r3]
   1909c:	ldr	r3, [fp, #-12]
   190a0:	ldr	r2, [r3, #8]
   190a4:	ldr	r3, [fp, #-8]
   190a8:	ldr	r3, [r3, #8]
   190ac:	add	r2, r2, r3
   190b0:	ldr	r3, [fp, #-12]
   190b4:	str	r2, [r3, #8]
   190b8:	ldr	r3, [fp, #-8]
   190bc:	mov	r2, #0
   190c0:	str	r2, [r3, #8]
   190c4:	b	190cc <sprintf@plt+0x79d8>
   190c8:	nop			; (mov r0, r0)
   190cc:	sub	sp, fp, #4
   190d0:	pop	{fp, pc}
   190d4:	andeq	r6, r0, r8, lsl #8
   190d8:	strheq	r6, [r0], -r4
   190dc:	strdeq	r6, [r0], -r4
   190e0:	ldrdeq	r6, [r0], -ip
   190e4:	andeq	r0, r0, r5, asr #2
   190e8:	andeq	r6, r0, r8, lsl #1
   190ec:	ldrdeq	r6, [r0], -r8
   190f0:	push	{fp, lr}
   190f4:	add	fp, sp, #4
   190f8:	sub	sp, sp, #16
   190fc:	str	r0, [fp, #-16]
   19100:	ldr	r1, [fp, #-16]
   19104:	mov	r0, #1
   19108:	bl	113f4 <calloc@plt>
   1910c:	mov	r3, r0
   19110:	str	r3, [fp, #-8]
   19114:	ldr	r3, [fp, #-8]
   19118:	cmp	r3, #0
   1911c:	moveq	r3, #1
   19120:	movne	r3, #0
   19124:	uxtb	r3, r3
   19128:	cmp	r3, #0
   1912c:	beq	19134 <sprintf@plt+0x7a40>
   19130:	bl	115c8 <rb_outofmemory@plt>
   19134:	ldr	r3, [fp, #-8]
   19138:	mov	r0, r3
   1913c:	sub	sp, fp, #4
   19140:	pop	{fp, pc}
   19144:	push	{fp, lr}
   19148:	add	fp, sp, #4
   1914c:	sub	sp, sp, #16
   19150:	str	r0, [fp, #-16]
   19154:	ldr	r0, [fp, #-16]
   19158:	bl	114f0 <strlen@plt>
   1915c:	mov	r3, r0
   19160:	add	r3, r3, #1
   19164:	mov	r0, r3
   19168:	bl	115f8 <malloc@plt>
   1916c:	mov	r3, r0
   19170:	str	r3, [fp, #-8]
   19174:	ldr	r3, [fp, #-8]
   19178:	cmp	r3, #0
   1917c:	moveq	r3, #1
   19180:	movne	r3, #0
   19184:	uxtb	r3, r3
   19188:	cmp	r3, #0
   1918c:	beq	19194 <sprintf@plt+0x7aa0>
   19190:	bl	115c8 <rb_outofmemory@plt>
   19194:	ldr	r1, [fp, #-16]
   19198:	ldr	r0, [fp, #-8]
   1919c:	bl	11550 <strcpy@plt>
   191a0:	ldr	r3, [fp, #-8]
   191a4:	mov	r0, r3
   191a8:	sub	sp, fp, #4
   191ac:	pop	{fp, pc}
   191b0:	push	{fp, lr}
   191b4:	add	fp, sp, #4
   191b8:	sub	sp, sp, #8
   191bc:	str	r0, [fp, #-8]
   191c0:	ldr	r3, [fp, #-8]
   191c4:	cmp	r3, #0
   191c8:	movne	r3, #1
   191cc:	moveq	r3, #0
   191d0:	uxtb	r3, r3
   191d4:	cmp	r3, #0
   191d8:	beq	191e4 <sprintf@plt+0x7af0>
   191dc:	ldr	r0, [fp, #-8]
   191e0:	bl	11490 <free@plt>
   191e4:	nop			; (mov r0, r0)
   191e8:	sub	sp, fp, #4
   191ec:	pop	{fp, pc}
   191f0:	push	{fp}		; (str fp, [sp, #-4]!)
   191f4:	add	fp, sp, #0
   191f8:	sub	sp, sp, #12
   191fc:	str	r0, [fp, #-8]
   19200:	ldr	r3, [fp, #-8]
   19204:	ldr	r3, [r3, #460]	; 0x1cc
   19208:	add	r2, r3, #1
   1920c:	ldr	r3, [fp, #-8]
   19210:	str	r2, [r3, #460]	; 0x1cc
   19214:	nop			; (mov r0, r0)
   19218:	add	sp, fp, #0
   1921c:	pop	{fp}		; (ldr fp, [sp], #4)
   19220:	bx	lr
   19224:	push	{fp, lr}
   19228:	add	fp, sp, #4
   1922c:	sub	sp, sp, #8
   19230:	str	r0, [fp, #-8]
   19234:	ldr	r3, [fp, #-8]
   19238:	ldr	r3, [r3, #460]	; 0x1cc
   1923c:	sub	r2, r3, #1
   19240:	ldr	r3, [fp, #-8]
   19244:	str	r2, [r3, #460]	; 0x1cc
   19248:	ldr	r3, [fp, #-8]
   1924c:	ldr	r3, [r3, #460]	; 0x1cc
   19250:	cmp	r3, #0
   19254:	bne	19260 <sprintf@plt+0x7b6c>
   19258:	ldr	r0, [fp, #-8]
   1925c:	bl	1370c <sprintf@plt+0x2018>
   19260:	nop			; (mov r0, r0)
   19264:	sub	sp, fp, #4
   19268:	pop	{fp, pc}
   1926c:	push	{fp, lr}
   19270:	add	fp, sp, #4
   19274:	sub	sp, sp, #16
   19278:	str	r0, [fp, #-16]
   1927c:	ldr	r2, [pc, #112]	; 192f4 <sprintf@plt+0x7c00>
   19280:	add	r2, pc, r2
   19284:	ldr	r3, [pc, #108]	; 192f8 <sprintf@plt+0x7c04>
   19288:	ldr	r3, [r2, r3]
   1928c:	ldr	r3, [r3]
   19290:	str	r3, [fp, #-8]
   19294:	b	192d8 <sprintf@plt+0x7be4>
   19298:	ldr	r3, [fp, #-8]
   1929c:	ldr	r3, [r3]
   192a0:	str	r3, [fp, #-12]
   192a4:	ldr	r3, [fp, #-12]
   192a8:	ldr	r3, [r3, #16]
   192ac:	ldr	r1, [fp, #-16]
   192b0:	mov	r0, r3
   192b4:	bl	113e8 <strcasecmp@plt>
   192b8:	mov	r3, r0
   192bc:	cmp	r3, #0
   192c0:	bne	192cc <sprintf@plt+0x7bd8>
   192c4:	ldr	r3, [fp, #-12]
   192c8:	b	192e8 <sprintf@plt+0x7bf4>
   192cc:	ldr	r3, [fp, #-8]
   192d0:	ldr	r3, [r3, #8]
   192d4:	str	r3, [fp, #-8]
   192d8:	ldr	r3, [fp, #-8]
   192dc:	cmp	r3, #0
   192e0:	bne	19298 <sprintf@plt+0x7ba4>
   192e4:	mov	r3, #0
   192e8:	mov	r0, r3
   192ec:	sub	sp, fp, #4
   192f0:	pop	{fp, pc}
   192f4:	andeq	r6, r1, r8, ror sp
   192f8:			; <UNDEFINED> instruction: 0x000001b4
   192fc:	push	{fp, lr}
   19300:	add	fp, sp, #4
   19304:	sub	sp, sp, #16
   19308:	str	r0, [fp, #-16]
   1930c:	str	r1, [fp, #-20]	; 0xffffffec
   19310:	ldr	r0, [fp, #-16]
   19314:	bl	1926c <sprintf@plt+0x7b78>
   19318:	str	r0, [fp, #-8]
   1931c:	ldr	r3, [fp, #-8]
   19320:	cmp	r3, #0
   19324:	beq	19340 <sprintf@plt+0x7c4c>
   19328:	ldr	r3, [fp, #-8]
   1932c:	ldr	r2, [r3, #12]
   19330:	ldr	r3, [fp, #-20]	; 0xffffffec
   19334:	str	r2, [r3]
   19338:	mov	r3, #1
   1933c:	b	19344 <sprintf@plt+0x7c50>
   19340:	mov	r3, #0
   19344:	mov	r0, r3
   19348:	sub	sp, fp, #4
   1934c:	pop	{fp, pc}
   19350:	push	{fp}		; (str fp, [sp, #-4]!)
   19354:	add	fp, sp, #0
   19358:	sub	sp, sp, #12
   1935c:	str	r0, [fp, #-8]
   19360:	str	r1, [fp, #-12]
   19364:	ldr	r3, [fp, #-8]
   19368:	ldr	r2, [r3, #464]	; 0x1d0
   1936c:	ldr	r3, [fp, #-12]
   19370:	lsl	r3, r3, #4
   19374:	add	r3, r2, r3
   19378:	ldr	r3, [r3, #12]
   1937c:	mov	r0, r3
   19380:	add	sp, fp, #0
   19384:	pop	{fp}		; (ldr fp, [sp], #4)
   19388:	bx	lr
   1938c:	push	{fp, lr}
   19390:	add	fp, sp, #4
   19394:	sub	sp, sp, #16
   19398:	str	r0, [fp, #-16]
   1939c:	str	r1, [fp, #-20]	; 0xffffffec
   193a0:	sub	r3, fp, #8
   193a4:	mov	r1, r3
   193a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193ac:	bl	192fc <sprintf@plt+0x7c08>
   193b0:	mov	r3, r0
   193b4:	cmp	r3, #0
   193b8:	beq	193e4 <sprintf@plt+0x7cf0>
   193bc:	ldr	r3, [fp, #-8]
   193c0:	mov	r1, r3
   193c4:	ldr	r0, [fp, #-16]
   193c8:	bl	19350 <sprintf@plt+0x7c5c>
   193cc:	mov	r3, r0
   193d0:	cmp	r3, #2
   193d4:	moveq	r3, #1
   193d8:	movne	r3, #0
   193dc:	uxtb	r3, r3
   193e0:	b	193e8 <sprintf@plt+0x7cf4>
   193e4:	mov	r3, #1
   193e8:	mov	r0, r3
   193ec:	sub	sp, fp, #4
   193f0:	pop	{fp, pc}
   193f4:	push	{fp}		; (str fp, [sp, #-4]!)
   193f8:	add	fp, sp, #0
   193fc:	sub	sp, sp, #12
   19400:	str	r0, [fp, #-8]
   19404:	str	r1, [fp, #-12]
   19408:	ldr	r3, [fp, #-8]
   1940c:	ldr	r2, [r3, #464]	; 0x1d0
   19410:	ldr	r3, [fp, #-12]
   19414:	lsl	r3, r3, #4
   19418:	add	r3, r2, r3
   1941c:	ldr	r3, [r3, #8]
   19420:	mov	r0, r3
   19424:	add	sp, fp, #0
   19428:	pop	{fp}		; (ldr fp, [sp], #4)
   1942c:	bx	lr
   19430:	push	{fp}		; (str fp, [sp, #-4]!)
   19434:	add	fp, sp, #0
   19438:	sub	sp, sp, #20
   1943c:	str	r0, [fp, #-8]
   19440:	str	r1, [fp, #-12]
   19444:	str	r2, [fp, #-16]
   19448:	ldr	r3, [fp, #-8]
   1944c:	ldr	r2, [r3, #464]	; 0x1d0
   19450:	ldr	r3, [fp, #-12]
   19454:	lsl	r3, r3, #4
   19458:	add	r3, r2, r3
   1945c:	ldr	r2, [fp, #-16]
   19460:	str	r2, [r3, #8]
   19464:	nop			; (mov r0, r0)
   19468:	add	sp, fp, #0
   1946c:	pop	{fp}		; (ldr fp, [sp], #4)
   19470:	bx	lr
   19474:	push	{r4, fp, lr}
   19478:	add	fp, sp, #8
   1947c:	sub	sp, sp, #20
   19480:	str	r0, [fp, #-16]
   19484:	str	r1, [fp, #-20]	; 0xffffffec
   19488:	str	r2, [fp, #-24]	; 0xffffffe8
   1948c:	ldr	r3, [fp, #-16]
   19490:	ldr	r2, [r3, #464]	; 0x1d0
   19494:	ldr	r3, [fp, #-20]	; 0xffffffec
   19498:	lsl	r3, r3, #4
   1949c:	add	r4, r2, r3
   194a0:	bl	114fc <rb_current_time@plt>
   194a4:	mov	r2, r0
   194a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194ac:	add	r3, r2, r3
   194b0:	str	r3, [r4, #4]
   194b4:	nop			; (mov r0, r0)
   194b8:	sub	sp, fp, #8
   194bc:	pop	{r4, fp, pc}
   194c0:	push	{fp}		; (str fp, [sp, #-4]!)
   194c4:	add	fp, sp, #0
   194c8:	sub	sp, sp, #20
   194cc:	str	r0, [fp, #-8]
   194d0:	str	r1, [fp, #-12]
   194d4:	str	r2, [fp, #-16]
   194d8:	ldr	r3, [fp, #-8]
   194dc:	ldr	r2, [r3, #464]	; 0x1d0
   194e0:	ldr	r3, [fp, #-12]
   194e4:	lsl	r3, r3, #4
   194e8:	add	r3, r2, r3
   194ec:	ldr	r2, [fp, #-16]
   194f0:	str	r2, [r3, #4]
   194f4:	nop			; (mov r0, r0)
   194f8:	add	sp, fp, #0
   194fc:	pop	{fp}		; (ldr fp, [sp], #4)
   19500:	bx	lr
   19504:	push	{fp, lr}
   19508:	add	fp, sp, #4
   1950c:	sub	sp, sp, #16
   19510:	str	r0, [fp, #-16]
   19514:	ldr	r3, [fp, #-16]
   19518:	ldr	r3, [r3, #788]	; 0x314
   1951c:	sub	r2, r3, #1
   19520:	ldr	r3, [fp, #-16]
   19524:	str	r2, [r3, #788]	; 0x314
   19528:	ldr	r3, [fp, #-16]
   1952c:	ldrb	r3, [r3, #784]	; 0x310
   19530:	cmp	r3, #0
   19534:	beq	195e4 <sprintf@plt+0x7ef0>
   19538:	ldr	r3, [fp, #-16]
   1953c:	ldr	r3, [r3, #788]	; 0x314
   19540:	cmp	r3, #0
   19544:	bgt	195e4 <sprintf@plt+0x7ef0>
   19548:	ldr	r3, [fp, #-16]
   1954c:	ldr	r3, [r3, #772]	; 0x304
   19550:	str	r3, [fp, #-8]
   19554:	ldr	r3, [fp, #-8]
   19558:	cmp	r3, #0
   1955c:	beq	1956c <sprintf@plt+0x7e78>
   19560:	ldr	r3, [fp, #-8]
   19564:	ldr	r3, [r3, #8]
   19568:	b	19570 <sprintf@plt+0x7e7c>
   1956c:	mov	r3, #0
   19570:	str	r3, [fp, #-12]
   19574:	b	195bc <sprintf@plt+0x7ec8>
   19578:	ldr	r3, [fp, #-16]
   1957c:	add	r3, r3, #772	; 0x304
   19580:	mov	r1, r3
   19584:	ldr	r0, [fp, #-8]
   19588:	bl	18be8 <sprintf@plt+0x74f4>
   1958c:	ldr	r0, [fp, #-8]
   19590:	bl	191b0 <sprintf@plt+0x7abc>
   19594:	ldr	r3, [fp, #-12]
   19598:	str	r3, [fp, #-8]
   1959c:	ldr	r3, [fp, #-8]
   195a0:	cmp	r3, #0
   195a4:	beq	195b4 <sprintf@plt+0x7ec0>
   195a8:	ldr	r3, [fp, #-8]
   195ac:	ldr	r3, [r3, #8]
   195b0:	b	195b8 <sprintf@plt+0x7ec4>
   195b4:	mov	r3, #0
   195b8:	str	r3, [fp, #-12]
   195bc:	ldr	r3, [fp, #-8]
   195c0:	cmp	r3, #0
   195c4:	bne	19578 <sprintf@plt+0x7e84>
   195c8:	ldr	r3, [pc, #32]	; 195f0 <sprintf@plt+0x7efc>
   195cc:	add	r3, pc, r3
   195d0:	mov	r1, r3
   195d4:	ldr	r0, [fp, #-16]
   195d8:	bl	18e9c <sprintf@plt+0x77a8>
   195dc:	ldr	r0, [fp, #-16]
   195e0:	bl	191b0 <sprintf@plt+0x7abc>
   195e4:	nop			; (mov r0, r0)
   195e8:	sub	sp, fp, #4
   195ec:	pop	{fp, pc}
   195f0:	andeq	fp, r1, r4, lsl #21
   195f4:	push	{fp, lr}
   195f8:	add	fp, sp, #4
   195fc:	sub	sp, sp, #24
   19600:	str	r0, [fp, #-16]
   19604:	str	r1, [fp, #-20]	; 0xffffffec
   19608:	str	r3, [fp, #-28]	; 0xffffffe4
   1960c:	mov	r3, r2
   19610:	strb	r3, [fp, #-21]	; 0xffffffeb
   19614:	ldr	r3, [fp, #-16]
   19618:	cmp	r3, #0
   1961c:	beq	19638 <sprintf@plt+0x7f44>
   19620:	ldr	r3, [fp, #-20]	; 0xffffffec
   19624:	cmp	r3, #0
   19628:	beq	19638 <sprintf@plt+0x7f44>
   1962c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   19630:	cmp	r3, #0
   19634:	bne	19640 <sprintf@plt+0x7f4c>
   19638:	mov	r3, #0
   1963c:	b	196ec <sprintf@plt+0x7ff8>
   19640:	ldr	r0, [fp, #-16]
   19644:	bl	196fc <sprintf@plt+0x8008>
   19648:	str	r0, [fp, #-8]
   1964c:	ldr	r3, [fp, #-8]
   19650:	cmp	r3, #0
   19654:	bne	19684 <sprintf@plt+0x7f90>
   19658:	mov	r0, #800	; 0x320
   1965c:	bl	190f0 <sprintf@plt+0x79fc>
   19660:	str	r0, [fp, #-8]
   19664:	bl	1167c <rb_make_rb_dlink_node@plt>
   19668:	mov	r1, r0
   1966c:	ldr	r3, [pc, #132]	; 196f8 <sprintf@plt+0x8004>
   19670:	add	r3, pc, r3
   19674:	mov	r2, r3
   19678:	ldr	r0, [fp, #-8]
   1967c:	bl	18a94 <sprintf@plt+0x73a0>
   19680:	b	19690 <sprintf@plt+0x7f9c>
   19684:	ldr	r3, [fp, #-8]
   19688:	mov	r2, #0
   1968c:	strb	r2, [r3, #784]	; 0x310
   19690:	ldr	r3, [fp, #-8]
   19694:	mov	r2, #256	; 0x100
   19698:	ldr	r1, [fp, #-16]
   1969c:	mov	r0, r3
   196a0:	bl	1146c <rb_strlcpy@plt>
   196a4:	ldr	r3, [fp, #-8]
   196a8:	add	r3, r3, #256	; 0x100
   196ac:	mov	r2, #512	; 0x200
   196b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   196b4:	mov	r0, r3
   196b8:	bl	1146c <rb_strlcpy@plt>
   196bc:	ldr	r3, [fp, #-8]
   196c0:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   196c4:	strb	r2, [r3, #768]	; 0x300
   196c8:	ldr	r3, [fp, #-8]
   196cc:	add	r3, r3, #772	; 0x304
   196d0:	mov	r1, r3
   196d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   196d8:	bl	18f60 <sprintf@plt+0x786c>
   196dc:	ldr	r3, [fp, #-8]
   196e0:	mov	r2, #0
   196e4:	str	r2, [r3, #796]	; 0x31c
   196e8:	ldr	r3, [fp, #-8]
   196ec:	mov	r0, r3
   196f0:	sub	sp, fp, #4
   196f4:	pop	{fp, pc}
   196f8:	andeq	fp, r1, r0, ror #19
   196fc:	push	{fp, lr}
   19700:	add	fp, sp, #4
   19704:	sub	sp, sp, #16
   19708:	str	r0, [fp, #-16]
   1970c:	ldr	r3, [pc, #100]	; 19778 <sprintf@plt+0x8084>
   19710:	add	r3, pc, r3
   19714:	ldr	r3, [r3]
   19718:	str	r3, [fp, #-8]
   1971c:	b	1975c <sprintf@plt+0x8068>
   19720:	ldr	r3, [fp, #-8]
   19724:	ldr	r3, [r3]
   19728:	str	r3, [fp, #-12]
   1972c:	ldr	r3, [fp, #-12]
   19730:	ldr	r1, [fp, #-16]
   19734:	mov	r0, r3
   19738:	bl	113e8 <strcasecmp@plt>
   1973c:	mov	r3, r0
   19740:	cmp	r3, #0
   19744:	bne	19750 <sprintf@plt+0x805c>
   19748:	ldr	r3, [fp, #-12]
   1974c:	b	1976c <sprintf@plt+0x8078>
   19750:	ldr	r3, [fp, #-8]
   19754:	ldr	r3, [r3, #8]
   19758:	str	r3, [fp, #-8]
   1975c:	ldr	r3, [fp, #-8]
   19760:	cmp	r3, #0
   19764:	bne	19720 <sprintf@plt+0x802c>
   19768:	mov	r3, #0
   1976c:	mov	r0, r3
   19770:	sub	sp, fp, #4
   19774:	pop	{fp, pc}
   19778:	andeq	fp, r1, r0, asr #18
   1977c:	push	{r4, fp, lr}
   19780:	add	fp, sp, #8
   19784:	sub	sp, sp, #36	; 0x24
   19788:	str	r0, [fp, #-40]	; 0xffffffd8
   1978c:	str	r1, [fp, #-44]	; 0xffffffd4
   19790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19794:	ldr	r3, [r3]
   19798:	str	r3, [fp, #-24]	; 0xffffffe8
   1979c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   197a0:	ldr	r3, [r3, #780]	; 0x30c
   197a4:	cmp	r3, #0
   197a8:	bne	197b4 <sprintf@plt+0x80c0>
   197ac:	mov	r3, #1
   197b0:	b	198f4 <sprintf@plt+0x8200>
   197b4:	mov	r1, #46	; 0x2e
   197b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197bc:	bl	11448 <strrchr@plt>
   197c0:	str	r0, [fp, #-28]	; 0xffffffe4
   197c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197c8:	cmp	r3, #0
   197cc:	beq	198ac <sprintf@plt+0x81b8>
   197d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197d4:	add	r3, r3, #1
   197d8:	str	r3, [fp, #-28]	; 0xffffffe4
   197dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197e0:	ldrb	r3, [r3]
   197e4:	cmp	r3, #0
   197e8:	beq	198ac <sprintf@plt+0x81b8>
   197ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   197f0:	ldr	r3, [r3, #772]	; 0x304
   197f4:	str	r3, [fp, #-16]
   197f8:	b	19898 <sprintf@plt+0x81a4>
   197fc:	ldr	r3, [fp, #-16]
   19800:	ldr	r3, [r3]
   19804:	str	r3, [fp, #-32]	; 0xffffffe0
   19808:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1980c:	ldr	r3, [r3]
   19810:	cmp	r3, #1
   19814:	bne	19824 <sprintf@plt+0x8130>
   19818:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1981c:	str	r3, [fp, #-20]	; 0xffffffec
   19820:	b	19864 <sprintf@plt+0x8170>
   19824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19828:	ldr	r3, [r3]
   1982c:	cmp	r3, #2
   19830:	bne	19840 <sprintf@plt+0x814c>
   19834:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19838:	str	r3, [fp, #-20]	; 0xffffffec
   1983c:	b	19864 <sprintf@plt+0x8170>
   19840:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19848:	ldr	r3, [r3]
   1984c:	ldr	r1, [pc, #172]	; 19900 <sprintf@plt+0x820c>
   19850:	add	r1, pc, r1
   19854:	mov	r0, #67	; 0x43
   19858:	bl	12a60 <sprintf@plt+0x136c>
   1985c:	mov	r0, #3
   19860:	bl	116dc <exit@plt>
   19864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19868:	add	r3, r3, #4
   1986c:	mov	r1, r3
   19870:	ldr	r0, [fp, #-20]	; 0xffffffec
   19874:	bl	116d0 <strcmp@plt>
   19878:	mov	r3, r0
   1987c:	cmp	r3, #0
   19880:	bne	1988c <sprintf@plt+0x8198>
   19884:	mov	r3, #1
   19888:	b	198f4 <sprintf@plt+0x8200>
   1988c:	ldr	r3, [fp, #-16]
   19890:	ldr	r3, [r3, #8]
   19894:	str	r3, [fp, #-16]
   19898:	ldr	r3, [fp, #-16]
   1989c:	cmp	r3, #0
   198a0:	bne	197fc <sprintf@plt+0x8108>
   198a4:	mov	r3, #0
   198a8:	b	198f4 <sprintf@plt+0x8200>
   198ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   198b0:	ldr	r3, [r3, #796]	; 0x31c
   198b4:	add	r4, r3, #3600	; 0xe10
   198b8:	bl	114fc <rb_current_time@plt>
   198bc:	mov	r3, r0
   198c0:	cmp	r4, r3
   198c4:	bge	198f0 <sprintf@plt+0x81fc>
   198c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   198d0:	ldr	r1, [pc, #44]	; 19904 <sprintf@plt+0x8210>
   198d4:	add	r1, pc, r1
   198d8:	mov	r0, #87	; 0x57
   198dc:	bl	12a60 <sprintf@plt+0x136c>
   198e0:	bl	114fc <rb_current_time@plt>
   198e4:	mov	r2, r0
   198e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   198ec:	str	r2, [r3, #796]	; 0x31c
   198f0:	mov	r3, #0
   198f4:	mov	r0, r3
   198f8:	sub	sp, fp, #8
   198fc:	pop	{r4, fp, pc}
   19900:	andeq	r5, r0, r8, asr r8
   19904:	andeq	r5, r0, r4, lsl #16
   19908:	push	{r4, fp, lr}
   1990c:	add	fp, sp, #8
   19910:	sub	sp, sp, #36	; 0x24
   19914:	str	r0, [fp, #-32]	; 0xffffffe0
   19918:	str	r2, [fp, #-40]	; 0xffffffd8
   1991c:	str	r3, [fp, #-44]	; 0xffffffd4
   19920:	mov	r3, r1
   19924:	strb	r3, [fp, #-33]	; 0xffffffdf
   19928:	ldr	r4, [pc, #400]	; 19ac0 <sprintf@plt+0x83cc>
   1992c:	add	r4, pc, r4
   19930:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19934:	str	r3, [fp, #-16]
   19938:	ldr	r3, [fp, #-16]
   1993c:	ldr	r3, [r3]
   19940:	str	r3, [fp, #-20]	; 0xffffffec
   19944:	ldr	r3, [fp, #-16]
   19948:	ldr	r3, [r3, #4]
   1994c:	str	r3, [fp, #-24]	; 0xffffffe8
   19950:	ldr	r3, [pc, #364]	; 19ac4 <sprintf@plt+0x83d0>
   19954:	ldr	r3, [r4, r3]
   19958:	ldr	r3, [r3, #12]
   1995c:	mov	r1, r3
   19960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19964:	bl	193f4 <sprintf@plt+0x7d00>
   19968:	str	r0, [fp, #-28]	; 0xffffffe4
   1996c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19970:	cmp	r3, #0
   19974:	beq	19ab4 <sprintf@plt+0x83c0>
   19978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1997c:	cmp	r3, #0
   19980:	beq	199e8 <sprintf@plt+0x82f4>
   19984:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19988:	cmp	r3, #0
   1998c:	beq	199e8 <sprintf@plt+0x82f4>
   19990:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19994:	ldr	r0, [fp, #-16]
   19998:	bl	1977c <sprintf@plt+0x8088>
   1999c:	mov	r3, r0
   199a0:	cmp	r3, #0
   199a4:	beq	199e8 <sprintf@plt+0x82f4>
   199a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   199ac:	ldr	r3, [r3, #792]	; 0x318
   199b0:	add	r2, r3, #1
   199b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199b8:	str	r2, [r3, #792]	; 0x318
   199bc:	ldr	r3, [pc, #256]	; 19ac4 <sprintf@plt+0x83d0>
   199c0:	ldr	r3, [r4, r3]
   199c4:	ldr	r1, [r3, #12]
   199c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   199cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   199d0:	add	r3, r3, #256	; 0x100
   199d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d8:	bl	1392c <sprintf@plt+0x2238>
   199dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199e0:	bl	1a21c <sprintf@plt+0x8b28>
   199e4:	b	19ab8 <sprintf@plt+0x83c4>
   199e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   199ec:	bl	19504 <sprintf@plt+0x7e10>
   199f0:	ldr	r3, [fp, #-16]
   199f4:	ldr	r3, [r3, #8]
   199f8:	mov	r0, r3
   199fc:	bl	121cc <sprintf@plt+0xad8>
   19a00:	ldr	r3, [fp, #-16]
   19a04:	add	r2, r3, #12
   19a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19a0c:	add	r3, r3, #4
   19a10:	mov	r1, r3
   19a14:	mov	r0, r2
   19a18:	bl	18be8 <sprintf@plt+0x74f4>
   19a1c:	ldr	r0, [fp, #-16]
   19a20:	bl	191b0 <sprintf@plt+0x7abc>
   19a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19a28:	ldr	r3, [r3, #12]
   19a2c:	cmp	r3, #0
   19a30:	bne	19ab8 <sprintf@plt+0x83c4>
   19a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a38:	ldr	r3, [r3]
   19a3c:	ldr	r2, [pc, #132]	; 19ac8 <sprintf@plt+0x83d4>
   19a40:	add	r2, pc, r2
   19a44:	mov	r1, r2
   19a48:	mov	r0, r3
   19a4c:	bl	129e8 <sprintf@plt+0x12f4>
   19a50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19a54:	bl	191b0 <sprintf@plt+0x7abc>
   19a58:	ldr	r3, [pc, #100]	; 19ac4 <sprintf@plt+0x83d0>
   19a5c:	ldr	r3, [r4, r3]
   19a60:	ldr	r3, [r3, #12]
   19a64:	mov	r2, #0
   19a68:	mov	r1, r3
   19a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a70:	bl	19430 <sprintf@plt+0x7d3c>
   19a74:	ldr	r3, [pc, #72]	; 19ac4 <sprintf@plt+0x83d0>
   19a78:	ldr	r3, [r4, r3]
   19a7c:	ldr	r3, [r3, #12]
   19a80:	mov	r2, #0
   19a84:	mov	r1, r3
   19a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a8c:	bl	194c0 <sprintf@plt+0x7dcc>
   19a90:	ldr	r3, [pc, #44]	; 19ac4 <sprintf@plt+0x83d0>
   19a94:	ldr	r3, [r4, r3]
   19a98:	ldr	r3, [r3, #12]
   19a9c:	mov	r1, r3
   19aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa4:	bl	13844 <sprintf@plt+0x2150>
   19aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aac:	bl	19224 <sprintf@plt+0x7b30>
   19ab0:	b	19ab8 <sprintf@plt+0x83c4>
   19ab4:	nop			; (mov r0, r0)
   19ab8:	sub	sp, fp, #8
   19abc:	pop	{r4, fp, pc}
   19ac0:	andeq	r6, r1, ip, asr #13
   19ac4:	muleq	r0, ip, r1
   19ac8:	ldrdeq	r5, [r0], -r8
   19acc:	push	{r4, fp, lr}
   19ad0:	add	fp, sp, #8
   19ad4:	sub	sp, sp, #284	; 0x11c
   19ad8:	str	r0, [fp, #-288]	; 0xfffffee0
   19adc:	str	r1, [fp, #-292]	; 0xfffffedc
   19ae0:	ldr	r4, [pc, #272]	; 19bf8 <sprintf@plt+0x8504>
   19ae4:	add	r4, pc, r4
   19ae8:	mov	r0, #24
   19aec:	bl	190f0 <sprintf@plt+0x79fc>
   19af0:	str	r0, [fp, #-16]
   19af4:	ldr	r3, [pc, #256]	; 19bfc <sprintf@plt+0x8508>
   19af8:	ldr	r3, [r4, r3]
   19afc:	ldr	r3, [r3, #12]
   19b00:	mov	r1, r3
   19b04:	ldr	r0, [fp, #-292]	; 0xfffffedc
   19b08:	bl	193f4 <sprintf@plt+0x7d00>
   19b0c:	str	r0, [fp, #-20]	; 0xffffffec
   19b10:	ldr	r3, [fp, #-16]
   19b14:	ldr	r2, [fp, #-288]	; 0xfffffee0
   19b18:	str	r2, [r3]
   19b1c:	ldr	r3, [fp, #-16]
   19b20:	ldr	r2, [fp, #-292]	; 0xfffffedc
   19b24:	str	r2, [r3, #4]
   19b28:	ldr	r3, [fp, #-292]	; 0xfffffedc
   19b2c:	add	r3, r3, #248	; 0xf8
   19b30:	ldrh	r3, [r3]
   19b34:	str	r3, [fp, #-24]	; 0xffffffe8
   19b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b3c:	cmp	r3, #2
   19b40:	bne	19b58 <sprintf@plt+0x8464>
   19b44:	ldr	r3, [fp, #-288]	; 0xfffffee0
   19b48:	ldrb	r3, [r3, #768]	; 0x300
   19b4c:	and	r3, r3, #1
   19b50:	cmp	r3, #0
   19b54:	beq	19b78 <sprintf@plt+0x8484>
   19b58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b5c:	cmp	r3, #10
   19b60:	bne	19b84 <sprintf@plt+0x8490>
   19b64:	ldr	r3, [fp, #-288]	; 0xfffffee0
   19b68:	ldrb	r3, [r3, #768]	; 0x300
   19b6c:	and	r3, r3, #2
   19b70:	cmp	r3, #0
   19b74:	bne	19b84 <sprintf@plt+0x8490>
   19b78:	ldr	r0, [fp, #-16]
   19b7c:	bl	191b0 <sprintf@plt+0x7abc>
   19b80:	b	19bf0 <sprintf@plt+0x84fc>
   19b84:	ldr	r3, [fp, #-292]	; 0xfffffedc
   19b88:	add	r2, r3, #248	; 0xf8
   19b8c:	ldr	r3, [fp, #-288]	; 0xfffffee0
   19b90:	sub	r0, fp, #280	; 0x118
   19b94:	mov	r1, #256	; 0x100
   19b98:	bl	151a4 <sprintf@plt+0x3ab0>
   19b9c:	sub	r0, fp, #280	; 0x118
   19ba0:	ldr	r3, [fp, #-16]
   19ba4:	ldr	r2, [pc, #84]	; 19c00 <sprintf@plt+0x850c>
   19ba8:	add	r2, pc, r2
   19bac:	mov	r1, #2
   19bb0:	bl	11f74 <sprintf@plt+0x880>
   19bb4:	mov	r2, r0
   19bb8:	ldr	r3, [fp, #-16]
   19bbc:	str	r2, [r3, #8]
   19bc0:	ldr	r3, [fp, #-16]
   19bc4:	add	r1, r3, #12
   19bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bcc:	add	r3, r3, #4
   19bd0:	mov	r2, r3
   19bd4:	ldr	r0, [fp, #-16]
   19bd8:	bl	18a94 <sprintf@plt+0x73a0>
   19bdc:	ldr	r3, [fp, #-288]	; 0xfffffee0
   19be0:	ldr	r3, [r3, #788]	; 0x314
   19be4:	add	r2, r3, #1
   19be8:	ldr	r3, [fp, #-288]	; 0xfffffee0
   19bec:	str	r2, [r3, #788]	; 0x314
   19bf0:	sub	sp, fp, #8
   19bf4:	pop	{r4, fp, pc}
   19bf8:	andeq	r6, r1, r4, lsl r5
   19bfc:	muleq	r0, ip, r1
   19c00:			; <UNDEFINED> instruction: 0xfffffd58
   19c04:	push	{r4, fp, lr}
   19c08:	add	fp, sp, #8
   19c0c:	sub	sp, sp, #28
   19c10:	str	r0, [fp, #-32]	; 0xffffffe0
   19c14:	ldr	r4, [pc, #336]	; 19d6c <sprintf@plt+0x8678>
   19c18:	add	r4, pc, r4
   19c1c:	ldr	r3, [pc, #332]	; 19d70 <sprintf@plt+0x867c>
   19c20:	ldr	r3, [r4, r3]
   19c24:	ldr	r3, [r3, #12]
   19c28:	mov	r1, r3
   19c2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c30:	bl	193f4 <sprintf@plt+0x7d00>
   19c34:	str	r0, [fp, #-24]	; 0xffffffe8
   19c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c3c:	add	r3, r3, #248	; 0xf8
   19c40:	ldrh	r3, [r3]
   19c44:	cmp	r3, #2
   19c48:	bne	19c58 <sprintf@plt+0x8564>
   19c4c:	mov	r3, #1
   19c50:	str	r3, [fp, #-20]	; 0xffffffec
   19c54:	b	19c80 <sprintf@plt+0x858c>
   19c58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c5c:	add	r3, r3, #248	; 0xf8
   19c60:	ldrh	r3, [r3]
   19c64:	cmp	r3, #10
   19c68:	bne	19c78 <sprintf@plt+0x8584>
   19c6c:	mov	r3, #2
   19c70:	str	r3, [fp, #-20]	; 0xffffffec
   19c74:	b	19c80 <sprintf@plt+0x858c>
   19c78:	mov	r3, #0
   19c7c:	b	19d60 <sprintf@plt+0x866c>
   19c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c84:	mov	r2, #1
   19c88:	strb	r2, [r3]
   19c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c90:	ldr	r3, [r3]
   19c94:	ldr	r2, [pc, #216]	; 19d74 <sprintf@plt+0x8680>
   19c98:	add	r2, pc, r2
   19c9c:	mov	r1, r2
   19ca0:	mov	r0, r3
   19ca4:	bl	129e8 <sprintf@plt+0x12f4>
   19ca8:	ldr	r3, [pc, #200]	; 19d78 <sprintf@plt+0x8684>
   19cac:	add	r3, pc, r3
   19cb0:	ldr	r3, [r3]
   19cb4:	str	r3, [fp, #-16]
   19cb8:	b	19d14 <sprintf@plt+0x8620>
   19cbc:	ldr	r3, [fp, #-16]
   19cc0:	ldr	r3, [r3]
   19cc4:	str	r3, [fp, #-28]	; 0xffffffe4
   19cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ccc:	ldrb	r3, [r3, #784]	; 0x310
   19cd0:	eor	r3, r3, #1
   19cd4:	uxtb	r3, r3
   19cd8:	cmp	r3, #0
   19cdc:	beq	19d08 <sprintf@plt+0x8614>
   19ce0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ce4:	ldrb	r3, [r3, #768]	; 0x300
   19ce8:	mov	r2, r3
   19cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   19cf0:	and	r3, r3, r2
   19cf4:	cmp	r3, #0
   19cf8:	beq	19d08 <sprintf@plt+0x8614>
   19cfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19d00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d04:	bl	19acc <sprintf@plt+0x83d8>
   19d08:	ldr	r3, [fp, #-16]
   19d0c:	ldr	r3, [r3, #8]
   19d10:	str	r3, [fp, #-16]
   19d14:	ldr	r3, [fp, #-16]
   19d18:	cmp	r3, #0
   19d1c:	bne	19cbc <sprintf@plt+0x85c8>
   19d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d24:	ldr	r3, [r3, #12]
   19d28:	cmp	r3, #0
   19d2c:	bne	19d38 <sprintf@plt+0x8644>
   19d30:	mov	r3, #0
   19d34:	b	19d60 <sprintf@plt+0x866c>
   19d38:	ldr	r3, [pc, #48]	; 19d70 <sprintf@plt+0x867c>
   19d3c:	ldr	r3, [r4, r3]
   19d40:	ldr	r1, [r3, #12]
   19d44:	ldr	r3, [pc, #48]	; 19d7c <sprintf@plt+0x8688>
   19d48:	add	r3, pc, r3
   19d4c:	ldr	r3, [r3]
   19d50:	mov	r2, r3
   19d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d58:	bl	19474 <sprintf@plt+0x7d80>
   19d5c:	mov	r3, #1
   19d60:	mov	r0, r3
   19d64:	sub	sp, fp, #8
   19d68:	pop	{r4, fp, pc}
   19d6c:	andeq	r6, r1, r0, ror #7
   19d70:	muleq	r0, ip, r1
   19d74:	andeq	r5, r0, r8, lsr #9
   19d78:	andeq	fp, r1, r4, lsr #7
   19d7c:	andeq	r7, r1, r0, ror r0
   19d80:	push	{fp, lr}
   19d84:	add	fp, sp, #4
   19d88:	sub	sp, sp, #8
   19d8c:	str	r0, [fp, #-8]
   19d90:	ldr	r3, [fp, #-8]
   19d94:	ldr	r3, [r3, #788]	; 0x314
   19d98:	cmp	r3, #0
   19d9c:	ble	19db0 <sprintf@plt+0x86bc>
   19da0:	ldr	r3, [fp, #-8]
   19da4:	mov	r2, #1
   19da8:	strb	r2, [r3, #784]	; 0x310
   19dac:	b	19dcc <sprintf@plt+0x86d8>
   19db0:	ldr	r3, [pc, #32]	; 19dd8 <sprintf@plt+0x86e4>
   19db4:	add	r3, pc, r3
   19db8:	mov	r1, r3
   19dbc:	ldr	r0, [fp, #-8]
   19dc0:	bl	18e9c <sprintf@plt+0x77a8>
   19dc4:	ldr	r0, [fp, #-8]
   19dc8:	bl	191b0 <sprintf@plt+0x7abc>
   19dcc:	nop			; (mov r0, r0)
   19dd0:	sub	sp, fp, #4
   19dd4:	pop	{fp, pc}
   19dd8:	muleq	r1, ip, r2
   19ddc:	push	{fp, lr}
   19de0:	add	fp, sp, #4
   19de4:	sub	sp, sp, #8
   19de8:	ldr	r3, [pc, #124]	; 19e6c <sprintf@plt+0x8778>
   19dec:	add	r3, pc, r3
   19df0:	ldr	r3, [r3]
   19df4:	str	r3, [fp, #-8]
   19df8:	ldr	r3, [fp, #-8]
   19dfc:	cmp	r3, #0
   19e00:	beq	19e10 <sprintf@plt+0x871c>
   19e04:	ldr	r3, [fp, #-8]
   19e08:	ldr	r3, [r3, #8]
   19e0c:	b	19e14 <sprintf@plt+0x8720>
   19e10:	mov	r3, #0
   19e14:	str	r3, [fp, #-12]
   19e18:	b	19e54 <sprintf@plt+0x8760>
   19e1c:	ldr	r3, [fp, #-8]
   19e20:	ldr	r3, [r3]
   19e24:	mov	r0, r3
   19e28:	bl	19d80 <sprintf@plt+0x868c>
   19e2c:	ldr	r3, [fp, #-12]
   19e30:	str	r3, [fp, #-8]
   19e34:	ldr	r3, [fp, #-8]
   19e38:	cmp	r3, #0
   19e3c:	beq	19e4c <sprintf@plt+0x8758>
   19e40:	ldr	r3, [fp, #-8]
   19e44:	ldr	r3, [r3, #8]
   19e48:	b	19e50 <sprintf@plt+0x875c>
   19e4c:	mov	r3, #0
   19e50:	str	r3, [fp, #-12]
   19e54:	ldr	r3, [fp, #-8]
   19e58:	cmp	r3, #0
   19e5c:	bne	19e1c <sprintf@plt+0x8728>
   19e60:	nop			; (mov r0, r0)
   19e64:	sub	sp, fp, #4
   19e68:	pop	{fp, pc}
   19e6c:	andeq	fp, r1, r4, ror #4
   19e70:	push	{r4, fp, lr}
   19e74:	add	fp, sp, #8
   19e78:	sub	sp, sp, #12
   19e7c:	str	r0, [fp, #-16]
   19e80:	ldr	r4, [pc, #224]	; 19f68 <sprintf@plt+0x8874>
   19e84:	add	r4, pc, r4
   19e88:	ldr	r3, [pc, #220]	; 19f6c <sprintf@plt+0x8878>
   19e8c:	add	r3, pc, r3
   19e90:	ldr	r3, [r3, #8]
   19e94:	cmp	r3, #0
   19e98:	bne	19ebc <sprintf@plt+0x87c8>
   19e9c:	ldr	r3, [pc, #204]	; 19f70 <sprintf@plt+0x887c>
   19ea0:	ldr	r3, [r4, r3]
   19ea4:	ldr	r3, [r3, #12]
   19ea8:	mov	r1, r3
   19eac:	ldr	r0, [fp, #-16]
   19eb0:	bl	13844 <sprintf@plt+0x2150>
   19eb4:	mov	r3, #1
   19eb8:	b	19f5c <sprintf@plt+0x8868>
   19ebc:	ldr	r0, [fp, #-16]
   19ec0:	bl	191f0 <sprintf@plt+0x7afc>
   19ec4:	ldr	r3, [pc, #164]	; 19f70 <sprintf@plt+0x887c>
   19ec8:	ldr	r3, [r4, r3]
   19ecc:	ldr	r4, [r3, #12]
   19ed0:	mov	r0, #16
   19ed4:	bl	190f0 <sprintf@plt+0x79fc>
   19ed8:	mov	r3, r0
   19edc:	mov	r2, r3
   19ee0:	mov	r1, r4
   19ee4:	ldr	r0, [fp, #-16]
   19ee8:	bl	19430 <sprintf@plt+0x7d3c>
   19eec:	ldr	r3, [pc, #128]	; 19f74 <sprintf@plt+0x8880>
   19ef0:	add	r3, pc, r3
   19ef4:	mov	r1, r3
   19ef8:	ldr	r0, [fp, #-16]
   19efc:	bl	1938c <sprintf@plt+0x7c98>
   19f00:	mov	r3, r0
   19f04:	cmp	r3, #0
   19f08:	beq	19f58 <sprintf@plt+0x8864>
   19f0c:	ldr	r3, [pc, #100]	; 19f78 <sprintf@plt+0x8884>
   19f10:	add	r3, pc, r3
   19f14:	mov	r1, r3
   19f18:	ldr	r0, [fp, #-16]
   19f1c:	bl	1938c <sprintf@plt+0x7c98>
   19f20:	mov	r3, r0
   19f24:	cmp	r3, #0
   19f28:	beq	19f58 <sprintf@plt+0x8864>
   19f2c:	ldr	r0, [fp, #-16]
   19f30:	bl	19c04 <sprintf@plt+0x8510>
   19f34:	mov	r3, r0
   19f38:	eor	r3, r3, #1
   19f3c:	uxtb	r3, r3
   19f40:	cmp	r3, #0
   19f44:	beq	19f58 <sprintf@plt+0x8864>
   19f48:	ldr	r0, [fp, #-16]
   19f4c:	bl	1a250 <sprintf@plt+0x8b5c>
   19f50:	mov	r3, #1
   19f54:	b	19f5c <sprintf@plt+0x8868>
   19f58:	mov	r3, #1
   19f5c:	mov	r0, r3
   19f60:	sub	sp, fp, #8
   19f64:	pop	{r4, fp, pc}
   19f68:	andeq	r6, r1, r4, ror r1
   19f6c:	andeq	fp, r1, r4, asr #3
   19f70:	muleq	r0, ip, r1
   19f74:	andeq	r5, r0, r4, ror r2
   19f78:	andeq	r5, r0, ip, asr r2
   19f7c:	push	{fp, lr}
   19f80:	add	fp, sp, #4
   19f84:	sub	sp, sp, #16
   19f88:	str	r0, [fp, #-16]
   19f8c:	str	r1, [fp, #-20]	; 0xffffffec
   19f90:	ldr	r2, [pc, #172]	; 1a044 <sprintf@plt+0x8950>
   19f94:	add	r2, pc, r2
   19f98:	ldr	r3, [pc, #168]	; 1a048 <sprintf@plt+0x8954>
   19f9c:	ldr	r3, [r2, r3]
   19fa0:	ldr	r3, [r3, #12]
   19fa4:	mov	r1, r3
   19fa8:	ldr	r0, [fp, #-16]
   19fac:	bl	193f4 <sprintf@plt+0x7d00>
   19fb0:	str	r0, [fp, #-8]
   19fb4:	ldr	r3, [fp, #-8]
   19fb8:	cmp	r3, #0
   19fbc:	beq	1a038 <sprintf@plt+0x8944>
   19fc0:	ldr	r3, [fp, #-8]
   19fc4:	ldrb	r3, [r3]
   19fc8:	cmp	r3, #0
   19fcc:	bne	1a038 <sprintf@plt+0x8944>
   19fd0:	ldr	r3, [pc, #116]	; 1a04c <sprintf@plt+0x8958>
   19fd4:	add	r3, pc, r3
   19fd8:	mov	r1, r3
   19fdc:	ldr	r0, [fp, #-16]
   19fe0:	bl	1938c <sprintf@plt+0x7c98>
   19fe4:	mov	r3, r0
   19fe8:	cmp	r3, #0
   19fec:	beq	1a03c <sprintf@plt+0x8948>
   19ff0:	ldr	r3, [pc, #88]	; 1a050 <sprintf@plt+0x895c>
   19ff4:	add	r3, pc, r3
   19ff8:	mov	r1, r3
   19ffc:	ldr	r0, [fp, #-16]
   1a000:	bl	1938c <sprintf@plt+0x7c98>
   1a004:	mov	r3, r0
   1a008:	cmp	r3, #0
   1a00c:	beq	1a03c <sprintf@plt+0x8948>
   1a010:	ldr	r0, [fp, #-16]
   1a014:	bl	19c04 <sprintf@plt+0x8510>
   1a018:	mov	r3, r0
   1a01c:	eor	r3, r3, #1
   1a020:	uxtb	r3, r3
   1a024:	cmp	r3, #0
   1a028:	beq	1a03c <sprintf@plt+0x8948>
   1a02c:	ldr	r0, [fp, #-16]
   1a030:	bl	1a250 <sprintf@plt+0x8b5c>
   1a034:	b	1a03c <sprintf@plt+0x8948>
   1a038:	nop			; (mov r0, r0)
   1a03c:	sub	sp, fp, #4
   1a040:	pop	{fp, pc}
   1a044:	andeq	r6, r1, r4, rrx
   1a048:	muleq	r0, ip, r1
   1a04c:	muleq	r0, r0, r1
   1a050:	andeq	r5, r0, r8, ror r1
   1a054:	push	{r4, fp, lr}
   1a058:	add	fp, sp, #8
   1a05c:	sub	sp, sp, #28
   1a060:	str	r0, [fp, #-32]	; 0xffffffe0
   1a064:	str	r1, [fp, #-36]	; 0xffffffdc
   1a068:	ldr	r4, [pc, #368]	; 1a1e0 <sprintf@plt+0x8aec>
   1a06c:	add	r4, pc, r4
   1a070:	ldr	r3, [pc, #364]	; 1a1e4 <sprintf@plt+0x8af0>
   1a074:	ldr	r3, [r4, r3]
   1a078:	ldr	r3, [r3, #12]
   1a07c:	mov	r1, r3
   1a080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a084:	bl	193f4 <sprintf@plt+0x7d00>
   1a088:	str	r0, [fp, #-24]	; 0xffffffe8
   1a08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a090:	cmp	r3, #0
   1a094:	beq	1a1d4 <sprintf@plt+0x8ae0>
   1a098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a09c:	ldr	r3, [r3, #12]
   1a0a0:	cmp	r3, #0
   1a0a4:	beq	1a170 <sprintf@plt+0x8a7c>
   1a0a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a0ac:	ldr	r3, [r3]
   1a0b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a0b4:	mov	r0, r3
   1a0b8:	bl	129e8 <sprintf@plt+0x12f4>
   1a0bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0c0:	ldr	r3, [r3, #4]
   1a0c4:	str	r3, [fp, #-16]
   1a0c8:	ldr	r3, [fp, #-16]
   1a0cc:	cmp	r3, #0
   1a0d0:	beq	1a0e0 <sprintf@plt+0x89ec>
   1a0d4:	ldr	r3, [fp, #-16]
   1a0d8:	ldr	r3, [r3, #8]
   1a0dc:	b	1a0e4 <sprintf@plt+0x89f0>
   1a0e0:	mov	r3, #0
   1a0e4:	str	r3, [fp, #-20]	; 0xffffffec
   1a0e8:	b	1a164 <sprintf@plt+0x8a70>
   1a0ec:	ldr	r3, [fp, #-16]
   1a0f0:	ldr	r3, [r3]
   1a0f4:	str	r3, [fp, #-28]	; 0xffffffe4
   1a0f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a0fc:	ldr	r3, [r3, #8]
   1a100:	mov	r0, r3
   1a104:	bl	121cc <sprintf@plt+0xad8>
   1a108:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a10c:	ldr	r3, [r3]
   1a110:	mov	r0, r3
   1a114:	bl	19504 <sprintf@plt+0x7e10>
   1a118:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a11c:	add	r2, r3, #12
   1a120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a124:	add	r3, r3, #4
   1a128:	mov	r1, r3
   1a12c:	mov	r0, r2
   1a130:	bl	18be8 <sprintf@plt+0x74f4>
   1a134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a138:	bl	191b0 <sprintf@plt+0x7abc>
   1a13c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a140:	str	r3, [fp, #-16]
   1a144:	ldr	r3, [fp, #-16]
   1a148:	cmp	r3, #0
   1a14c:	beq	1a15c <sprintf@plt+0x8a68>
   1a150:	ldr	r3, [fp, #-16]
   1a154:	ldr	r3, [r3, #8]
   1a158:	b	1a160 <sprintf@plt+0x8a6c>
   1a15c:	mov	r3, #0
   1a160:	str	r3, [fp, #-20]	; 0xffffffec
   1a164:	ldr	r3, [fp, #-16]
   1a168:	cmp	r3, #0
   1a16c:	bne	1a0ec <sprintf@plt+0x89f8>
   1a170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a174:	bl	191b0 <sprintf@plt+0x7abc>
   1a178:	ldr	r3, [pc, #100]	; 1a1e4 <sprintf@plt+0x8af0>
   1a17c:	ldr	r3, [r4, r3]
   1a180:	ldr	r3, [r3, #12]
   1a184:	mov	r2, #0
   1a188:	mov	r1, r3
   1a18c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a190:	bl	19430 <sprintf@plt+0x7d3c>
   1a194:	ldr	r3, [pc, #72]	; 1a1e4 <sprintf@plt+0x8af0>
   1a198:	ldr	r3, [r4, r3]
   1a19c:	ldr	r3, [r3, #12]
   1a1a0:	mov	r2, #0
   1a1a4:	mov	r1, r3
   1a1a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1ac:	bl	194c0 <sprintf@plt+0x7dcc>
   1a1b0:	ldr	r3, [pc, #44]	; 1a1e4 <sprintf@plt+0x8af0>
   1a1b4:	ldr	r3, [r4, r3]
   1a1b8:	ldr	r3, [r3, #12]
   1a1bc:	mov	r1, r3
   1a1c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1c4:	bl	13844 <sprintf@plt+0x2150>
   1a1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1cc:	bl	19224 <sprintf@plt+0x7b30>
   1a1d0:	b	1a1d8 <sprintf@plt+0x8ae4>
   1a1d4:	nop			; (mov r0, r0)
   1a1d8:	sub	sp, fp, #8
   1a1dc:	pop	{r4, fp, pc}
   1a1e0:	andeq	r5, r1, ip, lsl #31
   1a1e4:	muleq	r0, ip, r1
   1a1e8:	push	{fp, lr}
   1a1ec:	add	fp, sp, #4
   1a1f0:	sub	sp, sp, #8
   1a1f4:	str	r0, [fp, #-8]
   1a1f8:	ldr	r3, [pc, #24]	; 1a218 <sprintf@plt+0x8b24>
   1a1fc:	add	r3, pc, r3
   1a200:	mov	r1, r3
   1a204:	ldr	r0, [fp, #-8]
   1a208:	bl	1a054 <sprintf@plt+0x8960>
   1a20c:	nop			; (mov r0, r0)
   1a210:	sub	sp, fp, #4
   1a214:	pop	{fp, pc}
   1a218:	andeq	r4, r0, r8, ror pc
   1a21c:	push	{fp, lr}
   1a220:	add	fp, sp, #4
   1a224:	sub	sp, sp, #8
   1a228:	str	r0, [fp, #-8]
   1a22c:	ldr	r3, [pc, #24]	; 1a24c <sprintf@plt+0x8b58>
   1a230:	add	r3, pc, r3
   1a234:	mov	r1, r3
   1a238:	ldr	r0, [fp, #-8]
   1a23c:	bl	1a054 <sprintf@plt+0x8960>
   1a240:	nop			; (mov r0, r0)
   1a244:	sub	sp, fp, #4
   1a248:	pop	{fp, pc}
   1a24c:	andeq	r4, r0, r0, ror #30
   1a250:	push	{fp, lr}
   1a254:	add	fp, sp, #4
   1a258:	sub	sp, sp, #8
   1a25c:	str	r0, [fp, #-8]
   1a260:	ldr	r3, [pc, #24]	; 1a280 <sprintf@plt+0x8b8c>
   1a264:	add	r3, pc, r3
   1a268:	mov	r1, r3
   1a26c:	ldr	r0, [fp, #-8]
   1a270:	bl	1a054 <sprintf@plt+0x8960>
   1a274:	nop			; (mov r0, r0)
   1a278:	sub	sp, fp, #4
   1a27c:	pop	{fp, pc}
   1a280:	andeq	r4, r0, r8, asr #30
   1a284:	push	{r4, fp, lr}
   1a288:	add	fp, sp, #8
   1a28c:	sub	sp, sp, #20
   1a290:	ldr	r4, [pc, #128]	; 1a318 <sprintf@plt+0x8c24>
   1a294:	add	r4, pc, r4
   1a298:	ldr	r3, [pc, #124]	; 1a31c <sprintf@plt+0x8c28>
   1a29c:	ldr	r3, [r4, r3]
   1a2a0:	ldr	r3, [r3]
   1a2a4:	sub	r2, fp, #24
   1a2a8:	mov	r1, r2
   1a2ac:	mov	r0, r3
   1a2b0:	bl	114cc <rb_dictionary_foreach_start@plt>
   1a2b4:	b	1a2dc <sprintf@plt+0x8be8>
   1a2b8:	ldr	r0, [fp, #-16]
   1a2bc:	bl	1a21c <sprintf@plt+0x8b28>
   1a2c0:	ldr	r3, [pc, #84]	; 1a31c <sprintf@plt+0x8c28>
   1a2c4:	ldr	r3, [r4, r3]
   1a2c8:	ldr	r3, [r3]
   1a2cc:	sub	r2, fp, #24
   1a2d0:	mov	r1, r2
   1a2d4:	mov	r0, r3
   1a2d8:	bl	11484 <rb_dictionary_foreach_next@plt>
   1a2dc:	ldr	r3, [pc, #56]	; 1a31c <sprintf@plt+0x8c28>
   1a2e0:	ldr	r3, [r4, r3]
   1a2e4:	ldr	r3, [r3]
   1a2e8:	sub	r2, fp, #24
   1a2ec:	mov	r1, r2
   1a2f0:	mov	r0, r3
   1a2f4:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1a2f8:	str	r0, [fp, #-16]
   1a2fc:	ldr	r3, [fp, #-16]
   1a300:	cmp	r3, #0
   1a304:	bne	1a2b8 <sprintf@plt+0x8bc4>
   1a308:	bl	19ddc <sprintf@plt+0x86e8>
   1a30c:	nop			; (mov r0, r0)
   1a310:	sub	sp, fp, #8
   1a314:	pop	{r4, fp, pc}
   1a318:	andeq	r5, r1, r4, ror #26
   1a31c:	andeq	r0, r0, ip, ror #2
   1a320:	push	{fp, lr}
   1a324:	add	fp, sp, #4
   1a328:	sub	sp, sp, #64	; 0x40
   1a32c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a330:	str	r1, [fp, #-60]	; 0xffffffc4
   1a334:	str	r2, [fp, #-64]	; 0xffffffc0
   1a338:	mov	r3, #0
   1a33c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a340:	mov	r3, #0
   1a344:	str	r3, [fp, #-40]	; 0xffffffd8
   1a348:	mov	r3, #0
   1a34c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a350:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a354:	add	r3, r3, #8
   1a358:	ldr	r3, [r3]
   1a35c:	mov	r0, r3
   1a360:	bl	19144 <sprintf@plt+0x7a50>
   1a364:	str	r0, [fp, #-24]	; 0xffffffe8
   1a368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a36c:	ldrb	r3, [r3]
   1a370:	cmp	r3, #42	; 0x2a
   1a374:	beq	1a524 <sprintf@plt+0x8e30>
   1a378:	sub	r3, fp, #48	; 0x30
   1a37c:	mov	r2, r3
   1a380:	ldr	r3, [pc, #544]	; 1a5a8 <sprintf@plt+0x8eb4>
   1a384:	add	r3, pc, r3
   1a388:	mov	r1, r3
   1a38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a390:	bl	113c4 <rb_strtok_r@plt>
   1a394:	str	r0, [fp, #-8]
   1a398:	b	1a514 <sprintf@plt+0x8e20>
   1a39c:	mov	r0, #72	; 0x48
   1a3a0:	bl	190f0 <sprintf@plt+0x79fc>
   1a3a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3a8:	mov	r3, #0
   1a3ac:	str	r3, [fp, #-12]
   1a3b0:	mov	r3, #2
   1a3b4:	str	r3, [fp, #-16]
   1a3b8:	ldr	r3, [fp, #-8]
   1a3bc:	str	r3, [fp, #-20]	; 0xffffffec
   1a3c0:	b	1a474 <sprintf@plt+0x8d80>
   1a3c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3c8:	ldrb	r3, [r3]
   1a3cc:	cmp	r3, #46	; 0x2e
   1a3d0:	bne	1a414 <sprintf@plt+0x8d20>
   1a3d4:	ldr	r3, [fp, #-12]
   1a3d8:	add	r3, r3, #1
   1a3dc:	str	r3, [fp, #-12]
   1a3e0:	ldr	r3, [fp, #-12]
   1a3e4:	cmp	r3, #3
   1a3e8:	ble	1a408 <sprintf@plt+0x8d14>
   1a3ec:	ldr	r3, [pc, #440]	; 1a5ac <sprintf@plt+0x8eb8>
   1a3f0:	add	r3, pc, r3
   1a3f4:	mov	r1, r3
   1a3f8:	mov	r0, #67	; 0x43
   1a3fc:	bl	12a60 <sprintf@plt+0x136c>
   1a400:	mov	r0, #3
   1a404:	bl	116dc <exit@plt>
   1a408:	mov	r3, #1
   1a40c:	str	r3, [fp, #-16]
   1a410:	b	1a468 <sprintf@plt+0x8d74>
   1a414:	bl	115d4 <__ctype_b_loc@plt>
   1a418:	mov	r3, r0
   1a41c:	ldr	r2, [r3]
   1a420:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a424:	ldrb	r3, [r3]
   1a428:	lsl	r3, r3, #1
   1a42c:	add	r3, r2, r3
   1a430:	ldrh	r3, [r3]
   1a434:	and	r3, r3, #2048	; 0x800
   1a438:	cmp	r3, #0
   1a43c:	bne	1a468 <sprintf@plt+0x8d74>
   1a440:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a444:	ldrb	r3, [r3]
   1a448:	mov	r2, r3
   1a44c:	ldr	r3, [pc, #348]	; 1a5b0 <sprintf@plt+0x8ebc>
   1a450:	add	r3, pc, r3
   1a454:	mov	r1, r3
   1a458:	mov	r0, #67	; 0x43
   1a45c:	bl	12a60 <sprintf@plt+0x136c>
   1a460:	mov	r0, #3
   1a464:	bl	116dc <exit@plt>
   1a468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a46c:	add	r3, r3, #1
   1a470:	str	r3, [fp, #-20]	; 0xffffffec
   1a474:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a478:	ldrb	r3, [r3]
   1a47c:	cmp	r3, #0
   1a480:	bne	1a3c4 <sprintf@plt+0x8cd0>
   1a484:	ldr	r3, [fp, #-12]
   1a488:	cmp	r3, #0
   1a48c:	ble	1a4b8 <sprintf@plt+0x8dc4>
   1a490:	ldr	r3, [fp, #-12]
   1a494:	cmp	r3, #2
   1a498:	bgt	1a4b8 <sprintf@plt+0x8dc4>
   1a49c:	ldr	r3, [pc, #272]	; 1a5b4 <sprintf@plt+0x8ec0>
   1a4a0:	add	r3, pc, r3
   1a4a4:	mov	r1, r3
   1a4a8:	mov	r0, #67	; 0x43
   1a4ac:	bl	12a60 <sprintf@plt+0x136c>
   1a4b0:	mov	r0, #3
   1a4b4:	bl	116dc <exit@plt>
   1a4b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4bc:	ldr	r2, [fp, #-16]
   1a4c0:	str	r2, [r3]
   1a4c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4c8:	add	r3, r3, #4
   1a4cc:	mov	r2, #53	; 0x35
   1a4d0:	ldr	r1, [fp, #-8]
   1a4d4:	mov	r0, r3
   1a4d8:	bl	1146c <rb_strlcpy@plt>
   1a4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4e0:	add	r3, r3, #60	; 0x3c
   1a4e4:	sub	r2, fp, #44	; 0x2c
   1a4e8:	mov	r1, r3
   1a4ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4f0:	bl	18a94 <sprintf@plt+0x73a0>
   1a4f4:	sub	r3, fp, #48	; 0x30
   1a4f8:	mov	r2, r3
   1a4fc:	ldr	r3, [pc, #180]	; 1a5b8 <sprintf@plt+0x8ec4>
   1a500:	add	r3, pc, r3
   1a504:	mov	r1, r3
   1a508:	mov	r0, #0
   1a50c:	bl	113c4 <rb_strtok_r@plt>
   1a510:	str	r0, [fp, #-8]
   1a514:	ldr	r3, [fp, #-8]
   1a518:	cmp	r3, #0
   1a51c:	bne	1a39c <sprintf@plt+0x8ca8>
   1a520:	b	1a528 <sprintf@plt+0x8e34>
   1a524:	nop			; (mov r0, r0)
   1a528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a52c:	bl	191b0 <sprintf@plt+0x7abc>
   1a530:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a534:	add	r3, r3, #4
   1a538:	ldr	r3, [r3]
   1a53c:	mov	r0, r3
   1a540:	bl	11568 <atoi@plt>
   1a544:	mov	r3, r0
   1a548:	uxtb	r3, r3
   1a54c:	and	r3, r3, #3
   1a550:	strb	r3, [fp, #-29]	; 0xffffffe3
   1a554:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a558:	ldr	r0, [r3]
   1a55c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a560:	add	r3, r3, #12
   1a564:	ldr	r1, [r3]
   1a568:	sub	r3, fp, #44	; 0x2c
   1a56c:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   1a570:	bl	195f4 <sprintf@plt+0x7f00>
   1a574:	mov	r3, r0
   1a578:	cmp	r3, #0
   1a57c:	bne	1a59c <sprintf@plt+0x8ea8>
   1a580:	ldr	r3, [pc, #52]	; 1a5bc <sprintf@plt+0x8ec8>
   1a584:	add	r3, pc, r3
   1a588:	mov	r1, r3
   1a58c:	mov	r0, #67	; 0x43
   1a590:	bl	12a60 <sprintf@plt+0x136c>
   1a594:	mov	r0, #3
   1a598:	bl	116dc <exit@plt>
   1a59c:	nop			; (mov r0, r0)
   1a5a0:	sub	sp, fp, #4
   1a5a4:	pop	{fp, pc}
   1a5a8:	andeq	r4, r0, r4, asr #28
   1a5ac:	ldrdeq	r4, [r0], -ip
   1a5b0:			; <UNDEFINED> instruction: 0x00004db8
   1a5b4:			; <UNDEFINED> instruction: 0x00004db8
   1a5b8:	andeq	r4, r0, r8, asr #25
   1a5bc:	andeq	r4, r0, r4, lsl sp
   1a5c0:	push	{fp, lr}
   1a5c4:	add	fp, sp, #4
   1a5c8:	sub	sp, sp, #24
   1a5cc:	str	r0, [fp, #-16]
   1a5d0:	str	r1, [fp, #-20]	; 0xffffffec
   1a5d4:	str	r2, [fp, #-24]	; 0xffffffe8
   1a5d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5dc:	ldr	r3, [r3]
   1a5e0:	mov	r0, r3
   1a5e4:	bl	196fc <sprintf@plt+0x8008>
   1a5e8:	str	r0, [fp, #-8]
   1a5ec:	ldr	r3, [fp, #-8]
   1a5f0:	cmp	r3, #0
   1a5f4:	bne	1a61c <sprintf@plt+0x8f28>
   1a5f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5fc:	ldr	r3, [r3]
   1a600:	mov	r2, r3
   1a604:	ldr	r3, [pc, #32]	; 1a62c <sprintf@plt+0x8f38>
   1a608:	add	r3, pc, r3
   1a60c:	mov	r1, r3
   1a610:	mov	r0, #87	; 0x57
   1a614:	bl	12a60 <sprintf@plt+0x136c>
   1a618:	b	1a624 <sprintf@plt+0x8f30>
   1a61c:	ldr	r0, [fp, #-8]
   1a620:	bl	19d80 <sprintf@plt+0x868c>
   1a624:	sub	sp, fp, #4
   1a628:	pop	{fp, pc}
   1a62c:	andeq	r4, r0, r0, asr #25
   1a630:	push	{fp, lr}
   1a634:	add	fp, sp, #4
   1a638:	sub	sp, sp, #16
   1a63c:	str	r0, [fp, #-8]
   1a640:	str	r1, [fp, #-12]
   1a644:	str	r2, [fp, #-16]
   1a648:	bl	19ddc <sprintf@plt+0x86e8>
   1a64c:	nop			; (mov r0, r0)
   1a650:	sub	sp, fp, #4
   1a654:	pop	{fp, pc}
   1a658:	push	{fp, lr}
   1a65c:	add	fp, sp, #4
   1a660:	sub	sp, sp, #24
   1a664:	str	r0, [fp, #-16]
   1a668:	str	r1, [fp, #-20]	; 0xffffffec
   1a66c:	str	r2, [fp, #-24]	; 0xffffffe8
   1a670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a674:	ldr	r3, [r3]
   1a678:	mov	r0, r3
   1a67c:	bl	11568 <atoi@plt>
   1a680:	str	r0, [fp, #-8]
   1a684:	ldr	r3, [fp, #-8]
   1a688:	cmp	r3, #0
   1a68c:	bge	1a6b0 <sprintf@plt+0x8fbc>
   1a690:	ldr	r2, [fp, #-8]
   1a694:	ldr	r3, [pc, #48]	; 1a6cc <sprintf@plt+0x8fd8>
   1a698:	add	r3, pc, r3
   1a69c:	mov	r1, r3
   1a6a0:	mov	r0, #67	; 0x43
   1a6a4:	bl	12a60 <sprintf@plt+0x136c>
   1a6a8:	mov	r0, #3
   1a6ac:	bl	116dc <exit@plt>
   1a6b0:	ldr	r3, [pc, #24]	; 1a6d0 <sprintf@plt+0x8fdc>
   1a6b4:	add	r3, pc, r3
   1a6b8:	ldr	r2, [fp, #-8]
   1a6bc:	str	r2, [r3]
   1a6c0:	nop			; (mov r0, r0)
   1a6c4:	sub	sp, fp, #4
   1a6c8:	pop	{fp, pc}
   1a6cc:	andeq	r4, r0, ip, asr ip
   1a6d0:	andeq	r6, r1, r4, lsl #14
   1a6d4:	push	{fp, lr}
   1a6d8:	add	fp, sp, #4
   1a6dc:	sub	sp, sp, #16
   1a6e0:	str	r0, [fp, #-16]
   1a6e4:	ldr	r1, [fp, #-16]
   1a6e8:	mov	r0, #1
   1a6ec:	bl	113f4 <calloc@plt>
   1a6f0:	mov	r3, r0
   1a6f4:	str	r3, [fp, #-8]
   1a6f8:	ldr	r3, [fp, #-8]
   1a6fc:	cmp	r3, #0
   1a700:	moveq	r3, #1
   1a704:	movne	r3, #0
   1a708:	uxtb	r3, r3
   1a70c:	cmp	r3, #0
   1a710:	beq	1a718 <sprintf@plt+0x9024>
   1a714:	bl	115c8 <rb_outofmemory@plt>
   1a718:	ldr	r3, [fp, #-8]
   1a71c:	mov	r0, r3
   1a720:	sub	sp, fp, #4
   1a724:	pop	{fp, pc}
   1a728:	push	{fp, lr}
   1a72c:	add	fp, sp, #4
   1a730:	sub	sp, sp, #8
   1a734:	str	r0, [fp, #-8]
   1a738:	ldr	r3, [fp, #-8]
   1a73c:	cmp	r3, #0
   1a740:	movne	r3, #1
   1a744:	moveq	r3, #0
   1a748:	uxtb	r3, r3
   1a74c:	cmp	r3, #0
   1a750:	beq	1a75c <sprintf@plt+0x9068>
   1a754:	ldr	r0, [fp, #-8]
   1a758:	bl	11490 <free@plt>
   1a75c:	nop			; (mov r0, r0)
   1a760:	sub	sp, fp, #4
   1a764:	pop	{fp, pc}
   1a768:	push	{fp}		; (str fp, [sp, #-4]!)
   1a76c:	add	fp, sp, #0
   1a770:	sub	sp, sp, #12
   1a774:	str	r0, [fp, #-8]
   1a778:	ldr	r3, [fp, #-8]
   1a77c:	ldr	r3, [r3, #460]	; 0x1cc
   1a780:	add	r2, r3, #1
   1a784:	ldr	r3, [fp, #-8]
   1a788:	str	r2, [r3, #460]	; 0x1cc
   1a78c:	nop			; (mov r0, r0)
   1a790:	add	sp, fp, #0
   1a794:	pop	{fp}		; (ldr fp, [sp], #4)
   1a798:	bx	lr
   1a79c:	push	{fp, lr}
   1a7a0:	add	fp, sp, #4
   1a7a4:	sub	sp, sp, #8
   1a7a8:	str	r0, [fp, #-8]
   1a7ac:	ldr	r3, [fp, #-8]
   1a7b0:	ldr	r3, [r3, #460]	; 0x1cc
   1a7b4:	sub	r2, r3, #1
   1a7b8:	ldr	r3, [fp, #-8]
   1a7bc:	str	r2, [r3, #460]	; 0x1cc
   1a7c0:	ldr	r3, [fp, #-8]
   1a7c4:	ldr	r3, [r3, #460]	; 0x1cc
   1a7c8:	cmp	r3, #0
   1a7cc:	bne	1a7d8 <sprintf@plt+0x90e4>
   1a7d0:	ldr	r0, [fp, #-8]
   1a7d4:	bl	1370c <sprintf@plt+0x2018>
   1a7d8:	nop			; (mov r0, r0)
   1a7dc:	sub	sp, fp, #4
   1a7e0:	pop	{fp, pc}
   1a7e4:	push	{fp}		; (str fp, [sp, #-4]!)
   1a7e8:	add	fp, sp, #0
   1a7ec:	sub	sp, sp, #12
   1a7f0:	str	r0, [fp, #-8]
   1a7f4:	str	r1, [fp, #-12]
   1a7f8:	ldr	r3, [fp, #-8]
   1a7fc:	ldr	r2, [r3, #464]	; 0x1d0
   1a800:	ldr	r3, [fp, #-12]
   1a804:	lsl	r3, r3, #4
   1a808:	add	r3, r2, r3
   1a80c:	ldr	r3, [r3, #8]
   1a810:	mov	r0, r3
   1a814:	add	sp, fp, #0
   1a818:	pop	{fp}		; (ldr fp, [sp], #4)
   1a81c:	bx	lr
   1a820:	push	{fp}		; (str fp, [sp, #-4]!)
   1a824:	add	fp, sp, #0
   1a828:	sub	sp, sp, #20
   1a82c:	str	r0, [fp, #-8]
   1a830:	str	r1, [fp, #-12]
   1a834:	str	r2, [fp, #-16]
   1a838:	ldr	r3, [fp, #-8]
   1a83c:	ldr	r2, [r3, #464]	; 0x1d0
   1a840:	ldr	r3, [fp, #-12]
   1a844:	lsl	r3, r3, #4
   1a848:	add	r3, r2, r3
   1a84c:	ldr	r2, [fp, #-16]
   1a850:	str	r2, [r3, #8]
   1a854:	nop			; (mov r0, r0)
   1a858:	add	sp, fp, #0
   1a85c:	pop	{fp}		; (ldr fp, [sp], #4)
   1a860:	bx	lr
   1a864:	push	{r4, fp, lr}
   1a868:	add	fp, sp, #8
   1a86c:	sub	sp, sp, #20
   1a870:	str	r0, [fp, #-16]
   1a874:	str	r1, [fp, #-20]	; 0xffffffec
   1a878:	str	r2, [fp, #-24]	; 0xffffffe8
   1a87c:	ldr	r3, [fp, #-16]
   1a880:	ldr	r2, [r3, #464]	; 0x1d0
   1a884:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a888:	lsl	r3, r3, #4
   1a88c:	add	r4, r2, r3
   1a890:	bl	114fc <rb_current_time@plt>
   1a894:	mov	r2, r0
   1a898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a89c:	add	r3, r2, r3
   1a8a0:	str	r3, [r4, #4]
   1a8a4:	nop			; (mov r0, r0)
   1a8a8:	sub	sp, fp, #8
   1a8ac:	pop	{r4, fp, pc}
   1a8b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1a8b4:	add	fp, sp, #0
   1a8b8:	sub	sp, sp, #20
   1a8bc:	str	r0, [fp, #-8]
   1a8c0:	str	r1, [fp, #-12]
   1a8c4:	str	r2, [fp, #-16]
   1a8c8:	ldr	r3, [fp, #-8]
   1a8cc:	ldr	r2, [r3, #464]	; 0x1d0
   1a8d0:	ldr	r3, [fp, #-12]
   1a8d4:	lsl	r3, r3, #4
   1a8d8:	add	r3, r2, r3
   1a8dc:	ldr	r2, [fp, #-16]
   1a8e0:	str	r2, [r3, #4]
   1a8e4:	nop			; (mov r0, r0)
   1a8e8:	add	sp, fp, #0
   1a8ec:	pop	{fp}		; (ldr fp, [sp], #4)
   1a8f0:	bx	lr
   1a8f4:	push	{fp, lr}
   1a8f8:	add	fp, sp, #4
   1a8fc:	sub	sp, sp, #72	; 0x48
   1a900:	str	r0, [fp, #-56]	; 0xffffffc8
   1a904:	str	r1, [fp, #-60]	; 0xffffffc4
   1a908:	str	r2, [fp, #-64]	; 0xffffffc0
   1a90c:	ldr	r2, [pc, #216]	; 1a9ec <sprintf@plt+0x92f8>
   1a910:	add	r2, pc, r2
   1a914:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a918:	str	r3, [fp, #-8]
   1a91c:	ldr	r3, [pc, #204]	; 1a9f0 <sprintf@plt+0x92fc>
   1a920:	ldr	r3, [r2, r3]
   1a924:	ldr	r3, [r3, #12]
   1a928:	mov	r1, r3
   1a92c:	ldr	r0, [fp, #-8]
   1a930:	bl	1a7e4 <sprintf@plt+0x90f0>
   1a934:	str	r0, [fp, #-12]
   1a938:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a93c:	cmp	r3, #0
   1a940:	beq	1a954 <sprintf@plt+0x9260>
   1a944:	mov	r1, #2
   1a948:	ldr	r0, [fp, #-8]
   1a94c:	bl	1ac04 <sprintf@plt+0x9510>
   1a950:	b	1a9e4 <sprintf@plt+0x92f0>
   1a954:	ldr	r3, [fp, #-8]
   1a958:	ldrh	r3, [r3, #246]	; 0xf6
   1a95c:	mov	r2, r3
   1a960:	ldr	r3, [fp, #-8]
   1a964:	ldrh	r3, [r3, #62]	; 0x3e
   1a968:	sub	r0, fp, #48	; 0x30
   1a96c:	str	r3, [sp]
   1a970:	mov	r3, r2
   1a974:	ldr	r2, [pc, #120]	; 1a9f4 <sprintf@plt+0x9300>
   1a978:	add	r2, pc, r2
   1a97c:	mov	r1, #32
   1a980:	bl	11688 <snprintf@plt>
   1a984:	sub	r3, fp, #48	; 0x30
   1a988:	mov	r0, r3
   1a98c:	bl	114f0 <strlen@plt>
   1a990:	mov	r3, r0
   1a994:	str	r3, [fp, #-16]
   1a998:	ldr	r3, [fp, #-12]
   1a99c:	ldr	r3, [r3]
   1a9a0:	sub	r1, fp, #48	; 0x30
   1a9a4:	ldr	r2, [fp, #-16]
   1a9a8:	mov	r0, r3
   1a9ac:	bl	11454 <rb_write@plt>
   1a9b0:	mov	r2, r0
   1a9b4:	ldr	r3, [fp, #-16]
   1a9b8:	cmp	r2, r3
   1a9bc:	beq	1a9d0 <sprintf@plt+0x92dc>
   1a9c0:	mov	r1, #2
   1a9c4:	ldr	r0, [fp, #-8]
   1a9c8:	bl	1ac04 <sprintf@plt+0x9510>
   1a9cc:	b	1a9e4 <sprintf@plt+0x92f0>
   1a9d0:	ldr	r3, [fp, #-12]
   1a9d4:	ldr	r3, [r3]
   1a9d8:	ldr	r1, [fp, #-8]
   1a9dc:	mov	r0, r3
   1a9e0:	bl	1a9f8 <sprintf@plt+0x9304>
   1a9e4:	sub	sp, fp, #4
   1a9e8:	pop	{fp, pc}
   1a9ec:	andeq	r5, r1, r8, ror #13
   1a9f0:	andeq	r0, r0, r8, ror r1
   1a9f4:	andeq	r4, r0, r8, asr #21
   1a9f8:	push	{fp, lr}
   1a9fc:	add	fp, sp, #4
   1aa00:	sub	sp, sp, #168	; 0xa8
   1aa04:	str	r0, [fp, #-168]	; 0xffffff58
   1aa08:	str	r1, [fp, #-172]	; 0xffffff54
   1aa0c:	ldr	r3, [fp, #-172]	; 0xffffff54
   1aa10:	str	r3, [fp, #-24]	; 0xffffffe8
   1aa14:	sub	r3, fp, #160	; 0xa0
   1aa18:	mov	r2, #129	; 0x81
   1aa1c:	mov	r1, #0
   1aa20:	mov	r0, r3
   1aa24:	bl	11430 <memset@plt>
   1aa28:	mov	r3, #2
   1aa2c:	str	r3, [fp, #-8]
   1aa30:	mov	r3, #0
   1aa34:	str	r3, [fp, #-12]
   1aa38:	mov	r3, #0
   1aa3c:	str	r3, [fp, #-16]
   1aa40:	sub	r3, fp, #160	; 0xa0
   1aa44:	mov	r2, #128	; 0x80
   1aa48:	mov	r1, r3
   1aa4c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1aa50:	bl	114a8 <rb_read@plt>
   1aa54:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aa5c:	cmp	r3, #0
   1aa60:	bge	1aaa0 <sprintf@plt+0x93ac>
   1aa64:	bl	116e8 <__errno_location@plt>
   1aa68:	mov	r3, r0
   1aa6c:	ldr	r3, [r3]
   1aa70:	mov	r0, r3
   1aa74:	bl	11328 <rb_ignore_errno@plt>
   1aa78:	mov	r3, r0
   1aa7c:	cmp	r3, #0
   1aa80:	beq	1aaa0 <sprintf@plt+0x93ac>
   1aa84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa88:	ldr	r2, [pc, #368]	; 1ac00 <sprintf@plt+0x950c>
   1aa8c:	add	r2, pc, r2
   1aa90:	mov	r1, #1
   1aa94:	ldr	r0, [fp, #-168]	; 0xffffff58
   1aa98:	bl	11370 <rb_setselect@plt>
   1aa9c:	b	1abf8 <sprintf@plt+0x9504>
   1aaa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aaa4:	cmp	r3, #0
   1aaa8:	ble	1abd4 <sprintf@plt+0x94e0>
   1aaac:	sub	r3, fp, #160	; 0xa0
   1aab0:	mov	r0, r3
   1aab4:	bl	1ae00 <sprintf@plt+0x970c>
   1aab8:	str	r0, [fp, #-12]
   1aabc:	ldr	r3, [fp, #-12]
   1aac0:	cmp	r3, #0
   1aac4:	beq	1abcc <sprintf@plt+0x94d8>
   1aac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aacc:	add	r3, r3, #440	; 0x1b8
   1aad0:	str	r3, [fp, #-16]
   1aad4:	b	1aae4 <sprintf@plt+0x93f0>
   1aad8:	ldr	r3, [fp, #-12]
   1aadc:	add	r3, r3, #1
   1aae0:	str	r3, [fp, #-12]
   1aae4:	ldr	r3, [fp, #-12]
   1aae8:	ldrb	r3, [r3]
   1aaec:	cmp	r3, #126	; 0x7e
   1aaf0:	beq	1aad8 <sprintf@plt+0x93e4>
   1aaf4:	ldr	r3, [fp, #-12]
   1aaf8:	ldrb	r3, [r3]
   1aafc:	cmp	r3, #94	; 0x5e
   1ab00:	beq	1aad8 <sprintf@plt+0x93e4>
   1ab04:	mov	r3, #10
   1ab08:	str	r3, [fp, #-20]	; 0xffffffec
   1ab0c:	b	1aba0 <sprintf@plt+0x94ac>
   1ab10:	ldr	r3, [fp, #-12]
   1ab14:	ldrb	r3, [r3]
   1ab18:	cmp	r3, #64	; 0x40
   1ab1c:	beq	1abbc <sprintf@plt+0x94c8>
   1ab20:	ldr	r3, [fp, #-12]
   1ab24:	ldrb	r3, [r3]
   1ab28:	cmp	r3, #13
   1ab2c:	beq	1abbc <sprintf@plt+0x94c8>
   1ab30:	ldr	r3, [fp, #-12]
   1ab34:	ldrb	r3, [r3]
   1ab38:	cmp	r3, #10
   1ab3c:	beq	1abbc <sprintf@plt+0x94c8>
   1ab40:	ldr	r3, [fp, #-12]
   1ab44:	ldrb	r3, [r3]
   1ab48:	cmp	r3, #32
   1ab4c:	beq	1ab94 <sprintf@plt+0x94a0>
   1ab50:	ldr	r3, [fp, #-12]
   1ab54:	ldrb	r3, [r3]
   1ab58:	cmp	r3, #58	; 0x3a
   1ab5c:	beq	1ab94 <sprintf@plt+0x94a0>
   1ab60:	ldr	r3, [fp, #-12]
   1ab64:	ldrb	r3, [r3]
   1ab68:	cmp	r3, #91	; 0x5b
   1ab6c:	beq	1ab94 <sprintf@plt+0x94a0>
   1ab70:	ldr	r3, [fp, #-16]
   1ab74:	add	r2, r3, #1
   1ab78:	str	r2, [fp, #-16]
   1ab7c:	ldr	r2, [fp, #-12]
   1ab80:	ldrb	r2, [r2]
   1ab84:	strb	r2, [r3]
   1ab88:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab8c:	sub	r3, r3, #1
   1ab90:	str	r3, [fp, #-20]	; 0xffffffec
   1ab94:	ldr	r3, [fp, #-12]
   1ab98:	add	r3, r3, #1
   1ab9c:	str	r3, [fp, #-12]
   1aba0:	ldr	r3, [fp, #-12]
   1aba4:	ldrb	r3, [r3]
   1aba8:	cmp	r3, #0
   1abac:	beq	1abbc <sprintf@plt+0x94c8>
   1abb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abb4:	cmp	r3, #0
   1abb8:	bne	1ab10 <sprintf@plt+0x941c>
   1abbc:	ldr	r3, [fp, #-16]
   1abc0:	mov	r2, #0
   1abc4:	strb	r2, [r3]
   1abc8:	b	1abd4 <sprintf@plt+0x94e0>
   1abcc:	mov	r3, #3
   1abd0:	str	r3, [fp, #-8]
   1abd4:	ldr	r3, [fp, #-12]
   1abd8:	cmp	r3, #0
   1abdc:	bne	1abf0 <sprintf@plt+0x94fc>
   1abe0:	ldr	r1, [fp, #-8]
   1abe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abe8:	bl	1ac04 <sprintf@plt+0x9510>
   1abec:	b	1abf8 <sprintf@plt+0x9504>
   1abf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abf4:	bl	1ad14 <sprintf@plt+0x9620>
   1abf8:	sub	sp, fp, #4
   1abfc:	pop	{fp, pc}
   1ac00:			; <UNDEFINED> instruction: 0xffffff64
   1ac04:	push	{r4, fp, lr}
   1ac08:	add	fp, sp, #8
   1ac0c:	sub	sp, sp, #20
   1ac10:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac14:	str	r1, [fp, #-28]	; 0xffffffe4
   1ac18:	ldr	r4, [pc, #228]	; 1ad04 <sprintf@plt+0x9610>
   1ac1c:	add	r4, pc, r4
   1ac20:	ldr	r3, [pc, #224]	; 1ad08 <sprintf@plt+0x9614>
   1ac24:	ldr	r3, [r4, r3]
   1ac28:	ldr	r3, [r3, #12]
   1ac2c:	mov	r1, r3
   1ac30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac34:	bl	1a7e4 <sprintf@plt+0x90f0>
   1ac38:	str	r0, [fp, #-16]
   1ac3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac40:	add	r3, r3, #440	; 0x1b8
   1ac44:	mov	r2, #11
   1ac48:	ldr	r1, [pc, #188]	; 1ad0c <sprintf@plt+0x9618>
   1ac4c:	add	r1, pc, r1
   1ac50:	mov	r0, r3
   1ac54:	bl	1146c <rb_strlcpy@plt>
   1ac58:	ldr	r3, [fp, #-16]
   1ac5c:	ldr	r3, [r3]
   1ac60:	cmp	r3, #0
   1ac64:	beq	1ac78 <sprintf@plt+0x9584>
   1ac68:	ldr	r3, [fp, #-16]
   1ac6c:	ldr	r3, [r3]
   1ac70:	mov	r0, r3
   1ac74:	bl	1152c <rb_close@plt>
   1ac78:	ldr	r0, [fp, #-16]
   1ac7c:	bl	1a728 <sprintf@plt+0x9034>
   1ac80:	ldr	r3, [pc, #128]	; 1ad08 <sprintf@plt+0x9614>
   1ac84:	ldr	r3, [r4, r3]
   1ac88:	ldr	r3, [r3, #12]
   1ac8c:	mov	r2, #0
   1ac90:	mov	r1, r3
   1ac94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac98:	bl	1a820 <sprintf@plt+0x912c>
   1ac9c:	ldr	r3, [pc, #100]	; 1ad08 <sprintf@plt+0x9614>
   1aca0:	ldr	r3, [r4, r3]
   1aca4:	ldr	r3, [r3, #12]
   1aca8:	mov	r2, #0
   1acac:	mov	r1, r3
   1acb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acb4:	bl	1a8b0 <sprintf@plt+0x91bc>
   1acb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1acbc:	ldr	r0, [r3]
   1acc0:	ldr	r3, [pc, #72]	; 1ad10 <sprintf@plt+0x961c>
   1acc4:	add	r3, pc, r3
   1acc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1accc:	ldr	r3, [r3, r2, lsl #2]
   1acd0:	mov	r1, r3
   1acd4:	bl	129e8 <sprintf@plt+0x12f4>
   1acd8:	ldr	r3, [pc, #40]	; 1ad08 <sprintf@plt+0x9614>
   1acdc:	ldr	r3, [r4, r3]
   1ace0:	ldr	r3, [r3, #12]
   1ace4:	mov	r1, r3
   1ace8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acec:	bl	13844 <sprintf@plt+0x2150>
   1acf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acf4:	bl	1a79c <sprintf@plt+0x90a8>
   1acf8:	nop			; (mov r0, r0)
   1acfc:	sub	sp, fp, #8
   1ad00:	pop	{r4, fp, pc}
   1ad04:	ldrdeq	r5, [r1], -ip
   1ad08:	andeq	r0, r0, r8, ror r1
   1ad0c:	andeq	r4, r0, r0, lsl #16
   1ad10:	andeq	r6, r1, r8, ror r1
   1ad14:	push	{r4, fp, lr}
   1ad18:	add	fp, sp, #8
   1ad1c:	sub	sp, sp, #20
   1ad20:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad24:	ldr	r4, [pc, #200]	; 1adf4 <sprintf@plt+0x9700>
   1ad28:	add	r4, pc, r4
   1ad2c:	ldr	r3, [pc, #196]	; 1adf8 <sprintf@plt+0x9704>
   1ad30:	ldr	r3, [r4, r3]
   1ad34:	ldr	r3, [r3, #12]
   1ad38:	mov	r1, r3
   1ad3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad40:	bl	1a7e4 <sprintf@plt+0x90f0>
   1ad44:	str	r0, [fp, #-16]
   1ad48:	ldr	r3, [fp, #-16]
   1ad4c:	ldr	r3, [r3]
   1ad50:	cmp	r3, #0
   1ad54:	beq	1ad68 <sprintf@plt+0x9674>
   1ad58:	ldr	r3, [fp, #-16]
   1ad5c:	ldr	r3, [r3]
   1ad60:	mov	r0, r3
   1ad64:	bl	1152c <rb_close@plt>
   1ad68:	ldr	r0, [fp, #-16]
   1ad6c:	bl	1a728 <sprintf@plt+0x9034>
   1ad70:	ldr	r3, [pc, #128]	; 1adf8 <sprintf@plt+0x9704>
   1ad74:	ldr	r3, [r4, r3]
   1ad78:	ldr	r3, [r3, #12]
   1ad7c:	mov	r2, #0
   1ad80:	mov	r1, r3
   1ad84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad88:	bl	1a820 <sprintf@plt+0x912c>
   1ad8c:	ldr	r3, [pc, #100]	; 1adf8 <sprintf@plt+0x9704>
   1ad90:	ldr	r3, [r4, r3]
   1ad94:	ldr	r3, [r3, #12]
   1ad98:	mov	r2, #0
   1ad9c:	mov	r1, r3
   1ada0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ada4:	bl	1a8b0 <sprintf@plt+0x91bc>
   1ada8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adac:	ldr	r2, [r3]
   1adb0:	ldr	r3, [pc, #68]	; 1adfc <sprintf@plt+0x9708>
   1adb4:	add	r3, pc, r3
   1adb8:	ldr	r3, [r3, #4]
   1adbc:	mov	r1, r3
   1adc0:	mov	r0, r2
   1adc4:	bl	129e8 <sprintf@plt+0x12f4>
   1adc8:	ldr	r3, [pc, #40]	; 1adf8 <sprintf@plt+0x9704>
   1adcc:	ldr	r3, [r4, r3]
   1add0:	ldr	r3, [r3, #12]
   1add4:	mov	r1, r3
   1add8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1addc:	bl	13844 <sprintf@plt+0x2150>
   1ade0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ade4:	bl	1a79c <sprintf@plt+0x90a8>
   1ade8:	nop			; (mov r0, r0)
   1adec:	sub	sp, fp, #8
   1adf0:	pop	{r4, fp, pc}
   1adf4:	ldrdeq	r5, [r1], -r0
   1adf8:	andeq	r0, r0, r8, ror r1
   1adfc:	andeq	r6, r1, r8, lsl #1
   1ae00:	push	{fp, lr}
   1ae04:	add	fp, sp, #4
   1ae08:	sub	sp, sp, #40	; 0x28
   1ae0c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ae10:	mov	r3, #0
   1ae14:	str	r3, [fp, #-8]
   1ae18:	mov	r3, #0
   1ae1c:	str	r3, [fp, #-12]
   1ae20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae24:	str	r3, [fp, #-16]
   1ae28:	mov	r1, #58	; 0x3a
   1ae2c:	ldr	r0, [fp, #-16]
   1ae30:	bl	113d0 <strchr@plt>
   1ae34:	str	r0, [fp, #-20]	; 0xffffffec
   1ae38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae3c:	cmp	r3, #0
   1ae40:	bne	1ae4c <sprintf@plt+0x9758>
   1ae44:	mov	r3, #0
   1ae48:	b	1af84 <sprintf@plt+0x9890>
   1ae4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae50:	mov	r2, #0
   1ae54:	strb	r2, [r3]
   1ae58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae5c:	add	r3, r3, #1
   1ae60:	str	r3, [fp, #-20]	; 0xffffffec
   1ae64:	mov	r1, #58	; 0x3a
   1ae68:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae6c:	bl	113d0 <strchr@plt>
   1ae70:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae78:	cmp	r3, #0
   1ae7c:	bne	1ae88 <sprintf@plt+0x9794>
   1ae80:	mov	r3, #0
   1ae84:	b	1af84 <sprintf@plt+0x9890>
   1ae88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae8c:	mov	r2, #0
   1ae90:	strb	r2, [r3]
   1ae94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae98:	add	r3, r3, #1
   1ae9c:	str	r3, [fp, #-24]	; 0xffffffe8
   1aea0:	mov	r1, #44	; 0x2c
   1aea4:	ldr	r0, [fp, #-16]
   1aea8:	bl	113d0 <strchr@plt>
   1aeac:	str	r0, [fp, #-28]	; 0xffffffe4
   1aeb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aeb4:	cmp	r3, #0
   1aeb8:	bne	1aec4 <sprintf@plt+0x97d0>
   1aebc:	mov	r3, #0
   1aec0:	b	1af84 <sprintf@plt+0x9890>
   1aec4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aec8:	mov	r2, #0
   1aecc:	strb	r2, [r3]
   1aed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aed4:	add	r3, r3, #1
   1aed8:	str	r3, [fp, #-28]	; 0xffffffe4
   1aedc:	ldr	r0, [fp, #-16]
   1aee0:	bl	11568 <atoi@plt>
   1aee4:	str	r0, [fp, #-8]
   1aee8:	ldr	r3, [fp, #-8]
   1aeec:	cmp	r3, #0
   1aef0:	bne	1aefc <sprintf@plt+0x9808>
   1aef4:	mov	r3, #0
   1aef8:	b	1af84 <sprintf@plt+0x9890>
   1aefc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af00:	bl	11568 <atoi@plt>
   1af04:	str	r0, [fp, #-12]
   1af08:	ldr	r3, [fp, #-12]
   1af0c:	cmp	r3, #0
   1af10:	bne	1af1c <sprintf@plt+0x9828>
   1af14:	mov	r3, #0
   1af18:	b	1af84 <sprintf@plt+0x9890>
   1af1c:	ldr	r3, [pc, #108]	; 1af90 <sprintf@plt+0x989c>
   1af20:	add	r3, pc, r3
   1af24:	mov	r1, r3
   1af28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1af2c:	bl	11598 <strstr@plt>
   1af30:	mov	r3, r0
   1af34:	cmp	r3, #0
   1af38:	bne	1af44 <sprintf@plt+0x9850>
   1af3c:	mov	r3, #0
   1af40:	b	1af84 <sprintf@plt+0x9890>
   1af44:	mov	r1, #58	; 0x3a
   1af48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af4c:	bl	113d0 <strchr@plt>
   1af50:	str	r0, [fp, #-32]	; 0xffffffe0
   1af54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af58:	cmp	r3, #0
   1af5c:	bne	1af68 <sprintf@plt+0x9874>
   1af60:	mov	r3, #0
   1af64:	b	1af84 <sprintf@plt+0x9890>
   1af68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af6c:	mov	r2, #0
   1af70:	strb	r2, [r3]
   1af74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af78:	add	r3, r3, #1
   1af7c:	str	r3, [fp, #-32]	; 0xffffffe0
   1af80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af84:	mov	r0, r3
   1af88:	sub	sp, fp, #4
   1af8c:	pop	{fp, pc}
   1af90:	andeq	r4, r0, r0, lsr r5
   1af94:	push	{r4, fp, lr}
   1af98:	add	fp, sp, #8
   1af9c:	sub	sp, sp, #20
   1afa0:	ldr	r4, [pc, #164]	; 1b04c <sprintf@plt+0x9958>
   1afa4:	add	r4, pc, r4
   1afa8:	ldr	r3, [pc, #160]	; 1b050 <sprintf@plt+0x995c>
   1afac:	ldr	r3, [r4, r3]
   1afb0:	ldr	r3, [r3]
   1afb4:	sub	r2, fp, #24
   1afb8:	mov	r1, r2
   1afbc:	mov	r0, r3
   1afc0:	bl	114cc <rb_dictionary_foreach_start@plt>
   1afc4:	b	1b014 <sprintf@plt+0x9920>
   1afc8:	ldr	r3, [pc, #132]	; 1b054 <sprintf@plt+0x9960>
   1afcc:	ldr	r3, [r4, r3]
   1afd0:	ldr	r3, [r3, #12]
   1afd4:	mov	r1, r3
   1afd8:	ldr	r0, [fp, #-16]
   1afdc:	bl	1a7e4 <sprintf@plt+0x90f0>
   1afe0:	mov	r3, r0
   1afe4:	cmp	r3, #0
   1afe8:	beq	1aff8 <sprintf@plt+0x9904>
   1afec:	mov	r1, #2
   1aff0:	ldr	r0, [fp, #-16]
   1aff4:	bl	1ac04 <sprintf@plt+0x9510>
   1aff8:	ldr	r3, [pc, #80]	; 1b050 <sprintf@plt+0x995c>
   1affc:	ldr	r3, [r4, r3]
   1b000:	ldr	r3, [r3]
   1b004:	sub	r2, fp, #24
   1b008:	mov	r1, r2
   1b00c:	mov	r0, r3
   1b010:	bl	11484 <rb_dictionary_foreach_next@plt>
   1b014:	ldr	r3, [pc, #52]	; 1b050 <sprintf@plt+0x995c>
   1b018:	ldr	r3, [r4, r3]
   1b01c:	ldr	r3, [r3]
   1b020:	sub	r2, fp, #24
   1b024:	mov	r1, r2
   1b028:	mov	r0, r3
   1b02c:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1b030:	str	r0, [fp, #-16]
   1b034:	ldr	r3, [fp, #-16]
   1b038:	cmp	r3, #0
   1b03c:	bne	1afc8 <sprintf@plt+0x98d4>
   1b040:	nop			; (mov r0, r0)
   1b044:	sub	sp, fp, #8
   1b048:	pop	{r4, fp, pc}
   1b04c:	andeq	r5, r1, r4, asr r0
   1b050:	andeq	r0, r0, ip, ror #2
   1b054:	andeq	r0, r0, r8, ror r1
   1b058:	push	{r4, fp, lr}
   1b05c:	add	fp, sp, #8
   1b060:	sub	sp, sp, #284	; 0x11c
   1b064:	str	r0, [fp, #-280]	; 0xfffffee8
   1b068:	ldr	r4, [pc, #576]	; 1b2b0 <sprintf@plt+0x9bbc>
   1b06c:	add	r4, pc, r4
   1b070:	mov	r0, #4
   1b074:	bl	1a6d4 <sprintf@plt+0x8fe0>
   1b078:	str	r0, [fp, #-16]
   1b07c:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b080:	add	r3, r3, #248	; 0xf8
   1b084:	ldrh	r3, [r3]
   1b088:	str	r3, [fp, #-20]	; 0xffffffec
   1b08c:	ldr	r3, [pc, #544]	; 1b2b4 <sprintf@plt+0x9bc0>
   1b090:	add	r3, pc, r3
   1b094:	ldrb	r3, [r3]
   1b098:	eor	r3, r3, #1
   1b09c:	uxtb	r3, r3
   1b0a0:	cmp	r3, #0
   1b0a4:	beq	1b0f0 <sprintf@plt+0x99fc>
   1b0a8:	ldr	r0, [fp, #-16]
   1b0ac:	bl	1a728 <sprintf@plt+0x9034>
   1b0b0:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b0b4:	ldr	r2, [r3]
   1b0b8:	ldr	r3, [pc, #504]	; 1b2b8 <sprintf@plt+0x9bc4>
   1b0bc:	add	r3, pc, r3
   1b0c0:	ldr	r3, [r3, #16]
   1b0c4:	mov	r1, r3
   1b0c8:	mov	r0, r2
   1b0cc:	bl	129e8 <sprintf@plt+0x12f4>
   1b0d0:	ldr	r3, [pc, #484]	; 1b2bc <sprintf@plt+0x9bc8>
   1b0d4:	ldr	r3, [r4, r3]
   1b0d8:	ldr	r3, [r3, #12]
   1b0dc:	mov	r1, r3
   1b0e0:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b0e4:	bl	13844 <sprintf@plt+0x2150>
   1b0e8:	mov	r3, #1
   1b0ec:	b	1b2a4 <sprintf@plt+0x9bb0>
   1b0f0:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b0f4:	bl	1a768 <sprintf@plt+0x9074>
   1b0f8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b0fc:	ldr	r2, [r3]
   1b100:	ldr	r3, [pc, #440]	; 1b2c0 <sprintf@plt+0x9bcc>
   1b104:	add	r3, pc, r3
   1b108:	ldr	r3, [r3]
   1b10c:	mov	r1, r3
   1b110:	mov	r0, r2
   1b114:	bl	129e8 <sprintf@plt+0x12f4>
   1b118:	ldr	r3, [pc, #412]	; 1b2bc <sprintf@plt+0x9bc8>
   1b11c:	ldr	r3, [r4, r3]
   1b120:	ldr	r3, [r3, #12]
   1b124:	ldr	r2, [fp, #-16]
   1b128:	mov	r1, r3
   1b12c:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b130:	bl	1a820 <sprintf@plt+0x912c>
   1b134:	ldr	r3, [pc, #384]	; 1b2bc <sprintf@plt+0x9bc8>
   1b138:	ldr	r3, [r4, r3]
   1b13c:	ldr	r1, [r3, #12]
   1b140:	ldr	r3, [pc, #380]	; 1b2c4 <sprintf@plt+0x9bd0>
   1b144:	add	r3, pc, r3
   1b148:	ldr	r3, [r3]
   1b14c:	mov	r2, r3
   1b150:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b154:	bl	1a864 <sprintf@plt+0x9170>
   1b158:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b15c:	ldr	r2, [r3, #4]
   1b160:	ldr	r3, [pc, #352]	; 1b2c8 <sprintf@plt+0x9bd4>
   1b164:	add	r3, pc, r3
   1b168:	mov	r1, #1
   1b16c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b170:	bl	113a0 <rb_socket@plt>
   1b174:	mov	r2, r0
   1b178:	ldr	r3, [fp, #-16]
   1b17c:	str	r2, [r3]
   1b180:	ldr	r3, [fp, #-16]
   1b184:	ldr	r3, [r3]
   1b188:	cmp	r3, #0
   1b18c:	bne	1b1d4 <sprintf@plt+0x9ae0>
   1b190:	bl	116e8 <__errno_location@plt>
   1b194:	mov	r3, r0
   1b198:	ldr	r3, [r3]
   1b19c:	mov	r0, r3
   1b1a0:	bl	112ec <strerror@plt>
   1b1a4:	mov	r3, r0
   1b1a8:	mov	r2, r3
   1b1ac:	ldr	r3, [pc, #280]	; 1b2cc <sprintf@plt+0x9bd8>
   1b1b0:	add	r3, pc, r3
   1b1b4:	mov	r1, r3
   1b1b8:	mov	r0, #68	; 0x44
   1b1bc:	bl	12a60 <sprintf@plt+0x136c>
   1b1c0:	mov	r1, #2
   1b1c4:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1b1c8:	bl	1ac04 <sprintf@plt+0x9510>
   1b1cc:	mov	r3, #1
   1b1d0:	b	1b2a4 <sprintf@plt+0x9bb0>
   1b1d4:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b1d8:	sub	r0, fp, #148	; 0x94
   1b1dc:	add	r3, r3, #64	; 0x40
   1b1e0:	mov	r2, #128	; 0x80
   1b1e4:	mov	r1, r3
   1b1e8:	bl	11514 <memcpy@plt>
   1b1ec:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b1f0:	sub	r0, fp, #276	; 0x114
   1b1f4:	add	r3, r3, #248	; 0xf8
   1b1f8:	mov	r2, #128	; 0x80
   1b1fc:	mov	r1, r3
   1b200:	bl	11514 <memcpy@plt>
   1b204:	sub	r3, fp, #148	; 0x94
   1b208:	ldrh	r3, [r3]
   1b20c:	cmp	r3, #2
   1b210:	bne	1b224 <sprintf@plt+0x9b30>
   1b214:	sub	r3, fp, #148	; 0x94
   1b218:	mov	r2, #0
   1b21c:	strh	r2, [r3, #2]
   1b220:	b	1b230 <sprintf@plt+0x9b3c>
   1b224:	sub	r3, fp, #148	; 0x94
   1b228:	mov	r2, #0
   1b22c:	strh	r2, [r3, #2]
   1b230:	sub	r3, fp, #276	; 0x114
   1b234:	ldrh	r3, [r3]
   1b238:	cmp	r3, #2
   1b23c:	bne	1b258 <sprintf@plt+0x9b64>
   1b240:	sub	r4, fp, #276	; 0x114
   1b244:	mov	r0, #113	; 0x71
   1b248:	bl	11418 <htons@plt>
   1b24c:	mov	r3, r0
   1b250:	strh	r3, [r4, #2]
   1b254:	b	1b26c <sprintf@plt+0x9b78>
   1b258:	sub	r4, fp, #276	; 0x114
   1b25c:	mov	r0, #113	; 0x71
   1b260:	bl	11418 <htons@plt>
   1b264:	mov	r3, r0
   1b268:	strh	r3, [r4, #2]
   1b26c:	ldr	r3, [fp, #-16]
   1b270:	ldr	r0, [r3]
   1b274:	ldr	r3, [pc, #84]	; 1b2d0 <sprintf@plt+0x9bdc>
   1b278:	add	r3, pc, r3
   1b27c:	ldr	r3, [r3]
   1b280:	sub	r2, fp, #148	; 0x94
   1b284:	sub	r1, fp, #276	; 0x114
   1b288:	str	r3, [sp, #4]
   1b28c:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1b290:	str	r3, [sp]
   1b294:	ldr	r3, [pc, #56]	; 1b2d4 <sprintf@plt+0x9be0>
   1b298:	add	r3, pc, r3
   1b29c:	bl	11340 <rb_connect_tcp@plt>
   1b2a0:	mov	r3, #1
   1b2a4:	mov	r0, r3
   1b2a8:	sub	sp, fp, #8
   1b2ac:	pop	{r4, fp, pc}
   1b2b0:	andeq	r4, r1, ip, lsl #31
   1b2b4:	andeq	r5, r1, r8, lsr #27
   1b2b8:	andeq	r5, r1, r0, lsl #27
   1b2bc:	andeq	r0, r0, r8, ror r1
   1b2c0:	andeq	r5, r1, r8, lsr sp
   1b2c4:	strdeq	r5, [r1], -r0
   1b2c8:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1b2cc:			; <UNDEFINED> instruction: 0x000042b0
   1b2d0:			; <UNDEFINED> instruction: 0x00015bbc
   1b2d4:			; <UNDEFINED> instruction: 0xfffff654
   1b2d8:	push	{fp, lr}
   1b2dc:	add	fp, sp, #4
   1b2e0:	sub	sp, sp, #16
   1b2e4:	str	r0, [fp, #-16]
   1b2e8:	ldr	r2, [pc, #64]	; 1b330 <sprintf@plt+0x9c3c>
   1b2ec:	add	r2, pc, r2
   1b2f0:	ldr	r3, [pc, #60]	; 1b334 <sprintf@plt+0x9c40>
   1b2f4:	ldr	r3, [r2, r3]
   1b2f8:	ldr	r3, [r3, #12]
   1b2fc:	mov	r1, r3
   1b300:	ldr	r0, [fp, #-16]
   1b304:	bl	1a7e4 <sprintf@plt+0x90f0>
   1b308:	str	r0, [fp, #-8]
   1b30c:	ldr	r3, [fp, #-8]
   1b310:	cmp	r3, #0
   1b314:	beq	1b324 <sprintf@plt+0x9c30>
   1b318:	mov	r1, #2
   1b31c:	ldr	r0, [fp, #-16]
   1b320:	bl	1ac04 <sprintf@plt+0x9510>
   1b324:	nop			; (mov r0, r0)
   1b328:	sub	sp, fp, #4
   1b32c:	pop	{fp, pc}
   1b330:	andeq	r4, r1, ip, lsl #26
   1b334:	andeq	r0, r0, r8, ror r1
   1b338:	push	{fp, lr}
   1b33c:	add	fp, sp, #4
   1b340:	sub	sp, sp, #24
   1b344:	str	r0, [fp, #-16]
   1b348:	str	r1, [fp, #-20]	; 0xffffffec
   1b34c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b354:	ldr	r3, [r3]
   1b358:	mov	r0, r3
   1b35c:	bl	11568 <atoi@plt>
   1b360:	str	r0, [fp, #-8]
   1b364:	ldr	r3, [fp, #-8]
   1b368:	cmp	r3, #0
   1b36c:	bge	1b390 <sprintf@plt+0x9c9c>
   1b370:	ldr	r2, [fp, #-8]
   1b374:	ldr	r3, [pc, #48]	; 1b3ac <sprintf@plt+0x9cb8>
   1b378:	add	r3, pc, r3
   1b37c:	mov	r1, r3
   1b380:	mov	r0, #67	; 0x43
   1b384:	bl	12a60 <sprintf@plt+0x136c>
   1b388:	mov	r0, #3
   1b38c:	bl	116dc <exit@plt>
   1b390:	ldr	r3, [pc, #24]	; 1b3b0 <sprintf@plt+0x9cbc>
   1b394:	add	r3, pc, r3
   1b398:	ldr	r2, [fp, #-8]
   1b39c:	str	r2, [r3]
   1b3a0:	nop			; (mov r0, r0)
   1b3a4:	sub	sp, fp, #4
   1b3a8:	pop	{fp, pc}
   1b3ac:	andeq	r4, r0, ip, lsl #2
   1b3b0:	andeq	r5, r1, r0, lsr #21
   1b3b4:	push	{fp}		; (str fp, [sp, #-4]!)
   1b3b8:	add	fp, sp, #0
   1b3bc:	sub	sp, sp, #20
   1b3c0:	str	r0, [fp, #-8]
   1b3c4:	str	r1, [fp, #-12]
   1b3c8:	str	r2, [fp, #-16]
   1b3cc:	ldr	r3, [fp, #-16]
   1b3d0:	ldr	r3, [r3]
   1b3d4:	ldrb	r3, [r3]
   1b3d8:	cmp	r3, #49	; 0x31
   1b3dc:	moveq	r3, #1
   1b3e0:	movne	r3, #0
   1b3e4:	uxtb	r2, r3
   1b3e8:	ldr	r3, [pc, #20]	; 1b404 <sprintf@plt+0x9d10>
   1b3ec:	add	r3, pc, r3
   1b3f0:	strb	r2, [r3]
   1b3f4:	nop			; (mov r0, r0)
   1b3f8:	add	sp, fp, #0
   1b3fc:	pop	{fp}		; (ldr fp, [sp], #4)
   1b400:	bx	lr
   1b404:	andeq	r5, r1, ip, asr #20
   1b408:	push	{fp, lr}
   1b40c:	add	fp, sp, #4
   1b410:	sub	sp, sp, #16
   1b414:	str	r0, [fp, #-16]
   1b418:	ldr	r1, [fp, #-16]
   1b41c:	mov	r0, #1
   1b420:	bl	113f4 <calloc@plt>
   1b424:	mov	r3, r0
   1b428:	str	r3, [fp, #-8]
   1b42c:	ldr	r3, [fp, #-8]
   1b430:	cmp	r3, #0
   1b434:	moveq	r3, #1
   1b438:	movne	r3, #0
   1b43c:	uxtb	r3, r3
   1b440:	cmp	r3, #0
   1b444:	beq	1b44c <sprintf@plt+0x9d58>
   1b448:	bl	115c8 <rb_outofmemory@plt>
   1b44c:	ldr	r3, [fp, #-8]
   1b450:	mov	r0, r3
   1b454:	sub	sp, fp, #4
   1b458:	pop	{fp, pc}
   1b45c:	push	{fp, lr}
   1b460:	add	fp, sp, #4
   1b464:	sub	sp, sp, #8
   1b468:	str	r0, [fp, #-8]
   1b46c:	ldr	r3, [fp, #-8]
   1b470:	cmp	r3, #0
   1b474:	movne	r3, #1
   1b478:	moveq	r3, #0
   1b47c:	uxtb	r3, r3
   1b480:	cmp	r3, #0
   1b484:	beq	1b490 <sprintf@plt+0x9d9c>
   1b488:	ldr	r0, [fp, #-8]
   1b48c:	bl	11490 <free@plt>
   1b490:	nop			; (mov r0, r0)
   1b494:	sub	sp, fp, #4
   1b498:	pop	{fp, pc}
   1b49c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b4a0:	add	fp, sp, #0
   1b4a4:	sub	sp, sp, #12
   1b4a8:	str	r0, [fp, #-8]
   1b4ac:	ldr	r3, [fp, #-8]
   1b4b0:	ldr	r3, [r3, #460]	; 0x1cc
   1b4b4:	add	r2, r3, #1
   1b4b8:	ldr	r3, [fp, #-8]
   1b4bc:	str	r2, [r3, #460]	; 0x1cc
   1b4c0:	nop			; (mov r0, r0)
   1b4c4:	add	sp, fp, #0
   1b4c8:	pop	{fp}		; (ldr fp, [sp], #4)
   1b4cc:	bx	lr
   1b4d0:	push	{fp, lr}
   1b4d4:	add	fp, sp, #4
   1b4d8:	sub	sp, sp, #8
   1b4dc:	str	r0, [fp, #-8]
   1b4e0:	ldr	r3, [fp, #-8]
   1b4e4:	ldr	r3, [r3, #460]	; 0x1cc
   1b4e8:	sub	r2, r3, #1
   1b4ec:	ldr	r3, [fp, #-8]
   1b4f0:	str	r2, [r3, #460]	; 0x1cc
   1b4f4:	ldr	r3, [fp, #-8]
   1b4f8:	ldr	r3, [r3, #460]	; 0x1cc
   1b4fc:	cmp	r3, #0
   1b500:	bne	1b50c <sprintf@plt+0x9e18>
   1b504:	ldr	r0, [fp, #-8]
   1b508:	bl	1370c <sprintf@plt+0x2018>
   1b50c:	nop			; (mov r0, r0)
   1b510:	sub	sp, fp, #4
   1b514:	pop	{fp, pc}
   1b518:	push	{fp}		; (str fp, [sp, #-4]!)
   1b51c:	add	fp, sp, #0
   1b520:	sub	sp, sp, #12
   1b524:	str	r0, [fp, #-8]
   1b528:	str	r1, [fp, #-12]
   1b52c:	ldr	r3, [fp, #-8]
   1b530:	ldr	r2, [r3, #464]	; 0x1d0
   1b534:	ldr	r3, [fp, #-12]
   1b538:	lsl	r3, r3, #4
   1b53c:	add	r3, r2, r3
   1b540:	ldr	r3, [r3, #8]
   1b544:	mov	r0, r3
   1b548:	add	sp, fp, #0
   1b54c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b550:	bx	lr
   1b554:	push	{fp}		; (str fp, [sp, #-4]!)
   1b558:	add	fp, sp, #0
   1b55c:	sub	sp, sp, #20
   1b560:	str	r0, [fp, #-8]
   1b564:	str	r1, [fp, #-12]
   1b568:	str	r2, [fp, #-16]
   1b56c:	ldr	r3, [fp, #-8]
   1b570:	ldr	r2, [r3, #464]	; 0x1d0
   1b574:	ldr	r3, [fp, #-12]
   1b578:	lsl	r3, r3, #4
   1b57c:	add	r3, r2, r3
   1b580:	ldr	r2, [fp, #-16]
   1b584:	str	r2, [r3, #8]
   1b588:	nop			; (mov r0, r0)
   1b58c:	add	sp, fp, #0
   1b590:	pop	{fp}		; (ldr fp, [sp], #4)
   1b594:	bx	lr
   1b598:	push	{r4, fp, lr}
   1b59c:	add	fp, sp, #8
   1b5a0:	sub	sp, sp, #20
   1b5a4:	str	r0, [fp, #-16]
   1b5a8:	str	r1, [fp, #-20]	; 0xffffffec
   1b5ac:	str	r2, [fp, #-24]	; 0xffffffe8
   1b5b0:	ldr	r3, [fp, #-16]
   1b5b4:	ldr	r2, [r3, #464]	; 0x1d0
   1b5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5bc:	lsl	r3, r3, #4
   1b5c0:	add	r4, r2, r3
   1b5c4:	bl	114fc <rb_current_time@plt>
   1b5c8:	mov	r2, r0
   1b5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5d0:	add	r3, r2, r3
   1b5d4:	str	r3, [r4, #4]
   1b5d8:	nop			; (mov r0, r0)
   1b5dc:	sub	sp, fp, #8
   1b5e0:	pop	{r4, fp, pc}
   1b5e4:	push	{fp}		; (str fp, [sp, #-4]!)
   1b5e8:	add	fp, sp, #0
   1b5ec:	sub	sp, sp, #20
   1b5f0:	str	r0, [fp, #-8]
   1b5f4:	str	r1, [fp, #-12]
   1b5f8:	str	r2, [fp, #-16]
   1b5fc:	ldr	r3, [fp, #-8]
   1b600:	ldr	r2, [r3, #464]	; 0x1d0
   1b604:	ldr	r3, [fp, #-12]
   1b608:	lsl	r3, r3, #4
   1b60c:	add	r3, r2, r3
   1b610:	ldr	r2, [fp, #-16]
   1b614:	str	r2, [r3, #4]
   1b618:	nop			; (mov r0, r0)
   1b61c:	add	sp, fp, #0
   1b620:	pop	{fp}		; (ldr fp, [sp], #4)
   1b624:	bx	lr
   1b628:	push	{fp, lr}
   1b62c:	add	fp, sp, #4
   1b630:	sub	sp, sp, #24
   1b634:	str	r0, [fp, #-16]
   1b638:	str	r2, [fp, #-24]	; 0xffffffe8
   1b63c:	str	r3, [fp, #-28]	; 0xffffffe4
   1b640:	mov	r3, r1
   1b644:	strb	r3, [fp, #-17]	; 0xffffffef
   1b648:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b64c:	str	r3, [fp, #-8]
   1b650:	ldr	r3, [fp, #-16]
   1b654:	cmp	r3, #0
   1b658:	beq	1b670 <sprintf@plt+0x9f7c>
   1b65c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1b660:	eor	r3, r3, #1
   1b664:	uxtb	r3, r3
   1b668:	cmp	r3, #0
   1b66c:	beq	1b680 <sprintf@plt+0x9f8c>
   1b670:	mov	r1, #1
   1b674:	ldr	r0, [fp, #-8]
   1b678:	bl	1b6d0 <sprintf@plt+0x9fdc>
   1b67c:	b	1b6c4 <sprintf@plt+0x9fd0>
   1b680:	ldr	r0, [fp, #-16]
   1b684:	bl	114f0 <strlen@plt>
   1b688:	mov	r3, r0
   1b68c:	cmp	r3, #63	; 0x3f
   1b690:	bls	1b6a4 <sprintf@plt+0x9fb0>
   1b694:	mov	r1, #2
   1b698:	ldr	r0, [fp, #-8]
   1b69c:	bl	1b6d0 <sprintf@plt+0x9fdc>
   1b6a0:	b	1b6c4 <sprintf@plt+0x9fd0>
   1b6a4:	ldr	r3, [fp, #-8]
   1b6a8:	add	r3, r3, #376	; 0x178
   1b6ac:	mov	r2, #64	; 0x40
   1b6b0:	ldr	r1, [fp, #-16]
   1b6b4:	mov	r0, r3
   1b6b8:	bl	1146c <rb_strlcpy@plt>
   1b6bc:	ldr	r0, [fp, #-8]
   1b6c0:	bl	1b7d0 <sprintf@plt+0xa0dc>
   1b6c4:	nop			; (mov r0, r0)
   1b6c8:	sub	sp, fp, #4
   1b6cc:	pop	{fp, pc}
   1b6d0:	push	{r4, fp, lr}
   1b6d4:	add	fp, sp, #8
   1b6d8:	sub	sp, sp, #20
   1b6dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b6e0:	str	r1, [fp, #-28]	; 0xffffffe4
   1b6e4:	ldr	r4, [pc, #212]	; 1b7c0 <sprintf@plt+0xa0cc>
   1b6e8:	add	r4, pc, r4
   1b6ec:	ldr	r3, [pc, #208]	; 1b7c4 <sprintf@plt+0xa0d0>
   1b6f0:	ldr	r3, [r4, r3]
   1b6f4:	ldr	r3, [r3, #12]
   1b6f8:	mov	r1, r3
   1b6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b700:	bl	1b518 <sprintf@plt+0x9e24>
   1b704:	str	r0, [fp, #-16]
   1b708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b70c:	add	r3, r3, #376	; 0x178
   1b710:	mov	r2, #64	; 0x40
   1b714:	ldr	r1, [pc, #172]	; 1b7c8 <sprintf@plt+0xa0d4>
   1b718:	add	r1, pc, r1
   1b71c:	mov	r0, r3
   1b720:	bl	1146c <rb_strlcpy@plt>
   1b724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b728:	ldr	r0, [r3]
   1b72c:	ldr	r3, [pc, #152]	; 1b7cc <sprintf@plt+0xa0d8>
   1b730:	add	r3, pc, r3
   1b734:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b738:	ldr	r3, [r3, r2, lsl #2]
   1b73c:	mov	r1, r3
   1b740:	bl	129e8 <sprintf@plt+0x12f4>
   1b744:	ldr	r3, [fp, #-16]
   1b748:	ldr	r3, [r3]
   1b74c:	mov	r0, r3
   1b750:	bl	121cc <sprintf@plt+0xad8>
   1b754:	ldr	r0, [fp, #-16]
   1b758:	bl	1b45c <sprintf@plt+0x9d68>
   1b75c:	ldr	r3, [pc, #96]	; 1b7c4 <sprintf@plt+0xa0d0>
   1b760:	ldr	r3, [r4, r3]
   1b764:	ldr	r3, [r3, #12]
   1b768:	mov	r2, #0
   1b76c:	mov	r1, r3
   1b770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b774:	bl	1b554 <sprintf@plt+0x9e60>
   1b778:	ldr	r3, [pc, #68]	; 1b7c4 <sprintf@plt+0xa0d0>
   1b77c:	ldr	r3, [r4, r3]
   1b780:	ldr	r3, [r3, #12]
   1b784:	mov	r2, #0
   1b788:	mov	r1, r3
   1b78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b790:	bl	1b5e4 <sprintf@plt+0x9ef0>
   1b794:	ldr	r3, [pc, #40]	; 1b7c4 <sprintf@plt+0xa0d0>
   1b798:	ldr	r3, [r4, r3]
   1b79c:	ldr	r3, [r3, #12]
   1b7a0:	mov	r1, r3
   1b7a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7a8:	bl	13844 <sprintf@plt+0x2150>
   1b7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7b0:	bl	1b4d0 <sprintf@plt+0x9ddc>
   1b7b4:	nop			; (mov r0, r0)
   1b7b8:	sub	sp, fp, #8
   1b7bc:	pop	{r4, fp, pc}
   1b7c0:	andeq	r4, r1, r0, lsl r9
   1b7c4:	andeq	r0, r0, ip, ror r1
   1b7c8:	andeq	r3, r0, ip, lsr #28
   1b7cc:	andeq	r5, r1, r4, lsl #15
   1b7d0:	push	{r4, fp, lr}
   1b7d4:	add	fp, sp, #8
   1b7d8:	sub	sp, sp, #20
   1b7dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7e0:	ldr	r4, [pc, #188]	; 1b8a4 <sprintf@plt+0xa1b0>
   1b7e4:	add	r4, pc, r4
   1b7e8:	ldr	r3, [pc, #184]	; 1b8a8 <sprintf@plt+0xa1b4>
   1b7ec:	ldr	r3, [r4, r3]
   1b7f0:	ldr	r3, [r3, #12]
   1b7f4:	mov	r1, r3
   1b7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7fc:	bl	1b518 <sprintf@plt+0x9e24>
   1b800:	str	r0, [fp, #-16]
   1b804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b808:	ldr	r0, [r3]
   1b80c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b810:	add	r3, r3, #376	; 0x178
   1b814:	mov	r2, r3
   1b818:	ldr	r3, [pc, #140]	; 1b8ac <sprintf@plt+0xa1b8>
   1b81c:	add	r3, pc, r3
   1b820:	mov	r1, r3
   1b824:	bl	129e8 <sprintf@plt+0x12f4>
   1b828:	ldr	r3, [fp, #-16]
   1b82c:	ldr	r3, [r3]
   1b830:	mov	r0, r3
   1b834:	bl	121cc <sprintf@plt+0xad8>
   1b838:	ldr	r0, [fp, #-16]
   1b83c:	bl	1b45c <sprintf@plt+0x9d68>
   1b840:	ldr	r3, [pc, #96]	; 1b8a8 <sprintf@plt+0xa1b4>
   1b844:	ldr	r3, [r4, r3]
   1b848:	ldr	r3, [r3, #12]
   1b84c:	mov	r2, #0
   1b850:	mov	r1, r3
   1b854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b858:	bl	1b554 <sprintf@plt+0x9e60>
   1b85c:	ldr	r3, [pc, #68]	; 1b8a8 <sprintf@plt+0xa1b4>
   1b860:	ldr	r3, [r4, r3]
   1b864:	ldr	r3, [r3, #12]
   1b868:	mov	r2, #0
   1b86c:	mov	r1, r3
   1b870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b874:	bl	1b5e4 <sprintf@plt+0x9ef0>
   1b878:	ldr	r3, [pc, #40]	; 1b8a8 <sprintf@plt+0xa1b4>
   1b87c:	ldr	r3, [r4, r3]
   1b880:	ldr	r3, [r3, #12]
   1b884:	mov	r1, r3
   1b888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b88c:	bl	13844 <sprintf@plt+0x2150>
   1b890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b894:	bl	1b4d0 <sprintf@plt+0x9ddc>
   1b898:	nop			; (mov r0, r0)
   1b89c:	sub	sp, fp, #8
   1b8a0:	pop	{r4, fp, pc}
   1b8a4:	andeq	r4, r1, r4, lsl r8
   1b8a8:	andeq	r0, r0, ip, ror r1
   1b8ac:	andeq	r3, r0, ip, lsr #26
   1b8b0:	push	{r4, fp, lr}
   1b8b4:	add	fp, sp, #8
   1b8b8:	sub	sp, sp, #20
   1b8bc:	ldr	r4, [pc, #164]	; 1b968 <sprintf@plt+0xa274>
   1b8c0:	add	r4, pc, r4
   1b8c4:	ldr	r3, [pc, #160]	; 1b96c <sprintf@plt+0xa278>
   1b8c8:	ldr	r3, [r4, r3]
   1b8cc:	ldr	r3, [r3]
   1b8d0:	sub	r2, fp, #24
   1b8d4:	mov	r1, r2
   1b8d8:	mov	r0, r3
   1b8dc:	bl	114cc <rb_dictionary_foreach_start@plt>
   1b8e0:	b	1b930 <sprintf@plt+0xa23c>
   1b8e4:	ldr	r3, [pc, #132]	; 1b970 <sprintf@plt+0xa27c>
   1b8e8:	ldr	r3, [r4, r3]
   1b8ec:	ldr	r3, [r3, #12]
   1b8f0:	mov	r1, r3
   1b8f4:	ldr	r0, [fp, #-16]
   1b8f8:	bl	1b518 <sprintf@plt+0x9e24>
   1b8fc:	mov	r3, r0
   1b900:	cmp	r3, #0
   1b904:	beq	1b914 <sprintf@plt+0xa220>
   1b908:	mov	r1, #1
   1b90c:	ldr	r0, [fp, #-16]
   1b910:	bl	1b6d0 <sprintf@plt+0x9fdc>
   1b914:	ldr	r3, [pc, #80]	; 1b96c <sprintf@plt+0xa278>
   1b918:	ldr	r3, [r4, r3]
   1b91c:	ldr	r3, [r3]
   1b920:	sub	r2, fp, #24
   1b924:	mov	r1, r2
   1b928:	mov	r0, r3
   1b92c:	bl	11484 <rb_dictionary_foreach_next@plt>
   1b930:	ldr	r3, [pc, #52]	; 1b96c <sprintf@plt+0xa278>
   1b934:	ldr	r3, [r4, r3]
   1b938:	ldr	r3, [r3]
   1b93c:	sub	r2, fp, #24
   1b940:	mov	r1, r2
   1b944:	mov	r0, r3
   1b948:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1b94c:	str	r0, [fp, #-16]
   1b950:	ldr	r3, [fp, #-16]
   1b954:	cmp	r3, #0
   1b958:	bne	1b8e4 <sprintf@plt+0xa1f0>
   1b95c:	nop			; (mov r0, r0)
   1b960:	sub	sp, fp, #8
   1b964:	pop	{r4, fp, pc}
   1b968:	andeq	r4, r1, r8, lsr r7
   1b96c:	andeq	r0, r0, ip, ror #2
   1b970:	andeq	r0, r0, ip, ror r1
   1b974:	push	{r4, fp, lr}
   1b978:	add	fp, sp, #8
   1b97c:	sub	sp, sp, #20
   1b980:	str	r0, [fp, #-24]	; 0xffffffe8
   1b984:	ldr	r4, [pc, #172]	; 1ba38 <sprintf@plt+0xa344>
   1b988:	add	r4, pc, r4
   1b98c:	mov	r0, #4
   1b990:	bl	1b408 <sprintf@plt+0x9d14>
   1b994:	str	r0, [fp, #-16]
   1b998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b99c:	bl	1b49c <sprintf@plt+0x9da8>
   1b9a0:	ldr	r3, [pc, #148]	; 1ba3c <sprintf@plt+0xa348>
   1b9a4:	ldr	r3, [r4, r3]
   1b9a8:	ldr	r3, [r3, #12]
   1b9ac:	ldr	r2, [fp, #-16]
   1b9b0:	mov	r1, r3
   1b9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9b8:	bl	1b554 <sprintf@plt+0x9e60>
   1b9bc:	ldr	r3, [pc, #120]	; 1ba3c <sprintf@plt+0xa348>
   1b9c0:	ldr	r3, [r4, r3]
   1b9c4:	ldr	r1, [r3, #12]
   1b9c8:	ldr	r3, [pc, #112]	; 1ba40 <sprintf@plt+0xa34c>
   1b9cc:	add	r3, pc, r3
   1b9d0:	ldr	r3, [r3]
   1b9d4:	mov	r2, r3
   1b9d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9dc:	bl	1b598 <sprintf@plt+0x9ea4>
   1b9e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b9e4:	add	r3, r3, #192	; 0xc0
   1b9e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b9ec:	ldr	r1, [pc, #80]	; 1ba44 <sprintf@plt+0xa350>
   1b9f0:	add	r1, pc, r1
   1b9f4:	mov	r0, r3
   1b9f8:	bl	12088 <sprintf@plt+0x994>
   1b9fc:	mov	r2, r0
   1ba00:	ldr	r3, [fp, #-16]
   1ba04:	str	r2, [r3]
   1ba08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba0c:	ldr	r2, [r3]
   1ba10:	ldr	r3, [pc, #48]	; 1ba48 <sprintf@plt+0xa354>
   1ba14:	add	r3, pc, r3
   1ba18:	ldr	r3, [r3]
   1ba1c:	mov	r1, r3
   1ba20:	mov	r0, r2
   1ba24:	bl	129e8 <sprintf@plt+0x12f4>
   1ba28:	mov	r3, #1
   1ba2c:	mov	r0, r3
   1ba30:	sub	sp, fp, #8
   1ba34:	pop	{r4, fp, pc}
   1ba38:	andeq	r4, r1, r0, ror r6
   1ba3c:	andeq	r0, r0, ip, ror r1
   1ba40:	andeq	r5, r1, r4, ror #9
   1ba44:			; <UNDEFINED> instruction: 0xfffffc30
   1ba48:	andeq	r5, r1, r0, lsr #9
   1ba4c:	push	{fp, lr}
   1ba50:	add	fp, sp, #4
   1ba54:	sub	sp, sp, #16
   1ba58:	str	r0, [fp, #-16]
   1ba5c:	ldr	r2, [pc, #64]	; 1baa4 <sprintf@plt+0xa3b0>
   1ba60:	add	r2, pc, r2
   1ba64:	ldr	r3, [pc, #60]	; 1baa8 <sprintf@plt+0xa3b4>
   1ba68:	ldr	r3, [r2, r3]
   1ba6c:	ldr	r3, [r3, #12]
   1ba70:	mov	r1, r3
   1ba74:	ldr	r0, [fp, #-16]
   1ba78:	bl	1b518 <sprintf@plt+0x9e24>
   1ba7c:	str	r0, [fp, #-8]
   1ba80:	ldr	r3, [fp, #-8]
   1ba84:	cmp	r3, #0
   1ba88:	beq	1ba98 <sprintf@plt+0xa3a4>
   1ba8c:	mov	r1, #1
   1ba90:	ldr	r0, [fp, #-16]
   1ba94:	bl	1b6d0 <sprintf@plt+0x9fdc>
   1ba98:	nop			; (mov r0, r0)
   1ba9c:	sub	sp, fp, #4
   1baa0:	pop	{fp, pc}
   1baa4:	muleq	r1, r8, r5
   1baa8:	andeq	r0, r0, ip, ror r1
   1baac:	push	{fp, lr}
   1bab0:	add	fp, sp, #4
   1bab4:	sub	sp, sp, #24
   1bab8:	str	r0, [fp, #-16]
   1babc:	str	r1, [fp, #-20]	; 0xffffffec
   1bac0:	str	r2, [fp, #-24]	; 0xffffffe8
   1bac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bac8:	ldr	r3, [r3]
   1bacc:	mov	r0, r3
   1bad0:	bl	11568 <atoi@plt>
   1bad4:	str	r0, [fp, #-8]
   1bad8:	ldr	r3, [fp, #-8]
   1badc:	cmp	r3, #0
   1bae0:	bge	1bb04 <sprintf@plt+0xa410>
   1bae4:	ldr	r2, [fp, #-8]
   1bae8:	ldr	r3, [pc, #48]	; 1bb20 <sprintf@plt+0xa42c>
   1baec:	add	r3, pc, r3
   1baf0:	mov	r1, r3
   1baf4:	mov	r0, #67	; 0x43
   1baf8:	bl	12a60 <sprintf@plt+0x136c>
   1bafc:	mov	r0, #3
   1bb00:	bl	116dc <exit@plt>
   1bb04:	ldr	r3, [pc, #24]	; 1bb24 <sprintf@plt+0xa430>
   1bb08:	add	r3, pc, r3
   1bb0c:	ldr	r2, [fp, #-8]
   1bb10:	str	r2, [r3]
   1bb14:	nop			; (mov r0, r0)
   1bb18:	sub	sp, fp, #4
   1bb1c:	pop	{fp, pc}
   1bb20:	andeq	r3, r0, r8, ror sl
   1bb24:	andeq	r5, r1, r8, lsr #7
   1bb28:	push	{fp, lr}
   1bb2c:	add	fp, sp, #4
   1bb30:	sub	sp, sp, #16
   1bb34:	str	r0, [fp, #-8]
   1bb38:	str	r1, [fp, #-12]
   1bb3c:	str	r2, [fp, #-16]
   1bb40:	ldr	r3, [fp, #-8]
   1bb44:	cmp	r3, #0
   1bb48:	bne	1bb6c <sprintf@plt+0xa478>
   1bb4c:	ldr	r3, [pc, #260]	; 1bc58 <sprintf@plt+0xa564>
   1bb50:	add	r3, pc, r3
   1bb54:	mov	r2, #143	; 0x8f
   1bb58:	ldr	r1, [pc, #252]	; 1bc5c <sprintf@plt+0xa568>
   1bb5c:	add	r1, pc, r1
   1bb60:	ldr	r0, [pc, #248]	; 1bc60 <sprintf@plt+0xa56c>
   1bb64:	add	r0, pc, r0
   1bb68:	bl	11460 <__assert_fail@plt>
   1bb6c:	ldr	r3, [fp, #-12]
   1bb70:	cmp	r3, #0
   1bb74:	bne	1bb98 <sprintf@plt+0xa4a4>
   1bb78:	ldr	r3, [pc, #228]	; 1bc64 <sprintf@plt+0xa570>
   1bb7c:	add	r3, pc, r3
   1bb80:	mov	r2, #144	; 0x90
   1bb84:	ldr	r1, [pc, #220]	; 1bc68 <sprintf@plt+0xa574>
   1bb88:	add	r1, pc, r1
   1bb8c:	ldr	r0, [pc, #216]	; 1bc6c <sprintf@plt+0xa578>
   1bb90:	add	r0, pc, r0
   1bb94:	bl	11460 <__assert_fail@plt>
   1bb98:	ldr	r3, [fp, #-16]
   1bb9c:	cmp	r3, #0
   1bba0:	bne	1bbc4 <sprintf@plt+0xa4d0>
   1bba4:	ldr	r3, [pc, #196]	; 1bc70 <sprintf@plt+0xa57c>
   1bba8:	add	r3, pc, r3
   1bbac:	mov	r2, #145	; 0x91
   1bbb0:	ldr	r1, [pc, #188]	; 1bc74 <sprintf@plt+0xa580>
   1bbb4:	add	r1, pc, r1
   1bbb8:	ldr	r0, [pc, #184]	; 1bc78 <sprintf@plt+0xa584>
   1bbbc:	add	r0, pc, r0
   1bbc0:	bl	11460 <__assert_fail@plt>
   1bbc4:	ldr	r3, [fp, #-12]
   1bbc8:	ldr	r2, [fp, #-8]
   1bbcc:	str	r2, [r3]
   1bbd0:	ldr	r3, [fp, #-12]
   1bbd4:	mov	r2, #0
   1bbd8:	str	r2, [r3, #4]
   1bbdc:	ldr	r3, [fp, #-16]
   1bbe0:	ldr	r2, [r3]
   1bbe4:	ldr	r3, [fp, #-12]
   1bbe8:	str	r2, [r3, #8]
   1bbec:	ldr	r3, [fp, #-16]
   1bbf0:	ldr	r3, [r3]
   1bbf4:	cmp	r3, #0
   1bbf8:	beq	1bc10 <sprintf@plt+0xa51c>
   1bbfc:	ldr	r3, [fp, #-16]
   1bc00:	ldr	r3, [r3]
   1bc04:	ldr	r2, [fp, #-12]
   1bc08:	str	r2, [r3, #4]
   1bc0c:	b	1bc2c <sprintf@plt+0xa538>
   1bc10:	ldr	r3, [fp, #-16]
   1bc14:	ldr	r3, [r3, #4]
   1bc18:	cmp	r3, #0
   1bc1c:	bne	1bc2c <sprintf@plt+0xa538>
   1bc20:	ldr	r3, [fp, #-16]
   1bc24:	ldr	r2, [fp, #-12]
   1bc28:	str	r2, [r3, #4]
   1bc2c:	ldr	r3, [fp, #-16]
   1bc30:	ldr	r2, [fp, #-12]
   1bc34:	str	r2, [r3]
   1bc38:	ldr	r3, [fp, #-16]
   1bc3c:	ldr	r3, [r3, #8]
   1bc40:	add	r2, r3, #1
   1bc44:	ldr	r3, [fp, #-16]
   1bc48:	str	r2, [r3, #8]
   1bc4c:	nop			; (mov r0, r0)
   1bc50:	sub	sp, fp, #4
   1bc54:	pop	{fp, pc}
   1bc58:	muleq	r0, r8, lr
   1bc5c:	andeq	r3, r0, r4, asr #20
   1bc60:	andeq	r3, r0, r8, asr sl
   1bc64:	andeq	r3, r0, ip, ror #28
   1bc68:	andeq	r3, r0, r8, lsl sl
   1bc6c:	andeq	r3, r0, ip, lsr sl
   1bc70:	andeq	r3, r0, r0, asr #28
   1bc74:	andeq	r3, r0, ip, ror #19
   1bc78:	andeq	r3, r0, ip, lsl sl
   1bc7c:	push	{fp, lr}
   1bc80:	add	fp, sp, #4
   1bc84:	sub	sp, sp, #8
   1bc88:	str	r0, [fp, #-8]
   1bc8c:	str	r1, [fp, #-12]
   1bc90:	ldr	r3, [fp, #-8]
   1bc94:	cmp	r3, #0
   1bc98:	bne	1bcbc <sprintf@plt+0xa5c8>
   1bc9c:	ldr	r3, [pc, #240]	; 1bd94 <sprintf@plt+0xa6a0>
   1bca0:	add	r3, pc, r3
   1bca4:	mov	r2, #235	; 0xeb
   1bca8:	ldr	r1, [pc, #232]	; 1bd98 <sprintf@plt+0xa6a4>
   1bcac:	add	r1, pc, r1
   1bcb0:	ldr	r0, [pc, #228]	; 1bd9c <sprintf@plt+0xa6a8>
   1bcb4:	add	r0, pc, r0
   1bcb8:	bl	11460 <__assert_fail@plt>
   1bcbc:	ldr	r3, [fp, #-12]
   1bcc0:	cmp	r3, #0
   1bcc4:	bne	1bce8 <sprintf@plt+0xa5f4>
   1bcc8:	ldr	r3, [pc, #208]	; 1bda0 <sprintf@plt+0xa6ac>
   1bccc:	add	r3, pc, r3
   1bcd0:	mov	r2, #236	; 0xec
   1bcd4:	ldr	r1, [pc, #200]	; 1bda4 <sprintf@plt+0xa6b0>
   1bcd8:	add	r1, pc, r1
   1bcdc:	ldr	r0, [pc, #196]	; 1bda8 <sprintf@plt+0xa6b4>
   1bce0:	add	r0, pc, r0
   1bce4:	bl	11460 <__assert_fail@plt>
   1bce8:	ldr	r3, [fp, #-8]
   1bcec:	ldr	r3, [r3, #8]
   1bcf0:	cmp	r3, #0
   1bcf4:	beq	1bd10 <sprintf@plt+0xa61c>
   1bcf8:	ldr	r3, [fp, #-8]
   1bcfc:	ldr	r3, [r3, #8]
   1bd00:	ldr	r2, [fp, #-8]
   1bd04:	ldr	r2, [r2, #4]
   1bd08:	str	r2, [r3, #4]
   1bd0c:	b	1bd20 <sprintf@plt+0xa62c>
   1bd10:	ldr	r3, [fp, #-8]
   1bd14:	ldr	r2, [r3, #4]
   1bd18:	ldr	r3, [fp, #-12]
   1bd1c:	str	r2, [r3, #4]
   1bd20:	ldr	r3, [fp, #-8]
   1bd24:	ldr	r3, [r3, #4]
   1bd28:	cmp	r3, #0
   1bd2c:	beq	1bd48 <sprintf@plt+0xa654>
   1bd30:	ldr	r3, [fp, #-8]
   1bd34:	ldr	r3, [r3, #4]
   1bd38:	ldr	r2, [fp, #-8]
   1bd3c:	ldr	r2, [r2, #8]
   1bd40:	str	r2, [r3, #8]
   1bd44:	b	1bd58 <sprintf@plt+0xa664>
   1bd48:	ldr	r3, [fp, #-8]
   1bd4c:	ldr	r2, [r3, #8]
   1bd50:	ldr	r3, [fp, #-12]
   1bd54:	str	r2, [r3]
   1bd58:	ldr	r3, [fp, #-8]
   1bd5c:	mov	r2, #0
   1bd60:	str	r2, [r3, #4]
   1bd64:	ldr	r3, [fp, #-8]
   1bd68:	ldr	r2, [r3, #4]
   1bd6c:	ldr	r3, [fp, #-8]
   1bd70:	str	r2, [r3, #8]
   1bd74:	ldr	r3, [fp, #-12]
   1bd78:	ldr	r3, [r3, #8]
   1bd7c:	sub	r2, r3, #1
   1bd80:	ldr	r3, [fp, #-12]
   1bd84:	str	r2, [r3, #8]
   1bd88:	nop			; (mov r0, r0)
   1bd8c:	sub	sp, fp, #4
   1bd90:	pop	{fp, pc}
   1bd94:	andeq	r3, r0, r8, lsr sp
   1bd98:	strdeq	r3, [r0], -r4
   1bd9c:	andeq	r3, r0, r8, lsl r9
   1bda0:	andeq	r3, r0, ip, lsl #26
   1bda4:	andeq	r3, r0, r8, asr #17
   1bda8:	strdeq	r3, [r0], -r8
   1bdac:	push	{fp, lr}
   1bdb0:	add	fp, sp, #4
   1bdb4:	sub	sp, sp, #16
   1bdb8:	str	r0, [fp, #-16]
   1bdbc:	ldr	r1, [fp, #-16]
   1bdc0:	mov	r0, #1
   1bdc4:	bl	113f4 <calloc@plt>
   1bdc8:	mov	r3, r0
   1bdcc:	str	r3, [fp, #-8]
   1bdd0:	ldr	r3, [fp, #-8]
   1bdd4:	cmp	r3, #0
   1bdd8:	moveq	r3, #1
   1bddc:	movne	r3, #0
   1bde0:	uxtb	r3, r3
   1bde4:	cmp	r3, #0
   1bde8:	beq	1bdf0 <sprintf@plt+0xa6fc>
   1bdec:	bl	115c8 <rb_outofmemory@plt>
   1bdf0:	ldr	r3, [fp, #-8]
   1bdf4:	mov	r0, r3
   1bdf8:	sub	sp, fp, #4
   1bdfc:	pop	{fp, pc}
   1be00:	push	{fp, lr}
   1be04:	add	fp, sp, #4
   1be08:	sub	sp, sp, #8
   1be0c:	str	r0, [fp, #-8]
   1be10:	ldr	r3, [fp, #-8]
   1be14:	cmp	r3, #0
   1be18:	movne	r3, #1
   1be1c:	moveq	r3, #0
   1be20:	uxtb	r3, r3
   1be24:	cmp	r3, #0
   1be28:	beq	1be34 <sprintf@plt+0xa740>
   1be2c:	ldr	r0, [fp, #-8]
   1be30:	bl	11490 <free@plt>
   1be34:	nop			; (mov r0, r0)
   1be38:	sub	sp, fp, #4
   1be3c:	pop	{fp, pc}
   1be40:	push	{fp}		; (str fp, [sp, #-4]!)
   1be44:	add	fp, sp, #0
   1be48:	sub	sp, sp, #12
   1be4c:	str	r0, [fp, #-8]
   1be50:	ldr	r3, [fp, #-8]
   1be54:	ldr	r3, [r3, #460]	; 0x1cc
   1be58:	add	r2, r3, #1
   1be5c:	ldr	r3, [fp, #-8]
   1be60:	str	r2, [r3, #460]	; 0x1cc
   1be64:	nop			; (mov r0, r0)
   1be68:	add	sp, fp, #0
   1be6c:	pop	{fp}		; (ldr fp, [sp], #4)
   1be70:	bx	lr
   1be74:	push	{fp, lr}
   1be78:	add	fp, sp, #4
   1be7c:	sub	sp, sp, #8
   1be80:	str	r0, [fp, #-8]
   1be84:	ldr	r3, [fp, #-8]
   1be88:	ldr	r3, [r3, #460]	; 0x1cc
   1be8c:	sub	r2, r3, #1
   1be90:	ldr	r3, [fp, #-8]
   1be94:	str	r2, [r3, #460]	; 0x1cc
   1be98:	ldr	r3, [fp, #-8]
   1be9c:	ldr	r3, [r3, #460]	; 0x1cc
   1bea0:	cmp	r3, #0
   1bea4:	bne	1beb0 <sprintf@plt+0xa7bc>
   1bea8:	ldr	r0, [fp, #-8]
   1beac:	bl	1370c <sprintf@plt+0x2018>
   1beb0:	nop			; (mov r0, r0)
   1beb4:	sub	sp, fp, #4
   1beb8:	pop	{fp, pc}
   1bebc:	push	{fp, lr}
   1bec0:	add	fp, sp, #4
   1bec4:	sub	sp, sp, #16
   1bec8:	str	r0, [fp, #-16]
   1becc:	ldr	r2, [pc, #112]	; 1bf44 <sprintf@plt+0xa850>
   1bed0:	add	r2, pc, r2
   1bed4:	ldr	r3, [pc, #108]	; 1bf48 <sprintf@plt+0xa854>
   1bed8:	ldr	r3, [r2, r3]
   1bedc:	ldr	r3, [r3]
   1bee0:	str	r3, [fp, #-8]
   1bee4:	b	1bf28 <sprintf@plt+0xa834>
   1bee8:	ldr	r3, [fp, #-8]
   1beec:	ldr	r3, [r3]
   1bef0:	str	r3, [fp, #-12]
   1bef4:	ldr	r3, [fp, #-12]
   1bef8:	ldr	r3, [r3, #16]
   1befc:	ldr	r1, [fp, #-16]
   1bf00:	mov	r0, r3
   1bf04:	bl	113e8 <strcasecmp@plt>
   1bf08:	mov	r3, r0
   1bf0c:	cmp	r3, #0
   1bf10:	bne	1bf1c <sprintf@plt+0xa828>
   1bf14:	ldr	r3, [fp, #-12]
   1bf18:	b	1bf38 <sprintf@plt+0xa844>
   1bf1c:	ldr	r3, [fp, #-8]
   1bf20:	ldr	r3, [r3, #8]
   1bf24:	str	r3, [fp, #-8]
   1bf28:	ldr	r3, [fp, #-8]
   1bf2c:	cmp	r3, #0
   1bf30:	bne	1bee8 <sprintf@plt+0xa7f4>
   1bf34:	mov	r3, #0
   1bf38:	mov	r0, r3
   1bf3c:	sub	sp, fp, #4
   1bf40:	pop	{fp, pc}
   1bf44:	andeq	r4, r1, r8, lsr #2
   1bf48:			; <UNDEFINED> instruction: 0x000001b4
   1bf4c:	push	{fp, lr}
   1bf50:	add	fp, sp, #4
   1bf54:	sub	sp, sp, #16
   1bf58:	str	r0, [fp, #-16]
   1bf5c:	str	r1, [fp, #-20]	; 0xffffffec
   1bf60:	ldr	r0, [fp, #-16]
   1bf64:	bl	1bebc <sprintf@plt+0xa7c8>
   1bf68:	str	r0, [fp, #-8]
   1bf6c:	ldr	r3, [fp, #-8]
   1bf70:	cmp	r3, #0
   1bf74:	beq	1bf90 <sprintf@plt+0xa89c>
   1bf78:	ldr	r3, [fp, #-8]
   1bf7c:	ldr	r2, [r3, #12]
   1bf80:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf84:	str	r2, [r3]
   1bf88:	mov	r3, #1
   1bf8c:	b	1bf94 <sprintf@plt+0xa8a0>
   1bf90:	mov	r3, #0
   1bf94:	mov	r0, r3
   1bf98:	sub	sp, fp, #4
   1bf9c:	pop	{fp, pc}
   1bfa0:	push	{fp}		; (str fp, [sp, #-4]!)
   1bfa4:	add	fp, sp, #0
   1bfa8:	sub	sp, sp, #12
   1bfac:	str	r0, [fp, #-8]
   1bfb0:	str	r1, [fp, #-12]
   1bfb4:	ldr	r3, [fp, #-8]
   1bfb8:	ldr	r2, [r3, #464]	; 0x1d0
   1bfbc:	ldr	r3, [fp, #-12]
   1bfc0:	lsl	r3, r3, #4
   1bfc4:	add	r3, r2, r3
   1bfc8:	ldr	r3, [r3, #12]
   1bfcc:	mov	r0, r3
   1bfd0:	add	sp, fp, #0
   1bfd4:	pop	{fp}		; (ldr fp, [sp], #4)
   1bfd8:	bx	lr
   1bfdc:	push	{fp, lr}
   1bfe0:	add	fp, sp, #4
   1bfe4:	sub	sp, sp, #16
   1bfe8:	str	r0, [fp, #-16]
   1bfec:	str	r1, [fp, #-20]	; 0xffffffec
   1bff0:	sub	r3, fp, #8
   1bff4:	mov	r1, r3
   1bff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bffc:	bl	1bf4c <sprintf@plt+0xa858>
   1c000:	mov	r3, r0
   1c004:	cmp	r3, #0
   1c008:	beq	1c034 <sprintf@plt+0xa940>
   1c00c:	ldr	r3, [fp, #-8]
   1c010:	mov	r1, r3
   1c014:	ldr	r0, [fp, #-16]
   1c018:	bl	1bfa0 <sprintf@plt+0xa8ac>
   1c01c:	mov	r3, r0
   1c020:	cmp	r3, #2
   1c024:	moveq	r3, #1
   1c028:	movne	r3, #0
   1c02c:	uxtb	r3, r3
   1c030:	b	1c038 <sprintf@plt+0xa944>
   1c034:	mov	r3, #1
   1c038:	mov	r0, r3
   1c03c:	sub	sp, fp, #4
   1c040:	pop	{fp, pc}
   1c044:	push	{fp}		; (str fp, [sp, #-4]!)
   1c048:	add	fp, sp, #0
   1c04c:	sub	sp, sp, #12
   1c050:	str	r0, [fp, #-8]
   1c054:	str	r1, [fp, #-12]
   1c058:	ldr	r3, [fp, #-8]
   1c05c:	ldr	r2, [r3, #464]	; 0x1d0
   1c060:	ldr	r3, [fp, #-12]
   1c064:	lsl	r3, r3, #4
   1c068:	add	r3, r2, r3
   1c06c:	ldr	r3, [r3, #8]
   1c070:	mov	r0, r3
   1c074:	add	sp, fp, #0
   1c078:	pop	{fp}		; (ldr fp, [sp], #4)
   1c07c:	bx	lr
   1c080:	push	{fp}		; (str fp, [sp, #-4]!)
   1c084:	add	fp, sp, #0
   1c088:	sub	sp, sp, #20
   1c08c:	str	r0, [fp, #-8]
   1c090:	str	r1, [fp, #-12]
   1c094:	str	r2, [fp, #-16]
   1c098:	ldr	r3, [fp, #-8]
   1c09c:	ldr	r2, [r3, #464]	; 0x1d0
   1c0a0:	ldr	r3, [fp, #-12]
   1c0a4:	lsl	r3, r3, #4
   1c0a8:	add	r3, r2, r3
   1c0ac:	ldr	r2, [fp, #-16]
   1c0b0:	str	r2, [r3, #8]
   1c0b4:	nop			; (mov r0, r0)
   1c0b8:	add	sp, fp, #0
   1c0bc:	pop	{fp}		; (ldr fp, [sp], #4)
   1c0c0:	bx	lr
   1c0c4:	push	{r4, fp, lr}
   1c0c8:	add	fp, sp, #8
   1c0cc:	sub	sp, sp, #20
   1c0d0:	str	r0, [fp, #-16]
   1c0d4:	str	r1, [fp, #-20]	; 0xffffffec
   1c0d8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c0dc:	ldr	r3, [fp, #-16]
   1c0e0:	ldr	r2, [r3, #464]	; 0x1d0
   1c0e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0e8:	lsl	r3, r3, #4
   1c0ec:	add	r4, r2, r3
   1c0f0:	bl	114fc <rb_current_time@plt>
   1c0f4:	mov	r2, r0
   1c0f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c0fc:	add	r3, r2, r3
   1c100:	str	r3, [r4, #4]
   1c104:	nop			; (mov r0, r0)
   1c108:	sub	sp, fp, #8
   1c10c:	pop	{r4, fp, pc}
   1c110:	push	{fp}		; (str fp, [sp, #-4]!)
   1c114:	add	fp, sp, #0
   1c118:	sub	sp, sp, #20
   1c11c:	str	r0, [fp, #-8]
   1c120:	str	r1, [fp, #-12]
   1c124:	str	r2, [fp, #-16]
   1c128:	ldr	r3, [fp, #-8]
   1c12c:	ldr	r2, [r3, #464]	; 0x1d0
   1c130:	ldr	r3, [fp, #-12]
   1c134:	lsl	r3, r3, #4
   1c138:	add	r3, r2, r3
   1c13c:	ldr	r2, [fp, #-16]
   1c140:	str	r2, [r3, #4]
   1c144:	nop			; (mov r0, r0)
   1c148:	add	sp, fp, #0
   1c14c:	pop	{fp}		; (ldr fp, [sp], #4)
   1c150:	bx	lr
   1c154:	push	{fp, lr}
   1c158:	add	fp, sp, #4
   1c15c:	sub	sp, sp, #8
   1c160:	str	r0, [fp, #-8]
   1c164:	ldr	r3, [pc, #168]	; 1c214 <sprintf@plt+0xab20>
   1c168:	add	r3, pc, r3
   1c16c:	mov	r1, r3
   1c170:	ldr	r0, [fp, #-8]
   1c174:	bl	113e8 <strcasecmp@plt>
   1c178:	mov	r3, r0
   1c17c:	cmp	r3, #0
   1c180:	bne	1c18c <sprintf@plt+0xaa98>
   1c184:	mov	r3, #1
   1c188:	b	1c208 <sprintf@plt+0xab14>
   1c18c:	ldr	r3, [pc, #132]	; 1c218 <sprintf@plt+0xab24>
   1c190:	add	r3, pc, r3
   1c194:	mov	r1, r3
   1c198:	ldr	r0, [fp, #-8]
   1c19c:	bl	113e8 <strcasecmp@plt>
   1c1a0:	mov	r3, r0
   1c1a4:	cmp	r3, #0
   1c1a8:	bne	1c1b4 <sprintf@plt+0xaac0>
   1c1ac:	mov	r3, #2
   1c1b0:	b	1c208 <sprintf@plt+0xab14>
   1c1b4:	ldr	r3, [pc, #96]	; 1c21c <sprintf@plt+0xab28>
   1c1b8:	add	r3, pc, r3
   1c1bc:	mov	r1, r3
   1c1c0:	ldr	r0, [fp, #-8]
   1c1c4:	bl	113e8 <strcasecmp@plt>
   1c1c8:	mov	r3, r0
   1c1cc:	cmp	r3, #0
   1c1d0:	bne	1c1dc <sprintf@plt+0xaae8>
   1c1d4:	mov	r3, #3
   1c1d8:	b	1c208 <sprintf@plt+0xab14>
   1c1dc:	ldr	r3, [pc, #60]	; 1c220 <sprintf@plt+0xab2c>
   1c1e0:	add	r3, pc, r3
   1c1e4:	mov	r1, r3
   1c1e8:	ldr	r0, [fp, #-8]
   1c1ec:	bl	113e8 <strcasecmp@plt>
   1c1f0:	mov	r3, r0
   1c1f4:	cmp	r3, #0
   1c1f8:	bne	1c204 <sprintf@plt+0xab10>
   1c1fc:	mov	r3, #4
   1c200:	b	1c208 <sprintf@plt+0xab14>
   1c204:	mov	r3, #0
   1c208:	mov	r0, r3
   1c20c:	sub	sp, fp, #4
   1c210:	pop	{fp, pc}
   1c214:	andeq	r3, r0, r0, lsl #9
   1c218:	andeq	r3, r0, r0, ror #8
   1c21c:	andeq	r3, r0, r0, asr #8
   1c220:	andeq	r3, r0, r4, lsr #8
   1c224:	push	{fp}		; (str fp, [sp, #-4]!)
   1c228:	add	fp, sp, #0
   1c22c:	sub	sp, sp, #20
   1c230:	str	r0, [fp, #-16]
   1c234:	mov	r3, r1
   1c238:	strh	r3, [fp, #-18]	; 0xffffffee
   1c23c:	ldr	r3, [pc, #116]	; 1c2b8 <sprintf@plt+0xabc4>
   1c240:	add	r3, pc, r3
   1c244:	ldr	r3, [r3]
   1c248:	str	r3, [fp, #-8]
   1c24c:	b	1c298 <sprintf@plt+0xaba4>
   1c250:	ldr	r3, [fp, #-8]
   1c254:	ldr	r3, [r3]
   1c258:	str	r3, [fp, #-12]
   1c25c:	ldr	r3, [fp, #-12]
   1c260:	ldr	r2, [r3, #16]
   1c264:	ldr	r3, [fp, #-16]
   1c268:	cmp	r2, r3
   1c26c:	bne	1c28c <sprintf@plt+0xab98>
   1c270:	ldr	r3, [fp, #-12]
   1c274:	ldrh	r3, [r3, #20]
   1c278:	ldrh	r2, [fp, #-18]	; 0xffffffee
   1c27c:	cmp	r2, r3
   1c280:	bne	1c28c <sprintf@plt+0xab98>
   1c284:	ldr	r3, [fp, #-12]
   1c288:	b	1c2a8 <sprintf@plt+0xabb4>
   1c28c:	ldr	r3, [fp, #-8]
   1c290:	ldr	r3, [r3, #8]
   1c294:	str	r3, [fp, #-8]
   1c298:	ldr	r3, [fp, #-8]
   1c29c:	cmp	r3, #0
   1c2a0:	bne	1c250 <sprintf@plt+0xab5c>
   1c2a4:	mov	r3, #0
   1c2a8:	mov	r0, r3
   1c2ac:	add	sp, fp, #0
   1c2b0:	pop	{fp}		; (ldr fp, [sp], #4)
   1c2b4:	bx	lr
   1c2b8:	andeq	r8, r1, ip, lsl lr
   1c2bc:	push	{r4, r5, fp, lr}
   1c2c0:	add	fp, sp, #12
   1c2c4:	sub	sp, sp, #168	; 0xa8
   1c2c8:	str	r0, [fp, #-176]	; 0xffffff50
   1c2cc:	str	r1, [fp, #-180]	; 0xffffff4c
   1c2d0:	ldr	r4, [pc, #456]	; 1c4a0 <sprintf@plt+0xadac>
   1c2d4:	add	r4, pc, r4
   1c2d8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1c2dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2e0:	ldr	r3, [pc, #444]	; 1c4a4 <sprintf@plt+0xadb0>
   1c2e4:	ldr	r3, [r4, r3]
   1c2e8:	ldr	r3, [r3, #12]
   1c2ec:	mov	r1, r3
   1c2f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c2f4:	bl	1c044 <sprintf@plt+0xa950>
   1c2f8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c2fc:	sub	r3, fp, #172	; 0xac
   1c300:	mov	r2, #128	; 0x80
   1c304:	mov	r1, r3
   1c308:	ldr	r0, [fp, #-176]	; 0xffffff50
   1c30c:	bl	114a8 <rb_read@plt>
   1c310:	str	r0, [fp, #-36]	; 0xffffffdc
   1c314:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c318:	cmp	r3, #0
   1c31c:	bge	1c35c <sprintf@plt+0xac68>
   1c320:	bl	116e8 <__errno_location@plt>
   1c324:	mov	r3, r0
   1c328:	ldr	r3, [r3]
   1c32c:	mov	r0, r3
   1c330:	bl	11328 <rb_ignore_errno@plt>
   1c334:	mov	r3, r0
   1c338:	cmp	r3, #0
   1c33c:	beq	1c35c <sprintf@plt+0xac68>
   1c340:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c344:	ldr	r2, [pc, #348]	; 1c4a8 <sprintf@plt+0xadb4>
   1c348:	add	r2, pc, r2
   1c34c:	mov	r1, #1
   1c350:	ldr	r0, [fp, #-176]	; 0xffffff50
   1c354:	bl	11370 <rb_setselect@plt>
   1c358:	b	1c498 <sprintf@plt+0xada4>
   1c35c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c360:	cmp	r3, #0
   1c364:	bgt	1c374 <sprintf@plt+0xac80>
   1c368:	ldr	r0, [fp, #-176]	; 0xffffff50
   1c36c:	bl	1152c <rb_close@plt>
   1c370:	b	1c498 <sprintf@plt+0xada4>
   1c374:	ldr	r3, [pc, #304]	; 1c4ac <sprintf@plt+0xadb8>
   1c378:	add	r3, pc, r3
   1c37c:	ldr	r3, [r3]
   1c380:	str	r3, [fp, #-16]
   1c384:	b	1c484 <sprintf@plt+0xad90>
   1c388:	ldr	r3, [fp, #-16]
   1c38c:	ldr	r3, [r3]
   1c390:	str	r3, [fp, #-40]	; 0xffffffd8
   1c394:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1c398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c39c:	mov	r0, r3
   1c3a0:	bl	114f0 <strlen@plt>
   1c3a4:	mov	r2, r0
   1c3a8:	sub	r3, fp, #172	; 0xac
   1c3ac:	mov	r1, r3
   1c3b0:	mov	r0, r5
   1c3b4:	bl	116a0 <strncmp@plt>
   1c3b8:	mov	r3, r0
   1c3bc:	cmp	r3, #0
   1c3c0:	bne	1c478 <sprintf@plt+0xad84>
   1c3c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3c8:	ldr	r3, [r3]
   1c3cc:	str	r3, [fp, #-20]	; 0xffffffec
   1c3d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3d4:	cmp	r3, #0
   1c3d8:	beq	1c3e8 <sprintf@plt+0xacf4>
   1c3dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3e0:	ldr	r3, [r3, #8]
   1c3e4:	b	1c3ec <sprintf@plt+0xacf8>
   1c3e8:	mov	r3, #0
   1c3ec:	str	r3, [fp, #-24]	; 0xffffffe8
   1c3f0:	b	1c440 <sprintf@plt+0xad4c>
   1c3f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3f8:	ldr	r3, [r3]
   1c3fc:	str	r3, [fp, #-44]	; 0xffffffd4
   1c400:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c404:	ldr	r3, [r3, #4]
   1c408:	mov	r0, r3
   1c40c:	bl	1152c <rb_close@plt>
   1c410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c414:	bl	1be00 <sprintf@plt+0xa70c>
   1c418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c41c:	str	r3, [fp, #-20]	; 0xffffffec
   1c420:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c424:	cmp	r3, #0
   1c428:	beq	1c438 <sprintf@plt+0xad44>
   1c42c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c430:	ldr	r3, [r3, #8]
   1c434:	b	1c43c <sprintf@plt+0xad48>
   1c438:	mov	r3, #0
   1c43c:	str	r3, [fp, #-24]	; 0xffffffe8
   1c440:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c444:	cmp	r3, #0
   1c448:	bne	1c3f4 <sprintf@plt+0xad00>
   1c44c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c450:	bl	1be00 <sprintf@plt+0xa70c>
   1c454:	ldr	r3, [pc, #72]	; 1c4a4 <sprintf@plt+0xadb0>
   1c458:	ldr	r3, [r4, r3]
   1c45c:	ldr	r1, [r3, #12]
   1c460:	sub	r2, fp, #172	; 0xac
   1c464:	ldr	r3, [pc, #68]	; 1c4b0 <sprintf@plt+0xadbc>
   1c468:	add	r3, pc, r3
   1c46c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c470:	bl	1392c <sprintf@plt+0x2238>
   1c474:	b	1c490 <sprintf@plt+0xad9c>
   1c478:	ldr	r3, [fp, #-16]
   1c47c:	ldr	r3, [r3, #8]
   1c480:	str	r3, [fp, #-16]
   1c484:	ldr	r3, [fp, #-16]
   1c488:	cmp	r3, #0
   1c48c:	bne	1c388 <sprintf@plt+0xac94>
   1c490:	ldr	r0, [fp, #-176]	; 0xffffff50
   1c494:	bl	1152c <rb_close@plt>
   1c498:	sub	sp, fp, #12
   1c49c:	pop	{r4, r5, fp, pc}
   1c4a0:	andeq	r3, r1, r4, lsr #26
   1c4a4:	muleq	r0, r8, r1
   1c4a8:			; <UNDEFINED> instruction: 0xffffff6c
   1c4ac:	andeq	r8, r1, r4, ror #25
   1c4b0:	andeq	r3, r0, ip, lsr #3
   1c4b4:	push	{r4, fp, lr}
   1c4b8:	add	fp, sp, #8
   1c4bc:	sub	sp, sp, #196	; 0xc4
   1c4c0:	str	r0, [fp, #-192]	; 0xffffff40
   1c4c4:	str	r1, [fp, #-196]	; 0xffffff3c
   1c4c8:	str	r2, [fp, #-200]	; 0xffffff38
   1c4cc:	str	r3, [fp, #-204]	; 0xffffff34
   1c4d0:	ldr	r4, [pc, #592]	; 1c728 <sprintf@plt+0xb034>
   1c4d4:	add	r4, pc, r4
   1c4d8:	mov	r3, #0
   1c4dc:	str	r3, [fp, #-16]
   1c4e0:	ldr	r3, [fp, #4]
   1c4e4:	str	r3, [fp, #-20]	; 0xffffffec
   1c4e8:	mov	r3, #128	; 0x80
   1c4ec:	str	r3, [fp, #-176]	; 0xffffff50
   1c4f0:	ldr	r3, [fp, #-196]	; 0xffffff3c
   1c4f4:	cmp	r3, #0
   1c4f8:	bne	1c508 <sprintf@plt+0xae14>
   1c4fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c500:	cmp	r3, #0
   1c504:	bne	1c514 <sprintf@plt+0xae20>
   1c508:	ldr	r0, [fp, #-192]	; 0xffffff40
   1c50c:	bl	1152c <rb_close@plt>
   1c510:	b	1c720 <sprintf@plt+0xb02c>
   1c514:	ldr	r0, [fp, #-192]	; 0xffffff40
   1c518:	bl	1137c <rb_get_fd@plt>
   1c51c:	sub	r2, fp, #176	; 0xb0
   1c520:	sub	r3, fp, #172	; 0xac
   1c524:	mov	r1, r3
   1c528:	bl	1131c <getsockname@plt>
   1c52c:	mov	r3, r0
   1c530:	cmp	r3, #0
   1c534:	beq	1c544 <sprintf@plt+0xae50>
   1c538:	ldr	r0, [fp, #-192]	; 0xffffff40
   1c53c:	bl	1152c <rb_close@plt>
   1c540:	b	1c720 <sprintf@plt+0xb02c>
   1c544:	ldr	r3, [pc, #480]	; 1c72c <sprintf@plt+0xb038>
   1c548:	ldr	r3, [r4, r3]
   1c54c:	ldr	r3, [r3]
   1c550:	sub	r2, fp, #184	; 0xb8
   1c554:	mov	r1, r2
   1c558:	mov	r0, r3
   1c55c:	bl	114cc <rb_dictionary_foreach_start@plt>
   1c560:	b	1c6ec <sprintf@plt+0xaff8>
   1c564:	ldr	r3, [fp, #-16]
   1c568:	add	r3, r3, #248	; 0xf8
   1c56c:	ldrh	r2, [r3]
   1c570:	sub	r3, fp, #172	; 0xac
   1c574:	ldrh	r3, [r3]
   1c578:	cmp	r2, r3
   1c57c:	bne	1c6bc <sprintf@plt+0xafc8>
   1c580:	sub	r3, fp, #172	; 0xac
   1c584:	ldrh	r3, [r3]
   1c588:	cmp	r3, #2
   1c58c:	beq	1c59c <sprintf@plt+0xaea8>
   1c590:	cmp	r3, #10
   1c594:	beq	1c5e4 <sprintf@plt+0xaef0>
   1c598:	b	1c6a0 <sprintf@plt+0xafac>
   1c59c:	sub	r3, fp, #172	; 0xac
   1c5a0:	str	r3, [fp, #-24]	; 0xffffffe8
   1c5a4:	ldr	r3, [fp, #-16]
   1c5a8:	add	r3, r3, #248	; 0xf8
   1c5ac:	str	r3, [fp, #-28]	; 0xffffffe4
   1c5b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5b4:	ldr	r2, [r3, #4]
   1c5b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5bc:	ldr	r3, [r3, #4]
   1c5c0:	cmp	r2, r3
   1c5c4:	bne	1c6c4 <sprintf@plt+0xafd0>
   1c5c8:	ldr	r3, [fp, #-16]
   1c5cc:	ldr	r2, [pc, #348]	; 1c730 <sprintf@plt+0xb03c>
   1c5d0:	add	r2, pc, r2
   1c5d4:	mov	r1, #1
   1c5d8:	ldr	r0, [fp, #-192]	; 0xffffff40
   1c5dc:	bl	11370 <rb_setselect@plt>
   1c5e0:	b	1c720 <sprintf@plt+0xb02c>
   1c5e4:	sub	r3, fp, #172	; 0xac
   1c5e8:	str	r3, [fp, #-32]	; 0xffffffe0
   1c5ec:	ldr	r3, [fp, #-16]
   1c5f0:	add	r3, r3, #248	; 0xf8
   1c5f4:	str	r3, [fp, #-36]	; 0xffffffdc
   1c5f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5fc:	add	r3, r3, #8
   1c600:	str	r3, [fp, #-40]	; 0xffffffd8
   1c604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c608:	add	r3, r3, #8
   1c60c:	str	r3, [fp, #-44]	; 0xffffffd4
   1c610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c614:	ldr	r2, [r3]
   1c618:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c61c:	ldr	r3, [r3]
   1c620:	cmp	r2, r3
   1c624:	bne	1c678 <sprintf@plt+0xaf84>
   1c628:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c62c:	ldr	r2, [r3, #4]
   1c630:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c634:	ldr	r3, [r3, #4]
   1c638:	cmp	r2, r3
   1c63c:	bne	1c678 <sprintf@plt+0xaf84>
   1c640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c644:	ldr	r2, [r3, #8]
   1c648:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c64c:	ldr	r3, [r3, #8]
   1c650:	cmp	r2, r3
   1c654:	bne	1c678 <sprintf@plt+0xaf84>
   1c658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c65c:	ldr	r2, [r3, #12]
   1c660:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c664:	ldr	r3, [r3, #12]
   1c668:	cmp	r2, r3
   1c66c:	bne	1c678 <sprintf@plt+0xaf84>
   1c670:	mov	r3, #1
   1c674:	b	1c67c <sprintf@plt+0xaf88>
   1c678:	mov	r3, #0
   1c67c:	cmp	r3, #0
   1c680:	beq	1c6cc <sprintf@plt+0xafd8>
   1c684:	ldr	r3, [fp, #-16]
   1c688:	ldr	r2, [pc, #164]	; 1c734 <sprintf@plt+0xb040>
   1c68c:	add	r2, pc, r2
   1c690:	mov	r1, #1
   1c694:	ldr	r0, [fp, #-192]	; 0xffffff40
   1c698:	bl	11370 <rb_setselect@plt>
   1c69c:	b	1c720 <sprintf@plt+0xb02c>
   1c6a0:	ldr	r3, [pc, #144]	; 1c738 <sprintf@plt+0xb044>
   1c6a4:	add	r3, pc, r3
   1c6a8:	mov	r1, r3
   1c6ac:	mov	r0, #67	; 0x43
   1c6b0:	bl	12a60 <sprintf@plt+0x136c>
   1c6b4:	mov	r0, #3
   1c6b8:	bl	116dc <exit@plt>
   1c6bc:	nop			; (mov r0, r0)
   1c6c0:	b	1c6d0 <sprintf@plt+0xafdc>
   1c6c4:	nop			; (mov r0, r0)
   1c6c8:	b	1c6d0 <sprintf@plt+0xafdc>
   1c6cc:	nop			; (mov r0, r0)
   1c6d0:	ldr	r3, [pc, #84]	; 1c72c <sprintf@plt+0xb038>
   1c6d4:	ldr	r3, [r4, r3]
   1c6d8:	ldr	r3, [r3]
   1c6dc:	sub	r2, fp, #184	; 0xb8
   1c6e0:	mov	r1, r2
   1c6e4:	mov	r0, r3
   1c6e8:	bl	11484 <rb_dictionary_foreach_next@plt>
   1c6ec:	ldr	r3, [pc, #56]	; 1c72c <sprintf@plt+0xb038>
   1c6f0:	ldr	r3, [r4, r3]
   1c6f4:	ldr	r3, [r3]
   1c6f8:	sub	r2, fp, #184	; 0xb8
   1c6fc:	mov	r1, r2
   1c700:	mov	r0, r3
   1c704:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1c708:	str	r0, [fp, #-16]
   1c70c:	ldr	r3, [fp, #-16]
   1c710:	cmp	r3, #0
   1c714:	bne	1c564 <sprintf@plt+0xae70>
   1c718:	ldr	r0, [fp, #-192]	; 0xffffff40
   1c71c:	bl	1152c <rb_close@plt>
   1c720:	sub	sp, fp, #8
   1c724:	pop	{r4, fp, pc}
   1c728:	andeq	r3, r1, r4, lsr #22
   1c72c:	andeq	r0, r0, ip, ror #2
   1c730:			; <UNDEFINED> instruction: 0xfffffce4
   1c734:			; <UNDEFINED> instruction: 0xfffffc28
   1c738:	andeq	r2, r0, r4, lsl #31
   1c73c:	push	{fp, lr}
   1c740:	add	fp, sp, #4
   1c744:	sub	sp, sp, #32
   1c748:	str	r0, [fp, #-24]	; 0xffffffe8
   1c74c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c750:	str	r2, [fp, #-32]	; 0xffffffe0
   1c754:	ldr	r2, [pc, #300]	; 1c888 <sprintf@plt+0xb194>
   1c758:	add	r2, pc, r2
   1c75c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c760:	str	r3, [fp, #-8]
   1c764:	ldr	r3, [fp, #-8]
   1c768:	ldr	r3, [r3, #8]
   1c76c:	str	r3, [fp, #-12]
   1c770:	ldr	r3, [fp, #-8]
   1c774:	ldr	r3, [r3]
   1c778:	str	r3, [fp, #-16]
   1c77c:	ldr	r3, [pc, #264]	; 1c88c <sprintf@plt+0xb198>
   1c780:	ldr	r3, [r2, r3]
   1c784:	ldr	r3, [r3, #12]
   1c788:	mov	r1, r3
   1c78c:	ldr	r0, [fp, #-16]
   1c790:	bl	1c044 <sprintf@plt+0xa950>
   1c794:	str	r0, [fp, #-20]	; 0xffffffec
   1c798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c79c:	cmp	r3, #0
   1c7a0:	bne	1c84c <sprintf@plt+0xb158>
   1c7a4:	ldr	r3, [pc, #228]	; 1c890 <sprintf@plt+0xb19c>
   1c7a8:	add	r3, pc, r3
   1c7ac:	ldrb	r3, [r3]
   1c7b0:	eor	r3, r3, #1
   1c7b4:	uxtb	r3, r3
   1c7b8:	cmp	r3, #0
   1c7bc:	bne	1c84c <sprintf@plt+0xb158>
   1c7c0:	ldr	r3, [fp, #-16]
   1c7c4:	add	r3, r3, #248	; 0xf8
   1c7c8:	ldrh	r3, [r3]
   1c7cc:	cmp	r3, #2
   1c7d0:	beq	1c7e0 <sprintf@plt+0xb0ec>
   1c7d4:	cmp	r3, #10
   1c7d8:	beq	1c7f8 <sprintf@plt+0xb104>
   1c7dc:	b	1c84c <sprintf@plt+0xb158>
   1c7e0:	ldr	r3, [pc, #172]	; 1c894 <sprintf@plt+0xb1a0>
   1c7e4:	add	r3, pc, r3
   1c7e8:	ldr	r3, [r3, #184]	; 0xb8
   1c7ec:	cmp	r3, #0
   1c7f0:	bne	1c828 <sprintf@plt+0xb134>
   1c7f4:	b	1c84c <sprintf@plt+0xb158>
   1c7f8:	ldr	r3, [fp, #-12]
   1c7fc:	ldrb	r3, [r3, #23]
   1c800:	eor	r3, r3, #1
   1c804:	uxtb	r3, r3
   1c808:	cmp	r3, #0
   1c80c:	bne	1c840 <sprintf@plt+0xb14c>
   1c810:	ldr	r3, [pc, #128]	; 1c898 <sprintf@plt+0xb1a4>
   1c814:	add	r3, pc, r3
   1c818:	ldr	r3, [r3, #372]	; 0x174
   1c81c:	cmp	r3, #0
   1c820:	beq	1c848 <sprintf@plt+0xb154>
   1c824:	b	1c82c <sprintf@plt+0xb138>
   1c828:	nop			; (mov r0, r0)
   1c82c:	ldr	r3, [fp, #-12]
   1c830:	ldr	r3, [r3, #24]
   1c834:	ldr	r0, [fp, #-8]
   1c838:	blx	r3
   1c83c:	b	1c84c <sprintf@plt+0xb158>
   1c840:	nop			; (mov r0, r0)
   1c844:	b	1c84c <sprintf@plt+0xb158>
   1c848:	nop			; (mov r0, r0)
   1c84c:	ldr	r3, [fp, #-8]
   1c850:	ldr	r3, [r3, #4]
   1c854:	mov	r0, r3
   1c858:	bl	1152c <rb_close@plt>
   1c85c:	ldr	r3, [fp, #-8]
   1c860:	add	r3, r3, #16
   1c864:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c868:	mov	r1, r2
   1c86c:	mov	r0, r3
   1c870:	bl	1bc7c <sprintf@plt+0xa588>
   1c874:	ldr	r0, [fp, #-8]
   1c878:	bl	1be00 <sprintf@plt+0xa70c>
   1c87c:	nop			; (mov r0, r0)
   1c880:	sub	sp, fp, #4
   1c884:	pop	{fp, pc}
   1c888:	andeq	r3, r1, r0, lsr #17
   1c88c:	muleq	r0, r8, r1
   1c890:	andeq	r8, r1, r0, asr #17
   1c894:	andeq	r8, r1, r8, lsl #17
   1c898:	andeq	r8, r1, r8, asr r8
   1c89c:	push	{r4, r5, fp, lr}
   1c8a0:	add	fp, sp, #12
   1c8a4:	sub	sp, sp, #24
   1c8a8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c8ac:	sub	r3, fp, #28
   1c8b0:	str	r3, [fp, #-16]
   1c8b4:	mov	r2, #2
   1c8b8:	ldr	r3, [pc, #244]	; 1c9b4 <sprintf@plt+0xb2c0>
   1c8bc:	add	r3, pc, r3
   1c8c0:	mov	r1, r3
   1c8c4:	ldr	r0, [fp, #-16]
   1c8c8:	bl	11514 <memcpy@plt>
   1c8cc:	ldr	r3, [fp, #-16]
   1c8d0:	add	r3, r3, #2
   1c8d4:	str	r3, [fp, #-16]
   1c8d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c8dc:	ldr	r3, [r3, #12]
   1c8e0:	add	r3, r3, #56	; 0x38
   1c8e4:	add	r3, r3, #2
   1c8e8:	ldrh	r3, [r3]
   1c8ec:	uxth	r2, r3
   1c8f0:	ldr	r3, [fp, #-16]
   1c8f4:	strh	r2, [r3]
   1c8f8:	ldr	r3, [fp, #-16]
   1c8fc:	add	r3, r3, #2
   1c900:	str	r3, [fp, #-16]
   1c904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c908:	ldr	r3, [r3, #12]
   1c90c:	add	r3, r3, #56	; 0x38
   1c910:	add	r3, r3, #4
   1c914:	ldr	r3, [r3]
   1c918:	mov	r2, r3
   1c91c:	ldr	r3, [fp, #-16]
   1c920:	str	r2, [r3]
   1c924:	ldr	r3, [fp, #-16]
   1c928:	add	r3, r3, #4
   1c92c:	str	r3, [fp, #-16]
   1c930:	ldr	r3, [fp, #-16]
   1c934:	mov	r2, #0
   1c938:	strb	r2, [r3]
   1c93c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c940:	ldr	r3, [r3, #4]
   1c944:	sub	r1, fp, #28
   1c948:	mov	r2, #9
   1c94c:	mov	r0, r3
   1c950:	bl	11454 <rb_write@plt>
   1c954:	mov	r3, r0
   1c958:	cmp	r3, #0
   1c95c:	blt	1c9a8 <sprintf@plt+0xb2b4>
   1c960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c964:	ldr	r4, [r3, #4]
   1c968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c96c:	ldr	r3, [r3, #8]
   1c970:	mov	r5, r3
   1c974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c978:	ldr	r3, [r3, #8]
   1c97c:	mov	r0, r3
   1c980:	bl	114f0 <strlen@plt>
   1c984:	mov	r3, r0
   1c988:	add	r3, r3, #1
   1c98c:	mov	r2, r3
   1c990:	mov	r1, r5
   1c994:	mov	r0, r4
   1c998:	bl	11454 <rb_write@plt>
   1c99c:	mov	r3, r0
   1c9a0:	cmp	r3, #0
   1c9a4:	b	1c9ac <sprintf@plt+0xb2b8>
   1c9a8:	nop			; (mov r0, r0)
   1c9ac:	sub	sp, fp, #12
   1c9b0:	pop	{r4, r5, fp, pc}
   1c9b4:	muleq	r0, ip, sp
   1c9b8:	push	{r4, r5, fp, lr}
   1c9bc:	add	fp, sp, #12
   1c9c0:	sub	sp, sp, #48	; 0x30
   1c9c4:	str	r0, [fp, #-56]	; 0xffffffc8
   1c9c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c9cc:	ldr	r3, [r3]
   1c9d0:	str	r3, [fp, #-20]	; 0xffffffec
   1c9d4:	sub	r3, fp, #48	; 0x30
   1c9d8:	str	r3, [fp, #-16]
   1c9dc:	mov	r2, #6
   1c9e0:	ldr	r3, [pc, #408]	; 1cb80 <sprintf@plt+0xb48c>
   1c9e4:	add	r3, pc, r3
   1c9e8:	mov	r1, r3
   1c9ec:	ldr	r0, [fp, #-16]
   1c9f0:	bl	11514 <memcpy@plt>
   1c9f4:	ldr	r3, [fp, #-16]
   1c9f8:	add	r3, r3, #6
   1c9fc:	str	r3, [fp, #-16]
   1ca00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca04:	add	r3, r3, #248	; 0xf8
   1ca08:	ldrh	r3, [r3]
   1ca0c:	cmp	r3, #2
   1ca10:	beq	1ca20 <sprintf@plt+0xb32c>
   1ca14:	cmp	r3, #10
   1ca18:	beq	1ca90 <sprintf@plt+0xb39c>
   1ca1c:	b	1cb78 <sprintf@plt+0xb484>
   1ca20:	ldr	r3, [fp, #-16]
   1ca24:	add	r2, r3, #1
   1ca28:	str	r2, [fp, #-16]
   1ca2c:	mov	r2, #1
   1ca30:	strb	r2, [r3]
   1ca34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca38:	ldr	r3, [r3, #12]
   1ca3c:	add	r3, r3, #56	; 0x38
   1ca40:	add	r3, r3, #4
   1ca44:	ldr	r3, [r3]
   1ca48:	mov	r2, r3
   1ca4c:	ldr	r3, [fp, #-16]
   1ca50:	str	r2, [r3]
   1ca54:	ldr	r3, [fp, #-16]
   1ca58:	add	r3, r3, #4
   1ca5c:	str	r3, [fp, #-16]
   1ca60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca64:	ldr	r3, [r3, #12]
   1ca68:	add	r3, r3, #56	; 0x38
   1ca6c:	add	r3, r3, #2
   1ca70:	ldrh	r3, [r3]
   1ca74:	uxth	r2, r3
   1ca78:	ldr	r3, [fp, #-16]
   1ca7c:	strh	r2, [r3]
   1ca80:	ldr	r3, [fp, #-16]
   1ca84:	add	r3, r3, #2
   1ca88:	str	r3, [fp, #-16]
   1ca8c:	b	1cb00 <sprintf@plt+0xb40c>
   1ca90:	ldr	r3, [fp, #-16]
   1ca94:	add	r2, r3, #1
   1ca98:	str	r2, [fp, #-16]
   1ca9c:	mov	r2, #4
   1caa0:	strb	r2, [r3]
   1caa4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1caa8:	ldr	r3, [r3, #12]
   1caac:	add	r3, r3, #56	; 0x38
   1cab0:	add	r3, r3, #8
   1cab4:	mov	r2, #16
   1cab8:	mov	r1, r3
   1cabc:	ldr	r0, [fp, #-16]
   1cac0:	bl	11514 <memcpy@plt>
   1cac4:	ldr	r3, [fp, #-16]
   1cac8:	add	r3, r3, #16
   1cacc:	str	r3, [fp, #-16]
   1cad0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cad4:	ldr	r3, [r3, #12]
   1cad8:	add	r3, r3, #56	; 0x38
   1cadc:	add	r3, r3, #2
   1cae0:	ldrh	r3, [r3]
   1cae4:	uxth	r2, r3
   1cae8:	ldr	r3, [fp, #-16]
   1caec:	strh	r2, [r3]
   1caf0:	ldr	r3, [fp, #-16]
   1caf4:	add	r3, r3, #2
   1caf8:	str	r3, [fp, #-16]
   1cafc:	nop			; (mov r0, r0)
   1cb00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb04:	ldr	r0, [r3, #4]
   1cb08:	sub	r2, fp, #48	; 0x30
   1cb0c:	ldr	r3, [fp, #-16]
   1cb10:	sub	r2, r2, r3
   1cb14:	sub	r3, fp, #48	; 0x30
   1cb18:	mov	r1, r3
   1cb1c:	bl	11454 <rb_write@plt>
   1cb20:	mov	r3, r0
   1cb24:	cmp	r3, #0
   1cb28:	ble	1cb74 <sprintf@plt+0xb480>
   1cb2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb30:	ldr	r4, [r3, #4]
   1cb34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb38:	ldr	r3, [r3, #8]
   1cb3c:	mov	r5, r3
   1cb40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb44:	ldr	r3, [r3, #8]
   1cb48:	mov	r0, r3
   1cb4c:	bl	114f0 <strlen@plt>
   1cb50:	mov	r3, r0
   1cb54:	add	r3, r3, #1
   1cb58:	mov	r2, r3
   1cb5c:	mov	r1, r5
   1cb60:	mov	r0, r4
   1cb64:	bl	11454 <rb_write@plt>
   1cb68:	mov	r3, r0
   1cb6c:	cmp	r3, #0
   1cb70:	b	1cb78 <sprintf@plt+0xb484>
   1cb74:	nop			; (mov r0, r0)
   1cb78:	sub	sp, fp, #12
   1cb7c:	pop	{r4, r5, fp, pc}
   1cb80:	andeq	r2, r0, r8, ror ip
   1cb84:	push	{r4, r5, fp, lr}
   1cb88:	add	fp, sp, #12
   1cb8c:	sub	sp, sp, #144	; 0x90
   1cb90:	str	r0, [fp, #-144]	; 0xffffff70
   1cb94:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cb98:	ldr	r3, [r3, #12]
   1cb9c:	mov	r2, r3
   1cba0:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cba4:	ldr	r3, [r3, #12]
   1cba8:	ldrh	r3, [r3, #54]	; 0x36
   1cbac:	sub	r0, fp, #140	; 0x8c
   1cbb0:	str	r3, [sp]
   1cbb4:	mov	r3, r2
   1cbb8:	ldr	r2, [pc, #196]	; 1cc84 <sprintf@plt+0xb590>
   1cbbc:	add	r2, pc, r2
   1cbc0:	mov	r1, #128	; 0x80
   1cbc4:	bl	11688 <snprintf@plt>
   1cbc8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cbcc:	ldr	r4, [r3, #4]
   1cbd0:	sub	r3, fp, #140	; 0x8c
   1cbd4:	mov	r0, r3
   1cbd8:	bl	114f0 <strlen@plt>
   1cbdc:	mov	r3, r0
   1cbe0:	mov	r2, r3
   1cbe4:	sub	r3, fp, #140	; 0x8c
   1cbe8:	mov	r1, r3
   1cbec:	mov	r0, r4
   1cbf0:	bl	11454 <rb_write@plt>
   1cbf4:	mov	r3, r0
   1cbf8:	cmp	r3, #0
   1cbfc:	ble	1cc70 <sprintf@plt+0xb57c>
   1cc00:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cc04:	ldr	r4, [r3, #4]
   1cc08:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cc0c:	ldr	r3, [r3, #8]
   1cc10:	mov	r5, r3
   1cc14:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cc18:	ldr	r3, [r3, #8]
   1cc1c:	mov	r0, r3
   1cc20:	bl	114f0 <strlen@plt>
   1cc24:	mov	r3, r0
   1cc28:	add	r3, r3, #1
   1cc2c:	mov	r2, r3
   1cc30:	mov	r1, r5
   1cc34:	mov	r0, r4
   1cc38:	bl	11454 <rb_write@plt>
   1cc3c:	mov	r3, r0
   1cc40:	cmp	r3, #0
   1cc44:	ble	1cc78 <sprintf@plt+0xb584>
   1cc48:	ldr	r3, [fp, #-144]	; 0xffffff70
   1cc4c:	ldr	r3, [r3, #4]
   1cc50:	mov	r2, #2
   1cc54:	ldr	r1, [pc, #44]	; 1cc88 <sprintf@plt+0xb594>
   1cc58:	add	r1, pc, r1
   1cc5c:	mov	r0, r3
   1cc60:	bl	11454 <rb_write@plt>
   1cc64:	mov	r3, r0
   1cc68:	cmp	r3, #0
   1cc6c:	b	1cc7c <sprintf@plt+0xb588>
   1cc70:	nop			; (mov r0, r0)
   1cc74:	b	1cc7c <sprintf@plt+0xb588>
   1cc78:	nop			; (mov r0, r0)
   1cc7c:	sub	sp, fp, #12
   1cc80:	pop	{r4, r5, fp, pc}
   1cc84:	andeq	r2, r0, r8, lsr #21
   1cc88:	andeq	r2, r0, r8, lsr #20
   1cc8c:	push	{r4, fp, lr}
   1cc90:	add	fp, sp, #8
   1cc94:	sub	sp, sp, #292	; 0x124
   1cc98:	str	r0, [fp, #-288]	; 0xfffffee0
   1cc9c:	str	r1, [fp, #-292]	; 0xfffffedc
   1cca0:	ldr	r2, [pc, #688]	; 1cf58 <sprintf@plt+0xb864>
   1cca4:	add	r2, pc, r2
   1cca8:	ldr	r3, [pc, #684]	; 1cf5c <sprintf@plt+0xb868>
   1ccac:	ldr	r3, [r2, r3]
   1ccb0:	ldr	r3, [r3, #12]
   1ccb4:	mov	r1, r3
   1ccb8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ccbc:	bl	1c044 <sprintf@plt+0xa950>
   1ccc0:	str	r0, [fp, #-20]	; 0xffffffec
   1ccc4:	mov	r0, #28
   1ccc8:	bl	1bdac <sprintf@plt+0xa6b8>
   1cccc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccd0:	mov	r3, #1
   1ccd4:	str	r3, [fp, #-284]	; 0xfffffee4
   1ccd8:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1ccdc:	add	r3, r3, #248	; 0xf8
   1cce0:	ldrh	r3, [r3]
   1cce4:	cmp	r3, #10
   1cce8:	bne	1cd1c <sprintf@plt+0xb628>
   1ccec:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1ccf0:	ldr	r3, [r3, #16]
   1ccf4:	cmp	r3, #1
   1ccf8:	bne	1cd08 <sprintf@plt+0xb614>
   1ccfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd00:	bl	1be00 <sprintf@plt+0xa70c>
   1cd04:	b	1cf50 <sprintf@plt+0xb85c>
   1cd08:	ldr	r3, [pc, #592]	; 1cf60 <sprintf@plt+0xb86c>
   1cd0c:	add	r3, pc, r3
   1cd10:	add	r3, r3, #188	; 0xbc
   1cd14:	str	r3, [fp, #-16]
   1cd18:	b	1cd28 <sprintf@plt+0xb634>
   1cd1c:	ldr	r3, [pc, #576]	; 1cf64 <sprintf@plt+0xb870>
   1cd20:	add	r3, pc, r3
   1cd24:	str	r3, [fp, #-16]
   1cd28:	ldr	r3, [fp, #-16]
   1cd2c:	ldr	r3, [r3, #184]	; 0xb8
   1cd30:	cmp	r3, #0
   1cd34:	bne	1cd44 <sprintf@plt+0xb650>
   1cd38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd3c:	bl	1be00 <sprintf@plt+0xa70c>
   1cd40:	b	1cf50 <sprintf@plt+0xb85c>
   1cd44:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1cd48:	sub	r0, fp, #152	; 0x98
   1cd4c:	add	r3, r3, #248	; 0xf8
   1cd50:	mov	r2, #128	; 0x80
   1cd54:	mov	r1, r3
   1cd58:	bl	11514 <memcpy@plt>
   1cd5c:	ldr	r3, [fp, #-16]
   1cd60:	sub	r0, fp, #280	; 0x118
   1cd64:	add	r3, r3, #56	; 0x38
   1cd68:	mov	r2, #128	; 0x80
   1cd6c:	mov	r1, r3
   1cd70:	bl	11514 <memcpy@plt>
   1cd74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd78:	ldr	r2, [fp, #-288]	; 0xfffffee0
   1cd7c:	str	r2, [r3]
   1cd80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd84:	ldr	r2, [fp, #-292]	; 0xfffffedc
   1cd88:	str	r2, [r3, #8]
   1cd8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd90:	ldr	r2, [fp, #-16]
   1cd94:	str	r2, [r3, #12]
   1cd98:	ldr	r3, [fp, #-288]	; 0xfffffee0
   1cd9c:	add	r3, r3, #248	; 0xf8
   1cda0:	ldrh	r3, [r3]
   1cda4:	mov	r0, r3
   1cda8:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1cdac:	mov	r2, #0
   1cdb0:	mov	r1, #1
   1cdb4:	bl	113a0 <rb_socket@plt>
   1cdb8:	mov	r2, r0
   1cdbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdc0:	str	r2, [r3, #4]
   1cdc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdc8:	ldr	r3, [r3, #4]
   1cdcc:	cmp	r3, #0
   1cdd0:	bne	1ce10 <sprintf@plt+0xb71c>
   1cdd4:	ldr	r4, [fp, #-292]	; 0xfffffedc
   1cdd8:	bl	116e8 <__errno_location@plt>
   1cddc:	mov	r3, r0
   1cde0:	ldr	r3, [r3]
   1cde4:	mov	r0, r3
   1cde8:	bl	112ec <strerror@plt>
   1cdec:	mov	r3, r0
   1cdf0:	mov	r2, r4
   1cdf4:	ldr	r1, [pc, #364]	; 1cf68 <sprintf@plt+0xb874>
   1cdf8:	add	r1, pc, r1
   1cdfc:	mov	r0, #87	; 0x57
   1ce00:	bl	12a60 <sprintf@plt+0x136c>
   1ce04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce08:	bl	1be00 <sprintf@plt+0xa70c>
   1ce0c:	b	1cf50 <sprintf@plt+0xb85c>
   1ce10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce14:	ldr	r3, [r3, #4]
   1ce18:	mov	r0, r3
   1ce1c:	bl	1137c <rb_get_fd@plt>
   1ce20:	sub	r2, fp, #284	; 0x11c
   1ce24:	mov	r3, #4
   1ce28:	str	r3, [sp]
   1ce2c:	mov	r3, r2
   1ce30:	mov	r2, #1
   1ce34:	mov	r1, #6
   1ce38:	bl	116b8 <setsockopt@plt>
   1ce3c:	sub	r3, fp, #280	; 0x118
   1ce40:	ldrh	r3, [r3]
   1ce44:	cmp	r3, #2
   1ce48:	bne	1ce5c <sprintf@plt+0xb768>
   1ce4c:	sub	r3, fp, #280	; 0x118
   1ce50:	mov	r2, #0
   1ce54:	strh	r2, [r3, #2]
   1ce58:	b	1ce68 <sprintf@plt+0xb774>
   1ce5c:	sub	r3, fp, #280	; 0x118
   1ce60:	mov	r2, #0
   1ce64:	strh	r2, [r3, #2]
   1ce68:	sub	r3, fp, #152	; 0x98
   1ce6c:	ldrh	r3, [r3]
   1ce70:	cmp	r3, #2
   1ce74:	bne	1ce98 <sprintf@plt+0xb7a4>
   1ce78:	sub	r4, fp, #152	; 0x98
   1ce7c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1ce80:	ldrh	r3, [r3, #20]
   1ce84:	mov	r0, r3
   1ce88:	bl	11418 <htons@plt>
   1ce8c:	mov	r3, r0
   1ce90:	strh	r3, [r4, #2]
   1ce94:	b	1ceb4 <sprintf@plt+0xb7c0>
   1ce98:	sub	r4, fp, #152	; 0x98
   1ce9c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1cea0:	ldrh	r3, [r3, #20]
   1cea4:	mov	r0, r3
   1cea8:	bl	11418 <htons@plt>
   1ceac:	mov	r3, r0
   1ceb0:	strh	r3, [r4, #2]
   1ceb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ceb8:	add	r3, r3, #16
   1cebc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cec0:	mov	r1, r3
   1cec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cec8:	bl	1bb28 <sprintf@plt+0xa434>
   1cecc:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1ced0:	ldrb	r3, [r3, #22]
   1ced4:	eor	r3, r3, #1
   1ced8:	uxtb	r3, r3
   1cedc:	cmp	r3, #0
   1cee0:	beq	1cf1c <sprintf@plt+0xb828>
   1cee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cee8:	ldr	r0, [r3, #4]
   1ceec:	ldr	r3, [pc, #120]	; 1cf6c <sprintf@plt+0xb878>
   1cef0:	add	r3, pc, r3
   1cef4:	ldr	r3, [r3]
   1cef8:	sub	r2, fp, #280	; 0x118
   1cefc:	sub	r1, fp, #152	; 0x98
   1cf00:	str	r3, [sp, #4]
   1cf04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf08:	str	r3, [sp]
   1cf0c:	ldr	r3, [pc, #92]	; 1cf70 <sprintf@plt+0xb87c>
   1cf10:	add	r3, pc, r3
   1cf14:	bl	11340 <rb_connect_tcp@plt>
   1cf18:	b	1cf50 <sprintf@plt+0xb85c>
   1cf1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf20:	ldr	r0, [r3, #4]
   1cf24:	ldr	r3, [pc, #72]	; 1cf74 <sprintf@plt+0xb880>
   1cf28:	add	r3, pc, r3
   1cf2c:	ldr	r3, [r3]
   1cf30:	sub	r2, fp, #280	; 0x118
   1cf34:	sub	r1, fp, #152	; 0x98
   1cf38:	str	r3, [sp, #4]
   1cf3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf40:	str	r3, [sp]
   1cf44:	ldr	r3, [pc, #44]	; 1cf78 <sprintf@plt+0xb884>
   1cf48:	add	r3, pc, r3
   1cf4c:	bl	11334 <rb_connect_tcp_ssl@plt>
   1cf50:	sub	sp, fp, #8
   1cf54:	pop	{r4, fp, pc}
   1cf58:	andeq	r3, r1, r4, asr r3
   1cf5c:	muleq	r0, r8, r1
   1cf60:	andeq	r8, r1, r0, ror #6
   1cf64:	andeq	r8, r1, ip, asr #6
   1cf68:	andeq	r2, r0, ip, lsl #17
   1cf6c:	andeq	r4, r1, r4, lsr #32
   1cf70:			; <UNDEFINED> instruction: 0xfffff824
   1cf74:	andeq	r3, r1, ip, ror #31
   1cf78:			; <UNDEFINED> instruction: 0xfffff7ec
   1cf7c:	push	{r4, r5, fp, lr}
   1cf80:	add	fp, sp, #12
   1cf84:	sub	sp, sp, #192	; 0xc0
   1cf88:	str	r0, [fp, #-192]	; 0xffffff40
   1cf8c:	mov	r3, r1
   1cf90:	strh	r3, [fp, #-194]	; 0xffffff3e
   1cf94:	ldr	r4, [pc, #1328]	; 1d4cc <sprintf@plt+0xbdd8>
   1cf98:	add	r4, pc, r4
   1cf9c:	mov	r3, #1
   1cfa0:	str	r3, [fp, #-188]	; 0xffffff44
   1cfa4:	sub	r3, fp, #176	; 0xb0
   1cfa8:	mov	r1, r3
   1cfac:	ldr	r0, [fp, #-192]	; 0xffffff40
   1cfb0:	bl	114e4 <rb_inet_pton_sock@plt>
   1cfb4:	mov	r3, r0
   1cfb8:	cmp	r3, #0
   1cfbc:	bne	1cfe0 <sprintf@plt+0xb8ec>
   1cfc0:	ldrh	r3, [fp, #-194]	; 0xffffff3e
   1cfc4:	ldr	r2, [fp, #-192]	; 0xffffff40
   1cfc8:	ldr	r1, [pc, #1280]	; 1d4d0 <sprintf@plt+0xbddc>
   1cfcc:	add	r1, pc, r1
   1cfd0:	mov	r0, #67	; 0x43
   1cfd4:	bl	12a60 <sprintf@plt+0x136c>
   1cfd8:	mov	r0, #3
   1cfdc:	bl	116dc <exit@plt>
   1cfe0:	sub	r3, fp, #176	; 0xb0
   1cfe4:	ldrh	r3, [r3]
   1cfe8:	cmp	r3, #2
   1cfec:	bne	1d00c <sprintf@plt+0xb918>
   1cff0:	sub	r5, fp, #176	; 0xb0
   1cff4:	ldrh	r3, [fp, #-194]	; 0xffffff3e
   1cff8:	mov	r0, r3
   1cffc:	bl	11418 <htons@plt>
   1d000:	mov	r3, r0
   1d004:	strh	r3, [r5, #2]
   1d008:	b	1d024 <sprintf@plt+0xb930>
   1d00c:	sub	r5, fp, #176	; 0xb0
   1d010:	ldrh	r3, [fp, #-194]	; 0xffffff3e
   1d014:	mov	r0, r3
   1d018:	bl	11418 <htons@plt>
   1d01c:	mov	r3, r0
   1d020:	strh	r3, [r5, #2]
   1d024:	sub	r3, fp, #176	; 0xb0
   1d028:	ldrh	r3, [r3]
   1d02c:	cmp	r3, #10
   1d030:	bne	1d160 <sprintf@plt+0xba6c>
   1d034:	ldr	r3, [pc, #1176]	; 1d4d4 <sprintf@plt+0xbde0>
   1d038:	add	r3, pc, r3
   1d03c:	add	r3, r3, #188	; 0xbc
   1d040:	str	r3, [fp, #-16]
   1d044:	sub	r3, fp, #176	; 0xb0
   1d048:	str	r3, [fp, #-20]	; 0xffffffec
   1d04c:	ldr	r3, [fp, #-16]
   1d050:	add	r3, r3, #56	; 0x38
   1d054:	str	r3, [fp, #-24]	; 0xffffffe8
   1d058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d05c:	add	r3, r3, #8
   1d060:	str	r3, [fp, #-28]	; 0xffffffe4
   1d064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d068:	add	r3, r3, #8
   1d06c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d070:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d074:	ldr	r2, [r3]
   1d078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d07c:	ldr	r3, [r3]
   1d080:	cmp	r2, r3
   1d084:	bne	1d0d8 <sprintf@plt+0xb9e4>
   1d088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d08c:	ldr	r2, [r3, #4]
   1d090:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d094:	ldr	r3, [r3, #4]
   1d098:	cmp	r2, r3
   1d09c:	bne	1d0d8 <sprintf@plt+0xb9e4>
   1d0a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d0a4:	ldr	r2, [r3, #8]
   1d0a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d0ac:	ldr	r3, [r3, #8]
   1d0b0:	cmp	r2, r3
   1d0b4:	bne	1d0d8 <sprintf@plt+0xb9e4>
   1d0b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d0bc:	ldr	r2, [r3, #12]
   1d0c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d0c4:	ldr	r3, [r3, #12]
   1d0c8:	cmp	r2, r3
   1d0cc:	bne	1d0d8 <sprintf@plt+0xb9e4>
   1d0d0:	mov	r3, #1
   1d0d4:	b	1d0dc <sprintf@plt+0xb9e8>
   1d0d8:	mov	r3, #0
   1d0dc:	cmp	r3, #0
   1d0e0:	beq	1d214 <sprintf@plt+0xbb20>
   1d0e4:	sub	r3, fp, #176	; 0xb0
   1d0e8:	ldrh	r3, [r3]
   1d0ec:	cmp	r3, #2
   1d0f0:	bne	1d104 <sprintf@plt+0xba10>
   1d0f4:	sub	r3, fp, #176	; 0xb0
   1d0f8:	ldrh	r3, [r3, #2]
   1d0fc:	mov	r2, r3
   1d100:	b	1d110 <sprintf@plt+0xba1c>
   1d104:	sub	r3, fp, #176	; 0xb0
   1d108:	ldrh	r3, [r3, #2]
   1d10c:	mov	r2, r3
   1d110:	ldr	r3, [fp, #-16]
   1d114:	add	r3, r3, #56	; 0x38
   1d118:	ldrh	r3, [r3]
   1d11c:	cmp	r3, #2
   1d120:	bne	1d134 <sprintf@plt+0xba40>
   1d124:	ldr	r3, [fp, #-16]
   1d128:	add	r3, r3, #56	; 0x38
   1d12c:	ldrh	r3, [r3, #2]
   1d130:	b	1d140 <sprintf@plt+0xba4c>
   1d134:	ldr	r3, [fp, #-16]
   1d138:	add	r3, r3, #56	; 0x38
   1d13c:	ldrh	r3, [r3, #2]
   1d140:	cmp	r2, r3
   1d144:	bne	1d214 <sprintf@plt+0xbb20>
   1d148:	ldr	r3, [fp, #-16]
   1d14c:	ldr	r3, [r3, #184]	; 0xb8
   1d150:	cmp	r3, #0
   1d154:	beq	1d214 <sprintf@plt+0xbb20>
   1d158:	mov	r3, #0
   1d15c:	b	1d4c0 <sprintf@plt+0xbdcc>
   1d160:	ldr	r3, [pc, #880]	; 1d4d8 <sprintf@plt+0xbde4>
   1d164:	add	r3, pc, r3
   1d168:	str	r3, [fp, #-16]
   1d16c:	sub	r3, fp, #176	; 0xb0
   1d170:	str	r3, [fp, #-36]	; 0xffffffdc
   1d174:	ldr	r3, [fp, #-16]
   1d178:	add	r3, r3, #56	; 0x38
   1d17c:	str	r3, [fp, #-40]	; 0xffffffd8
   1d180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d184:	ldr	r2, [r3, #4]
   1d188:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d18c:	ldr	r3, [r3, #4]
   1d190:	cmp	r2, r3
   1d194:	bne	1d214 <sprintf@plt+0xbb20>
   1d198:	sub	r3, fp, #176	; 0xb0
   1d19c:	ldrh	r3, [r3]
   1d1a0:	cmp	r3, #2
   1d1a4:	bne	1d1b8 <sprintf@plt+0xbac4>
   1d1a8:	sub	r3, fp, #176	; 0xb0
   1d1ac:	ldrh	r3, [r3, #2]
   1d1b0:	mov	r2, r3
   1d1b4:	b	1d1c4 <sprintf@plt+0xbad0>
   1d1b8:	sub	r3, fp, #176	; 0xb0
   1d1bc:	ldrh	r3, [r3, #2]
   1d1c0:	mov	r2, r3
   1d1c4:	ldr	r3, [fp, #-16]
   1d1c8:	add	r3, r3, #56	; 0x38
   1d1cc:	ldrh	r3, [r3]
   1d1d0:	cmp	r3, #2
   1d1d4:	bne	1d1e8 <sprintf@plt+0xbaf4>
   1d1d8:	ldr	r3, [fp, #-16]
   1d1dc:	add	r3, r3, #56	; 0x38
   1d1e0:	ldrh	r3, [r3, #2]
   1d1e4:	b	1d1f4 <sprintf@plt+0xbb00>
   1d1e8:	ldr	r3, [fp, #-16]
   1d1ec:	add	r3, r3, #56	; 0x38
   1d1f0:	ldrh	r3, [r3, #2]
   1d1f4:	cmp	r2, r3
   1d1f8:	bne	1d214 <sprintf@plt+0xbb20>
   1d1fc:	ldr	r3, [fp, #-16]
   1d200:	ldr	r3, [r3, #184]	; 0xb8
   1d204:	cmp	r3, #0
   1d208:	beq	1d214 <sprintf@plt+0xbb20>
   1d20c:	mov	r3, #0
   1d210:	b	1d4c0 <sprintf@plt+0xbdcc>
   1d214:	sub	r3, fp, #176	; 0xb0
   1d218:	ldrh	r3, [r3]
   1d21c:	mov	r0, r3
   1d220:	ldr	r3, [pc, #692]	; 1d4dc <sprintf@plt+0xbde8>
   1d224:	add	r3, pc, r3
   1d228:	mov	r2, #0
   1d22c:	mov	r1, #1
   1d230:	bl	113a0 <rb_socket@plt>
   1d234:	str	r0, [fp, #-44]	; 0xffffffd4
   1d238:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d23c:	cmp	r3, #0
   1d240:	bne	1d27c <sprintf@plt+0xbb88>
   1d244:	bl	116e8 <__errno_location@plt>
   1d248:	mov	r3, r0
   1d24c:	ldr	r3, [r3]
   1d250:	mov	r0, r3
   1d254:	bl	112ec <strerror@plt>
   1d258:	mov	r3, r0
   1d25c:	mov	r2, r3
   1d260:	ldr	r3, [pc, #632]	; 1d4e0 <sprintf@plt+0xbdec>
   1d264:	add	r3, pc, r3
   1d268:	mov	r1, r3
   1d26c:	mov	r0, #67	; 0x43
   1d270:	bl	12a60 <sprintf@plt+0x136c>
   1d274:	mov	r0, #3
   1d278:	bl	116dc <exit@plt>
   1d27c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d280:	bl	1137c <rb_get_fd@plt>
   1d284:	sub	r2, fp, #188	; 0xbc
   1d288:	mov	r3, #4
   1d28c:	str	r3, [sp]
   1d290:	mov	r3, r2
   1d294:	mov	r2, #2
   1d298:	mov	r1, #1
   1d29c:	bl	116b8 <setsockopt@plt>
   1d2a0:	mov	r3, r0
   1d2a4:	cmp	r3, #0
   1d2a8:	beq	1d2e4 <sprintf@plt+0xbbf0>
   1d2ac:	bl	116e8 <__errno_location@plt>
   1d2b0:	mov	r3, r0
   1d2b4:	ldr	r3, [r3]
   1d2b8:	mov	r0, r3
   1d2bc:	bl	112ec <strerror@plt>
   1d2c0:	mov	r3, r0
   1d2c4:	mov	r2, r3
   1d2c8:	ldr	r3, [pc, #532]	; 1d4e4 <sprintf@plt+0xbdf0>
   1d2cc:	add	r3, pc, r3
   1d2d0:	mov	r1, r3
   1d2d4:	mov	r0, #67	; 0x43
   1d2d8:	bl	12a60 <sprintf@plt+0x136c>
   1d2dc:	mov	r0, #3
   1d2e0:	bl	116dc <exit@plt>
   1d2e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d2e8:	bl	1137c <rb_get_fd@plt>
   1d2ec:	sub	r3, fp, #176	; 0xb0
   1d2f0:	ldrh	r3, [r3]
   1d2f4:	cmp	r3, #2
   1d2f8:	bne	1d304 <sprintf@plt+0xbc10>
   1d2fc:	mov	r2, #16
   1d300:	b	1d308 <sprintf@plt+0xbc14>
   1d304:	mov	r2, #28
   1d308:	sub	r3, fp, #176	; 0xb0
   1d30c:	mov	r1, r3
   1d310:	bl	11580 <bind@plt>
   1d314:	mov	r3, r0
   1d318:	cmp	r3, #0
   1d31c:	beq	1d360 <sprintf@plt+0xbc6c>
   1d320:	bl	116e8 <__errno_location@plt>
   1d324:	mov	r3, r0
   1d328:	ldr	r3, [r3]
   1d32c:	mov	r0, r3
   1d330:	bl	112ec <strerror@plt>
   1d334:	mov	r3, r0
   1d338:	mov	r2, r3
   1d33c:	ldr	r3, [pc, #420]	; 1d4e8 <sprintf@plt+0xbdf4>
   1d340:	add	r3, pc, r3
   1d344:	mov	r1, r3
   1d348:	mov	r0, #87	; 0x57
   1d34c:	bl	12a60 <sprintf@plt+0x136c>
   1d350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d354:	bl	1152c <rb_close@plt>
   1d358:	mov	r3, #0
   1d35c:	b	1d4c0 <sprintf@plt+0xbdcc>
   1d360:	mov	r2, #0
   1d364:	mov	r1, #128	; 0x80
   1d368:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d36c:	bl	11694 <rb_listen@plt>
   1d370:	mov	r3, r0
   1d374:	cmp	r3, #0
   1d378:	beq	1d3bc <sprintf@plt+0xbcc8>
   1d37c:	bl	116e8 <__errno_location@plt>
   1d380:	mov	r3, r0
   1d384:	ldr	r3, [r3]
   1d388:	mov	r0, r3
   1d38c:	bl	112ec <strerror@plt>
   1d390:	mov	r3, r0
   1d394:	mov	r2, r3
   1d398:	ldr	r3, [pc, #332]	; 1d4ec <sprintf@plt+0xbdf8>
   1d39c:	add	r3, pc, r3
   1d3a0:	mov	r1, r3
   1d3a4:	mov	r0, #87	; 0x57
   1d3a8:	bl	12a60 <sprintf@plt+0x136c>
   1d3ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d3b0:	bl	1152c <rb_close@plt>
   1d3b4:	mov	r3, #0
   1d3b8:	b	1d4c0 <sprintf@plt+0xbdcc>
   1d3bc:	ldr	r3, [fp, #-16]
   1d3c0:	ldr	r3, [r3, #184]	; 0xb8
   1d3c4:	cmp	r3, #0
   1d3c8:	beq	1d3dc <sprintf@plt+0xbce8>
   1d3cc:	ldr	r3, [fp, #-16]
   1d3d0:	ldr	r3, [r3, #184]	; 0xb8
   1d3d4:	mov	r0, r3
   1d3d8:	bl	1152c <rb_close@plt>
   1d3dc:	ldr	r3, [fp, #-16]
   1d3e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d3e4:	str	r2, [r3, #184]	; 0xb8
   1d3e8:	ldr	r3, [pc, #256]	; 1d4f0 <sprintf@plt+0xbdfc>
   1d3ec:	ldr	r3, [r4, r3]
   1d3f0:	ldr	r3, [r3]
   1d3f4:	sub	r2, fp, #184	; 0xb8
   1d3f8:	mov	r1, r2
   1d3fc:	mov	r0, r3
   1d400:	bl	114cc <rb_dictionary_foreach_start@plt>
   1d404:	b	1d42c <sprintf@plt+0xbd38>
   1d408:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d40c:	bl	1d7a4 <sprintf@plt+0xc0b0>
   1d410:	ldr	r3, [pc, #216]	; 1d4f0 <sprintf@plt+0xbdfc>
   1d414:	ldr	r3, [r4, r3]
   1d418:	ldr	r3, [r3]
   1d41c:	sub	r2, fp, #184	; 0xb8
   1d420:	mov	r1, r2
   1d424:	mov	r0, r3
   1d428:	bl	11484 <rb_dictionary_foreach_next@plt>
   1d42c:	ldr	r3, [pc, #188]	; 1d4f0 <sprintf@plt+0xbdfc>
   1d430:	ldr	r3, [r4, r3]
   1d434:	ldr	r3, [r3]
   1d438:	sub	r2, fp, #184	; 0xb8
   1d43c:	mov	r1, r2
   1d440:	mov	r0, r3
   1d444:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1d448:	str	r0, [fp, #-48]	; 0xffffffd0
   1d44c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d450:	cmp	r3, #0
   1d454:	bne	1d408 <sprintf@plt+0xbd14>
   1d458:	ldr	r3, [fp, #-16]
   1d45c:	mov	r2, #53	; 0x35
   1d460:	ldr	r1, [fp, #-192]	; 0xffffff40
   1d464:	mov	r0, r3
   1d468:	bl	1146c <rb_strlcpy@plt>
   1d46c:	ldr	r3, [fp, #-16]
   1d470:	ldrh	r2, [fp, #-194]	; 0xffffff3e
   1d474:	strh	r2, [r3, #54]	; 0x36
   1d478:	ldr	r3, [fp, #-16]
   1d47c:	add	r3, r3, #56	; 0x38
   1d480:	sub	r1, fp, #176	; 0xb0
   1d484:	mov	r2, #128	; 0x80
   1d488:	mov	r0, r3
   1d48c:	bl	11514 <memcpy@plt>
   1d490:	ldr	r3, [pc, #92]	; 1d4f4 <sprintf@plt+0xbe00>
   1d494:	add	r3, pc, r3
   1d498:	mov	r2, #1
   1d49c:	strb	r2, [r3]
   1d4a0:	ldr	r3, [fp, #-16]
   1d4a4:	ldr	r0, [r3, #184]	; 0xb8
   1d4a8:	ldr	r3, [fp, #-16]
   1d4ac:	ldr	r2, [pc, #68]	; 1d4f8 <sprintf@plt+0xbe04>
   1d4b0:	add	r2, pc, r2
   1d4b4:	mov	r1, #0
   1d4b8:	bl	1164c <rb_accept_tcp@plt>
   1d4bc:	mov	r3, #1
   1d4c0:	mov	r0, r3
   1d4c4:	sub	sp, fp, #12
   1d4c8:	pop	{r4, r5, fp, pc}
   1d4cc:	andeq	r3, r1, r0, rrx
   1d4d0:	andeq	r2, r0, r8, ror #13
   1d4d4:	andeq	r8, r1, r4, lsr r0
   1d4d8:	andeq	r7, r1, r8, lsl #30
   1d4dc:			; <UNDEFINED> instruction: 0x000024b0
   1d4e0:	andeq	r2, r0, r4, lsl #9
   1d4e4:	andeq	r2, r0, ip, lsr r4
   1d4e8:	strdeq	r2, [r0], -r0
   1d4ec:			; <UNDEFINED> instruction: 0x000023b4
   1d4f0:	andeq	r0, r0, ip, ror #2
   1d4f4:	ldrdeq	r7, [r1], -r4
   1d4f8:			; <UNDEFINED> instruction: 0xffffeffc
   1d4fc:	push	{r4, fp, lr}
   1d500:	add	fp, sp, #8
   1d504:	sub	sp, sp, #28
   1d508:	str	r0, [fp, #-32]	; 0xffffffe0
   1d50c:	ldr	r4, [pc, #184]	; 1d5cc <sprintf@plt+0xbed8>
   1d510:	add	r4, pc, r4
   1d514:	ldr	r3, [pc, #180]	; 1d5d0 <sprintf@plt+0xbedc>
   1d518:	ldr	r3, [r4, r3]
   1d51c:	ldr	r3, [r3, #12]
   1d520:	mov	r1, r3
   1d524:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d528:	bl	1c044 <sprintf@plt+0xa950>
   1d52c:	str	r0, [fp, #-20]	; 0xffffffec
   1d530:	ldr	r3, [pc, #152]	; 1d5d0 <sprintf@plt+0xbedc>
   1d534:	ldr	r3, [r4, r3]
   1d538:	ldr	r1, [r3, #12]
   1d53c:	ldr	r3, [pc, #144]	; 1d5d4 <sprintf@plt+0xbee0>
   1d540:	add	r3, pc, r3
   1d544:	ldr	r3, [r3]
   1d548:	mov	r2, r3
   1d54c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d550:	bl	1c0c4 <sprintf@plt+0xa9d0>
   1d554:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d558:	mov	r2, #1
   1d55c:	strb	r2, [r3, #12]
   1d560:	ldr	r3, [pc, #112]	; 1d5d8 <sprintf@plt+0xbee4>
   1d564:	add	r3, pc, r3
   1d568:	ldr	r3, [r3]
   1d56c:	str	r3, [fp, #-16]
   1d570:	b	1d598 <sprintf@plt+0xbea4>
   1d574:	ldr	r3, [fp, #-16]
   1d578:	ldr	r3, [r3]
   1d57c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d580:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d588:	bl	1cc8c <sprintf@plt+0xb598>
   1d58c:	ldr	r3, [fp, #-16]
   1d590:	ldr	r3, [r3, #8]
   1d594:	str	r3, [fp, #-16]
   1d598:	ldr	r3, [fp, #-16]
   1d59c:	cmp	r3, #0
   1d5a0:	bne	1d574 <sprintf@plt+0xbe80>
   1d5a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d5a8:	ldr	r3, [r3]
   1d5ac:	ldr	r2, [pc, #40]	; 1d5dc <sprintf@plt+0xbee8>
   1d5b0:	add	r2, pc, r2
   1d5b4:	mov	r1, r2
   1d5b8:	mov	r0, r3
   1d5bc:	bl	129e8 <sprintf@plt+0x12f4>
   1d5c0:	nop			; (mov r0, r0)
   1d5c4:	sub	sp, fp, #8
   1d5c8:	pop	{r4, fp, pc}
   1d5cc:	andeq	r2, r1, r8, ror #21
   1d5d0:	muleq	r0, r8, r1
   1d5d4:	ldrdeq	r3, [r1], -r4
   1d5d8:	strdeq	r7, [r1], -r8
   1d5dc:	andeq	r2, r0, r4, asr #3
   1d5e0:	push	{fp, lr}
   1d5e4:	add	fp, sp, #4
   1d5e8:	sub	sp, sp, #16
   1d5ec:	str	r0, [fp, #-16]
   1d5f0:	str	r1, [fp, #-20]	; 0xffffffec
   1d5f4:	ldr	r2, [pc, #144]	; 1d68c <sprintf@plt+0xbf98>
   1d5f8:	add	r2, pc, r2
   1d5fc:	ldr	r3, [pc, #140]	; 1d690 <sprintf@plt+0xbf9c>
   1d600:	ldr	r3, [r2, r3]
   1d604:	ldr	r3, [r3, #12]
   1d608:	mov	r1, r3
   1d60c:	ldr	r0, [fp, #-16]
   1d610:	bl	1c044 <sprintf@plt+0xa950>
   1d614:	str	r0, [fp, #-8]
   1d618:	ldr	r3, [fp, #-8]
   1d61c:	cmp	r3, #0
   1d620:	beq	1d680 <sprintf@plt+0xbf8c>
   1d624:	ldr	r3, [fp, #-8]
   1d628:	ldrb	r3, [r3, #12]
   1d62c:	cmp	r3, #0
   1d630:	bne	1d680 <sprintf@plt+0xbf8c>
   1d634:	ldr	r3, [pc, #88]	; 1d694 <sprintf@plt+0xbfa0>
   1d638:	add	r3, pc, r3
   1d63c:	mov	r1, r3
   1d640:	ldr	r0, [fp, #-16]
   1d644:	bl	1bfdc <sprintf@plt+0xa8e8>
   1d648:	mov	r3, r0
   1d64c:	cmp	r3, #0
   1d650:	beq	1d684 <sprintf@plt+0xbf90>
   1d654:	ldr	r3, [pc, #60]	; 1d698 <sprintf@plt+0xbfa4>
   1d658:	add	r3, pc, r3
   1d65c:	mov	r1, r3
   1d660:	ldr	r0, [fp, #-16]
   1d664:	bl	1bfdc <sprintf@plt+0xa8e8>
   1d668:	mov	r3, r0
   1d66c:	cmp	r3, #0
   1d670:	beq	1d684 <sprintf@plt+0xbf90>
   1d674:	ldr	r0, [fp, #-16]
   1d678:	bl	1d4fc <sprintf@plt+0xbe08>
   1d67c:	b	1d684 <sprintf@plt+0xbf90>
   1d680:	nop			; (mov r0, r0)
   1d684:	sub	sp, fp, #4
   1d688:	pop	{fp, pc}
   1d68c:	andeq	r2, r1, r0, lsl #20
   1d690:	muleq	r0, r8, r1
   1d694:	andeq	r2, r0, r0, ror #2
   1d698:	andeq	r2, r0, r8, asr #2
   1d69c:	push	{r4, fp, lr}
   1d6a0:	add	fp, sp, #8
   1d6a4:	sub	sp, sp, #12
   1d6a8:	str	r0, [fp, #-16]
   1d6ac:	ldr	r4, [pc, #216]	; 1d78c <sprintf@plt+0xc098>
   1d6b0:	add	r4, pc, r4
   1d6b4:	ldr	r3, [pc, #212]	; 1d790 <sprintf@plt+0xc09c>
   1d6b8:	add	r3, pc, r3
   1d6bc:	ldrb	r3, [r3]
   1d6c0:	eor	r3, r3, #1
   1d6c4:	uxtb	r3, r3
   1d6c8:	cmp	r3, #0
   1d6cc:	bne	1d6e4 <sprintf@plt+0xbff0>
   1d6d0:	ldr	r3, [pc, #188]	; 1d794 <sprintf@plt+0xc0a0>
   1d6d4:	add	r3, pc, r3
   1d6d8:	ldr	r3, [r3, #8]
   1d6dc:	cmp	r3, #0
   1d6e0:	bne	1d704 <sprintf@plt+0xc010>
   1d6e4:	ldr	r3, [pc, #172]	; 1d798 <sprintf@plt+0xc0a4>
   1d6e8:	ldr	r3, [r4, r3]
   1d6ec:	ldr	r3, [r3, #12]
   1d6f0:	mov	r1, r3
   1d6f4:	ldr	r0, [fp, #-16]
   1d6f8:	bl	13844 <sprintf@plt+0x2150>
   1d6fc:	mov	r3, #1
   1d700:	b	1d780 <sprintf@plt+0xc08c>
   1d704:	ldr	r0, [fp, #-16]
   1d708:	bl	1be40 <sprintf@plt+0xa74c>
   1d70c:	ldr	r3, [pc, #132]	; 1d798 <sprintf@plt+0xc0a4>
   1d710:	ldr	r3, [r4, r3]
   1d714:	ldr	r4, [r3, #12]
   1d718:	mov	r0, #16
   1d71c:	bl	1bdac <sprintf@plt+0xa6b8>
   1d720:	mov	r3, r0
   1d724:	mov	r2, r3
   1d728:	mov	r1, r4
   1d72c:	ldr	r0, [fp, #-16]
   1d730:	bl	1c080 <sprintf@plt+0xa98c>
   1d734:	ldr	r3, [pc, #96]	; 1d79c <sprintf@plt+0xc0a8>
   1d738:	add	r3, pc, r3
   1d73c:	mov	r1, r3
   1d740:	ldr	r0, [fp, #-16]
   1d744:	bl	1bfdc <sprintf@plt+0xa8e8>
   1d748:	mov	r3, r0
   1d74c:	cmp	r3, #0
   1d750:	beq	1d77c <sprintf@plt+0xc088>
   1d754:	ldr	r3, [pc, #68]	; 1d7a0 <sprintf@plt+0xc0ac>
   1d758:	add	r3, pc, r3
   1d75c:	mov	r1, r3
   1d760:	ldr	r0, [fp, #-16]
   1d764:	bl	1bfdc <sprintf@plt+0xa8e8>
   1d768:	mov	r3, r0
   1d76c:	cmp	r3, #0
   1d770:	beq	1d77c <sprintf@plt+0xc088>
   1d774:	ldr	r0, [fp, #-16]
   1d778:	bl	1d4fc <sprintf@plt+0xbe08>
   1d77c:	mov	r3, #1
   1d780:	mov	r0, r3
   1d784:	sub	sp, fp, #8
   1d788:	pop	{r4, fp, pc}
   1d78c:	andeq	r2, r1, r8, asr #18
   1d790:			; <UNDEFINED> instruction: 0x000179b0
   1d794:	andeq	r7, r1, r8, lsl #19
   1d798:	muleq	r0, r8, r1
   1d79c:	andeq	r2, r0, r0, rrx
   1d7a0:	andeq	r2, r0, r8, asr #32
   1d7a4:	push	{r4, fp, lr}
   1d7a8:	add	fp, sp, #8
   1d7ac:	sub	sp, sp, #28
   1d7b0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d7b4:	ldr	r4, [pc, #312]	; 1d8f4 <sprintf@plt+0xc200>
   1d7b8:	add	r4, pc, r4
   1d7bc:	ldr	r3, [pc, #308]	; 1d8f8 <sprintf@plt+0xc204>
   1d7c0:	ldr	r3, [r4, r3]
   1d7c4:	ldr	r3, [r3, #12]
   1d7c8:	mov	r1, r3
   1d7cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d7d0:	bl	1c044 <sprintf@plt+0xa950>
   1d7d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7dc:	cmp	r3, #0
   1d7e0:	beq	1d8e8 <sprintf@plt+0xc1f4>
   1d7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7e8:	ldr	r3, [r3]
   1d7ec:	ldr	r2, [pc, #264]	; 1d8fc <sprintf@plt+0xc208>
   1d7f0:	add	r2, pc, r2
   1d7f4:	mov	r1, r2
   1d7f8:	mov	r0, r3
   1d7fc:	bl	129e8 <sprintf@plt+0x12f4>
   1d800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d804:	ldr	r3, [r3]
   1d808:	str	r3, [fp, #-16]
   1d80c:	ldr	r3, [fp, #-16]
   1d810:	cmp	r3, #0
   1d814:	beq	1d824 <sprintf@plt+0xc130>
   1d818:	ldr	r3, [fp, #-16]
   1d81c:	ldr	r3, [r3, #8]
   1d820:	b	1d828 <sprintf@plt+0xc134>
   1d824:	mov	r3, #0
   1d828:	str	r3, [fp, #-20]	; 0xffffffec
   1d82c:	b	1d87c <sprintf@plt+0xc188>
   1d830:	ldr	r3, [fp, #-16]
   1d834:	ldr	r3, [r3]
   1d838:	str	r3, [fp, #-28]	; 0xffffffe4
   1d83c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d840:	ldr	r3, [r3, #4]
   1d844:	mov	r0, r3
   1d848:	bl	1152c <rb_close@plt>
   1d84c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d850:	bl	1be00 <sprintf@plt+0xa70c>
   1d854:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d858:	str	r3, [fp, #-16]
   1d85c:	ldr	r3, [fp, #-16]
   1d860:	cmp	r3, #0
   1d864:	beq	1d874 <sprintf@plt+0xc180>
   1d868:	ldr	r3, [fp, #-16]
   1d86c:	ldr	r3, [r3, #8]
   1d870:	b	1d878 <sprintf@plt+0xc184>
   1d874:	mov	r3, #0
   1d878:	str	r3, [fp, #-20]	; 0xffffffec
   1d87c:	ldr	r3, [fp, #-16]
   1d880:	cmp	r3, #0
   1d884:	bne	1d830 <sprintf@plt+0xc13c>
   1d888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d88c:	bl	1be00 <sprintf@plt+0xa70c>
   1d890:	ldr	r3, [pc, #96]	; 1d8f8 <sprintf@plt+0xc204>
   1d894:	ldr	r3, [r4, r3]
   1d898:	ldr	r3, [r3, #12]
   1d89c:	mov	r2, #0
   1d8a0:	mov	r1, r3
   1d8a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8a8:	bl	1c080 <sprintf@plt+0xa98c>
   1d8ac:	ldr	r3, [pc, #68]	; 1d8f8 <sprintf@plt+0xc204>
   1d8b0:	ldr	r3, [r4, r3]
   1d8b4:	ldr	r3, [r3, #12]
   1d8b8:	mov	r2, #0
   1d8bc:	mov	r1, r3
   1d8c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8c4:	bl	1c110 <sprintf@plt+0xaa1c>
   1d8c8:	ldr	r3, [pc, #40]	; 1d8f8 <sprintf@plt+0xc204>
   1d8cc:	ldr	r3, [r4, r3]
   1d8d0:	ldr	r3, [r3, #12]
   1d8d4:	mov	r1, r3
   1d8d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8dc:	bl	13844 <sprintf@plt+0x2150>
   1d8e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8e4:	bl	1be74 <sprintf@plt+0xa780>
   1d8e8:	nop			; (mov r0, r0)
   1d8ec:	sub	sp, fp, #8
   1d8f0:	pop	{r4, fp, pc}
   1d8f4:	andeq	r2, r1, r0, asr #16
   1d8f8:	muleq	r0, r8, r1
   1d8fc:			; <UNDEFINED> instruction: 0x00001fb8
   1d900:	push	{r4, fp, lr}
   1d904:	add	fp, sp, #8
   1d908:	sub	sp, sp, #20
   1d90c:	ldr	r4, [pc, #124]	; 1d990 <sprintf@plt+0xc29c>
   1d910:	add	r4, pc, r4
   1d914:	ldr	r3, [pc, #120]	; 1d994 <sprintf@plt+0xc2a0>
   1d918:	ldr	r3, [r4, r3]
   1d91c:	ldr	r3, [r3]
   1d920:	sub	r2, fp, #24
   1d924:	mov	r1, r2
   1d928:	mov	r0, r3
   1d92c:	bl	114cc <rb_dictionary_foreach_start@plt>
   1d930:	b	1d958 <sprintf@plt+0xc264>
   1d934:	ldr	r0, [fp, #-16]
   1d938:	bl	1d7a4 <sprintf@plt+0xc0b0>
   1d93c:	ldr	r3, [pc, #80]	; 1d994 <sprintf@plt+0xc2a0>
   1d940:	ldr	r3, [r4, r3]
   1d944:	ldr	r3, [r3]
   1d948:	sub	r2, fp, #24
   1d94c:	mov	r1, r2
   1d950:	mov	r0, r3
   1d954:	bl	11484 <rb_dictionary_foreach_next@plt>
   1d958:	ldr	r3, [pc, #52]	; 1d994 <sprintf@plt+0xc2a0>
   1d95c:	ldr	r3, [r4, r3]
   1d960:	ldr	r3, [r3]
   1d964:	sub	r2, fp, #24
   1d968:	mov	r1, r2
   1d96c:	mov	r0, r3
   1d970:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1d974:	str	r0, [fp, #-16]
   1d978:	ldr	r3, [fp, #-16]
   1d97c:	cmp	r3, #0
   1d980:	bne	1d934 <sprintf@plt+0xc240>
   1d984:	nop			; (mov r0, r0)
   1d988:	sub	sp, fp, #8
   1d98c:	pop	{r4, fp, pc}
   1d990:	andeq	r2, r1, r8, ror #13
   1d994:	andeq	r0, r0, ip, ror #2
   1d998:	push	{fp, lr}
   1d99c:	add	fp, sp, #4
   1d9a0:	sub	sp, sp, #24
   1d9a4:	str	r0, [fp, #-16]
   1d9a8:	str	r1, [fp, #-20]	; 0xffffffec
   1d9ac:	str	r2, [fp, #-24]	; 0xffffffe8
   1d9b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9b4:	ldr	r3, [r3]
   1d9b8:	mov	r0, r3
   1d9bc:	bl	11568 <atoi@plt>
   1d9c0:	str	r0, [fp, #-8]
   1d9c4:	ldr	r3, [fp, #-8]
   1d9c8:	cmp	r3, #0
   1d9cc:	bge	1d9ec <sprintf@plt+0xc2f8>
   1d9d0:	ldr	r2, [fp, #-8]
   1d9d4:	ldr	r3, [pc, #40]	; 1da04 <sprintf@plt+0xc310>
   1d9d8:	add	r3, pc, r3
   1d9dc:	mov	r1, r3
   1d9e0:	mov	r0, #67	; 0x43
   1d9e4:	bl	12a60 <sprintf@plt+0x136c>
   1d9e8:	b	1d9fc <sprintf@plt+0xc308>
   1d9ec:	ldr	r3, [pc, #20]	; 1da08 <sprintf@plt+0xc314>
   1d9f0:	add	r3, pc, r3
   1d9f4:	ldr	r2, [fp, #-8]
   1d9f8:	str	r2, [r3]
   1d9fc:	sub	sp, fp, #4
   1da00:	pop	{fp, pc}
   1da04:	strdeq	r1, [r0], -r0
   1da08:	andeq	r3, r1, r4, lsr #10
   1da0c:	push	{r4, fp, lr}
   1da10:	add	fp, sp, #8
   1da14:	sub	sp, sp, #36	; 0x24
   1da18:	str	r0, [fp, #-32]	; 0xffffffe0
   1da1c:	str	r1, [fp, #-36]	; 0xffffffdc
   1da20:	str	r2, [fp, #-40]	; 0xffffffd8
   1da24:	ldr	r4, [pc, #536]	; 1dc44 <sprintf@plt+0xc550>
   1da28:	add	r4, pc, r4
   1da2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1da30:	ldr	r3, [r3]
   1da34:	ldrb	r3, [r3]
   1da38:	cmp	r3, #49	; 0x31
   1da3c:	moveq	r3, #1
   1da40:	movne	r3, #0
   1da44:	strb	r3, [fp, #-13]
   1da48:	ldrb	r3, [fp, #-13]
   1da4c:	eor	r3, r3, #1
   1da50:	uxtb	r3, r3
   1da54:	cmp	r3, #0
   1da58:	beq	1db70 <sprintf@plt+0xc47c>
   1da5c:	ldr	r3, [pc, #484]	; 1dc48 <sprintf@plt+0xc554>
   1da60:	add	r3, pc, r3
   1da64:	ldr	r3, [r3, #184]	; 0xb8
   1da68:	cmp	r3, #0
   1da6c:	bne	1da84 <sprintf@plt+0xc390>
   1da70:	ldr	r3, [pc, #468]	; 1dc4c <sprintf@plt+0xc558>
   1da74:	add	r3, pc, r3
   1da78:	ldr	r3, [r3, #372]	; 0x174
   1da7c:	cmp	r3, #0
   1da80:	beq	1dc28 <sprintf@plt+0xc534>
   1da84:	ldr	r3, [pc, #452]	; 1dc50 <sprintf@plt+0xc55c>
   1da88:	add	r3, pc, r3
   1da8c:	ldr	r3, [r3, #184]	; 0xb8
   1da90:	cmp	r3, #0
   1da94:	beq	1daac <sprintf@plt+0xc3b8>
   1da98:	ldr	r3, [pc, #436]	; 1dc54 <sprintf@plt+0xc560>
   1da9c:	add	r3, pc, r3
   1daa0:	ldr	r3, [r3, #184]	; 0xb8
   1daa4:	mov	r0, r3
   1daa8:	bl	1152c <rb_close@plt>
   1daac:	ldr	r3, [pc, #420]	; 1dc58 <sprintf@plt+0xc564>
   1dab0:	add	r3, pc, r3
   1dab4:	ldr	r3, [r3, #372]	; 0x174
   1dab8:	cmp	r3, #0
   1dabc:	beq	1dad4 <sprintf@plt+0xc3e0>
   1dac0:	ldr	r3, [pc, #404]	; 1dc5c <sprintf@plt+0xc568>
   1dac4:	add	r3, pc, r3
   1dac8:	ldr	r3, [r3, #372]	; 0x174
   1dacc:	mov	r0, r3
   1dad0:	bl	1152c <rb_close@plt>
   1dad4:	ldr	r3, [pc, #388]	; 1dc60 <sprintf@plt+0xc56c>
   1dad8:	add	r3, pc, r3
   1dadc:	mov	r2, #0
   1dae0:	str	r2, [r3, #372]	; 0x174
   1dae4:	ldr	r3, [pc, #376]	; 1dc64 <sprintf@plt+0xc570>
   1dae8:	add	r3, pc, r3
   1daec:	ldr	r2, [r3, #372]	; 0x174
   1daf0:	ldr	r3, [pc, #368]	; 1dc68 <sprintf@plt+0xc574>
   1daf4:	add	r3, pc, r3
   1daf8:	str	r2, [r3, #184]	; 0xb8
   1dafc:	ldr	r3, [pc, #360]	; 1dc6c <sprintf@plt+0xc578>
   1db00:	ldr	r3, [r4, r3]
   1db04:	ldr	r3, [r3]
   1db08:	sub	r2, fp, #28
   1db0c:	mov	r1, r2
   1db10:	mov	r0, r3
   1db14:	bl	114cc <rb_dictionary_foreach_start@plt>
   1db18:	b	1db40 <sprintf@plt+0xc44c>
   1db1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db20:	bl	1d7a4 <sprintf@plt+0xc0b0>
   1db24:	ldr	r3, [pc, #320]	; 1dc6c <sprintf@plt+0xc578>
   1db28:	ldr	r3, [r4, r3]
   1db2c:	ldr	r3, [r3]
   1db30:	sub	r2, fp, #28
   1db34:	mov	r1, r2
   1db38:	mov	r0, r3
   1db3c:	bl	11484 <rb_dictionary_foreach_next@plt>
   1db40:	ldr	r3, [pc, #292]	; 1dc6c <sprintf@plt+0xc578>
   1db44:	ldr	r3, [r4, r3]
   1db48:	ldr	r3, [r3]
   1db4c:	sub	r2, fp, #28
   1db50:	mov	r1, r2
   1db54:	mov	r0, r3
   1db58:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1db5c:	str	r0, [fp, #-20]	; 0xffffffec
   1db60:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db64:	cmp	r3, #0
   1db68:	bne	1db1c <sprintf@plt+0xc428>
   1db6c:	b	1dc28 <sprintf@plt+0xc534>
   1db70:	ldr	r3, [pc, #248]	; 1dc70 <sprintf@plt+0xc57c>
   1db74:	add	r3, pc, r3
   1db78:	ldrb	r3, [r3]
   1db7c:	cmp	r3, #0
   1db80:	beq	1dbcc <sprintf@plt+0xc4d8>
   1db84:	ldr	r3, [pc, #232]	; 1dc74 <sprintf@plt+0xc580>
   1db88:	add	r3, pc, r3
   1db8c:	ldrh	r3, [r3, #54]	; 0x36
   1db90:	cmp	r3, #0
   1db94:	beq	1dbcc <sprintf@plt+0xc4d8>
   1db98:	ldr	r3, [pc, #216]	; 1dc78 <sprintf@plt+0xc584>
   1db9c:	add	r3, pc, r3
   1dba0:	ldr	r3, [r3, #184]	; 0xb8
   1dba4:	cmp	r3, #0
   1dba8:	bne	1dbcc <sprintf@plt+0xc4d8>
   1dbac:	ldr	r3, [pc, #200]	; 1dc7c <sprintf@plt+0xc588>
   1dbb0:	add	r3, pc, r3
   1dbb4:	ldrh	r3, [r3, #54]	; 0x36
   1dbb8:	mov	r1, r3
   1dbbc:	ldr	r3, [pc, #188]	; 1dc80 <sprintf@plt+0xc58c>
   1dbc0:	add	r3, pc, r3
   1dbc4:	mov	r0, r3
   1dbc8:	bl	1cf7c <sprintf@plt+0xb888>
   1dbcc:	ldr	r3, [pc, #176]	; 1dc84 <sprintf@plt+0xc590>
   1dbd0:	add	r3, pc, r3
   1dbd4:	ldrb	r3, [r3, #188]	; 0xbc
   1dbd8:	cmp	r3, #0
   1dbdc:	beq	1dc28 <sprintf@plt+0xc534>
   1dbe0:	ldr	r3, [pc, #160]	; 1dc88 <sprintf@plt+0xc594>
   1dbe4:	add	r3, pc, r3
   1dbe8:	ldrh	r3, [r3, #242]	; 0xf2
   1dbec:	cmp	r3, #0
   1dbf0:	beq	1dc28 <sprintf@plt+0xc534>
   1dbf4:	ldr	r3, [pc, #144]	; 1dc8c <sprintf@plt+0xc598>
   1dbf8:	add	r3, pc, r3
   1dbfc:	ldr	r3, [r3, #372]	; 0x174
   1dc00:	cmp	r3, #0
   1dc04:	bne	1dc28 <sprintf@plt+0xc534>
   1dc08:	ldr	r3, [pc, #128]	; 1dc90 <sprintf@plt+0xc59c>
   1dc0c:	add	r3, pc, r3
   1dc10:	ldrh	r3, [r3, #242]	; 0xf2
   1dc14:	mov	r1, r3
   1dc18:	ldr	r3, [pc, #116]	; 1dc94 <sprintf@plt+0xc5a0>
   1dc1c:	add	r3, pc, r3
   1dc20:	add	r0, r3, #188	; 0xbc
   1dc24:	bl	1cf7c <sprintf@plt+0xb888>
   1dc28:	ldr	r3, [pc, #104]	; 1dc98 <sprintf@plt+0xc5a4>
   1dc2c:	add	r3, pc, r3
   1dc30:	ldrb	r2, [fp, #-13]
   1dc34:	strb	r2, [r3]
   1dc38:	nop			; (mov r0, r0)
   1dc3c:	sub	sp, fp, #8
   1dc40:	pop	{r4, fp, pc}
   1dc44:	ldrdeq	r2, [r1], -r0
   1dc48:	andeq	r7, r1, ip, lsl #12
   1dc4c:	strdeq	r7, [r1], -r8
   1dc50:	andeq	r7, r1, r4, ror #11
   1dc54:	ldrdeq	r7, [r1], -r0
   1dc58:			; <UNDEFINED> instruction: 0x000175bc
   1dc5c:	andeq	r7, r1, r8, lsr #11
   1dc60:	muleq	r1, r4, r5
   1dc64:	andeq	r7, r1, r4, lsl #11
   1dc68:	andeq	r7, r1, r8, ror r5
   1dc6c:	andeq	r0, r0, ip, ror #2
   1dc70:	strdeq	r7, [r1], -r8
   1dc74:	andeq	r7, r1, r4, ror #9
   1dc78:	ldrdeq	r7, [r1], -r0
   1dc7c:			; <UNDEFINED> instruction: 0x000174bc
   1dc80:	andeq	r7, r1, ip, lsr #9
   1dc84:	muleq	r1, ip, r4
   1dc88:	andeq	r7, r1, r8, lsl #9
   1dc8c:	andeq	r7, r1, r4, ror r4
   1dc90:	andeq	r7, r1, r0, ror #8
   1dc94:	andeq	r7, r1, r0, asr r4
   1dc98:	andeq	r7, r1, ip, lsr r4
   1dc9c:	push	{fp, lr}
   1dca0:	add	fp, sp, #4
   1dca4:	sub	sp, sp, #24
   1dca8:	str	r0, [fp, #-16]
   1dcac:	str	r1, [fp, #-20]	; 0xffffffec
   1dcb0:	str	r2, [fp, #-24]	; 0xffffffe8
   1dcb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dcb8:	ldr	r3, [r3]
   1dcbc:	str	r3, [fp, #-8]
   1dcc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dcc4:	add	r3, r3, #4
   1dcc8:	ldr	r3, [r3]
   1dccc:	mov	r0, r3
   1dcd0:	bl	11568 <atoi@plt>
   1dcd4:	str	r0, [fp, #-12]
   1dcd8:	ldr	r3, [fp, #-12]
   1dcdc:	cmp	r3, #65536	; 0x10000
   1dce0:	bge	1dcf0 <sprintf@plt+0xc5fc>
   1dce4:	ldr	r3, [fp, #-12]
   1dce8:	cmp	r3, #0
   1dcec:	bgt	1dd1c <sprintf@plt+0xc628>
   1dcf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dcf4:	ldr	r2, [r3]
   1dcf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dcfc:	add	r3, r3, #4
   1dd00:	ldr	r3, [r3]
   1dd04:	ldr	r1, [pc, #48]	; 1dd3c <sprintf@plt+0xc648>
   1dd08:	add	r1, pc, r1
   1dd0c:	mov	r0, #67	; 0x43
   1dd10:	bl	12a60 <sprintf@plt+0x136c>
   1dd14:	mov	r0, #3
   1dd18:	bl	116dc <exit@plt>
   1dd1c:	ldr	r3, [fp, #-12]
   1dd20:	uxth	r3, r3
   1dd24:	mov	r1, r3
   1dd28:	ldr	r0, [fp, #-8]
   1dd2c:	bl	1cf7c <sprintf@plt+0xb888>
   1dd30:	nop			; (mov r0, r0)
   1dd34:	sub	sp, fp, #4
   1dd38:	pop	{fp, pc}
   1dd3c:	andeq	r1, r0, r4, ror #21
   1dd40:	push	{fp, lr}
   1dd44:	add	fp, sp, #4
   1dd48:	sub	sp, sp, #24
   1dd4c:	str	r0, [fp, #-16]
   1dd50:	str	r1, [fp, #-20]	; 0xffffffec
   1dd54:	str	r2, [fp, #-24]	; 0xffffffe8
   1dd58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd5c:	add	r3, r3, #4
   1dd60:	ldr	r3, [r3]
   1dd64:	mov	r0, r3
   1dd68:	bl	11568 <atoi@plt>
   1dd6c:	str	r0, [fp, #-8]
   1dd70:	mov	r0, #40	; 0x28
   1dd74:	bl	1bdac <sprintf@plt+0xa6b8>
   1dd78:	str	r0, [fp, #-12]
   1dd7c:	ldr	r3, [fp, #-8]
   1dd80:	cmp	r3, #0
   1dd84:	ble	1dd94 <sprintf@plt+0xc6a0>
   1dd88:	ldr	r3, [fp, #-8]
   1dd8c:	cmp	r3, #65536	; 0x10000
   1dd90:	blt	1ddc0 <sprintf@plt+0xc6cc>
   1dd94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd98:	ldr	r2, [r3]
   1dd9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dda0:	add	r3, r3, #4
   1dda4:	ldr	r3, [r3]
   1dda8:	ldr	r1, [pc, #500]	; 1dfa4 <sprintf@plt+0xc8b0>
   1ddac:	add	r1, pc, r1
   1ddb0:	mov	r0, #67	; 0x43
   1ddb4:	bl	12a60 <sprintf@plt+0x136c>
   1ddb8:	mov	r0, #3
   1ddbc:	bl	116dc <exit@plt>
   1ddc0:	ldr	r3, [fp, #-8]
   1ddc4:	uxth	r2, r3
   1ddc8:	ldr	r3, [fp, #-12]
   1ddcc:	strh	r2, [r3, #20]
   1ddd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddd4:	ldr	r3, [r3]
   1ddd8:	mov	r0, r3
   1dddc:	bl	1c154 <sprintf@plt+0xaa60>
   1dde0:	mov	r2, r0
   1dde4:	ldr	r3, [fp, #-12]
   1dde8:	str	r2, [r3, #16]
   1ddec:	ldr	r3, [fp, #-12]
   1ddf0:	ldr	r3, [r3, #16]
   1ddf4:	sub	r3, r3, #1
   1ddf8:	cmp	r3, #3
   1ddfc:	addls	pc, pc, r3, lsl #2
   1de00:	b	1df04 <sprintf@plt+0xc810>
   1de04:	b	1de14 <sprintf@plt+0xc720>
   1de08:	b	1de50 <sprintf@plt+0xc75c>
   1de0c:	b	1de8c <sprintf@plt+0xc798>
   1de10:	b	1dec8 <sprintf@plt+0xc7d4>
   1de14:	ldr	r0, [fp, #-12]
   1de18:	ldr	r3, [fp, #-12]
   1de1c:	ldrh	r3, [r3, #20]
   1de20:	ldr	r2, [pc, #384]	; 1dfa8 <sprintf@plt+0xc8b4>
   1de24:	add	r2, pc, r2
   1de28:	mov	r1, #16
   1de2c:	bl	11688 <snprintf@plt>
   1de30:	ldr	r3, [fp, #-12]
   1de34:	mov	r2, #0
   1de38:	strb	r2, [r3, #22]
   1de3c:	ldr	r3, [fp, #-12]
   1de40:	ldr	r2, [pc, #356]	; 1dfac <sprintf@plt+0xc8b8>
   1de44:	add	r2, pc, r2
   1de48:	str	r2, [r3, #24]
   1de4c:	b	1df2c <sprintf@plt+0xc838>
   1de50:	ldr	r0, [fp, #-12]
   1de54:	ldr	r3, [fp, #-12]
   1de58:	ldrh	r3, [r3, #20]
   1de5c:	ldr	r2, [pc, #332]	; 1dfb0 <sprintf@plt+0xc8bc>
   1de60:	add	r2, pc, r2
   1de64:	mov	r1, #16
   1de68:	bl	11688 <snprintf@plt>
   1de6c:	ldr	r3, [fp, #-12]
   1de70:	mov	r2, #0
   1de74:	strb	r2, [r3, #22]
   1de78:	ldr	r3, [fp, #-12]
   1de7c:	ldr	r2, [pc, #304]	; 1dfb4 <sprintf@plt+0xc8c0>
   1de80:	add	r2, pc, r2
   1de84:	str	r2, [r3, #24]
   1de88:	b	1df2c <sprintf@plt+0xc838>
   1de8c:	ldr	r0, [fp, #-12]
   1de90:	ldr	r3, [fp, #-12]
   1de94:	ldrh	r3, [r3, #20]
   1de98:	ldr	r2, [pc, #280]	; 1dfb8 <sprintf@plt+0xc8c4>
   1de9c:	add	r2, pc, r2
   1dea0:	mov	r1, #16
   1dea4:	bl	11688 <snprintf@plt>
   1dea8:	ldr	r3, [fp, #-12]
   1deac:	mov	r2, #0
   1deb0:	strb	r2, [r3, #22]
   1deb4:	ldr	r3, [fp, #-12]
   1deb8:	ldr	r2, [pc, #252]	; 1dfbc <sprintf@plt+0xc8c8>
   1debc:	add	r2, pc, r2
   1dec0:	str	r2, [r3, #24]
   1dec4:	b	1df2c <sprintf@plt+0xc838>
   1dec8:	ldr	r0, [fp, #-12]
   1decc:	ldr	r3, [fp, #-12]
   1ded0:	ldrh	r3, [r3, #20]
   1ded4:	ldr	r2, [pc, #228]	; 1dfc0 <sprintf@plt+0xc8cc>
   1ded8:	add	r2, pc, r2
   1dedc:	mov	r1, #16
   1dee0:	bl	11688 <snprintf@plt>
   1dee4:	ldr	r3, [fp, #-12]
   1dee8:	ldr	r2, [pc, #212]	; 1dfc4 <sprintf@plt+0xc8d0>
   1deec:	add	r2, pc, r2
   1def0:	str	r2, [r3, #24]
   1def4:	ldr	r3, [fp, #-12]
   1def8:	mov	r2, #1
   1defc:	strb	r2, [r3, #22]
   1df00:	b	1df2c <sprintf@plt+0xc838>
   1df04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df08:	ldr	r2, [r3]
   1df0c:	ldr	r3, [fp, #-12]
   1df10:	ldrh	r3, [r3, #20]
   1df14:	ldr	r1, [pc, #172]	; 1dfc8 <sprintf@plt+0xc8d4>
   1df18:	add	r1, pc, r1
   1df1c:	mov	r0, #67	; 0x43
   1df20:	bl	12a60 <sprintf@plt+0x136c>
   1df24:	mov	r0, #3
   1df28:	bl	116dc <exit@plt>
   1df2c:	ldr	r3, [fp, #-12]
   1df30:	ldr	r2, [r3, #16]
   1df34:	ldr	r3, [fp, #-12]
   1df38:	ldrh	r3, [r3, #20]
   1df3c:	mov	r1, r3
   1df40:	mov	r0, r2
   1df44:	bl	1c224 <sprintf@plt+0xab30>
   1df48:	mov	r3, r0
   1df4c:	cmp	r3, #0
   1df50:	beq	1df80 <sprintf@plt+0xc88c>
   1df54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df58:	ldr	r2, [r3]
   1df5c:	ldr	r3, [fp, #-12]
   1df60:	ldrh	r3, [r3, #20]
   1df64:	ldr	r1, [pc, #96]	; 1dfcc <sprintf@plt+0xc8d8>
   1df68:	add	r1, pc, r1
   1df6c:	mov	r0, #67	; 0x43
   1df70:	bl	12a60 <sprintf@plt+0x136c>
   1df74:	ldr	r0, [fp, #-12]
   1df78:	bl	1be00 <sprintf@plt+0xa70c>
   1df7c:	b	1df9c <sprintf@plt+0xc8a8>
   1df80:	ldr	r3, [fp, #-12]
   1df84:	add	r3, r3, #28
   1df88:	ldr	r2, [pc, #64]	; 1dfd0 <sprintf@plt+0xc8dc>
   1df8c:	add	r2, pc, r2
   1df90:	mov	r1, r3
   1df94:	ldr	r0, [fp, #-12]
   1df98:	bl	1bb28 <sprintf@plt+0xa434>
   1df9c:	sub	sp, fp, #4
   1dfa0:	pop	{fp, pc}
   1dfa4:	andeq	r1, r0, r0, ror #20
   1dfa8:	andeq	r1, r0, r0, lsl sl
   1dfac:			; <UNDEFINED> instruction: 0xffffea50
   1dfb0:	andeq	r1, r0, r0, ror #19
   1dfb4:			; <UNDEFINED> instruction: 0xffffeb30
   1dfb8:			; <UNDEFINED> instruction: 0x000019b0
   1dfbc:			; <UNDEFINED> instruction: 0xffffecc0
   1dfc0:	andeq	r1, r0, r4, lsl #19
   1dfc4:			; <UNDEFINED> instruction: 0xffffec90
   1dfc8:	andeq	r1, r0, r8, asr r9
   1dfcc:	andeq	r1, r0, r8, lsr r9
   1dfd0:	ldrdeq	r7, [r1], -r0
   1dfd4:	push	{r4, fp, lr}
   1dfd8:	add	fp, sp, #8
   1dfdc:	sub	sp, sp, #60	; 0x3c
   1dfe0:	str	r0, [fp, #-56]	; 0xffffffc8
   1dfe4:	str	r1, [fp, #-60]	; 0xffffffc4
   1dfe8:	str	r2, [fp, #-64]	; 0xffffffc0
   1dfec:	ldr	r4, [pc, #660]	; 1e288 <sprintf@plt+0xcb94>
   1dff0:	add	r4, pc, r4
   1dff4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1dff8:	ldr	r3, [r3]
   1dffc:	mov	r0, r3
   1e000:	bl	1c154 <sprintf@plt+0xaa60>
   1e004:	str	r0, [fp, #-20]	; 0xffffffec
   1e008:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e00c:	add	r3, r3, #4
   1e010:	ldr	r3, [r3]
   1e014:	mov	r0, r3
   1e018:	bl	11568 <atoi@plt>
   1e01c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e024:	cmp	r3, #0
   1e028:	ble	1e038 <sprintf@plt+0xc944>
   1e02c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e030:	cmp	r3, #65536	; 0x10000
   1e034:	blt	1e064 <sprintf@plt+0xc970>
   1e038:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e03c:	ldr	r2, [r3]
   1e040:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e044:	add	r3, r3, #4
   1e048:	ldr	r3, [r3]
   1e04c:	ldr	r1, [pc, #568]	; 1e28c <sprintf@plt+0xcb98>
   1e050:	add	r1, pc, r1
   1e054:	mov	r0, #67	; 0x43
   1e058:	bl	12a60 <sprintf@plt+0x136c>
   1e05c:	mov	r0, #3
   1e060:	bl	116dc <exit@plt>
   1e064:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e068:	cmp	r3, #0
   1e06c:	bne	1e094 <sprintf@plt+0xc9a0>
   1e070:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e074:	ldr	r2, [r3]
   1e078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e07c:	ldr	r1, [pc, #524]	; 1e290 <sprintf@plt+0xcb9c>
   1e080:	add	r1, pc, r1
   1e084:	mov	r0, #67	; 0x43
   1e088:	bl	12a60 <sprintf@plt+0x136c>
   1e08c:	mov	r0, #3
   1e090:	bl	116dc <exit@plt>
   1e094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e098:	uxth	r3, r3
   1e09c:	mov	r1, r3
   1e0a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e0a4:	bl	1c224 <sprintf@plt+0xab30>
   1e0a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e0b0:	cmp	r3, #0
   1e0b4:	bne	1e0dc <sprintf@plt+0xc9e8>
   1e0b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e0bc:	ldr	r2, [r3]
   1e0c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0c4:	ldr	r1, [pc, #456]	; 1e294 <sprintf@plt+0xcba0>
   1e0c8:	add	r1, pc, r1
   1e0cc:	mov	r0, #67	; 0x43
   1e0d0:	bl	12a60 <sprintf@plt+0x136c>
   1e0d4:	mov	r0, #3
   1e0d8:	bl	116dc <exit@plt>
   1e0dc:	ldr	r3, [pc, #436]	; 1e298 <sprintf@plt+0xcba4>
   1e0e0:	ldr	r3, [r4, r3]
   1e0e4:	ldr	r3, [r3]
   1e0e8:	sub	r2, fp, #48	; 0x30
   1e0ec:	mov	r1, r2
   1e0f0:	mov	r0, r3
   1e0f4:	bl	114cc <rb_dictionary_foreach_start@plt>
   1e0f8:	b	1e208 <sprintf@plt+0xcb14>
   1e0fc:	ldr	r3, [pc, #408]	; 1e29c <sprintf@plt+0xcba8>
   1e100:	ldr	r3, [r4, r3]
   1e104:	ldr	r3, [r3, #12]
   1e108:	mov	r1, r3
   1e10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e110:	bl	1c044 <sprintf@plt+0xa950>
   1e114:	str	r0, [fp, #-36]	; 0xffffffdc
   1e118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e11c:	cmp	r3, #0
   1e120:	beq	1e1e8 <sprintf@plt+0xcaf4>
   1e124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e128:	bl	1be40 <sprintf@plt+0xa74c>
   1e12c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e130:	ldr	r3, [r3]
   1e134:	str	r3, [fp, #-16]
   1e138:	b	1e1c8 <sprintf@plt+0xcad4>
   1e13c:	ldr	r3, [fp, #-16]
   1e140:	ldr	r3, [r3]
   1e144:	str	r3, [fp, #-40]	; 0xffffffd8
   1e148:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e14c:	ldr	r3, [r3, #8]
   1e150:	ldrh	r2, [r3, #20]
   1e154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e158:	ldrh	r3, [r3, #20]
   1e15c:	cmp	r2, r3
   1e160:	bne	1e1bc <sprintf@plt+0xcac8>
   1e164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e168:	ldr	r3, [r3, #8]
   1e16c:	ldr	r2, [r3, #16]
   1e170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e174:	ldr	r3, [r3, #16]
   1e178:	cmp	r2, r3
   1e17c:	bne	1e1bc <sprintf@plt+0xcac8>
   1e180:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e184:	add	r3, r3, #16
   1e188:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e18c:	mov	r1, r2
   1e190:	mov	r0, r3
   1e194:	bl	1bc7c <sprintf@plt+0xa588>
   1e198:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e19c:	bl	1be00 <sprintf@plt+0xa70c>
   1e1a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e1a4:	ldr	r3, [r3, #8]
   1e1a8:	cmp	r3, #0
   1e1ac:	bne	1e1d8 <sprintf@plt+0xcae4>
   1e1b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1b4:	bl	1d7a4 <sprintf@plt+0xc0b0>
   1e1b8:	b	1e1d8 <sprintf@plt+0xcae4>
   1e1bc:	ldr	r3, [fp, #-16]
   1e1c0:	ldr	r3, [r3, #8]
   1e1c4:	str	r3, [fp, #-16]
   1e1c8:	ldr	r3, [fp, #-16]
   1e1cc:	cmp	r3, #0
   1e1d0:	bne	1e13c <sprintf@plt+0xca48>
   1e1d4:	b	1e1dc <sprintf@plt+0xcae8>
   1e1d8:	nop			; (mov r0, r0)
   1e1dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1e0:	bl	1be74 <sprintf@plt+0xa780>
   1e1e4:	b	1e1ec <sprintf@plt+0xcaf8>
   1e1e8:	nop			; (mov r0, r0)
   1e1ec:	ldr	r3, [pc, #164]	; 1e298 <sprintf@plt+0xcba4>
   1e1f0:	ldr	r3, [r4, r3]
   1e1f4:	ldr	r3, [r3]
   1e1f8:	sub	r2, fp, #48	; 0x30
   1e1fc:	mov	r1, r2
   1e200:	mov	r0, r3
   1e204:	bl	11484 <rb_dictionary_foreach_next@plt>
   1e208:	ldr	r3, [pc, #136]	; 1e298 <sprintf@plt+0xcba4>
   1e20c:	ldr	r3, [r4, r3]
   1e210:	ldr	r3, [r3]
   1e214:	sub	r2, fp, #48	; 0x30
   1e218:	mov	r1, r2
   1e21c:	mov	r0, r3
   1e220:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1e224:	str	r0, [fp, #-32]	; 0xffffffe0
   1e228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e22c:	cmp	r3, #0
   1e230:	bne	1e0fc <sprintf@plt+0xca08>
   1e234:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e238:	add	r3, r3, #28
   1e23c:	ldr	r2, [pc, #92]	; 1e2a0 <sprintf@plt+0xcbac>
   1e240:	add	r2, pc, r2
   1e244:	mov	r1, r2
   1e248:	mov	r0, r3
   1e24c:	bl	1bc7c <sprintf@plt+0xa588>
   1e250:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e254:	bl	1be00 <sprintf@plt+0xa70c>
   1e258:	ldr	r3, [pc, #68]	; 1e2a4 <sprintf@plt+0xcbb0>
   1e25c:	add	r3, pc, r3
   1e260:	ldr	r3, [r3, #8]
   1e264:	cmp	r3, #0
   1e268:	bne	1e27c <sprintf@plt+0xcb88>
   1e26c:	ldr	r3, [pc, #52]	; 1e2a8 <sprintf@plt+0xcbb4>
   1e270:	add	r3, pc, r3
   1e274:	mov	r2, #0
   1e278:	strb	r2, [r3]
   1e27c:	nop			; (mov r0, r0)
   1e280:	sub	sp, fp, #8
   1e284:	pop	{r4, fp, pc}
   1e288:	andeq	r2, r1, r8
   1e28c:	andeq	r1, r0, ip, ror r8
   1e290:	andeq	r1, r0, ip, ror r8
   1e294:	andeq	r1, r0, ip, ror #16
   1e298:	andeq	r0, r0, ip, ror #2
   1e29c:	muleq	r0, r8, r1
   1e2a0:	andeq	r6, r1, ip, lsl lr
   1e2a4:	andeq	r6, r1, r0, lsl #28
   1e2a8:	strdeq	r6, [r1], -r8
   1e2ac:	push	{r4, fp, lr}
   1e2b0:	add	fp, sp, #8
   1e2b4:	sub	sp, sp, #44	; 0x2c
   1e2b8:	str	r0, [fp, #-40]	; 0xffffffd8
   1e2bc:	str	r1, [fp, #-44]	; 0xffffffd4
   1e2c0:	str	r2, [fp, #-48]	; 0xffffffd0
   1e2c4:	ldr	r4, [pc, #280]	; 1e3e4 <sprintf@plt+0xccf0>
   1e2c8:	add	r4, pc, r4
   1e2cc:	ldr	r3, [pc, #276]	; 1e3e8 <sprintf@plt+0xccf4>
   1e2d0:	add	r3, pc, r3
   1e2d4:	ldr	r3, [r3]
   1e2d8:	str	r3, [fp, #-16]
   1e2dc:	ldr	r3, [fp, #-16]
   1e2e0:	cmp	r3, #0
   1e2e4:	beq	1e2f4 <sprintf@plt+0xcc00>
   1e2e8:	ldr	r3, [fp, #-16]
   1e2ec:	ldr	r3, [r3, #8]
   1e2f0:	b	1e2f8 <sprintf@plt+0xcc04>
   1e2f4:	mov	r3, #0
   1e2f8:	str	r3, [fp, #-20]	; 0xffffffec
   1e2fc:	b	1e34c <sprintf@plt+0xcc58>
   1e300:	ldr	r3, [fp, #-16]
   1e304:	ldr	r3, [r3]
   1e308:	mov	r0, r3
   1e30c:	bl	1be00 <sprintf@plt+0xa70c>
   1e310:	ldr	r3, [pc, #212]	; 1e3ec <sprintf@plt+0xccf8>
   1e314:	add	r3, pc, r3
   1e318:	mov	r1, r3
   1e31c:	ldr	r0, [fp, #-16]
   1e320:	bl	1bc7c <sprintf@plt+0xa588>
   1e324:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e328:	str	r3, [fp, #-16]
   1e32c:	ldr	r3, [fp, #-16]
   1e330:	cmp	r3, #0
   1e334:	beq	1e344 <sprintf@plt+0xcc50>
   1e338:	ldr	r3, [fp, #-16]
   1e33c:	ldr	r3, [r3, #8]
   1e340:	b	1e348 <sprintf@plt+0xcc54>
   1e344:	mov	r3, #0
   1e348:	str	r3, [fp, #-20]	; 0xffffffec
   1e34c:	ldr	r3, [fp, #-16]
   1e350:	cmp	r3, #0
   1e354:	bne	1e300 <sprintf@plt+0xcc0c>
   1e358:	ldr	r3, [pc, #144]	; 1e3f0 <sprintf@plt+0xccfc>
   1e35c:	ldr	r3, [r4, r3]
   1e360:	ldr	r3, [r3]
   1e364:	sub	r2, fp, #32
   1e368:	mov	r1, r2
   1e36c:	mov	r0, r3
   1e370:	bl	114cc <rb_dictionary_foreach_start@plt>
   1e374:	b	1e39c <sprintf@plt+0xcca8>
   1e378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e37c:	bl	1d7a4 <sprintf@plt+0xc0b0>
   1e380:	ldr	r3, [pc, #104]	; 1e3f0 <sprintf@plt+0xccfc>
   1e384:	ldr	r3, [r4, r3]
   1e388:	ldr	r3, [r3]
   1e38c:	sub	r2, fp, #32
   1e390:	mov	r1, r2
   1e394:	mov	r0, r3
   1e398:	bl	11484 <rb_dictionary_foreach_next@plt>
   1e39c:	ldr	r3, [pc, #76]	; 1e3f0 <sprintf@plt+0xccfc>
   1e3a0:	ldr	r3, [r4, r3]
   1e3a4:	ldr	r3, [r3]
   1e3a8:	sub	r2, fp, #32
   1e3ac:	mov	r1, r2
   1e3b0:	mov	r0, r3
   1e3b4:	bl	113dc <rb_dictionary_foreach_cur@plt>
   1e3b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e3c0:	cmp	r3, #0
   1e3c4:	bne	1e378 <sprintf@plt+0xcc84>
   1e3c8:	ldr	r3, [pc, #36]	; 1e3f4 <sprintf@plt+0xcd00>
   1e3cc:	add	r3, pc, r3
   1e3d0:	mov	r2, #0
   1e3d4:	strb	r2, [r3]
   1e3d8:	nop			; (mov r0, r0)
   1e3dc:	sub	sp, fp, #8
   1e3e0:	pop	{r4, fp, pc}
   1e3e4:	andeq	r1, r1, r0, lsr sp
   1e3e8:	andeq	r6, r1, ip, lsl #27
   1e3ec:	andeq	r6, r1, r8, asr #26
   1e3f0:	andeq	r0, r0, ip, ror #2
   1e3f4:	muleq	r1, ip, ip
   1e3f8:	push	{fp, lr}
   1e3fc:	add	fp, sp, #4
   1e400:	sub	sp, sp, #16
   1e404:	str	r0, [fp, #-8]
   1e408:	str	r1, [fp, #-12]
   1e40c:	str	r2, [fp, #-16]
   1e410:	ldr	r3, [pc, #108]	; 1e484 <sprintf@plt+0xcd90>
   1e414:	add	r3, pc, r3
   1e418:	ldr	r3, [r3, #184]	; 0xb8
   1e41c:	cmp	r3, #0
   1e420:	beq	1e438 <sprintf@plt+0xcd44>
   1e424:	ldr	r3, [pc, #92]	; 1e488 <sprintf@plt+0xcd94>
   1e428:	add	r3, pc, r3
   1e42c:	ldr	r3, [r3, #184]	; 0xb8
   1e430:	mov	r0, r3
   1e434:	bl	1152c <rb_close@plt>
   1e438:	ldr	r3, [pc, #76]	; 1e48c <sprintf@plt+0xcd98>
   1e43c:	add	r3, pc, r3
   1e440:	ldr	r3, [r3, #372]	; 0x174
   1e444:	cmp	r3, #0
   1e448:	beq	1e460 <sprintf@plt+0xcd6c>
   1e44c:	ldr	r3, [pc, #60]	; 1e490 <sprintf@plt+0xcd9c>
   1e450:	add	r3, pc, r3
   1e454:	ldr	r3, [r3, #372]	; 0x174
   1e458:	mov	r0, r3
   1e45c:	bl	1152c <rb_close@plt>
   1e460:	mov	r2, #376	; 0x178
   1e464:	mov	r1, #0
   1e468:	ldr	r3, [pc, #36]	; 1e494 <sprintf@plt+0xcda0>
   1e46c:	add	r3, pc, r3
   1e470:	mov	r0, r3
   1e474:	bl	11430 <memset@plt>
   1e478:	nop			; (mov r0, r0)
   1e47c:	sub	sp, fp, #4
   1e480:	pop	{fp, pc}
   1e484:	andeq	r6, r1, r8, asr ip
   1e488:	andeq	r6, r1, r4, asr #24
   1e48c:	andeq	r6, r1, r0, lsr ip
   1e490:	andeq	r6, r1, ip, lsl ip
   1e494:	andeq	r6, r1, r0, lsl #24
   1e498:	cmp	r1, #0
   1e49c:	beq	1e6a8 <sprintf@plt+0xcfb4>
   1e4a0:	eor	ip, r0, r1
   1e4a4:	rsbmi	r1, r1, #0
   1e4a8:	subs	r2, r1, #1
   1e4ac:	beq	1e674 <sprintf@plt+0xcf80>
   1e4b0:	movs	r3, r0
   1e4b4:	rsbmi	r3, r0, #0
   1e4b8:	cmp	r3, r1
   1e4bc:	bls	1e680 <sprintf@plt+0xcf8c>
   1e4c0:	tst	r1, r2
   1e4c4:	beq	1e690 <sprintf@plt+0xcf9c>
   1e4c8:	clz	r2, r3
   1e4cc:	clz	r0, r1
   1e4d0:	sub	r2, r0, r2
   1e4d4:	rsbs	r2, r2, #31
   1e4d8:	addne	r2, r2, r2, lsl #1
   1e4dc:	mov	r0, #0
   1e4e0:	addne	pc, pc, r2, lsl #2
   1e4e4:	nop			; (mov r0, r0)
   1e4e8:	cmp	r3, r1, lsl #31
   1e4ec:	adc	r0, r0, r0
   1e4f0:	subcs	r3, r3, r1, lsl #31
   1e4f4:	cmp	r3, r1, lsl #30
   1e4f8:	adc	r0, r0, r0
   1e4fc:	subcs	r3, r3, r1, lsl #30
   1e500:	cmp	r3, r1, lsl #29
   1e504:	adc	r0, r0, r0
   1e508:	subcs	r3, r3, r1, lsl #29
   1e50c:	cmp	r3, r1, lsl #28
   1e510:	adc	r0, r0, r0
   1e514:	subcs	r3, r3, r1, lsl #28
   1e518:	cmp	r3, r1, lsl #27
   1e51c:	adc	r0, r0, r0
   1e520:	subcs	r3, r3, r1, lsl #27
   1e524:	cmp	r3, r1, lsl #26
   1e528:	adc	r0, r0, r0
   1e52c:	subcs	r3, r3, r1, lsl #26
   1e530:	cmp	r3, r1, lsl #25
   1e534:	adc	r0, r0, r0
   1e538:	subcs	r3, r3, r1, lsl #25
   1e53c:	cmp	r3, r1, lsl #24
   1e540:	adc	r0, r0, r0
   1e544:	subcs	r3, r3, r1, lsl #24
   1e548:	cmp	r3, r1, lsl #23
   1e54c:	adc	r0, r0, r0
   1e550:	subcs	r3, r3, r1, lsl #23
   1e554:	cmp	r3, r1, lsl #22
   1e558:	adc	r0, r0, r0
   1e55c:	subcs	r3, r3, r1, lsl #22
   1e560:	cmp	r3, r1, lsl #21
   1e564:	adc	r0, r0, r0
   1e568:	subcs	r3, r3, r1, lsl #21
   1e56c:	cmp	r3, r1, lsl #20
   1e570:	adc	r0, r0, r0
   1e574:	subcs	r3, r3, r1, lsl #20
   1e578:	cmp	r3, r1, lsl #19
   1e57c:	adc	r0, r0, r0
   1e580:	subcs	r3, r3, r1, lsl #19
   1e584:	cmp	r3, r1, lsl #18
   1e588:	adc	r0, r0, r0
   1e58c:	subcs	r3, r3, r1, lsl #18
   1e590:	cmp	r3, r1, lsl #17
   1e594:	adc	r0, r0, r0
   1e598:	subcs	r3, r3, r1, lsl #17
   1e59c:	cmp	r3, r1, lsl #16
   1e5a0:	adc	r0, r0, r0
   1e5a4:	subcs	r3, r3, r1, lsl #16
   1e5a8:	cmp	r3, r1, lsl #15
   1e5ac:	adc	r0, r0, r0
   1e5b0:	subcs	r3, r3, r1, lsl #15
   1e5b4:	cmp	r3, r1, lsl #14
   1e5b8:	adc	r0, r0, r0
   1e5bc:	subcs	r3, r3, r1, lsl #14
   1e5c0:	cmp	r3, r1, lsl #13
   1e5c4:	adc	r0, r0, r0
   1e5c8:	subcs	r3, r3, r1, lsl #13
   1e5cc:	cmp	r3, r1, lsl #12
   1e5d0:	adc	r0, r0, r0
   1e5d4:	subcs	r3, r3, r1, lsl #12
   1e5d8:	cmp	r3, r1, lsl #11
   1e5dc:	adc	r0, r0, r0
   1e5e0:	subcs	r3, r3, r1, lsl #11
   1e5e4:	cmp	r3, r1, lsl #10
   1e5e8:	adc	r0, r0, r0
   1e5ec:	subcs	r3, r3, r1, lsl #10
   1e5f0:	cmp	r3, r1, lsl #9
   1e5f4:	adc	r0, r0, r0
   1e5f8:	subcs	r3, r3, r1, lsl #9
   1e5fc:	cmp	r3, r1, lsl #8
   1e600:	adc	r0, r0, r0
   1e604:	subcs	r3, r3, r1, lsl #8
   1e608:	cmp	r3, r1, lsl #7
   1e60c:	adc	r0, r0, r0
   1e610:	subcs	r3, r3, r1, lsl #7
   1e614:	cmp	r3, r1, lsl #6
   1e618:	adc	r0, r0, r0
   1e61c:	subcs	r3, r3, r1, lsl #6
   1e620:	cmp	r3, r1, lsl #5
   1e624:	adc	r0, r0, r0
   1e628:	subcs	r3, r3, r1, lsl #5
   1e62c:	cmp	r3, r1, lsl #4
   1e630:	adc	r0, r0, r0
   1e634:	subcs	r3, r3, r1, lsl #4
   1e638:	cmp	r3, r1, lsl #3
   1e63c:	adc	r0, r0, r0
   1e640:	subcs	r3, r3, r1, lsl #3
   1e644:	cmp	r3, r1, lsl #2
   1e648:	adc	r0, r0, r0
   1e64c:	subcs	r3, r3, r1, lsl #2
   1e650:	cmp	r3, r1, lsl #1
   1e654:	adc	r0, r0, r0
   1e658:	subcs	r3, r3, r1, lsl #1
   1e65c:	cmp	r3, r1
   1e660:	adc	r0, r0, r0
   1e664:	subcs	r3, r3, r1
   1e668:	cmp	ip, #0
   1e66c:	rsbmi	r0, r0, #0
   1e670:	bx	lr
   1e674:	teq	ip, r0
   1e678:	rsbmi	r0, r0, #0
   1e67c:	bx	lr
   1e680:	movcc	r0, #0
   1e684:	asreq	r0, ip, #31
   1e688:	orreq	r0, r0, #1
   1e68c:	bx	lr
   1e690:	clz	r2, r1
   1e694:	rsb	r2, r2, #31
   1e698:	cmp	ip, #0
   1e69c:	lsr	r0, r3, r2
   1e6a0:	rsbmi	r0, r0, #0
   1e6a4:	bx	lr
   1e6a8:	cmp	r0, #0
   1e6ac:	mvngt	r0, #-2147483648	; 0x80000000
   1e6b0:	movlt	r0, #-2147483648	; 0x80000000
   1e6b4:	b	1e6d8 <sprintf@plt+0xcfe4>
   1e6b8:	cmp	r1, #0
   1e6bc:	beq	1e6a8 <sprintf@plt+0xcfb4>
   1e6c0:	push	{r0, r1, lr}
   1e6c4:	bl	1e4a0 <sprintf@plt+0xcdac>
   1e6c8:	pop	{r1, r2, lr}
   1e6cc:	mul	r3, r2, r0
   1e6d0:	sub	r1, r1, r3
   1e6d4:	bx	lr
   1e6d8:	push	{r1, lr}
   1e6dc:	mov	r0, #8
   1e6e0:	bl	1155c <raise@plt>
   1e6e4:	pop	{r1, pc}
   1e6e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e6ec:	mov	r7, r0
   1e6f0:	ldr	r6, [pc, #72]	; 1e740 <sprintf@plt+0xd04c>
   1e6f4:	ldr	r5, [pc, #72]	; 1e744 <sprintf@plt+0xd050>
   1e6f8:	add	r6, pc, r6
   1e6fc:	add	r5, pc, r5
   1e700:	sub	r6, r6, r5
   1e704:	mov	r8, r1
   1e708:	mov	r9, r2
   1e70c:	bl	112c0 <sigemptyset@plt-0x20>
   1e710:	asrs	r6, r6, #2
   1e714:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e718:	mov	r4, #0
   1e71c:	add	r4, r4, #1
   1e720:	ldr	r3, [r5], #4
   1e724:	mov	r2, r9
   1e728:	mov	r1, r8
   1e72c:	mov	r0, r7
   1e730:	blx	r3
   1e734:	cmp	r6, r4
   1e738:	bne	1e71c <sprintf@plt+0xd028>
   1e73c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e740:	strdeq	r1, [r1], -r8
   1e744:	strdeq	r1, [r1], -r0
   1e748:	bx	lr

Disassembly of section .fini:

0001e74c <.fini>:
   1e74c:	push	{r3, lr}
   1e750:	pop	{r3, pc}
