
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000e24 <_init>:
 e24:	push	{r3, lr}
 e28:	bl	1024 <call_weak_fn>
 e2c:	pop	{r3, pc}

Disassembly of section .plt:

00000e30 <.plt>:
     e30:	push	{lr}		; (str lr, [sp, #-4]!)
     e34:	ldr	lr, [pc, #4]	; e40 <.plt+0x10>
     e38:	add	lr, pc, lr
     e3c:	ldr	pc, [lr, #8]!
     e40:	.word	0x000451c0

00000e44 <calloc@plt>:
     e44:	add	ip, pc, #0, 12
     e48:	add	ip, ip, #282624	; 0x45000
     e4c:	ldr	pc, [ip, #448]!	; 0x1c0

00000e50 <strcmp@plt>:
     e50:	add	ip, pc, #0, 12
     e54:	add	ip, ip, #282624	; 0x45000
     e58:	ldr	pc, [ip, #440]!	; 0x1b8

00000e5c <__cxa_finalize@plt>:
     e5c:	add	ip, pc, #0, 12
     e60:	add	ip, ip, #282624	; 0x45000
     e64:	ldr	pc, [ip, #432]!	; 0x1b0

00000e68 <printf@plt>:
     e68:	add	ip, pc, #0, 12
     e6c:	add	ip, ip, #282624	; 0x45000
     e70:	ldr	pc, [ip, #424]!	; 0x1a8

00000e74 <fopen@plt>:
     e74:	add	ip, pc, #0, 12
     e78:	add	ip, ip, #282624	; 0x45000
     e7c:	ldr	pc, [ip, #416]!	; 0x1a0

00000e80 <getprotobyname@plt>:
     e80:	add	ip, pc, #0, 12
     e84:	add	ip, ip, #282624	; 0x45000
     e88:	ldr	pc, [ip, #408]!	; 0x198

00000e8c <longjmp@plt>:
     e8c:	add	ip, pc, #0, 12
     e90:	add	ip, ip, #282624	; 0x45000
     e94:	ldr	pc, [ip, #400]!	; 0x190

00000e98 <_setjmp@plt>:
     e98:	add	ip, pc, #0, 12
     e9c:	add	ip, ip, #282624	; 0x45000
     ea0:	ldr	pc, [ip, #392]!	; 0x188

00000ea4 <free@plt>:
     ea4:	add	ip, pc, #0, 12
     ea8:	add	ip, ip, #282624	; 0x45000
     eac:	ldr	pc, [ip, #384]!	; 0x180

00000eb0 <getnetbyname@plt>:
     eb0:	add	ip, pc, #0, 12
     eb4:	add	ip, ip, #282624	; 0x45000
     eb8:	ldr	pc, [ip, #376]!	; 0x178

00000ebc <ferror@plt>:
     ebc:	add	ip, pc, #0, 12
     ec0:	add	ip, ip, #282624	; 0x45000
     ec4:	ldr	pc, [ip, #368]!	; 0x170

00000ec8 <memcpy@plt>:
     ec8:	add	ip, pc, #0, 12
     ecc:	add	ip, ip, #282624	; 0x45000
     ed0:	ldr	pc, [ip, #360]!	; 0x168

00000ed4 <strdup@plt>:
     ed4:	add	ip, pc, #0, 12
     ed8:	add	ip, ip, #282624	; 0x45000
     edc:	ldr	pc, [ip, #352]!	; 0x160

00000ee0 <rewind@plt>:
     ee0:	add	ip, pc, #0, 12
     ee4:	add	ip, ip, #282624	; 0x45000
     ee8:	ldr	pc, [ip, #344]!	; 0x158

00000eec <realloc@plt>:
     eec:	add	ip, pc, #0, 12
     ef0:	add	ip, ip, #282624	; 0x45000
     ef4:	ldr	pc, [ip, #336]!	; 0x150

00000ef8 <fwrite@plt>:
     ef8:	add	ip, pc, #0, 12
     efc:	add	ip, ip, #282624	; 0x45000
     f00:	ldr	pc, [ip, #328]!	; 0x148

00000f04 <fread@plt>:
     f04:	add	ip, pc, #0, 12
     f08:	add	ip, ip, #282624	; 0x45000
     f0c:	ldr	pc, [ip, #320]!	; 0x140

00000f10 <puts@plt>:
     f10:	add	ip, pc, #0, 12
     f14:	add	ip, ip, #282624	; 0x45000
     f18:	ldr	pc, [ip, #312]!	; 0x138

00000f1c <malloc@plt>:
     f1c:	add	ip, pc, #0, 12
     f20:	add	ip, ip, #282624	; 0x45000
     f24:	ldr	pc, [ip, #304]!	; 0x130

00000f28 <__gmon_start__@plt>:
     f28:	add	ip, pc, #0, 12
     f2c:	add	ip, ip, #282624	; 0x45000
     f30:	ldr	pc, [ip, #296]!	; 0x128

00000f34 <__ctype_b_loc@plt>:
     f34:	add	ip, pc, #0, 12
     f38:	add	ip, ip, #282624	; 0x45000
     f3c:	ldr	pc, [ip, #288]!	; 0x120

00000f40 <exit@plt>:
     f40:	add	ip, pc, #0, 12
     f44:	add	ip, ip, #282624	; 0x45000
     f48:	ldr	pc, [ip, #280]!	; 0x118

00000f4c <strlen@plt>:
     f4c:	add	ip, pc, #0, 12
     f50:	add	ip, ip, #282624	; 0x45000
     f54:	ldr	pc, [ip, #272]!	; 0x110

00000f58 <strchr@plt>:
     f58:	add	ip, pc, #0, 12
     f5c:	add	ip, ip, #282624	; 0x45000
     f60:	ldr	pc, [ip, #264]!	; 0x108

00000f64 <fprintf@plt>:
     f64:	add	ip, pc, #0, 12
     f68:	add	ip, ip, #282624	; 0x45000
     f6c:	ldr	pc, [ip, #256]!	; 0x100

00000f70 <__errno_location@plt>:
     f70:	add	ip, pc, #0, 12
     f74:	add	ip, ip, #282624	; 0x45000
     f78:	ldr	pc, [ip, #248]!	; 0xf8

00000f7c <getservbyname@plt>:
     f7c:	add	ip, pc, #0, 12
     f80:	add	ip, ip, #282624	; 0x45000
     f84:	ldr	pc, [ip, #240]!	; 0xf0

00000f88 <memset@plt>:
     f88:	add	ip, pc, #0, 12
     f8c:	add	ip, ip, #282624	; 0x45000
     f90:	ldr	pc, [ip, #232]!	; 0xe8

00000f94 <putchar@plt>:
     f94:	add	ip, pc, #0, 12
     f98:	add	ip, ip, #282624	; 0x45000
     f9c:	ldr	pc, [ip, #224]!	; 0xe0

00000fa0 <strncpy@plt>:
     fa0:	add	ip, pc, #0, 12
     fa4:	add	ip, ip, #282624	; 0x45000
     fa8:	ldr	pc, [ip, #216]!	; 0xd8

00000fac <fileno@plt>:
     fac:	add	ip, pc, #0, 12
     fb0:	add	ip, ip, #282624	; 0x45000
     fb4:	ldr	pc, [ip, #208]!	; 0xd0

00000fb8 <sscanf@plt>:
     fb8:	add	ip, pc, #0, 12
     fbc:	add	ip, ip, #282624	; 0x45000
     fc0:	ldr	pc, [ip, #200]!	; 0xc8

00000fc4 <clearerr@plt>:
     fc4:	add	ip, pc, #0, 12
     fc8:	add	ip, ip, #282624	; 0x45000
     fcc:	ldr	pc, [ip, #192]!	; 0xc0

00000fd0 <vsnprintf@plt>:
     fd0:	add	ip, pc, #0, 12
     fd4:	add	ip, ip, #282624	; 0x45000
     fd8:	ldr	pc, [ip, #184]!	; 0xb8

00000fdc <freeaddrinfo@plt>:
     fdc:	add	ip, pc, #0, 12
     fe0:	add	ip, ip, #282624	; 0x45000
     fe4:	ldr	pc, [ip, #176]!	; 0xb0

00000fe8 <getaddrinfo@plt>:
     fe8:	add	ip, pc, #0, 12
     fec:	add	ip, ip, #282624	; 0x45000
     ff0:	ldr	pc, [ip, #168]!	; 0xa8

00000ff4 <gethostbyname@plt>:
     ff4:	add	ip, pc, #0, 12
     ff8:	add	ip, ip, #282624	; 0x45000
     ffc:	ldr	pc, [ip, #160]!	; 0xa0

00001000 <isatty@plt>:
    1000:	add	ip, pc, #0, 12
    1004:	add	ip, ip, #282624	; 0x45000
    1008:	ldr	pc, [ip, #152]!	; 0x98

0000100c <abort@plt>:
    100c:	add	ip, pc, #0, 12
    1010:	add	ip, ip, #282624	; 0x45000
    1014:	ldr	pc, [ip, #144]!	; 0x90

00001018 <getc@plt>:
    1018:	add	ip, pc, #0, 12
    101c:	add	ip, ip, #282624	; 0x45000
    1020:	ldr	pc, [ip, #136]!	; 0x88

Disassembly of section .text:

00001024 <call_weak_fn>:
    1024:	ldr	r3, [pc, #20]	; 1040 <call_weak_fn+0x1c>
    1028:	ldr	r2, [pc, #20]	; 1044 <call_weak_fn+0x20>
    102c:	add	r3, pc, r3
    1030:	ldr	r2, [r3, r2]
    1034:	cmp	r2, #0
    1038:	bxeq	lr
    103c:	b	f28 <__gmon_start__@plt>
    1040:	.word	0x00044fcc
    1044:	.word	0x000000bc

00001048 <deregister_tm_clones>:
    1048:	ldr	r0, [pc, #44]	; 107c <deregister_tm_clones+0x34>
    104c:	ldr	r3, [pc, #44]	; 1080 <deregister_tm_clones+0x38>
    1050:	add	r0, pc, r0
    1054:	add	r3, pc, r3
    1058:	cmp	r3, r0
    105c:	ldr	r3, [pc, #32]	; 1084 <deregister_tm_clones+0x3c>
    1060:	add	r3, pc, r3
    1064:	bxeq	lr
    1068:	ldr	r2, [pc, #24]	; 1088 <deregister_tm_clones+0x40>
    106c:	ldr	r3, [r3, r2]
    1070:	cmp	r3, #0
    1074:	bxeq	lr
    1078:	bx	r3
    107c:	.word	0x00045138
    1080:	.word	0x00045134
    1084:	.word	0x00044f98
    1088:	.word	0x000000b0

0000108c <register_tm_clones>:
    108c:	ldr	r0, [pc, #56]	; 10cc <register_tm_clones+0x40>
    1090:	ldr	r3, [pc, #56]	; 10d0 <register_tm_clones+0x44>
    1094:	add	r0, pc, r0
    1098:	add	r3, pc, r3
    109c:	sub	r1, r3, r0
    10a0:	ldr	r3, [pc, #44]	; 10d4 <register_tm_clones+0x48>
    10a4:	asr	r1, r1, #2
    10a8:	add	r3, pc, r3
    10ac:	add	r1, r1, r1, lsr #31
    10b0:	asrs	r1, r1, #1
    10b4:	bxeq	lr
    10b8:	ldr	r2, [pc, #24]	; 10d8 <register_tm_clones+0x4c>
    10bc:	ldr	r3, [r3, r2]
    10c0:	cmp	r3, #0
    10c4:	bxeq	lr
    10c8:	bx	r3
    10cc:	.word	0x000450f4
    10d0:	.word	0x000450f0
    10d4:	.word	0x00044f50
    10d8:	.word	0x000000cc

000010dc <__do_global_dtors_aux>:
    10dc:	ldr	r3, [pc, #76]	; 1130 <__do_global_dtors_aux+0x54>
    10e0:	ldr	r2, [pc, #76]	; 1134 <__do_global_dtors_aux+0x58>
    10e4:	add	r3, pc, r3
    10e8:	add	r2, pc, r2
    10ec:	ldrb	r3, [r3]
    10f0:	cmp	r3, #0
    10f4:	bxne	lr
    10f8:	ldr	r3, [pc, #56]	; 1138 <__do_global_dtors_aux+0x5c>
    10fc:	push	{r4, lr}
    1100:	ldr	r3, [r2, r3]
    1104:	cmp	r3, #0
    1108:	beq	1118 <__do_global_dtors_aux+0x3c>
    110c:	ldr	r3, [pc, #40]	; 113c <__do_global_dtors_aux+0x60>
    1110:	ldr	r0, [pc, r3]
    1114:	bl	e5c <__cxa_finalize@plt>
    1118:	bl	1048 <deregister_tm_clones>
    111c:	ldr	r3, [pc, #28]	; 1140 <__do_global_dtors_aux+0x64>
    1120:	mov	r2, #1
    1124:	add	r3, pc, r3
    1128:	strb	r2, [r3]
    112c:	pop	{r4, pc}
    1130:	.word	0x000450a4
    1134:	.word	0x00044f10
    1138:	.word	0x000000ac
    113c:	.word	0x00044fb8
    1140:	.word	0x00045064

00001144 <frame_dummy>:
    1144:	b	108c <register_tm_clones>

00001148 <sfbpf_filter>:
    1148:	push	{r4, r5, r6, r7, fp, lr}
    114c:	add	fp, sp, #16
    1150:	sub	sp, sp, #64	; 0x40
    1154:	cmp	r0, #0
    1158:	mvneq	r0, #0
    115c:	subeq	sp, fp, #16
    1160:	popeq	{r4, r5, r6, r7, fp, pc}
    1164:	sub	ip, r0, #8
    1168:	mov	r4, #0
    116c:	mov	lr, #0
    1170:	b	117c <sfbpf_filter+0x34>
    1174:	add	ip, ip, r4, lsl #3
    1178:	mov	r4, r0
    117c:	mov	r0, r4
    1180:	mov	r5, ip
    1184:	ldrh	r4, [ip, #8]!
    1188:	cmp	r4, #177	; 0xb1
    118c:	bhi	1724 <sfbpf_filter+0x5dc>
    1190:	add	r6, pc, #8
    1194:	ldr	r7, [r6, r4, lsl #2]
    1198:	mov	r4, r2
    119c:	add	pc, r6, r7
    11a0:	.word	0x000002c8
    11a4:	.word	0x00000368
    11a8:	.word	0x00000374
    11ac:	.word	0x00000388
    11b0:	.word	0x0000039c
    11b4:	.word	0x000003a8
    11b8:	.word	0x0000056c
    11bc:	.word	0x00000318
    11c0:	.word	0x00000584
    11c4:	.word	0x00000584
    11c8:	.word	0x00000584
    11cc:	.word	0x00000584
    11d0:	.word	0x000003b0
    11d4:	.word	0x00000584
    11d8:	.word	0x00000584
    11dc:	.word	0x00000584
    11e0:	.word	0x00000584
    11e4:	.word	0x00000584
    11e8:	.word	0x00000584
    11ec:	.word	0x00000584
    11f0:	.word	0x000003b8
    11f4:	.word	0x000003c4
    11f8:	.word	0x00000570
    11fc:	.word	0x00000584
    1200:	.word	0x00000584
    1204:	.word	0x00000584
    1208:	.word	0x00000584
    120c:	.word	0x00000584
    1210:	.word	0x00000324
    1214:	.word	0x000003dc
    1218:	.word	0x00000584
    121c:	.word	0x00000584
    1220:	.word	0x000003f0
    1224:	.word	0x00000584
    1228:	.word	0x00000584
    122c:	.word	0x00000584
    1230:	.word	0x00000404
    1234:	.word	0x00000410
    1238:	.word	0x00000584
    123c:	.word	0x00000584
    1240:	.word	0x00000428
    1244:	.word	0x00000584
    1248:	.word	0x00000584
    124c:	.word	0x00000584
    1250:	.word	0x0000043c
    1254:	.word	0x00000444
    1258:	.word	0x00000584
    125c:	.word	0x00000584
    1260:	.word	0x00000458
    1264:	.word	0x00000584
    1268:	.word	0x00000584
    126c:	.word	0x00000584
    1270:	.word	0x0000046c
    1274:	.word	0x00000478
    1278:	.word	0x00000584
    127c:	.word	0x00000584
    1280:	.word	0x00000584
    1284:	.word	0x00000584
    1288:	.word	0x00000584
    128c:	.word	0x00000584
    1290:	.word	0x00000490
    1294:	.word	0x000004a0
    1298:	.word	0x00000584
    129c:	.word	0x00000584
    12a0:	.word	0x000004b4
    12a4:	.word	0x00000584
    12a8:	.word	0x00000584
    12ac:	.word	0x00000584
    12b0:	.word	0x00000554
    12b4:	.word	0x0000032c
    12b8:	.word	0x00000584
    12bc:	.word	0x00000584
    12c0:	.word	0x000004d4
    12c4:	.word	0x00000584
    12c8:	.word	0x00000584
    12cc:	.word	0x00000584
    12d0:	.word	0x000004fc
    12d4:	.word	0x00000504
    12d8:	.word	0x00000584
    12dc:	.word	0x00000584
    12e0:	.word	0x00000518
    12e4:	.word	0x00000584
    12e8:	.word	0x00000584
    12ec:	.word	0x00000584
    12f0:	.word	0x00000530
    12f4:	.word	0x00000584
    12f8:	.word	0x00000584
    12fc:	.word	0x00000584
    1300:	.word	0x00000584
    1304:	.word	0x00000584
    1308:	.word	0x00000584
    130c:	.word	0x00000584
    1310:	.word	0x00000344
    1314:	.word	0x00000584
    1318:	.word	0x00000584
    131c:	.word	0x00000584
    1320:	.word	0x0000034c
    1324:	.word	0x000002d0
    1328:	.word	0x00000584
    132c:	.word	0x00000584
    1330:	.word	0x000002e4
    1334:	.word	0x00000584
    1338:	.word	0x00000584
    133c:	.word	0x00000584
    1340:	.word	0x00000584
    1344:	.word	0x00000584
    1348:	.word	0x00000584
    134c:	.word	0x00000584
    1350:	.word	0x000002f0
    1354:	.word	0x00000584
    1358:	.word	0x00000584
    135c:	.word	0x00000584
    1360:	.word	0x00000584
    1364:	.word	0x00000584
    1368:	.word	0x00000584
    136c:	.word	0x00000584
    1370:	.word	0x00000560
    1374:	.word	0x00000584
    1378:	.word	0x00000584
    137c:	.word	0x00000584
    1380:	.word	0x00000584
    1384:	.word	0x00000584
    1388:	.word	0x00000584
    138c:	.word	0x00000584
    1390:	.word	0x0000053c
    1394:	.word	0x00000584
    1398:	.word	0x00000584
    139c:	.word	0x00000584
    13a0:	.word	0xffffffdc
    13a4:	.word	0x0000035c
    13a8:	.word	0x00000584
    13ac:	.word	0x00000584
    13b0:	.word	0x00000544
    13b4:	.word	0x00000584
    13b8:	.word	0x00000584
    13bc:	.word	0x0000054c
    13c0:	.word	0x00000584
    13c4:	.word	0x00000584
    13c8:	.word	0x00000584
    13cc:	.word	0x00000584
    13d0:	.word	0x00000584
    13d4:	.word	0x00000584
    13d8:	.word	0x00000584
    13dc:	.word	0x00000584
    13e0:	.word	0x00000584
    13e4:	.word	0x00000584
    13e8:	.word	0x00000584
    13ec:	.word	0x00000584
    13f0:	.word	0x00000584
    13f4:	.word	0x00000584
    13f8:	.word	0x00000584
    13fc:	.word	0x00000584
    1400:	.word	0x00000584
    1404:	.word	0x00000584
    1408:	.word	0x00000584
    140c:	.word	0x00000584
    1410:	.word	0x00000584
    1414:	.word	0x00000584
    1418:	.word	0x00000584
    141c:	.word	0x00000584
    1420:	.word	0x00000584
    1424:	.word	0x00000584
    1428:	.word	0x00000584
    142c:	.word	0x00000584
    1430:	.word	0x00000584
    1434:	.word	0x00000584
    1438:	.word	0x00000584
    143c:	.word	0x00000584
    1440:	.word	0x00000584
    1444:	.word	0x00000584
    1448:	.word	0x00000584
    144c:	.word	0x00000584
    1450:	.word	0x00000584
    1454:	.word	0x00000584
    1458:	.word	0x00000584
    145c:	.word	0x00000584
    1460:	.word	0x00000584
    1464:	.word	0x000002f8
    1468:	ldr	r4, [r5, #12]
    146c:	b	117c <sfbpf_filter+0x34>
    1470:	ldr	r7, [r5, #12]
    1474:	mov	r6, sp
    1478:	mov	r4, r0
    147c:	ldr	lr, [r6, r7, lsl #2]
    1480:	b	117c <sfbpf_filter+0x34>
    1484:	ldr	r4, [r5, #12]
    1488:	lsl	r4, r0, r4
    148c:	b	117c <sfbpf_filter+0x34>
    1490:	lsl	r4, r0, lr
    1494:	b	117c <sfbpf_filter+0x34>
    1498:	ldr	r5, [r5, #12]
    149c:	cmp	r5, r3
    14a0:	bcs	1718 <sfbpf_filter+0x5d0>
    14a4:	ldrb	r7, [r1, r5]
    14a8:	mov	r6, #60	; 0x3c
    14ac:	mov	r4, r0
    14b0:	and	lr, r6, r7, lsl #2
    14b4:	b	117c <sfbpf_filter+0x34>
    14b8:	mov	r4, r0
    14bc:	mov	lr, r0
    14c0:	b	117c <sfbpf_filter+0x34>
    14c4:	sub	r4, r0, lr
    14c8:	b	117c <sfbpf_filter+0x34>
    14cc:	ldr	r4, [r5, #12]
    14d0:	mov	r6, #10
    14d4:	tst	r4, r0
    14d8:	movweq	r6, #11
    14dc:	ldrb	r4, [r5, r6]
    14e0:	b	1174 <sfbpf_filter+0x2c>
    14e4:	and	r4, lr, r0
    14e8:	b	117c <sfbpf_filter+0x34>
    14ec:	ldr	r0, [r5, #12]
    14f0:	mov	r4, sp
    14f4:	ldr	r4, [r4, r0, lsl #2]
    14f8:	b	117c <sfbpf_filter+0x34>
    14fc:	mov	r4, r0
    1500:	mov	lr, r2
    1504:	b	117c <sfbpf_filter+0x34>
    1508:	ldr	lr, [r5, #12]
    150c:	mov	r4, r0
    1510:	b	117c <sfbpf_filter+0x34>
    1514:	ldr	r4, [r5, #12]
    1518:	mov	r5, sp
    151c:	str	r0, [r5, r4, lsl #2]
    1520:	mov	r4, r0
    1524:	b	117c <sfbpf_filter+0x34>
    1528:	ldr	r4, [r5, #12]
    152c:	mov	r5, sp
    1530:	str	lr, [r5, r4, lsl #2]
    1534:	mov	r4, r0
    1538:	b	117c <sfbpf_filter+0x34>
    153c:	ldr	r4, [r5, #12]
    1540:	add	r4, r4, r0
    1544:	b	117c <sfbpf_filter+0x34>
    1548:	ldr	r4, [r5, #12]
    154c:	b	1174 <sfbpf_filter+0x2c>
    1550:	add	r4, lr, r0
    1554:	b	117c <sfbpf_filter+0x34>
    1558:	ldr	r4, [r5, #12]
    155c:	sub	r4, r0, r4
    1560:	b	117c <sfbpf_filter+0x34>
    1564:	ldr	r4, [r5, #12]
    1568:	mov	r6, #11
    156c:	cmp	r0, r4
    1570:	movweq	r6, #10
    1574:	ldrb	r4, [r5, r6]
    1578:	b	1174 <sfbpf_filter+0x2c>
    157c:	mov	r4, #11
    1580:	cmp	r0, lr
    1584:	movweq	r4, #10
    1588:	ldrb	r4, [r5, r4]
    158c:	b	1174 <sfbpf_filter+0x2c>
    1590:	ldr	r0, [r5, #12]
    1594:	add	r4, r0, #4
    1598:	cmp	r4, r3
    159c:	bls	1668 <sfbpf_filter+0x520>
    15a0:	b	1718 <sfbpf_filter+0x5d0>
    15a4:	ldr	r4, [r5, #12]
    15a8:	mul	r4, r4, r0
    15ac:	b	117c <sfbpf_filter+0x34>
    15b0:	ldr	r4, [r5, #12]
    15b4:	mov	r6, #11
    15b8:	cmp	r0, r4
    15bc:	movwhi	r6, #10
    15c0:	ldrb	r4, [r5, r6]
    15c4:	b	1174 <sfbpf_filter+0x2c>
    15c8:	ldr	r0, [r5, #12]
    15cc:	add	r4, r0, #2
    15d0:	cmp	r4, r3
    15d4:	bls	1688 <sfbpf_filter+0x540>
    15d8:	b	1718 <sfbpf_filter+0x5d0>
    15dc:	mul	r4, lr, r0
    15e0:	b	117c <sfbpf_filter+0x34>
    15e4:	mov	r4, #11
    15e8:	cmp	r0, lr
    15ec:	movwhi	r4, #10
    15f0:	ldrb	r4, [r5, r4]
    15f4:	b	1174 <sfbpf_filter+0x2c>
    15f8:	ldr	r0, [r5, #12]
    15fc:	cmp	r0, r3
    1600:	bcs	1718 <sfbpf_filter+0x5d0>
    1604:	ldrb	r4, [r1, r0]
    1608:	b	117c <sfbpf_filter+0x34>
    160c:	ldr	r4, [r5, #12]
    1610:	udiv	r4, r0, r4
    1614:	b	117c <sfbpf_filter+0x34>
    1618:	ldr	r4, [r5, #12]
    161c:	mov	r6, #10
    1620:	cmp	r0, r4
    1624:	movwcc	r6, #11
    1628:	ldrb	r4, [r5, r6]
    162c:	b	1174 <sfbpf_filter+0x2c>
    1630:	cmp	lr, #0
    1634:	beq	1718 <sfbpf_filter+0x5d0>
    1638:	udiv	r4, r0, lr
    163c:	b	117c <sfbpf_filter+0x34>
    1640:	mov	r4, #10
    1644:	cmp	r0, lr
    1648:	movwcc	r4, #11
    164c:	ldrb	r4, [r5, r4]
    1650:	b	1174 <sfbpf_filter+0x2c>
    1654:	ldr	r0, [r5, #12]
    1658:	add	r0, r0, lr
    165c:	add	r4, r0, #4
    1660:	cmp	r4, r3
    1664:	bhi	1718 <sfbpf_filter+0x5d0>
    1668:	ldr	r0, [r1, r0]
    166c:	rev	r4, r0
    1670:	b	117c <sfbpf_filter+0x34>
    1674:	ldr	r0, [r5, #12]
    1678:	add	r0, r0, lr
    167c:	add	r4, r0, #2
    1680:	cmp	r4, r3
    1684:	bhi	1718 <sfbpf_filter+0x5d0>
    1688:	mov	r4, r1
    168c:	ldrb	r0, [r4, r0]!
    1690:	ldrb	r4, [r4, #1]
    1694:	orr	r4, r4, r0, lsl #8
    1698:	b	117c <sfbpf_filter+0x34>
    169c:	orr	r4, lr, r0
    16a0:	b	117c <sfbpf_filter+0x34>
    16a4:	mov	r4, #10
    16a8:	tst	lr, r0
    16ac:	movweq	r4, #11
    16b0:	ldrb	r4, [r5, r4]
    16b4:	b	1174 <sfbpf_filter+0x2c>
    16b8:	ldr	r0, [r5, #12]
    16bc:	add	r0, r0, lr
    16c0:	cmp	r0, r3
    16c4:	bcs	1718 <sfbpf_filter+0x5d0>
    16c8:	ldrb	r4, [r1, r0]
    16cc:	b	117c <sfbpf_filter+0x34>
    16d0:	ldr	r4, [r5, #12]
    16d4:	and	r4, r4, r0
    16d8:	b	117c <sfbpf_filter+0x34>
    16dc:	lsr	r4, r0, lr
    16e0:	b	117c <sfbpf_filter+0x34>
    16e4:	rsb	r4, r0, #0
    16e8:	b	117c <sfbpf_filter+0x34>
    16ec:	mov	r4, lr
    16f0:	b	117c <sfbpf_filter+0x34>
    16f4:	ldr	r4, [r5, #12]
    16f8:	orr	r4, r4, r0
    16fc:	b	117c <sfbpf_filter+0x34>
    1700:	ldr	r4, [r5, #12]
    1704:	lsr	r4, r0, r4
    1708:	b	117c <sfbpf_filter+0x34>
    170c:	ldr	r0, [r5, #12]
    1710:	sub	sp, fp, #16
    1714:	pop	{r4, r5, r6, r7, fp, pc}
    1718:	mov	r0, #0
    171c:	sub	sp, fp, #16
    1720:	pop	{r4, r5, r6, r7, fp, pc}
    1724:	bl	100c <abort@plt>

00001728 <sfbpf_validate>:
    1728:	push	{r4, r5, fp, lr}
    172c:	add	fp, sp, #8
    1730:	mov	ip, r0
    1734:	mov	r0, #0
    1738:	cmp	r1, #1
    173c:	blt	184c <sfbpf_validate+0x124>
    1740:	add	r3, ip, #4
    1744:	mov	r2, #1
    1748:	mov	lr, r2
    174c:	ldrh	r2, [r3, #-4]
    1750:	and	r4, r2, #7
    1754:	sub	r4, r4, #2
    1758:	cmp	r4, #5
    175c:	bhi	1794 <sfbpf_validate+0x6c>
    1760:	add	r5, pc, #4
    1764:	ldr	r4, [r5, r4, lsl #2]
    1768:	add	pc, r5, r4
    176c:	.word	0x00000018
    1770:	.word	0x00000018
    1774:	.word	0x00000040
    1778:	.word	0x00000078
    177c:	.word	0x00000064
    1780:	.word	0x00000064
    1784:	ldr	r2, [r3]
    1788:	cmp	r2, #15
    178c:	bls	17d0 <sfbpf_validate+0xa8>
    1790:	b	184c <sfbpf_validate+0x124>
    1794:	ubfx	r2, r2, #5, #3
    1798:	cmp	r2, #5
    179c:	bhi	184c <sfbpf_validate+0x124>
    17a0:	cmp	r2, #3
    17a4:	bne	17d0 <sfbpf_validate+0xa8>
    17a8:	b	1784 <sfbpf_validate+0x5c>
    17ac:	ubfx	r4, r2, #4, #4
    17b0:	cmp	r4, #8
    17b4:	bhi	184c <sfbpf_validate+0x124>
    17b8:	cmp	r4, #3
    17bc:	tsteq	r2, #24
    17c0:	bne	17d0 <sfbpf_validate+0xa8>
    17c4:	ldr	r2, [r3]
    17c8:	cmp	r2, #0
    17cc:	beq	184c <sfbpf_validate+0x124>
    17d0:	add	r3, r3, #8
    17d4:	add	r2, lr, #1
    17d8:	cmp	lr, r1
    17dc:	bcc	1748 <sfbpf_validate+0x20>
    17e0:	b	1834 <sfbpf_validate+0x10c>
    17e4:	ubfx	r2, r2, #4, #4
    17e8:	sub	r4, r2, #1
    17ec:	cmp	r4, #4
    17f0:	bcs	180c <sfbpf_validate+0xe4>
    17f4:	ldrb	r2, [r3, #-2]
    17f8:	add	r2, lr, r2
    17fc:	cmp	r2, r1
    1800:	bcs	184c <sfbpf_validate+0x124>
    1804:	ldrb	r2, [r3, #-1]
    1808:	b	1818 <sfbpf_validate+0xf0>
    180c:	cmp	r2, #0
    1810:	bne	184c <sfbpf_validate+0x124>
    1814:	ldr	r2, [r3]
    1818:	add	r2, lr, r2
    181c:	cmp	r2, r1
    1820:	popcs	{r4, r5, fp, pc}
    1824:	add	r3, r3, #8
    1828:	add	r2, lr, #1
    182c:	cmp	lr, r1
    1830:	bcc	1748 <sfbpf_validate+0x20>
    1834:	add	r0, ip, r1, lsl #3
    1838:	ldrh	r0, [r0, #-8]
    183c:	and	r0, r0, #7
    1840:	sub	r0, r0, #6
    1844:	clz	r0, r0
    1848:	lsr	r0, r0, #5
    184c:	pop	{r4, r5, fp, pc}

00001850 <sfbpf_print>:
    1850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1854:	add	fp, sp, #28
    1858:	sub	sp, sp, #4
    185c:	mov	r5, r0
    1860:	ldr	r0, [pc, #2164]	; 20dc <sfbpf_print+0x88c>
    1864:	mov	r8, r1
    1868:	add	r0, pc, r0
    186c:	bl	f10 <puts@plt>
    1870:	ldr	r0, [r5]
    1874:	cmp	r0, #0
    1878:	beq	20d4 <sfbpf_print+0x884>
    187c:	ldr	r7, [pc, #2140]	; 20e0 <sfbpf_print+0x890>
    1880:	mov	r6, #0
    1884:	add	r7, pc, r7
    1888:	ldr	sl, [r5, #4]
    188c:	ldr	r0, [pc, #2128]	; 20e4 <sfbpf_print+0x894>
    1890:	mov	r1, r6
    1894:	add	r0, pc, r0
    1898:	bl	e68 <printf@plt>
    189c:	lsl	r0, r6, #3
    18a0:	mov	r9, sl
    18a4:	cmp	r8, #0
    18a8:	ldrh	r0, [r9, r0]!	; <UNPREDICTABLE>
    18ac:	beq	19dc <sfbpf_print+0x18c>
    18b0:	ldr	r1, [pc, #2096]	; 20e8 <sfbpf_print+0x898>
    18b4:	ands	r0, r0, #7
    18b8:	add	r1, pc, r1
    18bc:	beq	18ec <sfbpf_print+0x9c>
    18c0:	mov	r1, #0
    18c4:	mov	r2, #0
    18c8:	cmp	r2, #7
    18cc:	beq	18ec <sfbpf_print+0x9c>
    18d0:	add	r3, r7, r2, lsl #3
    18d4:	add	r2, r2, #1
    18d8:	ldr	r3, [r3, #8]
    18dc:	cmp	r3, r0
    18e0:	bne	18c8 <sfbpf_print+0x78>
    18e4:	add	r0, r7, r2, lsl #3
    18e8:	ldr	r1, [r0, #4]
    18ec:	ldr	r0, [pc, #2040]	; 20ec <sfbpf_print+0x89c>
    18f0:	add	r0, pc, r0
    18f4:	bl	e68 <printf@plt>
    18f8:	ldrh	r0, [r9]
    18fc:	and	r1, r0, #7
    1900:	cmp	r1, #7
    1904:	bhi	1c50 <sfbpf_print+0x400>
    1908:	add	r2, pc, #4
    190c:	ldr	r1, [r2, r1, lsl #2]
    1910:	add	pc, r2, r1
    1914:	.word	0x00000020
    1918:	.word	0x00000020
    191c:	.word	0x0000033c
    1920:	.word	0x0000033c
    1924:	.word	0x00000158
    1928:	.word	0x000001e4
    192c:	.word	0x0000028c
    1930:	.word	0x000002e4
    1934:	ldr	r1, [pc, #1972]	; 20f0 <sfbpf_print+0x8a0>
    1938:	ands	r2, r0, #24
    193c:	add	r1, pc, r1
    1940:	beq	1980 <sfbpf_print+0x130>
    1944:	mov	r1, #0
    1948:	mov	r3, #0
    194c:	cmp	r3, #2
    1950:	beq	1980 <sfbpf_print+0x130>
    1954:	ldr	r4, [pc, #1944]	; 20f4 <sfbpf_print+0x8a4>
    1958:	add	r4, pc, r4
    195c:	add	r4, r4, r3, lsl #3
    1960:	add	r3, r3, #1
    1964:	ldr	r4, [r4, #8]
    1968:	cmp	r4, r2
    196c:	bne	194c <sfbpf_print+0xfc>
    1970:	ldr	r1, [pc, #1920]	; 20f8 <sfbpf_print+0x8a8>
    1974:	add	r1, pc, r1
    1978:	add	r1, r1, r3, lsl #3
    197c:	ldr	r1, [r1, #4]
    1980:	ldr	r2, [pc, #1908]	; 20fc <sfbpf_print+0x8ac>
    1984:	ands	r0, r0, #224	; 0xe0
    1988:	add	r2, pc, r2
    198c:	beq	19cc <sfbpf_print+0x17c>
    1990:	mov	r2, #0
    1994:	mov	r3, #0
    1998:	cmp	r3, #5
    199c:	beq	19cc <sfbpf_print+0x17c>
    19a0:	ldr	r4, [pc, #1880]	; 2100 <sfbpf_print+0x8b0>
    19a4:	add	r4, pc, r4
    19a8:	add	r4, r4, r3, lsl #3
    19ac:	add	r3, r3, #1
    19b0:	ldr	r4, [r4, #8]
    19b4:	cmp	r4, r0
    19b8:	bne	1998 <sfbpf_print+0x148>
    19bc:	ldr	r0, [pc, #1856]	; 2104 <sfbpf_print+0x8b4>
    19c0:	add	r0, pc, r0
    19c4:	add	r0, r0, r3, lsl #3
    19c8:	ldr	r2, [r0, #4]
    19cc:	ldr	r0, [pc, #1844]	; 2108 <sfbpf_print+0x8b8>
    19d0:	add	r0, pc, r0
    19d4:	bl	e68 <printf@plt>
    19d8:	b	1c50 <sfbpf_print+0x400>
    19dc:	and	r1, r0, #7
    19e0:	sub	r1, r1, #1
    19e4:	cmp	r1, #6
    19e8:	bhi	1c80 <sfbpf_print+0x430>
    19ec:	add	r2, pc, #4
    19f0:	ldr	r1, [r2, r1, lsl #2]
    19f4:	add	pc, r2, r1
    19f8:	.word	0x0000001c
    19fc:	.word	0x000002ec
    1a00:	.word	0x00000314
    1a04:	.word	0x0000033c
    1a08:	.word	0x0000038c
    1a0c:	.word	0x000003f0
    1a10:	.word	0x00000434
    1a14:	ldr	r0, [pc, #1880]	; 2174 <sfbpf_print+0x924>
    1a18:	add	r0, pc, r0
    1a1c:	bl	e68 <printf@plt>
    1a20:	ldrh	r0, [r9]
    1a24:	ubfx	r0, r0, #5, #3
    1a28:	cmp	r0, #5
    1a2c:	bhi	20bc <sfbpf_print+0x86c>
    1a30:	add	r1, pc, #4
    1a34:	ldr	r0, [r1, r0, lsl #2]
    1a38:	add	pc, r1, r0
    1a3c:	.word	0x00000018
    1a40:	.word	0x00000680
    1a44:	.word	0x00000680
    1a48:	.word	0x0000047c
    1a4c:	.word	0x00000494
    1a50:	.word	0x000004a0
    1a54:	add	r0, sl, r6, lsl #3
    1a58:	ldr	r1, [r0, #4]
    1a5c:	ldr	r0, [pc, #1816]	; 217c <sfbpf_print+0x92c>
    1a60:	add	r0, pc, r0
    1a64:	bl	e68 <printf@plt>
    1a68:	b	20bc <sfbpf_print+0x86c>
    1a6c:	ldr	r1, [pc, #1688]	; 210c <sfbpf_print+0x8bc>
    1a70:	ands	r2, r0, #240	; 0xf0
    1a74:	add	r1, pc, r1
    1a78:	beq	1ab8 <sfbpf_print+0x268>
    1a7c:	mov	r1, #0
    1a80:	mov	r3, #0
    1a84:	cmp	r3, #8
    1a88:	beq	1ab8 <sfbpf_print+0x268>
    1a8c:	ldr	r4, [pc, #1660]	; 2110 <sfbpf_print+0x8c0>
    1a90:	add	r4, pc, r4
    1a94:	add	r4, r4, r3, lsl #3
    1a98:	add	r3, r3, #1
    1a9c:	ldr	r4, [r4, #8]
    1aa0:	cmp	r4, r2
    1aa4:	bne	1a84 <sfbpf_print+0x234>
    1aa8:	ldr	r1, [pc, #1636]	; 2114 <sfbpf_print+0x8c4>
    1aac:	add	r1, pc, r1
    1ab0:	add	r1, r1, r3, lsl #3
    1ab4:	ldr	r1, [r1, #4]
    1ab8:	ldr	r2, [pc, #1624]	; 2118 <sfbpf_print+0x8c8>
    1abc:	ands	r0, r0, #8
    1ac0:	add	r2, pc, r2
    1ac4:	beq	1b90 <sfbpf_print+0x340>
    1ac8:	mov	r2, #0
    1acc:	mov	r3, #0
    1ad0:	cmp	r3, #1
    1ad4:	beq	1b90 <sfbpf_print+0x340>
    1ad8:	ldr	r4, [pc, #1596]	; 211c <sfbpf_print+0x8cc>
    1adc:	add	r4, pc, r4
    1ae0:	add	r4, r4, r3, lsl #3
    1ae4:	add	r3, r3, #1
    1ae8:	ldr	r4, [r4, #8]
    1aec:	cmp	r4, r0
    1af0:	bne	1ad0 <sfbpf_print+0x280>
    1af4:	b	1b80 <sfbpf_print+0x330>
    1af8:	ldr	r1, [pc, #1576]	; 2128 <sfbpf_print+0x8d8>
    1afc:	ands	r2, r0, #240	; 0xf0
    1b00:	add	r1, pc, r1
    1b04:	beq	1b44 <sfbpf_print+0x2f4>
    1b08:	mov	r1, #0
    1b0c:	mov	r3, #0
    1b10:	cmp	r3, #4
    1b14:	beq	1b44 <sfbpf_print+0x2f4>
    1b18:	ldr	r4, [pc, #1548]	; 212c <sfbpf_print+0x8dc>
    1b1c:	add	r4, pc, r4
    1b20:	add	r4, r4, r3, lsl #3
    1b24:	add	r3, r3, #1
    1b28:	ldr	r4, [r4, #8]
    1b2c:	cmp	r4, r2
    1b30:	bne	1b10 <sfbpf_print+0x2c0>
    1b34:	ldr	r1, [pc, #1524]	; 2130 <sfbpf_print+0x8e0>
    1b38:	add	r1, pc, r1
    1b3c:	add	r1, r1, r3, lsl #3
    1b40:	ldr	r1, [r1, #4]
    1b44:	ldr	r2, [pc, #1512]	; 2134 <sfbpf_print+0x8e4>
    1b48:	ands	r0, r0, #8
    1b4c:	add	r2, pc, r2
    1b50:	beq	1b90 <sfbpf_print+0x340>
    1b54:	mov	r2, #0
    1b58:	mov	r3, #0
    1b5c:	cmp	r3, #1
    1b60:	beq	1b90 <sfbpf_print+0x340>
    1b64:	ldr	r4, [pc, #1484]	; 2138 <sfbpf_print+0x8e8>
    1b68:	add	r4, pc, r4
    1b6c:	add	r4, r4, r3, lsl #3
    1b70:	add	r3, r3, #1
    1b74:	ldr	r4, [r4, #8]
    1b78:	cmp	r4, r0
    1b7c:	bne	1b5c <sfbpf_print+0x30c>
    1b80:	ldr	r0, [pc, #1432]	; 2120 <sfbpf_print+0x8d0>
    1b84:	add	r0, pc, r0
    1b88:	add	r0, r0, r3, lsl #3
    1b8c:	ldr	r2, [r0, #4]
    1b90:	ldr	r0, [pc, #1420]	; 2124 <sfbpf_print+0x8d4>
    1b94:	add	r0, pc, r0
    1b98:	bl	e68 <printf@plt>
    1b9c:	b	1c50 <sfbpf_print+0x400>
    1ba0:	ldr	r1, [pc, #1428]	; 213c <sfbpf_print+0x8ec>
    1ba4:	ands	r0, r0, #24
    1ba8:	add	r1, pc, r1
    1bac:	beq	1bec <sfbpf_print+0x39c>
    1bb0:	mov	r1, #0
    1bb4:	mov	r2, #0
    1bb8:	cmp	r2, #2
    1bbc:	beq	1bec <sfbpf_print+0x39c>
    1bc0:	ldr	r3, [pc, #1400]	; 2140 <sfbpf_print+0x8f0>
    1bc4:	add	r3, pc, r3
    1bc8:	add	r3, r3, r2, lsl #3
    1bcc:	add	r2, r2, #1
    1bd0:	ldr	r3, [r3, #8]
    1bd4:	cmp	r3, r0
    1bd8:	bne	1bb8 <sfbpf_print+0x368>
    1bdc:	ldr	r0, [pc, #1376]	; 2144 <sfbpf_print+0x8f4>
    1be0:	add	r0, pc, r0
    1be4:	add	r0, r0, r2, lsl #3
    1be8:	ldr	r1, [r0, #4]
    1bec:	ldr	r0, [pc, #1364]	; 2148 <sfbpf_print+0x8f8>
    1bf0:	add	r0, pc, r0
    1bf4:	b	1c4c <sfbpf_print+0x3fc>
    1bf8:	ldr	r1, [pc, #1356]	; 214c <sfbpf_print+0x8fc>
    1bfc:	ands	r0, r0, #248	; 0xf8
    1c00:	add	r1, pc, r1
    1c04:	beq	1c44 <sfbpf_print+0x3f4>
    1c08:	mov	r1, #0
    1c0c:	mov	r2, #0
    1c10:	cmp	r2, #1
    1c14:	beq	1c44 <sfbpf_print+0x3f4>
    1c18:	ldr	r3, [pc, #1328]	; 2150 <sfbpf_print+0x900>
    1c1c:	add	r3, pc, r3
    1c20:	add	r3, r3, r2, lsl #3
    1c24:	add	r2, r2, #1
    1c28:	ldr	r3, [r3, #8]
    1c2c:	cmp	r3, r0
    1c30:	bne	1c10 <sfbpf_print+0x3c0>
    1c34:	ldr	r0, [pc, #1304]	; 2154 <sfbpf_print+0x904>
    1c38:	add	r0, pc, r0
    1c3c:	add	r0, r0, r2, lsl #3
    1c40:	ldr	r1, [r0, #4]
    1c44:	ldr	r0, [pc, #1292]	; 2158 <sfbpf_print+0x908>
    1c48:	add	r0, pc, r0
    1c4c:	bl	e68 <printf@plt>
    1c50:	add	r0, sl, r6, lsl #3
    1c54:	ldr	r3, [r0, #4]
    1c58:	ldrb	r1, [r0, #2]
    1c5c:	ldrb	r2, [r0, #3]
    1c60:	ldr	r0, [pc, #1268]	; 215c <sfbpf_print+0x90c>
    1c64:	add	r0, pc, r0
    1c68:	bl	e68 <printf@plt>
    1c6c:	ldr	r0, [r5]
    1c70:	add	r6, r6, #1
    1c74:	cmp	r6, r0
    1c78:	bcc	1888 <sfbpf_print+0x38>
    1c7c:	b	20d4 <sfbpf_print+0x884>
    1c80:	ldr	r0, [pc, #1240]	; 2160 <sfbpf_print+0x910>
    1c84:	add	r0, pc, r0
    1c88:	bl	e68 <printf@plt>
    1c8c:	ldrh	r0, [r9]
    1c90:	ubfx	r1, r0, #5, #3
    1c94:	cmp	r1, #4
    1c98:	bhi	1e5c <sfbpf_print+0x60c>
    1c9c:	add	r2, pc, #4
    1ca0:	ldr	r1, [r2, r1, lsl #2]
    1ca4:	add	pc, r2, r1
    1ca8:	.word	0x000003a0
    1cac:	.word	0x00000014
    1cb0:	.word	0x0000024c
    1cb4:	.word	0x00000274
    1cb8:	.word	0x0000028c
    1cbc:	add	r1, sl, r6, lsl #3
    1cc0:	ands	r0, r0, #24
    1cc4:	ldr	r1, [r1, #4]
    1cc8:	beq	208c <sfbpf_print+0x83c>
    1ccc:	cmp	r0, #16
    1cd0:	beq	2094 <sfbpf_print+0x844>
    1cd4:	cmp	r0, #8
    1cd8:	movne	r2, #0
    1cdc:	moveq	r2, #2
    1ce0:	b	2098 <sfbpf_print+0x848>
    1ce4:	add	r0, sl, r6, lsl #3
    1ce8:	ldr	r1, [r0, #4]
    1cec:	ldr	r0, [pc, #1172]	; 2188 <sfbpf_print+0x938>
    1cf0:	add	r0, pc, r0
    1cf4:	bl	e68 <printf@plt>
    1cf8:	ldr	r0, [r5]
    1cfc:	add	r6, r6, #1
    1d00:	cmp	r6, r0
    1d04:	bcc	1888 <sfbpf_print+0x38>
    1d08:	b	20d4 <sfbpf_print+0x884>
    1d0c:	add	r0, sl, r6, lsl #3
    1d10:	ldr	r1, [r0, #4]
    1d14:	ldr	r0, [pc, #1136]	; 218c <sfbpf_print+0x93c>
    1d18:	add	r0, pc, r0
    1d1c:	bl	e68 <printf@plt>
    1d20:	ldr	r0, [r5]
    1d24:	add	r6, r6, #1
    1d28:	cmp	r6, r0
    1d2c:	bcc	1888 <sfbpf_print+0x38>
    1d30:	b	20d4 <sfbpf_print+0x884>
    1d34:	ubfx	r0, r0, #4, #4
    1d38:	cmp	r0, #8
    1d3c:	bhi	1fe0 <sfbpf_print+0x790>
    1d40:	add	r2, pc, #12
    1d44:	ldr	r1, [pc, #1092]	; 2190 <sfbpf_print+0x940>
    1d48:	ldr	r0, [r2, r0, lsl #2]
    1d4c:	add	r1, pc, r1
    1d50:	add	pc, r2, r0
    1d54:	.word	0x000002dc
    1d58:	.word	0x00000024
    1d5c:	.word	0x00000298
    1d60:	.word	0x000002a4
    1d64:	.word	0x000002b0
    1d68:	.word	0x000002bc
    1d6c:	.word	0x000002c8
    1d70:	.word	0x000002d4
    1d74:	.word	0x00000318
    1d78:	ldr	r1, [pc, #1044]	; 2194 <sfbpf_print+0x944>
    1d7c:	add	r1, pc, r1
    1d80:	b	2030 <sfbpf_print+0x7e0>
    1d84:	ubfx	r0, r0, #4, #4
    1d88:	cmp	r0, #4
    1d8c:	bhi	1f44 <sfbpf_print+0x6f4>
    1d90:	add	r2, pc, #12
    1d94:	ldr	r1, [pc, #1060]	; 21c0 <sfbpf_print+0x970>
    1d98:	ldr	r0, [r2, r0, lsl #2]
    1d9c:	add	r1, pc, r1
    1da0:	add	pc, r2, r0
    1da4:	.word	0x00000014
    1da8:	.word	0x000001cc
    1dac:	.word	0x000001ac
    1db0:	.word	0x000001b8
    1db4:	.word	0x000001c4
    1db8:	add	r0, sl, r6, lsl #3
    1dbc:	ldr	r0, [r0, #4]
    1dc0:	add	r0, r6, r0
    1dc4:	add	r1, r0, #1
    1dc8:	ldr	r0, [pc, #1012]	; 21c4 <sfbpf_print+0x974>
    1dcc:	add	r0, pc, r0
    1dd0:	bl	e68 <printf@plt>
    1dd4:	ldr	r0, [r5]
    1dd8:	add	r6, r6, #1
    1ddc:	cmp	r6, r0
    1de0:	bcc	1888 <sfbpf_print+0x38>
    1de4:	b	20d4 <sfbpf_print+0x884>
    1de8:	ldr	r0, [pc, #1012]	; 21e4 <sfbpf_print+0x994>
    1dec:	add	r0, pc, r0
    1df0:	bl	e68 <printf@plt>
    1df4:	ldrh	r0, [r9]
    1df8:	and	r0, r0, #24
    1dfc:	cmp	r0, #16
    1e00:	beq	1e74 <sfbpf_print+0x624>
    1e04:	cmp	r0, #8
    1e08:	beq	1e80 <sfbpf_print+0x630>
    1e0c:	cmp	r0, #0
    1e10:	bne	1e8c <sfbpf_print+0x63c>
    1e14:	add	r0, sl, r6, lsl #3
    1e18:	ldr	r1, [r0, #4]
    1e1c:	ldr	r0, [pc, #964]	; 21e8 <sfbpf_print+0x998>
    1e20:	add	r0, pc, r0
    1e24:	bl	e68 <printf@plt>
    1e28:	b	1e98 <sfbpf_print+0x648>
    1e2c:	ldr	r0, [pc, #960]	; 21f4 <sfbpf_print+0x9a4>
    1e30:	add	r0, pc, r0
    1e34:	bl	e68 <printf@plt>
    1e38:	ldrh	r0, [r9]
    1e3c:	and	r0, r0, #248	; 0xf8
    1e40:	cmp	r0, #128	; 0x80
    1e44:	beq	1e68 <sfbpf_print+0x618>
    1e48:	cmp	r0, #0
    1e4c:	bne	1e5c <sfbpf_print+0x60c>
    1e50:	ldr	r0, [pc, #928]	; 21f8 <sfbpf_print+0x9a8>
    1e54:	add	r0, pc, r0
    1e58:	b	1f3c <sfbpf_print+0x6ec>
    1e5c:	ldr	r0, [pc, #924]	; 2200 <sfbpf_print+0x9b0>
    1e60:	add	r0, pc, r0
    1e64:	b	1f3c <sfbpf_print+0x6ec>
    1e68:	ldr	r0, [pc, #908]	; 21fc <sfbpf_print+0x9ac>
    1e6c:	add	r0, pc, r0
    1e70:	b	1f3c <sfbpf_print+0x6ec>
    1e74:	mov	r0, #65	; 0x41
    1e78:	bl	f94 <putchar@plt>
    1e7c:	b	1e98 <sfbpf_print+0x648>
    1e80:	mov	r0, #88	; 0x58
    1e84:	bl	f94 <putchar@plt>
    1e88:	b	1e98 <sfbpf_print+0x648>
    1e8c:	ldr	r0, [pc, #856]	; 21ec <sfbpf_print+0x99c>
    1e90:	add	r0, pc, r0
    1e94:	bl	e68 <printf@plt>
    1e98:	ldr	r0, [pc, #848]	; 21f0 <sfbpf_print+0x9a0>
    1e9c:	add	r0, pc, r0
    1ea0:	bl	f10 <puts@plt>
    1ea4:	ldr	r0, [r5]
    1ea8:	add	r6, r6, #1
    1eac:	cmp	r6, r0
    1eb0:	bcc	1888 <sfbpf_print+0x38>
    1eb4:	b	20d4 <sfbpf_print+0x884>
    1eb8:	add	r0, sl, r6, lsl #3
    1ebc:	ldr	r1, [r0, #4]
    1ec0:	ldr	r0, [pc, #696]	; 2180 <sfbpf_print+0x930>
    1ec4:	add	r0, pc, r0
    1ec8:	bl	e68 <printf@plt>
    1ecc:	b	20bc <sfbpf_print+0x86c>
    1ed0:	ldr	r0, [pc, #672]	; 2178 <sfbpf_print+0x928>
    1ed4:	add	r0, pc, r0
    1ed8:	b	1f3c <sfbpf_print+0x6ec>
    1edc:	add	r0, sl, r6, lsl #3
    1ee0:	ldr	r1, [r0, #4]
    1ee4:	ldr	r0, [pc, #664]	; 2184 <sfbpf_print+0x934>
    1ee8:	add	r0, pc, r0
    1eec:	bl	e68 <printf@plt>
    1ef0:	b	20bc <sfbpf_print+0x86c>
    1ef4:	add	r1, sl, r6, lsl #3
    1ef8:	ands	r0, r0, #24
    1efc:	ldr	r1, [r1, #4]
    1f00:	beq	20a4 <sfbpf_print+0x854>
    1f04:	cmp	r0, #16
    1f08:	beq	20ac <sfbpf_print+0x85c>
    1f0c:	cmp	r0, #8
    1f10:	movne	r2, #0
    1f14:	moveq	r2, #2
    1f18:	b	20b0 <sfbpf_print+0x860>
    1f1c:	add	r0, sl, r6, lsl #3
    1f20:	ldr	r1, [r0, #4]
    1f24:	ldr	r0, [pc, #580]	; 2170 <sfbpf_print+0x920>
    1f28:	add	r0, pc, r0
    1f2c:	bl	e68 <printf@plt>
    1f30:	b	20bc <sfbpf_print+0x86c>
    1f34:	ldr	r0, [pc, #560]	; 216c <sfbpf_print+0x91c>
    1f38:	add	r0, pc, r0
    1f3c:	bl	e68 <printf@plt>
    1f40:	b	20bc <sfbpf_print+0x86c>
    1f44:	ldr	r1, [pc, #648]	; 21d4 <sfbpf_print+0x984>
    1f48:	add	r1, pc, r1
    1f4c:	b	1f70 <sfbpf_print+0x720>
    1f50:	ldr	r1, [pc, #624]	; 21c8 <sfbpf_print+0x978>
    1f54:	add	r1, pc, r1
    1f58:	b	1f70 <sfbpf_print+0x720>
    1f5c:	ldr	r1, [pc, #616]	; 21cc <sfbpf_print+0x97c>
    1f60:	add	r1, pc, r1
    1f64:	b	1f70 <sfbpf_print+0x720>
    1f68:	ldr	r1, [pc, #608]	; 21d0 <sfbpf_print+0x980>
    1f6c:	add	r1, pc, r1
    1f70:	ldr	r0, [pc, #608]	; 21d8 <sfbpf_print+0x988>
    1f74:	add	r0, pc, r0
    1f78:	bl	e68 <printf@plt>
    1f7c:	ldrb	r0, [r9]
    1f80:	tst	r0, #8
    1f84:	bne	1fa0 <sfbpf_print+0x750>
    1f88:	add	r0, sl, r6, lsl #3
    1f8c:	ldr	r1, [r0, #4]
    1f90:	ldr	r0, [pc, #580]	; 21dc <sfbpf_print+0x98c>
    1f94:	add	r0, pc, r0
    1f98:	bl	e68 <printf@plt>
    1f9c:	b	1fa8 <sfbpf_print+0x758>
    1fa0:	mov	r0, #88	; 0x58
    1fa4:	bl	f94 <putchar@plt>
    1fa8:	add	r0, sl, r6, lsl #3
    1fac:	add	r2, r6, #1
    1fb0:	ldrb	r1, [r0, #2]
    1fb4:	ldrb	r0, [r0, #3]
    1fb8:	add	r1, r2, r1
    1fbc:	add	r2, r2, r0
    1fc0:	ldr	r0, [pc, #536]	; 21e0 <sfbpf_print+0x990>
    1fc4:	add	r0, pc, r0
    1fc8:	bl	e68 <printf@plt>
    1fcc:	ldr	r0, [r5]
    1fd0:	add	r6, r6, #1
    1fd4:	cmp	r6, r0
    1fd8:	bcc	1888 <sfbpf_print+0x38>
    1fdc:	b	20d4 <sfbpf_print+0x884>
    1fe0:	ldr	r1, [pc, #460]	; 21b4 <sfbpf_print+0x964>
    1fe4:	add	r1, pc, r1
    1fe8:	b	2030 <sfbpf_print+0x7e0>
    1fec:	ldr	r1, [pc, #420]	; 2198 <sfbpf_print+0x948>
    1ff0:	add	r1, pc, r1
    1ff4:	b	2030 <sfbpf_print+0x7e0>
    1ff8:	ldr	r1, [pc, #412]	; 219c <sfbpf_print+0x94c>
    1ffc:	add	r1, pc, r1
    2000:	b	2030 <sfbpf_print+0x7e0>
    2004:	ldr	r1, [pc, #404]	; 21a0 <sfbpf_print+0x950>
    2008:	add	r1, pc, r1
    200c:	b	2030 <sfbpf_print+0x7e0>
    2010:	ldr	r1, [pc, #396]	; 21a4 <sfbpf_print+0x954>
    2014:	add	r1, pc, r1
    2018:	b	2030 <sfbpf_print+0x7e0>
    201c:	ldr	r1, [pc, #388]	; 21a8 <sfbpf_print+0x958>
    2020:	add	r1, pc, r1
    2024:	b	2030 <sfbpf_print+0x7e0>
    2028:	ldr	r1, [pc, #380]	; 21ac <sfbpf_print+0x95c>
    202c:	add	r1, pc, r1
    2030:	ldr	r0, [pc, #384]	; 21b8 <sfbpf_print+0x968>
    2034:	add	r0, pc, r0
    2038:	bl	e68 <printf@plt>
    203c:	ldrb	r0, [r9]
    2040:	tst	r0, #8
    2044:	bne	2060 <sfbpf_print+0x810>
    2048:	add	r0, sl, r6, lsl #3
    204c:	ldr	r1, [r0, #4]
    2050:	ldr	r0, [pc, #356]	; 21bc <sfbpf_print+0x96c>
    2054:	add	r0, pc, r0
    2058:	bl	e68 <printf@plt>
    205c:	b	20bc <sfbpf_print+0x86c>
    2060:	mov	r0, #88	; 0x58
    2064:	bl	f94 <putchar@plt>
    2068:	b	20bc <sfbpf_print+0x86c>
    206c:	ldr	r0, [pc, #316]	; 21b0 <sfbpf_print+0x960>
    2070:	add	r0, pc, r0
    2074:	bl	f10 <puts@plt>
    2078:	ldr	r0, [r5]
    207c:	add	r6, r6, #1
    2080:	cmp	r6, r0
    2084:	bcc	1888 <sfbpf_print+0x38>
    2088:	b	20d4 <sfbpf_print+0x884>
    208c:	mov	r2, #4
    2090:	b	2098 <sfbpf_print+0x848>
    2094:	mov	r2, #1
    2098:	ldr	r0, [pc, #196]	; 2164 <sfbpf_print+0x914>
    209c:	add	r0, pc, r0
    20a0:	b	20b8 <sfbpf_print+0x868>
    20a4:	mov	r2, #4
    20a8:	b	20b0 <sfbpf_print+0x860>
    20ac:	mov	r2, #1
    20b0:	ldr	r0, [pc, #176]	; 2168 <sfbpf_print+0x918>
    20b4:	add	r0, pc, r0
    20b8:	bl	e68 <printf@plt>
    20bc:	mov	r0, #10
    20c0:	bl	f94 <putchar@plt>
    20c4:	ldr	r0, [r5]
    20c8:	add	r6, r6, #1
    20cc:	cmp	r6, r0
    20d0:	bcc	1888 <sfbpf_print+0x38>
    20d4:	sub	sp, fp, #28
    20d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20dc:	.word	0x00026fcd
    20e0:	.word	0x0004433c
    20e4:	.word	0x00026df4
    20e8:	.word	0x00026e1b
    20ec:	.word	0x00026f11
    20f0:	.word	0x00026dbf
    20f4:	.word	0x000442b0
    20f8:	.word	0x00044294
    20fc:	.word	0x00026d75
    2100:	.word	0x00044284
    2104:	.word	0x00044268
    2108:	.word	0x00026cbe
    210c:	.word	0x00026ca1
    2110:	.word	0x000441d0
    2114:	.word	0x000441b4
    2118:	.word	0x00026c79
    211c:	.word	0x000441d4
    2120:	.word	0x0004412c
    2124:	.word	0x00026b0b
    2128:	.word	0x00026c3b
    212c:	.word	0x000441ac
    2130:	.word	0x00044190
    2134:	.word	0x00026bed
    2138:	.word	0x00044148
    213c:	.word	0x00026b91
    2140:	.word	0x00044134
    2144:	.word	0x00044118
    2148:	.word	0x00026abd
    214c:	.word	0x00026b54
    2150:	.word	0x000440fc
    2154:	.word	0x000440e0
    2158:	.word	0x00026a6e
    215c:	.word	0x00026a59
    2160:	.word	0x00026afa
    2164:	.word	0x000266ed
    2168:	.word	0x000266de
    216c:	.word	0x00026865
    2170:	.word	0x00026879
    2174:	.word	0x00026d93
    2178:	.word	0x000268c9
    217c:	.word	0x0002797b
    2180:	.word	0x000268dd
    2184:	.word	0x000268ce
    2188:	.word	0x00026a6c
    218c:	.word	0x00026a55
    2190:	.word	0x00026a7a
    2194:	.word	0x00026a4c
    2198:	.word	0x000267da
    219c:	.word	0x000267d0
    21a0:	.word	0x000267c6
    21a4:	.word	0x000267bc
    21a8:	.word	0x000267b2
    21ac:	.word	0x000267a9
    21b0:	.word	0x000267d3
    21b4:	.word	0x000267c3
    21b8:	.word	0x000267a4
    21bc:	.word	0x00027387
    21c0:	.word	0x00026a57
    21c4:	.word	0x00026a1d
    21c8:	.word	0x00026882
    21cc:	.word	0x00026896
    21d0:	.word	0x00026864
    21d4:	.word	0x0002685f
    21d8:	.word	0x00026885
    21dc:	.word	0x00027447
    21e0:	.word	0x00026841
    21e4:	.word	0x00026a28
    21e8:	.word	0x000275bb
    21ec:	.word	0x00026917
    21f0:	.word	0x000269af
    21f4:	.word	0x000269f1
    21f8:	.word	0x000269d3
    21fc:	.word	0x000269c2
    2200:	.word	0x00026947

00002204 <sf_bpf_error>:
    2204:	sub	sp, sp, #12
    2208:	push	{fp, lr}
    220c:	mov	fp, sp
    2210:	sub	sp, sp, #4
    2214:	mov	ip, r0
    2218:	add	r0, fp, #8
    221c:	stm	r0, {r1, r2, r3}
    2220:	add	r3, fp, #8
    2224:	mov	r1, #256	; 0x100
    2228:	mov	r2, ip
    222c:	str	r3, [sp]
    2230:	ldr	r0, [pc, #20]	; 224c <sf_bpf_error+0x48>
    2234:	add	r0, pc, r0
    2238:	bl	fd0 <vsnprintf@plt>
    223c:	ldr	r0, [pc, #12]	; 2250 <sf_bpf_error+0x4c>
    2240:	mov	r1, #1
    2244:	add	r0, pc, r0
    2248:	bl	e8c <longjmp@plt>
    224c:	.word	0x00043f5c
    2250:	.word	0x00044054

00002254 <sf_sdup>:
    2254:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2258:	add	fp, sp, #24
    225c:	mov	r8, r0
    2260:	bl	f4c <strlen@plt>
    2264:	ldr	r1, [pc, #176]	; 231c <sf_sdup+0xc8>
    2268:	mov	r9, r0
    226c:	add	r2, r9, #4
    2270:	bic	r4, r2, #3
    2274:	add	r1, pc, r1
    2278:	ldr	r0, [r1, #92]	; 0x5c
    227c:	ldr	r5, [pc, #156]	; 2320 <sf_sdup+0xcc>
    2280:	add	r5, pc, r5
    2284:	ldr	r6, [r5, r0, lsl #3]!
    2288:	cmp	r4, r6
    228c:	bls	22d8 <sf_sdup+0x84>
    2290:	add	r2, r0, #1
    2294:	cmp	r0, #15
    2298:	str	r2, [r1, #92]	; 0x5c
    229c:	bge	2310 <sf_sdup+0xbc>
    22a0:	mov	r0, #1024	; 0x400
    22a4:	lsl	r6, r0, r2
    22a8:	mov	r0, r6
    22ac:	bl	f1c <malloc@plt>
    22b0:	cmp	r0, #0
    22b4:	str	r0, [r5, #12]
    22b8:	beq	2310 <sf_sdup+0xbc>
    22bc:	mov	r1, #0
    22c0:	mov	r2, r6
    22c4:	add	r5, r5, #8
    22c8:	bl	f88 <memset@plt>
    22cc:	cmp	r4, r6
    22d0:	str	r6, [r5]
    22d4:	bhi	2310 <sf_sdup+0xbc>
    22d8:	sub	r0, r6, r4
    22dc:	add	r7, r9, #1
    22e0:	str	r0, [r5]
    22e4:	mov	r2, r7
    22e8:	ldr	r1, [r5, #4]
    22ec:	add	r6, r1, r0
    22f0:	mov	r1, r8
    22f4:	mov	r0, r6
    22f8:	bl	fa0 <strncpy@plt>
    22fc:	cmp	r7, #1
    2300:	movge	r0, #0
    2304:	strbge	r0, [r6, r9]
    2308:	mov	r0, r6
    230c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2310:	ldr	r0, [pc, #12]	; 2324 <sf_sdup+0xd0>
    2314:	add	r0, pc, r0
    2318:	bl	2204 <sf_bpf_error>
    231c:	.word	0x0004426c
    2320:	.word	0x000441a0
    2324:	.word	0x00027080

00002328 <sfbpf_compile>:
    2328:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    232c:	add	fp, sp, #24
    2330:	sub	sp, sp, #8
    2334:	str	r3, [sp, #4]
    2338:	mov	r6, r0
    233c:	mov	r0, #0
    2340:	mov	r5, r1
    2344:	vmov.i32	q8, #0	; 0x00000000
    2348:	mov	r9, r2
    234c:	ldr	r8, [pc, #2356]	; 2c88 <sfbpf_compile+0x960>
    2350:	ldr	r8, [pc, r8]
    2354:	str	r0, [r8]
    2358:	ldr	r1, [pc, #2348]	; 2c8c <sfbpf_compile+0x964>
    235c:	add	r1, pc, r1
    2360:	str	r0, [r1]
    2364:	ldr	r7, [pc, #2340]	; 2c90 <sfbpf_compile+0x968>
    2368:	add	r7, pc, r7
    236c:	str	r0, [r7, #20]
    2370:	str	r0, [r7, #104]	; 0x68
    2374:	ldr	r0, [pc, #2328]	; 2c94 <sfbpf_compile+0x96c>
    2378:	add	r0, pc, r0
    237c:	add	r1, r0, #32
    2380:	vst1.64	{d16-d17}, [r1]
    2384:	add	r1, r0, #16
    2388:	vst1.64	{d16-d17}, [r1]
    238c:	mov	r1, #48	; 0x30
    2390:	vst1.64	{d16-d17}, [r0], r1
    2394:	vst1.64	{d16-d17}, [r0]
    2398:	ldr	r0, [pc, #2296]	; 2c98 <sfbpf_compile+0x970>
    239c:	add	r0, pc, r0
    23a0:	bl	e98 <_setjmp@plt>
    23a4:	cmp	r0, #0
    23a8:	beq	23d8 <sfbpf_compile+0xb0>
    23ac:	ldr	r0, [r7, #24]
    23b0:	cmp	r0, #0
    23b4:	beq	23c4 <sfbpf_compile+0x9c>
    23b8:	bl	fdc <freeaddrinfo@plt>
    23bc:	mov	r0, #0
    23c0:	str	r0, [r7, #24]
    23c4:	bl	28614 <sf_lex_cleanup>
    23c8:	bl	2cc0 <freechunks>
    23cc:	mvn	r0, #0
    23d0:	sub	sp, fp, #24
    23d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    23d8:	ldr	r0, [fp, #12]
    23dc:	cmp	r6, #0
    23e0:	str	r0, [r7, #28]
    23e4:	str	r6, [r7, #32]
    23e8:	beq	2400 <sfbpf_compile+0xd8>
    23ec:	ldr	r0, [sp, #4]
    23f0:	cmp	r0, #0
    23f4:	beq	243c <sfbpf_compile+0x114>
    23f8:	ldr	r0, [sp, #4]
    23fc:	b	2444 <sfbpf_compile+0x11c>
    2400:	ldr	r0, [pc, #2196]	; 2c9c <sfbpf_compile+0x974>
    2404:	ldr	r2, [pc, #2196]	; 2ca0 <sfbpf_compile+0x978>
    2408:	mov	r1, #32
    240c:	add	r0, pc, r0
    2410:	add	r2, pc, r2
    2414:	vld1.64	{d16-d17}, [r0]!
    2418:	add	r3, r2, #16
    241c:	vst1.64	{d16-d17}, [r2], r1
    2420:	vld1.64	{d16-d17}, [r0]
    2424:	mov	r1, #0
    2428:	strb	r1, [r2]
    242c:	vst1.64	{d16-d17}, [r3]
    2430:	mvn	r0, #0
    2434:	sub	sp, fp, #24
    2438:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    243c:	ldr	r0, [pc, #2144]	; 2ca4 <sfbpf_compile+0x97c>
    2440:	add	r0, pc, r0
    2444:	bl	285e4 <sf_lex_init>
    2448:	mov	r0, #0
    244c:	mvn	r1, #0
    2450:	mov	r2, #1
    2454:	cmp	r5, #229	; 0xe5
    2458:	str	r0, [r7, #52]	; 0x34
    245c:	str	r5, [r7, #36]	; 0x24
    2460:	strb	r0, [r7, #8]
    2464:	strb	r0, [r7]
    2468:	strb	r2, [r7, #12]
    246c:	strb	r0, [r7, #4]
    2470:	str	r1, [r7, #60]	; 0x3c
    2474:	str	r1, [r7, #64]	; 0x40
    2478:	str	r1, [r7, #68]	; 0x44
    247c:	str	r1, [r7, #72]	; 0x48
    2480:	str	r1, [r7, #76]	; 0x4c
    2484:	str	r1, [r7, #80]	; 0x50
    2488:	str	r1, [r7, #84]	; 0x54
    248c:	str	r1, [r7, #88]	; 0x58
    2490:	str	r0, [r7, #44]	; 0x2c
    2494:	strb	r0, [r7, #16]
    2498:	ldr	r2, [pc, #2056]	; 2ca8 <sfbpf_compile+0x980>
    249c:	add	r2, pc, r2
    24a0:	stm	r2, {r0, r1}
    24a4:	str	r1, [r7, #96]	; 0x60
    24a8:	str	r1, [r7, #100]	; 0x64
    24ac:	bhi	2c60 <sfbpf_compile+0x938>
    24b0:	add	r0, pc, #4
    24b4:	ldr	r1, [r0, r5, lsl #2]
    24b8:	add	pc, r0, r1
    24bc:	.word	0x00000438
    24c0:	.word	0x000004f8
    24c4:	.word	0x000007a4
    24c8:	.word	0x000007a4
    24cc:	.word	0x000007a4
    24d0:	.word	0x000007a4
    24d4:	.word	0x00000508
    24d8:	.word	0x000004b4
    24dc:	.word	0x00000510
    24e0:	.word	0x000003ec
    24e4:	.word	0x000004bc
    24e8:	.word	0x00000440
    24ec:	.word	0x000003bc
    24f0:	.word	0x000007a4
    24f4:	.word	0x000007a4
    24f8:	.word	0x000004c4
    24fc:	.word	0x0000051c
    2500:	.word	0x000007a4
    2504:	.word	0x000007a4
    2508:	.word	0x00000440
    250c:	.word	0x000007a4
    2510:	.word	0x000007a4
    2514:	.word	0x000007a4
    2518:	.word	0x000007a4
    251c:	.word	0x000007a4
    2520:	.word	0x000007a4
    2524:	.word	0x000007a4
    2528:	.word	0x000007a4
    252c:	.word	0x000007a4
    2530:	.word	0x000007a4
    2534:	.word	0x000007a4
    2538:	.word	0x000007a4
    253c:	.word	0x000007a4
    2540:	.word	0x000007a4
    2544:	.word	0x000007a4
    2548:	.word	0x000007a4
    254c:	.word	0x000007a4
    2550:	.word	0x000007a4
    2554:	.word	0x000007a4
    2558:	.word	0x000007a4
    255c:	.word	0x000007a4
    2560:	.word	0x000007a4
    2564:	.word	0x000007a4
    2568:	.word	0x000007a4
    256c:	.word	0x000007a4
    2570:	.word	0x000007a4
    2574:	.word	0x000007a4
    2578:	.word	0x000007a4
    257c:	.word	0x000007a4
    2580:	.word	0x000007a4
    2584:	.word	0x000003ec
    2588:	.word	0x000004d0
    258c:	.word	0x000007a4
    2590:	.word	0x000007a4
    2594:	.word	0x000007a4
    2598:	.word	0x000007a4
    259c:	.word	0x000007a4
    25a0:	.word	0x000007a4
    25a4:	.word	0x000007a4
    25a8:	.word	0x000007a4
    25ac:	.word	0x000007a4
    25b0:	.word	0x000007a4
    25b4:	.word	0x000007a4
    25b8:	.word	0x000007a4
    25bc:	.word	0x000007a4
    25c0:	.word	0x000007a4
    25c4:	.word	0x000007a4
    25c8:	.word	0x000007a4
    25cc:	.word	0x000007a4
    25d0:	.word	0x000007a4
    25d4:	.word	0x000007a4
    25d8:	.word	0x000007a4
    25dc:	.word	0x000007a4
    25e0:	.word	0x000007a4
    25e4:	.word	0x000007a4
    25e8:	.word	0x000007a4
    25ec:	.word	0x000007a4
    25f0:	.word	0x000007a4
    25f4:	.word	0x000007a4
    25f8:	.word	0x000007a4
    25fc:	.word	0x000007a4
    2600:	.word	0x000007a4
    2604:	.word	0x000007a4
    2608:	.word	0x000007a4
    260c:	.word	0x000007a4
    2610:	.word	0x000007a4
    2614:	.word	0x000007a4
    2618:	.word	0x000007a4
    261c:	.word	0x000007a4
    2620:	.word	0x000007a4
    2624:	.word	0x000007a4
    2628:	.word	0x000007a4
    262c:	.word	0x000007a4
    2630:	.word	0x000007a4
    2634:	.word	0x000007a4
    2638:	.word	0x000007a4
    263c:	.word	0x000007a4
    2640:	.word	0x000007a4
    2644:	.word	0x000007a4
    2648:	.word	0x00000528
    264c:	.word	0x000007a4
    2650:	.word	0x000007a4
    2654:	.word	0x000007a4
    2658:	.word	0x000007a4
    265c:	.word	0x000003ec
    2660:	.word	0x000003c8
    2664:	.word	0x000007a4
    2668:	.word	0x000003bc
    266c:	.word	0x00000438
    2670:	.word	0x0000058c
    2674:	.word	0x000007a4
    2678:	.word	0x000007a4
    267c:	.word	0x000007a4
    2680:	.word	0x00000640
    2684:	.word	0x000003bc
    2688:	.word	0x000007a4
    268c:	.word	0x000007a4
    2690:	.word	0x000007a4
    2694:	.word	0x000007a4
    2698:	.word	0x000003c8
    269c:	.word	0x000007a4
    26a0:	.word	0x000007a4
    26a4:	.word	0x00000534
    26a8:	.word	0x000005b8
    26ac:	.word	0x000007a4
    26b0:	.word	0x000007a4
    26b4:	.word	0x000007a4
    26b8:	.word	0x000003c8
    26bc:	.word	0x000007a4
    26c0:	.word	0x00000490
    26c4:	.word	0x000003a4
    26c8:	.word	0x000003a4
    26cc:	.word	0x0000060c
    26d0:	.word	0x00000550
    26d4:	.word	0x000003a4
    26d8:	.word	0x0000055c
    26dc:	.word	0x00000564
    26e0:	.word	0x00000570
    26e4:	.word	0x0000049c
    26e8:	.word	0x000004dc
    26ec:	.word	0x00000460
    26f0:	.word	0x000007a4
    26f4:	.word	0x000007a4
    26f8:	.word	0x00000398
    26fc:	.word	0x00000398
    2700:	.word	0x000007a4
    2704:	.word	0x000007a4
    2708:	.word	0x000007a4
    270c:	.word	0x000007a4
    2710:	.word	0x000007a4
    2714:	.word	0x000007a4
    2718:	.word	0x000007a4
    271c:	.word	0x000007a4
    2720:	.word	0x000007a4
    2724:	.word	0x000007a4
    2728:	.word	0x000007a4
    272c:	.word	0x000007a4
    2730:	.word	0x000007a4
    2734:	.word	0x000007a4
    2738:	.word	0x000007a4
    273c:	.word	0x000007a4
    2740:	.word	0x000007a4
    2744:	.word	0x000007a4
    2748:	.word	0x000003c8
    274c:	.word	0x000004f0
    2750:	.word	0x000007a4
    2754:	.word	0x000003ec
    2758:	.word	0x0000041c
    275c:	.word	0x000004a8
    2760:	.word	0x000007a4
    2764:	.word	0x000007a4
    2768:	.word	0x000007a4
    276c:	.word	0x000007a4
    2770:	.word	0x000007a4
    2774:	.word	0x000007a4
    2778:	.word	0x000007a4
    277c:	.word	0x000007a4
    2780:	.word	0x00000398
    2784:	.word	0x0000041c
    2788:	.word	0x000003a4
    278c:	.word	0x000003a4
    2790:	.word	0x000003a4
    2794:	.word	0x00000474
    2798:	.word	0x00000448
    279c:	.word	0x000007a4
    27a0:	.word	0x000007a4
    27a4:	.word	0x00000398
    27a8:	.word	0x00000398
    27ac:	.word	0x000007a4
    27b0:	.word	0x00000398
    27b4:	.word	0x00000398
    27b8:	.word	0x00000398
    27bc:	.word	0x000003c8
    27c0:	.word	0x00000398
    27c4:	.word	0x00000454
    27c8:	.word	0x00000398
    27cc:	.word	0x00000398
    27d0:	.word	0x0000077c
    27d4:	.word	0x00000398
    27d8:	.word	0x00000398
    27dc:	.word	0x00000448
    27e0:	.word	0x00000398
    27e4:	.word	0x00000624
    27e8:	.word	0x000007a4
    27ec:	.word	0x000007a4
    27f0:	.word	0x000007a4
    27f4:	.word	0x000007a4
    27f8:	.word	0x000007a4
    27fc:	.word	0x000007a4
    2800:	.word	0x000007a4
    2804:	.word	0x000007a4
    2808:	.word	0x000007a4
    280c:	.word	0x000007a4
    2810:	.word	0x000007a4
    2814:	.word	0x000007a4
    2818:	.word	0x00000398
    281c:	.word	0x000007a4
    2820:	.word	0x000007a4
    2824:	.word	0x000007a4
    2828:	.word	0x00000398
    282c:	.word	0x00000398
    2830:	.word	0x000007a4
    2834:	.word	0x000007a4
    2838:	.word	0x000007a4
    283c:	.word	0x000007a4
    2840:	.word	0x000007a4
    2844:	.word	0x0000064c
    2848:	.word	0x00000398
    284c:	.word	0x000003bc
    2850:	.word	0x000003bc
    2854:	mvn	r0, #0
    2858:	str	r0, [r7, #40]	; 0x28
    285c:	b	2ad4 <sfbpf_compile+0x7ac>
    2860:	mov	r0, #4
    2864:	mov	r1, #0
    2868:	str	r0, [r7, #40]	; 0x28
    286c:	str	r0, [r7, #44]	; 0x2c
    2870:	str	r1, [r7, #48]	; 0x30
    2874:	b	2b20 <sfbpf_compile+0x7f8>
    2878:	mov	r0, #0
    287c:	mvn	r1, #0
    2880:	b	2ad0 <sfbpf_compile+0x7a8>
    2884:	mov	r2, #1
    2888:	mov	r0, #0
    288c:	mov	r1, #24
    2890:	strb	r2, [r7, #16]
    2894:	mov	r2, #8
    2898:	str	r1, [r7, #40]	; 0x28
    289c:	str	r0, [r7, #44]	; 0x2c
    28a0:	str	r2, [r7, #48]	; 0x30
    28a4:	b	2a04 <sfbpf_compile+0x6dc>
    28a8:	mov	r0, #4
    28ac:	mov	r1, #2
    28b0:	mov	r2, #0
    28b4:	str	r1, [r7, #40]	; 0x28
    28b8:	str	r0, [r7, #44]	; 0x2c
    28bc:	str	r2, [r7, #48]	; 0x30
    28c0:	str	r2, [r7, #56]	; 0x38
    28c4:	bl	24504 <sfbpf_parse>
    28c8:	ldr	r0, [r8]
    28cc:	cmp	r0, #0
    28d0:	beq	2b38 <sfbpf_compile+0x810>
    28d4:	bl	2e68 <syntax>
    28d8:	mov	r0, #16
    28dc:	mov	r1, #14
    28e0:	mov	r2, #18
    28e4:	add	r3, r7, #40	; 0x28
    28e8:	stm	r3, {r0, r1, r2}
    28ec:	mov	r0, #21
    28f0:	b	2b24 <sfbpf_compile+0x7fc>
    28f4:	mov	r0, #4
    28f8:	b	2a4c <sfbpf_compile+0x724>
    28fc:	mov	r0, #0
    2900:	b	29f4 <sfbpf_compile+0x6cc>
    2904:	mvn	r0, #0
    2908:	mov	r1, #18
    290c:	b	2ad0 <sfbpf_compile+0x7a8>
    2910:	mvn	r0, #0
    2914:	mov	r1, #8
    2918:	b	2ad0 <sfbpf_compile+0x7a8>
    291c:	mov	r0, #3
    2920:	mov	r1, #2
    2924:	mov	r2, #4
    2928:	mov	r3, #7
    292c:	b	2c48 <sfbpf_compile+0x920>
    2930:	mvn	r1, #0
    2934:	mov	r0, #0
    2938:	mov	r2, #4
    293c:	str	r1, [r7, #40]	; 0x28
    2940:	str	r0, [r7, #44]	; 0x2c
    2944:	str	r2, [r7, #48]	; 0x30
    2948:	b	2b24 <sfbpf_compile+0x7fc>
    294c:	mov	r0, #8
    2950:	mov	r1, #4
    2954:	b	28b0 <sfbpf_compile+0x588>
    2958:	mov	r0, #18
    295c:	mov	r1, #16
    2960:	b	28b0 <sfbpf_compile+0x588>
    2964:	mov	r0, #6
    2968:	mov	r1, #4
    296c:	b	2b10 <sfbpf_compile+0x7e8>
    2970:	mov	r0, #6
    2974:	b	28ac <sfbpf_compile+0x584>
    2978:	mov	r0, #13
    297c:	b	29f4 <sfbpf_compile+0x6cc>
    2980:	mov	r0, #24
    2984:	mvn	r1, #0
    2988:	b	28b0 <sfbpf_compile+0x588>
    298c:	mov	r0, #8
    2990:	mov	r1, #6
    2994:	b	28b0 <sfbpf_compile+0x588>
    2998:	mov	r0, #7
    299c:	mov	r1, #6
    29a0:	mov	r2, #8
    29a4:	mov	r3, #11
    29a8:	b	2c48 <sfbpf_compile+0x920>
    29ac:	mov	r0, #12
    29b0:	b	2864 <sfbpf_compile+0x53c>
    29b4:	mov	r0, #14
    29b8:	mov	r1, #12
    29bc:	mov	r2, #0
    29c0:	b	2898 <sfbpf_compile+0x570>
    29c4:	mov	r0, #14
    29c8:	b	29f4 <sfbpf_compile+0x6cc>
    29cc:	mov	r0, #16
    29d0:	mvn	r1, #0
    29d4:	b	28b0 <sfbpf_compile+0x588>
    29d8:	mov	r0, #24
    29dc:	mov	r1, #5
    29e0:	b	28b0 <sfbpf_compile+0x588>
    29e4:	mov	r0, #44	; 0x2c
    29e8:	mov	r1, #6
    29ec:	b	28b0 <sfbpf_compile+0x588>
    29f0:	mov	r0, #16
    29f4:	mov	r1, #8
    29f8:	str	r0, [r7, #40]	; 0x28
    29fc:	str	r0, [r7, #44]	; 0x2c
    2a00:	str	r1, [r7, #48]	; 0x30
    2a04:	mov	r0, #3
    2a08:	b	2b24 <sfbpf_compile+0x7fc>
    2a0c:	mov	r0, #12
    2a10:	mov	r1, #6
    2a14:	b	2b10 <sfbpf_compile+0x7e8>
    2a18:	mov	r0, #8
    2a1c:	b	2a30 <sfbpf_compile+0x708>
    2a20:	mvn	r0, #0
    2a24:	mov	r1, #12
    2a28:	b	2ad0 <sfbpf_compile+0x7a8>
    2a2c:	mov	r0, #4
    2a30:	str	r0, [r7, #40]	; 0x28
    2a34:	str	r0, [r7, #44]	; 0x2c
    2a38:	mov	r1, #0
    2a3c:	mov	r0, #10
    2a40:	str	r1, [r7, #48]	; 0x30
    2a44:	b	2b24 <sfbpf_compile+0x7fc>
    2a48:	mov	r0, #12
    2a4c:	mov	r1, #0
    2a50:	str	r1, [r7, #40]	; 0x28
    2a54:	str	r0, [r7, #44]	; 0x2c
    2a58:	str	r1, [r7, #48]	; 0x30
    2a5c:	str	r1, [r7, #56]	; 0x38
    2a60:	bl	24504 <sfbpf_parse>
    2a64:	ldr	r0, [r8]
    2a68:	cmp	r0, #0
    2a6c:	beq	2b38 <sfbpf_compile+0x810>
    2a70:	b	28d4 <sfbpf_compile+0x5ac>
    2a74:	mov	r0, #1
    2a78:	mov	r2, #0
    2a7c:	mov	r3, #4
    2a80:	mov	r6, #8
    2a84:	mov	r1, #2
    2a88:	mov	r5, #3
    2a8c:	strb	r0, [r7, #8]
    2a90:	strb	r2, [r7, #12]
    2a94:	mvn	r2, #0
    2a98:	str	r3, [r7, #40]	; 0x28
    2a9c:	str	r3, [r7, #44]	; 0x2c
    2aa0:	str	r6, [r7, #48]	; 0x30
    2aa4:	str	r2, [r7, #52]	; 0x34
    2aa8:	add	r2, r7, #60	; 0x3c
    2aac:	str	r5, [r7, #56]	; 0x38
    2ab0:	stm	r2, {r0, r1, r3}
    2ab4:	bl	24504 <sfbpf_parse>
    2ab8:	ldr	r0, [r8]
    2abc:	cmp	r0, #0
    2ac0:	beq	2b38 <sfbpf_compile+0x810>
    2ac4:	b	28d4 <sfbpf_compile+0x5ac>
    2ac8:	mvn	r0, #0
    2acc:	mov	r1, #6
    2ad0:	str	r1, [r7, #40]	; 0x28
    2ad4:	str	r0, [r7, #44]	; 0x2c
    2ad8:	str	r0, [r7, #48]	; 0x30
    2adc:	b	2b24 <sfbpf_compile+0x7fc>
    2ae0:	mvn	r0, #0
    2ae4:	mov	r1, #1
    2ae8:	str	r0, [r7, #40]	; 0x28
    2aec:	str	r0, [r7, #44]	; 0x2c
    2af0:	str	r0, [r7, #48]	; 0x30
    2af4:	str	r1, [r7, #52]	; 0x34
    2af8:	b	2b24 <sfbpf_compile+0x7fc>
    2afc:	mov	r0, #16
    2b00:	mov	r1, #14
    2b04:	b	28b0 <sfbpf_compile+0x588>
    2b08:	mov	r0, #24
    2b0c:	mov	r1, #1
    2b10:	mov	r2, #0
    2b14:	str	r1, [r7, #40]	; 0x28
    2b18:	str	r0, [r7, #44]	; 0x2c
    2b1c:	str	r2, [r7, #48]	; 0x30
    2b20:	mvn	r0, #0
    2b24:	str	r0, [r7, #56]	; 0x38
    2b28:	bl	24504 <sfbpf_parse>
    2b2c:	ldr	r0, [r8]
    2b30:	cmp	r0, #0
    2b34:	bne	28d4 <sfbpf_compile+0x5ac>
    2b38:	ldr	r0, [r7, #20]
    2b3c:	cmp	r0, #0
    2b40:	bne	2bcc <sfbpf_compile+0x8a4>
    2b44:	ldr	r6, [r7, #32]
    2b48:	ldr	r0, [r7, #92]	; 0x5c
    2b4c:	ldr	r4, [pc, #348]	; 2cb0 <sfbpf_compile+0x988>
    2b50:	add	r4, pc, r4
    2b54:	ldr	r5, [r4, r0, lsl #3]!
    2b58:	cmp	r5, #207	; 0xcf
    2b5c:	bhi	2ba8 <sfbpf_compile+0x880>
    2b60:	add	r1, r0, #1
    2b64:	cmp	r0, #15
    2b68:	str	r1, [r7, #92]	; 0x5c
    2b6c:	bge	2c7c <sfbpf_compile+0x954>
    2b70:	mov	r0, #1024	; 0x400
    2b74:	lsl	r5, r0, r1
    2b78:	mov	r0, r5
    2b7c:	bl	f1c <malloc@plt>
    2b80:	cmp	r0, #0
    2b84:	str	r0, [r4, #12]
    2b88:	beq	2c7c <sfbpf_compile+0x954>
    2b8c:	mov	r1, #0
    2b90:	mov	r2, r5
    2b94:	add	r4, r4, #8
    2b98:	bl	f88 <memset@plt>
    2b9c:	cmp	r5, #207	; 0xcf
    2ba0:	str	r5, [r4]
    2ba4:	bls	2c7c <sfbpf_compile+0x954>
    2ba8:	sub	r0, r5, #208	; 0xd0
    2bac:	str	r0, [r4]
    2bb0:	ldr	r1, [r4, #4]
    2bb4:	add	r0, r1, r0
    2bb8:	mov	r1, #6
    2bbc:	str	r6, [r0, #20]
    2bc0:	str	r1, [r0, #8]
    2bc4:	str	r0, [r0, #96]	; 0x60
    2bc8:	str	r0, [r7, #20]
    2bcc:	ldr	r1, [fp, #8]
    2bd0:	cmp	r1, #0
    2bd4:	beq	2c10 <sfbpf_compile+0x8e8>
    2bd8:	ldr	r1, [pc, #212]	; 2cb4 <sfbpf_compile+0x98c>
    2bdc:	ldr	r1, [pc, r1]
    2be0:	cmp	r1, #0
    2be4:	bne	2c10 <sfbpf_compile+0x8e8>
    2be8:	add	r0, r7, #20
    2bec:	bl	1f4c4 <sf_bpf_optimize>
    2bf0:	ldr	r0, [r7, #20]
    2bf4:	cmp	r0, #0
    2bf8:	beq	2c70 <sfbpf_compile+0x948>
    2bfc:	ldr	r1, [r0, #8]
    2c00:	cmp	r1, #6
    2c04:	ldreq	r1, [r0, #20]
    2c08:	cmpeq	r1, #0
    2c0c:	beq	2c70 <sfbpf_compile+0x948>
    2c10:	mov	r1, sp
    2c14:	bl	23368 <sf_icode_to_fcode>
    2c18:	ldr	r1, [sp]
    2c1c:	str	r1, [r9]
    2c20:	str	r0, [r9, #4]
    2c24:	bl	28614 <sf_lex_cleanup>
    2c28:	bl	2cc0 <freechunks>
    2c2c:	mov	r0, #0
    2c30:	sub	sp, fp, #24
    2c34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2c38:	mov	r0, #23
    2c3c:	mov	r1, #22
    2c40:	mov	r2, #24
    2c44:	mov	r3, #27
    2c48:	str	r1, [r7, #72]	; 0x48
    2c4c:	str	r0, [r7, #76]	; 0x4c
    2c50:	str	r2, [r7, #80]	; 0x50
    2c54:	str	r2, [r7, #84]	; 0x54
    2c58:	str	r3, [r7, #88]	; 0x58
    2c5c:	b	2854 <sfbpf_compile+0x52c>
    2c60:	ldr	r0, [pc, #68]	; 2cac <sfbpf_compile+0x984>
    2c64:	mov	r1, r5
    2c68:	add	r0, pc, r0
    2c6c:	bl	2204 <sf_bpf_error>
    2c70:	ldr	r0, [pc, #68]	; 2cbc <sfbpf_compile+0x994>
    2c74:	add	r0, pc, r0
    2c78:	bl	2204 <sf_bpf_error>
    2c7c:	ldr	r0, [pc, #52]	; 2cb8 <sfbpf_compile+0x990>
    2c80:	add	r0, pc, r0
    2c84:	bl	2204 <sf_bpf_error>
    2c88:	.word	0x00043d60
    2c8c:	.word	0x0004463c
    2c90:	.word	0x00044178
    2c94:	.word	0x00044128
    2c98:	.word	0x00043efc
    2c9c:	.word	0x0002644c
    2ca0:	.word	0x00043d80
    2ca4:	.word	0x000263a8
    2ca8:	.word	0x00043c38
    2cac:	.word	0x0002675c
    2cb0:	.word	0x000438d0
    2cb4:	.word	0x00043dbc
    2cb8:	.word	0x00026714
    2cbc:	.word	0x00025c0c

00002cc0 <freechunks>:
    2cc0:	push	{r4, r5, fp, lr}
    2cc4:	add	fp, sp, #8
    2cc8:	ldr	r0, [pc, #400]	; 2e60 <freechunks+0x1a0>
    2ccc:	mov	r5, #0
    2cd0:	add	r0, pc, r0
    2cd4:	str	r5, [r0, #92]	; 0x5c
    2cd8:	ldr	r4, [pc, #388]	; 2e64 <freechunks+0x1a4>
    2cdc:	add	r4, pc, r4
    2ce0:	ldr	r0, [r4, #4]
    2ce4:	cmp	r0, #0
    2ce8:	beq	2cf4 <freechunks+0x34>
    2cec:	bl	ea4 <free@plt>
    2cf0:	str	r5, [r4, #4]
    2cf4:	ldr	r0, [r4, #12]
    2cf8:	cmp	r0, #0
    2cfc:	beq	2d0c <freechunks+0x4c>
    2d00:	bl	ea4 <free@plt>
    2d04:	mov	r0, #0
    2d08:	str	r0, [r4, #12]
    2d0c:	ldr	r0, [r4, #20]
    2d10:	cmp	r0, #0
    2d14:	beq	2d24 <freechunks+0x64>
    2d18:	bl	ea4 <free@plt>
    2d1c:	mov	r0, #0
    2d20:	str	r0, [r4, #20]
    2d24:	ldr	r0, [r4, #28]
    2d28:	cmp	r0, #0
    2d2c:	beq	2d3c <freechunks+0x7c>
    2d30:	bl	ea4 <free@plt>
    2d34:	mov	r0, #0
    2d38:	str	r0, [r4, #28]
    2d3c:	ldr	r0, [r4, #36]	; 0x24
    2d40:	cmp	r0, #0
    2d44:	beq	2d54 <freechunks+0x94>
    2d48:	bl	ea4 <free@plt>
    2d4c:	mov	r0, #0
    2d50:	str	r0, [r4, #36]	; 0x24
    2d54:	ldr	r0, [r4, #44]	; 0x2c
    2d58:	cmp	r0, #0
    2d5c:	beq	2d6c <freechunks+0xac>
    2d60:	bl	ea4 <free@plt>
    2d64:	mov	r0, #0
    2d68:	str	r0, [r4, #44]	; 0x2c
    2d6c:	ldr	r0, [r4, #52]	; 0x34
    2d70:	cmp	r0, #0
    2d74:	beq	2d84 <freechunks+0xc4>
    2d78:	bl	ea4 <free@plt>
    2d7c:	mov	r0, #0
    2d80:	str	r0, [r4, #52]	; 0x34
    2d84:	ldr	r0, [r4, #60]	; 0x3c
    2d88:	cmp	r0, #0
    2d8c:	beq	2d9c <freechunks+0xdc>
    2d90:	bl	ea4 <free@plt>
    2d94:	mov	r0, #0
    2d98:	str	r0, [r4, #60]	; 0x3c
    2d9c:	ldr	r0, [r4, #68]	; 0x44
    2da0:	cmp	r0, #0
    2da4:	beq	2db4 <freechunks+0xf4>
    2da8:	bl	ea4 <free@plt>
    2dac:	mov	r0, #0
    2db0:	str	r0, [r4, #68]	; 0x44
    2db4:	ldr	r0, [r4, #76]	; 0x4c
    2db8:	cmp	r0, #0
    2dbc:	beq	2dcc <freechunks+0x10c>
    2dc0:	bl	ea4 <free@plt>
    2dc4:	mov	r0, #0
    2dc8:	str	r0, [r4, #76]	; 0x4c
    2dcc:	ldr	r0, [r4, #84]	; 0x54
    2dd0:	cmp	r0, #0
    2dd4:	beq	2de4 <freechunks+0x124>
    2dd8:	bl	ea4 <free@plt>
    2ddc:	mov	r0, #0
    2de0:	str	r0, [r4, #84]	; 0x54
    2de4:	ldr	r0, [r4, #92]	; 0x5c
    2de8:	cmp	r0, #0
    2dec:	beq	2dfc <freechunks+0x13c>
    2df0:	bl	ea4 <free@plt>
    2df4:	mov	r0, #0
    2df8:	str	r0, [r4, #92]	; 0x5c
    2dfc:	ldr	r0, [r4, #100]	; 0x64
    2e00:	cmp	r0, #0
    2e04:	beq	2e14 <freechunks+0x154>
    2e08:	bl	ea4 <free@plt>
    2e0c:	mov	r0, #0
    2e10:	str	r0, [r4, #100]	; 0x64
    2e14:	ldr	r0, [r4, #108]	; 0x6c
    2e18:	cmp	r0, #0
    2e1c:	beq	2e2c <freechunks+0x16c>
    2e20:	bl	ea4 <free@plt>
    2e24:	mov	r0, #0
    2e28:	str	r0, [r4, #108]	; 0x6c
    2e2c:	ldr	r0, [r4, #116]	; 0x74
    2e30:	cmp	r0, #0
    2e34:	beq	2e44 <freechunks+0x184>
    2e38:	bl	ea4 <free@plt>
    2e3c:	mov	r0, #0
    2e40:	str	r0, [r4, #116]	; 0x74
    2e44:	ldr	r0, [r4, #124]	; 0x7c
    2e48:	cmp	r0, #0
    2e4c:	popeq	{r4, r5, fp, pc}
    2e50:	bl	ea4 <free@plt>
    2e54:	mov	r0, #0
    2e58:	str	r0, [r4, #124]	; 0x7c
    2e5c:	pop	{r4, r5, fp, pc}
    2e60:	.word	0x00043810
    2e64:	.word	0x00043744

00002e68 <syntax>:
    2e68:	push	{fp, lr}
    2e6c:	mov	fp, sp
    2e70:	ldr	r0, [pc, #4]	; 2e7c <syntax+0x14>
    2e74:	add	r0, pc, r0
    2e78:	bl	2204 <sf_bpf_error>
    2e7c:	.word	0x0002652e

00002e80 <sfbpf_freecode>:
    2e80:	push	{r4, r5, fp, lr}
    2e84:	add	fp, sp, #8
    2e88:	mov	r5, #0
    2e8c:	mov	r4, r0
    2e90:	str	r5, [r0]
    2e94:	ldr	r0, [r0, #4]
    2e98:	cmp	r0, #0
    2e9c:	popeq	{r4, r5, fp, pc}
    2ea0:	bl	ea4 <free@plt>
    2ea4:	str	r5, [r4, #4]
    2ea8:	pop	{r4, r5, fp, pc}

00002eac <sf_finish_parse>:
    2eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2eb0:	add	fp, sp, #28
    2eb4:	sub	sp, sp, #36	; 0x24
    2eb8:	ldr	r8, [pc, #4048]	; 3e90 <sf_finish_parse+0xfe4>
    2ebc:	ldr	r7, [r0, #96]	; 0x60
    2ec0:	mov	r9, r0
    2ec4:	mov	ip, #0
    2ec8:	str	r0, [sp, #20]
    2ecc:	add	r8, pc, r8
    2ed0:	str	r7, [sp, #12]
    2ed4:	ldr	r3, [r8, #36]	; 0x24
    2ed8:	cmp	r3, #162	; 0xa2
    2edc:	str	r3, [sp, #16]
    2ee0:	bgt	2f6c <sf_finish_parse+0xc0>
    2ee4:	cmp	r3, #119	; 0x77
    2ee8:	beq	2ff4 <sf_finish_parse+0x148>
    2eec:	cmp	r3, #127	; 0x7f
    2ef0:	bne	3e24 <sf_finish_parse+0xf78>
    2ef4:	ldr	r9, [r8, #96]	; 0x60
    2ef8:	cmn	r9, #1
    2efc:	beq	30fc <sf_finish_parse+0x250>
    2f00:	ldr	r0, [r8, #92]	; 0x5c
    2f04:	ldr	sl, [pc, #4072]	; 3ef4 <sf_finish_parse+0x1048>
    2f08:	add	sl, pc, sl
    2f0c:	mov	r6, sl
    2f10:	ldr	r5, [r6, r0, lsl #3]!
    2f14:	cmp	r5, #19
    2f18:	bhi	3118 <sf_finish_parse+0x26c>
    2f1c:	add	r7, r0, #1
    2f20:	cmp	r0, #15
    2f24:	str	r7, [r8, #92]	; 0x5c
    2f28:	bge	4f34 <sf_finish_parse+0x2088>
    2f2c:	mov	r0, #1024	; 0x400
    2f30:	lsl	r5, r0, r7
    2f34:	mov	r0, r5
    2f38:	bl	f1c <malloc@plt>
    2f3c:	cmp	r0, #0
    2f40:	str	r0, [r6, #12]
    2f44:	beq	4f34 <sf_finish_parse+0x2088>
    2f48:	mov	r1, #0
    2f4c:	mov	r2, r5
    2f50:	add	r4, r6, #8
    2f54:	bl	f88 <memset@plt>
    2f58:	cmp	r5, #20
    2f5c:	str	r5, [r4]
    2f60:	bcc	4f34 <sf_finish_parse+0x2088>
    2f64:	add	r6, sl, r7, lsl #3
    2f68:	b	3120 <sf_finish_parse+0x274>
    2f6c:	cmp	r3, #163	; 0xa3
    2f70:	beq	3080 <sf_finish_parse+0x1d4>
    2f74:	cmp	r3, #192	; 0xc0
    2f78:	bne	3e24 <sf_finish_parse+0xf78>
    2f7c:	ldr	r9, [r8, #96]	; 0x60
    2f80:	cmn	r9, #1
    2f84:	beq	30fc <sf_finish_parse+0x250>
    2f88:	ldr	r0, [r8, #92]	; 0x5c
    2f8c:	ldr	sl, [pc, #4080]	; 3f84 <sf_finish_parse+0x10d8>
    2f90:	add	sl, pc, sl
    2f94:	mov	r6, sl
    2f98:	ldr	r5, [r6, r0, lsl #3]!
    2f9c:	cmp	r5, #19
    2fa0:	bhi	319c <sf_finish_parse+0x2f0>
    2fa4:	add	r7, r0, #1
    2fa8:	cmp	r0, #15
    2fac:	str	r7, [r8, #92]	; 0x5c
    2fb0:	bge	4f34 <sf_finish_parse+0x2088>
    2fb4:	mov	r0, #1024	; 0x400
    2fb8:	lsl	r5, r0, r7
    2fbc:	mov	r0, r5
    2fc0:	bl	f1c <malloc@plt>
    2fc4:	cmp	r0, #0
    2fc8:	str	r0, [r6, #12]
    2fcc:	beq	4f34 <sf_finish_parse+0x2088>
    2fd0:	mov	r1, #0
    2fd4:	mov	r2, r5
    2fd8:	add	r4, r6, #8
    2fdc:	bl	f88 <memset@plt>
    2fe0:	cmp	r5, #20
    2fe4:	str	r5, [r4]
    2fe8:	bcc	4f34 <sf_finish_parse+0x2088>
    2fec:	add	r6, sl, r7, lsl #3
    2ff0:	b	31a4 <sf_finish_parse+0x2f8>
    2ff4:	ldr	r0, [pc, #3980]	; 3f88 <sf_finish_parse+0x10dc>
    2ff8:	mov	r1, #1
    2ffc:	add	r0, pc, r0
    3000:	str	r1, [r0]
    3004:	ldr	r1, [r8, #96]	; 0x60
    3008:	cmn	r1, #1
    300c:	beq	3100 <sf_finish_parse+0x254>
    3010:	ldr	r0, [r8, #92]	; 0x5c
    3014:	ldr	sl, [pc, #3952]	; 3f8c <sf_finish_parse+0x10e0>
    3018:	str	r1, [sp, #24]
    301c:	add	sl, pc, sl
    3020:	mov	r4, sl
    3024:	ldr	r5, [r4, r0, lsl #3]!
    3028:	cmp	r5, #19
    302c:	bhi	3220 <sf_finish_parse+0x374>
    3030:	add	r9, r0, #1
    3034:	cmp	r0, #15
    3038:	str	r9, [r8, #92]	; 0x5c
    303c:	bge	4f34 <sf_finish_parse+0x2088>
    3040:	mov	r0, #1024	; 0x400
    3044:	lsl	r5, r0, r9
    3048:	mov	r0, r5
    304c:	bl	f1c <malloc@plt>
    3050:	cmp	r0, #0
    3054:	str	r0, [r4, #12]
    3058:	beq	4f34 <sf_finish_parse+0x2088>
    305c:	mov	r1, #0
    3060:	mov	r2, r5
    3064:	add	r6, r4, #8
    3068:	bl	f88 <memset@plt>
    306c:	cmp	r5, #20
    3070:	str	r5, [r6]
    3074:	bcc	4f34 <sf_finish_parse+0x2088>
    3078:	add	r4, sl, r9, lsl #3
    307c:	b	3228 <sf_finish_parse+0x37c>
    3080:	ldr	r9, [r8, #96]	; 0x60
    3084:	cmn	r9, #1
    3088:	beq	30fc <sf_finish_parse+0x250>
    308c:	ldr	r0, [r8, #92]	; 0x5c
    3090:	mov	r1, r8
    3094:	ldr	r8, [pc, #3972]	; 4020 <sf_finish_parse+0x1174>
    3098:	add	r8, pc, r8
    309c:	mov	r4, r8
    30a0:	ldr	r5, [r4, r0, lsl #3]!
    30a4:	cmp	r5, #19
    30a8:	bhi	32a4 <sf_finish_parse+0x3f8>
    30ac:	add	sl, r0, #1
    30b0:	cmp	r0, #15
    30b4:	str	sl, [r1, #92]	; 0x5c
    30b8:	bge	4f34 <sf_finish_parse+0x2088>
    30bc:	mov	r0, #1024	; 0x400
    30c0:	lsl	r5, r0, sl
    30c4:	mov	r0, r5
    30c8:	bl	f1c <malloc@plt>
    30cc:	cmp	r0, #0
    30d0:	str	r0, [r4, #12]
    30d4:	beq	4f34 <sf_finish_parse+0x2088>
    30d8:	mov	r1, #0
    30dc:	mov	r2, r5
    30e0:	add	r6, r4, #8
    30e4:	bl	f88 <memset@plt>
    30e8:	cmp	r5, #20
    30ec:	str	r5, [r6]
    30f0:	bcc	4f34 <sf_finish_parse+0x2088>
    30f4:	add	r4, r8, sl, lsl #3
    30f8:	b	32ac <sf_finish_parse+0x400>
    30fc:	ldr	r9, [sp, #20]
    3100:	mov	ip, #0
    3104:	ldr	r0, [r8, #100]	; 0x64
    3108:	cmn	r0, #1
    310c:	str	r0, [sp, #24]
    3110:	bne	3e64 <sf_finish_parse+0xfb8>
    3114:	b	4c94 <sf_finish_parse+0x1de8>
    3118:	mov	r7, r0
    311c:	mov	r4, r6
    3120:	sub	r0, r5, #20
    3124:	mov	r1, #48	; 0x30
    3128:	str	r0, [r4]
    312c:	ldr	ip, [r4, #4]
    3130:	str	r1, [ip, r0]!
    3134:	mov	r0, #3
    3138:	str	r0, [ip, #12]
    313c:	str	ip, [sp, #28]
    3140:	ldr	r5, [sl, r7, lsl #3]
    3144:	cmp	r5, #19
    3148:	bhi	3330 <sf_finish_parse+0x484>
    314c:	add	r4, r7, #1
    3150:	cmp	r7, #15
    3154:	str	r4, [r8, #92]	; 0x5c
    3158:	bge	4f34 <sf_finish_parse+0x2088>
    315c:	mov	r0, #1024	; 0x400
    3160:	lsl	r5, r0, r4
    3164:	mov	r0, r5
    3168:	bl	f1c <malloc@plt>
    316c:	cmp	r0, #0
    3170:	str	r0, [r6, #12]
    3174:	beq	4f34 <sf_finish_parse+0x2088>
    3178:	mov	r1, #0
    317c:	mov	r2, r5
    3180:	add	r6, r6, #8
    3184:	bl	f88 <memset@plt>
    3188:	ldr	ip, [sp, #28]
    318c:	cmp	r5, #19
    3190:	str	r5, [r6]
    3194:	bhi	3334 <sf_finish_parse+0x488>
    3198:	b	4f34 <sf_finish_parse+0x2088>
    319c:	mov	r7, r0
    31a0:	mov	r4, r6
    31a4:	sub	r0, r5, #20
    31a8:	mov	r1, #48	; 0x30
    31ac:	str	r0, [r4]
    31b0:	ldr	ip, [r4, #4]
    31b4:	str	r1, [ip, r0]!
    31b8:	mov	r0, #3
    31bc:	str	r0, [ip, #12]
    31c0:	str	ip, [sp, #28]
    31c4:	ldr	r5, [sl, r7, lsl #3]
    31c8:	cmp	r5, #19
    31cc:	bhi	33c8 <sf_finish_parse+0x51c>
    31d0:	add	r4, r7, #1
    31d4:	cmp	r7, #15
    31d8:	str	r4, [r8, #92]	; 0x5c
    31dc:	bge	4f34 <sf_finish_parse+0x2088>
    31e0:	mov	r0, #1024	; 0x400
    31e4:	lsl	r5, r0, r4
    31e8:	mov	r0, r5
    31ec:	bl	f1c <malloc@plt>
    31f0:	cmp	r0, #0
    31f4:	str	r0, [r6, #12]
    31f8:	beq	4f34 <sf_finish_parse+0x2088>
    31fc:	mov	r1, #0
    3200:	mov	r2, r5
    3204:	add	r6, r6, #8
    3208:	bl	f88 <memset@plt>
    320c:	ldr	ip, [sp, #28]
    3210:	cmp	r5, #19
    3214:	str	r5, [r6]
    3218:	bhi	33cc <sf_finish_parse+0x520>
    321c:	b	4f34 <sf_finish_parse+0x2088>
    3220:	mov	r9, r0
    3224:	mov	r6, r4
    3228:	sub	r0, r5, #20
    322c:	mov	r1, #32
    3230:	str	r0, [r6]
    3234:	ldr	ip, [r6, #4]
    3238:	str	r1, [ip, r0]!
    323c:	mov	r0, #0
    3240:	str	r0, [ip, #12]
    3244:	str	ip, [sp, #28]
    3248:	ldr	r5, [sl, r9, lsl #3]
    324c:	cmp	r5, #19
    3250:	bhi	3460 <sf_finish_parse+0x5b4>
    3254:	add	r6, r9, #1
    3258:	cmp	r9, #15
    325c:	str	r6, [r8, #92]	; 0x5c
    3260:	bge	4f34 <sf_finish_parse+0x2088>
    3264:	mov	r0, #1024	; 0x400
    3268:	lsl	r5, r0, r6
    326c:	mov	r0, r5
    3270:	bl	f1c <malloc@plt>
    3274:	cmp	r0, #0
    3278:	str	r0, [r4, #12]
    327c:	beq	4f34 <sf_finish_parse+0x2088>
    3280:	mov	r1, #0
    3284:	mov	r2, r5
    3288:	add	r4, r4, #8
    328c:	bl	f88 <memset@plt>
    3290:	ldr	ip, [sp, #28]
    3294:	cmp	r5, #19
    3298:	str	r5, [r4]
    329c:	bhi	3464 <sf_finish_parse+0x5b8>
    32a0:	b	4f34 <sf_finish_parse+0x2088>
    32a4:	mov	sl, r0
    32a8:	mov	r6, r4
    32ac:	sub	r0, r5, #20
    32b0:	mov	r1, #32
    32b4:	str	r0, [r6]
    32b8:	ldr	ip, [r6, #4]
    32bc:	str	r1, [ip, r0]!
    32c0:	mov	r0, #4
    32c4:	str	r0, [ip, #12]
    32c8:	ldr	r5, [r8, sl, lsl #3]
    32cc:	cmp	r5, #19
    32d0:	bhi	34fc <sf_finish_parse+0x650>
    32d4:	ldr	r0, [pc, #4008]	; 4284 <sf_finish_parse+0x13d8>
    32d8:	add	r6, sl, #1
    32dc:	cmp	sl, #15
    32e0:	add	r0, pc, r0
    32e4:	str	r6, [r0, #92]	; 0x5c
    32e8:	bge	4f34 <sf_finish_parse+0x2088>
    32ec:	mov	r0, #1024	; 0x400
    32f0:	mov	r7, ip
    32f4:	lsl	r5, r0, r6
    32f8:	mov	r0, r5
    32fc:	bl	f1c <malloc@plt>
    3300:	cmp	r0, #0
    3304:	str	r0, [r4, #12]
    3308:	beq	4f34 <sf_finish_parse+0x2088>
    330c:	mov	r1, #0
    3310:	mov	r2, r5
    3314:	add	r4, r4, #8
    3318:	bl	f88 <memset@plt>
    331c:	cmp	r5, #19
    3320:	mov	ip, r7
    3324:	str	r5, [r4]
    3328:	bhi	3500 <sf_finish_parse+0x654>
    332c:	b	4f34 <sf_finish_parse+0x2088>
    3330:	mov	r4, r7
    3334:	sub	r1, r5, #20
    3338:	mov	r2, #100	; 0x64
    333c:	str	r1, [r6]
    3340:	ldr	r0, [r6, #4]
    3344:	str	r2, [r0, r1]!
    3348:	mov	r2, ip
    334c:	mov	r1, r2
    3350:	ldr	r2, [r2, #16]
    3354:	cmp	r2, #0
    3358:	bne	334c <sf_finish_parse+0x4a0>
    335c:	str	r0, [r1, #16]
    3360:	mov	r1, #8
    3364:	mov	r6, sl
    3368:	str	r1, [r0, #12]
    336c:	ldr	r5, [r6, r4, lsl #3]!
    3370:	cmp	r5, #19
    3374:	bhi	35a0 <sf_finish_parse+0x6f4>
    3378:	add	r7, r4, #1
    337c:	cmp	r4, #15
    3380:	str	r7, [r8, #92]	; 0x5c
    3384:	bge	4f34 <sf_finish_parse+0x2088>
    3388:	mov	r0, #1024	; 0x400
    338c:	lsl	r5, r0, r7
    3390:	mov	r0, r5
    3394:	bl	f1c <malloc@plt>
    3398:	cmp	r0, #0
    339c:	str	r0, [r6, #12]
    33a0:	beq	4f34 <sf_finish_parse+0x2088>
    33a4:	mov	r1, #0
    33a8:	mov	r2, r5
    33ac:	add	r6, r6, #8
    33b0:	bl	f88 <memset@plt>
    33b4:	ldr	ip, [sp, #28]
    33b8:	cmp	r5, #19
    33bc:	str	r5, [r6]
    33c0:	bhi	35a4 <sf_finish_parse+0x6f8>
    33c4:	b	4f34 <sf_finish_parse+0x2088>
    33c8:	mov	r4, r7
    33cc:	sub	r1, r5, #20
    33d0:	mov	r2, #100	; 0x64
    33d4:	str	r1, [r6]
    33d8:	ldr	r0, [r6, #4]
    33dc:	str	r2, [r0, r1]!
    33e0:	mov	r2, ip
    33e4:	mov	r1, r2
    33e8:	ldr	r2, [r2, #16]
    33ec:	cmp	r2, #0
    33f0:	bne	33e4 <sf_finish_parse+0x538>
    33f4:	str	r0, [r1, #16]
    33f8:	mov	r1, #8
    33fc:	mov	r6, sl
    3400:	str	r1, [r0, #12]
    3404:	ldr	r5, [r6, r4, lsl #3]!
    3408:	cmp	r5, #19
    340c:	bhi	3630 <sf_finish_parse+0x784>
    3410:	add	r7, r4, #1
    3414:	cmp	r4, #15
    3418:	str	r7, [r8, #92]	; 0x5c
    341c:	bge	4f34 <sf_finish_parse+0x2088>
    3420:	mov	r0, #1024	; 0x400
    3424:	lsl	r5, r0, r7
    3428:	mov	r0, r5
    342c:	bl	f1c <malloc@plt>
    3430:	cmp	r0, #0
    3434:	str	r0, [r6, #12]
    3438:	beq	4f34 <sf_finish_parse+0x2088>
    343c:	mov	r1, #0
    3440:	mov	r2, r5
    3444:	add	r6, r6, #8
    3448:	bl	f88 <memset@plt>
    344c:	ldr	ip, [sp, #28]
    3450:	cmp	r5, #19
    3454:	str	r5, [r6]
    3458:	bhi	3634 <sf_finish_parse+0x788>
    345c:	b	4f34 <sf_finish_parse+0x2088>
    3460:	mov	r6, r9
    3464:	sub	r1, r5, #20
    3468:	mov	r2, #84	; 0x54
    346c:	str	r1, [r4]
    3470:	ldr	r0, [r4, #4]
    3474:	str	r2, [r0, r1]!
    3478:	movw	r1, #61440	; 0xf000
    347c:	mov	r2, ip
    3480:	movt	r1, #65535	; 0xffff
    3484:	str	r1, [r0, #12]
    3488:	mov	r1, r2
    348c:	ldr	r2, [r2, #16]
    3490:	cmp	r2, #0
    3494:	bne	3488 <sf_finish_parse+0x5dc>
    3498:	str	r0, [r1, #16]
    349c:	mov	r4, sl
    34a0:	ldr	r5, [r4, r6, lsl #3]!
    34a4:	cmp	r5, #19
    34a8:	bhi	36c0 <sf_finish_parse+0x814>
    34ac:	add	r9, r6, #1
    34b0:	cmp	r6, #15
    34b4:	str	r9, [r8, #92]	; 0x5c
    34b8:	bge	4f34 <sf_finish_parse+0x2088>
    34bc:	mov	r0, #1024	; 0x400
    34c0:	lsl	r5, r0, r9
    34c4:	mov	r0, r5
    34c8:	bl	f1c <malloc@plt>
    34cc:	cmp	r0, #0
    34d0:	str	r0, [r4, #12]
    34d4:	beq	4f34 <sf_finish_parse+0x2088>
    34d8:	mov	r1, #0
    34dc:	mov	r2, r5
    34e0:	add	r4, r4, #8
    34e4:	bl	f88 <memset@plt>
    34e8:	ldr	ip, [sp, #28]
    34ec:	cmp	r5, #19
    34f0:	str	r5, [r4]
    34f4:	bhi	36c4 <sf_finish_parse+0x818>
    34f8:	b	4f34 <sf_finish_parse+0x2088>
    34fc:	mov	r6, sl
    3500:	sub	r1, r5, #20
    3504:	mov	r2, #2
    3508:	str	r1, [r4]
    350c:	ldr	r0, [r4, #4]
    3510:	str	r2, [r0, r1]!
    3514:	mov	r2, ip
    3518:	str	r9, [r0, #12]
    351c:	mov	r1, r2
    3520:	ldr	r2, [r2, #16]
    3524:	cmp	r2, #0
    3528:	bne	351c <sf_finish_parse+0x670>
    352c:	str	r0, [r1, #16]
    3530:	ldr	r9, [sp, #20]
    3534:	ldr	r5, [r8, r6, lsl #3]!
    3538:	cmp	r5, #19
    353c:	bhi	3760 <sf_finish_parse+0x8b4>
    3540:	ldr	r1, [pc, #4056]	; 4520 <sf_finish_parse+0x1674>
    3544:	add	r0, r6, #1
    3548:	cmp	r6, #15
    354c:	add	r1, pc, r1
    3550:	str	r0, [r1, #92]	; 0x5c
    3554:	bge	4f34 <sf_finish_parse+0x2088>
    3558:	mov	r1, #1024	; 0x400
    355c:	mov	r4, ip
    3560:	lsl	r5, r1, r0
    3564:	mov	r0, r5
    3568:	bl	f1c <malloc@plt>
    356c:	ldr	r7, [sp, #12]
    3570:	cmp	r0, #0
    3574:	str	r0, [r8, #12]
    3578:	beq	4f34 <sf_finish_parse+0x2088>
    357c:	mov	r1, #0
    3580:	mov	r2, r5
    3584:	add	r8, r8, #8
    3588:	bl	f88 <memset@plt>
    358c:	cmp	r5, #19
    3590:	mov	ip, r4
    3594:	str	r5, [r8]
    3598:	bhi	3764 <sf_finish_parse+0x8b8>
    359c:	b	4f34 <sf_finish_parse+0x2088>
    35a0:	mov	r7, r4
    35a4:	sub	r1, r5, #20
    35a8:	mov	r2, #7
    35ac:	str	r1, [r6]
    35b0:	ldr	r0, [r6, #4]
    35b4:	str	r2, [r0, r1]!
    35b8:	mov	r2, ip
    35bc:	mov	r1, r2
    35c0:	ldr	r2, [r2, #16]
    35c4:	cmp	r2, #0
    35c8:	bne	35bc <sf_finish_parse+0x710>
    35cc:	str	r0, [r1, #16]
    35d0:	mov	r4, sl
    35d4:	ldr	r5, [r4, r7, lsl #3]!
    35d8:	cmp	r5, #19
    35dc:	bhi	379c <sf_finish_parse+0x8f0>
    35e0:	add	r6, r7, #1
    35e4:	cmp	r7, #15
    35e8:	str	r6, [r8, #92]	; 0x5c
    35ec:	bge	4f34 <sf_finish_parse+0x2088>
    35f0:	mov	r0, #1024	; 0x400
    35f4:	lsl	r5, r0, r6
    35f8:	mov	r0, r5
    35fc:	bl	f1c <malloc@plt>
    3600:	cmp	r0, #0
    3604:	str	r0, [r4, #12]
    3608:	beq	4f34 <sf_finish_parse+0x2088>
    360c:	mov	r1, #0
    3610:	mov	r2, r5
    3614:	add	r4, r4, #8
    3618:	bl	f88 <memset@plt>
    361c:	ldr	ip, [sp, #28]
    3620:	cmp	r5, #19
    3624:	str	r5, [r4]
    3628:	bhi	37a0 <sf_finish_parse+0x8f4>
    362c:	b	4f34 <sf_finish_parse+0x2088>
    3630:	mov	r7, r4
    3634:	sub	r1, r5, #20
    3638:	mov	r2, #7
    363c:	str	r1, [r6]
    3640:	ldr	r0, [r6, #4]
    3644:	str	r2, [r0, r1]!
    3648:	mov	r2, ip
    364c:	mov	r1, r2
    3650:	ldr	r2, [r2, #16]
    3654:	cmp	r2, #0
    3658:	bne	364c <sf_finish_parse+0x7a0>
    365c:	str	r0, [r1, #16]
    3660:	mov	r4, sl
    3664:	ldr	r5, [r4, r7, lsl #3]!
    3668:	cmp	r5, #19
    366c:	bhi	3834 <sf_finish_parse+0x988>
    3670:	add	r6, r7, #1
    3674:	cmp	r7, #15
    3678:	str	r6, [r8, #92]	; 0x5c
    367c:	bge	4f34 <sf_finish_parse+0x2088>
    3680:	mov	r0, #1024	; 0x400
    3684:	lsl	r5, r0, r6
    3688:	mov	r0, r5
    368c:	bl	f1c <malloc@plt>
    3690:	cmp	r0, #0
    3694:	str	r0, [r4, #12]
    3698:	beq	4f34 <sf_finish_parse+0x2088>
    369c:	mov	r1, #0
    36a0:	mov	r2, r5
    36a4:	add	r4, r4, #8
    36a8:	bl	f88 <memset@plt>
    36ac:	ldr	ip, [sp, #28]
    36b0:	cmp	r5, #19
    36b4:	str	r5, [r4]
    36b8:	bhi	3838 <sf_finish_parse+0x98c>
    36bc:	b	4f34 <sf_finish_parse+0x2088>
    36c0:	mov	r9, r6
    36c4:	sub	r0, r5, #20
    36c8:	mov	r1, #21
    36cc:	str	r0, [r4]
    36d0:	ldr	sl, [r4, #4]
    36d4:	str	r1, [sl, r0]!
    36d8:	movw	r0, #4096	; 0x1000
    36dc:	mov	r1, ip
    36e0:	movt	r0, #32801	; 0x8021
    36e4:	str	r0, [sl, #12]
    36e8:	mov	r0, r1
    36ec:	ldr	r1, [r1, #16]
    36f0:	cmp	r1, #0
    36f4:	bne	36e8 <sf_finish_parse+0x83c>
    36f8:	str	sl, [r0, #16]
    36fc:	ldr	r4, [pc, #3972]	; 4688 <sf_finish_parse+0x17dc>
    3700:	add	r4, pc, r4
    3704:	ldr	r5, [r4, r9, lsl #3]!
    3708:	cmp	r5, #19
    370c:	bhi	38cc <sf_finish_parse+0xa20>
    3710:	add	r7, r9, #1
    3714:	cmp	r9, #15
    3718:	str	r7, [r8, #92]	; 0x5c
    371c:	bge	4f34 <sf_finish_parse+0x2088>
    3720:	mov	r0, #1024	; 0x400
    3724:	lsl	r5, r0, r7
    3728:	mov	r0, r5
    372c:	bl	f1c <malloc@plt>
    3730:	cmp	r0, #0
    3734:	str	r0, [r4, #12]
    3738:	beq	4f34 <sf_finish_parse+0x2088>
    373c:	mov	r1, #0
    3740:	mov	r2, r5
    3744:	add	r4, r4, #8
    3748:	bl	f88 <memset@plt>
    374c:	ldr	ip, [sp, #28]
    3750:	cmp	r5, #19
    3754:	str	r5, [r4]
    3758:	bhi	38d0 <sf_finish_parse+0xa24>
    375c:	b	4f34 <sf_finish_parse+0x2088>
    3760:	ldr	r7, [sp, #12]
    3764:	sub	r1, r5, #20
    3768:	mov	r2, #7
    376c:	str	r1, [r8]
    3770:	ldr	r0, [r8, #4]
    3774:	str	r2, [r0, r1]!
    3778:	mov	r2, ip
    377c:	mov	r1, r2
    3780:	ldr	r2, [r2, #16]
    3784:	cmp	r2, #0
    3788:	bne	377c <sf_finish_parse+0x8d0>
    378c:	ldr	r8, [pc, #4008]	; 473c <sf_finish_parse+0x1890>
    3790:	ldr	r3, [sp, #16]
    3794:	add	r8, pc, r8
    3798:	b	3e20 <sf_finish_parse+0xf74>
    379c:	mov	r6, r7
    37a0:	sub	r1, r5, #20
    37a4:	mov	r2, #48	; 0x30
    37a8:	str	r1, [r4]
    37ac:	ldr	r0, [r4, #4]
    37b0:	str	r2, [r0, r1]!
    37b4:	mov	r2, ip
    37b8:	mov	r1, r2
    37bc:	ldr	r2, [r2, #16]
    37c0:	cmp	r2, #0
    37c4:	bne	37b8 <sf_finish_parse+0x90c>
    37c8:	str	r0, [r1, #16]
    37cc:	mov	r1, #2
    37d0:	mov	r7, sl
    37d4:	str	r1, [r0, #12]
    37d8:	ldr	r5, [r7, r6, lsl #3]!
    37dc:	cmp	r5, #19
    37e0:	bhi	396c <sf_finish_parse+0xac0>
    37e4:	add	r4, r6, #1
    37e8:	cmp	r6, #15
    37ec:	str	r4, [r8, #92]	; 0x5c
    37f0:	bge	4f34 <sf_finish_parse+0x2088>
    37f4:	mov	r0, #1024	; 0x400
    37f8:	lsl	r5, r0, r4
    37fc:	mov	r0, r5
    3800:	bl	f1c <malloc@plt>
    3804:	cmp	r0, #0
    3808:	str	r0, [r7, #12]
    380c:	beq	4f34 <sf_finish_parse+0x2088>
    3810:	mov	r1, #0
    3814:	mov	r2, r5
    3818:	add	r7, r7, #8
    381c:	bl	f88 <memset@plt>
    3820:	ldr	ip, [sp, #28]
    3824:	cmp	r5, #19
    3828:	str	r5, [r7]
    382c:	bhi	3970 <sf_finish_parse+0xac4>
    3830:	b	4f34 <sf_finish_parse+0x2088>
    3834:	mov	r6, r7
    3838:	sub	r1, r5, #20
    383c:	mov	r2, #48	; 0x30
    3840:	str	r1, [r4]
    3844:	ldr	r0, [r4, #4]
    3848:	str	r2, [r0, r1]!
    384c:	mov	r2, ip
    3850:	mov	r1, r2
    3854:	ldr	r2, [r2, #16]
    3858:	cmp	r2, #0
    385c:	bne	3850 <sf_finish_parse+0x9a4>
    3860:	str	r0, [r1, #16]
    3864:	mov	r1, #2
    3868:	mov	r7, sl
    386c:	str	r1, [r0, #12]
    3870:	ldr	r5, [r7, r6, lsl #3]!
    3874:	cmp	r5, #19
    3878:	bhi	39fc <sf_finish_parse+0xb50>
    387c:	add	r4, r6, #1
    3880:	cmp	r6, #15
    3884:	str	r4, [r8, #92]	; 0x5c
    3888:	bge	4f34 <sf_finish_parse+0x2088>
    388c:	mov	r0, #1024	; 0x400
    3890:	lsl	r5, r0, r4
    3894:	mov	r0, r5
    3898:	bl	f1c <malloc@plt>
    389c:	cmp	r0, #0
    38a0:	str	r0, [r7, #12]
    38a4:	beq	4f34 <sf_finish_parse+0x2088>
    38a8:	mov	r1, #0
    38ac:	mov	r2, r5
    38b0:	add	r7, r7, #8
    38b4:	bl	f88 <memset@plt>
    38b8:	ldr	ip, [sp, #28]
    38bc:	cmp	r5, #19
    38c0:	str	r5, [r7]
    38c4:	bhi	3a00 <sf_finish_parse+0xb54>
    38c8:	b	4f34 <sf_finish_parse+0x2088>
    38cc:	mov	r7, r9
    38d0:	sub	r1, r5, #20
    38d4:	mov	r2, #32
    38d8:	str	r1, [r4]
    38dc:	ldr	r0, [r4, #4]
    38e0:	str	r2, [r0, r1]!
    38e4:	mov	r1, #4
    38e8:	mov	r2, ip
    38ec:	str	r1, [r0, #12]
    38f0:	mov	r1, r2
    38f4:	ldr	r2, [r2, #16]
    38f8:	cmp	r2, #0
    38fc:	bne	38f0 <sf_finish_parse+0xa44>
    3900:	str	r0, [r1, #16]
    3904:	str	r0, [sl, #4]
    3908:	ldr	r4, [pc, #3952]	; 4880 <sf_finish_parse+0x19d4>
    390c:	add	r4, pc, r4
    3910:	ldr	r5, [r4, r7, lsl #3]!
    3914:	cmp	r5, #19
    3918:	bhi	3a8c <sf_finish_parse+0xbe0>
    391c:	add	r6, r7, #1
    3920:	cmp	r7, #15
    3924:	str	r6, [r8, #92]	; 0x5c
    3928:	bge	4f34 <sf_finish_parse+0x2088>
    392c:	mov	r0, #1024	; 0x400
    3930:	lsl	r5, r0, r6
    3934:	mov	r0, r5
    3938:	bl	f1c <malloc@plt>
    393c:	cmp	r0, #0
    3940:	str	r0, [r4, #12]
    3944:	beq	4f34 <sf_finish_parse+0x2088>
    3948:	mov	r1, #0
    394c:	mov	r2, r5
    3950:	add	r4, r4, #8
    3954:	bl	f88 <memset@plt>
    3958:	ldr	ip, [sp, #28]
    395c:	cmp	r5, #19
    3960:	str	r5, [r4]
    3964:	bhi	3a90 <sf_finish_parse+0xbe4>
    3968:	b	4f34 <sf_finish_parse+0x2088>
    396c:	mov	r4, r6
    3970:	sub	r1, r5, #20
    3974:	mov	r2, #76	; 0x4c
    3978:	str	r1, [r7]
    397c:	ldr	r0, [r7, #4]
    3980:	str	r2, [r0, r1]!
    3984:	mov	r2, ip
    3988:	mov	r1, r2
    398c:	ldr	r2, [r2, #16]
    3990:	cmp	r2, #0
    3994:	bne	3988 <sf_finish_parse+0xadc>
    3998:	str	r0, [r1, #16]
    399c:	mov	r7, sl
    39a0:	ldr	r5, [r7, r4, lsl #3]!
    39a4:	cmp	r5, #19
    39a8:	bhi	3b28 <sf_finish_parse+0xc7c>
    39ac:	add	r6, r4, #1
    39b0:	cmp	r4, #15
    39b4:	str	r6, [r8, #92]	; 0x5c
    39b8:	bge	4f34 <sf_finish_parse+0x2088>
    39bc:	mov	r0, #1024	; 0x400
    39c0:	lsl	r5, r0, r6
    39c4:	mov	r0, r5
    39c8:	bl	f1c <malloc@plt>
    39cc:	cmp	r0, #0
    39d0:	str	r0, [r7, #12]
    39d4:	beq	4f34 <sf_finish_parse+0x2088>
    39d8:	mov	r1, #0
    39dc:	mov	r2, r5
    39e0:	add	r7, r7, #8
    39e4:	bl	f88 <memset@plt>
    39e8:	ldr	ip, [sp, #28]
    39ec:	cmp	r5, #19
    39f0:	str	r5, [r7]
    39f4:	bhi	3b2c <sf_finish_parse+0xc80>
    39f8:	b	4f34 <sf_finish_parse+0x2088>
    39fc:	mov	r4, r6
    3a00:	sub	r1, r5, #20
    3a04:	mov	r2, #76	; 0x4c
    3a08:	str	r1, [r7]
    3a0c:	ldr	r0, [r7, #4]
    3a10:	str	r2, [r0, r1]!
    3a14:	mov	r2, ip
    3a18:	mov	r1, r2
    3a1c:	ldr	r2, [r2, #16]
    3a20:	cmp	r2, #0
    3a24:	bne	3a18 <sf_finish_parse+0xb6c>
    3a28:	str	r0, [r1, #16]
    3a2c:	mov	r7, sl
    3a30:	ldr	r5, [r7, r4, lsl #3]!
    3a34:	cmp	r5, #19
    3a38:	bhi	3be4 <sf_finish_parse+0xd38>
    3a3c:	add	r6, r4, #1
    3a40:	cmp	r4, #15
    3a44:	str	r6, [r8, #92]	; 0x5c
    3a48:	bge	4f34 <sf_finish_parse+0x2088>
    3a4c:	mov	r0, #1024	; 0x400
    3a50:	lsl	r5, r0, r6
    3a54:	mov	r0, r5
    3a58:	bl	f1c <malloc@plt>
    3a5c:	cmp	r0, #0
    3a60:	str	r0, [r7, #12]
    3a64:	beq	4f34 <sf_finish_parse+0x2088>
    3a68:	mov	r1, #0
    3a6c:	mov	r2, r5
    3a70:	add	r7, r7, #8
    3a74:	bl	f88 <memset@plt>
    3a78:	ldr	ip, [sp, #28]
    3a7c:	cmp	r5, #19
    3a80:	str	r5, [r7]
    3a84:	bhi	3be8 <sf_finish_parse+0xd3c>
    3a88:	b	4f34 <sf_finish_parse+0x2088>
    3a8c:	mov	r6, r7
    3a90:	sub	r0, r5, #20
    3a94:	mov	r1, #5
    3a98:	str	r0, [r4]
    3a9c:	ldr	r9, [r4, #4]
    3aa0:	str	r1, [r9, r0]!
    3aa4:	mov	r0, #1
    3aa8:	mov	r1, ip
    3aac:	str	r0, [r9, #12]
    3ab0:	mov	r0, r1
    3ab4:	ldr	r1, [r1, #16]
    3ab8:	cmp	r1, #0
    3abc:	bne	3ab0 <sf_finish_parse+0xc04>
    3ac0:	str	r9, [r0, #16]
    3ac4:	ldr	r4, [pc, #3976]	; 4a54 <sf_finish_parse+0x1ba8>
    3ac8:	add	r4, pc, r4
    3acc:	ldr	r5, [r4, r6, lsl #3]!
    3ad0:	cmp	r5, #19
    3ad4:	bhi	3ca8 <sf_finish_parse+0xdfc>
    3ad8:	add	r7, r6, #1
    3adc:	cmp	r6, #15
    3ae0:	str	r7, [r8, #92]	; 0x5c
    3ae4:	bge	4f34 <sf_finish_parse+0x2088>
    3ae8:	mov	r0, #1024	; 0x400
    3aec:	lsl	r5, r0, r7
    3af0:	mov	r0, r5
    3af4:	bl	f1c <malloc@plt>
    3af8:	cmp	r0, #0
    3afc:	str	r0, [r4, #12]
    3b00:	beq	4f34 <sf_finish_parse+0x2088>
    3b04:	mov	r1, #0
    3b08:	mov	r2, r5
    3b0c:	add	r4, r4, #8
    3b10:	bl	f88 <memset@plt>
    3b14:	ldr	ip, [sp, #28]
    3b18:	cmp	r5, #19
    3b1c:	str	r5, [r4]
    3b20:	bhi	3cac <sf_finish_parse+0xe00>
    3b24:	b	4f34 <sf_finish_parse+0x2088>
    3b28:	mov	r6, r4
    3b2c:	sub	r1, r5, #20
    3b30:	mov	r2, #2
    3b34:	str	r1, [r7]
    3b38:	ldr	r0, [r7, #4]
    3b3c:	str	r2, [r0, r1]!
    3b40:	mov	r2, ip
    3b44:	str	r9, [r0, #12]
    3b48:	mov	r1, r2
    3b4c:	ldr	r2, [r2, #16]
    3b50:	cmp	r2, #0
    3b54:	bne	3b48 <sf_finish_parse+0xc9c>
    3b58:	str	r0, [r1, #16]
    3b5c:	ldr	r9, [sp, #20]
    3b60:	ldr	r5, [sl, r6, lsl #3]!
    3b64:	cmp	r5, #19
    3b68:	bhi	3bb8 <sf_finish_parse+0xd0c>
    3b6c:	add	r0, r6, #1
    3b70:	cmp	r6, #15
    3b74:	str	r0, [r8, #92]	; 0x5c
    3b78:	bge	4f34 <sf_finish_parse+0x2088>
    3b7c:	mov	r1, #1024	; 0x400
    3b80:	lsl	r5, r1, r0
    3b84:	mov	r0, r5
    3b88:	bl	f1c <malloc@plt>
    3b8c:	cmp	r0, #0
    3b90:	str	r0, [sl, #12]
    3b94:	beq	4f34 <sf_finish_parse+0x2088>
    3b98:	mov	r1, #0
    3b9c:	mov	r2, r5
    3ba0:	add	sl, sl, #8
    3ba4:	bl	f88 <memset@plt>
    3ba8:	ldr	ip, [sp, #28]
    3bac:	cmp	r5, #19
    3bb0:	str	r5, [sl]
    3bb4:	bls	4f34 <sf_finish_parse+0x2088>
    3bb8:	sub	r1, r5, #20
    3bbc:	mov	r2, #7
    3bc0:	str	r1, [sl]
    3bc4:	ldr	r0, [sl, #4]
    3bc8:	str	r2, [r0, r1]!
    3bcc:	mov	r2, ip
    3bd0:	mov	r1, r2
    3bd4:	ldr	r2, [r2, #16]
    3bd8:	cmp	r2, #0
    3bdc:	bne	3bd0 <sf_finish_parse+0xd24>
    3be0:	b	3c9c <sf_finish_parse+0xdf0>
    3be4:	mov	r6, r4
    3be8:	sub	r1, r5, #20
    3bec:	mov	r2, #2
    3bf0:	str	r1, [r7]
    3bf4:	ldr	r0, [r7, #4]
    3bf8:	str	r2, [r0, r1]!
    3bfc:	mov	r2, ip
    3c00:	str	r9, [r0, #12]
    3c04:	mov	r1, r2
    3c08:	ldr	r2, [r2, #16]
    3c0c:	cmp	r2, #0
    3c10:	bne	3c04 <sf_finish_parse+0xd58>
    3c14:	str	r0, [r1, #16]
    3c18:	ldr	r9, [sp, #20]
    3c1c:	ldr	r5, [sl, r6, lsl #3]!
    3c20:	cmp	r5, #19
    3c24:	bhi	3c74 <sf_finish_parse+0xdc8>
    3c28:	add	r0, r6, #1
    3c2c:	cmp	r6, #15
    3c30:	str	r0, [r8, #92]	; 0x5c
    3c34:	bge	4f34 <sf_finish_parse+0x2088>
    3c38:	mov	r1, #1024	; 0x400
    3c3c:	lsl	r5, r1, r0
    3c40:	mov	r0, r5
    3c44:	bl	f1c <malloc@plt>
    3c48:	cmp	r0, #0
    3c4c:	str	r0, [sl, #12]
    3c50:	beq	4f34 <sf_finish_parse+0x2088>
    3c54:	mov	r1, #0
    3c58:	mov	r2, r5
    3c5c:	add	sl, sl, #8
    3c60:	bl	f88 <memset@plt>
    3c64:	ldr	ip, [sp, #28]
    3c68:	cmp	r5, #19
    3c6c:	str	r5, [sl]
    3c70:	bls	4f34 <sf_finish_parse+0x2088>
    3c74:	sub	r1, r5, #20
    3c78:	mov	r2, #7
    3c7c:	str	r1, [sl]
    3c80:	ldr	r0, [sl, #4]
    3c84:	str	r2, [r0, r1]!
    3c88:	mov	r2, ip
    3c8c:	mov	r1, r2
    3c90:	ldr	r2, [r2, #16]
    3c94:	cmp	r2, #0
    3c98:	bne	3c8c <sf_finish_parse+0xde0>
    3c9c:	ldr	r3, [sp, #16]
    3ca0:	ldr	r7, [sp, #12]
    3ca4:	b	3e20 <sf_finish_parse+0xf74>
    3ca8:	mov	r7, r6
    3cac:	sub	r1, r5, #20
    3cb0:	mov	r2, #0
    3cb4:	str	r1, [r4]
    3cb8:	ldr	r0, [r4, #4]
    3cbc:	str	r2, [r0, r1]!
    3cc0:	mov	r1, #144	; 0x90
    3cc4:	mov	r2, ip
    3cc8:	str	r1, [r0, #12]
    3ccc:	mov	r1, r2
    3cd0:	ldr	r2, [r2, #16]
    3cd4:	cmp	r2, #0
    3cd8:	bne	3ccc <sf_finish_parse+0xe20>
    3cdc:	str	r0, [r1, #16]
    3ce0:	str	r0, [sl, #8]
    3ce4:	ldr	r6, [pc, #3756]	; 4b98 <sf_finish_parse+0x1cec>
    3ce8:	add	r6, pc, r6
    3cec:	mov	r4, r6
    3cf0:	ldr	r5, [r4, r7, lsl #3]!
    3cf4:	cmp	r5, #19
    3cf8:	bhi	3d50 <sf_finish_parse+0xea4>
    3cfc:	add	sl, r7, #1
    3d00:	cmp	r7, #15
    3d04:	ldr	r7, [sp, #12]
    3d08:	str	sl, [r8, #92]	; 0x5c
    3d0c:	bge	4f34 <sf_finish_parse+0x2088>
    3d10:	mov	r0, #1024	; 0x400
    3d14:	lsl	r5, r0, sl
    3d18:	mov	r0, r5
    3d1c:	bl	f1c <malloc@plt>
    3d20:	cmp	r0, #0
    3d24:	str	r0, [r4, #12]
    3d28:	beq	4f34 <sf_finish_parse+0x2088>
    3d2c:	mov	r1, #0
    3d30:	mov	r2, r5
    3d34:	add	r4, r4, #8
    3d38:	bl	f88 <memset@plt>
    3d3c:	ldr	ip, [sp, #28]
    3d40:	cmp	r5, #19
    3d44:	str	r5, [r4]
    3d48:	bhi	3d58 <sf_finish_parse+0xeac>
    3d4c:	b	4f34 <sf_finish_parse+0x2088>
    3d50:	mov	sl, r7
    3d54:	ldr	r7, [sp, #12]
    3d58:	sub	r1, r5, #20
    3d5c:	mov	r2, #2
    3d60:	str	r1, [r4]
    3d64:	ldr	r0, [r4, #4]
    3d68:	str	r2, [r0, r1]!
    3d6c:	mov	r2, ip
    3d70:	ldr	r1, [sp, #24]
    3d74:	str	r1, [r0, #12]
    3d78:	mov	r1, r2
    3d7c:	ldr	r2, [r2, #16]
    3d80:	cmp	r2, #0
    3d84:	bne	3d78 <sf_finish_parse+0xecc>
    3d88:	str	r0, [r1, #16]
    3d8c:	str	r0, [r9, #8]
    3d90:	ldr	r5, [r6, sl, lsl #3]!
    3d94:	cmp	r5, #19
    3d98:	bhi	3df0 <sf_finish_parse+0xf44>
    3d9c:	ldr	r9, [sp, #20]
    3da0:	add	r0, sl, #1
    3da4:	cmp	sl, #15
    3da8:	str	r0, [r8, #92]	; 0x5c
    3dac:	bge	4f34 <sf_finish_parse+0x2088>
    3db0:	mov	r1, #1024	; 0x400
    3db4:	lsl	r5, r1, r0
    3db8:	mov	r0, r5
    3dbc:	bl	f1c <malloc@plt>
    3dc0:	cmp	r0, #0
    3dc4:	str	r0, [r6, #12]
    3dc8:	beq	4f34 <sf_finish_parse+0x2088>
    3dcc:	mov	r1, #0
    3dd0:	mov	r2, r5
    3dd4:	add	r6, r6, #8
    3dd8:	bl	f88 <memset@plt>
    3ddc:	ldr	ip, [sp, #28]
    3de0:	cmp	r5, #19
    3de4:	str	r5, [r6]
    3de8:	bhi	3df4 <sf_finish_parse+0xf48>
    3dec:	b	4f34 <sf_finish_parse+0x2088>
    3df0:	ldr	r9, [sp, #20]
    3df4:	sub	r1, r5, #20
    3df8:	mov	r2, #7
    3dfc:	str	r1, [r6]
    3e00:	ldr	r0, [r6, #4]
    3e04:	str	r2, [r0, r1]!
    3e08:	mov	r2, ip
    3e0c:	mov	r1, r2
    3e10:	ldr	r2, [r2, #16]
    3e14:	cmp	r2, #0
    3e18:	bne	3e0c <sf_finish_parse+0xf60>
    3e1c:	ldr	r3, [sp, #16]
    3e20:	str	r0, [r1, #16]
    3e24:	sub	r0, r3, #105	; 0x69
    3e28:	cmp	r0, #22
    3e2c:	bhi	3e44 <sf_finish_parse+0xf98>
    3e30:	movw	r2, #16385	; 0x4001
    3e34:	mov	r1, #1
    3e38:	movt	r2, #64	; 0x40
    3e3c:	tst	r2, r1, lsl r0
    3e40:	bne	3e54 <sf_finish_parse+0xfa8>
    3e44:	cmp	r3, #192	; 0xc0
    3e48:	beq	3e54 <sf_finish_parse+0xfa8>
    3e4c:	cmp	r3, #163	; 0xa3
    3e50:	bne	4c94 <sf_finish_parse+0x1de8>
    3e54:	ldr	r0, [r8, #100]	; 0x64
    3e58:	cmn	r0, #1
    3e5c:	str	r0, [sp, #24]
    3e60:	beq	4c94 <sf_finish_parse+0x1de8>
    3e64:	ldr	r0, [r7, #4]
    3e68:	mov	r1, #1
    3e6c:	cmp	ip, #0
    3e70:	str	r0, [sp, #8]
    3e74:	ldr	r0, [pc, #3908]	; 4dc0 <sf_finish_parse+0x1f14>
    3e78:	add	r0, pc, r0
    3e7c:	str	r1, [r0]
    3e80:	ldr	r0, [r8, #92]	; 0x5c
    3e84:	beq	3e94 <sf_finish_parse+0xfe8>
    3e88:	mov	r4, r0
    3e8c:	b	3f18 <sf_finish_parse+0x106c>
    3e90:	.word	0x00043614
    3e94:	ldr	r6, [pc, #3880]	; 4dc4 <sf_finish_parse+0x1f18>
    3e98:	add	r6, pc, r6
    3e9c:	ldr	r5, [r6, r0, lsl #3]!
    3ea0:	cmp	r5, #19
    3ea4:	bhi	3ef8 <sf_finish_parse+0x104c>
    3ea8:	add	r4, r0, #1
    3eac:	cmp	r0, #15
    3eb0:	str	r4, [r8, #92]	; 0x5c
    3eb4:	bge	4f34 <sf_finish_parse+0x2088>
    3eb8:	mov	r0, #1024	; 0x400
    3ebc:	lsl	r5, r0, r4
    3ec0:	mov	r0, r5
    3ec4:	bl	f1c <malloc@plt>
    3ec8:	cmp	r0, #0
    3ecc:	str	r0, [r6, #12]
    3ed0:	beq	4f34 <sf_finish_parse+0x2088>
    3ed4:	mov	r1, #0
    3ed8:	mov	r2, r5
    3edc:	add	r6, r6, #8
    3ee0:	bl	f88 <memset@plt>
    3ee4:	cmp	r5, #19
    3ee8:	str	r5, [r6]
    3eec:	bhi	3efc <sf_finish_parse+0x1050>
    3ef0:	b	4f34 <sf_finish_parse+0x2088>
    3ef4:	.word	0x00043518
    3ef8:	mov	r4, r0
    3efc:	sub	r0, r5, #20
    3f00:	mov	r1, #1
    3f04:	str	r0, [r6]
    3f08:	ldr	ip, [r6, #4]
    3f0c:	str	r1, [ip, r0]!
    3f10:	mov	r0, #0
    3f14:	str	r0, [ip, #12]
    3f18:	ldr	sl, [pc, #3976]	; 4ea8 <sf_finish_parse+0x1ffc>
    3f1c:	str	ip, [sp, #28]
    3f20:	add	sl, pc, sl
    3f24:	mov	r7, sl
    3f28:	ldr	r5, [r7, r4, lsl #3]!
    3f2c:	cmp	r5, #19
    3f30:	bhi	3f90 <sf_finish_parse+0x10e4>
    3f34:	add	r6, r4, #1
    3f38:	cmp	r4, #15
    3f3c:	str	r6, [r8, #92]	; 0x5c
    3f40:	bge	4f34 <sf_finish_parse+0x2088>
    3f44:	mov	r0, #1024	; 0x400
    3f48:	lsl	r5, r0, r6
    3f4c:	mov	r0, r5
    3f50:	bl	f1c <malloc@plt>
    3f54:	cmp	r0, #0
    3f58:	str	r0, [r7, #12]
    3f5c:	beq	4f34 <sf_finish_parse+0x2088>
    3f60:	mov	r1, #0
    3f64:	mov	r2, r5
    3f68:	add	r7, r7, #8
    3f6c:	bl	f88 <memset@plt>
    3f70:	ldr	ip, [sp, #28]
    3f74:	cmp	r5, #19
    3f78:	str	r5, [r7]
    3f7c:	bhi	3f94 <sf_finish_parse+0x10e8>
    3f80:	b	4f34 <sf_finish_parse+0x2088>
    3f84:	.word	0x00043490
    3f88:	.word	0x0004399c
    3f8c:	.word	0x00043404
    3f90:	mov	r6, r4
    3f94:	sub	r1, r5, #20
    3f98:	mov	r2, #135	; 0x87
    3f9c:	str	r1, [r7]
    3fa0:	ldr	r0, [r7, #4]
    3fa4:	str	r2, [r0, r1]!
    3fa8:	mov	r2, ip
    3fac:	mov	r1, r2
    3fb0:	ldr	r2, [r2, #16]
    3fb4:	cmp	r2, #0
    3fb8:	bne	3fac <sf_finish_parse+0x1100>
    3fbc:	str	r0, [r1, #16]
    3fc0:	mov	r7, sl
    3fc4:	ldr	r5, [r7, r6, lsl #3]!
    3fc8:	cmp	r5, #19
    3fcc:	bhi	4024 <sf_finish_parse+0x1178>
    3fd0:	add	r4, r6, #1
    3fd4:	cmp	r6, #15
    3fd8:	str	r4, [r8, #92]	; 0x5c
    3fdc:	bge	4f34 <sf_finish_parse+0x2088>
    3fe0:	mov	r0, #1024	; 0x400
    3fe4:	lsl	r5, r0, r4
    3fe8:	mov	r0, r5
    3fec:	bl	f1c <malloc@plt>
    3ff0:	cmp	r0, #0
    3ff4:	str	r0, [r7, #12]
    3ff8:	beq	4f34 <sf_finish_parse+0x2088>
    3ffc:	mov	r1, #0
    4000:	mov	r2, r5
    4004:	add	r7, r7, #8
    4008:	bl	f88 <memset@plt>
    400c:	ldr	ip, [sp, #28]
    4010:	cmp	r5, #19
    4014:	str	r5, [r7]
    4018:	bhi	4028 <sf_finish_parse+0x117c>
    401c:	b	4f34 <sf_finish_parse+0x2088>
    4020:	.word	0x00043388
    4024:	mov	r4, r6
    4028:	sub	r1, r5, #20
    402c:	mov	r2, #4
    4030:	str	r1, [r7]
    4034:	ldr	r0, [r7, #4]
    4038:	str	r2, [r0, r1]!
    403c:	mov	r1, #24
    4040:	mov	r2, ip
    4044:	str	r1, [r0, #12]
    4048:	mov	r1, r2
    404c:	ldr	r2, [r2, #16]
    4050:	cmp	r2, #0
    4054:	bne	4048 <sf_finish_parse+0x119c>
    4058:	str	r0, [r1, #16]
    405c:	mov	r7, sl
    4060:	ldr	r5, [r7, r4, lsl #3]!
    4064:	cmp	r5, #19
    4068:	bhi	40bc <sf_finish_parse+0x1210>
    406c:	add	r6, r4, #1
    4070:	cmp	r4, #15
    4074:	str	r6, [r8, #92]	; 0x5c
    4078:	bge	4f34 <sf_finish_parse+0x2088>
    407c:	mov	r0, #1024	; 0x400
    4080:	lsl	r5, r0, r6
    4084:	mov	r0, r5
    4088:	bl	f1c <malloc@plt>
    408c:	cmp	r0, #0
    4090:	str	r0, [r7, #12]
    4094:	beq	4f34 <sf_finish_parse+0x2088>
    4098:	mov	r1, #0
    409c:	mov	r2, r5
    40a0:	add	r7, r7, #8
    40a4:	bl	f88 <memset@plt>
    40a8:	ldr	ip, [sp, #28]
    40ac:	cmp	r5, #19
    40b0:	str	r5, [r7]
    40b4:	bhi	40c0 <sf_finish_parse+0x1214>
    40b8:	b	4f34 <sf_finish_parse+0x2088>
    40bc:	mov	r6, r4
    40c0:	sub	r1, r5, #20
    40c4:	mov	r2, #2
    40c8:	str	r1, [r7]
    40cc:	ldr	r0, [r7, #4]
    40d0:	str	r2, [r0, r1]!
    40d4:	mov	r2, ip
    40d8:	ldr	r1, [sp, #24]
    40dc:	str	r1, [r0, #12]
    40e0:	mov	r1, r2
    40e4:	ldr	r2, [r2, #16]
    40e8:	cmp	r2, #0
    40ec:	bne	40e0 <sf_finish_parse+0x1234>
    40f0:	str	r0, [r1, #16]
    40f4:	mov	r7, sl
    40f8:	ldr	r5, [r7, r6, lsl #3]!
    40fc:	cmp	r5, #19
    4100:	bhi	4154 <sf_finish_parse+0x12a8>
    4104:	add	r4, r6, #1
    4108:	cmp	r6, #15
    410c:	str	r4, [r8, #92]	; 0x5c
    4110:	bge	4f34 <sf_finish_parse+0x2088>
    4114:	mov	r0, #1024	; 0x400
    4118:	lsl	r5, r0, r4
    411c:	mov	r0, r5
    4120:	bl	f1c <malloc@plt>
    4124:	cmp	r0, #0
    4128:	str	r0, [r7, #12]
    412c:	beq	4f34 <sf_finish_parse+0x2088>
    4130:	mov	r1, #0
    4134:	mov	r2, r5
    4138:	add	r7, r7, #8
    413c:	bl	f88 <memset@plt>
    4140:	ldr	ip, [sp, #28]
    4144:	cmp	r5, #19
    4148:	str	r5, [r7]
    414c:	bhi	4158 <sf_finish_parse+0x12ac>
    4150:	b	4f34 <sf_finish_parse+0x2088>
    4154:	mov	r4, r6
    4158:	sub	r1, r5, #20
    415c:	mov	r2, #80	; 0x50
    4160:	str	r1, [r7]
    4164:	ldr	r0, [r7, #4]
    4168:	str	r2, [r0, r1]!
    416c:	mov	r1, #0
    4170:	mov	r2, ip
    4174:	str	r1, [r0, #12]
    4178:	mov	r1, r2
    417c:	ldr	r2, [r2, #16]
    4180:	cmp	r2, #0
    4184:	bne	4178 <sf_finish_parse+0x12cc>
    4188:	str	r0, [r1, #16]
    418c:	mov	r6, sl
    4190:	ldr	r5, [r6, r4, lsl #3]!
    4194:	cmp	r5, #19
    4198:	bhi	41ec <sf_finish_parse+0x1340>
    419c:	add	r7, r4, #1
    41a0:	cmp	r4, #15
    41a4:	str	r7, [r8, #92]	; 0x5c
    41a8:	bge	4f34 <sf_finish_parse+0x2088>
    41ac:	mov	r0, #1024	; 0x400
    41b0:	lsl	r5, r0, r7
    41b4:	mov	r0, r5
    41b8:	bl	f1c <malloc@plt>
    41bc:	cmp	r0, #0
    41c0:	str	r0, [r6, #12]
    41c4:	beq	4f34 <sf_finish_parse+0x2088>
    41c8:	mov	r1, #0
    41cc:	mov	r2, r5
    41d0:	add	r6, r6, #8
    41d4:	bl	f88 <memset@plt>
    41d8:	ldr	ip, [sp, #28]
    41dc:	cmp	r5, #19
    41e0:	str	r5, [r6]
    41e4:	bhi	41f0 <sf_finish_parse+0x1344>
    41e8:	b	4f34 <sf_finish_parse+0x2088>
    41ec:	mov	r7, r4
    41f0:	sub	r0, r5, #20
    41f4:	mov	r1, #69	; 0x45
    41f8:	str	r0, [r6]
    41fc:	ldr	r4, [r6, #4]
    4200:	str	r1, [r4, r0]!
    4204:	mov	r0, #8
    4208:	mov	r1, ip
    420c:	str	r0, [r4, #12]
    4210:	mov	r0, r1
    4214:	ldr	r1, [r1, #16]
    4218:	cmp	r1, #0
    421c:	bne	4210 <sf_finish_parse+0x1364>
    4220:	str	r4, [r0, #16]
    4224:	mov	r6, sl
    4228:	ldr	r5, [r6, r7, lsl #3]!
    422c:	cmp	r5, #19
    4230:	bhi	4288 <sf_finish_parse+0x13dc>
    4234:	add	r9, r7, #1
    4238:	cmp	r7, #15
    423c:	str	r9, [r8, #92]	; 0x5c
    4240:	bge	4f34 <sf_finish_parse+0x2088>
    4244:	mov	r0, #1024	; 0x400
    4248:	lsl	r5, r0, r9
    424c:	mov	r0, r5
    4250:	bl	f1c <malloc@plt>
    4254:	cmp	r0, #0
    4258:	str	r0, [r6, #12]
    425c:	beq	4f34 <sf_finish_parse+0x2088>
    4260:	mov	r1, #0
    4264:	mov	r2, r5
    4268:	add	r6, r6, #8
    426c:	bl	f88 <memset@plt>
    4270:	ldr	ip, [sp, #28]
    4274:	cmp	r5, #19
    4278:	str	r5, [r6]
    427c:	bhi	428c <sf_finish_parse+0x13e0>
    4280:	b	4f34 <sf_finish_parse+0x2088>
    4284:	.word	0x00043200
    4288:	mov	r9, r7
    428c:	sub	r0, r5, #20
    4290:	mov	r1, #69	; 0x45
    4294:	str	r0, [r6]
    4298:	ldr	r7, [r6, #4]
    429c:	str	r1, [r7, r0]!
    42a0:	mov	r1, ip
    42a4:	mov	r0, #4
    42a8:	str	r7, [r4, #4]
    42ac:	str	r0, [r7, #12]
    42b0:	mov	r0, r1
    42b4:	ldr	r1, [r1, #16]
    42b8:	cmp	r1, #0
    42bc:	bne	42b0 <sf_finish_parse+0x1404>
    42c0:	str	r7, [r0, #16]
    42c4:	ldr	r0, [sp, #8]
    42c8:	mov	r6, sl
    42cc:	str	r0, [r4, #8]
    42d0:	str	r0, [r7, #4]
    42d4:	ldr	r5, [r6, r9, lsl #3]!
    42d8:	cmp	r5, #19
    42dc:	bhi	4334 <sf_finish_parse+0x1488>
    42e0:	add	r4, r9, #1
    42e4:	cmp	r9, #15
    42e8:	str	r4, [r8, #92]	; 0x5c
    42ec:	bge	4f34 <sf_finish_parse+0x2088>
    42f0:	mov	r0, #1024	; 0x400
    42f4:	lsl	r5, r0, r4
    42f8:	mov	r0, r5
    42fc:	bl	f1c <malloc@plt>
    4300:	ldr	r9, [sp, #20]
    4304:	cmp	r0, #0
    4308:	str	r0, [r6, #12]
    430c:	beq	4f34 <sf_finish_parse+0x2088>
    4310:	mov	r1, #0
    4314:	mov	r2, r5
    4318:	add	r6, r6, #8
    431c:	bl	f88 <memset@plt>
    4320:	ldr	ip, [sp, #28]
    4324:	cmp	r5, #19
    4328:	str	r5, [r6]
    432c:	bhi	433c <sf_finish_parse+0x1490>
    4330:	b	4f34 <sf_finish_parse+0x2088>
    4334:	mov	r4, r9
    4338:	ldr	r9, [sp, #20]
    433c:	sub	r0, r5, #20
    4340:	mov	r1, #69	; 0x45
    4344:	str	r0, [r6]
    4348:	ldr	r8, [r6, #4]
    434c:	str	r1, [r8, r0]!
    4350:	mov	r1, ip
    4354:	mov	r0, #128	; 0x80
    4358:	str	r8, [r7, #8]
    435c:	str	r0, [r8, #12]
    4360:	mov	r0, r1
    4364:	ldr	r1, [r1, #16]
    4368:	cmp	r1, #0
    436c:	bne	4360 <sf_finish_parse+0x14b4>
    4370:	str	r8, [r0, #16]
    4374:	mov	r6, sl
    4378:	ldr	r5, [r6, r4, lsl #3]!
    437c:	cmp	r5, #19
    4380:	bhi	43dc <sf_finish_parse+0x1530>
    4384:	ldr	r0, [pc, #3300]	; 5070 <sf_finish_parse+0x21c4>
    4388:	add	r7, r4, #1
    438c:	cmp	r4, #15
    4390:	add	r0, pc, r0
    4394:	str	r7, [r0, #92]	; 0x5c
    4398:	bge	4f34 <sf_finish_parse+0x2088>
    439c:	mov	r0, #1024	; 0x400
    43a0:	lsl	r5, r0, r7
    43a4:	mov	r0, r5
    43a8:	bl	f1c <malloc@plt>
    43ac:	cmp	r0, #0
    43b0:	str	r0, [r6, #12]
    43b4:	beq	4f34 <sf_finish_parse+0x2088>
    43b8:	mov	r1, #0
    43bc:	mov	r2, r5
    43c0:	add	r6, r6, #8
    43c4:	bl	f88 <memset@plt>
    43c8:	ldr	ip, [sp, #28]
    43cc:	cmp	r5, #19
    43d0:	str	r5, [r6]
    43d4:	bhi	43e0 <sf_finish_parse+0x1534>
    43d8:	b	4f34 <sf_finish_parse+0x2088>
    43dc:	mov	r7, r4
    43e0:	sub	r1, r5, #20
    43e4:	mov	r2, #96	; 0x60
    43e8:	str	r1, [r6]
    43ec:	ldr	r0, [r6, #4]
    43f0:	str	r2, [r0, r1]!
    43f4:	mov	r2, ip
    43f8:	ldr	r1, [sp, #24]
    43fc:	str	r0, [r8, #4]
    4400:	str	r1, [r0, #12]
    4404:	mov	r1, r2
    4408:	ldr	r2, [r2, #16]
    440c:	cmp	r2, #0
    4410:	bne	4404 <sf_finish_parse+0x1558>
    4414:	str	r0, [r1, #16]
    4418:	mov	r6, sl
    441c:	ldr	r5, [r6, r7, lsl #3]!
    4420:	cmp	r5, #19
    4424:	bhi	4480 <sf_finish_parse+0x15d4>
    4428:	ldr	r0, [pc, #3140]	; 5074 <sf_finish_parse+0x21c8>
    442c:	add	r4, r7, #1
    4430:	cmp	r7, #15
    4434:	add	r0, pc, r0
    4438:	str	r4, [r0, #92]	; 0x5c
    443c:	bge	4f34 <sf_finish_parse+0x2088>
    4440:	mov	r0, #1024	; 0x400
    4444:	lsl	r5, r0, r4
    4448:	mov	r0, r5
    444c:	bl	f1c <malloc@plt>
    4450:	cmp	r0, #0
    4454:	str	r0, [r6, #12]
    4458:	beq	4f34 <sf_finish_parse+0x2088>
    445c:	mov	r1, #0
    4460:	mov	r2, r5
    4464:	add	r6, r6, #8
    4468:	bl	f88 <memset@plt>
    446c:	ldr	ip, [sp, #28]
    4470:	cmp	r5, #19
    4474:	str	r5, [r6]
    4478:	bhi	4484 <sf_finish_parse+0x15d8>
    447c:	b	4f34 <sf_finish_parse+0x2088>
    4480:	mov	r4, r7
    4484:	sub	r1, r5, #20
    4488:	mov	r2, #4
    448c:	str	r1, [r6]
    4490:	ldr	r0, [r6, #4]
    4494:	str	r2, [r0, r1]!
    4498:	mov	r1, #2
    449c:	mov	r2, ip
    44a0:	str	r1, [r0, #12]
    44a4:	mov	r1, r2
    44a8:	ldr	r2, [r2, #16]
    44ac:	cmp	r2, #0
    44b0:	bne	44a4 <sf_finish_parse+0x15f8>
    44b4:	str	r0, [r1, #16]
    44b8:	mov	r6, sl
    44bc:	ldr	r5, [r6, r4, lsl #3]!
    44c0:	cmp	r5, #19
    44c4:	bhi	4524 <sf_finish_parse+0x1678>
    44c8:	ldr	r0, [pc, #2984]	; 5078 <sf_finish_parse+0x21cc>
    44cc:	add	r7, r4, #1
    44d0:	cmp	r4, #15
    44d4:	add	r0, pc, r0
    44d8:	str	r7, [r0, #92]	; 0x5c
    44dc:	bge	4f34 <sf_finish_parse+0x2088>
    44e0:	mov	r0, #1024	; 0x400
    44e4:	lsl	r5, r0, r7
    44e8:	mov	r0, r5
    44ec:	bl	f1c <malloc@plt>
    44f0:	cmp	r0, #0
    44f4:	str	r0, [r6, #12]
    44f8:	beq	4f34 <sf_finish_parse+0x2088>
    44fc:	mov	r1, #0
    4500:	mov	r2, r5
    4504:	add	r6, r6, #8
    4508:	bl	f88 <memset@plt>
    450c:	ldr	ip, [sp, #28]
    4510:	cmp	r5, #19
    4514:	str	r5, [r6]
    4518:	bhi	4528 <sf_finish_parse+0x167c>
    451c:	b	4f34 <sf_finish_parse+0x2088>
    4520:	.word	0x00042f94
    4524:	mov	r7, r4
    4528:	sub	r1, r5, #20
    452c:	mov	r2, #2
    4530:	str	r1, [r6]
    4534:	ldr	r0, [r6, #4]
    4538:	str	r2, [r0, r1]!
    453c:	mov	r2, ip
    4540:	ldr	r1, [sp, #24]
    4544:	str	r1, [r0, #12]
    4548:	mov	r1, r2
    454c:	ldr	r2, [r2, #16]
    4550:	cmp	r2, #0
    4554:	bne	4548 <sf_finish_parse+0x169c>
    4558:	ldr	r3, [sp, #16]
    455c:	str	r0, [r1, #16]
    4560:	cmp	r3, #127	; 0x7f
    4564:	bne	45d0 <sf_finish_parse+0x1724>
    4568:	mov	r4, sl
    456c:	ldr	r5, [r4, r7, lsl #3]!
    4570:	cmp	r5, #19
    4574:	bhi	45e4 <sf_finish_parse+0x1738>
    4578:	ldr	r0, [pc, #2812]	; 507c <sf_finish_parse+0x21d0>
    457c:	add	r9, r7, #1
    4580:	cmp	r7, #15
    4584:	add	r0, pc, r0
    4588:	str	r9, [r0, #92]	; 0x5c
    458c:	bge	4f34 <sf_finish_parse+0x2088>
    4590:	mov	r0, #1024	; 0x400
    4594:	lsl	r5, r0, r9
    4598:	mov	r0, r5
    459c:	bl	f1c <malloc@plt>
    45a0:	cmp	r0, #0
    45a4:	str	r0, [r4, #12]
    45a8:	beq	4f34 <sf_finish_parse+0x2088>
    45ac:	mov	r1, #0
    45b0:	mov	r2, r5
    45b4:	add	r4, r4, #8
    45b8:	bl	f88 <memset@plt>
    45bc:	ldr	ip, [sp, #28]
    45c0:	cmp	r5, #19
    45c4:	str	r5, [r4]
    45c8:	bhi	45e8 <sf_finish_parse+0x173c>
    45cc:	b	4f34 <sf_finish_parse+0x2088>
    45d0:	ldr	r0, [sp, #8]
    45d4:	str	r0, [r8, #8]
    45d8:	ldr	r8, [pc, #2752]	; 50a0 <sf_finish_parse+0x21f4>
    45dc:	add	r8, pc, r8
    45e0:	b	4c90 <sf_finish_parse+0x1de4>
    45e4:	mov	r9, r7
    45e8:	sub	r1, r5, #20
    45ec:	mov	r2, #32
    45f0:	str	r1, [r4]
    45f4:	ldr	r0, [r4, #4]
    45f8:	str	r2, [r0, r1]!
    45fc:	mov	r2, ip
    4600:	mov	r1, #4
    4604:	str	r0, [r8, #8]
    4608:	str	r1, [r0, #12]
    460c:	mov	r1, r2
    4610:	ldr	r2, [r2, #16]
    4614:	cmp	r2, #0
    4618:	bne	460c <sf_finish_parse+0x1760>
    461c:	str	r0, [r1, #16]
    4620:	mov	r6, sl
    4624:	ldr	r5, [r6, r9, lsl #3]!
    4628:	cmp	r5, #19
    462c:	bhi	468c <sf_finish_parse+0x17e0>
    4630:	ldr	r0, [pc, #2632]	; 5080 <sf_finish_parse+0x21d4>
    4634:	add	r8, r9, #1
    4638:	cmp	r9, #15
    463c:	add	r0, pc, r0
    4640:	str	r8, [r0, #92]	; 0x5c
    4644:	bge	4f34 <sf_finish_parse+0x2088>
    4648:	mov	r0, #1024	; 0x400
    464c:	lsl	r5, r0, r8
    4650:	mov	r0, r5
    4654:	bl	f1c <malloc@plt>
    4658:	cmp	r0, #0
    465c:	str	r0, [r6, #12]
    4660:	beq	4f34 <sf_finish_parse+0x2088>
    4664:	mov	r1, #0
    4668:	mov	r2, r5
    466c:	add	r6, r6, #8
    4670:	bl	f88 <memset@plt>
    4674:	ldr	ip, [sp, #28]
    4678:	cmp	r5, #19
    467c:	str	r5, [r6]
    4680:	bhi	4690 <sf_finish_parse+0x17e4>
    4684:	b	4f34 <sf_finish_parse+0x2088>
    4688:	.word	0x00042d20
    468c:	mov	r8, r9
    4690:	sub	r0, r5, #20
    4694:	mov	r1, #69	; 0x45
    4698:	str	r0, [r6]
    469c:	ldr	r6, [r6, #4]
    46a0:	str	r1, [r6, r0]!
    46a4:	mov	r0, #33554432	; 0x2000000
    46a8:	mov	r1, ip
    46ac:	str	r0, [r6, #12]
    46b0:	mov	r0, r1
    46b4:	ldr	r1, [r1, #16]
    46b8:	cmp	r1, #0
    46bc:	bne	46b0 <sf_finish_parse+0x1804>
    46c0:	str	r6, [r0, #16]
    46c4:	ldr	r0, [sp, #8]
    46c8:	mov	r4, sl
    46cc:	str	r0, [r6, #8]
    46d0:	ldr	r5, [r4, r8, lsl #3]!
    46d4:	cmp	r5, #19
    46d8:	bhi	4740 <sf_finish_parse+0x1894>
    46dc:	ldr	r0, [pc, #2468]	; 5088 <sf_finish_parse+0x21dc>
    46e0:	add	r7, r8, #1
    46e4:	cmp	r8, #15
    46e8:	add	r0, pc, r0
    46ec:	str	r7, [r0, #92]	; 0x5c
    46f0:	bge	4f34 <sf_finish_parse+0x2088>
    46f4:	mov	r0, #1024	; 0x400
    46f8:	lsl	r5, r0, r7
    46fc:	mov	r0, r5
    4700:	bl	f1c <malloc@plt>
    4704:	cmp	r0, #0
    4708:	str	r0, [r4, #12]
    470c:	beq	4f34 <sf_finish_parse+0x2088>
    4710:	mov	r1, #0
    4714:	mov	r2, r5
    4718:	add	r4, r4, #8
    471c:	bl	f88 <memset@plt>
    4720:	str	r5, [r4]
    4724:	cmp	r5, #19
    4728:	ldr	r8, [pc, #2396]	; 508c <sf_finish_parse+0x21e0>
    472c:	ldr	ip, [sp, #28]
    4730:	add	r8, pc, r8
    4734:	bhi	474c <sf_finish_parse+0x18a0>
    4738:	b	4f34 <sf_finish_parse+0x2088>
    473c:	.word	0x00042d4c
    4740:	mov	r7, r8
    4744:	ldr	r8, [pc, #2360]	; 5084 <sf_finish_parse+0x21d8>
    4748:	add	r8, pc, r8
    474c:	sub	r0, r5, #20
    4750:	mov	r1, #69	; 0x45
    4754:	str	r0, [r4]
    4758:	ldr	r9, [r4, #4]
    475c:	str	r1, [r9, r0]!
    4760:	mov	r1, ip
    4764:	mov	r0, #16777216	; 0x1000000
    4768:	str	r9, [r6, #4]
    476c:	str	r0, [r9, #12]
    4770:	mov	r0, r1
    4774:	ldr	r1, [r1, #16]
    4778:	cmp	r1, #0
    477c:	bne	4770 <sf_finish_parse+0x18c4>
    4780:	str	r9, [r0, #16]
    4784:	mov	r6, sl
    4788:	ldr	r5, [r6, r7, lsl #3]!
    478c:	cmp	r5, #19
    4790:	bhi	47e4 <sf_finish_parse+0x1938>
    4794:	add	r4, r7, #1
    4798:	cmp	r7, #15
    479c:	str	r4, [r8, #92]	; 0x5c
    47a0:	bge	4f34 <sf_finish_parse+0x2088>
    47a4:	mov	r0, #1024	; 0x400
    47a8:	lsl	r5, r0, r4
    47ac:	mov	r0, r5
    47b0:	bl	f1c <malloc@plt>
    47b4:	cmp	r0, #0
    47b8:	str	r0, [r6, #12]
    47bc:	beq	4f34 <sf_finish_parse+0x2088>
    47c0:	mov	r1, #0
    47c4:	mov	r2, r5
    47c8:	add	r6, r6, #8
    47cc:	bl	f88 <memset@plt>
    47d0:	ldr	ip, [sp, #28]
    47d4:	cmp	r5, #19
    47d8:	str	r5, [r6]
    47dc:	bhi	47e8 <sf_finish_parse+0x193c>
    47e0:	b	4f34 <sf_finish_parse+0x2088>
    47e4:	mov	r4, r7
    47e8:	sub	r1, r5, #20
    47ec:	mov	r2, #48	; 0x30
    47f0:	str	r1, [r6]
    47f4:	ldr	r0, [r6, #4]
    47f8:	str	r2, [r0, r1]!
    47fc:	mov	r2, ip
    4800:	mov	r1, #16
    4804:	str	r0, [r9, #4]
    4808:	str	r1, [r0, #12]
    480c:	mov	r1, r2
    4810:	ldr	r2, [r2, #16]
    4814:	cmp	r2, #0
    4818:	bne	480c <sf_finish_parse+0x1960>
    481c:	str	r0, [r1, #16]
    4820:	mov	r7, sl
    4824:	ldr	r5, [r7, r4, lsl #3]!
    4828:	cmp	r5, #19
    482c:	bhi	4884 <sf_finish_parse+0x19d8>
    4830:	add	r6, r4, #1
    4834:	cmp	r4, #15
    4838:	str	r6, [r8, #92]	; 0x5c
    483c:	bge	4f34 <sf_finish_parse+0x2088>
    4840:	mov	r0, #1024	; 0x400
    4844:	lsl	r5, r0, r6
    4848:	mov	r0, r5
    484c:	bl	f1c <malloc@plt>
    4850:	cmp	r0, #0
    4854:	str	r0, [r7, #12]
    4858:	beq	4f34 <sf_finish_parse+0x2088>
    485c:	mov	r1, #0
    4860:	mov	r2, r5
    4864:	add	r7, r7, #8
    4868:	bl	f88 <memset@plt>
    486c:	ldr	ip, [sp, #28]
    4870:	cmp	r5, #19
    4874:	str	r5, [r7]
    4878:	bhi	4888 <sf_finish_parse+0x19dc>
    487c:	b	4f34 <sf_finish_parse+0x2088>
    4880:	.word	0x00042b14
    4884:	mov	r6, r4
    4888:	sub	r0, r5, #20
    488c:	mov	r1, #69	; 0x45
    4890:	str	r0, [r7]
    4894:	ldr	r2, [r7, #4]
    4898:	str	r1, [r2, r0]!
    489c:	mov	r0, #32
    48a0:	mov	r1, ip
    48a4:	str	r0, [r2, #12]
    48a8:	mov	r0, r1
    48ac:	ldr	r1, [r1, #16]
    48b0:	cmp	r1, #0
    48b4:	bne	48a8 <sf_finish_parse+0x19fc>
    48b8:	str	r2, [r0, #16]
    48bc:	mov	r4, sl
    48c0:	str	r2, [sp, #4]
    48c4:	ldr	r5, [r4, r6, lsl #3]!
    48c8:	cmp	r5, #19
    48cc:	bhi	4920 <sf_finish_parse+0x1a74>
    48d0:	add	r7, r6, #1
    48d4:	cmp	r6, #15
    48d8:	str	r7, [r8, #92]	; 0x5c
    48dc:	bge	4f34 <sf_finish_parse+0x2088>
    48e0:	mov	r0, #1024	; 0x400
    48e4:	lsl	r5, r0, r7
    48e8:	mov	r0, r5
    48ec:	bl	f1c <malloc@plt>
    48f0:	cmp	r0, #0
    48f4:	str	r0, [r4, #12]
    48f8:	beq	4f34 <sf_finish_parse+0x2088>
    48fc:	mov	r1, #0
    4900:	mov	r2, r5
    4904:	add	r4, r4, #8
    4908:	bl	f88 <memset@plt>
    490c:	ldr	ip, [sp, #28]
    4910:	cmp	r5, #19
    4914:	str	r5, [r4]
    4918:	bhi	4924 <sf_finish_parse+0x1a78>
    491c:	b	4f34 <sf_finish_parse+0x2088>
    4920:	mov	r7, r6
    4924:	sub	r1, r5, #20
    4928:	mov	r2, #48	; 0x30
    492c:	str	r1, [r4]
    4930:	ldr	r0, [r4, #4]
    4934:	str	r2, [r0, r1]!
    4938:	mov	r2, ip
    493c:	mov	r1, #8
    4940:	str	r0, [r9, #8]
    4944:	str	r1, [r0, #12]
    4948:	mov	r1, r2
    494c:	ldr	r2, [r2, #16]
    4950:	cmp	r2, #0
    4954:	bne	4948 <sf_finish_parse+0x1a9c>
    4958:	str	r0, [r1, #16]
    495c:	mov	r6, sl
    4960:	ldr	r5, [r6, r7, lsl #3]!
    4964:	cmp	r5, #19
    4968:	bhi	49bc <sf_finish_parse+0x1b10>
    496c:	add	r4, r7, #1
    4970:	cmp	r7, #15
    4974:	str	r4, [r8, #92]	; 0x5c
    4978:	bge	4f34 <sf_finish_parse+0x2088>
    497c:	mov	r0, #1024	; 0x400
    4980:	lsl	r5, r0, r4
    4984:	mov	r0, r5
    4988:	bl	f1c <malloc@plt>
    498c:	cmp	r0, #0
    4990:	str	r0, [r6, #12]
    4994:	beq	4f34 <sf_finish_parse+0x2088>
    4998:	mov	r1, #0
    499c:	mov	r2, r5
    49a0:	add	r6, r6, #8
    49a4:	bl	f88 <memset@plt>
    49a8:	ldr	ip, [sp, #28]
    49ac:	cmp	r5, #19
    49b0:	str	r5, [r6]
    49b4:	bhi	49c0 <sf_finish_parse+0x1b14>
    49b8:	b	4f34 <sf_finish_parse+0x2088>
    49bc:	mov	r4, r7
    49c0:	sub	r0, r5, #20
    49c4:	mov	r1, #69	; 0x45
    49c8:	str	r0, [r6]
    49cc:	ldr	r9, [r6, #4]
    49d0:	str	r1, [r9, r0]!
    49d4:	mov	r0, #32
    49d8:	mov	r1, ip
    49dc:	str	r0, [r9, #12]
    49e0:	mov	r0, r1
    49e4:	ldr	r1, [r1, #16]
    49e8:	cmp	r1, #0
    49ec:	bne	49e0 <sf_finish_parse+0x1b34>
    49f0:	str	r9, [r0, #16]
    49f4:	mov	r6, sl
    49f8:	ldr	r5, [r6, r4, lsl #3]!
    49fc:	cmp	r5, #19
    4a00:	bhi	4a58 <sf_finish_parse+0x1bac>
    4a04:	add	r7, r4, #1
    4a08:	cmp	r4, #15
    4a0c:	str	r7, [r8, #92]	; 0x5c
    4a10:	bge	4f34 <sf_finish_parse+0x2088>
    4a14:	mov	r0, #1024	; 0x400
    4a18:	lsl	r5, r0, r7
    4a1c:	mov	r0, r5
    4a20:	bl	f1c <malloc@plt>
    4a24:	cmp	r0, #0
    4a28:	str	r0, [r6, #12]
    4a2c:	beq	4f34 <sf_finish_parse+0x2088>
    4a30:	mov	r1, #0
    4a34:	mov	r2, r5
    4a38:	add	r6, r6, #8
    4a3c:	bl	f88 <memset@plt>
    4a40:	ldr	ip, [sp, #28]
    4a44:	cmp	r5, #19
    4a48:	str	r5, [r6]
    4a4c:	bhi	4a5c <sf_finish_parse+0x1bb0>
    4a50:	b	4f34 <sf_finish_parse+0x2088>
    4a54:	.word	0x00042958
    4a58:	mov	r7, r4
    4a5c:	sub	r0, r5, #20
    4a60:	mov	r1, #96	; 0x60
    4a64:	str	r0, [r6]
    4a68:	ldr	r8, [r6, #4]
    4a6c:	str	r1, [r8, r0]!
    4a70:	mov	r1, ip
    4a74:	ldr	r0, [sp, #24]
    4a78:	str	r0, [r8, #12]
    4a7c:	mov	r0, r1
    4a80:	ldr	r1, [r1, #16]
    4a84:	cmp	r1, #0
    4a88:	bne	4a7c <sf_finish_parse+0x1bd0>
    4a8c:	str	r8, [r0, #16]
    4a90:	mov	r4, sl
    4a94:	ldr	r5, [r4, r7, lsl #3]!
    4a98:	cmp	r5, #19
    4a9c:	bhi	4af8 <sf_finish_parse+0x1c4c>
    4aa0:	ldr	r0, [pc, #1512]	; 5090 <sf_finish_parse+0x21e4>
    4aa4:	add	r6, r7, #1
    4aa8:	cmp	r7, #15
    4aac:	add	r0, pc, r0
    4ab0:	str	r6, [r0, #92]	; 0x5c
    4ab4:	bge	4f34 <sf_finish_parse+0x2088>
    4ab8:	mov	r0, #1024	; 0x400
    4abc:	lsl	r5, r0, r6
    4ac0:	mov	r0, r5
    4ac4:	bl	f1c <malloc@plt>
    4ac8:	cmp	r0, #0
    4acc:	str	r0, [r4, #12]
    4ad0:	beq	4f34 <sf_finish_parse+0x2088>
    4ad4:	mov	r1, #0
    4ad8:	mov	r2, r5
    4adc:	add	r4, r4, #8
    4ae0:	bl	f88 <memset@plt>
    4ae4:	ldr	ip, [sp, #28]
    4ae8:	cmp	r5, #19
    4aec:	str	r5, [r4]
    4af0:	bhi	4afc <sf_finish_parse+0x1c50>
    4af4:	b	4f34 <sf_finish_parse+0x2088>
    4af8:	mov	r6, r7
    4afc:	sub	r1, r5, #20
    4b00:	mov	r2, #4
    4b04:	str	r1, [r4]
    4b08:	ldr	r0, [r4, #4]
    4b0c:	str	r2, [r0, r1]!
    4b10:	mov	r1, #3
    4b14:	mov	r2, ip
    4b18:	str	r1, [r0, #12]
    4b1c:	mov	r1, r2
    4b20:	ldr	r2, [r2, #16]
    4b24:	cmp	r2, #0
    4b28:	bne	4b1c <sf_finish_parse+0x1c70>
    4b2c:	str	r0, [r1, #16]
    4b30:	mov	r4, sl
    4b34:	ldr	r5, [r4, r6, lsl #3]!
    4b38:	cmp	r5, #19
    4b3c:	bhi	4b9c <sf_finish_parse+0x1cf0>
    4b40:	ldr	r0, [pc, #1356]	; 5094 <sf_finish_parse+0x21e8>
    4b44:	add	r7, r6, #1
    4b48:	cmp	r6, #15
    4b4c:	add	r0, pc, r0
    4b50:	str	r7, [r0, #92]	; 0x5c
    4b54:	bge	4f34 <sf_finish_parse+0x2088>
    4b58:	mov	r0, #1024	; 0x400
    4b5c:	lsl	r5, r0, r7
    4b60:	mov	r0, r5
    4b64:	bl	f1c <malloc@plt>
    4b68:	cmp	r0, #0
    4b6c:	str	r0, [r4, #12]
    4b70:	beq	4f34 <sf_finish_parse+0x2088>
    4b74:	mov	r1, #0
    4b78:	mov	r2, r5
    4b7c:	add	r4, r4, #8
    4b80:	bl	f88 <memset@plt>
    4b84:	ldr	ip, [sp, #28]
    4b88:	cmp	r5, #19
    4b8c:	str	r5, [r4]
    4b90:	bhi	4ba0 <sf_finish_parse+0x1cf4>
    4b94:	b	4f34 <sf_finish_parse+0x2088>
    4b98:	.word	0x00042738
    4b9c:	mov	r7, r6
    4ba0:	sub	r1, r5, #20
    4ba4:	mov	r2, #84	; 0x54
    4ba8:	str	r1, [r4]
    4bac:	ldr	r0, [r4, #4]
    4bb0:	str	r2, [r0, r1]!
    4bb4:	mvn	r1, #3
    4bb8:	mov	r2, ip
    4bbc:	str	r1, [r0, #12]
    4bc0:	mov	r1, r2
    4bc4:	ldr	r2, [r2, #16]
    4bc8:	cmp	r2, #0
    4bcc:	bne	4bc0 <sf_finish_parse+0x1d14>
    4bd0:	str	r0, [r1, #16]
    4bd4:	ldr	r5, [sl, r7, lsl #3]!
    4bd8:	cmp	r5, #19
    4bdc:	bhi	4c34 <sf_finish_parse+0x1d88>
    4be0:	ldr	r1, [pc, #1200]	; 5098 <sf_finish_parse+0x21ec>
    4be4:	add	r0, r7, #1
    4be8:	cmp	r7, #15
    4bec:	add	r1, pc, r1
    4bf0:	str	r0, [r1, #92]	; 0x5c
    4bf4:	bge	4f34 <sf_finish_parse+0x2088>
    4bf8:	mov	r1, #1024	; 0x400
    4bfc:	lsl	r5, r1, r0
    4c00:	mov	r0, r5
    4c04:	bl	f1c <malloc@plt>
    4c08:	cmp	r0, #0
    4c0c:	str	r0, [sl, #12]
    4c10:	beq	4f34 <sf_finish_parse+0x2088>
    4c14:	mov	r1, #0
    4c18:	mov	r2, r5
    4c1c:	add	sl, sl, #8
    4c20:	bl	f88 <memset@plt>
    4c24:	ldr	ip, [sp, #28]
    4c28:	cmp	r5, #19
    4c2c:	str	r5, [sl]
    4c30:	bls	4f34 <sf_finish_parse+0x2088>
    4c34:	sub	r1, r5, #20
    4c38:	mov	r2, #2
    4c3c:	str	r1, [sl]
    4c40:	ldr	r0, [sl, #4]
    4c44:	str	r2, [r0, r1]!
    4c48:	mov	r2, ip
    4c4c:	ldr	r1, [sp, #24]
    4c50:	str	r1, [r0, #12]
    4c54:	mov	r1, r2
    4c58:	ldr	r2, [r2, #16]
    4c5c:	cmp	r2, #0
    4c60:	bne	4c54 <sf_finish_parse+0x1da8>
    4c64:	str	r0, [r1, #16]
    4c68:	ldr	r1, [sp, #4]
    4c6c:	ldr	r0, [sp, #8]
    4c70:	str	r8, [r1, #4]
    4c74:	str	r0, [r1, #8]
    4c78:	str	r8, [r9, #4]
    4c7c:	str	r0, [r9, #8]
    4c80:	ldr	r9, [sp, #20]
    4c84:	ldr	r8, [pc, #1040]	; 509c <sf_finish_parse+0x21f0>
    4c88:	ldr	r3, [sp, #16]
    4c8c:	add	r8, pc, r8
    4c90:	ldr	r7, [sp, #12]
    4c94:	cmp	ip, #0
    4c98:	beq	4cbc <sf_finish_parse+0x1e10>
    4c9c:	ldr	r0, [r7, #4]
    4ca0:	mov	r2, ip
    4ca4:	mov	r1, r2
    4ca8:	ldr	r2, [r2, #16]
    4cac:	cmp	r2, #0
    4cb0:	bne	4ca4 <sf_finish_parse+0x1df8>
    4cb4:	str	r0, [r1, #16]
    4cb8:	str	ip, [r7, #4]
    4cbc:	ldr	sl, [r8, #92]	; 0x5c
    4cc0:	cmp	r3, #192	; 0xc0
    4cc4:	bne	4ecc <sf_finish_parse+0x2020>
    4cc8:	ldr	r8, [pc, #980]	; 50a4 <sf_finish_parse+0x21f8>
    4ccc:	add	r8, pc, r8
    4cd0:	mov	r6, r8
    4cd4:	ldr	r5, [r6, sl, lsl #3]!
    4cd8:	cmp	r5, #19
    4cdc:	bhi	4d38 <sf_finish_parse+0x1e8c>
    4ce0:	ldr	r0, [pc, #960]	; 50a8 <sf_finish_parse+0x21fc>
    4ce4:	add	r9, sl, #1
    4ce8:	cmp	sl, #15
    4cec:	add	r0, pc, r0
    4cf0:	str	r9, [r0, #92]	; 0x5c
    4cf4:	bge	4f34 <sf_finish_parse+0x2088>
    4cf8:	mov	r0, #1024	; 0x400
    4cfc:	lsl	r5, r0, r9
    4d00:	mov	r0, r5
    4d04:	bl	f1c <malloc@plt>
    4d08:	cmp	r0, #0
    4d0c:	str	r0, [r6, #12]
    4d10:	beq	4f34 <sf_finish_parse+0x2088>
    4d14:	mov	r1, #0
    4d18:	mov	r2, r5
    4d1c:	add	r4, r6, #8
    4d20:	bl	f88 <memset@plt>
    4d24:	cmp	r5, #20
    4d28:	str	r5, [r4]
    4d2c:	bcc	4f34 <sf_finish_parse+0x2088>
    4d30:	add	r6, r8, r9, lsl #3
    4d34:	b	4d40 <sf_finish_parse+0x1e94>
    4d38:	mov	r9, sl
    4d3c:	mov	r4, r6
    4d40:	sub	r0, r5, #20
    4d44:	mov	r1, #32
    4d48:	str	r0, [r4]
    4d4c:	ldr	r7, [r4, #4]
    4d50:	str	r1, [r7, r0]!
    4d54:	mov	r0, #4
    4d58:	str	r0, [r7, #12]
    4d5c:	ldr	r5, [r8, r9, lsl #3]
    4d60:	cmp	r5, #207	; 0xcf
    4d64:	bhi	4dc8 <sf_finish_parse+0x1f1c>
    4d68:	ldr	r8, [pc, #832]	; 50b0 <sf_finish_parse+0x2204>
    4d6c:	add	sl, r9, #1
    4d70:	cmp	r9, #15
    4d74:	add	r8, pc, r8
    4d78:	str	sl, [r8, #92]	; 0x5c
    4d7c:	bge	4f34 <sf_finish_parse+0x2088>
    4d80:	mov	r0, #1024	; 0x400
    4d84:	lsl	r5, r0, sl
    4d88:	mov	r0, r5
    4d8c:	bl	f1c <malloc@plt>
    4d90:	ldr	r9, [sp, #20]
    4d94:	cmp	r0, #0
    4d98:	str	r0, [r6, #12]
    4d9c:	beq	4f34 <sf_finish_parse+0x2088>
    4da0:	mov	r1, #0
    4da4:	mov	r2, r5
    4da8:	add	r6, r6, #8
    4dac:	bl	f88 <memset@plt>
    4db0:	cmp	r5, #207	; 0xcf
    4db4:	str	r5, [r6]
    4db8:	bhi	4dd8 <sf_finish_parse+0x1f2c>
    4dbc:	b	4f34 <sf_finish_parse+0x2088>
    4dc0:	.word	0x00042b20
    4dc4:	.word	0x00042588
    4dc8:	mov	sl, r9
    4dcc:	ldr	r9, [sp, #20]
    4dd0:	ldr	r8, [pc, #724]	; 50ac <sf_finish_parse+0x2200>
    4dd4:	add	r8, pc, r8
    4dd8:	sub	r0, r5, #208	; 0xd0
    4ddc:	str	r0, [r6]
    4de0:	ldr	r1, [r6, #4]
    4de4:	adds	r0, r1, r0
    4de8:	mov	r1, #21
    4dec:	str	r7, [r0, #4]
    4df0:	str	r1, [r0, #8]
    4df4:	mov	r1, #1761607680	; 0x69000000
    4df8:	str	r1, [r0, #20]
    4dfc:	str	r0, [r0, #96]	; 0x60
    4e00:	beq	4ecc <sf_finish_parse+0x2020>
    4e04:	ldr	r1, [r9, #96]	; 0x60
    4e08:	mov	r2, r0
    4e0c:	ldr	r3, [r2, #44]	; 0x2c
    4e10:	add	r7, r2, #84	; 0x54
    4e14:	cmp	r3, #0
    4e18:	mov	r3, #84	; 0x54
    4e1c:	movweq	r3, #60	; 0x3c
    4e20:	addeq	r7, r2, #60	; 0x3c
    4e24:	ldr	r2, [r2, r3]
    4e28:	str	r1, [r7]
    4e2c:	cmp	r2, #0
    4e30:	bne	4e0c <sf_finish_parse+0x1f60>
    4e34:	ldr	r1, [r0, #44]	; 0x2c
    4e38:	cmp	r9, #0
    4e3c:	clz	r1, r1
    4e40:	lsr	r1, r1, #5
    4e44:	str	r1, [r0, #44]	; 0x2c
    4e48:	ldr	r2, [r9, #44]	; 0x2c
    4e4c:	clz	r1, r2
    4e50:	lsr	r1, r1, #5
    4e54:	str	r1, [r9, #44]	; 0x2c
    4e58:	str	r9, [sp, #32]
    4e5c:	beq	4eac <sf_finish_parse+0x2000>
    4e60:	cmp	r2, #0
    4e64:	mov	r2, #60	; 0x3c
    4e68:	add	r1, r9, #60	; 0x3c
    4e6c:	movweq	r2, #84	; 0x54
    4e70:	addeq	r1, r9, #84	; 0x54
    4e74:	ldr	r2, [r9, r2]
    4e78:	cmp	r2, #0
    4e7c:	beq	4eb0 <sf_finish_parse+0x2004>
    4e80:	ldr	r3, [r2, #44]	; 0x2c
    4e84:	add	r1, r2, #84	; 0x54
    4e88:	cmp	r3, #0
    4e8c:	mov	r3, #84	; 0x54
    4e90:	movweq	r3, #60	; 0x3c
    4e94:	addeq	r1, r2, #60	; 0x3c
    4e98:	ldr	r2, [r2, r3]
    4e9c:	cmp	r2, #0
    4ea0:	bne	4e80 <sf_finish_parse+0x1fd4>
    4ea4:	b	4eb0 <sf_finish_parse+0x2004>
    4ea8:	.word	0x00042500
    4eac:	add	r1, sp, #32
    4eb0:	str	r0, [r1]
    4eb4:	ldr	r1, [r9, #44]	; 0x2c
    4eb8:	clz	r1, r1
    4ebc:	lsr	r1, r1, #5
    4ec0:	str	r1, [r9, #44]	; 0x2c
    4ec4:	ldr	r0, [r0, #96]	; 0x60
    4ec8:	str	r0, [r9, #96]	; 0x60
    4ecc:	ldr	r4, [pc, #480]	; 50b4 <sf_finish_parse+0x2208>
    4ed0:	mov	r0, r8
    4ed4:	ldr	r8, [r8, #32]
    4ed8:	add	r4, pc, r4
    4edc:	mov	r6, r4
    4ee0:	ldr	r5, [r6, sl, lsl #3]!
    4ee4:	cmp	r5, #207	; 0xcf
    4ee8:	bhi	4f40 <sf_finish_parse+0x2094>
    4eec:	add	r7, sl, #1
    4ef0:	cmp	sl, #15
    4ef4:	str	r7, [r0, #92]	; 0x5c
    4ef8:	bge	4f34 <sf_finish_parse+0x2088>
    4efc:	mov	r0, #1024	; 0x400
    4f00:	lsl	r5, r0, r7
    4f04:	mov	r0, r5
    4f08:	bl	f1c <malloc@plt>
    4f0c:	cmp	r0, #0
    4f10:	str	r0, [r6, #12]
    4f14:	beq	4f34 <sf_finish_parse+0x2088>
    4f18:	mov	r1, #0
    4f1c:	mov	r2, r5
    4f20:	add	r6, r6, #8
    4f24:	bl	f88 <memset@plt>
    4f28:	cmp	r5, #207	; 0xcf
    4f2c:	str	r5, [r6]
    4f30:	bhi	4f44 <sf_finish_parse+0x2098>
    4f34:	ldr	r0, [pc, #384]	; 50bc <sf_finish_parse+0x2210>
    4f38:	add	r0, pc, r0
    4f3c:	bl	2204 <sf_bpf_error>
    4f40:	mov	r7, sl
    4f44:	sub	r0, r5, #208	; 0xd0
    4f48:	cmp	r9, #0
    4f4c:	str	r0, [r6]
    4f50:	ldr	r1, [r6, #4]
    4f54:	add	r0, r1, r0
    4f58:	mov	r1, #6
    4f5c:	str	r1, [r0, #8]
    4f60:	str	r8, [r0, #20]
    4f64:	str	r0, [r0, #96]	; 0x60
    4f68:	beq	4f98 <sf_finish_parse+0x20ec>
    4f6c:	mov	r1, r9
    4f70:	ldr	r2, [r1, #44]	; 0x2c
    4f74:	add	r3, r1, #84	; 0x54
    4f78:	cmp	r2, #0
    4f7c:	mov	r2, #84	; 0x54
    4f80:	movweq	r2, #60	; 0x3c
    4f84:	addeq	r3, r1, #60	; 0x3c
    4f88:	ldr	r1, [r1, r2]
    4f8c:	str	r0, [r3]
    4f90:	cmp	r1, #0
    4f94:	bne	4f70 <sf_finish_parse+0x20c4>
    4f98:	ldr	r0, [r9, #44]	; 0x2c
    4f9c:	clz	r0, r0
    4fa0:	lsr	r0, r0, #5
    4fa4:	str	r0, [r9, #44]	; 0x2c
    4fa8:	ldr	r5, [r4, r7, lsl #3]!
    4fac:	ldr	r6, [pc, #260]	; 50b8 <sf_finish_parse+0x220c>
    4fb0:	cmp	r5, #207	; 0xcf
    4fb4:	add	r6, pc, r6
    4fb8:	bhi	5004 <sf_finish_parse+0x2158>
    4fbc:	add	r0, r7, #1
    4fc0:	cmp	r7, #15
    4fc4:	str	r0, [r6, #92]	; 0x5c
    4fc8:	bge	5064 <sf_finish_parse+0x21b8>
    4fcc:	mov	r1, #1024	; 0x400
    4fd0:	lsl	r5, r1, r0
    4fd4:	mov	r0, r5
    4fd8:	bl	f1c <malloc@plt>
    4fdc:	cmp	r0, #0
    4fe0:	str	r0, [r4, #12]
    4fe4:	beq	5064 <sf_finish_parse+0x21b8>
    4fe8:	mov	r1, #0
    4fec:	mov	r2, r5
    4ff0:	add	r4, r4, #8
    4ff4:	bl	f88 <memset@plt>
    4ff8:	cmp	r5, #207	; 0xcf
    4ffc:	str	r5, [r4]
    5000:	bls	5064 <sf_finish_parse+0x21b8>
    5004:	sub	r0, r5, #208	; 0xd0
    5008:	str	r0, [r4]
    500c:	ldr	r1, [r4, #4]
    5010:	add	r0, r1, r0
    5014:	mov	r1, #6
    5018:	str	r1, [r0, #8]
    501c:	mov	r1, #0
    5020:	str	r1, [r0, #20]
    5024:	mov	r1, r9
    5028:	str	r0, [r0, #96]	; 0x60
    502c:	ldr	r2, [r1, #44]	; 0x2c
    5030:	add	r3, r1, #84	; 0x54
    5034:	cmp	r2, #0
    5038:	mov	r2, #84	; 0x54
    503c:	movweq	r2, #60	; 0x3c
    5040:	addeq	r3, r1, #60	; 0x3c
    5044:	ldr	r1, [r1, r2]
    5048:	str	r0, [r3]
    504c:	cmp	r1, #0
    5050:	bne	502c <sf_finish_parse+0x2180>
    5054:	ldr	r0, [r9, #96]	; 0x60
    5058:	str	r0, [r6, #20]
    505c:	sub	sp, fp, #28
    5060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5064:	ldr	r0, [pc, #84]	; 50c0 <sf_finish_parse+0x2214>
    5068:	add	r0, pc, r0
    506c:	bl	2204 <sf_bpf_error>
    5070:	.word	0x00042150
    5074:	.word	0x000420ac
    5078:	.word	0x0004200c
    507c:	.word	0x00041f5c
    5080:	.word	0x00041ea4
    5084:	.word	0x00041d98
    5088:	.word	0x00041df8
    508c:	.word	0x00041db0
    5090:	.word	0x00041a34
    5094:	.word	0x00041994
    5098:	.word	0x000418f4
    509c:	.word	0x00041854
    50a0:	.word	0x00041f04
    50a4:	.word	0x00041754
    50a8:	.word	0x000417f4
    50ac:	.word	0x0004170c
    50b0:	.word	0x0004176c
    50b4:	.word	0x00041548
    50b8:	.word	0x0004152c
    50bc:	.word	0x0002445c
    50c0:	.word	0x0002432c

000050c4 <sf_gen_and>:
    50c4:	push	{r4, sl, fp, lr}
    50c8:	add	fp, sp, #8
    50cc:	sub	sp, sp, #4
    50d0:	cmp	r0, #0
    50d4:	beq	5108 <sf_gen_and+0x44>
    50d8:	ldr	ip, [r1, #96]	; 0x60
    50dc:	mov	r3, r0
    50e0:	ldr	lr, [r3, #44]	; 0x2c
    50e4:	mov	r2, #84	; 0x54
    50e8:	add	r4, r3, #84	; 0x54
    50ec:	cmp	lr, #0
    50f0:	movweq	r2, #60	; 0x3c
    50f4:	addeq	r4, r3, #60	; 0x3c
    50f8:	ldr	r3, [r3, r2]
    50fc:	str	ip, [r4]
    5100:	cmp	r3, #0
    5104:	bne	50e0 <sf_gen_and+0x1c>
    5108:	ldr	r2, [r0, #44]	; 0x2c
    510c:	cmp	r1, #0
    5110:	clz	r2, r2
    5114:	lsr	r2, r2, #5
    5118:	str	r2, [r0, #44]	; 0x2c
    511c:	ldr	r3, [r1, #44]	; 0x2c
    5120:	clz	r2, r3
    5124:	lsr	r2, r2, #5
    5128:	str	r2, [r1, #44]	; 0x2c
    512c:	str	r1, [sp]
    5130:	beq	517c <sf_gen_and+0xb8>
    5134:	cmp	r3, #0
    5138:	mov	r3, #60	; 0x3c
    513c:	add	r2, r1, #60	; 0x3c
    5140:	movweq	r3, #84	; 0x54
    5144:	addeq	r2, r1, #84	; 0x54
    5148:	ldr	r3, [r1, r3]
    514c:	cmp	r3, #0
    5150:	beq	5180 <sf_gen_and+0xbc>
    5154:	ldr	r4, [r3, #44]	; 0x2c
    5158:	add	r2, r3, #84	; 0x54
    515c:	cmp	r4, #0
    5160:	mov	r4, #84	; 0x54
    5164:	movweq	r4, #60	; 0x3c
    5168:	addeq	r2, r3, #60	; 0x3c
    516c:	ldr	r3, [r3, r4]
    5170:	cmp	r3, #0
    5174:	bne	5154 <sf_gen_and+0x90>
    5178:	b	5180 <sf_gen_and+0xbc>
    517c:	mov	r2, sp
    5180:	str	r0, [r2]
    5184:	ldr	r2, [r1, #44]	; 0x2c
    5188:	clz	r2, r2
    518c:	lsr	r2, r2, #5
    5190:	str	r2, [r1, #44]	; 0x2c
    5194:	ldr	r0, [r0, #96]	; 0x60
    5198:	str	r0, [r1, #96]	; 0x60
    519c:	sub	sp, fp, #8
    51a0:	pop	{r4, sl, fp, pc}

000051a4 <sf_gen_or>:
    51a4:	push	{r4, sl, fp, lr}
    51a8:	add	fp, sp, #8
    51ac:	sub	sp, sp, #4
    51b0:	ldr	r2, [r0, #44]	; 0x2c
    51b4:	cmp	r0, #0
    51b8:	clz	r2, r2
    51bc:	lsr	lr, r2, #5
    51c0:	str	lr, [r0, #44]	; 0x2c
    51c4:	beq	5200 <sf_gen_or+0x5c>
    51c8:	ldr	ip, [r1, #96]	; 0x60
    51cc:	mov	r3, r0
    51d0:	b	51d8 <sf_gen_or+0x34>
    51d4:	ldr	lr, [r3, #44]	; 0x2c
    51d8:	cmp	lr, #0
    51dc:	mov	r2, #84	; 0x54
    51e0:	add	r4, r3, #84	; 0x54
    51e4:	movweq	r2, #60	; 0x3c
    51e8:	addeq	r4, r3, #60	; 0x3c
    51ec:	ldr	r3, [r3, r2]
    51f0:	str	ip, [r4]
    51f4:	cmp	r3, #0
    51f8:	bne	51d4 <sf_gen_or+0x30>
    51fc:	ldr	lr, [r0, #44]	; 0x2c
    5200:	clz	r2, lr
    5204:	cmp	r1, #0
    5208:	lsr	r2, r2, #5
    520c:	str	r2, [r0, #44]	; 0x2c
    5210:	str	r1, [sp]
    5214:	beq	5244 <sf_gen_or+0xa0>
    5218:	mov	r3, r1
    521c:	ldr	r4, [r3, #44]	; 0x2c
    5220:	add	r2, r3, #84	; 0x54
    5224:	cmp	r4, #0
    5228:	mov	r4, #84	; 0x54
    522c:	movweq	r4, #60	; 0x3c
    5230:	addeq	r2, r3, #60	; 0x3c
    5234:	ldr	r3, [r3, r4]
    5238:	cmp	r3, #0
    523c:	bne	521c <sf_gen_or+0x78>
    5240:	b	5248 <sf_gen_or+0xa4>
    5244:	mov	r2, sp
    5248:	str	r0, [r2]
    524c:	ldr	r0, [r0, #96]	; 0x60
    5250:	str	r0, [r1, #96]	; 0x60
    5254:	sub	sp, fp, #8
    5258:	pop	{r4, sl, fp, pc}

0000525c <sf_gen_not>:
    525c:	ldr	r1, [r0, #44]	; 0x2c
    5260:	clz	r1, r1
    5264:	lsr	r1, r1, #5
    5268:	str	r1, [r0, #44]	; 0x2c
    526c:	bx	lr

00005270 <sf_gen_proto_abbrev>:
    5270:	push	{r4, r5, fp, lr}
    5274:	add	fp, sp, #8
    5278:	sub	sp, sp, #8
    527c:	sub	r0, r0, #1
    5280:	cmp	r0, #39	; 0x27
    5284:	bhi	64b4 <sf_gen_proto_abbrev+0x1244>
    5288:	add	r1, pc, #4
    528c:	ldr	r0, [r1, r0, lsl #2]
    5290:	add	pc, r1, r0
    5294:	.word	0x00001224
    5298:	.word	0x000000a0
    529c:	.word	0x00000278
    52a0:	.word	0x00000288
    52a4:	.word	0x000005b4
    52a8:	.word	0x00000298
    52ac:	.word	0x0000066c
    52b0:	.word	0x00000350
    52b4:	.word	0x00000358
    52b8:	.word	0x00000724
    52bc:	.word	0x0000073c
    52c0:	.word	0x00000228
    52c4:	.word	0x0000074c
    52c8:	.word	0x000008f4
    52cc:	.word	0x00000360
    52d0:	.word	0x0000075c
    52d4:	.word	0x00000238
    52d8:	.word	0x00000904
    52dc:	.word	0x00000370
    52e0:	.word	0x00000428
    52e4:	.word	0x0000091c
    52e8:	.word	0x000004e0
    52ec:	.word	0x000004e8
    52f0:	.word	0x0000076c
    52f4:	.word	0x000009d4
    52f8:	.word	0x00000248
    52fc:	.word	0x00000260
    5300:	.word	0x000009ec
    5304:	.word	0x00000ac8
    5308:	.word	0x000009fc
    530c:	.word	0x00000a0c
    5310:	.word	0x0000077c
    5314:	.word	0x000004f8
    5318:	.word	0x00001220
    531c:	.word	0x00001220
    5320:	.word	0x00000838
    5324:	.word	0x0000016c
    5328:	.word	0x000000b0
    532c:	.word	0x00000ad8
    5330:	.word	0x00001230
    5334:	mov	r0, #2048	; 0x800
    5338:	sub	sp, fp, #8
    533c:	pop	{r4, r5, fp, lr}
    5340:	b	6e1c <gen_linktype>
    5344:	mov	r0, #26
    5348:	mov	r1, #26
    534c:	mov	r2, #0
    5350:	bl	64d8 <gen_proto>
    5354:	mov	r5, r0
    5358:	mov	r0, #27
    535c:	mov	r1, #26
    5360:	mov	r2, #0
    5364:	bl	64d8 <gen_proto>
    5368:	mov	r4, r0
    536c:	ldr	r0, [r5, #44]	; 0x2c
    5370:	cmp	r5, #0
    5374:	clz	r0, r0
    5378:	lsr	r0, r0, #5
    537c:	str	r0, [r5, #44]	; 0x2c
    5380:	beq	53bc <sf_gen_proto_abbrev+0x14c>
    5384:	ldr	r1, [r4, #96]	; 0x60
    5388:	mov	r2, r5
    538c:	b	5394 <sf_gen_proto_abbrev+0x124>
    5390:	ldr	r0, [r2, #44]	; 0x2c
    5394:	cmp	r0, #0
    5398:	mov	r0, #84	; 0x54
    539c:	add	r3, r2, #84	; 0x54
    53a0:	movweq	r0, #60	; 0x3c
    53a4:	addeq	r3, r2, #60	; 0x3c
    53a8:	ldr	r2, [r2, r0]
    53ac:	str	r1, [r3]
    53b0:	cmp	r2, #0
    53b4:	bne	5390 <sf_gen_proto_abbrev+0x120>
    53b8:	ldr	r0, [r5, #44]	; 0x2c
    53bc:	clz	r0, r0
    53c0:	cmp	r4, #0
    53c4:	lsr	r0, r0, #5
    53c8:	str	r0, [r5, #44]	; 0x2c
    53cc:	str	r4, [sp, #4]
    53d0:	beq	5e28 <sf_gen_proto_abbrev+0xbb8>
    53d4:	mov	r1, r4
    53d8:	ldr	r2, [r1, #44]	; 0x2c
    53dc:	add	r0, r1, #84	; 0x54
    53e0:	cmp	r2, #0
    53e4:	mov	r2, #84	; 0x54
    53e8:	movweq	r2, #60	; 0x3c
    53ec:	addeq	r0, r1, #60	; 0x3c
    53f0:	ldr	r1, [r1, r2]
    53f4:	cmp	r1, #0
    53f8:	bne	53d8 <sf_gen_proto_abbrev+0x168>
    53fc:	b	5e2c <sf_gen_proto_abbrev+0xbbc>
    5400:	mov	r0, #24
    5404:	mov	r1, #26
    5408:	mov	r2, #0
    540c:	bl	64d8 <gen_proto>
    5410:	mov	r5, r0
    5414:	mov	r0, #25
    5418:	mov	r1, #26
    541c:	mov	r2, #0
    5420:	bl	64d8 <gen_proto>
    5424:	mov	r4, r0
    5428:	ldr	r0, [r5, #44]	; 0x2c
    542c:	cmp	r5, #0
    5430:	clz	r0, r0
    5434:	lsr	r0, r0, #5
    5438:	str	r0, [r5, #44]	; 0x2c
    543c:	beq	5478 <sf_gen_proto_abbrev+0x208>
    5440:	ldr	r1, [r4, #96]	; 0x60
    5444:	mov	r2, r5
    5448:	b	5450 <sf_gen_proto_abbrev+0x1e0>
    544c:	ldr	r0, [r2, #44]	; 0x2c
    5450:	cmp	r0, #0
    5454:	mov	r0, #84	; 0x54
    5458:	add	r3, r2, #84	; 0x54
    545c:	movweq	r0, #60	; 0x3c
    5460:	addeq	r3, r2, #60	; 0x3c
    5464:	ldr	r2, [r2, r0]
    5468:	str	r1, [r3]
    546c:	cmp	r2, #0
    5470:	bne	544c <sf_gen_proto_abbrev+0x1dc>
    5474:	ldr	r0, [r5, #44]	; 0x2c
    5478:	clz	r0, r0
    547c:	cmp	r4, #0
    5480:	lsr	r0, r0, #5
    5484:	str	r0, [r5, #44]	; 0x2c
    5488:	str	r4, [sp, #4]
    548c:	beq	5e28 <sf_gen_proto_abbrev+0xbb8>
    5490:	mov	r1, r4
    5494:	ldr	r2, [r1, #44]	; 0x2c
    5498:	add	r0, r1, #84	; 0x54
    549c:	cmp	r2, #0
    54a0:	mov	r2, #84	; 0x54
    54a4:	movweq	r2, #60	; 0x3c
    54a8:	addeq	r0, r1, #60	; 0x3c
    54ac:	ldr	r1, [r1, r2]
    54b0:	cmp	r1, #0
    54b4:	bne	5494 <sf_gen_proto_abbrev+0x224>
    54b8:	b	5e2c <sf_gen_proto_abbrev+0xbbc>
    54bc:	movw	r0, #24579	; 0x6003
    54c0:	sub	sp, fp, #8
    54c4:	pop	{r4, r5, fp, lr}
    54c8:	b	6e1c <gen_linktype>
    54cc:	movw	r0, #34525	; 0x86dd
    54d0:	sub	sp, fp, #8
    54d4:	pop	{r4, r5, fp, lr}
    54d8:	b	6e1c <gen_linktype>
    54dc:	mov	r0, #131	; 0x83
    54e0:	mov	r1, #24
    54e4:	mov	r2, #0
    54e8:	sub	sp, fp, #8
    54ec:	pop	{r4, r5, fp, lr}
    54f0:	b	64d8 <gen_proto>
    54f4:	mov	r0, #129	; 0x81
    54f8:	mov	r1, #24
    54fc:	mov	r2, #0
    5500:	sub	sp, fp, #8
    5504:	pop	{r4, r5, fp, lr}
    5508:	b	64d8 <gen_proto>
    550c:	movw	r0, #2054	; 0x806
    5510:	sub	sp, fp, #8
    5514:	pop	{r4, r5, fp, lr}
    5518:	b	6e1c <gen_linktype>
    551c:	movw	r0, #32821	; 0x8035
    5520:	sub	sp, fp, #8
    5524:	pop	{r4, r5, fp, lr}
    5528:	b	6e1c <gen_linktype>
    552c:	mov	r0, #6
    5530:	mov	r1, #2
    5534:	mov	r2, #0
    5538:	bl	64d8 <gen_proto>
    553c:	mov	r4, r0
    5540:	mov	r0, #6
    5544:	mov	r1, #17
    5548:	mov	r2, #0
    554c:	bl	64d8 <gen_proto>
    5550:	ldr	r1, [r0, #44]	; 0x2c
    5554:	cmp	r0, #0
    5558:	clz	r1, r1
    555c:	lsr	r1, r1, #5
    5560:	str	r1, [r0, #44]	; 0x2c
    5564:	beq	55a0 <sf_gen_proto_abbrev+0x330>
    5568:	ldr	r2, [r4, #96]	; 0x60
    556c:	mov	r3, r0
    5570:	b	5578 <sf_gen_proto_abbrev+0x308>
    5574:	ldr	r1, [r3, #44]	; 0x2c
    5578:	cmp	r1, #0
    557c:	mov	r1, #84	; 0x54
    5580:	add	r5, r3, #84	; 0x54
    5584:	movweq	r1, #60	; 0x3c
    5588:	addeq	r5, r3, #60	; 0x3c
    558c:	ldr	r3, [r3, r1]
    5590:	str	r2, [r5]
    5594:	cmp	r3, #0
    5598:	bne	5574 <sf_gen_proto_abbrev+0x304>
    559c:	ldr	r1, [r0, #44]	; 0x2c
    55a0:	clz	r1, r1
    55a4:	cmp	r4, #0
    55a8:	lsr	r1, r1, #5
    55ac:	str	r1, [r0, #44]	; 0x2c
    55b0:	str	r4, [sp, #4]
    55b4:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    55b8:	mov	r2, r4
    55bc:	ldr	r3, [r2, #44]	; 0x2c
    55c0:	add	r1, r2, #84	; 0x54
    55c4:	cmp	r3, #0
    55c8:	mov	r3, #84	; 0x54
    55cc:	movweq	r3, #60	; 0x3c
    55d0:	addeq	r1, r2, #60	; 0x3c
    55d4:	ldr	r2, [r2, r3]
    55d8:	cmp	r2, #0
    55dc:	bne	55bc <sf_gen_proto_abbrev+0x34c>
    55e0:	b	649c <sf_gen_proto_abbrev+0x122c>
    55e4:	mov	r0, #1
    55e8:	b	59bc <sf_gen_proto_abbrev+0x74c>
    55ec:	mov	r0, #2
    55f0:	b	59bc <sf_gen_proto_abbrev+0x74c>
    55f4:	movw	r0, #24578	; 0x6002
    55f8:	sub	sp, fp, #8
    55fc:	pop	{r4, r5, fp, lr}
    5600:	b	6e1c <gen_linktype>
    5604:	mov	r0, #51	; 0x33
    5608:	mov	r1, #2
    560c:	mov	r2, #0
    5610:	bl	64d8 <gen_proto>
    5614:	mov	r4, r0
    5618:	mov	r0, #51	; 0x33
    561c:	mov	r1, #17
    5620:	mov	r2, #0
    5624:	bl	64d8 <gen_proto>
    5628:	ldr	r1, [r0, #44]	; 0x2c
    562c:	cmp	r0, #0
    5630:	clz	r1, r1
    5634:	lsr	r1, r1, #5
    5638:	str	r1, [r0, #44]	; 0x2c
    563c:	beq	5678 <sf_gen_proto_abbrev+0x408>
    5640:	ldr	r2, [r4, #96]	; 0x60
    5644:	mov	r3, r0
    5648:	b	5650 <sf_gen_proto_abbrev+0x3e0>
    564c:	ldr	r1, [r3, #44]	; 0x2c
    5650:	cmp	r1, #0
    5654:	mov	r1, #84	; 0x54
    5658:	add	r5, r3, #84	; 0x54
    565c:	movweq	r1, #60	; 0x3c
    5660:	addeq	r5, r3, #60	; 0x3c
    5664:	ldr	r3, [r3, r1]
    5668:	str	r2, [r5]
    566c:	cmp	r3, #0
    5670:	bne	564c <sf_gen_proto_abbrev+0x3dc>
    5674:	ldr	r1, [r0, #44]	; 0x2c
    5678:	clz	r1, r1
    567c:	cmp	r4, #0
    5680:	lsr	r1, r1, #5
    5684:	str	r1, [r0, #44]	; 0x2c
    5688:	str	r4, [sp, #4]
    568c:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    5690:	mov	r2, r4
    5694:	ldr	r3, [r2, #44]	; 0x2c
    5698:	add	r1, r2, #84	; 0x54
    569c:	cmp	r3, #0
    56a0:	mov	r3, #84	; 0x54
    56a4:	movweq	r3, #60	; 0x3c
    56a8:	addeq	r1, r2, #60	; 0x3c
    56ac:	ldr	r2, [r2, r3]
    56b0:	cmp	r2, #0
    56b4:	bne	5694 <sf_gen_proto_abbrev+0x424>
    56b8:	b	649c <sf_gen_proto_abbrev+0x122c>
    56bc:	mov	r0, #50	; 0x32
    56c0:	mov	r1, #2
    56c4:	mov	r2, #0
    56c8:	bl	64d8 <gen_proto>
    56cc:	mov	r4, r0
    56d0:	mov	r0, #50	; 0x32
    56d4:	mov	r1, #17
    56d8:	mov	r2, #0
    56dc:	bl	64d8 <gen_proto>
    56e0:	ldr	r1, [r0, #44]	; 0x2c
    56e4:	cmp	r0, #0
    56e8:	clz	r1, r1
    56ec:	lsr	r1, r1, #5
    56f0:	str	r1, [r0, #44]	; 0x2c
    56f4:	beq	5730 <sf_gen_proto_abbrev+0x4c0>
    56f8:	ldr	r2, [r4, #96]	; 0x60
    56fc:	mov	r3, r0
    5700:	b	5708 <sf_gen_proto_abbrev+0x498>
    5704:	ldr	r1, [r3, #44]	; 0x2c
    5708:	cmp	r1, #0
    570c:	mov	r1, #84	; 0x54
    5710:	add	r5, r3, #84	; 0x54
    5714:	movweq	r1, #60	; 0x3c
    5718:	addeq	r5, r3, #60	; 0x3c
    571c:	ldr	r3, [r3, r1]
    5720:	str	r2, [r5]
    5724:	cmp	r3, #0
    5728:	bne	5704 <sf_gen_proto_abbrev+0x494>
    572c:	ldr	r1, [r0, #44]	; 0x2c
    5730:	clz	r1, r1
    5734:	cmp	r4, #0
    5738:	lsr	r1, r1, #5
    573c:	str	r1, [r0, #44]	; 0x2c
    5740:	str	r4, [sp, #4]
    5744:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    5748:	mov	r2, r4
    574c:	ldr	r3, [r2, #44]	; 0x2c
    5750:	add	r1, r2, #84	; 0x54
    5754:	cmp	r3, #0
    5758:	mov	r3, #84	; 0x54
    575c:	movweq	r3, #60	; 0x3c
    5760:	addeq	r1, r2, #60	; 0x3c
    5764:	ldr	r2, [r2, r3]
    5768:	cmp	r2, #0
    576c:	bne	574c <sf_gen_proto_abbrev+0x4dc>
    5770:	b	649c <sf_gen_proto_abbrev+0x122c>
    5774:	mov	r0, #112	; 0x70
    5778:	b	59bc <sf_gen_proto_abbrev+0x74c>
    577c:	movw	r0, #33011	; 0x80f3
    5780:	sub	sp, fp, #8
    5784:	pop	{r4, r5, fp, lr}
    5788:	b	6e1c <gen_linktype>
    578c:	mov	r0, #15
    5790:	mov	r1, #26
    5794:	mov	r2, #0
    5798:	bl	64d8 <gen_proto>
    579c:	mov	r5, r0
    57a0:	mov	r0, #16
    57a4:	mov	r1, #26
    57a8:	mov	r2, #0
    57ac:	bl	64d8 <gen_proto>
    57b0:	mov	r4, r0
    57b4:	ldr	r0, [r5, #44]	; 0x2c
    57b8:	cmp	r5, #0
    57bc:	clz	r0, r0
    57c0:	lsr	r0, r0, #5
    57c4:	str	r0, [r5, #44]	; 0x2c
    57c8:	beq	5804 <sf_gen_proto_abbrev+0x594>
    57cc:	ldr	r1, [r4, #96]	; 0x60
    57d0:	mov	r2, r5
    57d4:	b	57dc <sf_gen_proto_abbrev+0x56c>
    57d8:	ldr	r0, [r2, #44]	; 0x2c
    57dc:	cmp	r0, #0
    57e0:	mov	r0, #84	; 0x54
    57e4:	add	r3, r2, #84	; 0x54
    57e8:	movweq	r0, #60	; 0x3c
    57ec:	addeq	r3, r2, #60	; 0x3c
    57f0:	ldr	r2, [r2, r0]
    57f4:	str	r1, [r3]
    57f8:	cmp	r2, #0
    57fc:	bne	57d8 <sf_gen_proto_abbrev+0x568>
    5800:	ldr	r0, [r5, #44]	; 0x2c
    5804:	clz	r0, r0
    5808:	cmp	r4, #0
    580c:	lsr	r0, r0, #5
    5810:	str	r0, [r5, #44]	; 0x2c
    5814:	str	r4, [sp, #4]
    5818:	beq	5e44 <sf_gen_proto_abbrev+0xbd4>
    581c:	mov	r1, r4
    5820:	ldr	r2, [r1, #44]	; 0x2c
    5824:	add	r0, r1, #84	; 0x54
    5828:	cmp	r2, #0
    582c:	mov	r2, #84	; 0x54
    5830:	movweq	r2, #60	; 0x3c
    5834:	addeq	r0, r1, #60	; 0x3c
    5838:	ldr	r1, [r1, r2]
    583c:	cmp	r1, #0
    5840:	bne	5820 <sf_gen_proto_abbrev+0x5b0>
    5844:	b	5e48 <sf_gen_proto_abbrev+0xbd8>
    5848:	mov	r0, #132	; 0x84
    584c:	mov	r1, #2
    5850:	mov	r2, #0
    5854:	bl	64d8 <gen_proto>
    5858:	mov	r4, r0
    585c:	mov	r0, #132	; 0x84
    5860:	mov	r1, #17
    5864:	mov	r2, #0
    5868:	bl	64d8 <gen_proto>
    586c:	ldr	r1, [r0, #44]	; 0x2c
    5870:	cmp	r0, #0
    5874:	clz	r1, r1
    5878:	lsr	r1, r1, #5
    587c:	str	r1, [r0, #44]	; 0x2c
    5880:	beq	58bc <sf_gen_proto_abbrev+0x64c>
    5884:	ldr	r2, [r4, #96]	; 0x60
    5888:	mov	r3, r0
    588c:	b	5894 <sf_gen_proto_abbrev+0x624>
    5890:	ldr	r1, [r3, #44]	; 0x2c
    5894:	cmp	r1, #0
    5898:	mov	r1, #84	; 0x54
    589c:	add	r5, r3, #84	; 0x54
    58a0:	movweq	r1, #60	; 0x3c
    58a4:	addeq	r5, r3, #60	; 0x3c
    58a8:	ldr	r3, [r3, r1]
    58ac:	str	r2, [r5]
    58b0:	cmp	r3, #0
    58b4:	bne	5890 <sf_gen_proto_abbrev+0x620>
    58b8:	ldr	r1, [r0, #44]	; 0x2c
    58bc:	clz	r1, r1
    58c0:	cmp	r4, #0
    58c4:	lsr	r1, r1, #5
    58c8:	str	r1, [r0, #44]	; 0x2c
    58cc:	str	r4, [sp, #4]
    58d0:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    58d4:	mov	r2, r4
    58d8:	ldr	r3, [r2, #44]	; 0x2c
    58dc:	add	r1, r2, #84	; 0x54
    58e0:	cmp	r3, #0
    58e4:	mov	r3, #84	; 0x54
    58e8:	movweq	r3, #60	; 0x3c
    58ec:	addeq	r1, r2, #60	; 0x3c
    58f0:	ldr	r2, [r2, r3]
    58f4:	cmp	r2, #0
    58f8:	bne	58d8 <sf_gen_proto_abbrev+0x668>
    58fc:	b	649c <sf_gen_proto_abbrev+0x122c>
    5900:	mov	r0, #17
    5904:	mov	r1, #2
    5908:	mov	r2, #0
    590c:	bl	64d8 <gen_proto>
    5910:	mov	r4, r0
    5914:	mov	r0, #17
    5918:	mov	r1, #17
    591c:	mov	r2, #0
    5920:	bl	64d8 <gen_proto>
    5924:	ldr	r1, [r0, #44]	; 0x2c
    5928:	cmp	r0, #0
    592c:	clz	r1, r1
    5930:	lsr	r1, r1, #5
    5934:	str	r1, [r0, #44]	; 0x2c
    5938:	beq	5974 <sf_gen_proto_abbrev+0x704>
    593c:	ldr	r2, [r4, #96]	; 0x60
    5940:	mov	r3, r0
    5944:	b	594c <sf_gen_proto_abbrev+0x6dc>
    5948:	ldr	r1, [r3, #44]	; 0x2c
    594c:	cmp	r1, #0
    5950:	mov	r1, #84	; 0x54
    5954:	add	r5, r3, #84	; 0x54
    5958:	movweq	r1, #60	; 0x3c
    595c:	addeq	r5, r3, #60	; 0x3c
    5960:	ldr	r3, [r3, r1]
    5964:	str	r2, [r5]
    5968:	cmp	r3, #0
    596c:	bne	5948 <sf_gen_proto_abbrev+0x6d8>
    5970:	ldr	r1, [r0, #44]	; 0x2c
    5974:	clz	r1, r1
    5978:	cmp	r4, #0
    597c:	lsr	r1, r1, #5
    5980:	str	r1, [r0, #44]	; 0x2c
    5984:	str	r4, [sp, #4]
    5988:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    598c:	mov	r2, r4
    5990:	ldr	r3, [r2, #44]	; 0x2c
    5994:	add	r1, r2, #84	; 0x54
    5998:	cmp	r3, #0
    599c:	mov	r3, #84	; 0x54
    59a0:	movweq	r3, #60	; 0x3c
    59a4:	addeq	r1, r2, #60	; 0x3c
    59a8:	ldr	r2, [r2, r3]
    59ac:	cmp	r2, #0
    59b0:	bne	5990 <sf_gen_proto_abbrev+0x720>
    59b4:	b	649c <sf_gen_proto_abbrev+0x122c>
    59b8:	mov	r0, #9
    59bc:	mov	r1, #2
    59c0:	mov	r2, #0
    59c4:	sub	sp, fp, #8
    59c8:	pop	{r4, r5, fp, lr}
    59cc:	b	64d8 <gen_proto>
    59d0:	movw	r0, #32923	; 0x809b
    59d4:	sub	sp, fp, #8
    59d8:	pop	{r4, r5, fp, lr}
    59dc:	b	6e1c <gen_linktype>
    59e0:	movw	r0, #24580	; 0x6004
    59e4:	sub	sp, fp, #8
    59e8:	pop	{r4, r5, fp, lr}
    59ec:	b	6e1c <gen_linktype>
    59f0:	movw	r0, #24577	; 0x6001
    59f4:	sub	sp, fp, #8
    59f8:	pop	{r4, r5, fp, lr}
    59fc:	b	6e1c <gen_linktype>
    5a00:	mov	r0, #254	; 0xfe
    5a04:	sub	sp, fp, #8
    5a08:	pop	{r4, r5, fp, lr}
    5a0c:	b	6e1c <gen_linktype>
    5a10:	mov	r0, #16
    5a14:	mov	r1, #26
    5a18:	mov	r2, #0
    5a1c:	bl	64d8 <gen_proto>
    5a20:	mov	r5, r0
    5a24:	mov	r0, #17
    5a28:	mov	r1, #26
    5a2c:	mov	r2, #0
    5a30:	bl	64d8 <gen_proto>
    5a34:	mov	r4, r0
    5a38:	ldr	r0, [r5, #44]	; 0x2c
    5a3c:	cmp	r5, #0
    5a40:	clz	r0, r0
    5a44:	lsr	r0, r0, #5
    5a48:	str	r0, [r5, #44]	; 0x2c
    5a4c:	beq	5a88 <sf_gen_proto_abbrev+0x818>
    5a50:	ldr	r1, [r4, #96]	; 0x60
    5a54:	mov	r2, r5
    5a58:	b	5a60 <sf_gen_proto_abbrev+0x7f0>
    5a5c:	ldr	r0, [r2, #44]	; 0x2c
    5a60:	cmp	r0, #0
    5a64:	mov	r0, #84	; 0x54
    5a68:	add	r3, r2, #84	; 0x54
    5a6c:	movweq	r0, #60	; 0x3c
    5a70:	addeq	r3, r2, #60	; 0x3c
    5a74:	ldr	r2, [r2, r0]
    5a78:	str	r1, [r3]
    5a7c:	cmp	r2, #0
    5a80:	bne	5a5c <sf_gen_proto_abbrev+0x7ec>
    5a84:	ldr	r0, [r5, #44]	; 0x2c
    5a88:	clz	r0, r0
    5a8c:	cmp	r4, #0
    5a90:	lsr	r0, r0, #5
    5a94:	str	r0, [r5, #44]	; 0x2c
    5a98:	str	r4, [sp, #4]
    5a9c:	beq	5ef8 <sf_gen_proto_abbrev+0xc88>
    5aa0:	mov	r1, r4
    5aa4:	ldr	r2, [r1, #44]	; 0x2c
    5aa8:	add	r0, r1, #84	; 0x54
    5aac:	cmp	r2, #0
    5ab0:	mov	r2, #84	; 0x54
    5ab4:	movweq	r2, #60	; 0x3c
    5ab8:	addeq	r0, r1, #60	; 0x3c
    5abc:	ldr	r1, [r1, r2]
    5ac0:	cmp	r1, #0
    5ac4:	bne	5aa4 <sf_gen_proto_abbrev+0x834>
    5ac8:	b	5efc <sf_gen_proto_abbrev+0xc8c>
    5acc:	mov	r0, #24
    5ad0:	mov	r1, #26
    5ad4:	mov	r2, #0
    5ad8:	bl	64d8 <gen_proto>
    5adc:	mov	r5, r0
    5ae0:	mov	r0, #25
    5ae4:	mov	r1, #26
    5ae8:	mov	r2, #0
    5aec:	bl	64d8 <gen_proto>
    5af0:	mov	r4, r0
    5af4:	ldr	r0, [r5, #44]	; 0x2c
    5af8:	cmp	r5, #0
    5afc:	clz	r0, r0
    5b00:	lsr	r0, r0, #5
    5b04:	str	r0, [r5, #44]	; 0x2c
    5b08:	beq	5b44 <sf_gen_proto_abbrev+0x8d4>
    5b0c:	ldr	r1, [r4, #96]	; 0x60
    5b10:	mov	r2, r5
    5b14:	b	5b1c <sf_gen_proto_abbrev+0x8ac>
    5b18:	ldr	r0, [r2, #44]	; 0x2c
    5b1c:	cmp	r0, #0
    5b20:	mov	r0, #84	; 0x54
    5b24:	add	r3, r2, #84	; 0x54
    5b28:	movweq	r0, #60	; 0x3c
    5b2c:	addeq	r3, r2, #60	; 0x3c
    5b30:	ldr	r2, [r2, r0]
    5b34:	str	r1, [r3]
    5b38:	cmp	r2, #0
    5b3c:	bne	5b18 <sf_gen_proto_abbrev+0x8a8>
    5b40:	ldr	r0, [r5, #44]	; 0x2c
    5b44:	clz	r0, r0
    5b48:	cmp	r4, #0
    5b4c:	lsr	r0, r0, #5
    5b50:	str	r0, [r5, #44]	; 0x2c
    5b54:	str	r4, [sp, #4]
    5b58:	beq	5fac <sf_gen_proto_abbrev+0xd3c>
    5b5c:	mov	r1, r4
    5b60:	ldr	r2, [r1, #44]	; 0x2c
    5b64:	add	r0, r1, #84	; 0x54
    5b68:	cmp	r2, #0
    5b6c:	mov	r2, #84	; 0x54
    5b70:	movweq	r2, #60	; 0x3c
    5b74:	addeq	r0, r1, #60	; 0x3c
    5b78:	ldr	r1, [r1, r2]
    5b7c:	cmp	r1, #0
    5b80:	bne	5b60 <sf_gen_proto_abbrev+0x8f0>
    5b84:	b	5fb0 <sf_gen_proto_abbrev+0xd40>
    5b88:	movw	r0, #24583	; 0x6007
    5b8c:	sub	sp, fp, #8
    5b90:	pop	{r4, r5, fp, lr}
    5b94:	b	6e1c <gen_linktype>
    5b98:	mov	r0, #58	; 0x3a
    5b9c:	mov	r1, #17
    5ba0:	mov	r2, #0
    5ba4:	sub	sp, fp, #8
    5ba8:	pop	{r4, r5, fp, lr}
    5bac:	b	64d8 <gen_proto>
    5bb0:	mov	r0, #103	; 0x67
    5bb4:	mov	r1, #2
    5bb8:	mov	r2, #0
    5bbc:	bl	64d8 <gen_proto>
    5bc0:	mov	r4, r0
    5bc4:	mov	r0, #103	; 0x67
    5bc8:	mov	r1, #17
    5bcc:	mov	r2, #0
    5bd0:	bl	64d8 <gen_proto>
    5bd4:	ldr	r1, [r0, #44]	; 0x2c
    5bd8:	cmp	r0, #0
    5bdc:	clz	r1, r1
    5be0:	lsr	r1, r1, #5
    5be4:	str	r1, [r0, #44]	; 0x2c
    5be8:	beq	5c24 <sf_gen_proto_abbrev+0x9b4>
    5bec:	ldr	r2, [r4, #96]	; 0x60
    5bf0:	mov	r3, r0
    5bf4:	b	5bfc <sf_gen_proto_abbrev+0x98c>
    5bf8:	ldr	r1, [r3, #44]	; 0x2c
    5bfc:	cmp	r1, #0
    5c00:	mov	r1, #84	; 0x54
    5c04:	add	r5, r3, #84	; 0x54
    5c08:	movweq	r1, #60	; 0x3c
    5c0c:	addeq	r5, r3, #60	; 0x3c
    5c10:	ldr	r3, [r3, r1]
    5c14:	str	r2, [r5]
    5c18:	cmp	r3, #0
    5c1c:	bne	5bf8 <sf_gen_proto_abbrev+0x988>
    5c20:	ldr	r1, [r0, #44]	; 0x2c
    5c24:	clz	r1, r1
    5c28:	cmp	r4, #0
    5c2c:	lsr	r1, r1, #5
    5c30:	str	r1, [r0, #44]	; 0x2c
    5c34:	str	r4, [sp, #4]
    5c38:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    5c3c:	mov	r2, r4
    5c40:	ldr	r3, [r2, #44]	; 0x2c
    5c44:	add	r1, r2, #84	; 0x54
    5c48:	cmp	r3, #0
    5c4c:	mov	r3, #84	; 0x54
    5c50:	movweq	r3, #60	; 0x3c
    5c54:	addeq	r1, r2, #60	; 0x3c
    5c58:	ldr	r2, [r2, r3]
    5c5c:	cmp	r2, #0
    5c60:	bne	5c40 <sf_gen_proto_abbrev+0x9d0>
    5c64:	b	649c <sf_gen_proto_abbrev+0x122c>
    5c68:	mov	r0, #130	; 0x82
    5c6c:	mov	r1, #24
    5c70:	mov	r2, #0
    5c74:	sub	sp, fp, #8
    5c78:	pop	{r4, r5, fp, lr}
    5c7c:	b	64d8 <gen_proto>
    5c80:	mov	r0, #66	; 0x42
    5c84:	sub	sp, fp, #8
    5c88:	pop	{r4, r5, fp, lr}
    5c8c:	b	6e1c <gen_linktype>
    5c90:	mov	r0, #240	; 0xf0
    5c94:	sub	sp, fp, #8
    5c98:	pop	{r4, r5, fp, lr}
    5c9c:	b	6e1c <gen_linktype>
    5ca0:	mov	r0, #15
    5ca4:	mov	r1, #26
    5ca8:	mov	r2, #0
    5cac:	bl	64d8 <gen_proto>
    5cb0:	mov	r5, r0
    5cb4:	mov	r0, #17
    5cb8:	mov	r1, #26
    5cbc:	mov	r2, #0
    5cc0:	bl	64d8 <gen_proto>
    5cc4:	mov	r4, r0
    5cc8:	ldr	r0, [r5, #44]	; 0x2c
    5ccc:	cmp	r5, #0
    5cd0:	clz	r0, r0
    5cd4:	lsr	r0, r0, #5
    5cd8:	str	r0, [r5, #44]	; 0x2c
    5cdc:	beq	5d18 <sf_gen_proto_abbrev+0xaa8>
    5ce0:	ldr	r1, [r4, #96]	; 0x60
    5ce4:	mov	r2, r5
    5ce8:	b	5cf0 <sf_gen_proto_abbrev+0xa80>
    5cec:	ldr	r0, [r2, #44]	; 0x2c
    5cf0:	cmp	r0, #0
    5cf4:	mov	r0, #84	; 0x54
    5cf8:	add	r3, r2, #84	; 0x54
    5cfc:	movweq	r0, #60	; 0x3c
    5d00:	addeq	r3, r2, #60	; 0x3c
    5d04:	ldr	r2, [r2, r0]
    5d08:	str	r1, [r3]
    5d0c:	cmp	r2, #0
    5d10:	bne	5cec <sf_gen_proto_abbrev+0xa7c>
    5d14:	ldr	r0, [r5, #44]	; 0x2c
    5d18:	clz	r0, r0
    5d1c:	cmp	r4, #0
    5d20:	lsr	r0, r0, #5
    5d24:	str	r0, [r5, #44]	; 0x2c
    5d28:	str	r4, [sp, #4]
    5d2c:	beq	627c <sf_gen_proto_abbrev+0x100c>
    5d30:	mov	r1, r4
    5d34:	ldr	r2, [r1, #44]	; 0x2c
    5d38:	add	r0, r1, #84	; 0x54
    5d3c:	cmp	r2, #0
    5d40:	mov	r2, #84	; 0x54
    5d44:	movweq	r2, #60	; 0x3c
    5d48:	addeq	r0, r1, #60	; 0x3c
    5d4c:	ldr	r1, [r1, r2]
    5d50:	cmp	r1, #0
    5d54:	bne	5d34 <sf_gen_proto_abbrev+0xac4>
    5d58:	b	6280 <sf_gen_proto_abbrev+0x1010>
    5d5c:	mov	r0, #224	; 0xe0
    5d60:	sub	sp, fp, #8
    5d64:	pop	{r4, r5, fp, lr}
    5d68:	b	6e1c <gen_linktype>
    5d6c:	mov	r0, #18
    5d70:	mov	r1, #26
    5d74:	mov	r2, #0
    5d78:	bl	64d8 <gen_proto>
    5d7c:	mov	r5, r0
    5d80:	mov	r0, #20
    5d84:	mov	r1, #26
    5d88:	mov	r2, #0
    5d8c:	bl	64d8 <gen_proto>
    5d90:	mov	r4, r0
    5d94:	ldr	r0, [r5, #44]	; 0x2c
    5d98:	cmp	r5, #0
    5d9c:	clz	r0, r0
    5da0:	lsr	r0, r0, #5
    5da4:	str	r0, [r5, #44]	; 0x2c
    5da8:	beq	5de4 <sf_gen_proto_abbrev+0xb74>
    5dac:	ldr	r1, [r4, #96]	; 0x60
    5db0:	mov	r2, r5
    5db4:	b	5dbc <sf_gen_proto_abbrev+0xb4c>
    5db8:	ldr	r0, [r2, #44]	; 0x2c
    5dbc:	cmp	r0, #0
    5dc0:	mov	r0, #84	; 0x54
    5dc4:	add	r3, r2, #84	; 0x54
    5dc8:	movweq	r0, #60	; 0x3c
    5dcc:	addeq	r3, r2, #60	; 0x3c
    5dd0:	ldr	r2, [r2, r0]
    5dd4:	str	r1, [r3]
    5dd8:	cmp	r2, #0
    5ddc:	bne	5db8 <sf_gen_proto_abbrev+0xb48>
    5de0:	ldr	r0, [r5, #44]	; 0x2c
    5de4:	clz	r0, r0
    5de8:	cmp	r4, #0
    5dec:	lsr	r0, r0, #5
    5df0:	str	r0, [r5, #44]	; 0x2c
    5df4:	str	r4, [sp, #4]
    5df8:	beq	5e28 <sf_gen_proto_abbrev+0xbb8>
    5dfc:	mov	r1, r4
    5e00:	ldr	r2, [r1, #44]	; 0x2c
    5e04:	add	r0, r1, #84	; 0x54
    5e08:	cmp	r2, #0
    5e0c:	mov	r2, #84	; 0x54
    5e10:	movweq	r2, #60	; 0x3c
    5e14:	addeq	r0, r1, #60	; 0x3c
    5e18:	ldr	r1, [r1, r2]
    5e1c:	cmp	r1, #0
    5e20:	bne	5e00 <sf_gen_proto_abbrev+0xb90>
    5e24:	b	5e2c <sf_gen_proto_abbrev+0xbbc>
    5e28:	add	r0, sp, #4
    5e2c:	str	r5, [r0]
    5e30:	ldr	r0, [r5, #96]	; 0x60
    5e34:	str	r0, [r4, #96]	; 0x60
    5e38:	mov	r0, r4
    5e3c:	sub	sp, fp, #8
    5e40:	pop	{r4, r5, fp, pc}
    5e44:	add	r0, sp, #4
    5e48:	str	r5, [r0]
    5e4c:	mov	r1, #26
    5e50:	mov	r2, #0
    5e54:	ldr	r0, [r5, #96]	; 0x60
    5e58:	str	r0, [r4, #96]	; 0x60
    5e5c:	mov	r0, #17
    5e60:	bl	64d8 <gen_proto>
    5e64:	ldr	r1, [r0, #44]	; 0x2c
    5e68:	cmp	r0, #0
    5e6c:	clz	r1, r1
    5e70:	lsr	r1, r1, #5
    5e74:	str	r1, [r0, #44]	; 0x2c
    5e78:	beq	5eb4 <sf_gen_proto_abbrev+0xc44>
    5e7c:	ldr	r2, [r4, #96]	; 0x60
    5e80:	mov	r3, r0
    5e84:	b	5e8c <sf_gen_proto_abbrev+0xc1c>
    5e88:	ldr	r1, [r3, #44]	; 0x2c
    5e8c:	cmp	r1, #0
    5e90:	mov	r1, #84	; 0x54
    5e94:	add	r5, r3, #84	; 0x54
    5e98:	movweq	r1, #60	; 0x3c
    5e9c:	addeq	r5, r3, #60	; 0x3c
    5ea0:	ldr	r3, [r3, r1]
    5ea4:	str	r2, [r5]
    5ea8:	cmp	r3, #0
    5eac:	bne	5e88 <sf_gen_proto_abbrev+0xc18>
    5eb0:	ldr	r1, [r0, #44]	; 0x2c
    5eb4:	clz	r1, r1
    5eb8:	cmp	r4, #0
    5ebc:	lsr	r1, r1, #5
    5ec0:	str	r1, [r0, #44]	; 0x2c
    5ec4:	str	r4, [sp, #4]
    5ec8:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    5ecc:	mov	r2, r4
    5ed0:	ldr	r3, [r2, #44]	; 0x2c
    5ed4:	add	r1, r2, #84	; 0x54
    5ed8:	cmp	r3, #0
    5edc:	mov	r3, #84	; 0x54
    5ee0:	movweq	r3, #60	; 0x3c
    5ee4:	addeq	r1, r2, #60	; 0x3c
    5ee8:	ldr	r2, [r2, r3]
    5eec:	cmp	r2, #0
    5ef0:	bne	5ed0 <sf_gen_proto_abbrev+0xc60>
    5ef4:	b	649c <sf_gen_proto_abbrev+0x122c>
    5ef8:	add	r0, sp, #4
    5efc:	str	r5, [r0]
    5f00:	mov	r1, #26
    5f04:	mov	r2, #0
    5f08:	ldr	r0, [r5, #96]	; 0x60
    5f0c:	str	r0, [r4, #96]	; 0x60
    5f10:	mov	r0, #20
    5f14:	bl	64d8 <gen_proto>
    5f18:	ldr	r1, [r0, #44]	; 0x2c
    5f1c:	cmp	r0, #0
    5f20:	clz	r1, r1
    5f24:	lsr	r1, r1, #5
    5f28:	str	r1, [r0, #44]	; 0x2c
    5f2c:	beq	5f68 <sf_gen_proto_abbrev+0xcf8>
    5f30:	ldr	r2, [r4, #96]	; 0x60
    5f34:	mov	r3, r0
    5f38:	b	5f40 <sf_gen_proto_abbrev+0xcd0>
    5f3c:	ldr	r1, [r3, #44]	; 0x2c
    5f40:	cmp	r1, #0
    5f44:	mov	r1, #84	; 0x54
    5f48:	add	r5, r3, #84	; 0x54
    5f4c:	movweq	r1, #60	; 0x3c
    5f50:	addeq	r5, r3, #60	; 0x3c
    5f54:	ldr	r3, [r3, r1]
    5f58:	str	r2, [r5]
    5f5c:	cmp	r3, #0
    5f60:	bne	5f3c <sf_gen_proto_abbrev+0xccc>
    5f64:	ldr	r1, [r0, #44]	; 0x2c
    5f68:	clz	r1, r1
    5f6c:	cmp	r4, #0
    5f70:	lsr	r1, r1, #5
    5f74:	str	r1, [r0, #44]	; 0x2c
    5f78:	str	r4, [sp, #4]
    5f7c:	beq	6060 <sf_gen_proto_abbrev+0xdf0>
    5f80:	mov	r2, r4
    5f84:	ldr	r3, [r2, #44]	; 0x2c
    5f88:	add	r1, r2, #84	; 0x54
    5f8c:	cmp	r3, #0
    5f90:	mov	r3, #84	; 0x54
    5f94:	movweq	r3, #60	; 0x3c
    5f98:	addeq	r1, r2, #60	; 0x3c
    5f9c:	ldr	r2, [r2, r3]
    5fa0:	cmp	r2, #0
    5fa4:	bne	5f84 <sf_gen_proto_abbrev+0xd14>
    5fa8:	b	6064 <sf_gen_proto_abbrev+0xdf4>
    5fac:	add	r0, sp, #4
    5fb0:	str	r5, [r0]
    5fb4:	mov	r1, #26
    5fb8:	mov	r2, #0
    5fbc:	ldr	r0, [r5, #96]	; 0x60
    5fc0:	str	r0, [r4, #96]	; 0x60
    5fc4:	mov	r0, #26
    5fc8:	bl	64d8 <gen_proto>
    5fcc:	ldr	r1, [r0, #44]	; 0x2c
    5fd0:	cmp	r0, #0
    5fd4:	clz	r1, r1
    5fd8:	lsr	r1, r1, #5
    5fdc:	str	r1, [r0, #44]	; 0x2c
    5fe0:	beq	601c <sf_gen_proto_abbrev+0xdac>
    5fe4:	ldr	r2, [r4, #96]	; 0x60
    5fe8:	mov	r3, r0
    5fec:	b	5ff4 <sf_gen_proto_abbrev+0xd84>
    5ff0:	ldr	r1, [r3, #44]	; 0x2c
    5ff4:	cmp	r1, #0
    5ff8:	mov	r1, #84	; 0x54
    5ffc:	add	r5, r3, #84	; 0x54
    6000:	movweq	r1, #60	; 0x3c
    6004:	addeq	r5, r3, #60	; 0x3c
    6008:	ldr	r3, [r3, r1]
    600c:	str	r2, [r5]
    6010:	cmp	r3, #0
    6014:	bne	5ff0 <sf_gen_proto_abbrev+0xd80>
    6018:	ldr	r1, [r0, #44]	; 0x2c
    601c:	clz	r1, r1
    6020:	cmp	r4, #0
    6024:	lsr	r1, r1, #5
    6028:	str	r1, [r0, #44]	; 0x2c
    602c:	str	r4, [sp, #4]
    6030:	beq	6114 <sf_gen_proto_abbrev+0xea4>
    6034:	mov	r2, r4
    6038:	ldr	r3, [r2, #44]	; 0x2c
    603c:	add	r1, r2, #84	; 0x54
    6040:	cmp	r3, #0
    6044:	mov	r3, #84	; 0x54
    6048:	movweq	r3, #60	; 0x3c
    604c:	addeq	r1, r2, #60	; 0x3c
    6050:	ldr	r2, [r2, r3]
    6054:	cmp	r2, #0
    6058:	bne	6038 <sf_gen_proto_abbrev+0xdc8>
    605c:	b	6118 <sf_gen_proto_abbrev+0xea8>
    6060:	add	r1, sp, #4
    6064:	str	r0, [r1]
    6068:	mov	r1, #26
    606c:	mov	r2, #0
    6070:	ldr	r0, [r0, #96]	; 0x60
    6074:	str	r0, [r4, #96]	; 0x60
    6078:	mov	r0, #25
    607c:	bl	64d8 <gen_proto>
    6080:	ldr	r1, [r0, #44]	; 0x2c
    6084:	cmp	r0, #0
    6088:	clz	r1, r1
    608c:	lsr	r1, r1, #5
    6090:	str	r1, [r0, #44]	; 0x2c
    6094:	beq	60d0 <sf_gen_proto_abbrev+0xe60>
    6098:	ldr	r2, [r4, #96]	; 0x60
    609c:	mov	r3, r0
    60a0:	b	60a8 <sf_gen_proto_abbrev+0xe38>
    60a4:	ldr	r1, [r3, #44]	; 0x2c
    60a8:	cmp	r1, #0
    60ac:	mov	r1, #84	; 0x54
    60b0:	add	r5, r3, #84	; 0x54
    60b4:	movweq	r1, #60	; 0x3c
    60b8:	addeq	r5, r3, #60	; 0x3c
    60bc:	ldr	r3, [r3, r1]
    60c0:	str	r2, [r5]
    60c4:	cmp	r3, #0
    60c8:	bne	60a4 <sf_gen_proto_abbrev+0xe34>
    60cc:	ldr	r1, [r0, #44]	; 0x2c
    60d0:	clz	r1, r1
    60d4:	cmp	r4, #0
    60d8:	lsr	r1, r1, #5
    60dc:	str	r1, [r0, #44]	; 0x2c
    60e0:	str	r4, [sp, #4]
    60e4:	beq	61c8 <sf_gen_proto_abbrev+0xf58>
    60e8:	mov	r2, r4
    60ec:	ldr	r3, [r2, #44]	; 0x2c
    60f0:	add	r1, r2, #84	; 0x54
    60f4:	cmp	r3, #0
    60f8:	mov	r3, #84	; 0x54
    60fc:	movweq	r3, #60	; 0x3c
    6100:	addeq	r1, r2, #60	; 0x3c
    6104:	ldr	r2, [r2, r3]
    6108:	cmp	r2, #0
    610c:	bne	60ec <sf_gen_proto_abbrev+0xe7c>
    6110:	b	61cc <sf_gen_proto_abbrev+0xf5c>
    6114:	add	r1, sp, #4
    6118:	str	r0, [r1]
    611c:	mov	r1, #26
    6120:	mov	r2, #0
    6124:	ldr	r0, [r0, #96]	; 0x60
    6128:	str	r0, [r4, #96]	; 0x60
    612c:	mov	r0, #27
    6130:	bl	64d8 <gen_proto>
    6134:	ldr	r1, [r0, #44]	; 0x2c
    6138:	cmp	r0, #0
    613c:	clz	r1, r1
    6140:	lsr	r1, r1, #5
    6144:	str	r1, [r0, #44]	; 0x2c
    6148:	beq	6184 <sf_gen_proto_abbrev+0xf14>
    614c:	ldr	r2, [r4, #96]	; 0x60
    6150:	mov	r3, r0
    6154:	b	615c <sf_gen_proto_abbrev+0xeec>
    6158:	ldr	r1, [r3, #44]	; 0x2c
    615c:	cmp	r1, #0
    6160:	mov	r1, #84	; 0x54
    6164:	add	r5, r3, #84	; 0x54
    6168:	movweq	r1, #60	; 0x3c
    616c:	addeq	r5, r3, #60	; 0x3c
    6170:	ldr	r3, [r3, r1]
    6174:	str	r2, [r5]
    6178:	cmp	r3, #0
    617c:	bne	6158 <sf_gen_proto_abbrev+0xee8>
    6180:	ldr	r1, [r0, #44]	; 0x2c
    6184:	clz	r1, r1
    6188:	cmp	r4, #0
    618c:	lsr	r1, r1, #5
    6190:	str	r1, [r0, #44]	; 0x2c
    6194:	str	r4, [sp, #4]
    6198:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    619c:	mov	r2, r4
    61a0:	ldr	r3, [r2, #44]	; 0x2c
    61a4:	add	r1, r2, #84	; 0x54
    61a8:	cmp	r3, #0
    61ac:	mov	r3, #84	; 0x54
    61b0:	movweq	r3, #60	; 0x3c
    61b4:	addeq	r1, r2, #60	; 0x3c
    61b8:	ldr	r2, [r2, r3]
    61bc:	cmp	r2, #0
    61c0:	bne	61a0 <sf_gen_proto_abbrev+0xf30>
    61c4:	b	649c <sf_gen_proto_abbrev+0x122c>
    61c8:	add	r1, sp, #4
    61cc:	str	r0, [r1]
    61d0:	mov	r1, #26
    61d4:	mov	r2, #0
    61d8:	ldr	r0, [r0, #96]	; 0x60
    61dc:	str	r0, [r4, #96]	; 0x60
    61e0:	mov	r0, #27
    61e4:	bl	64d8 <gen_proto>
    61e8:	ldr	r1, [r0, #44]	; 0x2c
    61ec:	cmp	r0, #0
    61f0:	clz	r1, r1
    61f4:	lsr	r1, r1, #5
    61f8:	str	r1, [r0, #44]	; 0x2c
    61fc:	beq	6238 <sf_gen_proto_abbrev+0xfc8>
    6200:	ldr	r2, [r4, #96]	; 0x60
    6204:	mov	r3, r0
    6208:	b	6210 <sf_gen_proto_abbrev+0xfa0>
    620c:	ldr	r1, [r3, #44]	; 0x2c
    6210:	cmp	r1, #0
    6214:	mov	r1, #84	; 0x54
    6218:	add	r5, r3, #84	; 0x54
    621c:	movweq	r1, #60	; 0x3c
    6220:	addeq	r5, r3, #60	; 0x3c
    6224:	ldr	r3, [r3, r1]
    6228:	str	r2, [r5]
    622c:	cmp	r3, #0
    6230:	bne	620c <sf_gen_proto_abbrev+0xf9c>
    6234:	ldr	r1, [r0, #44]	; 0x2c
    6238:	clz	r1, r1
    623c:	cmp	r4, #0
    6240:	lsr	r1, r1, #5
    6244:	str	r1, [r0, #44]	; 0x2c
    6248:	str	r4, [sp, #4]
    624c:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    6250:	mov	r2, r4
    6254:	ldr	r3, [r2, #44]	; 0x2c
    6258:	add	r1, r2, #84	; 0x54
    625c:	cmp	r3, #0
    6260:	mov	r3, #84	; 0x54
    6264:	movweq	r3, #60	; 0x3c
    6268:	addeq	r1, r2, #60	; 0x3c
    626c:	ldr	r2, [r2, r3]
    6270:	cmp	r2, #0
    6274:	bne	6254 <sf_gen_proto_abbrev+0xfe4>
    6278:	b	649c <sf_gen_proto_abbrev+0x122c>
    627c:	add	r0, sp, #4
    6280:	str	r5, [r0]
    6284:	mov	r1, #26
    6288:	mov	r2, #0
    628c:	ldr	r0, [r5, #96]	; 0x60
    6290:	str	r0, [r4, #96]	; 0x60
    6294:	mov	r0, #18
    6298:	bl	64d8 <gen_proto>
    629c:	ldr	r1, [r0, #44]	; 0x2c
    62a0:	cmp	r0, #0
    62a4:	clz	r1, r1
    62a8:	lsr	r1, r1, #5
    62ac:	str	r1, [r0, #44]	; 0x2c
    62b0:	beq	62ec <sf_gen_proto_abbrev+0x107c>
    62b4:	ldr	r2, [r4, #96]	; 0x60
    62b8:	mov	r3, r0
    62bc:	b	62c4 <sf_gen_proto_abbrev+0x1054>
    62c0:	ldr	r1, [r3, #44]	; 0x2c
    62c4:	cmp	r1, #0
    62c8:	mov	r1, #84	; 0x54
    62cc:	add	r5, r3, #84	; 0x54
    62d0:	movweq	r1, #60	; 0x3c
    62d4:	addeq	r5, r3, #60	; 0x3c
    62d8:	ldr	r3, [r3, r1]
    62dc:	str	r2, [r5]
    62e0:	cmp	r3, #0
    62e4:	bne	62c0 <sf_gen_proto_abbrev+0x1050>
    62e8:	ldr	r1, [r0, #44]	; 0x2c
    62ec:	clz	r1, r1
    62f0:	cmp	r4, #0
    62f4:	lsr	r1, r1, #5
    62f8:	str	r1, [r0, #44]	; 0x2c
    62fc:	str	r4, [sp, #4]
    6300:	beq	6330 <sf_gen_proto_abbrev+0x10c0>
    6304:	mov	r2, r4
    6308:	ldr	r3, [r2, #44]	; 0x2c
    630c:	add	r1, r2, #84	; 0x54
    6310:	cmp	r3, #0
    6314:	mov	r3, #84	; 0x54
    6318:	movweq	r3, #60	; 0x3c
    631c:	addeq	r1, r2, #60	; 0x3c
    6320:	ldr	r2, [r2, r3]
    6324:	cmp	r2, #0
    6328:	bne	6308 <sf_gen_proto_abbrev+0x1098>
    632c:	b	6334 <sf_gen_proto_abbrev+0x10c4>
    6330:	add	r1, sp, #4
    6334:	str	r0, [r1]
    6338:	mov	r1, #26
    633c:	mov	r2, #0
    6340:	ldr	r0, [r0, #96]	; 0x60
    6344:	str	r0, [r4, #96]	; 0x60
    6348:	mov	r0, #24
    634c:	bl	64d8 <gen_proto>
    6350:	ldr	r1, [r0, #44]	; 0x2c
    6354:	cmp	r0, #0
    6358:	clz	r1, r1
    635c:	lsr	r1, r1, #5
    6360:	str	r1, [r0, #44]	; 0x2c
    6364:	beq	63a0 <sf_gen_proto_abbrev+0x1130>
    6368:	ldr	r2, [r4, #96]	; 0x60
    636c:	mov	r3, r0
    6370:	b	6378 <sf_gen_proto_abbrev+0x1108>
    6374:	ldr	r1, [r3, #44]	; 0x2c
    6378:	cmp	r1, #0
    637c:	mov	r1, #84	; 0x54
    6380:	add	r5, r3, #84	; 0x54
    6384:	movweq	r1, #60	; 0x3c
    6388:	addeq	r5, r3, #60	; 0x3c
    638c:	ldr	r3, [r3, r1]
    6390:	str	r2, [r5]
    6394:	cmp	r3, #0
    6398:	bne	6374 <sf_gen_proto_abbrev+0x1104>
    639c:	ldr	r1, [r0, #44]	; 0x2c
    63a0:	clz	r1, r1
    63a4:	cmp	r4, #0
    63a8:	lsr	r1, r1, #5
    63ac:	str	r1, [r0, #44]	; 0x2c
    63b0:	str	r4, [sp, #4]
    63b4:	beq	63e4 <sf_gen_proto_abbrev+0x1174>
    63b8:	mov	r2, r4
    63bc:	ldr	r3, [r2, #44]	; 0x2c
    63c0:	add	r1, r2, #84	; 0x54
    63c4:	cmp	r3, #0
    63c8:	mov	r3, #84	; 0x54
    63cc:	movweq	r3, #60	; 0x3c
    63d0:	addeq	r1, r2, #60	; 0x3c
    63d4:	ldr	r2, [r2, r3]
    63d8:	cmp	r2, #0
    63dc:	bne	63bc <sf_gen_proto_abbrev+0x114c>
    63e0:	b	63e8 <sf_gen_proto_abbrev+0x1178>
    63e4:	add	r1, sp, #4
    63e8:	str	r0, [r1]
    63ec:	mov	r1, #26
    63f0:	mov	r2, #0
    63f4:	ldr	r0, [r0, #96]	; 0x60
    63f8:	str	r0, [r4, #96]	; 0x60
    63fc:	mov	r0, #26
    6400:	bl	64d8 <gen_proto>
    6404:	ldr	r1, [r0, #44]	; 0x2c
    6408:	cmp	r0, #0
    640c:	clz	r1, r1
    6410:	lsr	r1, r1, #5
    6414:	str	r1, [r0, #44]	; 0x2c
    6418:	beq	6454 <sf_gen_proto_abbrev+0x11e4>
    641c:	ldr	r2, [r4, #96]	; 0x60
    6420:	mov	r3, r0
    6424:	b	642c <sf_gen_proto_abbrev+0x11bc>
    6428:	ldr	r1, [r3, #44]	; 0x2c
    642c:	cmp	r1, #0
    6430:	mov	r1, #84	; 0x54
    6434:	add	r5, r3, #84	; 0x54
    6438:	movweq	r1, #60	; 0x3c
    643c:	addeq	r5, r3, #60	; 0x3c
    6440:	ldr	r3, [r3, r1]
    6444:	str	r2, [r5]
    6448:	cmp	r3, #0
    644c:	bne	6428 <sf_gen_proto_abbrev+0x11b8>
    6450:	ldr	r1, [r0, #44]	; 0x2c
    6454:	clz	r1, r1
    6458:	cmp	r4, #0
    645c:	lsr	r1, r1, #5
    6460:	str	r1, [r0, #44]	; 0x2c
    6464:	str	r4, [sp, #4]
    6468:	beq	6498 <sf_gen_proto_abbrev+0x1228>
    646c:	mov	r2, r4
    6470:	ldr	r3, [r2, #44]	; 0x2c
    6474:	add	r1, r2, #84	; 0x54
    6478:	cmp	r3, #0
    647c:	mov	r3, #84	; 0x54
    6480:	movweq	r3, #60	; 0x3c
    6484:	addeq	r1, r2, #60	; 0x3c
    6488:	ldr	r2, [r2, r3]
    648c:	cmp	r2, #0
    6490:	bne	6470 <sf_gen_proto_abbrev+0x1200>
    6494:	b	649c <sf_gen_proto_abbrev+0x122c>
    6498:	add	r1, sp, #4
    649c:	str	r0, [r1]
    64a0:	ldr	r0, [r0, #96]	; 0x60
    64a4:	str	r0, [r4, #96]	; 0x60
    64a8:	mov	r0, r4
    64ac:	sub	sp, fp, #8
    64b0:	pop	{r4, r5, fp, pc}
    64b4:	bl	100c <abort@plt>
    64b8:	ldr	r0, [pc, #16]	; 64d0 <sf_gen_proto_abbrev+0x1260>
    64bc:	add	r0, pc, r0
    64c0:	bl	2204 <sf_bpf_error>
    64c4:	ldr	r0, [pc, #8]	; 64d4 <sf_gen_proto_abbrev+0x1264>
    64c8:	add	r0, pc, r0
    64cc:	bl	2204 <sf_bpf_error>
    64d0:	.word	0x000223e3
    64d4:	.word	0x000223fb

000064d8 <gen_proto>:
    64d8:	push	{r4, r5, r6, sl, fp, lr}
    64dc:	add	fp, sp, #16
    64e0:	sub	sp, sp, #8
    64e4:	cmp	r2, #0
    64e8:	bne	6ccc <gen_proto+0x7f4>
    64ec:	cmp	r1, #40	; 0x28
    64f0:	bhi	6cb0 <gen_proto+0x7d8>
    64f4:	mov	r5, r0
    64f8:	add	r0, pc, #4
    64fc:	ldr	r1, [r0, r1, lsl #2]
    6500:	add	pc, r0, r1
    6504:	.word	0x000000a4
    6508:	.word	0x0000034c
    650c:	.word	0x000001ac
    6510:	.word	0x000007d4
    6514:	.word	0x000007e0
    6518:	.word	0x000007ec
    651c:	.word	0x000007f8
    6520:	.word	0x00000804
    6524:	.word	0x00000810
    6528:	.word	0x0000081c
    652c:	.word	0x00000828
    6530:	.word	0x00000834
    6534:	.word	0x00000840
    6538:	.word	0x0000084c
    653c:	.word	0x00000858
    6540:	.word	0x00000864
    6544:	.word	0x000007bc
    6548:	.word	0x0000035c
    654c:	.word	0x000007b0
    6550:	.word	0x000007a0
    6554:	.word	0x000007a0
    6558:	.word	0x000008a0
    655c:	.word	0x000008ac
    6560:	.word	0x000007ac
    6564:	.word	0x00000174
    6568:	.word	0x000007ac
    656c:	.word	0x00000278
    6570:	.word	0x000007ac
    6574:	.word	0x00000870
    6578:	.word	0x0000087c
    657c:	.word	0x00000888
    6580:	.word	0x000007ac
    6584:	.word	0x000007ac
    6588:	.word	0x000007ac
    658c:	.word	0x000007ac
    6590:	.word	0x000007ac
    6594:	.word	0x000007ac
    6598:	.word	0x000007ac
    659c:	.word	0x000007ac
    65a0:	.word	0x000007ac
    65a4:	.word	0x00000894
    65a8:	mov	r0, #2048	; 0x800
    65ac:	bl	6e1c <gen_linktype>
    65b0:	mov	r6, r0
    65b4:	mov	r0, #3
    65b8:	mov	r1, #9
    65bc:	mov	r2, #16
    65c0:	mov	r3, r5
    65c4:	bl	9ef4 <gen_cmp>
    65c8:	mov	r4, r0
    65cc:	cmp	r6, #0
    65d0:	beq	6604 <gen_proto+0x12c>
    65d4:	ldr	r0, [r4, #96]	; 0x60
    65d8:	mov	r1, r6
    65dc:	ldr	r2, [r1, #44]	; 0x2c
    65e0:	add	r3, r1, #84	; 0x54
    65e4:	cmp	r2, #0
    65e8:	mov	r2, #84	; 0x54
    65ec:	movweq	r2, #60	; 0x3c
    65f0:	addeq	r3, r1, #60	; 0x3c
    65f4:	ldr	r1, [r1, r2]
    65f8:	str	r0, [r3]
    65fc:	cmp	r1, #0
    6600:	bne	65dc <gen_proto+0x104>
    6604:	ldr	r0, [r6, #44]	; 0x2c
    6608:	cmp	r4, #0
    660c:	clz	r0, r0
    6610:	lsr	r0, r0, #5
    6614:	str	r0, [r6, #44]	; 0x2c
    6618:	ldr	r1, [r4, #44]	; 0x2c
    661c:	clz	r0, r1
    6620:	lsr	r0, r0, #5
    6624:	str	r0, [r4, #44]	; 0x2c
    6628:	str	r4, [sp, #4]
    662c:	beq	692c <gen_proto+0x454>
    6630:	cmp	r1, #0
    6634:	mov	r1, #60	; 0x3c
    6638:	add	r0, r4, #60	; 0x3c
    663c:	movweq	r1, #84	; 0x54
    6640:	addeq	r0, r4, #84	; 0x54
    6644:	ldr	r1, [r4, r1]
    6648:	cmp	r1, #0
    664c:	beq	6930 <gen_proto+0x458>
    6650:	ldr	r2, [r1, #44]	; 0x2c
    6654:	add	r0, r1, #84	; 0x54
    6658:	cmp	r2, #0
    665c:	mov	r2, #84	; 0x54
    6660:	movweq	r2, #60	; 0x3c
    6664:	addeq	r0, r1, #60	; 0x3c
    6668:	ldr	r1, [r1, r2]
    666c:	cmp	r1, #0
    6670:	bne	6650 <gen_proto+0x178>
    6674:	b	6930 <gen_proto+0x458>
    6678:	ldr	r0, [pc, #1852]	; 6dbc <gen_proto+0x8e4>
    667c:	add	r0, pc, r0
    6680:	ldr	r0, [r0, #36]	; 0x24
    6684:	cmp	r0, #104	; 0x68
    6688:	beq	6ae4 <gen_proto+0x60c>
    668c:	cmp	r0, #107	; 0x6b
    6690:	bne	6bb0 <gen_proto+0x6d8>
    6694:	orr	r3, r5, #768	; 0x300
    6698:	mov	r0, #1
    669c:	mov	r1, #2
    66a0:	mov	r2, #8
    66a4:	sub	sp, fp, #16
    66a8:	pop	{r4, r5, r6, sl, fp, lr}
    66ac:	b	9ef4 <gen_cmp>
    66b0:	mov	r0, #2048	; 0x800
    66b4:	bl	6e1c <gen_linktype>
    66b8:	mov	r4, r0
    66bc:	mov	r0, #3
    66c0:	mov	r1, #9
    66c4:	mov	r2, #16
    66c8:	mov	r3, r5
    66cc:	bl	9ef4 <gen_cmp>
    66d0:	cmp	r4, #0
    66d4:	beq	6708 <gen_proto+0x230>
    66d8:	ldr	r1, [r0, #96]	; 0x60
    66dc:	mov	r2, r4
    66e0:	ldr	r3, [r2, #44]	; 0x2c
    66e4:	add	r6, r2, #84	; 0x54
    66e8:	cmp	r3, #0
    66ec:	mov	r3, #84	; 0x54
    66f0:	movweq	r3, #60	; 0x3c
    66f4:	addeq	r6, r2, #60	; 0x3c
    66f8:	ldr	r2, [r2, r3]
    66fc:	str	r1, [r6]
    6700:	cmp	r2, #0
    6704:	bne	66e0 <gen_proto+0x208>
    6708:	ldr	r1, [r4, #44]	; 0x2c
    670c:	cmp	r0, #0
    6710:	clz	r1, r1
    6714:	lsr	r1, r1, #5
    6718:	str	r1, [r4, #44]	; 0x2c
    671c:	ldr	r2, [r0, #44]	; 0x2c
    6720:	clz	r1, r2
    6724:	lsr	r1, r1, #5
    6728:	str	r1, [r0, #44]	; 0x2c
    672c:	str	r0, [sp, #4]
    6730:	beq	6c7c <gen_proto+0x7a4>
    6734:	cmp	r2, #0
    6738:	mov	r2, #60	; 0x3c
    673c:	add	r1, r0, #60	; 0x3c
    6740:	movweq	r2, #84	; 0x54
    6744:	addeq	r1, r0, #84	; 0x54
    6748:	ldr	r2, [r0, r2]
    674c:	cmp	r2, #0
    6750:	beq	6c80 <gen_proto+0x7a8>
    6754:	ldr	r3, [r2, #44]	; 0x2c
    6758:	add	r1, r2, #84	; 0x54
    675c:	cmp	r3, #0
    6760:	mov	r3, #84	; 0x54
    6764:	movweq	r3, #60	; 0x3c
    6768:	addeq	r1, r2, #60	; 0x3c
    676c:	ldr	r2, [r2, r3]
    6770:	cmp	r2, #0
    6774:	bne	6754 <gen_proto+0x27c>
    6778:	b	6c80 <gen_proto+0x7a8>
    677c:	mov	r0, #131	; 0x83
    6780:	mov	r1, #24
    6784:	mov	r2, #0
    6788:	bl	64d8 <gen_proto>
    678c:	mov	r4, r0
    6790:	mov	r0, #4
    6794:	mov	r1, #4
    6798:	mov	r2, #16
    679c:	mov	r3, r5
    67a0:	bl	9ef4 <gen_cmp>
    67a4:	cmp	r4, #0
    67a8:	beq	67dc <gen_proto+0x304>
    67ac:	ldr	r1, [r0, #96]	; 0x60
    67b0:	mov	r2, r4
    67b4:	ldr	r3, [r2, #44]	; 0x2c
    67b8:	add	r6, r2, #84	; 0x54
    67bc:	cmp	r3, #0
    67c0:	mov	r3, #84	; 0x54
    67c4:	movweq	r3, #60	; 0x3c
    67c8:	addeq	r6, r2, #60	; 0x3c
    67cc:	ldr	r2, [r2, r3]
    67d0:	str	r1, [r6]
    67d4:	cmp	r2, #0
    67d8:	bne	67b4 <gen_proto+0x2dc>
    67dc:	ldr	r1, [r4, #44]	; 0x2c
    67e0:	cmp	r0, #0
    67e4:	clz	r1, r1
    67e8:	lsr	r1, r1, #5
    67ec:	str	r1, [r4, #44]	; 0x2c
    67f0:	ldr	r2, [r0, #44]	; 0x2c
    67f4:	clz	r1, r2
    67f8:	lsr	r1, r1, #5
    67fc:	str	r1, [r0, #44]	; 0x2c
    6800:	str	r0, [sp, #4]
    6804:	beq	6c7c <gen_proto+0x7a4>
    6808:	cmp	r2, #0
    680c:	mov	r2, #60	; 0x3c
    6810:	add	r1, r0, #60	; 0x3c
    6814:	movweq	r2, #84	; 0x54
    6818:	addeq	r1, r0, #84	; 0x54
    681c:	ldr	r2, [r0, r2]
    6820:	cmp	r2, #0
    6824:	beq	6c80 <gen_proto+0x7a8>
    6828:	ldr	r3, [r2, #44]	; 0x2c
    682c:	add	r1, r2, #84	; 0x54
    6830:	cmp	r3, #0
    6834:	mov	r3, #84	; 0x54
    6838:	movweq	r3, #60	; 0x3c
    683c:	addeq	r1, r2, #60	; 0x3c
    6840:	ldr	r2, [r2, r3]
    6844:	cmp	r2, #0
    6848:	bne	6828 <gen_proto+0x350>
    684c:	b	6c80 <gen_proto+0x7a8>
    6850:	mov	r0, r5
    6854:	sub	sp, fp, #16
    6858:	pop	{r4, r5, r6, sl, fp, lr}
    685c:	b	6e1c <gen_linktype>
    6860:	movw	r0, #34525	; 0x86dd
    6864:	bl	6e1c <gen_linktype>
    6868:	mov	r4, r0
    686c:	mov	r0, #3
    6870:	mov	r1, #6
    6874:	mov	r2, #16
    6878:	mov	r3, r5
    687c:	bl	9ef4 <gen_cmp>
    6880:	cmp	r4, #0
    6884:	beq	68b8 <gen_proto+0x3e0>
    6888:	ldr	r1, [r0, #96]	; 0x60
    688c:	mov	r2, r4
    6890:	ldr	r3, [r2, #44]	; 0x2c
    6894:	add	r6, r2, #84	; 0x54
    6898:	cmp	r3, #0
    689c:	mov	r3, #84	; 0x54
    68a0:	movweq	r3, #60	; 0x3c
    68a4:	addeq	r6, r2, #60	; 0x3c
    68a8:	ldr	r2, [r2, r3]
    68ac:	str	r1, [r6]
    68b0:	cmp	r2, #0
    68b4:	bne	6890 <gen_proto+0x3b8>
    68b8:	ldr	r1, [r4, #44]	; 0x2c
    68bc:	cmp	r0, #0
    68c0:	clz	r1, r1
    68c4:	lsr	r1, r1, #5
    68c8:	str	r1, [r4, #44]	; 0x2c
    68cc:	ldr	r2, [r0, #44]	; 0x2c
    68d0:	clz	r1, r2
    68d4:	lsr	r1, r1, #5
    68d8:	str	r1, [r0, #44]	; 0x2c
    68dc:	str	r0, [sp, #4]
    68e0:	beq	6c7c <gen_proto+0x7a4>
    68e4:	cmp	r2, #0
    68e8:	mov	r2, #60	; 0x3c
    68ec:	add	r1, r0, #60	; 0x3c
    68f0:	movweq	r2, #84	; 0x54
    68f4:	addeq	r1, r0, #84	; 0x54
    68f8:	ldr	r2, [r0, r2]
    68fc:	cmp	r2, #0
    6900:	beq	6c80 <gen_proto+0x7a8>
    6904:	ldr	r3, [r2, #44]	; 0x2c
    6908:	add	r1, r2, #84	; 0x54
    690c:	cmp	r3, #0
    6910:	mov	r3, #84	; 0x54
    6914:	movweq	r3, #60	; 0x3c
    6918:	addeq	r1, r2, #60	; 0x3c
    691c:	ldr	r2, [r2, r3]
    6920:	cmp	r2, #0
    6924:	bne	6904 <gen_proto+0x42c>
    6928:	b	6c80 <gen_proto+0x7a8>
    692c:	add	r0, sp, #4
    6930:	str	r6, [r0]
    6934:	ldr	r0, [r4, #44]	; 0x2c
    6938:	clz	r0, r0
    693c:	lsr	r0, r0, #5
    6940:	str	r0, [r4, #44]	; 0x2c
    6944:	ldr	r0, [r6, #96]	; 0x60
    6948:	str	r0, [r4, #96]	; 0x60
    694c:	movw	r0, #34525	; 0x86dd
    6950:	bl	6e1c <gen_linktype>
    6954:	mov	r6, r0
    6958:	mov	r0, #3
    695c:	mov	r1, #6
    6960:	mov	r2, #16
    6964:	mov	r3, r5
    6968:	bl	9ef4 <gen_cmp>
    696c:	cmp	r6, #0
    6970:	beq	69a4 <gen_proto+0x4cc>
    6974:	ldr	r1, [r0, #96]	; 0x60
    6978:	mov	r2, r6
    697c:	ldr	r3, [r2, #44]	; 0x2c
    6980:	add	r5, r2, #84	; 0x54
    6984:	cmp	r3, #0
    6988:	mov	r3, #84	; 0x54
    698c:	movweq	r3, #60	; 0x3c
    6990:	addeq	r5, r2, #60	; 0x3c
    6994:	ldr	r2, [r2, r3]
    6998:	str	r1, [r5]
    699c:	cmp	r2, #0
    69a0:	bne	697c <gen_proto+0x4a4>
    69a4:	ldr	r1, [r6, #44]	; 0x2c
    69a8:	cmp	r0, #0
    69ac:	clz	r1, r1
    69b0:	lsr	r1, r1, #5
    69b4:	str	r1, [r6, #44]	; 0x2c
    69b8:	ldr	r2, [r0, #44]	; 0x2c
    69bc:	clz	r1, r2
    69c0:	lsr	r1, r1, #5
    69c4:	str	r1, [r0, #44]	; 0x2c
    69c8:	str	r0, [sp, #4]
    69cc:	beq	6a18 <gen_proto+0x540>
    69d0:	cmp	r2, #0
    69d4:	mov	r2, #60	; 0x3c
    69d8:	add	r1, r0, #60	; 0x3c
    69dc:	movweq	r2, #84	; 0x54
    69e0:	addeq	r1, r0, #84	; 0x54
    69e4:	ldr	r2, [r0, r2]
    69e8:	cmp	r2, #0
    69ec:	beq	6a1c <gen_proto+0x544>
    69f0:	ldr	r3, [r2, #44]	; 0x2c
    69f4:	add	r1, r2, #84	; 0x54
    69f8:	cmp	r3, #0
    69fc:	mov	r3, #84	; 0x54
    6a00:	movweq	r3, #60	; 0x3c
    6a04:	addeq	r1, r2, #60	; 0x3c
    6a08:	ldr	r2, [r2, r3]
    6a0c:	cmp	r2, #0
    6a10:	bne	69f0 <gen_proto+0x518>
    6a14:	b	6a1c <gen_proto+0x544>
    6a18:	add	r1, sp, #4
    6a1c:	str	r6, [r1]
    6a20:	cmp	r4, #0
    6a24:	ldr	r1, [r0, #44]	; 0x2c
    6a28:	clz	r1, r1
    6a2c:	lsr	r1, r1, #5
    6a30:	str	r1, [r0, #44]	; 0x2c
    6a34:	ldr	r1, [r6, #96]	; 0x60
    6a38:	str	r1, [r0, #96]	; 0x60
    6a3c:	ldr	r1, [r4, #44]	; 0x2c
    6a40:	clz	r1, r1
    6a44:	lsr	r1, r1, #5
    6a48:	str	r1, [r4, #44]	; 0x2c
    6a4c:	beq	6a88 <gen_proto+0x5b0>
    6a50:	ldr	r2, [r0, #96]	; 0x60
    6a54:	mov	r3, r4
    6a58:	b	6a60 <gen_proto+0x588>
    6a5c:	ldr	r1, [r3, #44]	; 0x2c
    6a60:	cmp	r1, #0
    6a64:	mov	r1, #84	; 0x54
    6a68:	add	r6, r3, #84	; 0x54
    6a6c:	movweq	r1, #60	; 0x3c
    6a70:	addeq	r6, r3, #60	; 0x3c
    6a74:	ldr	r3, [r3, r1]
    6a78:	str	r2, [r6]
    6a7c:	cmp	r3, #0
    6a80:	bne	6a5c <gen_proto+0x584>
    6a84:	ldr	r1, [r4, #44]	; 0x2c
    6a88:	clz	r1, r1
    6a8c:	cmp	r0, #0
    6a90:	lsr	r1, r1, #5
    6a94:	str	r1, [r4, #44]	; 0x2c
    6a98:	str	r0, [sp, #4]
    6a9c:	beq	6acc <gen_proto+0x5f4>
    6aa0:	mov	r2, r0
    6aa4:	ldr	r3, [r2, #44]	; 0x2c
    6aa8:	add	r1, r2, #84	; 0x54
    6aac:	cmp	r3, #0
    6ab0:	mov	r3, #84	; 0x54
    6ab4:	movweq	r3, #60	; 0x3c
    6ab8:	addeq	r1, r2, #60	; 0x3c
    6abc:	ldr	r2, [r2, r3]
    6ac0:	cmp	r2, #0
    6ac4:	bne	6aa4 <gen_proto+0x5cc>
    6ac8:	b	6ad0 <gen_proto+0x5f8>
    6acc:	add	r1, sp, #4
    6ad0:	str	r4, [r1]
    6ad4:	ldr	r1, [r4, #96]	; 0x60
    6ad8:	str	r1, [r0, #96]	; 0x60
    6adc:	sub	sp, fp, #16
    6ae0:	pop	{r4, r5, r6, sl, fp, pc}
    6ae4:	movw	r0, #65278	; 0xfefe
    6ae8:	bl	6e1c <gen_linktype>
    6aec:	mov	r4, r0
    6af0:	mov	r0, #4
    6af4:	mov	r1, #1
    6af8:	mov	r2, #16
    6afc:	mov	r3, r5
    6b00:	bl	9ef4 <gen_cmp>
    6b04:	cmp	r4, #0
    6b08:	beq	6b3c <gen_proto+0x664>
    6b0c:	ldr	r1, [r0, #96]	; 0x60
    6b10:	mov	r2, r4
    6b14:	ldr	r3, [r2, #44]	; 0x2c
    6b18:	add	r6, r2, #84	; 0x54
    6b1c:	cmp	r3, #0
    6b20:	mov	r3, #84	; 0x54
    6b24:	movweq	r3, #60	; 0x3c
    6b28:	addeq	r6, r2, #60	; 0x3c
    6b2c:	ldr	r2, [r2, r3]
    6b30:	str	r1, [r6]
    6b34:	cmp	r2, #0
    6b38:	bne	6b14 <gen_proto+0x63c>
    6b3c:	ldr	r1, [r4, #44]	; 0x2c
    6b40:	cmp	r0, #0
    6b44:	clz	r1, r1
    6b48:	lsr	r1, r1, #5
    6b4c:	str	r1, [r4, #44]	; 0x2c
    6b50:	ldr	r2, [r0, #44]	; 0x2c
    6b54:	clz	r1, r2
    6b58:	lsr	r1, r1, #5
    6b5c:	str	r1, [r0, #44]	; 0x2c
    6b60:	str	r0, [sp, #4]
    6b64:	beq	6c7c <gen_proto+0x7a4>
    6b68:	cmp	r2, #0
    6b6c:	mov	r2, #60	; 0x3c
    6b70:	add	r1, r0, #60	; 0x3c
    6b74:	movweq	r2, #84	; 0x54
    6b78:	addeq	r1, r0, #84	; 0x54
    6b7c:	ldr	r2, [r0, r2]
    6b80:	cmp	r2, #0
    6b84:	beq	6c80 <gen_proto+0x7a8>
    6b88:	ldr	r3, [r2, #44]	; 0x2c
    6b8c:	add	r1, r2, #84	; 0x54
    6b90:	cmp	r3, #0
    6b94:	mov	r3, #84	; 0x54
    6b98:	movweq	r3, #60	; 0x3c
    6b9c:	addeq	r1, r2, #60	; 0x3c
    6ba0:	ldr	r2, [r2, r3]
    6ba4:	cmp	r2, #0
    6ba8:	bne	6b88 <gen_proto+0x6b0>
    6bac:	b	6c80 <gen_proto+0x7a8>
    6bb0:	mov	r0, #254	; 0xfe
    6bb4:	bl	6e1c <gen_linktype>
    6bb8:	mov	r4, r0
    6bbc:	mov	r0, #4
    6bc0:	mov	r1, #0
    6bc4:	mov	r2, #16
    6bc8:	mov	r3, r5
    6bcc:	bl	9ef4 <gen_cmp>
    6bd0:	cmp	r4, #0
    6bd4:	beq	6c08 <gen_proto+0x730>
    6bd8:	ldr	r1, [r0, #96]	; 0x60
    6bdc:	mov	r2, r4
    6be0:	ldr	r3, [r2, #44]	; 0x2c
    6be4:	add	r6, r2, #84	; 0x54
    6be8:	cmp	r3, #0
    6bec:	mov	r3, #84	; 0x54
    6bf0:	movweq	r3, #60	; 0x3c
    6bf4:	addeq	r6, r2, #60	; 0x3c
    6bf8:	ldr	r2, [r2, r3]
    6bfc:	str	r1, [r6]
    6c00:	cmp	r2, #0
    6c04:	bne	6be0 <gen_proto+0x708>
    6c08:	ldr	r1, [r4, #44]	; 0x2c
    6c0c:	cmp	r0, #0
    6c10:	clz	r1, r1
    6c14:	lsr	r1, r1, #5
    6c18:	str	r1, [r4, #44]	; 0x2c
    6c1c:	ldr	r2, [r0, #44]	; 0x2c
    6c20:	clz	r1, r2
    6c24:	lsr	r1, r1, #5
    6c28:	str	r1, [r0, #44]	; 0x2c
    6c2c:	str	r0, [sp, #4]
    6c30:	beq	6c7c <gen_proto+0x7a4>
    6c34:	cmp	r2, #0
    6c38:	mov	r2, #60	; 0x3c
    6c3c:	add	r1, r0, #60	; 0x3c
    6c40:	movweq	r2, #84	; 0x54
    6c44:	addeq	r1, r0, #84	; 0x54
    6c48:	ldr	r2, [r0, r2]
    6c4c:	cmp	r2, #0
    6c50:	beq	6c80 <gen_proto+0x7a8>
    6c54:	ldr	r3, [r2, #44]	; 0x2c
    6c58:	add	r1, r2, #84	; 0x54
    6c5c:	cmp	r3, #0
    6c60:	mov	r3, #84	; 0x54
    6c64:	movweq	r3, #60	; 0x3c
    6c68:	addeq	r1, r2, #60	; 0x3c
    6c6c:	ldr	r2, [r2, r3]
    6c70:	cmp	r2, #0
    6c74:	bne	6c54 <gen_proto+0x77c>
    6c78:	b	6c80 <gen_proto+0x7a8>
    6c7c:	add	r1, sp, #4
    6c80:	str	r4, [r1]
    6c84:	ldr	r1, [r0, #44]	; 0x2c
    6c88:	clz	r1, r1
    6c8c:	lsr	r1, r1, #5
    6c90:	str	r1, [r0, #44]	; 0x2c
    6c94:	ldr	r1, [r4, #96]	; 0x60
    6c98:	str	r1, [r0, #96]	; 0x60
    6c9c:	sub	sp, fp, #16
    6ca0:	pop	{r4, r5, r6, sl, fp, pc}
    6ca4:	ldr	r0, [pc, #344]	; 6e04 <gen_proto+0x92c>
    6ca8:	add	r0, pc, r0
    6cac:	bl	2204 <sf_bpf_error>
    6cb0:	bl	100c <abort@plt>
    6cb4:	ldr	r0, [pc, #324]	; 6e00 <gen_proto+0x928>
    6cb8:	add	r0, pc, r0
    6cbc:	bl	2204 <sf_bpf_error>
    6cc0:	ldr	r0, [pc, #276]	; 6ddc <gen_proto+0x904>
    6cc4:	add	r0, pc, r0
    6cc8:	bl	2204 <sf_bpf_error>
    6ccc:	ldr	r0, [pc, #324]	; 6e18 <gen_proto+0x940>
    6cd0:	add	r0, pc, r0
    6cd4:	bl	2204 <sf_bpf_error>
    6cd8:	ldr	r0, [pc, #224]	; 6dc0 <gen_proto+0x8e8>
    6cdc:	add	r0, pc, r0
    6ce0:	bl	2204 <sf_bpf_error>
    6ce4:	ldr	r0, [pc, #216]	; 6dc4 <gen_proto+0x8ec>
    6ce8:	add	r0, pc, r0
    6cec:	bl	2204 <sf_bpf_error>
    6cf0:	ldr	r0, [pc, #240]	; 6de8 <gen_proto+0x910>
    6cf4:	add	r0, pc, r0
    6cf8:	bl	2204 <sf_bpf_error>
    6cfc:	ldr	r0, [pc, #224]	; 6de4 <gen_proto+0x90c>
    6d00:	add	r0, pc, r0
    6d04:	bl	2204 <sf_bpf_error>
    6d08:	ldr	r0, [pc, #208]	; 6de0 <gen_proto+0x908>
    6d0c:	add	r0, pc, r0
    6d10:	bl	2204 <sf_bpf_error>
    6d14:	ldr	r0, [pc, #208]	; 6dec <gen_proto+0x914>
    6d18:	add	r0, pc, r0
    6d1c:	bl	2204 <sf_bpf_error>
    6d20:	ldr	r0, [pc, #200]	; 6df0 <gen_proto+0x918>
    6d24:	add	r0, pc, r0
    6d28:	bl	2204 <sf_bpf_error>
    6d2c:	ldr	r0, [pc, #192]	; 6df4 <gen_proto+0x91c>
    6d30:	add	r0, pc, r0
    6d34:	bl	2204 <sf_bpf_error>
    6d38:	ldr	r0, [pc, #136]	; 6dc8 <gen_proto+0x8f0>
    6d3c:	add	r0, pc, r0
    6d40:	bl	2204 <sf_bpf_error>
    6d44:	ldr	r0, [pc, #128]	; 6dcc <gen_proto+0x8f4>
    6d48:	add	r0, pc, r0
    6d4c:	bl	2204 <sf_bpf_error>
    6d50:	ldr	r0, [pc, #124]	; 6dd4 <gen_proto+0x8fc>
    6d54:	add	r0, pc, r0
    6d58:	bl	2204 <sf_bpf_error>
    6d5c:	ldr	r0, [pc, #108]	; 6dd0 <gen_proto+0x8f8>
    6d60:	add	r0, pc, r0
    6d64:	bl	2204 <sf_bpf_error>
    6d68:	ldr	r0, [pc, #104]	; 6dd8 <gen_proto+0x900>
    6d6c:	add	r0, pc, r0
    6d70:	bl	2204 <sf_bpf_error>
    6d74:	ldr	r0, [pc, #140]	; 6e08 <gen_proto+0x930>
    6d78:	add	r0, pc, r0
    6d7c:	bl	2204 <sf_bpf_error>
    6d80:	ldr	r0, [pc, #132]	; 6e0c <gen_proto+0x934>
    6d84:	add	r0, pc, r0
    6d88:	bl	2204 <sf_bpf_error>
    6d8c:	ldr	r0, [pc, #124]	; 6e10 <gen_proto+0x938>
    6d90:	add	r0, pc, r0
    6d94:	bl	2204 <sf_bpf_error>
    6d98:	ldr	r0, [pc, #116]	; 6e14 <gen_proto+0x93c>
    6d9c:	add	r0, pc, r0
    6da0:	bl	2204 <sf_bpf_error>
    6da4:	ldr	r0, [pc, #76]	; 6df8 <gen_proto+0x920>
    6da8:	add	r0, pc, r0
    6dac:	bl	2204 <sf_bpf_error>
    6db0:	ldr	r0, [pc, #68]	; 6dfc <gen_proto+0x924>
    6db4:	add	r0, pc, r0
    6db8:	bl	2204 <sf_bpf_error>
    6dbc:	.word	0x0003fe64
    6dc0:	.word	0x00022a28
    6dc4:	.word	0x00022a1b
    6dc8:	.word	0x000229f2
    6dcc:	.word	0x00022a0d
    6dd0:	.word	0x00022a1d
    6dd4:	.word	0x00022a53
    6dd8:	.word	0x00022a65
    6ddc:	.word	0x00022b39
    6de0:	.word	0x00022b1d
    6de4:	.word	0x00022b3e
    6de8:	.word	0x00022b5f
    6dec:	.word	0x00022b51
    6df0:	.word	0x00022b5b
    6df4:	.word	0x00022b65
    6df8:	.word	0x00022b03
    6dfc:	.word	0x00022b0c
    6e00:	.word	0x00022c1e
    6e04:	.word	0x00022c45
    6e08:	.word	0x00022b89
    6e0c:	.word	0x00022b92
    6e10:	.word	0x00022b9b
    6e14:	.word	0x00022ba8
    6e18:	.word	0x00022a16

00006e1c <gen_linktype>:
    6e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e20:	add	fp, sp, #28
    6e24:	sub	sp, sp, #12
    6e28:	mov	r5, r0
    6e2c:	ldr	r0, [pc, #4000]	; 7dd4 <gen_linktype+0xfb8>
    6e30:	ldr	r0, [pc, r0]
    6e34:	cmp	r0, #0
    6e38:	beq	6e58 <gen_linktype+0x3c>
    6e3c:	cmp	r5, #2048	; 0x800
    6e40:	bge	6e90 <gen_linktype+0x74>
    6e44:	cmp	r5, #33	; 0x21
    6e48:	beq	7380 <gen_linktype+0x564>
    6e4c:	cmp	r5, #87	; 0x57
    6e50:	beq	6e9c <gen_linktype+0x80>
    6e54:	b	9a2c <gen_linktype+0x2c10>
    6e58:	ldr	r8, [pc, #3960]	; 7dd8 <gen_linktype+0xfbc>
    6e5c:	add	r8, pc, r8
    6e60:	ldrb	r0, [r8, #4]
    6e64:	cmp	r0, #1
    6e68:	bne	6f4c <gen_linktype+0x130>
    6e6c:	cmp	r5, #2048	; 0x800
    6e70:	bge	7440 <gen_linktype+0x624>
    6e74:	cmp	r5, #253	; 0xfd
    6e78:	bgt	8160 <gen_linktype+0x1344>
    6e7c:	cmp	r5, #66	; 0x42
    6e80:	beq	8254 <gen_linktype+0x1438>
    6e84:	cmp	r5, #224	; 0xe0
    6e88:	moveq	r5, #43	; 0x2b
    6e8c:	b	8270 <gen_linktype+0x1454>
    6e90:	movw	r0, #34525	; 0x86dd
    6e94:	cmp	r5, r0
    6e98:	bne	7378 <gen_linktype+0x55c>
    6e9c:	ldr	r3, [pc, #3896]	; 7ddc <gen_linktype+0xfc0>
    6ea0:	add	r3, pc, r3
    6ea4:	ldrb	r0, [r3, #16]
    6ea8:	ldr	r1, [r3, #48]	; 0x30
    6eac:	sub	r7, r1, #2
    6eb0:	cmp	r0, #0
    6eb4:	beq	7430 <gen_linktype+0x614>
    6eb8:	ldr	r4, [r3, #100]	; 0x64
    6ebc:	str	r7, [sp]
    6ec0:	cmn	r4, #1
    6ec4:	bne	6edc <gen_linktype+0xc0>
    6ec8:	bl	1309c <alloc_reg>
    6ecc:	ldr	r3, [pc, #3852]	; 7de0 <gen_linktype+0xfc4>
    6ed0:	mov	r4, r0
    6ed4:	add	r3, pc, r3
    6ed8:	str	r0, [r3, #100]	; 0x64
    6edc:	ldr	r0, [r3, #92]	; 0x5c
    6ee0:	ldr	sl, [pc, #3836]	; 7de4 <gen_linktype+0xfc8>
    6ee4:	add	sl, pc, sl
    6ee8:	mov	r7, sl
    6eec:	ldr	r5, [r7, r0, lsl #3]!
    6ef0:	cmp	r5, #19
    6ef4:	bhi	7464 <gen_linktype+0x648>
    6ef8:	add	r6, r0, #1
    6efc:	cmp	r0, #15
    6f00:	str	r6, [r3, #92]	; 0x5c
    6f04:	bge	99e4 <gen_linktype+0x2bc8>
    6f08:	mov	r0, #1024	; 0x400
    6f0c:	lsl	r5, r0, r6
    6f10:	mov	r0, r5
    6f14:	bl	f1c <malloc@plt>
    6f18:	cmp	r0, #0
    6f1c:	str	r0, [r7, #12]
    6f20:	beq	99e4 <gen_linktype+0x2bc8>
    6f24:	mov	r1, #0
    6f28:	mov	r2, r5
    6f2c:	add	r7, r7, #8
    6f30:	bl	f88 <memset@plt>
    6f34:	str	r5, [r7]
    6f38:	cmp	r5, #19
    6f3c:	ldr	r3, [pc, #3748]	; 7de8 <gen_linktype+0xfcc>
    6f40:	add	r3, pc, r3
    6f44:	bhi	7468 <gen_linktype+0x64c>
    6f48:	b	99e4 <gen_linktype+0x2bc8>
    6f4c:	ldr	r0, [r8, #36]	; 0x24
    6f50:	cmp	r0, #229	; 0xe5
    6f54:	bhi	88dc <gen_linktype+0x1ac0>
    6f58:	add	r1, pc, #4
    6f5c:	ldr	r2, [r1, r0, lsl #2]
    6f60:	add	pc, r1, r2
    6f64:	.word	0x000015e0
    6f68:	.word	0x00001a94
    6f6c:	.word	0x00001978
    6f70:	.word	0x00001978
    6f74:	.word	0x00001978
    6f78:	.word	0x00001978
    6f7c:	.word	0x00001328
    6f80:	.word	0x0000162c
    6f84:	.word	0x00001550
    6f88:	.word	0x00001528
    6f8c:	.word	0x00001328
    6f90:	.word	0x00001328
    6f94:	.word	0x00001550
    6f98:	.word	0x00001978
    6f9c:	.word	0x00001978
    6fa0:	.word	0x00001550
    6fa4:	.word	0x00001994
    6fa8:	.word	0x00001978
    6fac:	.word	0x00001978
    6fb0:	.word	0x00001328
    6fb4:	.word	0x00001978
    6fb8:	.word	0x00001978
    6fbc:	.word	0x00001978
    6fc0:	.word	0x00001978
    6fc4:	.word	0x00001978
    6fc8:	.word	0x00001978
    6fcc:	.word	0x00001978
    6fd0:	.word	0x00001978
    6fd4:	.word	0x00001978
    6fd8:	.word	0x00001978
    6fdc:	.word	0x00001978
    6fe0:	.word	0x00001978
    6fe4:	.word	0x00001978
    6fe8:	.word	0x00001978
    6fec:	.word	0x00001978
    6ff0:	.word	0x00001978
    6ff4:	.word	0x00001978
    6ff8:	.word	0x00001978
    6ffc:	.word	0x00001978
    7000:	.word	0x00001978
    7004:	.word	0x00001978
    7008:	.word	0x00001978
    700c:	.word	0x00001978
    7010:	.word	0x00001978
    7014:	.word	0x00001978
    7018:	.word	0x00001978
    701c:	.word	0x00001978
    7020:	.word	0x00001978
    7024:	.word	0x00001978
    7028:	.word	0x00001978
    702c:	.word	0x00001528
    7030:	.word	0x00001528
    7034:	.word	0x00001978
    7038:	.word	0x00001978
    703c:	.word	0x00001978
    7040:	.word	0x00001978
    7044:	.word	0x00001978
    7048:	.word	0x00001978
    704c:	.word	0x00001978
    7050:	.word	0x00001978
    7054:	.word	0x00001978
    7058:	.word	0x00001978
    705c:	.word	0x00001978
    7060:	.word	0x00001978
    7064:	.word	0x00001978
    7068:	.word	0x00001978
    706c:	.word	0x00001978
    7070:	.word	0x00001978
    7074:	.word	0x00001978
    7078:	.word	0x00001978
    707c:	.word	0x00001978
    7080:	.word	0x00001978
    7084:	.word	0x00001978
    7088:	.word	0x00001978
    708c:	.word	0x00001978
    7090:	.word	0x00001978
    7094:	.word	0x00001978
    7098:	.word	0x00001978
    709c:	.word	0x00001978
    70a0:	.word	0x00001978
    70a4:	.word	0x00001978
    70a8:	.word	0x00001978
    70ac:	.word	0x00001978
    70b0:	.word	0x00001978
    70b4:	.word	0x00001978
    70b8:	.word	0x00001978
    70bc:	.word	0x00001978
    70c0:	.word	0x00001978
    70c4:	.word	0x00001978
    70c8:	.word	0x00001978
    70cc:	.word	0x00001978
    70d0:	.word	0x00001978
    70d4:	.word	0x00001978
    70d8:	.word	0x00001978
    70dc:	.word	0x00001978
    70e0:	.word	0x00001978
    70e4:	.word	0x00001978
    70e8:	.word	0x00001978
    70ec:	.word	0x00001978
    70f0:	.word	0x00001978
    70f4:	.word	0x00001978
    70f8:	.word	0x00001978
    70fc:	.word	0x00001978
    7100:	.word	0x00001978
    7104:	.word	0x00001bd0
    7108:	.word	0x0000134c
    710c:	.word	0x00001978
    7110:	.word	0x00001be4
    7114:	.word	0x000015e0
    7118:	.word	0x000015e0
    711c:	.word	0x00001978
    7120:	.word	0x00001978
    7124:	.word	0x00001978
    7128:	.word	0x00001ab0
    712c:	.word	0x00001bb0
    7130:	.word	0x00001978
    7134:	.word	0x00001978
    7138:	.word	0x00001978
    713c:	.word	0x00001978
    7140:	.word	0x0000134c
    7144:	.word	0x00001978
    7148:	.word	0x00001978
    714c:	.word	0x00001328
    7150:	.word	0x0000188c
    7154:	.word	0x00001978
    7158:	.word	0x00001978
    715c:	.word	0x00001978
    7160:	.word	0x0000134c
    7164:	.word	0x00001978
    7168:	.word	0x0000162c
    716c:	.word	0x00000398
    7170:	.word	0x00000398
    7174:	.word	0x00000398
    7178:	.word	0x00000398
    717c:	.word	0x00000398
    7180:	.word	0x00000398
    7184:	.word	0x00000398
    7188:	.word	0x00000398
    718c:	.word	0x00001978
    7190:	.word	0x00002aa4
    7194:	.word	0x00002aa4
    7198:	.word	0x00001978
    719c:	.word	0x00001978
    71a0:	.word	0x00002ad4
    71a4:	.word	0x00002ae0
    71a8:	.word	0x00001978
    71ac:	.word	0x00001978
    71b0:	.word	0x00001978
    71b4:	.word	0x00001978
    71b8:	.word	0x00001978
    71bc:	.word	0x00001978
    71c0:	.word	0x00001978
    71c4:	.word	0x00001978
    71c8:	.word	0x00001978
    71cc:	.word	0x00001978
    71d0:	.word	0x00001978
    71d4:	.word	0x00001978
    71d8:	.word	0x00001978
    71dc:	.word	0x00001978
    71e0:	.word	0x00001978
    71e4:	.word	0x00001978
    71e8:	.word	0x00001978
    71ec:	.word	0x00001978
    71f0:	.word	0x0000134c
    71f4:	.word	0x00000398
    71f8:	.word	0x00001978
    71fc:	.word	0x00001528
    7200:	.word	0x00000398
    7204:	.word	0x00000398
    7208:	.word	0x00001978
    720c:	.word	0x00001978
    7210:	.word	0x00001978
    7214:	.word	0x00001978
    7218:	.word	0x00001978
    721c:	.word	0x00001978
    7220:	.word	0x00001978
    7224:	.word	0x00001978
    7228:	.word	0x00002aec
    722c:	.word	0x00000398
    7230:	.word	0x00000398
    7234:	.word	0x00000398
    7238:	.word	0x00000398
    723c:	.word	0x00002af8
    7240:	.word	0x00000398
    7244:	.word	0x00001978
    7248:	.word	0x00001978
    724c:	.word	0x00002a8c
    7250:	.word	0x00002ab0
    7254:	.word	0x00001978
    7258:	.word	0x00002a8c
    725c:	.word	0x00002abc
    7260:	.word	0x00002a98
    7264:	.word	0x0000134c
    7268:	.word	0x00002b04
    726c:	.word	0x00000398
    7270:	.word	0x00002a98
    7274:	.word	0x00002b10
    7278:	.word	0x00002b1c
    727c:	.word	0x00002b28
    7280:	.word	0x00002b34
    7284:	.word	0x00000398
    7288:	.word	0x00002ab0
    728c:	.word	0x00002b40
    7290:	.word	0x00001978
    7294:	.word	0x00001978
    7298:	.word	0x00001978
    729c:	.word	0x00001978
    72a0:	.word	0x00001978
    72a4:	.word	0x00001978
    72a8:	.word	0x00001978
    72ac:	.word	0x00001978
    72b0:	.word	0x00001978
    72b4:	.word	0x00001978
    72b8:	.word	0x00001978
    72bc:	.word	0x00001978
    72c0:	.word	0x00002a98
    72c4:	.word	0x00001978
    72c8:	.word	0x00001978
    72cc:	.word	0x00001978
    72d0:	.word	0x00001978
    72d4:	.word	0x00002a8c
    72d8:	.word	0x00001978
    72dc:	.word	0x00001978
    72e0:	.word	0x00001978
    72e4:	.word	0x00001978
    72e8:	.word	0x00001978
    72ec:	.word	0x0000184c
    72f0:	.word	0x00002abc
    72f4:	.word	0x00001c1c
    72f8:	.word	0x00001bc0
    72fc:	mov	r0, #1
    7300:	mov	r1, #0
    7304:	mov	r2, #0
    7308:	bl	1669c <gen_load_a>
    730c:	mov	r9, r0
    7310:	ldr	r0, [r8, #92]	; 0x5c
    7314:	ldr	r5, [pc, #3968]	; 829c <gen_linktype+0x1480>
    7318:	add	r5, pc, r5
    731c:	mov	r6, r5
    7320:	ldr	r4, [r6, r0, lsl #3]!
    7324:	cmp	r4, #19
    7328:	bhi	8190 <gen_linktype+0x1374>
    732c:	add	r7, r0, #1
    7330:	cmp	r0, #15
    7334:	str	r7, [r8, #92]	; 0x5c
    7338:	bge	99e4 <gen_linktype+0x2bc8>
    733c:	mov	r0, #1024	; 0x400
    7340:	lsl	r4, r0, r7
    7344:	mov	r0, r4
    7348:	bl	f1c <malloc@plt>
    734c:	cmp	r0, #0
    7350:	str	r0, [r6, #12]
    7354:	beq	99e4 <gen_linktype+0x2bc8>
    7358:	mov	r1, #0
    735c:	mov	r2, r4
    7360:	add	r6, r6, #8
    7364:	bl	f88 <memset@plt>
    7368:	cmp	r4, #19
    736c:	str	r4, [r6]
    7370:	bhi	8194 <gen_linktype+0x1378>
    7374:	b	99e4 <gen_linktype+0x2bc8>
    7378:	cmp	r5, #2048	; 0x800
    737c:	bne	9a2c <gen_linktype+0x2c10>
    7380:	ldr	r3, [pc, #3864]	; 82a0 <gen_linktype+0x1484>
    7384:	add	r3, pc, r3
    7388:	ldrb	r0, [r3, #16]
    738c:	ldr	r1, [r3, #48]	; 0x30
    7390:	sub	r7, r1, #2
    7394:	cmp	r0, #0
    7398:	beq	7438 <gen_linktype+0x61c>
    739c:	ldr	r4, [r3, #100]	; 0x64
    73a0:	str	r7, [sp]
    73a4:	cmn	r4, #1
    73a8:	bne	73c0 <gen_linktype+0x5a4>
    73ac:	bl	1309c <alloc_reg>
    73b0:	ldr	r3, [pc, #3820]	; 82a4 <gen_linktype+0x1488>
    73b4:	mov	r4, r0
    73b8:	add	r3, pc, r3
    73bc:	str	r0, [r3, #100]	; 0x64
    73c0:	ldr	r0, [r3, #92]	; 0x5c
    73c4:	ldr	sl, [pc, #3804]	; 82a8 <gen_linktype+0x148c>
    73c8:	add	sl, pc, sl
    73cc:	mov	r7, sl
    73d0:	ldr	r5, [r7, r0, lsl #3]!
    73d4:	cmp	r5, #19
    73d8:	bhi	74e8 <gen_linktype+0x6cc>
    73dc:	add	r6, r0, #1
    73e0:	cmp	r0, #15
    73e4:	str	r6, [r3, #92]	; 0x5c
    73e8:	bge	99e4 <gen_linktype+0x2bc8>
    73ec:	mov	r0, #1024	; 0x400
    73f0:	lsl	r5, r0, r6
    73f4:	mov	r0, r5
    73f8:	bl	f1c <malloc@plt>
    73fc:	cmp	r0, #0
    7400:	str	r0, [r7, #12]
    7404:	beq	99e4 <gen_linktype+0x2bc8>
    7408:	mov	r1, #0
    740c:	mov	r2, r5
    7410:	add	r7, r7, #8
    7414:	bl	f88 <memset@plt>
    7418:	str	r5, [r7]
    741c:	cmp	r5, #19
    7420:	ldr	r3, [pc, #3716]	; 82ac <gen_linktype+0x1490>
    7424:	add	r3, pc, r3
    7428:	bhi	74ec <gen_linktype+0x6d0>
    742c:	b	99e4 <gen_linktype+0x2bc8>
    7430:	ldr	r6, [r3, #92]	; 0x5c
    7434:	b	7570 <gen_linktype+0x754>
    7438:	ldr	r6, [r3, #92]	; 0x5c
    743c:	b	7604 <gen_linktype+0x7e8>
    7440:	movw	r0, #32922	; 0x809a
    7444:	cmp	r5, r0
    7448:	bgt	8174 <gen_linktype+0x1358>
    744c:	cmp	r5, #2048	; 0x800
    7450:	beq	825c <gen_linktype+0x1440>
    7454:	movw	r0, #24579	; 0x6003
    7458:	cmp	r5, r0
    745c:	moveq	r5, #39	; 0x27
    7460:	b	8270 <gen_linktype+0x1454>
    7464:	mov	r6, r0
    7468:	sub	r0, r5, #20
    746c:	mov	r1, #97	; 0x61
    7470:	str	r0, [r7]
    7474:	ldr	r8, [r7, #4]
    7478:	str	r1, [r8, r0]!
    747c:	cmp	r8, #0
    7480:	str	r4, [r8, #12]
    7484:	beq	756c <gen_linktype+0x750>
    7488:	ldr	r4, [sl, r6, lsl #3]!
    748c:	cmp	r4, #19
    7490:	bhi	7694 <gen_linktype+0x878>
    7494:	add	r9, r6, #1
    7498:	cmp	r6, #15
    749c:	str	r9, [r3, #92]	; 0x5c
    74a0:	bge	99e4 <gen_linktype+0x2bc8>
    74a4:	mov	r0, #1024	; 0x400
    74a8:	lsl	r4, r0, r9
    74ac:	mov	r0, r4
    74b0:	bl	f1c <malloc@plt>
    74b4:	cmp	r0, #0
    74b8:	str	r0, [sl, #12]
    74bc:	beq	99e4 <gen_linktype+0x2bc8>
    74c0:	mov	r1, #0
    74c4:	mov	r2, r4
    74c8:	add	sl, sl, #8
    74cc:	bl	f88 <memset@plt>
    74d0:	str	r4, [sl]
    74d4:	cmp	r4, #19
    74d8:	ldr	r3, [pc, #4048]	; 84b0 <gen_linktype+0x1694>
    74dc:	add	r3, pc, r3
    74e0:	bhi	7698 <gen_linktype+0x87c>
    74e4:	b	99e4 <gen_linktype+0x2bc8>
    74e8:	mov	r6, r0
    74ec:	sub	r0, r5, #20
    74f0:	mov	r1, #97	; 0x61
    74f4:	str	r0, [r7]
    74f8:	ldr	r8, [r7, #4]
    74fc:	str	r1, [r8, r0]!
    7500:	cmp	r8, #0
    7504:	str	r4, [r8, #12]
    7508:	beq	7600 <gen_linktype+0x7e4>
    750c:	ldr	r4, [sl, r6, lsl #3]!
    7510:	cmp	r4, #19
    7514:	bhi	7a34 <gen_linktype+0xc18>
    7518:	add	r9, r6, #1
    751c:	cmp	r6, #15
    7520:	str	r9, [r3, #92]	; 0x5c
    7524:	bge	99e4 <gen_linktype+0x2bc8>
    7528:	mov	r0, #1024	; 0x400
    752c:	lsl	r4, r0, r9
    7530:	mov	r0, r4
    7534:	bl	f1c <malloc@plt>
    7538:	cmp	r0, #0
    753c:	str	r0, [sl, #12]
    7540:	beq	99e4 <gen_linktype+0x2bc8>
    7544:	mov	r1, #0
    7548:	mov	r2, r4
    754c:	add	sl, sl, #8
    7550:	bl	f88 <memset@plt>
    7554:	str	r4, [sl]
    7558:	cmp	r4, #19
    755c:	ldr	r3, [pc, #4092]	; 8560 <gen_linktype+0x1744>
    7560:	add	r3, pc, r3
    7564:	bhi	7a38 <gen_linktype+0xc1c>
    7568:	b	99e4 <gen_linktype+0x2bc8>
    756c:	ldr	r7, [sp]
    7570:	ldr	r5, [pc, #4076]	; 8564 <gen_linktype+0x1748>
    7574:	add	r5, pc, r5
    7578:	ldr	r4, [r5, r6, lsl #3]!
    757c:	cmp	r4, #19
    7580:	bhi	75d8 <gen_linktype+0x7bc>
    7584:	add	r9, r6, #1
    7588:	cmp	r6, #15
    758c:	str	r9, [r3, #92]	; 0x5c
    7590:	bge	99e4 <gen_linktype+0x2bc8>
    7594:	mov	r0, #1024	; 0x400
    7598:	lsl	r4, r0, r9
    759c:	mov	r0, r4
    75a0:	bl	f1c <malloc@plt>
    75a4:	cmp	r0, #0
    75a8:	str	r0, [r5, #12]
    75ac:	beq	99e4 <gen_linktype+0x2bc8>
    75b0:	mov	r1, #0
    75b4:	mov	r2, r4
    75b8:	add	r5, r5, #8
    75bc:	bl	f88 <memset@plt>
    75c0:	str	r4, [r5]
    75c4:	cmp	r4, #19
    75c8:	ldr	r3, [pc, #4028]	; 858c <gen_linktype+0x1770>
    75cc:	add	r3, pc, r3
    75d0:	bhi	75dc <gen_linktype+0x7c0>
    75d4:	b	99e4 <gen_linktype+0x2bc8>
    75d8:	mov	r9, r6
    75dc:	sub	r0, r4, #20
    75e0:	mov	r1, #48	; 0x30
    75e4:	str	r0, [r5]
    75e8:	ldr	r8, [r5, #4]
    75ec:	str	r1, [r8, r0]!
    75f0:	ldr	r0, [r3, #44]	; 0x2c
    75f4:	add	r0, r0, r7
    75f8:	str	r0, [r8, #12]
    75fc:	b	76cc <gen_linktype+0x8b0>
    7600:	ldr	r7, [sp]
    7604:	ldr	r5, [pc, #4048]	; 85dc <gen_linktype+0x17c0>
    7608:	add	r5, pc, r5
    760c:	ldr	r4, [r5, r6, lsl #3]!
    7610:	cmp	r4, #19
    7614:	bhi	766c <gen_linktype+0x850>
    7618:	add	r9, r6, #1
    761c:	cmp	r6, #15
    7620:	str	r9, [r3, #92]	; 0x5c
    7624:	bge	99e4 <gen_linktype+0x2bc8>
    7628:	mov	r0, #1024	; 0x400
    762c:	lsl	r4, r0, r9
    7630:	mov	r0, r4
    7634:	bl	f1c <malloc@plt>
    7638:	cmp	r0, #0
    763c:	str	r0, [r5, #12]
    7640:	beq	99e4 <gen_linktype+0x2bc8>
    7644:	mov	r1, #0
    7648:	mov	r2, r4
    764c:	add	r5, r5, #8
    7650:	bl	f88 <memset@plt>
    7654:	str	r4, [r5]
    7658:	cmp	r4, #19
    765c:	ldr	r3, [pc, #3964]	; 85e0 <gen_linktype+0x17c4>
    7660:	add	r3, pc, r3
    7664:	bhi	7670 <gen_linktype+0x854>
    7668:	b	99e4 <gen_linktype+0x2bc8>
    766c:	mov	r9, r6
    7670:	sub	r0, r4, #20
    7674:	mov	r1, #48	; 0x30
    7678:	str	r0, [r5]
    767c:	ldr	r8, [r5, #4]
    7680:	str	r1, [r8, r0]!
    7684:	ldr	r0, [r3, #44]	; 0x2c
    7688:	add	r0, r0, r7
    768c:	str	r0, [r8, #12]
    7690:	b	7a6c <gen_linktype+0xc50>
    7694:	mov	r9, r6
    7698:	sub	r1, r4, #20
    769c:	mov	r2, #80	; 0x50
    76a0:	str	r1, [sl]
    76a4:	ldr	r0, [sl, #4]
    76a8:	str	r2, [r0, r1]!
    76ac:	mov	r2, r8
    76b0:	ldr	r1, [sp]
    76b4:	str	r1, [r0, #12]
    76b8:	mov	r1, r2
    76bc:	ldr	r2, [r2, #16]
    76c0:	cmp	r2, #0
    76c4:	bne	76b8 <gen_linktype+0x89c>
    76c8:	str	r0, [r1, #16]
    76cc:	ldr	r7, [pc, #4072]	; 86bc <gen_linktype+0x18a0>
    76d0:	add	r7, pc, r7
    76d4:	ldr	r4, [r7, r9, lsl #3]!
    76d8:	cmp	r4, #19
    76dc:	bhi	7734 <gen_linktype+0x918>
    76e0:	add	r6, r9, #1
    76e4:	cmp	r9, #15
    76e8:	str	r6, [r3, #92]	; 0x5c
    76ec:	bge	99e4 <gen_linktype+0x2bc8>
    76f0:	mov	r0, #1024	; 0x400
    76f4:	lsl	r4, r0, r6
    76f8:	mov	r0, r4
    76fc:	bl	f1c <malloc@plt>
    7700:	cmp	r0, #0
    7704:	str	r0, [r7, #12]
    7708:	beq	99e4 <gen_linktype+0x2bc8>
    770c:	mov	r1, #0
    7710:	mov	r2, r4
    7714:	add	r7, r7, #8
    7718:	bl	f88 <memset@plt>
    771c:	str	r4, [r7]
    7720:	cmp	r4, #19
    7724:	ldr	r3, [pc, #4052]	; 8700 <gen_linktype+0x18e4>
    7728:	add	r3, pc, r3
    772c:	bhi	7738 <gen_linktype+0x91c>
    7730:	b	99e4 <gen_linktype+0x2bc8>
    7734:	mov	r6, r9
    7738:	sub	r1, r4, #20
    773c:	mov	r2, #84	; 0x54
    7740:	str	r1, [r7]
    7744:	ldr	r0, [r7, #4]
    7748:	str	r2, [r0, r1]!
    774c:	mov	r1, #1
    7750:	mov	r2, r8
    7754:	str	r1, [r0, #12]
    7758:	mov	r1, r2
    775c:	ldr	r2, [r2, #16]
    7760:	cmp	r2, #0
    7764:	bne	7758 <gen_linktype+0x93c>
    7768:	str	r0, [r1, #16]
    776c:	ldr	r5, [pc, #3984]	; 8704 <gen_linktype+0x18e8>
    7770:	add	r5, pc, r5
    7774:	ldr	r4, [r5, r6, lsl #3]!
    7778:	cmp	r4, #207	; 0xcf
    777c:	bhi	77d4 <gen_linktype+0x9b8>
    7780:	add	r7, r6, #1
    7784:	cmp	r6, #15
    7788:	str	r7, [r3, #92]	; 0x5c
    778c:	bge	99e4 <gen_linktype+0x2bc8>
    7790:	mov	r0, #1024	; 0x400
    7794:	lsl	r4, r0, r7
    7798:	mov	r0, r4
    779c:	bl	f1c <malloc@plt>
    77a0:	cmp	r0, #0
    77a4:	str	r0, [r5, #12]
    77a8:	beq	99e4 <gen_linktype+0x2bc8>
    77ac:	mov	r1, #0
    77b0:	mov	r2, r4
    77b4:	add	r5, r5, #8
    77b8:	bl	f88 <memset@plt>
    77bc:	str	r4, [r5]
    77c0:	cmp	r4, #207	; 0xcf
    77c4:	ldr	r3, [pc, #4064]	; 87ac <gen_linktype+0x1990>
    77c8:	add	r3, pc, r3
    77cc:	bhi	77d8 <gen_linktype+0x9bc>
    77d0:	b	99e4 <gen_linktype+0x2bc8>
    77d4:	mov	r7, r6
    77d8:	sub	r0, r4, #208	; 0xd0
    77dc:	str	r0, [r5]
    77e0:	ldr	r1, [r5, #4]
    77e4:	add	sl, r1, r0
    77e8:	mov	r0, #21
    77ec:	str	r8, [sl, #4]
    77f0:	str	r0, [sl, #8]
    77f4:	mov	r0, #1
    77f8:	str	r0, [sl, #20]
    77fc:	str	sl, [sl, #96]	; 0x60
    7800:	ldrb	r0, [r3, #16]
    7804:	ldr	r6, [r3, #48]	; 0x30
    7808:	cmp	r0, #1
    780c:	bne	7940 <gen_linktype+0xb24>
    7810:	ldr	r9, [r3, #100]	; 0x64
    7814:	ldr	r4, [pc, #4036]	; 87e0 <gen_linktype+0x19c4>
    7818:	cmn	r9, #1
    781c:	add	r4, pc, r4
    7820:	beq	7884 <gen_linktype+0xa68>
    7824:	ldr	r5, [r4, r7, lsl #3]!
    7828:	cmp	r5, #19
    782c:	bhi	78a8 <gen_linktype+0xa8c>
    7830:	add	r8, r7, #1
    7834:	cmp	r7, #15
    7838:	str	r8, [r3, #92]	; 0x5c
    783c:	bge	99e4 <gen_linktype+0x2bc8>
    7840:	mov	r0, #1024	; 0x400
    7844:	lsl	r5, r0, r8
    7848:	mov	r0, r5
    784c:	bl	f1c <malloc@plt>
    7850:	cmp	r0, #0
    7854:	str	r0, [r4, #12]
    7858:	beq	99e4 <gen_linktype+0x2bc8>
    785c:	mov	r1, #0
    7860:	mov	r2, r5
    7864:	add	r4, r4, #8
    7868:	bl	f88 <memset@plt>
    786c:	str	r5, [r4]
    7870:	cmp	r5, #19
    7874:	ldr	r3, [pc, #3944]	; 87e4 <gen_linktype+0x19c8>
    7878:	add	r3, pc, r3
    787c:	bhi	78ac <gen_linktype+0xa90>
    7880:	b	99e4 <gen_linktype+0x2bc8>
    7884:	bl	1309c <alloc_reg>
    7888:	ldr	r3, [pc, #3928]	; 87e8 <gen_linktype+0x19cc>
    788c:	mov	r9, r0
    7890:	add	r3, pc, r3
    7894:	str	r0, [r3, #100]	; 0x64
    7898:	ldr	r7, [r3, #92]	; 0x5c
    789c:	ldr	r5, [r4, r7, lsl #3]!
    78a0:	cmp	r5, #19
    78a4:	bls	7830 <gen_linktype+0xa14>
    78a8:	mov	r8, r7
    78ac:	sub	r0, r5, #20
    78b0:	mov	r1, #97	; 0x61
    78b4:	str	r0, [r4]
    78b8:	ldr	r5, [r4, #4]
    78bc:	str	r1, [r5, r0]!
    78c0:	cmp	r5, #0
    78c4:	str	r9, [r5, #12]
    78c8:	beq	793c <gen_linktype+0xb20>
    78cc:	ldr	r7, [pc, #3864]	; 87ec <gen_linktype+0x19d0>
    78d0:	add	r7, pc, r7
    78d4:	ldr	r4, [r7, r8, lsl #3]!
    78d8:	cmp	r4, #19
    78dc:	bhi	7dec <gen_linktype+0xfd0>
    78e0:	add	r9, r8, #1
    78e4:	cmp	r8, #15
    78e8:	str	r9, [r3, #92]	; 0x5c
    78ec:	bge	99e4 <gen_linktype+0x2bc8>
    78f0:	mov	r0, #1024	; 0x400
    78f4:	lsl	r4, r0, r9
    78f8:	mov	r0, r4
    78fc:	bl	f1c <malloc@plt>
    7900:	str	r0, [r7, #12]
    7904:	cmp	r0, #0
    7908:	ldr	r8, [pc, #4060]	; 88ec <gen_linktype+0x1ad0>
    790c:	add	r8, pc, r8
    7910:	beq	99e4 <gen_linktype+0x2bc8>
    7914:	mov	r1, #0
    7918:	mov	r2, r4
    791c:	add	r7, r7, #8
    7920:	bl	f88 <memset@plt>
    7924:	str	r4, [r7]
    7928:	cmp	r4, #19
    792c:	ldr	r3, [pc, #4028]	; 88f0 <gen_linktype+0x1ad4>
    7930:	add	r3, pc, r3
    7934:	bhi	7df8 <gen_linktype+0xfdc>
    7938:	b	99e4 <gen_linktype+0x2bc8>
    793c:	mov	r7, r8
    7940:	ldr	r8, [pc, #4012]	; 88f4 <gen_linktype+0x1ad8>
    7944:	add	r8, pc, r8
    7948:	mov	r5, r8
    794c:	ldr	r4, [r5, r7, lsl #3]!
    7950:	cmp	r4, #19
    7954:	bhi	79ac <gen_linktype+0xb90>
    7958:	add	r9, r7, #1
    795c:	cmp	r7, #15
    7960:	str	r9, [r3, #92]	; 0x5c
    7964:	bge	99e4 <gen_linktype+0x2bc8>
    7968:	mov	r0, #1024	; 0x400
    796c:	lsl	r4, r0, r9
    7970:	mov	r0, r4
    7974:	bl	f1c <malloc@plt>
    7978:	cmp	r0, #0
    797c:	str	r0, [r5, #12]
    7980:	beq	99e4 <gen_linktype+0x2bc8>
    7984:	mov	r1, #0
    7988:	mov	r2, r4
    798c:	add	r5, r5, #8
    7990:	bl	f88 <memset@plt>
    7994:	str	r4, [r5]
    7998:	cmp	r4, #19
    799c:	ldr	r3, [pc, #4036]	; 8968 <gen_linktype+0x1b4c>
    79a0:	add	r3, pc, r3
    79a4:	bhi	79b0 <gen_linktype+0xb94>
    79a8:	b	99e4 <gen_linktype+0x2bc8>
    79ac:	mov	r9, r7
    79b0:	sub	r0, r4, #20
    79b4:	mov	r1, #48	; 0x30
    79b8:	str	r0, [r5]
    79bc:	ldr	r5, [r5, #4]
    79c0:	str	r1, [r5, r0]!
    79c4:	ldr	r0, [r3, #44]	; 0x2c
    79c8:	add	r0, r0, r6
    79cc:	str	r0, [r5, #12]
    79d0:	mov	r6, r8
    79d4:	ldr	r4, [r6, r9, lsl #3]!
    79d8:	cmp	r4, #19
    79dc:	bhi	7e38 <gen_linktype+0x101c>
    79e0:	add	r7, r9, #1
    79e4:	cmp	r9, #15
    79e8:	str	r7, [r3, #92]	; 0x5c
    79ec:	bge	99e4 <gen_linktype+0x2bc8>
    79f0:	mov	r0, #1024	; 0x400
    79f4:	lsl	r4, r0, r7
    79f8:	mov	r0, r4
    79fc:	bl	f1c <malloc@plt>
    7a00:	cmp	r0, #0
    7a04:	str	r0, [r6, #12]
    7a08:	beq	99e4 <gen_linktype+0x2bc8>
    7a0c:	mov	r1, #0
    7a10:	mov	r2, r4
    7a14:	add	r6, r6, #8
    7a18:	bl	f88 <memset@plt>
    7a1c:	str	r4, [r6]
    7a20:	cmp	r4, #19
    7a24:	ldr	r3, [pc, #4060]	; 8a08 <gen_linktype+0x1bec>
    7a28:	add	r3, pc, r3
    7a2c:	bhi	7e3c <gen_linktype+0x1020>
    7a30:	b	99e4 <gen_linktype+0x2bc8>
    7a34:	mov	r9, r6
    7a38:	sub	r1, r4, #20
    7a3c:	mov	r2, #80	; 0x50
    7a40:	str	r1, [sl]
    7a44:	ldr	r0, [sl, #4]
    7a48:	str	r2, [r0, r1]!
    7a4c:	mov	r2, r8
    7a50:	ldr	r1, [sp]
    7a54:	str	r1, [r0, #12]
    7a58:	mov	r1, r2
    7a5c:	ldr	r2, [r2, #16]
    7a60:	cmp	r2, #0
    7a64:	bne	7a58 <gen_linktype+0xc3c>
    7a68:	str	r0, [r1, #16]
    7a6c:	ldr	r7, [pc, #3992]	; 8a0c <gen_linktype+0x1bf0>
    7a70:	add	r7, pc, r7
    7a74:	ldr	r4, [r7, r9, lsl #3]!
    7a78:	cmp	r4, #19
    7a7c:	bhi	7ad4 <gen_linktype+0xcb8>
    7a80:	add	r6, r9, #1
    7a84:	cmp	r9, #15
    7a88:	str	r6, [r3, #92]	; 0x5c
    7a8c:	bge	99e4 <gen_linktype+0x2bc8>
    7a90:	mov	r0, #1024	; 0x400
    7a94:	lsl	r4, r0, r6
    7a98:	mov	r0, r4
    7a9c:	bl	f1c <malloc@plt>
    7aa0:	cmp	r0, #0
    7aa4:	str	r0, [r7, #12]
    7aa8:	beq	99e4 <gen_linktype+0x2bc8>
    7aac:	mov	r1, #0
    7ab0:	mov	r2, r4
    7ab4:	add	r7, r7, #8
    7ab8:	bl	f88 <memset@plt>
    7abc:	str	r4, [r7]
    7ac0:	cmp	r4, #19
    7ac4:	ldr	r3, [pc, #3908]	; 8a10 <gen_linktype+0x1bf4>
    7ac8:	add	r3, pc, r3
    7acc:	bhi	7ad8 <gen_linktype+0xcbc>
    7ad0:	b	99e4 <gen_linktype+0x2bc8>
    7ad4:	mov	r6, r9
    7ad8:	sub	r1, r4, #20
    7adc:	mov	r2, #84	; 0x54
    7ae0:	str	r1, [r7]
    7ae4:	ldr	r0, [r7, #4]
    7ae8:	str	r2, [r0, r1]!
    7aec:	mov	r1, #1
    7af0:	mov	r2, r8
    7af4:	str	r1, [r0, #12]
    7af8:	mov	r1, r2
    7afc:	ldr	r2, [r2, #16]
    7b00:	cmp	r2, #0
    7b04:	bne	7af8 <gen_linktype+0xcdc>
    7b08:	str	r0, [r1, #16]
    7b0c:	ldr	r5, [pc, #4092]	; 8b10 <gen_linktype+0x1cf4>
    7b10:	add	r5, pc, r5
    7b14:	ldr	r4, [r5, r6, lsl #3]!
    7b18:	cmp	r4, #207	; 0xcf
    7b1c:	bhi	7b74 <gen_linktype+0xd58>
    7b20:	add	r7, r6, #1
    7b24:	cmp	r6, #15
    7b28:	str	r7, [r3, #92]	; 0x5c
    7b2c:	bge	99e4 <gen_linktype+0x2bc8>
    7b30:	mov	r0, #1024	; 0x400
    7b34:	lsl	r4, r0, r7
    7b38:	mov	r0, r4
    7b3c:	bl	f1c <malloc@plt>
    7b40:	cmp	r0, #0
    7b44:	str	r0, [r5, #12]
    7b48:	beq	99e4 <gen_linktype+0x2bc8>
    7b4c:	mov	r1, #0
    7b50:	mov	r2, r4
    7b54:	add	r5, r5, #8
    7b58:	bl	f88 <memset@plt>
    7b5c:	str	r4, [r5]
    7b60:	cmp	r4, #207	; 0xcf
    7b64:	ldr	r3, [pc, #4056]	; 8b44 <gen_linktype+0x1d28>
    7b68:	add	r3, pc, r3
    7b6c:	bhi	7b78 <gen_linktype+0xd5c>
    7b70:	b	99e4 <gen_linktype+0x2bc8>
    7b74:	mov	r7, r6
    7b78:	sub	r0, r4, #208	; 0xd0
    7b7c:	str	r0, [r5]
    7b80:	ldr	r1, [r5, #4]
    7b84:	add	sl, r1, r0
    7b88:	mov	r0, #21
    7b8c:	str	r8, [sl, #4]
    7b90:	str	r0, [sl, #8]
    7b94:	mov	r0, #1
    7b98:	str	r0, [sl, #20]
    7b9c:	str	sl, [sl, #96]	; 0x60
    7ba0:	ldrb	r0, [r3, #16]
    7ba4:	ldr	r6, [r3, #48]	; 0x30
    7ba8:	cmp	r0, #1
    7bac:	bne	7ce0 <gen_linktype+0xec4>
    7bb0:	ldr	r9, [r3, #100]	; 0x64
    7bb4:	ldr	r4, [pc, #4060]	; 8b98 <gen_linktype+0x1d7c>
    7bb8:	cmn	r9, #1
    7bbc:	add	r4, pc, r4
    7bc0:	beq	7c24 <gen_linktype+0xe08>
    7bc4:	ldr	r5, [r4, r7, lsl #3]!
    7bc8:	cmp	r5, #19
    7bcc:	bhi	7c48 <gen_linktype+0xe2c>
    7bd0:	add	r8, r7, #1
    7bd4:	cmp	r7, #15
    7bd8:	str	r8, [r3, #92]	; 0x5c
    7bdc:	bge	99e4 <gen_linktype+0x2bc8>
    7be0:	mov	r0, #1024	; 0x400
    7be4:	lsl	r5, r0, r8
    7be8:	mov	r0, r5
    7bec:	bl	f1c <malloc@plt>
    7bf0:	cmp	r0, #0
    7bf4:	str	r0, [r4, #12]
    7bf8:	beq	99e4 <gen_linktype+0x2bc8>
    7bfc:	mov	r1, #0
    7c00:	mov	r2, r5
    7c04:	add	r4, r4, #8
    7c08:	bl	f88 <memset@plt>
    7c0c:	str	r5, [r4]
    7c10:	cmp	r5, #19
    7c14:	ldr	r3, [pc, #4072]	; 8c04 <gen_linktype+0x1de8>
    7c18:	add	r3, pc, r3
    7c1c:	bhi	7c4c <gen_linktype+0xe30>
    7c20:	b	99e4 <gen_linktype+0x2bc8>
    7c24:	bl	1309c <alloc_reg>
    7c28:	ldr	r3, [pc, #4056]	; 8c08 <gen_linktype+0x1dec>
    7c2c:	mov	r9, r0
    7c30:	add	r3, pc, r3
    7c34:	str	r0, [r3, #100]	; 0x64
    7c38:	ldr	r7, [r3, #92]	; 0x5c
    7c3c:	ldr	r5, [r4, r7, lsl #3]!
    7c40:	cmp	r5, #19
    7c44:	bls	7bd0 <gen_linktype+0xdb4>
    7c48:	mov	r8, r7
    7c4c:	sub	r0, r5, #20
    7c50:	mov	r1, #97	; 0x61
    7c54:	str	r0, [r4]
    7c58:	ldr	r5, [r4, #4]
    7c5c:	str	r1, [r5, r0]!
    7c60:	cmp	r5, #0
    7c64:	str	r9, [r5, #12]
    7c68:	beq	7cdc <gen_linktype+0xec0>
    7c6c:	ldr	r7, [pc, #3992]	; 8c0c <gen_linktype+0x1df0>
    7c70:	add	r7, pc, r7
    7c74:	ldr	r4, [r7, r8, lsl #3]!
    7c78:	cmp	r4, #19
    7c7c:	bhi	7f90 <gen_linktype+0x1174>
    7c80:	add	r9, r8, #1
    7c84:	cmp	r8, #15
    7c88:	str	r9, [r3, #92]	; 0x5c
    7c8c:	bge	99e4 <gen_linktype+0x2bc8>
    7c90:	mov	r0, #1024	; 0x400
    7c94:	lsl	r4, r0, r9
    7c98:	mov	r0, r4
    7c9c:	bl	f1c <malloc@plt>
    7ca0:	str	r0, [r7, #12]
    7ca4:	cmp	r0, #0
    7ca8:	ldr	r8, [pc, #4088]	; 8ca8 <gen_linktype+0x1e8c>
    7cac:	add	r8, pc, r8
    7cb0:	beq	99e4 <gen_linktype+0x2bc8>
    7cb4:	mov	r1, #0
    7cb8:	mov	r2, r4
    7cbc:	add	r7, r7, #8
    7cc0:	bl	f88 <memset@plt>
    7cc4:	str	r4, [r7]
    7cc8:	cmp	r4, #19
    7ccc:	ldr	r3, [pc, #4056]	; 8cac <gen_linktype+0x1e90>
    7cd0:	add	r3, pc, r3
    7cd4:	bhi	7f9c <gen_linktype+0x1180>
    7cd8:	b	99e4 <gen_linktype+0x2bc8>
    7cdc:	mov	r7, r8
    7ce0:	ldr	r8, [pc, #4040]	; 8cb0 <gen_linktype+0x1e94>
    7ce4:	add	r8, pc, r8
    7ce8:	mov	r5, r8
    7cec:	ldr	r4, [r5, r7, lsl #3]!
    7cf0:	cmp	r4, #19
    7cf4:	bhi	7d4c <gen_linktype+0xf30>
    7cf8:	add	r9, r7, #1
    7cfc:	cmp	r7, #15
    7d00:	str	r9, [r3, #92]	; 0x5c
    7d04:	bge	99e4 <gen_linktype+0x2bc8>
    7d08:	mov	r0, #1024	; 0x400
    7d0c:	lsl	r4, r0, r9
    7d10:	mov	r0, r4
    7d14:	bl	f1c <malloc@plt>
    7d18:	cmp	r0, #0
    7d1c:	str	r0, [r5, #12]
    7d20:	beq	99e4 <gen_linktype+0x2bc8>
    7d24:	mov	r1, #0
    7d28:	mov	r2, r4
    7d2c:	add	r5, r5, #8
    7d30:	bl	f88 <memset@plt>
    7d34:	str	r4, [r5]
    7d38:	cmp	r4, #19
    7d3c:	ldr	r3, [pc, #3952]	; 8cb4 <gen_linktype+0x1e98>
    7d40:	add	r3, pc, r3
    7d44:	bhi	7d50 <gen_linktype+0xf34>
    7d48:	b	99e4 <gen_linktype+0x2bc8>
    7d4c:	mov	r9, r7
    7d50:	sub	r0, r4, #20
    7d54:	mov	r1, #48	; 0x30
    7d58:	str	r0, [r5]
    7d5c:	ldr	r5, [r5, #4]
    7d60:	str	r1, [r5, r0]!
    7d64:	ldr	r0, [r3, #44]	; 0x2c
    7d68:	add	r0, r0, r6
    7d6c:	str	r0, [r5, #12]
    7d70:	mov	r6, r8
    7d74:	ldr	r4, [r6, r9, lsl #3]!
    7d78:	cmp	r4, #19
    7d7c:	bhi	7fdc <gen_linktype+0x11c0>
    7d80:	add	r7, r9, #1
    7d84:	cmp	r9, #15
    7d88:	str	r7, [r3, #92]	; 0x5c
    7d8c:	bge	99e4 <gen_linktype+0x2bc8>
    7d90:	mov	r0, #1024	; 0x400
    7d94:	lsl	r4, r0, r7
    7d98:	mov	r0, r4
    7d9c:	bl	f1c <malloc@plt>
    7da0:	cmp	r0, #0
    7da4:	str	r0, [r6, #12]
    7da8:	beq	99e4 <gen_linktype+0x2bc8>
    7dac:	mov	r1, #0
    7db0:	mov	r2, r4
    7db4:	add	r6, r6, #8
    7db8:	bl	f88 <memset@plt>
    7dbc:	str	r4, [r6]
    7dc0:	cmp	r4, #19
    7dc4:	ldr	r3, [pc, #3996]	; 8d68 <gen_linktype+0x1f4c>
    7dc8:	add	r3, pc, r3
    7dcc:	bhi	7fe0 <gen_linktype+0x11c4>
    7dd0:	b	99e4 <gen_linktype+0x2bc8>
    7dd4:	.word	0x0003f2a4
    7dd8:	.word	0x0003f684
    7ddc:	.word	0x0003f640
    7de0:	.word	0x0003f60c
    7de4:	.word	0x0003f53c
    7de8:	.word	0x0003f5a0
    7dec:	mov	r9, r8
    7df0:	ldr	r8, [pc, #3956]	; 8d6c <gen_linktype+0x1f50>
    7df4:	add	r8, pc, r8
    7df8:	sub	r1, r4, #20
    7dfc:	mov	r2, #80	; 0x50
    7e00:	str	r1, [r7]
    7e04:	ldr	r0, [r7, #4]
    7e08:	str	r2, [r0, r1]!
    7e0c:	mov	r2, r5
    7e10:	str	r6, [r0, #12]
    7e14:	mov	r1, r2
    7e18:	ldr	r2, [r2, #16]
    7e1c:	cmp	r2, #0
    7e20:	bne	7e14 <gen_linktype+0xff8>
    7e24:	str	r0, [r1, #16]
    7e28:	mov	r6, r8
    7e2c:	ldr	r4, [r6, r9, lsl #3]!
    7e30:	cmp	r4, #19
    7e34:	bls	79e0 <gen_linktype+0xbc4>
    7e38:	mov	r7, r9
    7e3c:	sub	r1, r4, #20
    7e40:	mov	r2, #84	; 0x54
    7e44:	str	r1, [r6]
    7e48:	ldr	r0, [r6, #4]
    7e4c:	str	r2, [r0, r1]!
    7e50:	mov	r1, #240	; 0xf0
    7e54:	mov	r2, r5
    7e58:	str	r1, [r0, #12]
    7e5c:	mov	r1, r2
    7e60:	ldr	r2, [r2, #16]
    7e64:	cmp	r2, #0
    7e68:	bne	7e5c <gen_linktype+0x1040>
    7e6c:	str	r0, [r1, #16]
    7e70:	ldr	r4, [r8, r7, lsl #3]!
    7e74:	cmp	r4, #207	; 0xcf
    7e78:	bhi	7ec4 <gen_linktype+0x10a8>
    7e7c:	add	r0, r7, #1
    7e80:	cmp	r7, #15
    7e84:	str	r0, [r3, #92]	; 0x5c
    7e88:	bge	99e4 <gen_linktype+0x2bc8>
    7e8c:	mov	r1, #1024	; 0x400
    7e90:	lsl	r4, r1, r0
    7e94:	mov	r0, r4
    7e98:	bl	f1c <malloc@plt>
    7e9c:	cmp	r0, #0
    7ea0:	str	r0, [r8, #12]
    7ea4:	beq	99e4 <gen_linktype+0x2bc8>
    7ea8:	mov	r1, #0
    7eac:	mov	r2, r4
    7eb0:	add	r8, r8, #8
    7eb4:	bl	f88 <memset@plt>
    7eb8:	cmp	r4, #207	; 0xcf
    7ebc:	str	r4, [r8]
    7ec0:	bls	99e4 <gen_linktype+0x2bc8>
    7ec4:	sub	r0, r4, #208	; 0xd0
    7ec8:	cmp	sl, #0
    7ecc:	str	r0, [r8]
    7ed0:	ldr	r1, [r8, #4]
    7ed4:	add	r4, r1, r0
    7ed8:	mov	r0, #21
    7edc:	str	r5, [r4, #4]
    7ee0:	str	r0, [r4, #8]
    7ee4:	mov	r0, #96	; 0x60
    7ee8:	str	r0, [r4, #20]
    7eec:	str	r4, [r4, #96]	; 0x60
    7ef0:	beq	7f20 <gen_linktype+0x1104>
    7ef4:	mov	r0, sl
    7ef8:	ldr	r1, [r0, #44]	; 0x2c
    7efc:	add	r2, r0, #84	; 0x54
    7f00:	cmp	r1, #0
    7f04:	mov	r1, #84	; 0x54
    7f08:	movweq	r1, #60	; 0x3c
    7f0c:	addeq	r2, r0, #60	; 0x3c
    7f10:	ldr	r0, [r0, r1]
    7f14:	str	r4, [r2]
    7f18:	cmp	r0, #0
    7f1c:	bne	7ef8 <gen_linktype+0x10dc>
    7f20:	ldr	r0, [sl, #44]	; 0x2c
    7f24:	cmp	r4, #0
    7f28:	clz	r0, r0
    7f2c:	lsr	r0, r0, #5
    7f30:	str	r0, [sl, #44]	; 0x2c
    7f34:	ldr	r0, [r4, #44]	; 0x2c
    7f38:	clz	r1, r0
    7f3c:	lsr	r1, r1, #5
    7f40:	str	r1, [r4, #44]	; 0x2c
    7f44:	str	r4, [sp, #4]
    7f48:	beq	8134 <gen_linktype+0x1318>
    7f4c:	mov	r2, #60	; 0x3c
    7f50:	cmp	r0, #0
    7f54:	mov	r1, r4
    7f58:	movweq	r2, #84	; 0x54
    7f5c:	ldr	r0, [r1, r2]!
    7f60:	cmp	r0, #0
    7f64:	beq	8138 <gen_linktype+0x131c>
    7f68:	ldr	r2, [r0, #44]	; 0x2c
    7f6c:	add	r1, r0, #84	; 0x54
    7f70:	cmp	r2, #0
    7f74:	mov	r2, #84	; 0x54
    7f78:	movweq	r2, #60	; 0x3c
    7f7c:	addeq	r1, r0, #60	; 0x3c
    7f80:	ldr	r0, [r0, r2]
    7f84:	cmp	r0, #0
    7f88:	bne	7f68 <gen_linktype+0x114c>
    7f8c:	b	8138 <gen_linktype+0x131c>
    7f90:	mov	r9, r8
    7f94:	ldr	r8, [pc, #3924]	; 8ef0 <gen_linktype+0x20d4>
    7f98:	add	r8, pc, r8
    7f9c:	sub	r1, r4, #20
    7fa0:	mov	r2, #80	; 0x50
    7fa4:	str	r1, [r7]
    7fa8:	ldr	r0, [r7, #4]
    7fac:	str	r2, [r0, r1]!
    7fb0:	mov	r2, r5
    7fb4:	str	r6, [r0, #12]
    7fb8:	mov	r1, r2
    7fbc:	ldr	r2, [r2, #16]
    7fc0:	cmp	r2, #0
    7fc4:	bne	7fb8 <gen_linktype+0x119c>
    7fc8:	str	r0, [r1, #16]
    7fcc:	mov	r6, r8
    7fd0:	ldr	r4, [r6, r9, lsl #3]!
    7fd4:	cmp	r4, #19
    7fd8:	bls	7d80 <gen_linktype+0xf64>
    7fdc:	mov	r7, r9
    7fe0:	sub	r1, r4, #20
    7fe4:	mov	r2, #84	; 0x54
    7fe8:	str	r1, [r6]
    7fec:	ldr	r0, [r6, #4]
    7ff0:	str	r2, [r0, r1]!
    7ff4:	mov	r1, #240	; 0xf0
    7ff8:	mov	r2, r5
    7ffc:	str	r1, [r0, #12]
    8000:	mov	r1, r2
    8004:	ldr	r2, [r2, #16]
    8008:	cmp	r2, #0
    800c:	bne	8000 <gen_linktype+0x11e4>
    8010:	str	r0, [r1, #16]
    8014:	ldr	r4, [r8, r7, lsl #3]!
    8018:	cmp	r4, #207	; 0xcf
    801c:	bhi	8068 <gen_linktype+0x124c>
    8020:	add	r0, r7, #1
    8024:	cmp	r7, #15
    8028:	str	r0, [r3, #92]	; 0x5c
    802c:	bge	99e4 <gen_linktype+0x2bc8>
    8030:	mov	r1, #1024	; 0x400
    8034:	lsl	r4, r1, r0
    8038:	mov	r0, r4
    803c:	bl	f1c <malloc@plt>
    8040:	cmp	r0, #0
    8044:	str	r0, [r8, #12]
    8048:	beq	99e4 <gen_linktype+0x2bc8>
    804c:	mov	r1, #0
    8050:	mov	r2, r4
    8054:	add	r8, r8, #8
    8058:	bl	f88 <memset@plt>
    805c:	cmp	r4, #207	; 0xcf
    8060:	str	r4, [r8]
    8064:	bls	99e4 <gen_linktype+0x2bc8>
    8068:	sub	r0, r4, #208	; 0xd0
    806c:	cmp	sl, #0
    8070:	str	r0, [r8]
    8074:	ldr	r1, [r8, #4]
    8078:	add	r4, r1, r0
    807c:	mov	r0, #21
    8080:	str	r5, [r4, #4]
    8084:	str	r0, [r4, #8]
    8088:	mov	r0, #64	; 0x40
    808c:	str	r0, [r4, #20]
    8090:	str	r4, [r4, #96]	; 0x60
    8094:	beq	80c4 <gen_linktype+0x12a8>
    8098:	mov	r0, sl
    809c:	ldr	r1, [r0, #44]	; 0x2c
    80a0:	add	r2, r0, #84	; 0x54
    80a4:	cmp	r1, #0
    80a8:	mov	r1, #84	; 0x54
    80ac:	movweq	r1, #60	; 0x3c
    80b0:	addeq	r2, r0, #60	; 0x3c
    80b4:	ldr	r0, [r0, r1]
    80b8:	str	r4, [r2]
    80bc:	cmp	r0, #0
    80c0:	bne	809c <gen_linktype+0x1280>
    80c4:	ldr	r0, [sl, #44]	; 0x2c
    80c8:	cmp	r4, #0
    80cc:	clz	r0, r0
    80d0:	lsr	r0, r0, #5
    80d4:	str	r0, [sl, #44]	; 0x2c
    80d8:	ldr	r0, [r4, #44]	; 0x2c
    80dc:	clz	r1, r0
    80e0:	lsr	r1, r1, #5
    80e4:	str	r1, [r4, #44]	; 0x2c
    80e8:	str	r4, [sp, #4]
    80ec:	beq	8134 <gen_linktype+0x1318>
    80f0:	mov	r2, #60	; 0x3c
    80f4:	cmp	r0, #0
    80f8:	mov	r1, r4
    80fc:	movweq	r2, #84	; 0x54
    8100:	ldr	r0, [r1, r2]!
    8104:	cmp	r0, #0
    8108:	beq	8138 <gen_linktype+0x131c>
    810c:	ldr	r2, [r0, #44]	; 0x2c
    8110:	add	r1, r0, #84	; 0x54
    8114:	cmp	r2, #0
    8118:	mov	r2, #84	; 0x54
    811c:	movweq	r2, #60	; 0x3c
    8120:	addeq	r1, r0, #60	; 0x3c
    8124:	ldr	r0, [r0, r2]
    8128:	cmp	r0, #0
    812c:	bne	810c <gen_linktype+0x12f0>
    8130:	b	8138 <gen_linktype+0x131c>
    8134:	add	r1, sp, #4
    8138:	str	sl, [r1]
    813c:	ldr	r0, [r4, #44]	; 0x2c
    8140:	clz	r0, r0
    8144:	lsr	r0, r0, #5
    8148:	str	r0, [r4, #44]	; 0x2c
    814c:	ldr	r0, [sl, #96]	; 0x60
    8150:	str	r0, [r4, #96]	; 0x60
    8154:	mov	r0, r4
    8158:	sub	sp, fp, #28
    815c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8160:	cmp	r5, #254	; 0xfe
    8164:	beq	8264 <gen_linktype+0x1448>
    8168:	cmp	r5, #1536	; 0x600
    816c:	moveq	r5, #37	; 0x25
    8170:	b	8270 <gen_linktype+0x1454>
    8174:	movw	r0, #32923	; 0x809b
    8178:	cmp	r5, r0
    817c:	beq	826c <gen_linktype+0x1450>
    8180:	movw	r0, #34525	; 0x86dd
    8184:	cmp	r5, r0
    8188:	moveq	r5, #87	; 0x57
    818c:	b	8270 <gen_linktype+0x1454>
    8190:	mov	r7, r0
    8194:	sub	r1, r4, #20
    8198:	mov	r2, #84	; 0x54
    819c:	str	r1, [r6]
    81a0:	ldr	r0, [r6, #4]
    81a4:	str	r2, [r0, r1]!
    81a8:	mvn	r1, #255	; 0xff
    81ac:	mov	r2, r9
    81b0:	str	r1, [r0, #12]
    81b4:	mov	r1, r2
    81b8:	ldr	r2, [r2, #16]
    81bc:	cmp	r2, #0
    81c0:	bne	81b4 <gen_linktype+0x1398>
    81c4:	str	r0, [r1, #16]
    81c8:	ldr	r4, [r5, r7, lsl #3]!
    81cc:	cmp	r4, #207	; 0xcf
    81d0:	bhi	821c <gen_linktype+0x1400>
    81d4:	add	r0, r7, #1
    81d8:	cmp	r7, #15
    81dc:	str	r0, [r8, #92]	; 0x5c
    81e0:	bge	99e4 <gen_linktype+0x2bc8>
    81e4:	mov	r1, #1024	; 0x400
    81e8:	lsl	r4, r1, r0
    81ec:	mov	r0, r4
    81f0:	bl	f1c <malloc@plt>
    81f4:	cmp	r0, #0
    81f8:	str	r0, [r5, #12]
    81fc:	beq	99e4 <gen_linktype+0x2bc8>
    8200:	mov	r1, #0
    8204:	mov	r2, r4
    8208:	add	r5, r5, #8
    820c:	bl	f88 <memset@plt>
    8210:	cmp	r4, #207	; 0xcf
    8214:	str	r4, [r5]
    8218:	bls	99e4 <gen_linktype+0x2bc8>
    821c:	sub	r0, r4, #208	; 0xd0
    8220:	str	r0, [r5]
    8224:	ldr	r1, [r5, #4]
    8228:	add	r4, r1, r0
    822c:	mov	r0, #21
    8230:	str	r9, [r4, #4]
    8234:	str	r0, [r4, #8]
    8238:	movw	r0, #17152	; 0x4300
    823c:	movt	r0, #19783	; 0x4d47
    8240:	str	r0, [r4, #20]
    8244:	str	r4, [r4, #96]	; 0x60
    8248:	mov	r0, r4
    824c:	sub	sp, fp, #28
    8250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8254:	mov	r5, #49	; 0x31
    8258:	b	8270 <gen_linktype+0x1454>
    825c:	mov	r5, #33	; 0x21
    8260:	b	8270 <gen_linktype+0x1454>
    8264:	mov	r5, #35	; 0x23
    8268:	b	8270 <gen_linktype+0x1454>
    826c:	mov	r5, #41	; 0x29
    8270:	ldr	r1, [r8, #40]	; 0x28
    8274:	mov	r0, #2
    8278:	mov	r2, #8
    827c:	mov	r3, r5
    8280:	sub	sp, fp, #28
    8284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8288:	b	9ef4 <gen_cmp>
    828c:	mov	r0, r5
    8290:	sub	sp, fp, #28
    8294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8298:	b	1b028 <gen_llc_linktype>
    829c:	.word	0x0003f108
    82a0:	.word	0x0003f15c
    82a4:	.word	0x0003f128
    82a8:	.word	0x0003f058
    82ac:	.word	0x0003f0bc
    82b0:	mov	r0, #1
    82b4:	mov	r1, #0
    82b8:	mov	r2, #16
    82bc:	bl	1669c <gen_load_a>
    82c0:	mov	r9, r0
    82c4:	ldr	r0, [r8, #92]	; 0x5c
    82c8:	ldr	r4, [pc, #3956]	; 9244 <gen_linktype+0x2428>
    82cc:	add	r4, pc, r4
    82d0:	mov	r7, r4
    82d4:	ldr	r6, [r7, r0, lsl #3]!
    82d8:	cmp	r6, #207	; 0xcf
    82dc:	bhi	8328 <gen_linktype+0x150c>
    82e0:	add	r1, r0, #1
    82e4:	cmp	r0, #15
    82e8:	str	r1, [r8, #92]	; 0x5c
    82ec:	bge	99e4 <gen_linktype+0x2bc8>
    82f0:	mov	r0, #1024	; 0x400
    82f4:	lsl	r6, r0, r1
    82f8:	mov	r0, r6
    82fc:	bl	f1c <malloc@plt>
    8300:	cmp	r0, #0
    8304:	str	r0, [r7, #12]
    8308:	beq	99e4 <gen_linktype+0x2bc8>
    830c:	mov	r1, #0
    8310:	mov	r2, r6
    8314:	add	r7, r7, #8
    8318:	bl	f88 <memset@plt>
    831c:	cmp	r6, #207	; 0xcf
    8320:	str	r6, [r7]
    8324:	bls	99e4 <gen_linktype+0x2bc8>
    8328:	sub	r0, r6, #208	; 0xd0
    832c:	mov	sl, #69	; 0x45
    8330:	mov	r2, #16
    8334:	str	r0, [r7]
    8338:	ldr	r1, [r7, #4]
    833c:	add	r7, r1, r0
    8340:	mov	r0, #8
    8344:	mov	r1, #0
    8348:	str	r0, [r7, #20]
    834c:	mov	r0, #1
    8350:	stmib	r7, {r9, sl}
    8354:	str	r7, [r7, #96]	; 0x60
    8358:	bl	1669c <gen_load_a>
    835c:	mov	r9, r0
    8360:	ldr	r0, [r8, #92]	; 0x5c
    8364:	ldr	r6, [r4, r0, lsl #3]!
    8368:	cmp	r6, #207	; 0xcf
    836c:	bhi	83b8 <gen_linktype+0x159c>
    8370:	add	r1, r0, #1
    8374:	cmp	r0, #15
    8378:	str	r1, [r8, #92]	; 0x5c
    837c:	bge	99e4 <gen_linktype+0x2bc8>
    8380:	mov	r0, #1024	; 0x400
    8384:	lsl	r6, r0, r1
    8388:	mov	r0, r6
    838c:	bl	f1c <malloc@plt>
    8390:	cmp	r0, #0
    8394:	str	r0, [r4, #12]
    8398:	beq	99e4 <gen_linktype+0x2bc8>
    839c:	mov	r1, #0
    83a0:	mov	r2, r6
    83a4:	add	r4, r4, #8
    83a8:	bl	f88 <memset@plt>
    83ac:	cmp	r6, #207	; 0xcf
    83b0:	str	r6, [r4]
    83b4:	bls	99e4 <gen_linktype+0x2bc8>
    83b8:	sub	r0, r6, #208	; 0xd0
    83bc:	str	r0, [r4]
    83c0:	ldr	r1, [r4, #4]
    83c4:	adds	r0, r1, r0
    83c8:	mov	r1, #4
    83cc:	str	r1, [r0, #20]
    83d0:	stmib	r0, {r9, sl}
    83d4:	ldr	r1, [r0, #44]	; 0x2c
    83d8:	clz	r1, r1
    83dc:	lsr	r1, r1, #5
    83e0:	str	r1, [r0, #44]	; 0x2c
    83e4:	str	r0, [r0, #96]	; 0x60
    83e8:	beq	8420 <gen_linktype+0x1604>
    83ec:	ldr	r1, [r7, #96]	; 0x60
    83f0:	mov	r2, r0
    83f4:	ldr	r3, [r2, #44]	; 0x2c
    83f8:	add	r6, r2, #84	; 0x54
    83fc:	cmp	r3, #0
    8400:	mov	r3, #84	; 0x54
    8404:	movweq	r3, #60	; 0x3c
    8408:	addeq	r6, r2, #60	; 0x3c
    840c:	ldr	r2, [r2, r3]
    8410:	str	r1, [r6]
    8414:	cmp	r2, #0
    8418:	bne	83f4 <gen_linktype+0x15d8>
    841c:	ldr	r1, [r0, #44]	; 0x2c
    8420:	clz	r1, r1
    8424:	cmp	r7, #0
    8428:	lsr	r1, r1, #5
    842c:	str	r1, [r0, #44]	; 0x2c
    8430:	ldr	r1, [r7, #44]	; 0x2c
    8434:	clz	r2, r1
    8438:	lsr	r2, r2, #5
    843c:	str	r2, [r7, #44]	; 0x2c
    8440:	str	r7, [sp, #4]
    8444:	beq	85e4 <gen_linktype+0x17c8>
    8448:	mov	r3, #60	; 0x3c
    844c:	cmp	r1, #0
    8450:	mov	r2, r7
    8454:	movweq	r3, #84	; 0x54
    8458:	ldr	r1, [r2, r3]!
    845c:	cmp	r1, #0
    8460:	beq	85e8 <gen_linktype+0x17cc>
    8464:	ldr	r3, [r1, #44]	; 0x2c
    8468:	add	r2, r1, #84	; 0x54
    846c:	cmp	r3, #0
    8470:	mov	r3, #84	; 0x54
    8474:	movweq	r3, #60	; 0x3c
    8478:	addeq	r2, r1, #60	; 0x3c
    847c:	ldr	r1, [r1, r3]
    8480:	cmp	r1, #0
    8484:	bne	8464 <gen_linktype+0x1648>
    8488:	b	85e8 <gen_linktype+0x17cc>
    848c:	cmp	r5, #2048	; 0x800
    8490:	bge	8568 <gen_linktype+0x174c>
    8494:	cmp	r5, #253	; 0xfd
    8498:	bgt	86ec <gen_linktype+0x18d0>
    849c:	cmp	r5, #66	; 0x42
    84a0:	beq	8c90 <gen_linktype+0x1e74>
    84a4:	cmp	r5, #224	; 0xe0
    84a8:	moveq	r5, #43	; 0x2b
    84ac:	b	9028 <gen_linktype+0x220c>
    84b0:	.word	0x0003f004
    84b4:	movw	r0, #34525	; 0x86dd
    84b8:	cmp	r5, r0
    84bc:	beq	8708 <gen_linktype+0x18ec>
    84c0:	cmp	r5, #2048	; 0x800
    84c4:	bne	8c80 <gen_linktype+0x1e64>
    84c8:	mov	r0, #1
    84cc:	mov	r1, #0
    84d0:	mov	r2, #16
    84d4:	bl	1669c <gen_load_a>
    84d8:	mov	r9, r0
    84dc:	ldr	r0, [r8, #92]	; 0x5c
    84e0:	ldr	r5, [pc, #4076]	; 94d4 <gen_linktype+0x26b8>
    84e4:	add	r5, pc, r5
    84e8:	mov	r6, r5
    84ec:	ldr	r4, [r6, r0, lsl #3]!
    84f0:	cmp	r4, #19
    84f4:	bhi	8cb8 <gen_linktype+0x1e9c>
    84f8:	add	r7, r0, #1
    84fc:	cmp	r0, #15
    8500:	str	r7, [r8, #92]	; 0x5c
    8504:	bge	99e4 <gen_linktype+0x2bc8>
    8508:	mov	r0, #1024	; 0x400
    850c:	lsl	r4, r0, r7
    8510:	mov	r0, r4
    8514:	bl	f1c <malloc@plt>
    8518:	cmp	r0, #0
    851c:	str	r0, [r6, #12]
    8520:	beq	99e4 <gen_linktype+0x2bc8>
    8524:	mov	r1, #0
    8528:	mov	r2, r4
    852c:	add	r6, r6, #8
    8530:	bl	f88 <memset@plt>
    8534:	cmp	r4, #19
    8538:	str	r4, [r6]
    853c:	bhi	8cbc <gen_linktype+0x1ea0>
    8540:	b	99e4 <gen_linktype+0x2bc8>
    8544:	cmp	r5, #2048	; 0x800
    8548:	beq	8784 <gen_linktype+0x1968>
    854c:	movw	r1, #34525	; 0x86dd
    8550:	cmp	r5, r1
    8554:	bne	8c80 <gen_linktype+0x1e64>
    8558:	mov	r3, #10
    855c:	b	8788 <gen_linktype+0x196c>
    8560:	.word	0x0003ef80
    8564:	.word	0x0003eeac
    8568:	movw	r0, #32922	; 0x809a
    856c:	cmp	r5, r0
    8570:	bgt	89dc <gen_linktype+0x1bc0>
    8574:	cmp	r5, #2048	; 0x800
    8578:	beq	9024 <gen_linktype+0x2208>
    857c:	movw	r0, #24579	; 0x6003
    8580:	cmp	r5, r0
    8584:	moveq	r5, #39	; 0x27
    8588:	b	9028 <gen_linktype+0x220c>
    858c:	.word	0x0003ef14
    8590:	movw	r0, #32820	; 0x8034
    8594:	cmp	r5, r0
    8598:	ble	8b9c <gen_linktype+0x1d80>
    859c:	movw	r0, #32821	; 0x8035
    85a0:	cmp	r5, r0
    85a4:	beq	9050 <gen_linktype+0x2234>
    85a8:	movw	r0, #32923	; 0x809b
    85ac:	cmp	r5, r0
    85b0:	beq	906c <gen_linktype+0x2250>
    85b4:	movw	r0, #34525	; 0x86dd
    85b8:	cmp	r5, r0
    85bc:	bne	8c80 <gen_linktype+0x1e64>
    85c0:	ldr	r1, [r8, #40]	; 0x28
    85c4:	mov	r0, #1
    85c8:	mov	r2, #16
    85cc:	mov	r3, #196	; 0xc4
    85d0:	sub	sp, fp, #28
    85d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    85d8:	b	9ef4 <gen_cmp>
    85dc:	.word	0x0003ee18
    85e0:	.word	0x0003ee80
    85e4:	add	r2, sp, #4
    85e8:	str	r0, [r2]
    85ec:	ldr	r1, [r7, #44]	; 0x2c
    85f0:	clz	r1, r1
    85f4:	lsr	r1, r1, #5
    85f8:	str	r1, [r7, #44]	; 0x2c
    85fc:	ldr	r0, [r0, #96]	; 0x60
    8600:	str	r0, [r7, #96]	; 0x60
    8604:	mov	r0, r5
    8608:	bl	1b028 <gen_llc_linktype>
    860c:	mov	r4, r0
    8610:	cmp	r7, #0
    8614:	beq	8648 <gen_linktype+0x182c>
    8618:	ldr	r0, [r4, #96]	; 0x60
    861c:	mov	r1, r7
    8620:	ldr	r2, [r1, #44]	; 0x2c
    8624:	add	r3, r1, #84	; 0x54
    8628:	cmp	r2, #0
    862c:	mov	r2, #84	; 0x54
    8630:	movweq	r2, #60	; 0x3c
    8634:	addeq	r3, r1, #60	; 0x3c
    8638:	ldr	r1, [r1, r2]
    863c:	str	r0, [r3]
    8640:	cmp	r1, #0
    8644:	bne	8620 <gen_linktype+0x1804>
    8648:	ldr	r0, [r7, #44]	; 0x2c
    864c:	cmp	r4, #0
    8650:	clz	r0, r0
    8654:	lsr	r0, r0, #5
    8658:	str	r0, [r7, #44]	; 0x2c
    865c:	ldr	r1, [r4, #44]	; 0x2c
    8660:	clz	r0, r1
    8664:	lsr	r0, r0, #5
    8668:	str	r0, [r4, #44]	; 0x2c
    866c:	str	r4, [sp, #4]
    8670:	beq	86c0 <gen_linktype+0x18a4>
    8674:	cmp	r1, #0
    8678:	mov	r1, #60	; 0x3c
    867c:	add	r0, r4, #60	; 0x3c
    8680:	movweq	r1, #84	; 0x54
    8684:	addeq	r0, r4, #84	; 0x54
    8688:	ldr	r1, [r4, r1]
    868c:	cmp	r1, #0
    8690:	beq	86c4 <gen_linktype+0x18a8>
    8694:	ldr	r2, [r1, #44]	; 0x2c
    8698:	add	r0, r1, #84	; 0x54
    869c:	cmp	r2, #0
    86a0:	mov	r2, #84	; 0x54
    86a4:	movweq	r2, #60	; 0x3c
    86a8:	addeq	r0, r1, #60	; 0x3c
    86ac:	ldr	r1, [r1, r2]
    86b0:	cmp	r1, #0
    86b4:	bne	8694 <gen_linktype+0x1878>
    86b8:	b	86c4 <gen_linktype+0x18a8>
    86bc:	.word	0x0003ed50
    86c0:	add	r0, sp, #4
    86c4:	str	r7, [r0]
    86c8:	ldr	r0, [r4, #44]	; 0x2c
    86cc:	clz	r0, r0
    86d0:	lsr	r0, r0, #5
    86d4:	str	r0, [r4, #44]	; 0x2c
    86d8:	ldr	r0, [r7, #96]	; 0x60
    86dc:	str	r0, [r4, #96]	; 0x60
    86e0:	mov	r0, r4
    86e4:	sub	sp, fp, #28
    86e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    86ec:	cmp	r5, #254	; 0xfe
    86f0:	beq	8c98 <gen_linktype+0x1e7c>
    86f4:	cmp	r5, #1536	; 0x600
    86f8:	moveq	r5, #37	; 0x25
    86fc:	b	9028 <gen_linktype+0x220c>
    8700:	.word	0x0003edb8
    8704:	.word	0x0003ecb0
    8708:	mov	r0, #1
    870c:	mov	r1, #0
    8710:	mov	r2, #16
    8714:	bl	1669c <gen_load_a>
    8718:	mov	r9, r0
    871c:	ldr	r0, [r8, #92]	; 0x5c
    8720:	ldr	r5, [pc, #4052]	; 96fc <gen_linktype+0x28e0>
    8724:	add	r5, pc, r5
    8728:	mov	r6, r5
    872c:	ldr	r4, [r6, r0, lsl #3]!
    8730:	cmp	r4, #19
    8734:	bhi	8d70 <gen_linktype+0x1f54>
    8738:	add	r7, r0, #1
    873c:	cmp	r0, #15
    8740:	str	r7, [r8, #92]	; 0x5c
    8744:	bge	99e4 <gen_linktype+0x2bc8>
    8748:	mov	r0, #1024	; 0x400
    874c:	lsl	r4, r0, r7
    8750:	mov	r0, r4
    8754:	bl	f1c <malloc@plt>
    8758:	cmp	r0, #0
    875c:	str	r0, [r6, #12]
    8760:	beq	99e4 <gen_linktype+0x2bc8>
    8764:	mov	r1, #0
    8768:	mov	r2, r4
    876c:	add	r6, r6, #8
    8770:	bl	f88 <memset@plt>
    8774:	cmp	r4, #19
    8778:	str	r4, [r6]
    877c:	bhi	8d74 <gen_linktype+0x1f58>
    8780:	b	99e4 <gen_linktype+0x2bc8>
    8784:	mov	r3, #2
    8788:	cmp	r0, #109	; 0x6d
    878c:	mov	r1, #0
    8790:	mov	r2, #0
    8794:	cmpne	r0, #0
    8798:	mov	r0, #1
    879c:	reveq	r3, r3
    87a0:	sub	sp, fp, #28
    87a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    87a8:	b	9ef4 <gen_cmp>
    87ac:	.word	0x0003ed18
    87b0:	movw	r0, #34525	; 0x86dd
    87b4:	cmp	r5, r0
    87b8:	beq	9034 <gen_linktype+0x2218>
    87bc:	cmp	r5, #2048	; 0x800
    87c0:	bne	8c80 <gen_linktype+0x1e64>
    87c4:	ldr	r1, [r8, #40]	; 0x28
    87c8:	mov	r0, #1
    87cc:	mov	r2, #16
    87d0:	mov	r3, #2
    87d4:	sub	sp, fp, #28
    87d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    87dc:	b	9ef4 <gen_cmp>
    87e0:	.word	0x0003ec04
    87e4:	.word	0x0003ec68
    87e8:	.word	0x0003ec50
    87ec:	.word	0x0003eb50
    87f0:	ldrb	r0, [r8]
    87f4:	cmp	r0, #1
    87f8:	bne	8e20 <gen_linktype+0x2004>
    87fc:	mov	r0, #1
    8800:	mov	r1, #4
    8804:	mov	r2, #8
    8808:	mov	r3, #65280	; 0xff00
    880c:	bl	9ef4 <gen_cmp>
    8810:	mov	r6, r0
    8814:	ldr	r0, [r0, #44]	; 0x2c
    8818:	clz	r0, r0
    881c:	lsr	r0, r0, #5
    8820:	str	r0, [r6, #44]	; 0x2c
    8824:	mov	r0, r5
    8828:	bl	1a744 <gen_ether_linktype>
    882c:	mov	r4, r0
    8830:	cmp	r6, #0
    8834:	beq	8868 <gen_linktype+0x1a4c>
    8838:	ldr	r0, [r4, #96]	; 0x60
    883c:	mov	r1, r6
    8840:	ldr	r2, [r1, #44]	; 0x2c
    8844:	add	r3, r1, #84	; 0x54
    8848:	cmp	r2, #0
    884c:	mov	r2, #84	; 0x54
    8850:	movweq	r2, #60	; 0x3c
    8854:	addeq	r3, r1, #60	; 0x3c
    8858:	ldr	r1, [r1, r2]
    885c:	str	r0, [r3]
    8860:	cmp	r1, #0
    8864:	bne	8840 <gen_linktype+0x1a24>
    8868:	ldr	r0, [r6, #44]	; 0x2c
    886c:	cmp	r4, #0
    8870:	clz	r0, r0
    8874:	lsr	r0, r0, #5
    8878:	str	r0, [r6, #44]	; 0x2c
    887c:	ldr	r1, [r4, #44]	; 0x2c
    8880:	clz	r0, r1
    8884:	lsr	r0, r0, #5
    8888:	str	r0, [r4, #44]	; 0x2c
    888c:	str	r4, [sp, #4]
    8890:	beq	94d8 <gen_linktype+0x26bc>
    8894:	cmp	r1, #0
    8898:	mov	r1, #60	; 0x3c
    889c:	add	r0, r4, #60	; 0x3c
    88a0:	movweq	r1, #84	; 0x54
    88a4:	addeq	r0, r4, #84	; 0x54
    88a8:	ldr	r1, [r4, r1]
    88ac:	cmp	r1, #0
    88b0:	beq	94dc <gen_linktype+0x26c0>
    88b4:	ldr	r2, [r1, #44]	; 0x2c
    88b8:	add	r0, r1, #84	; 0x54
    88bc:	cmp	r2, #0
    88c0:	mov	r2, #84	; 0x54
    88c4:	movweq	r2, #60	; 0x3c
    88c8:	addeq	r0, r1, #60	; 0x3c
    88cc:	ldr	r1, [r1, r2]
    88d0:	cmp	r1, #0
    88d4:	bne	88b4 <gen_linktype+0x1a98>
    88d8:	b	94dc <gen_linktype+0x26c0>
    88dc:	ldr	r1, [r8, #40]	; 0x28
    88e0:	cmn	r1, #1
    88e4:	bne	902c <gen_linktype+0x2210>
    88e8:	bl	100c <abort@plt>
    88ec:	.word	0x0003eb14
    88f0:	.word	0x0003ebb0
    88f4:	.word	0x0003eadc
    88f8:	cmp	r5, #2048	; 0x800
    88fc:	blt	8494 <gen_linktype+0x1678>
    8900:	movw	r0, #32922	; 0x809a
    8904:	cmp	r5, r0
    8908:	bgt	89dc <gen_linktype+0x1bc0>
    890c:	cmp	r5, #2048	; 0x800
    8910:	bne	857c <gen_linktype+0x1760>
    8914:	ldr	r1, [r8, #40]	; 0x28
    8918:	mov	r0, #1
    891c:	mov	r2, #8
    8920:	mov	r3, #33	; 0x21
    8924:	bl	9ef4 <gen_cmp>
    8928:	ldr	r1, [r8, #40]	; 0x28
    892c:	mov	r4, r0
    8930:	mov	r0, #1
    8934:	mov	r2, #8
    8938:	mov	r3, #45	; 0x2d
    893c:	bl	9ef4 <gen_cmp>
    8940:	mov	r5, r0
    8944:	ldr	r0, [r4, #44]	; 0x2c
    8948:	cmp	r4, #0
    894c:	clz	r0, r0
    8950:	lsr	r0, r0, #5
    8954:	str	r0, [r4, #44]	; 0x2c
    8958:	beq	8998 <gen_linktype+0x1b7c>
    895c:	ldr	r1, [r5, #96]	; 0x60
    8960:	mov	r2, r4
    8964:	b	8970 <gen_linktype+0x1b54>
    8968:	.word	0x0003eb40
    896c:	ldr	r0, [r2, #44]	; 0x2c
    8970:	cmp	r0, #0
    8974:	mov	r0, #84	; 0x54
    8978:	add	r3, r2, #84	; 0x54
    897c:	movweq	r0, #60	; 0x3c
    8980:	addeq	r3, r2, #60	; 0x3c
    8984:	ldr	r2, [r2, r0]
    8988:	str	r1, [r3]
    898c:	cmp	r2, #0
    8990:	bne	896c <gen_linktype+0x1b50>
    8994:	ldr	r0, [r4, #44]	; 0x2c
    8998:	clz	r0, r0
    899c:	cmp	r5, #0
    89a0:	lsr	r0, r0, #5
    89a4:	str	r0, [r4, #44]	; 0x2c
    89a8:	str	r5, [sp, #4]
    89ac:	beq	990c <gen_linktype+0x2af0>
    89b0:	mov	r1, r5
    89b4:	ldr	r2, [r1, #44]	; 0x2c
    89b8:	add	r0, r1, #84	; 0x54
    89bc:	cmp	r2, #0
    89c0:	mov	r2, #84	; 0x54
    89c4:	movweq	r2, #60	; 0x3c
    89c8:	addeq	r0, r1, #60	; 0x3c
    89cc:	ldr	r1, [r1, r2]
    89d0:	cmp	r1, #0
    89d4:	bne	89b4 <gen_linktype+0x1b98>
    89d8:	b	9910 <gen_linktype+0x2af4>
    89dc:	movw	r0, #32923	; 0x809b
    89e0:	cmp	r5, r0
    89e4:	beq	8ca0 <gen_linktype+0x1e84>
    89e8:	movw	r0, #34525	; 0x86dd
    89ec:	cmp	r5, r0
    89f0:	moveq	r5, #87	; 0x57
    89f4:	b	9028 <gen_linktype+0x220c>
    89f8:	mov	r0, r5
    89fc:	sub	sp, fp, #28
    8a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8a04:	b	1a744 <gen_ether_linktype>
    8a08:	.word	0x0003eab8
    8a0c:	.word	0x0003e9b0
    8a10:	.word	0x0003ea18
    8a14:	cmp	r5, #253	; 0xfd
    8a18:	bgt	8ef4 <gen_linktype+0x20d8>
    8a1c:	cmp	r5, #6
    8a20:	beq	8a34 <gen_linktype+0x1c18>
    8a24:	cmp	r5, #224	; 0xe0
    8a28:	beq	9504 <gen_linktype+0x26e8>
    8a2c:	cmp	r5, #240	; 0xf0
    8a30:	bne	93ec <gen_linktype+0x25d0>
    8a34:	ldr	r1, [r8, #40]	; 0x28
    8a38:	mov	r0, #1
    8a3c:	mov	r2, #8
    8a40:	mov	r3, #4
    8a44:	bl	9ef4 <gen_cmp>
    8a48:	mov	r6, r0
    8a4c:	orr	r3, r5, r5, lsl #8
    8a50:	mov	r0, #2
    8a54:	mov	r1, #0
    8a58:	mov	r2, #8
    8a5c:	bl	9ef4 <gen_cmp>
    8a60:	mov	r4, r0
    8a64:	cmp	r6, #0
    8a68:	beq	8a9c <gen_linktype+0x1c80>
    8a6c:	ldr	r0, [r4, #96]	; 0x60
    8a70:	mov	r1, r6
    8a74:	ldr	r2, [r1, #44]	; 0x2c
    8a78:	add	r3, r1, #84	; 0x54
    8a7c:	cmp	r2, #0
    8a80:	mov	r2, #84	; 0x54
    8a84:	movweq	r2, #60	; 0x3c
    8a88:	addeq	r3, r1, #60	; 0x3c
    8a8c:	ldr	r1, [r1, r2]
    8a90:	str	r0, [r3]
    8a94:	cmp	r1, #0
    8a98:	bne	8a74 <gen_linktype+0x1c58>
    8a9c:	ldr	r0, [r6, #44]	; 0x2c
    8aa0:	cmp	r4, #0
    8aa4:	clz	r0, r0
    8aa8:	lsr	r0, r0, #5
    8aac:	str	r0, [r6, #44]	; 0x2c
    8ab0:	ldr	r1, [r4, #44]	; 0x2c
    8ab4:	clz	r0, r1
    8ab8:	lsr	r0, r0, #5
    8abc:	str	r0, [r4, #44]	; 0x2c
    8ac0:	str	r4, [sp, #4]
    8ac4:	beq	94d8 <gen_linktype+0x26bc>
    8ac8:	cmp	r1, #0
    8acc:	mov	r1, #60	; 0x3c
    8ad0:	add	r0, r4, #60	; 0x3c
    8ad4:	movweq	r1, #84	; 0x54
    8ad8:	addeq	r0, r4, #84	; 0x54
    8adc:	ldr	r1, [r4, r1]
    8ae0:	cmp	r1, #0
    8ae4:	beq	94dc <gen_linktype+0x26c0>
    8ae8:	ldr	r2, [r1, #44]	; 0x2c
    8aec:	add	r0, r1, #84	; 0x54
    8af0:	cmp	r2, #0
    8af4:	mov	r2, #84	; 0x54
    8af8:	movweq	r2, #60	; 0x3c
    8afc:	addeq	r0, r1, #60	; 0x3c
    8b00:	ldr	r1, [r1, r2]
    8b04:	cmp	r1, #0
    8b08:	bne	8ae8 <gen_linktype+0x1ccc>
    8b0c:	b	94dc <gen_linktype+0x26c0>
    8b10:	.word	0x0003e910
    8b14:	movw	r0, #32923	; 0x809b
    8b18:	cmp	r5, r0
    8b1c:	beq	8b88 <gen_linktype+0x1d6c>
    8b20:	b	8c80 <gen_linktype+0x1e64>
    8b24:	movw	r0, #34525	; 0x86dd
    8b28:	cmp	r5, r0
    8b2c:	beq	8b88 <gen_linktype+0x1d6c>
    8b30:	b	8c80 <gen_linktype+0x1e64>
    8b34:	mov	r0, #254	; 0xfe
    8b38:	cmp	r5, #254	; 0xfe
    8b3c:	orreq	r5, r0, r5, lsl #8
    8b40:	b	9028 <gen_linktype+0x220c>
    8b44:	.word	0x0003e978
    8b48:	cmp	r5, #254	; 0xfe
    8b4c:	beq	9168 <gen_linktype+0x234c>
    8b50:	movw	r0, #34525	; 0x86dd
    8b54:	cmp	r5, r0
    8b58:	beq	914c <gen_linktype+0x2330>
    8b5c:	cmp	r5, #2048	; 0x800
    8b60:	bne	8c80 <gen_linktype+0x1e64>
    8b64:	mov	r0, #1
    8b68:	mov	r1, #2
    8b6c:	mov	r2, #8
    8b70:	mov	r3, #972	; 0x3cc
    8b74:	sub	sp, fp, #28
    8b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b7c:	b	9ef4 <gen_cmp>
    8b80:	cmp	r5, #2048	; 0x800
    8b84:	bne	8c80 <gen_linktype+0x1e64>
    8b88:	mov	r0, #1
    8b8c:	sub	sp, fp, #28
    8b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b94:	b	1b43c <gen_uncond>
    8b98:	.word	0x0003e864
    8b9c:	cmp	r5, #2048	; 0x800
    8ba0:	beq	9088 <gen_linktype+0x226c>
    8ba4:	movw	r0, #2054	; 0x806
    8ba8:	cmp	r5, r0
    8bac:	bne	8c80 <gen_linktype+0x1e64>
    8bb0:	ldr	r1, [r8, #40]	; 0x28
    8bb4:	mov	r0, #1
    8bb8:	mov	r2, #16
    8bbc:	mov	r3, #213	; 0xd5
    8bc0:	bl	9ef4 <gen_cmp>
    8bc4:	ldr	r1, [r8, #40]	; 0x28
    8bc8:	mov	r5, r0
    8bcc:	mov	r0, #1
    8bd0:	mov	r2, #16
    8bd4:	mov	r3, #241	; 0xf1
    8bd8:	bl	9ef4 <gen_cmp>
    8bdc:	mov	r4, r0
    8be0:	ldr	r0, [r5, #44]	; 0x2c
    8be4:	cmp	r5, #0
    8be8:	clz	r0, r0
    8bec:	lsr	r0, r0, #5
    8bf0:	str	r0, [r5, #44]	; 0x2c
    8bf4:	beq	8c3c <gen_linktype+0x1e20>
    8bf8:	ldr	r1, [r4, #96]	; 0x60
    8bfc:	mov	r2, r5
    8c00:	b	8c14 <gen_linktype+0x1df8>
    8c04:	.word	0x0003e8c8
    8c08:	.word	0x0003e8b0
    8c0c:	.word	0x0003e7b0
    8c10:	ldr	r0, [r2, #44]	; 0x2c
    8c14:	cmp	r0, #0
    8c18:	mov	r0, #84	; 0x54
    8c1c:	add	r3, r2, #84	; 0x54
    8c20:	movweq	r0, #60	; 0x3c
    8c24:	addeq	r3, r2, #60	; 0x3c
    8c28:	ldr	r2, [r2, r0]
    8c2c:	str	r1, [r3]
    8c30:	cmp	r2, #0
    8c34:	bne	8c10 <gen_linktype+0x1df4>
    8c38:	ldr	r0, [r5, #44]	; 0x2c
    8c3c:	clz	r0, r0
    8c40:	cmp	r4, #0
    8c44:	lsr	r0, r0, #5
    8c48:	str	r0, [r5, #44]	; 0x2c
    8c4c:	str	r4, [sp, #4]
    8c50:	beq	99c8 <gen_linktype+0x2bac>
    8c54:	mov	r1, r4
    8c58:	ldr	r2, [r1, #44]	; 0x2c
    8c5c:	add	r0, r1, #84	; 0x54
    8c60:	cmp	r2, #0
    8c64:	mov	r2, #84	; 0x54
    8c68:	movweq	r2, #60	; 0x3c
    8c6c:	addeq	r0, r1, #60	; 0x3c
    8c70:	ldr	r1, [r1, r2]
    8c74:	cmp	r1, #0
    8c78:	bne	8c58 <gen_linktype+0x1e3c>
    8c7c:	b	99cc <gen_linktype+0x2bb0>
    8c80:	mov	r0, #0
    8c84:	sub	sp, fp, #28
    8c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c8c:	b	1b43c <gen_uncond>
    8c90:	mov	r5, #49	; 0x31
    8c94:	b	9028 <gen_linktype+0x220c>
    8c98:	mov	r5, #35	; 0x23
    8c9c:	b	9028 <gen_linktype+0x220c>
    8ca0:	mov	r5, #41	; 0x29
    8ca4:	b	9028 <gen_linktype+0x220c>
    8ca8:	.word	0x0003e774
    8cac:	.word	0x0003e810
    8cb0:	.word	0x0003e73c
    8cb4:	.word	0x0003e7a0
    8cb8:	mov	r7, r0
    8cbc:	sub	r1, r4, #20
    8cc0:	mov	r2, #84	; 0x54
    8cc4:	str	r1, [r6]
    8cc8:	ldr	r0, [r6, #4]
    8ccc:	str	r2, [r0, r1]!
    8cd0:	mov	r1, #240	; 0xf0
    8cd4:	mov	r2, r9
    8cd8:	str	r1, [r0, #12]
    8cdc:	mov	r1, r2
    8ce0:	ldr	r2, [r2, #16]
    8ce4:	cmp	r2, #0
    8ce8:	bne	8cdc <gen_linktype+0x1ec0>
    8cec:	str	r0, [r1, #16]
    8cf0:	ldr	r4, [r5, r7, lsl #3]!
    8cf4:	cmp	r4, #207	; 0xcf
    8cf8:	bhi	8d44 <gen_linktype+0x1f28>
    8cfc:	add	r0, r7, #1
    8d00:	cmp	r7, #15
    8d04:	str	r0, [r8, #92]	; 0x5c
    8d08:	bge	99e4 <gen_linktype+0x2bc8>
    8d0c:	mov	r1, #1024	; 0x400
    8d10:	lsl	r4, r1, r0
    8d14:	mov	r0, r4
    8d18:	bl	f1c <malloc@plt>
    8d1c:	cmp	r0, #0
    8d20:	str	r0, [r5, #12]
    8d24:	beq	99e4 <gen_linktype+0x2bc8>
    8d28:	mov	r1, #0
    8d2c:	mov	r2, r4
    8d30:	add	r5, r5, #8
    8d34:	bl	f88 <memset@plt>
    8d38:	cmp	r4, #207	; 0xcf
    8d3c:	str	r4, [r5]
    8d40:	bls	99e4 <gen_linktype+0x2bc8>
    8d44:	sub	r0, r4, #208	; 0xd0
    8d48:	str	r0, [r5]
    8d4c:	ldr	r1, [r5, #4]
    8d50:	add	r4, r1, r0
    8d54:	mov	r0, #21
    8d58:	str	r9, [r4, #4]
    8d5c:	str	r0, [r4, #8]
    8d60:	mov	r0, #64	; 0x40
    8d64:	b	8240 <gen_linktype+0x1424>
    8d68:	.word	0x0003e718
    8d6c:	.word	0x0003e62c
    8d70:	mov	r7, r0
    8d74:	sub	r1, r4, #20
    8d78:	mov	r2, #84	; 0x54
    8d7c:	str	r1, [r6]
    8d80:	ldr	r0, [r6, #4]
    8d84:	str	r2, [r0, r1]!
    8d88:	mov	r1, #240	; 0xf0
    8d8c:	mov	r2, r9
    8d90:	str	r1, [r0, #12]
    8d94:	mov	r1, r2
    8d98:	ldr	r2, [r2, #16]
    8d9c:	cmp	r2, #0
    8da0:	bne	8d94 <gen_linktype+0x1f78>
    8da4:	str	r0, [r1, #16]
    8da8:	ldr	r4, [r5, r7, lsl #3]!
    8dac:	cmp	r4, #207	; 0xcf
    8db0:	bhi	8dfc <gen_linktype+0x1fe0>
    8db4:	add	r0, r7, #1
    8db8:	cmp	r7, #15
    8dbc:	str	r0, [r8, #92]	; 0x5c
    8dc0:	bge	99e4 <gen_linktype+0x2bc8>
    8dc4:	mov	r1, #1024	; 0x400
    8dc8:	lsl	r4, r1, r0
    8dcc:	mov	r0, r4
    8dd0:	bl	f1c <malloc@plt>
    8dd4:	cmp	r0, #0
    8dd8:	str	r0, [r5, #12]
    8ddc:	beq	99e4 <gen_linktype+0x2bc8>
    8de0:	mov	r1, #0
    8de4:	mov	r2, r4
    8de8:	add	r5, r5, #8
    8dec:	bl	f88 <memset@plt>
    8df0:	cmp	r4, #207	; 0xcf
    8df4:	str	r4, [r5]
    8df8:	bls	99e4 <gen_linktype+0x2bc8>
    8dfc:	sub	r0, r4, #208	; 0xd0
    8e00:	str	r0, [r5]
    8e04:	ldr	r1, [r5, #4]
    8e08:	add	r4, r1, r0
    8e0c:	mov	r0, #21
    8e10:	str	r9, [r4, #4]
    8e14:	str	r0, [r4, #8]
    8e18:	mov	r0, #96	; 0x60
    8e1c:	b	8240 <gen_linktype+0x1424>
    8e20:	mov	r0, #53	; 0x35
    8e24:	mov	r1, #2
    8e28:	mov	r2, #16
    8e2c:	mov	r3, #0
    8e30:	bl	17fb0 <sf_gen_atmfield_code>
    8e34:	mov	r6, r0
    8e38:	mov	r0, r5
    8e3c:	bl	1b028 <gen_llc_linktype>
    8e40:	mov	r4, r0
    8e44:	cmp	r6, #0
    8e48:	beq	8e7c <gen_linktype+0x2060>
    8e4c:	ldr	r0, [r4, #96]	; 0x60
    8e50:	mov	r1, r6
    8e54:	ldr	r2, [r1, #44]	; 0x2c
    8e58:	add	r3, r1, #84	; 0x54
    8e5c:	cmp	r2, #0
    8e60:	mov	r2, #84	; 0x54
    8e64:	movweq	r2, #60	; 0x3c
    8e68:	addeq	r3, r1, #60	; 0x3c
    8e6c:	ldr	r1, [r1, r2]
    8e70:	str	r0, [r3]
    8e74:	cmp	r1, #0
    8e78:	bne	8e54 <gen_linktype+0x2038>
    8e7c:	ldr	r0, [r6, #44]	; 0x2c
    8e80:	cmp	r4, #0
    8e84:	clz	r0, r0
    8e88:	lsr	r0, r0, #5
    8e8c:	str	r0, [r6, #44]	; 0x2c
    8e90:	ldr	r1, [r4, #44]	; 0x2c
    8e94:	clz	r0, r1
    8e98:	lsr	r0, r0, #5
    8e9c:	str	r0, [r4, #44]	; 0x2c
    8ea0:	str	r4, [sp, #4]
    8ea4:	beq	94d8 <gen_linktype+0x26bc>
    8ea8:	cmp	r1, #0
    8eac:	mov	r1, #60	; 0x3c
    8eb0:	add	r0, r4, #60	; 0x3c
    8eb4:	movweq	r1, #84	; 0x54
    8eb8:	addeq	r0, r4, #84	; 0x54
    8ebc:	ldr	r1, [r4, r1]
    8ec0:	cmp	r1, #0
    8ec4:	beq	94dc <gen_linktype+0x26c0>
    8ec8:	ldr	r2, [r1, #44]	; 0x2c
    8ecc:	add	r0, r1, #84	; 0x54
    8ed0:	cmp	r2, #0
    8ed4:	mov	r2, #84	; 0x54
    8ed8:	movweq	r2, #60	; 0x3c
    8edc:	addeq	r0, r1, #60	; 0x3c
    8ee0:	ldr	r1, [r1, r2]
    8ee4:	cmp	r1, #0
    8ee8:	bne	8ec8 <gen_linktype+0x20ac>
    8eec:	b	94dc <gen_linktype+0x26c0>
    8ef0:	.word	0x0003e488
    8ef4:	movw	r0, #33011	; 0x80f3
    8ef8:	cmp	r5, r0
    8efc:	movwne	r0, #32923	; 0x809b
    8f00:	cmpne	r5, r0
    8f04:	bne	93e4 <gen_linktype+0x25c8>
    8f08:	ldr	r1, [r8, #40]	; 0x28
    8f0c:	mov	r0, #1
    8f10:	mov	r2, #8
    8f14:	mov	r3, #4
    8f18:	bl	9ef4 <gen_cmp>
    8f1c:	mov	r6, r0
    8f20:	mov	r0, #3
    8f24:	strb	r0, [sp, #6]
    8f28:	movw	r0, #43690	; 0xaaaa
    8f2c:	strh	r0, [sp, #4]
    8f30:	movw	r0, #32923	; 0x809b
    8f34:	cmp	r5, r0
    8f38:	bne	9248 <gen_linktype+0x242c>
    8f3c:	mov	r0, #155	; 0x9b
    8f40:	add	r5, sp, #4
    8f44:	mov	r1, #0
    8f48:	mov	r2, #8
    8f4c:	strb	r0, [sp, #11]
    8f50:	movw	r0, #8
    8f54:	mov	r3, r5
    8f58:	movt	r0, #32775	; 0x8007
    8f5c:	str	r0, [sp, #7]
    8f60:	mov	r0, #2
    8f64:	bl	1b0ec <gen_bcmp>
    8f68:	mov	r9, r0
    8f6c:	mov	r4, r0
    8f70:	cmp	r6, #0
    8f74:	ldr	r0, [r9, #96]!	; 0x60
    8f78:	beq	8fa8 <gen_linktype+0x218c>
    8f7c:	mov	r1, r6
    8f80:	ldr	r2, [r1, #44]	; 0x2c
    8f84:	add	r3, r1, #84	; 0x54
    8f88:	cmp	r2, #0
    8f8c:	mov	r2, #84	; 0x54
    8f90:	movweq	r2, #60	; 0x3c
    8f94:	addeq	r3, r1, #60	; 0x3c
    8f98:	ldr	r1, [r1, r2]
    8f9c:	str	r0, [r3]
    8fa0:	cmp	r1, #0
    8fa4:	bne	8f80 <gen_linktype+0x2164>
    8fa8:	ldr	r0, [r6, #44]	; 0x2c
    8fac:	cmp	r4, #0
    8fb0:	clz	r0, r0
    8fb4:	lsr	r0, r0, #5
    8fb8:	str	r0, [r6, #44]	; 0x2c
    8fbc:	ldr	r0, [r4, #44]	; 0x2c
    8fc0:	clz	r1, r0
    8fc4:	lsr	r1, r1, #5
    8fc8:	str	r1, [r4, #44]	; 0x2c
    8fcc:	str	r4, [sp, #4]
    8fd0:	beq	9018 <gen_linktype+0x21fc>
    8fd4:	cmp	r0, #0
    8fd8:	mov	r0, #60	; 0x3c
    8fdc:	add	r5, r4, #60	; 0x3c
    8fe0:	movweq	r0, #84	; 0x54
    8fe4:	addeq	r5, r4, #84	; 0x54
    8fe8:	ldr	r0, [r4, r0]
    8fec:	cmp	r0, #0
    8ff0:	beq	9018 <gen_linktype+0x21fc>
    8ff4:	ldr	r1, [r0, #44]	; 0x2c
    8ff8:	add	r5, r0, #84	; 0x54
    8ffc:	cmp	r1, #0
    9000:	mov	r1, #84	; 0x54
    9004:	movweq	r1, #60	; 0x3c
    9008:	addeq	r5, r0, #60	; 0x3c
    900c:	ldr	r0, [r0, r1]
    9010:	cmp	r0, #0
    9014:	bne	8ff4 <gen_linktype+0x21d8>
    9018:	str	r6, [r5]
    901c:	movw	r5, #32923	; 0x809b
    9020:	b	9324 <gen_linktype+0x2508>
    9024:	mov	r5, #33	; 0x21
    9028:	ldr	r1, [r8, #40]	; 0x28
    902c:	mov	r0, #1
    9030:	b	8278 <gen_linktype+0x145c>
    9034:	ldr	r1, [r8, #40]	; 0x28
    9038:	mov	r0, #1
    903c:	mov	r2, #16
    9040:	mov	r3, #26
    9044:	sub	sp, fp, #28
    9048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    904c:	b	9ef4 <gen_cmp>
    9050:	ldr	r1, [r8, #40]	; 0x28
    9054:	mov	r0, #1
    9058:	mov	r2, #16
    905c:	mov	r3, #214	; 0xd6
    9060:	sub	sp, fp, #28
    9064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9068:	b	9ef4 <gen_cmp>
    906c:	ldr	r1, [r8, #40]	; 0x28
    9070:	mov	r0, #1
    9074:	mov	r2, #16
    9078:	mov	r3, #221	; 0xdd
    907c:	sub	sp, fp, #28
    9080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9084:	b	9ef4 <gen_cmp>
    9088:	ldr	r1, [r8, #40]	; 0x28
    908c:	mov	r0, #1
    9090:	mov	r2, #16
    9094:	mov	r3, #212	; 0xd4
    9098:	bl	9ef4 <gen_cmp>
    909c:	ldr	r1, [r8, #40]	; 0x28
    90a0:	mov	r5, r0
    90a4:	mov	r0, #1
    90a8:	mov	r2, #16
    90ac:	mov	r3, #240	; 0xf0
    90b0:	bl	9ef4 <gen_cmp>
    90b4:	mov	r4, r0
    90b8:	ldr	r0, [r5, #44]	; 0x2c
    90bc:	cmp	r5, #0
    90c0:	clz	r0, r0
    90c4:	lsr	r0, r0, #5
    90c8:	str	r0, [r5, #44]	; 0x2c
    90cc:	beq	9108 <gen_linktype+0x22ec>
    90d0:	ldr	r1, [r4, #96]	; 0x60
    90d4:	mov	r2, r5
    90d8:	b	90e0 <gen_linktype+0x22c4>
    90dc:	ldr	r0, [r2, #44]	; 0x2c
    90e0:	cmp	r0, #0
    90e4:	mov	r0, #84	; 0x54
    90e8:	add	r3, r2, #84	; 0x54
    90ec:	movweq	r0, #60	; 0x3c
    90f0:	addeq	r3, r2, #60	; 0x3c
    90f4:	ldr	r2, [r2, r0]
    90f8:	str	r1, [r3]
    90fc:	cmp	r2, #0
    9100:	bne	90dc <gen_linktype+0x22c0>
    9104:	ldr	r0, [r5, #44]	; 0x2c
    9108:	clz	r0, r0
    910c:	cmp	r4, #0
    9110:	lsr	r0, r0, #5
    9114:	str	r0, [r5, #44]	; 0x2c
    9118:	str	r4, [sp, #4]
    911c:	beq	99c8 <gen_linktype+0x2bac>
    9120:	mov	r1, r4
    9124:	ldr	r2, [r1, #44]	; 0x2c
    9128:	add	r0, r1, #84	; 0x54
    912c:	cmp	r2, #0
    9130:	mov	r2, #84	; 0x54
    9134:	movweq	r2, #60	; 0x3c
    9138:	addeq	r0, r1, #60	; 0x3c
    913c:	ldr	r1, [r1, r2]
    9140:	cmp	r1, #0
    9144:	bne	9124 <gen_linktype+0x2308>
    9148:	b	99cc <gen_linktype+0x2bb0>
    914c:	mov	r0, #1
    9150:	mov	r1, #2
    9154:	mov	r2, #8
    9158:	movw	r3, #910	; 0x38e
    915c:	sub	sp, fp, #28
    9160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9164:	b	9ef4 <gen_cmp>
    9168:	mov	r0, #1
    916c:	mov	r1, #2
    9170:	mov	r2, #8
    9174:	movw	r3, #897	; 0x381
    9178:	bl	9ef4 <gen_cmp>
    917c:	mov	r5, r0
    9180:	mov	r0, #1
    9184:	mov	r1, #2
    9188:	mov	r2, #8
    918c:	movw	r3, #898	; 0x382
    9190:	bl	9ef4 <gen_cmp>
    9194:	mov	r6, r0
    9198:	mov	r0, #1
    919c:	mov	r1, #2
    91a0:	mov	r2, #8
    91a4:	movw	r3, #899	; 0x383
    91a8:	bl	9ef4 <gen_cmp>
    91ac:	mov	r4, r0
    91b0:	ldr	r0, [r6, #44]	; 0x2c
    91b4:	cmp	r6, #0
    91b8:	clz	r0, r0
    91bc:	lsr	r0, r0, #5
    91c0:	str	r0, [r6, #44]	; 0x2c
    91c4:	beq	9200 <gen_linktype+0x23e4>
    91c8:	ldr	r1, [r4, #96]	; 0x60
    91cc:	mov	r2, r6
    91d0:	b	91d8 <gen_linktype+0x23bc>
    91d4:	ldr	r0, [r2, #44]	; 0x2c
    91d8:	cmp	r0, #0
    91dc:	mov	r0, #84	; 0x54
    91e0:	add	r3, r2, #84	; 0x54
    91e4:	movweq	r0, #60	; 0x3c
    91e8:	addeq	r3, r2, #60	; 0x3c
    91ec:	ldr	r2, [r2, r0]
    91f0:	str	r1, [r3]
    91f4:	cmp	r2, #0
    91f8:	bne	91d4 <gen_linktype+0x23b8>
    91fc:	ldr	r0, [r6, #44]	; 0x2c
    9200:	clz	r0, r0
    9204:	cmp	r4, #0
    9208:	lsr	r0, r0, #5
    920c:	str	r0, [r6, #44]	; 0x2c
    9210:	str	r4, [sp, #4]
    9214:	beq	96c8 <gen_linktype+0x28ac>
    9218:	mov	r1, r4
    921c:	ldr	r2, [r1, #44]	; 0x2c
    9220:	add	r0, r1, #84	; 0x54
    9224:	cmp	r2, #0
    9228:	mov	r2, #84	; 0x54
    922c:	movweq	r2, #60	; 0x3c
    9230:	addeq	r0, r1, #60	; 0x3c
    9234:	ldr	r1, [r1, r2]
    9238:	cmp	r1, #0
    923c:	bne	921c <gen_linktype+0x2400>
    9240:	b	96cc <gen_linktype+0x28b0>
    9244:	.word	0x0003e154
    9248:	mov	r0, #243	; 0xf3
    924c:	add	r7, sp, #4
    9250:	mov	r1, #0
    9254:	mov	r2, #8
    9258:	strb	r0, [sp, #11]
    925c:	mov	r0, #-2147483648	; 0x80000000
    9260:	mov	r3, r7
    9264:	str	r0, [sp, #7]
    9268:	mov	r0, #2
    926c:	bl	1b0ec <gen_bcmp>
    9270:	mov	r9, r0
    9274:	mov	r4, r0
    9278:	cmp	r6, #0
    927c:	ldr	r0, [r9, #96]!	; 0x60
    9280:	beq	92b0 <gen_linktype+0x2494>
    9284:	mov	r1, r6
    9288:	ldr	r2, [r1, #44]	; 0x2c
    928c:	add	r3, r1, #84	; 0x54
    9290:	cmp	r2, #0
    9294:	mov	r2, #84	; 0x54
    9298:	movweq	r2, #60	; 0x3c
    929c:	addeq	r3, r1, #60	; 0x3c
    92a0:	ldr	r1, [r1, r2]
    92a4:	str	r0, [r3]
    92a8:	cmp	r1, #0
    92ac:	bne	9288 <gen_linktype+0x246c>
    92b0:	ldr	r0, [r6, #44]	; 0x2c
    92b4:	cmp	r4, #0
    92b8:	clz	r0, r0
    92bc:	lsr	r0, r0, #5
    92c0:	str	r0, [r6, #44]	; 0x2c
    92c4:	ldr	r0, [r4, #44]	; 0x2c
    92c8:	clz	r1, r0
    92cc:	lsr	r1, r1, #5
    92d0:	str	r1, [r4, #44]	; 0x2c
    92d4:	str	r4, [sp, #4]
    92d8:	beq	9320 <gen_linktype+0x2504>
    92dc:	cmp	r0, #0
    92e0:	mov	r0, #60	; 0x3c
    92e4:	add	r7, r4, #60	; 0x3c
    92e8:	movweq	r0, #84	; 0x54
    92ec:	addeq	r7, r4, #84	; 0x54
    92f0:	ldr	r0, [r4, r0]
    92f4:	cmp	r0, #0
    92f8:	beq	9320 <gen_linktype+0x2504>
    92fc:	ldr	r1, [r0, #44]	; 0x2c
    9300:	add	r7, r0, #84	; 0x54
    9304:	cmp	r1, #0
    9308:	mov	r1, #84	; 0x54
    930c:	movweq	r1, #60	; 0x3c
    9310:	addeq	r7, r0, #60	; 0x3c
    9314:	ldr	r0, [r0, r1]
    9318:	cmp	r0, #0
    931c:	bne	92fc <gen_linktype+0x24e0>
    9320:	str	r6, [r7]
    9324:	ldr	r0, [r4, #44]	; 0x2c
    9328:	mov	r2, #8
    932c:	mov	r3, r5
    9330:	clz	r0, r0
    9334:	lsr	r0, r0, #5
    9338:	str	r0, [r4, #44]	; 0x2c
    933c:	ldr	r0, [r6, #96]	; 0x60
    9340:	str	r0, [r4, #96]	; 0x60
    9344:	mov	r0, #1
    9348:	ldr	r1, [r8, #40]	; 0x28
    934c:	bl	9ef4 <gen_cmp>
    9350:	ldr	r1, [r0, #44]	; 0x2c
    9354:	cmp	r0, #0
    9358:	clz	r1, r1
    935c:	lsr	r1, r1, #5
    9360:	str	r1, [r0, #44]	; 0x2c
    9364:	beq	93a0 <gen_linktype+0x2584>
    9368:	ldr	r2, [r4, #96]	; 0x60
    936c:	mov	r3, r0
    9370:	b	9378 <gen_linktype+0x255c>
    9374:	ldr	r1, [r3, #44]	; 0x2c
    9378:	cmp	r1, #0
    937c:	mov	r1, #84	; 0x54
    9380:	add	r7, r3, #84	; 0x54
    9384:	movweq	r1, #60	; 0x3c
    9388:	addeq	r7, r3, #60	; 0x3c
    938c:	ldr	r3, [r3, r1]
    9390:	str	r2, [r7]
    9394:	cmp	r3, #0
    9398:	bne	9374 <gen_linktype+0x2558>
    939c:	ldr	r1, [r0, #44]	; 0x2c
    93a0:	clz	r1, r1
    93a4:	cmp	r4, #0
    93a8:	lsr	r1, r1, #5
    93ac:	str	r1, [r0, #44]	; 0x2c
    93b0:	str	r4, [sp, #4]
    93b4:	beq	96ac <gen_linktype+0x2890>
    93b8:	mov	r2, r4
    93bc:	ldr	r3, [r2, #44]	; 0x2c
    93c0:	add	r1, r2, #84	; 0x54
    93c4:	cmp	r3, #0
    93c8:	mov	r3, #84	; 0x54
    93cc:	movweq	r3, #60	; 0x3c
    93d0:	addeq	r1, r2, #60	; 0x3c
    93d4:	ldr	r2, [r2, r3]
    93d8:	cmp	r2, #0
    93dc:	bne	93bc <gen_linktype+0x25a0>
    93e0:	b	96b0 <gen_linktype+0x2894>
    93e4:	cmp	r5, #254	; 0xfe
    93e8:	beq	8a34 <gen_linktype+0x1c18>
    93ec:	ldr	r1, [r8, #40]	; 0x28
    93f0:	movw	r0, #1500	; 0x5dc
    93f4:	cmp	r5, r0
    93f8:	bgt	902c <gen_linktype+0x2210>
    93fc:	mov	r0, #1
    9400:	mov	r2, #8
    9404:	mov	r3, #4
    9408:	bl	9ef4 <gen_cmp>
    940c:	ldr	r1, [r8, #44]	; 0x2c
    9410:	mov	r6, r0
    9414:	mov	r0, #1
    9418:	mov	r2, #16
    941c:	mov	r3, r5
    9420:	bl	9ef4 <gen_cmp>
    9424:	mov	r4, r0
    9428:	cmp	r6, #0
    942c:	beq	9460 <gen_linktype+0x2644>
    9430:	ldr	r0, [r4, #96]	; 0x60
    9434:	mov	r1, r6
    9438:	ldr	r2, [r1, #44]	; 0x2c
    943c:	add	r3, r1, #84	; 0x54
    9440:	cmp	r2, #0
    9444:	mov	r2, #84	; 0x54
    9448:	movweq	r2, #60	; 0x3c
    944c:	addeq	r3, r1, #60	; 0x3c
    9450:	ldr	r1, [r1, r2]
    9454:	str	r0, [r3]
    9458:	cmp	r1, #0
    945c:	bne	9438 <gen_linktype+0x261c>
    9460:	ldr	r0, [r6, #44]	; 0x2c
    9464:	cmp	r4, #0
    9468:	clz	r0, r0
    946c:	lsr	r0, r0, #5
    9470:	str	r0, [r6, #44]	; 0x2c
    9474:	ldr	r1, [r4, #44]	; 0x2c
    9478:	clz	r0, r1
    947c:	lsr	r0, r0, #5
    9480:	str	r0, [r4, #44]	; 0x2c
    9484:	str	r4, [sp, #4]
    9488:	beq	94d8 <gen_linktype+0x26bc>
    948c:	cmp	r1, #0
    9490:	mov	r1, #60	; 0x3c
    9494:	add	r0, r4, #60	; 0x3c
    9498:	movweq	r1, #84	; 0x54
    949c:	addeq	r0, r4, #84	; 0x54
    94a0:	ldr	r1, [r4, r1]
    94a4:	cmp	r1, #0
    94a8:	beq	94dc <gen_linktype+0x26c0>
    94ac:	ldr	r2, [r1, #44]	; 0x2c
    94b0:	add	r0, r1, #84	; 0x54
    94b4:	cmp	r2, #0
    94b8:	mov	r2, #84	; 0x54
    94bc:	movweq	r2, #60	; 0x3c
    94c0:	addeq	r0, r1, #60	; 0x3c
    94c4:	ldr	r1, [r1, r2]
    94c8:	cmp	r1, #0
    94cc:	bne	94ac <gen_linktype+0x2690>
    94d0:	b	94dc <gen_linktype+0x26c0>
    94d4:	.word	0x0003df3c
    94d8:	add	r0, sp, #4
    94dc:	str	r6, [r0]
    94e0:	ldr	r0, [r4, #44]	; 0x2c
    94e4:	clz	r0, r0
    94e8:	lsr	r0, r0, #5
    94ec:	str	r0, [r4, #44]	; 0x2c
    94f0:	ldr	r0, [r6, #96]	; 0x60
    94f4:	str	r0, [r4, #96]	; 0x60
    94f8:	mov	r0, r4
    94fc:	sub	sp, fp, #28
    9500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9504:	mov	r0, #2
    9508:	mov	r1, #0
    950c:	mov	r2, #16
    9510:	mov	r3, #224	; 0xe0
    9514:	bl	9ef4 <gen_cmp>
    9518:	mov	r5, r0
    951c:	movw	r0, #43690	; 0xaaaa
    9520:	add	r6, sp, #4
    9524:	mov	r1, #0
    9528:	mov	r2, #8
    952c:	movt	r0, #3
    9530:	mov	r3, r6
    9534:	str	r0, [sp, #4]
    9538:	movw	r0, #0
    953c:	movt	r0, #14209	; 0x3781
    9540:	str	r0, [sp, #8]
    9544:	mov	r0, #2
    9548:	bl	1b0ec <gen_bcmp>
    954c:	mov	r4, r0
    9550:	ldr	r0, [r5, #44]	; 0x2c
    9554:	cmp	r5, #0
    9558:	clz	r0, r0
    955c:	lsr	r0, r0, #5
    9560:	str	r0, [r5, #44]	; 0x2c
    9564:	beq	95a0 <gen_linktype+0x2784>
    9568:	ldr	r1, [r4, #96]	; 0x60
    956c:	mov	r2, r5
    9570:	b	9578 <gen_linktype+0x275c>
    9574:	ldr	r0, [r2, #44]	; 0x2c
    9578:	cmp	r0, #0
    957c:	mov	r0, #84	; 0x54
    9580:	add	r3, r2, #84	; 0x54
    9584:	movweq	r0, #60	; 0x3c
    9588:	addeq	r3, r2, #60	; 0x3c
    958c:	ldr	r2, [r2, r0]
    9590:	str	r1, [r3]
    9594:	cmp	r2, #0
    9598:	bne	9574 <gen_linktype+0x2758>
    959c:	ldr	r0, [r5, #44]	; 0x2c
    95a0:	clz	r0, r0
    95a4:	cmp	r4, #0
    95a8:	lsr	r0, r0, #5
    95ac:	str	r0, [r5, #44]	; 0x2c
    95b0:	str	r4, [sp, #4]
    95b4:	beq	95e0 <gen_linktype+0x27c4>
    95b8:	mov	r0, r4
    95bc:	ldr	r1, [r0, #44]	; 0x2c
    95c0:	add	r6, r0, #84	; 0x54
    95c4:	cmp	r1, #0
    95c8:	mov	r1, #84	; 0x54
    95cc:	movweq	r1, #60	; 0x3c
    95d0:	addeq	r6, r0, #60	; 0x3c
    95d4:	ldr	r0, [r0, r1]
    95d8:	cmp	r0, #0
    95dc:	bne	95bc <gen_linktype+0x27a0>
    95e0:	str	r5, [r6]
    95e4:	mov	r2, #8
    95e8:	mov	r3, #4
    95ec:	ldr	r0, [r5, #96]	; 0x60
    95f0:	str	r0, [r4, #96]	; 0x60
    95f4:	mov	r0, #1
    95f8:	ldr	r1, [r8, #40]	; 0x28
    95fc:	bl	9ef4 <gen_cmp>
    9600:	cmp	r0, #0
    9604:	beq	9638 <gen_linktype+0x281c>
    9608:	ldr	r1, [r4, #96]	; 0x60
    960c:	mov	r2, r0
    9610:	ldr	r3, [r2, #44]	; 0x2c
    9614:	add	r7, r2, #84	; 0x54
    9618:	cmp	r3, #0
    961c:	mov	r3, #84	; 0x54
    9620:	movweq	r3, #60	; 0x3c
    9624:	addeq	r7, r2, #60	; 0x3c
    9628:	ldr	r2, [r2, r3]
    962c:	str	r1, [r7]
    9630:	cmp	r2, #0
    9634:	bne	9610 <gen_linktype+0x27f4>
    9638:	ldr	r1, [r0, #44]	; 0x2c
    963c:	cmp	r4, #0
    9640:	clz	r1, r1
    9644:	lsr	r1, r1, #5
    9648:	str	r1, [r0, #44]	; 0x2c
    964c:	ldr	r2, [r4, #44]	; 0x2c
    9650:	clz	r1, r2
    9654:	lsr	r1, r1, #5
    9658:	str	r1, [r4, #44]	; 0x2c
    965c:	str	r4, [sp, #4]
    9660:	beq	9770 <gen_linktype+0x2954>
    9664:	cmp	r2, #0
    9668:	mov	r2, #60	; 0x3c
    966c:	add	r1, r4, #60	; 0x3c
    9670:	movweq	r2, #84	; 0x54
    9674:	addeq	r1, r4, #84	; 0x54
    9678:	ldr	r2, [r4, r2]
    967c:	cmp	r2, #0
    9680:	beq	9774 <gen_linktype+0x2958>
    9684:	ldr	r3, [r2, #44]	; 0x2c
    9688:	add	r1, r2, #84	; 0x54
    968c:	cmp	r3, #0
    9690:	mov	r3, #84	; 0x54
    9694:	movweq	r3, #60	; 0x3c
    9698:	addeq	r1, r2, #60	; 0x3c
    969c:	ldr	r2, [r2, r3]
    96a0:	cmp	r2, #0
    96a4:	bne	9684 <gen_linktype+0x2868>
    96a8:	b	9774 <gen_linktype+0x2958>
    96ac:	add	r1, sp, #4
    96b0:	str	r0, [r1]
    96b4:	ldr	r0, [r0, #96]	; 0x60
    96b8:	str	r0, [r9]
    96bc:	mov	r0, r4
    96c0:	sub	sp, fp, #28
    96c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    96c8:	add	r0, sp, #4
    96cc:	str	r6, [r0]
    96d0:	cmp	r5, #0
    96d4:	ldr	r0, [r6, #96]	; 0x60
    96d8:	str	r0, [r4, #96]	; 0x60
    96dc:	ldr	r0, [r5, #44]	; 0x2c
    96e0:	clz	r0, r0
    96e4:	lsr	r0, r0, #5
    96e8:	str	r0, [r5, #44]	; 0x2c
    96ec:	beq	972c <gen_linktype+0x2910>
    96f0:	ldr	r1, [r4, #96]	; 0x60
    96f4:	mov	r2, r5
    96f8:	b	9704 <gen_linktype+0x28e8>
    96fc:	.word	0x0003dcfc
    9700:	ldr	r0, [r2, #44]	; 0x2c
    9704:	cmp	r0, #0
    9708:	mov	r0, #84	; 0x54
    970c:	add	r3, r2, #84	; 0x54
    9710:	movweq	r0, #60	; 0x3c
    9714:	addeq	r3, r2, #60	; 0x3c
    9718:	ldr	r2, [r2, r0]
    971c:	str	r1, [r3]
    9720:	cmp	r2, #0
    9724:	bne	9700 <gen_linktype+0x28e4>
    9728:	ldr	r0, [r5, #44]	; 0x2c
    972c:	clz	r0, r0
    9730:	cmp	r4, #0
    9734:	lsr	r0, r0, #5
    9738:	str	r0, [r5, #44]	; 0x2c
    973c:	str	r4, [sp, #4]
    9740:	beq	99c8 <gen_linktype+0x2bac>
    9744:	mov	r1, r4
    9748:	ldr	r2, [r1, #44]	; 0x2c
    974c:	add	r0, r1, #84	; 0x54
    9750:	cmp	r2, #0
    9754:	mov	r2, #84	; 0x54
    9758:	movweq	r2, #60	; 0x3c
    975c:	addeq	r0, r1, #60	; 0x3c
    9760:	ldr	r1, [r1, r2]
    9764:	cmp	r1, #0
    9768:	bne	9748 <gen_linktype+0x292c>
    976c:	b	99cc <gen_linktype+0x2bb0>
    9770:	add	r1, sp, #4
    9774:	str	r0, [r1]
    9778:	mov	r2, #8
    977c:	mov	r3, #1
    9780:	ldr	r1, [r4, #44]	; 0x2c
    9784:	clz	r1, r1
    9788:	lsr	r1, r1, #5
    978c:	str	r1, [r4, #44]	; 0x2c
    9790:	ldr	r0, [r0, #96]	; 0x60
    9794:	str	r0, [r4, #96]	; 0x60
    9798:	mov	r0, #1
    979c:	ldr	r1, [r8, #40]	; 0x28
    97a0:	bl	9ef4 <gen_cmp>
    97a4:	ldr	r1, [r0, #44]	; 0x2c
    97a8:	cmp	r0, #0
    97ac:	clz	r1, r1
    97b0:	lsr	r1, r1, #5
    97b4:	str	r1, [r0, #44]	; 0x2c
    97b8:	beq	97f4 <gen_linktype+0x29d8>
    97bc:	ldr	r2, [r4, #96]	; 0x60
    97c0:	mov	r3, r0
    97c4:	b	97cc <gen_linktype+0x29b0>
    97c8:	ldr	r1, [r3, #44]	; 0x2c
    97cc:	cmp	r1, #0
    97d0:	mov	r1, #84	; 0x54
    97d4:	add	r7, r3, #84	; 0x54
    97d8:	movweq	r1, #60	; 0x3c
    97dc:	addeq	r7, r3, #60	; 0x3c
    97e0:	ldr	r3, [r3, r1]
    97e4:	str	r2, [r7]
    97e8:	cmp	r3, #0
    97ec:	bne	97c8 <gen_linktype+0x29ac>
    97f0:	ldr	r1, [r0, #44]	; 0x2c
    97f4:	clz	r1, r1
    97f8:	cmp	r4, #0
    97fc:	lsr	r1, r1, #5
    9800:	str	r1, [r0, #44]	; 0x2c
    9804:	str	r4, [sp, #4]
    9808:	beq	9838 <gen_linktype+0x2a1c>
    980c:	mov	r2, r4
    9810:	ldr	r3, [r2, #44]	; 0x2c
    9814:	add	r1, r2, #84	; 0x54
    9818:	cmp	r3, #0
    981c:	mov	r3, #84	; 0x54
    9820:	movweq	r3, #60	; 0x3c
    9824:	addeq	r1, r2, #60	; 0x3c
    9828:	ldr	r2, [r2, r3]
    982c:	cmp	r2, #0
    9830:	bne	9810 <gen_linktype+0x29f4>
    9834:	b	983c <gen_linktype+0x2a20>
    9838:	add	r1, sp, #4
    983c:	str	r0, [r1]
    9840:	mov	r2, #8
    9844:	movw	r3, #33079	; 0x8137
    9848:	ldr	r0, [r0, #96]	; 0x60
    984c:	str	r0, [r4, #96]	; 0x60
    9850:	mov	r0, #1
    9854:	ldr	r1, [r8, #40]	; 0x28
    9858:	bl	9ef4 <gen_cmp>
    985c:	ldr	r1, [r0, #44]	; 0x2c
    9860:	cmp	r0, #0
    9864:	clz	r1, r1
    9868:	lsr	r1, r1, #5
    986c:	str	r1, [r0, #44]	; 0x2c
    9870:	beq	98ac <gen_linktype+0x2a90>
    9874:	ldr	r2, [r4, #96]	; 0x60
    9878:	mov	r3, r0
    987c:	b	9884 <gen_linktype+0x2a68>
    9880:	ldr	r1, [r3, #44]	; 0x2c
    9884:	cmp	r1, #0
    9888:	mov	r1, #84	; 0x54
    988c:	add	r7, r3, #84	; 0x54
    9890:	movweq	r1, #60	; 0x3c
    9894:	addeq	r7, r3, #60	; 0x3c
    9898:	ldr	r3, [r3, r1]
    989c:	str	r2, [r7]
    98a0:	cmp	r3, #0
    98a4:	bne	9880 <gen_linktype+0x2a64>
    98a8:	ldr	r1, [r0, #44]	; 0x2c
    98ac:	clz	r1, r1
    98b0:	cmp	r4, #0
    98b4:	lsr	r1, r1, #5
    98b8:	str	r1, [r0, #44]	; 0x2c
    98bc:	str	r4, [sp, #4]
    98c0:	beq	98f0 <gen_linktype+0x2ad4>
    98c4:	mov	r2, r4
    98c8:	ldr	r3, [r2, #44]	; 0x2c
    98cc:	add	r1, r2, #84	; 0x54
    98d0:	cmp	r3, #0
    98d4:	mov	r3, #84	; 0x54
    98d8:	movweq	r3, #60	; 0x3c
    98dc:	addeq	r1, r2, #60	; 0x3c
    98e0:	ldr	r2, [r2, r3]
    98e4:	cmp	r2, #0
    98e8:	bne	98c8 <gen_linktype+0x2aac>
    98ec:	b	98f4 <gen_linktype+0x2ad8>
    98f0:	add	r1, sp, #4
    98f4:	str	r0, [r1]
    98f8:	ldr	r0, [r0, #96]	; 0x60
    98fc:	str	r0, [r4, #96]	; 0x60
    9900:	mov	r0, r4
    9904:	sub	sp, fp, #28
    9908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    990c:	add	r0, sp, #4
    9910:	str	r4, [r0]
    9914:	mov	r2, #8
    9918:	mov	r3, #47	; 0x2f
    991c:	ldr	r0, [r4, #96]	; 0x60
    9920:	str	r0, [r5, #96]	; 0x60
    9924:	mov	r0, #1
    9928:	ldr	r1, [r8, #40]	; 0x28
    992c:	bl	9ef4 <gen_cmp>
    9930:	mov	r4, r0
    9934:	ldr	r0, [r5, #44]	; 0x2c
    9938:	cmp	r5, #0
    993c:	clz	r0, r0
    9940:	lsr	r0, r0, #5
    9944:	str	r0, [r5, #44]	; 0x2c
    9948:	beq	9984 <gen_linktype+0x2b68>
    994c:	ldr	r1, [r4, #96]	; 0x60
    9950:	mov	r2, r5
    9954:	b	995c <gen_linktype+0x2b40>
    9958:	ldr	r0, [r2, #44]	; 0x2c
    995c:	cmp	r0, #0
    9960:	mov	r0, #84	; 0x54
    9964:	add	r3, r2, #84	; 0x54
    9968:	movweq	r0, #60	; 0x3c
    996c:	addeq	r3, r2, #60	; 0x3c
    9970:	ldr	r2, [r2, r0]
    9974:	str	r1, [r3]
    9978:	cmp	r2, #0
    997c:	bne	9958 <gen_linktype+0x2b3c>
    9980:	ldr	r0, [r5, #44]	; 0x2c
    9984:	clz	r0, r0
    9988:	cmp	r4, #0
    998c:	lsr	r0, r0, #5
    9990:	str	r0, [r5, #44]	; 0x2c
    9994:	str	r4, [sp, #4]
    9998:	beq	99c8 <gen_linktype+0x2bac>
    999c:	mov	r1, r4
    99a0:	ldr	r2, [r1, #44]	; 0x2c
    99a4:	add	r0, r1, #84	; 0x54
    99a8:	cmp	r2, #0
    99ac:	mov	r2, #84	; 0x54
    99b0:	movweq	r2, #60	; 0x3c
    99b4:	addeq	r0, r1, #60	; 0x3c
    99b8:	ldr	r1, [r1, r2]
    99bc:	cmp	r1, #0
    99c0:	bne	99a0 <gen_linktype+0x2b84>
    99c4:	b	99cc <gen_linktype+0x2bb0>
    99c8:	add	r0, sp, #4
    99cc:	str	r5, [r0]
    99d0:	ldr	r0, [r5, #96]	; 0x60
    99d4:	str	r0, [r4, #96]	; 0x60
    99d8:	mov	r0, r4
    99dc:	sub	sp, fp, #28
    99e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    99e4:	ldr	r0, [pc, #260]	; 9af0 <gen_linktype+0x2cd4>
    99e8:	add	r0, pc, r0
    99ec:	bl	2204 <sf_bpf_error>
    99f0:	ldr	r0, [pc, #212]	; 9acc <gen_linktype+0x2cb0>
    99f4:	add	r0, pc, r0
    99f8:	bl	2204 <sf_bpf_error>
    99fc:	ldr	r0, [pc, #212]	; 9ad8 <gen_linktype+0x2cbc>
    9a00:	add	r0, pc, r0
    9a04:	bl	2204 <sf_bpf_error>
    9a08:	ldr	r0, [pc, #176]	; 9ac0 <gen_linktype+0x2ca4>
    9a0c:	add	r0, pc, r0
    9a10:	bl	2204 <sf_bpf_error>
    9a14:	ldr	r0, [pc, #180]	; 9ad0 <gen_linktype+0x2cb4>
    9a18:	add	r0, pc, r0
    9a1c:	bl	2204 <sf_bpf_error>
    9a20:	ldr	r0, [pc, #172]	; 9ad4 <gen_linktype+0x2cb8>
    9a24:	add	r0, pc, r0
    9a28:	bl	2204 <sf_bpf_error>
    9a2c:	ldr	r0, [pc, #124]	; 9ab0 <gen_linktype+0x2c94>
    9a30:	add	r0, pc, r0
    9a34:	bl	2204 <sf_bpf_error>
    9a38:	ldr	r0, [pc, #124]	; 9abc <gen_linktype+0x2ca0>
    9a3c:	add	r0, pc, r0
    9a40:	bl	2204 <sf_bpf_error>
    9a44:	ldr	r0, [pc, #108]	; 9ab8 <gen_linktype+0x2c9c>
    9a48:	add	r0, pc, r0
    9a4c:	bl	2204 <sf_bpf_error>
    9a50:	ldr	r0, [pc, #112]	; 9ac8 <gen_linktype+0x2cac>
    9a54:	add	r0, pc, r0
    9a58:	bl	2204 <sf_bpf_error>
    9a5c:	ldr	r0, [pc, #80]	; 9ab4 <gen_linktype+0x2c98>
    9a60:	add	r0, pc, r0
    9a64:	bl	2204 <sf_bpf_error>
    9a68:	ldr	r0, [pc, #108]	; 9adc <gen_linktype+0x2cc0>
    9a6c:	add	r0, pc, r0
    9a70:	bl	2204 <sf_bpf_error>
    9a74:	ldr	r0, [pc, #100]	; 9ae0 <gen_linktype+0x2cc4>
    9a78:	add	r0, pc, r0
    9a7c:	bl	2204 <sf_bpf_error>
    9a80:	ldr	r0, [pc, #60]	; 9ac4 <gen_linktype+0x2ca8>
    9a84:	add	r0, pc, r0
    9a88:	bl	2204 <sf_bpf_error>
    9a8c:	ldr	r0, [pc, #80]	; 9ae4 <gen_linktype+0x2cc8>
    9a90:	add	r0, pc, r0
    9a94:	bl	2204 <sf_bpf_error>
    9a98:	ldr	r0, [pc, #72]	; 9ae8 <gen_linktype+0x2ccc>
    9a9c:	add	r0, pc, r0
    9aa0:	bl	2204 <sf_bpf_error>
    9aa4:	ldr	r0, [pc, #64]	; 9aec <gen_linktype+0x2cd0>
    9aa8:	add	r0, pc, r0
    9aac:	bl	2204 <sf_bpf_error>
    9ab0:	.word	0x0001f9ae
    9ab4:	.word	0x0001f99d
    9ab8:	.word	0x0001f9f6
    9abc:	.word	0x0001fa31
    9ac0:	.word	0x0001fa92
    9ac4:	.word	0x0001fa49
    9ac8:	.word	0x0001faa7
    9acc:	.word	0x0001fb36
    9ad0:	.word	0x0001fb40
    9ad4:	.word	0x0001fb68
    9ad8:	.word	0x0001fbba
    9adc:	.word	0x0001fb86
    9ae0:	.word	0x0001fbb0
    9ae4:	.word	0x0001fbc7
    9ae8:	.word	0x0001fbeb
    9aec:	.word	0x0001fc0e
    9af0:	.word	0x0001f9ac

00009af4 <sf_gen_portop>:
    9af4:	push	{r4, r5, r6, r7, fp, lr}
    9af8:	add	fp, sp, #16
    9afc:	sub	sp, sp, #8
    9b00:	mov	r6, r2
    9b04:	mov	r3, r1
    9b08:	mov	r5, r0
    9b0c:	mov	r0, #3
    9b10:	mov	r1, #9
    9b14:	mov	r2, #16
    9b18:	bl	9ef4 <gen_cmp>
    9b1c:	mov	r7, r0
    9b20:	bl	9fb0 <gen_ipfrag>
    9b24:	mov	r4, r0
    9b28:	cmp	r7, #0
    9b2c:	beq	9b60 <sf_gen_portop+0x6c>
    9b30:	ldr	r0, [r4, #96]	; 0x60
    9b34:	mov	r1, r7
    9b38:	ldr	r2, [r1, #44]	; 0x2c
    9b3c:	add	r3, r1, #84	; 0x54
    9b40:	cmp	r2, #0
    9b44:	mov	r2, #84	; 0x54
    9b48:	movweq	r2, #60	; 0x3c
    9b4c:	addeq	r3, r1, #60	; 0x3c
    9b50:	ldr	r1, [r1, r2]
    9b54:	str	r0, [r3]
    9b58:	cmp	r1, #0
    9b5c:	bne	9b38 <sf_gen_portop+0x44>
    9b60:	ldr	r0, [r7, #44]	; 0x2c
    9b64:	cmp	r4, #0
    9b68:	clz	r0, r0
    9b6c:	lsr	r0, r0, #5
    9b70:	str	r0, [r7, #44]	; 0x2c
    9b74:	ldr	r1, [r4, #44]	; 0x2c
    9b78:	clz	r0, r1
    9b7c:	lsr	r0, r0, #5
    9b80:	str	r0, [r4, #44]	; 0x2c
    9b84:	str	r4, [sp, #4]
    9b88:	beq	9bd4 <sf_gen_portop+0xe0>
    9b8c:	cmp	r1, #0
    9b90:	mov	r1, #60	; 0x3c
    9b94:	add	r0, r4, #60	; 0x3c
    9b98:	movweq	r1, #84	; 0x54
    9b9c:	addeq	r0, r4, #84	; 0x54
    9ba0:	ldr	r1, [r4, r1]
    9ba4:	cmp	r1, #0
    9ba8:	beq	9bd8 <sf_gen_portop+0xe4>
    9bac:	ldr	r2, [r1, #44]	; 0x2c
    9bb0:	add	r0, r1, #84	; 0x54
    9bb4:	cmp	r2, #0
    9bb8:	mov	r2, #84	; 0x54
    9bbc:	movweq	r2, #60	; 0x3c
    9bc0:	addeq	r0, r1, #60	; 0x3c
    9bc4:	ldr	r1, [r1, r2]
    9bc8:	cmp	r1, #0
    9bcc:	bne	9bac <sf_gen_portop+0xb8>
    9bd0:	b	9bd8 <sf_gen_portop+0xe4>
    9bd4:	add	r0, sp, #4
    9bd8:	str	r7, [r0]
    9bdc:	cmp	r6, #4
    9be0:	ldr	r0, [r4, #44]	; 0x2c
    9be4:	clz	r0, r0
    9be8:	lsr	r0, r0, #5
    9bec:	str	r0, [r4, #44]	; 0x2c
    9bf0:	ldr	r0, [r7, #96]	; 0x60
    9bf4:	str	r0, [r4, #96]	; 0x60
    9bf8:	bhi	9ef0 <sf_gen_portop+0x3fc>
    9bfc:	add	r0, pc, #4
    9c00:	ldr	r1, [r0, r6, lsl #2]
    9c04:	add	pc, r0, r1
    9c08:	.word	0x00000014
    9c0c:	.word	0x000001ac
    9c10:	.word	0x000001b8
    9c14:	.word	0x00000014
    9c18:	.word	0x000000d4
    9c1c:	mov	r0, #5
    9c20:	mov	r1, #0
    9c24:	mov	r2, #8
    9c28:	mov	r3, r5
    9c2c:	bl	9ef4 <gen_cmp>
    9c30:	mov	r6, r0
    9c34:	mov	r0, #5
    9c38:	mov	r1, #2
    9c3c:	mov	r2, #8
    9c40:	mov	r3, r5
    9c44:	bl	9ef4 <gen_cmp>
    9c48:	ldr	r1, [r6, #44]	; 0x2c
    9c4c:	cmp	r6, #0
    9c50:	clz	r1, r1
    9c54:	lsr	r1, r1, #5
    9c58:	str	r1, [r6, #44]	; 0x2c
    9c5c:	beq	9c98 <sf_gen_portop+0x1a4>
    9c60:	ldr	r2, [r0, #96]	; 0x60
    9c64:	mov	r3, r6
    9c68:	b	9c70 <sf_gen_portop+0x17c>
    9c6c:	ldr	r1, [r3, #44]	; 0x2c
    9c70:	cmp	r1, #0
    9c74:	mov	r1, #84	; 0x54
    9c78:	add	r7, r3, #84	; 0x54
    9c7c:	movweq	r1, #60	; 0x3c
    9c80:	addeq	r7, r3, #60	; 0x3c
    9c84:	ldr	r3, [r3, r1]
    9c88:	str	r2, [r7]
    9c8c:	cmp	r3, #0
    9c90:	bne	9c6c <sf_gen_portop+0x178>
    9c94:	ldr	r1, [r6, #44]	; 0x2c
    9c98:	clz	r1, r1
    9c9c:	cmp	r0, #0
    9ca0:	lsr	r1, r1, #5
    9ca4:	str	r1, [r6, #44]	; 0x2c
    9ca8:	str	r0, [sp, #4]
    9cac:	beq	9de0 <sf_gen_portop+0x2ec>
    9cb0:	mov	r2, r0
    9cb4:	ldr	r3, [r2, #44]	; 0x2c
    9cb8:	add	r1, r2, #84	; 0x54
    9cbc:	cmp	r3, #0
    9cc0:	mov	r3, #84	; 0x54
    9cc4:	movweq	r3, #60	; 0x3c
    9cc8:	addeq	r1, r2, #60	; 0x3c
    9ccc:	ldr	r2, [r2, r3]
    9cd0:	cmp	r2, #0
    9cd4:	bne	9cb4 <sf_gen_portop+0x1c0>
    9cd8:	b	9de4 <sf_gen_portop+0x2f0>
    9cdc:	mov	r0, #5
    9ce0:	mov	r1, #0
    9ce4:	mov	r2, #8
    9ce8:	mov	r3, r5
    9cec:	bl	9ef4 <gen_cmp>
    9cf0:	mov	r6, r0
    9cf4:	mov	r0, #5
    9cf8:	mov	r1, #2
    9cfc:	mov	r2, #8
    9d00:	mov	r3, r5
    9d04:	bl	9ef4 <gen_cmp>
    9d08:	cmp	r6, #0
    9d0c:	beq	9d40 <sf_gen_portop+0x24c>
    9d10:	ldr	r1, [r0, #96]	; 0x60
    9d14:	mov	r2, r6
    9d18:	ldr	r3, [r2, #44]	; 0x2c
    9d1c:	add	r7, r2, #84	; 0x54
    9d20:	cmp	r3, #0
    9d24:	mov	r3, #84	; 0x54
    9d28:	movweq	r3, #60	; 0x3c
    9d2c:	addeq	r7, r2, #60	; 0x3c
    9d30:	ldr	r2, [r2, r3]
    9d34:	str	r1, [r7]
    9d38:	cmp	r2, #0
    9d3c:	bne	9d18 <sf_gen_portop+0x224>
    9d40:	ldr	r1, [r6, #44]	; 0x2c
    9d44:	cmp	r0, #0
    9d48:	clz	r1, r1
    9d4c:	lsr	r1, r1, #5
    9d50:	str	r1, [r6, #44]	; 0x2c
    9d54:	ldr	r2, [r0, #44]	; 0x2c
    9d58:	clz	r1, r2
    9d5c:	lsr	r1, r1, #5
    9d60:	str	r1, [r0, #44]	; 0x2c
    9d64:	str	r0, [sp, #4]
    9d68:	beq	9dfc <sf_gen_portop+0x308>
    9d6c:	cmp	r2, #0
    9d70:	mov	r2, #60	; 0x3c
    9d74:	add	r1, r0, #60	; 0x3c
    9d78:	movweq	r2, #84	; 0x54
    9d7c:	addeq	r1, r0, #84	; 0x54
    9d80:	ldr	r2, [r0, r2]
    9d84:	cmp	r2, #0
    9d88:	beq	9e00 <sf_gen_portop+0x30c>
    9d8c:	ldr	r3, [r2, #44]	; 0x2c
    9d90:	add	r1, r2, #84	; 0x54
    9d94:	cmp	r3, #0
    9d98:	mov	r3, #84	; 0x54
    9d9c:	movweq	r3, #60	; 0x3c
    9da0:	addeq	r1, r2, #60	; 0x3c
    9da4:	ldr	r2, [r2, r3]
    9da8:	cmp	r2, #0
    9dac:	bne	9d8c <sf_gen_portop+0x298>
    9db0:	b	9e00 <sf_gen_portop+0x30c>
    9db4:	mov	r0, #5
    9db8:	mov	r1, #0
    9dbc:	b	9dc8 <sf_gen_portop+0x2d4>
    9dc0:	mov	r0, #5
    9dc4:	mov	r1, #2
    9dc8:	mov	r2, #8
    9dcc:	mov	r3, r5
    9dd0:	bl	9ef4 <gen_cmp>
    9dd4:	cmp	r4, #0
    9dd8:	bne	9e24 <sf_gen_portop+0x330>
    9ddc:	b	9e54 <sf_gen_portop+0x360>
    9de0:	add	r1, sp, #4
    9de4:	str	r6, [r1]
    9de8:	ldr	r1, [r6, #96]	; 0x60
    9dec:	str	r1, [r0, #96]	; 0x60
    9df0:	cmp	r4, #0
    9df4:	bne	9e24 <sf_gen_portop+0x330>
    9df8:	b	9e54 <sf_gen_portop+0x360>
    9dfc:	add	r1, sp, #4
    9e00:	str	r6, [r1]
    9e04:	ldr	r1, [r0, #44]	; 0x2c
    9e08:	clz	r1, r1
    9e0c:	lsr	r1, r1, #5
    9e10:	str	r1, [r0, #44]	; 0x2c
    9e14:	ldr	r1, [r6, #96]	; 0x60
    9e18:	str	r1, [r0, #96]	; 0x60
    9e1c:	cmp	r4, #0
    9e20:	beq	9e54 <sf_gen_portop+0x360>
    9e24:	ldr	r1, [r0, #96]	; 0x60
    9e28:	mov	r2, r4
    9e2c:	ldr	r3, [r2, #44]	; 0x2c
    9e30:	add	r7, r2, #84	; 0x54
    9e34:	cmp	r3, #0
    9e38:	mov	r3, #84	; 0x54
    9e3c:	movweq	r3, #60	; 0x3c
    9e40:	addeq	r7, r2, #60	; 0x3c
    9e44:	ldr	r2, [r2, r3]
    9e48:	str	r1, [r7]
    9e4c:	cmp	r2, #0
    9e50:	bne	9e2c <sf_gen_portop+0x338>
    9e54:	ldr	r1, [r4, #44]	; 0x2c
    9e58:	cmp	r0, #0
    9e5c:	clz	r1, r1
    9e60:	lsr	r1, r1, #5
    9e64:	str	r1, [r4, #44]	; 0x2c
    9e68:	ldr	r2, [r0, #44]	; 0x2c
    9e6c:	clz	r1, r2
    9e70:	lsr	r1, r1, #5
    9e74:	str	r1, [r0, #44]	; 0x2c
    9e78:	str	r0, [sp, #4]
    9e7c:	beq	9ec8 <sf_gen_portop+0x3d4>
    9e80:	cmp	r2, #0
    9e84:	mov	r2, #60	; 0x3c
    9e88:	add	r1, r0, #60	; 0x3c
    9e8c:	movweq	r2, #84	; 0x54
    9e90:	addeq	r1, r0, #84	; 0x54
    9e94:	ldr	r2, [r0, r2]
    9e98:	cmp	r2, #0
    9e9c:	beq	9ecc <sf_gen_portop+0x3d8>
    9ea0:	ldr	r3, [r2, #44]	; 0x2c
    9ea4:	add	r1, r2, #84	; 0x54
    9ea8:	cmp	r3, #0
    9eac:	mov	r3, #84	; 0x54
    9eb0:	movweq	r3, #60	; 0x3c
    9eb4:	addeq	r1, r2, #60	; 0x3c
    9eb8:	ldr	r2, [r2, r3]
    9ebc:	cmp	r2, #0
    9ec0:	bne	9ea0 <sf_gen_portop+0x3ac>
    9ec4:	b	9ecc <sf_gen_portop+0x3d8>
    9ec8:	add	r1, sp, #4
    9ecc:	str	r4, [r1]
    9ed0:	ldr	r1, [r0, #44]	; 0x2c
    9ed4:	clz	r1, r1
    9ed8:	lsr	r1, r1, #5
    9edc:	str	r1, [r0, #44]	; 0x2c
    9ee0:	ldr	r1, [r4, #96]	; 0x60
    9ee4:	str	r1, [r0, #96]	; 0x60
    9ee8:	sub	sp, fp, #16
    9eec:	pop	{r4, r5, r6, r7, fp, pc}
    9ef0:	bl	100c <abort@plt>

00009ef4 <gen_cmp>:
    9ef4:	push	{r4, r5, r6, r7, fp, lr}
    9ef8:	add	fp, sp, #16
    9efc:	mov	r4, r3
    9f00:	bl	1669c <gen_load_a>
    9f04:	ldr	r1, [pc, #152]	; 9fa4 <gen_cmp+0xb0>
    9f08:	mov	r5, r0
    9f0c:	add	r1, pc, r1
    9f10:	ldr	r0, [r1, #92]	; 0x5c
    9f14:	ldr	r7, [pc, #140]	; 9fa8 <gen_cmp+0xb4>
    9f18:	add	r7, pc, r7
    9f1c:	ldr	r6, [r7, r0, lsl #3]!
    9f20:	cmp	r6, #207	; 0xcf
    9f24:	bhi	9f70 <gen_cmp+0x7c>
    9f28:	add	r2, r0, #1
    9f2c:	cmp	r0, #15
    9f30:	str	r2, [r1, #92]	; 0x5c
    9f34:	bge	9f98 <gen_cmp+0xa4>
    9f38:	mov	r0, #1024	; 0x400
    9f3c:	lsl	r6, r0, r2
    9f40:	mov	r0, r6
    9f44:	bl	f1c <malloc@plt>
    9f48:	cmp	r0, #0
    9f4c:	str	r0, [r7, #12]
    9f50:	beq	9f98 <gen_cmp+0xa4>
    9f54:	mov	r1, #0
    9f58:	mov	r2, r6
    9f5c:	add	r7, r7, #8
    9f60:	bl	f88 <memset@plt>
    9f64:	cmp	r6, #207	; 0xcf
    9f68:	str	r6, [r7]
    9f6c:	bls	9f98 <gen_cmp+0xa4>
    9f70:	sub	r0, r6, #208	; 0xd0
    9f74:	str	r0, [r7]
    9f78:	ldr	r1, [r7, #4]
    9f7c:	add	r0, r1, r0
    9f80:	mov	r1, #21
    9f84:	str	r5, [r0, #4]
    9f88:	str	r1, [r0, #8]
    9f8c:	str	r4, [r0, #20]
    9f90:	str	r0, [r0, #96]	; 0x60
    9f94:	pop	{r4, r5, r6, r7, fp, pc}
    9f98:	ldr	r0, [pc, #12]	; 9fac <gen_cmp+0xb8>
    9f9c:	add	r0, pc, r0
    9fa0:	bl	2204 <sf_bpf_error>
    9fa4:	.word	0x0003c5d4
    9fa8:	.word	0x0003c508
    9fac:	.word	0x0001f3f8

00009fb0 <gen_ipfrag>:
    9fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9fb4:	add	fp, sp, #28
    9fb8:	sub	sp, sp, #4
    9fbc:	ldr	r9, [pc, #636]	; a240 <gen_ipfrag+0x290>
    9fc0:	add	r9, pc, r9
    9fc4:	ldrb	r0, [r9, #16]
    9fc8:	ldr	r1, [r9, #48]	; 0x30
    9fcc:	add	r8, r1, #6
    9fd0:	cmp	r0, #0
    9fd4:	beq	a058 <gen_ipfrag+0xa8>
    9fd8:	ldr	r4, [r9, #100]	; 0x64
    9fdc:	cmn	r4, #1
    9fe0:	bne	9ff0 <gen_ipfrag+0x40>
    9fe4:	bl	1309c <alloc_reg>
    9fe8:	mov	r4, r0
    9fec:	str	r0, [r9, #100]	; 0x64
    9ff0:	ldr	r0, [r9, #92]	; 0x5c
    9ff4:	ldr	sl, [pc, #588]	; a248 <gen_ipfrag+0x298>
    9ff8:	add	sl, pc, sl
    9ffc:	mov	r6, sl
    a000:	ldr	r5, [r6, r0, lsl #3]!
    a004:	cmp	r5, #19
    a008:	bhi	a060 <gen_ipfrag+0xb0>
    a00c:	add	r7, r0, #1
    a010:	cmp	r0, #15
    a014:	str	r7, [r9, #92]	; 0x5c
    a018:	bge	a234 <gen_ipfrag+0x284>
    a01c:	mov	r0, #1024	; 0x400
    a020:	lsl	r5, r0, r7
    a024:	mov	r0, r5
    a028:	bl	f1c <malloc@plt>
    a02c:	cmp	r0, #0
    a030:	str	r0, [r6, #12]
    a034:	beq	a234 <gen_ipfrag+0x284>
    a038:	mov	r1, #0
    a03c:	mov	r2, r5
    a040:	add	r6, r6, #8
    a044:	bl	f88 <memset@plt>
    a048:	cmp	r5, #19
    a04c:	str	r5, [r6]
    a050:	bhi	a064 <gen_ipfrag+0xb4>
    a054:	b	a234 <gen_ipfrag+0x284>
    a058:	ldr	r7, [r9, #92]	; 0x5c
    a05c:	b	a0dc <gen_ipfrag+0x12c>
    a060:	mov	r7, r0
    a064:	sub	r0, r5, #20
    a068:	mov	r1, #97	; 0x61
    a06c:	str	r0, [r6]
    a070:	ldr	r5, [r6, #4]
    a074:	str	r1, [r5, r0]!
    a078:	cmp	r5, #0
    a07c:	str	r4, [r5, #12]
    a080:	beq	a0dc <gen_ipfrag+0x12c>
    a084:	ldr	r4, [sl, r7, lsl #3]!
    a088:	cmp	r4, #19
    a08c:	bhi	a164 <gen_ipfrag+0x1b4>
    a090:	add	r6, r7, #1
    a094:	cmp	r7, #15
    a098:	str	r6, [r9, #92]	; 0x5c
    a09c:	bge	a234 <gen_ipfrag+0x284>
    a0a0:	mov	r0, #1024	; 0x400
    a0a4:	lsl	r4, r0, r6
    a0a8:	mov	r0, r4
    a0ac:	bl	f1c <malloc@plt>
    a0b0:	cmp	r0, #0
    a0b4:	str	r0, [sl, #12]
    a0b8:	beq	a234 <gen_ipfrag+0x284>
    a0bc:	mov	r1, #0
    a0c0:	mov	r2, r4
    a0c4:	add	sl, sl, #8
    a0c8:	bl	f88 <memset@plt>
    a0cc:	cmp	r4, #19
    a0d0:	str	r4, [sl]
    a0d4:	bhi	a168 <gen_ipfrag+0x1b8>
    a0d8:	b	a234 <gen_ipfrag+0x284>
    a0dc:	ldr	r5, [pc, #352]	; a244 <gen_ipfrag+0x294>
    a0e0:	add	r5, pc, r5
    a0e4:	ldr	r4, [r5, r7, lsl #3]!
    a0e8:	cmp	r4, #19
    a0ec:	bhi	a13c <gen_ipfrag+0x18c>
    a0f0:	add	r6, r7, #1
    a0f4:	cmp	r7, #15
    a0f8:	str	r6, [r9, #92]	; 0x5c
    a0fc:	bge	a234 <gen_ipfrag+0x284>
    a100:	mov	r0, #1024	; 0x400
    a104:	lsl	r4, r0, r6
    a108:	mov	r0, r4
    a10c:	bl	f1c <malloc@plt>
    a110:	cmp	r0, #0
    a114:	str	r0, [r5, #12]
    a118:	beq	a234 <gen_ipfrag+0x284>
    a11c:	mov	r1, #0
    a120:	mov	r2, r4
    a124:	add	r5, r5, #8
    a128:	bl	f88 <memset@plt>
    a12c:	cmp	r4, #19
    a130:	str	r4, [r5]
    a134:	bhi	a140 <gen_ipfrag+0x190>
    a138:	b	a234 <gen_ipfrag+0x284>
    a13c:	mov	r6, r7
    a140:	sub	r0, r4, #20
    a144:	mov	r1, #40	; 0x28
    a148:	str	r0, [r5]
    a14c:	ldr	r5, [r5, #4]
    a150:	str	r1, [r5, r0]!
    a154:	ldr	r0, [r9, #44]	; 0x2c
    a158:	add	r0, r0, r8
    a15c:	str	r0, [r5, #12]
    a160:	b	a198 <gen_ipfrag+0x1e8>
    a164:	mov	r6, r7
    a168:	sub	r1, r4, #20
    a16c:	mov	r2, #72	; 0x48
    a170:	str	r1, [sl]
    a174:	ldr	r0, [sl, #4]
    a178:	str	r2, [r0, r1]!
    a17c:	mov	r2, r5
    a180:	str	r8, [r0, #12]
    a184:	mov	r1, r2
    a188:	ldr	r2, [r2, #16]
    a18c:	cmp	r2, #0
    a190:	bne	a184 <gen_ipfrag+0x1d4>
    a194:	str	r0, [r1, #16]
    a198:	ldr	r7, [pc, #172]	; a24c <gen_ipfrag+0x29c>
    a19c:	add	r7, pc, r7
    a1a0:	ldr	r4, [r7, r6, lsl #3]!
    a1a4:	cmp	r4, #207	; 0xcf
    a1a8:	bhi	a1f4 <gen_ipfrag+0x244>
    a1ac:	add	r0, r6, #1
    a1b0:	cmp	r6, #15
    a1b4:	str	r0, [r9, #92]	; 0x5c
    a1b8:	bge	a234 <gen_ipfrag+0x284>
    a1bc:	mov	r1, #1024	; 0x400
    a1c0:	lsl	r4, r1, r0
    a1c4:	mov	r0, r4
    a1c8:	bl	f1c <malloc@plt>
    a1cc:	cmp	r0, #0
    a1d0:	str	r0, [r7, #12]
    a1d4:	beq	a234 <gen_ipfrag+0x284>
    a1d8:	mov	r1, #0
    a1dc:	mov	r2, r4
    a1e0:	add	r7, r7, #8
    a1e4:	bl	f88 <memset@plt>
    a1e8:	cmp	r4, #207	; 0xcf
    a1ec:	str	r4, [r7]
    a1f0:	bls	a234 <gen_ipfrag+0x284>
    a1f4:	sub	r0, r4, #208	; 0xd0
    a1f8:	movw	r2, #8191	; 0x1fff
    a1fc:	str	r0, [r7]
    a200:	ldr	r1, [r7, #4]
    a204:	add	r0, r1, r0
    a208:	mov	r1, #69	; 0x45
    a20c:	str	r2, [r0, #20]
    a210:	str	r5, [r0, #4]
    a214:	str	r1, [r0, #8]
    a218:	ldr	r1, [r0, #44]	; 0x2c
    a21c:	clz	r1, r1
    a220:	lsr	r1, r1, #5
    a224:	str	r1, [r0, #44]	; 0x2c
    a228:	str	r0, [r0, #96]	; 0x60
    a22c:	sub	sp, fp, #28
    a230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a234:	ldr	r0, [pc, #20]	; a250 <gen_ipfrag+0x2a0>
    a238:	add	r0, pc, r0
    a23c:	bl	2204 <sf_bpf_error>
    a240:	.word	0x0003c520
    a244:	.word	0x0003c340
    a248:	.word	0x0003c428
    a24c:	.word	0x0003c284
    a250:	.word	0x0001f15c

0000a254 <sf_gen_portop6>:
    a254:	push	{r4, r5, r6, sl, fp, lr}
    a258:	add	fp, sp, #16
    a25c:	sub	sp, sp, #16
    a260:	mov	r5, r2
    a264:	mov	r3, r1
    a268:	mov	r6, r0
    a26c:	mov	r0, #3
    a270:	mov	r1, #6
    a274:	mov	r2, #16
    a278:	bl	9ef4 <gen_cmp>
    a27c:	cmp	r5, #4
    a280:	bhi	a57c <sf_gen_portop6+0x328>
    a284:	mov	r4, r0
    a288:	add	r0, pc, #4
    a28c:	ldr	r1, [r0, r5, lsl #2]
    a290:	add	pc, r0, r1
    a294:	.word	0x00000014
    a298:	.word	0x000001ac
    a29c:	.word	0x000001b8
    a2a0:	.word	0x00000014
    a2a4:	.word	0x000000d4
    a2a8:	mov	r0, #6
    a2ac:	mov	r1, #0
    a2b0:	mov	r2, #8
    a2b4:	mov	r3, r6
    a2b8:	bl	9ef4 <gen_cmp>
    a2bc:	mov	r5, r0
    a2c0:	mov	r0, #6
    a2c4:	mov	r1, #2
    a2c8:	mov	r2, #8
    a2cc:	mov	r3, r6
    a2d0:	bl	9ef4 <gen_cmp>
    a2d4:	ldr	r1, [r5, #44]	; 0x2c
    a2d8:	cmp	r5, #0
    a2dc:	clz	r1, r1
    a2e0:	lsr	r1, r1, #5
    a2e4:	str	r1, [r5, #44]	; 0x2c
    a2e8:	beq	a324 <sf_gen_portop6+0xd0>
    a2ec:	ldr	r2, [r0, #96]	; 0x60
    a2f0:	mov	r3, r5
    a2f4:	b	a2fc <sf_gen_portop6+0xa8>
    a2f8:	ldr	r1, [r3, #44]	; 0x2c
    a2fc:	cmp	r1, #0
    a300:	mov	r1, #84	; 0x54
    a304:	add	r6, r3, #84	; 0x54
    a308:	movweq	r1, #60	; 0x3c
    a30c:	addeq	r6, r3, #60	; 0x3c
    a310:	ldr	r3, [r3, r1]
    a314:	str	r2, [r6]
    a318:	cmp	r3, #0
    a31c:	bne	a2f8 <sf_gen_portop6+0xa4>
    a320:	ldr	r1, [r5, #44]	; 0x2c
    a324:	clz	r1, r1
    a328:	cmp	r0, #0
    a32c:	lsr	r1, r1, #5
    a330:	str	r1, [r5, #44]	; 0x2c
    a334:	str	r0, [sp, #4]
    a338:	beq	a46c <sf_gen_portop6+0x218>
    a33c:	mov	r2, r0
    a340:	ldr	r3, [r2, #44]	; 0x2c
    a344:	add	r1, r2, #84	; 0x54
    a348:	cmp	r3, #0
    a34c:	mov	r3, #84	; 0x54
    a350:	movweq	r3, #60	; 0x3c
    a354:	addeq	r1, r2, #60	; 0x3c
    a358:	ldr	r2, [r2, r3]
    a35c:	cmp	r2, #0
    a360:	bne	a340 <sf_gen_portop6+0xec>
    a364:	b	a470 <sf_gen_portop6+0x21c>
    a368:	mov	r0, #6
    a36c:	mov	r1, #0
    a370:	mov	r2, #8
    a374:	mov	r3, r6
    a378:	bl	9ef4 <gen_cmp>
    a37c:	mov	r5, r0
    a380:	mov	r0, #6
    a384:	mov	r1, #2
    a388:	mov	r2, #8
    a38c:	mov	r3, r6
    a390:	bl	9ef4 <gen_cmp>
    a394:	cmp	r5, #0
    a398:	beq	a3cc <sf_gen_portop6+0x178>
    a39c:	ldr	r1, [r0, #96]	; 0x60
    a3a0:	mov	r2, r5
    a3a4:	ldr	r3, [r2, #44]	; 0x2c
    a3a8:	add	r6, r2, #84	; 0x54
    a3ac:	cmp	r3, #0
    a3b0:	mov	r3, #84	; 0x54
    a3b4:	movweq	r3, #60	; 0x3c
    a3b8:	addeq	r6, r2, #60	; 0x3c
    a3bc:	ldr	r2, [r2, r3]
    a3c0:	str	r1, [r6]
    a3c4:	cmp	r2, #0
    a3c8:	bne	a3a4 <sf_gen_portop6+0x150>
    a3cc:	ldr	r1, [r5, #44]	; 0x2c
    a3d0:	cmp	r0, #0
    a3d4:	clz	r1, r1
    a3d8:	lsr	r1, r1, #5
    a3dc:	str	r1, [r5, #44]	; 0x2c
    a3e0:	ldr	r2, [r0, #44]	; 0x2c
    a3e4:	clz	r1, r2
    a3e8:	lsr	r1, r1, #5
    a3ec:	str	r1, [r0, #44]	; 0x2c
    a3f0:	str	r0, [sp, #12]
    a3f4:	beq	a488 <sf_gen_portop6+0x234>
    a3f8:	cmp	r2, #0
    a3fc:	mov	r2, #60	; 0x3c
    a400:	add	r1, r0, #60	; 0x3c
    a404:	movweq	r2, #84	; 0x54
    a408:	addeq	r1, r0, #84	; 0x54
    a40c:	ldr	r2, [r0, r2]
    a410:	cmp	r2, #0
    a414:	beq	a48c <sf_gen_portop6+0x238>
    a418:	ldr	r3, [r2, #44]	; 0x2c
    a41c:	add	r1, r2, #84	; 0x54
    a420:	cmp	r3, #0
    a424:	mov	r3, #84	; 0x54
    a428:	movweq	r3, #60	; 0x3c
    a42c:	addeq	r1, r2, #60	; 0x3c
    a430:	ldr	r2, [r2, r3]
    a434:	cmp	r2, #0
    a438:	bne	a418 <sf_gen_portop6+0x1c4>
    a43c:	b	a48c <sf_gen_portop6+0x238>
    a440:	mov	r0, #6
    a444:	mov	r1, #0
    a448:	b	a454 <sf_gen_portop6+0x200>
    a44c:	mov	r0, #6
    a450:	mov	r1, #2
    a454:	mov	r2, #8
    a458:	mov	r3, r6
    a45c:	bl	9ef4 <gen_cmp>
    a460:	cmp	r4, #0
    a464:	bne	a4b0 <sf_gen_portop6+0x25c>
    a468:	b	a4e0 <sf_gen_portop6+0x28c>
    a46c:	add	r1, sp, #4
    a470:	str	r5, [r1]
    a474:	ldr	r1, [r5, #96]	; 0x60
    a478:	str	r1, [r0, #96]	; 0x60
    a47c:	cmp	r4, #0
    a480:	bne	a4b0 <sf_gen_portop6+0x25c>
    a484:	b	a4e0 <sf_gen_portop6+0x28c>
    a488:	add	r1, sp, #12
    a48c:	str	r5, [r1]
    a490:	ldr	r1, [r0, #44]	; 0x2c
    a494:	clz	r1, r1
    a498:	lsr	r1, r1, #5
    a49c:	str	r1, [r0, #44]	; 0x2c
    a4a0:	ldr	r1, [r5, #96]	; 0x60
    a4a4:	str	r1, [r0, #96]	; 0x60
    a4a8:	cmp	r4, #0
    a4ac:	beq	a4e0 <sf_gen_portop6+0x28c>
    a4b0:	ldr	r1, [r0, #96]	; 0x60
    a4b4:	mov	r2, r4
    a4b8:	ldr	r3, [r2, #44]	; 0x2c
    a4bc:	add	r6, r2, #84	; 0x54
    a4c0:	cmp	r3, #0
    a4c4:	mov	r3, #84	; 0x54
    a4c8:	movweq	r3, #60	; 0x3c
    a4cc:	addeq	r6, r2, #60	; 0x3c
    a4d0:	ldr	r2, [r2, r3]
    a4d4:	str	r1, [r6]
    a4d8:	cmp	r2, #0
    a4dc:	bne	a4b8 <sf_gen_portop6+0x264>
    a4e0:	ldr	r1, [r4, #44]	; 0x2c
    a4e4:	cmp	r0, #0
    a4e8:	clz	r1, r1
    a4ec:	lsr	r1, r1, #5
    a4f0:	str	r1, [r4, #44]	; 0x2c
    a4f4:	ldr	r2, [r0, #44]	; 0x2c
    a4f8:	clz	r1, r2
    a4fc:	lsr	r1, r1, #5
    a500:	str	r1, [r0, #44]	; 0x2c
    a504:	str	r0, [sp, #8]
    a508:	beq	a554 <sf_gen_portop6+0x300>
    a50c:	cmp	r2, #0
    a510:	mov	r2, #60	; 0x3c
    a514:	add	r1, r0, #60	; 0x3c
    a518:	movweq	r2, #84	; 0x54
    a51c:	addeq	r1, r0, #84	; 0x54
    a520:	ldr	r2, [r0, r2]
    a524:	cmp	r2, #0
    a528:	beq	a558 <sf_gen_portop6+0x304>
    a52c:	ldr	r3, [r2, #44]	; 0x2c
    a530:	add	r1, r2, #84	; 0x54
    a534:	cmp	r3, #0
    a538:	mov	r3, #84	; 0x54
    a53c:	movweq	r3, #60	; 0x3c
    a540:	addeq	r1, r2, #60	; 0x3c
    a544:	ldr	r2, [r2, r3]
    a548:	cmp	r2, #0
    a54c:	bne	a52c <sf_gen_portop6+0x2d8>
    a550:	b	a558 <sf_gen_portop6+0x304>
    a554:	add	r1, sp, #8
    a558:	str	r4, [r1]
    a55c:	ldr	r1, [r0, #44]	; 0x2c
    a560:	clz	r1, r1
    a564:	lsr	r1, r1, #5
    a568:	str	r1, [r0, #44]	; 0x2c
    a56c:	ldr	r1, [r4, #96]	; 0x60
    a570:	str	r1, [r0, #96]	; 0x60
    a574:	sub	sp, fp, #16
    a578:	pop	{r4, r5, r6, sl, fp, pc}
    a57c:	bl	100c <abort@plt>

0000a580 <sf_gen_portrangeop>:
    a580:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    a584:	add	fp, sp, #24
    a588:	sub	sp, sp, #8
    a58c:	mov	r7, r3
    a590:	mov	r3, r2
    a594:	mov	r8, r1
    a598:	mov	r6, r0
    a59c:	mov	r0, #3
    a5a0:	mov	r1, #9
    a5a4:	mov	r2, #16
    a5a8:	bl	9ef4 <gen_cmp>
    a5ac:	mov	r5, r0
    a5b0:	bl	9fb0 <gen_ipfrag>
    a5b4:	mov	r4, r0
    a5b8:	cmp	r5, #0
    a5bc:	beq	a5f0 <sf_gen_portrangeop+0x70>
    a5c0:	ldr	r0, [r4, #96]	; 0x60
    a5c4:	mov	r1, r5
    a5c8:	ldr	r2, [r1, #44]	; 0x2c
    a5cc:	add	r3, r1, #84	; 0x54
    a5d0:	cmp	r2, #0
    a5d4:	mov	r2, #84	; 0x54
    a5d8:	movweq	r2, #60	; 0x3c
    a5dc:	addeq	r3, r1, #60	; 0x3c
    a5e0:	ldr	r1, [r1, r2]
    a5e4:	str	r0, [r3]
    a5e8:	cmp	r1, #0
    a5ec:	bne	a5c8 <sf_gen_portrangeop+0x48>
    a5f0:	ldr	r0, [r5, #44]	; 0x2c
    a5f4:	cmp	r4, #0
    a5f8:	clz	r0, r0
    a5fc:	lsr	r0, r0, #5
    a600:	str	r0, [r5, #44]	; 0x2c
    a604:	ldr	r1, [r4, #44]	; 0x2c
    a608:	clz	r0, r1
    a60c:	lsr	r0, r0, #5
    a610:	str	r0, [r4, #44]	; 0x2c
    a614:	str	r4, [sp, #4]
    a618:	beq	a664 <sf_gen_portrangeop+0xe4>
    a61c:	cmp	r1, #0
    a620:	mov	r1, #60	; 0x3c
    a624:	add	r0, r4, #60	; 0x3c
    a628:	movweq	r1, #84	; 0x54
    a62c:	addeq	r0, r4, #84	; 0x54
    a630:	ldr	r1, [r4, r1]
    a634:	cmp	r1, #0
    a638:	beq	a668 <sf_gen_portrangeop+0xe8>
    a63c:	ldr	r2, [r1, #44]	; 0x2c
    a640:	add	r0, r1, #84	; 0x54
    a644:	cmp	r2, #0
    a648:	mov	r2, #84	; 0x54
    a64c:	movweq	r2, #60	; 0x3c
    a650:	addeq	r0, r1, #60	; 0x3c
    a654:	ldr	r1, [r1, r2]
    a658:	cmp	r1, #0
    a65c:	bne	a63c <sf_gen_portrangeop+0xbc>
    a660:	b	a668 <sf_gen_portrangeop+0xe8>
    a664:	add	r0, sp, #4
    a668:	str	r5, [r0]
    a66c:	cmp	r7, #4
    a670:	ldr	r0, [r4, #44]	; 0x2c
    a674:	clz	r0, r0
    a678:	lsr	r0, r0, #5
    a67c:	str	r0, [r4, #44]	; 0x2c
    a680:	ldr	r0, [r5, #96]	; 0x60
    a684:	str	r0, [r4, #96]	; 0x60
    a688:	bhi	a968 <sf_gen_portrangeop+0x3e8>
    a68c:	add	r0, pc, #4
    a690:	ldr	r1, [r0, r7, lsl #2]
    a694:	add	pc, r0, r1
    a698:	.word	0x00000014
    a69c:	.word	0x0000019c
    a6a0:	.word	0x000001a4
    a6a4:	.word	0x00000014
    a6a8:	.word	0x000000cc
    a6ac:	mov	r0, #0
    a6b0:	mov	r1, r6
    a6b4:	mov	r2, r8
    a6b8:	bl	a96c <gen_portrangeatom>
    a6bc:	mov	r5, r0
    a6c0:	mov	r0, #2
    a6c4:	mov	r1, r6
    a6c8:	mov	r2, r8
    a6cc:	bl	a96c <gen_portrangeatom>
    a6d0:	ldr	r1, [r5, #44]	; 0x2c
    a6d4:	cmp	r5, #0
    a6d8:	clz	r1, r1
    a6dc:	lsr	r1, r1, #5
    a6e0:	str	r1, [r5, #44]	; 0x2c
    a6e4:	beq	a720 <sf_gen_portrangeop+0x1a0>
    a6e8:	ldr	r2, [r0, #96]	; 0x60
    a6ec:	mov	r3, r5
    a6f0:	b	a6f8 <sf_gen_portrangeop+0x178>
    a6f4:	ldr	r1, [r3, #44]	; 0x2c
    a6f8:	cmp	r1, #0
    a6fc:	mov	r1, #84	; 0x54
    a700:	add	r7, r3, #84	; 0x54
    a704:	movweq	r1, #60	; 0x3c
    a708:	addeq	r7, r3, #60	; 0x3c
    a70c:	ldr	r3, [r3, r1]
    a710:	str	r2, [r7]
    a714:	cmp	r3, #0
    a718:	bne	a6f4 <sf_gen_portrangeop+0x174>
    a71c:	ldr	r1, [r5, #44]	; 0x2c
    a720:	clz	r1, r1
    a724:	cmp	r0, #0
    a728:	lsr	r1, r1, #5
    a72c:	str	r1, [r5, #44]	; 0x2c
    a730:	str	r0, [sp, #4]
    a734:	beq	a858 <sf_gen_portrangeop+0x2d8>
    a738:	mov	r2, r0
    a73c:	ldr	r3, [r2, #44]	; 0x2c
    a740:	add	r1, r2, #84	; 0x54
    a744:	cmp	r3, #0
    a748:	mov	r3, #84	; 0x54
    a74c:	movweq	r3, #60	; 0x3c
    a750:	addeq	r1, r2, #60	; 0x3c
    a754:	ldr	r2, [r2, r3]
    a758:	cmp	r2, #0
    a75c:	bne	a73c <sf_gen_portrangeop+0x1bc>
    a760:	b	a85c <sf_gen_portrangeop+0x2dc>
    a764:	mov	r0, #0
    a768:	mov	r1, r6
    a76c:	mov	r2, r8
    a770:	bl	a96c <gen_portrangeatom>
    a774:	mov	r7, r0
    a778:	mov	r0, #2
    a77c:	mov	r1, r6
    a780:	mov	r2, r8
    a784:	bl	a96c <gen_portrangeatom>
    a788:	cmp	r7, #0
    a78c:	beq	a7c0 <sf_gen_portrangeop+0x240>
    a790:	ldr	r1, [r0, #96]	; 0x60
    a794:	mov	r2, r7
    a798:	ldr	r3, [r2, #44]	; 0x2c
    a79c:	add	r6, r2, #84	; 0x54
    a7a0:	cmp	r3, #0
    a7a4:	mov	r3, #84	; 0x54
    a7a8:	movweq	r3, #60	; 0x3c
    a7ac:	addeq	r6, r2, #60	; 0x3c
    a7b0:	ldr	r2, [r2, r3]
    a7b4:	str	r1, [r6]
    a7b8:	cmp	r2, #0
    a7bc:	bne	a798 <sf_gen_portrangeop+0x218>
    a7c0:	ldr	r1, [r7, #44]	; 0x2c
    a7c4:	cmp	r0, #0
    a7c8:	clz	r1, r1
    a7cc:	lsr	r1, r1, #5
    a7d0:	str	r1, [r7, #44]	; 0x2c
    a7d4:	ldr	r2, [r0, #44]	; 0x2c
    a7d8:	clz	r1, r2
    a7dc:	lsr	r1, r1, #5
    a7e0:	str	r1, [r0, #44]	; 0x2c
    a7e4:	str	r0, [sp, #4]
    a7e8:	beq	a874 <sf_gen_portrangeop+0x2f4>
    a7ec:	cmp	r2, #0
    a7f0:	mov	r2, #60	; 0x3c
    a7f4:	add	r1, r0, #60	; 0x3c
    a7f8:	movweq	r2, #84	; 0x54
    a7fc:	addeq	r1, r0, #84	; 0x54
    a800:	ldr	r2, [r0, r2]
    a804:	cmp	r2, #0
    a808:	beq	a878 <sf_gen_portrangeop+0x2f8>
    a80c:	ldr	r3, [r2, #44]	; 0x2c
    a810:	add	r1, r2, #84	; 0x54
    a814:	cmp	r3, #0
    a818:	mov	r3, #84	; 0x54
    a81c:	movweq	r3, #60	; 0x3c
    a820:	addeq	r1, r2, #60	; 0x3c
    a824:	ldr	r2, [r2, r3]
    a828:	cmp	r2, #0
    a82c:	bne	a80c <sf_gen_portrangeop+0x28c>
    a830:	b	a878 <sf_gen_portrangeop+0x2f8>
    a834:	mov	r0, #0
    a838:	b	a840 <sf_gen_portrangeop+0x2c0>
    a83c:	mov	r0, #2
    a840:	mov	r1, r6
    a844:	mov	r2, r8
    a848:	bl	a96c <gen_portrangeatom>
    a84c:	cmp	r4, #0
    a850:	bne	a89c <sf_gen_portrangeop+0x31c>
    a854:	b	a8cc <sf_gen_portrangeop+0x34c>
    a858:	add	r1, sp, #4
    a85c:	str	r5, [r1]
    a860:	ldr	r1, [r5, #96]	; 0x60
    a864:	str	r1, [r0, #96]	; 0x60
    a868:	cmp	r4, #0
    a86c:	bne	a89c <sf_gen_portrangeop+0x31c>
    a870:	b	a8cc <sf_gen_portrangeop+0x34c>
    a874:	add	r1, sp, #4
    a878:	str	r7, [r1]
    a87c:	ldr	r1, [r0, #44]	; 0x2c
    a880:	clz	r1, r1
    a884:	lsr	r1, r1, #5
    a888:	str	r1, [r0, #44]	; 0x2c
    a88c:	ldr	r1, [r7, #96]	; 0x60
    a890:	str	r1, [r0, #96]	; 0x60
    a894:	cmp	r4, #0
    a898:	beq	a8cc <sf_gen_portrangeop+0x34c>
    a89c:	ldr	r1, [r0, #96]	; 0x60
    a8a0:	mov	r2, r4
    a8a4:	ldr	r3, [r2, #44]	; 0x2c
    a8a8:	add	r7, r2, #84	; 0x54
    a8ac:	cmp	r3, #0
    a8b0:	mov	r3, #84	; 0x54
    a8b4:	movweq	r3, #60	; 0x3c
    a8b8:	addeq	r7, r2, #60	; 0x3c
    a8bc:	ldr	r2, [r2, r3]
    a8c0:	str	r1, [r7]
    a8c4:	cmp	r2, #0
    a8c8:	bne	a8a4 <sf_gen_portrangeop+0x324>
    a8cc:	ldr	r1, [r4, #44]	; 0x2c
    a8d0:	cmp	r0, #0
    a8d4:	clz	r1, r1
    a8d8:	lsr	r1, r1, #5
    a8dc:	str	r1, [r4, #44]	; 0x2c
    a8e0:	ldr	r2, [r0, #44]	; 0x2c
    a8e4:	clz	r1, r2
    a8e8:	lsr	r1, r1, #5
    a8ec:	str	r1, [r0, #44]	; 0x2c
    a8f0:	str	r0, [sp, #4]
    a8f4:	beq	a940 <sf_gen_portrangeop+0x3c0>
    a8f8:	cmp	r2, #0
    a8fc:	mov	r2, #60	; 0x3c
    a900:	add	r1, r0, #60	; 0x3c
    a904:	movweq	r2, #84	; 0x54
    a908:	addeq	r1, r0, #84	; 0x54
    a90c:	ldr	r2, [r0, r2]
    a910:	cmp	r2, #0
    a914:	beq	a944 <sf_gen_portrangeop+0x3c4>
    a918:	ldr	r3, [r2, #44]	; 0x2c
    a91c:	add	r1, r2, #84	; 0x54
    a920:	cmp	r3, #0
    a924:	mov	r3, #84	; 0x54
    a928:	movweq	r3, #60	; 0x3c
    a92c:	addeq	r1, r2, #60	; 0x3c
    a930:	ldr	r2, [r2, r3]
    a934:	cmp	r2, #0
    a938:	bne	a918 <sf_gen_portrangeop+0x398>
    a93c:	b	a944 <sf_gen_portrangeop+0x3c4>
    a940:	add	r1, sp, #4
    a944:	str	r4, [r1]
    a948:	ldr	r1, [r0, #44]	; 0x2c
    a94c:	clz	r1, r1
    a950:	lsr	r1, r1, #5
    a954:	str	r1, [r0, #44]	; 0x2c
    a958:	ldr	r1, [r4, #96]	; 0x60
    a95c:	str	r1, [r0, #96]	; 0x60
    a960:	sub	sp, fp, #24
    a964:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    a968:	bl	100c <abort@plt>

0000a96c <gen_portrangeatom>:
    a96c:	push	{r4, r5, r6, r7, fp, lr}
    a970:	add	fp, sp, #16
    a974:	sub	sp, sp, #8
    a978:	mov	r7, r0
    a97c:	cmp	r1, r2
    a980:	mov	r3, r1
    a984:	mov	r6, r1
    a988:	mov	r5, r2
    a98c:	mov	r0, #5
    a990:	movgt	r3, r2
    a994:	mov	r1, r7
    a998:	mov	r2, #8
    a99c:	bl	16a50 <gen_cmp_ge>
    a9a0:	cmp	r6, r5
    a9a4:	mov	r4, r0
    a9a8:	mov	r0, #5
    a9ac:	mov	r1, r7
    a9b0:	mov	r2, #8
    a9b4:	movgt	r5, r6
    a9b8:	mov	r3, r5
    a9bc:	bl	1b57c <gen_cmp_le>
    a9c0:	cmp	r4, #0
    a9c4:	beq	a9f8 <gen_portrangeatom+0x8c>
    a9c8:	ldr	r1, [r0, #96]	; 0x60
    a9cc:	mov	r2, r4
    a9d0:	ldr	r3, [r2, #44]	; 0x2c
    a9d4:	add	r7, r2, #84	; 0x54
    a9d8:	cmp	r3, #0
    a9dc:	mov	r3, #84	; 0x54
    a9e0:	movweq	r3, #60	; 0x3c
    a9e4:	addeq	r7, r2, #60	; 0x3c
    a9e8:	ldr	r2, [r2, r3]
    a9ec:	str	r1, [r7]
    a9f0:	cmp	r2, #0
    a9f4:	bne	a9d0 <gen_portrangeatom+0x64>
    a9f8:	ldr	r1, [r4, #44]	; 0x2c
    a9fc:	cmp	r0, #0
    aa00:	clz	r1, r1
    aa04:	lsr	r1, r1, #5
    aa08:	str	r1, [r4, #44]	; 0x2c
    aa0c:	ldr	r2, [r0, #44]	; 0x2c
    aa10:	clz	r1, r2
    aa14:	lsr	r1, r1, #5
    aa18:	str	r1, [r0, #44]	; 0x2c
    aa1c:	str	r0, [sp, #4]
    aa20:	beq	aa6c <gen_portrangeatom+0x100>
    aa24:	cmp	r2, #0
    aa28:	mov	r2, #60	; 0x3c
    aa2c:	add	r1, r0, #60	; 0x3c
    aa30:	movweq	r2, #84	; 0x54
    aa34:	addeq	r1, r0, #84	; 0x54
    aa38:	ldr	r2, [r0, r2]
    aa3c:	cmp	r2, #0
    aa40:	beq	aa70 <gen_portrangeatom+0x104>
    aa44:	ldr	r3, [r2, #44]	; 0x2c
    aa48:	add	r1, r2, #84	; 0x54
    aa4c:	cmp	r3, #0
    aa50:	mov	r3, #84	; 0x54
    aa54:	movweq	r3, #60	; 0x3c
    aa58:	addeq	r1, r2, #60	; 0x3c
    aa5c:	ldr	r2, [r2, r3]
    aa60:	cmp	r2, #0
    aa64:	bne	aa44 <gen_portrangeatom+0xd8>
    aa68:	b	aa70 <gen_portrangeatom+0x104>
    aa6c:	add	r1, sp, #4
    aa70:	str	r4, [r1]
    aa74:	ldr	r1, [r0, #44]	; 0x2c
    aa78:	clz	r1, r1
    aa7c:	lsr	r1, r1, #5
    aa80:	str	r1, [r0, #44]	; 0x2c
    aa84:	ldr	r1, [r4, #96]	; 0x60
    aa88:	str	r1, [r0, #96]	; 0x60
    aa8c:	sub	sp, fp, #16
    aa90:	pop	{r4, r5, r6, r7, fp, pc}

0000aa94 <sf_gen_portrangeop6>:
    aa94:	push	{r4, r5, r6, r7, fp, lr}
    aa98:	add	fp, sp, #16
    aa9c:	sub	sp, sp, #16
    aaa0:	mov	r5, r3
    aaa4:	mov	r3, r2
    aaa8:	mov	r6, r1
    aaac:	mov	r7, r0
    aab0:	mov	r0, #3
    aab4:	mov	r1, #6
    aab8:	mov	r2, #16
    aabc:	bl	9ef4 <gen_cmp>
    aac0:	cmp	r5, #4
    aac4:	bhi	ada8 <sf_gen_portrangeop6+0x314>
    aac8:	mov	r4, r0
    aacc:	add	r0, pc, #4
    aad0:	ldr	r1, [r0, r5, lsl #2]
    aad4:	add	pc, r0, r1
    aad8:	.word	0x00000014
    aadc:	.word	0x0000019c
    aae0:	.word	0x000001a4
    aae4:	.word	0x00000014
    aae8:	.word	0x000000cc
    aaec:	mov	r0, #0
    aaf0:	mov	r1, r7
    aaf4:	mov	r2, r6
    aaf8:	bl	adac <gen_portrangeatom6>
    aafc:	mov	r5, r0
    ab00:	mov	r0, #2
    ab04:	mov	r1, r7
    ab08:	mov	r2, r6
    ab0c:	bl	adac <gen_portrangeatom6>
    ab10:	ldr	r1, [r5, #44]	; 0x2c
    ab14:	cmp	r5, #0
    ab18:	clz	r1, r1
    ab1c:	lsr	r1, r1, #5
    ab20:	str	r1, [r5, #44]	; 0x2c
    ab24:	beq	ab60 <sf_gen_portrangeop6+0xcc>
    ab28:	ldr	r2, [r0, #96]	; 0x60
    ab2c:	mov	r3, r5
    ab30:	b	ab38 <sf_gen_portrangeop6+0xa4>
    ab34:	ldr	r1, [r3, #44]	; 0x2c
    ab38:	cmp	r1, #0
    ab3c:	mov	r1, #84	; 0x54
    ab40:	add	r7, r3, #84	; 0x54
    ab44:	movweq	r1, #60	; 0x3c
    ab48:	addeq	r7, r3, #60	; 0x3c
    ab4c:	ldr	r3, [r3, r1]
    ab50:	str	r2, [r7]
    ab54:	cmp	r3, #0
    ab58:	bne	ab34 <sf_gen_portrangeop6+0xa0>
    ab5c:	ldr	r1, [r5, #44]	; 0x2c
    ab60:	clz	r1, r1
    ab64:	cmp	r0, #0
    ab68:	lsr	r1, r1, #5
    ab6c:	str	r1, [r5, #44]	; 0x2c
    ab70:	str	r0, [sp, #4]
    ab74:	beq	ac98 <sf_gen_portrangeop6+0x204>
    ab78:	mov	r2, r0
    ab7c:	ldr	r3, [r2, #44]	; 0x2c
    ab80:	add	r1, r2, #84	; 0x54
    ab84:	cmp	r3, #0
    ab88:	mov	r3, #84	; 0x54
    ab8c:	movweq	r3, #60	; 0x3c
    ab90:	addeq	r1, r2, #60	; 0x3c
    ab94:	ldr	r2, [r2, r3]
    ab98:	cmp	r2, #0
    ab9c:	bne	ab7c <sf_gen_portrangeop6+0xe8>
    aba0:	b	ac9c <sf_gen_portrangeop6+0x208>
    aba4:	mov	r0, #0
    aba8:	mov	r1, r7
    abac:	mov	r2, r6
    abb0:	bl	adac <gen_portrangeatom6>
    abb4:	mov	r5, r0
    abb8:	mov	r0, #2
    abbc:	mov	r1, r7
    abc0:	mov	r2, r6
    abc4:	bl	adac <gen_portrangeatom6>
    abc8:	cmp	r5, #0
    abcc:	beq	ac00 <sf_gen_portrangeop6+0x16c>
    abd0:	ldr	r1, [r0, #96]	; 0x60
    abd4:	mov	r2, r5
    abd8:	ldr	r3, [r2, #44]	; 0x2c
    abdc:	add	r7, r2, #84	; 0x54
    abe0:	cmp	r3, #0
    abe4:	mov	r3, #84	; 0x54
    abe8:	movweq	r3, #60	; 0x3c
    abec:	addeq	r7, r2, #60	; 0x3c
    abf0:	ldr	r2, [r2, r3]
    abf4:	str	r1, [r7]
    abf8:	cmp	r2, #0
    abfc:	bne	abd8 <sf_gen_portrangeop6+0x144>
    ac00:	ldr	r1, [r5, #44]	; 0x2c
    ac04:	cmp	r0, #0
    ac08:	clz	r1, r1
    ac0c:	lsr	r1, r1, #5
    ac10:	str	r1, [r5, #44]	; 0x2c
    ac14:	ldr	r2, [r0, #44]	; 0x2c
    ac18:	clz	r1, r2
    ac1c:	lsr	r1, r1, #5
    ac20:	str	r1, [r0, #44]	; 0x2c
    ac24:	str	r0, [sp, #12]
    ac28:	beq	acb4 <sf_gen_portrangeop6+0x220>
    ac2c:	cmp	r2, #0
    ac30:	mov	r2, #60	; 0x3c
    ac34:	add	r1, r0, #60	; 0x3c
    ac38:	movweq	r2, #84	; 0x54
    ac3c:	addeq	r1, r0, #84	; 0x54
    ac40:	ldr	r2, [r0, r2]
    ac44:	cmp	r2, #0
    ac48:	beq	acb8 <sf_gen_portrangeop6+0x224>
    ac4c:	ldr	r3, [r2, #44]	; 0x2c
    ac50:	add	r1, r2, #84	; 0x54
    ac54:	cmp	r3, #0
    ac58:	mov	r3, #84	; 0x54
    ac5c:	movweq	r3, #60	; 0x3c
    ac60:	addeq	r1, r2, #60	; 0x3c
    ac64:	ldr	r2, [r2, r3]
    ac68:	cmp	r2, #0
    ac6c:	bne	ac4c <sf_gen_portrangeop6+0x1b8>
    ac70:	b	acb8 <sf_gen_portrangeop6+0x224>
    ac74:	mov	r0, #0
    ac78:	b	ac80 <sf_gen_portrangeop6+0x1ec>
    ac7c:	mov	r0, #2
    ac80:	mov	r1, r7
    ac84:	mov	r2, r6
    ac88:	bl	adac <gen_portrangeatom6>
    ac8c:	cmp	r4, #0
    ac90:	bne	acdc <sf_gen_portrangeop6+0x248>
    ac94:	b	ad0c <sf_gen_portrangeop6+0x278>
    ac98:	add	r1, sp, #4
    ac9c:	str	r5, [r1]
    aca0:	ldr	r1, [r5, #96]	; 0x60
    aca4:	str	r1, [r0, #96]	; 0x60
    aca8:	cmp	r4, #0
    acac:	bne	acdc <sf_gen_portrangeop6+0x248>
    acb0:	b	ad0c <sf_gen_portrangeop6+0x278>
    acb4:	add	r1, sp, #12
    acb8:	str	r5, [r1]
    acbc:	ldr	r1, [r0, #44]	; 0x2c
    acc0:	clz	r1, r1
    acc4:	lsr	r1, r1, #5
    acc8:	str	r1, [r0, #44]	; 0x2c
    accc:	ldr	r1, [r5, #96]	; 0x60
    acd0:	str	r1, [r0, #96]	; 0x60
    acd4:	cmp	r4, #0
    acd8:	beq	ad0c <sf_gen_portrangeop6+0x278>
    acdc:	ldr	r1, [r0, #96]	; 0x60
    ace0:	mov	r2, r4
    ace4:	ldr	r3, [r2, #44]	; 0x2c
    ace8:	add	r7, r2, #84	; 0x54
    acec:	cmp	r3, #0
    acf0:	mov	r3, #84	; 0x54
    acf4:	movweq	r3, #60	; 0x3c
    acf8:	addeq	r7, r2, #60	; 0x3c
    acfc:	ldr	r2, [r2, r3]
    ad00:	str	r1, [r7]
    ad04:	cmp	r2, #0
    ad08:	bne	ace4 <sf_gen_portrangeop6+0x250>
    ad0c:	ldr	r1, [r4, #44]	; 0x2c
    ad10:	cmp	r0, #0
    ad14:	clz	r1, r1
    ad18:	lsr	r1, r1, #5
    ad1c:	str	r1, [r4, #44]	; 0x2c
    ad20:	ldr	r2, [r0, #44]	; 0x2c
    ad24:	clz	r1, r2
    ad28:	lsr	r1, r1, #5
    ad2c:	str	r1, [r0, #44]	; 0x2c
    ad30:	str	r0, [sp, #8]
    ad34:	beq	ad80 <sf_gen_portrangeop6+0x2ec>
    ad38:	cmp	r2, #0
    ad3c:	mov	r2, #60	; 0x3c
    ad40:	add	r1, r0, #60	; 0x3c
    ad44:	movweq	r2, #84	; 0x54
    ad48:	addeq	r1, r0, #84	; 0x54
    ad4c:	ldr	r2, [r0, r2]
    ad50:	cmp	r2, #0
    ad54:	beq	ad84 <sf_gen_portrangeop6+0x2f0>
    ad58:	ldr	r3, [r2, #44]	; 0x2c
    ad5c:	add	r1, r2, #84	; 0x54
    ad60:	cmp	r3, #0
    ad64:	mov	r3, #84	; 0x54
    ad68:	movweq	r3, #60	; 0x3c
    ad6c:	addeq	r1, r2, #60	; 0x3c
    ad70:	ldr	r2, [r2, r3]
    ad74:	cmp	r2, #0
    ad78:	bne	ad58 <sf_gen_portrangeop6+0x2c4>
    ad7c:	b	ad84 <sf_gen_portrangeop6+0x2f0>
    ad80:	add	r1, sp, #8
    ad84:	str	r4, [r1]
    ad88:	ldr	r1, [r0, #44]	; 0x2c
    ad8c:	clz	r1, r1
    ad90:	lsr	r1, r1, #5
    ad94:	str	r1, [r0, #44]	; 0x2c
    ad98:	ldr	r1, [r4, #96]	; 0x60
    ad9c:	str	r1, [r0, #96]	; 0x60
    ada0:	sub	sp, fp, #16
    ada4:	pop	{r4, r5, r6, r7, fp, pc}
    ada8:	bl	100c <abort@plt>

0000adac <gen_portrangeatom6>:
    adac:	push	{r4, r5, r6, r7, fp, lr}
    adb0:	add	fp, sp, #16
    adb4:	sub	sp, sp, #8
    adb8:	mov	r7, r0
    adbc:	cmp	r1, r2
    adc0:	mov	r3, r1
    adc4:	mov	r6, r1
    adc8:	mov	r5, r2
    adcc:	mov	r0, #6
    add0:	movgt	r3, r2
    add4:	mov	r1, r7
    add8:	mov	r2, #8
    addc:	bl	16a50 <gen_cmp_ge>
    ade0:	cmp	r6, r5
    ade4:	mov	r4, r0
    ade8:	mov	r0, #6
    adec:	mov	r1, r7
    adf0:	mov	r2, #8
    adf4:	movgt	r5, r6
    adf8:	mov	r3, r5
    adfc:	bl	1b57c <gen_cmp_le>
    ae00:	cmp	r4, #0
    ae04:	beq	ae38 <gen_portrangeatom6+0x8c>
    ae08:	ldr	r1, [r0, #96]	; 0x60
    ae0c:	mov	r2, r4
    ae10:	ldr	r3, [r2, #44]	; 0x2c
    ae14:	add	r7, r2, #84	; 0x54
    ae18:	cmp	r3, #0
    ae1c:	mov	r3, #84	; 0x54
    ae20:	movweq	r3, #60	; 0x3c
    ae24:	addeq	r7, r2, #60	; 0x3c
    ae28:	ldr	r2, [r2, r3]
    ae2c:	str	r1, [r7]
    ae30:	cmp	r2, #0
    ae34:	bne	ae10 <gen_portrangeatom6+0x64>
    ae38:	ldr	r1, [r4, #44]	; 0x2c
    ae3c:	cmp	r0, #0
    ae40:	clz	r1, r1
    ae44:	lsr	r1, r1, #5
    ae48:	str	r1, [r4, #44]	; 0x2c
    ae4c:	ldr	r2, [r0, #44]	; 0x2c
    ae50:	clz	r1, r2
    ae54:	lsr	r1, r1, #5
    ae58:	str	r1, [r0, #44]	; 0x2c
    ae5c:	str	r0, [sp, #4]
    ae60:	beq	aeac <gen_portrangeatom6+0x100>
    ae64:	cmp	r2, #0
    ae68:	mov	r2, #60	; 0x3c
    ae6c:	add	r1, r0, #60	; 0x3c
    ae70:	movweq	r2, #84	; 0x54
    ae74:	addeq	r1, r0, #84	; 0x54
    ae78:	ldr	r2, [r0, r2]
    ae7c:	cmp	r2, #0
    ae80:	beq	aeb0 <gen_portrangeatom6+0x104>
    ae84:	ldr	r3, [r2, #44]	; 0x2c
    ae88:	add	r1, r2, #84	; 0x54
    ae8c:	cmp	r3, #0
    ae90:	mov	r3, #84	; 0x54
    ae94:	movweq	r3, #60	; 0x3c
    ae98:	addeq	r1, r2, #60	; 0x3c
    ae9c:	ldr	r2, [r2, r3]
    aea0:	cmp	r2, #0
    aea4:	bne	ae84 <gen_portrangeatom6+0xd8>
    aea8:	b	aeb0 <gen_portrangeatom6+0x104>
    aeac:	add	r1, sp, #4
    aeb0:	str	r4, [r1]
    aeb4:	ldr	r1, [r0, #44]	; 0x2c
    aeb8:	clz	r1, r1
    aebc:	lsr	r1, r1, #5
    aec0:	str	r1, [r0, #44]	; 0x2c
    aec4:	ldr	r1, [r4, #96]	; 0x60
    aec8:	str	r1, [r0, #96]	; 0x60
    aecc:	sub	sp, fp, #16
    aed0:	pop	{r4, r5, r6, r7, fp, pc}

0000aed4 <sf_gen_scode>:
    aed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aed8:	add	fp, sp, #28
    aedc:	sub	sp, sp, #44	; 0x2c
    aee0:	uxtb	r8, r1
    aee4:	ubfx	r4, r1, #16, #8
    aee8:	ubfx	r5, r1, #8, #8
    aeec:	cmp	r8, #7
    aef0:	bhi	b910 <sf_gen_scode+0xa3c>
    aef4:	mov	r7, r0
    aef8:	lsr	r0, r1, #8
    aefc:	add	r1, pc, #4
    af00:	ldr	r2, [r1, r8, lsl #2]
    af04:	add	pc, r1, r2
    af08:	.word	0x00000020
    af0c:	.word	0x00000020
    af10:	.word	0x00000184
    af14:	.word	0x000001d4
    af18:	.word	0x00000a14
    af1c:	.word	0x000002e8
    af20:	.word	0x00000244
    af24:	.word	0x00000274
    af28:	uxtb	r0, r0
    af2c:	cmp	r0, #12
    af30:	beq	b224 <sf_gen_scode+0x350>
    af34:	cmp	r0, #1
    af38:	bne	b250 <sf_gen_scode+0x37c>
    af3c:	ldr	r1, [pc, #2872]	; ba7c <sf_gen_scode+0xba8>
    af40:	add	r1, pc, r1
    af44:	ldr	r0, [r1, #36]	; 0x24
    af48:	cmp	r0, #104	; 0x68
    af4c:	ble	b72c <sf_gen_scode+0x858>
    af50:	sub	r2, r0, #105	; 0x69
    af54:	mov	r6, r4
    af58:	cmp	r2, #58	; 0x3a
    af5c:	bhi	b884 <sf_gen_scode+0x9b0>
    af60:	add	r0, pc, #4
    af64:	ldr	r2, [r0, r2, lsl #2]
    af68:	add	pc, r0, r2
    af6c:	.word	0x000000ec
    af70:	.word	0x00000ab4
    af74:	.word	0x00000ab4
    af78:	.word	0x00000ab4
    af7c:	.word	0x00000ab4
    af80:	.word	0x00000ab4
    af84:	.word	0x00000ab4
    af88:	.word	0x00000ab4
    af8c:	.word	0x00000ab4
    af90:	.word	0x00000ab4
    af94:	.word	0x00000ab4
    af98:	.word	0x00000ab4
    af9c:	.word	0x00000ab4
    afa0:	.word	0x00000ab4
    afa4:	.word	0x000000ec
    afa8:	.word	0x00000ab4
    afac:	.word	0x00000ab4
    afb0:	.word	0x00000924
    afb4:	.word	0x00000818
    afb8:	.word	0x00000ab4
    afbc:	.word	0x00000ab4
    afc0:	.word	0x00000ab4
    afc4:	.word	0x000000ec
    afc8:	.word	0x00000ab4
    afcc:	.word	0x00000ab4
    afd0:	.word	0x00000ab4
    afd4:	.word	0x00000ab4
    afd8:	.word	0x00000ab4
    afdc:	.word	0x00000ab4
    afe0:	.word	0x00000ab4
    afe4:	.word	0x00000ab4
    afe8:	.word	0x00000ab4
    afec:	.word	0x00000ab4
    aff0:	.word	0x00000ab4
    aff4:	.word	0x00000ab4
    aff8:	.word	0x00000ab4
    affc:	.word	0x00000ab4
    b000:	.word	0x00000ab4
    b004:	.word	0x00000ab4
    b008:	.word	0x00000ab4
    b00c:	.word	0x00000ab4
    b010:	.word	0x00000ab4
    b014:	.word	0x00000ab4
    b018:	.word	0x00000ab4
    b01c:	.word	0x00000ab4
    b020:	.word	0x00000ab4
    b024:	.word	0x00000ab4
    b028:	.word	0x00000ab4
    b02c:	.word	0x00000ab4
    b030:	.word	0x00000ab4
    b034:	.word	0x00000ab4
    b038:	.word	0x00000ab4
    b03c:	.word	0x00000ab4
    b040:	.word	0x00000ab4
    b044:	.word	0x00000ab4
    b048:	.word	0x00000ab4
    b04c:	.word	0x00000ab4
    b050:	.word	0x00000ab4
    b054:	.word	0x000000ec
    b058:	mov	r0, r7
    b05c:	bl	1f3cc <pcap_ether_hostton>
    b060:	cmp	r0, #0
    b064:	beq	ba2c <sf_gen_scode+0xb58>
    b068:	mov	r1, r6
    b06c:	mov	r4, r0
    b070:	bl	c6ec <gen_wlanhostop>
    b074:	mov	r6, r0
    b078:	mov	r0, r4
    b07c:	bl	ea4 <free@plt>
    b080:	mov	r0, r6
    b084:	sub	sp, fp, #28
    b088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b08c:	mov	r0, r7
    b090:	bl	1ee1c <pcap_nametonetaddr>
    b094:	cmp	r0, #0
    b098:	beq	b93c <sf_gen_scode+0xa68>
    b09c:	movw	r3, #65534	; 0xfffe
    b0a0:	sub	r2, r0, #1
    b0a4:	mvn	r1, #0
    b0a8:	movt	r3, #255	; 0xff
    b0ac:	cmp	r2, r3
    b0b0:	bhi	b0d4 <sf_gen_scode+0x200>
    b0b4:	mvn	r2, #0
    b0b8:	mvn	r3, #-16777216	; 0xff000000
    b0bc:	mvn	r1, #0
    b0c0:	add	r7, r2, r0, lsl #8
    b0c4:	lsl	r1, r1, #8
    b0c8:	lsl	r0, r0, #8
    b0cc:	cmp	r7, r3
    b0d0:	bcc	b0c0 <sf_gen_scode+0x1ec>
    b0d4:	str	r8, [sp]
    b0d8:	b	b234 <sf_gen_scode+0x360>
    b0dc:	mvn	r1, #4
    b0e0:	mov	r5, r4
    b0e4:	uxtb	r4, r0
    b0e8:	uxtab	r1, r1, r0
    b0ec:	cmp	r1, #3
    b0f0:	bcc	b0fc <sf_gen_scode+0x228>
    b0f4:	cmp	r4, #0
    b0f8:	bne	b94c <sf_gen_scode+0xa78>
    b0fc:	sub	r1, fp, #32
    b100:	add	r2, sp, #20
    b104:	mov	r0, r7
    b108:	bl	1ee38 <pcap_nametoport>
    b10c:	cmp	r0, #0
    b110:	beq	b958 <sf_gen_scode+0xa84>
    b114:	cmp	r4, #5
    b118:	beq	b528 <sf_gen_scode+0x654>
    b11c:	cmp	r4, #6
    b120:	beq	b508 <sf_gen_scode+0x634>
    b124:	cmp	r4, #7
    b128:	bne	b56c <sf_gen_scode+0x698>
    b12c:	ldr	r0, [sp, #20]
    b130:	cmp	r0, #132	; 0x84
    b134:	beq	b9c0 <sf_gen_scode+0xaec>
    b138:	cmp	r0, #6
    b13c:	beq	b9d0 <sf_gen_scode+0xafc>
    b140:	mov	r4, r5
    b144:	mov	r1, #17
    b148:	b	b544 <sf_gen_scode+0x670>
    b14c:	mov	r0, r7
    b150:	mov	r1, r5
    b154:	bl	f8ec <lookup_proto>
    b158:	cmp	r0, #0
    b15c:	str	r0, [sp, #20]
    b160:	blt	b92c <sf_gen_scode+0xa58>
    b164:	mov	r1, r5
    b168:	bl	fa4c <gen_protochain>
    b16c:	mov	r6, r0
    b170:	mov	r0, r6
    b174:	sub	sp, fp, #28
    b178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b17c:	mvn	r1, #4
    b180:	mov	r5, r4
    b184:	uxtb	r4, r0
    b188:	uxtab	r1, r1, r0
    b18c:	cmp	r1, #3
    b190:	bcc	b19c <sf_gen_scode+0x2c8>
    b194:	cmp	r4, #0
    b198:	bne	b968 <sf_gen_scode+0xa94>
    b19c:	sub	r1, fp, #32
    b1a0:	add	r2, sp, #16
    b1a4:	add	r3, sp, #20
    b1a8:	mov	r0, r7
    b1ac:	bl	1eee0 <pcap_nametoportrange>
    b1b0:	cmp	r0, #0
    b1b4:	beq	b974 <sf_gen_scode+0xaa0>
    b1b8:	cmp	r4, #5
    b1bc:	beq	b628 <sf_gen_scode+0x754>
    b1c0:	cmp	r4, #6
    b1c4:	beq	b54c <sf_gen_scode+0x678>
    b1c8:	cmp	r4, #7
    b1cc:	bne	b64c <sf_gen_scode+0x778>
    b1d0:	ldr	r0, [sp, #20]
    b1d4:	cmp	r0, #132	; 0x84
    b1d8:	beq	b9f0 <sf_gen_scode+0xb1c>
    b1dc:	cmp	r0, #6
    b1e0:	beq	ba00 <sf_gen_scode+0xb2c>
    b1e4:	mov	r4, r5
    b1e8:	mov	r2, #17
    b1ec:	b	b644 <sf_gen_scode+0x770>
    b1f0:	mov	r0, r7
    b1f4:	mov	r1, r5
    b1f8:	bl	f8ec <lookup_proto>
    b1fc:	cmp	r0, #0
    b200:	str	r0, [sp, #20]
    b204:	blt	b92c <sf_gen_scode+0xa58>
    b208:	mov	r1, r5
    b20c:	mov	r2, r4
    b210:	bl	64d8 <gen_proto>
    b214:	mov	r6, r0
    b218:	mov	r0, r6
    b21c:	sub	sp, fp, #28
    b220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b224:	mov	r0, r7
    b228:	bl	1f4a8 <__pcap_nametodnaddr>
    b22c:	str	r8, [sp]
    b230:	mov	r1, #0
    b234:	mov	r2, r5
    b238:	mov	r3, r4
    b23c:	bl	bae4 <gen_host>
    b240:	mov	r6, r0
    b244:	mov	r0, r6
    b248:	sub	sp, fp, #28
    b24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b250:	mvn	r0, #0
    b254:	str	r0, [sp, #36]	; 0x24
    b258:	str	r0, [sp, #32]
    b25c:	str	r0, [sp, #28]
    b260:	str	r0, [sp, #24]
    b264:	mov	r0, r7
    b268:	bl	1edbc <pcap_nametoaddrinfo>
    b26c:	cmp	r0, #0
    b270:	beq	b984 <sf_gen_scode+0xab0>
    b274:	str	r7, [sp, #8]
    b278:	mov	sl, r5
    b27c:	mov	r6, #0
    b280:	ldr	r1, [pc, #2044]	; ba84 <sf_gen_scode+0xbb0>
    b284:	str	r5, [sp, #4]
    b288:	str	r0, [sp, #12]
    b28c:	add	r1, pc, r1
    b290:	str	r0, [r1, #24]
    b294:	ldr	r1, [r1, #40]	; 0x28
    b298:	mvn	r1, r1
    b29c:	orrs	r1, r5, r1
    b2a0:	movweq	r5, #17
    b2a4:	movweq	sl, #2
    b2a8:	cmp	r5, #2
    b2ac:	bne	b3bc <sf_gen_scode+0x4e8>
    b2b0:	mov	r5, r0
    b2b4:	sub	r9, fp, #32
    b2b8:	ldr	r0, [r5, #4]
    b2bc:	cmp	r0, #2
    b2c0:	bne	b398 <sf_gen_scode+0x4c4>
    b2c4:	cmp	sl, #17
    b2c8:	beq	b398 <sf_gen_scode+0x4c4>
    b2cc:	ldr	r0, [r5, #20]
    b2d0:	mvn	r1, #0
    b2d4:	mov	r2, sl
    b2d8:	mov	r3, r4
    b2dc:	ldr	r0, [r0, #4]
    b2e0:	str	r8, [sp]
    b2e4:	rev	r0, r0
    b2e8:	bl	bae4 <gen_host>
    b2ec:	cmp	r6, #0
    b2f0:	beq	b3a8 <sf_gen_scode+0x4d4>
    b2f4:	ldr	r1, [r6, #44]	; 0x2c
    b2f8:	mov	r7, r4
    b2fc:	mov	r2, r6
    b300:	clz	r1, r1
    b304:	lsr	r3, r1, #5
    b308:	str	r3, [r6, #44]	; 0x2c
    b30c:	ldr	r1, [r0, #96]	; 0x60
    b310:	b	b318 <sf_gen_scode+0x444>
    b314:	ldr	r3, [r2, #44]	; 0x2c
    b318:	cmp	r3, #0
    b31c:	mov	r3, #84	; 0x54
    b320:	add	r4, r2, #84	; 0x54
    b324:	movweq	r3, #60	; 0x3c
    b328:	addeq	r4, r2, #60	; 0x3c
    b32c:	ldr	r2, [r2, r3]
    b330:	str	r1, [r4]
    b334:	cmp	r2, #0
    b338:	bne	b314 <sf_gen_scode+0x440>
    b33c:	ldr	r1, [r6, #44]	; 0x2c
    b340:	cmp	r0, #0
    b344:	clz	r1, r1
    b348:	lsr	r1, r1, #5
    b34c:	str	r1, [r6, #44]	; 0x2c
    b350:	mov	r1, r9
    b354:	str	r0, [fp, #-32]	; 0xffffffe0
    b358:	beq	b384 <sf_gen_scode+0x4b0>
    b35c:	mov	r2, r0
    b360:	ldr	r3, [r2, #44]	; 0x2c
    b364:	add	r1, r2, #84	; 0x54
    b368:	cmp	r3, #0
    b36c:	mov	r3, #84	; 0x54
    b370:	movweq	r3, #60	; 0x3c
    b374:	addeq	r1, r2, #60	; 0x3c
    b378:	ldr	r2, [r2, r3]
    b37c:	cmp	r2, #0
    b380:	bne	b360 <sf_gen_scode+0x48c>
    b384:	str	r6, [r1]
    b388:	mov	r4, r7
    b38c:	ldr	r1, [r6, #96]	; 0x60
    b390:	mov	r6, r0
    b394:	str	r1, [r0, #96]	; 0x60
    b398:	ldr	r5, [r5, #28]
    b39c:	cmp	r5, #0
    b3a0:	bne	b2b8 <sf_gen_scode+0x3e4>
    b3a4:	b	b4dc <sf_gen_scode+0x608>
    b3a8:	mov	r6, r0
    b3ac:	ldr	r5, [r5, #28]
    b3b0:	cmp	r5, #0
    b3b4:	bne	b2b8 <sf_gen_scode+0x3e4>
    b3b8:	b	b4dc <sf_gen_scode+0x608>
    b3bc:	mov	r9, r0
    b3c0:	ldr	r0, [r9, #4]
    b3c4:	cmp	r0, #10
    b3c8:	beq	b408 <sf_gen_scode+0x534>
    b3cc:	cmp	r0, #2
    b3d0:	bne	b4d0 <sf_gen_scode+0x5fc>
    b3d4:	cmp	sl, #17
    b3d8:	beq	b4d0 <sf_gen_scode+0x5fc>
    b3dc:	ldr	r0, [r9, #20]
    b3e0:	mvn	r1, #0
    b3e4:	mov	r2, sl
    b3e8:	mov	r3, r4
    b3ec:	ldr	r0, [r0, #4]
    b3f0:	str	r8, [sp]
    b3f4:	rev	r0, r0
    b3f8:	bl	bae4 <gen_host>
    b3fc:	cmp	r6, #0
    b400:	bne	b42c <sf_gen_scode+0x558>
    b404:	b	b4cc <sf_gen_scode+0x5f8>
    b408:	ldr	r0, [r9, #20]
    b40c:	add	r1, sp, #24
    b410:	mov	r2, r5
    b414:	mov	r3, r4
    b418:	str	r8, [sp]
    b41c:	add	r0, r0, #8
    b420:	bl	eaa8 <gen_host6>
    b424:	cmp	r6, #0
    b428:	beq	b4cc <sf_gen_scode+0x5f8>
    b42c:	ldr	r1, [r6, #44]	; 0x2c
    b430:	mov	r7, r4
    b434:	mov	r2, r6
    b438:	clz	r1, r1
    b43c:	lsr	r3, r1, #5
    b440:	str	r3, [r6, #44]	; 0x2c
    b444:	ldr	r1, [r0, #96]	; 0x60
    b448:	b	b450 <sf_gen_scode+0x57c>
    b44c:	ldr	r3, [r2, #44]	; 0x2c
    b450:	cmp	r3, #0
    b454:	mov	r3, #84	; 0x54
    b458:	add	r4, r2, #84	; 0x54
    b45c:	movweq	r3, #60	; 0x3c
    b460:	addeq	r4, r2, #60	; 0x3c
    b464:	ldr	r2, [r2, r3]
    b468:	str	r1, [r4]
    b46c:	cmp	r2, #0
    b470:	bne	b44c <sf_gen_scode+0x578>
    b474:	ldr	r1, [r6, #44]	; 0x2c
    b478:	cmp	r0, #0
    b47c:	mov	r4, r7
    b480:	clz	r1, r1
    b484:	lsr	r1, r1, #5
    b488:	str	r1, [r6, #44]	; 0x2c
    b48c:	sub	r1, fp, #32
    b490:	str	r0, [fp, #-32]	; 0xffffffe0
    b494:	beq	b4c0 <sf_gen_scode+0x5ec>
    b498:	mov	r2, r0
    b49c:	ldr	r3, [r2, #44]	; 0x2c
    b4a0:	add	r1, r2, #84	; 0x54
    b4a4:	cmp	r3, #0
    b4a8:	mov	r3, #84	; 0x54
    b4ac:	movweq	r3, #60	; 0x3c
    b4b0:	addeq	r1, r2, #60	; 0x3c
    b4b4:	ldr	r2, [r2, r3]
    b4b8:	cmp	r2, #0
    b4bc:	bne	b49c <sf_gen_scode+0x5c8>
    b4c0:	str	r6, [r1]
    b4c4:	ldr	r1, [r6, #96]	; 0x60
    b4c8:	str	r1, [r0, #96]	; 0x60
    b4cc:	mov	r6, r0
    b4d0:	ldr	r9, [r9, #28]
    b4d4:	cmp	r9, #0
    b4d8:	bne	b3c0 <sf_gen_scode+0x4ec>
    b4dc:	ldr	r1, [pc, #1444]	; ba88 <sf_gen_scode+0xbb4>
    b4e0:	mov	r0, #0
    b4e4:	add	r1, pc, r1
    b4e8:	str	r0, [r1, #24]
    b4ec:	ldr	r0, [sp, #12]
    b4f0:	bl	fdc <freeaddrinfo@plt>
    b4f4:	cmp	r6, #0
    b4f8:	beq	b994 <sf_gen_scode+0xac0>
    b4fc:	mov	r0, r6
    b500:	sub	sp, fp, #28
    b504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b508:	ldr	r0, [sp, #20]
    b50c:	cmp	r0, #132	; 0x84
    b510:	beq	b9c0 <sf_gen_scode+0xaec>
    b514:	cmp	r0, #17
    b518:	beq	b9e0 <sf_gen_scode+0xb0c>
    b51c:	mov	r4, r5
    b520:	mov	r1, #6
    b524:	b	b544 <sf_gen_scode+0x670>
    b528:	ldr	r0, [sp, #20]
    b52c:	cmp	r0, #6
    b530:	beq	b9d0 <sf_gen_scode+0xafc>
    b534:	cmp	r0, #17
    b538:	beq	b9e0 <sf_gen_scode+0xb0c>
    b53c:	mov	r4, r5
    b540:	mov	r1, #132	; 0x84
    b544:	str	r1, [sp, #20]
    b548:	b	b574 <sf_gen_scode+0x6a0>
    b54c:	ldr	r0, [sp, #20]
    b550:	cmp	r0, #132	; 0x84
    b554:	beq	b9f0 <sf_gen_scode+0xb1c>
    b558:	cmp	r0, #17
    b55c:	beq	ba10 <sf_gen_scode+0xb3c>
    b560:	mov	r4, r5
    b564:	mov	r2, #6
    b568:	b	b644 <sf_gen_scode+0x770>
    b56c:	ldr	r1, [sp, #20]
    b570:	mov	r4, r5
    b574:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b578:	mov	r2, r4
    b57c:	bl	ed94 <gen_port>
    b580:	mov	r6, r0
    b584:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b588:	ldr	r1, [sp, #20]
    b58c:	mov	r2, r4
    b590:	bl	f060 <gen_port6>
    b594:	ldr	r1, [r0, #44]	; 0x2c
    b598:	cmp	r0, #0
    b59c:	clz	r1, r1
    b5a0:	lsr	r1, r1, #5
    b5a4:	str	r1, [r0, #44]	; 0x2c
    b5a8:	beq	b5e4 <sf_gen_scode+0x710>
    b5ac:	ldr	r2, [r6, #96]	; 0x60
    b5b0:	mov	r3, r0
    b5b4:	b	b5bc <sf_gen_scode+0x6e8>
    b5b8:	ldr	r1, [r3, #44]	; 0x2c
    b5bc:	cmp	r1, #0
    b5c0:	mov	r1, #84	; 0x54
    b5c4:	add	r7, r3, #84	; 0x54
    b5c8:	movweq	r1, #60	; 0x3c
    b5cc:	addeq	r7, r3, #60	; 0x3c
    b5d0:	ldr	r3, [r3, r1]
    b5d4:	str	r2, [r7]
    b5d8:	cmp	r3, #0
    b5dc:	bne	b5b8 <sf_gen_scode+0x6e4>
    b5e0:	ldr	r1, [r0, #44]	; 0x2c
    b5e4:	clz	r1, r1
    b5e8:	cmp	r6, #0
    b5ec:	lsr	r1, r1, #5
    b5f0:	str	r1, [r0, #44]	; 0x2c
    b5f4:	str	r6, [sp, #24]
    b5f8:	beq	b710 <sf_gen_scode+0x83c>
    b5fc:	mov	r2, r6
    b600:	ldr	r3, [r2, #44]	; 0x2c
    b604:	add	r1, r2, #84	; 0x54
    b608:	cmp	r3, #0
    b60c:	mov	r3, #84	; 0x54
    b610:	movweq	r3, #60	; 0x3c
    b614:	addeq	r1, r2, #60	; 0x3c
    b618:	ldr	r2, [r2, r3]
    b61c:	cmp	r2, #0
    b620:	bne	b600 <sf_gen_scode+0x72c>
    b624:	b	b714 <sf_gen_scode+0x840>
    b628:	ldr	r0, [sp, #20]
    b62c:	cmp	r0, #6
    b630:	beq	ba00 <sf_gen_scode+0xb2c>
    b634:	cmp	r0, #17
    b638:	beq	ba10 <sf_gen_scode+0xb3c>
    b63c:	mov	r4, r5
    b640:	mov	r2, #132	; 0x84
    b644:	str	r2, [sp, #20]
    b648:	b	b654 <sf_gen_scode+0x780>
    b64c:	ldr	r2, [sp, #20]
    b650:	mov	r4, r5
    b654:	ldr	r1, [sp, #16]
    b658:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b65c:	mov	r3, r4
    b660:	bl	f32c <gen_portrange>
    b664:	mov	r6, r0
    b668:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b66c:	ldr	r1, [sp, #16]
    b670:	ldr	r2, [sp, #20]
    b674:	mov	r3, r4
    b678:	bl	f60c <gen_portrange6>
    b67c:	ldr	r1, [r0, #44]	; 0x2c
    b680:	cmp	r0, #0
    b684:	clz	r1, r1
    b688:	lsr	r1, r1, #5
    b68c:	str	r1, [r0, #44]	; 0x2c
    b690:	beq	b6cc <sf_gen_scode+0x7f8>
    b694:	ldr	r2, [r6, #96]	; 0x60
    b698:	mov	r3, r0
    b69c:	b	b6a4 <sf_gen_scode+0x7d0>
    b6a0:	ldr	r1, [r3, #44]	; 0x2c
    b6a4:	cmp	r1, #0
    b6a8:	mov	r1, #84	; 0x54
    b6ac:	add	r7, r3, #84	; 0x54
    b6b0:	movweq	r1, #60	; 0x3c
    b6b4:	addeq	r7, r3, #60	; 0x3c
    b6b8:	ldr	r3, [r3, r1]
    b6bc:	str	r2, [r7]
    b6c0:	cmp	r3, #0
    b6c4:	bne	b6a0 <sf_gen_scode+0x7cc>
    b6c8:	ldr	r1, [r0, #44]	; 0x2c
    b6cc:	clz	r1, r1
    b6d0:	cmp	r6, #0
    b6d4:	lsr	r1, r1, #5
    b6d8:	str	r1, [r0, #44]	; 0x2c
    b6dc:	str	r6, [sp, #24]
    b6e0:	beq	b710 <sf_gen_scode+0x83c>
    b6e4:	mov	r2, r6
    b6e8:	ldr	r3, [r2, #44]	; 0x2c
    b6ec:	add	r1, r2, #84	; 0x54
    b6f0:	cmp	r3, #0
    b6f4:	mov	r3, #84	; 0x54
    b6f8:	movweq	r3, #60	; 0x3c
    b6fc:	addeq	r1, r2, #60	; 0x3c
    b700:	ldr	r2, [r2, r3]
    b704:	cmp	r2, #0
    b708:	bne	b6e8 <sf_gen_scode+0x814>
    b70c:	b	b714 <sf_gen_scode+0x840>
    b710:	add	r1, sp, #24
    b714:	str	r0, [r1]
    b718:	ldr	r0, [r0, #96]	; 0x60
    b71c:	str	r0, [r6, #96]	; 0x60
    b720:	mov	r0, r6
    b724:	sub	sp, fp, #28
    b728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b72c:	cmp	r0, #1
    b730:	beq	b760 <sf_gen_scode+0x88c>
    b734:	cmp	r0, #6
    b738:	bne	b8b0 <sf_gen_scode+0x9dc>
    b73c:	mov	r0, r7
    b740:	mov	r5, r4
    b744:	bl	1f3cc <pcap_ether_hostton>
    b748:	cmp	r0, #0
    b74c:	beq	ba4c <sf_gen_scode+0xb78>
    b750:	mov	r1, r5
    b754:	mov	r4, r0
    b758:	bl	c4b0 <gen_thostop>
    b75c:	b	b074 <sf_gen_scode+0x1a0>
    b760:	mov	r0, r7
    b764:	mov	r5, r4
    b768:	bl	1f3cc <pcap_ether_hostton>
    b76c:	cmp	r0, #0
    b770:	beq	ba3c <sf_gen_scode+0xb68>
    b774:	mov	r1, r5
    b778:	mov	r4, r0
    b77c:	bl	c000 <gen_ehostop>
    b780:	b	b074 <sf_gen_scode+0x1a0>
    b784:	ldrb	r0, [r1]
    b788:	cmp	r0, #1
    b78c:	bne	ba20 <sf_gen_scode+0xb4c>
    b790:	mov	r0, #1
    b794:	mov	r1, #4
    b798:	mov	r2, #8
    b79c:	mov	r3, #65280	; 0xff00
    b7a0:	bl	9ef4 <gen_cmp>
    b7a4:	mov	r4, r0
    b7a8:	ldr	r0, [r0, #44]	; 0x2c
    b7ac:	clz	r0, r0
    b7b0:	lsr	r0, r0, #5
    b7b4:	str	r0, [r4, #44]	; 0x2c
    b7b8:	mov	r0, r7
    b7bc:	bl	1f3cc <pcap_ether_hostton>
    b7c0:	cmp	r0, #0
    b7c4:	beq	ba3c <sf_gen_scode+0xb68>
    b7c8:	mov	r1, r6
    b7cc:	mov	r5, r0
    b7d0:	bl	c000 <gen_ehostop>
    b7d4:	mov	r6, r0
    b7d8:	cmp	r4, #0
    b7dc:	beq	b810 <sf_gen_scode+0x93c>
    b7e0:	ldr	r0, [r6, #96]	; 0x60
    b7e4:	mov	r1, r4
    b7e8:	ldr	r2, [r1, #44]	; 0x2c
    b7ec:	add	r3, r1, #84	; 0x54
    b7f0:	cmp	r2, #0
    b7f4:	mov	r2, #84	; 0x54
    b7f8:	movweq	r2, #60	; 0x3c
    b7fc:	addeq	r3, r1, #60	; 0x3c
    b800:	ldr	r1, [r1, r2]
    b804:	str	r0, [r3]
    b808:	cmp	r1, #0
    b80c:	bne	b7e8 <sf_gen_scode+0x914>
    b810:	ldr	r0, [r4, #44]	; 0x2c
    b814:	cmp	r6, #0
    b818:	clz	r0, r0
    b81c:	lsr	r0, r0, #5
    b820:	str	r0, [r4, #44]	; 0x2c
    b824:	ldr	r1, [r6, #44]	; 0x2c
    b828:	clz	r0, r1
    b82c:	lsr	r0, r0, #5
    b830:	str	r0, [r6, #44]	; 0x2c
    b834:	str	r6, [sp, #24]
    b838:	beq	b8dc <sf_gen_scode+0xa08>
    b83c:	cmp	r1, #0
    b840:	mov	r1, #60	; 0x3c
    b844:	add	r0, r6, #60	; 0x3c
    b848:	movweq	r1, #84	; 0x54
    b84c:	addeq	r0, r6, #84	; 0x54
    b850:	ldr	r1, [r6, r1]
    b854:	cmp	r1, #0
    b858:	beq	b8e0 <sf_gen_scode+0xa0c>
    b85c:	ldr	r2, [r1, #44]	; 0x2c
    b860:	add	r0, r1, #84	; 0x54
    b864:	cmp	r2, #0
    b868:	mov	r2, #84	; 0x54
    b86c:	movweq	r2, #60	; 0x3c
    b870:	addeq	r0, r1, #60	; 0x3c
    b874:	ldr	r1, [r1, r2]
    b878:	cmp	r1, #0
    b87c:	bne	b85c <sf_gen_scode+0x988>
    b880:	b	b8e0 <sf_gen_scode+0xa0c>
    b884:	cmp	r0, #192	; 0xc0
    b888:	beq	b058 <sf_gen_scode+0x184>
    b88c:	b	ba20 <sf_gen_scode+0xb4c>
    b890:	mov	r0, r7
    b894:	bl	1f3cc <pcap_ether_hostton>
    b898:	cmp	r0, #0
    b89c:	beq	ba5c <sf_gen_scode+0xb88>
    b8a0:	mov	r1, r6
    b8a4:	mov	r4, r0
    b8a8:	bl	e86c <gen_ipfchostop>
    b8ac:	b	b074 <sf_gen_scode+0x1a0>
    b8b0:	cmp	r0, #10
    b8b4:	bne	ba20 <sf_gen_scode+0xb4c>
    b8b8:	mov	r0, r7
    b8bc:	mov	r5, r4
    b8c0:	bl	1f3cc <pcap_ether_hostton>
    b8c4:	cmp	r0, #0
    b8c8:	beq	ba6c <sf_gen_scode+0xb98>
    b8cc:	mov	r1, r5
    b8d0:	mov	r4, r0
    b8d4:	bl	c274 <gen_fhostop>
    b8d8:	b	b074 <sf_gen_scode+0x1a0>
    b8dc:	add	r0, sp, #24
    b8e0:	str	r4, [r0]
    b8e4:	ldr	r0, [r6, #44]	; 0x2c
    b8e8:	clz	r0, r0
    b8ec:	lsr	r0, r0, #5
    b8f0:	str	r0, [r6, #44]	; 0x2c
    b8f4:	ldr	r0, [r4, #96]	; 0x60
    b8f8:	str	r0, [r6, #96]	; 0x60
    b8fc:	mov	r0, r5
    b900:	bl	ea4 <free@plt>
    b904:	mov	r0, r6
    b908:	sub	sp, fp, #28
    b90c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b910:	cmp	r8, #255	; 0xff
    b914:	bne	b928 <sf_gen_scode+0xa54>
    b918:	bl	2e68 <syntax>
    b91c:	ldr	r0, [pc, #388]	; baa8 <sf_gen_scode+0xbd4>
    b920:	add	r0, pc, r0
    b924:	bl	2204 <sf_bpf_error>
    b928:	bl	100c <abort@plt>
    b92c:	ldr	r0, [pc, #376]	; baac <sf_gen_scode+0xbd8>
    b930:	mov	r1, r7
    b934:	add	r0, pc, r0
    b938:	bl	2204 <sf_bpf_error>
    b93c:	ldr	r0, [pc, #364]	; bab0 <sf_gen_scode+0xbdc>
    b940:	mov	r1, r7
    b944:	add	r0, pc, r0
    b948:	bl	2204 <sf_bpf_error>
    b94c:	ldr	r0, [pc, #376]	; bacc <sf_gen_scode+0xbf8>
    b950:	add	r0, pc, r0
    b954:	bl	2204 <sf_bpf_error>
    b958:	ldr	r0, [pc, #368]	; bad0 <sf_gen_scode+0xbfc>
    b95c:	mov	r1, r7
    b960:	add	r0, pc, r0
    b964:	bl	2204 <sf_bpf_error>
    b968:	ldr	r0, [pc, #356]	; bad4 <sf_gen_scode+0xc00>
    b96c:	add	r0, pc, r0
    b970:	bl	2204 <sf_bpf_error>
    b974:	ldr	r0, [pc, #348]	; bad8 <sf_gen_scode+0xc04>
    b978:	mov	r1, r7
    b97c:	add	r0, pc, r0
    b980:	bl	2204 <sf_bpf_error>
    b984:	ldr	r0, [pc, #316]	; bac8 <sf_gen_scode+0xbf4>
    b988:	mov	r1, r7
    b98c:	add	r0, pc, r0
    b990:	bl	2204 <sf_bpf_error>
    b994:	ldr	r0, [pc, #240]	; ba8c <sf_gen_scode+0xbb8>
    b998:	ldr	r2, [pc, #240]	; ba90 <sf_gen_scode+0xbbc>
    b99c:	ldr	r1, [sp, #4]
    b9a0:	add	r0, pc, r0
    b9a4:	add	r2, pc, r2
    b9a8:	cmp	r1, #0
    b9ac:	moveq	r2, r0
    b9b0:	ldr	r0, [pc, #220]	; ba94 <sf_gen_scode+0xbc0>
    b9b4:	ldr	r1, [sp, #8]
    b9b8:	add	r0, pc, r0
    b9bc:	bl	2204 <sf_bpf_error>
    b9c0:	ldr	r0, [pc, #212]	; ba9c <sf_gen_scode+0xbc8>
    b9c4:	mov	r1, r7
    b9c8:	add	r0, pc, r0
    b9cc:	bl	2204 <sf_bpf_error>
    b9d0:	ldr	r0, [pc, #260]	; badc <sf_gen_scode+0xc08>
    b9d4:	mov	r1, r7
    b9d8:	add	r0, pc, r0
    b9dc:	bl	2204 <sf_bpf_error>
    b9e0:	ldr	r0, [pc, #176]	; ba98 <sf_gen_scode+0xbc4>
    b9e4:	mov	r1, r7
    b9e8:	add	r0, pc, r0
    b9ec:	bl	2204 <sf_bpf_error>
    b9f0:	ldr	r0, [pc, #172]	; baa4 <sf_gen_scode+0xbd0>
    b9f4:	mov	r1, r7
    b9f8:	add	r0, pc, r0
    b9fc:	bl	2204 <sf_bpf_error>
    ba00:	ldr	r0, [pc, #216]	; bae0 <sf_gen_scode+0xc0c>
    ba04:	mov	r1, r7
    ba08:	add	r0, pc, r0
    ba0c:	bl	2204 <sf_bpf_error>
    ba10:	ldr	r0, [pc, #136]	; baa0 <sf_gen_scode+0xbcc>
    ba14:	mov	r1, r7
    ba18:	add	r0, pc, r0
    ba1c:	bl	2204 <sf_bpf_error>
    ba20:	ldr	r0, [pc, #88]	; ba80 <sf_gen_scode+0xbac>
    ba24:	add	r0, pc, r0
    ba28:	bl	2204 <sf_bpf_error>
    ba2c:	ldr	r0, [pc, #140]	; bac0 <sf_gen_scode+0xbec>
    ba30:	mov	r1, r7
    ba34:	add	r0, pc, r0
    ba38:	bl	2204 <sf_bpf_error>
    ba3c:	ldr	r0, [pc, #112]	; bab4 <sf_gen_scode+0xbe0>
    ba40:	mov	r1, r7
    ba44:	add	r0, pc, r0
    ba48:	bl	2204 <sf_bpf_error>
    ba4c:	ldr	r0, [pc, #104]	; babc <sf_gen_scode+0xbe8>
    ba50:	mov	r1, r7
    ba54:	add	r0, pc, r0
    ba58:	bl	2204 <sf_bpf_error>
    ba5c:	ldr	r0, [pc, #96]	; bac4 <sf_gen_scode+0xbf0>
    ba60:	mov	r1, r7
    ba64:	add	r0, pc, r0
    ba68:	bl	2204 <sf_bpf_error>
    ba6c:	ldr	r0, [pc, #68]	; bab8 <sf_gen_scode+0xbe4>
    ba70:	mov	r1, r7
    ba74:	add	r0, pc, r0
    ba78:	bl	2204 <sf_bpf_error>
    ba7c:	.word	0x0003b5a0
    ba80:	.word	0x0001cf5e
    ba84:	.word	0x0003b254
    ba88:	.word	0x0003affc
    ba8c:	.word	0x0001ce48
    ba90:	.word	0x0001d05e
    ba94:	.word	0x0001d036
    ba98:	.word	0x0001d089
    ba9c:	.word	0x0001d097
    baa0:	.word	0x0001d0db
    baa4:	.word	0x0001d0e0
    baa8:	.word	0x0001d1ed
    baac:	.word	0x0001d207
    bab0:	.word	0x0001cfa4
    bab4:	.word	0x0001ceb9
    bab8:	.word	0x0001cea1
    babc:	.word	0x0001ced8
    bac0:	.word	0x0001cf15
    bac4:	.word	0x0001cefe
    bac8:	.word	0x0001d050
    bacc:	.word	0x0001d0d0
    bad0:	.word	0x0001d0dc
    bad4:	.word	0x0001d116
    bad8:	.word	0x0001d127
    badc:	.word	0x0001d076
    bae0:	.word	0x0001d0b6

0000bae4 <gen_host>:
    bae4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bae8:	add	fp, sp, #24
    baec:	sub	sp, sp, #16
    baf0:	mov	r6, r0
    baf4:	ldr	r0, [fp, #8]
    baf8:	mov	r5, r3
    bafc:	ldr	r3, [pc, #1160]	; bf8c <gen_host+0x4a8>
    bb00:	mov	r7, r1
    bb04:	ldr	r1, [pc, #1156]	; bf90 <gen_host+0x4ac>
    bb08:	add	r3, pc, r3
    bb0c:	add	r1, pc, r1
    bb10:	cmp	r0, #2
    bb14:	moveq	r1, r3
    bb18:	cmp	r2, #40	; 0x28
    bb1c:	bhi	be50 <gen_host+0x36c>
    bb20:	add	r0, pc, #4
    bb24:	ldr	r2, [r0, r2, lsl #2]
    bb28:	add	pc, r0, r2
    bb2c:	.word	0x000000a4
    bb30:	.word	0x00000324
    bb34:	.word	0x00000114
    bb38:	.word	0x00000140
    bb3c:	.word	0x000000e8
    bb40:	.word	0x0000040c
    bb44:	.word	0x00000418
    bb48:	.word	0x00000424
    bb4c:	.word	0x00000430
    bb50:	.word	0x0000043c
    bb54:	.word	0x00000448
    bb58:	.word	0x00000454
    bb5c:	.word	0x0000016c
    bb60:	.word	0x00000328
    bb64:	.word	0x00000334
    bb68:	.word	0x00000340
    bb6c:	.word	0x0000034c
    bb70:	.word	0x00000358
    bb74:	.word	0x00000364
    bb78:	.word	0x00000370
    bb7c:	.word	0x0000037c
    bb80:	.word	0x00000388
    bb84:	.word	0x00000394
    bb88:	.word	0x000003a0
    bb8c:	.word	0x000003ac
    bb90:	.word	0x000003b8
    bb94:	.word	0x000003c4
    bb98:	.word	0x000003d0
    bb9c:	.word	0x000003dc
    bba0:	.word	0x000003e8
    bba4:	.word	0x000003f4
    bba8:	.word	0x00000324
    bbac:	.word	0x00000324
    bbb0:	.word	0x00000324
    bbb4:	.word	0x00000324
    bbb8:	.word	0x00000324
    bbbc:	.word	0x00000324
    bbc0:	.word	0x00000324
    bbc4:	.word	0x00000324
    bbc8:	.word	0x00000324
    bbcc:	.word	0x00000400
    bbd0:	mov	r0, #16
    bbd4:	mov	r1, #12
    bbd8:	mov	r2, r5
    bbdc:	mov	r3, #2048	; 0x800
    bbe0:	str	r1, [sp]
    bbe4:	str	r0, [sp, #4]
    bbe8:	mov	r0, r6
    bbec:	mov	r1, r7
    bbf0:	bl	1b648 <gen_hostop>
    bbf4:	mov	r4, r0
    bbf8:	ldr	r0, [pc, #916]	; bf94 <gen_host+0x4b0>
    bbfc:	ldr	r0, [pc, r0]
    bc00:	cmp	r0, #0
    bc04:	beq	bcac <gen_host+0x1c8>
    bc08:	mov	r0, r4
    bc0c:	sub	sp, fp, #24
    bc10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc14:	mov	r0, #24
    bc18:	mov	r1, #14
    bc1c:	mov	r2, r5
    bc20:	movw	r3, #32821	; 0x8035
    bc24:	str	r1, [sp]
    bc28:	str	r0, [sp, #4]
    bc2c:	mov	r0, r6
    bc30:	mov	r1, r7
    bc34:	bl	1b648 <gen_hostop>
    bc38:	sub	sp, fp, #24
    bc3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc40:	mov	r0, #16
    bc44:	mov	r1, #12
    bc48:	mov	r2, r5
    bc4c:	mov	r3, #2048	; 0x800
    bc50:	str	r1, [sp]
    bc54:	str	r0, [sp, #4]
    bc58:	mov	r0, r6
    bc5c:	mov	r1, r7
    bc60:	bl	1b648 <gen_hostop>
    bc64:	sub	sp, fp, #24
    bc68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc6c:	mov	r0, #24
    bc70:	mov	r1, #14
    bc74:	mov	r2, r5
    bc78:	movw	r3, #2054	; 0x806
    bc7c:	str	r1, [sp]
    bc80:	str	r0, [sp, #4]
    bc84:	mov	r0, r6
    bc88:	mov	r1, r7
    bc8c:	bl	1b648 <gen_hostop>
    bc90:	sub	sp, fp, #24
    bc94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc98:	mov	r0, r6
    bc9c:	mov	r1, r5
    bca0:	sub	sp, fp, #24
    bca4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    bca8:	b	1c16c <gen_dnhostop>
    bcac:	mov	r0, #24
    bcb0:	mov	r1, #14
    bcb4:	mov	r2, r5
    bcb8:	movw	r3, #2054	; 0x806
    bcbc:	str	r1, [sp]
    bcc0:	str	r0, [sp, #4]
    bcc4:	mov	r0, r6
    bcc8:	mov	r1, r7
    bccc:	bl	1b648 <gen_hostop>
    bcd0:	mov	r8, r0
    bcd4:	ldr	r0, [r4, #44]	; 0x2c
    bcd8:	cmp	r4, #0
    bcdc:	clz	r0, r0
    bce0:	lsr	r0, r0, #5
    bce4:	str	r0, [r4, #44]	; 0x2c
    bce8:	beq	bd24 <gen_host+0x240>
    bcec:	ldr	r1, [r8, #96]	; 0x60
    bcf0:	mov	r2, r4
    bcf4:	b	bcfc <gen_host+0x218>
    bcf8:	ldr	r0, [r2, #44]	; 0x2c
    bcfc:	cmp	r0, #0
    bd00:	mov	r0, #84	; 0x54
    bd04:	add	r3, r2, #84	; 0x54
    bd08:	movweq	r0, #60	; 0x3c
    bd0c:	addeq	r3, r2, #60	; 0x3c
    bd10:	ldr	r2, [r2, r0]
    bd14:	str	r1, [r3]
    bd18:	cmp	r2, #0
    bd1c:	bne	bcf8 <gen_host+0x214>
    bd20:	ldr	r0, [r4, #44]	; 0x2c
    bd24:	clz	r0, r0
    bd28:	cmp	r8, #0
    bd2c:	lsr	r0, r0, #5
    bd30:	str	r0, [r4, #44]	; 0x2c
    bd34:	str	r8, [sp, #8]
    bd38:	beq	bd68 <gen_host+0x284>
    bd3c:	mov	r1, r8
    bd40:	ldr	r2, [r1, #44]	; 0x2c
    bd44:	add	r0, r1, #84	; 0x54
    bd48:	cmp	r2, #0
    bd4c:	mov	r2, #84	; 0x54
    bd50:	movweq	r2, #60	; 0x3c
    bd54:	addeq	r0, r1, #60	; 0x3c
    bd58:	ldr	r1, [r1, r2]
    bd5c:	cmp	r1, #0
    bd60:	bne	bd40 <gen_host+0x25c>
    bd64:	b	bd6c <gen_host+0x288>
    bd68:	add	r0, sp, #8
    bd6c:	str	r4, [r0]
    bd70:	mov	r1, #14
    bd74:	mov	r2, r5
    bd78:	movw	r3, #32821	; 0x8035
    bd7c:	ldr	r0, [r4, #96]	; 0x60
    bd80:	str	r0, [r8, #96]	; 0x60
    bd84:	mov	r0, #24
    bd88:	str	r1, [sp]
    bd8c:	mov	r1, r7
    bd90:	str	r0, [sp, #4]
    bd94:	mov	r0, r6
    bd98:	bl	1b648 <gen_hostop>
    bd9c:	mov	r4, r0
    bda0:	ldr	r0, [r8, #44]	; 0x2c
    bda4:	cmp	r8, #0
    bda8:	clz	r0, r0
    bdac:	lsr	r0, r0, #5
    bdb0:	str	r0, [r8, #44]	; 0x2c
    bdb4:	beq	bdf0 <gen_host+0x30c>
    bdb8:	ldr	r1, [r4, #96]	; 0x60
    bdbc:	mov	r2, r8
    bdc0:	b	bdc8 <gen_host+0x2e4>
    bdc4:	ldr	r0, [r2, #44]	; 0x2c
    bdc8:	cmp	r0, #0
    bdcc:	mov	r0, #84	; 0x54
    bdd0:	add	r3, r2, #84	; 0x54
    bdd4:	movweq	r0, #60	; 0x3c
    bdd8:	addeq	r3, r2, #60	; 0x3c
    bddc:	ldr	r2, [r2, r0]
    bde0:	str	r1, [r3]
    bde4:	cmp	r2, #0
    bde8:	bne	bdc4 <gen_host+0x2e0>
    bdec:	ldr	r0, [r8, #44]	; 0x2c
    bdf0:	clz	r0, r0
    bdf4:	cmp	r4, #0
    bdf8:	lsr	r0, r0, #5
    bdfc:	str	r0, [r8, #44]	; 0x2c
    be00:	str	r4, [sp, #12]
    be04:	beq	be34 <gen_host+0x350>
    be08:	mov	r1, r4
    be0c:	ldr	r2, [r1, #44]	; 0x2c
    be10:	add	r0, r1, #84	; 0x54
    be14:	cmp	r2, #0
    be18:	mov	r2, #84	; 0x54
    be1c:	movweq	r2, #60	; 0x3c
    be20:	addeq	r0, r1, #60	; 0x3c
    be24:	ldr	r1, [r1, r2]
    be28:	cmp	r1, #0
    be2c:	bne	be0c <gen_host+0x328>
    be30:	b	be38 <gen_host+0x354>
    be34:	add	r0, sp, #12
    be38:	str	r8, [r0]
    be3c:	ldr	r0, [r8, #96]	; 0x60
    be40:	str	r0, [r4, #96]	; 0x60
    be44:	mov	r0, r4
    be48:	sub	sp, fp, #24
    be4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    be50:	bl	100c <abort@plt>
    be54:	ldr	r0, [pc, #360]	; bfc4 <gen_host+0x4e0>
    be58:	add	r0, pc, r0
    be5c:	bl	2204 <sf_bpf_error>
    be60:	ldr	r0, [pc, #344]	; bfc0 <gen_host+0x4dc>
    be64:	add	r0, pc, r0
    be68:	bl	2204 <sf_bpf_error>
    be6c:	ldr	r0, [pc, #344]	; bfcc <gen_host+0x4e8>
    be70:	add	r0, pc, r0
    be74:	bl	2204 <sf_bpf_error>
    be78:	ldr	r0, [pc, #328]	; bfc8 <gen_host+0x4e4>
    be7c:	add	r0, pc, r0
    be80:	bl	2204 <sf_bpf_error>
    be84:	ldr	r0, [pc, #324]	; bfd0 <gen_host+0x4ec>
    be88:	add	r0, pc, r0
    be8c:	bl	2204 <sf_bpf_error>
    be90:	ldr	r0, [pc, #316]	; bfd4 <gen_host+0x4f0>
    be94:	add	r0, pc, r0
    be98:	bl	2204 <sf_bpf_error>
    be9c:	ldr	r0, [pc, #308]	; bfd8 <gen_host+0x4f4>
    bea0:	add	r0, pc, r0
    bea4:	bl	2204 <sf_bpf_error>
    bea8:	ldr	r0, [pc, #300]	; bfdc <gen_host+0x4f8>
    beac:	add	r0, pc, r0
    beb0:	bl	2204 <sf_bpf_error>
    beb4:	ldr	r0, [pc, #244]	; bfb0 <gen_host+0x4cc>
    beb8:	add	r0, pc, r0
    bebc:	bl	2204 <sf_bpf_error>
    bec0:	ldr	r0, [pc, #236]	; bfb4 <gen_host+0x4d0>
    bec4:	add	r0, pc, r0
    bec8:	bl	2204 <sf_bpf_error>
    becc:	ldr	r0, [pc, #232]	; bfbc <gen_host+0x4d8>
    bed0:	add	r0, pc, r0
    bed4:	bl	2204 <sf_bpf_error>
    bed8:	ldr	r0, [pc, #256]	; bfe0 <gen_host+0x4fc>
    bedc:	add	r0, pc, r0
    bee0:	bl	2204 <sf_bpf_error>
    bee4:	ldr	r0, [pc, #248]	; bfe4 <gen_host+0x500>
    bee8:	add	r0, pc, r0
    beec:	bl	2204 <sf_bpf_error>
    bef0:	ldr	r0, [pc, #240]	; bfe8 <gen_host+0x504>
    bef4:	add	r0, pc, r0
    bef8:	bl	2204 <sf_bpf_error>
    befc:	ldr	r0, [pc, #232]	; bfec <gen_host+0x508>
    bf00:	add	r0, pc, r0
    bf04:	bl	2204 <sf_bpf_error>
    bf08:	ldr	r0, [pc, #224]	; bff0 <gen_host+0x50c>
    bf0c:	add	r0, pc, r0
    bf10:	bl	2204 <sf_bpf_error>
    bf14:	ldr	r0, [pc, #216]	; bff4 <gen_host+0x510>
    bf18:	add	r0, pc, r0
    bf1c:	bl	2204 <sf_bpf_error>
    bf20:	ldr	r0, [pc, #208]	; bff8 <gen_host+0x514>
    bf24:	add	r0, pc, r0
    bf28:	bl	2204 <sf_bpf_error>
    bf2c:	ldr	r0, [pc, #200]	; bffc <gen_host+0x518>
    bf30:	add	r0, pc, r0
    bf34:	bl	2204 <sf_bpf_error>
    bf38:	ldr	r0, [pc, #92]	; bf9c <gen_host+0x4b8>
    bf3c:	add	r0, pc, r0
    bf40:	bl	2204 <sf_bpf_error>
    bf44:	ldr	r0, [pc, #76]	; bf98 <gen_host+0x4b4>
    bf48:	add	r0, pc, r0
    bf4c:	bl	2204 <sf_bpf_error>
    bf50:	ldr	r0, [pc, #72]	; bfa0 <gen_host+0x4bc>
    bf54:	add	r0, pc, r0
    bf58:	bl	2204 <sf_bpf_error>
    bf5c:	ldr	r0, [pc, #64]	; bfa4 <gen_host+0x4c0>
    bf60:	add	r0, pc, r0
    bf64:	bl	2204 <sf_bpf_error>
    bf68:	ldr	r0, [pc, #56]	; bfa8 <gen_host+0x4c4>
    bf6c:	add	r0, pc, r0
    bf70:	bl	2204 <sf_bpf_error>
    bf74:	ldr	r0, [pc, #48]	; bfac <gen_host+0x4c8>
    bf78:	add	r0, pc, r0
    bf7c:	bl	2204 <sf_bpf_error>
    bf80:	ldr	r0, [pc, #48]	; bfb8 <gen_host+0x4d4>
    bf84:	add	r0, pc, r0
    bf88:	bl	2204 <sf_bpf_error>
    bf8c:	.word	0x0001d4c0
    bf90:	.word	0x0001e032
    bf94:	.word	0x0003a4d8
    bf98:	.word	0x0001da13
    bf9c:	.word	0x0001da3c
    bfa0:	.word	0x0001da42
    bfa4:	.word	0x0001da53
    bfa8:	.word	0x0001da65
    bfac:	.word	0x0001da77
    bfb0:	.word	0x0001db55
    bfb4:	.word	0x0001db66
    bfb8:	.word	0x0001dac4
    bfbc:	.word	0x0001db9d
    bfc0:	.word	0x0001dc2d
    bfc4:	.word	0x0001dc5c
    bfc8:	.word	0x0001dc5b
    bfcc:	.word	0x0001dc8c
    bfd0:	.word	0x0001dc99
    bfd4:	.word	0x0001dcaf
    bfd8:	.word	0x0001dcc2
    bfdc:	.word	0x0001dcd2
    bfe0:	.word	0x0001dcbf
    bfe4:	.word	0x0001dcd6
    bfe8:	.word	0x0001dce8
    bfec:	.word	0x0001dcfa
    bff0:	.word	0x0001dd0c
    bff4:	.word	0x0001dd1d
    bff8:	.word	0x0001dd34
    bffc:	.word	0x0001dd49

0000c000 <gen_ehostop>:
    c000:	push	{r4, r5, r6, sl, fp, lr}
    c004:	add	fp, sp, #16
    c008:	sub	sp, sp, #8
    c00c:	cmp	r1, #4
    c010:	bhi	c260 <gen_ehostop+0x260>
    c014:	mov	r5, r0
    c018:	add	r0, pc, #4
    c01c:	ldr	r1, [r0, r1, lsl #2]
    c020:	add	pc, r0, r1
    c024:	.word	0x00000014
    c028:	.word	0x000001c4
    c02c:	.word	0x000001d8
    c030:	.word	0x00000014
    c034:	.word	0x000000e0
    c038:	ldr	r6, [pc, #560]	; c270 <gen_ehostop+0x270>
    c03c:	mov	r2, #6
    c040:	mov	r3, r5
    c044:	add	r6, pc, r6
    c048:	ldr	r0, [r6, #52]	; 0x34
    c04c:	add	r1, r0, #6
    c050:	mov	r0, #1
    c054:	bl	1b0ec <gen_bcmp>
    c058:	ldr	r1, [r6, #52]	; 0x34
    c05c:	mov	r4, r0
    c060:	mov	r0, #1
    c064:	mov	r2, #6
    c068:	mov	r3, r5
    c06c:	bl	1b0ec <gen_bcmp>
    c070:	ldr	r1, [r4, #44]	; 0x2c
    c074:	cmp	r4, #0
    c078:	clz	r1, r1
    c07c:	lsr	r1, r1, #5
    c080:	str	r1, [r4, #44]	; 0x2c
    c084:	beq	c0c0 <gen_ehostop+0xc0>
    c088:	ldr	r2, [r0, #96]	; 0x60
    c08c:	mov	r3, r4
    c090:	b	c098 <gen_ehostop+0x98>
    c094:	ldr	r1, [r3, #44]	; 0x2c
    c098:	cmp	r1, #0
    c09c:	mov	r1, #84	; 0x54
    c0a0:	add	r6, r3, #84	; 0x54
    c0a4:	movweq	r1, #60	; 0x3c
    c0a8:	addeq	r6, r3, #60	; 0x3c
    c0ac:	ldr	r3, [r3, r1]
    c0b0:	str	r2, [r6]
    c0b4:	cmp	r3, #0
    c0b8:	bne	c094 <gen_ehostop+0x94>
    c0bc:	ldr	r1, [r4, #44]	; 0x2c
    c0c0:	clz	r1, r1
    c0c4:	cmp	r0, #0
    c0c8:	lsr	r1, r1, #5
    c0cc:	str	r1, [r4, #44]	; 0x2c
    c0d0:	str	r0, [sp]
    c0d4:	beq	c220 <gen_ehostop+0x220>
    c0d8:	mov	r2, r0
    c0dc:	ldr	r3, [r2, #44]	; 0x2c
    c0e0:	add	r1, r2, #84	; 0x54
    c0e4:	cmp	r3, #0
    c0e8:	mov	r3, #84	; 0x54
    c0ec:	movweq	r3, #60	; 0x3c
    c0f0:	addeq	r1, r2, #60	; 0x3c
    c0f4:	ldr	r2, [r2, r3]
    c0f8:	cmp	r2, #0
    c0fc:	bne	c0dc <gen_ehostop+0xdc>
    c100:	b	c224 <gen_ehostop+0x224>
    c104:	ldr	r6, [pc, #352]	; c26c <gen_ehostop+0x26c>
    c108:	mov	r2, #6
    c10c:	mov	r3, r5
    c110:	add	r6, pc, r6
    c114:	ldr	r0, [r6, #52]	; 0x34
    c118:	add	r1, r0, #6
    c11c:	mov	r0, #1
    c120:	bl	1b0ec <gen_bcmp>
    c124:	ldr	r1, [r6, #52]	; 0x34
    c128:	mov	r4, r0
    c12c:	mov	r0, #1
    c130:	mov	r2, #6
    c134:	mov	r3, r5
    c138:	bl	1b0ec <gen_bcmp>
    c13c:	cmp	r4, #0
    c140:	beq	c174 <gen_ehostop+0x174>
    c144:	ldr	r1, [r0, #96]	; 0x60
    c148:	mov	r2, r4
    c14c:	ldr	r3, [r2, #44]	; 0x2c
    c150:	add	r6, r2, #84	; 0x54
    c154:	cmp	r3, #0
    c158:	mov	r3, #84	; 0x54
    c15c:	movweq	r3, #60	; 0x3c
    c160:	addeq	r6, r2, #60	; 0x3c
    c164:	ldr	r2, [r2, r3]
    c168:	str	r1, [r6]
    c16c:	cmp	r2, #0
    c170:	bne	c14c <gen_ehostop+0x14c>
    c174:	ldr	r1, [r4, #44]	; 0x2c
    c178:	cmp	r0, #0
    c17c:	clz	r1, r1
    c180:	lsr	r1, r1, #5
    c184:	str	r1, [r4, #44]	; 0x2c
    c188:	ldr	r2, [r0, #44]	; 0x2c
    c18c:	clz	r1, r2
    c190:	lsr	r1, r1, #5
    c194:	str	r1, [r0, #44]	; 0x2c
    c198:	str	r0, [sp, #4]
    c19c:	beq	c238 <gen_ehostop+0x238>
    c1a0:	cmp	r2, #0
    c1a4:	mov	r2, #60	; 0x3c
    c1a8:	add	r1, r0, #60	; 0x3c
    c1ac:	movweq	r2, #84	; 0x54
    c1b0:	addeq	r1, r0, #84	; 0x54
    c1b4:	ldr	r2, [r0, r2]
    c1b8:	cmp	r2, #0
    c1bc:	beq	c23c <gen_ehostop+0x23c>
    c1c0:	ldr	r3, [r2, #44]	; 0x2c
    c1c4:	add	r1, r2, #84	; 0x54
    c1c8:	cmp	r3, #0
    c1cc:	mov	r3, #84	; 0x54
    c1d0:	movweq	r3, #60	; 0x3c
    c1d4:	addeq	r1, r2, #60	; 0x3c
    c1d8:	ldr	r2, [r2, r3]
    c1dc:	cmp	r2, #0
    c1e0:	bne	c1c0 <gen_ehostop+0x1c0>
    c1e4:	b	c23c <gen_ehostop+0x23c>
    c1e8:	ldr	r0, [pc, #116]	; c264 <gen_ehostop+0x264>
    c1ec:	add	r0, pc, r0
    c1f0:	ldr	r0, [r0, #52]	; 0x34
    c1f4:	add	r1, r0, #6
    c1f8:	b	c208 <gen_ehostop+0x208>
    c1fc:	ldr	r0, [pc, #100]	; c268 <gen_ehostop+0x268>
    c200:	add	r0, pc, r0
    c204:	ldr	r1, [r0, #52]	; 0x34
    c208:	mov	r0, #1
    c20c:	mov	r2, #6
    c210:	mov	r3, r5
    c214:	sub	sp, fp, #16
    c218:	pop	{r4, r5, r6, sl, fp, lr}
    c21c:	b	1b0ec <gen_bcmp>
    c220:	mov	r1, sp
    c224:	str	r4, [r1]
    c228:	ldr	r1, [r4, #96]	; 0x60
    c22c:	str	r1, [r0, #96]	; 0x60
    c230:	sub	sp, fp, #16
    c234:	pop	{r4, r5, r6, sl, fp, pc}
    c238:	add	r1, sp, #4
    c23c:	str	r4, [r1]
    c240:	ldr	r1, [r0, #44]	; 0x2c
    c244:	clz	r1, r1
    c248:	lsr	r1, r1, #5
    c24c:	str	r1, [r0, #44]	; 0x2c
    c250:	ldr	r1, [r4, #96]	; 0x60
    c254:	str	r1, [r0, #96]	; 0x60
    c258:	sub	sp, fp, #16
    c25c:	pop	{r4, r5, r6, sl, fp, pc}
    c260:	bl	100c <abort@plt>
    c264:	.word	0x0003a2f4
    c268:	.word	0x0003a2e0
    c26c:	.word	0x0003a3d0
    c270:	.word	0x0003a49c

0000c274 <gen_fhostop>:
    c274:	push	{r4, r5, fp, lr}
    c278:	add	fp, sp, #8
    c27c:	sub	sp, sp, #8
    c280:	cmp	r1, #4
    c284:	bhi	c4ac <gen_fhostop+0x238>
    c288:	mov	r5, r0
    c28c:	add	r0, pc, #4
    c290:	ldr	r1, [r0, r1, lsl #2]
    c294:	add	pc, r0, r1
    c298:	.word	0x00000014
    c29c:	.word	0x000001ac
    c2a0:	.word	0x000001b8
    c2a4:	.word	0x00000014
    c2a8:	.word	0x000000d4
    c2ac:	mov	r0, #1
    c2b0:	mov	r1, #7
    c2b4:	mov	r2, #6
    c2b8:	mov	r3, r5
    c2bc:	bl	1b0ec <gen_bcmp>
    c2c0:	mov	r4, r0
    c2c4:	mov	r0, #1
    c2c8:	mov	r1, #1
    c2cc:	mov	r2, #6
    c2d0:	mov	r3, r5
    c2d4:	bl	1b0ec <gen_bcmp>
    c2d8:	ldr	r1, [r4, #44]	; 0x2c
    c2dc:	cmp	r4, #0
    c2e0:	clz	r1, r1
    c2e4:	lsr	r1, r1, #5
    c2e8:	str	r1, [r4, #44]	; 0x2c
    c2ec:	beq	c328 <gen_fhostop+0xb4>
    c2f0:	ldr	r2, [r0, #96]	; 0x60
    c2f4:	mov	r3, r4
    c2f8:	b	c300 <gen_fhostop+0x8c>
    c2fc:	ldr	r1, [r3, #44]	; 0x2c
    c300:	cmp	r1, #0
    c304:	mov	r1, #84	; 0x54
    c308:	add	r5, r3, #84	; 0x54
    c30c:	movweq	r1, #60	; 0x3c
    c310:	addeq	r5, r3, #60	; 0x3c
    c314:	ldr	r3, [r3, r1]
    c318:	str	r2, [r5]
    c31c:	cmp	r3, #0
    c320:	bne	c2fc <gen_fhostop+0x88>
    c324:	ldr	r1, [r4, #44]	; 0x2c
    c328:	clz	r1, r1
    c32c:	cmp	r0, #0
    c330:	lsr	r1, r1, #5
    c334:	str	r1, [r4, #44]	; 0x2c
    c338:	str	r0, [sp]
    c33c:	beq	c46c <gen_fhostop+0x1f8>
    c340:	mov	r2, r0
    c344:	ldr	r3, [r2, #44]	; 0x2c
    c348:	add	r1, r2, #84	; 0x54
    c34c:	cmp	r3, #0
    c350:	mov	r3, #84	; 0x54
    c354:	movweq	r3, #60	; 0x3c
    c358:	addeq	r1, r2, #60	; 0x3c
    c35c:	ldr	r2, [r2, r3]
    c360:	cmp	r2, #0
    c364:	bne	c344 <gen_fhostop+0xd0>
    c368:	b	c470 <gen_fhostop+0x1fc>
    c36c:	mov	r0, #1
    c370:	mov	r1, #7
    c374:	mov	r2, #6
    c378:	mov	r3, r5
    c37c:	bl	1b0ec <gen_bcmp>
    c380:	mov	r4, r0
    c384:	mov	r0, #1
    c388:	mov	r1, #1
    c38c:	mov	r2, #6
    c390:	mov	r3, r5
    c394:	bl	1b0ec <gen_bcmp>
    c398:	cmp	r4, #0
    c39c:	beq	c3d0 <gen_fhostop+0x15c>
    c3a0:	ldr	r1, [r0, #96]	; 0x60
    c3a4:	mov	r2, r4
    c3a8:	ldr	r3, [r2, #44]	; 0x2c
    c3ac:	add	r5, r2, #84	; 0x54
    c3b0:	cmp	r3, #0
    c3b4:	mov	r3, #84	; 0x54
    c3b8:	movweq	r3, #60	; 0x3c
    c3bc:	addeq	r5, r2, #60	; 0x3c
    c3c0:	ldr	r2, [r2, r3]
    c3c4:	str	r1, [r5]
    c3c8:	cmp	r2, #0
    c3cc:	bne	c3a8 <gen_fhostop+0x134>
    c3d0:	ldr	r1, [r4, #44]	; 0x2c
    c3d4:	cmp	r0, #0
    c3d8:	clz	r1, r1
    c3dc:	lsr	r1, r1, #5
    c3e0:	str	r1, [r4, #44]	; 0x2c
    c3e4:	ldr	r2, [r0, #44]	; 0x2c
    c3e8:	clz	r1, r2
    c3ec:	lsr	r1, r1, #5
    c3f0:	str	r1, [r0, #44]	; 0x2c
    c3f4:	str	r0, [sp, #4]
    c3f8:	beq	c484 <gen_fhostop+0x210>
    c3fc:	cmp	r2, #0
    c400:	mov	r2, #60	; 0x3c
    c404:	add	r1, r0, #60	; 0x3c
    c408:	movweq	r2, #84	; 0x54
    c40c:	addeq	r1, r0, #84	; 0x54
    c410:	ldr	r2, [r0, r2]
    c414:	cmp	r2, #0
    c418:	beq	c488 <gen_fhostop+0x214>
    c41c:	ldr	r3, [r2, #44]	; 0x2c
    c420:	add	r1, r2, #84	; 0x54
    c424:	cmp	r3, #0
    c428:	mov	r3, #84	; 0x54
    c42c:	movweq	r3, #60	; 0x3c
    c430:	addeq	r1, r2, #60	; 0x3c
    c434:	ldr	r2, [r2, r3]
    c438:	cmp	r2, #0
    c43c:	bne	c41c <gen_fhostop+0x1a8>
    c440:	b	c488 <gen_fhostop+0x214>
    c444:	mov	r0, #1
    c448:	mov	r1, #7
    c44c:	b	c458 <gen_fhostop+0x1e4>
    c450:	mov	r0, #1
    c454:	mov	r1, #1
    c458:	mov	r2, #6
    c45c:	mov	r3, r5
    c460:	sub	sp, fp, #8
    c464:	pop	{r4, r5, fp, lr}
    c468:	b	1b0ec <gen_bcmp>
    c46c:	mov	r1, sp
    c470:	str	r4, [r1]
    c474:	ldr	r1, [r4, #96]	; 0x60
    c478:	str	r1, [r0, #96]	; 0x60
    c47c:	sub	sp, fp, #8
    c480:	pop	{r4, r5, fp, pc}
    c484:	add	r1, sp, #4
    c488:	str	r4, [r1]
    c48c:	ldr	r1, [r0, #44]	; 0x2c
    c490:	clz	r1, r1
    c494:	lsr	r1, r1, #5
    c498:	str	r1, [r0, #44]	; 0x2c
    c49c:	ldr	r1, [r4, #96]	; 0x60
    c4a0:	str	r1, [r0, #96]	; 0x60
    c4a4:	sub	sp, fp, #8
    c4a8:	pop	{r4, r5, fp, pc}
    c4ac:	bl	100c <abort@plt>

0000c4b0 <gen_thostop>:
    c4b0:	push	{r4, r5, fp, lr}
    c4b4:	add	fp, sp, #8
    c4b8:	sub	sp, sp, #8
    c4bc:	cmp	r1, #4
    c4c0:	bhi	c6e8 <gen_thostop+0x238>
    c4c4:	mov	r5, r0
    c4c8:	add	r0, pc, #4
    c4cc:	ldr	r1, [r0, r1, lsl #2]
    c4d0:	add	pc, r0, r1
    c4d4:	.word	0x00000014
    c4d8:	.word	0x000001ac
    c4dc:	.word	0x000001b8
    c4e0:	.word	0x00000014
    c4e4:	.word	0x000000d4
    c4e8:	mov	r0, #1
    c4ec:	mov	r1, #8
    c4f0:	mov	r2, #6
    c4f4:	mov	r3, r5
    c4f8:	bl	1b0ec <gen_bcmp>
    c4fc:	mov	r4, r0
    c500:	mov	r0, #1
    c504:	mov	r1, #2
    c508:	mov	r2, #6
    c50c:	mov	r3, r5
    c510:	bl	1b0ec <gen_bcmp>
    c514:	ldr	r1, [r4, #44]	; 0x2c
    c518:	cmp	r4, #0
    c51c:	clz	r1, r1
    c520:	lsr	r1, r1, #5
    c524:	str	r1, [r4, #44]	; 0x2c
    c528:	beq	c564 <gen_thostop+0xb4>
    c52c:	ldr	r2, [r0, #96]	; 0x60
    c530:	mov	r3, r4
    c534:	b	c53c <gen_thostop+0x8c>
    c538:	ldr	r1, [r3, #44]	; 0x2c
    c53c:	cmp	r1, #0
    c540:	mov	r1, #84	; 0x54
    c544:	add	r5, r3, #84	; 0x54
    c548:	movweq	r1, #60	; 0x3c
    c54c:	addeq	r5, r3, #60	; 0x3c
    c550:	ldr	r3, [r3, r1]
    c554:	str	r2, [r5]
    c558:	cmp	r3, #0
    c55c:	bne	c538 <gen_thostop+0x88>
    c560:	ldr	r1, [r4, #44]	; 0x2c
    c564:	clz	r1, r1
    c568:	cmp	r0, #0
    c56c:	lsr	r1, r1, #5
    c570:	str	r1, [r4, #44]	; 0x2c
    c574:	str	r0, [sp]
    c578:	beq	c6a8 <gen_thostop+0x1f8>
    c57c:	mov	r2, r0
    c580:	ldr	r3, [r2, #44]	; 0x2c
    c584:	add	r1, r2, #84	; 0x54
    c588:	cmp	r3, #0
    c58c:	mov	r3, #84	; 0x54
    c590:	movweq	r3, #60	; 0x3c
    c594:	addeq	r1, r2, #60	; 0x3c
    c598:	ldr	r2, [r2, r3]
    c59c:	cmp	r2, #0
    c5a0:	bne	c580 <gen_thostop+0xd0>
    c5a4:	b	c6ac <gen_thostop+0x1fc>
    c5a8:	mov	r0, #1
    c5ac:	mov	r1, #8
    c5b0:	mov	r2, #6
    c5b4:	mov	r3, r5
    c5b8:	bl	1b0ec <gen_bcmp>
    c5bc:	mov	r4, r0
    c5c0:	mov	r0, #1
    c5c4:	mov	r1, #2
    c5c8:	mov	r2, #6
    c5cc:	mov	r3, r5
    c5d0:	bl	1b0ec <gen_bcmp>
    c5d4:	cmp	r4, #0
    c5d8:	beq	c60c <gen_thostop+0x15c>
    c5dc:	ldr	r1, [r0, #96]	; 0x60
    c5e0:	mov	r2, r4
    c5e4:	ldr	r3, [r2, #44]	; 0x2c
    c5e8:	add	r5, r2, #84	; 0x54
    c5ec:	cmp	r3, #0
    c5f0:	mov	r3, #84	; 0x54
    c5f4:	movweq	r3, #60	; 0x3c
    c5f8:	addeq	r5, r2, #60	; 0x3c
    c5fc:	ldr	r2, [r2, r3]
    c600:	str	r1, [r5]
    c604:	cmp	r2, #0
    c608:	bne	c5e4 <gen_thostop+0x134>
    c60c:	ldr	r1, [r4, #44]	; 0x2c
    c610:	cmp	r0, #0
    c614:	clz	r1, r1
    c618:	lsr	r1, r1, #5
    c61c:	str	r1, [r4, #44]	; 0x2c
    c620:	ldr	r2, [r0, #44]	; 0x2c
    c624:	clz	r1, r2
    c628:	lsr	r1, r1, #5
    c62c:	str	r1, [r0, #44]	; 0x2c
    c630:	str	r0, [sp, #4]
    c634:	beq	c6c0 <gen_thostop+0x210>
    c638:	cmp	r2, #0
    c63c:	mov	r2, #60	; 0x3c
    c640:	add	r1, r0, #60	; 0x3c
    c644:	movweq	r2, #84	; 0x54
    c648:	addeq	r1, r0, #84	; 0x54
    c64c:	ldr	r2, [r0, r2]
    c650:	cmp	r2, #0
    c654:	beq	c6c4 <gen_thostop+0x214>
    c658:	ldr	r3, [r2, #44]	; 0x2c
    c65c:	add	r1, r2, #84	; 0x54
    c660:	cmp	r3, #0
    c664:	mov	r3, #84	; 0x54
    c668:	movweq	r3, #60	; 0x3c
    c66c:	addeq	r1, r2, #60	; 0x3c
    c670:	ldr	r2, [r2, r3]
    c674:	cmp	r2, #0
    c678:	bne	c658 <gen_thostop+0x1a8>
    c67c:	b	c6c4 <gen_thostop+0x214>
    c680:	mov	r0, #1
    c684:	mov	r1, #8
    c688:	b	c694 <gen_thostop+0x1e4>
    c68c:	mov	r0, #1
    c690:	mov	r1, #2
    c694:	mov	r2, #6
    c698:	mov	r3, r5
    c69c:	sub	sp, fp, #8
    c6a0:	pop	{r4, r5, fp, lr}
    c6a4:	b	1b0ec <gen_bcmp>
    c6a8:	mov	r1, sp
    c6ac:	str	r4, [r1]
    c6b0:	ldr	r1, [r4, #96]	; 0x60
    c6b4:	str	r1, [r0, #96]	; 0x60
    c6b8:	sub	sp, fp, #8
    c6bc:	pop	{r4, r5, fp, pc}
    c6c0:	add	r1, sp, #4
    c6c4:	str	r4, [r1]
    c6c8:	ldr	r1, [r0, #44]	; 0x2c
    c6cc:	clz	r1, r1
    c6d0:	lsr	r1, r1, #5
    c6d4:	str	r1, [r0, #44]	; 0x2c
    c6d8:	ldr	r1, [r4, #96]	; 0x60
    c6dc:	str	r1, [r0, #96]	; 0x60
    c6e0:	sub	sp, fp, #8
    c6e4:	pop	{r4, r5, fp, pc}
    c6e8:	bl	100c <abort@plt>

0000c6ec <gen_wlanhostop>:
    c6ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6f0:	add	fp, sp, #28
    c6f4:	sub	sp, sp, #12
    c6f8:	cmp	r1, #8
    c6fc:	bhi	e864 <gen_wlanhostop+0x2178>
    c700:	mov	sl, r0
    c704:	add	r0, pc, #4
    c708:	ldr	r1, [r0, r1, lsl #2]
    c70c:	add	pc, r0, r1
    c710:	.word	0x00000024
    c714:	.word	0x000001a4
    c718:	.word	0x00000310
    c71c:	.word	0x00000024
    c720:	.word	0x000000d8
    c724:	.word	0x00000500
    c728:	.word	0x0000051c
    c72c:	.word	0x0000047c
    c730:	.word	0x000005a4
    c734:	mov	r0, sl
    c738:	mov	r1, #1
    c73c:	bl	c6ec <gen_wlanhostop>
    c740:	mov	r6, r0
    c744:	mov	r0, sl
    c748:	mov	r1, #2
    c74c:	bl	c6ec <gen_wlanhostop>
    c750:	mov	r5, r0
    c754:	ldr	r0, [r6, #44]	; 0x2c
    c758:	cmp	r6, #0
    c75c:	clz	r0, r0
    c760:	lsr	r0, r0, #5
    c764:	str	r0, [r6, #44]	; 0x2c
    c768:	beq	c7a4 <gen_wlanhostop+0xb8>
    c76c:	ldr	r1, [r5, #96]	; 0x60
    c770:	mov	r2, r6
    c774:	b	c77c <gen_wlanhostop+0x90>
    c778:	ldr	r0, [r2, #44]	; 0x2c
    c77c:	cmp	r0, #0
    c780:	mov	r0, #84	; 0x54
    c784:	add	r3, r2, #84	; 0x54
    c788:	movweq	r0, #60	; 0x3c
    c78c:	addeq	r3, r2, #60	; 0x3c
    c790:	ldr	r2, [r2, r0]
    c794:	str	r1, [r3]
    c798:	cmp	r2, #0
    c79c:	bne	c778 <gen_wlanhostop+0x8c>
    c7a0:	ldr	r0, [r6, #44]	; 0x2c
    c7a4:	clz	r0, r0
    c7a8:	cmp	r5, #0
    c7ac:	lsr	r0, r0, #5
    c7b0:	str	r0, [r6, #44]	; 0x2c
    c7b4:	str	r5, [sp, #8]
    c7b8:	beq	cd38 <gen_wlanhostop+0x64c>
    c7bc:	mov	r1, r5
    c7c0:	ldr	r2, [r1, #44]	; 0x2c
    c7c4:	add	r0, r1, #84	; 0x54
    c7c8:	cmp	r2, #0
    c7cc:	mov	r2, #84	; 0x54
    c7d0:	movweq	r2, #60	; 0x3c
    c7d4:	addeq	r0, r1, #60	; 0x3c
    c7d8:	ldr	r1, [r1, r2]
    c7dc:	cmp	r1, #0
    c7e0:	bne	c7c0 <gen_wlanhostop+0xd4>
    c7e4:	b	cd3c <gen_wlanhostop+0x650>
    c7e8:	mov	r0, sl
    c7ec:	mov	r1, #1
    c7f0:	bl	c6ec <gen_wlanhostop>
    c7f4:	mov	r6, r0
    c7f8:	mov	r0, sl
    c7fc:	mov	r1, #2
    c800:	bl	c6ec <gen_wlanhostop>
    c804:	mov	r5, r0
    c808:	cmp	r6, #0
    c80c:	beq	c840 <gen_wlanhostop+0x154>
    c810:	ldr	r0, [r5, #96]	; 0x60
    c814:	mov	r1, r6
    c818:	ldr	r2, [r1, #44]	; 0x2c
    c81c:	add	r3, r1, #84	; 0x54
    c820:	cmp	r2, #0
    c824:	mov	r2, #84	; 0x54
    c828:	movweq	r2, #60	; 0x3c
    c82c:	addeq	r3, r1, #60	; 0x3c
    c830:	ldr	r1, [r1, r2]
    c834:	str	r0, [r3]
    c838:	cmp	r1, #0
    c83c:	bne	c818 <gen_wlanhostop+0x12c>
    c840:	ldr	r0, [r6, #44]	; 0x2c
    c844:	cmp	r5, #0
    c848:	clz	r0, r0
    c84c:	lsr	r0, r0, #5
    c850:	str	r0, [r6, #44]	; 0x2c
    c854:	ldr	r1, [r5, #44]	; 0x2c
    c858:	clz	r0, r1
    c85c:	lsr	r0, r0, #5
    c860:	str	r0, [r5, #44]	; 0x2c
    c864:	str	r5, [sp, #8]
    c868:	beq	d434 <gen_wlanhostop+0xd48>
    c86c:	cmp	r1, #0
    c870:	mov	r1, #60	; 0x3c
    c874:	add	r0, r5, #60	; 0x3c
    c878:	movweq	r1, #84	; 0x54
    c87c:	addeq	r0, r5, #84	; 0x54
    c880:	ldr	r1, [r5, r1]
    c884:	cmp	r1, #0
    c888:	beq	d438 <gen_wlanhostop+0xd4c>
    c88c:	ldr	r2, [r1, #44]	; 0x2c
    c890:	add	r0, r1, #84	; 0x54
    c894:	cmp	r2, #0
    c898:	mov	r2, #84	; 0x54
    c89c:	movweq	r2, #60	; 0x3c
    c8a0:	addeq	r0, r1, #60	; 0x3c
    c8a4:	ldr	r1, [r1, r2]
    c8a8:	cmp	r1, #0
    c8ac:	bne	c88c <gen_wlanhostop+0x1a0>
    c8b0:	b	d438 <gen_wlanhostop+0xd4c>
    c8b4:	mov	r0, #1
    c8b8:	mov	r1, #1
    c8bc:	mov	r2, #16
    c8c0:	mov	r7, #1
    c8c4:	bl	1669c <gen_load_a>
    c8c8:	ldr	r2, [pc, #4016]	; d880 <gen_wlanhostop+0x1194>
    c8cc:	mov	r5, r0
    c8d0:	add	r2, pc, r2
    c8d4:	ldr	r0, [r2, #92]	; 0x5c
    c8d8:	ldr	r8, [pc, #4004]	; d884 <gen_wlanhostop+0x1198>
    c8dc:	add	r8, pc, r8
    c8e0:	mov	r4, r8
    c8e4:	ldr	r6, [r4, r0, lsl #3]!
    c8e8:	cmp	r6, #207	; 0xcf
    c8ec:	bhi	c938 <gen_wlanhostop+0x24c>
    c8f0:	add	r1, r0, #1
    c8f4:	cmp	r0, #15
    c8f8:	str	r1, [r2, #92]	; 0x5c
    c8fc:	bge	e858 <gen_wlanhostop+0x216c>
    c900:	mov	r0, #1024	; 0x400
    c904:	lsl	r6, r0, r1
    c908:	mov	r0, r6
    c90c:	bl	f1c <malloc@plt>
    c910:	cmp	r0, #0
    c914:	str	r0, [r4, #12]
    c918:	beq	e858 <gen_wlanhostop+0x216c>
    c91c:	mov	r1, #0
    c920:	mov	r2, r6
    c924:	add	r4, r4, #8
    c928:	bl	f88 <memset@plt>
    c92c:	cmp	r6, #207	; 0xcf
    c930:	str	r6, [r4]
    c934:	bls	e858 <gen_wlanhostop+0x216c>
    c938:	sub	r0, r6, #208	; 0xd0
    c93c:	mov	r2, #6
    c940:	mov	r3, sl
    c944:	str	r0, [r4]
    c948:	ldr	r1, [r4, #4]
    c94c:	add	r4, r1, r0
    c950:	mov	r0, #69	; 0x45
    c954:	mov	r1, #24
    c958:	str	r7, [r4, #20]
    c95c:	str	r5, [r4, #4]
    c960:	str	r0, [r4, #8]
    c964:	mov	r0, #1
    c968:	str	r4, [r4, #96]	; 0x60
    c96c:	bl	1b0ec <gen_bcmp>
    c970:	mov	r5, r0
    c974:	cmp	r4, #0
    c978:	beq	c9ac <gen_wlanhostop+0x2c0>
    c97c:	ldr	r0, [r5, #96]	; 0x60
    c980:	mov	r1, r4
    c984:	ldr	r2, [r1, #44]	; 0x2c
    c988:	add	r3, r1, #84	; 0x54
    c98c:	cmp	r2, #0
    c990:	mov	r2, #84	; 0x54
    c994:	movweq	r2, #60	; 0x3c
    c998:	addeq	r3, r1, #60	; 0x3c
    c99c:	ldr	r1, [r1, r2]
    c9a0:	str	r0, [r3]
    c9a4:	cmp	r1, #0
    c9a8:	bne	c984 <gen_wlanhostop+0x298>
    c9ac:	ldr	r0, [r4, #44]	; 0x2c
    c9b0:	cmp	r5, #0
    c9b4:	clz	r0, r0
    c9b8:	lsr	r0, r0, #5
    c9bc:	str	r0, [r4, #44]	; 0x2c
    c9c0:	ldr	r1, [r5, #44]	; 0x2c
    c9c4:	clz	r0, r1
    c9c8:	lsr	r0, r0, #5
    c9cc:	str	r0, [r5, #44]	; 0x2c
    c9d0:	str	r5, [sp, #8]
    c9d4:	beq	d460 <gen_wlanhostop+0xd74>
    c9d8:	cmp	r1, #0
    c9dc:	mov	r1, #60	; 0x3c
    c9e0:	add	r0, r5, #60	; 0x3c
    c9e4:	movweq	r1, #84	; 0x54
    c9e8:	addeq	r0, r5, #84	; 0x54
    c9ec:	ldr	r1, [r5, r1]
    c9f0:	cmp	r1, #0
    c9f4:	beq	d464 <gen_wlanhostop+0xd78>
    c9f8:	ldr	r2, [r1, #44]	; 0x2c
    c9fc:	add	r0, r1, #84	; 0x54
    ca00:	cmp	r2, #0
    ca04:	mov	r2, #84	; 0x54
    ca08:	movweq	r2, #60	; 0x3c
    ca0c:	addeq	r0, r1, #60	; 0x3c
    ca10:	ldr	r1, [r1, r2]
    ca14:	cmp	r1, #0
    ca18:	bne	c9f8 <gen_wlanhostop+0x30c>
    ca1c:	b	d464 <gen_wlanhostop+0xd78>
    ca20:	mov	r0, #1
    ca24:	mov	r1, #1
    ca28:	mov	r2, #16
    ca2c:	mov	r7, #1
    ca30:	bl	1669c <gen_load_a>
    ca34:	ldr	r2, [pc, #3772]	; d8f8 <gen_wlanhostop+0x120c>
    ca38:	mov	r5, r0
    ca3c:	add	r2, pc, r2
    ca40:	ldr	r0, [r2, #92]	; 0x5c
    ca44:	ldr	r8, [pc, #3760]	; d8fc <gen_wlanhostop+0x1210>
    ca48:	add	r8, pc, r8
    ca4c:	mov	r4, r8
    ca50:	ldr	r6, [r4, r0, lsl #3]!
    ca54:	cmp	r6, #207	; 0xcf
    ca58:	bhi	caa4 <gen_wlanhostop+0x3b8>
    ca5c:	add	r1, r0, #1
    ca60:	cmp	r0, #15
    ca64:	str	r1, [r2, #92]	; 0x5c
    ca68:	bge	e858 <gen_wlanhostop+0x216c>
    ca6c:	mov	r0, #1024	; 0x400
    ca70:	lsl	r6, r0, r1
    ca74:	mov	r0, r6
    ca78:	bl	f1c <malloc@plt>
    ca7c:	cmp	r0, #0
    ca80:	str	r0, [r4, #12]
    ca84:	beq	e858 <gen_wlanhostop+0x216c>
    ca88:	mov	r1, #0
    ca8c:	mov	r2, r6
    ca90:	add	r4, r4, #8
    ca94:	bl	f88 <memset@plt>
    ca98:	cmp	r6, #207	; 0xcf
    ca9c:	str	r6, [r4]
    caa0:	bls	e858 <gen_wlanhostop+0x216c>
    caa4:	sub	r0, r6, #208	; 0xd0
    caa8:	mov	r2, #6
    caac:	mov	r3, sl
    cab0:	str	r0, [r4]
    cab4:	ldr	r1, [r4, #4]
    cab8:	add	r4, r1, r0
    cabc:	mov	r0, #69	; 0x45
    cac0:	mov	r1, #16
    cac4:	str	r7, [r4, #20]
    cac8:	str	r5, [r4, #4]
    cacc:	str	r0, [r4, #8]
    cad0:	mov	r0, #1
    cad4:	str	r4, [r4, #96]	; 0x60
    cad8:	bl	1b0ec <gen_bcmp>
    cadc:	mov	r5, r0
    cae0:	cmp	r4, #0
    cae4:	beq	cb18 <gen_wlanhostop+0x42c>
    cae8:	ldr	r0, [r5, #96]	; 0x60
    caec:	mov	r1, r4
    caf0:	ldr	r2, [r1, #44]	; 0x2c
    caf4:	add	r3, r1, #84	; 0x54
    caf8:	cmp	r2, #0
    cafc:	mov	r2, #84	; 0x54
    cb00:	movweq	r2, #60	; 0x3c
    cb04:	addeq	r3, r1, #60	; 0x3c
    cb08:	ldr	r1, [r1, r2]
    cb0c:	str	r0, [r3]
    cb10:	cmp	r1, #0
    cb14:	bne	caf0 <gen_wlanhostop+0x404>
    cb18:	ldr	r0, [r4, #44]	; 0x2c
    cb1c:	cmp	r5, #0
    cb20:	clz	r0, r0
    cb24:	lsr	r0, r0, #5
    cb28:	str	r0, [r4, #44]	; 0x2c
    cb2c:	ldr	r1, [r5, #44]	; 0x2c
    cb30:	clz	r0, r1
    cb34:	lsr	r0, r0, #5
    cb38:	str	r0, [r5, #44]	; 0x2c
    cb3c:	str	r5, [sp, #8]
    cb40:	beq	d5f8 <gen_wlanhostop+0xf0c>
    cb44:	cmp	r1, #0
    cb48:	mov	r1, #60	; 0x3c
    cb4c:	add	r0, r5, #60	; 0x3c
    cb50:	movweq	r1, #84	; 0x54
    cb54:	addeq	r0, r5, #84	; 0x54
    cb58:	ldr	r1, [r5, r1]
    cb5c:	cmp	r1, #0
    cb60:	beq	d5fc <gen_wlanhostop+0xf10>
    cb64:	ldr	r2, [r1, #44]	; 0x2c
    cb68:	add	r0, r1, #84	; 0x54
    cb6c:	cmp	r2, #0
    cb70:	mov	r2, #84	; 0x54
    cb74:	movweq	r2, #60	; 0x3c
    cb78:	addeq	r0, r1, #60	; 0x3c
    cb7c:	ldr	r1, [r1, r2]
    cb80:	cmp	r1, #0
    cb84:	bne	cb64 <gen_wlanhostop+0x478>
    cb88:	b	d5fc <gen_wlanhostop+0xf10>
    cb8c:	mov	r0, #1
    cb90:	mov	r1, #0
    cb94:	mov	r2, #16
    cb98:	bl	1669c <gen_load_a>
    cb9c:	ldr	r8, [pc, #4092]	; dba0 <gen_wlanhostop+0x14b4>
    cba0:	mov	r9, r0
    cba4:	add	r8, pc, r8
    cba8:	ldr	r0, [r8, #92]	; 0x5c
    cbac:	ldr	r5, [pc, #4080]	; dba4 <gen_wlanhostop+0x14b8>
    cbb0:	add	r5, pc, r5
    cbb4:	mov	r4, r5
    cbb8:	ldr	r6, [r4, r0, lsl #3]!
    cbbc:	cmp	r6, #19
    cbc0:	bhi	cd44 <gen_wlanhostop+0x658>
    cbc4:	add	r7, r0, #1
    cbc8:	cmp	r0, #15
    cbcc:	str	r7, [r8, #92]	; 0x5c
    cbd0:	bge	e858 <gen_wlanhostop+0x216c>
    cbd4:	mov	r0, #1024	; 0x400
    cbd8:	lsl	r6, r0, r7
    cbdc:	mov	r0, r6
    cbe0:	bl	f1c <malloc@plt>
    cbe4:	cmp	r0, #0
    cbe8:	str	r0, [r4, #12]
    cbec:	beq	e858 <gen_wlanhostop+0x216c>
    cbf0:	mov	r1, #0
    cbf4:	mov	r2, r6
    cbf8:	add	r4, r4, #8
    cbfc:	bl	f88 <memset@plt>
    cc00:	cmp	r6, #19
    cc04:	str	r6, [r4]
    cc08:	bhi	cd48 <gen_wlanhostop+0x65c>
    cc0c:	b	e858 <gen_wlanhostop+0x216c>
    cc10:	mov	r0, #1
    cc14:	mov	r1, #4
    cc18:	mov	r2, #6
    cc1c:	mov	r3, sl
    cc20:	sub	sp, fp, #28
    cc24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc28:	b	1b0ec <gen_bcmp>
    cc2c:	mov	r0, #1
    cc30:	mov	r1, #0
    cc34:	mov	r2, #16
    cc38:	str	sl, [sp, #4]
    cc3c:	bl	1669c <gen_load_a>
    cc40:	ldr	r8, [pc, #3936]	; dba8 <gen_wlanhostop+0x14bc>
    cc44:	mov	r5, r0
    cc48:	add	r8, pc, r8
    cc4c:	ldr	r0, [r8, #92]	; 0x5c
    cc50:	ldr	sl, [pc, #3924]	; dbac <gen_wlanhostop+0x14c0>
    cc54:	add	sl, pc, sl
    cc58:	mov	r4, sl
    cc5c:	ldr	r6, [r4, r0, lsl #3]!
    cc60:	cmp	r6, #19
    cc64:	bhi	cecc <gen_wlanhostop+0x7e0>
    cc68:	add	r7, r0, #1
    cc6c:	cmp	r0, #15
    cc70:	str	r7, [r8, #92]	; 0x5c
    cc74:	bge	e858 <gen_wlanhostop+0x216c>
    cc78:	mov	r0, #1024	; 0x400
    cc7c:	lsl	r6, r0, r7
    cc80:	mov	r0, r6
    cc84:	bl	f1c <malloc@plt>
    cc88:	cmp	r0, #0
    cc8c:	str	r0, [r4, #12]
    cc90:	beq	e858 <gen_wlanhostop+0x216c>
    cc94:	mov	r1, #0
    cc98:	mov	r2, r6
    cc9c:	add	r4, r4, #8
    cca0:	bl	f88 <memset@plt>
    cca4:	cmp	r6, #19
    cca8:	str	r6, [r4]
    ccac:	bhi	ced0 <gen_wlanhostop+0x7e4>
    ccb0:	b	e858 <gen_wlanhostop+0x216c>
    ccb4:	mov	r0, #1
    ccb8:	mov	r1, #1
    ccbc:	mov	r2, #16
    ccc0:	bl	1669c <gen_load_a>
    ccc4:	ldr	r8, [pc, #3812]	; dbb0 <gen_wlanhostop+0x14c4>
    ccc8:	mov	r9, r0
    cccc:	add	r8, pc, r8
    ccd0:	ldr	r0, [r8, #92]	; 0x5c
    ccd4:	ldr	r5, [pc, #3800]	; dbb4 <gen_wlanhostop+0x14c8>
    ccd8:	add	r5, pc, r5
    ccdc:	mov	r4, r5
    cce0:	ldr	r6, [r4, r0, lsl #3]!
    cce4:	cmp	r6, #19
    cce8:	bhi	d008 <gen_wlanhostop+0x91c>
    ccec:	add	r7, r0, #1
    ccf0:	cmp	r0, #15
    ccf4:	str	r7, [r8, #92]	; 0x5c
    ccf8:	bge	e858 <gen_wlanhostop+0x216c>
    ccfc:	mov	r0, #1024	; 0x400
    cd00:	lsl	r6, r0, r7
    cd04:	mov	r0, r6
    cd08:	bl	f1c <malloc@plt>
    cd0c:	cmp	r0, #0
    cd10:	str	r0, [r4, #12]
    cd14:	beq	e858 <gen_wlanhostop+0x216c>
    cd18:	mov	r1, #0
    cd1c:	mov	r2, r6
    cd20:	add	r4, r4, #8
    cd24:	bl	f88 <memset@plt>
    cd28:	cmp	r6, #19
    cd2c:	str	r6, [r4]
    cd30:	bhi	d00c <gen_wlanhostop+0x920>
    cd34:	b	e858 <gen_wlanhostop+0x216c>
    cd38:	add	r0, sp, #8
    cd3c:	str	r6, [r0]
    cd40:	b	d44c <gen_wlanhostop+0xd60>
    cd44:	mov	r7, r0
    cd48:	sub	r1, r6, #20
    cd4c:	mov	r2, #84	; 0x54
    cd50:	str	r1, [r4]
    cd54:	ldr	r0, [r4, #4]
    cd58:	str	r2, [r0, r1]!
    cd5c:	mov	r1, #12
    cd60:	mov	r2, r9
    cd64:	str	r1, [r0, #12]
    cd68:	mov	r1, r2
    cd6c:	ldr	r2, [r2, #16]
    cd70:	cmp	r2, #0
    cd74:	bne	cd68 <gen_wlanhostop+0x67c>
    cd78:	str	r0, [r1, #16]
    cd7c:	ldr	r6, [r5, r7, lsl #3]!
    cd80:	cmp	r6, #207	; 0xcf
    cd84:	bhi	cdd0 <gen_wlanhostop+0x6e4>
    cd88:	add	r0, r7, #1
    cd8c:	cmp	r7, #15
    cd90:	str	r0, [r8, #92]	; 0x5c
    cd94:	bge	e858 <gen_wlanhostop+0x216c>
    cd98:	mov	r1, #1024	; 0x400
    cd9c:	lsl	r6, r1, r0
    cda0:	mov	r0, r6
    cda4:	bl	f1c <malloc@plt>
    cda8:	cmp	r0, #0
    cdac:	str	r0, [r5, #12]
    cdb0:	beq	e858 <gen_wlanhostop+0x216c>
    cdb4:	mov	r1, #0
    cdb8:	mov	r2, r6
    cdbc:	add	r5, r5, #8
    cdc0:	bl	f88 <memset@plt>
    cdc4:	cmp	r6, #207	; 0xcf
    cdc8:	str	r6, [r5]
    cdcc:	bls	e858 <gen_wlanhostop+0x216c>
    cdd0:	sub	r0, r6, #208	; 0xd0
    cdd4:	mov	r2, #6
    cdd8:	mov	r3, sl
    cddc:	str	r0, [r5]
    cde0:	ldr	r1, [r5, #4]
    cde4:	add	r4, r1, r0
    cde8:	mov	r0, #21
    cdec:	mov	r1, #16
    cdf0:	str	r9, [r4, #4]
    cdf4:	str	r0, [r4, #8]
    cdf8:	mov	r0, #4
    cdfc:	str	r0, [r4, #20]
    ce00:	ldr	r0, [r4, #44]	; 0x2c
    ce04:	clz	r0, r0
    ce08:	lsr	r0, r0, #5
    ce0c:	str	r0, [r4, #44]	; 0x2c
    ce10:	mov	r0, #1
    ce14:	str	r4, [r4, #96]	; 0x60
    ce18:	bl	1b0ec <gen_bcmp>
    ce1c:	mov	r5, r0
    ce20:	cmp	r4, #0
    ce24:	beq	ce58 <gen_wlanhostop+0x76c>
    ce28:	ldr	r0, [r5, #96]	; 0x60
    ce2c:	mov	r1, r4
    ce30:	ldr	r2, [r1, #44]	; 0x2c
    ce34:	add	r3, r1, #84	; 0x54
    ce38:	cmp	r2, #0
    ce3c:	mov	r2, #84	; 0x54
    ce40:	movweq	r2, #60	; 0x3c
    ce44:	addeq	r3, r1, #60	; 0x3c
    ce48:	ldr	r1, [r1, r2]
    ce4c:	str	r0, [r3]
    ce50:	cmp	r1, #0
    ce54:	bne	ce30 <gen_wlanhostop+0x744>
    ce58:	ldr	r0, [r4, #44]	; 0x2c
    ce5c:	cmp	r5, #0
    ce60:	clz	r0, r0
    ce64:	lsr	r0, r0, #5
    ce68:	str	r0, [r4, #44]	; 0x2c
    ce6c:	ldr	r1, [r5, #44]	; 0x2c
    ce70:	clz	r0, r1
    ce74:	lsr	r0, r0, #5
    ce78:	str	r0, [r5, #44]	; 0x2c
    ce7c:	str	r5, [sp, #8]
    ce80:	beq	e82c <gen_wlanhostop+0x2140>
    ce84:	cmp	r1, #0
    ce88:	mov	r1, #60	; 0x3c
    ce8c:	add	r0, r5, #60	; 0x3c
    ce90:	movweq	r1, #84	; 0x54
    ce94:	addeq	r0, r5, #84	; 0x54
    ce98:	ldr	r1, [r5, r1]
    ce9c:	cmp	r1, #0
    cea0:	beq	e830 <gen_wlanhostop+0x2144>
    cea4:	ldr	r2, [r1, #44]	; 0x2c
    cea8:	add	r0, r1, #84	; 0x54
    ceac:	cmp	r2, #0
    ceb0:	mov	r2, #84	; 0x54
    ceb4:	movweq	r2, #60	; 0x3c
    ceb8:	addeq	r0, r1, #60	; 0x3c
    cebc:	ldr	r1, [r1, r2]
    cec0:	cmp	r1, #0
    cec4:	bne	cea4 <gen_wlanhostop+0x7b8>
    cec8:	b	e830 <gen_wlanhostop+0x2144>
    cecc:	mov	r7, r0
    ced0:	sub	r1, r6, #20
    ced4:	mov	r2, #84	; 0x54
    ced8:	str	r1, [r4]
    cedc:	ldr	r0, [r4, #4]
    cee0:	str	r2, [r0, r1]!
    cee4:	mov	r1, #12
    cee8:	mov	r2, r5
    ceec:	str	r1, [r0, #12]
    cef0:	mov	r1, r2
    cef4:	ldr	r2, [r2, #16]
    cef8:	cmp	r2, #0
    cefc:	bne	cef0 <gen_wlanhostop+0x804>
    cf00:	str	r0, [r1, #16]
    cf04:	mov	r4, sl
    cf08:	ldr	r6, [r4, r7, lsl #3]!
    cf0c:	cmp	r6, #207	; 0xcf
    cf10:	bhi	cf5c <gen_wlanhostop+0x870>
    cf14:	add	r0, r7, #1
    cf18:	cmp	r7, #15
    cf1c:	str	r0, [r8, #92]	; 0x5c
    cf20:	bge	e858 <gen_wlanhostop+0x216c>
    cf24:	mov	r1, #1024	; 0x400
    cf28:	lsl	r6, r1, r0
    cf2c:	mov	r0, r6
    cf30:	bl	f1c <malloc@plt>
    cf34:	cmp	r0, #0
    cf38:	str	r0, [r4, #12]
    cf3c:	beq	e858 <gen_wlanhostop+0x216c>
    cf40:	mov	r1, #0
    cf44:	mov	r2, r6
    cf48:	add	r4, r4, #8
    cf4c:	bl	f88 <memset@plt>
    cf50:	cmp	r6, #207	; 0xcf
    cf54:	str	r6, [r4]
    cf58:	bls	e858 <gen_wlanhostop+0x216c>
    cf5c:	sub	r0, r6, #208	; 0xd0
    cf60:	mov	r2, #16
    cf64:	str	r0, [r4]
    cf68:	ldr	r1, [r4, #4]
    cf6c:	add	r7, r1, r0
    cf70:	mov	r0, #21
    cf74:	mov	r1, #0
    cf78:	str	r5, [r7, #4]
    cf7c:	str	r0, [r7, #8]
    cf80:	mov	r0, #4
    cf84:	str	r0, [r7, #20]
    cf88:	ldr	r0, [r7, #44]	; 0x2c
    cf8c:	clz	r0, r0
    cf90:	lsr	r0, r0, #5
    cf94:	str	r0, [r7, #44]	; 0x2c
    cf98:	mov	r0, #1
    cf9c:	str	r7, [r7, #96]	; 0x60
    cfa0:	bl	1669c <gen_load_a>
    cfa4:	mov	r9, r0
    cfa8:	ldr	r0, [r8, #92]	; 0x5c
    cfac:	mov	r4, sl
    cfb0:	ldr	r6, [r4, r0, lsl #3]!
    cfb4:	cmp	r6, #19
    cfb8:	bhi	d180 <gen_wlanhostop+0xa94>
    cfbc:	add	r5, r0, #1
    cfc0:	cmp	r0, #15
    cfc4:	str	r5, [r8, #92]	; 0x5c
    cfc8:	bge	e858 <gen_wlanhostop+0x216c>
    cfcc:	mov	r0, #1024	; 0x400
    cfd0:	lsl	r6, r0, r5
    cfd4:	mov	r0, r6
    cfd8:	bl	f1c <malloc@plt>
    cfdc:	cmp	r0, #0
    cfe0:	str	r0, [r4, #12]
    cfe4:	beq	e858 <gen_wlanhostop+0x216c>
    cfe8:	mov	r1, #0
    cfec:	mov	r2, r6
    cff0:	add	r4, r4, #8
    cff4:	bl	f88 <memset@plt>
    cff8:	cmp	r6, #19
    cffc:	str	r6, [r4]
    d000:	bhi	d184 <gen_wlanhostop+0xa98>
    d004:	b	e858 <gen_wlanhostop+0x216c>
    d008:	mov	r7, r0
    d00c:	sub	r1, r6, #20
    d010:	mov	r2, #84	; 0x54
    d014:	str	r1, [r4]
    d018:	ldr	r0, [r4, #4]
    d01c:	str	r2, [r0, r1]!
    d020:	mov	r1, #3
    d024:	mov	r2, r9
    d028:	str	r1, [r0, #12]
    d02c:	mov	r1, r2
    d030:	ldr	r2, [r2, #16]
    d034:	cmp	r2, #0
    d038:	bne	d02c <gen_wlanhostop+0x940>
    d03c:	str	r0, [r1, #16]
    d040:	ldr	r6, [r5, r7, lsl #3]!
    d044:	cmp	r6, #207	; 0xcf
    d048:	bhi	d094 <gen_wlanhostop+0x9a8>
    d04c:	add	r0, r7, #1
    d050:	cmp	r7, #15
    d054:	str	r0, [r8, #92]	; 0x5c
    d058:	bge	e858 <gen_wlanhostop+0x216c>
    d05c:	mov	r1, #1024	; 0x400
    d060:	lsl	r6, r1, r0
    d064:	mov	r0, r6
    d068:	bl	f1c <malloc@plt>
    d06c:	cmp	r0, #0
    d070:	str	r0, [r5, #12]
    d074:	beq	e858 <gen_wlanhostop+0x216c>
    d078:	mov	r1, #0
    d07c:	mov	r2, r6
    d080:	add	r5, r5, #8
    d084:	bl	f88 <memset@plt>
    d088:	cmp	r6, #207	; 0xcf
    d08c:	str	r6, [r5]
    d090:	bls	e858 <gen_wlanhostop+0x216c>
    d094:	sub	r0, r6, #208	; 0xd0
    d098:	mov	r2, #6
    d09c:	mov	r3, sl
    d0a0:	str	r0, [r5]
    d0a4:	ldr	r1, [r5, #4]
    d0a8:	add	r4, r1, r0
    d0ac:	mov	r0, #21
    d0b0:	mov	r1, #24
    d0b4:	str	r9, [r4, #4]
    d0b8:	str	r0, [r4, #8]
    d0bc:	mov	r0, #3
    d0c0:	str	r0, [r4, #20]
    d0c4:	mov	r0, #1
    d0c8:	str	r4, [r4, #96]	; 0x60
    d0cc:	bl	1b0ec <gen_bcmp>
    d0d0:	mov	r5, r0
    d0d4:	cmp	r4, #0
    d0d8:	beq	d10c <gen_wlanhostop+0xa20>
    d0dc:	ldr	r0, [r5, #96]	; 0x60
    d0e0:	mov	r1, r4
    d0e4:	ldr	r2, [r1, #44]	; 0x2c
    d0e8:	add	r3, r1, #84	; 0x54
    d0ec:	cmp	r2, #0
    d0f0:	mov	r2, #84	; 0x54
    d0f4:	movweq	r2, #60	; 0x3c
    d0f8:	addeq	r3, r1, #60	; 0x3c
    d0fc:	ldr	r1, [r1, r2]
    d100:	str	r0, [r3]
    d104:	cmp	r1, #0
    d108:	bne	d0e4 <gen_wlanhostop+0x9f8>
    d10c:	ldr	r0, [r4, #44]	; 0x2c
    d110:	cmp	r5, #0
    d114:	clz	r0, r0
    d118:	lsr	r0, r0, #5
    d11c:	str	r0, [r4, #44]	; 0x2c
    d120:	ldr	r1, [r5, #44]	; 0x2c
    d124:	clz	r0, r1
    d128:	lsr	r0, r0, #5
    d12c:	str	r0, [r5, #44]	; 0x2c
    d130:	str	r5, [sp, #8]
    d134:	beq	e82c <gen_wlanhostop+0x2140>
    d138:	cmp	r1, #0
    d13c:	mov	r1, #60	; 0x3c
    d140:	add	r0, r5, #60	; 0x3c
    d144:	movweq	r1, #84	; 0x54
    d148:	addeq	r0, r5, #84	; 0x54
    d14c:	ldr	r1, [r5, r1]
    d150:	cmp	r1, #0
    d154:	beq	e830 <gen_wlanhostop+0x2144>
    d158:	ldr	r2, [r1, #44]	; 0x2c
    d15c:	add	r0, r1, #84	; 0x54
    d160:	cmp	r2, #0
    d164:	mov	r2, #84	; 0x54
    d168:	movweq	r2, #60	; 0x3c
    d16c:	addeq	r0, r1, #60	; 0x3c
    d170:	ldr	r1, [r1, r2]
    d174:	cmp	r1, #0
    d178:	bne	d158 <gen_wlanhostop+0xa6c>
    d17c:	b	e830 <gen_wlanhostop+0x2144>
    d180:	mov	r5, r0
    d184:	sub	r1, r6, #20
    d188:	mov	r2, #84	; 0x54
    d18c:	str	r1, [r4]
    d190:	ldr	r0, [r4, #4]
    d194:	str	r2, [r0, r1]!
    d198:	mov	r1, #240	; 0xf0
    d19c:	mov	r2, r9
    d1a0:	str	r1, [r0, #12]
    d1a4:	mov	r1, r2
    d1a8:	ldr	r2, [r2, #16]
    d1ac:	cmp	r2, #0
    d1b0:	bne	d1a4 <gen_wlanhostop+0xab8>
    d1b4:	str	r0, [r1, #16]
    d1b8:	mov	r4, sl
    d1bc:	ldr	r6, [r4, r5, lsl #3]!
    d1c0:	cmp	r6, #207	; 0xcf
    d1c4:	bhi	d210 <gen_wlanhostop+0xb24>
    d1c8:	add	r0, r5, #1
    d1cc:	cmp	r5, #15
    d1d0:	str	r0, [r8, #92]	; 0x5c
    d1d4:	bge	e858 <gen_wlanhostop+0x216c>
    d1d8:	mov	r1, #1024	; 0x400
    d1dc:	lsl	r6, r1, r0
    d1e0:	mov	r0, r6
    d1e4:	bl	f1c <malloc@plt>
    d1e8:	cmp	r0, #0
    d1ec:	str	r0, [r4, #12]
    d1f0:	beq	e858 <gen_wlanhostop+0x216c>
    d1f4:	mov	r1, #0
    d1f8:	mov	r2, r6
    d1fc:	add	r4, r4, #8
    d200:	bl	f88 <memset@plt>
    d204:	cmp	r6, #207	; 0xcf
    d208:	str	r6, [r4]
    d20c:	bls	e858 <gen_wlanhostop+0x216c>
    d210:	sub	r0, r6, #208	; 0xd0
    d214:	mov	r2, #16
    d218:	str	r0, [r4]
    d21c:	ldr	r1, [r4, #4]
    d220:	add	r5, r1, r0
    d224:	mov	r0, #21
    d228:	mov	r1, #0
    d22c:	str	r9, [r5, #4]
    d230:	str	r0, [r5, #8]
    d234:	mov	r0, #192	; 0xc0
    d238:	str	r0, [r5, #20]
    d23c:	ldr	r0, [r5, #44]	; 0x2c
    d240:	clz	r0, r0
    d244:	lsr	r0, r0, #5
    d248:	str	r0, [r5, #44]	; 0x2c
    d24c:	mov	r0, #1
    d250:	str	r5, [r5, #96]	; 0x60
    d254:	bl	1669c <gen_load_a>
    d258:	mov	r9, r0
    d25c:	ldr	r0, [r8, #92]	; 0x5c
    d260:	mov	r4, sl
    d264:	ldr	r6, [r4, r0, lsl #3]!
    d268:	cmp	r6, #19
    d26c:	bhi	d2c0 <gen_wlanhostop+0xbd4>
    d270:	mov	r1, r8
    d274:	add	r8, r0, #1
    d278:	cmp	r0, #15
    d27c:	str	r8, [r1, #92]	; 0x5c
    d280:	bge	e858 <gen_wlanhostop+0x216c>
    d284:	mov	r0, #1024	; 0x400
    d288:	lsl	r6, r0, r8
    d28c:	mov	r0, r6
    d290:	bl	f1c <malloc@plt>
    d294:	cmp	r0, #0
    d298:	str	r0, [r4, #12]
    d29c:	beq	e858 <gen_wlanhostop+0x216c>
    d2a0:	mov	r1, #0
    d2a4:	mov	r2, r6
    d2a8:	add	r4, r4, #8
    d2ac:	bl	f88 <memset@plt>
    d2b0:	cmp	r6, #19
    d2b4:	str	r6, [r4]
    d2b8:	bhi	d2c4 <gen_wlanhostop+0xbd8>
    d2bc:	b	e858 <gen_wlanhostop+0x216c>
    d2c0:	mov	r8, r0
    d2c4:	sub	r1, r6, #20
    d2c8:	mov	r2, #84	; 0x54
    d2cc:	str	r1, [r4]
    d2d0:	ldr	r0, [r4, #4]
    d2d4:	str	r2, [r0, r1]!
    d2d8:	mov	r1, #240	; 0xf0
    d2dc:	mov	r2, r9
    d2e0:	str	r1, [r0, #12]
    d2e4:	mov	r1, r2
    d2e8:	ldr	r2, [r2, #16]
    d2ec:	cmp	r2, #0
    d2f0:	bne	d2e4 <gen_wlanhostop+0xbf8>
    d2f4:	str	r0, [r1, #16]
    d2f8:	ldr	r6, [sl, r8, lsl #3]!
    d2fc:	cmp	r6, #207	; 0xcf
    d300:	bhi	d354 <gen_wlanhostop+0xc68>
    d304:	ldr	r1, [pc, #4040]	; e2d4 <gen_wlanhostop+0x1be8>
    d308:	add	r0, r8, #1
    d30c:	cmp	r8, #15
    d310:	add	r1, pc, r1
    d314:	str	r0, [r1, #92]	; 0x5c
    d318:	bge	e858 <gen_wlanhostop+0x216c>
    d31c:	mov	r1, #1024	; 0x400
    d320:	lsl	r6, r1, r0
    d324:	mov	r0, r6
    d328:	bl	f1c <malloc@plt>
    d32c:	cmp	r0, #0
    d330:	str	r0, [sl, #12]
    d334:	beq	e858 <gen_wlanhostop+0x216c>
    d338:	mov	r1, #0
    d33c:	mov	r2, r6
    d340:	add	sl, sl, #8
    d344:	bl	f88 <memset@plt>
    d348:	cmp	r6, #207	; 0xcf
    d34c:	str	r6, [sl]
    d350:	bls	e858 <gen_wlanhostop+0x216c>
    d354:	sub	r0, r6, #208	; 0xd0
    d358:	cmp	r5, #0
    d35c:	str	r0, [sl]
    d360:	ldr	r1, [sl, #4]
    d364:	add	r4, r1, r0
    d368:	mov	r0, #21
    d36c:	str	r9, [r4, #4]
    d370:	str	r0, [r4, #8]
    d374:	mov	r0, #208	; 0xd0
    d378:	str	r0, [r4, #20]
    d37c:	ldr	r0, [r4, #44]	; 0x2c
    d380:	clz	r0, r0
    d384:	lsr	r0, r0, #5
    d388:	str	r0, [r4, #44]	; 0x2c
    d38c:	str	r4, [r4, #96]	; 0x60
    d390:	beq	d3c0 <gen_wlanhostop+0xcd4>
    d394:	mov	r0, r5
    d398:	ldr	r1, [r0, #44]	; 0x2c
    d39c:	add	r2, r0, #84	; 0x54
    d3a0:	cmp	r1, #0
    d3a4:	mov	r1, #84	; 0x54
    d3a8:	movweq	r1, #60	; 0x3c
    d3ac:	addeq	r2, r0, #60	; 0x3c
    d3b0:	ldr	r0, [r0, r1]
    d3b4:	str	r4, [r2]
    d3b8:	cmp	r0, #0
    d3bc:	bne	d398 <gen_wlanhostop+0xcac>
    d3c0:	ldr	r0, [r5, #44]	; 0x2c
    d3c4:	ldr	r3, [sp, #4]
    d3c8:	cmp	r4, #0
    d3cc:	clz	r0, r0
    d3d0:	lsr	r0, r0, #5
    d3d4:	str	r0, [r5, #44]	; 0x2c
    d3d8:	ldr	r0, [r4, #44]	; 0x2c
    d3dc:	clz	r1, r0
    d3e0:	lsr	r1, r1, #5
    d3e4:	str	r1, [r4, #44]	; 0x2c
    d3e8:	str	r4, [sp, #8]
    d3ec:	beq	e6a4 <gen_wlanhostop+0x1fb8>
    d3f0:	mov	r2, #60	; 0x3c
    d3f4:	cmp	r0, #0
    d3f8:	mov	r1, r4
    d3fc:	movweq	r2, #84	; 0x54
    d400:	ldr	r0, [r1, r2]!
    d404:	cmp	r0, #0
    d408:	beq	e6a8 <gen_wlanhostop+0x1fbc>
    d40c:	ldr	r2, [r0, #44]	; 0x2c
    d410:	add	r1, r0, #84	; 0x54
    d414:	cmp	r2, #0
    d418:	mov	r2, #84	; 0x54
    d41c:	movweq	r2, #60	; 0x3c
    d420:	addeq	r1, r0, #60	; 0x3c
    d424:	ldr	r0, [r0, r2]
    d428:	cmp	r0, #0
    d42c:	bne	d40c <gen_wlanhostop+0xd20>
    d430:	b	e6a8 <gen_wlanhostop+0x1fbc>
    d434:	add	r0, sp, #8
    d438:	str	r6, [r0]
    d43c:	ldr	r0, [r5, #44]	; 0x2c
    d440:	clz	r0, r0
    d444:	lsr	r0, r0, #5
    d448:	str	r0, [r5, #44]	; 0x2c
    d44c:	ldr	r0, [r6, #96]	; 0x60
    d450:	str	r0, [r5, #96]	; 0x60
    d454:	mov	r0, r5
    d458:	sub	sp, fp, #28
    d45c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d460:	add	r0, sp, #8
    d464:	str	r4, [r0]
    d468:	mov	r1, #1
    d46c:	mov	r2, #16
    d470:	mov	r9, #1
    d474:	ldr	r0, [r5, #44]	; 0x2c
    d478:	clz	r0, r0
    d47c:	lsr	r0, r0, #5
    d480:	str	r0, [r5, #44]	; 0x2c
    d484:	ldr	r0, [r4, #96]	; 0x60
    d488:	str	r0, [r5, #96]	; 0x60
    d48c:	mov	r0, #1
    d490:	bl	1669c <gen_load_a>
    d494:	ldr	r2, [pc, #4036]	; e460 <gen_wlanhostop+0x1d74>
    d498:	mov	r6, r0
    d49c:	mov	r4, r8
    d4a0:	add	r2, pc, r2
    d4a4:	ldr	r0, [r2, #92]	; 0x5c
    d4a8:	ldr	r7, [r4, r0, lsl #3]!
    d4ac:	cmp	r7, #207	; 0xcf
    d4b0:	bhi	d4fc <gen_wlanhostop+0xe10>
    d4b4:	add	r1, r0, #1
    d4b8:	cmp	r0, #15
    d4bc:	str	r1, [r2, #92]	; 0x5c
    d4c0:	bge	e858 <gen_wlanhostop+0x216c>
    d4c4:	mov	r0, #1024	; 0x400
    d4c8:	lsl	r7, r0, r1
    d4cc:	mov	r0, r7
    d4d0:	bl	f1c <malloc@plt>
    d4d4:	cmp	r0, #0
    d4d8:	str	r0, [r4, #12]
    d4dc:	beq	e858 <gen_wlanhostop+0x216c>
    d4e0:	mov	r1, #0
    d4e4:	mov	r2, r7
    d4e8:	add	r4, r4, #8
    d4ec:	bl	f88 <memset@plt>
    d4f0:	cmp	r7, #207	; 0xcf
    d4f4:	str	r7, [r4]
    d4f8:	bls	e858 <gen_wlanhostop+0x216c>
    d4fc:	sub	r0, r7, #208	; 0xd0
    d500:	mov	r2, #6
    d504:	mov	r3, sl
    d508:	str	r0, [r4]
    d50c:	ldr	r1, [r4, #4]
    d510:	add	r4, r1, r0
    d514:	mov	r0, #69	; 0x45
    d518:	mov	r1, #16
    d51c:	str	r9, [r4, #20]
    d520:	str	r6, [r4, #4]
    d524:	str	r0, [r4, #8]
    d528:	ldr	r0, [r4, #44]	; 0x2c
    d52c:	clz	r0, r0
    d530:	lsr	r0, r0, #5
    d534:	str	r0, [r4, #44]	; 0x2c
    d538:	mov	r0, #1
    d53c:	str	r4, [r4, #96]	; 0x60
    d540:	bl	1b0ec <gen_bcmp>
    d544:	cmp	r4, #0
    d548:	beq	d57c <gen_wlanhostop+0xe90>
    d54c:	ldr	r1, [r0, #96]	; 0x60
    d550:	mov	r2, r4
    d554:	ldr	r3, [r2, #44]	; 0x2c
    d558:	add	r7, r2, #84	; 0x54
    d55c:	cmp	r3, #0
    d560:	mov	r3, #84	; 0x54
    d564:	movweq	r3, #60	; 0x3c
    d568:	addeq	r7, r2, #60	; 0x3c
    d56c:	ldr	r2, [r2, r3]
    d570:	str	r1, [r7]
    d574:	cmp	r2, #0
    d578:	bne	d554 <gen_wlanhostop+0xe68>
    d57c:	ldr	r1, [r4, #44]	; 0x2c
    d580:	cmp	r0, #0
    d584:	clz	r1, r1
    d588:	lsr	r1, r1, #5
    d58c:	str	r1, [r4, #44]	; 0x2c
    d590:	ldr	r2, [r0, #44]	; 0x2c
    d594:	clz	r1, r2
    d598:	lsr	r1, r1, #5
    d59c:	str	r1, [r0, #44]	; 0x2c
    d5a0:	str	r0, [sp, #8]
    d5a4:	ldr	r9, [pc, #3944]	; e514 <gen_wlanhostop+0x1e28>
    d5a8:	add	r9, pc, r9
    d5ac:	beq	d790 <gen_wlanhostop+0x10a4>
    d5b0:	cmp	r2, #0
    d5b4:	mov	r2, #60	; 0x3c
    d5b8:	add	r1, r0, #60	; 0x3c
    d5bc:	movweq	r2, #84	; 0x54
    d5c0:	addeq	r1, r0, #84	; 0x54
    d5c4:	ldr	r2, [r0, r2]
    d5c8:	cmp	r2, #0
    d5cc:	beq	d794 <gen_wlanhostop+0x10a8>
    d5d0:	ldr	r3, [r2, #44]	; 0x2c
    d5d4:	add	r1, r2, #84	; 0x54
    d5d8:	cmp	r3, #0
    d5dc:	mov	r3, #84	; 0x54
    d5e0:	movweq	r3, #60	; 0x3c
    d5e4:	addeq	r1, r2, #60	; 0x3c
    d5e8:	ldr	r2, [r2, r3]
    d5ec:	cmp	r2, #0
    d5f0:	bne	d5d0 <gen_wlanhostop+0xee4>
    d5f4:	b	d794 <gen_wlanhostop+0x10a8>
    d5f8:	add	r0, sp, #8
    d5fc:	str	r4, [r0]
    d600:	mov	r1, #1
    d604:	mov	r2, #16
    d608:	mov	r9, #1
    d60c:	ldr	r0, [r5, #44]	; 0x2c
    d610:	clz	r0, r0
    d614:	lsr	r0, r0, #5
    d618:	str	r0, [r5, #44]	; 0x2c
    d61c:	ldr	r0, [r4, #96]	; 0x60
    d620:	str	r0, [r5, #96]	; 0x60
    d624:	mov	r0, #1
    d628:	bl	1669c <gen_load_a>
    d62c:	ldr	r2, [pc, #3812]	; e518 <gen_wlanhostop+0x1e2c>
    d630:	mov	r6, r0
    d634:	mov	r4, r8
    d638:	add	r2, pc, r2
    d63c:	ldr	r0, [r2, #92]	; 0x5c
    d640:	ldr	r7, [r4, r0, lsl #3]!
    d644:	cmp	r7, #207	; 0xcf
    d648:	bhi	d694 <gen_wlanhostop+0xfa8>
    d64c:	add	r1, r0, #1
    d650:	cmp	r0, #15
    d654:	str	r1, [r2, #92]	; 0x5c
    d658:	bge	e858 <gen_wlanhostop+0x216c>
    d65c:	mov	r0, #1024	; 0x400
    d660:	lsl	r7, r0, r1
    d664:	mov	r0, r7
    d668:	bl	f1c <malloc@plt>
    d66c:	cmp	r0, #0
    d670:	str	r0, [r4, #12]
    d674:	beq	e858 <gen_wlanhostop+0x216c>
    d678:	mov	r1, #0
    d67c:	mov	r2, r7
    d680:	add	r4, r4, #8
    d684:	bl	f88 <memset@plt>
    d688:	cmp	r7, #207	; 0xcf
    d68c:	str	r7, [r4]
    d690:	bls	e858 <gen_wlanhostop+0x216c>
    d694:	sub	r0, r7, #208	; 0xd0
    d698:	mov	r2, #6
    d69c:	mov	r3, sl
    d6a0:	str	r0, [r4]
    d6a4:	ldr	r1, [r4, #4]
    d6a8:	add	r4, r1, r0
    d6ac:	mov	r0, #69	; 0x45
    d6b0:	mov	r1, #4
    d6b4:	str	r9, [r4, #20]
    d6b8:	str	r6, [r4, #4]
    d6bc:	str	r0, [r4, #8]
    d6c0:	ldr	r0, [r4, #44]	; 0x2c
    d6c4:	clz	r0, r0
    d6c8:	lsr	r0, r0, #5
    d6cc:	str	r0, [r4, #44]	; 0x2c
    d6d0:	mov	r0, #1
    d6d4:	str	r4, [r4, #96]	; 0x60
    d6d8:	bl	1b0ec <gen_bcmp>
    d6dc:	cmp	r4, #0
    d6e0:	beq	d714 <gen_wlanhostop+0x1028>
    d6e4:	ldr	r1, [r0, #96]	; 0x60
    d6e8:	mov	r2, r4
    d6ec:	ldr	r3, [r2, #44]	; 0x2c
    d6f0:	add	r7, r2, #84	; 0x54
    d6f4:	cmp	r3, #0
    d6f8:	mov	r3, #84	; 0x54
    d6fc:	movweq	r3, #60	; 0x3c
    d700:	addeq	r7, r2, #60	; 0x3c
    d704:	ldr	r2, [r2, r3]
    d708:	str	r1, [r7]
    d70c:	cmp	r2, #0
    d710:	bne	d6ec <gen_wlanhostop+0x1000>
    d714:	ldr	r1, [r4, #44]	; 0x2c
    d718:	cmp	r0, #0
    d71c:	clz	r1, r1
    d720:	lsr	r1, r1, #5
    d724:	str	r1, [r4, #44]	; 0x2c
    d728:	ldr	r2, [r0, #44]	; 0x2c
    d72c:	clz	r1, r2
    d730:	lsr	r1, r1, #5
    d734:	str	r1, [r0, #44]	; 0x2c
    d738:	str	r0, [sp, #8]
    d73c:	ldr	r9, [pc, #4004]	; e6e8 <gen_wlanhostop+0x1ffc>
    d740:	add	r9, pc, r9
    d744:	beq	d840 <gen_wlanhostop+0x1154>
    d748:	cmp	r2, #0
    d74c:	mov	r2, #60	; 0x3c
    d750:	add	r1, r0, #60	; 0x3c
    d754:	movweq	r2, #84	; 0x54
    d758:	addeq	r1, r0, #84	; 0x54
    d75c:	ldr	r2, [r0, r2]
    d760:	cmp	r2, #0
    d764:	beq	d844 <gen_wlanhostop+0x1158>
    d768:	ldr	r3, [r2, #44]	; 0x2c
    d76c:	add	r1, r2, #84	; 0x54
    d770:	cmp	r3, #0
    d774:	mov	r3, #84	; 0x54
    d778:	movweq	r3, #60	; 0x3c
    d77c:	addeq	r1, r2, #60	; 0x3c
    d780:	ldr	r2, [r2, r3]
    d784:	cmp	r2, #0
    d788:	bne	d768 <gen_wlanhostop+0x107c>
    d78c:	b	d844 <gen_wlanhostop+0x1158>
    d790:	add	r1, sp, #8
    d794:	str	r4, [r1]
    d798:	ldr	r1, [r0, #44]	; 0x2c
    d79c:	clz	r2, r1
    d7a0:	cmp	r1, #0
    d7a4:	lsr	r2, r2, #5
    d7a8:	movwne	r1, #1
    d7ac:	cmp	r0, #0
    d7b0:	str	r2, [r0, #44]	; 0x2c
    d7b4:	ldr	r2, [r4, #96]	; 0x60
    d7b8:	str	r1, [r0, #44]	; 0x2c
    d7bc:	str	r2, [r0, #96]	; 0x60
    d7c0:	beq	d7fc <gen_wlanhostop+0x1110>
    d7c4:	ldr	r2, [r5, #96]	; 0x60
    d7c8:	mov	r3, r0
    d7cc:	b	d7d4 <gen_wlanhostop+0x10e8>
    d7d0:	ldr	r1, [r3, #44]	; 0x2c
    d7d4:	cmp	r1, #0
    d7d8:	mov	r1, #84	; 0x54
    d7dc:	add	r7, r3, #84	; 0x54
    d7e0:	movweq	r1, #60	; 0x3c
    d7e4:	addeq	r7, r3, #60	; 0x3c
    d7e8:	ldr	r3, [r3, r1]
    d7ec:	str	r2, [r7]
    d7f0:	cmp	r3, #0
    d7f4:	bne	d7d0 <gen_wlanhostop+0x10e4>
    d7f8:	ldr	r1, [r0, #44]	; 0x2c
    d7fc:	clz	r1, r1
    d800:	cmp	r5, #0
    d804:	lsr	r1, r1, #5
    d808:	str	r1, [r0, #44]	; 0x2c
    d80c:	str	r5, [sp, #8]
    d810:	beq	d900 <gen_wlanhostop+0x1214>
    d814:	mov	r2, r5
    d818:	ldr	r3, [r2, #44]	; 0x2c
    d81c:	add	r1, r2, #84	; 0x54
    d820:	cmp	r3, #0
    d824:	mov	r3, #84	; 0x54
    d828:	movweq	r3, #60	; 0x3c
    d82c:	addeq	r1, r2, #60	; 0x3c
    d830:	ldr	r2, [r2, r3]
    d834:	cmp	r2, #0
    d838:	bne	d818 <gen_wlanhostop+0x112c>
    d83c:	b	d904 <gen_wlanhostop+0x1218>
    d840:	add	r1, sp, #8
    d844:	str	r4, [r1]
    d848:	ldr	r1, [r0, #44]	; 0x2c
    d84c:	clz	r2, r1
    d850:	cmp	r1, #0
    d854:	lsr	r2, r2, #5
    d858:	movwne	r1, #1
    d85c:	cmp	r0, #0
    d860:	str	r2, [r0, #44]	; 0x2c
    d864:	ldr	r2, [r4, #96]	; 0x60
    d868:	str	r1, [r0, #44]	; 0x2c
    d86c:	str	r2, [r0, #96]	; 0x60
    d870:	beq	d8b4 <gen_wlanhostop+0x11c8>
    d874:	ldr	r2, [r5, #96]	; 0x60
    d878:	mov	r3, r0
    d87c:	b	d88c <gen_wlanhostop+0x11a0>
    d880:	.word	0x00039c10
    d884:	.word	0x00039b44
    d888:	ldr	r1, [r3, #44]	; 0x2c
    d88c:	cmp	r1, #0
    d890:	mov	r1, #84	; 0x54
    d894:	add	r7, r3, #84	; 0x54
    d898:	movweq	r1, #60	; 0x3c
    d89c:	addeq	r7, r3, #60	; 0x3c
    d8a0:	ldr	r3, [r3, r1]
    d8a4:	str	r2, [r7]
    d8a8:	cmp	r3, #0
    d8ac:	bne	d888 <gen_wlanhostop+0x119c>
    d8b0:	ldr	r1, [r0, #44]	; 0x2c
    d8b4:	clz	r1, r1
    d8b8:	cmp	r5, #0
    d8bc:	lsr	r1, r1, #5
    d8c0:	str	r1, [r0, #44]	; 0x2c
    d8c4:	str	r5, [sp, #8]
    d8c8:	beq	da50 <gen_wlanhostop+0x1364>
    d8cc:	mov	r2, r5
    d8d0:	ldr	r3, [r2, #44]	; 0x2c
    d8d4:	add	r1, r2, #84	; 0x54
    d8d8:	cmp	r3, #0
    d8dc:	mov	r3, #84	; 0x54
    d8e0:	movweq	r3, #60	; 0x3c
    d8e4:	addeq	r1, r2, #60	; 0x3c
    d8e8:	ldr	r2, [r2, r3]
    d8ec:	cmp	r2, #0
    d8f0:	bne	d8d0 <gen_wlanhostop+0x11e4>
    d8f4:	b	da54 <gen_wlanhostop+0x1368>
    d8f8:	.word	0x00039aa4
    d8fc:	.word	0x000399d8
    d900:	add	r1, sp, #8
    d904:	str	r0, [r1]
    d908:	mov	r1, #1
    d90c:	mov	r2, #16
    d910:	ldr	r0, [r0, #96]	; 0x60
    d914:	str	r0, [r5, #96]	; 0x60
    d918:	mov	r0, #1
    d91c:	bl	1669c <gen_load_a>
    d920:	mov	r6, r0
    d924:	ldr	r0, [r9, #92]	; 0x5c
    d928:	mov	r4, r8
    d92c:	ldr	r7, [r4, r0, lsl #3]!
    d930:	cmp	r7, #207	; 0xcf
    d934:	bhi	d980 <gen_wlanhostop+0x1294>
    d938:	add	r1, r0, #1
    d93c:	cmp	r0, #15
    d940:	str	r1, [r9, #92]	; 0x5c
    d944:	bge	e858 <gen_wlanhostop+0x216c>
    d948:	mov	r0, #1024	; 0x400
    d94c:	lsl	r7, r0, r1
    d950:	mov	r0, r7
    d954:	bl	f1c <malloc@plt>
    d958:	cmp	r0, #0
    d95c:	str	r0, [r4, #12]
    d960:	beq	e858 <gen_wlanhostop+0x216c>
    d964:	mov	r1, #0
    d968:	mov	r2, r7
    d96c:	add	r4, r4, #8
    d970:	bl	f88 <memset@plt>
    d974:	cmp	r7, #207	; 0xcf
    d978:	str	r7, [r4]
    d97c:	bls	e858 <gen_wlanhostop+0x216c>
    d980:	sub	r0, r7, #208	; 0xd0
    d984:	mov	r2, #2
    d988:	str	r0, [r4]
    d98c:	ldr	r1, [r4, #4]
    d990:	adds	r0, r1, r0
    d994:	mov	r1, #69	; 0x45
    d998:	str	r2, [r0, #20]
    d99c:	str	r6, [r0, #4]
    d9a0:	str	r1, [r0, #8]
    d9a4:	str	r0, [r0, #96]	; 0x60
    d9a8:	beq	d9dc <gen_wlanhostop+0x12f0>
    d9ac:	ldr	r1, [r5, #96]	; 0x60
    d9b0:	mov	r2, r0
    d9b4:	ldr	r3, [r2, #44]	; 0x2c
    d9b8:	add	r7, r2, #84	; 0x54
    d9bc:	cmp	r3, #0
    d9c0:	mov	r3, #84	; 0x54
    d9c4:	movweq	r3, #60	; 0x3c
    d9c8:	addeq	r7, r2, #60	; 0x3c
    d9cc:	ldr	r2, [r2, r3]
    d9d0:	str	r1, [r7]
    d9d4:	cmp	r2, #0
    d9d8:	bne	d9b4 <gen_wlanhostop+0x12c8>
    d9dc:	ldr	r1, [r0, #44]	; 0x2c
    d9e0:	cmp	r5, #0
    d9e4:	clz	r1, r1
    d9e8:	lsr	r1, r1, #5
    d9ec:	str	r1, [r0, #44]	; 0x2c
    d9f0:	ldr	r2, [r5, #44]	; 0x2c
    d9f4:	clz	r1, r2
    d9f8:	lsr	r1, r1, #5
    d9fc:	str	r1, [r5, #44]	; 0x2c
    da00:	str	r5, [sp, #8]
    da04:	beq	dbb8 <gen_wlanhostop+0x14cc>
    da08:	cmp	r2, #0
    da0c:	mov	r2, #60	; 0x3c
    da10:	add	r1, r5, #60	; 0x3c
    da14:	movweq	r2, #84	; 0x54
    da18:	addeq	r1, r5, #84	; 0x54
    da1c:	ldr	r2, [r5, r2]
    da20:	cmp	r2, #0
    da24:	beq	dbbc <gen_wlanhostop+0x14d0>
    da28:	ldr	r3, [r2, #44]	; 0x2c
    da2c:	add	r1, r2, #84	; 0x54
    da30:	cmp	r3, #0
    da34:	mov	r3, #84	; 0x54
    da38:	movweq	r3, #60	; 0x3c
    da3c:	addeq	r1, r2, #60	; 0x3c
    da40:	ldr	r2, [r2, r3]
    da44:	cmp	r2, #0
    da48:	bne	da28 <gen_wlanhostop+0x133c>
    da4c:	b	dbbc <gen_wlanhostop+0x14d0>
    da50:	add	r1, sp, #8
    da54:	str	r0, [r1]
    da58:	mov	r1, #0
    da5c:	mov	r2, #16
    da60:	ldr	r0, [r0, #96]	; 0x60
    da64:	str	r0, [r5, #96]	; 0x60
    da68:	mov	r0, #1
    da6c:	bl	1669c <gen_load_a>
    da70:	mov	r6, r0
    da74:	ldr	r0, [r9, #92]	; 0x5c
    da78:	mov	r4, r8
    da7c:	ldr	r7, [r4, r0, lsl #3]!
    da80:	cmp	r7, #207	; 0xcf
    da84:	bhi	dad0 <gen_wlanhostop+0x13e4>
    da88:	add	r1, r0, #1
    da8c:	cmp	r0, #15
    da90:	str	r1, [r9, #92]	; 0x5c
    da94:	bge	e858 <gen_wlanhostop+0x216c>
    da98:	mov	r0, #1024	; 0x400
    da9c:	lsl	r7, r0, r1
    daa0:	mov	r0, r7
    daa4:	bl	f1c <malloc@plt>
    daa8:	cmp	r0, #0
    daac:	str	r0, [r4, #12]
    dab0:	beq	e858 <gen_wlanhostop+0x216c>
    dab4:	mov	r1, #0
    dab8:	mov	r2, r7
    dabc:	add	r4, r4, #8
    dac0:	bl	f88 <memset@plt>
    dac4:	cmp	r7, #207	; 0xcf
    dac8:	str	r7, [r4]
    dacc:	bls	e858 <gen_wlanhostop+0x216c>
    dad0:	sub	r0, r7, #208	; 0xd0
    dad4:	mov	r2, #8
    dad8:	str	r0, [r4]
    dadc:	ldr	r1, [r4, #4]
    dae0:	adds	r0, r1, r0
    dae4:	mov	r1, #69	; 0x45
    dae8:	str	r2, [r0, #20]
    daec:	str	r6, [r0, #4]
    daf0:	str	r1, [r0, #8]
    daf4:	str	r0, [r0, #96]	; 0x60
    daf8:	beq	db2c <gen_wlanhostop+0x1440>
    dafc:	ldr	r1, [r5, #96]	; 0x60
    db00:	mov	r2, r0
    db04:	ldr	r3, [r2, #44]	; 0x2c
    db08:	add	r7, r2, #84	; 0x54
    db0c:	cmp	r3, #0
    db10:	mov	r3, #84	; 0x54
    db14:	movweq	r3, #60	; 0x3c
    db18:	addeq	r7, r2, #60	; 0x3c
    db1c:	ldr	r2, [r2, r3]
    db20:	str	r1, [r7]
    db24:	cmp	r2, #0
    db28:	bne	db04 <gen_wlanhostop+0x1418>
    db2c:	ldr	r1, [r0, #44]	; 0x2c
    db30:	cmp	r5, #0
    db34:	clz	r1, r1
    db38:	lsr	r1, r1, #5
    db3c:	str	r1, [r0, #44]	; 0x2c
    db40:	ldr	r2, [r5, #44]	; 0x2c
    db44:	clz	r1, r2
    db48:	lsr	r1, r1, #5
    db4c:	str	r1, [r5, #44]	; 0x2c
    db50:	str	r5, [sp, #8]
    db54:	beq	dd40 <gen_wlanhostop+0x1654>
    db58:	cmp	r2, #0
    db5c:	mov	r2, #60	; 0x3c
    db60:	add	r1, r5, #60	; 0x3c
    db64:	movweq	r2, #84	; 0x54
    db68:	addeq	r1, r5, #84	; 0x54
    db6c:	ldr	r2, [r5, r2]
    db70:	cmp	r2, #0
    db74:	beq	dd44 <gen_wlanhostop+0x1658>
    db78:	ldr	r3, [r2, #44]	; 0x2c
    db7c:	add	r1, r2, #84	; 0x54
    db80:	cmp	r3, #0
    db84:	mov	r3, #84	; 0x54
    db88:	movweq	r3, #60	; 0x3c
    db8c:	addeq	r1, r2, #60	; 0x3c
    db90:	ldr	r2, [r2, r3]
    db94:	cmp	r2, #0
    db98:	bne	db78 <gen_wlanhostop+0x148c>
    db9c:	b	dd44 <gen_wlanhostop+0x1658>
    dba0:	.word	0x0003993c
    dba4:	.word	0x00039870
    dba8:	.word	0x00039898
    dbac:	.word	0x000397cc
    dbb0:	.word	0x00039814
    dbb4:	.word	0x00039748
    dbb8:	add	r1, sp, #8
    dbbc:	str	r0, [r1]
    dbc0:	mov	r2, #16
    dbc4:	ldr	r1, [r5, #44]	; 0x2c
    dbc8:	clz	r1, r1
    dbcc:	lsr	r1, r1, #5
    dbd0:	str	r1, [r5, #44]	; 0x2c
    dbd4:	mov	r1, #1
    dbd8:	ldr	r0, [r0, #96]	; 0x60
    dbdc:	str	r0, [r5, #96]	; 0x60
    dbe0:	mov	r0, #1
    dbe4:	bl	1669c <gen_load_a>
    dbe8:	mov	r6, r0
    dbec:	ldr	r0, [r9, #92]	; 0x5c
    dbf0:	mov	r4, r8
    dbf4:	ldr	r7, [r4, r0, lsl #3]!
    dbf8:	cmp	r7, #207	; 0xcf
    dbfc:	bhi	dc48 <gen_wlanhostop+0x155c>
    dc00:	add	r1, r0, #1
    dc04:	cmp	r0, #15
    dc08:	str	r1, [r9, #92]	; 0x5c
    dc0c:	bge	e858 <gen_wlanhostop+0x216c>
    dc10:	mov	r0, #1024	; 0x400
    dc14:	lsl	r7, r0, r1
    dc18:	mov	r0, r7
    dc1c:	bl	f1c <malloc@plt>
    dc20:	cmp	r0, #0
    dc24:	str	r0, [r4, #12]
    dc28:	beq	e858 <gen_wlanhostop+0x216c>
    dc2c:	mov	r1, #0
    dc30:	mov	r2, r7
    dc34:	add	r4, r4, #8
    dc38:	bl	f88 <memset@plt>
    dc3c:	cmp	r7, #207	; 0xcf
    dc40:	str	r7, [r4]
    dc44:	bls	e858 <gen_wlanhostop+0x216c>
    dc48:	sub	r0, r7, #208	; 0xd0
    dc4c:	mov	r2, #6
    dc50:	mov	r3, sl
    dc54:	str	r0, [r4]
    dc58:	ldr	r1, [r4, #4]
    dc5c:	add	r4, r1, r0
    dc60:	mov	r1, #2
    dc64:	mov	r0, #69	; 0x45
    dc68:	str	r1, [r4, #20]
    dc6c:	str	r6, [r4, #4]
    dc70:	str	r0, [r4, #8]
    dc74:	mov	r1, #10
    dc78:	ldr	r0, [r4, #44]	; 0x2c
    dc7c:	clz	r0, r0
    dc80:	lsr	r0, r0, #5
    dc84:	str	r0, [r4, #44]	; 0x2c
    dc88:	mov	r0, #1
    dc8c:	str	r4, [r4, #96]	; 0x60
    dc90:	bl	1b0ec <gen_bcmp>
    dc94:	cmp	r4, #0
    dc98:	beq	dccc <gen_wlanhostop+0x15e0>
    dc9c:	ldr	r1, [r0, #96]	; 0x60
    dca0:	mov	r2, r4
    dca4:	ldr	r3, [r2, #44]	; 0x2c
    dca8:	add	r7, r2, #84	; 0x54
    dcac:	cmp	r3, #0
    dcb0:	mov	r3, #84	; 0x54
    dcb4:	movweq	r3, #60	; 0x3c
    dcb8:	addeq	r7, r2, #60	; 0x3c
    dcbc:	ldr	r2, [r2, r3]
    dcc0:	str	r1, [r7]
    dcc4:	cmp	r2, #0
    dcc8:	bne	dca4 <gen_wlanhostop+0x15b8>
    dccc:	ldr	r1, [r4, #44]	; 0x2c
    dcd0:	cmp	r0, #0
    dcd4:	clz	r1, r1
    dcd8:	lsr	r1, r1, #5
    dcdc:	str	r1, [r4, #44]	; 0x2c
    dce0:	ldr	r2, [r0, #44]	; 0x2c
    dce4:	clz	r1, r2
    dce8:	lsr	r1, r1, #5
    dcec:	str	r1, [r0, #44]	; 0x2c
    dcf0:	str	r0, [sp, #8]
    dcf4:	beq	dec8 <gen_wlanhostop+0x17dc>
    dcf8:	cmp	r2, #0
    dcfc:	mov	r2, #60	; 0x3c
    dd00:	add	r1, r0, #60	; 0x3c
    dd04:	movweq	r2, #84	; 0x54
    dd08:	addeq	r1, r0, #84	; 0x54
    dd0c:	ldr	r2, [r0, r2]
    dd10:	cmp	r2, #0
    dd14:	beq	decc <gen_wlanhostop+0x17e0>
    dd18:	ldr	r3, [r2, #44]	; 0x2c
    dd1c:	add	r1, r2, #84	; 0x54
    dd20:	cmp	r3, #0
    dd24:	mov	r3, #84	; 0x54
    dd28:	movweq	r3, #60	; 0x3c
    dd2c:	addeq	r1, r2, #60	; 0x3c
    dd30:	ldr	r2, [r2, r3]
    dd34:	cmp	r2, #0
    dd38:	bne	dd18 <gen_wlanhostop+0x162c>
    dd3c:	b	decc <gen_wlanhostop+0x17e0>
    dd40:	add	r1, sp, #8
    dd44:	str	r0, [r1]
    dd48:	mov	r2, #16
    dd4c:	ldr	r1, [r5, #44]	; 0x2c
    dd50:	clz	r1, r1
    dd54:	lsr	r1, r1, #5
    dd58:	str	r1, [r5, #44]	; 0x2c
    dd5c:	mov	r1, #0
    dd60:	ldr	r0, [r0, #96]	; 0x60
    dd64:	str	r0, [r5, #96]	; 0x60
    dd68:	mov	r0, #1
    dd6c:	bl	1669c <gen_load_a>
    dd70:	mov	r6, r0
    dd74:	ldr	r0, [r9, #92]	; 0x5c
    dd78:	mov	r4, r8
    dd7c:	ldr	r7, [r4, r0, lsl #3]!
    dd80:	cmp	r7, #207	; 0xcf
    dd84:	bhi	ddd0 <gen_wlanhostop+0x16e4>
    dd88:	add	r1, r0, #1
    dd8c:	cmp	r0, #15
    dd90:	str	r1, [r9, #92]	; 0x5c
    dd94:	bge	e858 <gen_wlanhostop+0x216c>
    dd98:	mov	r0, #1024	; 0x400
    dd9c:	lsl	r7, r0, r1
    dda0:	mov	r0, r7
    dda4:	bl	f1c <malloc@plt>
    dda8:	cmp	r0, #0
    ddac:	str	r0, [r4, #12]
    ddb0:	beq	e858 <gen_wlanhostop+0x216c>
    ddb4:	mov	r1, #0
    ddb8:	mov	r2, r7
    ddbc:	add	r4, r4, #8
    ddc0:	bl	f88 <memset@plt>
    ddc4:	cmp	r7, #207	; 0xcf
    ddc8:	str	r7, [r4]
    ddcc:	bls	e858 <gen_wlanhostop+0x216c>
    ddd0:	sub	r0, r7, #208	; 0xd0
    ddd4:	mov	r2, #6
    ddd8:	mov	r3, sl
    dddc:	str	r0, [r4]
    dde0:	ldr	r1, [r4, #4]
    dde4:	add	r4, r1, r0
    dde8:	mov	r1, #8
    ddec:	mov	r0, #69	; 0x45
    ddf0:	str	r1, [r4, #20]
    ddf4:	str	r6, [r4, #4]
    ddf8:	str	r0, [r4, #8]
    ddfc:	mov	r1, #4
    de00:	ldr	r0, [r4, #44]	; 0x2c
    de04:	clz	r0, r0
    de08:	lsr	r0, r0, #5
    de0c:	str	r0, [r4, #44]	; 0x2c
    de10:	mov	r0, #1
    de14:	str	r4, [r4, #96]	; 0x60
    de18:	bl	1b0ec <gen_bcmp>
    de1c:	cmp	r4, #0
    de20:	beq	de54 <gen_wlanhostop+0x1768>
    de24:	ldr	r1, [r0, #96]	; 0x60
    de28:	mov	r2, r4
    de2c:	ldr	r3, [r2, #44]	; 0x2c
    de30:	add	r7, r2, #84	; 0x54
    de34:	cmp	r3, #0
    de38:	mov	r3, #84	; 0x54
    de3c:	movweq	r3, #60	; 0x3c
    de40:	addeq	r7, r2, #60	; 0x3c
    de44:	ldr	r2, [r2, r3]
    de48:	str	r1, [r7]
    de4c:	cmp	r2, #0
    de50:	bne	de2c <gen_wlanhostop+0x1740>
    de54:	ldr	r1, [r4, #44]	; 0x2c
    de58:	cmp	r0, #0
    de5c:	clz	r1, r1
    de60:	lsr	r1, r1, #5
    de64:	str	r1, [r4, #44]	; 0x2c
    de68:	ldr	r2, [r0, #44]	; 0x2c
    de6c:	clz	r1, r2
    de70:	lsr	r1, r1, #5
    de74:	str	r1, [r0, #44]	; 0x2c
    de78:	str	r0, [sp, #8]
    de7c:	beq	df78 <gen_wlanhostop+0x188c>
    de80:	cmp	r2, #0
    de84:	mov	r2, #60	; 0x3c
    de88:	add	r1, r0, #60	; 0x3c
    de8c:	movweq	r2, #84	; 0x54
    de90:	addeq	r1, r0, #84	; 0x54
    de94:	ldr	r2, [r0, r2]
    de98:	cmp	r2, #0
    de9c:	beq	df7c <gen_wlanhostop+0x1890>
    dea0:	ldr	r3, [r2, #44]	; 0x2c
    dea4:	add	r1, r2, #84	; 0x54
    dea8:	cmp	r3, #0
    deac:	mov	r3, #84	; 0x54
    deb0:	movweq	r3, #60	; 0x3c
    deb4:	addeq	r1, r2, #60	; 0x3c
    deb8:	ldr	r2, [r2, r3]
    debc:	cmp	r2, #0
    dec0:	bne	dea0 <gen_wlanhostop+0x17b4>
    dec4:	b	df7c <gen_wlanhostop+0x1890>
    dec8:	add	r1, sp, #8
    decc:	str	r4, [r1]
    ded0:	ldr	r1, [r0, #44]	; 0x2c
    ded4:	clz	r2, r1
    ded8:	cmp	r1, #0
    dedc:	lsr	r2, r2, #5
    dee0:	movwne	r1, #1
    dee4:	cmp	r0, #0
    dee8:	str	r2, [r0, #44]	; 0x2c
    deec:	ldr	r2, [r4, #96]	; 0x60
    def0:	str	r1, [r0, #44]	; 0x2c
    def4:	str	r2, [r0, #96]	; 0x60
    def8:	beq	df34 <gen_wlanhostop+0x1848>
    defc:	ldr	r2, [r5, #96]	; 0x60
    df00:	mov	r3, r0
    df04:	b	df0c <gen_wlanhostop+0x1820>
    df08:	ldr	r1, [r3, #44]	; 0x2c
    df0c:	cmp	r1, #0
    df10:	mov	r1, #84	; 0x54
    df14:	add	r7, r3, #84	; 0x54
    df18:	movweq	r1, #60	; 0x3c
    df1c:	addeq	r7, r3, #60	; 0x3c
    df20:	ldr	r3, [r3, r1]
    df24:	str	r2, [r7]
    df28:	cmp	r3, #0
    df2c:	bne	df08 <gen_wlanhostop+0x181c>
    df30:	ldr	r1, [r0, #44]	; 0x2c
    df34:	clz	r1, r1
    df38:	cmp	r5, #0
    df3c:	lsr	r1, r1, #5
    df40:	str	r1, [r0, #44]	; 0x2c
    df44:	str	r5, [sp, #8]
    df48:	beq	e028 <gen_wlanhostop+0x193c>
    df4c:	mov	r2, r5
    df50:	ldr	r3, [r2, #44]	; 0x2c
    df54:	add	r1, r2, #84	; 0x54
    df58:	cmp	r3, #0
    df5c:	mov	r3, #84	; 0x54
    df60:	movweq	r3, #60	; 0x3c
    df64:	addeq	r1, r2, #60	; 0x3c
    df68:	ldr	r2, [r2, r3]
    df6c:	cmp	r2, #0
    df70:	bne	df50 <gen_wlanhostop+0x1864>
    df74:	b	e02c <gen_wlanhostop+0x1940>
    df78:	add	r1, sp, #8
    df7c:	str	r4, [r1]
    df80:	ldr	r1, [r0, #44]	; 0x2c
    df84:	clz	r2, r1
    df88:	cmp	r1, #0
    df8c:	lsr	r2, r2, #5
    df90:	movwne	r1, #1
    df94:	cmp	r0, #0
    df98:	str	r2, [r0, #44]	; 0x2c
    df9c:	ldr	r2, [r4, #96]	; 0x60
    dfa0:	str	r1, [r0, #44]	; 0x2c
    dfa4:	str	r2, [r0, #96]	; 0x60
    dfa8:	beq	dfe4 <gen_wlanhostop+0x18f8>
    dfac:	ldr	r2, [r5, #96]	; 0x60
    dfb0:	mov	r3, r0
    dfb4:	b	dfbc <gen_wlanhostop+0x18d0>
    dfb8:	ldr	r1, [r3, #44]	; 0x2c
    dfbc:	cmp	r1, #0
    dfc0:	mov	r1, #84	; 0x54
    dfc4:	add	r7, r3, #84	; 0x54
    dfc8:	movweq	r1, #60	; 0x3c
    dfcc:	addeq	r7, r3, #60	; 0x3c
    dfd0:	ldr	r3, [r3, r1]
    dfd4:	str	r2, [r7]
    dfd8:	cmp	r3, #0
    dfdc:	bne	dfb8 <gen_wlanhostop+0x18cc>
    dfe0:	ldr	r1, [r0, #44]	; 0x2c
    dfe4:	clz	r1, r1
    dfe8:	cmp	r5, #0
    dfec:	lsr	r1, r1, #5
    dff0:	str	r1, [r0, #44]	; 0x2c
    dff4:	str	r5, [sp, #8]
    dff8:	beq	e178 <gen_wlanhostop+0x1a8c>
    dffc:	mov	r2, r5
    e000:	ldr	r3, [r2, #44]	; 0x2c
    e004:	add	r1, r2, #84	; 0x54
    e008:	cmp	r3, #0
    e00c:	mov	r3, #84	; 0x54
    e010:	movweq	r3, #60	; 0x3c
    e014:	addeq	r1, r2, #60	; 0x3c
    e018:	ldr	r2, [r2, r3]
    e01c:	cmp	r2, #0
    e020:	bne	e000 <gen_wlanhostop+0x1914>
    e024:	b	e17c <gen_wlanhostop+0x1a90>
    e028:	add	r1, sp, #8
    e02c:	str	r0, [r1]
    e030:	mov	r1, #0
    e034:	mov	r2, #16
    e038:	ldr	r0, [r0, #96]	; 0x60
    e03c:	str	r0, [r5, #96]	; 0x60
    e040:	mov	r0, #1
    e044:	bl	1669c <gen_load_a>
    e048:	mov	r6, r0
    e04c:	ldr	r0, [r9, #92]	; 0x5c
    e050:	mov	r4, r8
    e054:	ldr	r7, [r4, r0, lsl #3]!
    e058:	cmp	r7, #207	; 0xcf
    e05c:	bhi	e0a8 <gen_wlanhostop+0x19bc>
    e060:	add	r1, r0, #1
    e064:	cmp	r0, #15
    e068:	str	r1, [r9, #92]	; 0x5c
    e06c:	bge	e858 <gen_wlanhostop+0x216c>
    e070:	mov	r0, #1024	; 0x400
    e074:	lsl	r7, r0, r1
    e078:	mov	r0, r7
    e07c:	bl	f1c <malloc@plt>
    e080:	cmp	r0, #0
    e084:	str	r0, [r4, #12]
    e088:	beq	e858 <gen_wlanhostop+0x216c>
    e08c:	mov	r1, #0
    e090:	mov	r2, r7
    e094:	add	r4, r4, #8
    e098:	bl	f88 <memset@plt>
    e09c:	cmp	r7, #207	; 0xcf
    e0a0:	str	r7, [r4]
    e0a4:	bls	e858 <gen_wlanhostop+0x216c>
    e0a8:	sub	r0, r7, #208	; 0xd0
    e0ac:	mov	r2, #8
    e0b0:	str	r0, [r4]
    e0b4:	ldr	r1, [r4, #4]
    e0b8:	adds	r0, r1, r0
    e0bc:	mov	r1, #69	; 0x45
    e0c0:	str	r2, [r0, #20]
    e0c4:	str	r6, [r0, #4]
    e0c8:	str	r1, [r0, #8]
    e0cc:	str	r0, [r0, #96]	; 0x60
    e0d0:	beq	e104 <gen_wlanhostop+0x1a18>
    e0d4:	ldr	r1, [r5, #96]	; 0x60
    e0d8:	mov	r2, r0
    e0dc:	ldr	r3, [r2, #44]	; 0x2c
    e0e0:	add	r7, r2, #84	; 0x54
    e0e4:	cmp	r3, #0
    e0e8:	mov	r3, #84	; 0x54
    e0ec:	movweq	r3, #60	; 0x3c
    e0f0:	addeq	r7, r2, #60	; 0x3c
    e0f4:	ldr	r2, [r2, r3]
    e0f8:	str	r1, [r7]
    e0fc:	cmp	r2, #0
    e100:	bne	e0dc <gen_wlanhostop+0x19f0>
    e104:	ldr	r1, [r0, #44]	; 0x2c
    e108:	cmp	r5, #0
    e10c:	clz	r1, r1
    e110:	lsr	r1, r1, #5
    e114:	str	r1, [r0, #44]	; 0x2c
    e118:	ldr	r2, [r5, #44]	; 0x2c
    e11c:	clz	r1, r2
    e120:	lsr	r1, r1, #5
    e124:	str	r1, [r5, #44]	; 0x2c
    e128:	str	r5, [sp, #8]
    e12c:	beq	e2d8 <gen_wlanhostop+0x1bec>
    e130:	cmp	r2, #0
    e134:	mov	r2, #60	; 0x3c
    e138:	add	r1, r5, #60	; 0x3c
    e13c:	movweq	r2, #84	; 0x54
    e140:	addeq	r1, r5, #84	; 0x54
    e144:	ldr	r2, [r5, r2]
    e148:	cmp	r2, #0
    e14c:	beq	e2dc <gen_wlanhostop+0x1bf0>
    e150:	ldr	r3, [r2, #44]	; 0x2c
    e154:	add	r1, r2, #84	; 0x54
    e158:	cmp	r3, #0
    e15c:	mov	r3, #84	; 0x54
    e160:	movweq	r3, #60	; 0x3c
    e164:	addeq	r1, r2, #60	; 0x3c
    e168:	ldr	r2, [r2, r3]
    e16c:	cmp	r2, #0
    e170:	bne	e150 <gen_wlanhostop+0x1a64>
    e174:	b	e2dc <gen_wlanhostop+0x1bf0>
    e178:	add	r1, sp, #8
    e17c:	str	r0, [r1]
    e180:	mov	r1, #0
    e184:	mov	r2, #16
    e188:	ldr	r0, [r0, #96]	; 0x60
    e18c:	str	r0, [r5, #96]	; 0x60
    e190:	mov	r0, #1
    e194:	bl	1669c <gen_load_a>
    e198:	mov	r4, r0
    e19c:	ldr	r0, [r9, #92]	; 0x5c
    e1a0:	ldr	r6, [r8, r0, lsl #3]!
    e1a4:	cmp	r6, #207	; 0xcf
    e1a8:	bhi	e1f4 <gen_wlanhostop+0x1b08>
    e1ac:	add	r1, r0, #1
    e1b0:	cmp	r0, #15
    e1b4:	str	r1, [r9, #92]	; 0x5c
    e1b8:	bge	e858 <gen_wlanhostop+0x216c>
    e1bc:	mov	r0, #1024	; 0x400
    e1c0:	lsl	r6, r0, r1
    e1c4:	mov	r0, r6
    e1c8:	bl	f1c <malloc@plt>
    e1cc:	cmp	r0, #0
    e1d0:	str	r0, [r8, #12]
    e1d4:	beq	e858 <gen_wlanhostop+0x216c>
    e1d8:	mov	r1, #0
    e1dc:	mov	r2, r6
    e1e0:	add	r8, r8, #8
    e1e4:	bl	f88 <memset@plt>
    e1e8:	cmp	r6, #207	; 0xcf
    e1ec:	str	r6, [r8]
    e1f0:	bls	e858 <gen_wlanhostop+0x216c>
    e1f4:	sub	r0, r6, #208	; 0xd0
    e1f8:	mov	r2, #4
    e1fc:	str	r0, [r8]
    e200:	ldr	r1, [r8, #4]
    e204:	adds	r0, r1, r0
    e208:	mov	r1, #69	; 0x45
    e20c:	str	r2, [r0, #20]
    e210:	str	r4, [r0, #4]
    e214:	str	r1, [r0, #8]
    e218:	ldr	r1, [r0, #44]	; 0x2c
    e21c:	clz	r1, r1
    e220:	lsr	r1, r1, #5
    e224:	str	r1, [r0, #44]	; 0x2c
    e228:	str	r0, [r0, #96]	; 0x60
    e22c:	beq	e264 <gen_wlanhostop+0x1b78>
    e230:	ldr	r1, [r5, #96]	; 0x60
    e234:	mov	r2, r0
    e238:	ldr	r3, [r2, #44]	; 0x2c
    e23c:	add	r7, r2, #84	; 0x54
    e240:	cmp	r3, #0
    e244:	mov	r3, #84	; 0x54
    e248:	movweq	r3, #60	; 0x3c
    e24c:	addeq	r7, r2, #60	; 0x3c
    e250:	ldr	r2, [r2, r3]
    e254:	str	r1, [r7]
    e258:	cmp	r2, #0
    e25c:	bne	e238 <gen_wlanhostop+0x1b4c>
    e260:	ldr	r1, [r0, #44]	; 0x2c
    e264:	clz	r1, r1
    e268:	cmp	r5, #0
    e26c:	lsr	r1, r1, #5
    e270:	str	r1, [r0, #44]	; 0x2c
    e274:	ldr	r2, [r5, #44]	; 0x2c
    e278:	clz	r1, r2
    e27c:	lsr	r1, r1, #5
    e280:	str	r1, [r5, #44]	; 0x2c
    e284:	str	r5, [sp, #8]
    e288:	beq	e678 <gen_wlanhostop+0x1f8c>
    e28c:	cmp	r2, #0
    e290:	mov	r2, #60	; 0x3c
    e294:	add	r1, r5, #60	; 0x3c
    e298:	movweq	r2, #84	; 0x54
    e29c:	addeq	r1, r5, #84	; 0x54
    e2a0:	ldr	r2, [r5, r2]
    e2a4:	cmp	r2, #0
    e2a8:	beq	e67c <gen_wlanhostop+0x1f90>
    e2ac:	ldr	r3, [r2, #44]	; 0x2c
    e2b0:	add	r1, r2, #84	; 0x54
    e2b4:	cmp	r3, #0
    e2b8:	mov	r3, #84	; 0x54
    e2bc:	movweq	r3, #60	; 0x3c
    e2c0:	addeq	r1, r2, #60	; 0x3c
    e2c4:	ldr	r2, [r2, r3]
    e2c8:	cmp	r2, #0
    e2cc:	bne	e2ac <gen_wlanhostop+0x1bc0>
    e2d0:	b	e67c <gen_wlanhostop+0x1f90>
    e2d4:	.word	0x000391d0
    e2d8:	add	r1, sp, #8
    e2dc:	str	r0, [r1]
    e2e0:	mov	r2, #16
    e2e4:	ldr	r1, [r5, #44]	; 0x2c
    e2e8:	clz	r1, r1
    e2ec:	lsr	r1, r1, #5
    e2f0:	str	r1, [r5, #44]	; 0x2c
    e2f4:	mov	r1, #0
    e2f8:	ldr	r0, [r0, #96]	; 0x60
    e2fc:	str	r0, [r5, #96]	; 0x60
    e300:	mov	r0, #1
    e304:	bl	1669c <gen_load_a>
    e308:	mov	r6, r0
    e30c:	ldr	r0, [r9, #92]	; 0x5c
    e310:	mov	r4, r8
    e314:	ldr	r7, [r4, r0, lsl #3]!
    e318:	cmp	r7, #207	; 0xcf
    e31c:	bhi	e368 <gen_wlanhostop+0x1c7c>
    e320:	add	r1, r0, #1
    e324:	cmp	r0, #15
    e328:	str	r1, [r9, #92]	; 0x5c
    e32c:	bge	e858 <gen_wlanhostop+0x216c>
    e330:	mov	r0, #1024	; 0x400
    e334:	lsl	r7, r0, r1
    e338:	mov	r0, r7
    e33c:	bl	f1c <malloc@plt>
    e340:	cmp	r0, #0
    e344:	str	r0, [r4, #12]
    e348:	beq	e858 <gen_wlanhostop+0x216c>
    e34c:	mov	r1, #0
    e350:	mov	r2, r7
    e354:	add	r4, r4, #8
    e358:	bl	f88 <memset@plt>
    e35c:	cmp	r7, #207	; 0xcf
    e360:	str	r7, [r4]
    e364:	bls	e858 <gen_wlanhostop+0x216c>
    e368:	sub	r0, r7, #208	; 0xd0
    e36c:	mov	r2, #6
    e370:	mov	r3, sl
    e374:	str	r0, [r4]
    e378:	ldr	r1, [r4, #4]
    e37c:	add	r4, r1, r0
    e380:	mov	r1, #8
    e384:	mov	r0, #69	; 0x45
    e388:	str	r1, [r4, #20]
    e38c:	str	r6, [r4, #4]
    e390:	str	r0, [r4, #8]
    e394:	mov	r1, #10
    e398:	ldr	r0, [r4, #44]	; 0x2c
    e39c:	clz	r0, r0
    e3a0:	lsr	r0, r0, #5
    e3a4:	str	r0, [r4, #44]	; 0x2c
    e3a8:	mov	r0, #1
    e3ac:	str	r4, [r4, #96]	; 0x60
    e3b0:	bl	1b0ec <gen_bcmp>
    e3b4:	cmp	r4, #0
    e3b8:	beq	e3ec <gen_wlanhostop+0x1d00>
    e3bc:	ldr	r1, [r0, #96]	; 0x60
    e3c0:	mov	r2, r4
    e3c4:	ldr	r3, [r2, #44]	; 0x2c
    e3c8:	add	r7, r2, #84	; 0x54
    e3cc:	cmp	r3, #0
    e3d0:	mov	r3, #84	; 0x54
    e3d4:	movweq	r3, #60	; 0x3c
    e3d8:	addeq	r7, r2, #60	; 0x3c
    e3dc:	ldr	r2, [r2, r3]
    e3e0:	str	r1, [r7]
    e3e4:	cmp	r2, #0
    e3e8:	bne	e3c4 <gen_wlanhostop+0x1cd8>
    e3ec:	ldr	r1, [r4, #44]	; 0x2c
    e3f0:	cmp	r0, #0
    e3f4:	clz	r1, r1
    e3f8:	lsr	r1, r1, #5
    e3fc:	str	r1, [r4, #44]	; 0x2c
    e400:	ldr	r2, [r0, #44]	; 0x2c
    e404:	clz	r1, r2
    e408:	lsr	r1, r1, #5
    e40c:	str	r1, [r0, #44]	; 0x2c
    e410:	str	r0, [sp, #8]
    e414:	beq	e464 <gen_wlanhostop+0x1d78>
    e418:	cmp	r2, #0
    e41c:	mov	r2, #60	; 0x3c
    e420:	add	r1, r0, #60	; 0x3c
    e424:	movweq	r2, #84	; 0x54
    e428:	addeq	r1, r0, #84	; 0x54
    e42c:	ldr	r2, [r0, r2]
    e430:	cmp	r2, #0
    e434:	beq	e468 <gen_wlanhostop+0x1d7c>
    e438:	ldr	r3, [r2, #44]	; 0x2c
    e43c:	add	r1, r2, #84	; 0x54
    e440:	cmp	r3, #0
    e444:	mov	r3, #84	; 0x54
    e448:	movweq	r3, #60	; 0x3c
    e44c:	addeq	r1, r2, #60	; 0x3c
    e450:	ldr	r2, [r2, r3]
    e454:	cmp	r2, #0
    e458:	bne	e438 <gen_wlanhostop+0x1d4c>
    e45c:	b	e468 <gen_wlanhostop+0x1d7c>
    e460:	.word	0x00039040
    e464:	add	r1, sp, #8
    e468:	str	r4, [r1]
    e46c:	ldr	r1, [r0, #44]	; 0x2c
    e470:	clz	r2, r1
    e474:	cmp	r1, #0
    e478:	lsr	r2, r2, #5
    e47c:	movwne	r1, #1
    e480:	cmp	r0, #0
    e484:	str	r2, [r0, #44]	; 0x2c
    e488:	ldr	r2, [r4, #96]	; 0x60
    e48c:	str	r1, [r0, #44]	; 0x2c
    e490:	str	r2, [r0, #96]	; 0x60
    e494:	beq	e4d0 <gen_wlanhostop+0x1de4>
    e498:	ldr	r2, [r5, #96]	; 0x60
    e49c:	mov	r3, r0
    e4a0:	b	e4a8 <gen_wlanhostop+0x1dbc>
    e4a4:	ldr	r1, [r3, #44]	; 0x2c
    e4a8:	cmp	r1, #0
    e4ac:	mov	r1, #84	; 0x54
    e4b0:	add	r7, r3, #84	; 0x54
    e4b4:	movweq	r1, #60	; 0x3c
    e4b8:	addeq	r7, r3, #60	; 0x3c
    e4bc:	ldr	r3, [r3, r1]
    e4c0:	str	r2, [r7]
    e4c4:	cmp	r3, #0
    e4c8:	bne	e4a4 <gen_wlanhostop+0x1db8>
    e4cc:	ldr	r1, [r0, #44]	; 0x2c
    e4d0:	clz	r1, r1
    e4d4:	cmp	r5, #0
    e4d8:	lsr	r1, r1, #5
    e4dc:	str	r1, [r0, #44]	; 0x2c
    e4e0:	str	r5, [sp, #8]
    e4e4:	beq	e51c <gen_wlanhostop+0x1e30>
    e4e8:	mov	r2, r5
    e4ec:	ldr	r3, [r2, #44]	; 0x2c
    e4f0:	add	r1, r2, #84	; 0x54
    e4f4:	cmp	r3, #0
    e4f8:	mov	r3, #84	; 0x54
    e4fc:	movweq	r3, #60	; 0x3c
    e500:	addeq	r1, r2, #60	; 0x3c
    e504:	ldr	r2, [r2, r3]
    e508:	cmp	r2, #0
    e50c:	bne	e4ec <gen_wlanhostop+0x1e00>
    e510:	b	e520 <gen_wlanhostop+0x1e34>
    e514:	.word	0x00038f38
    e518:	.word	0x00038ea8
    e51c:	add	r1, sp, #8
    e520:	str	r0, [r1]
    e524:	mov	r1, #0
    e528:	mov	r2, #16
    e52c:	ldr	r0, [r0, #96]	; 0x60
    e530:	str	r0, [r5, #96]	; 0x60
    e534:	mov	r0, #1
    e538:	bl	1669c <gen_load_a>
    e53c:	mov	r4, r0
    e540:	ldr	r0, [r9, #92]	; 0x5c
    e544:	ldr	r6, [r8, r0, lsl #3]!
    e548:	cmp	r6, #207	; 0xcf
    e54c:	bhi	e598 <gen_wlanhostop+0x1eac>
    e550:	add	r1, r0, #1
    e554:	cmp	r0, #15
    e558:	str	r1, [r9, #92]	; 0x5c
    e55c:	bge	e858 <gen_wlanhostop+0x216c>
    e560:	mov	r0, #1024	; 0x400
    e564:	lsl	r6, r0, r1
    e568:	mov	r0, r6
    e56c:	bl	f1c <malloc@plt>
    e570:	cmp	r0, #0
    e574:	str	r0, [r8, #12]
    e578:	beq	e858 <gen_wlanhostop+0x216c>
    e57c:	mov	r1, #0
    e580:	mov	r2, r6
    e584:	add	r8, r8, #8
    e588:	bl	f88 <memset@plt>
    e58c:	cmp	r6, #207	; 0xcf
    e590:	str	r6, [r8]
    e594:	bls	e858 <gen_wlanhostop+0x216c>
    e598:	sub	r0, r6, #208	; 0xd0
    e59c:	mov	r2, #4
    e5a0:	str	r0, [r8]
    e5a4:	ldr	r1, [r8, #4]
    e5a8:	adds	r0, r1, r0
    e5ac:	mov	r1, #69	; 0x45
    e5b0:	str	r2, [r0, #20]
    e5b4:	str	r4, [r0, #4]
    e5b8:	str	r1, [r0, #8]
    e5bc:	ldr	r1, [r0, #44]	; 0x2c
    e5c0:	clz	r1, r1
    e5c4:	lsr	r1, r1, #5
    e5c8:	str	r1, [r0, #44]	; 0x2c
    e5cc:	str	r0, [r0, #96]	; 0x60
    e5d0:	beq	e608 <gen_wlanhostop+0x1f1c>
    e5d4:	ldr	r1, [r5, #96]	; 0x60
    e5d8:	mov	r2, r0
    e5dc:	ldr	r3, [r2, #44]	; 0x2c
    e5e0:	add	r7, r2, #84	; 0x54
    e5e4:	cmp	r3, #0
    e5e8:	mov	r3, #84	; 0x54
    e5ec:	movweq	r3, #60	; 0x3c
    e5f0:	addeq	r7, r2, #60	; 0x3c
    e5f4:	ldr	r2, [r2, r3]
    e5f8:	str	r1, [r7]
    e5fc:	cmp	r2, #0
    e600:	bne	e5dc <gen_wlanhostop+0x1ef0>
    e604:	ldr	r1, [r0, #44]	; 0x2c
    e608:	clz	r1, r1
    e60c:	cmp	r5, #0
    e610:	lsr	r1, r1, #5
    e614:	str	r1, [r0, #44]	; 0x2c
    e618:	ldr	r2, [r5, #44]	; 0x2c
    e61c:	clz	r1, r2
    e620:	lsr	r1, r1, #5
    e624:	str	r1, [r5, #44]	; 0x2c
    e628:	str	r5, [sp, #8]
    e62c:	beq	e678 <gen_wlanhostop+0x1f8c>
    e630:	cmp	r2, #0
    e634:	mov	r2, #60	; 0x3c
    e638:	add	r1, r5, #60	; 0x3c
    e63c:	movweq	r2, #84	; 0x54
    e640:	addeq	r1, r5, #84	; 0x54
    e644:	ldr	r2, [r5, r2]
    e648:	cmp	r2, #0
    e64c:	beq	e67c <gen_wlanhostop+0x1f90>
    e650:	ldr	r3, [r2, #44]	; 0x2c
    e654:	add	r1, r2, #84	; 0x54
    e658:	cmp	r3, #0
    e65c:	mov	r3, #84	; 0x54
    e660:	movweq	r3, #60	; 0x3c
    e664:	addeq	r1, r2, #60	; 0x3c
    e668:	ldr	r2, [r2, r3]
    e66c:	cmp	r2, #0
    e670:	bne	e650 <gen_wlanhostop+0x1f64>
    e674:	b	e67c <gen_wlanhostop+0x1f90>
    e678:	add	r1, sp, #8
    e67c:	str	r0, [r1]
    e680:	ldr	r1, [r5, #44]	; 0x2c
    e684:	clz	r1, r1
    e688:	lsr	r1, r1, #5
    e68c:	str	r1, [r5, #44]	; 0x2c
    e690:	ldr	r0, [r0, #96]	; 0x60
    e694:	str	r0, [r5, #96]	; 0x60
    e698:	mov	r0, r5
    e69c:	sub	sp, fp, #28
    e6a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e6a4:	add	r1, sp, #8
    e6a8:	str	r5, [r1]
    e6ac:	cmp	r7, #0
    e6b0:	ldr	r0, [r4, #44]	; 0x2c
    e6b4:	clz	r0, r0
    e6b8:	lsr	r0, r0, #5
    e6bc:	str	r0, [r4, #44]	; 0x2c
    e6c0:	ldr	r0, [r5, #96]	; 0x60
    e6c4:	str	r0, [r4, #96]	; 0x60
    e6c8:	ldr	r0, [r7, #44]	; 0x2c
    e6cc:	clz	r0, r0
    e6d0:	lsr	r0, r0, #5
    e6d4:	str	r0, [r7, #44]	; 0x2c
    e6d8:	beq	e718 <gen_wlanhostop+0x202c>
    e6dc:	ldr	r1, [r4, #96]	; 0x60
    e6e0:	mov	r2, r7
    e6e4:	b	e6f0 <gen_wlanhostop+0x2004>
    e6e8:	.word	0x00038da0
    e6ec:	ldr	r0, [r2, #44]	; 0x2c
    e6f0:	cmp	r0, #0
    e6f4:	mov	r0, #84	; 0x54
    e6f8:	add	r6, r2, #84	; 0x54
    e6fc:	movweq	r0, #60	; 0x3c
    e700:	addeq	r6, r2, #60	; 0x3c
    e704:	ldr	r2, [r2, r0]
    e708:	str	r1, [r6]
    e70c:	cmp	r2, #0
    e710:	bne	e6ec <gen_wlanhostop+0x2000>
    e714:	ldr	r0, [r7, #44]	; 0x2c
    e718:	clz	r0, r0
    e71c:	cmp	r4, #0
    e720:	lsr	r0, r0, #5
    e724:	str	r0, [r7, #44]	; 0x2c
    e728:	str	r4, [sp, #8]
    e72c:	beq	e75c <gen_wlanhostop+0x2070>
    e730:	mov	r1, r4
    e734:	ldr	r2, [r1, #44]	; 0x2c
    e738:	add	r0, r1, #84	; 0x54
    e73c:	cmp	r2, #0
    e740:	mov	r2, #84	; 0x54
    e744:	movweq	r2, #60	; 0x3c
    e748:	addeq	r0, r1, #60	; 0x3c
    e74c:	ldr	r1, [r1, r2]
    e750:	cmp	r1, #0
    e754:	bne	e734 <gen_wlanhostop+0x2048>
    e758:	b	e760 <gen_wlanhostop+0x2074>
    e75c:	add	r0, sp, #8
    e760:	str	r7, [r0]
    e764:	mov	r1, #10
    e768:	mov	r2, #6
    e76c:	ldr	r0, [r7, #96]	; 0x60
    e770:	str	r0, [r4, #96]	; 0x60
    e774:	mov	r0, #1
    e778:	bl	1b0ec <gen_bcmp>
    e77c:	mov	r5, r0
    e780:	cmp	r4, #0
    e784:	beq	e7b8 <gen_wlanhostop+0x20cc>
    e788:	ldr	r0, [r5, #96]	; 0x60
    e78c:	mov	r1, r4
    e790:	ldr	r2, [r1, #44]	; 0x2c
    e794:	add	r3, r1, #84	; 0x54
    e798:	cmp	r2, #0
    e79c:	mov	r2, #84	; 0x54
    e7a0:	movweq	r2, #60	; 0x3c
    e7a4:	addeq	r3, r1, #60	; 0x3c
    e7a8:	ldr	r1, [r1, r2]
    e7ac:	str	r0, [r3]
    e7b0:	cmp	r1, #0
    e7b4:	bne	e790 <gen_wlanhostop+0x20a4>
    e7b8:	ldr	r0, [r4, #44]	; 0x2c
    e7bc:	cmp	r5, #0
    e7c0:	clz	r0, r0
    e7c4:	lsr	r0, r0, #5
    e7c8:	str	r0, [r4, #44]	; 0x2c
    e7cc:	ldr	r1, [r5, #44]	; 0x2c
    e7d0:	clz	r0, r1
    e7d4:	lsr	r0, r0, #5
    e7d8:	str	r0, [r5, #44]	; 0x2c
    e7dc:	str	r5, [sp, #8]
    e7e0:	beq	e82c <gen_wlanhostop+0x2140>
    e7e4:	cmp	r1, #0
    e7e8:	mov	r1, #60	; 0x3c
    e7ec:	add	r0, r5, #60	; 0x3c
    e7f0:	movweq	r1, #84	; 0x54
    e7f4:	addeq	r0, r5, #84	; 0x54
    e7f8:	ldr	r1, [r5, r1]
    e7fc:	cmp	r1, #0
    e800:	beq	e830 <gen_wlanhostop+0x2144>
    e804:	ldr	r2, [r1, #44]	; 0x2c
    e808:	add	r0, r1, #84	; 0x54
    e80c:	cmp	r2, #0
    e810:	mov	r2, #84	; 0x54
    e814:	movweq	r2, #60	; 0x3c
    e818:	addeq	r0, r1, #60	; 0x3c
    e81c:	ldr	r1, [r1, r2]
    e820:	cmp	r1, #0
    e824:	bne	e804 <gen_wlanhostop+0x2118>
    e828:	b	e830 <gen_wlanhostop+0x2144>
    e82c:	add	r0, sp, #8
    e830:	str	r4, [r0]
    e834:	ldr	r0, [r5, #44]	; 0x2c
    e838:	clz	r0, r0
    e83c:	lsr	r0, r0, #5
    e840:	str	r0, [r5, #44]	; 0x2c
    e844:	ldr	r0, [r4, #96]	; 0x60
    e848:	str	r0, [r5, #96]	; 0x60
    e84c:	mov	r0, r5
    e850:	sub	sp, fp, #28
    e854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e858:	ldr	r0, [pc, #8]	; e868 <gen_wlanhostop+0x217c>
    e85c:	add	r0, pc, r0
    e860:	bl	2204 <sf_bpf_error>
    e864:	bl	100c <abort@plt>
    e868:	.word	0x0001ab38

0000e86c <gen_ipfchostop>:
    e86c:	push	{r4, r5, fp, lr}
    e870:	add	fp, sp, #8
    e874:	sub	sp, sp, #8
    e878:	cmp	r1, #4
    e87c:	bhi	eaa4 <gen_ipfchostop+0x238>
    e880:	mov	r5, r0
    e884:	add	r0, pc, #4
    e888:	ldr	r1, [r0, r1, lsl #2]
    e88c:	add	pc, r0, r1
    e890:	.word	0x00000014
    e894:	.word	0x000001ac
    e898:	.word	0x000001b8
    e89c:	.word	0x00000014
    e8a0:	.word	0x000000d4
    e8a4:	mov	r0, #1
    e8a8:	mov	r1, #10
    e8ac:	mov	r2, #6
    e8b0:	mov	r3, r5
    e8b4:	bl	1b0ec <gen_bcmp>
    e8b8:	mov	r4, r0
    e8bc:	mov	r0, #1
    e8c0:	mov	r1, #2
    e8c4:	mov	r2, #6
    e8c8:	mov	r3, r5
    e8cc:	bl	1b0ec <gen_bcmp>
    e8d0:	ldr	r1, [r4, #44]	; 0x2c
    e8d4:	cmp	r4, #0
    e8d8:	clz	r1, r1
    e8dc:	lsr	r1, r1, #5
    e8e0:	str	r1, [r4, #44]	; 0x2c
    e8e4:	beq	e920 <gen_ipfchostop+0xb4>
    e8e8:	ldr	r2, [r0, #96]	; 0x60
    e8ec:	mov	r3, r4
    e8f0:	b	e8f8 <gen_ipfchostop+0x8c>
    e8f4:	ldr	r1, [r3, #44]	; 0x2c
    e8f8:	cmp	r1, #0
    e8fc:	mov	r1, #84	; 0x54
    e900:	add	r5, r3, #84	; 0x54
    e904:	movweq	r1, #60	; 0x3c
    e908:	addeq	r5, r3, #60	; 0x3c
    e90c:	ldr	r3, [r3, r1]
    e910:	str	r2, [r5]
    e914:	cmp	r3, #0
    e918:	bne	e8f4 <gen_ipfchostop+0x88>
    e91c:	ldr	r1, [r4, #44]	; 0x2c
    e920:	clz	r1, r1
    e924:	cmp	r0, #0
    e928:	lsr	r1, r1, #5
    e92c:	str	r1, [r4, #44]	; 0x2c
    e930:	str	r0, [sp]
    e934:	beq	ea64 <gen_ipfchostop+0x1f8>
    e938:	mov	r2, r0
    e93c:	ldr	r3, [r2, #44]	; 0x2c
    e940:	add	r1, r2, #84	; 0x54
    e944:	cmp	r3, #0
    e948:	mov	r3, #84	; 0x54
    e94c:	movweq	r3, #60	; 0x3c
    e950:	addeq	r1, r2, #60	; 0x3c
    e954:	ldr	r2, [r2, r3]
    e958:	cmp	r2, #0
    e95c:	bne	e93c <gen_ipfchostop+0xd0>
    e960:	b	ea68 <gen_ipfchostop+0x1fc>
    e964:	mov	r0, #1
    e968:	mov	r1, #10
    e96c:	mov	r2, #6
    e970:	mov	r3, r5
    e974:	bl	1b0ec <gen_bcmp>
    e978:	mov	r4, r0
    e97c:	mov	r0, #1
    e980:	mov	r1, #2
    e984:	mov	r2, #6
    e988:	mov	r3, r5
    e98c:	bl	1b0ec <gen_bcmp>
    e990:	cmp	r4, #0
    e994:	beq	e9c8 <gen_ipfchostop+0x15c>
    e998:	ldr	r1, [r0, #96]	; 0x60
    e99c:	mov	r2, r4
    e9a0:	ldr	r3, [r2, #44]	; 0x2c
    e9a4:	add	r5, r2, #84	; 0x54
    e9a8:	cmp	r3, #0
    e9ac:	mov	r3, #84	; 0x54
    e9b0:	movweq	r3, #60	; 0x3c
    e9b4:	addeq	r5, r2, #60	; 0x3c
    e9b8:	ldr	r2, [r2, r3]
    e9bc:	str	r1, [r5]
    e9c0:	cmp	r2, #0
    e9c4:	bne	e9a0 <gen_ipfchostop+0x134>
    e9c8:	ldr	r1, [r4, #44]	; 0x2c
    e9cc:	cmp	r0, #0
    e9d0:	clz	r1, r1
    e9d4:	lsr	r1, r1, #5
    e9d8:	str	r1, [r4, #44]	; 0x2c
    e9dc:	ldr	r2, [r0, #44]	; 0x2c
    e9e0:	clz	r1, r2
    e9e4:	lsr	r1, r1, #5
    e9e8:	str	r1, [r0, #44]	; 0x2c
    e9ec:	str	r0, [sp, #4]
    e9f0:	beq	ea7c <gen_ipfchostop+0x210>
    e9f4:	cmp	r2, #0
    e9f8:	mov	r2, #60	; 0x3c
    e9fc:	add	r1, r0, #60	; 0x3c
    ea00:	movweq	r2, #84	; 0x54
    ea04:	addeq	r1, r0, #84	; 0x54
    ea08:	ldr	r2, [r0, r2]
    ea0c:	cmp	r2, #0
    ea10:	beq	ea80 <gen_ipfchostop+0x214>
    ea14:	ldr	r3, [r2, #44]	; 0x2c
    ea18:	add	r1, r2, #84	; 0x54
    ea1c:	cmp	r3, #0
    ea20:	mov	r3, #84	; 0x54
    ea24:	movweq	r3, #60	; 0x3c
    ea28:	addeq	r1, r2, #60	; 0x3c
    ea2c:	ldr	r2, [r2, r3]
    ea30:	cmp	r2, #0
    ea34:	bne	ea14 <gen_ipfchostop+0x1a8>
    ea38:	b	ea80 <gen_ipfchostop+0x214>
    ea3c:	mov	r0, #1
    ea40:	mov	r1, #10
    ea44:	b	ea50 <gen_ipfchostop+0x1e4>
    ea48:	mov	r0, #1
    ea4c:	mov	r1, #2
    ea50:	mov	r2, #6
    ea54:	mov	r3, r5
    ea58:	sub	sp, fp, #8
    ea5c:	pop	{r4, r5, fp, lr}
    ea60:	b	1b0ec <gen_bcmp>
    ea64:	mov	r1, sp
    ea68:	str	r4, [r1]
    ea6c:	ldr	r1, [r4, #96]	; 0x60
    ea70:	str	r1, [r0, #96]	; 0x60
    ea74:	sub	sp, fp, #8
    ea78:	pop	{r4, r5, fp, pc}
    ea7c:	add	r1, sp, #4
    ea80:	str	r4, [r1]
    ea84:	ldr	r1, [r0, #44]	; 0x2c
    ea88:	clz	r1, r1
    ea8c:	lsr	r1, r1, #5
    ea90:	str	r1, [r0, #44]	; 0x2c
    ea94:	ldr	r1, [r4, #96]	; 0x60
    ea98:	str	r1, [r0, #96]	; 0x60
    ea9c:	sub	sp, fp, #8
    eaa0:	pop	{r4, r5, fp, pc}
    eaa4:	bl	100c <abort@plt>

0000eaa8 <gen_host6>:
    eaa8:	push	{r4, sl, fp, lr}
    eaac:	add	fp, sp, #8
    eab0:	sub	sp, sp, #8
    eab4:	ldr	r4, [pc, #604]	; ed18 <gen_host6+0x270>
    eab8:	mov	ip, r3
    eabc:	mov	lr, r1
    eac0:	ldr	r1, [pc, #596]	; ed1c <gen_host6+0x274>
    eac4:	ldr	r3, [fp, #8]
    eac8:	add	r4, pc, r4
    eacc:	add	r1, pc, r1
    ead0:	cmp	r3, #2
    ead4:	moveq	r1, r4
    ead8:	cmp	r2, #40	; 0x28
    eadc:	bhi	ebb8 <gen_host6+0x110>
    eae0:	add	r3, pc, #4
    eae4:	ldr	r2, [r3, r2, lsl #2]
    eae8:	add	pc, r3, r2
    eaec:	.word	0x000000a4
    eaf0:	.word	0x000000cc
    eaf4:	.word	0x000000d0
    eaf8:	.word	0x000000dc
    eafc:	.word	0x000000e8
    eb00:	.word	0x000000f4
    eb04:	.word	0x00000100
    eb08:	.word	0x0000010c
    eb0c:	.word	0x00000118
    eb10:	.word	0x00000124
    eb14:	.word	0x00000130
    eb18:	.word	0x0000013c
    eb1c:	.word	0x00000148
    eb20:	.word	0x00000154
    eb24:	.word	0x00000160
    eb28:	.word	0x0000016c
    eb2c:	.word	0x00000178
    eb30:	.word	0x000000a4
    eb34:	.word	0x00000184
    eb38:	.word	0x00000190
    eb3c:	.word	0x0000019c
    eb40:	.word	0x000001a8
    eb44:	.word	0x000001b4
    eb48:	.word	0x000001c0
    eb4c:	.word	0x000001cc
    eb50:	.word	0x000001d8
    eb54:	.word	0x000001e4
    eb58:	.word	0x000001f0
    eb5c:	.word	0x000001fc
    eb60:	.word	0x00000208
    eb64:	.word	0x00000214
    eb68:	.word	0x000000cc
    eb6c:	.word	0x000000cc
    eb70:	.word	0x000000cc
    eb74:	.word	0x000000cc
    eb78:	.word	0x000000cc
    eb7c:	.word	0x000000cc
    eb80:	.word	0x000000cc
    eb84:	.word	0x000000cc
    eb88:	.word	0x000000cc
    eb8c:	.word	0x00000220
    eb90:	mov	r1, #24
    eb94:	mov	r2, #8
    eb98:	movw	r3, #34525	; 0x86dd
    eb9c:	str	r2, [sp]
    eba0:	str	r1, [sp, #4]
    eba4:	mov	r1, lr
    eba8:	mov	r2, ip
    ebac:	bl	1d7d4 <gen_hostop6>
    ebb0:	sub	sp, fp, #8
    ebb4:	pop	{r4, sl, fp, pc}
    ebb8:	bl	100c <abort@plt>
    ebbc:	ldr	r0, [pc, #348]	; ed20 <gen_host6+0x278>
    ebc0:	add	r0, pc, r0
    ebc4:	bl	2204 <sf_bpf_error>
    ebc8:	ldr	r0, [pc, #344]	; ed28 <gen_host6+0x280>
    ebcc:	add	r0, pc, r0
    ebd0:	bl	2204 <sf_bpf_error>
    ebd4:	ldr	r0, [pc, #328]	; ed24 <gen_host6+0x27c>
    ebd8:	add	r0, pc, r0
    ebdc:	bl	2204 <sf_bpf_error>
    ebe0:	ldr	r0, [pc, #324]	; ed2c <gen_host6+0x284>
    ebe4:	add	r0, pc, r0
    ebe8:	bl	2204 <sf_bpf_error>
    ebec:	ldr	r0, [pc, #316]	; ed30 <gen_host6+0x288>
    ebf0:	add	r0, pc, r0
    ebf4:	bl	2204 <sf_bpf_error>
    ebf8:	ldr	r0, [pc, #308]	; ed34 <gen_host6+0x28c>
    ebfc:	add	r0, pc, r0
    ec00:	bl	2204 <sf_bpf_error>
    ec04:	ldr	r0, [pc, #300]	; ed38 <gen_host6+0x290>
    ec08:	add	r0, pc, r0
    ec0c:	bl	2204 <sf_bpf_error>
    ec10:	ldr	r0, [pc, #292]	; ed3c <gen_host6+0x294>
    ec14:	add	r0, pc, r0
    ec18:	bl	2204 <sf_bpf_error>
    ec1c:	ldr	r0, [pc, #284]	; ed40 <gen_host6+0x298>
    ec20:	add	r0, pc, r0
    ec24:	bl	2204 <sf_bpf_error>
    ec28:	ldr	r0, [pc, #284]	; ed4c <gen_host6+0x2a4>
    ec2c:	add	r0, pc, r0
    ec30:	bl	2204 <sf_bpf_error>
    ec34:	ldr	r0, [pc, #280]	; ed54 <gen_host6+0x2ac>
    ec38:	add	r0, pc, r0
    ec3c:	bl	2204 <sf_bpf_error>
    ec40:	ldr	r0, [pc, #276]	; ed5c <gen_host6+0x2b4>
    ec44:	add	r0, pc, r0
    ec48:	bl	2204 <sf_bpf_error>
    ec4c:	ldr	r0, [pc, #260]	; ed58 <gen_host6+0x2b0>
    ec50:	add	r0, pc, r0
    ec54:	bl	2204 <sf_bpf_error>
    ec58:	ldr	r0, [pc, #260]	; ed64 <gen_host6+0x2bc>
    ec5c:	add	r0, pc, r0
    ec60:	bl	2204 <sf_bpf_error>
    ec64:	ldr	r0, [pc, #244]	; ed60 <gen_host6+0x2b8>
    ec68:	add	r0, pc, r0
    ec6c:	bl	2204 <sf_bpf_error>
    ec70:	ldr	r0, [pc, #240]	; ed68 <gen_host6+0x2c0>
    ec74:	add	r0, pc, r0
    ec78:	bl	2204 <sf_bpf_error>
    ec7c:	ldr	r0, [pc, #232]	; ed6c <gen_host6+0x2c4>
    ec80:	add	r0, pc, r0
    ec84:	bl	2204 <sf_bpf_error>
    ec88:	ldr	r0, [pc, #224]	; ed70 <gen_host6+0x2c8>
    ec8c:	add	r0, pc, r0
    ec90:	bl	2204 <sf_bpf_error>
    ec94:	ldr	r0, [pc, #168]	; ed44 <gen_host6+0x29c>
    ec98:	add	r0, pc, r0
    ec9c:	bl	2204 <sf_bpf_error>
    eca0:	ldr	r0, [pc, #160]	; ed48 <gen_host6+0x2a0>
    eca4:	add	r0, pc, r0
    eca8:	bl	2204 <sf_bpf_error>
    ecac:	ldr	r0, [pc, #156]	; ed50 <gen_host6+0x2a8>
    ecb0:	add	r0, pc, r0
    ecb4:	bl	2204 <sf_bpf_error>
    ecb8:	ldr	r0, [pc, #180]	; ed74 <gen_host6+0x2cc>
    ecbc:	add	r0, pc, r0
    ecc0:	bl	2204 <sf_bpf_error>
    ecc4:	ldr	r0, [pc, #172]	; ed78 <gen_host6+0x2d0>
    ecc8:	add	r0, pc, r0
    eccc:	bl	2204 <sf_bpf_error>
    ecd0:	ldr	r0, [pc, #164]	; ed7c <gen_host6+0x2d4>
    ecd4:	add	r0, pc, r0
    ecd8:	bl	2204 <sf_bpf_error>
    ecdc:	ldr	r0, [pc, #156]	; ed80 <gen_host6+0x2d8>
    ece0:	add	r0, pc, r0
    ece4:	bl	2204 <sf_bpf_error>
    ece8:	ldr	r0, [pc, #148]	; ed84 <gen_host6+0x2dc>
    ecec:	add	r0, pc, r0
    ecf0:	bl	2204 <sf_bpf_error>
    ecf4:	ldr	r0, [pc, #140]	; ed88 <gen_host6+0x2e0>
    ecf8:	add	r0, pc, r0
    ecfc:	bl	2204 <sf_bpf_error>
    ed00:	ldr	r0, [pc, #132]	; ed8c <gen_host6+0x2e4>
    ed04:	add	r0, pc, r0
    ed08:	bl	2204 <sf_bpf_error>
    ed0c:	ldr	r0, [pc, #124]	; ed90 <gen_host6+0x2e8>
    ed10:	add	r0, pc, r0
    ed14:	bl	2204 <sf_bpf_error>
    ed18:	.word	0x0001a500
    ed1c:	.word	0x0001b072
    ed20:	.word	0x0001b0d8
    ed24:	.word	0x0001b0e0
    ed28:	.word	0x0001b10e
    ed2c:	.word	0x0001ad94
    ed30:	.word	0x0001ad6b
    ed34:	.word	0x0001ad9a
    ed38:	.word	0x0001adab
    ed3c:	.word	0x0001adbd
    ed40:	.word	0x0001adcf
    ed44:	.word	0x0001ad75
    ed48:	.word	0x0001ad86
    ed4c:	.word	0x0001ae1c
    ed50:	.word	0x0001adbd
    ed54:	.word	0x0001b0c3
    ed58:	.word	0x0001ae41
    ed5c:	.word	0x0001ae70
    ed60:	.word	0x0001ae6f
    ed64:	.word	0x0001aea0
    ed68:	.word	0x0001aecf
    ed6c:	.word	0x0001aee2
    ed70:	.word	0x0001aef2
    ed74:	.word	0x0001aedf
    ed78:	.word	0x0001aef6
    ed7c:	.word	0x0001af08
    ed80:	.word	0x0001af1a
    ed84:	.word	0x0001af2c
    ed88:	.word	0x0001af3d
    ed8c:	.word	0x0001af54
    ed90:	.word	0x0001af69

0000ed94 <gen_port>:
    ed94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    ed98:	add	fp, sp, #24
    ed9c:	sub	sp, sp, #16
    eda0:	mov	r9, r0
    eda4:	mov	r0, #2048	; 0x800
    eda8:	mov	r8, r2
    edac:	mov	r5, r1
    edb0:	bl	6e1c <gen_linktype>
    edb4:	mov	r4, r0
    edb8:	cmp	r5, #16
    edbc:	bgt	ee88 <gen_port+0xf4>
    edc0:	cmn	r5, #1
    edc4:	bne	eebc <gen_port+0x128>
    edc8:	mov	r0, r9
    edcc:	mov	r1, #6
    edd0:	mov	r2, r8
    edd4:	bl	9af4 <sf_gen_portop>
    edd8:	mov	r6, r0
    eddc:	mov	r0, r9
    ede0:	mov	r1, #17
    ede4:	mov	r2, r8
    ede8:	bl	9af4 <sf_gen_portop>
    edec:	mov	r5, r0
    edf0:	ldr	r0, [r6, #44]	; 0x2c
    edf4:	cmp	r6, #0
    edf8:	mov	r7, r5
    edfc:	clz	r0, r0
    ee00:	lsr	r1, r0, #5
    ee04:	str	r1, [r6, #44]	; 0x2c
    ee08:	ldr	r0, [r7, #96]!	; 0x60
    ee0c:	beq	ee44 <gen_port+0xb0>
    ee10:	mov	r2, r6
    ee14:	b	ee1c <gen_port+0x88>
    ee18:	ldr	r1, [r2, #44]	; 0x2c
    ee1c:	cmp	r1, #0
    ee20:	mov	r1, #84	; 0x54
    ee24:	add	r3, r2, #84	; 0x54
    ee28:	movweq	r1, #60	; 0x3c
    ee2c:	addeq	r3, r2, #60	; 0x3c
    ee30:	ldr	r2, [r2, r1]
    ee34:	str	r0, [r3]
    ee38:	cmp	r2, #0
    ee3c:	bne	ee18 <gen_port+0x84>
    ee40:	ldr	r1, [r6, #44]	; 0x2c
    ee44:	clz	r0, r1
    ee48:	cmp	r5, #0
    ee4c:	lsr	r0, r0, #5
    ee50:	str	r0, [r6, #44]	; 0x2c
    ee54:	str	r5, [sp, #4]
    ee58:	beq	eec8 <gen_port+0x134>
    ee5c:	mov	r1, r5
    ee60:	ldr	r2, [r1, #44]	; 0x2c
    ee64:	add	r0, r1, #84	; 0x54
    ee68:	cmp	r2, #0
    ee6c:	mov	r2, #84	; 0x54
    ee70:	movweq	r2, #60	; 0x3c
    ee74:	addeq	r0, r1, #60	; 0x3c
    ee78:	ldr	r1, [r1, r2]
    ee7c:	cmp	r1, #0
    ee80:	bne	ee60 <gen_port+0xcc>
    ee84:	b	eecc <gen_port+0x138>
    ee88:	cmp	r5, #132	; 0x84
    ee8c:	cmpne	r5, #17
    ee90:	bne	eec4 <gen_port+0x130>
    ee94:	mov	r0, r9
    ee98:	mov	r1, r5
    ee9c:	mov	r2, r8
    eea0:	bl	9af4 <sf_gen_portop>
    eea4:	mov	r7, r0
    eea8:	mov	r5, r0
    eeac:	ldr	r0, [r7, #96]!	; 0x60
    eeb0:	cmp	r4, #0
    eeb4:	bne	ef94 <gen_port+0x200>
    eeb8:	b	efc0 <gen_port+0x22c>
    eebc:	cmp	r5, #6
    eec0:	beq	ee94 <gen_port+0x100>
    eec4:	bl	100c <abort@plt>
    eec8:	add	r0, sp, #4
    eecc:	str	r6, [r0]
    eed0:	mov	r1, #132	; 0x84
    eed4:	mov	r2, r8
    eed8:	ldr	r0, [r6, #96]	; 0x60
    eedc:	str	r0, [r7]
    eee0:	mov	r0, r9
    eee4:	bl	9af4 <sf_gen_portop>
    eee8:	ldr	r1, [r0, #44]	; 0x2c
    eeec:	cmp	r0, #0
    eef0:	clz	r1, r1
    eef4:	lsr	r1, r1, #5
    eef8:	str	r1, [r0, #44]	; 0x2c
    eefc:	beq	ef38 <gen_port+0x1a4>
    ef00:	ldr	r2, [r7]
    ef04:	mov	r3, r0
    ef08:	b	ef10 <gen_port+0x17c>
    ef0c:	ldr	r1, [r3, #44]	; 0x2c
    ef10:	cmp	r1, #0
    ef14:	mov	r1, #84	; 0x54
    ef18:	add	r6, r3, #84	; 0x54
    ef1c:	movweq	r1, #60	; 0x3c
    ef20:	addeq	r6, r3, #60	; 0x3c
    ef24:	ldr	r3, [r3, r1]
    ef28:	str	r2, [r6]
    ef2c:	cmp	r3, #0
    ef30:	bne	ef0c <gen_port+0x178>
    ef34:	ldr	r1, [r0, #44]	; 0x2c
    ef38:	clz	r1, r1
    ef3c:	cmp	r5, #0
    ef40:	lsr	r1, r1, #5
    ef44:	str	r1, [r0, #44]	; 0x2c
    ef48:	str	r5, [sp, #12]
    ef4c:	beq	ef7c <gen_port+0x1e8>
    ef50:	mov	r2, r5
    ef54:	ldr	r3, [r2, #44]	; 0x2c
    ef58:	add	r1, r2, #84	; 0x54
    ef5c:	cmp	r3, #0
    ef60:	mov	r3, #84	; 0x54
    ef64:	movweq	r3, #60	; 0x3c
    ef68:	addeq	r1, r2, #60	; 0x3c
    ef6c:	ldr	r2, [r2, r3]
    ef70:	cmp	r2, #0
    ef74:	bne	ef54 <gen_port+0x1c0>
    ef78:	b	ef80 <gen_port+0x1ec>
    ef7c:	add	r1, sp, #12
    ef80:	str	r0, [r1]
    ef84:	ldr	r0, [r0, #96]	; 0x60
    ef88:	str	r0, [r7]
    ef8c:	cmp	r4, #0
    ef90:	beq	efc0 <gen_port+0x22c>
    ef94:	mov	r1, r4
    ef98:	ldr	r2, [r1, #44]	; 0x2c
    ef9c:	add	r3, r1, #84	; 0x54
    efa0:	cmp	r2, #0
    efa4:	mov	r2, #84	; 0x54
    efa8:	movweq	r2, #60	; 0x3c
    efac:	addeq	r3, r1, #60	; 0x3c
    efb0:	ldr	r1, [r1, r2]
    efb4:	str	r0, [r3]
    efb8:	cmp	r1, #0
    efbc:	bne	ef98 <gen_port+0x204>
    efc0:	ldr	r0, [r4, #44]	; 0x2c
    efc4:	cmp	r5, #0
    efc8:	clz	r0, r0
    efcc:	lsr	r0, r0, #5
    efd0:	str	r0, [r4, #44]	; 0x2c
    efd4:	ldr	r1, [r5, #44]	; 0x2c
    efd8:	clz	r0, r1
    efdc:	lsr	r0, r0, #5
    efe0:	str	r0, [r5, #44]	; 0x2c
    efe4:	str	r5, [sp, #8]
    efe8:	beq	f034 <gen_port+0x2a0>
    efec:	cmp	r1, #0
    eff0:	mov	r1, #60	; 0x3c
    eff4:	add	r0, r5, #60	; 0x3c
    eff8:	movweq	r1, #84	; 0x54
    effc:	addeq	r0, r5, #84	; 0x54
    f000:	ldr	r1, [r5, r1]
    f004:	cmp	r1, #0
    f008:	beq	f038 <gen_port+0x2a4>
    f00c:	ldr	r2, [r1, #44]	; 0x2c
    f010:	add	r0, r1, #84	; 0x54
    f014:	cmp	r2, #0
    f018:	mov	r2, #84	; 0x54
    f01c:	movweq	r2, #60	; 0x3c
    f020:	addeq	r0, r1, #60	; 0x3c
    f024:	ldr	r1, [r1, r2]
    f028:	cmp	r1, #0
    f02c:	bne	f00c <gen_port+0x278>
    f030:	b	f038 <gen_port+0x2a4>
    f034:	add	r0, sp, #8
    f038:	str	r4, [r0]
    f03c:	ldr	r0, [r5, #44]	; 0x2c
    f040:	clz	r0, r0
    f044:	lsr	r0, r0, #5
    f048:	str	r0, [r5, #44]	; 0x2c
    f04c:	ldr	r0, [r4, #96]	; 0x60
    f050:	str	r0, [r7]
    f054:	mov	r0, r5
    f058:	sub	sp, fp, #24
    f05c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000f060 <gen_port6>:
    f060:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f064:	add	fp, sp, #24
    f068:	sub	sp, sp, #16
    f06c:	mov	r9, r0
    f070:	movw	r0, #34525	; 0x86dd
    f074:	mov	r8, r2
    f078:	mov	r5, r1
    f07c:	bl	6e1c <gen_linktype>
    f080:	mov	r4, r0
    f084:	cmp	r5, #16
    f088:	bgt	f154 <gen_port6+0xf4>
    f08c:	cmn	r5, #1
    f090:	bne	f188 <gen_port6+0x128>
    f094:	mov	r0, r9
    f098:	mov	r1, #6
    f09c:	mov	r2, r8
    f0a0:	bl	a254 <sf_gen_portop6>
    f0a4:	mov	r6, r0
    f0a8:	mov	r0, r9
    f0ac:	mov	r1, #17
    f0b0:	mov	r2, r8
    f0b4:	bl	a254 <sf_gen_portop6>
    f0b8:	mov	r5, r0
    f0bc:	ldr	r0, [r6, #44]	; 0x2c
    f0c0:	cmp	r6, #0
    f0c4:	mov	r7, r5
    f0c8:	clz	r0, r0
    f0cc:	lsr	r1, r0, #5
    f0d0:	str	r1, [r6, #44]	; 0x2c
    f0d4:	ldr	r0, [r7, #96]!	; 0x60
    f0d8:	beq	f110 <gen_port6+0xb0>
    f0dc:	mov	r2, r6
    f0e0:	b	f0e8 <gen_port6+0x88>
    f0e4:	ldr	r1, [r2, #44]	; 0x2c
    f0e8:	cmp	r1, #0
    f0ec:	mov	r1, #84	; 0x54
    f0f0:	add	r3, r2, #84	; 0x54
    f0f4:	movweq	r1, #60	; 0x3c
    f0f8:	addeq	r3, r2, #60	; 0x3c
    f0fc:	ldr	r2, [r2, r1]
    f100:	str	r0, [r3]
    f104:	cmp	r2, #0
    f108:	bne	f0e4 <gen_port6+0x84>
    f10c:	ldr	r1, [r6, #44]	; 0x2c
    f110:	clz	r0, r1
    f114:	cmp	r5, #0
    f118:	lsr	r0, r0, #5
    f11c:	str	r0, [r6, #44]	; 0x2c
    f120:	str	r5, [sp, #4]
    f124:	beq	f194 <gen_port6+0x134>
    f128:	mov	r1, r5
    f12c:	ldr	r2, [r1, #44]	; 0x2c
    f130:	add	r0, r1, #84	; 0x54
    f134:	cmp	r2, #0
    f138:	mov	r2, #84	; 0x54
    f13c:	movweq	r2, #60	; 0x3c
    f140:	addeq	r0, r1, #60	; 0x3c
    f144:	ldr	r1, [r1, r2]
    f148:	cmp	r1, #0
    f14c:	bne	f12c <gen_port6+0xcc>
    f150:	b	f198 <gen_port6+0x138>
    f154:	cmp	r5, #132	; 0x84
    f158:	cmpne	r5, #17
    f15c:	bne	f190 <gen_port6+0x130>
    f160:	mov	r0, r9
    f164:	mov	r1, r5
    f168:	mov	r2, r8
    f16c:	bl	a254 <sf_gen_portop6>
    f170:	mov	r7, r0
    f174:	mov	r5, r0
    f178:	ldr	r0, [r7, #96]!	; 0x60
    f17c:	cmp	r4, #0
    f180:	bne	f260 <gen_port6+0x200>
    f184:	b	f28c <gen_port6+0x22c>
    f188:	cmp	r5, #6
    f18c:	beq	f160 <gen_port6+0x100>
    f190:	bl	100c <abort@plt>
    f194:	add	r0, sp, #4
    f198:	str	r6, [r0]
    f19c:	mov	r1, #132	; 0x84
    f1a0:	mov	r2, r8
    f1a4:	ldr	r0, [r6, #96]	; 0x60
    f1a8:	str	r0, [r7]
    f1ac:	mov	r0, r9
    f1b0:	bl	a254 <sf_gen_portop6>
    f1b4:	ldr	r1, [r0, #44]	; 0x2c
    f1b8:	cmp	r0, #0
    f1bc:	clz	r1, r1
    f1c0:	lsr	r1, r1, #5
    f1c4:	str	r1, [r0, #44]	; 0x2c
    f1c8:	beq	f204 <gen_port6+0x1a4>
    f1cc:	ldr	r2, [r7]
    f1d0:	mov	r3, r0
    f1d4:	b	f1dc <gen_port6+0x17c>
    f1d8:	ldr	r1, [r3, #44]	; 0x2c
    f1dc:	cmp	r1, #0
    f1e0:	mov	r1, #84	; 0x54
    f1e4:	add	r6, r3, #84	; 0x54
    f1e8:	movweq	r1, #60	; 0x3c
    f1ec:	addeq	r6, r3, #60	; 0x3c
    f1f0:	ldr	r3, [r3, r1]
    f1f4:	str	r2, [r6]
    f1f8:	cmp	r3, #0
    f1fc:	bne	f1d8 <gen_port6+0x178>
    f200:	ldr	r1, [r0, #44]	; 0x2c
    f204:	clz	r1, r1
    f208:	cmp	r5, #0
    f20c:	lsr	r1, r1, #5
    f210:	str	r1, [r0, #44]	; 0x2c
    f214:	str	r5, [sp, #12]
    f218:	beq	f248 <gen_port6+0x1e8>
    f21c:	mov	r2, r5
    f220:	ldr	r3, [r2, #44]	; 0x2c
    f224:	add	r1, r2, #84	; 0x54
    f228:	cmp	r3, #0
    f22c:	mov	r3, #84	; 0x54
    f230:	movweq	r3, #60	; 0x3c
    f234:	addeq	r1, r2, #60	; 0x3c
    f238:	ldr	r2, [r2, r3]
    f23c:	cmp	r2, #0
    f240:	bne	f220 <gen_port6+0x1c0>
    f244:	b	f24c <gen_port6+0x1ec>
    f248:	add	r1, sp, #12
    f24c:	str	r0, [r1]
    f250:	ldr	r0, [r0, #96]	; 0x60
    f254:	str	r0, [r7]
    f258:	cmp	r4, #0
    f25c:	beq	f28c <gen_port6+0x22c>
    f260:	mov	r1, r4
    f264:	ldr	r2, [r1, #44]	; 0x2c
    f268:	add	r3, r1, #84	; 0x54
    f26c:	cmp	r2, #0
    f270:	mov	r2, #84	; 0x54
    f274:	movweq	r2, #60	; 0x3c
    f278:	addeq	r3, r1, #60	; 0x3c
    f27c:	ldr	r1, [r1, r2]
    f280:	str	r0, [r3]
    f284:	cmp	r1, #0
    f288:	bne	f264 <gen_port6+0x204>
    f28c:	ldr	r0, [r4, #44]	; 0x2c
    f290:	cmp	r5, #0
    f294:	clz	r0, r0
    f298:	lsr	r0, r0, #5
    f29c:	str	r0, [r4, #44]	; 0x2c
    f2a0:	ldr	r1, [r5, #44]	; 0x2c
    f2a4:	clz	r0, r1
    f2a8:	lsr	r0, r0, #5
    f2ac:	str	r0, [r5, #44]	; 0x2c
    f2b0:	str	r5, [sp, #8]
    f2b4:	beq	f300 <gen_port6+0x2a0>
    f2b8:	cmp	r1, #0
    f2bc:	mov	r1, #60	; 0x3c
    f2c0:	add	r0, r5, #60	; 0x3c
    f2c4:	movweq	r1, #84	; 0x54
    f2c8:	addeq	r0, r5, #84	; 0x54
    f2cc:	ldr	r1, [r5, r1]
    f2d0:	cmp	r1, #0
    f2d4:	beq	f304 <gen_port6+0x2a4>
    f2d8:	ldr	r2, [r1, #44]	; 0x2c
    f2dc:	add	r0, r1, #84	; 0x54
    f2e0:	cmp	r2, #0
    f2e4:	mov	r2, #84	; 0x54
    f2e8:	movweq	r2, #60	; 0x3c
    f2ec:	addeq	r0, r1, #60	; 0x3c
    f2f0:	ldr	r1, [r1, r2]
    f2f4:	cmp	r1, #0
    f2f8:	bne	f2d8 <gen_port6+0x278>
    f2fc:	b	f304 <gen_port6+0x2a4>
    f300:	add	r0, sp, #8
    f304:	str	r4, [r0]
    f308:	ldr	r0, [r5, #44]	; 0x2c
    f30c:	clz	r0, r0
    f310:	lsr	r0, r0, #5
    f314:	str	r0, [r5, #44]	; 0x2c
    f318:	ldr	r0, [r4, #96]	; 0x60
    f31c:	str	r0, [r7]
    f320:	mov	r0, r5
    f324:	sub	sp, fp, #24
    f328:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000f32c <gen_portrange>:
    f32c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f330:	add	fp, sp, #28
    f334:	sub	sp, sp, #12
    f338:	mov	sl, r0
    f33c:	mov	r0, #2048	; 0x800
    f340:	mov	r8, r3
    f344:	mov	r5, r2
    f348:	mov	r9, r1
    f34c:	bl	6e1c <gen_linktype>
    f350:	mov	r4, r0
    f354:	cmp	r5, #16
    f358:	bgt	f42c <gen_portrange+0x100>
    f35c:	cmn	r5, #1
    f360:	bne	f464 <gen_portrange+0x138>
    f364:	mov	r0, sl
    f368:	mov	r1, r9
    f36c:	mov	r2, #6
    f370:	mov	r3, r8
    f374:	bl	a580 <sf_gen_portrangeop>
    f378:	mov	r7, r0
    f37c:	mov	r0, sl
    f380:	mov	r1, r9
    f384:	mov	r2, #17
    f388:	mov	r3, r8
    f38c:	bl	a580 <sf_gen_portrangeop>
    f390:	mov	r5, r0
    f394:	ldr	r0, [r7, #44]	; 0x2c
    f398:	cmp	r7, #0
    f39c:	mov	r6, r5
    f3a0:	clz	r0, r0
    f3a4:	lsr	r1, r0, #5
    f3a8:	str	r1, [r7, #44]	; 0x2c
    f3ac:	ldr	r0, [r6, #96]!	; 0x60
    f3b0:	beq	f3e8 <gen_portrange+0xbc>
    f3b4:	mov	r2, r7
    f3b8:	b	f3c0 <gen_portrange+0x94>
    f3bc:	ldr	r1, [r2, #44]	; 0x2c
    f3c0:	cmp	r1, #0
    f3c4:	mov	r1, #84	; 0x54
    f3c8:	add	r3, r2, #84	; 0x54
    f3cc:	movweq	r1, #60	; 0x3c
    f3d0:	addeq	r3, r2, #60	; 0x3c
    f3d4:	ldr	r2, [r2, r1]
    f3d8:	str	r0, [r3]
    f3dc:	cmp	r2, #0
    f3e0:	bne	f3bc <gen_portrange+0x90>
    f3e4:	ldr	r1, [r7, #44]	; 0x2c
    f3e8:	clz	r0, r1
    f3ec:	cmp	r5, #0
    f3f0:	lsr	r0, r0, #5
    f3f4:	str	r0, [r7, #44]	; 0x2c
    f3f8:	str	r5, [sp]
    f3fc:	beq	f470 <gen_portrange+0x144>
    f400:	mov	r1, r5
    f404:	ldr	r2, [r1, #44]	; 0x2c
    f408:	add	r0, r1, #84	; 0x54
    f40c:	cmp	r2, #0
    f410:	mov	r2, #84	; 0x54
    f414:	movweq	r2, #60	; 0x3c
    f418:	addeq	r0, r1, #60	; 0x3c
    f41c:	ldr	r1, [r1, r2]
    f420:	cmp	r1, #0
    f424:	bne	f404 <gen_portrange+0xd8>
    f428:	b	f474 <gen_portrange+0x148>
    f42c:	cmp	r5, #132	; 0x84
    f430:	cmpne	r5, #17
    f434:	bne	f46c <gen_portrange+0x140>
    f438:	mov	r0, sl
    f43c:	mov	r1, r9
    f440:	mov	r2, r5
    f444:	mov	r3, r8
    f448:	bl	a580 <sf_gen_portrangeop>
    f44c:	mov	r6, r0
    f450:	mov	r5, r0
    f454:	ldr	r0, [r6, #96]!	; 0x60
    f458:	cmp	r4, #0
    f45c:	bne	f540 <gen_portrange+0x214>
    f460:	b	f56c <gen_portrange+0x240>
    f464:	cmp	r5, #6
    f468:	beq	f438 <gen_portrange+0x10c>
    f46c:	bl	100c <abort@plt>
    f470:	mov	r0, sp
    f474:	str	r7, [r0]
    f478:	mov	r1, r9
    f47c:	mov	r2, #132	; 0x84
    f480:	mov	r3, r8
    f484:	ldr	r0, [r7, #96]	; 0x60
    f488:	str	r0, [r6]
    f48c:	mov	r0, sl
    f490:	bl	a580 <sf_gen_portrangeop>
    f494:	ldr	r1, [r0, #44]	; 0x2c
    f498:	cmp	r0, #0
    f49c:	clz	r1, r1
    f4a0:	lsr	r1, r1, #5
    f4a4:	str	r1, [r0, #44]	; 0x2c
    f4a8:	beq	f4e4 <gen_portrange+0x1b8>
    f4ac:	ldr	r2, [r6]
    f4b0:	mov	r3, r0
    f4b4:	b	f4bc <gen_portrange+0x190>
    f4b8:	ldr	r1, [r3, #44]	; 0x2c
    f4bc:	cmp	r1, #0
    f4c0:	mov	r1, #84	; 0x54
    f4c4:	add	r7, r3, #84	; 0x54
    f4c8:	movweq	r1, #60	; 0x3c
    f4cc:	addeq	r7, r3, #60	; 0x3c
    f4d0:	ldr	r3, [r3, r1]
    f4d4:	str	r2, [r7]
    f4d8:	cmp	r3, #0
    f4dc:	bne	f4b8 <gen_portrange+0x18c>
    f4e0:	ldr	r1, [r0, #44]	; 0x2c
    f4e4:	clz	r1, r1
    f4e8:	cmp	r5, #0
    f4ec:	lsr	r1, r1, #5
    f4f0:	str	r1, [r0, #44]	; 0x2c
    f4f4:	str	r5, [sp, #8]
    f4f8:	beq	f528 <gen_portrange+0x1fc>
    f4fc:	mov	r2, r5
    f500:	ldr	r3, [r2, #44]	; 0x2c
    f504:	add	r1, r2, #84	; 0x54
    f508:	cmp	r3, #0
    f50c:	mov	r3, #84	; 0x54
    f510:	movweq	r3, #60	; 0x3c
    f514:	addeq	r1, r2, #60	; 0x3c
    f518:	ldr	r2, [r2, r3]
    f51c:	cmp	r2, #0
    f520:	bne	f500 <gen_portrange+0x1d4>
    f524:	b	f52c <gen_portrange+0x200>
    f528:	add	r1, sp, #8
    f52c:	str	r0, [r1]
    f530:	ldr	r0, [r0, #96]	; 0x60
    f534:	str	r0, [r6]
    f538:	cmp	r4, #0
    f53c:	beq	f56c <gen_portrange+0x240>
    f540:	mov	r1, r4
    f544:	ldr	r2, [r1, #44]	; 0x2c
    f548:	add	r3, r1, #84	; 0x54
    f54c:	cmp	r2, #0
    f550:	mov	r2, #84	; 0x54
    f554:	movweq	r2, #60	; 0x3c
    f558:	addeq	r3, r1, #60	; 0x3c
    f55c:	ldr	r1, [r1, r2]
    f560:	str	r0, [r3]
    f564:	cmp	r1, #0
    f568:	bne	f544 <gen_portrange+0x218>
    f56c:	ldr	r0, [r4, #44]	; 0x2c
    f570:	cmp	r5, #0
    f574:	clz	r0, r0
    f578:	lsr	r0, r0, #5
    f57c:	str	r0, [r4, #44]	; 0x2c
    f580:	ldr	r1, [r5, #44]	; 0x2c
    f584:	clz	r0, r1
    f588:	lsr	r0, r0, #5
    f58c:	str	r0, [r5, #44]	; 0x2c
    f590:	str	r5, [sp, #4]
    f594:	beq	f5e0 <gen_portrange+0x2b4>
    f598:	cmp	r1, #0
    f59c:	mov	r1, #60	; 0x3c
    f5a0:	add	r0, r5, #60	; 0x3c
    f5a4:	movweq	r1, #84	; 0x54
    f5a8:	addeq	r0, r5, #84	; 0x54
    f5ac:	ldr	r1, [r5, r1]
    f5b0:	cmp	r1, #0
    f5b4:	beq	f5e4 <gen_portrange+0x2b8>
    f5b8:	ldr	r2, [r1, #44]	; 0x2c
    f5bc:	add	r0, r1, #84	; 0x54
    f5c0:	cmp	r2, #0
    f5c4:	mov	r2, #84	; 0x54
    f5c8:	movweq	r2, #60	; 0x3c
    f5cc:	addeq	r0, r1, #60	; 0x3c
    f5d0:	ldr	r1, [r1, r2]
    f5d4:	cmp	r1, #0
    f5d8:	bne	f5b8 <gen_portrange+0x28c>
    f5dc:	b	f5e4 <gen_portrange+0x2b8>
    f5e0:	add	r0, sp, #4
    f5e4:	str	r4, [r0]
    f5e8:	ldr	r0, [r5, #44]	; 0x2c
    f5ec:	clz	r0, r0
    f5f0:	lsr	r0, r0, #5
    f5f4:	str	r0, [r5, #44]	; 0x2c
    f5f8:	ldr	r0, [r4, #96]	; 0x60
    f5fc:	str	r0, [r6]
    f600:	mov	r0, r5
    f604:	sub	sp, fp, #28
    f608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f60c <gen_portrange6>:
    f60c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f610:	add	fp, sp, #28
    f614:	sub	sp, sp, #12
    f618:	mov	sl, r0
    f61c:	movw	r0, #34525	; 0x86dd
    f620:	mov	r8, r3
    f624:	mov	r5, r2
    f628:	mov	r9, r1
    f62c:	bl	6e1c <gen_linktype>
    f630:	mov	r4, r0
    f634:	cmp	r5, #16
    f638:	bgt	f70c <gen_portrange6+0x100>
    f63c:	cmn	r5, #1
    f640:	bne	f744 <gen_portrange6+0x138>
    f644:	mov	r0, sl
    f648:	mov	r1, r9
    f64c:	mov	r2, #6
    f650:	mov	r3, r8
    f654:	bl	aa94 <sf_gen_portrangeop6>
    f658:	mov	r7, r0
    f65c:	mov	r0, sl
    f660:	mov	r1, r9
    f664:	mov	r2, #17
    f668:	mov	r3, r8
    f66c:	bl	aa94 <sf_gen_portrangeop6>
    f670:	mov	r5, r0
    f674:	ldr	r0, [r7, #44]	; 0x2c
    f678:	cmp	r7, #0
    f67c:	mov	r6, r5
    f680:	clz	r0, r0
    f684:	lsr	r1, r0, #5
    f688:	str	r1, [r7, #44]	; 0x2c
    f68c:	ldr	r0, [r6, #96]!	; 0x60
    f690:	beq	f6c8 <gen_portrange6+0xbc>
    f694:	mov	r2, r7
    f698:	b	f6a0 <gen_portrange6+0x94>
    f69c:	ldr	r1, [r2, #44]	; 0x2c
    f6a0:	cmp	r1, #0
    f6a4:	mov	r1, #84	; 0x54
    f6a8:	add	r3, r2, #84	; 0x54
    f6ac:	movweq	r1, #60	; 0x3c
    f6b0:	addeq	r3, r2, #60	; 0x3c
    f6b4:	ldr	r2, [r2, r1]
    f6b8:	str	r0, [r3]
    f6bc:	cmp	r2, #0
    f6c0:	bne	f69c <gen_portrange6+0x90>
    f6c4:	ldr	r1, [r7, #44]	; 0x2c
    f6c8:	clz	r0, r1
    f6cc:	cmp	r5, #0
    f6d0:	lsr	r0, r0, #5
    f6d4:	str	r0, [r7, #44]	; 0x2c
    f6d8:	str	r5, [sp]
    f6dc:	beq	f750 <gen_portrange6+0x144>
    f6e0:	mov	r1, r5
    f6e4:	ldr	r2, [r1, #44]	; 0x2c
    f6e8:	add	r0, r1, #84	; 0x54
    f6ec:	cmp	r2, #0
    f6f0:	mov	r2, #84	; 0x54
    f6f4:	movweq	r2, #60	; 0x3c
    f6f8:	addeq	r0, r1, #60	; 0x3c
    f6fc:	ldr	r1, [r1, r2]
    f700:	cmp	r1, #0
    f704:	bne	f6e4 <gen_portrange6+0xd8>
    f708:	b	f754 <gen_portrange6+0x148>
    f70c:	cmp	r5, #132	; 0x84
    f710:	cmpne	r5, #17
    f714:	bne	f74c <gen_portrange6+0x140>
    f718:	mov	r0, sl
    f71c:	mov	r1, r9
    f720:	mov	r2, r5
    f724:	mov	r3, r8
    f728:	bl	aa94 <sf_gen_portrangeop6>
    f72c:	mov	r6, r0
    f730:	mov	r5, r0
    f734:	ldr	r0, [r6, #96]!	; 0x60
    f738:	cmp	r4, #0
    f73c:	bne	f820 <gen_portrange6+0x214>
    f740:	b	f84c <gen_portrange6+0x240>
    f744:	cmp	r5, #6
    f748:	beq	f718 <gen_portrange6+0x10c>
    f74c:	bl	100c <abort@plt>
    f750:	mov	r0, sp
    f754:	str	r7, [r0]
    f758:	mov	r1, r9
    f75c:	mov	r2, #132	; 0x84
    f760:	mov	r3, r8
    f764:	ldr	r0, [r7, #96]	; 0x60
    f768:	str	r0, [r6]
    f76c:	mov	r0, sl
    f770:	bl	aa94 <sf_gen_portrangeop6>
    f774:	ldr	r1, [r0, #44]	; 0x2c
    f778:	cmp	r0, #0
    f77c:	clz	r1, r1
    f780:	lsr	r1, r1, #5
    f784:	str	r1, [r0, #44]	; 0x2c
    f788:	beq	f7c4 <gen_portrange6+0x1b8>
    f78c:	ldr	r2, [r6]
    f790:	mov	r3, r0
    f794:	b	f79c <gen_portrange6+0x190>
    f798:	ldr	r1, [r3, #44]	; 0x2c
    f79c:	cmp	r1, #0
    f7a0:	mov	r1, #84	; 0x54
    f7a4:	add	r7, r3, #84	; 0x54
    f7a8:	movweq	r1, #60	; 0x3c
    f7ac:	addeq	r7, r3, #60	; 0x3c
    f7b0:	ldr	r3, [r3, r1]
    f7b4:	str	r2, [r7]
    f7b8:	cmp	r3, #0
    f7bc:	bne	f798 <gen_portrange6+0x18c>
    f7c0:	ldr	r1, [r0, #44]	; 0x2c
    f7c4:	clz	r1, r1
    f7c8:	cmp	r5, #0
    f7cc:	lsr	r1, r1, #5
    f7d0:	str	r1, [r0, #44]	; 0x2c
    f7d4:	str	r5, [sp, #8]
    f7d8:	beq	f808 <gen_portrange6+0x1fc>
    f7dc:	mov	r2, r5
    f7e0:	ldr	r3, [r2, #44]	; 0x2c
    f7e4:	add	r1, r2, #84	; 0x54
    f7e8:	cmp	r3, #0
    f7ec:	mov	r3, #84	; 0x54
    f7f0:	movweq	r3, #60	; 0x3c
    f7f4:	addeq	r1, r2, #60	; 0x3c
    f7f8:	ldr	r2, [r2, r3]
    f7fc:	cmp	r2, #0
    f800:	bne	f7e0 <gen_portrange6+0x1d4>
    f804:	b	f80c <gen_portrange6+0x200>
    f808:	add	r1, sp, #8
    f80c:	str	r0, [r1]
    f810:	ldr	r0, [r0, #96]	; 0x60
    f814:	str	r0, [r6]
    f818:	cmp	r4, #0
    f81c:	beq	f84c <gen_portrange6+0x240>
    f820:	mov	r1, r4
    f824:	ldr	r2, [r1, #44]	; 0x2c
    f828:	add	r3, r1, #84	; 0x54
    f82c:	cmp	r2, #0
    f830:	mov	r2, #84	; 0x54
    f834:	movweq	r2, #60	; 0x3c
    f838:	addeq	r3, r1, #60	; 0x3c
    f83c:	ldr	r1, [r1, r2]
    f840:	str	r0, [r3]
    f844:	cmp	r1, #0
    f848:	bne	f824 <gen_portrange6+0x218>
    f84c:	ldr	r0, [r4, #44]	; 0x2c
    f850:	cmp	r5, #0
    f854:	clz	r0, r0
    f858:	lsr	r0, r0, #5
    f85c:	str	r0, [r4, #44]	; 0x2c
    f860:	ldr	r1, [r5, #44]	; 0x2c
    f864:	clz	r0, r1
    f868:	lsr	r0, r0, #5
    f86c:	str	r0, [r5, #44]	; 0x2c
    f870:	str	r5, [sp, #4]
    f874:	beq	f8c0 <gen_portrange6+0x2b4>
    f878:	cmp	r1, #0
    f87c:	mov	r1, #60	; 0x3c
    f880:	add	r0, r5, #60	; 0x3c
    f884:	movweq	r1, #84	; 0x54
    f888:	addeq	r0, r5, #84	; 0x54
    f88c:	ldr	r1, [r5, r1]
    f890:	cmp	r1, #0
    f894:	beq	f8c4 <gen_portrange6+0x2b8>
    f898:	ldr	r2, [r1, #44]	; 0x2c
    f89c:	add	r0, r1, #84	; 0x54
    f8a0:	cmp	r2, #0
    f8a4:	mov	r2, #84	; 0x54
    f8a8:	movweq	r2, #60	; 0x3c
    f8ac:	addeq	r0, r1, #60	; 0x3c
    f8b0:	ldr	r1, [r1, r2]
    f8b4:	cmp	r1, #0
    f8b8:	bne	f898 <gen_portrange6+0x28c>
    f8bc:	b	f8c4 <gen_portrange6+0x2b8>
    f8c0:	add	r0, sp, #4
    f8c4:	str	r4, [r0]
    f8c8:	ldr	r0, [r5, #44]	; 0x2c
    f8cc:	clz	r0, r0
    f8d0:	lsr	r0, r0, #5
    f8d4:	str	r0, [r5, #44]	; 0x2c
    f8d8:	ldr	r0, [r4, #96]	; 0x60
    f8dc:	str	r0, [r6]
    f8e0:	mov	r0, r5
    f8e4:	sub	sp, fp, #28
    f8e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f8ec <lookup_proto>:
    f8ec:	push	{r4, sl, fp, lr}
    f8f0:	add	fp, sp, #8
    f8f4:	mov	r4, r0
    f8f8:	mvn	r0, #0
    f8fc:	cmp	r1, #24
    f900:	bhi	f984 <lookup_proto+0x98>
    f904:	add	r2, pc, #4
    f908:	ldr	r1, [r2, r1, lsl #2]
    f90c:	add	pc, r2, r1
    f910:	.word	0x00000064
    f914:	.word	0x00000078
    f918:	.word	0x00000064
    f91c:	.word	0x00000074
    f920:	.word	0x00000074
    f924:	.word	0x00000074
    f928:	.word	0x00000074
    f92c:	.word	0x00000074
    f930:	.word	0x00000074
    f934:	.word	0x00000074
    f938:	.word	0x00000074
    f93c:	.word	0x00000074
    f940:	.word	0x00000074
    f944:	.word	0x00000074
    f948:	.word	0x00000074
    f94c:	.word	0x00000074
    f950:	.word	0x00000074
    f954:	.word	0x00000064
    f958:	.word	0x00000074
    f95c:	.word	0x00000074
    f960:	.word	0x00000074
    f964:	.word	0x00000074
    f968:	.word	0x00000074
    f96c:	.word	0x00000074
    f970:	.word	0x000000a8
    f974:	mov	r0, r4
    f978:	bl	1f0b8 <pcap_nametoproto>
    f97c:	cmn	r0, #1
    f980:	beq	fa24 <lookup_proto+0x138>
    f984:	pop	{r4, sl, fp, pc}
    f988:	mov	r0, r4
    f98c:	bl	1f0d4 <pcap_nametoeproto>
    f990:	cmn	r0, #1
    f994:	bne	f984 <lookup_proto+0x98>
    f998:	mov	r0, r4
    f99c:	bl	1f140 <pcap_nametollc>
    f9a0:	cmn	r0, #1
    f9a4:	bne	f984 <lookup_proto+0x98>
    f9a8:	ldr	r0, [pc, #136]	; fa38 <lookup_proto+0x14c>
    f9ac:	mov	r1, r4
    f9b0:	add	r0, pc, r0
    f9b4:	bl	2204 <sf_bpf_error>
    f9b8:	ldr	r1, [pc, #124]	; fa3c <lookup_proto+0x150>
    f9bc:	mov	r0, r4
    f9c0:	add	r1, pc, r1
    f9c4:	bl	e50 <strcmp@plt>
    f9c8:	cmp	r0, #0
    f9cc:	moveq	r0, #130	; 0x82
    f9d0:	popeq	{r4, sl, fp, pc}
    f9d4:	ldr	r1, [pc, #100]	; fa40 <lookup_proto+0x154>
    f9d8:	mov	r0, r4
    f9dc:	add	r1, pc, r1
    f9e0:	bl	e50 <strcmp@plt>
    f9e4:	cmp	r0, #0
    f9e8:	beq	fa1c <lookup_proto+0x130>
    f9ec:	ldr	r1, [pc, #80]	; fa44 <lookup_proto+0x158>
    f9f0:	mov	r0, r4
    f9f4:	add	r1, pc, r1
    f9f8:	bl	e50 <strcmp@plt>
    f9fc:	mov	r1, r0
    fa00:	mov	r0, #129	; 0x81
    fa04:	cmp	r1, #0
    fa08:	popeq	{r4, sl, fp, pc}
    fa0c:	ldr	r0, [pc, #52]	; fa48 <lookup_proto+0x15c>
    fa10:	mov	r1, r4
    fa14:	add	r0, pc, r0
    fa18:	bl	2204 <sf_bpf_error>
    fa1c:	mov	r0, #131	; 0x83
    fa20:	pop	{r4, sl, fp, pc}
    fa24:	ldr	r0, [pc, #8]	; fa34 <lookup_proto+0x148>
    fa28:	mov	r1, r4
    fa2c:	add	r0, pc, r0
    fa30:	bl	2204 <sf_bpf_error>
    fa34:	.word	0x0001a2f3
    fa38:	.word	0x0001a385
    fa3c:	.word	0x0001a38e
    fa40:	.word	0x0001a377
    fa44:	.word	0x0001a364
    fa48:	.word	0x0001a349

0000fa4c <gen_protochain>:
    fa4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fa50:	add	fp, sp, #28
    fa54:	sub	sp, sp, #436	; 0x1b4
    fa58:	mov	r7, r1
    fa5c:	mov	r6, r0
    fa60:	bl	1309c <alloc_reg>
    fa64:	str	r0, [sp, #20]
    fa68:	add	r0, sp, #24
    fa6c:	mov	r1, #0
    fa70:	mov	r2, #400	; 0x190
    fa74:	bl	f88 <memset@plt>
    fa78:	cmp	r7, #17
    fa7c:	cmpne	r7, #2
    fa80:	bne	fbdc <gen_protochain+0x190>
    fa84:	ldr	r8, [pc, #3868]	; 109a8 <gen_protochain+0xf5c>
    fa88:	add	r8, pc, r8
    fa8c:	ldr	r0, [r8, #36]	; 0x24
    fa90:	sub	r1, r0, #105	; 0x69
    fa94:	cmp	r1, #22
    fa98:	bhi	fab0 <gen_protochain+0x64>
    fa9c:	movw	r3, #16385	; 0x4001
    faa0:	mov	r2, #1
    faa4:	movt	r3, #64	; 0x40
    faa8:	tst	r3, r2, lsl r1
    faac:	bne	fabc <gen_protochain+0x70>
    fab0:	cmp	r0, #192	; 0xc0
    fab4:	cmpne	r0, #163	; 0xa3
    fab8:	bne	fac8 <gen_protochain+0x7c>
    fabc:	ldr	r0, [pc, #4044]	; 10a90 <gen_protochain+0x1044>
    fac0:	add	r0, pc, r0
    fac4:	bl	2204 <sf_bpf_error>
    fac8:	ldr	r0, [pc, #4036]	; 10a94 <gen_protochain+0x1048>
    facc:	mov	r1, #1
    fad0:	add	r0, pc, r0
    fad4:	str	r1, [r0]
    fad8:	ldr	r0, [r8, #92]	; 0x5c
    fadc:	ldr	sl, [pc, #4020]	; 10a98 <gen_protochain+0x104c>
    fae0:	add	sl, pc, sl
    fae4:	mov	r5, sl
    fae8:	ldr	r4, [r5, r0, lsl #3]!
    faec:	cmp	r4, #19
    faf0:	bhi	fb3c <gen_protochain+0xf0>
    faf4:	add	r1, r0, #1
    faf8:	cmp	r0, #15
    fafc:	str	r1, [r8, #92]	; 0x5c
    fb00:	bge	114e4 <gen_protochain+0x1a98>
    fb04:	mov	r0, #1024	; 0x400
    fb08:	lsl	r4, r0, r1
    fb0c:	mov	r0, r4
    fb10:	bl	f1c <malloc@plt>
    fb14:	cmp	r0, #0
    fb18:	str	r0, [r5, #12]
    fb1c:	beq	114e4 <gen_protochain+0x1a98>
    fb20:	mov	r1, #0
    fb24:	mov	r2, r4
    fb28:	add	r5, r5, #8
    fb2c:	bl	f88 <memset@plt>
    fb30:	cmp	r4, #19
    fb34:	str	r4, [r5]
    fb38:	bls	114e4 <gen_protochain+0x1a98>
    fb3c:	sub	r0, r4, #20
    fb40:	mov	r2, #0
    fb44:	cmp	r7, #17
    fb48:	str	r0, [r5]
    fb4c:	ldr	r1, [r5, #4]
    fb50:	str	r2, [r1, r0]!
    fb54:	str	r6, [sp, #16]
    fb58:	str	r7, [sp, #12]
    fb5c:	str	r1, [sp, #24]
    fb60:	beq	fca8 <gen_protochain+0x25c>
    fb64:	cmp	r7, #2
    fb68:	bne	114fc <gen_protochain+0x1ab0>
    fb6c:	mov	r0, #2048	; 0x800
    fb70:	bl	6e1c <gen_linktype>
    fb74:	mov	r9, r0
    fb78:	ldr	r0, [r8, #92]	; 0x5c
    fb7c:	mov	r4, sl
    fb80:	ldr	r6, [r4, r0, lsl #3]!
    fb84:	cmp	r6, #19
    fb88:	bhi	fd30 <gen_protochain+0x2e4>
    fb8c:	add	r5, r0, #1
    fb90:	cmp	r0, #15
    fb94:	str	r5, [r8, #92]	; 0x5c
    fb98:	bge	114e4 <gen_protochain+0x1a98>
    fb9c:	mov	r0, #1024	; 0x400
    fba0:	lsl	r6, r0, r5
    fba4:	mov	r0, r6
    fba8:	bl	f1c <malloc@plt>
    fbac:	cmp	r0, #0
    fbb0:	str	r0, [r4, #12]
    fbb4:	beq	114e4 <gen_protochain+0x1a98>
    fbb8:	mov	r1, #0
    fbbc:	mov	r2, r6
    fbc0:	add	r7, r4, #8
    fbc4:	bl	f88 <memset@plt>
    fbc8:	cmp	r6, #20
    fbcc:	str	r6, [r7]
    fbd0:	bcc	114e4 <gen_protochain+0x1a98>
    fbd4:	add	r4, sl, r5, lsl #3
    fbd8:	b	fd38 <gen_protochain+0x2ec>
    fbdc:	cmp	r7, #0
    fbe0:	bne	114f0 <gen_protochain+0x1aa4>
    fbe4:	mov	r0, r6
    fbe8:	mov	r1, #2
    fbec:	bl	fa4c <gen_protochain>
    fbf0:	mov	r4, r0
    fbf4:	mov	r0, r6
    fbf8:	mov	r1, #17
    fbfc:	bl	fa4c <gen_protochain>
    fc00:	ldr	r1, [r4, #44]	; 0x2c
    fc04:	cmp	r4, #0
    fc08:	clz	r1, r1
    fc0c:	lsr	r3, r1, #5
    fc10:	mov	r1, r0
    fc14:	str	r3, [r4, #44]	; 0x2c
    fc18:	ldr	r2, [r1, #96]!	; 0x60
    fc1c:	beq	fc54 <gen_protochain+0x208>
    fc20:	mov	r7, r4
    fc24:	b	fc2c <gen_protochain+0x1e0>
    fc28:	ldr	r3, [r7, #44]	; 0x2c
    fc2c:	cmp	r3, #0
    fc30:	mov	r3, #84	; 0x54
    fc34:	add	r6, r7, #84	; 0x54
    fc38:	movweq	r3, #60	; 0x3c
    fc3c:	addeq	r6, r7, #60	; 0x3c
    fc40:	ldr	r7, [r7, r3]
    fc44:	str	r2, [r6]
    fc48:	cmp	r7, #0
    fc4c:	bne	fc28 <gen_protochain+0x1dc>
    fc50:	ldr	r3, [r4, #44]	; 0x2c
    fc54:	clz	r2, r3
    fc58:	cmp	r0, #0
    fc5c:	lsr	r2, r2, #5
    fc60:	str	r2, [r4, #44]	; 0x2c
    fc64:	str	r0, [fp, #-36]	; 0xffffffdc
    fc68:	beq	fd18 <gen_protochain+0x2cc>
    fc6c:	mov	r3, r0
    fc70:	ldr	r7, [r3, #44]	; 0x2c
    fc74:	add	r2, r3, #84	; 0x54
    fc78:	cmp	r7, #0
    fc7c:	mov	r7, #84	; 0x54
    fc80:	movweq	r7, #60	; 0x3c
    fc84:	addeq	r2, r3, #60	; 0x3c
    fc88:	ldr	r3, [r3, r7]
    fc8c:	cmp	r3, #0
    fc90:	bne	fc70 <gen_protochain+0x224>
    fc94:	str	r4, [r2]
    fc98:	ldr	r2, [r4, #96]	; 0x60
    fc9c:	str	r2, [r1]
    fca0:	sub	sp, fp, #28
    fca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fca8:	movw	r0, #34525	; 0x86dd
    fcac:	bl	6e1c <gen_linktype>
    fcb0:	mov	r9, r0
    fcb4:	ldr	r0, [r8, #92]	; 0x5c
    fcb8:	mov	r4, sl
    fcbc:	ldr	r6, [r4, r0, lsl #3]!
    fcc0:	cmp	r6, #19
    fcc4:	bhi	fdd4 <gen_protochain+0x388>
    fcc8:	add	r5, r0, #1
    fccc:	cmp	r0, #15
    fcd0:	str	r5, [r8, #92]	; 0x5c
    fcd4:	bge	114e4 <gen_protochain+0x1a98>
    fcd8:	mov	r0, #1024	; 0x400
    fcdc:	lsl	r6, r0, r5
    fce0:	mov	r0, r6
    fce4:	bl	f1c <malloc@plt>
    fce8:	cmp	r0, #0
    fcec:	str	r0, [r4, #12]
    fcf0:	beq	114e4 <gen_protochain+0x1a98>
    fcf4:	mov	r1, #0
    fcf8:	mov	r2, r6
    fcfc:	add	r7, r4, #8
    fd00:	bl	f88 <memset@plt>
    fd04:	cmp	r6, #20
    fd08:	str	r6, [r7]
    fd0c:	bcc	114e4 <gen_protochain+0x1a98>
    fd10:	add	r4, sl, r5, lsl #3
    fd14:	b	fddc <gen_protochain+0x390>
    fd18:	sub	r2, fp, #36	; 0x24
    fd1c:	str	r4, [r2]
    fd20:	ldr	r2, [r4, #96]	; 0x60
    fd24:	str	r2, [r1]
    fd28:	sub	sp, fp, #28
    fd2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fd30:	mov	r5, r0
    fd34:	mov	r7, r4
    fd38:	sub	r0, r6, #20
    fd3c:	mov	r2, #48	; 0x30
    fd40:	str	r0, [r7]
    fd44:	ldr	r1, [r7, #4]
    fd48:	str	r2, [r1, r0]!
    fd4c:	ldr	r0, [r8, #44]	; 0x2c
    fd50:	ldr	r2, [r8, #48]	; 0x30
    fd54:	str	r1, [sp, #28]
    fd58:	add	r7, r2, r0
    fd5c:	str	r0, [sp, #8]
    fd60:	str	r2, [sp, #4]
    fd64:	add	r0, r7, #9
    fd68:	str	r0, [r1, #12]
    fd6c:	ldr	r6, [sl, r5, lsl #3]
    fd70:	cmp	r6, #19
    fd74:	bhi	fdc4 <gen_protochain+0x378>
    fd78:	add	sl, r5, #1
    fd7c:	cmp	r5, #15
    fd80:	str	sl, [r8, #92]	; 0x5c
    fd84:	bge	114e4 <gen_protochain+0x1a98>
    fd88:	mov	r0, #1024	; 0x400
    fd8c:	lsl	r6, r0, sl
    fd90:	mov	r0, r6
    fd94:	bl	f1c <malloc@plt>
    fd98:	cmp	r0, #0
    fd9c:	str	r0, [r4, #12]
    fda0:	beq	114e4 <gen_protochain+0x1a98>
    fda4:	mov	r1, #0
    fda8:	mov	r2, r6
    fdac:	add	r4, r4, #8
    fdb0:	bl	f88 <memset@plt>
    fdb4:	cmp	r6, #19
    fdb8:	str	r6, [r4]
    fdbc:	bhi	fdc8 <gen_protochain+0x37c>
    fdc0:	b	114e4 <gen_protochain+0x1a98>
    fdc4:	mov	sl, r5
    fdc8:	sub	r0, r6, #20
    fdcc:	mov	r1, #177	; 0xb1
    fdd0:	b	fe78 <gen_protochain+0x42c>
    fdd4:	mov	r5, r0
    fdd8:	mov	r7, r4
    fddc:	sub	r0, r6, #20
    fde0:	mov	r2, #48	; 0x30
    fde4:	str	r0, [r7]
    fde8:	ldr	r1, [r7, #4]
    fdec:	str	r2, [r1, r0]!
    fdf0:	ldr	r0, [r8, #44]	; 0x2c
    fdf4:	ldr	r2, [r8, #48]	; 0x30
    fdf8:	str	r1, [sp, #28]
    fdfc:	str	r0, [sp, #8]
    fe00:	add	r0, r0, r2
    fe04:	str	r2, [sp, #4]
    fe08:	add	r0, r0, #6
    fe0c:	str	r0, [r1, #12]
    fe10:	ldr	r6, [sl, r5, lsl #3]
    fe14:	cmp	r6, #19
    fe18:	bhi	fe68 <gen_protochain+0x41c>
    fe1c:	add	sl, r5, #1
    fe20:	cmp	r5, #15
    fe24:	str	sl, [r8, #92]	; 0x5c
    fe28:	bge	114e4 <gen_protochain+0x1a98>
    fe2c:	mov	r0, #1024	; 0x400
    fe30:	lsl	r6, r0, sl
    fe34:	mov	r0, r6
    fe38:	bl	f1c <malloc@plt>
    fe3c:	cmp	r0, #0
    fe40:	str	r0, [r4, #12]
    fe44:	beq	114e4 <gen_protochain+0x1a98>
    fe48:	mov	r1, #0
    fe4c:	mov	r2, r6
    fe50:	add	r4, r4, #8
    fe54:	bl	f88 <memset@plt>
    fe58:	cmp	r6, #19
    fe5c:	str	r6, [r4]
    fe60:	bhi	fe6c <gen_protochain+0x420>
    fe64:	b	114e4 <gen_protochain+0x1a98>
    fe68:	mov	sl, r5
    fe6c:	sub	r0, r6, #20
    fe70:	mov	r7, #40	; 0x28
    fe74:	mov	r1, #1
    fe78:	str	r0, [r4]
    fe7c:	ldr	r2, [r4, #4]
    fe80:	str	r1, [r2, r0]!
    fe84:	str	r2, [sp, #32]
    fe88:	str	r7, [r2, #12]
    fe8c:	ldr	r8, [pc, #4076]	; 10e80 <gen_protochain+0x1434>
    fe90:	str	r9, [sp]
    fe94:	add	r8, pc, r8
    fe98:	ldr	r6, [r8, sl, lsl #3]!
    fe9c:	cmp	r6, #19
    fea0:	bhi	ff04 <gen_protochain+0x4b8>
    fea4:	ldr	r0, [pc, #4056]	; 10e84 <gen_protochain+0x1438>
    fea8:	add	r5, sl, #1
    feac:	cmp	sl, #15
    feb0:	add	r0, pc, r0
    feb4:	str	r5, [r0, #92]	; 0x5c
    feb8:	bge	114e4 <gen_protochain+0x1a98>
    febc:	mov	r0, #1024	; 0x400
    fec0:	lsl	r6, r0, r5
    fec4:	mov	r0, r6
    fec8:	bl	f1c <malloc@plt>
    fecc:	str	r0, [r8, #12]
    fed0:	cmp	r0, #0
    fed4:	ldr	r7, [pc, #4012]	; 10e88 <gen_protochain+0x143c>
    fed8:	add	r7, pc, r7
    fedc:	beq	114e4 <gen_protochain+0x1a98>
    fee0:	mov	r1, #0
    fee4:	mov	r2, r6
    fee8:	add	r4, r8, #8
    feec:	bl	f88 <memset@plt>
    fef0:	cmp	r6, #20
    fef4:	str	r6, [r4]
    fef8:	bcc	114e4 <gen_protochain+0x1a98>
    fefc:	add	r8, r7, r5, lsl #3
    ff00:	b	ff14 <gen_protochain+0x4c8>
    ff04:	ldr	r7, [pc, #3968]	; 10e8c <gen_protochain+0x1440>
    ff08:	mov	r5, sl
    ff0c:	mov	r4, r8
    ff10:	add	r7, pc, r7
    ff14:	sub	r0, r6, #20
    ff18:	mov	r9, #0
    ff1c:	str	r0, [r4]
    ff20:	ldr	r1, [r4, #4]
    ff24:	mov	r4, #21
    ff28:	str	r4, [r1, r0]!
    ff2c:	ldr	r0, [sp, #16]
    ff30:	str	r1, [sp, #36]	; 0x24
    ff34:	str	r0, [r1, #12]
    ff38:	ldr	r0, [sp, #36]	; 0x24
    ff3c:	str	r9, [r0, #4]
    ff40:	ldr	r0, [sp, #36]	; 0x24
    ff44:	str	r9, [r0, #8]
    ff48:	ldr	r6, [r7, r5, lsl #3]
    ff4c:	cmp	r6, #19
    ff50:	bhi	ffb8 <gen_protochain+0x56c>
    ff54:	ldr	r0, [pc, #4036]	; 10f20 <gen_protochain+0x14d4>
    ff58:	ldr	r7, [sp, #12]
    ff5c:	add	sl, r5, #1
    ff60:	cmp	r5, #15
    ff64:	add	r0, pc, r0
    ff68:	str	sl, [r0, #92]	; 0x5c
    ff6c:	bge	114e4 <gen_protochain+0x1a98>
    ff70:	mov	r0, #1024	; 0x400
    ff74:	lsl	r6, r0, sl
    ff78:	mov	r0, r6
    ff7c:	bl	f1c <malloc@plt>
    ff80:	cmp	r0, #0
    ff84:	str	r0, [r8, #12]
    ff88:	beq	114e4 <gen_protochain+0x1a98>
    ff8c:	mov	r1, #0
    ff90:	mov	r2, r6
    ff94:	add	r5, r8, #8
    ff98:	bl	f88 <memset@plt>
    ff9c:	cmp	r6, #20
    ffa0:	str	r6, [r5]
    ffa4:	bcc	114e4 <gen_protochain+0x1a98>
    ffa8:	ldr	r0, [pc, #3956]	; 10f24 <gen_protochain+0x14d8>
    ffac:	add	r0, pc, r0
    ffb0:	add	r8, r0, sl, lsl #3
    ffb4:	b	ffc4 <gen_protochain+0x578>
    ffb8:	ldr	r7, [sp, #12]
    ffbc:	mov	sl, r5
    ffc0:	mov	r5, r8
    ffc4:	sub	r0, r6, #20
    ffc8:	cmp	r7, #17
    ffcc:	str	r0, [r5]
    ffd0:	ldr	r1, [r5, #4]
    ffd4:	str	r4, [r1, r0]!
    ffd8:	str	r1, [sp, #40]	; 0x28
    ffdc:	str	r9, [r1, #4]
    ffe0:	mov	r1, #59	; 0x3b
    ffe4:	ldr	r0, [sp, #40]	; 0x28
    ffe8:	str	r9, [r0, #8]
    ffec:	ldr	r0, [sp, #40]	; 0x28
    fff0:	str	r1, [r0, #12]
    fff4:	ldr	r0, [sp, #36]	; 0x24
    fff8:	ldr	r1, [sp, #40]	; 0x28
    fffc:	str	r1, [r0, #8]
   10000:	ldr	r6, [r8]
   10004:	bne	10070 <gen_protochain+0x624>
   10008:	cmp	r6, #19
   1000c:	bhi	100cc <gen_protochain+0x680>
   10010:	ldr	r0, [pc, #4008]	; 10fc0 <gen_protochain+0x1574>
   10014:	add	r7, sl, #1
   10018:	cmp	sl, #15
   1001c:	add	r0, pc, r0
   10020:	str	r7, [r0, #92]	; 0x5c
   10024:	bge	114e4 <gen_protochain+0x1a98>
   10028:	mov	r0, #1024	; 0x400
   1002c:	lsl	r6, r0, r7
   10030:	mov	r0, r6
   10034:	bl	f1c <malloc@plt>
   10038:	str	r0, [r8, #12]
   1003c:	cmp	r0, #0
   10040:	ldr	r5, [pc, #3964]	; 10fc4 <gen_protochain+0x1578>
   10044:	add	r5, pc, r5
   10048:	beq	114e4 <gen_protochain+0x1a98>
   1004c:	mov	r1, #0
   10050:	mov	r2, r6
   10054:	add	r4, r8, #8
   10058:	bl	f88 <memset@plt>
   1005c:	cmp	r6, #20
   10060:	str	r6, [r4]
   10064:	bcc	114e4 <gen_protochain+0x1a98>
   10068:	add	r8, r5, r7, lsl #3
   1006c:	b	100d4 <gen_protochain+0x688>
   10070:	cmp	r6, #19
   10074:	bhi	1017c <gen_protochain+0x730>
   10078:	ldr	r0, [pc, #4068]	; 11064 <gen_protochain+0x1618>
   1007c:	add	r9, sl, #1
   10080:	cmp	sl, #15
   10084:	add	r0, pc, r0
   10088:	str	r9, [r0, #92]	; 0x5c
   1008c:	bge	114e4 <gen_protochain+0x1a98>
   10090:	mov	r0, #1024	; 0x400
   10094:	lsl	r6, r0, r9
   10098:	mov	r0, r6
   1009c:	bl	f1c <malloc@plt>
   100a0:	cmp	r0, #0
   100a4:	str	r0, [r8, #12]
   100a8:	beq	114e4 <gen_protochain+0x1a98>
   100ac:	mov	r1, #0
   100b0:	mov	r2, r6
   100b4:	add	r8, r8, #8
   100b8:	bl	f88 <memset@plt>
   100bc:	cmp	r6, #19
   100c0:	str	r6, [r8]
   100c4:	bhi	10180 <gen_protochain+0x734>
   100c8:	b	114e4 <gen_protochain+0x1a98>
   100cc:	mov	r7, sl
   100d0:	mov	r4, r8
   100d4:	sub	r0, r6, #20
   100d8:	mov	sl, #21
   100dc:	mov	r9, #0
   100e0:	str	r0, [r4]
   100e4:	ldr	r1, [r4, #4]
   100e8:	str	sl, [r1, r0]!
   100ec:	str	r1, [sp, #44]	; 0x2c
   100f0:	str	r9, [r1, #4]
   100f4:	ldr	r0, [sp, #44]	; 0x2c
   100f8:	str	r9, [r0, #8]
   100fc:	ldr	r0, [sp, #44]	; 0x2c
   10100:	str	r9, [r0, #12]
   10104:	ldr	r0, [sp, #40]	; 0x28
   10108:	ldr	r1, [sp, #44]	; 0x2c
   1010c:	str	r1, [r0, #8]
   10110:	ldr	r5, [r8]
   10114:	cmp	r5, #19
   10118:	bhi	101b8 <gen_protochain+0x76c>
   1011c:	ldr	r0, [pc, #4064]	; 11104 <gen_protochain+0x16b8>
   10120:	add	r4, r7, #1
   10124:	cmp	r7, #15
   10128:	add	r0, pc, r0
   1012c:	str	r4, [r0, #92]	; 0x5c
   10130:	bge	114e4 <gen_protochain+0x1a98>
   10134:	mov	r0, #1024	; 0x400
   10138:	lsl	r5, r0, r4
   1013c:	mov	r0, r5
   10140:	bl	f1c <malloc@plt>
   10144:	cmp	r0, #0
   10148:	str	r0, [r8, #12]
   1014c:	beq	114e4 <gen_protochain+0x1a98>
   10150:	mov	r1, #0
   10154:	mov	r2, r5
   10158:	add	r6, r8, #8
   1015c:	bl	f88 <memset@plt>
   10160:	cmp	r5, #20
   10164:	str	r5, [r6]
   10168:	bcc	114e4 <gen_protochain+0x1a98>
   1016c:	ldr	r0, [pc, #3988]	; 11108 <gen_protochain+0x16bc>
   10170:	add	r0, pc, r0
   10174:	add	r8, r0, r4, lsl #3
   10178:	b	101c0 <gen_protochain+0x774>
   1017c:	mov	r9, sl
   10180:	sub	r0, r6, #20
   10184:	mov	r2, #4
   10188:	mov	r7, #0
   1018c:	mov	sl, #6
   10190:	str	r0, [r8]
   10194:	ldr	r1, [r8, #4]
   10198:	add	r8, sp, #24
   1019c:	str	r2, [r1, r0]!
   101a0:	add	r0, r8, #20
   101a4:	str	r1, [sp, #44]	; 0x2c
   101a8:	str	r7, [r1, #12]
   101ac:	ldr	r1, [sp, #40]	; 0x28
   101b0:	add	r1, r1, #8
   101b4:	b	10a20 <gen_protochain+0xfd4>
   101b8:	mov	r4, r7
   101bc:	mov	r6, r8
   101c0:	sub	r0, r5, #20
   101c4:	str	r0, [r6]
   101c8:	ldr	r1, [r6, #4]
   101cc:	str	sl, [r1, r0]!
   101d0:	str	r1, [sp, #48]	; 0x30
   101d4:	ldr	r0, [sp, #44]	; 0x2c
   101d8:	str	r1, [r0, #8]
   101dc:	mov	r1, #60	; 0x3c
   101e0:	ldr	r0, [sp, #48]	; 0x30
   101e4:	str	r9, [r0, #4]
   101e8:	ldr	r0, [sp, #48]	; 0x30
   101ec:	str	r9, [r0, #8]
   101f0:	ldr	r0, [sp, #48]	; 0x30
   101f4:	str	r1, [r0, #12]
   101f8:	ldr	r5, [r8]
   101fc:	cmp	r5, #19
   10200:	bhi	10264 <gen_protochain+0x818>
   10204:	ldr	r0, [pc, #3988]	; 111a0 <gen_protochain+0x1754>
   10208:	add	sl, r4, #1
   1020c:	cmp	r4, #15
   10210:	add	r0, pc, r0
   10214:	str	sl, [r0, #92]	; 0x5c
   10218:	bge	114e4 <gen_protochain+0x1a98>
   1021c:	mov	r0, #1024	; 0x400
   10220:	lsl	r5, r0, sl
   10224:	mov	r0, r5
   10228:	bl	f1c <malloc@plt>
   1022c:	cmp	r0, #0
   10230:	str	r0, [r8, #12]
   10234:	beq	114e4 <gen_protochain+0x1a98>
   10238:	mov	r1, #0
   1023c:	mov	r2, r5
   10240:	add	r4, r8, #8
   10244:	bl	f88 <memset@plt>
   10248:	cmp	r5, #20
   1024c:	str	r5, [r4]
   10250:	bcc	114e4 <gen_protochain+0x1a98>
   10254:	ldr	r0, [pc, #4064]	; 1123c <gen_protochain+0x17f0>
   10258:	add	r0, pc, r0
   1025c:	add	r8, r0, sl, lsl #3
   10260:	b	1026c <gen_protochain+0x820>
   10264:	mov	sl, r4
   10268:	mov	r4, r8
   1026c:	sub	r0, r5, #20
   10270:	mov	r7, #21
   10274:	mov	r9, #0
   10278:	str	r0, [r4]
   1027c:	ldr	r1, [r4, #4]
   10280:	str	r7, [r1, r0]!
   10284:	str	r1, [sp, #52]	; 0x34
   10288:	ldr	r0, [sp, #48]	; 0x30
   1028c:	str	r1, [r0, #8]
   10290:	mov	r1, #43	; 0x2b
   10294:	ldr	r0, [sp, #52]	; 0x34
   10298:	str	r9, [r0, #4]
   1029c:	ldr	r0, [sp, #52]	; 0x34
   102a0:	str	r9, [r0, #8]
   102a4:	ldr	r0, [sp, #52]	; 0x34
   102a8:	str	r1, [r0, #12]
   102ac:	ldr	r5, [r8]
   102b0:	cmp	r5, #19
   102b4:	bhi	10318 <gen_protochain+0x8cc>
   102b8:	ldr	r0, [pc, #3968]	; 11240 <gen_protochain+0x17f4>
   102bc:	add	r6, sl, #1
   102c0:	cmp	sl, #15
   102c4:	add	r0, pc, r0
   102c8:	str	r6, [r0, #92]	; 0x5c
   102cc:	bge	114e4 <gen_protochain+0x1a98>
   102d0:	mov	r0, #1024	; 0x400
   102d4:	lsl	r5, r0, r6
   102d8:	mov	r0, r5
   102dc:	bl	f1c <malloc@plt>
   102e0:	str	r0, [r8, #12]
   102e4:	cmp	r0, #0
   102e8:	ldr	sl, [pc, #4072]	; 112d8 <gen_protochain+0x188c>
   102ec:	add	sl, pc, sl
   102f0:	beq	114e4 <gen_protochain+0x1a98>
   102f4:	mov	r1, #0
   102f8:	mov	r2, r5
   102fc:	add	r4, r8, #8
   10300:	bl	f88 <memset@plt>
   10304:	cmp	r5, #20
   10308:	str	r5, [r4]
   1030c:	bcc	114e4 <gen_protochain+0x1a98>
   10310:	add	r8, sl, r6, lsl #3
   10314:	b	10328 <gen_protochain+0x8dc>
   10318:	mov	r6, sl
   1031c:	ldr	sl, [pc, #4024]	; 112dc <gen_protochain+0x1890>
   10320:	mov	r4, r8
   10324:	add	sl, pc, sl
   10328:	sub	r0, r5, #20
   1032c:	str	r0, [r4]
   10330:	ldr	r1, [r4, #4]
   10334:	str	r7, [r1, r0]!
   10338:	str	r1, [sp, #56]	; 0x38
   1033c:	ldr	r0, [sp, #52]	; 0x34
   10340:	str	r1, [r0, #8]
   10344:	mov	r1, #44	; 0x2c
   10348:	ldr	r0, [sp, #56]	; 0x38
   1034c:	str	r9, [r0, #4]
   10350:	ldr	r0, [sp, #56]	; 0x38
   10354:	str	r9, [r0, #8]
   10358:	ldr	r0, [sp, #56]	; 0x38
   1035c:	str	r1, [r0, #12]
   10360:	ldr	r5, [r8]
   10364:	cmp	r5, #19
   10368:	bhi	103c4 <gen_protochain+0x978>
   1036c:	ldr	r0, [pc, #3948]	; 112e0 <gen_protochain+0x1894>
   10370:	add	r4, r6, #1
   10374:	cmp	r6, #15
   10378:	add	r0, pc, r0
   1037c:	str	r4, [r0, #92]	; 0x5c
   10380:	bge	114e4 <gen_protochain+0x1a98>
   10384:	mov	r0, #1024	; 0x400
   10388:	lsl	r5, r0, r4
   1038c:	mov	r0, r5
   10390:	bl	f1c <malloc@plt>
   10394:	cmp	r0, #0
   10398:	str	r0, [r8, #12]
   1039c:	beq	114e4 <gen_protochain+0x1a98>
   103a0:	mov	r1, #0
   103a4:	mov	r2, r5
   103a8:	add	r6, r8, #8
   103ac:	bl	f88 <memset@plt>
   103b0:	cmp	r5, #20
   103b4:	str	r5, [r6]
   103b8:	bcc	114e4 <gen_protochain+0x1a98>
   103bc:	add	r8, sl, r4, lsl #3
   103c0:	b	103cc <gen_protochain+0x980>
   103c4:	mov	r4, r6
   103c8:	mov	r6, r8
   103cc:	sub	r0, r5, #20
   103d0:	mov	r2, #135	; 0x87
   103d4:	str	r0, [r6]
   103d8:	ldr	r1, [r6, #4]
   103dc:	str	r2, [r1, r0]!
   103e0:	ldr	r5, [r8]
   103e4:	str	r1, [sp, #60]	; 0x3c
   103e8:	cmp	r5, #19
   103ec:	bhi	10448 <gen_protochain+0x9fc>
   103f0:	ldr	r0, [pc, #3820]	; 112e4 <gen_protochain+0x1898>
   103f4:	add	r6, r4, #1
   103f8:	cmp	r4, #15
   103fc:	add	r0, pc, r0
   10400:	str	r6, [r0, #92]	; 0x5c
   10404:	bge	114e4 <gen_protochain+0x1a98>
   10408:	mov	r0, #1024	; 0x400
   1040c:	lsl	r5, r0, r6
   10410:	mov	r0, r5
   10414:	bl	f1c <malloc@plt>
   10418:	cmp	r0, #0
   1041c:	str	r0, [r8, #12]
   10420:	beq	114e4 <gen_protochain+0x1a98>
   10424:	mov	r1, #0
   10428:	mov	r2, r5
   1042c:	add	r4, r8, #8
   10430:	bl	f88 <memset@plt>
   10434:	cmp	r5, #20
   10438:	str	r5, [r4]
   1043c:	bcc	114e4 <gen_protochain+0x1a98>
   10440:	add	r8, sl, r6, lsl #3
   10444:	b	10450 <gen_protochain+0xa04>
   10448:	mov	r6, r4
   1044c:	mov	r4, r8
   10450:	sub	r0, r5, #20
   10454:	mov	r2, #80	; 0x50
   10458:	str	r0, [r4]
   1045c:	ldr	r1, [r4, #4]
   10460:	str	r2, [r1, r0]!
   10464:	ldr	r0, [sp, #8]
   10468:	ldr	r2, [sp, #4]
   1046c:	str	r1, [sp, #64]	; 0x40
   10470:	add	r7, r2, r0
   10474:	str	r7, [r1, #12]
   10478:	ldr	r5, [r8]
   1047c:	cmp	r5, #19
   10480:	bhi	104dc <gen_protochain+0xa90>
   10484:	ldr	r0, [pc, #3676]	; 112e8 <gen_protochain+0x189c>
   10488:	add	r4, r6, #1
   1048c:	cmp	r6, #15
   10490:	add	r0, pc, r0
   10494:	str	r4, [r0, #92]	; 0x5c
   10498:	bge	114e4 <gen_protochain+0x1a98>
   1049c:	mov	r0, #1024	; 0x400
   104a0:	lsl	r5, r0, r4
   104a4:	mov	r0, r5
   104a8:	bl	f1c <malloc@plt>
   104ac:	cmp	r0, #0
   104b0:	str	r0, [r8, #12]
   104b4:	beq	114e4 <gen_protochain+0x1a98>
   104b8:	mov	r1, #0
   104bc:	mov	r2, r5
   104c0:	add	r6, r8, #8
   104c4:	bl	f88 <memset@plt>
   104c8:	cmp	r5, #20
   104cc:	str	r5, [r6]
   104d0:	bcc	114e4 <gen_protochain+0x1a98>
   104d4:	add	r8, sl, r4, lsl #3
   104d8:	b	104e4 <gen_protochain+0xa98>
   104dc:	mov	r4, r6
   104e0:	mov	r6, r8
   104e4:	sub	r0, r5, #20
   104e8:	mov	r2, #2
   104ec:	str	r0, [r6]
   104f0:	ldr	r1, [r6, #4]
   104f4:	str	r2, [r1, r0]!
   104f8:	ldr	r0, [sp, #20]
   104fc:	str	r1, [sp, #68]	; 0x44
   10500:	str	r0, [r1, #12]
   10504:	ldr	r5, [r8]
   10508:	cmp	r5, #19
   1050c:	bhi	10568 <gen_protochain+0xb1c>
   10510:	ldr	r0, [pc, #4084]	; 1150c <gen_protochain+0x1ac0>
   10514:	add	r6, r4, #1
   10518:	cmp	r4, #15
   1051c:	add	r0, pc, r0
   10520:	str	r6, [r0, #92]	; 0x5c
   10524:	bge	114e4 <gen_protochain+0x1a98>
   10528:	mov	r0, #1024	; 0x400
   1052c:	lsl	r5, r0, r6
   10530:	mov	r0, r5
   10534:	bl	f1c <malloc@plt>
   10538:	cmp	r0, #0
   1053c:	str	r0, [r8, #12]
   10540:	beq	114e4 <gen_protochain+0x1a98>
   10544:	mov	r1, #0
   10548:	mov	r2, r5
   1054c:	add	r4, r8, #8
   10550:	bl	f88 <memset@plt>
   10554:	cmp	r5, #20
   10558:	str	r5, [r4]
   1055c:	bcc	114e4 <gen_protochain+0x1a98>
   10560:	add	r8, sl, r6, lsl #3
   10564:	b	10570 <gen_protochain+0xb24>
   10568:	mov	r6, r4
   1056c:	mov	r4, r8
   10570:	sub	r0, r5, #20
   10574:	mov	r2, #135	; 0x87
   10578:	str	r0, [r4]
   1057c:	ldr	r1, [r4, #4]
   10580:	str	r2, [r1, r0]!
   10584:	ldr	r5, [r8]
   10588:	str	r1, [sp, #72]	; 0x48
   1058c:	cmp	r5, #19
   10590:	bhi	105ec <gen_protochain+0xba0>
   10594:	ldr	r0, [pc, #3956]	; 11510 <gen_protochain+0x1ac4>
   10598:	add	r9, r6, #1
   1059c:	cmp	r6, #15
   105a0:	add	r0, pc, r0
   105a4:	str	r9, [r0, #92]	; 0x5c
   105a8:	bge	114e4 <gen_protochain+0x1a98>
   105ac:	mov	r0, #1024	; 0x400
   105b0:	lsl	r5, r0, r9
   105b4:	mov	r0, r5
   105b8:	bl	f1c <malloc@plt>
   105bc:	cmp	r0, #0
   105c0:	str	r0, [r8, #12]
   105c4:	beq	114e4 <gen_protochain+0x1a98>
   105c8:	mov	r1, #0
   105cc:	mov	r2, r5
   105d0:	add	r4, r8, #8
   105d4:	bl	f88 <memset@plt>
   105d8:	cmp	r5, #20
   105dc:	str	r5, [r4]
   105e0:	bcc	114e4 <gen_protochain+0x1a98>
   105e4:	add	r8, sl, r9, lsl #3
   105e8:	b	105f4 <gen_protochain+0xba8>
   105ec:	mov	r9, r6
   105f0:	mov	r4, r8
   105f4:	sub	r0, r5, #20
   105f8:	mov	r2, #4
   105fc:	str	r0, [r4]
   10600:	ldr	r1, [r4, #4]
   10604:	str	r2, [r1, r0]!
   10608:	mov	r0, #1
   1060c:	str	r1, [sp, #76]	; 0x4c
   10610:	str	r0, [r1, #12]
   10614:	ldr	r5, [r8]
   10618:	cmp	r5, #19
   1061c:	bhi	10678 <gen_protochain+0xc2c>
   10620:	ldr	r0, [pc, #3820]	; 11514 <gen_protochain+0x1ac8>
   10624:	add	r4, r9, #1
   10628:	cmp	r9, #15
   1062c:	add	r0, pc, r0
   10630:	str	r4, [r0, #92]	; 0x5c
   10634:	bge	114e4 <gen_protochain+0x1a98>
   10638:	mov	r0, #1024	; 0x400
   1063c:	lsl	r5, r0, r4
   10640:	mov	r0, r5
   10644:	bl	f1c <malloc@plt>
   10648:	cmp	r0, #0
   1064c:	str	r0, [r8, #12]
   10650:	beq	114e4 <gen_protochain+0x1a98>
   10654:	mov	r1, #0
   10658:	mov	r2, r5
   1065c:	add	r6, r8, #8
   10660:	bl	f88 <memset@plt>
   10664:	cmp	r5, #20
   10668:	str	r5, [r6]
   1066c:	bcc	114e4 <gen_protochain+0x1a98>
   10670:	add	r8, sl, r4, lsl #3
   10674:	b	10680 <gen_protochain+0xc34>
   10678:	mov	r4, r9
   1067c:	mov	r6, r8
   10680:	sub	r0, r5, #20
   10684:	mov	r2, #7
   10688:	str	r0, [r6]
   1068c:	ldr	r1, [r6, #4]
   10690:	str	r2, [r1, r0]!
   10694:	ldr	r5, [r8]
   10698:	str	r1, [sp, #80]	; 0x50
   1069c:	cmp	r5, #19
   106a0:	bhi	106fc <gen_protochain+0xcb0>
   106a4:	ldr	r0, [pc, #3692]	; 11518 <gen_protochain+0x1acc>
   106a8:	add	r6, r4, #1
   106ac:	cmp	r4, #15
   106b0:	add	r0, pc, r0
   106b4:	str	r6, [r0, #92]	; 0x5c
   106b8:	bge	114e4 <gen_protochain+0x1a98>
   106bc:	mov	r0, #1024	; 0x400
   106c0:	lsl	r5, r0, r6
   106c4:	mov	r0, r5
   106c8:	bl	f1c <malloc@plt>
   106cc:	cmp	r0, #0
   106d0:	str	r0, [r8, #12]
   106d4:	beq	114e4 <gen_protochain+0x1a98>
   106d8:	mov	r1, #0
   106dc:	mov	r2, r5
   106e0:	add	r4, r8, #8
   106e4:	bl	f88 <memset@plt>
   106e8:	cmp	r5, #20
   106ec:	str	r5, [r4]
   106f0:	bcc	114e4 <gen_protochain+0x1a98>
   106f4:	add	r8, sl, r6, lsl #3
   106f8:	b	10704 <gen_protochain+0xcb8>
   106fc:	mov	r6, r4
   10700:	mov	r4, r8
   10704:	sub	r0, r5, #20
   10708:	mov	r2, #80	; 0x50
   1070c:	str	r0, [r4]
   10710:	ldr	r1, [r4, #4]
   10714:	str	r2, [r1, r0]!
   10718:	str	r1, [sp, #84]	; 0x54
   1071c:	str	r7, [r1, #12]
   10720:	ldr	r5, [r8]
   10724:	cmp	r5, #19
   10728:	bhi	10784 <gen_protochain+0xd38>
   1072c:	ldr	r0, [pc, #3560]	; 1151c <gen_protochain+0x1ad0>
   10730:	add	r4, r6, #1
   10734:	cmp	r6, #15
   10738:	add	r0, pc, r0
   1073c:	str	r4, [r0, #92]	; 0x5c
   10740:	bge	114e4 <gen_protochain+0x1a98>
   10744:	mov	r0, #1024	; 0x400
   10748:	lsl	r5, r0, r4
   1074c:	mov	r0, r5
   10750:	bl	f1c <malloc@plt>
   10754:	cmp	r0, #0
   10758:	str	r0, [r8, #12]
   1075c:	beq	114e4 <gen_protochain+0x1a98>
   10760:	mov	r1, #0
   10764:	mov	r2, r5
   10768:	add	r6, r8, #8
   1076c:	bl	f88 <memset@plt>
   10770:	cmp	r5, #20
   10774:	str	r5, [r6]
   10778:	bcc	114e4 <gen_protochain+0x1a98>
   1077c:	add	r8, sl, r4, lsl #3
   10780:	b	1078c <gen_protochain+0xd40>
   10784:	mov	r4, r6
   10788:	mov	r6, r8
   1078c:	sub	r0, r5, #20
   10790:	mov	r2, #4
   10794:	str	r0, [r6]
   10798:	ldr	r1, [r6, #4]
   1079c:	str	r2, [r1, r0]!
   107a0:	mov	r0, #1
   107a4:	str	r1, [sp, #88]	; 0x58
   107a8:	str	r0, [r1, #12]
   107ac:	ldr	r5, [r8]
   107b0:	cmp	r5, #19
   107b4:	bhi	10810 <gen_protochain+0xdc4>
   107b8:	ldr	r0, [pc, #3424]	; 11520 <gen_protochain+0x1ad4>
   107bc:	add	r6, r4, #1
   107c0:	cmp	r4, #15
   107c4:	add	r0, pc, r0
   107c8:	str	r6, [r0, #92]	; 0x5c
   107cc:	bge	114e4 <gen_protochain+0x1a98>
   107d0:	mov	r0, #1024	; 0x400
   107d4:	lsl	r5, r0, r6
   107d8:	mov	r0, r5
   107dc:	bl	f1c <malloc@plt>
   107e0:	cmp	r0, #0
   107e4:	str	r0, [r8, #12]
   107e8:	beq	114e4 <gen_protochain+0x1a98>
   107ec:	mov	r1, #0
   107f0:	mov	r2, r5
   107f4:	add	r4, r8, #8
   107f8:	bl	f88 <memset@plt>
   107fc:	cmp	r5, #20
   10800:	str	r5, [r4]
   10804:	bcc	114e4 <gen_protochain+0x1a98>
   10808:	add	r8, sl, r6, lsl #3
   1080c:	b	10818 <gen_protochain+0xdcc>
   10810:	mov	r6, r4
   10814:	mov	r4, r8
   10818:	sub	r0, r5, #20
   1081c:	mov	r2, #36	; 0x24
   10820:	str	r0, [r4]
   10824:	ldr	r1, [r4, #4]
   10828:	str	r2, [r1, r0]!
   1082c:	mov	r0, #8
   10830:	str	r1, [sp, #92]	; 0x5c
   10834:	str	r0, [r1, #12]
   10838:	ldr	r5, [r8]
   1083c:	cmp	r5, #19
   10840:	bhi	1089c <gen_protochain+0xe50>
   10844:	ldr	r0, [pc, #3288]	; 11524 <gen_protochain+0x1ad8>
   10848:	add	r4, r6, #1
   1084c:	cmp	r6, #15
   10850:	add	r0, pc, r0
   10854:	str	r4, [r0, #92]	; 0x5c
   10858:	bge	114e4 <gen_protochain+0x1a98>
   1085c:	mov	r0, #1024	; 0x400
   10860:	lsl	r5, r0, r4
   10864:	mov	r0, r5
   10868:	bl	f1c <malloc@plt>
   1086c:	cmp	r0, #0
   10870:	str	r0, [r8, #12]
   10874:	beq	114e4 <gen_protochain+0x1a98>
   10878:	mov	r1, #0
   1087c:	mov	r2, r5
   10880:	add	r6, r8, #8
   10884:	bl	f88 <memset@plt>
   10888:	cmp	r5, #20
   1088c:	str	r5, [r6]
   10890:	bcc	114e4 <gen_protochain+0x1a98>
   10894:	add	r8, sl, r4, lsl #3
   10898:	b	108a4 <gen_protochain+0xe58>
   1089c:	mov	r4, r6
   108a0:	mov	r6, r8
   108a4:	sub	r0, r5, #20
   108a8:	mov	r2, #7
   108ac:	str	r0, [r6]
   108b0:	ldr	r1, [r6, #4]
   108b4:	str	r2, [r1, r0]!
   108b8:	ldr	r5, [r8]
   108bc:	str	r1, [sp, #96]	; 0x60
   108c0:	cmp	r5, #19
   108c4:	bhi	10920 <gen_protochain+0xed4>
   108c8:	ldr	r0, [pc, #3160]	; 11528 <gen_protochain+0x1adc>
   108cc:	add	r6, r4, #1
   108d0:	cmp	r4, #15
   108d4:	add	r0, pc, r0
   108d8:	str	r6, [r0, #92]	; 0x5c
   108dc:	bge	114e4 <gen_protochain+0x1a98>
   108e0:	mov	r0, #1024	; 0x400
   108e4:	lsl	r5, r0, r6
   108e8:	mov	r0, r5
   108ec:	bl	f1c <malloc@plt>
   108f0:	cmp	r0, #0
   108f4:	str	r0, [r8, #12]
   108f8:	beq	114e4 <gen_protochain+0x1a98>
   108fc:	mov	r1, #0
   10900:	mov	r2, r5
   10904:	add	r4, r8, #8
   10908:	bl	f88 <memset@plt>
   1090c:	cmp	r5, #20
   10910:	str	r5, [r4]
   10914:	bcc	114e4 <gen_protochain+0x1a98>
   10918:	add	r8, sl, r6, lsl #3
   1091c:	b	10928 <gen_protochain+0xedc>
   10920:	mov	r6, r4
   10924:	mov	r4, r8
   10928:	sub	r0, r5, #20
   1092c:	mov	r2, #96	; 0x60
   10930:	str	r0, [r4]
   10934:	ldr	r1, [r4, #4]
   10938:	str	r2, [r1, r0]!
   1093c:	ldr	r0, [sp, #20]
   10940:	str	r1, [sp, #100]	; 0x64
   10944:	str	r0, [r1, #12]
   10948:	ldr	r5, [r8]
   1094c:	cmp	r5, #19
   10950:	bhi	109ac <gen_protochain+0xf60>
   10954:	ldr	r0, [pc, #3024]	; 1152c <gen_protochain+0x1ae0>
   10958:	add	r9, r6, #1
   1095c:	cmp	r6, #15
   10960:	add	r0, pc, r0
   10964:	str	r9, [r0, #92]	; 0x5c
   10968:	bge	114e4 <gen_protochain+0x1a98>
   1096c:	mov	r0, #1024	; 0x400
   10970:	lsl	r5, r0, r9
   10974:	mov	r0, r5
   10978:	bl	f1c <malloc@plt>
   1097c:	cmp	r0, #0
   10980:	str	r0, [r8, #12]
   10984:	beq	114e4 <gen_protochain+0x1a98>
   10988:	mov	r1, #0
   1098c:	mov	r2, r5
   10990:	add	r8, r8, #8
   10994:	bl	f88 <memset@plt>
   10998:	cmp	r5, #19
   1099c:	str	r5, [r8]
   109a0:	bhi	109b0 <gen_protochain+0xf64>
   109a4:	b	114e4 <gen_protochain+0x1a98>
   109a8:	.word	0x00036a58
   109ac:	mov	r9, r6
   109b0:	sub	r1, r5, #20
   109b4:	add	r0, sp, #24
   109b8:	mov	r7, #8
   109bc:	mov	sl, #21
   109c0:	str	r1, [r8]
   109c4:	mov	r3, r0
   109c8:	add	r0, r0, #36	; 0x24
   109cc:	ldr	r2, [r8, #4]
   109d0:	mov	r8, r3
   109d4:	mov	r3, #5
   109d8:	str	r3, [r2, r1]!
   109dc:	mvn	r1, #17
   109e0:	str	r2, [sp, #104]	; 0x68
   109e4:	str	r1, [r2, #12]
   109e8:	ldr	r1, [sp, #100]	; 0x64
   109ec:	ldr	r2, [sp, #104]	; 0x68
   109f0:	str	r2, [r1, #8]
   109f4:	ldr	r1, [sp, #44]	; 0x2c
   109f8:	ldr	r2, [sp, #60]	; 0x3c
   109fc:	str	r2, [r1, #4]
   10a00:	ldr	r1, [sp, #48]	; 0x30
   10a04:	ldr	r2, [sp, #60]	; 0x3c
   10a08:	str	r2, [r1, #4]
   10a0c:	ldr	r1, [sp, #52]	; 0x34
   10a10:	ldr	r2, [sp, #60]	; 0x3c
   10a14:	str	r2, [r1, #4]
   10a18:	ldr	r1, [sp, #56]	; 0x38
   10a1c:	add	r1, r1, #4
   10a20:	ldr	r0, [r0]
   10a24:	str	r0, [r1]
   10a28:	ldr	r4, [pc, #2816]	; 11530 <gen_protochain+0x1ae4>
   10a2c:	add	r4, pc, r4
   10a30:	ldr	r5, [r4, r9, lsl #3]!
   10a34:	cmp	r5, #19
   10a38:	bhi	10a9c <gen_protochain+0x1050>
   10a3c:	ldr	r0, [pc, #2800]	; 11534 <gen_protochain+0x1ae8>
   10a40:	add	r6, r9, #1
   10a44:	cmp	r9, #15
   10a48:	add	r0, pc, r0
   10a4c:	str	r6, [r0, #92]	; 0x5c
   10a50:	bge	114e4 <gen_protochain+0x1a98>
   10a54:	mov	r0, #1024	; 0x400
   10a58:	lsl	r5, r0, r6
   10a5c:	mov	r0, r5
   10a60:	bl	f1c <malloc@plt>
   10a64:	cmp	r0, #0
   10a68:	str	r0, [r4, #12]
   10a6c:	beq	114e4 <gen_protochain+0x1a98>
   10a70:	mov	r1, #0
   10a74:	mov	r2, r5
   10a78:	add	r4, r4, #8
   10a7c:	bl	f88 <memset@plt>
   10a80:	cmp	r5, #19
   10a84:	str	r5, [r4]
   10a88:	bhi	10aa0 <gen_protochain+0x1054>
   10a8c:	b	114e4 <gen_protochain+0x1a98>
   10a90:	.word	0x0001a2da
   10a94:	.word	0x00036ec8
   10a98:	.word	0x00036940
   10a9c:	mov	r6, r9
   10aa0:	sub	r0, r5, #20
   10aa4:	mov	r2, #21
   10aa8:	cmp	r7, #0
   10aac:	str	r0, [r4]
   10ab0:	ldr	r1, [r4, #4]
   10ab4:	str	r2, [r1, r0]!
   10ab8:	mov	r0, #0
   10abc:	str	r1, [r8, sl, lsl #2]
   10ac0:	str	r0, [r1, #4]
   10ac4:	ldr	r1, [r8, sl, lsl #2]
   10ac8:	str	r0, [r1, #8]
   10acc:	mov	r1, #51	; 0x33
   10ad0:	ldr	r0, [r8, sl, lsl #2]
   10ad4:	str	r1, [r0, #12]
   10ad8:	ldrne	r0, [r8, r7, lsl #2]
   10adc:	ldrne	r1, [r8, sl, lsl #2]
   10ae0:	strne	r1, [r0, #8]
   10ae4:	ldr	r7, [pc, #2636]	; 11538 <gen_protochain+0x1aec>
   10ae8:	add	r7, pc, r7
   10aec:	ldr	r5, [r7, r6, lsl #3]!
   10af0:	cmp	r5, #19
   10af4:	bhi	10b58 <gen_protochain+0x110c>
   10af8:	ldr	r0, [pc, #2624]	; 11540 <gen_protochain+0x1af4>
   10afc:	add	r4, r6, #1
   10b00:	cmp	r6, #15
   10b04:	add	r0, pc, r0
   10b08:	str	r4, [r0, #92]	; 0x5c
   10b0c:	bge	114e4 <gen_protochain+0x1a98>
   10b10:	mov	r0, #1024	; 0x400
   10b14:	lsl	r5, r0, r4
   10b18:	mov	r0, r5
   10b1c:	bl	f1c <malloc@plt>
   10b20:	cmp	r0, #0
   10b24:	str	r0, [r7, #12]
   10b28:	beq	114e4 <gen_protochain+0x1a98>
   10b2c:	mov	r1, #0
   10b30:	mov	r2, r5
   10b34:	add	r6, r7, #8
   10b38:	bl	f88 <memset@plt>
   10b3c:	cmp	r5, #20
   10b40:	str	r5, [r6]
   10b44:	bcc	114e4 <gen_protochain+0x1a98>
   10b48:	ldr	ip, [pc, #2548]	; 11544 <gen_protochain+0x1af8>
   10b4c:	add	ip, pc, ip
   10b50:	add	r7, ip, r4, lsl #3
   10b54:	b	10b68 <gen_protochain+0x111c>
   10b58:	ldr	ip, [pc, #2524]	; 1153c <gen_protochain+0x1af0>
   10b5c:	mov	r4, r6
   10b60:	mov	r6, r7
   10b64:	add	ip, pc, ip
   10b68:	sub	r1, r5, #20
   10b6c:	mov	r3, #135	; 0x87
   10b70:	add	r0, sl, #1
   10b74:	str	r1, [r6]
   10b78:	ldr	r2, [r6, #4]
   10b7c:	str	r3, [r2, r1]!
   10b80:	str	sl, [sp, #12]
   10b84:	str	r2, [r8, r0, lsl #2]
   10b88:	ldr	r0, [r8, sl, lsl #2]
   10b8c:	str	r2, [r0, #4]
   10b90:	ldr	r5, [ip, r4, lsl #3]
   10b94:	cmp	r5, #19
   10b98:	bhi	10bfc <gen_protochain+0x11b0>
   10b9c:	ldr	r0, [pc, #2468]	; 11548 <gen_protochain+0x1afc>
   10ba0:	add	sl, r4, #1
   10ba4:	cmp	r4, #15
   10ba8:	add	r0, pc, r0
   10bac:	str	sl, [r0, #92]	; 0x5c
   10bb0:	bge	114e4 <gen_protochain+0x1a98>
   10bb4:	mov	r0, #1024	; 0x400
   10bb8:	lsl	r5, r0, sl
   10bbc:	mov	r0, r5
   10bc0:	bl	f1c <malloc@plt>
   10bc4:	cmp	r0, #0
   10bc8:	str	r0, [r7, #12]
   10bcc:	beq	114e4 <gen_protochain+0x1a98>
   10bd0:	mov	r1, #0
   10bd4:	mov	r2, r5
   10bd8:	add	r4, r7, #8
   10bdc:	bl	f88 <memset@plt>
   10be0:	cmp	r5, #20
   10be4:	str	r5, [r4]
   10be8:	bcc	114e4 <gen_protochain+0x1a98>
   10bec:	ldr	r0, [pc, #2392]	; 1154c <gen_protochain+0x1b00>
   10bf0:	add	r0, pc, r0
   10bf4:	add	r7, r0, sl, lsl #3
   10bf8:	b	10c04 <gen_protochain+0x11b8>
   10bfc:	mov	sl, r4
   10c00:	mov	r4, r7
   10c04:	sub	r1, r5, #20
   10c08:	ldr	r0, [sp, #12]
   10c0c:	mov	r3, #80	; 0x50
   10c10:	str	r1, [r4]
   10c14:	ldr	r2, [r4, #4]
   10c18:	add	r0, r0, #2
   10c1c:	str	r3, [r2, r1]!
   10c20:	str	r2, [r8, r0, lsl #2]
   10c24:	ldr	r0, [sp, #8]
   10c28:	ldr	r1, [sp, #4]
   10c2c:	add	r6, r1, r0
   10c30:	str	r6, [r2, #12]
   10c34:	str	r6, [sp, #8]
   10c38:	ldr	r5, [r7]
   10c3c:	cmp	r5, #19
   10c40:	bhi	10ca8 <gen_protochain+0x125c>
   10c44:	ldr	r0, [pc, #2308]	; 11550 <gen_protochain+0x1b04>
   10c48:	add	r9, sl, #1
   10c4c:	cmp	sl, #15
   10c50:	add	r0, pc, r0
   10c54:	str	r9, [r0, #92]	; 0x5c
   10c58:	bge	114e4 <gen_protochain+0x1a98>
   10c5c:	mov	r0, #1024	; 0x400
   10c60:	lsl	r5, r0, r9
   10c64:	mov	r0, r5
   10c68:	bl	f1c <malloc@plt>
   10c6c:	ldr	sl, [sp, #12]
   10c70:	cmp	r0, #0
   10c74:	str	r0, [r7, #12]
   10c78:	beq	114e4 <gen_protochain+0x1a98>
   10c7c:	mov	r1, #0
   10c80:	mov	r2, r5
   10c84:	add	r4, r7, #8
   10c88:	bl	f88 <memset@plt>
   10c8c:	cmp	r5, #20
   10c90:	str	r5, [r4]
   10c94:	bcc	114e4 <gen_protochain+0x1a98>
   10c98:	ldr	r0, [pc, #2228]	; 11554 <gen_protochain+0x1b08>
   10c9c:	add	r0, pc, r0
   10ca0:	add	r7, r0, r9, lsl #3
   10ca4:	b	10cb4 <gen_protochain+0x1268>
   10ca8:	mov	r9, sl
   10cac:	ldr	sl, [sp, #12]
   10cb0:	mov	r4, r7
   10cb4:	sub	r0, r5, #20
   10cb8:	mov	r2, #2
   10cbc:	add	r8, sl, #3
   10cc0:	str	r0, [r4]
   10cc4:	ldr	r1, [r4, #4]
   10cc8:	str	r2, [r1, r0]!
   10ccc:	add	r0, sp, #24
   10cd0:	str	r1, [r0, r8, lsl #2]
   10cd4:	ldr	r0, [sp, #20]
   10cd8:	str	r0, [r1, #12]
   10cdc:	ldr	r5, [r7]
   10ce0:	cmp	r5, #19
   10ce4:	bhi	10d48 <gen_protochain+0x12fc>
   10ce8:	ldr	r0, [pc, #2152]	; 11558 <gen_protochain+0x1b0c>
   10cec:	add	r6, r9, #1
   10cf0:	cmp	r9, #15
   10cf4:	add	r0, pc, r0
   10cf8:	str	r6, [r0, #92]	; 0x5c
   10cfc:	bge	114e4 <gen_protochain+0x1a98>
   10d00:	mov	r0, #1024	; 0x400
   10d04:	lsl	r5, r0, r6
   10d08:	mov	r0, r5
   10d0c:	bl	f1c <malloc@plt>
   10d10:	cmp	r0, #0
   10d14:	str	r0, [r7, #12]
   10d18:	beq	114e4 <gen_protochain+0x1a98>
   10d1c:	mov	r1, #0
   10d20:	mov	r2, r5
   10d24:	add	r4, r7, #8
   10d28:	bl	f88 <memset@plt>
   10d2c:	cmp	r5, #20
   10d30:	str	r5, [r4]
   10d34:	bcc	114e4 <gen_protochain+0x1a98>
   10d38:	ldr	r0, [pc, #2076]	; 1155c <gen_protochain+0x1b10>
   10d3c:	add	r0, pc, r0
   10d40:	add	r7, r0, r6, lsl #3
   10d44:	b	10d50 <gen_protochain+0x1304>
   10d48:	mov	r6, r9
   10d4c:	mov	r4, r7
   10d50:	sub	r1, r5, #20
   10d54:	mov	r3, #135	; 0x87
   10d58:	add	r0, sl, #4
   10d5c:	str	r1, [r4]
   10d60:	ldr	r2, [r4, #4]
   10d64:	str	r3, [r2, r1]!
   10d68:	add	r1, sp, #24
   10d6c:	str	r2, [r1, r0, lsl #2]
   10d70:	ldr	r0, [r1, r8, lsl #2]
   10d74:	mov	r8, r1
   10d78:	str	r2, [r0, #4]
   10d7c:	ldr	r5, [r7]
   10d80:	cmp	r5, #19
   10d84:	bhi	10de8 <gen_protochain+0x139c>
   10d88:	ldr	r0, [pc, #2000]	; 11560 <gen_protochain+0x1b14>
   10d8c:	add	r4, r6, #1
   10d90:	cmp	r6, #15
   10d94:	add	r0, pc, r0
   10d98:	str	r4, [r0, #92]	; 0x5c
   10d9c:	bge	114e4 <gen_protochain+0x1a98>
   10da0:	mov	r0, #1024	; 0x400
   10da4:	lsl	r5, r0, r4
   10da8:	mov	r0, r5
   10dac:	bl	f1c <malloc@plt>
   10db0:	cmp	r0, #0
   10db4:	str	r0, [r7, #12]
   10db8:	beq	114e4 <gen_protochain+0x1a98>
   10dbc:	mov	r1, #0
   10dc0:	mov	r2, r5
   10dc4:	add	r6, r7, #8
   10dc8:	bl	f88 <memset@plt>
   10dcc:	cmp	r5, #20
   10dd0:	str	r5, [r6]
   10dd4:	bcc	114e4 <gen_protochain+0x1a98>
   10dd8:	ldr	r0, [pc, #1924]	; 11564 <gen_protochain+0x1b18>
   10ddc:	add	r0, pc, r0
   10de0:	add	r7, r0, r4, lsl #3
   10de4:	b	10df0 <gen_protochain+0x13a4>
   10de8:	mov	r4, r6
   10dec:	mov	r6, r7
   10df0:	sub	r1, r5, #20
   10df4:	mov	r3, #4
   10df8:	add	r0, sl, #5
   10dfc:	str	r1, [r6]
   10e00:	ldr	r2, [r6, #4]
   10e04:	str	r3, [r2, r1]!
   10e08:	str	r2, [r8, r0, lsl #2]
   10e0c:	mov	r0, #1
   10e10:	str	r0, [r2, #12]
   10e14:	ldr	r5, [r7]
   10e18:	cmp	r5, #19
   10e1c:	bhi	10e90 <gen_protochain+0x1444>
   10e20:	ldr	r0, [pc, #1856]	; 11568 <gen_protochain+0x1b1c>
   10e24:	add	r6, r4, #1
   10e28:	cmp	r4, #15
   10e2c:	add	r0, pc, r0
   10e30:	str	r6, [r0, #92]	; 0x5c
   10e34:	bge	114e4 <gen_protochain+0x1a98>
   10e38:	mov	r0, #1024	; 0x400
   10e3c:	lsl	r5, r0, r6
   10e40:	mov	r0, r5
   10e44:	bl	f1c <malloc@plt>
   10e48:	cmp	r0, #0
   10e4c:	str	r0, [r7, #12]
   10e50:	beq	114e4 <gen_protochain+0x1a98>
   10e54:	mov	r1, #0
   10e58:	mov	r2, r5
   10e5c:	add	r4, r7, #8
   10e60:	bl	f88 <memset@plt>
   10e64:	cmp	r5, #20
   10e68:	str	r5, [r4]
   10e6c:	bcc	114e4 <gen_protochain+0x1a98>
   10e70:	ldr	r0, [pc, #1780]	; 1156c <gen_protochain+0x1b20>
   10e74:	add	r0, pc, r0
   10e78:	add	r7, r0, r6, lsl #3
   10e7c:	b	10e98 <gen_protochain+0x144c>
   10e80:	.word	0x0003658c
   10e84:	.word	0x00036630
   10e88:	.word	0x00036548
   10e8c:	.word	0x00036510
   10e90:	mov	r6, r4
   10e94:	mov	r4, r7
   10e98:	sub	r1, r5, #20
   10e9c:	mov	r3, #7
   10ea0:	add	r0, sl, #6
   10ea4:	str	r1, [r4]
   10ea8:	ldr	r2, [r4, #4]
   10eac:	str	r3, [r2, r1]!
   10eb0:	ldr	r5, [r7]
   10eb4:	str	r2, [r8, r0, lsl #2]
   10eb8:	cmp	r5, #19
   10ebc:	bhi	10f28 <gen_protochain+0x14dc>
   10ec0:	ldr	r0, [pc, #1704]	; 11570 <gen_protochain+0x1b24>
   10ec4:	add	r4, r6, #1
   10ec8:	cmp	r6, #15
   10ecc:	add	r0, pc, r0
   10ed0:	str	r4, [r0, #92]	; 0x5c
   10ed4:	bge	114e4 <gen_protochain+0x1a98>
   10ed8:	mov	r0, #1024	; 0x400
   10edc:	lsl	r5, r0, r4
   10ee0:	mov	r0, r5
   10ee4:	bl	f1c <malloc@plt>
   10ee8:	cmp	r0, #0
   10eec:	str	r0, [r7, #12]
   10ef0:	beq	114e4 <gen_protochain+0x1a98>
   10ef4:	mov	r1, #0
   10ef8:	mov	r2, r5
   10efc:	add	r6, r7, #8
   10f00:	bl	f88 <memset@plt>
   10f04:	cmp	r5, #20
   10f08:	str	r5, [r6]
   10f0c:	bcc	114e4 <gen_protochain+0x1a98>
   10f10:	ldr	r0, [pc, #1628]	; 11574 <gen_protochain+0x1b28>
   10f14:	add	r0, pc, r0
   10f18:	add	r7, r0, r4, lsl #3
   10f1c:	b	10f30 <gen_protochain+0x14e4>
   10f20:	.word	0x0003657c
   10f24:	.word	0x00036474
   10f28:	mov	r4, r6
   10f2c:	mov	r6, r7
   10f30:	sub	r1, r5, #20
   10f34:	mov	r3, #80	; 0x50
   10f38:	add	r0, sl, #7
   10f3c:	str	r1, [r6]
   10f40:	ldr	r2, [r6, #4]
   10f44:	str	r3, [r2, r1]!
   10f48:	str	r2, [r8, r0, lsl #2]
   10f4c:	ldr	r0, [sp, #8]
   10f50:	str	r0, [r2, #12]
   10f54:	ldr	r5, [r7]
   10f58:	cmp	r5, #19
   10f5c:	bhi	10fc8 <gen_protochain+0x157c>
   10f60:	ldr	r0, [pc, #1552]	; 11578 <gen_protochain+0x1b2c>
   10f64:	add	r6, r4, #1
   10f68:	cmp	r4, #15
   10f6c:	add	r0, pc, r0
   10f70:	str	r6, [r0, #92]	; 0x5c
   10f74:	bge	114e4 <gen_protochain+0x1a98>
   10f78:	mov	r0, #1024	; 0x400
   10f7c:	lsl	r5, r0, r6
   10f80:	mov	r0, r5
   10f84:	bl	f1c <malloc@plt>
   10f88:	cmp	r0, #0
   10f8c:	str	r0, [r7, #12]
   10f90:	beq	114e4 <gen_protochain+0x1a98>
   10f94:	mov	r1, #0
   10f98:	mov	r2, r5
   10f9c:	add	r4, r7, #8
   10fa0:	bl	f88 <memset@plt>
   10fa4:	cmp	r5, #20
   10fa8:	str	r5, [r4]
   10fac:	bcc	114e4 <gen_protochain+0x1a98>
   10fb0:	ldr	r0, [pc, #1476]	; 1157c <gen_protochain+0x1b30>
   10fb4:	add	r0, pc, r0
   10fb8:	add	r7, r0, r6, lsl #3
   10fbc:	b	10fd0 <gen_protochain+0x1584>
   10fc0:	.word	0x000364c4
   10fc4:	.word	0x000363dc
   10fc8:	mov	r6, r4
   10fcc:	mov	r4, r7
   10fd0:	sub	r0, r5, #20
   10fd4:	mov	r8, #4
   10fd8:	orr	r9, sl, #8
   10fdc:	str	r0, [r4]
   10fe0:	ldr	r1, [r4, #4]
   10fe4:	str	r8, [r1, r0]!
   10fe8:	add	r0, sp, #24
   10fec:	str	r1, [r0, r9, lsl #2]
   10ff0:	mov	r0, #2
   10ff4:	str	r0, [r1, #12]
   10ff8:	ldr	r5, [r7]
   10ffc:	cmp	r5, #19
   11000:	bhi	11068 <gen_protochain+0x161c>
   11004:	ldr	r0, [pc, #1396]	; 11580 <gen_protochain+0x1b34>
   11008:	add	r4, r6, #1
   1100c:	cmp	r6, #15
   11010:	add	r0, pc, r0
   11014:	str	r4, [r0, #92]	; 0x5c
   11018:	bge	114e4 <gen_protochain+0x1a98>
   1101c:	mov	r0, #1024	; 0x400
   11020:	lsl	r5, r0, r4
   11024:	mov	r0, r5
   11028:	bl	f1c <malloc@plt>
   1102c:	cmp	r0, #0
   11030:	str	r0, [r7, #12]
   11034:	beq	114e4 <gen_protochain+0x1a98>
   11038:	mov	r1, #0
   1103c:	mov	r2, r5
   11040:	add	r6, r7, #8
   11044:	bl	f88 <memset@plt>
   11048:	cmp	r5, #20
   1104c:	str	r5, [r6]
   11050:	bcc	114e4 <gen_protochain+0x1a98>
   11054:	ldr	r0, [pc, #1320]	; 11584 <gen_protochain+0x1b38>
   11058:	add	r0, pc, r0
   1105c:	add	r7, r0, r4, lsl #3
   11060:	b	11070 <gen_protochain+0x1624>
   11064:	.word	0x0003645c
   11068:	mov	r4, r6
   1106c:	mov	r6, r7
   11070:	sub	r1, r5, #20
   11074:	mov	r3, #36	; 0x24
   11078:	add	r0, r9, #1
   1107c:	str	r1, [r6]
   11080:	ldr	r2, [r6, #4]
   11084:	str	r3, [r2, r1]!
   11088:	add	r1, sp, #24
   1108c:	str	r2, [r1, r0, lsl #2]
   11090:	str	r8, [r2, #12]
   11094:	ldr	r5, [r7]
   11098:	cmp	r5, #19
   1109c:	bhi	1110c <gen_protochain+0x16c0>
   110a0:	ldr	r0, [pc, #1248]	; 11588 <gen_protochain+0x1b3c>
   110a4:	add	r6, r4, #1
   110a8:	cmp	r4, #15
   110ac:	add	r0, pc, r0
   110b0:	str	r6, [r0, #92]	; 0x5c
   110b4:	bge	114e4 <gen_protochain+0x1a98>
   110b8:	mov	r0, #1024	; 0x400
   110bc:	lsl	r5, r0, r6
   110c0:	mov	r0, r5
   110c4:	bl	f1c <malloc@plt>
   110c8:	cmp	r0, #0
   110cc:	add	r8, sp, #24
   110d0:	str	r0, [r7, #12]
   110d4:	beq	114e4 <gen_protochain+0x1a98>
   110d8:	mov	r1, #0
   110dc:	mov	r2, r5
   110e0:	add	r4, r7, #8
   110e4:	bl	f88 <memset@plt>
   110e8:	cmp	r5, #20
   110ec:	str	r5, [r4]
   110f0:	bcc	114e4 <gen_protochain+0x1a98>
   110f4:	ldr	r0, [pc, #1168]	; 1158c <gen_protochain+0x1b40>
   110f8:	add	r0, pc, r0
   110fc:	add	r7, r0, r6, lsl #3
   11100:	b	11118 <gen_protochain+0x16cc>
   11104:	.word	0x000363b8
   11108:	.word	0x000362b0
   1110c:	mov	r6, r4
   11110:	mov	r4, r7
   11114:	add	r8, sp, #24
   11118:	sub	r1, r5, #20
   1111c:	mov	r3, #7
   11120:	add	r0, r9, #2
   11124:	str	r1, [r4]
   11128:	ldr	r2, [r4, #4]
   1112c:	str	r3, [r2, r1]!
   11130:	ldr	r5, [r7]
   11134:	str	r2, [r8, r0, lsl #2]
   11138:	cmp	r5, #19
   1113c:	bhi	111a4 <gen_protochain+0x1758>
   11140:	ldr	r0, [pc, #1096]	; 11590 <gen_protochain+0x1b44>
   11144:	add	r4, r6, #1
   11148:	cmp	r6, #15
   1114c:	add	r0, pc, r0
   11150:	str	r4, [r0, #92]	; 0x5c
   11154:	bge	114e4 <gen_protochain+0x1a98>
   11158:	mov	r0, #1024	; 0x400
   1115c:	lsl	r5, r0, r4
   11160:	mov	r0, r5
   11164:	bl	f1c <malloc@plt>
   11168:	cmp	r0, #0
   1116c:	str	r0, [r7, #12]
   11170:	beq	114e4 <gen_protochain+0x1a98>
   11174:	mov	r1, #0
   11178:	mov	r2, r5
   1117c:	add	r6, r7, #8
   11180:	bl	f88 <memset@plt>
   11184:	cmp	r5, #20
   11188:	str	r5, [r6]
   1118c:	bcc	114e4 <gen_protochain+0x1a98>
   11190:	ldr	r0, [pc, #1020]	; 11594 <gen_protochain+0x1b48>
   11194:	add	r0, pc, r0
   11198:	add	r7, r0, r4, lsl #3
   1119c:	b	111ac <gen_protochain+0x1760>
   111a0:	.word	0x000362d0
   111a4:	mov	r4, r6
   111a8:	mov	r6, r7
   111ac:	sub	r1, r5, #20
   111b0:	mov	r3, #96	; 0x60
   111b4:	add	r0, r9, #3
   111b8:	str	r1, [r6]
   111bc:	ldr	r2, [r6, #4]
   111c0:	str	r3, [r2, r1]!
   111c4:	str	r2, [r8, r0, lsl #2]
   111c8:	ldr	r0, [sp, #20]
   111cc:	str	r0, [r2, #12]
   111d0:	ldr	r5, [r7]
   111d4:	cmp	r5, #19
   111d8:	bhi	11244 <gen_protochain+0x17f8>
   111dc:	ldr	r0, [pc, #948]	; 11598 <gen_protochain+0x1b4c>
   111e0:	add	r6, r4, #1
   111e4:	cmp	r4, #15
   111e8:	add	r0, pc, r0
   111ec:	str	r6, [r0, #92]	; 0x5c
   111f0:	bge	114e4 <gen_protochain+0x1a98>
   111f4:	mov	r0, #1024	; 0x400
   111f8:	lsl	r5, r0, r6
   111fc:	mov	r0, r5
   11200:	bl	f1c <malloc@plt>
   11204:	cmp	r0, #0
   11208:	str	r0, [r7, #12]
   1120c:	beq	114e4 <gen_protochain+0x1a98>
   11210:	mov	r1, #0
   11214:	mov	r2, r5
   11218:	add	r4, r7, #8
   1121c:	bl	f88 <memset@plt>
   11220:	cmp	r5, #20
   11224:	str	r5, [r4]
   11228:	bcc	114e4 <gen_protochain+0x1a98>
   1122c:	ldr	r0, [pc, #872]	; 1159c <gen_protochain+0x1b50>
   11230:	add	r0, pc, r0
   11234:	add	r7, r0, r6, lsl #3
   11238:	b	1124c <gen_protochain+0x1800>
   1123c:	.word	0x000361c8
   11240:	.word	0x0003621c
   11244:	mov	r6, r4
   11248:	mov	r4, r7
   1124c:	sub	r1, r5, #20
   11250:	mov	r3, #5
   11254:	add	r0, r9, #4
   11258:	str	r1, [r4]
   1125c:	ldr	r2, [r4, #4]
   11260:	str	r3, [r2, r1]!
   11264:	str	r2, [r8, r0, lsl #2]
   11268:	mvn	r0, #8
   1126c:	eor	r0, sl, r0
   11270:	sub	r0, r0, #1
   11274:	str	r0, [r2, #12]
   11278:	ldr	r5, [r7]
   1127c:	cmp	r5, #19
   11280:	bhi	112ec <gen_protochain+0x18a0>
   11284:	ldr	r0, [pc, #788]	; 115a0 <gen_protochain+0x1b54>
   11288:	add	r8, r6, #1
   1128c:	cmp	r6, #15
   11290:	add	r0, pc, r0
   11294:	str	r8, [r0, #92]	; 0x5c
   11298:	bge	114e4 <gen_protochain+0x1a98>
   1129c:	mov	r0, #1024	; 0x400
   112a0:	lsl	r5, r0, r8
   112a4:	mov	r0, r5
   112a8:	bl	f1c <malloc@plt>
   112ac:	cmp	r0, #0
   112b0:	str	r0, [r7, #12]
   112b4:	beq	114e4 <gen_protochain+0x1a98>
   112b8:	mov	r1, #0
   112bc:	mov	r2, r5
   112c0:	add	r7, r7, #8
   112c4:	bl	f88 <memset@plt>
   112c8:	cmp	r5, #19
   112cc:	str	r5, [r7]
   112d0:	bhi	112f0 <gen_protochain+0x18a4>
   112d4:	b	114e4 <gen_protochain+0x1a98>
   112d8:	.word	0x00036134
   112dc:	.word	0x000360fc
   112e0:	.word	0x00036168
   112e4:	.word	0x000360e4
   112e8:	.word	0x00036050
   112ec:	mov	r8, r6
   112f0:	sub	r1, r5, #20
   112f4:	mov	r3, #4
   112f8:	add	r0, r9, #5
   112fc:	str	r1, [r7]
   11300:	ldr	r2, [r7, #4]
   11304:	str	r3, [r2, r1]!
   11308:	add	r1, sp, #24
   1130c:	mov	r3, r1
   11310:	str	r2, [r1, r0, lsl #2]
   11314:	mov	r1, #0
   11318:	str	r1, [r2, #12]
   1131c:	ldr	r1, [r3, r0, lsl #2]
   11320:	ldr	r2, [sp, #40]	; 0x28
   11324:	str	r1, [r2, #4]
   11328:	ldr	r1, [r3, sl, lsl #2]
   1132c:	ldr	r2, [r3, r0, lsl #2]
   11330:	str	r2, [r1, #8]
   11334:	ldr	r1, [r3, r0, lsl #2]
   11338:	ldr	r2, [sp, #36]	; 0x24
   1133c:	str	r1, [r2, #4]
   11340:	orr	r1, r3, #4
   11344:	mov	r2, r0
   11348:	ldmda	r1, {r3, r7}
   1134c:	add	r1, r1, #4
   11350:	subs	r2, r2, #1
   11354:	str	r7, [r3, #16]
   11358:	bne	11348 <gen_protochain+0x18fc>
   1135c:	add	r1, sp, #24
   11360:	mov	r6, #0
   11364:	ldr	r0, [r1, r0, lsl #2]
   11368:	str	r6, [r0, #16]
   1136c:	ldr	r7, [pc, #560]	; 115a4 <gen_protochain+0x1b58>
   11370:	ldr	r4, [sp]
   11374:	add	r7, pc, r7
   11378:	ldr	r5, [r7, r8, lsl #3]!
   1137c:	cmp	r5, #207	; 0xcf
   11380:	bhi	113d4 <gen_protochain+0x1988>
   11384:	ldr	r1, [pc, #540]	; 115a8 <gen_protochain+0x1b5c>
   11388:	add	r0, r8, #1
   1138c:	cmp	r8, #15
   11390:	add	r1, pc, r1
   11394:	str	r0, [r1, #92]	; 0x5c
   11398:	bge	114e4 <gen_protochain+0x1a98>
   1139c:	mov	r1, #1024	; 0x400
   113a0:	lsl	r5, r1, r0
   113a4:	mov	r0, r5
   113a8:	bl	f1c <malloc@plt>
   113ac:	cmp	r0, #0
   113b0:	str	r0, [r7, #12]
   113b4:	beq	114e4 <gen_protochain+0x1a98>
   113b8:	mov	r1, #0
   113bc:	mov	r2, r5
   113c0:	add	r7, r7, #8
   113c4:	bl	f88 <memset@plt>
   113c8:	cmp	r5, #207	; 0xcf
   113cc:	str	r5, [r7]
   113d0:	bls	114e4 <gen_protochain+0x1a98>
   113d4:	sub	r0, r5, #208	; 0xd0
   113d8:	ldr	r2, [sp, #16]
   113dc:	cmp	r4, #0
   113e0:	str	r0, [r7]
   113e4:	ldr	r1, [r7, #4]
   113e8:	add	r0, r1, r0
   113ec:	mov	r1, #21
   113f0:	str	r1, [r0, #8]
   113f4:	str	r0, [r0, #96]	; 0x60
   113f8:	ldr	r1, [sp, #28]
   113fc:	str	r2, [r0, #20]
   11400:	str	r1, [r0, #4]
   11404:	ldr	r1, [pc, #416]	; 115ac <gen_protochain+0x1b60>
   11408:	ldr	r2, [sp, #20]
   1140c:	add	r1, pc, r1
   11410:	str	r6, [r1, r2, lsl #2]
   11414:	beq	11448 <gen_protochain+0x19fc>
   11418:	ldr	r1, [r0, #96]	; 0x60
   1141c:	mov	r2, r4
   11420:	ldr	r3, [r2, #44]	; 0x2c
   11424:	add	r7, r2, #84	; 0x54
   11428:	cmp	r3, #0
   1142c:	mov	r3, #84	; 0x54
   11430:	movweq	r3, #60	; 0x3c
   11434:	addeq	r7, r2, #60	; 0x3c
   11438:	ldr	r2, [r2, r3]
   1143c:	str	r1, [r7]
   11440:	cmp	r2, #0
   11444:	bne	11420 <gen_protochain+0x19d4>
   11448:	ldr	r2, [r4, #44]	; 0x2c
   1144c:	add	r1, r0, #96	; 0x60
   11450:	cmp	r0, #0
   11454:	clz	r2, r2
   11458:	lsr	r2, r2, #5
   1145c:	str	r2, [r4, #44]	; 0x2c
   11460:	ldr	r2, [r0, #44]	; 0x2c
   11464:	clz	r3, r2
   11468:	lsr	r3, r3, #5
   1146c:	str	r3, [r0, #44]	; 0x2c
   11470:	str	r0, [fp, #-36]	; 0xffffffdc
   11474:	beq	114bc <gen_protochain+0x1a70>
   11478:	mov	r7, #60	; 0x3c
   1147c:	cmp	r2, #0
   11480:	mov	r3, r0
   11484:	movweq	r7, #84	; 0x54
   11488:	ldr	r2, [r3, r7]!
   1148c:	cmp	r2, #0
   11490:	beq	114c0 <gen_protochain+0x1a74>
   11494:	ldr	r7, [r2, #44]	; 0x2c
   11498:	add	r3, r2, #84	; 0x54
   1149c:	cmp	r7, #0
   114a0:	mov	r7, #84	; 0x54
   114a4:	movweq	r7, #60	; 0x3c
   114a8:	addeq	r3, r2, #60	; 0x3c
   114ac:	ldr	r2, [r2, r7]
   114b0:	cmp	r2, #0
   114b4:	bne	11494 <gen_protochain+0x1a48>
   114b8:	b	114c0 <gen_protochain+0x1a74>
   114bc:	sub	r3, fp, #36	; 0x24
   114c0:	str	r4, [r3]
   114c4:	ldr	r2, [r0, #44]	; 0x2c
   114c8:	clz	r2, r2
   114cc:	lsr	r2, r2, #5
   114d0:	str	r2, [r0, #44]	; 0x2c
   114d4:	ldr	r2, [r4, #96]	; 0x60
   114d8:	str	r2, [r1]
   114dc:	sub	sp, fp, #28
   114e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114e4:	ldr	r0, [pc, #196]	; 115b0 <gen_protochain+0x1b64>
   114e8:	add	r0, pc, r0
   114ec:	bl	2204 <sf_bpf_error>
   114f0:	ldr	r0, [pc, #16]	; 11508 <gen_protochain+0x1abc>
   114f4:	add	r0, pc, r0
   114f8:	bl	2204 <sf_bpf_error>
   114fc:	ldr	r0, [pc, #176]	; 115b4 <gen_protochain+0x1b68>
   11500:	add	r0, pc, r0
   11504:	bl	2204 <sf_bpf_error>
   11508:	.word	0x00018880
   1150c:	.word	0x00035fc4
   11510:	.word	0x00035f40
   11514:	.word	0x00035eb4
   11518:	.word	0x00035e30
   1151c:	.word	0x00035da8
   11520:	.word	0x00035d1c
   11524:	.word	0x00035c90
   11528:	.word	0x00035c0c
   1152c:	.word	0x00035b80
   11530:	.word	0x000359f4
   11534:	.word	0x00035a98
   11538:	.word	0x00035938
   1153c:	.word	0x000358bc
   11540:	.word	0x000359dc
   11544:	.word	0x000358d4
   11548:	.word	0x00035938
   1154c:	.word	0x00035830
   11550:	.word	0x00035890
   11554:	.word	0x00035784
   11558:	.word	0x000357ec
   1155c:	.word	0x000356e4
   11560:	.word	0x0003574c
   11564:	.word	0x00035644
   11568:	.word	0x000356b4
   1156c:	.word	0x000355ac
   11570:	.word	0x00035614
   11574:	.word	0x0003550c
   11578:	.word	0x00035574
   1157c:	.word	0x0003546c
   11580:	.word	0x000354d0
   11584:	.word	0x000353c8
   11588:	.word	0x00035434
   1158c:	.word	0x00035328
   11590:	.word	0x00035394
   11594:	.word	0x0003528c
   11598:	.word	0x000352f8
   1159c:	.word	0x000351f0
   115a0:	.word	0x00035250
   115a4:	.word	0x000350ac
   115a8:	.word	0x00035150
   115ac:	.word	0x00035094
   115b0:	.word	0x00017eac
   115b4:	.word	0x000188c1

000115b8 <sf_gen_mcode>:
   115b8:	push	{r4, r5, r6, r7, fp, lr}
   115bc:	add	fp, sp, #16
   115c0:	sub	sp, sp, #16
   115c4:	mov	r6, r1
   115c8:	add	r1, sp, #12
   115cc:	mov	r4, r3
   115d0:	mov	r7, r2
   115d4:	mov	r5, r0
   115d8:	bl	1f208 <__pcap_atoin>
   115dc:	ldr	r1, [sp, #12]
   115e0:	rsb	r0, r0, #32
   115e4:	cmp	r6, #0
   115e8:	lsl	r0, r1, r0
   115ec:	str	r0, [sp, #12]
   115f0:	beq	11634 <sf_gen_mcode+0x7c>
   115f4:	add	r1, sp, #8
   115f8:	mov	r0, r6
   115fc:	bl	1f208 <__pcap_atoin>
   11600:	ldr	r2, [sp, #8]
   11604:	rsb	r0, r0, #32
   11608:	lsl	r1, r2, r0
   1160c:	mvn	r2, r2, lsl r0
   11610:	ldr	r0, [sp, #12]
   11614:	str	r1, [sp, #8]
   11618:	tst	r0, r2
   1161c:	beq	11660 <sf_gen_mcode+0xa8>
   11620:	ldr	r0, [pc, #148]	; 116bc <sf_gen_mcode+0x104>
   11624:	mov	r1, r5
   11628:	mov	r2, r6
   1162c:	add	r0, pc, r0
   11630:	bl	2204 <sf_bpf_error>
   11634:	cmp	r7, #33	; 0x21
   11638:	bge	1169c <sf_gen_mcode+0xe4>
   1163c:	rsb	r2, r7, #32
   11640:	mvn	r3, #0
   11644:	cmp	r7, #0
   11648:	mov	r1, r7
   1164c:	lslne	r1, r3, r2
   11650:	mvn	r2, r1
   11654:	str	r1, [sp, #8]
   11658:	tst	r0, r2
   1165c:	bne	116a8 <sf_gen_mcode+0xf0>
   11660:	uxtb	r2, r4
   11664:	cmp	r2, #2
   11668:	bne	11690 <sf_gen_mcode+0xd8>
   1166c:	lsr	r3, r4, #16
   11670:	lsr	r2, r4, #8
   11674:	mov	r7, #2
   11678:	uxtb	r2, r2
   1167c:	uxtb	r3, r3
   11680:	str	r7, [sp]
   11684:	bl	bae4 <gen_host>
   11688:	sub	sp, fp, #16
   1168c:	pop	{r4, r5, r6, r7, fp, pc}
   11690:	ldr	r0, [pc, #40]	; 116c0 <sf_gen_mcode+0x108>
   11694:	add	r0, pc, r0
   11698:	bl	2204 <sf_bpf_error>
   1169c:	ldr	r0, [pc, #32]	; 116c4 <sf_gen_mcode+0x10c>
   116a0:	add	r0, pc, r0
   116a4:	bl	2204 <sf_bpf_error>
   116a8:	ldr	r0, [pc, #24]	; 116c8 <sf_gen_mcode+0x110>
   116ac:	mov	r1, r5
   116b0:	mov	r2, r7
   116b4:	add	r0, pc, r0
   116b8:	bl	2204 <sf_bpf_error>
   116bc:	.word	0x00017524
   116c0:	.word	0x0001751b
   116c4:	.word	0x000174d5
   116c8:	.word	0x000174db

000116cc <sf_gen_ncode>:
   116cc:	push	{r4, r5, r6, r7, fp, lr}
   116d0:	add	fp, sp, #16
   116d4:	sub	sp, sp, #16
   116d8:	str	r1, [sp, #4]
   116dc:	ubfx	r4, r2, #16, #8
   116e0:	mov	r7, r2
   116e4:	mov	r6, r0
   116e8:	ubfx	r5, r2, #8, #8
   116ec:	cmp	r0, #0
   116f0:	beq	11718 <sf_gen_ncode+0x4c>
   116f4:	add	r1, sp, #4
   116f8:	mov	r0, r6
   116fc:	cmp	r5, #12
   11700:	bne	11798 <sf_gen_ncode+0xcc>
   11704:	bl	1f27c <__pcap_atodn>
   11708:	uxtb	r2, r7
   1170c:	cmp	r2, #7
   11710:	bls	11728 <sf_gen_ncode+0x5c>
   11714:	b	117a8 <sf_gen_ncode+0xdc>
   11718:	mov	r0, #32
   1171c:	uxtb	r2, r7
   11720:	cmp	r2, #7
   11724:	bhi	117a8 <sf_gen_ncode+0xdc>
   11728:	add	r3, pc, #8
   1172c:	lsr	r1, r7, #8
   11730:	ldr	r7, [r3, r2, lsl #2]
   11734:	add	pc, r3, r7
   11738:	.word	0x00000020
   1173c:	.word	0x00000020
   11740:	.word	0x00000020
   11744:	.word	0x000000a4
   11748:	.word	0x00000314
   1174c:	.word	0x00000290
   11750:	.word	0x00000188
   11754:	.word	0x000001a4
   11758:	uxtb	r1, r1
   1175c:	cmp	r1, #12
   11760:	beq	117b4 <sf_gen_ncode+0xe8>
   11764:	cmp	r1, #1
   11768:	beq	11a5c <sf_gen_ncode+0x390>
   1176c:	cmp	r6, #0
   11770:	cmpeq	r2, #2
   11774:	beq	119e8 <sf_gen_ncode+0x31c>
   11778:	rsb	r1, r0, #32
   1177c:	ldr	r0, [sp, #4]
   11780:	mvn	r3, #0
   11784:	lsl	r0, r0, r1
   11788:	lsl	r1, r3, r1
   1178c:	str	r0, [sp, #4]
   11790:	str	r2, [sp]
   11794:	b	117c0 <sf_gen_ncode+0xf4>
   11798:	bl	1f208 <__pcap_atoin>
   1179c:	uxtb	r2, r7
   117a0:	cmp	r2, #7
   117a4:	bls	11728 <sf_gen_ncode+0x5c>
   117a8:	cmp	r2, #255	; 0xff
   117ac:	bne	11a58 <sf_gen_ncode+0x38c>
   117b0:	bl	2e68 <syntax>
   117b4:	ldr	r0, [sp, #4]
   117b8:	str	r2, [sp]
   117bc:	mov	r1, #0
   117c0:	mov	r2, r5
   117c4:	mov	r3, r4
   117c8:	bl	bae4 <gen_host>
   117cc:	mov	r5, r0
   117d0:	mov	r0, r5
   117d4:	sub	sp, fp, #16
   117d8:	pop	{r4, r5, r6, r7, fp, pc}
   117dc:	uxtb	r0, r1
   117e0:	cmp	r0, #8
   117e4:	bcs	11a68 <sf_gen_ncode+0x39c>
   117e8:	mov	r2, #225	; 0xe1
   117ec:	mov	r3, #1
   117f0:	tst	r3, r2, lsr r0
   117f4:	beq	11a68 <sf_gen_ncode+0x39c>
   117f8:	lsl	r0, r1, #24
   117fc:	ldr	r1, [pc, #636]	; 11a80 <sf_gen_ncode+0x3b4>
   11800:	mov	r2, r4
   11804:	add	r1, pc, r1
   11808:	ldr	r6, [r1, r0, asr #22]
   1180c:	ldr	r0, [sp, #4]
   11810:	mov	r1, r6
   11814:	bl	ed94 <gen_port>
   11818:	mov	r5, r0
   1181c:	ldr	r0, [sp, #4]
   11820:	mov	r1, r6
   11824:	mov	r2, r4
   11828:	bl	f060 <gen_port6>
   1182c:	ldr	r1, [r0, #44]	; 0x2c
   11830:	cmp	r0, #0
   11834:	clz	r1, r1
   11838:	lsr	r1, r1, #5
   1183c:	str	r1, [r0, #44]	; 0x2c
   11840:	beq	1187c <sf_gen_ncode+0x1b0>
   11844:	ldr	r2, [r5, #96]	; 0x60
   11848:	mov	r3, r0
   1184c:	b	11854 <sf_gen_ncode+0x188>
   11850:	ldr	r1, [r3, #44]	; 0x2c
   11854:	cmp	r1, #0
   11858:	mov	r1, #84	; 0x54
   1185c:	add	r7, r3, #84	; 0x54
   11860:	movweq	r1, #60	; 0x3c
   11864:	addeq	r7, r3, #60	; 0x3c
   11868:	ldr	r3, [r3, r1]
   1186c:	str	r2, [r7]
   11870:	cmp	r3, #0
   11874:	bne	11850 <sf_gen_ncode+0x184>
   11878:	ldr	r1, [r0, #44]	; 0x2c
   1187c:	clz	r1, r1
   11880:	cmp	r5, #0
   11884:	lsr	r1, r1, #5
   11888:	str	r1, [r0, #44]	; 0x2c
   1188c:	str	r5, [sp, #8]
   11890:	beq	11a28 <sf_gen_ncode+0x35c>
   11894:	mov	r2, r5
   11898:	ldr	r3, [r2, #44]	; 0x2c
   1189c:	add	r1, r2, #84	; 0x54
   118a0:	cmp	r3, #0
   118a4:	mov	r3, #84	; 0x54
   118a8:	movweq	r3, #60	; 0x3c
   118ac:	addeq	r1, r2, #60	; 0x3c
   118b0:	ldr	r2, [r2, r3]
   118b4:	cmp	r2, #0
   118b8:	bne	11898 <sf_gen_ncode+0x1cc>
   118bc:	b	11a34 <sf_gen_ncode+0x368>
   118c0:	ldr	r0, [sp, #4]
   118c4:	mov	r1, r5
   118c8:	bl	fa4c <gen_protochain>
   118cc:	mov	r5, r0
   118d0:	mov	r0, r5
   118d4:	sub	sp, fp, #16
   118d8:	pop	{r4, r5, r6, r7, fp, pc}
   118dc:	uxtb	r0, r1
   118e0:	cmp	r0, #8
   118e4:	bcs	11a74 <sf_gen_ncode+0x3a8>
   118e8:	mov	r2, #225	; 0xe1
   118ec:	mov	r3, #1
   118f0:	tst	r3, r2, lsr r0
   118f4:	beq	11a74 <sf_gen_ncode+0x3a8>
   118f8:	lsl	r0, r1, #24
   118fc:	ldr	r1, [pc, #384]	; 11a84 <sf_gen_ncode+0x3b8>
   11900:	mov	r3, r4
   11904:	add	r1, pc, r1
   11908:	ldr	r6, [r1, r0, asr #22]
   1190c:	ldr	r0, [sp, #4]
   11910:	mov	r1, r0
   11914:	mov	r2, r6
   11918:	bl	f32c <gen_portrange>
   1191c:	mov	r5, r0
   11920:	ldr	r0, [sp, #4]
   11924:	mov	r2, r6
   11928:	mov	r3, r4
   1192c:	mov	r1, r0
   11930:	bl	f60c <gen_portrange6>
   11934:	ldr	r1, [r0, #44]	; 0x2c
   11938:	cmp	r0, #0
   1193c:	clz	r1, r1
   11940:	lsr	r1, r1, #5
   11944:	str	r1, [r0, #44]	; 0x2c
   11948:	beq	11984 <sf_gen_ncode+0x2b8>
   1194c:	ldr	r2, [r5, #96]	; 0x60
   11950:	mov	r3, r0
   11954:	b	1195c <sf_gen_ncode+0x290>
   11958:	ldr	r1, [r3, #44]	; 0x2c
   1195c:	cmp	r1, #0
   11960:	mov	r1, #84	; 0x54
   11964:	add	r7, r3, #84	; 0x54
   11968:	movweq	r1, #60	; 0x3c
   1196c:	addeq	r7, r3, #60	; 0x3c
   11970:	ldr	r3, [r3, r1]
   11974:	str	r2, [r7]
   11978:	cmp	r3, #0
   1197c:	bne	11958 <sf_gen_ncode+0x28c>
   11980:	ldr	r1, [r0, #44]	; 0x2c
   11984:	clz	r1, r1
   11988:	cmp	r5, #0
   1198c:	lsr	r1, r1, #5
   11990:	str	r1, [r0, #44]	; 0x2c
   11994:	str	r5, [sp, #12]
   11998:	beq	11a30 <sf_gen_ncode+0x364>
   1199c:	mov	r2, r5
   119a0:	ldr	r3, [r2, #44]	; 0x2c
   119a4:	add	r1, r2, #84	; 0x54
   119a8:	cmp	r3, #0
   119ac:	mov	r3, #84	; 0x54
   119b0:	movweq	r3, #60	; 0x3c
   119b4:	addeq	r1, r2, #60	; 0x3c
   119b8:	ldr	r2, [r2, r3]
   119bc:	cmp	r2, #0
   119c0:	bne	119a0 <sf_gen_ncode+0x2d4>
   119c4:	b	11a34 <sf_gen_ncode+0x368>
   119c8:	ldr	r0, [sp, #4]
   119cc:	mov	r1, r5
   119d0:	mov	r2, r4
   119d4:	bl	64d8 <gen_proto>
   119d8:	mov	r5, r0
   119dc:	mov	r0, r5
   119e0:	sub	sp, fp, #16
   119e4:	pop	{r4, r5, r6, r7, fp, pc}
   119e8:	ldr	r0, [sp, #4]
   119ec:	movw	r7, #65534	; 0xfffe
   119f0:	mvn	r1, #0
   119f4:	movt	r7, #255	; 0xff
   119f8:	sub	r3, r0, #1
   119fc:	cmp	r3, r7
   11a00:	bhi	11790 <sf_gen_ncode+0xc4>
   11a04:	mvn	r3, #0
   11a08:	mvn	r7, #-16777216	; 0xff000000
   11a0c:	mvn	r1, #0
   11a10:	add	r6, r3, r0, lsl #8
   11a14:	lsl	r1, r1, #8
   11a18:	lsl	r0, r0, #8
   11a1c:	cmp	r6, r7
   11a20:	bcc	11a10 <sf_gen_ncode+0x344>
   11a24:	b	1178c <sf_gen_ncode+0xc0>
   11a28:	add	r1, sp, #8
   11a2c:	b	11a34 <sf_gen_ncode+0x368>
   11a30:	add	r1, sp, #12
   11a34:	str	r0, [r1]
   11a38:	ldr	r0, [r0, #96]	; 0x60
   11a3c:	str	r0, [r5, #96]	; 0x60
   11a40:	mov	r0, r5
   11a44:	sub	sp, fp, #16
   11a48:	pop	{r4, r5, r6, r7, fp, pc}
   11a4c:	ldr	r0, [pc, #52]	; 11a88 <sf_gen_ncode+0x3bc>
   11a50:	add	r0, pc, r0
   11a54:	bl	2204 <sf_bpf_error>
   11a58:	bl	100c <abort@plt>
   11a5c:	ldr	r0, [pc, #40]	; 11a8c <sf_gen_ncode+0x3c0>
   11a60:	add	r0, pc, r0
   11a64:	bl	2204 <sf_bpf_error>
   11a68:	ldr	r0, [pc, #32]	; 11a90 <sf_gen_ncode+0x3c4>
   11a6c:	add	r0, pc, r0
   11a70:	bl	2204 <sf_bpf_error>
   11a74:	ldr	r0, [pc, #24]	; 11a94 <sf_gen_ncode+0x3c8>
   11a78:	add	r0, pc, r0
   11a7c:	bl	2204 <sf_bpf_error>
   11a80:	.word	0x00018614
   11a84:	.word	0x00018514
   11a88:	.word	0x00017198
   11a8c:	.word	0x0001716d
   11a90:	.word	0x00016fb4
   11a94:	.word	0x0001700a

00011a98 <sf_gen_mcode6>:
   11a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a9c:	add	fp, sp, #28
   11aa0:	sub	sp, sp, #28
   11aa4:	cmp	r1, #0
   11aa8:	bne	11bf0 <sf_gen_mcode6+0x158>
   11aac:	mov	sl, r3
   11ab0:	mov	r6, r2
   11ab4:	mov	r5, r0
   11ab8:	bl	1edbc <pcap_nametoaddrinfo>
   11abc:	cmp	r0, #0
   11ac0:	beq	11bfc <sf_gen_mcode6+0x164>
   11ac4:	mov	r4, r0
   11ac8:	ldr	r0, [pc, #360]	; 11c38 <sf_gen_mcode6+0x1a0>
   11acc:	add	r0, pc, r0
   11ad0:	str	r4, [r0, #24]
   11ad4:	ldr	r0, [r4, #28]
   11ad8:	cmp	r0, #0
   11adc:	bne	11c0c <sf_gen_mcode6+0x174>
   11ae0:	cmp	r6, #129	; 0x81
   11ae4:	str	r5, [sp, #4]
   11ae8:	bcs	11c1c <sf_gen_mcode6+0x184>
   11aec:	ldr	r8, [r4, #20]
   11af0:	add	r7, sp, #8
   11af4:	vmov.i32	q8, #0	; 0x00000000
   11af8:	mov	r1, #255	; 0xff
   11afc:	vst1.64	{d16-d17}, [r7]
   11b00:	ubfx	r5, r6, #3, #5
   11b04:	mov	r0, r7
   11b08:	mov	r2, r5
   11b0c:	add	r9, r8, #8
   11b10:	bl	f88 <memset@plt>
   11b14:	ands	r0, r6, #7
   11b18:	rsbne	r0, r0, #8
   11b1c:	movne	r1, #255	; 0xff
   11b20:	lslne	r0, r1, r0
   11b24:	strbne	r0, [r7, r5]
   11b28:	ldr	r1, [sp, #8]
   11b2c:	ldr	r0, [r9]
   11b30:	mvn	r1, r1
   11b34:	tst	r0, r1
   11b38:	ldreq	r1, [sp, #12]
   11b3c:	ldreq	r0, [r8, #12]
   11b40:	mvneq	r1, r1
   11b44:	tsteq	r0, r1
   11b48:	bne	11b70 <sf_gen_mcode6+0xd8>
   11b4c:	ldr	r1, [sp, #16]
   11b50:	ldr	r0, [r8, #16]
   11b54:	mvn	r1, r1
   11b58:	tst	r0, r1
   11b5c:	ldreq	r1, [sp, #20]
   11b60:	ldreq	r0, [r8, #20]
   11b64:	mvneq	r1, r1
   11b68:	tsteq	r0, r1
   11b6c:	beq	11b84 <sf_gen_mcode6+0xec>
   11b70:	ldr	r0, [pc, #220]	; 11c54 <sf_gen_mcode6+0x1bc>
   11b74:	ldr	r1, [sp, #4]
   11b78:	mov	r2, r6
   11b7c:	add	r0, pc, r0
   11b80:	bl	2204 <sf_bpf_error>
   11b84:	uxtb	r0, sl
   11b88:	cmp	r0, #2
   11b8c:	bcs	11ba4 <sf_gen_mcode6+0x10c>
   11b90:	cmp	r6, #128	; 0x80
   11b94:	beq	11ba8 <sf_gen_mcode6+0x110>
   11b98:	ldr	r0, [pc, #184]	; 11c58 <sf_gen_mcode6+0x1c0>
   11b9c:	add	r0, pc, r0
   11ba0:	bl	2204 <sf_bpf_error>
   11ba4:	bne	11c2c <sf_gen_mcode6+0x194>
   11ba8:	lsr	r2, sl, #8
   11bac:	lsr	r1, sl, #16
   11bb0:	str	r0, [sp]
   11bb4:	mov	r0, r9
   11bb8:	uxtb	r3, r1
   11bbc:	uxtb	r2, r2
   11bc0:	add	r1, sp, #8
   11bc4:	bl	eaa8 <gen_host6>
   11bc8:	ldr	r1, [pc, #112]	; 11c40 <sf_gen_mcode6+0x1a8>
   11bcc:	mov	r5, r0
   11bd0:	mov	r0, #0
   11bd4:	add	r1, pc, r1
   11bd8:	str	r0, [r1, #24]
   11bdc:	mov	r0, r4
   11be0:	bl	fdc <freeaddrinfo@plt>
   11be4:	mov	r0, r5
   11be8:	sub	sp, fp, #28
   11bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bf0:	ldr	r0, [pc, #76]	; 11c44 <sf_gen_mcode6+0x1ac>
   11bf4:	add	r0, pc, r0
   11bf8:	bl	2204 <sf_bpf_error>
   11bfc:	ldr	r0, [pc, #68]	; 11c48 <sf_gen_mcode6+0x1b0>
   11c00:	mov	r1, r5
   11c04:	add	r0, pc, r0
   11c08:	bl	2204 <sf_bpf_error>
   11c0c:	ldr	r0, [pc, #56]	; 11c4c <sf_gen_mcode6+0x1b4>
   11c10:	mov	r1, r5
   11c14:	add	r0, pc, r0
   11c18:	bl	2204 <sf_bpf_error>
   11c1c:	ldr	r0, [pc, #44]	; 11c50 <sf_gen_mcode6+0x1b8>
   11c20:	mov	r1, #128	; 0x80
   11c24:	add	r0, pc, r0
   11c28:	bl	2204 <sf_bpf_error>
   11c2c:	ldr	r0, [pc, #8]	; 11c3c <sf_gen_mcode6+0x1a4>
   11c30:	add	r0, pc, r0
   11c34:	bl	2204 <sf_bpf_error>
   11c38:	.word	0x00034a14
   11c3c:	.word	0x00017038
   11c40:	.word	0x0003490c
   11c44:	.word	0x0001700e
   11c48:	.word	0x00017013
   11c4c:	.word	0x0001701a
   11c50:	.word	0x0001702a
   11c54:	.word	0x00017013
   11c58:	.word	0x00017013

00011c5c <sf_gen_ecode>:
   11c5c:	push	{r4, r5, r6, sl, fp, lr}
   11c60:	add	fp, sp, #16
   11c64:	sub	sp, sp, #8
   11c68:	mov	r5, r0
   11c6c:	movw	r0, #65534	; 0xfffe
   11c70:	and	r0, r1, r0
   11c74:	cmp	r0, #256	; 0x100
   11c78:	bne	11f34 <sf_gen_ecode+0x2d8>
   11c7c:	lsr	r6, r1, #16
   11c80:	ldr	r1, [pc, #708]	; 11f4c <sf_gen_ecode+0x2f0>
   11c84:	add	r1, pc, r1
   11c88:	ldr	r0, [r1, #36]	; 0x24
   11c8c:	cmp	r0, #104	; 0x68
   11c90:	ble	11dac <sf_gen_ecode+0x150>
   11c94:	sub	r2, r0, #105	; 0x69
   11c98:	cmp	r2, #58	; 0x3a
   11c9c:	bhi	11de4 <sf_gen_ecode+0x188>
   11ca0:	add	r0, pc, #4
   11ca4:	ldr	r2, [r0, r2, lsl #2]
   11ca8:	add	pc, r0, r2
   11cac:	.word	0x000000ec
   11cb0:	.word	0x00000294
   11cb4:	.word	0x00000294
   11cb8:	.word	0x00000294
   11cbc:	.word	0x00000294
   11cc0:	.word	0x00000294
   11cc4:	.word	0x00000294
   11cc8:	.word	0x00000294
   11ccc:	.word	0x00000294
   11cd0:	.word	0x00000294
   11cd4:	.word	0x00000294
   11cd8:	.word	0x00000294
   11cdc:	.word	0x00000294
   11ce0:	.word	0x00000294
   11ce4:	.word	0x000000ec
   11ce8:	.word	0x00000294
   11cec:	.word	0x00000294
   11cf0:	.word	0x00000144
   11cf4:	.word	0x00000158
   11cf8:	.word	0x00000294
   11cfc:	.word	0x00000294
   11d00:	.word	0x00000294
   11d04:	.word	0x000000ec
   11d08:	.word	0x00000294
   11d0c:	.word	0x00000294
   11d10:	.word	0x00000294
   11d14:	.word	0x00000294
   11d18:	.word	0x00000294
   11d1c:	.word	0x00000294
   11d20:	.word	0x00000294
   11d24:	.word	0x00000294
   11d28:	.word	0x00000294
   11d2c:	.word	0x00000294
   11d30:	.word	0x00000294
   11d34:	.word	0x00000294
   11d38:	.word	0x00000294
   11d3c:	.word	0x00000294
   11d40:	.word	0x00000294
   11d44:	.word	0x00000294
   11d48:	.word	0x00000294
   11d4c:	.word	0x00000294
   11d50:	.word	0x00000294
   11d54:	.word	0x00000294
   11d58:	.word	0x00000294
   11d5c:	.word	0x00000294
   11d60:	.word	0x00000294
   11d64:	.word	0x00000294
   11d68:	.word	0x00000294
   11d6c:	.word	0x00000294
   11d70:	.word	0x00000294
   11d74:	.word	0x00000294
   11d78:	.word	0x00000294
   11d7c:	.word	0x00000294
   11d80:	.word	0x00000294
   11d84:	.word	0x00000294
   11d88:	.word	0x00000294
   11d8c:	.word	0x00000294
   11d90:	.word	0x00000294
   11d94:	.word	0x000000ec
   11d98:	uxtb	r1, r6
   11d9c:	mov	r0, r5
   11da0:	sub	sp, fp, #16
   11da4:	pop	{r4, r5, r6, sl, fp, lr}
   11da8:	b	c6ec <gen_wlanhostop>
   11dac:	cmp	r0, #1
   11db0:	beq	11dd0 <sf_gen_ecode+0x174>
   11db4:	cmp	r0, #6
   11db8:	bne	11ef0 <sf_gen_ecode+0x294>
   11dbc:	uxtb	r1, r6
   11dc0:	mov	r0, r5
   11dc4:	sub	sp, fp, #16
   11dc8:	pop	{r4, r5, r6, sl, fp, lr}
   11dcc:	b	c4b0 <gen_thostop>
   11dd0:	uxtb	r1, r6
   11dd4:	mov	r0, r5
   11dd8:	sub	sp, fp, #16
   11ddc:	pop	{r4, r5, r6, sl, fp, lr}
   11de0:	b	c000 <gen_ehostop>
   11de4:	cmp	r0, #192	; 0xc0
   11de8:	beq	11d98 <sf_gen_ecode+0x13c>
   11dec:	b	11f40 <sf_gen_ecode+0x2e4>
   11df0:	uxtb	r1, r6
   11df4:	mov	r0, r5
   11df8:	sub	sp, fp, #16
   11dfc:	pop	{r4, r5, r6, sl, fp, lr}
   11e00:	b	e86c <gen_ipfchostop>
   11e04:	ldrb	r0, [r1]
   11e08:	cmp	r0, #1
   11e0c:	bne	11f34 <sf_gen_ecode+0x2d8>
   11e10:	mov	r0, #1
   11e14:	mov	r1, #4
   11e18:	mov	r2, #8
   11e1c:	mov	r3, #65280	; 0xff00
   11e20:	bl	9ef4 <gen_cmp>
   11e24:	mov	r4, r0
   11e28:	ldr	r0, [r0, #44]	; 0x2c
   11e2c:	uxtb	r1, r6
   11e30:	clz	r0, r0
   11e34:	lsr	r0, r0, #5
   11e38:	str	r0, [r4, #44]	; 0x2c
   11e3c:	mov	r0, r5
   11e40:	bl	c000 <gen_ehostop>
   11e44:	cmp	r4, #0
   11e48:	beq	11e7c <sf_gen_ecode+0x220>
   11e4c:	ldr	r1, [r0, #96]	; 0x60
   11e50:	mov	r2, r4
   11e54:	ldr	r3, [r2, #44]	; 0x2c
   11e58:	add	r6, r2, #84	; 0x54
   11e5c:	cmp	r3, #0
   11e60:	mov	r3, #84	; 0x54
   11e64:	movweq	r3, #60	; 0x3c
   11e68:	addeq	r6, r2, #60	; 0x3c
   11e6c:	ldr	r2, [r2, r3]
   11e70:	str	r1, [r6]
   11e74:	cmp	r2, #0
   11e78:	bne	11e54 <sf_gen_ecode+0x1f8>
   11e7c:	ldr	r1, [r4, #44]	; 0x2c
   11e80:	cmp	r0, #0
   11e84:	clz	r1, r1
   11e88:	lsr	r1, r1, #5
   11e8c:	str	r1, [r4, #44]	; 0x2c
   11e90:	ldr	r2, [r0, #44]	; 0x2c
   11e94:	clz	r1, r2
   11e98:	lsr	r1, r1, #5
   11e9c:	str	r1, [r0, #44]	; 0x2c
   11ea0:	str	r0, [sp, #4]
   11ea4:	beq	11f0c <sf_gen_ecode+0x2b0>
   11ea8:	cmp	r2, #0
   11eac:	mov	r2, #60	; 0x3c
   11eb0:	add	r1, r0, #60	; 0x3c
   11eb4:	movweq	r2, #84	; 0x54
   11eb8:	addeq	r1, r0, #84	; 0x54
   11ebc:	ldr	r2, [r0, r2]
   11ec0:	cmp	r2, #0
   11ec4:	beq	11f10 <sf_gen_ecode+0x2b4>
   11ec8:	ldr	r3, [r2, #44]	; 0x2c
   11ecc:	add	r1, r2, #84	; 0x54
   11ed0:	cmp	r3, #0
   11ed4:	mov	r3, #84	; 0x54
   11ed8:	movweq	r3, #60	; 0x3c
   11edc:	addeq	r1, r2, #60	; 0x3c
   11ee0:	ldr	r2, [r2, r3]
   11ee4:	cmp	r2, #0
   11ee8:	bne	11ec8 <sf_gen_ecode+0x26c>
   11eec:	b	11f10 <sf_gen_ecode+0x2b4>
   11ef0:	cmp	r0, #10
   11ef4:	bne	11f40 <sf_gen_ecode+0x2e4>
   11ef8:	uxtb	r1, r6
   11efc:	mov	r0, r5
   11f00:	sub	sp, fp, #16
   11f04:	pop	{r4, r5, r6, sl, fp, lr}
   11f08:	b	c274 <gen_fhostop>
   11f0c:	add	r1, sp, #4
   11f10:	str	r4, [r1]
   11f14:	ldr	r1, [r0, #44]	; 0x2c
   11f18:	clz	r1, r1
   11f1c:	lsr	r1, r1, #5
   11f20:	str	r1, [r0, #44]	; 0x2c
   11f24:	ldr	r1, [r4, #96]	; 0x60
   11f28:	str	r1, [r0, #96]	; 0x60
   11f2c:	sub	sp, fp, #16
   11f30:	pop	{r4, r5, r6, sl, fp, pc}
   11f34:	ldr	r0, [pc, #24]	; 11f54 <sf_gen_ecode+0x2f8>
   11f38:	add	r0, pc, r0
   11f3c:	bl	2204 <sf_bpf_error>
   11f40:	ldr	r0, [pc, #8]	; 11f50 <sf_gen_ecode+0x2f4>
   11f44:	add	r0, pc, r0
   11f48:	bl	2204 <sf_bpf_error>
   11f4c:	.word	0x0003485c
   11f50:	.word	0x00016d4b
   11f54:	.word	0x00016db3

00011f58 <sf_append>:
   11f58:	mov	r2, r0
   11f5c:	ldr	r0, [r0, #16]
   11f60:	cmp	r0, #0
   11f64:	bne	11f58 <sf_append>
   11f68:	str	r1, [r2, #16]
   11f6c:	bx	lr

00011f70 <sf_gen_load>:
   11f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f74:	add	fp, sp, #28
   11f78:	sub	sp, sp, #20
   11f7c:	mov	r5, r2
   11f80:	mov	r8, r1
   11f84:	mov	r4, r0
   11f88:	bl	1309c <alloc_reg>
   11f8c:	mov	sl, r0
   11f90:	ldr	r0, [r8, #8]
   11f94:	ldr	r1, [pc, #4064]	; 12f7c <sf_gen_load+0x100c>
   11f98:	cmp	r5, #1
   11f9c:	mov	r2, #0
   11fa0:	add	r1, pc, r1
   11fa4:	str	r2, [r1, r0, lsl #2]
   11fa8:	beq	11fe4 <sf_gen_load+0x74>
   11fac:	cmp	r5, #2
   11fb0:	beq	11fd0 <sf_gen_load+0x60>
   11fb4:	cmp	r5, #4
   11fb8:	bne	13010 <sf_gen_load+0x10a0>
   11fbc:	mov	r6, #64	; 0x40
   11fc0:	sub	r0, r4, #1
   11fc4:	cmp	r0, #39	; 0x27
   11fc8:	bls	11ff4 <sf_gen_load+0x84>
   11fcc:	b	13004 <sf_gen_load+0x1094>
   11fd0:	mov	r6, #72	; 0x48
   11fd4:	sub	r0, r4, #1
   11fd8:	cmp	r0, #39	; 0x27
   11fdc:	bls	11ff4 <sf_gen_load+0x84>
   11fe0:	b	13004 <sf_gen_load+0x1094>
   11fe4:	mov	r6, #80	; 0x50
   11fe8:	sub	r0, r4, #1
   11fec:	cmp	r0, #39	; 0x27
   11ff0:	bhi	13004 <sf_gen_load+0x1094>
   11ff4:	add	r1, pc, #8
   11ff8:	str	r6, [sp, #12]
   11ffc:	ldr	r0, [r1, r0, lsl #2]
   12000:	add	pc, r1, r0
   12004:	.word	0x00000bdc
   12008:	.word	0x000000a0
   1200c:	.word	0x000000a0
   12010:	.word	0x000000a0
   12014:	.word	0x0000014c
   12018:	.word	0x0000014c
   1201c:	.word	0x0000014c
   12020:	.word	0x0000014c
   12024:	.word	0x0000014c
   12028:	.word	0x0000014c
   1202c:	.word	0x000000a0
   12030:	.word	0x000000a0
   12034:	.word	0x000000a0
   12038:	.word	0x000000a0
   1203c:	.word	0x000000a0
   12040:	.word	0x000000a0
   12044:	.word	0x000000a0
   12048:	.word	0x00001018
   1204c:	.word	0x00001000
   12050:	.word	0x00001000
   12054:	.word	0x0000014c
   12058:	.word	0x0000014c
   1205c:	.word	0x00001000
   12060:	.word	0x00001000
   12064:	.word	0x00001000
   12068:	.word	0x00001000
   1206c:	.word	0x00001000
   12070:	.word	0x00001000
   12074:	.word	0x00001000
   12078:	.word	0x00001000
   1207c:	.word	0x00001000
   12080:	.word	0x00001000
   12084:	.word	0x00001000
   12088:	.word	0x00001000
   1208c:	.word	0x00001000
   12090:	.word	0x00001000
   12094:	.word	0x00001000
   12098:	.word	0x00001000
   1209c:	.word	0x00001000
   120a0:	.word	0x00000b50
   120a4:	ldr	r3, [pc, #3992]	; 13044 <sf_gen_load+0x10d4>
   120a8:	str	r4, [sp, #8]
   120ac:	add	r3, pc, r3
   120b0:	ldrb	r0, [r3, #16]
   120b4:	cmp	r0, #0
   120b8:	beq	121dc <sf_gen_load+0x26c>
   120bc:	ldr	r6, [r3, #100]	; 0x64
   120c0:	str	r8, [sp]
   120c4:	cmn	r6, #1
   120c8:	bne	120e0 <sf_gen_load+0x170>
   120cc:	bl	1309c <alloc_reg>
   120d0:	ldr	r3, [pc, #3956]	; 1304c <sf_gen_load+0x10dc>
   120d4:	mov	r6, r0
   120d8:	add	r3, pc, r3
   120dc:	str	r0, [r3, #100]	; 0x64
   120e0:	ldr	r0, [r3, #92]	; 0x5c
   120e4:	ldr	r8, [pc, #3940]	; 13050 <sf_gen_load+0x10e0>
   120e8:	add	r8, pc, r8
   120ec:	mov	r4, r8
   120f0:	ldr	r5, [r4, r0, lsl #3]!
   120f4:	cmp	r5, #19
   120f8:	bhi	12588 <sf_gen_load+0x618>
   120fc:	add	r7, r0, #1
   12100:	cmp	r0, #15
   12104:	str	r7, [r3, #92]	; 0x5c
   12108:	bge	12f5c <sf_gen_load+0xfec>
   1210c:	mov	r0, #1024	; 0x400
   12110:	lsl	r5, r0, r7
   12114:	mov	r0, r5
   12118:	bl	f1c <malloc@plt>
   1211c:	cmp	r0, #0
   12120:	str	r0, [r4, #12]
   12124:	beq	12f5c <sf_gen_load+0xfec>
   12128:	mov	r1, #0
   1212c:	mov	r2, r5
   12130:	add	r4, r4, #8
   12134:	bl	f88 <memset@plt>
   12138:	str	r5, [r4]
   1213c:	cmp	r5, #19
   12140:	ldr	r3, [pc, #3852]	; 13054 <sf_gen_load+0x10e4>
   12144:	add	r3, pc, r3
   12148:	bhi	1258c <sf_gen_load+0x61c>
   1214c:	b	12f5c <sf_gen_load+0xfec>
   12150:	str	r4, [sp, #8]
   12154:	str	sl, [sp, #4]
   12158:	mov	r9, r8
   1215c:	bl	134b4 <gen_loadx_iphdrlen>
   12160:	ldr	r3, [pc, #3848]	; 13070 <sf_gen_load+0x1100>
   12164:	mov	r8, r0
   12168:	add	r3, pc, r3
   1216c:	ldr	r0, [r3, #92]	; 0x5c
   12170:	ldr	sl, [pc, #3836]	; 13074 <sf_gen_load+0x1104>
   12174:	add	sl, pc, sl
   12178:	mov	r4, sl
   1217c:	ldr	r5, [r4, r0, lsl #3]!
   12180:	cmp	r5, #19
   12184:	bhi	121e4 <sf_gen_load+0x274>
   12188:	add	r7, r0, #1
   1218c:	cmp	r0, #15
   12190:	str	r7, [r3, #92]	; 0x5c
   12194:	bge	12f5c <sf_gen_load+0xfec>
   12198:	mov	r0, #1024	; 0x400
   1219c:	lsl	r5, r0, r7
   121a0:	mov	r0, r5
   121a4:	bl	f1c <malloc@plt>
   121a8:	cmp	r0, #0
   121ac:	str	r0, [r4, #12]
   121b0:	beq	12f5c <sf_gen_load+0xfec>
   121b4:	mov	r1, #0
   121b8:	mov	r2, r5
   121bc:	add	r4, r4, #8
   121c0:	bl	f88 <memset@plt>
   121c4:	str	r5, [r4]
   121c8:	cmp	r5, #19
   121cc:	ldr	r3, [pc, #3748]	; 13078 <sf_gen_load+0x1108>
   121d0:	add	r3, pc, r3
   121d4:	bhi	121e8 <sf_gen_load+0x278>
   121d8:	b	12f5c <sf_gen_load+0xfec>
   121dc:	ldr	r7, [r3, #92]	; 0x5c
   121e0:	b	12614 <sf_gen_load+0x6a4>
   121e4:	mov	r7, r0
   121e8:	sub	r1, r5, #20
   121ec:	mov	r2, #96	; 0x60
   121f0:	str	r1, [r4]
   121f4:	ldr	r0, [r4, #4]
   121f8:	str	r2, [r0, r1]!
   121fc:	mov	r2, r8
   12200:	ldr	r1, [r9, #8]
   12204:	str	r1, [r0, #12]
   12208:	mov	r1, r2
   1220c:	ldr	r2, [r2, #16]
   12210:	cmp	r2, #0
   12214:	bne	12208 <sf_gen_load+0x298>
   12218:	str	r0, [r1, #16]
   1221c:	mov	r6, sl
   12220:	ldr	r5, [r6, r7, lsl #3]!
   12224:	cmp	r5, #19
   12228:	bhi	12280 <sf_gen_load+0x310>
   1222c:	add	r4, r7, #1
   12230:	cmp	r7, #15
   12234:	str	r4, [r3, #92]	; 0x5c
   12238:	bge	12f5c <sf_gen_load+0xfec>
   1223c:	mov	r0, #1024	; 0x400
   12240:	lsl	r5, r0, r4
   12244:	mov	r0, r5
   12248:	bl	f1c <malloc@plt>
   1224c:	cmp	r0, #0
   12250:	str	r0, [r6, #12]
   12254:	beq	12f5c <sf_gen_load+0xfec>
   12258:	mov	r1, #0
   1225c:	mov	r2, r5
   12260:	add	r6, r6, #8
   12264:	bl	f88 <memset@plt>
   12268:	str	r5, [r6]
   1226c:	cmp	r5, #19
   12270:	ldr	r3, [pc, #3588]	; 1307c <sf_gen_load+0x110c>
   12274:	add	r3, pc, r3
   12278:	bhi	12284 <sf_gen_load+0x314>
   1227c:	b	12f5c <sf_gen_load+0xfec>
   12280:	mov	r4, r7
   12284:	sub	r1, r5, #20
   12288:	mov	r2, #12
   1228c:	str	r1, [r6]
   12290:	ldr	r0, [r6, #4]
   12294:	str	r2, [r0, r1]!
   12298:	mov	r2, r8
   1229c:	mov	r1, r2
   122a0:	ldr	r2, [r2, #16]
   122a4:	cmp	r2, #0
   122a8:	bne	1229c <sf_gen_load+0x32c>
   122ac:	str	r0, [r1, #16]
   122b0:	mov	r6, sl
   122b4:	ldr	r5, [r6, r4, lsl #3]!
   122b8:	cmp	r5, #19
   122bc:	bhi	12314 <sf_gen_load+0x3a4>
   122c0:	add	r7, r4, #1
   122c4:	cmp	r4, #15
   122c8:	str	r7, [r3, #92]	; 0x5c
   122cc:	bge	12f5c <sf_gen_load+0xfec>
   122d0:	mov	r0, #1024	; 0x400
   122d4:	lsl	r5, r0, r7
   122d8:	mov	r0, r5
   122dc:	bl	f1c <malloc@plt>
   122e0:	cmp	r0, #0
   122e4:	str	r0, [r6, #12]
   122e8:	beq	12f5c <sf_gen_load+0xfec>
   122ec:	mov	r1, #0
   122f0:	mov	r2, r5
   122f4:	add	r6, r6, #8
   122f8:	bl	f88 <memset@plt>
   122fc:	str	r5, [r6]
   12300:	cmp	r5, #19
   12304:	ldr	r3, [pc, #3444]	; 13080 <sf_gen_load+0x1110>
   12308:	add	r3, pc, r3
   1230c:	bhi	12318 <sf_gen_load+0x3a8>
   12310:	b	12f5c <sf_gen_load+0xfec>
   12314:	mov	r7, r4
   12318:	sub	r1, r5, #20
   1231c:	mov	r2, #7
   12320:	str	r1, [r6]
   12324:	ldr	r0, [r6, #4]
   12328:	str	r2, [r0, r1]!
   1232c:	mov	r2, r8
   12330:	mov	r1, r2
   12334:	ldr	r2, [r2, #16]
   12338:	cmp	r2, #0
   1233c:	bne	12330 <sf_gen_load+0x3c0>
   12340:	str	r0, [r1, #16]
   12344:	ldr	r4, [sp, #12]
   12348:	ldr	r5, [sl, r7, lsl #3]!
   1234c:	cmp	r5, #19
   12350:	bhi	123a4 <sf_gen_load+0x434>
   12354:	add	r0, r7, #1
   12358:	cmp	r7, #15
   1235c:	str	r0, [r3, #92]	; 0x5c
   12360:	bge	12f5c <sf_gen_load+0xfec>
   12364:	mov	r1, #1024	; 0x400
   12368:	lsl	r5, r1, r0
   1236c:	mov	r0, r5
   12370:	bl	f1c <malloc@plt>
   12374:	cmp	r0, #0
   12378:	str	r0, [sl, #12]
   1237c:	beq	12f5c <sf_gen_load+0xfec>
   12380:	mov	r1, #0
   12384:	mov	r2, r5
   12388:	add	sl, sl, #8
   1238c:	bl	f88 <memset@plt>
   12390:	str	r5, [sl]
   12394:	cmp	r5, #19
   12398:	ldr	r3, [pc, #3300]	; 13084 <sf_gen_load+0x1114>
   1239c:	add	r3, pc, r3
   123a0:	bls	12f5c <sf_gen_load+0xfec>
   123a4:	sub	r1, r5, #20
   123a8:	mov	r2, r8
   123ac:	str	r1, [sl]
   123b0:	ldr	r0, [sl, #4]
   123b4:	str	r4, [r0, r1]!
   123b8:	mov	r1, r2
   123bc:	ldr	r2, [r2, #16]
   123c0:	cmp	r2, #0
   123c4:	bne	123b8 <sf_gen_load+0x448>
   123c8:	str	r0, [r1, #16]
   123cc:	ldr	sl, [sp, #4]
   123d0:	ldr	r1, [r3, #44]	; 0x2c
   123d4:	ldr	r2, [r3, #48]	; 0x30
   123d8:	add	r1, r2, r1
   123dc:	str	r1, [r0, #12]
   123e0:	ldr	r0, [sp, #8]
   123e4:	ldr	r2, [r9, #4]
   123e8:	mov	r1, r2
   123ec:	ldr	r2, [r2, #16]
   123f0:	cmp	r2, #0
   123f4:	bne	123e8 <sf_gen_load+0x478>
   123f8:	str	r8, [r1, #16]
   123fc:	bl	5270 <sf_gen_proto_abbrev>
   12400:	mov	r7, r0
   12404:	bl	9fb0 <gen_ipfrag>
   12408:	mov	r6, r0
   1240c:	cmp	r7, #0
   12410:	beq	12444 <sf_gen_load+0x4d4>
   12414:	ldr	r0, [r6, #96]	; 0x60
   12418:	mov	r1, r7
   1241c:	ldr	r2, [r1, #44]	; 0x2c
   12420:	add	r3, r1, #84	; 0x54
   12424:	cmp	r2, #0
   12428:	mov	r2, #84	; 0x54
   1242c:	movweq	r2, #60	; 0x3c
   12430:	addeq	r3, r1, #60	; 0x3c
   12434:	ldr	r1, [r1, r2]
   12438:	str	r0, [r3]
   1243c:	cmp	r1, #0
   12440:	bne	1241c <sf_gen_load+0x4ac>
   12444:	ldr	r0, [r7, #44]	; 0x2c
   12448:	cmp	r6, #0
   1244c:	mov	r8, r9
   12450:	clz	r0, r0
   12454:	lsr	r0, r0, #5
   12458:	str	r0, [r7, #44]	; 0x2c
   1245c:	ldr	r1, [r6, #44]	; 0x2c
   12460:	clz	r0, r1
   12464:	lsr	r0, r0, #5
   12468:	str	r0, [r6, #44]	; 0x2c
   1246c:	str	r6, [sp, #16]
   12470:	beq	124bc <sf_gen_load+0x54c>
   12474:	cmp	r1, #0
   12478:	mov	r1, #60	; 0x3c
   1247c:	add	r0, r6, #60	; 0x3c
   12480:	movweq	r1, #84	; 0x54
   12484:	addeq	r0, r6, #84	; 0x54
   12488:	ldr	r1, [r6, r1]
   1248c:	cmp	r1, #0
   12490:	beq	124c0 <sf_gen_load+0x550>
   12494:	ldr	r2, [r1, #44]	; 0x2c
   12498:	add	r0, r1, #84	; 0x54
   1249c:	cmp	r2, #0
   124a0:	mov	r2, #84	; 0x54
   124a4:	movweq	r2, #60	; 0x3c
   124a8:	addeq	r0, r1, #60	; 0x3c
   124ac:	ldr	r1, [r1, r2]
   124b0:	cmp	r1, #0
   124b4:	bne	12494 <sf_gen_load+0x524>
   124b8:	b	124c0 <sf_gen_load+0x550>
   124bc:	add	r0, sp, #16
   124c0:	str	r7, [r0]
   124c4:	ldr	r0, [r6, #44]	; 0x2c
   124c8:	clz	r0, r0
   124cc:	lsr	r0, r0, #5
   124d0:	str	r0, [r6, #44]	; 0x2c
   124d4:	ldr	r1, [r7, #96]	; 0x60
   124d8:	str	r1, [r6, #96]	; 0x60
   124dc:	ldr	r0, [r8]
   124e0:	cmp	r0, #0
   124e4:	beq	126c4 <sf_gen_load+0x754>
   124e8:	mov	r2, r0
   124ec:	ldr	r3, [r2, #44]	; 0x2c
   124f0:	add	r7, r2, #84	; 0x54
   124f4:	cmp	r3, #0
   124f8:	mov	r3, #84	; 0x54
   124fc:	movweq	r3, #60	; 0x3c
   12500:	addeq	r7, r2, #60	; 0x3c
   12504:	ldr	r2, [r2, r3]
   12508:	str	r1, [r7]
   1250c:	cmp	r2, #0
   12510:	bne	124ec <sf_gen_load+0x57c>
   12514:	ldr	r1, [r0, #44]	; 0x2c
   12518:	cmp	r6, #0
   1251c:	clz	r1, r1
   12520:	lsr	r1, r1, #5
   12524:	str	r1, [r0, #44]	; 0x2c
   12528:	ldr	r2, [r6, #44]	; 0x2c
   1252c:	clz	r1, r2
   12530:	lsr	r1, r1, #5
   12534:	str	r1, [r6, #44]	; 0x2c
   12538:	str	r6, [sp, #16]
   1253c:	beq	126a4 <sf_gen_load+0x734>
   12540:	cmp	r2, #0
   12544:	mov	r2, #60	; 0x3c
   12548:	add	r1, r6, #60	; 0x3c
   1254c:	movweq	r2, #84	; 0x54
   12550:	addeq	r1, r6, #84	; 0x54
   12554:	ldr	r2, [r6, r2]
   12558:	cmp	r2, #0
   1255c:	beq	126a8 <sf_gen_load+0x738>
   12560:	ldr	r3, [r2, #44]	; 0x2c
   12564:	add	r1, r2, #84	; 0x54
   12568:	cmp	r3, #0
   1256c:	mov	r3, #84	; 0x54
   12570:	movweq	r3, #60	; 0x3c
   12574:	addeq	r1, r2, #60	; 0x3c
   12578:	ldr	r2, [r2, r3]
   1257c:	cmp	r2, #0
   12580:	bne	12560 <sf_gen_load+0x5f0>
   12584:	b	126a8 <sf_gen_load+0x738>
   12588:	mov	r7, r0
   1258c:	sub	r0, r5, #20
   12590:	mov	r1, #97	; 0x61
   12594:	str	r0, [r4]
   12598:	ldr	r9, [r4, #4]
   1259c:	str	r1, [r9, r0]!
   125a0:	cmp	r9, #0
   125a4:	str	r6, [r9, #12]
   125a8:	beq	12610 <sf_gen_load+0x6a0>
   125ac:	mov	r4, r8
   125b0:	ldr	r5, [r4, r7, lsl #3]!
   125b4:	cmp	r5, #19
   125b8:	bhi	127a0 <sf_gen_load+0x830>
   125bc:	add	r6, r7, #1
   125c0:	cmp	r7, #15
   125c4:	str	r6, [r3, #92]	; 0x5c
   125c8:	bge	12f5c <sf_gen_load+0xfec>
   125cc:	mov	r0, #1024	; 0x400
   125d0:	lsl	r5, r0, r6
   125d4:	mov	r0, r5
   125d8:	bl	f1c <malloc@plt>
   125dc:	cmp	r0, #0
   125e0:	str	r0, [r4, #12]
   125e4:	beq	12f5c <sf_gen_load+0xfec>
   125e8:	mov	r1, #0
   125ec:	mov	r2, r5
   125f0:	add	r4, r4, #8
   125f4:	bl	f88 <memset@plt>
   125f8:	str	r5, [r4]
   125fc:	cmp	r5, #19
   12600:	ldr	r3, [pc, #2640]	; 13058 <sf_gen_load+0x10e8>
   12604:	add	r3, pc, r3
   12608:	bhi	127a4 <sf_gen_load+0x834>
   1260c:	b	12f5c <sf_gen_load+0xfec>
   12610:	ldr	r8, [sp]
   12614:	ldr	r4, [pc, #2604]	; 13048 <sf_gen_load+0x10d8>
   12618:	mov	r6, sl
   1261c:	add	r4, pc, r4
   12620:	ldr	r5, [r4, r7, lsl #3]!
   12624:	cmp	r5, #19
   12628:	bhi	12680 <sf_gen_load+0x710>
   1262c:	add	sl, r7, #1
   12630:	cmp	r7, #15
   12634:	str	sl, [r3, #92]	; 0x5c
   12638:	bge	12f5c <sf_gen_load+0xfec>
   1263c:	mov	r0, #1024	; 0x400
   12640:	lsl	r5, r0, sl
   12644:	mov	r0, r5
   12648:	bl	f1c <malloc@plt>
   1264c:	cmp	r0, #0
   12650:	str	r0, [r4, #12]
   12654:	beq	12f5c <sf_gen_load+0xfec>
   12658:	mov	r1, #0
   1265c:	mov	r2, r5
   12660:	add	r4, r4, #8
   12664:	bl	f88 <memset@plt>
   12668:	str	r5, [r4]
   1266c:	cmp	r5, #19
   12670:	ldr	r3, [pc, #2540]	; 13064 <sf_gen_load+0x10f4>
   12674:	add	r3, pc, r3
   12678:	bhi	12684 <sf_gen_load+0x714>
   1267c:	b	12f5c <sf_gen_load+0xfec>
   12680:	mov	sl, r7
   12684:	sub	r0, r5, #20
   12688:	mov	r1, #97	; 0x61
   1268c:	str	r0, [r4]
   12690:	ldr	r9, [r4, #4]
   12694:	str	r1, [r9, r0]!
   12698:	ldr	r0, [r8, #8]
   1269c:	str	r0, [r9, #12]
   126a0:	b	12908 <sf_gen_load+0x998>
   126a4:	add	r1, sp, #16
   126a8:	str	r0, [r1]
   126ac:	ldr	r1, [r6, #44]	; 0x2c
   126b0:	clz	r1, r1
   126b4:	lsr	r1, r1, #5
   126b8:	str	r1, [r6, #44]	; 0x2c
   126bc:	ldr	r0, [r0, #96]	; 0x60
   126c0:	str	r0, [r6, #96]	; 0x60
   126c4:	mov	r0, #2048	; 0x800
   126c8:	bl	6e1c <gen_linktype>
   126cc:	cmp	r0, #0
   126d0:	beq	12704 <sf_gen_load+0x794>
   126d4:	ldr	r1, [r6, #96]	; 0x60
   126d8:	mov	r2, r0
   126dc:	ldr	r3, [r2, #44]	; 0x2c
   126e0:	add	r7, r2, #84	; 0x54
   126e4:	cmp	r3, #0
   126e8:	mov	r3, #84	; 0x54
   126ec:	movweq	r3, #60	; 0x3c
   126f0:	addeq	r7, r2, #60	; 0x3c
   126f4:	ldr	r2, [r2, r3]
   126f8:	str	r1, [r7]
   126fc:	cmp	r2, #0
   12700:	bne	126dc <sf_gen_load+0x76c>
   12704:	ldr	r1, [r0, #44]	; 0x2c
   12708:	cmp	r6, #0
   1270c:	clz	r1, r1
   12710:	lsr	r1, r1, #5
   12714:	str	r1, [r0, #44]	; 0x2c
   12718:	ldr	r2, [r6, #44]	; 0x2c
   1271c:	clz	r1, r2
   12720:	lsr	r1, r1, #5
   12724:	str	r1, [r6, #44]	; 0x2c
   12728:	str	r6, [sp, #16]
   1272c:	beq	12778 <sf_gen_load+0x808>
   12730:	cmp	r2, #0
   12734:	mov	r2, #60	; 0x3c
   12738:	add	r1, r6, #60	; 0x3c
   1273c:	movweq	r2, #84	; 0x54
   12740:	addeq	r1, r6, #84	; 0x54
   12744:	ldr	r2, [r6, r2]
   12748:	cmp	r2, #0
   1274c:	beq	1277c <sf_gen_load+0x80c>
   12750:	ldr	r3, [r2, #44]	; 0x2c
   12754:	add	r1, r2, #84	; 0x54
   12758:	cmp	r3, #0
   1275c:	mov	r3, #84	; 0x54
   12760:	movweq	r3, #60	; 0x3c
   12764:	addeq	r1, r2, #60	; 0x3c
   12768:	ldr	r2, [r2, r3]
   1276c:	cmp	r2, #0
   12770:	bne	12750 <sf_gen_load+0x7e0>
   12774:	b	1277c <sf_gen_load+0x80c>
   12778:	add	r1, sp, #16
   1277c:	str	r0, [r1]
   12780:	ldr	r1, [r6, #44]	; 0x2c
   12784:	clz	r1, r1
   12788:	lsr	r1, r1, #5
   1278c:	str	r1, [r6, #44]	; 0x2c
   12790:	ldr	r0, [r0, #96]	; 0x60
   12794:	str	r0, [r6, #96]	; 0x60
   12798:	str	r6, [r8]
   1279c:	b	12aac <sf_gen_load+0xb3c>
   127a0:	mov	r6, r7
   127a4:	sub	r1, r5, #20
   127a8:	mov	r2, #96	; 0x60
   127ac:	str	r1, [r4]
   127b0:	ldr	r0, [r4, #4]
   127b4:	str	r2, [r0, r1]!
   127b8:	mov	r2, r9
   127bc:	ldr	r1, [sp]
   127c0:	ldr	r1, [r1, #8]
   127c4:	str	r1, [r0, #12]
   127c8:	mov	r1, r2
   127cc:	ldr	r2, [r2, #16]
   127d0:	cmp	r2, #0
   127d4:	bne	127c8 <sf_gen_load+0x858>
   127d8:	str	r0, [r1, #16]
   127dc:	mov	r7, r8
   127e0:	ldr	r5, [r7, r6, lsl #3]!
   127e4:	cmp	r5, #19
   127e8:	bhi	12840 <sf_gen_load+0x8d0>
   127ec:	add	r4, r6, #1
   127f0:	cmp	r6, #15
   127f4:	str	r4, [r3, #92]	; 0x5c
   127f8:	bge	12f5c <sf_gen_load+0xfec>
   127fc:	mov	r0, #1024	; 0x400
   12800:	lsl	r5, r0, r4
   12804:	mov	r0, r5
   12808:	bl	f1c <malloc@plt>
   1280c:	cmp	r0, #0
   12810:	str	r0, [r7, #12]
   12814:	beq	12f5c <sf_gen_load+0xfec>
   12818:	mov	r1, #0
   1281c:	mov	r2, r5
   12820:	add	r7, r7, #8
   12824:	bl	f88 <memset@plt>
   12828:	str	r5, [r7]
   1282c:	cmp	r5, #19
   12830:	ldr	r3, [pc, #2084]	; 1305c <sf_gen_load+0x10ec>
   12834:	add	r3, pc, r3
   12838:	bhi	12844 <sf_gen_load+0x8d4>
   1283c:	b	12f5c <sf_gen_load+0xfec>
   12840:	mov	r4, r6
   12844:	sub	r1, r5, #20
   12848:	mov	r2, #12
   1284c:	str	r1, [r7]
   12850:	ldr	r0, [r7, #4]
   12854:	str	r2, [r0, r1]!
   12858:	mov	r2, r9
   1285c:	mov	r1, r2
   12860:	ldr	r2, [r2, #16]
   12864:	cmp	r2, #0
   12868:	bne	1285c <sf_gen_load+0x8ec>
   1286c:	str	r0, [r1, #16]
   12870:	mov	r6, sl
   12874:	ldr	r5, [r8, r4, lsl #3]!
   12878:	cmp	r5, #19
   1287c:	bhi	128d4 <sf_gen_load+0x964>
   12880:	add	sl, r4, #1
   12884:	cmp	r4, #15
   12888:	str	sl, [r3, #92]	; 0x5c
   1288c:	bge	12f5c <sf_gen_load+0xfec>
   12890:	mov	r0, #1024	; 0x400
   12894:	lsl	r5, r0, sl
   12898:	mov	r0, r5
   1289c:	bl	f1c <malloc@plt>
   128a0:	cmp	r0, #0
   128a4:	str	r0, [r8, #12]
   128a8:	beq	12f5c <sf_gen_load+0xfec>
   128ac:	mov	r1, #0
   128b0:	mov	r2, r5
   128b4:	add	r8, r8, #8
   128b8:	bl	f88 <memset@plt>
   128bc:	str	r5, [r8]
   128c0:	cmp	r5, #19
   128c4:	ldr	r3, [pc, #1940]	; 13060 <sf_gen_load+0x10f0>
   128c8:	add	r3, pc, r3
   128cc:	bhi	128d8 <sf_gen_load+0x968>
   128d0:	b	12f5c <sf_gen_load+0xfec>
   128d4:	mov	sl, r4
   128d8:	sub	r1, r5, #20
   128dc:	mov	r2, #7
   128e0:	str	r1, [r8]
   128e4:	ldr	r0, [r8, #4]
   128e8:	str	r2, [r0, r1]!
   128ec:	mov	r2, r9
   128f0:	mov	r1, r2
   128f4:	ldr	r2, [r2, #16]
   128f8:	cmp	r2, #0
   128fc:	bne	128f0 <sf_gen_load+0x980>
   12900:	ldr	r8, [sp]
   12904:	str	r0, [r1, #16]
   12908:	ldr	r4, [pc, #1880]	; 13068 <sf_gen_load+0x10f8>
   1290c:	add	r4, pc, r4
   12910:	ldr	r5, [r4, sl, lsl #3]!
   12914:	cmp	r5, #19
   12918:	bhi	12978 <sf_gen_load+0xa08>
   1291c:	add	r0, sl, #1
   12920:	cmp	sl, #15
   12924:	str	r0, [r3, #92]	; 0x5c
   12928:	bge	12f5c <sf_gen_load+0xfec>
   1292c:	mov	r1, #1024	; 0x400
   12930:	lsl	r5, r1, r0
   12934:	mov	r0, r5
   12938:	bl	f1c <malloc@plt>
   1293c:	cmp	r0, #0
   12940:	str	r0, [r4, #12]
   12944:	beq	12f5c <sf_gen_load+0xfec>
   12948:	mov	r1, #0
   1294c:	mov	r2, r5
   12950:	mov	sl, r6
   12954:	add	r4, r4, #8
   12958:	bl	f88 <memset@plt>
   1295c:	str	r5, [r4]
   12960:	ldr	r2, [sp, #12]
   12964:	cmp	r5, #19
   12968:	ldr	r3, [pc, #1788]	; 1306c <sf_gen_load+0x10fc>
   1296c:	add	r3, pc, r3
   12970:	bhi	12980 <sf_gen_load+0xa10>
   12974:	b	12f5c <sf_gen_load+0xfec>
   12978:	ldr	r2, [sp, #12]
   1297c:	mov	sl, r6
   12980:	sub	r1, r5, #20
   12984:	str	r1, [r4]
   12988:	ldr	r0, [r4, #4]
   1298c:	str	r2, [r0, r1]!
   12990:	ldr	r1, [r3, #44]	; 0x2c
   12994:	ldr	r2, [r3, #48]	; 0x30
   12998:	add	r1, r2, r1
   1299c:	mov	r2, r9
   129a0:	str	r1, [r0, #12]
   129a4:	mov	r1, r2
   129a8:	ldr	r2, [r2, #16]
   129ac:	cmp	r2, #0
   129b0:	bne	129a4 <sf_gen_load+0xa34>
   129b4:	str	r0, [r1, #16]
   129b8:	ldr	r0, [sp, #8]
   129bc:	ldr	r2, [r8, #4]
   129c0:	mov	r1, r2
   129c4:	ldr	r2, [r2, #16]
   129c8:	cmp	r2, #0
   129cc:	bne	129c0 <sf_gen_load+0xa50>
   129d0:	str	r9, [r1, #16]
   129d4:	bl	5270 <sf_gen_proto_abbrev>
   129d8:	ldr	r1, [r8]
   129dc:	cmp	r1, #0
   129e0:	beq	12aa8 <sf_gen_load+0xb38>
   129e4:	ldr	r2, [r0, #96]	; 0x60
   129e8:	mov	r3, r1
   129ec:	ldr	r7, [r3, #44]	; 0x2c
   129f0:	add	r6, r3, #84	; 0x54
   129f4:	cmp	r7, #0
   129f8:	mov	r7, #84	; 0x54
   129fc:	movweq	r7, #60	; 0x3c
   12a00:	addeq	r6, r3, #60	; 0x3c
   12a04:	ldr	r3, [r3, r7]
   12a08:	str	r2, [r6]
   12a0c:	cmp	r3, #0
   12a10:	bne	129ec <sf_gen_load+0xa7c>
   12a14:	ldr	r2, [r1, #44]	; 0x2c
   12a18:	cmp	r0, #0
   12a1c:	clz	r2, r2
   12a20:	lsr	r2, r2, #5
   12a24:	str	r2, [r1, #44]	; 0x2c
   12a28:	ldr	r3, [r0, #44]	; 0x2c
   12a2c:	clz	r2, r3
   12a30:	lsr	r2, r2, #5
   12a34:	str	r2, [r0, #44]	; 0x2c
   12a38:	str	r0, [sp, #16]
   12a3c:	beq	12a88 <sf_gen_load+0xb18>
   12a40:	cmp	r3, #0
   12a44:	mov	r3, #60	; 0x3c
   12a48:	add	r2, r0, #60	; 0x3c
   12a4c:	movweq	r3, #84	; 0x54
   12a50:	addeq	r2, r0, #84	; 0x54
   12a54:	ldr	r3, [r0, r3]
   12a58:	cmp	r3, #0
   12a5c:	beq	12a8c <sf_gen_load+0xb1c>
   12a60:	ldr	r7, [r3, #44]	; 0x2c
   12a64:	add	r2, r3, #84	; 0x54
   12a68:	cmp	r7, #0
   12a6c:	mov	r7, #84	; 0x54
   12a70:	movweq	r7, #60	; 0x3c
   12a74:	addeq	r2, r3, #60	; 0x3c
   12a78:	ldr	r3, [r3, r7]
   12a7c:	cmp	r3, #0
   12a80:	bne	12a60 <sf_gen_load+0xaf0>
   12a84:	b	12a8c <sf_gen_load+0xb1c>
   12a88:	add	r2, sp, #16
   12a8c:	str	r1, [r2]
   12a90:	ldr	r2, [r0, #44]	; 0x2c
   12a94:	clz	r2, r2
   12a98:	lsr	r2, r2, #5
   12a9c:	str	r2, [r0, #44]	; 0x2c
   12aa0:	ldr	r1, [r1, #96]	; 0x60
   12aa4:	str	r1, [r0, #96]	; 0x60
   12aa8:	str	r0, [r8]
   12aac:	str	sl, [r8, #8]
   12ab0:	ldr	r1, [pc, #1488]	; 13088 <sf_gen_load+0x1118>
   12ab4:	add	r1, pc, r1
   12ab8:	ldr	r0, [r1, #92]	; 0x5c
   12abc:	ldr	r4, [pc, #1480]	; 1308c <sf_gen_load+0x111c>
   12ac0:	add	r4, pc, r4
   12ac4:	ldr	r5, [r4, r0, lsl #3]!
   12ac8:	cmp	r5, #19
   12acc:	bhi	12b18 <sf_gen_load+0xba8>
   12ad0:	add	r2, r0, #1
   12ad4:	cmp	r0, #15
   12ad8:	str	r2, [r1, #92]	; 0x5c
   12adc:	bge	12f5c <sf_gen_load+0xfec>
   12ae0:	mov	r0, #1024	; 0x400
   12ae4:	lsl	r5, r0, r2
   12ae8:	mov	r0, r5
   12aec:	bl	f1c <malloc@plt>
   12af0:	cmp	r0, #0
   12af4:	str	r0, [r4, #12]
   12af8:	beq	12f5c <sf_gen_load+0xfec>
   12afc:	mov	r1, #0
   12b00:	mov	r2, r5
   12b04:	add	r4, r4, #8
   12b08:	bl	f88 <memset@plt>
   12b0c:	cmp	r5, #19
   12b10:	str	r5, [r4]
   12b14:	bls	12f5c <sf_gen_load+0xfec>
   12b18:	sub	r1, r5, #20
   12b1c:	mov	r2, #2
   12b20:	str	r1, [r4]
   12b24:	ldr	r0, [r4, #4]
   12b28:	str	r2, [r0, r1]!
   12b2c:	str	sl, [r0, #12]
   12b30:	ldr	r1, [r8, #4]
   12b34:	mov	r2, r1
   12b38:	ldr	r1, [r1, #16]
   12b3c:	cmp	r1, #0
   12b40:	bne	12b34 <sf_gen_load+0xbc4>
   12b44:	str	r0, [r2, #16]
   12b48:	mov	r0, r8
   12b4c:	sub	sp, fp, #28
   12b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b54:	str	sl, [sp, #4]
   12b58:	mov	sl, r8
   12b5c:	ldr	r8, [pc, #1228]	; 13030 <sf_gen_load+0x10c0>
   12b60:	add	r8, pc, r8
   12b64:	ldr	r0, [r8, #36]	; 0x24
   12b68:	cmp	r0, #119	; 0x77
   12b6c:	cmpne	r0, #127	; 0x7f
   12b70:	bne	12f68 <sf_gen_load+0xff8>
   12b74:	ldr	r0, [r8, #92]	; 0x5c
   12b78:	ldr	r9, [pc, #1204]	; 13034 <sf_gen_load+0x10c4>
   12b7c:	add	r9, pc, r9
   12b80:	mov	r7, r9
   12b84:	ldr	r6, [r7, r0, lsl #3]!
   12b88:	cmp	r6, #19
   12b8c:	bhi	12c70 <sf_gen_load+0xd00>
   12b90:	add	r4, r0, #1
   12b94:	cmp	r0, #15
   12b98:	str	r4, [r8, #92]	; 0x5c
   12b9c:	bge	12f5c <sf_gen_load+0xfec>
   12ba0:	mov	r0, #1024	; 0x400
   12ba4:	lsl	r6, r0, r4
   12ba8:	mov	r0, r6
   12bac:	bl	f1c <malloc@plt>
   12bb0:	cmp	r0, #0
   12bb4:	str	r0, [r7, #12]
   12bb8:	beq	12f5c <sf_gen_load+0xfec>
   12bbc:	mov	r1, #0
   12bc0:	mov	r2, r6
   12bc4:	add	r5, r7, #8
   12bc8:	bl	f88 <memset@plt>
   12bcc:	cmp	r6, #20
   12bd0:	str	r6, [r5]
   12bd4:	bcc	12f5c <sf_gen_load+0xfec>
   12bd8:	add	r7, r9, r4, lsl #3
   12bdc:	b	12c78 <sf_gen_load+0xd08>
   12be0:	str	sl, [sp, #4]
   12be4:	bl	133bc <gen_llprefixlen>
   12be8:	ldr	r3, [pc, #1096]	; 13038 <sf_gen_load+0x10c8>
   12bec:	mov	sl, r0
   12bf0:	cmp	sl, #0
   12bf4:	add	r3, pc, r3
   12bf8:	ldr	r0, [r3, #92]	; 0x5c
   12bfc:	ldr	r9, [pc, #1080]	; 1303c <sf_gen_load+0x10cc>
   12c00:	str	r8, [sp]
   12c04:	add	r9, pc, r9
   12c08:	mov	r5, r9
   12c0c:	ldr	r7, [r5, r0, lsl #3]!
   12c10:	beq	12d44 <sf_gen_load+0xdd4>
   12c14:	cmp	r7, #19
   12c18:	bhi	12da0 <sf_gen_load+0xe30>
   12c1c:	add	r6, r0, #1
   12c20:	cmp	r0, #15
   12c24:	str	r6, [r3, #92]	; 0x5c
   12c28:	bge	12f5c <sf_gen_load+0xfec>
   12c2c:	mov	r0, #1024	; 0x400
   12c30:	mov	r4, r3
   12c34:	lsl	r7, r0, r6
   12c38:	mov	r0, r7
   12c3c:	bl	f1c <malloc@plt>
   12c40:	cmp	r0, #0
   12c44:	str	r0, [r5, #12]
   12c48:	beq	12f5c <sf_gen_load+0xfec>
   12c4c:	mov	r1, #0
   12c50:	mov	r2, r7
   12c54:	add	r5, r5, #8
   12c58:	bl	f88 <memset@plt>
   12c5c:	cmp	r7, #19
   12c60:	mov	r3, r4
   12c64:	str	r7, [r5]
   12c68:	bhi	12da4 <sf_gen_load+0xe34>
   12c6c:	b	12f5c <sf_gen_load+0xfec>
   12c70:	mov	r4, r0
   12c74:	mov	r5, r7
   12c78:	sub	r0, r6, #20
   12c7c:	mov	r1, #97	; 0x61
   12c80:	str	r0, [r5]
   12c84:	ldr	r6, [r5, #4]
   12c88:	str	r1, [r6, r0]!
   12c8c:	ldr	r0, [sl, #8]
   12c90:	str	r0, [r6, #12]
   12c94:	ldr	r5, [r9, r4, lsl #3]
   12c98:	cmp	r5, #19
   12c9c:	bhi	12cf4 <sf_gen_load+0xd84>
   12ca0:	add	r0, r4, #1
   12ca4:	cmp	r4, #15
   12ca8:	str	r0, [r8, #92]	; 0x5c
   12cac:	bge	12f5c <sf_gen_load+0xfec>
   12cb0:	mov	r1, #1024	; 0x400
   12cb4:	lsl	r5, r1, r0
   12cb8:	mov	r0, r5
   12cbc:	bl	f1c <malloc@plt>
   12cc0:	cmp	r0, #0
   12cc4:	str	r0, [r7, #12]
   12cc8:	beq	12f5c <sf_gen_load+0xfec>
   12ccc:	mov	r1, #0
   12cd0:	mov	r2, r5
   12cd4:	mov	r8, sl
   12cd8:	add	r7, r7, #8
   12cdc:	bl	f88 <memset@plt>
   12ce0:	ldr	sl, [sp, #4]
   12ce4:	cmp	r5, #19
   12ce8:	str	r5, [r7]
   12cec:	bhi	12cfc <sf_gen_load+0xd8c>
   12cf0:	b	12f5c <sf_gen_load+0xfec>
   12cf4:	mov	r8, sl
   12cf8:	ldr	sl, [sp, #4]
   12cfc:	sub	r1, r5, #20
   12d00:	ldr	r2, [sp, #12]
   12d04:	str	r1, [r7]
   12d08:	ldr	r0, [r7, #4]
   12d0c:	str	r2, [r0, r1]!
   12d10:	mov	r2, r6
   12d14:	mov	r1, r2
   12d18:	ldr	r2, [r2, #16]
   12d1c:	cmp	r2, #0
   12d20:	bne	12d14 <sf_gen_load+0xda4>
   12d24:	str	r0, [r1, #16]
   12d28:	ldr	r0, [r8, #4]
   12d2c:	mov	r1, r0
   12d30:	ldr	r0, [r0, #16]
   12d34:	cmp	r0, #0
   12d38:	bne	12d2c <sf_gen_load+0xdbc>
   12d3c:	str	r6, [r1, #16]
   12d40:	b	12aac <sf_gen_load+0xb3c>
   12d44:	cmp	r7, #19
   12d48:	bhi	12f80 <sf_gen_load+0x1010>
   12d4c:	add	r8, r0, #1
   12d50:	cmp	r0, #15
   12d54:	str	r8, [r3, #92]	; 0x5c
   12d58:	bge	12f5c <sf_gen_load+0xfec>
   12d5c:	mov	r0, #1024	; 0x400
   12d60:	mov	r4, r3
   12d64:	lsl	r7, r0, r8
   12d68:	mov	r0, r7
   12d6c:	bl	f1c <malloc@plt>
   12d70:	cmp	r0, #0
   12d74:	str	r0, [r5, #12]
   12d78:	beq	12f5c <sf_gen_load+0xfec>
   12d7c:	mov	r1, #0
   12d80:	mov	r2, r7
   12d84:	add	r5, r5, #8
   12d88:	bl	f88 <memset@plt>
   12d8c:	cmp	r7, #19
   12d90:	mov	r3, r4
   12d94:	str	r7, [r5]
   12d98:	bhi	12f84 <sf_gen_load+0x1014>
   12d9c:	b	12f5c <sf_gen_load+0xfec>
   12da0:	mov	r6, r0
   12da4:	sub	r1, r7, #20
   12da8:	mov	r2, #96	; 0x60
   12dac:	str	r1, [r5]
   12db0:	ldr	r0, [r5, #4]
   12db4:	str	r2, [r0, r1]!
   12db8:	mov	r2, sl
   12dbc:	ldr	r1, [r8, #8]
   12dc0:	str	r1, [r0, #12]
   12dc4:	mov	r1, r2
   12dc8:	ldr	r2, [r2, #16]
   12dcc:	cmp	r2, #0
   12dd0:	bne	12dc4 <sf_gen_load+0xe54>
   12dd4:	str	r0, [r1, #16]
   12dd8:	mov	r7, r9
   12ddc:	ldr	r5, [r7, r6, lsl #3]!
   12de0:	cmp	r5, #19
   12de4:	bhi	12e3c <sf_gen_load+0xecc>
   12de8:	add	r4, r6, #1
   12dec:	cmp	r6, #15
   12df0:	str	r4, [r3, #92]	; 0x5c
   12df4:	bge	12f5c <sf_gen_load+0xfec>
   12df8:	mov	r0, #1024	; 0x400
   12dfc:	lsl	r5, r0, r4
   12e00:	mov	r0, r5
   12e04:	bl	f1c <malloc@plt>
   12e08:	cmp	r0, #0
   12e0c:	str	r0, [r7, #12]
   12e10:	beq	12f5c <sf_gen_load+0xfec>
   12e14:	mov	r1, #0
   12e18:	mov	r2, r5
   12e1c:	add	r7, r7, #8
   12e20:	bl	f88 <memset@plt>
   12e24:	str	r5, [r7]
   12e28:	cmp	r5, #19
   12e2c:	ldr	r3, [pc, #524]	; 13040 <sf_gen_load+0x10d0>
   12e30:	add	r3, pc, r3
   12e34:	bhi	12e40 <sf_gen_load+0xed0>
   12e38:	b	12f5c <sf_gen_load+0xfec>
   12e3c:	mov	r4, r6
   12e40:	sub	r1, r5, #20
   12e44:	mov	r2, #12
   12e48:	str	r1, [r7]
   12e4c:	ldr	r0, [r7, #4]
   12e50:	str	r2, [r0, r1]!
   12e54:	mov	r2, sl
   12e58:	mov	r1, r2
   12e5c:	ldr	r2, [r2, #16]
   12e60:	cmp	r2, #0
   12e64:	bne	12e58 <sf_gen_load+0xee8>
   12e68:	str	r0, [r1, #16]
   12e6c:	mov	r6, r9
   12e70:	ldr	r5, [r6, r4, lsl #3]!
   12e74:	cmp	r5, #19
   12e78:	bhi	12ed0 <sf_gen_load+0xf60>
   12e7c:	add	r8, r4, #1
   12e80:	cmp	r4, #15
   12e84:	str	r8, [r3, #92]	; 0x5c
   12e88:	bge	12f5c <sf_gen_load+0xfec>
   12e8c:	mov	r0, #1024	; 0x400
   12e90:	mov	r7, r3
   12e94:	lsl	r5, r0, r8
   12e98:	mov	r0, r5
   12e9c:	bl	f1c <malloc@plt>
   12ea0:	cmp	r0, #0
   12ea4:	str	r0, [r6, #12]
   12ea8:	beq	12f5c <sf_gen_load+0xfec>
   12eac:	mov	r1, #0
   12eb0:	mov	r2, r5
   12eb4:	add	r6, r6, #8
   12eb8:	bl	f88 <memset@plt>
   12ebc:	cmp	r5, #19
   12ec0:	mov	r3, r7
   12ec4:	str	r5, [r6]
   12ec8:	bhi	12ed4 <sf_gen_load+0xf64>
   12ecc:	b	12f5c <sf_gen_load+0xfec>
   12ed0:	mov	r8, r4
   12ed4:	sub	r1, r5, #20
   12ed8:	mov	r2, #7
   12edc:	str	r1, [r6]
   12ee0:	ldr	r0, [r6, #4]
   12ee4:	str	r2, [r0, r1]!
   12ee8:	mov	r2, sl
   12eec:	mov	r1, r2
   12ef0:	ldr	r2, [r2, #16]
   12ef4:	cmp	r2, #0
   12ef8:	bne	12eec <sf_gen_load+0xf7c>
   12efc:	ldr	r6, [sp, #12]
   12f00:	str	r0, [r1, #16]
   12f04:	ldr	r5, [r9, r8, lsl #3]!
   12f08:	cmp	r5, #19
   12f0c:	bhi	12fb0 <sf_gen_load+0x1040>
   12f10:	add	r0, r8, #1
   12f14:	cmp	r8, #15
   12f18:	str	r0, [r3, #92]	; 0x5c
   12f1c:	bge	12f5c <sf_gen_load+0xfec>
   12f20:	mov	r1, #1024	; 0x400
   12f24:	lsl	r5, r1, r0
   12f28:	mov	r0, r5
   12f2c:	bl	f1c <malloc@plt>
   12f30:	ldr	r8, [sp]
   12f34:	cmp	r0, #0
   12f38:	str	r0, [r9, #12]
   12f3c:	beq	12f5c <sf_gen_load+0xfec>
   12f40:	mov	r1, #0
   12f44:	mov	r2, r5
   12f48:	add	r9, r9, #8
   12f4c:	bl	f88 <memset@plt>
   12f50:	cmp	r5, #19
   12f54:	str	r5, [r9]
   12f58:	bhi	12fb4 <sf_gen_load+0x1044>
   12f5c:	ldr	r0, [pc, #304]	; 13094 <sf_gen_load+0x1124>
   12f60:	add	r0, pc, r0
   12f64:	bl	2204 <sf_bpf_error>
   12f68:	cmp	r0, #163	; 0xa3
   12f6c:	beq	12b74 <sf_gen_load+0xc04>
   12f70:	ldr	r0, [pc, #280]	; 13090 <sf_gen_load+0x1120>
   12f74:	add	r0, pc, r0
   12f78:	bl	2204 <sf_bpf_error>
   12f7c:	.word	0x00034500
   12f80:	mov	r8, r0
   12f84:	sub	r0, r7, #20
   12f88:	mov	r1, #97	; 0x61
   12f8c:	str	r0, [r5]
   12f90:	ldr	sl, [r5, #4]
   12f94:	str	r1, [sl, r0]!
   12f98:	ldr	r0, [sp]
   12f9c:	ldr	r0, [r0, #8]
   12fa0:	str	r0, [sl, #12]
   12fa4:	ldr	r5, [r9, r8, lsl #3]!
   12fa8:	cmp	r5, #19
   12fac:	bls	12f10 <sf_gen_load+0xfa0>
   12fb0:	ldr	r8, [sp]
   12fb4:	sub	r1, r5, #20
   12fb8:	mov	r2, sl
   12fbc:	str	r1, [r9]
   12fc0:	ldr	r0, [r9, #4]
   12fc4:	str	r6, [r0, r1]!
   12fc8:	mov	r1, #0
   12fcc:	str	r1, [r0, #12]
   12fd0:	mov	r1, r2
   12fd4:	ldr	r2, [r2, #16]
   12fd8:	cmp	r2, #0
   12fdc:	bne	12fd0 <sf_gen_load+0x1060>
   12fe0:	str	r0, [r1, #16]
   12fe4:	ldr	r0, [r8, #4]
   12fe8:	mov	r1, r0
   12fec:	ldr	r0, [r0, #16]
   12ff0:	cmp	r0, #0
   12ff4:	bne	12fe8 <sf_gen_load+0x1078>
   12ff8:	str	sl, [r1, #16]
   12ffc:	ldr	sl, [sp, #4]
   13000:	b	12aac <sf_gen_load+0xb3c>
   13004:	ldr	r0, [pc, #32]	; 1302c <sf_gen_load+0x10bc>
   13008:	add	r0, pc, r0
   1300c:	bl	2204 <sf_bpf_error>
   13010:	ldr	r0, [pc, #16]	; 13028 <sf_gen_load+0x10b8>
   13014:	add	r0, pc, r0
   13018:	bl	2204 <sf_bpf_error>
   1301c:	ldr	r0, [pc, #116]	; 13098 <sf_gen_load+0x1128>
   13020:	add	r0, pc, r0
   13024:	bl	2204 <sf_bpf_error>
   13028:	.word	0x00015d05
   1302c:	.word	0x00015d2e
   13030:	.word	0x00033980
   13034:	.word	0x000338a4
   13038:	.word	0x000338ec
   1303c:	.word	0x0003381c
   13040:	.word	0x000336b0
   13044:	.word	0x00034434
   13048:	.word	0x00033e04
   1304c:	.word	0x00034408
   13050:	.word	0x00034338
   13054:	.word	0x0003439c
   13058:	.word	0x00033edc
   1305c:	.word	0x00033cac
   13060:	.word	0x00033c18
   13064:	.word	0x00033e6c
   13068:	.word	0x00033b14
   1306c:	.word	0x00033b74
   13070:	.word	0x00034378
   13074:	.word	0x000342ac
   13078:	.word	0x00034310
   1307c:	.word	0x0003426c
   13080:	.word	0x000341d8
   13084:	.word	0x00034144
   13088:	.word	0x00033a2c
   1308c:	.word	0x00033960
   13090:	.word	0x00015dde
   13094:	.word	0x00016434
   13098:	.word	0x00015d5b

0001309c <alloc_reg>:
   1309c:	ldr	r2, [pc, #620]	; 13310 <alloc_reg+0x274>
   130a0:	add	r2, pc, r2
   130a4:	ldr	r0, [r2, #104]	; 0x68
   130a8:	ldr	r1, [pc, #612]	; 13314 <alloc_reg+0x278>
   130ac:	add	r1, pc, r1
   130b0:	ldr	r3, [r1, r0, lsl #2]
   130b4:	cmp	r3, #0
   130b8:	beq	132d8 <alloc_reg+0x23c>
   130bc:	add	r0, r0, #1
   130c0:	asr	r3, r0, #31
   130c4:	add	r3, r0, r3, lsr #28
   130c8:	bic	r3, r3, #15
   130cc:	sub	r0, r0, r3
   130d0:	ldr	r3, [r1, r0, lsl #2]
   130d4:	str	r0, [r2, #104]	; 0x68
   130d8:	cmp	r3, #0
   130dc:	beq	132d8 <alloc_reg+0x23c>
   130e0:	add	r0, r0, #1
   130e4:	asr	r3, r0, #31
   130e8:	add	r3, r0, r3, lsr #28
   130ec:	bic	r3, r3, #15
   130f0:	sub	r0, r0, r3
   130f4:	ldr	r3, [r1, r0, lsl #2]
   130f8:	str	r0, [r2, #104]	; 0x68
   130fc:	cmp	r3, #0
   13100:	beq	132d8 <alloc_reg+0x23c>
   13104:	add	r0, r0, #1
   13108:	asr	r3, r0, #31
   1310c:	add	r3, r0, r3, lsr #28
   13110:	bic	r3, r3, #15
   13114:	sub	r0, r0, r3
   13118:	ldr	r3, [r1, r0, lsl #2]
   1311c:	str	r0, [r2, #104]	; 0x68
   13120:	cmp	r3, #0
   13124:	beq	132d8 <alloc_reg+0x23c>
   13128:	add	r0, r0, #1
   1312c:	asr	r3, r0, #31
   13130:	add	r3, r0, r3, lsr #28
   13134:	bic	r3, r3, #15
   13138:	sub	r0, r0, r3
   1313c:	ldr	r3, [r1, r0, lsl #2]
   13140:	str	r0, [r2, #104]	; 0x68
   13144:	cmp	r3, #0
   13148:	beq	132d8 <alloc_reg+0x23c>
   1314c:	add	r0, r0, #1
   13150:	asr	r3, r0, #31
   13154:	add	r3, r0, r3, lsr #28
   13158:	bic	r3, r3, #15
   1315c:	sub	r0, r0, r3
   13160:	ldr	r3, [r1, r0, lsl #2]
   13164:	str	r0, [r2, #104]	; 0x68
   13168:	cmp	r3, #0
   1316c:	beq	132d8 <alloc_reg+0x23c>
   13170:	add	r0, r0, #1
   13174:	asr	r3, r0, #31
   13178:	add	r3, r0, r3, lsr #28
   1317c:	bic	r3, r3, #15
   13180:	sub	r0, r0, r3
   13184:	ldr	r3, [r1, r0, lsl #2]
   13188:	str	r0, [r2, #104]	; 0x68
   1318c:	cmp	r3, #0
   13190:	beq	132d8 <alloc_reg+0x23c>
   13194:	add	r0, r0, #1
   13198:	asr	r3, r0, #31
   1319c:	add	r3, r0, r3, lsr #28
   131a0:	bic	r3, r3, #15
   131a4:	sub	r0, r0, r3
   131a8:	ldr	r3, [r1, r0, lsl #2]
   131ac:	str	r0, [r2, #104]	; 0x68
   131b0:	cmp	r3, #0
   131b4:	beq	132d8 <alloc_reg+0x23c>
   131b8:	add	r0, r0, #1
   131bc:	asr	r3, r0, #31
   131c0:	add	r3, r0, r3, lsr #28
   131c4:	bic	r3, r3, #15
   131c8:	sub	r0, r0, r3
   131cc:	ldr	r3, [r1, r0, lsl #2]
   131d0:	str	r0, [r2, #104]	; 0x68
   131d4:	cmp	r3, #0
   131d8:	beq	132d8 <alloc_reg+0x23c>
   131dc:	add	r0, r0, #1
   131e0:	asr	r3, r0, #31
   131e4:	add	r3, r0, r3, lsr #28
   131e8:	bic	r3, r3, #15
   131ec:	sub	r0, r0, r3
   131f0:	ldr	r3, [r1, r0, lsl #2]
   131f4:	str	r0, [r2, #104]	; 0x68
   131f8:	cmp	r3, #0
   131fc:	beq	132d8 <alloc_reg+0x23c>
   13200:	add	r0, r0, #1
   13204:	asr	r3, r0, #31
   13208:	add	r3, r0, r3, lsr #28
   1320c:	bic	r3, r3, #15
   13210:	sub	r0, r0, r3
   13214:	ldr	r3, [r1, r0, lsl #2]
   13218:	str	r0, [r2, #104]	; 0x68
   1321c:	cmp	r3, #0
   13220:	beq	132d8 <alloc_reg+0x23c>
   13224:	add	r0, r0, #1
   13228:	asr	r3, r0, #31
   1322c:	add	r3, r0, r3, lsr #28
   13230:	bic	r3, r3, #15
   13234:	sub	r0, r0, r3
   13238:	ldr	r3, [r1, r0, lsl #2]
   1323c:	str	r0, [r2, #104]	; 0x68
   13240:	cmp	r3, #0
   13244:	beq	132d8 <alloc_reg+0x23c>
   13248:	add	r0, r0, #1
   1324c:	asr	r3, r0, #31
   13250:	add	r3, r0, r3, lsr #28
   13254:	bic	r3, r3, #15
   13258:	sub	r0, r0, r3
   1325c:	ldr	r3, [r1, r0, lsl #2]
   13260:	str	r0, [r2, #104]	; 0x68
   13264:	cmp	r3, #0
   13268:	beq	132d8 <alloc_reg+0x23c>
   1326c:	add	r0, r0, #1
   13270:	asr	r3, r0, #31
   13274:	add	r3, r0, r3, lsr #28
   13278:	bic	r3, r3, #15
   1327c:	sub	r0, r0, r3
   13280:	ldr	r3, [r1, r0, lsl #2]
   13284:	str	r0, [r2, #104]	; 0x68
   13288:	cmp	r3, #0
   1328c:	beq	132d8 <alloc_reg+0x23c>
   13290:	add	r0, r0, #1
   13294:	asr	r3, r0, #31
   13298:	add	r3, r0, r3, lsr #28
   1329c:	bic	r3, r3, #15
   132a0:	sub	r0, r0, r3
   132a4:	ldr	r3, [r1, r0, lsl #2]
   132a8:	str	r0, [r2, #104]	; 0x68
   132ac:	cmp	r3, #0
   132b0:	beq	132d8 <alloc_reg+0x23c>
   132b4:	add	r0, r0, #1
   132b8:	asr	r3, r0, #31
   132bc:	add	r3, r0, r3, lsr #28
   132c0:	bic	r3, r3, #15
   132c4:	sub	r0, r0, r3
   132c8:	ldr	r3, [r1, r0, lsl #2]
   132cc:	str	r0, [r2, #104]	; 0x68
   132d0:	cmp	r3, #0
   132d4:	bne	132e4 <alloc_reg+0x248>
   132d8:	mov	r2, #1
   132dc:	str	r2, [r1, r0, lsl #2]
   132e0:	bx	lr
   132e4:	push	{fp, lr}
   132e8:	mov	fp, sp
   132ec:	add	r0, r0, #1
   132f0:	asr	r1, r0, #31
   132f4:	add	r1, r0, r1, lsr #28
   132f8:	bic	r1, r1, #15
   132fc:	sub	r0, r0, r1
   13300:	str	r0, [r2, #104]	; 0x68
   13304:	ldr	r0, [pc, #12]	; 13318 <alloc_reg+0x27c>
   13308:	add	r0, pc, r0
   1330c:	bl	2204 <sf_bpf_error>
   13310:	.word	0x00033440
   13314:	.word	0x000333f4
   13318:	.word	0x00016add

0001331c <new_stmt>:
   1331c:	push	{r4, r5, r6, sl, fp, lr}
   13320:	add	fp, sp, #16
   13324:	ldr	r1, [pc, #132]	; 133b0 <new_stmt+0x94>
   13328:	mov	r4, r0
   1332c:	add	r1, pc, r1
   13330:	ldr	r0, [r1, #92]	; 0x5c
   13334:	ldr	r6, [pc, #120]	; 133b4 <new_stmt+0x98>
   13338:	add	r6, pc, r6
   1333c:	ldr	r5, [r6, r0, lsl #3]!
   13340:	cmp	r5, #19
   13344:	bhi	13390 <new_stmt+0x74>
   13348:	add	r2, r0, #1
   1334c:	cmp	r0, #15
   13350:	str	r2, [r1, #92]	; 0x5c
   13354:	bge	133a4 <new_stmt+0x88>
   13358:	mov	r0, #1024	; 0x400
   1335c:	lsl	r5, r0, r2
   13360:	mov	r0, r5
   13364:	bl	f1c <malloc@plt>
   13368:	cmp	r0, #0
   1336c:	str	r0, [r6, #12]
   13370:	beq	133a4 <new_stmt+0x88>
   13374:	mov	r1, #0
   13378:	mov	r2, r5
   1337c:	add	r6, r6, #8
   13380:	bl	f88 <memset@plt>
   13384:	cmp	r5, #19
   13388:	str	r5, [r6]
   1338c:	bls	133a4 <new_stmt+0x88>
   13390:	sub	r1, r5, #20
   13394:	str	r1, [r6]
   13398:	ldr	r0, [r6, #4]
   1339c:	str	r4, [r0, r1]!
   133a0:	pop	{r4, r5, r6, sl, fp, pc}
   133a4:	ldr	r0, [pc, #12]	; 133b8 <new_stmt+0x9c>
   133a8:	add	r0, pc, r0
   133ac:	bl	2204 <sf_bpf_error>
   133b0:	.word	0x000331b4
   133b4:	.word	0x000330e8
   133b8:	.word	0x00015fec

000133bc <gen_llprefixlen>:
   133bc:	push	{r4, r5, r6, r7, fp, lr}
   133c0:	add	fp, sp, #16
   133c4:	ldr	r7, [pc, #220]	; 134a8 <gen_llprefixlen+0xec>
   133c8:	mov	r0, #0
   133cc:	add	r7, pc, r7
   133d0:	ldr	r1, [r7, #36]	; 0x24
   133d4:	cmp	r1, #162	; 0xa2
   133d8:	bgt	133fc <gen_llprefixlen+0x40>
   133dc:	cmp	r1, #119	; 0x77
   133e0:	beq	13408 <gen_llprefixlen+0x4c>
   133e4:	cmp	r1, #127	; 0x7f
   133e8:	popne	{r4, r5, r6, r7, fp, pc}
   133ec:	ldr	r4, [r7, #96]	; 0x60
   133f0:	cmn	r4, #1
   133f4:	bne	13420 <gen_llprefixlen+0x64>
   133f8:	b	13414 <gen_llprefixlen+0x58>
   133fc:	cmp	r1, #163	; 0xa3
   13400:	cmpne	r1, #192	; 0xc0
   13404:	bne	13498 <gen_llprefixlen+0xdc>
   13408:	ldr	r4, [r7, #96]	; 0x60
   1340c:	cmn	r4, #1
   13410:	bne	13420 <gen_llprefixlen+0x64>
   13414:	bl	1309c <alloc_reg>
   13418:	mov	r4, r0
   1341c:	str	r0, [r7, #96]	; 0x60
   13420:	ldr	r0, [r7, #92]	; 0x5c
   13424:	ldr	r6, [pc, #128]	; 134ac <gen_llprefixlen+0xf0>
   13428:	add	r6, pc, r6
   1342c:	ldr	r5, [r6, r0, lsl #3]!
   13430:	cmp	r5, #19
   13434:	bhi	13480 <gen_llprefixlen+0xc4>
   13438:	add	r1, r0, #1
   1343c:	cmp	r0, #15
   13440:	str	r1, [r7, #92]	; 0x5c
   13444:	bge	1349c <gen_llprefixlen+0xe0>
   13448:	mov	r0, #1024	; 0x400
   1344c:	lsl	r5, r0, r1
   13450:	mov	r0, r5
   13454:	bl	f1c <malloc@plt>
   13458:	cmp	r0, #0
   1345c:	str	r0, [r6, #12]
   13460:	beq	1349c <gen_llprefixlen+0xe0>
   13464:	mov	r1, #0
   13468:	mov	r2, r5
   1346c:	add	r6, r6, #8
   13470:	bl	f88 <memset@plt>
   13474:	cmp	r5, #19
   13478:	str	r5, [r6]
   1347c:	bls	1349c <gen_llprefixlen+0xe0>
   13480:	sub	r1, r5, #20
   13484:	mov	r2, #97	; 0x61
   13488:	str	r1, [r6]
   1348c:	ldr	r0, [r6, #4]
   13490:	str	r2, [r0, r1]!
   13494:	str	r4, [r0, #12]
   13498:	pop	{r4, r5, r6, r7, fp, pc}
   1349c:	ldr	r0, [pc, #12]	; 134b0 <gen_llprefixlen+0xf4>
   134a0:	add	r0, pc, r0
   134a4:	bl	2204 <sf_bpf_error>
   134a8:	.word	0x00033114
   134ac:	.word	0x00032ff8
   134b0:	.word	0x00015ef4

000134b4 <gen_loadx_iphdrlen>:
   134b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134b8:	add	fp, sp, #28
   134bc:	sub	sp, sp, #4
   134c0:	ldr	r8, [pc, #1092]	; 1390c <gen_loadx_iphdrlen+0x458>
   134c4:	add	r8, pc, r8
   134c8:	ldrb	r0, [r8, #16]
   134cc:	cmp	r0, #0
   134d0:	beq	13554 <gen_loadx_iphdrlen+0xa0>
   134d4:	ldr	r5, [r8, #100]	; 0x64
   134d8:	cmn	r5, #1
   134dc:	bne	134ec <gen_loadx_iphdrlen+0x38>
   134e0:	bl	1309c <alloc_reg>
   134e4:	mov	r5, r0
   134e8:	str	r0, [r8, #100]	; 0x64
   134ec:	ldr	r0, [r8, #92]	; 0x5c
   134f0:	ldr	r9, [pc, #1052]	; 13914 <gen_loadx_iphdrlen+0x460>
   134f4:	add	r9, pc, r9
   134f8:	mov	r7, r9
   134fc:	ldr	r4, [r7, r0, lsl #3]!
   13500:	cmp	r4, #19
   13504:	bhi	1355c <gen_loadx_iphdrlen+0xa8>
   13508:	add	r6, r0, #1
   1350c:	cmp	r0, #15
   13510:	str	r6, [r8, #92]	; 0x5c
   13514:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   13518:	mov	r0, #1024	; 0x400
   1351c:	lsl	r4, r0, r6
   13520:	mov	r0, r4
   13524:	bl	f1c <malloc@plt>
   13528:	cmp	r0, #0
   1352c:	str	r0, [r7, #12]
   13530:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   13534:	mov	r1, #0
   13538:	mov	r2, r4
   1353c:	add	r7, r7, #8
   13540:	bl	f88 <memset@plt>
   13544:	cmp	r4, #19
   13548:	str	r4, [r7]
   1354c:	bhi	13560 <gen_loadx_iphdrlen+0xac>
   13550:	b	13900 <gen_loadx_iphdrlen+0x44c>
   13554:	ldr	r6, [r8, #92]	; 0x5c
   13558:	b	135dc <gen_loadx_iphdrlen+0x128>
   1355c:	mov	r6, r0
   13560:	sub	r0, r4, #20
   13564:	mov	r1, #97	; 0x61
   13568:	str	r0, [r7]
   1356c:	ldr	r4, [r7, #4]
   13570:	str	r1, [r4, r0]!
   13574:	cmp	r4, #0
   13578:	str	r5, [r4, #12]
   1357c:	beq	135dc <gen_loadx_iphdrlen+0x128>
   13580:	mov	r7, r9
   13584:	ldr	r5, [r7, r6, lsl #3]!
   13588:	cmp	r5, #19
   1358c:	bhi	13668 <gen_loadx_iphdrlen+0x1b4>
   13590:	add	sl, r6, #1
   13594:	cmp	r6, #15
   13598:	str	sl, [r8, #92]	; 0x5c
   1359c:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   135a0:	mov	r0, #1024	; 0x400
   135a4:	lsl	r5, r0, sl
   135a8:	mov	r0, r5
   135ac:	bl	f1c <malloc@plt>
   135b0:	cmp	r0, #0
   135b4:	str	r0, [r7, #12]
   135b8:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   135bc:	mov	r1, #0
   135c0:	mov	r2, r5
   135c4:	add	r7, r7, #8
   135c8:	bl	f88 <memset@plt>
   135cc:	cmp	r5, #19
   135d0:	str	r5, [r7]
   135d4:	bhi	1366c <gen_loadx_iphdrlen+0x1b8>
   135d8:	b	13900 <gen_loadx_iphdrlen+0x44c>
   135dc:	ldr	r5, [pc, #812]	; 13910 <gen_loadx_iphdrlen+0x45c>
   135e0:	add	r5, pc, r5
   135e4:	ldr	r4, [r5, r6, lsl #3]!
   135e8:	cmp	r4, #19
   135ec:	bhi	13638 <gen_loadx_iphdrlen+0x184>
   135f0:	add	r0, r6, #1
   135f4:	cmp	r6, #15
   135f8:	str	r0, [r8, #92]	; 0x5c
   135fc:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   13600:	mov	r1, #1024	; 0x400
   13604:	lsl	r4, r1, r0
   13608:	mov	r0, r4
   1360c:	bl	f1c <malloc@plt>
   13610:	cmp	r0, #0
   13614:	str	r0, [r5, #12]
   13618:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   1361c:	mov	r1, #0
   13620:	mov	r2, r4
   13624:	add	r5, r5, #8
   13628:	bl	f88 <memset@plt>
   1362c:	cmp	r4, #19
   13630:	str	r4, [r5]
   13634:	bls	13900 <gen_loadx_iphdrlen+0x44c>
   13638:	sub	r0, r4, #20
   1363c:	mov	r1, #177	; 0xb1
   13640:	str	r0, [r5]
   13644:	ldr	r4, [r5, #4]
   13648:	str	r1, [r4, r0]!
   1364c:	ldr	r0, [r8, #44]	; 0x2c
   13650:	ldr	r1, [r8, #48]	; 0x30
   13654:	add	r0, r1, r0
   13658:	str	r0, [r4, #12]
   1365c:	mov	r0, r4
   13660:	sub	sp, fp, #28
   13664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13668:	mov	sl, r6
   1366c:	sub	r1, r5, #20
   13670:	mov	r2, #80	; 0x50
   13674:	str	r1, [r7]
   13678:	ldr	r0, [r7, #4]
   1367c:	str	r2, [r0, r1]!
   13680:	mov	r2, r4
   13684:	ldr	r1, [r8, #48]	; 0x30
   13688:	str	r1, [r0, #12]
   1368c:	mov	r1, r2
   13690:	ldr	r2, [r2, #16]
   13694:	cmp	r2, #0
   13698:	bne	1368c <gen_loadx_iphdrlen+0x1d8>
   1369c:	str	r0, [r1, #16]
   136a0:	mov	r7, r9
   136a4:	ldr	r5, [r7, sl, lsl #3]!
   136a8:	cmp	r5, #19
   136ac:	bhi	13704 <gen_loadx_iphdrlen+0x250>
   136b0:	ldr	r0, [pc, #608]	; 13918 <gen_loadx_iphdrlen+0x464>
   136b4:	add	r8, sl, #1
   136b8:	cmp	sl, #15
   136bc:	add	r0, pc, r0
   136c0:	str	r8, [r0, #92]	; 0x5c
   136c4:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   136c8:	mov	r0, #1024	; 0x400
   136cc:	lsl	r5, r0, r8
   136d0:	mov	r0, r5
   136d4:	bl	f1c <malloc@plt>
   136d8:	cmp	r0, #0
   136dc:	str	r0, [r7, #12]
   136e0:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   136e4:	mov	r1, #0
   136e8:	mov	r2, r5
   136ec:	add	r7, r7, #8
   136f0:	bl	f88 <memset@plt>
   136f4:	cmp	r5, #19
   136f8:	str	r5, [r7]
   136fc:	bhi	13708 <gen_loadx_iphdrlen+0x254>
   13700:	b	13900 <gen_loadx_iphdrlen+0x44c>
   13704:	mov	r8, sl
   13708:	sub	r1, r5, #20
   1370c:	mov	r2, #84	; 0x54
   13710:	str	r1, [r7]
   13714:	ldr	r0, [r7, #4]
   13718:	str	r2, [r0, r1]!
   1371c:	mov	r1, #15
   13720:	mov	r2, r4
   13724:	str	r1, [r0, #12]
   13728:	mov	r1, r2
   1372c:	ldr	r2, [r2, #16]
   13730:	cmp	r2, #0
   13734:	bne	13728 <gen_loadx_iphdrlen+0x274>
   13738:	str	r0, [r1, #16]
   1373c:	mov	r6, r9
   13740:	ldr	r5, [r6, r8, lsl #3]!
   13744:	cmp	r5, #19
   13748:	bhi	137a0 <gen_loadx_iphdrlen+0x2ec>
   1374c:	ldr	r0, [pc, #456]	; 1391c <gen_loadx_iphdrlen+0x468>
   13750:	add	r7, r8, #1
   13754:	cmp	r8, #15
   13758:	add	r0, pc, r0
   1375c:	str	r7, [r0, #92]	; 0x5c
   13760:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   13764:	mov	r0, #1024	; 0x400
   13768:	lsl	r5, r0, r7
   1376c:	mov	r0, r5
   13770:	bl	f1c <malloc@plt>
   13774:	cmp	r0, #0
   13778:	str	r0, [r6, #12]
   1377c:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   13780:	mov	r1, #0
   13784:	mov	r2, r5
   13788:	add	r6, r6, #8
   1378c:	bl	f88 <memset@plt>
   13790:	cmp	r5, #19
   13794:	str	r5, [r6]
   13798:	bhi	137a4 <gen_loadx_iphdrlen+0x2f0>
   1379c:	b	13900 <gen_loadx_iphdrlen+0x44c>
   137a0:	mov	r7, r8
   137a4:	sub	r1, r5, #20
   137a8:	mov	r2, #100	; 0x64
   137ac:	str	r1, [r6]
   137b0:	ldr	r0, [r6, #4]
   137b4:	str	r2, [r0, r1]!
   137b8:	mov	r1, #2
   137bc:	mov	r2, r4
   137c0:	str	r1, [r0, #12]
   137c4:	mov	r1, r2
   137c8:	ldr	r2, [r2, #16]
   137cc:	cmp	r2, #0
   137d0:	bne	137c4 <gen_loadx_iphdrlen+0x310>
   137d4:	str	r0, [r1, #16]
   137d8:	mov	r6, r9
   137dc:	ldr	r5, [r6, r7, lsl #3]!
   137e0:	cmp	r5, #19
   137e4:	bhi	1383c <gen_loadx_iphdrlen+0x388>
   137e8:	ldr	r0, [pc, #304]	; 13920 <gen_loadx_iphdrlen+0x46c>
   137ec:	add	r8, r7, #1
   137f0:	cmp	r7, #15
   137f4:	add	r0, pc, r0
   137f8:	str	r8, [r0, #92]	; 0x5c
   137fc:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   13800:	mov	r0, #1024	; 0x400
   13804:	lsl	r5, r0, r8
   13808:	mov	r0, r5
   1380c:	bl	f1c <malloc@plt>
   13810:	cmp	r0, #0
   13814:	str	r0, [r6, #12]
   13818:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   1381c:	mov	r1, #0
   13820:	mov	r2, r5
   13824:	add	r6, r6, #8
   13828:	bl	f88 <memset@plt>
   1382c:	cmp	r5, #19
   13830:	str	r5, [r6]
   13834:	bhi	13840 <gen_loadx_iphdrlen+0x38c>
   13838:	b	13900 <gen_loadx_iphdrlen+0x44c>
   1383c:	mov	r8, r7
   13840:	sub	r1, r5, #20
   13844:	mov	r2, #12
   13848:	str	r1, [r6]
   1384c:	ldr	r0, [r6, #4]
   13850:	str	r2, [r0, r1]!
   13854:	mov	r2, r4
   13858:	mov	r1, r2
   1385c:	ldr	r2, [r2, #16]
   13860:	cmp	r2, #0
   13864:	bne	13858 <gen_loadx_iphdrlen+0x3a4>
   13868:	str	r0, [r1, #16]
   1386c:	ldr	r5, [r9, r8, lsl #3]!
   13870:	cmp	r5, #19
   13874:	bhi	138c8 <gen_loadx_iphdrlen+0x414>
   13878:	ldr	r1, [pc, #164]	; 13924 <gen_loadx_iphdrlen+0x470>
   1387c:	add	r0, r8, #1
   13880:	cmp	r8, #15
   13884:	add	r1, pc, r1
   13888:	str	r0, [r1, #92]	; 0x5c
   1388c:	bge	13900 <gen_loadx_iphdrlen+0x44c>
   13890:	mov	r1, #1024	; 0x400
   13894:	lsl	r5, r1, r0
   13898:	mov	r0, r5
   1389c:	bl	f1c <malloc@plt>
   138a0:	cmp	r0, #0
   138a4:	str	r0, [r9, #12]
   138a8:	beq	13900 <gen_loadx_iphdrlen+0x44c>
   138ac:	mov	r1, #0
   138b0:	mov	r2, r5
   138b4:	add	r9, r9, #8
   138b8:	bl	f88 <memset@plt>
   138bc:	cmp	r5, #19
   138c0:	str	r5, [r9]
   138c4:	bls	13900 <gen_loadx_iphdrlen+0x44c>
   138c8:	sub	r1, r5, #20
   138cc:	mov	r2, #7
   138d0:	str	r1, [r9]
   138d4:	ldr	r0, [r9, #4]
   138d8:	str	r2, [r0, r1]!
   138dc:	mov	r2, r4
   138e0:	mov	r1, r2
   138e4:	ldr	r2, [r2, #16]
   138e8:	cmp	r2, #0
   138ec:	bne	138e0 <gen_loadx_iphdrlen+0x42c>
   138f0:	str	r0, [r1, #16]
   138f4:	mov	r0, r4
   138f8:	sub	sp, fp, #28
   138fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13900:	ldr	r0, [pc, #32]	; 13928 <gen_loadx_iphdrlen+0x474>
   13904:	add	r0, pc, r0
   13908:	bl	2204 <sf_bpf_error>
   1390c:	.word	0x0003301c
   13910:	.word	0x00032e40
   13914:	.word	0x00032f2c
   13918:	.word	0x00032e24
   1391c:	.word	0x00032d88
   13920:	.word	0x00032cec
   13924:	.word	0x00032c5c
   13928:	.word	0x00015a90

0001392c <sf_gen_relation>:
   1392c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13930:	add	fp, sp, #28
   13934:	sub	sp, sp, #28
   13938:	str	r3, [sp, #12]
   1393c:	str	r1, [sp, #20]
   13940:	mov	r8, r2
   13944:	ldr	r3, [pc, #1276]	; 13e48 <sf_gen_relation+0x51c>
   13948:	add	r3, pc, r3
   1394c:	ldr	r1, [r3, #92]	; 0x5c
   13950:	ldr	r9, [pc, #1268]	; 13e4c <sf_gen_relation+0x520>
   13954:	str	r0, [sp, #4]
   13958:	add	r9, pc, r9
   1395c:	mov	r4, r9
   13960:	ldr	r6, [r4, r1, lsl #3]!
   13964:	cmp	r6, #19
   13968:	bhi	139c4 <sf_gen_relation+0x98>
   1396c:	add	r5, r1, #1
   13970:	cmp	r1, #15
   13974:	str	r5, [r3, #92]	; 0x5c
   13978:	bge	13e3c <sf_gen_relation+0x510>
   1397c:	mov	r0, #1024	; 0x400
   13980:	mov	sl, r3
   13984:	lsl	r6, r0, r5
   13988:	mov	r0, r6
   1398c:	bl	f1c <malloc@plt>
   13990:	cmp	r0, #0
   13994:	str	r0, [r4, #12]
   13998:	beq	13e3c <sf_gen_relation+0x510>
   1399c:	mov	r1, #0
   139a0:	mov	r2, r6
   139a4:	add	r7, r4, #8
   139a8:	bl	f88 <memset@plt>
   139ac:	cmp	r6, #20
   139b0:	str	r6, [r7]
   139b4:	bcc	13e3c <sf_gen_relation+0x510>
   139b8:	add	r4, r9, r5, lsl #3
   139bc:	mov	r3, sl
   139c0:	b	139cc <sf_gen_relation+0xa0>
   139c4:	mov	r5, r1
   139c8:	mov	r7, r4
   139cc:	sub	r0, r6, #20
   139d0:	mov	r1, #97	; 0x61
   139d4:	str	r0, [r7]
   139d8:	ldr	r2, [r7, #4]
   139dc:	str	r1, [r2, r0]!
   139e0:	str	r8, [sp, #16]
   139e4:	ldr	r0, [r8, #8]
   139e8:	str	r2, [sp, #8]
   139ec:	str	r0, [r2, #12]
   139f0:	ldr	r6, [r9, r5, lsl #3]
   139f4:	cmp	r6, #19
   139f8:	bhi	13a50 <sf_gen_relation+0x124>
   139fc:	add	sl, r5, #1
   13a00:	cmp	r5, #15
   13a04:	str	sl, [r3, #92]	; 0x5c
   13a08:	bge	13e3c <sf_gen_relation+0x510>
   13a0c:	mov	r0, #1024	; 0x400
   13a10:	mov	r7, r3
   13a14:	lsl	r6, r0, sl
   13a18:	mov	r0, r6
   13a1c:	bl	f1c <malloc@plt>
   13a20:	cmp	r0, #0
   13a24:	str	r0, [r4, #12]
   13a28:	beq	13e3c <sf_gen_relation+0x510>
   13a2c:	mov	r1, #0
   13a30:	mov	r2, r6
   13a34:	add	r4, r4, #8
   13a38:	bl	f88 <memset@plt>
   13a3c:	cmp	r6, #19
   13a40:	mov	r3, r7
   13a44:	str	r6, [r4]
   13a48:	bhi	13a54 <sf_gen_relation+0x128>
   13a4c:	b	13e3c <sf_gen_relation+0x510>
   13a50:	mov	sl, r5
   13a54:	sub	r0, r6, #20
   13a58:	mov	r1, #96	; 0x60
   13a5c:	str	r0, [r4]
   13a60:	ldr	r8, [r4, #4]
   13a64:	str	r1, [r8, r0]!
   13a68:	ldr	r4, [sp, #20]
   13a6c:	ldr	r5, [sp, #4]
   13a70:	ldr	r0, [r4, #8]
   13a74:	cmp	r5, #16
   13a78:	str	r0, [r8, #12]
   13a7c:	bne	13ae8 <sf_gen_relation+0x1bc>
   13a80:	mov	r4, r9
   13a84:	ldr	r6, [r4, sl, lsl #3]!
   13a88:	cmp	r6, #19
   13a8c:	bhi	13b5c <sf_gen_relation+0x230>
   13a90:	add	r7, sl, #1
   13a94:	cmp	sl, #15
   13a98:	str	r7, [r3, #92]	; 0x5c
   13a9c:	bge	13e3c <sf_gen_relation+0x510>
   13aa0:	mov	r0, #1024	; 0x400
   13aa4:	lsl	r6, r0, r7
   13aa8:	mov	r0, r6
   13aac:	bl	f1c <malloc@plt>
   13ab0:	cmp	r0, #0
   13ab4:	str	r0, [r4, #12]
   13ab8:	beq	13e3c <sf_gen_relation+0x510>
   13abc:	mov	r1, #0
   13ac0:	mov	r2, r6
   13ac4:	add	r5, r4, #8
   13ac8:	bl	f88 <memset@plt>
   13acc:	cmp	r6, #20
   13ad0:	str	r6, [r5]
   13ad4:	bcc	13e3c <sf_gen_relation+0x510>
   13ad8:	ldr	r3, [pc, #880]	; 13e50 <sf_gen_relation+0x524>
   13adc:	add	r4, r9, r7, lsl #3
   13ae0:	add	r3, pc, r3
   13ae4:	b	13b64 <sf_gen_relation+0x238>
   13ae8:	ldr	r6, [r9, sl, lsl #3]!
   13aec:	cmp	r6, #207	; 0xcf
   13af0:	bhi	13b3c <sf_gen_relation+0x210>
   13af4:	add	r0, sl, #1
   13af8:	cmp	sl, #15
   13afc:	str	r0, [r3, #92]	; 0x5c
   13b00:	bge	13e3c <sf_gen_relation+0x510>
   13b04:	mov	r1, #1024	; 0x400
   13b08:	lsl	r6, r1, r0
   13b0c:	mov	r0, r6
   13b10:	bl	f1c <malloc@plt>
   13b14:	cmp	r0, #0
   13b18:	str	r0, [r9, #12]
   13b1c:	beq	13e3c <sf_gen_relation+0x510>
   13b20:	mov	r1, #0
   13b24:	mov	r2, r6
   13b28:	add	r9, r9, #8
   13b2c:	bl	f88 <memset@plt>
   13b30:	cmp	r6, #207	; 0xcf
   13b34:	str	r6, [r9]
   13b38:	bls	13e3c <sf_gen_relation+0x510>
   13b3c:	sub	r0, r6, #208	; 0xd0
   13b40:	orr	r1, r5, #13
   13b44:	str	r0, [r9]
   13b48:	ldr	r2, [r9, #4]
   13b4c:	add	r0, r2, r0
   13b50:	str	r1, [r0, #8]
   13b54:	str	r0, [r0, #96]	; 0x60
   13b58:	b	13c04 <sf_gen_relation+0x2d8>
   13b5c:	mov	r7, sl
   13b60:	mov	r5, r4
   13b64:	sub	r0, r6, #20
   13b68:	mov	r1, #28
   13b6c:	str	r0, [r5]
   13b70:	ldr	r5, [r5, #4]
   13b74:	str	r1, [r5, r0]!
   13b78:	ldr	r6, [r9, r7, lsl #3]
   13b7c:	cmp	r6, #207	; 0xcf
   13b80:	bhi	13bcc <sf_gen_relation+0x2a0>
   13b84:	add	r0, r7, #1
   13b88:	cmp	r7, #15
   13b8c:	str	r0, [r3, #92]	; 0x5c
   13b90:	bge	13e3c <sf_gen_relation+0x510>
   13b94:	mov	r1, #1024	; 0x400
   13b98:	lsl	r6, r1, r0
   13b9c:	mov	r0, r6
   13ba0:	bl	f1c <malloc@plt>
   13ba4:	cmp	r0, #0
   13ba8:	str	r0, [r4, #12]
   13bac:	beq	13e3c <sf_gen_relation+0x510>
   13bb0:	mov	r1, #0
   13bb4:	mov	r2, r6
   13bb8:	add	r4, r4, #8
   13bbc:	bl	f88 <memset@plt>
   13bc0:	cmp	r6, #207	; 0xcf
   13bc4:	str	r6, [r4]
   13bc8:	bls	13e3c <sf_gen_relation+0x510>
   13bcc:	sub	r0, r6, #208	; 0xd0
   13bd0:	mov	r2, r8
   13bd4:	str	r0, [r4]
   13bd8:	ldr	r1, [r4, #4]
   13bdc:	add	r0, r1, r0
   13be0:	mov	r1, #21
   13be4:	str	r1, [r0, #8]
   13be8:	str	r0, [r0, #96]	; 0x60
   13bec:	mov	r1, r2
   13bf0:	ldr	r2, [r2, #16]
   13bf4:	cmp	r2, #0
   13bf8:	bne	13bec <sf_gen_relation+0x2c0>
   13bfc:	ldr	r4, [sp, #20]
   13c00:	str	r5, [r1, #16]
   13c04:	ldr	r1, [sp, #12]
   13c08:	ldr	r3, [sp, #8]
   13c0c:	cmp	r1, #0
   13c10:	mov	r2, r3
   13c14:	ldrne	r1, [r0, #44]	; 0x2c
   13c18:	clzne	r1, r1
   13c1c:	lsrne	r1, r1, #5
   13c20:	strne	r1, [r0, #44]	; 0x2c
   13c24:	mov	r1, r2
   13c28:	ldr	r2, [r2, #16]
   13c2c:	cmp	r2, #0
   13c30:	bne	13c24 <sf_gen_relation+0x2f8>
   13c34:	ldr	r7, [sp, #16]
   13c38:	str	r8, [r1, #16]
   13c3c:	ldr	r1, [r7, #4]
   13c40:	mov	r2, r1
   13c44:	ldr	r1, [r1, #16]
   13c48:	cmp	r1, #0
   13c4c:	bne	13c40 <sf_gen_relation+0x314>
   13c50:	str	r3, [r2, #16]
   13c54:	ldr	r1, [r7, #4]
   13c58:	ldr	r2, [r4, #4]
   13c5c:	mov	r3, r2
   13c60:	ldr	r2, [r2, #16]
   13c64:	cmp	r2, #0
   13c68:	bne	13c5c <sf_gen_relation+0x330>
   13c6c:	str	r1, [r3, #16]
   13c70:	mov	r3, #0
   13c74:	ldr	r1, [r4, #4]
   13c78:	str	r1, [r0, #4]
   13c7c:	ldr	r1, [r4, #8]
   13c80:	ldr	r2, [pc, #460]	; 13e54 <sf_gen_relation+0x528>
   13c84:	add	r2, pc, r2
   13c88:	str	r3, [r2, r1, lsl #2]
   13c8c:	ldr	r1, [r7, #8]
   13c90:	str	r3, [r2, r1, lsl #2]
   13c94:	ldr	r6, [r4]
   13c98:	ldr	r1, [r7]
   13c9c:	cmp	r6, #0
   13ca0:	beq	13d60 <sf_gen_relation+0x434>
   13ca4:	cmp	r1, #0
   13ca8:	beq	13d70 <sf_gen_relation+0x444>
   13cac:	ldr	r3, [r1, #96]	; 0x60
   13cb0:	mov	r2, r6
   13cb4:	ldr	r7, [r2, #44]	; 0x2c
   13cb8:	add	r5, r2, #84	; 0x54
   13cbc:	cmp	r7, #0
   13cc0:	mov	r7, #84	; 0x54
   13cc4:	movweq	r7, #60	; 0x3c
   13cc8:	addeq	r5, r2, #60	; 0x3c
   13ccc:	ldr	r2, [r2, r7]
   13cd0:	str	r3, [r5]
   13cd4:	cmp	r2, #0
   13cd8:	bne	13cb4 <sf_gen_relation+0x388>
   13cdc:	ldr	r2, [r6, #44]	; 0x2c
   13ce0:	clz	r2, r2
   13ce4:	lsr	r2, r2, #5
   13ce8:	str	r2, [r6, #44]	; 0x2c
   13cec:	ldr	r2, [r1, #44]	; 0x2c
   13cf0:	clz	r3, r2
   13cf4:	cmp	r2, #0
   13cf8:	mov	r2, #60	; 0x3c
   13cfc:	lsr	r3, r3, #5
   13d00:	movweq	r2, #84	; 0x54
   13d04:	str	r3, [r1, #44]	; 0x2c
   13d08:	add	r3, r1, #60	; 0x3c
   13d0c:	ldr	r7, [r1, r2]
   13d10:	addeq	r3, r1, #84	; 0x54
   13d14:	cmp	r7, #0
   13d18:	beq	13d40 <sf_gen_relation+0x414>
   13d1c:	ldr	r2, [r7, #44]	; 0x2c
   13d20:	add	r3, r7, #84	; 0x54
   13d24:	cmp	r2, #0
   13d28:	mov	r2, #84	; 0x54
   13d2c:	movweq	r2, #60	; 0x3c
   13d30:	addeq	r3, r7, #60	; 0x3c
   13d34:	ldr	r7, [r7, r2]
   13d38:	cmp	r7, #0
   13d3c:	bne	13d1c <sf_gen_relation+0x3f0>
   13d40:	str	r6, [r3]
   13d44:	ldr	r2, [r1, #44]	; 0x2c
   13d48:	clz	r2, r2
   13d4c:	lsr	r2, r2, #5
   13d50:	str	r2, [r1, #44]	; 0x2c
   13d54:	ldr	r2, [r6, #96]	; 0x60
   13d58:	str	r2, [r1, #96]	; 0x60
   13d5c:	b	13d74 <sf_gen_relation+0x448>
   13d60:	cmp	r1, #0
   13d64:	bne	13d74 <sf_gen_relation+0x448>
   13d68:	sub	sp, fp, #28
   13d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d70:	mov	r1, r6
   13d74:	ldr	r2, [r0, #96]	; 0x60
   13d78:	mov	r3, r1
   13d7c:	ldr	r7, [r3, #44]	; 0x2c
   13d80:	add	r6, r3, #84	; 0x54
   13d84:	cmp	r7, #0
   13d88:	mov	r7, #84	; 0x54
   13d8c:	movweq	r7, #60	; 0x3c
   13d90:	addeq	r6, r3, #60	; 0x3c
   13d94:	ldr	r3, [r3, r7]
   13d98:	str	r2, [r6]
   13d9c:	cmp	r3, #0
   13da0:	bne	13d7c <sf_gen_relation+0x450>
   13da4:	ldr	r2, [r1, #44]	; 0x2c
   13da8:	cmp	r0, #0
   13dac:	clz	r2, r2
   13db0:	lsr	r2, r2, #5
   13db4:	str	r2, [r1, #44]	; 0x2c
   13db8:	ldr	r2, [r0, #44]	; 0x2c
   13dbc:	clz	r3, r2
   13dc0:	lsr	r3, r3, #5
   13dc4:	str	r3, [r0, #44]	; 0x2c
   13dc8:	str	r0, [sp, #24]
   13dcc:	beq	13e14 <sf_gen_relation+0x4e8>
   13dd0:	mov	r7, #60	; 0x3c
   13dd4:	cmp	r2, #0
   13dd8:	mov	r3, r0
   13ddc:	movweq	r7, #84	; 0x54
   13de0:	ldr	r2, [r3, r7]!
   13de4:	cmp	r2, #0
   13de8:	beq	13e18 <sf_gen_relation+0x4ec>
   13dec:	ldr	r7, [r2, #44]	; 0x2c
   13df0:	add	r3, r2, #84	; 0x54
   13df4:	cmp	r7, #0
   13df8:	mov	r7, #84	; 0x54
   13dfc:	movweq	r7, #60	; 0x3c
   13e00:	addeq	r3, r2, #60	; 0x3c
   13e04:	ldr	r2, [r2, r7]
   13e08:	cmp	r2, #0
   13e0c:	bne	13dec <sf_gen_relation+0x4c0>
   13e10:	b	13e18 <sf_gen_relation+0x4ec>
   13e14:	add	r3, sp, #24
   13e18:	str	r1, [r3]
   13e1c:	ldr	r2, [r0, #44]	; 0x2c
   13e20:	clz	r2, r2
   13e24:	lsr	r2, r2, #5
   13e28:	str	r2, [r0, #44]	; 0x2c
   13e2c:	ldr	r1, [r1, #96]	; 0x60
   13e30:	str	r1, [r0, #96]	; 0x60
   13e34:	sub	sp, fp, #28
   13e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e3c:	ldr	r0, [pc, #20]	; 13e58 <sf_gen_relation+0x52c>
   13e40:	add	r0, pc, r0
   13e44:	bl	2204 <sf_bpf_error>
   13e48:	.word	0x00032b98
   13e4c:	.word	0x00032ac8
   13e50:	.word	0x00032a00
   13e54:	.word	0x0003281c
   13e58:	.word	0x00015554

00013e5c <sf_gen_loadlen>:
   13e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e60:	add	fp, sp, #28
   13e64:	sub	sp, sp, #12
   13e68:	bl	1309c <alloc_reg>
   13e6c:	ldr	r2, [pc, #436]	; 14028 <sf_gen_loadlen+0x1cc>
   13e70:	mov	r7, r0
   13e74:	add	r2, pc, r2
   13e78:	ldr	r0, [r2, #92]	; 0x5c
   13e7c:	ldr	sl, [pc, #424]	; 1402c <sf_gen_loadlen+0x1d0>
   13e80:	str	r7, [sp, #8]
   13e84:	add	sl, pc, sl
   13e88:	mov	r6, sl
   13e8c:	ldr	r5, [r6, r0, lsl #3]!
   13e90:	cmp	r5, #11
   13e94:	bhi	13ef0 <sf_gen_loadlen+0x94>
   13e98:	add	r8, r0, #1
   13e9c:	cmp	r0, #15
   13ea0:	str	r8, [r2, #92]	; 0x5c
   13ea4:	bge	1401c <sf_gen_loadlen+0x1c0>
   13ea8:	mov	r0, #1024	; 0x400
   13eac:	mov	r9, r2
   13eb0:	lsl	r5, r0, r8
   13eb4:	mov	r0, r5
   13eb8:	bl	f1c <malloc@plt>
   13ebc:	cmp	r0, #0
   13ec0:	str	r0, [r6, #12]
   13ec4:	beq	1401c <sf_gen_loadlen+0x1c0>
   13ec8:	mov	r1, #0
   13ecc:	mov	r2, r5
   13ed0:	add	r4, r6, #8
   13ed4:	bl	f88 <memset@plt>
   13ed8:	cmp	r5, #12
   13edc:	str	r5, [r4]
   13ee0:	bcc	1401c <sf_gen_loadlen+0x1c0>
   13ee4:	add	r6, sl, r8, lsl #3
   13ee8:	mov	r2, r9
   13eec:	b	13ef8 <sf_gen_loadlen+0x9c>
   13ef0:	mov	r8, r0
   13ef4:	mov	r4, r6
   13ef8:	sub	r7, r5, #12
   13efc:	str	r7, [r4]
   13f00:	ldr	r5, [sl, r8, lsl #3]
   13f04:	ldr	r3, [r4, #4]
   13f08:	cmp	r5, #19
   13f0c:	bhi	13f70 <sf_gen_loadlen+0x114>
   13f10:	add	r9, r8, #1
   13f14:	cmp	r8, #15
   13f18:	str	r3, [sp, #4]
   13f1c:	str	r9, [r2, #92]	; 0x5c
   13f20:	bge	1401c <sf_gen_loadlen+0x1c0>
   13f24:	mov	r0, #1024	; 0x400
   13f28:	lsl	r5, r0, r9
   13f2c:	mov	r0, r5
   13f30:	bl	f1c <malloc@plt>
   13f34:	cmp	r0, #0
   13f38:	str	r0, [r6, #12]
   13f3c:	beq	1401c <sf_gen_loadlen+0x1c0>
   13f40:	mov	r1, #0
   13f44:	mov	r2, r5
   13f48:	add	r4, r6, #8
   13f4c:	bl	f88 <memset@plt>
   13f50:	cmp	r5, #20
   13f54:	str	r5, [r4]
   13f58:	bcc	1401c <sf_gen_loadlen+0x1c0>
   13f5c:	ldr	r2, [pc, #204]	; 14030 <sf_gen_loadlen+0x1d4>
   13f60:	ldr	r3, [sp, #4]
   13f64:	add	r6, sl, r9, lsl #3
   13f68:	add	r2, pc, r2
   13f6c:	b	13f78 <sf_gen_loadlen+0x11c>
   13f70:	mov	r9, r8
   13f74:	mov	r4, r6
   13f78:	sub	r0, r5, #20
   13f7c:	mov	r1, #128	; 0x80
   13f80:	str	r0, [r4]
   13f84:	ldr	r4, [r4, #4]
   13f88:	str	r1, [r4, r0]!
   13f8c:	ldr	r5, [r6]
   13f90:	cmp	r5, #19
   13f94:	bhi	13fe8 <sf_gen_loadlen+0x18c>
   13f98:	add	r0, r9, #1
   13f9c:	cmp	r9, #15
   13fa0:	str	r0, [r2, #92]	; 0x5c
   13fa4:	bge	1401c <sf_gen_loadlen+0x1c0>
   13fa8:	mov	r1, #1024	; 0x400
   13fac:	mov	r8, r3
   13fb0:	lsl	r5, r1, r0
   13fb4:	mov	r0, r5
   13fb8:	bl	f1c <malloc@plt>
   13fbc:	cmp	r0, #0
   13fc0:	str	r0, [r6, #12]
   13fc4:	beq	1401c <sf_gen_loadlen+0x1c0>
   13fc8:	mov	r1, #0
   13fcc:	mov	r2, r5
   13fd0:	add	r6, r6, #8
   13fd4:	bl	f88 <memset@plt>
   13fd8:	cmp	r5, #19
   13fdc:	mov	r3, r8
   13fe0:	str	r5, [r6]
   13fe4:	bls	1401c <sf_gen_loadlen+0x1c0>
   13fe8:	sub	r1, r5, #20
   13fec:	add	r0, r3, r7
   13ff0:	mov	r3, #2
   13ff4:	str	r1, [r6]
   13ff8:	ldr	r2, [r6, #4]
   13ffc:	str	r3, [r2, r1]!
   14000:	ldr	r1, [sp, #8]
   14004:	str	r2, [r4, #16]
   14008:	str	r1, [r2, #12]
   1400c:	str	r4, [r0, #4]
   14010:	str	r1, [r0, #8]
   14014:	sub	sp, fp, #28
   14018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1401c:	ldr	r0, [pc, #16]	; 14034 <sf_gen_loadlen+0x1d8>
   14020:	add	r0, pc, r0
   14024:	bl	2204 <sf_bpf_error>
   14028:	.word	0x0003266c
   1402c:	.word	0x0003259c
   14030:	.word	0x00032578
   14034:	.word	0x00015374

00014038 <sf_gen_loadi>:
   14038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1403c:	add	fp, sp, #28
   14040:	sub	sp, sp, #12
   14044:	ldr	r4, [pc, #436]	; 14200 <sf_gen_loadi+0x1c8>
   14048:	mov	r7, r0
   1404c:	add	r4, pc, r4
   14050:	ldr	r0, [r4, #92]	; 0x5c
   14054:	ldr	r9, [pc, #424]	; 14204 <sf_gen_loadi+0x1cc>
   14058:	add	r9, pc, r9
   1405c:	mov	r6, r9
   14060:	ldr	r5, [r6, r0, lsl #3]!
   14064:	cmp	r5, #11
   14068:	bhi	140b4 <sf_gen_loadi+0x7c>
   1406c:	add	r1, r0, #1
   14070:	cmp	r0, #15
   14074:	str	r1, [r4, #92]	; 0x5c
   14078:	bge	141f4 <sf_gen_loadi+0x1bc>
   1407c:	mov	r0, #1024	; 0x400
   14080:	lsl	r5, r0, r1
   14084:	mov	r0, r5
   14088:	bl	f1c <malloc@plt>
   1408c:	cmp	r0, #0
   14090:	str	r0, [r6, #12]
   14094:	beq	141f4 <sf_gen_loadi+0x1bc>
   14098:	mov	r1, #0
   1409c:	mov	r2, r5
   140a0:	add	r6, r6, #8
   140a4:	bl	f88 <memset@plt>
   140a8:	cmp	r5, #11
   140ac:	str	r5, [r6]
   140b0:	bls	141f4 <sf_gen_loadi+0x1bc>
   140b4:	sub	r0, r5, #12
   140b8:	str	r0, [r6]
   140bc:	str	r0, [sp, #8]
   140c0:	ldr	r0, [r6, #4]
   140c4:	str	r0, [sp, #4]
   140c8:	bl	1309c <alloc_reg>
   140cc:	mov	r5, r0
   140d0:	ldr	r0, [r4, #92]	; 0x5c
   140d4:	mov	r8, r9
   140d8:	ldr	r6, [r8, r0, lsl #3]!
   140dc:	cmp	r6, #19
   140e0:	bhi	1413c <sf_gen_loadi+0x104>
   140e4:	add	sl, r0, #1
   140e8:	cmp	r0, #15
   140ec:	str	sl, [r4, #92]	; 0x5c
   140f0:	bge	141f4 <sf_gen_loadi+0x1bc>
   140f4:	mov	r0, #1024	; 0x400
   140f8:	mov	r4, r9
   140fc:	lsl	r6, r0, sl
   14100:	mov	r0, r6
   14104:	bl	f1c <malloc@plt>
   14108:	cmp	r0, #0
   1410c:	str	r0, [r8, #12]
   14110:	beq	141f4 <sf_gen_loadi+0x1bc>
   14114:	mov	r1, #0
   14118:	mov	r2, r6
   1411c:	add	r9, r8, #8
   14120:	bl	f88 <memset@plt>
   14124:	cmp	r6, #20
   14128:	str	r6, [r9]
   1412c:	bcc	141f4 <sf_gen_loadi+0x1bc>
   14130:	mov	r2, r4
   14134:	add	r8, r4, sl, lsl #3
   14138:	b	14148 <sf_gen_loadi+0x110>
   1413c:	mov	r2, r9
   14140:	mov	sl, r0
   14144:	mov	r9, r8
   14148:	sub	r0, r6, #20
   1414c:	mov	r1, #0
   14150:	str	r0, [r9]
   14154:	ldr	r6, [r9, #4]
   14158:	str	r1, [r6, r0]!
   1415c:	str	r7, [r6, #12]
   14160:	ldr	r4, [r2, sl, lsl #3]
   14164:	cmp	r4, #19
   14168:	bhi	141bc <sf_gen_loadi+0x184>
   1416c:	ldr	r1, [pc, #148]	; 14208 <sf_gen_loadi+0x1d0>
   14170:	add	r0, sl, #1
   14174:	cmp	sl, #15
   14178:	add	r1, pc, r1
   1417c:	str	r0, [r1, #92]	; 0x5c
   14180:	bge	141f4 <sf_gen_loadi+0x1bc>
   14184:	mov	r1, #1024	; 0x400
   14188:	lsl	r4, r1, r0
   1418c:	mov	r0, r4
   14190:	bl	f1c <malloc@plt>
   14194:	cmp	r0, #0
   14198:	str	r0, [r8, #12]
   1419c:	beq	141f4 <sf_gen_loadi+0x1bc>
   141a0:	mov	r1, #0
   141a4:	mov	r2, r4
   141a8:	add	r8, r8, #8
   141ac:	bl	f88 <memset@plt>
   141b0:	cmp	r4, #19
   141b4:	str	r4, [r8]
   141b8:	bls	141f4 <sf_gen_loadi+0x1bc>
   141bc:	ldr	r0, [sp, #8]
   141c0:	ldr	r1, [sp, #4]
   141c4:	mov	r3, #2
   141c8:	add	r0, r1, r0
   141cc:	sub	r1, r4, #20
   141d0:	str	r1, [r8]
   141d4:	ldr	r2, [r8, #4]
   141d8:	str	r3, [r2, r1]!
   141dc:	str	r2, [r6, #16]
   141e0:	str	r5, [r2, #12]
   141e4:	str	r6, [r0, #4]
   141e8:	str	r5, [r0, #8]
   141ec:	sub	sp, fp, #28
   141f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141f4:	ldr	r0, [pc, #16]	; 1420c <sf_gen_loadi+0x1d4>
   141f8:	add	r0, pc, r0
   141fc:	bl	2204 <sf_bpf_error>
   14200:	.word	0x00032494
   14204:	.word	0x000323c8
   14208:	.word	0x00032368
   1420c:	.word	0x0001519c

00014210 <sf_gen_neg>:
   14210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14214:	add	fp, sp, #28
   14218:	sub	sp, sp, #4
   1421c:	ldr	r8, [pc, #472]	; 143fc <sf_gen_neg+0x1ec>
   14220:	mov	r9, r0
   14224:	add	r8, pc, r8
   14228:	ldr	r0, [r8, #92]	; 0x5c
   1422c:	ldr	sl, [pc, #460]	; 14400 <sf_gen_neg+0x1f0>
   14230:	add	sl, pc, sl
   14234:	mov	r4, sl
   14238:	ldr	r5, [r4, r0, lsl #3]!
   1423c:	cmp	r5, #19
   14240:	bhi	14290 <sf_gen_neg+0x80>
   14244:	add	r7, r0, #1
   14248:	cmp	r0, #15
   1424c:	str	r7, [r8, #92]	; 0x5c
   14250:	bge	143f0 <sf_gen_neg+0x1e0>
   14254:	mov	r0, #1024	; 0x400
   14258:	lsl	r5, r0, r7
   1425c:	mov	r0, r5
   14260:	bl	f1c <malloc@plt>
   14264:	cmp	r0, #0
   14268:	str	r0, [r4, #12]
   1426c:	beq	143f0 <sf_gen_neg+0x1e0>
   14270:	mov	r1, #0
   14274:	mov	r2, r5
   14278:	add	r4, r4, #8
   1427c:	bl	f88 <memset@plt>
   14280:	cmp	r5, #19
   14284:	str	r5, [r4]
   14288:	bhi	14294 <sf_gen_neg+0x84>
   1428c:	b	143f0 <sf_gen_neg+0x1e0>
   14290:	mov	r7, r0
   14294:	sub	r1, r5, #20
   14298:	mov	r2, #96	; 0x60
   1429c:	str	r1, [r4]
   142a0:	ldr	r0, [r4, #4]
   142a4:	str	r2, [r0, r1]!
   142a8:	ldr	r1, [r9, #8]
   142ac:	str	r1, [r0, #12]
   142b0:	ldr	r1, [r9, #4]
   142b4:	mov	r2, r1
   142b8:	ldr	r1, [r1, #16]
   142bc:	cmp	r1, #0
   142c0:	bne	142b4 <sf_gen_neg+0xa4>
   142c4:	str	r0, [r2, #16]
   142c8:	mov	r6, sl
   142cc:	ldr	r5, [r6, r7, lsl #3]!
   142d0:	cmp	r5, #19
   142d4:	bhi	14324 <sf_gen_neg+0x114>
   142d8:	add	r4, r7, #1
   142dc:	cmp	r7, #15
   142e0:	str	r4, [r8, #92]	; 0x5c
   142e4:	bge	143f0 <sf_gen_neg+0x1e0>
   142e8:	mov	r0, #1024	; 0x400
   142ec:	lsl	r5, r0, r4
   142f0:	mov	r0, r5
   142f4:	bl	f1c <malloc@plt>
   142f8:	cmp	r0, #0
   142fc:	str	r0, [r6, #12]
   14300:	beq	143f0 <sf_gen_neg+0x1e0>
   14304:	mov	r1, #0
   14308:	mov	r2, r5
   1430c:	add	r6, r6, #8
   14310:	bl	f88 <memset@plt>
   14314:	cmp	r5, #19
   14318:	str	r5, [r6]
   1431c:	bhi	14328 <sf_gen_neg+0x118>
   14320:	b	143f0 <sf_gen_neg+0x1e0>
   14324:	mov	r4, r7
   14328:	sub	r1, r5, #20
   1432c:	mov	r2, #132	; 0x84
   14330:	str	r1, [r6]
   14334:	ldr	r0, [r6, #4]
   14338:	str	r2, [r0, r1]!
   1433c:	mov	r1, #0
   14340:	str	r1, [r0, #12]
   14344:	ldr	r1, [r9, #4]
   14348:	mov	r2, r1
   1434c:	ldr	r1, [r1, #16]
   14350:	cmp	r1, #0
   14354:	bne	14348 <sf_gen_neg+0x138>
   14358:	str	r0, [r2, #16]
   1435c:	ldr	r5, [sl, r4, lsl #3]!
   14360:	cmp	r5, #19
   14364:	bhi	143b0 <sf_gen_neg+0x1a0>
   14368:	add	r0, r4, #1
   1436c:	cmp	r4, #15
   14370:	str	r0, [r8, #92]	; 0x5c
   14374:	bge	143f0 <sf_gen_neg+0x1e0>
   14378:	mov	r1, #1024	; 0x400
   1437c:	lsl	r5, r1, r0
   14380:	mov	r0, r5
   14384:	bl	f1c <malloc@plt>
   14388:	cmp	r0, #0
   1438c:	str	r0, [sl, #12]
   14390:	beq	143f0 <sf_gen_neg+0x1e0>
   14394:	mov	r1, #0
   14398:	mov	r2, r5
   1439c:	add	sl, sl, #8
   143a0:	bl	f88 <memset@plt>
   143a4:	cmp	r5, #19
   143a8:	str	r5, [sl]
   143ac:	bls	143f0 <sf_gen_neg+0x1e0>
   143b0:	sub	r1, r5, #20
   143b4:	mov	r2, #2
   143b8:	str	r1, [sl]
   143bc:	ldr	r0, [sl, #4]
   143c0:	str	r2, [r0, r1]!
   143c4:	ldr	r1, [r9, #8]
   143c8:	str	r1, [r0, #12]
   143cc:	ldr	r1, [r9, #4]
   143d0:	mov	r2, r1
   143d4:	ldr	r1, [r1, #16]
   143d8:	cmp	r1, #0
   143dc:	bne	143d0 <sf_gen_neg+0x1c0>
   143e0:	str	r0, [r2, #16]
   143e4:	mov	r0, r9
   143e8:	sub	sp, fp, #28
   143ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143f0:	ldr	r0, [pc, #12]	; 14404 <sf_gen_neg+0x1f4>
   143f4:	add	r0, pc, r0
   143f8:	bl	2204 <sf_bpf_error>
   143fc:	.word	0x000322bc
   14400:	.word	0x000321f0
   14404:	.word	0x00014fa0

00014408 <sf_gen_arth>:
   14408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1440c:	add	fp, sp, #28
   14410:	sub	sp, sp, #12
   14414:	ldr	r3, [pc, #744]	; 14704 <sf_gen_arth+0x2fc>
   14418:	mov	r8, r1
   1441c:	add	r3, pc, r3
   14420:	ldr	r1, [r3, #92]	; 0x5c
   14424:	ldr	sl, [pc, #732]	; 14708 <sf_gen_arth+0x300>
   14428:	str	r8, [sp, #8]
   1442c:	str	r0, [sp]
   14430:	add	sl, pc, sl
   14434:	mov	r6, sl
   14438:	ldr	r7, [r6, r1, lsl #3]!
   1443c:	cmp	r7, #19
   14440:	bhi	144a4 <sf_gen_arth+0x9c>
   14444:	add	r5, r1, #1
   14448:	cmp	r1, #15
   1444c:	str	r5, [r3, #92]	; 0x5c
   14450:	bge	146f8 <sf_gen_arth+0x2f0>
   14454:	mov	r0, #1024	; 0x400
   14458:	mov	r9, r2
   1445c:	lsl	r7, r0, r5
   14460:	mov	r0, r7
   14464:	bl	f1c <malloc@plt>
   14468:	cmp	r0, #0
   1446c:	str	r0, [r6, #12]
   14470:	beq	146f8 <sf_gen_arth+0x2f0>
   14474:	mov	r1, #0
   14478:	mov	r2, r7
   1447c:	add	r4, r6, #8
   14480:	bl	f88 <memset@plt>
   14484:	cmp	r7, #20
   14488:	str	r7, [r4]
   1448c:	bcc	146f8 <sf_gen_arth+0x2f0>
   14490:	ldr	r3, [pc, #628]	; 1470c <sf_gen_arth+0x304>
   14494:	add	r6, sl, r5, lsl #3
   14498:	mov	r2, r9
   1449c:	add	r3, pc, r3
   144a0:	b	144ac <sf_gen_arth+0xa4>
   144a4:	mov	r5, r1
   144a8:	mov	r4, r6
   144ac:	sub	r0, r7, #20
   144b0:	mov	r1, #97	; 0x61
   144b4:	str	r0, [r4]
   144b8:	ldr	r9, [r4, #4]
   144bc:	str	r1, [r9, r0]!
   144c0:	str	r2, [sp, #4]
   144c4:	ldr	r0, [r2, #8]
   144c8:	str	r0, [r9, #12]
   144cc:	ldr	r7, [sl, r5, lsl #3]
   144d0:	cmp	r7, #19
   144d4:	bhi	14534 <sf_gen_arth+0x12c>
   144d8:	add	r8, r5, #1
   144dc:	cmp	r5, #15
   144e0:	str	r8, [r3, #92]	; 0x5c
   144e4:	bge	146f8 <sf_gen_arth+0x2f0>
   144e8:	mov	r0, #1024	; 0x400
   144ec:	lsl	r7, r0, r8
   144f0:	mov	r0, r7
   144f4:	bl	f1c <malloc@plt>
   144f8:	cmp	r0, #0
   144fc:	str	r0, [r6, #12]
   14500:	beq	146f8 <sf_gen_arth+0x2f0>
   14504:	mov	r1, #0
   14508:	mov	r2, r7
   1450c:	add	r4, r6, #8
   14510:	bl	f88 <memset@plt>
   14514:	cmp	r7, #20
   14518:	str	r7, [r4]
   1451c:	bcc	146f8 <sf_gen_arth+0x2f0>
   14520:	ldr	r3, [pc, #488]	; 14710 <sf_gen_arth+0x308>
   14524:	ldr	r2, [sp, #4]
   14528:	add	r6, sl, r8, lsl #3
   1452c:	add	r3, pc, r3
   14530:	b	1453c <sf_gen_arth+0x134>
   14534:	mov	r8, r5
   14538:	mov	r4, r6
   1453c:	sub	r0, r7, #20
   14540:	mov	r1, #96	; 0x60
   14544:	str	r0, [r4]
   14548:	ldr	r5, [r4, #4]
   1454c:	str	r1, [r5, r0]!
   14550:	ldr	r0, [sp, #8]
   14554:	ldr	r0, [r0, #8]
   14558:	str	r0, [r5, #12]
   1455c:	ldr	r7, [r6]
   14560:	cmp	r7, #19
   14564:	bhi	145c0 <sf_gen_arth+0x1b8>
   14568:	add	r4, r8, #1
   1456c:	cmp	r8, #15
   14570:	str	r4, [r3, #92]	; 0x5c
   14574:	bge	146f8 <sf_gen_arth+0x2f0>
   14578:	mov	r0, #1024	; 0x400
   1457c:	lsl	r7, r0, r4
   14580:	mov	r0, r7
   14584:	bl	f1c <malloc@plt>
   14588:	cmp	r0, #0
   1458c:	str	r0, [r6, #12]
   14590:	beq	146f8 <sf_gen_arth+0x2f0>
   14594:	mov	r1, #0
   14598:	mov	r2, r7
   1459c:	add	r6, r6, #8
   145a0:	bl	f88 <memset@plt>
   145a4:	str	r7, [r6]
   145a8:	cmp	r7, #19
   145ac:	ldr	r3, [pc, #352]	; 14714 <sf_gen_arth+0x30c>
   145b0:	ldr	r2, [sp, #4]
   145b4:	add	r3, pc, r3
   145b8:	bhi	145c4 <sf_gen_arth+0x1bc>
   145bc:	b	146f8 <sf_gen_arth+0x2f0>
   145c0:	mov	r4, r8
   145c4:	ldr	r0, [sp]
   145c8:	sub	r7, r7, #20
   145cc:	str	r7, [r6]
   145d0:	orr	r1, r0, #12
   145d4:	ldr	r0, [r6, #4]
   145d8:	str	r1, [r0, r7]!
   145dc:	mov	r1, r5
   145e0:	mov	r7, r1
   145e4:	ldr	r1, [r1, #16]
   145e8:	cmp	r1, #0
   145ec:	bne	145e0 <sf_gen_arth+0x1d8>
   145f0:	mov	r1, r9
   145f4:	str	r0, [r7, #16]
   145f8:	mov	r0, r1
   145fc:	ldr	r1, [r1, #16]
   14600:	cmp	r1, #0
   14604:	bne	145f8 <sf_gen_arth+0x1f0>
   14608:	str	r5, [r0, #16]
   1460c:	ldr	r0, [r2, #4]
   14610:	mov	r1, r0
   14614:	ldr	r0, [r0, #16]
   14618:	cmp	r0, #0
   1461c:	bne	14610 <sf_gen_arth+0x208>
   14620:	ldr	r6, [sp, #8]
   14624:	str	r9, [r1, #16]
   14628:	ldr	r0, [r2, #4]
   1462c:	ldr	r1, [r6, #4]
   14630:	mov	r7, r1
   14634:	ldr	r1, [r1, #16]
   14638:	cmp	r1, #0
   1463c:	bne	14630 <sf_gen_arth+0x228>
   14640:	str	r0, [r7, #16]
   14644:	mov	r7, #0
   14648:	ldr	r0, [r6, #8]
   1464c:	ldr	r1, [pc, #196]	; 14718 <sf_gen_arth+0x310>
   14650:	ldr	r5, [sl, r4, lsl #3]!
   14654:	add	r1, pc, r1
   14658:	cmp	r5, #19
   1465c:	str	r7, [r1, r0, lsl #2]
   14660:	ldr	r0, [r2, #8]
   14664:	str	r7, [r1, r0, lsl #2]
   14668:	bhi	146b4 <sf_gen_arth+0x2ac>
   1466c:	add	r0, r4, #1
   14670:	cmp	r4, #15
   14674:	str	r0, [r3, #92]	; 0x5c
   14678:	bge	146f8 <sf_gen_arth+0x2f0>
   1467c:	mov	r1, #1024	; 0x400
   14680:	lsl	r5, r1, r0
   14684:	mov	r0, r5
   14688:	bl	f1c <malloc@plt>
   1468c:	cmp	r0, #0
   14690:	str	r0, [sl, #12]
   14694:	beq	146f8 <sf_gen_arth+0x2f0>
   14698:	mov	r1, #0
   1469c:	mov	r2, r5
   146a0:	add	sl, sl, #8
   146a4:	bl	f88 <memset@plt>
   146a8:	cmp	r5, #19
   146ac:	str	r5, [sl]
   146b0:	bls	146f8 <sf_gen_arth+0x2f0>
   146b4:	sub	r0, r5, #20
   146b8:	mov	r1, #2
   146bc:	str	r0, [sl]
   146c0:	ldr	r4, [sl, #4]
   146c4:	str	r1, [r4, r0]!
   146c8:	bl	1309c <alloc_reg>
   146cc:	str	r0, [r4, #12]
   146d0:	str	r0, [r6, #8]
   146d4:	ldr	r0, [r6, #4]
   146d8:	mov	r1, r0
   146dc:	ldr	r0, [r0, #16]
   146e0:	cmp	r0, #0
   146e4:	bne	146d8 <sf_gen_arth+0x2d0>
   146e8:	str	r4, [r1, #16]
   146ec:	mov	r0, r6
   146f0:	sub	sp, fp, #28
   146f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146f8:	ldr	r0, [pc, #28]	; 1471c <sf_gen_arth+0x314>
   146fc:	add	r0, pc, r0
   14700:	bl	2204 <sf_bpf_error>
   14704:	.word	0x000320c4
   14708:	.word	0x00031ff0
   1470c:	.word	0x00032044
   14710:	.word	0x00031fb4
   14714:	.word	0x00031f2c
   14718:	.word	0x00031e4c
   1471c:	.word	0x00014c98

00014720 <sf_gen_greater>:
   14720:	mov	r1, r0
   14724:	mov	r0, #48	; 0x30
   14728:	b	1472c <gen_len>

0001472c <gen_len>:
   1472c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14730:	add	fp, sp, #28
   14734:	sub	sp, sp, #4
   14738:	ldr	r3, [pc, #304]	; 14870 <gen_len+0x144>
   1473c:	mov	sl, r1
   14740:	add	r3, pc, r3
   14744:	ldr	r1, [r3, #92]	; 0x5c
   14748:	ldr	r9, [pc, #292]	; 14874 <gen_len+0x148>
   1474c:	add	r9, pc, r9
   14750:	mov	r7, r9
   14754:	ldr	r6, [r7, r1, lsl #3]!
   14758:	cmp	r6, #19
   1475c:	bhi	147c0 <gen_len+0x94>
   14760:	add	r4, r1, #1
   14764:	cmp	r1, #15
   14768:	str	r0, [sp]
   1476c:	str	r4, [r3, #92]	; 0x5c
   14770:	bge	14864 <gen_len+0x138>
   14774:	mov	r0, #1024	; 0x400
   14778:	lsl	r6, r0, r4
   1477c:	mov	r0, r6
   14780:	bl	f1c <malloc@plt>
   14784:	cmp	r0, #0
   14788:	str	r0, [r7, #12]
   1478c:	beq	14864 <gen_len+0x138>
   14790:	mov	r1, #0
   14794:	mov	r2, r6
   14798:	add	r5, r7, #8
   1479c:	bl	f88 <memset@plt>
   147a0:	cmp	r6, #20
   147a4:	str	r6, [r5]
   147a8:	bcc	14864 <gen_len+0x138>
   147ac:	ldr	r0, [sp]
   147b0:	ldr	r3, [pc, #192]	; 14878 <gen_len+0x14c>
   147b4:	add	r7, r9, r4, lsl #3
   147b8:	add	r3, pc, r3
   147bc:	b	147c8 <gen_len+0x9c>
   147c0:	mov	r4, r1
   147c4:	mov	r5, r7
   147c8:	sub	r2, r6, #20
   147cc:	mov	r1, #128	; 0x80
   147d0:	str	r2, [r5]
   147d4:	ldr	r8, [r5, #4]
   147d8:	str	r1, [r8, r2]!
   147dc:	ldr	r6, [r9, r4, lsl #3]
   147e0:	cmp	r6, #207	; 0xcf
   147e4:	bhi	14838 <gen_len+0x10c>
   147e8:	mov	r5, r0
   147ec:	add	r0, r4, #1
   147f0:	cmp	r4, #15
   147f4:	str	r0, [r3, #92]	; 0x5c
   147f8:	bge	14864 <gen_len+0x138>
   147fc:	mov	r1, #1024	; 0x400
   14800:	lsl	r6, r1, r0
   14804:	mov	r0, r6
   14808:	bl	f1c <malloc@plt>
   1480c:	cmp	r0, #0
   14810:	str	r0, [r7, #12]
   14814:	beq	14864 <gen_len+0x138>
   14818:	mov	r1, #0
   1481c:	mov	r2, r6
   14820:	add	r7, r7, #8
   14824:	bl	f88 <memset@plt>
   14828:	cmp	r6, #207	; 0xcf
   1482c:	mov	r0, r5
   14830:	str	r6, [r7]
   14834:	bls	14864 <gen_len+0x138>
   14838:	orr	r1, r0, #5
   1483c:	sub	r0, r6, #208	; 0xd0
   14840:	str	r0, [r7]
   14844:	ldr	r2, [r7, #4]
   14848:	add	r0, r2, r0
   1484c:	str	r8, [r0, #4]
   14850:	str	r1, [r0, #8]
   14854:	str	sl, [r0, #20]
   14858:	str	r0, [r0, #96]	; 0x60
   1485c:	sub	sp, fp, #28
   14860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14864:	ldr	r0, [pc, #16]	; 1487c <gen_len+0x150>
   14868:	add	r0, pc, r0
   1486c:	bl	2204 <sf_bpf_error>
   14870:	.word	0x00031da0
   14874:	.word	0x00031cd4
   14878:	.word	0x00031d28
   1487c:	.word	0x00014b2c

00014880 <sf_gen_less>:
   14880:	push	{fp, lr}
   14884:	mov	fp, sp
   14888:	mov	r1, r0
   1488c:	mov	r0, #32
   14890:	bl	1472c <gen_len>
   14894:	ldr	r1, [r0, #44]	; 0x2c
   14898:	clz	r1, r1
   1489c:	lsr	r1, r1, #5
   148a0:	str	r1, [r0, #44]	; 0x2c
   148a4:	pop	{fp, pc}

000148a8 <sf_gen_byteop>:
   148a8:	push	{r4, r5, r6, r7, fp, lr}
   148ac:	add	fp, sp, #16
   148b0:	mov	r4, r2
   148b4:	sub	r2, r0, #38	; 0x26
   148b8:	cmp	r2, #24
   148bc:	bhi	1499c <sf_gen_byteop+0xf4>
   148c0:	add	r0, pc, #4
   148c4:	ldr	r2, [r0, r2, lsl #2]
   148c8:	add	pc, r0, r2
   148cc:	.word	0x00000064
   148d0:	.word	0x000002cc
   148d4:	.word	0x000002cc
   148d8:	.word	0x000002cc
   148dc:	.word	0x000002cc
   148e0:	.word	0x000002cc
   148e4:	.word	0x000002cc
   148e8:	.word	0x000002cc
   148ec:	.word	0x000002cc
   148f0:	.word	0x000002cc
   148f4:	.word	0x000002cc
   148f8:	.word	0x000002cc
   148fc:	.word	0x000002cc
   14900:	.word	0x000002cc
   14904:	.word	0x000002cc
   14908:	.word	0x000002cc
   1490c:	.word	0x000002cc
   14910:	.word	0x000002cc
   14914:	.word	0x000002cc
   14918:	.word	0x000002cc
   1491c:	.word	0x000002cc
   14920:	.word	0x000002cc
   14924:	.word	0x00000158
   14928:	.word	0x000001f4
   1492c:	.word	0x00000144
   14930:	ldr	r1, [pc, #640]	; 14bb8 <sf_gen_byteop+0x310>
   14934:	add	r1, pc, r1
   14938:	ldr	r0, [r1, #92]	; 0x5c
   1493c:	ldr	r6, [pc, #632]	; 14bbc <sf_gen_byteop+0x314>
   14940:	add	r6, pc, r6
   14944:	ldr	r5, [r6, r0, lsl #3]!
   14948:	cmp	r5, #19
   1494c:	bhi	14ad4 <sf_gen_byteop+0x22c>
   14950:	add	r7, r0, #1
   14954:	cmp	r0, #15
   14958:	str	r7, [r1, #92]	; 0x5c
   1495c:	bge	14b9c <sf_gen_byteop+0x2f4>
   14960:	mov	r0, #1024	; 0x400
   14964:	lsl	r5, r0, r7
   14968:	mov	r0, r5
   1496c:	bl	f1c <malloc@plt>
   14970:	cmp	r0, #0
   14974:	str	r0, [r6, #12]
   14978:	beq	14b9c <sf_gen_byteop+0x2f4>
   1497c:	mov	r1, #0
   14980:	mov	r2, r5
   14984:	add	r6, r6, #8
   14988:	bl	f88 <memset@plt>
   1498c:	cmp	r5, #19
   14990:	str	r5, [r6]
   14994:	bhi	14ad8 <sf_gen_byteop+0x230>
   14998:	b	14b9c <sf_gen_byteop+0x2f4>
   1499c:	cmp	r0, #124	; 0x7c
   149a0:	bne	14b98 <sf_gen_byteop+0x2f0>
   149a4:	ldr	r1, [pc, #516]	; 14bb0 <sf_gen_byteop+0x308>
   149a8:	add	r1, pc, r1
   149ac:	ldr	r0, [r1, #92]	; 0x5c
   149b0:	ldr	r6, [pc, #508]	; 14bb4 <sf_gen_byteop+0x30c>
   149b4:	add	r6, pc, r6
   149b8:	ldr	r5, [r6, r0, lsl #3]!
   149bc:	cmp	r5, #19
   149c0:	bhi	14ae4 <sf_gen_byteop+0x23c>
   149c4:	add	r7, r0, #1
   149c8:	cmp	r0, #15
   149cc:	str	r7, [r1, #92]	; 0x5c
   149d0:	bge	14b9c <sf_gen_byteop+0x2f4>
   149d4:	mov	r0, #1024	; 0x400
   149d8:	lsl	r5, r0, r7
   149dc:	mov	r0, r5
   149e0:	bl	f1c <malloc@plt>
   149e4:	cmp	r0, #0
   149e8:	str	r0, [r6, #12]
   149ec:	beq	14b9c <sf_gen_byteop+0x2f4>
   149f0:	mov	r1, #0
   149f4:	mov	r2, r5
   149f8:	add	r6, r6, #8
   149fc:	bl	f88 <memset@plt>
   14a00:	cmp	r5, #19
   14a04:	str	r5, [r6]
   14a08:	bhi	14ae8 <sf_gen_byteop+0x240>
   14a0c:	b	14b9c <sf_gen_byteop+0x2f4>
   14a10:	mov	r0, #1
   14a14:	mov	r2, #16
   14a18:	mov	r3, r4
   14a1c:	pop	{r4, r5, r6, r7, fp, lr}
   14a20:	b	14bcc <gen_cmp_gt>
   14a24:	mov	r0, #1
   14a28:	mov	r2, #16
   14a2c:	bl	1669c <gen_load_a>
   14a30:	ldr	r1, [pc, #368]	; 14ba8 <sf_gen_byteop+0x300>
   14a34:	mov	r5, r0
   14a38:	add	r1, pc, r1
   14a3c:	ldr	r0, [r1, #92]	; 0x5c
   14a40:	ldr	r7, [pc, #356]	; 14bac <sf_gen_byteop+0x304>
   14a44:	add	r7, pc, r7
   14a48:	ldr	r6, [r7, r0, lsl #3]!
   14a4c:	cmp	r6, #207	; 0xcf
   14a50:	bhi	14a9c <sf_gen_byteop+0x1f4>
   14a54:	add	r2, r0, #1
   14a58:	cmp	r0, #15
   14a5c:	str	r2, [r1, #92]	; 0x5c
   14a60:	bge	14b9c <sf_gen_byteop+0x2f4>
   14a64:	mov	r0, #1024	; 0x400
   14a68:	lsl	r6, r0, r2
   14a6c:	mov	r0, r6
   14a70:	bl	f1c <malloc@plt>
   14a74:	cmp	r0, #0
   14a78:	str	r0, [r7, #12]
   14a7c:	beq	14b9c <sf_gen_byteop+0x2f4>
   14a80:	mov	r1, #0
   14a84:	mov	r2, r6
   14a88:	add	r7, r7, #8
   14a8c:	bl	f88 <memset@plt>
   14a90:	cmp	r6, #207	; 0xcf
   14a94:	str	r6, [r7]
   14a98:	bls	14b9c <sf_gen_byteop+0x2f4>
   14a9c:	sub	r0, r6, #208	; 0xd0
   14aa0:	str	r0, [r7]
   14aa4:	ldr	r1, [r7, #4]
   14aa8:	add	r0, r1, r0
   14aac:	mov	r1, #53	; 0x35
   14ab0:	str	r5, [r0, #4]
   14ab4:	str	r1, [r0, #8]
   14ab8:	str	r4, [r0, #20]
   14abc:	b	14b80 <sf_gen_byteop+0x2d8>
   14ac0:	mov	r0, #1
   14ac4:	mov	r2, #16
   14ac8:	mov	r3, r4
   14acc:	pop	{r4, r5, r6, r7, fp, lr}
   14ad0:	b	9ef4 <gen_cmp>
   14ad4:	mov	r7, r0
   14ad8:	sub	r0, r5, #20
   14adc:	mov	r1, #84	; 0x54
   14ae0:	b	14af0 <sf_gen_byteop+0x248>
   14ae4:	mov	r7, r0
   14ae8:	sub	r0, r5, #20
   14aec:	mov	r1, #68	; 0x44
   14af0:	str	r0, [r6]
   14af4:	ldr	r5, [r6, #4]
   14af8:	str	r1, [r5, r0]!
   14afc:	str	r4, [r5, #12]
   14b00:	ldr	r6, [pc, #184]	; 14bc0 <sf_gen_byteop+0x318>
   14b04:	add	r6, pc, r6
   14b08:	ldr	r4, [r6, r7, lsl #3]!
   14b0c:	cmp	r4, #207	; 0xcf
   14b10:	bhi	14b64 <sf_gen_byteop+0x2bc>
   14b14:	ldr	r1, [pc, #168]	; 14bc4 <sf_gen_byteop+0x31c>
   14b18:	add	r0, r7, #1
   14b1c:	cmp	r7, #15
   14b20:	add	r1, pc, r1
   14b24:	str	r0, [r1, #92]	; 0x5c
   14b28:	bge	14b9c <sf_gen_byteop+0x2f4>
   14b2c:	mov	r1, #1024	; 0x400
   14b30:	lsl	r4, r1, r0
   14b34:	mov	r0, r4
   14b38:	bl	f1c <malloc@plt>
   14b3c:	cmp	r0, #0
   14b40:	str	r0, [r6, #12]
   14b44:	beq	14b9c <sf_gen_byteop+0x2f4>
   14b48:	mov	r1, #0
   14b4c:	mov	r2, r4
   14b50:	add	r6, r6, #8
   14b54:	bl	f88 <memset@plt>
   14b58:	cmp	r4, #207	; 0xcf
   14b5c:	str	r4, [r6]
   14b60:	bls	14b9c <sf_gen_byteop+0x2f4>
   14b64:	sub	r0, r4, #208	; 0xd0
   14b68:	str	r0, [r6]
   14b6c:	ldr	r1, [r6, #4]
   14b70:	add	r0, r1, r0
   14b74:	mov	r1, #21
   14b78:	str	r5, [r0, #4]
   14b7c:	str	r1, [r0, #8]
   14b80:	ldr	r1, [r0, #44]	; 0x2c
   14b84:	clz	r1, r1
   14b88:	lsr	r1, r1, #5
   14b8c:	str	r1, [r0, #44]	; 0x2c
   14b90:	str	r0, [r0, #96]	; 0x60
   14b94:	pop	{r4, r5, r6, r7, fp, pc}
   14b98:	bl	100c <abort@plt>
   14b9c:	ldr	r0, [pc, #36]	; 14bc8 <sf_gen_byteop+0x320>
   14ba0:	add	r0, pc, r0
   14ba4:	bl	2204 <sf_bpf_error>
   14ba8:	.word	0x00031aa8
   14bac:	.word	0x000319dc
   14bb0:	.word	0x00031b38
   14bb4:	.word	0x00031a6c
   14bb8:	.word	0x00031bac
   14bbc:	.word	0x00031ae0
   14bc0:	.word	0x0003191c
   14bc4:	.word	0x000319c0
   14bc8:	.word	0x000147f4

00014bcc <gen_cmp_gt>:
   14bcc:	push	{r4, r5, r6, r7, fp, lr}
   14bd0:	add	fp, sp, #16
   14bd4:	mov	r4, r3
   14bd8:	bl	1669c <gen_load_a>
   14bdc:	ldr	r1, [pc, #152]	; 14c7c <gen_cmp_gt+0xb0>
   14be0:	mov	r5, r0
   14be4:	add	r1, pc, r1
   14be8:	ldr	r0, [r1, #92]	; 0x5c
   14bec:	ldr	r7, [pc, #140]	; 14c80 <gen_cmp_gt+0xb4>
   14bf0:	add	r7, pc, r7
   14bf4:	ldr	r6, [r7, r0, lsl #3]!
   14bf8:	cmp	r6, #207	; 0xcf
   14bfc:	bhi	14c48 <gen_cmp_gt+0x7c>
   14c00:	add	r2, r0, #1
   14c04:	cmp	r0, #15
   14c08:	str	r2, [r1, #92]	; 0x5c
   14c0c:	bge	14c70 <gen_cmp_gt+0xa4>
   14c10:	mov	r0, #1024	; 0x400
   14c14:	lsl	r6, r0, r2
   14c18:	mov	r0, r6
   14c1c:	bl	f1c <malloc@plt>
   14c20:	cmp	r0, #0
   14c24:	str	r0, [r7, #12]
   14c28:	beq	14c70 <gen_cmp_gt+0xa4>
   14c2c:	mov	r1, #0
   14c30:	mov	r2, r6
   14c34:	add	r7, r7, #8
   14c38:	bl	f88 <memset@plt>
   14c3c:	cmp	r6, #207	; 0xcf
   14c40:	str	r6, [r7]
   14c44:	bls	14c70 <gen_cmp_gt+0xa4>
   14c48:	sub	r0, r6, #208	; 0xd0
   14c4c:	str	r0, [r7]
   14c50:	ldr	r1, [r7, #4]
   14c54:	add	r0, r1, r0
   14c58:	mov	r1, #37	; 0x25
   14c5c:	str	r5, [r0, #4]
   14c60:	str	r1, [r0, #8]
   14c64:	str	r4, [r0, #20]
   14c68:	str	r0, [r0, #96]	; 0x60
   14c6c:	pop	{r4, r5, r6, r7, fp, pc}
   14c70:	ldr	r0, [pc, #12]	; 14c84 <gen_cmp_gt+0xb8>
   14c74:	add	r0, pc, r0
   14c78:	bl	2204 <sf_bpf_error>
   14c7c:	.word	0x000318fc
   14c80:	.word	0x00031830
   14c84:	.word	0x00014720

00014c88 <sf_gen_broadcast>:
   14c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c8c:	add	fp, sp, #28
   14c90:	sub	sp, sp, #28
   14c94:	cmp	r0, #2
   14c98:	bcs	14dc4 <sf_gen_broadcast+0x13c>
   14c9c:	ldr	r5, [pc, #2960]	; 15834 <sf_gen_broadcast+0xbac>
   14ca0:	add	r5, pc, r5
   14ca4:	ldr	r0, [r5, #36]	; 0x24
   14ca8:	sub	r1, r0, #105	; 0x69
   14cac:	cmp	r1, #58	; 0x3a
   14cb0:	bhi	14e98 <sf_gen_broadcast+0x210>
   14cb4:	add	r0, pc, #4
   14cb8:	ldr	r1, [r0, r1, lsl #2]
   14cbc:	add	pc, r0, r1
   14cc0:	.word	0x000000ec
   14cc4:	.word	0x00000444
   14cc8:	.word	0x00000444
   14ccc:	.word	0x00000444
   14cd0:	.word	0x00000444
   14cd4:	.word	0x00000444
   14cd8:	.word	0x00000444
   14cdc:	.word	0x00000444
   14ce0:	.word	0x00000444
   14ce4:	.word	0x00000444
   14ce8:	.word	0x00000444
   14cec:	.word	0x00000444
   14cf0:	.word	0x00000444
   14cf4:	.word	0x00000444
   14cf8:	.word	0x000000ec
   14cfc:	.word	0x00000444
   14d00:	.word	0x00000444
   14d04:	.word	0x00000240
   14d08:	.word	0x00000470
   14d0c:	.word	0x00000444
   14d10:	.word	0x00000444
   14d14:	.word	0x00000444
   14d18:	.word	0x000000ec
   14d1c:	.word	0x00000444
   14d20:	.word	0x00000260
   14d24:	.word	0x00000444
   14d28:	.word	0x00000444
   14d2c:	.word	0x00000444
   14d30:	.word	0x00000444
   14d34:	.word	0x00000444
   14d38:	.word	0x00000444
   14d3c:	.word	0x00000444
   14d40:	.word	0x00000444
   14d44:	.word	0x00000444
   14d48:	.word	0x00000444
   14d4c:	.word	0x00000444
   14d50:	.word	0x00000444
   14d54:	.word	0x00000444
   14d58:	.word	0x00000444
   14d5c:	.word	0x00000444
   14d60:	.word	0x00000444
   14d64:	.word	0x00000444
   14d68:	.word	0x00000444
   14d6c:	.word	0x00000444
   14d70:	.word	0x00000444
   14d74:	.word	0x00000444
   14d78:	.word	0x00000444
   14d7c:	.word	0x00000444
   14d80:	.word	0x00000444
   14d84:	.word	0x00000444
   14d88:	.word	0x00000444
   14d8c:	.word	0x00000444
   14d90:	.word	0x00000444
   14d94:	.word	0x00000444
   14d98:	.word	0x00000444
   14d9c:	.word	0x00000444
   14da0:	.word	0x00000444
   14da4:	.word	0x00000444
   14da8:	.word	0x000000ec
   14dac:	ldr	r0, [pc, #2692]	; 15838 <sf_gen_broadcast+0xbb0>
   14db0:	mov	r1, #2
   14db4:	add	r0, pc, r0
   14db8:	sub	sp, fp, #28
   14dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc0:	b	c6ec <gen_wlanhostop>
   14dc4:	bne	15818 <sf_gen_broadcast+0xb90>
   14dc8:	ldr	r4, [pc, #2688]	; 15850 <sf_gen_broadcast+0xbc8>
   14dcc:	add	r4, pc, r4
   14dd0:	ldr	r0, [r4, #28]
   14dd4:	cmn	r0, #1
   14dd8:	beq	15824 <sf_gen_broadcast+0xb9c>
   14ddc:	mov	r0, #2048	; 0x800
   14de0:	bl	6e1c <gen_linktype>
   14de4:	ldr	r1, [r4, #48]	; 0x30
   14de8:	ldr	r2, [r4, #28]
   14dec:	mov	r3, r4
   14df0:	add	r9, r1, #16
   14df4:	ldrb	r1, [r4, #16]
   14df8:	str	r2, [sp, #12]
   14dfc:	str	r0, [sp, #4]
   14e00:	cmp	r1, #0
   14e04:	beq	14ef8 <sf_gen_broadcast+0x270>
   14e08:	ldr	r5, [r3, #100]	; 0x64
   14e0c:	cmn	r5, #1
   14e10:	bne	14e28 <sf_gen_broadcast+0x1a0>
   14e14:	bl	1309c <alloc_reg>
   14e18:	ldr	r3, [pc, #2616]	; 15858 <sf_gen_broadcast+0xbd0>
   14e1c:	mov	r5, r0
   14e20:	add	r3, pc, r3
   14e24:	str	r0, [r3, #100]	; 0x64
   14e28:	ldr	r0, [r3, #92]	; 0x5c
   14e2c:	ldr	sl, [pc, #2600]	; 1585c <sf_gen_broadcast+0xbd4>
   14e30:	add	sl, pc, sl
   14e34:	mov	r7, sl
   14e38:	ldr	r6, [r7, r0, lsl #3]!
   14e3c:	cmp	r6, #19
   14e40:	bhi	14f3c <sf_gen_broadcast+0x2b4>
   14e44:	add	r4, r0, #1
   14e48:	cmp	r0, #15
   14e4c:	str	r4, [r3, #92]	; 0x5c
   14e50:	bge	155f0 <sf_gen_broadcast+0x968>
   14e54:	mov	r0, #1024	; 0x400
   14e58:	lsl	r6, r0, r4
   14e5c:	mov	r0, r6
   14e60:	bl	f1c <malloc@plt>
   14e64:	cmp	r0, #0
   14e68:	str	r0, [r7, #12]
   14e6c:	beq	155f0 <sf_gen_broadcast+0x968>
   14e70:	mov	r1, #0
   14e74:	mov	r2, r6
   14e78:	add	r7, r7, #8
   14e7c:	bl	f88 <memset@plt>
   14e80:	str	r6, [r7]
   14e84:	cmp	r6, #19
   14e88:	ldr	r3, [pc, #2512]	; 15860 <sf_gen_broadcast+0xbd8>
   14e8c:	add	r3, pc, r3
   14e90:	bhi	14f40 <sf_gen_broadcast+0x2b8>
   14e94:	b	155f0 <sf_gen_broadcast+0x968>
   14e98:	sub	r1, r0, #1
   14e9c:	cmp	r1, #9
   14ea0:	bhi	150fc <sf_gen_broadcast+0x474>
   14ea4:	add	r0, pc, #4
   14ea8:	ldr	r1, [r0, r1, lsl #2]
   14eac:	add	pc, r0, r1
   14eb0:	.word	0x00000028
   14eb4:	.word	0x00000254
   14eb8:	.word	0x00000254
   14ebc:	.word	0x00000254
   14ec0:	.word	0x00000254
   14ec4:	.word	0x00000050
   14ec8:	.word	0x00000070
   14ecc:	.word	0x00000254
   14ed0:	.word	0x00000254
   14ed4:	.word	0x00000260
   14ed8:	ldr	r1, [r5, #52]	; 0x34
   14edc:	ldr	r3, [pc, #2392]	; 1583c <sf_gen_broadcast+0xbb4>
   14ee0:	mov	r0, #1
   14ee4:	add	r3, pc, r3
   14ee8:	mov	r2, #6
   14eec:	sub	sp, fp, #28
   14ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ef4:	b	1b0ec <gen_bcmp>
   14ef8:	ldr	r4, [r3, #92]	; 0x5c
   14efc:	b	14fc0 <sf_gen_broadcast+0x338>
   14f00:	ldr	r3, [pc, #2364]	; 15844 <sf_gen_broadcast+0xbbc>
   14f04:	mov	r0, #1
   14f08:	mov	r1, #2
   14f0c:	add	r3, pc, r3
   14f10:	mov	r2, #6
   14f14:	sub	sp, fp, #28
   14f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f1c:	b	1b0ec <gen_bcmp>
   14f20:	add	r3, r5, #1
   14f24:	mov	r0, #1
   14f28:	mov	r1, #1
   14f2c:	mov	r2, #1
   14f30:	sub	sp, fp, #28
   14f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f38:	b	1b0ec <gen_bcmp>
   14f3c:	mov	r4, r0
   14f40:	sub	r0, r6, #20
   14f44:	mov	r1, #97	; 0x61
   14f48:	str	r0, [r7]
   14f4c:	ldr	r6, [r7, #4]
   14f50:	str	r1, [r6, r0]!
   14f54:	cmp	r6, #0
   14f58:	str	r5, [r6, #12]
   14f5c:	beq	14fc0 <sf_gen_broadcast+0x338>
   14f60:	ldr	r5, [sl, r4, lsl #3]!
   14f64:	cmp	r5, #19
   14f68:	bhi	15228 <sf_gen_broadcast+0x5a0>
   14f6c:	add	r8, r4, #1
   14f70:	cmp	r4, #15
   14f74:	str	r8, [r3, #92]	; 0x5c
   14f78:	bge	155f0 <sf_gen_broadcast+0x968>
   14f7c:	mov	r0, #1024	; 0x400
   14f80:	lsl	r5, r0, r8
   14f84:	mov	r0, r5
   14f88:	bl	f1c <malloc@plt>
   14f8c:	cmp	r0, #0
   14f90:	str	r0, [sl, #12]
   14f94:	beq	155f0 <sf_gen_broadcast+0x968>
   14f98:	mov	r1, #0
   14f9c:	mov	r2, r5
   14fa0:	add	sl, sl, #8
   14fa4:	bl	f88 <memset@plt>
   14fa8:	str	r5, [sl]
   14fac:	cmp	r5, #19
   14fb0:	ldr	r3, [pc, #2220]	; 15864 <sf_gen_broadcast+0xbdc>
   14fb4:	add	r3, pc, r3
   14fb8:	bhi	1522c <sf_gen_broadcast+0x5a4>
   14fbc:	b	155f0 <sf_gen_broadcast+0x968>
   14fc0:	ldr	r6, [pc, #2188]	; 15854 <sf_gen_broadcast+0xbcc>
   14fc4:	add	r6, pc, r6
   14fc8:	ldr	r5, [r6, r4, lsl #3]!
   14fcc:	cmp	r5, #19
   14fd0:	bhi	15028 <sf_gen_broadcast+0x3a0>
   14fd4:	add	r8, r4, #1
   14fd8:	cmp	r4, #15
   14fdc:	str	r8, [r3, #92]	; 0x5c
   14fe0:	bge	155f0 <sf_gen_broadcast+0x968>
   14fe4:	mov	r0, #1024	; 0x400
   14fe8:	lsl	r5, r0, r8
   14fec:	mov	r0, r5
   14ff0:	bl	f1c <malloc@plt>
   14ff4:	cmp	r0, #0
   14ff8:	str	r0, [r6, #12]
   14ffc:	beq	155f0 <sf_gen_broadcast+0x968>
   15000:	mov	r1, #0
   15004:	mov	r2, r5
   15008:	add	r6, r6, #8
   1500c:	bl	f88 <memset@plt>
   15010:	str	r5, [r6]
   15014:	cmp	r5, #19
   15018:	ldr	r3, [pc, #2120]	; 15868 <sf_gen_broadcast+0xbe0>
   1501c:	add	r3, pc, r3
   15020:	bhi	1502c <sf_gen_broadcast+0x3a4>
   15024:	b	155f0 <sf_gen_broadcast+0x968>
   15028:	mov	r8, r4
   1502c:	sub	r0, r5, #20
   15030:	mov	r1, #32
   15034:	str	r0, [r6]
   15038:	ldr	r6, [r6, #4]
   1503c:	str	r1, [r6, r0]!
   15040:	ldr	r0, [r3, #44]	; 0x2c
   15044:	add	r0, r0, r9
   15048:	str	r0, [r6, #12]
   1504c:	ldr	r0, [sp, #12]
   15050:	mvn	r9, r0
   15054:	cmp	r0, #0
   15058:	beq	1526c <sf_gen_broadcast+0x5e4>
   1505c:	ldr	r7, [pc, #2056]	; 1586c <sf_gen_broadcast+0xbe4>
   15060:	add	r7, pc, r7
   15064:	ldr	r5, [r7, r8, lsl #3]!
   15068:	cmp	r5, #19
   1506c:	bhi	150c4 <sf_gen_broadcast+0x43c>
   15070:	add	r4, r8, #1
   15074:	cmp	r8, #15
   15078:	str	r4, [r3, #92]	; 0x5c
   1507c:	bge	155f0 <sf_gen_broadcast+0x968>
   15080:	mov	r0, #1024	; 0x400
   15084:	lsl	r5, r0, r4
   15088:	mov	r0, r5
   1508c:	bl	f1c <malloc@plt>
   15090:	cmp	r0, #0
   15094:	str	r0, [r7, #12]
   15098:	beq	155f0 <sf_gen_broadcast+0x968>
   1509c:	mov	r1, #0
   150a0:	mov	r2, r5
   150a4:	add	r7, r7, #8
   150a8:	bl	f88 <memset@plt>
   150ac:	str	r5, [r7]
   150b0:	cmp	r5, #19
   150b4:	ldr	r3, [pc, #1972]	; 15870 <sf_gen_broadcast+0xbe8>
   150b8:	add	r3, pc, r3
   150bc:	bhi	150c8 <sf_gen_broadcast+0x440>
   150c0:	b	155f0 <sf_gen_broadcast+0x968>
   150c4:	mov	r4, r8
   150c8:	sub	r1, r5, #20
   150cc:	mov	r2, #84	; 0x54
   150d0:	str	r1, [r7]
   150d4:	ldr	r0, [r7, #4]
   150d8:	str	r2, [r0, r1]!
   150dc:	mov	r2, r6
   150e0:	str	r9, [r0, #12]
   150e4:	mov	r1, r2
   150e8:	ldr	r2, [r2, #16]
   150ec:	cmp	r2, #0
   150f0:	bne	150e4 <sf_gen_broadcast+0x45c>
   150f4:	str	r0, [r1, #16]
   150f8:	b	15270 <sf_gen_broadcast+0x5e8>
   150fc:	cmp	r0, #192	; 0xc0
   15100:	beq	14dac <sf_gen_broadcast+0x124>
   15104:	ldr	r0, [pc, #1856]	; 1584c <sf_gen_broadcast+0xbc4>
   15108:	add	r0, pc, r0
   1510c:	bl	2204 <sf_bpf_error>
   15110:	ldr	r3, [pc, #1832]	; 15840 <sf_gen_broadcast+0xbb8>
   15114:	mov	r0, #1
   15118:	mov	r1, #1
   1511c:	add	r3, pc, r3
   15120:	mov	r2, #6
   15124:	sub	sp, fp, #28
   15128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1512c:	b	1b0ec <gen_bcmp>
   15130:	ldrb	r0, [r5]
   15134:	cmp	r0, #1
   15138:	bne	15818 <sf_gen_broadcast+0xb90>
   1513c:	mov	r0, #1
   15140:	mov	r1, #4
   15144:	mov	r2, #8
   15148:	mov	r3, #65280	; 0xff00
   1514c:	bl	9ef4 <gen_cmp>
   15150:	mov	r4, r0
   15154:	ldr	r0, [r0, #44]	; 0x2c
   15158:	mov	r2, #6
   1515c:	clz	r0, r0
   15160:	lsr	r0, r0, #5
   15164:	str	r0, [r4, #44]	; 0x2c
   15168:	mov	r0, #1
   1516c:	ldr	r1, [r5, #52]	; 0x34
   15170:	ldr	r3, [pc, #1744]	; 15848 <sf_gen_broadcast+0xbc0>
   15174:	add	r3, pc, r3
   15178:	bl	1b0ec <gen_bcmp>
   1517c:	cmp	r4, #0
   15180:	beq	151b4 <sf_gen_broadcast+0x52c>
   15184:	ldr	r1, [r0, #96]	; 0x60
   15188:	mov	r2, r4
   1518c:	ldr	r3, [r2, #44]	; 0x2c
   15190:	add	r7, r2, #84	; 0x54
   15194:	cmp	r3, #0
   15198:	mov	r3, #84	; 0x54
   1519c:	movweq	r3, #60	; 0x3c
   151a0:	addeq	r7, r2, #60	; 0x3c
   151a4:	ldr	r2, [r2, r3]
   151a8:	str	r1, [r7]
   151ac:	cmp	r2, #0
   151b0:	bne	1518c <sf_gen_broadcast+0x504>
   151b4:	ldr	r1, [r4, #44]	; 0x2c
   151b8:	cmp	r0, #0
   151bc:	clz	r1, r1
   151c0:	lsr	r1, r1, #5
   151c4:	str	r1, [r4, #44]	; 0x2c
   151c8:	ldr	r2, [r0, #44]	; 0x2c
   151cc:	clz	r1, r2
   151d0:	lsr	r1, r1, #5
   151d4:	str	r1, [r0, #44]	; 0x2c
   151d8:	str	r0, [sp, #16]
   151dc:	beq	157f0 <sf_gen_broadcast+0xb68>
   151e0:	cmp	r2, #0
   151e4:	mov	r2, #60	; 0x3c
   151e8:	add	r1, r0, #60	; 0x3c
   151ec:	movweq	r2, #84	; 0x54
   151f0:	addeq	r1, r0, #84	; 0x54
   151f4:	ldr	r2, [r0, r2]
   151f8:	cmp	r2, #0
   151fc:	beq	157f4 <sf_gen_broadcast+0xb6c>
   15200:	ldr	r3, [r2, #44]	; 0x2c
   15204:	add	r1, r2, #84	; 0x54
   15208:	cmp	r3, #0
   1520c:	mov	r3, #84	; 0x54
   15210:	movweq	r3, #60	; 0x3c
   15214:	addeq	r1, r2, #60	; 0x3c
   15218:	ldr	r2, [r2, r3]
   1521c:	cmp	r2, #0
   15220:	bne	15200 <sf_gen_broadcast+0x578>
   15224:	b	157f4 <sf_gen_broadcast+0xb6c>
   15228:	mov	r8, r4
   1522c:	sub	r1, r5, #20
   15230:	mov	r2, #64	; 0x40
   15234:	str	r1, [sl]
   15238:	ldr	r0, [sl, #4]
   1523c:	str	r2, [r0, r1]!
   15240:	mov	r2, r6
   15244:	str	r9, [r0, #12]
   15248:	mov	r1, r2
   1524c:	ldr	r2, [r2, #16]
   15250:	cmp	r2, #0
   15254:	bne	15248 <sf_gen_broadcast+0x5c0>
   15258:	str	r0, [r1, #16]
   1525c:	ldr	r0, [sp, #12]
   15260:	mvn	r9, r0
   15264:	cmp	r0, #0
   15268:	bne	1505c <sf_gen_broadcast+0x3d4>
   1526c:	mov	r4, r8
   15270:	str	r9, [sp, #8]
   15274:	ldr	r7, [pc, #1528]	; 15874 <sf_gen_broadcast+0xbec>
   15278:	add	r7, pc, r7
   1527c:	ldr	r5, [r7, r4, lsl #3]!
   15280:	cmp	r5, #207	; 0xcf
   15284:	bhi	152e4 <sf_gen_broadcast+0x65c>
   15288:	add	sl, r4, #1
   1528c:	cmp	r4, #15
   15290:	str	sl, [r3, #92]	; 0x5c
   15294:	bge	155f0 <sf_gen_broadcast+0x968>
   15298:	mov	r0, #1024	; 0x400
   1529c:	lsl	r5, r0, sl
   152a0:	mov	r0, r5
   152a4:	bl	f1c <malloc@plt>
   152a8:	str	r0, [r7, #12]
   152ac:	cmp	r0, #0
   152b0:	ldr	r4, [pc, #1476]	; 1587c <sf_gen_broadcast+0xbf4>
   152b4:	add	r4, pc, r4
   152b8:	beq	155f0 <sf_gen_broadcast+0x968>
   152bc:	mov	r1, #0
   152c0:	mov	r2, r5
   152c4:	add	r7, r7, #8
   152c8:	bl	f88 <memset@plt>
   152cc:	str	r5, [r7]
   152d0:	cmp	r5, #207	; 0xcf
   152d4:	ldr	r3, [pc, #1444]	; 15880 <sf_gen_broadcast+0xbf8>
   152d8:	add	r3, pc, r3
   152dc:	bhi	152f0 <sf_gen_broadcast+0x668>
   152e0:	b	155f0 <sf_gen_broadcast+0x968>
   152e4:	mov	sl, r4
   152e8:	ldr	r4, [pc, #1416]	; 15878 <sf_gen_broadcast+0xbf0>
   152ec:	add	r4, pc, r4
   152f0:	sub	r0, r5, #208	; 0xd0
   152f4:	str	r0, [r7]
   152f8:	ldr	r1, [r7, #4]
   152fc:	add	r9, r1, r0
   15300:	mov	r0, #21
   15304:	str	r6, [r9, #4]
   15308:	str	r0, [r9, #8]
   1530c:	mov	r0, #0
   15310:	str	r0, [r9, #20]
   15314:	str	r9, [r9, #96]	; 0x60
   15318:	ldrb	r0, [r3, #16]
   1531c:	ldr	r1, [r3, #48]	; 0x30
   15320:	add	r7, r1, #16
   15324:	cmp	r0, #1
   15328:	bne	15464 <sf_gen_broadcast+0x7dc>
   1532c:	ldr	r8, [r3, #100]	; 0x64
   15330:	cmn	r8, #1
   15334:	beq	153a8 <sf_gen_broadcast+0x720>
   15338:	mov	r5, r4
   1533c:	ldr	r6, [r5, sl, lsl #3]!
   15340:	cmp	r6, #19
   15344:	bhi	153d0 <sf_gen_broadcast+0x748>
   15348:	add	r1, sl, #1
   1534c:	cmp	sl, #15
   15350:	str	r1, [r3, #92]	; 0x5c
   15354:	bge	155f0 <sf_gen_broadcast+0x968>
   15358:	mov	r0, #1024	; 0x400
   1535c:	str	r1, [sp]
   15360:	lsl	r6, r0, r1
   15364:	mov	r0, r6
   15368:	bl	f1c <malloc@plt>
   1536c:	ldr	sl, [sp, #8]
   15370:	cmp	r0, #0
   15374:	str	r0, [r5, #12]
   15378:	beq	155f0 <sf_gen_broadcast+0x968>
   1537c:	mov	r1, #0
   15380:	mov	r2, r6
   15384:	add	r5, r5, #8
   15388:	bl	f88 <memset@plt>
   1538c:	str	r6, [r5]
   15390:	cmp	r6, #19
   15394:	ldr	r3, [pc, #1260]	; 15888 <sf_gen_broadcast+0xc00>
   15398:	ldr	r2, [sp]
   1539c:	add	r3, pc, r3
   153a0:	bhi	153d8 <sf_gen_broadcast+0x750>
   153a4:	b	155f0 <sf_gen_broadcast+0x968>
   153a8:	bl	1309c <alloc_reg>
   153ac:	ldr	r3, [pc, #1232]	; 15884 <sf_gen_broadcast+0xbfc>
   153b0:	mov	r8, r0
   153b4:	add	r3, pc, r3
   153b8:	str	r0, [r3, #100]	; 0x64
   153bc:	ldr	sl, [r3, #92]	; 0x5c
   153c0:	mov	r5, r4
   153c4:	ldr	r6, [r5, sl, lsl #3]!
   153c8:	cmp	r6, #19
   153cc:	bls	15348 <sf_gen_broadcast+0x6c0>
   153d0:	mov	r2, sl
   153d4:	ldr	sl, [sp, #8]
   153d8:	sub	r0, r6, #20
   153dc:	mov	r1, #97	; 0x61
   153e0:	str	r0, [r5]
   153e4:	ldr	r6, [r5, #4]
   153e8:	str	r1, [r6, r0]!
   153ec:	cmp	r6, #0
   153f0:	str	r8, [r6, #12]
   153f4:	beq	15460 <sf_gen_broadcast+0x7d8>
   153f8:	str	r7, [sp, #8]
   153fc:	mov	r7, r4
   15400:	ldr	r5, [r7, r2, lsl #3]!
   15404:	cmp	r5, #19
   15408:	bhi	155fc <sf_gen_broadcast+0x974>
   1540c:	add	r8, r2, #1
   15410:	cmp	r2, #15
   15414:	str	r8, [r3, #92]	; 0x5c
   15418:	bge	155f0 <sf_gen_broadcast+0x968>
   1541c:	mov	r0, #1024	; 0x400
   15420:	lsl	r5, r0, r8
   15424:	mov	r0, r5
   15428:	bl	f1c <malloc@plt>
   1542c:	cmp	r0, #0
   15430:	str	r0, [r7, #12]
   15434:	beq	155f0 <sf_gen_broadcast+0x968>
   15438:	mov	r1, #0
   1543c:	mov	r2, r5
   15440:	add	r7, r7, #8
   15444:	bl	f88 <memset@plt>
   15448:	str	r5, [r7]
   1544c:	cmp	r5, #19
   15450:	ldr	r3, [pc, #1076]	; 1588c <sf_gen_broadcast+0xc04>
   15454:	add	r3, pc, r3
   15458:	bhi	15600 <sf_gen_broadcast+0x978>
   1545c:	b	155f0 <sf_gen_broadcast+0x968>
   15460:	mov	sl, r2
   15464:	mov	r6, r4
   15468:	ldr	r5, [r6, sl, lsl #3]!
   1546c:	cmp	r5, #19
   15470:	bhi	154cc <sf_gen_broadcast+0x844>
   15474:	add	r8, sl, #1
   15478:	cmp	sl, #15
   1547c:	str	r8, [r3, #92]	; 0x5c
   15480:	bge	155f0 <sf_gen_broadcast+0x968>
   15484:	mov	r0, #1024	; 0x400
   15488:	lsl	r5, r0, r8
   1548c:	mov	r0, r5
   15490:	bl	f1c <malloc@plt>
   15494:	ldr	sl, [sp, #8]
   15498:	cmp	r0, #0
   1549c:	str	r0, [r6, #12]
   154a0:	beq	155f0 <sf_gen_broadcast+0x968>
   154a4:	mov	r1, #0
   154a8:	mov	r2, r5
   154ac:	add	r6, r6, #8
   154b0:	bl	f88 <memset@plt>
   154b4:	str	r5, [r6]
   154b8:	cmp	r5, #19
   154bc:	ldr	r3, [pc, #972]	; 15890 <sf_gen_broadcast+0xc08>
   154c0:	add	r3, pc, r3
   154c4:	bhi	154d4 <sf_gen_broadcast+0x84c>
   154c8:	b	155f0 <sf_gen_broadcast+0x968>
   154cc:	mov	r8, sl
   154d0:	ldr	sl, [sp, #8]
   154d4:	sub	r0, r5, #20
   154d8:	mov	r1, #32
   154dc:	str	r0, [r6]
   154e0:	ldr	r6, [r6, #4]
   154e4:	str	r1, [r6, r0]!
   154e8:	ldr	r0, [r3, #44]	; 0x2c
   154ec:	add	r0, r0, r7
   154f0:	str	r0, [r6, #12]
   154f4:	ldr	r0, [sp, #12]
   154f8:	cmp	r0, #0
   154fc:	beq	15640 <sf_gen_broadcast+0x9b8>
   15500:	ldr	r5, [r4, r8, lsl #3]!
   15504:	cmp	r5, #19
   15508:	bhi	15560 <sf_gen_broadcast+0x8d8>
   1550c:	add	r7, r8, #1
   15510:	cmp	r8, #15
   15514:	str	r7, [r3, #92]	; 0x5c
   15518:	bge	155f0 <sf_gen_broadcast+0x968>
   1551c:	mov	r0, #1024	; 0x400
   15520:	lsl	r5, r0, r7
   15524:	mov	r0, r5
   15528:	bl	f1c <malloc@plt>
   1552c:	cmp	r0, #0
   15530:	str	r0, [r4, #12]
   15534:	beq	155f0 <sf_gen_broadcast+0x968>
   15538:	mov	r1, #0
   1553c:	mov	r2, r5
   15540:	add	r4, r4, #8
   15544:	bl	f88 <memset@plt>
   15548:	str	r5, [r4]
   1554c:	cmp	r5, #19
   15550:	ldr	r3, [pc, #828]	; 15894 <sf_gen_broadcast+0xc0c>
   15554:	add	r3, pc, r3
   15558:	bhi	15564 <sf_gen_broadcast+0x8dc>
   1555c:	b	155f0 <sf_gen_broadcast+0x968>
   15560:	mov	r7, r8
   15564:	sub	r1, r5, #20
   15568:	mov	r2, #84	; 0x54
   1556c:	str	r1, [r4]
   15570:	ldr	r0, [r4, #4]
   15574:	str	r2, [r0, r1]!
   15578:	mov	r2, r6
   1557c:	str	sl, [r0, #12]
   15580:	mov	r1, r2
   15584:	ldr	r2, [r2, #16]
   15588:	cmp	r2, #0
   1558c:	bne	15580 <sf_gen_broadcast+0x8f8>
   15590:	str	r0, [r1, #16]
   15594:	ldr	r4, [pc, #764]	; 15898 <sf_gen_broadcast+0xc10>
   15598:	add	r4, pc, r4
   1559c:	ldr	r5, [r4, r7, lsl #3]!
   155a0:	cmp	r5, #207	; 0xcf
   155a4:	bhi	15650 <sf_gen_broadcast+0x9c8>
   155a8:	add	r0, r7, #1
   155ac:	cmp	r7, #15
   155b0:	str	r0, [r3, #92]	; 0x5c
   155b4:	bge	155f0 <sf_gen_broadcast+0x968>
   155b8:	mov	r1, #1024	; 0x400
   155bc:	lsl	r5, r1, r0
   155c0:	mov	r0, r5
   155c4:	bl	f1c <malloc@plt>
   155c8:	cmp	r0, #0
   155cc:	str	r0, [r4, #12]
   155d0:	beq	155f0 <sf_gen_broadcast+0x968>
   155d4:	mov	r1, #0
   155d8:	mov	r2, r5
   155dc:	add	r4, r4, #8
   155e0:	bl	f88 <memset@plt>
   155e4:	cmp	r5, #207	; 0xcf
   155e8:	str	r5, [r4]
   155ec:	bhi	15650 <sf_gen_broadcast+0x9c8>
   155f0:	ldr	r0, [pc, #680]	; 158a0 <sf_gen_broadcast+0xc18>
   155f4:	add	r0, pc, r0
   155f8:	bl	2204 <sf_bpf_error>
   155fc:	mov	r8, r2
   15600:	sub	r1, r5, #20
   15604:	mov	r2, #64	; 0x40
   15608:	str	r1, [r7]
   1560c:	ldr	r0, [r7, #4]
   15610:	str	r2, [r0, r1]!
   15614:	mov	r2, r6
   15618:	ldr	r1, [sp, #8]
   1561c:	str	r1, [r0, #12]
   15620:	mov	r1, r2
   15624:	ldr	r2, [r2, #16]
   15628:	cmp	r2, #0
   1562c:	bne	15620 <sf_gen_broadcast+0x998>
   15630:	str	r0, [r1, #16]
   15634:	ldr	r0, [sp, #12]
   15638:	cmp	r0, #0
   1563c:	bne	15500 <sf_gen_broadcast+0x878>
   15640:	mov	r7, r8
   15644:	ldr	r5, [r4, r7, lsl #3]!
   15648:	cmp	r5, #207	; 0xcf
   1564c:	bls	155a8 <sf_gen_broadcast+0x920>
   15650:	sub	r0, r5, #208	; 0xd0
   15654:	cmp	r9, #0
   15658:	str	r0, [r4]
   1565c:	ldr	r1, [r4, #4]
   15660:	add	r0, r1, r0
   15664:	mov	r1, #21
   15668:	str	r6, [r0, #4]
   1566c:	str	r1, [r0, #8]
   15670:	str	sl, [r0, #20]
   15674:	str	r0, [r0, #96]	; 0x60
   15678:	ldr	r1, [r9, #44]	; 0x2c
   1567c:	clz	r1, r1
   15680:	lsr	r1, r1, #5
   15684:	str	r1, [r9, #44]	; 0x2c
   15688:	beq	156cc <sf_gen_broadcast+0xa44>
   1568c:	ldr	r2, [r0, #96]	; 0x60
   15690:	ldr	r6, [sp, #4]
   15694:	mov	r3, r9
   15698:	b	156a0 <sf_gen_broadcast+0xa18>
   1569c:	ldr	r1, [r3, #44]	; 0x2c
   156a0:	cmp	r1, #0
   156a4:	mov	r1, #84	; 0x54
   156a8:	add	r7, r3, #84	; 0x54
   156ac:	movweq	r1, #60	; 0x3c
   156b0:	addeq	r7, r3, #60	; 0x3c
   156b4:	ldr	r3, [r3, r1]
   156b8:	str	r2, [r7]
   156bc:	cmp	r3, #0
   156c0:	bne	1569c <sf_gen_broadcast+0xa14>
   156c4:	ldr	r1, [r9, #44]	; 0x2c
   156c8:	b	156d0 <sf_gen_broadcast+0xa48>
   156cc:	ldr	r6, [sp, #4]
   156d0:	clz	r1, r1
   156d4:	cmp	r0, #0
   156d8:	lsr	r1, r1, #5
   156dc:	str	r1, [r9, #44]	; 0x2c
   156e0:	str	r0, [sp, #24]
   156e4:	beq	15714 <sf_gen_broadcast+0xa8c>
   156e8:	mov	r2, r0
   156ec:	ldr	r3, [r2, #44]	; 0x2c
   156f0:	add	r1, r2, #84	; 0x54
   156f4:	cmp	r3, #0
   156f8:	mov	r3, #84	; 0x54
   156fc:	movweq	r3, #60	; 0x3c
   15700:	addeq	r1, r2, #60	; 0x3c
   15704:	ldr	r2, [r2, r3]
   15708:	cmp	r2, #0
   1570c:	bne	156ec <sf_gen_broadcast+0xa64>
   15710:	b	15718 <sf_gen_broadcast+0xa90>
   15714:	add	r1, sp, #24
   15718:	str	r9, [r1]
   1571c:	cmp	r6, #0
   15720:	ldr	r1, [r9, #96]	; 0x60
   15724:	str	r1, [r0, #96]	; 0x60
   15728:	beq	15758 <sf_gen_broadcast+0xad0>
   1572c:	mov	r2, r6
   15730:	ldr	r3, [r2, #44]	; 0x2c
   15734:	add	r7, r2, #84	; 0x54
   15738:	cmp	r3, #0
   1573c:	mov	r3, #84	; 0x54
   15740:	movweq	r3, #60	; 0x3c
   15744:	addeq	r7, r2, #60	; 0x3c
   15748:	ldr	r2, [r2, r3]
   1574c:	str	r1, [r7]
   15750:	cmp	r2, #0
   15754:	bne	15730 <sf_gen_broadcast+0xaa8>
   15758:	ldr	r1, [r6, #44]	; 0x2c
   1575c:	cmp	r0, #0
   15760:	clz	r1, r1
   15764:	lsr	r1, r1, #5
   15768:	str	r1, [r6, #44]	; 0x2c
   1576c:	ldr	r1, [r0, #44]	; 0x2c
   15770:	clz	r2, r1
   15774:	lsr	r2, r2, #5
   15778:	str	r2, [r0, #44]	; 0x2c
   1577c:	str	r0, [sp, #20]
   15780:	beq	157c8 <sf_gen_broadcast+0xb40>
   15784:	mov	r3, #60	; 0x3c
   15788:	cmp	r1, #0
   1578c:	mov	r2, r0
   15790:	movweq	r3, #84	; 0x54
   15794:	ldr	r1, [r2, r3]!
   15798:	cmp	r1, #0
   1579c:	beq	157cc <sf_gen_broadcast+0xb44>
   157a0:	ldr	r3, [r1, #44]	; 0x2c
   157a4:	add	r2, r1, #84	; 0x54
   157a8:	cmp	r3, #0
   157ac:	mov	r3, #84	; 0x54
   157b0:	movweq	r3, #60	; 0x3c
   157b4:	addeq	r2, r1, #60	; 0x3c
   157b8:	ldr	r1, [r1, r3]
   157bc:	cmp	r1, #0
   157c0:	bne	157a0 <sf_gen_broadcast+0xb18>
   157c4:	b	157cc <sf_gen_broadcast+0xb44>
   157c8:	add	r2, sp, #20
   157cc:	str	r6, [r2]
   157d0:	ldr	r1, [r0, #44]	; 0x2c
   157d4:	clz	r1, r1
   157d8:	lsr	r1, r1, #5
   157dc:	str	r1, [r0, #44]	; 0x2c
   157e0:	ldr	r1, [r6, #96]	; 0x60
   157e4:	str	r1, [r0, #96]	; 0x60
   157e8:	sub	sp, fp, #28
   157ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f0:	add	r1, sp, #16
   157f4:	str	r4, [r1]
   157f8:	ldr	r1, [r0, #44]	; 0x2c
   157fc:	clz	r1, r1
   15800:	lsr	r1, r1, #5
   15804:	str	r1, [r0, #44]	; 0x2c
   15808:	ldr	r1, [r4, #96]	; 0x60
   1580c:	str	r1, [r0, #96]	; 0x60
   15810:	sub	sp, fp, #28
   15814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15818:	ldr	r0, [pc, #16]	; 15830 <sf_gen_broadcast+0xba8>
   1581c:	add	r0, pc, r0
   15820:	bl	2204 <sf_bpf_error>
   15824:	ldr	r0, [pc, #112]	; 1589c <sf_gen_broadcast+0xc14>
   15828:	add	r0, pc, r0
   1582c:	bl	2204 <sf_bpf_error>
   15830:	.word	0x000135de
   15834:	.word	0x00031840
   15838:	.word	0x00031318
   1583c:	.word	0x000311e8
   15840:	.word	0x00030fb0
   15844:	.word	0x000311c0
   15848:	.word	0x00030f58
   1584c:	.word	0x00013caa
   15850:	.word	0x00031714
   15854:	.word	0x0003145c
   15858:	.word	0x000316c0
   1585c:	.word	0x000315f0
   15860:	.word	0x00031654
   15864:	.word	0x0003152c
   15868:	.word	0x000314c4
   1586c:	.word	0x000313c0
   15870:	.word	0x00031428
   15874:	.word	0x000311a8
   15878:	.word	0x00031134
   1587c:	.word	0x0003116c
   15880:	.word	0x00031208
   15884:	.word	0x0003112c
   15888:	.word	0x00031144
   1588c:	.word	0x0003108c
   15890:	.word	0x00031020
   15894:	.word	0x00030f8c
   15898:	.word	0x00030e88
   1589c:	.word	0x0001359f
   158a0:	.word	0x00013da0

000158a4 <sf_gen_multicast>:
   158a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158a8:	add	fp, sp, #28
   158ac:	sub	sp, sp, #4
   158b0:	cmp	r0, #2
   158b4:	bcc	15994 <sf_gen_multicast+0xf0>
   158b8:	beq	15bfc <sf_gen_multicast+0x358>
   158bc:	cmp	r0, #17
   158c0:	bne	165ac <sf_gen_multicast+0xd08>
   158c4:	movw	r0, #34525	; 0x86dd
   158c8:	bl	6e1c <gen_linktype>
   158cc:	mov	r5, r0
   158d0:	mov	r0, #3
   158d4:	mov	r1, #24
   158d8:	mov	r2, #16
   158dc:	mov	r3, #255	; 0xff
   158e0:	bl	9ef4 <gen_cmp>
   158e4:	mov	r4, r0
   158e8:	cmp	r5, #0
   158ec:	beq	15920 <sf_gen_multicast+0x7c>
   158f0:	ldr	r0, [r4, #96]	; 0x60
   158f4:	mov	r1, r5
   158f8:	ldr	r2, [r1, #44]	; 0x2c
   158fc:	add	r3, r1, #84	; 0x54
   15900:	cmp	r2, #0
   15904:	mov	r2, #84	; 0x54
   15908:	movweq	r2, #60	; 0x3c
   1590c:	addeq	r3, r1, #60	; 0x3c
   15910:	ldr	r1, [r1, r2]
   15914:	str	r0, [r3]
   15918:	cmp	r1, #0
   1591c:	bne	158f8 <sf_gen_multicast+0x54>
   15920:	ldr	r0, [r5, #44]	; 0x2c
   15924:	cmp	r4, #0
   15928:	clz	r0, r0
   1592c:	lsr	r0, r0, #5
   15930:	str	r0, [r5, #44]	; 0x2c
   15934:	ldr	r1, [r4, #44]	; 0x2c
   15938:	clz	r0, r1
   1593c:	lsr	r0, r0, #5
   15940:	str	r0, [r4, #44]	; 0x2c
   15944:	str	r4, [sp]
   15948:	beq	16570 <sf_gen_multicast+0xccc>
   1594c:	cmp	r1, #0
   15950:	mov	r1, #60	; 0x3c
   15954:	add	r0, r4, #60	; 0x3c
   15958:	movweq	r1, #84	; 0x54
   1595c:	addeq	r0, r4, #84	; 0x54
   15960:	ldr	r1, [r4, r1]
   15964:	cmp	r1, #0
   15968:	beq	16574 <sf_gen_multicast+0xcd0>
   1596c:	ldr	r2, [r1, #44]	; 0x2c
   15970:	add	r0, r1, #84	; 0x54
   15974:	cmp	r2, #0
   15978:	mov	r2, #84	; 0x54
   1597c:	movweq	r2, #60	; 0x3c
   15980:	addeq	r0, r1, #60	; 0x3c
   15984:	ldr	r1, [r1, r2]
   15988:	cmp	r1, #0
   1598c:	bne	1596c <sf_gen_multicast+0xc8>
   15990:	b	16574 <sf_gen_multicast+0xcd0>
   15994:	ldr	r8, [pc, #3112]	; 165c4 <sf_gen_multicast+0xd20>
   15998:	add	r8, pc, r8
   1599c:	ldr	r0, [r8, #36]	; 0x24
   159a0:	sub	r1, r0, #105	; 0x69
   159a4:	cmp	r1, #58	; 0x3a
   159a8:	bhi	15ccc <sf_gen_multicast+0x428>
   159ac:	add	r0, pc, #4
   159b0:	ldr	r1, [r0, r1, lsl #2]
   159b4:	add	pc, r0, r1
   159b8:	.word	0x000000ec
   159bc:	.word	0x00000bf4
   159c0:	.word	0x00000bf4
   159c4:	.word	0x00000bf4
   159c8:	.word	0x00000bf4
   159cc:	.word	0x00000bf4
   159d0:	.word	0x00000bf4
   159d4:	.word	0x00000bf4
   159d8:	.word	0x00000bf4
   159dc:	.word	0x00000bf4
   159e0:	.word	0x00000bf4
   159e4:	.word	0x00000bf4
   159e8:	.word	0x00000bf4
   159ec:	.word	0x00000bf4
   159f0:	.word	0x000000ec
   159f4:	.word	0x00000bf4
   159f8:	.word	0x00000bf4
   159fc:	.word	0x00000364
   15a00:	.word	0x00000acc
   15a04:	.word	0x00000bf4
   15a08:	.word	0x00000bf4
   15a0c:	.word	0x00000bf4
   15a10:	.word	0x000000ec
   15a14:	.word	0x00000bf4
   15a18:	.word	0x00000374
   15a1c:	.word	0x00000bf4
   15a20:	.word	0x00000bf4
   15a24:	.word	0x00000bf4
   15a28:	.word	0x00000bf4
   15a2c:	.word	0x00000bf4
   15a30:	.word	0x00000bf4
   15a34:	.word	0x00000bf4
   15a38:	.word	0x00000bf4
   15a3c:	.word	0x00000bf4
   15a40:	.word	0x00000bf4
   15a44:	.word	0x00000bf4
   15a48:	.word	0x00000bf4
   15a4c:	.word	0x00000bf4
   15a50:	.word	0x00000bf4
   15a54:	.word	0x00000bf4
   15a58:	.word	0x00000bf4
   15a5c:	.word	0x00000bf4
   15a60:	.word	0x00000bf4
   15a64:	.word	0x00000bf4
   15a68:	.word	0x00000bf4
   15a6c:	.word	0x00000bf4
   15a70:	.word	0x00000bf4
   15a74:	.word	0x00000bf4
   15a78:	.word	0x00000bf4
   15a7c:	.word	0x00000bf4
   15a80:	.word	0x00000bf4
   15a84:	.word	0x00000bf4
   15a88:	.word	0x00000bf4
   15a8c:	.word	0x00000bf4
   15a90:	.word	0x00000bf4
   15a94:	.word	0x00000bf4
   15a98:	.word	0x00000bf4
   15a9c:	.word	0x00000bf4
   15aa0:	.word	0x000000ec
   15aa4:	mov	r0, #1
   15aa8:	mov	r1, #1
   15aac:	mov	r2, #16
   15ab0:	mov	r6, #1
   15ab4:	bl	1669c <gen_load_a>
   15ab8:	mov	r4, r0
   15abc:	ldr	r0, [r8, #92]	; 0x5c
   15ac0:	ldr	sl, [pc, #2816]	; 165c8 <sf_gen_multicast+0xd24>
   15ac4:	add	sl, pc, sl
   15ac8:	mov	r7, sl
   15acc:	ldr	r5, [r7, r0, lsl #3]!
   15ad0:	cmp	r5, #207	; 0xcf
   15ad4:	bhi	15b20 <sf_gen_multicast+0x27c>
   15ad8:	add	r1, r0, #1
   15adc:	cmp	r0, #15
   15ae0:	str	r1, [r8, #92]	; 0x5c
   15ae4:	bge	165b8 <sf_gen_multicast+0xd14>
   15ae8:	mov	r0, #1024	; 0x400
   15aec:	lsl	r5, r0, r1
   15af0:	mov	r0, r5
   15af4:	bl	f1c <malloc@plt>
   15af8:	cmp	r0, #0
   15afc:	str	r0, [r7, #12]
   15b00:	beq	165b8 <sf_gen_multicast+0xd14>
   15b04:	mov	r1, #0
   15b08:	mov	r2, r5
   15b0c:	add	r7, r7, #8
   15b10:	bl	f88 <memset@plt>
   15b14:	cmp	r5, #207	; 0xcf
   15b18:	str	r5, [r7]
   15b1c:	bls	165b8 <sf_gen_multicast+0xd14>
   15b20:	sub	r0, r5, #208	; 0xd0
   15b24:	str	r0, [r7]
   15b28:	ldr	r1, [r7, #4]
   15b2c:	add	r5, r1, r0
   15b30:	mov	r0, #69	; 0x45
   15b34:	str	r6, [r5, #20]
   15b38:	str	r4, [r5, #4]
   15b3c:	str	r0, [r5, #8]
   15b40:	mov	r0, #16
   15b44:	str	r5, [r5, #96]	; 0x60
   15b48:	bl	165d4 <gen_mac_multicast>
   15b4c:	mov	r4, r0
   15b50:	cmp	r5, #0
   15b54:	beq	15b88 <sf_gen_multicast+0x2e4>
   15b58:	ldr	r0, [r4, #96]	; 0x60
   15b5c:	mov	r1, r5
   15b60:	ldr	r2, [r1, #44]	; 0x2c
   15b64:	add	r3, r1, #84	; 0x54
   15b68:	cmp	r2, #0
   15b6c:	mov	r2, #84	; 0x54
   15b70:	movweq	r2, #60	; 0x3c
   15b74:	addeq	r3, r1, #60	; 0x3c
   15b78:	ldr	r1, [r1, r2]
   15b7c:	str	r0, [r3]
   15b80:	cmp	r1, #0
   15b84:	bne	15b60 <sf_gen_multicast+0x2bc>
   15b88:	ldr	r0, [r5, #44]	; 0x2c
   15b8c:	cmp	r4, #0
   15b90:	clz	r0, r0
   15b94:	lsr	r0, r0, #5
   15b98:	str	r0, [r5, #44]	; 0x2c
   15b9c:	ldr	r1, [r4, #44]	; 0x2c
   15ba0:	clz	r0, r1
   15ba4:	lsr	r0, r0, #5
   15ba8:	str	r0, [r4, #44]	; 0x2c
   15bac:	str	r4, [sp]
   15bb0:	beq	15d48 <sf_gen_multicast+0x4a4>
   15bb4:	cmp	r1, #0
   15bb8:	mov	r1, #60	; 0x3c
   15bbc:	add	r0, r4, #60	; 0x3c
   15bc0:	movweq	r1, #84	; 0x54
   15bc4:	addeq	r0, r4, #84	; 0x54
   15bc8:	ldr	r1, [r4, r1]
   15bcc:	cmp	r1, #0
   15bd0:	beq	15d4c <sf_gen_multicast+0x4a8>
   15bd4:	ldr	r2, [r1, #44]	; 0x2c
   15bd8:	add	r0, r1, #84	; 0x54
   15bdc:	cmp	r2, #0
   15be0:	mov	r2, #84	; 0x54
   15be4:	movweq	r2, #60	; 0x3c
   15be8:	addeq	r0, r1, #60	; 0x3c
   15bec:	ldr	r1, [r1, r2]
   15bf0:	cmp	r1, #0
   15bf4:	bne	15bd4 <sf_gen_multicast+0x330>
   15bf8:	b	15d4c <sf_gen_multicast+0x4a8>
   15bfc:	mov	r0, #2048	; 0x800
   15c00:	bl	6e1c <gen_linktype>
   15c04:	mov	r5, r0
   15c08:	mov	r0, #3
   15c0c:	mov	r1, #16
   15c10:	mov	r2, #16
   15c14:	mov	r3, #224	; 0xe0
   15c18:	bl	16a50 <gen_cmp_ge>
   15c1c:	mov	r4, r0
   15c20:	cmp	r5, #0
   15c24:	beq	15c58 <sf_gen_multicast+0x3b4>
   15c28:	ldr	r0, [r4, #96]	; 0x60
   15c2c:	mov	r1, r5
   15c30:	ldr	r2, [r1, #44]	; 0x2c
   15c34:	add	r3, r1, #84	; 0x54
   15c38:	cmp	r2, #0
   15c3c:	mov	r2, #84	; 0x54
   15c40:	movweq	r2, #60	; 0x3c
   15c44:	addeq	r3, r1, #60	; 0x3c
   15c48:	ldr	r1, [r1, r2]
   15c4c:	str	r0, [r3]
   15c50:	cmp	r1, #0
   15c54:	bne	15c30 <sf_gen_multicast+0x38c>
   15c58:	ldr	r0, [r5, #44]	; 0x2c
   15c5c:	cmp	r4, #0
   15c60:	clz	r0, r0
   15c64:	lsr	r0, r0, #5
   15c68:	str	r0, [r5, #44]	; 0x2c
   15c6c:	ldr	r1, [r4, #44]	; 0x2c
   15c70:	clz	r0, r1
   15c74:	lsr	r0, r0, #5
   15c78:	str	r0, [r4, #44]	; 0x2c
   15c7c:	str	r4, [sp]
   15c80:	beq	16570 <sf_gen_multicast+0xccc>
   15c84:	cmp	r1, #0
   15c88:	mov	r1, #60	; 0x3c
   15c8c:	add	r0, r4, #60	; 0x3c
   15c90:	movweq	r1, #84	; 0x54
   15c94:	addeq	r0, r4, #84	; 0x54
   15c98:	ldr	r1, [r4, r1]
   15c9c:	cmp	r1, #0
   15ca0:	beq	16574 <sf_gen_multicast+0xcd0>
   15ca4:	ldr	r2, [r1, #44]	; 0x2c
   15ca8:	add	r0, r1, #84	; 0x54
   15cac:	cmp	r2, #0
   15cb0:	mov	r2, #84	; 0x54
   15cb4:	movweq	r2, #60	; 0x3c
   15cb8:	addeq	r0, r1, #60	; 0x3c
   15cbc:	ldr	r1, [r1, r2]
   15cc0:	cmp	r1, #0
   15cc4:	bne	15ca4 <sf_gen_multicast+0x400>
   15cc8:	b	16574 <sf_gen_multicast+0xcd0>
   15ccc:	sub	r1, r0, #1
   15cd0:	cmp	r1, #9
   15cd4:	bhi	16478 <sf_gen_multicast+0xbd4>
   15cd8:	add	r0, pc, #4
   15cdc:	ldr	r1, [r0, r1, lsl #2]
   15ce0:	add	pc, r0, r1
   15ce4:	.word	0x00000028
   15ce8:	.word	0x000008c8
   15cec:	.word	0x000008c8
   15cf0:	.word	0x000008c8
   15cf4:	.word	0x000008c8
   15cf8:	.word	0x00000038
   15cfc:	.word	0x00000048
   15d00:	.word	0x000008c8
   15d04:	.word	0x000008c8
   15d08:	.word	0x000008b8
   15d0c:	mov	r0, #0
   15d10:	sub	sp, fp, #28
   15d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d18:	b	165d4 <gen_mac_multicast>
   15d1c:	mov	r0, #2
   15d20:	sub	sp, fp, #28
   15d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d28:	b	165d4 <gen_mac_multicast>
   15d2c:	add	r3, r8, #1
   15d30:	mov	r0, #1
   15d34:	mov	r1, #1
   15d38:	mov	r2, #1
   15d3c:	sub	sp, fp, #28
   15d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d44:	b	1b0ec <gen_bcmp>
   15d48:	mov	r0, sp
   15d4c:	str	r5, [r0]
   15d50:	mov	r1, #1
   15d54:	mov	r2, #16
   15d58:	mov	r9, #1
   15d5c:	ldr	r0, [r4, #44]	; 0x2c
   15d60:	clz	r0, r0
   15d64:	lsr	r0, r0, #5
   15d68:	str	r0, [r4, #44]	; 0x2c
   15d6c:	ldr	r0, [r5, #96]	; 0x60
   15d70:	str	r0, [r4, #96]	; 0x60
   15d74:	mov	r0, #1
   15d78:	bl	1669c <gen_load_a>
   15d7c:	mov	r5, r0
   15d80:	ldr	r0, [r8, #92]	; 0x5c
   15d84:	mov	r7, sl
   15d88:	ldr	r6, [r7, r0, lsl #3]!
   15d8c:	cmp	r6, #207	; 0xcf
   15d90:	bhi	15ddc <sf_gen_multicast+0x538>
   15d94:	add	r1, r0, #1
   15d98:	cmp	r0, #15
   15d9c:	str	r1, [r8, #92]	; 0x5c
   15da0:	bge	165b8 <sf_gen_multicast+0xd14>
   15da4:	mov	r0, #1024	; 0x400
   15da8:	lsl	r6, r0, r1
   15dac:	mov	r0, r6
   15db0:	bl	f1c <malloc@plt>
   15db4:	cmp	r0, #0
   15db8:	str	r0, [r7, #12]
   15dbc:	beq	165b8 <sf_gen_multicast+0xd14>
   15dc0:	mov	r1, #0
   15dc4:	mov	r2, r6
   15dc8:	add	r7, r7, #8
   15dcc:	bl	f88 <memset@plt>
   15dd0:	cmp	r6, #207	; 0xcf
   15dd4:	str	r6, [r7]
   15dd8:	bls	165b8 <sf_gen_multicast+0xd14>
   15ddc:	sub	r0, r6, #208	; 0xd0
   15de0:	str	r0, [r7]
   15de4:	ldr	r1, [r7, #4]
   15de8:	add	r6, r1, r0
   15dec:	mov	r0, #69	; 0x45
   15df0:	str	r9, [r6, #20]
   15df4:	str	r5, [r6, #4]
   15df8:	str	r0, [r6, #8]
   15dfc:	ldr	r0, [r6, #44]	; 0x2c
   15e00:	clz	r0, r0
   15e04:	lsr	r0, r0, #5
   15e08:	str	r0, [r6, #44]	; 0x2c
   15e0c:	mov	r0, #4
   15e10:	str	r6, [r6, #96]	; 0x60
   15e14:	bl	165d4 <gen_mac_multicast>
   15e18:	cmp	r6, #0
   15e1c:	beq	15e50 <sf_gen_multicast+0x5ac>
   15e20:	ldr	r1, [r0, #96]	; 0x60
   15e24:	mov	r2, r6
   15e28:	ldr	r3, [r2, #44]	; 0x2c
   15e2c:	add	r7, r2, #84	; 0x54
   15e30:	cmp	r3, #0
   15e34:	mov	r3, #84	; 0x54
   15e38:	movweq	r3, #60	; 0x3c
   15e3c:	addeq	r7, r2, #60	; 0x3c
   15e40:	ldr	r2, [r2, r3]
   15e44:	str	r1, [r7]
   15e48:	cmp	r2, #0
   15e4c:	bne	15e28 <sf_gen_multicast+0x584>
   15e50:	ldr	r1, [r6, #44]	; 0x2c
   15e54:	cmp	r0, #0
   15e58:	clz	r1, r1
   15e5c:	lsr	r1, r1, #5
   15e60:	str	r1, [r6, #44]	; 0x2c
   15e64:	ldr	r2, [r0, #44]	; 0x2c
   15e68:	clz	r1, r2
   15e6c:	lsr	r1, r1, #5
   15e70:	str	r1, [r0, #44]	; 0x2c
   15e74:	str	r0, [sp]
   15e78:	beq	15ec4 <sf_gen_multicast+0x620>
   15e7c:	cmp	r2, #0
   15e80:	mov	r2, #60	; 0x3c
   15e84:	add	r1, r0, #60	; 0x3c
   15e88:	movweq	r2, #84	; 0x54
   15e8c:	addeq	r1, r0, #84	; 0x54
   15e90:	ldr	r2, [r0, r2]
   15e94:	cmp	r2, #0
   15e98:	beq	15ec8 <sf_gen_multicast+0x624>
   15e9c:	ldr	r3, [r2, #44]	; 0x2c
   15ea0:	add	r1, r2, #84	; 0x54
   15ea4:	cmp	r3, #0
   15ea8:	mov	r3, #84	; 0x54
   15eac:	movweq	r3, #60	; 0x3c
   15eb0:	addeq	r1, r2, #60	; 0x3c
   15eb4:	ldr	r2, [r2, r3]
   15eb8:	cmp	r2, #0
   15ebc:	bne	15e9c <sf_gen_multicast+0x5f8>
   15ec0:	b	15ec8 <sf_gen_multicast+0x624>
   15ec4:	mov	r1, sp
   15ec8:	str	r6, [r1]
   15ecc:	ldr	r1, [r0, #44]	; 0x2c
   15ed0:	clz	r2, r1
   15ed4:	cmp	r1, #0
   15ed8:	lsr	r2, r2, #5
   15edc:	movwne	r1, #1
   15ee0:	cmp	r0, #0
   15ee4:	str	r2, [r0, #44]	; 0x2c
   15ee8:	ldr	r2, [r6, #96]	; 0x60
   15eec:	str	r1, [r0, #44]	; 0x2c
   15ef0:	str	r2, [r0, #96]	; 0x60
   15ef4:	beq	15f30 <sf_gen_multicast+0x68c>
   15ef8:	ldr	r2, [r4, #96]	; 0x60
   15efc:	mov	r3, r0
   15f00:	b	15f08 <sf_gen_multicast+0x664>
   15f04:	ldr	r1, [r3, #44]	; 0x2c
   15f08:	cmp	r1, #0
   15f0c:	mov	r1, #84	; 0x54
   15f10:	add	r7, r3, #84	; 0x54
   15f14:	movweq	r1, #60	; 0x3c
   15f18:	addeq	r7, r3, #60	; 0x3c
   15f1c:	ldr	r3, [r3, r1]
   15f20:	str	r2, [r7]
   15f24:	cmp	r3, #0
   15f28:	bne	15f04 <sf_gen_multicast+0x660>
   15f2c:	ldr	r1, [r0, #44]	; 0x2c
   15f30:	clz	r1, r1
   15f34:	cmp	r4, #0
   15f38:	lsr	r1, r1, #5
   15f3c:	str	r1, [r0, #44]	; 0x2c
   15f40:	str	r4, [sp]
   15f44:	beq	15f74 <sf_gen_multicast+0x6d0>
   15f48:	mov	r2, r4
   15f4c:	ldr	r3, [r2, #44]	; 0x2c
   15f50:	add	r1, r2, #84	; 0x54
   15f54:	cmp	r3, #0
   15f58:	mov	r3, #84	; 0x54
   15f5c:	movweq	r3, #60	; 0x3c
   15f60:	addeq	r1, r2, #60	; 0x3c
   15f64:	ldr	r2, [r2, r3]
   15f68:	cmp	r2, #0
   15f6c:	bne	15f4c <sf_gen_multicast+0x6a8>
   15f70:	b	15f78 <sf_gen_multicast+0x6d4>
   15f74:	mov	r1, sp
   15f78:	str	r0, [r1]
   15f7c:	mov	r1, #0
   15f80:	mov	r2, #16
   15f84:	ldr	r0, [r0, #96]	; 0x60
   15f88:	str	r0, [r4, #96]	; 0x60
   15f8c:	mov	r0, #1
   15f90:	bl	1669c <gen_load_a>
   15f94:	mov	r5, r0
   15f98:	ldr	r0, [r8, #92]	; 0x5c
   15f9c:	mov	r7, sl
   15fa0:	ldr	r6, [r7, r0, lsl #3]!
   15fa4:	cmp	r6, #207	; 0xcf
   15fa8:	bhi	15ff4 <sf_gen_multicast+0x750>
   15fac:	add	r1, r0, #1
   15fb0:	cmp	r0, #15
   15fb4:	str	r1, [r8, #92]	; 0x5c
   15fb8:	bge	165b8 <sf_gen_multicast+0xd14>
   15fbc:	mov	r0, #1024	; 0x400
   15fc0:	lsl	r6, r0, r1
   15fc4:	mov	r0, r6
   15fc8:	bl	f1c <malloc@plt>
   15fcc:	cmp	r0, #0
   15fd0:	str	r0, [r7, #12]
   15fd4:	beq	165b8 <sf_gen_multicast+0xd14>
   15fd8:	mov	r1, #0
   15fdc:	mov	r2, r6
   15fe0:	add	r7, r7, #8
   15fe4:	bl	f88 <memset@plt>
   15fe8:	cmp	r6, #207	; 0xcf
   15fec:	str	r6, [r7]
   15ff0:	bls	165b8 <sf_gen_multicast+0xd14>
   15ff4:	sub	r0, r6, #208	; 0xd0
   15ff8:	mov	r2, #8
   15ffc:	str	r0, [r7]
   16000:	ldr	r1, [r7, #4]
   16004:	adds	r0, r1, r0
   16008:	mov	r1, #69	; 0x45
   1600c:	str	r2, [r0, #20]
   16010:	str	r5, [r0, #4]
   16014:	str	r1, [r0, #8]
   16018:	str	r0, [r0, #96]	; 0x60
   1601c:	beq	16050 <sf_gen_multicast+0x7ac>
   16020:	ldr	r1, [r4, #96]	; 0x60
   16024:	mov	r2, r0
   16028:	ldr	r3, [r2, #44]	; 0x2c
   1602c:	add	r7, r2, #84	; 0x54
   16030:	cmp	r3, #0
   16034:	mov	r3, #84	; 0x54
   16038:	movweq	r3, #60	; 0x3c
   1603c:	addeq	r7, r2, #60	; 0x3c
   16040:	ldr	r2, [r2, r3]
   16044:	str	r1, [r7]
   16048:	cmp	r2, #0
   1604c:	bne	16028 <sf_gen_multicast+0x784>
   16050:	ldr	r1, [r0, #44]	; 0x2c
   16054:	cmp	r4, #0
   16058:	clz	r1, r1
   1605c:	lsr	r1, r1, #5
   16060:	str	r1, [r0, #44]	; 0x2c
   16064:	ldr	r2, [r4, #44]	; 0x2c
   16068:	clz	r1, r2
   1606c:	lsr	r1, r1, #5
   16070:	str	r1, [r4, #44]	; 0x2c
   16074:	str	r4, [sp]
   16078:	beq	160c4 <sf_gen_multicast+0x820>
   1607c:	cmp	r2, #0
   16080:	mov	r2, #60	; 0x3c
   16084:	add	r1, r4, #60	; 0x3c
   16088:	movweq	r2, #84	; 0x54
   1608c:	addeq	r1, r4, #84	; 0x54
   16090:	ldr	r2, [r4, r2]
   16094:	cmp	r2, #0
   16098:	beq	160c8 <sf_gen_multicast+0x824>
   1609c:	ldr	r3, [r2, #44]	; 0x2c
   160a0:	add	r1, r2, #84	; 0x54
   160a4:	cmp	r3, #0
   160a8:	mov	r3, #84	; 0x54
   160ac:	movweq	r3, #60	; 0x3c
   160b0:	addeq	r1, r2, #60	; 0x3c
   160b4:	ldr	r2, [r2, r3]
   160b8:	cmp	r2, #0
   160bc:	bne	1609c <sf_gen_multicast+0x7f8>
   160c0:	b	160c8 <sf_gen_multicast+0x824>
   160c4:	mov	r1, sp
   160c8:	str	r0, [r1]
   160cc:	mov	r2, #16
   160d0:	ldr	r1, [r4, #44]	; 0x2c
   160d4:	clz	r1, r1
   160d8:	lsr	r1, r1, #5
   160dc:	str	r1, [r4, #44]	; 0x2c
   160e0:	mov	r1, #0
   160e4:	ldr	r0, [r0, #96]	; 0x60
   160e8:	str	r0, [r4, #96]	; 0x60
   160ec:	mov	r0, #1
   160f0:	bl	1669c <gen_load_a>
   160f4:	mov	r5, r0
   160f8:	ldr	r0, [r8, #92]	; 0x5c
   160fc:	mov	r7, sl
   16100:	ldr	r6, [r7, r0, lsl #3]!
   16104:	cmp	r6, #207	; 0xcf
   16108:	bhi	16154 <sf_gen_multicast+0x8b0>
   1610c:	add	r1, r0, #1
   16110:	cmp	r0, #15
   16114:	str	r1, [r8, #92]	; 0x5c
   16118:	bge	165b8 <sf_gen_multicast+0xd14>
   1611c:	mov	r0, #1024	; 0x400
   16120:	lsl	r6, r0, r1
   16124:	mov	r0, r6
   16128:	bl	f1c <malloc@plt>
   1612c:	cmp	r0, #0
   16130:	str	r0, [r7, #12]
   16134:	beq	165b8 <sf_gen_multicast+0xd14>
   16138:	mov	r1, #0
   1613c:	mov	r2, r6
   16140:	add	r7, r7, #8
   16144:	bl	f88 <memset@plt>
   16148:	cmp	r6, #207	; 0xcf
   1614c:	str	r6, [r7]
   16150:	bls	165b8 <sf_gen_multicast+0xd14>
   16154:	sub	r0, r6, #208	; 0xd0
   16158:	str	r0, [r7]
   1615c:	ldr	r1, [r7, #4]
   16160:	add	r6, r1, r0
   16164:	mov	r1, #8
   16168:	mov	r0, #69	; 0x45
   1616c:	str	r1, [r6, #20]
   16170:	str	r5, [r6, #4]
   16174:	str	r0, [r6, #8]
   16178:	ldr	r0, [r6, #44]	; 0x2c
   1617c:	clz	r0, r0
   16180:	lsr	r0, r0, #5
   16184:	str	r0, [r6, #44]	; 0x2c
   16188:	mov	r0, #4
   1618c:	str	r6, [r6, #96]	; 0x60
   16190:	bl	165d4 <gen_mac_multicast>
   16194:	cmp	r6, #0
   16198:	beq	161cc <sf_gen_multicast+0x928>
   1619c:	ldr	r1, [r0, #96]	; 0x60
   161a0:	mov	r2, r6
   161a4:	ldr	r3, [r2, #44]	; 0x2c
   161a8:	add	r7, r2, #84	; 0x54
   161ac:	cmp	r3, #0
   161b0:	mov	r3, #84	; 0x54
   161b4:	movweq	r3, #60	; 0x3c
   161b8:	addeq	r7, r2, #60	; 0x3c
   161bc:	ldr	r2, [r2, r3]
   161c0:	str	r1, [r7]
   161c4:	cmp	r2, #0
   161c8:	bne	161a4 <sf_gen_multicast+0x900>
   161cc:	ldr	r1, [r6, #44]	; 0x2c
   161d0:	cmp	r0, #0
   161d4:	clz	r1, r1
   161d8:	lsr	r1, r1, #5
   161dc:	str	r1, [r6, #44]	; 0x2c
   161e0:	ldr	r2, [r0, #44]	; 0x2c
   161e4:	clz	r1, r2
   161e8:	lsr	r1, r1, #5
   161ec:	str	r1, [r0, #44]	; 0x2c
   161f0:	str	r0, [sp]
   161f4:	beq	16240 <sf_gen_multicast+0x99c>
   161f8:	cmp	r2, #0
   161fc:	mov	r2, #60	; 0x3c
   16200:	add	r1, r0, #60	; 0x3c
   16204:	movweq	r2, #84	; 0x54
   16208:	addeq	r1, r0, #84	; 0x54
   1620c:	ldr	r2, [r0, r2]
   16210:	cmp	r2, #0
   16214:	beq	16244 <sf_gen_multicast+0x9a0>
   16218:	ldr	r3, [r2, #44]	; 0x2c
   1621c:	add	r1, r2, #84	; 0x54
   16220:	cmp	r3, #0
   16224:	mov	r3, #84	; 0x54
   16228:	movweq	r3, #60	; 0x3c
   1622c:	addeq	r1, r2, #60	; 0x3c
   16230:	ldr	r2, [r2, r3]
   16234:	cmp	r2, #0
   16238:	bne	16218 <sf_gen_multicast+0x974>
   1623c:	b	16244 <sf_gen_multicast+0x9a0>
   16240:	mov	r1, sp
   16244:	str	r6, [r1]
   16248:	ldr	r1, [r0, #44]	; 0x2c
   1624c:	clz	r2, r1
   16250:	cmp	r1, #0
   16254:	lsr	r2, r2, #5
   16258:	movwne	r1, #1
   1625c:	cmp	r0, #0
   16260:	str	r2, [r0, #44]	; 0x2c
   16264:	ldr	r2, [r6, #96]	; 0x60
   16268:	str	r1, [r0, #44]	; 0x2c
   1626c:	str	r2, [r0, #96]	; 0x60
   16270:	beq	162ac <sf_gen_multicast+0xa08>
   16274:	ldr	r2, [r4, #96]	; 0x60
   16278:	mov	r3, r0
   1627c:	b	16284 <sf_gen_multicast+0x9e0>
   16280:	ldr	r1, [r3, #44]	; 0x2c
   16284:	cmp	r1, #0
   16288:	mov	r1, #84	; 0x54
   1628c:	add	r7, r3, #84	; 0x54
   16290:	movweq	r1, #60	; 0x3c
   16294:	addeq	r7, r3, #60	; 0x3c
   16298:	ldr	r3, [r3, r1]
   1629c:	str	r2, [r7]
   162a0:	cmp	r3, #0
   162a4:	bne	16280 <sf_gen_multicast+0x9dc>
   162a8:	ldr	r1, [r0, #44]	; 0x2c
   162ac:	clz	r1, r1
   162b0:	cmp	r4, #0
   162b4:	lsr	r1, r1, #5
   162b8:	str	r1, [r0, #44]	; 0x2c
   162bc:	str	r4, [sp]
   162c0:	beq	162f0 <sf_gen_multicast+0xa4c>
   162c4:	mov	r2, r4
   162c8:	ldr	r3, [r2, #44]	; 0x2c
   162cc:	add	r1, r2, #84	; 0x54
   162d0:	cmp	r3, #0
   162d4:	mov	r3, #84	; 0x54
   162d8:	movweq	r3, #60	; 0x3c
   162dc:	addeq	r1, r2, #60	; 0x3c
   162e0:	ldr	r2, [r2, r3]
   162e4:	cmp	r2, #0
   162e8:	bne	162c8 <sf_gen_multicast+0xa24>
   162ec:	b	162f4 <sf_gen_multicast+0xa50>
   162f0:	mov	r1, sp
   162f4:	str	r0, [r1]
   162f8:	mov	r1, #0
   162fc:	mov	r2, #16
   16300:	ldr	r0, [r0, #96]	; 0x60
   16304:	str	r0, [r4, #96]	; 0x60
   16308:	mov	r0, #1
   1630c:	bl	1669c <gen_load_a>
   16310:	mov	r5, r0
   16314:	ldr	r0, [r8, #92]	; 0x5c
   16318:	ldr	r6, [sl, r0, lsl #3]!
   1631c:	cmp	r6, #207	; 0xcf
   16320:	bhi	1636c <sf_gen_multicast+0xac8>
   16324:	add	r1, r0, #1
   16328:	cmp	r0, #15
   1632c:	str	r1, [r8, #92]	; 0x5c
   16330:	bge	165b8 <sf_gen_multicast+0xd14>
   16334:	mov	r0, #1024	; 0x400
   16338:	lsl	r6, r0, r1
   1633c:	mov	r0, r6
   16340:	bl	f1c <malloc@plt>
   16344:	cmp	r0, #0
   16348:	str	r0, [sl, #12]
   1634c:	beq	165b8 <sf_gen_multicast+0xd14>
   16350:	mov	r1, #0
   16354:	mov	r2, r6
   16358:	add	sl, sl, #8
   1635c:	bl	f88 <memset@plt>
   16360:	cmp	r6, #207	; 0xcf
   16364:	str	r6, [sl]
   16368:	bls	165b8 <sf_gen_multicast+0xd14>
   1636c:	sub	r0, r6, #208	; 0xd0
   16370:	mov	r2, #4
   16374:	str	r0, [sl]
   16378:	ldr	r1, [sl, #4]
   1637c:	adds	r0, r1, r0
   16380:	mov	r1, #69	; 0x45
   16384:	str	r2, [r0, #20]
   16388:	str	r5, [r0, #4]
   1638c:	str	r1, [r0, #8]
   16390:	ldr	r1, [r0, #44]	; 0x2c
   16394:	clz	r1, r1
   16398:	lsr	r1, r1, #5
   1639c:	str	r1, [r0, #44]	; 0x2c
   163a0:	str	r0, [r0, #96]	; 0x60
   163a4:	beq	163dc <sf_gen_multicast+0xb38>
   163a8:	ldr	r1, [r4, #96]	; 0x60
   163ac:	mov	r2, r0
   163b0:	ldr	r3, [r2, #44]	; 0x2c
   163b4:	add	r7, r2, #84	; 0x54
   163b8:	cmp	r3, #0
   163bc:	mov	r3, #84	; 0x54
   163c0:	movweq	r3, #60	; 0x3c
   163c4:	addeq	r7, r2, #60	; 0x3c
   163c8:	ldr	r2, [r2, r3]
   163cc:	str	r1, [r7]
   163d0:	cmp	r2, #0
   163d4:	bne	163b0 <sf_gen_multicast+0xb0c>
   163d8:	ldr	r1, [r0, #44]	; 0x2c
   163dc:	clz	r1, r1
   163e0:	cmp	r4, #0
   163e4:	lsr	r1, r1, #5
   163e8:	str	r1, [r0, #44]	; 0x2c
   163ec:	ldr	r2, [r4, #44]	; 0x2c
   163f0:	clz	r1, r2
   163f4:	lsr	r1, r1, #5
   163f8:	str	r1, [r4, #44]	; 0x2c
   163fc:	str	r4, [sp]
   16400:	beq	1644c <sf_gen_multicast+0xba8>
   16404:	cmp	r2, #0
   16408:	mov	r2, #60	; 0x3c
   1640c:	add	r1, r4, #60	; 0x3c
   16410:	movweq	r2, #84	; 0x54
   16414:	addeq	r1, r4, #84	; 0x54
   16418:	ldr	r2, [r4, r2]
   1641c:	cmp	r2, #0
   16420:	beq	16450 <sf_gen_multicast+0xbac>
   16424:	ldr	r3, [r2, #44]	; 0x2c
   16428:	add	r1, r2, #84	; 0x54
   1642c:	cmp	r3, #0
   16430:	mov	r3, #84	; 0x54
   16434:	movweq	r3, #60	; 0x3c
   16438:	addeq	r1, r2, #60	; 0x3c
   1643c:	ldr	r2, [r2, r3]
   16440:	cmp	r2, #0
   16444:	bne	16424 <sf_gen_multicast+0xb80>
   16448:	b	16450 <sf_gen_multicast+0xbac>
   1644c:	mov	r1, sp
   16450:	str	r0, [r1]
   16454:	ldr	r1, [r4, #44]	; 0x2c
   16458:	clz	r1, r1
   1645c:	lsr	r1, r1, #5
   16460:	str	r1, [r4, #44]	; 0x2c
   16464:	ldr	r0, [r0, #96]	; 0x60
   16468:	str	r0, [r4, #96]	; 0x60
   1646c:	mov	r0, r4
   16470:	sub	sp, fp, #28
   16474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16478:	cmp	r0, #192	; 0xc0
   1647c:	beq	15aa4 <sf_gen_multicast+0x200>
   16480:	b	165ac <sf_gen_multicast+0xd08>
   16484:	ldrb	r0, [r8]
   16488:	cmp	r0, #1
   1648c:	bne	165ac <sf_gen_multicast+0xd08>
   16490:	mov	r0, #1
   16494:	mov	r1, #4
   16498:	mov	r2, #8
   1649c:	mov	r3, #65280	; 0xff00
   164a0:	bl	9ef4 <gen_cmp>
   164a4:	mov	r5, r0
   164a8:	ldr	r0, [r0, #44]	; 0x2c
   164ac:	clz	r0, r0
   164b0:	lsr	r0, r0, #5
   164b4:	str	r0, [r5, #44]	; 0x2c
   164b8:	ldr	r0, [r8, #52]	; 0x34
   164bc:	bl	165d4 <gen_mac_multicast>
   164c0:	mov	r4, r0
   164c4:	cmp	r5, #0
   164c8:	beq	164fc <sf_gen_multicast+0xc58>
   164cc:	ldr	r0, [r4, #96]	; 0x60
   164d0:	mov	r1, r5
   164d4:	ldr	r2, [r1, #44]	; 0x2c
   164d8:	add	r3, r1, #84	; 0x54
   164dc:	cmp	r2, #0
   164e0:	mov	r2, #84	; 0x54
   164e4:	movweq	r2, #60	; 0x3c
   164e8:	addeq	r3, r1, #60	; 0x3c
   164ec:	ldr	r1, [r1, r2]
   164f0:	str	r0, [r3]
   164f4:	cmp	r1, #0
   164f8:	bne	164d4 <sf_gen_multicast+0xc30>
   164fc:	ldr	r0, [r5, #44]	; 0x2c
   16500:	cmp	r4, #0
   16504:	clz	r0, r0
   16508:	lsr	r0, r0, #5
   1650c:	str	r0, [r5, #44]	; 0x2c
   16510:	ldr	r1, [r4, #44]	; 0x2c
   16514:	clz	r0, r1
   16518:	lsr	r0, r0, #5
   1651c:	str	r0, [r4, #44]	; 0x2c
   16520:	str	r4, [sp]
   16524:	beq	16570 <sf_gen_multicast+0xccc>
   16528:	cmp	r1, #0
   1652c:	mov	r1, #60	; 0x3c
   16530:	add	r0, r4, #60	; 0x3c
   16534:	movweq	r1, #84	; 0x54
   16538:	addeq	r0, r4, #84	; 0x54
   1653c:	ldr	r1, [r4, r1]
   16540:	cmp	r1, #0
   16544:	beq	16574 <sf_gen_multicast+0xcd0>
   16548:	ldr	r2, [r1, #44]	; 0x2c
   1654c:	add	r0, r1, #84	; 0x54
   16550:	cmp	r2, #0
   16554:	mov	r2, #84	; 0x54
   16558:	movweq	r2, #60	; 0x3c
   1655c:	addeq	r0, r1, #60	; 0x3c
   16560:	ldr	r1, [r1, r2]
   16564:	cmp	r1, #0
   16568:	bne	16548 <sf_gen_multicast+0xca4>
   1656c:	b	16574 <sf_gen_multicast+0xcd0>
   16570:	mov	r0, sp
   16574:	str	r5, [r0]
   16578:	ldr	r0, [r4, #44]	; 0x2c
   1657c:	clz	r0, r0
   16580:	lsr	r0, r0, #5
   16584:	str	r0, [r4, #44]	; 0x2c
   16588:	ldr	r0, [r5, #96]	; 0x60
   1658c:	str	r0, [r4, #96]	; 0x60
   16590:	mov	r0, r4
   16594:	sub	sp, fp, #28
   16598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1659c:	mov	r0, #1
   165a0:	sub	sp, fp, #28
   165a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165a8:	b	165d4 <gen_mac_multicast>
   165ac:	ldr	r0, [pc, #28]	; 165d0 <sf_gen_multicast+0xd2c>
   165b0:	add	r0, pc, r0
   165b4:	bl	2204 <sf_bpf_error>
   165b8:	ldr	r0, [pc, #12]	; 165cc <sf_gen_multicast+0xd28>
   165bc:	add	r0, pc, r0
   165c0:	bl	2204 <sf_bpf_error>
   165c4:	.word	0x00030b48
   165c8:	.word	0x0003095c
   165cc:	.word	0x00012dd8
   165d0:	.word	0x00012879

000165d4 <gen_mac_multicast>:
   165d4:	push	{r4, r5, r6, r7, fp, lr}
   165d8:	add	fp, sp, #16
   165dc:	mov	r1, r0
   165e0:	mov	r0, #1
   165e4:	mov	r2, #16
   165e8:	mov	r6, #1
   165ec:	bl	1669c <gen_load_a>
   165f0:	ldr	r1, [pc, #152]	; 16690 <gen_mac_multicast+0xbc>
   165f4:	mov	r4, r0
   165f8:	add	r1, pc, r1
   165fc:	ldr	r0, [r1, #92]	; 0x5c
   16600:	ldr	r7, [pc, #140]	; 16694 <gen_mac_multicast+0xc0>
   16604:	add	r7, pc, r7
   16608:	ldr	r5, [r7, r0, lsl #3]!
   1660c:	cmp	r5, #207	; 0xcf
   16610:	bhi	1665c <gen_mac_multicast+0x88>
   16614:	add	r2, r0, #1
   16618:	cmp	r0, #15
   1661c:	str	r2, [r1, #92]	; 0x5c
   16620:	bge	16684 <gen_mac_multicast+0xb0>
   16624:	mov	r0, #1024	; 0x400
   16628:	lsl	r5, r0, r2
   1662c:	mov	r0, r5
   16630:	bl	f1c <malloc@plt>
   16634:	cmp	r0, #0
   16638:	str	r0, [r7, #12]
   1663c:	beq	16684 <gen_mac_multicast+0xb0>
   16640:	mov	r1, #0
   16644:	mov	r2, r5
   16648:	add	r7, r7, #8
   1664c:	bl	f88 <memset@plt>
   16650:	cmp	r5, #207	; 0xcf
   16654:	str	r5, [r7]
   16658:	bls	16684 <gen_mac_multicast+0xb0>
   1665c:	sub	r0, r5, #208	; 0xd0
   16660:	str	r0, [r7]
   16664:	ldr	r1, [r7, #4]
   16668:	add	r0, r1, r0
   1666c:	mov	r1, #69	; 0x45
   16670:	str	r6, [r0, #20]
   16674:	str	r4, [r0, #4]
   16678:	str	r1, [r0, #8]
   1667c:	str	r0, [r0, #96]	; 0x60
   16680:	pop	{r4, r5, r6, r7, fp, pc}
   16684:	ldr	r0, [pc, #12]	; 16698 <gen_mac_multicast+0xc4>
   16688:	add	r0, pc, r0
   1668c:	bl	2204 <sf_bpf_error>
   16690:	.word	0x0002fee8
   16694:	.word	0x0002fe1c
   16698:	.word	0x00012d0c

0001669c <gen_load_a>:
   1669c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   166a0:	add	fp, sp, #24
   166a4:	cmp	r0, #6
   166a8:	bhi	16a14 <gen_load_a+0x378>
   166ac:	mov	r5, r1
   166b0:	add	r1, pc, #8
   166b4:	mov	r8, r2
   166b8:	ldr	r0, [r1, r0, lsl #2]
   166bc:	add	pc, r1, r0
   166c0:	.word	0x000000c4
   166c4:	.word	0x0000001c
   166c8:	.word	0x00000168
   166cc:	.word	0x000001d0
   166d0:	.word	0x0000014c
   166d4:	.word	0x00000240
   166d8:	.word	0x0000028c
   166dc:	bl	133bc <gen_llprefixlen>
   166e0:	cmp	r0, #0
   166e4:	beq	16784 <gen_load_a+0xe8>
   166e8:	ldr	r1, [pc, #828]	; 16a2c <gen_load_a+0x390>
   166ec:	mov	r6, r0
   166f0:	add	r1, pc, r1
   166f4:	ldr	r0, [r1, #92]	; 0x5c
   166f8:	ldr	r4, [pc, #816]	; 16a30 <gen_load_a+0x394>
   166fc:	add	r4, pc, r4
   16700:	ldr	r7, [r4, r0, lsl #3]!
   16704:	cmp	r7, #19
   16708:	bhi	16754 <gen_load_a+0xb8>
   1670c:	add	r2, r0, #1
   16710:	cmp	r0, #15
   16714:	str	r2, [r1, #92]	; 0x5c
   16718:	bge	16a18 <gen_load_a+0x37c>
   1671c:	mov	r0, #1024	; 0x400
   16720:	lsl	r7, r0, r2
   16724:	mov	r0, r7
   16728:	bl	f1c <malloc@plt>
   1672c:	cmp	r0, #0
   16730:	str	r0, [r4, #12]
   16734:	beq	16a18 <gen_load_a+0x37c>
   16738:	mov	r1, #0
   1673c:	mov	r2, r7
   16740:	add	r4, r4, #8
   16744:	bl	f88 <memset@plt>
   16748:	cmp	r7, #19
   1674c:	str	r7, [r4]
   16750:	bls	16a18 <gen_load_a+0x37c>
   16754:	sub	r2, r7, #20
   16758:	orr	r1, r8, #64	; 0x40
   1675c:	str	r2, [r4]
   16760:	ldr	r0, [r4, #4]
   16764:	str	r1, [r0, r2]!
   16768:	mov	r2, r6
   1676c:	str	r5, [r0, #12]
   16770:	mov	r1, r2
   16774:	ldr	r2, [r2, #16]
   16778:	cmp	r2, #0
   1677c:	bne	16770 <gen_load_a+0xd4>
   16780:	b	16940 <gen_load_a+0x2a4>
   16784:	ldr	r1, [pc, #664]	; 16a24 <gen_load_a+0x388>
   16788:	add	r1, pc, r1
   1678c:	ldr	r0, [r1, #92]	; 0x5c
   16790:	ldr	r4, [pc, #656]	; 16a28 <gen_load_a+0x38c>
   16794:	add	r4, pc, r4
   16798:	ldr	r6, [r4, r0, lsl #3]!
   1679c:	cmp	r6, #19
   167a0:	bhi	167ec <gen_load_a+0x150>
   167a4:	add	r2, r0, #1
   167a8:	cmp	r0, #15
   167ac:	str	r2, [r1, #92]	; 0x5c
   167b0:	bge	16a18 <gen_load_a+0x37c>
   167b4:	mov	r0, #1024	; 0x400
   167b8:	lsl	r6, r0, r2
   167bc:	mov	r0, r6
   167c0:	bl	f1c <malloc@plt>
   167c4:	cmp	r0, #0
   167c8:	str	r0, [r4, #12]
   167cc:	beq	16a18 <gen_load_a+0x37c>
   167d0:	mov	r1, #0
   167d4:	mov	r2, r6
   167d8:	add	r4, r4, #8
   167dc:	bl	f88 <memset@plt>
   167e0:	cmp	r6, #19
   167e4:	str	r6, [r4]
   167e8:	bls	16a18 <gen_load_a+0x37c>
   167ec:	sub	r1, r6, #20
   167f0:	orr	r0, r8, #32
   167f4:	str	r1, [r4]
   167f8:	ldr	r6, [r4, #4]
   167fc:	str	r0, [r6, r1]!
   16800:	mov	r0, r6
   16804:	str	r5, [r6, #12]
   16808:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1680c:	ldr	r0, [pc, #560]	; 16a44 <gen_load_a+0x3a8>
   16810:	add	r0, pc, r0
   16814:	ldr	r0, [r0, #56]	; 0x38
   16818:	add	r0, r0, r5
   1681c:	mov	r1, r8
   16820:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16824:	b	1ecc4 <gen_load_macplrel>
   16828:	ldr	r7, [pc, #520]	; 16a38 <gen_load_a+0x39c>
   1682c:	add	r7, pc, r7
   16830:	ldrb	r0, [r7, #16]
   16834:	cmp	r0, #1
   16838:	bne	1696c <gen_load_a+0x2d0>
   1683c:	ldr	r0, [r7, #100]	; 0x64
   16840:	cmn	r0, #1
   16844:	bne	16850 <gen_load_a+0x1b4>
   16848:	bl	1309c <alloc_reg>
   1684c:	str	r0, [r7, #100]	; 0x64
   16850:	mov	r0, #97	; 0x61
   16854:	bl	1331c <new_stmt>
   16858:	mov	r6, r0
   1685c:	ldr	r0, [r7, #100]	; 0x64
   16860:	cmp	r6, #0
   16864:	str	r0, [r6, #12]
   16868:	beq	1696c <gen_load_a+0x2d0>
   1686c:	orr	r0, r8, #64	; 0x40
   16870:	bl	1331c <new_stmt>
   16874:	mov	r2, r6
   16878:	str	r5, [r0, #12]
   1687c:	mov	r1, r2
   16880:	ldr	r2, [r2, #16]
   16884:	cmp	r2, #0
   16888:	bne	1687c <gen_load_a+0x1e0>
   1688c:	b	16940 <gen_load_a+0x2a4>
   16890:	ldr	r7, [pc, #424]	; 16a40 <gen_load_a+0x3a4>
   16894:	add	r7, pc, r7
   16898:	ldr	r0, [r7, #48]	; 0x30
   1689c:	add	r4, r0, r5
   168a0:	ldrb	r0, [r7, #16]
   168a4:	cmp	r0, #1
   168a8:	bne	169f4 <gen_load_a+0x358>
   168ac:	ldr	r0, [r7, #100]	; 0x64
   168b0:	cmn	r0, #1
   168b4:	bne	168c0 <gen_load_a+0x224>
   168b8:	bl	1309c <alloc_reg>
   168bc:	str	r0, [r7, #100]	; 0x64
   168c0:	mov	r0, #97	; 0x61
   168c4:	bl	1331c <new_stmt>
   168c8:	mov	r6, r0
   168cc:	ldr	r0, [r7, #100]	; 0x64
   168d0:	cmp	r6, #0
   168d4:	str	r0, [r6, #12]
   168d8:	beq	169f4 <gen_load_a+0x358>
   168dc:	orr	r0, r8, #64	; 0x40
   168e0:	bl	1331c <new_stmt>
   168e4:	mov	r2, r6
   168e8:	str	r4, [r0, #12]
   168ec:	mov	r1, r2
   168f0:	ldr	r2, [r2, #16]
   168f4:	cmp	r2, #0
   168f8:	bne	168ec <gen_load_a+0x250>
   168fc:	b	16940 <gen_load_a+0x2a4>
   16900:	bl	134b4 <gen_loadx_iphdrlen>
   16904:	mov	r6, r0
   16908:	orr	r0, r8, #64	; 0x40
   1690c:	bl	1331c <new_stmt>
   16910:	ldr	r1, [pc, #304]	; 16a48 <gen_load_a+0x3ac>
   16914:	add	r1, pc, r1
   16918:	ldr	r2, [r1, #44]	; 0x2c
   1691c:	ldr	r1, [r1, #48]	; 0x30
   16920:	add	r2, r2, r5
   16924:	add	r1, r2, r1
   16928:	mov	r2, r6
   1692c:	str	r1, [r0, #12]
   16930:	mov	r1, r2
   16934:	ldr	r2, [r2, #16]
   16938:	cmp	r2, #0
   1693c:	bne	16930 <gen_load_a+0x294>
   16940:	str	r0, [r1, #16]
   16944:	mov	r0, r6
   16948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1694c:	ldr	r0, [pc, #248]	; 16a4c <gen_load_a+0x3b0>
   16950:	add	r0, pc, r0
   16954:	ldr	r0, [r0, #48]	; 0x30
   16958:	add	r0, r5, r0
   1695c:	add	r0, r0, #40	; 0x28
   16960:	mov	r1, r8
   16964:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16968:	b	1ecc4 <gen_load_macplrel>
   1696c:	ldr	r0, [r7, #92]	; 0x5c
   16970:	ldr	r4, [pc, #196]	; 16a3c <gen_load_a+0x3a0>
   16974:	add	r4, pc, r4
   16978:	ldr	r6, [r4, r0, lsl #3]!
   1697c:	cmp	r6, #19
   16980:	bhi	169cc <gen_load_a+0x330>
   16984:	add	r1, r0, #1
   16988:	cmp	r0, #15
   1698c:	str	r1, [r7, #92]	; 0x5c
   16990:	bge	16a18 <gen_load_a+0x37c>
   16994:	mov	r0, #1024	; 0x400
   16998:	lsl	r6, r0, r1
   1699c:	mov	r0, r6
   169a0:	bl	f1c <malloc@plt>
   169a4:	cmp	r0, #0
   169a8:	str	r0, [r4, #12]
   169ac:	beq	16a18 <gen_load_a+0x37c>
   169b0:	mov	r1, #0
   169b4:	mov	r2, r6
   169b8:	add	r4, r4, #8
   169bc:	bl	f88 <memset@plt>
   169c0:	cmp	r6, #19
   169c4:	str	r6, [r4]
   169c8:	bls	16a18 <gen_load_a+0x37c>
   169cc:	sub	r1, r6, #20
   169d0:	orr	r0, r8, #32
   169d4:	str	r1, [r4]
   169d8:	ldr	r6, [r4, #4]
   169dc:	str	r0, [r6, r1]!
   169e0:	ldr	r0, [r7, #44]	; 0x2c
   169e4:	add	r0, r0, r5
   169e8:	str	r0, [r6, #12]
   169ec:	mov	r0, r6
   169f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   169f4:	orr	r0, r8, #32
   169f8:	bl	1331c <new_stmt>
   169fc:	mov	r6, r0
   16a00:	ldr	r0, [r7, #44]	; 0x2c
   16a04:	add	r0, r0, r4
   16a08:	str	r0, [r6, #12]
   16a0c:	mov	r0, r6
   16a10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16a14:	bl	100c <abort@plt>
   16a18:	ldr	r0, [pc, #20]	; 16a34 <gen_load_a+0x398>
   16a1c:	add	r0, pc, r0
   16a20:	bl	2204 <sf_bpf_error>
   16a24:	.word	0x0002fd58
   16a28:	.word	0x0002fc8c
   16a2c:	.word	0x0002fdf0
   16a30:	.word	0x0002fd24
   16a34:	.word	0x00012978
   16a38:	.word	0x0002fcb4
   16a3c:	.word	0x0002faac
   16a40:	.word	0x0002fc4c
   16a44:	.word	0x0002fcd0
   16a48:	.word	0x0002fbcc
   16a4c:	.word	0x0002fb90

00016a50 <gen_cmp_ge>:
   16a50:	push	{r4, r5, r6, r7, fp, lr}
   16a54:	add	fp, sp, #16
   16a58:	mov	r4, r3
   16a5c:	bl	1669c <gen_load_a>
   16a60:	ldr	r1, [pc, #152]	; 16b00 <gen_cmp_ge+0xb0>
   16a64:	mov	r5, r0
   16a68:	add	r1, pc, r1
   16a6c:	ldr	r0, [r1, #92]	; 0x5c
   16a70:	ldr	r7, [pc, #140]	; 16b04 <gen_cmp_ge+0xb4>
   16a74:	add	r7, pc, r7
   16a78:	ldr	r6, [r7, r0, lsl #3]!
   16a7c:	cmp	r6, #207	; 0xcf
   16a80:	bhi	16acc <gen_cmp_ge+0x7c>
   16a84:	add	r2, r0, #1
   16a88:	cmp	r0, #15
   16a8c:	str	r2, [r1, #92]	; 0x5c
   16a90:	bge	16af4 <gen_cmp_ge+0xa4>
   16a94:	mov	r0, #1024	; 0x400
   16a98:	lsl	r6, r0, r2
   16a9c:	mov	r0, r6
   16aa0:	bl	f1c <malloc@plt>
   16aa4:	cmp	r0, #0
   16aa8:	str	r0, [r7, #12]
   16aac:	beq	16af4 <gen_cmp_ge+0xa4>
   16ab0:	mov	r1, #0
   16ab4:	mov	r2, r6
   16ab8:	add	r7, r7, #8
   16abc:	bl	f88 <memset@plt>
   16ac0:	cmp	r6, #207	; 0xcf
   16ac4:	str	r6, [r7]
   16ac8:	bls	16af4 <gen_cmp_ge+0xa4>
   16acc:	sub	r0, r6, #208	; 0xd0
   16ad0:	str	r0, [r7]
   16ad4:	ldr	r1, [r7, #4]
   16ad8:	add	r0, r1, r0
   16adc:	mov	r1, #53	; 0x35
   16ae0:	str	r5, [r0, #4]
   16ae4:	str	r1, [r0, #8]
   16ae8:	str	r4, [r0, #20]
   16aec:	str	r0, [r0, #96]	; 0x60
   16af0:	pop	{r4, r5, r6, r7, fp, pc}
   16af4:	ldr	r0, [pc, #12]	; 16b08 <gen_cmp_ge+0xb8>
   16af8:	add	r0, pc, r0
   16afc:	bl	2204 <sf_bpf_error>
   16b00:	.word	0x0002fa78
   16b04:	.word	0x0002f9ac
   16b08:	.word	0x0001289c

00016b0c <sf_gen_inbound>:
   16b0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16b10:	add	fp, sp, #24
   16b14:	ldr	r9, [pc, #1684]	; 171b0 <sf_gen_inbound+0x6a4>
   16b18:	mov	r6, r0
   16b1c:	add	r9, pc, r9
   16b20:	ldr	r1, [r9, #36]	; 0x24
   16b24:	sub	r0, r1, #8
   16b28:	cmp	r0, #218	; 0xda
   16b2c:	bhi	171a4 <sf_gen_inbound+0x698>
   16b30:	add	r2, pc, #4
   16b34:	ldr	r0, [r2, r0, lsl #2]
   16b38:	add	pc, r2, r0
   16b3c:	.word	0x000005b4
   16b40:	.word	0x00000668
   16b44:	.word	0x00000668
   16b48:	.word	0x00000668
   16b4c:	.word	0x00000668
   16b50:	.word	0x00000668
   16b54:	.word	0x00000668
   16b58:	.word	0x00000668
   16b5c:	.word	0x00000668
   16b60:	.word	0x00000668
   16b64:	.word	0x00000668
   16b68:	.word	0x00000668
   16b6c:	.word	0x00000668
   16b70:	.word	0x00000668
   16b74:	.word	0x00000668
   16b78:	.word	0x00000668
   16b7c:	.word	0x00000668
   16b80:	.word	0x00000668
   16b84:	.word	0x00000668
   16b88:	.word	0x00000668
   16b8c:	.word	0x00000668
   16b90:	.word	0x00000668
   16b94:	.word	0x00000668
   16b98:	.word	0x00000668
   16b9c:	.word	0x00000668
   16ba0:	.word	0x00000668
   16ba4:	.word	0x00000668
   16ba8:	.word	0x00000668
   16bac:	.word	0x00000668
   16bb0:	.word	0x00000668
   16bb4:	.word	0x00000668
   16bb8:	.word	0x00000668
   16bbc:	.word	0x00000668
   16bc0:	.word	0x00000668
   16bc4:	.word	0x00000668
   16bc8:	.word	0x00000668
   16bcc:	.word	0x00000668
   16bd0:	.word	0x00000668
   16bd4:	.word	0x00000668
   16bd8:	.word	0x00000668
   16bdc:	.word	0x00000668
   16be0:	.word	0x00000668
   16be4:	.word	0x00000668
   16be8:	.word	0x00000668
   16bec:	.word	0x00000668
   16bf0:	.word	0x00000668
   16bf4:	.word	0x00000668
   16bf8:	.word	0x00000668
   16bfc:	.word	0x00000668
   16c00:	.word	0x00000668
   16c04:	.word	0x00000668
   16c08:	.word	0x00000668
   16c0c:	.word	0x00000668
   16c10:	.word	0x00000668
   16c14:	.word	0x00000668
   16c18:	.word	0x00000668
   16c1c:	.word	0x00000668
   16c20:	.word	0x00000668
   16c24:	.word	0x00000668
   16c28:	.word	0x00000668
   16c2c:	.word	0x00000668
   16c30:	.word	0x00000668
   16c34:	.word	0x00000668
   16c38:	.word	0x00000668
   16c3c:	.word	0x00000668
   16c40:	.word	0x00000668
   16c44:	.word	0x00000668
   16c48:	.word	0x00000668
   16c4c:	.word	0x00000668
   16c50:	.word	0x00000668
   16c54:	.word	0x00000668
   16c58:	.word	0x00000668
   16c5c:	.word	0x00000668
   16c60:	.word	0x00000668
   16c64:	.word	0x00000668
   16c68:	.word	0x00000668
   16c6c:	.word	0x00000668
   16c70:	.word	0x00000668
   16c74:	.word	0x00000668
   16c78:	.word	0x00000668
   16c7c:	.word	0x00000668
   16c80:	.word	0x00000668
   16c84:	.word	0x00000668
   16c88:	.word	0x00000668
   16c8c:	.word	0x00000668
   16c90:	.word	0x00000668
   16c94:	.word	0x00000668
   16c98:	.word	0x00000668
   16c9c:	.word	0x00000668
   16ca0:	.word	0x00000668
   16ca4:	.word	0x00000668
   16ca8:	.word	0x00000668
   16cac:	.word	0x00000668
   16cb0:	.word	0x00000668
   16cb4:	.word	0x00000668
   16cb8:	.word	0x00000668
   16cbc:	.word	0x00000668
   16cc0:	.word	0x00000668
   16cc4:	.word	0x00000668
   16cc8:	.word	0x00000668
   16ccc:	.word	0x00000668
   16cd0:	.word	0x00000668
   16cd4:	.word	0x00000668
   16cd8:	.word	0x00000668
   16cdc:	.word	0x00000668
   16ce0:	.word	0x000005f0
   16ce4:	.word	0x00000668
   16ce8:	.word	0x00000668
   16cec:	.word	0x00000668
   16cf0:	.word	0x00000668
   16cf4:	.word	0x00000668
   16cf8:	.word	0x00000668
   16cfc:	.word	0x00000668
   16d00:	.word	0x00000668
   16d04:	.word	0x00000668
   16d08:	.word	0x00000668
   16d0c:	.word	0x00000668
   16d10:	.word	0x00000668
   16d14:	.word	0x00000668
   16d18:	.word	0x00000668
   16d1c:	.word	0x00000668
   16d20:	.word	0x00000668
   16d24:	.word	0x0000036c
   16d28:	.word	0x0000036c
   16d2c:	.word	0x0000036c
   16d30:	.word	0x0000036c
   16d34:	.word	0x0000036c
   16d38:	.word	0x0000036c
   16d3c:	.word	0x0000036c
   16d40:	.word	0x0000036c
   16d44:	.word	0x00000668
   16d48:	.word	0x00000668
   16d4c:	.word	0x00000668
   16d50:	.word	0x00000668
   16d54:	.word	0x00000668
   16d58:	.word	0x00000668
   16d5c:	.word	0x00000668
   16d60:	.word	0x00000668
   16d64:	.word	0x00000668
   16d68:	.word	0x00000668
   16d6c:	.word	0x00000668
   16d70:	.word	0x00000668
   16d74:	.word	0x00000668
   16d78:	.word	0x00000668
   16d7c:	.word	0x00000668
   16d80:	.word	0x00000668
   16d84:	.word	0x00000668
   16d88:	.word	0x00000668
   16d8c:	.word	0x00000668
   16d90:	.word	0x00000668
   16d94:	.word	0x00000668
   16d98:	.word	0x00000668
   16d9c:	.word	0x00000668
   16da0:	.word	0x00000668
   16da4:	.word	0x00000668
   16da8:	.word	0x00000668
   16dac:	.word	0x0000036c
   16db0:	.word	0x00000668
   16db4:	.word	0x00000610
   16db8:	.word	0x0000036c
   16dbc:	.word	0x0000036c
   16dc0:	.word	0x00000668
   16dc4:	.word	0x00000668
   16dc8:	.word	0x00000668
   16dcc:	.word	0x00000668
   16dd0:	.word	0x00000668
   16dd4:	.word	0x00000668
   16dd8:	.word	0x00000668
   16ddc:	.word	0x00000668
   16de0:	.word	0x00000668
   16de4:	.word	0x0000036c
   16de8:	.word	0x0000036c
   16dec:	.word	0x0000036c
   16df0:	.word	0x0000036c
   16df4:	.word	0x00000668
   16df8:	.word	0x0000036c
   16dfc:	.word	0x00000668
   16e00:	.word	0x00000668
   16e04:	.word	0x00000668
   16e08:	.word	0x00000668
   16e0c:	.word	0x00000668
   16e10:	.word	0x00000668
   16e14:	.word	0x00000668
   16e18:	.word	0x00000668
   16e1c:	.word	0x00000668
   16e20:	.word	0x00000668
   16e24:	.word	0x0000036c
   16e28:	.word	0x00000668
   16e2c:	.word	0x00000668
   16e30:	.word	0x00000668
   16e34:	.word	0x00000668
   16e38:	.word	0x00000668
   16e3c:	.word	0x0000036c
   16e40:	.word	0x00000668
   16e44:	.word	0x00000668
   16e48:	.word	0x00000668
   16e4c:	.word	0x00000668
   16e50:	.word	0x00000668
   16e54:	.word	0x00000668
   16e58:	.word	0x00000668
   16e5c:	.word	0x00000668
   16e60:	.word	0x00000668
   16e64:	.word	0x00000668
   16e68:	.word	0x00000668
   16e6c:	.word	0x00000668
   16e70:	.word	0x00000668
   16e74:	.word	0x00000668
   16e78:	.word	0x00000668
   16e7c:	.word	0x00000668
   16e80:	.word	0x00000668
   16e84:	.word	0x00000668
   16e88:	.word	0x00000668
   16e8c:	.word	0x00000668
   16e90:	.word	0x00000668
   16e94:	.word	0x00000668
   16e98:	.word	0x00000668
   16e9c:	.word	0x00000668
   16ea0:	.word	0x00000668
   16ea4:	.word	0x00000630
   16ea8:	mov	r0, #1
   16eac:	mov	r1, #3
   16eb0:	mov	r2, #16
   16eb4:	bl	1669c <gen_load_a>
   16eb8:	mov	r8, r0
   16ebc:	ldr	r0, [r9, #92]	; 0x5c
   16ec0:	ldr	r4, [pc, #748]	; 171b4 <sf_gen_inbound+0x6a8>
   16ec4:	cmp	r6, #0
   16ec8:	add	r4, pc, r4
   16ecc:	mov	r7, r4
   16ed0:	ldr	r5, [r7, r0, lsl #3]!
   16ed4:	beq	16f2c <sf_gen_inbound+0x420>
   16ed8:	cmp	r5, #19
   16edc:	bhi	16f80 <sf_gen_inbound+0x474>
   16ee0:	add	r6, r0, #1
   16ee4:	cmp	r0, #15
   16ee8:	str	r6, [r9, #92]	; 0x5c
   16eec:	bge	17198 <sf_gen_inbound+0x68c>
   16ef0:	mov	r0, #1024	; 0x400
   16ef4:	lsl	r5, r0, r6
   16ef8:	mov	r0, r5
   16efc:	bl	f1c <malloc@plt>
   16f00:	cmp	r0, #0
   16f04:	str	r0, [r7, #12]
   16f08:	beq	17198 <sf_gen_inbound+0x68c>
   16f0c:	mov	r1, #0
   16f10:	mov	r2, r5
   16f14:	add	r7, r7, #8
   16f18:	bl	f88 <memset@plt>
   16f1c:	cmp	r5, #19
   16f20:	str	r5, [r7]
   16f24:	bhi	16f84 <sf_gen_inbound+0x478>
   16f28:	b	17198 <sf_gen_inbound+0x68c>
   16f2c:	cmp	r5, #19
   16f30:	bhi	17038 <sf_gen_inbound+0x52c>
   16f34:	add	r6, r0, #1
   16f38:	cmp	r0, #15
   16f3c:	str	r6, [r9, #92]	; 0x5c
   16f40:	bge	17198 <sf_gen_inbound+0x68c>
   16f44:	mov	r0, #1024	; 0x400
   16f48:	lsl	r5, r0, r6
   16f4c:	mov	r0, r5
   16f50:	bl	f1c <malloc@plt>
   16f54:	cmp	r0, #0
   16f58:	str	r0, [r7, #12]
   16f5c:	beq	17198 <sf_gen_inbound+0x68c>
   16f60:	mov	r1, #0
   16f64:	mov	r2, r5
   16f68:	add	r7, r7, #8
   16f6c:	bl	f88 <memset@plt>
   16f70:	cmp	r5, #19
   16f74:	str	r5, [r7]
   16f78:	bhi	1703c <sf_gen_inbound+0x530>
   16f7c:	b	17198 <sf_gen_inbound+0x68c>
   16f80:	mov	r6, r0
   16f84:	sub	r1, r5, #20
   16f88:	mov	r2, #84	; 0x54
   16f8c:	str	r1, [r7]
   16f90:	ldr	r0, [r7, #4]
   16f94:	str	r2, [r0, r1]!
   16f98:	mov	r1, #1
   16f9c:	mov	r2, r8
   16fa0:	str	r1, [r0, #12]
   16fa4:	mov	r1, r2
   16fa8:	ldr	r2, [r2, #16]
   16fac:	cmp	r2, #0
   16fb0:	bne	16fa4 <sf_gen_inbound+0x498>
   16fb4:	str	r0, [r1, #16]
   16fb8:	ldr	r5, [r4, r6, lsl #3]!
   16fbc:	cmp	r5, #207	; 0xcf
   16fc0:	bhi	1700c <sf_gen_inbound+0x500>
   16fc4:	add	r0, r6, #1
   16fc8:	cmp	r6, #15
   16fcc:	str	r0, [r9, #92]	; 0x5c
   16fd0:	bge	17198 <sf_gen_inbound+0x68c>
   16fd4:	mov	r1, #1024	; 0x400
   16fd8:	lsl	r5, r1, r0
   16fdc:	mov	r0, r5
   16fe0:	bl	f1c <malloc@plt>
   16fe4:	cmp	r0, #0
   16fe8:	str	r0, [r4, #12]
   16fec:	beq	17198 <sf_gen_inbound+0x68c>
   16ff0:	mov	r1, #0
   16ff4:	mov	r2, r5
   16ff8:	add	r4, r4, #8
   16ffc:	bl	f88 <memset@plt>
   17000:	cmp	r5, #207	; 0xcf
   17004:	str	r5, [r4]
   17008:	bls	17198 <sf_gen_inbound+0x68c>
   1700c:	sub	r0, r5, #208	; 0xd0
   17010:	str	r0, [r4]
   17014:	ldr	r1, [r4, #4]
   17018:	add	r0, r1, r0
   1701c:	mov	r1, #21
   17020:	str	r8, [r0, #4]
   17024:	str	r1, [r0, #8]
   17028:	mov	r1, #0
   1702c:	str	r1, [r0, #20]
   17030:	str	r0, [r0, #96]	; 0x60
   17034:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17038:	mov	r6, r0
   1703c:	sub	r1, r5, #20
   17040:	mov	r2, #84	; 0x54
   17044:	str	r1, [r7]
   17048:	ldr	r0, [r7, #4]
   1704c:	str	r2, [r0, r1]!
   17050:	mov	r1, #1
   17054:	mov	r2, r8
   17058:	str	r1, [r0, #12]
   1705c:	mov	r1, r2
   17060:	ldr	r2, [r2, #16]
   17064:	cmp	r2, #0
   17068:	bne	1705c <sf_gen_inbound+0x550>
   1706c:	str	r0, [r1, #16]
   17070:	ldr	r5, [r4, r6, lsl #3]!
   17074:	cmp	r5, #207	; 0xcf
   17078:	bhi	170c4 <sf_gen_inbound+0x5b8>
   1707c:	add	r0, r6, #1
   17080:	cmp	r6, #15
   17084:	str	r0, [r9, #92]	; 0x5c
   17088:	bge	17198 <sf_gen_inbound+0x68c>
   1708c:	mov	r1, #1024	; 0x400
   17090:	lsl	r5, r1, r0
   17094:	mov	r0, r5
   17098:	bl	f1c <malloc@plt>
   1709c:	cmp	r0, #0
   170a0:	str	r0, [r4, #12]
   170a4:	beq	17198 <sf_gen_inbound+0x68c>
   170a8:	mov	r1, #0
   170ac:	mov	r2, r5
   170b0:	add	r4, r4, #8
   170b4:	bl	f88 <memset@plt>
   170b8:	cmp	r5, #207	; 0xcf
   170bc:	str	r5, [r4]
   170c0:	bls	17198 <sf_gen_inbound+0x68c>
   170c4:	sub	r0, r5, #208	; 0xd0
   170c8:	str	r0, [r4]
   170cc:	ldr	r1, [r4, #4]
   170d0:	add	r0, r1, r0
   170d4:	mov	r1, #21
   170d8:	str	r8, [r0, #4]
   170dc:	str	r1, [r0, #8]
   170e0:	mov	r1, #1
   170e4:	str	r1, [r0, #20]
   170e8:	str	r0, [r0, #96]	; 0x60
   170ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   170f0:	mov	r0, #0
   170f4:	bl	14038 <sf_gen_loadi>
   170f8:	mov	r1, r0
   170fc:	mov	r0, #1
   17100:	mov	r2, #1
   17104:	bl	11f70 <sf_gen_load>
   17108:	mov	r4, r0
   1710c:	mov	r0, #0
   17110:	bl	14038 <sf_gen_loadi>
   17114:	mov	r2, r0
   17118:	mov	r0, #16
   1711c:	mov	r1, r4
   17120:	mov	r3, r6
   17124:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17128:	b	1392c <sf_gen_relation>
   1712c:	mov	r0, #1
   17130:	mov	r1, #0
   17134:	mov	r2, #8
   17138:	cmp	r6, #0
   1713c:	beq	17160 <sf_gen_inbound+0x654>
   17140:	mov	r3, #4
   17144:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17148:	b	9ef4 <gen_cmp>
   1714c:	mov	r0, #1
   17150:	mov	r1, #0
   17154:	mov	r2, #16
   17158:	cmp	r6, #0
   1715c:	bne	17180 <sf_gen_inbound+0x674>
   17160:	mov	r3, #0
   17164:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17168:	b	9ef4 <gen_cmp>
   1716c:	mov	r0, #1
   17170:	mov	r1, #2
   17174:	mov	r2, #8
   17178:	cmp	r6, #0
   1717c:	beq	1718c <sf_gen_inbound+0x680>
   17180:	mov	r3, #1
   17184:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17188:	b	9ef4 <gen_cmp>
   1718c:	mov	r3, #2
   17190:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17194:	b	9ef4 <gen_cmp>
   17198:	ldr	r0, [pc, #28]	; 171bc <sf_gen_inbound+0x6b0>
   1719c:	add	r0, pc, r0
   171a0:	bl	2204 <sf_bpf_error>
   171a4:	ldr	r0, [pc, #12]	; 171b8 <sf_gen_inbound+0x6ac>
   171a8:	add	r0, pc, r0
   171ac:	bl	2204 <sf_bpf_error>
   171b0:	.word	0x0002f9c4
   171b4:	.word	0x0002f558
   171b8:	.word	0x00011cee
   171bc:	.word	0x000121f8

000171c0 <sf_gen_pf_ifname>:
   171c0:	push	{fp, lr}
   171c4:	mov	fp, sp
   171c8:	ldr	r0, [pc, #4]	; 171d4 <sf_gen_pf_ifname+0x14>
   171cc:	add	r0, pc, r0
   171d0:	bl	2204 <sf_bpf_error>
   171d4:	.word	0x00011cf8

000171d8 <sf_gen_pf_ruleset>:
   171d8:	push	{fp, lr}
   171dc:	mov	fp, sp
   171e0:	ldr	r0, [pc, #4]	; 171ec <sf_gen_pf_ruleset+0x14>
   171e4:	add	r0, pc, r0
   171e8:	bl	2204 <sf_bpf_error>
   171ec:	.word	0x00011d08

000171f0 <sf_gen_pf_rnr>:
   171f0:	push	{fp, lr}
   171f4:	mov	fp, sp
   171f8:	ldr	r0, [pc, #4]	; 17204 <sf_gen_pf_rnr+0x14>
   171fc:	add	r0, pc, r0
   17200:	bl	2204 <sf_bpf_error>
   17204:	.word	0x00011cf0

00017208 <sf_gen_pf_srnr>:
   17208:	push	{fp, lr}
   1720c:	mov	fp, sp
   17210:	ldr	r0, [pc, #4]	; 1721c <sf_gen_pf_srnr+0x14>
   17214:	add	r0, pc, r0
   17218:	bl	2204 <sf_bpf_error>
   1721c:	.word	0x00011cd8

00017220 <sf_gen_pf_reason>:
   17220:	push	{fp, lr}
   17224:	mov	fp, sp
   17228:	ldr	r0, [pc, #4]	; 17234 <sf_gen_pf_reason+0x14>
   1722c:	add	r0, pc, r0
   17230:	bl	2204 <sf_bpf_error>
   17234:	.word	0x00011cc0

00017238 <sf_gen_pf_action>:
   17238:	push	{fp, lr}
   1723c:	mov	fp, sp
   17240:	ldr	r0, [pc, #4]	; 1724c <sf_gen_pf_action+0x14>
   17244:	add	r0, pc, r0
   17248:	bl	2204 <sf_bpf_error>
   1724c:	.word	0x00011ca8

00017250 <sf_gen_p80211_type>:
   17250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17254:	add	fp, sp, #28
   17258:	sub	sp, sp, #4
   1725c:	ldr	r9, [pc, #400]	; 173f4 <sf_gen_p80211_type+0x1a4>
   17260:	mov	r8, r0
   17264:	mov	r6, r1
   17268:	add	r9, pc, r9
   1726c:	ldr	r0, [r9, #36]	; 0x24
   17270:	sub	r1, r0, #105	; 0x69
   17274:	cmp	r1, #22
   17278:	bhi	17290 <sf_gen_p80211_type+0x40>
   1727c:	movw	r3, #16385	; 0x4001
   17280:	mov	r2, #1
   17284:	movt	r3, #64	; 0x40
   17288:	tst	r3, r2, lsl r1
   1728c:	bne	17298 <sf_gen_p80211_type+0x48>
   17290:	cmp	r0, #163	; 0xa3
   17294:	bne	173e8 <sf_gen_p80211_type+0x198>
   17298:	mov	r0, #1
   1729c:	mov	r1, #0
   172a0:	mov	r2, #16
   172a4:	bl	1669c <gen_load_a>
   172a8:	mov	sl, r0
   172ac:	ldr	r0, [r9, #92]	; 0x5c
   172b0:	cmn	r6, #1
   172b4:	beq	17318 <sf_gen_p80211_type+0xc8>
   172b8:	ldr	r5, [pc, #316]	; 173fc <sf_gen_p80211_type+0x1ac>
   172bc:	add	r5, pc, r5
   172c0:	ldr	r7, [r5, r0, lsl #3]!
   172c4:	cmp	r7, #19
   172c8:	bhi	17320 <sf_gen_p80211_type+0xd0>
   172cc:	add	r4, r0, #1
   172d0:	cmp	r0, #15
   172d4:	str	r4, [r9, #92]	; 0x5c
   172d8:	bge	173dc <sf_gen_p80211_type+0x18c>
   172dc:	mov	r0, #1024	; 0x400
   172e0:	lsl	r7, r0, r4
   172e4:	mov	r0, r7
   172e8:	bl	f1c <malloc@plt>
   172ec:	cmp	r0, #0
   172f0:	str	r0, [r5, #12]
   172f4:	beq	173dc <sf_gen_p80211_type+0x18c>
   172f8:	mov	r1, #0
   172fc:	mov	r2, r7
   17300:	add	r5, r5, #8
   17304:	bl	f88 <memset@plt>
   17308:	cmp	r7, #19
   1730c:	str	r7, [r5]
   17310:	bhi	17324 <sf_gen_p80211_type+0xd4>
   17314:	b	173dc <sf_gen_p80211_type+0x18c>
   17318:	mov	r4, r0
   1731c:	b	17354 <sf_gen_p80211_type+0x104>
   17320:	mov	r4, r0
   17324:	sub	r1, r7, #20
   17328:	mov	r2, #84	; 0x54
   1732c:	str	r1, [r5]
   17330:	ldr	r0, [r5, #4]
   17334:	str	r2, [r0, r1]!
   17338:	mov	r2, sl
   1733c:	str	r6, [r0, #12]
   17340:	mov	r1, r2
   17344:	ldr	r2, [r2, #16]
   17348:	cmp	r2, #0
   1734c:	bne	17340 <sf_gen_p80211_type+0xf0>
   17350:	str	r0, [r1, #16]
   17354:	ldr	r5, [pc, #164]	; 17400 <sf_gen_p80211_type+0x1b0>
   17358:	add	r5, pc, r5
   1735c:	ldr	r6, [r5, r4, lsl #3]!
   17360:	cmp	r6, #207	; 0xcf
   17364:	bhi	173b0 <sf_gen_p80211_type+0x160>
   17368:	add	r0, r4, #1
   1736c:	cmp	r4, #15
   17370:	str	r0, [r9, #92]	; 0x5c
   17374:	bge	173dc <sf_gen_p80211_type+0x18c>
   17378:	mov	r1, #1024	; 0x400
   1737c:	lsl	r6, r1, r0
   17380:	mov	r0, r6
   17384:	bl	f1c <malloc@plt>
   17388:	cmp	r0, #0
   1738c:	str	r0, [r5, #12]
   17390:	beq	173dc <sf_gen_p80211_type+0x18c>
   17394:	mov	r1, #0
   17398:	mov	r2, r6
   1739c:	add	r5, r5, #8
   173a0:	bl	f88 <memset@plt>
   173a4:	cmp	r6, #207	; 0xcf
   173a8:	str	r6, [r5]
   173ac:	bls	173dc <sf_gen_p80211_type+0x18c>
   173b0:	sub	r0, r6, #208	; 0xd0
   173b4:	str	r0, [r5]
   173b8:	ldr	r1, [r5, #4]
   173bc:	add	r0, r1, r0
   173c0:	mov	r1, #21
   173c4:	str	sl, [r0, #4]
   173c8:	str	r1, [r0, #8]
   173cc:	str	r8, [r0, #20]
   173d0:	str	r0, [r0, #96]	; 0x60
   173d4:	sub	sp, fp, #28
   173d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173dc:	ldr	r0, [pc, #32]	; 17404 <sf_gen_p80211_type+0x1b4>
   173e0:	add	r0, pc, r0
   173e4:	bl	2204 <sf_bpf_error>
   173e8:	ldr	r0, [pc, #8]	; 173f8 <sf_gen_p80211_type+0x1a8>
   173ec:	add	r0, pc, r0
   173f0:	bl	2204 <sf_bpf_error>
   173f4:	.word	0x0002f278
   173f8:	.word	0x00011b35
   173fc:	.word	0x0002f164
   17400:	.word	0x0002f0c8
   17404:	.word	0x00011fb4

00017408 <sf_gen_p80211_fcdir>:
   17408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1740c:	add	fp, sp, #28
   17410:	sub	sp, sp, #4
   17414:	ldr	r9, [pc, #380]	; 17598 <sf_gen_p80211_fcdir+0x190>
   17418:	mov	r8, r0
   1741c:	add	r9, pc, r9
   17420:	ldr	r0, [r9, #36]	; 0x24
   17424:	sub	r1, r0, #105	; 0x69
   17428:	cmp	r1, #22
   1742c:	bhi	17444 <sf_gen_p80211_fcdir+0x3c>
   17430:	movw	r3, #16385	; 0x4001
   17434:	mov	r2, #1
   17438:	movt	r3, #64	; 0x40
   1743c:	tst	r3, r2, lsl r1
   17440:	bne	1744c <sf_gen_p80211_fcdir+0x44>
   17444:	cmp	r0, #163	; 0xa3
   17448:	bne	1758c <sf_gen_p80211_fcdir+0x184>
   1744c:	mov	r0, #1
   17450:	mov	r1, #1
   17454:	mov	r2, #16
   17458:	bl	1669c <gen_load_a>
   1745c:	mov	sl, r0
   17460:	ldr	r0, [r9, #92]	; 0x5c
   17464:	ldr	r5, [pc, #308]	; 175a0 <sf_gen_p80211_fcdir+0x198>
   17468:	add	r5, pc, r5
   1746c:	mov	r7, r5
   17470:	ldr	r6, [r7, r0, lsl #3]!
   17474:	cmp	r6, #19
   17478:	bhi	174c8 <sf_gen_p80211_fcdir+0xc0>
   1747c:	add	r4, r0, #1
   17480:	cmp	r0, #15
   17484:	str	r4, [r9, #92]	; 0x5c
   17488:	bge	17580 <sf_gen_p80211_fcdir+0x178>
   1748c:	mov	r0, #1024	; 0x400
   17490:	lsl	r6, r0, r4
   17494:	mov	r0, r6
   17498:	bl	f1c <malloc@plt>
   1749c:	cmp	r0, #0
   174a0:	str	r0, [r7, #12]
   174a4:	beq	17580 <sf_gen_p80211_fcdir+0x178>
   174a8:	mov	r1, #0
   174ac:	mov	r2, r6
   174b0:	add	r7, r7, #8
   174b4:	bl	f88 <memset@plt>
   174b8:	cmp	r6, #19
   174bc:	str	r6, [r7]
   174c0:	bhi	174cc <sf_gen_p80211_fcdir+0xc4>
   174c4:	b	17580 <sf_gen_p80211_fcdir+0x178>
   174c8:	mov	r4, r0
   174cc:	sub	r1, r6, #20
   174d0:	mov	r2, #84	; 0x54
   174d4:	str	r1, [r7]
   174d8:	ldr	r0, [r7, #4]
   174dc:	str	r2, [r0, r1]!
   174e0:	mov	r1, #3
   174e4:	mov	r2, sl
   174e8:	str	r1, [r0, #12]
   174ec:	mov	r1, r2
   174f0:	ldr	r2, [r2, #16]
   174f4:	cmp	r2, #0
   174f8:	bne	174ec <sf_gen_p80211_fcdir+0xe4>
   174fc:	str	r0, [r1, #16]
   17500:	ldr	r6, [r5, r4, lsl #3]!
   17504:	cmp	r6, #207	; 0xcf
   17508:	bhi	17554 <sf_gen_p80211_fcdir+0x14c>
   1750c:	add	r0, r4, #1
   17510:	cmp	r4, #15
   17514:	str	r0, [r9, #92]	; 0x5c
   17518:	bge	17580 <sf_gen_p80211_fcdir+0x178>
   1751c:	mov	r1, #1024	; 0x400
   17520:	lsl	r6, r1, r0
   17524:	mov	r0, r6
   17528:	bl	f1c <malloc@plt>
   1752c:	cmp	r0, #0
   17530:	str	r0, [r5, #12]
   17534:	beq	17580 <sf_gen_p80211_fcdir+0x178>
   17538:	mov	r1, #0
   1753c:	mov	r2, r6
   17540:	add	r5, r5, #8
   17544:	bl	f88 <memset@plt>
   17548:	cmp	r6, #207	; 0xcf
   1754c:	str	r6, [r5]
   17550:	bls	17580 <sf_gen_p80211_fcdir+0x178>
   17554:	sub	r0, r6, #208	; 0xd0
   17558:	str	r0, [r5]
   1755c:	ldr	r1, [r5, #4]
   17560:	add	r0, r1, r0
   17564:	mov	r1, #21
   17568:	str	sl, [r0, #4]
   1756c:	str	r1, [r0, #8]
   17570:	str	r8, [r0, #20]
   17574:	str	r0, [r0, #96]	; 0x60
   17578:	sub	sp, fp, #28
   1757c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17580:	ldr	r0, [pc, #28]	; 175a4 <sf_gen_p80211_fcdir+0x19c>
   17584:	add	r0, pc, r0
   17588:	bl	2204 <sf_bpf_error>
   1758c:	ldr	r0, [pc, #8]	; 1759c <sf_gen_p80211_fcdir+0x194>
   17590:	add	r0, pc, r0
   17594:	bl	2204 <sf_bpf_error>
   17598:	.word	0x0002f0c4
   1759c:	.word	0x000119c2
   175a0:	.word	0x0002efb8
   175a4:	.word	0x00011e10

000175a8 <sf_gen_acode>:
   175a8:	push	{r4, r5, fp, lr}
   175ac:	add	fp, sp, #8
   175b0:	sub	sp, sp, #8
   175b4:	mov	r5, r0
   175b8:	ldr	r0, [pc, #620]	; 1782c <sf_gen_acode+0x284>
   175bc:	add	r0, pc, r0
   175c0:	ldr	r0, [r0, #36]	; 0x24
   175c4:	cmp	r0, #129	; 0x81
   175c8:	cmpne	r0, #7
   175cc:	bne	17810 <sf_gen_acode+0x268>
   175d0:	movw	r0, #65534	; 0xfffe
   175d4:	and	r0, r1, r0
   175d8:	cmp	r0, #256	; 0x100
   175dc:	bne	1781c <sf_gen_acode+0x274>
   175e0:	lsr	r0, r1, #16
   175e4:	uxtb	r0, r0
   175e8:	cmp	r0, #4
   175ec:	bhi	17828 <sf_gen_acode+0x280>
   175f0:	add	r1, pc, #4
   175f4:	ldr	r0, [r1, r0, lsl #2]
   175f8:	add	pc, r1, r0
   175fc:	.word	0x00000014
   17600:	.word	0x000001ac
   17604:	.word	0x000001b8
   17608:	.word	0x00000014
   1760c:	.word	0x000000d4
   17610:	mov	r0, #1
   17614:	mov	r1, #0
   17618:	mov	r2, #1
   1761c:	mov	r3, r5
   17620:	bl	1b0ec <gen_bcmp>
   17624:	mov	r4, r0
   17628:	mov	r0, #1
   1762c:	mov	r1, #1
   17630:	mov	r2, #1
   17634:	mov	r3, r5
   17638:	bl	1b0ec <gen_bcmp>
   1763c:	ldr	r1, [r4, #44]	; 0x2c
   17640:	cmp	r4, #0
   17644:	clz	r1, r1
   17648:	lsr	r1, r1, #5
   1764c:	str	r1, [r4, #44]	; 0x2c
   17650:	beq	1768c <sf_gen_acode+0xe4>
   17654:	ldr	r2, [r0, #96]	; 0x60
   17658:	mov	r3, r4
   1765c:	b	17664 <sf_gen_acode+0xbc>
   17660:	ldr	r1, [r3, #44]	; 0x2c
   17664:	cmp	r1, #0
   17668:	mov	r1, #84	; 0x54
   1766c:	add	r5, r3, #84	; 0x54
   17670:	movweq	r1, #60	; 0x3c
   17674:	addeq	r5, r3, #60	; 0x3c
   17678:	ldr	r3, [r3, r1]
   1767c:	str	r2, [r5]
   17680:	cmp	r3, #0
   17684:	bne	17660 <sf_gen_acode+0xb8>
   17688:	ldr	r1, [r4, #44]	; 0x2c
   1768c:	clz	r1, r1
   17690:	cmp	r0, #0
   17694:	lsr	r1, r1, #5
   17698:	str	r1, [r4, #44]	; 0x2c
   1769c:	str	r0, [sp]
   176a0:	beq	177d0 <sf_gen_acode+0x228>
   176a4:	mov	r2, r0
   176a8:	ldr	r3, [r2, #44]	; 0x2c
   176ac:	add	r1, r2, #84	; 0x54
   176b0:	cmp	r3, #0
   176b4:	mov	r3, #84	; 0x54
   176b8:	movweq	r3, #60	; 0x3c
   176bc:	addeq	r1, r2, #60	; 0x3c
   176c0:	ldr	r2, [r2, r3]
   176c4:	cmp	r2, #0
   176c8:	bne	176a8 <sf_gen_acode+0x100>
   176cc:	b	177d4 <sf_gen_acode+0x22c>
   176d0:	mov	r0, #1
   176d4:	mov	r1, #0
   176d8:	mov	r2, #1
   176dc:	mov	r3, r5
   176e0:	bl	1b0ec <gen_bcmp>
   176e4:	mov	r4, r0
   176e8:	mov	r0, #1
   176ec:	mov	r1, #1
   176f0:	mov	r2, #1
   176f4:	mov	r3, r5
   176f8:	bl	1b0ec <gen_bcmp>
   176fc:	cmp	r4, #0
   17700:	beq	17734 <sf_gen_acode+0x18c>
   17704:	ldr	r1, [r0, #96]	; 0x60
   17708:	mov	r2, r4
   1770c:	ldr	r3, [r2, #44]	; 0x2c
   17710:	add	r5, r2, #84	; 0x54
   17714:	cmp	r3, #0
   17718:	mov	r3, #84	; 0x54
   1771c:	movweq	r3, #60	; 0x3c
   17720:	addeq	r5, r2, #60	; 0x3c
   17724:	ldr	r2, [r2, r3]
   17728:	str	r1, [r5]
   1772c:	cmp	r2, #0
   17730:	bne	1770c <sf_gen_acode+0x164>
   17734:	ldr	r1, [r4, #44]	; 0x2c
   17738:	cmp	r0, #0
   1773c:	clz	r1, r1
   17740:	lsr	r1, r1, #5
   17744:	str	r1, [r4, #44]	; 0x2c
   17748:	ldr	r2, [r0, #44]	; 0x2c
   1774c:	clz	r1, r2
   17750:	lsr	r1, r1, #5
   17754:	str	r1, [r0, #44]	; 0x2c
   17758:	str	r0, [sp, #4]
   1775c:	beq	177e8 <sf_gen_acode+0x240>
   17760:	cmp	r2, #0
   17764:	mov	r2, #60	; 0x3c
   17768:	add	r1, r0, #60	; 0x3c
   1776c:	movweq	r2, #84	; 0x54
   17770:	addeq	r1, r0, #84	; 0x54
   17774:	ldr	r2, [r0, r2]
   17778:	cmp	r2, #0
   1777c:	beq	177ec <sf_gen_acode+0x244>
   17780:	ldr	r3, [r2, #44]	; 0x2c
   17784:	add	r1, r2, #84	; 0x54
   17788:	cmp	r3, #0
   1778c:	mov	r3, #84	; 0x54
   17790:	movweq	r3, #60	; 0x3c
   17794:	addeq	r1, r2, #60	; 0x3c
   17798:	ldr	r2, [r2, r3]
   1779c:	cmp	r2, #0
   177a0:	bne	17780 <sf_gen_acode+0x1d8>
   177a4:	b	177ec <sf_gen_acode+0x244>
   177a8:	mov	r0, #1
   177ac:	mov	r1, #0
   177b0:	b	177bc <sf_gen_acode+0x214>
   177b4:	mov	r0, #1
   177b8:	mov	r1, #1
   177bc:	mov	r2, #1
   177c0:	mov	r3, r5
   177c4:	sub	sp, fp, #8
   177c8:	pop	{r4, r5, fp, lr}
   177cc:	b	1b0ec <gen_bcmp>
   177d0:	mov	r1, sp
   177d4:	str	r4, [r1]
   177d8:	ldr	r1, [r4, #96]	; 0x60
   177dc:	str	r1, [r0, #96]	; 0x60
   177e0:	sub	sp, fp, #8
   177e4:	pop	{r4, r5, fp, pc}
   177e8:	add	r1, sp, #4
   177ec:	str	r4, [r1]
   177f0:	ldr	r1, [r0, #44]	; 0x2c
   177f4:	clz	r1, r1
   177f8:	lsr	r1, r1, #5
   177fc:	str	r1, [r0, #44]	; 0x2c
   17800:	ldr	r1, [r4, #96]	; 0x60
   17804:	str	r1, [r0, #96]	; 0x60
   17808:	sub	sp, fp, #8
   1780c:	pop	{r4, r5, fp, pc}
   17810:	ldr	r0, [pc, #28]	; 17834 <sf_gen_acode+0x28c>
   17814:	add	r0, pc, r0
   17818:	bl	2204 <sf_bpf_error>
   1781c:	ldr	r0, [pc, #12]	; 17830 <sf_gen_acode+0x288>
   17820:	add	r0, pc, r0
   17824:	bl	2204 <sf_bpf_error>
   17828:	bl	100c <abort@plt>
   1782c:	.word	0x0002ef24
   17830:	.word	0x00011765
   17834:	.word	0x0001179b

00017838 <sf_gen_vlan>:
   17838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1783c:	add	fp, sp, #28
   17840:	sub	sp, sp, #12
   17844:	mov	r9, r0
   17848:	ldr	r0, [pc, #664]	; 17ae8 <sf_gen_vlan+0x2b0>
   1784c:	ldr	r0, [pc, r0]
   17850:	cmp	r0, #0
   17854:	bne	17ad0 <sf_gen_vlan+0x298>
   17858:	ldr	sl, [pc, #652]	; 17aec <sf_gen_vlan+0x2b4>
   1785c:	add	sl, pc, sl
   17860:	ldr	r1, [sl, #36]	; 0x24
   17864:	ldr	r0, [sl, #48]	; 0x30
   17868:	ldr	r2, [pc, #640]	; 17af0 <sf_gen_vlan+0x2b8>
   1786c:	add	r2, pc, r2
   17870:	cmp	r1, #1
   17874:	str	r0, [r2, #4]
   17878:	bne	17adc <sf_gen_vlan+0x2a4>
   1787c:	ldr	r1, [sl, #40]	; 0x28
   17880:	mov	r0, #1
   17884:	mov	r2, #8
   17888:	mov	r3, #33024	; 0x8100
   1788c:	bl	9ef4 <gen_cmp>
   17890:	mov	r4, r0
   17894:	cmp	r9, #0
   17898:	blt	17920 <sf_gen_vlan+0xe8>
   1789c:	mov	r0, #2
   178a0:	mov	r1, #0
   178a4:	mov	r2, #8
   178a8:	bl	1669c <gen_load_a>
   178ac:	mov	r3, r0
   178b0:	ldr	r0, [sl, #92]	; 0x5c
   178b4:	ldr	r8, [pc, #568]	; 17af4 <sf_gen_vlan+0x2bc>
   178b8:	add	r8, pc, r8
   178bc:	mov	r5, r8
   178c0:	ldr	r7, [r5, r0, lsl #3]!
   178c4:	cmp	r7, #19
   178c8:	bhi	17928 <sf_gen_vlan+0xf0>
   178cc:	add	r6, r0, #1
   178d0:	cmp	r0, #15
   178d4:	str	r3, [sp, #4]
   178d8:	str	r6, [sl, #92]	; 0x5c
   178dc:	bge	17ac4 <sf_gen_vlan+0x28c>
   178e0:	mov	r0, #1024	; 0x400
   178e4:	lsl	r7, r0, r6
   178e8:	mov	r0, r7
   178ec:	bl	f1c <malloc@plt>
   178f0:	cmp	r0, #0
   178f4:	str	r0, [r5, #12]
   178f8:	beq	17ac4 <sf_gen_vlan+0x28c>
   178fc:	mov	r1, #0
   17900:	mov	r2, r7
   17904:	add	r5, r5, #8
   17908:	bl	f88 <memset@plt>
   1790c:	ldr	r3, [sp, #4]
   17910:	cmp	r7, #19
   17914:	str	r7, [r5]
   17918:	bhi	1792c <sf_gen_vlan+0xf4>
   1791c:	b	17ac4 <sf_gen_vlan+0x28c>
   17920:	mov	r0, r4
   17924:	b	17aa4 <sf_gen_vlan+0x26c>
   17928:	mov	r6, r0
   1792c:	sub	r1, r7, #20
   17930:	mov	r2, #84	; 0x54
   17934:	str	r1, [r5]
   17938:	ldr	r0, [r5, #4]
   1793c:	str	r2, [r0, r1]!
   17940:	movw	r1, #4095	; 0xfff
   17944:	mov	r2, r3
   17948:	str	r1, [r0, #12]
   1794c:	mov	r1, r2
   17950:	ldr	r2, [r2, #16]
   17954:	cmp	r2, #0
   17958:	bne	1794c <sf_gen_vlan+0x114>
   1795c:	str	r0, [r1, #16]
   17960:	ldr	r7, [r8, r6, lsl #3]!
   17964:	cmp	r7, #207	; 0xcf
   17968:	bhi	179bc <sf_gen_vlan+0x184>
   1796c:	add	r0, r6, #1
   17970:	cmp	r6, #15
   17974:	str	r0, [sl, #92]	; 0x5c
   17978:	bge	17ac4 <sf_gen_vlan+0x28c>
   1797c:	mov	r1, #1024	; 0x400
   17980:	mov	r5, r3
   17984:	lsl	r7, r1, r0
   17988:	mov	r0, r7
   1798c:	bl	f1c <malloc@plt>
   17990:	cmp	r0, #0
   17994:	str	r0, [r8, #12]
   17998:	beq	17ac4 <sf_gen_vlan+0x28c>
   1799c:	mov	r1, #0
   179a0:	mov	r2, r7
   179a4:	add	r8, r8, #8
   179a8:	bl	f88 <memset@plt>
   179ac:	cmp	r7, #207	; 0xcf
   179b0:	mov	r3, r5
   179b4:	str	r7, [r8]
   179b8:	bls	17ac4 <sf_gen_vlan+0x28c>
   179bc:	sub	r0, r7, #208	; 0xd0
   179c0:	cmp	r4, #0
   179c4:	str	r0, [r8]
   179c8:	ldr	r1, [r8, #4]
   179cc:	add	r0, r1, r0
   179d0:	mov	r1, #21
   179d4:	str	r3, [r0, #4]
   179d8:	str	r1, [r0, #8]
   179dc:	str	r9, [r0, #20]
   179e0:	str	r0, [r0, #96]	; 0x60
   179e4:	beq	17a14 <sf_gen_vlan+0x1dc>
   179e8:	mov	r1, r4
   179ec:	ldr	r2, [r1, #44]	; 0x2c
   179f0:	add	r3, r1, #84	; 0x54
   179f4:	cmp	r2, #0
   179f8:	mov	r2, #84	; 0x54
   179fc:	movweq	r2, #60	; 0x3c
   17a00:	addeq	r3, r1, #60	; 0x3c
   17a04:	ldr	r1, [r1, r2]
   17a08:	str	r0, [r3]
   17a0c:	cmp	r1, #0
   17a10:	bne	179ec <sf_gen_vlan+0x1b4>
   17a14:	ldr	r1, [r4, #44]	; 0x2c
   17a18:	cmp	r0, #0
   17a1c:	clz	r1, r1
   17a20:	lsr	r1, r1, #5
   17a24:	str	r1, [r4, #44]	; 0x2c
   17a28:	ldr	r1, [r0, #44]	; 0x2c
   17a2c:	clz	r2, r1
   17a30:	lsr	r2, r2, #5
   17a34:	str	r2, [r0, #44]	; 0x2c
   17a38:	str	r0, [sp, #8]
   17a3c:	beq	17a84 <sf_gen_vlan+0x24c>
   17a40:	mov	r3, #60	; 0x3c
   17a44:	cmp	r1, #0
   17a48:	mov	r2, r0
   17a4c:	movweq	r3, #84	; 0x54
   17a50:	ldr	r1, [r2, r3]!
   17a54:	cmp	r1, #0
   17a58:	beq	17a88 <sf_gen_vlan+0x250>
   17a5c:	ldr	r3, [r1, #44]	; 0x2c
   17a60:	add	r2, r1, #84	; 0x54
   17a64:	cmp	r3, #0
   17a68:	mov	r3, #84	; 0x54
   17a6c:	movweq	r3, #60	; 0x3c
   17a70:	addeq	r2, r1, #60	; 0x3c
   17a74:	ldr	r1, [r1, r3]
   17a78:	cmp	r1, #0
   17a7c:	bne	17a5c <sf_gen_vlan+0x224>
   17a80:	b	17a88 <sf_gen_vlan+0x250>
   17a84:	add	r2, sp, #8
   17a88:	str	r4, [r2]
   17a8c:	ldr	r1, [r0, #44]	; 0x2c
   17a90:	clz	r1, r1
   17a94:	lsr	r1, r1, #5
   17a98:	str	r1, [r0, #44]	; 0x2c
   17a9c:	ldr	r1, [r4, #96]	; 0x60
   17aa0:	str	r1, [r0, #96]	; 0x60
   17aa4:	ldr	r1, [sl, #40]	; 0x28
   17aa8:	ldr	r2, [sl, #44]	; 0x2c
   17aac:	add	r1, r1, #4
   17ab0:	add	r2, r2, #4
   17ab4:	str	r1, [sl, #40]	; 0x28
   17ab8:	str	r2, [sl, #44]	; 0x2c
   17abc:	sub	sp, fp, #28
   17ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ac4:	ldr	r0, [pc, #52]	; 17b00 <sf_gen_vlan+0x2c8>
   17ac8:	add	r0, pc, r0
   17acc:	bl	2204 <sf_bpf_error>
   17ad0:	ldr	r0, [pc, #36]	; 17afc <sf_gen_vlan+0x2c4>
   17ad4:	add	r0, pc, r0
   17ad8:	bl	2204 <sf_bpf_error>
   17adc:	ldr	r0, [pc, #20]	; 17af8 <sf_gen_vlan+0x2c0>
   17ae0:	add	r0, pc, r0
   17ae4:	bl	2204 <sf_bpf_error>
   17ae8:	.word	0x0002e888
   17aec:	.word	0x0002ec84
   17af0:	.word	0x0002e868
   17af4:	.word	0x0002eb68
   17af8:	.word	0x00011505
   17afc:	.word	0x000114f8
   17b00:	.word	0x000118cc

00017b04 <sf_gen_mpls>:
   17b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b08:	add	fp, sp, #28
   17b0c:	sub	sp, sp, #4
   17b10:	ldr	r4, [pc, #1040]	; 17f28 <sf_gen_mpls+0x424>
   17b14:	mov	r9, r0
   17b18:	add	r4, pc, r4
   17b1c:	ldr	r0, [r4, #48]	; 0x30
   17b20:	ldr	r6, [pc, #1028]	; 17f2c <sf_gen_mpls+0x428>
   17b24:	add	r6, pc, r6
   17b28:	str	r0, [r6, #4]
   17b2c:	ldr	r1, [pc, #1020]	; 17f30 <sf_gen_mpls+0x42c>
   17b30:	ldr	r1, [pc, r1]
   17b34:	cmp	r1, #0
   17b38:	beq	17bb8 <sf_gen_mpls+0xb4>
   17b3c:	sub	r1, r0, #2
   17b40:	mov	r0, #2
   17b44:	mov	r2, #16
   17b48:	bl	1669c <gen_load_a>
   17b4c:	mov	r8, r0
   17b50:	ldr	r0, [r4, #92]	; 0x5c
   17b54:	ldr	r6, [pc, #984]	; 17f34 <sf_gen_mpls+0x430>
   17b58:	add	r6, pc, r6
   17b5c:	mov	r7, r6
   17b60:	ldr	r5, [r7, r0, lsl #3]!
   17b64:	cmp	r5, #19
   17b68:	bhi	17bec <sf_gen_mpls+0xe8>
   17b6c:	add	sl, r0, #1
   17b70:	cmp	r0, #15
   17b74:	str	sl, [r4, #92]	; 0x5c
   17b78:	bge	17f10 <sf_gen_mpls+0x40c>
   17b7c:	mov	r0, #1024	; 0x400
   17b80:	lsl	r5, r0, sl
   17b84:	mov	r0, r5
   17b88:	bl	f1c <malloc@plt>
   17b8c:	cmp	r0, #0
   17b90:	str	r0, [r7, #12]
   17b94:	beq	17f10 <sf_gen_mpls+0x40c>
   17b98:	mov	r1, #0
   17b9c:	mov	r2, r5
   17ba0:	add	r7, r7, #8
   17ba4:	bl	f88 <memset@plt>
   17ba8:	cmp	r5, #19
   17bac:	str	r5, [r7]
   17bb0:	bhi	17bf0 <sf_gen_mpls+0xec>
   17bb4:	b	17f10 <sf_gen_mpls+0x40c>
   17bb8:	ldr	r1, [r4, #36]	; 0x24
   17bbc:	cmp	r1, #104	; 0x68
   17bc0:	beq	17bd4 <sf_gen_mpls+0xd0>
   17bc4:	cmp	r1, #9
   17bc8:	beq	17ec8 <sf_gen_mpls+0x3c4>
   17bcc:	cmp	r1, #1
   17bd0:	bne	17f1c <sf_gen_mpls+0x418>
   17bd4:	movw	r0, #34887	; 0x8847
   17bd8:	bl	6e1c <gen_linktype>
   17bdc:	mov	r5, r0
   17be0:	cmp	r9, #0
   17be4:	bge	17cb0 <sf_gen_mpls+0x1ac>
   17be8:	b	17edc <sf_gen_mpls+0x3d8>
   17bec:	mov	sl, r0
   17bf0:	sub	r1, r5, #20
   17bf4:	mov	r2, #84	; 0x54
   17bf8:	str	r1, [r7]
   17bfc:	ldr	r0, [r7, #4]
   17c00:	str	r2, [r0, r1]!
   17c04:	mov	r1, #1
   17c08:	mov	r2, r8
   17c0c:	str	r1, [r0, #12]
   17c10:	mov	r1, r2
   17c14:	ldr	r2, [r2, #16]
   17c18:	cmp	r2, #0
   17c1c:	bne	17c10 <sf_gen_mpls+0x10c>
   17c20:	str	r0, [r1, #16]
   17c24:	ldr	r5, [r6, sl, lsl #3]!
   17c28:	cmp	r5, #207	; 0xcf
   17c2c:	bhi	17c78 <sf_gen_mpls+0x174>
   17c30:	add	r0, sl, #1
   17c34:	cmp	sl, #15
   17c38:	str	r0, [r4, #92]	; 0x5c
   17c3c:	bge	17f10 <sf_gen_mpls+0x40c>
   17c40:	mov	r1, #1024	; 0x400
   17c44:	lsl	r5, r1, r0
   17c48:	mov	r0, r5
   17c4c:	bl	f1c <malloc@plt>
   17c50:	cmp	r0, #0
   17c54:	str	r0, [r6, #12]
   17c58:	beq	17f10 <sf_gen_mpls+0x40c>
   17c5c:	mov	r1, #0
   17c60:	mov	r2, r5
   17c64:	add	r6, r6, #8
   17c68:	bl	f88 <memset@plt>
   17c6c:	cmp	r5, #207	; 0xcf
   17c70:	str	r5, [r6]
   17c74:	bls	17f10 <sf_gen_mpls+0x40c>
   17c78:	sub	r0, r5, #208	; 0xd0
   17c7c:	str	r0, [r6]
   17c80:	ldr	r1, [r6, #4]
   17c84:	add	r5, r1, r0
   17c88:	mov	r0, #21
   17c8c:	str	r8, [r5, #4]
   17c90:	str	r0, [r5, #8]
   17c94:	mov	r0, #0
   17c98:	str	r0, [r5, #20]
   17c9c:	str	r5, [r5, #96]	; 0x60
   17ca0:	ldr	r6, [pc, #656]	; 17f38 <sf_gen_mpls+0x434>
   17ca4:	add	r6, pc, r6
   17ca8:	cmp	r9, #0
   17cac:	blt	17edc <sf_gen_mpls+0x3d8>
   17cb0:	ldr	r1, [r6, #4]
   17cb4:	mov	r0, #2
   17cb8:	mov	r2, #0
   17cbc:	bl	1669c <gen_load_a>
   17cc0:	mov	sl, r0
   17cc4:	ldr	r0, [r4, #92]	; 0x5c
   17cc8:	ldr	r6, [pc, #624]	; 17f40 <sf_gen_mpls+0x43c>
   17ccc:	mov	r1, r4
   17cd0:	add	r6, pc, r6
   17cd4:	mov	r4, r6
   17cd8:	ldr	r7, [r4, r0, lsl #3]!
   17cdc:	cmp	r7, #19
   17ce0:	bhi	17d30 <sf_gen_mpls+0x22c>
   17ce4:	add	r8, r0, #1
   17ce8:	cmp	r0, #15
   17cec:	str	r8, [r1, #92]	; 0x5c
   17cf0:	bge	17f10 <sf_gen_mpls+0x40c>
   17cf4:	mov	r0, #1024	; 0x400
   17cf8:	lsl	r7, r0, r8
   17cfc:	mov	r0, r7
   17d00:	bl	f1c <malloc@plt>
   17d04:	cmp	r0, #0
   17d08:	str	r0, [r4, #12]
   17d0c:	beq	17f10 <sf_gen_mpls+0x40c>
   17d10:	mov	r1, #0
   17d14:	mov	r2, r7
   17d18:	add	r4, r4, #8
   17d1c:	bl	f88 <memset@plt>
   17d20:	cmp	r7, #19
   17d24:	str	r7, [r4]
   17d28:	bhi	17d34 <sf_gen_mpls+0x230>
   17d2c:	b	17f10 <sf_gen_mpls+0x40c>
   17d30:	mov	r8, r0
   17d34:	sub	r1, r7, #20
   17d38:	mov	r2, #84	; 0x54
   17d3c:	lsl	r9, r9, #12
   17d40:	str	r1, [r4]
   17d44:	ldr	r0, [r4, #4]
   17d48:	str	r2, [r0, r1]!
   17d4c:	movw	r1, #61440	; 0xf000
   17d50:	mov	r2, sl
   17d54:	movt	r1, #65535	; 0xffff
   17d58:	str	r1, [r0, #12]
   17d5c:	mov	r1, r2
   17d60:	ldr	r2, [r2, #16]
   17d64:	cmp	r2, #0
   17d68:	bne	17d5c <sf_gen_mpls+0x258>
   17d6c:	str	r0, [r1, #16]
   17d70:	ldr	r4, [r6, r8, lsl #3]!
   17d74:	cmp	r4, #207	; 0xcf
   17d78:	bhi	17dcc <sf_gen_mpls+0x2c8>
   17d7c:	ldr	r1, [pc, #448]	; 17f44 <sf_gen_mpls+0x440>
   17d80:	add	r0, r8, #1
   17d84:	cmp	r8, #15
   17d88:	add	r1, pc, r1
   17d8c:	str	r0, [r1, #92]	; 0x5c
   17d90:	bge	17f10 <sf_gen_mpls+0x40c>
   17d94:	mov	r1, #1024	; 0x400
   17d98:	lsl	r4, r1, r0
   17d9c:	mov	r0, r4
   17da0:	bl	f1c <malloc@plt>
   17da4:	cmp	r0, #0
   17da8:	str	r0, [r6, #12]
   17dac:	beq	17f10 <sf_gen_mpls+0x40c>
   17db0:	mov	r1, #0
   17db4:	mov	r2, r4
   17db8:	add	r6, r6, #8
   17dbc:	bl	f88 <memset@plt>
   17dc0:	cmp	r4, #207	; 0xcf
   17dc4:	str	r4, [r6]
   17dc8:	bls	17f10 <sf_gen_mpls+0x40c>
   17dcc:	sub	r0, r4, #208	; 0xd0
   17dd0:	cmp	r5, #0
   17dd4:	str	r0, [r6]
   17dd8:	ldr	r1, [r6, #4]
   17ddc:	add	r0, r1, r0
   17de0:	mov	r1, #21
   17de4:	str	sl, [r0, #4]
   17de8:	str	r1, [r0, #8]
   17dec:	str	r9, [r0, #20]
   17df0:	str	r0, [r0, #96]	; 0x60
   17df4:	beq	17e24 <sf_gen_mpls+0x320>
   17df8:	mov	r1, r5
   17dfc:	ldr	r2, [r1, #44]	; 0x2c
   17e00:	add	r3, r1, #84	; 0x54
   17e04:	cmp	r2, #0
   17e08:	mov	r2, #84	; 0x54
   17e0c:	movweq	r2, #60	; 0x3c
   17e10:	addeq	r3, r1, #60	; 0x3c
   17e14:	ldr	r1, [r1, r2]
   17e18:	str	r0, [r3]
   17e1c:	cmp	r1, #0
   17e20:	bne	17dfc <sf_gen_mpls+0x2f8>
   17e24:	ldr	r1, [r5, #44]	; 0x2c
   17e28:	cmp	r0, #0
   17e2c:	clz	r1, r1
   17e30:	lsr	r1, r1, #5
   17e34:	str	r1, [r5, #44]	; 0x2c
   17e38:	ldr	r1, [r0, #44]	; 0x2c
   17e3c:	clz	r2, r1
   17e40:	lsr	r2, r2, #5
   17e44:	str	r2, [r0, #44]	; 0x2c
   17e48:	str	r0, [sp]
   17e4c:	ldr	r4, [pc, #244]	; 17f48 <sf_gen_mpls+0x444>
   17e50:	ldr	r6, [pc, #244]	; 17f4c <sf_gen_mpls+0x448>
   17e54:	add	r4, pc, r4
   17e58:	add	r6, pc, r6
   17e5c:	beq	17ea4 <sf_gen_mpls+0x3a0>
   17e60:	mov	r3, #60	; 0x3c
   17e64:	cmp	r1, #0
   17e68:	mov	r2, r0
   17e6c:	movweq	r3, #84	; 0x54
   17e70:	ldr	r1, [r2, r3]!
   17e74:	cmp	r1, #0
   17e78:	beq	17ea8 <sf_gen_mpls+0x3a4>
   17e7c:	ldr	r3, [r1, #44]	; 0x2c
   17e80:	add	r2, r1, #84	; 0x54
   17e84:	cmp	r3, #0
   17e88:	mov	r3, #84	; 0x54
   17e8c:	movweq	r3, #60	; 0x3c
   17e90:	addeq	r2, r1, #60	; 0x3c
   17e94:	ldr	r1, [r1, r3]
   17e98:	cmp	r1, #0
   17e9c:	bne	17e7c <sf_gen_mpls+0x378>
   17ea0:	b	17ea8 <sf_gen_mpls+0x3a4>
   17ea4:	mov	r2, sp
   17ea8:	str	r5, [r2]
   17eac:	ldr	r1, [r0, #44]	; 0x2c
   17eb0:	clz	r1, r1
   17eb4:	lsr	r1, r1, #5
   17eb8:	str	r1, [r0, #44]	; 0x2c
   17ebc:	ldr	r1, [r5, #96]	; 0x60
   17ec0:	str	r1, [r0, #96]	; 0x60
   17ec4:	b	17ee0 <sf_gen_mpls+0x3dc>
   17ec8:	movw	r0, #641	; 0x281
   17ecc:	bl	6e1c <gen_linktype>
   17ed0:	mov	r5, r0
   17ed4:	cmp	r9, #0
   17ed8:	bge	17cb0 <sf_gen_mpls+0x1ac>
   17edc:	mov	r0, r5
   17ee0:	ldr	r1, [pc, #104]	; 17f50 <sf_gen_mpls+0x44c>
   17ee4:	ldr	r1, [pc, r1]
   17ee8:	ldr	r2, [r4, #56]	; 0x38
   17eec:	add	r1, r1, #1
   17ef0:	add	r2, r2, #4
   17ef4:	str	r1, [r6]
   17ef8:	ldr	r1, [r4, #48]	; 0x30
   17efc:	str	r2, [r4, #56]	; 0x38
   17f00:	add	r1, r1, #4
   17f04:	str	r1, [r4, #48]	; 0x30
   17f08:	sub	sp, fp, #28
   17f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f10:	ldr	r0, [pc, #60]	; 17f54 <sf_gen_mpls+0x450>
   17f14:	add	r0, pc, r0
   17f18:	bl	2204 <sf_bpf_error>
   17f1c:	ldr	r0, [pc, #24]	; 17f3c <sf_gen_mpls+0x438>
   17f20:	add	r0, pc, r0
   17f24:	bl	2204 <sf_bpf_error>
   17f28:	.word	0x0002e9c8
   17f2c:	.word	0x0002e5b0
   17f30:	.word	0x0002e5a4
   17f34:	.word	0x0002e8c8
   17f38:	.word	0x0002e430
   17f3c:	.word	0x000110eb
   17f40:	.word	0x0002e750
   17f44:	.word	0x0002e758
   17f48:	.word	0x0002e68c
   17f4c:	.word	0x0002e27c
   17f50:	.word	0x0002e1f0
   17f54:	.word	0x00011480

00017f58 <sf_gen_pppoed>:
   17f58:	movw	r0, #34915	; 0x8863
   17f5c:	b	6e1c <gen_linktype>

00017f60 <sf_gen_pppoes>:
   17f60:	push	{fp, lr}
   17f64:	mov	fp, sp
   17f68:	movw	r0, #34916	; 0x8864
   17f6c:	bl	6e1c <gen_linktype>
   17f70:	ldr	r1, [pc, #48]	; 17fa8 <sf_gen_pppoes+0x48>
   17f74:	mov	r2, #1
   17f78:	add	r1, pc, r1
   17f7c:	strb	r2, [r1, #4]
   17f80:	mov	r2, #8
   17f84:	str	r2, [r1, #56]	; 0x38
   17f88:	ldr	r3, [r1, #48]	; 0x30
   17f8c:	str	r2, [r1, #48]	; 0x30
   17f90:	ldr	r2, [pc, #20]	; 17fac <sf_gen_pppoes+0x4c>
   17f94:	add	r2, pc, r2
   17f98:	str	r3, [r2, #4]
   17f9c:	add	r2, r3, #6
   17fa0:	str	r2, [r1, #40]	; 0x28
   17fa4:	pop	{fp, pc}
   17fa8:	.word	0x0002e568
   17fac:	.word	0x0002e140

00017fb0 <sf_gen_atmfield_code>:
   17fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fb4:	add	fp, sp, #28
   17fb8:	sub	sp, sp, #4
   17fbc:	sub	r0, r0, #51	; 0x33
   17fc0:	cmp	r0, #4
   17fc4:	bhi	18298 <sf_gen_atmfield_code+0x2e8>
   17fc8:	mov	sl, r1
   17fcc:	add	r1, pc, #12
   17fd0:	mov	r9, r3
   17fd4:	mov	r4, r2
   17fd8:	ldr	r0, [r1, r0, lsl #2]
   17fdc:	add	pc, r1, r0
   17fe0:	.word	0x00000014
   17fe4:	.word	0x00000124
   17fe8:	.word	0x00000064
   17fec:	.word	0x00000100
   17ff0:	.word	0x00000038
   17ff4:	ldr	r7, [pc, #720]	; 182cc <sf_gen_atmfield_code+0x31c>
   17ff8:	add	r7, pc, r7
   17ffc:	ldrb	r0, [r7, #8]
   18000:	cmp	r0, #0
   18004:	beq	182a8 <sf_gen_atmfield_code+0x2f8>
   18008:	ldr	r1, [r7, #60]	; 0x3c
   1800c:	cmn	r1, #1
   18010:	bne	180f8 <sf_gen_atmfield_code+0x148>
   18014:	b	18298 <sf_gen_atmfield_code+0x2e8>
   18018:	ldr	r7, [pc, #716]	; 182ec <sf_gen_atmfield_code+0x33c>
   1801c:	add	r7, pc, r7
   18020:	ldrb	r0, [r7, #8]
   18024:	cmp	r0, #0
   18028:	beq	182b4 <sf_gen_atmfield_code+0x304>
   1802c:	ldrb	r0, [r7, #12]
   18030:	cmp	r0, #1
   18034:	beq	18298 <sf_gen_atmfield_code+0x2e8>
   18038:	mov	r0, #1
   1803c:	mov	r1, #0
   18040:	b	180fc <sf_gen_atmfield_code+0x14c>
   18044:	ldr	r5, [pc, #656]	; 182dc <sf_gen_atmfield_code+0x32c>
   18048:	add	r5, pc, r5
   1804c:	ldrb	r0, [r5, #12]
   18050:	cmp	r0, #1
   18054:	beq	18298 <sf_gen_atmfield_code+0x2e8>
   18058:	mov	r0, #1
   1805c:	mov	r1, #0
   18060:	mov	r2, #16
   18064:	bl	1669c <gen_load_a>
   18068:	mov	r3, r0
   1806c:	ldr	r0, [r5, #92]	; 0x5c
   18070:	ldr	r6, [pc, #616]	; 182e0 <sf_gen_atmfield_code+0x330>
   18074:	mov	r1, r5
   18078:	add	r6, pc, r6
   1807c:	mov	r5, r6
   18080:	ldr	r7, [r5, r0, lsl #3]!
   18084:	cmp	r7, #19
   18088:	bhi	181e0 <sf_gen_atmfield_code+0x230>
   1808c:	add	r8, r0, #1
   18090:	cmp	r0, #15
   18094:	str	r3, [sp]
   18098:	str	r8, [r1, #92]	; 0x5c
   1809c:	bge	1829c <sf_gen_atmfield_code+0x2ec>
   180a0:	mov	r0, #1024	; 0x400
   180a4:	lsl	r7, r0, r8
   180a8:	mov	r0, r7
   180ac:	bl	f1c <malloc@plt>
   180b0:	cmp	r0, #0
   180b4:	str	r0, [r5, #12]
   180b8:	beq	1829c <sf_gen_atmfield_code+0x2ec>
   180bc:	mov	r1, #0
   180c0:	mov	r2, r7
   180c4:	add	r5, r5, #8
   180c8:	bl	f88 <memset@plt>
   180cc:	ldr	r3, [sp]
   180d0:	cmp	r7, #19
   180d4:	str	r7, [r5]
   180d8:	bhi	181e4 <sf_gen_atmfield_code+0x234>
   180dc:	b	1829c <sf_gen_atmfield_code+0x2ec>
   180e0:	ldr	r7, [pc, #512]	; 182e8 <sf_gen_atmfield_code+0x338>
   180e4:	add	r7, pc, r7
   180e8:	ldr	r0, [r7, #68]	; 0x44
   180ec:	cmn	r0, #1
   180f0:	beq	18298 <sf_gen_atmfield_code+0x2e8>
   180f4:	add	r1, r0, #5
   180f8:	mov	r0, #1
   180fc:	mov	r2, #16
   18100:	b	1812c <sf_gen_atmfield_code+0x17c>
   18104:	ldr	r7, [pc, #456]	; 182d4 <sf_gen_atmfield_code+0x324>
   18108:	add	r7, pc, r7
   1810c:	ldrb	r0, [r7, #8]
   18110:	cmp	r0, #0
   18114:	beq	182c0 <sf_gen_atmfield_code+0x310>
   18118:	ldr	r1, [r7, #64]	; 0x40
   1811c:	cmn	r1, #1
   18120:	beq	18298 <sf_gen_atmfield_code+0x2e8>
   18124:	mov	r0, #1
   18128:	mov	r2, #8
   1812c:	bl	1669c <gen_load_a>
   18130:	mov	r8, r0
   18134:	ldr	r0, [r7, #92]	; 0x5c
   18138:	ldr	r6, [pc, #400]	; 182d0 <sf_gen_atmfield_code+0x320>
   1813c:	add	r6, pc, r6
   18140:	ldr	r5, [r6, r0, lsl #3]!
   18144:	cmp	r5, #207	; 0xcf
   18148:	bhi	18194 <sf_gen_atmfield_code+0x1e4>
   1814c:	add	r1, r0, #1
   18150:	cmp	r0, #15
   18154:	str	r1, [r7, #92]	; 0x5c
   18158:	bge	1829c <sf_gen_atmfield_code+0x2ec>
   1815c:	mov	r0, #1024	; 0x400
   18160:	lsl	r5, r0, r1
   18164:	mov	r0, r5
   18168:	bl	f1c <malloc@plt>
   1816c:	cmp	r0, #0
   18170:	str	r0, [r6, #12]
   18174:	beq	1829c <sf_gen_atmfield_code+0x2ec>
   18178:	mov	r1, #0
   1817c:	mov	r2, r5
   18180:	add	r6, r6, #8
   18184:	bl	f88 <memset@plt>
   18188:	cmp	r5, #207	; 0xcf
   1818c:	str	r5, [r6]
   18190:	bls	1829c <sf_gen_atmfield_code+0x2ec>
   18194:	sub	r0, r5, #208	; 0xd0
   18198:	orr	r1, r4, #5
   1819c:	str	r0, [r6]
   181a0:	ldr	r2, [r6, #4]
   181a4:	add	r0, r2, r0
   181a8:	str	r8, [r0, #4]
   181ac:	cmp	r9, #0
   181b0:	str	r1, [r0, #8]
   181b4:	str	sl, [r0, #20]
   181b8:	str	r0, [r0, #96]	; 0x60
   181bc:	beq	181d8 <sf_gen_atmfield_code+0x228>
   181c0:	orr	r1, r4, #16
   181c4:	cmp	r1, #48	; 0x30
   181c8:	ldreq	r1, [r0, #44]	; 0x2c
   181cc:	clzeq	r1, r1
   181d0:	lsreq	r1, r1, #5
   181d4:	streq	r1, [r0, #44]	; 0x2c
   181d8:	sub	sp, fp, #28
   181dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181e0:	mov	r8, r0
   181e4:	sub	r1, r7, #20
   181e8:	mov	r2, #84	; 0x54
   181ec:	str	r1, [r5]
   181f0:	ldr	r0, [r5, #4]
   181f4:	str	r2, [r0, r1]!
   181f8:	mov	r1, #15
   181fc:	mov	r2, r3
   18200:	str	r1, [r0, #12]
   18204:	mov	r1, r2
   18208:	ldr	r2, [r2, #16]
   1820c:	cmp	r2, #0
   18210:	bne	18204 <sf_gen_atmfield_code+0x254>
   18214:	str	r0, [r1, #16]
   18218:	ldr	r5, [r6, r8, lsl #3]!
   1821c:	cmp	r5, #207	; 0xcf
   18220:	bhi	1827c <sf_gen_atmfield_code+0x2cc>
   18224:	ldr	r1, [pc, #184]	; 182e4 <sf_gen_atmfield_code+0x334>
   18228:	add	r0, r8, #1
   1822c:	cmp	r8, #15
   18230:	add	r1, pc, r1
   18234:	str	r0, [r1, #92]	; 0x5c
   18238:	bge	1829c <sf_gen_atmfield_code+0x2ec>
   1823c:	mov	r1, #1024	; 0x400
   18240:	mov	r7, r3
   18244:	lsl	r5, r1, r0
   18248:	mov	r0, r5
   1824c:	bl	f1c <malloc@plt>
   18250:	cmp	r0, #0
   18254:	str	r0, [r6, #12]
   18258:	beq	1829c <sf_gen_atmfield_code+0x2ec>
   1825c:	mov	r1, #0
   18260:	mov	r2, r5
   18264:	add	r6, r6, #8
   18268:	bl	f88 <memset@plt>
   1826c:	cmp	r5, #207	; 0xcf
   18270:	mov	r3, r7
   18274:	str	r5, [r6]
   18278:	bls	1829c <sf_gen_atmfield_code+0x2ec>
   1827c:	sub	r0, r5, #208	; 0xd0
   18280:	orr	r1, r4, #5
   18284:	str	r0, [r6]
   18288:	ldr	r2, [r6, #4]
   1828c:	add	r0, r2, r0
   18290:	str	r3, [r0, #4]
   18294:	b	181ac <sf_gen_atmfield_code+0x1fc>
   18298:	bl	100c <abort@plt>
   1829c:	ldr	r0, [pc, #52]	; 182d8 <sf_gen_atmfield_code+0x328>
   182a0:	add	r0, pc, r0
   182a4:	bl	2204 <sf_bpf_error>
   182a8:	ldr	r0, [pc, #64]	; 182f0 <sf_gen_atmfield_code+0x340>
   182ac:	add	r0, pc, r0
   182b0:	bl	2204 <sf_bpf_error>
   182b4:	ldr	r0, [pc, #60]	; 182f8 <sf_gen_atmfield_code+0x348>
   182b8:	add	r0, pc, r0
   182bc:	bl	2204 <sf_bpf_error>
   182c0:	ldr	r0, [pc, #44]	; 182f4 <sf_gen_atmfield_code+0x344>
   182c4:	add	r0, pc, r0
   182c8:	bl	2204 <sf_bpf_error>
   182cc:	.word	0x0002e4e8
   182d0:	.word	0x0002e2e4
   182d4:	.word	0x0002e3d8
   182d8:	.word	0x000110f4
   182dc:	.word	0x0002e498
   182e0:	.word	0x0002e3a8
   182e4:	.word	0x0002e2b0
   182e8:	.word	0x0002e3fc
   182ec:	.word	0x0002e4c4
   182f0:	.word	0x00010d85
   182f4:	.word	0x00010d8d
   182f8:	.word	0x00010db9

000182fc <sf_gen_atmtype_abbrev>:
   182fc:	push	{r4, r5, r6, sl, fp, lr}
   18300:	add	fp, sp, #16
   18304:	sub	sp, sp, #8
   18308:	sub	r0, r0, #22
   1830c:	cmp	r0, #9
   18310:	bhi	189bc <sf_gen_atmtype_abbrev+0x6c0>
   18314:	add	r1, pc, #4
   18318:	ldr	r0, [r1, r0, lsl #2]
   1831c:	add	pc, r1, r0
   18320:	.word	0x00000028
   18324:	.word	0x00000324
   18328:	.word	0x00000238
   1832c:	.word	0x00000114
   18330:	.word	0x00000560
   18334:	.word	0x00000410
   18338:	.word	0x0000069c
   1833c:	.word	0x0000069c
   18340:	.word	0x000004fc
   18344:	.word	0x00000200
   18348:	ldr	r0, [pc, #1744]	; 18a20 <sf_gen_atmtype_abbrev+0x724>
   1834c:	add	r0, pc, r0
   18350:	ldrb	r0, [r0, #8]
   18354:	cmp	r0, #0
   18358:	beq	189c0 <sf_gen_atmtype_abbrev+0x6c4>
   1835c:	mov	r0, #51	; 0x33
   18360:	mov	r1, #0
   18364:	mov	r2, #16
   18368:	mov	r3, #0
   1836c:	bl	17fb0 <sf_gen_atmfield_code>
   18370:	mov	r5, r0
   18374:	mov	r0, #52	; 0x34
   18378:	mov	r1, #1
   1837c:	mov	r2, #16
   18380:	mov	r3, #0
   18384:	bl	17fb0 <sf_gen_atmfield_code>
   18388:	cmp	r5, #0
   1838c:	beq	183c0 <sf_gen_atmtype_abbrev+0xc4>
   18390:	ldr	r1, [r0, #96]	; 0x60
   18394:	mov	r2, r5
   18398:	ldr	r3, [r2, #44]	; 0x2c
   1839c:	add	r4, r2, #84	; 0x54
   183a0:	cmp	r3, #0
   183a4:	mov	r3, #84	; 0x54
   183a8:	movweq	r3, #60	; 0x3c
   183ac:	addeq	r4, r2, #60	; 0x3c
   183b0:	ldr	r2, [r2, r3]
   183b4:	str	r1, [r4]
   183b8:	cmp	r2, #0
   183bc:	bne	18398 <sf_gen_atmtype_abbrev+0x9c>
   183c0:	ldr	r1, [r5, #44]	; 0x2c
   183c4:	cmp	r0, #0
   183c8:	clz	r1, r1
   183cc:	lsr	r1, r1, #5
   183d0:	str	r1, [r5, #44]	; 0x2c
   183d4:	ldr	r2, [r0, #44]	; 0x2c
   183d8:	clz	r1, r2
   183dc:	lsr	r1, r1, #5
   183e0:	str	r1, [r0, #44]	; 0x2c
   183e4:	str	r0, [sp, #4]
   183e8:	beq	18994 <sf_gen_atmtype_abbrev+0x698>
   183ec:	cmp	r2, #0
   183f0:	mov	r2, #60	; 0x3c
   183f4:	add	r1, r0, #60	; 0x3c
   183f8:	movweq	r2, #84	; 0x54
   183fc:	addeq	r1, r0, #84	; 0x54
   18400:	ldr	r2, [r0, r2]
   18404:	cmp	r2, #0
   18408:	beq	18998 <sf_gen_atmtype_abbrev+0x69c>
   1840c:	ldr	r3, [r2, #44]	; 0x2c
   18410:	add	r1, r2, #84	; 0x54
   18414:	cmp	r3, #0
   18418:	mov	r3, #84	; 0x54
   1841c:	movweq	r3, #60	; 0x3c
   18420:	addeq	r1, r2, #60	; 0x3c
   18424:	ldr	r2, [r2, r3]
   18428:	cmp	r2, #0
   1842c:	bne	1840c <sf_gen_atmtype_abbrev+0x110>
   18430:	b	18998 <sf_gen_atmtype_abbrev+0x69c>
   18434:	ldr	r0, [pc, #1520]	; 18a2c <sf_gen_atmtype_abbrev+0x730>
   18438:	add	r0, pc, r0
   1843c:	ldrb	r0, [r0, #8]
   18440:	cmp	r0, #0
   18444:	beq	189cc <sf_gen_atmtype_abbrev+0x6d0>
   18448:	mov	r0, #51	; 0x33
   1844c:	mov	r1, #0
   18450:	mov	r2, #16
   18454:	mov	r3, #0
   18458:	bl	17fb0 <sf_gen_atmfield_code>
   1845c:	mov	r4, r0
   18460:	mov	r0, #52	; 0x34
   18464:	mov	r1, #4
   18468:	mov	r2, #16
   1846c:	mov	r3, #0
   18470:	bl	17fb0 <sf_gen_atmfield_code>
   18474:	cmp	r4, #0
   18478:	beq	184ac <sf_gen_atmtype_abbrev+0x1b0>
   1847c:	ldr	r1, [r0, #96]	; 0x60
   18480:	mov	r2, r4
   18484:	ldr	r3, [r2, #44]	; 0x2c
   18488:	add	r5, r2, #84	; 0x54
   1848c:	cmp	r3, #0
   18490:	mov	r3, #84	; 0x54
   18494:	movweq	r3, #60	; 0x3c
   18498:	addeq	r5, r2, #60	; 0x3c
   1849c:	ldr	r2, [r2, r3]
   184a0:	str	r1, [r5]
   184a4:	cmp	r2, #0
   184a8:	bne	18484 <sf_gen_atmtype_abbrev+0x188>
   184ac:	ldr	r1, [r4, #44]	; 0x2c
   184b0:	cmp	r0, #0
   184b4:	clz	r1, r1
   184b8:	lsr	r1, r1, #5
   184bc:	str	r1, [r4, #44]	; 0x2c
   184c0:	ldr	r2, [r0, #44]	; 0x2c
   184c4:	clz	r1, r2
   184c8:	lsr	r1, r1, #5
   184cc:	str	r1, [r0, #44]	; 0x2c
   184d0:	str	r0, [sp, #4]
   184d4:	beq	1896c <sf_gen_atmtype_abbrev+0x670>
   184d8:	cmp	r2, #0
   184dc:	mov	r2, #60	; 0x3c
   184e0:	add	r1, r0, #60	; 0x3c
   184e4:	movweq	r2, #84	; 0x54
   184e8:	addeq	r1, r0, #84	; 0x54
   184ec:	ldr	r2, [r0, r2]
   184f0:	cmp	r2, #0
   184f4:	beq	18970 <sf_gen_atmtype_abbrev+0x674>
   184f8:	ldr	r3, [r2, #44]	; 0x2c
   184fc:	add	r1, r2, #84	; 0x54
   18500:	cmp	r3, #0
   18504:	mov	r3, #84	; 0x54
   18508:	movweq	r3, #60	; 0x3c
   1850c:	addeq	r1, r2, #60	; 0x3c
   18510:	ldr	r2, [r2, r3]
   18514:	cmp	r2, #0
   18518:	bne	184f8 <sf_gen_atmtype_abbrev+0x1fc>
   1851c:	b	18970 <sf_gen_atmtype_abbrev+0x674>
   18520:	ldr	r4, [pc, #1300]	; 18a3c <sf_gen_atmtype_abbrev+0x740>
   18524:	add	r4, pc, r4
   18528:	ldrb	r0, [r4, #8]
   1852c:	cmp	r0, #0
   18530:	beq	189d8 <sf_gen_atmtype_abbrev+0x6dc>
   18534:	mov	r0, #53	; 0x35
   18538:	mov	r1, #2
   1853c:	mov	r2, #16
   18540:	mov	r3, #0
   18544:	mov	r5, #0
   18548:	bl	17fb0 <sf_gen_atmfield_code>
   1854c:	strb	r5, [r4]
   18550:	sub	sp, fp, #16
   18554:	pop	{r4, r5, r6, sl, fp, pc}
   18558:	ldr	r0, [pc, #1224]	; 18a28 <sf_gen_atmtype_abbrev+0x72c>
   1855c:	add	r0, pc, r0
   18560:	ldrb	r0, [r0, #8]
   18564:	cmp	r0, #0
   18568:	beq	189e4 <sf_gen_atmtype_abbrev+0x6e8>
   1856c:	mov	r0, #51	; 0x33
   18570:	mov	r1, #0
   18574:	mov	r2, #16
   18578:	mov	r3, #0
   1857c:	bl	17fb0 <sf_gen_atmfield_code>
   18580:	mov	r4, r0
   18584:	mov	r0, #52	; 0x34
   18588:	mov	r1, #3
   1858c:	mov	r2, #16
   18590:	mov	r3, #0
   18594:	bl	17fb0 <sf_gen_atmfield_code>
   18598:	cmp	r4, #0
   1859c:	beq	185d0 <sf_gen_atmtype_abbrev+0x2d4>
   185a0:	ldr	r1, [r0, #96]	; 0x60
   185a4:	mov	r2, r4
   185a8:	ldr	r3, [r2, #44]	; 0x2c
   185ac:	add	r5, r2, #84	; 0x54
   185b0:	cmp	r3, #0
   185b4:	mov	r3, #84	; 0x54
   185b8:	movweq	r3, #60	; 0x3c
   185bc:	addeq	r5, r2, #60	; 0x3c
   185c0:	ldr	r2, [r2, r3]
   185c4:	str	r1, [r5]
   185c8:	cmp	r2, #0
   185cc:	bne	185a8 <sf_gen_atmtype_abbrev+0x2ac>
   185d0:	ldr	r1, [r4, #44]	; 0x2c
   185d4:	cmp	r0, #0
   185d8:	clz	r1, r1
   185dc:	lsr	r1, r1, #5
   185e0:	str	r1, [r4, #44]	; 0x2c
   185e4:	ldr	r2, [r0, #44]	; 0x2c
   185e8:	clz	r1, r2
   185ec:	lsr	r1, r1, #5
   185f0:	str	r1, [r0, #44]	; 0x2c
   185f4:	str	r0, [sp, #4]
   185f8:	beq	1896c <sf_gen_atmtype_abbrev+0x670>
   185fc:	cmp	r2, #0
   18600:	mov	r2, #60	; 0x3c
   18604:	add	r1, r0, #60	; 0x3c
   18608:	movweq	r2, #84	; 0x54
   1860c:	addeq	r1, r0, #84	; 0x54
   18610:	ldr	r2, [r0, r2]
   18614:	cmp	r2, #0
   18618:	beq	18970 <sf_gen_atmtype_abbrev+0x674>
   1861c:	ldr	r3, [r2, #44]	; 0x2c
   18620:	add	r1, r2, #84	; 0x54
   18624:	cmp	r3, #0
   18628:	mov	r3, #84	; 0x54
   1862c:	movweq	r3, #60	; 0x3c
   18630:	addeq	r1, r2, #60	; 0x3c
   18634:	ldr	r2, [r2, r3]
   18638:	cmp	r2, #0
   1863c:	bne	1861c <sf_gen_atmtype_abbrev+0x320>
   18640:	b	18970 <sf_gen_atmtype_abbrev+0x674>
   18644:	ldr	r0, [pc, #984]	; 18a24 <sf_gen_atmtype_abbrev+0x728>
   18648:	add	r0, pc, r0
   1864c:	ldrb	r0, [r0, #8]
   18650:	cmp	r0, #0
   18654:	beq	189f0 <sf_gen_atmtype_abbrev+0x6f4>
   18658:	mov	r0, #51	; 0x33
   1865c:	mov	r1, #0
   18660:	mov	r2, #16
   18664:	mov	r3, #0
   18668:	bl	17fb0 <sf_gen_atmfield_code>
   1866c:	mov	r4, r0
   18670:	mov	r0, #52	; 0x34
   18674:	mov	r1, #2
   18678:	mov	r2, #16
   1867c:	mov	r3, #0
   18680:	bl	17fb0 <sf_gen_atmfield_code>
   18684:	cmp	r4, #0
   18688:	beq	186bc <sf_gen_atmtype_abbrev+0x3c0>
   1868c:	ldr	r1, [r0, #96]	; 0x60
   18690:	mov	r2, r4
   18694:	ldr	r3, [r2, #44]	; 0x2c
   18698:	add	r5, r2, #84	; 0x54
   1869c:	cmp	r3, #0
   186a0:	mov	r3, #84	; 0x54
   186a4:	movweq	r3, #60	; 0x3c
   186a8:	addeq	r5, r2, #60	; 0x3c
   186ac:	ldr	r2, [r2, r3]
   186b0:	str	r1, [r5]
   186b4:	cmp	r2, #0
   186b8:	bne	18694 <sf_gen_atmtype_abbrev+0x398>
   186bc:	ldr	r1, [r4, #44]	; 0x2c
   186c0:	cmp	r0, #0
   186c4:	clz	r1, r1
   186c8:	lsr	r1, r1, #5
   186cc:	str	r1, [r4, #44]	; 0x2c
   186d0:	ldr	r2, [r0, #44]	; 0x2c
   186d4:	clz	r1, r2
   186d8:	lsr	r1, r1, #5
   186dc:	str	r1, [r0, #44]	; 0x2c
   186e0:	str	r0, [sp, #4]
   186e4:	beq	1896c <sf_gen_atmtype_abbrev+0x670>
   186e8:	cmp	r2, #0
   186ec:	mov	r2, #60	; 0x3c
   186f0:	add	r1, r0, #60	; 0x3c
   186f4:	movweq	r2, #84	; 0x54
   186f8:	addeq	r1, r0, #84	; 0x54
   186fc:	ldr	r2, [r0, r2]
   18700:	cmp	r2, #0
   18704:	beq	18970 <sf_gen_atmtype_abbrev+0x674>
   18708:	ldr	r3, [r2, #44]	; 0x2c
   1870c:	add	r1, r2, #84	; 0x54
   18710:	cmp	r3, #0
   18714:	mov	r3, #84	; 0x54
   18718:	movweq	r3, #60	; 0x3c
   1871c:	addeq	r1, r2, #60	; 0x3c
   18720:	ldr	r2, [r2, r3]
   18724:	cmp	r2, #0
   18728:	bne	18708 <sf_gen_atmtype_abbrev+0x40c>
   1872c:	b	18970 <sf_gen_atmtype_abbrev+0x674>
   18730:	ldr	r0, [pc, #764]	; 18a34 <sf_gen_atmtype_abbrev+0x738>
   18734:	add	r0, pc, r0
   18738:	ldrb	r0, [r0, #8]
   1873c:	cmp	r0, #0
   18740:	beq	189fc <sf_gen_atmtype_abbrev+0x700>
   18744:	mov	r0, #51	; 0x33
   18748:	mov	r1, #0
   1874c:	mov	r2, #16
   18750:	mov	r3, #0
   18754:	bl	17fb0 <sf_gen_atmfield_code>
   18758:	mov	r4, r0
   1875c:	mov	r0, #52	; 0x34
   18760:	mov	r1, #16
   18764:	mov	r2, #16
   18768:	mov	r3, #0
   1876c:	bl	17fb0 <sf_gen_atmfield_code>
   18770:	cmp	r4, #0
   18774:	beq	187a8 <sf_gen_atmtype_abbrev+0x4ac>
   18778:	ldr	r1, [r0, #96]	; 0x60
   1877c:	mov	r2, r4
   18780:	ldr	r3, [r2, #44]	; 0x2c
   18784:	add	r5, r2, #84	; 0x54
   18788:	cmp	r3, #0
   1878c:	mov	r3, #84	; 0x54
   18790:	movweq	r3, #60	; 0x3c
   18794:	addeq	r5, r2, #60	; 0x3c
   18798:	ldr	r2, [r2, r3]
   1879c:	str	r1, [r5]
   187a0:	cmp	r2, #0
   187a4:	bne	18780 <sf_gen_atmtype_abbrev+0x484>
   187a8:	ldr	r1, [r4, #44]	; 0x2c
   187ac:	cmp	r0, #0
   187b0:	clz	r1, r1
   187b4:	lsr	r1, r1, #5
   187b8:	str	r1, [r4, #44]	; 0x2c
   187bc:	ldr	r2, [r0, #44]	; 0x2c
   187c0:	clz	r1, r2
   187c4:	lsr	r1, r1, #5
   187c8:	str	r1, [r0, #44]	; 0x2c
   187cc:	str	r0, [sp, #4]
   187d0:	beq	1896c <sf_gen_atmtype_abbrev+0x670>
   187d4:	cmp	r2, #0
   187d8:	mov	r2, #60	; 0x3c
   187dc:	add	r1, r0, #60	; 0x3c
   187e0:	movweq	r2, #84	; 0x54
   187e4:	addeq	r1, r0, #84	; 0x54
   187e8:	ldr	r2, [r0, r2]
   187ec:	cmp	r2, #0
   187f0:	beq	18970 <sf_gen_atmtype_abbrev+0x674>
   187f4:	ldr	r3, [r2, #44]	; 0x2c
   187f8:	add	r1, r2, #84	; 0x54
   187fc:	cmp	r3, #0
   18800:	mov	r3, #84	; 0x54
   18804:	movweq	r3, #60	; 0x3c
   18808:	addeq	r1, r2, #60	; 0x3c
   1880c:	ldr	r2, [r2, r3]
   18810:	cmp	r2, #0
   18814:	bne	187f4 <sf_gen_atmtype_abbrev+0x4f8>
   18818:	b	18970 <sf_gen_atmtype_abbrev+0x674>
   1881c:	ldr	r4, [pc, #532]	; 18a38 <sf_gen_atmtype_abbrev+0x73c>
   18820:	add	r4, pc, r4
   18824:	ldrb	r0, [r4, #8]
   18828:	cmp	r0, #0
   1882c:	beq	18a08 <sf_gen_atmtype_abbrev+0x70c>
   18830:	mov	r0, #53	; 0x35
   18834:	mov	r1, #1
   18838:	mov	r2, #16
   1883c:	mov	r3, #0
   18840:	mov	r5, #1
   18844:	mov	r6, #0
   18848:	bl	17fb0 <sf_gen_atmfield_code>
   1884c:	strb	r5, [r4]
   18850:	mov	r1, #3
   18854:	ldr	r2, [r4, #68]	; 0x44
   18858:	add	r5, r2, #14
   1885c:	add	r3, r2, #2
   18860:	add	r2, r2, #16
   18864:	str	r5, [r4, #40]	; 0x28
   18868:	str	r2, [r4, #44]	; 0x2c
   1886c:	str	r6, [r4, #48]	; 0x30
   18870:	str	r3, [r4, #52]	; 0x34
   18874:	str	r1, [r4, #56]	; 0x38
   18878:	sub	sp, fp, #16
   1887c:	pop	{r4, r5, r6, sl, fp, pc}
   18880:	ldr	r0, [pc, #424]	; 18a30 <sf_gen_atmtype_abbrev+0x734>
   18884:	add	r0, pc, r0
   18888:	ldrb	r0, [r0, #8]
   1888c:	cmp	r0, #0
   18890:	beq	18a14 <sf_gen_atmtype_abbrev+0x718>
   18894:	mov	r0, #51	; 0x33
   18898:	mov	r1, #0
   1889c:	mov	r2, #16
   188a0:	mov	r3, #0
   188a4:	bl	17fb0 <sf_gen_atmfield_code>
   188a8:	mov	r4, r0
   188ac:	mov	r0, #52	; 0x34
   188b0:	mov	r1, #5
   188b4:	mov	r2, #16
   188b8:	mov	r3, #0
   188bc:	bl	17fb0 <sf_gen_atmfield_code>
   188c0:	cmp	r4, #0
   188c4:	beq	188f8 <sf_gen_atmtype_abbrev+0x5fc>
   188c8:	ldr	r1, [r0, #96]	; 0x60
   188cc:	mov	r2, r4
   188d0:	ldr	r3, [r2, #44]	; 0x2c
   188d4:	add	r5, r2, #84	; 0x54
   188d8:	cmp	r3, #0
   188dc:	mov	r3, #84	; 0x54
   188e0:	movweq	r3, #60	; 0x3c
   188e4:	addeq	r5, r2, #60	; 0x3c
   188e8:	ldr	r2, [r2, r3]
   188ec:	str	r1, [r5]
   188f0:	cmp	r2, #0
   188f4:	bne	188d0 <sf_gen_atmtype_abbrev+0x5d4>
   188f8:	ldr	r1, [r4, #44]	; 0x2c
   188fc:	cmp	r0, #0
   18900:	clz	r1, r1
   18904:	lsr	r1, r1, #5
   18908:	str	r1, [r4, #44]	; 0x2c
   1890c:	ldr	r2, [r0, #44]	; 0x2c
   18910:	clz	r1, r2
   18914:	lsr	r1, r1, #5
   18918:	str	r1, [r0, #44]	; 0x2c
   1891c:	str	r0, [sp, #4]
   18920:	beq	1896c <sf_gen_atmtype_abbrev+0x670>
   18924:	cmp	r2, #0
   18928:	mov	r2, #60	; 0x3c
   1892c:	add	r1, r0, #60	; 0x3c
   18930:	movweq	r2, #84	; 0x54
   18934:	addeq	r1, r0, #84	; 0x54
   18938:	ldr	r2, [r0, r2]
   1893c:	cmp	r2, #0
   18940:	beq	18970 <sf_gen_atmtype_abbrev+0x674>
   18944:	ldr	r3, [r2, #44]	; 0x2c
   18948:	add	r1, r2, #84	; 0x54
   1894c:	cmp	r3, #0
   18950:	mov	r3, #84	; 0x54
   18954:	movweq	r3, #60	; 0x3c
   18958:	addeq	r1, r2, #60	; 0x3c
   1895c:	ldr	r2, [r2, r3]
   18960:	cmp	r2, #0
   18964:	bne	18944 <sf_gen_atmtype_abbrev+0x648>
   18968:	b	18970 <sf_gen_atmtype_abbrev+0x674>
   1896c:	add	r1, sp, #4
   18970:	str	r4, [r1]
   18974:	ldr	r1, [r0, #44]	; 0x2c
   18978:	clz	r1, r1
   1897c:	lsr	r1, r1, #5
   18980:	str	r1, [r0, #44]	; 0x2c
   18984:	ldr	r1, [r4, #96]	; 0x60
   18988:	str	r1, [r0, #96]	; 0x60
   1898c:	sub	sp, fp, #16
   18990:	pop	{r4, r5, r6, sl, fp, pc}
   18994:	add	r1, sp, #4
   18998:	str	r5, [r1]
   1899c:	ldr	r1, [r0, #44]	; 0x2c
   189a0:	clz	r1, r1
   189a4:	lsr	r1, r1, #5
   189a8:	str	r1, [r0, #44]	; 0x2c
   189ac:	ldr	r1, [r5, #96]	; 0x60
   189b0:	str	r1, [r0, #96]	; 0x60
   189b4:	sub	sp, fp, #16
   189b8:	pop	{r4, r5, r6, sl, fp, pc}
   189bc:	bl	100c <abort@plt>
   189c0:	ldr	r0, [pc, #120]	; 18a40 <sf_gen_atmtype_abbrev+0x744>
   189c4:	add	r0, pc, r0
   189c8:	bl	2204 <sf_bpf_error>
   189cc:	ldr	r0, [pc, #120]	; 18a4c <sf_gen_atmtype_abbrev+0x750>
   189d0:	add	r0, pc, r0
   189d4:	bl	2204 <sf_bpf_error>
   189d8:	ldr	r0, [pc, #124]	; 18a5c <sf_gen_atmtype_abbrev+0x760>
   189dc:	add	r0, pc, r0
   189e0:	bl	2204 <sf_bpf_error>
   189e4:	ldr	r0, [pc, #92]	; 18a48 <sf_gen_atmtype_abbrev+0x74c>
   189e8:	add	r0, pc, r0
   189ec:	bl	2204 <sf_bpf_error>
   189f0:	ldr	r0, [pc, #76]	; 18a44 <sf_gen_atmtype_abbrev+0x748>
   189f4:	add	r0, pc, r0
   189f8:	bl	2204 <sf_bpf_error>
   189fc:	ldr	r0, [pc, #80]	; 18a54 <sf_gen_atmtype_abbrev+0x758>
   18a00:	add	r0, pc, r0
   18a04:	bl	2204 <sf_bpf_error>
   18a08:	ldr	r0, [pc, #72]	; 18a58 <sf_gen_atmtype_abbrev+0x75c>
   18a0c:	add	r0, pc, r0
   18a10:	bl	2204 <sf_bpf_error>
   18a14:	ldr	r0, [pc, #52]	; 18a50 <sf_gen_atmtype_abbrev+0x754>
   18a18:	add	r0, pc, r0
   18a1c:	bl	2204 <sf_bpf_error>
   18a20:	.word	0x0002e194
   18a24:	.word	0x0002de98
   18a28:	.word	0x0002df84
   18a2c:	.word	0x0002e0a8
   18a30:	.word	0x0002dc5c
   18a34:	.word	0x0002ddac
   18a38:	.word	0x0002dcc0
   18a3c:	.word	0x0002dfbc
   18a40:	.word	0x000106d1
   18a44:	.word	0x000106c3
   18a48:	.word	0x000106ef
   18a4c:	.word	0x0001072a
   18a50:	.word	0x00010705
   18a54:	.word	0x0001073c
   18a58:	.word	0x00010752
   18a5c:	.word	0x000107a3

00018a60 <sf_gen_mtp2type_abbrev>:
   18a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a64:	add	fp, sp, #28
   18a68:	sub	sp, sp, #12
   18a6c:	cmp	r0, #24
   18a70:	beq	18bb4 <sf_gen_mtp2type_abbrev+0x154>
   18a74:	cmp	r0, #23
   18a78:	beq	18b1c <sf_gen_mtp2type_abbrev+0xbc>
   18a7c:	cmp	r0, #22
   18a80:	bne	19298 <sf_gen_mtp2type_abbrev+0x838>
   18a84:	ldr	r3, [pc, #2100]	; 192c0 <sf_gen_mtp2type_abbrev+0x860>
   18a88:	add	r3, pc, r3
   18a8c:	ldr	r0, [r3, #36]	; 0x24
   18a90:	sub	r1, r0, #139	; 0x8b
   18a94:	cmp	r1, #2
   18a98:	bcc	18aa4 <sf_gen_mtp2type_abbrev+0x44>
   18a9c:	cmp	r0, #197	; 0xc5
   18aa0:	bne	1929c <sf_gen_mtp2type_abbrev+0x83c>
   18aa4:	ldr	sl, [r3, #72]	; 0x48
   18aa8:	ldr	r0, [r3, #92]	; 0x5c
   18aac:	ldr	r8, [pc, #2064]	; 192c4 <sf_gen_mtp2type_abbrev+0x864>
   18ab0:	add	r8, pc, r8
   18ab4:	mov	r5, r8
   18ab8:	ldr	r4, [r5, r0, lsl #3]!
   18abc:	cmp	r4, #19
   18ac0:	bhi	18c4c <sf_gen_mtp2type_abbrev+0x1ec>
   18ac4:	add	r7, r0, #1
   18ac8:	cmp	r0, #15
   18acc:	str	r7, [r3, #92]	; 0x5c
   18ad0:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ad4:	mov	r0, #1024	; 0x400
   18ad8:	mov	r9, r3
   18adc:	lsl	r4, r0, r7
   18ae0:	mov	r0, r4
   18ae4:	bl	f1c <malloc@plt>
   18ae8:	cmp	r0, #0
   18aec:	str	r0, [r5, #12]
   18af0:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18af4:	mov	r1, #0
   18af8:	mov	r2, r4
   18afc:	add	r6, r5, #8
   18b00:	bl	f88 <memset@plt>
   18b04:	cmp	r4, #20
   18b08:	str	r4, [r6]
   18b0c:	bcc	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18b10:	add	r5, r8, r7, lsl #3
   18b14:	mov	r3, r9
   18b18:	b	18c54 <sf_gen_mtp2type_abbrev+0x1f4>
   18b1c:	ldr	r3, [pc, #1956]	; 192c8 <sf_gen_mtp2type_abbrev+0x868>
   18b20:	add	r3, pc, r3
   18b24:	ldr	r0, [r3, #36]	; 0x24
   18b28:	sub	r1, r0, #139	; 0x8b
   18b2c:	cmp	r1, #2
   18b30:	bcc	18b3c <sf_gen_mtp2type_abbrev+0xdc>
   18b34:	cmp	r0, #197	; 0xc5
   18b38:	bne	192a8 <sf_gen_mtp2type_abbrev+0x848>
   18b3c:	ldr	r8, [r3, #72]	; 0x48
   18b40:	ldr	r0, [r3, #92]	; 0x5c
   18b44:	ldr	sl, [pc, #1920]	; 192cc <sf_gen_mtp2type_abbrev+0x86c>
   18b48:	add	sl, pc, sl
   18b4c:	mov	r6, sl
   18b50:	ldr	r4, [r6, r0, lsl #3]!
   18b54:	cmp	r4, #19
   18b58:	bhi	18ccc <sf_gen_mtp2type_abbrev+0x26c>
   18b5c:	add	r7, r0, #1
   18b60:	cmp	r0, #15
   18b64:	str	r7, [r3, #92]	; 0x5c
   18b68:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18b6c:	mov	r0, #1024	; 0x400
   18b70:	lsl	r4, r0, r7
   18b74:	mov	r0, r4
   18b78:	bl	f1c <malloc@plt>
   18b7c:	cmp	r0, #0
   18b80:	str	r0, [r6, #12]
   18b84:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18b88:	mov	r1, #0
   18b8c:	mov	r2, r4
   18b90:	add	r5, r6, #8
   18b94:	bl	f88 <memset@plt>
   18b98:	cmp	r4, #20
   18b9c:	str	r4, [r5]
   18ba0:	bcc	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ba4:	ldr	r3, [pc, #1828]	; 192d0 <sf_gen_mtp2type_abbrev+0x870>
   18ba8:	add	r6, sl, r7, lsl #3
   18bac:	add	r3, pc, r3
   18bb0:	b	18cd4 <sf_gen_mtp2type_abbrev+0x274>
   18bb4:	ldr	r3, [pc, #1832]	; 192e4 <sf_gen_mtp2type_abbrev+0x884>
   18bb8:	add	r3, pc, r3
   18bbc:	ldr	r0, [r3, #36]	; 0x24
   18bc0:	sub	r1, r0, #139	; 0x8b
   18bc4:	cmp	r1, #2
   18bc8:	bcc	18bd4 <sf_gen_mtp2type_abbrev+0x174>
   18bcc:	cmp	r0, #197	; 0xc5
   18bd0:	bne	192b4 <sf_gen_mtp2type_abbrev+0x854>
   18bd4:	ldr	sl, [r3, #72]	; 0x48
   18bd8:	ldr	r0, [r3, #92]	; 0x5c
   18bdc:	ldr	r8, [pc, #1796]	; 192e8 <sf_gen_mtp2type_abbrev+0x888>
   18be0:	add	r8, pc, r8
   18be4:	mov	r5, r8
   18be8:	ldr	r4, [r5, r0, lsl #3]!
   18bec:	cmp	r4, #19
   18bf0:	bhi	18e00 <sf_gen_mtp2type_abbrev+0x3a0>
   18bf4:	add	r7, r0, #1
   18bf8:	cmp	r0, #15
   18bfc:	str	r7, [r3, #92]	; 0x5c
   18c00:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18c04:	mov	r0, #1024	; 0x400
   18c08:	mov	r9, r3
   18c0c:	lsl	r4, r0, r7
   18c10:	mov	r0, r4
   18c14:	bl	f1c <malloc@plt>
   18c18:	cmp	r0, #0
   18c1c:	str	r0, [r5, #12]
   18c20:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18c24:	mov	r1, #0
   18c28:	mov	r2, r4
   18c2c:	add	r6, r5, #8
   18c30:	bl	f88 <memset@plt>
   18c34:	cmp	r4, #20
   18c38:	str	r4, [r6]
   18c3c:	bcc	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18c40:	add	r5, r8, r7, lsl #3
   18c44:	mov	r3, r9
   18c48:	b	18e08 <sf_gen_mtp2type_abbrev+0x3a8>
   18c4c:	mov	r7, r0
   18c50:	mov	r6, r5
   18c54:	sub	r0, r4, #20
   18c58:	mov	r1, #48	; 0x30
   18c5c:	str	r0, [r6]
   18c60:	ldr	r9, [r6, #4]
   18c64:	str	r1, [r9, r0]!
   18c68:	str	sl, [r9, #12]
   18c6c:	ldr	r4, [r8, r7, lsl #3]
   18c70:	cmp	r4, #19
   18c74:	bhi	18d50 <sf_gen_mtp2type_abbrev+0x2f0>
   18c78:	add	sl, r7, #1
   18c7c:	cmp	r7, #15
   18c80:	str	sl, [r3, #92]	; 0x5c
   18c84:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18c88:	mov	r0, #1024	; 0x400
   18c8c:	mov	r6, r3
   18c90:	lsl	r4, r0, sl
   18c94:	mov	r0, r4
   18c98:	bl	f1c <malloc@plt>
   18c9c:	cmp	r0, #0
   18ca0:	str	r0, [r5, #12]
   18ca4:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ca8:	mov	r1, #0
   18cac:	mov	r2, r4
   18cb0:	add	r5, r5, #8
   18cb4:	bl	f88 <memset@plt>
   18cb8:	cmp	r4, #19
   18cbc:	mov	r3, r6
   18cc0:	str	r4, [r5]
   18cc4:	bhi	18d54 <sf_gen_mtp2type_abbrev+0x2f4>
   18cc8:	b	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ccc:	mov	r7, r0
   18cd0:	mov	r5, r6
   18cd4:	sub	r0, r4, #20
   18cd8:	mov	r1, #48	; 0x30
   18cdc:	str	r0, [r5]
   18ce0:	ldr	r9, [r5, #4]
   18ce4:	str	r1, [r9, r0]!
   18ce8:	str	r8, [sp, #4]
   18cec:	str	r8, [r9, #12]
   18cf0:	ldr	r4, [sl, r7, lsl #3]
   18cf4:	cmp	r4, #19
   18cf8:	bhi	18e80 <sf_gen_mtp2type_abbrev+0x420>
   18cfc:	add	r8, r7, #1
   18d00:	cmp	r7, #15
   18d04:	str	r8, [r3, #92]	; 0x5c
   18d08:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18d0c:	mov	r0, #1024	; 0x400
   18d10:	lsl	r4, r0, r8
   18d14:	mov	r0, r4
   18d18:	bl	f1c <malloc@plt>
   18d1c:	cmp	r0, #0
   18d20:	str	r0, [r6, #12]
   18d24:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18d28:	mov	r1, #0
   18d2c:	mov	r2, r4
   18d30:	add	r6, r6, #8
   18d34:	bl	f88 <memset@plt>
   18d38:	str	r4, [r6]
   18d3c:	cmp	r4, #19
   18d40:	ldr	r3, [pc, #1420]	; 192d4 <sf_gen_mtp2type_abbrev+0x874>
   18d44:	add	r3, pc, r3
   18d48:	bhi	18e84 <sf_gen_mtp2type_abbrev+0x424>
   18d4c:	b	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18d50:	mov	sl, r7
   18d54:	sub	r1, r4, #20
   18d58:	mov	r2, #84	; 0x54
   18d5c:	str	r1, [r5]
   18d60:	ldr	r0, [r5, #4]
   18d64:	str	r2, [r0, r1]!
   18d68:	mov	r1, #63	; 0x3f
   18d6c:	mov	r2, r9
   18d70:	str	r1, [r0, #12]
   18d74:	mov	r1, r2
   18d78:	ldr	r2, [r2, #16]
   18d7c:	cmp	r2, #0
   18d80:	bne	18d74 <sf_gen_mtp2type_abbrev+0x314>
   18d84:	str	r0, [r1, #16]
   18d88:	ldr	r4, [r8, sl, lsl #3]!
   18d8c:	cmp	r4, #207	; 0xcf
   18d90:	bhi	18ddc <sf_gen_mtp2type_abbrev+0x37c>
   18d94:	add	r0, sl, #1
   18d98:	cmp	sl, #15
   18d9c:	str	r0, [r3, #92]	; 0x5c
   18da0:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18da4:	mov	r1, #1024	; 0x400
   18da8:	lsl	r4, r1, r0
   18dac:	mov	r0, r4
   18db0:	bl	f1c <malloc@plt>
   18db4:	cmp	r0, #0
   18db8:	str	r0, [r8, #12]
   18dbc:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18dc0:	mov	r1, #0
   18dc4:	mov	r2, r4
   18dc8:	add	r8, r8, #8
   18dcc:	bl	f88 <memset@plt>
   18dd0:	cmp	r4, #207	; 0xcf
   18dd4:	str	r4, [r8]
   18dd8:	bls	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ddc:	sub	r0, r4, #208	; 0xd0
   18de0:	str	r0, [r8]
   18de4:	ldr	r1, [r8, #4]
   18de8:	add	r4, r1, r0
   18dec:	mov	r0, #21
   18df0:	str	r9, [r4, #4]
   18df4:	str	r0, [r4, #8]
   18df8:	mov	r0, #0
   18dfc:	b	18fcc <sf_gen_mtp2type_abbrev+0x56c>
   18e00:	mov	r7, r0
   18e04:	mov	r6, r5
   18e08:	sub	r0, r4, #20
   18e0c:	mov	r1, #48	; 0x30
   18e10:	str	r0, [r6]
   18e14:	ldr	r9, [r6, #4]
   18e18:	str	r1, [r9, r0]!
   18e1c:	str	sl, [r9, #12]
   18e20:	ldr	r4, [r8, r7, lsl #3]
   18e24:	cmp	r4, #19
   18e28:	bhi	18f20 <sf_gen_mtp2type_abbrev+0x4c0>
   18e2c:	add	sl, r7, #1
   18e30:	cmp	r7, #15
   18e34:	str	sl, [r3, #92]	; 0x5c
   18e38:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18e3c:	mov	r0, #1024	; 0x400
   18e40:	mov	r6, r3
   18e44:	lsl	r4, r0, sl
   18e48:	mov	r0, r4
   18e4c:	bl	f1c <malloc@plt>
   18e50:	cmp	r0, #0
   18e54:	str	r0, [r5, #12]
   18e58:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18e5c:	mov	r1, #0
   18e60:	mov	r2, r4
   18e64:	add	r5, r5, #8
   18e68:	bl	f88 <memset@plt>
   18e6c:	cmp	r4, #19
   18e70:	mov	r3, r6
   18e74:	str	r4, [r5]
   18e78:	bhi	18f24 <sf_gen_mtp2type_abbrev+0x4c4>
   18e7c:	b	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18e80:	mov	r8, r7
   18e84:	sub	r1, r4, #20
   18e88:	mov	r2, #84	; 0x54
   18e8c:	str	r1, [r6]
   18e90:	ldr	r0, [r6, #4]
   18e94:	str	r2, [r0, r1]!
   18e98:	mov	r1, #63	; 0x3f
   18e9c:	mov	r2, r9
   18ea0:	str	r1, [r0, #12]
   18ea4:	mov	r1, r2
   18ea8:	ldr	r2, [r2, #16]
   18eac:	cmp	r2, #0
   18eb0:	bne	18ea4 <sf_gen_mtp2type_abbrev+0x444>
   18eb4:	str	r0, [r1, #16]
   18eb8:	mov	r6, sl
   18ebc:	ldr	r4, [r6, r8, lsl #3]!
   18ec0:	cmp	r4, #207	; 0xcf
   18ec4:	bhi	18fe0 <sf_gen_mtp2type_abbrev+0x580>
   18ec8:	add	r7, r8, #1
   18ecc:	cmp	r8, #15
   18ed0:	str	r7, [r3, #92]	; 0x5c
   18ed4:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ed8:	mov	r0, #1024	; 0x400
   18edc:	lsl	r4, r0, r7
   18ee0:	mov	r0, r4
   18ee4:	bl	f1c <malloc@plt>
   18ee8:	cmp	r0, #0
   18eec:	str	r0, [r6, #12]
   18ef0:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18ef4:	mov	r1, #0
   18ef8:	mov	r2, r4
   18efc:	add	r5, r6, #8
   18f00:	bl	f88 <memset@plt>
   18f04:	cmp	r4, #208	; 0xd0
   18f08:	str	r4, [r5]
   18f0c:	bcc	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18f10:	ldr	r3, [pc, #960]	; 192d8 <sf_gen_mtp2type_abbrev+0x878>
   18f14:	add	r6, sl, r7, lsl #3
   18f18:	add	r3, pc, r3
   18f1c:	b	18fe8 <sf_gen_mtp2type_abbrev+0x588>
   18f20:	mov	sl, r7
   18f24:	sub	r1, r4, #20
   18f28:	mov	r2, #84	; 0x54
   18f2c:	str	r1, [r5]
   18f30:	ldr	r0, [r5, #4]
   18f34:	str	r2, [r0, r1]!
   18f38:	mov	r1, #63	; 0x3f
   18f3c:	mov	r2, r9
   18f40:	str	r1, [r0, #12]
   18f44:	mov	r1, r2
   18f48:	ldr	r2, [r2, #16]
   18f4c:	cmp	r2, #0
   18f50:	bne	18f44 <sf_gen_mtp2type_abbrev+0x4e4>
   18f54:	str	r0, [r1, #16]
   18f58:	ldr	r4, [r8, sl, lsl #3]!
   18f5c:	cmp	r4, #207	; 0xcf
   18f60:	bhi	18fac <sf_gen_mtp2type_abbrev+0x54c>
   18f64:	add	r0, sl, #1
   18f68:	cmp	sl, #15
   18f6c:	str	r0, [r3, #92]	; 0x5c
   18f70:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18f74:	mov	r1, #1024	; 0x400
   18f78:	lsl	r4, r1, r0
   18f7c:	mov	r0, r4
   18f80:	bl	f1c <malloc@plt>
   18f84:	cmp	r0, #0
   18f88:	str	r0, [r8, #12]
   18f8c:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18f90:	mov	r1, #0
   18f94:	mov	r2, r4
   18f98:	add	r8, r8, #8
   18f9c:	bl	f88 <memset@plt>
   18fa0:	cmp	r4, #207	; 0xcf
   18fa4:	str	r4, [r8]
   18fa8:	bls	1928c <sf_gen_mtp2type_abbrev+0x82c>
   18fac:	sub	r0, r4, #208	; 0xd0
   18fb0:	str	r0, [r8]
   18fb4:	ldr	r1, [r8, #4]
   18fb8:	add	r4, r1, r0
   18fbc:	mov	r0, #37	; 0x25
   18fc0:	str	r9, [r4, #4]
   18fc4:	str	r0, [r4, #8]
   18fc8:	mov	r0, #2
   18fcc:	str	r0, [r4, #20]
   18fd0:	str	r4, [r4, #96]	; 0x60
   18fd4:	mov	r0, r4
   18fd8:	sub	sp, fp, #28
   18fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fe0:	mov	r7, r8
   18fe4:	mov	r5, r6
   18fe8:	sub	r0, r4, #208	; 0xd0
   18fec:	str	r0, [r5]
   18ff0:	ldr	r1, [r5, #4]
   18ff4:	add	r4, r1, r0
   18ff8:	mov	r0, #37	; 0x25
   18ffc:	str	r9, [r4, #4]
   19000:	str	r0, [r4, #8]
   19004:	mov	r0, #2
   19008:	str	r0, [r4, #20]
   1900c:	ldr	r0, [r4, #44]	; 0x2c
   19010:	clz	r0, r0
   19014:	lsr	r0, r0, #5
   19018:	str	r0, [r4, #44]	; 0x2c
   1901c:	str	r4, [r4, #96]	; 0x60
   19020:	ldr	r5, [sl, r7, lsl #3]
   19024:	cmp	r5, #19
   19028:	bhi	19084 <sf_gen_mtp2type_abbrev+0x624>
   1902c:	add	r9, r7, #1
   19030:	cmp	r7, #15
   19034:	str	r9, [r3, #92]	; 0x5c
   19038:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   1903c:	mov	r0, #1024	; 0x400
   19040:	lsl	r5, r0, r9
   19044:	mov	r0, r5
   19048:	bl	f1c <malloc@plt>
   1904c:	cmp	r0, #0
   19050:	str	r0, [r6, #12]
   19054:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   19058:	mov	r1, #0
   1905c:	mov	r2, r5
   19060:	add	r7, r6, #8
   19064:	bl	f88 <memset@plt>
   19068:	cmp	r5, #20
   1906c:	str	r5, [r7]
   19070:	bcc	1928c <sf_gen_mtp2type_abbrev+0x82c>
   19074:	ldr	r3, [pc, #608]	; 192dc <sf_gen_mtp2type_abbrev+0x87c>
   19078:	add	r6, sl, r9, lsl #3
   1907c:	add	r3, pc, r3
   19080:	b	1908c <sf_gen_mtp2type_abbrev+0x62c>
   19084:	mov	r9, r7
   19088:	mov	r7, r6
   1908c:	sub	r0, r5, #20
   19090:	mov	r1, #48	; 0x30
   19094:	str	r0, [r7]
   19098:	ldr	r8, [r7, #4]
   1909c:	str	r1, [r8, r0]!
   190a0:	ldr	r0, [sp, #4]
   190a4:	str	r0, [r8, #12]
   190a8:	ldr	r5, [r6]
   190ac:	cmp	r5, #19
   190b0:	bhi	19108 <sf_gen_mtp2type_abbrev+0x6a8>
   190b4:	add	r7, r9, #1
   190b8:	cmp	r9, #15
   190bc:	str	r7, [r3, #92]	; 0x5c
   190c0:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   190c4:	mov	r0, #1024	; 0x400
   190c8:	lsl	r5, r0, r7
   190cc:	mov	r0, r5
   190d0:	bl	f1c <malloc@plt>
   190d4:	cmp	r0, #0
   190d8:	str	r0, [r6, #12]
   190dc:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   190e0:	mov	r1, #0
   190e4:	mov	r2, r5
   190e8:	add	r6, r6, #8
   190ec:	bl	f88 <memset@plt>
   190f0:	str	r5, [r6]
   190f4:	cmp	r5, #19
   190f8:	ldr	r3, [pc, #480]	; 192e0 <sf_gen_mtp2type_abbrev+0x880>
   190fc:	add	r3, pc, r3
   19100:	bhi	1910c <sf_gen_mtp2type_abbrev+0x6ac>
   19104:	b	1928c <sf_gen_mtp2type_abbrev+0x82c>
   19108:	mov	r7, r9
   1910c:	sub	r1, r5, #20
   19110:	mov	r2, #84	; 0x54
   19114:	str	r1, [r6]
   19118:	ldr	r0, [r6, #4]
   1911c:	str	r2, [r0, r1]!
   19120:	mov	r1, #63	; 0x3f
   19124:	mov	r2, r8
   19128:	str	r1, [r0, #12]
   1912c:	mov	r1, r2
   19130:	ldr	r2, [r2, #16]
   19134:	cmp	r2, #0
   19138:	bne	1912c <sf_gen_mtp2type_abbrev+0x6cc>
   1913c:	str	r0, [r1, #16]
   19140:	ldr	r5, [sl, r7, lsl #3]!
   19144:	cmp	r5, #207	; 0xcf
   19148:	bhi	19194 <sf_gen_mtp2type_abbrev+0x734>
   1914c:	add	r0, r7, #1
   19150:	cmp	r7, #15
   19154:	str	r0, [r3, #92]	; 0x5c
   19158:	bge	1928c <sf_gen_mtp2type_abbrev+0x82c>
   1915c:	mov	r1, #1024	; 0x400
   19160:	lsl	r5, r1, r0
   19164:	mov	r0, r5
   19168:	bl	f1c <malloc@plt>
   1916c:	cmp	r0, #0
   19170:	str	r0, [sl, #12]
   19174:	beq	1928c <sf_gen_mtp2type_abbrev+0x82c>
   19178:	mov	r1, #0
   1917c:	mov	r2, r5
   19180:	add	sl, sl, #8
   19184:	bl	f88 <memset@plt>
   19188:	cmp	r5, #207	; 0xcf
   1918c:	str	r5, [sl]
   19190:	bls	1928c <sf_gen_mtp2type_abbrev+0x82c>
   19194:	sub	r0, r5, #208	; 0xd0
   19198:	str	r0, [sl]
   1919c:	ldr	r1, [sl, #4]
   191a0:	adds	r0, r1, r0
   191a4:	mov	r1, #37	; 0x25
   191a8:	str	r8, [r0, #4]
   191ac:	str	r1, [r0, #8]
   191b0:	mov	r1, #0
   191b4:	str	r1, [r0, #20]
   191b8:	str	r0, [r0, #96]	; 0x60
   191bc:	beq	191f0 <sf_gen_mtp2type_abbrev+0x790>
   191c0:	ldr	r1, [r4, #96]	; 0x60
   191c4:	mov	r2, r0
   191c8:	ldr	r3, [r2, #44]	; 0x2c
   191cc:	add	r7, r2, #84	; 0x54
   191d0:	cmp	r3, #0
   191d4:	mov	r3, #84	; 0x54
   191d8:	movweq	r3, #60	; 0x3c
   191dc:	addeq	r7, r2, #60	; 0x3c
   191e0:	ldr	r2, [r2, r3]
   191e4:	str	r1, [r7]
   191e8:	cmp	r2, #0
   191ec:	bne	191c8 <sf_gen_mtp2type_abbrev+0x768>
   191f0:	ldr	r1, [r0, #44]	; 0x2c
   191f4:	cmp	r4, #0
   191f8:	clz	r1, r1
   191fc:	lsr	r1, r1, #5
   19200:	str	r1, [r0, #44]	; 0x2c
   19204:	ldr	r1, [r4, #44]	; 0x2c
   19208:	clz	r2, r1
   1920c:	lsr	r2, r2, #5
   19210:	str	r2, [r4, #44]	; 0x2c
   19214:	str	r4, [sp, #8]
   19218:	beq	19260 <sf_gen_mtp2type_abbrev+0x800>
   1921c:	mov	r3, #60	; 0x3c
   19220:	cmp	r1, #0
   19224:	mov	r2, r4
   19228:	movweq	r3, #84	; 0x54
   1922c:	ldr	r1, [r2, r3]!
   19230:	cmp	r1, #0
   19234:	beq	19264 <sf_gen_mtp2type_abbrev+0x804>
   19238:	ldr	r3, [r1, #44]	; 0x2c
   1923c:	add	r2, r1, #84	; 0x54
   19240:	cmp	r3, #0
   19244:	mov	r3, #84	; 0x54
   19248:	movweq	r3, #60	; 0x3c
   1924c:	addeq	r2, r1, #60	; 0x3c
   19250:	ldr	r1, [r1, r3]
   19254:	cmp	r1, #0
   19258:	bne	19238 <sf_gen_mtp2type_abbrev+0x7d8>
   1925c:	b	19264 <sf_gen_mtp2type_abbrev+0x804>
   19260:	add	r2, sp, #8
   19264:	str	r0, [r2]
   19268:	ldr	r1, [r4, #44]	; 0x2c
   1926c:	clz	r1, r1
   19270:	lsr	r1, r1, #5
   19274:	str	r1, [r4, #44]	; 0x2c
   19278:	ldr	r0, [r0, #96]	; 0x60
   1927c:	str	r0, [r4, #96]	; 0x60
   19280:	mov	r0, r4
   19284:	sub	sp, fp, #28
   19288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1928c:	ldr	r0, [pc, #92]	; 192f0 <sf_gen_mtp2type_abbrev+0x890>
   19290:	add	r0, pc, r0
   19294:	bl	2204 <sf_bpf_error>
   19298:	bl	100c <abort@plt>
   1929c:	ldr	r0, [pc, #72]	; 192ec <sf_gen_mtp2type_abbrev+0x88c>
   192a0:	add	r0, pc, r0
   192a4:	bl	2204 <sf_bpf_error>
   192a8:	ldr	r0, [pc, #68]	; 192f4 <sf_gen_mtp2type_abbrev+0x894>
   192ac:	add	r0, pc, r0
   192b0:	bl	2204 <sf_bpf_error>
   192b4:	ldr	r0, [pc, #60]	; 192f8 <sf_gen_mtp2type_abbrev+0x898>
   192b8:	add	r0, pc, r0
   192bc:	bl	2204 <sf_bpf_error>
   192c0:	.word	0x0002da58
   192c4:	.word	0x0002d970
   192c8:	.word	0x0002d9c0
   192cc:	.word	0x0002d8d8
   192d0:	.word	0x0002d934
   192d4:	.word	0x0002d79c
   192d8:	.word	0x0002d5c8
   192dc:	.word	0x0002d464
   192e0:	.word	0x0002d3e4
   192e4:	.word	0x0002d928
   192e8:	.word	0x0002d840
   192ec:	.word	0x0000feff
   192f0:	.word	0x00010104
   192f4:	.word	0x0000ff11
   192f8:	.word	0x0000ff23

000192fc <sf_gen_mtp3field_code>:
   192fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19300:	add	fp, sp, #28
   19304:	sub	sp, sp, #20
   19308:	sub	r0, r0, #1
   1930c:	cmp	r0, #3
   19310:	bhi	19a44 <sf_gen_mtp3field_code+0x748>
   19314:	add	r7, pc, #12
   19318:	str	r2, [sp, #16]
   1931c:	str	r3, [sp, #12]
   19320:	ldr	r0, [r7, r0, lsl #2]
   19324:	add	pc, r7, r0
   19328:	.word	0x00000010
   1932c:	.word	0x000001e0
   19330:	.word	0x000000a8
   19334:	.word	0x00000144
   19338:	ldr	r6, [pc, #1896]	; 19aa8 <sf_gen_mtp3field_code+0x7ac>
   1933c:	add	r6, pc, r6
   19340:	ldr	sl, [r6, #76]	; 0x4c
   19344:	cmn	sl, #1
   19348:	beq	19a48 <sf_gen_mtp3field_code+0x74c>
   1934c:	cmp	r1, #256	; 0x100
   19350:	bcs	19a54 <sf_gen_mtp3field_code+0x758>
   19354:	ldr	r0, [r6, #92]	; 0x5c
   19358:	ldr	r9, [pc, #1868]	; 19aac <sf_gen_mtp3field_code+0x7b0>
   1935c:	add	r9, pc, r9
   19360:	mov	r4, r9
   19364:	ldr	r7, [r4, r0, lsl #3]!
   19368:	cmp	r7, #19
   1936c:	bhi	196c8 <sf_gen_mtp3field_code+0x3cc>
   19370:	add	r8, r0, #1
   19374:	cmp	r0, #15
   19378:	str	r1, [sp, #8]
   1937c:	str	r8, [r6, #92]	; 0x5c
   19380:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   19384:	mov	r0, #1024	; 0x400
   19388:	lsl	r7, r0, r8
   1938c:	mov	r0, r7
   19390:	bl	f1c <malloc@plt>
   19394:	cmp	r0, #0
   19398:	str	r0, [r4, #12]
   1939c:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   193a0:	mov	r1, #0
   193a4:	mov	r2, r7
   193a8:	add	r5, r4, #8
   193ac:	bl	f88 <memset@plt>
   193b0:	cmp	r7, #20
   193b4:	str	r7, [r5]
   193b8:	bcc	19a38 <sf_gen_mtp3field_code+0x73c>
   193bc:	ldr	r1, [sp, #8]
   193c0:	ldr	r6, [pc, #1768]	; 19ab0 <sf_gen_mtp3field_code+0x7b4>
   193c4:	add	r4, r9, r8, lsl #3
   193c8:	add	r6, pc, r6
   193cc:	b	196d0 <sf_gen_mtp3field_code+0x3d4>
   193d0:	ldr	r4, [pc, #1772]	; 19ac4 <sf_gen_mtp3field_code+0x7c8>
   193d4:	add	r4, pc, r4
   193d8:	ldr	r9, [r4, #84]	; 0x54
   193dc:	cmn	r9, #1
   193e0:	beq	19a60 <sf_gen_mtp3field_code+0x764>
   193e4:	cmp	r1, #16384	; 0x4000
   193e8:	bcs	19a6c <sf_gen_mtp3field_code+0x770>
   193ec:	ldr	r0, [r4, #92]	; 0x5c
   193f0:	ldr	r8, [pc, #1744]	; 19ac8 <sf_gen_mtp3field_code+0x7cc>
   193f4:	str	r1, [sp, #8]
   193f8:	add	r8, pc, r8
   193fc:	mov	r5, r8
   19400:	ldr	r7, [r5, r0, lsl #3]!
   19404:	cmp	r7, #19
   19408:	bhi	195b0 <sf_gen_mtp3field_code+0x2b4>
   1940c:	add	sl, r0, #1
   19410:	cmp	r0, #15
   19414:	str	sl, [r4, #92]	; 0x5c
   19418:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   1941c:	mov	r0, #1024	; 0x400
   19420:	lsl	r7, r0, sl
   19424:	mov	r0, r7
   19428:	bl	f1c <malloc@plt>
   1942c:	cmp	r0, #0
   19430:	str	r0, [r5, #12]
   19434:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   19438:	mov	r1, #0
   1943c:	mov	r2, r7
   19440:	add	r6, r5, #8
   19444:	bl	f88 <memset@plt>
   19448:	cmp	r7, #20
   1944c:	str	r7, [r6]
   19450:	bcc	19a38 <sf_gen_mtp3field_code+0x73c>
   19454:	ldr	r1, [sp, #8]
   19458:	ldr	r3, [pc, #1644]	; 19acc <sf_gen_mtp3field_code+0x7d0>
   1945c:	add	r5, r8, sl, lsl #3
   19460:	add	r3, pc, r3
   19464:	mov	r4, r3
   19468:	b	195b8 <sf_gen_mtp3field_code+0x2bc>
   1946c:	ldr	r4, [pc, #1628]	; 19ad0 <sf_gen_mtp3field_code+0x7d4>
   19470:	add	r4, pc, r4
   19474:	ldr	r9, [r4, #88]	; 0x58
   19478:	cmn	r9, #1
   1947c:	beq	19a78 <sf_gen_mtp3field_code+0x77c>
   19480:	cmp	r1, #16
   19484:	bcs	19a84 <sf_gen_mtp3field_code+0x788>
   19488:	ldr	r0, [r4, #92]	; 0x5c
   1948c:	ldr	r8, [pc, #1600]	; 19ad4 <sf_gen_mtp3field_code+0x7d8>
   19490:	str	r1, [sp, #8]
   19494:	add	r8, pc, r8
   19498:	mov	r5, r8
   1949c:	ldr	r7, [r5, r0, lsl #3]!
   194a0:	cmp	r7, #19
   194a4:	bhi	1963c <sf_gen_mtp3field_code+0x340>
   194a8:	add	sl, r0, #1
   194ac:	cmp	r0, #15
   194b0:	str	sl, [r4, #92]	; 0x5c
   194b4:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   194b8:	mov	r0, #1024	; 0x400
   194bc:	lsl	r7, r0, sl
   194c0:	mov	r0, r7
   194c4:	bl	f1c <malloc@plt>
   194c8:	cmp	r0, #0
   194cc:	str	r0, [r5, #12]
   194d0:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   194d4:	mov	r1, #0
   194d8:	mov	r2, r7
   194dc:	add	r6, r5, #8
   194e0:	bl	f88 <memset@plt>
   194e4:	cmp	r7, #20
   194e8:	str	r7, [r6]
   194ec:	bcc	19a38 <sf_gen_mtp3field_code+0x73c>
   194f0:	ldr	r1, [sp, #8]
   194f4:	ldr	r3, [pc, #1500]	; 19ad8 <sf_gen_mtp3field_code+0x7dc>
   194f8:	add	r5, r8, sl, lsl #3
   194fc:	add	r3, pc, r3
   19500:	mov	r4, r3
   19504:	b	19644 <sf_gen_mtp3field_code+0x348>
   19508:	ldr	ip, [pc, #1444]	; 19ab4 <sf_gen_mtp3field_code+0x7b8>
   1950c:	add	ip, pc, ip
   19510:	ldr	lr, [ip, #80]	; 0x50
   19514:	cmn	lr, #1
   19518:	beq	19a90 <sf_gen_mtp3field_code+0x794>
   1951c:	cmp	r1, #16384	; 0x4000
   19520:	bcs	19a9c <sf_gen_mtp3field_code+0x7a0>
   19524:	ubfx	r6, r1, #10, #4
   19528:	ldr	r0, [ip, #92]	; 0x5c
   1952c:	ldr	r9, [pc, #1412]	; 19ab8 <sf_gen_mtp3field_code+0x7bc>
   19530:	str	r1, [sp, #8]
   19534:	add	r9, pc, r9
   19538:	mov	r5, r9
   1953c:	ldr	r7, [r5, r0, lsl #3]!
   19540:	cmp	r7, #19
   19544:	bhi	19750 <sf_gen_mtp3field_code+0x454>
   19548:	add	sl, r0, #1
   1954c:	cmp	r0, #15
   19550:	str	sl, [ip, #92]	; 0x5c
   19554:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   19558:	mov	r0, #1024	; 0x400
   1955c:	mov	r4, lr
   19560:	lsl	r7, r0, sl
   19564:	mov	r0, r7
   19568:	bl	f1c <malloc@plt>
   1956c:	cmp	r0, #0
   19570:	str	r0, [r5, #12]
   19574:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   19578:	mov	r1, #0
   1957c:	mov	r2, r7
   19580:	add	r8, r5, #8
   19584:	bl	f88 <memset@plt>
   19588:	cmp	r7, #20
   1958c:	str	r7, [r8]
   19590:	bcc	19a38 <sf_gen_mtp3field_code+0x73c>
   19594:	ldr	r1, [sp, #8]
   19598:	ldr	r3, [pc, #1308]	; 19abc <sf_gen_mtp3field_code+0x7c0>
   1959c:	add	r5, r9, sl, lsl #3
   195a0:	mov	lr, r4
   195a4:	add	r3, pc, r3
   195a8:	mov	ip, r3
   195ac:	b	19758 <sf_gen_mtp3field_code+0x45c>
   195b0:	mov	sl, r0
   195b4:	mov	r6, r5
   195b8:	sub	r0, r7, #20
   195bc:	mov	r2, #32
   195c0:	str	r0, [r6]
   195c4:	ldr	r3, [r6, #4]
   195c8:	str	r2, [r3, r0]!
   195cc:	str	r9, [r3, #12]
   195d0:	ldr	r7, [r8, sl, lsl #3]
   195d4:	cmp	r7, #19
   195d8:	bhi	197d8 <sf_gen_mtp3field_code+0x4dc>
   195dc:	add	r9, sl, #1
   195e0:	cmp	sl, #15
   195e4:	str	r3, [sp, #4]
   195e8:	str	r9, [r4, #92]	; 0x5c
   195ec:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   195f0:	mov	r0, #1024	; 0x400
   195f4:	mov	r6, r4
   195f8:	lsl	r7, r0, r9
   195fc:	mov	r0, r7
   19600:	bl	f1c <malloc@plt>
   19604:	cmp	r0, #0
   19608:	str	r0, [r5, #12]
   1960c:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   19610:	mov	r1, #0
   19614:	mov	r2, r7
   19618:	add	r5, r5, #8
   1961c:	bl	f88 <memset@plt>
   19620:	ldr	r1, [sp, #8]
   19624:	ldr	r3, [sp, #4]
   19628:	cmp	r7, #19
   1962c:	mov	r4, r6
   19630:	str	r7, [r5]
   19634:	bhi	197dc <sf_gen_mtp3field_code+0x4e0>
   19638:	b	19a38 <sf_gen_mtp3field_code+0x73c>
   1963c:	mov	sl, r0
   19640:	mov	r6, r5
   19644:	sub	r0, r7, #20
   19648:	mov	r2, #48	; 0x30
   1964c:	str	r0, [r6]
   19650:	ldr	r3, [r6, #4]
   19654:	str	r2, [r3, r0]!
   19658:	str	r9, [r3, #12]
   1965c:	ldr	r7, [r8, sl, lsl #3]
   19660:	cmp	r7, #19
   19664:	bhi	19884 <sf_gen_mtp3field_code+0x588>
   19668:	add	r9, sl, #1
   1966c:	cmp	sl, #15
   19670:	str	r3, [sp, #4]
   19674:	str	r9, [r4, #92]	; 0x5c
   19678:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   1967c:	mov	r0, #1024	; 0x400
   19680:	mov	r6, r4
   19684:	lsl	r7, r0, r9
   19688:	mov	r0, r7
   1968c:	bl	f1c <malloc@plt>
   19690:	cmp	r0, #0
   19694:	str	r0, [r5, #12]
   19698:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   1969c:	mov	r1, #0
   196a0:	mov	r2, r7
   196a4:	add	r5, r5, #8
   196a8:	bl	f88 <memset@plt>
   196ac:	ldr	r1, [sp, #8]
   196b0:	ldr	r3, [sp, #4]
   196b4:	cmp	r7, #19
   196b8:	mov	r4, r6
   196bc:	str	r7, [r5]
   196c0:	bhi	19888 <sf_gen_mtp3field_code+0x58c>
   196c4:	b	19a38 <sf_gen_mtp3field_code+0x73c>
   196c8:	mov	r8, r0
   196cc:	mov	r5, r4
   196d0:	sub	r0, r7, #20
   196d4:	mov	r2, #48	; 0x30
   196d8:	str	r0, [r5]
   196dc:	ldr	r5, [r5, #4]
   196e0:	str	r2, [r5, r0]!
   196e4:	str	sl, [r5, #12]
   196e8:	ldr	r7, [r9, r8, lsl #3]
   196ec:	cmp	r7, #207	; 0xcf
   196f0:	bhi	19908 <sf_gen_mtp3field_code+0x60c>
   196f4:	add	r0, r8, #1
   196f8:	cmp	r8, #15
   196fc:	ldr	r8, [sp, #16]
   19700:	str	r0, [r6, #92]	; 0x5c
   19704:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   19708:	mov	r9, r1
   1970c:	mov	r1, #1024	; 0x400
   19710:	lsl	r7, r1, r0
   19714:	mov	r0, r7
   19718:	bl	f1c <malloc@plt>
   1971c:	ldr	r6, [sp, #12]
   19720:	cmp	r0, #0
   19724:	str	r0, [r4, #12]
   19728:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   1972c:	mov	r1, #0
   19730:	mov	r2, r7
   19734:	add	r4, r4, #8
   19738:	bl	f88 <memset@plt>
   1973c:	cmp	r7, #207	; 0xcf
   19740:	mov	r1, r9
   19744:	str	r7, [r4]
   19748:	bhi	19910 <sf_gen_mtp3field_code+0x614>
   1974c:	b	19a38 <sf_gen_mtp3field_code+0x73c>
   19750:	mov	sl, r0
   19754:	mov	r8, r5
   19758:	sub	r0, r7, #20
   1975c:	mov	r2, #32
   19760:	str	r0, [r8]
   19764:	ldr	r4, [r8, #4]
   19768:	str	r2, [r4, r0]!
   1976c:	str	lr, [r4, #12]
   19770:	ldr	r7, [r9, sl, lsl #3]
   19774:	cmp	r7, #19
   19778:	bhi	19944 <sf_gen_mtp3field_code+0x648>
   1977c:	add	r8, sl, #1
   19780:	cmp	sl, #15
   19784:	str	r8, [ip, #92]	; 0x5c
   19788:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   1978c:	mov	r0, #1024	; 0x400
   19790:	lsl	r7, r0, r8
   19794:	mov	r0, r7
   19798:	bl	f1c <malloc@plt>
   1979c:	cmp	r0, #0
   197a0:	str	r0, [r5, #12]
   197a4:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   197a8:	mov	r1, #0
   197ac:	mov	r2, r7
   197b0:	add	r5, r5, #8
   197b4:	bl	f88 <memset@plt>
   197b8:	str	r7, [r5]
   197bc:	ldr	r1, [sp, #8]
   197c0:	cmp	r7, #19
   197c4:	ldr	r3, [pc, #756]	; 19ac0 <sf_gen_mtp3field_code+0x7c4>
   197c8:	add	r3, pc, r3
   197cc:	mov	ip, r3
   197d0:	bhi	19948 <sf_gen_mtp3field_code+0x64c>
   197d4:	b	19a38 <sf_gen_mtp3field_code+0x73c>
   197d8:	mov	r9, sl
   197dc:	mov	r0, #4128768	; 0x3f0000
   197e0:	mov	r2, #84	; 0x54
   197e4:	and	r0, r0, r1, lsl #8
   197e8:	orr	sl, r0, r1, lsl #24
   197ec:	sub	r1, r7, #20
   197f0:	str	r1, [r5]
   197f4:	ldr	r0, [r5, #4]
   197f8:	str	r2, [r0, r1]!
   197fc:	movw	r1, #0
   19800:	mov	r2, r3
   19804:	movt	r1, #65343	; 0xff3f
   19808:	str	r1, [r0, #12]
   1980c:	mov	r1, r2
   19810:	ldr	r2, [r2, #16]
   19814:	cmp	r2, #0
   19818:	bne	1980c <sf_gen_mtp3field_code+0x510>
   1981c:	str	r0, [r1, #16]
   19820:	ldr	r6, [r8, r9, lsl #3]!
   19824:	cmp	r6, #207	; 0xcf
   19828:	bhi	198cc <sf_gen_mtp3field_code+0x5d0>
   1982c:	add	r0, r9, #1
   19830:	cmp	r9, #15
   19834:	str	r0, [r4, #92]	; 0x5c
   19838:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   1983c:	mov	r1, #1024	; 0x400
   19840:	mov	r7, r3
   19844:	lsl	r6, r1, r0
   19848:	mov	r0, r6
   1984c:	bl	f1c <malloc@plt>
   19850:	ldr	r5, [sp, #16]
   19854:	cmp	r0, #0
   19858:	str	r0, [r8, #12]
   1985c:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   19860:	mov	r1, #0
   19864:	mov	r2, r6
   19868:	add	r8, r8, #8
   1986c:	bl	f88 <memset@plt>
   19870:	cmp	r6, #207	; 0xcf
   19874:	mov	r3, r7
   19878:	str	r6, [r8]
   1987c:	bhi	198d0 <sf_gen_mtp3field_code+0x5d4>
   19880:	b	19a38 <sf_gen_mtp3field_code+0x73c>
   19884:	mov	r9, sl
   19888:	lsl	sl, r1, #4
   1988c:	sub	r1, r7, #20
   19890:	mov	r2, #84	; 0x54
   19894:	str	r1, [r5]
   19898:	ldr	r0, [r5, #4]
   1989c:	str	r2, [r0, r1]!
   198a0:	mov	r1, #240	; 0xf0
   198a4:	mov	r2, r3
   198a8:	str	r1, [r0, #12]
   198ac:	mov	r1, r2
   198b0:	ldr	r2, [r2, #16]
   198b4:	cmp	r2, #0
   198b8:	bne	198ac <sf_gen_mtp3field_code+0x5b0>
   198bc:	str	r0, [r1, #16]
   198c0:	ldr	r6, [r8, r9, lsl #3]!
   198c4:	cmp	r6, #207	; 0xcf
   198c8:	bls	1982c <sf_gen_mtp3field_code+0x530>
   198cc:	ldr	r5, [sp, #16]
   198d0:	sub	r0, r6, #208	; 0xd0
   198d4:	orr	r1, r5, #5
   198d8:	str	r0, [r8]
   198dc:	ldr	r2, [r8, #4]
   198e0:	add	r0, r2, r0
   198e4:	str	r3, [r0, #4]
   198e8:	str	r1, [r0, #8]
   198ec:	str	sl, [r0, #20]
   198f0:	str	r0, [r0, #96]	; 0x60
   198f4:	ldr	r1, [sp, #12]
   198f8:	cmp	r1, #0
   198fc:	beq	19a30 <sf_gen_mtp3field_code+0x734>
   19900:	orr	r1, r5, #16
   19904:	b	19a1c <sf_gen_mtp3field_code+0x720>
   19908:	ldr	r8, [sp, #16]
   1990c:	ldr	r6, [sp, #12]
   19910:	sub	r0, r7, #208	; 0xd0
   19914:	orr	r3, r8, #5
   19918:	cmp	r6, #0
   1991c:	str	r0, [r4]
   19920:	ldr	r2, [r4, #4]
   19924:	add	r0, r2, r0
   19928:	str	r5, [r0, #4]
   1992c:	str	r3, [r0, #8]
   19930:	str	r1, [r0, #20]
   19934:	str	r0, [r0, #96]	; 0x60
   19938:	beq	19a30 <sf_gen_mtp3field_code+0x734>
   1993c:	orr	r1, r8, #16
   19940:	b	19a1c <sf_gen_mtp3field_code+0x720>
   19944:	mov	r8, sl
   19948:	and	r0, r1, #1020	; 0x3fc
   1994c:	and	r1, r1, #3
   19950:	mov	r2, #84	; 0x54
   19954:	orr	r0, r6, r0, lsl #6
   19958:	orr	sl, r0, r1, lsl #22
   1995c:	sub	r1, r7, #20
   19960:	str	r1, [r5]
   19964:	ldr	r0, [r5, #4]
   19968:	str	r2, [r0, r1]!
   1996c:	movw	r1, #65295	; 0xff0f
   19970:	mov	r2, r4
   19974:	movt	r1, #192	; 0xc0
   19978:	str	r1, [r0, #12]
   1997c:	mov	r1, r2
   19980:	ldr	r2, [r2, #16]
   19984:	cmp	r2, #0
   19988:	bne	1997c <sf_gen_mtp3field_code+0x680>
   1998c:	str	r0, [r1, #16]
   19990:	ldr	r6, [r9, r8, lsl #3]!
   19994:	cmp	r6, #207	; 0xcf
   19998:	bhi	199e4 <sf_gen_mtp3field_code+0x6e8>
   1999c:	add	r0, r8, #1
   199a0:	cmp	r8, #15
   199a4:	str	r0, [ip, #92]	; 0x5c
   199a8:	bge	19a38 <sf_gen_mtp3field_code+0x73c>
   199ac:	mov	r1, #1024	; 0x400
   199b0:	lsl	r6, r1, r0
   199b4:	mov	r0, r6
   199b8:	bl	f1c <malloc@plt>
   199bc:	cmp	r0, #0
   199c0:	str	r0, [r9, #12]
   199c4:	beq	19a38 <sf_gen_mtp3field_code+0x73c>
   199c8:	mov	r1, #0
   199cc:	mov	r2, r6
   199d0:	add	r9, r9, #8
   199d4:	bl	f88 <memset@plt>
   199d8:	cmp	r6, #207	; 0xcf
   199dc:	str	r6, [r9]
   199e0:	bls	19a38 <sf_gen_mtp3field_code+0x73c>
   199e4:	sub	r0, r6, #208	; 0xd0
   199e8:	ldr	r3, [sp, #16]
   199ec:	str	r0, [r9]
   199f0:	ldr	r2, [r9, #4]
   199f4:	orr	r1, r3, #5
   199f8:	add	r0, r2, r0
   199fc:	str	r4, [r0, #4]
   19a00:	str	r1, [r0, #8]
   19a04:	ldr	r1, [sp, #12]
   19a08:	str	sl, [r0, #20]
   19a0c:	str	r0, [r0, #96]	; 0x60
   19a10:	cmp	r1, #0
   19a14:	beq	19a30 <sf_gen_mtp3field_code+0x734>
   19a18:	orr	r1, r3, #16
   19a1c:	cmp	r1, #48	; 0x30
   19a20:	ldreq	r1, [r0, #44]	; 0x2c
   19a24:	clzeq	r1, r1
   19a28:	lsreq	r1, r1, #5
   19a2c:	streq	r1, [r0, #44]	; 0x2c
   19a30:	sub	sp, fp, #28
   19a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a38:	ldr	r0, [pc, #156]	; 19adc <sf_gen_mtp3field_code+0x7e0>
   19a3c:	add	r0, pc, r0
   19a40:	bl	2204 <sf_bpf_error>
   19a44:	bl	100c <abort@plt>
   19a48:	ldr	r0, [pc, #144]	; 19ae0 <sf_gen_mtp3field_code+0x7e4>
   19a4c:	add	r0, pc, r0
   19a50:	bl	2204 <sf_bpf_error>
   19a54:	ldr	r0, [pc, #136]	; 19ae4 <sf_gen_mtp3field_code+0x7e8>
   19a58:	add	r0, pc, r0
   19a5c:	bl	2204 <sf_bpf_error>
   19a60:	ldr	r0, [pc, #136]	; 19af0 <sf_gen_mtp3field_code+0x7f4>
   19a64:	add	r0, pc, r0
   19a68:	bl	2204 <sf_bpf_error>
   19a6c:	ldr	r0, [pc, #128]	; 19af4 <sf_gen_mtp3field_code+0x7f8>
   19a70:	add	r0, pc, r0
   19a74:	bl	2204 <sf_bpf_error>
   19a78:	ldr	r0, [pc, #120]	; 19af8 <sf_gen_mtp3field_code+0x7fc>
   19a7c:	add	r0, pc, r0
   19a80:	bl	2204 <sf_bpf_error>
   19a84:	ldr	r0, [pc, #112]	; 19afc <sf_gen_mtp3field_code+0x800>
   19a88:	add	r0, pc, r0
   19a8c:	bl	2204 <sf_bpf_error>
   19a90:	ldr	r0, [pc, #80]	; 19ae8 <sf_gen_mtp3field_code+0x7ec>
   19a94:	add	r0, pc, r0
   19a98:	bl	2204 <sf_bpf_error>
   19a9c:	ldr	r0, [pc, #72]	; 19aec <sf_gen_mtp3field_code+0x7f0>
   19aa0:	add	r0, pc, r0
   19aa4:	bl	2204 <sf_bpf_error>
   19aa8:	.word	0x0002d1a4
   19aac:	.word	0x0002d0c4
   19ab0:	.word	0x0002d118
   19ab4:	.word	0x0002cfd4
   19ab8:	.word	0x0002ceec
   19abc:	.word	0x0002cf3c
   19ac0:	.word	0x0002cd18
   19ac4:	.word	0x0002d10c
   19ac8:	.word	0x0002d028
   19acc:	.word	0x0002d080
   19ad0:	.word	0x0002d070
   19ad4:	.word	0x0002cf8c
   19ad8:	.word	0x0002cfe4
   19adc:	.word	0x0000f958
   19ae0:	.word	0x0000f7ac
   19ae4:	.word	0x0000f7bc
   19ae8:	.word	0x0000f7a6
   19aec:	.word	0x0000f7b6
   19af0:	.word	0x0000f81a
   19af4:	.word	0x0000f82a
   19af8:	.word	0x0000f846
   19afc:	.word	0x0000f856

00019b00 <sf_gen_atmmulti_abbrev>:
   19b00:	push	{r4, r5, fp, lr}
   19b04:	add	fp, sp, #8
   19b08:	sub	sp, sp, #8
   19b0c:	cmp	r0, #69	; 0x45
   19b10:	bgt	19bf4 <sf_gen_atmmulti_abbrev+0xf4>
   19b14:	cmp	r0, #28
   19b18:	bne	19cd4 <sf_gen_atmmulti_abbrev+0x1d4>
   19b1c:	ldr	r0, [pc, #3076]	; 1a728 <sf_gen_atmmulti_abbrev+0xc28>
   19b20:	add	r0, pc, r0
   19b24:	ldrb	r0, [r0, #8]
   19b28:	cmp	r0, #0
   19b2c:	beq	1a6f4 <sf_gen_atmmulti_abbrev+0xbf4>
   19b30:	mov	r0, #52	; 0x34
   19b34:	mov	r1, #3
   19b38:	mov	r2, #16
   19b3c:	mov	r3, #0
   19b40:	bl	17fb0 <sf_gen_atmfield_code>
   19b44:	mov	r5, r0
   19b48:	mov	r0, #52	; 0x34
   19b4c:	mov	r1, #4
   19b50:	mov	r2, #16
   19b54:	mov	r3, #0
   19b58:	bl	17fb0 <sf_gen_atmfield_code>
   19b5c:	mov	r4, r0
   19b60:	ldr	r0, [r5, #44]	; 0x2c
   19b64:	cmp	r5, #0
   19b68:	clz	r0, r0
   19b6c:	lsr	r0, r0, #5
   19b70:	str	r0, [r5, #44]	; 0x2c
   19b74:	beq	19bb0 <sf_gen_atmmulti_abbrev+0xb0>
   19b78:	ldr	r1, [r4, #96]	; 0x60
   19b7c:	mov	r2, r5
   19b80:	b	19b88 <sf_gen_atmmulti_abbrev+0x88>
   19b84:	ldr	r0, [r2, #44]	; 0x2c
   19b88:	cmp	r0, #0
   19b8c:	mov	r0, #84	; 0x54
   19b90:	add	r3, r2, #84	; 0x54
   19b94:	movweq	r0, #60	; 0x3c
   19b98:	addeq	r3, r2, #60	; 0x3c
   19b9c:	ldr	r2, [r2, r0]
   19ba0:	str	r1, [r3]
   19ba4:	cmp	r2, #0
   19ba8:	bne	19b84 <sf_gen_atmmulti_abbrev+0x84>
   19bac:	ldr	r0, [r5, #44]	; 0x2c
   19bb0:	clz	r0, r0
   19bb4:	cmp	r4, #0
   19bb8:	lsr	r0, r0, #5
   19bbc:	str	r0, [r5, #44]	; 0x2c
   19bc0:	str	r4, [sp, #4]
   19bc4:	beq	19e94 <sf_gen_atmmulti_abbrev+0x394>
   19bc8:	mov	r1, r4
   19bcc:	ldr	r2, [r1, #44]	; 0x2c
   19bd0:	add	r0, r1, #84	; 0x54
   19bd4:	cmp	r2, #0
   19bd8:	mov	r2, #84	; 0x54
   19bdc:	movweq	r2, #60	; 0x3c
   19be0:	addeq	r0, r1, #60	; 0x3c
   19be4:	ldr	r1, [r1, r2]
   19be8:	cmp	r1, #0
   19bec:	bne	19bcc <sf_gen_atmmulti_abbrev+0xcc>
   19bf0:	b	19e98 <sf_gen_atmmulti_abbrev+0x398>
   19bf4:	cmp	r0, #70	; 0x46
   19bf8:	bne	19db4 <sf_gen_atmmulti_abbrev+0x2b4>
   19bfc:	ldr	r0, [pc, #2856]	; 1a72c <sf_gen_atmmulti_abbrev+0xc2c>
   19c00:	add	r0, pc, r0
   19c04:	ldrb	r0, [r0, #8]
   19c08:	cmp	r0, #0
   19c0c:	beq	1a700 <sf_gen_atmmulti_abbrev+0xc00>
   19c10:	mov	r0, #54	; 0x36
   19c14:	mov	r1, #5
   19c18:	mov	r2, #16
   19c1c:	mov	r3, #0
   19c20:	bl	17fb0 <sf_gen_atmfield_code>
   19c24:	mov	r5, r0
   19c28:	mov	r0, #54	; 0x36
   19c2c:	mov	r1, #2
   19c30:	mov	r2, #16
   19c34:	mov	r3, #0
   19c38:	bl	17fb0 <sf_gen_atmfield_code>
   19c3c:	mov	r4, r0
   19c40:	ldr	r0, [r5, #44]	; 0x2c
   19c44:	cmp	r5, #0
   19c48:	clz	r0, r0
   19c4c:	lsr	r0, r0, #5
   19c50:	str	r0, [r5, #44]	; 0x2c
   19c54:	beq	19c90 <sf_gen_atmmulti_abbrev+0x190>
   19c58:	ldr	r1, [r4, #96]	; 0x60
   19c5c:	mov	r2, r5
   19c60:	b	19c68 <sf_gen_atmmulti_abbrev+0x168>
   19c64:	ldr	r0, [r2, #44]	; 0x2c
   19c68:	cmp	r0, #0
   19c6c:	mov	r0, #84	; 0x54
   19c70:	add	r3, r2, #84	; 0x54
   19c74:	movweq	r0, #60	; 0x3c
   19c78:	addeq	r3, r2, #60	; 0x3c
   19c7c:	ldr	r2, [r2, r0]
   19c80:	str	r1, [r3]
   19c84:	cmp	r2, #0
   19c88:	bne	19c64 <sf_gen_atmmulti_abbrev+0x164>
   19c8c:	ldr	r0, [r5, #44]	; 0x2c
   19c90:	clz	r0, r0
   19c94:	cmp	r4, #0
   19c98:	lsr	r0, r0, #5
   19c9c:	str	r0, [r5, #44]	; 0x2c
   19ca0:	str	r4, [sp, #4]
   19ca4:	beq	19f64 <sf_gen_atmmulti_abbrev+0x464>
   19ca8:	mov	r1, r4
   19cac:	ldr	r2, [r1, #44]	; 0x2c
   19cb0:	add	r0, r1, #84	; 0x54
   19cb4:	cmp	r2, #0
   19cb8:	mov	r2, #84	; 0x54
   19cbc:	movweq	r2, #60	; 0x3c
   19cc0:	addeq	r0, r1, #60	; 0x3c
   19cc4:	ldr	r1, [r1, r2]
   19cc8:	cmp	r1, #0
   19ccc:	bne	19cac <sf_gen_atmmulti_abbrev+0x1ac>
   19cd0:	b	19f68 <sf_gen_atmmulti_abbrev+0x468>
   19cd4:	cmp	r0, #29
   19cd8:	bne	1a6f0 <sf_gen_atmmulti_abbrev+0xbf0>
   19cdc:	ldr	r0, [pc, #2624]	; 1a724 <sf_gen_atmmulti_abbrev+0xc24>
   19ce0:	add	r0, pc, r0
   19ce4:	ldrb	r0, [r0, #8]
   19ce8:	cmp	r0, #0
   19cec:	beq	1a70c <sf_gen_atmmulti_abbrev+0xc0c>
   19cf0:	mov	r0, #52	; 0x34
   19cf4:	mov	r1, #3
   19cf8:	mov	r2, #16
   19cfc:	mov	r3, #0
   19d00:	bl	17fb0 <sf_gen_atmfield_code>
   19d04:	mov	r5, r0
   19d08:	mov	r0, #52	; 0x34
   19d0c:	mov	r1, #4
   19d10:	mov	r2, #16
   19d14:	mov	r3, #0
   19d18:	bl	17fb0 <sf_gen_atmfield_code>
   19d1c:	mov	r4, r0
   19d20:	ldr	r0, [r5, #44]	; 0x2c
   19d24:	cmp	r5, #0
   19d28:	clz	r0, r0
   19d2c:	lsr	r0, r0, #5
   19d30:	str	r0, [r5, #44]	; 0x2c
   19d34:	beq	19d70 <sf_gen_atmmulti_abbrev+0x270>
   19d38:	ldr	r1, [r4, #96]	; 0x60
   19d3c:	mov	r2, r5
   19d40:	b	19d48 <sf_gen_atmmulti_abbrev+0x248>
   19d44:	ldr	r0, [r2, #44]	; 0x2c
   19d48:	cmp	r0, #0
   19d4c:	mov	r0, #84	; 0x54
   19d50:	add	r3, r2, #84	; 0x54
   19d54:	movweq	r0, #60	; 0x3c
   19d58:	addeq	r3, r2, #60	; 0x3c
   19d5c:	ldr	r2, [r2, r0]
   19d60:	str	r1, [r3]
   19d64:	cmp	r2, #0
   19d68:	bne	19d44 <sf_gen_atmmulti_abbrev+0x244>
   19d6c:	ldr	r0, [r5, #44]	; 0x2c
   19d70:	clz	r0, r0
   19d74:	cmp	r4, #0
   19d78:	lsr	r0, r0, #5
   19d7c:	str	r0, [r5, #44]	; 0x2c
   19d80:	str	r4, [sp, #4]
   19d84:	beq	1a308 <sf_gen_atmmulti_abbrev+0x808>
   19d88:	mov	r1, r4
   19d8c:	ldr	r2, [r1, #44]	; 0x2c
   19d90:	add	r0, r1, #84	; 0x54
   19d94:	cmp	r2, #0
   19d98:	mov	r2, #84	; 0x54
   19d9c:	movweq	r2, #60	; 0x3c
   19da0:	addeq	r0, r1, #60	; 0x3c
   19da4:	ldr	r1, [r1, r2]
   19da8:	cmp	r1, #0
   19dac:	bne	19d8c <sf_gen_atmmulti_abbrev+0x28c>
   19db0:	b	1a30c <sf_gen_atmmulti_abbrev+0x80c>
   19db4:	cmp	r0, #71	; 0x47
   19db8:	bne	1a6f0 <sf_gen_atmmulti_abbrev+0xbf0>
   19dbc:	ldr	r0, [pc, #2412]	; 1a730 <sf_gen_atmmulti_abbrev+0xc30>
   19dc0:	add	r0, pc, r0
   19dc4:	ldrb	r0, [r0, #8]
   19dc8:	cmp	r0, #0
   19dcc:	beq	1a718 <sf_gen_atmmulti_abbrev+0xc18>
   19dd0:	mov	r0, #54	; 0x36
   19dd4:	mov	r1, #5
   19dd8:	mov	r2, #16
   19ddc:	mov	r3, #0
   19de0:	bl	17fb0 <sf_gen_atmfield_code>
   19de4:	mov	r5, r0
   19de8:	mov	r0, #54	; 0x36
   19dec:	mov	r1, #2
   19df0:	mov	r2, #16
   19df4:	mov	r3, #0
   19df8:	bl	17fb0 <sf_gen_atmfield_code>
   19dfc:	mov	r4, r0
   19e00:	ldr	r0, [r5, #44]	; 0x2c
   19e04:	cmp	r5, #0
   19e08:	clz	r0, r0
   19e0c:	lsr	r0, r0, #5
   19e10:	str	r0, [r5, #44]	; 0x2c
   19e14:	beq	19e50 <sf_gen_atmmulti_abbrev+0x350>
   19e18:	ldr	r1, [r4, #96]	; 0x60
   19e1c:	mov	r2, r5
   19e20:	b	19e28 <sf_gen_atmmulti_abbrev+0x328>
   19e24:	ldr	r0, [r2, #44]	; 0x2c
   19e28:	cmp	r0, #0
   19e2c:	mov	r0, #84	; 0x54
   19e30:	add	r3, r2, #84	; 0x54
   19e34:	movweq	r0, #60	; 0x3c
   19e38:	addeq	r3, r2, #60	; 0x3c
   19e3c:	ldr	r2, [r2, r0]
   19e40:	str	r1, [r3]
   19e44:	cmp	r2, #0
   19e48:	bne	19e24 <sf_gen_atmmulti_abbrev+0x324>
   19e4c:	ldr	r0, [r5, #44]	; 0x2c
   19e50:	clz	r0, r0
   19e54:	cmp	r4, #0
   19e58:	lsr	r0, r0, #5
   19e5c:	str	r0, [r5, #44]	; 0x2c
   19e60:	str	r4, [sp, #4]
   19e64:	beq	1a3d8 <sf_gen_atmmulti_abbrev+0x8d8>
   19e68:	mov	r1, r4
   19e6c:	ldr	r2, [r1, #44]	; 0x2c
   19e70:	add	r0, r1, #84	; 0x54
   19e74:	cmp	r2, #0
   19e78:	mov	r2, #84	; 0x54
   19e7c:	movweq	r2, #60	; 0x3c
   19e80:	addeq	r0, r1, #60	; 0x3c
   19e84:	ldr	r1, [r1, r2]
   19e88:	cmp	r1, #0
   19e8c:	bne	19e6c <sf_gen_atmmulti_abbrev+0x36c>
   19e90:	b	1a3dc <sf_gen_atmmulti_abbrev+0x8dc>
   19e94:	add	r0, sp, #4
   19e98:	str	r5, [r0]
   19e9c:	mov	r1, #0
   19ea0:	mov	r2, #16
   19ea4:	mov	r3, #0
   19ea8:	ldr	r0, [r5, #96]	; 0x60
   19eac:	str	r0, [r4, #96]	; 0x60
   19eb0:	mov	r0, #51	; 0x33
   19eb4:	bl	17fb0 <sf_gen_atmfield_code>
   19eb8:	cmp	r0, #0
   19ebc:	beq	19ef0 <sf_gen_atmmulti_abbrev+0x3f0>
   19ec0:	ldr	r1, [r4, #96]	; 0x60
   19ec4:	mov	r2, r0
   19ec8:	ldr	r3, [r2, #44]	; 0x2c
   19ecc:	add	r5, r2, #84	; 0x54
   19ed0:	cmp	r3, #0
   19ed4:	mov	r3, #84	; 0x54
   19ed8:	movweq	r3, #60	; 0x3c
   19edc:	addeq	r5, r2, #60	; 0x3c
   19ee0:	ldr	r2, [r2, r3]
   19ee4:	str	r1, [r5]
   19ee8:	cmp	r2, #0
   19eec:	bne	19ec8 <sf_gen_atmmulti_abbrev+0x3c8>
   19ef0:	ldr	r1, [r0, #44]	; 0x2c
   19ef4:	cmp	r4, #0
   19ef8:	clz	r1, r1
   19efc:	lsr	r1, r1, #5
   19f00:	str	r1, [r0, #44]	; 0x2c
   19f04:	ldr	r2, [r4, #44]	; 0x2c
   19f08:	clz	r1, r2
   19f0c:	lsr	r1, r1, #5
   19f10:	str	r1, [r4, #44]	; 0x2c
   19f14:	str	r4, [sp, #4]
   19f18:	beq	1a6c4 <sf_gen_atmmulti_abbrev+0xbc4>
   19f1c:	cmp	r2, #0
   19f20:	mov	r2, #60	; 0x3c
   19f24:	add	r1, r4, #60	; 0x3c
   19f28:	movweq	r2, #84	; 0x54
   19f2c:	addeq	r1, r4, #84	; 0x54
   19f30:	ldr	r2, [r4, r2]
   19f34:	cmp	r2, #0
   19f38:	beq	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   19f3c:	ldr	r3, [r2, #44]	; 0x2c
   19f40:	add	r1, r2, #84	; 0x54
   19f44:	cmp	r3, #0
   19f48:	mov	r3, #84	; 0x54
   19f4c:	movweq	r3, #60	; 0x3c
   19f50:	addeq	r1, r2, #60	; 0x3c
   19f54:	ldr	r2, [r2, r3]
   19f58:	cmp	r2, #0
   19f5c:	bne	19f3c <sf_gen_atmmulti_abbrev+0x43c>
   19f60:	b	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   19f64:	add	r0, sp, #4
   19f68:	str	r5, [r0]
   19f6c:	mov	r1, #7
   19f70:	mov	r2, #16
   19f74:	mov	r3, #0
   19f78:	ldr	r0, [r5, #96]	; 0x60
   19f7c:	str	r0, [r4, #96]	; 0x60
   19f80:	mov	r0, #54	; 0x36
   19f84:	bl	17fb0 <sf_gen_atmfield_code>
   19f88:	ldr	r1, [r0, #44]	; 0x2c
   19f8c:	cmp	r0, #0
   19f90:	clz	r1, r1
   19f94:	lsr	r1, r1, #5
   19f98:	str	r1, [r0, #44]	; 0x2c
   19f9c:	beq	19fd8 <sf_gen_atmmulti_abbrev+0x4d8>
   19fa0:	ldr	r2, [r4, #96]	; 0x60
   19fa4:	mov	r3, r0
   19fa8:	b	19fb0 <sf_gen_atmmulti_abbrev+0x4b0>
   19fac:	ldr	r1, [r3, #44]	; 0x2c
   19fb0:	cmp	r1, #0
   19fb4:	mov	r1, #84	; 0x54
   19fb8:	add	r5, r3, #84	; 0x54
   19fbc:	movweq	r1, #60	; 0x3c
   19fc0:	addeq	r5, r3, #60	; 0x3c
   19fc4:	ldr	r3, [r3, r1]
   19fc8:	str	r2, [r5]
   19fcc:	cmp	r3, #0
   19fd0:	bne	19fac <sf_gen_atmmulti_abbrev+0x4ac>
   19fd4:	ldr	r1, [r0, #44]	; 0x2c
   19fd8:	clz	r1, r1
   19fdc:	cmp	r4, #0
   19fe0:	lsr	r1, r1, #5
   19fe4:	str	r1, [r0, #44]	; 0x2c
   19fe8:	str	r4, [sp, #4]
   19fec:	beq	1a01c <sf_gen_atmmulti_abbrev+0x51c>
   19ff0:	mov	r2, r4
   19ff4:	ldr	r3, [r2, #44]	; 0x2c
   19ff8:	add	r1, r2, #84	; 0x54
   19ffc:	cmp	r3, #0
   1a000:	mov	r3, #84	; 0x54
   1a004:	movweq	r3, #60	; 0x3c
   1a008:	addeq	r1, r2, #60	; 0x3c
   1a00c:	ldr	r2, [r2, r3]
   1a010:	cmp	r2, #0
   1a014:	bne	19ff4 <sf_gen_atmmulti_abbrev+0x4f4>
   1a018:	b	1a020 <sf_gen_atmmulti_abbrev+0x520>
   1a01c:	add	r1, sp, #4
   1a020:	str	r0, [r1]
   1a024:	mov	r1, #15
   1a028:	mov	r2, #16
   1a02c:	mov	r3, #0
   1a030:	ldr	r0, [r0, #96]	; 0x60
   1a034:	str	r0, [r4, #96]	; 0x60
   1a038:	mov	r0, #54	; 0x36
   1a03c:	bl	17fb0 <sf_gen_atmfield_code>
   1a040:	ldr	r1, [r0, #44]	; 0x2c
   1a044:	cmp	r0, #0
   1a048:	clz	r1, r1
   1a04c:	lsr	r1, r1, #5
   1a050:	str	r1, [r0, #44]	; 0x2c
   1a054:	beq	1a090 <sf_gen_atmmulti_abbrev+0x590>
   1a058:	ldr	r2, [r4, #96]	; 0x60
   1a05c:	mov	r3, r0
   1a060:	b	1a068 <sf_gen_atmmulti_abbrev+0x568>
   1a064:	ldr	r1, [r3, #44]	; 0x2c
   1a068:	cmp	r1, #0
   1a06c:	mov	r1, #84	; 0x54
   1a070:	add	r5, r3, #84	; 0x54
   1a074:	movweq	r1, #60	; 0x3c
   1a078:	addeq	r5, r3, #60	; 0x3c
   1a07c:	ldr	r3, [r3, r1]
   1a080:	str	r2, [r5]
   1a084:	cmp	r3, #0
   1a088:	bne	1a064 <sf_gen_atmmulti_abbrev+0x564>
   1a08c:	ldr	r1, [r0, #44]	; 0x2c
   1a090:	clz	r1, r1
   1a094:	cmp	r4, #0
   1a098:	lsr	r1, r1, #5
   1a09c:	str	r1, [r0, #44]	; 0x2c
   1a0a0:	str	r4, [sp, #4]
   1a0a4:	beq	1a0d4 <sf_gen_atmmulti_abbrev+0x5d4>
   1a0a8:	mov	r2, r4
   1a0ac:	ldr	r3, [r2, #44]	; 0x2c
   1a0b0:	add	r1, r2, #84	; 0x54
   1a0b4:	cmp	r3, #0
   1a0b8:	mov	r3, #84	; 0x54
   1a0bc:	movweq	r3, #60	; 0x3c
   1a0c0:	addeq	r1, r2, #60	; 0x3c
   1a0c4:	ldr	r2, [r2, r3]
   1a0c8:	cmp	r2, #0
   1a0cc:	bne	1a0ac <sf_gen_atmmulti_abbrev+0x5ac>
   1a0d0:	b	1a0d8 <sf_gen_atmmulti_abbrev+0x5d8>
   1a0d4:	add	r1, sp, #4
   1a0d8:	str	r0, [r1]
   1a0dc:	mov	r1, #77	; 0x4d
   1a0e0:	mov	r2, #16
   1a0e4:	mov	r3, #0
   1a0e8:	ldr	r0, [r0, #96]	; 0x60
   1a0ec:	str	r0, [r4, #96]	; 0x60
   1a0f0:	mov	r0, #54	; 0x36
   1a0f4:	bl	17fb0 <sf_gen_atmfield_code>
   1a0f8:	ldr	r1, [r0, #44]	; 0x2c
   1a0fc:	cmp	r0, #0
   1a100:	clz	r1, r1
   1a104:	lsr	r1, r1, #5
   1a108:	str	r1, [r0, #44]	; 0x2c
   1a10c:	beq	1a148 <sf_gen_atmmulti_abbrev+0x648>
   1a110:	ldr	r2, [r4, #96]	; 0x60
   1a114:	mov	r3, r0
   1a118:	b	1a120 <sf_gen_atmmulti_abbrev+0x620>
   1a11c:	ldr	r1, [r3, #44]	; 0x2c
   1a120:	cmp	r1, #0
   1a124:	mov	r1, #84	; 0x54
   1a128:	add	r5, r3, #84	; 0x54
   1a12c:	movweq	r1, #60	; 0x3c
   1a130:	addeq	r5, r3, #60	; 0x3c
   1a134:	ldr	r3, [r3, r1]
   1a138:	str	r2, [r5]
   1a13c:	cmp	r3, #0
   1a140:	bne	1a11c <sf_gen_atmmulti_abbrev+0x61c>
   1a144:	ldr	r1, [r0, #44]	; 0x2c
   1a148:	clz	r1, r1
   1a14c:	cmp	r4, #0
   1a150:	lsr	r1, r1, #5
   1a154:	str	r1, [r0, #44]	; 0x2c
   1a158:	str	r4, [sp, #4]
   1a15c:	beq	1a18c <sf_gen_atmmulti_abbrev+0x68c>
   1a160:	mov	r2, r4
   1a164:	ldr	r3, [r2, #44]	; 0x2c
   1a168:	add	r1, r2, #84	; 0x54
   1a16c:	cmp	r3, #0
   1a170:	mov	r3, #84	; 0x54
   1a174:	movweq	r3, #60	; 0x3c
   1a178:	addeq	r1, r2, #60	; 0x3c
   1a17c:	ldr	r2, [r2, r3]
   1a180:	cmp	r2, #0
   1a184:	bne	1a164 <sf_gen_atmmulti_abbrev+0x664>
   1a188:	b	1a190 <sf_gen_atmmulti_abbrev+0x690>
   1a18c:	add	r1, sp, #4
   1a190:	str	r0, [r1]
   1a194:	mov	r1, #90	; 0x5a
   1a198:	mov	r2, #16
   1a19c:	mov	r3, #0
   1a1a0:	ldr	r0, [r0, #96]	; 0x60
   1a1a4:	str	r0, [r4, #96]	; 0x60
   1a1a8:	mov	r0, #54	; 0x36
   1a1ac:	bl	17fb0 <sf_gen_atmfield_code>
   1a1b0:	ldr	r1, [r0, #44]	; 0x2c
   1a1b4:	cmp	r0, #0
   1a1b8:	clz	r1, r1
   1a1bc:	lsr	r1, r1, #5
   1a1c0:	str	r1, [r0, #44]	; 0x2c
   1a1c4:	beq	1a200 <sf_gen_atmmulti_abbrev+0x700>
   1a1c8:	ldr	r2, [r4, #96]	; 0x60
   1a1cc:	mov	r3, r0
   1a1d0:	b	1a1d8 <sf_gen_atmmulti_abbrev+0x6d8>
   1a1d4:	ldr	r1, [r3, #44]	; 0x2c
   1a1d8:	cmp	r1, #0
   1a1dc:	mov	r1, #84	; 0x54
   1a1e0:	add	r5, r3, #84	; 0x54
   1a1e4:	movweq	r1, #60	; 0x3c
   1a1e8:	addeq	r5, r3, #60	; 0x3c
   1a1ec:	ldr	r3, [r3, r1]
   1a1f0:	str	r2, [r5]
   1a1f4:	cmp	r3, #0
   1a1f8:	bne	1a1d4 <sf_gen_atmmulti_abbrev+0x6d4>
   1a1fc:	ldr	r1, [r0, #44]	; 0x2c
   1a200:	clz	r1, r1
   1a204:	cmp	r4, #0
   1a208:	lsr	r1, r1, #5
   1a20c:	str	r1, [r0, #44]	; 0x2c
   1a210:	str	r4, [sp, #4]
   1a214:	beq	1a244 <sf_gen_atmmulti_abbrev+0x744>
   1a218:	mov	r2, r4
   1a21c:	ldr	r3, [r2, #44]	; 0x2c
   1a220:	add	r1, r2, #84	; 0x54
   1a224:	cmp	r3, #0
   1a228:	mov	r3, #84	; 0x54
   1a22c:	movweq	r3, #60	; 0x3c
   1a230:	addeq	r1, r2, #60	; 0x3c
   1a234:	ldr	r2, [r2, r3]
   1a238:	cmp	r2, #0
   1a23c:	bne	1a21c <sf_gen_atmmulti_abbrev+0x71c>
   1a240:	b	1a248 <sf_gen_atmmulti_abbrev+0x748>
   1a244:	add	r1, sp, #4
   1a248:	str	r0, [r1]
   1a24c:	ldr	r0, [r0, #96]	; 0x60
   1a250:	str	r0, [r4, #96]	; 0x60
   1a254:	mov	r0, #26
   1a258:	bl	182fc <sf_gen_atmtype_abbrev>
   1a25c:	cmp	r0, #0
   1a260:	beq	1a294 <sf_gen_atmmulti_abbrev+0x794>
   1a264:	ldr	r1, [r4, #96]	; 0x60
   1a268:	mov	r2, r0
   1a26c:	ldr	r3, [r2, #44]	; 0x2c
   1a270:	add	r5, r2, #84	; 0x54
   1a274:	cmp	r3, #0
   1a278:	mov	r3, #84	; 0x54
   1a27c:	movweq	r3, #60	; 0x3c
   1a280:	addeq	r5, r2, #60	; 0x3c
   1a284:	ldr	r2, [r2, r3]
   1a288:	str	r1, [r5]
   1a28c:	cmp	r2, #0
   1a290:	bne	1a26c <sf_gen_atmmulti_abbrev+0x76c>
   1a294:	ldr	r1, [r0, #44]	; 0x2c
   1a298:	cmp	r4, #0
   1a29c:	clz	r1, r1
   1a2a0:	lsr	r1, r1, #5
   1a2a4:	str	r1, [r0, #44]	; 0x2c
   1a2a8:	ldr	r2, [r4, #44]	; 0x2c
   1a2ac:	clz	r1, r2
   1a2b0:	lsr	r1, r1, #5
   1a2b4:	str	r1, [r4, #44]	; 0x2c
   1a2b8:	str	r4, [sp, #4]
   1a2bc:	beq	1a6c4 <sf_gen_atmmulti_abbrev+0xbc4>
   1a2c0:	cmp	r2, #0
   1a2c4:	mov	r2, #60	; 0x3c
   1a2c8:	add	r1, r4, #60	; 0x3c
   1a2cc:	movweq	r2, #84	; 0x54
   1a2d0:	addeq	r1, r4, #84	; 0x54
   1a2d4:	ldr	r2, [r4, r2]
   1a2d8:	cmp	r2, #0
   1a2dc:	beq	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   1a2e0:	ldr	r3, [r2, #44]	; 0x2c
   1a2e4:	add	r1, r2, #84	; 0x54
   1a2e8:	cmp	r3, #0
   1a2ec:	mov	r3, #84	; 0x54
   1a2f0:	movweq	r3, #60	; 0x3c
   1a2f4:	addeq	r1, r2, #60	; 0x3c
   1a2f8:	ldr	r2, [r2, r3]
   1a2fc:	cmp	r2, #0
   1a300:	bne	1a2e0 <sf_gen_atmmulti_abbrev+0x7e0>
   1a304:	b	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   1a308:	add	r0, sp, #4
   1a30c:	str	r5, [r0]
   1a310:	mov	r1, #0
   1a314:	mov	r2, #16
   1a318:	mov	r3, #0
   1a31c:	ldr	r0, [r5, #96]	; 0x60
   1a320:	str	r0, [r4, #96]	; 0x60
   1a324:	mov	r0, #51	; 0x33
   1a328:	bl	17fb0 <sf_gen_atmfield_code>
   1a32c:	cmp	r0, #0
   1a330:	beq	1a364 <sf_gen_atmmulti_abbrev+0x864>
   1a334:	ldr	r1, [r4, #96]	; 0x60
   1a338:	mov	r2, r0
   1a33c:	ldr	r3, [r2, #44]	; 0x2c
   1a340:	add	r5, r2, #84	; 0x54
   1a344:	cmp	r3, #0
   1a348:	mov	r3, #84	; 0x54
   1a34c:	movweq	r3, #60	; 0x3c
   1a350:	addeq	r5, r2, #60	; 0x3c
   1a354:	ldr	r2, [r2, r3]
   1a358:	str	r1, [r5]
   1a35c:	cmp	r2, #0
   1a360:	bne	1a33c <sf_gen_atmmulti_abbrev+0x83c>
   1a364:	ldr	r1, [r0, #44]	; 0x2c
   1a368:	cmp	r4, #0
   1a36c:	clz	r1, r1
   1a370:	lsr	r1, r1, #5
   1a374:	str	r1, [r0, #44]	; 0x2c
   1a378:	ldr	r2, [r4, #44]	; 0x2c
   1a37c:	clz	r1, r2
   1a380:	lsr	r1, r1, #5
   1a384:	str	r1, [r4, #44]	; 0x2c
   1a388:	str	r4, [sp, #4]
   1a38c:	beq	1a6c4 <sf_gen_atmmulti_abbrev+0xbc4>
   1a390:	cmp	r2, #0
   1a394:	mov	r2, #60	; 0x3c
   1a398:	add	r1, r4, #60	; 0x3c
   1a39c:	movweq	r2, #84	; 0x54
   1a3a0:	addeq	r1, r4, #84	; 0x54
   1a3a4:	ldr	r2, [r4, r2]
   1a3a8:	cmp	r2, #0
   1a3ac:	beq	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   1a3b0:	ldr	r3, [r2, #44]	; 0x2c
   1a3b4:	add	r1, r2, #84	; 0x54
   1a3b8:	cmp	r3, #0
   1a3bc:	mov	r3, #84	; 0x54
   1a3c0:	movweq	r3, #60	; 0x3c
   1a3c4:	addeq	r1, r2, #60	; 0x3c
   1a3c8:	ldr	r2, [r2, r3]
   1a3cc:	cmp	r2, #0
   1a3d0:	bne	1a3b0 <sf_gen_atmmulti_abbrev+0x8b0>
   1a3d4:	b	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   1a3d8:	add	r0, sp, #4
   1a3dc:	str	r5, [r0]
   1a3e0:	mov	r1, #7
   1a3e4:	mov	r2, #16
   1a3e8:	mov	r3, #0
   1a3ec:	ldr	r0, [r5, #96]	; 0x60
   1a3f0:	str	r0, [r4, #96]	; 0x60
   1a3f4:	mov	r0, #54	; 0x36
   1a3f8:	bl	17fb0 <sf_gen_atmfield_code>
   1a3fc:	ldr	r1, [r0, #44]	; 0x2c
   1a400:	cmp	r0, #0
   1a404:	clz	r1, r1
   1a408:	lsr	r1, r1, #5
   1a40c:	str	r1, [r0, #44]	; 0x2c
   1a410:	beq	1a44c <sf_gen_atmmulti_abbrev+0x94c>
   1a414:	ldr	r2, [r4, #96]	; 0x60
   1a418:	mov	r3, r0
   1a41c:	b	1a424 <sf_gen_atmmulti_abbrev+0x924>
   1a420:	ldr	r1, [r3, #44]	; 0x2c
   1a424:	cmp	r1, #0
   1a428:	mov	r1, #84	; 0x54
   1a42c:	add	r5, r3, #84	; 0x54
   1a430:	movweq	r1, #60	; 0x3c
   1a434:	addeq	r5, r3, #60	; 0x3c
   1a438:	ldr	r3, [r3, r1]
   1a43c:	str	r2, [r5]
   1a440:	cmp	r3, #0
   1a444:	bne	1a420 <sf_gen_atmmulti_abbrev+0x920>
   1a448:	ldr	r1, [r0, #44]	; 0x2c
   1a44c:	clz	r1, r1
   1a450:	cmp	r4, #0
   1a454:	lsr	r1, r1, #5
   1a458:	str	r1, [r0, #44]	; 0x2c
   1a45c:	str	r4, [sp, #4]
   1a460:	beq	1a490 <sf_gen_atmmulti_abbrev+0x990>
   1a464:	mov	r2, r4
   1a468:	ldr	r3, [r2, #44]	; 0x2c
   1a46c:	add	r1, r2, #84	; 0x54
   1a470:	cmp	r3, #0
   1a474:	mov	r3, #84	; 0x54
   1a478:	movweq	r3, #60	; 0x3c
   1a47c:	addeq	r1, r2, #60	; 0x3c
   1a480:	ldr	r2, [r2, r3]
   1a484:	cmp	r2, #0
   1a488:	bne	1a468 <sf_gen_atmmulti_abbrev+0x968>
   1a48c:	b	1a494 <sf_gen_atmmulti_abbrev+0x994>
   1a490:	add	r1, sp, #4
   1a494:	str	r0, [r1]
   1a498:	mov	r1, #77	; 0x4d
   1a49c:	mov	r2, #16
   1a4a0:	mov	r3, #0
   1a4a4:	ldr	r0, [r0, #96]	; 0x60
   1a4a8:	str	r0, [r4, #96]	; 0x60
   1a4ac:	mov	r0, #54	; 0x36
   1a4b0:	bl	17fb0 <sf_gen_atmfield_code>
   1a4b4:	ldr	r1, [r0, #44]	; 0x2c
   1a4b8:	cmp	r0, #0
   1a4bc:	clz	r1, r1
   1a4c0:	lsr	r1, r1, #5
   1a4c4:	str	r1, [r0, #44]	; 0x2c
   1a4c8:	beq	1a504 <sf_gen_atmmulti_abbrev+0xa04>
   1a4cc:	ldr	r2, [r4, #96]	; 0x60
   1a4d0:	mov	r3, r0
   1a4d4:	b	1a4dc <sf_gen_atmmulti_abbrev+0x9dc>
   1a4d8:	ldr	r1, [r3, #44]	; 0x2c
   1a4dc:	cmp	r1, #0
   1a4e0:	mov	r1, #84	; 0x54
   1a4e4:	add	r5, r3, #84	; 0x54
   1a4e8:	movweq	r1, #60	; 0x3c
   1a4ec:	addeq	r5, r3, #60	; 0x3c
   1a4f0:	ldr	r3, [r3, r1]
   1a4f4:	str	r2, [r5]
   1a4f8:	cmp	r3, #0
   1a4fc:	bne	1a4d8 <sf_gen_atmmulti_abbrev+0x9d8>
   1a500:	ldr	r1, [r0, #44]	; 0x2c
   1a504:	clz	r1, r1
   1a508:	cmp	r4, #0
   1a50c:	lsr	r1, r1, #5
   1a510:	str	r1, [r0, #44]	; 0x2c
   1a514:	str	r4, [sp, #4]
   1a518:	beq	1a548 <sf_gen_atmmulti_abbrev+0xa48>
   1a51c:	mov	r2, r4
   1a520:	ldr	r3, [r2, #44]	; 0x2c
   1a524:	add	r1, r2, #84	; 0x54
   1a528:	cmp	r3, #0
   1a52c:	mov	r3, #84	; 0x54
   1a530:	movweq	r3, #60	; 0x3c
   1a534:	addeq	r1, r2, #60	; 0x3c
   1a538:	ldr	r2, [r2, r3]
   1a53c:	cmp	r2, #0
   1a540:	bne	1a520 <sf_gen_atmmulti_abbrev+0xa20>
   1a544:	b	1a54c <sf_gen_atmmulti_abbrev+0xa4c>
   1a548:	add	r1, sp, #4
   1a54c:	str	r0, [r1]
   1a550:	mov	r1, #90	; 0x5a
   1a554:	mov	r2, #16
   1a558:	mov	r3, #0
   1a55c:	ldr	r0, [r0, #96]	; 0x60
   1a560:	str	r0, [r4, #96]	; 0x60
   1a564:	mov	r0, #54	; 0x36
   1a568:	bl	17fb0 <sf_gen_atmfield_code>
   1a56c:	ldr	r1, [r0, #44]	; 0x2c
   1a570:	cmp	r0, #0
   1a574:	clz	r1, r1
   1a578:	lsr	r1, r1, #5
   1a57c:	str	r1, [r0, #44]	; 0x2c
   1a580:	beq	1a5bc <sf_gen_atmmulti_abbrev+0xabc>
   1a584:	ldr	r2, [r4, #96]	; 0x60
   1a588:	mov	r3, r0
   1a58c:	b	1a594 <sf_gen_atmmulti_abbrev+0xa94>
   1a590:	ldr	r1, [r3, #44]	; 0x2c
   1a594:	cmp	r1, #0
   1a598:	mov	r1, #84	; 0x54
   1a59c:	add	r5, r3, #84	; 0x54
   1a5a0:	movweq	r1, #60	; 0x3c
   1a5a4:	addeq	r5, r3, #60	; 0x3c
   1a5a8:	ldr	r3, [r3, r1]
   1a5ac:	str	r2, [r5]
   1a5b0:	cmp	r3, #0
   1a5b4:	bne	1a590 <sf_gen_atmmulti_abbrev+0xa90>
   1a5b8:	ldr	r1, [r0, #44]	; 0x2c
   1a5bc:	clz	r1, r1
   1a5c0:	cmp	r4, #0
   1a5c4:	lsr	r1, r1, #5
   1a5c8:	str	r1, [r0, #44]	; 0x2c
   1a5cc:	str	r4, [sp, #4]
   1a5d0:	beq	1a600 <sf_gen_atmmulti_abbrev+0xb00>
   1a5d4:	mov	r2, r4
   1a5d8:	ldr	r3, [r2, #44]	; 0x2c
   1a5dc:	add	r1, r2, #84	; 0x54
   1a5e0:	cmp	r3, #0
   1a5e4:	mov	r3, #84	; 0x54
   1a5e8:	movweq	r3, #60	; 0x3c
   1a5ec:	addeq	r1, r2, #60	; 0x3c
   1a5f0:	ldr	r2, [r2, r3]
   1a5f4:	cmp	r2, #0
   1a5f8:	bne	1a5d8 <sf_gen_atmmulti_abbrev+0xad8>
   1a5fc:	b	1a604 <sf_gen_atmmulti_abbrev+0xb04>
   1a600:	add	r1, sp, #4
   1a604:	str	r0, [r1]
   1a608:	ldr	r0, [r0, #96]	; 0x60
   1a60c:	str	r0, [r4, #96]	; 0x60
   1a610:	mov	r0, #22
   1a614:	bl	182fc <sf_gen_atmtype_abbrev>
   1a618:	cmp	r0, #0
   1a61c:	beq	1a650 <sf_gen_atmmulti_abbrev+0xb50>
   1a620:	ldr	r1, [r4, #96]	; 0x60
   1a624:	mov	r2, r0
   1a628:	ldr	r3, [r2, #44]	; 0x2c
   1a62c:	add	r5, r2, #84	; 0x54
   1a630:	cmp	r3, #0
   1a634:	mov	r3, #84	; 0x54
   1a638:	movweq	r3, #60	; 0x3c
   1a63c:	addeq	r5, r2, #60	; 0x3c
   1a640:	ldr	r2, [r2, r3]
   1a644:	str	r1, [r5]
   1a648:	cmp	r2, #0
   1a64c:	bne	1a628 <sf_gen_atmmulti_abbrev+0xb28>
   1a650:	ldr	r1, [r0, #44]	; 0x2c
   1a654:	cmp	r4, #0
   1a658:	clz	r1, r1
   1a65c:	lsr	r1, r1, #5
   1a660:	str	r1, [r0, #44]	; 0x2c
   1a664:	ldr	r2, [r4, #44]	; 0x2c
   1a668:	clz	r1, r2
   1a66c:	lsr	r1, r1, #5
   1a670:	str	r1, [r4, #44]	; 0x2c
   1a674:	str	r4, [sp, #4]
   1a678:	beq	1a6c4 <sf_gen_atmmulti_abbrev+0xbc4>
   1a67c:	cmp	r2, #0
   1a680:	mov	r2, #60	; 0x3c
   1a684:	add	r1, r4, #60	; 0x3c
   1a688:	movweq	r2, #84	; 0x54
   1a68c:	addeq	r1, r4, #84	; 0x54
   1a690:	ldr	r2, [r4, r2]
   1a694:	cmp	r2, #0
   1a698:	beq	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   1a69c:	ldr	r3, [r2, #44]	; 0x2c
   1a6a0:	add	r1, r2, #84	; 0x54
   1a6a4:	cmp	r3, #0
   1a6a8:	mov	r3, #84	; 0x54
   1a6ac:	movweq	r3, #60	; 0x3c
   1a6b0:	addeq	r1, r2, #60	; 0x3c
   1a6b4:	ldr	r2, [r2, r3]
   1a6b8:	cmp	r2, #0
   1a6bc:	bne	1a69c <sf_gen_atmmulti_abbrev+0xb9c>
   1a6c0:	b	1a6c8 <sf_gen_atmmulti_abbrev+0xbc8>
   1a6c4:	add	r1, sp, #4
   1a6c8:	str	r0, [r1]
   1a6cc:	ldr	r1, [r4, #44]	; 0x2c
   1a6d0:	clz	r1, r1
   1a6d4:	lsr	r1, r1, #5
   1a6d8:	str	r1, [r4, #44]	; 0x2c
   1a6dc:	ldr	r0, [r0, #96]	; 0x60
   1a6e0:	str	r0, [r4, #96]	; 0x60
   1a6e4:	mov	r0, r4
   1a6e8:	sub	sp, fp, #8
   1a6ec:	pop	{r4, r5, fp, pc}
   1a6f0:	bl	100c <abort@plt>
   1a6f4:	ldr	r0, [pc, #56]	; 1a734 <sf_gen_atmmulti_abbrev+0xc34>
   1a6f8:	add	r0, pc, r0
   1a6fc:	bl	2204 <sf_bpf_error>
   1a700:	ldr	r0, [pc, #52]	; 1a73c <sf_gen_atmmulti_abbrev+0xc3c>
   1a704:	add	r0, pc, r0
   1a708:	bl	2204 <sf_bpf_error>
   1a70c:	ldr	r0, [pc, #36]	; 1a738 <sf_gen_atmmulti_abbrev+0xc38>
   1a710:	add	r0, pc, r0
   1a714:	bl	2204 <sf_bpf_error>
   1a718:	ldr	r0, [pc, #32]	; 1a740 <sf_gen_atmmulti_abbrev+0xc40>
   1a71c:	add	r0, pc, r0
   1a720:	bl	2204 <sf_bpf_error>
   1a724:	.word	0x0002c800
   1a728:	.word	0x0002c9c0
   1a72c:	.word	0x0002c8e0
   1a730:	.word	0x0002c720
   1a734:	.word	0x0000ec0b
   1a738:	.word	0x0000ec13
   1a73c:	.word	0x0000ec41
   1a740:	.word	0x0000ec50

0001a744 <gen_ether_linktype>:
   1a744:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a748:	add	fp, sp, #24
   1a74c:	sub	sp, sp, #8
   1a750:	mov	r5, r0
   1a754:	cmp	r0, #253	; 0xfd
   1a758:	bgt	1a868 <gen_ether_linktype+0x124>
   1a75c:	cmp	r5, #6
   1a760:	beq	1a774 <gen_ether_linktype+0x30>
   1a764:	cmp	r5, #224	; 0xe0
   1a768:	beq	1ac84 <gen_ether_linktype+0x540>
   1a76c:	cmp	r5, #240	; 0xf0
   1a770:	bne	1ab54 <gen_ether_linktype+0x410>
   1a774:	ldr	r0, [pc, #2208]	; 1b01c <gen_ether_linktype+0x8d8>
   1a778:	mov	r2, #8
   1a77c:	movw	r3, #1500	; 0x5dc
   1a780:	add	r0, pc, r0
   1a784:	ldr	r1, [r0, #40]	; 0x28
   1a788:	mov	r0, #1
   1a78c:	bl	14bcc <gen_cmp_gt>
   1a790:	mov	r6, r0
   1a794:	ldr	r0, [r0, #44]	; 0x2c
   1a798:	orr	r3, r5, r5, lsl #8
   1a79c:	mov	r1, #0
   1a7a0:	mov	r2, #8
   1a7a4:	clz	r0, r0
   1a7a8:	lsr	r0, r0, #5
   1a7ac:	str	r0, [r6, #44]	; 0x2c
   1a7b0:	mov	r0, #2
   1a7b4:	bl	9ef4 <gen_cmp>
   1a7b8:	mov	r4, r0
   1a7bc:	cmp	r6, #0
   1a7c0:	beq	1a7f4 <gen_ether_linktype+0xb0>
   1a7c4:	ldr	r0, [r4, #96]	; 0x60
   1a7c8:	mov	r1, r6
   1a7cc:	ldr	r2, [r1, #44]	; 0x2c
   1a7d0:	add	r3, r1, #84	; 0x54
   1a7d4:	cmp	r2, #0
   1a7d8:	mov	r2, #84	; 0x54
   1a7dc:	movweq	r2, #60	; 0x3c
   1a7e0:	addeq	r3, r1, #60	; 0x3c
   1a7e4:	ldr	r1, [r1, r2]
   1a7e8:	str	r0, [r3]
   1a7ec:	cmp	r1, #0
   1a7f0:	bne	1a7cc <gen_ether_linktype+0x88>
   1a7f4:	ldr	r0, [r6, #44]	; 0x2c
   1a7f8:	cmp	r4, #0
   1a7fc:	clz	r0, r0
   1a800:	lsr	r0, r0, #5
   1a804:	str	r0, [r6, #44]	; 0x2c
   1a808:	ldr	r1, [r4, #44]	; 0x2c
   1a80c:	clz	r0, r1
   1a810:	lsr	r0, r0, #5
   1a814:	str	r0, [r4, #44]	; 0x2c
   1a818:	str	r4, [sp]
   1a81c:	beq	1ac58 <gen_ether_linktype+0x514>
   1a820:	cmp	r1, #0
   1a824:	mov	r1, #60	; 0x3c
   1a828:	add	r0, r4, #60	; 0x3c
   1a82c:	movweq	r1, #84	; 0x54
   1a830:	addeq	r0, r4, #84	; 0x54
   1a834:	ldr	r1, [r4, r1]
   1a838:	cmp	r1, #0
   1a83c:	beq	1ac5c <gen_ether_linktype+0x518>
   1a840:	ldr	r2, [r1, #44]	; 0x2c
   1a844:	add	r0, r1, #84	; 0x54
   1a848:	cmp	r2, #0
   1a84c:	mov	r2, #84	; 0x54
   1a850:	movweq	r2, #60	; 0x3c
   1a854:	addeq	r0, r1, #60	; 0x3c
   1a858:	ldr	r1, [r1, r2]
   1a85c:	cmp	r1, #0
   1a860:	bne	1a840 <gen_ether_linktype+0xfc>
   1a864:	b	1ac5c <gen_ether_linktype+0x518>
   1a868:	movw	r0, #33011	; 0x80f3
   1a86c:	cmp	r5, r0
   1a870:	movwne	r0, #32923	; 0x809b
   1a874:	cmpne	r5, r0
   1a878:	bne	1ab4c <gen_ether_linktype+0x408>
   1a87c:	ldr	r9, [pc, #1952]	; 1b024 <gen_ether_linktype+0x8e0>
   1a880:	mov	r0, #1
   1a884:	mov	r2, #8
   1a888:	movw	r3, #1500	; 0x5dc
   1a88c:	add	r9, pc, r9
   1a890:	ldr	r1, [r9, #40]	; 0x28
   1a894:	bl	14bcc <gen_cmp_gt>
   1a898:	mov	r6, r0
   1a89c:	ldr	r0, [r0, #44]	; 0x2c
   1a8a0:	clz	r0, r0
   1a8a4:	lsr	r0, r0, #5
   1a8a8:	str	r0, [r6, #44]	; 0x2c
   1a8ac:	mov	r0, #3
   1a8b0:	strb	r0, [sp, #2]
   1a8b4:	movw	r0, #43690	; 0xaaaa
   1a8b8:	strh	r0, [sp]
   1a8bc:	movw	r0, #32923	; 0x809b
   1a8c0:	cmp	r5, r0
   1a8c4:	bne	1a9b0 <gen_ether_linktype+0x26c>
   1a8c8:	mov	r0, #155	; 0x9b
   1a8cc:	mov	r5, sp
   1a8d0:	mov	r1, #0
   1a8d4:	mov	r2, #8
   1a8d8:	strb	r0, [sp, #7]
   1a8dc:	movw	r0, #8
   1a8e0:	mov	r3, r5
   1a8e4:	movt	r0, #32775	; 0x8007
   1a8e8:	str	r0, [sp, #3]
   1a8ec:	mov	r0, #2
   1a8f0:	bl	1b0ec <gen_bcmp>
   1a8f4:	mov	r8, r0
   1a8f8:	mov	r4, r0
   1a8fc:	cmp	r6, #0
   1a900:	ldr	r0, [r8, #96]!	; 0x60
   1a904:	beq	1a934 <gen_ether_linktype+0x1f0>
   1a908:	mov	r1, r6
   1a90c:	ldr	r2, [r1, #44]	; 0x2c
   1a910:	add	r3, r1, #84	; 0x54
   1a914:	cmp	r2, #0
   1a918:	mov	r2, #84	; 0x54
   1a91c:	movweq	r2, #60	; 0x3c
   1a920:	addeq	r3, r1, #60	; 0x3c
   1a924:	ldr	r1, [r1, r2]
   1a928:	str	r0, [r3]
   1a92c:	cmp	r1, #0
   1a930:	bne	1a90c <gen_ether_linktype+0x1c8>
   1a934:	ldr	r0, [r6, #44]	; 0x2c
   1a938:	cmp	r4, #0
   1a93c:	clz	r0, r0
   1a940:	lsr	r0, r0, #5
   1a944:	str	r0, [r6, #44]	; 0x2c
   1a948:	ldr	r0, [r4, #44]	; 0x2c
   1a94c:	clz	r1, r0
   1a950:	lsr	r1, r1, #5
   1a954:	str	r1, [r4, #44]	; 0x2c
   1a958:	str	r4, [sp]
   1a95c:	beq	1a9a4 <gen_ether_linktype+0x260>
   1a960:	cmp	r0, #0
   1a964:	mov	r0, #60	; 0x3c
   1a968:	add	r5, r4, #60	; 0x3c
   1a96c:	movweq	r0, #84	; 0x54
   1a970:	addeq	r5, r4, #84	; 0x54
   1a974:	ldr	r0, [r4, r0]
   1a978:	cmp	r0, #0
   1a97c:	beq	1a9a4 <gen_ether_linktype+0x260>
   1a980:	ldr	r1, [r0, #44]	; 0x2c
   1a984:	add	r5, r0, #84	; 0x54
   1a988:	cmp	r1, #0
   1a98c:	mov	r1, #84	; 0x54
   1a990:	movweq	r1, #60	; 0x3c
   1a994:	addeq	r5, r0, #60	; 0x3c
   1a998:	ldr	r0, [r0, r1]
   1a99c:	cmp	r0, #0
   1a9a0:	bne	1a980 <gen_ether_linktype+0x23c>
   1a9a4:	str	r6, [r5]
   1a9a8:	movw	r5, #32923	; 0x809b
   1a9ac:	b	1aa8c <gen_ether_linktype+0x348>
   1a9b0:	mov	r0, #243	; 0xf3
   1a9b4:	mov	r7, sp
   1a9b8:	mov	r1, #0
   1a9bc:	mov	r2, #8
   1a9c0:	strb	r0, [sp, #7]
   1a9c4:	mov	r0, #-2147483648	; 0x80000000
   1a9c8:	mov	r3, r7
   1a9cc:	str	r0, [sp, #3]
   1a9d0:	mov	r0, #2
   1a9d4:	bl	1b0ec <gen_bcmp>
   1a9d8:	mov	r8, r0
   1a9dc:	mov	r4, r0
   1a9e0:	cmp	r6, #0
   1a9e4:	ldr	r0, [r8, #96]!	; 0x60
   1a9e8:	beq	1aa18 <gen_ether_linktype+0x2d4>
   1a9ec:	mov	r1, r6
   1a9f0:	ldr	r2, [r1, #44]	; 0x2c
   1a9f4:	add	r3, r1, #84	; 0x54
   1a9f8:	cmp	r2, #0
   1a9fc:	mov	r2, #84	; 0x54
   1aa00:	movweq	r2, #60	; 0x3c
   1aa04:	addeq	r3, r1, #60	; 0x3c
   1aa08:	ldr	r1, [r1, r2]
   1aa0c:	str	r0, [r3]
   1aa10:	cmp	r1, #0
   1aa14:	bne	1a9f0 <gen_ether_linktype+0x2ac>
   1aa18:	ldr	r0, [r6, #44]	; 0x2c
   1aa1c:	cmp	r4, #0
   1aa20:	clz	r0, r0
   1aa24:	lsr	r0, r0, #5
   1aa28:	str	r0, [r6, #44]	; 0x2c
   1aa2c:	ldr	r0, [r4, #44]	; 0x2c
   1aa30:	clz	r1, r0
   1aa34:	lsr	r1, r1, #5
   1aa38:	str	r1, [r4, #44]	; 0x2c
   1aa3c:	str	r4, [sp]
   1aa40:	beq	1aa88 <gen_ether_linktype+0x344>
   1aa44:	cmp	r0, #0
   1aa48:	mov	r0, #60	; 0x3c
   1aa4c:	add	r7, r4, #60	; 0x3c
   1aa50:	movweq	r0, #84	; 0x54
   1aa54:	addeq	r7, r4, #84	; 0x54
   1aa58:	ldr	r0, [r4, r0]
   1aa5c:	cmp	r0, #0
   1aa60:	beq	1aa88 <gen_ether_linktype+0x344>
   1aa64:	ldr	r1, [r0, #44]	; 0x2c
   1aa68:	add	r7, r0, #84	; 0x54
   1aa6c:	cmp	r1, #0
   1aa70:	mov	r1, #84	; 0x54
   1aa74:	movweq	r1, #60	; 0x3c
   1aa78:	addeq	r7, r0, #60	; 0x3c
   1aa7c:	ldr	r0, [r0, r1]
   1aa80:	cmp	r0, #0
   1aa84:	bne	1aa64 <gen_ether_linktype+0x320>
   1aa88:	str	r6, [r7]
   1aa8c:	ldr	r0, [r4, #44]	; 0x2c
   1aa90:	mov	r2, #8
   1aa94:	mov	r3, r5
   1aa98:	clz	r0, r0
   1aa9c:	lsr	r0, r0, #5
   1aaa0:	str	r0, [r4, #44]	; 0x2c
   1aaa4:	ldr	r0, [r6, #96]	; 0x60
   1aaa8:	str	r0, [r4, #96]	; 0x60
   1aaac:	mov	r0, #1
   1aab0:	ldr	r1, [r9, #40]	; 0x28
   1aab4:	bl	9ef4 <gen_cmp>
   1aab8:	ldr	r1, [r0, #44]	; 0x2c
   1aabc:	cmp	r0, #0
   1aac0:	clz	r1, r1
   1aac4:	lsr	r1, r1, #5
   1aac8:	str	r1, [r0, #44]	; 0x2c
   1aacc:	beq	1ab08 <gen_ether_linktype+0x3c4>
   1aad0:	ldr	r2, [r4, #96]	; 0x60
   1aad4:	mov	r3, r0
   1aad8:	b	1aae0 <gen_ether_linktype+0x39c>
   1aadc:	ldr	r1, [r3, #44]	; 0x2c
   1aae0:	cmp	r1, #0
   1aae4:	mov	r1, #84	; 0x54
   1aae8:	add	r7, r3, #84	; 0x54
   1aaec:	movweq	r1, #60	; 0x3c
   1aaf0:	addeq	r7, r3, #60	; 0x3c
   1aaf4:	ldr	r3, [r3, r1]
   1aaf8:	str	r2, [r7]
   1aafc:	cmp	r3, #0
   1ab00:	bne	1aadc <gen_ether_linktype+0x398>
   1ab04:	ldr	r1, [r0, #44]	; 0x2c
   1ab08:	clz	r1, r1
   1ab0c:	cmp	r4, #0
   1ab10:	lsr	r1, r1, #5
   1ab14:	str	r1, [r0, #44]	; 0x2c
   1ab18:	str	r4, [sp]
   1ab1c:	beq	1ad48 <gen_ether_linktype+0x604>
   1ab20:	mov	r2, r4
   1ab24:	ldr	r3, [r2, #44]	; 0x2c
   1ab28:	add	r1, r2, #84	; 0x54
   1ab2c:	cmp	r3, #0
   1ab30:	mov	r3, #84	; 0x54
   1ab34:	movweq	r3, #60	; 0x3c
   1ab38:	addeq	r1, r2, #60	; 0x3c
   1ab3c:	ldr	r2, [r2, r3]
   1ab40:	cmp	r2, #0
   1ab44:	bne	1ab24 <gen_ether_linktype+0x3e0>
   1ab48:	b	1ad4c <gen_ether_linktype+0x608>
   1ab4c:	cmp	r5, #254	; 0xfe
   1ab50:	beq	1a774 <gen_ether_linktype+0x30>
   1ab54:	ldr	r4, [pc, #1212]	; 1b018 <gen_ether_linktype+0x8d4>
   1ab58:	movw	r0, #1500	; 0x5dc
   1ab5c:	cmp	r5, r0
   1ab60:	add	r4, pc, r4
   1ab64:	ldr	r1, [r4, #40]	; 0x28
   1ab68:	bgt	1ad64 <gen_ether_linktype+0x620>
   1ab6c:	mov	r0, #1
   1ab70:	mov	r2, #8
   1ab74:	movw	r3, #1500	; 0x5dc
   1ab78:	bl	14bcc <gen_cmp_gt>
   1ab7c:	mov	r6, r0
   1ab80:	ldr	r0, [r0, #44]	; 0x2c
   1ab84:	mov	r2, #16
   1ab88:	mov	r3, r5
   1ab8c:	clz	r0, r0
   1ab90:	lsr	r0, r0, #5
   1ab94:	str	r0, [r6, #44]	; 0x2c
   1ab98:	ldr	r0, [r4, #40]	; 0x28
   1ab9c:	add	r1, r0, #2
   1aba0:	mov	r0, #1
   1aba4:	bl	9ef4 <gen_cmp>
   1aba8:	mov	r4, r0
   1abac:	cmp	r6, #0
   1abb0:	beq	1abe4 <gen_ether_linktype+0x4a0>
   1abb4:	ldr	r0, [r4, #96]	; 0x60
   1abb8:	mov	r1, r6
   1abbc:	ldr	r2, [r1, #44]	; 0x2c
   1abc0:	add	r3, r1, #84	; 0x54
   1abc4:	cmp	r2, #0
   1abc8:	mov	r2, #84	; 0x54
   1abcc:	movweq	r2, #60	; 0x3c
   1abd0:	addeq	r3, r1, #60	; 0x3c
   1abd4:	ldr	r1, [r1, r2]
   1abd8:	str	r0, [r3]
   1abdc:	cmp	r1, #0
   1abe0:	bne	1abbc <gen_ether_linktype+0x478>
   1abe4:	ldr	r0, [r6, #44]	; 0x2c
   1abe8:	cmp	r4, #0
   1abec:	clz	r0, r0
   1abf0:	lsr	r0, r0, #5
   1abf4:	str	r0, [r6, #44]	; 0x2c
   1abf8:	ldr	r1, [r4, #44]	; 0x2c
   1abfc:	clz	r0, r1
   1ac00:	lsr	r0, r0, #5
   1ac04:	str	r0, [r4, #44]	; 0x2c
   1ac08:	str	r4, [sp]
   1ac0c:	beq	1ac58 <gen_ether_linktype+0x514>
   1ac10:	cmp	r1, #0
   1ac14:	mov	r1, #60	; 0x3c
   1ac18:	add	r0, r4, #60	; 0x3c
   1ac1c:	movweq	r1, #84	; 0x54
   1ac20:	addeq	r0, r4, #84	; 0x54
   1ac24:	ldr	r1, [r4, r1]
   1ac28:	cmp	r1, #0
   1ac2c:	beq	1ac5c <gen_ether_linktype+0x518>
   1ac30:	ldr	r2, [r1, #44]	; 0x2c
   1ac34:	add	r0, r1, #84	; 0x54
   1ac38:	cmp	r2, #0
   1ac3c:	mov	r2, #84	; 0x54
   1ac40:	movweq	r2, #60	; 0x3c
   1ac44:	addeq	r0, r1, #60	; 0x3c
   1ac48:	ldr	r1, [r1, r2]
   1ac4c:	cmp	r1, #0
   1ac50:	bne	1ac30 <gen_ether_linktype+0x4ec>
   1ac54:	b	1ac5c <gen_ether_linktype+0x518>
   1ac58:	mov	r0, sp
   1ac5c:	str	r6, [r0]
   1ac60:	ldr	r0, [r4, #44]	; 0x2c
   1ac64:	clz	r0, r0
   1ac68:	lsr	r0, r0, #5
   1ac6c:	str	r0, [r4, #44]	; 0x2c
   1ac70:	ldr	r0, [r6, #96]	; 0x60
   1ac74:	str	r0, [r4, #96]	; 0x60
   1ac78:	mov	r0, r4
   1ac7c:	sub	sp, fp, #24
   1ac80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ac84:	mov	r0, #2
   1ac88:	mov	r1, #0
   1ac8c:	mov	r2, #16
   1ac90:	mov	r3, #224	; 0xe0
   1ac94:	bl	9ef4 <gen_cmp>
   1ac98:	mov	r5, r0
   1ac9c:	mov	r0, #2
   1aca0:	mov	r1, #0
   1aca4:	mov	r2, #8
   1aca8:	movw	r3, #65535	; 0xffff
   1acac:	bl	9ef4 <gen_cmp>
   1acb0:	mov	r4, r0
   1acb4:	ldr	r0, [r5, #44]	; 0x2c
   1acb8:	cmp	r5, #0
   1acbc:	clz	r0, r0
   1acc0:	lsr	r0, r0, #5
   1acc4:	str	r0, [r5, #44]	; 0x2c
   1acc8:	beq	1ad04 <gen_ether_linktype+0x5c0>
   1accc:	ldr	r1, [r4, #96]	; 0x60
   1acd0:	mov	r2, r5
   1acd4:	b	1acdc <gen_ether_linktype+0x598>
   1acd8:	ldr	r0, [r2, #44]	; 0x2c
   1acdc:	cmp	r0, #0
   1ace0:	mov	r0, #84	; 0x54
   1ace4:	add	r3, r2, #84	; 0x54
   1ace8:	movweq	r0, #60	; 0x3c
   1acec:	addeq	r3, r2, #60	; 0x3c
   1acf0:	ldr	r2, [r2, r0]
   1acf4:	str	r1, [r3]
   1acf8:	cmp	r2, #0
   1acfc:	bne	1acd8 <gen_ether_linktype+0x594>
   1ad00:	ldr	r0, [r5, #44]	; 0x2c
   1ad04:	clz	r0, r0
   1ad08:	cmp	r4, #0
   1ad0c:	lsr	r0, r0, #5
   1ad10:	str	r0, [r5, #44]	; 0x2c
   1ad14:	str	r4, [sp]
   1ad18:	beq	1ad7c <gen_ether_linktype+0x638>
   1ad1c:	mov	r1, r4
   1ad20:	ldr	r2, [r1, #44]	; 0x2c
   1ad24:	add	r0, r1, #84	; 0x54
   1ad28:	cmp	r2, #0
   1ad2c:	mov	r2, #84	; 0x54
   1ad30:	movweq	r2, #60	; 0x3c
   1ad34:	addeq	r0, r1, #60	; 0x3c
   1ad38:	ldr	r1, [r1, r2]
   1ad3c:	cmp	r1, #0
   1ad40:	bne	1ad20 <gen_ether_linktype+0x5dc>
   1ad44:	b	1ad80 <gen_ether_linktype+0x63c>
   1ad48:	mov	r1, sp
   1ad4c:	str	r0, [r1]
   1ad50:	ldr	r0, [r0, #96]	; 0x60
   1ad54:	str	r0, [r8]
   1ad58:	mov	r0, r4
   1ad5c:	sub	sp, fp, #24
   1ad60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ad64:	mov	r0, #1
   1ad68:	mov	r2, #8
   1ad6c:	mov	r3, r5
   1ad70:	sub	sp, fp, #24
   1ad74:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ad78:	b	9ef4 <gen_cmp>
   1ad7c:	mov	r0, sp
   1ad80:	str	r5, [r0]
   1ad84:	mov	r1, #0
   1ad88:	mov	r2, #8
   1ad8c:	ldr	r0, [r5, #96]	; 0x60
   1ad90:	mov	r5, sp
   1ad94:	mov	r3, r5
   1ad98:	str	r0, [r4, #96]	; 0x60
   1ad9c:	movw	r0, #43690	; 0xaaaa
   1ada0:	movt	r0, #3
   1ada4:	str	r0, [sp]
   1ada8:	movw	r0, #0
   1adac:	movt	r0, #14209	; 0x3781
   1adb0:	str	r0, [sp, #4]
   1adb4:	mov	r0, #2
   1adb8:	bl	1b0ec <gen_bcmp>
   1adbc:	ldr	r1, [r0, #44]	; 0x2c
   1adc0:	cmp	r0, #0
   1adc4:	clz	r1, r1
   1adc8:	lsr	r1, r1, #5
   1adcc:	str	r1, [r0, #44]	; 0x2c
   1add0:	beq	1ae0c <gen_ether_linktype+0x6c8>
   1add4:	ldr	r2, [r4, #96]	; 0x60
   1add8:	mov	r3, r0
   1addc:	b	1ade4 <gen_ether_linktype+0x6a0>
   1ade0:	ldr	r1, [r3, #44]	; 0x2c
   1ade4:	cmp	r1, #0
   1ade8:	mov	r1, #84	; 0x54
   1adec:	add	r7, r3, #84	; 0x54
   1adf0:	movweq	r1, #60	; 0x3c
   1adf4:	addeq	r7, r3, #60	; 0x3c
   1adf8:	ldr	r3, [r3, r1]
   1adfc:	str	r2, [r7]
   1ae00:	cmp	r3, #0
   1ae04:	bne	1ade0 <gen_ether_linktype+0x69c>
   1ae08:	ldr	r1, [r0, #44]	; 0x2c
   1ae0c:	clz	r1, r1
   1ae10:	cmp	r4, #0
   1ae14:	lsr	r1, r1, #5
   1ae18:	str	r1, [r0, #44]	; 0x2c
   1ae1c:	str	r4, [sp]
   1ae20:	beq	1ae4c <gen_ether_linktype+0x708>
   1ae24:	mov	r1, r4
   1ae28:	ldr	r2, [r1, #44]	; 0x2c
   1ae2c:	add	r5, r1, #84	; 0x54
   1ae30:	cmp	r2, #0
   1ae34:	mov	r2, #84	; 0x54
   1ae38:	movweq	r2, #60	; 0x3c
   1ae3c:	addeq	r5, r1, #60	; 0x3c
   1ae40:	ldr	r1, [r1, r2]
   1ae44:	cmp	r1, #0
   1ae48:	bne	1ae28 <gen_ether_linktype+0x6e4>
   1ae4c:	str	r0, [r5]
   1ae50:	mov	r2, #8
   1ae54:	movw	r3, #1500	; 0x5dc
   1ae58:	ldr	r0, [r0, #96]	; 0x60
   1ae5c:	str	r0, [r4, #96]	; 0x60
   1ae60:	mov	r0, #1
   1ae64:	ldr	r5, [pc, #436]	; 1b020 <gen_ether_linktype+0x8dc>
   1ae68:	add	r5, pc, r5
   1ae6c:	ldr	r1, [r5, #40]	; 0x28
   1ae70:	bl	14bcc <gen_cmp_gt>
   1ae74:	ldr	r1, [r0, #44]	; 0x2c
   1ae78:	cmp	r0, #0
   1ae7c:	clz	r1, r1
   1ae80:	lsr	r1, r1, #5
   1ae84:	str	r1, [r0, #44]	; 0x2c
   1ae88:	beq	1aec4 <gen_ether_linktype+0x780>
   1ae8c:	ldr	r2, [r4, #96]	; 0x60
   1ae90:	mov	r3, r0
   1ae94:	b	1ae9c <gen_ether_linktype+0x758>
   1ae98:	ldr	r1, [r3, #44]	; 0x2c
   1ae9c:	cmp	r1, #0
   1aea0:	mov	r1, #84	; 0x54
   1aea4:	add	r7, r3, #84	; 0x54
   1aea8:	movweq	r1, #60	; 0x3c
   1aeac:	addeq	r7, r3, #60	; 0x3c
   1aeb0:	ldr	r3, [r3, r1]
   1aeb4:	str	r2, [r7]
   1aeb8:	cmp	r3, #0
   1aebc:	bne	1ae98 <gen_ether_linktype+0x754>
   1aec0:	ldr	r1, [r0, #44]	; 0x2c
   1aec4:	clz	r1, r1
   1aec8:	cmp	r4, #0
   1aecc:	lsr	r1, r1, #5
   1aed0:	str	r1, [r0, #44]	; 0x2c
   1aed4:	ldr	r2, [r4, #44]	; 0x2c
   1aed8:	clz	r1, r2
   1aedc:	lsr	r1, r1, #5
   1aee0:	str	r1, [r4, #44]	; 0x2c
   1aee4:	str	r4, [sp]
   1aee8:	beq	1af34 <gen_ether_linktype+0x7f0>
   1aeec:	cmp	r2, #0
   1aef0:	mov	r2, #60	; 0x3c
   1aef4:	add	r1, r4, #60	; 0x3c
   1aef8:	movweq	r2, #84	; 0x54
   1aefc:	addeq	r1, r4, #84	; 0x54
   1af00:	ldr	r2, [r4, r2]
   1af04:	cmp	r2, #0
   1af08:	beq	1af38 <gen_ether_linktype+0x7f4>
   1af0c:	ldr	r3, [r2, #44]	; 0x2c
   1af10:	add	r1, r2, #84	; 0x54
   1af14:	cmp	r3, #0
   1af18:	mov	r3, #84	; 0x54
   1af1c:	movweq	r3, #60	; 0x3c
   1af20:	addeq	r1, r2, #60	; 0x3c
   1af24:	ldr	r2, [r2, r3]
   1af28:	cmp	r2, #0
   1af2c:	bne	1af0c <gen_ether_linktype+0x7c8>
   1af30:	b	1af38 <gen_ether_linktype+0x7f4>
   1af34:	mov	r1, sp
   1af38:	str	r0, [r1]
   1af3c:	mov	r2, #8
   1af40:	movw	r3, #33079	; 0x8137
   1af44:	ldr	r1, [r4, #44]	; 0x2c
   1af48:	clz	r1, r1
   1af4c:	lsr	r1, r1, #5
   1af50:	str	r1, [r4, #44]	; 0x2c
   1af54:	ldr	r0, [r0, #96]	; 0x60
   1af58:	str	r0, [r4, #96]	; 0x60
   1af5c:	mov	r0, #1
   1af60:	ldr	r1, [r5, #40]	; 0x28
   1af64:	bl	9ef4 <gen_cmp>
   1af68:	ldr	r1, [r0, #44]	; 0x2c
   1af6c:	cmp	r0, #0
   1af70:	clz	r1, r1
   1af74:	lsr	r1, r1, #5
   1af78:	str	r1, [r0, #44]	; 0x2c
   1af7c:	beq	1afb8 <gen_ether_linktype+0x874>
   1af80:	ldr	r2, [r4, #96]	; 0x60
   1af84:	mov	r3, r0
   1af88:	b	1af90 <gen_ether_linktype+0x84c>
   1af8c:	ldr	r1, [r3, #44]	; 0x2c
   1af90:	cmp	r1, #0
   1af94:	mov	r1, #84	; 0x54
   1af98:	add	r7, r3, #84	; 0x54
   1af9c:	movweq	r1, #60	; 0x3c
   1afa0:	addeq	r7, r3, #60	; 0x3c
   1afa4:	ldr	r3, [r3, r1]
   1afa8:	str	r2, [r7]
   1afac:	cmp	r3, #0
   1afb0:	bne	1af8c <gen_ether_linktype+0x848>
   1afb4:	ldr	r1, [r0, #44]	; 0x2c
   1afb8:	clz	r1, r1
   1afbc:	cmp	r4, #0
   1afc0:	lsr	r1, r1, #5
   1afc4:	str	r1, [r0, #44]	; 0x2c
   1afc8:	str	r4, [sp]
   1afcc:	beq	1affc <gen_ether_linktype+0x8b8>
   1afd0:	mov	r2, r4
   1afd4:	ldr	r3, [r2, #44]	; 0x2c
   1afd8:	add	r1, r2, #84	; 0x54
   1afdc:	cmp	r3, #0
   1afe0:	mov	r3, #84	; 0x54
   1afe4:	movweq	r3, #60	; 0x3c
   1afe8:	addeq	r1, r2, #60	; 0x3c
   1afec:	ldr	r2, [r2, r3]
   1aff0:	cmp	r2, #0
   1aff4:	bne	1afd4 <gen_ether_linktype+0x890>
   1aff8:	b	1b000 <gen_ether_linktype+0x8bc>
   1affc:	mov	r1, sp
   1b000:	str	r0, [r1]
   1b004:	ldr	r0, [r0, #96]	; 0x60
   1b008:	str	r0, [r4, #96]	; 0x60
   1b00c:	mov	r0, r4
   1b010:	sub	sp, fp, #24
   1b014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b018:	.word	0x0002b980
   1b01c:	.word	0x0002bd60
   1b020:	.word	0x0002b678
   1b024:	.word	0x0002bc54

0001b028 <gen_llc_linktype>:
   1b028:	mov	r3, r0
   1b02c:	cmp	r0, #239	; 0xef
   1b030:	ble	1b054 <gen_llc_linktype+0x2c>
   1b034:	cmp	r3, #240	; 0xf0
   1b038:	beq	1b078 <gen_llc_linktype+0x50>
   1b03c:	movw	r0, #32923	; 0x809b
   1b040:	cmp	r3, r0
   1b044:	beq	1b08c <gen_llc_linktype+0x64>
   1b048:	cmp	r3, #254	; 0xfe
   1b04c:	beq	1b078 <gen_llc_linktype+0x50>
   1b050:	b	1b0cc <gen_llc_linktype+0xa4>
   1b054:	cmp	r3, #6
   1b058:	beq	1b078 <gen_llc_linktype+0x50>
   1b05c:	cmp	r3, #224	; 0xe0
   1b060:	bne	1b0cc <gen_llc_linktype+0xa4>
   1b064:	mov	r0, #2
   1b068:	mov	r1, #0
   1b06c:	mov	r2, #16
   1b070:	mov	r3, #224	; 0xe0
   1b074:	b	9ef4 <gen_cmp>
   1b078:	orr	r3, r3, r3, lsl #8
   1b07c:	mov	r0, #2
   1b080:	mov	r1, #0
   1b084:	mov	r2, #8
   1b088:	b	9ef4 <gen_cmp>
   1b08c:	push	{fp, lr}
   1b090:	mov	fp, sp
   1b094:	sub	sp, sp, #8
   1b098:	movw	r0, #43690	; 0xaaaa
   1b09c:	mov	r3, sp
   1b0a0:	mov	r1, #0
   1b0a4:	mov	r2, #8
   1b0a8:	movt	r0, #2051	; 0x803
   1b0ac:	str	r0, [sp]
   1b0b0:	movw	r0, #1792	; 0x700
   1b0b4:	movt	r0, #39808	; 0x9b80
   1b0b8:	str	r0, [sp, #4]
   1b0bc:	mov	r0, #2
   1b0c0:	bl	1b0ec <gen_bcmp>
   1b0c4:	mov	sp, fp
   1b0c8:	pop	{fp, pc}
   1b0cc:	movw	r0, #1500	; 0x5dc
   1b0d0:	cmp	r3, r0
   1b0d4:	mov	r0, #2
   1b0d8:	movgt	r1, #6
   1b0dc:	movgt	r2, #8
   1b0e0:	movle	r1, #0
   1b0e4:	movle	r2, #16
   1b0e8:	b	9ef4 <gen_cmp>

0001b0ec <gen_bcmp>:
   1b0ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0f0:	add	fp, sp, #28
   1b0f4:	sub	sp, sp, #20
   1b0f8:	mov	r6, r3
   1b0fc:	mov	r9, r1
   1b100:	mov	sl, r0
   1b104:	mov	r7, #0
   1b108:	cmp	r2, #4
   1b10c:	bcs	1b22c <gen_bcmp+0x140>
   1b110:	cmp	r2, #2
   1b114:	bcc	1b340 <gen_bcmp+0x254>
   1b118:	add	r5, sp, #16
   1b11c:	mov	r8, r2
   1b120:	str	r2, [sp, #4]
   1b124:	sub	r8, r8, #2
   1b128:	mov	r0, r6
   1b12c:	mov	r2, #8
   1b130:	ldrb	r1, [r0, r8]!
   1b134:	ldrb	r0, [r0, #1]
   1b138:	orr	r3, r0, r1, lsl #8
   1b13c:	add	r1, r8, r9
   1b140:	mov	r0, sl
   1b144:	bl	9ef4 <gen_cmp>
   1b148:	mov	r4, r0
   1b14c:	cmp	r7, #0
   1b150:	beq	1b214 <gen_bcmp+0x128>
   1b154:	ldr	r0, [r4, #96]	; 0x60
   1b158:	mov	r1, r7
   1b15c:	ldr	r2, [r1, #44]	; 0x2c
   1b160:	add	r3, r1, #84	; 0x54
   1b164:	cmp	r2, #0
   1b168:	mov	r2, #84	; 0x54
   1b16c:	movweq	r2, #60	; 0x3c
   1b170:	addeq	r3, r1, #60	; 0x3c
   1b174:	ldr	r1, [r1, r2]
   1b178:	str	r0, [r3]
   1b17c:	cmp	r1, #0
   1b180:	bne	1b15c <gen_bcmp+0x70>
   1b184:	ldr	r0, [r7, #44]	; 0x2c
   1b188:	cmp	r4, #0
   1b18c:	clz	r0, r0
   1b190:	lsr	r0, r0, #5
   1b194:	str	r0, [r7, #44]	; 0x2c
   1b198:	ldr	r1, [r4, #44]	; 0x2c
   1b19c:	clz	r0, r1
   1b1a0:	lsr	r0, r0, #5
   1b1a4:	str	r0, [r4, #44]	; 0x2c
   1b1a8:	mov	r0, r5
   1b1ac:	str	r4, [sp, #16]
   1b1b0:	beq	1b1f8 <gen_bcmp+0x10c>
   1b1b4:	cmp	r1, #0
   1b1b8:	mov	r1, #60	; 0x3c
   1b1bc:	add	r0, r4, #60	; 0x3c
   1b1c0:	movweq	r1, #84	; 0x54
   1b1c4:	addeq	r0, r4, #84	; 0x54
   1b1c8:	ldr	r1, [r4, r1]
   1b1cc:	cmp	r1, #0
   1b1d0:	beq	1b1f8 <gen_bcmp+0x10c>
   1b1d4:	ldr	r2, [r1, #44]	; 0x2c
   1b1d8:	add	r0, r1, #84	; 0x54
   1b1dc:	cmp	r2, #0
   1b1e0:	mov	r2, #84	; 0x54
   1b1e4:	movweq	r2, #60	; 0x3c
   1b1e8:	addeq	r0, r1, #60	; 0x3c
   1b1ec:	ldr	r1, [r1, r2]
   1b1f0:	cmp	r1, #0
   1b1f4:	bne	1b1d4 <gen_bcmp+0xe8>
   1b1f8:	str	r7, [r0]
   1b1fc:	ldr	r0, [r4, #44]	; 0x2c
   1b200:	clz	r0, r0
   1b204:	lsr	r0, r0, #5
   1b208:	str	r0, [r4, #44]	; 0x2c
   1b20c:	ldr	r0, [r7, #96]	; 0x60
   1b210:	str	r0, [r4, #96]	; 0x60
   1b214:	cmp	r8, #1
   1b218:	mov	r7, r4
   1b21c:	bhi	1b124 <gen_bcmp+0x38>
   1b220:	ldr	r2, [sp, #4]
   1b224:	and	r2, r2, #1
   1b228:	b	1b344 <gen_bcmp+0x258>
   1b22c:	mov	r5, #0
   1b230:	add	r8, sp, #8
   1b234:	mov	r4, r2
   1b238:	str	r2, [sp, #4]
   1b23c:	sub	r4, r4, #4
   1b240:	mov	r2, #0
   1b244:	ldr	r0, [r6, r4]
   1b248:	add	r1, r4, r9
   1b24c:	rev	r3, r0
   1b250:	mov	r0, sl
   1b254:	bl	9ef4 <gen_cmp>
   1b258:	mov	r7, r0
   1b25c:	cmp	r5, #0
   1b260:	beq	1b324 <gen_bcmp+0x238>
   1b264:	ldr	r0, [r7, #96]	; 0x60
   1b268:	mov	r1, r5
   1b26c:	ldr	r2, [r1, #44]	; 0x2c
   1b270:	add	r3, r1, #84	; 0x54
   1b274:	cmp	r2, #0
   1b278:	mov	r2, #84	; 0x54
   1b27c:	movweq	r2, #60	; 0x3c
   1b280:	addeq	r3, r1, #60	; 0x3c
   1b284:	ldr	r1, [r1, r2]
   1b288:	str	r0, [r3]
   1b28c:	cmp	r1, #0
   1b290:	bne	1b26c <gen_bcmp+0x180>
   1b294:	ldr	r0, [r5, #44]	; 0x2c
   1b298:	cmp	r7, #0
   1b29c:	clz	r0, r0
   1b2a0:	lsr	r0, r0, #5
   1b2a4:	str	r0, [r5, #44]	; 0x2c
   1b2a8:	ldr	r1, [r7, #44]	; 0x2c
   1b2ac:	clz	r0, r1
   1b2b0:	lsr	r0, r0, #5
   1b2b4:	str	r0, [r7, #44]	; 0x2c
   1b2b8:	mov	r0, r8
   1b2bc:	str	r7, [sp, #8]
   1b2c0:	beq	1b308 <gen_bcmp+0x21c>
   1b2c4:	cmp	r1, #0
   1b2c8:	mov	r1, #60	; 0x3c
   1b2cc:	add	r0, r7, #60	; 0x3c
   1b2d0:	movweq	r1, #84	; 0x54
   1b2d4:	addeq	r0, r7, #84	; 0x54
   1b2d8:	ldr	r1, [r7, r1]
   1b2dc:	cmp	r1, #0
   1b2e0:	beq	1b308 <gen_bcmp+0x21c>
   1b2e4:	ldr	r2, [r1, #44]	; 0x2c
   1b2e8:	add	r0, r1, #84	; 0x54
   1b2ec:	cmp	r2, #0
   1b2f0:	mov	r2, #84	; 0x54
   1b2f4:	movweq	r2, #60	; 0x3c
   1b2f8:	addeq	r0, r1, #60	; 0x3c
   1b2fc:	ldr	r1, [r1, r2]
   1b300:	cmp	r1, #0
   1b304:	bne	1b2e4 <gen_bcmp+0x1f8>
   1b308:	str	r5, [r0]
   1b30c:	ldr	r0, [r7, #44]	; 0x2c
   1b310:	clz	r0, r0
   1b314:	lsr	r0, r0, #5
   1b318:	str	r0, [r7, #44]	; 0x2c
   1b31c:	ldr	r0, [r5, #96]	; 0x60
   1b320:	str	r0, [r7, #96]	; 0x60
   1b324:	cmp	r4, #3
   1b328:	mov	r5, r7
   1b32c:	bhi	1b23c <gen_bcmp+0x150>
   1b330:	ldr	r2, [sp, #4]
   1b334:	and	r2, r2, #3
   1b338:	cmp	r2, #2
   1b33c:	bcs	1b118 <gen_bcmp+0x2c>
   1b340:	mov	r4, r7
   1b344:	cmp	r2, #1
   1b348:	movne	r0, r4
   1b34c:	subne	sp, fp, #28
   1b350:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b354:	ldrb	r3, [r6]
   1b358:	mov	r0, sl
   1b35c:	mov	r1, r9
   1b360:	mov	r2, #16
   1b364:	bl	9ef4 <gen_cmp>
   1b368:	cmp	r4, #0
   1b36c:	beq	1b434 <gen_bcmp+0x348>
   1b370:	ldr	r1, [r0, #96]	; 0x60
   1b374:	mov	r2, r4
   1b378:	ldr	r3, [r2, #44]	; 0x2c
   1b37c:	add	r7, r2, #84	; 0x54
   1b380:	cmp	r3, #0
   1b384:	mov	r3, #84	; 0x54
   1b388:	movweq	r3, #60	; 0x3c
   1b38c:	addeq	r7, r2, #60	; 0x3c
   1b390:	ldr	r2, [r2, r3]
   1b394:	str	r1, [r7]
   1b398:	cmp	r2, #0
   1b39c:	bne	1b378 <gen_bcmp+0x28c>
   1b3a0:	ldr	r1, [r4, #44]	; 0x2c
   1b3a4:	cmp	r0, #0
   1b3a8:	clz	r1, r1
   1b3ac:	lsr	r1, r1, #5
   1b3b0:	str	r1, [r4, #44]	; 0x2c
   1b3b4:	ldr	r2, [r0, #44]	; 0x2c
   1b3b8:	clz	r1, r2
   1b3bc:	lsr	r1, r1, #5
   1b3c0:	str	r1, [r0, #44]	; 0x2c
   1b3c4:	str	r0, [sp, #12]
   1b3c8:	beq	1b414 <gen_bcmp+0x328>
   1b3cc:	cmp	r2, #0
   1b3d0:	mov	r2, #60	; 0x3c
   1b3d4:	add	r1, r0, #60	; 0x3c
   1b3d8:	movweq	r2, #84	; 0x54
   1b3dc:	addeq	r1, r0, #84	; 0x54
   1b3e0:	ldr	r2, [r0, r2]
   1b3e4:	cmp	r2, #0
   1b3e8:	beq	1b418 <gen_bcmp+0x32c>
   1b3ec:	ldr	r3, [r2, #44]	; 0x2c
   1b3f0:	add	r1, r2, #84	; 0x54
   1b3f4:	cmp	r3, #0
   1b3f8:	mov	r3, #84	; 0x54
   1b3fc:	movweq	r3, #60	; 0x3c
   1b400:	addeq	r1, r2, #60	; 0x3c
   1b404:	ldr	r2, [r2, r3]
   1b408:	cmp	r2, #0
   1b40c:	bne	1b3ec <gen_bcmp+0x300>
   1b410:	b	1b418 <gen_bcmp+0x32c>
   1b414:	add	r1, sp, #12
   1b418:	str	r4, [r1]
   1b41c:	ldr	r1, [r0, #44]	; 0x2c
   1b420:	clz	r1, r1
   1b424:	lsr	r1, r1, #5
   1b428:	str	r1, [r0, #44]	; 0x2c
   1b42c:	ldr	r1, [r4, #96]	; 0x60
   1b430:	str	r1, [r0, #96]	; 0x60
   1b434:	sub	sp, fp, #28
   1b438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b43c <gen_uncond>:
   1b43c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b440:	add	fp, sp, #28
   1b444:	sub	sp, sp, #4
   1b448:	ldr	r8, [pc, #288]	; 1b570 <gen_uncond+0x134>
   1b44c:	mov	sl, r0
   1b450:	add	r8, pc, r8
   1b454:	ldr	r0, [r8, #92]	; 0x5c
   1b458:	ldr	r9, [pc, #276]	; 1b574 <gen_uncond+0x138>
   1b45c:	add	r9, pc, r9
   1b460:	mov	r6, r9
   1b464:	ldr	r5, [r6, r0, lsl #3]!
   1b468:	cmp	r5, #19
   1b46c:	bhi	1b4c0 <gen_uncond+0x84>
   1b470:	add	r7, r0, #1
   1b474:	cmp	r0, #15
   1b478:	str	r7, [r8, #92]	; 0x5c
   1b47c:	bge	1b564 <gen_uncond+0x128>
   1b480:	mov	r0, #1024	; 0x400
   1b484:	lsl	r5, r0, r7
   1b488:	mov	r0, r5
   1b48c:	bl	f1c <malloc@plt>
   1b490:	cmp	r0, #0
   1b494:	str	r0, [r6, #12]
   1b498:	beq	1b564 <gen_uncond+0x128>
   1b49c:	mov	r1, #0
   1b4a0:	mov	r2, r5
   1b4a4:	add	r4, r6, #8
   1b4a8:	bl	f88 <memset@plt>
   1b4ac:	cmp	r5, #20
   1b4b0:	str	r5, [r4]
   1b4b4:	bcc	1b564 <gen_uncond+0x128>
   1b4b8:	add	r6, r9, r7, lsl #3
   1b4bc:	b	1b4c8 <gen_uncond+0x8c>
   1b4c0:	mov	r7, r0
   1b4c4:	mov	r4, r6
   1b4c8:	sub	r0, r5, #20
   1b4cc:	mov	r1, #0
   1b4d0:	str	r0, [r4]
   1b4d4:	ldr	r5, [r4, #4]
   1b4d8:	str	r1, [r5, r0]!
   1b4dc:	clz	r0, sl
   1b4e0:	lsr	r0, r0, #5
   1b4e4:	str	r0, [r5, #12]
   1b4e8:	ldr	r4, [r9, r7, lsl #3]
   1b4ec:	cmp	r4, #207	; 0xcf
   1b4f0:	bhi	1b53c <gen_uncond+0x100>
   1b4f4:	add	r0, r7, #1
   1b4f8:	cmp	r7, #15
   1b4fc:	str	r0, [r8, #92]	; 0x5c
   1b500:	bge	1b564 <gen_uncond+0x128>
   1b504:	mov	r1, #1024	; 0x400
   1b508:	lsl	r4, r1, r0
   1b50c:	mov	r0, r4
   1b510:	bl	f1c <malloc@plt>
   1b514:	cmp	r0, #0
   1b518:	str	r0, [r6, #12]
   1b51c:	beq	1b564 <gen_uncond+0x128>
   1b520:	mov	r1, #0
   1b524:	mov	r2, r4
   1b528:	add	r6, r6, #8
   1b52c:	bl	f88 <memset@plt>
   1b530:	cmp	r4, #207	; 0xcf
   1b534:	str	r4, [r6]
   1b538:	bls	1b564 <gen_uncond+0x128>
   1b53c:	sub	r0, r4, #208	; 0xd0
   1b540:	str	r0, [r6]
   1b544:	ldr	r1, [r6, #4]
   1b548:	add	r0, r1, r0
   1b54c:	mov	r1, #21
   1b550:	str	r5, [r0, #4]
   1b554:	str	r1, [r0, #8]
   1b558:	str	r0, [r0, #96]	; 0x60
   1b55c:	sub	sp, fp, #28
   1b560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b564:	ldr	r0, [pc, #12]	; 1b578 <gen_uncond+0x13c>
   1b568:	add	r0, pc, r0
   1b56c:	bl	2204 <sf_bpf_error>
   1b570:	.word	0x0002b090
   1b574:	.word	0x0002afc4
   1b578:	.word	0x0000de2c

0001b57c <gen_cmp_le>:
   1b57c:	push	{r4, r5, r6, r7, fp, lr}
   1b580:	add	fp, sp, #16
   1b584:	mov	r4, r3
   1b588:	bl	1669c <gen_load_a>
   1b58c:	ldr	r1, [pc, #168]	; 1b63c <gen_cmp_le+0xc0>
   1b590:	mov	r5, r0
   1b594:	add	r1, pc, r1
   1b598:	ldr	r0, [r1, #92]	; 0x5c
   1b59c:	ldr	r7, [pc, #156]	; 1b640 <gen_cmp_le+0xc4>
   1b5a0:	add	r7, pc, r7
   1b5a4:	ldr	r6, [r7, r0, lsl #3]!
   1b5a8:	cmp	r6, #207	; 0xcf
   1b5ac:	bhi	1b5f8 <gen_cmp_le+0x7c>
   1b5b0:	add	r2, r0, #1
   1b5b4:	cmp	r0, #15
   1b5b8:	str	r2, [r1, #92]	; 0x5c
   1b5bc:	bge	1b630 <gen_cmp_le+0xb4>
   1b5c0:	mov	r0, #1024	; 0x400
   1b5c4:	lsl	r6, r0, r2
   1b5c8:	mov	r0, r6
   1b5cc:	bl	f1c <malloc@plt>
   1b5d0:	cmp	r0, #0
   1b5d4:	str	r0, [r7, #12]
   1b5d8:	beq	1b630 <gen_cmp_le+0xb4>
   1b5dc:	mov	r1, #0
   1b5e0:	mov	r2, r6
   1b5e4:	add	r7, r7, #8
   1b5e8:	bl	f88 <memset@plt>
   1b5ec:	cmp	r6, #207	; 0xcf
   1b5f0:	str	r6, [r7]
   1b5f4:	bls	1b630 <gen_cmp_le+0xb4>
   1b5f8:	sub	r0, r6, #208	; 0xd0
   1b5fc:	str	r0, [r7]
   1b600:	ldr	r1, [r7, #4]
   1b604:	add	r0, r1, r0
   1b608:	mov	r1, #37	; 0x25
   1b60c:	str	r5, [r0, #4]
   1b610:	str	r1, [r0, #8]
   1b614:	str	r4, [r0, #20]
   1b618:	ldr	r1, [r0, #44]	; 0x2c
   1b61c:	clz	r1, r1
   1b620:	lsr	r1, r1, #5
   1b624:	str	r1, [r0, #44]	; 0x2c
   1b628:	str	r0, [r0, #96]	; 0x60
   1b62c:	pop	{r4, r5, r6, r7, fp, pc}
   1b630:	ldr	r0, [pc, #12]	; 1b644 <gen_cmp_le+0xc8>
   1b634:	add	r0, pc, r0
   1b638:	bl	2204 <sf_bpf_error>
   1b63c:	.word	0x0002af4c
   1b640:	.word	0x0002ae80
   1b644:	.word	0x0000dd60

0001b648 <gen_hostop>:
   1b648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b64c:	add	fp, sp, #28
   1b650:	sub	sp, sp, #36	; 0x24
   1b654:	cmp	r2, #4
   1b658:	bhi	1c110 <gen_hostop+0xac8>
   1b65c:	mov	r7, r0
   1b660:	add	r0, pc, #20
   1b664:	mov	r6, r1
   1b668:	ldr	r5, [fp, #12]
   1b66c:	ldr	r9, [fp, #8]
   1b670:	mov	sl, r3
   1b674:	ldr	r1, [r0, r2, lsl #2]
   1b678:	add	pc, r0, r1
   1b67c:	.word	0x00000014
   1b680:	.word	0x000001bc
   1b684:	.word	0x000001b8
   1b688:	.word	0x00000014
   1b68c:	.word	0x000000e8
   1b690:	mov	r0, r7
   1b694:	mov	r1, r6
   1b698:	mov	r2, #1
   1b69c:	mov	r3, sl
   1b6a0:	str	r9, [sp]
   1b6a4:	str	r5, [sp, #4]
   1b6a8:	bl	1b648 <gen_hostop>
   1b6ac:	mov	r4, r0
   1b6b0:	mov	r0, r7
   1b6b4:	mov	r1, r6
   1b6b8:	mov	r2, #2
   1b6bc:	mov	r3, sl
   1b6c0:	str	r9, [sp]
   1b6c4:	str	r5, [sp, #4]
   1b6c8:	bl	1b648 <gen_hostop>
   1b6cc:	ldr	r1, [r4, #44]	; 0x2c
   1b6d0:	cmp	r4, #0
   1b6d4:	clz	r1, r1
   1b6d8:	lsr	r3, r1, #5
   1b6dc:	mov	r1, r0
   1b6e0:	str	r3, [r4, #44]	; 0x2c
   1b6e4:	ldr	r2, [r1, #96]!	; 0x60
   1b6e8:	beq	1b720 <gen_hostop+0xd8>
   1b6ec:	mov	r7, r4
   1b6f0:	b	1b6f8 <gen_hostop+0xb0>
   1b6f4:	ldr	r3, [r7, #44]	; 0x2c
   1b6f8:	cmp	r3, #0
   1b6fc:	mov	r3, #84	; 0x54
   1b700:	add	r6, r7, #84	; 0x54
   1b704:	movweq	r3, #60	; 0x3c
   1b708:	addeq	r6, r7, #60	; 0x3c
   1b70c:	ldr	r7, [r7, r3]
   1b710:	str	r2, [r6]
   1b714:	cmp	r7, #0
   1b718:	bne	1b6f4 <gen_hostop+0xac>
   1b71c:	ldr	r3, [r4, #44]	; 0x2c
   1b720:	clz	r2, r3
   1b724:	cmp	r0, #0
   1b728:	lsr	r2, r2, #5
   1b72c:	str	r2, [r4, #44]	; 0x2c
   1b730:	str	r0, [sp, #32]
   1b734:	beq	1b904 <gen_hostop+0x2bc>
   1b738:	mov	r3, r0
   1b73c:	ldr	r7, [r3, #44]	; 0x2c
   1b740:	add	r2, r3, #84	; 0x54
   1b744:	cmp	r7, #0
   1b748:	mov	r7, #84	; 0x54
   1b74c:	movweq	r7, #60	; 0x3c
   1b750:	addeq	r2, r3, #60	; 0x3c
   1b754:	ldr	r3, [r3, r7]
   1b758:	cmp	r3, #0
   1b75c:	bne	1b73c <gen_hostop+0xf4>
   1b760:	b	1b908 <gen_hostop+0x2c0>
   1b764:	mov	r0, sl
   1b768:	bl	6e1c <gen_linktype>
   1b76c:	ldr	r3, [pc, #2464]	; 1c114 <gen_hostop+0xacc>
   1b770:	mov	r8, r0
   1b774:	str	r7, [sp, #28]
   1b778:	str	r6, [sp, #24]
   1b77c:	str	r8, [sp, #20]
   1b780:	add	r3, pc, r3
   1b784:	ldr	r0, [r3, #48]	; 0x30
   1b788:	add	r5, r0, r9
   1b78c:	ldrb	r0, [r3, #16]
   1b790:	cmp	r0, #0
   1b794:	beq	1b920 <gen_hostop+0x2d8>
   1b798:	ldr	r0, [r3, #100]	; 0x64
   1b79c:	cmn	r0, #1
   1b7a0:	bne	1b7b4 <gen_hostop+0x16c>
   1b7a4:	bl	1309c <alloc_reg>
   1b7a8:	ldr	r3, [pc, #2412]	; 1c11c <gen_hostop+0xad4>
   1b7ac:	add	r3, pc, r3
   1b7b0:	str	r0, [r3, #100]	; 0x64
   1b7b4:	ldr	r1, [r3, #92]	; 0x5c
   1b7b8:	ldr	r2, [pc, #2400]	; 1c120 <gen_hostop+0xad8>
   1b7bc:	add	r2, pc, r2
   1b7c0:	mov	r6, r2
   1b7c4:	ldr	r4, [r6, r1, lsl #3]!
   1b7c8:	cmp	r4, #19
   1b7cc:	bhi	1bc94 <gen_hostop+0x64c>
   1b7d0:	add	r7, r1, #1
   1b7d4:	cmp	r1, #15
   1b7d8:	str	r0, [sp, #16]
   1b7dc:	str	r7, [r3, #92]	; 0x5c
   1b7e0:	bge	1bf18 <gen_hostop+0x8d0>
   1b7e4:	mov	r0, #1024	; 0x400
   1b7e8:	lsl	r4, r0, r7
   1b7ec:	mov	r0, r4
   1b7f0:	bl	f1c <malloc@plt>
   1b7f4:	cmp	r0, #0
   1b7f8:	str	r0, [r6, #12]
   1b7fc:	beq	1bf18 <gen_hostop+0x8d0>
   1b800:	mov	r1, #0
   1b804:	mov	r2, r4
   1b808:	add	r6, r6, #8
   1b80c:	bl	f88 <memset@plt>
   1b810:	str	r4, [r6]
   1b814:	cmp	r4, #19
   1b818:	ldr	r3, [pc, #2308]	; 1c124 <gen_hostop+0xadc>
   1b81c:	ldr	r2, [pc, #2308]	; 1c128 <gen_hostop+0xae0>
   1b820:	ldr	r0, [sp, #16]
   1b824:	add	r3, pc, r3
   1b828:	add	r2, pc, r2
   1b82c:	bhi	1bc98 <gen_hostop+0x650>
   1b830:	b	1bf18 <gen_hostop+0x8d0>
   1b834:	mov	r9, r5
   1b838:	mov	r0, sl
   1b83c:	bl	6e1c <gen_linktype>
   1b840:	ldr	r3, [pc, #2296]	; 1c140 <gen_hostop+0xaf8>
   1b844:	mov	sl, r0
   1b848:	str	r7, [sp, #28]
   1b84c:	add	r3, pc, r3
   1b850:	ldr	r0, [r3, #48]	; 0x30
   1b854:	add	r9, r0, r9
   1b858:	ldrb	r0, [r3, #16]
   1b85c:	cmp	r0, #0
   1b860:	beq	1b8fc <gen_hostop+0x2b4>
   1b864:	mov	r8, r6
   1b868:	ldr	r6, [r3, #100]	; 0x64
   1b86c:	str	r9, [sp, #20]
   1b870:	cmn	r6, #1
   1b874:	bne	1b88c <gen_hostop+0x244>
   1b878:	bl	1309c <alloc_reg>
   1b87c:	ldr	r3, [pc, #2244]	; 1c148 <gen_hostop+0xb00>
   1b880:	mov	r6, r0
   1b884:	add	r3, pc, r3
   1b888:	str	r0, [r3, #100]	; 0x64
   1b88c:	ldr	r0, [r3, #92]	; 0x5c
   1b890:	ldr	r9, [pc, #2228]	; 1c14c <gen_hostop+0xb04>
   1b894:	add	r9, pc, r9
   1b898:	mov	r5, r9
   1b89c:	ldr	r4, [r5, r0, lsl #3]!
   1b8a0:	cmp	r4, #19
   1b8a4:	bhi	1b928 <gen_hostop+0x2e0>
   1b8a8:	add	r7, r0, #1
   1b8ac:	cmp	r0, #15
   1b8b0:	str	r7, [r3, #92]	; 0x5c
   1b8b4:	bge	1bf18 <gen_hostop+0x8d0>
   1b8b8:	mov	r0, #1024	; 0x400
   1b8bc:	lsl	r4, r0, r7
   1b8c0:	mov	r0, r4
   1b8c4:	bl	f1c <malloc@plt>
   1b8c8:	cmp	r0, #0
   1b8cc:	str	r0, [r5, #12]
   1b8d0:	beq	1bf18 <gen_hostop+0x8d0>
   1b8d4:	mov	r1, #0
   1b8d8:	mov	r2, r4
   1b8dc:	add	r5, r5, #8
   1b8e0:	bl	f88 <memset@plt>
   1b8e4:	str	r4, [r5]
   1b8e8:	cmp	r4, #19
   1b8ec:	ldr	r3, [pc, #2140]	; 1c150 <gen_hostop+0xb08>
   1b8f0:	add	r3, pc, r3
   1b8f4:	bhi	1b92c <gen_hostop+0x2e4>
   1b8f8:	b	1bf18 <gen_hostop+0x8d0>
   1b8fc:	ldr	r7, [r3, #92]	; 0x5c
   1b900:	b	1b9b8 <gen_hostop+0x370>
   1b904:	add	r2, sp, #32
   1b908:	str	r4, [r2]
   1b90c:	add	r2, r4, #96	; 0x60
   1b910:	ldr	r2, [r2]
   1b914:	str	r2, [r1]
   1b918:	sub	sp, fp, #28
   1b91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b920:	ldr	r7, [r3, #92]	; 0x5c
   1b924:	b	1bd30 <gen_hostop+0x6e8>
   1b928:	mov	r7, r0
   1b92c:	sub	r0, r4, #20
   1b930:	mov	r1, #97	; 0x61
   1b934:	str	r0, [r5]
   1b938:	ldr	r5, [r5, #4]
   1b93c:	str	r1, [r5, r0]!
   1b940:	cmp	r5, #0
   1b944:	str	r6, [r5, #12]
   1b948:	beq	1b9b0 <gen_hostop+0x368>
   1b94c:	ldr	r4, [r9, r7, lsl #3]!
   1b950:	mov	r6, r8
   1b954:	cmp	r4, #19
   1b958:	bhi	1baf0 <gen_hostop+0x4a8>
   1b95c:	add	r8, r7, #1
   1b960:	cmp	r7, #15
   1b964:	str	r8, [r3, #92]	; 0x5c
   1b968:	bge	1bf18 <gen_hostop+0x8d0>
   1b96c:	mov	r0, #1024	; 0x400
   1b970:	lsl	r4, r0, r8
   1b974:	mov	r0, r4
   1b978:	bl	f1c <malloc@plt>
   1b97c:	cmp	r0, #0
   1b980:	str	r0, [r9, #12]
   1b984:	beq	1bf18 <gen_hostop+0x8d0>
   1b988:	mov	r1, #0
   1b98c:	mov	r2, r4
   1b990:	add	r9, r9, #8
   1b994:	bl	f88 <memset@plt>
   1b998:	str	r4, [r9]
   1b99c:	cmp	r4, #19
   1b9a0:	ldr	r3, [pc, #1964]	; 1c154 <gen_hostop+0xb0c>
   1b9a4:	add	r3, pc, r3
   1b9a8:	bhi	1baf4 <gen_hostop+0x4ac>
   1b9ac:	b	1bf18 <gen_hostop+0x8d0>
   1b9b0:	ldr	r9, [sp, #20]
   1b9b4:	mov	r6, r8
   1b9b8:	ldr	r5, [pc, #1924]	; 1c144 <gen_hostop+0xafc>
   1b9bc:	add	r5, pc, r5
   1b9c0:	ldr	r4, [r5, r7, lsl #3]!
   1b9c4:	cmp	r4, #19
   1b9c8:	bhi	1ba20 <gen_hostop+0x3d8>
   1b9cc:	add	r8, r7, #1
   1b9d0:	cmp	r7, #15
   1b9d4:	str	r8, [r3, #92]	; 0x5c
   1b9d8:	bge	1bf18 <gen_hostop+0x8d0>
   1b9dc:	mov	r0, #1024	; 0x400
   1b9e0:	lsl	r4, r0, r8
   1b9e4:	mov	r0, r4
   1b9e8:	bl	f1c <malloc@plt>
   1b9ec:	cmp	r0, #0
   1b9f0:	str	r0, [r5, #12]
   1b9f4:	beq	1bf18 <gen_hostop+0x8d0>
   1b9f8:	mov	r1, #0
   1b9fc:	mov	r2, r4
   1ba00:	add	r5, r5, #8
   1ba04:	bl	f88 <memset@plt>
   1ba08:	str	r4, [r5]
   1ba0c:	cmp	r4, #19
   1ba10:	ldr	r3, [pc, #1856]	; 1c158 <gen_hostop+0xb10>
   1ba14:	add	r3, pc, r3
   1ba18:	bhi	1ba24 <gen_hostop+0x3dc>
   1ba1c:	b	1bf18 <gen_hostop+0x8d0>
   1ba20:	mov	r8, r7
   1ba24:	sub	r0, r4, #20
   1ba28:	mov	r1, #32
   1ba2c:	str	r0, [r5]
   1ba30:	ldr	r5, [r5, #4]
   1ba34:	str	r1, [r5, r0]!
   1ba38:	ldr	r0, [r3, #44]	; 0x2c
   1ba3c:	add	r0, r0, r9
   1ba40:	str	r0, [r5, #12]
   1ba44:	cmn	r6, #1
   1ba48:	beq	1bb30 <gen_hostop+0x4e8>
   1ba4c:	mov	r9, r6
   1ba50:	ldr	r6, [pc, #1796]	; 1c15c <gen_hostop+0xb14>
   1ba54:	add	r6, pc, r6
   1ba58:	ldr	r4, [r6, r8, lsl #3]!
   1ba5c:	cmp	r4, #19
   1ba60:	bhi	1bab8 <gen_hostop+0x470>
   1ba64:	add	r7, r8, #1
   1ba68:	cmp	r8, #15
   1ba6c:	str	r7, [r3, #92]	; 0x5c
   1ba70:	bge	1bf18 <gen_hostop+0x8d0>
   1ba74:	mov	r0, #1024	; 0x400
   1ba78:	lsl	r4, r0, r7
   1ba7c:	mov	r0, r4
   1ba80:	bl	f1c <malloc@plt>
   1ba84:	cmp	r0, #0
   1ba88:	str	r0, [r6, #12]
   1ba8c:	beq	1bf18 <gen_hostop+0x8d0>
   1ba90:	mov	r1, #0
   1ba94:	mov	r2, r4
   1ba98:	add	r6, r6, #8
   1ba9c:	bl	f88 <memset@plt>
   1baa0:	str	r4, [r6]
   1baa4:	cmp	r4, #19
   1baa8:	ldr	r3, [pc, #1712]	; 1c160 <gen_hostop+0xb18>
   1baac:	add	r3, pc, r3
   1bab0:	bhi	1babc <gen_hostop+0x474>
   1bab4:	b	1bf18 <gen_hostop+0x8d0>
   1bab8:	mov	r7, r8
   1babc:	sub	r1, r4, #20
   1bac0:	mov	r2, #84	; 0x54
   1bac4:	str	r1, [r6]
   1bac8:	ldr	r0, [r6, #4]
   1bacc:	str	r2, [r0, r1]!
   1bad0:	mov	r2, r5
   1bad4:	str	r9, [r0, #12]
   1bad8:	mov	r1, r2
   1badc:	ldr	r2, [r2, #16]
   1bae0:	cmp	r2, #0
   1bae4:	bne	1bad8 <gen_hostop+0x490>
   1bae8:	str	r0, [r1, #16]
   1baec:	b	1bb34 <gen_hostop+0x4ec>
   1baf0:	mov	r8, r7
   1baf4:	sub	r1, r4, #20
   1baf8:	mov	r2, #64	; 0x40
   1bafc:	str	r1, [r9]
   1bb00:	ldr	r0, [r9, #4]
   1bb04:	str	r2, [r0, r1]!
   1bb08:	mov	r2, r5
   1bb0c:	ldr	r1, [sp, #20]
   1bb10:	str	r1, [r0, #12]
   1bb14:	mov	r1, r2
   1bb18:	ldr	r2, [r2, #16]
   1bb1c:	cmp	r2, #0
   1bb20:	bne	1bb14 <gen_hostop+0x4cc>
   1bb24:	str	r0, [r1, #16]
   1bb28:	cmn	r6, #1
   1bb2c:	bne	1ba4c <gen_hostop+0x404>
   1bb30:	mov	r7, r8
   1bb34:	ldr	r6, [pc, #1576]	; 1c164 <gen_hostop+0xb1c>
   1bb38:	add	r6, pc, r6
   1bb3c:	ldr	r4, [r6, r7, lsl #3]!
   1bb40:	cmp	r4, #207	; 0xcf
   1bb44:	bhi	1bb98 <gen_hostop+0x550>
   1bb48:	add	r0, r7, #1
   1bb4c:	cmp	r7, #15
   1bb50:	str	r0, [r3, #92]	; 0x5c
   1bb54:	bge	1bf18 <gen_hostop+0x8d0>
   1bb58:	mov	r1, #1024	; 0x400
   1bb5c:	lsl	r4, r1, r0
   1bb60:	mov	r0, r4
   1bb64:	bl	f1c <malloc@plt>
   1bb68:	ldr	r7, [sp, #28]
   1bb6c:	cmp	r0, #0
   1bb70:	str	r0, [r6, #12]
   1bb74:	beq	1bf18 <gen_hostop+0x8d0>
   1bb78:	mov	r1, #0
   1bb7c:	mov	r2, r4
   1bb80:	add	r6, r6, #8
   1bb84:	bl	f88 <memset@plt>
   1bb88:	cmp	r4, #207	; 0xcf
   1bb8c:	str	r4, [r6]
   1bb90:	bhi	1bb9c <gen_hostop+0x554>
   1bb94:	b	1bf18 <gen_hostop+0x8d0>
   1bb98:	ldr	r7, [sp, #28]
   1bb9c:	sub	r0, r4, #208	; 0xd0
   1bba0:	cmp	sl, #0
   1bba4:	str	r0, [r6]
   1bba8:	ldr	r1, [r6, #4]
   1bbac:	add	r0, r1, r0
   1bbb0:	mov	r1, #21
   1bbb4:	str	r5, [r0, #4]
   1bbb8:	str	r1, [r0, #8]
   1bbbc:	str	r7, [r0, #20]
   1bbc0:	str	r0, [r0, #96]	; 0x60
   1bbc4:	beq	1bbf4 <gen_hostop+0x5ac>
   1bbc8:	mov	r1, sl
   1bbcc:	ldr	r2, [r1, #44]	; 0x2c
   1bbd0:	add	r3, r1, #84	; 0x54
   1bbd4:	cmp	r2, #0
   1bbd8:	mov	r2, #84	; 0x54
   1bbdc:	movweq	r2, #60	; 0x3c
   1bbe0:	addeq	r3, r1, #60	; 0x3c
   1bbe4:	ldr	r1, [r1, r2]
   1bbe8:	str	r0, [r3]
   1bbec:	cmp	r1, #0
   1bbf0:	bne	1bbcc <gen_hostop+0x584>
   1bbf4:	ldr	r2, [sl, #44]	; 0x2c
   1bbf8:	add	r1, r0, #96	; 0x60
   1bbfc:	cmp	r0, #0
   1bc00:	clz	r2, r2
   1bc04:	lsr	r2, r2, #5
   1bc08:	str	r2, [sl, #44]	; 0x2c
   1bc0c:	ldr	r2, [r0, #44]	; 0x2c
   1bc10:	clz	r3, r2
   1bc14:	lsr	r3, r3, #5
   1bc18:	str	r3, [r0, #44]	; 0x2c
   1bc1c:	str	r0, [sp, #32]
   1bc20:	beq	1bc68 <gen_hostop+0x620>
   1bc24:	mov	r7, #60	; 0x3c
   1bc28:	cmp	r2, #0
   1bc2c:	mov	r3, r0
   1bc30:	movweq	r7, #84	; 0x54
   1bc34:	ldr	r2, [r3, r7]!
   1bc38:	cmp	r2, #0
   1bc3c:	beq	1bc6c <gen_hostop+0x624>
   1bc40:	ldr	r7, [r2, #44]	; 0x2c
   1bc44:	add	r3, r2, #84	; 0x54
   1bc48:	cmp	r7, #0
   1bc4c:	mov	r7, #84	; 0x54
   1bc50:	movweq	r7, #60	; 0x3c
   1bc54:	addeq	r3, r2, #60	; 0x3c
   1bc58:	ldr	r2, [r2, r7]
   1bc5c:	cmp	r2, #0
   1bc60:	bne	1bc40 <gen_hostop+0x5f8>
   1bc64:	b	1bc6c <gen_hostop+0x624>
   1bc68:	add	r3, sp, #32
   1bc6c:	str	sl, [r3]
   1bc70:	ldr	r2, [r0, #44]	; 0x2c
   1bc74:	clz	r2, r2
   1bc78:	lsr	r2, r2, #5
   1bc7c:	str	r2, [r0, #44]	; 0x2c
   1bc80:	add	r2, sl, #96	; 0x60
   1bc84:	ldr	r2, [r2]
   1bc88:	str	r2, [r1]
   1bc8c:	sub	sp, fp, #28
   1bc90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc94:	mov	r7, r1
   1bc98:	sub	r4, r4, #20
   1bc9c:	mov	r1, #97	; 0x61
   1bca0:	str	r4, [r6]
   1bca4:	ldr	r8, [r6, #4]
   1bca8:	str	r1, [r8, r4]!
   1bcac:	cmp	r8, #0
   1bcb0:	str	r0, [r8, #12]
   1bcb4:	beq	1bd30 <gen_hostop+0x6e8>
   1bcb8:	ldr	r4, [r2, r7, lsl #3]!
   1bcbc:	cmp	r4, #19
   1bcc0:	bhi	1be74 <gen_hostop+0x82c>
   1bcc4:	ldr	r6, [sp, #24]
   1bcc8:	add	r1, r7, #1
   1bccc:	cmp	r7, #15
   1bcd0:	str	r2, [sp, #16]
   1bcd4:	str	r1, [r3, #92]	; 0x5c
   1bcd8:	bge	1bf18 <gen_hostop+0x8d0>
   1bcdc:	mov	r0, #1024	; 0x400
   1bce0:	str	r1, [sp, #12]
   1bce4:	lsl	r4, r0, r1
   1bce8:	mov	r0, r4
   1bcec:	bl	f1c <malloc@plt>
   1bcf0:	ldr	r7, [sp, #16]
   1bcf4:	cmp	r0, #0
   1bcf8:	str	r0, [r7, #12]
   1bcfc:	beq	1bf18 <gen_hostop+0x8d0>
   1bd00:	mov	r1, #0
   1bd04:	mov	r2, r4
   1bd08:	add	r7, r7, #8
   1bd0c:	bl	f88 <memset@plt>
   1bd10:	str	r4, [r7]
   1bd14:	mov	r2, r7
   1bd18:	cmp	r4, #19
   1bd1c:	ldr	r3, [pc, #1032]	; 1c12c <gen_hostop+0xae4>
   1bd20:	ldr	ip, [sp, #12]
   1bd24:	add	r3, pc, r3
   1bd28:	bhi	1be7c <gen_hostop+0x834>
   1bd2c:	b	1bf18 <gen_hostop+0x8d0>
   1bd30:	ldr	r6, [pc, #992]	; 1c118 <gen_hostop+0xad0>
   1bd34:	add	r6, pc, r6
   1bd38:	ldr	r4, [r6, r7, lsl #3]!
   1bd3c:	cmp	r4, #19
   1bd40:	bhi	1bda0 <gen_hostop+0x758>
   1bd44:	add	r1, r7, #1
   1bd48:	cmp	r7, #15
   1bd4c:	str	r1, [r3, #92]	; 0x5c
   1bd50:	bge	1bf18 <gen_hostop+0x8d0>
   1bd54:	mov	r0, #1024	; 0x400
   1bd58:	mov	r7, r1
   1bd5c:	lsl	r4, r0, r1
   1bd60:	mov	r0, r4
   1bd64:	bl	f1c <malloc@plt>
   1bd68:	cmp	r0, #0
   1bd6c:	str	r0, [r6, #12]
   1bd70:	beq	1bf18 <gen_hostop+0x8d0>
   1bd74:	mov	r1, #0
   1bd78:	mov	r2, r4
   1bd7c:	add	r6, r6, #8
   1bd80:	bl	f88 <memset@plt>
   1bd84:	str	r4, [r6]
   1bd88:	cmp	r4, #19
   1bd8c:	mov	ip, r7
   1bd90:	ldr	r3, [pc, #920]	; 1c130 <gen_hostop+0xae8>
   1bd94:	add	r3, pc, r3
   1bd98:	bhi	1bda4 <gen_hostop+0x75c>
   1bd9c:	b	1bf18 <gen_hostop+0x8d0>
   1bda0:	mov	ip, r7
   1bda4:	sub	r0, r4, #20
   1bda8:	mov	r1, #32
   1bdac:	str	r0, [r6]
   1bdb0:	ldr	r8, [r6, #4]
   1bdb4:	str	r1, [r8, r0]!
   1bdb8:	ldr	r0, [r3, #44]	; 0x2c
   1bdbc:	ldr	r6, [sp, #24]
   1bdc0:	add	r0, r0, r5
   1bdc4:	str	r0, [r8, #12]
   1bdc8:	cmn	r6, #1
   1bdcc:	beq	1beb4 <gen_hostop+0x86c>
   1bdd0:	ldr	r6, [pc, #860]	; 1c134 <gen_hostop+0xaec>
   1bdd4:	add	r6, pc, r6
   1bdd8:	ldr	r4, [r6, ip, lsl #3]!
   1bddc:	cmp	r4, #19
   1bde0:	bhi	1be38 <gen_hostop+0x7f0>
   1bde4:	add	r7, ip, #1
   1bde8:	cmp	ip, #15
   1bdec:	str	r7, [r3, #92]	; 0x5c
   1bdf0:	bge	1bf18 <gen_hostop+0x8d0>
   1bdf4:	mov	r0, #1024	; 0x400
   1bdf8:	lsl	r4, r0, r7
   1bdfc:	mov	r0, r4
   1be00:	bl	f1c <malloc@plt>
   1be04:	cmp	r0, #0
   1be08:	str	r0, [r6, #12]
   1be0c:	beq	1bf18 <gen_hostop+0x8d0>
   1be10:	mov	r1, #0
   1be14:	mov	r2, r4
   1be18:	add	r6, r6, #8
   1be1c:	bl	f88 <memset@plt>
   1be20:	str	r4, [r6]
   1be24:	cmp	r4, #19
   1be28:	ldr	r3, [pc, #776]	; 1c138 <gen_hostop+0xaf0>
   1be2c:	add	r3, pc, r3
   1be30:	bhi	1be3c <gen_hostop+0x7f4>
   1be34:	b	1bf18 <gen_hostop+0x8d0>
   1be38:	mov	r7, ip
   1be3c:	sub	r1, r4, #20
   1be40:	mov	r2, #84	; 0x54
   1be44:	str	r1, [r6]
   1be48:	ldr	r0, [r6, #4]
   1be4c:	str	r2, [r0, r1]!
   1be50:	mov	r2, r8
   1be54:	ldr	r1, [sp, #24]
   1be58:	str	r1, [r0, #12]
   1be5c:	mov	r1, r2
   1be60:	ldr	r2, [r2, #16]
   1be64:	cmp	r2, #0
   1be68:	bne	1be5c <gen_hostop+0x814>
   1be6c:	str	r0, [r1, #16]
   1be70:	b	1beb8 <gen_hostop+0x870>
   1be74:	ldr	r6, [sp, #24]
   1be78:	mov	ip, r7
   1be7c:	sub	r1, r4, #20
   1be80:	str	r1, [r2]
   1be84:	ldr	r0, [r2, #4]
   1be88:	mov	r2, #64	; 0x40
   1be8c:	str	r2, [r0, r1]!
   1be90:	mov	r2, r8
   1be94:	str	r5, [r0, #12]
   1be98:	mov	r1, r2
   1be9c:	ldr	r2, [r2, #16]
   1bea0:	cmp	r2, #0
   1bea4:	bne	1be98 <gen_hostop+0x850>
   1bea8:	str	r0, [r1, #16]
   1beac:	cmn	r6, #1
   1beb0:	bne	1bdd0 <gen_hostop+0x788>
   1beb4:	mov	r7, ip
   1beb8:	ldr	r6, [pc, #636]	; 1c13c <gen_hostop+0xaf4>
   1bebc:	add	r6, pc, r6
   1bec0:	ldr	r4, [r6, r7, lsl #3]!
   1bec4:	cmp	r4, #207	; 0xcf
   1bec8:	bhi	1bf24 <gen_hostop+0x8dc>
   1becc:	add	r0, r7, #1
   1bed0:	cmp	r7, #15
   1bed4:	str	r0, [r3, #92]	; 0x5c
   1bed8:	bge	1bf18 <gen_hostop+0x8d0>
   1bedc:	mov	r1, #1024	; 0x400
   1bee0:	lsl	r4, r1, r0
   1bee4:	mov	r0, r4
   1bee8:	bl	f1c <malloc@plt>
   1beec:	ldr	r7, [sp, #28]
   1bef0:	cmp	r0, #0
   1bef4:	str	r0, [r6, #12]
   1bef8:	beq	1bf18 <gen_hostop+0x8d0>
   1befc:	mov	r1, #0
   1bf00:	mov	r2, r4
   1bf04:	add	r6, r6, #8
   1bf08:	bl	f88 <memset@plt>
   1bf0c:	cmp	r4, #207	; 0xcf
   1bf10:	str	r4, [r6]
   1bf14:	bhi	1bf28 <gen_hostop+0x8e0>
   1bf18:	ldr	r0, [pc, #584]	; 1c168 <gen_hostop+0xb20>
   1bf1c:	add	r0, pc, r0
   1bf20:	bl	2204 <sf_bpf_error>
   1bf24:	ldr	r7, [sp, #28]
   1bf28:	sub	r0, r4, #208	; 0xd0
   1bf2c:	ldr	r5, [sp, #20]
   1bf30:	str	r0, [r6]
   1bf34:	ldr	r1, [r6, #4]
   1bf38:	cmp	r5, #0
   1bf3c:	add	r4, r1, r0
   1bf40:	mov	r0, #21
   1bf44:	str	r8, [r4, #4]
   1bf48:	str	r0, [r4, #8]
   1bf4c:	str	r7, [r4, #20]
   1bf50:	str	r4, [r4, #96]	; 0x60
   1bf54:	beq	1bf84 <gen_hostop+0x93c>
   1bf58:	mov	r0, r5
   1bf5c:	ldr	r1, [r0, #44]	; 0x2c
   1bf60:	add	r2, r0, #84	; 0x54
   1bf64:	cmp	r1, #0
   1bf68:	mov	r1, #84	; 0x54
   1bf6c:	movweq	r1, #60	; 0x3c
   1bf70:	addeq	r2, r0, #60	; 0x3c
   1bf74:	ldr	r0, [r0, r1]
   1bf78:	str	r4, [r2]
   1bf7c:	cmp	r0, #0
   1bf80:	bne	1bf5c <gen_hostop+0x914>
   1bf84:	ldr	r0, [r5, #44]	; 0x2c
   1bf88:	ldr	r6, [fp, #12]
   1bf8c:	cmp	r4, #0
   1bf90:	clz	r0, r0
   1bf94:	lsr	r0, r0, #5
   1bf98:	str	r0, [r5, #44]	; 0x2c
   1bf9c:	ldr	r0, [r4, #44]	; 0x2c
   1bfa0:	clz	r1, r0
   1bfa4:	lsr	r1, r1, #5
   1bfa8:	str	r1, [r4, #44]	; 0x2c
   1bfac:	ldr	r1, [sp, #24]
   1bfb0:	str	r4, [sp, #32]
   1bfb4:	beq	1bffc <gen_hostop+0x9b4>
   1bfb8:	mov	r2, #60	; 0x3c
   1bfbc:	cmp	r0, #0
   1bfc0:	mov	r3, r4
   1bfc4:	movweq	r2, #84	; 0x54
   1bfc8:	ldr	r0, [r3, r2]!
   1bfcc:	cmp	r0, #0
   1bfd0:	beq	1c000 <gen_hostop+0x9b8>
   1bfd4:	ldr	r2, [r0, #44]	; 0x2c
   1bfd8:	add	r3, r0, #84	; 0x54
   1bfdc:	cmp	r2, #0
   1bfe0:	mov	r2, #84	; 0x54
   1bfe4:	movweq	r2, #60	; 0x3c
   1bfe8:	addeq	r3, r0, #60	; 0x3c
   1bfec:	ldr	r0, [r0, r2]
   1bff0:	cmp	r0, #0
   1bff4:	bne	1bfd4 <gen_hostop+0x98c>
   1bff8:	b	1c000 <gen_hostop+0x9b8>
   1bffc:	add	r3, sp, #32
   1c000:	str	r5, [r3]
   1c004:	mov	r2, #2
   1c008:	mov	r3, sl
   1c00c:	ldr	r0, [r4, #44]	; 0x2c
   1c010:	clz	r0, r0
   1c014:	lsr	r0, r0, #5
   1c018:	str	r0, [r4, #44]	; 0x2c
   1c01c:	ldr	r0, [r5, #96]	; 0x60
   1c020:	str	r0, [r4, #96]	; 0x60
   1c024:	mov	r0, r7
   1c028:	str	r9, [sp]
   1c02c:	str	r6, [sp, #4]
   1c030:	bl	1b648 <gen_hostop>
   1c034:	mov	r1, r0
   1c038:	cmp	r4, #0
   1c03c:	ldr	r2, [r1, #96]!	; 0x60
   1c040:	beq	1c070 <gen_hostop+0xa28>
   1c044:	mov	r3, r4
   1c048:	ldr	r7, [r3, #44]	; 0x2c
   1c04c:	add	r6, r3, #84	; 0x54
   1c050:	cmp	r7, #0
   1c054:	mov	r7, #84	; 0x54
   1c058:	movweq	r7, #60	; 0x3c
   1c05c:	addeq	r6, r3, #60	; 0x3c
   1c060:	ldr	r3, [r3, r7]
   1c064:	str	r2, [r6]
   1c068:	cmp	r3, #0
   1c06c:	bne	1c048 <gen_hostop+0xa00>
   1c070:	ldr	r3, [r4, #44]	; 0x2c
   1c074:	add	r2, r4, #96	; 0x60
   1c078:	cmp	r0, #0
   1c07c:	clz	r3, r3
   1c080:	lsr	r3, r3, #5
   1c084:	str	r3, [r4, #44]	; 0x2c
   1c088:	ldr	r7, [r0, #44]	; 0x2c
   1c08c:	clz	r3, r7
   1c090:	lsr	r3, r3, #5
   1c094:	str	r3, [r0, #44]	; 0x2c
   1c098:	str	r0, [sp, #32]
   1c09c:	beq	1c0e8 <gen_hostop+0xaa0>
   1c0a0:	cmp	r7, #0
   1c0a4:	mov	r7, #60	; 0x3c
   1c0a8:	add	r3, r0, #60	; 0x3c
   1c0ac:	movweq	r7, #84	; 0x54
   1c0b0:	addeq	r3, r0, #84	; 0x54
   1c0b4:	ldr	r7, [r0, r7]
   1c0b8:	cmp	r7, #0
   1c0bc:	beq	1c0ec <gen_hostop+0xaa4>
   1c0c0:	ldr	r6, [r7, #44]	; 0x2c
   1c0c4:	add	r3, r7, #84	; 0x54
   1c0c8:	cmp	r6, #0
   1c0cc:	mov	r6, #84	; 0x54
   1c0d0:	movweq	r6, #60	; 0x3c
   1c0d4:	addeq	r3, r7, #60	; 0x3c
   1c0d8:	ldr	r7, [r7, r6]
   1c0dc:	cmp	r7, #0
   1c0e0:	bne	1c0c0 <gen_hostop+0xa78>
   1c0e4:	b	1c0ec <gen_hostop+0xaa4>
   1c0e8:	add	r3, sp, #32
   1c0ec:	str	r4, [r3]
   1c0f0:	ldr	r3, [r0, #44]	; 0x2c
   1c0f4:	clz	r3, r3
   1c0f8:	lsr	r3, r3, #5
   1c0fc:	str	r3, [r0, #44]	; 0x2c
   1c100:	ldr	r2, [r2]
   1c104:	str	r2, [r1]
   1c108:	sub	sp, fp, #28
   1c10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c110:	bl	100c <abort@plt>
   1c114:	.word	0x0002ad60
   1c118:	.word	0x0002a6ec
   1c11c:	.word	0x0002ad34
   1c120:	.word	0x0002ac64
   1c124:	.word	0x0002acbc
   1c128:	.word	0x0002abf8
   1c12c:	.word	0x0002a7bc
   1c130:	.word	0x0002a74c
   1c134:	.word	0x0002a64c
   1c138:	.word	0x0002a6b4
   1c13c:	.word	0x0002a564
   1c140:	.word	0x0002ac94
   1c144:	.word	0x0002aa64
   1c148:	.word	0x0002ac5c
   1c14c:	.word	0x0002ab8c
   1c150:	.word	0x0002abf0
   1c154:	.word	0x0002ab3c
   1c158:	.word	0x0002aacc
   1c15c:	.word	0x0002a9cc
   1c160:	.word	0x0002aa34
   1c164:	.word	0x0002a8e8
   1c168:	.word	0x0000d478

0001c16c <gen_dnhostop>:
   1c16c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c170:	add	fp, sp, #28
   1c174:	sub	sp, sp, #28
   1c178:	cmp	r1, #24
   1c17c:	bhi	1d744 <gen_dnhostop+0x15d8>
   1c180:	mov	sl, r0
   1c184:	add	r0, pc, #12
   1c188:	mov	r9, #1
   1c18c:	mov	r6, #7
   1c190:	ldr	r1, [r0, r1, lsl #2]
   1c194:	add	pc, r0, r1
   1c198:	.word	0x00000064
   1c19c:	.word	0x0000011c
   1c1a0:	.word	0x00000124
   1c1a4:	.word	0x00000064
   1c1a8:	.word	0x000001f8
   1c1ac:	.word	0x000015ac
   1c1b0:	.word	0x000015ac
   1c1b4:	.word	0x000015ac
   1c1b8:	.word	0x000015ac
   1c1bc:	.word	0x000015ac
   1c1c0:	.word	0x000015ac
   1c1c4:	.word	0x000015ac
   1c1c8:	.word	0x000015ac
   1c1cc:	.word	0x000015ac
   1c1d0:	.word	0x000015ac
   1c1d4:	.word	0x000015ac
   1c1d8:	.word	0x000015ac
   1c1dc:	.word	0x000015ac
   1c1e0:	.word	0x000015ac
   1c1e4:	.word	0x000015ac
   1c1e8:	.word	0x000015ac
   1c1ec:	.word	0x000015ac
   1c1f0:	.word	0x000015ac
   1c1f4:	.word	0x000015ac
   1c1f8:	.word	0x000015b0
   1c1fc:	mov	r0, sl
   1c200:	mov	r1, #1
   1c204:	bl	1c16c <gen_dnhostop>
   1c208:	mov	r4, r0
   1c20c:	mov	r0, sl
   1c210:	mov	r1, #2
   1c214:	bl	1c16c <gen_dnhostop>
   1c218:	mov	r5, r0
   1c21c:	ldr	r0, [r4, #44]	; 0x2c
   1c220:	cmp	r4, #0
   1c224:	clz	r0, r0
   1c228:	lsr	r0, r0, #5
   1c22c:	str	r0, [r4, #44]	; 0x2c
   1c230:	beq	1c26c <gen_dnhostop+0x100>
   1c234:	ldr	r1, [r5, #96]	; 0x60
   1c238:	mov	r2, r4
   1c23c:	b	1c244 <gen_dnhostop+0xd8>
   1c240:	ldr	r0, [r2, #44]	; 0x2c
   1c244:	cmp	r0, #0
   1c248:	mov	r0, #84	; 0x54
   1c24c:	add	r3, r2, #84	; 0x54
   1c250:	movweq	r0, #60	; 0x3c
   1c254:	addeq	r3, r2, #60	; 0x3c
   1c258:	ldr	r2, [r2, r0]
   1c25c:	str	r1, [r3]
   1c260:	cmp	r2, #0
   1c264:	bne	1c240 <gen_dnhostop+0xd4>
   1c268:	ldr	r0, [r4, #44]	; 0x2c
   1c26c:	clz	r0, r0
   1c270:	cmp	r5, #0
   1c274:	lsr	r0, r0, #5
   1c278:	str	r0, [r4, #44]	; 0x2c
   1c27c:	str	r5, [sp, #24]
   1c280:	beq	1c45c <gen_dnhostop+0x2f0>
   1c284:	mov	r1, r5
   1c288:	ldr	r2, [r1, #44]	; 0x2c
   1c28c:	add	r0, r1, #84	; 0x54
   1c290:	cmp	r2, #0
   1c294:	mov	r2, #84	; 0x54
   1c298:	movweq	r2, #60	; 0x3c
   1c29c:	addeq	r0, r1, #60	; 0x3c
   1c2a0:	ldr	r1, [r1, r2]
   1c2a4:	cmp	r1, #0
   1c2a8:	bne	1c288 <gen_dnhostop+0x11c>
   1c2ac:	str	r4, [r0]
   1c2b0:	b	1d724 <gen_dnhostop+0x15b8>
   1c2b4:	mov	r9, #3
   1c2b8:	mov	r6, #15
   1c2bc:	movw	r0, #24579	; 0x6003
   1c2c0:	bl	6e1c <gen_linktype>
   1c2c4:	ldr	r3, [pc, #4020]	; 1d280 <gen_dnhostop+0x1114>
   1c2c8:	add	r3, pc, r3
   1c2cc:	ldrb	r2, [r3, #16]
   1c2d0:	ldr	r1, [r3, #48]	; 0x30
   1c2d4:	add	ip, r1, #2
   1c2d8:	cmp	r2, #0
   1c2dc:	add	r1, sp, #8
   1c2e0:	stm	r1, {r0, r6, r9}
   1c2e4:	beq	1c388 <gen_dnhostop+0x21c>
   1c2e8:	ldr	r8, [r3, #100]	; 0x64
   1c2ec:	cmn	r8, #1
   1c2f0:	bne	1c310 <gen_dnhostop+0x1a4>
   1c2f4:	mov	r4, ip
   1c2f8:	bl	1309c <alloc_reg>
   1c2fc:	ldr	r3, [pc, #3968]	; 1d284 <gen_dnhostop+0x1118>
   1c300:	mov	ip, r4
   1c304:	mov	r8, r0
   1c308:	add	r3, pc, r3
   1c30c:	str	r0, [r3, #100]	; 0x64
   1c310:	ldr	r0, [r3, #92]	; 0x5c
   1c314:	ldr	r9, [pc, #4088]	; 1d314 <gen_dnhostop+0x11a8>
   1c318:	add	r9, pc, r9
   1c31c:	mov	r5, r9
   1c320:	ldr	r7, [r5, r0, lsl #3]!
   1c324:	cmp	r7, #19
   1c328:	bhi	1c468 <gen_dnhostop+0x2fc>
   1c32c:	add	r4, r0, #1
   1c330:	cmp	r0, #15
   1c334:	str	ip, [sp, #20]
   1c338:	str	r4, [r3, #92]	; 0x5c
   1c33c:	bge	1d738 <gen_dnhostop+0x15cc>
   1c340:	mov	r0, #1024	; 0x400
   1c344:	lsl	r7, r0, r4
   1c348:	mov	r0, r7
   1c34c:	bl	f1c <malloc@plt>
   1c350:	cmp	r0, #0
   1c354:	str	r0, [r5, #12]
   1c358:	beq	1d738 <gen_dnhostop+0x15cc>
   1c35c:	mov	r1, #0
   1c360:	mov	r2, r7
   1c364:	add	r5, r5, #8
   1c368:	bl	f88 <memset@plt>
   1c36c:	str	r7, [r5]
   1c370:	cmp	r7, #19
   1c374:	ldr	r3, [pc, #4052]	; 1d350 <gen_dnhostop+0x11e4>
   1c378:	ldr	ip, [sp, #20]
   1c37c:	add	r3, pc, r3
   1c380:	bhi	1c46c <gen_dnhostop+0x300>
   1c384:	b	1d738 <gen_dnhostop+0x15cc>
   1c388:	ldr	r4, [r3, #92]	; 0x5c
   1c38c:	b	1c4f4 <gen_dnhostop+0x388>
   1c390:	mov	r0, sl
   1c394:	mov	r1, #1
   1c398:	bl	1c16c <gen_dnhostop>
   1c39c:	mov	r4, r0
   1c3a0:	mov	r0, sl
   1c3a4:	mov	r1, #2
   1c3a8:	bl	1c16c <gen_dnhostop>
   1c3ac:	mov	r5, r0
   1c3b0:	cmp	r4, #0
   1c3b4:	beq	1c3e8 <gen_dnhostop+0x27c>
   1c3b8:	ldr	r0, [r5, #96]	; 0x60
   1c3bc:	mov	r1, r4
   1c3c0:	ldr	r2, [r1, #44]	; 0x2c
   1c3c4:	add	r3, r1, #84	; 0x54
   1c3c8:	cmp	r2, #0
   1c3cc:	mov	r2, #84	; 0x54
   1c3d0:	movweq	r2, #60	; 0x3c
   1c3d4:	addeq	r3, r1, #60	; 0x3c
   1c3d8:	ldr	r1, [r1, r2]
   1c3dc:	str	r0, [r3]
   1c3e0:	cmp	r1, #0
   1c3e4:	bne	1c3c0 <gen_dnhostop+0x254>
   1c3e8:	ldr	r0, [r4, #44]	; 0x2c
   1c3ec:	cmp	r5, #0
   1c3f0:	clz	r0, r0
   1c3f4:	lsr	r0, r0, #5
   1c3f8:	str	r0, [r4, #44]	; 0x2c
   1c3fc:	ldr	r1, [r5, #44]	; 0x2c
   1c400:	clz	r0, r1
   1c404:	lsr	r0, r0, #5
   1c408:	str	r0, [r5, #44]	; 0x2c
   1c40c:	str	r5, [sp, #24]
   1c410:	beq	1d70c <gen_dnhostop+0x15a0>
   1c414:	cmp	r1, #0
   1c418:	mov	r1, #60	; 0x3c
   1c41c:	add	r0, r5, #60	; 0x3c
   1c420:	movweq	r1, #84	; 0x54
   1c424:	addeq	r0, r5, #84	; 0x54
   1c428:	ldr	r1, [r5, r1]
   1c42c:	cmp	r1, #0
   1c430:	beq	1d710 <gen_dnhostop+0x15a4>
   1c434:	ldr	r2, [r1, #44]	; 0x2c
   1c438:	add	r0, r1, #84	; 0x54
   1c43c:	cmp	r2, #0
   1c440:	mov	r2, #84	; 0x54
   1c444:	movweq	r2, #60	; 0x3c
   1c448:	addeq	r0, r1, #60	; 0x3c
   1c44c:	ldr	r1, [r1, r2]
   1c450:	cmp	r1, #0
   1c454:	bne	1c434 <gen_dnhostop+0x2c8>
   1c458:	b	1d710 <gen_dnhostop+0x15a4>
   1c45c:	add	r0, sp, #24
   1c460:	str	r4, [r0]
   1c464:	b	1d724 <gen_dnhostop+0x15b8>
   1c468:	mov	r4, r0
   1c46c:	sub	r0, r7, #20
   1c470:	mov	r1, #97	; 0x61
   1c474:	str	r0, [r5]
   1c478:	ldr	r7, [r5, #4]
   1c47c:	str	r1, [r7, r0]!
   1c480:	cmp	r7, #0
   1c484:	str	r8, [r7, #12]
   1c488:	beq	1c4f4 <gen_dnhostop+0x388>
   1c48c:	ldr	r6, [r9, r4, lsl #3]!
   1c490:	cmp	r6, #19
   1c494:	bhi	1c58c <gen_dnhostop+0x420>
   1c498:	add	r8, r4, #1
   1c49c:	cmp	r4, #15
   1c4a0:	str	r8, [r3, #92]	; 0x5c
   1c4a4:	bge	1d738 <gen_dnhostop+0x15cc>
   1c4a8:	mov	r0, #1024	; 0x400
   1c4ac:	mov	r5, ip
   1c4b0:	lsl	r6, r0, r8
   1c4b4:	mov	r0, r6
   1c4b8:	bl	f1c <malloc@plt>
   1c4bc:	cmp	r0, #0
   1c4c0:	str	r0, [r9, #12]
   1c4c4:	beq	1d738 <gen_dnhostop+0x15cc>
   1c4c8:	mov	r1, #0
   1c4cc:	mov	r2, r6
   1c4d0:	add	r9, r9, #8
   1c4d4:	bl	f88 <memset@plt>
   1c4d8:	str	r6, [r9]
   1c4dc:	cmp	r6, #19
   1c4e0:	mov	ip, r5
   1c4e4:	ldr	r3, [pc, #3852]	; 1d3f8 <gen_dnhostop+0x128c>
   1c4e8:	add	r3, pc, r3
   1c4ec:	bhi	1c590 <gen_dnhostop+0x424>
   1c4f0:	b	1d738 <gen_dnhostop+0x15cc>
   1c4f4:	ldr	r5, [pc, #3840]	; 1d3fc <gen_dnhostop+0x1290>
   1c4f8:	add	r5, pc, r5
   1c4fc:	ldr	r6, [r5, r4, lsl #3]!
   1c500:	cmp	r6, #19
   1c504:	bhi	1c564 <gen_dnhostop+0x3f8>
   1c508:	add	r8, r4, #1
   1c50c:	cmp	r4, #15
   1c510:	str	r8, [r3, #92]	; 0x5c
   1c514:	bge	1d738 <gen_dnhostop+0x15cc>
   1c518:	mov	r0, #1024	; 0x400
   1c51c:	mov	r7, ip
   1c520:	lsl	r6, r0, r8
   1c524:	mov	r0, r6
   1c528:	bl	f1c <malloc@plt>
   1c52c:	cmp	r0, #0
   1c530:	str	r0, [r5, #12]
   1c534:	beq	1d738 <gen_dnhostop+0x15cc>
   1c538:	mov	r1, #0
   1c53c:	mov	r2, r6
   1c540:	add	r5, r5, #8
   1c544:	bl	f88 <memset@plt>
   1c548:	str	r6, [r5]
   1c54c:	cmp	r6, #19
   1c550:	mov	ip, r7
   1c554:	ldr	r3, [pc, #3748]	; 1d400 <gen_dnhostop+0x1294>
   1c558:	add	r3, pc, r3
   1c55c:	bhi	1c568 <gen_dnhostop+0x3fc>
   1c560:	b	1d738 <gen_dnhostop+0x15cc>
   1c564:	mov	r8, r4
   1c568:	sub	r0, r6, #20
   1c56c:	mov	r1, #40	; 0x28
   1c570:	str	r0, [r5]
   1c574:	ldr	r7, [r5, #4]
   1c578:	str	r1, [r7, r0]!
   1c57c:	ldr	r0, [r3, #44]	; 0x2c
   1c580:	add	r0, r0, ip
   1c584:	str	r0, [r7, #12]
   1c588:	b	1c5c0 <gen_dnhostop+0x454>
   1c58c:	mov	r8, r4
   1c590:	sub	r1, r6, #20
   1c594:	mov	r2, #72	; 0x48
   1c598:	str	r1, [r9]
   1c59c:	ldr	r0, [r9, #4]
   1c5a0:	str	r2, [r0, r1]!
   1c5a4:	mov	r2, r7
   1c5a8:	str	ip, [r0, #12]
   1c5ac:	mov	r1, r2
   1c5b0:	ldr	r2, [r2, #16]
   1c5b4:	cmp	r2, #0
   1c5b8:	bne	1c5ac <gen_dnhostop+0x440>
   1c5bc:	str	r0, [r1, #16]
   1c5c0:	ldr	r5, [pc, #4032]	; 1d588 <gen_dnhostop+0x141c>
   1c5c4:	add	r5, pc, r5
   1c5c8:	ldr	r6, [r5, r8, lsl #3]!
   1c5cc:	cmp	r6, #19
   1c5d0:	bhi	1c630 <gen_dnhostop+0x4c4>
   1c5d4:	add	r4, r8, #1
   1c5d8:	cmp	r8, #15
   1c5dc:	str	r4, [r3, #92]	; 0x5c
   1c5e0:	bge	1d738 <gen_dnhostop+0x15cc>
   1c5e4:	mov	r0, #1024	; 0x400
   1c5e8:	lsl	r6, r0, r4
   1c5ec:	mov	r0, r6
   1c5f0:	bl	f1c <malloc@plt>
   1c5f4:	str	r0, [r5, #12]
   1c5f8:	cmp	r0, #0
   1c5fc:	ldr	r8, [pc, #4092]	; 1d600 <gen_dnhostop+0x1494>
   1c600:	add	r8, pc, r8
   1c604:	beq	1d738 <gen_dnhostop+0x15cc>
   1c608:	mov	r1, #0
   1c60c:	mov	r2, r6
   1c610:	add	r5, r5, #8
   1c614:	bl	f88 <memset@plt>
   1c618:	str	r6, [r5]
   1c61c:	cmp	r6, #19
   1c620:	ldr	r3, [pc, #4060]	; 1d604 <gen_dnhostop+0x1498>
   1c624:	add	r3, pc, r3
   1c628:	bhi	1c63c <gen_dnhostop+0x4d0>
   1c62c:	b	1d738 <gen_dnhostop+0x15cc>
   1c630:	mov	r4, r8
   1c634:	ldr	r8, [pc, #4044]	; 1d608 <gen_dnhostop+0x149c>
   1c638:	add	r8, pc, r8
   1c63c:	sub	r1, r6, #20
   1c640:	mov	r2, #84	; 0x54
   1c644:	str	r1, [r5]
   1c648:	ldr	r0, [r5, #4]
   1c64c:	str	r2, [r0, r1]!
   1c650:	movw	r1, #65287	; 0xff07
   1c654:	mov	r2, r7
   1c658:	str	r1, [r0, #12]
   1c65c:	mov	r1, r2
   1c660:	ldr	r2, [r2, #16]
   1c664:	cmp	r2, #0
   1c668:	bne	1c65c <gen_dnhostop+0x4f0>
   1c66c:	str	r0, [r1, #16]
   1c670:	mov	r5, r8
   1c674:	ldr	r6, [r5, r4, lsl #3]!
   1c678:	cmp	r6, #207	; 0xcf
   1c67c:	bhi	1c6c8 <gen_dnhostop+0x55c>
   1c680:	add	r0, r4, #1
   1c684:	cmp	r4, #15
   1c688:	str	r0, [r3, #92]	; 0x5c
   1c68c:	bge	1d738 <gen_dnhostop+0x15cc>
   1c690:	mov	r1, #1024	; 0x400
   1c694:	lsl	r6, r1, r0
   1c698:	mov	r0, r6
   1c69c:	bl	f1c <malloc@plt>
   1c6a0:	cmp	r0, #0
   1c6a4:	str	r0, [r5, #12]
   1c6a8:	beq	1d738 <gen_dnhostop+0x15cc>
   1c6ac:	mov	r1, #0
   1c6b0:	mov	r2, r6
   1c6b4:	add	r5, r5, #8
   1c6b8:	bl	f88 <memset@plt>
   1c6bc:	cmp	r6, #207	; 0xcf
   1c6c0:	str	r6, [r5]
   1c6c4:	bls	1d738 <gen_dnhostop+0x15cc>
   1c6c8:	sub	r0, r6, #208	; 0xd0
   1c6cc:	mov	r2, #8
   1c6d0:	str	r0, [r5]
   1c6d4:	ldr	r1, [r5, #4]
   1c6d8:	add	r4, r1, r0
   1c6dc:	mov	r0, #21
   1c6e0:	str	r7, [r4, #4]
   1c6e4:	str	r0, [r4, #8]
   1c6e8:	movw	r0, #33030	; 0x8106
   1c6ec:	str	r0, [r4, #20]
   1c6f0:	ldr	r0, [sp, #12]
   1c6f4:	str	r4, [r4, #96]	; 0x60
   1c6f8:	add	r1, r0, #3
   1c6fc:	rev	r0, sl
   1c700:	lsr	r3, r0, #16
   1c704:	mov	r0, #3
   1c708:	str	r3, [sp, #20]
   1c70c:	bl	9ef4 <gen_cmp>
   1c710:	mov	sl, r0
   1c714:	cmp	r4, #0
   1c718:	beq	1c74c <gen_dnhostop+0x5e0>
   1c71c:	ldr	r0, [sl, #96]	; 0x60
   1c720:	mov	r1, r4
   1c724:	ldr	r2, [r1, #44]	; 0x2c
   1c728:	add	r3, r1, #84	; 0x54
   1c72c:	cmp	r2, #0
   1c730:	mov	r2, #84	; 0x54
   1c734:	movweq	r2, #60	; 0x3c
   1c738:	addeq	r3, r1, #60	; 0x3c
   1c73c:	ldr	r1, [r1, r2]
   1c740:	str	r0, [r3]
   1c744:	cmp	r1, #0
   1c748:	bne	1c724 <gen_dnhostop+0x5b8>
   1c74c:	ldr	r0, [r4, #44]	; 0x2c
   1c750:	cmp	sl, #0
   1c754:	clz	r0, r0
   1c758:	lsr	r0, r0, #5
   1c75c:	str	r0, [r4, #44]	; 0x2c
   1c760:	ldr	r1, [sl, #44]	; 0x2c
   1c764:	clz	r0, r1
   1c768:	lsr	r0, r0, #5
   1c76c:	str	r0, [sl, #44]	; 0x2c
   1c770:	str	sl, [sp, #24]
   1c774:	ldr	r3, [pc, #4060]	; 1d758 <gen_dnhostop+0x15ec>
   1c778:	add	r3, pc, r3
   1c77c:	beq	1c7c8 <gen_dnhostop+0x65c>
   1c780:	cmp	r1, #0
   1c784:	mov	r1, #60	; 0x3c
   1c788:	add	r0, sl, #60	; 0x3c
   1c78c:	movweq	r1, #84	; 0x54
   1c790:	addeq	r0, sl, #84	; 0x54
   1c794:	ldr	r1, [sl, r1]
   1c798:	cmp	r1, #0
   1c79c:	beq	1c7cc <gen_dnhostop+0x660>
   1c7a0:	ldr	r2, [r1, #44]	; 0x2c
   1c7a4:	add	r0, r1, #84	; 0x54
   1c7a8:	cmp	r2, #0
   1c7ac:	mov	r2, #84	; 0x54
   1c7b0:	movweq	r2, #60	; 0x3c
   1c7b4:	addeq	r0, r1, #60	; 0x3c
   1c7b8:	ldr	r1, [r1, r2]
   1c7bc:	cmp	r1, #0
   1c7c0:	bne	1c7a0 <gen_dnhostop+0x634>
   1c7c4:	b	1c7cc <gen_dnhostop+0x660>
   1c7c8:	add	r0, sp, #24
   1c7cc:	str	r4, [r0]
   1c7d0:	ldr	r0, [sl, #44]	; 0x2c
   1c7d4:	clz	r0, r0
   1c7d8:	lsr	r0, r0, #5
   1c7dc:	str	r0, [sl, #44]	; 0x2c
   1c7e0:	ldr	r0, [r4, #96]	; 0x60
   1c7e4:	str	r0, [sl, #96]	; 0x60
   1c7e8:	ldrb	r0, [r3, #16]
   1c7ec:	ldr	r1, [r3, #48]	; 0x30
   1c7f0:	add	r4, r1, #2
   1c7f4:	cmp	r0, #0
   1c7f8:	beq	1c884 <gen_dnhostop+0x718>
   1c7fc:	ldr	r9, [r3, #100]	; 0x64
   1c800:	cmn	r9, #1
   1c804:	bne	1c81c <gen_dnhostop+0x6b0>
   1c808:	bl	1309c <alloc_reg>
   1c80c:	ldr	r3, [pc, #3912]	; 1d75c <gen_dnhostop+0x15f0>
   1c810:	mov	r9, r0
   1c814:	add	r3, pc, r3
   1c818:	str	r0, [r3, #100]	; 0x64
   1c81c:	ldr	r0, [r3, #92]	; 0x5c
   1c820:	mov	r5, r8
   1c824:	ldr	r6, [r5, r0, lsl #3]!
   1c828:	cmp	r6, #19
   1c82c:	bhi	1c8ec <gen_dnhostop+0x780>
   1c830:	add	r7, r0, #1
   1c834:	cmp	r0, #15
   1c838:	str	r7, [r3, #92]	; 0x5c
   1c83c:	bge	1d738 <gen_dnhostop+0x15cc>
   1c840:	mov	r0, #1024	; 0x400
   1c844:	lsl	r6, r0, r7
   1c848:	mov	r0, r6
   1c84c:	bl	f1c <malloc@plt>
   1c850:	cmp	r0, #0
   1c854:	str	r0, [r5, #12]
   1c858:	beq	1d738 <gen_dnhostop+0x15cc>
   1c85c:	mov	r1, #0
   1c860:	mov	r2, r6
   1c864:	add	r5, r5, #8
   1c868:	bl	f88 <memset@plt>
   1c86c:	str	r6, [r5]
   1c870:	cmp	r6, #19
   1c874:	ldr	r3, [pc, #3812]	; 1d760 <gen_dnhostop+0x15f4>
   1c878:	add	r3, pc, r3
   1c87c:	bhi	1c8f0 <gen_dnhostop+0x784>
   1c880:	b	1d738 <gen_dnhostop+0x15cc>
   1c884:	ldr	r7, [r3, #92]	; 0x5c
   1c888:	mov	r5, r8
   1c88c:	ldr	r6, [r5, r7, lsl #3]!
   1c890:	cmp	r6, #19
   1c894:	bhi	1c990 <gen_dnhostop+0x824>
   1c898:	add	r9, r7, #1
   1c89c:	cmp	r7, #15
   1c8a0:	str	r9, [r3, #92]	; 0x5c
   1c8a4:	bge	1d738 <gen_dnhostop+0x15cc>
   1c8a8:	mov	r0, #1024	; 0x400
   1c8ac:	lsl	r6, r0, r9
   1c8b0:	mov	r0, r6
   1c8b4:	bl	f1c <malloc@plt>
   1c8b8:	cmp	r0, #0
   1c8bc:	str	r0, [r5, #12]
   1c8c0:	beq	1d738 <gen_dnhostop+0x15cc>
   1c8c4:	mov	r1, #0
   1c8c8:	mov	r2, r6
   1c8cc:	add	r5, r5, #8
   1c8d0:	bl	f88 <memset@plt>
   1c8d4:	str	r6, [r5]
   1c8d8:	cmp	r6, #19
   1c8dc:	ldr	r3, [pc, #3724]	; 1d770 <gen_dnhostop+0x1604>
   1c8e0:	add	r3, pc, r3
   1c8e4:	bhi	1c994 <gen_dnhostop+0x828>
   1c8e8:	b	1d738 <gen_dnhostop+0x15cc>
   1c8ec:	mov	r7, r0
   1c8f0:	sub	r0, r6, #20
   1c8f4:	mov	r1, #97	; 0x61
   1c8f8:	str	r0, [r5]
   1c8fc:	ldr	r8, [r5, #4]
   1c900:	str	r1, [r8, r0]!
   1c904:	cmp	r8, #0
   1c908:	str	r9, [r8, #12]
   1c90c:	beq	1c978 <gen_dnhostop+0x80c>
   1c910:	ldr	r5, [pc, #3664]	; 1d768 <gen_dnhostop+0x15fc>
   1c914:	add	r5, pc, r5
   1c918:	ldr	r6, [r5, r7, lsl #3]!
   1c91c:	cmp	r6, #19
   1c920:	bhi	1c9b8 <gen_dnhostop+0x84c>
   1c924:	add	r9, r7, #1
   1c928:	cmp	r7, #15
   1c92c:	str	r9, [r3, #92]	; 0x5c
   1c930:	bge	1d738 <gen_dnhostop+0x15cc>
   1c934:	mov	r0, #1024	; 0x400
   1c938:	lsl	r6, r0, r9
   1c93c:	mov	r0, r6
   1c940:	bl	f1c <malloc@plt>
   1c944:	cmp	r0, #0
   1c948:	str	r0, [r5, #12]
   1c94c:	beq	1d738 <gen_dnhostop+0x15cc>
   1c950:	mov	r1, #0
   1c954:	mov	r2, r6
   1c958:	add	r5, r5, #8
   1c95c:	bl	f88 <memset@plt>
   1c960:	str	r6, [r5]
   1c964:	cmp	r6, #19
   1c968:	ldr	r3, [pc, #3580]	; 1d76c <gen_dnhostop+0x1600>
   1c96c:	add	r3, pc, r3
   1c970:	bhi	1c9bc <gen_dnhostop+0x850>
   1c974:	b	1d738 <gen_dnhostop+0x15cc>
   1c978:	ldr	r8, [pc, #3556]	; 1d764 <gen_dnhostop+0x15f8>
   1c97c:	add	r8, pc, r8
   1c980:	mov	r5, r8
   1c984:	ldr	r6, [r5, r7, lsl #3]!
   1c988:	cmp	r6, #19
   1c98c:	bls	1c898 <gen_dnhostop+0x72c>
   1c990:	mov	r9, r7
   1c994:	sub	r0, r6, #20
   1c998:	mov	r1, #48	; 0x30
   1c99c:	str	r0, [r5]
   1c9a0:	ldr	r8, [r5, #4]
   1c9a4:	str	r1, [r8, r0]!
   1c9a8:	ldr	r0, [r3, #44]	; 0x2c
   1c9ac:	add	r0, r0, r4
   1c9b0:	str	r0, [r8, #12]
   1c9b4:	b	1c9ec <gen_dnhostop+0x880>
   1c9b8:	mov	r9, r7
   1c9bc:	sub	r1, r6, #20
   1c9c0:	mov	r2, #80	; 0x50
   1c9c4:	str	r1, [r5]
   1c9c8:	ldr	r0, [r5, #4]
   1c9cc:	str	r2, [r0, r1]!
   1c9d0:	mov	r2, r8
   1c9d4:	str	r4, [r0, #12]
   1c9d8:	mov	r1, r2
   1c9dc:	ldr	r2, [r2, #16]
   1c9e0:	cmp	r2, #0
   1c9e4:	bne	1c9d8 <gen_dnhostop+0x86c>
   1c9e8:	str	r0, [r1, #16]
   1c9ec:	ldr	r7, [pc, #3456]	; 1d774 <gen_dnhostop+0x1608>
   1c9f0:	add	r7, pc, r7
   1c9f4:	ldr	r6, [r7, r9, lsl #3]!
   1c9f8:	cmp	r6, #19
   1c9fc:	bhi	1ca54 <gen_dnhostop+0x8e8>
   1ca00:	add	r5, r9, #1
   1ca04:	cmp	r9, #15
   1ca08:	str	r5, [r3, #92]	; 0x5c
   1ca0c:	bge	1d738 <gen_dnhostop+0x15cc>
   1ca10:	mov	r0, #1024	; 0x400
   1ca14:	lsl	r6, r0, r5
   1ca18:	mov	r0, r6
   1ca1c:	bl	f1c <malloc@plt>
   1ca20:	cmp	r0, #0
   1ca24:	str	r0, [r7, #12]
   1ca28:	beq	1d738 <gen_dnhostop+0x15cc>
   1ca2c:	mov	r1, #0
   1ca30:	mov	r2, r6
   1ca34:	add	r7, r7, #8
   1ca38:	bl	f88 <memset@plt>
   1ca3c:	str	r6, [r7]
   1ca40:	cmp	r6, #19
   1ca44:	ldr	r3, [pc, #3372]	; 1d778 <gen_dnhostop+0x160c>
   1ca48:	add	r3, pc, r3
   1ca4c:	bhi	1ca58 <gen_dnhostop+0x8ec>
   1ca50:	b	1d738 <gen_dnhostop+0x15cc>
   1ca54:	mov	r5, r9
   1ca58:	sub	r1, r6, #20
   1ca5c:	mov	r2, #84	; 0x54
   1ca60:	str	r1, [r7]
   1ca64:	ldr	r0, [r7, #4]
   1ca68:	str	r2, [r0, r1]!
   1ca6c:	mov	r1, #7
   1ca70:	mov	r2, r8
   1ca74:	str	r1, [r0, #12]
   1ca78:	mov	r1, r2
   1ca7c:	ldr	r2, [r2, #16]
   1ca80:	cmp	r2, #0
   1ca84:	bne	1ca78 <gen_dnhostop+0x90c>
   1ca88:	str	r0, [r1, #16]
   1ca8c:	ldr	r4, [pc, #3304]	; 1d77c <gen_dnhostop+0x1610>
   1ca90:	add	r4, pc, r4
   1ca94:	ldr	r6, [r4, r5, lsl #3]!
   1ca98:	cmp	r6, #207	; 0xcf
   1ca9c:	bhi	1cae8 <gen_dnhostop+0x97c>
   1caa0:	add	r0, r5, #1
   1caa4:	cmp	r5, #15
   1caa8:	str	r0, [r3, #92]	; 0x5c
   1caac:	bge	1d738 <gen_dnhostop+0x15cc>
   1cab0:	mov	r1, #1024	; 0x400
   1cab4:	lsl	r6, r1, r0
   1cab8:	mov	r0, r6
   1cabc:	bl	f1c <malloc@plt>
   1cac0:	cmp	r0, #0
   1cac4:	str	r0, [r4, #12]
   1cac8:	beq	1d738 <gen_dnhostop+0x15cc>
   1cacc:	mov	r1, #0
   1cad0:	mov	r2, r6
   1cad4:	add	r4, r4, #8
   1cad8:	bl	f88 <memset@plt>
   1cadc:	cmp	r6, #207	; 0xcf
   1cae0:	str	r6, [r4]
   1cae4:	bls	1d738 <gen_dnhostop+0x15cc>
   1cae8:	sub	r0, r6, #208	; 0xd0
   1caec:	ldr	r3, [sp, #20]
   1caf0:	mov	r2, #8
   1caf4:	str	r0, [r4]
   1caf8:	ldr	r1, [r4, #4]
   1cafc:	add	r4, r1, r0
   1cb00:	mov	r0, #21
   1cb04:	str	r8, [r4, #4]
   1cb08:	str	r0, [r4, #8]
   1cb0c:	mov	r0, #6
   1cb10:	str	r0, [r4, #20]
   1cb14:	ldr	r0, [sp, #12]
   1cb18:	str	r4, [r4, #96]	; 0x60
   1cb1c:	add	r1, r0, #2
   1cb20:	mov	r0, #3
   1cb24:	bl	9ef4 <gen_cmp>
   1cb28:	cmp	r4, #0
   1cb2c:	beq	1cb60 <gen_dnhostop+0x9f4>
   1cb30:	ldr	r1, [r0, #96]	; 0x60
   1cb34:	mov	r2, r4
   1cb38:	ldr	r3, [r2, #44]	; 0x2c
   1cb3c:	add	r7, r2, #84	; 0x54
   1cb40:	cmp	r3, #0
   1cb44:	mov	r3, #84	; 0x54
   1cb48:	movweq	r3, #60	; 0x3c
   1cb4c:	addeq	r7, r2, #60	; 0x3c
   1cb50:	ldr	r2, [r2, r3]
   1cb54:	str	r1, [r7]
   1cb58:	cmp	r2, #0
   1cb5c:	bne	1cb38 <gen_dnhostop+0x9cc>
   1cb60:	ldr	r1, [r4, #44]	; 0x2c
   1cb64:	cmp	r0, #0
   1cb68:	clz	r1, r1
   1cb6c:	lsr	r1, r1, #5
   1cb70:	str	r1, [r4, #44]	; 0x2c
   1cb74:	ldr	r2, [r0, #44]	; 0x2c
   1cb78:	clz	r1, r2
   1cb7c:	lsr	r1, r1, #5
   1cb80:	str	r1, [r0, #44]	; 0x2c
   1cb84:	str	r0, [sp, #24]
   1cb88:	ldr	r8, [pc, #3056]	; 1d780 <gen_dnhostop+0x1614>
   1cb8c:	add	r8, pc, r8
   1cb90:	mov	ip, r8
   1cb94:	beq	1cbe0 <gen_dnhostop+0xa74>
   1cb98:	cmp	r2, #0
   1cb9c:	mov	r2, #60	; 0x3c
   1cba0:	add	r1, r0, #60	; 0x3c
   1cba4:	movweq	r2, #84	; 0x54
   1cba8:	addeq	r1, r0, #84	; 0x54
   1cbac:	ldr	r2, [r0, r2]
   1cbb0:	cmp	r2, #0
   1cbb4:	beq	1cbe4 <gen_dnhostop+0xa78>
   1cbb8:	ldr	r3, [r2, #44]	; 0x2c
   1cbbc:	add	r1, r2, #84	; 0x54
   1cbc0:	cmp	r3, #0
   1cbc4:	mov	r3, #84	; 0x54
   1cbc8:	movweq	r3, #60	; 0x3c
   1cbcc:	addeq	r1, r2, #60	; 0x3c
   1cbd0:	ldr	r2, [r2, r3]
   1cbd4:	cmp	r2, #0
   1cbd8:	bne	1cbb8 <gen_dnhostop+0xa4c>
   1cbdc:	b	1cbe4 <gen_dnhostop+0xa78>
   1cbe0:	add	r1, sp, #24
   1cbe4:	str	r4, [r1]
   1cbe8:	ldr	r1, [r0, #44]	; 0x2c
   1cbec:	clz	r2, r1
   1cbf0:	cmp	r1, #0
   1cbf4:	lsr	r2, r2, #5
   1cbf8:	movwne	r1, #1
   1cbfc:	cmp	r0, #0
   1cc00:	str	r2, [r0, #44]	; 0x2c
   1cc04:	ldr	r2, [r4, #96]	; 0x60
   1cc08:	str	r1, [r0, #44]	; 0x2c
   1cc0c:	str	r2, [r0, #96]	; 0x60
   1cc10:	beq	1cc4c <gen_dnhostop+0xae0>
   1cc14:	ldr	r2, [sl, #96]	; 0x60
   1cc18:	mov	r3, r0
   1cc1c:	b	1cc24 <gen_dnhostop+0xab8>
   1cc20:	ldr	r1, [r3, #44]	; 0x2c
   1cc24:	cmp	r1, #0
   1cc28:	mov	r1, #84	; 0x54
   1cc2c:	add	r7, r3, #84	; 0x54
   1cc30:	movweq	r1, #60	; 0x3c
   1cc34:	addeq	r7, r3, #60	; 0x3c
   1cc38:	ldr	r3, [r3, r1]
   1cc3c:	str	r2, [r7]
   1cc40:	cmp	r3, #0
   1cc44:	bne	1cc20 <gen_dnhostop+0xab4>
   1cc48:	ldr	r1, [r0, #44]	; 0x2c
   1cc4c:	clz	r1, r1
   1cc50:	cmp	sl, #0
   1cc54:	lsr	r1, r1, #5
   1cc58:	str	r1, [r0, #44]	; 0x2c
   1cc5c:	str	sl, [sp, #24]
   1cc60:	beq	1cc90 <gen_dnhostop+0xb24>
   1cc64:	mov	r2, sl
   1cc68:	ldr	r3, [r2, #44]	; 0x2c
   1cc6c:	add	r1, r2, #84	; 0x54
   1cc70:	cmp	r3, #0
   1cc74:	mov	r3, #84	; 0x54
   1cc78:	movweq	r3, #60	; 0x3c
   1cc7c:	addeq	r1, r2, #60	; 0x3c
   1cc80:	ldr	r2, [r2, r3]
   1cc84:	cmp	r2, #0
   1cc88:	bne	1cc68 <gen_dnhostop+0xafc>
   1cc8c:	b	1cc94 <gen_dnhostop+0xb28>
   1cc90:	add	r1, sp, #24
   1cc94:	str	r0, [r1]
   1cc98:	ldr	r0, [r0, #96]	; 0x60
   1cc9c:	str	r0, [sl, #96]	; 0x60
   1cca0:	ldr	r3, [pc, #2780]	; 1d784 <gen_dnhostop+0x1618>
   1cca4:	add	r3, pc, r3
   1cca8:	ldrb	r0, [r3, #16]
   1ccac:	ldr	r1, [r3, #48]	; 0x30
   1ccb0:	add	r5, r1, #2
   1ccb4:	cmp	r0, #0
   1ccb8:	beq	1cd58 <gen_dnhostop+0xbec>
   1ccbc:	mov	r8, r5
   1ccc0:	ldr	r5, [r3, #100]	; 0x64
   1ccc4:	cmn	r5, #1
   1ccc8:	bne	1cce8 <gen_dnhostop+0xb7c>
   1cccc:	mov	r4, ip
   1ccd0:	bl	1309c <alloc_reg>
   1ccd4:	ldr	r3, [pc, #2732]	; 1d788 <gen_dnhostop+0x161c>
   1ccd8:	mov	ip, r4
   1ccdc:	mov	r5, r0
   1cce0:	add	r3, pc, r3
   1cce4:	str	r0, [r3, #100]	; 0x64
   1cce8:	ldr	r0, [r3, #92]	; 0x5c
   1ccec:	mov	r4, ip
   1ccf0:	ldr	r6, [r4, r0, lsl #3]!
   1ccf4:	cmp	r6, #19
   1ccf8:	bhi	1cdc0 <gen_dnhostop+0xc54>
   1ccfc:	add	r7, r0, #1
   1cd00:	cmp	r0, #15
   1cd04:	str	r7, [r3, #92]	; 0x5c
   1cd08:	bge	1d738 <gen_dnhostop+0x15cc>
   1cd0c:	mov	r0, #1024	; 0x400
   1cd10:	lsl	r6, r0, r7
   1cd14:	mov	r0, r6
   1cd18:	bl	f1c <malloc@plt>
   1cd1c:	cmp	r0, #0
   1cd20:	str	r0, [r4, #12]
   1cd24:	beq	1d738 <gen_dnhostop+0x15cc>
   1cd28:	mov	r1, #0
   1cd2c:	mov	r2, r6
   1cd30:	add	r4, r4, #8
   1cd34:	bl	f88 <memset@plt>
   1cd38:	str	r6, [r4]
   1cd3c:	cmp	r6, #19
   1cd40:	ldr	r3, [pc, #2628]	; 1d78c <gen_dnhostop+0x1620>
   1cd44:	ldr	ip, [pc, #2628]	; 1d790 <gen_dnhostop+0x1624>
   1cd48:	add	r3, pc, r3
   1cd4c:	add	ip, pc, ip
   1cd50:	bhi	1cdc4 <gen_dnhostop+0xc58>
   1cd54:	b	1d738 <gen_dnhostop+0x15cc>
   1cd58:	ldr	r7, [r3, #92]	; 0x5c
   1cd5c:	mov	r4, ip
   1cd60:	ldr	r6, [r4, r7, lsl #3]!
   1cd64:	cmp	r6, #19
   1cd68:	bhi	1ce60 <gen_dnhostop+0xcf4>
   1cd6c:	add	r8, r7, #1
   1cd70:	cmp	r7, #15
   1cd74:	str	r8, [r3, #92]	; 0x5c
   1cd78:	bge	1d738 <gen_dnhostop+0x15cc>
   1cd7c:	mov	r0, #1024	; 0x400
   1cd80:	lsl	r6, r0, r8
   1cd84:	mov	r0, r6
   1cd88:	bl	f1c <malloc@plt>
   1cd8c:	cmp	r0, #0
   1cd90:	str	r0, [r4, #12]
   1cd94:	beq	1d738 <gen_dnhostop+0x15cc>
   1cd98:	mov	r1, #0
   1cd9c:	mov	r2, r6
   1cda0:	add	r4, r4, #8
   1cda4:	bl	f88 <memset@plt>
   1cda8:	str	r6, [r4]
   1cdac:	cmp	r6, #19
   1cdb0:	ldr	r3, [pc, #2528]	; 1d798 <gen_dnhostop+0x162c>
   1cdb4:	add	r3, pc, r3
   1cdb8:	bhi	1ce64 <gen_dnhostop+0xcf8>
   1cdbc:	b	1d738 <gen_dnhostop+0x15cc>
   1cdc0:	mov	r7, r0
   1cdc4:	sub	r0, r6, #20
   1cdc8:	mov	r1, #97	; 0x61
   1cdcc:	str	r0, [r4]
   1cdd0:	ldr	r4, [r4, #4]
   1cdd4:	str	r1, [r4, r0]!
   1cdd8:	cmp	r4, #0
   1cddc:	str	r5, [r4, #12]
   1cde0:	beq	1ce4c <gen_dnhostop+0xce0>
   1cde4:	mov	r9, ip
   1cde8:	mov	r5, r8
   1cdec:	ldr	r6, [r9, r7, lsl #3]!
   1cdf0:	cmp	r6, #19
   1cdf4:	bhi	1ce88 <gen_dnhostop+0xd1c>
   1cdf8:	add	r8, r7, #1
   1cdfc:	cmp	r7, #15
   1ce00:	str	r8, [r3, #92]	; 0x5c
   1ce04:	bge	1d738 <gen_dnhostop+0x15cc>
   1ce08:	mov	r0, #1024	; 0x400
   1ce0c:	lsl	r6, r0, r8
   1ce10:	mov	r0, r6
   1ce14:	bl	f1c <malloc@plt>
   1ce18:	cmp	r0, #0
   1ce1c:	str	r0, [r9, #12]
   1ce20:	beq	1d738 <gen_dnhostop+0x15cc>
   1ce24:	mov	r1, #0
   1ce28:	mov	r2, r6
   1ce2c:	add	r9, r9, #8
   1ce30:	bl	f88 <memset@plt>
   1ce34:	str	r6, [r9]
   1ce38:	cmp	r6, #19
   1ce3c:	ldr	r3, [pc, #2384]	; 1d794 <gen_dnhostop+0x1628>
   1ce40:	add	r3, pc, r3
   1ce44:	bhi	1ce8c <gen_dnhostop+0xd20>
   1ce48:	b	1d738 <gen_dnhostop+0x15cc>
   1ce4c:	mov	r5, r8
   1ce50:	mov	r4, ip
   1ce54:	ldr	r6, [r4, r7, lsl #3]!
   1ce58:	cmp	r6, #19
   1ce5c:	bls	1cd6c <gen_dnhostop+0xc00>
   1ce60:	mov	r8, r7
   1ce64:	sub	r0, r6, #20
   1ce68:	mov	r1, #40	; 0x28
   1ce6c:	str	r0, [r4]
   1ce70:	ldr	r4, [r4, #4]
   1ce74:	str	r1, [r4, r0]!
   1ce78:	ldr	r0, [r3, #44]	; 0x2c
   1ce7c:	add	r0, r0, r5
   1ce80:	str	r0, [r4, #12]
   1ce84:	b	1cebc <gen_dnhostop+0xd50>
   1ce88:	mov	r8, r7
   1ce8c:	sub	r1, r6, #20
   1ce90:	mov	r2, #72	; 0x48
   1ce94:	str	r1, [r9]
   1ce98:	ldr	r0, [r9, #4]
   1ce9c:	str	r2, [r0, r1]!
   1cea0:	mov	r2, r4
   1cea4:	str	r5, [r0, #12]
   1cea8:	mov	r1, r2
   1ceac:	ldr	r2, [r2, #16]
   1ceb0:	cmp	r2, #0
   1ceb4:	bne	1cea8 <gen_dnhostop+0xd3c>
   1ceb8:	str	r0, [r1, #16]
   1cebc:	ldr	r5, [pc, #2264]	; 1d79c <gen_dnhostop+0x1630>
   1cec0:	add	r5, pc, r5
   1cec4:	ldr	r6, [r5, r8, lsl #3]!
   1cec8:	cmp	r6, #19
   1cecc:	bhi	1cf2c <gen_dnhostop+0xdc0>
   1ced0:	add	r7, r8, #1
   1ced4:	cmp	r8, #15
   1ced8:	str	r7, [r3, #92]	; 0x5c
   1cedc:	bge	1d738 <gen_dnhostop+0x15cc>
   1cee0:	mov	r0, #1024	; 0x400
   1cee4:	lsl	r6, r0, r7
   1cee8:	mov	r0, r6
   1ceec:	bl	f1c <malloc@plt>
   1cef0:	str	r0, [r5, #12]
   1cef4:	cmp	r0, #0
   1cef8:	ldr	r9, [pc, #2212]	; 1d7a4 <gen_dnhostop+0x1638>
   1cefc:	add	r9, pc, r9
   1cf00:	beq	1d738 <gen_dnhostop+0x15cc>
   1cf04:	mov	r1, #0
   1cf08:	mov	r2, r6
   1cf0c:	add	r5, r5, #8
   1cf10:	bl	f88 <memset@plt>
   1cf14:	str	r6, [r5]
   1cf18:	cmp	r6, #19
   1cf1c:	ldr	r3, [pc, #2180]	; 1d7a8 <gen_dnhostop+0x163c>
   1cf20:	add	r3, pc, r3
   1cf24:	bhi	1cf38 <gen_dnhostop+0xdcc>
   1cf28:	b	1d738 <gen_dnhostop+0x15cc>
   1cf2c:	ldr	r9, [pc, #2156]	; 1d7a0 <gen_dnhostop+0x1634>
   1cf30:	mov	r7, r8
   1cf34:	add	r9, pc, r9
   1cf38:	sub	r1, r6, #20
   1cf3c:	mov	r2, #84	; 0x54
   1cf40:	str	r1, [r5]
   1cf44:	ldr	r0, [r5, #4]
   1cf48:	str	r2, [r0, r1]!
   1cf4c:	movw	r1, #65287	; 0xff07
   1cf50:	mov	r2, r4
   1cf54:	str	r1, [r0, #12]
   1cf58:	mov	r1, r2
   1cf5c:	ldr	r2, [r2, #16]
   1cf60:	cmp	r2, #0
   1cf64:	bne	1cf58 <gen_dnhostop+0xdec>
   1cf68:	str	r0, [r1, #16]
   1cf6c:	mov	r5, r9
   1cf70:	ldr	r6, [r5, r7, lsl #3]!
   1cf74:	cmp	r6, #207	; 0xcf
   1cf78:	bhi	1cfc4 <gen_dnhostop+0xe58>
   1cf7c:	add	r0, r7, #1
   1cf80:	cmp	r7, #15
   1cf84:	str	r0, [r3, #92]	; 0x5c
   1cf88:	bge	1d738 <gen_dnhostop+0x15cc>
   1cf8c:	mov	r1, #1024	; 0x400
   1cf90:	lsl	r6, r1, r0
   1cf94:	mov	r0, r6
   1cf98:	bl	f1c <malloc@plt>
   1cf9c:	cmp	r0, #0
   1cfa0:	str	r0, [r5, #12]
   1cfa4:	beq	1d738 <gen_dnhostop+0x15cc>
   1cfa8:	mov	r1, #0
   1cfac:	mov	r2, r6
   1cfb0:	add	r5, r5, #8
   1cfb4:	bl	f88 <memset@plt>
   1cfb8:	cmp	r6, #207	; 0xcf
   1cfbc:	str	r6, [r5]
   1cfc0:	bls	1d738 <gen_dnhostop+0x15cc>
   1cfc4:	sub	r0, r6, #208	; 0xd0
   1cfc8:	ldr	r3, [sp, #20]
   1cfcc:	mov	r2, #8
   1cfd0:	str	r0, [r5]
   1cfd4:	ldr	r1, [r5, #4]
   1cfd8:	add	r6, r1, r0
   1cfdc:	mov	r0, #21
   1cfe0:	str	r4, [r6, #4]
   1cfe4:	str	r0, [r6, #8]
   1cfe8:	movw	r0, #33026	; 0x8102
   1cfec:	str	r0, [r6, #20]
   1cff0:	ldr	r0, [sp, #16]
   1cff4:	str	r6, [r6, #96]	; 0x60
   1cff8:	add	r1, r0, #3
   1cffc:	mov	r0, #3
   1d000:	bl	9ef4 <gen_cmp>
   1d004:	cmp	r6, #0
   1d008:	beq	1d03c <gen_dnhostop+0xed0>
   1d00c:	ldr	r1, [r0, #96]	; 0x60
   1d010:	mov	r2, r6
   1d014:	ldr	r3, [r2, #44]	; 0x2c
   1d018:	add	r7, r2, #84	; 0x54
   1d01c:	cmp	r3, #0
   1d020:	mov	r3, #84	; 0x54
   1d024:	movweq	r3, #60	; 0x3c
   1d028:	addeq	r7, r2, #60	; 0x3c
   1d02c:	ldr	r2, [r2, r3]
   1d030:	str	r1, [r7]
   1d034:	cmp	r2, #0
   1d038:	bne	1d014 <gen_dnhostop+0xea8>
   1d03c:	ldr	r1, [r6, #44]	; 0x2c
   1d040:	cmp	r0, #0
   1d044:	clz	r1, r1
   1d048:	lsr	r1, r1, #5
   1d04c:	str	r1, [r6, #44]	; 0x2c
   1d050:	ldr	r2, [r0, #44]	; 0x2c
   1d054:	clz	r1, r2
   1d058:	lsr	r1, r1, #5
   1d05c:	str	r1, [r0, #44]	; 0x2c
   1d060:	str	r0, [sp, #24]
   1d064:	beq	1d0b0 <gen_dnhostop+0xf44>
   1d068:	cmp	r2, #0
   1d06c:	mov	r2, #60	; 0x3c
   1d070:	add	r1, r0, #60	; 0x3c
   1d074:	movweq	r2, #84	; 0x54
   1d078:	addeq	r1, r0, #84	; 0x54
   1d07c:	ldr	r2, [r0, r2]
   1d080:	cmp	r2, #0
   1d084:	beq	1d0b4 <gen_dnhostop+0xf48>
   1d088:	ldr	r3, [r2, #44]	; 0x2c
   1d08c:	add	r1, r2, #84	; 0x54
   1d090:	cmp	r3, #0
   1d094:	mov	r3, #84	; 0x54
   1d098:	movweq	r3, #60	; 0x3c
   1d09c:	addeq	r1, r2, #60	; 0x3c
   1d0a0:	ldr	r2, [r2, r3]
   1d0a4:	cmp	r2, #0
   1d0a8:	bne	1d088 <gen_dnhostop+0xf1c>
   1d0ac:	b	1d0b4 <gen_dnhostop+0xf48>
   1d0b0:	add	r1, sp, #24
   1d0b4:	str	r6, [r1]
   1d0b8:	ldr	r1, [r0, #44]	; 0x2c
   1d0bc:	clz	r2, r1
   1d0c0:	cmp	r1, #0
   1d0c4:	lsr	r2, r2, #5
   1d0c8:	movwne	r1, #1
   1d0cc:	cmp	r0, #0
   1d0d0:	str	r2, [r0, #44]	; 0x2c
   1d0d4:	ldr	r2, [r6, #96]	; 0x60
   1d0d8:	str	r1, [r0, #44]	; 0x2c
   1d0dc:	str	r2, [r0, #96]	; 0x60
   1d0e0:	beq	1d11c <gen_dnhostop+0xfb0>
   1d0e4:	ldr	r2, [sl, #96]	; 0x60
   1d0e8:	mov	r3, r0
   1d0ec:	b	1d0f4 <gen_dnhostop+0xf88>
   1d0f0:	ldr	r1, [r3, #44]	; 0x2c
   1d0f4:	cmp	r1, #0
   1d0f8:	mov	r1, #84	; 0x54
   1d0fc:	add	r7, r3, #84	; 0x54
   1d100:	movweq	r1, #60	; 0x3c
   1d104:	addeq	r7, r3, #60	; 0x3c
   1d108:	ldr	r3, [r3, r1]
   1d10c:	str	r2, [r7]
   1d110:	cmp	r3, #0
   1d114:	bne	1d0f0 <gen_dnhostop+0xf84>
   1d118:	ldr	r1, [r0, #44]	; 0x2c
   1d11c:	clz	r1, r1
   1d120:	cmp	sl, #0
   1d124:	lsr	r1, r1, #5
   1d128:	str	r1, [r0, #44]	; 0x2c
   1d12c:	str	sl, [sp, #24]
   1d130:	beq	1d160 <gen_dnhostop+0xff4>
   1d134:	mov	r2, sl
   1d138:	ldr	r3, [r2, #44]	; 0x2c
   1d13c:	add	r1, r2, #84	; 0x54
   1d140:	cmp	r3, #0
   1d144:	mov	r3, #84	; 0x54
   1d148:	movweq	r3, #60	; 0x3c
   1d14c:	addeq	r1, r2, #60	; 0x3c
   1d150:	ldr	r2, [r2, r3]
   1d154:	cmp	r2, #0
   1d158:	bne	1d138 <gen_dnhostop+0xfcc>
   1d15c:	b	1d164 <gen_dnhostop+0xff8>
   1d160:	add	r1, sp, #24
   1d164:	str	r0, [r1]
   1d168:	ldr	r0, [r0, #96]	; 0x60
   1d16c:	str	r0, [sl, #96]	; 0x60
   1d170:	ldr	r3, [pc, #1588]	; 1d7ac <gen_dnhostop+0x1640>
   1d174:	str	sl, [sp, #4]
   1d178:	add	r3, pc, r3
   1d17c:	ldrb	r0, [r3, #16]
   1d180:	ldr	r1, [r3, #48]	; 0x30
   1d184:	add	r7, r1, #2
   1d188:	cmp	r0, #0
   1d18c:	beq	1d21c <gen_dnhostop+0x10b0>
   1d190:	mov	r8, r7
   1d194:	ldr	r7, [r3, #100]	; 0x64
   1d198:	cmn	r7, #1
   1d19c:	bne	1d1b4 <gen_dnhostop+0x1048>
   1d1a0:	bl	1309c <alloc_reg>
   1d1a4:	ldr	r3, [pc, #1540]	; 1d7b0 <gen_dnhostop+0x1644>
   1d1a8:	mov	r7, r0
   1d1ac:	add	r3, pc, r3
   1d1b0:	str	r0, [r3, #100]	; 0x64
   1d1b4:	ldr	r0, [r3, #92]	; 0x5c
   1d1b8:	mov	r4, r9
   1d1bc:	ldr	r6, [r4, r0, lsl #3]!
   1d1c0:	cmp	r6, #19
   1d1c4:	bhi	1d288 <gen_dnhostop+0x111c>
   1d1c8:	add	r5, r0, #1
   1d1cc:	cmp	r0, #15
   1d1d0:	str	r5, [r3, #92]	; 0x5c
   1d1d4:	bge	1d738 <gen_dnhostop+0x15cc>
   1d1d8:	mov	r0, #1024	; 0x400
   1d1dc:	lsl	r6, r0, r5
   1d1e0:	mov	r0, r6
   1d1e4:	bl	f1c <malloc@plt>
   1d1e8:	cmp	r0, #0
   1d1ec:	str	r0, [r4, #12]
   1d1f0:	beq	1d738 <gen_dnhostop+0x15cc>
   1d1f4:	mov	r1, #0
   1d1f8:	mov	r2, r6
   1d1fc:	add	r4, r4, #8
   1d200:	bl	f88 <memset@plt>
   1d204:	str	r6, [r4]
   1d208:	cmp	r6, #19
   1d20c:	ldr	r3, [pc, #1440]	; 1d7b4 <gen_dnhostop+0x1648>
   1d210:	add	r3, pc, r3
   1d214:	bhi	1d28c <gen_dnhostop+0x1120>
   1d218:	b	1d738 <gen_dnhostop+0x15cc>
   1d21c:	ldr	r5, [r3, #92]	; 0x5c
   1d220:	ldr	r6, [r9, r5, lsl #3]!
   1d224:	cmp	r6, #19
   1d228:	bhi	1d328 <gen_dnhostop+0x11bc>
   1d22c:	add	r8, r5, #1
   1d230:	cmp	r5, #15
   1d234:	str	r8, [r3, #92]	; 0x5c
   1d238:	bge	1d738 <gen_dnhostop+0x15cc>
   1d23c:	mov	r0, #1024	; 0x400
   1d240:	lsl	r6, r0, r8
   1d244:	mov	r0, r6
   1d248:	bl	f1c <malloc@plt>
   1d24c:	cmp	r0, #0
   1d250:	str	r0, [r9, #12]
   1d254:	beq	1d738 <gen_dnhostop+0x15cc>
   1d258:	mov	r1, #0
   1d25c:	mov	r2, r6
   1d260:	add	r9, r9, #8
   1d264:	bl	f88 <memset@plt>
   1d268:	str	r6, [r9]
   1d26c:	cmp	r6, #19
   1d270:	ldr	r3, [pc, #1348]	; 1d7bc <gen_dnhostop+0x1650>
   1d274:	add	r3, pc, r3
   1d278:	bhi	1d32c <gen_dnhostop+0x11c0>
   1d27c:	b	1d738 <gen_dnhostop+0x15cc>
   1d280:	.word	0x0002a218
   1d284:	.word	0x0002a1d8
   1d288:	mov	r5, r0
   1d28c:	sub	r0, r6, #20
   1d290:	mov	r1, #97	; 0x61
   1d294:	str	r0, [r4]
   1d298:	ldr	sl, [r4, #4]
   1d29c:	str	r1, [sl, r0]!
   1d2a0:	cmp	sl, #0
   1d2a4:	str	r7, [sl, #12]
   1d2a8:	beq	1d318 <gen_dnhostop+0x11ac>
   1d2ac:	mov	r6, r9
   1d2b0:	mov	r4, r8
   1d2b4:	ldr	r9, [r6, r5, lsl #3]!
   1d2b8:	cmp	r9, #19
   1d2bc:	bhi	1d354 <gen_dnhostop+0x11e8>
   1d2c0:	add	r8, r5, #1
   1d2c4:	cmp	r5, #15
   1d2c8:	str	r8, [r3, #92]	; 0x5c
   1d2cc:	bge	1d738 <gen_dnhostop+0x15cc>
   1d2d0:	mov	r0, #1024	; 0x400
   1d2d4:	lsl	r9, r0, r8
   1d2d8:	mov	r0, r9
   1d2dc:	bl	f1c <malloc@plt>
   1d2e0:	cmp	r0, #0
   1d2e4:	str	r0, [r6, #12]
   1d2e8:	beq	1d738 <gen_dnhostop+0x15cc>
   1d2ec:	mov	r1, #0
   1d2f0:	mov	r2, r9
   1d2f4:	add	r6, r6, #8
   1d2f8:	bl	f88 <memset@plt>
   1d2fc:	str	r9, [r6]
   1d300:	cmp	r9, #19
   1d304:	ldr	r3, [pc, #1196]	; 1d7b8 <gen_dnhostop+0x164c>
   1d308:	add	r3, pc, r3
   1d30c:	bhi	1d358 <gen_dnhostop+0x11ec>
   1d310:	b	1d738 <gen_dnhostop+0x15cc>
   1d314:	.word	0x0002a108
   1d318:	mov	r7, r8
   1d31c:	ldr	r6, [r9, r5, lsl #3]!
   1d320:	cmp	r6, #19
   1d324:	bls	1d22c <gen_dnhostop+0x10c0>
   1d328:	mov	r8, r5
   1d32c:	sub	r0, r6, #20
   1d330:	mov	r1, #48	; 0x30
   1d334:	str	r0, [r9]
   1d338:	ldr	sl, [r9, #4]
   1d33c:	str	r1, [sl, r0]!
   1d340:	ldr	r0, [r3, #44]	; 0x2c
   1d344:	add	r0, r0, r7
   1d348:	str	r0, [sl, #12]
   1d34c:	b	1d388 <gen_dnhostop+0x121c>
   1d350:	.word	0x0002a164
   1d354:	mov	r8, r5
   1d358:	sub	r1, r9, #20
   1d35c:	mov	r2, #80	; 0x50
   1d360:	str	r1, [r6]
   1d364:	ldr	r0, [r6, #4]
   1d368:	str	r2, [r0, r1]!
   1d36c:	mov	r2, sl
   1d370:	str	r4, [r0, #12]
   1d374:	mov	r1, r2
   1d378:	ldr	r2, [r2, #16]
   1d37c:	cmp	r2, #0
   1d380:	bne	1d374 <gen_dnhostop+0x1208>
   1d384:	str	r0, [r1, #16]
   1d388:	ldr	r7, [pc, #1072]	; 1d7c0 <gen_dnhostop+0x1654>
   1d38c:	add	r7, pc, r7
   1d390:	ldr	r6, [r7, r8, lsl #3]!
   1d394:	cmp	r6, #19
   1d398:	bhi	1d404 <gen_dnhostop+0x1298>
   1d39c:	add	r5, r8, #1
   1d3a0:	cmp	r8, #15
   1d3a4:	str	r5, [r3, #92]	; 0x5c
   1d3a8:	bge	1d738 <gen_dnhostop+0x15cc>
   1d3ac:	mov	r0, #1024	; 0x400
   1d3b0:	lsl	r6, r0, r5
   1d3b4:	mov	r0, r6
   1d3b8:	bl	f1c <malloc@plt>
   1d3bc:	str	r0, [r7, #12]
   1d3c0:	cmp	r0, #0
   1d3c4:	ldr	r4, [pc, #1020]	; 1d7c8 <gen_dnhostop+0x165c>
   1d3c8:	add	r4, pc, r4
   1d3cc:	beq	1d738 <gen_dnhostop+0x15cc>
   1d3d0:	mov	r1, #0
   1d3d4:	mov	r2, r6
   1d3d8:	add	r7, r7, #8
   1d3dc:	bl	f88 <memset@plt>
   1d3e0:	str	r6, [r7]
   1d3e4:	cmp	r6, #19
   1d3e8:	ldr	r3, [pc, #988]	; 1d7cc <gen_dnhostop+0x1660>
   1d3ec:	add	r3, pc, r3
   1d3f0:	bhi	1d410 <gen_dnhostop+0x12a4>
   1d3f4:	b	1d738 <gen_dnhostop+0x15cc>
   1d3f8:	.word	0x00029ff8
   1d3fc:	.word	0x00029f28
   1d400:	.word	0x00029f88
   1d404:	ldr	r4, [pc, #952]	; 1d7c4 <gen_dnhostop+0x1658>
   1d408:	mov	r5, r8
   1d40c:	add	r4, pc, r4
   1d410:	sub	r1, r6, #20
   1d414:	mov	r2, #84	; 0x54
   1d418:	str	r1, [r7]
   1d41c:	ldr	r0, [r7, #4]
   1d420:	str	r2, [r0, r1]!
   1d424:	mov	r1, #7
   1d428:	mov	r2, sl
   1d42c:	str	r1, [r0, #12]
   1d430:	mov	r1, r2
   1d434:	ldr	r2, [r2, #16]
   1d438:	cmp	r2, #0
   1d43c:	bne	1d430 <gen_dnhostop+0x12c4>
   1d440:	str	r0, [r1, #16]
   1d444:	ldr	r6, [r4, r5, lsl #3]!
   1d448:	cmp	r6, #207	; 0xcf
   1d44c:	bhi	1d498 <gen_dnhostop+0x132c>
   1d450:	add	r0, r5, #1
   1d454:	cmp	r5, #15
   1d458:	str	r0, [r3, #92]	; 0x5c
   1d45c:	bge	1d738 <gen_dnhostop+0x15cc>
   1d460:	mov	r1, #1024	; 0x400
   1d464:	lsl	r6, r1, r0
   1d468:	mov	r0, r6
   1d46c:	bl	f1c <malloc@plt>
   1d470:	cmp	r0, #0
   1d474:	str	r0, [r4, #12]
   1d478:	beq	1d738 <gen_dnhostop+0x15cc>
   1d47c:	mov	r1, #0
   1d480:	mov	r2, r6
   1d484:	add	r4, r4, #8
   1d488:	bl	f88 <memset@plt>
   1d48c:	cmp	r6, #207	; 0xcf
   1d490:	str	r6, [r4]
   1d494:	bls	1d738 <gen_dnhostop+0x15cc>
   1d498:	sub	r0, r6, #208	; 0xd0
   1d49c:	ldr	r3, [sp, #20]
   1d4a0:	mov	r2, #8
   1d4a4:	str	r0, [r4]
   1d4a8:	ldr	r1, [r4, #4]
   1d4ac:	add	r6, r1, r0
   1d4b0:	mov	r0, #21
   1d4b4:	str	sl, [r6, #4]
   1d4b8:	str	r0, [r6, #8]
   1d4bc:	mov	r0, #2
   1d4c0:	str	r0, [r6, #20]
   1d4c4:	ldr	r0, [sp, #16]
   1d4c8:	str	r6, [r6, #96]	; 0x60
   1d4cc:	add	r1, r0, #2
   1d4d0:	mov	r0, #3
   1d4d4:	bl	9ef4 <gen_cmp>
   1d4d8:	cmp	r6, #0
   1d4dc:	beq	1d510 <gen_dnhostop+0x13a4>
   1d4e0:	ldr	r1, [r0, #96]	; 0x60
   1d4e4:	mov	r2, r6
   1d4e8:	ldr	r3, [r2, #44]	; 0x2c
   1d4ec:	add	r7, r2, #84	; 0x54
   1d4f0:	cmp	r3, #0
   1d4f4:	mov	r3, #84	; 0x54
   1d4f8:	movweq	r3, #60	; 0x3c
   1d4fc:	addeq	r7, r2, #60	; 0x3c
   1d500:	ldr	r2, [r2, r3]
   1d504:	str	r1, [r7]
   1d508:	cmp	r2, #0
   1d50c:	bne	1d4e8 <gen_dnhostop+0x137c>
   1d510:	ldr	r1, [r6, #44]	; 0x2c
   1d514:	ldr	r5, [sp, #4]
   1d518:	cmp	r0, #0
   1d51c:	clz	r1, r1
   1d520:	lsr	r1, r1, #5
   1d524:	str	r1, [r6, #44]	; 0x2c
   1d528:	ldr	r2, [r0, #44]	; 0x2c
   1d52c:	clz	r1, r2
   1d530:	lsr	r1, r1, #5
   1d534:	str	r1, [r0, #44]	; 0x2c
   1d538:	str	r0, [sp, #24]
   1d53c:	beq	1d58c <gen_dnhostop+0x1420>
   1d540:	cmp	r2, #0
   1d544:	mov	r2, #60	; 0x3c
   1d548:	add	r1, r0, #60	; 0x3c
   1d54c:	movweq	r2, #84	; 0x54
   1d550:	addeq	r1, r0, #84	; 0x54
   1d554:	ldr	r2, [r0, r2]
   1d558:	cmp	r2, #0
   1d55c:	beq	1d590 <gen_dnhostop+0x1424>
   1d560:	ldr	r3, [r2, #44]	; 0x2c
   1d564:	add	r1, r2, #84	; 0x54
   1d568:	cmp	r3, #0
   1d56c:	mov	r3, #84	; 0x54
   1d570:	movweq	r3, #60	; 0x3c
   1d574:	addeq	r1, r2, #60	; 0x3c
   1d578:	ldr	r2, [r2, r3]
   1d57c:	cmp	r2, #0
   1d580:	bne	1d560 <gen_dnhostop+0x13f4>
   1d584:	b	1d590 <gen_dnhostop+0x1424>
   1d588:	.word	0x00029e5c
   1d58c:	add	r1, sp, #24
   1d590:	str	r6, [r1]
   1d594:	ldr	r1, [r0, #44]	; 0x2c
   1d598:	clz	r2, r1
   1d59c:	cmp	r1, #0
   1d5a0:	lsr	r2, r2, #5
   1d5a4:	movwne	r1, #1
   1d5a8:	cmp	r0, #0
   1d5ac:	str	r2, [r0, #44]	; 0x2c
   1d5b0:	ldr	r2, [r6, #96]	; 0x60
   1d5b4:	str	r1, [r0, #44]	; 0x2c
   1d5b8:	str	r2, [r0, #96]	; 0x60
   1d5bc:	beq	1d60c <gen_dnhostop+0x14a0>
   1d5c0:	ldr	r2, [r5, #96]	; 0x60
   1d5c4:	ldr	r4, [sp, #8]
   1d5c8:	mov	r3, r0
   1d5cc:	b	1d5d4 <gen_dnhostop+0x1468>
   1d5d0:	ldr	r1, [r3, #44]	; 0x2c
   1d5d4:	cmp	r1, #0
   1d5d8:	mov	r1, #84	; 0x54
   1d5dc:	add	r7, r3, #84	; 0x54
   1d5e0:	movweq	r1, #60	; 0x3c
   1d5e4:	addeq	r7, r3, #60	; 0x3c
   1d5e8:	ldr	r3, [r3, r1]
   1d5ec:	str	r2, [r7]
   1d5f0:	cmp	r3, #0
   1d5f4:	bne	1d5d0 <gen_dnhostop+0x1464>
   1d5f8:	ldr	r1, [r0, #44]	; 0x2c
   1d5fc:	b	1d610 <gen_dnhostop+0x14a4>
   1d600:	.word	0x00029e20
   1d604:	.word	0x00029ebc
   1d608:	.word	0x00029de8
   1d60c:	ldr	r4, [sp, #8]
   1d610:	clz	r1, r1
   1d614:	cmp	r5, #0
   1d618:	lsr	r1, r1, #5
   1d61c:	str	r1, [r0, #44]	; 0x2c
   1d620:	str	r5, [sp, #24]
   1d624:	beq	1d654 <gen_dnhostop+0x14e8>
   1d628:	mov	r2, r5
   1d62c:	ldr	r3, [r2, #44]	; 0x2c
   1d630:	add	r1, r2, #84	; 0x54
   1d634:	cmp	r3, #0
   1d638:	mov	r3, #84	; 0x54
   1d63c:	movweq	r3, #60	; 0x3c
   1d640:	addeq	r1, r2, #60	; 0x3c
   1d644:	ldr	r2, [r2, r3]
   1d648:	cmp	r2, #0
   1d64c:	bne	1d62c <gen_dnhostop+0x14c0>
   1d650:	b	1d658 <gen_dnhostop+0x14ec>
   1d654:	add	r1, sp, #24
   1d658:	str	r0, [r1]
   1d65c:	cmp	r4, #0
   1d660:	ldr	r0, [r0, #96]	; 0x60
   1d664:	str	r0, [r5, #96]	; 0x60
   1d668:	beq	1d698 <gen_dnhostop+0x152c>
   1d66c:	mov	r1, r4
   1d670:	ldr	r2, [r1, #44]	; 0x2c
   1d674:	add	r3, r1, #84	; 0x54
   1d678:	cmp	r2, #0
   1d67c:	mov	r2, #84	; 0x54
   1d680:	movweq	r2, #60	; 0x3c
   1d684:	addeq	r3, r1, #60	; 0x3c
   1d688:	ldr	r1, [r1, r2]
   1d68c:	str	r0, [r3]
   1d690:	cmp	r1, #0
   1d694:	bne	1d670 <gen_dnhostop+0x1504>
   1d698:	ldr	r0, [r4, #44]	; 0x2c
   1d69c:	cmp	r5, #0
   1d6a0:	clz	r0, r0
   1d6a4:	lsr	r0, r0, #5
   1d6a8:	str	r0, [r4, #44]	; 0x2c
   1d6ac:	ldr	r1, [r5, #44]	; 0x2c
   1d6b0:	clz	r0, r1
   1d6b4:	lsr	r0, r0, #5
   1d6b8:	str	r0, [r5, #44]	; 0x2c
   1d6bc:	str	r5, [sp, #24]
   1d6c0:	beq	1d70c <gen_dnhostop+0x15a0>
   1d6c4:	cmp	r1, #0
   1d6c8:	mov	r1, #60	; 0x3c
   1d6cc:	add	r0, r5, #60	; 0x3c
   1d6d0:	movweq	r1, #84	; 0x54
   1d6d4:	addeq	r0, r5, #84	; 0x54
   1d6d8:	ldr	r1, [r5, r1]
   1d6dc:	cmp	r1, #0
   1d6e0:	beq	1d710 <gen_dnhostop+0x15a4>
   1d6e4:	ldr	r2, [r1, #44]	; 0x2c
   1d6e8:	add	r0, r1, #84	; 0x54
   1d6ec:	cmp	r2, #0
   1d6f0:	mov	r2, #84	; 0x54
   1d6f4:	movweq	r2, #60	; 0x3c
   1d6f8:	addeq	r0, r1, #60	; 0x3c
   1d6fc:	ldr	r1, [r1, r2]
   1d700:	cmp	r1, #0
   1d704:	bne	1d6e4 <gen_dnhostop+0x1578>
   1d708:	b	1d710 <gen_dnhostop+0x15a4>
   1d70c:	add	r0, sp, #24
   1d710:	str	r4, [r0]
   1d714:	ldr	r0, [r5, #44]	; 0x2c
   1d718:	clz	r0, r0
   1d71c:	lsr	r0, r0, #5
   1d720:	str	r0, [r5, #44]	; 0x2c
   1d724:	ldr	r0, [r4, #96]	; 0x60
   1d728:	str	r0, [r5, #96]	; 0x60
   1d72c:	mov	r0, r5
   1d730:	sub	sp, fp, #28
   1d734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d738:	ldr	r0, [pc, #144]	; 1d7d0 <gen_dnhostop+0x1664>
   1d73c:	add	r0, pc, r0
   1d740:	bl	2204 <sf_bpf_error>
   1d744:	bl	100c <abort@plt>
   1d748:	ldr	r0, [pc, #4]	; 1d754 <gen_dnhostop+0x15e8>
   1d74c:	add	r0, pc, r0
   1d750:	bl	2204 <sf_bpf_error>
   1d754:	.word	0x0000c44f
   1d758:	.word	0x00029d68
   1d75c:	.word	0x00029ccc
   1d760:	.word	0x00029c68
   1d764:	.word	0x00029aa4
   1d768:	.word	0x00029b0c
   1d76c:	.word	0x00029b74
   1d770:	.word	0x00029c00
   1d774:	.word	0x00029a30
   1d778:	.word	0x00029a98
   1d77c:	.word	0x00029990
   1d780:	.word	0x00029894
   1d784:	.word	0x0002983c
   1d788:	.word	0x00029800
   1d78c:	.word	0x00029798
   1d790:	.word	0x000296d4
   1d794:	.word	0x000296a0
   1d798:	.word	0x0002972c
   1d79c:	.word	0x00029560
   1d7a0:	.word	0x000294ec
   1d7a4:	.word	0x00029524
   1d7a8:	.word	0x000295c0
   1d7ac:	.word	0x00029368
   1d7b0:	.word	0x00029334
   1d7b4:	.word	0x000292d0
   1d7b8:	.word	0x000291d8
   1d7bc:	.word	0x0002926c
   1d7c0:	.word	0x00029094
   1d7c4:	.word	0x00029014
   1d7c8:	.word	0x00029058
   1d7cc:	.word	0x000290f4
   1d7d0:	.word	0x0000bc58

0001d7d4 <gen_hostop6>:
   1d7d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7d8:	add	fp, sp, #28
   1d7dc:	sub	sp, sp, #44	; 0x2c
   1d7e0:	cmp	r2, #4
   1d7e4:	bhi	1ec1c <gen_hostop6+0x1448>
   1d7e8:	mov	r7, r0
   1d7ec:	add	r0, pc, #20
   1d7f0:	mov	r8, r1
   1d7f4:	ldr	r9, [fp, #12]
   1d7f8:	ldr	r5, [fp, #8]
   1d7fc:	mov	r6, r3
   1d800:	ldr	r1, [r0, r2, lsl #2]
   1d804:	add	pc, r0, r1
   1d808:	.word	0x00000014
   1d80c:	.word	0x000001d8
   1d810:	.word	0x000001d4
   1d814:	.word	0x00000014
   1d818:	.word	0x000000e8
   1d81c:	mov	r0, r7
   1d820:	mov	r1, r8
   1d824:	mov	r2, #1
   1d828:	mov	r3, r6
   1d82c:	stm	sp, {r5, r9}
   1d830:	bl	1d7d4 <gen_hostop6>
   1d834:	mov	r4, r0
   1d838:	mov	r0, r7
   1d83c:	mov	r1, r8
   1d840:	mov	r2, #2
   1d844:	mov	r3, r6
   1d848:	stm	sp, {r5, r9}
   1d84c:	bl	1d7d4 <gen_hostop6>
   1d850:	mov	sl, r0
   1d854:	ldr	r0, [r4, #44]	; 0x2c
   1d858:	cmp	r4, #0
   1d85c:	mov	r5, sl
   1d860:	clz	r0, r0
   1d864:	lsr	r1, r0, #5
   1d868:	str	r1, [r4, #44]	; 0x2c
   1d86c:	ldr	r0, [r5, #96]!	; 0x60
   1d870:	beq	1d8a8 <gen_hostop6+0xd4>
   1d874:	mov	r2, r4
   1d878:	b	1d880 <gen_hostop6+0xac>
   1d87c:	ldr	r1, [r2, #44]	; 0x2c
   1d880:	cmp	r1, #0
   1d884:	mov	r1, #84	; 0x54
   1d888:	add	r3, r2, #84	; 0x54
   1d88c:	movweq	r1, #60	; 0x3c
   1d890:	addeq	r3, r2, #60	; 0x3c
   1d894:	ldr	r2, [r2, r1]
   1d898:	str	r0, [r3]
   1d89c:	cmp	r2, #0
   1d8a0:	bne	1d87c <gen_hostop6+0xa8>
   1d8a4:	ldr	r1, [r4, #44]	; 0x2c
   1d8a8:	clz	r0, r1
   1d8ac:	cmp	sl, #0
   1d8b0:	lsr	r0, r0, #5
   1d8b4:	str	r0, [r4, #44]	; 0x2c
   1d8b8:	str	sl, [fp, #-32]	; 0xffffffe0
   1d8bc:	beq	1dabc <gen_hostop6+0x2e8>
   1d8c0:	mov	r1, sl
   1d8c4:	ldr	r2, [r1, #44]	; 0x2c
   1d8c8:	add	r0, r1, #84	; 0x54
   1d8cc:	cmp	r2, #0
   1d8d0:	mov	r2, #84	; 0x54
   1d8d4:	movweq	r2, #60	; 0x3c
   1d8d8:	addeq	r0, r1, #60	; 0x3c
   1d8dc:	ldr	r1, [r1, r2]
   1d8e0:	cmp	r1, #0
   1d8e4:	bne	1d8c4 <gen_hostop6+0xf0>
   1d8e8:	str	r4, [r0]
   1d8ec:	b	1ec08 <gen_hostop6+0x1434>
   1d8f0:	mov	r0, r7
   1d8f4:	mov	r1, r8
   1d8f8:	mov	r2, #1
   1d8fc:	mov	r3, r6
   1d900:	stm	sp, {r5, r9}
   1d904:	bl	1d7d4 <gen_hostop6>
   1d908:	mov	r4, r0
   1d90c:	mov	r0, r7
   1d910:	mov	r1, r8
   1d914:	mov	r2, #2
   1d918:	mov	r3, r6
   1d91c:	stm	sp, {r5, r9}
   1d920:	bl	1d7d4 <gen_hostop6>
   1d924:	mov	r5, r0
   1d928:	mov	sl, r0
   1d92c:	cmp	r4, #0
   1d930:	ldr	r0, [r5, #96]!	; 0x60
   1d934:	beq	1d964 <gen_hostop6+0x190>
   1d938:	mov	r1, r4
   1d93c:	ldr	r2, [r1, #44]	; 0x2c
   1d940:	add	r3, r1, #84	; 0x54
   1d944:	cmp	r2, #0
   1d948:	mov	r2, #84	; 0x54
   1d94c:	movweq	r2, #60	; 0x3c
   1d950:	addeq	r3, r1, #60	; 0x3c
   1d954:	ldr	r1, [r1, r2]
   1d958:	str	r0, [r3]
   1d95c:	cmp	r1, #0
   1d960:	bne	1d93c <gen_hostop6+0x168>
   1d964:	ldr	r0, [r4, #44]	; 0x2c
   1d968:	cmp	sl, #0
   1d96c:	clz	r0, r0
   1d970:	lsr	r0, r0, #5
   1d974:	str	r0, [r4, #44]	; 0x2c
   1d978:	ldr	r1, [sl, #44]	; 0x2c
   1d97c:	clz	r0, r1
   1d980:	lsr	r0, r0, #5
   1d984:	str	r0, [sl, #44]	; 0x2c
   1d988:	str	sl, [fp, #-32]	; 0xffffffe0
   1d98c:	beq	1db50 <gen_hostop6+0x37c>
   1d990:	cmp	r1, #0
   1d994:	mov	r1, #60	; 0x3c
   1d998:	add	r0, sl, #60	; 0x3c
   1d99c:	movweq	r1, #84	; 0x54
   1d9a0:	addeq	r0, sl, #84	; 0x54
   1d9a4:	ldr	r1, [sl, r1]
   1d9a8:	cmp	r1, #0
   1d9ac:	beq	1d9d4 <gen_hostop6+0x200>
   1d9b0:	ldr	r2, [r1, #44]	; 0x2c
   1d9b4:	add	r0, r1, #84	; 0x54
   1d9b8:	cmp	r2, #0
   1d9bc:	mov	r2, #84	; 0x54
   1d9c0:	movweq	r2, #60	; 0x3c
   1d9c4:	addeq	r0, r1, #60	; 0x3c
   1d9c8:	ldr	r1, [r1, r2]
   1d9cc:	cmp	r1, #0
   1d9d0:	bne	1d9b0 <gen_hostop6+0x1dc>
   1d9d4:	str	r4, [r0]
   1d9d8:	b	1ebf8 <gen_hostop6+0x1424>
   1d9dc:	mov	r5, r9
   1d9e0:	ldr	ip, [pc, #4068]	; 1e9cc <gen_hostop6+0x11f8>
   1d9e4:	str	r5, [sp, #32]
   1d9e8:	str	r8, [sp, #28]
   1d9ec:	str	r7, [sp, #36]	; 0x24
   1d9f0:	str	r6, [sp, #20]
   1d9f4:	add	ip, pc, ip
   1d9f8:	ldr	r0, [ip, #48]	; 0x30
   1d9fc:	add	r0, r5, r0
   1da00:	add	r5, r0, #12
   1da04:	ldr	r0, [r8, #12]
   1da08:	str	r0, [sp, #16]
   1da0c:	ldr	r0, [r7, #12]
   1da10:	str	r0, [sp, #24]
   1da14:	ldrb	r0, [ip, #16]
   1da18:	cmp	r0, #0
   1da1c:	beq	1dab4 <gen_hostop6+0x2e0>
   1da20:	ldr	r4, [ip, #100]	; 0x64
   1da24:	mov	sl, r5
   1da28:	cmn	r4, #1
   1da2c:	bne	1da44 <gen_hostop6+0x270>
   1da30:	bl	1309c <alloc_reg>
   1da34:	ldr	ip, [pc, #3988]	; 1e9d0 <gen_hostop6+0x11fc>
   1da38:	mov	r4, r0
   1da3c:	add	ip, pc, ip
   1da40:	str	r0, [ip, #100]	; 0x64
   1da44:	ldr	r0, [ip, #92]	; 0x5c
   1da48:	ldr	r8, [pc, #3972]	; 1e9d4 <gen_hostop6+0x1200>
   1da4c:	add	r8, pc, r8
   1da50:	mov	r6, r8
   1da54:	ldr	r5, [r6, r0, lsl #3]!
   1da58:	cmp	r5, #19
   1da5c:	bhi	1dac8 <gen_hostop6+0x2f4>
   1da60:	add	r7, r0, #1
   1da64:	cmp	r0, #15
   1da68:	str	r7, [ip, #92]	; 0x5c
   1da6c:	bge	1e9c0 <gen_hostop6+0x11ec>
   1da70:	mov	r0, #1024	; 0x400
   1da74:	lsl	r5, r0, r7
   1da78:	mov	r0, r5
   1da7c:	bl	f1c <malloc@plt>
   1da80:	cmp	r0, #0
   1da84:	str	r0, [r6, #12]
   1da88:	beq	1e9c0 <gen_hostop6+0x11ec>
   1da8c:	mov	r1, #0
   1da90:	mov	r2, r5
   1da94:	add	r6, r6, #8
   1da98:	bl	f88 <memset@plt>
   1da9c:	str	r5, [r6]
   1daa0:	cmp	r5, #19
   1daa4:	ldr	ip, [pc, #3884]	; 1e9d8 <gen_hostop6+0x1204>
   1daa8:	add	ip, pc, ip
   1daac:	bhi	1dacc <gen_hostop6+0x2f8>
   1dab0:	b	1e9c0 <gen_hostop6+0x11ec>
   1dab4:	ldr	r7, [ip, #92]	; 0x5c
   1dab8:	b	1db64 <gen_hostop6+0x390>
   1dabc:	sub	r0, fp, #32
   1dac0:	str	r4, [r0]
   1dac4:	b	1ec08 <gen_hostop6+0x1434>
   1dac8:	mov	r7, r0
   1dacc:	sub	r0, r5, #20
   1dad0:	mov	r1, #97	; 0x61
   1dad4:	str	r0, [r6]
   1dad8:	ldr	r9, [r6, #4]
   1dadc:	str	r1, [r9, r0]!
   1dae0:	cmp	r9, #0
   1dae4:	str	r4, [r9, #12]
   1dae8:	beq	1db5c <gen_hostop6+0x388>
   1daec:	ldr	r4, [r8, r7, lsl #3]!
   1daf0:	mov	r5, sl
   1daf4:	cmp	r4, #19
   1daf8:	bhi	1dca0 <gen_hostop6+0x4cc>
   1dafc:	add	sl, r7, #1
   1db00:	cmp	r7, #15
   1db04:	str	sl, [ip, #92]	; 0x5c
   1db08:	bge	1e9c0 <gen_hostop6+0x11ec>
   1db0c:	mov	r0, #1024	; 0x400
   1db10:	lsl	r4, r0, sl
   1db14:	mov	r0, r4
   1db18:	bl	f1c <malloc@plt>
   1db1c:	cmp	r0, #0
   1db20:	str	r0, [r8, #12]
   1db24:	beq	1e9c0 <gen_hostop6+0x11ec>
   1db28:	mov	r1, #0
   1db2c:	mov	r2, r4
   1db30:	add	r8, r8, #8
   1db34:	bl	f88 <memset@plt>
   1db38:	str	r4, [r8]
   1db3c:	cmp	r4, #19
   1db40:	ldr	ip, [pc, #4036]	; 1eb0c <gen_hostop6+0x1338>
   1db44:	add	ip, pc, ip
   1db48:	bhi	1dca4 <gen_hostop6+0x4d0>
   1db4c:	b	1e9c0 <gen_hostop6+0x11ec>
   1db50:	sub	r0, fp, #32
   1db54:	str	r4, [r0]
   1db58:	b	1ebf8 <gen_hostop6+0x1424>
   1db5c:	ldr	r8, [sp, #28]
   1db60:	mov	r5, sl
   1db64:	ldr	r6, [pc, #4004]	; 1eb10 <gen_hostop6+0x133c>
   1db68:	add	r6, pc, r6
   1db6c:	ldr	r4, [r6, r7, lsl #3]!
   1db70:	cmp	r4, #19
   1db74:	bhi	1dbcc <gen_hostop6+0x3f8>
   1db78:	add	sl, r7, #1
   1db7c:	cmp	r7, #15
   1db80:	str	sl, [ip, #92]	; 0x5c
   1db84:	bge	1e9c0 <gen_hostop6+0x11ec>
   1db88:	mov	r0, #1024	; 0x400
   1db8c:	lsl	r4, r0, sl
   1db90:	mov	r0, r4
   1db94:	bl	f1c <malloc@plt>
   1db98:	cmp	r0, #0
   1db9c:	str	r0, [r6, #12]
   1dba0:	beq	1e9c0 <gen_hostop6+0x11ec>
   1dba4:	mov	r1, #0
   1dba8:	mov	r2, r4
   1dbac:	add	r6, r6, #8
   1dbb0:	bl	f88 <memset@plt>
   1dbb4:	str	r4, [r6]
   1dbb8:	cmp	r4, #19
   1dbbc:	ldr	ip, [pc, #3920]	; 1eb14 <gen_hostop6+0x1340>
   1dbc0:	add	ip, pc, ip
   1dbc4:	bhi	1dbd0 <gen_hostop6+0x3fc>
   1dbc8:	b	1e9c0 <gen_hostop6+0x11ec>
   1dbcc:	mov	sl, r7
   1dbd0:	sub	r0, r4, #20
   1dbd4:	mov	r1, #32
   1dbd8:	str	r0, [r6]
   1dbdc:	ldr	r9, [r6, #4]
   1dbe0:	str	r1, [r9, r0]!
   1dbe4:	ldr	r0, [ip, #44]	; 0x2c
   1dbe8:	add	r0, r0, r5
   1dbec:	str	r0, [r9, #12]
   1dbf0:	ldr	r5, [sp, #16]
   1dbf4:	cmn	r5, #1
   1dbf8:	beq	1dce4 <gen_hostop6+0x510>
   1dbfc:	ldr	r7, [pc, #4072]	; 1ebec <gen_hostop6+0x1418>
   1dc00:	add	r7, pc, r7
   1dc04:	ldr	r4, [r7, sl, lsl #3]!
   1dc08:	cmp	r4, #19
   1dc0c:	bhi	1dc64 <gen_hostop6+0x490>
   1dc10:	add	r6, sl, #1
   1dc14:	cmp	sl, #15
   1dc18:	str	r6, [ip, #92]	; 0x5c
   1dc1c:	bge	1e9c0 <gen_hostop6+0x11ec>
   1dc20:	mov	r0, #1024	; 0x400
   1dc24:	lsl	r4, r0, r6
   1dc28:	mov	r0, r4
   1dc2c:	bl	f1c <malloc@plt>
   1dc30:	cmp	r0, #0
   1dc34:	str	r0, [r7, #12]
   1dc38:	beq	1e9c0 <gen_hostop6+0x11ec>
   1dc3c:	mov	r1, #0
   1dc40:	mov	r2, r4
   1dc44:	add	r7, r7, #8
   1dc48:	bl	f88 <memset@plt>
   1dc4c:	str	r4, [r7]
   1dc50:	cmp	r4, #19
   1dc54:	ldr	ip, [pc, #4036]	; 1ec20 <gen_hostop6+0x144c>
   1dc58:	add	ip, pc, ip
   1dc5c:	bhi	1dc68 <gen_hostop6+0x494>
   1dc60:	b	1e9c0 <gen_hostop6+0x11ec>
   1dc64:	mov	r6, sl
   1dc68:	sub	r2, r4, #20
   1dc6c:	mov	r3, #84	; 0x54
   1dc70:	rev	r1, r5
   1dc74:	str	r2, [r7]
   1dc78:	ldr	r0, [r7, #4]
   1dc7c:	str	r3, [r0, r2]!
   1dc80:	mov	r2, r9
   1dc84:	str	r1, [r0, #12]
   1dc88:	mov	r1, r2
   1dc8c:	ldr	r2, [r2, #16]
   1dc90:	cmp	r2, #0
   1dc94:	bne	1dc88 <gen_hostop6+0x4b4>
   1dc98:	str	r0, [r1, #16]
   1dc9c:	b	1dce8 <gen_hostop6+0x514>
   1dca0:	mov	sl, r7
   1dca4:	sub	r1, r4, #20
   1dca8:	mov	r2, #64	; 0x40
   1dcac:	str	r1, [r8]
   1dcb0:	ldr	r0, [r8, #4]
   1dcb4:	str	r2, [r0, r1]!
   1dcb8:	mov	r2, r9
   1dcbc:	str	r5, [r0, #12]
   1dcc0:	mov	r1, r2
   1dcc4:	ldr	r2, [r2, #16]
   1dcc8:	cmp	r2, #0
   1dccc:	bne	1dcc0 <gen_hostop6+0x4ec>
   1dcd0:	ldr	r8, [sp, #28]
   1dcd4:	str	r0, [r1, #16]
   1dcd8:	ldr	r5, [sp, #16]
   1dcdc:	cmn	r5, #1
   1dce0:	bne	1dbfc <gen_hostop6+0x428>
   1dce4:	mov	r6, sl
   1dce8:	ldr	r5, [pc, #3892]	; 1ec24 <gen_hostop6+0x1450>
   1dcec:	add	r5, pc, r5
   1dcf0:	ldr	r4, [r5, r6, lsl #3]!
   1dcf4:	cmp	r4, #207	; 0xcf
   1dcf8:	bhi	1dd50 <gen_hostop6+0x57c>
   1dcfc:	add	r7, r6, #1
   1dd00:	cmp	r6, #15
   1dd04:	str	r7, [ip, #92]	; 0x5c
   1dd08:	bge	1e9c0 <gen_hostop6+0x11ec>
   1dd0c:	mov	r0, #1024	; 0x400
   1dd10:	lsl	r4, r0, r7
   1dd14:	mov	r0, r4
   1dd18:	bl	f1c <malloc@plt>
   1dd1c:	cmp	r0, #0
   1dd20:	str	r0, [r5, #12]
   1dd24:	beq	1e9c0 <gen_hostop6+0x11ec>
   1dd28:	mov	r1, #0
   1dd2c:	mov	r2, r4
   1dd30:	add	r5, r5, #8
   1dd34:	bl	f88 <memset@plt>
   1dd38:	str	r4, [r5]
   1dd3c:	cmp	r4, #207	; 0xcf
   1dd40:	ldr	ip, [pc, #3808]	; 1ec28 <gen_hostop6+0x1454>
   1dd44:	add	ip, pc, ip
   1dd48:	bhi	1dd54 <gen_hostop6+0x580>
   1dd4c:	b	1e9c0 <gen_hostop6+0x11ec>
   1dd50:	mov	r7, r6
   1dd54:	sub	r1, r4, #208	; 0xd0
   1dd58:	ldr	r0, [sp, #24]
   1dd5c:	str	r1, [r5]
   1dd60:	ldr	r2, [r5, #4]
   1dd64:	rev	r0, r0
   1dd68:	add	sl, r2, r1
   1dd6c:	mov	r1, #21
   1dd70:	str	r9, [sl, #4]
   1dd74:	str	r1, [sl, #8]
   1dd78:	str	r0, [sl, #20]
   1dd7c:	str	sl, [sl, #96]	; 0x60
   1dd80:	ldr	r1, [sp, #32]
   1dd84:	ldr	r0, [ip, #48]	; 0x30
   1dd88:	ldr	lr, [r8, #8]
   1dd8c:	add	r0, r1, r0
   1dd90:	add	r3, r0, #8
   1dd94:	ldr	r0, [sp, #36]	; 0x24
   1dd98:	ldr	r0, [r0, #8]
   1dd9c:	str	r0, [sp, #16]
   1dda0:	ldrb	r0, [ip, #16]
   1dda4:	cmp	r0, #1
   1dda8:	bne	1de30 <gen_hostop6+0x65c>
   1ddac:	ldr	r9, [ip, #100]	; 0x64
   1ddb0:	ldr	r4, [pc, #3704]	; 1ec30 <gen_hostop6+0x145c>
   1ddb4:	cmn	r9, #1
   1ddb8:	add	r4, pc, r4
   1ddbc:	beq	1deac <gen_hostop6+0x6d8>
   1ddc0:	ldr	r6, [r4, r7, lsl #3]!
   1ddc4:	cmp	r6, #19
   1ddc8:	bhi	1dee0 <gen_hostop6+0x70c>
   1ddcc:	add	r5, r7, #1
   1ddd0:	cmp	r7, #15
   1ddd4:	str	r3, [sp, #24]
   1ddd8:	str	r5, [ip, #92]	; 0x5c
   1dddc:	bge	1e9c0 <gen_hostop6+0x11ec>
   1dde0:	mov	r0, #1024	; 0x400
   1dde4:	mov	r8, lr
   1dde8:	lsl	r6, r0, r5
   1ddec:	mov	r0, r6
   1ddf0:	bl	f1c <malloc@plt>
   1ddf4:	cmp	r0, #0
   1ddf8:	str	r0, [r4, #12]
   1ddfc:	beq	1e9c0 <gen_hostop6+0x11ec>
   1de00:	mov	r1, #0
   1de04:	mov	r2, r6
   1de08:	add	r4, r4, #8
   1de0c:	bl	f88 <memset@plt>
   1de10:	str	r6, [r4]
   1de14:	cmp	r6, #19
   1de18:	mov	lr, r8
   1de1c:	ldr	ip, [pc, #3604]	; 1ec38 <gen_hostop6+0x1464>
   1de20:	ldr	r3, [sp, #24]
   1de24:	add	ip, pc, ip
   1de28:	bhi	1dee4 <gen_hostop6+0x710>
   1de2c:	b	1e9c0 <gen_hostop6+0x11ec>
   1de30:	ldr	r5, [pc, #3572]	; 1ec2c <gen_hostop6+0x1458>
   1de34:	add	r5, pc, r5
   1de38:	mov	r6, r5
   1de3c:	ldr	r4, [r6, r7, lsl #3]!
   1de40:	cmp	r4, #19
   1de44:	bhi	1dfa8 <gen_hostop6+0x7d4>
   1de48:	add	r9, r7, #1
   1de4c:	cmp	r7, #15
   1de50:	str	r3, [sp, #24]
   1de54:	str	r9, [ip, #92]	; 0x5c
   1de58:	bge	1e9c0 <gen_hostop6+0x11ec>
   1de5c:	mov	r0, #1024	; 0x400
   1de60:	mov	r8, lr
   1de64:	lsl	r4, r0, r9
   1de68:	mov	r0, r4
   1de6c:	bl	f1c <malloc@plt>
   1de70:	cmp	r0, #0
   1de74:	str	r0, [r6, #12]
   1de78:	beq	1e9c0 <gen_hostop6+0x11ec>
   1de7c:	mov	r1, #0
   1de80:	mov	r2, r4
   1de84:	add	r6, r6, #8
   1de88:	bl	f88 <memset@plt>
   1de8c:	str	r4, [r6]
   1de90:	cmp	r4, #19
   1de94:	mov	lr, r8
   1de98:	ldr	ip, [pc, #3504]	; 1ec50 <gen_hostop6+0x147c>
   1de9c:	ldr	r3, [sp, #24]
   1dea0:	add	ip, pc, ip
   1dea4:	bhi	1dfac <gen_hostop6+0x7d8>
   1dea8:	b	1e9c0 <gen_hostop6+0x11ec>
   1deac:	mov	r5, lr
   1deb0:	mov	r6, r3
   1deb4:	bl	1309c <alloc_reg>
   1deb8:	ldr	ip, [pc, #3444]	; 1ec34 <gen_hostop6+0x1460>
   1debc:	mov	r3, r6
   1dec0:	mov	lr, r5
   1dec4:	mov	r9, r0
   1dec8:	add	ip, pc, ip
   1decc:	str	r0, [ip, #100]	; 0x64
   1ded0:	ldr	r7, [ip, #92]	; 0x5c
   1ded4:	ldr	r6, [r4, r7, lsl #3]!
   1ded8:	cmp	r6, #19
   1dedc:	bls	1ddcc <gen_hostop6+0x5f8>
   1dee0:	mov	r5, r7
   1dee4:	sub	r0, r6, #20
   1dee8:	mov	r1, #97	; 0x61
   1deec:	str	r0, [r4]
   1def0:	ldr	r8, [r4, #4]
   1def4:	str	r1, [r8, r0]!
   1def8:	cmp	r8, #0
   1defc:	str	r9, [r8, #12]
   1df00:	beq	1df88 <gen_hostop6+0x7b4>
   1df04:	ldr	r6, [pc, #3380]	; 1ec40 <gen_hostop6+0x146c>
   1df08:	add	r6, pc, r6
   1df0c:	ldr	r4, [r6, r5, lsl #3]!
   1df10:	cmp	r4, #19
   1df14:	bhi	1e0dc <gen_hostop6+0x908>
   1df18:	add	r9, r5, #1
   1df1c:	cmp	r5, #15
   1df20:	str	r3, [sp, #24]
   1df24:	str	r9, [ip, #92]	; 0x5c
   1df28:	bge	1e9c0 <gen_hostop6+0x11ec>
   1df2c:	mov	r0, #1024	; 0x400
   1df30:	mov	r7, lr
   1df34:	lsl	r4, r0, r9
   1df38:	mov	r0, r4
   1df3c:	bl	f1c <malloc@plt>
   1df40:	str	r0, [r6, #12]
   1df44:	cmp	r0, #0
   1df48:	ldr	r1, [pc, #3320]	; 1ec48 <gen_hostop6+0x1474>
   1df4c:	add	r1, pc, r1
   1df50:	beq	1e9c0 <gen_hostop6+0x11ec>
   1df54:	mov	r5, r1
   1df58:	mov	r1, #0
   1df5c:	mov	r2, r4
   1df60:	add	r6, r6, #8
   1df64:	bl	f88 <memset@plt>
   1df68:	str	r4, [r6]
   1df6c:	cmp	r4, #19
   1df70:	mov	lr, r7
   1df74:	ldr	ip, [pc, #3280]	; 1ec4c <gen_hostop6+0x1478>
   1df78:	ldr	r3, [sp, #24]
   1df7c:	add	ip, pc, ip
   1df80:	bhi	1e0ec <gen_hostop6+0x918>
   1df84:	b	1e9c0 <gen_hostop6+0x11ec>
   1df88:	ldr	r0, [pc, #3244]	; 1ec3c <gen_hostop6+0x1468>
   1df8c:	mov	r7, r5
   1df90:	add	r0, pc, r0
   1df94:	mov	r5, r0
   1df98:	mov	r6, r5
   1df9c:	ldr	r4, [r6, r7, lsl #3]!
   1dfa0:	cmp	r4, #19
   1dfa4:	bls	1de48 <gen_hostop6+0x674>
   1dfa8:	mov	r9, r7
   1dfac:	sub	r0, r4, #20
   1dfb0:	mov	r1, #32
   1dfb4:	str	r0, [r6]
   1dfb8:	ldr	r8, [r6, #4]
   1dfbc:	str	r1, [r8, r0]!
   1dfc0:	ldr	r0, [ip, #44]	; 0x2c
   1dfc4:	add	r0, r0, r3
   1dfc8:	str	r0, [r8, #12]
   1dfcc:	cmn	lr, #1
   1dfd0:	beq	1e124 <gen_hostop6+0x950>
   1dfd4:	mov	r6, r5
   1dfd8:	ldr	r4, [r6, r9, lsl #3]!
   1dfdc:	cmp	r4, #19
   1dfe0:	bhi	1e040 <gen_hostop6+0x86c>
   1dfe4:	add	r7, r9, #1
   1dfe8:	cmp	r9, #15
   1dfec:	str	lr, [sp, #24]
   1dff0:	str	r7, [ip, #92]	; 0x5c
   1dff4:	bge	1e9c0 <gen_hostop6+0x11ec>
   1dff8:	mov	r0, #1024	; 0x400
   1dffc:	lsl	r4, r0, r7
   1e000:	mov	r0, r4
   1e004:	bl	f1c <malloc@plt>
   1e008:	cmp	r0, #0
   1e00c:	str	r0, [r6, #12]
   1e010:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e014:	mov	r1, #0
   1e018:	mov	r2, r4
   1e01c:	add	r6, r6, #8
   1e020:	bl	f88 <memset@plt>
   1e024:	str	r4, [r6]
   1e028:	cmp	r4, #19
   1e02c:	ldr	ip, [pc, #3104]	; 1ec54 <gen_hostop6+0x1480>
   1e030:	ldr	lr, [sp, #24]
   1e034:	add	ip, pc, ip
   1e038:	bhi	1e044 <gen_hostop6+0x870>
   1e03c:	b	1e9c0 <gen_hostop6+0x11ec>
   1e040:	mov	r7, r9
   1e044:	sub	r2, r4, #20
   1e048:	mov	r3, #84	; 0x54
   1e04c:	rev	r1, lr
   1e050:	str	r2, [r6]
   1e054:	ldr	r0, [r6, #4]
   1e058:	str	r3, [r0, r2]!
   1e05c:	mov	r2, r8
   1e060:	str	r1, [r0, #12]
   1e064:	mov	r1, r2
   1e068:	ldr	r2, [r2, #16]
   1e06c:	cmp	r2, #0
   1e070:	bne	1e064 <gen_hostop6+0x890>
   1e074:	str	r0, [r1, #16]
   1e078:	mov	r6, r5
   1e07c:	ldr	r4, [r6, r7, lsl #3]!
   1e080:	cmp	r4, #207	; 0xcf
   1e084:	bhi	1e138 <gen_hostop6+0x964>
   1e088:	add	r9, r7, #1
   1e08c:	cmp	r7, #15
   1e090:	str	r9, [ip, #92]	; 0x5c
   1e094:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e098:	mov	r0, #1024	; 0x400
   1e09c:	lsl	r4, r0, r9
   1e0a0:	mov	r0, r4
   1e0a4:	bl	f1c <malloc@plt>
   1e0a8:	cmp	r0, #0
   1e0ac:	str	r0, [r6, #12]
   1e0b0:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e0b4:	mov	r1, #0
   1e0b8:	mov	r2, r4
   1e0bc:	add	r6, r6, #8
   1e0c0:	bl	f88 <memset@plt>
   1e0c4:	str	r4, [r6]
   1e0c8:	cmp	r4, #207	; 0xcf
   1e0cc:	ldr	ip, [pc, #2948]	; 1ec58 <gen_hostop6+0x1484>
   1e0d0:	add	ip, pc, ip
   1e0d4:	bhi	1e13c <gen_hostop6+0x968>
   1e0d8:	b	1e9c0 <gen_hostop6+0x11ec>
   1e0dc:	ldr	r0, [pc, #2912]	; 1ec44 <gen_hostop6+0x1470>
   1e0e0:	mov	r9, r5
   1e0e4:	add	r0, pc, r0
   1e0e8:	mov	r5, r0
   1e0ec:	sub	r1, r4, #20
   1e0f0:	mov	r2, #64	; 0x40
   1e0f4:	str	r1, [r6]
   1e0f8:	ldr	r0, [r6, #4]
   1e0fc:	str	r2, [r0, r1]!
   1e100:	mov	r2, r8
   1e104:	str	r3, [r0, #12]
   1e108:	mov	r1, r2
   1e10c:	ldr	r2, [r2, #16]
   1e110:	cmp	r2, #0
   1e114:	bne	1e108 <gen_hostop6+0x934>
   1e118:	str	r0, [r1, #16]
   1e11c:	cmn	lr, #1
   1e120:	bne	1dfd4 <gen_hostop6+0x800>
   1e124:	mov	r7, r9
   1e128:	mov	r6, r5
   1e12c:	ldr	r4, [r6, r7, lsl #3]!
   1e130:	cmp	r4, #207	; 0xcf
   1e134:	bls	1e088 <gen_hostop6+0x8b4>
   1e138:	mov	r9, r7
   1e13c:	ldr	r0, [sp, #16]
   1e140:	add	r5, sl, #96	; 0x60
   1e144:	rev	r1, r0
   1e148:	sub	r0, r4, #208	; 0xd0
   1e14c:	str	r0, [r6]
   1e150:	ldr	r2, [r6, #4]
   1e154:	adds	r0, r2, r0
   1e158:	mov	r2, #21
   1e15c:	str	r8, [r0, #4]
   1e160:	str	r2, [r0, #8]
   1e164:	str	r1, [r0, #20]
   1e168:	str	r0, [r0, #96]	; 0x60
   1e16c:	beq	1e1a0 <gen_hostop6+0x9cc>
   1e170:	ldr	r1, [r5]
   1e174:	mov	r2, r0
   1e178:	ldr	r3, [r2, #44]	; 0x2c
   1e17c:	add	r7, r2, #84	; 0x54
   1e180:	cmp	r3, #0
   1e184:	mov	r3, #84	; 0x54
   1e188:	movweq	r3, #60	; 0x3c
   1e18c:	addeq	r7, r2, #60	; 0x3c
   1e190:	ldr	r2, [r2, r3]
   1e194:	str	r1, [r7]
   1e198:	cmp	r2, #0
   1e19c:	bne	1e178 <gen_hostop6+0x9a4>
   1e1a0:	ldr	r1, [r0, #44]	; 0x2c
   1e1a4:	ldr	r7, [sp, #28]
   1e1a8:	cmp	sl, #0
   1e1ac:	clz	r1, r1
   1e1b0:	lsr	r1, r1, #5
   1e1b4:	str	r1, [r0, #44]	; 0x2c
   1e1b8:	ldr	r1, [sl, #44]	; 0x2c
   1e1bc:	clz	r2, r1
   1e1c0:	lsr	r2, r2, #5
   1e1c4:	str	r2, [sl, #44]	; 0x2c
   1e1c8:	str	sl, [fp, #-32]	; 0xffffffe0
   1e1cc:	beq	1e214 <gen_hostop6+0xa40>
   1e1d0:	mov	r3, #60	; 0x3c
   1e1d4:	cmp	r1, #0
   1e1d8:	mov	r2, sl
   1e1dc:	movweq	r3, #84	; 0x54
   1e1e0:	ldr	r1, [r2, r3]!
   1e1e4:	cmp	r1, #0
   1e1e8:	beq	1e218 <gen_hostop6+0xa44>
   1e1ec:	ldr	r3, [r1, #44]	; 0x2c
   1e1f0:	add	r2, r1, #84	; 0x54
   1e1f4:	cmp	r3, #0
   1e1f8:	mov	r3, #84	; 0x54
   1e1fc:	movweq	r3, #60	; 0x3c
   1e200:	addeq	r2, r1, #60	; 0x3c
   1e204:	ldr	r1, [r1, r3]
   1e208:	cmp	r1, #0
   1e20c:	bne	1e1ec <gen_hostop6+0xa18>
   1e210:	b	1e218 <gen_hostop6+0xa44>
   1e214:	sub	r2, fp, #32
   1e218:	str	r0, [r2]
   1e21c:	str	r5, [sp, #24]
   1e220:	ldr	r1, [sl, #44]	; 0x2c
   1e224:	clz	r1, r1
   1e228:	lsr	r1, r1, #5
   1e22c:	str	r1, [sl, #44]	; 0x2c
   1e230:	ldr	r1, [sp, #32]
   1e234:	ldr	r0, [r0, #96]	; 0x60
   1e238:	str	r0, [sl, #96]	; 0x60
   1e23c:	ldr	r0, [ip, #48]	; 0x30
   1e240:	ldr	r7, [r7, #4]
   1e244:	add	r0, r1, r0
   1e248:	add	r3, r0, #4
   1e24c:	ldr	r0, [sp, #36]	; 0x24
   1e250:	ldr	r0, [r0, #4]
   1e254:	str	r0, [sp, #16]
   1e258:	ldrb	r0, [ip, #16]
   1e25c:	cmp	r0, #1
   1e260:	bne	1e3a4 <gen_hostop6+0xbd0>
   1e264:	ldr	r5, [ip, #100]	; 0x64
   1e268:	cmn	r5, #1
   1e26c:	bne	1e290 <gen_hostop6+0xabc>
   1e270:	mov	r4, r3
   1e274:	bl	1309c <alloc_reg>
   1e278:	ldr	ip, [pc, #2524]	; 1ec5c <gen_hostop6+0x1488>
   1e27c:	mov	r3, r4
   1e280:	mov	r5, r0
   1e284:	add	ip, pc, ip
   1e288:	str	r0, [ip, #100]	; 0x64
   1e28c:	ldr	r9, [ip, #92]	; 0x5c
   1e290:	str	r7, [sp, #12]
   1e294:	ldr	r4, [pc, #2500]	; 1ec60 <gen_hostop6+0x148c>
   1e298:	add	r4, pc, r4
   1e29c:	ldr	r6, [r4, r9, lsl #3]!
   1e2a0:	cmp	r6, #19
   1e2a4:	bhi	1e304 <gen_hostop6+0xb30>
   1e2a8:	add	r7, r9, #1
   1e2ac:	cmp	r9, #15
   1e2b0:	str	r7, [ip, #92]	; 0x5c
   1e2b4:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e2b8:	mov	r0, #1024	; 0x400
   1e2bc:	mov	r8, r3
   1e2c0:	lsl	r6, r0, r7
   1e2c4:	mov	r0, r6
   1e2c8:	bl	f1c <malloc@plt>
   1e2cc:	cmp	r0, #0
   1e2d0:	str	r0, [r4, #12]
   1e2d4:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e2d8:	mov	r1, #0
   1e2dc:	mov	r2, r6
   1e2e0:	add	r4, r4, #8
   1e2e4:	bl	f88 <memset@plt>
   1e2e8:	str	r6, [r4]
   1e2ec:	cmp	r6, #19
   1e2f0:	mov	r3, r8
   1e2f4:	ldr	ip, [pc, #2408]	; 1ec64 <gen_hostop6+0x1490>
   1e2f8:	add	ip, pc, ip
   1e2fc:	bhi	1e308 <gen_hostop6+0xb34>
   1e300:	b	1e9c0 <gen_hostop6+0x11ec>
   1e304:	mov	r7, r9
   1e308:	sub	r0, r6, #20
   1e30c:	mov	r1, #97	; 0x61
   1e310:	str	r0, [r4]
   1e314:	ldr	r8, [r4, #4]
   1e318:	str	r1, [r8, r0]!
   1e31c:	cmp	r8, #0
   1e320:	str	r5, [r8, #12]
   1e324:	beq	1e39c <gen_hostop6+0xbc8>
   1e328:	ldr	r6, [pc, #2364]	; 1ec6c <gen_hostop6+0x1498>
   1e32c:	add	r6, pc, r6
   1e330:	ldr	r4, [r6, r7, lsl #3]!
   1e334:	cmp	r4, #19
   1e338:	bhi	1e558 <gen_hostop6+0xd84>
   1e33c:	add	r5, r7, #1
   1e340:	cmp	r7, #15
   1e344:	str	r5, [ip, #92]	; 0x5c
   1e348:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e34c:	mov	r0, #1024	; 0x400
   1e350:	mov	r9, r3
   1e354:	lsl	r4, r0, r5
   1e358:	mov	r0, r4
   1e35c:	bl	f1c <malloc@plt>
   1e360:	ldr	r7, [sp, #12]
   1e364:	cmp	r0, #0
   1e368:	str	r0, [r6, #12]
   1e36c:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e370:	mov	r1, #0
   1e374:	mov	r2, r4
   1e378:	add	r6, r6, #8
   1e37c:	bl	f88 <memset@plt>
   1e380:	str	r4, [r6]
   1e384:	cmp	r4, #19
   1e388:	mov	r3, r9
   1e38c:	ldr	ip, [pc, #2268]	; 1ec70 <gen_hostop6+0x149c>
   1e390:	add	ip, pc, ip
   1e394:	bhi	1e560 <gen_hostop6+0xd8c>
   1e398:	b	1e9c0 <gen_hostop6+0x11ec>
   1e39c:	mov	r9, r7
   1e3a0:	ldr	r7, [sp, #12]
   1e3a4:	ldr	r6, [pc, #2236]	; 1ec68 <gen_hostop6+0x1494>
   1e3a8:	add	r6, pc, r6
   1e3ac:	ldr	r4, [r6, r9, lsl #3]!
   1e3b0:	cmp	r4, #19
   1e3b4:	bhi	1e414 <gen_hostop6+0xc40>
   1e3b8:	add	r5, r9, #1
   1e3bc:	cmp	r9, #15
   1e3c0:	str	r5, [ip, #92]	; 0x5c
   1e3c4:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e3c8:	mov	r0, #1024	; 0x400
   1e3cc:	mov	r8, r3
   1e3d0:	lsl	r4, r0, r5
   1e3d4:	mov	r0, r4
   1e3d8:	bl	f1c <malloc@plt>
   1e3dc:	cmp	r0, #0
   1e3e0:	str	r0, [r6, #12]
   1e3e4:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e3e8:	mov	r1, #0
   1e3ec:	mov	r2, r4
   1e3f0:	add	r6, r6, #8
   1e3f4:	bl	f88 <memset@plt>
   1e3f8:	str	r4, [r6]
   1e3fc:	cmp	r4, #19
   1e400:	mov	r3, r8
   1e404:	ldr	ip, [pc, #2152]	; 1ec74 <gen_hostop6+0x14a0>
   1e408:	add	ip, pc, ip
   1e40c:	bhi	1e418 <gen_hostop6+0xc44>
   1e410:	b	1e9c0 <gen_hostop6+0x11ec>
   1e414:	mov	r5, r9
   1e418:	sub	r0, r4, #20
   1e41c:	mov	r1, #32
   1e420:	str	r0, [r6]
   1e424:	ldr	r8, [r6, #4]
   1e428:	str	r1, [r8, r0]!
   1e42c:	ldr	r0, [ip, #44]	; 0x2c
   1e430:	add	r0, r0, r3
   1e434:	str	r0, [r8, #12]
   1e438:	cmn	r7, #1
   1e43c:	beq	1e598 <gen_hostop6+0xdc4>
   1e440:	ldr	r6, [pc, #2100]	; 1ec7c <gen_hostop6+0x14a8>
   1e444:	mov	r9, r7
   1e448:	add	r6, pc, r6
   1e44c:	ldr	r4, [r6, r5, lsl #3]!
   1e450:	cmp	r4, #19
   1e454:	bhi	1e4b4 <gen_hostop6+0xce0>
   1e458:	add	r7, r5, #1
   1e45c:	cmp	r5, #15
   1e460:	str	r7, [ip, #92]	; 0x5c
   1e464:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e468:	mov	r0, #1024	; 0x400
   1e46c:	lsl	r4, r0, r7
   1e470:	mov	r0, r4
   1e474:	bl	f1c <malloc@plt>
   1e478:	str	r0, [r6, #12]
   1e47c:	cmp	r0, #0
   1e480:	ldr	r5, [pc, #2044]	; 1ec84 <gen_hostop6+0x14b0>
   1e484:	add	r5, pc, r5
   1e488:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e48c:	mov	r1, #0
   1e490:	mov	r2, r4
   1e494:	add	r6, r6, #8
   1e498:	bl	f88 <memset@plt>
   1e49c:	str	r4, [r6]
   1e4a0:	cmp	r4, #19
   1e4a4:	ldr	ip, [pc, #2012]	; 1ec88 <gen_hostop6+0x14b4>
   1e4a8:	add	ip, pc, ip
   1e4ac:	bhi	1e4c0 <gen_hostop6+0xcec>
   1e4b0:	b	1e9c0 <gen_hostop6+0x11ec>
   1e4b4:	mov	r7, r5
   1e4b8:	ldr	r5, [pc, #1984]	; 1ec80 <gen_hostop6+0x14ac>
   1e4bc:	add	r5, pc, r5
   1e4c0:	sub	r2, r4, #20
   1e4c4:	mov	r3, #84	; 0x54
   1e4c8:	rev	r1, r9
   1e4cc:	str	r2, [r6]
   1e4d0:	ldr	r0, [r6, #4]
   1e4d4:	str	r3, [r0, r2]!
   1e4d8:	mov	r2, r8
   1e4dc:	str	r1, [r0, #12]
   1e4e0:	mov	r1, r2
   1e4e4:	ldr	r2, [r2, #16]
   1e4e8:	cmp	r2, #0
   1e4ec:	bne	1e4e0 <gen_hostop6+0xd0c>
   1e4f0:	str	r0, [r1, #16]
   1e4f4:	mov	r6, r5
   1e4f8:	ldr	r4, [r6, r7, lsl #3]!
   1e4fc:	cmp	r4, #207	; 0xcf
   1e500:	bhi	1e5b4 <gen_hostop6+0xde0>
   1e504:	add	r9, r7, #1
   1e508:	cmp	r7, #15
   1e50c:	str	r9, [ip, #92]	; 0x5c
   1e510:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e514:	mov	r0, #1024	; 0x400
   1e518:	lsl	r4, r0, r9
   1e51c:	mov	r0, r4
   1e520:	bl	f1c <malloc@plt>
   1e524:	cmp	r0, #0
   1e528:	str	r0, [r6, #12]
   1e52c:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e530:	mov	r1, #0
   1e534:	mov	r2, r4
   1e538:	add	r6, r6, #8
   1e53c:	bl	f88 <memset@plt>
   1e540:	str	r4, [r6]
   1e544:	cmp	r4, #207	; 0xcf
   1e548:	ldr	ip, [pc, #1852]	; 1ec8c <gen_hostop6+0x14b8>
   1e54c:	add	ip, pc, ip
   1e550:	bhi	1e5b8 <gen_hostop6+0xde4>
   1e554:	b	1e9c0 <gen_hostop6+0x11ec>
   1e558:	mov	r5, r7
   1e55c:	ldr	r7, [sp, #12]
   1e560:	sub	r1, r4, #20
   1e564:	mov	r2, #64	; 0x40
   1e568:	str	r1, [r6]
   1e56c:	ldr	r0, [r6, #4]
   1e570:	str	r2, [r0, r1]!
   1e574:	mov	r2, r8
   1e578:	str	r3, [r0, #12]
   1e57c:	mov	r1, r2
   1e580:	ldr	r2, [r2, #16]
   1e584:	cmp	r2, #0
   1e588:	bne	1e57c <gen_hostop6+0xda8>
   1e58c:	str	r0, [r1, #16]
   1e590:	cmn	r7, #1
   1e594:	bne	1e440 <gen_hostop6+0xc6c>
   1e598:	mov	r7, r5
   1e59c:	ldr	r5, [pc, #1748]	; 1ec78 <gen_hostop6+0x14a4>
   1e5a0:	add	r5, pc, r5
   1e5a4:	mov	r6, r5
   1e5a8:	ldr	r4, [r6, r7, lsl #3]!
   1e5ac:	cmp	r4, #207	; 0xcf
   1e5b0:	bls	1e504 <gen_hostop6+0xd30>
   1e5b4:	mov	r9, r7
   1e5b8:	ldr	r0, [sp, #16]
   1e5bc:	rev	r1, r0
   1e5c0:	sub	r0, r4, #208	; 0xd0
   1e5c4:	str	r0, [r6]
   1e5c8:	ldr	r2, [r6, #4]
   1e5cc:	adds	r0, r2, r0
   1e5d0:	mov	r2, #21
   1e5d4:	str	r8, [r0, #4]
   1e5d8:	str	r2, [r0, #8]
   1e5dc:	str	r1, [r0, #20]
   1e5e0:	str	r0, [r0, #96]	; 0x60
   1e5e4:	beq	1e61c <gen_hostop6+0xe48>
   1e5e8:	ldr	r1, [sp, #24]
   1e5ec:	mov	r2, r0
   1e5f0:	ldr	r1, [r1]
   1e5f4:	ldr	r3, [r2, #44]	; 0x2c
   1e5f8:	add	r7, r2, #84	; 0x54
   1e5fc:	cmp	r3, #0
   1e600:	mov	r3, #84	; 0x54
   1e604:	movweq	r3, #60	; 0x3c
   1e608:	addeq	r7, r2, #60	; 0x3c
   1e60c:	ldr	r2, [r2, r3]
   1e610:	str	r1, [r7]
   1e614:	cmp	r2, #0
   1e618:	bne	1e5f4 <gen_hostop6+0xe20>
   1e61c:	ldr	r1, [r0, #44]	; 0x2c
   1e620:	ldr	r7, [sp, #28]
   1e624:	cmp	sl, #0
   1e628:	clz	r1, r1
   1e62c:	lsr	r1, r1, #5
   1e630:	str	r1, [r0, #44]	; 0x2c
   1e634:	ldr	r1, [sl, #44]	; 0x2c
   1e638:	clz	r2, r1
   1e63c:	lsr	r2, r2, #5
   1e640:	str	r2, [sl, #44]	; 0x2c
   1e644:	str	sl, [fp, #-32]	; 0xffffffe0
   1e648:	beq	1e690 <gen_hostop6+0xebc>
   1e64c:	mov	r3, #60	; 0x3c
   1e650:	cmp	r1, #0
   1e654:	mov	r2, sl
   1e658:	movweq	r3, #84	; 0x54
   1e65c:	ldr	r1, [r2, r3]!
   1e660:	cmp	r1, #0
   1e664:	beq	1e694 <gen_hostop6+0xec0>
   1e668:	ldr	r3, [r1, #44]	; 0x2c
   1e66c:	add	r2, r1, #84	; 0x54
   1e670:	cmp	r3, #0
   1e674:	mov	r3, #84	; 0x54
   1e678:	movweq	r3, #60	; 0x3c
   1e67c:	addeq	r2, r1, #60	; 0x3c
   1e680:	ldr	r1, [r1, r3]
   1e684:	cmp	r1, #0
   1e688:	bne	1e668 <gen_hostop6+0xe94>
   1e68c:	b	1e694 <gen_hostop6+0xec0>
   1e690:	sub	r2, fp, #32
   1e694:	str	r0, [r2]
   1e698:	ldr	r1, [sl, #44]	; 0x2c
   1e69c:	clz	r1, r1
   1e6a0:	lsr	r1, r1, #5
   1e6a4:	str	r1, [sl, #44]	; 0x2c
   1e6a8:	ldr	r1, [sp, #32]
   1e6ac:	ldr	r0, [r0, #96]	; 0x60
   1e6b0:	str	r0, [sl, #96]	; 0x60
   1e6b4:	ldr	r0, [ip, #48]	; 0x30
   1e6b8:	ldr	r7, [r7]
   1e6bc:	add	r3, r0, r1
   1e6c0:	ldr	r1, [sp, #36]	; 0x24
   1e6c4:	ldrb	r0, [ip, #16]
   1e6c8:	ldr	r1, [r1]
   1e6cc:	cmp	r0, #1
   1e6d0:	str	r1, [sp, #36]	; 0x24
   1e6d4:	bne	1e820 <gen_hostop6+0x104c>
   1e6d8:	ldr	r5, [ip, #100]	; 0x64
   1e6dc:	cmn	r5, #1
   1e6e0:	bne	1e704 <gen_hostop6+0xf30>
   1e6e4:	mov	r4, r3
   1e6e8:	bl	1309c <alloc_reg>
   1e6ec:	ldr	ip, [pc, #1436]	; 1ec90 <gen_hostop6+0x14bc>
   1e6f0:	mov	r3, r4
   1e6f4:	mov	r5, r0
   1e6f8:	add	ip, pc, ip
   1e6fc:	str	r0, [ip, #100]	; 0x64
   1e700:	ldr	r9, [ip, #92]	; 0x5c
   1e704:	str	r7, [sp, #32]
   1e708:	ldr	r4, [pc, #1412]	; 1ec94 <gen_hostop6+0x14c0>
   1e70c:	add	r4, pc, r4
   1e710:	ldr	r6, [r4, r9, lsl #3]!
   1e714:	cmp	r6, #19
   1e718:	bhi	1e778 <gen_hostop6+0xfa4>
   1e71c:	add	r7, r9, #1
   1e720:	cmp	r9, #15
   1e724:	str	r7, [ip, #92]	; 0x5c
   1e728:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e72c:	mov	r0, #1024	; 0x400
   1e730:	mov	r8, r3
   1e734:	lsl	r6, r0, r7
   1e738:	mov	r0, r6
   1e73c:	bl	f1c <malloc@plt>
   1e740:	cmp	r0, #0
   1e744:	str	r0, [r4, #12]
   1e748:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e74c:	mov	r1, #0
   1e750:	mov	r2, r6
   1e754:	add	r4, r4, #8
   1e758:	bl	f88 <memset@plt>
   1e75c:	str	r6, [r4]
   1e760:	cmp	r6, #19
   1e764:	mov	r3, r8
   1e768:	ldr	ip, [pc, #1320]	; 1ec98 <gen_hostop6+0x14c4>
   1e76c:	add	ip, pc, ip
   1e770:	bhi	1e77c <gen_hostop6+0xfa8>
   1e774:	b	1e9c0 <gen_hostop6+0x11ec>
   1e778:	mov	r7, r9
   1e77c:	sub	r0, r6, #20
   1e780:	mov	r1, #97	; 0x61
   1e784:	str	r0, [r4]
   1e788:	ldr	r8, [r4, #4]
   1e78c:	str	r1, [r8, r0]!
   1e790:	cmp	r8, #0
   1e794:	str	r5, [r8, #12]
   1e798:	beq	1e810 <gen_hostop6+0x103c>
   1e79c:	ldr	r6, [pc, #1276]	; 1eca0 <gen_hostop6+0x14cc>
   1e7a0:	add	r6, pc, r6
   1e7a4:	ldr	r4, [r6, r7, lsl #3]!
   1e7a8:	cmp	r4, #19
   1e7ac:	bhi	1e9dc <gen_hostop6+0x1208>
   1e7b0:	add	r5, r7, #1
   1e7b4:	cmp	r7, #15
   1e7b8:	str	r5, [ip, #92]	; 0x5c
   1e7bc:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e7c0:	mov	r0, #1024	; 0x400
   1e7c4:	mov	r9, r3
   1e7c8:	lsl	r4, r0, r5
   1e7cc:	mov	r0, r4
   1e7d0:	bl	f1c <malloc@plt>
   1e7d4:	ldr	r7, [sp, #32]
   1e7d8:	cmp	r0, #0
   1e7dc:	str	r0, [r6, #12]
   1e7e0:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e7e4:	mov	r1, #0
   1e7e8:	mov	r2, r4
   1e7ec:	add	r6, r6, #8
   1e7f0:	bl	f88 <memset@plt>
   1e7f4:	str	r4, [r6]
   1e7f8:	cmp	r4, #19
   1e7fc:	mov	r3, r9
   1e800:	ldr	ip, [pc, #1180]	; 1eca4 <gen_hostop6+0x14d0>
   1e804:	add	ip, pc, ip
   1e808:	bhi	1e9e4 <gen_hostop6+0x1210>
   1e80c:	b	1e9c0 <gen_hostop6+0x11ec>
   1e810:	ldr	r5, [pc, #1156]	; 1ec9c <gen_hostop6+0x14c8>
   1e814:	mov	r9, r7
   1e818:	ldr	r7, [sp, #32]
   1e81c:	add	r5, pc, r5
   1e820:	mov	r6, r5
   1e824:	ldr	r4, [r6, r9, lsl #3]!
   1e828:	cmp	r4, #19
   1e82c:	bhi	1e88c <gen_hostop6+0x10b8>
   1e830:	add	r5, r9, #1
   1e834:	cmp	r9, #15
   1e838:	str	r5, [ip, #92]	; 0x5c
   1e83c:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e840:	mov	r0, #1024	; 0x400
   1e844:	mov	r8, r3
   1e848:	lsl	r4, r0, r5
   1e84c:	mov	r0, r4
   1e850:	bl	f1c <malloc@plt>
   1e854:	cmp	r0, #0
   1e858:	str	r0, [r6, #12]
   1e85c:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e860:	mov	r1, #0
   1e864:	mov	r2, r4
   1e868:	add	r6, r6, #8
   1e86c:	bl	f88 <memset@plt>
   1e870:	str	r4, [r6]
   1e874:	cmp	r4, #19
   1e878:	mov	r3, r8
   1e87c:	ldr	ip, [pc, #1060]	; 1eca8 <gen_hostop6+0x14d4>
   1e880:	add	ip, pc, ip
   1e884:	bhi	1e890 <gen_hostop6+0x10bc>
   1e888:	b	1e9c0 <gen_hostop6+0x11ec>
   1e88c:	mov	r5, r9
   1e890:	sub	r0, r4, #20
   1e894:	mov	r1, #32
   1e898:	str	r0, [r6]
   1e89c:	ldr	r8, [r6, #4]
   1e8a0:	str	r1, [r8, r0]!
   1e8a4:	ldr	r0, [ip, #44]	; 0x2c
   1e8a8:	add	r0, r0, r3
   1e8ac:	str	r0, [r8, #12]
   1e8b0:	cmn	r7, #1
   1e8b4:	beq	1ea1c <gen_hostop6+0x1248>
   1e8b8:	ldr	r6, [pc, #1008]	; 1ecb0 <gen_hostop6+0x14dc>
   1e8bc:	mov	r9, r7
   1e8c0:	add	r6, pc, r6
   1e8c4:	ldr	r4, [r6, r5, lsl #3]!
   1e8c8:	cmp	r4, #19
   1e8cc:	bhi	1e92c <gen_hostop6+0x1158>
   1e8d0:	add	r7, r5, #1
   1e8d4:	cmp	r5, #15
   1e8d8:	str	r7, [ip, #92]	; 0x5c
   1e8dc:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e8e0:	mov	r0, #1024	; 0x400
   1e8e4:	lsl	r4, r0, r7
   1e8e8:	mov	r0, r4
   1e8ec:	bl	f1c <malloc@plt>
   1e8f0:	str	r0, [r6, #12]
   1e8f4:	cmp	r0, #0
   1e8f8:	ldr	r5, [pc, #952]	; 1ecb8 <gen_hostop6+0x14e4>
   1e8fc:	add	r5, pc, r5
   1e900:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e904:	mov	r1, #0
   1e908:	mov	r2, r4
   1e90c:	add	r6, r6, #8
   1e910:	bl	f88 <memset@plt>
   1e914:	str	r4, [r6]
   1e918:	cmp	r4, #19
   1e91c:	ldr	ip, [pc, #920]	; 1ecbc <gen_hostop6+0x14e8>
   1e920:	add	ip, pc, ip
   1e924:	bhi	1e938 <gen_hostop6+0x1164>
   1e928:	b	1e9c0 <gen_hostop6+0x11ec>
   1e92c:	mov	r7, r5
   1e930:	ldr	r5, [pc, #892]	; 1ecb4 <gen_hostop6+0x14e0>
   1e934:	add	r5, pc, r5
   1e938:	sub	r2, r4, #20
   1e93c:	mov	r3, #84	; 0x54
   1e940:	rev	r1, r9
   1e944:	str	r2, [r6]
   1e948:	ldr	r0, [r6, #4]
   1e94c:	str	r3, [r0, r2]!
   1e950:	mov	r2, r8
   1e954:	str	r1, [r0, #12]
   1e958:	mov	r1, r2
   1e95c:	ldr	r2, [r2, #16]
   1e960:	cmp	r2, #0
   1e964:	bne	1e958 <gen_hostop6+0x1184>
   1e968:	str	r0, [r1, #16]
   1e96c:	ldr	r4, [r5, r7, lsl #3]!
   1e970:	cmp	r4, #207	; 0xcf
   1e974:	bhi	1ea34 <gen_hostop6+0x1260>
   1e978:	add	r0, r7, #1
   1e97c:	cmp	r7, #15
   1e980:	str	r0, [ip, #92]	; 0x5c
   1e984:	bge	1e9c0 <gen_hostop6+0x11ec>
   1e988:	mov	r1, #1024	; 0x400
   1e98c:	lsl	r4, r1, r0
   1e990:	mov	r0, r4
   1e994:	bl	f1c <malloc@plt>
   1e998:	cmp	r0, #0
   1e99c:	str	r0, [r5, #12]
   1e9a0:	beq	1e9c0 <gen_hostop6+0x11ec>
   1e9a4:	mov	r1, #0
   1e9a8:	mov	r2, r4
   1e9ac:	add	r5, r5, #8
   1e9b0:	bl	f88 <memset@plt>
   1e9b4:	cmp	r4, #207	; 0xcf
   1e9b8:	str	r4, [r5]
   1e9bc:	bhi	1ea34 <gen_hostop6+0x1260>
   1e9c0:	ldr	r0, [pc, #760]	; 1ecc0 <gen_hostop6+0x14ec>
   1e9c4:	add	r0, pc, r0
   1e9c8:	bl	2204 <sf_bpf_error>
   1e9cc:	.word	0x00028aec
   1e9d0:	.word	0x00028aa4
   1e9d4:	.word	0x000289d4
   1e9d8:	.word	0x00028a38
   1e9dc:	mov	r5, r7
   1e9e0:	ldr	r7, [sp, #32]
   1e9e4:	sub	r1, r4, #20
   1e9e8:	mov	r2, #64	; 0x40
   1e9ec:	str	r1, [r6]
   1e9f0:	ldr	r0, [r6, #4]
   1e9f4:	str	r2, [r0, r1]!
   1e9f8:	mov	r2, r8
   1e9fc:	str	r3, [r0, #12]
   1ea00:	mov	r1, r2
   1ea04:	ldr	r2, [r2, #16]
   1ea08:	cmp	r2, #0
   1ea0c:	bne	1ea00 <gen_hostop6+0x122c>
   1ea10:	str	r0, [r1, #16]
   1ea14:	cmn	r7, #1
   1ea18:	bne	1e8b8 <gen_hostop6+0x10e4>
   1ea1c:	mov	r7, r5
   1ea20:	ldr	r5, [pc, #644]	; 1ecac <gen_hostop6+0x14d8>
   1ea24:	add	r5, pc, r5
   1ea28:	ldr	r4, [r5, r7, lsl #3]!
   1ea2c:	cmp	r4, #207	; 0xcf
   1ea30:	bls	1e978 <gen_hostop6+0x11a4>
   1ea34:	ldr	r0, [sp, #36]	; 0x24
   1ea38:	rev	r1, r0
   1ea3c:	sub	r0, r4, #208	; 0xd0
   1ea40:	str	r0, [r5]
   1ea44:	ldr	r2, [r5, #4]
   1ea48:	ldr	r5, [sp, #24]
   1ea4c:	adds	r6, r2, r0
   1ea50:	mov	r2, #21
   1ea54:	str	r8, [r6, #4]
   1ea58:	str	r2, [r6, #8]
   1ea5c:	str	r1, [r6, #20]
   1ea60:	str	r6, [r6, #96]	; 0x60
   1ea64:	beq	1ea98 <gen_hostop6+0x12c4>
   1ea68:	ldr	r1, [r5]
   1ea6c:	mov	r2, r6
   1ea70:	ldr	r3, [r2, #44]	; 0x2c
   1ea74:	add	r7, r2, #84	; 0x54
   1ea78:	cmp	r3, #0
   1ea7c:	mov	r3, #84	; 0x54
   1ea80:	movweq	r3, #60	; 0x3c
   1ea84:	addeq	r7, r2, #60	; 0x3c
   1ea88:	ldr	r2, [r2, r3]
   1ea8c:	str	r1, [r7]
   1ea90:	cmp	r2, #0
   1ea94:	bne	1ea70 <gen_hostop6+0x129c>
   1ea98:	ldr	r1, [r6, #44]	; 0x2c
   1ea9c:	cmp	sl, #0
   1eaa0:	clz	r1, r1
   1eaa4:	lsr	r1, r1, #5
   1eaa8:	str	r1, [r6, #44]	; 0x2c
   1eaac:	ldr	r1, [sl, #44]	; 0x2c
   1eab0:	clz	r2, r1
   1eab4:	lsr	r2, r2, #5
   1eab8:	str	r2, [sl, #44]	; 0x2c
   1eabc:	str	sl, [fp, #-32]	; 0xffffffe0
   1eac0:	beq	1eb18 <gen_hostop6+0x1344>
   1eac4:	mov	r3, #60	; 0x3c
   1eac8:	cmp	r1, #0
   1eacc:	mov	r2, sl
   1ead0:	ldr	r0, [sp, #20]
   1ead4:	movweq	r3, #84	; 0x54
   1ead8:	ldr	r1, [r2, r3]!
   1eadc:	cmp	r1, #0
   1eae0:	beq	1eb20 <gen_hostop6+0x134c>
   1eae4:	ldr	r3, [r1, #44]	; 0x2c
   1eae8:	add	r2, r1, #84	; 0x54
   1eaec:	cmp	r3, #0
   1eaf0:	mov	r3, #84	; 0x54
   1eaf4:	movweq	r3, #60	; 0x3c
   1eaf8:	addeq	r2, r1, #60	; 0x3c
   1eafc:	ldr	r1, [r1, r3]
   1eb00:	cmp	r1, #0
   1eb04:	bne	1eae4 <gen_hostop6+0x1310>
   1eb08:	b	1eb20 <gen_hostop6+0x134c>
   1eb0c:	.word	0x0002899c
   1eb10:	.word	0x000288b8
   1eb14:	.word	0x00028920
   1eb18:	ldr	r0, [sp, #20]
   1eb1c:	sub	r2, fp, #32
   1eb20:	str	r6, [r2]
   1eb24:	ldr	r1, [sl, #44]	; 0x2c
   1eb28:	clz	r1, r1
   1eb2c:	lsr	r1, r1, #5
   1eb30:	str	r1, [sl, #44]	; 0x2c
   1eb34:	ldr	r1, [r6, #96]	; 0x60
   1eb38:	str	r1, [sl, #96]	; 0x60
   1eb3c:	bl	6e1c <gen_linktype>
   1eb40:	mov	r4, r0
   1eb44:	cmp	r0, #0
   1eb48:	beq	1eb7c <gen_hostop6+0x13a8>
   1eb4c:	ldr	r0, [sl, #96]	; 0x60
   1eb50:	mov	r1, r4
   1eb54:	ldr	r2, [r1, #44]	; 0x2c
   1eb58:	add	r3, r1, #84	; 0x54
   1eb5c:	cmp	r2, #0
   1eb60:	mov	r2, #84	; 0x54
   1eb64:	movweq	r2, #60	; 0x3c
   1eb68:	addeq	r3, r1, #60	; 0x3c
   1eb6c:	ldr	r1, [r1, r2]
   1eb70:	str	r0, [r3]
   1eb74:	cmp	r1, #0
   1eb78:	bne	1eb54 <gen_hostop6+0x1380>
   1eb7c:	ldr	r0, [r4, #44]	; 0x2c
   1eb80:	cmp	sl, #0
   1eb84:	clz	r0, r0
   1eb88:	lsr	r0, r0, #5
   1eb8c:	str	r0, [r4, #44]	; 0x2c
   1eb90:	ldr	r0, [sl, #44]	; 0x2c
   1eb94:	clz	r1, r0
   1eb98:	lsr	r1, r1, #5
   1eb9c:	str	r1, [sl, #44]	; 0x2c
   1eba0:	str	sl, [fp, #-32]	; 0xffffffe0
   1eba4:	beq	1ebf0 <gen_hostop6+0x141c>
   1eba8:	mov	r2, #60	; 0x3c
   1ebac:	cmp	r0, #0
   1ebb0:	mov	r1, sl
   1ebb4:	movweq	r2, #84	; 0x54
   1ebb8:	ldr	r0, [r1, r2]!
   1ebbc:	cmp	r0, #0
   1ebc0:	beq	1ebf4 <gen_hostop6+0x1420>
   1ebc4:	ldr	r2, [r0, #44]	; 0x2c
   1ebc8:	add	r1, r0, #84	; 0x54
   1ebcc:	cmp	r2, #0
   1ebd0:	mov	r2, #84	; 0x54
   1ebd4:	movweq	r2, #60	; 0x3c
   1ebd8:	addeq	r1, r0, #60	; 0x3c
   1ebdc:	ldr	r0, [r0, r2]
   1ebe0:	cmp	r0, #0
   1ebe4:	bne	1ebc4 <gen_hostop6+0x13f0>
   1ebe8:	b	1ebf4 <gen_hostop6+0x1420>
   1ebec:	.word	0x00028820
   1ebf0:	sub	r1, fp, #32
   1ebf4:	str	r4, [r1]
   1ebf8:	ldr	r0, [sl, #44]	; 0x2c
   1ebfc:	clz	r0, r0
   1ec00:	lsr	r0, r0, #5
   1ec04:	str	r0, [sl, #44]	; 0x2c
   1ec08:	ldr	r0, [r4, #96]	; 0x60
   1ec0c:	str	r0, [r5]
   1ec10:	mov	r0, sl
   1ec14:	sub	sp, fp, #28
   1ec18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec1c:	bl	100c <abort@plt>
   1ec20:	.word	0x00028888
   1ec24:	.word	0x00028734
   1ec28:	.word	0x0002879c
   1ec2c:	.word	0x000285ec
   1ec30:	.word	0x00028668
   1ec34:	.word	0x00028618
   1ec38:	.word	0x000286bc
   1ec3c:	.word	0x00028490
   1ec40:	.word	0x00028518
   1ec44:	.word	0x0002833c
   1ec48:	.word	0x000284d4
   1ec4c:	.word	0x00028564
   1ec50:	.word	0x00028640
   1ec54:	.word	0x000284ac
   1ec58:	.word	0x00028410
   1ec5c:	.word	0x0002825c
   1ec60:	.word	0x00028188
   1ec64:	.word	0x000281e8
   1ec68:	.word	0x00028078
   1ec6c:	.word	0x000280f4
   1ec70:	.word	0x00028150
   1ec74:	.word	0x000280d8
   1ec78:	.word	0x00027e80
   1ec7c:	.word	0x00027fd8
   1ec80:	.word	0x00027f64
   1ec84:	.word	0x00027f9c
   1ec88:	.word	0x00028038
   1ec8c:	.word	0x00027f94
   1ec90:	.word	0x00027de8
   1ec94:	.word	0x00027d14
   1ec98:	.word	0x00027d74
   1ec9c:	.word	0x00027c04
   1eca0:	.word	0x00027c80
   1eca4:	.word	0x00027cdc
   1eca8:	.word	0x00027c60
   1ecac:	.word	0x000279fc
   1ecb0:	.word	0x00027b60
   1ecb4:	.word	0x00027aec
   1ecb8:	.word	0x00027b24
   1ecbc:	.word	0x00027bc0
   1ecc0:	.word	0x0000a9d0

0001ecc4 <gen_load_macplrel>:
   1ecc4:	push	{r4, r5, r6, r7, fp, lr}
   1ecc8:	add	fp, sp, #16
   1eccc:	ldr	r7, [pc, #144]	; 1ed64 <gen_load_macplrel+0xa0>
   1ecd0:	mov	r4, r0
   1ecd4:	mov	r6, r1
   1ecd8:	add	r7, pc, r7
   1ecdc:	ldrb	r0, [r7, #16]
   1ece0:	cmp	r0, #1
   1ece4:	bne	1ed44 <gen_load_macplrel+0x80>
   1ece8:	ldr	r0, [r7, #100]	; 0x64
   1ecec:	cmn	r0, #1
   1ecf0:	bne	1ecfc <gen_load_macplrel+0x38>
   1ecf4:	bl	1309c <alloc_reg>
   1ecf8:	str	r0, [r7, #100]	; 0x64
   1ecfc:	mov	r0, #97	; 0x61
   1ed00:	bl	1331c <new_stmt>
   1ed04:	mov	r5, r0
   1ed08:	ldr	r0, [r7, #100]	; 0x64
   1ed0c:	cmp	r5, #0
   1ed10:	str	r0, [r5, #12]
   1ed14:	beq	1ed44 <gen_load_macplrel+0x80>
   1ed18:	orr	r0, r6, #64	; 0x40
   1ed1c:	bl	1331c <new_stmt>
   1ed20:	mov	r2, r5
   1ed24:	str	r4, [r0, #12]
   1ed28:	mov	r1, r2
   1ed2c:	ldr	r2, [r2, #16]
   1ed30:	cmp	r2, #0
   1ed34:	bne	1ed28 <gen_load_macplrel+0x64>
   1ed38:	str	r0, [r1, #16]
   1ed3c:	mov	r0, r5
   1ed40:	pop	{r4, r5, r6, r7, fp, pc}
   1ed44:	orr	r0, r6, #32
   1ed48:	bl	1331c <new_stmt>
   1ed4c:	mov	r5, r0
   1ed50:	ldr	r0, [r7, #44]	; 0x2c
   1ed54:	add	r0, r0, r4
   1ed58:	str	r0, [r5, #12]
   1ed5c:	mov	r0, r5
   1ed60:	pop	{r4, r5, r6, r7, fp, pc}
   1ed64:	.word	0x00027808

0001ed68 <pcap_nametoaddr>:
   1ed68:	push	{fp, lr}
   1ed6c:	mov	fp, sp
   1ed70:	bl	ff4 <gethostbyname@plt>
   1ed74:	cmp	r0, #0
   1ed78:	moveq	r1, #0
   1ed7c:	moveq	r0, r1
   1ed80:	popeq	{fp, pc}
   1ed84:	ldr	r1, [r0, #16]
   1ed88:	ldr	r2, [r1]
   1ed8c:	cmp	r2, #0
   1ed90:	beq	1edb4 <pcap_nametoaddr+0x4c>
   1ed94:	add	r1, r1, #4
   1ed98:	ldr	r3, [r2]
   1ed9c:	rev	r3, r3
   1eda0:	str	r3, [r2]
   1eda4:	ldr	r2, [r1], #4
   1eda8:	cmp	r2, #0
   1edac:	bne	1ed98 <pcap_nametoaddr+0x30>
   1edb0:	ldr	r1, [r0, #16]
   1edb4:	mov	r0, r1
   1edb8:	pop	{fp, pc}

0001edbc <pcap_nametoaddrinfo>:
   1edbc:	push	{r4, sl, fp, lr}
   1edc0:	add	fp, sp, #8
   1edc4:	sub	sp, sp, #40	; 0x28
   1edc8:	add	r2, sp, #8
   1edcc:	vmov.i32	q8, #0	; 0x00000000
   1edd0:	mov	r4, #0
   1edd4:	add	r1, r2, #16
   1edd8:	mov	r3, r2
   1eddc:	vst1.64	{d16-d17}, [r1]
   1ede0:	mov	r1, #12
   1ede4:	vst1.64	{d16-d17}, [r3], r1
   1ede8:	mov	r1, #6
   1edec:	str	r1, [r3]
   1edf0:	mov	r1, #1
   1edf4:	add	r3, sp, #4
   1edf8:	str	r1, [sp, #16]
   1edfc:	mov	r1, #0
   1ee00:	bl	fe8 <getaddrinfo@plt>
   1ee04:	ldr	r1, [sp, #4]
   1ee08:	cmp	r0, #0
   1ee0c:	movne	r1, r4
   1ee10:	mov	r0, r1
   1ee14:	sub	sp, fp, #8
   1ee18:	pop	{r4, sl, fp, pc}

0001ee1c <pcap_nametonetaddr>:
   1ee1c:	push	{fp, lr}
   1ee20:	mov	fp, sp
   1ee24:	bl	eb0 <getnetbyname@plt>
   1ee28:	cmp	r0, #0
   1ee2c:	ldrne	r0, [r0, #12]
   1ee30:	moveq	r0, #0
   1ee34:	pop	{fp, pc}

0001ee38 <pcap_nametoport>:
   1ee38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ee3c:	add	fp, sp, #24
   1ee40:	mov	r5, r1
   1ee44:	ldr	r1, [pc, #140]	; 1eed8 <pcap_nametoport+0xa0>
   1ee48:	mov	r8, r2
   1ee4c:	mov	r6, r0
   1ee50:	add	r1, pc, r1
   1ee54:	bl	f7c <getservbyname@plt>
   1ee58:	cmp	r0, #0
   1ee5c:	mvn	r4, #0
   1ee60:	mvn	r7, #0
   1ee64:	ldrhne	r0, [r0, #8]
   1ee68:	ldr	r1, [pc, #108]	; 1eedc <pcap_nametoport+0xa4>
   1ee6c:	rev16ne	r4, r0
   1ee70:	add	r1, pc, r1
   1ee74:	mov	r0, r6
   1ee78:	bl	f7c <getservbyname@plt>
   1ee7c:	cmp	r0, #0
   1ee80:	ldrhne	r0, [r0, #8]
   1ee84:	rev16ne	r7, r0
   1ee88:	cmp	r4, #0
   1ee8c:	blt	1eeb8 <pcap_nametoport+0x80>
   1ee90:	cmp	r7, r4
   1ee94:	mov	r1, #6
   1ee98:	mov	r0, #6
   1ee9c:	str	r4, [r5]
   1eea0:	mvneq	r1, #0
   1eea4:	cmn	r7, #1
   1eea8:	movle	r1, r0
   1eeac:	mov	r0, #1
   1eeb0:	str	r1, [r8]
   1eeb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eeb8:	cmp	r7, #0
   1eebc:	movlt	r0, #0
   1eec0:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eec4:	mov	r0, #17
   1eec8:	str	r7, [r5]
   1eecc:	str	r0, [r8]
   1eed0:	mov	r0, #1
   1eed4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eed8:	.word	0x00009c84
   1eedc:	.word	0x00009c99

0001eee0 <pcap_nametoportrange>:
   1eee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eee4:	add	fp, sp, #28
   1eee8:	sub	sp, sp, #12
   1eeec:	mov	r7, r1
   1eef0:	ldr	r1, [pc, #428]	; 1f0a4 <pcap_nametoportrange+0x1c4>
   1eef4:	mov	r8, r3
   1eef8:	mov	r9, r2
   1eefc:	add	r2, sp, #8
   1ef00:	add	r3, sp, #4
   1ef04:	mov	r4, r0
   1ef08:	add	r1, pc, r1
   1ef0c:	bl	fb8 <sscanf@plt>
   1ef10:	cmp	r0, #2
   1ef14:	bne	1ef30 <pcap_nametoportrange+0x50>
   1ef18:	ldr	r0, [sp, #8]
   1ef1c:	str	r0, [r7]
   1ef20:	ldr	r0, [sp, #4]
   1ef24:	str	r0, [r9]
   1ef28:	mvn	r0, #0
   1ef2c:	b	1f078 <pcap_nametoportrange+0x198>
   1ef30:	mov	r0, r4
   1ef34:	bl	ed4 <strdup@plt>
   1ef38:	mov	r5, #0
   1ef3c:	cmp	r0, #0
   1ef40:	beq	1efd4 <pcap_nametoportrange+0xf4>
   1ef44:	mov	r1, #45	; 0x2d
   1ef48:	mov	r6, r0
   1ef4c:	bl	f58 <strchr@plt>
   1ef50:	cmp	r0, #0
   1ef54:	beq	1efcc <pcap_nametoportrange+0xec>
   1ef58:	mov	r4, r0
   1ef5c:	mov	r0, #0
   1ef60:	strb	r0, [r4]
   1ef64:	mov	r0, r6
   1ef68:	ldr	r1, [pc, #312]	; 1f0a8 <pcap_nametoportrange+0x1c8>
   1ef6c:	add	r1, pc, r1
   1ef70:	bl	f7c <getservbyname@plt>
   1ef74:	cmp	r0, #0
   1ef78:	mvn	r5, #0
   1ef7c:	mvn	sl, #0
   1ef80:	ldrhne	r0, [r0, #8]
   1ef84:	ldr	r1, [pc, #288]	; 1f0ac <pcap_nametoportrange+0x1cc>
   1ef88:	rev16ne	r5, r0
   1ef8c:	add	r1, pc, r1
   1ef90:	mov	r0, r6
   1ef94:	bl	f7c <getservbyname@plt>
   1ef98:	cmp	r0, #0
   1ef9c:	ldrhne	r0, [r0, #8]
   1efa0:	rev16ne	sl, r0
   1efa4:	cmp	r5, #0
   1efa8:	blt	1efe0 <pcap_nametoportrange+0x100>
   1efac:	str	r5, [r7]
   1efb0:	cmp	sl, r5
   1efb4:	mov	r7, #6
   1efb8:	mov	r0, #6
   1efbc:	mvneq	r7, #0
   1efc0:	cmn	sl, #1
   1efc4:	movle	r7, r0
   1efc8:	b	1eff0 <pcap_nametoportrange+0x110>
   1efcc:	mov	r0, r6
   1efd0:	bl	ea4 <free@plt>
   1efd4:	mov	r0, r5
   1efd8:	sub	sp, fp, #28
   1efdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efe0:	cmp	sl, #0
   1efe4:	blt	1f08c <pcap_nametoportrange+0x1ac>
   1efe8:	str	sl, [r7]
   1efec:	mov	r7, #17
   1eff0:	str	r7, [r8]
   1eff4:	add	r4, r4, #1
   1eff8:	ldr	r1, [pc, #176]	; 1f0b0 <pcap_nametoportrange+0x1d0>
   1effc:	mov	r0, r4
   1f000:	add	r1, pc, r1
   1f004:	bl	f7c <getservbyname@plt>
   1f008:	cmp	r0, #0
   1f00c:	mvn	r5, #0
   1f010:	mvn	sl, #0
   1f014:	ldrhne	r0, [r0, #8]
   1f018:	ldr	r1, [pc, #148]	; 1f0b4 <pcap_nametoportrange+0x1d4>
   1f01c:	rev16ne	r5, r0
   1f020:	add	r1, pc, r1
   1f024:	mov	r0, r4
   1f028:	bl	f7c <getservbyname@plt>
   1f02c:	cmp	r0, #0
   1f030:	ldrhne	r0, [r0, #8]
   1f034:	rev16ne	sl, r0
   1f038:	cmp	r5, #0
   1f03c:	blt	1f060 <pcap_nametoportrange+0x180>
   1f040:	cmp	sl, r5
   1f044:	mov	r0, #6
   1f048:	mov	r1, #6
   1f04c:	str	r5, [r9]
   1f050:	mvneq	r0, #0
   1f054:	cmn	sl, #1
   1f058:	movle	r0, r1
   1f05c:	b	1f070 <pcap_nametoportrange+0x190>
   1f060:	cmp	sl, #0
   1f064:	blt	1f08c <pcap_nametoportrange+0x1ac>
   1f068:	mov	r0, #17
   1f06c:	str	sl, [r9]
   1f070:	cmp	r0, r7
   1f074:	mvnne	r0, #0
   1f078:	mov	r5, #1
   1f07c:	str	r0, [r8]
   1f080:	mov	r0, r5
   1f084:	sub	sp, fp, #28
   1f088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f08c:	mov	r0, r6
   1f090:	bl	ea4 <free@plt>
   1f094:	mov	r5, #0
   1f098:	mov	r0, r5
   1f09c:	sub	sp, fp, #28
   1f0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0a4:	.word	0x0000af30
   1f0a8:	.word	0x00009b68
   1f0ac:	.word	0x00009b7d
   1f0b0:	.word	0x00009ad4
   1f0b4:	.word	0x00009ae9

0001f0b8 <pcap_nametoproto>:
   1f0b8:	push	{fp, lr}
   1f0bc:	mov	fp, sp
   1f0c0:	bl	e80 <getprotobyname@plt>
   1f0c4:	cmp	r0, #0
   1f0c8:	ldrne	r0, [r0, #8]
   1f0cc:	mvneq	r0, #0
   1f0d0:	pop	{fp, pc}

0001f0d4 <pcap_nametoeproto>:
   1f0d4:	push	{r4, r5, r6, sl, fp, lr}
   1f0d8:	add	fp, sp, #16
   1f0dc:	mov	r5, r0
   1f0e0:	ldr	r0, [pc, #80]	; 1f138 <pcap_nametoeproto+0x64>
   1f0e4:	mvn	r4, #0
   1f0e8:	ldr	r0, [pc, r0]
   1f0ec:	cmp	r0, #0
   1f0f0:	beq	1f124 <pcap_nametoeproto+0x50>
   1f0f4:	ldr	r1, [pc, #64]	; 1f13c <pcap_nametoeproto+0x68>
   1f0f8:	add	r1, pc, r1
   1f0fc:	add	r6, r1, #4
   1f100:	mov	r1, r5
   1f104:	bl	e50 <strcmp@plt>
   1f108:	cmp	r0, #0
   1f10c:	beq	1f12c <pcap_nametoeproto+0x58>
   1f110:	ldr	r0, [r6, #4]
   1f114:	add	r1, r6, #8
   1f118:	mov	r6, r1
   1f11c:	cmp	r0, #0
   1f120:	bne	1f100 <pcap_nametoeproto+0x2c>
   1f124:	mov	r0, r4
   1f128:	pop	{r4, r5, r6, sl, fp, pc}
   1f12c:	ldrh	r4, [r6]
   1f130:	mov	r0, r4
   1f134:	pop	{r4, r5, r6, sl, fp, pc}
   1f138:	.word	0x00026ff4
   1f13c:	.word	0x00026fe4

0001f140 <pcap_nametollc>:
   1f140:	push	{r4, r5, fp, lr}
   1f144:	add	fp, sp, #8
   1f148:	mov	r4, r0
   1f14c:	ldr	r0, [pc, #156]	; 1f1f0 <pcap_nametollc+0xb0>
   1f150:	mov	r1, r4
   1f154:	add	r0, pc, r0
   1f158:	bl	e50 <strcmp@plt>
   1f15c:	cmp	r0, #0
   1f160:	beq	1f1c8 <pcap_nametollc+0x88>
   1f164:	ldr	r0, [pc, #140]	; 1f1f8 <pcap_nametollc+0xb8>
   1f168:	mov	r1, r4
   1f16c:	add	r0, pc, r0
   1f170:	bl	e50 <strcmp@plt>
   1f174:	ldr	r5, [pc, #128]	; 1f1fc <pcap_nametollc+0xbc>
   1f178:	cmp	r0, #0
   1f17c:	add	r5, pc, r5
   1f180:	beq	1f1d8 <pcap_nametollc+0x98>
   1f184:	ldr	r0, [pc, #116]	; 1f200 <pcap_nametollc+0xc0>
   1f188:	mov	r1, r4
   1f18c:	add	r0, pc, r0
   1f190:	bl	e50 <strcmp@plt>
   1f194:	cmp	r0, #0
   1f198:	beq	1f1e4 <pcap_nametollc+0xa4>
   1f19c:	ldr	r0, [pc, #96]	; 1f204 <pcap_nametollc+0xc4>
   1f1a0:	mov	r1, r4
   1f1a4:	add	r0, pc, r0
   1f1a8:	bl	e50 <strcmp@plt>
   1f1ac:	mov	r1, r0
   1f1b0:	mvn	r0, #0
   1f1b4:	cmp	r1, #0
   1f1b8:	popne	{r4, r5, fp, pc}
   1f1bc:	add	r0, r5, #24
   1f1c0:	ldrh	r0, [r0, #4]
   1f1c4:	pop	{r4, r5, fp, pc}
   1f1c8:	ldr	r0, [pc, #36]	; 1f1f4 <pcap_nametollc+0xb4>
   1f1cc:	add	r0, pc, r0
   1f1d0:	ldrh	r0, [r0, #4]
   1f1d4:	pop	{r4, r5, fp, pc}
   1f1d8:	add	r0, r5, #8
   1f1dc:	ldrh	r0, [r0, #4]
   1f1e0:	pop	{r4, r5, fp, pc}
   1f1e4:	add	r0, r5, #16
   1f1e8:	ldrh	r0, [r0, #4]
   1f1ec:	pop	{r4, r5, fp, pc}
   1f1f0:	.word	0x0000adc8
   1f1f4:	.word	0x00026b64
   1f1f8:	.word	0x0000adb4
   1f1fc:	.word	0x00026bb4
   1f200:	.word	0x0000ad98
   1f204:	.word	0x0000ad84

0001f208 <__pcap_atoin>:
   1f208:	push	{fp, lr}
   1f20c:	mov	fp, sp
   1f210:	mov	lr, #0
   1f214:	mov	ip, #0
   1f218:	str	lr, [r1]
   1f21c:	b	1f240 <__pcap_atoin+0x38>
   1f220:	uxtb	r2, r2
   1f224:	add	ip, ip, #8
   1f228:	orr	lr, r2, lr, lsl #8
   1f22c:	str	lr, [r1]
   1f230:	ldrb	r2, [r0, #-1]
   1f234:	cmp	r2, #0
   1f238:	moveq	r0, ip
   1f23c:	popeq	{fp, pc}
   1f240:	add	r0, r0, #1
   1f244:	mov	r2, #0
   1f248:	ldrb	r3, [r0, #-1]
   1f24c:	cmp	r3, #0
   1f250:	cmpne	r3, #46	; 0x2e
   1f254:	beq	1f220 <__pcap_atoin+0x18>
   1f258:	add	r2, r2, r2, lsl #2
   1f25c:	add	r0, r0, #1
   1f260:	add	r2, r3, r2, lsl #1
   1f264:	sub	r2, r2, #48	; 0x30
   1f268:	ldrb	r3, [r0, #-1]
   1f26c:	cmp	r3, #0
   1f270:	cmpne	r3, #46	; 0x2e
   1f274:	beq	1f220 <__pcap_atoin+0x18>
   1f278:	b	1f258 <__pcap_atoin+0x50>

0001f27c <__pcap_atodn>:
   1f27c:	push	{r4, r5, fp, lr}
   1f280:	add	fp, sp, #8
   1f284:	sub	sp, sp, #8
   1f288:	mov	r4, r1
   1f28c:	ldr	r1, [pc, #72]	; 1f2dc <__pcap_atodn+0x60>
   1f290:	mov	r2, sp
   1f294:	add	r3, sp, #4
   1f298:	mov	r5, r0
   1f29c:	add	r1, pc, r1
   1f2a0:	bl	fb8 <sscanf@plt>
   1f2a4:	cmp	r0, #2
   1f2a8:	ldreq	r0, [sp]
   1f2ac:	ldreq	r1, [sp, #4]
   1f2b0:	andeq	r0, r0, #63	; 0x3f
   1f2b4:	bfceq	r1, #10, #22
   1f2b8:	orreq	r0, r1, r0, lsl #10
   1f2bc:	streq	r0, [r4]
   1f2c0:	moveq	r0, #32
   1f2c4:	subeq	sp, fp, #8
   1f2c8:	popeq	{r4, r5, fp, pc}
   1f2cc:	ldr	r0, [pc, #12]	; 1f2e0 <__pcap_atodn+0x64>
   1f2d0:	mov	r1, r5
   1f2d4:	add	r0, pc, r0
   1f2d8:	bl	2204 <sf_bpf_error>
   1f2dc:	.word	0x0000ac13
   1f2e0:	.word	0x0000abe1

0001f2e4 <pcap_ether_aton>:
   1f2e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f2e8:	add	fp, sp, #24
   1f2ec:	mov	r4, r0
   1f2f0:	mov	r0, #6
   1f2f4:	bl	f1c <malloc@plt>
   1f2f8:	mov	r8, r0
   1f2fc:	cmp	r0, #0
   1f300:	beq	1f3c4 <pcap_ether_aton+0xe0>
   1f304:	mov	r9, #1
   1f308:	movw	r7, #8195	; 0x2003
   1f30c:	mov	r5, r8
   1f310:	ldrb	r6, [r4]
   1f314:	sub	r0, r6, #45	; 0x2d
   1f318:	cmp	r0, #13
   1f31c:	bls	1f3ac <pcap_ether_aton+0xc8>
   1f320:	b	1f3bc <pcap_ether_aton+0xd8>
   1f324:	bl	f34 <__ctype_b_loc@plt>
   1f328:	ldr	r2, [r0]
   1f32c:	mvn	r1, #47	; 0x2f
   1f330:	add	r0, r2, r6, lsl #1
   1f334:	ldrh	r3, [r0]
   1f338:	add	r0, r4, #1
   1f33c:	tst	r3, #2048	; 0x800
   1f340:	bne	1f350 <pcap_ether_aton+0x6c>
   1f344:	tst	r3, #512	; 0x200
   1f348:	mvn	r1, #86	; 0x56
   1f34c:	mvneq	r1, #54	; 0x36
   1f350:	add	r3, r1, r6
   1f354:	ldrb	r1, [r0]
   1f358:	add	r2, r2, r1, lsl #1
   1f35c:	ldrh	r2, [r2]
   1f360:	tst	r2, #4096	; 0x1000
   1f364:	bne	1f370 <pcap_ether_aton+0x8c>
   1f368:	mov	r4, r0
   1f36c:	b	1f398 <pcap_ether_aton+0xb4>
   1f370:	lsl	r0, r3, #4
   1f374:	mvn	r3, #47	; 0x2f
   1f378:	tst	r2, #2048	; 0x800
   1f37c:	bne	1f38c <pcap_ether_aton+0xa8>
   1f380:	tst	r2, #512	; 0x200
   1f384:	mvn	r3, #86	; 0x56
   1f388:	mvneq	r3, #54	; 0x36
   1f38c:	add	r1, r3, r1
   1f390:	add	r4, r4, #2
   1f394:	orr	r3, r1, r0
   1f398:	strb	r3, [r5], #1
   1f39c:	ldrb	r6, [r4]
   1f3a0:	sub	r0, r6, #45	; 0x2d
   1f3a4:	cmp	r0, #13
   1f3a8:	bhi	1f3bc <pcap_ether_aton+0xd8>
   1f3ac:	tst	r7, r9, lsl r0
   1f3b0:	beq	1f3bc <pcap_ether_aton+0xd8>
   1f3b4:	ldrb	r6, [r4, #1]!
   1f3b8:	b	1f324 <pcap_ether_aton+0x40>
   1f3bc:	cmp	r6, #0
   1f3c0:	bne	1f324 <pcap_ether_aton+0x40>
   1f3c4:	mov	r0, r8
   1f3c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f3cc <pcap_ether_hostton>:
   1f3cc:	push	{r4, r5, r6, sl, fp, lr}
   1f3d0:	add	fp, sp, #16
   1f3d4:	ldr	r5, [pc, #184]	; 1f494 <pcap_ether_hostton+0xc8>
   1f3d8:	mov	r4, r0
   1f3dc:	add	r5, pc, r5
   1f3e0:	ldr	r0, [r5, #4]
   1f3e4:	cmp	r0, #0
   1f3e8:	beq	1f404 <pcap_ether_hostton+0x38>
   1f3ec:	ldr	r0, [pc, #172]	; 1f4a0 <pcap_ether_hostton+0xd4>
   1f3f0:	ldr	r0, [pc, r0]
   1f3f4:	cmp	r0, #0
   1f3f8:	beq	1f488 <pcap_ether_hostton+0xbc>
   1f3fc:	bl	ee0 <rewind@plt>
   1f400:	b	1f430 <pcap_ether_hostton+0x64>
   1f404:	ldr	r0, [pc, #140]	; 1f498 <pcap_ether_hostton+0xcc>
   1f408:	ldr	r1, [pc, #140]	; 1f49c <pcap_ether_hostton+0xd0>
   1f40c:	add	r0, pc, r0
   1f410:	add	r1, pc, r1
   1f414:	bl	e74 <fopen@plt>
   1f418:	str	r0, [r5]
   1f41c:	cmp	r0, #0
   1f420:	ldr	r1, [r5, #4]
   1f424:	add	r1, r1, #1
   1f428:	str	r1, [r5, #4]
   1f42c:	beq	1f488 <pcap_ether_hostton+0xbc>
   1f430:	mov	r5, #0
   1f434:	ldr	r0, [pc, #104]	; 1f4a4 <pcap_ether_hostton+0xd8>
   1f438:	ldr	r0, [pc, r0]
   1f43c:	bl	24048 <pcap_next_etherent>
   1f440:	cmp	r0, #0
   1f444:	beq	1f480 <pcap_ether_hostton+0xb4>
   1f448:	mov	r6, r0
   1f44c:	add	r0, r0, #6
   1f450:	mov	r1, r4
   1f454:	bl	e50 <strcmp@plt>
   1f458:	cmp	r0, #0
   1f45c:	bne	1f434 <pcap_ether_hostton+0x68>
   1f460:	mov	r0, #6
   1f464:	bl	f1c <malloc@plt>
   1f468:	cmp	r0, #0
   1f46c:	ldrhne	r1, [r6, #4]
   1f470:	movne	r5, r0
   1f474:	strhne	r1, [r0, #4]
   1f478:	ldrne	r1, [r6]
   1f47c:	strne	r1, [r0]
   1f480:	mov	r0, r5
   1f484:	pop	{r4, r5, r6, sl, fp, pc}
   1f488:	mov	r5, #0
   1f48c:	mov	r0, r5
   1f490:	pop	{r4, r5, r6, sl, fp, pc}
   1f494:	.word	0x00027170
   1f498:	.word	0x0000aac7
   1f49c:	.word	0x0000bf2c
   1f4a0:	.word	0x0002715c
   1f4a4:	.word	0x00027114

0001f4a8 <__pcap_nametodnaddr>:
   1f4a8:	push	{fp, lr}
   1f4ac:	mov	fp, sp
   1f4b0:	mov	r1, r0
   1f4b4:	ldr	r0, [pc, #4]	; 1f4c0 <__pcap_nametodnaddr+0x18>
   1f4b8:	add	r0, pc, r0
   1f4bc:	bl	2204 <sf_bpf_error>
   1f4c0:	.word	0x0000aa27

0001f4c4 <sf_bpf_optimize>:
   1f4c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f4c8:	add	fp, sp, #28
   1f4cc:	sub	sp, sp, #20
   1f4d0:	str	r0, [sp]
   1f4d4:	ldr	r5, [r0]
   1f4d8:	ldr	r7, [pc, #1656]	; 1fb58 <sf_bpf_optimize+0x694>
   1f4dc:	add	r7, pc, r7
   1f4e0:	ldr	r4, [r7, #4]
   1f4e4:	add	r0, r4, #1
   1f4e8:	str	r0, [r7, #4]
   1f4ec:	mov	r0, r5
   1f4f0:	bl	23f38 <count_blocks>
   1f4f4:	mov	r1, #4
   1f4f8:	mov	r6, r0
   1f4fc:	bl	e44 <calloc@plt>
   1f500:	ldr	r1, [pc, #1620]	; 1fb5c <sf_bpf_optimize+0x698>
   1f504:	cmp	r0, #0
   1f508:	add	r1, pc, r1
   1f50c:	str	r0, [r1]
   1f510:	beq	1f808 <sf_bpf_optimize+0x344>
   1f514:	mov	r0, #0
   1f518:	str	r0, [r7, #16]
   1f51c:	add	r0, r4, #2
   1f520:	str	r0, [r7, #4]
   1f524:	mov	r0, r5
   1f528:	bl	23f94 <number_blks_r>
   1f52c:	ldr	r8, [r7, #16]
   1f530:	mov	r1, #4
   1f534:	lsl	r0, r8, #1
   1f538:	str	r0, [r7, #36]	; 0x24
   1f53c:	bl	e44 <calloc@plt>
   1f540:	mov	r4, r0
   1f544:	ldr	r0, [pc, #1556]	; 1fb60 <sf_bpf_optimize+0x69c>
   1f548:	cmp	r4, #0
   1f54c:	add	r0, pc, r0
   1f550:	str	r4, [r0]
   1f554:	beq	1f808 <sf_bpf_optimize+0x344>
   1f558:	mov	r0, r8
   1f55c:	mov	r1, #4
   1f560:	str	r5, [sp, #12]
   1f564:	bl	e44 <calloc@plt>
   1f568:	ldr	r1, [pc, #1524]	; 1fb64 <sf_bpf_optimize+0x6a0>
   1f56c:	cmp	r0, #0
   1f570:	add	r1, pc, r1
   1f574:	str	r0, [r1]
   1f578:	beq	1f808 <sf_bpf_optimize+0x344>
   1f57c:	ldr	r7, [pc, #1508]	; 1fb68 <sf_bpf_optimize+0x6a4>
   1f580:	mov	r0, #1
   1f584:	add	sl, r0, r8, lsr #5
   1f588:	add	r7, pc, r7
   1f58c:	mov	r5, r7
   1f590:	str	sl, [r7, #24]
   1f594:	ubfx	r7, r8, #4, #27
   1f598:	add	r9, r7, #1
   1f59c:	add	r0, r9, sl
   1f5a0:	str	r9, [r5, #40]	; 0x28
   1f5a4:	mul	r0, r8, r0
   1f5a8:	lsl	r0, r0, #3
   1f5ac:	bl	f1c <malloc@plt>
   1f5b0:	mov	ip, r0
   1f5b4:	ldr	r0, [pc, #1456]	; 1fb6c <sf_bpf_optimize+0x6a8>
   1f5b8:	cmp	ip, #0
   1f5bc:	add	r0, pc, r0
   1f5c0:	str	ip, [r0]
   1f5c4:	beq	1f808 <sf_bpf_optimize+0x344>
   1f5c8:	cmp	r6, #1
   1f5cc:	str	ip, [r5, #20]
   1f5d0:	blt	1f7b0 <sf_bpf_optimize+0x2ec>
   1f5d4:	lsr	r0, r8, #5
   1f5d8:	mov	r1, #4
   1f5dc:	str	r4, [sp, #16]
   1f5e0:	sub	r2, r6, #1
   1f5e4:	add	r1, r1, r0, lsl #2
   1f5e8:	lsl	r0, r0, #2
   1f5ec:	str	r0, [sp, #8]
   1f5f0:	mul	r5, r1, r2
   1f5f4:	mul	r4, r1, r6
   1f5f8:	mov	r2, #0
   1f5fc:	mov	r0, ip
   1f600:	ldr	r3, [pc, #1384]	; 1fb70 <sf_bpf_optimize+0x6ac>
   1f604:	ldr	r3, [pc, r3]
   1f608:	ldr	lr, [r3, r2, lsl #2]
   1f60c:	add	r2, r2, #1
   1f610:	cmp	r6, r2
   1f614:	str	r0, [lr, #104]	; 0x68
   1f618:	add	r0, r0, r1
   1f61c:	bne	1f608 <sf_bpf_optimize+0x144>
   1f620:	ldr	r0, [pc, #1356]	; 1fb74 <sf_bpf_optimize+0x6b0>
   1f624:	add	r2, ip, r4
   1f628:	mov	r4, #0
   1f62c:	add	sl, r2, sl, lsl #2
   1f630:	add	r0, pc, r0
   1f634:	str	r2, [r0, #28]
   1f638:	ldr	r0, [r3, r4, lsl #2]
   1f63c:	add	r4, r4, #1
   1f640:	cmp	r6, r4
   1f644:	str	r2, [r0, #108]	; 0x6c
   1f648:	add	r2, r2, r1
   1f64c:	bne	1f638 <sf_bpf_optimize+0x174>
   1f650:	ldr	r2, [pc, #1312]	; 1fb78 <sf_bpf_optimize+0x6b4>
   1f654:	add	r0, sl, r5
   1f658:	cmp	r6, #1
   1f65c:	add	r2, pc, r2
   1f660:	str	r0, [r2, #32]
   1f664:	add	r2, r0, r9, lsl #2
   1f668:	ldr	r5, [r3]
   1f66c:	mov	r3, #0
   1f670:	str	r2, [r5, #80]	; 0x50
   1f674:	ldr	r2, [sp, #16]
   1f678:	str	r0, [r5, #56]	; 0x38
   1f67c:	mov	r0, r5
   1f680:	str	r3, [r0, #48]!	; 0x30
   1f684:	str	r0, [r2]
   1f688:	mov	r0, r5
   1f68c:	str	r8, [r0, #72]!	; 0x48
   1f690:	ldr	r2, [pc, #1252]	; 1fb7c <sf_bpf_optimize+0x6b8>
   1f694:	ldr	r2, [pc, r2]
   1f698:	str	r0, [r2, r8, lsl #2]
   1f69c:	str	r5, [r5, #88]	; 0x58
   1f6a0:	str	r5, [r5, #64]	; 0x40
   1f6a4:	beq	1f74c <sf_bpf_optimize+0x288>
   1f6a8:	ldr	r4, [sp, #8]
   1f6ac:	mvn	r2, #0
   1f6b0:	add	r2, r2, r6, lsl #1
   1f6b4:	add	r0, r4, r7, lsl #3
   1f6b8:	mla	r0, r1, r2, r0
   1f6bc:	add	r0, ip, r0
   1f6c0:	add	lr, r0, #12
   1f6c4:	add	r0, r7, r7, lsl #1
   1f6c8:	add	r0, r4, r0, lsl #2
   1f6cc:	mov	r4, #1
   1f6d0:	mla	r0, r1, r2, r0
   1f6d4:	mov	r1, #8
   1f6d8:	lsl	r2, r8, #2
   1f6dc:	add	r0, ip, r0
   1f6e0:	add	r1, r1, r7, lsl #3
   1f6e4:	add	ip, r0, #16
   1f6e8:	ldr	r7, [pc, #1168]	; 1fb80 <sf_bpf_optimize+0x6bc>
   1f6ec:	add	r5, ip, r3
   1f6f0:	ldr	r7, [pc, r7]
   1f6f4:	ldr	r7, [r7, r4, lsl #2]
   1f6f8:	ldr	r0, [pc, #1156]	; 1fb84 <sf_bpf_optimize+0x6c0>
   1f6fc:	ldr	r0, [pc, r0]
   1f700:	str	r5, [r7, #80]	; 0x50
   1f704:	add	r5, lr, r3
   1f708:	add	r3, r3, r1
   1f70c:	str	r5, [r7, #56]	; 0x38
   1f710:	mov	r5, r7
   1f714:	str	r4, [r5, #48]!	; 0x30
   1f718:	str	r5, [r0, r4, lsl #2]
   1f71c:	add	r0, r8, r4
   1f720:	mov	r5, r7
   1f724:	str	r0, [r5, #72]!	; 0x48
   1f728:	ldr	r0, [pc, #1112]	; 1fb88 <sf_bpf_optimize+0x6c4>
   1f72c:	ldr	r0, [pc, r0]
   1f730:	add	r0, r0, r2
   1f734:	str	r5, [r0, r4, lsl #2]
   1f738:	add	r4, r4, #1
   1f73c:	str	r7, [r7, #88]	; 0x58
   1f740:	str	r7, [r7, #64]	; 0x40
   1f744:	cmp	r6, r4
   1f748:	bne	1f6e8 <sf_bpf_optimize+0x224>
   1f74c:	ldr	r1, [pc, #1080]	; 1fb8c <sf_bpf_optimize+0x6c8>
   1f750:	mov	r0, #0
   1f754:	mov	r2, #0
   1f758:	ldr	r1, [pc, r1]
   1f75c:	ldr	r9, [pc, #1068]	; 1fb90 <sf_bpf_optimize+0x6cc>
   1f760:	add	r9, pc, r9
   1f764:	ldr	r3, [r1, r2, lsl #2]
   1f768:	mov	r7, #0
   1f76c:	ldr	r3, [r3, #4]
   1f770:	cmp	r3, #0
   1f774:	beq	1f794 <sf_bpf_optimize+0x2d0>
   1f778:	mov	r7, #0
   1f77c:	ldr	r5, [r3]
   1f780:	ldr	r3, [r3, #16]
   1f784:	cmn	r5, #1
   1f788:	addne	r7, r7, #1
   1f78c:	cmp	r3, #0
   1f790:	bne	1f77c <sf_bpf_optimize+0x2b8>
   1f794:	add	r0, r0, r7
   1f798:	add	r2, r2, #1
   1f79c:	add	r0, r0, #1
   1f7a0:	cmp	r2, r6
   1f7a4:	bne	1f764 <sf_bpf_optimize+0x2a0>
   1f7a8:	add	r4, r0, r0, lsl #1
   1f7ac:	b	1f7c0 <sf_bpf_optimize+0x2fc>
   1f7b0:	str	ip, [r5, #28]
   1f7b4:	str	ip, [r5, #32]
   1f7b8:	mov	r4, #0
   1f7bc:	mov	r9, r5
   1f7c0:	mov	r0, r4
   1f7c4:	mov	r1, #8
   1f7c8:	str	r4, [r9, #48]	; 0x30
   1f7cc:	bl	e44 <calloc@plt>
   1f7d0:	mov	r6, r0
   1f7d4:	ldr	r0, [pc, #952]	; 1fb94 <sf_bpf_optimize+0x6d0>
   1f7d8:	mov	r1, #20
   1f7dc:	add	r0, pc, r0
   1f7e0:	str	r6, [r0]
   1f7e4:	mov	r0, r4
   1f7e8:	bl	e44 <calloc@plt>
   1f7ec:	ldr	r1, [pc, #932]	; 1fb98 <sf_bpf_optimize+0x6d4>
   1f7f0:	ldr	r4, [sp, #12]
   1f7f4:	cmp	r6, #0
   1f7f8:	cmpne	r0, #0
   1f7fc:	add	r1, pc, r1
   1f800:	str	r0, [r1]
   1f804:	bne	1f814 <sf_bpf_optimize+0x350>
   1f808:	ldr	r0, [pc, #948]	; 1fbc4 <sf_bpf_optimize+0x700>
   1f80c:	add	r0, pc, r0
   1f810:	bl	2204 <sf_bpf_error>
   1f814:	mov	r0, r4
   1f818:	mov	r1, #0
   1f81c:	mov	r5, #0
   1f820:	bl	1fbc8 <opt_loop>
   1f824:	mov	r0, r4
   1f828:	mov	r1, #1
   1f82c:	bl	1fbc8 <opt_loop>
   1f830:	ldr	r6, [r9, #16]
   1f834:	sub	r0, r6, #1
   1f838:	str	r0, [sp, #8]
   1f83c:	sub	r0, r6, #2
   1f840:	str	r0, [sp, #4]
   1f844:	cmp	r6, #1
   1f848:	blt	1f868 <sf_bpf_optimize+0x3a4>
   1f84c:	ldr	r0, [pc, #840]	; 1fb9c <sf_bpf_optimize+0x6d8>
   1f850:	mov	r1, r6
   1f854:	ldr	r0, [pc, r0]
   1f858:	ldr	r2, [r0], #4
   1f85c:	subs	r1, r1, #1
   1f860:	str	r5, [r2, #100]	; 0x64
   1f864:	bne	1f858 <sf_bpf_optimize+0x394>
   1f868:	ldr	r0, [r9, #4]
   1f86c:	add	r8, r0, #1
   1f870:	mov	r0, r4
   1f874:	str	r8, [r9, #4]
   1f878:	bl	23eec <make_marks>
   1f87c:	cmp	r6, #2
   1f880:	blt	1fa10 <sf_bpf_optimize+0x54c>
   1f884:	ldr	r0, [pc, #788]	; 1fba0 <sf_bpf_optimize+0x6dc>
   1f888:	ldr	r0, [pc, r0]
   1f88c:	ldmib	sp, {r1, lr}
   1f890:	mov	r2, lr
   1f894:	mov	lr, r1
   1f898:	cmp	r2, r6
   1f89c:	bge	1f9e4 <sf_bpf_optimize+0x520>
   1f8a0:	ldr	r3, [r0, lr, lsl #2]
   1f8a4:	ldr	r1, [r3, #24]
   1f8a8:	cmp	r1, r8
   1f8ac:	bne	1f9e4 <sf_bpf_optimize+0x520>
   1f8b0:	add	r1, r3, #4
   1f8b4:	str	r1, [sp, #16]
   1f8b8:	ldr	r5, [r0, r2, lsl #2]
   1f8bc:	ldr	r1, [r5, #24]
   1f8c0:	cmp	r1, r8
   1f8c4:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f8c8:	ldr	r1, [r5, #8]
   1f8cc:	ldr	r4, [r3, #8]
   1f8d0:	cmp	r4, r1
   1f8d4:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f8d8:	ldr	r1, [r5, #20]
   1f8dc:	ldr	r4, [r3, #20]
   1f8e0:	cmp	r4, r1
   1f8e4:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f8e8:	ldr	r1, [r5, #60]	; 0x3c
   1f8ec:	ldr	r4, [r3, #60]	; 0x3c
   1f8f0:	cmp	r4, r1
   1f8f4:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f8f8:	ldr	r1, [r5, #84]	; 0x54
   1f8fc:	ldr	r4, [r3, #84]	; 0x54
   1f900:	cmp	r4, r1
   1f904:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f908:	ldr	r1, [sp, #16]
   1f90c:	add	r4, r5, #4
   1f910:	b	1f91c <sf_bpf_optimize+0x458>
   1f914:	add	r4, r4, #16
   1f918:	add	r1, r9, #16
   1f91c:	ldr	r1, [r1]
   1f920:	ldr	r4, [r4]
   1f924:	mov	ip, #1
   1f928:	mov	r9, #0
   1f92c:	mov	sl, #1
   1f930:	cmp	r1, #0
   1f934:	beq	1f97c <sf_bpf_optimize+0x4b8>
   1f938:	ldr	r7, [r1]
   1f93c:	cmn	r7, #1
   1f940:	bne	1f964 <sf_bpf_optimize+0x4a0>
   1f944:	ldr	r1, [r1, #16]
   1f948:	cmp	r1, #0
   1f94c:	bne	1f938 <sf_bpf_optimize+0x474>
   1f950:	mov	r9, #0
   1f954:	mov	sl, #1
   1f958:	cmp	r4, #0
   1f95c:	bne	1f984 <sf_bpf_optimize+0x4c0>
   1f960:	b	1f9c4 <sf_bpf_optimize+0x500>
   1f964:	mov	sl, #0
   1f968:	mov	r9, r1
   1f96c:	cmp	r4, #0
   1f970:	bne	1f984 <sf_bpf_optimize+0x4c0>
   1f974:	b	1f9c4 <sf_bpf_optimize+0x500>
   1f978:	ldr	r4, [r4, #16]
   1f97c:	cmp	r4, #0
   1f980:	beq	1f9c4 <sf_bpf_optimize+0x500>
   1f984:	ldr	r1, [r4]
   1f988:	cmn	r1, #1
   1f98c:	beq	1f978 <sf_bpf_optimize+0x4b4>
   1f990:	mov	ip, #0
   1f994:	cmp	sl, #0
   1f998:	bne	1f9d0 <sf_bpf_optimize+0x50c>
   1f99c:	cmp	ip, #0
   1f9a0:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f9a4:	ldr	r1, [r4]
   1f9a8:	ldr	r7, [r9]
   1f9ac:	cmp	r7, r1
   1f9b0:	ldreq	r1, [r4, #12]
   1f9b4:	ldreq	r7, [r9, #12]
   1f9b8:	cmpeq	r7, r1
   1f9bc:	bne	1f9d8 <sf_bpf_optimize+0x514>
   1f9c0:	b	1f914 <sf_bpf_optimize+0x450>
   1f9c4:	mov	r4, #0
   1f9c8:	cmp	sl, #0
   1f9cc:	beq	1f99c <sf_bpf_optimize+0x4d8>
   1f9d0:	cmp	ip, #0
   1f9d4:	bne	1f9f4 <sf_bpf_optimize+0x530>
   1f9d8:	add	r2, r2, #1
   1f9dc:	cmp	r2, r6
   1f9e0:	blt	1f8b8 <sf_bpf_optimize+0x3f4>
   1f9e4:	sub	r1, lr, #1
   1f9e8:	cmp	lr, #0
   1f9ec:	bgt	1f890 <sf_bpf_optimize+0x3cc>
   1f9f0:	b	1fa10 <sf_bpf_optimize+0x54c>
   1f9f4:	ldr	r1, [r5, #100]	; 0x64
   1f9f8:	cmp	r1, #0
   1f9fc:	moveq	r1, r5
   1fa00:	str	r1, [r3, #100]	; 0x64
   1fa04:	sub	r1, lr, #1
   1fa08:	cmp	lr, #0
   1fa0c:	bgt	1f890 <sf_bpf_optimize+0x3cc>
   1fa10:	ldr	r4, [sp, #12]
   1fa14:	ldr	r9, [pc, #392]	; 1fba4 <sf_bpf_optimize+0x6e0>
   1fa18:	cmp	r6, #1
   1fa1c:	mov	r5, #0
   1fa20:	add	r9, pc, r9
   1fa24:	blt	1fa80 <sf_bpf_optimize+0x5bc>
   1fa28:	ldr	r0, [pc, #376]	; 1fba8 <sf_bpf_optimize+0x6e4>
   1fa2c:	mov	r2, #1
   1fa30:	mov	r1, r6
   1fa34:	ldr	r0, [pc, r0]
   1fa38:	ldr	r3, [r0]
   1fa3c:	ldr	r7, [r3, #60]	; 0x3c
   1fa40:	cmp	r7, #0
   1fa44:	beq	1fa6c <sf_bpf_optimize+0x5a8>
   1fa48:	ldr	r7, [r7, #100]	; 0x64
   1fa4c:	cmp	r7, #0
   1fa50:	strne	r7, [r3, #60]	; 0x3c
   1fa54:	movne	r2, #0
   1fa58:	ldr	r7, [r3, #84]	; 0x54
   1fa5c:	ldr	r7, [r7, #100]	; 0x64
   1fa60:	cmp	r7, #0
   1fa64:	movne	r2, #0
   1fa68:	strne	r7, [r3, #84]	; 0x54
   1fa6c:	add	r0, r0, #4
   1fa70:	subs	r1, r1, #1
   1fa74:	bne	1fa38 <sf_bpf_optimize+0x574>
   1fa78:	cmp	r2, #0
   1fa7c:	beq	1f844 <sf_bpf_optimize+0x380>
   1fa80:	ldr	r5, [sp]
   1fa84:	mov	r1, #0
   1fa88:	ldr	r0, [r5]
   1fa8c:	ldr	r4, [r0, #4]
   1fa90:	str	r1, [r0, #4]
   1fa94:	ldr	r0, [r5]
   1fa98:	ldr	r1, [r0, #8]
   1fa9c:	and	r1, r1, #7
   1faa0:	cmp	r1, #5
   1faa4:	bne	1fad0 <sf_bpf_optimize+0x60c>
   1faa8:	ldr	r1, [r0, #60]	; 0x3c
   1faac:	ldr	r2, [r0, #84]	; 0x54
   1fab0:	cmp	r1, r2
   1fab4:	bne	1fad0 <sf_bpf_optimize+0x60c>
   1fab8:	str	r1, [r5]
   1fabc:	ldr	r0, [r1, #8]
   1fac0:	and	r0, r0, #7
   1fac4:	cmp	r0, #5
   1fac8:	mov	r0, r1
   1facc:	beq	1faa8 <sf_bpf_optimize+0x5e4>
   1fad0:	ldr	r1, [r0, #4]!
   1fad4:	cmp	r1, #0
   1fad8:	beq	1faec <sf_bpf_optimize+0x628>
   1fadc:	mov	r0, r4
   1fae0:	bl	11f58 <sf_append>
   1fae4:	ldr	r0, [r5]
   1fae8:	add	r0, r0, #4
   1faec:	str	r4, [r0]
   1faf0:	ldr	r0, [r5]
   1faf4:	ldr	r1, [r0, #8]
   1faf8:	and	r1, r1, #7
   1fafc:	cmp	r1, #6
   1fb00:	moveq	r1, #0
   1fb04:	streq	r1, [r0, #4]
   1fb08:	ldr	r0, [pc, #156]	; 1fbac <sf_bpf_optimize+0x6e8>
   1fb0c:	ldr	r0, [pc, r0]
   1fb10:	bl	ea4 <free@plt>
   1fb14:	ldr	r0, [pc, #148]	; 1fbb0 <sf_bpf_optimize+0x6ec>
   1fb18:	ldr	r0, [pc, r0]
   1fb1c:	bl	ea4 <free@plt>
   1fb20:	ldr	r0, [pc, #140]	; 1fbb4 <sf_bpf_optimize+0x6f0>
   1fb24:	ldr	r0, [pc, r0]
   1fb28:	bl	ea4 <free@plt>
   1fb2c:	ldr	r0, [pc, #132]	; 1fbb8 <sf_bpf_optimize+0x6f4>
   1fb30:	ldr	r0, [pc, r0]
   1fb34:	bl	ea4 <free@plt>
   1fb38:	ldr	r0, [pc, #124]	; 1fbbc <sf_bpf_optimize+0x6f8>
   1fb3c:	ldr	r0, [pc, r0]
   1fb40:	bl	ea4 <free@plt>
   1fb44:	ldr	r0, [pc, #116]	; 1fbc0 <sf_bpf_optimize+0x6fc>
   1fb48:	ldr	r0, [pc, r0]
   1fb4c:	sub	sp, fp, #28
   1fb50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb54:	b	ea4 <free@plt>
   1fb58:	.word	0x000273d0
   1fb5c:	.word	0x0002749c
   1fb60:	.word	0x0002745c
   1fb64:	.word	0x00027430
   1fb68:	.word	0x00027324
   1fb6c:	.word	0x000273e0
   1fb70:	.word	0x000273a0
   1fb74:	.word	0x0002727c
   1fb78:	.word	0x00027250
   1fb7c:	.word	0x00027314
   1fb80:	.word	0x000272b4
   1fb84:	.word	0x000272ac
   1fb88:	.word	0x0002727c
   1fb8c:	.word	0x0002724c
   1fb90:	.word	0x0002714c
   1fb94:	.word	0x000271d8
   1fb98:	.word	0x000271b4
   1fb9c:	.word	0x00027150
   1fba0:	.word	0x0002711c
   1fba4:	.word	0x00026e8c
   1fba8:	.word	0x00026f70
   1fbac:	.word	0x00026ea4
   1fbb0:	.word	0x00026e9c
   1fbb4:	.word	0x00026e84
   1fbb8:	.word	0x00026e6c
   1fbbc:	.word	0x00026e64
   1fbc0:	.word	0x00026e5c
   1fbc4:	.word	0x0000a724

0001fbc8 <opt_loop>:
   1fbc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fbcc:	add	fp, sp, #28
   1fbd0:	sub	sp, sp, #4
   1fbd4:	vpush	{d8-d9}
   1fbd8:	sub	sp, sp, #104	; 0x68
   1fbdc:	str	r1, [sp, #20]
   1fbe0:	str	r0, [sp, #12]
   1fbe4:	mvn	r9, #1
   1fbe8:	vmov.i32	q4, #0	; 0x00000000
   1fbec:	ldr	r8, [pc, #4064]	; 20bd4 <opt_loop+0x100c>
   1fbf0:	ldr	sl, [pc, #4064]	; 20bd8 <opt_loop+0x1010>
   1fbf4:	add	r8, pc, r8
   1fbf8:	add	sl, pc, sl
   1fbfc:	mov	r0, #1
   1fc00:	mov	r1, #0
   1fc04:	strb	r0, [r8]
   1fc08:	ldr	r6, [r8, #16]
   1fc0c:	ldr	r0, [pc, #4040]	; 20bdc <opt_loop+0x1014>
   1fc10:	ldr	r0, [pc, r0]
   1fc14:	lsl	r5, r6, #2
   1fc18:	mov	r2, r5
   1fc1c:	bl	f88 <memset@plt>
   1fc20:	ldr	r0, [r8, #4]
   1fc24:	add	r0, r0, #1
   1fc28:	str	r0, [r8, #4]
   1fc2c:	ldr	r0, [sp, #12]
   1fc30:	bl	238c8 <find_levels_r>
   1fc34:	ldr	r4, [r8, #24]
   1fc38:	mul	r0, r4, r6
   1fc3c:	cmp	r0, #1
   1fc40:	blt	1fc68 <opt_loop+0xa0>
   1fc44:	mvn	r1, r0
   1fc48:	cmn	r1, #2
   1fc4c:	movle	r1, r9
   1fc50:	add	r0, r1, r0
   1fc54:	mov	r1, #8
   1fc58:	add	r2, r1, r0, lsl #2
   1fc5c:	ldr	r0, [r8, #20]
   1fc60:	mov	r1, #255	; 0xff
   1fc64:	bl	f88 <memset@plt>
   1fc68:	ldr	r2, [sp, #12]
   1fc6c:	cmp	r4, #1
   1fc70:	mov	r3, #0
   1fc74:	blt	1fc98 <opt_loop+0xd0>
   1fc78:	sub	r0, r4, #1
   1fc7c:	ldr	r1, [r2, #104]	; 0x68
   1fc80:	str	r3, [r1, r0, lsl #2]
   1fc84:	sub	r1, r0, #1
   1fc88:	add	r0, r0, #1
   1fc8c:	cmp	r0, #1
   1fc90:	mov	r0, r1
   1fc94:	bgt	1fc7c <opt_loop+0xb4>
   1fc98:	ldr	ip, [r2, #36]	; 0x24
   1fc9c:	cmp	ip, #0
   1fca0:	blt	1fe88 <opt_loop+0x2c0>
   1fca4:	ldr	r0, [pc, #3892]	; 20be0 <opt_loop+0x1018>
   1fca8:	ldr	r0, [pc, r0]
   1fcac:	ldr	r1, [r0, ip, lsl #2]
   1fcb0:	cmp	r1, #0
   1fcb4:	beq	1fe6c <opt_loop+0x2a4>
   1fcb8:	ldr	r0, [r1]
   1fcbc:	ldr	r2, [r1, #104]	; 0x68
   1fcc0:	mov	r6, #1
   1fcc4:	lsr	r3, r0, #5
   1fcc8:	and	r0, r0, #31
   1fccc:	ldr	r7, [r2, r3, lsl #2]
   1fcd0:	orr	r0, r7, r6, lsl r0
   1fcd4:	str	r0, [r2, r3, lsl #2]
   1fcd8:	ldr	r0, [r1, #60]	; 0x3c
   1fcdc:	cmp	r0, #0
   1fce0:	beq	1fe60 <opt_loop+0x298>
   1fce4:	ldr	r2, [r8, #24]
   1fce8:	cmp	r2, #1
   1fcec:	blt	1fe60 <opt_loop+0x298>
   1fcf0:	mvn	r3, r2
   1fcf4:	mvn	r7, #1
   1fcf8:	ldr	r6, [r0, #104]	; 0x68
   1fcfc:	ldr	r5, [r1, #104]	; 0x68
   1fd00:	cmn	r3, #2
   1fd04:	movgt	r7, r3
   1fd08:	add	r7, r2, r7
   1fd0c:	add	r4, r7, #2
   1fd10:	cmp	r4, #4
   1fd14:	bcc	1fd78 <opt_loop+0x1b0>
   1fd18:	cmn	r3, #2
   1fd1c:	movle	r3, r9
   1fd20:	add	r0, r2, r3
   1fd24:	add	r3, r5, r0, lsl #2
   1fd28:	add	r3, r3, #8
   1fd2c:	cmp	r6, r3
   1fd30:	addcc	r0, r6, r0, lsl #2
   1fd34:	addcc	r0, r0, #8
   1fd38:	cmpcc	r5, r0
   1fd3c:	bcc	1fd78 <opt_loop+0x1b0>
   1fd40:	bic	lr, r4, #3
   1fd44:	add	r7, r6, lr, lsl #2
   1fd48:	add	r3, r5, lr, lsl #2
   1fd4c:	sub	r2, r2, lr
   1fd50:	mov	r0, lr
   1fd54:	vld1.32	{d16-d17}, [r5]!
   1fd58:	vld1.32	{d18-d19}, [r6]
   1fd5c:	subs	r0, r0, #4
   1fd60:	vand	q8, q9, q8
   1fd64:	vst1.32	{d16-d17}, [r6]!
   1fd68:	bne	1fd54 <opt_loop+0x18c>
   1fd6c:	cmp	r4, lr
   1fd70:	bne	1fd80 <opt_loop+0x1b8>
   1fd74:	b	1fda0 <opt_loop+0x1d8>
   1fd78:	mov	r3, r5
   1fd7c:	mov	r7, r6
   1fd80:	add	r0, r2, #1
   1fd84:	ldr	r2, [r3], #4
   1fd88:	ldr	r6, [r7]
   1fd8c:	sub	r0, r0, #1
   1fd90:	cmp	r0, #1
   1fd94:	and	r2, r6, r2
   1fd98:	str	r2, [r7], #4
   1fd9c:	bgt	1fd84 <opt_loop+0x1bc>
   1fda0:	ldr	r2, [r8, #24]
   1fda4:	cmp	r2, #1
   1fda8:	blt	1fe60 <opt_loop+0x298>
   1fdac:	mvn	r0, r2
   1fdb0:	mvn	r3, #1
   1fdb4:	ldr	r5, [r1, #104]	; 0x68
   1fdb8:	cmn	r0, #2
   1fdbc:	movgt	r3, r0
   1fdc0:	add	r3, r2, r3
   1fdc4:	add	r4, r3, #2
   1fdc8:	ldr	r3, [r1, #84]	; 0x54
   1fdcc:	cmp	r4, #4
   1fdd0:	ldr	r6, [r3, #104]	; 0x68
   1fdd4:	bcc	1fe38 <opt_loop+0x270>
   1fdd8:	cmn	r0, #2
   1fddc:	movle	r0, r9
   1fde0:	add	r0, r2, r0
   1fde4:	add	r3, r5, r0, lsl #2
   1fde8:	add	r3, r3, #8
   1fdec:	cmp	r6, r3
   1fdf0:	addcc	r0, r6, r0, lsl #2
   1fdf4:	addcc	r0, r0, #8
   1fdf8:	cmpcc	r5, r0
   1fdfc:	bcc	1fe38 <opt_loop+0x270>
   1fe00:	bic	lr, r4, #3
   1fe04:	add	r7, r6, lr, lsl #2
   1fe08:	add	r3, r5, lr, lsl #2
   1fe0c:	sub	r2, r2, lr
   1fe10:	mov	r0, lr
   1fe14:	vld1.32	{d16-d17}, [r5]!
   1fe18:	vld1.32	{d18-d19}, [r6]
   1fe1c:	subs	r0, r0, #4
   1fe20:	vand	q8, q9, q8
   1fe24:	vst1.32	{d16-d17}, [r6]!
   1fe28:	bne	1fe14 <opt_loop+0x24c>
   1fe2c:	cmp	r4, lr
   1fe30:	beq	1fe60 <opt_loop+0x298>
   1fe34:	b	1fe40 <opt_loop+0x278>
   1fe38:	mov	r3, r5
   1fe3c:	mov	r7, r6
   1fe40:	add	r0, r2, #1
   1fe44:	ldr	r2, [r3], #4
   1fe48:	ldr	r6, [r7]
   1fe4c:	sub	r0, r0, #1
   1fe50:	cmp	r0, #1
   1fe54:	and	r2, r6, r2
   1fe58:	str	r2, [r7], #4
   1fe5c:	bgt	1fe44 <opt_loop+0x27c>
   1fe60:	ldr	r1, [r1, #100]	; 0x64
   1fe64:	cmp	r1, #0
   1fe68:	bne	1fcb8 <opt_loop+0xf0>
   1fe6c:	sub	r0, ip, #1
   1fe70:	cmp	ip, #0
   1fe74:	mov	ip, r0
   1fe78:	bgt	1fca4 <opt_loop+0xdc>
   1fe7c:	ldr	r0, [r8, #16]
   1fe80:	ldr	r4, [r8, #24]
   1fe84:	lsl	r5, r0, #2
   1fe88:	ldr	r0, [r8, #28]
   1fe8c:	mul	r2, r5, r4
   1fe90:	mov	r1, #0
   1fe94:	bl	f88 <memset@plt>
   1fe98:	ldr	lr, [sp, #12]
   1fe9c:	ldr	ip, [lr, #36]	; 0x24
   1fea0:	cmp	ip, #0
   1fea4:	blt	2040c <opt_loop+0x844>
   1fea8:	ldr	r0, [pc, #3912]	; 20df8 <opt_loop+0x1230>
   1feac:	ldr	r0, [pc, r0]
   1feb0:	ldr	r1, [r0, ip, lsl #2]
   1feb4:	cmp	r1, #0
   1feb8:	beq	20078 <opt_loop+0x4b0>
   1febc:	ldr	r0, [r1]
   1fec0:	ldr	r2, [r1, #108]	; 0x6c
   1fec4:	mov	r4, #1
   1fec8:	lsr	r3, r0, #5
   1fecc:	and	r0, r0, #31
   1fed0:	ldr	r7, [r2, r3, lsl #2]
   1fed4:	orr	r0, r7, r4, lsl r0
   1fed8:	str	r0, [r2, r3, lsl #2]
   1fedc:	ldr	r0, [r1, #60]	; 0x3c
   1fee0:	cmp	r0, #0
   1fee4:	beq	2006c <opt_loop+0x4a4>
   1fee8:	ldr	r2, [r8, #24]
   1feec:	cmp	r2, #1
   1fef0:	blt	2006c <opt_loop+0x4a4>
   1fef4:	mvn	r3, r2
   1fef8:	mvn	r7, #1
   1fefc:	ldr	r6, [r0, #108]	; 0x6c
   1ff00:	ldr	r5, [r1, #108]	; 0x6c
   1ff04:	cmn	r3, #2
   1ff08:	movgt	r7, r3
   1ff0c:	add	r7, r2, r7
   1ff10:	add	r4, r7, #2
   1ff14:	cmp	r4, #4
   1ff18:	bcc	1ff80 <opt_loop+0x3b8>
   1ff1c:	cmn	r3, #2
   1ff20:	movle	r3, r9
   1ff24:	add	r0, r2, r3
   1ff28:	add	r3, r5, r0, lsl #2
   1ff2c:	add	r3, r3, #8
   1ff30:	cmp	r6, r3
   1ff34:	addcc	r0, r6, r0, lsl #2
   1ff38:	addcc	r0, r0, #8
   1ff3c:	cmpcc	r5, r0
   1ff40:	bcc	1ff80 <opt_loop+0x3b8>
   1ff44:	bic	lr, r4, #3
   1ff48:	add	r7, r6, lr, lsl #2
   1ff4c:	add	r3, r5, lr, lsl #2
   1ff50:	sub	r2, r2, lr
   1ff54:	mov	r0, lr
   1ff58:	vld1.32	{d16-d17}, [r5]!
   1ff5c:	vld1.32	{d18-d19}, [r6]
   1ff60:	subs	r0, r0, #4
   1ff64:	vorr	q8, q9, q8
   1ff68:	vst1.32	{d16-d17}, [r6]!
   1ff6c:	bne	1ff58 <opt_loop+0x390>
   1ff70:	cmp	r4, lr
   1ff74:	ldr	lr, [sp, #12]
   1ff78:	bne	1ff88 <opt_loop+0x3c0>
   1ff7c:	b	1ffa8 <opt_loop+0x3e0>
   1ff80:	mov	r3, r5
   1ff84:	mov	r7, r6
   1ff88:	add	r0, r2, #1
   1ff8c:	ldr	r2, [r3], #4
   1ff90:	ldr	r6, [r7]
   1ff94:	sub	r0, r0, #1
   1ff98:	cmp	r0, #1
   1ff9c:	orr	r2, r6, r2
   1ffa0:	str	r2, [r7], #4
   1ffa4:	bgt	1ff8c <opt_loop+0x3c4>
   1ffa8:	ldr	r2, [r8, #24]
   1ffac:	cmp	r2, #1
   1ffb0:	blt	2006c <opt_loop+0x4a4>
   1ffb4:	mvn	r0, r2
   1ffb8:	mvn	r3, #1
   1ffbc:	ldr	r5, [r1, #108]	; 0x6c
   1ffc0:	cmn	r0, #2
   1ffc4:	movgt	r3, r0
   1ffc8:	add	r3, r2, r3
   1ffcc:	add	r4, r3, #2
   1ffd0:	ldr	r3, [r1, #84]	; 0x54
   1ffd4:	cmp	r4, #4
   1ffd8:	ldr	r6, [r3, #108]	; 0x6c
   1ffdc:	bcc	20044 <opt_loop+0x47c>
   1ffe0:	cmn	r0, #2
   1ffe4:	movle	r0, r9
   1ffe8:	add	r0, r2, r0
   1ffec:	add	r3, r5, r0, lsl #2
   1fff0:	add	r3, r3, #8
   1fff4:	cmp	r6, r3
   1fff8:	addcc	r0, r6, r0, lsl #2
   1fffc:	addcc	r0, r0, #8
   20000:	cmpcc	r5, r0
   20004:	bcc	20044 <opt_loop+0x47c>
   20008:	bic	lr, r4, #3
   2000c:	add	r7, r6, lr, lsl #2
   20010:	add	r3, r5, lr, lsl #2
   20014:	sub	r2, r2, lr
   20018:	mov	r0, lr
   2001c:	vld1.32	{d16-d17}, [r5]!
   20020:	vld1.32	{d18-d19}, [r6]
   20024:	subs	r0, r0, #4
   20028:	vorr	q8, q9, q8
   2002c:	vst1.32	{d16-d17}, [r6]!
   20030:	bne	2001c <opt_loop+0x454>
   20034:	cmp	r4, lr
   20038:	ldr	lr, [sp, #12]
   2003c:	beq	2006c <opt_loop+0x4a4>
   20040:	b	2004c <opt_loop+0x484>
   20044:	mov	r3, r5
   20048:	mov	r7, r6
   2004c:	add	r0, r2, #1
   20050:	ldr	r2, [r3], #4
   20054:	ldr	r6, [r7]
   20058:	sub	r0, r0, #1
   2005c:	cmp	r0, #1
   20060:	orr	r2, r6, r2
   20064:	str	r2, [r7], #4
   20068:	bgt	20050 <opt_loop+0x488>
   2006c:	ldr	r1, [r1, #100]	; 0x64
   20070:	cmp	r1, #0
   20074:	bne	1febc <opt_loop+0x2f4>
   20078:	sub	r0, ip, #1
   2007c:	cmp	ip, #0
   20080:	mov	ip, r0
   20084:	bgt	1fea8 <opt_loop+0x2e0>
   20088:	ldr	r0, [lr, #36]	; 0x24
   2008c:	cmp	r0, #0
   20090:	blt	2040c <opt_loop+0x844>
   20094:	ldr	r1, [pc, #3928]	; 20ff4 <opt_loop+0x142c>
   20098:	mov	r9, r0
   2009c:	ldr	r1, [pc, r1]
   200a0:	str	r0, [sp, #24]
   200a4:	str	r1, [sp, #28]
   200a8:	ldr	r0, [sp, #28]
   200ac:	ldr	sl, [r0, r9, lsl #2]
   200b0:	cmp	sl, #0
   200b4:	beq	20378 <opt_loop+0x7b0>
   200b8:	ldr	r1, [sl, #4]
   200bc:	cmp	r1, #0
   200c0:	beq	202a0 <opt_loop+0x6d8>
   200c4:	mov	lr, #0
   200c8:	mov	r0, #0
   200cc:	mov	r4, #0
   200d0:	ldr	r7, [r1]
   200d4:	cmn	r7, #1
   200d8:	beq	20208 <opt_loop+0x640>
   200dc:	and	r2, r7, #7
   200e0:	sub	r3, r2, #2
   200e4:	cmp	r3, #5
   200e8:	bhi	20120 <opt_loop+0x558>
   200ec:	add	ip, pc, #8
   200f0:	mov	r6, #16
   200f4:	ldr	r3, [ip, r3, lsl #2]
   200f8:	add	pc, ip, r3
   200fc:	.word	0x000000bc
   20100:	.word	0x00000070
   20104:	.word	0x00000018
   20108:	.word	0x00000018
   2010c:	.word	0x0000008c
   20110:	.word	0x00000078
   20114:	tst	r7, #8
   20118:	bne	20148 <opt_loop+0x580>
   2011c:	b	201b8 <opt_loop+0x5f0>
   20120:	and	r3, r7, #224	; 0xe0
   20124:	cmp	r3, #64	; 0x40
   20128:	beq	2016c <opt_loop+0x5a4>
   2012c:	cmp	r3, #96	; 0x60
   20130:	bne	201c4 <opt_loop+0x5fc>
   20134:	ldr	r3, [r1, #12]
   20138:	cmp	r3, #0
   2013c:	blt	201c4 <opt_loop+0x5fc>
   20140:	cmp	r3, #18
   20144:	bne	201ac <opt_loop+0x5e4>
   20148:	mov	r6, #131072	; 0x20000
   2014c:	mov	r3, #65536	; 0x10000
   20150:	bic	r6, r6, r4
   20154:	bic	r3, r3, r4
   20158:	orr	r0, r6, r0
   2015c:	orr	r0, r0, r3
   20160:	cmp	r2, #7
   20164:	bls	201cc <opt_loop+0x604>
   20168:	b	20208 <opt_loop+0x640>
   2016c:	mov	r6, #17
   20170:	b	201b8 <opt_loop+0x5f0>
   20174:	and	r3, r7, #248	; 0xf8
   20178:	mov	r6, #16
   2017c:	cmp	r3, #128	; 0x80
   20180:	movweq	r6, #17
   20184:	b	201b8 <opt_loop+0x5f0>
   20188:	and	r5, r7, #24
   2018c:	mvn	r3, #0
   20190:	cmp	r5, #8
   20194:	movweq	r3, #17
   20198:	cmp	r5, #16
   2019c:	beq	201b8 <opt_loop+0x5f0>
   201a0:	cmp	r3, #0
   201a4:	bge	20140 <opt_loop+0x578>
   201a8:	b	201c4 <opt_loop+0x5fc>
   201ac:	cmp	r3, #17
   201b0:	mov	r6, r3
   201b4:	bgt	232c8 <opt_loop+0x3700>
   201b8:	mov	r3, #1
   201bc:	tst	r4, r3, lsl r6
   201c0:	orreq	r0, r0, r3, lsl r6
   201c4:	cmp	r2, #7
   201c8:	bhi	20208 <opt_loop+0x640>
   201cc:	add	r3, pc, #8
   201d0:	mov	r6, #16
   201d4:	ldr	r2, [r3, r2, lsl #2]
   201d8:	add	pc, r3, r2
   201dc:	.word	0x00000050
   201e0:	.word	0x0000004c
   201e4:	.word	0x00000020
   201e8:	.word	0x00000020
   201ec:	.word	0x00000050
   201f0:	.word	0x0000002c
   201f4:	.word	0x0000002c
   201f8:	.word	0x0000003c
   201fc:	ldr	r6, [r1, #12]
   20200:	cmp	r6, #0
   20204:	bge	2022c <opt_loop+0x664>
   20208:	ldr	r1, [r1, #16]
   2020c:	cmp	r1, #0
   20210:	bne	200d0 <opt_loop+0x508>
   20214:	b	20248 <opt_loop+0x680>
   20218:	tst	r7, #248	; 0xf8
   2021c:	mov	r6, #16
   20220:	movweq	r6, #17
   20224:	b	2022c <opt_loop+0x664>
   20228:	mov	r6, #17
   2022c:	mov	r2, #1
   20230:	tst	r0, r2, lsl r6
   20234:	orr	r4, r4, r2, lsl r6
   20238:	orreq	lr, lr, r2, lsl r6
   2023c:	ldr	r1, [r1, #16]
   20240:	cmp	r1, #0
   20244:	bne	200d0 <opt_loop+0x508>
   20248:	ldr	r2, [sl, #8]
   2024c:	cmn	r2, #1
   20250:	beq	20358 <opt_loop+0x790>
   20254:	and	r1, r2, #7
   20258:	cmp	r1, #5
   2025c:	bne	20358 <opt_loop+0x790>
   20260:	sub	r3, r1, #2
   20264:	cmp	r3, #5
   20268:	bhi	202bc <opt_loop+0x6f4>
   2026c:	add	r7, pc, #8
   20270:	mov	r1, #16
   20274:	ldr	r3, [r7, r3, lsl #2]
   20278:	add	pc, r7, r3
   2027c:	.word	0x000000d0
   20280:	.word	0x00000084
   20284:	.word	0x00000018
   20288:	.word	0x00000018
   2028c:	.word	0x000000a0
   20290:	.word	0x0000008c
   20294:	tst	r2, #8
   20298:	bne	202e4 <opt_loop+0x71c>
   2029c:	b	2034c <opt_loop+0x784>
   202a0:	mov	r4, #0
   202a4:	mov	r0, #0
   202a8:	mov	lr, #0
   202ac:	ldr	r2, [sl, #8]
   202b0:	cmn	r2, #1
   202b4:	bne	20254 <opt_loop+0x68c>
   202b8:	b	20358 <opt_loop+0x790>
   202bc:	and	r1, r2, #224	; 0xe0
   202c0:	cmp	r1, #64	; 0x40
   202c4:	beq	20300 <opt_loop+0x738>
   202c8:	cmp	r1, #96	; 0x60
   202cc:	bne	20358 <opt_loop+0x790>
   202d0:	ldr	r2, [sl, #20]
   202d4:	cmp	r2, #0
   202d8:	blt	20358 <opt_loop+0x790>
   202dc:	cmp	r2, #18
   202e0:	bne	20340 <opt_loop+0x778>
   202e4:	mov	r2, #131072	; 0x20000
   202e8:	mov	r1, #65536	; 0x10000
   202ec:	bic	r2, r2, r4
   202f0:	bic	r1, r1, r4
   202f4:	orr	r0, r2, r0
   202f8:	orr	r0, r0, r1
   202fc:	b	20358 <opt_loop+0x790>
   20300:	mov	r1, #17
   20304:	b	2034c <opt_loop+0x784>
   20308:	and	r1, r2, #248	; 0xf8
   2030c:	cmp	r1, #128	; 0x80
   20310:	mov	r1, #16
   20314:	movweq	r1, #17
   20318:	b	2034c <opt_loop+0x784>
   2031c:	and	r3, r2, #24
   20320:	mvn	r2, #0
   20324:	cmp	r3, #8
   20328:	movweq	r2, #17
   2032c:	cmp	r3, #16
   20330:	beq	2034c <opt_loop+0x784>
   20334:	cmp	r2, #0
   20338:	bge	202dc <opt_loop+0x714>
   2033c:	b	20358 <opt_loop+0x790>
   20340:	cmp	r2, #17
   20344:	mov	r1, r2
   20348:	bgt	232c8 <opt_loop+0x3700>
   2034c:	mov	r2, #1
   20350:	tst	r4, r2, lsl r1
   20354:	orreq	r0, r0, r2, lsl r1
   20358:	str	r4, [sl, #116]	; 0x74
   2035c:	str	lr, [sl, #120]	; 0x78
   20360:	str	r0, [sl, #124]	; 0x7c
   20364:	mov	r0, #0
   20368:	str	r0, [sl, #128]	; 0x80
   2036c:	ldr	sl, [sl, #100]	; 0x64
   20370:	cmp	sl, #0
   20374:	bne	200b8 <opt_loop+0x4f0>
   20378:	sub	r0, r9, #1
   2037c:	cmp	r9, #0
   20380:	mov	r9, r0
   20384:	bgt	200a8 <opt_loop+0x4e0>
   20388:	ldr	r5, [sp, #24]
   2038c:	ldr	lr, [sp, #12]
   20390:	ldr	sl, [pc, #3888]	; 212c8 <opt_loop+0x1700>
   20394:	mvn	r9, #1
   20398:	cmp	r5, #1
   2039c:	add	sl, pc, sl
   203a0:	blt	2040c <opt_loop+0x844>
   203a4:	mov	r0, #1
   203a8:	ldr	r1, [sp, #28]
   203ac:	ldr	r1, [r1, r0, lsl #2]
   203b0:	cmp	r1, #0
   203b4:	beq	203fc <opt_loop+0x834>
   203b8:	ldr	r2, [r1, #60]	; 0x3c
   203bc:	ldr	r3, [r1, #84]	; 0x54
   203c0:	ldr	r7, [r1, #100]	; 0x64
   203c4:	ldr	r6, [r1, #120]	; 0x78
   203c8:	ldr	r2, [r2, #124]	; 0x7c
   203cc:	ldr	r3, [r3, #124]	; 0x7c
   203d0:	cmp	r7, #0
   203d4:	orr	r2, r3, r2
   203d8:	ldr	r3, [r1, #128]	; 0x80
   203dc:	orr	r2, r2, r3
   203e0:	str	r2, [r1, #128]	; 0x80
   203e4:	bic	r2, r2, r6
   203e8:	ldr	r3, [r1, #124]	; 0x7c
   203ec:	orr	r2, r3, r2
   203f0:	str	r2, [r1, #124]	; 0x7c
   203f4:	mov	r1, r7
   203f8:	bne	203b8 <opt_loop+0x7f0>
   203fc:	add	r1, r0, #1
   20400:	cmp	r0, r5
   20404:	mov	r0, r1
   20408:	bne	203a8 <opt_loop+0x7e0>
   2040c:	ldr	r0, [r8, #36]	; 0x24
   20410:	ldr	r4, [r8, #40]	; 0x28
   20414:	mul	r1, r4, r0
   20418:	cmp	r1, #1
   2041c:	blt	20450 <opt_loop+0x888>
   20420:	mvn	r2, r1
   20424:	ldr	r3, [r8, #32]
   20428:	cmn	r2, #2
   2042c:	movle	r2, r9
   20430:	sub	r0, r9, r2
   20434:	add	r1, r2, r1
   20438:	mov	r2, #8
   2043c:	add	r2, r2, r1, lsl #2
   20440:	add	r0, r3, r0, lsl #2
   20444:	mov	r1, #255	; 0xff
   20448:	bl	f88 <memset@plt>
   2044c:	ldr	lr, [sp, #12]
   20450:	ldr	r0, [lr, #56]	; 0x38
   20454:	lsl	r5, r4, #2
   20458:	mov	r1, #0
   2045c:	mov	r4, lr
   20460:	mov	r2, r5
   20464:	bl	f88 <memset@plt>
   20468:	ldr	r0, [r4, #80]	; 0x50
   2046c:	mov	r1, #0
   20470:	mov	r2, r5
   20474:	bl	f88 <memset@plt>
   20478:	ldr	ip, [r4, #36]	; 0x24
   2047c:	cmp	ip, #0
   20480:	blt	2080c <opt_loop+0xc44>
   20484:	ldr	r0, [pc, #4012]	; 21438 <opt_loop+0x1870>
   20488:	ldr	r0, [pc, r0]
   2048c:	ldr	r1, [r0, ip, lsl #2]
   20490:	cmp	r1, #0
   20494:	beq	207fc <opt_loop+0xc34>
   20498:	ldr	r0, [r1, #48]	; 0x30
   2049c:	ldr	r2, [r1, #56]	; 0x38
   204a0:	mov	r6, #1
   204a4:	lsr	r3, r0, #5
   204a8:	and	r0, r0, #31
   204ac:	ldr	r7, [r2, r3, lsl #2]
   204b0:	orr	r0, r7, r6, lsl r0
   204b4:	str	r0, [r2, r3, lsl #2]
   204b8:	ldr	r0, [r1, #60]	; 0x3c
   204bc:	cmp	r0, #0
   204c0:	beq	20644 <opt_loop+0xa7c>
   204c4:	ldr	r2, [r8, #40]	; 0x28
   204c8:	cmp	r2, #1
   204cc:	blt	20644 <opt_loop+0xa7c>
   204d0:	mvn	r3, r2
   204d4:	mvn	r7, #1
   204d8:	ldr	r5, [r0, #56]	; 0x38
   204dc:	ldr	r4, [r1, #56]	; 0x38
   204e0:	cmn	r3, #2
   204e4:	movgt	r7, r3
   204e8:	add	r7, r2, r7
   204ec:	add	sl, r7, #2
   204f0:	cmp	sl, #4
   204f4:	bcc	20560 <opt_loop+0x998>
   204f8:	cmn	r3, #2
   204fc:	mvn	r0, #1
   20500:	movgt	r0, r3
   20504:	add	r0, r2, r0
   20508:	add	r7, r4, r0, lsl #2
   2050c:	add	r7, r7, #8
   20510:	cmp	r5, r7
   20514:	addcc	r0, r5, r0, lsl #2
   20518:	addcc	r0, r0, #8
   2051c:	cmpcc	r4, r0
   20520:	bcc	20560 <opt_loop+0x998>
   20524:	bic	r9, sl, #3
   20528:	add	r6, r5, r9, lsl #2
   2052c:	add	r7, r4, r9, lsl #2
   20530:	sub	lr, r2, r9
   20534:	mov	r0, r9
   20538:	vld1.32	{d16-d17}, [r4]!
   2053c:	vld1.32	{d18-d19}, [r5]
   20540:	subs	r0, r0, #4
   20544:	vand	q8, q9, q8
   20548:	vst1.32	{d16-d17}, [r5]!
   2054c:	bne	20538 <opt_loop+0x970>
   20550:	cmp	sl, r9
   20554:	mvn	r9, #1
   20558:	bne	2056c <opt_loop+0x9a4>
   2055c:	b	2058c <opt_loop+0x9c4>
   20560:	mov	lr, r2
   20564:	mov	r7, r4
   20568:	mov	r6, r5
   2056c:	add	r0, lr, #1
   20570:	ldr	r5, [r7], #4
   20574:	ldr	r4, [r6]
   20578:	sub	r0, r0, #1
   2057c:	cmp	r0, #1
   20580:	and	r5, r4, r5
   20584:	str	r5, [r6], #4
   20588:	bgt	20570 <opt_loop+0x9a8>
   2058c:	cmn	r3, #2
   20590:	mvn	r0, #1
   20594:	ldr	r6, [r1, #56]	; 0x38
   20598:	movgt	r0, r3
   2059c:	add	r0, r2, r0
   205a0:	add	r4, r0, #2
   205a4:	ldr	r0, [r1, #60]	; 0x3c
   205a8:	cmp	r4, #4
   205ac:	ldr	r5, [r0, #80]	; 0x50
   205b0:	ldr	sl, [pc, #3960]	; 21530 <opt_loop+0x1968>
   205b4:	add	sl, pc, sl
   205b8:	bcc	2061c <opt_loop+0xa54>
   205bc:	cmn	r3, #2
   205c0:	movle	r3, r9
   205c4:	add	r0, r2, r3
   205c8:	add	r3, r6, r0, lsl #2
   205cc:	add	r3, r3, #8
   205d0:	cmp	r5, r3
   205d4:	addcc	r0, r5, r0, lsl #2
   205d8:	addcc	r0, r0, #8
   205dc:	cmpcc	r6, r0
   205e0:	bcc	2061c <opt_loop+0xa54>
   205e4:	bic	lr, r4, #3
   205e8:	add	r7, r5, lr, lsl #2
   205ec:	add	r3, r6, lr, lsl #2
   205f0:	sub	r2, r2, lr
   205f4:	mov	r0, lr
   205f8:	vld1.32	{d16-d17}, [r6]!
   205fc:	vld1.32	{d18-d19}, [r5]
   20600:	subs	r0, r0, #4
   20604:	vand	q8, q9, q8
   20608:	vst1.32	{d16-d17}, [r5]!
   2060c:	bne	205f8 <opt_loop+0xa30>
   20610:	cmp	r4, lr
   20614:	bne	20624 <opt_loop+0xa5c>
   20618:	b	20644 <opt_loop+0xa7c>
   2061c:	mov	r3, r6
   20620:	mov	r7, r5
   20624:	add	r0, r2, #1
   20628:	ldr	r2, [r3], #4
   2062c:	ldr	r6, [r7]
   20630:	sub	r0, r0, #1
   20634:	cmp	r0, #1
   20638:	and	r2, r6, r2
   2063c:	str	r2, [r7], #4
   20640:	bgt	20628 <opt_loop+0xa60>
   20644:	ldr	r0, [r1, #72]	; 0x48
   20648:	ldr	r2, [r1, #80]	; 0x50
   2064c:	mov	r6, #1
   20650:	lsr	r3, r0, #5
   20654:	and	r0, r0, #31
   20658:	ldr	r7, [r2, r3, lsl #2]
   2065c:	orr	r0, r7, r6, lsl r0
   20660:	str	r0, [r2, r3, lsl #2]
   20664:	ldr	r0, [r1, #84]	; 0x54
   20668:	cmp	r0, #0
   2066c:	beq	207f0 <opt_loop+0xc28>
   20670:	ldr	r2, [r8, #40]	; 0x28
   20674:	cmp	r2, #1
   20678:	blt	207f0 <opt_loop+0xc28>
   2067c:	mvn	r3, r2
   20680:	mvn	r7, #1
   20684:	ldr	r5, [r0, #56]	; 0x38
   20688:	ldr	r4, [r1, #80]	; 0x50
   2068c:	cmn	r3, #2
   20690:	movgt	r7, r3
   20694:	add	r7, r2, r7
   20698:	add	sl, r7, #2
   2069c:	cmp	sl, #4
   206a0:	bcc	2070c <opt_loop+0xb44>
   206a4:	cmn	r3, #2
   206a8:	mvn	r0, #1
   206ac:	movgt	r0, r3
   206b0:	add	r0, r2, r0
   206b4:	add	r7, r4, r0, lsl #2
   206b8:	add	r7, r7, #8
   206bc:	cmp	r5, r7
   206c0:	addcc	r0, r5, r0, lsl #2
   206c4:	addcc	r0, r0, #8
   206c8:	cmpcc	r4, r0
   206cc:	bcc	2070c <opt_loop+0xb44>
   206d0:	bic	r9, sl, #3
   206d4:	add	r6, r5, r9, lsl #2
   206d8:	add	r7, r4, r9, lsl #2
   206dc:	sub	lr, r2, r9
   206e0:	mov	r0, r9
   206e4:	vld1.32	{d16-d17}, [r4]!
   206e8:	vld1.32	{d18-d19}, [r5]
   206ec:	subs	r0, r0, #4
   206f0:	vand	q8, q9, q8
   206f4:	vst1.32	{d16-d17}, [r5]!
   206f8:	bne	206e4 <opt_loop+0xb1c>
   206fc:	cmp	sl, r9
   20700:	mvn	r9, #1
   20704:	bne	20718 <opt_loop+0xb50>
   20708:	b	20738 <opt_loop+0xb70>
   2070c:	mov	lr, r2
   20710:	mov	r7, r4
   20714:	mov	r6, r5
   20718:	add	r0, lr, #1
   2071c:	ldr	r5, [r7], #4
   20720:	ldr	r4, [r6]
   20724:	sub	r0, r0, #1
   20728:	cmp	r0, #1
   2072c:	and	r5, r4, r5
   20730:	str	r5, [r6], #4
   20734:	bgt	2071c <opt_loop+0xb54>
   20738:	cmn	r3, #2
   2073c:	mvn	r0, #1
   20740:	ldr	r6, [r1, #80]	; 0x50
   20744:	movgt	r0, r3
   20748:	add	r0, r2, r0
   2074c:	add	r4, r0, #2
   20750:	ldr	r0, [r1, #84]	; 0x54
   20754:	cmp	r4, #4
   20758:	ldr	r5, [r0, #80]	; 0x50
   2075c:	ldr	sl, [pc, #4092]	; 21760 <opt_loop+0x1b98>
   20760:	add	sl, pc, sl
   20764:	bcc	207c8 <opt_loop+0xc00>
   20768:	cmn	r3, #2
   2076c:	movle	r3, r9
   20770:	add	r0, r2, r3
   20774:	add	r3, r6, r0, lsl #2
   20778:	add	r3, r3, #8
   2077c:	cmp	r5, r3
   20780:	addcc	r0, r5, r0, lsl #2
   20784:	addcc	r0, r0, #8
   20788:	cmpcc	r6, r0
   2078c:	bcc	207c8 <opt_loop+0xc00>
   20790:	bic	lr, r4, #3
   20794:	add	r7, r5, lr, lsl #2
   20798:	add	r3, r6, lr, lsl #2
   2079c:	sub	r2, r2, lr
   207a0:	mov	r0, lr
   207a4:	vld1.32	{d16-d17}, [r6]!
   207a8:	vld1.32	{d18-d19}, [r5]
   207ac:	subs	r0, r0, #4
   207b0:	vand	q8, q9, q8
   207b4:	vst1.32	{d16-d17}, [r5]!
   207b8:	bne	207a4 <opt_loop+0xbdc>
   207bc:	cmp	r4, lr
   207c0:	beq	207f0 <opt_loop+0xc28>
   207c4:	b	207d0 <opt_loop+0xc08>
   207c8:	mov	r3, r6
   207cc:	mov	r7, r5
   207d0:	add	r0, r2, #1
   207d4:	ldr	r2, [r3], #4
   207d8:	ldr	r6, [r7]
   207dc:	sub	r0, r0, #1
   207e0:	cmp	r0, #1
   207e4:	and	r2, r6, r2
   207e8:	str	r2, [r7], #4
   207ec:	bgt	207d4 <opt_loop+0xc0c>
   207f0:	ldr	r1, [r1, #100]	; 0x64
   207f4:	cmp	r1, #0
   207f8:	bne	20498 <opt_loop+0x8d0>
   207fc:	sub	r0, ip, #1
   20800:	cmp	ip, #0
   20804:	mov	ip, r0
   20808:	bgt	20484 <opt_loop+0x8bc>
   2080c:	mov	r0, #0
   20810:	str	r0, [r8, #44]	; 0x2c
   20814:	ldr	r0, [pc, #4060]	; 217f8 <opt_loop+0x1c30>
   20818:	ldr	r0, [pc, r0]
   2081c:	ldr	r1, [pc, #4056]	; 217fc <opt_loop+0x1c34>
   20820:	add	r1, pc, r1
   20824:	str	r0, [r1]
   20828:	ldr	r1, [r8, #48]	; 0x30
   2082c:	ldr	r0, [pc, #4044]	; 21800 <opt_loop+0x1c38>
   20830:	lsl	r2, r1, #3
   20834:	mov	r1, #0
   20838:	ldr	r0, [pc, r0]
   2083c:	bl	f88 <memset@plt>
   20840:	mov	r0, sl
   20844:	mov	r1, #0
   20848:	mov	r2, #852	; 0x354
   2084c:	bl	f88 <memset@plt>
   20850:	ldr	r3, [sp, #12]
   20854:	ldr	r1, [r8, #16]
   20858:	ldr	r6, [r3, #36]	; 0x24
   2085c:	cmp	r1, #1
   20860:	mov	r0, r6
   20864:	blt	20888 <opt_loop+0xcc0>
   20868:	ldr	r0, [pc, #3988]	; 21804 <opt_loop+0x1c3c>
   2086c:	mov	r7, #0
   20870:	ldr	r0, [pc, r0]
   20874:	ldr	r2, [r0], #4
   20878:	subs	r1, r1, #1
   2087c:	str	r7, [r2, #112]	; 0x70
   20880:	bne	20874 <opt_loop+0xcac>
   20884:	ldr	r0, [r3, #36]	; 0x24
   20888:	cmp	r0, #1
   2088c:	blt	208e0 <opt_loop+0xd18>
   20890:	ldr	r1, [pc, #3952]	; 21808 <opt_loop+0x1c40>
   20894:	ldr	r1, [pc, r1]
   20898:	ldr	r2, [r1, r0, lsl #2]
   2089c:	cmp	r2, #0
   208a0:	beq	208d8 <opt_loop+0xd10>
   208a4:	ldr	r3, [r2, #60]	; 0x3c
   208a8:	ldr	r7, [r3, #112]	; 0x70
   208ac:	str	r7, [r2, #68]	; 0x44
   208b0:	add	r7, r2, #48	; 0x30
   208b4:	str	r7, [r3, #112]	; 0x70
   208b8:	ldr	r3, [r2, #84]	; 0x54
   208bc:	ldr	r7, [r3, #112]	; 0x70
   208c0:	str	r7, [r2, #92]	; 0x5c
   208c4:	add	r7, r2, #72	; 0x48
   208c8:	str	r7, [r3, #112]	; 0x70
   208cc:	ldr	r2, [r2, #100]	; 0x64
   208d0:	cmp	r2, #0
   208d4:	bne	208a4 <opt_loop+0xcdc>
   208d8:	subs	r0, r0, #1
   208dc:	bgt	20898 <opt_loop+0xcd0>
   208e0:	cmp	r6, #0
   208e4:	str	r6, [sp, #4]
   208e8:	blt	22e68 <opt_loop+0x32a0>
   208ec:	ldr	r1, [sp, #4]
   208f0:	ldr	r0, [pc, #4088]	; 218f0 <opt_loop+0x1d28>
   208f4:	ldr	r0, [pc, r0]
   208f8:	str	r1, [sp, #8]
   208fc:	ldr	r9, [r0, r1, lsl #2]
   20900:	cmp	r9, #0
   20904:	bne	2092c <opt_loop+0xd64>
   20908:	b	22e54 <opt_loop+0x328c>
   2090c:	ldr	r3, [r3, #12]
   20910:	b	22e38 <opt_loop+0x3270>
   20914:	mvn	r1, #0
   20918:	str	r1, [r3]
   2091c:	mov	r1, #29
   20920:	str	r1, [r9, #8]
   20924:	strb	r0, [r8]
   20928:	b	22994 <opt_loop+0x2dcc>
   2092c:	ldr	r4, [r9, #112]	; 0x70
   20930:	add	r0, r9, #136	; 0x88
   20934:	cmp	r4, #0
   20938:	beq	20aec <opt_loop+0xf24>
   2093c:	ldr	r1, [r4, #16]
   20940:	mov	r2, #72	; 0x48
   20944:	add	r1, r1, #136	; 0x88
   20948:	bl	ec8 <memcpy@plt>
   2094c:	ldr	r3, [r4, #20]
   20950:	cmp	r3, #0
   20954:	beq	20b2c <opt_loop+0xf64>
   20958:	ldr	r5, [r9, #136]	; 0x88
   2095c:	add	lr, r9, #204	; 0xcc
   20960:	add	r6, r9, #200	; 0xc8
   20964:	mov	r2, #0
   20968:	ldr	r4, [r3, #16]
   2096c:	ldr	r0, [r4, #136]	; 0x88
   20970:	cmp	r5, r0
   20974:	movne	r5, #0
   20978:	strne	r5, [r9, #136]	; 0x88
   2097c:	ldrne	r4, [r3, #16]
   20980:	ldr	r1, [r9, #140]	; 0x8c
   20984:	ldr	r0, [r4, #140]	; 0x8c
   20988:	cmp	r1, r0
   2098c:	strne	r2, [r9, #140]	; 0x8c
   20990:	ldrne	r4, [r3, #16]
   20994:	ldr	r1, [r9, #144]	; 0x90
   20998:	ldr	r0, [r4, #144]	; 0x90
   2099c:	cmp	r1, r0
   209a0:	strne	r2, [r9, #144]	; 0x90
   209a4:	ldrne	r4, [r3, #16]
   209a8:	ldr	r1, [r9, #148]	; 0x94
   209ac:	ldr	r0, [r4, #148]	; 0x94
   209b0:	cmp	r1, r0
   209b4:	strne	r2, [r9, #148]	; 0x94
   209b8:	ldrne	r4, [r3, #16]
   209bc:	ldr	r1, [r9, #152]	; 0x98
   209c0:	ldr	r0, [r4, #152]	; 0x98
   209c4:	cmp	r1, r0
   209c8:	strne	r2, [r9, #152]	; 0x98
   209cc:	ldrne	r4, [r3, #16]
   209d0:	ldr	r1, [r9, #156]	; 0x9c
   209d4:	ldr	r0, [r4, #156]	; 0x9c
   209d8:	cmp	r1, r0
   209dc:	strne	r2, [r9, #156]	; 0x9c
   209e0:	ldrne	r4, [r3, #16]
   209e4:	ldr	r1, [r9, #160]	; 0xa0
   209e8:	ldr	r0, [r4, #160]	; 0xa0
   209ec:	cmp	r1, r0
   209f0:	strne	r2, [r9, #160]	; 0xa0
   209f4:	ldrne	r4, [r3, #16]
   209f8:	ldr	r1, [r9, #164]	; 0xa4
   209fc:	ldr	r0, [r4, #164]	; 0xa4
   20a00:	cmp	r1, r0
   20a04:	strne	r2, [r9, #164]	; 0xa4
   20a08:	ldrne	r4, [r3, #16]
   20a0c:	ldr	r1, [r9, #168]	; 0xa8
   20a10:	ldr	r0, [r4, #168]	; 0xa8
   20a14:	cmp	r1, r0
   20a18:	strne	r2, [r9, #168]	; 0xa8
   20a1c:	ldrne	r4, [r3, #16]
   20a20:	ldr	r1, [r9, #172]	; 0xac
   20a24:	ldr	r0, [r4, #172]	; 0xac
   20a28:	cmp	r1, r0
   20a2c:	strne	r2, [r9, #172]	; 0xac
   20a30:	ldrne	r4, [r3, #16]
   20a34:	ldr	r1, [r9, #176]	; 0xb0
   20a38:	ldr	r0, [r4, #176]	; 0xb0
   20a3c:	cmp	r1, r0
   20a40:	strne	r2, [r9, #176]	; 0xb0
   20a44:	ldrne	r4, [r3, #16]
   20a48:	ldr	r1, [r9, #180]	; 0xb4
   20a4c:	ldr	r0, [r4, #180]	; 0xb4
   20a50:	cmp	r1, r0
   20a54:	strne	r2, [r9, #180]	; 0xb4
   20a58:	ldrne	r4, [r3, #16]
   20a5c:	ldr	r1, [r9, #184]	; 0xb8
   20a60:	ldr	r0, [r4, #184]	; 0xb8
   20a64:	cmp	r1, r0
   20a68:	strne	r2, [r9, #184]	; 0xb8
   20a6c:	ldrne	r4, [r3, #16]
   20a70:	ldr	r1, [r9, #188]	; 0xbc
   20a74:	ldr	r0, [r4, #188]	; 0xbc
   20a78:	cmp	r1, r0
   20a7c:	strne	r2, [r9, #188]	; 0xbc
   20a80:	ldrne	r4, [r3, #16]
   20a84:	ldr	r1, [r9, #192]	; 0xc0
   20a88:	ldr	r0, [r4, #192]	; 0xc0
   20a8c:	cmp	r1, r0
   20a90:	strne	r2, [r9, #192]	; 0xc0
   20a94:	ldrne	r4, [r3, #16]
   20a98:	ldr	r1, [r9, #196]	; 0xc4
   20a9c:	ldr	r0, [r4, #196]	; 0xc4
   20aa0:	cmp	r1, r0
   20aa4:	strne	r2, [r9, #196]	; 0xc4
   20aa8:	ldrne	r4, [r3, #16]
   20aac:	ldr	r1, [r6]
   20ab0:	ldr	r0, [r4, #200]	; 0xc8
   20ab4:	cmp	r1, r0
   20ab8:	movne	r1, #0
   20abc:	strne	r1, [r6]
   20ac0:	ldrne	r4, [r3, #16]
   20ac4:	ldr	r8, [lr]
   20ac8:	ldr	r0, [r4, #204]	; 0xcc
   20acc:	cmp	r8, r0
   20ad0:	movne	r8, #0
   20ad4:	strne	r8, [lr]
   20ad8:	ldr	r3, [r3, #20]
   20adc:	cmp	r3, #0
   20ae0:	bne	20968 <opt_loop+0xda0>
   20ae4:	str	r1, [sp, #16]
   20ae8:	b	20b40 <opt_loop+0xf78>
   20aec:	mov	r2, r0
   20af0:	mov	r1, #68	; 0x44
   20af4:	mov	r8, #0
   20af8:	add	lr, r9, #204	; 0xcc
   20afc:	add	r6, r9, #200	; 0xc8
   20b00:	vst1.32	{d8-d9}, [r2], r1
   20b04:	str	r8, [r0, #64]	; 0x40
   20b08:	str	r8, [r2]
   20b0c:	add	r2, r0, #48	; 0x30
   20b10:	vst1.32	{d8-d9}, [r2]
   20b14:	add	r2, r0, #32
   20b18:	add	r0, r0, #16
   20b1c:	vst1.32	{d8-d9}, [r0]
   20b20:	vst1.32	{d8-d9}, [r2]
   20b24:	mov	r0, #0
   20b28:	b	20b3c <opt_loop+0xf74>
   20b2c:	mov	lr, r9
   20b30:	ldr	r8, [lr, #204]!	; 0xcc
   20b34:	mov	r6, lr
   20b38:	ldr	r0, [r6, #-4]!
   20b3c:	str	r0, [sp, #16]
   20b40:	ldr	ip, [r9, #4]
   20b44:	ldr	r3, [sp, #20]
   20b48:	str	lr, [sp, #24]
   20b4c:	str	r6, [sp, #28]
   20b50:	cmp	ip, #0
   20b54:	bne	21dc8 <opt_loop+0x2200>
   20b58:	ldr	r1, [sp, #16]
   20b5c:	cmp	r3, #0
   20b60:	beq	22644 <opt_loop+0x2a7c>
   20b64:	cmp	r1, #0
   20b68:	beq	20b94 <opt_loop+0xfcc>
   20b6c:	ldr	r0, [r9, #128]	; 0x80
   20b70:	cmp	r0, #0
   20b74:	bne	20b94 <opt_loop+0xfcc>
   20b78:	cmp	r8, #0
   20b7c:	beq	20b94 <opt_loop+0xfcc>
   20b80:	ldr	r0, [r6]
   20b84:	cmp	r0, r1
   20b88:	ldreq	r0, [lr]
   20b8c:	cmpeq	r0, r8
   20b90:	beq	20ba4 <opt_loop+0xfdc>
   20b94:	ldr	r0, [r9, #8]
   20b98:	and	r0, r0, #7
   20b9c:	cmp	r0, #6
   20ba0:	bne	22644 <opt_loop+0x2a7c>
   20ba4:	ldr	r0, [r9, #4]
   20ba8:	ldr	r8, [pc, #4072]	; 21b98 <opt_loop+0x1fd0>
   20bac:	cmp	r0, #0
   20bb0:	mov	r0, #0
   20bb4:	add	r8, pc, r8
   20bb8:	strne	r0, [r9, #4]
   20bbc:	strbne	r0, [r8]
   20bc0:	ldr	r0, [r9, #8]
   20bc4:	tst	r0, #8
   20bc8:	beq	22d78 <opt_loop+0x31b0>
   20bcc:	ldr	r3, [lr]
   20bd0:	b	22e38 <opt_loop+0x3270>
   20bd4:	.word	0x00026cb8
   20bd8:	.word	0x00026960
   20bdc:	.word	0x00026d90
   20be0:	.word	0x00026cf8
   20be4:	ldr	r7, [ip, #12]
   20be8:	ldr	r4, [r6]
   20bec:	movw	r1, #8923	; 0x22db
   20bf0:	lsl	r0, r7, #4
   20bf4:	movt	r1, #39383	; 0x99d7
   20bf8:	umull	r0, r1, r0, r1
   20bfc:	lsr	r0, r1, #7
   20c00:	mov	r1, #213	; 0xd5
   20c04:	mul	r0, r0, r1
   20c08:	rsb	r0, r0, r7, lsl #4
   20c0c:	ldr	r2, [sl, r0, lsl #2]
   20c10:	cmp	r2, #0
   20c14:	beq	20c44 <opt_loop+0x107c>
   20c18:	ldr	r1, [r2]
   20c1c:	cmp	r1, #0
   20c20:	bne	20c38 <opt_loop+0x1070>
   20c24:	ldr	r1, [r2, #4]
   20c28:	cmp	r1, r7
   20c2c:	ldreq	r1, [r2, #8]
   20c30:	cmpeq	r1, #0
   20c34:	beq	217f0 <opt_loop+0x1c28>
   20c38:	ldr	r2, [r2, #16]
   20c3c:	cmp	r2, #0
   20c40:	bne	20c18 <opt_loop+0x1050>
   20c44:	ldr	r1, [pc, #3920]	; 21b9c <opt_loop+0x1fd4>
   20c48:	add	r1, pc, r1
   20c4c:	mov	r2, r1
   20c50:	ldr	r1, [r1, #44]	; 0x2c
   20c54:	add	r6, r1, #1
   20c58:	str	r6, [r2, #44]	; 0x2c
   20c5c:	mov	r2, #1
   20c60:	ldr	r1, [pc, #3896]	; 21ba0 <opt_loop+0x1fd8>
   20c64:	ldr	r1, [pc, r1]
   20c68:	add	r1, r1, r6, lsl #3
   20c6c:	str	r7, [r1, #4]
   20c70:	ldr	r1, [pc, #3884]	; 21ba4 <opt_loop+0x1fdc>
   20c74:	ldr	r1, [pc, r1]
   20c78:	str	r2, [r1, r6, lsl #3]
   20c7c:	ldr	r1, [pc, #3876]	; 21ba8 <opt_loop+0x1fe0>
   20c80:	ldr	r1, [pc, r1]
   20c84:	ldr	sl, [pc, #3872]	; 21bac <opt_loop+0x1fe4>
   20c88:	add	r2, r1, #20
   20c8c:	add	sl, pc, sl
   20c90:	str	r2, [sl]
   20c94:	mov	r2, #0
   20c98:	ldr	sl, [pc, #3856]	; 21bb0 <opt_loop+0x1fe8>
   20c9c:	str	r6, [r1, #12]
   20ca0:	stm	r1, {r2, r7}
   20ca4:	str	r2, [r1, #8]
   20ca8:	add	sl, pc, sl
   20cac:	ldr	r2, [sl, r0, lsl #2]
   20cb0:	str	r2, [r1, #16]
   20cb4:	str	r1, [sl, r0, lsl #2]
   20cb8:	eor	r0, r5, r4, lsl #4
   20cbc:	movw	r1, #8923	; 0x22db
   20cc0:	eor	r0, r0, r6, lsl #8
   20cc4:	movt	r1, #39383	; 0x99d7
   20cc8:	umull	r1, r2, r0, r1
   20ccc:	lsr	r1, r2, #7
   20cd0:	mov	r2, #213	; 0xd5
   20cd4:	mls	r7, r1, r2, r0
   20cd8:	ldr	r0, [sl, r7, lsl #2]
   20cdc:	cmp	r0, #0
   20ce0:	beq	20d10 <opt_loop+0x1148>
   20ce4:	ldr	r1, [r0]
   20ce8:	cmp	r1, r5
   20cec:	bne	20d04 <opt_loop+0x113c>
   20cf0:	ldr	r1, [r0, #4]
   20cf4:	cmp	r1, r4
   20cf8:	ldreq	r1, [r0, #8]
   20cfc:	cmpeq	r1, r6
   20d00:	beq	21764 <opt_loop+0x1b9c>
   20d04:	ldr	r0, [r0, #16]
   20d08:	cmp	r0, #0
   20d0c:	bne	20ce4 <opt_loop+0x111c>
   20d10:	ldr	r0, [pc, #4092]	; 21d14 <opt_loop+0x214c>
   20d14:	mov	lr, r3
   20d18:	tst	r5, #230	; 0xe6
   20d1c:	add	r0, pc, r0
   20d20:	mov	r1, r0
   20d24:	ldr	r0, [r0, #44]	; 0x2c
   20d28:	add	r0, r0, #1
   20d2c:	str	r0, [r1, #44]	; 0x2c
   20d30:	bne	20d54 <opt_loop+0x118c>
   20d34:	ldr	r1, [pc, #4088]	; 21d34 <opt_loop+0x216c>
   20d38:	mov	r2, #1
   20d3c:	ldr	r1, [pc, r1]
   20d40:	add	r1, r1, r0, lsl #3
   20d44:	str	r4, [r1, #4]
   20d48:	ldr	r1, [pc, #4092]	; 21d4c <opt_loop+0x2184>
   20d4c:	ldr	r1, [pc, r1]
   20d50:	str	r2, [r1, r0, lsl #3]
   20d54:	ldr	r1, [pc, #4084]	; 21d50 <opt_loop+0x2188>
   20d58:	ldr	r1, [pc, r1]
   20d5c:	ldr	r3, [pc, #4080]	; 21d54 <opt_loop+0x218c>
   20d60:	add	r2, r1, #20
   20d64:	add	r3, pc, r3
   20d68:	str	r2, [r3]
   20d6c:	str	r5, [r1]
   20d70:	str	r0, [r1, #12]
   20d74:	stmib	r1, {r4, r6}
   20d78:	mov	r3, lr
   20d7c:	ldr	r2, [sl, r7, lsl #2]
   20d80:	ldr	r6, [sp, #28]
   20d84:	ldr	lr, [sp, #24]
   20d88:	str	r2, [r1, #16]
   20d8c:	str	r1, [sl, r7, lsl #2]
   20d90:	str	r0, [r6]
   20d94:	ldr	ip, [ip, #16]
   20d98:	cmp	ip, #0
   20d9c:	bne	21dc8 <opt_loop+0x2200>
   20da0:	b	20b58 <opt_loop+0xf90>
   20da4:	cmp	r6, #0
   20da8:	beq	22530 <opt_loop+0x2968>
   20dac:	add	r1, r2, r7, lsl #3
   20db0:	ldr	r1, [r1, #4]
   20db4:	cmp	r1, #0
   20db8:	bne	22530 <opt_loop+0x2968>
   20dbc:	orr	r1, r0, #64	; 0x40
   20dc0:	cmp	r1, #64	; 0x40
   20dc4:	bne	21a30 <opt_loop+0x1e68>
   20dc8:	ldr	r6, [sp, #28]
   20dcc:	mov	r0, #135	; 0x87
   20dd0:	str	r0, [ip]
   20dd4:	ldr	r0, [lr]
   20dd8:	ldr	r1, [r6]
   20ddc:	cmp	r1, r0
   20de0:	beq	21748 <opt_loop+0x1b80>
   20de4:	str	r0, [r6]
   20de8:	ldr	ip, [ip, #16]
   20dec:	cmp	ip, #0
   20df0:	bne	21dc8 <opt_loop+0x2200>
   20df4:	b	20b58 <opt_loop+0xf90>
   20df8:	.word	0x00026af4
   20dfc:	and	r0, r5, #240	; 0xf0
   20e00:	sbfx	r2, r0, #4, #4
   20e04:	cmp	r2, #0
   20e08:	blt	20e24 <opt_loop+0x125c>
   20e0c:	lsr	r2, r0, #4
   20e10:	mov	r1, #209	; 0xd1
   20e14:	mov	r6, #1
   20e18:	tst	r1, r6, lsl r2
   20e1c:	ldr	r6, [sp, #28]
   20e20:	bne	21748 <opt_loop+0x1b80>
   20e24:	cmp	r0, #80	; 0x50
   20e28:	cmpne	r0, #32
   20e2c:	bne	22120 <opt_loop+0x2558>
   20e30:	mov	r0, #0
   20e34:	mov	r5, r3
   20e38:	str	r0, [ip]
   20e3c:	ldr	r0, [pc, #3996]	; 21de0 <opt_loop+0x2218>
   20e40:	ldr	r0, [pc, r0]
   20e44:	cmp	r0, #0
   20e48:	beq	20e7c <opt_loop+0x12b4>
   20e4c:	ldr	r2, [r0]
   20e50:	cmp	r2, #0
   20e54:	bne	20e70 <opt_loop+0x12a8>
   20e58:	ldr	r2, [r0, #4]
   20e5c:	cmp	r2, #0
   20e60:	bne	20e70 <opt_loop+0x12a8>
   20e64:	ldr	r2, [r0, #8]
   20e68:	cmp	r2, #0
   20e6c:	beq	21dac <opt_loop+0x21e4>
   20e70:	ldr	r0, [r0, #16]
   20e74:	cmp	r0, #0
   20e78:	bne	20e4c <opt_loop+0x1284>
   20e7c:	ldr	r0, [pc, #3936]	; 21de4 <opt_loop+0x221c>
   20e80:	mov	r3, #1
   20e84:	add	r0, pc, r0
   20e88:	mov	r1, r0
   20e8c:	ldr	r0, [r0, #44]	; 0x2c
   20e90:	add	r0, r0, #1
   20e94:	str	r0, [r1, #44]	; 0x2c
   20e98:	mov	r1, #0
   20e9c:	ldr	r2, [pc, #3908]	; 21de8 <opt_loop+0x2220>
   20ea0:	ldr	r2, [pc, r2]
   20ea4:	add	r2, r2, r0, lsl #3
   20ea8:	str	r1, [r2, #4]
   20eac:	ldr	r2, [pc, #3896]	; 21dec <opt_loop+0x2224>
   20eb0:	ldr	r2, [pc, r2]
   20eb4:	str	r3, [r2, r0, lsl #3]
   20eb8:	ldr	r2, [pc, #3888]	; 21df0 <opt_loop+0x2228>
   20ebc:	ldr	r2, [pc, r2]
   20ec0:	ldr	r3, [pc, #3884]	; 21df4 <opt_loop+0x222c>
   20ec4:	add	r4, r2, #20
   20ec8:	add	r3, pc, r3
   20ecc:	str	r4, [r3]
   20ed0:	str	r1, [r2]
   20ed4:	str	r0, [r2, #12]
   20ed8:	str	r1, [r2, #4]
   20edc:	str	r1, [r2, #8]
   20ee0:	ldr	r4, [pc, #3856]	; 21df8 <opt_loop+0x2230>
   20ee4:	ldr	r4, [pc, r4]
   20ee8:	str	r4, [r2, #16]
   20eec:	str	r2, [sl]
   20ef0:	b	21cd0 <opt_loop+0x2108>
   20ef4:	ldr	r6, [ip, #12]
   20ef8:	eor	r0, r5, r7, lsl #8
   20efc:	movw	r1, #8923	; 0x22db
   20f00:	movt	r1, #39383	; 0x99d7
   20f04:	eor	r0, r0, r6, lsl #4
   20f08:	umull	r2, r4, r0, r1
   20f0c:	mov	r1, #213	; 0xd5
   20f10:	lsr	r2, r4, #7
   20f14:	mls	r4, r2, r1, r0
   20f18:	ldr	r0, [sl, r4, lsl #2]
   20f1c:	cmp	r0, #0
   20f20:	beq	20f50 <opt_loop+0x1388>
   20f24:	ldr	r2, [r0]
   20f28:	cmp	r2, r5
   20f2c:	bne	20f44 <opt_loop+0x137c>
   20f30:	ldr	r2, [r0, #4]
   20f34:	cmp	r2, r6
   20f38:	ldreq	r2, [r0, #8]
   20f3c:	cmpeq	r2, r7
   20f40:	beq	218dc <opt_loop+0x1d14>
   20f44:	ldr	r0, [r0, #16]
   20f48:	cmp	r0, #0
   20f4c:	bne	20f24 <opt_loop+0x135c>
   20f50:	ldr	r0, [pc, #3748]	; 21dfc <opt_loop+0x2234>
   20f54:	tst	r5, #230	; 0xe6
   20f58:	add	r0, pc, r0
   20f5c:	mov	r1, r0
   20f60:	ldr	r0, [r0, #44]	; 0x2c
   20f64:	add	r0, r0, #1
   20f68:	str	r0, [r1, #44]	; 0x2c
   20f6c:	bne	20f90 <opt_loop+0x13c8>
   20f70:	ldr	r2, [pc, #3720]	; 21e00 <opt_loop+0x2238>
   20f74:	mov	r1, #1
   20f78:	ldr	r2, [pc, r2]
   20f7c:	add	r2, r2, r0, lsl #3
   20f80:	str	r6, [r2, #4]
   20f84:	ldr	r2, [pc, #3704]	; 21e04 <opt_loop+0x223c>
   20f88:	ldr	r2, [pc, r2]
   20f8c:	str	r1, [r2, r0, lsl #3]
   20f90:	ldr	r2, [pc, #3696]	; 21e08 <opt_loop+0x2240>
   20f94:	ldr	r2, [pc, r2]
   20f98:	ldr	r1, [pc, #3692]	; 21e0c <opt_loop+0x2244>
   20f9c:	add	sl, r2, #20
   20fa0:	add	r1, pc, r1
   20fa4:	str	sl, [r1]
   20fa8:	str	r0, [r2, #12]
   20fac:	stm	r2, {r5, r6, r7}
   20fb0:	ldr	sl, [pc, #3672]	; 21e10 <opt_loop+0x2248>
   20fb4:	ldr	r3, [sp, #20]
   20fb8:	add	sl, pc, sl
   20fbc:	ldr	r5, [sl, r4, lsl #2]
   20fc0:	str	r5, [r2, #16]
   20fc4:	str	r2, [sl, r4, lsl #2]
   20fc8:	ldr	r6, [sp, #28]
   20fcc:	cmp	r3, #0
   20fd0:	beq	20fe0 <opt_loop+0x1418>
   20fd4:	ldr	r2, [r6]
   20fd8:	cmp	r2, r0
   20fdc:	beq	21748 <opt_loop+0x1b80>
   20fe0:	str	r0, [r6]
   20fe4:	ldr	ip, [ip, #16]
   20fe8:	cmp	ip, #0
   20fec:	bne	21dc8 <opt_loop+0x2200>
   20ff0:	b	20b58 <opt_loop+0xf90>
   20ff4:	.word	0x00026904
   20ff8:	orr	r7, r0, #4
   20ffc:	mov	r1, #0
   21000:	str	r7, [ip]
   21004:	ldr	r0, [lr]
   21008:	ldr	r2, [pc, #3588]	; 21e14 <opt_loop+0x224c>
   2100c:	ldr	r2, [pc, r2]
   21010:	add	r0, r2, r0, lsl #3
   21014:	ldr	r4, [r0, #4]
   21018:	str	r4, [ip, #12]
   2101c:	ldr	r0, [pc, #3572]	; 21e18 <opt_loop+0x2250>
   21020:	add	r0, pc, r0
   21024:	strb	r1, [r0]
   21028:	movw	r1, #8923	; 0x22db
   2102c:	lsl	r0, r4, #4
   21030:	movt	r1, #39383	; 0x99d7
   21034:	umull	r0, r1, r0, r1
   21038:	lsr	r0, r1, #7
   2103c:	mov	r1, #213	; 0xd5
   21040:	mul	r0, r0, r1
   21044:	ldr	r1, [sp, #28]
   21048:	rsb	r0, r0, r4, lsl #4
   2104c:	ldr	r6, [sl, r0, lsl #2]
   21050:	ldr	r5, [r1]
   21054:	cmp	r6, #0
   21058:	beq	21088 <opt_loop+0x14c0>
   2105c:	ldr	r1, [r6]
   21060:	cmp	r1, #0
   21064:	bne	2107c <opt_loop+0x14b4>
   21068:	ldr	r1, [r6, #4]
   2106c:	cmp	r1, r4
   21070:	ldreq	r1, [r6, #8]
   21074:	cmpeq	r1, #0
   21078:	beq	21d18 <opt_loop+0x2150>
   2107c:	ldr	r6, [r6, #16]
   21080:	cmp	r6, #0
   21084:	bne	2105c <opt_loop+0x1494>
   21088:	ldr	sl, [pc, #3468]	; 21e1c <opt_loop+0x2254>
   2108c:	add	sl, pc, sl
   21090:	ldr	r1, [sl, #44]	; 0x2c
   21094:	add	r6, r1, #1
   21098:	str	r6, [sl, #44]	; 0x2c
   2109c:	add	r1, r2, r6, lsl #3
   210a0:	mov	r2, #1
   210a4:	ldr	sl, [pc, #3444]	; 21e20 <opt_loop+0x2258>
   210a8:	str	r4, [r1, #4]
   210ac:	ldr	r1, [pc, #3440]	; 21e24 <opt_loop+0x225c>
   210b0:	add	sl, pc, sl
   210b4:	ldr	r1, [pc, r1]
   210b8:	str	r2, [r1, r6, lsl #3]
   210bc:	ldr	r1, [pc, #3428]	; 21e28 <opt_loop+0x2260>
   210c0:	ldr	r1, [pc, r1]
   210c4:	ldr	r3, [pc, #3424]	; 21e2c <opt_loop+0x2264>
   210c8:	add	r2, r1, #20
   210cc:	add	r3, pc, r3
   210d0:	str	r2, [r3]
   210d4:	mov	r2, #0
   210d8:	str	r6, [r1, #12]
   210dc:	stm	r1, {r2, r4}
   210e0:	str	r2, [r1, #8]
   210e4:	ldr	r2, [sl, r0, lsl #2]
   210e8:	str	r2, [r1, #16]
   210ec:	str	r1, [sl, r0, lsl #2]
   210f0:	eor	r0, r7, r5, lsl #4
   210f4:	movw	r1, #8923	; 0x22db
   210f8:	eor	r0, r0, r6, lsl #8
   210fc:	movt	r1, #39383	; 0x99d7
   21100:	umull	r1, r2, r0, r1
   21104:	lsr	r1, r2, #7
   21108:	mov	r2, #213	; 0xd5
   2110c:	mls	r0, r1, r2, r0
   21110:	ldr	r2, [sl, r0, lsl #2]
   21114:	cmp	r2, #0
   21118:	beq	21148 <opt_loop+0x1580>
   2111c:	ldr	r1, [r2]
   21120:	cmp	r1, r7
   21124:	bne	2113c <opt_loop+0x1574>
   21128:	ldr	r1, [r2, #4]
   2112c:	cmp	r1, r5
   21130:	ldreq	r1, [r2, #8]
   21134:	cmpeq	r1, r6
   21138:	beq	21cfc <opt_loop+0x2134>
   2113c:	ldr	r2, [r2, #16]
   21140:	cmp	r2, #0
   21144:	bne	2111c <opt_loop+0x1554>
   21148:	ldr	r1, [pc, #4008]	; 220f8 <opt_loop+0x2530>
   2114c:	ldr	r1, [pc, r1]
   21150:	ldr	r3, [pc, #4004]	; 220fc <opt_loop+0x2534>
   21154:	add	r2, r1, #20
   21158:	add	r3, pc, r3
   2115c:	str	r2, [r3]
   21160:	ldr	r2, [pc, #3992]	; 22100 <opt_loop+0x2538>
   21164:	add	r2, pc, r2
   21168:	mov	r4, r2
   2116c:	ldr	r2, [r2, #44]	; 0x2c
   21170:	add	r2, r2, #1
   21174:	str	r2, [r4, #44]	; 0x2c
   21178:	str	r7, [r1]
   2117c:	str	r2, [r1, #12]
   21180:	stmib	r1, {r5, r6}
   21184:	ldr	r4, [sl, r0, lsl #2]
   21188:	ldr	r6, [sp, #28]
   2118c:	ldr	r3, [sp, #20]
   21190:	str	r4, [r1, #16]
   21194:	str	r1, [sl, r0, lsl #2]
   21198:	str	r2, [r6]
   2119c:	ldr	ip, [ip, #16]
   211a0:	cmp	ip, #0
   211a4:	bne	21dc8 <opt_loop+0x2200>
   211a8:	b	20b58 <opt_loop+0xf90>
   211ac:	cmp	r3, #0
   211b0:	beq	2180c <opt_loop+0x1c44>
   211b4:	ldr	r7, [r6]
   211b8:	ldr	r0, [pc, #3908]	; 22104 <opt_loop+0x253c>
   211bc:	ldr	r0, [pc, r0]
   211c0:	ldr	r0, [r0, r7, lsl #3]
   211c4:	cmp	r0, #0
   211c8:	beq	21810 <opt_loop+0x1c48>
   211cc:	mov	r0, #0
   211d0:	movw	r1, #8923	; 0x22db
   211d4:	str	r0, [ip]
   211d8:	movt	r1, #39383	; 0x99d7
   211dc:	ldr	r0, [r6]
   211e0:	ldr	r2, [pc, #3872]	; 22108 <opt_loop+0x2540>
   211e4:	ldr	r2, [pc, r2]
   211e8:	add	r0, r2, r0, lsl #3
   211ec:	ldr	r0, [r0, #4]
   211f0:	rsb	r7, r0, #0
   211f4:	lsl	r0, r7, #4
   211f8:	str	r7, [ip, #12]
   211fc:	umull	r0, r4, r0, r1
   21200:	mov	r1, #213	; 0xd5
   21204:	lsr	r0, r4, #7
   21208:	mul	r0, r0, r1
   2120c:	rsb	r0, r0, r7, lsl #4
   21210:	ldr	r4, [sl, r0, lsl #2]
   21214:	cmp	r4, #0
   21218:	beq	21248 <opt_loop+0x1680>
   2121c:	ldr	r5, [r4]
   21220:	cmp	r5, #0
   21224:	bne	2123c <opt_loop+0x1674>
   21228:	ldr	r5, [r4, #4]
   2122c:	cmp	r5, r7
   21230:	ldreq	r5, [r4, #8]
   21234:	cmpeq	r5, #0
   21238:	beq	21d94 <opt_loop+0x21cc>
   2123c:	ldr	r4, [r4, #16]
   21240:	cmp	r4, #0
   21244:	bne	2121c <opt_loop+0x1654>
   21248:	ldr	r1, [pc, #4092]	; 2224c <opt_loop+0x2684>
   2124c:	add	r1, pc, r1
   21250:	ldr	r4, [r1, #44]	; 0x2c
   21254:	add	r4, r4, #1
   21258:	add	r2, r2, r4, lsl #3
   2125c:	str	r4, [r1, #44]	; 0x2c
   21260:	mov	r1, #1
   21264:	str	r7, [r2, #4]
   21268:	ldr	r2, [pc, #4072]	; 22258 <opt_loop+0x2690>
   2126c:	ldr	r2, [pc, r2]
   21270:	str	r1, [r2, r4, lsl #3]
   21274:	ldr	r2, [pc, #4064]	; 2225c <opt_loop+0x2694>
   21278:	ldr	r2, [pc, r2]
   2127c:	ldr	r1, [pc, #4060]	; 22260 <opt_loop+0x2698>
   21280:	add	r5, r2, #20
   21284:	add	r1, pc, r1
   21288:	str	r5, [r1]
   2128c:	mov	r1, #0
   21290:	str	r4, [r2, #12]
   21294:	stm	r2, {r1, r7}
   21298:	b	218a4 <opt_loop+0x1cdc>
   2129c:	ldr	r0, [r6]
   212a0:	cmp	r3, #0
   212a4:	beq	212b4 <opt_loop+0x16ec>
   212a8:	ldr	r1, [lr]
   212ac:	cmp	r1, r0
   212b0:	beq	21748 <opt_loop+0x1b80>
   212b4:	str	r0, [lr]
   212b8:	ldr	ip, [ip, #16]
   212bc:	cmp	ip, #0
   212c0:	bne	21dc8 <opt_loop+0x2200>
   212c4:	b	20b58 <opt_loop+0xf90>
   212c8:	.word	0x000261bc
   212cc:	ldr	r0, [ip, #12]
   212d0:	mov	r1, #177	; 0xb1
   212d4:	eor	r2, r1, r0, lsl #4
   212d8:	movw	r1, #8923	; 0x22db
   212dc:	movt	r1, #39383	; 0x99d7
   212e0:	umull	r4, r5, r2, r1
   212e4:	mov	r1, #213	; 0xd5
   212e8:	lsr	r4, r5, #7
   212ec:	mls	r2, r4, r1, r2
   212f0:	ldr	r4, [sl, r2, lsl #2]
   212f4:	cmp	r4, #0
   212f8:	beq	21328 <opt_loop+0x1760>
   212fc:	ldr	r5, [r4]
   21300:	cmp	r5, #177	; 0xb1
   21304:	bne	2131c <opt_loop+0x1754>
   21308:	ldr	r5, [r4, #4]
   2130c:	cmp	r5, r0
   21310:	ldreq	r5, [r4, #8]
   21314:	cmpeq	r5, #0
   21318:	beq	21d04 <opt_loop+0x213c>
   2131c:	ldr	r4, [r4, #16]
   21320:	cmp	r4, #0
   21324:	bne	212fc <opt_loop+0x1734>
   21328:	ldr	r5, [pc, #4036]	; 222f4 <opt_loop+0x272c>
   2132c:	ldr	r5, [pc, r5]
   21330:	ldr	r1, [pc, #4032]	; 222f8 <opt_loop+0x2730>
   21334:	add	r4, r5, #20
   21338:	add	r1, pc, r1
   2133c:	str	r4, [r1]
   21340:	ldr	r1, [pc, #4020]	; 222fc <opt_loop+0x2734>
   21344:	add	r1, pc, r1
   21348:	ldr	r4, [r1, #44]	; 0x2c
   2134c:	add	r4, r4, #1
   21350:	str	r4, [r1, #44]	; 0x2c
   21354:	mov	r1, #177	; 0xb1
   21358:	str	r1, [r5]
   2135c:	str	r4, [r5, #12]
   21360:	str	r0, [r5, #4]
   21364:	mov	r0, #0
   21368:	str	r0, [r5, #8]
   2136c:	ldr	r0, [sl, r2, lsl #2]
   21370:	str	r0, [r5, #16]
   21374:	str	r5, [sl, r2, lsl #2]
   21378:	cmp	r3, #0
   2137c:	beq	2138c <opt_loop+0x17c4>
   21380:	ldr	r0, [lr]
   21384:	cmp	r0, r4
   21388:	beq	21748 <opt_loop+0x1b80>
   2138c:	str	r4, [lr]
   21390:	ldr	ip, [ip, #16]
   21394:	cmp	ip, #0
   21398:	bne	21dc8 <opt_loop+0x2200>
   2139c:	b	20b58 <opt_loop+0xf90>
   213a0:	ldr	r0, [ip, #12]
   213a4:	ldr	r2, [r9, #200]	; 0xc8
   213a8:	add	r0, r9, r0, lsl #2
   213ac:	add	r0, r0, #136	; 0x88
   213b0:	cmp	r3, #0
   213b4:	beq	21640 <opt_loop+0x1a78>
   213b8:	ldr	r1, [r0]
   213bc:	cmp	r1, r2
   213c0:	bne	21640 <opt_loop+0x1a78>
   213c4:	b	21748 <opt_loop+0x1b80>
   213c8:	ldr	r0, [ip, #12]
   213cc:	cmp	r3, #0
   213d0:	add	r0, r9, r0, lsl #2
   213d4:	ldr	r0, [r0, #136]	; 0x88
   213d8:	beq	21424 <opt_loop+0x185c>
   213dc:	ldr	r1, [pc, #3868]	; 22300 <opt_loop+0x2738>
   213e0:	ldr	r1, [pc, r1]
   213e4:	ldr	r1, [r1, r0, lsl #3]
   213e8:	cmp	r1, #0
   213ec:	beq	21418 <opt_loop+0x1850>
   213f0:	mov	r2, #0
   213f4:	str	r2, [ip]
   213f8:	ldr	r1, [pc, #4092]	; 223fc <opt_loop+0x2834>
   213fc:	ldr	r1, [pc, r1]
   21400:	add	r1, r1, r0, lsl #3
   21404:	ldr	r1, [r1, #4]
   21408:	str	r1, [ip, #12]
   2140c:	ldr	r1, [pc, #4076]	; 22400 <opt_loop+0x2838>
   21410:	add	r1, pc, r1
   21414:	strb	r2, [r1]
   21418:	ldr	r1, [r6]
   2141c:	cmp	r1, r0
   21420:	beq	21748 <opt_loop+0x1b80>
   21424:	str	r0, [r6]
   21428:	ldr	ip, [ip, #16]
   2142c:	cmp	ip, #0
   21430:	bne	21dc8 <opt_loop+0x2200>
   21434:	b	20b58 <opt_loop+0xf90>
   21438:	.word	0x00026518
   2143c:	ldr	r7, [ip, #12]
   21440:	movw	r1, #8923	; 0x22db
   21444:	movt	r1, #39383	; 0x99d7
   21448:	lsl	r0, r7, #4
   2144c:	umull	r0, r2, r0, r1
   21450:	mov	r1, #213	; 0xd5
   21454:	lsr	r0, r2, #7
   21458:	mul	r0, r0, r1
   2145c:	rsb	r6, r0, r7, lsl #4
   21460:	ldr	r0, [sl, r6, lsl #2]
   21464:	cmp	r0, #0
   21468:	beq	21498 <opt_loop+0x18d0>
   2146c:	ldr	r2, [r0]
   21470:	cmp	r2, #0
   21474:	bne	2148c <opt_loop+0x18c4>
   21478:	ldr	r2, [r0, #4]
   2147c:	cmp	r2, r7
   21480:	ldreq	r2, [r0, #8]
   21484:	cmpeq	r2, #0
   21488:	beq	21d20 <opt_loop+0x2158>
   2148c:	ldr	r0, [r0, #16]
   21490:	cmp	r0, #0
   21494:	bne	2146c <opt_loop+0x18a4>
   21498:	ldr	r0, [pc, #3940]	; 22404 <opt_loop+0x283c>
   2149c:	add	r0, pc, r0
   214a0:	mov	r1, r0
   214a4:	ldr	r0, [r0, #44]	; 0x2c
   214a8:	add	r0, r0, #1
   214ac:	str	r0, [r1, #44]	; 0x2c
   214b0:	mov	r1, #1
   214b4:	ldr	r2, [pc, #3916]	; 22408 <opt_loop+0x2840>
   214b8:	ldr	r2, [pc, r2]
   214bc:	add	r2, r2, r0, lsl #3
   214c0:	str	r7, [r2, #4]
   214c4:	ldr	r2, [pc, #3904]	; 2240c <opt_loop+0x2844>
   214c8:	ldr	r2, [pc, r2]
   214cc:	str	r1, [r2, r0, lsl #3]
   214d0:	ldr	r2, [pc, #3896]	; 22410 <opt_loop+0x2848>
   214d4:	ldr	r2, [pc, r2]
   214d8:	ldr	r1, [pc, #3892]	; 22414 <opt_loop+0x284c>
   214dc:	add	r4, r2, #20
   214e0:	add	r1, pc, r1
   214e4:	str	r4, [r1]
   214e8:	mov	r1, #0
   214ec:	str	r0, [r2, #12]
   214f0:	stm	r2, {r1, r7}
   214f4:	str	r1, [r2, #8]
   214f8:	ldr	r4, [sl, r6, lsl #2]
   214fc:	str	r4, [r2, #16]
   21500:	str	r2, [sl, r6, lsl #2]
   21504:	ldr	r6, [sp, #28]
   21508:	cmp	r3, #0
   2150c:	beq	2151c <opt_loop+0x1954>
   21510:	ldr	r2, [r6]
   21514:	cmp	r2, r0
   21518:	beq	21748 <opt_loop+0x1b80>
   2151c:	str	r0, [r6]
   21520:	ldr	ip, [ip, #16]
   21524:	cmp	ip, #0
   21528:	bne	21dc8 <opt_loop+0x2200>
   2152c:	b	20b58 <opt_loop+0xf90>
   21530:	.word	0x00025fa4
   21534:	ldr	r7, [ip, #12]
   21538:	movw	r1, #8923	; 0x22db
   2153c:	movt	r1, #39383	; 0x99d7
   21540:	lsl	r0, r7, #4
   21544:	umull	r0, r2, r0, r1
   21548:	mov	r1, #213	; 0xd5
   2154c:	lsr	r0, r2, #7
   21550:	mul	r0, r0, r1
   21554:	rsb	r6, r0, r7, lsl #4
   21558:	ldr	r0, [sl, r6, lsl #2]
   2155c:	cmp	r0, #0
   21560:	beq	21590 <opt_loop+0x19c8>
   21564:	ldr	r2, [r0]
   21568:	cmp	r2, #0
   2156c:	bne	21584 <opt_loop+0x19bc>
   21570:	ldr	r2, [r0, #4]
   21574:	cmp	r2, r7
   21578:	ldreq	r2, [r0, #8]
   2157c:	cmpeq	r2, #0
   21580:	beq	21d38 <opt_loop+0x2170>
   21584:	ldr	r0, [r0, #16]
   21588:	cmp	r0, #0
   2158c:	bne	21564 <opt_loop+0x199c>
   21590:	ldr	r0, [pc, #4088]	; 22590 <opt_loop+0x29c8>
   21594:	add	r0, pc, r0
   21598:	mov	r1, r0
   2159c:	ldr	r0, [r0, #44]	; 0x2c
   215a0:	add	r0, r0, #1
   215a4:	str	r0, [r1, #44]	; 0x2c
   215a8:	mov	r1, #1
   215ac:	ldr	r2, [pc, #4064]	; 22594 <opt_loop+0x29cc>
   215b0:	ldr	r2, [pc, r2]
   215b4:	add	r2, r2, r0, lsl #3
   215b8:	str	r7, [r2, #4]
   215bc:	ldr	r2, [pc, #4052]	; 22598 <opt_loop+0x29d0>
   215c0:	ldr	r2, [pc, r2]
   215c4:	str	r1, [r2, r0, lsl #3]
   215c8:	ldr	r2, [pc, #4044]	; 2259c <opt_loop+0x29d4>
   215cc:	ldr	r2, [pc, r2]
   215d0:	ldr	r1, [pc, #4040]	; 225a0 <opt_loop+0x29d8>
   215d4:	add	r4, r2, #20
   215d8:	add	r1, pc, r1
   215dc:	str	r4, [r1]
   215e0:	mov	r1, #0
   215e4:	str	r0, [r2, #12]
   215e8:	stm	r2, {r1, r7}
   215ec:	str	r1, [r2, #8]
   215f0:	ldr	r4, [sl, r6, lsl #2]
   215f4:	str	r4, [r2, #16]
   215f8:	str	r2, [sl, r6, lsl #2]
   215fc:	ldr	r6, [sp, #28]
   21600:	cmp	r3, #0
   21604:	beq	21614 <opt_loop+0x1a4c>
   21608:	ldr	r2, [lr]
   2160c:	cmp	r2, r0
   21610:	beq	21748 <opt_loop+0x1b80>
   21614:	str	r0, [lr]
   21618:	ldr	ip, [ip, #16]
   2161c:	cmp	ip, #0
   21620:	bne	21dc8 <opt_loop+0x2200>
   21624:	b	20b58 <opt_loop+0xf90>
   21628:	ldr	r0, [ip, #12]
   2162c:	ldr	r2, [r9, #204]	; 0xcc
   21630:	add	r0, r9, r0, lsl #2
   21634:	add	r0, r0, #136	; 0x88
   21638:	cmp	r3, #0
   2163c:	bne	213b8 <opt_loop+0x17f0>
   21640:	str	r2, [r0]
   21644:	ldr	ip, [ip, #16]
   21648:	cmp	ip, #0
   2164c:	bne	21dc8 <opt_loop+0x2200>
   21650:	b	20b58 <opt_loop+0xf90>
   21654:	ldr	r0, [ip, #12]
   21658:	cmp	r3, #0
   2165c:	add	r0, r9, r0, lsl #2
   21660:	ldr	r0, [r0, #136]	; 0x88
   21664:	beq	216b4 <opt_loop+0x1aec>
   21668:	ldr	r1, [pc, #4048]	; 22640 <opt_loop+0x2a78>
   2166c:	ldr	r1, [pc, r1]
   21670:	ldr	r1, [r1, r0, lsl #3]
   21674:	cmp	r1, #0
   21678:	beq	216a8 <opt_loop+0x1ae0>
   2167c:	mov	r1, #1
   21680:	mov	r2, #0
   21684:	str	r1, [ip]
   21688:	ldr	r1, [pc, #4092]	; 2268c <opt_loop+0x2ac4>
   2168c:	ldr	r1, [pc, r1]
   21690:	add	r1, r1, r0, lsl #3
   21694:	ldr	r1, [r1, #4]
   21698:	str	r1, [ip, #12]
   2169c:	ldr	r1, [pc, #4076]	; 22690 <opt_loop+0x2ac8>
   216a0:	add	r1, pc, r1
   216a4:	strb	r2, [r1]
   216a8:	ldr	r1, [lr]
   216ac:	cmp	r1, r0
   216b0:	beq	21748 <opt_loop+0x1b80>
   216b4:	str	r0, [lr]
   216b8:	ldr	ip, [ip, #16]
   216bc:	cmp	ip, #0
   216c0:	bne	21dc8 <opt_loop+0x2200>
   216c4:	b	20b58 <opt_loop+0xf90>
   216c8:	ldr	r0, [lr]
   216cc:	cmp	r3, #0
   216d0:	beq	216e0 <opt_loop+0x1b18>
   216d4:	ldr	r1, [r6]
   216d8:	cmp	r1, r0
   216dc:	beq	21748 <opt_loop+0x1b80>
   216e0:	str	r0, [r6]
   216e4:	ldr	ip, [ip, #16]
   216e8:	cmp	ip, #0
   216ec:	bne	21dc8 <opt_loop+0x2200>
   216f0:	b	20b58 <opt_loop+0xf90>
   216f4:	ldr	r0, [sl, #512]	; 0x200
   216f8:	cmp	r0, #0
   216fc:	beq	21780 <opt_loop+0x1bb8>
   21700:	ldr	r2, [r0]
   21704:	cmp	r2, #128	; 0x80
   21708:	ldreq	r2, [r0, #4]
   2170c:	cmpeq	r2, #0
   21710:	beq	21724 <opt_loop+0x1b5c>
   21714:	ldr	r0, [r0, #16]
   21718:	cmp	r0, #0
   2171c:	bne	21700 <opt_loop+0x1b38>
   21720:	b	21780 <opt_loop+0x1bb8>
   21724:	ldr	r2, [r0, #8]
   21728:	cmp	r2, #0
   2172c:	bne	21714 <opt_loop+0x1b4c>
   21730:	ldr	r0, [r0, #12]
   21734:	cmp	r3, #0
   21738:	beq	217dc <opt_loop+0x1c14>
   2173c:	ldr	r2, [r6]
   21740:	cmp	r2, r0
   21744:	bne	217dc <opt_loop+0x1c14>
   21748:	mvn	r0, #0
   2174c:	str	r0, [ip]
   21750:	ldr	ip, [ip, #16]
   21754:	cmp	ip, #0
   21758:	bne	21dc8 <opt_loop+0x2200>
   2175c:	b	20b58 <opt_loop+0xf90>
   21760:	.word	0x00025df8
   21764:	ldr	r0, [r0, #12]
   21768:	ldr	r6, [sp, #28]
   2176c:	str	r0, [r6]
   21770:	ldr	ip, [ip, #16]
   21774:	cmp	ip, #0
   21778:	bne	21dc8 <opt_loop+0x2200>
   2177c:	b	20b58 <opt_loop+0xf90>
   21780:	ldr	r2, [pc, #4060]	; 22764 <opt_loop+0x2b9c>
   21784:	ldr	r2, [pc, r2]
   21788:	ldr	r1, [pc, #4056]	; 22768 <opt_loop+0x2ba0>
   2178c:	add	r0, r2, #20
   21790:	add	r1, pc, r1
   21794:	str	r0, [r1]
   21798:	ldr	r0, [pc, #4092]	; 2279c <opt_loop+0x2bd4>
   2179c:	add	r0, pc, r0
   217a0:	mov	r1, r0
   217a4:	ldr	r0, [r0, #44]	; 0x2c
   217a8:	add	r0, r0, #1
   217ac:	str	r0, [r1, #44]	; 0x2c
   217b0:	mov	r1, #128	; 0x80
   217b4:	str	r1, [r2]
   217b8:	mov	r1, #0
   217bc:	str	r0, [r2, #12]
   217c0:	str	r1, [r2, #4]
   217c4:	str	r1, [r2, #8]
   217c8:	ldr	r4, [sl, #512]	; 0x200
   217cc:	str	r4, [r2, #16]
   217d0:	str	r2, [sl, #512]	; 0x200
   217d4:	cmp	r3, #0
   217d8:	bne	2173c <opt_loop+0x1b74>
   217dc:	str	r0, [r6]
   217e0:	ldr	ip, [ip, #16]
   217e4:	cmp	ip, #0
   217e8:	bne	21dc8 <opt_loop+0x2200>
   217ec:	b	20b58 <opt_loop+0xf90>
   217f0:	ldr	r6, [r2, #12]
   217f4:	b	20cb8 <opt_loop+0x10f0>
   217f8:	.word	0x00026198
   217fc:	.word	0x0002618c
   21800:	.word	0x0002617c
   21804:	.word	0x00026134
   21808:	.word	0x0002610c
   2180c:	ldr	r7, [r6]
   21810:	mov	r0, #132	; 0x84
   21814:	movw	r1, #8923	; 0x22db
   21818:	eor	r0, r0, r7, lsl #4
   2181c:	movt	r1, #39383	; 0x99d7
   21820:	umull	r2, r4, r0, r1
   21824:	mov	r1, #213	; 0xd5
   21828:	lsr	r2, r4, #7
   2182c:	mls	r0, r2, r1, r0
   21830:	ldr	r2, [sl, r0, lsl #2]
   21834:	cmp	r2, #0
   21838:	beq	21868 <opt_loop+0x1ca0>
   2183c:	ldr	r4, [r2]
   21840:	cmp	r4, #132	; 0x84
   21844:	bne	2185c <opt_loop+0x1c94>
   21848:	ldr	r4, [r2, #4]
   2184c:	cmp	r4, r7
   21850:	ldreq	r4, [r2, #8]
   21854:	cmpeq	r4, #0
   21858:	beq	21d58 <opt_loop+0x2190>
   2185c:	ldr	r2, [r2, #16]
   21860:	cmp	r2, #0
   21864:	bne	2183c <opt_loop+0x1c74>
   21868:	ldr	r2, [pc, #3936]	; 227d0 <opt_loop+0x2c08>
   2186c:	ldr	r2, [pc, r2]
   21870:	ldr	r1, [pc, #3932]	; 227d4 <opt_loop+0x2c0c>
   21874:	add	r4, r2, #20
   21878:	add	r1, pc, r1
   2187c:	str	r4, [r1]
   21880:	ldr	r1, [pc, #3920]	; 227d8 <opt_loop+0x2c10>
   21884:	add	r1, pc, r1
   21888:	ldr	r4, [r1, #44]	; 0x2c
   2188c:	add	r4, r4, #1
   21890:	str	r4, [r1, #44]	; 0x2c
   21894:	mov	r1, #132	; 0x84
   21898:	str	r4, [r2, #12]
   2189c:	stm	r2, {r1, r7}
   218a0:	mov	r1, #0
   218a4:	str	r1, [r2, #8]
   218a8:	ldr	r5, [sl, r0, lsl #2]
   218ac:	str	r5, [r2, #16]
   218b0:	str	r2, [sl, r0, lsl #2]
   218b4:	str	r4, [r6]
   218b8:	ldr	ip, [ip, #16]
   218bc:	cmp	ip, #0
   218c0:	bne	21dc8 <opt_loop+0x2200>
   218c4:	b	20b58 <opt_loop+0xf90>
   218c8:	ldr	r0, [r0, #12]
   218cc:	ldr	r6, [sp, #28]
   218d0:	cmp	r3, #0
   218d4:	bne	223dc <opt_loop+0x2814>
   218d8:	b	223e8 <opt_loop+0x2820>
   218dc:	ldr	r0, [r0, #12]
   218e0:	ldr	r6, [sp, #28]
   218e4:	cmp	r3, #0
   218e8:	bne	20fd4 <opt_loop+0x140c>
   218ec:	b	20fe0 <opt_loop+0x1418>
   218f0:	.word	0x000260ac
   218f4:	orr	r7, r0, r2
   218f8:	b	21938 <opt_loop+0x1d70>
   218fc:	mul	r7, r0, r2
   21900:	b	21938 <opt_loop+0x1d70>
   21904:	sub	r7, r2, r0
   21908:	b	21938 <opt_loop+0x1d70>
   2190c:	cmp	r0, #0
   21910:	beq	232cc <opt_loop+0x3704>
   21914:	udiv	r7, r2, r0
   21918:	b	21938 <opt_loop+0x1d70>
   2191c:	lsr	r7, r2, r0
   21920:	b	21938 <opt_loop+0x1d70>
   21924:	and	r7, r0, r2
   21928:	b	21938 <opt_loop+0x1d70>
   2192c:	lsl	r7, r2, r0
   21930:	b	21938 <opt_loop+0x1d70>
   21934:	rsb	r7, r2, #0
   21938:	mov	r1, #0
   2193c:	str	r1, [ip]
   21940:	str	r7, [ip, #12]
   21944:	ldr	r0, [pc, #4076]	; 22938 <opt_loop+0x2d70>
   21948:	add	r0, pc, r0
   2194c:	strb	r1, [r0]
   21950:	movw	r1, #8923	; 0x22db
   21954:	lsl	r0, r7, #4
   21958:	movt	r1, #39383	; 0x99d7
   2195c:	umull	r0, r1, r0, r1
   21960:	lsr	r0, r1, #7
   21964:	mov	r1, #213	; 0xd5
   21968:	mul	r0, r0, r1
   2196c:	rsb	r6, r0, r7, lsl #4
   21970:	ldr	r0, [sl, r6, lsl #2]
   21974:	cmp	r0, #0
   21978:	beq	219a8 <opt_loop+0x1de0>
   2197c:	ldr	r1, [r0]
   21980:	cmp	r1, #0
   21984:	bne	2199c <opt_loop+0x1dd4>
   21988:	ldr	r1, [r0, #4]
   2198c:	cmp	r1, r7
   21990:	ldreq	r1, [r0, #8]
   21994:	cmpeq	r1, #0
   21998:	beq	21cc4 <opt_loop+0x20fc>
   2199c:	ldr	r0, [r0, #16]
   219a0:	cmp	r0, #0
   219a4:	bne	2197c <opt_loop+0x1db4>
   219a8:	ldr	r0, [pc, #4040]	; 22978 <opt_loop+0x2db0>
   219ac:	mov	r2, #1
   219b0:	mov	r4, #0
   219b4:	add	r0, pc, r0
   219b8:	mov	r1, r0
   219bc:	ldr	r0, [r0, #44]	; 0x2c
   219c0:	add	r0, r0, #1
   219c4:	str	r0, [r1, #44]	; 0x2c
   219c8:	ldr	r1, [pc, #4012]	; 2297c <opt_loop+0x2db4>
   219cc:	ldr	r1, [pc, r1]
   219d0:	add	r1, r1, r0, lsl #3
   219d4:	str	r7, [r1, #4]
   219d8:	ldr	r1, [pc, #4000]	; 22980 <opt_loop+0x2db8>
   219dc:	ldr	r1, [pc, r1]
   219e0:	str	r2, [r1, r0, lsl #3]
   219e4:	ldr	r1, [pc, #3992]	; 22984 <opt_loop+0x2dbc>
   219e8:	ldr	r1, [pc, r1]
   219ec:	ldr	r3, [pc, #3988]	; 22988 <opt_loop+0x2dc0>
   219f0:	add	r2, r1, #20
   219f4:	add	r3, pc, r3
   219f8:	str	r2, [r3]
   219fc:	str	r0, [r1, #12]
   21a00:	stm	r1, {r4, r7}
   21a04:	str	r4, [r1, #8]
   21a08:	ldr	r2, [sl, r6, lsl #2]
   21a0c:	str	r2, [r1, #16]
   21a10:	str	r1, [sl, r6, lsl #2]
   21a14:	ldr	r6, [sp, #28]
   21a18:	ldr	r3, [sp, #20]
   21a1c:	str	r0, [r6]
   21a20:	ldr	ip, [ip, #16]
   21a24:	cmp	ip, #0
   21a28:	bne	21dc8 <opt_loop+0x2200>
   21a2c:	b	20b58 <opt_loop+0xf90>
   21a30:	sub	r0, r0, #32
   21a34:	mov	r2, #0
   21a38:	lsr	r0, r0, #4
   21a3c:	cmp	r0, #6
   21a40:	bhi	22530 <opt_loop+0x2968>
   21a44:	mov	r1, #59	; 0x3b
   21a48:	mov	r6, #1
   21a4c:	tst	r1, r6, lsl r0
   21a50:	beq	21d70 <opt_loop+0x21a8>
   21a54:	str	r2, [ip, #12]
   21a58:	str	r2, [ip]
   21a5c:	ldr	r0, [pc, #4072]	; 22a4c <opt_loop+0x2e84>
   21a60:	ldr	r0, [pc, r0]
   21a64:	ldr	r6, [sp, #28]
   21a68:	cmp	r0, #0
   21a6c:	beq	21aa0 <opt_loop+0x1ed8>
   21a70:	ldr	r1, [r0]
   21a74:	cmp	r1, #0
   21a78:	bne	21a94 <opt_loop+0x1ecc>
   21a7c:	ldr	r1, [r0, #4]
   21a80:	cmp	r1, #0
   21a84:	bne	21a94 <opt_loop+0x1ecc>
   21a88:	ldr	r1, [r0, #8]
   21a8c:	cmp	r1, #0
   21a90:	beq	21db4 <opt_loop+0x21ec>
   21a94:	ldr	r0, [r0, #16]
   21a98:	cmp	r0, #0
   21a9c:	bne	21a70 <opt_loop+0x1ea8>
   21aa0:	ldr	r0, [pc, #4008]	; 22a50 <opt_loop+0x2e88>
   21aa4:	mov	r5, r3
   21aa8:	mov	r4, #0
   21aac:	add	r0, pc, r0
   21ab0:	mov	r1, r0
   21ab4:	ldr	r0, [r0, #44]	; 0x2c
   21ab8:	add	r0, r0, #1
   21abc:	str	r0, [r1, #44]	; 0x2c
   21ac0:	ldr	r1, [pc, #3980]	; 22a54 <opt_loop+0x2e8c>
   21ac4:	ldr	r1, [pc, r1]
   21ac8:	add	r1, r1, r0, lsl #3
   21acc:	str	r2, [r1, #4]
   21ad0:	mov	r2, #1
   21ad4:	ldr	r1, [pc, #3964]	; 22a58 <opt_loop+0x2e90>
   21ad8:	ldr	r1, [pc, r1]
   21adc:	str	r2, [r1, r0, lsl #3]
   21ae0:	ldr	r1, [pc, #3956]	; 22a5c <opt_loop+0x2e94>
   21ae4:	ldr	r1, [pc, r1]
   21ae8:	ldr	r3, [pc, #3952]	; 22a60 <opt_loop+0x2e98>
   21aec:	add	r2, r1, #20
   21af0:	add	r3, pc, r3
   21af4:	str	r2, [r3]
   21af8:	str	r4, [r1]
   21afc:	str	r0, [r1, #12]
   21b00:	str	r4, [r1, #4]
   21b04:	str	r4, [r1, #8]
   21b08:	mov	r3, r5
   21b0c:	ldr	r2, [pc, #3920]	; 22a64 <opt_loop+0x2e9c>
   21b10:	ldr	r2, [pc, r2]
   21b14:	str	r2, [r1, #16]
   21b18:	str	r1, [sl]
   21b1c:	ldr	r1, [r6]
   21b20:	cmp	r1, r0
   21b24:	beq	21748 <opt_loop+0x1b80>
   21b28:	str	r0, [r6]
   21b2c:	ldr	ip, [ip, #16]
   21b30:	cmp	ip, #0
   21b34:	bne	21dc8 <opt_loop+0x2200>
   21b38:	b	20b58 <opt_loop+0xf90>
   21b3c:	mov	r5, r3
   21b40:	orr	r7, r0, r2
   21b44:	b	21bbc <opt_loop+0x1ff4>
   21b48:	mov	r5, r3
   21b4c:	mul	r7, r0, r2
   21b50:	b	21bbc <opt_loop+0x1ff4>
   21b54:	cmp	r0, #0
   21b58:	beq	232cc <opt_loop+0x3704>
   21b5c:	mov	r5, r3
   21b60:	udiv	r7, r2, r0
   21b64:	b	21bbc <opt_loop+0x1ff4>
   21b68:	mov	r5, r3
   21b6c:	lsr	r7, r2, r0
   21b70:	b	21bbc <opt_loop+0x1ff4>
   21b74:	mov	r5, r3
   21b78:	sub	r7, r2, r0
   21b7c:	b	21bbc <opt_loop+0x1ff4>
   21b80:	mov	r5, r3
   21b84:	and	r7, r0, r2
   21b88:	b	21bbc <opt_loop+0x1ff4>
   21b8c:	mov	r5, r3
   21b90:	lsl	r7, r2, r0
   21b94:	b	21bbc <opt_loop+0x1ff4>
   21b98:	.word	0x00025cf8
   21b9c:	.word	0x00025c64
   21ba0:	.word	0x00025d50
   21ba4:	.word	0x00025d40
   21ba8:	.word	0x00025d2c
   21bac:	.word	0x00025d20
   21bb0:	.word	0x000258b0
   21bb4:	mov	r5, r3
   21bb8:	rsb	r7, r2, #0
   21bbc:	mov	r1, #0
   21bc0:	str	r1, [ip]
   21bc4:	str	r7, [ip, #12]
   21bc8:	ldr	r0, [pc, #3736]	; 22a68 <opt_loop+0x2ea0>
   21bcc:	add	r0, pc, r0
   21bd0:	strb	r1, [r0]
   21bd4:	movw	r1, #8923	; 0x22db
   21bd8:	lsl	r0, r7, #4
   21bdc:	movt	r1, #39383	; 0x99d7
   21be0:	umull	r0, r1, r0, r1
   21be4:	lsr	r0, r1, #7
   21be8:	mov	r1, #213	; 0xd5
   21bec:	mul	r0, r0, r1
   21bf0:	rsb	r0, r0, r7, lsl #4
   21bf4:	ldr	r2, [sl, r0, lsl #2]
   21bf8:	cmp	r2, #0
   21bfc:	beq	21c2c <opt_loop+0x2064>
   21c00:	ldr	r1, [r2]
   21c04:	cmp	r1, #0
   21c08:	bne	21c20 <opt_loop+0x2058>
   21c0c:	ldr	r1, [r2, #4]
   21c10:	cmp	r1, r7
   21c14:	ldreq	r1, [r2, #8]
   21c18:	cmpeq	r1, #0
   21c1c:	beq	21ccc <opt_loop+0x2104>
   21c20:	ldr	r2, [r2, #16]
   21c24:	cmp	r2, #0
   21c28:	bne	21c00 <opt_loop+0x2038>
   21c2c:	ldr	r1, [pc, #3640]	; 22a6c <opt_loop+0x2ea4>
   21c30:	mov	r3, #1
   21c34:	add	r1, pc, r1
   21c38:	mov	r2, r1
   21c3c:	ldr	r1, [r1, #44]	; 0x2c
   21c40:	add	r1, r1, #1
   21c44:	str	r1, [r2, #44]	; 0x2c
   21c48:	ldr	r2, [pc, #3616]	; 22a70 <opt_loop+0x2ea8>
   21c4c:	ldr	r2, [pc, r2]
   21c50:	add	r2, r2, r1, lsl #3
   21c54:	str	r7, [r2, #4]
   21c58:	ldr	r2, [pc, #3604]	; 22a74 <opt_loop+0x2eac>
   21c5c:	ldr	r2, [pc, r2]
   21c60:	str	r3, [r2, r1, lsl #3]
   21c64:	ldr	r2, [pc, #3596]	; 22a78 <opt_loop+0x2eb0>
   21c68:	ldr	r2, [pc, r2]
   21c6c:	ldr	r3, [pc, #3592]	; 22a7c <opt_loop+0x2eb4>
   21c70:	add	r4, r2, #20
   21c74:	add	r3, pc, r3
   21c78:	str	r4, [r3]
   21c7c:	mov	r4, #0
   21c80:	str	r1, [r2, #12]
   21c84:	mov	r3, r5
   21c88:	stm	r2, {r4, r7}
   21c8c:	str	r4, [r2, #8]
   21c90:	ldr	r4, [sl, r0, lsl #2]
   21c94:	str	r4, [r2, #16]
   21c98:	str	r2, [sl, r0, lsl #2]
   21c9c:	str	r1, [r6]
   21ca0:	ldr	ip, [ip, #16]
   21ca4:	cmp	ip, #0
   21ca8:	bne	21dc8 <opt_loop+0x2200>
   21cac:	b	20b58 <opt_loop+0xf90>
   21cb0:	ldr	r2, [r2, #12]
   21cb4:	ubfx	r5, r5, #4, #4
   21cb8:	cmp	r5, #8
   21cbc:	bls	2220c <opt_loop+0x2644>
   21cc0:	b	232c8 <opt_loop+0x3700>
   21cc4:	ldr	r0, [r0, #12]
   21cc8:	b	21a14 <opt_loop+0x1e4c>
   21ccc:	ldr	r0, [r2, #12]
   21cd0:	str	r0, [r6]
   21cd4:	mov	r3, r5
   21cd8:	ldr	ip, [ip, #16]
   21cdc:	cmp	ip, #0
   21ce0:	bne	21dc8 <opt_loop+0x2200>
   21ce4:	b	20b58 <opt_loop+0xf90>
   21ce8:	ldr	r4, [r4, #12]
   21cec:	ldr	r1, [pc, #3468]	; 22a80 <opt_loop+0x2eb8>
   21cf0:	mov	r6, #0
   21cf4:	add	r1, pc, r1
   21cf8:	b	22500 <opt_loop+0x2938>
   21cfc:	ldr	r0, [r2, #12]
   21d00:	b	21a14 <opt_loop+0x1e4c>
   21d04:	ldr	r4, [r4, #12]
   21d08:	cmp	r3, #0
   21d0c:	bne	21380 <opt_loop+0x17b8>
   21d10:	b	2138c <opt_loop+0x17c4>
   21d14:	.word	0x00025b90
   21d18:	ldr	r6, [r6, #12]
   21d1c:	b	210f0 <opt_loop+0x1528>
   21d20:	ldr	r0, [r0, #12]
   21d24:	ldr	r6, [sp, #28]
   21d28:	cmp	r3, #0
   21d2c:	bne	21510 <opt_loop+0x1948>
   21d30:	b	2151c <opt_loop+0x1954>
   21d34:	.word	0x00025c78
   21d38:	ldr	r0, [r0, #12]
   21d3c:	ldr	r6, [sp, #28]
   21d40:	cmp	r3, #0
   21d44:	bne	21608 <opt_loop+0x1a40>
   21d48:	b	21614 <opt_loop+0x1a4c>
   21d4c:	.word	0x00025c68
   21d50:	.word	0x00025c54
   21d54:	.word	0x00025c48
   21d58:	ldr	r0, [r2, #12]
   21d5c:	str	r0, [r6]
   21d60:	ldr	ip, [ip, #16]
   21d64:	cmp	ip, #0
   21d68:	bne	21dc8 <opt_loop+0x2200>
   21d6c:	b	20b58 <opt_loop+0xf90>
   21d70:	cmp	r0, #6
   21d74:	bne	22530 <opt_loop+0x2968>
   21d78:	ldr	r6, [sp, #28]
   21d7c:	mvn	r0, #0
   21d80:	str	r0, [ip]
   21d84:	ldr	ip, [ip, #16]
   21d88:	cmp	ip, #0
   21d8c:	bne	21dc8 <opt_loop+0x2200>
   21d90:	b	20b58 <opt_loop+0xf90>
   21d94:	ldr	r0, [r4, #12]
   21d98:	str	r0, [r6]
   21d9c:	ldr	ip, [ip, #16]
   21da0:	cmp	ip, #0
   21da4:	bne	21dc8 <opt_loop+0x2200>
   21da8:	b	20b58 <opt_loop+0xf90>
   21dac:	ldr	r0, [r0, #12]
   21db0:	b	21cd0 <opt_loop+0x2108>
   21db4:	ldr	r0, [r0, #12]
   21db8:	ldr	r1, [r6]
   21dbc:	cmp	r1, r0
   21dc0:	beq	21748 <opt_loop+0x1b80>
   21dc4:	b	21b28 <opt_loop+0x1f60>
   21dc8:	ldr	r5, [ip]
   21dcc:	cmp	r5, #177	; 0xb1
   21dd0:	bhi	22630 <opt_loop+0x2a68>
   21dd4:	add	r0, pc, #84	; 0x54
   21dd8:	ldr	r2, [r0, r5, lsl #2]
   21ddc:	add	pc, r0, r2
   21de0:	.word	0x00025718
   21de4:	.word	0x00025a28
   21de8:	.word	0x00025b14
   21dec:	.word	0x00025b04
   21df0:	.word	0x00025af0
   21df4:	.word	0x00025ae4
   21df8:	.word	0x00025674
   21dfc:	.word	0x00025954
   21e00:	.word	0x00025a3c
   21e04:	.word	0x00025a2c
   21e08:	.word	0x00025a18
   21e0c:	.word	0x00025a0c
   21e10:	.word	0x000255a0
   21e14:	.word	0x000259a8
   21e18:	.word	0x0002588c
   21e1c:	.word	0x00025820
   21e20:	.word	0x000254a8
   21e24:	.word	0x00025900
   21e28:	.word	0x000258ec
   21e2c:	.word	0x000258e0
   21e30:	.word	0xfffff60c
   21e34:	.word	0xfffff704
   21e38:	.word	0xfffff570
   21e3c:	.word	0xfffff7f8
   21e40:	.word	0x000002dc
   21e44:	.word	0x00000800
   21e48:	.word	0x00000800
   21e4c:	.word	0xfffff46c
   21e50:	.word	0x00000800
   21e54:	.word	0x00000800
   21e58:	.word	0x00000800
   21e5c:	.word	0x00000800
   21e60:	.word	0x00000434
   21e64:	.word	0x00000800
   21e68:	.word	0x00000800
   21e6c:	.word	0x00000800
   21e70:	.word	0x00000800
   21e74:	.word	0x00000800
   21e78:	.word	0x00000800
   21e7c:	.word	0x00000800
   21e80:	.word	0x000002dc
   21e84:	.word	0x00000800
   21e88:	.word	0x00000800
   21e8c:	.word	0x00000800
   21e90:	.word	0x00000800
   21e94:	.word	0x00000800
   21e98:	.word	0x00000800
   21e9c:	.word	0x00000800
   21ea0:	.word	0x00000434
   21ea4:	.word	0x00000800
   21ea8:	.word	0x00000800
   21eac:	.word	0x00000800
   21eb0:	.word	0x000004d4
   21eb4:	.word	0x00000800
   21eb8:	.word	0x00000800
   21ebc:	.word	0x00000800
   21ec0:	.word	0x000002dc
   21ec4:	.word	0x00000800
   21ec8:	.word	0x00000800
   21ecc:	.word	0x00000800
   21ed0:	.word	0x000004d4
   21ed4:	.word	0x00000800
   21ed8:	.word	0x00000800
   21edc:	.word	0x00000800
   21ee0:	.word	0x00000434
   21ee4:	.word	0x00000800
   21ee8:	.word	0x00000800
   21eec:	.word	0x00000800
   21ef0:	.word	0x000004d4
   21ef4:	.word	0x00000800
   21ef8:	.word	0x00000800
   21efc:	.word	0x00000800
   21f00:	.word	0x000002dc
   21f04:	.word	0x00000800
   21f08:	.word	0x00000800
   21f0c:	.word	0x00000800
   21f10:	.word	0x00000800
   21f14:	.word	0x00000800
   21f18:	.word	0x00000800
   21f1c:	.word	0x00000800
   21f20:	.word	0x00000434
   21f24:	.word	0x00000800
   21f28:	.word	0x00000800
   21f2c:	.word	0x00000800
   21f30:	.word	0x000005e8
   21f34:	.word	0x00000800
   21f38:	.word	0x00000800
   21f3c:	.word	0x00000800
   21f40:	.word	0x000002dc
   21f44:	.word	0x00000800
   21f48:	.word	0x00000800
   21f4c:	.word	0x00000800
   21f50:	.word	0x000005e8
   21f54:	.word	0x00000800
   21f58:	.word	0x00000800
   21f5c:	.word	0x00000800
   21f60:	.word	0x00000434
   21f64:	.word	0x00000800
   21f68:	.word	0x00000800
   21f6c:	.word	0x00000800
   21f70:	.word	0x000005e8
   21f74:	.word	0x00000800
   21f78:	.word	0x00000800
   21f7c:	.word	0x00000800
   21f80:	.word	0x000002dc
   21f84:	.word	0x00000800
   21f88:	.word	0x00000800
   21f8c:	.word	0x00000800
   21f90:	.word	0x00000800
   21f94:	.word	0x00000800
   21f98:	.word	0x00000800
   21f9c:	.word	0x00000800
   21fa0:	.word	0x00000434
   21fa4:	.word	0x00000800
   21fa8:	.word	0x00000800
   21fac:	.word	0x00000800
   21fb0:	.word	0xfffff598
   21fb4:	.word	0xfffff824
   21fb8:	.word	0x00000800
   21fbc:	.word	0x00000800
   21fc0:	.word	0x000002dc
   21fc4:	.word	0x00000800
   21fc8:	.word	0x00000800
   21fcc:	.word	0x00000800
   21fd0:	.word	0x00000800
   21fd4:	.word	0x00000800
   21fd8:	.word	0x00000800
   21fdc:	.word	0x00000800
   21fe0:	.word	0x00000434
   21fe4:	.word	0x00000800
   21fe8:	.word	0x00000800
   21fec:	.word	0x00000800
   21ff0:	.word	0x00000800
   21ff4:	.word	0x00000800
   21ff8:	.word	0x00000800
   21ffc:	.word	0x00000800
   22000:	.word	0x000002dc
   22004:	.word	0x00000800
   22008:	.word	0x00000800
   2200c:	.word	0x00000800
   22010:	.word	0x00000800
   22014:	.word	0x00000800
   22018:	.word	0x00000800
   2201c:	.word	0x00000800
   22020:	.word	0x00000434
   22024:	.word	0x00000800
   22028:	.word	0x00000800
   2202c:	.word	0x00000800
   22030:	.word	0xfffff8c4
   22034:	.word	0x00000800
   22038:	.word	0x00000800
   2203c:	.word	0x00000800
   22040:	.word	0xfffff37c
   22044:	.word	0x00000800
   22048:	.word	0x00000800
   2204c:	.word	0xfffff898
   22050:	.word	0x00000800
   22054:	.word	0x00000800
   22058:	.word	0x00000800
   2205c:	.word	0x00000800
   22060:	.word	0x00000800
   22064:	.word	0x00000800
   22068:	.word	0x00000800
   2206c:	.word	0x00000800
   22070:	.word	0x00000800
   22074:	.word	0x00000800
   22078:	.word	0x00000800
   2207c:	.word	0x00000800
   22080:	.word	0x00000800
   22084:	.word	0x00000800
   22088:	.word	0x00000800
   2208c:	.word	0x00000800
   22090:	.word	0x00000800
   22094:	.word	0x00000800
   22098:	.word	0x00000800
   2209c:	.word	0x00000800
   220a0:	.word	0x00000800
   220a4:	.word	0x00000800
   220a8:	.word	0x00000800
   220ac:	.word	0x00000800
   220b0:	.word	0x00000800
   220b4:	.word	0x00000800
   220b8:	.word	0x00000800
   220bc:	.word	0x00000800
   220c0:	.word	0x00000800
   220c4:	.word	0x00000800
   220c8:	.word	0x00000800
   220cc:	.word	0x00000800
   220d0:	.word	0x00000800
   220d4:	.word	0x00000800
   220d8:	.word	0x00000800
   220dc:	.word	0x00000800
   220e0:	.word	0x00000800
   220e4:	.word	0x00000800
   220e8:	.word	0x00000800
   220ec:	.word	0x00000800
   220f0:	.word	0x00000800
   220f4:	.word	0xfffff49c
   220f8:	.word	0x00025860
   220fc:	.word	0x00025854
   22100:	.word	0x00025748
   22104:	.word	0x000257f8
   22108:	.word	0x000257d0
   2210c:	cmp	r3, #0
   22110:	beq	20be4 <opt_loop+0x101c>
   22114:	ldr	r7, [ip, #12]
   22118:	cmp	r7, #0
   2211c:	beq	20dfc <opt_loop+0x1234>
   22120:	ldr	r4, [r6]
   22124:	ldr	r6, [pc, #4008]	; 230d4 <opt_loop+0x350c>
   22128:	ldr	r6, [pc, r6]
   2212c:	ldr	r0, [r6, r4, lsl #3]
   22130:	cmp	r0, #0
   22134:	beq	20bec <opt_loop+0x1024>
   22138:	movw	r1, #8923	; 0x22db
   2213c:	lsl	r0, r7, #4
   22140:	movt	r1, #39383	; 0x99d7
   22144:	umull	r0, r2, r0, r1
   22148:	mov	r1, #213	; 0xd5
   2214c:	lsr	r0, r2, #7
   22150:	mul	r0, r0, r1
   22154:	rsb	r0, r0, r7, lsl #4
   22158:	ldr	r2, [sl, r0, lsl #2]
   2215c:	cmp	r2, #0
   22160:	beq	22190 <opt_loop+0x25c8>
   22164:	ldr	r1, [r2]
   22168:	cmp	r1, #0
   2216c:	bne	22184 <opt_loop+0x25bc>
   22170:	ldr	r1, [r2, #4]
   22174:	cmp	r1, r7
   22178:	ldreq	r1, [r2, #8]
   2217c:	cmpeq	r1, #0
   22180:	beq	21cb0 <opt_loop+0x20e8>
   22184:	ldr	r2, [r2, #16]
   22188:	cmp	r2, #0
   2218c:	bne	22164 <opt_loop+0x259c>
   22190:	ldr	r1, [pc, #3904]	; 230d8 <opt_loop+0x3510>
   22194:	mov	r3, #1
   22198:	add	r1, pc, r1
   2219c:	mov	r5, r1
   221a0:	ldr	r1, [r1, #44]	; 0x2c
   221a4:	add	r2, r1, #1
   221a8:	add	r1, r6, r2, lsl #3
   221ac:	str	r2, [r5, #44]	; 0x2c
   221b0:	str	r7, [r1, #4]
   221b4:	ldr	r1, [pc, #3872]	; 230dc <opt_loop+0x3514>
   221b8:	ldr	r1, [pc, r1]
   221bc:	str	r3, [r1, r2, lsl #3]
   221c0:	ldr	r1, [pc, #3864]	; 230e0 <opt_loop+0x3518>
   221c4:	ldr	r1, [pc, r1]
   221c8:	ldr	r3, [pc, #3860]	; 230e4 <opt_loop+0x351c>
   221cc:	add	r5, r1, #20
   221d0:	add	r3, pc, r3
   221d4:	str	r5, [r3]
   221d8:	mov	r5, #0
   221dc:	str	r2, [r1, #12]
   221e0:	stm	r1, {r5, r7}
   221e4:	str	r5, [r1, #8]
   221e8:	ldr	r5, [sl, r0, lsl #2]
   221ec:	str	r5, [r1, #16]
   221f0:	str	r1, [sl, r0, lsl #2]
   221f4:	ldr	r5, [ip]
   221f8:	ldr	r6, [pc, #4064]	; 231e0 <opt_loop+0x3618>
   221fc:	ldr	r6, [pc, r6]
   22200:	ubfx	r5, r5, #4, #4
   22204:	cmp	r5, #8
   22208:	bhi	232c8 <opt_loop+0x3700>
   2220c:	add	r0, r6, r2, lsl #3
   22210:	add	r1, r6, r4, lsl #3
   22214:	ldr	r0, [r0, #4]
   22218:	ldr	r2, [r1, #4]
   2221c:	add	r1, pc, #4
   22220:	ldr	r4, [r1, r5, lsl #2]
   22224:	add	pc, r1, r4
   22228:	.word	0x00000028
   2222c:	.word	0xfffff6dc
   22230:	.word	0xfffff6d4
   22234:	.word	0xfffff6e4
   22238:	.word	0xfffff6cc
   2223c:	.word	0xfffff6fc
   22240:	.word	0xfffff704
   22244:	.word	0xfffff6f4
   22248:	.word	0xfffff70c
   2224c:	.word	0x00025660
   22250:	add	r7, r0, r2
   22254:	b	21938 <opt_loop+0x1d70>
   22258:	.word	0x00025748
   2225c:	.word	0x00025734
   22260:	.word	0x00025728
   22264:	cmp	r3, #0
   22268:	beq	22528 <opt_loop+0x2960>
   2226c:	ldr	r7, [r6]
   22270:	ldr	r2, [pc, #4092]	; 23274 <opt_loop+0x36ac>
   22274:	and	r0, r5, #240	; 0xf0
   22278:	ldr	r2, [pc, r2]
   2227c:	ldr	r4, [lr]
   22280:	ldr	r1, [r2, r4, lsl #3]
   22284:	ldr	r6, [r2, r7, lsl #3]
   22288:	cmp	r1, #0
   2228c:	beq	20da4 <opt_loop+0x11dc>
   22290:	cmp	r6, #0
   22294:	beq	20ff8 <opt_loop+0x1430>
   22298:	ubfx	r5, r5, #4, #4
   2229c:	cmp	r5, #8
   222a0:	bhi	232c8 <opt_loop+0x3700>
   222a4:	add	r0, r2, r4, lsl #3
   222a8:	add	r1, r2, r7, lsl #3
   222ac:	ldr	r0, [r0, #4]
   222b0:	ldr	r2, [r1, #4]
   222b4:	add	r1, pc, #8
   222b8:	ldr	r6, [sp, #28]
   222bc:	ldr	r4, [r1, r5, lsl #2]
   222c0:	add	pc, r1, r4
   222c4:	.word	0x00000024
   222c8:	.word	0xfffff8b0
   222cc:	.word	0xfffff884
   222d0:	.word	0xfffff890
   222d4:	.word	0xfffff878
   222d8:	.word	0xfffff8bc
   222dc:	.word	0xfffff8c8
   222e0:	.word	0xfffff8a4
   222e4:	.word	0xfffff8f0
   222e8:	mov	r5, r3
   222ec:	add	r7, r0, r2
   222f0:	b	21bbc <opt_loop+0x1ff4>
   222f4:	.word	0x00025680
   222f8:	.word	0x00025674
   222fc:	.word	0x00025568
   22300:	.word	0x000255d4
   22304:	ldr	r7, [ip, #12]
   22308:	movw	r1, #8923	; 0x22db
   2230c:	movt	r1, #39383	; 0x99d7
   22310:	eor	r0, r5, r7, lsl #4
   22314:	umull	r2, r4, r0, r1
   22318:	mov	r1, #213	; 0xd5
   2231c:	lsr	r2, r4, #7
   22320:	mls	r6, r2, r1, r0
   22324:	ldr	r0, [sl, r6, lsl #2]
   22328:	cmp	r0, #0
   2232c:	beq	2235c <opt_loop+0x2794>
   22330:	ldr	r2, [r0]
   22334:	cmp	r2, r5
   22338:	bne	22350 <opt_loop+0x2788>
   2233c:	ldr	r2, [r0, #4]
   22340:	cmp	r2, r7
   22344:	ldreq	r2, [r0, #8]
   22348:	cmpeq	r2, #0
   2234c:	beq	218c8 <opt_loop+0x1d00>
   22350:	ldr	r0, [r0, #16]
   22354:	cmp	r0, #0
   22358:	bne	22330 <opt_loop+0x2768>
   2235c:	ldr	r0, [pc, #3956]	; 232d8 <opt_loop+0x3710>
   22360:	tst	r5, #230	; 0xe6
   22364:	add	r0, pc, r0
   22368:	mov	r1, r0
   2236c:	ldr	r0, [r0, #44]	; 0x2c
   22370:	add	r0, r0, #1
   22374:	str	r0, [r1, #44]	; 0x2c
   22378:	bne	2239c <opt_loop+0x27d4>
   2237c:	ldr	r2, [pc, #3928]	; 232dc <opt_loop+0x3714>
   22380:	mov	r1, #1
   22384:	ldr	r2, [pc, r2]
   22388:	add	r2, r2, r0, lsl #3
   2238c:	str	r7, [r2, #4]
   22390:	ldr	r2, [pc, #3912]	; 232e0 <opt_loop+0x3718>
   22394:	ldr	r2, [pc, r2]
   22398:	str	r1, [r2, r0, lsl #3]
   2239c:	ldr	r2, [pc, #3904]	; 232e4 <opt_loop+0x371c>
   223a0:	ldr	r2, [pc, r2]
   223a4:	ldr	r1, [pc, #3900]	; 232e8 <opt_loop+0x3720>
   223a8:	add	r4, r2, #20
   223ac:	add	r1, pc, r1
   223b0:	str	r4, [r1]
   223b4:	mov	r1, #0
   223b8:	str	r0, [r2, #12]
   223bc:	stm	r2, {r5, r7}
   223c0:	str	r1, [r2, #8]
   223c4:	ldr	r4, [sl, r6, lsl #2]
   223c8:	str	r4, [r2, #16]
   223cc:	str	r2, [sl, r6, lsl #2]
   223d0:	ldr	r6, [sp, #28]
   223d4:	cmp	r3, #0
   223d8:	beq	223e8 <opt_loop+0x2820>
   223dc:	ldr	r2, [r6]
   223e0:	cmp	r2, r0
   223e4:	beq	21748 <opt_loop+0x1b80>
   223e8:	str	r0, [r6]
   223ec:	ldr	ip, [ip, #16]
   223f0:	cmp	ip, #0
   223f4:	bne	21dc8 <opt_loop+0x2200>
   223f8:	b	20b58 <opt_loop+0xf90>
   223fc:	.word	0x000255b8
   22400:	.word	0x0002549c
   22404:	.word	0x00025410
   22408:	.word	0x000254fc
   2240c:	.word	0x000254ec
   22410:	.word	0x000254d8
   22414:	.word	0x000254cc
   22418:	ldr	r7, [lr]
   2241c:	cmp	r3, #0
   22420:	beq	20ef4 <opt_loop+0x132c>
   22424:	ldr	r0, [pc, #3776]	; 232ec <opt_loop+0x3724>
   22428:	ldr	r0, [pc, r0]
   2242c:	ldr	r0, [r0, r7, lsl #3]
   22430:	cmp	r0, #0
   22434:	beq	20ef4 <opt_loop+0x132c>
   22438:	and	r0, r5, #24
   2243c:	movw	r1, #8923	; 0x22db
   22440:	orr	r6, r0, #32
   22444:	movt	r1, #39383	; 0x99d7
   22448:	str	r6, [ip]
   2244c:	ldr	r0, [pc, #3740]	; 232f0 <opt_loop+0x3728>
   22450:	ldr	r0, [pc, r0]
   22454:	ldr	r2, [ip, #12]
   22458:	add	r0, r0, r7, lsl #3
   2245c:	ldr	r0, [r0, #4]
   22460:	add	r0, r2, r0
   22464:	eor	r2, r6, r0, lsl #4
   22468:	str	r0, [ip, #12]
   2246c:	umull	r4, r5, r2, r1
   22470:	mov	r1, #213	; 0xd5
   22474:	lsr	r4, r5, #7
   22478:	mls	r2, r4, r1, r2
   2247c:	ldr	r4, [sl, r2, lsl #2]
   22480:	cmp	r4, #0
   22484:	beq	224b4 <opt_loop+0x28ec>
   22488:	ldr	r5, [r4]
   2248c:	cmp	r5, r6
   22490:	bne	224a8 <opt_loop+0x28e0>
   22494:	ldr	r5, [r4, #4]
   22498:	cmp	r5, r0
   2249c:	ldreq	r5, [r4, #8]
   224a0:	cmpeq	r5, #0
   224a4:	beq	21ce8 <opt_loop+0x2120>
   224a8:	ldr	r4, [r4, #16]
   224ac:	cmp	r4, #0
   224b0:	bne	22488 <opt_loop+0x28c0>
   224b4:	ldr	r5, [pc, #3640]	; 232f4 <opt_loop+0x372c>
   224b8:	ldr	r5, [pc, r5]
   224bc:	ldr	r1, [pc, #3636]	; 232f8 <opt_loop+0x3730>
   224c0:	add	r4, r5, #20
   224c4:	add	r1, pc, r1
   224c8:	str	r4, [r1]
   224cc:	ldr	r1, [pc, #3624]	; 232fc <opt_loop+0x3734>
   224d0:	add	r1, pc, r1
   224d4:	ldr	r4, [r1, #44]	; 0x2c
   224d8:	add	r4, r4, #1
   224dc:	str	r4, [r1, #44]	; 0x2c
   224e0:	str	r6, [r5]
   224e4:	mov	r6, #0
   224e8:	str	r4, [r5, #12]
   224ec:	str	r0, [r5, #4]
   224f0:	str	r6, [r5, #8]
   224f4:	ldr	r0, [sl, r2, lsl #2]
   224f8:	str	r0, [r5, #16]
   224fc:	str	r5, [sl, r2, lsl #2]
   22500:	strb	r6, [r1]
   22504:	ldr	r6, [sp, #28]
   22508:	ldr	r0, [r6]
   2250c:	cmp	r0, r4
   22510:	beq	21748 <opt_loop+0x1b80>
   22514:	str	r4, [r6]
   22518:	ldr	ip, [ip, #16]
   2251c:	cmp	ip, #0
   22520:	bne	21dc8 <opt_loop+0x2200>
   22524:	b	20b58 <opt_loop+0xf90>
   22528:	ldr	r4, [lr]
   2252c:	ldr	r7, [r6]
   22530:	eor	r0, r5, r4, lsl #8
   22534:	movw	r1, #8923	; 0x22db
   22538:	eor	r0, r0, r7, lsl #4
   2253c:	movt	r1, #39383	; 0x99d7
   22540:	umull	r1, r2, r0, r1
   22544:	lsr	r1, r2, #7
   22548:	mov	r2, #213	; 0xd5
   2254c:	mls	r6, r1, r2, r0
   22550:	ldr	r0, [sl, r6, lsl #2]
   22554:	cmp	r0, #0
   22558:	beq	225a4 <opt_loop+0x29dc>
   2255c:	ldr	r1, [r0]
   22560:	cmp	r1, r5
   22564:	ldreq	r1, [r0, #4]
   22568:	cmpeq	r1, r7
   2256c:	beq	22580 <opt_loop+0x29b8>
   22570:	ldr	r0, [r0, #16]
   22574:	cmp	r0, #0
   22578:	bne	2255c <opt_loop+0x2994>
   2257c:	b	225a4 <opt_loop+0x29dc>
   22580:	ldr	r1, [r0, #8]
   22584:	cmp	r1, r4
   22588:	bne	22570 <opt_loop+0x29a8>
   2258c:	b	21764 <opt_loop+0x1b9c>
   22590:	.word	0x00025318
   22594:	.word	0x00025404
   22598:	.word	0x000253f4
   2259c:	.word	0x000253e0
   225a0:	.word	0x000253d4
   225a4:	ldr	r0, [pc, #3412]	; 23300 <opt_loop+0x3738>
   225a8:	mov	lr, sl
   225ac:	mov	sl, r3
   225b0:	tst	r5, #230	; 0xe6
   225b4:	add	r0, pc, r0
   225b8:	mov	r1, r0
   225bc:	ldr	r0, [r0, #44]	; 0x2c
   225c0:	add	r0, r0, #1
   225c4:	str	r0, [r1, #44]	; 0x2c
   225c8:	bne	225ec <opt_loop+0x2a24>
   225cc:	ldr	r1, [pc, #3376]	; 23304 <opt_loop+0x373c>
   225d0:	mov	r2, #1
   225d4:	ldr	r1, [pc, r1]
   225d8:	add	r1, r1, r0, lsl #3
   225dc:	str	r7, [r1, #4]
   225e0:	ldr	r1, [pc, #3360]	; 23308 <opt_loop+0x3740>
   225e4:	ldr	r1, [pc, r1]
   225e8:	str	r2, [r1, r0, lsl #3]
   225ec:	ldr	r1, [pc, #3352]	; 2330c <opt_loop+0x3744>
   225f0:	ldr	r1, [pc, r1]
   225f4:	ldr	r3, [pc, #3348]	; 23310 <opt_loop+0x3748>
   225f8:	add	r2, r1, #20
   225fc:	add	r3, pc, r3
   22600:	str	r2, [r3]
   22604:	str	r0, [r1, #12]
   22608:	stm	r1, {r5, r7}
   2260c:	str	r4, [r1, #8]
   22610:	mov	r3, sl
   22614:	mov	sl, lr
   22618:	ldr	r2, [lr, r6, lsl #2]
   2261c:	str	r2, [r1, #16]
   22620:	str	r1, [lr, r6, lsl #2]
   22624:	ldr	r6, [sp, #28]
   22628:	ldr	lr, [sp, #24]
   2262c:	str	r0, [r6]
   22630:	ldr	ip, [ip, #16]
   22634:	cmp	ip, #0
   22638:	bne	21dc8 <opt_loop+0x2200>
   2263c:	b	20b58 <opt_loop+0xf90>
   22640:	.word	0x00025348
   22644:	ldr	r1, [r9, #4]
   22648:	cmp	r1, #0
   2264c:	beq	22898 <opt_loop+0x2cd0>
   22650:	ldr	r8, [pc, #3264]	; 23318 <opt_loop+0x3750>
   22654:	add	r5, r9, #128	; 0x80
   22658:	add	r4, sp, #32
   2265c:	str	r5, [sp, #16]
   22660:	add	r8, pc, r8
   22664:	mov	r3, r1
   22668:	mov	r2, r1
   2266c:	ldr	r0, [r2]
   22670:	ldr	r1, [r2, #16]
   22674:	cmn	r0, #1
   22678:	bne	22698 <opt_loop+0x2ad0>
   2267c:	cmp	r1, #0
   22680:	mov	r2, r1
   22684:	bne	2266c <opt_loop+0x2aa4>
   22688:	b	22820 <opt_loop+0x2c58>
   2268c:	.word	0x00025328
   22690:	.word	0x0002520c
   22694:	ldr	r1, [r1, #16]
   22698:	cmp	r1, #0
   2269c:	beq	22820 <opt_loop+0x2c58>
   226a0:	ldr	r7, [r1]
   226a4:	cmn	r7, #1
   226a8:	beq	22694 <opt_loop+0x2acc>
   226ac:	cmp	r0, #2
   226b0:	bne	226e0 <opt_loop+0x2b18>
   226b4:	cmp	r7, #97	; 0x61
   226b8:	bne	226e8 <opt_loop+0x2b20>
   226bc:	ldr	r0, [r1, #12]
   226c0:	ldr	r3, [r2, #12]
   226c4:	cmp	r3, r0
   226c8:	bne	226e8 <opt_loop+0x2b20>
   226cc:	mov	r0, #0
   226d0:	mov	r7, #7
   226d4:	strb	r0, [r8]
   226d8:	str	r7, [r1]
   226dc:	ldr	r0, [r2]
   226e0:	cmp	r0, #0
   226e4:	beq	226f4 <opt_loop+0x2b2c>
   226e8:	cmp	r1, #0
   226ec:	bne	22664 <opt_loop+0x2a9c>
   226f0:	b	2281c <opt_loop+0x2c54>
   226f4:	cmp	r7, #7
   226f8:	bne	22720 <opt_loop+0x2b58>
   226fc:	mov	r0, #1
   22700:	str	r0, [r2]
   22704:	mov	r0, #135	; 0x87
   22708:	str	r0, [r1]
   2270c:	mov	r0, #0
   22710:	strb	r0, [r8]
   22714:	ldr	r0, [r2]
   22718:	cmp	r0, #0
   2271c:	bne	226e8 <opt_loop+0x2b20>
   22720:	ldrb	r0, [r5, #2]
   22724:	tst	r0, #2
   22728:	bne	226e8 <opt_loop+0x2b20>
   2272c:	ldr	r0, [r1]
   22730:	mov	r3, r1
   22734:	cmp	r0, #177	; 0xb1
   22738:	bne	2276c <opt_loop+0x2ba4>
   2273c:	ldr	r3, [r1, #16]
   22740:	cmp	r3, #0
   22744:	beq	226e8 <opt_loop+0x2b20>
   22748:	ldr	r0, [r3]
   2274c:	cmn	r0, #1
   22750:	bne	2276c <opt_loop+0x2ba4>
   22754:	ldr	r3, [r3, #16]
   22758:	cmp	r3, #0
   2275c:	bne	22748 <opt_loop+0x2b80>
   22760:	b	226e8 <opt_loop+0x2b20>
   22764:	.word	0x00025228
   22768:	.word	0x0002521c
   2276c:	cmp	r0, #12
   22770:	bne	226e8 <opt_loop+0x2b20>
   22774:	ldr	r7, [r3, #16]
   22778:	cmp	r7, #0
   2277c:	beq	226e8 <opt_loop+0x2b20>
   22780:	ldr	r0, [r7]
   22784:	cmn	r0, #1
   22788:	bne	227a0 <opt_loop+0x2bd8>
   2278c:	ldr	r7, [r7, #16]
   22790:	cmp	r7, #0
   22794:	bne	22780 <opt_loop+0x2bb8>
   22798:	b	226e8 <opt_loop+0x2b20>
   2279c:	.word	0x00025110
   227a0:	cmp	r0, #7
   227a4:	bne	226e8 <opt_loop+0x2b20>
   227a8:	ldr	r0, [r7, #16]
   227ac:	cmp	r0, #0
   227b0:	beq	226e8 <opt_loop+0x2b20>
   227b4:	ldr	r6, [r0]
   227b8:	cmn	r6, #1
   227bc:	bne	227dc <opt_loop+0x2c14>
   227c0:	ldr	r0, [r0, #16]
   227c4:	cmp	r0, #0
   227c8:	bne	227b4 <opt_loop+0x2bec>
   227cc:	b	226e8 <opt_loop+0x2b20>
   227d0:	.word	0x00025140
   227d4:	.word	0x00025134
   227d8:	.word	0x00025028
   227dc:	and	r6, r6, #231	; 0xe7
   227e0:	cmp	r6, #64	; 0x40
   227e4:	bne	226e8 <opt_loop+0x2b20>
   227e8:	ldr	r6, [r2, #12]
   227ec:	ldr	r5, [r0, #12]
   227f0:	add	r6, r5, r6
   227f4:	ldr	r5, [sp, #16]
   227f8:	str	r6, [r0, #12]
   227fc:	mvn	r0, #0
   22800:	str	r0, [r2]
   22804:	str	r0, [r3]
   22808:	str	r0, [r7]
   2280c:	mov	r0, #0
   22810:	strb	r0, [r8]
   22814:	cmp	r1, #0
   22818:	bne	22664 <opt_loop+0x2a9c>
   2281c:	mov	r3, #0
   22820:	ldr	r1, [r9, #8]
   22824:	mov	r2, #0
   22828:	cmp	r1, #21
   2282c:	bne	22950 <opt_loop+0x2d88>
   22830:	ldrb	r0, [r5, #2]
   22834:	tst	r0, #1
   22838:	bne	2294c <opt_loop+0x2d84>
   2283c:	ldr	r0, [r3]
   22840:	cmp	r0, #20
   22844:	beq	228dc <opt_loop+0x2d14>
   22848:	cmp	r0, #84	; 0x54
   2284c:	beq	228fc <opt_loop+0x2d34>
   22850:	cmp	r0, #28
   22854:	bne	2294c <opt_loop+0x2d84>
   22858:	ldr	r0, [lr]
   2285c:	ldr	r1, [pc, #2744]	; 2331c <opt_loop+0x3754>
   22860:	ldr	r1, [pc, r1]
   22864:	ldr	r2, [r1, r0, lsl #3]
   22868:	cmp	r2, #0
   2286c:	beq	2293c <opt_loop+0x2d74>
   22870:	add	r0, r1, r0, lsl #3
   22874:	ldr	r1, [r9, #20]
   22878:	ldr	r0, [r0, #4]
   2287c:	add	r0, r1, r0
   22880:	str	r0, [r9, #20]
   22884:	mvn	r0, #0
   22888:	str	r0, [r3]
   2288c:	mov	r0, #0
   22890:	strb	r0, [r8]
   22894:	b	2294c <opt_loop+0x2d84>
   22898:	add	r4, sp, #32
   2289c:	mov	r1, #68	; 0x44
   228a0:	add	r5, r9, #128	; 0x80
   228a4:	mov	r0, r4
   228a8:	vst1.64	{d8-d9}, [r0], r1
   228ac:	mov	r1, #0
   228b0:	str	r1, [r0]
   228b4:	add	r0, r4, #48	; 0x30
   228b8:	str	r1, [sp, #96]	; 0x60
   228bc:	vst1.64	{d8-d9}, [r0]
   228c0:	add	r0, r4, #32
   228c4:	vst1.64	{d8-d9}, [r0]
   228c8:	add	r0, r4, #16
   228cc:	vst1.64	{d8-d9}, [r0]
   228d0:	ldr	r8, [pc, #2620]	; 23314 <opt_loop+0x374c>
   228d4:	add	r8, pc, r8
   228d8:	b	22b18 <opt_loop+0x2f50>
   228dc:	mvn	r0, #0
   228e0:	str	r0, [r3]
   228e4:	ldr	r0, [r3, #12]
   228e8:	ldr	r1, [r9, #20]
   228ec:	add	r0, r1, r0
   228f0:	str	r0, [r9, #20]
   228f4:	strb	r2, [r8]
   228f8:	b	2294c <opt_loop+0x2d84>
   228fc:	ldr	r0, [r9, #20]
   22900:	cmp	r0, #0
   22904:	bne	2294c <opt_loop+0x2d84>
   22908:	ldr	r0, [r3, #12]
   2290c:	mov	r1, #69	; 0x45
   22910:	str	r1, [r9, #8]
   22914:	str	r0, [r9, #20]
   22918:	mvn	r0, #0
   2291c:	str	r0, [r3]
   22920:	strb	r2, [r8]
   22924:	ldr	r0, [r9, #60]	; 0x3c
   22928:	ldr	r1, [r9, #84]	; 0x54
   2292c:	str	r1, [r9, #60]	; 0x3c
   22930:	str	r0, [r9, #84]	; 0x54
   22934:	b	2294c <opt_loop+0x2d84>
   22938:	.word	0x00024f64
   2293c:	ldr	r0, [r9, #20]
   22940:	cmp	r0, #0
   22944:	mov	r0, #0
   22948:	beq	20914 <opt_loop+0xd4c>
   2294c:	ldr	r1, [r9, #8]
   22950:	cmp	r1, #69	; 0x45
   22954:	bne	22994 <opt_loop+0x2dcc>
   22958:	ldr	r0, [r9, #20]
   2295c:	mov	r1, #69	; 0x45
   22960:	cmn	r0, #1
   22964:	beq	2298c <opt_loop+0x2dc4>
   22968:	cmp	r0, #0
   2296c:	ldreq	r0, [r9, #84]	; 0x54
   22970:	streq	r0, [r9, #60]	; 0x3c
   22974:	b	22994 <opt_loop+0x2dcc>
   22978:	.word	0x00024ef8
   2297c:	.word	0x00024fe8
   22980:	.word	0x00024fd8
   22984:	.word	0x00024fc4
   22988:	.word	0x00024fb8
   2298c:	ldr	r0, [r9, #60]	; 0x3c
   22990:	str	r0, [r9, #84]	; 0x54
   22994:	ldr	r0, [pc, #2436]	; 23320 <opt_loop+0x3758>
   22998:	tst	r1, #8
   2299c:	mov	r6, #0
   229a0:	ldr	r0, [pc, r0]
   229a4:	ldrne	r2, [lr]
   229a8:	ldrne	r3, [r0, r2, lsl #3]
   229ac:	cmpne	r3, #0
   229b0:	addne	r2, r0, r2, lsl #3
   229b4:	bicne	r1, r1, #8
   229b8:	ldrne	r2, [r2, #4]
   229bc:	strne	r1, [r9, #8]
   229c0:	strne	r2, [r9, #20]
   229c4:	tst	r1, #8
   229c8:	bne	22abc <opt_loop+0x2ef4>
   229cc:	ldr	r2, [sp, #28]
   229d0:	ldr	r2, [r2]
   229d4:	ldr	r3, [r0, r2, lsl #3]
   229d8:	cmp	r3, #0
   229dc:	beq	22abc <opt_loop+0x2ef4>
   229e0:	and	r1, r1, #240	; 0xf0
   229e4:	sub	r1, r1, #16
   229e8:	lsr	r1, r1, #4
   229ec:	cmp	r1, #3
   229f0:	bhi	232c8 <opt_loop+0x3700>
   229f4:	add	r0, r0, r2, lsl #3
   229f8:	ldr	r0, [r0, #4]
   229fc:	add	r2, pc, #4
   22a00:	ldr	r1, [r2, r1, lsl #2]
   22a04:	add	pc, r2, r1
   22a08:	.word	0x00000010
   22a0c:	.word	0x0000007c
   22a10:	.word	0x00000024
   22a14:	.word	0x00000038
   22a18:	ldr	r1, [r9, #20]
   22a1c:	sub	r0, r0, r1
   22a20:	clz	r0, r0
   22a24:	lsr	r0, r0, #5
   22a28:	b	22a94 <opt_loop+0x2ecc>
   22a2c:	ldr	r1, [r9, #20]
   22a30:	cmp	r0, r1
   22a34:	mov	r0, #0
   22a38:	movwcs	r0, #1
   22a3c:	b	22a94 <opt_loop+0x2ecc>
   22a40:	ldr	r1, [r9, #20]
   22a44:	and	r0, r1, r0
   22a48:	b	22a94 <opt_loop+0x2ecc>
   22a4c:	.word	0x00024af8
   22a50:	.word	0x00024e00
   22a54:	.word	0x00024ef0
   22a58:	.word	0x00024edc
   22a5c:	.word	0x00024ec8
   22a60:	.word	0x00024ebc
   22a64:	.word	0x00024a48
   22a68:	.word	0x00024ce0
   22a6c:	.word	0x00024c78
   22a70:	.word	0x00024d68
   22a74:	.word	0x00024d58
   22a78:	.word	0x00024d44
   22a7c:	.word	0x00024d38
   22a80:	.word	0x00024bb8
   22a84:	ldr	r1, [r9, #20]
   22a88:	cmp	r0, r1
   22a8c:	mov	r0, #0
   22a90:	movwhi	r0, #1
   22a94:	mov	r3, r9
   22a98:	ldr	r1, [r3, #60]!	; 0x3c
   22a9c:	mov	r2, r3
   22aa0:	ldr	r7, [r2, #24]!
   22aa4:	cmp	r7, r1
   22aa8:	strbne	r6, [r8]
   22aac:	cmp	r0, #0
   22ab0:	moveq	r2, r3
   22ab4:	moveq	r1, r7
   22ab8:	str	r1, [r2]
   22abc:	add	r0, r4, #48	; 0x30
   22ac0:	ldr	r5, [r9, #4]
   22ac4:	mov	r1, #68	; 0x44
   22ac8:	vst1.64	{d8-d9}, [r0]
   22acc:	add	r0, r4, #32
   22ad0:	vst1.64	{d8-d9}, [r0]
   22ad4:	add	r0, r4, #16
   22ad8:	vst1.64	{d8-d9}, [r0]
   22adc:	mov	r0, r4
   22ae0:	vst1.64	{d8-d9}, [r0], r1
   22ae4:	mov	r1, #0
   22ae8:	str	r1, [r0]
   22aec:	str	r1, [sp, #96]	; 0x60
   22af0:	cmp	r5, #0
   22af4:	beq	22b14 <opt_loop+0x2f4c>
   22af8:	mov	r0, r5
   22afc:	mov	r1, r4
   22b00:	bl	23b30 <deadstmt>
   22b04:	ldr	r5, [r5, #16]
   22b08:	add	r4, sp, #32
   22b0c:	cmp	r5, #0
   22b10:	bne	22af8 <opt_loop+0x2f30>
   22b14:	ldr	r5, [sp, #16]
   22b18:	add	r0, r9, #8
   22b1c:	mov	r1, r4
   22b20:	bl	23b30 <deadstmt>
   22b24:	ldr	r0, [sp, #32]
   22b28:	mov	r2, #0
   22b2c:	cmp	r0, #0
   22b30:	beq	22b48 <opt_loop+0x2f80>
   22b34:	ldrb	r1, [r5]
   22b38:	tst	r1, #1
   22b3c:	mvneq	r1, #0
   22b40:	streq	r1, [r0]
   22b44:	strbeq	r2, [r8]
   22b48:	ldr	r0, [sp, #36]	; 0x24
   22b4c:	cmp	r0, #0
   22b50:	beq	22b68 <opt_loop+0x2fa0>
   22b54:	ldrb	r1, [r5]
   22b58:	tst	r1, #2
   22b5c:	mvneq	r1, #0
   22b60:	streq	r1, [r0]
   22b64:	strbeq	r2, [r8]
   22b68:	ldr	r0, [sp, #40]	; 0x28
   22b6c:	ldr	lr, [sp, #24]
   22b70:	cmp	r0, #0
   22b74:	beq	22b8c <opt_loop+0x2fc4>
   22b78:	ldrb	r1, [r5]
   22b7c:	tst	r1, #4
   22b80:	mvneq	r1, #0
   22b84:	streq	r1, [r0]
   22b88:	strbeq	r2, [r8]
   22b8c:	ldr	r0, [sp, #44]	; 0x2c
   22b90:	cmp	r0, #0
   22b94:	beq	22bac <opt_loop+0x2fe4>
   22b98:	ldrb	r1, [r5]
   22b9c:	tst	r1, #8
   22ba0:	mvneq	r1, #0
   22ba4:	streq	r1, [r0]
   22ba8:	strbeq	r2, [r8]
   22bac:	ldr	r0, [sp, #48]	; 0x30
   22bb0:	cmp	r0, #0
   22bb4:	beq	22bcc <opt_loop+0x3004>
   22bb8:	ldrb	r1, [r5]
   22bbc:	tst	r1, #16
   22bc0:	mvneq	r1, #0
   22bc4:	streq	r1, [r0]
   22bc8:	strbeq	r2, [r8]
   22bcc:	ldr	r0, [sp, #52]	; 0x34
   22bd0:	cmp	r0, #0
   22bd4:	beq	22bec <opt_loop+0x3024>
   22bd8:	ldrb	r1, [r5]
   22bdc:	tst	r1, #32
   22be0:	mvneq	r1, #0
   22be4:	streq	r1, [r0]
   22be8:	strbeq	r2, [r8]
   22bec:	ldr	r0, [sp, #56]	; 0x38
   22bf0:	cmp	r0, #0
   22bf4:	beq	22c0c <opt_loop+0x3044>
   22bf8:	ldrb	r1, [r5]
   22bfc:	tst	r1, #64	; 0x40
   22c00:	mvneq	r1, #0
   22c04:	streq	r1, [r0]
   22c08:	strbeq	r2, [r8]
   22c0c:	ldr	r0, [sp, #60]	; 0x3c
   22c10:	cmp	r0, #0
   22c14:	beq	22c2c <opt_loop+0x3064>
   22c18:	ldrb	r1, [r5]
   22c1c:	tst	r1, #128	; 0x80
   22c20:	mvneq	r1, #0
   22c24:	streq	r1, [r0]
   22c28:	strbeq	r2, [r8]
   22c2c:	ldr	r0, [sp, #64]	; 0x40
   22c30:	cmp	r0, #0
   22c34:	beq	22c4c <opt_loop+0x3084>
   22c38:	ldrb	r1, [r5, #1]
   22c3c:	tst	r1, #1
   22c40:	mvneq	r1, #0
   22c44:	streq	r1, [r0]
   22c48:	strbeq	r2, [r8]
   22c4c:	ldr	r0, [sp, #68]	; 0x44
   22c50:	cmp	r0, #0
   22c54:	beq	22c6c <opt_loop+0x30a4>
   22c58:	ldrb	r1, [r5, #1]
   22c5c:	tst	r1, #2
   22c60:	mvneq	r1, #0
   22c64:	streq	r1, [r0]
   22c68:	strbeq	r2, [r8]
   22c6c:	ldr	r0, [sp, #72]	; 0x48
   22c70:	cmp	r0, #0
   22c74:	beq	22c8c <opt_loop+0x30c4>
   22c78:	ldrb	r1, [r5, #1]
   22c7c:	tst	r1, #4
   22c80:	mvneq	r1, #0
   22c84:	streq	r1, [r0]
   22c88:	strbeq	r2, [r8]
   22c8c:	ldr	r0, [sp, #76]	; 0x4c
   22c90:	cmp	r0, #0
   22c94:	beq	22cac <opt_loop+0x30e4>
   22c98:	ldrb	r1, [r5, #1]
   22c9c:	tst	r1, #8
   22ca0:	mvneq	r1, #0
   22ca4:	streq	r1, [r0]
   22ca8:	strbeq	r2, [r8]
   22cac:	ldr	r0, [sp, #80]	; 0x50
   22cb0:	cmp	r0, #0
   22cb4:	beq	22ccc <opt_loop+0x3104>
   22cb8:	ldrb	r1, [r5, #1]
   22cbc:	tst	r1, #16
   22cc0:	mvneq	r1, #0
   22cc4:	streq	r1, [r0]
   22cc8:	strbeq	r2, [r8]
   22ccc:	ldr	r0, [sp, #84]	; 0x54
   22cd0:	cmp	r0, #0
   22cd4:	beq	22cec <opt_loop+0x3124>
   22cd8:	ldrb	r1, [r5, #1]
   22cdc:	tst	r1, #32
   22ce0:	mvneq	r1, #0
   22ce4:	streq	r1, [r0]
   22ce8:	strbeq	r2, [r8]
   22cec:	ldr	r0, [sp, #88]	; 0x58
   22cf0:	cmp	r0, #0
   22cf4:	beq	22d0c <opt_loop+0x3144>
   22cf8:	ldrb	r1, [r5, #1]
   22cfc:	tst	r1, #64	; 0x40
   22d00:	mvneq	r1, #0
   22d04:	streq	r1, [r0]
   22d08:	strbeq	r2, [r8]
   22d0c:	ldr	r0, [sp, #92]	; 0x5c
   22d10:	cmp	r0, #0
   22d14:	beq	22d2c <opt_loop+0x3164>
   22d18:	ldrb	r1, [r5, #1]
   22d1c:	tst	r1, #128	; 0x80
   22d20:	mvneq	r1, #0
   22d24:	streq	r1, [r0]
   22d28:	strbeq	r2, [r8]
   22d2c:	ldr	r0, [sp, #96]	; 0x60
   22d30:	cmp	r0, #0
   22d34:	beq	22d4c <opt_loop+0x3184>
   22d38:	ldrb	r1, [r5, #2]
   22d3c:	tst	r1, #1
   22d40:	mvneq	r1, #0
   22d44:	streq	r1, [r0]
   22d48:	strbeq	r2, [r8]
   22d4c:	ldr	r0, [sp, #100]	; 0x64
   22d50:	cmp	r0, #0
   22d54:	beq	22d6c <opt_loop+0x31a4>
   22d58:	ldrb	r1, [r5, #2]
   22d5c:	tst	r1, #2
   22d60:	mvneq	r1, #0
   22d64:	streq	r1, [r0]
   22d68:	strbeq	r2, [r8]
   22d6c:	ldr	r0, [r9, #8]
   22d70:	tst	r0, #8
   22d74:	bne	20bcc <opt_loop+0x1004>
   22d78:	ldr	r1, [r9, #20]
   22d7c:	movw	r3, #8923	; 0x22db
   22d80:	movt	r3, #39383	; 0x99d7
   22d84:	lsl	r2, r1, #4
   22d88:	umull	r2, r3, r2, r3
   22d8c:	lsr	r2, r3, #7
   22d90:	mov	r3, #213	; 0xd5
   22d94:	mul	r2, r2, r3
   22d98:	rsb	r2, r2, r1, lsl #4
   22d9c:	ldr	r3, [sl, r2, lsl #2]
   22da0:	cmp	r3, #0
   22da4:	beq	22dd4 <opt_loop+0x320c>
   22da8:	ldr	r7, [r3]
   22dac:	cmp	r7, #0
   22db0:	bne	22dc8 <opt_loop+0x3200>
   22db4:	ldr	r7, [r3, #4]
   22db8:	cmp	r7, r1
   22dbc:	ldreq	r7, [r3, #8]
   22dc0:	cmpeq	r7, #0
   22dc4:	beq	2090c <opt_loop+0xd44>
   22dc8:	ldr	r3, [r3, #16]
   22dcc:	cmp	r3, #0
   22dd0:	bne	22da8 <opt_loop+0x31e0>
   22dd4:	ldr	r0, [r8, #44]	; 0x2c
   22dd8:	mov	r7, #1
   22ddc:	add	r3, r0, #1
   22de0:	str	r3, [r8, #44]	; 0x2c
   22de4:	ldr	r0, [pc, #1336]	; 23324 <opt_loop+0x375c>
   22de8:	ldr	r0, [pc, r0]
   22dec:	add	r0, r0, r3, lsl #3
   22df0:	str	r1, [r0, #4]
   22df4:	ldr	r0, [pc, #1324]	; 23328 <opt_loop+0x3760>
   22df8:	ldr	r0, [pc, r0]
   22dfc:	str	r7, [r0, r3, lsl #3]
   22e00:	ldr	r0, [pc, #1316]	; 2332c <opt_loop+0x3764>
   22e04:	ldr	r0, [pc, r0]
   22e08:	ldr	r6, [pc, #1312]	; 23330 <opt_loop+0x3768>
   22e0c:	add	r7, r0, #20
   22e10:	add	r6, pc, r6
   22e14:	str	r7, [r6]
   22e18:	mov	r7, #0
   22e1c:	str	r7, [r0]
   22e20:	str	r3, [r0, #12]
   22e24:	stmib	r0, {r1, r7}
   22e28:	ldr	r1, [sl, r2, lsl #2]
   22e2c:	str	r1, [r0, #16]
   22e30:	str	r0, [sl, r2, lsl #2]
   22e34:	ldr	r0, [r9, #8]
   22e38:	str	r0, [r9, #52]	; 0x34
   22e3c:	rsb	r0, r0, #0
   22e40:	str	r3, [r9, #132]	; 0x84
   22e44:	str	r0, [r9, #76]	; 0x4c
   22e48:	ldr	r9, [r9, #100]	; 0x64
   22e4c:	cmp	r9, #0
   22e50:	bne	2092c <opt_loop+0xd64>
   22e54:	ldr	r1, [sp, #8]
   22e58:	sub	r0, r1, #1
   22e5c:	cmp	r1, #0
   22e60:	mov	r1, r0
   22e64:	bgt	208f0 <opt_loop+0xd28>
   22e68:	ldr	r0, [sp, #20]
   22e6c:	cmp	r0, #0
   22e70:	bne	232a8 <opt_loop+0x36e0>
   22e74:	ldr	r6, [sp, #4]
   22e78:	cmp	r6, #1
   22e7c:	blt	22ec4 <opt_loop+0x32fc>
   22e80:	mov	r4, #1
   22e84:	ldr	r0, [pc, #1192]	; 23334 <opt_loop+0x376c>
   22e88:	ldr	r0, [pc, r0]
   22e8c:	ldr	r5, [r0, r4, lsl #2]
   22e90:	cmp	r5, #0
   22e94:	beq	22eb4 <opt_loop+0x32ec>
   22e98:	add	r0, r5, #48	; 0x30
   22e9c:	bl	23950 <opt_j>
   22ea0:	add	r0, r5, #72	; 0x48
   22ea4:	bl	23950 <opt_j>
   22ea8:	ldr	r5, [r5, #100]	; 0x64
   22eac:	cmp	r5, #0
   22eb0:	bne	22e98 <opt_loop+0x32d0>
   22eb4:	add	r0, r4, #1
   22eb8:	cmp	r4, r6
   22ebc:	mov	r4, r0
   22ec0:	bne	22e84 <opt_loop+0x32bc>
   22ec4:	ldr	r0, [r8, #16]
   22ec8:	mov	r3, #0
   22ecc:	cmp	r0, #1
   22ed0:	blt	22eec <opt_loop+0x3324>
   22ed4:	ldr	r1, [pc, #1116]	; 23338 <opt_loop+0x3770>
   22ed8:	ldr	r1, [pc, r1]
   22edc:	ldr	r2, [r1], #4
   22ee0:	subs	r0, r0, #1
   22ee4:	str	r3, [r2, #112]	; 0x70
   22ee8:	bne	22edc <opt_loop+0x3314>
   22eec:	ldr	r0, [sp, #12]
   22ef0:	ldr	r0, [r0, #36]	; 0x24
   22ef4:	cmp	r0, #1
   22ef8:	blt	22f4c <opt_loop+0x3384>
   22efc:	ldr	r1, [pc, #1080]	; 2333c <opt_loop+0x3774>
   22f00:	ldr	r1, [pc, r1]
   22f04:	ldr	r2, [r1, r0, lsl #2]
   22f08:	cmp	r2, #0
   22f0c:	beq	22f44 <opt_loop+0x337c>
   22f10:	ldr	r3, [r2, #60]	; 0x3c
   22f14:	ldr	r7, [r3, #112]	; 0x70
   22f18:	str	r7, [r2, #68]	; 0x44
   22f1c:	add	r7, r2, #48	; 0x30
   22f20:	str	r7, [r3, #112]	; 0x70
   22f24:	ldr	r3, [r2, #84]	; 0x54
   22f28:	ldr	r7, [r3, #112]	; 0x70
   22f2c:	str	r7, [r2, #92]	; 0x5c
   22f30:	add	r7, r2, #72	; 0x48
   22f34:	str	r7, [r3, #112]	; 0x70
   22f38:	ldr	r2, [r2, #100]	; 0x64
   22f3c:	cmp	r2, #0
   22f40:	bne	22f10 <opt_loop+0x3348>
   22f44:	subs	r0, r0, #1
   22f48:	bgt	22f04 <opt_loop+0x333c>
   22f4c:	cmp	r6, #1
   22f50:	blt	232a8 <opt_loop+0x36e0>
   22f54:	mov	r1, #1
   22f58:	ldr	r0, [pc, #992]	; 23340 <opt_loop+0x3778>
   22f5c:	ldr	r0, [pc, r0]
   22f60:	str	r1, [sp, #28]
   22f64:	ldr	lr, [r0, r1, lsl #2]
   22f68:	cmp	lr, #0
   22f6c:	beq	23290 <opt_loop+0x36c8>
   22f70:	ldr	r2, [lr, #112]	; 0x70
   22f74:	cmp	r2, #0
   22f78:	beq	231f4 <opt_loop+0x362c>
   22f7c:	ldr	r7, [r2, #16]
   22f80:	mov	r0, r2
   22f84:	ldr	r3, [r7, #200]	; 0xc8
   22f88:	ldr	r0, [r0, #20]
   22f8c:	cmp	r0, #0
   22f90:	beq	22fd4 <opt_loop+0x340c>
   22f94:	ldr	r1, [r0, #16]
   22f98:	ldr	r1, [r1, #200]	; 0xc8
   22f9c:	cmp	r3, r1
   22fa0:	beq	22f88 <opt_loop+0x33c0>
   22fa4:	cmp	r2, #0
   22fa8:	beq	231f4 <opt_loop+0x362c>
   22fac:	ldr	r4, [r2, #16]
   22fb0:	ldr	r3, [r4, #200]	; 0xc8
   22fb4:	ldr	r2, [r2, #20]
   22fb8:	cmp	r2, #0
   22fbc:	beq	230e8 <opt_loop+0x3520>
   22fc0:	ldr	r0, [r2, #16]
   22fc4:	ldr	r0, [r0, #200]	; 0xc8
   22fc8:	cmp	r3, r0
   22fcc:	beq	22fb4 <opt_loop+0x33ec>
   22fd0:	b	231f4 <opt_loop+0x362c>
   22fd4:	ldr	r0, [r7, #60]!	; 0x3c
   22fd8:	mov	r5, #1
   22fdc:	cmp	r0, lr
   22fe0:	addne	r7, r7, #24
   22fe4:	mov	ip, r5
   22fe8:	ldr	r5, [r7]
   22fec:	cmp	r5, #0
   22ff0:	beq	231e4 <opt_loop+0x361c>
   22ff4:	ldr	r0, [r5, #60]	; 0x3c
   22ff8:	ldr	r1, [lr, #60]	; 0x3c
   22ffc:	cmp	r0, r1
   23000:	bne	23204 <opt_loop+0x363c>
   23004:	ldr	r1, [lr]
   23008:	mov	r8, r7
   2300c:	ldr	r7, [r5, #104]	; 0x68
   23010:	mov	r4, #1
   23014:	and	r6, r1, #31
   23018:	lsr	r1, r1, #5
   2301c:	ldr	r7, [r7, r1, lsl #2]
   23020:	tst	r7, r4, lsl r6
   23024:	beq	23218 <opt_loop+0x3650>
   23028:	ldr	r4, [r5, #200]	; 0xc8
   2302c:	add	r7, r5, #84	; 0x54
   23030:	mov	r5, #0
   23034:	cmp	r4, r3
   23038:	beq	22fe4 <opt_loop+0x341c>
   2303c:	mov	r4, #1
   23040:	lsl	r9, r4, r6
   23044:	ldr	r5, [r7]
   23048:	cmp	r5, #0
   2304c:	beq	2322c <opt_loop+0x3664>
   23050:	ldr	r4, [r5, #60]	; 0x3c
   23054:	cmp	r4, r0
   23058:	bne	2322c <opt_loop+0x3664>
   2305c:	ldr	r4, [r5, #104]	; 0x68
   23060:	ldr	r4, [r4, r1, lsl #2]
   23064:	tst	r4, r9
   23068:	beq	2322c <opt_loop+0x3664>
   2306c:	ldr	r4, [r5, #200]	; 0xc8
   23070:	mov	sl, r7
   23074:	add	r7, r5, #84	; 0x54
   23078:	cmp	r4, r3
   2307c:	bne	23044 <opt_loop+0x347c>
   23080:	ldr	r0, [r7]
   23084:	cmp	ip, #0
   23088:	str	r0, [sl]
   2308c:	ldr	r0, [r8]
   23090:	str	r0, [r7]
   23094:	beq	23248 <opt_loop+0x3680>
   23098:	ldr	r0, [lr, #112]	; 0x70
   2309c:	ldr	sl, [pc, #692]	; 23358 <opt_loop+0x3790>
   230a0:	cmp	r0, #0
   230a4:	add	sl, pc, sl
   230a8:	beq	23254 <opt_loop+0x368c>
   230ac:	ldr	r1, [r0, #16]
   230b0:	ldr	r2, [r1, #60]	; 0x3c
   230b4:	cmp	r2, lr
   230b8:	mov	r2, #84	; 0x54
   230bc:	movweq	r2, #60	; 0x3c
   230c0:	str	r5, [r1, r2]
   230c4:	ldr	r0, [r0, #20]
   230c8:	cmp	r0, #0
   230cc:	bne	230ac <opt_loop+0x34e4>
   230d0:	b	23254 <opt_loop+0x368c>
   230d4:	.word	0x0002488c
   230d8:	.word	0x00024714
   230dc:	.word	0x000247fc
   230e0:	.word	0x000247e8
   230e4:	.word	0x000247dc
   230e8:	ldr	r0, [r4, #60]!	; 0x3c
   230ec:	mov	r1, #1
   230f0:	cmp	r0, lr
   230f4:	addne	r4, r4, #24
   230f8:	mov	ip, r1
   230fc:	ldr	r1, [r4]
   23100:	cmp	r1, #0
   23104:	beq	231f4 <opt_loop+0x362c>
   23108:	ldr	r5, [r1, #84]	; 0x54
   2310c:	ldr	r0, [lr, #84]	; 0x54
   23110:	cmp	r5, r0
   23114:	bne	231f4 <opt_loop+0x362c>
   23118:	ldr	r0, [lr]
   2311c:	mov	r2, r4
   23120:	ldr	r4, [r1, #104]	; 0x68
   23124:	mov	r7, #1
   23128:	and	r6, r0, #31
   2312c:	lsr	r0, r0, #5
   23130:	ldr	r4, [r4, r0, lsl #2]
   23134:	tst	r4, r7, lsl r6
   23138:	beq	231f4 <opt_loop+0x362c>
   2313c:	ldr	r7, [r1, #200]	; 0xc8
   23140:	add	r4, r1, #60	; 0x3c
   23144:	mov	r1, #0
   23148:	cmp	r7, r3
   2314c:	beq	230f8 <opt_loop+0x3530>
   23150:	mov	r1, #1
   23154:	lsl	r9, r1, r6
   23158:	ldr	r6, [r4]
   2315c:	cmp	r6, #0
   23160:	beq	231f4 <opt_loop+0x362c>
   23164:	mov	r1, r4
   23168:	ldr	r4, [r6, #84]	; 0x54
   2316c:	cmp	r4, r5
   23170:	bne	231f4 <opt_loop+0x362c>
   23174:	ldr	r4, [r6, #104]	; 0x68
   23178:	ldr	r4, [r4, r0, lsl #2]
   2317c:	tst	r4, r9
   23180:	beq	231f4 <opt_loop+0x362c>
   23184:	ldr	r7, [r6, #200]	; 0xc8
   23188:	add	r4, r6, #60	; 0x3c
   2318c:	cmp	r7, r3
   23190:	bne	23158 <opt_loop+0x3590>
   23194:	ldr	r0, [r4]
   23198:	cmp	ip, #0
   2319c:	str	r0, [r1]
   231a0:	ldr	r0, [r2]
   231a4:	str	r0, [r4]
   231a8:	beq	23278 <opt_loop+0x36b0>
   231ac:	ldr	r0, [lr, #112]	; 0x70
   231b0:	cmp	r0, #0
   231b4:	beq	2327c <opt_loop+0x36b4>
   231b8:	ldr	r1, [r0, #16]
   231bc:	ldr	r2, [r1, #60]	; 0x3c
   231c0:	cmp	r2, lr
   231c4:	mov	r2, #84	; 0x54
   231c8:	movweq	r2, #60	; 0x3c
   231cc:	str	r6, [r1, r2]
   231d0:	ldr	r0, [r0, #20]
   231d4:	cmp	r0, #0
   231d8:	bne	231b8 <opt_loop+0x35f0>
   231dc:	b	2327c <opt_loop+0x36b4>
   231e0:	.word	0x000247b8
   231e4:	ldr	r8, [pc, #344]	; 23344 <opt_loop+0x377c>
   231e8:	add	r8, pc, r8
   231ec:	cmp	r2, #0
   231f0:	bne	22fac <opt_loop+0x33e4>
   231f4:	ldr	lr, [lr, #100]	; 0x64
   231f8:	cmp	lr, #0
   231fc:	bne	22f70 <opt_loop+0x33a8>
   23200:	b	23290 <opt_loop+0x36c8>
   23204:	ldr	r8, [pc, #316]	; 23348 <opt_loop+0x3780>
   23208:	add	r8, pc, r8
   2320c:	cmp	r2, #0
   23210:	bne	22fac <opt_loop+0x33e4>
   23214:	b	231f4 <opt_loop+0x362c>
   23218:	ldr	r8, [pc, #300]	; 2334c <opt_loop+0x3784>
   2321c:	add	r8, pc, r8
   23220:	cmp	r2, #0
   23224:	bne	22fac <opt_loop+0x33e4>
   23228:	b	231f4 <opt_loop+0x362c>
   2322c:	ldr	r8, [pc, #284]	; 23350 <opt_loop+0x3788>
   23230:	ldr	sl, [pc, #284]	; 23354 <opt_loop+0x378c>
   23234:	add	r8, pc, r8
   23238:	add	sl, pc, sl
   2323c:	cmp	r2, #0
   23240:	bne	22fac <opt_loop+0x33e4>
   23244:	b	231f4 <opt_loop+0x362c>
   23248:	str	r5, [r8]
   2324c:	ldr	sl, [pc, #264]	; 2335c <opt_loop+0x3794>
   23250:	add	sl, pc, sl
   23254:	ldr	r8, [pc, #260]	; 23360 <opt_loop+0x3798>
   23258:	mov	r0, #0
   2325c:	add	r8, pc, r8
   23260:	strb	r0, [r8]
   23264:	ldr	r2, [lr, #112]	; 0x70
   23268:	cmp	r2, #0
   2326c:	bne	22fac <opt_loop+0x33e4>
   23270:	b	231f4 <opt_loop+0x362c>
   23274:	.word	0x0002473c
   23278:	str	r6, [r2]
   2327c:	mov	r0, #0
   23280:	strb	r0, [r8]
   23284:	ldr	lr, [lr, #100]	; 0x64
   23288:	cmp	lr, #0
   2328c:	bne	22f70 <opt_loop+0x33a8>
   23290:	ldr	r2, [sp, #28]
   23294:	ldr	r1, [sp, #4]
   23298:	add	r0, r2, #1
   2329c:	cmp	r2, r1
   232a0:	mov	r1, r0
   232a4:	bne	22f58 <opt_loop+0x3390>
   232a8:	ldrb	r0, [r8]
   232ac:	mvn	r9, #1
   232b0:	cmp	r0, #1
   232b4:	bne	1fbfc <opt_loop+0x34>
   232b8:	sub	sp, fp, #48	; 0x30
   232bc:	vpop	{d8-d9}
   232c0:	add	sp, sp, #4
   232c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232c8:	bl	100c <abort@plt>
   232cc:	ldr	r0, [pc, #144]	; 23364 <opt_loop+0x379c>
   232d0:	add	r0, pc, r0
   232d4:	bl	2204 <sf_bpf_error>
   232d8:	.word	0x00024548
   232dc:	.word	0x00024630
   232e0:	.word	0x00024620
   232e4:	.word	0x0002460c
   232e8:	.word	0x00024600
   232ec:	.word	0x0002458c
   232f0:	.word	0x00024564
   232f4:	.word	0x000244f4
   232f8:	.word	0x000244e8
   232fc:	.word	0x000243dc
   23300:	.word	0x000242f8
   23304:	.word	0x000243e0
   23308:	.word	0x000243d0
   2330c:	.word	0x000243bc
   23310:	.word	0x000243b0
   23314:	.word	0x00023fd8
   23318:	.word	0x0002424c
   2331c:	.word	0x00024154
   23320:	.word	0x00024014
   23324:	.word	0x00023bcc
   23328:	.word	0x00023bbc
   2332c:	.word	0x00023ba8
   23330:	.word	0x00023b9c
   23334:	.word	0x00023b18
   23338:	.word	0x00023acc
   2333c:	.word	0x00023aa0
   23340:	.word	0x00023a44
   23344:	.word	0x000236c4
   23348:	.word	0x000236a4
   2334c:	.word	0x00023690
   23350:	.word	0x00023678
   23354:	.word	0x00023320
   23358:	.word	0x000234b4
   2335c:	.word	0x00023308
   23360:	.word	0x00023650
   23364:	.word	0x00006c67

00023368 <sf_icode_to_fcode>:
   23368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2336c:	add	fp, sp, #28
   23370:	sub	sp, sp, #4
   23374:	ldr	sl, [pc, #192]	; 2343c <sf_icode_to_fcode+0xd4>
   23378:	mov	r9, r0
   2337c:	mov	r8, r1
   23380:	add	sl, pc, sl
   23384:	ldr	r5, [sl, #4]
   23388:	add	r0, r5, #1
   2338c:	str	r0, [sl, #4]
   23390:	mov	r0, r9
   23394:	bl	23444 <count_stmts>
   23398:	lsl	r4, r0, #3
   2339c:	mov	r7, r0
   233a0:	str	r0, [r8]
   233a4:	mov	r0, r4
   233a8:	bl	f1c <malloc@plt>
   233ac:	cmp	r0, #0
   233b0:	beq	23424 <sf_icode_to_fcode+0xbc>
   233b4:	mov	r6, r0
   233b8:	mov	r0, r6
   233bc:	mov	r1, #0
   233c0:	mov	r2, r4
   233c4:	bl	f88 <memset@plt>
   233c8:	add	r1, r5, #2
   233cc:	add	r0, r6, r7, lsl #3
   233d0:	stmib	sl, {r1, r6}
   233d4:	str	r0, [sl, #12]
   233d8:	mov	r0, r9
   233dc:	bl	234d8 <convert_code_r>
   233e0:	cmp	r0, #0
   233e4:	bne	23430 <sf_icode_to_fcode+0xc8>
   233e8:	mov	r0, r6
   233ec:	bl	ea4 <free@plt>
   233f0:	ldr	r5, [sl, #4]
   233f4:	add	r0, r5, #1
   233f8:	str	r0, [sl, #4]
   233fc:	mov	r0, r9
   23400:	bl	23444 <count_stmts>
   23404:	lsl	r4, r0, #3
   23408:	mov	r7, r0
   2340c:	str	r0, [r8]
   23410:	mov	r0, r4
   23414:	bl	f1c <malloc@plt>
   23418:	mov	r6, r0
   2341c:	cmp	r0, #0
   23420:	bne	233b8 <sf_icode_to_fcode+0x50>
   23424:	ldr	r0, [pc, #20]	; 23440 <sf_icode_to_fcode+0xd8>
   23428:	add	r0, pc, r0
   2342c:	bl	2204 <sf_bpf_error>
   23430:	mov	r0, r6
   23434:	sub	sp, fp, #28
   23438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2343c:	.word	0x0002352c
   23440:	.word	0x00006b08

00023444 <count_stmts>:
   23444:	push	{r4, r5, fp, lr}
   23448:	add	fp, sp, #8
   2344c:	mov	r4, r0
   23450:	mov	r0, #0
   23454:	cmp	r4, #0
   23458:	beq	234d0 <count_stmts+0x8c>
   2345c:	ldr	r1, [pc, #112]	; 234d4 <count_stmts+0x90>
   23460:	ldr	r2, [r4, #24]
   23464:	add	r1, pc, r1
   23468:	ldr	r1, [r1, #4]
   2346c:	cmp	r2, r1
   23470:	popeq	{r4, r5, fp, pc}
   23474:	str	r1, [r4, #24]
   23478:	ldr	r0, [r4, #60]	; 0x3c
   2347c:	bl	23444 <count_stmts>
   23480:	mov	r5, r0
   23484:	ldr	r0, [r4, #84]	; 0x54
   23488:	bl	23444 <count_stmts>
   2348c:	ldr	r2, [r4, #4]
   23490:	mov	r1, #0
   23494:	cmp	r2, #0
   23498:	beq	234b4 <count_stmts+0x70>
   2349c:	ldr	r3, [r2]
   234a0:	ldr	r2, [r2, #16]
   234a4:	cmn	r3, #1
   234a8:	addne	r1, r1, #1
   234ac:	cmp	r2, #0
   234b0:	bne	2349c <count_stmts+0x58>
   234b4:	add	r0, r5, r0
   234b8:	ldr	r2, [r4, #32]
   234bc:	add	r0, r0, r1
   234c0:	ldr	r1, [r4, #28]
   234c4:	add	r0, r0, r1
   234c8:	add	r0, r0, r2
   234cc:	add	r0, r0, #1
   234d0:	pop	{r4, r5, fp, pc}
   234d4:	.word	0x00023448

000234d8 <convert_code_r>:
   234d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234dc:	add	fp, sp, #28
   234e0:	sub	sp, sp, #4
   234e4:	cmp	r0, #0
   234e8:	beq	23508 <convert_code_r+0x30>
   234ec:	ldr	r4, [pc, #948]	; 238a8 <convert_code_r+0x3d0>
   234f0:	mov	r9, r0
   234f4:	ldr	r1, [r9, #24]
   234f8:	add	r4, pc, r4
   234fc:	ldr	r0, [r4, #4]
   23500:	cmp	r1, r0
   23504:	bne	23518 <convert_code_r+0x40>
   23508:	mov	r5, #1
   2350c:	mov	r0, r5
   23510:	sub	sp, fp, #28
   23514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23518:	str	r0, [r9, #24]
   2351c:	ldr	r0, [r9, #84]	; 0x54
   23520:	bl	234d8 <convert_code_r>
   23524:	mov	r5, #0
   23528:	cmp	r0, #0
   2352c:	beq	2350c <convert_code_r+0x34>
   23530:	ldr	r0, [r9, #60]	; 0x3c
   23534:	bl	234d8 <convert_code_r>
   23538:	cmp	r0, #0
   2353c:	beq	2350c <convert_code_r+0x34>
   23540:	ldr	r7, [r9, #4]
   23544:	mov	r0, #0
   23548:	mov	r8, #0
   2354c:	cmp	r7, #0
   23550:	beq	23574 <convert_code_r+0x9c>
   23554:	mov	r8, #0
   23558:	mov	r1, r7
   2355c:	ldr	r2, [r1]
   23560:	ldr	r1, [r1, #16]
   23564:	cmn	r2, #1
   23568:	addne	r8, r8, #1
   2356c:	cmp	r1, #0
   23570:	bne	2355c <convert_code_r+0x84>
   23574:	ldr	r1, [r9, #28]
   23578:	ldr	r2, [r9, #32]
   2357c:	ldr	r3, [r4, #12]
   23580:	cmp	r8, #0
   23584:	add	r1, r8, r1
   23588:	add	r1, r1, r2
   2358c:	ldr	r2, [r4, #8]
   23590:	add	r1, r1, #1
   23594:	sub	sl, r3, r1, lsl #3
   23598:	str	sl, [r4, #12]
   2359c:	sub	r1, sl, r2
   235a0:	asr	r1, r1, #3
   235a4:	str	r1, [r9, #40]	; 0x28
   235a8:	beq	235ec <convert_code_r+0x114>
   235ac:	mov	r0, r8
   235b0:	mov	r1, #4
   235b4:	bl	e44 <calloc@plt>
   235b8:	cmp	r0, #0
   235bc:	beq	2389c <convert_code_r+0x3c4>
   235c0:	cmp	r7, #0
   235c4:	beq	235ec <convert_code_r+0x114>
   235c8:	mov	r1, #0
   235cc:	mov	r2, r7
   235d0:	str	r2, [r0, r1, lsl #2]
   235d4:	add	r1, r1, #1
   235d8:	cmp	r1, r8
   235dc:	bcs	235ec <convert_code_r+0x114>
   235e0:	ldr	r2, [r2, #16]
   235e4:	cmp	r2, #0
   235e8:	bne	235d0 <convert_code_r+0xf8>
   235ec:	cmp	r7, #0
   235f0:	beq	23778 <convert_code_r+0x2a0>
   235f4:	sub	ip, r8, #2
   235f8:	mov	r2, #0
   235fc:	cmp	r8, #0
   23600:	ble	23704 <convert_code_r+0x22c>
   23604:	ldr	r1, [r7]
   23608:	cmn	r1, #1
   2360c:	beq	23634 <convert_code_r+0x15c>
   23610:	strh	r1, [sl]
   23614:	cmp	r2, ip
   23618:	ldr	r1, [r7, #12]
   2361c:	str	r1, [sl, #4]
   23620:	ldrne	r1, [r7]
   23624:	cmpne	r1, #5
   23628:	bne	23644 <convert_code_r+0x16c>
   2362c:	add	r2, r2, #1
   23630:	add	sl, sl, #8
   23634:	ldr	r7, [r7, #16]
   23638:	cmp	r7, #0
   2363c:	bne	23604 <convert_code_r+0x12c>
   23640:	b	23778 <convert_code_r+0x2a0>
   23644:	and	r1, r1, #7
   23648:	cmp	r1, #5
   2364c:	bne	2362c <convert_code_r+0x154>
   23650:	ldr	r5, [r7, #4]
   23654:	cmp	r5, #0
   23658:	ldrne	r1, [r7, #8]
   2365c:	cmpne	r1, #0
   23660:	beq	23764 <convert_code_r+0x28c>
   23664:	eor	lr, r2, #255	; 0xff
   23668:	mov	r1, #0
   2366c:	mov	r6, #0
   23670:	mov	r4, #0
   23674:	ldr	r3, [r0, r4, lsl #2]
   23678:	cmp	r3, r5
   2367c:	bne	23694 <convert_code_r+0x1bc>
   23680:	b	236b0 <convert_code_r+0x1d8>
   23684:	ldr	r5, [r7, #4]
   23688:	ldr	r3, [r0, r4, lsl #2]
   2368c:	cmp	r3, r5
   23690:	beq	236b0 <convert_code_r+0x1d8>
   23694:	ldr	r5, [r7, #8]
   23698:	cmp	r3, r5
   2369c:	beq	236d4 <convert_code_r+0x1fc>
   236a0:	add	r4, r4, #1
   236a4:	cmp	r4, r8
   236a8:	blt	23684 <convert_code_r+0x1ac>
   236ac:	b	236f4 <convert_code_r+0x21c>
   236b0:	cmp	r6, #0
   236b4:	bne	23874 <convert_code_r+0x39c>
   236b8:	add	r3, lr, r4
   236bc:	mov	r6, #1
   236c0:	strb	r3, [sl, #2]
   236c4:	ldr	r3, [r0, r4, lsl #2]
   236c8:	ldr	r5, [r7, #8]
   236cc:	cmp	r3, r5
   236d0:	bne	236a0 <convert_code_r+0x1c8>
   236d4:	cmp	r1, #0
   236d8:	bne	23874 <convert_code_r+0x39c>
   236dc:	add	r1, lr, r4
   236e0:	strb	r1, [sl, #3]
   236e4:	mov	r1, #1
   236e8:	add	r4, r4, #1
   236ec:	cmp	r4, r8
   236f0:	blt	23684 <convert_code_r+0x1ac>
   236f4:	cmp	r6, #0
   236f8:	cmpne	r1, #0
   236fc:	bne	2362c <convert_code_r+0x154>
   23700:	b	23888 <convert_code_r+0x3b0>
   23704:	ldr	r1, [r7]
   23708:	cmn	r1, #1
   2370c:	beq	23734 <convert_code_r+0x25c>
   23710:	strh	r1, [sl]
   23714:	cmp	r2, ip
   23718:	ldr	r1, [r7, #12]
   2371c:	str	r1, [sl, #4]
   23720:	ldrne	r1, [r7]
   23724:	cmpne	r1, #5
   23728:	bne	23744 <convert_code_r+0x26c>
   2372c:	add	r2, r2, #1
   23730:	add	sl, sl, #8
   23734:	ldr	r7, [r7, #16]
   23738:	cmp	r7, #0
   2373c:	bne	23704 <convert_code_r+0x22c>
   23740:	b	23778 <convert_code_r+0x2a0>
   23744:	and	r1, r1, #7
   23748:	cmp	r1, #5
   2374c:	bne	2372c <convert_code_r+0x254>
   23750:	ldr	r0, [r7, #4]
   23754:	cmp	r0, #0
   23758:	ldrne	r0, [r7, #8]
   2375c:	cmpne	r0, #0
   23760:	bne	23888 <convert_code_r+0x3b0>
   23764:	ldr	r0, [pc, #320]	; 238ac <convert_code_r+0x3d4>
   23768:	ldr	r1, [pc, #320]	; 238b0 <convert_code_r+0x3d8>
   2376c:	add	r0, pc, r0
   23770:	add	r1, pc, r1
   23774:	bl	2204 <sf_bpf_error>
   23778:	cmp	r0, #0
   2377c:	beq	23784 <convert_code_r+0x2ac>
   23780:	bl	ea4 <free@plt>
   23784:	ldr	r0, [r9, #8]
   23788:	strh	r0, [sl]
   2378c:	ldr	r0, [r9, #20]
   23790:	str	r0, [sl, #4]
   23794:	ldr	r0, [r9, #60]	; 0x3c
   23798:	cmp	r0, #0
   2379c:	beq	23508 <convert_code_r+0x30>
   237a0:	ldr	r1, [r9, #40]	; 0x28
   237a4:	ldr	r0, [r0, #40]	; 0x28
   237a8:	add	r1, r1, r8
   237ac:	mvn	r1, r1
   237b0:	add	r0, r0, r1
   237b4:	cmp	r0, #256	; 0x100
   237b8:	bcc	237e8 <convert_code_r+0x310>
   237bc:	ldr	r1, [r9, #28]
   237c0:	cmp	r1, #0
   237c4:	beq	23844 <convert_code_r+0x36c>
   237c8:	mov	r1, #5
   237cc:	sub	r0, r0, #1
   237d0:	strh	r1, [sl, #8]
   237d4:	mov	r1, #0
   237d8:	strb	r1, [sl, #2]
   237dc:	str	r0, [sl, #12]
   237e0:	mov	r0, #1
   237e4:	b	237f0 <convert_code_r+0x318>
   237e8:	strb	r0, [sl, #2]
   237ec:	mov	r0, #0
   237f0:	ldr	r2, [r9, #84]	; 0x54
   237f4:	ldr	r1, [r9, #40]	; 0x28
   237f8:	ldr	r2, [r2, #40]	; 0x28
   237fc:	add	r1, r1, r8
   23800:	mvn	r1, r1
   23804:	add	r1, r2, r1
   23808:	cmp	r1, #256	; 0x100
   2380c:	bcc	2383c <convert_code_r+0x364>
   23810:	ldr	r2, [r9, #32]
   23814:	cmp	r2, #0
   23818:	beq	2385c <convert_code_r+0x384>
   2381c:	strb	r0, [sl, #3]
   23820:	add	r0, r0, #1
   23824:	mov	r3, #5
   23828:	lsl	r2, r0, #3
   2382c:	sub	r0, r1, r0
   23830:	strh	r3, [sl, r2]!
   23834:	str	r0, [sl, #4]
   23838:	b	23508 <convert_code_r+0x30>
   2383c:	strb	r1, [sl, #3]
   23840:	b	23508 <convert_code_r+0x30>
   23844:	mov	r0, #1
   23848:	mov	r5, #0
   2384c:	str	r0, [r9, #28]
   23850:	mov	r0, r5
   23854:	sub	sp, fp, #28
   23858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2385c:	mov	r0, #1
   23860:	mov	r5, #0
   23864:	str	r0, [r9, #32]
   23868:	mov	r0, r5
   2386c:	sub	sp, fp, #28
   23870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23874:	ldr	r0, [pc, #64]	; 238bc <convert_code_r+0x3e4>
   23878:	ldr	r1, [pc, #64]	; 238c0 <convert_code_r+0x3e8>
   2387c:	add	r0, pc, r0
   23880:	add	r1, pc, r1
   23884:	bl	2204 <sf_bpf_error>
   23888:	ldr	r0, [pc, #36]	; 238b4 <convert_code_r+0x3dc>
   2388c:	ldr	r1, [pc, #36]	; 238b8 <convert_code_r+0x3e0>
   23890:	add	r0, pc, r0
   23894:	add	r1, pc, r1
   23898:	bl	2204 <sf_bpf_error>
   2389c:	ldr	r0, [pc, #32]	; 238c4 <convert_code_r+0x3ec>
   238a0:	add	r0, pc, r0
   238a4:	bl	2204 <sf_bpf_error>
   238a8:	.word	0x000233b4
   238ac:	.word	0x000067ec
   238b0:	.word	0x00006811
   238b4:	.word	0x000066c8
   238b8:	.word	0x00006711
   238bc:	.word	0x000066dc
   238c0:	.word	0x00006714
   238c4:	.word	0x000066a8

000238c8 <find_levels_r>:
   238c8:	push	{r4, sl, fp, lr}
   238cc:	add	fp, sp, #8
   238d0:	mov	r4, r0
   238d4:	ldr	r0, [pc, #108]	; 23948 <find_levels_r+0x80>
   238d8:	ldr	r1, [r4, #24]
   238dc:	add	r0, pc, r0
   238e0:	ldr	r0, [r0, #4]
   238e4:	cmp	r1, r0
   238e8:	popeq	{r4, sl, fp, pc}
   238ec:	mov	r1, #0
   238f0:	str	r1, [r4, #100]	; 0x64
   238f4:	str	r0, [r4, #24]
   238f8:	ldr	r0, [r4, #60]	; 0x3c
   238fc:	cmp	r0, #0
   23900:	beq	2392c <find_levels_r+0x64>
   23904:	bl	238c8 <find_levels_r>
   23908:	ldr	r0, [r4, #84]	; 0x54
   2390c:	bl	238c8 <find_levels_r>
   23910:	ldr	r0, [r4, #60]	; 0x3c
   23914:	ldr	r1, [r4, #84]	; 0x54
   23918:	ldr	r0, [r0, #36]	; 0x24
   2391c:	ldr	r1, [r1, #36]	; 0x24
   23920:	cmp	r0, r1
   23924:	movgt	r1, r0
   23928:	add	r1, r1, #1
   2392c:	str	r1, [r4, #36]	; 0x24
   23930:	ldr	r0, [pc, #20]	; 2394c <find_levels_r+0x84>
   23934:	ldr	r0, [pc, r0]
   23938:	ldr	r2, [r0, r1, lsl #2]
   2393c:	str	r2, [r4, #100]	; 0x64
   23940:	str	r4, [r0, r1, lsl #2]
   23944:	pop	{r4, sl, fp, pc}
   23948:	.word	0x00022fd0
   2394c:	.word	0x0002306c

00023950 <opt_j>:
   23950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23954:	add	fp, sp, #28
   23958:	sub	sp, sp, #20
   2395c:	ldr	r7, [r0, #12]
   23960:	str	r0, [sp, #12]
   23964:	ldr	r5, [r7, #60]	; 0x3c
   23968:	cmp	r5, #0
   2396c:	beq	23b18 <opt_j+0x1c8>
   23970:	ldr	r0, [r7, #84]	; 0x54
   23974:	cmp	r5, r0
   23978:	bne	239b0 <opt_j+0x60>
   2397c:	ldr	r0, [sp, #12]
   23980:	mov	r1, r5
   23984:	ldr	r0, [r0, #16]
   23988:	bl	23cc8 <use_conflict>
   2398c:	cmp	r0, #0
   23990:	bne	239b0 <opt_j+0x60>
   23994:	ldr	r0, [pc, #388]	; 23b20 <opt_j+0x1d0>
   23998:	mov	r1, #0
   2399c:	mov	r7, r5
   239a0:	add	r0, pc, r0
   239a4:	strb	r1, [r0]
   239a8:	ldr	r0, [sp, #12]
   239ac:	str	r5, [r0, #12]
   239b0:	ldr	r0, [pc, #364]	; 23b24 <opt_j+0x1d4>
   239b4:	add	r0, pc, r0
   239b8:	ldr	r0, [r0, #40]	; 0x28
   239bc:	cmp	r0, #1
   239c0:	str	r0, [sp]
   239c4:	blt	23b18 <opt_j+0x1c8>
   239c8:	ldr	r0, [sp, #12]
   239cc:	mov	ip, #1
   239d0:	ldr	r0, [r0, #8]
   239d4:	str	r0, [sp, #4]
   239d8:	ldr	r6, [pc, #328]	; 23b28 <opt_j+0x1d8>
   239dc:	ldr	r6, [pc, r6]
   239e0:	str	r6, [sp, #8]
   239e4:	add	lr, r7, #84	; 0x54
   239e8:	mov	r1, #0
   239ec:	ldr	r0, [sp, #4]
   239f0:	str	r1, [sp, #16]
   239f4:	ldr	r4, [r0, r1, lsl #2]
   239f8:	cmp	r4, #0
   239fc:	beq	23ad8 <opt_j+0x188>
   23a00:	ldr	r0, [sp, #16]
   23a04:	ldr	r8, [r7, #8]
   23a08:	lsl	r9, r0, #5
   23a0c:	rbit	r0, r4
   23a10:	clz	sl, r0
   23a14:	orr	r0, sl, r9
   23a18:	ldr	r2, [r6, r0, lsl #2]
   23a1c:	mov	r0, #0
   23a20:	ldr	r1, [r2, #4]
   23a24:	cmn	r1, #1
   23a28:	mov	r3, r1
   23a2c:	movwgt	r0, #1
   23a30:	cmp	r1, #0
   23a34:	rsbmi	r3, r1, #0
   23a38:	cmp	r8, r3
   23a3c:	bne	23acc <opt_j+0x17c>
   23a40:	ldr	r2, [r2, #16]
   23a44:	ldr	r3, [r7, #200]	; 0xc8
   23a48:	ldr	r5, [r2, #200]	; 0xc8
   23a4c:	cmp	r3, r5
   23a50:	bne	23acc <opt_j+0x17c>
   23a54:	ldr	r2, [r2, #132]	; 0x84
   23a58:	ldr	r3, [r7, #132]	; 0x84
   23a5c:	cmp	r3, r2
   23a60:	bne	23a80 <opt_j+0x130>
   23a64:	cmp	r1, #0
   23a68:	mov	r0, lr
   23a6c:	addge	r0, r7, #60	; 0x3c
   23a70:	ldr	r5, [r0]
   23a74:	cmp	r5, #0
   23a78:	bne	23aa4 <opt_j+0x154>
   23a7c:	b	23acc <opt_j+0x17c>
   23a80:	subs	r1, r8, #21
   23a84:	eor	r0, r0, #1
   23a88:	movwne	r1, #1
   23a8c:	orrs	r0, r1, r0
   23a90:	mov	r0, lr
   23a94:	bne	23acc <opt_j+0x17c>
   23a98:	ldr	r5, [r0]
   23a9c:	cmp	r5, #0
   23aa0:	beq	23acc <opt_j+0x17c>
   23aa4:	ldr	r0, [sp, #12]
   23aa8:	mov	r1, r5
   23aac:	mov	r6, lr
   23ab0:	ldr	r0, [r0, #16]
   23ab4:	bl	23cc8 <use_conflict>
   23ab8:	mov	lr, r6
   23abc:	ldr	r6, [sp, #8]
   23ac0:	mov	ip, #1
   23ac4:	cmp	r0, #0
   23ac8:	beq	23af0 <opt_j+0x1a0>
   23acc:	bic	r4, r4, ip, lsl sl
   23ad0:	cmp	r4, #0
   23ad4:	bne	23a0c <opt_j+0xbc>
   23ad8:	ldr	r1, [sp, #16]
   23adc:	ldr	r0, [sp]
   23ae0:	add	r1, r1, #1
   23ae4:	cmp	r1, r0
   23ae8:	blt	239ec <opt_j+0x9c>
   23aec:	b	23b18 <opt_j+0x1c8>
   23af0:	ldr	r0, [pc, #52]	; 23b2c <opt_j+0x1dc>
   23af4:	mov	r1, #0
   23af8:	mov	r7, r5
   23afc:	add	r0, pc, r0
   23b00:	strb	r1, [r0]
   23b04:	ldr	r0, [sp, #12]
   23b08:	str	r5, [r0, #12]
   23b0c:	ldr	r0, [r5, #60]	; 0x3c
   23b10:	cmp	r0, #0
   23b14:	bne	239e4 <opt_j+0x94>
   23b18:	sub	sp, fp, #28
   23b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b20:	.word	0x00022f0c
   23b24:	.word	0x00022ef8
   23b28:	.word	0x00022fcc
   23b2c:	.word	0x00022db0

00023b30 <deadstmt>:
   23b30:	push	{r4, sl, fp, lr}
   23b34:	add	fp, sp, #8
   23b38:	ldr	r3, [r0]
   23b3c:	cmn	r3, #1
   23b40:	beq	23c90 <deadstmt+0x160>
   23b44:	and	r2, r3, #7
   23b48:	sub	r2, r2, #2
   23b4c:	cmp	r2, #5
   23b50:	bhi	23b88 <deadstmt+0x58>
   23b54:	add	lr, pc, #8
   23b58:	mov	ip, #16
   23b5c:	ldr	r2, [lr, r2, lsl #2]
   23b60:	add	pc, lr, r2
   23b64:	.word	0x00000118
   23b68:	.word	0x000000dc
   23b6c:	.word	0x00000018
   23b70:	.word	0x00000018
   23b74:	.word	0x000000e4
   23b78:	.word	0x00000108
   23b7c:	tst	r3, #8
   23b80:	bne	23bb4 <deadstmt+0x84>
   23b84:	b	23c7c <deadstmt+0x14c>
   23b88:	and	r2, r3, #224	; 0xe0
   23b8c:	cmp	r2, #64	; 0x40
   23b90:	beq	23c40 <deadstmt+0x110>
   23b94:	cmp	r2, #96	; 0x60
   23b98:	bne	23c84 <deadstmt+0x154>
   23b9c:	ldr	r3, [r0, #12]
   23ba0:	cmp	r3, #0
   23ba4:	blt	23c84 <deadstmt+0x154>
   23ba8:	cmp	r3, #18
   23bac:	mov	ip, r3
   23bb0:	bne	23c7c <deadstmt+0x14c>
   23bb4:	mov	r2, #0
   23bb8:	str	r2, [r1, #64]	; 0x40
   23bbc:	str	r2, [r1, #68]	; 0x44
   23bc0:	ldr	r3, [r0]
   23bc4:	cmn	r3, #1
   23bc8:	beq	23c90 <deadstmt+0x160>
   23bcc:	and	lr, r3, #7
   23bd0:	cmp	lr, #7
   23bd4:	bhi	23c90 <deadstmt+0x160>
   23bd8:	add	r4, pc, #8
   23bdc:	mov	ip, #16
   23be0:	ldr	r2, [r4, lr, lsl #2]
   23be4:	add	pc, r4, r2
   23be8:	.word	0x0000002c
   23bec:	.word	0x000000ac
   23bf0:	.word	0x00000020
   23bf4:	.word	0x00000020
   23bf8:	.word	0x0000002c
   23bfc:	.word	0x000000a8
   23c00:	.word	0x000000a8
   23c04:	.word	0x000000c0
   23c08:	ldr	ip, [r0, #12]
   23c0c:	cmp	ip, #0
   23c10:	poplt	{r4, sl, fp, pc}
   23c14:	ldr	r3, [r1, ip, lsl #2]
   23c18:	cmp	r3, #0
   23c1c:	beq	23c38 <deadstmt+0x108>
   23c20:	ldr	r2, [pc, #156]	; 23cc4 <deadstmt+0x194>
   23c24:	mov	r4, #0
   23c28:	add	r2, pc, r2
   23c2c:	strb	r4, [r2]
   23c30:	mvn	r2, #0
   23c34:	str	r2, [r3]
   23c38:	str	r0, [r1, ip, lsl #2]
   23c3c:	pop	{r4, sl, fp, pc}
   23c40:	mov	ip, #17
   23c44:	b	23c7c <deadstmt+0x14c>
   23c48:	and	r2, r3, #24
   23c4c:	mvn	r3, #0
   23c50:	cmp	r2, #8
   23c54:	movweq	r3, #17
   23c58:	cmp	r2, #16
   23c5c:	beq	23c7c <deadstmt+0x14c>
   23c60:	cmp	r3, #0
   23c64:	bge	23ba8 <deadstmt+0x78>
   23c68:	b	23c84 <deadstmt+0x154>
   23c6c:	and	r2, r3, #248	; 0xf8
   23c70:	mov	ip, #16
   23c74:	cmp	r2, #128	; 0x80
   23c78:	movweq	ip, #17
   23c7c:	mov	r2, #0
   23c80:	str	r2, [r1, ip, lsl #2]
   23c84:	ldr	r3, [r0]
   23c88:	cmn	r3, #1
   23c8c:	bne	23bcc <deadstmt+0x9c>
   23c90:	pop	{r4, sl, fp, pc}
   23c94:	mov	ip, #17
   23c98:	ldr	r3, [r1, ip, lsl #2]
   23c9c:	cmp	r3, #0
   23ca0:	bne	23c20 <deadstmt+0xf0>
   23ca4:	b	23c38 <deadstmt+0x108>
   23ca8:	mov	ip, #16
   23cac:	tst	r3, #248	; 0xf8
   23cb0:	movweq	ip, #17
   23cb4:	ldr	r3, [r1, ip, lsl #2]
   23cb8:	cmp	r3, #0
   23cbc:	bne	23c20 <deadstmt+0xf0>
   23cc0:	b	23c38 <deadstmt+0x108>
   23cc4:	.word	0x00022c84

00023cc8 <use_conflict>:
   23cc8:	push	{fp, lr}
   23ccc:	mov	fp, sp
   23cd0:	ldr	ip, [r1, #128]	; 0x80
   23cd4:	mov	r2, #0
   23cd8:	cmp	ip, #0
   23cdc:	beq	23ee4 <use_conflict+0x21c>
   23ce0:	tst	ip, #1
   23ce4:	beq	23cfc <use_conflict+0x34>
   23ce8:	ldr	lr, [r1, #136]	; 0x88
   23cec:	ldr	r3, [r0, #136]	; 0x88
   23cf0:	mov	r2, #1
   23cf4:	cmp	r3, lr
   23cf8:	bne	23ee4 <use_conflict+0x21c>
   23cfc:	tst	ip, #2
   23d00:	beq	23d18 <use_conflict+0x50>
   23d04:	ldr	lr, [r1, #140]	; 0x8c
   23d08:	ldr	r3, [r0, #140]	; 0x8c
   23d0c:	mov	r2, #1
   23d10:	cmp	r3, lr
   23d14:	bne	23ee4 <use_conflict+0x21c>
   23d18:	tst	ip, #4
   23d1c:	beq	23d34 <use_conflict+0x6c>
   23d20:	ldr	lr, [r1, #144]	; 0x90
   23d24:	ldr	r3, [r0, #144]	; 0x90
   23d28:	mov	r2, #1
   23d2c:	cmp	r3, lr
   23d30:	bne	23ee4 <use_conflict+0x21c>
   23d34:	tst	ip, #8
   23d38:	beq	23d50 <use_conflict+0x88>
   23d3c:	ldr	lr, [r1, #148]	; 0x94
   23d40:	ldr	r3, [r0, #148]	; 0x94
   23d44:	mov	r2, #1
   23d48:	cmp	r3, lr
   23d4c:	bne	23ee4 <use_conflict+0x21c>
   23d50:	tst	ip, #16
   23d54:	beq	23d6c <use_conflict+0xa4>
   23d58:	ldr	lr, [r1, #152]	; 0x98
   23d5c:	ldr	r3, [r0, #152]	; 0x98
   23d60:	mov	r2, #1
   23d64:	cmp	r3, lr
   23d68:	bne	23ee4 <use_conflict+0x21c>
   23d6c:	tst	ip, #32
   23d70:	beq	23d88 <use_conflict+0xc0>
   23d74:	ldr	lr, [r1, #156]	; 0x9c
   23d78:	ldr	r3, [r0, #156]	; 0x9c
   23d7c:	mov	r2, #1
   23d80:	cmp	r3, lr
   23d84:	bne	23ee4 <use_conflict+0x21c>
   23d88:	tst	ip, #64	; 0x40
   23d8c:	beq	23da4 <use_conflict+0xdc>
   23d90:	ldr	lr, [r1, #160]	; 0xa0
   23d94:	ldr	r3, [r0, #160]	; 0xa0
   23d98:	mov	r2, #1
   23d9c:	cmp	r3, lr
   23da0:	bne	23ee4 <use_conflict+0x21c>
   23da4:	tst	ip, #128	; 0x80
   23da8:	beq	23dc0 <use_conflict+0xf8>
   23dac:	ldr	lr, [r1, #164]	; 0xa4
   23db0:	ldr	r3, [r0, #164]	; 0xa4
   23db4:	mov	r2, #1
   23db8:	cmp	r3, lr
   23dbc:	bne	23ee4 <use_conflict+0x21c>
   23dc0:	tst	ip, #256	; 0x100
   23dc4:	beq	23ddc <use_conflict+0x114>
   23dc8:	ldr	lr, [r1, #168]	; 0xa8
   23dcc:	ldr	r3, [r0, #168]	; 0xa8
   23dd0:	mov	r2, #1
   23dd4:	cmp	r3, lr
   23dd8:	bne	23ee4 <use_conflict+0x21c>
   23ddc:	tst	ip, #512	; 0x200
   23de0:	beq	23df8 <use_conflict+0x130>
   23de4:	ldr	lr, [r1, #172]	; 0xac
   23de8:	ldr	r3, [r0, #172]	; 0xac
   23dec:	mov	r2, #1
   23df0:	cmp	r3, lr
   23df4:	bne	23ee4 <use_conflict+0x21c>
   23df8:	tst	ip, #1024	; 0x400
   23dfc:	beq	23e14 <use_conflict+0x14c>
   23e00:	ldr	lr, [r1, #176]	; 0xb0
   23e04:	ldr	r3, [r0, #176]	; 0xb0
   23e08:	mov	r2, #1
   23e0c:	cmp	r3, lr
   23e10:	bne	23ee4 <use_conflict+0x21c>
   23e14:	tst	ip, #2048	; 0x800
   23e18:	beq	23e30 <use_conflict+0x168>
   23e1c:	ldr	lr, [r1, #180]	; 0xb4
   23e20:	ldr	r3, [r0, #180]	; 0xb4
   23e24:	mov	r2, #1
   23e28:	cmp	r3, lr
   23e2c:	bne	23ee4 <use_conflict+0x21c>
   23e30:	tst	ip, #4096	; 0x1000
   23e34:	beq	23e4c <use_conflict+0x184>
   23e38:	ldr	lr, [r1, #184]	; 0xb8
   23e3c:	ldr	r3, [r0, #184]	; 0xb8
   23e40:	mov	r2, #1
   23e44:	cmp	r3, lr
   23e48:	bne	23ee4 <use_conflict+0x21c>
   23e4c:	tst	ip, #8192	; 0x2000
   23e50:	beq	23e68 <use_conflict+0x1a0>
   23e54:	ldr	lr, [r1, #188]	; 0xbc
   23e58:	ldr	r3, [r0, #188]	; 0xbc
   23e5c:	mov	r2, #1
   23e60:	cmp	r3, lr
   23e64:	bne	23ee4 <use_conflict+0x21c>
   23e68:	tst	ip, #16384	; 0x4000
   23e6c:	beq	23e84 <use_conflict+0x1bc>
   23e70:	ldr	lr, [r1, #192]	; 0xc0
   23e74:	ldr	r3, [r0, #192]	; 0xc0
   23e78:	mov	r2, #1
   23e7c:	cmp	r3, lr
   23e80:	bne	23ee4 <use_conflict+0x21c>
   23e84:	tst	ip, #32768	; 0x8000
   23e88:	beq	23ea0 <use_conflict+0x1d8>
   23e8c:	ldr	lr, [r1, #196]	; 0xc4
   23e90:	ldr	r3, [r0, #196]	; 0xc4
   23e94:	mov	r2, #1
   23e98:	cmp	r3, lr
   23e9c:	bne	23ee4 <use_conflict+0x21c>
   23ea0:	tst	ip, #65536	; 0x10000
   23ea4:	beq	23ebc <use_conflict+0x1f4>
   23ea8:	ldr	lr, [r1, #200]	; 0xc8
   23eac:	ldr	r3, [r0, #200]	; 0xc8
   23eb0:	mov	r2, #1
   23eb4:	cmp	r3, lr
   23eb8:	bne	23ee4 <use_conflict+0x21c>
   23ebc:	tst	ip, #131072	; 0x20000
   23ec0:	bne	23ed0 <use_conflict+0x208>
   23ec4:	mov	r2, #0
   23ec8:	mov	r0, r2
   23ecc:	pop	{fp, pc}
   23ed0:	ldr	r1, [r1, #204]	; 0xcc
   23ed4:	ldr	r0, [r0, #204]	; 0xcc
   23ed8:	mov	r2, #1
   23edc:	cmp	r0, r1
   23ee0:	moveq	r2, #0
   23ee4:	mov	r0, r2
   23ee8:	pop	{fp, pc}

00023eec <make_marks>:
   23eec:	push	{r4, r5, fp, lr}
   23ef0:	add	fp, sp, #8
   23ef4:	mov	r4, r0
   23ef8:	ldr	r0, [pc, #52]	; 23f34 <make_marks+0x48>
   23efc:	add	r0, pc, r0
   23f00:	ldr	r5, [r0, #4]
   23f04:	b	23f14 <make_marks+0x28>
   23f08:	ldr	r0, [r4, #60]	; 0x3c
   23f0c:	bl	23eec <make_marks>
   23f10:	ldr	r4, [r4, #84]	; 0x54
   23f14:	ldr	r0, [r4, #24]
   23f18:	cmp	r0, r5
   23f1c:	strne	r5, [r4, #24]
   23f20:	ldrne	r0, [r4, #8]
   23f24:	andne	r0, r0, #7
   23f28:	cmpne	r0, #6
   23f2c:	bne	23f08 <make_marks+0x1c>
   23f30:	pop	{r4, r5, fp, pc}
   23f34:	.word	0x000229b0

00023f38 <count_blocks>:
   23f38:	push	{r4, r5, fp, lr}
   23f3c:	add	fp, sp, #8
   23f40:	cmp	r0, #0
   23f44:	beq	23f64 <count_blocks+0x2c>
   23f48:	mov	r4, r0
   23f4c:	ldr	r0, [pc, #60]	; 23f90 <count_blocks+0x58>
   23f50:	ldr	r1, [r4, #24]
   23f54:	add	r0, pc, r0
   23f58:	ldr	r0, [r0, #4]
   23f5c:	cmp	r1, r0
   23f60:	bne	23f6c <count_blocks+0x34>
   23f64:	mov	r0, #0
   23f68:	pop	{r4, r5, fp, pc}
   23f6c:	str	r0, [r4, #24]
   23f70:	ldr	r0, [r4, #60]	; 0x3c
   23f74:	bl	23f38 <count_blocks>
   23f78:	mov	r5, r0
   23f7c:	ldr	r0, [r4, #84]	; 0x54
   23f80:	bl	23f38 <count_blocks>
   23f84:	add	r0, r5, r0
   23f88:	add	r0, r0, #1
   23f8c:	pop	{r4, r5, fp, pc}
   23f90:	.word	0x00022958

00023f94 <number_blks_r>:
   23f94:	push	{r4, r5, r6, sl, fp, lr}
   23f98:	add	fp, sp, #16
   23f9c:	cmp	r0, #0
   23fa0:	beq	23ff4 <number_blks_r+0x60>
   23fa4:	ldr	r5, [pc, #76]	; 23ff8 <number_blks_r+0x64>
   23fa8:	mov	r4, r0
   23fac:	add	r5, pc, r5
   23fb0:	ldr	r6, [r5, #4]
   23fb4:	ldr	r0, [r4, #24]
   23fb8:	cmp	r0, r6
   23fbc:	popeq	{r4, r5, r6, sl, fp, pc}
   23fc0:	str	r6, [r4, #24]
   23fc4:	ldr	r0, [r5, #16]
   23fc8:	add	r1, r0, #1
   23fcc:	str	r1, [r5, #16]
   23fd0:	str	r0, [r4]
   23fd4:	ldr	r1, [pc, #32]	; 23ffc <number_blks_r+0x68>
   23fd8:	ldr	r1, [pc, r1]
   23fdc:	str	r4, [r1, r0, lsl #2]
   23fe0:	ldr	r0, [r4, #60]	; 0x3c
   23fe4:	bl	23f94 <number_blks_r>
   23fe8:	ldr	r4, [r4, #84]	; 0x54
   23fec:	cmp	r4, #0
   23ff0:	bne	23fb4 <number_blks_r+0x20>
   23ff4:	pop	{r4, r5, r6, sl, fp, pc}
   23ff8:	.word	0x00022900
   23ffc:	.word	0x000229cc

00024000 <sfbpf_strcasecmp>:
   24000:	push	{fp, lr}
   24004:	mov	fp, sp
   24008:	ldr	ip, [pc, #52]	; 24044 <sfbpf_strcasecmp+0x44>
   2400c:	add	ip, pc, ip
   24010:	ldrb	r2, [r1]
   24014:	ldrb	r3, [r0]
   24018:	ldrb	lr, [ip, r2]
   2401c:	ldrb	r2, [ip, r3]
   24020:	cmp	r2, lr
   24024:	subne	r0, r2, lr
   24028:	popne	{fp, pc}
   2402c:	add	r0, r0, #1
   24030:	cmp	r3, #0
   24034:	add	r1, r1, #1
   24038:	moveq	r0, #0
   2403c:	popeq	{fp, pc}
   24040:	b	24010 <sfbpf_strcasecmp+0x10>
   24044:	.word	0x00005fae

00024048 <pcap_next_etherent>:
   24048:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2404c:	add	fp, sp, #24
   24050:	ldr	r8, [pc, #1192]	; 24500 <pcap_next_etherent+0x4b8>
   24054:	mov	r5, r0
   24058:	vmov.i32	q8, #0	; 0x00000000
   2405c:	mov	r0, #112	; 0x70
   24060:	add	r8, pc, r8
   24064:	mov	r1, r8
   24068:	vst1.64	{d16-d17}, [r1], r0
   2406c:	add	r0, r8, #96	; 0x60
   24070:	vst1.64	{d16-d17}, [r0]
   24074:	add	r0, r8, #80	; 0x50
   24078:	vst1.64	{d16-d17}, [r1]
   2407c:	vst1.64	{d16-d17}, [r0]
   24080:	add	r0, r8, #64	; 0x40
   24084:	vst1.64	{d16-d17}, [r0]
   24088:	add	r0, r8, #48	; 0x30
   2408c:	vst1.64	{d16-d17}, [r0]
   24090:	add	r0, r8, #32
   24094:	vst1.64	{d16-d17}, [r0]
   24098:	add	r0, r8, #16
   2409c:	vst1.64	{d16-d17}, [r0]
   240a0:	mov	r0, r5
   240a4:	bl	1018 <getc@plt>
   240a8:	mov	r7, r0
   240ac:	bl	f34 <__ctype_b_loc@plt>
   240b0:	mov	r6, r0
   240b4:	ldr	r0, [r0]
   240b8:	cmp	r7, #10
   240bc:	add	r0, r0, r7, lsl #1
   240c0:	ldrh	r1, [r0]
   240c4:	andsne	r0, r1, #8192	; 0x2000
   240c8:	bne	240a0 <pcap_next_etherent+0x58>
   240cc:	mov	r0, #10
   240d0:	cmp	r7, #10
   240d4:	beq	24484 <pcap_next_etherent+0x43c>
   240d8:	tst	r1, #4096	; 0x1000
   240dc:	bne	240fc <pcap_next_etherent+0xb4>
   240e0:	mov	r0, r5
   240e4:	bl	1018 <getc@plt>
   240e8:	cmn	r0, #1
   240ec:	beq	24484 <pcap_next_etherent+0x43c>
   240f0:	cmp	r0, #10
   240f4:	bne	240e0 <pcap_next_etherent+0x98>
   240f8:	b	24484 <pcap_next_etherent+0x43c>
   240fc:	mvn	r0, #47	; 0x2f
   24100:	tst	r1, #2048	; 0x800
   24104:	bne	24114 <pcap_next_etherent+0xcc>
   24108:	tst	r1, #512	; 0x200
   2410c:	mvn	r0, #86	; 0x56
   24110:	mvneq	r0, #54	; 0x36
   24114:	add	r7, r7, r0
   24118:	mov	r0, r5
   2411c:	bl	1018 <getc@plt>
   24120:	ldr	r1, [r6]
   24124:	add	r1, r1, r0, lsl #1
   24128:	ldrh	r2, [r1]
   2412c:	tst	r2, #4096	; 0x1000
   24130:	beq	24160 <pcap_next_etherent+0x118>
   24134:	lsl	r1, r7, #4
   24138:	mvn	r3, #47	; 0x2f
   2413c:	tst	r2, #2048	; 0x800
   24140:	bne	24150 <pcap_next_etherent+0x108>
   24144:	tst	r2, #512	; 0x200
   24148:	mvn	r3, #86	; 0x56
   2414c:	mvneq	r3, #54	; 0x36
   24150:	add	r0, r0, r3
   24154:	orr	r7, r0, r1
   24158:	mov	r0, r5
   2415c:	bl	1018 <getc@plt>
   24160:	cmp	r0, #58	; 0x3a
   24164:	strb	r7, [r8]
   24168:	bne	24408 <pcap_next_etherent+0x3c0>
   2416c:	mov	r0, r5
   24170:	bl	1018 <getc@plt>
   24174:	ldr	r1, [r6]
   24178:	add	r1, r1, r0, lsl #1
   2417c:	ldrh	r2, [r1]
   24180:	mvn	r1, #47	; 0x2f
   24184:	tst	r2, #2048	; 0x800
   24188:	bne	24198 <pcap_next_etherent+0x150>
   2418c:	tst	r2, #512	; 0x200
   24190:	mvn	r1, #86	; 0x56
   24194:	mvneq	r1, #54	; 0x36
   24198:	add	r7, r0, r1
   2419c:	mov	r0, r5
   241a0:	bl	1018 <getc@plt>
   241a4:	ldr	r1, [r6]
   241a8:	add	r1, r1, r0, lsl #1
   241ac:	ldrh	r2, [r1]
   241b0:	tst	r2, #4096	; 0x1000
   241b4:	beq	241e4 <pcap_next_etherent+0x19c>
   241b8:	lsl	r1, r7, #4
   241bc:	mvn	r3, #47	; 0x2f
   241c0:	tst	r2, #2048	; 0x800
   241c4:	bne	241d4 <pcap_next_etherent+0x18c>
   241c8:	tst	r2, #512	; 0x200
   241cc:	mvn	r3, #86	; 0x56
   241d0:	mvneq	r3, #54	; 0x36
   241d4:	add	r0, r0, r3
   241d8:	orr	r7, r0, r1
   241dc:	mov	r0, r5
   241e0:	bl	1018 <getc@plt>
   241e4:	cmp	r0, #58	; 0x3a
   241e8:	strb	r7, [r8, #1]
   241ec:	bne	24408 <pcap_next_etherent+0x3c0>
   241f0:	mov	r0, r5
   241f4:	bl	1018 <getc@plt>
   241f8:	ldr	r1, [r6]
   241fc:	add	r1, r1, r0, lsl #1
   24200:	ldrh	r2, [r1]
   24204:	mvn	r1, #47	; 0x2f
   24208:	tst	r2, #2048	; 0x800
   2420c:	bne	2421c <pcap_next_etherent+0x1d4>
   24210:	tst	r2, #512	; 0x200
   24214:	mvn	r1, #86	; 0x56
   24218:	mvneq	r1, #54	; 0x36
   2421c:	add	r7, r0, r1
   24220:	mov	r0, r5
   24224:	bl	1018 <getc@plt>
   24228:	ldr	r1, [r6]
   2422c:	add	r1, r1, r0, lsl #1
   24230:	ldrh	r2, [r1]
   24234:	tst	r2, #4096	; 0x1000
   24238:	beq	24268 <pcap_next_etherent+0x220>
   2423c:	lsl	r1, r7, #4
   24240:	mvn	r3, #47	; 0x2f
   24244:	tst	r2, #2048	; 0x800
   24248:	bne	24258 <pcap_next_etherent+0x210>
   2424c:	tst	r2, #512	; 0x200
   24250:	mvn	r3, #86	; 0x56
   24254:	mvneq	r3, #54	; 0x36
   24258:	add	r0, r0, r3
   2425c:	orr	r7, r0, r1
   24260:	mov	r0, r5
   24264:	bl	1018 <getc@plt>
   24268:	cmp	r0, #58	; 0x3a
   2426c:	strb	r7, [r8, #2]
   24270:	bne	24408 <pcap_next_etherent+0x3c0>
   24274:	mov	r0, r5
   24278:	bl	1018 <getc@plt>
   2427c:	ldr	r1, [r6]
   24280:	add	r1, r1, r0, lsl #1
   24284:	ldrh	r2, [r1]
   24288:	mvn	r1, #47	; 0x2f
   2428c:	tst	r2, #2048	; 0x800
   24290:	bne	242a0 <pcap_next_etherent+0x258>
   24294:	tst	r2, #512	; 0x200
   24298:	mvn	r1, #86	; 0x56
   2429c:	mvneq	r1, #54	; 0x36
   242a0:	add	r7, r0, r1
   242a4:	mov	r0, r5
   242a8:	bl	1018 <getc@plt>
   242ac:	ldr	r1, [r6]
   242b0:	add	r1, r1, r0, lsl #1
   242b4:	ldrh	r2, [r1]
   242b8:	tst	r2, #4096	; 0x1000
   242bc:	beq	242ec <pcap_next_etherent+0x2a4>
   242c0:	lsl	r1, r7, #4
   242c4:	mvn	r3, #47	; 0x2f
   242c8:	tst	r2, #2048	; 0x800
   242cc:	bne	242dc <pcap_next_etherent+0x294>
   242d0:	tst	r2, #512	; 0x200
   242d4:	mvn	r3, #86	; 0x56
   242d8:	mvneq	r3, #54	; 0x36
   242dc:	add	r0, r0, r3
   242e0:	orr	r7, r0, r1
   242e4:	mov	r0, r5
   242e8:	bl	1018 <getc@plt>
   242ec:	cmp	r0, #58	; 0x3a
   242f0:	strb	r7, [r8, #3]
   242f4:	bne	24408 <pcap_next_etherent+0x3c0>
   242f8:	mov	r0, r5
   242fc:	bl	1018 <getc@plt>
   24300:	ldr	r1, [r6]
   24304:	add	r1, r1, r0, lsl #1
   24308:	ldrh	r2, [r1]
   2430c:	mvn	r1, #47	; 0x2f
   24310:	tst	r2, #2048	; 0x800
   24314:	bne	24324 <pcap_next_etherent+0x2dc>
   24318:	tst	r2, #512	; 0x200
   2431c:	mvn	r1, #86	; 0x56
   24320:	mvneq	r1, #54	; 0x36
   24324:	add	r7, r0, r1
   24328:	mov	r0, r5
   2432c:	bl	1018 <getc@plt>
   24330:	ldr	r1, [r6]
   24334:	add	r1, r1, r0, lsl #1
   24338:	ldrh	r2, [r1]
   2433c:	tst	r2, #4096	; 0x1000
   24340:	beq	24370 <pcap_next_etherent+0x328>
   24344:	lsl	r1, r7, #4
   24348:	mvn	r3, #47	; 0x2f
   2434c:	tst	r2, #2048	; 0x800
   24350:	bne	24360 <pcap_next_etherent+0x318>
   24354:	tst	r2, #512	; 0x200
   24358:	mvn	r3, #86	; 0x56
   2435c:	mvneq	r3, #54	; 0x36
   24360:	add	r0, r0, r3
   24364:	orr	r7, r0, r1
   24368:	mov	r0, r5
   2436c:	bl	1018 <getc@plt>
   24370:	cmp	r0, #58	; 0x3a
   24374:	strb	r7, [r8, #4]
   24378:	bne	24408 <pcap_next_etherent+0x3c0>
   2437c:	mov	r0, r5
   24380:	bl	1018 <getc@plt>
   24384:	ldr	r1, [r6]
   24388:	add	r1, r1, r0, lsl #1
   2438c:	ldrh	r2, [r1]
   24390:	mvn	r1, #47	; 0x2f
   24394:	tst	r2, #2048	; 0x800
   24398:	bne	243a8 <pcap_next_etherent+0x360>
   2439c:	tst	r2, #512	; 0x200
   243a0:	mvn	r1, #86	; 0x56
   243a4:	mvneq	r1, #54	; 0x36
   243a8:	add	r7, r0, r1
   243ac:	mov	r0, r5
   243b0:	bl	1018 <getc@plt>
   243b4:	ldr	r1, [r6]
   243b8:	add	r1, r1, r0, lsl #1
   243bc:	ldrh	r2, [r1]
   243c0:	tst	r2, #4096	; 0x1000
   243c4:	beq	243f4 <pcap_next_etherent+0x3ac>
   243c8:	lsl	r1, r7, #4
   243cc:	mvn	r3, #47	; 0x2f
   243d0:	tst	r2, #2048	; 0x800
   243d4:	bne	243e4 <pcap_next_etherent+0x39c>
   243d8:	tst	r2, #512	; 0x200
   243dc:	mvn	r3, #86	; 0x56
   243e0:	mvneq	r3, #54	; 0x36
   243e4:	add	r0, r0, r3
   243e8:	orr	r7, r0, r1
   243ec:	mov	r0, r5
   243f0:	bl	1018 <getc@plt>
   243f4:	cmp	r0, #58	; 0x3a
   243f8:	strb	r7, [r8, #5]
   243fc:	bne	24408 <pcap_next_etherent+0x3c0>
   24400:	mov	r0, r5
   24404:	bl	1018 <getc@plt>
   24408:	cmn	r0, #1
   2440c:	beq	2448c <pcap_next_etherent+0x444>
   24410:	ldr	r1, [r6]
   24414:	add	r0, r1, r0, lsl #1
   24418:	ldrb	r0, [r0, #1]
   2441c:	tst	r0, #32
   24420:	bne	24440 <pcap_next_etherent+0x3f8>
   24424:	mov	r0, r5
   24428:	bl	1018 <getc@plt>
   2442c:	cmn	r0, #1
   24430:	beq	24484 <pcap_next_etherent+0x43c>
   24434:	cmp	r0, #10
   24438:	bne	24424 <pcap_next_etherent+0x3dc>
   2443c:	b	24484 <pcap_next_etherent+0x43c>
   24440:	mov	r0, r5
   24444:	bl	1018 <getc@plt>
   24448:	cmp	r0, #10
   2444c:	ldrne	r1, [r6]
   24450:	addne	r1, r1, r0, lsl #1
   24454:	ldrhne	r1, [r1]
   24458:	andsne	r1, r1, #8192	; 0x2000
   2445c:	bne	24440 <pcap_next_etherent+0x3f8>
   24460:	cmp	r0, #10
   24464:	beq	24484 <pcap_next_etherent+0x43c>
   24468:	cmp	r0, #35	; 0x23
   2446c:	bne	24498 <pcap_next_etherent+0x450>
   24470:	mov	r0, r5
   24474:	bl	1018 <getc@plt>
   24478:	cmn	r0, #1
   2447c:	cmpne	r0, #10
   24480:	bne	24470 <pcap_next_etherent+0x428>
   24484:	cmn	r0, #1
   24488:	bne	240a0 <pcap_next_etherent+0x58>
   2448c:	mov	r8, #0
   24490:	mov	r0, r8
   24494:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24498:	mov	r7, #0
   2449c:	sub	r4, r8, r7
   244a0:	strb	r0, [r4, #6]
   244a4:	mov	r0, r5
   244a8:	bl	1018 <getc@plt>
   244ac:	cmn	r0, #1
   244b0:	beq	244dc <pcap_next_etherent+0x494>
   244b4:	ldr	r1, [r6]
   244b8:	add	r1, r1, r0, lsl #1
   244bc:	ldrh	r1, [r1]
   244c0:	ands	r1, r1, #8192	; 0x2000
   244c4:	bne	244dc <pcap_next_etherent+0x494>
   244c8:	add	r2, r7, #121	; 0x79
   244cc:	sub	r1, r7, #1
   244d0:	cmp	r2, #1
   244d4:	mov	r7, r1
   244d8:	bhi	2449c <pcap_next_etherent+0x454>
   244dc:	mov	r1, #0
   244e0:	strb	r1, [r4, #7]
   244e4:	cmp	r0, #10
   244e8:	beq	24490 <pcap_next_etherent+0x448>
   244ec:	mov	r0, r5
   244f0:	bl	1018 <getc@plt>
   244f4:	cmn	r0, #1
   244f8:	bne	244e4 <pcap_next_etherent+0x49c>
   244fc:	b	24490 <pcap_next_etherent+0x448>
   24500:	.word	0x00022880

00024504 <sfbpf_parse>:
   24504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24508:	add	fp, sp, #28
   2450c:	sub	sp, sp, #564	; 0x234
   24510:	sub	sp, sp, #3072	; 0xc00
   24514:	ldr	r0, [pc, #4072]	; 25504 <sfbpf_parse+0x1000>
   24518:	mvn	r1, #1
   2451c:	sub	r4, fp, #432	; 0x1b0
   24520:	mov	sl, #0
   24524:	add	r9, sp, #32
   24528:	mov	ip, #200	; 0xc8
   2452c:	mov	r6, #15
   24530:	mov	r8, r4
   24534:	add	r0, pc, r0
   24538:	str	r1, [r0]
   2453c:	ldr	r0, [pc, #4036]	; 25508 <sfbpf_parse+0x1004>
   24540:	str	r9, [sp, #20]
   24544:	add	r0, pc, r0
   24548:	str	sl, [r0]
   2454c:	b	24554 <sfbpf_parse+0x50>
   24550:	add	r8, r8, #2
   24554:	add	r0, r4, ip, lsl #1
   24558:	strh	sl, [r8]
   2455c:	sub	r0, r0, #2
   24560:	cmp	r0, r8
   24564:	bhi	2461c <sfbpf_parse+0x118>
   24568:	movw	r0, #9999	; 0x270f
   2456c:	cmp	ip, r0
   24570:	bhi	25e08 <sfbpf_parse+0x1904>
   24574:	lsl	r0, ip, #1
   24578:	movw	r1, #10000	; 0x2710
   2457c:	movw	r7, #10000	; 0x2710
   24580:	cmp	r0, r1
   24584:	lslcc	r7, ip, #1
   24588:	add	r0, r7, r7, lsl #3
   2458c:	add	r0, r6, r0, lsl #1
   24590:	bl	f1c <malloc@plt>
   24594:	cmp	r0, #0
   24598:	beq	25e08 <sfbpf_parse+0x1904>
   2459c:	mov	r5, r0
   245a0:	sub	r0, r8, r4
   245a4:	mov	r1, #1
   245a8:	mov	r8, r4
   245ac:	add	r4, r1, r0, asr #1
   245b0:	asr	r9, r0, #1
   245b4:	mov	r0, r5
   245b8:	mov	r1, r8
   245bc:	lsl	r2, r4, #1
   245c0:	bl	ec8 <memcpy@plt>
   245c4:	add	r0, r6, r7, lsl #1
   245c8:	ldr	r1, [sp, #20]
   245cc:	lsl	r2, r4, #4
   245d0:	bic	r0, r0, #15
   245d4:	add	r6, r5, r0
   245d8:	mov	r0, r6
   245dc:	bl	ec8 <memcpy@plt>
   245e0:	sub	r0, fp, #432	; 0x1b0
   245e4:	cmp	r8, r0
   245e8:	beq	245f4 <sfbpf_parse+0xf0>
   245ec:	mov	r0, r8
   245f0:	bl	ea4 <free@plt>
   245f4:	add	r0, r5, r7, lsl #1
   245f8:	add	r8, r5, r9, lsl #1
   245fc:	sub	r0, r0, #2
   24600:	cmp	r0, r8
   24604:	bls	25dec <sfbpf_parse+0x18e8>
   24608:	add	r9, r6, r9, lsl #4
   2460c:	str	r6, [sp, #20]
   24610:	mov	ip, r7
   24614:	mov	r4, r5
   24618:	mov	r6, #15
   2461c:	cmp	sl, #3
   24620:	beq	25dd0 <sfbpf_parse+0x18cc>
   24624:	ldr	r0, [pc, #3808]	; 2550c <sfbpf_parse+0x1008>
   24628:	str	r4, [sp, #24]
   2462c:	add	r0, pc, r0
   24630:	add	r0, r0, sl, lsl #1
   24634:	ldrsh	r5, [r0]
   24638:	cmn	r5, #198	; 0xc6
   2463c:	beq	24714 <sfbpf_parse+0x210>
   24640:	ldr	r0, [pc, #3784]	; 25510 <sfbpf_parse+0x100c>
   24644:	ldr	r0, [pc, r0]
   24648:	cmn	r0, #2
   2464c:	bne	24668 <sfbpf_parse+0x164>
   24650:	mov	r7, ip
   24654:	bl	26038 <sfbpf_lex>
   24658:	ldr	r1, [pc, #3764]	; 25514 <sfbpf_parse+0x1010>
   2465c:	mov	ip, r7
   24660:	add	r1, pc, r1
   24664:	str	r0, [r1]
   24668:	cmp	r0, #0
   2466c:	ble	2469c <sfbpf_parse+0x198>
   24670:	lsr	r2, r0, #1
   24674:	mov	r1, #2
   24678:	cmp	r2, #182	; 0xb6
   2467c:	ldrls	r1, [pc, #3732]	; 25518 <sfbpf_parse+0x1014>
   24680:	addls	r1, pc, r1
   24684:	ldrbls	r1, [r1, r0]
   24688:	add	r0, r1, r5
   2468c:	movw	r2, #669	; 0x29d
   24690:	cmp	r0, r2
   24694:	bls	246bc <sfbpf_parse+0x1b8>
   24698:	b	24714 <sfbpf_parse+0x210>
   2469c:	ldr	r0, [pc, #3704]	; 2551c <sfbpf_parse+0x1018>
   246a0:	mov	r1, #0
   246a4:	add	r0, pc, r0
   246a8:	str	r1, [r0]
   246ac:	add	r0, r1, r5
   246b0:	movw	r2, #669	; 0x29d
   246b4:	cmp	r0, r2
   246b8:	bhi	24714 <sfbpf_parse+0x210>
   246bc:	ldr	r2, [pc, #3676]	; 25520 <sfbpf_parse+0x101c>
   246c0:	add	r2, pc, r2
   246c4:	add	r2, r2, r0, lsl #1
   246c8:	ldrsh	r2, [r2]
   246cc:	cmp	r1, r2
   246d0:	bne	24714 <sfbpf_parse+0x210>
   246d4:	ldr	r1, [pc, #3656]	; 25524 <sfbpf_parse+0x1020>
   246d8:	add	r1, pc, r1
   246dc:	add	r0, r1, r0, lsl #1
   246e0:	ldrsh	sl, [r0]
   246e4:	cmp	sl, #0
   246e8:	ble	24aa8 <sfbpf_parse+0x5a4>
   246ec:	ldr	r0, [pc, #3636]	; 25528 <sfbpf_parse+0x1024>
   246f0:	add	r9, r9, #16
   246f4:	mvn	r1, #1
   246f8:	add	r0, pc, r0
   246fc:	vld1.32	{d16-d17}, [r0]
   24700:	ldr	r0, [pc, #3620]	; 2552c <sfbpf_parse+0x1028>
   24704:	add	r0, pc, r0
   24708:	vst1.32	{d16-d17}, [r9]
   2470c:	str	r1, [r0]
   24710:	b	24550 <sfbpf_parse+0x4c>
   24714:	ldr	r0, [pc, #3604]	; 25530 <sfbpf_parse+0x102c>
   24718:	add	r0, pc, r0
   2471c:	ldrb	r7, [r0, sl]
   24720:	cmp	r7, #0
   24724:	beq	25e14 <sfbpf_parse+0x1910>
   24728:	ldr	r0, [pc, #3588]	; 25534 <sfbpf_parse+0x1030>
   2472c:	mov	r1, r9
   24730:	add	r0, pc, r0
   24734:	ldrb	r2, [r0, r7]
   24738:	rsb	r0, r2, #1
   2473c:	ldr	r6, [r1, r0, lsl #4]!
   24740:	sub	r0, r7, #2
   24744:	cmp	r0, #200	; 0xc8
   24748:	ldmib	r1, {r3, lr}
   2474c:	ldr	r1, [r1, #12]
   24750:	lsr	r5, r6, #24
   24754:	lsr	r4, r6, #16
   24758:	lsr	sl, r6, #8
   2475c:	str	r1, [sp, #28]
   24760:	bhi	25ae8 <sfbpf_parse+0x15e4>
   24764:	add	r1, pc, #4
   24768:	ldr	r0, [r1, r0, lsl #2]
   2476c:	add	pc, r1, r0
   24770:	.word	0x00001238
   24774:	.word	0x00001378
   24778:	.word	0x00000c6c
   2477c:	.word	0x00001378
   24780:	.word	0x00000370
   24784:	.word	0x00000370
   24788:	.word	0x00000340
   2478c:	.word	0x00000340
   24790:	.word	0x00000324
   24794:	.word	0x00000324
   24798:	.word	0x00001378
   2479c:	.word	0x000003f0
   247a0:	.word	0x00000324
   247a4:	.word	0x000006ac
   247a8:	.word	0x00000538
   247ac:	.word	0x000005f4
   247b0:	.word	0x0000055c
   247b4:	.word	0x000004fc
   247b8:	.word	0x00001330
   247bc:	.word	0x000012cc
   247c0:	.word	0x000012f0
   247c4:	.word	0x00000418
   247c8:	.word	0x00000324
   247cc:	.word	0x00000324
   247d0:	.word	0x00001378
   247d4:	.word	0x00000370
   247d8:	.word	0x00000340
   247dc:	.word	0x000003f0
   247e0:	.word	0x00001378
   247e4:	.word	0x00001378
   247e8:	.word	0x00000418
   247ec:	.word	0x000005c4
   247f0:	.word	0x000005d4
   247f4:	.word	0x00000464
   247f8:	.word	0x000005e4
   247fc:	.word	0x00000620
   24800:	.word	0x00000464
   24804:	.word	0x00000430
   24808:	.word	0x00000ac0
   2480c:	.word	0x00000630
   24810:	.word	0x00000724
   24814:	.word	0x00000ac8
   24818:	.word	0x00000514
   2481c:	.word	0x000007fc
   24820:	.word	0x0000051c
   24824:	.word	0x00000444
   24828:	.word	0x00000c40
   2482c:	.word	0x00000444
   24830:	.word	0x00001378
   24834:	.word	0x00000754
   24838:	.word	0x000003e4
   2483c:	.word	0x00000388
   24840:	.word	0x00000364
   24844:	.word	0x00000364
   24848:	.word	0x00000358
   2484c:	.word	0x00000358
   24850:	.word	0x000004c0
   24854:	.word	0x000004cc
   24858:	.word	0x000003d8
   2485c:	.word	0x00000474
   24860:	.word	0x000003e4
   24864:	.word	0x00000388
   24868:	.word	0x00000364
   2486c:	.word	0x000003d8
   24870:	.word	0x00000358
   24874:	.word	0x000003e4
   24878:	.word	0x00000388
   2487c:	.word	0x00000364
   24880:	.word	0x00000358
   24884:	.word	0x000004c0
   24888:	.word	0x000004cc
   2488c:	.word	0x000003d8
   24890:	.word	0x00000474
   24894:	.word	0x00000c18
   24898:	.word	0x00000c80
   2489c:	.word	0x00000888
   248a0:	.word	0x000003c4
   248a4:	.word	0x000006dc
   248a8:	.word	0x000003b8
   248ac:	.word	0x00000550
   248b0:	.word	0x000006a0
   248b4:	.word	0x000006e8
   248b8:	.word	0x00000394
   248bc:	.word	0x00001204
   248c0:	.word	0x00000670
   248c4:	.word	0x00001210
   248c8:	.word	0x00001264
   248cc:	.word	0x000012b8
   248d0:	.word	0x000003a0
   248d4:	.word	0x00000458
   248d8:	.word	0x000004d8
   248dc:	.word	0x000004b4
   248e0:	.word	0x000003ac
   248e4:	.word	0x00000bf4
   248e8:	.word	0x00000c00
   248ec:	.word	0x000012ac
   248f0:	.word	0x00000480
   248f4:	.word	0x00000894
   248f8:	.word	0x000004f0
   248fc:	.word	0x0000044c
   24900:	.word	0x0000048c
   24904:	.word	0x000004e4
   24908:	.word	0x00000d50
   2490c:	.word	0x00000684
   24910:	.word	0x00001270
   24914:	.word	0x000006f4
   24918:	.word	0x0000121c
   2491c:	.word	0x000007b8
   24920:	.word	0x0000067c
   24924:	.word	0x000008c4
   24928:	.word	0x00000854
   2492c:	.word	0x000008a0
   24930:	.word	0x000008e0
   24934:	.word	0x000008e8
   24938:	.word	0x0000085c
   2493c:	.word	0x00000bb4
   24940:	.word	0x000003d0
   24944:	.word	0x000003d0
   24948:	.word	0x00000d10
   2494c:	.word	0x00000c24
   24950:	.word	0x0000064c
   24954:	.word	0x00000d78
   24958:	.word	0x000011cc
   2495c:	.word	0x000011e8
   24960:	.word	0x00000818
   24964:	.word	0x000007dc
   24968:	.word	0x00000668
   2496c:	.word	0x00000d5c
   24970:	.word	0x00001378
   24974:	.word	0x00000930
   24978:	.word	0x00001378
   2497c:	.word	0x00000760
   24980:	.word	0x00000dc8
   24984:	.word	0x00001378
   24988:	.word	0x00000a2c
   2498c:	.word	0x000003d0
   24990:	.word	0x000016c8
   24994:	.word	0x000016cc
   24998:	.word	0x000003ac
   2499c:	.word	0x000004a0
   249a0:	.word	0x00000394
   249a4:	.word	0x000003ac
   249a8:	.word	0x000004a0
   249ac:	.word	0x00000394
   249b0:	.word	0x00000c8c
   249b4:	.word	0x00001378
   249b8:	.word	0x00000d2c
   249bc:	.word	0x00000710
   249c0:	.word	0x000007a4
   249c4:	.word	0x00000740
   249c8:	.word	0x000007e8
   249cc:	.word	0x00000874
   249d0:	.word	0x00000bcc
   249d4:	.word	0x00000b00
   249d8:	.word	0x00000be0
   249dc:	.word	0x00000cc0
   249e0:	.word	0x00000cf4
   249e4:	.word	0x000004ac
   249e8:	.word	0x000009c4
   249ec:	.word	0x00000480
   249f0:	.word	0x000009dc
   249f4:	.word	0x00000ca8
   249f8:	.word	0x00000c0c
   249fc:	.word	0x00000b14
   24a00:	.word	0x00001378
   24a04:	.word	0x000004ac
   24a08:	.word	0x000004e4
   24a0c:	.word	0x000004b4
   24a10:	.word	0x000003c4
   24a14:	.word	0x000003b8
   24a18:	.word	0x00000458
   24a1c:	.word	0x000003a0
   24a20:	.word	0x000004d8
   24a24:	.word	0x000004f0
   24a28:	.word	0x0000044c
   24a2c:	.word	0x0000048c
   24a30:	.word	0x00000b20
   24a34:	.word	0x00000cb4
   24a38:	.word	0x00000bac
   24a3c:	.word	0x00000b2c
   24a40:	.word	0x00001378
   24a44:	.word	0x00000840
   24a48:	.word	0x000009f0
   24a4c:	.word	0x00000498
   24a50:	.word	0x00000904
   24a54:	.word	0x00001378
   24a58:	.word	0x00000340
   24a5c:	.word	0x000003c4
   24a60:	.word	0x000003b8
   24a64:	.word	0x000003a0
   24a68:	.word	0x000008bc
   24a6c:	.word	0x00000b34
   24a70:	.word	0x000009e8
   24a74:	.word	0x00000b3c
   24a78:	.word	0x00001378
   24a7c:	.word	0x00000a18
   24a80:	.word	0x00000b44
   24a84:	.word	0x00000498
   24a88:	.word	0x00000b60
   24a8c:	.word	0x00001378
   24a90:	.word	0x00000340
   24a94:	ldr	r6, [r9, #-16]
   24a98:	ldr	r3, [r9, #-12]
   24a9c:	ldr	lr, [r9, #-8]
   24aa0:	ldr	r0, [r9, #-4]
   24aa4:	b	25ad8 <sfbpf_parse+0x15d4>
   24aa8:	rsb	r7, sl, #0
   24aac:	b	24728 <sfbpf_parse+0x224>
   24ab0:	ldr	r0, [r9, #-20]	; 0xffffffec
   24ab4:	ldr	r1, [r9, #12]
   24ab8:	mov	r4, ip
   24abc:	mov	r5, r2
   24ac0:	bl	51a4 <sf_gen_or>
   24ac4:	b	24b98 <sfbpf_parse+0x694>
   24ac8:	mov	sl, #0
   24acc:	mov	r6, #4
   24ad0:	b	25a30 <sfbpf_parse+0x152c>
   24ad4:	mov	sl, #0
   24ad8:	mov	r6, #3
   24adc:	b	25a30 <sfbpf_parse+0x152c>
   24ae0:	ldr	r0, [r9, #-20]	; 0xffffffec
   24ae4:	ldr	r1, [r9, #12]
   24ae8:	mov	r4, ip
   24aec:	mov	r5, r2
   24af0:	bl	50c4 <sf_gen_and>
   24af4:	b	24b98 <sfbpf_parse+0x694>
   24af8:	mov	sl, #0
   24afc:	mov	r6, #2
   24b00:	b	25a30 <sfbpf_parse+0x152c>
   24b04:	mov	sl, #0
   24b08:	mov	r6, #16
   24b0c:	b	25a30 <sfbpf_parse+0x152c>
   24b10:	mov	sl, #0
   24b14:	mov	r6, #24
   24b18:	b	25a30 <sfbpf_parse+0x152c>
   24b1c:	mov	sl, #0
   24b20:	mov	r6, #32
   24b24:	b	25a30 <sfbpf_parse+0x152c>
   24b28:	mov	sl, #0
   24b2c:	mov	r6, #23
   24b30:	b	25a30 <sfbpf_parse+0x152c>
   24b34:	mov	sl, #0
   24b38:	mov	r6, #22
   24b3c:	b	25a30 <sfbpf_parse+0x152c>
   24b40:	ldr	r6, [r9]
   24b44:	b	25adc <sfbpf_parse+0x15d8>
   24b48:	mov	sl, #0
   24b4c:	mov	r6, #7
   24b50:	b	25a30 <sfbpf_parse+0x152c>
   24b54:	mov	sl, #0
   24b58:	mov	r6, #1
   24b5c:	b	25a30 <sfbpf_parse+0x152c>
   24b60:	ldr	r6, [r9, #-16]
   24b64:	ldr	r1, [r9]
   24b68:	str	r2, [sp, #16]
   24b6c:	mov	r0, #0
   24b70:	mov	r4, ip
   24b74:	mov	r5, r3
   24b78:	mov	sl, lr
   24b7c:	mov	r2, r6
   24b80:	bl	116cc <sf_gen_ncode>
   24b84:	b	25ac8 <sfbpf_parse+0x15c4>
   24b88:	ldr	r0, [r9, #12]
   24b8c:	mov	r4, ip
   24b90:	mov	r5, r2
   24b94:	bl	525c <sf_gen_not>
   24b98:	mov	r2, r5
   24b9c:	mov	ip, r4
   24ba0:	ldr	r6, [r9]
   24ba4:	ldr	r3, [r9, #4]
   24ba8:	ldr	lr, [r9, #8]
   24bac:	ldr	r0, [r9, #12]
   24bb0:	b	25ad8 <sfbpf_parse+0x15d4>
   24bb4:	ldr	r0, [r9, #12]
   24bb8:	b	253d8 <sfbpf_parse+0xed4>
   24bbc:	mov	sl, #0
   24bc0:	mov	r6, #28
   24bc4:	b	25a30 <sfbpf_parse+0x152c>
   24bc8:	mov	sl, #0
   24bcc:	mov	r6, #25
   24bd0:	b	25a30 <sfbpf_parse+0x152c>
   24bd4:	ldrb	r6, [r9]
   24bd8:	ldr	sl, [r9, #-16]
   24bdc:	mov	r4, #0
   24be0:	b	25ae8 <sfbpf_parse+0x15e4>
   24be4:	mov	sl, #0
   24be8:	mov	r6, #8
   24bec:	b	25a30 <sfbpf_parse+0x152c>
   24bf0:	mov	sl, #0
   24bf4:	mov	r6, #38	; 0x26
   24bf8:	b	25a30 <sfbpf_parse+0x152c>
   24bfc:	mov	sl, #0
   24c00:	mov	r6, #29
   24c04:	b	25a30 <sfbpf_parse+0x152c>
   24c08:	ldr	r0, [r9, #-4]
   24c0c:	b	253d8 <sfbpf_parse+0xed4>
   24c10:	mov	sl, #0
   24c14:	mov	r6, #48	; 0x30
   24c18:	b	25a30 <sfbpf_parse+0x152c>
   24c1c:	ldr	r6, [r9, #-16]
   24c20:	b	25adc <sfbpf_parse+0x15d8>
   24c24:	mov	sl, #0
   24c28:	mov	r6, #31
   24c2c:	b	25a30 <sfbpf_parse+0x152c>
   24c30:	mov	sl, #0
   24c34:	mov	r6, #5
   24c38:	b	25a30 <sfbpf_parse+0x152c>
   24c3c:	mov	sl, #0
   24c40:	mov	r6, #6
   24c44:	b	25a30 <sfbpf_parse+0x152c>
   24c48:	mov	sl, #0
   24c4c:	mov	r6, #26
   24c50:	b	25a30 <sfbpf_parse+0x152c>
   24c54:	mov	sl, #0
   24c58:	mov	r6, #30
   24c5c:	b	25a30 <sfbpf_parse+0x152c>
   24c60:	mov	sl, #0
   24c64:	mov	r6, #27
   24c68:	b	25a30 <sfbpf_parse+0x152c>
   24c6c:	str	r2, [sp, #16]
   24c70:	ldr	r6, [r9, #-48]	; 0xffffffd0
   24c74:	ldr	r0, [r9, #-32]	; 0xffffffe0
   24c78:	ldr	r2, [r9]
   24c7c:	mov	r1, #0
   24c80:	b	25ab4 <sfbpf_parse+0x15b0>
   24c84:	ldr	r0, [r9]
   24c88:	b	253d8 <sfbpf_parse+0xed4>
   24c8c:	ldr	r0, [r9]
   24c90:	mov	sl, ip
   24c94:	mov	r5, r2
   24c98:	mov	r6, r3
   24c9c:	mov	r4, lr
   24ca0:	bl	19b00 <sf_gen_atmmulti_abbrev>
   24ca4:	b	253c8 <sfbpf_parse+0xec4>
   24ca8:	str	r2, [sp, #16]
   24cac:	ldr	r6, [r9, #-48]	; 0xffffffd0
   24cb0:	ldr	r0, [r9, #-32]	; 0xffffffe0
   24cb4:	ldr	r2, [r9]
   24cb8:	mov	r1, #0
   24cbc:	b	24d78 <sfbpf_parse+0x874>
   24cc0:	mov	sl, #0
   24cc4:	mov	r6, #12
   24cc8:	b	25a30 <sfbpf_parse+0x152c>
   24ccc:	ldr	r6, [r9, #-16]
   24cd0:	mvn	r0, #2
   24cd4:	str	lr, [sp, #4]
   24cd8:	str	r3, [sp, #8]
   24cdc:	str	r2, [sp, #16]
   24ce0:	str	ip, [sp, #12]
   24ce4:	uxtab	r0, r0, r6
   24ce8:	cmp	r0, #4
   24cec:	bhi	24d10 <sfbpf_parse+0x80c>
   24cf0:	add	r1, pc, #4
   24cf4:	ldr	r0, [r1, r0, lsl #2]
   24cf8:	add	pc, r1, r0
   24cfc:	.word	0x00001150
   24d00:	.word	0x00000014
   24d04:	.word	0x0000115c
   24d08:	.word	0x00001168
   24d0c:	.word	0x00001174
   24d10:	ldr	r0, [r9]
   24d14:	mov	r1, #0
   24d18:	mov	r2, r6
   24d1c:	bl	116cc <sf_gen_ncode>
   24d20:	str	r0, [sp, #28]
   24d24:	lsr	sl, r6, #8
   24d28:	lsr	r4, r6, #16
   24d2c:	lsr	r5, r6, #24
   24d30:	b	25d00 <sfbpf_parse+0x17fc>
   24d34:	ldrb	r6, [r9]
   24d38:	ldr	sl, [r9, #-32]	; 0xffffffe0
   24d3c:	ldr	r4, [r9, #-16]
   24d40:	b	25ae8 <sfbpf_parse+0x15e4>
   24d44:	ldr	sl, [r9, #-16]
   24d48:	ldr	r4, [r9]
   24d4c:	mov	r6, #0
   24d50:	b	25ae8 <sfbpf_parse+0x15e4>
   24d54:	ldr	sl, [r9, #-16]
   24d58:	mov	r4, #0
   24d5c:	mov	r6, #5
   24d60:	b	25ae8 <sfbpf_parse+0x15e4>
   24d64:	ldr	r6, [r9, #-48]	; 0xffffffd0
   24d68:	ldr	r0, [r9, #-32]	; 0xffffffe0
   24d6c:	ldr	r1, [r9]
   24d70:	str	r2, [sp, #16]
   24d74:	mov	r2, #0
   24d78:	mov	r5, r3
   24d7c:	mov	r3, r6
   24d80:	mov	r4, ip
   24d84:	mov	sl, lr
   24d88:	bl	115b8 <sf_gen_mcode>
   24d8c:	b	25ac8 <sfbpf_parse+0x15c4>
   24d90:	ldr	sl, [r9, #-16]
   24d94:	mov	r4, #0
   24d98:	mov	r6, #6
   24d9c:	b	25ae8 <sfbpf_parse+0x15e4>
   24da0:	ldr	r0, [r9]
   24da4:	mov	sl, ip
   24da8:	mov	r5, r2
   24dac:	mov	r6, r3
   24db0:	mov	r4, lr
   24db4:	bl	5270 <sf_gen_proto_abbrev>
   24db8:	b	253c8 <sfbpf_parse+0xec4>
   24dbc:	ldr	r0, [r9]
   24dc0:	mov	sl, ip
   24dc4:	mov	r5, r2
   24dc8:	mov	r6, r3
   24dcc:	mov	r4, lr
   24dd0:	bl	171f0 <sf_gen_pf_rnr>
   24dd4:	b	259f8 <sfbpf_parse+0x14f4>
   24dd8:	ldr	r0, [r9]
   24ddc:	b	24f94 <sfbpf_parse+0xa90>
   24de0:	mov	sl, #0
   24de4:	mov	r6, #17
   24de8:	b	25a30 <sfbpf_parse+0x152c>
   24dec:	mov	r0, #0
   24df0:	b	25038 <sfbpf_parse+0xb34>
   24df4:	ldr	r0, [r9, #-16]
   24df8:	mov	sl, ip
   24dfc:	mov	r5, r2
   24e00:	mov	r6, r3
   24e04:	mov	r4, lr
   24e08:	bl	14c88 <sf_gen_broadcast>
   24e0c:	b	259f8 <sfbpf_parse+0x14f4>
   24e10:	mov	sl, #0
   24e14:	mov	r6, #13
   24e18:	b	25a30 <sfbpf_parse+0x152c>
   24e1c:	ldr	r6, [r9, #-16]
   24e20:	ldr	r0, [r9]
   24e24:	str	ip, [sp, #12]
   24e28:	str	r2, [sp, #16]
   24e2c:	str	r3, [sp, #8]
   24e30:	str	lr, [sp, #4]
   24e34:	mov	r1, r6
   24e38:	lsr	r5, r6, #24
   24e3c:	lsr	r4, r6, #16
   24e40:	lsr	sl, r6, #8
   24e44:	bl	aed4 <sf_gen_scode>
   24e48:	b	25304 <sfbpf_parse+0xe00>
   24e4c:	mov	sl, #0
   24e50:	mov	r6, #11
   24e54:	b	25a30 <sfbpf_parse+0x152c>
   24e58:	mov	sl, #0
   24e5c:	mov	r6, #14
   24e60:	b	25a30 <sfbpf_parse+0x152c>
   24e64:	ldr	r0, [r9]
   24e68:	mov	sl, ip
   24e6c:	mov	r5, r2
   24e70:	mov	r6, r3
   24e74:	mov	r4, lr
   24e78:	bl	14880 <sf_gen_less>
   24e7c:	b	259f8 <sfbpf_parse+0x14f4>
   24e80:	mov	sl, r2
   24e84:	ldr	r0, [r9, #-80]	; 0xffffffb0
   24e88:	ldr	r1, [r9, #-48]	; 0xffffffd0
   24e8c:	ldr	r2, [r9, #-16]
   24e90:	b	254ac <sfbpf_parse+0xfa8>
   24e94:	mov	sl, r2
   24e98:	ldr	r1, [r9, #-32]	; 0xffffffe0
   24e9c:	ldr	r0, [r9, #-16]
   24ea0:	ldr	r2, [r9]
   24ea4:	mov	r6, r3
   24ea8:	mov	r3, #0
   24eac:	b	25250 <sfbpf_parse+0xd4c>
   24eb0:	mov	sl, r2
   24eb4:	ldr	r1, [r9, #-32]	; 0xffffffe0
   24eb8:	ldr	r2, [r9]
   24ebc:	mov	r0, #16
   24ec0:	b	25440 <sfbpf_parse+0xf3c>
   24ec4:	mov	r6, #0
   24ec8:	mov	sl, #0
   24ecc:	b	25a30 <sfbpf_parse+0x152c>
   24ed0:	ldr	r0, [r9, #-32]	; 0xffffffe0
   24ed4:	str	ip, [sp, #12]
   24ed8:	str	r2, [sp, #16]
   24edc:	str	r3, [sp, #8]
   24ee0:	str	lr, [sp, #4]
   24ee4:	cmp	r0, #0
   24ee8:	beq	25ba0 <sfbpf_parse+0x169c>
   24eec:	cmp	r0, #4
   24ef0:	beq	25bb8 <sfbpf_parse+0x16b4>
   24ef4:	cmp	r0, #8
   24ef8:	bne	25e7c <sfbpf_parse+0x1978>
   24efc:	ldr	r1, [pc, #4000]	; 25ea4 <sfbpf_parse+0x19a0>
   24f00:	add	r1, pc, r1
   24f04:	ldr	r0, [r1, #4]
   24f08:	cmp	r0, #0
   24f0c:	bne	25bcc <sfbpf_parse+0x16c8>
   24f10:	b	25e40 <sfbpf_parse+0x193c>
   24f14:	mov	sl, r2
   24f18:	ldr	r1, [r9, #-32]	; 0xffffffe0
   24f1c:	ldr	r2, [r9]
   24f20:	mov	r0, #0
   24f24:	b	25440 <sfbpf_parse+0xf3c>
   24f28:	mov	sl, r2
   24f2c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   24f30:	ldr	r0, [r9, #-16]
   24f34:	ldr	r2, [r9]
   24f38:	mov	r4, ip
   24f3c:	mov	r6, r3
   24f40:	mov	r5, lr
   24f44:	bl	148a8 <sf_gen_byteop>
   24f48:	b	25450 <sfbpf_parse+0xf4c>
   24f4c:	ldr	r0, [r9]
   24f50:	mov	r1, #12
   24f54:	b	24f98 <sfbpf_parse+0xa94>
   24f58:	mov	sl, r2
   24f5c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   24f60:	ldr	r2, [r9]
   24f64:	mov	r0, #32
   24f68:	b	25440 <sfbpf_parse+0xf3c>
   24f6c:	ldr	r0, [r9]
   24f70:	mov	sl, ip
   24f74:	mov	r5, r2
   24f78:	mov	r6, r3
   24f7c:	mov	r4, lr
   24f80:	bl	182fc <sf_gen_atmtype_abbrev>
   24f84:	b	253c8 <sfbpf_parse+0xec4>
   24f88:	ldr	r0, [r9, #-32]	; 0xffffffe0
   24f8c:	ldr	r1, [r9]
   24f90:	orr	r0, r1, r0
   24f94:	mov	r1, #252	; 0xfc
   24f98:	mov	sl, ip
   24f9c:	mov	r5, r2
   24fa0:	mov	r6, r3
   24fa4:	mov	r4, lr
   24fa8:	bl	17250 <sf_gen_p80211_type>
   24fac:	b	259f8 <sfbpf_parse+0x14f4>
   24fb0:	str	r2, [sp, #16]
   24fb4:	ldr	r0, [r9, #-28]	; 0xffffffe4
   24fb8:	ldr	r2, [r9, #-16]
   24fbc:	ldr	r1, [r9]
   24fc0:	b	25094 <sfbpf_parse+0xb90>
   24fc4:	ldr	r0, [r9]
   24fc8:	b	25014 <sfbpf_parse+0xb10>
   24fcc:	mov	sl, ip
   24fd0:	mov	r5, r2
   24fd4:	mov	r6, r3
   24fd8:	mov	r4, lr
   24fdc:	bl	17f58 <sf_gen_pppoed>
   24fe0:	b	259f8 <sfbpf_parse+0x14f4>
   24fe4:	mov	sl, r2
   24fe8:	ldr	r1, [r9, #-32]	; 0xffffffe0
   24fec:	ldr	r2, [r9]
   24ff0:	mov	r0, #48	; 0x30
   24ff4:	b	25440 <sfbpf_parse+0xf3c>
   24ff8:	mov	sl, #0
   24ffc:	mov	r6, #21
   25000:	b	25a30 <sfbpf_parse+0x152c>
   25004:	mov	sl, #0
   25008:	mov	r6, #37	; 0x25
   2500c:	b	25a30 <sfbpf_parse+0x152c>
   25010:	mvn	r0, #0
   25014:	mov	sl, ip
   25018:	mov	r5, r2
   2501c:	mov	r6, r3
   25020:	mov	r4, lr
   25024:	bl	17838 <sf_gen_vlan>
   25028:	b	259f8 <sfbpf_parse+0x14f4>
   2502c:	mov	lr, #1
   25030:	b	25ae8 <sfbpf_parse+0x15e4>
   25034:	mov	r0, #1
   25038:	mov	sl, ip
   2503c:	mov	r5, r2
   25040:	mov	r6, r3
   25044:	mov	r4, lr
   25048:	bl	16b0c <sf_gen_inbound>
   2504c:	b	259f8 <sfbpf_parse+0x14f4>
   25050:	ldr	r0, [r9]
   25054:	b	2505c <sfbpf_parse+0xb58>
   25058:	mvn	r0, #0
   2505c:	mov	sl, ip
   25060:	mov	r5, r2
   25064:	mov	r6, r3
   25068:	mov	r4, lr
   2506c:	bl	17b04 <sf_gen_mpls>
   25070:	b	259f8 <sfbpf_parse+0x14f4>
   25074:	ldr	r3, [r9, #-12]
   25078:	sub	r0, r3, #51	; 0x33
   2507c:	cmp	r0, #1
   25080:	bhi	25ae8 <sfbpf_parse+0x15e4>
   25084:	ldr	r1, [r9]
   25088:	str	r2, [sp, #16]
   2508c:	mov	r0, r3
   25090:	mov	r2, #16
   25094:	str	r3, [sp, #8]
   25098:	mov	r3, #0
   2509c:	b	25178 <sfbpf_parse+0xc74>
   250a0:	str	lr, [sp, #4]
   250a4:	str	r3, [sp, #8]
   250a8:	str	r2, [sp, #16]
   250ac:	str	ip, [sp, #12]
   250b0:	ldr	r6, [r9]
   250b4:	ldr	r0, [pc, #3580]	; 25eb8 <sfbpf_parse+0x19b4>
   250b8:	mov	r1, r6
   250bc:	add	r0, pc, r0
   250c0:	bl	24000 <sfbpf_strcasecmp>
   250c4:	cmp	r0, #0
   250c8:	beq	25b90 <sfbpf_parse+0x168c>
   250cc:	ldr	r0, [pc, #3560]	; 25ebc <sfbpf_parse+0x19b8>
   250d0:	mov	r1, r6
   250d4:	add	r0, pc, r0
   250d8:	bl	24000 <sfbpf_strcasecmp>
   250dc:	cmp	r0, #0
   250e0:	beq	25c04 <sfbpf_parse+0x1700>
   250e4:	ldr	r0, [pc, #3644]	; 25f28 <sfbpf_parse+0x1a24>
   250e8:	mov	r1, r6
   250ec:	add	r0, pc, r0
   250f0:	bl	24000 <sfbpf_strcasecmp>
   250f4:	cmp	r0, #0
   250f8:	beq	25c1c <sfbpf_parse+0x1718>
   250fc:	ldr	r0, [pc, #3624]	; 25f2c <sfbpf_parse+0x1a28>
   25100:	mov	r1, r6
   25104:	add	r0, pc, r0
   25108:	bl	24000 <sfbpf_strcasecmp>
   2510c:	cmp	r0, #0
   25110:	beq	25c3c <sfbpf_parse+0x1738>
   25114:	ldr	r0, [pc, #3604]	; 25f30 <sfbpf_parse+0x1a2c>
   25118:	mov	r1, r6
   2511c:	add	r0, pc, r0
   25120:	bl	24000 <sfbpf_strcasecmp>
   25124:	mov	r1, #4
   25128:	cmp	r0, #0
   2512c:	beq	25c40 <sfbpf_parse+0x173c>
   25130:	b	25e94 <sfbpf_parse+0x1990>
   25134:	mov	sl, ip
   25138:	mov	r5, r2
   2513c:	mov	r6, r3
   25140:	mov	r4, lr
   25144:	bl	13e5c <sf_gen_loadlen>
   25148:	b	259f8 <sfbpf_parse+0x14f4>
   2514c:	mov	sl, #0
   25150:	mov	r6, #124	; 0x7c
   25154:	b	25a30 <sfbpf_parse+0x152c>
   25158:	mov	lr, #3
   2515c:	b	25ae8 <sfbpf_parse+0x15e4>
   25160:	str	r2, [sp, #16]
   25164:	ldr	r0, [r9, #-28]	; 0xffffffe4
   25168:	ldr	r2, [r9, #-16]
   2516c:	ldr	r1, [r9]
   25170:	str	r3, [sp, #8]
   25174:	mov	r3, #1
   25178:	str	ip, [sp, #12]
   2517c:	str	lr, [sp, #4]
   25180:	bl	17fb0 <sf_gen_atmfield_code>
   25184:	b	25304 <sfbpf_parse+0xe00>
   25188:	str	r2, [sp, #16]
   2518c:	ldr	r0, [r9, #-24]	; 0xffffffe8
   25190:	ldr	r2, [r9, #-16]
   25194:	ldr	r1, [r9]
   25198:	b	252f0 <sfbpf_parse+0xdec>
   2519c:	str	lr, [sp, #4]
   251a0:	str	r3, [sp, #8]
   251a4:	str	r2, [sp, #16]
   251a8:	str	ip, [sp, #12]
   251ac:	ldr	r0, [r9]
   251b0:	ldr	r1, [pc, #3364]	; 25edc <sfbpf_parse+0x19d8>
   251b4:	add	r1, pc, r1
   251b8:	bl	24000 <sfbpf_strcasecmp>
   251bc:	mov	sl, #0
   251c0:	cmp	r0, #0
   251c4:	beq	25b98 <sfbpf_parse+0x1694>
   251c8:	ldr	r0, [r9]
   251cc:	ldr	r1, [pc, #3340]	; 25ee0 <sfbpf_parse+0x19dc>
   251d0:	add	r1, pc, r1
   251d4:	bl	24000 <sfbpf_strcasecmp>
   251d8:	cmp	r0, #0
   251dc:	beq	25c0c <sfbpf_parse+0x1708>
   251e0:	ldr	r0, [r9]
   251e4:	ldr	r1, [pc, #3320]	; 25ee4 <sfbpf_parse+0x19e0>
   251e8:	add	r1, pc, r1
   251ec:	bl	24000 <sfbpf_strcasecmp>
   251f0:	cmp	r0, #0
   251f4:	beq	25c24 <sfbpf_parse+0x1720>
   251f8:	ldr	r0, [r9]
   251fc:	ldr	r1, [pc, #3300]	; 25ee8 <sfbpf_parse+0x19e4>
   25200:	add	r1, pc, r1
   25204:	bl	24000 <sfbpf_strcasecmp>
   25208:	ldr	ip, [sp, #12]
   2520c:	ldr	r2, [sp, #16]
   25210:	ldr	r3, [sp, #8]
   25214:	ldr	lr, [sp, #4]
   25218:	mov	r6, #3
   2521c:	cmp	r0, #0
   25220:	mov	r4, #0
   25224:	mov	r5, #0
   25228:	beq	25ae8 <sfbpf_parse+0x15e4>
   2522c:	b	25e88 <sfbpf_parse+0x1984>
   25230:	ldr	r6, [r9, #-32]	; 0xffffffe0
   25234:	b	24aa0 <sfbpf_parse+0x59c>
   25238:	mov	sl, r2
   2523c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25240:	ldr	r0, [r9, #-16]
   25244:	ldr	r2, [r9]
   25248:	mov	r6, r3
   2524c:	mov	r3, #1
   25250:	mov	r4, ip
   25254:	mov	r5, lr
   25258:	bl	1392c <sf_gen_relation>
   2525c:	mov	lr, r5
   25260:	mov	r3, r6
   25264:	mov	r2, sl
   25268:	mov	ip, r4
   2526c:	b	253d8 <sfbpf_parse+0xed4>
   25270:	mov	sl, r2
   25274:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25278:	ldr	r2, [r9]
   2527c:	mov	r0, #64	; 0x40
   25280:	b	25440 <sfbpf_parse+0xf3c>
   25284:	mov	sl, #0
   25288:	mov	r6, #61	; 0x3d
   2528c:	b	25a30 <sfbpf_parse+0x152c>
   25290:	mov	sl, #0
   25294:	mov	r6, #70	; 0x46
   25298:	b	25a30 <sfbpf_parse+0x152c>
   2529c:	mov	r3, #52	; 0x34
   252a0:	b	25ae8 <sfbpf_parse+0x15e4>
   252a4:	mov	lr, #2
   252a8:	b	25ae8 <sfbpf_parse+0x15e4>
   252ac:	mov	lr, #4
   252b0:	b	25ae8 <sfbpf_parse+0x15e4>
   252b4:	str	r2, [sp, #16]
   252b8:	ldr	r0, [r9, #-24]	; 0xffffffe8
   252bc:	ldr	r2, [r9, #-16]
   252c0:	ldr	r1, [r9]
   252c4:	str	r3, [sp, #8]
   252c8:	mov	r3, #1
   252cc:	b	252f8 <sfbpf_parse+0xdf4>
   252d0:	ldr	lr, [r9, #-8]
   252d4:	sub	r0, lr, #1
   252d8:	cmp	r0, #3
   252dc:	bhi	25ae8 <sfbpf_parse+0x15e4>
   252e0:	ldr	r1, [r9]
   252e4:	str	r2, [sp, #16]
   252e8:	mov	r0, lr
   252ec:	mov	r2, #16
   252f0:	str	r3, [sp, #8]
   252f4:	mov	r3, #0
   252f8:	str	ip, [sp, #12]
   252fc:	str	lr, [sp, #4]
   25300:	bl	192fc <sf_gen_mtp3field_code>
   25304:	ldr	lr, [sp, #4]
   25308:	ldr	r3, [sp, #8]
   2530c:	ldr	r2, [sp, #16]
   25310:	ldr	ip, [sp, #12]
   25314:	str	r0, [sp, #28]
   25318:	b	25ae8 <sfbpf_parse+0x15e4>
   2531c:	mov	r3, #51	; 0x33
   25320:	b	25ae8 <sfbpf_parse+0x15e4>
   25324:	mov	sl, ip
   25328:	mov	r5, r2
   2532c:	mov	r6, r3
   25330:	mov	r4, lr
   25334:	bl	17f60 <sf_gen_pppoes>
   25338:	b	259f8 <sfbpf_parse+0x14f4>
   2533c:	mov	sl, r2
   25340:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25344:	ldr	r2, [r9]
   25348:	mov	r0, #80	; 0x50
   2534c:	b	25440 <sfbpf_parse+0xf3c>
   25350:	mov	sl, r2
   25354:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25358:	ldr	r2, [r9]
   2535c:	mov	r0, #96	; 0x60
   25360:	b	25440 <sfbpf_parse+0xf3c>
   25364:	mov	sl, #0
   25368:	mov	r6, #33	; 0x21
   2536c:	b	25a30 <sfbpf_parse+0x152c>
   25370:	mov	sl, #0
   25374:	mov	r6, #39	; 0x27
   25378:	b	25a30 <sfbpf_parse+0x152c>
   2537c:	mov	sl, #0
   25380:	mov	r6, #62	; 0x3e
   25384:	b	25a30 <sfbpf_parse+0x152c>
   25388:	mov	sl, #0
   2538c:	mov	r6, #9
   25390:	b	25a30 <sfbpf_parse+0x152c>
   25394:	ldr	r0, [r9]
   25398:	mov	sl, ip
   2539c:	mov	r5, r2
   253a0:	mov	r6, r3
   253a4:	mov	r4, lr
   253a8:	bl	171d8 <sf_gen_pf_ruleset>
   253ac:	b	259f8 <sfbpf_parse+0x14f4>
   253b0:	ldr	r0, [r9]
   253b4:	mov	sl, ip
   253b8:	mov	r5, r2
   253bc:	mov	r6, r3
   253c0:	mov	r4, lr
   253c4:	bl	18a60 <sf_gen_mtp2type_abbrev>
   253c8:	mov	lr, r4
   253cc:	mov	r3, r6
   253d0:	mov	r2, r5
   253d4:	mov	ip, sl
   253d8:	str	r0, [sp, #28]
   253dc:	mov	r6, #255	; 0xff
   253e0:	mov	sl, #255	; 0xff
   253e4:	mov	r4, #255	; 0xff
   253e8:	mov	r5, #255	; 0xff
   253ec:	b	25ae8 <sfbpf_parse+0x15e4>
   253f0:	mov	sl, #0
   253f4:	mov	r6, #10
   253f8:	b	25a30 <sfbpf_parse+0x152c>
   253fc:	ldr	r0, [r9]
   25400:	mov	sl, ip
   25404:	mov	r5, r2
   25408:	mov	r6, r3
   2540c:	mov	r4, lr
   25410:	bl	14038 <sf_gen_loadi>
   25414:	b	259f8 <sfbpf_parse+0x14f4>
   25418:	mov	sl, #0
   2541c:	mov	r6, #60	; 0x3c
   25420:	b	25a30 <sfbpf_parse+0x152c>
   25424:	mov	sl, #0
   25428:	mov	r6, #71	; 0x47
   2542c:	b	25a30 <sfbpf_parse+0x152c>
   25430:	mov	sl, r2
   25434:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25438:	ldr	r2, [r9]
   2543c:	mov	r0, #112	; 0x70
   25440:	mov	r4, ip
   25444:	mov	r6, r3
   25448:	mov	r5, lr
   2544c:	bl	14408 <sf_gen_arth>
   25450:	mov	lr, r5
   25454:	mov	r3, r6
   25458:	mov	r2, sl
   2545c:	mov	ip, r4
   25460:	b	25a08 <sfbpf_parse+0x1504>
   25464:	ldr	r0, [r9]
   25468:	mov	sl, ip
   2546c:	mov	r5, r2
   25470:	mov	r6, r3
   25474:	mov	r4, lr
   25478:	bl	14210 <sf_gen_neg>
   2547c:	b	259f8 <sfbpf_parse+0x14f4>
   25480:	ldr	r0, [r9]
   25484:	mov	sl, ip
   25488:	mov	r5, r2
   2548c:	mov	r6, r3
   25490:	mov	r4, lr
   25494:	bl	171c0 <sf_gen_pf_ifname>
   25498:	b	259f8 <sfbpf_parse+0x14f4>
   2549c:	ldr	r0, [r9, #-48]	; 0xffffffd0
   254a0:	ldr	r1, [r9, #-16]
   254a4:	mov	sl, r2
   254a8:	mov	r2, #1
   254ac:	mov	r4, ip
   254b0:	mov	r6, r3
   254b4:	mov	r5, lr
   254b8:	bl	11f70 <sf_gen_load>
   254bc:	b	25450 <sfbpf_parse+0xf4c>
   254c0:	mov	sl, #0
   254c4:	mov	r6, #40	; 0x28
   254c8:	b	25a30 <sfbpf_parse+0x152c>
   254cc:	ldr	r0, [r9]
   254d0:	mov	sl, ip
   254d4:	mov	r5, r2
   254d8:	mov	r6, r3
   254dc:	mov	r4, lr
   254e0:	bl	17408 <sf_gen_p80211_fcdir>
   254e4:	b	259f8 <sfbpf_parse+0x14f4>
   254e8:	ldr	r0, [r9]
   254ec:	mov	sl, ip
   254f0:	mov	r5, r2
   254f4:	mov	r6, r3
   254f8:	mov	r4, lr
   254fc:	bl	17208 <sf_gen_pf_srnr>
   25500:	b	259f8 <sfbpf_parse+0x14f4>
   25504:	.word	0x00022484
   25508:	.word	0x00022478
   2550c:	.word	0x00005a8e
   25510:	.word	0x00022374
   25514:	.word	0x00022358
   25518:	.word	0x00005c5e
   2551c:	.word	0x00022314
   25520:	.word	0x00005d8c
   25524:	.word	0x000062b0
   25528:	.word	0x000222c8
   2552c:	.word	0x000222b4
   25530:	.word	0x000067ac
   25534:	.word	0x000068a6
   25538:	str	lr, [sp, #4]
   2553c:	str	r3, [sp, #8]
   25540:	str	r2, [sp, #16]
   25544:	str	ip, [sp, #12]
   25548:	ldr	r6, [r9]
   2554c:	ldr	r0, [pc, #2424]	; 25ecc <sfbpf_parse+0x19c8>
   25550:	mov	r1, r6
   25554:	add	r0, pc, r0
   25558:	bl	24000 <sfbpf_strcasecmp>
   2555c:	cmp	r0, #0
   25560:	mov	r4, #0
   25564:	mov	r0, #0
   25568:	beq	25cd4 <sfbpf_parse+0x17d0>
   2556c:	ldr	r0, [pc, #2396]	; 25ed0 <sfbpf_parse+0x19cc>
   25570:	mov	r1, r6
   25574:	add	r0, pc, r0
   25578:	bl	24000 <sfbpf_strcasecmp>
   2557c:	cmp	r0, #0
   25580:	beq	25c14 <sfbpf_parse+0x1710>
   25584:	ldr	r0, [pc, #2476]	; 25f38 <sfbpf_parse+0x1a34>
   25588:	mov	r1, r6
   2558c:	add	r0, pc, r0
   25590:	bl	24000 <sfbpf_strcasecmp>
   25594:	cmp	r0, #0
   25598:	beq	25c34 <sfbpf_parse+0x1730>
   2559c:	ldr	r0, [pc, #2456]	; 25f3c <sfbpf_parse+0x1a38>
   255a0:	mov	r1, r6
   255a4:	add	r0, pc, r0
   255a8:	bl	24000 <sfbpf_strcasecmp>
   255ac:	cmp	r0, #0
   255b0:	beq	25c50 <sfbpf_parse+0x174c>
   255b4:	ldr	r0, [pc, #2436]	; 25f40 <sfbpf_parse+0x1a3c>
   255b8:	mov	r1, r6
   255bc:	add	r0, pc, r0
   255c0:	bl	24000 <sfbpf_strcasecmp>
   255c4:	cmp	r0, #0
   255c8:	beq	25c58 <sfbpf_parse+0x1754>
   255cc:	ldr	r0, [pc, #2416]	; 25f44 <sfbpf_parse+0x1a40>
   255d0:	mov	r1, r6
   255d4:	add	r0, pc, r0
   255d8:	bl	24000 <sfbpf_strcasecmp>
   255dc:	cmp	r0, #0
   255e0:	beq	25c60 <sfbpf_parse+0x175c>
   255e4:	ldr	r0, [pc, #2396]	; 25f48 <sfbpf_parse+0x1a44>
   255e8:	mov	r1, r6
   255ec:	add	r0, pc, r0
   255f0:	bl	24000 <sfbpf_strcasecmp>
   255f4:	cmp	r0, #0
   255f8:	beq	25c68 <sfbpf_parse+0x1764>
   255fc:	ldr	r0, [pc, #2376]	; 25f4c <sfbpf_parse+0x1a48>
   25600:	mov	r1, r6
   25604:	add	r0, pc, r0
   25608:	bl	24000 <sfbpf_strcasecmp>
   2560c:	cmp	r0, #0
   25610:	beq	25c70 <sfbpf_parse+0x176c>
   25614:	ldr	r0, [pc, #2356]	; 25f50 <sfbpf_parse+0x1a4c>
   25618:	mov	r1, r6
   2561c:	add	r0, pc, r0
   25620:	bl	24000 <sfbpf_strcasecmp>
   25624:	cmp	r0, #0
   25628:	beq	25c78 <sfbpf_parse+0x1774>
   2562c:	ldr	r0, [pc, #2336]	; 25f54 <sfbpf_parse+0x1a50>
   25630:	mov	r1, r6
   25634:	add	r0, pc, r0
   25638:	bl	24000 <sfbpf_strcasecmp>
   2563c:	cmp	r0, #0
   25640:	beq	25c80 <sfbpf_parse+0x177c>
   25644:	ldr	r0, [pc, #2316]	; 25f58 <sfbpf_parse+0x1a54>
   25648:	mov	r1, r6
   2564c:	add	r0, pc, r0
   25650:	bl	24000 <sfbpf_strcasecmp>
   25654:	cmp	r0, #0
   25658:	beq	25c88 <sfbpf_parse+0x1784>
   2565c:	ldr	r0, [pc, #2296]	; 25f5c <sfbpf_parse+0x1a58>
   25660:	mov	r1, r6
   25664:	add	r0, pc, r0
   25668:	bl	24000 <sfbpf_strcasecmp>
   2566c:	cmp	r0, #0
   25670:	beq	25c90 <sfbpf_parse+0x178c>
   25674:	ldr	r0, [pc, #2276]	; 25f60 <sfbpf_parse+0x1a5c>
   25678:	mov	r1, r6
   2567c:	add	r0, pc, r0
   25680:	bl	24000 <sfbpf_strcasecmp>
   25684:	cmp	r0, #0
   25688:	beq	25c98 <sfbpf_parse+0x1794>
   2568c:	ldr	r0, [pc, #2256]	; 25f64 <sfbpf_parse+0x1a60>
   25690:	mov	r1, r6
   25694:	add	r0, pc, r0
   25698:	bl	24000 <sfbpf_strcasecmp>
   2569c:	cmp	r0, #0
   256a0:	beq	25ca0 <sfbpf_parse+0x179c>
   256a4:	ldr	r0, [pc, #2236]	; 25f68 <sfbpf_parse+0x1a64>
   256a8:	mov	r1, r6
   256ac:	add	r0, pc, r0
   256b0:	bl	24000 <sfbpf_strcasecmp>
   256b4:	cmp	r0, #0
   256b8:	beq	25ca8 <sfbpf_parse+0x17a4>
   256bc:	ldr	r0, [pc, #2216]	; 25f6c <sfbpf_parse+0x1a68>
   256c0:	mov	r1, r6
   256c4:	add	r0, pc, r0
   256c8:	bl	24000 <sfbpf_strcasecmp>
   256cc:	cmp	r0, #0
   256d0:	beq	25cb0 <sfbpf_parse+0x17ac>
   256d4:	ldr	r0, [pc, #2196]	; 25f70 <sfbpf_parse+0x1a6c>
   256d8:	mov	r1, r6
   256dc:	add	r0, pc, r0
   256e0:	bl	24000 <sfbpf_strcasecmp>
   256e4:	cmp	r0, #0
   256e8:	beq	25cb8 <sfbpf_parse+0x17b4>
   256ec:	ldr	r0, [pc, #2176]	; 25f74 <sfbpf_parse+0x1a70>
   256f0:	mov	r1, r6
   256f4:	add	r0, pc, r0
   256f8:	bl	24000 <sfbpf_strcasecmp>
   256fc:	cmp	r0, #0
   25700:	beq	25cc0 <sfbpf_parse+0x17bc>
   25704:	ldr	r0, [pc, #2156]	; 25f78 <sfbpf_parse+0x1a74>
   25708:	mov	r1, r6
   2570c:	add	r0, pc, r0
   25710:	bl	24000 <sfbpf_strcasecmp>
   25714:	cmp	r0, #0
   25718:	beq	25cc8 <sfbpf_parse+0x17c4>
   2571c:	ldr	r0, [pc, #2136]	; 25f7c <sfbpf_parse+0x1a78>
   25720:	mov	r1, r6
   25724:	add	r0, pc, r0
   25728:	bl	24000 <sfbpf_strcasecmp>
   2572c:	cmp	r0, #0
   25730:	beq	25cd0 <sfbpf_parse+0x17cc>
   25734:	ldr	r6, [r9]
   25738:	ldr	r0, [pc, #2112]	; 25f80 <sfbpf_parse+0x1a7c>
   2573c:	add	r0, pc, r0
   25740:	mov	r1, r6
   25744:	bl	24000 <sfbpf_strcasecmp>
   25748:	cmp	r0, #0
   2574c:	beq	25d14 <sfbpf_parse+0x1810>
   25750:	ldr	r0, [pc, #1980]	; 25f14 <sfbpf_parse+0x1a10>
   25754:	mov	r1, r6
   25758:	add	r0, pc, r0
   2575c:	bl	24000 <sfbpf_strcasecmp>
   25760:	cmp	r0, #0
   25764:	beq	25d1c <sfbpf_parse+0x1818>
   25768:	ldr	r0, [pc, #2068]	; 25f84 <sfbpf_parse+0x1a80>
   2576c:	mov	r1, r6
   25770:	add	r0, pc, r0
   25774:	bl	24000 <sfbpf_strcasecmp>
   25778:	cmp	r0, #0
   2577c:	beq	25d24 <sfbpf_parse+0x1820>
   25780:	ldr	r0, [pc, #2048]	; 25f88 <sfbpf_parse+0x1a84>
   25784:	mov	r1, r6
   25788:	add	r0, pc, r0
   2578c:	bl	24000 <sfbpf_strcasecmp>
   25790:	cmp	r0, #0
   25794:	beq	25d2c <sfbpf_parse+0x1828>
   25798:	ldr	r0, [pc, #2028]	; 25f8c <sfbpf_parse+0x1a88>
   2579c:	mov	r1, r6
   257a0:	add	r0, pc, r0
   257a4:	bl	24000 <sfbpf_strcasecmp>
   257a8:	cmp	r0, #0
   257ac:	beq	25d34 <sfbpf_parse+0x1830>
   257b0:	ldr	r0, [pc, #2008]	; 25f90 <sfbpf_parse+0x1a8c>
   257b4:	mov	r1, r6
   257b8:	add	r0, pc, r0
   257bc:	bl	24000 <sfbpf_strcasecmp>
   257c0:	cmp	r0, #0
   257c4:	beq	25d3c <sfbpf_parse+0x1838>
   257c8:	ldr	r6, [r9]
   257cc:	ldr	r0, [pc, #1984]	; 25f94 <sfbpf_parse+0x1a90>
   257d0:	add	r0, pc, r0
   257d4:	mov	r1, r6
   257d8:	bl	24000 <sfbpf_strcasecmp>
   257dc:	cmp	r0, #0
   257e0:	beq	25d50 <sfbpf_parse+0x184c>
   257e4:	ldr	r0, [pc, #1840]	; 25f1c <sfbpf_parse+0x1a18>
   257e8:	mov	r1, r6
   257ec:	add	r0, pc, r0
   257f0:	bl	24000 <sfbpf_strcasecmp>
   257f4:	cmp	r0, #0
   257f8:	beq	25d58 <sfbpf_parse+0x1854>
   257fc:	ldr	r0, [pc, #1940]	; 25f98 <sfbpf_parse+0x1a94>
   25800:	mov	r1, r6
   25804:	add	r0, pc, r0
   25808:	bl	24000 <sfbpf_strcasecmp>
   2580c:	cmp	r0, #0
   25810:	beq	25d60 <sfbpf_parse+0x185c>
   25814:	ldr	r0, [pc, #1920]	; 25f9c <sfbpf_parse+0x1a98>
   25818:	mov	r1, r6
   2581c:	add	r0, pc, r0
   25820:	bl	24000 <sfbpf_strcasecmp>
   25824:	cmp	r0, #0
   25828:	beq	25d68 <sfbpf_parse+0x1864>
   2582c:	ldr	r0, [pc, #1900]	; 25fa0 <sfbpf_parse+0x1a9c>
   25830:	mov	r1, r6
   25834:	add	r0, pc, r0
   25838:	bl	24000 <sfbpf_strcasecmp>
   2583c:	cmp	r0, #0
   25840:	beq	25d70 <sfbpf_parse+0x186c>
   25844:	ldr	r0, [pc, #1880]	; 25fa4 <sfbpf_parse+0x1aa0>
   25848:	mov	r1, r6
   2584c:	add	r0, pc, r0
   25850:	bl	24000 <sfbpf_strcasecmp>
   25854:	cmp	r0, #0
   25858:	beq	25d78 <sfbpf_parse+0x1874>
   2585c:	ldr	r0, [pc, #1860]	; 25fa8 <sfbpf_parse+0x1aa4>
   25860:	mov	r1, r6
   25864:	add	r0, pc, r0
   25868:	bl	24000 <sfbpf_strcasecmp>
   2586c:	cmp	r0, #0
   25870:	beq	25d80 <sfbpf_parse+0x187c>
   25874:	ldr	r0, [pc, #1840]	; 25fac <sfbpf_parse+0x1aa8>
   25878:	mov	r1, r6
   2587c:	add	r0, pc, r0
   25880:	bl	24000 <sfbpf_strcasecmp>
   25884:	cmp	r0, #0
   25888:	beq	25d88 <sfbpf_parse+0x1884>
   2588c:	ldr	r0, [pc, #1820]	; 25fb0 <sfbpf_parse+0x1aac>
   25890:	mov	r1, r6
   25894:	add	r0, pc, r0
   25898:	bl	24000 <sfbpf_strcasecmp>
   2589c:	cmp	r0, #0
   258a0:	beq	25d90 <sfbpf_parse+0x188c>
   258a4:	ldr	r0, [pc, #1800]	; 25fb4 <sfbpf_parse+0x1ab0>
   258a8:	mov	r1, r6
   258ac:	add	r0, pc, r0
   258b0:	bl	24000 <sfbpf_strcasecmp>
   258b4:	cmp	r0, #0
   258b8:	beq	25d98 <sfbpf_parse+0x1894>
   258bc:	ldr	r0, [pc, #1780]	; 25fb8 <sfbpf_parse+0x1ab4>
   258c0:	mov	r1, r6
   258c4:	add	r0, pc, r0
   258c8:	bl	24000 <sfbpf_strcasecmp>
   258cc:	cmp	r0, #0
   258d0:	beq	25da0 <sfbpf_parse+0x189c>
   258d4:	ldr	r0, [pc, #1760]	; 25fbc <sfbpf_parse+0x1ab8>
   258d8:	mov	r1, r6
   258dc:	add	r0, pc, r0
   258e0:	bl	24000 <sfbpf_strcasecmp>
   258e4:	cmp	r0, #0
   258e8:	beq	25da8 <sfbpf_parse+0x18a4>
   258ec:	ldr	r0, [pc, #1740]	; 25fc0 <sfbpf_parse+0x1abc>
   258f0:	mov	r1, r6
   258f4:	add	r0, pc, r0
   258f8:	bl	24000 <sfbpf_strcasecmp>
   258fc:	cmp	r0, #0
   25900:	beq	25db0 <sfbpf_parse+0x18ac>
   25904:	ldr	r0, [pc, #1720]	; 25fc4 <sfbpf_parse+0x1ac0>
   25908:	mov	r1, r6
   2590c:	add	r0, pc, r0
   25910:	bl	24000 <sfbpf_strcasecmp>
   25914:	cmp	r0, #0
   25918:	beq	25db8 <sfbpf_parse+0x18b4>
   2591c:	ldr	r0, [pc, #1700]	; 25fc8 <sfbpf_parse+0x1ac4>
   25920:	mov	r1, r6
   25924:	add	r0, pc, r0
   25928:	bl	24000 <sfbpf_strcasecmp>
   2592c:	mov	r1, #14
   25930:	cmp	r0, #0
   25934:	beq	25dbc <sfbpf_parse+0x18b8>
   25938:	b	25e94 <sfbpf_parse+0x1990>
   2593c:	ldr	r0, [r9]
   25940:	mov	sl, ip
   25944:	mov	r5, r2
   25948:	mov	r6, r3
   2594c:	mov	r4, lr
   25950:	bl	17220 <sf_gen_pf_reason>
   25954:	b	259f8 <sfbpf_parse+0x14f4>
   25958:	ldr	r0, [r9]
   2595c:	mov	sl, ip
   25960:	mov	r5, r2
   25964:	mov	r6, r3
   25968:	mov	r4, lr
   2596c:	bl	17238 <sf_gen_pf_action>
   25970:	b	259f8 <sfbpf_parse+0x14f4>
   25974:	mov	sl, #0
   25978:	mov	r6, #15
   2597c:	b	25a30 <sfbpf_parse+0x152c>
   25980:	mov	sl, #0
   25984:	mov	r6, #18
   25988:	b	25a30 <sfbpf_parse+0x152c>
   2598c:	ldr	r0, [r9]
   25990:	mov	sl, ip
   25994:	mov	r5, r2
   25998:	mov	r6, r3
   2599c:	mov	r4, lr
   259a0:	bl	14720 <sf_gen_greater>
   259a4:	b	259f8 <sfbpf_parse+0x14f4>
   259a8:	ldr	r0, [r9, #12]
   259ac:	str	ip, [sp, #12]
   259b0:	str	r2, [sp, #16]
   259b4:	str	r3, [sp, #8]
   259b8:	str	lr, [sp, #4]
   259bc:	bl	2eac <sf_finish_parse>
   259c0:	ldr	lr, [sp, #4]
   259c4:	ldr	r3, [sp, #8]
   259c8:	ldr	r2, [sp, #16]
   259cc:	ldr	ip, [sp, #12]
   259d0:	b	25ae8 <sfbpf_parse+0x15e4>
   259d4:	mov	sl, #0
   259d8:	mov	r6, #19
   259dc:	b	25a30 <sfbpf_parse+0x152c>
   259e0:	ldr	r0, [r9, #-16]
   259e4:	mov	sl, ip
   259e8:	mov	r5, r2
   259ec:	mov	r6, r3
   259f0:	mov	r4, lr
   259f4:	bl	158a4 <sf_gen_multicast>
   259f8:	mov	lr, r4
   259fc:	mov	r3, r6
   25a00:	mov	r2, r5
   25a04:	mov	ip, sl
   25a08:	mov	r6, r0
   25a0c:	lsr	r5, r0, #24
   25a10:	lsr	r4, r0, #16
   25a14:	lsr	sl, r0, #8
   25a18:	b	25ae8 <sfbpf_parse+0x15e4>
   25a1c:	mov	sl, #0
   25a20:	mov	r6, #36	; 0x24
   25a24:	b	25a30 <sfbpf_parse+0x152c>
   25a28:	mov	sl, #0
   25a2c:	mov	r6, #20
   25a30:	mov	r4, #0
   25a34:	mov	r5, #0
   25a38:	b	25ae8 <sfbpf_parse+0x15e4>
   25a3c:	ldr	r6, [r9, #-16]
   25a40:	ldr	r0, [r9]
   25a44:	str	ip, [sp, #12]
   25a48:	mov	r5, r2
   25a4c:	mov	r4, r3
   25a50:	mov	sl, lr
   25a54:	mov	r1, r6
   25a58:	bl	11c5c <sf_gen_ecode>
   25a5c:	b	25a80 <sfbpf_parse+0x157c>
   25a60:	ldr	r6, [r9, #-16]
   25a64:	ldr	r0, [r9]
   25a68:	str	ip, [sp, #12]
   25a6c:	mov	r5, r2
   25a70:	mov	r4, r3
   25a74:	mov	sl, lr
   25a78:	mov	r1, r6
   25a7c:	bl	175a8 <sf_gen_acode>
   25a80:	str	r0, [sp, #28]
   25a84:	ldr	r0, [r9]
   25a88:	bl	ea4 <free@plt>
   25a8c:	ldr	ip, [sp, #12]
   25a90:	mov	lr, sl
   25a94:	mov	r3, r4
   25a98:	mov	r2, r5
   25a9c:	b	25adc <sfbpf_parse+0x15d8>
   25aa0:	ldr	r6, [r9, #-16]
   25aa4:	ldr	r0, [r9]
   25aa8:	str	r2, [sp, #16]
   25aac:	mov	r1, #0
   25ab0:	mov	r2, #128	; 0x80
   25ab4:	mov	r5, r3
   25ab8:	mov	r3, r6
   25abc:	mov	r4, ip
   25ac0:	mov	sl, lr
   25ac4:	bl	11a98 <sf_gen_mcode6>
   25ac8:	ldr	r2, [sp, #16]
   25acc:	mov	lr, sl
   25ad0:	mov	r3, r5
   25ad4:	mov	ip, r4
   25ad8:	str	r0, [sp, #28]
   25adc:	lsr	r5, r6, #24
   25ae0:	lsr	r4, r6, #16
   25ae4:	lsr	sl, r6, #8
   25ae8:	uxtb	r0, r6
   25aec:	uxtb	r1, r4
   25af0:	sub	r9, r9, r2, lsl #4
   25af4:	bfi	r0, sl, #8, #8
   25af8:	orr	r0, r0, r1, lsl #16
   25afc:	orr	r0, r0, r5, lsl #24
   25b00:	str	r0, [r9, #16]!
   25b04:	stmib	r9, {r3, lr}
   25b08:	movw	r3, #669	; 0x29d
   25b0c:	ldr	r0, [sp, #28]
   25b10:	str	r0, [r9, #12]
   25b14:	lsl	r0, r2, #1
   25b18:	ldrsh	r2, [r8, -r0]!
   25b1c:	ldr	r0, [pc, #972]	; 25ef0 <sfbpf_parse+0x19ec>
   25b20:	ldr	r1, [pc, #972]	; 25ef4 <sfbpf_parse+0x19f0>
   25b24:	add	r0, pc, r0
   25b28:	add	r1, pc, r1
   25b2c:	ldrb	r0, [r0, r7]
   25b30:	sub	r0, r0, #126	; 0x7e
   25b34:	add	r1, r1, r0, lsl #1
   25b38:	ldrsh	r1, [r1]
   25b3c:	add	r1, r2, r1
   25b40:	cmp	r1, r3
   25b44:	bhi	25b74 <sfbpf_parse+0x1670>
   25b48:	ldr	r3, [pc, #936]	; 25ef8 <sfbpf_parse+0x19f4>
   25b4c:	uxth	r2, r2
   25b50:	add	r3, pc, r3
   25b54:	add	r3, r3, r1, lsl #1
   25b58:	ldrh	r3, [r3]
   25b5c:	cmp	r3, r2
   25b60:	bne	25b74 <sfbpf_parse+0x1670>
   25b64:	ldr	r0, [pc, #912]	; 25efc <sfbpf_parse+0x19f8>
   25b68:	add	r0, pc, r0
   25b6c:	add	r0, r0, r1, lsl #1
   25b70:	b	25b80 <sfbpf_parse+0x167c>
   25b74:	ldr	r1, [pc, #900]	; 25f00 <sfbpf_parse+0x19fc>
   25b78:	add	r1, pc, r1
   25b7c:	add	r0, r1, r0, lsl #1
   25b80:	ldrsh	sl, [r0]
   25b84:	ldr	r4, [sp, #24]
   25b88:	mov	r6, #15
   25b8c:	b	24550 <sfbpf_parse+0x4c>
   25b90:	mov	r1, #0
   25b94:	b	25c40 <sfbpf_parse+0x173c>
   25b98:	mov	r6, #0
   25b9c:	b	25c28 <sfbpf_parse+0x1724>
   25ba0:	ldr	r1, [pc, #760]	; 25ea0 <sfbpf_parse+0x199c>
   25ba4:	add	r1, pc, r1
   25ba8:	ldr	r0, [r1, #4]
   25bac:	cmp	r0, #0
   25bb0:	bne	25bcc <sfbpf_parse+0x16c8>
   25bb4:	b	25e40 <sfbpf_parse+0x193c>
   25bb8:	ldr	r1, [pc, #772]	; 25ec4 <sfbpf_parse+0x19c0>
   25bbc:	add	r1, pc, r1
   25bc0:	ldr	r0, [r1, #4]
   25bc4:	cmp	r0, #0
   25bc8:	beq	25e40 <sfbpf_parse+0x193c>
   25bcc:	ldr	r6, [r9]
   25bd0:	add	r4, r1, #12
   25bd4:	mov	r1, r6
   25bd8:	bl	24000 <sfbpf_strcasecmp>
   25bdc:	cmp	r0, #0
   25be0:	beq	25bf4 <sfbpf_parse+0x16f0>
   25be4:	ldr	r0, [r4], #8
   25be8:	cmp	r0, #0
   25bec:	bne	25bd4 <sfbpf_parse+0x16d0>
   25bf0:	b	25e40 <sfbpf_parse+0x193c>
   25bf4:	ldr	r6, [r4, #-12]
   25bf8:	cmn	r6, #1
   25bfc:	bne	25cf4 <sfbpf_parse+0x17f0>
   25c00:	b	25e40 <sfbpf_parse+0x193c>
   25c04:	mov	r1, #1
   25c08:	b	25c40 <sfbpf_parse+0x173c>
   25c0c:	mov	r6, #1
   25c10:	b	25c28 <sfbpf_parse+0x1724>
   25c14:	mov	r0, #1
   25c18:	b	25cd4 <sfbpf_parse+0x17d0>
   25c1c:	mov	r1, #2
   25c20:	b	25c40 <sfbpf_parse+0x173c>
   25c24:	mov	r6, #2
   25c28:	mov	r4, #0
   25c2c:	mov	r5, #0
   25c30:	b	25d00 <sfbpf_parse+0x17fc>
   25c34:	mov	r0, #2
   25c38:	b	25cd4 <sfbpf_parse+0x17d0>
   25c3c:	mov	r1, #3
   25c40:	ldr	r0, [pc, #632]	; 25ec0 <sfbpf_parse+0x19bc>
   25c44:	add	r0, pc, r0
   25c48:	ldr	r6, [r0, r1, lsl #3]
   25c4c:	b	25cf4 <sfbpf_parse+0x17f0>
   25c50:	mov	r0, #3
   25c54:	b	25cd4 <sfbpf_parse+0x17d0>
   25c58:	mov	r0, #4
   25c5c:	b	25cd4 <sfbpf_parse+0x17d0>
   25c60:	mov	r0, #5
   25c64:	b	25cd4 <sfbpf_parse+0x17d0>
   25c68:	mov	r0, #6
   25c6c:	b	25cd4 <sfbpf_parse+0x17d0>
   25c70:	mov	r0, #7
   25c74:	b	25cd4 <sfbpf_parse+0x17d0>
   25c78:	mov	r0, #8
   25c7c:	b	25cd4 <sfbpf_parse+0x17d0>
   25c80:	mov	r0, #9
   25c84:	b	25cd4 <sfbpf_parse+0x17d0>
   25c88:	mov	r0, #10
   25c8c:	b	25cd4 <sfbpf_parse+0x17d0>
   25c90:	mov	r0, #11
   25c94:	b	25cd4 <sfbpf_parse+0x17d0>
   25c98:	mov	r0, #12
   25c9c:	b	25cd4 <sfbpf_parse+0x17d0>
   25ca0:	mov	r0, #13
   25ca4:	b	25cd4 <sfbpf_parse+0x17d0>
   25ca8:	mov	r0, #14
   25cac:	b	25cd4 <sfbpf_parse+0x17d0>
   25cb0:	mov	r0, #15
   25cb4:	b	25cd4 <sfbpf_parse+0x17d0>
   25cb8:	mov	r0, #16
   25cbc:	b	25cd4 <sfbpf_parse+0x17d0>
   25cc0:	mov	r0, #17
   25cc4:	b	25cd4 <sfbpf_parse+0x17d0>
   25cc8:	mov	r0, #18
   25ccc:	b	25cd4 <sfbpf_parse+0x17d0>
   25cd0:	mov	r0, #19
   25cd4:	ldr	r1, [pc, #504]	; 25ed4 <sfbpf_parse+0x19d0>
   25cd8:	add	r1, pc, r1
   25cdc:	add	r0, r1, r0, lsl #3
   25ce0:	ldr	r1, [pc, #496]	; 25ed8 <sfbpf_parse+0x19d4>
   25ce4:	ldr	r0, [r0]
   25ce8:	add	r1, pc, r1
   25cec:	ldr	r1, [r1, r4, lsl #3]
   25cf0:	orr	r6, r1, r0
   25cf4:	lsr	r5, r6, #24
   25cf8:	lsr	r4, r6, #16
   25cfc:	lsr	sl, r6, #8
   25d00:	ldr	ip, [sp, #12]
   25d04:	ldr	r2, [sp, #16]
   25d08:	ldr	r3, [sp, #8]
   25d0c:	ldr	lr, [sp, #4]
   25d10:	b	25ae8 <sfbpf_parse+0x15e4>
   25d14:	mov	r0, #0
   25d18:	b	25d40 <sfbpf_parse+0x183c>
   25d1c:	mov	r0, #1
   25d20:	b	25d40 <sfbpf_parse+0x183c>
   25d24:	mov	r0, #2
   25d28:	b	25d40 <sfbpf_parse+0x183c>
   25d2c:	mov	r0, #3
   25d30:	b	25d40 <sfbpf_parse+0x183c>
   25d34:	mov	r0, #4
   25d38:	b	25d40 <sfbpf_parse+0x183c>
   25d3c:	mov	r0, #5
   25d40:	ldr	r1, [pc, #464]	; 25f18 <sfbpf_parse+0x1a14>
   25d44:	mov	r4, #1
   25d48:	add	r1, pc, r1
   25d4c:	b	25cdc <sfbpf_parse+0x17d8>
   25d50:	mov	r1, #0
   25d54:	b	25dbc <sfbpf_parse+0x18b8>
   25d58:	mov	r1, #1
   25d5c:	b	25dbc <sfbpf_parse+0x18b8>
   25d60:	mov	r1, #2
   25d64:	b	25dbc <sfbpf_parse+0x18b8>
   25d68:	mov	r1, #3
   25d6c:	b	25dbc <sfbpf_parse+0x18b8>
   25d70:	mov	r1, #4
   25d74:	b	25dbc <sfbpf_parse+0x18b8>
   25d78:	mov	r1, #5
   25d7c:	b	25dbc <sfbpf_parse+0x18b8>
   25d80:	mov	r1, #6
   25d84:	b	25dbc <sfbpf_parse+0x18b8>
   25d88:	mov	r1, #7
   25d8c:	b	25dbc <sfbpf_parse+0x18b8>
   25d90:	mov	r1, #8
   25d94:	b	25dbc <sfbpf_parse+0x18b8>
   25d98:	mov	r1, #9
   25d9c:	b	25dbc <sfbpf_parse+0x18b8>
   25da0:	mov	r1, #10
   25da4:	b	25dbc <sfbpf_parse+0x18b8>
   25da8:	mov	r1, #11
   25dac:	b	25dbc <sfbpf_parse+0x18b8>
   25db0:	mov	r1, #12
   25db4:	b	25dbc <sfbpf_parse+0x18b8>
   25db8:	mov	r1, #13
   25dbc:	ldr	r0, [pc, #348]	; 25f20 <sfbpf_parse+0x1a1c>
   25dc0:	mov	r4, #2
   25dc4:	add	r0, pc, r0
   25dc8:	add	r0, r0, r1, lsl #3
   25dcc:	b	25ce0 <sfbpf_parse+0x17dc>
   25dd0:	sub	r0, fp, #432	; 0x1b0
   25dd4:	mov	r6, #0
   25dd8:	cmp	r4, r0
   25ddc:	bne	25df4 <sfbpf_parse+0x18f0>
   25de0:	mov	r0, r6
   25de4:	sub	sp, fp, #28
   25de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25dec:	mov	r6, #1
   25df0:	mov	r4, r5
   25df4:	mov	r0, r4
   25df8:	bl	ea4 <free@plt>
   25dfc:	mov	r0, r6
   25e00:	sub	sp, fp, #28
   25e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e08:	ldr	r0, [pc, #256]	; 25f10 <sfbpf_parse+0x1a0c>
   25e0c:	add	r0, pc, r0
   25e10:	bl	25ffc <sfbpf_error>
   25e14:	ldr	r0, [pc, #232]	; 25f04 <sfbpf_parse+0x1a00>
   25e18:	ldr	r0, [pc, r0]
   25e1c:	ldr	r1, [pc, #228]	; 25f08 <sfbpf_parse+0x1a04>
   25e20:	add	r0, r0, #1
   25e24:	add	r1, pc, r1
   25e28:	str	r0, [r1]
   25e2c:	ldr	r0, [pc, #216]	; 25f0c <sfbpf_parse+0x1a08>
   25e30:	add	r0, pc, r0
   25e34:	bl	25ffc <sfbpf_error>
   25e38:	bl	25fcc <pfreason_to_num>
   25e3c:	bl	25fe4 <pfaction_to_num>
   25e40:	ldr	r0, [pc, #128]	; 25ec8 <sfbpf_parse+0x19c4>
   25e44:	add	r0, pc, r0
   25e48:	bl	2204 <sf_bpf_error>
   25e4c:	ldr	r0, [pc, #84]	; 25ea8 <sfbpf_parse+0x19a4>
   25e50:	add	r0, pc, r0
   25e54:	bl	2204 <sf_bpf_error>
   25e58:	ldr	r0, [pc, #80]	; 25eb0 <sfbpf_parse+0x19ac>
   25e5c:	add	r0, pc, r0
   25e60:	bl	2204 <sf_bpf_error>
   25e64:	ldr	r0, [pc, #72]	; 25eb4 <sfbpf_parse+0x19b0>
   25e68:	add	r0, pc, r0
   25e6c:	bl	2204 <sf_bpf_error>
   25e70:	ldr	r0, [pc, #52]	; 25eac <sfbpf_parse+0x19a8>
   25e74:	add	r0, pc, r0
   25e78:	bl	2204 <sf_bpf_error>
   25e7c:	ldr	r0, [pc, #160]	; 25f24 <sfbpf_parse+0x1a20>
   25e80:	add	r0, pc, r0
   25e84:	bl	2204 <sf_bpf_error>
   25e88:	ldr	r0, [pc, #92]	; 25eec <sfbpf_parse+0x19e8>
   25e8c:	add	r0, pc, r0
   25e90:	bl	2204 <sf_bpf_error>
   25e94:	ldr	r0, [pc, #152]	; 25f34 <sfbpf_parse+0x1a30>
   25e98:	add	r0, pc, r0
   25e9c:	bl	2204 <sf_bpf_error>
   25ea0:	.word	0x00020204
   25ea4:	.word	0x00020f88
   25ea8:	.word	0x000053d4
   25eac:	.word	0x000053d3
   25eb0:	.word	0x00005413
   25eb4:	.word	0x0000542b
   25eb8:	.word	0x0000636d
   25ebc:	.word	0x0000627b
   25ec0:	.word	0x00020114
   25ec4:	.word	0x00020294
   25ec8:	.word	0x000054a5
   25ecc:	.word	0x00005e18
   25ed0:	.word	0x00005e03
   25ed4:	.word	0x000200d0
   25ed8:	.word	0x000200a0
   25edc:	.word	0x00006151
   25ee0:	.word	0x00006143
   25ee4:	.word	0x00006122
   25ee8:	.word	0x00006111
   25eec:	.word	0x0000548c
   25ef0:	.word	0x0000557d
   25ef4:	.word	0x00005644
   25ef8:	.word	0x000048fc
   25efc:	.word	0x00004e20
   25f00:	.word	0x00005650
   25f04:	.word	0x00020ba4
   25f08:	.word	0x00020b98
   25f0c:	.word	0x00005501
   25f10:	.word	0x00005532
   25f14:	.word	0x00005cae
   25f18:	.word	0x00020108
   25f1c:	.word	0x00005c46
   25f20:	.word	0x000200c4
   25f24:	.word	0x00005455
   25f28:	.word	0x00006267
   25f2c:	.word	0x0000625a
   25f30:	.word	0x00006246
   25f34:	.word	0x00005424
   25f38:	.word	0x00005df7
   25f3c:	.word	0x00005deb
   25f40:	.word	0x00005dae
   25f44:	.word	0x00005da1
   25f48:	.word	0x00005d95
   25f4c:	.word	0x00005d89
   25f50:	.word	0x00005d7e
   25f54:	.word	0x00005d6f
   25f58:	.word	0x00005d61
   25f5c:	.word	0x00005d53
   25f60:	.word	0x00005d46
   25f64:	.word	0x00005d35
   25f68:	.word	0x00005d22
   25f6c:	.word	0x00005d13
   25f70:	.word	0x00005d0c
   25f74:	.word	0x00005cfb
   25f78:	.word	0x00005cda
   25f7c:	.word	0x00005cc9
   25f80:	.word	0x00005cc2
   25f84:	.word	0x00005c9a
   25f88:	.word	0x00005c94
   25f8c:	.word	0x00005c6e
   25f90:	.word	0x00005c5d
   25f94:	.word	0x00005c59
   25f98:	.word	0x00005c3e
   25f9c:	.word	0x00005c37
   25fa0:	.word	0x00005bec
   25fa4:	.word	0x00005beb
   25fa8:	.word	0x00005be3
   25fac:	.word	0x00005bdc
   25fb0:	.word	0x00005b91
   25fb4:	.word	0x00005b82
   25fb8:	.word	0x00005b7a
   25fbc:	.word	0x00005b73
   25fc0:	.word	0x00005b70
   25fc4:	.word	0x00005b5c
   25fc8:	.word	0x00005b50

00025fcc <pfreason_to_num>:
   25fcc:	push	{fp, lr}
   25fd0:	mov	fp, sp
   25fd4:	ldr	r0, [pc, #4]	; 25fe0 <pfreason_to_num+0x14>
   25fd8:	add	r0, pc, r0
   25fdc:	bl	2204 <sf_bpf_error>
   25fe0:	.word	0x00002f14

00025fe4 <pfaction_to_num>:
   25fe4:	push	{fp, lr}
   25fe8:	mov	fp, sp
   25fec:	ldr	r0, [pc, #4]	; 25ff8 <pfaction_to_num+0x14>
   25ff0:	add	r0, pc, r0
   25ff4:	bl	2204 <sf_bpf_error>
   25ff8:	.word	0x00002efc

00025ffc <sfbpf_error>:
   25ffc:	push	{fp, lr}
   26000:	mov	fp, sp
   26004:	mov	r1, r0
   26008:	ldr	r0, [pc, #28]	; 2602c <sfbpf_error+0x30>
   2600c:	ldr	r0, [pc, r0]
   26010:	ldr	r2, [pc, #24]	; 26030 <sfbpf_error+0x34>
   26014:	add	r0, r0, #1
   26018:	add	r2, pc, r2
   2601c:	str	r0, [r2]
   26020:	ldr	r0, [pc, #12]	; 26034 <sfbpf_error+0x38>
   26024:	add	r0, pc, r0
   26028:	bl	2204 <sf_bpf_error>
   2602c:	.word	0x00020954
   26030:	.word	0x00020948
   26034:	.word	0x00003c91

00026038 <sfbpf_lex>:
   26038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2603c:	add	fp, sp, #28
   26040:	sub	sp, sp, #84	; 0x54
   26044:	ldr	lr, [pc, #4092]	; 27048 <sfbpf_lex+0x1010>
   26048:	add	lr, pc, lr
   2604c:	ldrb	r0, [lr]
   26050:	cmp	r0, #0
   26054:	bne	261b0 <sfbpf_lex+0x178>
   26058:	mov	r0, #1
   2605c:	strb	r0, [lr]
   26060:	ldrb	r1, [lr, #4]
   26064:	cmp	r1, #0
   26068:	strbeq	r0, [lr, #4]
   2606c:	ldr	r4, [pc, #4068]	; 27058 <sfbpf_lex+0x1020>
   26070:	ldr	r4, [pc, r4]
   26074:	cmp	r4, #0
   26078:	bne	26094 <sfbpf_lex+0x5c>
   2607c:	ldr	r0, [pc, #4084]	; 27078 <sfbpf_lex+0x1040>
   26080:	ldr	r0, [pc, r0]
   26084:	ldr	r4, [r0]
   26088:	ldr	r0, [pc, #4088]	; 27088 <sfbpf_lex+0x1050>
   2608c:	add	r0, pc, r0
   26090:	str	r4, [r0]
   26094:	ldr	r5, [pc, #4080]	; 2708c <sfbpf_lex+0x1054>
   26098:	add	r5, pc, r5
   2609c:	ldr	r0, [r5, #4]
   260a0:	cmp	r0, #0
   260a4:	beq	26118 <sfbpf_lex+0xe0>
   260a8:	ldr	r0, [lr, #8]
   260ac:	cmp	r0, #0
   260b0:	beq	26134 <sfbpf_lex+0xfc>
   260b4:	ldr	r3, [lr, #12]
   260b8:	mov	r2, r0
   260bc:	ldr	r1, [r2, r3, lsl #2]!
   260c0:	cmp	r1, #0
   260c4:	bne	26180 <sfbpf_lex+0x148>
   260c8:	ldr	r1, [lr, #36]	; 0x24
   260cc:	mov	r6, lr
   260d0:	sub	r2, r1, #1
   260d4:	cmp	r3, r2
   260d8:	bcc	26160 <sfbpf_lex+0x128>
   260dc:	add	r4, r1, #8
   260e0:	lsl	r1, r4, #2
   260e4:	bl	eec <realloc@plt>
   260e8:	cmp	r0, #0
   260ec:	str	r0, [r6, #8]
   260f0:	beq	279e0 <sfbpf_lex+0x19a8>
   260f4:	ldr	r1, [r6, #36]	; 0x24
   260f8:	vmov.i32	q8, #0	; 0x00000000
   260fc:	str	r4, [r6, #36]	; 0x24
   26100:	add	r0, r0, r1, lsl #2
   26104:	vst1.32	{d16-d17}, [r0]!
   26108:	vst1.32	{d16-d17}, [r0]
   2610c:	ldr	r4, [pc, #4088]	; 2710c <sfbpf_lex+0x10d4>
   26110:	ldr	r4, [pc, r4]
   26114:	b	26160 <sfbpf_lex+0x128>
   26118:	ldr	r0, [pc, #4092]	; 2711c <sfbpf_lex+0x10e4>
   2611c:	ldr	r0, [pc, r0]
   26120:	ldr	r0, [r0]
   26124:	str	r0, [r5, #4]
   26128:	ldr	r0, [lr, #8]
   2612c:	cmp	r0, #0
   26130:	bne	260b4 <sfbpf_lex+0x7c>
   26134:	mov	r0, #4
   26138:	mov	r6, lr
   2613c:	bl	f1c <malloc@plt>
   26140:	cmp	r0, #0
   26144:	str	r0, [r6, #8]
   26148:	beq	279e0 <sfbpf_lex+0x19a8>
   2614c:	mov	r1, #0
   26150:	str	r1, [r0]
   26154:	mov	r0, #1
   26158:	str	r1, [r6, #12]
   2615c:	str	r0, [r6, #36]	; 0x24
   26160:	mov	r0, r4
   26164:	mov	r1, #16384	; 0x4000
   26168:	bl	27b40 <sfbpf__create_buffer>
   2616c:	mov	r1, r0
   26170:	ldr	r2, [r6, #8]
   26174:	ldr	r0, [r6, #12]
   26178:	mov	lr, r6
   2617c:	str	r1, [r2, r0, lsl #2]!
   26180:	ldr	r0, [r1, #16]
   26184:	str	r0, [lr, #28]
   26188:	ldr	r0, [r1, #8]
   2618c:	ldr	r1, [pc, #4088]	; 2718c <sfbpf_lex+0x1154>
   26190:	add	r1, pc, r1
   26194:	str	r0, [lr, #16]
   26198:	str	r0, [r1]
   2619c:	ldr	r1, [r2]
   261a0:	ldr	r1, [r1]
   261a4:	str	r1, [r5]
   261a8:	ldrb	r0, [r0]
   261ac:	strb	r0, [lr, #5]
   261b0:	ldr	ip, [pc, #4080]	; 271a8 <sfbpf_lex+0x1170>
   261b4:	ldr	r7, [pc, #4080]	; 271ac <sfbpf_lex+0x1174>
   261b8:	ldr	r4, [pc, #4080]	; 271b0 <sfbpf_lex+0x1178>
   261bc:	ldr	r9, [pc, #4080]	; 271b4 <sfbpf_lex+0x117c>
   261c0:	ldr	r6, [pc, #4080]	; 271b8 <sfbpf_lex+0x1180>
   261c4:	ldr	r8, [pc, #4080]	; 271bc <sfbpf_lex+0x1184>
   261c8:	movw	sl, #1434	; 0x59a
   261cc:	add	ip, pc, ip
   261d0:	add	r7, pc, r7
   261d4:	add	r4, pc, r4
   261d8:	add	r9, pc, r9
   261dc:	add	r6, pc, r6
   261e0:	add	r8, pc, r8
   261e4:	b	26224 <sfbpf_lex+0x1ec>
   261e8:	ldr	r0, [pc, #4084]	; 271e4 <sfbpf_lex+0x11ac>
   261ec:	mov	r2, #1
   261f0:	mov	r5, lr
   261f4:	mov	r6, ip
   261f8:	add	r0, pc, r0
   261fc:	ldr	r3, [r0, #4]
   26200:	ldr	r1, [pc, #4092]	; 27204 <sfbpf_lex+0x11cc>
   26204:	ldr	r1, [pc, r1]
   26208:	ldr	r0, [pc, #4088]	; 27208 <sfbpf_lex+0x11d0>
   2620c:	ldr	r0, [pc, r0]
   26210:	bl	ef8 <fwrite@plt>
   26214:	mov	ip, r6
   26218:	ldr	r6, [pc, #4088]	; 27218 <sfbpf_lex+0x11e0>
   2621c:	mov	lr, r5
   26220:	add	r6, pc, r6
   26224:	ldr	r5, [lr, #16]
   26228:	ldrb	r0, [lr, #5]
   2622c:	strb	r0, [r5]
   26230:	str	r5, [sp, #40]	; 0x28
   26234:	ldrb	r0, [lr, #4]
   26238:	b	26244 <sfbpf_lex+0x20c>
   2623c:	ldr	ip, [pc, #4092]	; 27240 <sfbpf_lex+0x1208>
   26240:	add	ip, pc, ip
   26244:	add	r2, r7, r0, lsl #1
   26248:	ldrb	r1, [r5]
   2624c:	ldrh	r2, [r2]
   26250:	ldrb	r1, [ip, r1]
   26254:	cmp	r2, #0
   26258:	add	r2, r4, r0, lsl #1
   2625c:	ldrsh	r2, [r2]
   26260:	strne	r0, [lr, #20]
   26264:	strne	r5, [lr, #24]
   26268:	add	r3, r2, r1
   2626c:	add	r2, r9, r3, lsl #1
   26270:	ldrsh	r2, [r2]
   26274:	cmp	r0, r2
   26278:	beq	262cc <sfbpf_lex+0x294>
   2627c:	mov	r2, r1
   26280:	add	r0, r8, r0, lsl #1
   26284:	ldrsh	r0, [r0]
   26288:	cmp	r0, sl
   2628c:	uxth	r6, r0
   26290:	ldrge	r2, [pc, #4088]	; 27290 <sfbpf_lex+0x1258>
   26294:	addge	r2, pc, r2
   26298:	ldrbge	r2, [r2, r1]
   2629c:	add	r1, r4, r0, lsl #1
   262a0:	ldrsh	r1, [r1]
   262a4:	uxtab	r3, r1, r2
   262a8:	add	r1, r9, r3, lsl #1
   262ac:	ldrh	r7, [r1]
   262b0:	uxtb	r1, r2
   262b4:	cmp	r6, r7
   262b8:	bne	26280 <sfbpf_lex+0x248>
   262bc:	ldr	r7, [pc, #4072]	; 272ac <sfbpf_lex+0x1274>
   262c0:	ldr	r6, [pc, #4072]	; 272b0 <sfbpf_lex+0x1278>
   262c4:	add	r7, pc, r7
   262c8:	add	r6, pc, r6
   262cc:	add	r0, r6, r3, lsl #1
   262d0:	movw	r2, #7401	; 0x1ce9
   262d4:	add	r5, r5, #1
   262d8:	ldrsh	r0, [r0]
   262dc:	add	r1, r4, r0, lsl #1
   262e0:	ldrh	r1, [r1]
   262e4:	cmp	r1, r2
   262e8:	bne	26244 <sfbpf_lex+0x20c>
   262ec:	ldr	r3, [sp, #40]	; 0x28
   262f0:	add	r0, r7, r0, lsl #1
   262f4:	ldrh	r0, [r0]
   262f8:	cmp	r0, #0
   262fc:	bne	26334 <sfbpf_lex+0x2fc>
   26300:	b	26324 <sfbpf_lex+0x2ec>
   26304:	ldrb	r0, [lr, #5]
   26308:	strb	r0, [r5]
   2630c:	ldr	r0, [lr, #20]
   26310:	ldr	r5, [lr, #24]
   26314:	add	r0, r7, r0, lsl #1
   26318:	ldrh	r0, [r0]
   2631c:	cmp	r0, #0
   26320:	bne	26334 <sfbpf_lex+0x2fc>
   26324:	ldr	r0, [lr, #20]
   26328:	ldr	r5, [lr, #24]
   2632c:	add	r0, r7, r0, lsl #1
   26330:	ldrh	r0, [r0]
   26334:	ldr	r1, [pc, #4048]	; 2730c <sfbpf_lex+0x12d4>
   26338:	sxth	r0, r0
   2633c:	add	r1, pc, r1
   26340:	str	r3, [r1]
   26344:	sub	r1, r5, r3
   26348:	ldr	r2, [pc, #4032]	; 27310 <sfbpf_lex+0x12d8>
   2634c:	add	r2, pc, r2
   26350:	str	r1, [r2]
   26354:	ldrb	r1, [r5]
   26358:	strb	r1, [lr, #5]
   2635c:	mov	r1, #0
   26360:	strb	r1, [r5]
   26364:	str	r5, [lr, #16]
   26368:	cmp	r0, #146	; 0x92
   2636c:	bhi	279bc <sfbpf_lex+0x1984>
   26370:	add	r1, pc, #4
   26374:	ldr	r0, [r1, r0, lsl #2]
   26378:	add	pc, r1, r0
   2637c:	.word	0xffffff88
   26380:	.word	0x00001394
   26384:	.word	0x00001284
   26388:	.word	0x00000d00
   2638c:	.word	0x00000d00
   26390:	.word	0x0000100c
   26394:	.word	0x00001024
   26398:	.word	0x000010e4
   2639c:	.word	0x000011a4
   263a0:	.word	0x000011ec
   263a4:	.word	0x00000ec8
   263a8:	.word	0x000011d4
   263ac:	.word	0x000014a4
   263b0:	.word	0x00000e14
   263b4:	.word	0x00001290
   263b8:	.word	0x000014b0
   263bc:	.word	0x000013f0
   263c0:	.word	0x00000db0
   263c4:	.word	0x00001388
   263c8:	.word	0x00001414
   263cc:	.word	0x00001444
   263d0:	.word	0x00000dc8
   263d4:	.word	0x0000148c
   263d8:	.word	0x000014c8
   263dc:	.word	0x00000f84
   263e0:	.word	0x00000e04
   263e4:	.word	0x000013c4
   263e8:	.word	0x00001340
   263ec:	.word	0x00000e90
   263f0:	.word	0x00000d4c
   263f4:	.word	0x00000d4c
   263f8:	.word	0x00000cd0
   263fc:	.word	0x00000cd0
   26400:	.word	0x0000142c
   26404:	.word	0x0000112c
   26408:	.word	0x00001018
   2640c:	.word	0x000010f0
   26410:	.word	0x00000f24
   26414:	.word	0x000011b0
   26418:	.word	0x00001198
   2641c:	.word	0x00000ea0
   26420:	.word	0x00001094
   26424:	.word	0x00000f18
   26428:	.word	0x0000145c
   2642c:	.word	0x00000df8
   26430:	.word	0x000013e4
   26434:	.word	0x000011e0
   26438:	.word	0x00000dec
   2643c:	.word	0x0000150c
   26440:	.word	0x00001260
   26444:	.word	0x000013fc
   26448:	.word	0x000012d0
   2644c:	.word	0x00000dbc
   26450:	.word	0x00001150
   26454:	.word	0x000011c8
   26458:	.word	0x00001450
   2645c:	.word	0x0000134c
   26460:	.word	0x000013a0
   26464:	.word	0x000014bc
   26468:	.word	0x000012a0
   2646c:	.word	0x0000137c
   26470:	.word	0x00001138
   26474:	.word	0x0000107c
   26478:	.word	0x00000f60
   2647c:	.word	0x00001064
   26480:	.word	0x00000f54
   26484:	.word	0x00000eb8
   26488:	.word	0x00001070
   2648c:	.word	0x00000e20
   26490:	.word	0x000010d8
   26494:	.word	0x0000115c
   26498:	.word	0x00000de0
   2649c:	.word	0x000011f8
   264a0:	.word	0x00001120
   264a4:	.word	0x000013b8
   264a8:	.word	0x00001408
   264ac:	.word	0x00000eac
   264b0:	.word	0x00001544
   264b4:	.word	0x000010fc
   264b8:	.word	0x00001088
   264bc:	.word	0x000012ac
   264c0:	.word	0x00001498
   264c4:	.word	0x000011bc
   264c8:	.word	0x00001204
   264cc:	.word	0x00001420
   264d0:	.word	0x0000146c
   264d4:	.word	0x00001318
   264d8:	.word	0x00000da4
   264dc:	.word	0x000013ac
   264e0:	.word	0x00001108
   264e4:	.word	0x0000104c
   264e8:	.word	0x00000f6c
   264ec:	.word	0x00001058
   264f0:	.word	0x00000f78
   264f4:	.word	0x00000f08
   264f8:	.word	0x00000cc0
   264fc:	.word	0x00000cc0
   26500:	.word	0x00001254
   26504:	.word	0x00001144
   26508:	.word	0x00001278
   2650c:	.word	0x00000dd4
   26510:	.word	0x0000126c
   26514:	.word	0xfffffea8
   26518:	.word	0x00001184
   2651c:	.word	0x00001114
   26520:	.word	0x000012c4
   26524:	.word	0x00000d94
   26528:	.word	0x00001438
   2652c:	.word	0x00001478
   26530:	.word	0x000012b8
   26534:	.word	0x0000151c
   26538:	.word	0x00001358
   2653c:	.word	0x00001210
   26540:	.word	0x00000e44
   26544:	.word	0x00000f98
   26548:	.word	0x000015dc
   2654c:	.word	0x00000ca4
   26550:	.word	0x00000ce0
   26554:	.word	0x00000ca4
   26558:	.word	0x00001030
   2655c:	.word	0x00000d14
   26560:	.word	0x000010a0
   26564:	.word	0x00000d30
   26568:	.word	0x000014f0
   2656c:	.word	0x00000f38
   26570:	.word	0x00000d74
   26574:	.word	0x00000e6c
   26578:	.word	0x00000d58
   2657c:	.word	0x000012fc
   26580:	.word	0x00001324
   26584:	.word	0x00000c88
   26588:	.word	0x000012e0
   2658c:	.word	0x000014d4
   26590:	.word	0x00000d58
   26594:	.word	0x00000ce0
   26598:	.word	0x000010bc
   2659c:	.word	0x00000d14
   265a0:	.word	0x00000d30
   265a4:	.word	0x00000c88
   265a8:	.word	0x00001168
   265ac:	.word	0x00000ed4
   265b0:	.word	0x00000ee0
   265b4:	.word	0x00001608
   265b8:	.word	0x000015f0
   265bc:	.word	0xfffffe6c
   265c0:	.word	0x0000024c
   265c4:	.word	0x000013d4
   265c8:	ldrb	r0, [lr, #5]
   265cc:	ldr	r1, [pc, #4088]	; 275cc <sfbpf_lex+0x1594>
   265d0:	ldr	r1, [pc, r1]
   265d4:	strb	r0, [r5]
   265d8:	ldr	r0, [lr, #8]
   265dc:	str	r1, [sp, #4]
   265e0:	ldr	r1, [lr, #12]
   265e4:	str	r0, [sp, #12]
   265e8:	ldr	r2, [r0, r1, lsl #2]!
   265ec:	str	r1, [sp, #16]
   265f0:	mov	r1, r0
   265f4:	ldr	r0, [r2, #44]	; 0x2c
   265f8:	str	r1, [sp, #32]
   265fc:	cmp	r0, #0
   26600:	beq	2660c <sfbpf_lex+0x5d4>
   26604:	ldr	r0, [lr, #28]
   26608:	b	26648 <sfbpf_lex+0x610>
   2660c:	ldr	r0, [r2, #16]
   26610:	str	r0, [sp, #36]	; 0x24
   26614:	str	r0, [lr, #28]
   26618:	mov	r0, r1
   2661c:	ldr	r1, [pc, #4084]	; 27618 <sfbpf_lex+0x15e0>
   26620:	ldr	r1, [pc, r1]
   26624:	str	r1, [r2]
   26628:	mov	r1, r0
   2662c:	ldr	r2, [r0]
   26630:	str	r2, [sp, #40]	; 0x28
   26634:	mov	r2, #1
   26638:	ldr	r0, [sp, #40]	; 0x28
   2663c:	str	r2, [r0, #44]	; 0x2c
   26640:	ldr	r0, [sp, #36]	; 0x24
   26644:	ldr	r2, [r1]
   26648:	ldr	r1, [r2, #4]
   2664c:	str	r2, [sp, #24]
   26650:	ldr	r2, [lr, #16]
   26654:	add	r0, r1, r0
   26658:	str	r0, [sp, #36]	; 0x24
   2665c:	ldr	r0, [pc, #4084]	; 27658 <sfbpf_lex+0x1620>
   26660:	ldr	r0, [pc, r0]
   26664:	str	r0, [sp, #40]	; 0x28
   26668:	ldr	r0, [sp, #36]	; 0x24
   2666c:	cmp	r2, r0
   26670:	bls	26c74 <sfbpf_lex+0xc3c>
   26674:	add	r0, r0, #1
   26678:	cmp	r2, r0
   2667c:	bhi	279a4 <sfbpf_lex+0x196c>
   26680:	ldr	r0, [sp, #40]	; 0x28
   26684:	str	r2, [sp, #20]
   26688:	sub	r2, r2, r0
   2668c:	ldr	r0, [sp, #24]
   26690:	ldr	r0, [r0, #40]	; 0x28
   26694:	cmp	r0, #0
   26698:	beq	26770 <sfbpf_lex+0x738>
   2669c:	sub	r0, r2, #1
   266a0:	str	r2, [sp, #28]
   266a4:	cmp	r2, #2
   266a8:	ldr	r2, [sp, #24]
   266ac:	str	r3, [sp, #8]
   266b0:	str	r0, [sp, #36]	; 0x24
   266b4:	blt	267b0 <sfbpf_lex+0x778>
   266b8:	ldr	r0, [sp, #40]	; 0x28
   266bc:	ldr	r2, [sp, #20]
   266c0:	mvn	r0, r0
   266c4:	add	r3, r0, r2
   266c8:	mov	r0, #1
   266cc:	mov	r2, #0
   266d0:	cmp	r3, #1
   266d4:	movgt	r0, r3
   266d8:	cmp	r0, #16
   266dc:	str	r0, [sp, #24]
   266e0:	bcc	26788 <sfbpf_lex+0x750>
   266e4:	cmp	r3, #1
   266e8:	mov	r0, #1
   266ec:	movgt	r0, r3
   266f0:	mov	r3, r0
   266f4:	ldr	r0, [sp, #40]	; 0x28
   266f8:	str	r3, [sp]
   266fc:	add	r3, r0, r3
   26700:	cmp	r1, r3
   26704:	ldrcc	r0, [sp]
   26708:	ldrcc	r3, [sp, #40]	; 0x28
   2670c:	addcc	r0, r1, r0
   26710:	cmpcc	r3, r0
   26714:	bcc	26788 <sfbpf_lex+0x750>
   26718:	ldr	r0, [sp, #24]
   2671c:	mov	r7, ip
   26720:	ldr	ip, [sp, #40]	; 0x28
   26724:	mov	r6, lr
   26728:	bic	r2, r0, #-2147483633	; 0x8000000f
   2672c:	add	r0, ip, r2
   26730:	add	r3, r1, r2
   26734:	mov	lr, r2
   26738:	vld1.8	{d16-d17}, [ip]!
   2673c:	subs	lr, lr, #16
   26740:	vst1.8	{d16-d17}, [r1]!
   26744:	bne	26738 <sfbpf_lex+0x700>
   26748:	ldr	r1, [sp, #24]
   2674c:	mov	ip, r7
   26750:	ldr	r7, [pc, #4084]	; 2774c <sfbpf_lex+0x1714>
   26754:	mov	lr, r6
   26758:	ldr	r6, [pc, #4092]	; 2775c <sfbpf_lex+0x1724>
   2675c:	cmp	r1, r2
   26760:	add	r7, pc, r7
   26764:	add	r6, pc, r6
   26768:	bne	26790 <sfbpf_lex+0x758>
   2676c:	b	267a8 <sfbpf_lex+0x770>
   26770:	ldr	r1, [sp, #40]	; 0x28
   26774:	cmp	r2, #1
   26778:	movwne	r2, #2
   2677c:	cmp	r2, #1
   26780:	beq	26c60 <sfbpf_lex+0xc28>
   26784:	b	26dec <sfbpf_lex+0xdb4>
   26788:	ldr	r0, [sp, #40]	; 0x28
   2678c:	mov	r3, r1
   26790:	ldrb	r1, [r0], #1
   26794:	add	r2, r2, #1
   26798:	strb	r1, [r3], #1
   2679c:	ldr	r1, [sp, #36]	; 0x24
   267a0:	cmp	r2, r1
   267a4:	blt	26790 <sfbpf_lex+0x758>
   267a8:	ldr	r0, [sp, #32]
   267ac:	ldr	r2, [r0]
   267b0:	ldr	r0, [r2, #44]	; 0x2c
   267b4:	mov	r1, r2
   267b8:	ldr	r2, [sp, #20]
   267bc:	cmp	r0, #2
   267c0:	bne	2682c <sfbpf_lex+0x7f4>
   267c4:	mov	r0, #0
   267c8:	ldr	r3, [sp, #36]	; 0x24
   267cc:	str	r0, [lr, #28]
   267d0:	str	r0, [r1, #16]
   267d4:	ldr	r1, [sp, #12]
   267d8:	cmp	r3, #0
   267dc:	bne	26b58 <sfbpf_lex+0xb20>
   267e0:	ldr	r0, [pc, #4092]	; 277e4 <sfbpf_lex+0x17ac>
   267e4:	mov	r6, lr
   267e8:	mov	r7, ip
   267ec:	ldr	r0, [pc, r0]
   267f0:	bl	27ca4 <sfbpf_restart>
   267f4:	mov	lr, r6
   267f8:	ldr	r3, [sp, #36]	; 0x24
   267fc:	mov	ip, r7
   26800:	ldr	r7, [pc, #4088]	; 27800 <sfbpf_lex+0x17c8>
   26804:	ldr	r6, [pc, #4088]	; 27804 <sfbpf_lex+0x17cc>
   26808:	ldr	r2, [lr, #8]
   2680c:	ldr	r1, [lr, #12]
   26810:	ldr	r0, [lr, #28]
   26814:	add	r7, pc, r7
   26818:	add	r6, pc, r6
   2681c:	add	r2, r2, r1, lsl #2
   26820:	mov	r1, #1
   26824:	str	r1, [sp, #32]
   26828:	b	26b78 <sfbpf_lex+0xb40>
   2682c:	str	r1, [sp, #24]
   26830:	ldr	ip, [r1, #12]
   26834:	ldr	r1, [sp, #28]
   26838:	sub	r6, ip, r1
   2683c:	cmp	r6, #0
   26840:	ble	2684c <sfbpf_lex+0x814>
   26844:	ldr	ip, [sp, #32]
   26848:	b	268fc <sfbpf_lex+0x8c4>
   2684c:	mov	r0, r2
   26850:	ldr	r2, [sp, #24]
   26854:	ldr	r1, [r2, #20]
   26858:	cmp	r1, #0
   2685c:	beq	279cc <sfbpf_lex+0x1994>
   26860:	ldr	r6, [r2, #4]
   26864:	cmp	ip, #0
   26868:	mov	r7, r0
   2686c:	str	r0, [sp, #32]
   26870:	ble	2687c <sfbpf_lex+0x844>
   26874:	lsl	r1, ip, #1
   26878:	b	26888 <sfbpf_lex+0x850>
   2687c:	asr	r1, ip, #31
   26880:	add	r1, ip, r1, lsr #29
   26884:	add	r1, ip, r1, asr #3
   26888:	str	r1, [r2, #12]
   2688c:	add	r1, r1, #2
   26890:	mov	r0, r6
   26894:	mov	r7, r2
   26898:	bl	eec <realloc@plt>
   2689c:	cmp	r0, #0
   268a0:	str	r0, [r7, #4]
   268a4:	beq	279d4 <sfbpf_lex+0x199c>
   268a8:	ldr	r1, [sp, #32]
   268ac:	ldr	lr, [pc, #4064]	; 27894 <sfbpf_lex+0x185c>
   268b0:	ldr	r3, [sp, #28]
   268b4:	sub	r1, r1, r6
   268b8:	add	lr, pc, lr
   268bc:	add	r0, r0, r1
   268c0:	str	r0, [lr, #16]
   268c4:	ldr	r2, [lr, #8]
   268c8:	ldr	r1, [lr, #12]
   268cc:	str	r2, [sp, #32]
   268d0:	ldr	r2, [r2, r1, lsl #2]
   268d4:	ldr	ip, [r2, #12]
   268d8:	ldr	r7, [pc, #4076]	; 278cc <sfbpf_lex+0x1894>
   268dc:	sub	r6, ip, r3
   268e0:	add	r7, pc, r7
   268e4:	cmp	r6, #1
   268e8:	blt	26854 <sfbpf_lex+0x81c>
   268ec:	ldr	r0, [sp, #32]
   268f0:	str	r2, [sp, #24]
   268f4:	ldr	r2, [sp, #20]
   268f8:	add	ip, r0, r1, lsl #2
   268fc:	ldr	r1, [sp, #40]	; 0x28
   26900:	ldr	r0, [sp, #24]
   26904:	cmp	r6, #8192	; 0x2000
   26908:	movge	r6, #8192	; 0x2000
   2690c:	ldr	r0, [r0, #24]
   26910:	cmp	r0, #0
   26914:	beq	269d4 <sfbpf_lex+0x99c>
   26918:	sub	r0, r2, #1
   2691c:	str	r6, [sp, #32]
   26920:	sub	r0, r0, r1
   26924:	str	r0, [sp, #24]
   26928:	mov	r0, #0
   2692c:	str	r0, [sp, #40]	; 0x28
   26930:	ldr	r0, [pc, #3992]	; 278d0 <sfbpf_lex+0x1898>
   26934:	mov	r6, lr
   26938:	ldr	r0, [pc, r0]
   2693c:	bl	1018 <getc@plt>
   26940:	cmn	r0, #1
   26944:	cmpne	r0, #10
   26948:	beq	26988 <sfbpf_lex+0x950>
   2694c:	ldr	r1, [r6, #8]
   26950:	ldr	r2, [r6, #12]
   26954:	mov	lr, r6
   26958:	ldr	r1, [r1, r2, lsl #2]
   2695c:	ldr	r2, [sp, #24]
   26960:	ldr	r1, [r1, #4]
   26964:	add	r1, r1, r2
   26968:	ldr	r2, [sp, #40]	; 0x28
   2696c:	strb	r0, [r1, r2]
   26970:	ldr	r1, [sp, #32]
   26974:	add	r2, r2, #1
   26978:	str	r2, [sp, #40]	; 0x28
   2697c:	cmp	r2, r1
   26980:	blt	26930 <sfbpf_lex+0x8f8>
   26984:	b	2698c <sfbpf_lex+0x954>
   26988:	mov	lr, r6
   2698c:	cmn	r0, #1
   26990:	beq	26ab8 <sfbpf_lex+0xa80>
   26994:	cmp	r0, #10
   26998:	bne	26ae8 <sfbpf_lex+0xab0>
   2699c:	ldr	r0, [lr, #8]
   269a0:	ldr	r1, [lr, #12]
   269a4:	ldr	r3, [sp, #36]	; 0x24
   269a8:	ldr	r2, [sp, #40]	; 0x28
   269ac:	ldr	r0, [r0, r1, lsl #2]
   269b0:	mov	r1, #10
   269b4:	ldr	r0, [r0, #4]
   269b8:	add	r0, r0, r3
   269bc:	strb	r1, [r0, r2]
   269c0:	mov	r0, r2
   269c4:	ldr	ip, [pc, #4092]	; 279c8 <sfbpf_lex+0x1990>
   269c8:	add	r0, r2, #1
   269cc:	add	ip, pc, ip
   269d0:	b	26ae0 <sfbpf_lex+0xaa8>
   269d4:	str	ip, [sp, #32]
   269d8:	bl	f70 <__errno_location@plt>
   269dc:	mov	r1, #0
   269e0:	str	r0, [sp, #40]	; 0x28
   269e4:	mov	r2, r6
   269e8:	str	r1, [r0]
   269ec:	ldr	r0, [sp, #32]
   269f0:	ldr	r1, [sp, #36]	; 0x24
   269f4:	ldr	r0, [r0]
   269f8:	ldr	r0, [r0, #4]
   269fc:	ldr	r3, [pc, #4092]	; 27a00 <sfbpf_lex+0x19c8>
   26a00:	ldr	r3, [pc, r3]
   26a04:	add	r0, r0, r1
   26a08:	mov	r1, #1
   26a0c:	bl	f04 <fread@plt>
   26a10:	ldr	r3, [sp, #36]	; 0x24
   26a14:	ldr	lr, [pc, #4072]	; 27a04 <sfbpf_lex+0x19cc>
   26a18:	cmp	r0, #0
   26a1c:	add	lr, pc, lr
   26a20:	str	r0, [lr, #28]
   26a24:	ldr	ip, [pc, #4060]	; 27a08 <sfbpf_lex+0x19d0>
   26a28:	add	ip, pc, ip
   26a2c:	bne	26b18 <sfbpf_lex+0xae0>
   26a30:	ldr	r0, [pc, #4052]	; 27a0c <sfbpf_lex+0x19d4>
   26a34:	ldr	r0, [pc, r0]
   26a38:	bl	ebc <ferror@plt>
   26a3c:	cmp	r0, #0
   26a40:	beq	26b00 <sfbpf_lex+0xac8>
   26a44:	ldr	r1, [sp, #40]	; 0x28
   26a48:	ldr	r0, [r1]
   26a4c:	cmp	r0, #4
   26a50:	bne	279b0 <sfbpf_lex+0x1978>
   26a54:	mov	r0, #0
   26a58:	str	r0, [r1]
   26a5c:	ldr	r0, [pc, #4012]	; 27a10 <sfbpf_lex+0x19d8>
   26a60:	ldr	r0, [pc, r0]
   26a64:	bl	fc4 <clearerr@plt>
   26a68:	ldr	r7, [pc, #4004]	; 27a14 <sfbpf_lex+0x19dc>
   26a6c:	mov	r2, r6
   26a70:	add	r7, pc, r7
   26a74:	ldr	r0, [r7, #8]
   26a78:	ldr	r1, [r7, #12]
   26a7c:	ldr	r0, [r0, r1, lsl #2]
   26a80:	ldr	r1, [sp, #36]	; 0x24
   26a84:	ldr	r0, [r0, #4]
   26a88:	ldr	r3, [pc, #3976]	; 27a18 <sfbpf_lex+0x19e0>
   26a8c:	ldr	r3, [pc, r3]
   26a90:	add	r0, r0, r1
   26a94:	mov	r1, #1
   26a98:	bl	f04 <fread@plt>
   26a9c:	str	r0, [r7, #28]
   26aa0:	mov	lr, r7
   26aa4:	cmp	r0, #0
   26aa8:	ldr	r7, [pc, #3948]	; 27a1c <sfbpf_lex+0x19e4>
   26aac:	add	r7, pc, r7
   26ab0:	beq	26a30 <sfbpf_lex+0x9f8>
   26ab4:	b	26b0c <sfbpf_lex+0xad4>
   26ab8:	ldr	r0, [pc, #3936]	; 27a20 <sfbpf_lex+0x19e8>
   26abc:	ldr	r0, [pc, r0]
   26ac0:	bl	ebc <ferror@plt>
   26ac4:	ldr	ip, [pc, #3928]	; 27a24 <sfbpf_lex+0x19ec>
   26ac8:	cmp	r0, #0
   26acc:	ldr	r3, [sp, #36]	; 0x24
   26ad0:	ldr	r0, [sp, #40]	; 0x28
   26ad4:	mov	lr, r6
   26ad8:	add	ip, pc, ip
   26adc:	bne	279b0 <sfbpf_lex+0x1978>
   26ae0:	str	r0, [lr, #28]
   26ae4:	b	26b18 <sfbpf_lex+0xae0>
   26ae8:	ldr	ip, [pc, #4080]	; 27ae0 <sfbpf_lex+0x1aa8>
   26aec:	ldr	r0, [sp, #40]	; 0x28
   26af0:	ldr	r3, [sp, #36]	; 0x24
   26af4:	add	ip, pc, ip
   26af8:	str	r0, [lr, #28]
   26afc:	b	26b18 <sfbpf_lex+0xae0>
   26b00:	ldr	lr, [pc, #4064]	; 27ae8 <sfbpf_lex+0x1ab0>
   26b04:	mov	r0, #0
   26b08:	add	lr, pc, lr
   26b0c:	ldr	ip, [pc, #4056]	; 27aec <sfbpf_lex+0x1ab4>
   26b10:	ldr	r3, [sp, #36]	; 0x24
   26b14:	add	ip, pc, ip
   26b18:	ldr	r1, [lr, #8]
   26b1c:	mov	r6, r0
   26b20:	ldr	r0, [lr, #12]
   26b24:	mov	r2, r1
   26b28:	str	r0, [sp, #16]
   26b2c:	ldr	r0, [r2, r0, lsl #2]!
   26b30:	str	r6, [r0, #16]
   26b34:	mov	r0, r6
   26b38:	mov	r6, #0
   26b3c:	str	r6, [sp, #32]
   26b40:	cmp	r0, #0
   26b44:	ldr	r6, [pc, #4004]	; 27af0 <sfbpf_lex+0x1ab8>
   26b48:	add	r6, pc, r6
   26b4c:	bne	26b78 <sfbpf_lex+0xb40>
   26b50:	cmp	r3, #0
   26b54:	beq	267e0 <sfbpf_lex+0x7a8>
   26b58:	ldr	r0, [sp, #16]
   26b5c:	mov	r2, #2
   26b60:	str	r2, [sp, #32]
   26b64:	mov	r2, #2
   26b68:	ldr	r0, [r1, r0, lsl #2]!
   26b6c:	str	r2, [r0, #44]	; 0x2c
   26b70:	mov	r0, #0
   26b74:	mov	r2, r1
   26b78:	mov	r1, r0
   26b7c:	add	r0, r0, r3
   26b80:	ldr	r3, [r2]
   26b84:	str	r3, [sp, #24]
   26b88:	ldr	r3, [r3, #12]
   26b8c:	cmp	r0, r3
   26b90:	ble	26c08 <sfbpf_lex+0xbd0>
   26b94:	add	r1, r0, r1, asr #1
   26b98:	ldr	r0, [sp, #24]
   26b9c:	mov	r6, lr
   26ba0:	mov	r7, r1
   26ba4:	ldr	r0, [r0, #4]
   26ba8:	bl	eec <realloc@plt>
   26bac:	ldr	r2, [r6, #8]
   26bb0:	ldr	r1, [r6, #12]
   26bb4:	ldr	r1, [r2, r1, lsl #2]!
   26bb8:	str	r0, [r1, #4]
   26bbc:	ldr	r0, [r2]
   26bc0:	ldr	r1, [r0, #4]
   26bc4:	cmp	r1, #0
   26bc8:	beq	27998 <sfbpf_lex+0x1960>
   26bcc:	sub	r1, r7, #2
   26bd0:	mov	lr, r6
   26bd4:	str	r1, [r0, #12]
   26bd8:	ldr	r0, [sp, #36]	; 0x24
   26bdc:	ldr	r1, [r6, #28]
   26be0:	ldr	r3, [r2]
   26be4:	str	r1, [sp, #40]	; 0x28
   26be8:	add	r0, r1, r0
   26bec:	ldr	ip, [pc, #3840]	; 27af4 <sfbpf_lex+0x1abc>
   26bf0:	ldr	r7, [pc, #3840]	; 27af8 <sfbpf_lex+0x1ac0>
   26bf4:	ldr	r6, [pc, #3840]	; 27afc <sfbpf_lex+0x1ac4>
   26bf8:	add	ip, pc, ip
   26bfc:	add	r7, pc, r7
   26c00:	add	r6, pc, r6
   26c04:	b	26c10 <sfbpf_lex+0xbd8>
   26c08:	ldr	r3, [sp, #24]
   26c0c:	str	r1, [sp, #40]	; 0x28
   26c10:	str	r0, [lr, #28]
   26c14:	ldr	r1, [r3, #4]
   26c18:	mov	r3, #0
   26c1c:	strb	r3, [r1, r0]
   26c20:	ldr	r0, [sp, #28]
   26c24:	ldr	r1, [sp, #40]	; 0x28
   26c28:	mov	r3, #0
   26c2c:	add	r0, r1, r0
   26c30:	ldr	r1, [r2]
   26c34:	ldr	r1, [r1, #4]
   26c38:	strb	r3, [r1, r0]
   26c3c:	ldr	r0, [r2]
   26c40:	ldr	r1, [r0, #4]
   26c44:	ldr	r0, [pc, #3764]	; 27b00 <sfbpf_lex+0x1ac8>
   26c48:	ldr	r3, [sp, #8]
   26c4c:	ldr	r2, [sp, #32]
   26c50:	add	r0, pc, r0
   26c54:	str	r1, [r0]
   26c58:	cmp	r2, #1
   26c5c:	bne	26dec <sfbpf_lex+0xdb4>
   26c60:	str	r1, [lr, #16]
   26c64:	mov	r0, #146	; 0x92
   26c68:	cmp	r0, #146	; 0x92
   26c6c:	bls	26370 <sfbpf_lex+0x338>
   26c70:	b	279bc <sfbpf_lex+0x1984>
   26c74:	ldr	r0, [sp, #4]
   26c78:	ldr	r2, [sp, #40]	; 0x28
   26c7c:	mvn	r0, r0
   26c80:	add	r1, r0, r5
   26c84:	add	r5, r2, r1
   26c88:	cmp	r1, #1
   26c8c:	str	r5, [lr, #16]
   26c90:	ldrb	r0, [lr, #4]
   26c94:	blt	26d5c <sfbpf_lex+0xd24>
   26c98:	mov	ip, r2
   26c9c:	ldrb	r1, [ip]
   26ca0:	cmp	r1, #0
   26ca4:	beq	26cb8 <sfbpf_lex+0xc80>
   26ca8:	ldr	r2, [pc, #3604]	; 27ac4 <sfbpf_lex+0x1a8c>
   26cac:	add	r2, pc, r2
   26cb0:	ldrb	r2, [r2, r1]
   26cb4:	b	26cbc <sfbpf_lex+0xc84>
   26cb8:	mov	r2, #1
   26cbc:	add	r1, r7, r0, lsl #1
   26cc0:	ldrh	r1, [r1]
   26cc4:	cmp	r1, #0
   26cc8:	add	r1, r4, r0, lsl #1
   26ccc:	ldrsh	r1, [r1]
   26cd0:	strne	r0, [lr, #20]
   26cd4:	strne	ip, [lr, #24]
   26cd8:	add	r1, r1, r2
   26cdc:	add	r3, r9, r1, lsl #1
   26ce0:	ldrsh	r3, [r3]
   26ce4:	cmp	r0, r3
   26ce8:	beq	26d40 <sfbpf_lex+0xd08>
   26cec:	mov	r3, r2
   26cf0:	add	r0, r8, r0, lsl #1
   26cf4:	movw	r1, #1434	; 0x59a
   26cf8:	ldrsh	r0, [r0]
   26cfc:	cmp	r0, r1
   26d00:	uxth	r6, r0
   26d04:	ldrge	r1, [pc, #3516]	; 27ac8 <sfbpf_lex+0x1a90>
   26d08:	addge	r1, pc, r1
   26d0c:	ldrbge	r3, [r1, r2]
   26d10:	add	r1, r4, r0, lsl #1
   26d14:	ldrsh	r1, [r1]
   26d18:	uxtab	r1, r1, r3
   26d1c:	add	r2, r9, r1, lsl #1
   26d20:	ldrh	r7, [r2]
   26d24:	uxtb	r2, r3
   26d28:	cmp	r6, r7
   26d2c:	bne	26cf0 <sfbpf_lex+0xcb8>
   26d30:	ldr	r7, [pc, #3476]	; 27acc <sfbpf_lex+0x1a94>
   26d34:	ldr	r6, [pc, #3476]	; 27ad0 <sfbpf_lex+0x1a98>
   26d38:	add	r7, pc, r7
   26d3c:	add	r6, pc, r6
   26d40:	add	r0, r6, r1, lsl #1
   26d44:	add	ip, ip, #1
   26d48:	ldrsh	r0, [r0]
   26d4c:	cmp	ip, r5
   26d50:	bcc	26c9c <sfbpf_lex+0xc64>
   26d54:	ldr	ip, [pc, #3448]	; 27ad4 <sfbpf_lex+0x1a9c>
   26d58:	add	ip, pc, ip
   26d5c:	add	r1, r7, r0, lsl #1
   26d60:	ldrh	r1, [r1]
   26d64:	cmp	r1, #0
   26d68:	add	r1, r4, r0, lsl #1
   26d6c:	ldrsh	r1, [r1]
   26d70:	strne	r0, [lr, #20]
   26d74:	strne	r5, [lr, #24]
   26d78:	add	r1, r1, #1
   26d7c:	add	r2, r9, r1, lsl #1
   26d80:	ldrsh	r2, [r2]
   26d84:	cmp	r0, r2
   26d88:	beq	26db8 <sfbpf_lex+0xd80>
   26d8c:	mov	r2, r0
   26d90:	add	r1, r8, r2, lsl #1
   26d94:	ldrh	r3, [r1]
   26d98:	sxth	r2, r3
   26d9c:	add	r1, r4, r2, lsl #1
   26da0:	ldrsh	r1, [r1]
   26da4:	add	r1, r1, #1
   26da8:	add	r7, r9, r1, lsl #1
   26dac:	ldrh	r7, [r7]
   26db0:	cmp	r3, r7
   26db4:	bne	26d90 <sfbpf_lex+0xd58>
   26db8:	add	r1, r6, r1, lsl #1
   26dbc:	ldr	r2, [sp, #40]	; 0x28
   26dc0:	ldr	r7, [pc, #3344]	; 27ad8 <sfbpf_lex+0x1aa0>
   26dc4:	ldrh	r1, [r1]
   26dc8:	mov	r3, r2
   26dcc:	add	r7, pc, r7
   26dd0:	cmp	r1, #0
   26dd4:	beq	26314 <sfbpf_lex+0x2dc>
   26dd8:	ldr	r3, [sp, #40]	; 0x28
   26ddc:	movw	r2, #1433	; 0x599
   26de0:	cmp	r1, r2
   26de4:	beq	26314 <sfbpf_lex+0x2dc>
   26de8:	b	26ff4 <sfbpf_lex+0xfbc>
   26dec:	cmp	r2, #2
   26df0:	bne	26f04 <sfbpf_lex+0xecc>
   26df4:	mov	r3, r1
   26df8:	ldr	r0, [lr, #8]
   26dfc:	ldr	r1, [lr, #12]
   26e00:	ldr	r0, [r0, r1, lsl #2]
   26e04:	ldr	r1, [lr, #28]
   26e08:	ldr	r0, [r0, #4]
   26e0c:	add	r5, r0, r1
   26e10:	str	r5, [lr, #16]
   26e14:	cmp	r3, r5
   26e18:	ldrb	r0, [lr, #4]
   26e1c:	bcs	26314 <sfbpf_lex+0x2dc>
   26e20:	mov	r1, r3
   26e24:	mov	ip, r3
   26e28:	str	r1, [sp, #40]	; 0x28
   26e2c:	ldrb	r1, [ip]
   26e30:	cmp	r1, #0
   26e34:	beq	26e48 <sfbpf_lex+0xe10>
   26e38:	ldr	r2, [pc, #3284]	; 27b14 <sfbpf_lex+0x1adc>
   26e3c:	add	r2, pc, r2
   26e40:	ldrb	r2, [r2, r1]
   26e44:	b	26e4c <sfbpf_lex+0xe14>
   26e48:	mov	r2, #1
   26e4c:	add	r1, r7, r0, lsl #1
   26e50:	ldrh	r1, [r1]
   26e54:	cmp	r1, #0
   26e58:	add	r1, r4, r0, lsl #1
   26e5c:	ldrsh	r1, [r1]
   26e60:	strne	r0, [lr, #20]
   26e64:	strne	ip, [lr, #24]
   26e68:	add	r1, r1, r2
   26e6c:	add	r3, r9, r1, lsl #1
   26e70:	ldrsh	r3, [r3]
   26e74:	cmp	r0, r3
   26e78:	beq	26ed0 <sfbpf_lex+0xe98>
   26e7c:	mov	r3, r2
   26e80:	add	r0, r8, r0, lsl #1
   26e84:	movw	r1, #1434	; 0x59a
   26e88:	ldrsh	r0, [r0]
   26e8c:	cmp	r0, r1
   26e90:	uxth	r6, r0
   26e94:	ldrge	r1, [pc, #3196]	; 27b18 <sfbpf_lex+0x1ae0>
   26e98:	addge	r1, pc, r1
   26e9c:	ldrbge	r3, [r1, r2]
   26ea0:	add	r1, r4, r0, lsl #1
   26ea4:	ldrsh	r1, [r1]
   26ea8:	uxtab	r1, r1, r3
   26eac:	add	r2, r9, r1, lsl #1
   26eb0:	ldrh	r7, [r2]
   26eb4:	uxtb	r2, r3
   26eb8:	cmp	r6, r7
   26ebc:	bne	26e80 <sfbpf_lex+0xe48>
   26ec0:	ldr	r7, [pc, #3156]	; 27b1c <sfbpf_lex+0x1ae4>
   26ec4:	ldr	r6, [pc, #3156]	; 27b20 <sfbpf_lex+0x1ae8>
   26ec8:	add	r7, pc, r7
   26ecc:	add	r6, pc, r6
   26ed0:	add	r0, r6, r1, lsl #1
   26ed4:	add	ip, ip, #1
   26ed8:	ldrsh	r0, [r0]
   26edc:	cmp	ip, r5
   26ee0:	bne	26e2c <sfbpf_lex+0xdf4>
   26ee4:	ldr	r3, [sp, #40]	; 0x28
   26ee8:	ldr	ip, [pc, #3124]	; 27b24 <sfbpf_lex+0x1aec>
   26eec:	add	ip, pc, ip
   26ef0:	add	r0, r7, r0, lsl #1
   26ef4:	ldrh	r0, [r0]
   26ef8:	cmp	r0, #0
   26efc:	bne	26334 <sfbpf_lex+0x2fc>
   26f00:	b	26324 <sfbpf_lex+0x2ec>
   26f04:	cmp	r2, #0
   26f08:	str	r1, [sp, #40]	; 0x28
   26f0c:	bne	26224 <sfbpf_lex+0x1ec>
   26f10:	ldr	r0, [sp, #4]
   26f14:	mvn	r0, r0
   26f18:	add	r1, r0, r5
   26f1c:	ldr	r0, [sp, #40]	; 0x28
   26f20:	cmp	r1, #1
   26f24:	add	r5, r0, r1
   26f28:	str	r5, [lr, #16]
   26f2c:	ldrb	r0, [lr, #4]
   26f30:	blt	26244 <sfbpf_lex+0x20c>
   26f34:	ldr	ip, [sp, #40]	; 0x28
   26f38:	ldrb	r1, [ip]
   26f3c:	cmp	r1, #0
   26f40:	beq	26f54 <sfbpf_lex+0xf1c>
   26f44:	ldr	r2, [pc, #3000]	; 27b04 <sfbpf_lex+0x1acc>
   26f48:	add	r2, pc, r2
   26f4c:	ldrb	r2, [r2, r1]
   26f50:	b	26f58 <sfbpf_lex+0xf20>
   26f54:	mov	r2, #1
   26f58:	add	r1, r7, r0, lsl #1
   26f5c:	ldrh	r1, [r1]
   26f60:	cmp	r1, #0
   26f64:	add	r1, r4, r0, lsl #1
   26f68:	ldrsh	r1, [r1]
   26f6c:	strne	r0, [lr, #20]
   26f70:	strne	ip, [lr, #24]
   26f74:	add	r1, r1, r2
   26f78:	add	r3, r9, r1, lsl #1
   26f7c:	ldrsh	r3, [r3]
   26f80:	cmp	r0, r3
   26f84:	beq	26fdc <sfbpf_lex+0xfa4>
   26f88:	mov	r3, r2
   26f8c:	add	r0, r8, r0, lsl #1
   26f90:	movw	r1, #1434	; 0x59a
   26f94:	ldrsh	r0, [r0]
   26f98:	cmp	r0, r1
   26f9c:	uxth	r6, r0
   26fa0:	ldrge	r1, [pc, #2912]	; 27b08 <sfbpf_lex+0x1ad0>
   26fa4:	addge	r1, pc, r1
   26fa8:	ldrbge	r3, [r1, r2]
   26fac:	add	r1, r4, r0, lsl #1
   26fb0:	ldrsh	r1, [r1]
   26fb4:	uxtab	r1, r1, r3
   26fb8:	add	r2, r9, r1, lsl #1
   26fbc:	ldrh	r7, [r2]
   26fc0:	uxtb	r2, r3
   26fc4:	cmp	r6, r7
   26fc8:	bne	26f8c <sfbpf_lex+0xf54>
   26fcc:	ldr	r7, [pc, #2872]	; 27b0c <sfbpf_lex+0x1ad4>
   26fd0:	ldr	r6, [pc, #2872]	; 27b10 <sfbpf_lex+0x1ad8>
   26fd4:	add	r7, pc, r7
   26fd8:	add	r6, pc, r6
   26fdc:	add	r0, r6, r1, lsl #1
   26fe0:	add	ip, ip, #1
   26fe4:	ldrsh	r0, [r0]
   26fe8:	cmp	ip, r5
   26fec:	bcc	26f38 <sfbpf_lex+0xf00>
   26ff0:	b	2623c <sfbpf_lex+0x204>
   26ff4:	add	r5, r5, #1
   26ff8:	sxth	r0, r1
   26ffc:	str	r5, [lr, #16]
   27000:	b	26244 <sfbpf_lex+0x20c>
   27004:	ldr	r0, [pc, #2708]	; 27aa0 <sfbpf_lex+0x1a68>
   27008:	mov	r1, #16
   2700c:	ldr	r0, [pc, r0]
   27010:	str	r1, [r0]
   27014:	movw	r0, #291	; 0x123
   27018:	sub	sp, fp, #28
   2701c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27020:	ldr	r0, [pc, #2616]	; 27a60 <sfbpf_lex+0x1a28>
   27024:	mov	r1, #0
   27028:	ldr	r0, [pc, r0]
   2702c:	str	r1, [r0]
   27030:	movw	r0, #291	; 0x123
   27034:	sub	sp, fp, #28
   27038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2703c:	movw	r0, #357	; 0x165
   27040:	sub	sp, fp, #28
   27044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27048:	.word	0x00020928
   2704c:	movw	r0, #330	; 0x14a
   27050:	sub	sp, fp, #28
   27054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27058:	.word	0x000208f8
   2705c:	ldr	r0, [pc, #2604]	; 27a90 <sfbpf_lex+0x1a58>
   27060:	mov	r1, #1
   27064:	ldr	r0, [pc, r0]
   27068:	str	r1, [r0]
   2706c:	movw	r0, #291	; 0x123
   27070:	sub	sp, fp, #28
   27074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27078:	.word	0x00020038
   2707c:	movw	r0, #307	; 0x133
   27080:	sub	sp, fp, #28
   27084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27088:	.word	0x000208dc
   2708c:	.word	0x000208d0
   27090:	ldr	r0, [pc, #2560]	; 27a98 <sfbpf_lex+0x1a60>
   27094:	mov	r1, #4
   27098:	ldr	r0, [pc, r0]
   2709c:	str	r1, [r0]
   270a0:	movw	r0, #291	; 0x123
   270a4:	sub	sp, fp, #28
   270a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270ac:	ldr	r0, [pc, #2536]	; 27a9c <sfbpf_lex+0x1a64>
   270b0:	mov	r1, #8
   270b4:	ldr	r0, [pc, r0]
   270b8:	str	r1, [r0]
   270bc:	movw	r0, #291	; 0x123
   270c0:	sub	sp, fp, #28
   270c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270c8:	mov	r0, #328	; 0x148
   270cc:	sub	sp, fp, #28
   270d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270d4:	ldr	r0, [pc, #2480]	; 27a8c <sfbpf_lex+0x1a54>
   270d8:	mov	r1, #13
   270dc:	ldr	r0, [pc, r0]
   270e0:	str	r1, [r0]
   270e4:	movw	r0, #291	; 0x123
   270e8:	sub	sp, fp, #28
   270ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270f0:	ldr	r0, [pc, #2428]	; 27a74 <sfbpf_lex+0x1a3c>
   270f4:	mov	r1, #11
   270f8:	ldr	r0, [pc, r0]
   270fc:	str	r1, [r0]
   27100:	movw	r0, #291	; 0x123
   27104:	sub	sp, fp, #28
   27108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2710c:	.word	0x00020858
   27110:	movw	r0, #310	; 0x136
   27114:	sub	sp, fp, #28
   27118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2711c:	.word	0x0001ffa0
   27120:	mov	r0, #352	; 0x160
   27124:	sub	sp, fp, #28
   27128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2712c:	movw	r0, #319	; 0x13f
   27130:	sub	sp, fp, #28
   27134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27138:	mov	r0, #300	; 0x12c
   2713c:	sub	sp, fp, #28
   27140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27144:	movw	r0, #282	; 0x11a
   27148:	sub	sp, fp, #28
   2714c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27150:	movw	r0, #361	; 0x169
   27154:	sub	sp, fp, #28
   27158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2715c:	mov	r0, #324	; 0x144
   27160:	sub	sp, fp, #28
   27164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27168:	mov	r0, #264	; 0x108
   2716c:	sub	sp, fp, #28
   27170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27174:	mov	r0, #260	; 0x104
   27178:	sub	sp, fp, #28
   2717c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27180:	movw	r0, #286	; 0x11e
   27184:	sub	sp, fp, #28
   27188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2718c:	.word	0x00020844
   27190:	movw	r0, #279	; 0x117
   27194:	sub	sp, fp, #28
   27198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2719c:	mov	r0, #292	; 0x124
   271a0:	sub	sp, fp, #28
   271a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   271a8:	.word	0x000052b8
   271ac:	.word	0x000053b4
   271b0:	.word	0x00009922
   271b4:	.word	0x00005ee0
   271b8:	.word	0x0000b6e8
   271bc:	.word	0x0000a7e2
   271c0:	ldr	r0, [pc, #2172]	; 27a44 <sfbpf_lex+0x1a0c>
   271c4:	ldr	r0, [pc, r0]
   271c8:	bl	2254 <sf_sdup>
   271cc:	ldr	r1, [pc, #2164]	; 27a48 <sfbpf_lex+0x1a10>
   271d0:	ldr	r1, [pc, r1]
   271d4:	str	r0, [r1]
   271d8:	movw	r0, #313	; 0x139
   271dc:	sub	sp, fp, #28
   271e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   271e4:	.word	0x00020770
   271e8:	ldr	r0, [pc, #2184]	; 27a78 <sfbpf_lex+0x1a40>
   271ec:	mov	r1, #12
   271f0:	ldr	r0, [pc, r0]
   271f4:	str	r1, [r0]
   271f8:	movw	r0, #291	; 0x123
   271fc:	sub	sp, fp, #28
   27200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27204:	.word	0x000207cc
   27208:	.word	0x000207c8
   2720c:	movw	r0, #327	; 0x147
   27210:	sub	sp, fp, #28
   27214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27218:	.word	0x0000b6a4
   2721c:	movw	r0, #329	; 0x149
   27220:	sub	sp, fp, #28
   27224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27228:	movw	r0, #343	; 0x157
   2722c:	sub	sp, fp, #28
   27230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27234:	mov	r0, #33	; 0x21
   27238:	sub	sp, fp, #28
   2723c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27240:	.word	0x00005244
   27244:	mov	r0, #276	; 0x114
   27248:	sub	sp, fp, #28
   2724c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27250:	ldr	r0, [pc, #2128]	; 27aa8 <sfbpf_lex+0x1a70>
   27254:	ldr	r0, [pc, r0]
   27258:	b	27268 <sfbpf_lex+0x1230>
   2725c:	ldr	r0, [pc, #2124]	; 27ab0 <sfbpf_lex+0x1a78>
   27260:	ldr	r0, [pc, r0]
   27264:	add	r0, r0, #1
   27268:	bl	2254 <sf_sdup>
   2726c:	ldr	r1, [pc, #2104]	; 27aac <sfbpf_lex+0x1a74>
   27270:	ldr	r1, [pc, r1]
   27274:	str	r0, [r1]
   27278:	movw	r0, #311	; 0x137
   2727c:	sub	sp, fp, #28
   27280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27284:	mov	r0, #356	; 0x164
   27288:	sub	sp, fp, #28
   2728c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27290:	.word	0x0000b5fa
   27294:	movw	r0, #339	; 0x153
   27298:	sub	sp, fp, #28
   2729c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272a0:	movw	r0, #335	; 0x14f
   272a4:	sub	sp, fp, #28
   272a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272ac:	.word	0x000052c0
   272b0:	.word	0x0000b5fc
   272b4:	ldr	r0, [pc, #1972]	; 27a70 <sfbpf_lex+0x1a38>
   272b8:	mov	r1, #10
   272bc:	ldr	r0, [pc, r0]
   272c0:	str	r1, [r0]
   272c4:	movw	r0, #291	; 0x123
   272c8:	sub	sp, fp, #28
   272cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272d0:	movw	r0, #363	; 0x16b
   272d4:	sub	sp, fp, #28
   272d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272dc:	movw	r0, #290	; 0x122
   272e0:	sub	sp, fp, #28
   272e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272e8:	movw	r0, #297	; 0x129
   272ec:	sub	sp, fp, #28
   272f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272f4:	movw	r0, #299	; 0x12b
   272f8:	sub	sp, fp, #28
   272fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27300:	movw	r0, #285	; 0x11d
   27304:	sub	sp, fp, #28
   27308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2730c:	.word	0x00020698
   27310:	.word	0x00020684
   27314:	add	r2, sp, #48	; 0x30
   27318:	vmov.i32	q8, #0	; 0x00000000
   2731c:	add	r3, sp, #44	; 0x2c
   27320:	mov	r1, #0
   27324:	add	r0, r2, #8
   27328:	vst1.64	{d16-d17}, [r0]
   2732c:	mov	r0, #0
   27330:	str	r0, [sp, #76]	; 0x4c
   27334:	str	r0, [sp, #72]	; 0x48
   27338:	mov	r0, #10
   2733c:	str	r0, [sp, #52]	; 0x34
   27340:	mov	r0, #4
   27344:	str	r0, [sp, #48]	; 0x30
   27348:	ldr	r0, [pc, #1788]	; 27a4c <sfbpf_lex+0x1a14>
   2734c:	ldr	r0, [pc, r0]
   27350:	bl	fe8 <getaddrinfo@plt>
   27354:	cmp	r0, #0
   27358:	bne	279ec <sfbpf_lex+0x19b4>
   2735c:	ldr	r0, [sp, #44]	; 0x2c
   27360:	bl	fdc <freeaddrinfo@plt>
   27364:	ldr	r0, [pc, #1764]	; 27a50 <sfbpf_lex+0x1a18>
   27368:	ldr	r0, [pc, r0]
   2736c:	bl	2254 <sf_sdup>
   27370:	ldr	r1, [pc, #1756]	; 27a54 <sfbpf_lex+0x1a1c>
   27374:	ldr	r1, [pc, r1]
   27378:	str	r0, [r1]
   2737c:	movw	r0, #314	; 0x13a
   27380:	sub	sp, fp, #28
   27384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27388:	movw	r0, #271	; 0x10f
   2738c:	sub	sp, fp, #28
   27390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27394:	movw	r0, #333	; 0x14d
   27398:	sub	sp, fp, #28
   2739c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273a0:	mov	r0, #272	; 0x110
   273a4:	sub	sp, fp, #28
   273a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273ac:	ldr	r0, [pc, #1712]	; 27a64 <sfbpf_lex+0x1a2c>
   273b0:	mov	r1, #3
   273b4:	ldr	r0, [pc, r0]
   273b8:	str	r1, [r0]
   273bc:	movw	r0, #291	; 0x123
   273c0:	sub	sp, fp, #28
   273c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273c8:	mov	r0, #296	; 0x128
   273cc:	sub	sp, fp, #28
   273d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273d4:	movw	r0, #298	; 0x12a
   273d8:	sub	sp, fp, #28
   273dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273e0:	mov	r0, #364	; 0x16c
   273e4:	sub	sp, fp, #28
   273e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273ec:	movw	r0, #318	; 0x13e
   273f0:	sub	sp, fp, #28
   273f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273f8:	movw	r0, #289	; 0x121
   273fc:	sub	sp, fp, #28
   27400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27404:	movw	r0, #350	; 0x15e
   27408:	sub	sp, fp, #28
   2740c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27410:	movw	r0, #338	; 0x152
   27414:	sub	sp, fp, #28
   27418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2741c:	ldr	r0, [pc, #1604]	; 27a68 <sfbpf_lex+0x1a30>
   27420:	mov	r1, #5
   27424:	ldr	r0, [pc, r0]
   27428:	str	r1, [r0]
   2742c:	movw	r0, #291	; 0x123
   27430:	sub	sp, fp, #28
   27434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27438:	ldr	r0, [pc, #1620]	; 27a94 <sfbpf_lex+0x1a5c>
   2743c:	mov	r1, #2
   27440:	ldr	r0, [pc, r0]
   27444:	str	r1, [r0]
   27448:	movw	r0, #291	; 0x123
   2744c:	sub	sp, fp, #28
   27450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27454:	movw	r0, #293	; 0x125
   27458:	sub	sp, fp, #28
   2745c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27460:	movw	r0, #273	; 0x111
   27464:	sub	sp, fp, #28
   27468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2746c:	movw	r0, #334	; 0x14e
   27470:	sub	sp, fp, #28
   27474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27478:	movw	r0, #349	; 0x15d
   2747c:	sub	sp, fp, #28
   27480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27484:	movw	r0, #295	; 0x127
   27488:	sub	sp, fp, #28
   2748c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27490:	mov	r0, #308	; 0x134
   27494:	sub	sp, fp, #28
   27498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2749c:	movw	r0, #326	; 0x146
   274a0:	sub	sp, fp, #28
   274a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274a8:	mov	r0, #332	; 0x14c
   274ac:	sub	sp, fp, #28
   274b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274b4:	movw	r0, #270	; 0x10e
   274b8:	sub	sp, fp, #28
   274bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274c0:	movw	r0, #359	; 0x167
   274c4:	sub	sp, fp, #28
   274c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274cc:	movw	r0, #301	; 0x12d
   274d0:	sub	sp, fp, #28
   274d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274d8:	movw	r0, #323	; 0x143
   274dc:	sub	sp, fp, #28
   274e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274e4:	ldr	r0, [pc, #1464]	; 27aa4 <sfbpf_lex+0x1a6c>
   274e8:	mov	r1, #32
   274ec:	ldr	r0, [pc, r0]
   274f0:	str	r1, [r0]
   274f4:	movw	r0, #291	; 0x123
   274f8:	sub	sp, fp, #28
   274fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27500:	ldr	r0, [pc, #1312]	; 27a28 <sfbpf_lex+0x19f0>
   27504:	ldr	r0, [pc, r0]
   27508:	ldrb	r0, [r0]
   2750c:	sub	sp, fp, #28
   27510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27514:	movw	r0, #337	; 0x151
   27518:	sub	sp, fp, #28
   2751c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27520:	movw	r0, #274	; 0x112
   27524:	sub	sp, fp, #28
   27528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2752c:	mov	r0, #336	; 0x150
   27530:	sub	sp, fp, #28
   27534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27538:	movw	r0, #345	; 0x159
   2753c:	sub	sp, fp, #28
   27540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27544:	movw	r0, #302	; 0x12e
   27548:	sub	sp, fp, #28
   2754c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27550:	movw	r0, #277	; 0x115
   27554:	sub	sp, fp, #28
   27558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2755c:	movw	r0, #263	; 0x107
   27560:	sub	sp, fp, #28
   27564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27568:	movw	r0, #275	; 0x113
   2756c:	sub	sp, fp, #28
   27570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27574:	movw	r0, #325	; 0x145
   27578:	sub	sp, fp, #28
   2757c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27580:	movw	r0, #346	; 0x15a
   27584:	sub	sp, fp, #28
   27588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2758c:	ldr	r0, [pc, #1192]	; 27a3c <sfbpf_lex+0x1a04>
   27590:	ldr	r0, [pc, r0]
   27594:	ldrb	r5, [r0]
   27598:	cmp	r5, #48	; 0x30
   2759c:	bne	278d4 <sfbpf_lex+0x189c>
   275a0:	mov	r1, r0
   275a4:	ldrb	r5, [r1, #1]!
   275a8:	orr	r2, r5, #32
   275ac:	cmp	r2, #120	; 0x78
   275b0:	bne	27944 <sfbpf_lex+0x190c>
   275b4:	ldrb	r5, [r0, #2]!
   275b8:	mov	r4, #16
   275bc:	cmp	r5, #0
   275c0:	bne	278e0 <sfbpf_lex+0x18a8>
   275c4:	mov	r1, #0
   275c8:	b	2792c <sfbpf_lex+0x18f4>
   275cc:	.word	0x00020404
   275d0:	movw	r0, #358	; 0x166
   275d4:	sub	sp, fp, #28
   275d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275dc:	mov	r0, #268	; 0x10c
   275e0:	sub	sp, fp, #28
   275e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275e8:	movw	r0, #362	; 0x16a
   275ec:	sub	sp, fp, #28
   275f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275f4:	mov	r0, #360	; 0x168
   275f8:	sub	sp, fp, #28
   275fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27600:	movw	r0, #259	; 0x103
   27604:	sub	sp, fp, #28
   27608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2760c:	mov	r0, #280	; 0x118
   27610:	sub	sp, fp, #28
   27614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27618:	.word	0x00020348
   2761c:	movw	r0, #266	; 0x10a
   27620:	sub	sp, fp, #28
   27624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27628:	movw	r0, #347	; 0x15b
   2762c:	sub	sp, fp, #28
   27630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27634:	movw	r0, #317	; 0x13d
   27638:	sub	sp, fp, #28
   2763c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27640:	movw	r0, #309	; 0x135
   27644:	sub	sp, fp, #28
   27648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2764c:	movw	r0, #261	; 0x105
   27650:	sub	sp, fp, #28
   27654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27658:	.word	0x00020374
   2765c:	ldr	r0, [pc, #1056]	; 27a84 <sfbpf_lex+0x1a4c>
   27660:	mov	r1, #17
   27664:	ldr	r0, [pc, r0]
   27668:	str	r1, [r0]
   2766c:	movw	r0, #291	; 0x123
   27670:	sub	sp, fp, #28
   27674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27678:	ldr	r0, [pc, #1020]	; 27a7c <sfbpf_lex+0x1a44>
   2767c:	mov	r1, #14
   27680:	ldr	r0, [pc, r0]
   27684:	str	r1, [r0]
   27688:	movw	r0, #291	; 0x123
   2768c:	sub	sp, fp, #28
   27690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27694:	movw	r0, #351	; 0x15f
   27698:	sub	sp, fp, #28
   2769c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276a0:	ldr	r0, [pc, #984]	; 27a80 <sfbpf_lex+0x1a48>
   276a4:	mov	r1, #15
   276a8:	ldr	r0, [pc, r0]
   276ac:	str	r1, [r0]
   276b0:	movw	r0, #291	; 0x123
   276b4:	sub	sp, fp, #28
   276b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276bc:	mov	r0, #288	; 0x120
   276c0:	sub	sp, fp, #28
   276c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276c8:	mov	r0, #304	; 0x130
   276cc:	sub	sp, fp, #28
   276d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276d4:	ldr	r0, [pc, #856]	; 27a34 <sfbpf_lex+0x19fc>
   276d8:	ldr	r0, [pc, r0]
   276dc:	bl	1f2e4 <pcap_ether_aton>
   276e0:	ldr	r1, [pc, #848]	; 27a38 <sfbpf_lex+0x1a00>
   276e4:	ldr	r1, [pc, r1]
   276e8:	str	r0, [r1]
   276ec:	mov	r0, #312	; 0x138
   276f0:	sub	sp, fp, #28
   276f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276f8:	movw	r0, #267	; 0x10b
   276fc:	sub	sp, fp, #28
   27700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27704:	mov	r0, #320	; 0x140
   27708:	sub	sp, fp, #28
   2770c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27710:	movw	r0, #258	; 0x102
   27714:	sub	sp, fp, #28
   27718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2771c:	movw	r0, #305	; 0x131
   27720:	sub	sp, fp, #28
   27724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27728:	movw	r0, #294	; 0x126
   2772c:	sub	sp, fp, #28
   27730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27734:	movw	r0, #341	; 0x155
   27738:	sub	sp, fp, #28
   2773c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27740:	movw	r0, #287	; 0x11f
   27744:	sub	sp, fp, #28
   27748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2774c:	.word	0x00004e24
   27750:	mov	r0, #0
   27754:	sub	sp, fp, #28
   27758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2775c:	.word	0x0000b160
   27760:	movw	r0, #262	; 0x106
   27764:	sub	sp, fp, #28
   27768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2776c:	movw	r0, #355	; 0x163
   27770:	sub	sp, fp, #28
   27774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27778:	movw	r0, #269	; 0x10d
   2777c:	sub	sp, fp, #28
   27780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27784:	movw	r0, #342	; 0x156
   27788:	sub	sp, fp, #28
   2778c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27790:	movw	r0, #321	; 0x141
   27794:	sub	sp, fp, #28
   27798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2779c:	movw	r0, #353	; 0x161
   277a0:	sub	sp, fp, #28
   277a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277a8:	movw	r0, #331	; 0x14b
   277ac:	sub	sp, fp, #28
   277b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277b4:	mov	r0, #61	; 0x3d
   277b8:	sub	sp, fp, #28
   277bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277c0:	movw	r0, #322	; 0x142
   277c4:	sub	sp, fp, #28
   277c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277cc:	movw	r0, #303	; 0x12f
   277d0:	sub	sp, fp, #28
   277d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277d8:	mov	r0, #340	; 0x154
   277dc:	sub	sp, fp, #28
   277e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277e4:	.word	0x0002017c
   277e8:	movw	r0, #354	; 0x162
   277ec:	sub	sp, fp, #28
   277f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277f4:	mov	r0, #316	; 0x13c
   277f8:	sub	sp, fp, #28
   277fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27800:	.word	0x00004d70
   27804:	.word	0x0000b0ac
   27808:	movw	r0, #283	; 0x11b
   2780c:	sub	sp, fp, #28
   27810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27814:	mov	r0, #348	; 0x15c
   27818:	sub	sp, fp, #28
   2781c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27820:	movw	r0, #278	; 0x116
   27824:	sub	sp, fp, #28
   27828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2782c:	movw	r0, #281	; 0x119
   27830:	sub	sp, fp, #28
   27834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27838:	movw	r0, #306	; 0x132
   2783c:	sub	sp, fp, #28
   27840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27844:	mov	r0, #284	; 0x11c
   27848:	sub	sp, fp, #28
   2784c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27850:	ldr	r0, [pc, #560]	; 27a88 <sfbpf_lex+0x1a50>
   27854:	mov	r1, #18
   27858:	ldr	r0, [pc, r0]
   2785c:	str	r1, [r0]
   27860:	movw	r0, #291	; 0x123
   27864:	sub	sp, fp, #28
   27868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2786c:	ldr	r0, [pc, #504]	; 27a6c <sfbpf_lex+0x1a34>
   27870:	mov	r1, #9
   27874:	ldr	r0, [pc, r0]
   27878:	str	r1, [r0]
   2787c:	movw	r0, #291	; 0x123
   27880:	sub	sp, fp, #28
   27884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27888:	movw	r0, #265	; 0x109
   2788c:	sub	sp, fp, #28
   27890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27894:	.word	0x000200b8
   27898:	ldr	r0, [pc, #396]	; 27a2c <sfbpf_lex+0x19f4>
   2789c:	ldr	r0, [pc, r0]
   278a0:	add	r0, r0, #1
   278a4:	bl	1f2e4 <pcap_ether_aton>
   278a8:	ldr	r1, [pc, #384]	; 27a30 <sfbpf_lex+0x19f8>
   278ac:	ldr	r1, [pc, r1]
   278b0:	str	r0, [r1]
   278b4:	movw	r0, #315	; 0x13b
   278b8:	sub	sp, fp, #28
   278bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278c0:	mov	r0, #344	; 0x158
   278c4:	sub	sp, fp, #28
   278c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278cc:	.word	0x00004ca4
   278d0:	.word	0x00020030
   278d4:	mov	r4, #10
   278d8:	cmp	r5, #0
   278dc:	beq	275c4 <sfbpf_lex+0x158c>
   278e0:	add	r6, r0, #1
   278e4:	bl	f34 <__ctype_b_loc@plt>
   278e8:	ldr	r0, [r0]
   278ec:	mov	r1, #0
   278f0:	uxtb	r2, r5
   278f4:	mul	r1, r1, r4
   278f8:	add	r3, r0, r2, lsl #1
   278fc:	ldrh	r7, [r3]
   27900:	mvn	r3, #47	; 0x2f
   27904:	tst	r7, #2048	; 0x800
   27908:	bne	27918 <sfbpf_lex+0x18e0>
   2790c:	tst	r7, #512	; 0x200
   27910:	mvn	r3, #86	; 0x56
   27914:	mvneq	r3, #54	; 0x36
   27918:	ldrb	r5, [r6], #1
   2791c:	add	r2, r3, r2
   27920:	add	r1, r2, r1
   27924:	cmp	r5, #0
   27928:	bne	278f0 <sfbpf_lex+0x18b8>
   2792c:	ldr	r0, [pc, #268]	; 27a40 <sfbpf_lex+0x1a08>
   27930:	ldr	r0, [pc, r0]
   27934:	str	r1, [r0]
   27938:	movw	r0, #291	; 0x123
   2793c:	sub	sp, fp, #28
   27940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27944:	mov	r4, #8
   27948:	mov	r0, r1
   2794c:	cmp	r5, #0
   27950:	bne	278e0 <sfbpf_lex+0x18a8>
   27954:	b	275c4 <sfbpf_lex+0x158c>
   27958:	ldr	r1, [pc, #248]	; 27a58 <sfbpf_lex+0x1a20>
   2795c:	ldr	r1, [pc, r1]
   27960:	ldr	r0, [pc, #244]	; 27a5c <sfbpf_lex+0x1a24>
   27964:	add	r0, pc, r0
   27968:	bl	2204 <sf_bpf_error>
   2796c:	ldr	r0, [pc, #328]	; 27abc <sfbpf_lex+0x1a84>
   27970:	ldr	r0, [pc, r0]
   27974:	ldrb	r1, [r0]
   27978:	ldr	r0, [pc, #320]	; 27ac0 <sfbpf_lex+0x1a88>
   2797c:	add	r0, pc, r0
   27980:	bl	2204 <sf_bpf_error>
   27984:	ldr	r1, [pc, #296]	; 27ab4 <sfbpf_lex+0x1a7c>
   27988:	ldr	r1, [pc, r1]
   2798c:	ldr	r0, [pc, #292]	; 27ab8 <sfbpf_lex+0x1a80>
   27990:	add	r0, pc, r0
   27994:	bl	2204 <sf_bpf_error>
   27998:	ldr	r0, [pc, #412]	; 27b3c <sfbpf_lex+0x1b04>
   2799c:	add	r0, pc, r0
   279a0:	bl	27ec0 <yy_fatal_error>
   279a4:	ldr	r0, [pc, #396]	; 27b38 <sfbpf_lex+0x1b00>
   279a8:	add	r0, pc, r0
   279ac:	bl	27ec0 <yy_fatal_error>
   279b0:	ldr	r0, [pc, #300]	; 27ae4 <sfbpf_lex+0x1aac>
   279b4:	add	r0, pc, r0
   279b8:	bl	27ec0 <yy_fatal_error>
   279bc:	ldr	r0, [pc, #356]	; 27b28 <sfbpf_lex+0x1af0>
   279c0:	add	r0, pc, r0
   279c4:	bl	27ec0 <yy_fatal_error>
   279c8:	.word	0x00004ab8
   279cc:	mov	r0, #0
   279d0:	str	r0, [r2, #4]
   279d4:	ldr	r0, [pc, #256]	; 27adc <sfbpf_lex+0x1aa4>
   279d8:	add	r0, pc, r0
   279dc:	bl	27ec0 <yy_fatal_error>
   279e0:	ldr	r0, [pc, #324]	; 27b2c <sfbpf_lex+0x1af4>
   279e4:	add	r0, pc, r0
   279e8:	bl	27ec0 <yy_fatal_error>
   279ec:	ldr	r1, [pc, #316]	; 27b30 <sfbpf_lex+0x1af8>
   279f0:	ldr	r1, [pc, r1]
   279f4:	ldr	r0, [pc, #312]	; 27b34 <sfbpf_lex+0x1afc>
   279f8:	add	r0, pc, r0
   279fc:	bl	2204 <sf_bpf_error>
   27a00:	.word	0x0001ff68
   27a04:	.word	0x0001ff54
   27a08:	.word	0x00004a5c
   27a0c:	.word	0x0001ff34
   27a10:	.word	0x0001ff08
   27a14:	.word	0x0001ff00
   27a18:	.word	0x0001fedc
   27a1c:	.word	0x00004ad8
   27a20:	.word	0x0001feac
   27a24:	.word	0x000049ac
   27a28:	.word	0x0001f4d0
   27a2c:	.word	0x0001f138
   27a30:	.word	0x0001e814
   27a34:	.word	0x0001f2fc
   27a38:	.word	0x0001e9dc
   27a3c:	.word	0x0001f444
   27a40:	.word	0x0001e790
   27a44:	.word	0x0001f810
   27a48:	.word	0x0001eef0
   27a4c:	.word	0x0001f688
   27a50:	.word	0x0001f66c
   27a54:	.word	0x0001ed4c
   27a58:	.word	0x0001f078
   27a5c:	.word	0x0000d9b4
   27a60:	.word	0x0001f098
   27a64:	.word	0x0001ed0c
   27a68:	.word	0x0001ec9c
   27a6c:	.word	0x0001e84c
   27a70:	.word	0x0001ee04
   27a74:	.word	0x0001efc8
   27a78:	.word	0x0001eed0
   27a7c:	.word	0x0001ea40
   27a80:	.word	0x0001ea18
   27a84:	.word	0x0001ea5c
   27a88:	.word	0x0001e868
   27a8c:	.word	0x0001efe4
   27a90:	.word	0x0001f05c
   27a94:	.word	0x0001ec80
   27a98:	.word	0x0001f028
   27a9c:	.word	0x0001f00c
   27aa0:	.word	0x0001f0b4
   27aa4:	.word	0x0001ebd4
   27aa8:	.word	0x0001f780
   27aac:	.word	0x0001ee50
   27ab0:	.word	0x0001f774
   27ab4:	.word	0x0001f04c
   27ab8:	.word	0x0000d9a2
   27abc:	.word	0x0001f064
   27ac0:	.word	0x0000d9c8
   27ac4:	.word	0x000047d8
   27ac8:	.word	0x0000ab86
   27acc:	.word	0x0000484c
   27ad0:	.word	0x0000ab88
   27ad4:	.word	0x0000472c
   27ad8:	.word	0x000047b8
   27adc:	.word	0x0000da86
   27ae0:	.word	0x00004990
   27ae4:	.word	0x0000dad6
   27ae8:	.word	0x0001fe68
   27aec:	.word	0x00004970
   27af0:	.word	0x0000ad7c
   27af4:	.word	0x0000488c
   27af8:	.word	0x00004988
   27afc:	.word	0x0000acc4
   27b00:	.word	0x0001fd84
   27b04:	.word	0x0000453c
   27b08:	.word	0x0000a8ea
   27b0c:	.word	0x000045b0
   27b10:	.word	0x0000a8ec
   27b14:	.word	0x00004648
   27b18:	.word	0x0000a9f6
   27b1c:	.word	0x000046bc
   27b20:	.word	0x0000a9f8
   27b24:	.word	0x00004598
   27b28:	.word	0x0000d996
   27b2c:	.word	0x0000daf1
   27b30:	.word	0x0001efe4
   27b34:	.word	0x0000d90a
   27b38:	.word	0x0000da7e
   27b3c:	.word	0x0000db0b

00027b40 <sfbpf__create_buffer>:
   27b40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27b44:	add	fp, sp, #24
   27b48:	mov	r5, r0
   27b4c:	mov	r0, #48	; 0x30
   27b50:	mov	r6, r1
   27b54:	bl	f1c <malloc@plt>
   27b58:	cmp	r0, #0
   27b5c:	beq	27c80 <sfbpf__create_buffer+0x140>
   27b60:	mov	r4, r0
   27b64:	str	r6, [r0, #12]
   27b68:	add	r0, r6, #2
   27b6c:	bl	f1c <malloc@plt>
   27b70:	cmp	r0, #0
   27b74:	str	r0, [r4, #4]
   27b78:	beq	27c80 <sfbpf__create_buffer+0x140>
   27b7c:	mov	r6, #1
   27b80:	mov	r7, r0
   27b84:	str	r6, [r4, #20]
   27b88:	bl	f70 <__errno_location@plt>
   27b8c:	mov	r2, #0
   27b90:	ldr	r8, [r0]
   27b94:	mov	r9, r0
   27b98:	str	r2, [r4, #16]
   27b9c:	str	r6, [r4, #28]
   27ba0:	str	r7, [r4, #8]
   27ba4:	strh	r2, [r7]
   27ba8:	str	r2, [r4, #44]	; 0x2c
   27bac:	ldr	r1, [pc, #216]	; 27c8c <sfbpf__create_buffer+0x14c>
   27bb0:	add	r1, pc, r1
   27bb4:	ldr	r0, [r1, #8]
   27bb8:	cmp	r0, #0
   27bbc:	ldrne	r2, [r1, #12]
   27bc0:	ldrne	r2, [r0, r2, lsl #2]
   27bc4:	cmp	r2, r4
   27bc8:	bne	27c0c <sfbpf__create_buffer+0xcc>
   27bcc:	ldr	r2, [r1, #12]
   27bd0:	ldr	r3, [r0, r2, lsl #2]
   27bd4:	ldr	r7, [r3, #16]
   27bd8:	str	r7, [r1, #28]
   27bdc:	ldr	r3, [r3, #8]
   27be0:	ldr	r7, [pc, #168]	; 27c90 <sfbpf__create_buffer+0x150>
   27be4:	add	r7, pc, r7
   27be8:	str	r3, [r1, #16]
   27bec:	str	r3, [r7]
   27bf0:	ldr	r2, [r0, r2, lsl #2]
   27bf4:	ldr	r2, [r2]
   27bf8:	ldr	r7, [pc, #148]	; 27c94 <sfbpf__create_buffer+0x154>
   27bfc:	add	r7, pc, r7
   27c00:	str	r2, [r7]
   27c04:	ldrb	r2, [r3]
   27c08:	strb	r2, [r1, #5]
   27c0c:	cmp	r0, #0
   27c10:	mov	r2, #1
   27c14:	ldrne	r1, [r1, #12]
   27c18:	str	r2, [r4, #40]	; 0x28
   27c1c:	str	r5, [r4]
   27c20:	ldrne	r0, [r0, r1, lsl #2]
   27c24:	moveq	r0, #0
   27c28:	cmp	r0, r4
   27c2c:	movne	r1, #1
   27c30:	movne	r0, #0
   27c34:	strne	r1, [r4, #32]
   27c38:	strne	r0, [r4, #36]	; 0x24
   27c3c:	cmp	r5, #0
   27c40:	beq	27c6c <sfbpf__create_buffer+0x12c>
   27c44:	mov	r0, r5
   27c48:	bl	fac <fileno@plt>
   27c4c:	bl	1000 <isatty@plt>
   27c50:	mov	r1, #0
   27c54:	cmp	r0, #0
   27c58:	movwgt	r1, #1
   27c5c:	mov	r0, r4
   27c60:	str	r1, [r4, #24]
   27c64:	str	r8, [r9]
   27c68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27c6c:	mov	r1, #0
   27c70:	mov	r0, r4
   27c74:	str	r1, [r4, #24]
   27c78:	str	r8, [r9]
   27c7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27c80:	ldr	r0, [pc, #16]	; 27c98 <sfbpf__create_buffer+0x158>
   27c84:	add	r0, pc, r0
   27c88:	bl	27ec0 <yy_fatal_error>
   27c8c:	.word	0x0001edc0
   27c90:	.word	0x0001edf0
   27c94:	.word	0x0001ed6c
   27c98:	.word	0x0000d705

00027c9c <sfbpf_wrap>:
   27c9c:	mov	r0, #1
   27ca0:	bx	lr

00027ca4 <sfbpf_restart>:
   27ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ca8:	add	fp, sp, #28
   27cac:	sub	sp, sp, #4
   27cb0:	ldr	r9, [pc, #492]	; 27ea4 <sfbpf_restart+0x200>
   27cb4:	mov	r8, r0
   27cb8:	add	r9, pc, r9
   27cbc:	ldr	r5, [r9, #8]
   27cc0:	cmp	r5, #0
   27cc4:	beq	27d20 <sfbpf_restart+0x7c>
   27cc8:	ldr	r4, [r9, #12]
   27ccc:	ldr	r6, [r5, r4, lsl #2]
   27cd0:	cmp	r6, #0
   27cd4:	bne	27d70 <sfbpf_restart+0xcc>
   27cd8:	ldr	r0, [r9, #36]	; 0x24
   27cdc:	sub	r1, r0, #1
   27ce0:	cmp	r4, r1
   27ce4:	bcc	27d48 <sfbpf_restart+0xa4>
   27ce8:	add	r4, r0, #8
   27cec:	mov	r0, r5
   27cf0:	lsl	r1, r4, #2
   27cf4:	bl	eec <realloc@plt>
   27cf8:	cmp	r0, #0
   27cfc:	str	r0, [r9, #8]
   27d00:	beq	27e98 <sfbpf_restart+0x1f4>
   27d04:	ldr	r1, [r9, #36]	; 0x24
   27d08:	vmov.i32	q8, #0	; 0x00000000
   27d0c:	str	r4, [r9, #36]	; 0x24
   27d10:	add	r0, r0, r1, lsl #2
   27d14:	vst1.32	{d16-d17}, [r0]!
   27d18:	vst1.32	{d16-d17}, [r0]
   27d1c:	b	27d48 <sfbpf_restart+0xa4>
   27d20:	mov	r0, #4
   27d24:	bl	f1c <malloc@plt>
   27d28:	cmp	r0, #0
   27d2c:	str	r0, [r9, #8]
   27d30:	beq	27e98 <sfbpf_restart+0x1f4>
   27d34:	mov	r1, #0
   27d38:	str	r1, [r0]
   27d3c:	mov	r0, #1
   27d40:	str	r1, [r9, #12]
   27d44:	str	r0, [r9, #36]	; 0x24
   27d48:	ldr	r0, [pc, #344]	; 27ea8 <sfbpf_restart+0x204>
   27d4c:	mov	r1, #16384	; 0x4000
   27d50:	ldr	r0, [pc, r0]
   27d54:	bl	27b40 <sfbpf__create_buffer>
   27d58:	ldr	r5, [r9, #8]
   27d5c:	ldr	r4, [r9, #12]
   27d60:	mov	r6, r0
   27d64:	cmp	r5, #0
   27d68:	str	r0, [r5, r4, lsl #2]
   27d6c:	beq	27e94 <sfbpf_restart+0x1f0>
   27d70:	bl	f70 <__errno_location@plt>
   27d74:	ldr	sl, [r0]
   27d78:	mov	r7, r0
   27d7c:	cmp	r6, #0
   27d80:	beq	27df8 <sfbpf_restart+0x154>
   27d84:	mov	r0, #0
   27d88:	str	r0, [r6, #16]
   27d8c:	ldr	r1, [r6, #4]
   27d90:	strb	r0, [r1]
   27d94:	ldr	r1, [r6, #4]
   27d98:	strb	r0, [r1, #1]
   27d9c:	mov	r1, #1
   27da0:	str	r1, [r6, #28]
   27da4:	str	r0, [r6, #44]	; 0x2c
   27da8:	ldr	r0, [r6, #4]
   27dac:	str	r0, [r6, #8]
   27db0:	ldr	r0, [r5, r4, lsl #2]
   27db4:	cmp	r0, r6
   27db8:	bne	27df8 <sfbpf_restart+0x154>
   27dbc:	ldr	r0, [r5, r4, lsl #2]
   27dc0:	ldr	r1, [r0, #16]
   27dc4:	str	r1, [r9, #28]
   27dc8:	ldr	r0, [r0, #8]
   27dcc:	ldr	r1, [pc, #216]	; 27eac <sfbpf_restart+0x208>
   27dd0:	add	r1, pc, r1
   27dd4:	str	r0, [r9, #16]
   27dd8:	str	r0, [r1]
   27ddc:	ldr	r1, [r5, r4, lsl #2]
   27de0:	ldr	r1, [r1]
   27de4:	ldr	r2, [pc, #196]	; 27eb0 <sfbpf_restart+0x20c>
   27de8:	add	r2, pc, r2
   27dec:	str	r1, [r2]
   27df0:	ldrb	r0, [r0]
   27df4:	strb	r0, [r9, #5]
   27df8:	mov	r0, #1
   27dfc:	str	r0, [r6, #40]	; 0x28
   27e00:	str	r8, [r6]
   27e04:	ldr	r1, [r5, r4, lsl #2]
   27e08:	cmp	r1, r6
   27e0c:	movne	r1, #0
   27e10:	strne	r0, [r6, #32]
   27e14:	strne	r1, [r6, #36]	; 0x24
   27e18:	cmp	r8, #0
   27e1c:	beq	27e44 <sfbpf_restart+0x1a0>
   27e20:	mov	r0, r8
   27e24:	bl	fac <fileno@plt>
   27e28:	bl	1000 <isatty@plt>
   27e2c:	ldr	r5, [r9, #8]
   27e30:	ldr	r4, [r9, #12]
   27e34:	mov	r1, #0
   27e38:	cmp	r0, #0
   27e3c:	movwgt	r1, #1
   27e40:	b	27e48 <sfbpf_restart+0x1a4>
   27e44:	mov	r1, #0
   27e48:	str	r1, [r6, #24]
   27e4c:	str	sl, [r7]
   27e50:	ldr	r0, [r5, r4, lsl #2]
   27e54:	ldr	r1, [r0, #16]
   27e58:	str	r1, [r9, #28]
   27e5c:	ldr	r0, [r0, #8]
   27e60:	ldr	r1, [pc, #76]	; 27eb4 <sfbpf_restart+0x210>
   27e64:	add	r1, pc, r1
   27e68:	str	r0, [r9, #16]
   27e6c:	str	r0, [r1]
   27e70:	ldr	r1, [r5, r4, lsl #2]
   27e74:	ldr	r1, [r1]
   27e78:	ldr	r2, [pc, #56]	; 27eb8 <sfbpf_restart+0x214>
   27e7c:	add	r2, pc, r2
   27e80:	str	r1, [r2]
   27e84:	ldrb	r0, [r0]
   27e88:	strb	r0, [r9, #5]
   27e8c:	sub	sp, fp, #28
   27e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e94:	udf	#65006	; 0xfdee
   27e98:	ldr	r0, [pc, #28]	; 27ebc <sfbpf_restart+0x218>
   27e9c:	add	r0, pc, r0
   27ea0:	bl	27ec0 <yy_fatal_error>
   27ea4:	.word	0x0001ecb8
   27ea8:	.word	0x0001ec18
   27eac:	.word	0x0001ec04
   27eb0:	.word	0x0001eb80
   27eb4:	.word	0x0001eb70
   27eb8:	.word	0x0001eaec
   27ebc:	.word	0x0000d639

00027ec0 <yy_fatal_error>:
   27ec0:	push	{fp, lr}
   27ec4:	mov	fp, sp
   27ec8:	mov	r2, r0
   27ecc:	ldr	r0, [pc, #24]	; 27eec <yy_fatal_error+0x2c>
   27ed0:	ldr	r0, [pc, r0]
   27ed4:	ldr	r0, [r0]
   27ed8:	ldr	r1, [pc, #16]	; 27ef0 <yy_fatal_error+0x30>
   27edc:	add	r1, pc, r1
   27ee0:	bl	f64 <fprintf@plt>
   27ee4:	mov	r0, #2
   27ee8:	bl	f40 <exit@plt>
   27eec:	.word	0x0001e1dc
   27ef0:	.word	0x000007cd

00027ef4 <sfbpf__switch_to_buffer>:
   27ef4:	push	{r4, r5, r6, sl, fp, lr}
   27ef8:	add	fp, sp, #16
   27efc:	ldr	r5, [pc, #292]	; 28028 <sfbpf__switch_to_buffer+0x134>
   27f00:	mov	r4, r0
   27f04:	add	r5, pc, r5
   27f08:	ldr	r0, [r5, #8]
   27f0c:	cmp	r0, #0
   27f10:	beq	27f64 <sfbpf__switch_to_buffer+0x70>
   27f14:	ldr	r1, [r5, #36]	; 0x24
   27f18:	ldr	r2, [r5, #12]
   27f1c:	sub	r3, r1, #1
   27f20:	cmp	r2, r3
   27f24:	bcc	27f58 <sfbpf__switch_to_buffer+0x64>
   27f28:	add	r6, r1, #8
   27f2c:	lsl	r1, r6, #2
   27f30:	bl	eec <realloc@plt>
   27f34:	cmp	r0, #0
   27f38:	str	r0, [r5, #8]
   27f3c:	beq	2801c <sfbpf__switch_to_buffer+0x128>
   27f40:	ldr	r1, [r5, #36]	; 0x24
   27f44:	vmov.i32	q8, #0	; 0x00000000
   27f48:	str	r6, [r5, #36]	; 0x24
   27f4c:	add	r1, r0, r1, lsl #2
   27f50:	vst1.32	{d16-d17}, [r1]!
   27f54:	vst1.32	{d16-d17}, [r1]
   27f58:	clz	r1, r0
   27f5c:	lsr	r1, r1, #5
   27f60:	b	27f8c <sfbpf__switch_to_buffer+0x98>
   27f64:	mov	r0, #4
   27f68:	bl	f1c <malloc@plt>
   27f6c:	cmp	r0, #0
   27f70:	str	r0, [r5, #8]
   27f74:	beq	2801c <sfbpf__switch_to_buffer+0x128>
   27f78:	mov	r1, #0
   27f7c:	mov	r2, #1
   27f80:	str	r1, [r5, #12]
   27f84:	str	r1, [r0]
   27f88:	str	r2, [r5, #36]	; 0x24
   27f8c:	ldr	r2, [r5, #12]
   27f90:	ldr	r2, [r0, r2, lsl #2]
   27f94:	cmp	r2, r4
   27f98:	popeq	{r4, r5, r6, sl, fp, pc}
   27f9c:	ldr	r2, [r5, #12]
   27fa0:	cmp	r1, #0
   27fa4:	beq	27fb0 <sfbpf__switch_to_buffer+0xbc>
   27fa8:	lsl	r0, r2, #2
   27fac:	b	27fdc <sfbpf__switch_to_buffer+0xe8>
   27fb0:	ldr	r1, [r0, r2, lsl #2]!
   27fb4:	cmp	r1, #0
   27fb8:	beq	27fdc <sfbpf__switch_to_buffer+0xe8>
   27fbc:	ldr	r1, [r5, #16]
   27fc0:	ldrb	r2, [r5, #5]
   27fc4:	strb	r2, [r1]
   27fc8:	ldr	r2, [r0]
   27fcc:	str	r1, [r2, #8]
   27fd0:	ldr	r1, [r0]
   27fd4:	ldr	r2, [r5, #28]
   27fd8:	str	r2, [r1, #16]
   27fdc:	str	r4, [r0]
   27fe0:	ldr	r1, [r4, #16]
   27fe4:	str	r1, [r5, #28]
   27fe8:	ldr	r1, [r4, #8]
   27fec:	ldr	r2, [pc, #60]	; 28030 <sfbpf__switch_to_buffer+0x13c>
   27ff0:	add	r2, pc, r2
   27ff4:	str	r1, [r5, #16]
   27ff8:	str	r1, [r2]
   27ffc:	ldr	r0, [r0]
   28000:	ldr	r0, [r0]
   28004:	ldr	r2, [pc, #40]	; 28034 <sfbpf__switch_to_buffer+0x140>
   28008:	add	r2, pc, r2
   2800c:	str	r0, [r2]
   28010:	ldrb	r0, [r1]
   28014:	strb	r0, [r5, #5]
   28018:	pop	{r4, r5, r6, sl, fp, pc}
   2801c:	ldr	r0, [pc, #8]	; 2802c <sfbpf__switch_to_buffer+0x138>
   28020:	add	r0, pc, r0
   28024:	bl	27ec0 <yy_fatal_error>
   28028:	.word	0x0001ea6c
   2802c:	.word	0x0000d4b5
   28030:	.word	0x0001e9e4
   28034:	.word	0x0001e960

00028038 <sfbpf_alloc>:
   28038:	b	f1c <malloc@plt>

0002803c <sfbpf__delete_buffer>:
   2803c:	cmp	r0, #0
   28040:	bxeq	lr
   28044:	push	{r4, sl, fp, lr}
   28048:	add	fp, sp, #8
   2804c:	ldr	r1, [pc, #72]	; 2809c <sfbpf__delete_buffer+0x60>
   28050:	mov	r4, r0
   28054:	add	r1, pc, r1
   28058:	ldr	r0, [r1, #8]
   2805c:	cmp	r0, #0
   28060:	ldrne	r2, [r1, #12]
   28064:	ldrne	r2, [r0, r2, lsl #2]
   28068:	moveq	r2, #0
   2806c:	cmp	r2, r4
   28070:	ldreq	r1, [r1, #12]
   28074:	moveq	r2, #0
   28078:	streq	r2, [r0, r1, lsl #2]
   2807c:	ldr	r0, [r4, #20]
   28080:	cmp	r0, #0
   28084:	beq	28090 <sfbpf__delete_buffer+0x54>
   28088:	ldr	r0, [r4, #4]
   2808c:	bl	ea4 <free@plt>
   28090:	mov	r0, r4
   28094:	pop	{r4, sl, fp, lr}
   28098:	b	ea4 <free@plt>
   2809c:	.word	0x0001e91c

000280a0 <sfbpf_free>:
   280a0:	b	ea4 <free@plt>

000280a4 <sfbpf__flush_buffer>:
   280a4:	cmp	r0, #0
   280a8:	beq	28138 <sfbpf__flush_buffer+0x94>
   280ac:	mov	r3, #0
   280b0:	str	r3, [r0, #16]
   280b4:	ldr	r1, [r0, #4]
   280b8:	strb	r3, [r1]
   280bc:	ldr	r1, [r0, #4]
   280c0:	strb	r3, [r1, #1]
   280c4:	mov	r1, #1
   280c8:	str	r1, [r0, #28]
   280cc:	str	r3, [r0, #44]	; 0x2c
   280d0:	ldr	r1, [r0, #4]
   280d4:	str	r1, [r0, #8]
   280d8:	ldr	r1, [pc, #92]	; 2813c <sfbpf__flush_buffer+0x98>
   280dc:	add	r1, pc, r1
   280e0:	ldr	r2, [r1, #8]
   280e4:	cmp	r2, #0
   280e8:	ldrne	r3, [r1, #12]
   280ec:	ldrne	r3, [r2, r3, lsl #2]
   280f0:	cmp	r3, r0
   280f4:	bxne	lr
   280f8:	ldr	ip, [r1, #12]
   280fc:	ldr	r3, [r2, ip, lsl #2]
   28100:	ldr	r0, [r3, #16]
   28104:	str	r0, [r1, #28]
   28108:	ldr	r0, [r3, #8]
   2810c:	ldr	r3, [pc, #44]	; 28140 <sfbpf__flush_buffer+0x9c>
   28110:	add	r3, pc, r3
   28114:	str	r0, [r1, #16]
   28118:	str	r0, [r3]
   2811c:	ldr	r2, [r2, ip, lsl #2]
   28120:	ldr	r2, [r2]
   28124:	ldr	r3, [pc, #24]	; 28144 <sfbpf__flush_buffer+0xa0>
   28128:	add	r3, pc, r3
   2812c:	str	r2, [r3]
   28130:	ldrb	r0, [r0]
   28134:	strb	r0, [r1, #5]
   28138:	bx	lr
   2813c:	.word	0x0001e894
   28140:	.word	0x0001e8c4
   28144:	.word	0x0001e840

00028148 <sfbpf_push_buffer_state>:
   28148:	push	{r4, r5, r6, sl, fp, lr}
   2814c:	add	fp, sp, #16
   28150:	cmp	r0, #0
   28154:	popeq	{r4, r5, r6, sl, fp, pc}
   28158:	ldr	r5, [pc, #284]	; 2827c <sfbpf_push_buffer_state+0x134>
   2815c:	mov	r4, r0
   28160:	add	r5, pc, r5
   28164:	ldr	r0, [r5, #8]
   28168:	cmp	r0, #0
   2816c:	beq	28234 <sfbpf_push_buffer_state+0xec>
   28170:	ldr	r1, [r5, #36]	; 0x24
   28174:	ldr	r2, [r5, #12]
   28178:	sub	r3, r1, #1
   2817c:	cmp	r2, r3
   28180:	bcc	281b4 <sfbpf_push_buffer_state+0x6c>
   28184:	add	r6, r1, #8
   28188:	lsl	r1, r6, #2
   2818c:	bl	eec <realloc@plt>
   28190:	cmp	r0, #0
   28194:	str	r0, [r5, #8]
   28198:	beq	28270 <sfbpf_push_buffer_state+0x128>
   2819c:	ldr	r1, [r5, #36]	; 0x24
   281a0:	vmov.i32	q8, #0	; 0x00000000
   281a4:	str	r6, [r5, #36]	; 0x24
   281a8:	add	r1, r0, r1, lsl #2
   281ac:	vst1.32	{d16-d17}, [r1]!
   281b0:	vst1.32	{d16-d17}, [r1]
   281b4:	ldr	r1, [r5, #12]
   281b8:	ldr	r2, [r0, r1, lsl #2]
   281bc:	cmp	r2, #0
   281c0:	beq	281f4 <sfbpf_push_buffer_state+0xac>
   281c4:	ldr	r2, [r5, #16]
   281c8:	ldrb	r3, [r5, #5]
   281cc:	strb	r3, [r2]
   281d0:	ldr	r3, [r0, r1, lsl #2]
   281d4:	str	r2, [r3, #8]
   281d8:	ldr	r2, [r0, r1, lsl #2]
   281dc:	ldr	r3, [r5, #28]
   281e0:	str	r3, [r2, #16]
   281e4:	ldr	r2, [r0, r1, lsl #2]
   281e8:	cmp	r2, #0
   281ec:	addne	r1, r1, #1
   281f0:	strne	r1, [r5, #12]
   281f4:	str	r4, [r0, r1, lsl #2]
   281f8:	ldr	r2, [r4, #16]
   281fc:	str	r2, [r5, #28]
   28200:	ldr	r2, [r4, #8]
   28204:	ldr	r3, [pc, #120]	; 28284 <sfbpf_push_buffer_state+0x13c>
   28208:	add	r3, pc, r3
   2820c:	str	r2, [r5, #16]
   28210:	str	r2, [r3]
   28214:	ldr	r0, [r0, r1, lsl #2]
   28218:	ldr	r0, [r0]
   2821c:	ldr	r1, [pc, #100]	; 28288 <sfbpf_push_buffer_state+0x140>
   28220:	add	r1, pc, r1
   28224:	str	r0, [r1]
   28228:	ldrb	r0, [r2]
   2822c:	strb	r0, [r5, #5]
   28230:	pop	{r4, r5, r6, sl, fp, pc}
   28234:	mov	r0, #4
   28238:	bl	f1c <malloc@plt>
   2823c:	cmp	r0, #0
   28240:	str	r0, [r5, #8]
   28244:	beq	28270 <sfbpf_push_buffer_state+0x128>
   28248:	mov	r1, #0
   2824c:	str	r1, [r0]
   28250:	str	r1, [r5, #12]
   28254:	mov	r1, #1
   28258:	str	r1, [r5, #36]	; 0x24
   2825c:	ldr	r1, [r5, #12]
   28260:	ldr	r2, [r0, r1, lsl #2]
   28264:	cmp	r2, #0
   28268:	bne	281c4 <sfbpf_push_buffer_state+0x7c>
   2826c:	b	281f4 <sfbpf_push_buffer_state+0xac>
   28270:	ldr	r0, [pc, #8]	; 28280 <sfbpf_push_buffer_state+0x138>
   28274:	add	r0, pc, r0
   28278:	bl	27ec0 <yy_fatal_error>
   2827c:	.word	0x0001e810
   28280:	.word	0x0000d261
   28284:	.word	0x0001e7cc
   28288:	.word	0x0001e748

0002828c <sfbpf_pop_buffer_state>:
   2828c:	push	{r4, r5, r6, sl, fp, lr}
   28290:	add	fp, sp, #16
   28294:	ldr	r5, [pc, #168]	; 28344 <sfbpf_pop_buffer_state+0xb8>
   28298:	add	r5, pc, r5
   2829c:	ldr	r0, [r5, #8]
   282a0:	cmp	r0, #0
   282a4:	beq	28304 <sfbpf_pop_buffer_state+0x78>
   282a8:	ldr	r1, [r5, #12]
   282ac:	ldr	r4, [r0, r1, lsl #2]
   282b0:	cmp	r4, #0
   282b4:	popeq	{r4, r5, r6, sl, fp, pc}
   282b8:	mov	r6, #0
   282bc:	str	r6, [r0, r1, lsl #2]
   282c0:	ldr	r0, [r4, #20]
   282c4:	cmp	r0, #0
   282c8:	beq	282d4 <sfbpf_pop_buffer_state+0x48>
   282cc:	ldr	r0, [r4, #4]
   282d0:	bl	ea4 <free@plt>
   282d4:	mov	r0, r4
   282d8:	bl	ea4 <free@plt>
   282dc:	ldr	r1, [r5, #12]
   282e0:	ldr	r0, [r5, #8]
   282e4:	cmp	r1, #0
   282e8:	str	r6, [r0, r1, lsl #2]
   282ec:	subne	r6, r1, #1
   282f0:	strne	r6, [r5, #12]
   282f4:	cmp	r0, #0
   282f8:	ldrne	r1, [r0, r6, lsl #2]
   282fc:	cmpne	r1, #0
   28300:	bne	28308 <sfbpf_pop_buffer_state+0x7c>
   28304:	pop	{r4, r5, r6, sl, fp, pc}
   28308:	ldr	r2, [r1, #16]
   2830c:	str	r2, [r5, #28]
   28310:	ldr	r1, [r1, #8]
   28314:	ldr	r2, [pc, #44]	; 28348 <sfbpf_pop_buffer_state+0xbc>
   28318:	add	r2, pc, r2
   2831c:	str	r1, [r5, #16]
   28320:	str	r1, [r2]
   28324:	ldr	r0, [r0, r6, lsl #2]
   28328:	ldr	r0, [r0]
   2832c:	ldr	r2, [pc, #24]	; 2834c <sfbpf_pop_buffer_state+0xc0>
   28330:	add	r2, pc, r2
   28334:	str	r0, [r2]
   28338:	ldrb	r0, [r1]
   2833c:	strb	r0, [r5, #5]
   28340:	pop	{r4, r5, r6, sl, fp, pc}
   28344:	.word	0x0001e6d8
   28348:	.word	0x0001e6bc
   2834c:	.word	0x0001e638

00028350 <sfbpf__scan_buffer>:
   28350:	push	{r4, r5, r6, sl, fp, lr}
   28354:	add	fp, sp, #16
   28358:	mov	r4, #0
   2835c:	cmp	r1, #2
   28360:	bcc	28388 <sfbpf__scan_buffer+0x38>
   28364:	sub	r6, r1, #2
   28368:	mov	r5, r0
   2836c:	ldrb	r0, [r0, r6]
   28370:	cmp	r0, #0
   28374:	bne	28388 <sfbpf__scan_buffer+0x38>
   28378:	add	r0, r5, r1
   2837c:	ldrb	r0, [r0, #-1]
   28380:	cmp	r0, #0
   28384:	beq	28390 <sfbpf__scan_buffer+0x40>
   28388:	mov	r0, r4
   2838c:	pop	{r4, r5, r6, sl, fp, pc}
   28390:	mov	r0, #48	; 0x30
   28394:	bl	f1c <malloc@plt>
   28398:	cmp	r0, #0
   2839c:	beq	283e0 <sfbpf__scan_buffer+0x90>
   283a0:	mov	r4, r0
   283a4:	mov	r0, #0
   283a8:	mov	r1, #1
   283ac:	stm	r4, {r0, r5}
   283b0:	str	r5, [r4, #8]
   283b4:	str	r6, [r4, #12]
   283b8:	str	r6, [r4, #16]
   283bc:	str	r0, [r4, #20]
   283c0:	str	r0, [r4, #24]
   283c4:	str	r1, [r4, #28]
   283c8:	str	r0, [r4, #40]	; 0x28
   283cc:	str	r0, [r4, #44]	; 0x2c
   283d0:	mov	r0, r4
   283d4:	bl	27ef4 <sfbpf__switch_to_buffer>
   283d8:	mov	r0, r4
   283dc:	pop	{r4, r5, r6, sl, fp, pc}
   283e0:	ldr	r0, [pc, #4]	; 283ec <sfbpf__scan_buffer+0x9c>
   283e4:	add	r0, pc, r0
   283e8:	bl	27ec0 <yy_fatal_error>
   283ec:	.word	0x0000cfd1

000283f0 <sfbpf__scan_string>:
   283f0:	push	{r4, sl, fp, lr}
   283f4:	add	fp, sp, #8
   283f8:	mov	r4, r0
   283fc:	bl	f4c <strlen@plt>
   28400:	mov	r1, r0
   28404:	mov	r0, r4
   28408:	pop	{r4, sl, fp, lr}
   2840c:	b	28410 <sfbpf__scan_bytes>

00028410 <sfbpf__scan_bytes>:
   28410:	push	{r4, r5, r6, r7, fp, lr}
   28414:	add	fp, sp, #16
   28418:	mov	r6, r0
   2841c:	add	r0, r1, #2
   28420:	mov	r4, r1
   28424:	bl	f1c <malloc@plt>
   28428:	cmp	r0, #0
   2842c:	beq	284d4 <sfbpf__scan_bytes+0xc4>
   28430:	mov	r5, r0
   28434:	cmp	r4, #1
   28438:	blt	2846c <sfbpf__scan_bytes+0x5c>
   2843c:	mov	r0, r5
   28440:	mov	r1, r6
   28444:	mov	r2, r4
   28448:	bl	ec8 <memcpy@plt>
   2844c:	add	r0, r5, r4
   28450:	mov	r1, #0
   28454:	strh	r1, [r0]
   28458:	mov	r0, #48	; 0x30
   2845c:	bl	f1c <malloc@plt>
   28460:	cmp	r0, #0
   28464:	bne	28490 <sfbpf__scan_bytes+0x80>
   28468:	b	284e0 <sfbpf__scan_bytes+0xd0>
   2846c:	cmn	r4, #3
   28470:	add	r0, r5, r4
   28474:	mov	r1, #0
   28478:	strh	r1, [r0]
   2847c:	bhi	284ec <sfbpf__scan_bytes+0xdc>
   28480:	mov	r0, #48	; 0x30
   28484:	bl	f1c <malloc@plt>
   28488:	cmp	r0, #0
   2848c:	beq	284e0 <sfbpf__scan_bytes+0xd0>
   28490:	mov	r6, r0
   28494:	mov	r0, #0
   28498:	mov	r7, #1
   2849c:	stm	r6, {r0, r5}
   284a0:	str	r5, [r6, #8]
   284a4:	str	r4, [r6, #12]
   284a8:	str	r4, [r6, #16]
   284ac:	str	r0, [r6, #20]
   284b0:	str	r0, [r6, #24]
   284b4:	str	r7, [r6, #28]
   284b8:	str	r0, [r6, #40]	; 0x28
   284bc:	str	r0, [r6, #44]	; 0x2c
   284c0:	mov	r0, r6
   284c4:	bl	27ef4 <sfbpf__switch_to_buffer>
   284c8:	mov	r0, r6
   284cc:	str	r7, [r6, #20]
   284d0:	pop	{r4, r5, r6, r7, fp, pc}
   284d4:	ldr	r0, [pc, #28]	; 284f8 <sfbpf__scan_bytes+0xe8>
   284d8:	add	r0, pc, r0
   284dc:	bl	27ec0 <yy_fatal_error>
   284e0:	ldr	r0, [pc, #24]	; 28500 <sfbpf__scan_bytes+0xf0>
   284e4:	add	r0, pc, r0
   284e8:	bl	27ec0 <yy_fatal_error>
   284ec:	ldr	r0, [pc, #8]	; 284fc <sfbpf__scan_bytes+0xec>
   284f0:	add	r0, pc, r0
   284f4:	bl	27ec0 <yy_fatal_error>
   284f8:	.word	0x0000cf07
   284fc:	.word	0x0000cf18
   28500:	.word	0x0000ced1

00028504 <sfbpf_get_debug>:
   28504:	ldr	r0, [pc, #4]	; 28510 <sfbpf_get_debug+0xc>
   28508:	ldr	r0, [pc, r0]
   2850c:	bx	lr
   28510:	.word	0x0001e45c

00028514 <sfbpf_set_debug>:
   28514:	ldr	r1, [pc, #8]	; 28524 <sfbpf_set_debug+0x10>
   28518:	add	r1, pc, r1
   2851c:	str	r0, [r1]
   28520:	bx	lr
   28524:	.word	0x0001e44c

00028528 <sfbpf_lex_destroy>:
   28528:	push	{r4, r5, r6, r7, fp, lr}
   2852c:	add	fp, sp, #16
   28530:	ldr	r6, [pc, #160]	; 285d8 <sfbpf_lex_destroy+0xb0>
   28534:	mov	r5, #0
   28538:	mov	r4, #0
   2853c:	add	r6, pc, r6
   28540:	ldr	r0, [r6, #8]
   28544:	cmp	r0, #0
   28548:	beq	285a0 <sfbpf_lex_destroy+0x78>
   2854c:	ldr	r1, [r6, #12]
   28550:	mov	r7, #0
   28554:	ldr	r4, [r0, r1, lsl #2]
   28558:	cmp	r4, #0
   2855c:	beq	2859c <sfbpf_lex_destroy+0x74>
   28560:	str	r7, [r0, r1, lsl #2]
   28564:	ldr	r0, [r4, #20]
   28568:	cmp	r0, #0
   2856c:	beq	28578 <sfbpf_lex_destroy+0x50>
   28570:	ldr	r0, [r4, #4]
   28574:	bl	ea4 <free@plt>
   28578:	mov	r0, r4
   2857c:	bl	ea4 <free@plt>
   28580:	ldr	r0, [r6, #8]
   28584:	ldr	r1, [r6, #12]
   28588:	mov	r4, #0
   2858c:	cmp	r0, #0
   28590:	str	r4, [r0, r1, lsl #2]
   28594:	bne	28558 <sfbpf_lex_destroy+0x30>
   28598:	b	285a0 <sfbpf_lex_destroy+0x78>
   2859c:	mov	r4, r0
   285a0:	mov	r0, r4
   285a4:	bl	ea4 <free@plt>
   285a8:	str	r5, [r6, #36]	; 0x24
   285ac:	str	r5, [r6, #8]
   285b0:	str	r5, [r6, #12]
   285b4:	str	r5, [r6, #16]
   285b8:	strb	r5, [r6]
   285bc:	strb	r5, [r6, #4]
   285c0:	ldr	r0, [pc, #20]	; 285dc <sfbpf_lex_destroy+0xb4>
   285c4:	add	r0, pc, r0
   285c8:	str	r5, [r0]
   285cc:	str	r5, [r0, #4]
   285d0:	mov	r0, #0
   285d4:	pop	{r4, r5, r6, r7, fp, pc}
   285d8:	.word	0x0001e434
   285dc:	.word	0x0001e3a4

000285e0 <sfbpf_realloc>:
   285e0:	b	eec <realloc@plt>

000285e4 <sf_lex_init>:
   285e4:	push	{r4, sl, fp, lr}
   285e8:	add	fp, sp, #8
   285ec:	mov	r4, r0
   285f0:	bl	f4c <strlen@plt>
   285f4:	mov	r1, r0
   285f8:	mov	r0, r4
   285fc:	bl	28410 <sfbpf__scan_bytes>
   28600:	ldr	r1, [pc, #8]	; 28610 <sf_lex_init+0x2c>
   28604:	add	r1, pc, r1
   28608:	str	r0, [r1, #32]
   2860c:	pop	{r4, sl, fp, pc}
   28610:	.word	0x0001e36c

00028614 <sf_lex_cleanup>:
   28614:	push	{r4, r5, fp, lr}
   28618:	add	fp, sp, #8
   2861c:	ldr	r5, [pc, #88]	; 2867c <sf_lex_cleanup+0x68>
   28620:	add	r5, pc, r5
   28624:	ldr	r4, [r5, #32]
   28628:	cmp	r4, #0
   2862c:	beq	28670 <sf_lex_cleanup+0x5c>
   28630:	ldr	r0, [r5, #8]
   28634:	cmp	r0, #0
   28638:	ldrne	r1, [r5, #12]
   2863c:	ldrne	r1, [r0, r1, lsl #2]
   28640:	moveq	r1, #0
   28644:	cmp	r1, r4
   28648:	ldreq	r1, [r5, #12]
   2864c:	moveq	r2, #0
   28650:	streq	r2, [r0, r1, lsl #2]
   28654:	ldr	r0, [r4, #20]
   28658:	cmp	r0, #0
   2865c:	beq	28668 <sf_lex_cleanup+0x54>
   28660:	ldr	r0, [r4, #4]
   28664:	bl	ea4 <free@plt>
   28668:	mov	r0, r4
   2866c:	bl	ea4 <free@plt>
   28670:	mov	r0, #0
   28674:	str	r0, [r5, #32]
   28678:	pop	{r4, r5, fp, pc}
   2867c:	.word	0x0001e350

Disassembly of section .fini:

00028680 <_fini>:
   28680:	push	{r3, lr}
   28684:	pop	{r3, pc}
