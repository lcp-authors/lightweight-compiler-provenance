
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000560 <_init>:
 560:	push	{r3, lr}
 564:	bl	610 <call_weak_fn>
 568:	pop	{r3, pc}

Disassembly of section .plt:

0000056c <.plt>:
 56c:	push	{lr}		; (str lr, [sp, #-4]!)
 570:	ldr	lr, [pc, #4]	; 57c <.plt+0x10>
 574:	add	lr, pc, lr
 578:	ldr	pc, [lr, #8]!
 57c:	.word	0x00010a84

00000580 <__cxa_finalize@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2692]!	; 0xa84

0000058c <rb_strncasecmp@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2684]!	; 0xa7c

00000598 <sendto_realops_snomask@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2676]!	; 0xa74

000005a4 <__gmon_start__@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b0 <strlen@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2660]!	; 0xa64

000005bc <strchr@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2652]!	; 0xa5c

000005c8 <snprintf@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2644]!	; 0xa54

000005d4 <is_remote_connect@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e0 <ilog@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2628]!	; 0xa44

000005ec <log_client_name@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2620]!	; 0xa3c

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2612]!	; 0xa34

00000604 <strncmp@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2604]!	; 0xa2c

Disassembly of section .text:

00000610 <call_weak_fn>:
 610:	ldr	r3, [pc, #20]	; 62c <call_weak_fn+0x1c>
 614:	ldr	r2, [pc, #20]	; 630 <call_weak_fn+0x20>
 618:	add	r3, pc, r3
 61c:	ldr	r2, [r3, r2]
 620:	cmp	r2, #0
 624:	bxeq	lr
 628:	b	5a4 <__gmon_start__@plt>
 62c:	.word	0x000109e0
 630:	.word	0x00000044

00000634 <deregister_tm_clones>:
 634:	ldr	r3, [pc, #52]	; 670 <deregister_tm_clones+0x3c>
 638:	ldr	r0, [pc, #52]	; 674 <deregister_tm_clones+0x40>
 63c:	add	r3, pc, r3
 640:	add	r0, pc, r0
 644:	add	r3, r3, #3
 648:	sub	r3, r3, r0
 64c:	cmp	r3, #6
 650:	ldr	r3, [pc, #32]	; 678 <deregister_tm_clones+0x44>
 654:	add	r3, pc, r3
 658:	bxls	lr
 65c:	ldr	r2, [pc, #24]	; 67c <deregister_tm_clones+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	bxeq	lr
 66c:	bx	r3
 670:	.word	0x00010a8c
 674:	.word	0x00010a88
 678:	.word	0x000109a4
 67c:	.word	0x00000040

00000680 <register_tm_clones>:
 680:	ldr	r1, [pc, #56]	; 6c0 <register_tm_clones+0x40>
 684:	ldr	r0, [pc, #56]	; 6c4 <register_tm_clones+0x44>
 688:	add	r1, pc, r1
 68c:	add	r0, pc, r0
 690:	sub	r1, r1, r0
 694:	ldr	r3, [pc, #44]	; 6c8 <register_tm_clones+0x48>
 698:	asr	r1, r1, #2
 69c:	add	r3, pc, r3
 6a0:	add	r1, r1, r1, lsr #31
 6a4:	asrs	r1, r1, #1
 6a8:	bxeq	lr
 6ac:	ldr	r2, [pc, #24]	; 6cc <register_tm_clones+0x4c>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	bxeq	lr
 6bc:	bx	r3
 6c0:	.word	0x00010a40
 6c4:	.word	0x00010a3c
 6c8:	.word	0x0001095c
 6cc:	.word	0x0000004c

000006d0 <__do_global_dtors_aux>:
 6d0:	ldr	r3, [pc, #76]	; 724 <__do_global_dtors_aux+0x54>
 6d4:	ldr	r2, [pc, #76]	; 728 <__do_global_dtors_aux+0x58>
 6d8:	add	r3, pc, r3
 6dc:	add	r2, pc, r2
 6e0:	ldrb	r3, [r3]
 6e4:	cmp	r3, #0
 6e8:	bxne	lr
 6ec:	ldr	r3, [pc, #56]	; 72c <__do_global_dtors_aux+0x5c>
 6f0:	push	{r4, lr}
 6f4:	ldr	r3, [r2, r3]
 6f8:	cmp	r3, #0
 6fc:	beq	70c <__do_global_dtors_aux+0x3c>
 700:	ldr	r3, [pc, #40]	; 730 <__do_global_dtors_aux+0x60>
 704:	ldr	r0, [pc, r3]
 708:	bl	580 <__cxa_finalize@plt>
 70c:	bl	634 <deregister_tm_clones>
 710:	ldr	r3, [pc, #28]	; 734 <__do_global_dtors_aux+0x64>
 714:	mov	r2, #1
 718:	add	r3, pc, r3
 71c:	strb	r2, [r3]
 720:	pop	{r4, pc}
 724:	.word	0x000109f0
 728:	.word	0x0001091c
 72c:	.word	0x0000003c
 730:	.word	0x0001094c
 734:	.word	0x000109b0

00000738 <frame_dummy>:
 738:	ldr	r0, [pc, #56]	; 778 <frame_dummy+0x40>
 73c:	ldr	r3, [pc, #56]	; 77c <frame_dummy+0x44>
 740:	add	r0, pc, r0
 744:	ldr	r2, [r0]
 748:	add	r3, pc, r3
 74c:	cmp	r2, #0
 750:	bne	758 <frame_dummy+0x20>
 754:	b	680 <register_tm_clones>
 758:	ldr	r2, [pc, #32]	; 780 <frame_dummy+0x48>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	beq	754 <frame_dummy+0x1c>
 768:	push	{r4, lr}
 76c:	blx	r3
 770:	pop	{r4, lr}
 774:	b	680 <register_tm_clones>
 778:	.word	0x000107b4
 77c:	.word	0x000108b0
 780:	.word	0x00000048

00000784 <is_safe_error>:
 784:	push	{r4, r5, lr}
 788:	sub	sp, sp, #108	; 0x6c
 78c:	mov	r5, r0
 790:	ldr	r4, [pc, #288]	; 8b8 <is_safe_error+0x134>
 794:	add	r4, pc, r4
 798:	mov	r2, #25
 79c:	ldr	r1, [pc, #280]	; 8bc <is_safe_error+0x138>
 7a0:	add	r1, pc, r1
 7a4:	bl	604 <strncmp@plt>
 7a8:	cmp	r0, #0
 7ac:	moveq	r0, #1
 7b0:	bne	7bc <is_safe_error+0x38>
 7b4:	add	sp, sp, #108	; 0x6c
 7b8:	pop	{r4, r5, pc}
 7bc:	ldr	r3, [pc, #252]	; 8c0 <is_safe_error+0x13c>
 7c0:	ldr	r3, [r4, r3]
 7c4:	add	r3, r3, #88	; 0x58
 7c8:	ldr	r2, [pc, #244]	; 8c4 <is_safe_error+0x140>
 7cc:	add	r2, pc, r2
 7d0:	mov	r1, #100	; 0x64
 7d4:	add	r4, sp, #4
 7d8:	mov	r0, r4
 7dc:	bl	5c8 <snprintf@plt>
 7e0:	mov	r0, r4
 7e4:	bl	5b0 <strlen@plt>
 7e8:	mov	r2, r0
 7ec:	mov	r1, r4
 7f0:	mov	r0, r5
 7f4:	bl	604 <strncmp@plt>
 7f8:	cmp	r0, #0
 7fc:	moveq	r0, #1
 800:	beq	7b4 <is_safe_error+0x30>
 804:	mov	r2, #11
 808:	ldr	r1, [pc, #184]	; 8c8 <is_safe_error+0x144>
 80c:	add	r1, pc, r1
 810:	mov	r0, r5
 814:	bl	604 <strncmp@plt>
 818:	cmp	r0, #0
 81c:	moveq	r0, #1
 820:	beq	7b4 <is_safe_error+0x30>
 824:	mov	r2, #14
 828:	ldr	r1, [pc, #156]	; 8cc <is_safe_error+0x148>
 82c:	add	r1, pc, r1
 830:	mov	r0, r5
 834:	bl	604 <strncmp@plt>
 838:	cmp	r0, #0
 83c:	moveq	r0, #1
 840:	beq	7b4 <is_safe_error+0x30>
 844:	mov	r2, #12
 848:	ldr	r1, [pc, #128]	; 8d0 <is_safe_error+0x14c>
 84c:	add	r1, pc, r1
 850:	mov	r0, r5
 854:	bl	58c <rb_strncasecmp@plt>
 858:	cmp	r0, #0
 85c:	moveq	r0, #0
 860:	beq	7b4 <is_safe_error+0x30>
 864:	mov	r1, #91	; 0x5b
 868:	mov	r0, r5
 86c:	bl	5bc <strchr@plt>
 870:	cmp	r0, #0
 874:	movne	r0, #0
 878:	bne	7b4 <is_safe_error+0x30>
 87c:	mov	r1, #46	; 0x2e
 880:	mov	r0, r5
 884:	bl	5bc <strchr@plt>
 888:	cmp	r0, #0
 88c:	beq	8a0 <is_safe_error+0x11c>
 890:	ldrb	r3, [r0, #1]
 894:	cmp	r3, #0
 898:	movne	r0, #0
 89c:	bne	7b4 <is_safe_error+0x30>
 8a0:	mov	r1, #58	; 0x3a
 8a4:	mov	r0, r5
 8a8:	bl	5bc <strchr@plt>
 8ac:	clz	r0, r0
 8b0:	lsr	r0, r0, #5
 8b4:	b	7b4 <is_safe_error+0x30>
 8b8:	.word	0x00010864
 8bc:	.word	0x00000434
 8c0:	.word	0x00000050
 8c4:	.word	0x00000424
 8c8:	.word	0x00000404
 8cc:	.word	0x000003f0
 8d0:	.word	0x000003e0

000008d4 <ms_error>:
 8d4:	push	{r4, r5, r6, r7, lr}
 8d8:	sub	sp, sp, #12
 8dc:	mov	r5, r1
 8e0:	mov	r7, r2
 8e4:	ldr	r2, [pc, #244]	; 9e0 <ms_error+0x10c>
 8e8:	add	r2, pc, r2
 8ec:	ldr	r1, [pc, #240]	; 9e4 <ms_error+0x110>
 8f0:	ldr	r2, [r2, r1]
 8f4:	ldr	r6, [r2, #208]	; 0xd0
 8f8:	cmp	r3, #1
 8fc:	ble	964 <ms_error+0x90>
 900:	ldr	r3, [sp, #32]
 904:	ldr	r4, [r3, #4]
 908:	ldrb	r3, [r4]
 90c:	cmp	r3, #0
 910:	beq	970 <ms_error+0x9c>
 914:	mov	r1, #1
 918:	mov	r0, r7
 91c:	bl	5ec <log_client_name@plt>
 920:	mov	r3, r4
 924:	mov	r2, r0
 928:	ldr	r1, [pc, #184]	; 9e8 <ms_error+0x114>
 92c:	add	r1, pc, r1
 930:	mov	r0, #5
 934:	bl	5e0 <ilog@plt>
 938:	mov	r0, r4
 93c:	bl	784 <is_safe_error>
 940:	cmp	r0, #0
 944:	bne	9a0 <ms_error+0xcc>
 948:	cmp	r6, #2
 94c:	beq	9d8 <ms_error+0x104>
 950:	cmp	r7, r5
 954:	bne	9ac <ms_error+0xd8>
 958:	cmp	r6, #0
 95c:	movne	r6, #2
 960:	b	980 <ms_error+0xac>
 964:	ldr	r4, [pc, #128]	; 9ec <ms_error+0x118>
 968:	add	r4, pc, r4
 96c:	b	914 <ms_error+0x40>
 970:	ldr	r4, [pc, #120]	; 9f0 <ms_error+0x11c>
 974:	add	r4, pc, r4
 978:	b	914 <ms_error+0x40>
 97c:	mov	r6, #0
 980:	str	r4, [sp]
 984:	add	r3, r5, #88	; 0x58
 988:	ldr	r2, [pc, #100]	; 9f4 <ms_error+0x120>
 98c:	add	r2, pc, r2
 990:	mov	r1, r6
 994:	mov	r0, #256	; 0x100
 998:	bl	598 <sendto_realops_snomask@plt>
 99c:	b	9d8 <ms_error+0x104>
 9a0:	cmp	r7, r5
 9a4:	movne	r6, #0
 9a8:	beq	97c <ms_error+0xa8>
 9ac:	cmp	r6, #0
 9b0:	str	r4, [sp, #4]
 9b4:	add	r5, r5, #88	; 0x58
 9b8:	str	r5, [sp]
 9bc:	add	r3, r7, #88	; 0x58
 9c0:	ldr	r2, [pc, #48]	; 9f8 <ms_error+0x124>
 9c4:	add	r2, pc, r2
 9c8:	moveq	r1, r6
 9cc:	movne	r1, #2
 9d0:	mov	r0, #256	; 0x100
 9d4:	bl	598 <sendto_realops_snomask@plt>
 9d8:	add	sp, sp, #12
 9dc:	pop	{r4, r5, r6, r7, pc}
 9e0:	.word	0x00010710
 9e4:	.word	0x00000054
 9e8:	.word	0x00000314
 9ec:	.word	0x000002d4
 9f0:	.word	0x000002c8
 9f4:	.word	0x000002d8
 9f8:	.word	0x000002b8

000009fc <m_error>:
 9fc:	push	{r4, r5, r6, r7, lr}
 a00:	sub	sp, sp, #12
 a04:	mov	r4, r1
 a08:	mov	r7, r2
 a0c:	ldr	r2, [pc, #364]	; b80 <m_error+0x184>
 a10:	add	r2, pc, r2
 a14:	ldr	r1, [pc, #360]	; b84 <m_error+0x188>
 a18:	ldr	r2, [r2, r1]
 a1c:	ldr	r5, [r2, #208]	; 0xd0
 a20:	cmp	r3, #1
 a24:	ble	ac4 <m_error+0xc8>
 a28:	ldr	r3, [sp, #32]
 a2c:	ldr	r6, [r3, #4]
 a30:	ldrb	r3, [r6]
 a34:	cmp	r3, #0
 a38:	beq	ad0 <m_error+0xd4>
 a3c:	ldrh	r2, [r4, #80]	; 0x50
 a40:	sub	r3, r2, #1
 a44:	uxth	r3, r3
 a48:	cmp	r2, #32
 a4c:	cmpne	r3, #1
 a50:	bls	adc <m_error+0xe0>
 a54:	mov	r0, r6
 a58:	bl	784 <is_safe_error>
 a5c:	cmp	r0, #0
 a60:	bne	b48 <m_error+0x14c>
 a64:	ldrh	r2, [r4, #80]	; 0x50
 a68:	sub	r3, r2, #1
 a6c:	uxth	r3, r3
 a70:	cmp	r2, #32
 a74:	cmpne	r3, #1
 a78:	bhi	b60 <m_error+0x164>
 a7c:	cmp	r5, #1
 a80:	ble	b04 <m_error+0x108>
 a84:	cmp	r5, #0
 a88:	ble	b60 <m_error+0x164>
 a8c:	cmp	r5, #1
 a90:	movne	r5, #0
 a94:	moveq	r5, #1
 a98:	mov	r0, r4
 a9c:	bl	5d4 <is_remote_connect@plt>
 aa0:	cmp	r0, #0
 aa4:	movne	r0, #256	; 0x100
 aa8:	add	r3, r4, #88	; 0x58
 aac:	ldr	r2, [pc, #212]	; b88 <m_error+0x18c>
 ab0:	add	r2, pc, r2
 ab4:	orr	r1, r0, r5
 ab8:	mov	r0, #256	; 0x100
 abc:	bl	598 <sendto_realops_snomask@plt>
 ac0:	b	b60 <m_error+0x164>
 ac4:	ldr	r6, [pc, #192]	; b8c <m_error+0x190>
 ac8:	add	r6, pc, r6
 acc:	b	a3c <m_error+0x40>
 ad0:	ldr	r6, [pc, #184]	; b90 <m_error+0x194>
 ad4:	add	r6, pc, r6
 ad8:	b	a3c <m_error+0x40>
 adc:	mov	r1, #1
 ae0:	mov	r0, r7
 ae4:	bl	5ec <log_client_name@plt>
 ae8:	mov	r3, r6
 aec:	mov	r2, r0
 af0:	ldr	r1, [pc, #156]	; b94 <m_error+0x198>
 af4:	add	r1, pc, r1
 af8:	mov	r0, #5
 afc:	bl	5e0 <ilog@plt>
 b00:	b	a54 <m_error+0x58>
 b04:	cmp	r5, #0
 b08:	movne	r1, #2
 b0c:	beq	b2c <m_error+0x130>
 b10:	str	r6, [sp]
 b14:	add	r3, r4, #88	; 0x58
 b18:	ldr	r2, [pc, #120]	; b98 <m_error+0x19c>
 b1c:	add	r2, pc, r2
 b20:	mov	r0, #256	; 0x100
 b24:	bl	598 <sendto_realops_snomask@plt>
 b28:	b	a84 <m_error+0x88>
 b2c:	mov	r0, r4
 b30:	bl	5d4 <is_remote_connect@plt>
 b34:	subs	r1, r0, #0
 b38:	moveq	r5, r1
 b3c:	movne	r5, #0
 b40:	movne	r1, #256	; 0x100
 b44:	b	b10 <m_error+0x114>
 b48:	ldrh	r2, [r4, #80]	; 0x50
 b4c:	sub	r3, r2, #1
 b50:	uxth	r3, r3
 b54:	cmp	r2, #32
 b58:	cmpne	r3, #1
 b5c:	bls	b2c <m_error+0x130>
 b60:	ldr	r3, [pc, #52]	; b9c <m_error+0x1a0>
 b64:	add	r3, pc, r3
 b68:	mov	r2, r7
 b6c:	mov	r1, r7
 b70:	mov	r0, r4
 b74:	bl	5f8 <exit_client@plt>
 b78:	add	sp, sp, #12
 b7c:	pop	{r4, r5, r6, r7, pc}
 b80:	.word	0x000105e8
 b84:	.word	0x00000054
 b88:	.word	0x000001e8
 b8c:	.word	0x00000174
 b90:	.word	0x00000168
 b94:	.word	0x0000014c
 b98:	.word	0x00000148
 b9c:	.word	0x00000150

Disassembly of section .fini:

00000ba0 <_fini>:
 ba0:	push	{r3, lr}
 ba4:	pop	{r3, pc}
