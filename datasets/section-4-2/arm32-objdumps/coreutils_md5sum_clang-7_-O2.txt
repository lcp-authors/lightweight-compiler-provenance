
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010e70 <.init>:
   10e70:	push	{r3, lr}
   10e74:	bl	1116c <dcngettext@plt+0x54>
   10e78:	pop	{r3, pc}

Disassembly of section .plt:

00010e7c <fdopen@plt-0x14>:
   10e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e80:	ldr	lr, [pc, #4]	; 10e8c <fdopen@plt-0x4>
   10e84:	add	lr, pc, lr
   10e88:	ldr	pc, [lr, #8]!
   10e8c:	andeq	r8, r1, r4, ror r1

00010e90 <fdopen@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #372]!	; 0x174

00010e9c <calloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #364]!	; 0x16c

00010ea8 <fputs_unlocked@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #356]!	; 0x164

00010eb4 <raise@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #24, 20	; 0x18000
   10ebc:	ldr	pc, [ip, #348]!	; 0x15c

00010ec0 <__getdelim@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #24, 20	; 0x18000
   10ec8:	ldr	pc, [ip, #340]!	; 0x154

00010ecc <strcmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #24, 20	; 0x18000
   10ed4:	ldr	pc, [ip, #332]!	; 0x14c

00010ed8 <posix_fadvise64@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #24, 20	; 0x18000
   10ee0:	ldr	pc, [ip, #324]!	; 0x144

00010ee4 <fflush@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #24, 20	; 0x18000
   10eec:	ldr	pc, [ip, #316]!	; 0x13c

00010ef0 <free@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #308]!	; 0x134

00010efc <_exit@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #300]!	; 0x12c

00010f08 <memcpy@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #292]!	; 0x124

00010f14 <mbsinit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #284]!	; 0x11c

00010f20 <memcmp@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #276]!	; 0x114

00010f2c <dcgettext@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #268]!	; 0x10c

00010f38 <realloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #260]!	; 0x104

00010f44 <textdomain@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #252]!	; 0xfc

00010f50 <iswprint@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #244]!	; 0xf4

00010f5c <fwrite@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #236]!	; 0xec

00010f68 <lseek64@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #228]!	; 0xe4

00010f74 <__ctype_get_mb_cur_max@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #220]!	; 0xdc

00010f80 <__fpending@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #24, 20	; 0x18000
   10f88:	ldr	pc, [ip, #212]!	; 0xd4

00010f8c <mbrtowc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #24, 20	; 0x18000
   10f94:	ldr	pc, [ip, #204]!	; 0xcc

00010f98 <error@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #24, 20	; 0x18000
   10fa0:	ldr	pc, [ip, #196]!	; 0xc4

00010fa4 <malloc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #24, 20	; 0x18000
   10fac:	ldr	pc, [ip, #188]!	; 0xbc

00010fb0 <__libc_start_main@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #24, 20	; 0x18000
   10fb8:	ldr	pc, [ip, #180]!	; 0xb4

00010fbc <__freading@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #24, 20	; 0x18000
   10fc4:	ldr	pc, [ip, #172]!	; 0xac

00010fc8 <__ctype_tolower_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #24, 20	; 0x18000
   10fd0:	ldr	pc, [ip, #164]!	; 0xa4

00010fd4 <__gmon_start__@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #24, 20	; 0x18000
   10fdc:	ldr	pc, [ip, #156]!	; 0x9c

00010fe0 <getopt_long@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #148]!	; 0x94

00010fec <__ctype_b_loc@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #140]!	; 0x8c

00010ff8 <exit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #132]!	; 0x84

00011004 <strlen@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #124]!	; 0x7c

00011010 <strchr@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #116]!	; 0x74

0001101c <__errno_location@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #108]!	; 0x6c

00011028 <__cxa_atexit@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #100]!	; 0x64

00011034 <setvbuf@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #24, 20	; 0x18000
   1103c:	ldr	pc, [ip, #92]!	; 0x5c

00011040 <memset@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #84]!	; 0x54

0001104c <__printf_chk@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #76]!	; 0x4c

00011058 <fileno@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #68]!	; 0x44

00011064 <__fprintf_chk@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #24, 20	; 0x18000
   1106c:	ldr	pc, [ip, #60]!	; 0x3c

00011070 <fclose@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #24, 20	; 0x18000
   11078:	ldr	pc, [ip, #52]!	; 0x34

0001107c <fseeko64@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #24, 20	; 0x18000
   11084:	ldr	pc, [ip, #44]!	; 0x2c

00011088 <fcntl64@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #24, 20	; 0x18000
   11090:	ldr	pc, [ip, #36]!	; 0x24

00011094 <__overflow@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #24, 20	; 0x18000
   1109c:	ldr	pc, [ip, #28]!

000110a0 <setlocale@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #24, 20	; 0x18000
   110a8:	ldr	pc, [ip, #20]!

000110ac <strrchr@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #24, 20	; 0x18000
   110b4:	ldr	pc, [ip, #12]!

000110b8 <nl_langinfo@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #24, 20	; 0x18000
   110c0:	ldr	pc, [ip, #4]!

000110c4 <clearerr_unlocked@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #4092]!	; 0xffc

000110d0 <fopen64@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #4084]!	; 0xff4

000110dc <bindtextdomain@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #4076]!	; 0xfec

000110e8 <fread_unlocked@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110f4 <strncmp@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #4060]!	; 0xfdc

00011100 <abort@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #4052]!	; 0xfd4

0001110c <close@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #4044]!	; 0xfcc

00011118 <dcngettext@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #4036]!	; 0xfc4

Disassembly of section .text:

00011130 <.text>:
   11130:	mov	fp, #0
   11134:	mov	lr, #0
   11138:	pop	{r1}		; (ldr r1, [sp], #4)
   1113c:	mov	r2, sp
   11140:	push	{r2}		; (str r2, [sp, #-4]!)
   11144:	push	{r0}		; (str r0, [sp, #-4]!)
   11148:	ldr	ip, [pc, #16]	; 11160 <dcngettext@plt+0x48>
   1114c:	push	{ip}		; (str ip, [sp, #-4]!)
   11150:	ldr	r0, [pc, #12]	; 11164 <dcngettext@plt+0x4c>
   11154:	ldr	r3, [pc, #12]	; 11168 <dcngettext@plt+0x50>
   11158:	bl	10fb0 <__libc_start_main@plt>
   1115c:	bl	11100 <abort@plt>
   11160:	andeq	r7, r1, ip, lsr r1
   11164:	andeq	r1, r1, ip, ror r5
   11168:	ldrdeq	r7, [r1], -ip
   1116c:	ldr	r3, [pc, #20]	; 11188 <dcngettext@plt+0x70>
   11170:	ldr	r2, [pc, #20]	; 1118c <dcngettext@plt+0x74>
   11174:	add	r3, pc, r3
   11178:	ldr	r2, [r3, r2]
   1117c:	cmp	r2, #0
   11180:	bxeq	lr
   11184:	b	10fd4 <__gmon_start__@plt>
   11188:	andeq	r7, r1, r4, lsl #29
   1118c:	andeq	r0, r0, r8, ror #1
   11190:	ldr	r0, [pc, #24]	; 111b0 <dcngettext@plt+0x98>
   11194:	ldr	r3, [pc, #24]	; 111b4 <dcngettext@plt+0x9c>
   11198:	cmp	r3, r0
   1119c:	bxeq	lr
   111a0:	ldr	r3, [pc, #16]	; 111b8 <dcngettext@plt+0xa0>
   111a4:	cmp	r3, #0
   111a8:	bxeq	lr
   111ac:	bx	r3
   111b0:	andeq	r9, r2, r8, asr #2
   111b4:	andeq	r9, r2, r8, asr #2
   111b8:	andeq	r0, r0, r0
   111bc:	ldr	r0, [pc, #36]	; 111e8 <dcngettext@plt+0xd0>
   111c0:	ldr	r1, [pc, #36]	; 111ec <dcngettext@plt+0xd4>
   111c4:	sub	r1, r1, r0
   111c8:	asr	r1, r1, #2
   111cc:	add	r1, r1, r1, lsr #31
   111d0:	asrs	r1, r1, #1
   111d4:	bxeq	lr
   111d8:	ldr	r3, [pc, #16]	; 111f0 <dcngettext@plt+0xd8>
   111dc:	cmp	r3, #0
   111e0:	bxeq	lr
   111e4:	bx	r3
   111e8:	andeq	r9, r2, r8, asr #2
   111ec:	andeq	r9, r2, r8, asr #2
   111f0:	andeq	r0, r0, r0
   111f4:	push	{r4, lr}
   111f8:	ldr	r4, [pc, #24]	; 11218 <dcngettext@plt+0x100>
   111fc:	ldrb	r3, [r4]
   11200:	cmp	r3, #0
   11204:	popne	{r4, pc}
   11208:	bl	11190 <dcngettext@plt+0x78>
   1120c:	mov	r3, #1
   11210:	strb	r3, [r4]
   11214:	pop	{r4, pc}
   11218:	andeq	r9, r2, r8, ror #2
   1121c:	b	111bc <dcngettext@plt+0xa4>
   11220:	push	{fp, lr}
   11224:	mov	fp, sp
   11228:	sub	sp, sp, #56	; 0x38
   1122c:	mov	r4, r0
   11230:	cmp	r0, #0
   11234:	bne	11538 <dcngettext@plt+0x420>
   11238:	movw	r1, #29067	; 0x718b
   1123c:	mov	r0, #0
   11240:	mov	r2, #5
   11244:	movt	r1, #1
   11248:	bl	10f2c <dcgettext@plt>
   1124c:	mov	r1, r0
   11250:	movw	r0, #37252	; 0x9184
   11254:	movt	r0, #2
   11258:	ldr	r2, [r0]
   1125c:	mov	r0, #1
   11260:	bl	1104c <__printf_chk@plt>
   11264:	movw	r1, #29100	; 0x71ac
   11268:	mov	r0, #0
   1126c:	mov	r2, #5
   11270:	movt	r1, #1
   11274:	bl	10f2c <dcgettext@plt>
   11278:	movw	r2, #29139	; 0x71d3
   1127c:	mov	r1, r0
   11280:	mov	r0, #1
   11284:	mov	r3, #128	; 0x80
   11288:	movt	r2, #1
   1128c:	bl	1104c <__printf_chk@plt>
   11290:	movw	r1, #31071	; 0x795f
   11294:	mov	r0, #0
   11298:	mov	r2, #5
   1129c:	movt	r1, #1
   112a0:	bl	10f2c <dcgettext@plt>
   112a4:	movw	r7, #37220	; 0x9164
   112a8:	movt	r7, #2
   112ac:	ldr	r1, [r7]
   112b0:	bl	10ea8 <fputs_unlocked@plt>
   112b4:	movw	r1, #29143	; 0x71d7
   112b8:	mov	r0, #0
   112bc:	mov	r2, #5
   112c0:	movt	r1, #1
   112c4:	bl	10f2c <dcgettext@plt>
   112c8:	ldr	r1, [r7]
   112cc:	bl	10ea8 <fputs_unlocked@plt>
   112d0:	movw	r1, #29188	; 0x7204
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	movt	r1, #1
   112e0:	bl	10f2c <dcgettext@plt>
   112e4:	ldr	r1, [r7]
   112e8:	bl	10ea8 <fputs_unlocked@plt>
   112ec:	movw	r1, #29258	; 0x724a
   112f0:	mov	r0, #0
   112f4:	mov	r2, #5
   112f8:	movt	r1, #1
   112fc:	bl	10f2c <dcgettext@plt>
   11300:	ldr	r1, [r7]
   11304:	bl	10ea8 <fputs_unlocked@plt>
   11308:	movw	r1, #29311	; 0x727f
   1130c:	mov	r0, #0
   11310:	mov	r2, #5
   11314:	movt	r1, #1
   11318:	bl	10f2c <dcgettext@plt>
   1131c:	ldr	r1, [r7]
   11320:	bl	10ea8 <fputs_unlocked@plt>
   11324:	movw	r1, #29364	; 0x72b4
   11328:	mov	r0, #0
   1132c:	mov	r2, #5
   11330:	movt	r1, #1
   11334:	bl	10f2c <dcgettext@plt>
   11338:	ldr	r1, [r7]
   1133c:	bl	10ea8 <fputs_unlocked@plt>
   11340:	movw	r1, #29490	; 0x7332
   11344:	mov	r0, #0
   11348:	mov	r2, #5
   1134c:	movt	r1, #1
   11350:	bl	10f2c <dcgettext@plt>
   11354:	ldr	r1, [r7]
   11358:	bl	10ea8 <fputs_unlocked@plt>
   1135c:	movw	r1, #29929	; 0x74e9
   11360:	mov	r0, #0
   11364:	mov	r2, #5
   11368:	movt	r1, #1
   1136c:	bl	10f2c <dcgettext@plt>
   11370:	ldr	r1, [r7]
   11374:	bl	10ea8 <fputs_unlocked@plt>
   11378:	movw	r1, #29974	; 0x7516
   1137c:	mov	r0, #0
   11380:	mov	r2, #5
   11384:	movt	r1, #1
   11388:	bl	10f2c <dcgettext@plt>
   1138c:	ldr	r1, [r7]
   11390:	bl	10ea8 <fputs_unlocked@plt>
   11394:	movw	r1, #30028	; 0x754c
   11398:	mov	r0, #0
   1139c:	mov	r2, #5
   113a0:	movt	r1, #1
   113a4:	bl	10f2c <dcgettext@plt>
   113a8:	movw	r2, #30072	; 0x7578
   113ac:	mov	r1, r0
   113b0:	mov	r0, #1
   113b4:	movt	r2, #1
   113b8:	bl	1104c <__printf_chk@plt>
   113bc:	movw	r1, #30081	; 0x7581
   113c0:	mov	r0, #0
   113c4:	mov	r2, #5
   113c8:	movt	r1, #1
   113cc:	bl	10f2c <dcgettext@plt>
   113d0:	ldr	r1, [r7]
   113d4:	bl	10ea8 <fputs_unlocked@plt>
   113d8:	movw	r0, #32216	; 0x7dd8
   113dc:	mov	r2, #48	; 0x30
   113e0:	mov	r6, sp
   113e4:	movw	r5, #30414	; 0x76ce
   113e8:	movt	r0, #1
   113ec:	movt	r5, #1
   113f0:	add	r1, r0, #32
   113f4:	add	r3, r0, #16
   113f8:	vld1.64	{d18-d19}, [r0], r2
   113fc:	vld1.64	{d16-d17}, [r1]
   11400:	vld1.64	{d20-d21}, [r3]
   11404:	add	r1, r6, #32
   11408:	vldr	d22, [r0]
   1140c:	add	r0, r6, #16
   11410:	vst1.64	{d16-d17}, [r1]
   11414:	movw	r1, #31127	; 0x7997
   11418:	vst1.64	{d20-d21}, [r0]
   1141c:	mov	r0, r6
   11420:	vst1.64	{d18-d19}, [r0], r2
   11424:	movt	r1, #1
   11428:	vstr	d22, [r0]
   1142c:	mov	r0, r5
   11430:	bl	10ecc <strcmp@plt>
   11434:	cmp	r0, #0
   11438:	ldrne	r1, [r6, #8]!
   1143c:	cmpne	r1, #0
   11440:	bne	1142c <dcngettext@plt+0x314>
   11444:	ldr	r6, [r6, #4]
   11448:	movw	r1, #31222	; 0x79f6
   1144c:	mov	r0, #0
   11450:	mov	r2, #5
   11454:	movt	r1, #1
   11458:	bl	10f2c <dcgettext@plt>
   1145c:	movw	r2, #30451	; 0x76f3
   11460:	movw	r3, #31245	; 0x7a0d
   11464:	mov	r1, r0
   11468:	mov	r0, #1
   1146c:	movt	r2, #1
   11470:	movt	r3, #1
   11474:	bl	1104c <__printf_chk@plt>
   11478:	cmp	r6, #0
   1147c:	mov	r0, #5
   11480:	mov	r1, #0
   11484:	moveq	r6, r5
   11488:	bl	110a0 <setlocale@plt>
   1148c:	cmp	r0, #0
   11490:	beq	114c8 <dcngettext@plt+0x3b0>
   11494:	movw	r1, #31285	; 0x7a35
   11498:	mov	r2, #3
   1149c:	movt	r1, #1
   114a0:	bl	110f4 <strncmp@plt>
   114a4:	cmp	r0, #0
   114a8:	beq	114c8 <dcngettext@plt+0x3b0>
   114ac:	movw	r1, #31289	; 0x7a39
   114b0:	mov	r0, #0
   114b4:	mov	r2, #5
   114b8:	movt	r1, #1
   114bc:	bl	10f2c <dcgettext@plt>
   114c0:	ldr	r1, [r7]
   114c4:	bl	10ea8 <fputs_unlocked@plt>
   114c8:	movw	r1, #31360	; 0x7a80
   114cc:	mov	r0, #0
   114d0:	mov	r2, #5
   114d4:	movt	r1, #1
   114d8:	bl	10f2c <dcgettext@plt>
   114dc:	movw	r2, #31245	; 0x7a0d
   114e0:	mov	r1, r0
   114e4:	mov	r0, #1
   114e8:	mov	r3, r5
   114ec:	movt	r2, #1
   114f0:	bl	1104c <__printf_chk@plt>
   114f4:	movw	r1, #31387	; 0x7a9b
   114f8:	mov	r0, #0
   114fc:	mov	r2, #5
   11500:	movt	r1, #1
   11504:	bl	10f2c <dcgettext@plt>
   11508:	movw	r3, #29928	; 0x74e8
   1150c:	mov	r1, r0
   11510:	movw	r0, #31155	; 0x79b3
   11514:	cmp	r6, r5
   11518:	mov	r2, r6
   1151c:	movt	r0, #1
   11520:	movt	r3, #1
   11524:	moveq	r3, r0
   11528:	mov	r0, #1
   1152c:	bl	1104c <__printf_chk@plt>
   11530:	mov	r0, r4
   11534:	bl	10ff8 <exit@plt>
   11538:	movw	r0, #37208	; 0x9158
   1153c:	movw	r1, #29028	; 0x7164
   11540:	mov	r2, #5
   11544:	movt	r0, #2
   11548:	movt	r1, #1
   1154c:	ldr	r5, [r0]
   11550:	mov	r0, #0
   11554:	bl	10f2c <dcgettext@plt>
   11558:	mov	r2, r0
   1155c:	movw	r0, #37252	; 0x9184
   11560:	mov	r1, #1
   11564:	movt	r0, #2
   11568:	ldr	r3, [r0]
   1156c:	mov	r0, r5
   11570:	bl	11064 <__fprintf_chk@plt>
   11574:	mov	r0, r4
   11578:	bl	10ff8 <exit@plt>
   1157c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11580:	add	fp, sp, #28
   11584:	sub	sp, sp, #188	; 0xbc
   11588:	mov	r5, r0
   1158c:	ldr	r0, [r1]
   11590:	mov	r4, r1
   11594:	bl	1407c <dcngettext@plt+0x2f64>
   11598:	movw	r1, #29928	; 0x74e8
   1159c:	mov	r0, #6
   115a0:	movt	r1, #1
   115a4:	bl	110a0 <setlocale@plt>
   115a8:	movw	r6, #30455	; 0x76f7
   115ac:	movw	r1, #30421	; 0x76d5
   115b0:	movt	r6, #1
   115b4:	movt	r1, #1
   115b8:	mov	r0, r6
   115bc:	bl	110dc <bindtextdomain@plt>
   115c0:	mov	r0, r6
   115c4:	bl	10f44 <textdomain@plt>
   115c8:	movw	r0, #11720	; 0x2dc8
   115cc:	movt	r0, #1
   115d0:	bl	17140 <dcngettext@plt+0x6028>
   115d4:	movw	r0, #37220	; 0x9164
   115d8:	mov	r1, #0
   115dc:	mov	r2, #1
   115e0:	mov	r3, #0
   115e4:	mov	r8, #0
   115e8:	movt	r0, #2
   115ec:	ldr	r0, [r0]
   115f0:	bl	11034 <setvbuf@plt>
   115f4:	sub	r0, fp, #77	; 0x4d
   115f8:	movw	sl, #30445	; 0x76ed
   115fc:	movw	r7, #32008	; 0x7d08
   11600:	mvn	r6, #0
   11604:	add	r0, r0, #3
   11608:	movt	sl, #1
   1160c:	movt	r7, #1
   11610:	and	r9, r0, #3
   11614:	sub	r0, r0, r9
   11618:	str	r0, [sp, #44]	; 0x2c
   1161c:	mov	r0, #0
   11620:	str	r0, [sp, #56]	; 0x38
   11624:	mov	r0, #0
   11628:	b	11648 <dcngettext@plt+0x530>
   1162c:	mov	r1, #1
   11630:	strb	r1, [r0]
   11634:	mov	r0, r2
   11638:	b	11648 <dcngettext@plt+0x530>
   1163c:	movw	r0, #37231	; 0x916f
   11640:	movt	r0, #2
   11644:	b	1162c <dcngettext@plt+0x514>
   11648:	str	r0, [sp, #72]	; 0x48
   1164c:	mov	r0, r5
   11650:	mov	r1, r4
   11654:	mov	r2, sl
   11658:	mov	r3, r7
   1165c:	str	r8, [sp]
   11660:	bl	10fe0 <getopt_long@plt>
   11664:	cmp	r0, #97	; 0x61
   11668:	ble	117ec <dcngettext@plt+0x6d4>
   1166c:	sub	r1, r0, #98	; 0x62
   11670:	cmp	r1, #24
   11674:	bls	116d4 <dcngettext@plt+0x5bc>
   11678:	ldr	r2, [sp, #72]	; 0x48
   1167c:	sub	r0, r0, #256	; 0x100
   11680:	cmp	r0, #4
   11684:	bhi	12aa0 <dcngettext@plt+0x1988>
   11688:	add	r1, pc, #0
   1168c:	ldr	pc, [r1, r0, lsl #2]
   11690:	andeq	r1, r1, ip, lsr r6
   11694:	andeq	r1, r1, r4, lsr #13
   11698:	andeq	r1, r1, ip, lsl #15
   1169c:			; <UNDEFINED> instruction: 0x000117b0
   116a0:	andeq	r1, r1, r4, asr r7
   116a4:	movw	r0, #37229	; 0x916d
   116a8:	mov	r1, #1
   116ac:	movt	r0, #2
   116b0:	strb	r8, [r0]
   116b4:	movw	r0, #37228	; 0x916c
   116b8:	movt	r0, #2
   116bc:	strb	r1, [r0]
   116c0:	movw	r0, #37230	; 0x916e
   116c4:	movt	r0, #2
   116c8:	strb	r8, [r0]
   116cc:	mov	r0, r2
   116d0:	b	11648 <dcngettext@plt+0x530>
   116d4:	add	r2, pc, #8
   116d8:	ldr	r3, [sp, #72]	; 0x48
   116dc:	mov	r0, #1
   116e0:	ldr	pc, [r2, r1, lsl #2]
   116e4:	andeq	r1, r1, r8, asr #14
   116e8:	andeq	r1, r1, r8, asr #12
   116ec:	andeq	r2, r1, r0, lsr #21
   116f0:	andeq	r2, r1, r0, lsr #21
   116f4:	andeq	r2, r1, r0, lsr #21
   116f8:	andeq	r2, r1, r0, lsr #21
   116fc:	andeq	r2, r1, r0, lsr #21
   11700:	andeq	r2, r1, r0, lsr #21
   11704:	andeq	r2, r1, r0, lsr #21
   11708:	andeq	r2, r1, r0, lsr #21
   1170c:	andeq	r2, r1, r0, lsr #21
   11710:	andeq	r2, r1, r0, lsr #21
   11714:	andeq	r2, r1, r0, lsr #21
   11718:	andeq	r2, r1, r0, lsr #21
   1171c:	andeq	r2, r1, r0, lsr #21
   11720:	andeq	r2, r1, r0, lsr #21
   11724:	andeq	r2, r1, r0, lsr #21
   11728:	andeq	r2, r1, r0, lsr #21
   1172c:	andeq	r1, r1, r0, lsl #15
   11730:	andeq	r2, r1, r0, lsr #21
   11734:	andeq	r2, r1, r0, lsr #21
   11738:			; <UNDEFINED> instruction: 0x000117bc
   1173c:	andeq	r2, r1, r0, lsr #21
   11740:	andeq	r2, r1, r0, lsr #21
   11744:	andeq	r1, r1, r8, ror #14
   11748:	mov	r6, #1
   1174c:	mov	r0, r3
   11750:	b	11648 <dcngettext@plt+0x530>
   11754:	mov	r0, #1
   11758:	mov	r6, #1
   1175c:	str	r0, [sp, #56]	; 0x38
   11760:	mov	r0, r2
   11764:	b	11648 <dcngettext@plt+0x530>
   11768:	movw	r0, #37233	; 0x9171
   1176c:	mov	r1, #1
   11770:	movt	r0, #2
   11774:	strb	r1, [r0]
   11778:	mov	r0, r3
   1177c:	b	11648 <dcngettext@plt+0x530>
   11780:	mov	r6, #0
   11784:	mov	r0, r3
   11788:	b	11648 <dcngettext@plt+0x530>
   1178c:	movw	r0, #37229	; 0x916d
   11790:	movt	r0, #2
   11794:	strb	r8, [r0]
   11798:	movw	r0, #37228	; 0x916c
   1179c:	movt	r0, #2
   117a0:	strb	r8, [r0]
   117a4:	movw	r0, #37230	; 0x916e
   117a8:	movt	r0, #2
   117ac:	b	1162c <dcngettext@plt+0x514>
   117b0:	movw	r0, #37232	; 0x9170
   117b4:	movt	r0, #2
   117b8:	b	1162c <dcngettext@plt+0x514>
   117bc:	movw	r0, #37229	; 0x916d
   117c0:	mov	r1, #1
   117c4:	movt	r0, #2
   117c8:	strb	r1, [r0]
   117cc:	movw	r0, #37228	; 0x916c
   117d0:	movt	r0, #2
   117d4:	strb	r8, [r0]
   117d8:	movw	r0, #37230	; 0x916e
   117dc:	movt	r0, #2
   117e0:	strb	r8, [r0]
   117e4:	mov	r0, r3
   117e8:	b	11648 <dcngettext@plt+0x530>
   117ec:	cmn	r0, #1
   117f0:	bne	12a2c <dcngettext@plt+0x1914>
   117f4:	movw	sl, #37240	; 0x9178
   117f8:	movw	r1, #37236	; 0x9174
   117fc:	mov	r0, #1
   11800:	ldr	r3, [sp, #72]	; 0x48
   11804:	cmp	r6, #0
   11808:	movt	sl, #2
   1180c:	movt	r1, #2
   11810:	strb	r0, [sl]
   11814:	strb	r0, [r1]
   11818:	ldr	r0, [sp, #56]	; 0x38
   1181c:	eor	r1, r0, #1
   11820:	tsteq	r1, #1
   11824:	beq	12aa8 <dcngettext@plt+0x1990>
   11828:	eor	r0, r3, #1
   1182c:	tst	r0, #1
   11830:	bne	11848 <dcngettext@plt+0x730>
   11834:	movw	r2, #37233	; 0x9171
   11838:	movt	r2, #2
   1183c:	ldrb	r2, [r2]
   11840:	cmp	r2, #0
   11844:	bne	12ab4 <dcngettext@plt+0x199c>
   11848:	orr	r1, r1, r0
   1184c:	tst	r1, #1
   11850:	beq	12ac0 <dcngettext@plt+0x19a8>
   11854:	mov	r1, #0
   11858:	cmp	r6, #0
   1185c:	movwlt	r1, #1
   11860:	orr	r1, r1, r0
   11864:	tst	r1, #1
   11868:	beq	12acc <dcngettext@plt+0x19b4>
   1186c:	movw	r1, #37231	; 0x916f
   11870:	movt	r1, #2
   11874:	ldrb	r1, [r1]
   11878:	mvn	r1, r1
   1187c:	orr	r1, r3, r1
   11880:	tst	r1, #1
   11884:	beq	12ad8 <dcngettext@plt+0x19c0>
   11888:	movw	r1, #37228	; 0x916c
   1188c:	movt	r1, #2
   11890:	ldrb	r1, [r1]
   11894:	mvn	r1, r1
   11898:	orr	r1, r3, r1
   1189c:	tst	r1, #1
   118a0:	beq	12ae4 <dcngettext@plt+0x19cc>
   118a4:	movw	r1, #37229	; 0x916d
   118a8:	movt	r1, #2
   118ac:	ldrb	r1, [r1]
   118b0:	mvn	r1, r1
   118b4:	orr	r1, r3, r1
   118b8:	tst	r1, #1
   118bc:	beq	12af0 <dcngettext@plt+0x19d8>
   118c0:	movw	r1, #37230	; 0x916e
   118c4:	movt	r1, #2
   118c8:	ldrb	r1, [r1]
   118cc:	mvn	r1, r1
   118d0:	orr	r1, r3, r1
   118d4:	tst	r1, #1
   118d8:	beq	12afc <dcngettext@plt+0x19e4>
   118dc:	movw	r1, #37232	; 0x9170
   118e0:	movt	r1, #2
   118e4:	ldrb	r1, [r1]
   118e8:	and	r0, r1, r0
   118ec:	tst	r0, #1
   118f0:	bne	12b08 <dcngettext@plt+0x19f0>
   118f4:	movw	r0, #37200	; 0x9150
   118f8:	add	r2, r4, r5, lsl #2
   118fc:	movt	r0, #2
   11900:	ldr	r0, [r0]
   11904:	cmp	r0, r5
   11908:	add	r0, r4, r0, lsl #2
   1190c:	mov	r4, #1
   11910:	movweq	r1, #32458	; 0x7eca
   11914:	movteq	r1, #1
   11918:	streq	r1, [r2], #4
   1191c:	cmp	r0, r2
   11920:	bcs	129b4 <dcngettext@plt+0x189c>
   11924:	cmp	r6, #1
   11928:	mov	r1, #42	; 0x2a
   1192c:	mov	r6, r0
   11930:	rsb	r0, r9, #3
   11934:	sub	r5, fp, #48	; 0x30
   11938:	movw	r7, #31998	; 0x7cfe
   1193c:	str	r2, [sp, #68]	; 0x44
   11940:	movwlt	r1, #32
   11944:	movt	r7, #1
   11948:	str	r1, [sp, #24]
   1194c:	sub	r1, fp, #77	; 0x4d
   11950:	add	r8, r1, r0
   11954:	add	r0, r5, #3
   11958:	and	r1, r0, #3
   1195c:	str	r8, [sp, #96]	; 0x60
   11960:	sub	r0, r0, r1
   11964:	str	r0, [sp, #20]
   11968:	rsb	r0, r1, #3
   1196c:	mov	r1, #1
   11970:	add	r0, r5, r0
   11974:	str	r0, [sp, #16]
   11978:	mov	r0, r6
   1197c:	sub	r6, fp, #52	; 0x34
   11980:	b	119b4 <dcngettext@plt+0x89c>
   11984:	mov	r1, r4
   11988:	bl	11094 <__overflow@plt>
   1198c:	b	11be4 <dcngettext@plt+0xacc>
   11990:	mov	r1, #32
   11994:	bl	11094 <__overflow@plt>
   11998:	b	11b84 <dcngettext@plt+0xa6c>
   1199c:	ldr	r1, [sp, #24]
   119a0:	bl	11094 <__overflow@plt>
   119a4:	b	11bb0 <dcngettext@plt+0xa98>
   119a8:	mov	r1, #92	; 0x5c
   119ac:	bl	11094 <__overflow@plt>
   119b0:	b	11ab8 <dcngettext@plt+0x9a0>
   119b4:	ldr	r4, [r0]
   119b8:	tst	r3, #1
   119bc:	str	r1, [sp, #84]	; 0x54
   119c0:	str	r0, [sp, #88]	; 0x58
   119c4:	beq	11a10 <dcngettext@plt+0x8f8>
   119c8:	movw	r1, #32458	; 0x7eca
   119cc:	mov	r0, r4
   119d0:	movt	r1, #1
   119d4:	bl	10ecc <strcmp@plt>
   119d8:	mov	r7, r0
   119dc:	cmp	r0, #0
   119e0:	beq	11bf4 <dcngettext@plt+0xadc>
   119e4:	movw	r1, #31985	; 0x7cf1
   119e8:	mov	r0, r4
   119ec:	movt	r1, #1
   119f0:	bl	13efc <dcngettext@plt+0x2de4>
   119f4:	cmp	r0, #0
   119f8:	beq	11c94 <dcngettext@plt+0xb7c>
   119fc:	str	r7, [sp, #64]	; 0x40
   11a00:	mov	r7, r0
   11a04:	mov	r1, r0
   11a08:	str	r4, [sp, #76]	; 0x4c
   11a0c:	b	11c2c <dcngettext@plt+0xb14>
   11a10:	ldr	r1, [sp, #44]	; 0x2c
   11a14:	mov	r0, r4
   11a18:	sub	r2, fp, #48	; 0x30
   11a1c:	mov	r9, r4
   11a20:	bl	12b60 <dcngettext@plt+0x1a48>
   11a24:	mov	r4, #0
   11a28:	cmp	r0, #0
   11a2c:	beq	11be8 <dcngettext@plt+0xad0>
   11a30:	movw	r0, #37233	; 0x9171
   11a34:	mov	r4, #10
   11a38:	mov	r5, #0
   11a3c:	movt	r0, #2
   11a40:	ldrb	r0, [r0]
   11a44:	cmp	r0, #0
   11a48:	movwne	r4, #0
   11a4c:	bne	11abc <dcngettext@plt+0x9a4>
   11a50:	mov	r0, r9
   11a54:	mov	r1, #92	; 0x5c
   11a58:	bl	11010 <strchr@plt>
   11a5c:	cmp	r0, #0
   11a60:	bne	11a8c <dcngettext@plt+0x974>
   11a64:	mov	r0, r9
   11a68:	mov	r1, #10
   11a6c:	bl	11010 <strchr@plt>
   11a70:	cmp	r0, #0
   11a74:	bne	11a8c <dcngettext@plt+0x974>
   11a78:	mov	r0, r9
   11a7c:	mov	r1, #13
   11a80:	bl	11010 <strchr@plt>
   11a84:	cmp	r0, #0
   11a88:	beq	11abc <dcngettext@plt+0x9a4>
   11a8c:	movw	r0, #37220	; 0x9164
   11a90:	movt	r0, #2
   11a94:	ldr	r0, [r0]
   11a98:	ldr	r1, [r0, #20]
   11a9c:	ldr	r2, [r0, #24]
   11aa0:	cmp	r1, r2
   11aa4:	bcs	119a8 <dcngettext@plt+0x890>
   11aa8:	add	r2, r1, #1
   11aac:	str	r2, [r0, #20]
   11ab0:	mov	r0, #92	; 0x5c
   11ab4:	strb	r0, [r1]
   11ab8:	mov	r5, #1
   11abc:	ldr	r0, [sp, #56]	; 0x38
   11ac0:	tst	r0, #1
   11ac4:	beq	11b10 <dcngettext@plt+0x9f8>
   11ac8:	movw	r0, #37220	; 0x9164
   11acc:	movt	r0, #2
   11ad0:	ldr	r1, [r0]
   11ad4:	mov	r6, r0
   11ad8:	movw	r0, #29139	; 0x71d3
   11adc:	movt	r0, #1
   11ae0:	bl	10ea8 <fputs_unlocked@plt>
   11ae4:	ldr	r1, [r6]
   11ae8:	movw	r0, #31990	; 0x7cf6
   11aec:	movt	r0, #1
   11af0:	bl	10ea8 <fputs_unlocked@plt>
   11af4:	mov	r0, r9
   11af8:	mov	r1, r5
   11afc:	bl	12ccc <dcngettext@plt+0x1bb4>
   11b00:	ldr	r1, [r6]
   11b04:	movw	r0, #31993	; 0x7cf9
   11b08:	movt	r0, #1
   11b0c:	bl	10ea8 <fputs_unlocked@plt>
   11b10:	ldrb	r0, [sl]
   11b14:	cmp	r0, #1
   11b18:	bne	11b48 <dcngettext@plt+0xa30>
   11b1c:	mov	r6, #0
   11b20:	ldrb	r2, [r8, r6]
   11b24:	mov	r0, #1
   11b28:	mov	r1, r7
   11b2c:	bl	1104c <__printf_chk@plt>
   11b30:	ldrb	r0, [sl]
   11b34:	add	r6, r6, #1
   11b38:	cmp	r0, #0
   11b3c:	movwne	r0, #16
   11b40:	cmp	r6, r0
   11b44:	bcc	11b20 <dcngettext@plt+0xa08>
   11b48:	ldr	r0, [sp, #56]	; 0x38
   11b4c:	sub	r6, fp, #52	; 0x34
   11b50:	tst	r0, #1
   11b54:	bne	11bbc <dcngettext@plt+0xaa4>
   11b58:	movw	r0, #37220	; 0x9164
   11b5c:	movt	r0, #2
   11b60:	ldr	r0, [r0]
   11b64:	ldr	r1, [r0, #20]
   11b68:	ldr	r2, [r0, #24]
   11b6c:	cmp	r1, r2
   11b70:	bcs	11990 <dcngettext@plt+0x878>
   11b74:	add	r2, r1, #1
   11b78:	str	r2, [r0, #20]
   11b7c:	mov	r0, #32
   11b80:	strb	r0, [r1]
   11b84:	movw	r0, #37220	; 0x9164
   11b88:	movt	r0, #2
   11b8c:	ldr	r0, [r0]
   11b90:	ldr	r1, [r0, #20]
   11b94:	ldr	r2, [r0, #24]
   11b98:	cmp	r1, r2
   11b9c:	bcs	1199c <dcngettext@plt+0x884>
   11ba0:	add	r2, r1, #1
   11ba4:	str	r2, [r0, #20]
   11ba8:	ldr	r0, [sp, #24]
   11bac:	strb	r0, [r1]
   11bb0:	mov	r0, r9
   11bb4:	mov	r1, r5
   11bb8:	bl	12ccc <dcngettext@plt+0x1bb4>
   11bbc:	movw	r0, #37220	; 0x9164
   11bc0:	movt	r0, #2
   11bc4:	ldr	r0, [r0]
   11bc8:	ldr	r1, [r0, #20]
   11bcc:	ldr	r2, [r0, #24]
   11bd0:	cmp	r1, r2
   11bd4:	bcs	11984 <dcngettext@plt+0x86c>
   11bd8:	add	r2, r1, #1
   11bdc:	str	r2, [r0, #20]
   11be0:	strb	r4, [r1]
   11be4:	ldr	r4, [sp, #84]	; 0x54
   11be8:	ldr	r3, [sp, #72]	; 0x48
   11bec:	ldr	r2, [sp, #68]	; 0x44
   11bf0:	b	129a0 <dcngettext@plt+0x1888>
   11bf4:	movw	r1, #37241	; 0x9179
   11bf8:	mov	r0, #1
   11bfc:	mov	r2, #5
   11c00:	str	r7, [sp, #64]	; 0x40
   11c04:	movt	r1, #2
   11c08:	strb	r0, [r1]
   11c0c:	movw	r1, #31056	; 0x7950
   11c10:	mov	r0, #0
   11c14:	movt	r1, #1
   11c18:	bl	10f2c <dcgettext@plt>
   11c1c:	str	r0, [sp, #76]	; 0x4c
   11c20:	movw	r0, #37216	; 0x9160
   11c24:	movt	r0, #2
   11c28:	ldr	r7, [r0]
   11c2c:	mov	r0, #0
   11c30:	mov	r1, #0
   11c34:	mov	r4, #0
   11c38:	mov	sl, #0
   11c3c:	mov	r9, #0
   11c40:	str	r7, [sp, #100]	; 0x64
   11c44:	str	r0, [sp, #36]	; 0x24
   11c48:	mov	r0, #0
   11c4c:	str	r1, [fp, #-56]	; 0xffffffc8
   11c50:	str	r1, [fp, #-52]	; 0xffffffcc
   11c54:	str	r0, [fp, #-84]	; 0xffffffac
   11c58:	mov	r0, #0
   11c5c:	str	r0, [sp, #52]	; 0x34
   11c60:	mov	r0, #0
   11c64:	str	r0, [sp, #60]	; 0x3c
   11c68:	mov	r0, #0
   11c6c:	str	r0, [sp, #48]	; 0x30
   11c70:	mov	r0, #0
   11c74:	str	r0, [sp, #40]	; 0x28
   11c78:	mov	r0, #0
   11c7c:	str	r0, [sp, #108]	; 0x6c
   11c80:	mov	r0, #0
   11c84:	str	r0, [sp, #104]	; 0x68
   11c88:	mov	r0, #0
   11c8c:	str	r0, [fp, #-104]	; 0xffffff98
   11c90:	b	11ec0 <dcngettext@plt+0xda8>
   11c94:	bl	1101c <__errno_location@plt>
   11c98:	ldr	r9, [r0]
   11c9c:	mov	r0, #0
   11ca0:	mov	r1, #3
   11ca4:	mov	r2, r4
   11ca8:	mov	r5, #0
   11cac:	bl	15a04 <dcngettext@plt+0x48ec>
   11cb0:	movw	r2, #32319	; 0x7e3f
   11cb4:	mov	r3, r0
   11cb8:	mov	r0, #0
   11cbc:	mov	r1, r9
   11cc0:	movt	r2, #1
   11cc4:	bl	10f98 <error@plt>
   11cc8:	ldr	r3, [sp, #72]	; 0x48
   11ccc:	ldr	r2, [sp, #68]	; 0x44
   11cd0:	movw	r7, #31998	; 0x7cfe
   11cd4:	movt	r7, #1
   11cd8:	b	12998 <dcngettext@plt+0x1880>
   11cdc:	ldr	r0, [sp, #60]	; 0x3c
   11ce0:	ldr	r8, [sp, #96]	; 0x60
   11ce4:	adds	r0, r0, #1
   11ce8:	str	r0, [sp, #60]	; 0x3c
   11cec:	movw	r0, #37228	; 0x916c
   11cf0:	adc	sl, sl, #0
   11cf4:	movt	r0, #2
   11cf8:	ldrb	r0, [r0]
   11cfc:	cmp	r0, #0
   11d00:	bne	11e28 <dcngettext@plt+0xd10>
   11d04:	ldr	r7, [sp, #100]	; 0x64
   11d08:	cmp	r9, #0
   11d0c:	beq	11d3c <dcngettext@plt+0xc24>
   11d10:	movw	r0, #37220	; 0x9164
   11d14:	movt	r0, #2
   11d18:	ldr	r0, [r0]
   11d1c:	ldr	r1, [r0, #20]
   11d20:	ldr	r2, [r0, #24]
   11d24:	cmp	r1, r2
   11d28:	bcs	11ea8 <dcngettext@plt+0xd90>
   11d2c:	add	r2, r1, #1
   11d30:	str	r2, [r0, #20]
   11d34:	mov	r0, #92	; 0x5c
   11d38:	strb	r0, [r1]
   11d3c:	ldr	r0, [sp, #80]	; 0x50
   11d40:	mov	r1, r9
   11d44:	bl	12ccc <dcngettext@plt+0x1bb4>
   11d48:	movw	r1, #31594	; 0x7b6a
   11d4c:	mov	r0, #0
   11d50:	mov	r2, #5
   11d54:	movt	r1, #1
   11d58:	bl	10f2c <dcgettext@plt>
   11d5c:	movw	r1, #33265	; 0x81f1
   11d60:	mov	r2, r0
   11d64:	mov	r0, #1
   11d68:	movt	r1, #1
   11d6c:	bl	1104c <__printf_chk@plt>
   11d70:	ldr	r9, [fp, #-88]	; 0xffffffa8
   11d74:	b	11e30 <dcngettext@plt+0xd18>
   11d78:	cmp	r7, sl
   11d7c:	bne	11da0 <dcngettext@plt+0xc88>
   11d80:	movw	r0, #37230	; 0x916e
   11d84:	movt	r0, #2
   11d88:	ldrb	r0, [r0]
   11d8c:	cmp	r0, #0
   11d90:	beq	11da0 <dcngettext@plt+0xc88>
   11d94:	mov	r0, #1
   11d98:	str	r0, [sp, #36]	; 0x24
   11d9c:	b	11e1c <dcngettext@plt+0xd04>
   11da0:	ldr	r6, [fp, #-96]	; 0xffffffa0
   11da4:	cmp	r6, #0
   11da8:	beq	11dd8 <dcngettext@plt+0xcc0>
   11dac:	movw	r0, #37220	; 0x9164
   11db0:	movt	r0, #2
   11db4:	ldr	r0, [r0]
   11db8:	ldr	r1, [r0, #20]
   11dbc:	ldr	r2, [r0, #24]
   11dc0:	cmp	r1, r2
   11dc4:	bcs	11eb4 <dcngettext@plt+0xd9c>
   11dc8:	add	r2, r1, #1
   11dcc:	str	r2, [r0, #20]
   11dd0:	mov	r0, #92	; 0x5c
   11dd4:	strb	r0, [r1]
   11dd8:	ldr	r0, [sp, #80]	; 0x50
   11ddc:	mov	r1, r6
   11de0:	bl	12ccc <dcngettext@plt+0x1bb4>
   11de4:	cmp	r7, sl
   11de8:	beq	11e40 <dcngettext@plt+0xd28>
   11dec:	movw	r1, #31614	; 0x7b7e
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	10f2c <dcgettext@plt>
   11e00:	movw	r1, #33265	; 0x81f1
   11e04:	mov	r2, r0
   11e08:	mov	r0, #1
   11e0c:	movt	r1, #1
   11e10:	bl	1104c <__printf_chk@plt>
   11e14:	str	r4, [sp, #48]	; 0x30
   11e18:	str	r8, [sp, #40]	; 0x28
   11e1c:	ldr	r8, [sp, #96]	; 0x60
   11e20:	ldr	sl, [fp, #-100]	; 0xffffff9c
   11e24:	sub	r6, fp, #52	; 0x34
   11e28:	ldr	r9, [fp, #-88]	; 0xffffffa8
   11e2c:	ldr	r7, [sp, #100]	; 0x64
   11e30:	ldr	r4, [fp, #-92]	; 0xffffffa4
   11e34:	mov	r0, #1
   11e38:	str	r0, [sp, #52]	; 0x34
   11e3c:	b	125e4 <dcngettext@plt+0x14cc>
   11e40:	movw	r0, #37230	; 0x916e
   11e44:	ldr	r9, [fp, #-88]	; 0xffffffa8
   11e48:	ldr	r4, [fp, #-92]	; 0xffffffa4
   11e4c:	mov	r1, #1
   11e50:	sub	r6, fp, #52	; 0x34
   11e54:	movt	r0, #2
   11e58:	str	r1, [sp, #36]	; 0x24
   11e5c:	ldrb	r0, [r0]
   11e60:	cmp	r0, #0
   11e64:	bne	11e98 <dcngettext@plt+0xd80>
   11e68:	movw	r1, #31621	; 0x7b85
   11e6c:	mov	r0, #0
   11e70:	mov	r2, #5
   11e74:	movt	r1, #1
   11e78:	bl	10f2c <dcgettext@plt>
   11e7c:	movw	r1, #33265	; 0x81f1
   11e80:	mov	r2, r0
   11e84:	mov	r0, #1
   11e88:	str	r0, [sp, #36]	; 0x24
   11e8c:	mov	r0, #1
   11e90:	movt	r1, #1
   11e94:	bl	1104c <__printf_chk@plt>
   11e98:	ldr	r8, [sp, #96]	; 0x60
   11e9c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   11ea0:	ldr	r7, [sp, #100]	; 0x64
   11ea4:	b	11e34 <dcngettext@plt+0xd1c>
   11ea8:	mov	r1, #92	; 0x5c
   11eac:	bl	11094 <__overflow@plt>
   11eb0:	b	11d3c <dcngettext@plt+0xc24>
   11eb4:	mov	r1, #92	; 0x5c
   11eb8:	bl	11094 <__overflow@plt>
   11ebc:	b	11dd8 <dcngettext@plt+0xcc0>
   11ec0:	ldr	r0, [fp, #-84]	; 0xffffffac
   11ec4:	adds	r4, r4, #1
   11ec8:	str	r9, [fp, #-88]	; 0xffffffa8
   11ecc:	str	r4, [fp, #-92]	; 0xffffffa4
   11ed0:	adc	r0, r0, #0
   11ed4:	str	r0, [fp, #-84]	; 0xffffffac
   11ed8:	orrs	r0, r4, r0
   11edc:	beq	129f0 <dcngettext@plt+0x18d8>
   11ee0:	mov	r0, r6
   11ee4:	sub	r1, fp, #56	; 0x38
   11ee8:	mov	r2, #10
   11eec:	mov	r3, r7
   11ef0:	bl	10ec0 <__getdelim@plt>
   11ef4:	cmp	r0, #1
   11ef8:	blt	125f4 <dcngettext@plt+0x14dc>
   11efc:	mov	r5, r0
   11f00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f04:	ldrb	r1, [r0]
   11f08:	cmp	r1, #35	; 0x23
   11f0c:	bne	11f1c <dcngettext@plt+0xe04>
   11f10:	ldr	r9, [fp, #-88]	; 0xffffffa8
   11f14:	ldr	r4, [fp, #-92]	; 0xffffffa4
   11f18:	b	125e4 <dcngettext@plt+0x14cc>
   11f1c:	add	r1, r0, r5
   11f20:	str	sl, [fp, #-100]	; 0xffffff9c
   11f24:	ldrb	r1, [r1, #-1]
   11f28:	sub	r1, r1, #10
   11f2c:	clz	r1, r1
   11f30:	lsr	r8, r1, #5
   11f34:	sub	r1, r5, r8
   11f38:	cmp	r1, #0
   11f3c:	mov	r2, r1
   11f40:	subgt	r2, r2, #1
   11f44:	ldrb	r2, [r0, r2]
   11f48:	sub	r2, r2, #13
   11f4c:	clz	r2, r2
   11f50:	lsr	r9, r2, #5
   11f54:	subs	sl, r1, r9
   11f58:	beq	120a4 <dcngettext@plt+0xf8c>
   11f5c:	mov	r7, #0
   11f60:	strb	r7, [r0, sl]
   11f64:	ldr	r6, [fp, #-52]	; 0xffffffcc
   11f68:	b	11f70 <dcngettext@plt+0xe58>
   11f6c:	add	r7, r7, #1
   11f70:	ldrb	r0, [r6, r7]
   11f74:	cmp	r0, #9
   11f78:	cmpne	r0, #32
   11f7c:	beq	11f6c <dcngettext@plt+0xe54>
   11f80:	cmp	r0, #92	; 0x5c
   11f84:	movw	r1, #29139	; 0x71d3
   11f88:	mov	r2, #3
   11f8c:	movne	r0, #0
   11f90:	addeq	r7, r7, #1
   11f94:	movt	r1, #1
   11f98:	moveq	r0, #1
   11f9c:	add	r4, r6, r7
   11fa0:	str	r0, [sp, #92]	; 0x5c
   11fa4:	mov	r0, r4
   11fa8:	bl	110f4 <strncmp@plt>
   11fac:	cmp	r0, #0
   11fb0:	beq	120bc <dcngettext@plt+0xfa4>
   11fb4:	ldrb	r2, [r4]
   11fb8:	movw	r1, #37236	; 0x9174
   11fbc:	sub	r0, sl, r7
   11fc0:	movt	r1, #2
   11fc4:	ldrb	r1, [r1]
   11fc8:	sub	r2, r2, #92	; 0x5c
   11fcc:	clz	r2, r2
   11fd0:	lsr	r2, r2, #5
   11fd4:	bfi	r2, r1, #1, #1
   11fd8:	bfi	r2, r1, #5, #1
   11fdc:	cmp	r0, r2
   11fe0:	bcc	1253c <dcngettext@plt+0x1424>
   11fe4:	movw	r0, #37240	; 0x9178
   11fe8:	movt	r0, #2
   11fec:	ldrb	r0, [r0]
   11ff0:	cmp	r0, #0
   11ff4:	addne	r7, r7, #32
   11ff8:	ldrb	r1, [r6, r7]
   11ffc:	cmp	r1, #32
   12000:	cmpne	r1, #9
   12004:	bne	1253c <dcngettext@plt+0x1424>
   12008:	mov	r1, #0
   1200c:	cmp	r0, #0
   12010:	mov	r0, r4
   12014:	strb	r1, [r6, r7]
   12018:	beq	1204c <dcngettext@plt+0xf34>
   1201c:	bl	10fec <__ctype_b_loc@plt>
   12020:	ldr	r1, [r0]
   12024:	mov	r0, #0
   12028:	ldrb	r2, [r4, r0]
   1202c:	add	r2, r1, r2, lsl #1
   12030:	ldrb	r2, [r2, #1]
   12034:	tst	r2, #16
   12038:	beq	1253c <dcngettext@plt+0x1424>
   1203c:	add	r0, r0, #1
   12040:	cmp	r0, #32
   12044:	bcc	12028 <dcngettext@plt+0xf10>
   12048:	add	r0, r4, r0
   1204c:	ldrb	r0, [r0]
   12050:	cmp	r0, #0
   12054:	bne	1253c <dcngettext@plt+0x1424>
   12058:	add	r3, r7, #1
   1205c:	sub	r1, sl, r3
   12060:	cmp	r1, #1
   12064:	beq	12304 <dcngettext@plt+0x11ec>
   12068:	ldrb	r1, [r6, r3]
   1206c:	cmp	r1, #32
   12070:	cmpne	r1, #42	; 0x2a
   12074:	bne	12304 <dcngettext@plt+0x11ec>
   12078:	movw	r1, #37112	; 0x90f8
   1207c:	movt	r1, #2
   12080:	ldr	r1, [r1]
   12084:	cmp	r1, #1
   12088:	beq	12328 <dcngettext@plt+0x1210>
   1208c:	movw	r1, #37112	; 0x90f8
   12090:	add	r3, r7, #2
   12094:	mov	r0, #0
   12098:	movt	r1, #2
   1209c:	str	r0, [r1]
   120a0:	b	12328 <dcngettext@plt+0x1210>
   120a4:	ldr	r8, [sp, #96]	; 0x60
   120a8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   120ac:	ldr	r9, [fp, #-88]	; 0xffffffa8
   120b0:	ldr	r7, [sp, #100]	; 0x64
   120b4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   120b8:	b	125e4 <dcngettext@plt+0x14cc>
   120bc:	add	r1, r7, #3
   120c0:	ldrb	r0, [r6, r1]
   120c4:	cmp	r0, #32
   120c8:	addeq	r1, r7, #4
   120cc:	ldrb	r0, [r6, r1]
   120d0:	cmp	r0, #40	; 0x28
   120d4:	bne	1253c <dcngettext@plt+0x1424>
   120d8:	add	r0, r1, #1
   120dc:	subs	r2, sl, r0
   120e0:	beq	1253c <dcngettext@plt+0x1424>
   120e4:	add	r1, r1, r8
   120e8:	add	r0, r6, r0
   120ec:	add	r7, r8, r9
   120f0:	add	r1, r1, r9
   120f4:	str	r0, [sp, #80]	; 0x50
   120f8:	sub	r0, r6, r7
   120fc:	mov	r9, r5
   12100:	add	r3, r1, #2
   12104:	add	ip, r1, #3
   12108:	add	r4, r1, #1
   1210c:	sub	r1, r5, r7
   12110:	ldr	r7, [fp, #-104]	; 0xffffff98
   12114:	add	r1, r6, r1
   12118:	add	r6, r1, #2
   1211c:	add	r1, r1, #1
   12120:	str	r7, [fp, #-104]	; 0xffffff98
   12124:	mov	lr, ip
   12128:	mov	sl, r3
   1212c:	mov	r5, r0
   12130:	mov	r8, r1
   12134:	mov	r2, r6
   12138:	cmp	r9, r3
   1213c:	str	r4, [fp, #-96]	; 0xffffffa0
   12140:	beq	12188 <dcngettext@plt+0x1070>
   12144:	add	r0, r5, r9
   12148:	ldr	r4, [fp, #-96]	; 0xffffffa0
   1214c:	sub	r6, r2, #1
   12150:	sub	r1, r8, #1
   12154:	add	r3, sl, #1
   12158:	add	ip, lr, #1
   1215c:	ldrb	r7, [r0, #-1]
   12160:	sub	r0, r5, #1
   12164:	add	r4, r4, #1
   12168:	cmp	r7, #41	; 0x29
   1216c:	bne	12124 <dcngettext@plt+0x100c>
   12170:	str	lr, [sp, #32]
   12174:	ldr	lr, [fp, #-96]	; 0xffffffa0
   12178:	add	r1, r0, r9
   1217c:	mov	r0, #0
   12180:	str	r2, [sp, #28]
   12184:	b	121ac <dcngettext@plt+0x1094>
   12188:	str	r2, [sp, #28]
   1218c:	ldr	r2, [sp, #80]	; 0x50
   12190:	str	lr, [sp, #32]
   12194:	ldr	lr, [fp, #-96]	; 0xffffffa0
   12198:	mov	r0, #1
   1219c:	ldrb	r1, [r2]
   121a0:	cmp	r1, #41	; 0x29
   121a4:	mov	r1, r2
   121a8:	bne	1253c <dcngettext@plt+0x1424>
   121ac:	ldr	r2, [sp, #92]	; 0x5c
   121b0:	cmp	r2, #0
   121b4:	beq	1224c <dcngettext@plt+0x1134>
   121b8:	ldr	r6, [sp, #80]	; 0x50
   121bc:	cmp	r0, #0
   121c0:	bne	12240 <dcngettext@plt+0x1128>
   121c4:	ldr	r6, [sp, #80]	; 0x50
   121c8:	sub	r2, r9, sl
   121cc:	mov	r3, #0
   121d0:	ldr	r0, [sp, #80]	; 0x50
   121d4:	ldrb	r0, [r0, r3]
   121d8:	cmp	r0, #92	; 0x5c
   121dc:	beq	121ec <dcngettext@plt+0x10d4>
   121e0:	cmp	r0, #0
   121e4:	bne	12230 <dcngettext@plt+0x1118>
   121e8:	b	1253c <dcngettext@plt+0x1424>
   121ec:	ldr	r4, [sp, #32]
   121f0:	sub	r0, r9, r3
   121f4:	cmp	r0, r4
   121f8:	beq	1253c <dcngettext@plt+0x1424>
   121fc:	ldr	r0, [sp, #80]	; 0x50
   12200:	add	r3, r3, #1
   12204:	ldrb	r4, [r0, r3]
   12208:	cmp	r4, #92	; 0x5c
   1220c:	beq	1222c <dcngettext@plt+0x1114>
   12210:	mov	r0, #10
   12214:	cmp	r4, #110	; 0x6e
   12218:	beq	12230 <dcngettext@plt+0x1118>
   1221c:	cmp	r4, #114	; 0x72
   12220:	bne	1253c <dcngettext@plt+0x1424>
   12224:	mov	r0, #13
   12228:	b	12230 <dcngettext@plt+0x1118>
   1222c:	mov	r0, #92	; 0x5c
   12230:	add	r3, r3, #1
   12234:	strb	r0, [r6], #1
   12238:	cmp	r3, r2
   1223c:	bcc	121d0 <dcngettext@plt+0x10b8>
   12240:	cmp	r6, r1
   12244:	movcc	r0, #0
   12248:	strbcc	r0, [r6]
   1224c:	ldr	sl, [sp, #28]
   12250:	sub	r0, r9, lr
   12254:	mov	r2, #0
   12258:	strb	r2, [r1]
   1225c:	b	12270 <dcngettext@plt+0x1158>
   12260:	add	sl, sl, #1
   12264:	add	r8, r8, #1
   12268:	add	r9, r9, #1
   1226c:	add	r0, r0, #1
   12270:	ldrb	r1, [r5, r9]
   12274:	cmp	r1, #9
   12278:	cmpne	r1, #32
   1227c:	beq	12260 <dcngettext@plt+0x1148>
   12280:	mov	r6, sl
   12284:	cmp	r1, #61	; 0x3d
   12288:	beq	1229c <dcngettext@plt+0x1184>
   1228c:	b	1253c <dcngettext@plt+0x1424>
   12290:	mov	r8, r5
   12294:	add	r6, r6, #1
   12298:	add	r8, r5, #1
   1229c:	ldrb	r4, [r8]
   122a0:	mov	r5, r8
   122a4:	cmp	r4, #32
   122a8:	cmpne	r4, #9
   122ac:	beq	12290 <dcngettext@plt+0x1178>
   122b0:	movw	r0, #37240	; 0x9178
   122b4:	movt	r0, #2
   122b8:	ldrb	r0, [r0]
   122bc:	cmp	r0, #1
   122c0:	bne	122f4 <dcngettext@plt+0x11dc>
   122c4:	bl	10fec <__ctype_b_loc@plt>
   122c8:	ldr	r0, [r0]
   122cc:	mov	r1, #0
   122d0:	uxtb	r2, r4
   122d4:	add	r2, r0, r2, lsl #1
   122d8:	ldrb	r2, [r2, #1]
   122dc:	tst	r2, #16
   122e0:	beq	1253c <dcngettext@plt+0x1424>
   122e4:	ldrb	r4, [r6], #1
   122e8:	add	r1, r1, #1
   122ec:	cmp	r1, #32
   122f0:	bcc	122d0 <dcngettext@plt+0x11b8>
   122f4:	cmp	r4, #0
   122f8:	mov	r4, r5
   122fc:	bne	1253c <dcngettext@plt+0x1424>
   12300:	b	123d4 <dcngettext@plt+0x12bc>
   12304:	movw	r1, #37112	; 0x90f8
   12308:	movt	r1, #2
   1230c:	ldr	r1, [r1]
   12310:	cmp	r1, #0
   12314:	beq	1253c <dcngettext@plt+0x1424>
   12318:	movw	r2, #37112	; 0x90f8
   1231c:	mov	r1, #1
   12320:	movt	r2, #2
   12324:	str	r1, [r2]
   12328:	ldr	r1, [sp, #92]	; 0x5c
   1232c:	add	r0, r6, r3
   12330:	str	r0, [sp, #80]	; 0x50
   12334:	cmp	r1, #0
   12338:	beq	123d4 <dcngettext@plt+0x12bc>
   1233c:	subs	r1, sl, r3
   12340:	mov	r2, r0
   12344:	beq	123bc <dcngettext@plt+0x12a4>
   12348:	sub	lr, r1, #1
   1234c:	mov	r3, #0
   12350:	mov	r2, r0
   12354:	ldrb	r7, [r0, r3]
   12358:	cmp	r7, #92	; 0x5c
   1235c:	beq	1236c <dcngettext@plt+0x1254>
   12360:	cmp	r7, #0
   12364:	bne	123a8 <dcngettext@plt+0x1290>
   12368:	b	1253c <dcngettext@plt+0x1424>
   1236c:	cmp	r3, lr
   12370:	beq	1253c <dcngettext@plt+0x1424>
   12374:	ldr	r0, [sp, #80]	; 0x50
   12378:	add	r3, r3, #1
   1237c:	ldrb	r5, [r0, r3]
   12380:	cmp	r5, #92	; 0x5c
   12384:	beq	123a4 <dcngettext@plt+0x128c>
   12388:	mov	r7, #10
   1238c:	cmp	r5, #110	; 0x6e
   12390:	beq	123a8 <dcngettext@plt+0x1290>
   12394:	cmp	r5, #114	; 0x72
   12398:	bne	1253c <dcngettext@plt+0x1424>
   1239c:	mov	r7, #13
   123a0:	b	123a8 <dcngettext@plt+0x1290>
   123a4:	mov	r7, #92	; 0x5c
   123a8:	ldr	r0, [sp, #80]	; 0x50
   123ac:	add	r3, r3, #1
   123b0:	strb	r7, [r2], #1
   123b4:	cmp	r3, r1
   123b8:	bcc	12354 <dcngettext@plt+0x123c>
   123bc:	add	r1, r6, sl
   123c0:	cmp	r2, r1
   123c4:	movcc	r1, #0
   123c8:	strbcc	r1, [r2]
   123cc:	cmp	r0, #0
   123d0:	beq	1253c <dcngettext@plt+0x1424>
   123d4:	ldr	r0, [sp, #64]	; 0x40
   123d8:	cmp	r0, #0
   123dc:	bne	123f8 <dcngettext@plt+0x12e0>
   123e0:	ldr	r0, [sp, #80]	; 0x50
   123e4:	movw	r1, #32458	; 0x7eca
   123e8:	movt	r1, #1
   123ec:	bl	10ecc <strcmp@plt>
   123f0:	cmp	r0, #0
   123f4:	beq	1253c <dcngettext@plt+0x1424>
   123f8:	movw	r0, #37228	; 0x916c
   123fc:	ldr	r5, [sp, #80]	; 0x50
   12400:	mov	r9, #0
   12404:	movt	r0, #2
   12408:	ldrb	r0, [r0]
   1240c:	cmp	r0, #0
   12410:	bne	1242c <dcngettext@plt+0x1314>
   12414:	mov	r0, r5
   12418:	mov	r1, #10
   1241c:	bl	11010 <strchr@plt>
   12420:	mov	r9, r0
   12424:	cmp	r0, #0
   12428:	movwne	r9, #1
   1242c:	ldr	r1, [sp, #20]
   12430:	mov	r0, r5
   12434:	sub	r2, fp, #57	; 0x39
   12438:	bl	12b60 <dcngettext@plt+0x1a48>
   1243c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   12440:	cmp	r0, #0
   12444:	sub	r6, fp, #52	; 0x34
   12448:	beq	11cdc <dcngettext@plt+0xbc4>
   1244c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12450:	ldr	r8, [sp, #96]	; 0x60
   12454:	cmp	r0, #0
   12458:	movwne	r0, #37231	; 0x916f
   1245c:	movtne	r0, #2
   12460:	ldrbne	r0, [r0]
   12464:	cmpne	r0, #0
   12468:	bne	11e28 <dcngettext@plt+0xd10>
   1246c:	movw	r0, #37240	; 0x9178
   12470:	mov	r8, r4
   12474:	ldr	r4, [sp, #16]
   12478:	str	r9, [fp, #-96]	; 0xffffffa0
   1247c:	movw	r9, #32272	; 0x7e10
   12480:	mov	r7, #0
   12484:	movt	r0, #2
   12488:	movt	r9, #1
   1248c:	ldrb	sl, [r0]
   12490:	cmp	sl, #0
   12494:	movwne	sl, #16
   12498:	beq	124e8 <dcngettext@plt+0x13d0>
   1249c:	bl	10fc8 <__ctype_tolower_loc@plt>
   124a0:	ldr	r0, [r0]
   124a4:	mov	r7, #0
   124a8:	ldrb	r3, [r8, r7, lsl #1]
   124ac:	ldrb	r1, [r4, r7]
   124b0:	ldrb	r2, [r9, r1, lsr #4]
   124b4:	ldr	r3, [r0, r3, lsl #2]
   124b8:	cmp	r3, r2
   124bc:	addeq	r2, r8, r7, lsl #1
   124c0:	andeq	r1, r1, #15
   124c4:	moveq	r6, r8
   124c8:	ldrbeq	r2, [r2, #1]
   124cc:	ldrbeq	r1, [r9, r1]
   124d0:	ldreq	r2, [r0, r2, lsl #2]
   124d4:	cmpeq	r2, r1
   124d8:	bne	124e8 <dcngettext@plt+0x13d0>
   124dc:	add	r7, r7, #1
   124e0:	cmp	r7, sl
   124e4:	bcc	124a8 <dcngettext@plt+0x1390>
   124e8:	movw	r2, #37228	; 0x916c
   124ec:	ldr	r0, [sp, #48]	; 0x30
   124f0:	ldr	r1, [sp, #40]	; 0x28
   124f4:	movt	r2, #2
   124f8:	ldrb	r2, [r2]
   124fc:	adds	r4, r0, #1
   12500:	adc	r8, r1, #0
   12504:	cmp	r7, sl
   12508:	movne	r0, r4
   1250c:	movne	r1, r8
   12510:	cmp	r2, #0
   12514:	beq	11d78 <dcngettext@plt+0xc60>
   12518:	ldr	r3, [sp, #36]	; 0x24
   1251c:	sub	r2, r7, sl
   12520:	str	r0, [sp, #48]	; 0x30
   12524:	str	r1, [sp, #40]	; 0x28
   12528:	clz	r2, r2
   1252c:	lsr	r2, r2, #5
   12530:	orr	r3, r3, r2
   12534:	str	r3, [sp, #36]	; 0x24
   12538:	b	11e1c <dcngettext@plt+0xd04>
   1253c:	ldr	r0, [fp, #-104]	; 0xffffff98
   12540:	ldr	r9, [fp, #-88]	; 0xffffffa8
   12544:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12548:	adds	r0, r0, #1
   1254c:	str	r0, [fp, #-104]	; 0xffffff98
   12550:	movw	r0, #37229	; 0x916d
   12554:	adc	r9, r9, #0
   12558:	movt	r0, #2
   1255c:	ldrb	r0, [r0]
   12560:	cmp	r0, #1
   12564:	bne	125bc <dcngettext@plt+0x14a4>
   12568:	movw	r1, #31546	; 0x7b3a
   1256c:	mov	r0, #0
   12570:	mov	r2, #5
   12574:	movt	r1, #1
   12578:	bl	10f2c <dcgettext@plt>
   1257c:	ldr	r2, [sp, #76]	; 0x4c
   12580:	mov	r6, r0
   12584:	mov	r0, #0
   12588:	mov	r1, #3
   1258c:	bl	15a04 <dcngettext@plt+0x48ec>
   12590:	mov	r3, r0
   12594:	ldr	r0, [fp, #-84]	; 0xffffffac
   12598:	mov	r1, #0
   1259c:	mov	r2, r6
   125a0:	str	r4, [sp]
   125a4:	str	r0, [sp, #4]
   125a8:	movw	r0, #29139	; 0x71d3
   125ac:	movt	r0, #1
   125b0:	str	r0, [sp, #8]
   125b4:	mov	r0, #0
   125b8:	bl	10f98 <error@plt>
   125bc:	ldr	r0, [sp, #108]	; 0x6c
   125c0:	ldr	r8, [sp, #96]	; 0x60
   125c4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   125c8:	ldr	r7, [sp, #100]	; 0x64
   125cc:	sub	r6, fp, #52	; 0x34
   125d0:	adds	r0, r0, #1
   125d4:	str	r0, [sp, #108]	; 0x6c
   125d8:	ldr	r0, [sp, #104]	; 0x68
   125dc:	adc	r0, r0, #0
   125e0:	str	r0, [sp, #104]	; 0x68
   125e4:	ldrb	r0, [r7]
   125e8:	tst	r0, #48	; 0x30
   125ec:	beq	11ec0 <dcngettext@plt+0xda8>
   125f0:	b	125f8 <dcngettext@plt+0x14e0>
   125f4:	ldr	r9, [fp, #-88]	; 0xffffffa8
   125f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   125fc:	mov	r5, sl
   12600:	bl	13fb0 <dcngettext@plt+0x2e98>
   12604:	ldr	r0, [r7]
   12608:	mov	r6, #0
   1260c:	ands	r4, r0, #32
   12610:	ldr	r0, [sp, #64]	; 0x40
   12614:	mvneq	r6, #0
   12618:	cmp	r0, #0
   1261c:	beq	1264c <dcngettext@plt+0x1534>
   12620:	mov	r0, r7
   12624:	bl	13e04 <dcngettext@plt+0x2cec>
   12628:	ldr	sl, [sp, #60]	; 0x3c
   1262c:	cmp	r4, #0
   12630:	bne	12658 <dcngettext@plt+0x1540>
   12634:	cmp	r0, #0
   12638:	mov	r4, r5
   1263c:	beq	1265c <dcngettext@plt+0x1544>
   12640:	bl	1101c <__errno_location@plt>
   12644:	ldr	r6, [r0]
   12648:	b	1265c <dcngettext@plt+0x1544>
   1264c:	mov	r0, r7
   12650:	bl	110c4 <clearerr_unlocked@plt>
   12654:	ldr	sl, [sp, #60]	; 0x3c
   12658:	mov	r4, r5
   1265c:	movw	r7, #31998	; 0x7cfe
   12660:	cmp	r6, #0
   12664:	movt	r7, #1
   12668:	blt	126d0 <dcngettext@plt+0x15b8>
   1266c:	movw	r4, #32319	; 0x7e3f
   12670:	movw	sl, #37240	; 0x9178
   12674:	movt	r4, #1
   12678:	movt	sl, #2
   1267c:	bne	12698 <dcngettext@plt+0x1580>
   12680:	movw	r1, #31624	; 0x7b88
   12684:	mov	r0, #0
   12688:	mov	r2, #5
   1268c:	movt	r1, #1
   12690:	bl	10f2c <dcgettext@plt>
   12694:	mov	r4, r0
   12698:	ldr	r2, [sp, #76]	; 0x4c
   1269c:	mov	r0, #0
   126a0:	mov	r1, #3
   126a4:	mov	r5, #0
   126a8:	bl	15a04 <dcngettext@plt+0x48ec>
   126ac:	mov	r3, r0
   126b0:	mov	r0, #0
   126b4:	mov	r1, r6
   126b8:	mov	r2, r4
   126bc:	bl	10f98 <error@plt>
   126c0:	ldr	r3, [sp, #72]	; 0x48
   126c4:	ldr	r2, [sp, #68]	; 0x44
   126c8:	sub	r6, fp, #52	; 0x34
   126cc:	b	12998 <dcngettext@plt+0x1880>
   126d0:	ldr	r0, [sp, #52]	; 0x34
   126d4:	tst	r0, #1
   126d8:	beq	12944 <dcngettext@plt+0x182c>
   126dc:	movw	r0, #37228	; 0x916c
   126e0:	ldr	r3, [sp, #72]	; 0x48
   126e4:	ldr	r2, [sp, #68]	; 0x44
   126e8:	sub	r6, fp, #52	; 0x34
   126ec:	movt	r0, #2
   126f0:	ldrb	r0, [r0]
   126f4:	cmp	r0, #0
   126f8:	bne	128e0 <dcngettext@plt+0x17c8>
   126fc:	ldr	r1, [fp, #-104]	; 0xffffff98
   12700:	orrs	r0, r1, r9
   12704:	beq	1277c <dcngettext@plt+0x1664>
   12708:	cmp	r9, #0
   1270c:	mov	r3, r1
   12710:	str	r1, [fp, #-104]	; 0xffffff98
   12714:	beq	1273c <dcngettext@plt+0x1624>
   12718:	ldr	r0, [fp, #-104]	; 0xffffff98
   1271c:	movw	r4, #16960	; 0x4240
   12720:	mov	r1, r9
   12724:	mov	r3, #0
   12728:	movt	r4, #15
   1272c:	mov	r2, r4
   12730:	bl	16f68 <dcngettext@plt+0x5e50>
   12734:	add	r3, r2, r4
   12738:	mov	r4, r5
   1273c:	movw	r1, #31686	; 0x7bc6
   12740:	movw	r2, #31729	; 0x7bf1
   12744:	mov	r0, #5
   12748:	str	r0, [sp]
   1274c:	mov	r0, #0
   12750:	movt	r1, #1
   12754:	movt	r2, #1
   12758:	bl	11118 <dcngettext@plt>
   1275c:	mov	r2, r0
   12760:	ldr	r0, [fp, #-104]	; 0xffffff98
   12764:	mov	r1, #0
   12768:	stm	sp, {r0, r9}
   1276c:	mov	r0, #0
   12770:	bl	10f98 <error@plt>
   12774:	ldr	r3, [sp, #72]	; 0x48
   12778:	ldr	r2, [sp, #68]	; 0x44
   1277c:	orrs	r0, sl, r4
   12780:	beq	127f4 <dcngettext@plt+0x16dc>
   12784:	cmp	r4, #0
   12788:	mov	r3, sl
   1278c:	beq	127b4 <dcngettext@plt+0x169c>
   12790:	mov	r1, r4
   12794:	movw	r4, #16960	; 0x4240
   12798:	mov	r0, sl
   1279c:	mov	r3, #0
   127a0:	movt	r4, #15
   127a4:	mov	r2, r4
   127a8:	bl	16f68 <dcngettext@plt+0x5e50>
   127ac:	add	r3, r2, r4
   127b0:	mov	r4, r5
   127b4:	movw	r1, #31774	; 0x7c1e
   127b8:	movw	r2, #31818	; 0x7c4a
   127bc:	mov	r0, #5
   127c0:	str	r0, [sp]
   127c4:	mov	r0, #0
   127c8:	movt	r1, #1
   127cc:	movt	r2, #1
   127d0:	bl	11118 <dcngettext@plt>
   127d4:	mov	r2, r0
   127d8:	mov	r0, #0
   127dc:	mov	r1, #0
   127e0:	str	sl, [sp]
   127e4:	str	r4, [sp, #4]
   127e8:	bl	10f98 <error@plt>
   127ec:	ldr	r3, [sp, #72]	; 0x48
   127f0:	ldr	r2, [sp, #68]	; 0x44
   127f4:	ldr	r1, [sp, #48]	; 0x30
   127f8:	ldr	r9, [sp, #40]	; 0x28
   127fc:	orrs	r0, r1, r9
   12800:	beq	12878 <dcngettext@plt+0x1760>
   12804:	cmp	r9, #0
   12808:	mov	r3, r1
   1280c:	str	r1, [sp, #48]	; 0x30
   12810:	beq	12838 <dcngettext@plt+0x1720>
   12814:	ldr	r0, [sp, #48]	; 0x30
   12818:	movw	r4, #16960	; 0x4240
   1281c:	mov	r1, r9
   12820:	mov	r3, #0
   12824:	movt	r4, #15
   12828:	mov	r2, r4
   1282c:	bl	16f68 <dcngettext@plt+0x5e50>
   12830:	add	r3, r2, r4
   12834:	mov	r4, r5
   12838:	movw	r1, #31863	; 0x7c77
   1283c:	movw	r2, #31909	; 0x7ca5
   12840:	mov	r0, #5
   12844:	str	r0, [sp]
   12848:	mov	r0, #0
   1284c:	movt	r1, #1
   12850:	movt	r2, #1
   12854:	bl	11118 <dcngettext@plt>
   12858:	mov	r2, r0
   1285c:	ldr	r0, [sp, #48]	; 0x30
   12860:	mov	r1, #0
   12864:	stm	sp, {r0, r9}
   12868:	mov	r0, #0
   1286c:	bl	10f98 <error@plt>
   12870:	ldr	r3, [sp, #72]	; 0x48
   12874:	ldr	r2, [sp, #68]	; 0x44
   12878:	movw	r0, #37231	; 0x916f
   1287c:	ldr	r1, [sp, #36]	; 0x24
   12880:	movt	r0, #2
   12884:	ldrb	r0, [r0]
   12888:	mvn	r0, r0
   1288c:	orr	r0, r1, r0
   12890:	tst	r0, #1
   12894:	bne	128e0 <dcngettext@plt+0x17c8>
   12898:	movw	r1, #31956	; 0x7cd4
   1289c:	mov	r0, #0
   128a0:	mov	r2, #5
   128a4:	movt	r1, #1
   128a8:	bl	10f2c <dcgettext@plt>
   128ac:	ldr	r2, [sp, #76]	; 0x4c
   128b0:	mov	r4, r0
   128b4:	mov	r0, #0
   128b8:	mov	r1, #3
   128bc:	bl	15a04 <dcngettext@plt+0x48ec>
   128c0:	mov	r3, r0
   128c4:	mov	r2, r4
   128c8:	mov	r0, #0
   128cc:	mov	r1, #0
   128d0:	mov	r4, r5
   128d4:	bl	10f98 <error@plt>
   128d8:	ldr	r2, [sp, #68]	; 0x44
   128dc:	ldr	r3, [sp, #72]	; 0x48
   128e0:	ldr	r0, [sp, #48]	; 0x30
   128e4:	ldr	r1, [sp, #40]	; 0x28
   128e8:	mov	r5, #0
   128ec:	orr	r0, sl, r0
   128f0:	orr	r1, r4, r1
   128f4:	movw	sl, #37240	; 0x9178
   128f8:	orrs	r0, r0, r1
   128fc:	ldr	r1, [sp, #36]	; 0x24
   12900:	movt	sl, #2
   12904:	movwne	r0, #1
   12908:	mvn	r1, r1
   1290c:	orr	r0, r1, r0
   12910:	tst	r0, #1
   12914:	bne	12998 <dcngettext@plt+0x1880>
   12918:	ldr	r0, [sp, #108]	; 0x6c
   1291c:	ldr	r1, [sp, #104]	; 0x68
   12920:	orr	r0, r0, r1
   12924:	movw	r1, #37232	; 0x9170
   12928:	movt	r1, #2
   1292c:	clz	r0, r0
   12930:	ldrb	r1, [r1]
   12934:	lsr	r0, r0, #5
   12938:	eor	r1, r1, #1
   1293c:	orr	r5, r0, r1
   12940:	b	12998 <dcngettext@plt+0x1880>
   12944:	movw	r1, #31639	; 0x7b97
   12948:	mov	r0, #0
   1294c:	mov	r2, #5
   12950:	mov	r5, #0
   12954:	movt	r1, #1
   12958:	bl	10f2c <dcgettext@plt>
   1295c:	ldr	r2, [sp, #76]	; 0x4c
   12960:	mov	r4, r0
   12964:	mov	r0, #0
   12968:	mov	r1, #3
   1296c:	bl	15a04 <dcngettext@plt+0x48ec>
   12970:	mov	r3, r0
   12974:	mov	r0, #0
   12978:	mov	r1, #0
   1297c:	mov	r2, r4
   12980:	bl	10f98 <error@plt>
   12984:	ldr	r3, [sp, #72]	; 0x48
   12988:	ldr	r2, [sp, #68]	; 0x44
   1298c:	movw	sl, #37240	; 0x9178
   12990:	sub	r6, fp, #52	; 0x34
   12994:	movt	sl, #2
   12998:	ldr	r0, [sp, #84]	; 0x54
   1299c:	and	r4, r0, r5
   129a0:	ldr	r0, [sp, #88]	; 0x58
   129a4:	mov	r1, r4
   129a8:	add	r0, r0, #4
   129ac:	cmp	r0, r2
   129b0:	bcc	119b4 <dcngettext@plt+0x89c>
   129b4:	movw	r0, #37241	; 0x9179
   129b8:	movt	r0, #2
   129bc:	ldrb	r0, [r0]
   129c0:	cmp	r0, #0
   129c4:	beq	129e0 <dcngettext@plt+0x18c8>
   129c8:	movw	r0, #37216	; 0x9160
   129cc:	movt	r0, #2
   129d0:	ldr	r0, [r0]
   129d4:	bl	13e04 <dcngettext@plt+0x2cec>
   129d8:	cmn	r0, #1
   129dc:	beq	12b34 <dcngettext@plt+0x1a1c>
   129e0:	mov	r0, #1
   129e4:	bic	r0, r0, r4
   129e8:	sub	sp, fp, #28
   129ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129f0:	movw	r1, #31518	; 0x7b1e
   129f4:	mov	r0, #0
   129f8:	mov	r2, #5
   129fc:	movt	r1, #1
   12a00:	bl	10f2c <dcgettext@plt>
   12a04:	ldr	r2, [sp, #76]	; 0x4c
   12a08:	mov	r4, r0
   12a0c:	mov	r0, #0
   12a10:	mov	r1, #3
   12a14:	bl	15a04 <dcngettext@plt+0x48ec>
   12a18:	mov	r3, r0
   12a1c:	mov	r0, #1
   12a20:	mov	r1, #0
   12a24:	mov	r2, r4
   12a28:	bl	10f98 <error@plt>
   12a2c:	cmn	r0, #3
   12a30:	bne	12a90 <dcngettext@plt+0x1978>
   12a34:	movw	r0, #37116	; 0x90fc
   12a38:	movw	r2, #30493	; 0x771d
   12a3c:	movw	r7, #30480	; 0x7710
   12a40:	movw	r6, #30465	; 0x7701
   12a44:	mov	r1, #0
   12a48:	movt	r0, #2
   12a4c:	movt	r2, #1
   12a50:	movt	r7, #1
   12a54:	movt	r6, #1
   12a58:	ldr	r3, [r0]
   12a5c:	movw	r0, #37220	; 0x9164
   12a60:	movt	r0, #2
   12a64:	ldr	r0, [r0]
   12a68:	stm	sp, {r6, r7}
   12a6c:	str	r2, [sp, #8]
   12a70:	movw	r2, #30451	; 0x76f3
   12a74:	str	r1, [sp, #12]
   12a78:	movw	r1, #30414	; 0x76ce
   12a7c:	movt	r1, #1
   12a80:	movt	r2, #1
   12a84:	bl	16278 <dcngettext@plt+0x5160>
   12a88:	mov	r0, #0
   12a8c:	bl	10ff8 <exit@plt>
   12a90:	cmn	r0, #2
   12a94:	bne	12aa0 <dcngettext@plt+0x1988>
   12a98:	mov	r0, #0
   12a9c:	bl	11220 <dcngettext@plt+0x108>
   12aa0:	mov	r0, #1
   12aa4:	bl	11220 <dcngettext@plt+0x108>
   12aa8:	movw	r1, #30506	; 0x772a
   12aac:	movt	r1, #1
   12ab0:	b	12b10 <dcngettext@plt+0x19f8>
   12ab4:	movw	r1, #30541	; 0x774d
   12ab8:	movt	r1, #1
   12abc:	b	12b10 <dcngettext@plt+0x19f8>
   12ac0:	movw	r1, #30601	; 0x7789
   12ac4:	movt	r1, #1
   12ac8:	b	12b10 <dcngettext@plt+0x19f8>
   12acc:	movw	r1, #30658	; 0x77c2
   12ad0:	movt	r1, #1
   12ad4:	b	12b10 <dcngettext@plt+0x19f8>
   12ad8:	movw	r1, #30731	; 0x780b
   12adc:	movt	r1, #1
   12ae0:	b	12b10 <dcngettext@plt+0x19f8>
   12ae4:	movw	r1, #30803	; 0x7853
   12ae8:	movt	r1, #1
   12aec:	b	12b10 <dcngettext@plt+0x19f8>
   12af0:	movw	r1, #30867	; 0x7893
   12af4:	movt	r1, #1
   12af8:	b	12b10 <dcngettext@plt+0x19f8>
   12afc:	movw	r1, #30929	; 0x78d1
   12b00:	movt	r1, #1
   12b04:	b	12b10 <dcngettext@plt+0x19f8>
   12b08:	movw	r1, #30992	; 0x7910
   12b0c:	movt	r1, #1
   12b10:	mov	r0, #0
   12b14:	mov	r2, #5
   12b18:	bl	10f2c <dcgettext@plt>
   12b1c:	mov	r2, r0
   12b20:	mov	r0, #0
   12b24:	mov	r1, #0
   12b28:	bl	10f98 <error@plt>
   12b2c:	mov	r0, #1
   12b30:	bl	11220 <dcngettext@plt+0x108>
   12b34:	bl	1101c <__errno_location@plt>
   12b38:	ldr	r4, [r0]
   12b3c:	movw	r1, #31056	; 0x7950
   12b40:	mov	r0, #0
   12b44:	mov	r2, #5
   12b48:	movt	r1, #1
   12b4c:	bl	10f2c <dcgettext@plt>
   12b50:	mov	r2, r0
   12b54:	mov	r0, #1
   12b58:	mov	r1, r4
   12b5c:	bl	10f98 <error@plt>
   12b60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b64:	add	fp, sp, #24
   12b68:	mov	r7, r1
   12b6c:	movw	r1, #32458	; 0x7eca
   12b70:	mov	r6, r2
   12b74:	mov	r8, r0
   12b78:	movt	r1, #1
   12b7c:	bl	10ecc <strcmp@plt>
   12b80:	mov	r5, r0
   12b84:	mov	r0, #0
   12b88:	cmp	r5, #0
   12b8c:	strb	r0, [r6]
   12b90:	beq	12bfc <dcngettext@plt+0x1ae4>
   12b94:	movw	r1, #31985	; 0x7cf1
   12b98:	mov	r0, r8
   12b9c:	movt	r1, #1
   12ba0:	bl	13efc <dcngettext@plt+0x2de4>
   12ba4:	mov	r4, r0
   12ba8:	cmp	r0, #0
   12bac:	bne	12c18 <dcngettext@plt+0x1b00>
   12bb0:	movw	r0, #37231	; 0x916f
   12bb4:	movt	r0, #2
   12bb8:	ldrb	r4, [r0]
   12bbc:	bl	1101c <__errno_location@plt>
   12bc0:	cmp	r4, #1
   12bc4:	ldreq	r1, [r0]
   12bc8:	cmpeq	r1, #2
   12bcc:	beq	12cbc <dcngettext@plt+0x1ba4>
   12bd0:	ldr	r5, [r0]
   12bd4:	mov	r0, #0
   12bd8:	mov	r1, #3
   12bdc:	mov	r2, r8
   12be0:	mov	r4, #0
   12be4:	bl	15a04 <dcngettext@plt+0x48ec>
   12be8:	movw	r2, #32319	; 0x7e3f
   12bec:	mov	r3, r0
   12bf0:	mov	r0, #0
   12bf4:	mov	r1, r5
   12bf8:	b	12cac <dcngettext@plt+0x1b94>
   12bfc:	movw	r0, #37241	; 0x9179
   12c00:	mov	r1, #1
   12c04:	movt	r0, #2
   12c08:	strb	r1, [r0]
   12c0c:	movw	r0, #37216	; 0x9160
   12c10:	movt	r0, #2
   12c14:	ldr	r4, [r0]
   12c18:	mov	r0, r4
   12c1c:	mov	r1, #2
   12c20:	bl	13dc8 <dcngettext@plt+0x2cb0>
   12c24:	mov	r0, r4
   12c28:	mov	r1, r7
   12c2c:	bl	12eb0 <dcngettext@plt+0x1d98>
   12c30:	cmp	r0, #0
   12c34:	beq	12c44 <dcngettext@plt+0x1b2c>
   12c38:	bl	1101c <__errno_location@plt>
   12c3c:	ldr	r6, [r0]
   12c40:	b	12c48 <dcngettext@plt+0x1b30>
   12c44:	mov	r6, #0
   12c48:	mov	r0, r4
   12c4c:	cmp	r5, #0
   12c50:	beq	12c74 <dcngettext@plt+0x1b5c>
   12c54:	bl	13e04 <dcngettext@plt+0x2cec>
   12c58:	cmp	r6, #0
   12c5c:	bne	12c78 <dcngettext@plt+0x1b60>
   12c60:	cmp	r0, #0
   12c64:	beq	12c78 <dcngettext@plt+0x1b60>
   12c68:	bl	1101c <__errno_location@plt>
   12c6c:	ldr	r6, [r0]
   12c70:	b	12c78 <dcngettext@plt+0x1b60>
   12c74:	bl	110c4 <clearerr_unlocked@plt>
   12c78:	cmp	r6, #0
   12c7c:	moveq	r4, #1
   12c80:	moveq	r0, r4
   12c84:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c88:	mov	r0, #0
   12c8c:	mov	r1, #3
   12c90:	mov	r2, r8
   12c94:	mov	r4, #0
   12c98:	bl	15a04 <dcngettext@plt+0x48ec>
   12c9c:	movw	r2, #32319	; 0x7e3f
   12ca0:	mov	r3, r0
   12ca4:	mov	r0, #0
   12ca8:	mov	r1, r6
   12cac:	movt	r2, #1
   12cb0:	bl	10f98 <error@plt>
   12cb4:	mov	r0, r4
   12cb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12cbc:	mov	r4, #1
   12cc0:	mov	r0, r4
   12cc4:	strb	r4, [r6]
   12cc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12cd0:	add	fp, sp, #24
   12cd4:	mov	r4, r0
   12cd8:	cmp	r1, #0
   12cdc:	beq	12d90 <dcngettext@plt+0x1c78>
   12ce0:	movw	r5, #37220	; 0x9164
   12ce4:	movw	r8, #31981	; 0x7ced
   12ce8:	movw	r6, #31984	; 0x7cf0
   12cec:	movw	r7, #31987	; 0x7cf3
   12cf0:	movt	r5, #2
   12cf4:	movt	r8, #1
   12cf8:	movt	r6, #1
   12cfc:	movt	r7, #1
   12d00:	b	12d0c <dcngettext@plt+0x1bf4>
   12d04:	bl	10ea8 <fputs_unlocked@plt>
   12d08:	add	r4, r4, #1
   12d0c:	ldrb	r1, [r4]
   12d10:	cmp	r1, #12
   12d14:	ble	12d34 <dcngettext@plt+0x1c1c>
   12d18:	cmp	r1, #13
   12d1c:	beq	12d48 <dcngettext@plt+0x1c30>
   12d20:	cmp	r1, #92	; 0x5c
   12d24:	bne	12d5c <dcngettext@plt+0x1c44>
   12d28:	ldr	r1, [r5]
   12d2c:	mov	r0, r7
   12d30:	b	12d04 <dcngettext@plt+0x1bec>
   12d34:	cmp	r1, #10
   12d38:	bne	12d54 <dcngettext@plt+0x1c3c>
   12d3c:	ldr	r1, [r5]
   12d40:	mov	r0, r8
   12d44:	b	12d04 <dcngettext@plt+0x1bec>
   12d48:	ldr	r1, [r5]
   12d4c:	mov	r0, r6
   12d50:	b	12d04 <dcngettext@plt+0x1bec>
   12d54:	cmp	r1, #0
   12d58:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d5c:	ldr	r0, [r5]
   12d60:	ldr	r2, [r0, #20]
   12d64:	ldr	r3, [r0, #24]
   12d68:	cmp	r2, r3
   12d6c:	bcs	12d84 <dcngettext@plt+0x1c6c>
   12d70:	add	r3, r2, #1
   12d74:	add	r4, r4, #1
   12d78:	str	r3, [r0, #20]
   12d7c:	strb	r1, [r2]
   12d80:	b	12d0c <dcngettext@plt+0x1bf4>
   12d84:	bl	11094 <__overflow@plt>
   12d88:	add	r4, r4, #1
   12d8c:	b	12d0c <dcngettext@plt+0x1bf4>
   12d90:	movw	r0, #37220	; 0x9164
   12d94:	movt	r0, #2
   12d98:	ldr	r1, [r0]
   12d9c:	mov	r0, r4
   12da0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12da4:	b	10ea8 <fputs_unlocked@plt>
   12da8:	movw	r1, #37244	; 0x917c
   12dac:	movt	r1, #2
   12db0:	str	r0, [r1]
   12db4:	bx	lr
   12db8:	movw	r1, #37248	; 0x9180
   12dbc:	movt	r1, #2
   12dc0:	strb	r0, [r1]
   12dc4:	bx	lr
   12dc8:	push	{r4, r5, r6, sl, fp, lr}
   12dcc:	add	fp, sp, #16
   12dd0:	sub	sp, sp, #8
   12dd4:	movw	r0, #37220	; 0x9164
   12dd8:	movt	r0, #2
   12ddc:	ldr	r0, [r0]
   12de0:	bl	16b28 <dcngettext@plt+0x5a10>
   12de4:	cmp	r0, #0
   12de8:	beq	12e10 <dcngettext@plt+0x1cf8>
   12dec:	movw	r0, #37248	; 0x9180
   12df0:	movt	r0, #2
   12df4:	ldrb	r0, [r0]
   12df8:	cmp	r0, #0
   12dfc:	beq	12e30 <dcngettext@plt+0x1d18>
   12e00:	bl	1101c <__errno_location@plt>
   12e04:	ldr	r0, [r0]
   12e08:	cmp	r0, #32
   12e0c:	bne	12e30 <dcngettext@plt+0x1d18>
   12e10:	movw	r0, #37208	; 0x9158
   12e14:	movt	r0, #2
   12e18:	ldr	r0, [r0]
   12e1c:	bl	16b28 <dcngettext@plt+0x5a10>
   12e20:	cmp	r0, #0
   12e24:	subeq	sp, fp, #16
   12e28:	popeq	{r4, r5, r6, sl, fp, pc}
   12e2c:	b	12ea0 <dcngettext@plt+0x1d88>
   12e30:	movw	r1, #32303	; 0x7e2f
   12e34:	mov	r0, #0
   12e38:	mov	r2, #5
   12e3c:	movt	r1, #1
   12e40:	bl	10f2c <dcgettext@plt>
   12e44:	mov	r4, r0
   12e48:	movw	r0, #37244	; 0x917c
   12e4c:	movt	r0, #2
   12e50:	ldr	r6, [r0]
   12e54:	bl	1101c <__errno_location@plt>
   12e58:	ldr	r5, [r0]
   12e5c:	cmp	r6, #0
   12e60:	bne	12e7c <dcngettext@plt+0x1d64>
   12e64:	movw	r2, #32319	; 0x7e3f
   12e68:	mov	r0, #0
   12e6c:	mov	r1, r5
   12e70:	mov	r3, r4
   12e74:	movt	r2, #1
   12e78:	b	12e9c <dcngettext@plt+0x1d84>
   12e7c:	mov	r0, r6
   12e80:	bl	15928 <dcngettext@plt+0x4810>
   12e84:	movw	r2, #32315	; 0x7e3b
   12e88:	mov	r3, r0
   12e8c:	str	r4, [sp]
   12e90:	mov	r0, #0
   12e94:	mov	r1, r5
   12e98:	movt	r2, #1
   12e9c:	bl	10f98 <error@plt>
   12ea0:	movw	r0, #37120	; 0x9100
   12ea4:	movt	r0, #2
   12ea8:	ldr	r0, [r0]
   12eac:	bl	10efc <_exit@plt>
   12eb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12eb4:	add	fp, sp, #24
   12eb8:	sub	sp, sp, #160	; 0xa0
   12ebc:	mov	r6, r0
   12ec0:	movw	r0, #32840	; 0x8048
   12ec4:	mov	r8, r1
   12ec8:	bl	16aa4 <dcngettext@plt+0x598c>
   12ecc:	cmp	r0, #0
   12ed0:	beq	12f7c <dcngettext@plt+0x1e64>
   12ed4:	add	r4, sp, #4
   12ed8:	mov	r5, r0
   12edc:	mov	r0, r4
   12ee0:	bl	12f90 <dcngettext@plt+0x1e78>
   12ee4:	b	12ef8 <dcngettext@plt+0x1de0>
   12ee8:	mov	r0, r5
   12eec:	mov	r1, #32768	; 0x8000
   12ef0:	mov	r2, r4
   12ef4:	bl	130a8 <dcngettext@plt+0x1f90>
   12ef8:	mov	r7, #0
   12efc:	ldrb	r0, [r6]
   12f00:	tst	r0, #16
   12f04:	bne	12f3c <dcngettext@plt+0x1e24>
   12f08:	add	r0, r5, r7
   12f0c:	rsb	r2, r7, #32768	; 0x8000
   12f10:	mov	r1, #1
   12f14:	mov	r3, r6
   12f18:	bl	110e8 <fread_unlocked@plt>
   12f1c:	add	r7, r0, r7
   12f20:	cmp	r7, #32768	; 0x8000
   12f24:	beq	12ee8 <dcngettext@plt+0x1dd0>
   12f28:	cmp	r0, #0
   12f2c:	bne	12efc <dcngettext@plt+0x1de4>
   12f30:	ldrb	r0, [r6]
   12f34:	tst	r0, #32
   12f38:	bne	12f74 <dcngettext@plt+0x1e5c>
   12f3c:	cmp	r7, #0
   12f40:	beq	12f54 <dcngettext@plt+0x1e3c>
   12f44:	add	r2, sp, #4
   12f48:	mov	r0, r5
   12f4c:	mov	r1, r7
   12f50:	bl	13bf0 <dcngettext@plt+0x2ad8>
   12f54:	add	r0, sp, #4
   12f58:	mov	r1, r8
   12f5c:	bl	12ff8 <dcngettext@plt+0x1ee0>
   12f60:	mov	r0, r5
   12f64:	bl	13fb0 <dcngettext@plt+0x2e98>
   12f68:	mov	r0, #0
   12f6c:	sub	sp, fp, #24
   12f70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f74:	mov	r0, r5
   12f78:	bl	13fb0 <dcngettext@plt+0x2e98>
   12f7c:	mov	r0, #1
   12f80:	sub	sp, fp, #24
   12f84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
   12f90:	add	r2, pc, #40	; 0x28
   12f94:	mov	r1, #0
   12f98:	vld1.64	{d16-d17}, [r2 :128]
   12f9c:	mov	r2, #20
   12fa0:	str	r1, [r0, #16]
   12fa4:	str	r1, [r0, #24]
   12fa8:	vst1.32	{d16-d17}, [r0], r2
   12fac:	str	r1, [r0]
   12fb0:	bx	lr
   12fb4:	nop	{0}
   12fb8:	nop	{0}
   12fbc:	nop	{0}
   12fc0:	strbvs	r2, [r5, -r1, lsl #6]
   12fc4:	svc	0x00cdab89
   12fc8:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12fcc:	eorsne	r5, r2, r6, ror r4
   12fd0:	ldr	r2, [r0]
   12fd4:	str	r2, [r1]
   12fd8:	ldr	r2, [r0, #4]
   12fdc:	str	r2, [r1, #4]
   12fe0:	ldr	r2, [r0, #8]
   12fe4:	str	r2, [r1, #8]
   12fe8:	ldr	r0, [r0, #12]
   12fec:	str	r0, [r1, #12]
   12ff0:	mov	r0, r1
   12ff4:	bx	lr
   12ff8:	push	{r4, r5, r6, r7, fp, lr}
   12ffc:	add	fp, sp, #16
   13000:	mov	r4, r1
   13004:	ldr	r1, [r0, #24]
   13008:	ldr	r2, [r0, #16]
   1300c:	mov	r5, r0
   13010:	mov	r7, #32
   13014:	add	r6, r5, #28
   13018:	add	r0, r2, r1
   1301c:	cmp	r1, #56	; 0x38
   13020:	movwcc	r7, #16
   13024:	str	r0, [r5, #16]
   13028:	cmp	r0, r2
   1302c:	lsl	r3, r0, #3
   13030:	ldrcc	r2, [r5, #20]
   13034:	add	ip, r6, r7, lsl #2
   13038:	addcc	r2, r2, #1
   1303c:	strcc	r2, [r5, #20]
   13040:	mvn	r2, #7
   13044:	add	r2, r2, r7, lsl #2
   13048:	str	r3, [r6, r2]
   1304c:	sub	r2, r2, r1
   13050:	ldr	r3, [r5, #20]
   13054:	lsl	r3, r3, #3
   13058:	orr	r0, r3, r0, lsr #29
   1305c:	str	r0, [ip, #-4]
   13060:	add	r0, r6, r1
   13064:	movw	r1, #32328	; 0x7e48
   13068:	movt	r1, #1
   1306c:	bl	10f08 <memcpy@plt>
   13070:	lsl	r1, r7, #2
   13074:	mov	r0, r6
   13078:	mov	r2, r5
   1307c:	bl	130a8 <dcngettext@plt+0x1f90>
   13080:	ldr	r0, [r5]
   13084:	str	r0, [r4]
   13088:	ldr	r0, [r5, #4]
   1308c:	str	r0, [r4, #4]
   13090:	ldr	r0, [r5, #8]
   13094:	str	r0, [r4, #8]
   13098:	ldr	r0, [r5, #12]
   1309c:	str	r0, [r4, #12]
   130a0:	mov	r0, r4
   130a4:	pop	{r4, r5, r6, r7, fp, pc}
   130a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130ac:	add	fp, sp, #28
   130b0:	sub	sp, sp, #88	; 0x58
   130b4:	ldr	r3, [r2, #16]
   130b8:	adds	r3, r3, r1
   130bc:	bic	r1, r1, #3
   130c0:	str	r3, [r2, #16]
   130c4:	add	lr, r0, r1
   130c8:	ldr	r3, [r2, #20]
   130cc:	adc	r3, r3, #0
   130d0:	cmp	lr, r0
   130d4:	str	r3, [r2, #20]
   130d8:	ldm	r2, {r3, r4, ip}
   130dc:	ldr	r1, [r2, #12]
   130e0:	str	r2, [sp]
   130e4:	bls	13af8 <dcngettext@plt+0x29e0>
   130e8:	mov	sl, r0
   130ec:	str	lr, [sp, #4]
   130f0:	eor	r2, ip, r1
   130f4:	ldr	r0, [sl]
   130f8:	str	r3, [sp, #24]
   130fc:	mov	r6, r4
   13100:	str	r1, [sp, #28]
   13104:	str	ip, [fp, #-40]	; 0xffffffd8
   13108:	ldr	r5, [sl, #8]
   1310c:	ldr	lr, [sl, #12]
   13110:	ldr	r8, [sl, #36]	; 0x24
   13114:	and	r2, r4, r2
   13118:	ldr	r4, [sl, #4]
   1311c:	eor	r7, r6, ip
   13120:	eor	r2, r2, r1
   13124:	add	r2, r3, r2
   13128:	movw	r3, #42104	; 0xa478
   1312c:	add	r2, r2, r0
   13130:	movt	r3, #55146	; 0xd76a
   13134:	str	r5, [fp, #-36]	; 0xffffffdc
   13138:	str	r0, [fp, #-44]	; 0xffffffd4
   1313c:	ldr	r0, [sl, #16]
   13140:	str	lr, [fp, #-52]	; 0xffffffcc
   13144:	str	r8, [fp, #-56]	; 0xffffffc8
   13148:	add	r2, r2, r3
   1314c:	mov	r3, r6
   13150:	str	r4, [fp, #-32]	; 0xffffffe0
   13154:	add	r2, r6, r2, ror #25
   13158:	add	r6, r1, r4
   1315c:	movw	r1, #46934	; 0xb756
   13160:	str	r3, [sp, #20]
   13164:	and	r7, r2, r7
   13168:	movt	r1, #59591	; 0xe8c7
   1316c:	eor	r7, r7, ip
   13170:	str	r0, [sp, #44]	; 0x2c
   13174:	ldr	ip, [sl, #24]
   13178:	add	r7, r6, r7
   1317c:	eor	r6, r2, r3
   13180:	add	r7, r7, r1
   13184:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13188:	add	r7, r2, r7, ror #20
   1318c:	and	r6, r7, r6
   13190:	str	ip, [sp, #48]	; 0x30
   13194:	eor	r6, r6, r3
   13198:	add	r4, r1, r5
   1319c:	movw	r1, #28891	; 0x70db
   131a0:	add	r5, r3, lr
   131a4:	add	r6, r4, r6
   131a8:	movt	r1, #9248	; 0x2420
   131ac:	add	r6, r6, r1
   131b0:	movw	r1, #52974	; 0xceee
   131b4:	add	r4, r7, r6, ror #15
   131b8:	eor	r6, r7, r2
   131bc:	movt	r1, #49597	; 0xc1bd
   131c0:	and	r6, r4, r6
   131c4:	eor	r6, r6, r2
   131c8:	add	r2, r0, r2
   131cc:	ldr	r0, [sl, #20]
   131d0:	add	r6, r5, r6
   131d4:	add	r6, r6, r1
   131d8:	movw	r1, #4015	; 0xfaf
   131dc:	add	r5, r4, r6, ror #10
   131e0:	eor	r6, r4, r7
   131e4:	movt	r1, #62844	; 0xf57c
   131e8:	and	r6, r5, r6
   131ec:	str	r0, [sp, #32]
   131f0:	eor	r6, r6, r7
   131f4:	add	r7, r0, r7
   131f8:	ldr	r0, [sl, #28]
   131fc:	add	r2, r2, r6
   13200:	movw	r6, #38145	; 0x9501
   13204:	add	r2, r2, r1
   13208:	movw	r1, #50730	; 0xc62a
   1320c:	movt	r6, #64838	; 0xfd46
   13210:	add	r3, r5, r2, ror #25
   13214:	eor	r2, r5, r4
   13218:	movt	r1, #18311	; 0x4787
   1321c:	and	r2, r3, r2
   13220:	str	r0, [sp, #16]
   13224:	eor	r2, r2, r4
   13228:	add	r4, ip, r4
   1322c:	add	r2, r7, r2
   13230:	add	r2, r2, r1
   13234:	movw	r1, #17939	; 0x4613
   13238:	add	r7, r3, r2, ror #20
   1323c:	eor	r2, r3, r5
   13240:	movt	r1, #43056	; 0xa830
   13244:	and	r2, r7, r2
   13248:	eor	r2, r2, r5
   1324c:	add	r5, r0, r5
   13250:	ldr	r0, [sl, #32]
   13254:	add	r2, r4, r2
   13258:	add	r2, r2, r1
   1325c:	add	r4, r7, r2, ror #15
   13260:	eor	r2, r7, r3
   13264:	and	r2, r4, r2
   13268:	str	r0, [sp, #40]	; 0x28
   1326c:	eor	r1, r2, r3
   13270:	add	r3, r0, r3
   13274:	ldr	r0, [sl, #40]	; 0x28
   13278:	ldr	r2, [sl, #44]	; 0x2c
   1327c:	add	r1, r5, r1
   13280:	eor	r5, r4, r7
   13284:	add	r1, r1, r6
   13288:	movw	r6, #39128	; 0x98d8
   1328c:	add	r1, r4, r1, ror #10
   13290:	movt	r6, #27008	; 0x6980
   13294:	and	r5, r1, r5
   13298:	str	r2, [fp, #-48]	; 0xffffffd0
   1329c:	str	r0, [sp, #52]	; 0x34
   132a0:	eor	lr, r5, r7
   132a4:	movw	r5, #63407	; 0xf7af
   132a8:	add	r7, r8, r7
   132ac:	add	r3, r3, lr
   132b0:	movt	r5, #35652	; 0x8b44
   132b4:	add	r3, r3, r6
   132b8:	add	lr, r1, r3, ror #25
   132bc:	eor	r3, r1, r4
   132c0:	and	r3, lr, r3
   132c4:	eor	r3, r3, r4
   132c8:	add	r4, r0, r4
   132cc:	add	r3, r7, r3
   132d0:	add	r3, r3, r5
   132d4:	add	r7, lr, r3, ror #20
   132d8:	eor	r3, lr, r1
   132dc:	and	r3, r7, r3
   132e0:	eor	r5, r7, lr
   132e4:	eor	r9, r3, r1
   132e8:	movw	r3, #42063	; 0xa44f
   132ec:	add	r1, r2, r1
   132f0:	add	r4, r4, r9
   132f4:	sub	r4, r4, r3
   132f8:	movw	r3, #55230	; 0xd7be
   132fc:	add	r4, r7, r4, ror #15
   13300:	movt	r3, #35164	; 0x895c
   13304:	and	r5, r4, r5
   13308:	eor	r5, r5, lr
   1330c:	add	r1, r1, r5
   13310:	add	r1, r1, r3
   13314:	ldr	r3, [sl, #48]	; 0x30
   13318:	add	r5, r4, r1, ror #10
   1331c:	eor	r1, r4, r7
   13320:	and	r1, r5, r1
   13324:	eor	r1, r1, r7
   13328:	add	r6, r3, lr
   1332c:	str	r3, [sp, #56]	; 0x38
   13330:	movw	r3, #4386	; 0x1122
   13334:	add	r1, r6, r1
   13338:	movt	r3, #27536	; 0x6b90
   1333c:	add	r1, r1, r3
   13340:	ldr	r3, [sl, #56]	; 0x38
   13344:	add	r6, r5, r1, ror #25
   13348:	eor	r1, r5, r4
   1334c:	and	r1, r6, r1
   13350:	eor	lr, r1, r4
   13354:	ldr	r1, [sl, #52]	; 0x34
   13358:	add	r4, r3, r4
   1335c:	mov	r9, r3
   13360:	str	r3, [sp, #8]
   13364:	movw	r3, #17294	; 0x438e
   13368:	movt	r3, #42617	; 0xa679
   1336c:	add	r7, r1, r7
   13370:	str	r1, [sp, #36]	; 0x24
   13374:	movw	r1, #29075	; 0x7193
   13378:	add	r7, r7, lr
   1337c:	movt	r1, #64920	; 0xfd98
   13380:	add	r7, r7, r1
   13384:	eor	r1, r6, r5
   13388:	add	r7, r6, r7, ror #20
   1338c:	and	r1, r7, r1
   13390:	eor	r1, r1, r5
   13394:	add	r1, r4, r1
   13398:	eor	r4, r7, r6
   1339c:	add	r1, r1, r3
   133a0:	ldr	r3, [sl, #60]	; 0x3c
   133a4:	add	sl, sl, #64	; 0x40
   133a8:	add	r1, r7, r1, ror #15
   133ac:	and	r4, r1, r4
   133b0:	eor	r4, r4, r6
   133b4:	add	r5, r3, r5
   133b8:	mov	lr, r3
   133bc:	str	r3, [sp, #12]
   133c0:	movw	r3, #2081	; 0x821
   133c4:	add	r4, r5, r4
   133c8:	movt	r3, #18868	; 0x49b4
   133cc:	add	r4, r4, r3
   133d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133d4:	add	r4, r1, r4, ror #10
   133d8:	eor	r5, r4, r1
   133dc:	and	r5, r5, r7
   133e0:	add	r7, ip, r7
   133e4:	ldr	ip, [sp, #32]
   133e8:	add	r6, r3, r6
   133ec:	eor	r5, r5, r1
   133f0:	movw	r3, #9570	; 0x2562
   133f4:	add	r5, r6, r5
   133f8:	movt	r3, #63006	; 0xf61e
   133fc:	add	r5, r5, r3
   13400:	movw	r3, #45888	; 0xb340
   13404:	add	r5, r4, r5, ror #27
   13408:	movt	r3, #49216	; 0xc040
   1340c:	eor	r6, r5, r4
   13410:	and	r6, r6, r1
   13414:	add	r1, r2, r1
   13418:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1341c:	eor	r6, r6, r4
   13420:	add	r6, r7, r6
   13424:	add	r6, r6, r3
   13428:	movw	r3, #23121	; 0x5a51
   1342c:	add	r6, r5, r6, ror #23
   13430:	movt	r3, #9822	; 0x265e
   13434:	eor	r7, r6, r5
   13438:	and	r7, r7, r4
   1343c:	add	r4, r2, r4
   13440:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13444:	eor	r7, r7, r5
   13448:	add	r1, r1, r7
   1344c:	add	r1, r1, r3
   13450:	movw	r3, #51114	; 0xc7aa
   13454:	add	r1, r6, r1, ror #18
   13458:	movt	r3, #59830	; 0xe9b6
   1345c:	eor	r7, r1, r6
   13460:	and	r7, r7, r5
   13464:	add	r5, ip, r5
   13468:	eor	r7, r7, r6
   1346c:	add	r4, r4, r7
   13470:	add	r4, r4, r3
   13474:	movw	r3, #4189	; 0x105d
   13478:	add	r4, r1, r4, ror #12
   1347c:	movt	r3, #54831	; 0xd62f
   13480:	eor	r7, r4, r1
   13484:	and	r7, r7, r6
   13488:	add	r6, r0, r6
   1348c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13490:	eor	r7, r7, r1
   13494:	add	r5, r5, r7
   13498:	add	r5, r5, r3
   1349c:	movw	r3, #5203	; 0x1453
   134a0:	add	r5, r4, r5, ror #27
   134a4:	movt	r3, #580	; 0x244
   134a8:	eor	r7, r5, r4
   134ac:	and	r7, r7, r1
   134b0:	add	r1, lr, r1
   134b4:	ldr	lr, [sp, #44]	; 0x2c
   134b8:	eor	r7, r7, r4
   134bc:	add	r6, r6, r7
   134c0:	add	r6, r6, r3
   134c4:	movw	r3, #59009	; 0xe681
   134c8:	add	r6, r5, r6, ror #23
   134cc:	movt	r3, #55457	; 0xd8a1
   134d0:	eor	r7, r6, r5
   134d4:	and	r7, r7, r4
   134d8:	add	r4, lr, r4
   134dc:	eor	r7, r7, r5
   134e0:	add	r1, r1, r7
   134e4:	add	r1, r1, r3
   134e8:	movw	r3, #64456	; 0xfbc8
   134ec:	add	r1, r6, r1, ror #18
   134f0:	movt	r3, #59347	; 0xe7d3
   134f4:	eor	r7, r1, r6
   134f8:	and	r7, r7, r5
   134fc:	add	r5, r8, r5
   13500:	ldr	r8, [sp, #36]	; 0x24
   13504:	eor	r7, r7, r6
   13508:	add	r4, r4, r7
   1350c:	add	r4, r4, r3
   13510:	movw	r3, #52710	; 0xcde6
   13514:	add	r4, r1, r4, ror #12
   13518:	movt	r3, #8673	; 0x21e1
   1351c:	eor	r7, r4, r1
   13520:	and	r7, r7, r6
   13524:	add	r6, r9, r6
   13528:	ldr	r9, [sp, #56]	; 0x38
   1352c:	eor	r7, r7, r1
   13530:	add	r5, r5, r7
   13534:	add	r5, r5, r3
   13538:	movw	r3, #2006	; 0x7d6
   1353c:	add	r5, r4, r5, ror #27
   13540:	movt	r3, #49975	; 0xc337
   13544:	eor	r7, r5, r4
   13548:	and	r7, r7, r1
   1354c:	add	r1, r0, r1
   13550:	ldr	r0, [sp, #40]	; 0x28
   13554:	eor	r7, r7, r4
   13558:	add	r6, r6, r7
   1355c:	add	r6, r6, r3
   13560:	movw	r3, #3463	; 0xd87
   13564:	add	r6, r5, r6, ror #23
   13568:	movt	r3, #62677	; 0xf4d5
   1356c:	eor	r7, r6, r5
   13570:	and	r7, r7, r4
   13574:	add	r4, r0, r4
   13578:	eor	r7, r7, r5
   1357c:	add	r1, r1, r7
   13580:	add	r1, r1, r3
   13584:	movw	r3, #5357	; 0x14ed
   13588:	add	r1, r6, r1, ror #18
   1358c:	movt	r3, #17754	; 0x455a
   13590:	eor	r7, r1, r6
   13594:	and	r7, r7, r5
   13598:	add	r5, r8, r5
   1359c:	eor	r7, r7, r6
   135a0:	add	r4, r4, r7
   135a4:	add	r4, r4, r3
   135a8:	movw	r3, #59653	; 0xe905
   135ac:	add	r4, r1, r4, ror #12
   135b0:	movt	r3, #43491	; 0xa9e3
   135b4:	eor	r7, r4, r1
   135b8:	and	r7, r7, r6
   135bc:	add	r6, r2, r6
   135c0:	ldr	r2, [sp, #16]
   135c4:	eor	r7, r7, r1
   135c8:	add	r5, r5, r7
   135cc:	add	r5, r5, r3
   135d0:	movw	r3, #41976	; 0xa3f8
   135d4:	add	r5, r4, r5, ror #27
   135d8:	movt	r3, #64751	; 0xfcef
   135dc:	eor	r7, r5, r4
   135e0:	and	r7, r7, r1
   135e4:	add	r1, r2, r1
   135e8:	eor	r7, r7, r4
   135ec:	add	r6, r6, r7
   135f0:	add	r6, r6, r3
   135f4:	movw	r3, #729	; 0x2d9
   135f8:	add	r6, r5, r6, ror #23
   135fc:	movt	r3, #26479	; 0x676f
   13600:	eor	r7, r6, r5
   13604:	and	r7, r7, r4
   13608:	add	r4, r9, r4
   1360c:	ldr	r9, [fp, #-52]	; 0xffffffcc
   13610:	eor	r7, r7, r5
   13614:	add	r1, r1, r7
   13618:	add	r1, r1, r3
   1361c:	add	r1, r6, r1, ror #18
   13620:	eor	r7, r1, r6
   13624:	and	r3, r7, r5
   13628:	add	r5, ip, r5
   1362c:	ldr	ip, [sp, #8]
   13630:	eor	r3, r3, r6
   13634:	add	r6, r0, r6
   13638:	ldr	r0, [sp, #48]	; 0x30
   1363c:	add	r3, r4, r3
   13640:	movw	r4, #19594	; 0x4c8a
   13644:	movt	r4, #36138	; 0x8d2a
   13648:	add	r3, r3, r4
   1364c:	add	r3, r1, r3, ror #12
   13650:	eor	r4, r7, r3
   13654:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13658:	add	r4, r5, r4
   1365c:	movw	r5, #14658	; 0x3942
   13660:	movt	r5, #65530	; 0xfffa
   13664:	add	r4, r4, r5
   13668:	eor	r5, r3, r1
   1366c:	add	r4, r3, r4, ror #28
   13670:	add	r1, r7, r1
   13674:	ldr	r7, [fp, #-32]	; 0xffffffe0
   13678:	eor	r5, r5, r4
   1367c:	add	r5, r6, r5
   13680:	movw	r6, #63105	; 0xf681
   13684:	movt	r6, #34673	; 0x8771
   13688:	add	r5, r5, r6
   1368c:	eor	r6, r4, r3
   13690:	add	r3, ip, r3
   13694:	add	r5, r4, r5, ror #21
   13698:	eor	r6, r6, r5
   1369c:	add	r1, r1, r6
   136a0:	movw	r6, #24866	; 0x6122
   136a4:	movt	r6, #28061	; 0x6d9d
   136a8:	add	r1, r1, r6
   136ac:	eor	r6, r5, r4
   136b0:	add	r4, r7, r4
   136b4:	ldr	r7, [sp, #52]	; 0x34
   136b8:	add	r1, r5, r1, ror #16
   136bc:	eor	r6, r6, r1
   136c0:	add	r3, r3, r6
   136c4:	movw	r6, #14348	; 0x380c
   136c8:	movt	r6, #64997	; 0xfde5
   136cc:	add	r3, r3, r6
   136d0:	eor	r6, r1, r5
   136d4:	add	r5, lr, r5
   136d8:	ldr	lr, [sp, #12]
   136dc:	add	r3, r1, r3, ror #9
   136e0:	eor	r6, r6, r3
   136e4:	add	r4, r4, r6
   136e8:	movw	r6, #59972	; 0xea44
   136ec:	movt	r6, #42174	; 0xa4be
   136f0:	add	r4, r4, r6
   136f4:	eor	r6, r3, r1
   136f8:	add	r1, r2, r1
   136fc:	add	r4, r3, r4, ror #28
   13700:	eor	r6, r6, r4
   13704:	add	r5, r5, r6
   13708:	movw	r6, #53161	; 0xcfa9
   1370c:	movt	r6, #19422	; 0x4bde
   13710:	add	r5, r5, r6
   13714:	eor	r6, r4, r3
   13718:	add	r3, r7, r3
   1371c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13720:	add	r5, r4, r5, ror #21
   13724:	eor	r6, r6, r5
   13728:	add	r1, r1, r6
   1372c:	movw	r6, #19296	; 0x4b60
   13730:	movt	r6, #63163	; 0xf6bb
   13734:	add	r1, r1, r6
   13738:	eor	r6, r5, r4
   1373c:	add	r4, r8, r4
   13740:	ldr	r8, [fp, #-44]	; 0xffffffd4
   13744:	add	r1, r5, r1, ror #16
   13748:	eor	r6, r6, r1
   1374c:	add	r3, r3, r6
   13750:	movw	r6, #48240	; 0xbc70
   13754:	movt	r6, #48831	; 0xbebf
   13758:	add	r3, r3, r6
   1375c:	eor	r6, r1, r5
   13760:	add	r5, r8, r5
   13764:	add	r3, r1, r3, ror #9
   13768:	eor	r6, r6, r3
   1376c:	add	r4, r4, r6
   13770:	movw	r6, #32454	; 0x7ec6
   13774:	movt	r6, #10395	; 0x289b
   13778:	add	r4, r4, r6
   1377c:	eor	r6, r3, r1
   13780:	add	r1, r9, r1
   13784:	add	r4, r3, r4, ror #28
   13788:	eor	r6, r6, r4
   1378c:	add	r5, r5, r6
   13790:	movw	r6, #10234	; 0x27fa
   13794:	movt	r6, #60065	; 0xeaa1
   13798:	add	r5, r5, r6
   1379c:	eor	r6, r4, r3
   137a0:	add	r3, r0, r3
   137a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   137a8:	add	r5, r4, r5, ror #21
   137ac:	eor	r6, r6, r5
   137b0:	add	r1, r1, r6
   137b4:	movw	r6, #12421	; 0x3085
   137b8:	movt	r6, #54511	; 0xd4ef
   137bc:	add	r1, r1, r6
   137c0:	eor	r6, r5, r4
   137c4:	add	r4, r0, r4
   137c8:	ldr	r0, [sp, #56]	; 0x38
   137cc:	add	r1, r5, r1, ror #16
   137d0:	eor	r6, r6, r1
   137d4:	add	r3, r3, r6
   137d8:	movw	r6, #7429	; 0x1d05
   137dc:	movt	r6, #1160	; 0x488
   137e0:	add	r3, r3, r6
   137e4:	eor	r6, r1, r5
   137e8:	add	r5, r0, r5
   137ec:	add	r3, r1, r3, ror #9
   137f0:	eor	r6, r6, r3
   137f4:	add	r4, r4, r6
   137f8:	movw	r6, #53305	; 0xd039
   137fc:	movt	r6, #55764	; 0xd9d4
   13800:	add	r4, r4, r6
   13804:	eor	r6, r3, r1
   13808:	add	r1, lr, r1
   1380c:	add	r4, r3, r4, ror #28
   13810:	eor	r6, r6, r4
   13814:	add	r5, r5, r6
   13818:	movw	r6, #39397	; 0x99e5
   1381c:	movt	r6, #59099	; 0xe6db
   13820:	add	r5, r5, r6
   13824:	eor	r6, r4, r3
   13828:	add	r3, r7, r3
   1382c:	ldr	r7, [sp, #32]
   13830:	add	r5, r4, r5, ror #21
   13834:	eor	r6, r6, r5
   13838:	add	r2, r2, r5
   1383c:	add	r1, r1, r6
   13840:	movw	r6, #31992	; 0x7cf8
   13844:	movt	r6, #8098	; 0x1fa2
   13848:	add	r1, r1, r6
   1384c:	eor	r6, r5, r4
   13850:	add	r4, r8, r4
   13854:	add	r1, r5, r1, ror #16
   13858:	eor	r6, r6, r1
   1385c:	add	r3, r3, r6
   13860:	movw	r6, #22117	; 0x5665
   13864:	movt	r6, #50348	; 0xc4ac
   13868:	add	r3, r3, r6
   1386c:	mvn	r6, r5
   13870:	movw	r5, #65431	; 0xff97
   13874:	add	r3, r1, r3, ror #9
   13878:	movt	r5, #17194	; 0x432a
   1387c:	orr	r6, r3, r6
   13880:	eor	r6, r6, r1
   13884:	add	r4, r4, r6
   13888:	movw	r6, #8772	; 0x2244
   1388c:	movt	r6, #62505	; 0xf429
   13890:	add	r4, r4, r6
   13894:	mvn	r6, r1
   13898:	add	r1, ip, r1
   1389c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   138a0:	add	r4, r3, r4, ror #26
   138a4:	orr	r6, r4, r6
   138a8:	eor	r6, r6, r3
   138ac:	add	r2, r2, r6
   138b0:	add	r2, r2, r5
   138b4:	mvn	r5, r3
   138b8:	add	r3, r7, r3
   138bc:	add	r2, r4, r2, ror #22
   138c0:	orr	r5, r2, r5
   138c4:	eor	r5, r5, r4
   138c8:	add	r1, r1, r5
   138cc:	movw	r5, #9127	; 0x23a7
   138d0:	movt	r5, #43924	; 0xab94
   138d4:	add	r1, r1, r5
   138d8:	mvn	r5, r4
   138dc:	add	r4, r0, r4
   138e0:	ldr	r0, [sp, #52]	; 0x34
   138e4:	add	r1, r2, r1, ror #17
   138e8:	orr	r5, r1, r5
   138ec:	eor	r5, r5, r2
   138f0:	add	r3, r3, r5
   138f4:	movw	r5, #41017	; 0xa039
   138f8:	movt	r5, #64659	; 0xfc93
   138fc:	add	r3, r3, r5
   13900:	mvn	r5, r2
   13904:	add	r2, r9, r2
   13908:	add	r3, r1, r3, ror #11
   1390c:	orr	r5, r3, r5
   13910:	eor	r5, r5, r1
   13914:	add	r4, r4, r5
   13918:	movw	r5, #22979	; 0x59c3
   1391c:	movt	r5, #25947	; 0x655b
   13920:	add	r4, r4, r5
   13924:	mvn	r5, r1
   13928:	add	r1, r0, r1
   1392c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13930:	add	r4, r3, r4, ror #26
   13934:	orr	r5, r4, r5
   13938:	eor	r5, r5, r3
   1393c:	add	r2, r2, r5
   13940:	movw	r5, #52370	; 0xcc92
   13944:	movt	r5, #36620	; 0x8f0c
   13948:	add	r2, r2, r5
   1394c:	mvn	r5, r3
   13950:	add	r3, r0, r3
   13954:	ldr	r0, [sp, #40]	; 0x28
   13958:	add	r2, r4, r2, ror #22
   1395c:	orr	r5, r2, r5
   13960:	eor	r5, r5, r4
   13964:	add	r1, r1, r5
   13968:	movw	r5, #62589	; 0xf47d
   1396c:	movt	r5, #65519	; 0xffef
   13970:	add	r1, r1, r5
   13974:	mvn	r5, r4
   13978:	add	r4, r0, r4
   1397c:	ldr	r0, [sp, #48]	; 0x30
   13980:	add	r1, r2, r1, ror #17
   13984:	orr	r5, r1, r5
   13988:	eor	r5, r5, r2
   1398c:	add	r3, r3, r5
   13990:	movw	r5, #24017	; 0x5dd1
   13994:	movt	r5, #34180	; 0x8584
   13998:	add	r3, r3, r5
   1399c:	mvn	r5, r2
   139a0:	add	r2, lr, r2
   139a4:	ldr	lr, [sp, #4]
   139a8:	add	r3, r1, r3, ror #11
   139ac:	orr	r5, r3, r5
   139b0:	mvn	r7, r3
   139b4:	eor	r5, r5, r1
   139b8:	add	r4, r4, r5
   139bc:	movw	r5, #32335	; 0x7e4f
   139c0:	cmp	sl, lr
   139c4:	movt	r5, #28584	; 0x6fa8
   139c8:	add	r4, r4, r5
   139cc:	mvn	r5, r1
   139d0:	add	r1, r0, r1
   139d4:	ldr	r0, [sp, #36]	; 0x24
   139d8:	add	r4, r3, r4, ror #26
   139dc:	orr	r5, r4, r5
   139e0:	eor	r5, r5, r3
   139e4:	add	r2, r2, r5
   139e8:	movw	r5, #59104	; 0xe6e0
   139ec:	add	r3, r0, r3
   139f0:	ldr	r0, [sp, #44]	; 0x2c
   139f4:	movt	r5, #65068	; 0xfe2c
   139f8:	add	r2, r2, r5
   139fc:	movw	r5, #17172	; 0x4314
   13a00:	add	r2, r4, r2, ror #22
   13a04:	movt	r5, #41729	; 0xa301
   13a08:	orr	r7, r2, r7
   13a0c:	add	r6, r0, r4
   13a10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13a14:	eor	r7, r7, r4
   13a18:	add	r1, r1, r7
   13a1c:	mvn	r7, r4
   13a20:	movw	r4, #32386	; 0x7e82
   13a24:	add	r1, r1, r5
   13a28:	movw	r5, #4513	; 0x11a1
   13a2c:	movt	r4, #63315	; 0xf753
   13a30:	add	r1, r2, r1, ror #17
   13a34:	movt	r5, #19976	; 0x4e08
   13a38:	orr	r7, r1, r7
   13a3c:	eor	r7, r7, r2
   13a40:	add	r3, r3, r7
   13a44:	mvn	r7, r2
   13a48:	add	r2, r0, r2
   13a4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a50:	add	r3, r3, r5
   13a54:	add	r3, r1, r3, ror #11
   13a58:	orr	r7, r3, r7
   13a5c:	eor	r7, r7, r1
   13a60:	add	r7, r6, r7
   13a64:	mvn	r6, r1
   13a68:	add	r1, r0, r1
   13a6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a70:	add	r7, r7, r4
   13a74:	movw	r4, #62005	; 0xf235
   13a78:	add	r7, r3, r7, ror #26
   13a7c:	movt	r4, #48442	; 0xbd3a
   13a80:	orr	r6, r7, r6
   13a84:	mvn	r5, r7
   13a88:	eor	r6, r6, r3
   13a8c:	add	r2, r2, r6
   13a90:	mvn	r6, r3
   13a94:	add	r3, r0, r3
   13a98:	add	r2, r2, r4
   13a9c:	movw	r4, #53947	; 0xd2bb
   13aa0:	add	r2, r7, r2, ror #22
   13aa4:	movt	r4, #10967	; 0x2ad7
   13aa8:	orr	r6, r2, r6
   13aac:	eor	r6, r6, r7
   13ab0:	add	r1, r1, r6
   13ab4:	add	r1, r1, r4
   13ab8:	ldr	r4, [sp, #20]
   13abc:	add	r1, r2, r1, ror #17
   13ac0:	orr	r5, r1, r5
   13ac4:	add	ip, r1, ip
   13ac8:	eor	r5, r5, r2
   13acc:	add	r6, r1, r4
   13ad0:	movw	r4, #54161	; 0xd391
   13ad4:	add	r3, r3, r5
   13ad8:	ldr	r1, [sp, #28]
   13adc:	movt	r4, #60294	; 0xeb86
   13ae0:	add	r3, r3, r4
   13ae4:	add	r4, r6, r3, ror #11
   13ae8:	ldr	r3, [sp, #24]
   13aec:	add	r1, r2, r1
   13af0:	add	r3, r7, r3
   13af4:	bcc	130f0 <dcngettext@plt+0x1fd8>
   13af8:	ldr	r0, [sp]
   13afc:	stm	r0, {r3, r4, ip}
   13b00:	str	r1, [r0, #12]
   13b04:	sub	sp, fp, #28
   13b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b0c:	nop	{0}
   13b10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b14:	add	fp, sp, #24
   13b18:	sub	sp, sp, #160	; 0xa0
   13b1c:	mov	r8, r2
   13b20:	add	r2, pc, #184	; 0xb8
   13b24:	add	r5, sp, #4
   13b28:	vld1.64	{d16-d17}, [r2 :128]
   13b2c:	mov	r2, #20
   13b30:	mov	r3, r5
   13b34:	vst1.32	{d16-d17}, [r3], r2
   13b38:	mov	r2, #0
   13b3c:	str	r2, [r3]
   13b40:	str	r2, [sp, #20]
   13b44:	str	r2, [sp, #28]
   13b48:	mov	r2, r5
   13b4c:	bl	13bf0 <dcngettext@plt+0x2ad8>
   13b50:	ldr	r1, [sp, #28]
   13b54:	ldr	r2, [sp, #20]
   13b58:	mov	r7, #32
   13b5c:	add	r6, r5, #28
   13b60:	add	r0, r2, r1
   13b64:	cmp	r1, #56	; 0x38
   13b68:	movwcc	r7, #16
   13b6c:	str	r0, [sp, #20]
   13b70:	cmp	r0, r2
   13b74:	lsl	r3, r0, #3
   13b78:	ldrcc	r2, [sp, #24]
   13b7c:	addcc	r2, r2, #1
   13b80:	strcc	r2, [sp, #24]
   13b84:	mvn	r2, #7
   13b88:	add	r2, r2, r7, lsl #2
   13b8c:	str	r3, [r6, r2]
   13b90:	add	r3, r6, r7, lsl #2
   13b94:	sub	r2, r2, r1
   13b98:	ldr	r4, [sp, #24]
   13b9c:	lsl	r4, r4, #3
   13ba0:	orr	r0, r4, r0, lsr #29
   13ba4:	str	r0, [r3, #-4]
   13ba8:	add	r0, r6, r1
   13bac:	movw	r1, #32328	; 0x7e48
   13bb0:	movt	r1, #1
   13bb4:	bl	10f08 <memcpy@plt>
   13bb8:	lsl	r1, r7, #2
   13bbc:	mov	r0, r6
   13bc0:	mov	r2, r5
   13bc4:	bl	130a8 <dcngettext@plt+0x1f90>
   13bc8:	vld1.32	{d16-d17}, [r5]
   13bcc:	mov	r0, r8
   13bd0:	vst1.8	{d16-d17}, [r8]
   13bd4:	sub	sp, fp, #24
   13bd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13bdc:	nop	{0}
   13be0:	strbvs	r2, [r5, -r1, lsl #6]
   13be4:	svc	0x00cdab89
   13be8:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   13bec:	eorsne	r5, r2, r6, ror r4
   13bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bf4:	add	fp, sp, #28
   13bf8:	sub	sp, sp, #20
   13bfc:	ldr	r6, [r2, #24]
   13c00:	mov	r4, r2
   13c04:	mov	r5, r1
   13c08:	mov	r8, r0
   13c0c:	cmp	r6, #0
   13c10:	beq	13c80 <dcngettext@plt+0x2b68>
   13c14:	rsb	r7, r6, #128	; 0x80
   13c18:	add	r9, r4, #28
   13c1c:	mov	r1, r8
   13c20:	cmp	r7, r5
   13c24:	add	r0, r9, r6
   13c28:	movhi	r7, r5
   13c2c:	mov	r2, r7
   13c30:	bl	10f08 <memcpy@plt>
   13c34:	ldr	r0, [r4, #24]
   13c38:	add	r0, r0, r7
   13c3c:	cmp	r0, #65	; 0x41
   13c40:	str	r0, [r4, #24]
   13c44:	bcc	13c78 <dcngettext@plt+0x2b60>
   13c48:	bic	r1, r0, #63	; 0x3f
   13c4c:	mov	r0, r9
   13c50:	mov	r2, r4
   13c54:	bl	130a8 <dcngettext@plt+0x1f90>
   13c58:	ldr	r0, [r4, #24]
   13c5c:	and	r2, r0, #63	; 0x3f
   13c60:	add	r0, r7, r6
   13c64:	bic	r0, r0, #63	; 0x3f
   13c68:	str	r2, [r4, #24]
   13c6c:	add	r1, r9, r0
   13c70:	mov	r0, r9
   13c74:	bl	10f08 <memcpy@plt>
   13c78:	sub	r5, r5, r7
   13c7c:	add	r8, r8, r7
   13c80:	cmp	r5, #64	; 0x40
   13c84:	bcc	13d5c <dcngettext@plt+0x2c44>
   13c88:	tst	r8, #3
   13c8c:	beq	13d40 <dcngettext@plt+0x2c28>
   13c90:	cmp	r5, #65	; 0x41
   13c94:	bcc	13d6c <dcngettext@plt+0x2c54>
   13c98:	sub	r0, r5, #64	; 0x40
   13c9c:	add	r7, r4, #28
   13ca0:	mov	sl, #48	; 0x30
   13ca4:	str	r0, [sp, #12]
   13ca8:	sub	r0, r5, #65	; 0x41
   13cac:	add	r6, r7, #32
   13cb0:	bic	r0, r0, #63	; 0x3f
   13cb4:	str	r0, [sp, #8]
   13cb8:	add	r0, r0, #64	; 0x40
   13cbc:	str	r0, [sp, #4]
   13cc0:	mov	r0, r8
   13cc4:	add	r8, r7, #16
   13cc8:	mov	r9, r0
   13ccc:	str	r0, [sp, #16]
   13cd0:	mov	r1, #64	; 0x40
   13cd4:	add	r2, r0, #48	; 0x30
   13cd8:	vld1.8	{d16-d17}, [r9], r1
   13cdc:	add	r1, r0, #32
   13ce0:	vld1.8	{d18-d19}, [r2]
   13ce4:	add	r0, r0, #16
   13ce8:	mov	r2, r4
   13cec:	vld1.8	{d20-d21}, [r1]
   13cf0:	mov	r1, r7
   13cf4:	vst1.8	{d16-d17}, [r1], sl
   13cf8:	vld1.8	{d16-d17}, [r0]
   13cfc:	vst1.8	{d18-d19}, [r1]
   13d00:	mov	r0, r7
   13d04:	mov	r1, #64	; 0x40
   13d08:	vst1.8	{d20-d21}, [r6]
   13d0c:	vst1.8	{d16-d17}, [r8]
   13d10:	bl	130a8 <dcngettext@plt+0x1f90>
   13d14:	sub	r5, r5, #64	; 0x40
   13d18:	mov	r0, r9
   13d1c:	cmp	r5, #64	; 0x40
   13d20:	bhi	13cd0 <dcngettext@plt+0x2bb8>
   13d24:	ldr	r0, [sp, #12]
   13d28:	ldr	r1, [sp, #8]
   13d2c:	ldr	r8, [sp, #16]
   13d30:	sub	r5, r0, r1
   13d34:	ldr	r0, [sp, #4]
   13d38:	add	r8, r8, r0
   13d3c:	b	13d70 <dcngettext@plt+0x2c58>
   13d40:	bic	r6, r5, #63	; 0x3f
   13d44:	mov	r0, r8
   13d48:	mov	r2, r4
   13d4c:	mov	r1, r6
   13d50:	bl	130a8 <dcngettext@plt+0x1f90>
   13d54:	add	r8, r8, r6
   13d58:	and	r5, r5, #63	; 0x3f
   13d5c:	cmp	r5, #0
   13d60:	bne	13d70 <dcngettext@plt+0x2c58>
   13d64:	sub	sp, fp, #28
   13d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d6c:	mov	r5, #64	; 0x40
   13d70:	ldr	r7, [r4, #24]
   13d74:	add	r6, r4, #28
   13d78:	mov	r1, r8
   13d7c:	mov	r2, r5
   13d80:	add	r0, r6, r7
   13d84:	bl	10f08 <memcpy@plt>
   13d88:	add	r5, r7, r5
   13d8c:	cmp	r5, #64	; 0x40
   13d90:	bcc	13db8 <dcngettext@plt+0x2ca0>
   13d94:	mov	r0, r6
   13d98:	mov	r1, #64	; 0x40
   13d9c:	mov	r2, r4
   13da0:	bl	130a8 <dcngettext@plt+0x1f90>
   13da4:	sub	r5, r5, #64	; 0x40
   13da8:	add	r1, r4, #92	; 0x5c
   13dac:	mov	r0, r6
   13db0:	mov	r2, r5
   13db4:	bl	10f08 <memcpy@plt>
   13db8:	str	r5, [r4, #24]
   13dbc:	sub	sp, fp, #28
   13dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc4:	b	10ed8 <posix_fadvise64@plt>
   13dc8:	cmp	r0, #0
   13dcc:	bxeq	lr
   13dd0:	push	{r4, sl, fp, lr}
   13dd4:	add	fp, sp, #8
   13dd8:	sub	sp, sp, #16
   13ddc:	mov	r4, r1
   13de0:	bl	11058 <fileno@plt>
   13de4:	mov	r1, #0
   13de8:	mov	r2, #0
   13dec:	mov	r3, #0
   13df0:	str	r1, [sp]
   13df4:	stmib	sp, {r1, r4}
   13df8:	bl	10ed8 <posix_fadvise64@plt>
   13dfc:	sub	sp, fp, #8
   13e00:	pop	{r4, sl, fp, pc}
   13e04:	push	{r4, r5, r6, sl, fp, lr}
   13e08:	add	fp, sp, #16
   13e0c:	sub	sp, sp, #8
   13e10:	mov	r4, r0
   13e14:	bl	11058 <fileno@plt>
   13e18:	cmn	r0, #1
   13e1c:	ble	13e90 <dcngettext@plt+0x2d78>
   13e20:	mov	r0, r4
   13e24:	bl	10fbc <__freading@plt>
   13e28:	cmp	r0, #0
   13e2c:	beq	13e58 <dcngettext@plt+0x2d40>
   13e30:	mov	r0, r4
   13e34:	bl	11058 <fileno@plt>
   13e38:	mov	r1, #1
   13e3c:	mov	r2, #0
   13e40:	mov	r3, #0
   13e44:	str	r1, [sp]
   13e48:	bl	10f68 <lseek64@plt>
   13e4c:	and	r0, r0, r1
   13e50:	cmn	r0, #1
   13e54:	beq	13e90 <dcngettext@plt+0x2d78>
   13e58:	mov	r0, r4
   13e5c:	bl	13ea0 <dcngettext@plt+0x2d88>
   13e60:	cmp	r0, #0
   13e64:	beq	13e90 <dcngettext@plt+0x2d78>
   13e68:	bl	1101c <__errno_location@plt>
   13e6c:	ldr	r6, [r0]
   13e70:	mov	r5, r0
   13e74:	mov	r0, r4
   13e78:	bl	11070 <fclose@plt>
   13e7c:	cmp	r6, #0
   13e80:	strne	r6, [r5]
   13e84:	mvnne	r0, #0
   13e88:	sub	sp, fp, #16
   13e8c:	pop	{r4, r5, r6, sl, fp, pc}
   13e90:	mov	r0, r4
   13e94:	sub	sp, fp, #16
   13e98:	pop	{r4, r5, r6, sl, fp, lr}
   13e9c:	b	11070 <fclose@plt>
   13ea0:	push	{r4, sl, fp, lr}
   13ea4:	add	fp, sp, #8
   13ea8:	sub	sp, sp, #8
   13eac:	mov	r4, r0
   13eb0:	cmp	r0, #0
   13eb4:	beq	13ed0 <dcngettext@plt+0x2db8>
   13eb8:	mov	r0, r4
   13ebc:	bl	10fbc <__freading@plt>
   13ec0:	cmp	r0, #0
   13ec4:	ldrbne	r0, [r4, #1]
   13ec8:	tstne	r0, #1
   13ecc:	bne	13ee0 <dcngettext@plt+0x2dc8>
   13ed0:	mov	r0, r4
   13ed4:	sub	sp, fp, #8
   13ed8:	pop	{r4, sl, fp, lr}
   13edc:	b	10ee4 <fflush@plt>
   13ee0:	mov	r0, #1
   13ee4:	mov	r2, #0
   13ee8:	mov	r3, #0
   13eec:	str	r0, [sp]
   13ef0:	mov	r0, r4
   13ef4:	bl	13fd8 <dcngettext@plt+0x2ec0>
   13ef8:	b	13ed0 <dcngettext@plt+0x2db8>
   13efc:	push	{r4, r5, r6, r7, fp, lr}
   13f00:	add	fp, sp, #16
   13f04:	mov	r5, r1
   13f08:	bl	110d0 <fopen64@plt>
   13f0c:	mov	r4, #0
   13f10:	cmp	r0, #0
   13f14:	beq	13f64 <dcngettext@plt+0x2e4c>
   13f18:	mov	r6, r0
   13f1c:	bl	11058 <fileno@plt>
   13f20:	cmp	r0, #2
   13f24:	movhi	r0, r6
   13f28:	pophi	{r4, r5, r6, r7, fp, pc}
   13f2c:	bl	15de8 <dcngettext@plt+0x4cd0>
   13f30:	cmn	r0, #1
   13f34:	ble	13f90 <dcngettext@plt+0x2e78>
   13f38:	mov	r7, r0
   13f3c:	mov	r0, r6
   13f40:	bl	13e04 <dcngettext@plt+0x2cec>
   13f44:	cmp	r0, #0
   13f48:	bne	13f6c <dcngettext@plt+0x2e54>
   13f4c:	mov	r0, r7
   13f50:	mov	r1, r5
   13f54:	bl	10e90 <fdopen@plt>
   13f58:	mov	r4, r0
   13f5c:	cmp	r0, #0
   13f60:	beq	13f6c <dcngettext@plt+0x2e54>
   13f64:	mov	r0, r4
   13f68:	pop	{r4, r5, r6, r7, fp, pc}
   13f6c:	bl	1101c <__errno_location@plt>
   13f70:	ldr	r5, [r0]
   13f74:	mov	r4, r0
   13f78:	mov	r0, r7
   13f7c:	bl	1110c <close@plt>
   13f80:	str	r5, [r4]
   13f84:	mov	r4, #0
   13f88:	mov	r0, r4
   13f8c:	pop	{r4, r5, r6, r7, fp, pc}
   13f90:	bl	1101c <__errno_location@plt>
   13f94:	ldr	r7, [r0]
   13f98:	mov	r5, r0
   13f9c:	mov	r0, r6
   13fa0:	bl	13e04 <dcngettext@plt+0x2cec>
   13fa4:	mov	r0, r4
   13fa8:	str	r7, [r5]
   13fac:	pop	{r4, r5, r6, r7, fp, pc}
   13fb0:	push	{r4, r5, r6, sl, fp, lr}
   13fb4:	add	fp, sp, #16
   13fb8:	mov	r4, r0
   13fbc:	bl	1101c <__errno_location@plt>
   13fc0:	ldr	r6, [r0]
   13fc4:	mov	r5, r0
   13fc8:	mov	r0, r4
   13fcc:	bl	10ef0 <free@plt>
   13fd0:	str	r6, [r5]
   13fd4:	pop	{r4, r5, r6, sl, fp, pc}
   13fd8:	push	{r4, r5, r6, r7, fp, lr}
   13fdc:	add	fp, sp, #16
   13fe0:	sub	sp, sp, #8
   13fe4:	mov	r4, r0
   13fe8:	ldr	r0, [r0, #4]
   13fec:	mov	r5, r3
   13ff0:	mov	r6, r2
   13ff4:	ldr	r1, [r4, #8]
   13ff8:	cmp	r1, r0
   13ffc:	bne	14018 <dcngettext@plt+0x2f00>
   14000:	ldrd	r0, [r4, #16]
   14004:	cmp	r1, r0
   14008:	bne	14018 <dcngettext@plt+0x2f00>
   1400c:	ldr	r0, [r4, #36]	; 0x24
   14010:	cmp	r0, #0
   14014:	beq	14030 <dcngettext@plt+0x2f18>
   14018:	mov	r0, r4
   1401c:	mov	r2, r6
   14020:	mov	r3, r5
   14024:	sub	sp, fp, #16
   14028:	pop	{r4, r5, r6, r7, fp, lr}
   1402c:	b	1107c <fseeko64@plt>
   14030:	ldr	r7, [fp, #8]
   14034:	mov	r0, r4
   14038:	bl	11058 <fileno@plt>
   1403c:	mov	r2, r6
   14040:	mov	r3, r5
   14044:	str	r7, [sp]
   14048:	bl	10f68 <lseek64@plt>
   1404c:	and	r2, r0, r1
   14050:	cmn	r2, #1
   14054:	mvneq	r0, #0
   14058:	subeq	sp, fp, #16
   1405c:	popeq	{r4, r5, r6, r7, fp, pc}
   14060:	strd	r0, [r4, #80]	; 0x50
   14064:	ldr	r0, [r4]
   14068:	bic	r0, r0, #16
   1406c:	str	r0, [r4]
   14070:	mov	r0, #0
   14074:	sub	sp, fp, #16
   14078:	pop	{r4, r5, r6, r7, fp, pc}
   1407c:	push	{r4, r5, fp, lr}
   14080:	add	fp, sp, #8
   14084:	cmp	r0, #0
   14088:	beq	1411c <dcngettext@plt+0x3004>
   1408c:	mov	r1, #47	; 0x2f
   14090:	mov	r4, r0
   14094:	bl	110ac <strrchr@plt>
   14098:	cmp	r0, #0
   1409c:	mov	r5, r4
   140a0:	addne	r5, r0, #1
   140a4:	sub	r0, r5, r4
   140a8:	cmp	r0, #7
   140ac:	blt	14100 <dcngettext@plt+0x2fe8>
   140b0:	movw	r1, #32448	; 0x7ec0
   140b4:	sub	r0, r5, #7
   140b8:	mov	r2, #7
   140bc:	movt	r1, #1
   140c0:	bl	110f4 <strncmp@plt>
   140c4:	cmp	r0, #0
   140c8:	bne	14100 <dcngettext@plt+0x2fe8>
   140cc:	movw	r1, #32456	; 0x7ec8
   140d0:	mov	r0, r5
   140d4:	mov	r2, #3
   140d8:	movt	r1, #1
   140dc:	bl	110f4 <strncmp@plt>
   140e0:	cmp	r0, #0
   140e4:	beq	140f0 <dcngettext@plt+0x2fd8>
   140e8:	mov	r4, r5
   140ec:	b	14100 <dcngettext@plt+0x2fe8>
   140f0:	movw	r0, #37192	; 0x9148
   140f4:	add	r4, r5, #3
   140f8:	movt	r0, #2
   140fc:	str	r4, [r0]
   14100:	movw	r0, #37196	; 0x914c
   14104:	movt	r0, #2
   14108:	str	r4, [r0]
   1410c:	movw	r0, #37252	; 0x9184
   14110:	movt	r0, #2
   14114:	str	r4, [r0]
   14118:	pop	{r4, r5, fp, pc}
   1411c:	movw	r0, #37208	; 0x9158
   14120:	mov	r1, #55	; 0x37
   14124:	mov	r2, #1
   14128:	movt	r0, #2
   1412c:	ldr	r3, [r0]
   14130:	movw	r0, #32392	; 0x7e88
   14134:	movt	r0, #1
   14138:	bl	10f5c <fwrite@plt>
   1413c:	bl	11100 <abort@plt>
   14140:	push	{r4, r5, r6, sl, fp, lr}
   14144:	add	fp, sp, #16
   14148:	mov	r4, r0
   1414c:	movw	r0, #37256	; 0x9188
   14150:	movt	r0, #2
   14154:	cmp	r4, #0
   14158:	moveq	r4, r0
   1415c:	bl	1101c <__errno_location@plt>
   14160:	ldr	r6, [r0]
   14164:	mov	r5, r0
   14168:	mov	r0, r4
   1416c:	mov	r1, #48	; 0x30
   14170:	bl	1690c <dcngettext@plt+0x57f4>
   14174:	str	r6, [r5]
   14178:	pop	{r4, r5, r6, sl, fp, pc}
   1417c:	movw	r1, #37256	; 0x9188
   14180:	cmp	r0, #0
   14184:	movt	r1, #2
   14188:	movne	r1, r0
   1418c:	ldr	r0, [r1]
   14190:	bx	lr
   14194:	movw	r2, #37256	; 0x9188
   14198:	cmp	r0, #0
   1419c:	movt	r2, #2
   141a0:	movne	r2, r0
   141a4:	str	r1, [r2]
   141a8:	bx	lr
   141ac:	movw	r3, #37256	; 0x9188
   141b0:	cmp	r0, #0
   141b4:	movt	r3, #2
   141b8:	movne	r3, r0
   141bc:	ubfx	r0, r1, #5, #3
   141c0:	and	r1, r1, #31
   141c4:	add	r0, r3, r0, lsl #2
   141c8:	ldr	r3, [r0, #8]
   141cc:	eor	r2, r2, r3, lsr r1
   141d0:	and	r2, r2, #1
   141d4:	eor	r2, r3, r2, lsl r1
   141d8:	str	r2, [r0, #8]
   141dc:	mov	r0, #1
   141e0:	and	r0, r0, r3, lsr r1
   141e4:	bx	lr
   141e8:	movw	r2, #37256	; 0x9188
   141ec:	cmp	r0, #0
   141f0:	movt	r2, #2
   141f4:	movne	r2, r0
   141f8:	ldr	r0, [r2, #4]
   141fc:	str	r1, [r2, #4]
   14200:	bx	lr
   14204:	movw	r3, #37256	; 0x9188
   14208:	cmp	r0, #0
   1420c:	movt	r3, #2
   14210:	movne	r3, r0
   14214:	cmp	r1, #0
   14218:	mov	r0, #10
   1421c:	cmpne	r2, #0
   14220:	str	r0, [r3]
   14224:	bne	14234 <dcngettext@plt+0x311c>
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	bl	11100 <abort@plt>
   14234:	str	r1, [r3, #40]	; 0x28
   14238:	str	r2, [r3, #44]	; 0x2c
   1423c:	bx	lr
   14240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14244:	add	fp, sp, #28
   14248:	sub	sp, sp, #20
   1424c:	mov	r7, r0
   14250:	ldr	r0, [fp, #8]
   14254:	movw	r5, #37256	; 0x9188
   14258:	mov	r8, r3
   1425c:	mov	r9, r2
   14260:	mov	sl, r1
   14264:	movt	r5, #2
   14268:	cmp	r0, #0
   1426c:	movne	r5, r0
   14270:	bl	1101c <__errno_location@plt>
   14274:	mov	r4, r0
   14278:	ldm	r5, {r0, r1}
   1427c:	ldr	r2, [r5, #40]	; 0x28
   14280:	ldr	r3, [r5, #44]	; 0x2c
   14284:	add	r5, r5, #8
   14288:	ldr	r6, [r4]
   1428c:	stm	sp, {r0, r1, r5}
   14290:	str	r2, [sp, #12]
   14294:	str	r3, [sp, #16]
   14298:	mov	r0, r7
   1429c:	mov	r1, sl
   142a0:	mov	r2, r9
   142a4:	mov	r3, r8
   142a8:	bl	142b8 <dcngettext@plt+0x31a0>
   142ac:	str	r6, [r4]
   142b0:	sub	sp, fp, #28
   142b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142bc:	add	fp, sp, #28
   142c0:	sub	sp, sp, #156	; 0x9c
   142c4:	str	r0, [sp, #80]	; 0x50
   142c8:	ldr	r0, [fp, #12]
   142cc:	mov	r6, r1
   142d0:	mov	r9, r3
   142d4:	str	r2, [fp, #-84]	; 0xffffffac
   142d8:	and	r1, r0, #4
   142dc:	str	r1, [sp, #32]
   142e0:	and	r1, r0, #1
   142e4:	str	r1, [sp, #36]	; 0x24
   142e8:	ubfx	r4, r0, #1, #1
   142ec:	bl	10f74 <__ctype_get_mb_cur_max@plt>
   142f0:	str	r0, [sp, #40]	; 0x28
   142f4:	ldr	r0, [fp, #24]
   142f8:	ldr	r7, [fp, #8]
   142fc:	mov	r1, #0
   14300:	mov	r5, #1
   14304:	str	r1, [fp, #-56]	; 0xffffffc8
   14308:	mov	r1, #0
   1430c:	str	r1, [sp, #60]	; 0x3c
   14310:	str	r0, [sp, #76]	; 0x4c
   14314:	ldr	r0, [fp, #20]
   14318:	str	r0, [sp, #72]	; 0x48
   1431c:	mov	r0, #0
   14320:	str	r0, [sp, #56]	; 0x38
   14324:	mov	r0, #0
   14328:	str	r0, [sp, #92]	; 0x5c
   1432c:	mov	r0, #0
   14330:	str	r0, [fp, #-76]	; 0xffffffb4
   14334:	mov	r0, #0
   14338:	cmp	r7, #10
   1433c:	bhi	152bc <dcngettext@plt+0x41a4>
   14340:	add	r1, pc, #28
   14344:	mov	sl, r6
   14348:	ldr	r6, [sp, #80]	; 0x50
   1434c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14350:	mov	r8, #0
   14354:	mov	r2, #1
   14358:	mov	r3, #0
   1435c:	mov	lr, r9
   14360:	ldr	pc, [r1, r7, lsl #2]
   14364:	andeq	r4, r1, r8, asr #8
   14368:	andeq	r4, r1, r4, ror r4
   1436c:	andeq	r4, r1, r8, lsr r4
   14370:	andeq	r4, r1, r0, lsr r4
   14374:	andeq	r4, r1, r8, ror #8
   14378:			; <UNDEFINED> instruction: 0x000144bc
   1437c:	andeq	r4, r1, r8, asr r4
   14380:	andeq	r4, r1, r8, lsl r5
   14384:	muleq	r1, r0, r3
   14388:	muleq	r1, r0, r3
   1438c:			; <UNDEFINED> instruction: 0x000143b8
   14390:	movw	r0, #32540	; 0x7f1c
   14394:	mov	r1, r7
   14398:	movt	r0, #1
   1439c:	bl	15cc8 <dcngettext@plt+0x4bb0>
   143a0:	str	r0, [sp, #72]	; 0x48
   143a4:	movw	r0, #32542	; 0x7f1e
   143a8:	mov	r1, r7
   143ac:	movt	r0, #1
   143b0:	bl	15cc8 <dcngettext@plt+0x4bb0>
   143b4:	str	r0, [sp, #76]	; 0x4c
   143b8:	str	r5, [fp, #-48]	; 0xffffffd0
   143bc:	mov	r8, #0
   143c0:	mov	r5, r7
   143c4:	tst	r4, #1
   143c8:	bne	14400 <dcngettext@plt+0x32e8>
   143cc:	ldr	r0, [sp, #72]	; 0x48
   143d0:	ldrb	r0, [r0]
   143d4:	cmp	r0, #0
   143d8:	beq	14400 <dcngettext@plt+0x32e8>
   143dc:	ldr	r1, [sp, #72]	; 0x48
   143e0:	mov	r8, #0
   143e4:	add	r1, r1, #1
   143e8:	cmp	r8, sl
   143ec:	strbcc	r0, [r6, r8]
   143f0:	ldrb	r0, [r1, r8]
   143f4:	add	r8, r8, #1
   143f8:	cmp	r0, #0
   143fc:	bne	143e8 <dcngettext@plt+0x32d0>
   14400:	ldr	r7, [sp, #76]	; 0x4c
   14404:	mov	r0, r7
   14408:	bl	11004 <strlen@plt>
   1440c:	str	r7, [sp, #92]	; 0x5c
   14410:	mov	r7, r5
   14414:	ldr	ip, [fp, #-84]	; 0xffffffac
   14418:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1441c:	str	r0, [fp, #-76]	; 0xffffffb4
   14420:	mov	r2, #1
   14424:	mov	r3, r4
   14428:	mov	lr, r9
   1442c:	b	14518 <dcngettext@plt+0x3400>
   14430:	mov	r0, #1
   14434:	b	14474 <dcngettext@plt+0x335c>
   14438:	tst	r4, #1
   1443c:	bne	14474 <dcngettext@plt+0x335c>
   14440:	mov	r2, r0
   14444:	b	1449c <dcngettext@plt+0x3384>
   14448:	mov	r7, #0
   1444c:	mov	r8, #0
   14450:	mov	r2, r0
   14454:	b	14514 <dcngettext@plt+0x33fc>
   14458:	mov	r0, #1
   1445c:	mov	r8, #0
   14460:	mov	r7, #5
   14464:	b	144d0 <dcngettext@plt+0x33b8>
   14468:	mov	r2, #1
   1446c:	tst	r4, #1
   14470:	beq	1449c <dcngettext@plt+0x3384>
   14474:	mov	r1, #1
   14478:	mov	r8, #0
   1447c:	mov	r7, #2
   14480:	mov	r2, r0
   14484:	mov	r3, #1
   14488:	str	r1, [fp, #-76]	; 0xffffffb4
   1448c:	movw	r1, #32542	; 0x7f1e
   14490:	movt	r1, #1
   14494:	str	r1, [sp, #92]	; 0x5c
   14498:	b	14518 <dcngettext@plt+0x3400>
   1449c:	cmp	sl, #0
   144a0:	mov	r8, #1
   144a4:	mov	r7, #2
   144a8:	movne	r0, #39	; 0x27
   144ac:	strbne	r0, [r6]
   144b0:	movw	r0, #32542	; 0x7f1e
   144b4:	movt	r0, #1
   144b8:	b	14508 <dcngettext@plt+0x33f0>
   144bc:	mov	r7, #5
   144c0:	tst	r4, #1
   144c4:	beq	144ec <dcngettext@plt+0x33d4>
   144c8:	mov	r0, #1
   144cc:	mov	r8, #0
   144d0:	str	r0, [fp, #-76]	; 0xffffffb4
   144d4:	movw	r0, #32538	; 0x7f1a
   144d8:	mov	r2, #1
   144dc:	mov	r3, #1
   144e0:	movt	r0, #1
   144e4:	str	r0, [sp, #92]	; 0x5c
   144e8:	b	14518 <dcngettext@plt+0x3400>
   144ec:	cmp	sl, #0
   144f0:	mov	r8, #1
   144f4:	mov	r2, #1
   144f8:	movne	r0, #34	; 0x22
   144fc:	strbne	r0, [r6]
   14500:	movw	r0, #32538	; 0x7f1a
   14504:	movt	r0, #1
   14508:	str	r0, [sp, #92]	; 0x5c
   1450c:	mov	r0, #1
   14510:	str	r0, [fp, #-76]	; 0xffffffb4
   14514:	mov	r3, #0
   14518:	ldr	r0, [fp, #16]
   1451c:	str	r3, [fp, #-72]	; 0xffffffb8
   14520:	str	r7, [fp, #-64]	; 0xffffffc0
   14524:	str	r2, [sp, #84]	; 0x54
   14528:	cmp	r0, #0
   1452c:	movwne	r0, #1
   14530:	and	r0, r0, r3
   14534:	str	r0, [fp, #-88]	; 0xffffffa8
   14538:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1453c:	cmp	r0, #0
   14540:	movwne	r0, #1
   14544:	subs	r4, r7, #2
   14548:	mov	r7, #0
   1454c:	and	r1, r0, r3
   14550:	str	r4, [fp, #-80]	; 0xffffffb0
   14554:	and	r1, r2, r1
   14558:	str	r1, [sp, #48]	; 0x30
   1455c:	clz	r1, r4
   14560:	lsr	r1, r1, #5
   14564:	and	r1, r1, r3
   14568:	eor	r3, r3, #1
   1456c:	str	r1, [sp, #64]	; 0x40
   14570:	mov	r1, r4
   14574:	str	r3, [sp, #88]	; 0x58
   14578:	movwne	r1, #1
   1457c:	orr	r3, r1, r3
   14580:	and	r1, r1, r2
   14584:	and	r0, r0, r1
   14588:	str	r3, [sp, #68]	; 0x44
   1458c:	str	r1, [fp, #-68]	; 0xffffffbc
   14590:	str	r0, [fp, #-60]	; 0xffffffc4
   14594:	eor	r0, r2, #1
   14598:	str	r0, [sp, #52]	; 0x34
   1459c:	cmn	lr, #1
   145a0:	beq	145b0 <dcngettext@plt+0x3498>
   145a4:	cmp	r7, lr
   145a8:	bne	145bc <dcngettext@plt+0x34a4>
   145ac:	b	150e4 <dcngettext@plt+0x3fcc>
   145b0:	ldrb	r0, [ip, r7]
   145b4:	cmp	r0, #0
   145b8:	beq	150ec <dcngettext@plt+0x3fd4>
   145bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   145c0:	mov	r9, #0
   145c4:	str	r5, [fp, #-48]	; 0xffffffd0
   145c8:	cmp	r0, #0
   145cc:	beq	14600 <dcngettext@plt+0x34e8>
   145d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   145d4:	add	r4, r7, r0
   145d8:	cmp	r0, #2
   145dc:	bcc	145f8 <dcngettext@plt+0x34e0>
   145e0:	cmn	lr, #1
   145e4:	bne	145f8 <dcngettext@plt+0x34e0>
   145e8:	mov	r0, ip
   145ec:	bl	11004 <strlen@plt>
   145f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   145f4:	mov	lr, r0
   145f8:	cmp	r4, lr
   145fc:	bls	14608 <dcngettext@plt+0x34f0>
   14600:	mov	r0, #0
   14604:	b	14648 <dcngettext@plt+0x3530>
   14608:	ldr	r1, [sp, #92]	; 0x5c
   1460c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14610:	add	r0, ip, r7
   14614:	mov	r4, lr
   14618:	bl	10f20 <memcmp@plt>
   1461c:	ldr	r2, [sp, #88]	; 0x58
   14620:	cmp	r0, #0
   14624:	mov	r1, r0
   14628:	movwne	r1, #1
   1462c:	orr	r1, r1, r2
   14630:	tst	r1, #1
   14634:	beq	1517c <dcngettext@plt+0x4064>
   14638:	ldr	ip, [fp, #-84]	; 0xffffffac
   1463c:	clz	r0, r0
   14640:	mov	lr, r4
   14644:	lsr	r0, r0, #5
   14648:	str	r0, [fp, #-52]	; 0xffffffcc
   1464c:	ldrb	r5, [ip, r7]
   14650:	cmp	r5, #126	; 0x7e
   14654:	bhi	14a0c <dcngettext@plt+0x38f4>
   14658:	add	r3, pc, #16
   1465c:	mov	r4, #1
   14660:	mov	r2, #110	; 0x6e
   14664:	mov	r0, #97	; 0x61
   14668:	mov	r1, #0
   1466c:	ldr	pc, [r3, r5, lsl #2]
   14670:	andeq	r4, r1, r8, lsl #18
   14674:	andeq	r4, r1, ip, lsl #20
   14678:	andeq	r4, r1, ip, lsl #20
   1467c:	andeq	r4, r1, ip, lsl #20
   14680:	andeq	r4, r1, ip, lsl #20
   14684:	andeq	r4, r1, ip, lsl #20
   14688:	andeq	r4, r1, ip, lsl #20
   1468c:	andeq	r4, r1, r0, asr #21
   14690:	andeq	r4, r1, r8, ror #17
   14694:	andeq	r4, r1, r0, ror #17
   14698:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1469c:	andeq	r4, r1, r4, ror r9
   146a0:	ldrdeq	r4, [r1], -r8
   146a4:	strdeq	r4, [r1], -r0
   146a8:	andeq	r4, r1, ip, lsl #20
   146ac:	andeq	r4, r1, ip, lsl #20
   146b0:	andeq	r4, r1, ip, lsl #20
   146b4:	andeq	r4, r1, ip, lsl #20
   146b8:	andeq	r4, r1, ip, lsl #20
   146bc:	andeq	r4, r1, ip, lsl #20
   146c0:	andeq	r4, r1, ip, lsl #20
   146c4:	andeq	r4, r1, ip, lsl #20
   146c8:	andeq	r4, r1, ip, lsl #20
   146cc:	andeq	r4, r1, ip, lsl #20
   146d0:	andeq	r4, r1, ip, lsl #20
   146d4:	andeq	r4, r1, ip, lsl #20
   146d8:	andeq	r4, r1, ip, lsl #20
   146dc:	andeq	r4, r1, ip, lsl #20
   146e0:	andeq	r4, r1, ip, lsl #20
   146e4:	andeq	r4, r1, ip, lsl #20
   146e8:	andeq	r4, r1, ip, lsl #20
   146ec:	andeq	r4, r1, ip, lsl #20
   146f0:	andeq	r4, r1, r8, ror sl
   146f4:	andeq	r4, r1, ip, ror sl
   146f8:	andeq	r4, r1, ip, ror sl
   146fc:	andeq	r4, r1, r0, lsl #17
   14700:	andeq	r4, r1, ip, ror sl
   14704:	andeq	r4, r1, ip, ror #16
   14708:	andeq	r4, r1, ip, ror sl
   1470c:	andeq	r4, r1, ip, ror r9
   14710:	andeq	r4, r1, ip, ror sl
   14714:	andeq	r4, r1, ip, ror sl
   14718:	andeq	r4, r1, ip, ror sl
   1471c:	andeq	r4, r1, ip, ror #16
   14720:	andeq	r4, r1, ip, ror #16
   14724:	andeq	r4, r1, ip, ror #16
   14728:	andeq	r4, r1, ip, ror #16
   1472c:	andeq	r4, r1, ip, ror #16
   14730:	andeq	r4, r1, ip, ror #16
   14734:	andeq	r4, r1, ip, ror #16
   14738:	andeq	r4, r1, ip, ror #16
   1473c:	andeq	r4, r1, ip, ror #16
   14740:	andeq	r4, r1, ip, ror #16
   14744:	andeq	r4, r1, ip, ror #16
   14748:	andeq	r4, r1, ip, ror #16
   1474c:	andeq	r4, r1, ip, ror #16
   14750:	andeq	r4, r1, ip, ror #16
   14754:	andeq	r4, r1, ip, ror #16
   14758:	andeq	r4, r1, ip, ror #16
   1475c:	andeq	r4, r1, ip, ror sl
   14760:	andeq	r4, r1, ip, ror sl
   14764:	andeq	r4, r1, ip, ror sl
   14768:	andeq	r4, r1, ip, ror sl
   1476c:	andeq	r4, r1, r8, asr #18
   14770:	andeq	r4, r1, ip, lsl #20
   14774:	andeq	r4, r1, ip, ror #16
   14778:	andeq	r4, r1, ip, ror #16
   1477c:	andeq	r4, r1, ip, ror #16
   14780:	andeq	r4, r1, ip, ror #16
   14784:	andeq	r4, r1, ip, ror #16
   14788:	andeq	r4, r1, ip, ror #16
   1478c:	andeq	r4, r1, ip, ror #16
   14790:	andeq	r4, r1, ip, ror #16
   14794:	andeq	r4, r1, ip, ror #16
   14798:	andeq	r4, r1, ip, ror #16
   1479c:	andeq	r4, r1, ip, ror #16
   147a0:	andeq	r4, r1, ip, ror #16
   147a4:	andeq	r4, r1, ip, ror #16
   147a8:	andeq	r4, r1, ip, ror #16
   147ac:	andeq	r4, r1, ip, ror #16
   147b0:	andeq	r4, r1, ip, ror #16
   147b4:	andeq	r4, r1, ip, ror #16
   147b8:	andeq	r4, r1, ip, ror #16
   147bc:	andeq	r4, r1, ip, ror #16
   147c0:	andeq	r4, r1, ip, ror #16
   147c4:	andeq	r4, r1, ip, ror #16
   147c8:	andeq	r4, r1, ip, ror #16
   147cc:	andeq	r4, r1, ip, ror #16
   147d0:	andeq	r4, r1, ip, ror #16
   147d4:	andeq	r4, r1, ip, ror #16
   147d8:	andeq	r4, r1, ip, ror #16
   147dc:	andeq	r4, r1, ip, ror sl
   147e0:			; <UNDEFINED> instruction: 0x000148b4
   147e4:	andeq	r4, r1, ip, ror #16
   147e8:	andeq	r4, r1, ip, ror sl
   147ec:	andeq	r4, r1, ip, ror #16
   147f0:	andeq	r4, r1, ip, ror sl
   147f4:	andeq	r4, r1, ip, ror #16
   147f8:	andeq	r4, r1, ip, ror #16
   147fc:	andeq	r4, r1, ip, ror #16
   14800:	andeq	r4, r1, ip, ror #16
   14804:	andeq	r4, r1, ip, ror #16
   14808:	andeq	r4, r1, ip, ror #16
   1480c:	andeq	r4, r1, ip, ror #16
   14810:	andeq	r4, r1, ip, ror #16
   14814:	andeq	r4, r1, ip, ror #16
   14818:	andeq	r4, r1, ip, ror #16
   1481c:	andeq	r4, r1, ip, ror #16
   14820:	andeq	r4, r1, ip, ror #16
   14824:	andeq	r4, r1, ip, ror #16
   14828:	andeq	r4, r1, ip, ror #16
   1482c:	andeq	r4, r1, ip, ror #16
   14830:	andeq	r4, r1, ip, ror #16
   14834:	andeq	r4, r1, ip, ror #16
   14838:	andeq	r4, r1, ip, ror #16
   1483c:	andeq	r4, r1, ip, ror #16
   14840:	andeq	r4, r1, ip, ror #16
   14844:	andeq	r4, r1, ip, ror #16
   14848:	andeq	r4, r1, ip, ror #16
   1484c:	andeq	r4, r1, ip, ror #16
   14850:	andeq	r4, r1, ip, ror #16
   14854:	andeq	r4, r1, ip, ror #16
   14858:	andeq	r4, r1, ip, ror #16
   1485c:	muleq	r1, r4, r8
   14860:	andeq	r4, r1, ip, ror sl
   14864:	muleq	r1, r4, r8
   14868:	andeq	r4, r1, r0, lsl #17
   1486c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14870:	cmp	r0, #0
   14874:	beq	14ad4 <dcngettext@plt+0x39bc>
   14878:	ldr	r0, [fp, #16]
   1487c:	b	14ad8 <dcngettext@plt+0x39c0>
   14880:	mov	r4, #0
   14884:	cmp	r7, #0
   14888:	beq	14a78 <dcngettext@plt+0x3960>
   1488c:	mov	r9, #0
   14890:	b	1486c <dcngettext@plt+0x3754>
   14894:	mov	r4, #0
   14898:	cmn	lr, #1
   1489c:	beq	14a5c <dcngettext@plt+0x3944>
   148a0:	cmp	r7, #0
   148a4:	bne	1488c <dcngettext@plt+0x3774>
   148a8:	cmp	lr, #1
   148ac:	beq	14a78 <dcngettext@plt+0x3960>
   148b0:	b	1488c <dcngettext@plt+0x3774>
   148b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   148b8:	cmp	r0, #2
   148bc:	bne	14a9c <dcngettext@plt+0x3984>
   148c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   148c4:	tst	r0, #1
   148c8:	bne	15198 <dcngettext@plt+0x4080>
   148cc:	mov	r9, #0
   148d0:	mov	r0, #92	; 0x5c
   148d4:	b	14ab0 <dcngettext@plt+0x3998>
   148d8:	mov	r0, #102	; 0x66
   148dc:	b	14ac0 <dcngettext@plt+0x39a8>
   148e0:	mov	r2, #116	; 0x74
   148e4:	b	148f4 <dcngettext@plt+0x37dc>
   148e8:	mov	r0, #98	; 0x62
   148ec:	b	14ac0 <dcngettext@plt+0x39a8>
   148f0:	mov	r2, #114	; 0x72
   148f4:	ldr	r0, [sp, #68]	; 0x44
   148f8:	tst	r0, #1
   148fc:	mov	r0, r2
   14900:	bne	14ac0 <dcngettext@plt+0x39a8>
   14904:	b	15198 <dcngettext@plt+0x4080>
   14908:	ldr	r0, [sp, #84]	; 0x54
   1490c:	tst	r0, #1
   14910:	beq	14bb0 <dcngettext@plt+0x3a98>
   14914:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14918:	tst	r0, #1
   1491c:	bne	152a8 <dcngettext@plt+0x4190>
   14920:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14924:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14928:	cmp	r0, #2
   1492c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14930:	movwne	r0, #1
   14934:	orr	r0, r0, r2
   14938:	tst	r0, #1
   1493c:	beq	14f80 <dcngettext@plt+0x3e68>
   14940:	mov	r0, r8
   14944:	b	14fb4 <dcngettext@plt+0x3e9c>
   14948:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1494c:	mov	r9, #0
   14950:	mov	r5, #63	; 0x3f
   14954:	cmp	r0, #5
   14958:	beq	14d64 <dcngettext@plt+0x3c4c>
   1495c:	cmp	r0, #2
   14960:	bne	14e08 <dcngettext@plt+0x3cf0>
   14964:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14968:	tst	r0, #1
   1496c:	beq	14e0c <dcngettext@plt+0x3cf4>
   14970:	b	15198 <dcngettext@plt+0x4080>
   14974:	mov	r0, #118	; 0x76
   14978:	b	14ac0 <dcngettext@plt+0x39a8>
   1497c:	mov	r0, #1
   14980:	mov	r5, #39	; 0x27
   14984:	str	r0, [sp, #60]	; 0x3c
   14988:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1498c:	cmp	r0, #2
   14990:	bne	14a04 <dcngettext@plt+0x38ec>
   14994:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14998:	tst	r0, #1
   1499c:	bne	15198 <dcngettext@plt+0x4080>
   149a0:	ldr	r2, [sp, #56]	; 0x38
   149a4:	clz	r1, sl
   149a8:	mov	r9, #0
   149ac:	lsr	r1, r1, #5
   149b0:	cmp	r2, #0
   149b4:	mov	r0, r2
   149b8:	movwne	r0, #1
   149bc:	orrs	r0, r0, r1
   149c0:	moveq	r2, sl
   149c4:	moveq	sl, r0
   149c8:	cmp	r8, sl
   149cc:	str	r2, [sp, #56]	; 0x38
   149d0:	movcc	r0, #39	; 0x27
   149d4:	strbcc	r0, [r6, r8]
   149d8:	add	r0, r8, #1
   149dc:	cmp	r0, sl
   149e0:	movcc	r1, #92	; 0x5c
   149e4:	strbcc	r1, [r6, r0]
   149e8:	add	r0, r8, #2
   149ec:	add	r8, r8, #3
   149f0:	cmp	r0, sl
   149f4:	movcc	r1, #39	; 0x27
   149f8:	strbcc	r1, [r6, r0]
   149fc:	mov	r0, #0
   14a00:	str	r0, [fp, #-56]	; 0xffffffc8
   14a04:	mov	r4, #1
   14a08:	b	1486c <dcngettext@plt+0x3754>
   14a0c:	ldr	r0, [sp, #40]	; 0x28
   14a10:	cmp	r0, #1
   14a14:	bne	14bdc <dcngettext@plt+0x3ac4>
   14a18:	str	lr, [sp, #28]
   14a1c:	bl	10fec <__ctype_b_loc@plt>
   14a20:	ldr	r0, [r0]
   14a24:	ldr	ip, [fp, #-84]	; 0xffffffac
   14a28:	mov	r1, #1
   14a2c:	add	r0, r0, r5, lsl #1
   14a30:	ldrb	r0, [r0, #1]
   14a34:	ubfx	r4, r0, #6, #1
   14a38:	ldr	r0, [sp, #52]	; 0x34
   14a3c:	mov	r2, r1
   14a40:	cmp	r1, #1
   14a44:	orr	r0, r4, r0
   14a48:	bhi	14e14 <dcngettext@plt+0x3cfc>
   14a4c:	tst	r0, #1
   14a50:	beq	14e14 <dcngettext@plt+0x3cfc>
   14a54:	ldr	lr, [sp, #28]
   14a58:	b	1486c <dcngettext@plt+0x3754>
   14a5c:	cmp	r7, #0
   14a60:	ldrbeq	r0, [ip, #1]
   14a64:	cmpeq	r0, #0
   14a68:	beq	14a78 <dcngettext@plt+0x3960>
   14a6c:	mvn	lr, #0
   14a70:	mov	r9, #0
   14a74:	b	1486c <dcngettext@plt+0x3754>
   14a78:	mov	r1, #1
   14a7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14a80:	cmp	r0, #2
   14a84:	bne	14a94 <dcngettext@plt+0x397c>
   14a88:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14a8c:	tst	r0, #1
   14a90:	bne	15198 <dcngettext@plt+0x4080>
   14a94:	mov	r4, r1
   14a98:	b	1486c <dcngettext@plt+0x3754>
   14a9c:	ldr	r1, [sp, #48]	; 0x30
   14aa0:	mov	r9, #0
   14aa4:	mov	r0, #92	; 0x5c
   14aa8:	cmp	r1, #0
   14aac:	beq	14ac0 <dcngettext@plt+0x39a8>
   14ab0:	mov	r4, #0
   14ab4:	cmp	r9, #0
   14ab8:	beq	1504c <dcngettext@plt+0x3f34>
   14abc:	b	15088 <dcngettext@plt+0x3f70>
   14ac0:	ldr	r1, [sp, #84]	; 0x54
   14ac4:	mov	r4, #0
   14ac8:	mov	r9, #0
   14acc:	tst	r1, #1
   14ad0:	bne	14b10 <dcngettext@plt+0x39f8>
   14ad4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14ad8:	cmp	r0, #0
   14adc:	mov	r0, r5
   14ae0:	beq	14b04 <dcngettext@plt+0x39ec>
   14ae4:	ldr	r1, [fp, #16]
   14ae8:	ubfx	r0, r5, #5, #3
   14aec:	mov	r2, #1
   14af0:	ldr	r0, [r1, r0, lsl #2]
   14af4:	and	r1, r5, #31
   14af8:	tst	r0, r2, lsl r1
   14afc:	mov	r0, r5
   14b00:	bne	14b10 <dcngettext@plt+0x39f8>
   14b04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14b08:	cmp	r1, #0
   14b0c:	beq	15044 <dcngettext@plt+0x3f2c>
   14b10:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14b14:	tst	r1, #1
   14b18:	bne	15170 <dcngettext@plt+0x4058>
   14b1c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14b20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14b24:	cmp	r1, #2
   14b28:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14b2c:	movwne	r1, #1
   14b30:	orr	r1, r1, r2
   14b34:	tst	r1, #1
   14b38:	beq	14b44 <dcngettext@plt+0x3a2c>
   14b3c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b40:	b	14b80 <dcngettext@plt+0x3a68>
   14b44:	cmp	r8, sl
   14b48:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b4c:	movcc	r1, #39	; 0x27
   14b50:	strbcc	r1, [r6, r8]
   14b54:	add	r1, r8, #1
   14b58:	cmp	r1, sl
   14b5c:	movcc	r2, #36	; 0x24
   14b60:	strbcc	r2, [r6, r1]
   14b64:	add	r1, r8, #2
   14b68:	add	r8, r8, #3
   14b6c:	cmp	r1, sl
   14b70:	movcc	r2, #39	; 0x27
   14b74:	strbcc	r2, [r6, r1]
   14b78:	mov	r1, #1
   14b7c:	str	r1, [fp, #-56]	; 0xffffffc8
   14b80:	cmp	r8, sl
   14b84:	movcc	r1, #92	; 0x5c
   14b88:	strbcc	r1, [r6, r8]
   14b8c:	add	r8, r8, #1
   14b90:	cmp	r8, sl
   14b94:	and	r5, r5, r4
   14b98:	add	r7, r7, #1
   14b9c:	strbcc	r0, [r6, r8]
   14ba0:	add	r8, r8, #1
   14ba4:	cmn	lr, #1
   14ba8:	bne	145a4 <dcngettext@plt+0x348c>
   14bac:	b	145b0 <dcngettext@plt+0x3498>
   14bb0:	ldr	r0, [sp, #36]	; 0x24
   14bb4:	mov	r4, #0
   14bb8:	mov	r9, #0
   14bbc:	mov	r5, #0
   14bc0:	cmp	r0, #0
   14bc4:	beq	14ad4 <dcngettext@plt+0x39bc>
   14bc8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14bcc:	add	r7, r7, #1
   14bd0:	cmn	lr, #1
   14bd4:	bne	145a4 <dcngettext@plt+0x348c>
   14bd8:	b	145b0 <dcngettext@plt+0x3498>
   14bdc:	mov	r0, #0
   14be0:	cmn	lr, #1
   14be4:	str	r0, [fp, #-36]	; 0xffffffdc
   14be8:	str	r0, [fp, #-40]	; 0xffffffd8
   14bec:	bne	14c00 <dcngettext@plt+0x3ae8>
   14bf0:	mov	r0, ip
   14bf4:	bl	11004 <strlen@plt>
   14bf8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14bfc:	mov	lr, r0
   14c00:	add	r0, ip, r7
   14c04:	mov	r4, #1
   14c08:	mov	r6, #0
   14c0c:	str	lr, [sp, #28]
   14c10:	str	r0, [sp, #24]
   14c14:	sub	r0, fp, #40	; 0x28
   14c18:	mov	r3, r0
   14c1c:	str	r6, [sp, #44]	; 0x2c
   14c20:	add	r6, r6, r7
   14c24:	sub	r0, fp, #44	; 0x2c
   14c28:	add	r1, ip, r6
   14c2c:	sub	r2, lr, r6
   14c30:	bl	16dc4 <dcngettext@plt+0x5cac>
   14c34:	cmp	r0, #0
   14c38:	beq	150d0 <dcngettext@plt+0x3fb8>
   14c3c:	cmn	r0, #1
   14c40:	beq	15090 <dcngettext@plt+0x3f78>
   14c44:	ldr	lr, [sp, #28]
   14c48:	cmn	r0, #2
   14c4c:	beq	15098 <dcngettext@plt+0x3f80>
   14c50:	ldr	r2, [sp, #64]	; 0x40
   14c54:	cmp	r0, #2
   14c58:	mov	r1, #0
   14c5c:	movwcc	r1, #1
   14c60:	eor	r2, r2, #1
   14c64:	orrs	r1, r2, r1
   14c68:	bne	14d28 <dcngettext@plt+0x3c10>
   14c6c:	ldr	r1, [sp, #44]	; 0x2c
   14c70:	ldr	r2, [sp, #24]
   14c74:	add	r1, r2, r1
   14c78:	mov	r2, #1
   14c7c:	ldrb	r3, [r1, r2]
   14c80:	sub	r3, r3, #91	; 0x5b
   14c84:	cmp	r3, #33	; 0x21
   14c88:	bhi	14d1c <dcngettext@plt+0x3c04>
   14c8c:	add	r6, pc, #0
   14c90:	ldr	pc, [r6, r3, lsl #2]
   14c94:	muleq	r1, r0, r1
   14c98:	muleq	r1, r0, r1
   14c9c:	andeq	r4, r1, ip, lsl sp
   14ca0:	muleq	r1, r0, r1
   14ca4:	andeq	r4, r1, ip, lsl sp
   14ca8:	muleq	r1, r0, r1
   14cac:	andeq	r4, r1, ip, lsl sp
   14cb0:	andeq	r4, r1, ip, lsl sp
   14cb4:	andeq	r4, r1, ip, lsl sp
   14cb8:	andeq	r4, r1, ip, lsl sp
   14cbc:	andeq	r4, r1, ip, lsl sp
   14cc0:	andeq	r4, r1, ip, lsl sp
   14cc4:	andeq	r4, r1, ip, lsl sp
   14cc8:	andeq	r4, r1, ip, lsl sp
   14ccc:	andeq	r4, r1, ip, lsl sp
   14cd0:	andeq	r4, r1, ip, lsl sp
   14cd4:	andeq	r4, r1, ip, lsl sp
   14cd8:	andeq	r4, r1, ip, lsl sp
   14cdc:	andeq	r4, r1, ip, lsl sp
   14ce0:	andeq	r4, r1, ip, lsl sp
   14ce4:	andeq	r4, r1, ip, lsl sp
   14ce8:	andeq	r4, r1, ip, lsl sp
   14cec:	andeq	r4, r1, ip, lsl sp
   14cf0:	andeq	r4, r1, ip, lsl sp
   14cf4:	andeq	r4, r1, ip, lsl sp
   14cf8:	andeq	r4, r1, ip, lsl sp
   14cfc:	andeq	r4, r1, ip, lsl sp
   14d00:	andeq	r4, r1, ip, lsl sp
   14d04:	andeq	r4, r1, ip, lsl sp
   14d08:	andeq	r4, r1, ip, lsl sp
   14d0c:	andeq	r4, r1, ip, lsl sp
   14d10:	andeq	r4, r1, ip, lsl sp
   14d14:	andeq	r4, r1, ip, lsl sp
   14d18:	muleq	r1, r0, r1
   14d1c:	add	r2, r2, #1
   14d20:	cmp	r2, r0
   14d24:	bcc	14c7c <dcngettext@plt+0x3b64>
   14d28:	ldr	r6, [sp, #44]	; 0x2c
   14d2c:	add	r6, r0, r6
   14d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d34:	bl	10f50 <iswprint@plt>
   14d38:	cmp	r0, #0
   14d3c:	movwne	r0, #1
   14d40:	and	r4, r4, r0
   14d44:	sub	r0, fp, #40	; 0x28
   14d48:	bl	10f14 <mbsinit@plt>
   14d4c:	ldr	lr, [sp, #28]
   14d50:	ldr	ip, [fp, #-84]	; 0xffffffac
   14d54:	sub	r3, fp, #40	; 0x28
   14d58:	cmp	r0, #0
   14d5c:	beq	14c1c <dcngettext@plt+0x3b04>
   14d60:	b	150d8 <dcngettext@plt+0x3fc0>
   14d64:	ldr	r0, [sp, #32]
   14d68:	cmp	r0, #0
   14d6c:	beq	14e08 <dcngettext@plt+0x3cf0>
   14d70:	add	r0, r7, #2
   14d74:	cmp	r0, lr
   14d78:	bcs	14e08 <dcngettext@plt+0x3cf0>
   14d7c:	add	r1, ip, r7
   14d80:	ldrb	r1, [r1, #1]
   14d84:	cmp	r1, #63	; 0x3f
   14d88:	bne	14e08 <dcngettext@plt+0x3cf0>
   14d8c:	ldrb	r5, [ip, r0]
   14d90:	sub	r1, r5, #33	; 0x21
   14d94:	cmp	r1, #29
   14d98:	bhi	14e08 <dcngettext@plt+0x3cf0>
   14d9c:	movw	r3, #20929	; 0x51c1
   14da0:	mov	r2, #1
   14da4:	movt	r3, #14336	; 0x3800
   14da8:	tst	r3, r2, lsl r1
   14dac:	beq	14e08 <dcngettext@plt+0x3cf0>
   14db0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14db4:	tst	r1, #1
   14db8:	bne	152b0 <dcngettext@plt+0x4198>
   14dbc:	cmp	r8, sl
   14dc0:	mov	r7, r0
   14dc4:	mov	r4, #0
   14dc8:	movcc	r1, #63	; 0x3f
   14dcc:	strbcc	r1, [r6, r8]
   14dd0:	add	r1, r8, #1
   14dd4:	cmp	r1, sl
   14dd8:	movcc	r2, #34	; 0x22
   14ddc:	strbcc	r2, [r6, r1]
   14de0:	add	r1, r8, #2
   14de4:	cmp	r1, sl
   14de8:	movcc	r2, #34	; 0x22
   14dec:	strbcc	r2, [r6, r1]
   14df0:	add	r1, r8, #3
   14df4:	add	r8, r8, #4
   14df8:	cmp	r1, sl
   14dfc:	movcc	r2, #63	; 0x3f
   14e00:	strbcc	r2, [r6, r1]
   14e04:	b	1486c <dcngettext@plt+0x3754>
   14e08:	mov	r5, #63	; 0x3f
   14e0c:	mov	r4, #0
   14e10:	b	1486c <dcngettext@plt+0x3754>
   14e14:	add	r1, r2, r7
   14e18:	ldr	lr, [sp, #28]
   14e1c:	mov	r3, #0
   14e20:	str	r1, [sp, #44]	; 0x2c
   14e24:	add	r1, r7, #1
   14e28:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14e2c:	tst	r0, #1
   14e30:	bne	14f04 <dcngettext@plt+0x3dec>
   14e34:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14e38:	tst	r2, #1
   14e3c:	bne	151f8 <dcngettext@plt+0x40e0>
   14e40:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14e44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14e48:	cmp	r7, #2
   14e4c:	movwne	r3, #1
   14e50:	orr	r3, r3, r2
   14e54:	tst	r3, #1
   14e58:	bne	14e94 <dcngettext@plt+0x3d7c>
   14e5c:	cmp	r8, sl
   14e60:	add	r3, r8, #1
   14e64:	movcc	r2, #39	; 0x27
   14e68:	strbcc	r2, [r6, r8]
   14e6c:	cmp	r3, sl
   14e70:	movcc	r2, #36	; 0x24
   14e74:	strbcc	r2, [r6, r3]
   14e78:	add	r3, r8, #2
   14e7c:	add	r8, r8, #3
   14e80:	cmp	r3, sl
   14e84:	movcc	r2, #39	; 0x27
   14e88:	strbcc	r2, [r6, r3]
   14e8c:	mov	r2, #1
   14e90:	str	r2, [fp, #-56]	; 0xffffffc8
   14e94:	cmp	r8, sl
   14e98:	movcc	r3, #92	; 0x5c
   14e9c:	strbcc	r3, [r6, r8]
   14ea0:	add	r3, r8, #1
   14ea4:	cmp	r3, sl
   14ea8:	andcc	r7, r5, #192	; 0xc0
   14eac:	movcc	r2, #48	; 0x30
   14eb0:	orrcc	r7, r2, r7, lsr #6
   14eb4:	strbcc	r7, [r6, r3]
   14eb8:	add	r3, r8, #2
   14ebc:	add	r8, r8, #3
   14ec0:	cmp	r3, sl
   14ec4:	lsrcc	r7, r5, #3
   14ec8:	movcc	r2, #6
   14ecc:	bficc	r7, r2, #3, #29
   14ed0:	mov	r2, #6
   14ed4:	strbcc	r7, [r6, r3]
   14ed8:	bfi	r5, r2, #3, #29
   14edc:	mov	r3, #1
   14ee0:	b	14f28 <dcngettext@plt+0x3e10>
   14ee4:	cmp	r8, sl
   14ee8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14eec:	strbcc	r5, [r6, r8]
   14ef0:	add	r8, r8, #1
   14ef4:	ldrb	r5, [ip, r1]
   14ef8:	add	r1, r1, #1
   14efc:	tst	r0, #1
   14f00:	beq	14e34 <dcngettext@plt+0x3d1c>
   14f04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14f08:	tst	r2, #1
   14f0c:	beq	14f20 <dcngettext@plt+0x3e08>
   14f10:	cmp	r8, sl
   14f14:	movcc	r7, #92	; 0x5c
   14f18:	strbcc	r7, [r6, r8]
   14f1c:	add	r8, r8, #1
   14f20:	mov	r2, #0
   14f24:	str	r2, [fp, #-52]	; 0xffffffcc
   14f28:	ldr	r2, [sp, #44]	; 0x2c
   14f2c:	and	r9, r3, #1
   14f30:	cmp	r2, r1
   14f34:	bls	15034 <dcngettext@plt+0x3f1c>
   14f38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f3c:	cmp	r9, #0
   14f40:	movwne	r9, #1
   14f44:	mvn	r7, r2
   14f48:	orr	r7, r7, r9
   14f4c:	tst	r7, #1
   14f50:	bne	14ee4 <dcngettext@plt+0x3dcc>
   14f54:	cmp	r8, sl
   14f58:	movcc	r7, #39	; 0x27
   14f5c:	strbcc	r7, [r6, r8]
   14f60:	add	r7, r8, #1
   14f64:	add	r8, r8, #2
   14f68:	cmp	r7, sl
   14f6c:	movcc	r2, #39	; 0x27
   14f70:	strbcc	r2, [r6, r7]
   14f74:	mov	r2, #0
   14f78:	str	r2, [fp, #-56]	; 0xffffffc8
   14f7c:	b	14ee4 <dcngettext@plt+0x3dcc>
   14f80:	cmp	r8, sl
   14f84:	mov	r2, #1
   14f88:	movcc	r0, #39	; 0x27
   14f8c:	strbcc	r0, [r6, r8]
   14f90:	add	r0, r8, #1
   14f94:	cmp	r0, sl
   14f98:	movcc	r1, #36	; 0x24
   14f9c:	strbcc	r1, [r6, r0]
   14fa0:	add	r0, r8, #2
   14fa4:	cmp	r0, sl
   14fa8:	movcc	r1, #39	; 0x27
   14fac:	strbcc	r1, [r6, r0]
   14fb0:	add	r0, r8, #3
   14fb4:	cmp	r0, sl
   14fb8:	add	r8, r0, #1
   14fbc:	str	r2, [fp, #-56]	; 0xffffffc8
   14fc0:	movcc	r1, #92	; 0x5c
   14fc4:	strbcc	r1, [r6, r0]
   14fc8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14fcc:	cmp	r1, #2
   14fd0:	beq	15024 <dcngettext@plt+0x3f0c>
   14fd4:	add	r1, r7, #1
   14fd8:	mov	r4, #0
   14fdc:	mov	r9, #1
   14fe0:	mov	r5, #48	; 0x30
   14fe4:	cmp	r1, lr
   14fe8:	bcs	1486c <dcngettext@plt+0x3754>
   14fec:	ldrb	r1, [ip, r1]
   14ff0:	sub	r1, r1, #48	; 0x30
   14ff4:	uxtb	r1, r1
   14ff8:	cmp	r1, #9
   14ffc:	bhi	1486c <dcngettext@plt+0x3754>
   15000:	cmp	r8, sl
   15004:	movcc	r1, #48	; 0x30
   15008:	strbcc	r1, [r6, r8]
   1500c:	add	r1, r0, #2
   15010:	add	r8, r0, #3
   15014:	cmp	r1, sl
   15018:	movcc	r2, #48	; 0x30
   1501c:	strbcc	r2, [r6, r1]
   15020:	b	1486c <dcngettext@plt+0x3754>
   15024:	mov	r0, #48	; 0x30
   15028:	mov	r9, #1
   1502c:	mov	r4, #0
   15030:	b	14b04 <dcngettext@plt+0x39ec>
   15034:	cmp	r9, #0
   15038:	sub	r7, r1, #1
   1503c:	mov	r0, r5
   15040:	movwne	r9, #1
   15044:	cmp	r9, #0
   15048:	bne	15088 <dcngettext@plt+0x3f70>
   1504c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15050:	tst	r1, #1
   15054:	beq	15088 <dcngettext@plt+0x3f70>
   15058:	cmp	r8, sl
   1505c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   15060:	movcc	r1, #39	; 0x27
   15064:	strbcc	r1, [r6, r8]
   15068:	add	r1, r8, #1
   1506c:	add	r8, r8, #2
   15070:	cmp	r1, sl
   15074:	movcc	r2, #39	; 0x27
   15078:	strbcc	r2, [r6, r1]
   1507c:	mov	r1, #0
   15080:	str	r1, [fp, #-56]	; 0xffffffc8
   15084:	b	14b90 <dcngettext@plt+0x3a78>
   15088:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1508c:	b	14b90 <dcngettext@plt+0x3a78>
   15090:	mov	r4, #0
   15094:	b	150d0 <dcngettext@plt+0x3fb8>
   15098:	mov	r4, #0
   1509c:	cmp	lr, r6
   150a0:	bls	150d0 <dcngettext@plt+0x3fb8>
   150a4:	ldr	ip, [fp, #-84]	; 0xffffffac
   150a8:	ldr	r6, [sp, #44]	; 0x2c
   150ac:	ldr	r0, [sp, #24]
   150b0:	ldrb	r0, [r0, r6]
   150b4:	cmp	r0, #0
   150b8:	beq	150d8 <dcngettext@plt+0x3fc0>
   150bc:	add	r6, r6, #1
   150c0:	add	r0, r7, r6
   150c4:	cmp	r0, lr
   150c8:	bcc	150ac <dcngettext@plt+0x3f94>
   150cc:	b	150d8 <dcngettext@plt+0x3fc0>
   150d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   150d4:	ldr	r6, [sp, #44]	; 0x2c
   150d8:	mov	r1, r6
   150dc:	ldr	r6, [sp, #80]	; 0x50
   150e0:	b	14a38 <dcngettext@plt+0x3920>
   150e4:	mov	lr, r7
   150e8:	b	150f0 <dcngettext@plt+0x3fd8>
   150ec:	mvn	lr, #0
   150f0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   150f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   150f8:	eor	r0, r7, #2
   150fc:	orr	r0, r0, r8
   15100:	clz	r0, r0
   15104:	lsr	r0, r0, #5
   15108:	tst	r1, r0
   1510c:	bne	15198 <dcngettext@plt+0x4080>
   15110:	mov	r0, r1
   15114:	ldr	r1, [fp, #-80]	; 0xffffffb0
   15118:	cmp	r7, #2
   1511c:	movwne	r1, #1
   15120:	orr	r0, r0, r1
   15124:	tst	r0, #1
   15128:	ldreq	r0, [sp, #60]	; 0x3c
   1512c:	eoreq	r0, r0, #1
   15130:	tsteq	r0, #1
   15134:	bne	15244 <dcngettext@plt+0x412c>
   15138:	mov	r9, lr
   1513c:	tst	r5, #1
   15140:	bne	15200 <dcngettext@plt+0x40e8>
   15144:	ldr	r6, [sp, #56]	; 0x38
   15148:	mov	r4, #0
   1514c:	cmp	r6, #0
   15150:	beq	1523c <dcngettext@plt+0x4124>
   15154:	ldr	r0, [sp, #84]	; 0x54
   15158:	mov	r1, #0
   1515c:	cmp	sl, #0
   15160:	mov	r5, #0
   15164:	str	r1, [fp, #-72]	; 0xffffffb8
   15168:	beq	14338 <dcngettext@plt+0x3220>
   1516c:	b	15244 <dcngettext@plt+0x412c>
   15170:	ldr	r7, [fp, #-64]	; 0xffffffc0
   15174:	ldr	r2, [sp, #84]	; 0x54
   15178:	b	151a0 <dcngettext@plt+0x4088>
   1517c:	ldr	ip, [fp, #-84]	; 0xffffffac
   15180:	mov	r2, #1
   15184:	mov	lr, r4
   15188:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1518c:	b	151a0 <dcngettext@plt+0x4088>
   15190:	ldr	r6, [sp, #80]	; 0x50
   15194:	ldr	ip, [fp, #-84]	; 0xffffffac
   15198:	ldr	r2, [sp, #84]	; 0x54
   1519c:	mov	r7, #2
   151a0:	mov	r0, #0
   151a4:	ldr	r1, [fp, #12]
   151a8:	tst	r2, #1
   151ac:	mov	r2, r7
   151b0:	mov	r3, lr
   151b4:	str	r0, [sp, #8]
   151b8:	ldr	r0, [sp, #72]	; 0x48
   151bc:	movwne	r2, #4
   151c0:	cmp	r7, #2
   151c4:	movne	r2, r7
   151c8:	str	r2, [sp]
   151cc:	mov	r2, ip
   151d0:	bic	r1, r1, #2
   151d4:	str	r0, [sp, #12]
   151d8:	ldr	r0, [sp, #76]	; 0x4c
   151dc:	str	r1, [sp, #4]
   151e0:	mov	r1, sl
   151e4:	str	r0, [sp, #16]
   151e8:	mov	r0, r6
   151ec:	bl	142b8 <dcngettext@plt+0x31a0>
   151f0:	mov	r8, r0
   151f4:	b	1529c <dcngettext@plt+0x4184>
   151f8:	ldr	r2, [sp, #84]	; 0x54
   151fc:	b	151a0 <dcngettext@plt+0x4088>
   15200:	mov	r0, #5
   15204:	ldr	r1, [sp, #56]	; 0x38
   15208:	ldr	r2, [fp, #-84]	; 0xffffffac
   1520c:	mov	r3, r9
   15210:	str	r0, [sp]
   15214:	ldr	r0, [fp, #12]
   15218:	str	r0, [sp, #4]
   1521c:	ldr	r0, [fp, #16]
   15220:	str	r0, [sp, #8]
   15224:	ldr	r0, [sp, #72]	; 0x48
   15228:	str	r0, [sp, #12]
   1522c:	ldr	r0, [sp, #76]	; 0x4c
   15230:	str	r0, [sp, #16]
   15234:	ldr	r0, [sp, #80]	; 0x50
   15238:	b	151ec <dcngettext@plt+0x40d4>
   1523c:	mov	r0, #0
   15240:	str	r0, [fp, #-72]	; 0xffffffb8
   15244:	ldr	r1, [sp, #92]	; 0x5c
   15248:	cmp	r1, #0
   1524c:	beq	1528c <dcngettext@plt+0x4174>
   15250:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15254:	ldr	r2, [sp, #80]	; 0x50
   15258:	tst	r0, #1
   1525c:	bne	15290 <dcngettext@plt+0x4178>
   15260:	ldrb	r0, [r1]
   15264:	cmp	r0, #0
   15268:	beq	15290 <dcngettext@plt+0x4178>
   1526c:	add	r1, r1, #1
   15270:	cmp	r8, sl
   15274:	strbcc	r0, [r2, r8]
   15278:	add	r8, r8, #1
   1527c:	ldrb	r0, [r1], #1
   15280:	cmp	r0, #0
   15284:	bne	15270 <dcngettext@plt+0x4158>
   15288:	b	15290 <dcngettext@plt+0x4178>
   1528c:	ldr	r2, [sp, #80]	; 0x50
   15290:	cmp	r8, sl
   15294:	movcc	r0, #0
   15298:	strbcc	r0, [r2, r8]
   1529c:	mov	r0, r8
   152a0:	sub	sp, fp, #28
   152a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152a8:	mov	r2, #1
   152ac:	b	15188 <dcngettext@plt+0x4070>
   152b0:	ldr	r2, [sp, #84]	; 0x54
   152b4:	mov	r7, #5
   152b8:	b	151a0 <dcngettext@plt+0x4088>
   152bc:	bl	11100 <abort@plt>
   152c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152c4:	add	fp, sp, #28
   152c8:	sub	sp, sp, #28
   152cc:	movw	r5, #37256	; 0x9188
   152d0:	cmp	r2, #0
   152d4:	mov	r4, r1
   152d8:	mov	r7, r0
   152dc:	str	r0, [sp, #20]
   152e0:	movt	r5, #2
   152e4:	movne	r5, r2
   152e8:	bl	1101c <__errno_location@plt>
   152ec:	mov	sl, r0
   152f0:	ldm	r5, {r0, r1}
   152f4:	ldr	r2, [r5, #40]	; 0x28
   152f8:	ldr	r3, [r5, #44]	; 0x2c
   152fc:	add	r9, r5, #8
   15300:	ldr	r6, [sl]
   15304:	orr	r8, r1, #1
   15308:	mov	r1, #0
   1530c:	str	r6, [sp, #24]
   15310:	stm	sp, {r0, r8, r9}
   15314:	str	r2, [sp, #12]
   15318:	str	r3, [sp, #16]
   1531c:	mov	r0, #0
   15320:	mov	r2, r7
   15324:	mov	r3, r4
   15328:	mov	r6, r4
   1532c:	bl	142b8 <dcngettext@plt+0x31a0>
   15330:	add	r7, r0, #1
   15334:	mov	r0, r7
   15338:	bl	164dc <dcngettext@plt+0x53c4>
   1533c:	mov	r4, r0
   15340:	ldr	r0, [r5]
   15344:	ldr	r2, [r5, #44]	; 0x2c
   15348:	ldr	r1, [r5, #40]	; 0x28
   1534c:	mov	r3, r6
   15350:	stm	sp, {r0, r8, r9}
   15354:	str	r2, [sp, #16]
   15358:	str	r1, [sp, #12]
   1535c:	mov	r0, r4
   15360:	mov	r1, r7
   15364:	ldr	r2, [sp, #20]
   15368:	bl	142b8 <dcngettext@plt+0x31a0>
   1536c:	ldr	r0, [sp, #24]
   15370:	str	r0, [sl]
   15374:	mov	r0, r4
   15378:	sub	sp, fp, #28
   1537c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15384:	add	fp, sp, #28
   15388:	sub	sp, sp, #36	; 0x24
   1538c:	movw	r8, #37256	; 0x9188
   15390:	cmp	r3, #0
   15394:	mov	r4, r2
   15398:	str	r2, [sp, #24]
   1539c:	mov	r5, r1
   153a0:	mov	r6, r0
   153a4:	str	r0, [sp, #20]
   153a8:	movt	r8, #2
   153ac:	movne	r8, r3
   153b0:	bl	1101c <__errno_location@plt>
   153b4:	str	r0, [sp, #28]
   153b8:	cmp	r4, #0
   153bc:	add	sl, r8, #8
   153c0:	ldm	r8, {r3, r9}
   153c4:	ldr	r7, [r0]
   153c8:	ldr	r1, [r8, #40]	; 0x28
   153cc:	ldr	r2, [r8, #44]	; 0x2c
   153d0:	mov	r0, #0
   153d4:	orreq	r9, r9, #1
   153d8:	str	r7, [sp, #32]
   153dc:	mov	r7, r5
   153e0:	stm	sp, {r3, r9, sl}
   153e4:	str	r1, [sp, #12]
   153e8:	str	r2, [sp, #16]
   153ec:	mov	r1, #0
   153f0:	mov	r2, r6
   153f4:	mov	r3, r5
   153f8:	bl	142b8 <dcngettext@plt+0x31a0>
   153fc:	add	r4, r0, #1
   15400:	mov	r5, r0
   15404:	mov	r0, r4
   15408:	bl	164dc <dcngettext@plt+0x53c4>
   1540c:	mov	r6, r0
   15410:	ldr	r0, [r8]
   15414:	ldr	r2, [r8, #44]	; 0x2c
   15418:	ldr	r1, [r8, #40]	; 0x28
   1541c:	mov	r3, r7
   15420:	stm	sp, {r0, r9, sl}
   15424:	str	r2, [sp, #16]
   15428:	str	r1, [sp, #12]
   1542c:	mov	r0, r6
   15430:	mov	r1, r4
   15434:	ldr	r2, [sp, #20]
   15438:	bl	142b8 <dcngettext@plt+0x31a0>
   1543c:	ldr	r0, [sp, #24]
   15440:	ldr	r1, [sp, #32]
   15444:	ldr	r2, [sp, #28]
   15448:	cmp	r0, #0
   1544c:	str	r1, [r2]
   15450:	strne	r5, [r0]
   15454:	mov	r0, r6
   15458:	sub	sp, fp, #28
   1545c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15460:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15464:	add	fp, sp, #24
   15468:	movw	r5, #37132	; 0x910c
   1546c:	movw	r8, #37128	; 0x9108
   15470:	movt	r5, #2
   15474:	movt	r8, #2
   15478:	ldr	r0, [r5]
   1547c:	ldr	r4, [r8]
   15480:	cmp	r0, #2
   15484:	blt	154b0 <dcngettext@plt+0x4398>
   15488:	add	r7, r4, #12
   1548c:	mov	r6, #0
   15490:	ldr	r0, [r7, r6, lsl #3]
   15494:	bl	13fb0 <dcngettext@plt+0x2e98>
   15498:	ldr	r1, [r5]
   1549c:	add	r2, r6, #2
   154a0:	add	r0, r6, #1
   154a4:	mov	r6, r0
   154a8:	cmp	r2, r1
   154ac:	blt	15490 <dcngettext@plt+0x4378>
   154b0:	ldr	r0, [r4, #4]
   154b4:	movw	r7, #37304	; 0x91b8
   154b8:	movt	r7, #2
   154bc:	cmp	r0, r7
   154c0:	beq	154d8 <dcngettext@plt+0x43c0>
   154c4:	bl	13fb0 <dcngettext@plt+0x2e98>
   154c8:	movw	r0, #37136	; 0x9110
   154cc:	mov	r6, #256	; 0x100
   154d0:	movt	r0, #2
   154d4:	strd	r6, [r0]
   154d8:	movw	r6, #37136	; 0x9110
   154dc:	movt	r6, #2
   154e0:	cmp	r4, r6
   154e4:	beq	154f4 <dcngettext@plt+0x43dc>
   154e8:	mov	r0, r4
   154ec:	bl	13fb0 <dcngettext@plt+0x2e98>
   154f0:	str	r6, [r8]
   154f4:	mov	r0, #1
   154f8:	str	r0, [r5]
   154fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15500:	movw	r3, #37256	; 0x9188
   15504:	mvn	r2, #0
   15508:	movt	r3, #2
   1550c:	b	15510 <dcngettext@plt+0x43f8>
   15510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15514:	add	fp, sp, #28
   15518:	sub	sp, sp, #44	; 0x2c
   1551c:	mov	r7, r3
   15520:	str	r2, [sp, #36]	; 0x24
   15524:	str	r1, [sp, #32]
   15528:	mov	r5, r0
   1552c:	bl	1101c <__errno_location@plt>
   15530:	cmp	r5, #0
   15534:	blt	156a0 <dcngettext@plt+0x4588>
   15538:	cmn	r5, #-2147483647	; 0x80000001
   1553c:	beq	156a0 <dcngettext@plt+0x4588>
   15540:	movw	r8, #37132	; 0x910c
   15544:	movw	r4, #37128	; 0x9108
   15548:	str	r0, [sp, #28]
   1554c:	ldr	r0, [r0]
   15550:	movt	r8, #2
   15554:	movt	r4, #2
   15558:	ldr	r1, [r8]
   1555c:	ldr	r6, [r4]
   15560:	str	r0, [sp, #24]
   15564:	cmp	r1, r5
   15568:	ble	15574 <dcngettext@plt+0x445c>
   1556c:	mov	sl, r6
   15570:	b	155dc <dcngettext@plt+0x44c4>
   15574:	movw	r9, #37136	; 0x9110
   15578:	mov	r0, #8
   1557c:	add	r2, r5, #1
   15580:	str	r1, [fp, #-32]	; 0xffffffe0
   15584:	mvn	r3, #-2147483648	; 0x80000000
   15588:	movt	r9, #2
   1558c:	str	r0, [sp]
   15590:	sub	r2, r2, r1
   15594:	sub	r1, fp, #32
   15598:	subs	r0, r6, r9
   1559c:	movne	r0, r6
   155a0:	bl	166dc <dcngettext@plt+0x55c4>
   155a4:	cmp	r6, r9
   155a8:	mov	sl, r0
   155ac:	str	r0, [r4]
   155b0:	ldrdeq	r0, [r9]
   155b4:	stmeq	sl, {r0, r1}
   155b8:	ldr	r1, [r8]
   155bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155c0:	add	r0, sl, r1, lsl #3
   155c4:	sub	r1, r2, r1
   155c8:	lsl	r2, r1, #3
   155cc:	mov	r1, #0
   155d0:	bl	11040 <memset@plt>
   155d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155d8:	str	r0, [r8]
   155dc:	mov	r9, sl
   155e0:	ldr	r6, [r9, r5, lsl #3]!
   155e4:	ldr	r4, [r9, #4]!
   155e8:	ldm	r7, {r0, r1}
   155ec:	ldr	r2, [r7, #40]	; 0x28
   155f0:	ldr	r3, [r7, #44]	; 0x2c
   155f4:	orr	r8, r1, #1
   155f8:	add	r1, r7, #8
   155fc:	stm	sp, {r0, r8}
   15600:	add	r0, sp, #8
   15604:	str	r1, [sp, #20]
   15608:	stm	r0, {r1, r2, r3}
   1560c:	mov	r0, r4
   15610:	mov	r1, r6
   15614:	ldr	r2, [sp, #32]
   15618:	ldr	r3, [sp, #36]	; 0x24
   1561c:	bl	142b8 <dcngettext@plt+0x31a0>
   15620:	cmp	r6, r0
   15624:	bhi	15688 <dcngettext@plt+0x4570>
   15628:	add	r6, r0, #1
   1562c:	movw	r0, #37304	; 0x91b8
   15630:	movt	r0, #2
   15634:	str	r6, [sl, r5, lsl #3]
   15638:	cmp	r4, r0
   1563c:	beq	15648 <dcngettext@plt+0x4530>
   15640:	mov	r0, r4
   15644:	bl	13fb0 <dcngettext@plt+0x2e98>
   15648:	mov	r0, r6
   1564c:	bl	164dc <dcngettext@plt+0x53c4>
   15650:	str	r0, [r9]
   15654:	mov	r4, r0
   15658:	add	r3, sp, #8
   1565c:	ldr	r0, [r7]
   15660:	ldr	r1, [r7, #40]	; 0x28
   15664:	ldr	r2, [r7, #44]	; 0x2c
   15668:	stm	sp, {r0, r8}
   1566c:	ldr	r0, [sp, #20]
   15670:	stm	r3, {r0, r1, r2}
   15674:	mov	r0, r4
   15678:	mov	r1, r6
   1567c:	ldr	r2, [sp, #32]
   15680:	ldr	r3, [sp, #36]	; 0x24
   15684:	bl	142b8 <dcngettext@plt+0x31a0>
   15688:	ldr	r0, [sp, #28]
   1568c:	ldr	r1, [sp, #24]
   15690:	str	r1, [r0]
   15694:	mov	r0, r4
   15698:	sub	sp, fp, #28
   1569c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156a0:	bl	11100 <abort@plt>
   156a4:	movw	r3, #37256	; 0x9188
   156a8:	movt	r3, #2
   156ac:	b	15510 <dcngettext@plt+0x43f8>
   156b0:	movw	r3, #37256	; 0x9188
   156b4:	mov	r1, r0
   156b8:	mov	r0, #0
   156bc:	mvn	r2, #0
   156c0:	movt	r3, #2
   156c4:	b	15510 <dcngettext@plt+0x43f8>
   156c8:	movw	r3, #37256	; 0x9188
   156cc:	mov	r2, r1
   156d0:	mov	r1, r0
   156d4:	mov	r0, #0
   156d8:	movt	r3, #2
   156dc:	b	15510 <dcngettext@plt+0x43f8>
   156e0:	push	{fp, lr}
   156e4:	mov	fp, sp
   156e8:	sub	sp, sp, #48	; 0x30
   156ec:	vmov.i32	q8, #0	; 0x00000000
   156f0:	mov	ip, #32
   156f4:	mov	r3, sp
   156f8:	mov	lr, r2
   156fc:	cmp	r1, #10
   15700:	add	r2, r3, #16
   15704:	vst1.64	{d16-d17}, [r3], ip
   15708:	vst1.64	{d16-d17}, [r3]
   1570c:	vst1.64	{d16-d17}, [r2]
   15710:	beq	15730 <dcngettext@plt+0x4618>
   15714:	str	r1, [sp]
   15718:	mov	r3, sp
   1571c:	mov	r1, lr
   15720:	mvn	r2, #0
   15724:	bl	15510 <dcngettext@plt+0x43f8>
   15728:	mov	sp, fp
   1572c:	pop	{fp, pc}
   15730:	bl	11100 <abort@plt>
   15734:	push	{r4, sl, fp, lr}
   15738:	add	fp, sp, #8
   1573c:	sub	sp, sp, #48	; 0x30
   15740:	mov	ip, r3
   15744:	mov	r3, sp
   15748:	vmov.i32	q8, #0	; 0x00000000
   1574c:	mov	lr, #32
   15750:	cmp	r1, #10
   15754:	add	r4, r3, #16
   15758:	vst1.64	{d16-d17}, [r3], lr
   1575c:	vst1.64	{d16-d17}, [r3]
   15760:	vst1.64	{d16-d17}, [r4]
   15764:	beq	15784 <dcngettext@plt+0x466c>
   15768:	str	r1, [sp]
   1576c:	mov	r1, r2
   15770:	mov	r3, sp
   15774:	mov	r2, ip
   15778:	bl	15510 <dcngettext@plt+0x43f8>
   1577c:	sub	sp, fp, #8
   15780:	pop	{r4, sl, fp, pc}
   15784:	bl	11100 <abort@plt>
   15788:	push	{fp, lr}
   1578c:	mov	fp, sp
   15790:	sub	sp, sp, #48	; 0x30
   15794:	mov	r3, sp
   15798:	vmov.i32	q8, #0	; 0x00000000
   1579c:	mov	ip, #32
   157a0:	cmp	r0, #10
   157a4:	add	r2, r3, #16
   157a8:	vst1.64	{d16-d17}, [r3], ip
   157ac:	vst1.64	{d16-d17}, [r3]
   157b0:	vst1.64	{d16-d17}, [r2]
   157b4:	beq	157d4 <dcngettext@plt+0x46bc>
   157b8:	str	r0, [sp]
   157bc:	mov	r3, sp
   157c0:	mov	r0, #0
   157c4:	mvn	r2, #0
   157c8:	bl	15510 <dcngettext@plt+0x43f8>
   157cc:	mov	sp, fp
   157d0:	pop	{fp, pc}
   157d4:	bl	11100 <abort@plt>
   157d8:	push	{fp, lr}
   157dc:	mov	fp, sp
   157e0:	sub	sp, sp, #48	; 0x30
   157e4:	mov	r3, sp
   157e8:	vmov.i32	q8, #0	; 0x00000000
   157ec:	mov	ip, #32
   157f0:	cmp	r0, #10
   157f4:	add	lr, r3, #16
   157f8:	vst1.64	{d16-d17}, [r3], ip
   157fc:	vst1.64	{d16-d17}, [r3]
   15800:	vst1.64	{d16-d17}, [lr]
   15804:	beq	15820 <dcngettext@plt+0x4708>
   15808:	str	r0, [sp]
   1580c:	mov	r3, sp
   15810:	mov	r0, #0
   15814:	bl	15510 <dcngettext@plt+0x43f8>
   15818:	mov	sp, fp
   1581c:	pop	{fp, pc}
   15820:	bl	11100 <abort@plt>
   15824:	push	{r4, sl, fp, lr}
   15828:	add	fp, sp, #8
   1582c:	sub	sp, sp, #48	; 0x30
   15830:	mov	lr, r0
   15834:	movw	r0, #37256	; 0x9188
   15838:	mov	r3, #32
   1583c:	mov	ip, r1
   15840:	mov	r4, #1
   15844:	movt	r0, #2
   15848:	add	r1, r0, #16
   1584c:	vld1.64	{d16-d17}, [r0], r3
   15850:	mov	r3, sp
   15854:	vld1.64	{d18-d19}, [r1]
   15858:	add	r1, r3, #16
   1585c:	vld1.64	{d20-d21}, [r0]
   15860:	add	r0, r3, #32
   15864:	vst1.64	{d18-d19}, [r1]
   15868:	mov	r1, r3
   1586c:	vst1.64	{d20-d21}, [r0]
   15870:	mov	r0, #28
   15874:	and	r0, r0, r2, lsr #3
   15878:	and	r2, r2, #31
   1587c:	vst1.64	{d16-d17}, [r1], r0
   15880:	ldr	r0, [r1, #8]
   15884:	bic	r4, r4, r0, lsr r2
   15888:	eor	r0, r0, r4, lsl r2
   1588c:	mov	r2, ip
   15890:	str	r0, [r1, #8]
   15894:	mov	r0, #0
   15898:	mov	r1, lr
   1589c:	bl	15510 <dcngettext@plt+0x43f8>
   158a0:	sub	sp, fp, #8
   158a4:	pop	{r4, sl, fp, pc}
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	sub	sp, sp, #48	; 0x30
   158b4:	mov	ip, r0
   158b8:	movw	r0, #37256	; 0x9188
   158bc:	mov	r3, #32
   158c0:	movt	r0, #2
   158c4:	add	r2, r0, #16
   158c8:	vld1.64	{d16-d17}, [r0], r3
   158cc:	mov	r3, sp
   158d0:	vld1.64	{d18-d19}, [r2]
   158d4:	add	r2, r3, #16
   158d8:	vld1.64	{d20-d21}, [r0]
   158dc:	add	r0, r3, #32
   158e0:	vst1.64	{d18-d19}, [r2]
   158e4:	mov	r2, r3
   158e8:	vst1.64	{d20-d21}, [r0]
   158ec:	mov	r0, #28
   158f0:	and	r0, r0, r1, lsr #3
   158f4:	and	r1, r1, #31
   158f8:	vst1.64	{d16-d17}, [r2], r0
   158fc:	mov	r0, #1
   15900:	ldr	lr, [r2, #8]
   15904:	bic	r0, r0, lr, lsr r1
   15908:	eor	r0, lr, r0, lsl r1
   1590c:	mov	r1, ip
   15910:	str	r0, [r2, #8]
   15914:	mov	r0, #0
   15918:	mvn	r2, #0
   1591c:	bl	15510 <dcngettext@plt+0x43f8>
   15920:	mov	sp, fp
   15924:	pop	{fp, pc}
   15928:	push	{fp, lr}
   1592c:	mov	fp, sp
   15930:	sub	sp, sp, #48	; 0x30
   15934:	movw	r2, #37256	; 0x9188
   15938:	mov	r3, #32
   1593c:	mov	r1, r0
   15940:	movt	r2, #2
   15944:	add	r0, r2, #16
   15948:	vld1.64	{d16-d17}, [r2], r3
   1594c:	mov	r3, sp
   15950:	vld1.64	{d18-d19}, [r0]
   15954:	add	r0, r3, #16
   15958:	vld1.64	{d20-d21}, [r2]
   1595c:	mov	r2, r3
   15960:	vst1.64	{d18-d19}, [r0]
   15964:	add	r0, r3, #32
   15968:	vst1.64	{d20-d21}, [r0]
   1596c:	mov	r0, #12
   15970:	vst1.64	{d16-d17}, [r2], r0
   15974:	ldr	r0, [r2]
   15978:	orr	r0, r0, #67108864	; 0x4000000
   1597c:	str	r0, [r2]
   15980:	mov	r0, #0
   15984:	mvn	r2, #0
   15988:	bl	15510 <dcngettext@plt+0x43f8>
   1598c:	mov	sp, fp
   15990:	pop	{fp, pc}
   15994:	push	{fp, lr}
   15998:	mov	fp, sp
   1599c:	sub	sp, sp, #48	; 0x30
   159a0:	mov	ip, r1
   159a4:	mov	r1, r0
   159a8:	movw	r0, #37256	; 0x9188
   159ac:	mov	r3, #32
   159b0:	movt	r0, #2
   159b4:	add	r2, r0, #16
   159b8:	vld1.64	{d16-d17}, [r0], r3
   159bc:	mov	r3, sp
   159c0:	vld1.64	{d18-d19}, [r2]
   159c4:	add	r2, r3, #16
   159c8:	vld1.64	{d20-d21}, [r0]
   159cc:	add	r0, r3, #32
   159d0:	vst1.64	{d18-d19}, [r2]
   159d4:	mov	r2, r3
   159d8:	vst1.64	{d20-d21}, [r0]
   159dc:	mov	r0, #12
   159e0:	vst1.64	{d16-d17}, [r2], r0
   159e4:	ldr	r0, [r2]
   159e8:	orr	r0, r0, #67108864	; 0x4000000
   159ec:	str	r0, [r2]
   159f0:	mov	r0, #0
   159f4:	mov	r2, ip
   159f8:	bl	15510 <dcngettext@plt+0x43f8>
   159fc:	mov	sp, fp
   15a00:	pop	{fp, pc}
   15a04:	push	{r4, sl, fp, lr}
   15a08:	add	fp, sp, #8
   15a0c:	sub	sp, sp, #96	; 0x60
   15a10:	mov	ip, r2
   15a14:	mov	r2, sp
   15a18:	vmov.i32	q8, #0	; 0x00000000
   15a1c:	mov	r4, #28
   15a20:	cmp	r1, #10
   15a24:	mov	r3, r2
   15a28:	add	lr, r2, #16
   15a2c:	vst1.64	{d16-d17}, [r3], r4
   15a30:	vst1.64	{d16-d17}, [lr]
   15a34:	vst1.32	{d16-d17}, [r3]
   15a38:	beq	15a88 <dcngettext@plt+0x4970>
   15a3c:	vld1.64	{d16-d17}, [r2], r4
   15a40:	vld1.64	{d18-d19}, [lr]
   15a44:	add	r3, sp, #48	; 0x30
   15a48:	add	r4, r3, #4
   15a4c:	vld1.32	{d20-d21}, [r2]
   15a50:	add	r2, r3, #20
   15a54:	vst1.32	{d16-d17}, [r4]
   15a58:	vst1.32	{d18-d19}, [r2]
   15a5c:	add	r2, r3, #32
   15a60:	vst1.32	{d20-d21}, [r2]
   15a64:	str	r1, [sp, #48]	; 0x30
   15a68:	mvn	r2, #0
   15a6c:	ldr	r1, [sp, #60]	; 0x3c
   15a70:	orr	r1, r1, #67108864	; 0x4000000
   15a74:	str	r1, [sp, #60]	; 0x3c
   15a78:	mov	r1, ip
   15a7c:	bl	15510 <dcngettext@plt+0x43f8>
   15a80:	sub	sp, fp, #8
   15a84:	pop	{r4, sl, fp, pc}
   15a88:	bl	11100 <abort@plt>
   15a8c:	push	{r4, r5, fp, lr}
   15a90:	add	fp, sp, #8
   15a94:	sub	sp, sp, #48	; 0x30
   15a98:	mov	ip, r3
   15a9c:	movw	r3, #37256	; 0x9188
   15aa0:	mov	lr, #32
   15aa4:	cmp	r1, #0
   15aa8:	mov	r5, sp
   15aac:	movt	r3, #2
   15ab0:	cmpne	r2, #0
   15ab4:	add	r4, r3, #16
   15ab8:	vld1.64	{d16-d17}, [r3], lr
   15abc:	vld1.64	{d18-d19}, [r4]
   15ac0:	add	r4, r5, #16
   15ac4:	vld1.64	{d20-d21}, [r3]
   15ac8:	vst1.64	{d16-d17}, [r5], lr
   15acc:	mov	r3, #10
   15ad0:	vst1.64	{d18-d19}, [r4]
   15ad4:	vst1.64	{d20-d21}, [r5]
   15ad8:	str	r3, [sp]
   15adc:	bne	15ae4 <dcngettext@plt+0x49cc>
   15ae0:	bl	11100 <abort@plt>
   15ae4:	str	r2, [sp, #44]	; 0x2c
   15ae8:	str	r1, [sp, #40]	; 0x28
   15aec:	mov	r3, sp
   15af0:	mov	r1, ip
   15af4:	mvn	r2, #0
   15af8:	bl	15510 <dcngettext@plt+0x43f8>
   15afc:	sub	sp, fp, #8
   15b00:	pop	{r4, r5, fp, pc}
   15b04:	push	{r4, r5, fp, lr}
   15b08:	add	fp, sp, #8
   15b0c:	sub	sp, sp, #48	; 0x30
   15b10:	mov	lr, r3
   15b14:	movw	r3, #37256	; 0x9188
   15b18:	mov	ip, #32
   15b1c:	cmp	r1, #0
   15b20:	mov	r5, sp
   15b24:	movt	r3, #2
   15b28:	cmpne	r2, #0
   15b2c:	add	r4, r3, #16
   15b30:	vld1.64	{d16-d17}, [r3], ip
   15b34:	vld1.64	{d18-d19}, [r4]
   15b38:	add	r4, r5, #16
   15b3c:	vld1.64	{d20-d21}, [r3]
   15b40:	vst1.64	{d16-d17}, [r5], ip
   15b44:	mov	r3, #10
   15b48:	vst1.64	{d18-d19}, [r4]
   15b4c:	vst1.64	{d20-d21}, [r5]
   15b50:	str	r3, [sp]
   15b54:	bne	15b5c <dcngettext@plt+0x4a44>
   15b58:	bl	11100 <abort@plt>
   15b5c:	ldr	ip, [fp, #8]
   15b60:	str	r2, [sp, #44]	; 0x2c
   15b64:	str	r1, [sp, #40]	; 0x28
   15b68:	mov	r3, sp
   15b6c:	mov	r1, lr
   15b70:	mov	r2, ip
   15b74:	bl	15510 <dcngettext@plt+0x43f8>
   15b78:	sub	sp, fp, #8
   15b7c:	pop	{r4, r5, fp, pc}
   15b80:	push	{r4, sl, fp, lr}
   15b84:	add	fp, sp, #8
   15b88:	sub	sp, sp, #48	; 0x30
   15b8c:	mov	ip, r2
   15b90:	movw	r2, #37256	; 0x9188
   15b94:	mov	lr, #32
   15b98:	cmp	r0, #0
   15b9c:	mov	r4, sp
   15ba0:	movt	r2, #2
   15ba4:	cmpne	r1, #0
   15ba8:	add	r3, r2, #16
   15bac:	vld1.64	{d16-d17}, [r2], lr
   15bb0:	vld1.64	{d18-d19}, [r3]
   15bb4:	add	r3, r4, #16
   15bb8:	vld1.64	{d20-d21}, [r2]
   15bbc:	vst1.64	{d16-d17}, [r4], lr
   15bc0:	mov	r2, #10
   15bc4:	vst1.64	{d18-d19}, [r3]
   15bc8:	vst1.64	{d20-d21}, [r4]
   15bcc:	str	r2, [sp]
   15bd0:	bne	15bd8 <dcngettext@plt+0x4ac0>
   15bd4:	bl	11100 <abort@plt>
   15bd8:	str	r1, [sp, #44]	; 0x2c
   15bdc:	str	r0, [sp, #40]	; 0x28
   15be0:	mov	r3, sp
   15be4:	mov	r0, #0
   15be8:	mov	r1, ip
   15bec:	mvn	r2, #0
   15bf0:	bl	15510 <dcngettext@plt+0x43f8>
   15bf4:	sub	sp, fp, #8
   15bf8:	pop	{r4, sl, fp, pc}
   15bfc:	push	{r4, r5, fp, lr}
   15c00:	add	fp, sp, #8
   15c04:	sub	sp, sp, #48	; 0x30
   15c08:	mov	lr, r2
   15c0c:	movw	r2, #37256	; 0x9188
   15c10:	mov	ip, r3
   15c14:	mov	r3, #32
   15c18:	cmp	r0, #0
   15c1c:	mov	r5, sp
   15c20:	movt	r2, #2
   15c24:	cmpne	r1, #0
   15c28:	add	r4, r2, #16
   15c2c:	vld1.64	{d16-d17}, [r2], r3
   15c30:	vld1.64	{d18-d19}, [r4]
   15c34:	add	r4, r5, #16
   15c38:	vld1.64	{d20-d21}, [r2]
   15c3c:	vst1.64	{d16-d17}, [r5], r3
   15c40:	mov	r2, #10
   15c44:	vst1.64	{d18-d19}, [r4]
   15c48:	vst1.64	{d20-d21}, [r5]
   15c4c:	str	r2, [sp]
   15c50:	bne	15c58 <dcngettext@plt+0x4b40>
   15c54:	bl	11100 <abort@plt>
   15c58:	str	r1, [sp, #44]	; 0x2c
   15c5c:	str	r0, [sp, #40]	; 0x28
   15c60:	mov	r3, sp
   15c64:	mov	r0, #0
   15c68:	mov	r1, lr
   15c6c:	mov	r2, ip
   15c70:	bl	15510 <dcngettext@plt+0x43f8>
   15c74:	sub	sp, fp, #8
   15c78:	pop	{r4, r5, fp, pc}
   15c7c:	movw	r3, #37144	; 0x9118
   15c80:	movt	r3, #2
   15c84:	b	15510 <dcngettext@plt+0x43f8>
   15c88:	movw	r3, #37144	; 0x9118
   15c8c:	mov	r2, r1
   15c90:	mov	r1, r0
   15c94:	mov	r0, #0
   15c98:	movt	r3, #2
   15c9c:	b	15510 <dcngettext@plt+0x43f8>
   15ca0:	movw	r3, #37144	; 0x9118
   15ca4:	mvn	r2, #0
   15ca8:	movt	r3, #2
   15cac:	b	15510 <dcngettext@plt+0x43f8>
   15cb0:	movw	r3, #37144	; 0x9118
   15cb4:	mov	r1, r0
   15cb8:	mov	r0, #0
   15cbc:	mvn	r2, #0
   15cc0:	movt	r3, #2
   15cc4:	b	15510 <dcngettext@plt+0x43f8>
   15cc8:	push	{r4, r5, fp, lr}
   15ccc:	add	fp, sp, #8
   15cd0:	mov	r5, r0
   15cd4:	mov	r4, r1
   15cd8:	mov	r0, #0
   15cdc:	mov	r2, #5
   15ce0:	mov	r1, r5
   15ce4:	bl	10f2c <dcgettext@plt>
   15ce8:	cmp	r0, r5
   15cec:	popne	{r4, r5, fp, pc}
   15cf0:	bl	16d8c <dcngettext@plt+0x5c74>
   15cf4:	ldrb	r1, [r0]
   15cf8:	and	r1, r1, #223	; 0xdf
   15cfc:	cmp	r1, #71	; 0x47
   15d00:	beq	15d68 <dcngettext@plt+0x4c50>
   15d04:	cmp	r1, #85	; 0x55
   15d08:	bne	15d8c <dcngettext@plt+0x4c74>
   15d0c:	ldrb	r1, [r0, #1]
   15d10:	and	r1, r1, #223	; 0xdf
   15d14:	cmp	r1, #84	; 0x54
   15d18:	bne	15d8c <dcngettext@plt+0x4c74>
   15d1c:	ldrb	r1, [r0, #2]
   15d20:	and	r1, r1, #223	; 0xdf
   15d24:	cmp	r1, #70	; 0x46
   15d28:	ldrbeq	r1, [r0, #3]
   15d2c:	cmpeq	r1, #45	; 0x2d
   15d30:	bne	15d8c <dcngettext@plt+0x4c74>
   15d34:	ldrb	r1, [r0, #4]
   15d38:	cmp	r1, #56	; 0x38
   15d3c:	ldrbeq	r0, [r0, #5]
   15d40:	cmpeq	r0, #0
   15d44:	bne	15d8c <dcngettext@plt+0x4c74>
   15d48:	ldrb	r1, [r5]
   15d4c:	movw	r2, #32544	; 0x7f20
   15d50:	movw	r0, #32548	; 0x7f24
   15d54:	movt	r2, #1
   15d58:	movt	r0, #1
   15d5c:	cmp	r1, #96	; 0x60
   15d60:	moveq	r0, r2
   15d64:	pop	{r4, r5, fp, pc}
   15d68:	ldrb	r1, [r0, #1]
   15d6c:	and	r1, r1, #223	; 0xdf
   15d70:	cmp	r1, #66	; 0x42
   15d74:	bne	15d8c <dcngettext@plt+0x4c74>
   15d78:	ldrb	r1, [r0, #2]
   15d7c:	cmp	r1, #49	; 0x31
   15d80:	ldrbeq	r1, [r0, #3]
   15d84:	cmpeq	r1, #56	; 0x38
   15d88:	beq	15da8 <dcngettext@plt+0x4c90>
   15d8c:	movw	r1, #32538	; 0x7f1a
   15d90:	movw	r0, #32542	; 0x7f1e
   15d94:	cmp	r4, #9
   15d98:	movt	r1, #1
   15d9c:	movt	r0, #1
   15da0:	moveq	r0, r1
   15da4:	pop	{r4, r5, fp, pc}
   15da8:	ldrb	r1, [r0, #4]
   15dac:	cmp	r1, #48	; 0x30
   15db0:	ldrbeq	r1, [r0, #5]
   15db4:	cmpeq	r1, #51	; 0x33
   15db8:	bne	15d8c <dcngettext@plt+0x4c74>
   15dbc:	ldrb	r1, [r0, #6]
   15dc0:	cmp	r1, #48	; 0x30
   15dc4:	ldrbeq	r0, [r0, #7]
   15dc8:	cmpeq	r0, #0
   15dcc:	bne	15d8c <dcngettext@plt+0x4c74>
   15dd0:	ldrb	r1, [r5]
   15dd4:	movw	r2, #32552	; 0x7f28
   15dd8:	movw	r0, #32556	; 0x7f2c
   15ddc:	movt	r2, #1
   15de0:	movt	r0, #1
   15de4:	b	15d5c <dcngettext@plt+0x4c44>
   15de8:	mov	r1, #0
   15dec:	mov	r2, #3
   15df0:	b	16bac <dcngettext@plt+0x5a94>
   15df4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15df8:	add	fp, sp, #24
   15dfc:	sub	sp, sp, #32
   15e00:	ldr	r6, [fp, #12]
   15e04:	ldr	r7, [fp, #8]
   15e08:	mov	r4, r2
   15e0c:	mov	r8, r0
   15e10:	cmp	r1, #0
   15e14:	beq	15e3c <dcngettext@plt+0x4d24>
   15e18:	movw	r2, #32644	; 0x7f84
   15e1c:	mov	r5, r1
   15e20:	str	r3, [sp, #4]
   15e24:	str	r4, [sp]
   15e28:	mov	r0, r8
   15e2c:	mov	r1, #1
   15e30:	movt	r2, #1
   15e34:	mov	r3, r5
   15e38:	b	15e54 <dcngettext@plt+0x4d3c>
   15e3c:	movw	r2, #32656	; 0x7f90
   15e40:	str	r3, [sp]
   15e44:	mov	r0, r8
   15e48:	mov	r1, #1
   15e4c:	mov	r3, r4
   15e50:	movt	r2, #1
   15e54:	bl	11064 <__fprintf_chk@plt>
   15e58:	movw	r1, #32663	; 0x7f97
   15e5c:	mov	r0, #0
   15e60:	mov	r2, #5
   15e64:	movt	r1, #1
   15e68:	bl	10f2c <dcgettext@plt>
   15e6c:	movw	r2, #33381	; 0x8265
   15e70:	mov	r3, r0
   15e74:	movw	r0, #2022	; 0x7e6
   15e78:	mov	r1, #1
   15e7c:	str	r0, [sp]
   15e80:	movt	r2, #1
   15e84:	mov	r0, r8
   15e88:	bl	11064 <__fprintf_chk@plt>
   15e8c:	movw	r4, #29927	; 0x74e7
   15e90:	mov	r1, r8
   15e94:	movt	r4, #1
   15e98:	mov	r0, r4
   15e9c:	bl	10ea8 <fputs_unlocked@plt>
   15ea0:	movw	r1, #32667	; 0x7f9b
   15ea4:	mov	r0, #0
   15ea8:	mov	r2, #5
   15eac:	movt	r1, #1
   15eb0:	bl	10f2c <dcgettext@plt>
   15eb4:	movw	r3, #32838	; 0x8046
   15eb8:	mov	r2, r0
   15ebc:	mov	r0, r8
   15ec0:	mov	r1, #1
   15ec4:	movt	r3, #1
   15ec8:	bl	11064 <__fprintf_chk@plt>
   15ecc:	mov	r0, r4
   15ed0:	mov	r1, r8
   15ed4:	bl	10ea8 <fputs_unlocked@plt>
   15ed8:	cmp	r6, #9
   15edc:	bhi	15f18 <dcngettext@plt+0x4e00>
   15ee0:	add	r0, pc, #0
   15ee4:	ldr	pc, [r0, r6, lsl #2]
   15ee8:	andeq	r5, r1, r0, lsl pc
   15eec:	andeq	r5, r1, r4, lsr #30
   15ef0:	andeq	r5, r1, r4, asr pc
   15ef4:	andeq	r5, r1, ip, ror pc
   15ef8:	andeq	r5, r1, r4, lsr #31
   15efc:	andeq	r5, r1, ip, asr #31
   15f00:	strdeq	r5, [r1], -r4
   15f04:	andeq	r6, r1, ip, lsr #32
   15f08:	andeq	r6, r1, ip, asr #1
   15f0c:	andeq	r6, r1, r4, ror r0
   15f10:	sub	sp, fp, #24
   15f14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15f18:	movw	r1, #33191	; 0x81a7
   15f1c:	movt	r1, #1
   15f20:	b	1607c <dcngettext@plt+0x4f64>
   15f24:	movw	r1, #32872	; 0x8068
   15f28:	mov	r0, #0
   15f2c:	mov	r2, #5
   15f30:	movt	r1, #1
   15f34:	bl	10f2c <dcgettext@plt>
   15f38:	ldr	r3, [r7]
   15f3c:	mov	r2, r0
   15f40:	mov	r0, r8
   15f44:	mov	r1, #1
   15f48:	sub	sp, fp, #24
   15f4c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f50:	b	11064 <__fprintf_chk@plt>
   15f54:	movw	r1, #32888	; 0x8078
   15f58:	mov	r0, #0
   15f5c:	mov	r2, #5
   15f60:	movt	r1, #1
   15f64:	bl	10f2c <dcgettext@plt>
   15f68:	mov	r2, r0
   15f6c:	ldr	r3, [r7]
   15f70:	ldr	r0, [r7, #4]
   15f74:	str	r0, [sp]
   15f78:	b	16068 <dcngettext@plt+0x4f50>
   15f7c:	movw	r1, #32911	; 0x808f
   15f80:	mov	r0, #0
   15f84:	mov	r2, #5
   15f88:	movt	r1, #1
   15f8c:	bl	10f2c <dcgettext@plt>
   15f90:	ldr	r3, [r7]
   15f94:	mov	r2, r0
   15f98:	ldmib	r7, {r0, r1}
   15f9c:	stm	sp, {r0, r1}
   15fa0:	b	16068 <dcngettext@plt+0x4f50>
   15fa4:	movw	r1, #32939	; 0x80ab
   15fa8:	mov	r0, #0
   15fac:	mov	r2, #5
   15fb0:	movt	r1, #1
   15fb4:	bl	10f2c <dcgettext@plt>
   15fb8:	ldr	r3, [r7]
   15fbc:	mov	r2, r0
   15fc0:	ldmib	r7, {r0, r1, r7}
   15fc4:	stm	sp, {r0, r1, r7}
   15fc8:	b	16068 <dcngettext@plt+0x4f50>
   15fcc:	movw	r1, #32971	; 0x80cb
   15fd0:	mov	r0, #0
   15fd4:	mov	r2, #5
   15fd8:	movt	r1, #1
   15fdc:	bl	10f2c <dcgettext@plt>
   15fe0:	ldr	r3, [r7]
   15fe4:	mov	r2, r0
   15fe8:	ldmib	r7, {r0, r1, r6, r7}
   15fec:	stm	sp, {r0, r1, r6, r7}
   15ff0:	b	16068 <dcngettext@plt+0x4f50>
   15ff4:	movw	r1, #33007	; 0x80ef
   15ff8:	mov	r0, #0
   15ffc:	mov	r2, #5
   16000:	movt	r1, #1
   16004:	bl	10f2c <dcgettext@plt>
   16008:	ldr	r3, [r7]
   1600c:	mov	r2, r0
   16010:	ldmib	r7, {r0, r1, r6}
   16014:	ldr	r5, [r7, #16]
   16018:	ldr	r7, [r7, #20]
   1601c:	stm	sp, {r0, r1, r6}
   16020:	str	r5, [sp, #12]
   16024:	str	r7, [sp, #16]
   16028:	b	16068 <dcngettext@plt+0x4f50>
   1602c:	movw	r1, #33047	; 0x8117
   16030:	mov	r0, #0
   16034:	mov	r2, #5
   16038:	movt	r1, #1
   1603c:	bl	10f2c <dcgettext@plt>
   16040:	ldr	r3, [r7]
   16044:	mov	r2, r0
   16048:	ldmib	r7, {r0, r1, r6}
   1604c:	ldr	r5, [r7, #16]
   16050:	ldr	r4, [r7, #20]
   16054:	ldr	r7, [r7, #24]
   16058:	stm	sp, {r0, r1, r6}
   1605c:	str	r5, [sp, #12]
   16060:	str	r4, [sp, #16]
   16064:	str	r7, [sp, #20]
   16068:	mov	r0, r8
   1606c:	mov	r1, #1
   16070:	b	1611c <dcngettext@plt+0x5004>
   16074:	movw	r1, #33139	; 0x8173
   16078:	movt	r1, #1
   1607c:	mov	r0, #0
   16080:	mov	r2, #5
   16084:	bl	10f2c <dcgettext@plt>
   16088:	mov	ip, r0
   1608c:	ldr	r3, [r7]
   16090:	ldr	r0, [r7, #4]
   16094:	ldr	r1, [r7, #8]
   16098:	ldr	r6, [r7, #12]
   1609c:	ldr	r5, [r7, #16]
   160a0:	ldr	r4, [r7, #20]
   160a4:	ldr	r2, [r7, #24]
   160a8:	ldr	lr, [r7, #28]
   160ac:	ldr	r7, [r7, #32]
   160b0:	stm	sp, {r0, r1, r6}
   160b4:	str	r5, [sp, #12]
   160b8:	str	r4, [sp, #16]
   160bc:	str	r2, [sp, #20]
   160c0:	str	lr, [sp, #24]
   160c4:	str	r7, [sp, #28]
   160c8:	b	16110 <dcngettext@plt+0x4ff8>
   160cc:	movw	r1, #33091	; 0x8143
   160d0:	mov	r0, #0
   160d4:	mov	r2, #5
   160d8:	movt	r1, #1
   160dc:	bl	10f2c <dcgettext@plt>
   160e0:	mov	ip, r0
   160e4:	ldr	r3, [r7]
   160e8:	ldmib	r7, {r0, r1, r6}
   160ec:	ldr	r5, [r7, #16]
   160f0:	ldr	r4, [r7, #20]
   160f4:	ldr	r2, [r7, #24]
   160f8:	ldr	r7, [r7, #28]
   160fc:	stm	sp, {r0, r1, r6}
   16100:	str	r5, [sp, #12]
   16104:	str	r4, [sp, #16]
   16108:	str	r2, [sp, #20]
   1610c:	str	r7, [sp, #24]
   16110:	mov	r0, r8
   16114:	mov	r1, #1
   16118:	mov	r2, ip
   1611c:	bl	11064 <__fprintf_chk@plt>
   16120:	sub	sp, fp, #24
   16124:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16128:	push	{r4, sl, fp, lr}
   1612c:	add	fp, sp, #8
   16130:	sub	sp, sp, #8
   16134:	ldr	ip, [fp, #8]
   16138:	mov	lr, #0
   1613c:	ldr	r4, [ip, lr, lsl #2]
   16140:	add	lr, lr, #1
   16144:	cmp	r4, #0
   16148:	bne	1613c <dcngettext@plt+0x5024>
   1614c:	sub	r4, lr, #1
   16150:	str	ip, [sp]
   16154:	str	r4, [sp, #4]
   16158:	bl	15df4 <dcngettext@plt+0x4cdc>
   1615c:	sub	sp, fp, #8
   16160:	pop	{r4, sl, fp, pc}
   16164:	push	{fp, lr}
   16168:	mov	fp, sp
   1616c:	sub	sp, sp, #48	; 0x30
   16170:	ldr	ip, [fp, #8]
   16174:	ldr	lr, [ip]
   16178:	cmp	lr, #0
   1617c:	str	lr, [sp, #8]
   16180:	beq	1621c <dcngettext@plt+0x5104>
   16184:	ldr	lr, [ip, #4]
   16188:	cmp	lr, #0
   1618c:	str	lr, [sp, #12]
   16190:	beq	16224 <dcngettext@plt+0x510c>
   16194:	ldr	lr, [ip, #8]
   16198:	cmp	lr, #0
   1619c:	str	lr, [sp, #16]
   161a0:	beq	1622c <dcngettext@plt+0x5114>
   161a4:	ldr	lr, [ip, #12]
   161a8:	cmp	lr, #0
   161ac:	str	lr, [sp, #20]
   161b0:	beq	16234 <dcngettext@plt+0x511c>
   161b4:	ldr	lr, [ip, #16]
   161b8:	cmp	lr, #0
   161bc:	str	lr, [sp, #24]
   161c0:	beq	1623c <dcngettext@plt+0x5124>
   161c4:	ldr	lr, [ip, #20]
   161c8:	cmp	lr, #0
   161cc:	str	lr, [sp, #28]
   161d0:	beq	16244 <dcngettext@plt+0x512c>
   161d4:	ldr	lr, [ip, #24]
   161d8:	cmp	lr, #0
   161dc:	str	lr, [sp, #32]
   161e0:	beq	1624c <dcngettext@plt+0x5134>
   161e4:	ldr	lr, [ip, #28]
   161e8:	cmp	lr, #0
   161ec:	str	lr, [sp, #36]	; 0x24
   161f0:	beq	16254 <dcngettext@plt+0x513c>
   161f4:	ldr	lr, [ip, #32]
   161f8:	cmp	lr, #0
   161fc:	str	lr, [sp, #40]	; 0x28
   16200:	beq	1625c <dcngettext@plt+0x5144>
   16204:	ldr	lr, [ip, #36]	; 0x24
   16208:	mov	ip, #10
   1620c:	cmp	lr, #0
   16210:	str	lr, [sp, #44]	; 0x2c
   16214:	movweq	ip, #9
   16218:	b	16260 <dcngettext@plt+0x5148>
   1621c:	mov	ip, #0
   16220:	b	16260 <dcngettext@plt+0x5148>
   16224:	mov	ip, #1
   16228:	b	16260 <dcngettext@plt+0x5148>
   1622c:	mov	ip, #2
   16230:	b	16260 <dcngettext@plt+0x5148>
   16234:	mov	ip, #3
   16238:	b	16260 <dcngettext@plt+0x5148>
   1623c:	mov	ip, #4
   16240:	b	16260 <dcngettext@plt+0x5148>
   16244:	mov	ip, #5
   16248:	b	16260 <dcngettext@plt+0x5148>
   1624c:	mov	ip, #6
   16250:	b	16260 <dcngettext@plt+0x5148>
   16254:	mov	ip, #7
   16258:	b	16260 <dcngettext@plt+0x5148>
   1625c:	mov	ip, #8
   16260:	add	lr, sp, #8
   16264:	str	ip, [sp, #4]
   16268:	str	lr, [sp]
   1626c:	bl	15df4 <dcngettext@plt+0x4cdc>
   16270:	mov	sp, fp
   16274:	pop	{fp, pc}
   16278:	push	{fp, lr}
   1627c:	mov	fp, sp
   16280:	sub	sp, sp, #56	; 0x38
   16284:	add	ip, fp, #8
   16288:	str	ip, [sp, #12]
   1628c:	ldr	lr, [fp, #8]
   16290:	cmp	lr, #0
   16294:	str	lr, [sp, #16]
   16298:	beq	16334 <dcngettext@plt+0x521c>
   1629c:	ldr	lr, [ip, #4]
   162a0:	cmp	lr, #0
   162a4:	str	lr, [sp, #20]
   162a8:	beq	1633c <dcngettext@plt+0x5224>
   162ac:	ldr	lr, [ip, #8]
   162b0:	cmp	lr, #0
   162b4:	str	lr, [sp, #24]
   162b8:	beq	16344 <dcngettext@plt+0x522c>
   162bc:	ldr	lr, [ip, #12]
   162c0:	cmp	lr, #0
   162c4:	str	lr, [sp, #28]
   162c8:	beq	1634c <dcngettext@plt+0x5234>
   162cc:	ldr	lr, [ip, #16]
   162d0:	cmp	lr, #0
   162d4:	str	lr, [sp, #32]
   162d8:	beq	16354 <dcngettext@plt+0x523c>
   162dc:	ldr	lr, [ip, #20]
   162e0:	cmp	lr, #0
   162e4:	str	lr, [sp, #36]	; 0x24
   162e8:	beq	1635c <dcngettext@plt+0x5244>
   162ec:	ldr	lr, [ip, #24]
   162f0:	cmp	lr, #0
   162f4:	str	lr, [sp, #40]	; 0x28
   162f8:	beq	16364 <dcngettext@plt+0x524c>
   162fc:	ldr	lr, [ip, #28]
   16300:	cmp	lr, #0
   16304:	str	lr, [sp, #44]	; 0x2c
   16308:	beq	1636c <dcngettext@plt+0x5254>
   1630c:	ldr	lr, [ip, #32]
   16310:	cmp	lr, #0
   16314:	str	lr, [sp, #48]	; 0x30
   16318:	beq	16374 <dcngettext@plt+0x525c>
   1631c:	ldr	lr, [ip, #36]	; 0x24
   16320:	mov	ip, #10
   16324:	cmp	lr, #0
   16328:	str	lr, [sp, #52]	; 0x34
   1632c:	movweq	ip, #9
   16330:	b	16378 <dcngettext@plt+0x5260>
   16334:	mov	ip, #0
   16338:	b	16378 <dcngettext@plt+0x5260>
   1633c:	mov	ip, #1
   16340:	b	16378 <dcngettext@plt+0x5260>
   16344:	mov	ip, #2
   16348:	b	16378 <dcngettext@plt+0x5260>
   1634c:	mov	ip, #3
   16350:	b	16378 <dcngettext@plt+0x5260>
   16354:	mov	ip, #4
   16358:	b	16378 <dcngettext@plt+0x5260>
   1635c:	mov	ip, #5
   16360:	b	16378 <dcngettext@plt+0x5260>
   16364:	mov	ip, #6
   16368:	b	16378 <dcngettext@plt+0x5260>
   1636c:	mov	ip, #7
   16370:	b	16378 <dcngettext@plt+0x5260>
   16374:	mov	ip, #8
   16378:	add	lr, sp, #16
   1637c:	str	ip, [sp, #4]
   16380:	str	lr, [sp]
   16384:	bl	15df4 <dcngettext@plt+0x4cdc>
   16388:	mov	sp, fp
   1638c:	pop	{fp, pc}
   16390:	push	{fp, lr}
   16394:	mov	fp, sp
   16398:	movw	r0, #37220	; 0x9164
   1639c:	movt	r0, #2
   163a0:	ldr	r1, [r0]
   163a4:	movw	r0, #29927	; 0x74e7
   163a8:	movt	r0, #1
   163ac:	bl	10ea8 <fputs_unlocked@plt>
   163b0:	movw	r1, #33251	; 0x81e3
   163b4:	mov	r0, #0
   163b8:	mov	r2, #5
   163bc:	movt	r1, #1
   163c0:	bl	10f2c <dcgettext@plt>
   163c4:	movw	r2, #33271	; 0x81f7
   163c8:	mov	r1, r0
   163cc:	mov	r0, #1
   163d0:	movt	r2, #1
   163d4:	bl	1104c <__printf_chk@plt>
   163d8:	movw	r1, #33293	; 0x820d
   163dc:	mov	r0, #0
   163e0:	mov	r2, #5
   163e4:	movt	r1, #1
   163e8:	bl	10f2c <dcgettext@plt>
   163ec:	movw	r2, #30451	; 0x76f3
   163f0:	movw	r3, #31245	; 0x7a0d
   163f4:	mov	r1, r0
   163f8:	mov	r0, #1
   163fc:	movt	r2, #1
   16400:	movt	r3, #1
   16404:	bl	1104c <__printf_chk@plt>
   16408:	movw	r1, #33313	; 0x8221
   1640c:	mov	r0, #0
   16410:	mov	r2, #5
   16414:	movt	r1, #1
   16418:	bl	10f2c <dcgettext@plt>
   1641c:	movw	r2, #33352	; 0x8248
   16420:	mov	r1, r0
   16424:	mov	r0, #1
   16428:	movt	r2, #1
   1642c:	pop	{fp, lr}
   16430:	b	1104c <__printf_chk@plt>
   16434:	push	{r4, r5, r6, sl, fp, lr}
   16438:	add	fp, sp, #16
   1643c:	mov	r4, r2
   16440:	mov	r5, r1
   16444:	mov	r6, r0
   16448:	bl	16e24 <dcngettext@plt+0x5d0c>
   1644c:	cmp	r0, #0
   16450:	popne	{r4, r5, r6, sl, fp, pc}
   16454:	cmp	r6, #0
   16458:	beq	1646c <dcngettext@plt+0x5354>
   1645c:	cmp	r5, #0
   16460:	cmpne	r4, #0
   16464:	bne	1646c <dcngettext@plt+0x5354>
   16468:	pop	{r4, r5, r6, sl, fp, pc}
   1646c:	bl	16a0c <dcngettext@plt+0x58f4>
   16470:	push	{r4, r5, r6, sl, fp, lr}
   16474:	add	fp, sp, #16
   16478:	mov	r4, r2
   1647c:	mov	r5, r1
   16480:	mov	r6, r0
   16484:	bl	16e24 <dcngettext@plt+0x5d0c>
   16488:	cmp	r0, #0
   1648c:	popne	{r4, r5, r6, sl, fp, pc}
   16490:	cmp	r6, #0
   16494:	beq	164a8 <dcngettext@plt+0x5390>
   16498:	cmp	r5, #0
   1649c:	cmpne	r4, #0
   164a0:	bne	164a8 <dcngettext@plt+0x5390>
   164a4:	pop	{r4, r5, r6, sl, fp, pc}
   164a8:	bl	16a0c <dcngettext@plt+0x58f4>
   164ac:	push	{fp, lr}
   164b0:	mov	fp, sp
   164b4:	bl	16aa4 <dcngettext@plt+0x598c>
   164b8:	cmp	r0, #0
   164bc:	popne	{fp, pc}
   164c0:	bl	16a0c <dcngettext@plt+0x58f4>
   164c4:	push	{fp, lr}
   164c8:	mov	fp, sp
   164cc:	bl	16aa4 <dcngettext@plt+0x598c>
   164d0:	cmp	r0, #0
   164d4:	popne	{fp, pc}
   164d8:	bl	16a0c <dcngettext@plt+0x58f4>
   164dc:	push	{fp, lr}
   164e0:	mov	fp, sp
   164e4:	bl	16aa4 <dcngettext@plt+0x598c>
   164e8:	cmp	r0, #0
   164ec:	popne	{fp, pc}
   164f0:	bl	16a0c <dcngettext@plt+0x58f4>
   164f4:	push	{r4, r5, fp, lr}
   164f8:	add	fp, sp, #8
   164fc:	mov	r4, r1
   16500:	mov	r5, r0
   16504:	bl	16ad4 <dcngettext@plt+0x59bc>
   16508:	cmp	r0, #0
   1650c:	popne	{r4, r5, fp, pc}
   16510:	cmp	r5, #0
   16514:	beq	16524 <dcngettext@plt+0x540c>
   16518:	cmp	r4, #0
   1651c:	bne	16524 <dcngettext@plt+0x540c>
   16520:	pop	{r4, r5, fp, pc}
   16524:	bl	16a0c <dcngettext@plt+0x58f4>
   16528:	push	{fp, lr}
   1652c:	mov	fp, sp
   16530:	cmp	r1, #0
   16534:	orreq	r1, r1, #1
   16538:	bl	16ad4 <dcngettext@plt+0x59bc>
   1653c:	cmp	r0, #0
   16540:	popne	{fp, pc}
   16544:	bl	16a0c <dcngettext@plt+0x58f4>
   16548:	push	{fp, lr}
   1654c:	mov	fp, sp
   16550:	clz	r3, r2
   16554:	lsr	ip, r3, #5
   16558:	clz	r3, r1
   1655c:	lsr	r3, r3, #5
   16560:	orrs	r3, r3, ip
   16564:	movwne	r1, #1
   16568:	movwne	r2, #1
   1656c:	bl	16e24 <dcngettext@plt+0x5d0c>
   16570:	cmp	r0, #0
   16574:	popne	{fp, pc}
   16578:	bl	16a0c <dcngettext@plt+0x58f4>
   1657c:	push	{fp, lr}
   16580:	mov	fp, sp
   16584:	mov	r2, r1
   16588:	mov	r1, r0
   1658c:	mov	r0, #0
   16590:	bl	16e24 <dcngettext@plt+0x5d0c>
   16594:	cmp	r0, #0
   16598:	popne	{fp, pc}
   1659c:	bl	16a0c <dcngettext@plt+0x58f4>
   165a0:	push	{fp, lr}
   165a4:	mov	fp, sp
   165a8:	mov	r2, r1
   165ac:	mov	r1, r0
   165b0:	clz	r0, r2
   165b4:	clz	r3, r1
   165b8:	lsr	r0, r0, #5
   165bc:	lsr	r3, r3, #5
   165c0:	orrs	r0, r3, r0
   165c4:	movwne	r1, #1
   165c8:	movwne	r2, #1
   165cc:	mov	r0, #0
   165d0:	bl	16e24 <dcngettext@plt+0x5d0c>
   165d4:	cmp	r0, #0
   165d8:	popne	{fp, pc}
   165dc:	bl	16a0c <dcngettext@plt+0x58f4>
   165e0:	push	{r4, r5, r6, sl, fp, lr}
   165e4:	add	fp, sp, #16
   165e8:	ldr	r5, [r1]
   165ec:	mov	r4, r1
   165f0:	mov	r6, r0
   165f4:	cmp	r0, #0
   165f8:	beq	16610 <dcngettext@plt+0x54f8>
   165fc:	mov	r0, #1
   16600:	add	r0, r0, r5, lsr #1
   16604:	adds	r5, r5, r0
   16608:	bcc	16618 <dcngettext@plt+0x5500>
   1660c:	b	16654 <dcngettext@plt+0x553c>
   16610:	cmp	r5, #0
   16614:	movweq	r5, #64	; 0x40
   16618:	mov	r0, r6
   1661c:	mov	r1, r5
   16620:	mov	r2, #1
   16624:	bl	16e24 <dcngettext@plt+0x5d0c>
   16628:	cmp	r5, #0
   1662c:	mov	r1, r5
   16630:	movwne	r1, #1
   16634:	cmp	r0, #0
   16638:	bne	1664c <dcngettext@plt+0x5534>
   1663c:	clz	r2, r6
   16640:	lsr	r2, r2, #5
   16644:	orrs	r1, r2, r1
   16648:	bne	16654 <dcngettext@plt+0x553c>
   1664c:	str	r5, [r4]
   16650:	pop	{r4, r5, r6, sl, fp, pc}
   16654:	bl	16a0c <dcngettext@plt+0x58f4>
   16658:	push	{r4, r5, r6, r7, fp, lr}
   1665c:	add	fp, sp, #16
   16660:	ldr	r5, [r1]
   16664:	mov	r6, r2
   16668:	mov	r4, r1
   1666c:	mov	r7, r0
   16670:	cmp	r0, #0
   16674:	beq	1668c <dcngettext@plt+0x5574>
   16678:	mov	r0, #1
   1667c:	add	r0, r0, r5, lsr #1
   16680:	adds	r5, r5, r0
   16684:	bcc	166a4 <dcngettext@plt+0x558c>
   16688:	b	166d8 <dcngettext@plt+0x55c0>
   1668c:	cmp	r5, #0
   16690:	bne	166a4 <dcngettext@plt+0x558c>
   16694:	mov	r0, #64	; 0x40
   16698:	cmp	r6, #64	; 0x40
   1669c:	udiv	r5, r0, r6
   166a0:	addhi	r5, r5, #1
   166a4:	mov	r0, r7
   166a8:	mov	r1, r5
   166ac:	mov	r2, r6
   166b0:	bl	16e24 <dcngettext@plt+0x5d0c>
   166b4:	cmp	r0, #0
   166b8:	bne	166d0 <dcngettext@plt+0x55b8>
   166bc:	cmp	r7, #0
   166c0:	beq	166d8 <dcngettext@plt+0x55c0>
   166c4:	cmp	r6, #0
   166c8:	cmpne	r5, #0
   166cc:	bne	166d8 <dcngettext@plt+0x55c0>
   166d0:	str	r5, [r4]
   166d4:	pop	{r4, r5, r6, r7, fp, pc}
   166d8:	bl	16a0c <dcngettext@plt+0x58f4>
   166dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   166e0:	add	fp, sp, #24
   166e4:	mov	r8, r1
   166e8:	ldr	r1, [r1]
   166ec:	mov	r5, r0
   166f0:	add	r0, r1, r1, asr #1
   166f4:	cmp	r0, r1
   166f8:	mvnvs	r0, #-2147483648	; 0x80000000
   166fc:	cmp	r0, r3
   16700:	mov	r7, r0
   16704:	movgt	r7, r3
   16708:	cmn	r3, #1
   1670c:	movle	r7, r0
   16710:	ldr	r0, [fp, #8]
   16714:	cmn	r0, #1
   16718:	ble	16740 <dcngettext@plt+0x5628>
   1671c:	cmp	r0, #0
   16720:	beq	16794 <dcngettext@plt+0x567c>
   16724:	cmn	r7, #1
   16728:	ble	16768 <dcngettext@plt+0x5650>
   1672c:	mvn	r4, #-2147483648	; 0x80000000
   16730:	udiv	r6, r4, r0
   16734:	cmp	r6, r7
   16738:	bge	16794 <dcngettext@plt+0x567c>
   1673c:	b	167a4 <dcngettext@plt+0x568c>
   16740:	cmn	r7, #1
   16744:	ble	16784 <dcngettext@plt+0x566c>
   16748:	cmn	r0, #1
   1674c:	beq	16794 <dcngettext@plt+0x567c>
   16750:	mov	r6, #-2147483648	; 0x80000000
   16754:	mvn	r4, #-2147483648	; 0x80000000
   16758:	sdiv	r6, r6, r0
   1675c:	cmp	r6, r7
   16760:	bge	16794 <dcngettext@plt+0x567c>
   16764:	b	167a4 <dcngettext@plt+0x568c>
   16768:	beq	16794 <dcngettext@plt+0x567c>
   1676c:	mov	r6, #-2147483648	; 0x80000000
   16770:	mvn	r4, #-2147483648	; 0x80000000
   16774:	sdiv	r6, r6, r7
   16778:	cmp	r6, r0
   1677c:	bge	16794 <dcngettext@plt+0x567c>
   16780:	b	167a4 <dcngettext@plt+0x568c>
   16784:	mvn	r4, #-2147483648	; 0x80000000
   16788:	sdiv	r6, r4, r0
   1678c:	cmp	r7, r6
   16790:	blt	167a4 <dcngettext@plt+0x568c>
   16794:	mul	r6, r7, r0
   16798:	mov	r4, #64	; 0x40
   1679c:	cmp	r6, #63	; 0x3f
   167a0:	bgt	167ac <dcngettext@plt+0x5694>
   167a4:	sdiv	r7, r4, r0
   167a8:	mul	r6, r7, r0
   167ac:	cmp	r5, #0
   167b0:	moveq	r4, #0
   167b4:	streq	r4, [r8]
   167b8:	sub	r4, r7, r1
   167bc:	cmp	r4, r2
   167c0:	bge	1686c <dcngettext@plt+0x5754>
   167c4:	add	r7, r1, r2
   167c8:	mov	r6, #0
   167cc:	mov	r2, #0
   167d0:	cmp	r7, r3
   167d4:	movwgt	r6, #1
   167d8:	cmn	r3, #1
   167dc:	movwgt	r2, #1
   167e0:	cmp	r7, r1
   167e4:	bvs	168a0 <dcngettext@plt+0x5788>
   167e8:	ands	r1, r2, r6
   167ec:	bne	168a0 <dcngettext@plt+0x5788>
   167f0:	cmn	r0, #1
   167f4:	ble	1681c <dcngettext@plt+0x5704>
   167f8:	cmp	r0, #0
   167fc:	beq	16868 <dcngettext@plt+0x5750>
   16800:	cmn	r7, #1
   16804:	ble	16840 <dcngettext@plt+0x5728>
   16808:	mvn	r1, #-2147483648	; 0x80000000
   1680c:	udiv	r1, r1, r0
   16810:	cmp	r1, r7
   16814:	bge	16868 <dcngettext@plt+0x5750>
   16818:	b	168a0 <dcngettext@plt+0x5788>
   1681c:	cmn	r7, #1
   16820:	ble	16858 <dcngettext@plt+0x5740>
   16824:	cmn	r0, #1
   16828:	beq	16868 <dcngettext@plt+0x5750>
   1682c:	mov	r1, #-2147483648	; 0x80000000
   16830:	sdiv	r1, r1, r0
   16834:	cmp	r1, r7
   16838:	bge	16868 <dcngettext@plt+0x5750>
   1683c:	b	168a0 <dcngettext@plt+0x5788>
   16840:	beq	16868 <dcngettext@plt+0x5750>
   16844:	mov	r1, #-2147483648	; 0x80000000
   16848:	sdiv	r1, r1, r7
   1684c:	cmp	r1, r0
   16850:	bge	16868 <dcngettext@plt+0x5750>
   16854:	b	168a0 <dcngettext@plt+0x5788>
   16858:	mvn	r1, #-2147483648	; 0x80000000
   1685c:	sdiv	r1, r1, r0
   16860:	cmp	r7, r1
   16864:	blt	168a0 <dcngettext@plt+0x5788>
   16868:	mul	r6, r7, r0
   1686c:	mov	r0, r5
   16870:	mov	r1, r6
   16874:	bl	16ad4 <dcngettext@plt+0x59bc>
   16878:	cmp	r6, #0
   1687c:	movwne	r6, #1
   16880:	cmp	r0, #0
   16884:	bne	16898 <dcngettext@plt+0x5780>
   16888:	clz	r1, r5
   1688c:	lsr	r1, r1, #5
   16890:	orrs	r1, r1, r6
   16894:	bne	168a0 <dcngettext@plt+0x5788>
   16898:	str	r7, [r8]
   1689c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   168a0:	bl	16a0c <dcngettext@plt+0x58f4>
   168a4:	push	{fp, lr}
   168a8:	mov	fp, sp
   168ac:	mov	r1, #1
   168b0:	bl	16a50 <dcngettext@plt+0x5938>
   168b4:	cmp	r0, #0
   168b8:	popne	{fp, pc}
   168bc:	bl	16a0c <dcngettext@plt+0x58f4>
   168c0:	push	{fp, lr}
   168c4:	mov	fp, sp
   168c8:	bl	16a50 <dcngettext@plt+0x5938>
   168cc:	cmp	r0, #0
   168d0:	popne	{fp, pc}
   168d4:	bl	16a0c <dcngettext@plt+0x58f4>
   168d8:	push	{fp, lr}
   168dc:	mov	fp, sp
   168e0:	mov	r1, #1
   168e4:	bl	16a50 <dcngettext@plt+0x5938>
   168e8:	cmp	r0, #0
   168ec:	popne	{fp, pc}
   168f0:	bl	16a0c <dcngettext@plt+0x58f4>
   168f4:	push	{fp, lr}
   168f8:	mov	fp, sp
   168fc:	bl	16a50 <dcngettext@plt+0x5938>
   16900:	cmp	r0, #0
   16904:	popne	{fp, pc}
   16908:	bl	16a0c <dcngettext@plt+0x58f4>
   1690c:	push	{r4, r5, r6, sl, fp, lr}
   16910:	add	fp, sp, #16
   16914:	mov	r5, r0
   16918:	mov	r0, r1
   1691c:	mov	r4, r1
   16920:	bl	16aa4 <dcngettext@plt+0x598c>
   16924:	cmp	r0, #0
   16928:	beq	16944 <dcngettext@plt+0x582c>
   1692c:	mov	r1, r5
   16930:	mov	r2, r4
   16934:	mov	r6, r0
   16938:	bl	10f08 <memcpy@plt>
   1693c:	mov	r0, r6
   16940:	pop	{r4, r5, r6, sl, fp, pc}
   16944:	bl	16a0c <dcngettext@plt+0x58f4>
   16948:	push	{r4, r5, r6, sl, fp, lr}
   1694c:	add	fp, sp, #16
   16950:	mov	r5, r0
   16954:	mov	r0, r1
   16958:	mov	r4, r1
   1695c:	bl	16aa4 <dcngettext@plt+0x598c>
   16960:	cmp	r0, #0
   16964:	beq	16980 <dcngettext@plt+0x5868>
   16968:	mov	r1, r5
   1696c:	mov	r2, r4
   16970:	mov	r6, r0
   16974:	bl	10f08 <memcpy@plt>
   16978:	mov	r0, r6
   1697c:	pop	{r4, r5, r6, sl, fp, pc}
   16980:	bl	16a0c <dcngettext@plt+0x58f4>
   16984:	push	{r4, r5, r6, sl, fp, lr}
   16988:	add	fp, sp, #16
   1698c:	mov	r5, r0
   16990:	add	r0, r1, #1
   16994:	mov	r4, r1
   16998:	bl	16aa4 <dcngettext@plt+0x598c>
   1699c:	cmp	r0, #0
   169a0:	beq	169c8 <dcngettext@plt+0x58b0>
   169a4:	mov	r6, r0
   169a8:	mov	r0, #0
   169ac:	mov	r1, r5
   169b0:	mov	r2, r4
   169b4:	strb	r0, [r6, r4]
   169b8:	mov	r0, r6
   169bc:	bl	10f08 <memcpy@plt>
   169c0:	mov	r0, r6
   169c4:	pop	{r4, r5, r6, sl, fp, pc}
   169c8:	bl	16a0c <dcngettext@plt+0x58f4>
   169cc:	push	{r4, r5, r6, sl, fp, lr}
   169d0:	add	fp, sp, #16
   169d4:	mov	r4, r0
   169d8:	bl	11004 <strlen@plt>
   169dc:	add	r5, r0, #1
   169e0:	mov	r0, r5
   169e4:	bl	16aa4 <dcngettext@plt+0x598c>
   169e8:	cmp	r0, #0
   169ec:	beq	16a08 <dcngettext@plt+0x58f0>
   169f0:	mov	r1, r4
   169f4:	mov	r2, r5
   169f8:	mov	r6, r0
   169fc:	bl	10f08 <memcpy@plt>
   16a00:	mov	r0, r6
   16a04:	pop	{r4, r5, r6, sl, fp, pc}
   16a08:	bl	16a0c <dcngettext@plt+0x58f4>
   16a0c:	push	{fp, lr}
   16a10:	mov	fp, sp
   16a14:	movw	r0, #37120	; 0x9100
   16a18:	movw	r1, #33428	; 0x8294
   16a1c:	mov	r2, #5
   16a20:	movt	r0, #2
   16a24:	movt	r1, #1
   16a28:	ldr	r4, [r0]
   16a2c:	mov	r0, #0
   16a30:	bl	10f2c <dcgettext@plt>
   16a34:	movw	r2, #32319	; 0x7e3f
   16a38:	mov	r3, r0
   16a3c:	mov	r0, r4
   16a40:	mov	r1, #0
   16a44:	movt	r2, #1
   16a48:	bl	10f98 <error@plt>
   16a4c:	bl	11100 <abort@plt>
   16a50:	clz	r2, r1
   16a54:	clz	r3, r0
   16a58:	lsr	r2, r2, #5
   16a5c:	lsr	r3, r3, #5
   16a60:	orrs	r2, r3, r2
   16a64:	movwne	r1, #1
   16a68:	movwne	r0, #1
   16a6c:	cmp	r1, #0
   16a70:	beq	16aa0 <dcngettext@plt+0x5988>
   16a74:	mvn	r2, #-2147483648	; 0x80000000
   16a78:	udiv	r2, r2, r1
   16a7c:	cmp	r2, r0
   16a80:	bcs	16aa0 <dcngettext@plt+0x5988>
   16a84:	push	{fp, lr}
   16a88:	mov	fp, sp
   16a8c:	bl	1101c <__errno_location@plt>
   16a90:	mov	r1, #12
   16a94:	str	r1, [r0]
   16a98:	mov	r0, #0
   16a9c:	pop	{fp, pc}
   16aa0:	b	10e9c <calloc@plt>
   16aa4:	cmp	r0, #0
   16aa8:	movweq	r0, #1
   16aac:	cmn	r0, #1
   16ab0:	ble	16ab8 <dcngettext@plt+0x59a0>
   16ab4:	b	10fa4 <malloc@plt>
   16ab8:	push	{fp, lr}
   16abc:	mov	fp, sp
   16ac0:	bl	1101c <__errno_location@plt>
   16ac4:	mov	r1, #12
   16ac8:	str	r1, [r0]
   16acc:	mov	r0, #0
   16ad0:	pop	{fp, pc}
   16ad4:	push	{fp, lr}
   16ad8:	mov	fp, sp
   16adc:	cmp	r0, #0
   16ae0:	beq	16afc <dcngettext@plt+0x59e4>
   16ae4:	cmp	r1, #0
   16ae8:	beq	16b08 <dcngettext@plt+0x59f0>
   16aec:	cmn	r1, #1
   16af0:	ble	16b14 <dcngettext@plt+0x59fc>
   16af4:	pop	{fp, lr}
   16af8:	b	10f38 <realloc@plt>
   16afc:	mov	r0, r1
   16b00:	pop	{fp, lr}
   16b04:	b	16aa4 <dcngettext@plt+0x598c>
   16b08:	bl	13fb0 <dcngettext@plt+0x2e98>
   16b0c:	mov	r0, #0
   16b10:	pop	{fp, pc}
   16b14:	bl	1101c <__errno_location@plt>
   16b18:	mov	r1, #12
   16b1c:	str	r1, [r0]
   16b20:	mov	r0, #0
   16b24:	pop	{fp, pc}
   16b28:	push	{r4, r5, r6, sl, fp, lr}
   16b2c:	add	fp, sp, #16
   16b30:	mov	r4, r0
   16b34:	bl	10f80 <__fpending@plt>
   16b38:	ldr	r6, [r4]
   16b3c:	mov	r5, r0
   16b40:	mov	r0, r4
   16b44:	bl	13e04 <dcngettext@plt+0x2cec>
   16b48:	tst	r6, #32
   16b4c:	bne	16b84 <dcngettext@plt+0x5a6c>
   16b50:	cmp	r0, #0
   16b54:	mov	r4, r0
   16b58:	mvnne	r4, #0
   16b5c:	cmp	r5, #0
   16b60:	bne	16b90 <dcngettext@plt+0x5a78>
   16b64:	cmp	r0, #0
   16b68:	beq	16b90 <dcngettext@plt+0x5a78>
   16b6c:	bl	1101c <__errno_location@plt>
   16b70:	ldr	r0, [r0]
   16b74:	subs	r4, r0, #9
   16b78:	mvnne	r4, #0
   16b7c:	mov	r0, r4
   16b80:	pop	{r4, r5, r6, sl, fp, pc}
   16b84:	mvn	r4, #0
   16b88:	cmp	r0, #0
   16b8c:	beq	16b98 <dcngettext@plt+0x5a80>
   16b90:	mov	r0, r4
   16b94:	pop	{r4, r5, r6, sl, fp, pc}
   16b98:	bl	1101c <__errno_location@plt>
   16b9c:	mov	r1, #0
   16ba0:	str	r1, [r0]
   16ba4:	mov	r0, r4
   16ba8:	pop	{r4, r5, r6, sl, fp, pc}
   16bac:	sub	sp, sp, #8
   16bb0:	push	{r4, r5, r6, r7, fp, lr}
   16bb4:	add	fp, sp, #16
   16bb8:	sub	sp, sp, #8
   16bbc:	mov	r5, r0
   16bc0:	add	r0, fp, #8
   16bc4:	cmp	r1, #11
   16bc8:	str	r3, [fp, #12]
   16bcc:	str	r2, [fp, #8]
   16bd0:	str	r0, [sp, #4]
   16bd4:	bhi	16c10 <dcngettext@plt+0x5af8>
   16bd8:	mov	r0, #1
   16bdc:	movw	r2, #1300	; 0x514
   16be0:	tst	r2, r0, lsl r1
   16be4:	bne	16cd0 <dcngettext@plt+0x5bb8>
   16be8:	movw	r2, #2570	; 0xa0a
   16bec:	tst	r2, r0, lsl r1
   16bf0:	bne	16c38 <dcngettext@plt+0x5b20>
   16bf4:	cmp	r1, #0
   16bf8:	bne	16c10 <dcngettext@plt+0x5af8>
   16bfc:	ldr	r0, [sp, #4]
   16c00:	add	r1, r0, #4
   16c04:	str	r1, [sp, #4]
   16c08:	mov	r1, #0
   16c0c:	b	16cdc <dcngettext@plt+0x5bc4>
   16c10:	sub	r0, r1, #1024	; 0x400
   16c14:	cmp	r0, #10
   16c18:	bhi	16cd0 <dcngettext@plt+0x5bb8>
   16c1c:	mov	r2, #1
   16c20:	movw	r3, #645	; 0x285
   16c24:	tst	r3, r2, lsl r0
   16c28:	bne	16cd0 <dcngettext@plt+0x5bb8>
   16c2c:	movw	r3, #1282	; 0x502
   16c30:	tst	r3, r2, lsl r0
   16c34:	beq	16c44 <dcngettext@plt+0x5b2c>
   16c38:	mov	r0, r5
   16c3c:	bl	11088 <fcntl64@plt>
   16c40:	b	16ce8 <dcngettext@plt+0x5bd0>
   16c44:	cmp	r0, #6
   16c48:	bne	16cd0 <dcngettext@plt+0x5bb8>
   16c4c:	ldr	r0, [sp, #4]
   16c50:	movw	r7, #37560	; 0x92b8
   16c54:	movt	r7, #2
   16c58:	add	r1, r0, #4
   16c5c:	str	r1, [sp, #4]
   16c60:	ldr	r6, [r0]
   16c64:	ldr	r0, [r7]
   16c68:	cmp	r0, #0
   16c6c:	blt	16d0c <dcngettext@plt+0x5bf4>
   16c70:	mov	r0, r5
   16c74:	movw	r1, #1030	; 0x406
   16c78:	mov	r2, r6
   16c7c:	bl	11088 <fcntl64@plt>
   16c80:	mov	r4, r0
   16c84:	cmn	r0, #1
   16c88:	bgt	16d00 <dcngettext@plt+0x5be8>
   16c8c:	bl	1101c <__errno_location@plt>
   16c90:	ldr	r0, [r0]
   16c94:	cmp	r0, #22
   16c98:	bne	16d00 <dcngettext@plt+0x5be8>
   16c9c:	mov	r0, r5
   16ca0:	mov	r1, #0
   16ca4:	mov	r2, r6
   16ca8:	bl	11088 <fcntl64@plt>
   16cac:	mov	r4, r0
   16cb0:	cmp	r0, #0
   16cb4:	blt	16cec <dcngettext@plt+0x5bd4>
   16cb8:	mvn	r0, #0
   16cbc:	str	r0, [r7]
   16cc0:	mov	r0, #1
   16cc4:	cmp	r0, #0
   16cc8:	bne	16d38 <dcngettext@plt+0x5c20>
   16ccc:	b	16cec <dcngettext@plt+0x5bd4>
   16cd0:	ldr	r0, [sp, #4]
   16cd4:	add	r2, r0, #4
   16cd8:	str	r2, [sp, #4]
   16cdc:	ldr	r2, [r0]
   16ce0:	mov	r0, r5
   16ce4:	bl	11088 <fcntl64@plt>
   16ce8:	mov	r4, r0
   16cec:	mov	r0, r4
   16cf0:	sub	sp, fp, #16
   16cf4:	pop	{r4, r5, r6, r7, fp, lr}
   16cf8:	add	sp, sp, #8
   16cfc:	bx	lr
   16d00:	mov	r0, #1
   16d04:	str	r0, [r7]
   16d08:	b	16cec <dcngettext@plt+0x5bd4>
   16d0c:	mov	r0, r5
   16d10:	mov	r1, #0
   16d14:	mov	r2, r6
   16d18:	bl	11088 <fcntl64@plt>
   16d1c:	mov	r4, r0
   16d20:	ldr	r0, [r7]
   16d24:	add	r0, r0, #1
   16d28:	clz	r0, r0
   16d2c:	lsr	r0, r0, #5
   16d30:	cmp	r0, #0
   16d34:	beq	16cec <dcngettext@plt+0x5bd4>
   16d38:	cmp	r4, #0
   16d3c:	blt	16cec <dcngettext@plt+0x5bd4>
   16d40:	mov	r0, r4
   16d44:	mov	r1, #1
   16d48:	bl	11088 <fcntl64@plt>
   16d4c:	cmp	r0, #0
   16d50:	blt	16d6c <dcngettext@plt+0x5c54>
   16d54:	orr	r2, r0, #1
   16d58:	mov	r0, r4
   16d5c:	mov	r1, #2
   16d60:	bl	11088 <fcntl64@plt>
   16d64:	cmn	r0, #1
   16d68:	bne	16cec <dcngettext@plt+0x5bd4>
   16d6c:	bl	1101c <__errno_location@plt>
   16d70:	ldr	r6, [r0]
   16d74:	mov	r5, r0
   16d78:	mov	r0, r4
   16d7c:	bl	1110c <close@plt>
   16d80:	str	r6, [r5]
   16d84:	mvn	r4, #0
   16d88:	b	16cec <dcngettext@plt+0x5bd4>
   16d8c:	push	{fp, lr}
   16d90:	mov	fp, sp
   16d94:	mov	r0, #14
   16d98:	bl	110b8 <nl_langinfo@plt>
   16d9c:	movw	r1, #29928	; 0x74e8
   16da0:	cmp	r0, #0
   16da4:	movt	r1, #1
   16da8:	movne	r1, r0
   16dac:	movw	r0, #33445	; 0x82a5
   16db0:	ldrb	r2, [r1]
   16db4:	movt	r0, #1
   16db8:	cmp	r2, #0
   16dbc:	movne	r0, r1
   16dc0:	pop	{fp, pc}
   16dc4:	push	{r4, r5, r6, r7, fp, lr}
   16dc8:	add	fp, sp, #16
   16dcc:	sub	sp, sp, #8
   16dd0:	add	r5, sp, #4
   16dd4:	cmp	r0, #0
   16dd8:	mov	r7, r2
   16ddc:	mov	r4, r1
   16de0:	movne	r5, r0
   16de4:	mov	r0, r5
   16de8:	bl	10f8c <mbrtowc@plt>
   16dec:	mov	r6, r0
   16df0:	cmp	r7, #0
   16df4:	beq	16e18 <dcngettext@plt+0x5d00>
   16df8:	cmn	r6, #2
   16dfc:	bcc	16e18 <dcngettext@plt+0x5d00>
   16e00:	mov	r0, #0
   16e04:	bl	16e60 <dcngettext@plt+0x5d48>
   16e08:	cmp	r0, #0
   16e0c:	ldrbeq	r0, [r4]
   16e10:	moveq	r6, #1
   16e14:	streq	r0, [r5]
   16e18:	mov	r0, r6
   16e1c:	sub	sp, fp, #16
   16e20:	pop	{r4, r5, r6, r7, fp, pc}
   16e24:	cmp	r2, #0
   16e28:	beq	16e58 <dcngettext@plt+0x5d40>
   16e2c:	mvn	r3, #0
   16e30:	udiv	r3, r3, r2
   16e34:	cmp	r3, r1
   16e38:	bcs	16e58 <dcngettext@plt+0x5d40>
   16e3c:	push	{fp, lr}
   16e40:	mov	fp, sp
   16e44:	bl	1101c <__errno_location@plt>
   16e48:	mov	r1, #12
   16e4c:	str	r1, [r0]
   16e50:	mov	r0, #0
   16e54:	pop	{fp, pc}
   16e58:	mul	r1, r2, r1
   16e5c:	b	16ad4 <dcngettext@plt+0x59bc>
   16e60:	push	{r4, sl, fp, lr}
   16e64:	add	fp, sp, #8
   16e68:	sub	sp, sp, #264	; 0x108
   16e6c:	add	r1, sp, #7
   16e70:	movw	r2, #257	; 0x101
   16e74:	bl	16ec4 <dcngettext@plt+0x5dac>
   16e78:	mov	r4, #0
   16e7c:	cmp	r0, #0
   16e80:	bne	16eb8 <dcngettext@plt+0x5da0>
   16e84:	movw	r1, #33451	; 0x82ab
   16e88:	add	r0, sp, #7
   16e8c:	movt	r1, #1
   16e90:	bl	10ecc <strcmp@plt>
   16e94:	cmp	r0, #0
   16e98:	beq	16eb8 <dcngettext@plt+0x5da0>
   16e9c:	movw	r1, #33453	; 0x82ad
   16ea0:	add	r0, sp, #7
   16ea4:	movt	r1, #1
   16ea8:	bl	10ecc <strcmp@plt>
   16eac:	mov	r4, r0
   16eb0:	cmp	r0, #0
   16eb4:	movwne	r4, #1
   16eb8:	mov	r0, r4
   16ebc:	sub	sp, fp, #8
   16ec0:	pop	{r4, sl, fp, pc}
   16ec4:	push	{r4, r5, r6, r7, fp, lr}
   16ec8:	add	fp, sp, #16
   16ecc:	mov	r4, r1
   16ed0:	mov	r1, #0
   16ed4:	mov	r6, r2
   16ed8:	bl	110a0 <setlocale@plt>
   16edc:	cmp	r0, #0
   16ee0:	beq	16f10 <dcngettext@plt+0x5df8>
   16ee4:	mov	r7, r0
   16ee8:	bl	11004 <strlen@plt>
   16eec:	cmp	r0, r6
   16ef0:	bcs	16f30 <dcngettext@plt+0x5e18>
   16ef4:	add	r2, r0, #1
   16ef8:	mov	r0, r4
   16efc:	mov	r1, r7
   16f00:	bl	10f08 <memcpy@plt>
   16f04:	mov	r5, #0
   16f08:	mov	r0, r5
   16f0c:	pop	{r4, r5, r6, r7, fp, pc}
   16f10:	cmp	r6, #0
   16f14:	mov	r5, #22
   16f18:	movne	r0, #0
   16f1c:	strbne	r0, [r4]
   16f20:	movne	r0, r5
   16f24:	popne	{r4, r5, r6, r7, fp, pc}
   16f28:	mov	r0, r5
   16f2c:	pop	{r4, r5, r6, r7, fp, pc}
   16f30:	mov	r5, #34	; 0x22
   16f34:	cmp	r6, #0
   16f38:	beq	16f58 <dcngettext@plt+0x5e40>
   16f3c:	sub	r6, r6, #1
   16f40:	mov	r0, r4
   16f44:	mov	r1, r7
   16f48:	mov	r2, r6
   16f4c:	bl	10f08 <memcpy@plt>
   16f50:	mov	r0, #0
   16f54:	strb	r0, [r4, r6]
   16f58:	mov	r0, r5
   16f5c:	pop	{r4, r5, r6, r7, fp, pc}
   16f60:	mov	r1, #0
   16f64:	b	110a0 <setlocale@plt>
   16f68:	cmp	r3, #0
   16f6c:	cmpeq	r2, #0
   16f70:	bne	16f88 <dcngettext@plt+0x5e70>
   16f74:	cmp	r1, #0
   16f78:	cmpeq	r0, #0
   16f7c:	mvnne	r1, #0
   16f80:	mvnne	r0, #0
   16f84:	b	16fa4 <dcngettext@plt+0x5e8c>
   16f88:	sub	sp, sp, #8
   16f8c:	push	{sp, lr}
   16f90:	bl	16fb4 <dcngettext@plt+0x5e9c>
   16f94:	ldr	lr, [sp, #4]
   16f98:	add	sp, sp, #8
   16f9c:	pop	{r2, r3}
   16fa0:	bx	lr
   16fa4:	push	{r1, lr}
   16fa8:	mov	r0, #8
   16fac:	bl	10eb4 <raise@plt>
   16fb0:	pop	{r1, pc}
   16fb4:	cmp	r1, r3
   16fb8:	cmpeq	r0, r2
   16fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fc0:	mov	r4, r0
   16fc4:	movcc	r0, #0
   16fc8:	mov	r5, r1
   16fcc:	ldr	lr, [sp, #36]	; 0x24
   16fd0:	movcc	r1, r0
   16fd4:	bcc	170d0 <dcngettext@plt+0x5fb8>
   16fd8:	cmp	r3, #0
   16fdc:	clzeq	ip, r2
   16fe0:	clzne	ip, r3
   16fe4:	addeq	ip, ip, #32
   16fe8:	cmp	r5, #0
   16fec:	clzeq	r1, r4
   16ff0:	addeq	r1, r1, #32
   16ff4:	clzne	r1, r5
   16ff8:	sub	ip, ip, r1
   16ffc:	sub	sl, ip, #32
   17000:	lsl	r9, r3, ip
   17004:	rsb	fp, ip, #32
   17008:	orr	r9, r9, r2, lsl sl
   1700c:	orr	r9, r9, r2, lsr fp
   17010:	lsl	r8, r2, ip
   17014:	cmp	r5, r9
   17018:	cmpeq	r4, r8
   1701c:	movcc	r0, #0
   17020:	movcc	r1, r0
   17024:	bcc	17040 <dcngettext@plt+0x5f28>
   17028:	mov	r0, #1
   1702c:	subs	r4, r4, r8
   17030:	lsl	r1, r0, sl
   17034:	orr	r1, r1, r0, lsr fp
   17038:	lsl	r0, r0, ip
   1703c:	sbc	r5, r5, r9
   17040:	cmp	ip, #0
   17044:	beq	170d0 <dcngettext@plt+0x5fb8>
   17048:	lsr	r6, r8, #1
   1704c:	orr	r6, r6, r9, lsl #31
   17050:	lsr	r7, r9, #1
   17054:	mov	r2, ip
   17058:	b	1707c <dcngettext@plt+0x5f64>
   1705c:	subs	r3, r4, r6
   17060:	sbc	r8, r5, r7
   17064:	adds	r3, r3, r3
   17068:	adc	r8, r8, r8
   1706c:	adds	r4, r3, #1
   17070:	adc	r5, r8, #0
   17074:	subs	r2, r2, #1
   17078:	beq	17098 <dcngettext@plt+0x5f80>
   1707c:	cmp	r5, r7
   17080:	cmpeq	r4, r6
   17084:	bcs	1705c <dcngettext@plt+0x5f44>
   17088:	adds	r4, r4, r4
   1708c:	adc	r5, r5, r5
   17090:	subs	r2, r2, #1
   17094:	bne	1707c <dcngettext@plt+0x5f64>
   17098:	lsr	r3, r4, ip
   1709c:	orr	r3, r3, r5, lsl fp
   170a0:	lsr	r2, r5, ip
   170a4:	orr	r3, r3, r5, lsr sl
   170a8:	adds	r0, r0, r4
   170ac:	mov	r4, r3
   170b0:	lsl	r3, r2, ip
   170b4:	orr	r3, r3, r4, lsl sl
   170b8:	lsl	ip, r4, ip
   170bc:	orr	r3, r3, r4, lsr fp
   170c0:	adc	r1, r1, r5
   170c4:	subs	r0, r0, ip
   170c8:	mov	r5, r2
   170cc:	sbc	r1, r1, r3
   170d0:	cmp	lr, #0
   170d4:	strdne	r4, [lr]
   170d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   170e0:	mov	r7, r0
   170e4:	ldr	r6, [pc, #72]	; 17134 <dcngettext@plt+0x601c>
   170e8:	ldr	r5, [pc, #72]	; 17138 <dcngettext@plt+0x6020>
   170ec:	add	r6, pc, r6
   170f0:	add	r5, pc, r5
   170f4:	sub	r6, r6, r5
   170f8:	mov	r8, r1
   170fc:	mov	r9, r2
   17100:	bl	10e70 <fdopen@plt-0x20>
   17104:	asrs	r6, r6, #2
   17108:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1710c:	mov	r4, #0
   17110:	add	r4, r4, #1
   17114:	ldr	r3, [r5], #4
   17118:	mov	r2, r9
   1711c:	mov	r1, r8
   17120:	mov	r0, r7
   17124:	blx	r3
   17128:	cmp	r6, r4
   1712c:	bne	17110 <dcngettext@plt+0x5ff8>
   17130:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17134:	andeq	r1, r1, r8, lsl lr
   17138:	andeq	r1, r1, r0, lsl lr
   1713c:	bx	lr
   17140:	ldr	r3, [pc, #12]	; 17154 <dcngettext@plt+0x603c>
   17144:	mov	r1, #0
   17148:	add	r3, pc, r3
   1714c:	ldr	r2, [r3]
   17150:	b	11028 <__cxa_atexit@plt>
   17154:	andeq	r1, r1, r4, lsr #31

Disassembly of section .fini:

00017158 <.fini>:
   17158:	push	{r3, lr}
   1715c:	pop	{r3, pc}
