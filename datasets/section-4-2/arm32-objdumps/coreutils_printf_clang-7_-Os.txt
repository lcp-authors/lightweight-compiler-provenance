
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010e2c <.init>:
   10e2c:	push	{r3, lr}
   10e30:	bl	11128 <__mempcpy_chk@plt+0x48>
   10e34:	pop	{r3, pc}

Disassembly of section .plt:

00010e38 <calloc@plt-0x14>:
   10e38:	push	{lr}		; (str lr, [sp, #-4]!)
   10e3c:	ldr	lr, [pc, #4]	; 10e48 <calloc@plt-0x4>
   10e40:	add	lr, pc, lr
   10e44:	ldr	pc, [lr, #8]!
   10e48:			; <UNDEFINED> instruction: 0x000161b8

00010e4c <calloc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #440]!	; 0x1b8

00010e58 <fputs_unlocked@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #432]!	; 0x1b0

00010e64 <uselocale@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #424]!	; 0x1a8

00010e70 <iconv@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #416]!	; 0x1a0

00010e7c <strcmp@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #408]!	; 0x198

00010e88 <fflush@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #400]!	; 0x190

00010e94 <free@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #392]!	; 0x188

00010ea0 <ferror@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #384]!	; 0x180

00010eac <_exit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #376]!	; 0x178

00010eb8 <memcpy@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #368]!	; 0x170

00010ec4 <mbsinit@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #360]!	; 0x168

00010ed0 <strtold@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #352]!	; 0x160

00010edc <memcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #344]!	; 0x158

00010ee8 <__vprintf_chk@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #336]!	; 0x150

00010ef4 <dcgettext@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #328]!	; 0x148

00010f00 <realloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #320]!	; 0x140

00010f0c <textdomain@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #312]!	; 0x138

00010f18 <iswprint@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #304]!	; 0x130

00010f24 <fwrite@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #296]!	; 0x128

00010f30 <lseek64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #288]!	; 0x120

00010f3c <__ctype_get_mb_cur_max@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #280]!	; 0x118

00010f48 <__fpending@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #272]!	; 0x110

00010f54 <ferror_unlocked@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #264]!	; 0x108

00010f60 <mbrtowc@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #256]!	; 0x100

00010f6c <error@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #248]!	; 0xf8

00010f78 <getenv@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #240]!	; 0xf0

00010f84 <malloc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #232]!	; 0xe8

00010f90 <iconv_open@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #224]!	; 0xe0

00010f9c <__libc_start_main@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #216]!	; 0xd8

00010fa8 <__vfprintf_chk@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #208]!	; 0xd0

00010fb4 <__freading@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #200]!	; 0xc8

00010fc0 <__gmon_start__@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #192]!	; 0xc0

00010fcc <__ctype_b_loc@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #184]!	; 0xb8

00010fd8 <exit@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #176]!	; 0xb0

00010fe4 <strlen@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #168]!	; 0xa8

00010ff0 <__errno_location@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #160]!	; 0xa0

00010ffc <__cxa_atexit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #152]!	; 0x98

00011008 <memset@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #144]!	; 0x90

00011014 <__printf_chk@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #136]!	; 0x88

00011020 <fileno@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #128]!	; 0x80

0001102c <strtoumax@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #120]!	; 0x78

00011038 <__fprintf_chk@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #112]!	; 0x70

00011044 <memchr@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #104]!	; 0x68

00011050 <strtoimax@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #96]!	; 0x60

0001105c <fclose@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #88]!	; 0x58

00011068 <fseeko64@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #80]!	; 0x50

00011074 <setlocale@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #72]!	; 0x48

00011080 <strrchr@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #64]!	; 0x40

0001108c <nl_langinfo@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #56]!	; 0x38

00011098 <newlocale@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #48]!	; 0x30

000110a4 <bindtextdomain@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #40]!	; 0x28

000110b0 <fputs@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #90112	; 0x16000
   110b8:	ldr	pc, [ip, #32]!

000110bc <strncmp@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #90112	; 0x16000
   110c4:	ldr	pc, [ip, #24]!

000110c8 <abort@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #90112	; 0x16000
   110d0:	ldr	pc, [ip, #16]!

000110d4 <putchar_unlocked@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #90112	; 0x16000
   110dc:	ldr	pc, [ip, #8]!

000110e0 <__mempcpy_chk@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #90112	; 0x16000
   110e8:	ldr	pc, [ip, #0]!

Disassembly of section .text:

000110ec <.text>:
   110ec:	mov	fp, #0
   110f0:	mov	lr, #0
   110f4:	pop	{r1}		; (ldr r1, [sp], #4)
   110f8:	mov	r2, sp
   110fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11100:	push	{r0}		; (str r0, [sp, #-4]!)
   11104:	ldr	ip, [pc, #16]	; 1111c <__mempcpy_chk@plt+0x3c>
   11108:	push	{ip}		; (str ip, [sp, #-4]!)
   1110c:	ldr	r0, [pc, #12]	; 11120 <__mempcpy_chk@plt+0x40>
   11110:	ldr	r3, [pc, #12]	; 11124 <__mempcpy_chk@plt+0x44>
   11114:	bl	10f9c <__libc_start_main@plt>
   11118:	bl	110c8 <abort@plt>
   1111c:	andeq	r5, r1, r4, ror r5
   11120:	muleq	r1, r8, r4
   11124:	andeq	r5, r1, r4, lsl r5
   11128:	ldr	r3, [pc, #20]	; 11144 <__mempcpy_chk@plt+0x64>
   1112c:	ldr	r2, [pc, #20]	; 11148 <__mempcpy_chk@plt+0x68>
   11130:	add	r3, pc, r3
   11134:	ldr	r2, [r3, r2]
   11138:	cmp	r2, #0
   1113c:	bxeq	lr
   11140:	b	10fc0 <__gmon_start__@plt>
   11144:	andeq	r5, r1, r8, asr #29
   11148:	andeq	r0, r0, ip, ror #1
   1114c:	ldr	r0, [pc, #24]	; 1116c <__mempcpy_chk@plt+0x8c>
   11150:	ldr	r3, [pc, #24]	; 11170 <__mempcpy_chk@plt+0x90>
   11154:	cmp	r3, r0
   11158:	bxeq	lr
   1115c:	ldr	r3, [pc, #16]	; 11174 <__mempcpy_chk@plt+0x94>
   11160:	cmp	r3, #0
   11164:	bxeq	lr
   11168:	bx	r3
   1116c:	andeq	r7, r2, r0, asr #2
   11170:	andeq	r7, r2, r0, asr #2
   11174:	andeq	r0, r0, r0
   11178:	ldr	r0, [pc, #36]	; 111a4 <__mempcpy_chk@plt+0xc4>
   1117c:	ldr	r1, [pc, #36]	; 111a8 <__mempcpy_chk@plt+0xc8>
   11180:	sub	r1, r1, r0
   11184:	asr	r1, r1, #2
   11188:	add	r1, r1, r1, lsr #31
   1118c:	asrs	r1, r1, #1
   11190:	bxeq	lr
   11194:	ldr	r3, [pc, #16]	; 111ac <__mempcpy_chk@plt+0xcc>
   11198:	cmp	r3, #0
   1119c:	bxeq	lr
   111a0:	bx	r3
   111a4:	andeq	r7, r2, r0, asr #2
   111a8:	andeq	r7, r2, r0, asr #2
   111ac:	andeq	r0, r0, r0
   111b0:	push	{r4, lr}
   111b4:	ldr	r4, [pc, #24]	; 111d4 <__mempcpy_chk@plt+0xf4>
   111b8:	ldrb	r3, [r4]
   111bc:	cmp	r3, #0
   111c0:	popne	{r4, pc}
   111c4:	bl	1114c <__mempcpy_chk@plt+0x6c>
   111c8:	mov	r3, #1
   111cc:	strb	r3, [r4]
   111d0:	pop	{r4, pc}
   111d4:	andeq	r7, r2, r0, asr r1
   111d8:	b	11178 <__mempcpy_chk@plt+0x98>
   111dc:	push	{fp, lr}
   111e0:	mov	fp, sp
   111e4:	sub	sp, sp, #56	; 0x38
   111e8:	mov	r8, r0
   111ec:	cmp	r0, #0
   111f0:	bne	11458 <__mempcpy_chk@plt+0x378>
   111f4:	movw	r1, #21955	; 0x55c3
   111f8:	mov	r0, #0
   111fc:	mov	r2, #5
   11200:	movt	r1, #1
   11204:	bl	10ef4 <dcgettext@plt>
   11208:	mov	r1, r0
   1120c:	movw	r0, #29024	; 0x7160
   11210:	movt	r0, #2
   11214:	ldr	r2, [r0]
   11218:	mov	r0, #1
   1121c:	mov	r3, r2
   11220:	bl	11014 <__printf_chk@plt>
   11224:	movw	r1, #22004	; 0x55f4
   11228:	mov	r0, #0
   1122c:	mov	r2, #5
   11230:	movt	r1, #1
   11234:	bl	10ef4 <dcgettext@plt>
   11238:	movw	r9, #29004	; 0x714c
   1123c:	movt	r9, #2
   11240:	ldr	r1, [r9]
   11244:	bl	10e58 <fputs_unlocked@plt>
   11248:	movw	r1, #22077	; 0x563d
   1124c:	mov	r0, #0
   11250:	mov	r2, #5
   11254:	movt	r1, #1
   11258:	bl	10ef4 <dcgettext@plt>
   1125c:	ldr	r1, [r9]
   11260:	bl	10e58 <fputs_unlocked@plt>
   11264:	movw	r1, #22122	; 0x566a
   11268:	mov	r0, #0
   1126c:	mov	r2, #5
   11270:	movt	r1, #1
   11274:	bl	10ef4 <dcgettext@plt>
   11278:	ldr	r1, [r9]
   1127c:	bl	10e58 <fputs_unlocked@plt>
   11280:	movw	r1, #22176	; 0x56a0
   11284:	mov	r0, #0
   11288:	mov	r2, #5
   1128c:	movt	r1, #1
   11290:	bl	10ef4 <dcgettext@plt>
   11294:	ldr	r1, [r9]
   11298:	bl	10e58 <fputs_unlocked@plt>
   1129c:	movw	r1, #22273	; 0x5701
   112a0:	mov	r0, #0
   112a4:	mov	r2, #5
   112a8:	movt	r1, #1
   112ac:	bl	10ef4 <dcgettext@plt>
   112b0:	ldr	r1, [r9]
   112b4:	bl	10e58 <fputs_unlocked@plt>
   112b8:	movw	r1, #22502	; 0x57e6
   112bc:	mov	r0, #0
   112c0:	mov	r2, #5
   112c4:	movt	r1, #1
   112c8:	bl	10ef4 <dcgettext@plt>
   112cc:	ldr	r1, [r9]
   112d0:	bl	10e58 <fputs_unlocked@plt>
   112d4:	movw	r1, #22754	; 0x58e2
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	movt	r1, #1
   112e4:	bl	10ef4 <dcgettext@plt>
   112e8:	ldr	r1, [r9]
   112ec:	bl	10e58 <fputs_unlocked@plt>
   112f0:	movw	r1, #23202	; 0x5aa2
   112f4:	mov	r0, #0
   112f8:	mov	r2, #5
   112fc:	movt	r1, #1
   11300:	bl	10ef4 <dcgettext@plt>
   11304:	movw	r5, #23393	; 0x5b61
   11308:	mov	r1, r0
   1130c:	mov	r0, #1
   11310:	movt	r5, #1
   11314:	mov	r2, r5
   11318:	bl	11014 <__printf_chk@plt>
   1131c:	movw	ip, #24192	; 0x5e80
   11320:	mov	r6, sp
   11324:	movt	ip, #1
   11328:	mov	r1, r6
   1132c:	ldm	ip!, {r2, r3, r4, r7}
   11330:	stmia	r1!, {r2, r3, r4, r7}
   11334:	ldm	ip!, {r0, r2, r3, r4, r7}
   11338:	stmia	r1!, {r0, r2, r3, r4, r7}
   1133c:	ldm	ip, {r0, r2, r3, r4, r7}
   11340:	stm	r1, {r0, r2, r3, r4, r7}
   11344:	movw	r1, #23559	; 0x5c07
   11348:	movt	r1, #1
   1134c:	mov	r0, r5
   11350:	bl	10e7c <strcmp@plt>
   11354:	cmp	r0, #0
   11358:	ldrne	r1, [r6, #8]!
   1135c:	cmpne	r1, #0
   11360:	bne	1134c <__mempcpy_chk@plt+0x26c>
   11364:	ldr	r6, [r6, #4]
   11368:	movw	r1, #23654	; 0x5c66
   1136c:	mov	r0, #0
   11370:	mov	r2, #5
   11374:	movt	r1, #1
   11378:	bl	10ef4 <dcgettext@plt>
   1137c:	movw	r2, #23457	; 0x5ba1
   11380:	movw	r3, #23677	; 0x5c7d
   11384:	mov	r1, r0
   11388:	mov	r0, #1
   1138c:	movt	r2, #1
   11390:	movt	r3, #1
   11394:	bl	11014 <__printf_chk@plt>
   11398:	cmp	r6, #0
   1139c:	mov	r0, #5
   113a0:	mov	r1, #0
   113a4:	moveq	r6, r5
   113a8:	bl	11074 <setlocale@plt>
   113ac:	cmp	r0, #0
   113b0:	beq	113e8 <__mempcpy_chk@plt+0x308>
   113b4:	movw	r1, #23717	; 0x5ca5
   113b8:	mov	r2, #3
   113bc:	movt	r1, #1
   113c0:	bl	110bc <strncmp@plt>
   113c4:	cmp	r0, #0
   113c8:	beq	113e8 <__mempcpy_chk@plt+0x308>
   113cc:	movw	r1, #23721	; 0x5ca9
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10ef4 <dcgettext@plt>
   113e0:	ldr	r1, [r9]
   113e4:	bl	10e58 <fputs_unlocked@plt>
   113e8:	movw	r1, #23792	; 0x5cf0
   113ec:	mov	r0, #0
   113f0:	mov	r2, #5
   113f4:	movt	r1, #1
   113f8:	bl	10ef4 <dcgettext@plt>
   113fc:	movw	r2, #23677	; 0x5c7d
   11400:	mov	r1, r0
   11404:	mov	r0, #1
   11408:	mov	r3, r5
   1140c:	movt	r2, #1
   11410:	bl	11014 <__printf_chk@plt>
   11414:	movw	r1, #23819	; 0x5d0b
   11418:	mov	r0, #0
   1141c:	mov	r2, #5
   11420:	movt	r1, #1
   11424:	bl	10ef4 <dcgettext@plt>
   11428:	movw	r3, #22076	; 0x563c
   1142c:	mov	r1, r0
   11430:	movw	r0, #23587	; 0x5c23
   11434:	cmp	r6, r5
   11438:	mov	r2, r6
   1143c:	movt	r0, #1
   11440:	movt	r3, #1
   11444:	moveq	r3, r0
   11448:	mov	r0, #1
   1144c:	bl	11014 <__printf_chk@plt>
   11450:	mov	r0, r8
   11454:	bl	10fd8 <exit@plt>
   11458:	movw	r0, #29000	; 0x7148
   1145c:	movw	r1, #21916	; 0x559c
   11460:	mov	r2, #5
   11464:	movt	r0, #2
   11468:	movt	r1, #1
   1146c:	ldr	r5, [r0]
   11470:	mov	r0, #0
   11474:	bl	10ef4 <dcgettext@plt>
   11478:	mov	r2, r0
   1147c:	movw	r0, #29024	; 0x7160
   11480:	mov	r1, #1
   11484:	movt	r0, #2
   11488:	ldr	r3, [r0]
   1148c:	mov	r0, r5
   11490:	bl	11038 <__fprintf_chk@plt>
   11494:	b	11450 <__mempcpy_chk@plt+0x370>
   11498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1149c:	add	fp, sp, #28
   114a0:	sub	sp, sp, #4
   114a4:	vpush	{d8}
   114a8:	sub	sp, sp, #320	; 0x140
   114ac:	mov	r7, r0
   114b0:	ldr	r0, [r1]
   114b4:	mov	r5, r1
   114b8:	bl	125d4 <__mempcpy_chk@plt+0x14f4>
   114bc:	movw	r1, #22076	; 0x563c
   114c0:	mov	r0, #6
   114c4:	movt	r1, #1
   114c8:	bl	11074 <setlocale@plt>
   114cc:	movw	r6, #23461	; 0x5ba5
   114d0:	movw	r1, #23400	; 0x5b68
   114d4:	movt	r6, #1
   114d8:	movt	r1, #1
   114dc:	mov	r0, r6
   114e0:	bl	110a4 <bindtextdomain@plt>
   114e4:	mov	r0, r6
   114e8:	bl	10f0c <textdomain@plt>
   114ec:	movw	r0, #9412	; 0x24c4
   114f0:	movt	r0, #1
   114f4:	bl	15578 <__mempcpy_chk@plt+0x4498>
   114f8:	movw	r1, #29012	; 0x7154
   114fc:	mov	r0, #0
   11500:	movt	r1, #2
   11504:	strb	r0, [r1]
   11508:	movw	r0, #23424	; 0x5b80
   1150c:	movt	r0, #1
   11510:	bl	10f78 <getenv@plt>
   11514:	cmp	r0, #0
   11518:	movw	r1, #29013	; 0x7155
   1151c:	movwne	r0, #1
   11520:	movt	r1, #2
   11524:	cmp	r7, #2
   11528:	strb	r0, [r1]
   1152c:	bne	115a8 <__mempcpy_chk@plt+0x4c8>
   11530:	mov	r4, r5
   11534:	movw	r1, #23440	; 0x5b90
   11538:	ldr	r6, [r4, #4]!
   1153c:	movt	r1, #1
   11540:	mov	r0, r6
   11544:	bl	10e7c <strcmp@plt>
   11548:	cmp	r0, #0
   1154c:	beq	11f88 <__mempcpy_chk@plt+0xea8>
   11550:	movw	r1, #23447	; 0x5b97
   11554:	mov	r0, r6
   11558:	movt	r1, #1
   1155c:	bl	10e7c <strcmp@plt>
   11560:	cmp	r0, #0
   11564:	bne	115b4 <__mempcpy_chk@plt+0x4d4>
   11568:	movw	r0, #28920	; 0x70f8
   1156c:	movw	r1, #23471	; 0x5baf
   11570:	mov	r4, #0
   11574:	movw	r2, #23457	; 0x5ba1
   11578:	movt	r0, #2
   1157c:	movt	r1, #1
   11580:	movt	r2, #1
   11584:	ldr	r3, [r0]
   11588:	movw	r0, #29004	; 0x714c
   1158c:	movt	r0, #2
   11590:	ldr	r0, [r0]
   11594:	stm	sp, {r1, r4}
   11598:	movw	r1, #23393	; 0x5b61
   1159c:	movt	r1, #1
   115a0:	bl	148b4 <__mempcpy_chk@plt+0x37d4>
   115a4:	b	11ed8 <__mempcpy_chk@plt+0xdf8>
   115a8:	blt	11f5c <__mempcpy_chk@plt+0xe7c>
   115ac:	mov	r4, r5
   115b0:	ldr	r6, [r4, #4]!
   115b4:	movw	r1, #23487	; 0x5bbf
   115b8:	mov	r0, r6
   115bc:	movt	r1, #1
   115c0:	bl	10e7c <strcmp@plt>
   115c4:	cmp	r0, #0
   115c8:	beq	115d8 <__mempcpy_chk@plt+0x4f8>
   115cc:	str	r6, [sp, #8]
   115d0:	mov	r4, r5
   115d4:	b	115ec <__mempcpy_chk@plt+0x50c>
   115d8:	cmp	r7, #3
   115dc:	blt	11f5c <__mempcpy_chk@plt+0xe7c>
   115e0:	ldr	r0, [r5, #8]
   115e4:	sub	r7, r7, #1
   115e8:	str	r0, [sp, #8]
   115ec:	add	r0, sp, #56	; 0x38
   115f0:	mov	r9, #0
   115f4:	add	r0, r0, #99	; 0x63
   115f8:	str	r0, [sp, #16]
   115fc:	add	r0, r4, #8
   11600:	str	r0, [sp, #24]
   11604:	sub	r0, r7, #2
   11608:	mov	r7, #1
   1160c:	mov	sl, r0
   11610:	ldr	r5, [sp, #8]
   11614:	ldr	r8, [sp, #24]
   11618:	str	r0, [sp, #12]
   1161c:	mov	r0, #0
   11620:	str	r0, [sp, #28]
   11624:	mov	r0, #0
   11628:	str	r0, [sp, #20]
   1162c:	ldrb	r0, [r5]
   11630:	cmp	r0, #37	; 0x25
   11634:	beq	1166c <__mempcpy_chk@plt+0x58c>
   11638:	cmp	r0, #92	; 0x5c
   1163c:	beq	11654 <__mempcpy_chk@plt+0x574>
   11640:	cmp	r0, #0
   11644:	beq	11e64 <__mempcpy_chk@plt+0xd84>
   11648:	bl	110d4 <putchar_unlocked@plt>
   1164c:	mov	r4, r5
   11650:	b	11664 <__mempcpy_chk@plt+0x584>
   11654:	mov	r0, r5
   11658:	mov	r1, #0
   1165c:	bl	12050 <__mempcpy_chk@plt+0xf70>
   11660:	add	r4, r5, r0
   11664:	add	r5, r4, #1
   11668:	b	1162c <__mempcpy_chk@plt+0x54c>
   1166c:	mov	r4, r5
   11670:	ldrb	r0, [r4, #1]!
   11674:	cmp	r0, #113	; 0x71
   11678:	beq	116e4 <__mempcpy_chk@plt+0x604>
   1167c:	cmp	r0, #98	; 0x62
   11680:	beq	11698 <__mempcpy_chk@plt+0x5b8>
   11684:	cmp	r0, #37	; 0x25
   11688:	bne	11710 <__mempcpy_chk@plt+0x630>
   1168c:	mov	r0, #37	; 0x25
   11690:	bl	110d4 <putchar_unlocked@plt>
   11694:	b	11664 <__mempcpy_chk@plt+0x584>
   11698:	cmp	sl, #1
   1169c:	blt	11664 <__mempcpy_chk@plt+0x584>
   116a0:	ldr	r5, [r8]
   116a4:	b	116c4 <__mempcpy_chk@plt+0x5e4>
   116a8:	bl	110d4 <putchar_unlocked@plt>
   116ac:	b	116c0 <__mempcpy_chk@plt+0x5e0>
   116b0:	mov	r0, r5
   116b4:	mov	r1, #1
   116b8:	bl	12050 <__mempcpy_chk@plt+0xf70>
   116bc:	add	r5, r5, r0
   116c0:	add	r5, r5, #1
   116c4:	ldrb	r0, [r5]
   116c8:	cmp	r0, #92	; 0x5c
   116cc:	beq	116b0 <__mempcpy_chk@plt+0x5d0>
   116d0:	cmp	r0, #0
   116d4:	bne	116a8 <__mempcpy_chk@plt+0x5c8>
   116d8:	sub	sl, sl, #1
   116dc:	add	r8, r8, #4
   116e0:	b	11664 <__mempcpy_chk@plt+0x584>
   116e4:	cmp	sl, #1
   116e8:	blt	11664 <__mempcpy_chk@plt+0x584>
   116ec:	ldr	r1, [r8], #4
   116f0:	mov	r0, #3
   116f4:	bl	13ca0 <__mempcpy_chk@plt+0x2bc0>
   116f8:	movw	r1, #29004	; 0x714c
   116fc:	movt	r1, #2
   11700:	ldr	r1, [r1]
   11704:	bl	10e58 <fputs_unlocked@plt>
   11708:	sub	sl, sl, #1
   1170c:	b	11664 <__mempcpy_chk@plt+0x584>
   11710:	add	r0, sp, #56	; 0x38
   11714:	mov	r1, #0
   11718:	mov	r2, #256	; 0x100
   1171c:	str	sl, [sp, #52]	; 0x34
   11720:	mov	r6, #0
   11724:	bl	11008 <memset@plt>
   11728:	mov	sl, #1
   1172c:	movw	r0, #257	; 0x101
   11730:	movw	r1, #257	; 0x101
   11734:	strb	sl, [sp, #144]	; 0x90
   11738:	strb	sl, [sp, #176]	; 0xb0
   1173c:	strb	sl, [sp, #173]	; 0xad
   11740:	strb	sl, [sp, #171]	; 0xab
   11744:	strb	sl, [sp, #167]	; 0xa7
   11748:	strb	sl, [sp, #161]	; 0xa1
   1174c:	strb	sl, [sp, #127]	; 0x7f
   11750:	strh	r0, [sp, #125]	; 0x7d
   11754:	ldr	r0, [sp, #16]
   11758:	movt	r1, #257	; 0x101
   1175c:	strb	sl, [sp, #121]	; 0x79
   11760:	strb	sl, [sp, #153]	; 0x99
   11764:	strb	sl, [r0, #4]
   11768:	str	r1, [r0]
   1176c:	b	117a8 <__mempcpy_chk@plt+0x6c8>
   11770:	strb	r9, [sp, #176]	; 0xb0
   11774:	strb	r9, [sp, #144]	; 0x90
   11778:	strb	r9, [sp, #171]	; 0xab
   1177c:	strb	r9, [sp, #167]	; 0xa7
   11780:	strb	r9, [sp, #125]	; 0x7d
   11784:	strb	r9, [sp, #157]	; 0x9d
   11788:	strb	r9, [sp, #155]	; 0x9b
   1178c:	strb	r9, [sp, #121]	; 0x79
   11790:	strb	r9, [sp, #153]	; 0x99
   11794:	b	117a0 <__mempcpy_chk@plt+0x6c0>
   11798:	strb	r9, [sp, #155]	; 0x9b
   1179c:	strb	r9, [sp, #171]	; 0xab
   117a0:	add	r6, r6, #1
   117a4:	add	sl, sl, #1
   117a8:	ldrb	r0, [r5, sl]
   117ac:	sub	r1, r0, #32
   117b0:	cmp	r1, #16
   117b4:	bhi	11818 <__mempcpy_chk@plt+0x738>
   117b8:	add	r2, pc, #0
   117bc:	ldr	pc, [r2, r1, lsl #2]
   117c0:	andeq	r1, r1, r0, lsr #15
   117c4:	andeq	r1, r1, r0, lsr #16
   117c8:	andeq	r1, r1, r0, lsr #16
   117cc:	andeq	r1, r1, r4, lsl #16
   117d0:	andeq	r1, r1, r0, lsr #16
   117d4:	andeq	r1, r1, r0, lsr #16
   117d8:	andeq	r1, r1, r0, lsr #16
   117dc:	andeq	r1, r1, r0, ror r7
   117e0:	andeq	r1, r1, r0, lsr #16
   117e4:	andeq	r1, r1, r0, lsr #16
   117e8:	andeq	r1, r1, ip, asr r8
   117ec:	andeq	r1, r1, r0, lsr #15
   117f0:	andeq	r1, r1, r0, lsr #16
   117f4:	andeq	r1, r1, r0, lsr #15
   117f8:	andeq	r1, r1, r0, lsr #16
   117fc:	andeq	r1, r1, r0, lsr #16
   11800:	muleq	r1, r8, r7
   11804:	strb	r9, [sp, #171]	; 0xab
   11808:	strb	r9, [sp, #173]	; 0xad
   1180c:	strb	r9, [sp, #161]	; 0xa1
   11810:	strh	r9, [sp, #155]	; 0x9b
   11814:	b	117a0 <__mempcpy_chk@plt+0x6c0>
   11818:	cmp	r0, #73	; 0x49
   1181c:	beq	11770 <__mempcpy_chk@plt+0x690>
   11820:	sub	r1, r0, #48	; 0x30
   11824:	mov	r2, #0
   11828:	cmp	r1, #9
   1182c:	str	r2, [sp, #36]	; 0x24
   11830:	bhi	1189c <__mempcpy_chk@plt+0x7bc>
   11834:	add	r0, r5, r6
   11838:	add	r6, r6, #1
   1183c:	ldrb	r0, [r0, #2]
   11840:	sub	r1, r0, #48	; 0x30
   11844:	cmp	r1, #10
   11848:	bcc	11834 <__mempcpy_chk@plt+0x754>
   1184c:	add	r1, r5, r6
   11850:	add	sl, r6, #1
   11854:	add	r4, r1, #1
   11858:	b	118a0 <__mempcpy_chk@plt+0x7c0>
   1185c:	ldr	r0, [sp, #52]	; 0x34
   11860:	cmp	r0, #1
   11864:	blt	118ac <__mempcpy_chk@plt+0x7cc>
   11868:	ldr	r0, [r8]
   1186c:	bl	11f90 <__mempcpy_chk@plt+0xeb0>
   11870:	movw	r6, #4117	; 0x1015
   11874:	str	r0, [sp, #28]
   11878:	adds	r0, r0, #-2147483648	; 0x80000000
   1187c:	adcs	r0, r1, #0
   11880:	movt	r6, #4
   11884:	bne	11eec <__mempcpy_chk@plt+0xe0c>
   11888:	ldr	r0, [sp, #52]	; 0x34
   1188c:	add	r8, r8, #4
   11890:	sub	r0, r0, #1
   11894:	str	r0, [sp, #52]	; 0x34
   11898:	b	118bc <__mempcpy_chk@plt+0x7dc>
   1189c:	add	r4, r5, sl
   118a0:	movw	r6, #4117	; 0x1015
   118a4:	movt	r6, #4
   118a8:	b	118d4 <__mempcpy_chk@plt+0x7f4>
   118ac:	movw	r6, #4117	; 0x1015
   118b0:	mov	r0, #0
   118b4:	str	r0, [sp, #28]
   118b8:	movt	r6, #4
   118bc:	add	r0, r5, sl
   118c0:	mov	r1, #1
   118c4:	add	sl, sl, #1
   118c8:	add	r4, r0, #1
   118cc:	ldrb	r0, [r0, #1]
   118d0:	str	r1, [sp, #36]	; 0x24
   118d4:	mov	r1, #0
   118d8:	cmp	r0, #46	; 0x2e
   118dc:	str	r1, [sp, #40]	; 0x28
   118e0:	bne	1199c <__mempcpy_chk@plt+0x8bc>
   118e4:	strb	r9, [sp, #155]	; 0x9b
   118e8:	mov	r0, r4
   118ec:	ldrb	r1, [r0, #1]!
   118f0:	cmp	r1, #42	; 0x2a
   118f4:	bne	11938 <__mempcpy_chk@plt+0x858>
   118f8:	mov	r0, #1
   118fc:	add	sl, sl, #2
   11900:	add	r4, r4, #2
   11904:	str	r0, [sp, #40]	; 0x28
   11908:	ldr	r0, [sp, #52]	; 0x34
   1190c:	cmp	r0, #1
   11910:	blt	11974 <__mempcpy_chk@plt+0x894>
   11914:	ldr	r0, [r8]
   11918:	bl	11f90 <__mempcpy_chk@plt+0xeb0>
   1191c:	cmp	r1, #0
   11920:	blt	11984 <__mempcpy_chk@plt+0x8a4>
   11924:	str	r0, [sp, #20]
   11928:	subs	r0, r0, #-2147483648	; 0x80000000
   1192c:	sbcs	r0, r1, #0
   11930:	blt	1198c <__mempcpy_chk@plt+0x8ac>
   11934:	b	11ef8 <__mempcpy_chk@plt+0xe18>
   11938:	sub	r1, r1, #48	; 0x30
   1193c:	add	sl, sl, #1
   11940:	str	r8, [sp, #48]	; 0x30
   11944:	cmp	r1, #9
   11948:	bhi	1196c <__mempcpy_chk@plt+0x88c>
   1194c:	add	r0, r4, #2
   11950:	ldrb	r1, [r0], #1
   11954:	add	sl, sl, #1
   11958:	sub	r1, r1, #48	; 0x30
   1195c:	cmp	r1, #10
   11960:	bcc	11950 <__mempcpy_chk@plt+0x870>
   11964:	sub	r4, r0, #1
   11968:	b	119a0 <__mempcpy_chk@plt+0x8c0>
   1196c:	mov	r4, r0
   11970:	b	119a0 <__mempcpy_chk@plt+0x8c0>
   11974:	mov	r0, #0
   11978:	str	r8, [sp, #48]	; 0x30
   1197c:	str	r0, [sp, #20]
   11980:	b	119a0 <__mempcpy_chk@plt+0x8c0>
   11984:	mvn	r0, #0
   11988:	str	r0, [sp, #20]
   1198c:	ldr	r0, [sp, #52]	; 0x34
   11990:	add	r8, r8, #4
   11994:	sub	r0, r0, #1
   11998:	str	r0, [sp, #52]	; 0x34
   1199c:	str	r8, [sp, #48]	; 0x30
   119a0:	ldrb	r8, [r4]
   119a4:	sub	r0, r8, #104	; 0x68
   119a8:	cmp	r0, #18
   119ac:	bhi	119c0 <__mempcpy_chk@plt+0x8e0>
   119b0:	tst	r6, r7, lsl r0
   119b4:	beq	119c0 <__mempcpy_chk@plt+0x8e0>
   119b8:	add	r4, r4, #1
   119bc:	b	119a0 <__mempcpy_chk@plt+0x8c0>
   119c0:	cmp	r8, #76	; 0x4c
   119c4:	beq	119b8 <__mempcpy_chk@plt+0x8d8>
   119c8:	add	r0, sp, #56	; 0x38
   119cc:	ldrb	r0, [r0, r8]
   119d0:	cmp	r0, #0
   119d4:	beq	11f2c <__mempcpy_chk@plt+0xe4c>
   119d8:	ldr	r0, [sp, #52]	; 0x34
   119dc:	cmp	r0, #1
   119e0:	blt	11a00 <__mempcpy_chk@plt+0x920>
   119e4:	sub	r0, r0, #1
   119e8:	str	r0, [sp, #52]	; 0x34
   119ec:	ldr	r0, [sp, #48]	; 0x30
   119f0:	ldr	r1, [r0], #4
   119f4:	str	r1, [sp, #32]
   119f8:	str	r0, [sp, #48]	; 0x30
   119fc:	b	11a0c <__mempcpy_chk@plt+0x92c>
   11a00:	movw	r0, #22076	; 0x563c
   11a04:	movt	r0, #1
   11a08:	str	r0, [sp, #32]
   11a0c:	mov	r1, #1
   11a10:	mov	r6, #2
   11a14:	cmp	r8, #96	; 0x60
   11a18:	ble	11a50 <__mempcpy_chk@plt+0x970>
   11a1c:	sub	r0, r8, #97	; 0x61
   11a20:	cmp	r0, #23
   11a24:	bhi	11a74 <__mempcpy_chk@plt+0x994>
   11a28:	movw	r2, #16648	; 0x4108
   11a2c:	movw	r7, #24092	; 0x5e1c
   11a30:	movt	r2, #144	; 0x90
   11a34:	movt	r7, #1
   11a38:	tst	r2, r1, lsl r0
   11a3c:	bne	11a8c <__mempcpy_chk@plt+0x9ac>
   11a40:	mov	r2, #113	; 0x71
   11a44:	tst	r2, r1, lsl r0
   11a48:	bne	11a80 <__mempcpy_chk@plt+0x9a0>
   11a4c:	b	11a74 <__mempcpy_chk@plt+0x994>
   11a50:	sub	r0, r8, #69	; 0x45
   11a54:	cmp	r0, #3
   11a58:	bcc	11a80 <__mempcpy_chk@plt+0x9a0>
   11a5c:	cmp	r8, #65	; 0x41
   11a60:	beq	11a80 <__mempcpy_chk@plt+0x9a0>
   11a64:	movw	r7, #24092	; 0x5e1c
   11a68:	cmp	r8, #88	; 0x58
   11a6c:	movt	r7, #1
   11a70:	beq	11a8c <__mempcpy_chk@plt+0x9ac>
   11a74:	mov	r6, #0
   11a78:	mov	r7, r5
   11a7c:	b	11a8c <__mempcpy_chk@plt+0x9ac>
   11a80:	movw	r7, #24096	; 0x5e20
   11a84:	mov	r6, #1
   11a88:	movt	r7, #1
   11a8c:	add	r0, sl, r6
   11a90:	add	r0, r0, #2
   11a94:	bl	149bc <__mempcpy_chk@plt+0x38dc>
   11a98:	mov	r1, r5
   11a9c:	mov	r2, sl
   11aa0:	mvn	r3, #0
   11aa4:	str	r0, [sp, #44]	; 0x2c
   11aa8:	bl	110e0 <__mempcpy_chk@plt>
   11aac:	mov	r1, r7
   11ab0:	mov	r2, r6
   11ab4:	mvn	r3, #0
   11ab8:	bl	110e0 <__mempcpy_chk@plt>
   11abc:	cmp	r8, #96	; 0x60
   11ac0:	strb	r8, [r0]
   11ac4:	strb	r9, [r0, #1]
   11ac8:	ble	11b78 <__mempcpy_chk@plt+0xa98>
   11acc:	ldr	sl, [sp, #52]	; 0x34
   11ad0:	sub	r0, r8, #97	; 0x61
   11ad4:	mov	r7, #1
   11ad8:	cmp	r0, #23
   11adc:	bhi	11e18 <__mempcpy_chk@plt+0xd38>
   11ae0:	add	r1, pc, #0
   11ae4:	ldr	pc, [r1, r0, lsl #2]
   11ae8:	andeq	r1, r1, r8, lsl ip
   11aec:	andeq	r1, r1, r8, lsl lr
   11af0:			; <UNDEFINED> instruction: 0x00011db4
   11af4:	andeq	r1, r1, r8, asr #22
   11af8:	andeq	r1, r1, r8, lsl ip
   11afc:	andeq	r1, r1, r8, lsl ip
   11b00:	andeq	r1, r1, r8, lsl ip
   11b04:	andeq	r1, r1, r8, lsl lr
   11b08:	andeq	r1, r1, r8, asr #22
   11b0c:	andeq	r1, r1, r8, lsl lr
   11b10:	andeq	r1, r1, r8, lsl lr
   11b14:	andeq	r1, r1, r8, lsl lr
   11b18:	andeq	r1, r1, r8, lsl lr
   11b1c:	andeq	r1, r1, r8, lsl lr
   11b20:	muleq	r1, ip, fp
   11b24:	andeq	r1, r1, r8, lsl lr
   11b28:	andeq	r1, r1, r8, lsl lr
   11b2c:	andeq	r1, r1, r8, lsl lr
   11b30:	andeq	r1, r1, r8, lsl #27
   11b34:	andeq	r1, r1, r8, lsl lr
   11b38:	muleq	r1, ip, fp
   11b3c:	andeq	r1, r1, r8, lsl lr
   11b40:	andeq	r1, r1, r8, lsl lr
   11b44:	muleq	r1, ip, fp
   11b48:	ldr	r0, [sp, #32]
   11b4c:	bl	11f90 <__mempcpy_chk@plt+0xeb0>
   11b50:	mov	r2, r0
   11b54:	ldr	r0, [sp, #36]	; 0x24
   11b58:	mov	r3, r1
   11b5c:	cmp	r0, #0
   11b60:	beq	11dd4 <__mempcpy_chk@plt+0xcf4>
   11b64:	ldr	r0, [sp, #40]	; 0x28
   11b68:	cmp	r0, #0
   11b6c:	beq	11d78 <__mempcpy_chk@plt+0xc98>
   11b70:	stm	sp, {r2, r3}
   11b74:	b	11cd4 <__mempcpy_chk@plt+0xbf4>
   11b78:	ldr	sl, [sp, #52]	; 0x34
   11b7c:	sub	r0, r8, #69	; 0x45
   11b80:	mov	r7, #1
   11b84:	cmp	r0, #3
   11b88:	bcc	11c18 <__mempcpy_chk@plt+0xb38>
   11b8c:	cmp	r8, #65	; 0x41
   11b90:	beq	11c18 <__mempcpy_chk@plt+0xb38>
   11b94:	cmp	r8, #88	; 0x58
   11b98:	bne	11e18 <__mempcpy_chk@plt+0xd38>
   11b9c:	ldr	r6, [sp, #32]
   11ba0:	ldrb	r0, [r6]
   11ba4:	cmp	r0, #39	; 0x27
   11ba8:	cmpne	r0, #34	; 0x22
   11bac:	bne	11d00 <__mempcpy_chk@plt+0xc20>
   11bb0:	ldrb	r5, [r6, #1]
   11bb4:	cmp	r5, #0
   11bb8:	beq	11d00 <__mempcpy_chk@plt+0xc20>
   11bbc:	ldrb	r0, [r6, #2]!
   11bc0:	mov	r8, #0
   11bc4:	cmp	r0, #0
   11bc8:	beq	11d2c <__mempcpy_chk@plt+0xc4c>
   11bcc:	movw	r0, #29013	; 0x7155
   11bd0:	mov	sl, r6
   11bd4:	ldr	r6, [sp, #36]	; 0x24
   11bd8:	movt	r0, #2
   11bdc:	ldrb	r0, [r0]
   11be0:	cmp	r0, #0
   11be4:	bne	11d30 <__mempcpy_chk@plt+0xc50>
   11be8:	movw	r1, #23955	; 0x5d93
   11bec:	mov	r0, #0
   11bf0:	mov	r2, #5
   11bf4:	mov	r8, #0
   11bf8:	movt	r1, #1
   11bfc:	bl	10ef4 <dcgettext@plt>
   11c00:	mov	r2, r0
   11c04:	mov	r0, #0
   11c08:	mov	r1, #0
   11c0c:	mov	r3, sl
   11c10:	bl	10f6c <error@plt>
   11c14:	b	11d30 <__mempcpy_chk@plt+0xc50>
   11c18:	ldr	r6, [sp, #32]
   11c1c:	ldrb	r0, [r6]
   11c20:	cmp	r0, #39	; 0x27
   11c24:	cmpne	r0, #34	; 0x22
   11c28:	bne	11c94 <__mempcpy_chk@plt+0xbb4>
   11c2c:	ldrb	r0, [r6, #1]
   11c30:	cmp	r0, #0
   11c34:	beq	11c94 <__mempcpy_chk@plt+0xbb4>
   11c38:	vmov	s0, r0
   11c3c:	vcvt.f64.u32	d8, s0
   11c40:	ldrb	r0, [r6, #2]!
   11c44:	cmp	r0, #0
   11c48:	beq	11cb8 <__mempcpy_chk@plt+0xbd8>
   11c4c:	movw	r0, #29013	; 0x7155
   11c50:	ldr	r5, [sp, #36]	; 0x24
   11c54:	ldr	r8, [sp, #40]	; 0x28
   11c58:	movt	r0, #2
   11c5c:	ldrb	r0, [r0]
   11c60:	cmp	r0, #0
   11c64:	bne	11cc0 <__mempcpy_chk@plt+0xbe0>
   11c68:	movw	r1, #23955	; 0x5d93
   11c6c:	mov	r0, #0
   11c70:	mov	r2, #5
   11c74:	movt	r1, #1
   11c78:	bl	10ef4 <dcgettext@plt>
   11c7c:	mov	r2, r0
   11c80:	mov	r0, #0
   11c84:	mov	r1, #0
   11c88:	mov	r3, r6
   11c8c:	bl	10f6c <error@plt>
   11c90:	b	11cc0 <__mempcpy_chk@plt+0xbe0>
   11c94:	bl	10ff0 <__errno_location@plt>
   11c98:	str	r9, [r0]
   11c9c:	mov	r0, r6
   11ca0:	sub	r1, fp, #48	; 0x30
   11ca4:	bl	12420 <__mempcpy_chk@plt+0x1340>
   11ca8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11cac:	mov	r0, r6
   11cb0:	vmov.f64	d8, d0
   11cb4:	bl	12378 <__mempcpy_chk@plt+0x1298>
   11cb8:	ldr	r5, [sp, #36]	; 0x24
   11cbc:	ldr	r8, [sp, #40]	; 0x28
   11cc0:	cmp	r5, #0
   11cc4:	beq	11ce8 <__mempcpy_chk@plt+0xc08>
   11cc8:	cmp	r8, #0
   11ccc:	beq	11d74 <__mempcpy_chk@plt+0xc94>
   11cd0:	vstr	d8, [sp]
   11cd4:	ldr	r0, [sp, #44]	; 0x2c
   11cd8:	ldr	r1, [sp, #28]
   11cdc:	ldr	r2, [sp, #20]
   11ce0:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11ce4:	b	11e18 <__mempcpy_chk@plt+0xd38>
   11ce8:	vmov	r2, r3, d8
   11cec:	cmp	r8, #0
   11cf0:	beq	11de0 <__mempcpy_chk@plt+0xd00>
   11cf4:	ldr	r0, [sp, #44]	; 0x2c
   11cf8:	ldr	r1, [sp, #20]
   11cfc:	b	11d80 <__mempcpy_chk@plt+0xca0>
   11d00:	bl	10ff0 <__errno_location@plt>
   11d04:	str	r9, [r0]
   11d08:	mov	r0, r6
   11d0c:	sub	r1, fp, #48	; 0x30
   11d10:	mov	r2, #0
   11d14:	bl	1102c <strtoumax@plt>
   11d18:	mov	r8, r1
   11d1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11d20:	mov	r5, r0
   11d24:	mov	r0, r6
   11d28:	bl	12378 <__mempcpy_chk@plt+0x1298>
   11d2c:	ldr	r6, [sp, #36]	; 0x24
   11d30:	cmp	r6, #0
   11d34:	beq	11d5c <__mempcpy_chk@plt+0xc7c>
   11d38:	ldr	r0, [sp, #40]	; 0x28
   11d3c:	cmp	r0, #0
   11d40:	beq	11dec <__mempcpy_chk@plt+0xd0c>
   11d44:	stm	sp, {r5, r8}
   11d48:	ldr	r0, [sp, #44]	; 0x2c
   11d4c:	ldr	r1, [sp, #28]
   11d50:	ldr	r2, [sp, #20]
   11d54:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11d58:	b	11e14 <__mempcpy_chk@plt+0xd34>
   11d5c:	ldr	r0, [sp, #40]	; 0x28
   11d60:	cmp	r0, #0
   11d64:	beq	11e04 <__mempcpy_chk@plt+0xd24>
   11d68:	ldr	r0, [sp, #44]	; 0x2c
   11d6c:	ldr	r1, [sp, #20]
   11d70:	b	11df4 <__mempcpy_chk@plt+0xd14>
   11d74:	vmov	r2, r3, d8
   11d78:	ldr	r0, [sp, #44]	; 0x2c
   11d7c:	ldr	r1, [sp, #28]
   11d80:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11d84:	b	11e18 <__mempcpy_chk@plt+0xd38>
   11d88:	ldr	r0, [sp, #36]	; 0x24
   11d8c:	cmp	r0, #0
   11d90:	beq	11e28 <__mempcpy_chk@plt+0xd48>
   11d94:	ldr	r0, [sp, #40]	; 0x28
   11d98:	ldr	r3, [sp, #32]
   11d9c:	cmp	r0, #0
   11da0:	beq	11e54 <__mempcpy_chk@plt+0xd74>
   11da4:	ldr	r0, [sp, #44]	; 0x2c
   11da8:	ldr	r1, [sp, #28]
   11dac:	ldr	r2, [sp, #20]
   11db0:	b	11d80 <__mempcpy_chk@plt+0xca0>
   11db4:	ldr	r0, [sp, #32]
   11db8:	ldrb	r2, [r0]
   11dbc:	ldr	r0, [sp, #36]	; 0x24
   11dc0:	cmp	r0, #0
   11dc4:	beq	11e44 <__mempcpy_chk@plt+0xd64>
   11dc8:	ldr	r0, [sp, #44]	; 0x2c
   11dcc:	ldr	r1, [sp, #28]
   11dd0:	b	11ce0 <__mempcpy_chk@plt+0xc00>
   11dd4:	ldr	r0, [sp, #40]	; 0x28
   11dd8:	cmp	r0, #0
   11ddc:	bne	11cf4 <__mempcpy_chk@plt+0xc14>
   11de0:	ldr	r0, [sp, #44]	; 0x2c
   11de4:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11de8:	b	11e18 <__mempcpy_chk@plt+0xd38>
   11dec:	ldr	r0, [sp, #44]	; 0x2c
   11df0:	ldr	r1, [sp, #28]
   11df4:	mov	r2, r5
   11df8:	mov	r3, r8
   11dfc:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11e00:	b	11e14 <__mempcpy_chk@plt+0xd34>
   11e04:	ldr	r0, [sp, #44]	; 0x2c
   11e08:	mov	r2, r5
   11e0c:	mov	r3, r8
   11e10:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11e14:	ldr	sl, [sp, #52]	; 0x34
   11e18:	ldr	r0, [sp, #44]	; 0x2c
   11e1c:	bl	125ac <__mempcpy_chk@plt+0x14cc>
   11e20:	ldr	r8, [sp, #48]	; 0x30
   11e24:	b	11664 <__mempcpy_chk@plt+0x584>
   11e28:	ldr	r0, [sp, #40]	; 0x28
   11e2c:	ldr	r2, [sp, #32]
   11e30:	cmp	r0, #0
   11e34:	beq	11e44 <__mempcpy_chk@plt+0xd64>
   11e38:	ldr	r0, [sp, #44]	; 0x2c
   11e3c:	ldr	r1, [sp, #20]
   11e40:	b	11ce0 <__mempcpy_chk@plt+0xc00>
   11e44:	ldr	r0, [sp, #44]	; 0x2c
   11e48:	mov	r1, r2
   11e4c:	bl	14e50 <__mempcpy_chk@plt+0x3d70>
   11e50:	b	11e18 <__mempcpy_chk@plt+0xd38>
   11e54:	ldr	r0, [sp, #44]	; 0x2c
   11e58:	ldr	r1, [sp, #28]
   11e5c:	mov	r2, r3
   11e60:	b	11ce0 <__mempcpy_chk@plt+0xc00>
   11e64:	ldr	r0, [sp, #12]
   11e68:	ldr	r1, [sp, #24]
   11e6c:	cmp	sl, #1
   11e70:	sub	r0, r0, sl
   11e74:	add	r1, r1, r0, lsl #2
   11e78:	str	r1, [sp, #24]
   11e7c:	blt	11e8c <__mempcpy_chk@plt+0xdac>
   11e80:	cmp	r0, #0
   11e84:	mov	r0, sl
   11e88:	bgt	11610 <__mempcpy_chk@plt+0x530>
   11e8c:	cmp	sl, #1
   11e90:	blt	11ecc <__mempcpy_chk@plt+0xdec>
   11e94:	movw	r1, #23506	; 0x5bd2
   11e98:	mov	r0, #0
   11e9c:	mov	r2, #5
   11ea0:	movt	r1, #1
   11ea4:	bl	10ef4 <dcgettext@plt>
   11ea8:	mov	r5, r0
   11eac:	ldr	r0, [sp, #24]
   11eb0:	ldr	r0, [r0]
   11eb4:	bl	13fd8 <__mempcpy_chk@plt+0x2ef8>
   11eb8:	mov	r3, r0
   11ebc:	mov	r0, #0
   11ec0:	mov	r1, #0
   11ec4:	mov	r2, r5
   11ec8:	bl	10f6c <error@plt>
   11ecc:	movw	r0, #29012	; 0x7154
   11ed0:	movt	r0, #2
   11ed4:	ldrb	r4, [r0]
   11ed8:	mov	r0, r4
   11edc:	sub	sp, fp, #40	; 0x28
   11ee0:	vpop	{d8}
   11ee4:	add	sp, sp, #4
   11ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eec:	movw	r1, #23870	; 0x5d3e
   11ef0:	movt	r1, #1
   11ef4:	b	11f00 <__mempcpy_chk@plt+0xe20>
   11ef8:	movw	r1, #23894	; 0x5d56
   11efc:	movt	r1, #1
   11f00:	mov	r0, #0
   11f04:	mov	r2, #5
   11f08:	bl	10ef4 <dcgettext@plt>
   11f0c:	mov	r4, r0
   11f10:	ldr	r0, [r8]
   11f14:	bl	13fd8 <__mempcpy_chk@plt+0x2ef8>
   11f18:	mov	r3, r0
   11f1c:	mov	r0, #1
   11f20:	mov	r1, #0
   11f24:	mov	r2, r4
   11f28:	bl	10f6c <error@plt>
   11f2c:	movw	r1, #23916	; 0x5d6c
   11f30:	mov	r0, #0
   11f34:	mov	r2, #5
   11f38:	movt	r1, #1
   11f3c:	bl	10ef4 <dcgettext@plt>
   11f40:	mov	r2, r0
   11f44:	add	r0, r4, #1
   11f48:	mov	r1, #0
   11f4c:	str	r5, [sp]
   11f50:	sub	r3, r0, r5
   11f54:	mov	r0, #1
   11f58:	bl	10f6c <error@plt>
   11f5c:	movw	r1, #23490	; 0x5bc2
   11f60:	mov	r0, #0
   11f64:	mov	r2, #5
   11f68:	movt	r1, #1
   11f6c:	bl	10ef4 <dcgettext@plt>
   11f70:	mov	r2, r0
   11f74:	mov	r0, #0
   11f78:	mov	r1, #0
   11f7c:	bl	10f6c <error@plt>
   11f80:	mov	r0, #1
   11f84:	bl	111dc <__mempcpy_chk@plt+0xfc>
   11f88:	mov	r0, #0
   11f8c:	bl	111dc <__mempcpy_chk@plt+0xfc>
   11f90:	push	{r4, r5, r6, sl, fp, lr}
   11f94:	add	fp, sp, #16
   11f98:	sub	sp, sp, #8
   11f9c:	mov	r4, r0
   11fa0:	ldrb	r0, [r0]
   11fa4:	cmp	r0, #39	; 0x27
   11fa8:	cmpne	r0, #34	; 0x22
   11fac:	bne	12010 <__mempcpy_chk@plt+0xf30>
   11fb0:	ldrb	r5, [r4, #1]
   11fb4:	cmp	r5, #0
   11fb8:	beq	12010 <__mempcpy_chk@plt+0xf30>
   11fbc:	ldrb	r0, [r4, #2]!
   11fc0:	mov	r6, #0
   11fc4:	cmp	r0, #0
   11fc8:	beq	12040 <__mempcpy_chk@plt+0xf60>
   11fcc:	movw	r0, #29013	; 0x7155
   11fd0:	movt	r0, #2
   11fd4:	ldrb	r0, [r0]
   11fd8:	cmp	r0, #0
   11fdc:	bne	12040 <__mempcpy_chk@plt+0xf60>
   11fe0:	movw	r1, #23955	; 0x5d93
   11fe4:	mov	r0, #0
   11fe8:	mov	r2, #5
   11fec:	mov	r6, #0
   11ff0:	movt	r1, #1
   11ff4:	bl	10ef4 <dcgettext@plt>
   11ff8:	mov	r2, r0
   11ffc:	mov	r0, #0
   12000:	mov	r1, #0
   12004:	mov	r3, r4
   12008:	bl	10f6c <error@plt>
   1200c:	b	12040 <__mempcpy_chk@plt+0xf60>
   12010:	bl	10ff0 <__errno_location@plt>
   12014:	mov	r1, #0
   12018:	mov	r2, #0
   1201c:	str	r1, [r0]
   12020:	add	r1, sp, #4
   12024:	mov	r0, r4
   12028:	bl	11050 <strtoimax@plt>
   1202c:	mov	r6, r1
   12030:	ldr	r1, [sp, #4]
   12034:	mov	r5, r0
   12038:	mov	r0, r4
   1203c:	bl	12378 <__mempcpy_chk@plt+0x1298>
   12040:	mov	r0, r5
   12044:	mov	r1, r6
   12048:	sub	sp, fp, #16
   1204c:	pop	{r4, r5, r6, sl, fp, pc}
   12050:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12054:	add	fp, sp, #24
   12058:	sub	sp, sp, #8
   1205c:	mov	r7, r0
   12060:	mov	r4, r0
   12064:	ldrb	r5, [r7, #1]!
   12068:	cmp	r5, #120	; 0x78
   1206c:	bne	120dc <__mempcpy_chk@plt+0xffc>
   12070:	add	r5, r4, #2
   12074:	bl	10fcc <__ctype_b_loc@plt>
   12078:	ldr	r2, [r0]
   1207c:	mov	r1, #0
   12080:	mov	r0, #0
   12084:	ldrb	r3, [r5, r1]
   12088:	add	r7, r2, r3, lsl #1
   1208c:	ldrb	r7, [r7, #1]
   12090:	tst	r7, #16
   12094:	beq	12130 <__mempcpy_chk@plt+0x1050>
   12098:	sub	r7, r3, #97	; 0x61
   1209c:	lsl	r0, r0, #4
   120a0:	uxtb	r6, r7
   120a4:	mvn	r7, #86	; 0x56
   120a8:	cmp	r6, #6
   120ac:	bcc	120c4 <__mempcpy_chk@plt+0xfe4>
   120b0:	sub	r7, r3, #65	; 0x41
   120b4:	uxtb	r7, r7
   120b8:	cmp	r7, #6
   120bc:	mvn	r7, #47	; 0x2f
   120c0:	mvncc	r7, #54	; 0x36
   120c4:	add	r3, r7, r3
   120c8:	add	r1, r1, #1
   120cc:	add	r0, r3, r0
   120d0:	cmp	r1, #2
   120d4:	bcc	12084 <__mempcpy_chk@plt+0xfa4>
   120d8:	b	12138 <__mempcpy_chk@plt+0x1058>
   120dc:	and	r0, r5, #248	; 0xf8
   120e0:	cmp	r0, #48	; 0x30
   120e4:	bne	12150 <__mempcpy_chk@plt+0x1070>
   120e8:	sub	r0, r5, #48	; 0x30
   120ec:	mov	r2, #0
   120f0:	clz	r0, r0
   120f4:	lsr	r0, r0, #5
   120f8:	and	r0, r0, r1
   120fc:	add	r1, r7, r0
   12100:	mov	r0, #0
   12104:	ldrb	r3, [r1, r2]
   12108:	and	r7, r3, #248	; 0xf8
   1210c:	cmp	r7, #48	; 0x30
   12110:	bne	12128 <__mempcpy_chk@plt+0x1048>
   12114:	add	r0, r3, r0, lsl #3
   12118:	add	r2, r2, #1
   1211c:	sub	r0, r0, #48	; 0x30
   12120:	cmp	r2, #3
   12124:	bcc	12104 <__mempcpy_chk@plt+0x1024>
   12128:	add	r7, r1, r2
   1212c:	b	1213c <__mempcpy_chk@plt+0x105c>
   12130:	cmp	r1, #0
   12134:	beq	1234c <__mempcpy_chk@plt+0x126c>
   12138:	add	r7, r5, r1
   1213c:	bl	110d4 <putchar_unlocked@plt>
   12140:	mvn	r0, r4
   12144:	add	r0, r7, r0
   12148:	sub	sp, fp, #24
   1214c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12150:	cmp	r5, #0
   12154:	beq	122b4 <__mempcpy_chk@plt+0x11d4>
   12158:	movw	r0, #24135	; 0x5e47
   1215c:	mov	r1, r5
   12160:	mov	r2, #12
   12164:	movt	r0, #1
   12168:	bl	11044 <memchr@plt>
   1216c:	cmp	r0, #0
   12170:	beq	121ec <__mempcpy_chk@plt+0x110c>
   12174:	sub	r0, r5, #97	; 0x61
   12178:	add	r7, r4, #2
   1217c:	cmp	r0, #21
   12180:	bhi	1230c <__mempcpy_chk@plt+0x122c>
   12184:	add	r1, pc, #0
   12188:	ldr	pc, [r1, r0, lsl #2]
   1218c:	andeq	r2, r1, r4, ror #3
   12190:	ldrdeq	r2, [r1], -ip
   12194:	andeq	r2, r1, r0, ror r3
   12198:	andeq	r2, r1, ip, lsl #6
   1219c:	strdeq	r2, [r1], -r4
   121a0:	strdeq	r2, [r1], -ip
   121a4:	andeq	r2, r1, ip, lsl #6
   121a8:	andeq	r2, r1, ip, lsl #6
   121ac:	andeq	r2, r1, ip, lsl #6
   121b0:	andeq	r2, r1, ip, lsl #6
   121b4:	andeq	r2, r1, ip, lsl #6
   121b8:	andeq	r2, r1, ip, lsl #6
   121bc:	andeq	r2, r1, ip, lsl #6
   121c0:	andeq	r2, r1, r4, lsl #6
   121c4:	andeq	r2, r1, ip, lsl #6
   121c8:	andeq	r2, r1, ip, lsl #6
   121cc:	andeq	r2, r1, ip, lsl #6
   121d0:	ldrdeq	r2, [r1], -r4
   121d4:	andeq	r2, r1, ip, lsl #6
   121d8:	andeq	r2, r1, r4, ror #5
   121dc:	andeq	r2, r1, ip, lsl #6
   121e0:	andeq	r2, r1, ip, ror #5
   121e4:	mov	r0, #7
   121e8:	b	1213c <__mempcpy_chk@plt+0x105c>
   121ec:	orr	r0, r5, #32
   121f0:	cmp	r0, #117	; 0x75
   121f4:	bne	122b4 <__mempcpy_chk@plt+0x11d4>
   121f8:	mov	r8, #8
   121fc:	cmp	r5, #117	; 0x75
   12200:	movweq	r8, #4
   12204:	bl	10fcc <__ctype_b_loc@plt>
   12208:	ldr	r1, [r0]
   1220c:	mov	r6, #0
   12210:	mvn	r0, #1
   12214:	ldrb	r2, [r4, -r0]
   12218:	add	r3, r1, r2, lsl #1
   1221c:	ldrb	r3, [r3, #1]
   12220:	tst	r3, #16
   12224:	beq	1234c <__mempcpy_chk@plt+0x126c>
   12228:	lsl	r3, r6, #4
   1222c:	sub	r6, r2, #97	; 0x61
   12230:	uxtb	r7, r6
   12234:	mvn	r6, #86	; 0x56
   12238:	cmp	r7, #6
   1223c:	bcc	12254 <__mempcpy_chk@plt+0x1174>
   12240:	sub	r7, r2, #65	; 0x41
   12244:	mvn	r6, #47	; 0x2f
   12248:	uxtb	r7, r7
   1224c:	cmp	r7, #6
   12250:	mvncc	r6, #54	; 0x36
   12254:	add	r2, r6, r2
   12258:	sub	r0, r0, #1
   1225c:	add	r6, r2, r3
   12260:	add	r2, r8, r0
   12264:	add	r2, r2, #3
   12268:	cmp	r2, #1
   1226c:	bgt	12214 <__mempcpy_chk@plt+0x1134>
   12270:	cmp	r6, #159	; 0x9f
   12274:	bhi	12284 <__mempcpy_chk@plt+0x11a4>
   12278:	cmp	r6, #36	; 0x24
   1227c:	cmpne	r6, #96	; 0x60
   12280:	bne	12314 <__mempcpy_chk@plt+0x1234>
   12284:	mov	r1, r6
   12288:	bfc	r1, #0, #11
   1228c:	cmp	r1, #55296	; 0xd800
   12290:	beq	1231c <__mempcpy_chk@plt+0x123c>
   12294:	sub	r7, r4, r0
   12298:	movw	r0, #29004	; 0x714c
   1229c:	mov	r1, r6
   122a0:	mov	r2, #0
   122a4:	movt	r0, #2
   122a8:	ldr	r0, [r0]
   122ac:	bl	14314 <__mempcpy_chk@plt+0x3234>
   122b0:	b	12140 <__mempcpy_chk@plt+0x1060>
   122b4:	mov	r0, #92	; 0x5c
   122b8:	bl	110d4 <putchar_unlocked@plt>
   122bc:	ldrb	r0, [r7]
   122c0:	cmp	r0, #0
   122c4:	beq	12140 <__mempcpy_chk@plt+0x1060>
   122c8:	bl	110d4 <putchar_unlocked@plt>
   122cc:	add	r7, r4, #2
   122d0:	b	12140 <__mempcpy_chk@plt+0x1060>
   122d4:	mov	r0, #13
   122d8:	b	1213c <__mempcpy_chk@plt+0x105c>
   122dc:	mov	r0, #8
   122e0:	b	1213c <__mempcpy_chk@plt+0x105c>
   122e4:	mov	r0, #9
   122e8:	b	1213c <__mempcpy_chk@plt+0x105c>
   122ec:	mov	r0, #11
   122f0:	b	1213c <__mempcpy_chk@plt+0x105c>
   122f4:	mov	r0, #27
   122f8:	b	1213c <__mempcpy_chk@plt+0x105c>
   122fc:	mov	r0, #12
   12300:	b	1213c <__mempcpy_chk@plt+0x105c>
   12304:	mov	r0, #10
   12308:	b	1213c <__mempcpy_chk@plt+0x105c>
   1230c:	mov	r0, r5
   12310:	b	1213c <__mempcpy_chk@plt+0x105c>
   12314:	cmp	r6, #64	; 0x40
   12318:	beq	12284 <__mempcpy_chk@plt+0x11a4>
   1231c:	movw	r1, #24147	; 0x5e53
   12320:	mov	r0, #0
   12324:	mov	r2, #5
   12328:	movt	r1, #1
   1232c:	bl	10ef4 <dcgettext@plt>
   12330:	mov	r2, r0
   12334:	mov	r0, #1
   12338:	mov	r1, #0
   1233c:	mov	r3, r5
   12340:	str	r8, [sp]
   12344:	str	r6, [sp, #4]
   12348:	bl	10f6c <error@plt>
   1234c:	movw	r1, #24098	; 0x5e22
   12350:	mov	r0, #0
   12354:	mov	r2, #5
   12358:	movt	r1, #1
   1235c:	bl	10ef4 <dcgettext@plt>
   12360:	mov	r2, r0
   12364:	mov	r0, #1
   12368:	mov	r1, #0
   1236c:	bl	10f6c <error@plt>
   12370:	mov	r0, #0
   12374:	bl	10fd8 <exit@plt>
   12378:	push	{r4, r5, r6, sl, fp, lr}
   1237c:	add	fp, sp, #16
   12380:	mov	r5, r1
   12384:	mov	r4, r0
   12388:	bl	10ff0 <__errno_location@plt>
   1238c:	ldr	r6, [r0]
   12390:	cmp	r6, #0
   12394:	beq	123b8 <__mempcpy_chk@plt+0x12d8>
   12398:	mov	r0, r4
   1239c:	bl	13fd8 <__mempcpy_chk@plt+0x2ef8>
   123a0:	movw	r2, #23891	; 0x5d53
   123a4:	mov	r3, r0
   123a8:	mov	r0, #0
   123ac:	mov	r1, r6
   123b0:	movt	r2, #1
   123b4:	b	12408 <__mempcpy_chk@plt+0x1328>
   123b8:	ldrb	r0, [r5]
   123bc:	cmp	r0, #0
   123c0:	popeq	{r4, r5, r6, sl, fp, pc}
   123c4:	cmp	r4, r5
   123c8:	beq	123d8 <__mempcpy_chk@plt+0x12f8>
   123cc:	movw	r1, #24057	; 0x5df9
   123d0:	movt	r1, #1
   123d4:	b	123e0 <__mempcpy_chk@plt+0x1300>
   123d8:	movw	r1, #24028	; 0x5ddc
   123dc:	movt	r1, #1
   123e0:	mov	r0, #0
   123e4:	mov	r2, #5
   123e8:	bl	10ef4 <dcgettext@plt>
   123ec:	mov	r5, r0
   123f0:	mov	r0, r4
   123f4:	bl	13fd8 <__mempcpy_chk@plt+0x2ef8>
   123f8:	mov	r3, r0
   123fc:	mov	r0, #0
   12400:	mov	r1, #0
   12404:	mov	r2, r5
   12408:	bl	10f6c <error@plt>
   1240c:	movw	r0, #29012	; 0x7154
   12410:	mov	r1, #1
   12414:	movt	r0, #2
   12418:	strb	r1, [r0]
   1241c:	pop	{r4, r5, r6, sl, fp, pc}
   12420:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12424:	add	fp, sp, #24
   12428:	vpush	{d8}
   1242c:	sub	sp, sp, #8
   12430:	mov	r4, r1
   12434:	add	r1, sp, #4
   12438:	mov	r5, r0
   1243c:	bl	10ed0 <strtold@plt>
   12440:	ldr	r7, [sp, #4]
   12444:	vmov.f64	d8, d0
   12448:	ldrb	r0, [r7]
   1244c:	cmp	r0, #0
   12450:	beq	1248c <__mempcpy_chk@plt+0x13ac>
   12454:	bl	10ff0 <__errno_location@plt>
   12458:	ldr	r8, [r0]
   1245c:	mov	r6, r0
   12460:	mov	r1, sp
   12464:	mov	r0, r5
   12468:	bl	15080 <__mempcpy_chk@plt+0x3fa0>
   1246c:	ldr	r0, [sp]
   12470:	cmp	r7, r0
   12474:	bcs	12488 <__mempcpy_chk@plt+0x13a8>
   12478:	str	r0, [sp, #4]
   1247c:	mov	r7, r0
   12480:	vmov.f64	d8, d0
   12484:	b	1248c <__mempcpy_chk@plt+0x13ac>
   12488:	str	r8, [r6]
   1248c:	cmp	r4, #0
   12490:	vmov.f64	d0, d8
   12494:	strne	r7, [r4]
   12498:	sub	sp, fp, #32
   1249c:	vpop	{d8}
   124a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   124a4:	movw	r1, #29016	; 0x7158
   124a8:	movt	r1, #2
   124ac:	str	r0, [r1]
   124b0:	bx	lr
   124b4:	movw	r1, #29020	; 0x715c
   124b8:	movt	r1, #2
   124bc:	strb	r0, [r1]
   124c0:	bx	lr
   124c4:	push	{r4, r5, r6, sl, fp, lr}
   124c8:	add	fp, sp, #16
   124cc:	sub	sp, sp, #8
   124d0:	movw	r0, #29004	; 0x714c
   124d4:	movt	r0, #2
   124d8:	ldr	r0, [r0]
   124dc:	bl	1512c <__mempcpy_chk@plt+0x404c>
   124e0:	cmp	r0, #0
   124e4:	beq	1250c <__mempcpy_chk@plt+0x142c>
   124e8:	movw	r0, #29020	; 0x715c
   124ec:	movt	r0, #2
   124f0:	ldrb	r0, [r0]
   124f4:	cmp	r0, #0
   124f8:	beq	1252c <__mempcpy_chk@plt+0x144c>
   124fc:	bl	10ff0 <__errno_location@plt>
   12500:	ldr	r0, [r0]
   12504:	cmp	r0, #32
   12508:	bne	1252c <__mempcpy_chk@plt+0x144c>
   1250c:	movw	r0, #29000	; 0x7148
   12510:	movt	r0, #2
   12514:	ldr	r0, [r0]
   12518:	bl	1512c <__mempcpy_chk@plt+0x404c>
   1251c:	cmp	r0, #0
   12520:	subeq	sp, fp, #16
   12524:	popeq	{r4, r5, r6, sl, fp, pc}
   12528:	b	1259c <__mempcpy_chk@plt+0x14bc>
   1252c:	movw	r1, #24263	; 0x5ec7
   12530:	mov	r0, #0
   12534:	mov	r2, #5
   12538:	movt	r1, #1
   1253c:	bl	10ef4 <dcgettext@plt>
   12540:	mov	r4, r0
   12544:	movw	r0, #29016	; 0x7158
   12548:	movt	r0, #2
   1254c:	ldr	r6, [r0]
   12550:	bl	10ff0 <__errno_location@plt>
   12554:	ldr	r5, [r0]
   12558:	cmp	r6, #0
   1255c:	bne	12578 <__mempcpy_chk@plt+0x1498>
   12560:	movw	r2, #23891	; 0x5d53
   12564:	mov	r0, #0
   12568:	mov	r1, r5
   1256c:	mov	r3, r4
   12570:	movt	r2, #1
   12574:	b	12598 <__mempcpy_chk@plt+0x14b8>
   12578:	mov	r0, r6
   1257c:	bl	13d98 <__mempcpy_chk@plt+0x2cb8>
   12580:	movw	r2, #24275	; 0x5ed3
   12584:	mov	r3, r0
   12588:	str	r4, [sp]
   1258c:	mov	r0, #0
   12590:	mov	r1, r5
   12594:	movt	r2, #1
   12598:	bl	10f6c <error@plt>
   1259c:	movw	r0, #28924	; 0x70fc
   125a0:	movt	r0, #2
   125a4:	ldr	r0, [r0]
   125a8:	bl	10eac <_exit@plt>
   125ac:	push	{r4, r5, r6, sl, fp, lr}
   125b0:	add	fp, sp, #16
   125b4:	mov	r4, r0
   125b8:	bl	10ff0 <__errno_location@plt>
   125bc:	ldr	r6, [r0]
   125c0:	mov	r5, r0
   125c4:	mov	r0, r4
   125c8:	bl	10e94 <free@plt>
   125cc:	str	r6, [r5]
   125d0:	pop	{r4, r5, r6, sl, fp, pc}
   125d4:	push	{r4, r5, fp, lr}
   125d8:	add	fp, sp, #8
   125dc:	cmp	r0, #0
   125e0:	beq	12674 <__mempcpy_chk@plt+0x1594>
   125e4:	mov	r1, #47	; 0x2f
   125e8:	mov	r4, r0
   125ec:	bl	11080 <strrchr@plt>
   125f0:	cmp	r0, #0
   125f4:	mov	r5, r4
   125f8:	addne	r5, r0, #1
   125fc:	sub	r0, r5, r4
   12600:	cmp	r0, #7
   12604:	blt	12658 <__mempcpy_chk@plt+0x1578>
   12608:	movw	r1, #24338	; 0x5f12
   1260c:	sub	r0, r5, #7
   12610:	mov	r2, #7
   12614:	movt	r1, #1
   12618:	bl	110bc <strncmp@plt>
   1261c:	cmp	r0, #0
   12620:	bne	12658 <__mempcpy_chk@plt+0x1578>
   12624:	movw	r1, #24346	; 0x5f1a
   12628:	mov	r0, r5
   1262c:	mov	r2, #3
   12630:	movt	r1, #1
   12634:	bl	110bc <strncmp@plt>
   12638:	cmp	r0, #0
   1263c:	beq	12648 <__mempcpy_chk@plt+0x1568>
   12640:	mov	r4, r5
   12644:	b	12658 <__mempcpy_chk@plt+0x1578>
   12648:	movw	r0, #28992	; 0x7140
   1264c:	add	r4, r5, #3
   12650:	movt	r0, #2
   12654:	str	r4, [r0]
   12658:	movw	r0, #28996	; 0x7144
   1265c:	movt	r0, #2
   12660:	str	r4, [r0]
   12664:	movw	r0, #29024	; 0x7160
   12668:	movt	r0, #2
   1266c:	str	r4, [r0]
   12670:	pop	{r4, r5, fp, pc}
   12674:	movw	r0, #29000	; 0x7148
   12678:	movt	r0, #2
   1267c:	ldr	r1, [r0]
   12680:	movw	r0, #24282	; 0x5eda
   12684:	movt	r0, #1
   12688:	bl	110b0 <fputs@plt>
   1268c:	bl	110c8 <abort@plt>
   12690:	push	{r4, r5, r6, sl, fp, lr}
   12694:	add	fp, sp, #16
   12698:	mov	r4, r0
   1269c:	movw	r0, #29032	; 0x7168
   126a0:	movt	r0, #2
   126a4:	cmp	r4, #0
   126a8:	moveq	r4, r0
   126ac:	bl	10ff0 <__errno_location@plt>
   126b0:	ldr	r6, [r0]
   126b4:	mov	r5, r0
   126b8:	mov	r0, r4
   126bc:	mov	r1, #48	; 0x30
   126c0:	bl	14d0c <__mempcpy_chk@plt+0x3c2c>
   126c4:	str	r6, [r5]
   126c8:	pop	{r4, r5, r6, sl, fp, pc}
   126cc:	movw	r1, #29032	; 0x7168
   126d0:	cmp	r0, #0
   126d4:	movt	r1, #2
   126d8:	movne	r1, r0
   126dc:	ldr	r0, [r1]
   126e0:	bx	lr
   126e4:	movw	r2, #29032	; 0x7168
   126e8:	cmp	r0, #0
   126ec:	movt	r2, #2
   126f0:	movne	r2, r0
   126f4:	str	r1, [r2]
   126f8:	bx	lr
   126fc:	movw	r3, #29032	; 0x7168
   12700:	cmp	r0, #0
   12704:	movt	r3, #2
   12708:	movne	r3, r0
   1270c:	ubfx	r0, r1, #5, #3
   12710:	and	r1, r1, #31
   12714:	add	r0, r3, r0, lsl #2
   12718:	ldr	r3, [r0, #8]
   1271c:	eor	r2, r2, r3, lsr r1
   12720:	and	r2, r2, #1
   12724:	eor	r2, r3, r2, lsl r1
   12728:	str	r2, [r0, #8]
   1272c:	mov	r0, #1
   12730:	and	r0, r0, r3, lsr r1
   12734:	bx	lr
   12738:	movw	r2, #29032	; 0x7168
   1273c:	cmp	r0, #0
   12740:	movt	r2, #2
   12744:	movne	r2, r0
   12748:	ldr	r0, [r2, #4]
   1274c:	str	r1, [r2, #4]
   12750:	bx	lr
   12754:	movw	r3, #29032	; 0x7168
   12758:	cmp	r0, #0
   1275c:	movt	r3, #2
   12760:	movne	r3, r0
   12764:	cmp	r1, #0
   12768:	mov	r0, #10
   1276c:	cmpne	r2, #0
   12770:	str	r0, [r3]
   12774:	bne	12784 <__mempcpy_chk@plt+0x16a4>
   12778:	push	{fp, lr}
   1277c:	mov	fp, sp
   12780:	bl	110c8 <abort@plt>
   12784:	str	r1, [r3, #40]	; 0x28
   12788:	str	r2, [r3, #44]	; 0x2c
   1278c:	bx	lr
   12790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12794:	add	fp, sp, #28
   12798:	sub	sp, sp, #20
   1279c:	mov	r7, r0
   127a0:	ldr	r0, [fp, #8]
   127a4:	movw	r5, #29032	; 0x7168
   127a8:	mov	r8, r3
   127ac:	mov	r9, r2
   127b0:	mov	sl, r1
   127b4:	movt	r5, #2
   127b8:	cmp	r0, #0
   127bc:	movne	r5, r0
   127c0:	bl	10ff0 <__errno_location@plt>
   127c4:	mov	r4, r0
   127c8:	ldm	r5, {r0, r1}
   127cc:	ldr	r2, [r5, #40]	; 0x28
   127d0:	ldr	r3, [r5, #44]	; 0x2c
   127d4:	add	r5, r5, #8
   127d8:	ldr	r6, [r4]
   127dc:	stm	sp, {r0, r1, r5}
   127e0:	str	r2, [sp, #12]
   127e4:	str	r3, [sp, #16]
   127e8:	mov	r0, r7
   127ec:	mov	r1, sl
   127f0:	mov	r2, r9
   127f4:	mov	r3, r8
   127f8:	bl	12808 <__mempcpy_chk@plt+0x1728>
   127fc:	str	r6, [r4]
   12800:	sub	sp, fp, #28
   12804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1280c:	add	fp, sp, #28
   12810:	sub	sp, sp, #156	; 0x9c
   12814:	str	r0, [fp, #-56]	; 0xffffffc8
   12818:	ldr	r0, [fp, #12]
   1281c:	mov	r4, r1
   12820:	str	r3, [sp, #80]	; 0x50
   12824:	str	r2, [fp, #-84]	; 0xffffffac
   12828:	and	r1, r0, #4
   1282c:	str	r1, [sp, #24]
   12830:	and	r1, r0, #1
   12834:	str	r1, [sp, #28]
   12838:	ubfx	r7, r0, #1, #1
   1283c:	bl	10f3c <__ctype_get_mb_cur_max@plt>
   12840:	str	r0, [sp, #32]
   12844:	ldr	r0, [fp, #24]
   12848:	ldr	r9, [fp, #8]
   1284c:	mov	r2, #0
   12850:	mov	r1, #0
   12854:	mov	r5, #0
   12858:	str	r2, [sp, #52]	; 0x34
   1285c:	mov	r2, #1
   12860:	str	r0, [sp, #72]	; 0x48
   12864:	ldr	r0, [fp, #20]
   12868:	str	r0, [sp, #64]	; 0x40
   1286c:	mov	r0, #0
   12870:	str	r0, [sp, #92]	; 0x5c
   12874:	mov	r0, #0
   12878:	str	r0, [fp, #-76]	; 0xffffffb4
   1287c:	mov	r0, #0
   12880:	cmp	r9, #10
   12884:	str	r1, [sp, #68]	; 0x44
   12888:	bhi	13888 <__mempcpy_chk@plt+0x27a8>
   1288c:	add	r1, pc, #28
   12890:	ldr	ip, [fp, #-84]	; 0xffffffac
   12894:	ldr	lr, [sp, #80]	; 0x50
   12898:	mov	r6, r4
   1289c:	mov	r8, #0
   128a0:	mov	r3, #1
   128a4:	mov	sl, #0
   128a8:	mov	r4, r2
   128ac:	ldr	pc, [r1, r9, lsl #2]
   128b0:	andeq	r2, r1, r0, lsl #19
   128b4:			; <UNDEFINED> instruction: 0x000129bc
   128b8:	muleq	r1, r0, r9
   128bc:	andeq	r2, r1, r8, ror r9
   128c0:			; <UNDEFINED> instruction: 0x000129b0
   128c4:	andeq	r2, r1, r8, lsl #20
   128c8:	andeq	r2, r1, r0, lsr #19
   128cc:	andeq	r2, r1, r8, ror #20
   128d0:	ldrdeq	r2, [r1], -ip
   128d4:	ldrdeq	r2, [r1], -ip
   128d8:	andeq	r2, r1, r4, lsl #18
   128dc:	movw	r0, #24430	; 0x5f6e
   128e0:	mov	r1, r9
   128e4:	movt	r0, #1
   128e8:	bl	13ff0 <__mempcpy_chk@plt+0x2f10>
   128ec:	str	r0, [sp, #64]	; 0x40
   128f0:	movw	r0, #24432	; 0x5f70
   128f4:	mov	r1, r9
   128f8:	movt	r0, #1
   128fc:	bl	13ff0 <__mempcpy_chk@plt+0x2f10>
   12900:	str	r0, [sp, #72]	; 0x48
   12904:	mov	r8, #0
   12908:	mov	sl, r7
   1290c:	tst	r7, #1
   12910:	str	r5, [fp, #-48]	; 0xffffffd0
   12914:	bne	12950 <__mempcpy_chk@plt+0x1870>
   12918:	ldr	r0, [sp, #64]	; 0x40
   1291c:	ldrb	r0, [r0]
   12920:	cmp	r0, #0
   12924:	beq	12950 <__mempcpy_chk@plt+0x1870>
   12928:	ldr	r1, [sp, #64]	; 0x40
   1292c:	mov	r8, #0
   12930:	add	r1, r1, #1
   12934:	cmp	r8, r6
   12938:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1293c:	strbcc	r0, [r2, r8]
   12940:	ldrb	r0, [r1, r8]
   12944:	add	r8, r8, #1
   12948:	cmp	r0, #0
   1294c:	bne	12934 <__mempcpy_chk@plt+0x1854>
   12950:	ldr	r7, [sp, #72]	; 0x48
   12954:	mov	r0, r7
   12958:	bl	10fe4 <strlen@plt>
   1295c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12960:	ldr	lr, [sp, #80]	; 0x50
   12964:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12968:	str	r0, [fp, #-76]	; 0xffffffb4
   1296c:	str	r7, [sp, #92]	; 0x5c
   12970:	mov	r3, #1
   12974:	b	12a68 <__mempcpy_chk@plt+0x1988>
   12978:	mov	r0, #1
   1297c:	b	129bc <__mempcpy_chk@plt+0x18dc>
   12980:	mov	r9, #0
   12984:	mov	r8, #0
   12988:	mov	r3, r0
   1298c:	b	12a64 <__mempcpy_chk@plt+0x1984>
   12990:	tst	r7, #1
   12994:	bne	129bc <__mempcpy_chk@plt+0x18dc>
   12998:	mov	r3, r0
   1299c:	b	129e4 <__mempcpy_chk@plt+0x1904>
   129a0:	mov	r0, #1
   129a4:	mov	r8, #0
   129a8:	mov	r9, #5
   129ac:	b	12a1c <__mempcpy_chk@plt+0x193c>
   129b0:	mov	r3, #1
   129b4:	tst	r7, #1
   129b8:	beq	129e4 <__mempcpy_chk@plt+0x1904>
   129bc:	mov	r1, #1
   129c0:	mov	r8, #0
   129c4:	mov	r9, #2
   129c8:	mov	r3, r0
   129cc:	mov	sl, #1
   129d0:	str	r1, [fp, #-76]	; 0xffffffb4
   129d4:	movw	r1, #24432	; 0x5f70
   129d8:	movt	r1, #1
   129dc:	str	r1, [sp, #92]	; 0x5c
   129e0:	b	12a68 <__mempcpy_chk@plt+0x1988>
   129e4:	cmp	r6, #0
   129e8:	mov	r8, #1
   129ec:	mov	r9, #2
   129f0:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   129f4:	movne	r0, #39	; 0x27
   129f8:	strbne	r0, [r1]
   129fc:	movw	r0, #24432	; 0x5f70
   12a00:	movt	r0, #1
   12a04:	b	12a58 <__mempcpy_chk@plt+0x1978>
   12a08:	mov	r9, #5
   12a0c:	tst	r7, #1
   12a10:	beq	12a38 <__mempcpy_chk@plt+0x1958>
   12a14:	mov	r0, #1
   12a18:	mov	r8, #0
   12a1c:	str	r0, [fp, #-76]	; 0xffffffb4
   12a20:	movw	r0, #24428	; 0x5f6c
   12a24:	mov	r3, #1
   12a28:	mov	sl, #1
   12a2c:	movt	r0, #1
   12a30:	str	r0, [sp, #92]	; 0x5c
   12a34:	b	12a68 <__mempcpy_chk@plt+0x1988>
   12a38:	cmp	r6, #0
   12a3c:	mov	r8, #1
   12a40:	mov	r3, #1
   12a44:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12a48:	movne	r0, #34	; 0x22
   12a4c:	strbne	r0, [r1]
   12a50:	movw	r0, #24428	; 0x5f6c
   12a54:	movt	r0, #1
   12a58:	str	r0, [sp, #92]	; 0x5c
   12a5c:	mov	r0, #1
   12a60:	str	r0, [fp, #-76]	; 0xffffffb4
   12a64:	mov	sl, #0
   12a68:	ldr	r0, [fp, #16]
   12a6c:	mov	r7, #0
   12a70:	str	r9, [fp, #-64]	; 0xffffffc0
   12a74:	str	sl, [fp, #-72]	; 0xffffffb8
   12a78:	str	r3, [sp, #84]	; 0x54
   12a7c:	cmp	r0, #0
   12a80:	movwne	r0, #1
   12a84:	and	r0, r0, sl
   12a88:	str	r0, [fp, #-88]	; 0xffffffa8
   12a8c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12a90:	cmp	r0, #0
   12a94:	movwne	r0, #1
   12a98:	subs	r2, r9, #2
   12a9c:	and	r1, r0, sl
   12aa0:	str	r2, [fp, #-80]	; 0xffffffb0
   12aa4:	and	r1, r3, r1
   12aa8:	str	r1, [sp, #44]	; 0x2c
   12aac:	clz	r1, r2
   12ab0:	lsr	r1, r1, #5
   12ab4:	and	r1, r1, sl
   12ab8:	str	r1, [sp, #56]	; 0x38
   12abc:	mov	r1, r2
   12ac0:	eor	r2, sl, #1
   12ac4:	movwne	r1, #1
   12ac8:	str	r2, [sp, #88]	; 0x58
   12acc:	orr	r2, r1, r2
   12ad0:	and	r1, r1, r3
   12ad4:	and	r0, r0, r1
   12ad8:	str	r2, [sp, #60]	; 0x3c
   12adc:	str	r1, [fp, #-68]	; 0xffffffbc
   12ae0:	str	r0, [fp, #-60]	; 0xffffffc4
   12ae4:	eor	r0, r3, #1
   12ae8:	str	r0, [sp, #48]	; 0x30
   12aec:	cmn	lr, #1
   12af0:	beq	12b00 <__mempcpy_chk@plt+0x1a20>
   12af4:	cmp	r7, lr
   12af8:	bne	12b0c <__mempcpy_chk@plt+0x1a2c>
   12afc:	b	136b8 <__mempcpy_chk@plt+0x25d8>
   12b00:	ldrb	r0, [ip, r7]
   12b04:	cmp	r0, #0
   12b08:	beq	136c0 <__mempcpy_chk@plt+0x25e0>
   12b0c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b10:	mov	r9, #0
   12b14:	str	r5, [fp, #-48]	; 0xffffffd0
   12b18:	str	r6, [fp, #-52]	; 0xffffffcc
   12b1c:	cmp	r0, #0
   12b20:	beq	12b60 <__mempcpy_chk@plt+0x1a80>
   12b24:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b28:	mov	r5, r4
   12b2c:	add	r4, r7, r0
   12b30:	cmp	r0, #2
   12b34:	bcc	12b50 <__mempcpy_chk@plt+0x1a70>
   12b38:	cmn	lr, #1
   12b3c:	bne	12b50 <__mempcpy_chk@plt+0x1a70>
   12b40:	mov	r0, ip
   12b44:	bl	10fe4 <strlen@plt>
   12b48:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b4c:	mov	lr, r0
   12b50:	cmp	r4, lr
   12b54:	bls	12b68 <__mempcpy_chk@plt+0x1a88>
   12b58:	mov	r6, #0
   12b5c:	b	12ba8 <__mempcpy_chk@plt+0x1ac8>
   12b60:	mov	r6, #0
   12b64:	b	12bac <__mempcpy_chk@plt+0x1acc>
   12b68:	ldr	r1, [sp, #92]	; 0x5c
   12b6c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12b70:	add	r0, ip, r7
   12b74:	mov	r4, lr
   12b78:	bl	10edc <memcmp@plt>
   12b7c:	ldr	r2, [sp, #88]	; 0x58
   12b80:	cmp	r0, #0
   12b84:	mov	r1, r0
   12b88:	movwne	r1, #1
   12b8c:	orr	r1, r1, r2
   12b90:	tst	r1, #1
   12b94:	beq	13754 <__mempcpy_chk@plt+0x2674>
   12b98:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b9c:	clz	r0, r0
   12ba0:	mov	lr, r4
   12ba4:	lsr	r6, r0, #5
   12ba8:	mov	r4, r5
   12bac:	ldrb	r5, [ip, r7]
   12bb0:	cmp	r5, #126	; 0x7e
   12bb4:	bhi	12f7c <__mempcpy_chk@plt+0x1e9c>
   12bb8:	add	r3, pc, #16
   12bbc:	mov	sl, #1
   12bc0:	mov	r2, #110	; 0x6e
   12bc4:	mov	r0, #97	; 0x61
   12bc8:	mov	r1, #0
   12bcc:	ldr	pc, [r3, r5, lsl #2]
   12bd0:	andeq	r2, r1, r0, ror #28
   12bd4:	andeq	r2, r1, ip, ror pc
   12bd8:	andeq	r2, r1, ip, ror pc
   12bdc:	andeq	r2, r1, ip, ror pc
   12be0:	andeq	r2, r1, ip, ror pc
   12be4:	andeq	r2, r1, ip, ror pc
   12be8:	andeq	r2, r1, ip, ror pc
   12bec:	andeq	r3, r1, r0, lsr #32
   12bf0:	andeq	r2, r1, r0, asr #28
   12bf4:	andeq	r2, r1, r8, lsr lr
   12bf8:	andeq	r2, r1, ip, asr #28
   12bfc:	ldrdeq	r2, [r1], -r0
   12c00:	andeq	r2, r1, r0, lsr lr
   12c04:	andeq	r2, r1, r8, asr #28
   12c08:	andeq	r2, r1, ip, ror pc
   12c0c:	andeq	r2, r1, ip, ror pc
   12c10:	andeq	r2, r1, ip, ror pc
   12c14:	andeq	r2, r1, ip, ror pc
   12c18:	andeq	r2, r1, ip, ror pc
   12c1c:	andeq	r2, r1, ip, ror pc
   12c20:	andeq	r2, r1, ip, ror pc
   12c24:	andeq	r2, r1, ip, ror pc
   12c28:	andeq	r2, r1, ip, ror pc
   12c2c:	andeq	r2, r1, ip, ror pc
   12c30:	andeq	r2, r1, ip, ror pc
   12c34:	andeq	r2, r1, ip, ror pc
   12c38:	andeq	r2, r1, ip, ror pc
   12c3c:	andeq	r2, r1, ip, ror pc
   12c40:	andeq	r2, r1, ip, ror pc
   12c44:	andeq	r2, r1, ip, ror pc
   12c48:	andeq	r2, r1, ip, ror pc
   12c4c:	andeq	r2, r1, ip, ror pc
   12c50:	andeq	r2, r1, r0, ror #31
   12c54:	andeq	r2, r1, r4, ror #31
   12c58:	andeq	r2, r1, r4, ror #31
   12c5c:	andeq	r2, r1, r0, ror #27
   12c60:	andeq	r2, r1, r4, ror #31
   12c64:	andeq	r2, r1, ip, asr #27
   12c68:	andeq	r2, r1, r4, ror #31
   12c6c:	ldrdeq	r2, [r1], -r8
   12c70:	andeq	r2, r1, r4, ror #31
   12c74:	andeq	r2, r1, r4, ror #31
   12c78:	andeq	r2, r1, r4, ror #31
   12c7c:	andeq	r2, r1, ip, asr #27
   12c80:	andeq	r2, r1, ip, asr #27
   12c84:	andeq	r2, r1, ip, asr #27
   12c88:	andeq	r2, r1, ip, asr #27
   12c8c:	andeq	r2, r1, ip, asr #27
   12c90:	andeq	r2, r1, ip, asr #27
   12c94:	andeq	r2, r1, ip, asr #27
   12c98:	andeq	r2, r1, ip, asr #27
   12c9c:	andeq	r2, r1, ip, asr #27
   12ca0:	andeq	r2, r1, ip, asr #27
   12ca4:	andeq	r2, r1, ip, asr #27
   12ca8:	andeq	r2, r1, ip, asr #27
   12cac:	andeq	r2, r1, ip, asr #27
   12cb0:	andeq	r2, r1, ip, asr #27
   12cb4:	andeq	r2, r1, ip, asr #27
   12cb8:	andeq	r2, r1, ip, asr #27
   12cbc:	andeq	r2, r1, r4, ror #31
   12cc0:	andeq	r2, r1, r4, ror #31
   12cc4:	andeq	r2, r1, r4, ror #31
   12cc8:	andeq	r2, r1, r4, ror #31
   12ccc:	andeq	r2, r1, r4, lsr #29
   12cd0:	andeq	r2, r1, ip, ror pc
   12cd4:	andeq	r2, r1, ip, asr #27
   12cd8:	andeq	r2, r1, ip, asr #27
   12cdc:	andeq	r2, r1, ip, asr #27
   12ce0:	andeq	r2, r1, ip, asr #27
   12ce4:	andeq	r2, r1, ip, asr #27
   12ce8:	andeq	r2, r1, ip, asr #27
   12cec:	andeq	r2, r1, ip, asr #27
   12cf0:	andeq	r2, r1, ip, asr #27
   12cf4:	andeq	r2, r1, ip, asr #27
   12cf8:	andeq	r2, r1, ip, asr #27
   12cfc:	andeq	r2, r1, ip, asr #27
   12d00:	andeq	r2, r1, ip, asr #27
   12d04:	andeq	r2, r1, ip, asr #27
   12d08:	andeq	r2, r1, ip, asr #27
   12d0c:	andeq	r2, r1, ip, asr #27
   12d10:	andeq	r2, r1, ip, asr #27
   12d14:	andeq	r2, r1, ip, asr #27
   12d18:	andeq	r2, r1, ip, asr #27
   12d1c:	andeq	r2, r1, ip, asr #27
   12d20:	andeq	r2, r1, ip, asr #27
   12d24:	andeq	r2, r1, ip, asr #27
   12d28:	andeq	r2, r1, ip, asr #27
   12d2c:	andeq	r2, r1, ip, asr #27
   12d30:	andeq	r2, r1, ip, asr #27
   12d34:	andeq	r2, r1, ip, asr #27
   12d38:	andeq	r2, r1, ip, asr #27
   12d3c:	andeq	r2, r1, r4, ror #31
   12d40:	andeq	r2, r1, ip, lsl #28
   12d44:	andeq	r2, r1, ip, asr #27
   12d48:	andeq	r2, r1, r4, ror #31
   12d4c:	andeq	r2, r1, ip, asr #27
   12d50:	andeq	r2, r1, r4, ror #31
   12d54:	andeq	r2, r1, ip, asr #27
   12d58:	andeq	r2, r1, ip, asr #27
   12d5c:	andeq	r2, r1, ip, asr #27
   12d60:	andeq	r2, r1, ip, asr #27
   12d64:	andeq	r2, r1, ip, asr #27
   12d68:	andeq	r2, r1, ip, asr #27
   12d6c:	andeq	r2, r1, ip, asr #27
   12d70:	andeq	r2, r1, ip, asr #27
   12d74:	andeq	r2, r1, ip, asr #27
   12d78:	andeq	r2, r1, ip, asr #27
   12d7c:	andeq	r2, r1, ip, asr #27
   12d80:	andeq	r2, r1, ip, asr #27
   12d84:	andeq	r2, r1, ip, asr #27
   12d88:	andeq	r2, r1, ip, asr #27
   12d8c:	andeq	r2, r1, ip, asr #27
   12d90:	andeq	r2, r1, ip, asr #27
   12d94:	andeq	r2, r1, ip, asr #27
   12d98:	andeq	r2, r1, ip, asr #27
   12d9c:	andeq	r2, r1, ip, asr #27
   12da0:	andeq	r2, r1, ip, asr #27
   12da4:	andeq	r2, r1, ip, asr #27
   12da8:	andeq	r2, r1, ip, asr #27
   12dac:	andeq	r2, r1, ip, asr #27
   12db0:	andeq	r2, r1, ip, asr #27
   12db4:	andeq	r2, r1, ip, asr #27
   12db8:	andeq	r2, r1, ip, asr #27
   12dbc:	strdeq	r2, [r1], -r0
   12dc0:	andeq	r2, r1, r4, ror #31
   12dc4:	strdeq	r2, [r1], -r0
   12dc8:	andeq	r2, r1, r0, ror #27
   12dcc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12dd0:	cmp	r0, #0
   12dd4:	beq	13034 <__mempcpy_chk@plt+0x1f54>
   12dd8:	ldr	r0, [fp, #16]
   12ddc:	b	13038 <__mempcpy_chk@plt+0x1f58>
   12de0:	mov	sl, #0
   12de4:	cmp	r7, #0
   12de8:	bne	13250 <__mempcpy_chk@plt+0x2170>
   12dec:	b	12fe0 <__mempcpy_chk@plt+0x1f00>
   12df0:	mov	sl, #0
   12df4:	cmn	lr, #1
   12df8:	beq	12fcc <__mempcpy_chk@plt+0x1eec>
   12dfc:	cmp	r7, #0
   12e00:	cmpeq	lr, #1
   12e04:	bne	13250 <__mempcpy_chk@plt+0x2170>
   12e08:	b	12fe0 <__mempcpy_chk@plt+0x1f00>
   12e0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e10:	cmp	r0, #2
   12e14:	bne	13004 <__mempcpy_chk@plt+0x1f24>
   12e18:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e1c:	tst	r0, #1
   12e20:	bne	13770 <__mempcpy_chk@plt+0x2690>
   12e24:	mov	r9, #0
   12e28:	mov	r0, #92	; 0x5c
   12e2c:	b	13018 <__mempcpy_chk@plt+0x1f38>
   12e30:	mov	r0, #102	; 0x66
   12e34:	b	13020 <__mempcpy_chk@plt+0x1f40>
   12e38:	mov	r2, #116	; 0x74
   12e3c:	b	12e4c <__mempcpy_chk@plt+0x1d6c>
   12e40:	mov	r0, #98	; 0x62
   12e44:	b	13020 <__mempcpy_chk@plt+0x1f40>
   12e48:	mov	r2, #114	; 0x72
   12e4c:	ldr	r0, [sp, #60]	; 0x3c
   12e50:	tst	r0, #1
   12e54:	mov	r0, r2
   12e58:	bne	13020 <__mempcpy_chk@plt+0x1f40>
   12e5c:	b	13770 <__mempcpy_chk@plt+0x2690>
   12e60:	ldr	r0, [sp, #84]	; 0x54
   12e64:	tst	r0, #1
   12e68:	beq	1310c <__mempcpy_chk@plt+0x202c>
   12e6c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e70:	tst	r0, #1
   12e74:	bne	13878 <__mempcpy_chk@plt+0x2798>
   12e78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12e80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12e84:	cmp	r0, #2
   12e88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12e8c:	movwne	r0, #1
   12e90:	orr	r0, r0, r3
   12e94:	tst	r0, #1
   12e98:	beq	1358c <__mempcpy_chk@plt+0x24ac>
   12e9c:	mov	r0, r8
   12ea0:	b	135cc <__mempcpy_chk@plt+0x24ec>
   12ea4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ea8:	mov	r9, #0
   12eac:	mov	r5, #63	; 0x3f
   12eb0:	cmp	r0, #5
   12eb4:	beq	13258 <__mempcpy_chk@plt+0x2178>
   12eb8:	cmp	r0, #2
   12ebc:	bne	13318 <__mempcpy_chk@plt+0x2238>
   12ec0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12ec4:	tst	r0, #1
   12ec8:	beq	1331c <__mempcpy_chk@plt+0x223c>
   12ecc:	b	13770 <__mempcpy_chk@plt+0x2690>
   12ed0:	mov	r0, #118	; 0x76
   12ed4:	b	13020 <__mempcpy_chk@plt+0x1f40>
   12ed8:	mov	r0, #1
   12edc:	mov	r5, #39	; 0x27
   12ee0:	str	r0, [sp, #52]	; 0x34
   12ee4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ee8:	cmp	r0, #2
   12eec:	bne	12f74 <__mempcpy_chk@plt+0x1e94>
   12ef0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12ef4:	tst	r0, #1
   12ef8:	bne	13770 <__mempcpy_chk@plt+0x2690>
   12efc:	ldr	r3, [sp, #68]	; 0x44
   12f00:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12f04:	mov	r9, #0
   12f08:	clz	r1, r2
   12f0c:	cmp	r3, #0
   12f10:	mov	r0, r3
   12f14:	movwne	r0, #1
   12f18:	lsr	r1, r1, #5
   12f1c:	orrs	r0, r0, r1
   12f20:	moveq	r3, r2
   12f24:	moveq	r2, r0
   12f28:	cmp	r8, r2
   12f2c:	str	r3, [sp, #68]	; 0x44
   12f30:	str	r2, [fp, #-52]	; 0xffffffcc
   12f34:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12f38:	movcc	r0, #39	; 0x27
   12f3c:	strbcc	r0, [r1, r8]
   12f40:	add	r0, r8, #1
   12f44:	cmp	r0, r2
   12f48:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12f4c:	movcc	r1, #92	; 0x5c
   12f50:	strbcc	r1, [r3, r0]
   12f54:	add	r0, r8, #2
   12f58:	add	r8, r8, #3
   12f5c:	cmp	r0, r2
   12f60:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12f64:	movcc	r1, #39	; 0x27
   12f68:	strbcc	r1, [r2, r0]
   12f6c:	mov	r0, #0
   12f70:	str	r0, [fp, #-48]	; 0xffffffd0
   12f74:	mov	sl, #1
   12f78:	b	12dcc <__mempcpy_chk@plt+0x1cec>
   12f7c:	ldr	r0, [sp, #32]
   12f80:	cmp	r0, #1
   12f84:	bne	13130 <__mempcpy_chk@plt+0x2050>
   12f88:	str	lr, [sp, #80]	; 0x50
   12f8c:	bl	10fcc <__ctype_b_loc@plt>
   12f90:	ldr	r0, [r0]
   12f94:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f98:	mov	r1, #1
   12f9c:	add	r0, r0, r5, lsl #1
   12fa0:	ldrb	r0, [r0, #1]
   12fa4:	ubfx	sl, r0, #6, #1
   12fa8:	ldr	r0, [sp, #48]	; 0x30
   12fac:	mov	r2, r1
   12fb0:	cmp	r1, #1
   12fb4:	orr	r0, sl, r0
   12fb8:	bhi	13324 <__mempcpy_chk@plt+0x2244>
   12fbc:	tst	r0, #1
   12fc0:	beq	13324 <__mempcpy_chk@plt+0x2244>
   12fc4:	ldr	lr, [sp, #80]	; 0x50
   12fc8:	b	12dcc <__mempcpy_chk@plt+0x1cec>
   12fcc:	cmp	r7, #0
   12fd0:	bne	1324c <__mempcpy_chk@plt+0x216c>
   12fd4:	ldrb	r0, [ip, #1]
   12fd8:	cmp	r0, #0
   12fdc:	bne	1324c <__mempcpy_chk@plt+0x216c>
   12fe0:	mov	r1, #1
   12fe4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fe8:	cmp	r0, #2
   12fec:	bne	12ffc <__mempcpy_chk@plt+0x1f1c>
   12ff0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12ff4:	tst	r0, #1
   12ff8:	bne	13770 <__mempcpy_chk@plt+0x2690>
   12ffc:	mov	sl, r1
   13000:	b	12dcc <__mempcpy_chk@plt+0x1cec>
   13004:	ldr	r1, [sp, #44]	; 0x2c
   13008:	mov	r9, #0
   1300c:	mov	r0, #92	; 0x5c
   13010:	cmp	r1, #0
   13014:	beq	13020 <__mempcpy_chk@plt+0x1f40>
   13018:	mov	sl, #0
   1301c:	b	13538 <__mempcpy_chk@plt+0x2458>
   13020:	ldr	r1, [sp, #84]	; 0x54
   13024:	mov	sl, #0
   13028:	mov	r9, #0
   1302c:	tst	r1, #1
   13030:	bne	1306c <__mempcpy_chk@plt+0x1f8c>
   13034:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13038:	cmp	r0, #0
   1303c:	mov	r0, r5
   13040:	beq	13064 <__mempcpy_chk@plt+0x1f84>
   13044:	ldr	r1, [fp, #16]
   13048:	ubfx	r0, r5, #5, #3
   1304c:	mov	r2, #1
   13050:	ldr	r0, [r1, r0, lsl #2]
   13054:	and	r1, r5, #31
   13058:	tst	r0, r2, lsl r1
   1305c:	mov	r0, r5
   13060:	bne	1306c <__mempcpy_chk@plt+0x1f8c>
   13064:	cmp	r6, #0
   13068:	beq	13538 <__mempcpy_chk@plt+0x2458>
   1306c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13070:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13074:	tst	r1, #1
   13078:	bne	1374c <__mempcpy_chk@plt+0x266c>
   1307c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13080:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13084:	cmp	r1, #2
   13088:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1308c:	movwne	r1, #1
   13090:	orr	r1, r1, r5
   13094:	tst	r1, #1
   13098:	bne	130dc <__mempcpy_chk@plt+0x1ffc>
   1309c:	cmp	r8, r6
   130a0:	mov	r5, #1
   130a4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   130a8:	movcc	r1, #39	; 0x27
   130ac:	strbcc	r1, [r2, r8]
   130b0:	add	r1, r8, #1
   130b4:	cmp	r1, r6
   130b8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   130bc:	movcc	r2, #36	; 0x24
   130c0:	strbcc	r2, [r3, r1]
   130c4:	add	r1, r8, #2
   130c8:	add	r8, r8, #3
   130cc:	cmp	r1, r6
   130d0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   130d4:	movcc	r2, #39	; 0x27
   130d8:	strbcc	r2, [r3, r1]
   130dc:	cmp	r8, r6
   130e0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   130e4:	movcc	r1, #92	; 0x5c
   130e8:	strbcc	r1, [r2, r8]
   130ec:	add	r8, r8, #1
   130f0:	cmp	r8, r6
   130f4:	and	r4, r4, sl
   130f8:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   130fc:	strbcc	r0, [r1, r8]
   13100:	add	r8, r8, #1
   13104:	add	r7, r7, #1
   13108:	b	12aec <__mempcpy_chk@plt+0x1a0c>
   1310c:	ldr	r0, [sp, #28]
   13110:	mov	sl, #0
   13114:	mov	r9, #0
   13118:	mov	r5, #0
   1311c:	cmp	r0, #0
   13120:	beq	13034 <__mempcpy_chk@plt+0x1f54>
   13124:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13128:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1312c:	b	13104 <__mempcpy_chk@plt+0x2024>
   13130:	mov	r0, #0
   13134:	cmn	lr, #1
   13138:	str	r6, [sp, #76]	; 0x4c
   1313c:	str	r4, [sp, #20]
   13140:	str	r0, [fp, #-36]	; 0xffffffdc
   13144:	str	r0, [fp, #-40]	; 0xffffffd8
   13148:	bne	1315c <__mempcpy_chk@plt+0x207c>
   1314c:	mov	r0, ip
   13150:	bl	10fe4 <strlen@plt>
   13154:	ldr	ip, [fp, #-84]	; 0xffffffac
   13158:	mov	lr, r0
   1315c:	add	r0, ip, r7
   13160:	mov	sl, #1
   13164:	mov	r6, #0
   13168:	sub	r4, fp, #40	; 0x28
   1316c:	str	lr, [sp, #80]	; 0x50
   13170:	str	r0, [sp, #36]	; 0x24
   13174:	str	r6, [sp, #40]	; 0x28
   13178:	add	r6, r6, r7
   1317c:	sub	r0, fp, #44	; 0x2c
   13180:	mov	r3, r4
   13184:	add	r1, ip, r6
   13188:	sub	r2, lr, r6
   1318c:	bl	15380 <__mempcpy_chk@plt+0x42a0>
   13190:	cmp	r0, #0
   13194:	beq	136a0 <__mempcpy_chk@plt+0x25c0>
   13198:	cmn	r0, #1
   1319c:	beq	13660 <__mempcpy_chk@plt+0x2580>
   131a0:	ldr	lr, [sp, #80]	; 0x50
   131a4:	cmn	r0, #2
   131a8:	beq	13668 <__mempcpy_chk@plt+0x2588>
   131ac:	ldr	r2, [sp, #56]	; 0x38
   131b0:	cmp	r0, #2
   131b4:	mov	r1, #0
   131b8:	movwcc	r1, #1
   131bc:	eor	r2, r2, #1
   131c0:	orrs	r1, r2, r1
   131c4:	bne	13210 <__mempcpy_chk@plt+0x2130>
   131c8:	ldr	r1, [sp, #40]	; 0x28
   131cc:	ldr	r2, [sp, #36]	; 0x24
   131d0:	add	ip, r2, r1
   131d4:	mov	r2, #1
   131d8:	ldrb	r3, [ip, r2]
   131dc:	sub	r6, r3, #94	; 0x5e
   131e0:	cmp	r6, #30
   131e4:	bhi	131f8 <__mempcpy_chk@plt+0x2118>
   131e8:	mov	r4, #1
   131ec:	mov	r1, #1073741829	; 0x40000005
   131f0:	tst	r1, r4, lsl r6
   131f4:	bne	1376c <__mempcpy_chk@plt+0x268c>
   131f8:	sub	r3, r3, #91	; 0x5b
   131fc:	cmp	r3, #2
   13200:	bcc	1376c <__mempcpy_chk@plt+0x268c>
   13204:	add	r2, r2, #1
   13208:	cmp	r2, r0
   1320c:	bcc	131d8 <__mempcpy_chk@plt+0x20f8>
   13210:	ldr	r6, [sp, #40]	; 0x28
   13214:	add	r6, r0, r6
   13218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1321c:	bl	10f18 <iswprint@plt>
   13220:	cmp	r0, #0
   13224:	sub	r4, fp, #40	; 0x28
   13228:	movwne	r0, #1
   1322c:	and	sl, sl, r0
   13230:	mov	r0, r4
   13234:	bl	10ec4 <mbsinit@plt>
   13238:	ldr	lr, [sp, #80]	; 0x50
   1323c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13240:	cmp	r0, #0
   13244:	beq	13174 <__mempcpy_chk@plt+0x2094>
   13248:	b	136a8 <__mempcpy_chk@plt+0x25c8>
   1324c:	mvn	lr, #0
   13250:	mov	r9, #0
   13254:	b	12dcc <__mempcpy_chk@plt+0x1cec>
   13258:	ldr	r0, [sp, #24]
   1325c:	cmp	r0, #0
   13260:	beq	13318 <__mempcpy_chk@plt+0x2238>
   13264:	add	r0, r7, #2
   13268:	cmp	r0, lr
   1326c:	bcs	13318 <__mempcpy_chk@plt+0x2238>
   13270:	add	r1, ip, r7
   13274:	ldrb	r1, [r1, #1]
   13278:	cmp	r1, #63	; 0x3f
   1327c:	bne	13318 <__mempcpy_chk@plt+0x2238>
   13280:	ldrb	r5, [ip, r0]
   13284:	sub	r1, r5, #33	; 0x21
   13288:	cmp	r1, #29
   1328c:	bhi	13318 <__mempcpy_chk@plt+0x2238>
   13290:	movw	r3, #20929	; 0x51c1
   13294:	mov	r2, #1
   13298:	movt	r3, #14336	; 0x3800
   1329c:	tst	r3, r2, lsl r1
   132a0:	beq	13318 <__mempcpy_chk@plt+0x2238>
   132a4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   132a8:	tst	r1, #1
   132ac:	bne	13880 <__mempcpy_chk@plt+0x27a0>
   132b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   132b4:	mov	r7, r0
   132b8:	cmp	r8, r1
   132bc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   132c0:	movcc	r1, #63	; 0x3f
   132c4:	strbcc	r1, [r2, r8]
   132c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   132cc:	add	r1, r8, #1
   132d0:	cmp	r1, r2
   132d4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   132d8:	movcc	r2, #34	; 0x22
   132dc:	strbcc	r2, [r3, r1]
   132e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   132e4:	add	r1, r8, #2
   132e8:	cmp	r1, r2
   132ec:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   132f0:	movcc	r2, #34	; 0x22
   132f4:	strbcc	r2, [r3, r1]
   132f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   132fc:	add	r1, r8, #3
   13300:	add	r8, r8, #4
   13304:	cmp	r1, r2
   13308:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1330c:	movcc	r2, #63	; 0x3f
   13310:	strbcc	r2, [r3, r1]
   13314:	b	1331c <__mempcpy_chk@plt+0x223c>
   13318:	mov	r5, #63	; 0x3f
   1331c:	mov	sl, #0
   13320:	b	12dcc <__mempcpy_chk@plt+0x1cec>
   13324:	str	r0, [sp, #40]	; 0x28
   13328:	add	r0, r2, r7
   1332c:	str	r6, [sp, #76]	; 0x4c
   13330:	add	r1, r7, #1
   13334:	ldr	lr, [sp, #80]	; 0x50
   13338:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1333c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13340:	mov	r3, #0
   13344:	str	r0, [sp, #36]	; 0x24
   13348:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1334c:	b	133e0 <__mempcpy_chk@plt+0x2300>
   13350:	str	r0, [sp, #76]	; 0x4c
   13354:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13358:	cmp	r9, #0
   1335c:	movwne	r9, #1
   13360:	mvn	r7, r0
   13364:	orr	r7, r7, r9
   13368:	tst	r7, #1
   1336c:	bne	133bc <__mempcpy_chk@plt+0x22dc>
   13370:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13374:	cmp	r8, r6
   13378:	bcs	13390 <__mempcpy_chk@plt+0x22b0>
   1337c:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13380:	mov	r2, r4
   13384:	mov	r4, #39	; 0x27
   13388:	strb	r4, [r7, r8]
   1338c:	mov	r4, r2
   13390:	add	r7, r8, #1
   13394:	cmp	r7, r6
   13398:	bcs	133b0 <__mempcpy_chk@plt+0x22d0>
   1339c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   133a0:	mov	r2, r4
   133a4:	mov	r4, #39	; 0x27
   133a8:	strb	r4, [r0, r7]
   133ac:	mov	r4, r2
   133b0:	add	r8, r8, #2
   133b4:	mov	r0, #0
   133b8:	b	133c4 <__mempcpy_chk@plt+0x22e4>
   133bc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   133c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   133c4:	cmp	r8, r6
   133c8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   133cc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   133d0:	strbcc	r5, [r2, r8]
   133d4:	add	r8, r8, #1
   133d8:	ldrb	r5, [ip, r1]
   133dc:	add	r1, r1, #1
   133e0:	ldr	r2, [sp, #40]	; 0x28
   133e4:	tst	r2, #1
   133e8:	beq	13424 <__mempcpy_chk@plt+0x2344>
   133ec:	ldr	r2, [sp, #76]	; 0x4c
   133f0:	str	r0, [fp, #-48]	; 0xffffffd0
   133f4:	tst	r2, #1
   133f8:	beq	1341c <__mempcpy_chk@plt+0x233c>
   133fc:	cmp	r8, r6
   13400:	bcs	13418 <__mempcpy_chk@plt+0x2338>
   13404:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13408:	mov	r2, r4
   1340c:	mov	r4, #92	; 0x5c
   13410:	strb	r4, [r6, r8]
   13414:	mov	r4, r2
   13418:	add	r8, r8, #1
   1341c:	mov	r0, #0
   13420:	b	13518 <__mempcpy_chk@plt+0x2438>
   13424:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13428:	tst	r2, #1
   1342c:	bne	13778 <__mempcpy_chk@plt+0x2698>
   13430:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13434:	cmp	r7, #2
   13438:	movwne	r3, #1
   1343c:	orr	r3, r3, r0
   13440:	tst	r3, #1
   13444:	bne	134a0 <__mempcpy_chk@plt+0x23c0>
   13448:	cmp	r8, r6
   1344c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13450:	movcc	r3, #39	; 0x27
   13454:	strbcc	r3, [r2, r8]
   13458:	add	r3, r8, #1
   1345c:	cmp	r3, r6
   13460:	bcs	13478 <__mempcpy_chk@plt+0x2398>
   13464:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13468:	mov	r7, r4
   1346c:	mov	r4, #36	; 0x24
   13470:	strb	r4, [r2, r3]
   13474:	mov	r4, r7
   13478:	add	r3, r8, #2
   1347c:	cmp	r3, r6
   13480:	bcs	13498 <__mempcpy_chk@plt+0x23b8>
   13484:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13488:	mov	r7, r4
   1348c:	mov	r4, #39	; 0x27
   13490:	strb	r4, [r2, r3]
   13494:	mov	r4, r7
   13498:	add	r8, r8, #3
   1349c:	mov	r0, #1
   134a0:	cmp	r8, r6
   134a4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   134a8:	movcc	r3, #92	; 0x5c
   134ac:	strbcc	r3, [r2, r8]
   134b0:	add	r3, r8, #1
   134b4:	cmp	r3, r6
   134b8:	bcs	134d8 <__mempcpy_chk@plt+0x23f8>
   134bc:	mov	r2, r4
   134c0:	and	r7, r5, #192	; 0xc0
   134c4:	mov	r4, #48	; 0x30
   134c8:	orr	r7, r4, r7, lsr #6
   134cc:	mov	r4, r2
   134d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134d4:	strb	r7, [r2, r3]
   134d8:	add	r3, r8, #2
   134dc:	cmp	r3, r6
   134e0:	bcs	13500 <__mempcpy_chk@plt+0x2420>
   134e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134e8:	mov	r6, r4
   134ec:	lsr	r7, r5, #3
   134f0:	mov	r4, #6
   134f4:	bfi	r7, r4, #3, #29
   134f8:	mov	r4, r6
   134fc:	strb	r7, [r2, r3]
   13500:	str	r0, [fp, #-48]	; 0xffffffd0
   13504:	ldr	r0, [sp, #76]	; 0x4c
   13508:	mov	r3, #6
   1350c:	add	r8, r8, #3
   13510:	bfi	r5, r3, #3, #29
   13514:	mov	r3, #1
   13518:	ldr	r2, [sp, #36]	; 0x24
   1351c:	and	r9, r3, #1
   13520:	cmp	r2, r1
   13524:	bhi	13350 <__mempcpy_chk@plt+0x2270>
   13528:	cmp	r9, #0
   1352c:	sub	r7, r1, #1
   13530:	mov	r0, r5
   13534:	movwne	r9, #1
   13538:	cmp	r9, #0
   1353c:	bne	13580 <__mempcpy_chk@plt+0x24a0>
   13540:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13544:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13548:	tst	r5, #1
   1354c:	beq	130f0 <__mempcpy_chk@plt+0x2010>
   13550:	cmp	r8, r6
   13554:	mov	r5, #0
   13558:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1355c:	movcc	r1, #39	; 0x27
   13560:	strbcc	r1, [r2, r8]
   13564:	add	r1, r8, #1
   13568:	add	r8, r8, #2
   1356c:	cmp	r1, r6
   13570:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13574:	movcc	r2, #39	; 0x27
   13578:	strbcc	r2, [r3, r1]
   1357c:	b	130f0 <__mempcpy_chk@plt+0x2010>
   13580:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13584:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13588:	b	130f0 <__mempcpy_chk@plt+0x2010>
   1358c:	cmp	r8, r1
   13590:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13594:	movcc	r0, #39	; 0x27
   13598:	strbcc	r0, [r2, r8]
   1359c:	add	r0, r8, #1
   135a0:	cmp	r0, r1
   135a4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   135a8:	movcc	r2, #36	; 0x24
   135ac:	strbcc	r2, [r3, r0]
   135b0:	add	r0, r8, #2
   135b4:	cmp	r0, r1
   135b8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   135bc:	movcc	r2, #39	; 0x27
   135c0:	strbcc	r2, [r3, r0]
   135c4:	add	r0, r8, #3
   135c8:	mov	r3, #1
   135cc:	cmp	r0, r1
   135d0:	add	r8, r0, #1
   135d4:	str	r3, [fp, #-48]	; 0xffffffd0
   135d8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   135dc:	movcc	r1, #92	; 0x5c
   135e0:	strbcc	r1, [r2, r0]
   135e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   135e8:	cmp	r1, #2
   135ec:	beq	13650 <__mempcpy_chk@plt+0x2570>
   135f0:	add	r1, r7, #1
   135f4:	mov	sl, #0
   135f8:	mov	r9, #1
   135fc:	mov	r5, #48	; 0x30
   13600:	cmp	r1, lr
   13604:	bcs	12dcc <__mempcpy_chk@plt+0x1cec>
   13608:	ldrb	r1, [ip, r1]
   1360c:	sub	r1, r1, #48	; 0x30
   13610:	uxtb	r1, r1
   13614:	cmp	r1, #9
   13618:	bhi	12dcc <__mempcpy_chk@plt+0x1cec>
   1361c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13620:	cmp	r8, r1
   13624:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13628:	movcc	r1, #48	; 0x30
   1362c:	strbcc	r1, [r2, r8]
   13630:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13634:	add	r1, r0, #2
   13638:	add	r8, r0, #3
   1363c:	cmp	r1, r2
   13640:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13644:	movcc	r2, #48	; 0x30
   13648:	strbcc	r2, [r3, r1]
   1364c:	b	12dcc <__mempcpy_chk@plt+0x1cec>
   13650:	mov	r0, #48	; 0x30
   13654:	mov	r9, #1
   13658:	mov	sl, #0
   1365c:	b	13064 <__mempcpy_chk@plt+0x1f84>
   13660:	mov	sl, #0
   13664:	b	136a0 <__mempcpy_chk@plt+0x25c0>
   13668:	mov	sl, #0
   1366c:	cmp	lr, r6
   13670:	bls	136a0 <__mempcpy_chk@plt+0x25c0>
   13674:	ldr	ip, [fp, #-84]	; 0xffffffac
   13678:	ldr	r6, [sp, #40]	; 0x28
   1367c:	ldr	r0, [sp, #36]	; 0x24
   13680:	ldrb	r0, [r0, r6]
   13684:	cmp	r0, #0
   13688:	beq	136a8 <__mempcpy_chk@plt+0x25c8>
   1368c:	add	r6, r6, #1
   13690:	add	r0, r7, r6
   13694:	cmp	r0, lr
   13698:	bcc	1367c <__mempcpy_chk@plt+0x259c>
   1369c:	b	136a8 <__mempcpy_chk@plt+0x25c8>
   136a0:	ldr	ip, [fp, #-84]	; 0xffffffac
   136a4:	ldr	r6, [sp, #40]	; 0x28
   136a8:	mov	r1, r6
   136ac:	ldr	r4, [sp, #20]
   136b0:	ldr	r6, [sp, #76]	; 0x4c
   136b4:	b	12fa8 <__mempcpy_chk@plt+0x1ec8>
   136b8:	mov	lr, r7
   136bc:	b	136c4 <__mempcpy_chk@plt+0x25e4>
   136c0:	mvn	lr, #0
   136c4:	ldr	r9, [fp, #-64]	; 0xffffffc0
   136c8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   136cc:	eor	r0, r9, #2
   136d0:	orr	r0, r0, r8
   136d4:	clz	r0, r0
   136d8:	lsr	r0, r0, #5
   136dc:	tst	r1, r0
   136e0:	bne	137dc <__mempcpy_chk@plt+0x26fc>
   136e4:	mov	r0, r1
   136e8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   136ec:	cmp	r9, #2
   136f0:	movwne	r1, #1
   136f4:	orr	r0, r0, r1
   136f8:	tst	r0, #1
   136fc:	bne	1381c <__mempcpy_chk@plt+0x273c>
   13700:	ldr	r0, [sp, #52]	; 0x34
   13704:	ldr	r1, [sp, #68]	; 0x44
   13708:	str	lr, [sp, #80]	; 0x50
   1370c:	eor	r0, r0, #1
   13710:	tst	r0, #1
   13714:	bne	1381c <__mempcpy_chk@plt+0x273c>
   13718:	tst	r4, #1
   1371c:	bne	137e4 <__mempcpy_chk@plt+0x2704>
   13720:	mov	r7, #0
   13724:	cmp	r1, #0
   13728:	beq	13814 <__mempcpy_chk@plt+0x2734>
   1372c:	ldr	r0, [sp, #84]	; 0x54
   13730:	mov	r3, #0
   13734:	cmp	r6, #0
   13738:	mov	r2, #0
   1373c:	mov	r4, r1
   13740:	str	r3, [fp, #-72]	; 0xffffffb8
   13744:	beq	12880 <__mempcpy_chk@plt+0x17a0>
   13748:	b	1381c <__mempcpy_chk@plt+0x273c>
   1374c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13750:	b	13778 <__mempcpy_chk@plt+0x2698>
   13754:	ldr	ip, [fp, #-84]	; 0xffffffac
   13758:	mov	r2, #1
   1375c:	mov	lr, r4
   13760:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13764:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13768:	b	1377c <__mempcpy_chk@plt+0x269c>
   1376c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13770:	mov	r7, #2
   13774:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13778:	ldr	r2, [sp, #84]	; 0x54
   1377c:	mov	r0, #0
   13780:	ldr	r1, [fp, #12]
   13784:	tst	r2, #1
   13788:	mov	r2, r7
   1378c:	mov	r3, lr
   13790:	str	r0, [sp, #8]
   13794:	ldr	r0, [sp, #64]	; 0x40
   13798:	movwne	r2, #4
   1379c:	cmp	r7, #2
   137a0:	movne	r2, r7
   137a4:	str	r2, [sp]
   137a8:	mov	r2, ip
   137ac:	bic	r1, r1, #2
   137b0:	str	r0, [sp, #12]
   137b4:	ldr	r0, [sp, #72]	; 0x48
   137b8:	str	r1, [sp, #4]
   137bc:	mov	r1, r6
   137c0:	str	r0, [sp, #16]
   137c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   137c8:	bl	12808 <__mempcpy_chk@plt+0x1728>
   137cc:	mov	r8, r0
   137d0:	mov	r0, r8
   137d4:	sub	sp, fp, #28
   137d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137dc:	mov	r7, #2
   137e0:	b	13778 <__mempcpy_chk@plt+0x2698>
   137e4:	mov	r0, #5
   137e8:	ldr	r2, [fp, #-84]	; 0xffffffac
   137ec:	ldr	r3, [sp, #80]	; 0x50
   137f0:	str	r0, [sp]
   137f4:	ldr	r0, [fp, #12]
   137f8:	str	r0, [sp, #4]
   137fc:	ldr	r0, [fp, #16]
   13800:	str	r0, [sp, #8]
   13804:	ldr	r0, [sp, #64]	; 0x40
   13808:	str	r0, [sp, #12]
   1380c:	ldr	r0, [sp, #72]	; 0x48
   13810:	b	137c0 <__mempcpy_chk@plt+0x26e0>
   13814:	mov	r0, #0
   13818:	str	r0, [fp, #-72]	; 0xffffffb8
   1381c:	ldr	r1, [sp, #92]	; 0x5c
   13820:	cmp	r1, #0
   13824:	beq	13864 <__mempcpy_chk@plt+0x2784>
   13828:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1382c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13830:	tst	r0, #1
   13834:	bne	13868 <__mempcpy_chk@plt+0x2788>
   13838:	ldrb	r0, [r1]
   1383c:	cmp	r0, #0
   13840:	beq	13868 <__mempcpy_chk@plt+0x2788>
   13844:	add	r1, r1, #1
   13848:	cmp	r8, r6
   1384c:	strbcc	r0, [r2, r8]
   13850:	add	r8, r8, #1
   13854:	ldrb	r0, [r1], #1
   13858:	cmp	r0, #0
   1385c:	bne	13848 <__mempcpy_chk@plt+0x2768>
   13860:	b	13868 <__mempcpy_chk@plt+0x2788>
   13864:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13868:	cmp	r8, r6
   1386c:	movcc	r0, #0
   13870:	strbcc	r0, [r2, r8]
   13874:	b	137d0 <__mempcpy_chk@plt+0x26f0>
   13878:	mov	r2, #1
   1387c:	b	13760 <__mempcpy_chk@plt+0x2680>
   13880:	mov	r7, #5
   13884:	b	13774 <__mempcpy_chk@plt+0x2694>
   13888:	bl	110c8 <abort@plt>
   1388c:	mov	r3, r2
   13890:	mov	r2, #0
   13894:	b	13898 <__mempcpy_chk@plt+0x27b8>
   13898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1389c:	add	fp, sp, #28
   138a0:	sub	sp, sp, #36	; 0x24
   138a4:	movw	r8, #29032	; 0x7168
   138a8:	cmp	r3, #0
   138ac:	mov	r4, r2
   138b0:	str	r2, [sp, #24]
   138b4:	mov	r5, r1
   138b8:	mov	r6, r0
   138bc:	str	r0, [sp, #20]
   138c0:	movt	r8, #2
   138c4:	movne	r8, r3
   138c8:	bl	10ff0 <__errno_location@plt>
   138cc:	str	r0, [sp, #28]
   138d0:	cmp	r4, #0
   138d4:	add	sl, r8, #8
   138d8:	ldm	r8, {r3, r9}
   138dc:	ldr	r7, [r0]
   138e0:	ldr	r1, [r8, #40]	; 0x28
   138e4:	ldr	r2, [r8, #44]	; 0x2c
   138e8:	mov	r0, #0
   138ec:	orreq	r9, r9, #1
   138f0:	str	r7, [sp, #32]
   138f4:	mov	r7, r5
   138f8:	stm	sp, {r3, r9, sl}
   138fc:	str	r1, [sp, #12]
   13900:	str	r2, [sp, #16]
   13904:	mov	r1, #0
   13908:	mov	r2, r6
   1390c:	mov	r3, r5
   13910:	bl	12808 <__mempcpy_chk@plt+0x1728>
   13914:	add	r4, r0, #1
   13918:	mov	r5, r0
   1391c:	mov	r0, r4
   13920:	bl	149ec <__mempcpy_chk@plt+0x390c>
   13924:	mov	r6, r0
   13928:	ldr	r0, [r8]
   1392c:	ldr	r2, [r8, #44]	; 0x2c
   13930:	ldr	r1, [r8, #40]	; 0x28
   13934:	mov	r3, r7
   13938:	stm	sp, {r0, r9, sl}
   1393c:	str	r2, [sp, #16]
   13940:	str	r1, [sp, #12]
   13944:	mov	r0, r6
   13948:	mov	r1, r4
   1394c:	ldr	r2, [sp, #20]
   13950:	bl	12808 <__mempcpy_chk@plt+0x1728>
   13954:	ldr	r0, [sp, #24]
   13958:	ldr	r1, [sp, #32]
   1395c:	ldr	r2, [sp, #28]
   13960:	cmp	r0, #0
   13964:	str	r1, [r2]
   13968:	strne	r5, [r0]
   1396c:	mov	r0, r6
   13970:	sub	sp, fp, #28
   13974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13978:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1397c:	add	fp, sp, #24
   13980:	movw	r5, #28932	; 0x7104
   13984:	movw	r8, #28928	; 0x7100
   13988:	movt	r5, #2
   1398c:	movt	r8, #2
   13990:	ldr	r0, [r5]
   13994:	ldr	r4, [r8]
   13998:	cmp	r0, #2
   1399c:	blt	139c8 <__mempcpy_chk@plt+0x28e8>
   139a0:	add	r7, r4, #12
   139a4:	mov	r6, #0
   139a8:	ldr	r0, [r7, r6, lsl #3]
   139ac:	bl	125ac <__mempcpy_chk@plt+0x14cc>
   139b0:	ldr	r1, [r5]
   139b4:	add	r2, r6, #2
   139b8:	add	r0, r6, #1
   139bc:	mov	r6, r0
   139c0:	cmp	r2, r1
   139c4:	blt	139a8 <__mempcpy_chk@plt+0x28c8>
   139c8:	ldr	r0, [r4, #4]
   139cc:	movw	r7, #29080	; 0x7198
   139d0:	movt	r7, #2
   139d4:	cmp	r0, r7
   139d8:	beq	139f0 <__mempcpy_chk@plt+0x2910>
   139dc:	bl	125ac <__mempcpy_chk@plt+0x14cc>
   139e0:	movw	r0, #28936	; 0x7108
   139e4:	mov	r6, #256	; 0x100
   139e8:	movt	r0, #2
   139ec:	strd	r6, [r0]
   139f0:	movw	r6, #28936	; 0x7108
   139f4:	movt	r6, #2
   139f8:	cmp	r4, r6
   139fc:	beq	13a0c <__mempcpy_chk@plt+0x292c>
   13a00:	mov	r0, r4
   13a04:	bl	125ac <__mempcpy_chk@plt+0x14cc>
   13a08:	str	r6, [r8]
   13a0c:	mov	r0, #1
   13a10:	str	r0, [r5]
   13a14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a18:	movw	r3, #29032	; 0x7168
   13a1c:	mvn	r2, #0
   13a20:	movt	r3, #2
   13a24:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a2c:	add	fp, sp, #28
   13a30:	sub	sp, sp, #44	; 0x2c
   13a34:	mov	r7, r3
   13a38:	str	r2, [sp, #36]	; 0x24
   13a3c:	str	r1, [sp, #32]
   13a40:	mov	r5, r0
   13a44:	bl	10ff0 <__errno_location@plt>
   13a48:	cmp	r5, #0
   13a4c:	blt	13bb8 <__mempcpy_chk@plt+0x2ad8>
   13a50:	cmn	r5, #-2147483647	; 0x80000001
   13a54:	beq	13bb8 <__mempcpy_chk@plt+0x2ad8>
   13a58:	movw	r8, #28932	; 0x7104
   13a5c:	movw	r4, #28928	; 0x7100
   13a60:	str	r0, [sp, #28]
   13a64:	ldr	r0, [r0]
   13a68:	movt	r8, #2
   13a6c:	movt	r4, #2
   13a70:	ldr	r1, [r8]
   13a74:	ldr	r6, [r4]
   13a78:	str	r0, [sp, #24]
   13a7c:	cmp	r1, r5
   13a80:	ble	13a8c <__mempcpy_chk@plt+0x29ac>
   13a84:	mov	sl, r6
   13a88:	b	13af4 <__mempcpy_chk@plt+0x2a14>
   13a8c:	movw	r9, #28936	; 0x7108
   13a90:	mov	r0, #8
   13a94:	add	r2, r5, #1
   13a98:	str	r1, [fp, #-32]	; 0xffffffe0
   13a9c:	mvn	r3, #-2147483648	; 0x80000000
   13aa0:	movt	r9, #2
   13aa4:	str	r0, [sp]
   13aa8:	sub	r2, r2, r1
   13aac:	sub	r1, fp, #32
   13ab0:	subs	r0, r6, r9
   13ab4:	movne	r0, r6
   13ab8:	bl	14b1c <__mempcpy_chk@plt+0x3a3c>
   13abc:	cmp	r6, r9
   13ac0:	mov	sl, r0
   13ac4:	str	r0, [r4]
   13ac8:	ldrdeq	r0, [r9]
   13acc:	stmeq	sl, {r0, r1}
   13ad0:	ldr	r1, [r8]
   13ad4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ad8:	add	r0, sl, r1, lsl #3
   13adc:	sub	r1, r2, r1
   13ae0:	lsl	r2, r1, #3
   13ae4:	mov	r1, #0
   13ae8:	bl	11008 <memset@plt>
   13aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13af0:	str	r0, [r8]
   13af4:	mov	r9, sl
   13af8:	ldr	r6, [r9, r5, lsl #3]!
   13afc:	ldr	r4, [r9, #4]!
   13b00:	ldm	r7, {r0, r1}
   13b04:	ldr	r2, [r7, #40]	; 0x28
   13b08:	ldr	r3, [r7, #44]	; 0x2c
   13b0c:	orr	r8, r1, #1
   13b10:	add	r1, r7, #8
   13b14:	stm	sp, {r0, r8}
   13b18:	add	r0, sp, #8
   13b1c:	str	r1, [sp, #20]
   13b20:	stm	r0, {r1, r2, r3}
   13b24:	mov	r0, r4
   13b28:	mov	r1, r6
   13b2c:	ldr	r2, [sp, #32]
   13b30:	ldr	r3, [sp, #36]	; 0x24
   13b34:	bl	12808 <__mempcpy_chk@plt+0x1728>
   13b38:	cmp	r6, r0
   13b3c:	bhi	13ba0 <__mempcpy_chk@plt+0x2ac0>
   13b40:	add	r6, r0, #1
   13b44:	movw	r0, #29080	; 0x7198
   13b48:	movt	r0, #2
   13b4c:	str	r6, [sl, r5, lsl #3]
   13b50:	cmp	r4, r0
   13b54:	beq	13b60 <__mempcpy_chk@plt+0x2a80>
   13b58:	mov	r0, r4
   13b5c:	bl	125ac <__mempcpy_chk@plt+0x14cc>
   13b60:	mov	r0, r6
   13b64:	bl	149ec <__mempcpy_chk@plt+0x390c>
   13b68:	str	r0, [r9]
   13b6c:	mov	r4, r0
   13b70:	add	r3, sp, #8
   13b74:	ldr	r0, [r7]
   13b78:	ldr	r1, [r7, #40]	; 0x28
   13b7c:	ldr	r2, [r7, #44]	; 0x2c
   13b80:	stm	sp, {r0, r8}
   13b84:	ldr	r0, [sp, #20]
   13b88:	stm	r3, {r0, r1, r2}
   13b8c:	mov	r0, r4
   13b90:	mov	r1, r6
   13b94:	ldr	r2, [sp, #32]
   13b98:	ldr	r3, [sp, #36]	; 0x24
   13b9c:	bl	12808 <__mempcpy_chk@plt+0x1728>
   13ba0:	ldr	r0, [sp, #28]
   13ba4:	ldr	r1, [sp, #24]
   13ba8:	str	r1, [r0]
   13bac:	mov	r0, r4
   13bb0:	sub	sp, fp, #28
   13bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bb8:	bl	110c8 <abort@plt>
   13bbc:	movw	r3, #29032	; 0x7168
   13bc0:	movt	r3, #2
   13bc4:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13bc8:	movw	r3, #29032	; 0x7168
   13bcc:	mov	r1, r0
   13bd0:	mov	r0, #0
   13bd4:	mvn	r2, #0
   13bd8:	movt	r3, #2
   13bdc:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13be0:	movw	r3, #29032	; 0x7168
   13be4:	mov	r2, r1
   13be8:	mov	r1, r0
   13bec:	mov	r0, #0
   13bf0:	movt	r3, #2
   13bf4:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13bf8:	push	{fp, lr}
   13bfc:	mov	fp, sp
   13c00:	sub	sp, sp, #48	; 0x30
   13c04:	vmov.i32	q8, #0	; 0x00000000
   13c08:	mov	ip, #32
   13c0c:	mov	r3, sp
   13c10:	mov	lr, r2
   13c14:	cmp	r1, #10
   13c18:	add	r2, r3, #16
   13c1c:	vst1.64	{d16-d17}, [r3], ip
   13c20:	vst1.64	{d16-d17}, [r3]
   13c24:	vst1.64	{d16-d17}, [r2]
   13c28:	beq	13c48 <__mempcpy_chk@plt+0x2b68>
   13c2c:	str	r1, [sp]
   13c30:	mov	r3, sp
   13c34:	mov	r1, lr
   13c38:	mvn	r2, #0
   13c3c:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13c40:	mov	sp, fp
   13c44:	pop	{fp, pc}
   13c48:	bl	110c8 <abort@plt>
   13c4c:	push	{r4, sl, fp, lr}
   13c50:	add	fp, sp, #8
   13c54:	sub	sp, sp, #48	; 0x30
   13c58:	mov	ip, r3
   13c5c:	mov	r3, sp
   13c60:	vmov.i32	q8, #0	; 0x00000000
   13c64:	mov	lr, #32
   13c68:	cmp	r1, #10
   13c6c:	add	r4, r3, #16
   13c70:	vst1.64	{d16-d17}, [r3], lr
   13c74:	vst1.64	{d16-d17}, [r3]
   13c78:	vst1.64	{d16-d17}, [r4]
   13c7c:	beq	13c9c <__mempcpy_chk@plt+0x2bbc>
   13c80:	str	r1, [sp]
   13c84:	mov	r1, r2
   13c88:	mov	r3, sp
   13c8c:	mov	r2, ip
   13c90:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13c94:	sub	sp, fp, #8
   13c98:	pop	{r4, sl, fp, pc}
   13c9c:	bl	110c8 <abort@plt>
   13ca0:	mov	r2, r1
   13ca4:	mov	r1, r0
   13ca8:	mov	r0, #0
   13cac:	b	13bf8 <__mempcpy_chk@plt+0x2b18>
   13cb0:	mov	r3, r2
   13cb4:	mov	r2, r1
   13cb8:	mov	r1, r0
   13cbc:	mov	r0, #0
   13cc0:	b	13c4c <__mempcpy_chk@plt+0x2b6c>
   13cc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cc8:	add	fp, sp, #24
   13ccc:	sub	sp, sp, #48	; 0x30
   13cd0:	movw	r8, #29032	; 0x7168
   13cd4:	mov	lr, r0
   13cd8:	mov	r3, sp
   13cdc:	mov	ip, r1
   13ce0:	movt	r8, #2
   13ce4:	mov	r1, r3
   13ce8:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13cec:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13cf0:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13cf4:	stm	r1, {r0, r4, r5, r6, r7, r9}
   13cf8:	ubfx	r0, r2, #5, #3
   13cfc:	and	r2, r2, #31
   13d00:	mov	r4, #1
   13d04:	add	r0, r3, r0, lsl #2
   13d08:	ldr	r1, [r0, #8]
   13d0c:	bic	r4, r4, r1, lsr r2
   13d10:	eor	r1, r1, r4, lsl r2
   13d14:	mov	r2, ip
   13d18:	str	r1, [r0, #8]
   13d1c:	mov	r0, #0
   13d20:	mov	r1, lr
   13d24:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13d28:	sub	sp, fp, #24
   13d2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13d34:	add	fp, sp, #24
   13d38:	sub	sp, sp, #48	; 0x30
   13d3c:	movw	lr, #29032	; 0x7168
   13d40:	mov	ip, r0
   13d44:	mov	r3, sp
   13d48:	movt	lr, #2
   13d4c:	mov	r2, r3
   13d50:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   13d54:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13d58:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13d5c:	stm	r2, {r0, r4, r5, r6, r7, r8}
   13d60:	ubfx	r0, r1, #5, #3
   13d64:	and	r1, r1, #31
   13d68:	mov	r7, #1
   13d6c:	add	r0, r3, r0, lsl #2
   13d70:	ldr	r2, [r0, #8]
   13d74:	bic	r7, r7, r2, lsr r1
   13d78:	eor	r1, r2, r7, lsl r1
   13d7c:	mvn	r2, #0
   13d80:	str	r1, [r0, #8]
   13d84:	mov	r0, #0
   13d88:	mov	r1, ip
   13d8c:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13d90:	sub	sp, fp, #24
   13d94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d98:	push	{r4, r5, r6, r7, fp, lr}
   13d9c:	add	fp, sp, #16
   13da0:	sub	sp, sp, #48	; 0x30
   13da4:	movw	lr, #29032	; 0x7168
   13da8:	mov	ip, r0
   13dac:	mov	r3, sp
   13db0:	movt	lr, #2
   13db4:	mov	r2, r3
   13db8:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13dbc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13dc0:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13dc4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13dc8:	mov	r1, ip
   13dcc:	mvn	r2, #0
   13dd0:	ldr	r0, [sp, #12]
   13dd4:	orr	r0, r0, #67108864	; 0x4000000
   13dd8:	str	r0, [sp, #12]
   13ddc:	mov	r0, #0
   13de0:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13de4:	sub	sp, fp, #16
   13de8:	pop	{r4, r5, r6, r7, fp, pc}
   13dec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13df0:	add	fp, sp, #24
   13df4:	sub	sp, sp, #48	; 0x30
   13df8:	movw	r8, #29032	; 0x7168
   13dfc:	mov	ip, r1
   13e00:	mov	lr, r0
   13e04:	mov	r3, sp
   13e08:	movt	r8, #2
   13e0c:	mov	r2, r3
   13e10:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13e14:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13e18:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   13e1c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13e20:	mov	r1, lr
   13e24:	mov	r2, ip
   13e28:	ldr	r0, [sp, #12]
   13e2c:	orr	r0, r0, #67108864	; 0x4000000
   13e30:	str	r0, [sp, #12]
   13e34:	mov	r0, #0
   13e38:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13e3c:	sub	sp, fp, #24
   13e40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e48:	add	fp, sp, #24
   13e4c:	sub	sp, sp, #96	; 0x60
   13e50:	mov	lr, sp
   13e54:	vmov.i32	q8, #0	; 0x00000000
   13e58:	mov	ip, r2
   13e5c:	cmp	r1, #10
   13e60:	add	r3, lr, #16
   13e64:	mov	r2, lr
   13e68:	vst1.64	{d16-d17}, [r3]
   13e6c:	mov	r3, #28
   13e70:	vst1.64	{d16-d17}, [r2], r3
   13e74:	vst1.32	{d16-d17}, [r2]
   13e78:	beq	13eb8 <__mempcpy_chk@plt+0x2dd8>
   13e7c:	str	r1, [sp, #48]	; 0x30
   13e80:	add	r3, sp, #48	; 0x30
   13e84:	ldm	lr!, {r2, r4, r5, r6, r7}
   13e88:	add	r1, r3, #4
   13e8c:	stmia	r1!, {r2, r4, r5, r6, r7}
   13e90:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13e94:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13e98:	mvn	r2, #0
   13e9c:	ldr	r1, [sp, #60]	; 0x3c
   13ea0:	orr	r1, r1, #67108864	; 0x4000000
   13ea4:	str	r1, [sp, #60]	; 0x3c
   13ea8:	mov	r1, ip
   13eac:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13eb0:	sub	sp, fp, #24
   13eb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13eb8:	bl	110c8 <abort@plt>
   13ebc:	push	{fp, lr}
   13ec0:	mov	fp, sp
   13ec4:	sub	sp, sp, #8
   13ec8:	mvn	ip, #0
   13ecc:	str	ip, [sp]
   13ed0:	bl	13edc <__mempcpy_chk@plt+0x2dfc>
   13ed4:	mov	sp, fp
   13ed8:	pop	{fp, pc}
   13edc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ee0:	add	fp, sp, #24
   13ee4:	sub	sp, sp, #48	; 0x30
   13ee8:	movw	ip, #29032	; 0x7168
   13eec:	mov	lr, r3
   13ef0:	mov	r3, sp
   13ef4:	cmp	r1, #0
   13ef8:	movt	ip, #2
   13efc:	cmpne	r2, #0
   13f00:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13f04:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13f08:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13f0c:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13f10:	mov	r3, #10
   13f14:	str	r3, [sp]
   13f18:	bne	13f20 <__mempcpy_chk@plt+0x2e40>
   13f1c:	bl	110c8 <abort@plt>
   13f20:	ldr	ip, [fp, #8]
   13f24:	str	r2, [sp, #44]	; 0x2c
   13f28:	str	r1, [sp, #40]	; 0x28
   13f2c:	mov	r3, sp
   13f30:	mov	r1, lr
   13f34:	mov	r2, ip
   13f38:	bl	13a28 <__mempcpy_chk@plt+0x2948>
   13f3c:	sub	sp, fp, #24
   13f40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f44:	push	{fp, lr}
   13f48:	mov	fp, sp
   13f4c:	sub	sp, sp, #8
   13f50:	mov	r3, r2
   13f54:	mov	r2, r1
   13f58:	mov	r1, r0
   13f5c:	mvn	r0, #0
   13f60:	str	r0, [sp]
   13f64:	mov	r0, #0
   13f68:	bl	13edc <__mempcpy_chk@plt+0x2dfc>
   13f6c:	mov	sp, fp
   13f70:	pop	{fp, pc}
   13f74:	push	{fp, lr}
   13f78:	mov	fp, sp
   13f7c:	sub	sp, sp, #8
   13f80:	mov	ip, r2
   13f84:	mov	r2, r1
   13f88:	mov	r1, r0
   13f8c:	str	r3, [sp]
   13f90:	mov	r0, #0
   13f94:	mov	r3, ip
   13f98:	bl	13edc <__mempcpy_chk@plt+0x2dfc>
   13f9c:	mov	sp, fp
   13fa0:	pop	{fp, pc}
   13fa4:	movw	r3, #28944	; 0x7110
   13fa8:	movt	r3, #2
   13fac:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13fb0:	movw	r3, #28944	; 0x7110
   13fb4:	mov	r2, r1
   13fb8:	mov	r1, r0
   13fbc:	mov	r0, #0
   13fc0:	movt	r3, #2
   13fc4:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13fc8:	movw	r3, #28944	; 0x7110
   13fcc:	mvn	r2, #0
   13fd0:	movt	r3, #2
   13fd4:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13fd8:	movw	r3, #28944	; 0x7110
   13fdc:	mov	r1, r0
   13fe0:	mov	r0, #0
   13fe4:	mvn	r2, #0
   13fe8:	movt	r3, #2
   13fec:	b	13a28 <__mempcpy_chk@plt+0x2948>
   13ff0:	push	{r4, r5, fp, lr}
   13ff4:	add	fp, sp, #8
   13ff8:	mov	r5, r0
   13ffc:	mov	r4, r1
   14000:	mov	r0, #0
   14004:	mov	r2, #5
   14008:	mov	r1, r5
   1400c:	bl	10ef4 <dcgettext@plt>
   14010:	cmp	r0, r5
   14014:	popne	{r4, r5, fp, pc}
   14018:	bl	15348 <__mempcpy_chk@plt+0x4268>
   1401c:	ldrb	r1, [r0]
   14020:	and	r1, r1, #223	; 0xdf
   14024:	cmp	r1, #71	; 0x47
   14028:	beq	14090 <__mempcpy_chk@plt+0x2fb0>
   1402c:	cmp	r1, #85	; 0x55
   14030:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   14034:	ldrb	r1, [r0, #1]
   14038:	and	r1, r1, #223	; 0xdf
   1403c:	cmp	r1, #84	; 0x54
   14040:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   14044:	ldrb	r1, [r0, #2]
   14048:	and	r1, r1, #223	; 0xdf
   1404c:	cmp	r1, #70	; 0x46
   14050:	ldrbeq	r1, [r0, #3]
   14054:	cmpeq	r1, #45	; 0x2d
   14058:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   1405c:	ldrb	r1, [r0, #4]
   14060:	cmp	r1, #56	; 0x38
   14064:	ldrbeq	r0, [r0, #5]
   14068:	cmpeq	r0, #0
   1406c:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   14070:	ldrb	r1, [r5]
   14074:	movw	r2, #24434	; 0x5f72
   14078:	movw	r0, #24438	; 0x5f76
   1407c:	movt	r2, #1
   14080:	movt	r0, #1
   14084:	cmp	r1, #96	; 0x60
   14088:	moveq	r0, r2
   1408c:	pop	{r4, r5, fp, pc}
   14090:	ldrb	r1, [r0, #1]
   14094:	and	r1, r1, #223	; 0xdf
   14098:	cmp	r1, #66	; 0x42
   1409c:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   140a0:	ldrb	r1, [r0, #2]
   140a4:	cmp	r1, #49	; 0x31
   140a8:	ldrbeq	r1, [r0, #3]
   140ac:	cmpeq	r1, #56	; 0x38
   140b0:	beq	140d0 <__mempcpy_chk@plt+0x2ff0>
   140b4:	movw	r1, #24428	; 0x5f6c
   140b8:	movw	r0, #24432	; 0x5f70
   140bc:	cmp	r4, #9
   140c0:	movt	r1, #1
   140c4:	movt	r0, #1
   140c8:	moveq	r0, r1
   140cc:	pop	{r4, r5, fp, pc}
   140d0:	ldrb	r1, [r0, #4]
   140d4:	cmp	r1, #48	; 0x30
   140d8:	ldrbeq	r1, [r0, #5]
   140dc:	cmpeq	r1, #51	; 0x33
   140e0:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   140e4:	ldrb	r1, [r0, #6]
   140e8:	cmp	r1, #48	; 0x30
   140ec:	ldrbeq	r0, [r0, #7]
   140f0:	cmpeq	r0, #0
   140f4:	bne	140b4 <__mempcpy_chk@plt+0x2fd4>
   140f8:	ldrb	r1, [r5]
   140fc:	movw	r2, #24442	; 0x5f7a
   14100:	movw	r0, #24446	; 0x5f7e
   14104:	movt	r2, #1
   14108:	movt	r0, #1
   1410c:	b	14084 <__mempcpy_chk@plt+0x2fa4>
   14110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14114:	add	fp, sp, #28
   14118:	sub	sp, sp, #52	; 0x34
   1411c:	movw	r5, #29336	; 0x7298
   14120:	mov	r7, r0
   14124:	mov	r4, r3
   14128:	mov	sl, r2
   1412c:	mov	r9, r1
   14130:	movt	r5, #2
   14134:	ldrb	r0, [r5]
   14138:	cmp	r0, #0
   1413c:	bne	141b4 <__mempcpy_chk@plt+0x30d4>
   14140:	bl	15348 <__mempcpy_chk@plt+0x4268>
   14144:	movw	r1, #24536	; 0x5fd8
   14148:	mov	r6, r0
   1414c:	movt	r1, #1
   14150:	bl	10e7c <strcmp@plt>
   14154:	clz	r1, r0
   14158:	movw	r2, #29340	; 0x729c
   1415c:	cmp	r0, #0
   14160:	lsr	r1, r1, #5
   14164:	movt	r2, #2
   14168:	str	r1, [r2]
   1416c:	beq	141ac <__mempcpy_chk@plt+0x30cc>
   14170:	movw	r1, #24536	; 0x5fd8
   14174:	mov	r0, r6
   14178:	movt	r1, #1
   1417c:	bl	10f90 <iconv_open@plt>
   14180:	movw	r6, #29344	; 0x72a0
   14184:	cmn	r0, #1
   14188:	movt	r6, #2
   1418c:	str	r0, [r6]
   14190:	bne	141ac <__mempcpy_chk@plt+0x30cc>
   14194:	movw	r0, #24542	; 0x5fde
   14198:	movw	r1, #24536	; 0x5fd8
   1419c:	movt	r0, #1
   141a0:	movt	r1, #1
   141a4:	bl	10f90 <iconv_open@plt>
   141a8:	str	r0, [r6]
   141ac:	mov	r0, #1
   141b0:	strb	r0, [r5]
   141b4:	movw	r5, #29340	; 0x729c
   141b8:	movw	r6, #29344	; 0x72a0
   141bc:	movt	r5, #2
   141c0:	movt	r6, #2
   141c4:	ldr	r0, [r5]
   141c8:	cmp	r0, #0
   141cc:	ldreq	r1, [r6]
   141d0:	cmneq	r1, #1
   141d4:	beq	141ec <__mempcpy_chk@plt+0x310c>
   141d8:	cmp	r7, #127	; 0x7f
   141dc:	bhi	141f8 <__mempcpy_chk@plt+0x3118>
   141e0:	strb	r7, [fp, #-34]	; 0xffffffde
   141e4:	mov	r1, #1
   141e8:	b	14218 <__mempcpy_chk@plt+0x3138>
   141ec:	movw	r1, #24548	; 0x5fe4
   141f0:	movt	r1, #1
   141f4:	b	142e0 <__mempcpy_chk@plt+0x3200>
   141f8:	sub	r0, fp, #34	; 0x22
   141fc:	mov	r1, r7
   14200:	mov	r2, #6
   14204:	bl	14428 <__mempcpy_chk@plt+0x3348>
   14208:	cmp	r0, #0
   1420c:	blt	142d8 <__mempcpy_chk@plt+0x31f8>
   14210:	mov	r1, r0
   14214:	ldr	r0, [r5]
   14218:	cmp	r0, #0
   1421c:	beq	14230 <__mempcpy_chk@plt+0x3150>
   14220:	sub	r0, fp, #34	; 0x22
   14224:	mov	r2, r4
   14228:	blx	r9
   1422c:	b	142ec <__mempcpy_chk@plt+0x320c>
   14230:	sub	r0, fp, #34	; 0x22
   14234:	str	r1, [sp, #12]
   14238:	add	r8, sp, #21
   1423c:	add	r5, sp, #4
   14240:	add	r1, sp, #16
   14244:	add	r2, sp, #12
   14248:	add	r3, sp, #8
   1424c:	str	r0, [sp, #16]
   14250:	mov	r0, #25
   14254:	str	r8, [sp, #8]
   14258:	str	r5, [sp]
   1425c:	str	r0, [sp, #4]
   14260:	ldr	r0, [r6]
   14264:	bl	10e70 <iconv@plt>
   14268:	cmn	r0, #1
   1426c:	beq	142cc <__mempcpy_chk@plt+0x31ec>
   14270:	ldr	r1, [sp, #12]
   14274:	cmp	r1, #0
   14278:	bne	142cc <__mempcpy_chk@plt+0x31ec>
   1427c:	cmp	r0, #0
   14280:	beq	1429c <__mempcpy_chk@plt+0x31bc>
   14284:	ldr	r0, [sp, #8]
   14288:	sub	r0, r0, r8
   1428c:	cmp	r0, #1
   14290:	ldrbeq	r0, [sp, #21]
   14294:	cmpeq	r0, #63	; 0x3f
   14298:	beq	142cc <__mempcpy_chk@plt+0x31ec>
   1429c:	ldr	r0, [r6]
   142a0:	add	r3, sp, #8
   142a4:	mov	r1, #0
   142a8:	mov	r2, #0
   142ac:	str	r5, [sp]
   142b0:	bl	10e70 <iconv@plt>
   142b4:	cmn	r0, #1
   142b8:	beq	142cc <__mempcpy_chk@plt+0x31ec>
   142bc:	ldr	r0, [sp, #8]
   142c0:	sub	r1, r0, r8
   142c4:	mov	r0, r8
   142c8:	b	14224 <__mempcpy_chk@plt+0x3144>
   142cc:	mov	r0, r7
   142d0:	mov	r1, #0
   142d4:	b	142e4 <__mempcpy_chk@plt+0x3204>
   142d8:	movw	r1, #24574	; 0x5ffe
   142dc:	movt	r1, #1
   142e0:	mov	r0, r7
   142e4:	mov	r2, r4
   142e8:	blx	sl
   142ec:	sub	sp, fp, #28
   142f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142f4:	push	{fp, lr}
   142f8:	mov	fp, sp
   142fc:	mov	r3, r2
   14300:	mov	r2, r1
   14304:	mov	r1, #1
   14308:	bl	10f24 <fwrite@plt>
   1430c:	mov	r0, #0
   14310:	pop	{fp, pc}
   14314:	push	{fp, lr}
   14318:	mov	fp, sp
   1431c:	movw	r3, #17240	; 0x4358
   14320:	mov	ip, r0
   14324:	movw	r0, #17380	; 0x43e4
   14328:	cmp	r2, #0
   1432c:	mov	lr, r1
   14330:	movw	r1, #17140	; 0x42f4
   14334:	movt	r0, #1
   14338:	movt	r3, #1
   1433c:	movt	r1, #1
   14340:	moveq	r3, r0
   14344:	mov	r0, lr
   14348:	mov	r2, r3
   1434c:	mov	r3, ip
   14350:	pop	{fp, lr}
   14354:	b	14110 <__mempcpy_chk@plt+0x3030>
   14358:	push	{r4, r5, r6, sl, fp, lr}
   1435c:	add	fp, sp, #16
   14360:	sub	sp, sp, #8
   14364:	mov	r4, r0
   14368:	cmp	r1, #0
   1436c:	beq	143b0 <__mempcpy_chk@plt+0x32d0>
   14370:	mov	r5, r1
   14374:	movw	r1, #24642	; 0x6042
   14378:	mov	r0, #0
   1437c:	mov	r2, #5
   14380:	movt	r1, #1
   14384:	bl	10ef4 <dcgettext@plt>
   14388:	mov	r6, r0
   1438c:	mov	r0, #0
   14390:	mov	r1, r5
   14394:	mov	r2, #5
   14398:	bl	10ef4 <dcgettext@plt>
   1439c:	str	r0, [sp]
   143a0:	mov	r0, #1
   143a4:	mov	r1, #0
   143a8:	mov	r2, r6
   143ac:	b	143d0 <__mempcpy_chk@plt+0x32f0>
   143b0:	movw	r1, #24597	; 0x6015
   143b4:	mov	r0, #0
   143b8:	mov	r2, #5
   143bc:	movt	r1, #1
   143c0:	bl	10ef4 <dcgettext@plt>
   143c4:	mov	r2, r0
   143c8:	mov	r0, #1
   143cc:	mov	r1, #0
   143d0:	mov	r3, r4
   143d4:	bl	10f6c <error@plt>
   143d8:	mvn	r0, #0
   143dc:	sub	sp, fp, #16
   143e0:	pop	{r4, r5, r6, sl, fp, pc}
   143e4:	push	{fp, lr}
   143e8:	mov	fp, sp
   143ec:	mov	r3, r0
   143f0:	mov	r0, #0
   143f4:	mov	r1, r2
   143f8:	cmp	r0, r3, lsr #16
   143fc:	bne	1440c <__mempcpy_chk@plt+0x332c>
   14400:	movw	r2, #24691	; 0x6073
   14404:	movt	r2, #1
   14408:	b	14414 <__mempcpy_chk@plt+0x3334>
   1440c:	movw	r2, #24698	; 0x607a
   14410:	movt	r2, #1
   14414:	mov	r0, r1
   14418:	mov	r1, #1
   1441c:	bl	11038 <__fprintf_chk@plt>
   14420:	mvn	r0, #0
   14424:	pop	{fp, pc}
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	mvn	r3, #1
   14434:	cmp	r1, #128	; 0x80
   14438:	bcc	144f8 <__mempcpy_chk@plt+0x3418>
   1443c:	mov	ip, #2
   14440:	cmp	r1, #2048	; 0x800
   14444:	bcs	144bc <__mempcpy_chk@plt+0x33dc>
   14448:	cmp	ip, r2
   1444c:	mvn	r3, #1
   14450:	bgt	144f8 <__mempcpy_chk@plt+0x3418>
   14454:	cmp	ip, #2
   14458:	beq	1449c <__mempcpy_chk@plt+0x33bc>
   1445c:	cmp	ip, #3
   14460:	beq	14484 <__mempcpy_chk@plt+0x33a4>
   14464:	cmp	ip, #4
   14468:	bne	144b4 <__mempcpy_chk@plt+0x33d4>
   1446c:	mov	r2, #2
   14470:	mov	r3, r1
   14474:	bfi	r3, r2, #6, #26
   14478:	mov	r2, #65536	; 0x10000
   1447c:	orr	r1, r2, r1, lsr #6
   14480:	strb	r3, [r0, #3]
   14484:	mov	r2, #2
   14488:	mov	r3, r1
   1448c:	bfi	r3, r2, #6, #26
   14490:	mov	r2, #2048	; 0x800
   14494:	orr	r1, r2, r1, lsr #6
   14498:	strb	r3, [r0, #2]
   1449c:	mov	r2, #192	; 0xc0
   144a0:	orr	r2, r2, r1, lsr #6
   144a4:	strb	r2, [r0]
   144a8:	mov	r2, #2
   144ac:	bfi	r1, r2, #6, #26
   144b0:	strb	r1, [r0, #1]
   144b4:	mov	r3, ip
   144b8:	b	144f8 <__mempcpy_chk@plt+0x3418>
   144bc:	mov	r3, #0
   144c0:	cmp	r3, r1, lsr #16
   144c4:	bne	144e4 <__mempcpy_chk@plt+0x3404>
   144c8:	mov	lr, r1
   144cc:	mov	ip, #3
   144d0:	mvn	r3, #0
   144d4:	bfc	lr, #0, #11
   144d8:	cmp	lr, #55296	; 0xd800
   144dc:	bne	14448 <__mempcpy_chk@plt+0x3368>
   144e0:	b	144f8 <__mempcpy_chk@plt+0x3418>
   144e4:	lsr	lr, r1, #16
   144e8:	mvn	r3, #0
   144ec:	mov	ip, #4
   144f0:	cmp	lr, #16
   144f4:	bls	14448 <__mempcpy_chk@plt+0x3368>
   144f8:	mov	r0, r3
   144fc:	pop	{fp, pc}
   14500:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14504:	add	fp, sp, #24
   14508:	sub	sp, sp, #32
   1450c:	ldr	r6, [fp, #12]
   14510:	ldr	r7, [fp, #8]
   14514:	mov	r4, r2
   14518:	mov	r8, r0
   1451c:	cmp	r1, #0
   14520:	beq	14548 <__mempcpy_chk@plt+0x3468>
   14524:	movw	r2, #24705	; 0x6081
   14528:	mov	r5, r1
   1452c:	str	r3, [sp, #4]
   14530:	str	r4, [sp]
   14534:	mov	r0, r8
   14538:	mov	r1, #1
   1453c:	movt	r2, #1
   14540:	mov	r3, r5
   14544:	b	14560 <__mempcpy_chk@plt+0x3480>
   14548:	movw	r2, #24717	; 0x608d
   1454c:	str	r3, [sp]
   14550:	mov	r0, r8
   14554:	mov	r1, #1
   14558:	mov	r3, r4
   1455c:	movt	r2, #1
   14560:	bl	11038 <__fprintf_chk@plt>
   14564:	movw	r1, #24724	; 0x6094
   14568:	mov	r0, #0
   1456c:	mov	r2, #5
   14570:	movt	r1, #1
   14574:	bl	10ef4 <dcgettext@plt>
   14578:	movw	r2, #25442	; 0x6362
   1457c:	mov	r3, r0
   14580:	movw	r0, #2022	; 0x7e6
   14584:	mov	r1, #1
   14588:	str	r0, [sp]
   1458c:	movt	r2, #1
   14590:	mov	r0, r8
   14594:	bl	11038 <__fprintf_chk@plt>
   14598:	movw	r4, #22075	; 0x563b
   1459c:	mov	r1, r8
   145a0:	movt	r4, #1
   145a4:	mov	r0, r4
   145a8:	bl	10e58 <fputs_unlocked@plt>
   145ac:	movw	r1, #24728	; 0x6098
   145b0:	mov	r0, #0
   145b4:	mov	r2, #5
   145b8:	movt	r1, #1
   145bc:	bl	10ef4 <dcgettext@plt>
   145c0:	movw	r3, #24899	; 0x6143
   145c4:	mov	r2, r0
   145c8:	mov	r0, r8
   145cc:	mov	r1, #1
   145d0:	movt	r3, #1
   145d4:	bl	11038 <__fprintf_chk@plt>
   145d8:	mov	r0, r4
   145dc:	mov	r1, r8
   145e0:	bl	10e58 <fputs_unlocked@plt>
   145e4:	cmp	r6, #9
   145e8:	bhi	1464c <__mempcpy_chk@plt+0x356c>
   145ec:	add	r0, pc, #0
   145f0:	ldr	pc, [r0, r6, lsl #2]
   145f4:	andeq	r4, r1, r4, lsr #16
   145f8:	andeq	r4, r1, ip, lsl r6
   145fc:	andeq	r4, r1, r8, asr r6
   14600:	andeq	r4, r1, r0, lsl #13
   14604:	andeq	r4, r1, r8, lsr #13
   14608:	ldrdeq	r4, [r1], -r0
   1460c:	strdeq	r4, [r1], -r8
   14610:	andeq	r4, r1, r0, lsr r7
   14614:	ldrdeq	r4, [r1], -r0
   14618:	andeq	r4, r1, r8, ror r7
   1461c:	movw	r1, #24933	; 0x6165
   14620:	mov	r0, #0
   14624:	mov	r2, #5
   14628:	movt	r1, #1
   1462c:	bl	10ef4 <dcgettext@plt>
   14630:	ldr	r3, [r7]
   14634:	mov	r2, r0
   14638:	mov	r0, r8
   1463c:	mov	r1, #1
   14640:	sub	sp, fp, #24
   14644:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14648:	b	11038 <__fprintf_chk@plt>
   1464c:	movw	r1, #25252	; 0x62a4
   14650:	movt	r1, #1
   14654:	b	14780 <__mempcpy_chk@plt+0x36a0>
   14658:	movw	r1, #24949	; 0x6175
   1465c:	mov	r0, #0
   14660:	mov	r2, #5
   14664:	movt	r1, #1
   14668:	bl	10ef4 <dcgettext@plt>
   1466c:	mov	r2, r0
   14670:	ldr	r3, [r7]
   14674:	ldr	r0, [r7, #4]
   14678:	str	r0, [sp]
   1467c:	b	1476c <__mempcpy_chk@plt+0x368c>
   14680:	movw	r1, #24972	; 0x618c
   14684:	mov	r0, #0
   14688:	mov	r2, #5
   1468c:	movt	r1, #1
   14690:	bl	10ef4 <dcgettext@plt>
   14694:	ldr	r3, [r7]
   14698:	mov	r2, r0
   1469c:	ldmib	r7, {r0, r1}
   146a0:	stm	sp, {r0, r1}
   146a4:	b	1476c <__mempcpy_chk@plt+0x368c>
   146a8:	movw	r1, #25000	; 0x61a8
   146ac:	mov	r0, #0
   146b0:	mov	r2, #5
   146b4:	movt	r1, #1
   146b8:	bl	10ef4 <dcgettext@plt>
   146bc:	ldr	r3, [r7]
   146c0:	mov	r2, r0
   146c4:	ldmib	r7, {r0, r1, r7}
   146c8:	stm	sp, {r0, r1, r7}
   146cc:	b	1476c <__mempcpy_chk@plt+0x368c>
   146d0:	movw	r1, #25032	; 0x61c8
   146d4:	mov	r0, #0
   146d8:	mov	r2, #5
   146dc:	movt	r1, #1
   146e0:	bl	10ef4 <dcgettext@plt>
   146e4:	ldr	r3, [r7]
   146e8:	mov	r2, r0
   146ec:	ldmib	r7, {r0, r1, r6, r7}
   146f0:	stm	sp, {r0, r1, r6, r7}
   146f4:	b	1476c <__mempcpy_chk@plt+0x368c>
   146f8:	movw	r1, #25068	; 0x61ec
   146fc:	mov	r0, #0
   14700:	mov	r2, #5
   14704:	movt	r1, #1
   14708:	bl	10ef4 <dcgettext@plt>
   1470c:	ldr	r3, [r7]
   14710:	mov	r2, r0
   14714:	ldmib	r7, {r0, r1, r6}
   14718:	ldr	r5, [r7, #16]
   1471c:	ldr	r7, [r7, #20]
   14720:	stm	sp, {r0, r1, r6}
   14724:	str	r5, [sp, #12]
   14728:	str	r7, [sp, #16]
   1472c:	b	1476c <__mempcpy_chk@plt+0x368c>
   14730:	movw	r1, #25108	; 0x6214
   14734:	mov	r0, #0
   14738:	mov	r2, #5
   1473c:	movt	r1, #1
   14740:	bl	10ef4 <dcgettext@plt>
   14744:	ldr	r3, [r7]
   14748:	mov	r2, r0
   1474c:	ldmib	r7, {r0, r1, r6}
   14750:	ldr	r5, [r7, #16]
   14754:	ldr	r4, [r7, #20]
   14758:	ldr	r7, [r7, #24]
   1475c:	stm	sp, {r0, r1, r6}
   14760:	str	r5, [sp, #12]
   14764:	str	r4, [sp, #16]
   14768:	str	r7, [sp, #20]
   1476c:	mov	r0, r8
   14770:	mov	r1, #1
   14774:	b	14820 <__mempcpy_chk@plt+0x3740>
   14778:	movw	r1, #25200	; 0x6270
   1477c:	movt	r1, #1
   14780:	mov	r0, #0
   14784:	mov	r2, #5
   14788:	bl	10ef4 <dcgettext@plt>
   1478c:	mov	ip, r0
   14790:	ldr	r3, [r7]
   14794:	ldr	r0, [r7, #4]
   14798:	ldr	r1, [r7, #8]
   1479c:	ldr	r6, [r7, #12]
   147a0:	ldr	r5, [r7, #16]
   147a4:	ldr	r4, [r7, #20]
   147a8:	ldr	r2, [r7, #24]
   147ac:	ldr	lr, [r7, #28]
   147b0:	ldr	r7, [r7, #32]
   147b4:	stm	sp, {r0, r1, r6}
   147b8:	str	r5, [sp, #12]
   147bc:	str	r4, [sp, #16]
   147c0:	str	r2, [sp, #20]
   147c4:	str	lr, [sp, #24]
   147c8:	str	r7, [sp, #28]
   147cc:	b	14814 <__mempcpy_chk@plt+0x3734>
   147d0:	movw	r1, #25152	; 0x6240
   147d4:	mov	r0, #0
   147d8:	mov	r2, #5
   147dc:	movt	r1, #1
   147e0:	bl	10ef4 <dcgettext@plt>
   147e4:	mov	ip, r0
   147e8:	ldr	r3, [r7]
   147ec:	ldmib	r7, {r0, r1, r6}
   147f0:	ldr	r5, [r7, #16]
   147f4:	ldr	r4, [r7, #20]
   147f8:	ldr	r2, [r7, #24]
   147fc:	ldr	r7, [r7, #28]
   14800:	stm	sp, {r0, r1, r6}
   14804:	str	r5, [sp, #12]
   14808:	str	r4, [sp, #16]
   1480c:	str	r2, [sp, #20]
   14810:	str	r7, [sp, #24]
   14814:	mov	r0, r8
   14818:	mov	r1, #1
   1481c:	mov	r2, ip
   14820:	bl	11038 <__fprintf_chk@plt>
   14824:	sub	sp, fp, #24
   14828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1482c:	push	{r4, sl, fp, lr}
   14830:	add	fp, sp, #8
   14834:	sub	sp, sp, #8
   14838:	ldr	ip, [fp, #8]
   1483c:	mov	lr, #0
   14840:	ldr	r4, [ip, lr, lsl #2]
   14844:	add	lr, lr, #1
   14848:	cmp	r4, #0
   1484c:	bne	14840 <__mempcpy_chk@plt+0x3760>
   14850:	sub	r4, lr, #1
   14854:	str	ip, [sp]
   14858:	str	r4, [sp, #4]
   1485c:	bl	14500 <__mempcpy_chk@plt+0x3420>
   14860:	sub	sp, fp, #8
   14864:	pop	{r4, sl, fp, pc}
   14868:	push	{r4, r5, fp, lr}
   1486c:	add	fp, sp, #8
   14870:	sub	sp, sp, #48	; 0x30
   14874:	ldr	r4, [fp, #8]
   14878:	mov	ip, #0
   1487c:	add	lr, sp, #8
   14880:	ldr	r5, [r4]
   14884:	cmp	r5, #0
   14888:	str	r5, [lr, ip, lsl #2]
   1488c:	beq	148a0 <__mempcpy_chk@plt+0x37c0>
   14890:	add	ip, ip, #1
   14894:	add	r4, r4, #4
   14898:	cmp	ip, #10
   1489c:	bcc	14880 <__mempcpy_chk@plt+0x37a0>
   148a0:	str	lr, [sp]
   148a4:	str	ip, [sp, #4]
   148a8:	bl	14500 <__mempcpy_chk@plt+0x3420>
   148ac:	sub	sp, fp, #8
   148b0:	pop	{r4, r5, fp, pc}
   148b4:	push	{fp, lr}
   148b8:	mov	fp, sp
   148bc:	sub	sp, sp, #8
   148c0:	add	ip, fp, #8
   148c4:	str	ip, [sp, #4]
   148c8:	str	ip, [sp]
   148cc:	bl	14868 <__mempcpy_chk@plt+0x3788>
   148d0:	mov	sp, fp
   148d4:	pop	{fp, pc}
   148d8:	push	{fp, lr}
   148dc:	mov	fp, sp
   148e0:	movw	r0, #29004	; 0x714c
   148e4:	movt	r0, #2
   148e8:	ldr	r1, [r0]
   148ec:	movw	r0, #22075	; 0x563b
   148f0:	movt	r0, #1
   148f4:	bl	10e58 <fputs_unlocked@plt>
   148f8:	movw	r1, #25312	; 0x62e0
   148fc:	mov	r0, #0
   14900:	mov	r2, #5
   14904:	movt	r1, #1
   14908:	bl	10ef4 <dcgettext@plt>
   1490c:	movw	r2, #25332	; 0x62f4
   14910:	mov	r1, r0
   14914:	mov	r0, #1
   14918:	movt	r2, #1
   1491c:	bl	11014 <__printf_chk@plt>
   14920:	movw	r1, #25354	; 0x630a
   14924:	mov	r0, #0
   14928:	mov	r2, #5
   1492c:	movt	r1, #1
   14930:	bl	10ef4 <dcgettext@plt>
   14934:	movw	r2, #23457	; 0x5ba1
   14938:	movw	r3, #23677	; 0x5c7d
   1493c:	mov	r1, r0
   14940:	mov	r0, #1
   14944:	movt	r2, #1
   14948:	movt	r3, #1
   1494c:	bl	11014 <__printf_chk@plt>
   14950:	movw	r1, #25374	; 0x631e
   14954:	mov	r0, #0
   14958:	mov	r2, #5
   1495c:	movt	r1, #1
   14960:	bl	10ef4 <dcgettext@plt>
   14964:	movw	r2, #25413	; 0x6345
   14968:	mov	r1, r0
   1496c:	mov	r0, #1
   14970:	movt	r2, #1
   14974:	pop	{fp, lr}
   14978:	b	11014 <__printf_chk@plt>
   1497c:	b	14980 <__mempcpy_chk@plt+0x38a0>
   14980:	push	{r4, r5, r6, sl, fp, lr}
   14984:	add	fp, sp, #16
   14988:	mov	r4, r2
   1498c:	mov	r5, r1
   14990:	mov	r6, r0
   14994:	bl	153e0 <__mempcpy_chk@plt+0x4300>
   14998:	cmp	r0, #0
   1499c:	popne	{r4, r5, r6, sl, fp, pc}
   149a0:	cmp	r6, #0
   149a4:	beq	149b8 <__mempcpy_chk@plt+0x38d8>
   149a8:	cmp	r5, #0
   149ac:	cmpne	r4, #0
   149b0:	bne	149b8 <__mempcpy_chk@plt+0x38d8>
   149b4:	pop	{r4, r5, r6, sl, fp, pc}
   149b8:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   149bc:	push	{fp, lr}
   149c0:	mov	fp, sp
   149c4:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   149c8:	cmp	r0, #0
   149cc:	popne	{fp, pc}
   149d0:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   149d4:	push	{fp, lr}
   149d8:	mov	fp, sp
   149dc:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   149e0:	cmp	r0, #0
   149e4:	popne	{fp, pc}
   149e8:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   149ec:	push	{fp, lr}
   149f0:	mov	fp, sp
   149f4:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   149f8:	cmp	r0, #0
   149fc:	popne	{fp, pc}
   14a00:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14a04:	push	{r4, r5, fp, lr}
   14a08:	add	fp, sp, #8
   14a0c:	mov	r4, r1
   14a10:	mov	r5, r0
   14a14:	bl	15030 <__mempcpy_chk@plt+0x3f50>
   14a18:	cmp	r0, #0
   14a1c:	popne	{r4, r5, fp, pc}
   14a20:	cmp	r5, #0
   14a24:	beq	14a34 <__mempcpy_chk@plt+0x3954>
   14a28:	cmp	r4, #0
   14a2c:	bne	14a34 <__mempcpy_chk@plt+0x3954>
   14a30:	pop	{r4, r5, fp, pc}
   14a34:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14a38:	push	{fp, lr}
   14a3c:	mov	fp, sp
   14a40:	cmp	r1, #0
   14a44:	orreq	r1, r1, #1
   14a48:	bl	15030 <__mempcpy_chk@plt+0x3f50>
   14a4c:	cmp	r0, #0
   14a50:	popne	{fp, pc}
   14a54:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14a58:	push	{fp, lr}
   14a5c:	mov	fp, sp
   14a60:	clz	r3, r2
   14a64:	lsr	ip, r3, #5
   14a68:	clz	r3, r1
   14a6c:	lsr	r3, r3, #5
   14a70:	orrs	r3, r3, ip
   14a74:	movwne	r1, #1
   14a78:	movwne	r2, #1
   14a7c:	bl	153e0 <__mempcpy_chk@plt+0x4300>
   14a80:	cmp	r0, #0
   14a84:	popne	{fp, pc}
   14a88:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14a8c:	push	{fp, lr}
   14a90:	mov	fp, sp
   14a94:	mov	r2, r1
   14a98:	mov	r1, r0
   14a9c:	mov	r0, #0
   14aa0:	bl	153e0 <__mempcpy_chk@plt+0x4300>
   14aa4:	cmp	r0, #0
   14aa8:	popne	{fp, pc}
   14aac:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14ab0:	mov	r2, r1
   14ab4:	mov	r1, r0
   14ab8:	mov	r0, #0
   14abc:	b	14a58 <__mempcpy_chk@plt+0x3978>
   14ac0:	mov	r2, #1
   14ac4:	b	14ac8 <__mempcpy_chk@plt+0x39e8>
   14ac8:	push	{r4, r5, fp, lr}
   14acc:	add	fp, sp, #8
   14ad0:	ldr	r5, [r1]
   14ad4:	mov	r4, r1
   14ad8:	cmp	r0, #0
   14adc:	beq	14af4 <__mempcpy_chk@plt+0x3a14>
   14ae0:	mov	r1, #1
   14ae4:	add	r1, r1, r5, lsr #1
   14ae8:	adds	r5, r5, r1
   14aec:	bcc	14b0c <__mempcpy_chk@plt+0x3a2c>
   14af0:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14af4:	cmp	r5, #0
   14af8:	bne	14b0c <__mempcpy_chk@plt+0x3a2c>
   14afc:	mov	r1, #64	; 0x40
   14b00:	cmp	r2, #64	; 0x40
   14b04:	udiv	r5, r1, r2
   14b08:	addhi	r5, r5, #1
   14b0c:	mov	r1, r5
   14b10:	bl	14980 <__mempcpy_chk@plt+0x38a0>
   14b14:	str	r5, [r4]
   14b18:	pop	{r4, r5, fp, pc}
   14b1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b20:	add	fp, sp, #24
   14b24:	ldr	r6, [r1]
   14b28:	mov	r8, r1
   14b2c:	ldr	r4, [fp, #8]
   14b30:	add	r1, r6, r6, asr #1
   14b34:	cmp	r1, r6
   14b38:	mvnvs	r1, #-2147483648	; 0x80000000
   14b3c:	cmp	r1, r3
   14b40:	mov	r5, r1
   14b44:	movgt	r5, r3
   14b48:	cmn	r3, #1
   14b4c:	movle	r5, r1
   14b50:	cmn	r4, #1
   14b54:	ble	14b74 <__mempcpy_chk@plt+0x3a94>
   14b58:	cmp	r4, #0
   14b5c:	beq	14bc8 <__mempcpy_chk@plt+0x3ae8>
   14b60:	cmn	r5, #1
   14b64:	ble	14b9c <__mempcpy_chk@plt+0x3abc>
   14b68:	mvn	r7, #-2147483648	; 0x80000000
   14b6c:	udiv	r1, r7, r4
   14b70:	b	14b90 <__mempcpy_chk@plt+0x3ab0>
   14b74:	cmn	r5, #1
   14b78:	ble	14bb8 <__mempcpy_chk@plt+0x3ad8>
   14b7c:	cmn	r4, #1
   14b80:	beq	14bc8 <__mempcpy_chk@plt+0x3ae8>
   14b84:	mov	r1, #-2147483648	; 0x80000000
   14b88:	mvn	r7, #-2147483648	; 0x80000000
   14b8c:	sdiv	r1, r1, r4
   14b90:	cmp	r1, r5
   14b94:	bge	14bc8 <__mempcpy_chk@plt+0x3ae8>
   14b98:	b	14bd8 <__mempcpy_chk@plt+0x3af8>
   14b9c:	beq	14bc8 <__mempcpy_chk@plt+0x3ae8>
   14ba0:	mov	r1, #-2147483648	; 0x80000000
   14ba4:	mvn	r7, #-2147483648	; 0x80000000
   14ba8:	sdiv	r1, r1, r5
   14bac:	cmp	r1, r4
   14bb0:	bge	14bc8 <__mempcpy_chk@plt+0x3ae8>
   14bb4:	b	14bd8 <__mempcpy_chk@plt+0x3af8>
   14bb8:	mvn	r7, #-2147483648	; 0x80000000
   14bbc:	sdiv	r1, r7, r4
   14bc0:	cmp	r5, r1
   14bc4:	blt	14bd8 <__mempcpy_chk@plt+0x3af8>
   14bc8:	mul	r1, r5, r4
   14bcc:	mov	r7, #64	; 0x40
   14bd0:	cmp	r1, #63	; 0x3f
   14bd4:	bgt	14be0 <__mempcpy_chk@plt+0x3b00>
   14bd8:	sdiv	r5, r7, r4
   14bdc:	mul	r1, r5, r4
   14be0:	cmp	r0, #0
   14be4:	moveq	r7, #0
   14be8:	streq	r7, [r8]
   14bec:	sub	r7, r5, r6
   14bf0:	cmp	r7, r2
   14bf4:	bge	14c98 <__mempcpy_chk@plt+0x3bb8>
   14bf8:	add	r5, r6, r2
   14bfc:	mov	r2, #0
   14c00:	mov	r1, #0
   14c04:	cmp	r5, r3
   14c08:	movwgt	r2, #1
   14c0c:	cmn	r3, #1
   14c10:	movwgt	r1, #1
   14c14:	cmp	r5, r6
   14c18:	bvs	14c80 <__mempcpy_chk@plt+0x3ba0>
   14c1c:	ands	r1, r1, r2
   14c20:	bne	14c80 <__mempcpy_chk@plt+0x3ba0>
   14c24:	cmn	r4, #1
   14c28:	ble	14c48 <__mempcpy_chk@plt+0x3b68>
   14c2c:	cmp	r4, #0
   14c30:	beq	14c94 <__mempcpy_chk@plt+0x3bb4>
   14c34:	cmn	r5, #1
   14c38:	ble	14c6c <__mempcpy_chk@plt+0x3b8c>
   14c3c:	mvn	r1, #-2147483648	; 0x80000000
   14c40:	udiv	r1, r1, r4
   14c44:	b	14c60 <__mempcpy_chk@plt+0x3b80>
   14c48:	cmn	r5, #1
   14c4c:	ble	14c84 <__mempcpy_chk@plt+0x3ba4>
   14c50:	cmn	r4, #1
   14c54:	beq	14c94 <__mempcpy_chk@plt+0x3bb4>
   14c58:	mov	r1, #-2147483648	; 0x80000000
   14c5c:	sdiv	r1, r1, r4
   14c60:	cmp	r1, r5
   14c64:	bge	14c94 <__mempcpy_chk@plt+0x3bb4>
   14c68:	b	14c80 <__mempcpy_chk@plt+0x3ba0>
   14c6c:	beq	14c94 <__mempcpy_chk@plt+0x3bb4>
   14c70:	mov	r1, #-2147483648	; 0x80000000
   14c74:	sdiv	r1, r1, r5
   14c78:	cmp	r1, r4
   14c7c:	bge	14c94 <__mempcpy_chk@plt+0x3bb4>
   14c80:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14c84:	mvn	r1, #-2147483648	; 0x80000000
   14c88:	sdiv	r1, r1, r4
   14c8c:	cmp	r5, r1
   14c90:	blt	14c80 <__mempcpy_chk@plt+0x3ba0>
   14c94:	mul	r1, r5, r4
   14c98:	bl	14a04 <__mempcpy_chk@plt+0x3924>
   14c9c:	str	r5, [r8]
   14ca0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ca4:	push	{fp, lr}
   14ca8:	mov	fp, sp
   14cac:	mov	r1, #1
   14cb0:	bl	14fac <__mempcpy_chk@plt+0x3ecc>
   14cb4:	cmp	r0, #0
   14cb8:	popne	{fp, pc}
   14cbc:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	bl	14fac <__mempcpy_chk@plt+0x3ecc>
   14ccc:	cmp	r0, #0
   14cd0:	popne	{fp, pc}
   14cd4:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14cd8:	push	{fp, lr}
   14cdc:	mov	fp, sp
   14ce0:	mov	r1, #1
   14ce4:	bl	14fac <__mempcpy_chk@plt+0x3ecc>
   14ce8:	cmp	r0, #0
   14cec:	popne	{fp, pc}
   14cf0:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14cf4:	push	{fp, lr}
   14cf8:	mov	fp, sp
   14cfc:	bl	14fac <__mempcpy_chk@plt+0x3ecc>
   14d00:	cmp	r0, #0
   14d04:	popne	{fp, pc}
   14d08:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14d0c:	push	{r4, r5, r6, sl, fp, lr}
   14d10:	add	fp, sp, #16
   14d14:	mov	r5, r0
   14d18:	mov	r0, r1
   14d1c:	mov	r4, r1
   14d20:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   14d24:	cmp	r0, #0
   14d28:	beq	14d44 <__mempcpy_chk@plt+0x3c64>
   14d2c:	mov	r1, r5
   14d30:	mov	r2, r4
   14d34:	mov	r6, r0
   14d38:	bl	10eb8 <memcpy@plt>
   14d3c:	mov	r0, r6
   14d40:	pop	{r4, r5, r6, sl, fp, pc}
   14d44:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14d48:	push	{r4, r5, r6, sl, fp, lr}
   14d4c:	add	fp, sp, #16
   14d50:	mov	r5, r0
   14d54:	mov	r0, r1
   14d58:	mov	r4, r1
   14d5c:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   14d60:	cmp	r0, #0
   14d64:	beq	14d80 <__mempcpy_chk@plt+0x3ca0>
   14d68:	mov	r1, r5
   14d6c:	mov	r2, r4
   14d70:	mov	r6, r0
   14d74:	bl	10eb8 <memcpy@plt>
   14d78:	mov	r0, r6
   14d7c:	pop	{r4, r5, r6, sl, fp, pc}
   14d80:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14d84:	push	{r4, r5, r6, sl, fp, lr}
   14d88:	add	fp, sp, #16
   14d8c:	mov	r5, r0
   14d90:	add	r0, r1, #1
   14d94:	mov	r4, r1
   14d98:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   14d9c:	cmp	r0, #0
   14da0:	beq	14dc8 <__mempcpy_chk@plt+0x3ce8>
   14da4:	mov	r6, r0
   14da8:	mov	r0, #0
   14dac:	mov	r1, r5
   14db0:	mov	r2, r4
   14db4:	strb	r0, [r6, r4]
   14db8:	mov	r0, r6
   14dbc:	bl	10eb8 <memcpy@plt>
   14dc0:	mov	r0, r6
   14dc4:	pop	{r4, r5, r6, sl, fp, pc}
   14dc8:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14dcc:	push	{r4, r5, r6, sl, fp, lr}
   14dd0:	add	fp, sp, #16
   14dd4:	mov	r4, r0
   14dd8:	bl	10fe4 <strlen@plt>
   14ddc:	add	r5, r0, #1
   14de0:	mov	r0, r5
   14de4:	bl	15000 <__mempcpy_chk@plt+0x3f20>
   14de8:	cmp	r0, #0
   14dec:	beq	14e08 <__mempcpy_chk@plt+0x3d28>
   14df0:	mov	r1, r4
   14df4:	mov	r2, r5
   14df8:	mov	r6, r0
   14dfc:	bl	10eb8 <memcpy@plt>
   14e00:	mov	r0, r6
   14e04:	pop	{r4, r5, r6, sl, fp, pc}
   14e08:	bl	14e0c <__mempcpy_chk@plt+0x3d2c>
   14e0c:	push	{fp, lr}
   14e10:	mov	fp, sp
   14e14:	movw	r0, #28924	; 0x70fc
   14e18:	movw	r1, #25489	; 0x6391
   14e1c:	mov	r2, #5
   14e20:	movt	r0, #2
   14e24:	movt	r1, #1
   14e28:	ldr	r4, [r0]
   14e2c:	mov	r0, #0
   14e30:	bl	10ef4 <dcgettext@plt>
   14e34:	movw	r2, #23891	; 0x5d53
   14e38:	mov	r3, r0
   14e3c:	mov	r0, r4
   14e40:	mov	r1, #0
   14e44:	movt	r2, #1
   14e48:	bl	10f6c <error@plt>
   14e4c:	bl	110c8 <abort@plt>
   14e50:	sub	sp, sp, #12
   14e54:	push	{fp, lr}
   14e58:	mov	fp, sp
   14e5c:	sub	sp, sp, #4
   14e60:	add	ip, fp, #8
   14e64:	stm	ip, {r1, r2, r3}
   14e68:	add	r1, fp, #8
   14e6c:	str	r1, [sp]
   14e70:	bl	14e84 <__mempcpy_chk@plt+0x3da4>
   14e74:	mov	sp, fp
   14e78:	pop	{fp, lr}
   14e7c:	add	sp, sp, #12
   14e80:	bx	lr
   14e84:	push	{r4, r5, r6, sl, fp, lr}
   14e88:	add	fp, sp, #16
   14e8c:	mov	r2, r1
   14e90:	mov	r1, r0
   14e94:	mov	r0, #1
   14e98:	bl	10ee8 <__vprintf_chk@plt>
   14e9c:	mov	r4, r0
   14ea0:	cmn	r0, #1
   14ea4:	bgt	14ef8 <__mempcpy_chk@plt+0x3e18>
   14ea8:	movw	r0, #29004	; 0x714c
   14eac:	movt	r0, #2
   14eb0:	ldr	r0, [r0]
   14eb4:	bl	10ea0 <ferror@plt>
   14eb8:	cmp	r0, #0
   14ebc:	bne	14ef8 <__mempcpy_chk@plt+0x3e18>
   14ec0:	movw	r0, #28924	; 0x70fc
   14ec4:	movt	r0, #2
   14ec8:	ldr	r5, [r0]
   14ecc:	bl	10ff0 <__errno_location@plt>
   14ed0:	ldr	r6, [r0]
   14ed4:	movw	r1, #25506	; 0x63a2
   14ed8:	mov	r0, #0
   14edc:	mov	r2, #5
   14ee0:	movt	r1, #1
   14ee4:	bl	10ef4 <dcgettext@plt>
   14ee8:	mov	r2, r0
   14eec:	mov	r0, r5
   14ef0:	mov	r1, r6
   14ef4:	bl	10f6c <error@plt>
   14ef8:	mov	r0, r4
   14efc:	pop	{r4, r5, r6, sl, fp, pc}
   14f00:	sub	sp, sp, #8
   14f04:	push	{fp, lr}
   14f08:	mov	fp, sp
   14f0c:	sub	sp, sp, #8
   14f10:	str	r2, [fp, #8]
   14f14:	add	r2, fp, #8
   14f18:	str	r3, [fp, #12]
   14f1c:	str	r2, [sp, #4]
   14f20:	bl	14f34 <__mempcpy_chk@plt+0x3e54>
   14f24:	mov	sp, fp
   14f28:	pop	{fp, lr}
   14f2c:	add	sp, sp, #8
   14f30:	bx	lr
   14f34:	push	{r4, r5, r6, sl, fp, lr}
   14f38:	add	fp, sp, #16
   14f3c:	mov	r3, r2
   14f40:	mov	r2, r1
   14f44:	mov	r1, #1
   14f48:	mov	r5, r0
   14f4c:	bl	10fa8 <__vfprintf_chk@plt>
   14f50:	mov	r4, r0
   14f54:	cmn	r0, #1
   14f58:	bgt	14fa4 <__mempcpy_chk@plt+0x3ec4>
   14f5c:	mov	r0, r5
   14f60:	bl	10ea0 <ferror@plt>
   14f64:	cmp	r0, #0
   14f68:	bne	14fa4 <__mempcpy_chk@plt+0x3ec4>
   14f6c:	movw	r0, #28924	; 0x70fc
   14f70:	movt	r0, #2
   14f74:	ldr	r5, [r0]
   14f78:	bl	10ff0 <__errno_location@plt>
   14f7c:	ldr	r6, [r0]
   14f80:	movw	r1, #25506	; 0x63a2
   14f84:	mov	r0, #0
   14f88:	mov	r2, #5
   14f8c:	movt	r1, #1
   14f90:	bl	10ef4 <dcgettext@plt>
   14f94:	mov	r2, r0
   14f98:	mov	r0, r5
   14f9c:	mov	r1, r6
   14fa0:	bl	10f6c <error@plt>
   14fa4:	mov	r0, r4
   14fa8:	pop	{r4, r5, r6, sl, fp, pc}
   14fac:	clz	r2, r1
   14fb0:	clz	r3, r0
   14fb4:	lsr	r2, r2, #5
   14fb8:	lsr	r3, r3, #5
   14fbc:	orrs	r2, r3, r2
   14fc0:	movwne	r1, #1
   14fc4:	movwne	r0, #1
   14fc8:	cmp	r1, #0
   14fcc:	beq	14ffc <__mempcpy_chk@plt+0x3f1c>
   14fd0:	mvn	r2, #-2147483648	; 0x80000000
   14fd4:	udiv	r2, r2, r1
   14fd8:	cmp	r2, r0
   14fdc:	bcs	14ffc <__mempcpy_chk@plt+0x3f1c>
   14fe0:	push	{fp, lr}
   14fe4:	mov	fp, sp
   14fe8:	bl	10ff0 <__errno_location@plt>
   14fec:	mov	r1, #12
   14ff0:	str	r1, [r0]
   14ff4:	mov	r0, #0
   14ff8:	pop	{fp, pc}
   14ffc:	b	10e4c <calloc@plt>
   15000:	cmp	r0, #0
   15004:	movweq	r0, #1
   15008:	cmn	r0, #1
   1500c:	ble	15014 <__mempcpy_chk@plt+0x3f34>
   15010:	b	10f84 <malloc@plt>
   15014:	push	{fp, lr}
   15018:	mov	fp, sp
   1501c:	bl	10ff0 <__errno_location@plt>
   15020:	mov	r1, #12
   15024:	str	r1, [r0]
   15028:	mov	r0, #0
   1502c:	pop	{fp, pc}
   15030:	push	{fp, lr}
   15034:	mov	fp, sp
   15038:	cmp	r0, #0
   1503c:	beq	15058 <__mempcpy_chk@plt+0x3f78>
   15040:	cmp	r1, #0
   15044:	beq	15064 <__mempcpy_chk@plt+0x3f84>
   15048:	cmn	r1, #1
   1504c:	ble	1506c <__mempcpy_chk@plt+0x3f8c>
   15050:	pop	{fp, lr}
   15054:	b	10f00 <realloc@plt>
   15058:	mov	r0, r1
   1505c:	pop	{fp, lr}
   15060:	b	15000 <__mempcpy_chk@plt+0x3f20>
   15064:	bl	125ac <__mempcpy_chk@plt+0x14cc>
   15068:	b	15078 <__mempcpy_chk@plt+0x3f98>
   1506c:	bl	10ff0 <__errno_location@plt>
   15070:	mov	r1, #12
   15074:	str	r1, [r0]
   15078:	mov	r0, #0
   1507c:	pop	{fp, pc}
   15080:	push	{r4, r5, r6, sl, fp, lr}
   15084:	add	fp, sp, #16
   15088:	vpush	{d8}
   1508c:	movw	r6, #29348	; 0x72a4
   15090:	mov	r5, r0
   15094:	mov	r4, r1
   15098:	movt	r6, #2
   1509c:	ldr	r0, [r6]
   150a0:	cmp	r0, #0
   150a4:	bne	150c0 <__mempcpy_chk@plt+0x3fe0>
   150a8:	movw	r1, #25538	; 0x63c2
   150ac:	movw	r0, #8127	; 0x1fbf
   150b0:	mov	r2, #0
   150b4:	movt	r1, #1
   150b8:	bl	11098 <newlocale@plt>
   150bc:	str	r0, [r6]
   150c0:	ldr	r0, [r6]
   150c4:	cmp	r0, #0
   150c8:	beq	15110 <__mempcpy_chk@plt+0x4030>
   150cc:	bl	10e64 <uselocale@plt>
   150d0:	cmp	r0, #0
   150d4:	beq	15110 <__mempcpy_chk@plt+0x4030>
   150d8:	mov	r6, r0
   150dc:	mov	r0, r5
   150e0:	mov	r1, r4
   150e4:	bl	10ed0 <strtold@plt>
   150e8:	vorr	d8, d0, d0
   150ec:	bl	10ff0 <__errno_location@plt>
   150f0:	ldr	r5, [r0]
   150f4:	mov	r4, r0
   150f8:	mov	r0, r6
   150fc:	bl	10e64 <uselocale@plt>
   15100:	cmp	r0, #0
   15104:	beq	15128 <__mempcpy_chk@plt+0x4048>
   15108:	str	r5, [r4]
   1510c:	b	1511c <__mempcpy_chk@plt+0x403c>
   15110:	cmp	r4, #0
   15114:	vmov.i32	d8, #0	; 0x00000000
   15118:	strne	r5, [r4]
   1511c:	vorr	d0, d8, d8
   15120:	vpop	{d8}
   15124:	pop	{r4, r5, r6, sl, fp, pc}
   15128:	bl	110c8 <abort@plt>
   1512c:	push	{r4, r5, r6, sl, fp, lr}
   15130:	add	fp, sp, #16
   15134:	mov	r4, r0
   15138:	bl	10f48 <__fpending@plt>
   1513c:	mov	r5, r0
   15140:	mov	r0, r4
   15144:	bl	10f54 <ferror_unlocked@plt>
   15148:	mov	r6, r0
   1514c:	mov	r0, r4
   15150:	bl	151ac <__mempcpy_chk@plt+0x40cc>
   15154:	cmp	r6, #0
   15158:	beq	15178 <__mempcpy_chk@plt+0x4098>
   1515c:	mvn	r4, #0
   15160:	cmp	r0, #0
   15164:	bne	151a4 <__mempcpy_chk@plt+0x40c4>
   15168:	bl	10ff0 <__errno_location@plt>
   1516c:	mov	r1, #0
   15170:	str	r1, [r0]
   15174:	b	151a4 <__mempcpy_chk@plt+0x40c4>
   15178:	cmp	r0, #0
   1517c:	mov	r4, r0
   15180:	mvnne	r4, #0
   15184:	cmp	r5, #0
   15188:	bne	151a4 <__mempcpy_chk@plt+0x40c4>
   1518c:	cmp	r0, #0
   15190:	beq	151a4 <__mempcpy_chk@plt+0x40c4>
   15194:	bl	10ff0 <__errno_location@plt>
   15198:	ldr	r0, [r0]
   1519c:	subs	r4, r0, #9
   151a0:	mvnne	r4, #0
   151a4:	mov	r0, r4
   151a8:	pop	{r4, r5, r6, sl, fp, pc}
   151ac:	push	{r4, r5, r6, sl, fp, lr}
   151b0:	add	fp, sp, #16
   151b4:	sub	sp, sp, #8
   151b8:	mov	r4, r0
   151bc:	bl	11020 <fileno@plt>
   151c0:	cmn	r0, #1
   151c4:	ble	15238 <__mempcpy_chk@plt+0x4158>
   151c8:	mov	r0, r4
   151cc:	bl	10fb4 <__freading@plt>
   151d0:	cmp	r0, #0
   151d4:	beq	15200 <__mempcpy_chk@plt+0x4120>
   151d8:	mov	r0, r4
   151dc:	bl	11020 <fileno@plt>
   151e0:	mov	r1, #1
   151e4:	mov	r2, #0
   151e8:	mov	r3, #0
   151ec:	str	r1, [sp]
   151f0:	bl	10f30 <lseek64@plt>
   151f4:	and	r0, r0, r1
   151f8:	cmn	r0, #1
   151fc:	beq	15238 <__mempcpy_chk@plt+0x4158>
   15200:	mov	r0, r4
   15204:	bl	15248 <__mempcpy_chk@plt+0x4168>
   15208:	cmp	r0, #0
   1520c:	beq	15238 <__mempcpy_chk@plt+0x4158>
   15210:	bl	10ff0 <__errno_location@plt>
   15214:	ldr	r6, [r0]
   15218:	mov	r5, r0
   1521c:	mov	r0, r4
   15220:	bl	1105c <fclose@plt>
   15224:	cmp	r6, #0
   15228:	strne	r6, [r5]
   1522c:	mvnne	r0, #0
   15230:	sub	sp, fp, #16
   15234:	pop	{r4, r5, r6, sl, fp, pc}
   15238:	mov	r0, r4
   1523c:	sub	sp, fp, #16
   15240:	pop	{r4, r5, r6, sl, fp, lr}
   15244:	b	1105c <fclose@plt>
   15248:	push	{r4, sl, fp, lr}
   1524c:	add	fp, sp, #8
   15250:	sub	sp, sp, #8
   15254:	mov	r4, r0
   15258:	cmp	r0, #0
   1525c:	beq	15278 <__mempcpy_chk@plt+0x4198>
   15260:	mov	r0, r4
   15264:	bl	10fb4 <__freading@plt>
   15268:	cmp	r0, #0
   1526c:	ldrbne	r0, [r4, #1]
   15270:	tstne	r0, #1
   15274:	bne	15288 <__mempcpy_chk@plt+0x41a8>
   15278:	mov	r0, r4
   1527c:	sub	sp, fp, #8
   15280:	pop	{r4, sl, fp, lr}
   15284:	b	10e88 <fflush@plt>
   15288:	mov	r0, #1
   1528c:	mov	r2, #0
   15290:	mov	r3, #0
   15294:	str	r0, [sp]
   15298:	mov	r0, r4
   1529c:	bl	152a4 <__mempcpy_chk@plt+0x41c4>
   152a0:	b	15278 <__mempcpy_chk@plt+0x4198>
   152a4:	push	{r4, r5, r6, r7, fp, lr}
   152a8:	add	fp, sp, #16
   152ac:	sub	sp, sp, #8
   152b0:	mov	r4, r0
   152b4:	ldr	r0, [r0, #4]
   152b8:	mov	r5, r3
   152bc:	mov	r6, r2
   152c0:	ldr	r1, [r4, #8]
   152c4:	cmp	r1, r0
   152c8:	bne	152e4 <__mempcpy_chk@plt+0x4204>
   152cc:	ldrd	r0, [r4, #16]
   152d0:	cmp	r1, r0
   152d4:	bne	152e4 <__mempcpy_chk@plt+0x4204>
   152d8:	ldr	r0, [r4, #36]	; 0x24
   152dc:	cmp	r0, #0
   152e0:	beq	152fc <__mempcpy_chk@plt+0x421c>
   152e4:	mov	r0, r4
   152e8:	mov	r2, r6
   152ec:	mov	r3, r5
   152f0:	sub	sp, fp, #16
   152f4:	pop	{r4, r5, r6, r7, fp, lr}
   152f8:	b	11068 <fseeko64@plt>
   152fc:	ldr	r7, [fp, #8]
   15300:	mov	r0, r4
   15304:	bl	11020 <fileno@plt>
   15308:	mov	r2, r6
   1530c:	mov	r3, r5
   15310:	str	r7, [sp]
   15314:	bl	10f30 <lseek64@plt>
   15318:	and	r2, r0, r1
   1531c:	cmn	r2, #1
   15320:	beq	1533c <__mempcpy_chk@plt+0x425c>
   15324:	strd	r0, [r4, #80]	; 0x50
   15328:	ldr	r0, [r4]
   1532c:	bic	r0, r0, #16
   15330:	str	r0, [r4]
   15334:	mov	r0, #0
   15338:	b	15340 <__mempcpy_chk@plt+0x4260>
   1533c:	mvn	r0, #0
   15340:	sub	sp, fp, #16
   15344:	pop	{r4, r5, r6, r7, fp, pc}
   15348:	push	{fp, lr}
   1534c:	mov	fp, sp
   15350:	mov	r0, #14
   15354:	bl	1108c <nl_langinfo@plt>
   15358:	movw	r1, #22076	; 0x563c
   1535c:	cmp	r0, #0
   15360:	movt	r1, #1
   15364:	movne	r1, r0
   15368:	movw	r0, #24542	; 0x5fde
   1536c:	ldrb	r2, [r1]
   15370:	movt	r0, #1
   15374:	cmp	r2, #0
   15378:	movne	r0, r1
   1537c:	pop	{fp, pc}
   15380:	push	{r4, r5, r6, r7, fp, lr}
   15384:	add	fp, sp, #16
   15388:	sub	sp, sp, #8
   1538c:	add	r5, sp, #4
   15390:	cmp	r0, #0
   15394:	mov	r7, r2
   15398:	mov	r4, r1
   1539c:	movne	r5, r0
   153a0:	mov	r0, r5
   153a4:	bl	10f60 <mbrtowc@plt>
   153a8:	mov	r6, r0
   153ac:	cmp	r7, #0
   153b0:	beq	153d4 <__mempcpy_chk@plt+0x42f4>
   153b4:	cmn	r6, #2
   153b8:	bcc	153d4 <__mempcpy_chk@plt+0x42f4>
   153bc:	mov	r0, #0
   153c0:	bl	1541c <__mempcpy_chk@plt+0x433c>
   153c4:	cmp	r0, #0
   153c8:	ldrbeq	r0, [r4]
   153cc:	moveq	r6, #1
   153d0:	streq	r0, [r5]
   153d4:	mov	r0, r6
   153d8:	sub	sp, fp, #16
   153dc:	pop	{r4, r5, r6, r7, fp, pc}
   153e0:	cmp	r2, #0
   153e4:	beq	15414 <__mempcpy_chk@plt+0x4334>
   153e8:	mvn	r3, #0
   153ec:	udiv	r3, r3, r2
   153f0:	cmp	r3, r1
   153f4:	bcs	15414 <__mempcpy_chk@plt+0x4334>
   153f8:	push	{fp, lr}
   153fc:	mov	fp, sp
   15400:	bl	10ff0 <__errno_location@plt>
   15404:	mov	r1, #12
   15408:	str	r1, [r0]
   1540c:	mov	r0, #0
   15410:	pop	{fp, pc}
   15414:	mul	r1, r2, r1
   15418:	b	15030 <__mempcpy_chk@plt+0x3f50>
   1541c:	push	{r4, sl, fp, lr}
   15420:	add	fp, sp, #8
   15424:	sub	sp, sp, #264	; 0x108
   15428:	add	r1, sp, #7
   1542c:	movw	r2, #257	; 0x101
   15430:	bl	15480 <__mempcpy_chk@plt+0x43a0>
   15434:	mov	r4, #0
   15438:	cmp	r0, #0
   1543c:	bne	15474 <__mempcpy_chk@plt+0x4394>
   15440:	movw	r1, #25538	; 0x63c2
   15444:	add	r0, sp, #7
   15448:	movt	r1, #1
   1544c:	bl	10e7c <strcmp@plt>
   15450:	cmp	r0, #0
   15454:	beq	15474 <__mempcpy_chk@plt+0x4394>
   15458:	movw	r1, #25540	; 0x63c4
   1545c:	add	r0, sp, #7
   15460:	movt	r1, #1
   15464:	bl	10e7c <strcmp@plt>
   15468:	mov	r4, r0
   1546c:	cmp	r0, #0
   15470:	movwne	r4, #1
   15474:	mov	r0, r4
   15478:	sub	sp, fp, #8
   1547c:	pop	{r4, sl, fp, pc}
   15480:	push	{r4, r5, r6, r7, fp, lr}
   15484:	add	fp, sp, #16
   15488:	mov	r4, r1
   1548c:	mov	r1, #0
   15490:	mov	r6, r2
   15494:	bl	11074 <setlocale@plt>
   15498:	cmp	r0, #0
   1549c:	beq	154c8 <__mempcpy_chk@plt+0x43e8>
   154a0:	mov	r7, r0
   154a4:	bl	10fe4 <strlen@plt>
   154a8:	cmp	r0, r6
   154ac:	bcs	154dc <__mempcpy_chk@plt+0x43fc>
   154b0:	add	r2, r0, #1
   154b4:	mov	r0, r4
   154b8:	mov	r1, r7
   154bc:	bl	10eb8 <memcpy@plt>
   154c0:	mov	r5, #0
   154c4:	b	15504 <__mempcpy_chk@plt+0x4424>
   154c8:	cmp	r6, #0
   154cc:	mov	r5, #22
   154d0:	movne	r0, #0
   154d4:	strbne	r0, [r4]
   154d8:	b	15504 <__mempcpy_chk@plt+0x4424>
   154dc:	mov	r5, #34	; 0x22
   154e0:	cmp	r6, #0
   154e4:	beq	15504 <__mempcpy_chk@plt+0x4424>
   154e8:	sub	r6, r6, #1
   154ec:	mov	r0, r4
   154f0:	mov	r1, r7
   154f4:	mov	r2, r6
   154f8:	bl	10eb8 <memcpy@plt>
   154fc:	mov	r0, #0
   15500:	strb	r0, [r4, r6]
   15504:	mov	r0, r5
   15508:	pop	{r4, r5, r6, r7, fp, pc}
   1550c:	mov	r1, #0
   15510:	b	11074 <setlocale@plt>
   15514:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15518:	mov	r7, r0
   1551c:	ldr	r6, [pc, #72]	; 1556c <__mempcpy_chk@plt+0x448c>
   15520:	ldr	r5, [pc, #72]	; 15570 <__mempcpy_chk@plt+0x4490>
   15524:	add	r6, pc, r6
   15528:	add	r5, pc, r5
   1552c:	sub	r6, r6, r5
   15530:	mov	r8, r1
   15534:	mov	r9, r2
   15538:	bl	10e2c <calloc@plt-0x20>
   1553c:	asrs	r6, r6, #2
   15540:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15544:	mov	r4, #0
   15548:	add	r4, r4, #1
   1554c:	ldr	r3, [r5], #4
   15550:	mov	r2, r9
   15554:	mov	r1, r8
   15558:	mov	r0, r7
   1555c:	blx	r3
   15560:	cmp	r6, r4
   15564:	bne	15548 <__mempcpy_chk@plt+0x4468>
   15568:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1556c:	andeq	r1, r1, r0, ror #19
   15570:	ldrdeq	r1, [r1], -r8
   15574:	bx	lr
   15578:	ldr	r3, [pc, #12]	; 1558c <__mempcpy_chk@plt+0x44ac>
   1557c:	mov	r1, #0
   15580:	add	r3, pc, r3
   15584:	ldr	r2, [r3]
   15588:	b	10ffc <__cxa_atexit@plt>
   1558c:	andeq	r1, r1, ip, ror #22

Disassembly of section .fini:

00015590 <.fini>:
   15590:	push	{r3, lr}
   15594:	pop	{r3, pc}
