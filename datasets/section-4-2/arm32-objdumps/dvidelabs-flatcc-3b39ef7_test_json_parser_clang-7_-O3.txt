
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a78 <.init>:
   12a78:	push	{r3, lr}
   12a7c:	bl	12c0c <_start@@Base+0x3c>
   12a80:	pop	{r3, pc}

Disassembly of section .plt:

00012a84 <fopen@plt-0x14>:
   12a84:	push	{lr}		; (str lr, [sp, #-4]!)
   12a88:	ldr	lr, [pc, #4]	; 12a94 <fopen@plt-0x4>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	pc, [lr, #8]!
   12a94:	andeq	r5, r3, ip, ror #10

00012a98 <fopen@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #217088	; 0x35000
   12aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa4 <free@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #217088	; 0x35000
   12aac:	ldr	pc, [ip, #1380]!	; 0x564

00012ab0 <memcpy@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #217088	; 0x35000
   12ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00012abc <ftell@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #217088	; 0x35000
   12ac4:	ldr	pc, [ip, #1364]!	; 0x554

00012ac8 <memcmp@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #217088	; 0x35000
   12ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad4 <rewind@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #217088	; 0x35000
   12adc:	ldr	pc, [ip, #1348]!	; 0x544

00012ae0 <__isinff@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #217088	; 0x35000
   12ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00012aec <__isinf@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #217088	; 0x35000
   12af4:	ldr	pc, [ip, #1332]!	; 0x534

00012af8 <realloc@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #217088	; 0x35000
   12b00:	ldr	pc, [ip, #1324]!	; 0x52c

00012b04 <fwrite@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #217088	; 0x35000
   12b0c:	ldr	pc, [ip, #1316]!	; 0x524

00012b10 <malloc@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #217088	; 0x35000
   12b18:	ldr	pc, [ip, #1308]!	; 0x51c

00012b1c <__libc_start_main@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #217088	; 0x35000
   12b24:	ldr	pc, [ip, #1300]!	; 0x514

00012b28 <__gmon_start__@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #217088	; 0x35000
   12b30:	ldr	pc, [ip, #1292]!	; 0x50c

00012b34 <exit@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #217088	; 0x35000
   12b3c:	ldr	pc, [ip, #1284]!	; 0x504

00012b40 <strlen@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #217088	; 0x35000
   12b48:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b4c <fprintf@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #217088	; 0x35000
   12b54:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b58 <posix_memalign@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #217088	; 0x35000
   12b60:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b64 <memset@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #217088	; 0x35000
   12b6c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b70 <strtod@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #217088	; 0x35000
   12b78:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b7c <memchr@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #217088	; 0x35000
   12b84:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b88 <fclose@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #217088	; 0x35000
   12b90:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b94 <fputc@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #217088	; 0x35000
   12b9c:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba0 <fread_unlocked@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #217088	; 0x35000
   12ba8:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bac <fseek@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #217088	; 0x35000
   12bb4:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bb8 <abort@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #217088	; 0x35000
   12bc0:	ldr	pc, [ip, #1196]!	; 0x4ac

00012bc4 <__assert_fail@plt>:
   12bc4:	add	ip, pc, #0, 12
   12bc8:	add	ip, ip, #217088	; 0x35000
   12bcc:	ldr	pc, [ip, #1188]!	; 0x4a4

Disassembly of section .text:

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12b1c <__libc_start_main@plt>
   12bfc:	bl	12bb8 <abort@plt>
   12c00:	andeq	r4, r3, r4, ror #25
   12c04:	andeq	r3, r1, r0, ror #5
   12c08:	andeq	r4, r3, r4, lsl #25
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12b28 <__gmon_start__@plt>
   12c28:	andeq	r5, r3, r4, ror #7
   12c2c:	andeq	r0, r0, r4, ror r0
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r8, r4, r0, asr r3
   12c54:	andeq	r8, r4, r0, asr r3
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r8, r4, r0, asr r3
   12c8c:	andeq	r8, r4, r0, asr r3
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r8, r4, r8, asr r3
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <verify_parse@@Base>:
   12cc0:	push	{fp, lr}
   12cc4:	mov	fp, sp
   12cc8:	cmp	r0, #0
   12ccc:	beq	12dc4 <verify_parse@@Base+0x104>
   12cd0:	ldr	r1, [r0, #4]
   12cd4:	movw	r2, #20301	; 0x4f4d
   12cd8:	movt	r2, #21326	; 0x534e
   12cdc:	cmp	r1, r2
   12ce0:	bne	12dc4 <verify_parse@@Base+0x104>
   12ce4:	ldr	r1, [r0]
   12ce8:	ldr	r2, [r0, r1]!
   12cec:	mov	r1, r0
   12cf0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   12cf4:	cmp	r2, #5
   12cf8:	bls	12d0c <verify_parse@@Base+0x4c>
   12cfc:	ldrh	r1, [r1, #4]
   12d00:	cmp	r1, #0
   12d04:	addsne	r0, r0, r1
   12d08:	bne	12d2c <verify_parse@@Base+0x6c>
   12d0c:	movw	r0, #25452	; 0x636c
   12d10:	movw	r1, #19705	; 0x4cf9
   12d14:	movw	r3, #19787	; 0x4d4b
   12d18:	mov	r2, #45	; 0x2d
   12d1c:	movt	r0, #3
   12d20:	movt	r1, #3
   12d24:	movt	r3, #3
   12d28:	bl	12bc4 <__assert_fail@plt>
   12d2c:	vldr	s0, [r0]
   12d30:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12d34:	vcmp.f32	s0, s2
   12d38:	vmrs	APSR_nzcv, fpscr
   12d3c:	bne	12de4 <verify_parse@@Base+0x124>
   12d40:	vldr	s0, [r0, #4]
   12d44:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d48:	vcmp.f32	s0, s2
   12d4c:	vmrs	APSR_nzcv, fpscr
   12d50:	bne	12e04 <verify_parse@@Base+0x144>
   12d54:	vldr	s0, [r0, #8]
   12d58:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d5c:	vcmp.f32	s0, s2
   12d60:	vmrs	APSR_nzcv, fpscr
   12d64:	bne	12e24 <verify_parse@@Base+0x164>
   12d68:	vldr	d16, [r0, #16]
   12d6c:	vmov.f64	d17, #8	; 0x40400000  3.0
   12d70:	vcmp.f64	d16, d17
   12d74:	vmrs	APSR_nzcv, fpscr
   12d78:	bne	12e44 <verify_parse@@Base+0x184>
   12d7c:	ldrb	r1, [r0, #24]
   12d80:	cmp	r1, #2
   12d84:	bne	12e64 <verify_parse@@Base+0x1a4>
   12d88:	ldrh	r1, [r0, #26]
   12d8c:	cmp	r1, #5
   12d90:	bne	12e84 <verify_parse@@Base+0x1c4>
   12d94:	ldrb	r0, [r0, #28]
   12d98:	cmp	r0, #6
   12d9c:	moveq	r0, #0
   12da0:	popeq	{fp, pc}
   12da4:	movw	r0, #25452	; 0x636c
   12da8:	movw	r1, #19705	; 0x4cf9
   12dac:	movw	r3, #19787	; 0x4d4b
   12db0:	mov	r2, #54	; 0x36
   12db4:	movt	r0, #3
   12db8:	movt	r1, #3
   12dbc:	movt	r3, #3
   12dc0:	bl	12bc4 <__assert_fail@plt>
   12dc4:	movw	r0, #20043	; 0x4e4b
   12dc8:	movw	r1, #20081	; 0x4e71
   12dcc:	movw	r3, #20176	; 0x4ed0
   12dd0:	mov	r2, #696	; 0x2b8
   12dd4:	movt	r0, #3
   12dd8:	movt	r1, #3
   12ddc:	movt	r3, #3
   12de0:	bl	12bc4 <__assert_fail@plt>
   12de4:	movw	r0, #25452	; 0x636c
   12de8:	movw	r1, #19705	; 0x4cf9
   12dec:	movw	r3, #19787	; 0x4d4b
   12df0:	mov	r2, #46	; 0x2e
   12df4:	movt	r0, #3
   12df8:	movt	r1, #3
   12dfc:	movt	r3, #3
   12e00:	bl	12bc4 <__assert_fail@plt>
   12e04:	movw	r0, #25452	; 0x636c
   12e08:	movw	r1, #19705	; 0x4cf9
   12e0c:	movw	r3, #19787	; 0x4d4b
   12e10:	mov	r2, #47	; 0x2f
   12e14:	movt	r0, #3
   12e18:	movt	r1, #3
   12e1c:	movt	r3, #3
   12e20:	bl	12bc4 <__assert_fail@plt>
   12e24:	movw	r0, #25452	; 0x636c
   12e28:	movw	r1, #19705	; 0x4cf9
   12e2c:	movw	r3, #19787	; 0x4d4b
   12e30:	mov	r2, #48	; 0x30
   12e34:	movt	r0, #3
   12e38:	movt	r1, #3
   12e3c:	movt	r3, #3
   12e40:	bl	12bc4 <__assert_fail@plt>
   12e44:	movw	r0, #25452	; 0x636c
   12e48:	movw	r1, #19705	; 0x4cf9
   12e4c:	movw	r3, #19787	; 0x4d4b
   12e50:	mov	r2, #49	; 0x31
   12e54:	movt	r0, #3
   12e58:	movt	r1, #3
   12e5c:	movt	r3, #3
   12e60:	bl	12bc4 <__assert_fail@plt>
   12e64:	movw	r0, #25452	; 0x636c
   12e68:	movw	r1, #19705	; 0x4cf9
   12e6c:	movw	r3, #19787	; 0x4d4b
   12e70:	mov	r2, #50	; 0x32
   12e74:	movt	r0, #3
   12e78:	movt	r1, #3
   12e7c:	movt	r3, #3
   12e80:	bl	12bc4 <__assert_fail@plt>
   12e84:	movw	r0, #25452	; 0x636c
   12e88:	movw	r1, #19705	; 0x4cf9
   12e8c:	movw	r3, #19787	; 0x4d4b
   12e90:	mov	r2, #53	; 0x35
   12e94:	movt	r0, #3
   12e98:	movt	r1, #3
   12e9c:	movt	r3, #3
   12ea0:	bl	12bc4 <__assert_fail@plt>

00012ea4 <test_parse@@Base>:
   12ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea8:	add	fp, sp, #28
   12eac:	sub	sp, sp, #316	; 0x13c
   12eb0:	add	r8, sp, #12
   12eb4:	mov	r0, r8
   12eb8:	bl	2ab50 <flatcc_builder_init@@Base>
   12ebc:	movw	r9, #32896	; 0x8080
   12ec0:	movw	r1, #20264	; 0x4f28
   12ec4:	movt	r9, #4
   12ec8:	movt	r1, #3
   12ecc:	ldr	r0, [r9]
   12ed0:	bl	12a98 <fopen@plt>
   12ed4:	cmp	r0, #0
   12ed8:	beq	13074 <test_parse@@Base+0x1d0>
   12edc:	mov	r1, #0
   12ee0:	mov	r2, #2
   12ee4:	mov	r7, r0
   12ee8:	bl	12bac <fseek@plt>
   12eec:	mov	r0, r7
   12ef0:	bl	12abc <ftell@plt>
   12ef4:	cmp	r0, #10240	; 0x2800
   12ef8:	bhi	1306c <test_parse@@Base+0x1c8>
   12efc:	mov	r5, r0
   12f00:	mov	r0, r7
   12f04:	bl	12ad4 <rewind@plt>
   12f08:	cmp	r5, #0
   12f0c:	mov	r0, r5
   12f10:	movweq	r0, #1
   12f14:	bl	12b10 <malloc@plt>
   12f18:	cmp	r0, #0
   12f1c:	beq	1306c <test_parse@@Base+0x1c8>
   12f20:	mov	r4, r0
   12f24:	mov	r1, #0
   12f28:	mov	r6, r1
   12f2c:	add	r0, r4, r1
   12f30:	sub	r2, r5, r1
   12f34:	mov	r1, #1
   12f38:	mov	r3, r7
   12f3c:	bl	12ba0 <fread_unlocked@plt>
   12f40:	add	r1, r0, r6
   12f44:	cmp	r0, #0
   12f48:	bne	12f28 <test_parse@@Base+0x84>
   12f4c:	mov	r0, r7
   12f50:	bl	12b88 <fclose@plt>
   12f54:	cmp	r5, r6
   12f58:	bne	13060 <test_parse@@Base+0x1bc>
   12f5c:	sub	r0, fp, #100	; 0x64
   12f60:	vmov.i32	q8, #0	; 0x00000000
   12f64:	mov	r7, #0
   12f68:	add	r6, r4, r5
   12f6c:	mov	r2, #0
   12f70:	mov	r3, #0
   12f74:	add	r1, r0, #12
   12f78:	add	r0, r0, #28
   12f7c:	vst1.32	{d16-d17}, [r1]
   12f80:	vst1.32	{d16-d17}, [r0]
   12f84:	movw	r1, #19700	; 0x4cf4
   12f88:	mov	r0, #1
   12f8c:	str	r8, [fp, #-100]	; 0xffffff9c
   12f90:	str	r4, [fp, #-96]	; 0xffffffa0
   12f94:	str	r7, [fp, #-92]	; 0xffffffa4
   12f98:	str	r0, [fp, #-84]	; 0xffffffac
   12f9c:	movt	r1, #3
   12fa0:	mov	r0, r8
   12fa4:	str	r4, [fp, #-72]	; 0xffffffb8
   12fa8:	str	r6, [fp, #-68]	; 0xffffffbc
   12fac:	str	r4, [fp, #-64]	; 0xffffffc0
   12fb0:	bl	2ba6c <flatcc_builder_start_buffer@@Base>
   12fb4:	cmp	r0, #0
   12fb8:	bne	12ff4 <test_parse@@Base+0x150>
   12fbc:	sub	r0, fp, #100	; 0x64
   12fc0:	sub	r3, fp, #52	; 0x34
   12fc4:	mov	r1, r4
   12fc8:	mov	r2, r6
   12fcc:	bl	13358 <main@@Base+0x78>
   12fd0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12fd4:	cmp	r7, #0
   12fd8:	bne	12ff4 <test_parse@@Base+0x150>
   12fdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12fe0:	add	r0, sp, #12
   12fe4:	bl	2bc5c <flatcc_builder_end_buffer@@Base>
   12fe8:	cmp	r0, #0
   12fec:	bne	130a0 <test_parse@@Base+0x1fc>
   12ff0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12ff4:	movw	r0, #33616	; 0x8350
   12ff8:	ldr	r8, [r9]
   12ffc:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13000:	ldr	r9, [fp, #-84]	; 0xffffffac
   13004:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13008:	movt	r0, #4
   1300c:	ldr	sl, [r0]
   13010:	mov	r0, r7
   13014:	bl	30150 <flatcc_json_parser_error_string@@Base>
   13018:	add	r1, r6, #1
   1301c:	str	r0, [sp, #4]
   13020:	mov	r0, sl
   13024:	mov	r2, r8
   13028:	mov	r3, r9
   1302c:	sub	r1, r1, r5
   13030:	str	r1, [sp]
   13034:	movw	r1, #19948	; 0x4dec
   13038:	movt	r1, #3
   1303c:	bl	12b4c <fprintf@plt>
   13040:	mvn	r5, #0
   13044:	mov	r0, r4
   13048:	bl	12aa4 <free@plt>
   1304c:	add	r0, sp, #12
   13050:	bl	2b0f8 <flatcc_builder_clear@@Base>
   13054:	mov	r0, r5
   13058:	sub	sp, fp, #28
   1305c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13060:	mov	r0, r4
   13064:	bl	12aa4 <free@plt>
   13068:	b	13074 <test_parse@@Base+0x1d0>
   1306c:	mov	r0, r7
   13070:	bl	12b88 <fclose@plt>
   13074:	movw	r0, #33616	; 0x8350
   13078:	ldr	r2, [r9]
   1307c:	movw	r1, #19812	; 0x4d64
   13080:	movt	r0, #4
   13084:	movt	r1, #3
   13088:	ldr	r0, [r0]
   1308c:	bl	12b4c <fprintf@plt>
   13090:	mvn	r5, #0
   13094:	mov	r0, r5
   13098:	sub	sp, fp, #28
   1309c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130a0:	ldr	r2, [r9]
   130a4:	movw	r9, #33616	; 0x8350
   130a8:	str	r4, [fp, #-60]	; 0xffffffc4
   130ac:	movw	r1, #19848	; 0x4d88
   130b0:	movt	r9, #4
   130b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   130b8:	movt	r1, #3
   130bc:	ldr	r0, [r9]
   130c0:	bl	12b4c <fprintf@plt>
   130c4:	add	r0, sp, #12
   130c8:	sub	r1, fp, #56	; 0x38
   130cc:	bl	2f56c <flatcc_builder_finalize_aligned_buffer@@Base>
   130d0:	mov	sl, r0
   130d4:	movw	r0, #33620	; 0x8354
   130d8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   130dc:	movw	r1, #20278	; 0x4f36
   130e0:	movw	r2, #19882	; 0x4daa
   130e4:	movt	r0, #4
   130e8:	movt	r1, #3
   130ec:	movt	r2, #3
   130f0:	ldr	r7, [r0]
   130f4:	mov	r0, r7
   130f8:	bl	12b4c <fprintf@plt>
   130fc:	cmp	r6, #0
   13100:	beq	131e0 <test_parse@@Base+0x33c>
   13104:	mov	r9, #0
   13108:	ands	r8, r9, #15
   1310c:	beq	13128 <test_parse@@Base+0x284>
   13110:	tst	r9, #7
   13114:	bne	13158 <test_parse@@Base+0x2b4>
   13118:	mov	r0, #32
   1311c:	mov	r1, r7
   13120:	bl	12b94 <fputc@plt>
   13124:	b	13158 <test_parse@@Base+0x2b4>
   13128:	cmp	r9, #0
   1312c:	beq	13144 <test_parse@@Base+0x2a0>
   13130:	movw	r1, #20283	; 0x4f3b
   13134:	mov	r0, r7
   13138:	sub	r2, fp, #52	; 0x34
   1313c:	movt	r1, #3
   13140:	bl	12b4c <fprintf@plt>
   13144:	movw	r1, #20289	; 0x4f41
   13148:	mov	r0, r7
   1314c:	mov	r2, r9
   13150:	movt	r1, #3
   13154:	bl	12b4c <fprintf@plt>
   13158:	ldrb	r2, [sl, r9]
   1315c:	movw	r1, #20297	; 0x4f49
   13160:	mov	r0, r7
   13164:	movt	r1, #3
   13168:	bl	12b4c <fprintf@plt>
   1316c:	ldrb	r0, [sl, r9]
   13170:	add	r9, r9, #1
   13174:	sub	r1, r0, #32
   13178:	uxtb	r1, r1
   1317c:	cmp	r1, #94	; 0x5e
   13180:	sub	r1, fp, #52	; 0x34
   13184:	movwhi	r0, #46	; 0x2e
   13188:	cmp	r6, r9
   1318c:	strb	r0, [r1, r8]
   13190:	add	r0, r1, r8
   13194:	mov	r1, #0
   13198:	strb	r1, [r0, #1]
   1319c:	bne	13108 <test_parse@@Base+0x264>
   131a0:	movw	r9, #33616	; 0x8350
   131a4:	tst	r6, #15
   131a8:	movt	r9, #4
   131ac:	beq	131e0 <test_parse@@Base+0x33c>
   131b0:	movw	r8, #20333	; 0x4f6d
   131b4:	add	r6, r6, #1
   131b8:	movt	r8, #3
   131bc:	mov	r0, r8
   131c0:	mov	r1, #3
   131c4:	mov	r2, #1
   131c8:	mov	r3, r7
   131cc:	bl	12b04 <fwrite@plt>
   131d0:	add	r0, r6, #1
   131d4:	tst	r6, #15
   131d8:	mov	r6, r0
   131dc:	bne	131bc <test_parse@@Base+0x318>
   131e0:	movw	r1, #20283	; 0x4f3b
   131e4:	sub	r2, fp, #52	; 0x34
   131e8:	mov	r0, r7
   131ec:	movt	r1, #3
   131f0:	bl	12b4c <fprintf@plt>
   131f4:	ldr	r0, [r9]
   131f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   131fc:	movw	r1, #19913	; 0x4dc9
   13200:	mov	r2, r5
   13204:	movt	r1, #3
   13208:	bl	12b4c <fprintf@plt>
   1320c:	mov	r0, sl
   13210:	bl	12cc0 <verify_parse@@Base>
   13214:	movw	r0, #33620	; 0x8354
   13218:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1321c:	movw	r1, #20303	; 0x4f4f
   13220:	movw	r2, #19906	; 0x4dc2
   13224:	movt	r0, #4
   13228:	movt	r1, #3
   1322c:	movt	r2, #3
   13230:	ldr	r5, [r0]
   13234:	mov	r0, r5
   13238:	bl	12b4c <fprintf@plt>
   1323c:	cmp	r7, #0
   13240:	beq	132a8 <test_parse@@Base+0x404>
   13244:	movw	r8, #20332	; 0x4f6c
   13248:	movw	r6, #20337	; 0x4f71
   1324c:	mov	r9, #0
   13250:	movt	r8, #3
   13254:	movt	r6, #3
   13258:	tst	r9, #15
   1325c:	beq	13278 <test_parse@@Base+0x3d4>
   13260:	tst	r9, #7
   13264:	bne	1328c <test_parse@@Base+0x3e8>
   13268:	movw	r0, #20333	; 0x4f6d
   1326c:	mov	r1, #3
   13270:	movt	r0, #3
   13274:	b	13280 <test_parse@@Base+0x3dc>
   13278:	mov	r0, r8
   1327c:	mov	r1, #4
   13280:	mov	r2, #1
   13284:	mov	r3, r5
   13288:	bl	12b04 <fwrite@plt>
   1328c:	ldrb	r2, [sl, r9]
   13290:	mov	r0, r5
   13294:	mov	r1, r6
   13298:	bl	12b4c <fprintf@plt>
   1329c:	add	r9, r9, #1
   132a0:	cmp	r7, r9
   132a4:	bne	13258 <test_parse@@Base+0x3b4>
   132a8:	movw	r0, #20346	; 0x4f7a
   132ac:	mov	r1, #4
   132b0:	mov	r2, #1
   132b4:	mov	r3, r5
   132b8:	movt	r0, #3
   132bc:	bl	12b04 <fwrite@plt>
   132c0:	add	r0, sp, #12
   132c4:	bl	2b0ec <flatcc_builder_reset@@Base>
   132c8:	mov	r5, #0
   132cc:	cmp	sl, #0
   132d0:	beq	13044 <test_parse@@Base+0x1a0>
   132d4:	mov	r0, sl
   132d8:	bl	2f6ac <flatcc_builder_aligned_free@@Base>
   132dc:	b	13044 <test_parse@@Base+0x1a0>

000132e0 <main@@Base>:
   132e0:	push	{r4, r5, r6, sl, fp, lr}
   132e4:	add	fp, sp, #16
   132e8:	movw	r6, #33616	; 0x8350
   132ec:	mov	r5, r0
   132f0:	movw	r0, #19962	; 0x4dfa
   132f4:	mov	r4, r1
   132f8:	mov	r1, #16
   132fc:	mov	r2, #1
   13300:	movt	r6, #4
   13304:	movt	r0, #3
   13308:	ldr	r3, [r6]
   1330c:	bl	12b04 <fwrite@plt>
   13310:	sub	r0, r5, #1
   13314:	cmp	r0, #2
   13318:	bcs	13338 <main@@Base+0x58>
   1331c:	cmp	r5, #2
   13320:	ldreq	r0, [r4, #4]
   13324:	movweq	r1, #32896	; 0x8080
   13328:	movteq	r1, #4
   1332c:	streq	r0, [r1]
   13330:	pop	{r4, r5, r6, sl, fp, lr}
   13334:	b	12ea4 <test_parse@@Base>
   13338:	ldr	r3, [r6]
   1333c:	movw	r0, #19979	; 0x4e0b
   13340:	mov	r1, #63	; 0x3f
   13344:	mov	r2, #1
   13348:	movt	r0, #3
   1334c:	bl	12b04 <fwrite@plt>
   13350:	mov	r0, #1
   13354:	bl	12b34 <exit@plt>
   13358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1335c:	add	fp, sp, #28
   13360:	sub	sp, sp, #4
   13364:	vpush	{d8-d9}
   13368:	sub	sp, sp, #88	; 0x58
   1336c:	mov	sl, r0
   13370:	mov	r0, #0
   13374:	mov	r4, r1
   13378:	mov	r1, #36	; 0x24
   1337c:	mov	r5, r3
   13380:	mov	r6, r2
   13384:	str	r0, [r3]
   13388:	ldr	r0, [sl]
   1338c:	bl	2d064 <flatcc_builder_start_table@@Base>
   13390:	cmp	r0, #0
   13394:	beq	133c4 <main@@Base+0xe4>
   13398:	mov	r0, sl
   1339c:	mov	r1, r4
   133a0:	mov	r2, r6
   133a4:	mov	r3, #33	; 0x21
   133a8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   133ac:	mov	r4, r0
   133b0:	mov	r0, r4
   133b4:	sub	sp, fp, #48	; 0x30
   133b8:	vpop	{d8-d9}
   133bc:	add	sp, sp, #4
   133c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133c4:	add	r0, sp, #56	; 0x38
   133c8:	mov	r1, r4
   133cc:	mov	r2, r6
   133d0:	mov	r3, #1
   133d4:	str	r0, [sp]
   133d8:	mov	r0, sl
   133dc:	bl	32fa0 <flatcc_json_parser_prepare_unions@@Base>
   133e0:	cmp	r0, r6
   133e4:	beq	13398 <main@@Base+0xb8>
   133e8:	cmp	r4, r6
   133ec:	beq	1342c <main@@Base+0x14c>
   133f0:	ldrb	r0, [r4]
   133f4:	cmp	r0, #123	; 0x7b
   133f8:	bne	1342c <main@@Base+0x14c>
   133fc:	add	r1, r4, #1
   13400:	sub	r0, r6, r1
   13404:	cmp	r0, #2
   13408:	blt	134c4 <main@@Base+0x1e4>
   1340c:	ldrb	r0, [r1]
   13410:	cmp	r0, #32
   13414:	bls	134b4 <main@@Base+0x1d4>
   13418:	mov	r4, r1
   1341c:	cmp	r4, r6
   13420:	mov	r2, r6
   13424:	bne	134e0 <main@@Base+0x200>
   13428:	b	13524 <main@@Base+0x244>
   1342c:	mov	r0, sl
   13430:	mov	r1, r4
   13434:	mov	r2, r6
   13438:	mov	r3, #21
   1343c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13440:	mov	r4, r0
   13444:	add	r0, sl, #24
   13448:	ldr	r0, [r0]
   1344c:	cmp	r0, #0
   13450:	bne	13398 <main@@Base+0xb8>
   13454:	ldr	r0, [sl]
   13458:	mov	r1, #3
   1345c:	bl	2d888 <flatcc_builder_check_required_field@@Base>
   13460:	cmp	r0, #0
   13464:	beq	13498 <main@@Base+0x1b8>
   13468:	ldr	r3, [sp, #56]	; 0x38
   1346c:	mov	r0, sl
   13470:	mov	r1, r4
   13474:	mov	r2, r6
   13478:	bl	33030 <flatcc_json_parser_finalize_unions@@Base>
   1347c:	mov	r4, r0
   13480:	ldr	r0, [sl]
   13484:	bl	2da14 <flatcc_builder_end_table@@Base>
   13488:	cmp	r0, #0
   1348c:	str	r0, [r5]
   13490:	bne	133b0 <main@@Base+0xd0>
   13494:	b	13398 <main@@Base+0xb8>
   13498:	mov	r0, sl
   1349c:	mov	r1, r4
   134a0:	mov	r2, r6
   134a4:	mov	r3, #29
   134a8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   134ac:	mov	r4, r0
   134b0:	b	13398 <main@@Base+0xb8>
   134b4:	bne	134c4 <main@@Base+0x1e4>
   134b8:	ldrb	r0, [r4, #2]!
   134bc:	cmp	r0, #32
   134c0:	bhi	134d4 <main@@Base+0x1f4>
   134c4:	mov	r0, sl
   134c8:	mov	r2, r6
   134cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   134d0:	mov	r4, r0
   134d4:	cmp	r4, r6
   134d8:	mov	r2, r6
   134dc:	beq	13524 <main@@Base+0x244>
   134e0:	ldrb	r0, [r4]
   134e4:	cmp	r0, #125	; 0x7d
   134e8:	bne	13520 <main@@Base+0x240>
   134ec:	add	r1, r4, #1
   134f0:	sub	r0, r6, r1
   134f4:	cmp	r0, #2
   134f8:	blt	1dc58 <main@@Base+0xa978>
   134fc:	ldrb	r0, [r1]
   13500:	cmp	r0, #32
   13504:	bls	1dc48 <main@@Base+0xa968>
   13508:	mov	r4, r1
   1350c:	add	r0, sl, #24
   13510:	ldr	r0, [r0]
   13514:	cmp	r0, #0
   13518:	bne	13398 <main@@Base+0xb8>
   1351c:	b	13454 <main@@Base+0x174>
   13520:	mov	r2, r4
   13524:	add	r0, sl, #24
   13528:	vldr	s18, [pc, #912]	; 138c0 <main@@Base+0x5e0>
   1352c:	vmov.f32	s16, #8	; 0x40400000  3.0
   13530:	str	r6, [sp, #52]	; 0x34
   13534:	str	sl, [sp, #44]	; 0x2c
   13538:	str	r5, [sp, #48]	; 0x30
   1353c:	str	r0, [sp, #36]	; 0x24
   13540:	add	r0, sl, #12
   13544:	str	r0, [sp, #40]	; 0x28
   13548:	movw	r0, #33392	; 0x8270
   1354c:	movt	r0, #4
   13550:	add	r0, r0, #48	; 0x30
   13554:	str	r0, [sp, #28]
   13558:	movw	r0, #13407	; 0x345f
   1355c:	movt	r0, #29494	; 0x7336
   13560:	sub	r0, r0, #512	; 0x200
   13564:	sub	r0, r0, #196608	; 0x30000
   13568:	str	r0, [sp, #32]
   1356c:	b	1a7d8 <main@@Base+0x74f8>
   13570:	bne	13580 <main@@Base+0x2a0>
   13574:	ldrb	r0, [r2, #2]!
   13578:	cmp	r0, #32
   1357c:	bhi	13590 <main@@Base+0x2b0>
   13580:	mov	r0, sl
   13584:	mov	r2, r6
   13588:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1358c:	mov	r2, r0
   13590:	cmp	r2, r6
   13594:	bne	1db84 <main@@Base+0xa8a4>
   13598:	b	1dbe4 <main@@Base+0xa904>
   1359c:	mov	r0, sl
   135a0:	mov	r1, r7
   135a4:	mov	r2, r6
   135a8:	mov	r3, #22
   135ac:	bl	30170 <flatcc_json_parser_set_error@@Base>
   135b0:	ldr	r5, [sp, #48]	; 0x30
   135b4:	mov	r7, r0
   135b8:	ldr	r0, [sl]
   135bc:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   135c0:	cmp	r0, #0
   135c4:	str	r0, [sp, #60]	; 0x3c
   135c8:	beq	1dc94 <main@@Base+0xa9b4>
   135cc:	ldr	r0, [sl]
   135d0:	mov	r1, #31
   135d4:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   135d8:	cmp	r0, #0
   135dc:	beq	1dc94 <main@@Base+0xa9b4>
   135e0:	ldr	r1, [sp, #60]	; 0x3c
   135e4:	mov	r4, r7
   135e8:	str	r1, [r0]
   135ec:	sub	r0, r6, r4
   135f0:	cmp	r0, #2
   135f4:	bge	1db38 <main@@Base+0xa858>
   135f8:	b	15d38 <main@@Base+0x2a58>
   135fc:	cmp	r0, #34	; 0x22
   13600:	bne	19490 <main@@Base+0x61b0>
   13604:	add	r1, r8, #10
   13608:	sub	r0, r6, r1
   1360c:	cmp	r0, #2
   13610:	blt	13824 <main@@Base+0x544>
   13614:	ldrb	r0, [r1]
   13618:	cmp	r0, #32
   1361c:	bls	13810 <main@@Base+0x530>
   13620:	mov	r2, r1
   13624:	cmp	r2, r6
   13628:	bne	1383c <main@@Base+0x55c>
   1362c:	b	13874 <main@@Base+0x594>
   13630:	bne	13640 <main@@Base+0x360>
   13634:	ldrb	r0, [r7, #2]!
   13638:	cmp	r0, #32
   1363c:	bhi	13650 <main@@Base+0x370>
   13640:	mov	r0, sl
   13644:	mov	r2, r6
   13648:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1364c:	mov	r7, r0
   13650:	cmp	r7, r6
   13654:	mov	r4, r6
   13658:	beq	136a0 <main@@Base+0x3c0>
   1365c:	ldrb	r0, [r7]
   13660:	cmp	r0, #93	; 0x5d
   13664:	bne	1369c <main@@Base+0x3bc>
   13668:	ldr	r5, [sp, #48]	; 0x30
   1366c:	add	r1, r7, #1
   13670:	sub	r0, r6, r1
   13674:	cmp	r0, #2
   13678:	blt	16cd0 <main@@Base+0x39f0>
   1367c:	ldrb	r0, [r1]
   13680:	cmp	r0, #32
   13684:	bhi	137ac <main@@Base+0x4cc>
   13688:	bne	16cd0 <main@@Base+0x39f0>
   1368c:	ldrb	r0, [r7, #2]!
   13690:	cmp	r0, #32
   13694:	bhi	135b8 <main@@Base+0x2d8>
   13698:	b	16cd0 <main@@Base+0x39f0>
   1369c:	mov	r4, r7
   136a0:	ldr	r0, [sl]
   136a4:	mov	r1, #1
   136a8:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   136ac:	mov	r3, r0
   136b0:	cmp	r0, #0
   136b4:	beq	13398 <main@@Base+0xb8>
   136b8:	mov	r0, sl
   136bc:	mov	r1, r4
   136c0:	mov	r2, r6
   136c4:	bl	1fa28 <main@@Base+0xc748>
   136c8:	mov	r1, r0
   136cc:	sub	r0, r6, r0
   136d0:	cmp	r0, #2
   136d4:	blt	13708 <main@@Base+0x428>
   136d8:	ldrb	r0, [r1]
   136dc:	cmp	r0, #32
   136e0:	bls	136f4 <main@@Base+0x414>
   136e4:	mov	r4, r1
   136e8:	cmp	r4, r6
   136ec:	bne	13720 <main@@Base+0x440>
   136f0:	b	137b4 <main@@Base+0x4d4>
   136f4:	bne	13708 <main@@Base+0x428>
   136f8:	mov	r4, r1
   136fc:	ldrb	r0, [r4, #1]!
   13700:	cmp	r0, #32
   13704:	bhi	13718 <main@@Base+0x438>
   13708:	mov	r0, sl
   1370c:	mov	r2, r6
   13710:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13714:	mov	r4, r0
   13718:	cmp	r4, r6
   1371c:	beq	137b4 <main@@Base+0x4d4>
   13720:	ldrb	r0, [r4]
   13724:	cmp	r0, #44	; 0x2c
   13728:	bne	137c0 <main@@Base+0x4e0>
   1372c:	add	r1, r4, #1
   13730:	sub	r0, r6, r1
   13734:	cmp	r0, #2
   13738:	blt	13768 <main@@Base+0x488>
   1373c:	ldrb	r0, [r1]
   13740:	cmp	r0, #32
   13744:	bls	13758 <main@@Base+0x478>
   13748:	mov	r4, r1
   1374c:	cmp	r4, r6
   13750:	bne	13780 <main@@Base+0x4a0>
   13754:	b	137fc <main@@Base+0x51c>
   13758:	bne	13768 <main@@Base+0x488>
   1375c:	ldrb	r0, [r4, #2]!
   13760:	cmp	r0, #32
   13764:	bhi	13778 <main@@Base+0x498>
   13768:	mov	r0, sl
   1376c:	mov	r2, r6
   13770:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13774:	mov	r4, r0
   13778:	cmp	r4, r6
   1377c:	beq	137fc <main@@Base+0x51c>
   13780:	ldrb	r0, [r4]
   13784:	cmp	r0, #93	; 0x5d
   13788:	bne	136a0 <main@@Base+0x3c0>
   1378c:	ldr	r5, [sp, #48]	; 0x30
   13790:	add	r1, r4, #1
   13794:	sub	r0, r6, r1
   13798:	cmp	r0, #2
   1379c:	blt	16cd0 <main@@Base+0x39f0>
   137a0:	ldrb	r0, [r1]
   137a4:	cmp	r0, #32
   137a8:	bls	16014 <main@@Base+0x2d34>
   137ac:	mov	r7, r1
   137b0:	b	135b8 <main@@Base+0x2d8>
   137b4:	ldr	r5, [sp, #48]	; 0x30
   137b8:	mov	r7, r6
   137bc:	b	135b8 <main@@Base+0x2d8>
   137c0:	ldr	r5, [sp, #48]	; 0x30
   137c4:	cmp	r0, #93	; 0x5d
   137c8:	bne	1519c <main@@Base+0x1ebc>
   137cc:	add	r1, r4, #1
   137d0:	sub	r0, r6, r1
   137d4:	cmp	r0, #2
   137d8:	blt	16cd0 <main@@Base+0x39f0>
   137dc:	ldrb	r0, [r1]
   137e0:	cmp	r0, #32
   137e4:	bls	16cb0 <main@@Base+0x39d0>
   137e8:	ldr	r6, [sp, #52]	; 0x34
   137ec:	ldr	sl, [sp, #44]	; 0x2c
   137f0:	ldr	r5, [sp, #48]	; 0x30
   137f4:	mov	r7, r1
   137f8:	b	135b8 <main@@Base+0x2d8>
   137fc:	mov	r0, sl
   13800:	mov	r1, r6
   13804:	mov	r2, r6
   13808:	mov	r3, #9
   1380c:	b	135ac <main@@Base+0x2cc>
   13810:	bne	13824 <main@@Base+0x544>
   13814:	mov	r2, r1
   13818:	ldrb	r0, [r2, #1]!
   1381c:	cmp	r0, #32
   13820:	bhi	13834 <main@@Base+0x554>
   13824:	mov	r0, sl
   13828:	mov	r2, r6
   1382c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13830:	mov	r2, r0
   13834:	cmp	r2, r6
   13838:	beq	13874 <main@@Base+0x594>
   1383c:	ldrb	r0, [r2]
   13840:	cmp	r0, #58	; 0x3a
   13844:	bne	13874 <main@@Base+0x594>
   13848:	add	r1, r2, #1
   1384c:	sub	r0, r6, r1
   13850:	cmp	r0, #2
   13854:	blt	15930 <main@@Base+0x2650>
   13858:	ldrb	r0, [r1]
   1385c:	cmp	r0, #32
   13860:	bls	15920 <main@@Base+0x2640>
   13864:	mov	r2, r1
   13868:	cmp	r4, r2
   1386c:	bne	15948 <main@@Base+0x2668>
   13870:	b	19490 <main@@Base+0x61b0>
   13874:	mov	r1, r2
   13878:	mov	r0, sl
   1387c:	mov	r2, r6
   13880:	mov	r3, #4
   13884:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13888:	b	1593c <main@@Base+0x265c>
   1388c:	cmp	r0, #34	; 0x22
   13890:	bne	1882c <main@@Base+0x554c>
   13894:	add	r1, r8, #18
   13898:	sub	r0, r6, r1
   1389c:	cmp	r0, #2
   138a0:	blt	15f28 <main@@Base+0x2c48>
   138a4:	ldrb	r0, [r1]
   138a8:	cmp	r0, #32
   138ac:	bls	15f14 <main@@Base+0x2c34>
   138b0:	mov	r4, r1
   138b4:	cmp	r4, r6
   138b8:	bne	15f40 <main@@Base+0x2c60>
   138bc:	b	15f80 <main@@Base+0x2ca0>
   138c0:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   138c4:	bne	138d4 <main@@Base+0x5f4>
   138c8:	ldrb	r0, [r7, #2]!
   138cc:	cmp	r0, #32
   138d0:	bhi	138e4 <main@@Base+0x604>
   138d4:	mov	r0, sl
   138d8:	mov	r2, r6
   138dc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   138e0:	mov	r7, r0
   138e4:	cmp	r8, r7
   138e8:	beq	1db14 <main@@Base+0xa834>
   138ec:	mov	r0, #0
   138f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   138f4:	sub	r0, r6, r7
   138f8:	cmp	r0, #4
   138fc:	blt	13938 <main@@Base+0x658>
   13900:	ldr	r1, [r7]
   13904:	movw	r2, #29300	; 0x7274
   13908:	movt	r2, #25973	; 0x6575
   1390c:	cmp	r1, r2
   13910:	beq	139b0 <main@@Base+0x6d0>
   13914:	cmp	r0, #5
   13918:	blt	13938 <main@@Base+0x658>
   1391c:	movw	r1, #20272	; 0x4f30
   13920:	mov	r0, r7
   13924:	mov	r2, #5
   13928:	movt	r1, #3
   1392c:	bl	12ac8 <memcmp@plt>
   13930:	cmp	r0, #0
   13934:	beq	13a98 <main@@Base+0x7b8>
   13938:	mov	r2, r6
   1393c:	mov	r6, #0
   13940:	cmp	r7, r2
   13944:	str	r6, [fp, #-52]	; 0xffffffcc
   13948:	str	r6, [fp, #-56]	; 0xffffffc8
   1394c:	str	r6, [sp, #64]	; 0x40
   13950:	beq	139a0 <main@@Base+0x6c0>
   13954:	sub	r0, fp, #56	; 0x38
   13958:	mov	r1, r7
   1395c:	add	r3, sp, #64	; 0x40
   13960:	mov	r8, r2
   13964:	str	r0, [sp]
   13968:	mov	r0, sl
   1396c:	bl	326c4 <flatcc_json_parser_integer@@Base>
   13970:	cmp	r0, r7
   13974:	beq	139d0 <main@@Base+0x6f0>
   13978:	mov	r4, r0
   1397c:	ldr	r0, [sp, #64]	; 0x40
   13980:	ldr	r5, [sp, #48]	; 0x30
   13984:	cmp	r0, #0
   13988:	beq	139dc <main@@Base+0x6fc>
   1398c:	mov	r0, sl
   13990:	mov	r1, r4
   13994:	mov	r2, r8
   13998:	mov	r3, #8
   1399c:	b	13a00 <main@@Base+0x720>
   139a0:	ldr	r5, [sp, #48]	; 0x30
   139a4:	mov	r8, r2
   139a8:	mov	r4, r2
   139ac:	b	13a08 <main@@Base+0x728>
   139b0:	ldr	r5, [sp, #48]	; 0x30
   139b4:	mov	r8, r6
   139b8:	mov	r6, #1
   139bc:	add	r4, r7, #4
   139c0:	strb	r6, [fp, #-60]	; 0xffffffc4
   139c4:	cmp	r7, r4
   139c8:	bne	13a64 <main@@Base+0x784>
   139cc:	b	13a20 <main@@Base+0x740>
   139d0:	ldr	r5, [sp, #48]	; 0x30
   139d4:	mov	r4, r7
   139d8:	b	13a08 <main@@Base+0x728>
   139dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   139e4:	subs	r2, r0, #256	; 0x100
   139e8:	sbcs	r1, r1, #0
   139ec:	bcc	13ab8 <main@@Base+0x7d8>
   139f0:	mov	r0, sl
   139f4:	mov	r1, r4
   139f8:	mov	r2, r8
   139fc:	mov	r3, #7
   13a00:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13a04:	mov	r4, r0
   13a08:	uxtb	r6, r6
   13a0c:	cmp	r6, #0
   13a10:	movwne	r6, #1
   13a14:	strb	r6, [fp, #-60]	; 0xffffffc4
   13a18:	cmp	r7, r4
   13a1c:	bne	13a64 <main@@Base+0x784>
   13a20:	sub	r0, fp, #60	; 0x3c
   13a24:	mov	r1, r7
   13a28:	mov	r2, r8
   13a2c:	mov	r6, r8
   13a30:	str	r0, [sp]
   13a34:	movw	r0, #32912	; 0x8090
   13a38:	movt	r0, #4
   13a3c:	add	r3, r0, #60	; 0x3c
   13a40:	mov	r0, sl
   13a44:	bl	23b54 <main@@Base+0x10874>
   13a48:	mov	r4, r0
   13a4c:	cmp	r0, r7
   13a50:	beq	13398 <main@@Base+0xb8>
   13a54:	mov	r8, r6
   13a58:	cmp	r4, r6
   13a5c:	beq	1dc9c <main@@Base+0xa9bc>
   13a60:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   13a64:	cmp	r6, #1
   13a68:	ldrbeq	r0, [sl, #8]
   13a6c:	tsteq	r0, #2
   13a70:	beq	15d28 <main@@Base+0x2a48>
   13a74:	ldr	r0, [sl]
   13a78:	mov	r1, #15
   13a7c:	mov	r2, #1
   13a80:	mov	r3, #1
   13a84:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   13a88:	cmp	r0, #0
   13a8c:	beq	1dc9c <main@@Base+0xa9bc>
   13a90:	strb	r6, [r0]
   13a94:	b	15d28 <main@@Base+0x2a48>
   13a98:	ldr	r5, [sp, #48]	; 0x30
   13a9c:	mov	r8, r6
   13aa0:	mov	r6, #0
   13aa4:	add	r4, r7, #5
   13aa8:	strb	r6, [fp, #-60]	; 0xffffffc4
   13aac:	cmp	r7, r4
   13ab0:	bne	13a64 <main@@Base+0x784>
   13ab4:	b	13a20 <main@@Base+0x740>
   13ab8:	mov	r6, r0
   13abc:	b	13a08 <main@@Base+0x728>
   13ac0:	bne	13ad4 <main@@Base+0x7f4>
   13ac4:	mov	r4, r1
   13ac8:	ldrb	r0, [r4, #1]!
   13acc:	cmp	r0, #32
   13ad0:	bhi	13ae4 <main@@Base+0x804>
   13ad4:	mov	r0, sl
   13ad8:	mov	r2, r6
   13adc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13ae0:	mov	r4, r0
   13ae4:	cmp	r4, r6
   13ae8:	beq	13b24 <main@@Base+0x844>
   13aec:	ldrb	r0, [r4]
   13af0:	cmp	r0, #58	; 0x3a
   13af4:	bne	13b24 <main@@Base+0x844>
   13af8:	add	r1, r4, #1
   13afc:	sub	r0, r6, r1
   13b00:	cmp	r0, #2
   13b04:	blt	1602c <main@@Base+0x2d4c>
   13b08:	ldrb	r0, [r1]
   13b0c:	cmp	r0, #32
   13b10:	bls	1601c <main@@Base+0x2d3c>
   13b14:	mov	r4, r1
   13b18:	cmp	r9, r4
   13b1c:	bne	16044 <main@@Base+0x2d64>
   13b20:	b	16f14 <main@@Base+0x3c34>
   13b24:	mov	r0, sl
   13b28:	mov	r1, r4
   13b2c:	mov	r2, r6
   13b30:	mov	r3, #4
   13b34:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13b38:	b	16038 <main@@Base+0x2d58>
   13b3c:	mov	r0, sl
   13b40:	mov	r1, r4
   13b44:	mov	r2, r6
   13b48:	mov	r3, #9
   13b4c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13b50:	b	1d2b8 <main@@Base+0x9fd8>
   13b54:	bne	13b64 <main@@Base+0x884>
   13b58:	ldrb	r0, [r4, #2]!
   13b5c:	cmp	r0, #32
   13b60:	bhi	13b74 <main@@Base+0x894>
   13b64:	mov	r0, r6
   13b68:	mov	r2, r5
   13b6c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13b70:	mov	r4, r0
   13b74:	cmp	r9, r4
   13b78:	beq	1cb70 <main@@Base+0x9890>
   13b7c:	ldr	sl, [sp, #44]	; 0x2c
   13b80:	mov	r1, #1
   13b84:	mov	r2, #1
   13b88:	mvn	r3, #0
   13b8c:	ldr	r0, [sl]
   13b90:	bl	2caac <flatcc_builder_start_vector@@Base>
   13b94:	cmp	r0, #0
   13b98:	bne	1dcbc <main@@Base+0xa9dc>
   13b9c:	mov	r6, r5
   13ba0:	cmp	r4, r5
   13ba4:	beq	13be0 <main@@Base+0x900>
   13ba8:	ldrb	r0, [r4]
   13bac:	cmp	r0, #91	; 0x5b
   13bb0:	bne	13be0 <main@@Base+0x900>
   13bb4:	add	r1, r4, #1
   13bb8:	sub	r0, r6, r1
   13bbc:	cmp	r0, #2
   13bc0:	blt	15458 <main@@Base+0x2178>
   13bc4:	ldrb	r0, [r1]
   13bc8:	cmp	r0, #32
   13bcc:	bls	15448 <main@@Base+0x2168>
   13bd0:	mov	r4, r1
   13bd4:	cmp	r4, r6
   13bd8:	bne	15470 <main@@Base+0x2190>
   13bdc:	b	1549c <main@@Base+0x21bc>
   13be0:	mov	r0, sl
   13be4:	mov	r1, r4
   13be8:	mov	r2, r6
   13bec:	mov	r3, #22
   13bf0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13bf4:	ldr	r5, [sp, #48]	; 0x30
   13bf8:	mov	r4, r0
   13bfc:	ldr	r0, [sl]
   13c00:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   13c04:	cmp	r0, #0
   13c08:	str	r0, [sp, #60]	; 0x3c
   13c0c:	beq	13398 <main@@Base+0xb8>
   13c10:	ldr	r0, [sl]
   13c14:	mov	r1, #24
   13c18:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   13c1c:	cmp	r0, #0
   13c20:	bne	1d2e4 <main@@Base+0xa004>
   13c24:	b	13398 <main@@Base+0xb8>
   13c28:	bne	13c3c <main@@Base+0x95c>
   13c2c:	mov	r4, r1
   13c30:	ldrb	r0, [r4, #1]!
   13c34:	cmp	r0, #32
   13c38:	bhi	13c4c <main@@Base+0x96c>
   13c3c:	mov	r0, sl
   13c40:	mov	r2, r6
   13c44:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13c48:	mov	r4, r0
   13c4c:	cmp	r4, r6
   13c50:	beq	13c8c <main@@Base+0x9ac>
   13c54:	ldrb	r0, [r4]
   13c58:	cmp	r0, #58	; 0x3a
   13c5c:	bne	13c8c <main@@Base+0x9ac>
   13c60:	add	r1, r4, #1
   13c64:	sub	r0, r6, r1
   13c68:	cmp	r0, #2
   13c6c:	blt	161ac <main@@Base+0x2ecc>
   13c70:	ldrb	r0, [r1]
   13c74:	cmp	r0, #32
   13c78:	bls	1619c <main@@Base+0x2ebc>
   13c7c:	mov	r4, r1
   13c80:	cmp	r7, r4
   13c84:	bne	161c4 <main@@Base+0x2ee4>
   13c88:	b	1882c <main@@Base+0x554c>
   13c8c:	mov	r0, sl
   13c90:	mov	r1, r4
   13c94:	mov	r2, r6
   13c98:	mov	r3, #4
   13c9c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13ca0:	b	161b8 <main@@Base+0x2ed8>
   13ca4:	cmp	r0, #34	; 0x22
   13ca8:	bne	19490 <main@@Base+0x61b0>
   13cac:	add	r1, r8, #18
   13cb0:	sub	r0, r6, r1
   13cb4:	cmp	r0, #2
   13cb8:	blt	1612c <main@@Base+0x2e4c>
   13cbc:	ldrb	r0, [r1]
   13cc0:	cmp	r0, #32
   13cc4:	bls	16118 <main@@Base+0x2e38>
   13cc8:	mov	r7, r1
   13ccc:	cmp	r7, r6
   13cd0:	bne	16144 <main@@Base+0x2e64>
   13cd4:	b	16184 <main@@Base+0x2ea4>
   13cd8:	bne	13ce8 <main@@Base+0xa08>
   13cdc:	ldrb	r0, [r7, #2]!
   13ce0:	cmp	r0, #32
   13ce4:	bhi	13cf8 <main@@Base+0xa18>
   13ce8:	mov	r0, sl
   13cec:	mov	r2, r6
   13cf0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13cf4:	mov	r7, r0
   13cf8:	cmp	r8, r7
   13cfc:	beq	1db14 <main@@Base+0xa834>
   13d00:	mov	r2, r6
   13d04:	mov	r6, #0
   13d08:	cmp	r7, r2
   13d0c:	str	r6, [fp, #-52]	; 0xffffffcc
   13d10:	str	r6, [fp, #-56]	; 0xffffffc8
   13d14:	strh	r6, [fp, #-60]	; 0xffffffc4
   13d18:	str	r6, [sp, #64]	; 0x40
   13d1c:	beq	13d84 <main@@Base+0xaa4>
   13d20:	sub	r0, fp, #56	; 0x38
   13d24:	mov	r1, r7
   13d28:	add	r3, sp, #64	; 0x40
   13d2c:	mov	r8, r2
   13d30:	str	r0, [sp]
   13d34:	mov	r0, sl
   13d38:	bl	326c4 <flatcc_json_parser_integer@@Base>
   13d3c:	ldr	r5, [sp, #48]	; 0x30
   13d40:	cmp	r0, r7
   13d44:	beq	13d9c <main@@Base+0xabc>
   13d48:	ldr	r2, [sp, #64]	; 0x40
   13d4c:	mov	r4, r0
   13d50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d58:	cmp	r2, #0
   13d5c:	beq	13dac <main@@Base+0xacc>
   13d60:	movw	r2, #32769	; 0x8001
   13d64:	subs	r2, r0, r2
   13d68:	sbcs	r1, r1, #0
   13d6c:	bcc	13ddc <main@@Base+0xafc>
   13d70:	mov	r0, sl
   13d74:	mov	r1, r4
   13d78:	mov	r2, r8
   13d7c:	mov	r3, #8
   13d80:	b	13dc8 <main@@Base+0xae8>
   13d84:	ldr	r5, [sp, #48]	; 0x30
   13d88:	mov	r8, r2
   13d8c:	mov	r4, r2
   13d90:	cmp	r7, r4
   13d94:	bne	13e44 <main@@Base+0xb64>
   13d98:	b	13e00 <main@@Base+0xb20>
   13d9c:	mov	r4, r7
   13da0:	cmp	r7, r4
   13da4:	bne	13e44 <main@@Base+0xb64>
   13da8:	b	13e00 <main@@Base+0xb20>
   13dac:	subs	r2, r0, #32768	; 0x8000
   13db0:	sbcs	r1, r1, #0
   13db4:	bcc	13df0 <main@@Base+0xb10>
   13db8:	mov	r0, sl
   13dbc:	mov	r1, r4
   13dc0:	mov	r2, r8
   13dc4:	mov	r3, #7
   13dc8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13dcc:	mov	r4, r0
   13dd0:	cmp	r7, r4
   13dd4:	bne	13e44 <main@@Base+0xb64>
   13dd8:	b	13e00 <main@@Base+0xb20>
   13ddc:	rsb	r6, r0, #0
   13de0:	strh	r6, [fp, #-60]	; 0xffffffc4
   13de4:	cmp	r7, r4
   13de8:	bne	13e44 <main@@Base+0xb64>
   13dec:	b	13e00 <main@@Base+0xb20>
   13df0:	mov	r6, r0
   13df4:	strh	r6, [fp, #-60]	; 0xffffffc4
   13df8:	cmp	r7, r4
   13dfc:	bne	13e44 <main@@Base+0xb64>
   13e00:	sub	r0, fp, #60	; 0x3c
   13e04:	mov	r1, r7
   13e08:	mov	r2, r8
   13e0c:	mov	r6, r8
   13e10:	str	r0, [sp]
   13e14:	movw	r0, #32912	; 0x8090
   13e18:	movt	r0, #4
   13e1c:	add	r3, r0, #12
   13e20:	mov	r0, sl
   13e24:	bl	1f794 <main@@Base+0xc4b4>
   13e28:	mov	r4, r0
   13e2c:	cmp	r0, r7
   13e30:	beq	13398 <main@@Base+0xb8>
   13e34:	mov	r8, r6
   13e38:	cmp	r4, r6
   13e3c:	beq	1dc9c <main@@Base+0xa9bc>
   13e40:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   13e44:	uxth	r0, r6
   13e48:	cmp	r0, #100	; 0x64
   13e4c:	ldrbeq	r0, [sl, #8]
   13e50:	tsteq	r0, #2
   13e54:	beq	15d28 <main@@Base+0x2a48>
   13e58:	ldr	r0, [sl]
   13e5c:	mov	r1, #2
   13e60:	mov	r2, #2
   13e64:	mov	r3, #2
   13e68:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   13e6c:	cmp	r0, #0
   13e70:	bne	15d24 <main@@Base+0x2a44>
   13e74:	b	1dc9c <main@@Base+0xa9bc>
   13e78:	bne	13e88 <main@@Base+0xba8>
   13e7c:	ldrb	r0, [r4, #2]!
   13e80:	cmp	r0, #32
   13e84:	bhi	13e98 <main@@Base+0xbb8>
   13e88:	mov	r0, sl
   13e8c:	mov	r2, r6
   13e90:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13e94:	mov	r4, r0
   13e98:	cmp	r8, r4
   13e9c:	beq	1db14 <main@@Base+0xa834>
   13ea0:	ldr	r0, [sl]
   13ea4:	mov	r1, #0
   13ea8:	mov	r2, #32
   13eac:	mov	r3, #16
   13eb0:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   13eb4:	cmp	r0, #0
   13eb8:	str	r0, [sp, #24]
   13ebc:	beq	13398 <main@@Base+0xb8>
   13ec0:	ldr	r5, [sp, #48]	; 0x30
   13ec4:	cmp	r4, r6
   13ec8:	beq	13f08 <main@@Base+0xc28>
   13ecc:	ldrb	r0, [r4]
   13ed0:	cmp	r0, #123	; 0x7b
   13ed4:	bne	13f08 <main@@Base+0xc28>
   13ed8:	add	r1, r4, #1
   13edc:	sub	r0, r6, r1
   13ee0:	cmp	r0, #2
   13ee4:	blt	13f40 <main@@Base+0xc60>
   13ee8:	ldrb	r0, [r1]
   13eec:	cmp	r0, #32
   13ef0:	bls	13f30 <main@@Base+0xc50>
   13ef4:	mov	r4, r1
   13ef8:	cmp	r4, r6
   13efc:	mov	r2, r6
   13f00:	bne	13f5c <main@@Base+0xc7c>
   13f04:	b	13f9c <main@@Base+0xcbc>
   13f08:	mov	r0, sl
   13f0c:	mov	r1, r4
   13f10:	mov	r2, r6
   13f14:	mov	r3, #21
   13f18:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13f1c:	mov	r4, r0
   13f20:	sub	r0, r6, r4
   13f24:	cmp	r0, #2
   13f28:	bge	1db38 <main@@Base+0xa858>
   13f2c:	b	15d38 <main@@Base+0x2a58>
   13f30:	bne	13f40 <main@@Base+0xc60>
   13f34:	ldrb	r0, [r4, #2]!
   13f38:	cmp	r0, #32
   13f3c:	bhi	13f50 <main@@Base+0xc70>
   13f40:	mov	r0, sl
   13f44:	mov	r2, r6
   13f48:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   13f4c:	mov	r4, r0
   13f50:	cmp	r4, r6
   13f54:	mov	r2, r6
   13f58:	beq	13f9c <main@@Base+0xcbc>
   13f5c:	ldrb	r0, [r4]
   13f60:	cmp	r0, #125	; 0x7d
   13f64:	bne	13f98 <main@@Base+0xcb8>
   13f68:	add	r1, r4, #1
   13f6c:	sub	r0, r6, r1
   13f70:	cmp	r0, #2
   13f74:	blt	17f5c <main@@Base+0x4c7c>
   13f78:	ldrb	r0, [r1]
   13f7c:	cmp	r0, #32
   13f80:	bhi	14d70 <main@@Base+0x1a90>
   13f84:	bne	17f5c <main@@Base+0x4c7c>
   13f88:	ldrb	r0, [r4, #2]!
   13f8c:	cmp	r0, #32
   13f90:	bhi	1db2c <main@@Base+0xa84c>
   13f94:	b	17f5c <main@@Base+0x4c7c>
   13f98:	mov	r2, r4
   13f9c:	ldr	r0, [sp, #24]
   13fa0:	add	r0, r0, #26
   13fa4:	str	r0, [sp, #20]
   13fa8:	cmp	r2, r6
   13fac:	mov	r8, r6
   13fb0:	beq	14004 <main@@Base+0xd24>
   13fb4:	ldrb	r0, [r2]
   13fb8:	cmp	r0, #46	; 0x2e
   13fbc:	beq	13fd8 <main@@Base+0xcf8>
   13fc0:	cmp	r0, #34	; 0x22
   13fc4:	bne	13ff4 <main@@Base+0xd14>
   13fc8:	ldr	r0, [sp, #40]	; 0x28
   13fcc:	mov	r1, #0
   13fd0:	add	r8, r2, #1
   13fd4:	b	14000 <main@@Base+0xd20>
   13fd8:	mov	r1, r2
   13fdc:	mov	r0, sl
   13fe0:	mov	r2, r6
   13fe4:	mov	r3, #5
   13fe8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   13fec:	mov	r8, r0
   13ff0:	b	14004 <main@@Base+0xd24>
   13ff4:	ldr	r0, [sp, #40]	; 0x28
   13ff8:	mov	r1, #1
   13ffc:	mov	r8, r2
   14000:	str	r1, [r0]
   14004:	sub	ip, r6, r8
   14008:	mov	r0, #8
   1400c:	cmp	ip, #8
   14010:	movcc	r0, ip
   14014:	and	r0, r0, #15
   14018:	sub	r7, r0, #1
   1401c:	cmp	r7, #7
   14020:	bhi	14c7c <main@@Base+0x199c>
   14024:	add	r5, pc, #32
   14028:	mov	r1, #0
   1402c:	mov	lr, #0
   14030:	mov	r9, #0
   14034:	mov	r6, #0
   14038:	mov	r3, #0
   1403c:	mov	r4, #0
   14040:	mov	r0, #0
   14044:	mov	r2, #0
   14048:	ldr	pc, [r5, r7, lsl #2]
   1404c:	strheq	r4, [r1], -r0
   14050:	andeq	r4, r1, r8, lsr #1
   14054:	andeq	r4, r1, r0, lsr #1
   14058:	muleq	r1, r8, r0
   1405c:	andeq	r4, r1, ip, lsl #1
   14060:	andeq	r4, r1, r0, lsl #1
   14064:	andeq	r4, r1, r0, ror r0
   14068:	andeq	r4, r1, ip, rrx
   1406c:	ldrb	lr, [r8, #7]
   14070:	ldrb	r0, [r8, #6]
   14074:	mov	r9, r1
   14078:	orr	r0, lr, r0, lsl #8
   1407c:	mov	r1, r0
   14080:	ldrb	r0, [r8, #5]
   14084:	mov	r6, r9
   14088:	orr	r1, r1, r0, lsl #16
   1408c:	ldrb	r0, [r8, #4]
   14090:	mov	r3, r6
   14094:	orr	r1, r1, r0, lsl #24
   14098:	ldrb	r0, [r8, #3]
   1409c:	orr	r4, r0, r3
   140a0:	ldrb	r0, [r8, #2]
   140a4:	orr	r0, r4, r0, lsl #8
   140a8:	ldrb	r2, [r8, #1]
   140ac:	orr	r2, r0, r2, lsl #16
   140b0:	ldrb	r0, [r8]
   140b4:	movw	r3, #29556	; 0x7374
   140b8:	movt	r3, #29797	; 0x7465
   140bc:	orr	r2, r2, r0, lsl #24
   140c0:	mvn	r0, #-855638016	; 0xcd000000
   140c4:	subs	r0, r0, r1
   140c8:	sbcs	r0, r3, r2
   140cc:	bcc	1414c <main@@Base+0xe6c>
   140d0:	ldr	r6, [sp, #52]	; 0x34
   140d4:	and	r1, r1, #-16777216	; 0xff000000
   140d8:	eor	r0, r2, r3
   140dc:	eor	r2, r1, #822083584	; 0x31000000
   140e0:	orrs	r2, r2, r0
   140e4:	beq	1422c <main@@Base+0xf4c>
   140e8:	eor	r1, r1, #838860800	; 0x32000000
   140ec:	orrs	r0, r1, r0
   140f0:	bne	14c7c <main@@Base+0x199c>
   140f4:	cmp	ip, #6
   140f8:	mov	r6, r8
   140fc:	blt	146f4 <main@@Base+0x1414>
   14100:	ldr	r2, [sp, #40]	; 0x28
   14104:	mov	r1, r8
   14108:	ldrb	r0, [r1, #5]!
   1410c:	ldr	r2, [r2]
   14110:	cmp	r2, #0
   14114:	beq	14340 <main@@Base+0x1060>
   14118:	cmp	r0, #33	; 0x21
   1411c:	bcc	1412c <main@@Base+0xe4c>
   14120:	cmp	r0, #58	; 0x3a
   14124:	mov	r6, r8
   14128:	bne	146f4 <main@@Base+0x1414>
   1412c:	ldr	r0, [sp, #40]	; 0x28
   14130:	mov	r2, #0
   14134:	str	r2, [r0]
   14138:	ldr	r4, [sp, #52]	; 0x34
   1413c:	sub	r0, r4, r1
   14140:	cmp	r0, #2
   14144:	bge	14360 <main@@Base+0x1080>
   14148:	b	14444 <main@@Base+0x1164>
   1414c:	ldr	r6, [sp, #52]	; 0x34
   14150:	cmn	r2, #-2013265919	; 0x88000001
   14154:	bhi	141c0 <main@@Base+0xee0>
   14158:	and	r1, r1, #-16777216	; 0xff000000
   1415c:	eor	r0, r2, r3
   14160:	eor	r1, r1, #855638016	; 0x33000000
   14164:	orrs	r0, r1, r0
   14168:	bne	14c7c <main@@Base+0x199c>
   1416c:	cmp	ip, #6
   14170:	mov	r1, r8
   14174:	blt	14a54 <main@@Base+0x1774>
   14178:	ldr	r1, [sp, #40]	; 0x28
   1417c:	mov	r2, r8
   14180:	ldrb	r0, [r2, #5]!
   14184:	ldr	r1, [r1]
   14188:	cmp	r1, #0
   1418c:	beq	143b8 <main@@Base+0x10d8>
   14190:	cmp	r0, #33	; 0x21
   14194:	bcc	141a4 <main@@Base+0xec4>
   14198:	cmp	r0, #58	; 0x3a
   1419c:	mov	r1, r8
   141a0:	bne	14a54 <main@@Base+0x1774>
   141a4:	ldr	r0, [sp, #40]	; 0x28
   141a8:	mov	r1, #0
   141ac:	str	r1, [r0]
   141b0:	sub	r0, r6, r2
   141b4:	cmp	r0, #2
   141b8:	bge	143d4 <main@@Base+0x10f4>
   141bc:	b	145d0 <main@@Base+0x12f0>
   141c0:	lsr	r1, r2, #24
   141c4:	and	r0, r2, #-16777216	; 0xff000000
   141c8:	cmp	r1, #120	; 0x78
   141cc:	bhi	14280 <main@@Base+0xfa0>
   141d0:	teq	r0, #2013265920	; 0x78000000
   141d4:	bne	14c7c <main@@Base+0x199c>
   141d8:	cmp	ip, #2
   141dc:	mov	r7, r8
   141e0:	blt	14a98 <main@@Base+0x17b8>
   141e4:	ldr	r2, [sp, #40]	; 0x28
   141e8:	mov	r1, r8
   141ec:	ldrb	r0, [r1, #1]!
   141f0:	ldr	r2, [r2]
   141f4:	cmp	r2, #0
   141f8:	beq	143f0 <main@@Base+0x1110>
   141fc:	cmp	r0, #33	; 0x21
   14200:	bcc	14210 <main@@Base+0xf30>
   14204:	cmp	r0, #58	; 0x3a
   14208:	mov	r7, r8
   1420c:	bne	14a98 <main@@Base+0x17b8>
   14210:	ldr	r0, [sp, #40]	; 0x28
   14214:	mov	r2, #0
   14218:	str	r2, [r0]
   1421c:	sub	r0, r6, r1
   14220:	cmp	r0, #2
   14224:	bge	1440c <main@@Base+0x112c>
   14228:	b	14658 <main@@Base+0x1378>
   1422c:	cmp	ip, #6
   14230:	mov	r7, r8
   14234:	blt	14874 <main@@Base+0x1594>
   14238:	ldr	r2, [sp, #40]	; 0x28
   1423c:	mov	r1, r8
   14240:	ldrb	r0, [r1, #5]!
   14244:	ldr	r2, [r2]
   14248:	cmp	r2, #0
   1424c:	beq	14380 <main@@Base+0x10a0>
   14250:	cmp	r0, #33	; 0x21
   14254:	bcc	14264 <main@@Base+0xf84>
   14258:	cmp	r0, #58	; 0x3a
   1425c:	mov	r7, r8
   14260:	bne	14874 <main@@Base+0x1594>
   14264:	ldr	r0, [sp, #40]	; 0x28
   14268:	mov	r2, #0
   1426c:	str	r2, [r0]
   14270:	sub	r0, r6, r1
   14274:	cmp	r0, #2
   14278:	bge	1439c <main@@Base+0x10bc>
   1427c:	b	144cc <main@@Base+0x11ec>
   14280:	teq	r0, #2030043136	; 0x79000000
   14284:	beq	142e8 <main@@Base+0x1008>
   14288:	teq	r0, #2046820352	; 0x7a000000
   1428c:	bne	14c7c <main@@Base+0x199c>
   14290:	cmp	ip, #2
   14294:	mov	r7, r8
   14298:	blt	14b44 <main@@Base+0x1864>
   1429c:	ldr	r2, [sp, #40]	; 0x28
   142a0:	mov	r1, r8
   142a4:	ldrb	r0, [r1, #1]!
   142a8:	ldr	r2, [r2]
   142ac:	cmp	r2, #0
   142b0:	beq	1453c <main@@Base+0x125c>
   142b4:	cmp	r0, #33	; 0x21
   142b8:	bcc	142c8 <main@@Base+0xfe8>
   142bc:	cmp	r0, #58	; 0x3a
   142c0:	mov	r7, r8
   142c4:	bne	14b44 <main@@Base+0x1864>
   142c8:	ldr	r0, [sp, #40]	; 0x28
   142cc:	mov	r2, #0
   142d0:	str	r2, [r0]
   142d4:	ldr	r4, [sp, #52]	; 0x34
   142d8:	sub	r0, r4, r1
   142dc:	cmp	r0, #2
   142e0:	bge	1455c <main@@Base+0x127c>
   142e4:	b	14910 <main@@Base+0x1630>
   142e8:	cmp	ip, #2
   142ec:	mov	r7, r8
   142f0:	blt	14bf4 <main@@Base+0x1914>
   142f4:	ldr	r2, [sp, #40]	; 0x28
   142f8:	mov	r1, r8
   142fc:	ldrb	r0, [r1, #1]!
   14300:	ldr	r2, [r2]
   14304:	cmp	r2, #0
   14308:	beq	1457c <main@@Base+0x129c>
   1430c:	cmp	r0, #33	; 0x21
   14310:	bcc	14320 <main@@Base+0x1040>
   14314:	cmp	r0, #58	; 0x3a
   14318:	mov	r7, r8
   1431c:	bne	14bf4 <main@@Base+0x1914>
   14320:	ldr	r0, [sp, #40]	; 0x28
   14324:	mov	r2, #0
   14328:	str	r2, [r0]
   1432c:	ldr	r4, [sp, #52]	; 0x34
   14330:	sub	r0, r4, r1
   14334:	cmp	r0, #2
   14338:	bge	1459c <main@@Base+0x12bc>
   1433c:	b	149a8 <main@@Base+0x16c8>
   14340:	cmp	r0, #34	; 0x22
   14344:	mov	r6, r8
   14348:	bne	146f4 <main@@Base+0x1414>
   1434c:	add	r1, r8, #6
   14350:	ldr	r4, [sp, #52]	; 0x34
   14354:	sub	r0, r4, r1
   14358:	cmp	r0, #2
   1435c:	blt	14444 <main@@Base+0x1164>
   14360:	ldrb	r0, [r1]
   14364:	cmp	r0, #32
   14368:	bls	1442c <main@@Base+0x114c>
   1436c:	ldr	r4, [sp, #52]	; 0x34
   14370:	mov	r6, r1
   14374:	cmp	r6, r4
   14378:	bne	1445c <main@@Base+0x117c>
   1437c:	b	144a0 <main@@Base+0x11c0>
   14380:	cmp	r0, #34	; 0x22
   14384:	mov	r7, r8
   14388:	bne	14874 <main@@Base+0x1594>
   1438c:	add	r1, r8, #6
   14390:	sub	r0, r6, r1
   14394:	cmp	r0, #2
   14398:	blt	144cc <main@@Base+0x11ec>
   1439c:	ldrb	r0, [r1]
   143a0:	cmp	r0, #32
   143a4:	bls	144b8 <main@@Base+0x11d8>
   143a8:	mov	r7, r1
   143ac:	cmp	r7, r6
   143b0:	bne	144e4 <main@@Base+0x1204>
   143b4:	b	14524 <main@@Base+0x1244>
   143b8:	cmp	r0, #34	; 0x22
   143bc:	mov	r1, r8
   143c0:	bne	14a54 <main@@Base+0x1774>
   143c4:	add	r2, r8, #6
   143c8:	sub	r0, r6, r2
   143cc:	cmp	r0, #2
   143d0:	blt	145d0 <main@@Base+0x12f0>
   143d4:	ldrb	r0, [r2]
   143d8:	cmp	r0, #32
   143dc:	bls	145bc <main@@Base+0x12dc>
   143e0:	mov	r1, r2
   143e4:	cmp	r1, r6
   143e8:	bne	145ec <main@@Base+0x130c>
   143ec:	b	1462c <main@@Base+0x134c>
   143f0:	cmp	r0, #34	; 0x22
   143f4:	mov	r7, r8
   143f8:	bne	14a98 <main@@Base+0x17b8>
   143fc:	add	r1, r8, #2
   14400:	sub	r0, r6, r1
   14404:	cmp	r0, #2
   14408:	blt	14658 <main@@Base+0x1378>
   1440c:	ldrb	r0, [r1]
   14410:	cmp	r0, #32
   14414:	bls	14640 <main@@Base+0x1360>
   14418:	ldr	r6, [sp, #52]	; 0x34
   1441c:	mov	r7, r1
   14420:	cmp	r7, r6
   14424:	bne	14670 <main@@Base+0x1390>
   14428:	b	146b4 <main@@Base+0x13d4>
   1442c:	ldr	r4, [sp, #52]	; 0x34
   14430:	bne	14444 <main@@Base+0x1164>
   14434:	mov	r6, r1
   14438:	ldrb	r0, [r6, #1]!
   1443c:	cmp	r0, #32
   14440:	bhi	14454 <main@@Base+0x1174>
   14444:	mov	r0, sl
   14448:	mov	r2, r4
   1444c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14450:	mov	r6, r0
   14454:	cmp	r6, r4
   14458:	beq	144a0 <main@@Base+0x11c0>
   1445c:	ldrb	r0, [r6]
   14460:	cmp	r0, #58	; 0x3a
   14464:	bne	144a0 <main@@Base+0x11c0>
   14468:	ldr	r0, [sp, #52]	; 0x34
   1446c:	add	r1, r6, #1
   14470:	sub	r0, r0, r1
   14474:	cmp	r0, #2
   14478:	blt	146e4 <main@@Base+0x1404>
   1447c:	ldrb	r0, [r1]
   14480:	cmp	r0, #32
   14484:	bls	146d0 <main@@Base+0x13f0>
   14488:	ldr	sl, [sp, #44]	; 0x2c
   1448c:	mov	r6, r1
   14490:	cmp	r8, r6
   14494:	bne	146fc <main@@Base+0x141c>
   14498:	ldr	r6, [sp, #52]	; 0x34
   1449c:	b	14c7c <main@@Base+0x199c>
   144a0:	ldr	r2, [sp, #52]	; 0x34
   144a4:	mov	r0, sl
   144a8:	mov	r1, r6
   144ac:	mov	r3, #4
   144b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   144b4:	b	146f0 <main@@Base+0x1410>
   144b8:	bne	144cc <main@@Base+0x11ec>
   144bc:	mov	r7, r1
   144c0:	ldrb	r0, [r7, #1]!
   144c4:	cmp	r0, #32
   144c8:	bhi	144dc <main@@Base+0x11fc>
   144cc:	mov	r0, sl
   144d0:	mov	r2, r6
   144d4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   144d8:	mov	r7, r0
   144dc:	cmp	r7, r6
   144e0:	beq	14524 <main@@Base+0x1244>
   144e4:	ldrb	r0, [r7]
   144e8:	cmp	r0, #58	; 0x3a
   144ec:	bne	14524 <main@@Base+0x1244>
   144f0:	add	r1, r7, #1
   144f4:	sub	r0, r6, r1
   144f8:	cmp	r0, #2
   144fc:	blt	14864 <main@@Base+0x1584>
   14500:	ldrb	r0, [r1]
   14504:	cmp	r0, #32
   14508:	bls	1484c <main@@Base+0x156c>
   1450c:	ldr	r6, [sp, #52]	; 0x34
   14510:	ldr	sl, [sp, #44]	; 0x2c
   14514:	mov	r7, r1
   14518:	cmp	r8, r7
   1451c:	bne	1487c <main@@Base+0x159c>
   14520:	b	14c7c <main@@Base+0x199c>
   14524:	mov	r0, sl
   14528:	mov	r1, r7
   1452c:	mov	r2, r6
   14530:	mov	r3, #4
   14534:	bl	30170 <flatcc_json_parser_set_error@@Base>
   14538:	b	14870 <main@@Base+0x1590>
   1453c:	cmp	r0, #34	; 0x22
   14540:	mov	r7, r8
   14544:	bne	14b44 <main@@Base+0x1864>
   14548:	add	r1, r8, #2
   1454c:	ldr	r4, [sp, #52]	; 0x34
   14550:	sub	r0, r4, r1
   14554:	cmp	r0, #2
   14558:	blt	14910 <main@@Base+0x1630>
   1455c:	ldrb	r0, [r1]
   14560:	cmp	r0, #32
   14564:	bls	148f8 <main@@Base+0x1618>
   14568:	ldr	r4, [sp, #52]	; 0x34
   1456c:	mov	r7, r1
   14570:	cmp	r7, r4
   14574:	bne	14928 <main@@Base+0x1648>
   14578:	b	14970 <main@@Base+0x1690>
   1457c:	cmp	r0, #34	; 0x22
   14580:	mov	r7, r8
   14584:	bne	14bf4 <main@@Base+0x1914>
   14588:	add	r1, r8, #2
   1458c:	ldr	r4, [sp, #52]	; 0x34
   14590:	sub	r0, r4, r1
   14594:	cmp	r0, #2
   14598:	blt	149a8 <main@@Base+0x16c8>
   1459c:	ldrb	r0, [r1]
   145a0:	cmp	r0, #32
   145a4:	bls	14990 <main@@Base+0x16b0>
   145a8:	ldr	r4, [sp, #52]	; 0x34
   145ac:	mov	r7, r1
   145b0:	cmp	r7, r4
   145b4:	bne	149c0 <main@@Base+0x16e0>
   145b8:	b	14a08 <main@@Base+0x1728>
   145bc:	bne	145d0 <main@@Base+0x12f0>
   145c0:	mov	r1, r2
   145c4:	ldrb	r0, [r1, #1]!
   145c8:	cmp	r0, #32
   145cc:	bhi	145e4 <main@@Base+0x1304>
   145d0:	mov	r1, r2
   145d4:	mov	r0, sl
   145d8:	mov	r2, r6
   145dc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   145e0:	mov	r1, r0
   145e4:	cmp	r1, r6
   145e8:	beq	1462c <main@@Base+0x134c>
   145ec:	ldrb	r0, [r1]
   145f0:	cmp	r0, #58	; 0x3a
   145f4:	bne	1462c <main@@Base+0x134c>
   145f8:	add	r2, r1, #1
   145fc:	sub	r0, r6, r2
   14600:	cmp	r0, #2
   14604:	blt	14a40 <main@@Base+0x1760>
   14608:	ldrb	r0, [r2]
   1460c:	cmp	r0, #32
   14610:	bls	14a28 <main@@Base+0x1748>
   14614:	ldr	r6, [sp, #52]	; 0x34
   14618:	ldr	sl, [sp, #44]	; 0x2c
   1461c:	mov	r1, r2
   14620:	cmp	r8, r1
   14624:	bne	14a5c <main@@Base+0x177c>
   14628:	b	14c7c <main@@Base+0x199c>
   1462c:	mov	r0, sl
   14630:	mov	r2, r6
   14634:	mov	r3, #4
   14638:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1463c:	b	14a50 <main@@Base+0x1770>
   14640:	ldr	r6, [sp, #52]	; 0x34
   14644:	bne	14658 <main@@Base+0x1378>
   14648:	mov	r7, r1
   1464c:	ldrb	r0, [r7, #1]!
   14650:	cmp	r0, #32
   14654:	bhi	14668 <main@@Base+0x1388>
   14658:	ldr	r0, [sp, #44]	; 0x2c
   1465c:	mov	r2, r6
   14660:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14664:	mov	r7, r0
   14668:	cmp	r7, r6
   1466c:	beq	146b4 <main@@Base+0x13d4>
   14670:	ldrb	r0, [r7]
   14674:	cmp	r0, #58	; 0x3a
   14678:	bne	146b4 <main@@Base+0x13d4>
   1467c:	ldr	sl, [sp, #44]	; 0x2c
   14680:	add	r1, r7, #1
   14684:	sub	r0, r6, r1
   14688:	cmp	r0, #2
   1468c:	blt	14a88 <main@@Base+0x17a8>
   14690:	ldrb	r0, [r1]
   14694:	cmp	r0, #32
   14698:	bls	14a70 <main@@Base+0x1790>
   1469c:	ldr	r6, [sp, #52]	; 0x34
   146a0:	ldr	sl, [sp, #44]	; 0x2c
   146a4:	mov	r7, r1
   146a8:	cmp	r8, r7
   146ac:	bne	14aa0 <main@@Base+0x17c0>
   146b0:	b	14c7c <main@@Base+0x199c>
   146b4:	ldr	sl, [sp, #44]	; 0x2c
   146b8:	mov	r1, r7
   146bc:	mov	r2, r6
   146c0:	mov	r3, #4
   146c4:	mov	r0, sl
   146c8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   146cc:	b	14a94 <main@@Base+0x17b4>
   146d0:	ldr	sl, [sp, #44]	; 0x2c
   146d4:	bne	146e4 <main@@Base+0x1404>
   146d8:	ldrb	r0, [r6, #2]!
   146dc:	cmp	r0, #32
   146e0:	bhi	146f4 <main@@Base+0x1414>
   146e4:	ldr	r2, [sp, #52]	; 0x34
   146e8:	mov	r0, sl
   146ec:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   146f0:	mov	r6, r0
   146f4:	cmp	r8, r6
   146f8:	beq	14498 <main@@Base+0x11b8>
   146fc:	ldr	r2, [sp, #52]	; 0x34
   14700:	mov	r4, #0
   14704:	str	r4, [fp, #-52]	; 0xffffffcc
   14708:	str	r4, [fp, #-56]	; 0xffffffc8
   1470c:	strb	r4, [fp, #-60]	; 0xffffffc4
   14710:	str	r4, [sp, #64]	; 0x40
   14714:	cmp	r6, r2
   14718:	beq	14770 <main@@Base+0x1490>
   1471c:	sub	r0, fp, #56	; 0x38
   14720:	mov	r1, r6
   14724:	add	r3, sp, #64	; 0x40
   14728:	str	r0, [sp]
   1472c:	mov	r0, sl
   14730:	bl	326c4 <flatcc_json_parser_integer@@Base>
   14734:	cmp	r0, r6
   14738:	beq	14784 <main@@Base+0x14a4>
   1473c:	ldr	r3, [sp, #64]	; 0x40
   14740:	mov	r1, r0
   14744:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14748:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1474c:	cmp	r3, #0
   14750:	beq	14798 <main@@Base+0x14b8>
   14754:	subs	r3, r0, #129	; 0x81
   14758:	sbcs	r2, r2, #0
   1475c:	bcc	147c8 <main@@Base+0x14e8>
   14760:	ldr	r2, [sp, #52]	; 0x34
   14764:	mov	r0, sl
   14768:	mov	r3, #8
   1476c:	b	147b0 <main@@Base+0x14d0>
   14770:	mov	r1, r2
   14774:	ldr	r5, [sp, #48]	; 0x30
   14778:	cmp	r6, r1
   1477c:	bne	14830 <main@@Base+0x1550>
   14780:	b	147f4 <main@@Base+0x1514>
   14784:	mov	r1, r6
   14788:	ldr	r5, [sp, #48]	; 0x30
   1478c:	cmp	r6, r1
   14790:	bne	14830 <main@@Base+0x1550>
   14794:	b	147f4 <main@@Base+0x1514>
   14798:	subs	r3, r0, #128	; 0x80
   1479c:	sbcs	r2, r2, #0
   147a0:	bcc	147e0 <main@@Base+0x1500>
   147a4:	ldr	r2, [sp, #52]	; 0x34
   147a8:	mov	r0, sl
   147ac:	mov	r3, #7
   147b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   147b4:	mov	r1, r0
   147b8:	ldr	r5, [sp, #48]	; 0x30
   147bc:	cmp	r6, r1
   147c0:	bne	14830 <main@@Base+0x1550>
   147c4:	b	147f4 <main@@Base+0x1514>
   147c8:	rsb	r4, r0, #0
   147cc:	strb	r4, [fp, #-60]	; 0xffffffc4
   147d0:	ldr	r5, [sp, #48]	; 0x30
   147d4:	cmp	r6, r1
   147d8:	bne	14830 <main@@Base+0x1550>
   147dc:	b	147f4 <main@@Base+0x1514>
   147e0:	mov	r4, r0
   147e4:	strb	r4, [fp, #-60]	; 0xffffffc4
   147e8:	ldr	r5, [sp, #48]	; 0x30
   147ec:	cmp	r6, r1
   147f0:	bne	14830 <main@@Base+0x1550>
   147f4:	ldr	r4, [sp, #52]	; 0x34
   147f8:	sub	r0, fp, #60	; 0x3c
   147fc:	mov	r1, r6
   14800:	str	r0, [sp]
   14804:	movw	r0, #33392	; 0x8270
   14808:	movt	r0, #4
   1480c:	add	r3, r0, #80	; 0x50
   14810:	mov	r0, sl
   14814:	mov	r2, r4
   14818:	bl	1f288 <main@@Base+0xbfa8>
   1481c:	mov	r1, r0
   14820:	cmp	r0, r6
   14824:	cmpne	r1, r4
   14828:	beq	14d84 <main@@Base+0x1aa4>
   1482c:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   14830:	ldr	r0, [sp, #24]
   14834:	ldr	r6, [sp, #52]	; 0x34
   14838:	strb	r4, [r0, #24]
   1483c:	sub	r0, r6, r1
   14840:	cmp	r0, #2
   14844:	bge	14ca0 <main@@Base+0x19c0>
   14848:	b	14cd0 <main@@Base+0x19f0>
   1484c:	ldr	r6, [sp, #52]	; 0x34
   14850:	ldr	sl, [sp, #44]	; 0x2c
   14854:	bne	14864 <main@@Base+0x1584>
   14858:	ldrb	r0, [r7, #2]!
   1485c:	cmp	r0, #32
   14860:	bhi	14874 <main@@Base+0x1594>
   14864:	mov	r0, sl
   14868:	mov	r2, r6
   1486c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14870:	mov	r7, r0
   14874:	cmp	r8, r7
   14878:	beq	14c7c <main@@Base+0x199c>
   1487c:	mov	r0, #0
   14880:	mov	r1, r7
   14884:	mov	r2, r6
   14888:	sub	r3, fp, #56	; 0x38
   1488c:	str	r0, [fp, #-52]	; 0xffffffcc
   14890:	str	r0, [fp, #-56]	; 0xffffffc8
   14894:	mov	r0, sl
   14898:	bl	31b28 <flatcc_json_parser_double@@Base>
   1489c:	ldr	r5, [sp, #48]	; 0x30
   148a0:	mov	r1, r0
   148a4:	cmp	r7, r0
   148a8:	bne	148dc <main@@Base+0x15fc>
   148ac:	movw	r3, #33152	; 0x8180
   148b0:	sub	r0, fp, #56	; 0x38
   148b4:	mov	r1, r7
   148b8:	mov	r2, r6
   148bc:	str	r0, [sp]
   148c0:	mov	r0, sl
   148c4:	movt	r3, #4
   148c8:	bl	249b0 <main@@Base+0x116d0>
   148cc:	mov	r1, r0
   148d0:	cmp	r0, r7
   148d4:	cmpne	r1, r6
   148d8:	beq	14d84 <main@@Base+0x1aa4>
   148dc:	vldr	d16, [fp, #-56]	; 0xffffffc8
   148e0:	ldr	r0, [sp, #24]
   148e4:	vstr	d16, [r0, #16]
   148e8:	sub	r0, r6, r1
   148ec:	cmp	r0, #2
   148f0:	bge	14ca0 <main@@Base+0x19c0>
   148f4:	b	14cd0 <main@@Base+0x19f0>
   148f8:	ldr	r4, [sp, #52]	; 0x34
   148fc:	bne	14910 <main@@Base+0x1630>
   14900:	mov	r7, r1
   14904:	ldrb	r0, [r7, #1]!
   14908:	cmp	r0, #32
   1490c:	bhi	14920 <main@@Base+0x1640>
   14910:	ldr	r0, [sp, #44]	; 0x2c
   14914:	mov	r2, r4
   14918:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1491c:	mov	r7, r0
   14920:	cmp	r7, r4
   14924:	beq	14970 <main@@Base+0x1690>
   14928:	ldrb	r0, [r7]
   1492c:	cmp	r0, #58	; 0x3a
   14930:	bne	14970 <main@@Base+0x1690>
   14934:	ldr	r6, [sp, #52]	; 0x34
   14938:	ldr	sl, [sp, #44]	; 0x2c
   1493c:	add	r1, r7, #1
   14940:	sub	r0, r6, r1
   14944:	cmp	r0, #2
   14948:	blt	14b34 <main@@Base+0x1854>
   1494c:	ldrb	r0, [r1]
   14950:	cmp	r0, #32
   14954:	bls	14b1c <main@@Base+0x183c>
   14958:	ldr	r6, [sp, #52]	; 0x34
   1495c:	ldr	sl, [sp, #44]	; 0x2c
   14960:	mov	r7, r1
   14964:	cmp	r8, r7
   14968:	bne	14b4c <main@@Base+0x186c>
   1496c:	b	14c7c <main@@Base+0x199c>
   14970:	ldr	sl, [sp, #44]	; 0x2c
   14974:	ldr	r6, [sp, #52]	; 0x34
   14978:	mov	r1, r7
   1497c:	mov	r3, #4
   14980:	mov	r0, sl
   14984:	mov	r2, r6
   14988:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1498c:	b	14b40 <main@@Base+0x1860>
   14990:	ldr	r4, [sp, #52]	; 0x34
   14994:	bne	149a8 <main@@Base+0x16c8>
   14998:	mov	r7, r1
   1499c:	ldrb	r0, [r7, #1]!
   149a0:	cmp	r0, #32
   149a4:	bhi	149b8 <main@@Base+0x16d8>
   149a8:	ldr	r0, [sp, #44]	; 0x2c
   149ac:	mov	r2, r4
   149b0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   149b4:	mov	r7, r0
   149b8:	cmp	r7, r4
   149bc:	beq	14a08 <main@@Base+0x1728>
   149c0:	ldrb	r0, [r7]
   149c4:	cmp	r0, #58	; 0x3a
   149c8:	bne	14a08 <main@@Base+0x1728>
   149cc:	ldr	r6, [sp, #52]	; 0x34
   149d0:	ldr	sl, [sp, #44]	; 0x2c
   149d4:	add	r1, r7, #1
   149d8:	sub	r0, r6, r1
   149dc:	cmp	r0, #2
   149e0:	blt	14be4 <main@@Base+0x1904>
   149e4:	ldrb	r0, [r1]
   149e8:	cmp	r0, #32
   149ec:	bls	14bcc <main@@Base+0x18ec>
   149f0:	ldr	r6, [sp, #52]	; 0x34
   149f4:	ldr	sl, [sp, #44]	; 0x2c
   149f8:	mov	r7, r1
   149fc:	cmp	r8, r7
   14a00:	bne	14bfc <main@@Base+0x191c>
   14a04:	b	14c7c <main@@Base+0x199c>
   14a08:	ldr	sl, [sp, #44]	; 0x2c
   14a0c:	ldr	r6, [sp, #52]	; 0x34
   14a10:	mov	r1, r7
   14a14:	mov	r3, #4
   14a18:	mov	r0, sl
   14a1c:	mov	r2, r6
   14a20:	bl	30170 <flatcc_json_parser_set_error@@Base>
   14a24:	b	14bf0 <main@@Base+0x1910>
   14a28:	ldr	r6, [sp, #52]	; 0x34
   14a2c:	ldr	sl, [sp, #44]	; 0x2c
   14a30:	bne	14a40 <main@@Base+0x1760>
   14a34:	ldrb	r0, [r1, #2]!
   14a38:	cmp	r0, #32
   14a3c:	bhi	14a54 <main@@Base+0x1774>
   14a40:	mov	r1, r2
   14a44:	mov	r0, sl
   14a48:	mov	r2, r6
   14a4c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14a50:	mov	r1, r0
   14a54:	cmp	r8, r1
   14a58:	beq	14c7c <main@@Base+0x199c>
   14a5c:	ldr	r3, [sp, #20]
   14a60:	mov	r0, sl
   14a64:	mov	r2, r6
   14a68:	bl	1fa28 <main@@Base+0xc748>
   14a6c:	b	14c8c <main@@Base+0x19ac>
   14a70:	ldr	r6, [sp, #52]	; 0x34
   14a74:	ldr	sl, [sp, #44]	; 0x2c
   14a78:	bne	14a88 <main@@Base+0x17a8>
   14a7c:	ldrb	r0, [r7, #2]!
   14a80:	cmp	r0, #32
   14a84:	bhi	14a98 <main@@Base+0x17b8>
   14a88:	mov	r0, sl
   14a8c:	mov	r2, r6
   14a90:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14a94:	mov	r7, r0
   14a98:	cmp	r8, r7
   14a9c:	beq	14c7c <main@@Base+0x199c>
   14aa0:	mov	r0, #0
   14aa4:	mov	r1, r7
   14aa8:	mov	r2, r6
   14aac:	sub	r3, fp, #56	; 0x38
   14ab0:	str	r0, [fp, #-56]	; 0xffffffc8
   14ab4:	mov	r0, sl
   14ab8:	bl	32578 <flatcc_json_parser_float@@Base>
   14abc:	ldr	r5, [sp, #48]	; 0x30
   14ac0:	mov	r1, r0
   14ac4:	cmp	r7, r0
   14ac8:	bne	14b00 <main@@Base+0x1820>
   14acc:	sub	r0, fp, #56	; 0x38
   14ad0:	mov	r1, r7
   14ad4:	mov	r2, r6
   14ad8:	str	r0, [sp]
   14adc:	movw	r0, #33152	; 0x8180
   14ae0:	movt	r0, #4
   14ae4:	add	r3, r0, #12
   14ae8:	mov	r0, sl
   14aec:	bl	23dac <main@@Base+0x10acc>
   14af0:	mov	r1, r0
   14af4:	cmp	r0, r7
   14af8:	cmpne	r1, r6
   14afc:	beq	14d84 <main@@Base+0x1aa4>
   14b00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b04:	ldr	r2, [sp, #24]
   14b08:	str	r0, [r2]
   14b0c:	sub	r0, r6, r1
   14b10:	cmp	r0, #2
   14b14:	bge	14ca0 <main@@Base+0x19c0>
   14b18:	b	14cd0 <main@@Base+0x19f0>
   14b1c:	ldr	r6, [sp, #52]	; 0x34
   14b20:	ldr	sl, [sp, #44]	; 0x2c
   14b24:	bne	14b34 <main@@Base+0x1854>
   14b28:	ldrb	r0, [r7, #2]!
   14b2c:	cmp	r0, #32
   14b30:	bhi	14b44 <main@@Base+0x1864>
   14b34:	mov	r0, sl
   14b38:	mov	r2, r6
   14b3c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14b40:	mov	r7, r0
   14b44:	cmp	r8, r7
   14b48:	beq	14c7c <main@@Base+0x199c>
   14b4c:	mov	r0, #0
   14b50:	mov	r1, r7
   14b54:	mov	r2, r6
   14b58:	sub	r3, fp, #56	; 0x38
   14b5c:	str	r0, [fp, #-56]	; 0xffffffc8
   14b60:	mov	r0, sl
   14b64:	bl	32578 <flatcc_json_parser_float@@Base>
   14b68:	mov	r1, r0
   14b6c:	cmp	r7, r0
   14b70:	bne	14bac <main@@Base+0x18cc>
   14b74:	sub	r0, fp, #56	; 0x38
   14b78:	mov	r1, r7
   14b7c:	mov	r2, r6
   14b80:	str	r0, [sp]
   14b84:	movw	r0, #33152	; 0x8180
   14b88:	movt	r0, #4
   14b8c:	add	r3, r0, #24
   14b90:	mov	r0, sl
   14b94:	bl	23dac <main@@Base+0x10acc>
   14b98:	mov	r1, r0
   14b9c:	cmp	r0, r7
   14ba0:	cmpne	r1, r6
   14ba4:	beq	14d84 <main@@Base+0x1aa4>
   14ba8:	ldr	sl, [sp, #44]	; 0x2c
   14bac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14bb0:	ldr	r2, [sp, #24]
   14bb4:	str	r0, [r2, #8]
   14bb8:	ldr	r5, [sp, #48]	; 0x30
   14bbc:	sub	r0, r6, r1
   14bc0:	cmp	r0, #2
   14bc4:	bge	14ca0 <main@@Base+0x19c0>
   14bc8:	b	14cd0 <main@@Base+0x19f0>
   14bcc:	ldr	r6, [sp, #52]	; 0x34
   14bd0:	ldr	sl, [sp, #44]	; 0x2c
   14bd4:	bne	14be4 <main@@Base+0x1904>
   14bd8:	ldrb	r0, [r7, #2]!
   14bdc:	cmp	r0, #32
   14be0:	bhi	14bf4 <main@@Base+0x1914>
   14be4:	mov	r0, sl
   14be8:	mov	r2, r6
   14bec:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14bf0:	mov	r7, r0
   14bf4:	cmp	r8, r7
   14bf8:	beq	14c7c <main@@Base+0x199c>
   14bfc:	mov	r0, #0
   14c00:	mov	r1, r7
   14c04:	mov	r2, r6
   14c08:	sub	r3, fp, #56	; 0x38
   14c0c:	str	r0, [fp, #-56]	; 0xffffffc8
   14c10:	mov	r0, sl
   14c14:	bl	32578 <flatcc_json_parser_float@@Base>
   14c18:	mov	r1, r0
   14c1c:	cmp	r7, r0
   14c20:	bne	14c5c <main@@Base+0x197c>
   14c24:	sub	r0, fp, #56	; 0x38
   14c28:	mov	r1, r7
   14c2c:	mov	r2, r6
   14c30:	str	r0, [sp]
   14c34:	movw	r0, #33152	; 0x8180
   14c38:	movt	r0, #4
   14c3c:	add	r3, r0, #36	; 0x24
   14c40:	mov	r0, sl
   14c44:	bl	23dac <main@@Base+0x10acc>
   14c48:	mov	r1, r0
   14c4c:	cmp	r0, r7
   14c50:	cmpne	r1, r6
   14c54:	beq	14d84 <main@@Base+0x1aa4>
   14c58:	ldr	sl, [sp, #44]	; 0x2c
   14c5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c60:	ldr	r2, [sp, #24]
   14c64:	str	r0, [r2, #4]
   14c68:	ldr	r5, [sp, #48]	; 0x30
   14c6c:	sub	r0, r6, r1
   14c70:	cmp	r0, #2
   14c74:	blt	14cd0 <main@@Base+0x19f0>
   14c78:	b	14ca0 <main@@Base+0x19c0>
   14c7c:	mov	r0, sl
   14c80:	mov	r1, r8
   14c84:	mov	r2, r6
   14c88:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   14c8c:	mov	r1, r0
   14c90:	ldr	r5, [sp, #48]	; 0x30
   14c94:	sub	r0, r6, r1
   14c98:	cmp	r0, #2
   14c9c:	blt	14cd0 <main@@Base+0x19f0>
   14ca0:	ldrb	r0, [r1]
   14ca4:	cmp	r0, #32
   14ca8:	bls	14cbc <main@@Base+0x19dc>
   14cac:	mov	r2, r1
   14cb0:	cmp	r2, r6
   14cb4:	bne	14ce8 <main@@Base+0x1a08>
   14cb8:	b	14da0 <main@@Base+0x1ac0>
   14cbc:	bne	14cd0 <main@@Base+0x19f0>
   14cc0:	mov	r2, r1
   14cc4:	ldrb	r0, [r2, #1]!
   14cc8:	cmp	r0, #32
   14ccc:	bhi	14ce0 <main@@Base+0x1a00>
   14cd0:	mov	r0, sl
   14cd4:	mov	r2, r6
   14cd8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14cdc:	mov	r2, r0
   14ce0:	cmp	r2, r6
   14ce4:	beq	14da0 <main@@Base+0x1ac0>
   14ce8:	ldrb	r0, [r2]
   14cec:	cmp	r0, #44	; 0x2c
   14cf0:	bne	14db4 <main@@Base+0x1ad4>
   14cf4:	add	r1, r2, #1
   14cf8:	sub	r0, r6, r1
   14cfc:	cmp	r0, #2
   14d00:	blt	14d30 <main@@Base+0x1a50>
   14d04:	ldrb	r0, [r1]
   14d08:	cmp	r0, #32
   14d0c:	bls	14d20 <main@@Base+0x1a40>
   14d10:	mov	r2, r1
   14d14:	cmp	r2, r6
   14d18:	bne	14d48 <main@@Base+0x1a68>
   14d1c:	b	14de8 <main@@Base+0x1b08>
   14d20:	bne	14d30 <main@@Base+0x1a50>
   14d24:	ldrb	r0, [r2, #2]!
   14d28:	cmp	r0, #32
   14d2c:	bhi	14d40 <main@@Base+0x1a60>
   14d30:	mov	r0, sl
   14d34:	mov	r2, r6
   14d38:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14d3c:	mov	r2, r0
   14d40:	cmp	r2, r6
   14d44:	beq	14de8 <main@@Base+0x1b08>
   14d48:	ldrb	r0, [r2]
   14d4c:	cmp	r0, #125	; 0x7d
   14d50:	bne	13fa8 <main@@Base+0xcc8>
   14d54:	add	r1, r2, #1
   14d58:	sub	r0, r6, r1
   14d5c:	cmp	r0, #2
   14d60:	blt	17f5c <main@@Base+0x4c7c>
   14d64:	ldrb	r0, [r1]
   14d68:	cmp	r0, #32
   14d6c:	bls	169a4 <main@@Base+0x36c4>
   14d70:	mov	r4, r1
   14d74:	sub	r0, r6, r4
   14d78:	cmp	r0, #2
   14d7c:	bge	1db38 <main@@Base+0xa858>
   14d80:	b	15d38 <main@@Base+0x2a58>
   14d84:	ldr	sl, [sp, #44]	; 0x2c
   14d88:	ldr	r6, [sp, #52]	; 0x34
   14d8c:	mov	r3, #33	; 0x21
   14d90:	mov	r0, sl
   14d94:	mov	r2, r6
   14d98:	bl	30170 <flatcc_json_parser_set_error@@Base>
   14d9c:	b	1db24 <main@@Base+0xa844>
   14da0:	mov	r4, r6
   14da4:	sub	r0, r6, r4
   14da8:	cmp	r0, #2
   14dac:	bge	1db38 <main@@Base+0xa858>
   14db0:	b	15d38 <main@@Base+0x2a58>
   14db4:	cmp	r0, #125	; 0x7d
   14db8:	bne	1590c <main@@Base+0x262c>
   14dbc:	add	r1, r2, #1
   14dc0:	sub	r0, r6, r1
   14dc4:	cmp	r0, #2
   14dc8:	blt	17f5c <main@@Base+0x4c7c>
   14dcc:	ldrb	r0, [r1]
   14dd0:	cmp	r0, #32
   14dd4:	bls	17f3c <main@@Base+0x4c5c>
   14dd8:	ldr	r6, [sp, #52]	; 0x34
   14ddc:	ldr	sl, [sp, #44]	; 0x2c
   14de0:	mov	r4, r1
   14de4:	b	1db28 <main@@Base+0xa848>
   14de8:	mov	r0, sl
   14dec:	mov	r1, r6
   14df0:	b	15914 <main@@Base+0x2634>
   14df4:	bne	14e04 <main@@Base+0x1b24>
   14df8:	ldrb	r0, [r7, #2]!
   14dfc:	cmp	r0, #32
   14e00:	bhi	14e14 <main@@Base+0x1b34>
   14e04:	mov	r0, sl
   14e08:	mov	r2, r6
   14e0c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14e10:	mov	r7, r0
   14e14:	cmp	r8, r7
   14e18:	beq	1db14 <main@@Base+0xa834>
   14e1c:	mov	r0, #0
   14e20:	mov	r1, r7
   14e24:	mov	r2, r6
   14e28:	sub	r3, fp, #56	; 0x38
   14e2c:	str	r0, [fp, #-56]	; 0xffffffc8
   14e30:	mov	r0, sl
   14e34:	bl	32578 <flatcc_json_parser_float@@Base>
   14e38:	ldr	r5, [sp, #48]	; 0x30
   14e3c:	mov	r4, r0
   14e40:	cmp	r7, r0
   14e44:	bne	14e7c <main@@Base+0x1b9c>
   14e48:	sub	r0, fp, #56	; 0x38
   14e4c:	mov	r1, r7
   14e50:	mov	r2, r6
   14e54:	str	r0, [sp]
   14e58:	movw	r0, #32912	; 0x8090
   14e5c:	movt	r0, #4
   14e60:	add	r3, r0, #72	; 0x48
   14e64:	mov	r0, sl
   14e68:	bl	23dac <main@@Base+0x10acc>
   14e6c:	mov	r4, r0
   14e70:	cmp	r0, r7
   14e74:	cmpne	r4, r6
   14e78:	beq	13398 <main@@Base+0xb8>
   14e7c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   14e80:	vcmp.f32	s0, s16
   14e84:	vmrs	APSR_nzcv, fpscr
   14e88:	bne	14e98 <main@@Base+0x1bb8>
   14e8c:	ldrb	r0, [sl, #8]
   14e90:	tst	r0, #2
   14e94:	beq	1db2c <main@@Base+0xa84c>
   14e98:	ldr	r0, [sl]
   14e9c:	mov	r1, #26
   14ea0:	b	1c814 <main@@Base+0x9534>
   14ea4:	bne	14eb8 <main@@Base+0x1bd8>
   14ea8:	mov	r4, r1
   14eac:	ldrb	r0, [r4, #1]!
   14eb0:	cmp	r0, #32
   14eb4:	bhi	14ec8 <main@@Base+0x1be8>
   14eb8:	mov	r0, sl
   14ebc:	mov	r2, r6
   14ec0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14ec4:	mov	r4, r0
   14ec8:	cmp	r4, r6
   14ecc:	beq	14f08 <main@@Base+0x1c28>
   14ed0:	ldrb	r0, [r4]
   14ed4:	cmp	r0, #58	; 0x3a
   14ed8:	bne	14f08 <main@@Base+0x1c28>
   14edc:	add	r1, r4, #1
   14ee0:	sub	r0, r6, r1
   14ee4:	cmp	r0, #2
   14ee8:	blt	164f8 <main@@Base+0x3218>
   14eec:	ldrb	r0, [r1]
   14ef0:	cmp	r0, #32
   14ef4:	bls	164e8 <main@@Base+0x3208>
   14ef8:	mov	r4, r1
   14efc:	cmp	r7, r4
   14f00:	bne	16510 <main@@Base+0x3230>
   14f04:	b	1882c <main@@Base+0x554c>
   14f08:	mov	r0, sl
   14f0c:	mov	r1, r4
   14f10:	mov	r2, r6
   14f14:	mov	r3, #4
   14f18:	bl	30170 <flatcc_json_parser_set_error@@Base>
   14f1c:	b	16504 <main@@Base+0x3224>
   14f20:	bne	14f34 <main@@Base+0x1c54>
   14f24:	mov	r4, r1
   14f28:	ldrb	r0, [r4, #1]!
   14f2c:	cmp	r0, #32
   14f30:	bhi	14f44 <main@@Base+0x1c64>
   14f34:	mov	r0, sl
   14f38:	mov	r2, r6
   14f3c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14f40:	mov	r4, r0
   14f44:	cmp	r4, r6
   14f48:	beq	14f84 <main@@Base+0x1ca4>
   14f4c:	ldrb	r0, [r4]
   14f50:	cmp	r0, #58	; 0x3a
   14f54:	bne	14f84 <main@@Base+0x1ca4>
   14f58:	add	r1, r4, #1
   14f5c:	sub	r0, r6, r1
   14f60:	cmp	r0, #2
   14f64:	blt	165ec <main@@Base+0x330c>
   14f68:	ldrb	r0, [r1]
   14f6c:	cmp	r0, #32
   14f70:	bls	165dc <main@@Base+0x32fc>
   14f74:	mov	r4, r1
   14f78:	cmp	r7, r4
   14f7c:	bne	16604 <main@@Base+0x3324>
   14f80:	b	1882c <main@@Base+0x554c>
   14f84:	mov	r0, sl
   14f88:	mov	r1, r4
   14f8c:	mov	r2, r6
   14f90:	mov	r3, #4
   14f94:	bl	30170 <flatcc_json_parser_set_error@@Base>
   14f98:	b	165f8 <main@@Base+0x3318>
   14f9c:	bne	14fb0 <main@@Base+0x1cd0>
   14fa0:	mov	r7, r1
   14fa4:	ldrb	r0, [r7, #1]!
   14fa8:	cmp	r0, #32
   14fac:	bhi	14fc0 <main@@Base+0x1ce0>
   14fb0:	mov	r0, sl
   14fb4:	mov	r2, r6
   14fb8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   14fbc:	mov	r7, r0
   14fc0:	cmp	r7, r6
   14fc4:	beq	15084 <main@@Base+0x1da4>
   14fc8:	ldrb	r0, [r7]
   14fcc:	cmp	r0, #58	; 0x3a
   14fd0:	bne	15084 <main@@Base+0x1da4>
   14fd4:	add	r1, r7, #1
   14fd8:	sub	r0, r6, r1
   14fdc:	cmp	r0, #2
   14fe0:	blt	166c8 <main@@Base+0x33e8>
   14fe4:	ldrb	r0, [r1]
   14fe8:	cmp	r0, #32
   14fec:	bls	166b0 <main@@Base+0x33d0>
   14ff0:	ldr	r6, [sp, #52]	; 0x34
   14ff4:	ldr	sl, [sp, #44]	; 0x2c
   14ff8:	mov	r7, r1
   14ffc:	cmp	r9, r7
   15000:	bne	166e0 <main@@Base+0x3400>
   15004:	add	r4, r8, #16
   15008:	mov	r1, #8
   1500c:	mov	r2, #-268435456	; 0xf0000000
   15010:	sub	r0, r6, r4
   15014:	cmp	r0, #8
   15018:	movcc	r1, r0
   1501c:	add	r1, r2, r1, lsl #28
   15020:	asr	r1, r1, #28
   15024:	cmp	r1, #0
   15028:	blt	19490 <main@@Base+0x61b0>
   1502c:	ldrb	r1, [r4]
   15030:	cmp	r1, #97	; 0x61
   15034:	bne	19490 <main@@Base+0x61b0>
   15038:	cmp	r0, #2
   1503c:	blt	19490 <main@@Base+0x61b0>
   15040:	ldr	r2, [sp, #40]	; 0x28
   15044:	mov	r1, r8
   15048:	ldrb	r0, [r1, #17]!
   1504c:	ldr	r2, [r2]
   15050:	cmp	r2, #0
   15054:	beq	153d0 <main@@Base+0x20f0>
   15058:	cmp	r0, #33	; 0x21
   1505c:	bcc	15068 <main@@Base+0x1d88>
   15060:	cmp	r0, #58	; 0x3a
   15064:	bne	19490 <main@@Base+0x61b0>
   15068:	ldr	r0, [sp, #40]	; 0x28
   1506c:	mov	r2, #0
   15070:	str	r2, [r0]
   15074:	sub	r0, r6, r1
   15078:	cmp	r0, #2
   1507c:	bge	153e8 <main@@Base+0x2108>
   15080:	b	16a98 <main@@Base+0x37b8>
   15084:	mov	r0, sl
   15088:	mov	r1, r7
   1508c:	mov	r2, r6
   15090:	mov	r3, #4
   15094:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15098:	b	166d4 <main@@Base+0x33f4>
   1509c:	bne	150b0 <main@@Base+0x1dd0>
   150a0:	mov	r7, r1
   150a4:	ldrb	r0, [r7, #1]!
   150a8:	cmp	r0, #32
   150ac:	bhi	150c0 <main@@Base+0x1de0>
   150b0:	mov	r0, sl
   150b4:	mov	r2, r6
   150b8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   150bc:	mov	r7, r0
   150c0:	cmp	r7, r6
   150c4:	beq	15184 <main@@Base+0x1ea4>
   150c8:	ldrb	r0, [r7]
   150cc:	cmp	r0, #58	; 0x3a
   150d0:	bne	15184 <main@@Base+0x1ea4>
   150d4:	add	r1, r7, #1
   150d8:	sub	r0, r6, r1
   150dc:	cmp	r0, #2
   150e0:	blt	16828 <main@@Base+0x3548>
   150e4:	ldrb	r0, [r1]
   150e8:	cmp	r0, #32
   150ec:	bls	16810 <main@@Base+0x3530>
   150f0:	ldr	r6, [sp, #52]	; 0x34
   150f4:	ldr	sl, [sp, #44]	; 0x2c
   150f8:	mov	r7, r1
   150fc:	cmp	r9, r7
   15100:	bne	16840 <main@@Base+0x3560>
   15104:	add	r4, r8, #16
   15108:	mov	r1, #8
   1510c:	mov	r2, #-268435456	; 0xf0000000
   15110:	sub	r0, r6, r4
   15114:	cmp	r0, #8
   15118:	movcc	r1, r0
   1511c:	add	r1, r2, r1, lsl #28
   15120:	asr	r1, r1, #28
   15124:	cmp	r1, #0
   15128:	blt	19490 <main@@Base+0x61b0>
   1512c:	ldrb	r1, [r4]
   15130:	cmp	r1, #97	; 0x61
   15134:	bne	19490 <main@@Base+0x61b0>
   15138:	cmp	r0, #2
   1513c:	blt	19490 <main@@Base+0x61b0>
   15140:	ldr	r2, [sp, #40]	; 0x28
   15144:	mov	r1, r8
   15148:	ldrb	r0, [r1, #17]!
   1514c:	ldr	r2, [r2]
   15150:	cmp	r2, #0
   15154:	beq	1540c <main@@Base+0x212c>
   15158:	cmp	r0, #33	; 0x21
   1515c:	bcc	15168 <main@@Base+0x1e88>
   15160:	cmp	r0, #58	; 0x3a
   15164:	bne	19490 <main@@Base+0x61b0>
   15168:	ldr	r0, [sp, #40]	; 0x28
   1516c:	mov	r2, #0
   15170:	str	r2, [r0]
   15174:	sub	r0, r6, r1
   15178:	cmp	r0, #2
   1517c:	bge	15424 <main@@Base+0x2144>
   15180:	b	16b24 <main@@Base+0x3844>
   15184:	mov	r0, sl
   15188:	mov	r1, r7
   1518c:	mov	r2, r6
   15190:	mov	r3, #4
   15194:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15198:	b	16834 <main@@Base+0x3554>
   1519c:	mov	r0, sl
   151a0:	mov	r1, r4
   151a4:	mov	r2, r6
   151a8:	mov	r3, #9
   151ac:	bl	30170 <flatcc_json_parser_set_error@@Base>
   151b0:	b	135b4 <main@@Base+0x2d4>
   151b4:	bne	151c4 <main@@Base+0x1ee4>
   151b8:	ldrb	r0, [r7, #2]!
   151bc:	cmp	r0, #32
   151c0:	bhi	151d4 <main@@Base+0x1ef4>
   151c4:	mov	r0, sl
   151c8:	mov	r2, r6
   151cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   151d0:	mov	r7, r0
   151d4:	cmp	r9, r7
   151d8:	beq	1ce78 <main@@Base+0x9b98>
   151dc:	mov	r2, r6
   151e0:	mov	r6, #0
   151e4:	cmp	r7, r2
   151e8:	str	r6, [fp, #-52]	; 0xffffffcc
   151ec:	str	r6, [fp, #-56]	; 0xffffffc8
   151f0:	str	r6, [fp, #-60]	; 0xffffffc4
   151f4:	str	r6, [sp, #64]	; 0x40
   151f8:	beq	1525c <main@@Base+0x1f7c>
   151fc:	sub	r0, fp, #56	; 0x38
   15200:	mov	r1, r7
   15204:	add	r3, sp, #64	; 0x40
   15208:	mov	r8, r2
   1520c:	str	r0, [sp]
   15210:	mov	r0, sl
   15214:	bl	326c4 <flatcc_json_parser_integer@@Base>
   15218:	ldr	r5, [sp, #48]	; 0x30
   1521c:	cmp	r0, r7
   15220:	beq	15274 <main@@Base+0x1f94>
   15224:	ldr	r2, [sp, #64]	; 0x40
   15228:	mov	r4, r0
   1522c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15230:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15234:	cmp	r2, #0
   15238:	beq	15284 <main@@Base+0x1fa4>
   1523c:	subs	r2, r0, #-2147483647	; 0x80000001
   15240:	sbcs	r1, r1, #0
   15244:	bcc	152b4 <main@@Base+0x1fd4>
   15248:	mov	r0, sl
   1524c:	mov	r1, r4
   15250:	mov	r2, r8
   15254:	mov	r3, #8
   15258:	b	152a0 <main@@Base+0x1fc0>
   1525c:	ldr	r5, [sp, #48]	; 0x30
   15260:	mov	r8, r2
   15264:	mov	r4, r2
   15268:	cmp	r7, r4
   1526c:	bne	15b6c <main@@Base+0x288c>
   15270:	b	15b2c <main@@Base+0x284c>
   15274:	mov	r4, r7
   15278:	cmp	r7, r4
   1527c:	bne	15b6c <main@@Base+0x288c>
   15280:	b	15b2c <main@@Base+0x284c>
   15284:	subs	r2, r0, #-2147483648	; 0x80000000
   15288:	sbcs	r1, r1, #0
   1528c:	bcc	15b1c <main@@Base+0x283c>
   15290:	mov	r0, sl
   15294:	mov	r1, r4
   15298:	mov	r2, r8
   1529c:	mov	r3, #7
   152a0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   152a4:	mov	r4, r0
   152a8:	cmp	r7, r4
   152ac:	bne	15b6c <main@@Base+0x288c>
   152b0:	b	15b2c <main@@Base+0x284c>
   152b4:	rsb	r6, r0, #0
   152b8:	str	r6, [fp, #-60]	; 0xffffffc4
   152bc:	cmp	r7, r4
   152c0:	bne	15b6c <main@@Base+0x288c>
   152c4:	b	15b2c <main@@Base+0x284c>
   152c8:	bne	152dc <main@@Base+0x1ffc>
   152cc:	mov	r4, r1
   152d0:	ldrb	r0, [r4, #1]!
   152d4:	cmp	r0, #32
   152d8:	bhi	152ec <main@@Base+0x200c>
   152dc:	mov	r0, sl
   152e0:	mov	r2, r6
   152e4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   152e8:	mov	r4, r0
   152ec:	cmp	r4, r6
   152f0:	beq	15334 <main@@Base+0x2054>
   152f4:	ldrb	r0, [r4]
   152f8:	cmp	r0, #58	; 0x3a
   152fc:	bne	15334 <main@@Base+0x2054>
   15300:	add	r1, r4, #1
   15304:	sub	r0, r6, r1
   15308:	cmp	r0, #2
   1530c:	blt	169c4 <main@@Base+0x36e4>
   15310:	ldrb	r0, [r1]
   15314:	cmp	r0, #32
   15318:	bls	169ac <main@@Base+0x36cc>
   1531c:	ldr	r6, [sp, #52]	; 0x34
   15320:	ldr	sl, [sp, #44]	; 0x2c
   15324:	mov	r4, r1
   15328:	cmp	r7, r4
   1532c:	bne	169dc <main@@Base+0x36fc>
   15330:	b	1882c <main@@Base+0x554c>
   15334:	mov	r0, sl
   15338:	mov	r1, r4
   1533c:	mov	r2, r6
   15340:	mov	r3, #4
   15344:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15348:	b	169d0 <main@@Base+0x36f0>
   1534c:	bne	15360 <main@@Base+0x2080>
   15350:	mov	r7, r1
   15354:	ldrb	r0, [r7, #1]!
   15358:	cmp	r0, #32
   1535c:	bhi	15370 <main@@Base+0x2090>
   15360:	mov	r0, sl
   15364:	mov	r2, r6
   15368:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1536c:	mov	r7, r0
   15370:	cmp	r7, r6
   15374:	beq	153b8 <main@@Base+0x20d8>
   15378:	ldrb	r0, [r7]
   1537c:	cmp	r0, #58	; 0x3a
   15380:	bne	153b8 <main@@Base+0x20d8>
   15384:	add	r1, r7, #1
   15388:	sub	r0, r6, r1
   1538c:	cmp	r0, #2
   15390:	blt	16bac <main@@Base+0x38cc>
   15394:	ldrb	r0, [r1]
   15398:	cmp	r0, #32
   1539c:	bls	16b94 <main@@Base+0x38b4>
   153a0:	ldr	r6, [sp, #52]	; 0x34
   153a4:	ldr	sl, [sp, #44]	; 0x2c
   153a8:	mov	r7, r1
   153ac:	cmp	r4, r7
   153b0:	bne	16bc4 <main@@Base+0x38e4>
   153b4:	b	19490 <main@@Base+0x61b0>
   153b8:	mov	r0, sl
   153bc:	mov	r1, r7
   153c0:	mov	r2, r6
   153c4:	mov	r3, #4
   153c8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   153cc:	b	16bb8 <main@@Base+0x38d8>
   153d0:	cmp	r0, #34	; 0x22
   153d4:	bne	19490 <main@@Base+0x61b0>
   153d8:	add	r1, r8, #18
   153dc:	sub	r0, r6, r1
   153e0:	cmp	r0, #2
   153e4:	blt	16a98 <main@@Base+0x37b8>
   153e8:	ldrb	r0, [r1]
   153ec:	cmp	r0, #32
   153f0:	bls	16a7c <main@@Base+0x379c>
   153f4:	ldr	r6, [sp, #52]	; 0x34
   153f8:	ldr	sl, [sp, #44]	; 0x2c
   153fc:	mov	r7, r1
   15400:	cmp	r7, r6
   15404:	bne	16ab0 <main@@Base+0x37d0>
   15408:	b	16af0 <main@@Base+0x3810>
   1540c:	cmp	r0, #34	; 0x22
   15410:	bne	19490 <main@@Base+0x61b0>
   15414:	add	r1, r8, #18
   15418:	sub	r0, r6, r1
   1541c:	cmp	r0, #2
   15420:	blt	16b24 <main@@Base+0x3844>
   15424:	ldrb	r0, [r1]
   15428:	cmp	r0, #32
   1542c:	bls	16b08 <main@@Base+0x3828>
   15430:	ldr	r6, [sp, #52]	; 0x34
   15434:	ldr	sl, [sp, #44]	; 0x2c
   15438:	mov	r7, r1
   1543c:	cmp	r7, r6
   15440:	bne	16b3c <main@@Base+0x385c>
   15444:	b	16b7c <main@@Base+0x389c>
   15448:	bne	15458 <main@@Base+0x2178>
   1544c:	ldrb	r0, [r4, #2]!
   15450:	cmp	r0, #32
   15454:	bhi	15468 <main@@Base+0x2188>
   15458:	mov	r0, sl
   1545c:	mov	r2, r6
   15460:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15464:	mov	r4, r0
   15468:	cmp	r4, r6
   1546c:	beq	1549c <main@@Base+0x21bc>
   15470:	ldrb	r0, [r4]
   15474:	cmp	r0, #93	; 0x5d
   15478:	bne	15498 <main@@Base+0x21b8>
   1547c:	add	r1, r4, #1
   15480:	mov	r6, r5
   15484:	sub	r0, r5, r1
   15488:	cmp	r0, #2
   1548c:	ldr	r5, [sp, #48]	; 0x30
   15490:	bge	1628c <main@@Base+0x2fac>
   15494:	b	162c8 <main@@Base+0x2fe8>
   15498:	mov	r6, r4
   1549c:	mov	r0, #0
   154a0:	mov	r1, #1
   154a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   154a8:	ldr	r0, [sl]
   154ac:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   154b0:	cmp	r0, #0
   154b4:	beq	1dcd4 <main@@Base+0xa9f4>
   154b8:	mov	r4, r6
   154bc:	mov	r7, r0
   154c0:	mov	r6, r5
   154c4:	sub	r0, r6, r4
   154c8:	cmp	r0, #4
   154cc:	blt	15508 <main@@Base+0x2228>
   154d0:	ldr	r1, [r4]
   154d4:	movw	r2, #29300	; 0x7274
   154d8:	movt	r2, #25973	; 0x6575
   154dc:	cmp	r1, r2
   154e0:	beq	1556c <main@@Base+0x228c>
   154e4:	cmp	r0, #5
   154e8:	blt	15508 <main@@Base+0x2228>
   154ec:	movw	r1, #20272	; 0x4f30
   154f0:	mov	r0, r4
   154f4:	mov	r2, #5
   154f8:	movt	r1, #3
   154fc:	bl	12ac8 <memcmp@plt>
   15500:	cmp	r0, #0
   15504:	beq	156f4 <main@@Base+0x2414>
   15508:	mov	r2, r6
   1550c:	mov	r6, #0
   15510:	cmp	r4, r2
   15514:	str	r6, [fp, #-52]	; 0xffffffcc
   15518:	str	r6, [fp, #-56]	; 0xffffffc8
   1551c:	str	r6, [sp, #64]	; 0x40
   15520:	beq	15564 <main@@Base+0x2284>
   15524:	sub	r0, fp, #56	; 0x38
   15528:	mov	r1, r4
   1552c:	add	r3, sp, #64	; 0x40
   15530:	str	r0, [sp]
   15534:	mov	r0, sl
   15538:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1553c:	cmp	r0, r4
   15540:	beq	15584 <main@@Base+0x22a4>
   15544:	mov	r1, r0
   15548:	ldr	r0, [sp, #64]	; 0x40
   1554c:	cmp	r0, #0
   15550:	beq	1558c <main@@Base+0x22ac>
   15554:	mov	r0, sl
   15558:	mov	r2, r5
   1555c:	mov	r3, #8
   15560:	b	155ac <main@@Base+0x22cc>
   15564:	mov	r1, r2
   15568:	b	155b4 <main@@Base+0x22d4>
   1556c:	mov	r0, #1
   15570:	add	r1, r4, #4
   15574:	strb	r0, [fp, #-60]	; 0xffffffc4
   15578:	cmp	r4, r1
   1557c:	bne	1560c <main@@Base+0x232c>
   15580:	b	155d0 <main@@Base+0x22f0>
   15584:	mov	r1, r4
   15588:	b	155b4 <main@@Base+0x22d4>
   1558c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15590:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15594:	subs	r3, r0, #256	; 0x100
   15598:	sbcs	r2, r2, #0
   1559c:	bcc	1570c <main@@Base+0x242c>
   155a0:	mov	r0, sl
   155a4:	mov	r2, r5
   155a8:	mov	r3, #7
   155ac:	bl	30170 <flatcc_json_parser_set_error@@Base>
   155b0:	mov	r1, r0
   155b4:	uxtb	r0, r6
   155b8:	mov	r6, r5
   155bc:	cmp	r0, #0
   155c0:	movwne	r0, #1
   155c4:	strb	r0, [fp, #-60]	; 0xffffffc4
   155c8:	cmp	r4, r1
   155cc:	bne	1560c <main@@Base+0x232c>
   155d0:	sub	r0, fp, #60	; 0x3c
   155d4:	mov	r1, r4
   155d8:	mov	r2, r6
   155dc:	str	r0, [sp]
   155e0:	movw	r0, #32912	; 0x8090
   155e4:	movt	r0, #4
   155e8:	add	r3, r0, #48	; 0x30
   155ec:	mov	r0, sl
   155f0:	bl	23b54 <main@@Base+0x10874>
   155f4:	mov	r1, r0
   155f8:	cmp	r0, r4
   155fc:	beq	1dcc4 <main@@Base+0xa9e4>
   15600:	cmp	r1, r6
   15604:	beq	1dcc4 <main@@Base+0xa9e4>
   15608:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1560c:	strb	r0, [r7]
   15610:	sub	r0, r6, r1
   15614:	cmp	r0, #2
   15618:	blt	1564c <main@@Base+0x236c>
   1561c:	ldrb	r0, [r1]
   15620:	cmp	r0, #32
   15624:	bls	15638 <main@@Base+0x2358>
   15628:	mov	r4, r1
   1562c:	cmp	r4, r6
   15630:	bne	15664 <main@@Base+0x2384>
   15634:	b	1610c <main@@Base+0x2e2c>
   15638:	bne	1564c <main@@Base+0x236c>
   1563c:	mov	r4, r1
   15640:	ldrb	r0, [r4, #1]!
   15644:	cmp	r0, #32
   15648:	bhi	1565c <main@@Base+0x237c>
   1564c:	mov	r0, sl
   15650:	mov	r2, r6
   15654:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15658:	mov	r4, r0
   1565c:	cmp	r4, r6
   15660:	beq	1610c <main@@Base+0x2e2c>
   15664:	ldrb	r0, [r4]
   15668:	cmp	r0, #44	; 0x2c
   1566c:	bne	16268 <main@@Base+0x2f88>
   15670:	add	r1, r4, #1
   15674:	sub	r0, r6, r1
   15678:	cmp	r0, #2
   1567c:	blt	156ac <main@@Base+0x23cc>
   15680:	ldrb	r0, [r1]
   15684:	cmp	r0, #32
   15688:	bls	1569c <main@@Base+0x23bc>
   1568c:	mov	r4, r1
   15690:	cmp	r4, r6
   15694:	bne	156c4 <main@@Base+0x23e4>
   15698:	b	162d8 <main@@Base+0x2ff8>
   1569c:	bne	156ac <main@@Base+0x23cc>
   156a0:	ldrb	r0, [r4, #2]!
   156a4:	cmp	r0, #32
   156a8:	bhi	156bc <main@@Base+0x23dc>
   156ac:	mov	r0, sl
   156b0:	mov	r2, r6
   156b4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   156b8:	mov	r4, r0
   156bc:	cmp	r4, r6
   156c0:	beq	162d8 <main@@Base+0x2ff8>
   156c4:	ldrb	r0, [r4]
   156c8:	cmp	r0, #93	; 0x5d
   156cc:	beq	16278 <main@@Base+0x2f98>
   156d0:	mov	r0, #0
   156d4:	mov	r1, #1
   156d8:	strb	r0, [fp, #-60]	; 0xffffffc4
   156dc:	ldr	r0, [sl]
   156e0:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   156e4:	mov	r7, r0
   156e8:	cmp	r0, #0
   156ec:	bne	154c4 <main@@Base+0x21e4>
   156f0:	b	13398 <main@@Base+0xb8>
   156f4:	mov	r0, #0
   156f8:	add	r1, r4, #5
   156fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   15700:	cmp	r4, r1
   15704:	bne	1560c <main@@Base+0x232c>
   15708:	b	155d0 <main@@Base+0x22f0>
   1570c:	mov	r6, r0
   15710:	b	155b4 <main@@Base+0x22d4>
   15714:	bne	15728 <main@@Base+0x2448>
   15718:	mov	r4, r1
   1571c:	ldrb	r0, [r4, #1]!
   15720:	cmp	r0, #32
   15724:	bhi	15738 <main@@Base+0x2458>
   15728:	mov	r0, sl
   1572c:	mov	r2, r6
   15730:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15734:	mov	r4, r0
   15738:	cmp	r4, r6
   1573c:	beq	15780 <main@@Base+0x24a0>
   15740:	ldrb	r0, [r4]
   15744:	cmp	r0, #58	; 0x3a
   15748:	bne	15780 <main@@Base+0x24a0>
   1574c:	add	r1, r4, #1
   15750:	sub	r0, r6, r1
   15754:	cmp	r0, #2
   15758:	blt	16e9c <main@@Base+0x3bbc>
   1575c:	ldrb	r0, [r1]
   15760:	cmp	r0, #32
   15764:	bls	16e84 <main@@Base+0x3ba4>
   15768:	ldr	r6, [sp, #52]	; 0x34
   1576c:	ldr	sl, [sp, #44]	; 0x2c
   15770:	mov	r4, r1
   15774:	cmp	r9, r4
   15778:	bne	16eb4 <main@@Base+0x3bd4>
   1577c:	b	16f14 <main@@Base+0x3c34>
   15780:	mov	r0, sl
   15784:	mov	r1, r4
   15788:	mov	r2, r6
   1578c:	mov	r3, #4
   15790:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15794:	b	16ea8 <main@@Base+0x3bc8>
   15798:	bne	157ac <main@@Base+0x24cc>
   1579c:	mov	r4, r1
   157a0:	ldrb	r0, [r4, #1]!
   157a4:	cmp	r0, #32
   157a8:	bhi	157bc <main@@Base+0x24dc>
   157ac:	mov	r0, sl
   157b0:	mov	r2, r6
   157b4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   157b8:	mov	r4, r0
   157bc:	cmp	r4, r6
   157c0:	beq	15804 <main@@Base+0x2524>
   157c4:	ldrb	r0, [r4]
   157c8:	cmp	r0, #58	; 0x3a
   157cc:	bne	15804 <main@@Base+0x2524>
   157d0:	add	r1, r4, #1
   157d4:	sub	r0, r6, r1
   157d8:	cmp	r0, #2
   157dc:	blt	16f80 <main@@Base+0x3ca0>
   157e0:	ldrb	r0, [r1]
   157e4:	cmp	r0, #32
   157e8:	bls	16f68 <main@@Base+0x3c88>
   157ec:	ldr	r6, [sp, #52]	; 0x34
   157f0:	ldr	sl, [sp, #44]	; 0x2c
   157f4:	mov	r4, r1
   157f8:	cmp	r7, r4
   157fc:	bne	16f98 <main@@Base+0x3cb8>
   15800:	b	1882c <main@@Base+0x554c>
   15804:	mov	r0, sl
   15808:	mov	r1, r4
   1580c:	mov	r2, r6
   15810:	mov	r3, #4
   15814:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15818:	b	16f8c <main@@Base+0x3cac>
   1581c:	bne	1582c <main@@Base+0x254c>
   15820:	ldrb	r0, [r4, #2]!
   15824:	cmp	r0, #32
   15828:	bhi	1583c <main@@Base+0x255c>
   1582c:	mov	r0, sl
   15830:	mov	r2, r6
   15834:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15838:	mov	r4, r0
   1583c:	cmp	r7, r4
   15840:	beq	1882c <main@@Base+0x554c>
   15844:	mov	r0, #0
   15848:	mov	r1, #3
   1584c:	str	r0, [sp, #60]	; 0x3c
   15850:	ldr	r0, [sl]
   15854:	bl	2d064 <flatcc_builder_start_table@@Base>
   15858:	cmp	r0, #0
   1585c:	bne	158d0 <main@@Base+0x25f0>
   15860:	cmp	r4, r6
   15864:	beq	158a8 <main@@Base+0x25c8>
   15868:	ldrb	r0, [r4]
   1586c:	cmp	r0, #123	; 0x7b
   15870:	bne	158a8 <main@@Base+0x25c8>
   15874:	add	r1, r4, #1
   15878:	sub	r0, r6, r1
   1587c:	cmp	r0, #2
   15880:	blt	17fdc <main@@Base+0x4cfc>
   15884:	ldrb	r0, [r1]
   15888:	cmp	r0, #32
   1588c:	bls	17fc4 <main@@Base+0x4ce4>
   15890:	ldr	r6, [sp, #52]	; 0x34
   15894:	mov	r4, r1
   15898:	cmp	r4, r6
   1589c:	mov	r2, r6
   158a0:	bne	17ff8 <main@@Base+0x4d18>
   158a4:	b	18048 <main@@Base+0x4d68>
   158a8:	mov	r0, sl
   158ac:	mov	r1, r4
   158b0:	mov	r2, r6
   158b4:	mov	r3, #21
   158b8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   158bc:	mov	r4, r0
   158c0:	ldr	r0, [sp, #36]	; 0x24
   158c4:	ldr	r0, [r0]
   158c8:	cmp	r0, #0
   158cc:	beq	192c8 <main@@Base+0x5fe8>
   158d0:	mov	r0, sl
   158d4:	mov	r1, r4
   158d8:	mov	r2, r6
   158dc:	mov	r3, #33	; 0x21
   158e0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   158e4:	mov	r4, r0
   158e8:	ldr	r0, [sp, #60]	; 0x3c
   158ec:	cmp	r0, #0
   158f0:	beq	13398 <main@@Base+0xb8>
   158f4:	ldr	r0, [sl]
   158f8:	mov	r1, #35	; 0x23
   158fc:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   15900:	cmp	r0, #0
   15904:	bne	1d208 <main@@Base+0x9f28>
   15908:	b	13398 <main@@Base+0xb8>
   1590c:	mov	r0, sl
   15910:	mov	r1, r2
   15914:	mov	r2, r6
   15918:	mov	r3, #10
   1591c:	b	13f18 <main@@Base+0xc38>
   15920:	bne	15930 <main@@Base+0x2650>
   15924:	ldrb	r0, [r2, #2]!
   15928:	cmp	r0, #32
   1592c:	bhi	15940 <main@@Base+0x2660>
   15930:	mov	r0, sl
   15934:	mov	r2, r6
   15938:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1593c:	mov	r2, r0
   15940:	cmp	r4, r2
   15944:	beq	19490 <main@@Base+0x61b0>
   15948:	ldr	r0, [sp, #56]	; 0x38
   1594c:	movw	r1, #33392	; 0x8270
   15950:	mov	r3, #8
   15954:	movt	r1, #4
   15958:	str	r3, [sp]
   1595c:	mov	r3, #0
   15960:	add	r1, r1, #64	; 0x40
   15964:	stmib	sp, {r0, r1}
   15968:	movw	r0, #632	; 0x278
   1596c:	mov	r1, r2
   15970:	mov	r2, r6
   15974:	movt	r0, #2
   15978:	str	r0, [sp, #12]
   1597c:	mov	r0, sl
   15980:	bl	331fc <flatcc_json_parser_union_type@@Base>
   15984:	b	1db24 <main@@Base+0xa844>
   15988:	bne	15998 <main@@Base+0x26b8>
   1598c:	ldrb	r0, [r4, #2]!
   15990:	cmp	r0, #32
   15994:	bhi	159a8 <main@@Base+0x26c8>
   15998:	mov	r0, sl
   1599c:	mov	r2, r6
   159a0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   159a4:	mov	r4, r0
   159a8:	cmp	r7, r4
   159ac:	beq	1882c <main@@Base+0x554c>
   159b0:	ldr	r0, [sl]
   159b4:	bl	2cb38 <flatcc_builder_start_offset_vector@@Base>
   159b8:	cmp	r0, #0
   159bc:	bne	13398 <main@@Base+0xb8>
   159c0:	cmp	r4, r6
   159c4:	beq	15a04 <main@@Base+0x2724>
   159c8:	ldrb	r0, [r4]
   159cc:	cmp	r0, #91	; 0x5b
   159d0:	bne	15a04 <main@@Base+0x2724>
   159d4:	add	r1, r4, #1
   159d8:	sub	r0, r6, r1
   159dc:	cmp	r0, #2
   159e0:	blt	162f4 <main@@Base+0x3014>
   159e4:	ldrb	r0, [r1]
   159e8:	cmp	r0, #32
   159ec:	bls	162e4 <main@@Base+0x3004>
   159f0:	mov	r4, r1
   159f4:	cmp	r4, r6
   159f8:	mov	r2, r6
   159fc:	bne	16310 <main@@Base+0x3030>
   15a00:	b	16358 <main@@Base+0x3078>
   15a04:	mov	r0, sl
   15a08:	mov	r1, r4
   15a0c:	mov	r2, r6
   15a10:	mov	r3, #22
   15a14:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15a18:	mov	r4, r0
   15a1c:	ldr	r0, [sl]
   15a20:	bl	2cdf0 <flatcc_builder_end_offset_vector@@Base>
   15a24:	ldr	r5, [sp, #48]	; 0x30
   15a28:	cmp	r0, #0
   15a2c:	str	r0, [sp, #60]	; 0x3c
   15a30:	beq	13398 <main@@Base+0xb8>
   15a34:	ldr	r0, [sl]
   15a38:	mov	r1, #28
   15a3c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   15a40:	cmp	r0, #0
   15a44:	bne	1d2e4 <main@@Base+0xa004>
   15a48:	b	13398 <main@@Base+0xb8>
   15a4c:	bne	15a5c <main@@Base+0x277c>
   15a50:	ldrb	r0, [r7, #2]!
   15a54:	cmp	r0, #32
   15a58:	bhi	15a6c <main@@Base+0x278c>
   15a5c:	mov	r0, sl
   15a60:	mov	r2, r6
   15a64:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15a68:	mov	r7, r0
   15a6c:	cmp	r9, r7
   15a70:	beq	16f14 <main@@Base+0x3c34>
   15a74:	ldr	r0, [sl]
   15a78:	mov	r1, #8
   15a7c:	mov	r2, #4
   15a80:	mvn	r3, #-536870912	; 0xe0000000
   15a84:	bl	2caac <flatcc_builder_start_vector@@Base>
   15a88:	cmp	r0, #0
   15a8c:	bne	1dc94 <main@@Base+0xa9b4>
   15a90:	cmp	r7, r6
   15a94:	beq	15ad4 <main@@Base+0x27f4>
   15a98:	ldrb	r0, [r7]
   15a9c:	cmp	r0, #91	; 0x5b
   15aa0:	bne	15ad4 <main@@Base+0x27f4>
   15aa4:	add	r1, r7, #1
   15aa8:	sub	r0, r6, r1
   15aac:	cmp	r0, #2
   15ab0:	blt	16480 <main@@Base+0x31a0>
   15ab4:	ldrb	r0, [r1]
   15ab8:	cmp	r0, #32
   15abc:	bls	16470 <main@@Base+0x3190>
   15ac0:	mov	r7, r1
   15ac4:	cmp	r7, r6
   15ac8:	mov	r4, r6
   15acc:	bne	1649c <main@@Base+0x31bc>
   15ad0:	b	173b4 <main@@Base+0x40d4>
   15ad4:	mov	r0, sl
   15ad8:	mov	r1, r7
   15adc:	mov	r2, r6
   15ae0:	mov	r3, #22
   15ae4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15ae8:	mov	r7, r0
   15aec:	ldr	r0, [sl]
   15af0:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   15af4:	ldr	r5, [sp, #48]	; 0x30
   15af8:	cmp	r0, #0
   15afc:	str	r0, [sp, #60]	; 0x3c
   15b00:	beq	1dc94 <main@@Base+0xa9b4>
   15b04:	ldr	r0, [sl]
   15b08:	mov	r1, #29
   15b0c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   15b10:	cmp	r0, #0
   15b14:	bne	135e0 <main@@Base+0x300>
   15b18:	b	1dc94 <main@@Base+0xa9b4>
   15b1c:	mov	r6, r0
   15b20:	str	r6, [fp, #-60]	; 0xffffffc4
   15b24:	cmp	r7, r4
   15b28:	bne	15b6c <main@@Base+0x288c>
   15b2c:	sub	r0, fp, #60	; 0x3c
   15b30:	mov	r1, r7
   15b34:	mov	r2, r8
   15b38:	mov	r6, r8
   15b3c:	str	r0, [sp]
   15b40:	movw	r0, #32912	; 0x8090
   15b44:	movt	r0, #4
   15b48:	add	r3, r0, #108	; 0x6c
   15b4c:	mov	r0, sl
   15b50:	bl	23fac <main@@Base+0x10ccc>
   15b54:	mov	r4, r0
   15b58:	cmp	r0, r7
   15b5c:	cmpne	r4, r6
   15b60:	beq	1dd30 <main@@Base+0xaa50>
   15b64:	mov	r8, r6
   15b68:	ldr	r6, [fp, #-60]	; 0xffffffc4
   15b6c:	cmp	r6, #0
   15b70:	bne	15b80 <main@@Base+0x28a0>
   15b74:	ldrb	r0, [sl, #8]
   15b78:	tst	r0, #2
   15b7c:	beq	15d28 <main@@Base+0x2a48>
   15b80:	ldr	r0, [sl]
   15b84:	mov	r1, #16
   15b88:	b	18904 <main@@Base+0x5624>
   15b8c:	bne	15b9c <main@@Base+0x28bc>
   15b90:	ldrb	r0, [r7, #2]!
   15b94:	cmp	r0, #32
   15b98:	bhi	15bac <main@@Base+0x28cc>
   15b9c:	mov	r0, sl
   15ba0:	mov	r2, r6
   15ba4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15ba8:	mov	r7, r0
   15bac:	cmp	r8, r7
   15bb0:	beq	1db14 <main@@Base+0xa834>
   15bb4:	mov	r2, r6
   15bb8:	mov	r6, #0
   15bbc:	cmp	r7, r2
   15bc0:	str	r6, [fp, #-52]	; 0xffffffcc
   15bc4:	str	r6, [fp, #-56]	; 0xffffffc8
   15bc8:	strh	r6, [fp, #-60]	; 0xffffffc4
   15bcc:	str	r6, [sp, #64]	; 0x40
   15bd0:	beq	15c38 <main@@Base+0x2958>
   15bd4:	sub	r0, fp, #56	; 0x38
   15bd8:	mov	r1, r7
   15bdc:	add	r3, sp, #64	; 0x40
   15be0:	mov	r8, r2
   15be4:	str	r0, [sp]
   15be8:	mov	r0, sl
   15bec:	bl	326c4 <flatcc_json_parser_integer@@Base>
   15bf0:	ldr	r5, [sp, #48]	; 0x30
   15bf4:	cmp	r0, r7
   15bf8:	beq	15c50 <main@@Base+0x2970>
   15bfc:	ldr	r2, [sp, #64]	; 0x40
   15c00:	mov	r4, r0
   15c04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15c08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15c0c:	cmp	r2, #0
   15c10:	beq	15c60 <main@@Base+0x2980>
   15c14:	movw	r2, #32769	; 0x8001
   15c18:	subs	r2, r0, r2
   15c1c:	sbcs	r1, r1, #0
   15c20:	bcc	15c90 <main@@Base+0x29b0>
   15c24:	mov	r0, sl
   15c28:	mov	r1, r4
   15c2c:	mov	r2, r8
   15c30:	mov	r3, #8
   15c34:	b	15c7c <main@@Base+0x299c>
   15c38:	ldr	r5, [sp, #48]	; 0x30
   15c3c:	mov	r8, r2
   15c40:	mov	r4, r2
   15c44:	cmp	r7, r4
   15c48:	bne	15cf4 <main@@Base+0x2a14>
   15c4c:	b	15cb4 <main@@Base+0x29d4>
   15c50:	mov	r4, r7
   15c54:	cmp	r7, r4
   15c58:	bne	15cf4 <main@@Base+0x2a14>
   15c5c:	b	15cb4 <main@@Base+0x29d4>
   15c60:	subs	r2, r0, #32768	; 0x8000
   15c64:	sbcs	r1, r1, #0
   15c68:	bcc	15ca4 <main@@Base+0x29c4>
   15c6c:	mov	r0, sl
   15c70:	mov	r1, r4
   15c74:	mov	r2, r8
   15c78:	mov	r3, #7
   15c7c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15c80:	mov	r4, r0
   15c84:	cmp	r7, r4
   15c88:	bne	15cf4 <main@@Base+0x2a14>
   15c8c:	b	15cb4 <main@@Base+0x29d4>
   15c90:	rsb	r6, r0, #0
   15c94:	strh	r6, [fp, #-60]	; 0xffffffc4
   15c98:	cmp	r7, r4
   15c9c:	bne	15cf4 <main@@Base+0x2a14>
   15ca0:	b	15cb4 <main@@Base+0x29d4>
   15ca4:	mov	r6, r0
   15ca8:	strh	r6, [fp, #-60]	; 0xffffffc4
   15cac:	cmp	r7, r4
   15cb0:	bne	15cf4 <main@@Base+0x2a14>
   15cb4:	sub	r0, fp, #60	; 0x3c
   15cb8:	mov	r1, r7
   15cbc:	mov	r2, r8
   15cc0:	mov	r6, r8
   15cc4:	str	r0, [sp]
   15cc8:	movw	r0, #32912	; 0x8090
   15ccc:	movt	r0, #4
   15cd0:	add	r3, r0, #36	; 0x24
   15cd4:	mov	r0, sl
   15cd8:	bl	1f794 <main@@Base+0xc4b4>
   15cdc:	mov	r4, r0
   15ce0:	cmp	r0, r7
   15ce4:	cmpne	r4, r6
   15ce8:	beq	1dd30 <main@@Base+0xaa50>
   15cec:	mov	r8, r6
   15cf0:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   15cf4:	uxth	r0, r6
   15cf8:	cmp	r0, #150	; 0x96
   15cfc:	ldrbeq	r0, [sl, #8]
   15d00:	tsteq	r0, #2
   15d04:	beq	15d28 <main@@Base+0x2a48>
   15d08:	ldr	r0, [sl]
   15d0c:	mov	r1, #1
   15d10:	mov	r2, #2
   15d14:	mov	r3, #2
   15d18:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   15d1c:	cmp	r0, #0
   15d20:	beq	1dd30 <main@@Base+0xaa50>
   15d24:	strh	r6, [r0]
   15d28:	mov	r6, r8
   15d2c:	sub	r0, r6, r4
   15d30:	cmp	r0, #2
   15d34:	bge	1db38 <main@@Base+0xa858>
   15d38:	mov	r0, sl
   15d3c:	mov	r1, r4
   15d40:	mov	r2, r6
   15d44:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15d48:	mov	r2, r0
   15d4c:	cmp	r2, r6
   15d50:	bne	1db50 <main@@Base+0xa870>
   15d54:	b	1dbb0 <main@@Base+0xa8d0>
   15d58:	bne	15d68 <main@@Base+0x2a88>
   15d5c:	ldrb	r0, [r7, #2]!
   15d60:	cmp	r0, #32
   15d64:	bhi	15d78 <main@@Base+0x2a98>
   15d68:	mov	r0, sl
   15d6c:	mov	r2, r6
   15d70:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15d74:	mov	r7, r0
   15d78:	cmp	r8, r7
   15d7c:	beq	1db14 <main@@Base+0xa834>
   15d80:	mov	r0, #0
   15d84:	mov	r1, r7
   15d88:	mov	r2, r6
   15d8c:	sub	r3, fp, #56	; 0x38
   15d90:	str	r0, [fp, #-56]	; 0xffffffc8
   15d94:	mov	r0, sl
   15d98:	bl	32578 <flatcc_json_parser_float@@Base>
   15d9c:	ldr	r5, [sp, #48]	; 0x30
   15da0:	mov	r4, r0
   15da4:	cmp	r7, r0
   15da8:	bne	15de0 <main@@Base+0x2b00>
   15dac:	sub	r0, fp, #56	; 0x38
   15db0:	mov	r1, r7
   15db4:	mov	r2, r6
   15db8:	str	r0, [sp]
   15dbc:	movw	r0, #32912	; 0x8090
   15dc0:	movt	r0, #4
   15dc4:	add	r3, r0, #84	; 0x54
   15dc8:	mov	r0, sl
   15dcc:	bl	23dac <main@@Base+0x10acc>
   15dd0:	mov	r4, r0
   15dd4:	cmp	r0, r7
   15dd8:	cmpne	r4, r6
   15ddc:	beq	13398 <main@@Base+0xb8>
   15de0:	vldr	s0, [fp, #-56]	; 0xffffffc8
   15de4:	vcmp.f32	s0, s18
   15de8:	vmrs	APSR_nzcv, fpscr
   15dec:	bne	15dfc <main@@Base+0x2b1c>
   15df0:	ldrb	r0, [sl, #8]
   15df4:	tst	r0, #2
   15df8:	beq	1db2c <main@@Base+0xa84c>
   15dfc:	ldr	r0, [sl]
   15e00:	mov	r1, #25
   15e04:	b	1c814 <main@@Base+0x9534>
   15e08:	bne	15e18 <main@@Base+0x2b38>
   15e0c:	ldrb	r0, [r7, #2]!
   15e10:	cmp	r0, #32
   15e14:	bhi	15e28 <main@@Base+0x2b48>
   15e18:	mov	r0, sl
   15e1c:	mov	r2, r6
   15e20:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15e24:	mov	r7, r0
   15e28:	cmp	r9, r7
   15e2c:	beq	1d954 <main@@Base+0xa674>
   15e30:	mov	r2, r6
   15e34:	mov	r6, #0
   15e38:	cmp	r7, r2
   15e3c:	str	r6, [fp, #-52]	; 0xffffffcc
   15e40:	str	r6, [fp, #-56]	; 0xffffffc8
   15e44:	str	r6, [sp, #68]	; 0x44
   15e48:	str	r6, [sp, #64]	; 0x40
   15e4c:	str	r6, [fp, #-60]	; 0xffffffc4
   15e50:	beq	15ea8 <main@@Base+0x2bc8>
   15e54:	sub	r0, fp, #56	; 0x38
   15e58:	mov	r1, r7
   15e5c:	sub	r3, fp, #60	; 0x3c
   15e60:	str	r0, [sp]
   15e64:	mov	r0, sl
   15e68:	bl	326c4 <flatcc_json_parser_integer@@Base>
   15e6c:	cmp	r0, r7
   15e70:	beq	15ec0 <main@@Base+0x2be0>
   15e74:	sub	r9, fp, #60	; 0x3c
   15e78:	mov	r4, r0
   15e7c:	ldm	r9, {r0, r6, r9}
   15e80:	cmp	r0, #0
   15e84:	beq	15edc <main@@Base+0x2bfc>
   15e88:	subs	r0, r6, #1
   15e8c:	sbcs	r0, r9, #-2147483648	; 0x80000000
   15e90:	bcc	15f98 <main@@Base+0x2cb8>
   15e94:	ldr	r2, [sp, #52]	; 0x34
   15e98:	mov	r0, sl
   15e9c:	mov	r1, r4
   15ea0:	mov	r3, #8
   15ea4:	b	15ef4 <main@@Base+0x2c14>
   15ea8:	mov	r4, r2
   15eac:	mov	r9, #0
   15eb0:	ldr	r5, [sp, #48]	; 0x30
   15eb4:	cmp	r7, r4
   15eb8:	bne	15ff4 <main@@Base+0x2d14>
   15ebc:	b	15fb4 <main@@Base+0x2cd4>
   15ec0:	mov	r6, #0
   15ec4:	mov	r9, #0
   15ec8:	mov	r4, r7
   15ecc:	ldr	r5, [sp, #48]	; 0x30
   15ed0:	cmp	r7, r4
   15ed4:	bne	15ff4 <main@@Base+0x2d14>
   15ed8:	b	15fb4 <main@@Base+0x2cd4>
   15edc:	cmn	r9, #1
   15ee0:	bgt	15fa0 <main@@Base+0x2cc0>
   15ee4:	ldr	r2, [sp, #52]	; 0x34
   15ee8:	mov	r0, sl
   15eec:	mov	r1, r4
   15ef0:	mov	r3, #7
   15ef4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15ef8:	mov	r4, r0
   15efc:	mov	r6, #0
   15f00:	mov	r9, #0
   15f04:	ldr	r5, [sp, #48]	; 0x30
   15f08:	cmp	r7, r4
   15f0c:	bne	15ff4 <main@@Base+0x2d14>
   15f10:	b	15fb4 <main@@Base+0x2cd4>
   15f14:	bne	15f28 <main@@Base+0x2c48>
   15f18:	mov	r4, r1
   15f1c:	ldrb	r0, [r4, #1]!
   15f20:	cmp	r0, #32
   15f24:	bhi	15f38 <main@@Base+0x2c58>
   15f28:	mov	r0, sl
   15f2c:	mov	r2, r6
   15f30:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   15f34:	mov	r4, r0
   15f38:	cmp	r4, r6
   15f3c:	beq	15f80 <main@@Base+0x2ca0>
   15f40:	ldrb	r0, [r4]
   15f44:	cmp	r0, #58	; 0x3a
   15f48:	bne	15f80 <main@@Base+0x2ca0>
   15f4c:	add	r1, r4, #1
   15f50:	sub	r0, r6, r1
   15f54:	cmp	r0, #2
   15f58:	blt	187b4 <main@@Base+0x54d4>
   15f5c:	ldrb	r0, [r1]
   15f60:	cmp	r0, #32
   15f64:	bls	1879c <main@@Base+0x54bc>
   15f68:	ldr	r6, [sp, #52]	; 0x34
   15f6c:	ldr	sl, [sp, #44]	; 0x2c
   15f70:	mov	r4, r1
   15f74:	cmp	r7, r4
   15f78:	bne	187cc <main@@Base+0x54ec>
   15f7c:	b	1882c <main@@Base+0x554c>
   15f80:	mov	r0, sl
   15f84:	mov	r1, r4
   15f88:	mov	r2, r6
   15f8c:	mov	r3, #4
   15f90:	bl	30170 <flatcc_json_parser_set_error@@Base>
   15f94:	b	187c0 <main@@Base+0x54e0>
   15f98:	rsbs	r6, r6, #0
   15f9c:	rsc	r9, r9, #0
   15fa0:	str	r6, [sp, #64]	; 0x40
   15fa4:	str	r9, [sp, #68]	; 0x44
   15fa8:	ldr	r5, [sp, #48]	; 0x30
   15fac:	cmp	r7, r4
   15fb0:	bne	15ff4 <main@@Base+0x2d14>
   15fb4:	ldr	r6, [sp, #52]	; 0x34
   15fb8:	add	r0, sp, #64	; 0x40
   15fbc:	mov	r1, r7
   15fc0:	str	r0, [sp]
   15fc4:	movw	r0, #33032	; 0x8108
   15fc8:	movt	r0, #4
   15fcc:	add	r3, r0, #12
   15fd0:	mov	r0, sl
   15fd4:	mov	r2, r6
   15fd8:	bl	2423c <main@@Base+0x10f5c>
   15fdc:	mov	r4, r0
   15fe0:	cmp	r0, r7
   15fe4:	cmpne	r4, r6
   15fe8:	beq	1dd30 <main@@Base+0xaa50>
   15fec:	ldr	r6, [sp, #64]	; 0x40
   15ff0:	ldr	r9, [sp, #68]	; 0x44
   15ff4:	orrs	r0, r6, r9
   15ff8:	bne	16008 <main@@Base+0x2d28>
   15ffc:	ldrb	r0, [sl, #8]
   16000:	tst	r0, #2
   16004:	beq	16990 <main@@Base+0x36b0>
   16008:	ldr	r0, [sl]
   1600c:	mov	r1, #18
   16010:	b	16978 <main@@Base+0x3698>
   16014:	beq	16cc0 <main@@Base+0x39e0>
   16018:	b	16cd0 <main@@Base+0x39f0>
   1601c:	bne	1602c <main@@Base+0x2d4c>
   16020:	ldrb	r0, [r4, #2]!
   16024:	cmp	r0, #32
   16028:	bhi	1603c <main@@Base+0x2d5c>
   1602c:	mov	r0, sl
   16030:	mov	r2, r6
   16034:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16038:	mov	r4, r0
   1603c:	cmp	r9, r4
   16040:	beq	16f14 <main@@Base+0x3c34>
   16044:	mov	r0, #0
   16048:	mov	r1, #0
   1604c:	str	r0, [sp, #60]	; 0x3c
   16050:	ldr	r0, [sl]
   16054:	bl	2d064 <flatcc_builder_start_table@@Base>
   16058:	cmp	r0, #0
   1605c:	bne	160d0 <main@@Base+0x2df0>
   16060:	cmp	r4, r6
   16064:	beq	160a8 <main@@Base+0x2dc8>
   16068:	ldrb	r0, [r4]
   1606c:	cmp	r0, #123	; 0x7b
   16070:	bne	160a8 <main@@Base+0x2dc8>
   16074:	add	r1, r4, #1
   16078:	sub	r0, r6, r1
   1607c:	cmp	r0, #2
   16080:	blt	18e5c <main@@Base+0x5b7c>
   16084:	ldrb	r0, [r1]
   16088:	cmp	r0, #32
   1608c:	bls	18e48 <main@@Base+0x5b68>
   16090:	ldr	r6, [sp, #52]	; 0x34
   16094:	mov	r4, r1
   16098:	cmp	r4, r6
   1609c:	mov	r3, r6
   160a0:	bne	18e78 <main@@Base+0x5b98>
   160a4:	b	18ec8 <main@@Base+0x5be8>
   160a8:	mov	r0, sl
   160ac:	mov	r1, r4
   160b0:	mov	r2, r6
   160b4:	mov	r3, #21
   160b8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   160bc:	mov	r4, r0
   160c0:	ldr	r0, [sp, #36]	; 0x24
   160c4:	ldr	r0, [r0]
   160c8:	cmp	r0, #0
   160cc:	beq	1a038 <main@@Base+0x6d58>
   160d0:	mov	r0, sl
   160d4:	mov	r1, r4
   160d8:	mov	r2, r6
   160dc:	mov	r3, #33	; 0x21
   160e0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   160e4:	mov	r4, r0
   160e8:	ldr	r0, [sp, #60]	; 0x3c
   160ec:	cmp	r0, #0
   160f0:	beq	13398 <main@@Base+0xb8>
   160f4:	ldr	r0, [sl]
   160f8:	mov	r1, #34	; 0x22
   160fc:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   16100:	cmp	r0, #0
   16104:	bne	1d208 <main@@Base+0x9f28>
   16108:	b	13398 <main@@Base+0xb8>
   1610c:	ldr	r5, [sp, #48]	; 0x30
   16110:	mov	r4, r6
   16114:	b	13bfc <main@@Base+0x91c>
   16118:	bne	1612c <main@@Base+0x2e4c>
   1611c:	mov	r7, r1
   16120:	ldrb	r0, [r7, #1]!
   16124:	cmp	r0, #32
   16128:	bhi	1613c <main@@Base+0x2e5c>
   1612c:	mov	r0, sl
   16130:	mov	r2, r6
   16134:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16138:	mov	r7, r0
   1613c:	cmp	r7, r6
   16140:	beq	16184 <main@@Base+0x2ea4>
   16144:	ldrb	r0, [r7]
   16148:	cmp	r0, #58	; 0x3a
   1614c:	bne	16184 <main@@Base+0x2ea4>
   16150:	add	r1, r7, #1
   16154:	sub	r0, r6, r1
   16158:	cmp	r0, #2
   1615c:	blt	18c24 <main@@Base+0x5944>
   16160:	ldrb	r0, [r1]
   16164:	cmp	r0, #32
   16168:	bls	18c0c <main@@Base+0x592c>
   1616c:	ldr	r6, [sp, #52]	; 0x34
   16170:	ldr	sl, [sp, #44]	; 0x2c
   16174:	mov	r7, r1
   16178:	cmp	r4, r7
   1617c:	bne	18c3c <main@@Base+0x595c>
   16180:	b	19490 <main@@Base+0x61b0>
   16184:	mov	r0, sl
   16188:	mov	r1, r7
   1618c:	mov	r2, r6
   16190:	mov	r3, #4
   16194:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16198:	b	18c30 <main@@Base+0x5950>
   1619c:	bne	161ac <main@@Base+0x2ecc>
   161a0:	ldrb	r0, [r4, #2]!
   161a4:	cmp	r0, #32
   161a8:	bhi	161bc <main@@Base+0x2edc>
   161ac:	mov	r0, sl
   161b0:	mov	r2, r6
   161b4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   161b8:	mov	r4, r0
   161bc:	cmp	r7, r4
   161c0:	beq	1882c <main@@Base+0x554c>
   161c4:	ldr	r0, [sl]
   161c8:	bl	2cb38 <flatcc_builder_start_offset_vector@@Base>
   161cc:	cmp	r0, #0
   161d0:	bne	13398 <main@@Base+0xb8>
   161d4:	cmp	r4, r6
   161d8:	beq	16220 <main@@Base+0x2f40>
   161dc:	ldrb	r0, [r4]
   161e0:	cmp	r0, #91	; 0x5b
   161e4:	bne	16220 <main@@Base+0x2f40>
   161e8:	add	r1, r4, #1
   161ec:	sub	r0, r6, r1
   161f0:	cmp	r0, #2
   161f4:	blt	16cf8 <main@@Base+0x3a18>
   161f8:	ldrb	r0, [r1]
   161fc:	cmp	r0, #32
   16200:	bls	16ce0 <main@@Base+0x3a00>
   16204:	ldr	r6, [sp, #52]	; 0x34
   16208:	ldr	sl, [sp, #44]	; 0x2c
   1620c:	mov	r4, r1
   16210:	cmp	r4, r6
   16214:	mov	r2, r6
   16218:	bne	16d14 <main@@Base+0x3a34>
   1621c:	b	16d6c <main@@Base+0x3a8c>
   16220:	mov	r0, sl
   16224:	mov	r1, r4
   16228:	mov	r2, r6
   1622c:	mov	r3, #22
   16230:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16234:	mov	r4, r0
   16238:	ldr	r0, [sl]
   1623c:	bl	2cdf0 <flatcc_builder_end_offset_vector@@Base>
   16240:	ldr	r5, [sp, #48]	; 0x30
   16244:	cmp	r0, #0
   16248:	str	r0, [sp, #60]	; 0x3c
   1624c:	beq	13398 <main@@Base+0xb8>
   16250:	ldr	r0, [sl]
   16254:	mov	r1, #11
   16258:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   1625c:	cmp	r0, #0
   16260:	bne	1d2e4 <main@@Base+0xa004>
   16264:	b	13398 <main@@Base+0xb8>
   16268:	cmp	r0, #93	; 0x5d
   1626c:	bne	17344 <main@@Base+0x4064>
   16270:	ldr	r6, [sp, #52]	; 0x34
   16274:	ldr	sl, [sp, #44]	; 0x2c
   16278:	add	r1, r4, #1
   1627c:	sub	r0, r6, r1
   16280:	cmp	r0, #2
   16284:	ldr	r5, [sp, #48]	; 0x30
   16288:	blt	162c8 <main@@Base+0x2fe8>
   1628c:	ldrb	r0, [r1]
   16290:	cmp	r0, #32
   16294:	bls	162ac <main@@Base+0x2fcc>
   16298:	ldr	r6, [sp, #52]	; 0x34
   1629c:	ldr	sl, [sp, #44]	; 0x2c
   162a0:	ldr	r5, [sp, #48]	; 0x30
   162a4:	mov	r4, r1
   162a8:	b	13bfc <main@@Base+0x91c>
   162ac:	ldr	r6, [sp, #52]	; 0x34
   162b0:	ldr	sl, [sp, #44]	; 0x2c
   162b4:	ldr	r5, [sp, #48]	; 0x30
   162b8:	bne	162c8 <main@@Base+0x2fe8>
   162bc:	ldrb	r0, [r4, #2]!
   162c0:	cmp	r0, #32
   162c4:	bhi	13bfc <main@@Base+0x91c>
   162c8:	mov	r0, sl
   162cc:	mov	r2, r6
   162d0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   162d4:	b	13bf8 <main@@Base+0x918>
   162d8:	mov	r0, sl
   162dc:	mov	r1, r6
   162e0:	b	17354 <main@@Base+0x4074>
   162e4:	bne	162f4 <main@@Base+0x3014>
   162e8:	ldrb	r0, [r4, #2]!
   162ec:	cmp	r0, #32
   162f0:	bhi	16304 <main@@Base+0x3024>
   162f4:	mov	r0, sl
   162f8:	mov	r2, r6
   162fc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16300:	mov	r4, r0
   16304:	cmp	r4, r6
   16308:	mov	r2, r6
   1630c:	beq	16358 <main@@Base+0x3078>
   16310:	ldrb	r0, [r4]
   16314:	cmp	r0, #93	; 0x5d
   16318:	bne	16354 <main@@Base+0x3074>
   1631c:	add	r1, r4, #1
   16320:	sub	r0, r6, r1
   16324:	cmp	r0, #2
   16328:	blt	1a340 <main@@Base+0x7060>
   1632c:	ldrb	r0, [r1]
   16330:	cmp	r0, #32
   16334:	bhi	17fa8 <main@@Base+0x4cc8>
   16338:	ldr	r6, [sp, #52]	; 0x34
   1633c:	ldr	sl, [sp, #44]	; 0x2c
   16340:	bne	1a340 <main@@Base+0x7060>
   16344:	ldrb	r0, [r4, #2]!
   16348:	cmp	r0, #32
   1634c:	bhi	15a1c <main@@Base+0x273c>
   16350:	b	1a340 <main@@Base+0x7060>
   16354:	mov	r2, r4
   16358:	mov	r1, r2
   1635c:	mov	r0, sl
   16360:	mov	r2, r6
   16364:	add	r3, sp, #60	; 0x3c
   16368:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   1636c:	mov	r4, r0
   16370:	ldr	r0, [sp, #60]	; 0x3c
   16374:	cmp	r0, #0
   16378:	beq	13398 <main@@Base+0xb8>
   1637c:	ldr	r0, [sl]
   16380:	mov	r1, #1
   16384:	bl	2c2f4 <flatcc_builder_extend_offset_vector@@Base>
   16388:	cmp	r0, #0
   1638c:	beq	13398 <main@@Base+0xb8>
   16390:	ldr	r1, [sp, #60]	; 0x3c
   16394:	str	r1, [r0]
   16398:	sub	r0, r6, r4
   1639c:	cmp	r0, #2
   163a0:	blt	163d4 <main@@Base+0x30f4>
   163a4:	ldrb	r0, [r4]
   163a8:	cmp	r0, #32
   163ac:	bls	163c0 <main@@Base+0x30e0>
   163b0:	mov	r2, r4
   163b4:	cmp	r2, r6
   163b8:	bne	163f0 <main@@Base+0x3110>
   163bc:	b	17f34 <main@@Base+0x4c54>
   163c0:	bne	163d4 <main@@Base+0x30f4>
   163c4:	mov	r2, r4
   163c8:	ldrb	r0, [r2, #1]!
   163cc:	cmp	r0, #32
   163d0:	bhi	163e8 <main@@Base+0x3108>
   163d4:	mov	r0, sl
   163d8:	mov	r1, r4
   163dc:	mov	r2, r6
   163e0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   163e4:	mov	r2, r0
   163e8:	cmp	r2, r6
   163ec:	beq	17f34 <main@@Base+0x4c54>
   163f0:	ldrb	r0, [r2]
   163f4:	cmp	r0, #44	; 0x2c
   163f8:	bne	17f7c <main@@Base+0x4c9c>
   163fc:	add	r1, r2, #1
   16400:	sub	r0, r6, r1
   16404:	cmp	r0, #2
   16408:	blt	16438 <main@@Base+0x3158>
   1640c:	ldrb	r0, [r1]
   16410:	cmp	r0, #32
   16414:	bls	16428 <main@@Base+0x3148>
   16418:	mov	r2, r1
   1641c:	cmp	r2, r6
   16420:	bne	16450 <main@@Base+0x3170>
   16424:	b	17fb8 <main@@Base+0x4cd8>
   16428:	bne	16438 <main@@Base+0x3158>
   1642c:	ldrb	r0, [r2, #2]!
   16430:	cmp	r0, #32
   16434:	bhi	16448 <main@@Base+0x3168>
   16438:	mov	r0, sl
   1643c:	mov	r2, r6
   16440:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16444:	mov	r2, r0
   16448:	cmp	r2, r6
   1644c:	beq	17fb8 <main@@Base+0x4cd8>
   16450:	ldrb	r0, [r2]
   16454:	cmp	r0, #93	; 0x5d
   16458:	bne	16358 <main@@Base+0x3078>
   1645c:	add	r1, r2, #1
   16460:	sub	r0, r6, r1
   16464:	cmp	r0, #2
   16468:	bge	17f9c <main@@Base+0x4cbc>
   1646c:	b	1a340 <main@@Base+0x7060>
   16470:	bne	16480 <main@@Base+0x31a0>
   16474:	ldrb	r0, [r7, #2]!
   16478:	cmp	r0, #32
   1647c:	bhi	16490 <main@@Base+0x31b0>
   16480:	mov	r0, sl
   16484:	mov	r2, r6
   16488:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1648c:	mov	r7, r0
   16490:	cmp	r7, r6
   16494:	mov	r4, r6
   16498:	beq	173b4 <main@@Base+0x40d4>
   1649c:	ldrb	r0, [r7]
   164a0:	cmp	r0, #93	; 0x5d
   164a4:	bne	164e0 <main@@Base+0x3200>
   164a8:	add	r1, r7, #1
   164ac:	sub	r0, r6, r1
   164b0:	cmp	r0, #2
   164b4:	blt	1a488 <main@@Base+0x71a8>
   164b8:	ldrb	r0, [r1]
   164bc:	cmp	r0, #32
   164c0:	bhi	17d28 <main@@Base+0x4a48>
   164c4:	ldr	r6, [sp, #52]	; 0x34
   164c8:	ldr	sl, [sp, #44]	; 0x2c
   164cc:	bne	1a488 <main@@Base+0x71a8>
   164d0:	ldrb	r0, [r7, #2]!
   164d4:	cmp	r0, #32
   164d8:	bhi	15aec <main@@Base+0x280c>
   164dc:	b	1a488 <main@@Base+0x71a8>
   164e0:	mov	r4, r7
   164e4:	b	173b4 <main@@Base+0x40d4>
   164e8:	bne	164f8 <main@@Base+0x3218>
   164ec:	ldrb	r0, [r4, #2]!
   164f0:	cmp	r0, #32
   164f4:	bhi	16508 <main@@Base+0x3228>
   164f8:	mov	r0, sl
   164fc:	mov	r2, r6
   16500:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16504:	mov	r4, r0
   16508:	cmp	r7, r4
   1650c:	beq	1882c <main@@Base+0x554c>
   16510:	mov	r0, #0
   16514:	mov	r1, #3
   16518:	str	r0, [sp, #60]	; 0x3c
   1651c:	ldr	r0, [sl]
   16520:	bl	2d064 <flatcc_builder_start_table@@Base>
   16524:	cmp	r0, #0
   16528:	bne	165a0 <main@@Base+0x32c0>
   1652c:	cmp	r4, r6
   16530:	beq	16570 <main@@Base+0x3290>
   16534:	ldrb	r0, [r4]
   16538:	cmp	r0, #123	; 0x7b
   1653c:	bne	16570 <main@@Base+0x3290>
   16540:	add	r1, r4, #1
   16544:	sub	r0, r6, r1
   16548:	cmp	r0, #2
   1654c:	blt	19578 <main@@Base+0x6298>
   16550:	ldrb	r0, [r1]
   16554:	cmp	r0, #32
   16558:	bls	19568 <main@@Base+0x6288>
   1655c:	mov	r4, r1
   16560:	ldr	r2, [sp, #52]	; 0x34
   16564:	cmp	r4, r2
   16568:	bne	19594 <main@@Base+0x62b4>
   1656c:	b	195d8 <main@@Base+0x62f8>
   16570:	mov	r0, sl
   16574:	mov	r1, r4
   16578:	mov	r2, r6
   1657c:	mov	r3, #21
   16580:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16584:	mov	r4, r0
   16588:	ldr	r0, [sp, #36]	; 0x24
   1658c:	ldr	r0, [r0]
   16590:	cmp	r0, #0
   16594:	beq	1a5cc <main@@Base+0x72ec>
   16598:	ldr	r6, [sp, #52]	; 0x34
   1659c:	ldr	sl, [sp, #44]	; 0x2c
   165a0:	mov	r0, sl
   165a4:	mov	r1, r4
   165a8:	mov	r2, r6
   165ac:	mov	r3, #33	; 0x21
   165b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   165b4:	mov	r4, r0
   165b8:	ldr	r0, [sp, #60]	; 0x3c
   165bc:	cmp	r0, #0
   165c0:	beq	13398 <main@@Base+0xb8>
   165c4:	ldr	r0, [sl]
   165c8:	mov	r1, #14
   165cc:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   165d0:	cmp	r0, #0
   165d4:	bne	1d208 <main@@Base+0x9f28>
   165d8:	b	13398 <main@@Base+0xb8>
   165dc:	bne	165ec <main@@Base+0x330c>
   165e0:	ldrb	r0, [r4, #2]!
   165e4:	cmp	r0, #32
   165e8:	bhi	165fc <main@@Base+0x331c>
   165ec:	mov	r0, sl
   165f0:	mov	r2, r6
   165f4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   165f8:	mov	r4, r0
   165fc:	cmp	r7, r4
   16600:	beq	1882c <main@@Base+0x554c>
   16604:	ldr	r0, [sl]
   16608:	mov	r1, #1
   1660c:	mov	r2, #1
   16610:	mvn	r3, #0
   16614:	bl	2caac <flatcc_builder_start_vector@@Base>
   16618:	cmp	r0, #0
   1661c:	bne	13398 <main@@Base+0xb8>
   16620:	cmp	r4, r6
   16624:	beq	16668 <main@@Base+0x3388>
   16628:	ldrb	r0, [r4]
   1662c:	cmp	r0, #91	; 0x5b
   16630:	bne	16668 <main@@Base+0x3388>
   16634:	add	r1, r4, #1
   16638:	sub	r0, r6, r1
   1663c:	cmp	r0, #2
   16640:	blt	17094 <main@@Base+0x3db4>
   16644:	ldrb	r0, [r1]
   16648:	cmp	r0, #32
   1664c:	bls	1707c <main@@Base+0x3d9c>
   16650:	ldr	r6, [sp, #52]	; 0x34
   16654:	ldr	sl, [sp, #44]	; 0x2c
   16658:	mov	r4, r1
   1665c:	cmp	r4, r6
   16660:	bne	170ac <main@@Base+0x3dcc>
   16664:	b	1710c <main@@Base+0x3e2c>
   16668:	mov	r0, sl
   1666c:	mov	r1, r4
   16670:	mov	r2, r6
   16674:	mov	r3, #22
   16678:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1667c:	mov	r4, r0
   16680:	ldr	r0, [sl]
   16684:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   16688:	ldr	r5, [sp, #48]	; 0x30
   1668c:	cmp	r0, #0
   16690:	str	r0, [sp, #60]	; 0x3c
   16694:	beq	13398 <main@@Base+0xb8>
   16698:	ldr	r0, [sl]
   1669c:	mov	r1, #5
   166a0:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   166a4:	cmp	r0, #0
   166a8:	bne	1d2e4 <main@@Base+0xa004>
   166ac:	b	13398 <main@@Base+0xb8>
   166b0:	ldr	r6, [sp, #52]	; 0x34
   166b4:	ldr	sl, [sp, #44]	; 0x2c
   166b8:	bne	166c8 <main@@Base+0x33e8>
   166bc:	ldrb	r0, [r7, #2]!
   166c0:	cmp	r0, #32
   166c4:	bhi	166d8 <main@@Base+0x33f8>
   166c8:	mov	r0, sl
   166cc:	mov	r2, r6
   166d0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   166d4:	mov	r7, r0
   166d8:	cmp	r9, r7
   166dc:	beq	15004 <main@@Base+0x1d24>
   166e0:	mov	r2, r6
   166e4:	mov	r6, #0
   166e8:	cmp	r7, r2
   166ec:	str	r6, [fp, #-52]	; 0xffffffcc
   166f0:	str	r6, [fp, #-56]	; 0xffffffc8
   166f4:	str	r6, [fp, #-60]	; 0xffffffc4
   166f8:	str	r6, [sp, #64]	; 0x40
   166fc:	beq	16748 <main@@Base+0x3468>
   16700:	sub	r0, fp, #56	; 0x38
   16704:	mov	r1, r7
   16708:	add	r3, sp, #64	; 0x40
   1670c:	mov	r8, r2
   16710:	str	r0, [sp]
   16714:	mov	r0, sl
   16718:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1671c:	cmp	r0, r7
   16720:	beq	16760 <main@@Base+0x3480>
   16724:	mov	r4, r0
   16728:	ldr	r0, [sp, #64]	; 0x40
   1672c:	cmp	r0, #0
   16730:	beq	16774 <main@@Base+0x3494>
   16734:	mov	r0, sl
   16738:	mov	r1, r4
   1673c:	mov	r2, r8
   16740:	mov	r3, #8
   16744:	b	16798 <main@@Base+0x34b8>
   16748:	mov	r8, r2
   1674c:	mov	r4, r2
   16750:	ldr	r5, [sp, #48]	; 0x30
   16754:	cmp	r7, r4
   16758:	bne	167f0 <main@@Base+0x3510>
   1675c:	b	167ac <main@@Base+0x34cc>
   16760:	mov	r4, r7
   16764:	ldr	r5, [sp, #48]	; 0x30
   16768:	cmp	r7, r4
   1676c:	bne	167f0 <main@@Base+0x3510>
   16770:	b	167ac <main@@Base+0x34cc>
   16774:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16778:	cmp	r0, #0
   1677c:	beq	17d64 <main@@Base+0x4a84>
   16780:	ldr	sl, [sp, #44]	; 0x2c
   16784:	ldr	r2, [sp, #52]	; 0x34
   16788:	mov	r1, r4
   1678c:	mov	r3, #7
   16790:	mov	r0, sl
   16794:	mov	r8, r2
   16798:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1679c:	mov	r4, r0
   167a0:	ldr	r5, [sp, #48]	; 0x30
   167a4:	cmp	r7, r4
   167a8:	bne	167f0 <main@@Base+0x3510>
   167ac:	sub	r0, fp, #60	; 0x3c
   167b0:	mov	r1, r7
   167b4:	mov	r2, r8
   167b8:	mov	r5, r8
   167bc:	str	r0, [sp]
   167c0:	movw	r0, #33032	; 0x8108
   167c4:	movt	r0, #4
   167c8:	add	r3, r0, #36	; 0x24
   167cc:	mov	r0, sl
   167d0:	bl	244d0 <main@@Base+0x111f0>
   167d4:	mov	r4, r0
   167d8:	cmp	r0, r7
   167dc:	cmpne	r4, r5
   167e0:	beq	1dd30 <main@@Base+0xaa50>
   167e4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   167e8:	ldr	sl, [sp, #44]	; 0x2c
   167ec:	ldr	r5, [sp, #48]	; 0x30
   167f0:	cmp	r6, #0
   167f4:	bne	16804 <main@@Base+0x3524>
   167f8:	ldrb	r0, [sl, #8]
   167fc:	tst	r0, #2
   16800:	beq	15d28 <main@@Base+0x2a48>
   16804:	ldr	r0, [sl]
   16808:	mov	r1, #17
   1680c:	b	18904 <main@@Base+0x5624>
   16810:	ldr	r6, [sp, #52]	; 0x34
   16814:	ldr	sl, [sp, #44]	; 0x2c
   16818:	bne	16828 <main@@Base+0x3548>
   1681c:	ldrb	r0, [r7, #2]!
   16820:	cmp	r0, #32
   16824:	bhi	16838 <main@@Base+0x3558>
   16828:	mov	r0, sl
   1682c:	mov	r2, r6
   16830:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16834:	mov	r7, r0
   16838:	cmp	r9, r7
   1683c:	beq	15104 <main@@Base+0x1e24>
   16840:	mov	r2, r6
   16844:	mov	r6, #0
   16848:	cmp	r7, r2
   1684c:	str	r6, [fp, #-52]	; 0xffffffcc
   16850:	str	r6, [fp, #-56]	; 0xffffffc8
   16854:	str	r6, [sp, #68]	; 0x44
   16858:	str	r6, [sp, #64]	; 0x40
   1685c:	str	r6, [fp, #-60]	; 0xffffffc4
   16860:	beq	168c4 <main@@Base+0x35e4>
   16864:	sub	r0, fp, #56	; 0x38
   16868:	mov	r1, r7
   1686c:	sub	r3, fp, #60	; 0x3c
   16870:	str	r0, [sp]
   16874:	mov	r0, sl
   16878:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1687c:	cmp	r0, r7
   16880:	beq	168dc <main@@Base+0x35fc>
   16884:	mov	r4, r0
   16888:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1688c:	cmp	r0, #0
   16890:	beq	168f8 <main@@Base+0x3618>
   16894:	ldr	r2, [sp, #52]	; 0x34
   16898:	mov	r0, sl
   1689c:	mov	r1, r4
   168a0:	mov	r3, #8
   168a4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   168a8:	mov	r4, r0
   168ac:	mov	r6, #0
   168b0:	mov	r9, #0
   168b4:	ldr	r5, [sp, #48]	; 0x30
   168b8:	cmp	r7, r4
   168bc:	bne	1695c <main@@Base+0x367c>
   168c0:	b	16914 <main@@Base+0x3634>
   168c4:	mov	r4, r2
   168c8:	mov	r9, #0
   168cc:	ldr	r5, [sp, #48]	; 0x30
   168d0:	cmp	r7, r4
   168d4:	bne	1695c <main@@Base+0x367c>
   168d8:	b	16914 <main@@Base+0x3634>
   168dc:	mov	r6, #0
   168e0:	mov	r9, #0
   168e4:	mov	r4, r7
   168e8:	ldr	r5, [sp, #48]	; 0x30
   168ec:	cmp	r7, r4
   168f0:	bne	1695c <main@@Base+0x367c>
   168f4:	b	16914 <main@@Base+0x3634>
   168f8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   168fc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   16900:	str	r9, [sp, #68]	; 0x44
   16904:	str	r6, [sp, #64]	; 0x40
   16908:	ldr	r5, [sp, #48]	; 0x30
   1690c:	cmp	r7, r4
   16910:	bne	1695c <main@@Base+0x367c>
   16914:	ldr	r5, [sp, #52]	; 0x34
   16918:	add	r0, sp, #64	; 0x40
   1691c:	mov	r1, r7
   16920:	str	r0, [sp]
   16924:	movw	r0, #33032	; 0x8108
   16928:	movt	r0, #4
   1692c:	add	r3, r0, #60	; 0x3c
   16930:	mov	r0, sl
   16934:	mov	r2, r5
   16938:	bl	24748 <main@@Base+0x11468>
   1693c:	mov	r4, r0
   16940:	cmp	r0, r7
   16944:	cmpne	r4, r5
   16948:	beq	1dd30 <main@@Base+0xaa50>
   1694c:	ldr	r6, [sp, #64]	; 0x40
   16950:	ldr	r9, [sp, #68]	; 0x44
   16954:	ldr	sl, [sp, #44]	; 0x2c
   16958:	ldr	r5, [sp, #48]	; 0x30
   1695c:	orrs	r0, r6, r9
   16960:	bne	16970 <main@@Base+0x3690>
   16964:	ldrb	r0, [sl, #8]
   16968:	tst	r0, #2
   1696c:	beq	16990 <main@@Base+0x36b0>
   16970:	ldr	r0, [sl]
   16974:	mov	r1, #19
   16978:	mov	r2, #8
   1697c:	mov	r3, #8
   16980:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   16984:	cmp	r0, #0
   16988:	beq	1dd30 <main@@Base+0xaa50>
   1698c:	stm	r0, {r6, r9}
   16990:	ldr	r6, [sp, #52]	; 0x34
   16994:	sub	r0, r6, r4
   16998:	cmp	r0, #2
   1699c:	bge	1db38 <main@@Base+0xa858>
   169a0:	b	15d38 <main@@Base+0x2a58>
   169a4:	beq	17f4c <main@@Base+0x4c6c>
   169a8:	b	17f5c <main@@Base+0x4c7c>
   169ac:	ldr	r6, [sp, #52]	; 0x34
   169b0:	ldr	sl, [sp, #44]	; 0x2c
   169b4:	bne	169c4 <main@@Base+0x36e4>
   169b8:	ldrb	r0, [r4, #2]!
   169bc:	cmp	r0, #32
   169c0:	bhi	169d4 <main@@Base+0x36f4>
   169c4:	mov	r0, sl
   169c8:	mov	r2, r6
   169cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   169d0:	mov	r4, r0
   169d4:	cmp	r7, r4
   169d8:	beq	1882c <main@@Base+0x554c>
   169dc:	ldr	r0, [sl]
   169e0:	bl	2cb38 <flatcc_builder_start_offset_vector@@Base>
   169e4:	cmp	r0, #0
   169e8:	bne	13398 <main@@Base+0xb8>
   169ec:	cmp	r4, r6
   169f0:	beq	16a34 <main@@Base+0x3754>
   169f4:	ldrb	r0, [r4]
   169f8:	cmp	r0, #91	; 0x5b
   169fc:	bne	16a34 <main@@Base+0x3754>
   16a00:	add	r1, r4, #1
   16a04:	sub	r0, r6, r1
   16a08:	cmp	r0, #2
   16a0c:	blt	17da8 <main@@Base+0x4ac8>
   16a10:	ldrb	r0, [r1]
   16a14:	cmp	r0, #32
   16a18:	bls	17d90 <main@@Base+0x4ab0>
   16a1c:	ldr	r6, [sp, #52]	; 0x34
   16a20:	mov	r4, r1
   16a24:	cmp	r4, r6
   16a28:	mov	r2, r6
   16a2c:	bne	17dc4 <main@@Base+0x4ae4>
   16a30:	b	17e14 <main@@Base+0x4b34>
   16a34:	mov	r0, sl
   16a38:	mov	r1, r4
   16a3c:	mov	r2, r6
   16a40:	mov	r3, #22
   16a44:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16a48:	mov	r4, r0
   16a4c:	ldr	r0, [sl]
   16a50:	bl	2cdf0 <flatcc_builder_end_offset_vector@@Base>
   16a54:	ldr	r5, [sp, #48]	; 0x30
   16a58:	cmp	r0, #0
   16a5c:	str	r0, [sp, #60]	; 0x3c
   16a60:	beq	13398 <main@@Base+0xb8>
   16a64:	ldr	r0, [sl]
   16a68:	mov	r1, #10
   16a6c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   16a70:	cmp	r0, #0
   16a74:	bne	1d2e4 <main@@Base+0xa004>
   16a78:	b	13398 <main@@Base+0xb8>
   16a7c:	ldr	r6, [sp, #52]	; 0x34
   16a80:	ldr	sl, [sp, #44]	; 0x2c
   16a84:	bne	16a98 <main@@Base+0x37b8>
   16a88:	mov	r7, r1
   16a8c:	ldrb	r0, [r7, #1]!
   16a90:	cmp	r0, #32
   16a94:	bhi	16aa8 <main@@Base+0x37c8>
   16a98:	mov	r0, sl
   16a9c:	mov	r2, r6
   16aa0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16aa4:	mov	r7, r0
   16aa8:	cmp	r7, r6
   16aac:	beq	16af0 <main@@Base+0x3810>
   16ab0:	ldrb	r0, [r7]
   16ab4:	cmp	r0, #58	; 0x3a
   16ab8:	bne	16af0 <main@@Base+0x3810>
   16abc:	add	r1, r7, #1
   16ac0:	sub	r0, r6, r1
   16ac4:	cmp	r0, #2
   16ac8:	blt	19304 <main@@Base+0x6024>
   16acc:	ldrb	r0, [r1]
   16ad0:	cmp	r0, #32
   16ad4:	bls	192ec <main@@Base+0x600c>
   16ad8:	ldr	r6, [sp, #52]	; 0x34
   16adc:	ldr	sl, [sp, #44]	; 0x2c
   16ae0:	mov	r7, r1
   16ae4:	cmp	r4, r7
   16ae8:	bne	1931c <main@@Base+0x603c>
   16aec:	b	19490 <main@@Base+0x61b0>
   16af0:	mov	r0, sl
   16af4:	mov	r1, r7
   16af8:	mov	r2, r6
   16afc:	mov	r3, #4
   16b00:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16b04:	b	19310 <main@@Base+0x6030>
   16b08:	ldr	r6, [sp, #52]	; 0x34
   16b0c:	ldr	sl, [sp, #44]	; 0x2c
   16b10:	bne	16b24 <main@@Base+0x3844>
   16b14:	mov	r7, r1
   16b18:	ldrb	r0, [r7, #1]!
   16b1c:	cmp	r0, #32
   16b20:	bhi	16b34 <main@@Base+0x3854>
   16b24:	mov	r0, sl
   16b28:	mov	r2, r6
   16b2c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16b30:	mov	r7, r0
   16b34:	cmp	r7, r6
   16b38:	beq	16b7c <main@@Base+0x389c>
   16b3c:	ldrb	r0, [r7]
   16b40:	cmp	r0, #58	; 0x3a
   16b44:	bne	16b7c <main@@Base+0x389c>
   16b48:	add	r1, r7, #1
   16b4c:	sub	r0, r6, r1
   16b50:	cmp	r0, #2
   16b54:	blt	193f8 <main@@Base+0x6118>
   16b58:	ldrb	r0, [r1]
   16b5c:	cmp	r0, #32
   16b60:	bls	193e0 <main@@Base+0x6100>
   16b64:	ldr	r6, [sp, #52]	; 0x34
   16b68:	ldr	sl, [sp, #44]	; 0x2c
   16b6c:	mov	r7, r1
   16b70:	cmp	r4, r7
   16b74:	bne	19410 <main@@Base+0x6130>
   16b78:	b	19490 <main@@Base+0x61b0>
   16b7c:	mov	r0, sl
   16b80:	mov	r1, r7
   16b84:	mov	r2, r6
   16b88:	mov	r3, #4
   16b8c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16b90:	b	19404 <main@@Base+0x6124>
   16b94:	ldr	r6, [sp, #52]	; 0x34
   16b98:	ldr	sl, [sp, #44]	; 0x2c
   16b9c:	bne	16bac <main@@Base+0x38cc>
   16ba0:	ldrb	r0, [r7, #2]!
   16ba4:	cmp	r0, #32
   16ba8:	bhi	16bbc <main@@Base+0x38dc>
   16bac:	mov	r0, sl
   16bb0:	mov	r2, r6
   16bb4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16bb8:	mov	r7, r0
   16bbc:	cmp	r4, r7
   16bc0:	beq	19490 <main@@Base+0x61b0>
   16bc4:	mov	r2, r6
   16bc8:	mov	r6, #0
   16bcc:	cmp	r7, r2
   16bd0:	str	r6, [fp, #-52]	; 0xffffffcc
   16bd4:	str	r6, [fp, #-56]	; 0xffffffc8
   16bd8:	str	r6, [fp, #-60]	; 0xffffffc4
   16bdc:	str	r6, [sp, #64]	; 0x40
   16be0:	beq	16c40 <main@@Base+0x3960>
   16be4:	sub	r0, fp, #56	; 0x38
   16be8:	mov	r1, r7
   16bec:	add	r3, sp, #64	; 0x40
   16bf0:	mov	r8, r2
   16bf4:	str	r0, [sp]
   16bf8:	mov	r0, sl
   16bfc:	bl	326c4 <flatcc_json_parser_integer@@Base>
   16c00:	cmp	r0, r7
   16c04:	beq	16c58 <main@@Base+0x3978>
   16c08:	ldr	r2, [sp, #64]	; 0x40
   16c0c:	mov	r4, r0
   16c10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16c14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c18:	cmp	r2, #0
   16c1c:	beq	16c6c <main@@Base+0x398c>
   16c20:	subs	r2, r0, #-2147483647	; 0x80000001
   16c24:	sbcs	r1, r1, #0
   16c28:	bcc	16ca8 <main@@Base+0x39c8>
   16c2c:	ldr	sl, [sp, #44]	; 0x2c
   16c30:	ldr	r2, [sp, #52]	; 0x34
   16c34:	mov	r1, r4
   16c38:	mov	r3, #8
   16c3c:	b	16c88 <main@@Base+0x39a8>
   16c40:	mov	r8, r2
   16c44:	mov	r4, r2
   16c48:	ldr	r5, [sp, #48]	; 0x30
   16c4c:	cmp	r7, r4
   16c50:	bne	188e8 <main@@Base+0x5608>
   16c54:	b	188a8 <main@@Base+0x55c8>
   16c58:	mov	r4, r7
   16c5c:	ldr	r5, [sp, #48]	; 0x30
   16c60:	cmp	r7, r4
   16c64:	bne	188e8 <main@@Base+0x5608>
   16c68:	b	188a8 <main@@Base+0x55c8>
   16c6c:	subs	r2, r0, #-2147483648	; 0x80000000
   16c70:	sbcs	r1, r1, #0
   16c74:	bcc	1888c <main@@Base+0x55ac>
   16c78:	ldr	sl, [sp, #44]	; 0x2c
   16c7c:	ldr	r2, [sp, #52]	; 0x34
   16c80:	mov	r1, r4
   16c84:	mov	r3, #7
   16c88:	mov	r0, sl
   16c8c:	mov	r8, r2
   16c90:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16c94:	mov	r4, r0
   16c98:	ldr	r5, [sp, #48]	; 0x30
   16c9c:	cmp	r7, r4
   16ca0:	bne	188e8 <main@@Base+0x5608>
   16ca4:	b	188a8 <main@@Base+0x55c8>
   16ca8:	rsb	r6, r0, #0
   16cac:	b	18890 <main@@Base+0x55b0>
   16cb0:	ldr	r6, [sp, #52]	; 0x34
   16cb4:	ldr	sl, [sp, #44]	; 0x2c
   16cb8:	ldr	r5, [sp, #48]	; 0x30
   16cbc:	bne	16cd0 <main@@Base+0x39f0>
   16cc0:	ldrb	r0, [r4, #2]!
   16cc4:	cmp	r0, #32
   16cc8:	mov	r7, r4
   16ccc:	bhi	135b8 <main@@Base+0x2d8>
   16cd0:	mov	r0, sl
   16cd4:	mov	r2, r6
   16cd8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16cdc:	b	135b4 <main@@Base+0x2d4>
   16ce0:	ldr	r6, [sp, #52]	; 0x34
   16ce4:	ldr	sl, [sp, #44]	; 0x2c
   16ce8:	bne	16cf8 <main@@Base+0x3a18>
   16cec:	ldrb	r0, [r4, #2]!
   16cf0:	cmp	r0, #32
   16cf4:	bhi	16d08 <main@@Base+0x3a28>
   16cf8:	mov	r0, sl
   16cfc:	mov	r2, r6
   16d00:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16d04:	mov	r4, r0
   16d08:	cmp	r4, r6
   16d0c:	mov	r2, r6
   16d10:	beq	16d6c <main@@Base+0x3a8c>
   16d14:	ldrb	r0, [r4]
   16d18:	cmp	r0, #93	; 0x5d
   16d1c:	bne	16d60 <main@@Base+0x3a80>
   16d20:	ldr	r6, [sp, #52]	; 0x34
   16d24:	ldr	sl, [sp, #44]	; 0x2c
   16d28:	add	r1, r4, #1
   16d2c:	sub	r0, r6, r1
   16d30:	cmp	r0, #2
   16d34:	blt	1a508 <main@@Base+0x7228>
   16d38:	ldrb	r0, [r1]
   16d3c:	cmp	r0, #32
   16d40:	bhi	18df4 <main@@Base+0x5b14>
   16d44:	ldr	r6, [sp, #52]	; 0x34
   16d48:	ldr	sl, [sp, #44]	; 0x2c
   16d4c:	bne	1a508 <main@@Base+0x7228>
   16d50:	ldrb	r0, [r4, #2]!
   16d54:	cmp	r0, #32
   16d58:	bhi	16238 <main@@Base+0x2f58>
   16d5c:	b	1a508 <main@@Base+0x7228>
   16d60:	ldr	r6, [sp, #52]	; 0x34
   16d64:	ldr	sl, [sp, #44]	; 0x2c
   16d68:	mov	r2, r4
   16d6c:	mov	r1, r2
   16d70:	mov	r0, sl
   16d74:	mov	r2, r6
   16d78:	add	r3, sp, #60	; 0x3c
   16d7c:	bl	13358 <main@@Base+0x78>
   16d80:	mov	r4, r0
   16d84:	ldr	r0, [sp, #60]	; 0x3c
   16d88:	cmp	r0, #0
   16d8c:	beq	13398 <main@@Base+0xb8>
   16d90:	ldr	r0, [sl]
   16d94:	mov	r1, #1
   16d98:	bl	2c2f4 <flatcc_builder_extend_offset_vector@@Base>
   16d9c:	cmp	r0, #0
   16da0:	beq	13398 <main@@Base+0xb8>
   16da4:	ldr	r1, [sp, #60]	; 0x3c
   16da8:	str	r1, [r0]
   16dac:	sub	r0, r6, r4
   16db0:	cmp	r0, #2
   16db4:	blt	16de8 <main@@Base+0x3b08>
   16db8:	ldrb	r0, [r4]
   16dbc:	cmp	r0, #32
   16dc0:	bls	16dd4 <main@@Base+0x3af4>
   16dc4:	mov	r2, r4
   16dc8:	cmp	r2, r6
   16dcc:	bne	16e04 <main@@Base+0x3b24>
   16dd0:	b	18dc0 <main@@Base+0x5ae0>
   16dd4:	bne	16de8 <main@@Base+0x3b08>
   16dd8:	mov	r2, r4
   16ddc:	ldrb	r0, [r2, #1]!
   16de0:	cmp	r0, #32
   16de4:	bhi	16dfc <main@@Base+0x3b1c>
   16de8:	mov	r0, sl
   16dec:	mov	r1, r4
   16df0:	mov	r2, r6
   16df4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16df8:	mov	r2, r0
   16dfc:	cmp	r2, r6
   16e00:	beq	18dc0 <main@@Base+0x5ae0>
   16e04:	ldrb	r0, [r2]
   16e08:	cmp	r0, #44	; 0x2c
   16e0c:	bne	18dc8 <main@@Base+0x5ae8>
   16e10:	add	r1, r2, #1
   16e14:	sub	r0, r6, r1
   16e18:	cmp	r0, #2
   16e1c:	blt	16e4c <main@@Base+0x3b6c>
   16e20:	ldrb	r0, [r1]
   16e24:	cmp	r0, #32
   16e28:	bls	16e3c <main@@Base+0x3b5c>
   16e2c:	mov	r2, r1
   16e30:	cmp	r2, r6
   16e34:	bne	16e64 <main@@Base+0x3b84>
   16e38:	b	18e0c <main@@Base+0x5b2c>
   16e3c:	bne	16e4c <main@@Base+0x3b6c>
   16e40:	ldrb	r0, [r2, #2]!
   16e44:	cmp	r0, #32
   16e48:	bhi	16e5c <main@@Base+0x3b7c>
   16e4c:	mov	r0, sl
   16e50:	mov	r2, r6
   16e54:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16e58:	mov	r2, r0
   16e5c:	cmp	r2, r6
   16e60:	beq	18e0c <main@@Base+0x5b2c>
   16e64:	ldrb	r0, [r2]
   16e68:	cmp	r0, #93	; 0x5d
   16e6c:	bne	16d6c <main@@Base+0x3a8c>
   16e70:	add	r1, r2, #1
   16e74:	sub	r0, r6, r1
   16e78:	cmp	r0, #2
   16e7c:	bge	18de8 <main@@Base+0x5b08>
   16e80:	b	1a508 <main@@Base+0x7228>
   16e84:	ldr	r6, [sp, #52]	; 0x34
   16e88:	ldr	sl, [sp, #44]	; 0x2c
   16e8c:	bne	16e9c <main@@Base+0x3bbc>
   16e90:	ldrb	r0, [r4, #2]!
   16e94:	cmp	r0, #32
   16e98:	bhi	16eac <main@@Base+0x3bcc>
   16e9c:	mov	r0, sl
   16ea0:	mov	r2, r6
   16ea4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16ea8:	mov	r4, r0
   16eac:	cmp	r9, r4
   16eb0:	beq	16f14 <main@@Base+0x3c34>
   16eb4:	ldr	r0, [sl]
   16eb8:	mov	r1, #8
   16ebc:	mov	r2, #8
   16ec0:	mvn	r3, #-536870912	; 0xe0000000
   16ec4:	bl	2caac <flatcc_builder_start_vector@@Base>
   16ec8:	cmp	r0, #0
   16ecc:	bne	13398 <main@@Base+0xb8>
   16ed0:	cmp	r4, r6
   16ed4:	beq	16f20 <main@@Base+0x3c40>
   16ed8:	ldrb	r0, [r4]
   16edc:	cmp	r0, #91	; 0x5b
   16ee0:	bne	16f20 <main@@Base+0x3c40>
   16ee4:	add	r1, r4, #1
   16ee8:	sub	r0, r6, r1
   16eec:	cmp	r0, #2
   16ef0:	blt	18938 <main@@Base+0x5658>
   16ef4:	ldrb	r0, [r1]
   16ef8:	cmp	r0, #32
   16efc:	bls	18920 <main@@Base+0x5640>
   16f00:	ldr	r6, [sp, #52]	; 0x34
   16f04:	mov	r4, r1
   16f08:	cmp	r4, r6
   16f0c:	bne	18950 <main@@Base+0x5670>
   16f10:	b	189ac <main@@Base+0x56cc>
   16f14:	mov	r0, sl
   16f18:	mov	r1, r9
   16f1c:	b	1db1c <main@@Base+0xa83c>
   16f20:	mov	r0, sl
   16f24:	mov	r1, r4
   16f28:	mov	r2, r6
   16f2c:	mov	r3, #22
   16f30:	bl	30170 <flatcc_json_parser_set_error@@Base>
   16f34:	mov	r4, r0
   16f38:	ldr	r0, [sl]
   16f3c:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   16f40:	ldr	r5, [sp, #48]	; 0x30
   16f44:	cmp	r0, #0
   16f48:	str	r0, [sp, #60]	; 0x3c
   16f4c:	beq	13398 <main@@Base+0xb8>
   16f50:	ldr	r0, [sl]
   16f54:	mov	r1, #32
   16f58:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   16f5c:	cmp	r0, #0
   16f60:	bne	1d2e4 <main@@Base+0xa004>
   16f64:	b	13398 <main@@Base+0xb8>
   16f68:	ldr	r6, [sp, #52]	; 0x34
   16f6c:	ldr	sl, [sp, #44]	; 0x2c
   16f70:	bne	16f80 <main@@Base+0x3ca0>
   16f74:	ldrb	r0, [r4, #2]!
   16f78:	cmp	r0, #32
   16f7c:	bhi	16f90 <main@@Base+0x3cb0>
   16f80:	mov	r0, sl
   16f84:	mov	r2, r6
   16f88:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   16f8c:	mov	r4, r0
   16f90:	cmp	r7, r4
   16f94:	beq	1882c <main@@Base+0x554c>
   16f98:	cmp	r4, r6
   16f9c:	beq	17008 <main@@Base+0x3d28>
   16fa0:	ldrb	r0, [r4]
   16fa4:	cmp	r0, #91	; 0x5b
   16fa8:	bne	17008 <main@@Base+0x3d28>
   16fac:	ldr	r0, [sl]
   16fb0:	mov	r1, #1
   16fb4:	mov	r2, #1
   16fb8:	mvn	r3, #0
   16fbc:	bl	2caac <flatcc_builder_start_vector@@Base>
   16fc0:	cmp	r0, #0
   16fc4:	bne	1dd30 <main@@Base+0xaa50>
   16fc8:	ldrb	r0, [r4]
   16fcc:	cmp	r0, #91	; 0x5b
   16fd0:	bne	17064 <main@@Base+0x3d84>
   16fd4:	ldr	r0, [sp, #52]	; 0x34
   16fd8:	add	r1, r4, #1
   16fdc:	sub	r0, r0, r1
   16fe0:	cmp	r0, #2
   16fe4:	blt	1a090 <main@@Base+0x6db0>
   16fe8:	ldrb	r0, [r1]
   16fec:	cmp	r0, #32
   16ff0:	bls	1a080 <main@@Base+0x6da0>
   16ff4:	mov	r4, r1
   16ff8:	ldr	r6, [sp, #52]	; 0x34
   16ffc:	cmp	r4, r6
   17000:	bne	1a0ac <main@@Base+0x6dcc>
   17004:	b	1a0bc <main@@Base+0x6ddc>
   17008:	ldr	r0, [sl]
   1700c:	mov	r1, #0
   17010:	mov	r2, #0
   17014:	mov	r3, #0
   17018:	bl	2ba6c <flatcc_builder_start_buffer@@Base>
   1701c:	cmp	r0, #0
   17020:	bne	13398 <main@@Base+0xb8>
   17024:	mov	r0, sl
   17028:	mov	r1, r4
   1702c:	mov	r2, r6
   17030:	add	r3, sp, #60	; 0x3c
   17034:	bl	13358 <main@@Base+0x78>
   17038:	ldr	r1, [sp, #60]	; 0x3c
   1703c:	mov	r4, r0
   17040:	cmp	r1, #0
   17044:	beq	13398 <main@@Base+0xb8>
   17048:	ldr	r0, [sl]
   1704c:	bl	2bc5c <flatcc_builder_end_buffer@@Base>
   17050:	ldr	r5, [sp, #48]	; 0x30
   17054:	cmp	r0, #0
   17058:	str	r0, [sp, #60]	; 0x3c
   1705c:	bne	1a6d0 <main@@Base+0x73f0>
   17060:	b	13398 <main@@Base+0xb8>
   17064:	ldr	r0, [sp, #44]	; 0x2c
   17068:	ldr	r2, [sp, #52]	; 0x34
   1706c:	mov	r1, r4
   17070:	mov	r3, #22
   17074:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17078:	b	1a6ac <main@@Base+0x73cc>
   1707c:	ldr	r6, [sp, #52]	; 0x34
   17080:	ldr	sl, [sp, #44]	; 0x2c
   17084:	bne	17094 <main@@Base+0x3db4>
   17088:	ldrb	r0, [r4, #2]!
   1708c:	cmp	r0, #32
   17090:	bhi	170a4 <main@@Base+0x3dc4>
   17094:	mov	r0, sl
   17098:	mov	r2, r6
   1709c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   170a0:	mov	r4, r0
   170a4:	cmp	r4, r6
   170a8:	beq	1710c <main@@Base+0x3e2c>
   170ac:	ldrb	r0, [r4]
   170b0:	cmp	r0, #93	; 0x5d
   170b4:	bne	17104 <main@@Base+0x3e24>
   170b8:	ldr	r6, [sp, #52]	; 0x34
   170bc:	ldr	sl, [sp, #44]	; 0x2c
   170c0:	add	r1, r4, #1
   170c4:	sub	r0, r6, r1
   170c8:	cmp	r0, #2
   170cc:	blt	170f4 <main@@Base+0x3e14>
   170d0:	ldrb	r0, [r1]
   170d4:	cmp	r0, #32
   170d8:	bhi	19034 <main@@Base+0x5d54>
   170dc:	ldr	r6, [sp, #52]	; 0x34
   170e0:	ldr	sl, [sp, #44]	; 0x2c
   170e4:	bne	170f4 <main@@Base+0x3e14>
   170e8:	ldrb	r0, [r4, #2]!
   170ec:	cmp	r0, #32
   170f0:	bhi	16680 <main@@Base+0x33a0>
   170f4:	mov	r0, sl
   170f8:	mov	r2, r6
   170fc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17100:	b	1667c <main@@Base+0x339c>
   17104:	ldr	sl, [sp, #44]	; 0x2c
   17108:	mov	r6, r4
   1710c:	mov	r0, #0
   17110:	mov	r1, #1
   17114:	strb	r0, [fp, #-60]	; 0xffffffc4
   17118:	ldr	r0, [sl]
   1711c:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   17120:	cmp	r0, #0
   17124:	beq	1dd08 <main@@Base+0xaa28>
   17128:	ldr	r5, [sp, #52]	; 0x34
   1712c:	ldr	sl, [sp, #44]	; 0x2c
   17130:	mov	r7, r0
   17134:	mov	r4, r6
   17138:	mov	r6, #0
   1713c:	mov	r2, r5
   17140:	cmp	r4, r5
   17144:	str	r6, [fp, #-52]	; 0xffffffcc
   17148:	str	r6, [fp, #-56]	; 0xffffffc8
   1714c:	strb	r6, [fp, #-60]	; 0xffffffc4
   17150:	str	r6, [sp, #64]	; 0x40
   17154:	beq	171a8 <main@@Base+0x3ec8>
   17158:	sub	r0, fp, #56	; 0x38
   1715c:	mov	r1, r4
   17160:	add	r3, sp, #64	; 0x40
   17164:	str	r0, [sp]
   17168:	mov	r0, sl
   1716c:	bl	326c4 <flatcc_json_parser_integer@@Base>
   17170:	cmp	r0, r4
   17174:	beq	171b8 <main@@Base+0x3ed8>
   17178:	mov	r1, r0
   1717c:	ldr	r0, [sp, #64]	; 0x40
   17180:	cmp	r0, #0
   17184:	beq	171c8 <main@@Base+0x3ee8>
   17188:	mov	r0, sl
   1718c:	mov	r2, r5
   17190:	mov	r3, #8
   17194:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17198:	mov	r1, r0
   1719c:	cmp	r4, r1
   171a0:	bne	17258 <main@@Base+0x3f78>
   171a4:	b	1721c <main@@Base+0x3f3c>
   171a8:	mov	r1, r2
   171ac:	cmp	r4, r1
   171b0:	bne	17258 <main@@Base+0x3f78>
   171b4:	b	1721c <main@@Base+0x3f3c>
   171b8:	mov	r1, r4
   171bc:	cmp	r4, r1
   171c0:	bne	17258 <main@@Base+0x3f78>
   171c4:	b	1721c <main@@Base+0x3f3c>
   171c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   171cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   171d0:	subs	r3, r0, #256	; 0x100
   171d4:	sbcs	r2, r2, #0
   171d8:	bcc	17204 <main@@Base+0x3f24>
   171dc:	ldr	sl, [sp, #44]	; 0x2c
   171e0:	ldr	r2, [sp, #52]	; 0x34
   171e4:	mov	r3, #7
   171e8:	mov	r0, sl
   171ec:	mov	r5, r2
   171f0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   171f4:	mov	r1, r0
   171f8:	cmp	r4, r1
   171fc:	bne	17258 <main@@Base+0x3f78>
   17200:	b	1721c <main@@Base+0x3f3c>
   17204:	ldr	r5, [sp, #52]	; 0x34
   17208:	ldr	sl, [sp, #44]	; 0x2c
   1720c:	mov	r6, r0
   17210:	strb	r0, [fp, #-60]	; 0xffffffc4
   17214:	cmp	r4, r1
   17218:	bne	17258 <main@@Base+0x3f78>
   1721c:	sub	r0, fp, #60	; 0x3c
   17220:	mov	r1, r4
   17224:	mov	r2, r5
   17228:	mov	r6, r5
   1722c:	str	r0, [sp]
   17230:	movw	r0, #32912	; 0x8090
   17234:	movt	r0, #4
   17238:	add	r3, r0, #24
   1723c:	mov	r0, sl
   17240:	bl	1f518 <main@@Base+0xc238>
   17244:	mov	r1, r0
   17248:	cmp	r0, r4
   1724c:	cmpne	r1, r6
   17250:	beq	1dce0 <main@@Base+0xaa00>
   17254:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   17258:	sub	r0, r5, r1
   1725c:	strb	r6, [r7]
   17260:	mov	r6, r5
   17264:	cmp	r0, #2
   17268:	blt	1729c <main@@Base+0x3fbc>
   1726c:	ldrb	r0, [r1]
   17270:	cmp	r0, #32
   17274:	bls	17288 <main@@Base+0x3fa8>
   17278:	mov	r4, r1
   1727c:	cmp	r4, r6
   17280:	bne	172b4 <main@@Base+0x3fd4>
   17284:	b	18e04 <main@@Base+0x5b24>
   17288:	bne	1729c <main@@Base+0x3fbc>
   1728c:	mov	r4, r1
   17290:	ldrb	r0, [r4, #1]!
   17294:	cmp	r0, #32
   17298:	bhi	172ac <main@@Base+0x3fcc>
   1729c:	mov	r0, sl
   172a0:	mov	r2, r6
   172a4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   172a8:	mov	r4, r0
   172ac:	cmp	r4, r6
   172b0:	beq	18e04 <main@@Base+0x5b24>
   172b4:	ldrb	r0, [r4]
   172b8:	cmp	r0, #44	; 0x2c
   172bc:	bne	18e18 <main@@Base+0x5b38>
   172c0:	add	r1, r4, #1
   172c4:	sub	r0, r6, r1
   172c8:	cmp	r0, #2
   172cc:	blt	172fc <main@@Base+0x401c>
   172d0:	ldrb	r0, [r1]
   172d4:	cmp	r0, #32
   172d8:	bls	172ec <main@@Base+0x400c>
   172dc:	mov	r4, r1
   172e0:	cmp	r4, r6
   172e4:	bne	17314 <main@@Base+0x4034>
   172e8:	b	18e38 <main@@Base+0x5b58>
   172ec:	bne	172fc <main@@Base+0x401c>
   172f0:	ldrb	r0, [r4, #2]!
   172f4:	cmp	r0, #32
   172f8:	bhi	1730c <main@@Base+0x402c>
   172fc:	mov	r0, sl
   17300:	mov	r2, r6
   17304:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17308:	mov	r4, r0
   1730c:	cmp	r4, r6
   17310:	beq	18e38 <main@@Base+0x5b58>
   17314:	ldrb	r0, [r4]
   17318:	cmp	r0, #93	; 0x5d
   1731c:	beq	19018 <main@@Base+0x5d38>
   17320:	mov	r0, #0
   17324:	mov	r1, #1
   17328:	strb	r0, [fp, #-60]	; 0xffffffc4
   1732c:	ldr	r0, [sl]
   17330:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   17334:	mov	r7, r0
   17338:	cmp	r0, #0
   1733c:	bne	17138 <main@@Base+0x3e58>
   17340:	b	1dcbc <main@@Base+0xa9dc>
   17344:	ldr	sl, [sp, #44]	; 0x2c
   17348:	ldr	r6, [sp, #52]	; 0x34
   1734c:	mov	r1, r4
   17350:	mov	r0, sl
   17354:	mov	r2, r6
   17358:	mov	r3, #9
   1735c:	b	13bf0 <main@@Base+0x910>
   17360:	mov	r0, sl
   17364:	mov	r1, r6
   17368:	b	1737c <main@@Base+0x409c>
   1736c:	ldr	sl, [sp, #44]	; 0x2c
   17370:	ldr	r6, [sp, #52]	; 0x34
   17374:	mov	r1, r2
   17378:	mov	r0, sl
   1737c:	mov	r2, r6
   17380:	mov	r3, #10
   17384:	b	17420 <main@@Base+0x4140>
   17388:	ldr	r6, [sp, #52]	; 0x34
   1738c:	ldr	sl, [sp, #44]	; 0x2c
   17390:	bne	173a4 <main@@Base+0x40c4>
   17394:	ldrb	r0, [r2, #2]!
   17398:	cmp	r0, #32
   1739c:	mov	r4, r2
   173a0:	bhi	17428 <main@@Base+0x4148>
   173a4:	mov	r0, sl
   173a8:	mov	r2, r6
   173ac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   173b0:	b	17424 <main@@Base+0x4144>
   173b4:	ldr	r0, [sl]
   173b8:	mov	r1, #1
   173bc:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   173c0:	mov	r8, r0
   173c4:	cmp	r0, #0
   173c8:	beq	13398 <main@@Base+0xb8>
   173cc:	cmp	r4, r6
   173d0:	beq	17410 <main@@Base+0x4130>
   173d4:	ldrb	r0, [r4]
   173d8:	cmp	r0, #123	; 0x7b
   173dc:	bne	17410 <main@@Base+0x4130>
   173e0:	add	r1, r4, #1
   173e4:	sub	r0, r6, r1
   173e8:	cmp	r0, #2
   173ec:	blt	17478 <main@@Base+0x4198>
   173f0:	ldrb	r0, [r1]
   173f4:	cmp	r0, #32
   173f8:	bls	17468 <main@@Base+0x4188>
   173fc:	mov	r4, r1
   17400:	cmp	r4, r6
   17404:	mov	r2, r6
   17408:	bne	17494 <main@@Base+0x41b4>
   1740c:	b	174fc <main@@Base+0x421c>
   17410:	mov	r0, sl
   17414:	mov	r1, r4
   17418:	mov	r2, r6
   1741c:	mov	r3, #21
   17420:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17424:	mov	r4, r0
   17428:	sub	r0, r6, r4
   1742c:	cmp	r0, #2
   17430:	blt	17c80 <main@@Base+0x49a0>
   17434:	ldrb	r0, [r4]
   17438:	cmp	r0, #32
   1743c:	bls	17450 <main@@Base+0x4170>
   17440:	mov	r7, r4
   17444:	cmp	r7, r6
   17448:	bne	17c9c <main@@Base+0x49bc>
   1744c:	b	17d38 <main@@Base+0x4a58>
   17450:	bne	17c80 <main@@Base+0x49a0>
   17454:	mov	r7, r4
   17458:	ldrb	r0, [r7, #1]!
   1745c:	cmp	r0, #32
   17460:	bls	17c80 <main@@Base+0x49a0>
   17464:	b	17c94 <main@@Base+0x49b4>
   17468:	bne	17478 <main@@Base+0x4198>
   1746c:	ldrb	r0, [r4, #2]!
   17470:	cmp	r0, #32
   17474:	bhi	17488 <main@@Base+0x41a8>
   17478:	mov	r0, sl
   1747c:	mov	r2, r6
   17480:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17484:	mov	r4, r0
   17488:	cmp	r4, r6
   1748c:	mov	r2, r6
   17490:	beq	174fc <main@@Base+0x421c>
   17494:	ldrb	r0, [r4]
   17498:	cmp	r0, #125	; 0x7d
   1749c:	bne	174d8 <main@@Base+0x41f8>
   174a0:	add	r1, r4, #1
   174a4:	sub	r0, r6, r1
   174a8:	cmp	r0, #2
   174ac:	blt	173a4 <main@@Base+0x40c4>
   174b0:	ldrb	r0, [r1]
   174b4:	cmp	r0, #32
   174b8:	bhi	17c68 <main@@Base+0x4988>
   174bc:	ldr	r6, [sp, #52]	; 0x34
   174c0:	ldr	sl, [sp, #44]	; 0x2c
   174c4:	bne	173a4 <main@@Base+0x40c4>
   174c8:	ldrb	r0, [r4, #2]!
   174cc:	cmp	r0, #32
   174d0:	bls	173a4 <main@@Base+0x40c4>
   174d4:	b	17428 <main@@Base+0x4148>
   174d8:	mov	r2, r4
   174dc:	b	174fc <main@@Base+0x421c>
   174e0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   174e4:	ldr	r6, [sp, #52]	; 0x34
   174e8:	ldr	sl, [sp, #44]	; 0x2c
   174ec:	str	r4, [fp, #-60]	; 0xffffffc4
   174f0:	cmp	r7, r1
   174f4:	bne	17b68 <main@@Base+0x4888>
   174f8:	b	17b2c <main@@Base+0x484c>
   174fc:	cmp	r2, r6
   17500:	mov	r9, r6
   17504:	beq	17558 <main@@Base+0x4278>
   17508:	ldrb	r0, [r2]
   1750c:	cmp	r0, #46	; 0x2e
   17510:	beq	1752c <main@@Base+0x424c>
   17514:	cmp	r0, #34	; 0x22
   17518:	bne	17548 <main@@Base+0x4268>
   1751c:	ldr	r0, [sp, #40]	; 0x28
   17520:	mov	r1, #0
   17524:	add	r9, r2, #1
   17528:	b	17554 <main@@Base+0x4274>
   1752c:	mov	r1, r2
   17530:	mov	r0, sl
   17534:	mov	r2, r6
   17538:	mov	r3, #5
   1753c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17540:	mov	r9, r0
   17544:	b	17558 <main@@Base+0x4278>
   17548:	ldr	r0, [sp, #40]	; 0x28
   1754c:	mov	r1, #1
   17550:	mov	r9, r2
   17554:	str	r1, [r0]
   17558:	sub	lr, r6, r9
   1755c:	mov	r0, #8
   17560:	cmp	lr, #8
   17564:	movcc	r0, lr
   17568:	and	r0, r0, #15
   1756c:	sub	r7, r0, #1
   17570:	cmp	r7, #7
   17574:	bhi	17a88 <main@@Base+0x47a8>
   17578:	add	r4, pc, #32
   1757c:	mov	r1, #0
   17580:	mov	ip, #0
   17584:	mov	sl, #0
   17588:	mov	r6, #0
   1758c:	mov	r3, #0
   17590:	mov	r5, #0
   17594:	mov	r2, #0
   17598:	mov	r0, #0
   1759c:	ldr	pc, [r4, r7, lsl #2]
   175a0:	andeq	r7, r1, r4, lsl #12
   175a4:	strdeq	r7, [r1], -ip
   175a8:	strdeq	r7, [r1], -r4
   175ac:	andeq	r7, r1, ip, ror #11
   175b0:	andeq	r7, r1, r0, ror #11
   175b4:	ldrdeq	r7, [r1], -r4
   175b8:	andeq	r7, r1, r4, asr #11
   175bc:	andeq	r7, r1, r0, asr #11
   175c0:	ldrb	ip, [r9, #7]
   175c4:	ldrb	r0, [r9, #6]
   175c8:	mov	sl, r1
   175cc:	orr	r0, ip, r0, lsl #8
   175d0:	mov	r1, r0
   175d4:	ldrb	r0, [r9, #5]
   175d8:	mov	r6, sl
   175dc:	orr	r1, r1, r0, lsl #16
   175e0:	ldrb	r0, [r9, #4]
   175e4:	mov	r3, r6
   175e8:	orr	r1, r1, r0, lsl #24
   175ec:	ldrb	r0, [r9, #3]
   175f0:	orr	r5, r0, r3
   175f4:	ldrb	r0, [r9, #2]
   175f8:	orr	r2, r5, r0, lsl #8
   175fc:	ldrb	r0, [r9, #1]
   17600:	orr	r0, r2, r0, lsl #16
   17604:	ldrb	r2, [r9]
   17608:	movw	r3, #0
   1760c:	movt	r3, #26980	; 0x6964
   17610:	orr	r0, r0, r2, lsl #24
   17614:	mov	r2, r0
   17618:	bfc	r2, #0, #16
   1761c:	teq	r2, r3
   17620:	bne	17680 <main@@Base+0x43a0>
   17624:	ldr	r6, [sp, #52]	; 0x34
   17628:	ldr	sl, [sp, #44]	; 0x2c
   1762c:	cmp	lr, #3
   17630:	mov	r7, r9
   17634:	blt	178cc <main@@Base+0x45ec>
   17638:	ldr	r2, [sp, #40]	; 0x28
   1763c:	mov	r1, r9
   17640:	ldrb	r0, [r1, #2]!
   17644:	ldr	r2, [r2]
   17648:	cmp	r2, #0
   1764c:	beq	17700 <main@@Base+0x4420>
   17650:	cmp	r0, #33	; 0x21
   17654:	bcc	17664 <main@@Base+0x4384>
   17658:	cmp	r0, #58	; 0x3a
   1765c:	mov	r7, r9
   17660:	bne	178cc <main@@Base+0x45ec>
   17664:	ldr	r0, [sp, #40]	; 0x28
   17668:	mov	r2, #0
   1766c:	str	r2, [r0]
   17670:	sub	r0, r6, r1
   17674:	cmp	r0, #2
   17678:	bge	1771c <main@@Base+0x443c>
   1767c:	b	1779c <main@@Base+0x44bc>
   17680:	movw	r2, #25445	; 0x6365
   17684:	ldr	r6, [sp, #52]	; 0x34
   17688:	ldr	sl, [sp, #44]	; 0x2c
   1768c:	movt	r2, #24942	; 0x616e
   17690:	eor	r1, r1, r2
   17694:	movw	r2, #29556	; 0x7374
   17698:	movt	r2, #25705	; 0x6469
   1769c:	eor	r0, r0, r2
   176a0:	orrs	r0, r1, r0
   176a4:	bne	17a88 <main@@Base+0x47a8>
   176a8:	cmp	lr, #9
   176ac:	mov	r7, r9
   176b0:	blt	17a20 <main@@Base+0x4740>
   176b4:	ldr	r2, [sp, #40]	; 0x28
   176b8:	mov	r1, r9
   176bc:	ldrb	r0, [r1, #8]!
   176c0:	ldr	r2, [r2]
   176c4:	cmp	r2, #0
   176c8:	beq	17740 <main@@Base+0x4460>
   176cc:	cmp	r0, #33	; 0x21
   176d0:	bcc	176e0 <main@@Base+0x4400>
   176d4:	cmp	r0, #58	; 0x3a
   176d8:	mov	r7, r9
   176dc:	bne	17a20 <main@@Base+0x4740>
   176e0:	ldr	r0, [sp, #40]	; 0x28
   176e4:	mov	r2, #0
   176e8:	str	r2, [r0]
   176ec:	ldr	r4, [sp, #52]	; 0x34
   176f0:	sub	r0, r4, r1
   176f4:	cmp	r0, #2
   176f8:	bge	17760 <main@@Base+0x4480>
   176fc:	b	17824 <main@@Base+0x4544>
   17700:	cmp	r0, #34	; 0x22
   17704:	mov	r7, r9
   17708:	bne	178cc <main@@Base+0x45ec>
   1770c:	add	r1, r9, #3
   17710:	sub	r0, r6, r1
   17714:	cmp	r0, #2
   17718:	blt	1779c <main@@Base+0x44bc>
   1771c:	ldrb	r0, [r1]
   17720:	cmp	r0, #32
   17724:	bls	17780 <main@@Base+0x44a0>
   17728:	ldr	r6, [sp, #52]	; 0x34
   1772c:	ldr	sl, [sp, #44]	; 0x2c
   17730:	mov	r7, r1
   17734:	cmp	r7, r6
   17738:	bne	177b4 <main@@Base+0x44d4>
   1773c:	b	177f4 <main@@Base+0x4514>
   17740:	cmp	r0, #34	; 0x22
   17744:	mov	r7, r9
   17748:	bne	17a20 <main@@Base+0x4740>
   1774c:	add	r1, r9, #9
   17750:	ldr	r4, [sp, #52]	; 0x34
   17754:	sub	r0, r4, r1
   17758:	cmp	r0, #2
   1775c:	blt	17824 <main@@Base+0x4544>
   17760:	ldrb	r0, [r1]
   17764:	cmp	r0, #32
   17768:	bls	1780c <main@@Base+0x452c>
   1776c:	ldr	r4, [sp, #52]	; 0x34
   17770:	mov	r7, r1
   17774:	cmp	r7, r4
   17778:	bne	1783c <main@@Base+0x455c>
   1777c:	b	17884 <main@@Base+0x45a4>
   17780:	ldr	r6, [sp, #52]	; 0x34
   17784:	ldr	sl, [sp, #44]	; 0x2c
   17788:	bne	1779c <main@@Base+0x44bc>
   1778c:	mov	r7, r1
   17790:	ldrb	r0, [r7, #1]!
   17794:	cmp	r0, #32
   17798:	bhi	177ac <main@@Base+0x44cc>
   1779c:	mov	r0, sl
   177a0:	mov	r2, r6
   177a4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   177a8:	mov	r7, r0
   177ac:	cmp	r7, r6
   177b0:	beq	177f4 <main@@Base+0x4514>
   177b4:	ldrb	r0, [r7]
   177b8:	cmp	r0, #58	; 0x3a
   177bc:	bne	177f4 <main@@Base+0x4514>
   177c0:	add	r1, r7, #1
   177c4:	sub	r0, r6, r1
   177c8:	cmp	r0, #2
   177cc:	blt	178bc <main@@Base+0x45dc>
   177d0:	ldrb	r0, [r1]
   177d4:	cmp	r0, #32
   177d8:	bls	178a4 <main@@Base+0x45c4>
   177dc:	ldr	r6, [sp, #52]	; 0x34
   177e0:	ldr	sl, [sp, #44]	; 0x2c
   177e4:	mov	r7, r1
   177e8:	cmp	r9, r7
   177ec:	bne	178d4 <main@@Base+0x45f4>
   177f0:	b	17a88 <main@@Base+0x47a8>
   177f4:	mov	r0, sl
   177f8:	mov	r1, r7
   177fc:	mov	r2, r6
   17800:	mov	r3, #4
   17804:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17808:	b	178c8 <main@@Base+0x45e8>
   1780c:	ldr	r4, [sp, #52]	; 0x34
   17810:	bne	17824 <main@@Base+0x4544>
   17814:	mov	r7, r1
   17818:	ldrb	r0, [r7, #1]!
   1781c:	cmp	r0, #32
   17820:	bhi	17834 <main@@Base+0x4554>
   17824:	ldr	r0, [sp, #44]	; 0x2c
   17828:	mov	r2, r4
   1782c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17830:	mov	r7, r0
   17834:	cmp	r7, r4
   17838:	beq	17884 <main@@Base+0x45a4>
   1783c:	ldrb	r0, [r7]
   17840:	cmp	r0, #58	; 0x3a
   17844:	bne	17884 <main@@Base+0x45a4>
   17848:	ldr	r6, [sp, #52]	; 0x34
   1784c:	ldr	sl, [sp, #44]	; 0x2c
   17850:	add	r1, r7, #1
   17854:	sub	r0, r6, r1
   17858:	cmp	r0, #2
   1785c:	blt	17a10 <main@@Base+0x4730>
   17860:	ldrb	r0, [r1]
   17864:	cmp	r0, #32
   17868:	bls	179f8 <main@@Base+0x4718>
   1786c:	ldr	r6, [sp, #52]	; 0x34
   17870:	ldr	sl, [sp, #44]	; 0x2c
   17874:	mov	r7, r1
   17878:	cmp	r9, r7
   1787c:	bne	17a28 <main@@Base+0x4748>
   17880:	b	17a88 <main@@Base+0x47a8>
   17884:	ldr	sl, [sp, #44]	; 0x2c
   17888:	ldr	r6, [sp, #52]	; 0x34
   1788c:	mov	r1, r7
   17890:	mov	r3, #4
   17894:	mov	r0, sl
   17898:	mov	r2, r6
   1789c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   178a0:	b	17a1c <main@@Base+0x473c>
   178a4:	ldr	r6, [sp, #52]	; 0x34
   178a8:	ldr	sl, [sp, #44]	; 0x2c
   178ac:	bne	178bc <main@@Base+0x45dc>
   178b0:	ldrb	r0, [r7, #2]!
   178b4:	cmp	r0, #32
   178b8:	bhi	178cc <main@@Base+0x45ec>
   178bc:	mov	r0, sl
   178c0:	mov	r2, r6
   178c4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   178c8:	mov	r7, r0
   178cc:	cmp	r9, r7
   178d0:	beq	17a88 <main@@Base+0x47a8>
   178d4:	mov	r4, #0
   178d8:	cmp	r7, r6
   178dc:	str	r4, [fp, #-52]	; 0xffffffcc
   178e0:	str	r4, [fp, #-56]	; 0xffffffc8
   178e4:	str	r4, [fp, #-60]	; 0xffffffc4
   178e8:	str	r4, [sp, #64]	; 0x40
   178ec:	beq	17944 <main@@Base+0x4664>
   178f0:	sub	r0, fp, #56	; 0x38
   178f4:	mov	r1, r7
   178f8:	mov	r2, r6
   178fc:	add	r3, sp, #64	; 0x40
   17900:	str	r0, [sp]
   17904:	mov	r0, sl
   17908:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1790c:	cmp	r0, r7
   17910:	beq	17954 <main@@Base+0x4674>
   17914:	mov	r1, r0
   17918:	ldr	r0, [sp, #64]	; 0x40
   1791c:	cmp	r0, #0
   17920:	beq	17964 <main@@Base+0x4684>
   17924:	mov	r0, sl
   17928:	mov	r2, r6
   1792c:	mov	r3, #8
   17930:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17934:	mov	r1, r0
   17938:	cmp	r7, r1
   1793c:	bne	179e4 <main@@Base+0x4704>
   17940:	b	179b0 <main@@Base+0x46d0>
   17944:	mov	r1, r6
   17948:	cmp	r7, r1
   1794c:	bne	179e4 <main@@Base+0x4704>
   17950:	b	179b0 <main@@Base+0x46d0>
   17954:	mov	r1, r7
   17958:	cmp	r7, r1
   1795c:	bne	179e4 <main@@Base+0x4704>
   17960:	b	179b0 <main@@Base+0x46d0>
   17964:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17968:	cmp	r0, #0
   1796c:	beq	17998 <main@@Base+0x46b8>
   17970:	ldr	sl, [sp, #44]	; 0x2c
   17974:	ldr	r6, [sp, #52]	; 0x34
   17978:	mov	r3, #7
   1797c:	mov	r0, sl
   17980:	mov	r2, r6
   17984:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17988:	mov	r1, r0
   1798c:	cmp	r7, r1
   17990:	bne	179e4 <main@@Base+0x4704>
   17994:	b	179b0 <main@@Base+0x46d0>
   17998:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1799c:	ldr	r6, [sp, #52]	; 0x34
   179a0:	ldr	sl, [sp, #44]	; 0x2c
   179a4:	str	r4, [fp, #-60]	; 0xffffffc4
   179a8:	cmp	r7, r1
   179ac:	bne	179e4 <main@@Base+0x4704>
   179b0:	movw	r3, #33392	; 0x8270
   179b4:	sub	r0, fp, #60	; 0x3c
   179b8:	mov	r1, r7
   179bc:	mov	r2, r6
   179c0:	str	r0, [sp]
   179c4:	mov	r0, sl
   179c8:	movt	r3, #4
   179cc:	bl	244d0 <main@@Base+0x111f0>
   179d0:	mov	r1, r0
   179d4:	cmp	r0, r7
   179d8:	cmpne	r1, r6
   179dc:	beq	17c10 <main@@Base+0x4930>
   179e0:	ldr	r4, [fp, #-60]	; 0xffffffc4
   179e4:	str	r4, [r8]
   179e8:	sub	r0, r6, r1
   179ec:	cmp	r0, #2
   179f0:	blt	17b78 <main@@Base+0x4898>
   179f4:	b	17aa8 <main@@Base+0x47c8>
   179f8:	ldr	r6, [sp, #52]	; 0x34
   179fc:	ldr	sl, [sp, #44]	; 0x2c
   17a00:	bne	17a10 <main@@Base+0x4730>
   17a04:	ldrb	r0, [r7, #2]!
   17a08:	cmp	r0, #32
   17a0c:	bhi	17a20 <main@@Base+0x4740>
   17a10:	mov	r0, sl
   17a14:	mov	r2, r6
   17a18:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17a1c:	mov	r7, r0
   17a20:	cmp	r9, r7
   17a24:	beq	17a88 <main@@Base+0x47a8>
   17a28:	mov	r4, #0
   17a2c:	cmp	r7, r6
   17a30:	str	r4, [fp, #-52]	; 0xffffffcc
   17a34:	str	r4, [fp, #-56]	; 0xffffffc8
   17a38:	str	r4, [fp, #-60]	; 0xffffffc4
   17a3c:	str	r4, [sp, #64]	; 0x40
   17a40:	beq	17adc <main@@Base+0x47fc>
   17a44:	sub	r0, fp, #56	; 0x38
   17a48:	mov	r1, r7
   17a4c:	mov	r2, r6
   17a50:	add	r3, sp, #64	; 0x40
   17a54:	str	r0, [sp]
   17a58:	mov	r0, sl
   17a5c:	bl	326c4 <flatcc_json_parser_integer@@Base>
   17a60:	cmp	r0, r7
   17a64:	beq	17aec <main@@Base+0x480c>
   17a68:	mov	r1, r0
   17a6c:	ldr	r0, [sp, #64]	; 0x40
   17a70:	cmp	r0, #0
   17a74:	beq	17afc <main@@Base+0x481c>
   17a78:	ldr	sl, [sp, #44]	; 0x2c
   17a7c:	ldr	r6, [sp, #52]	; 0x34
   17a80:	mov	r3, #8
   17a84:	b	17b14 <main@@Base+0x4834>
   17a88:	mov	r0, sl
   17a8c:	mov	r1, r9
   17a90:	mov	r2, r6
   17a94:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   17a98:	mov	r1, r0
   17a9c:	sub	r0, r6, r1
   17aa0:	cmp	r0, #2
   17aa4:	blt	17b78 <main@@Base+0x4898>
   17aa8:	ldrb	r0, [r1]
   17aac:	cmp	r0, #32
   17ab0:	bls	17ac4 <main@@Base+0x47e4>
   17ab4:	mov	r2, r1
   17ab8:	cmp	r2, r6
   17abc:	bne	17b90 <main@@Base+0x48b0>
   17ac0:	b	17c28 <main@@Base+0x4948>
   17ac4:	bne	17b78 <main@@Base+0x4898>
   17ac8:	mov	r2, r1
   17acc:	ldrb	r0, [r2, #1]!
   17ad0:	cmp	r0, #32
   17ad4:	bls	17b78 <main@@Base+0x4898>
   17ad8:	b	17b88 <main@@Base+0x48a8>
   17adc:	mov	r1, r6
   17ae0:	cmp	r7, r1
   17ae4:	bne	17b68 <main@@Base+0x4888>
   17ae8:	b	17b2c <main@@Base+0x484c>
   17aec:	mov	r1, r7
   17af0:	cmp	r7, r1
   17af4:	bne	17b68 <main@@Base+0x4888>
   17af8:	b	17b2c <main@@Base+0x484c>
   17afc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17b00:	cmp	r0, #0
   17b04:	beq	174e0 <main@@Base+0x4200>
   17b08:	ldr	sl, [sp, #44]	; 0x2c
   17b0c:	ldr	r6, [sp, #52]	; 0x34
   17b10:	mov	r3, #7
   17b14:	mov	r0, sl
   17b18:	mov	r2, r6
   17b1c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   17b20:	mov	r1, r0
   17b24:	cmp	r7, r1
   17b28:	bne	17b68 <main@@Base+0x4888>
   17b2c:	sub	r0, fp, #60	; 0x3c
   17b30:	mov	r1, r7
   17b34:	mov	r2, r6
   17b38:	str	r0, [sp]
   17b3c:	movw	r0, #33392	; 0x8270
   17b40:	movt	r0, #4
   17b44:	add	r3, r0, #12
   17b48:	mov	r0, sl
   17b4c:	bl	244d0 <main@@Base+0x111f0>
   17b50:	mov	r1, r0
   17b54:	cmp	r0, r7
   17b58:	cmpne	r1, r6
   17b5c:	beq	17c10 <main@@Base+0x4930>
   17b60:	ldr	r4, [fp, #-60]	; 0xffffffc4
   17b64:	ldr	sl, [sp, #44]	; 0x2c
   17b68:	str	r4, [r8, #4]
   17b6c:	sub	r0, r6, r1
   17b70:	cmp	r0, #2
   17b74:	bge	17aa8 <main@@Base+0x47c8>
   17b78:	mov	r0, sl
   17b7c:	mov	r2, r6
   17b80:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17b84:	mov	r2, r0
   17b88:	cmp	r2, r6
   17b8c:	beq	17c28 <main@@Base+0x4948>
   17b90:	ldrb	r0, [r2]
   17b94:	cmp	r0, #44	; 0x2c
   17b98:	bne	17c3c <main@@Base+0x495c>
   17b9c:	add	r1, r2, #1
   17ba0:	sub	r0, r6, r1
   17ba4:	cmp	r0, #2
   17ba8:	blt	17bd8 <main@@Base+0x48f8>
   17bac:	ldrb	r0, [r1]
   17bb0:	cmp	r0, #32
   17bb4:	bls	17bc8 <main@@Base+0x48e8>
   17bb8:	mov	r2, r1
   17bbc:	cmp	r2, r6
   17bc0:	bne	17bf0 <main@@Base+0x4910>
   17bc4:	b	17360 <main@@Base+0x4080>
   17bc8:	bne	17bd8 <main@@Base+0x48f8>
   17bcc:	ldrb	r0, [r2, #2]!
   17bd0:	cmp	r0, #32
   17bd4:	bhi	17be8 <main@@Base+0x4908>
   17bd8:	mov	r0, sl
   17bdc:	mov	r2, r6
   17be0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17be4:	mov	r2, r0
   17be8:	cmp	r2, r6
   17bec:	beq	17360 <main@@Base+0x4080>
   17bf0:	ldrb	r0, [r2]
   17bf4:	cmp	r0, #125	; 0x7d
   17bf8:	bne	174fc <main@@Base+0x421c>
   17bfc:	add	r1, r2, #1
   17c00:	sub	r0, r6, r1
   17c04:	cmp	r0, #2
   17c08:	blt	173a4 <main@@Base+0x40c4>
   17c0c:	b	17c5c <main@@Base+0x497c>
   17c10:	ldr	sl, [sp, #44]	; 0x2c
   17c14:	ldr	r6, [sp, #52]	; 0x34
   17c18:	mov	r3, #33	; 0x21
   17c1c:	mov	r0, sl
   17c20:	mov	r2, r6
   17c24:	b	17420 <main@@Base+0x4140>
   17c28:	mov	r4, r6
   17c2c:	sub	r0, r6, r4
   17c30:	cmp	r0, #2
   17c34:	bge	17434 <main@@Base+0x4154>
   17c38:	b	17c80 <main@@Base+0x49a0>
   17c3c:	cmp	r0, #125	; 0x7d
   17c40:	bne	1736c <main@@Base+0x408c>
   17c44:	ldr	r6, [sp, #52]	; 0x34
   17c48:	ldr	sl, [sp, #44]	; 0x2c
   17c4c:	add	r1, r2, #1
   17c50:	sub	r0, r6, r1
   17c54:	cmp	r0, #2
   17c58:	blt	173a4 <main@@Base+0x40c4>
   17c5c:	ldrb	r0, [r1]
   17c60:	cmp	r0, #32
   17c64:	bls	17388 <main@@Base+0x40a8>
   17c68:	ldr	r6, [sp, #52]	; 0x34
   17c6c:	ldr	sl, [sp, #44]	; 0x2c
   17c70:	mov	r4, r1
   17c74:	sub	r0, r6, r4
   17c78:	cmp	r0, #2
   17c7c:	bge	17434 <main@@Base+0x4154>
   17c80:	mov	r0, sl
   17c84:	mov	r1, r4
   17c88:	mov	r2, r6
   17c8c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17c90:	mov	r7, r0
   17c94:	cmp	r7, r6
   17c98:	beq	17d38 <main@@Base+0x4a58>
   17c9c:	ldrb	r0, [r7]
   17ca0:	cmp	r0, #44	; 0x2c
   17ca4:	bne	17d40 <main@@Base+0x4a60>
   17ca8:	add	r1, r7, #1
   17cac:	sub	r0, r6, r1
   17cb0:	cmp	r0, #2
   17cb4:	blt	17ce8 <main@@Base+0x4a08>
   17cb8:	ldrb	r0, [r1]
   17cbc:	cmp	r0, #32
   17cc0:	bls	17cd4 <main@@Base+0x49f4>
   17cc4:	mov	r4, r1
   17cc8:	cmp	r4, r6
   17ccc:	bne	17d00 <main@@Base+0x4a20>
   17cd0:	b	17d84 <main@@Base+0x4aa4>
   17cd4:	bne	17ce8 <main@@Base+0x4a08>
   17cd8:	ldrb	r0, [r7, #2]!
   17cdc:	cmp	r0, #32
   17ce0:	mov	r4, r7
   17ce4:	bhi	17cf8 <main@@Base+0x4a18>
   17ce8:	mov	r0, sl
   17cec:	mov	r2, r6
   17cf0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17cf4:	mov	r4, r0
   17cf8:	cmp	r4, r6
   17cfc:	beq	17d84 <main@@Base+0x4aa4>
   17d00:	ldrb	r0, [r4]
   17d04:	cmp	r0, #93	; 0x5d
   17d08:	bne	173b4 <main@@Base+0x40d4>
   17d0c:	add	r1, r4, #1
   17d10:	sub	r0, r6, r1
   17d14:	cmp	r0, #2
   17d18:	blt	1a488 <main@@Base+0x71a8>
   17d1c:	ldrb	r0, [r1]
   17d20:	cmp	r0, #32
   17d24:	bls	1a46c <main@@Base+0x718c>
   17d28:	ldr	r6, [sp, #52]	; 0x34
   17d2c:	ldr	sl, [sp, #44]	; 0x2c
   17d30:	mov	r7, r1
   17d34:	b	15aec <main@@Base+0x280c>
   17d38:	mov	r7, r6
   17d3c:	b	15aec <main@@Base+0x280c>
   17d40:	cmp	r0, #93	; 0x5d
   17d44:	bne	1903c <main@@Base+0x5d5c>
   17d48:	ldr	r6, [sp, #52]	; 0x34
   17d4c:	ldr	sl, [sp, #44]	; 0x2c
   17d50:	add	r1, r7, #1
   17d54:	sub	r0, r6, r1
   17d58:	cmp	r0, #2
   17d5c:	bge	164b8 <main@@Base+0x31d8>
   17d60:	b	1a488 <main@@Base+0x71a8>
   17d64:	ldr	r6, [fp, #-56]	; 0xffffffc8
   17d68:	ldr	r8, [sp, #52]	; 0x34
   17d6c:	ldr	sl, [sp, #44]	; 0x2c
   17d70:	str	r6, [fp, #-60]	; 0xffffffc4
   17d74:	ldr	r5, [sp, #48]	; 0x30
   17d78:	cmp	r7, r4
   17d7c:	bne	167f0 <main@@Base+0x3510>
   17d80:	b	167ac <main@@Base+0x34cc>
   17d84:	mov	r0, sl
   17d88:	mov	r1, r6
   17d8c:	b	1904c <main@@Base+0x5d6c>
   17d90:	ldr	r6, [sp, #52]	; 0x34
   17d94:	ldr	sl, [sp, #44]	; 0x2c
   17d98:	bne	17da8 <main@@Base+0x4ac8>
   17d9c:	ldrb	r0, [r4, #2]!
   17da0:	cmp	r0, #32
   17da4:	bhi	17db8 <main@@Base+0x4ad8>
   17da8:	mov	r0, sl
   17dac:	mov	r2, r6
   17db0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17db4:	mov	r4, r0
   17db8:	cmp	r4, r6
   17dbc:	mov	r2, r6
   17dc0:	beq	17e14 <main@@Base+0x4b34>
   17dc4:	ldrb	r0, [r4]
   17dc8:	cmp	r0, #93	; 0x5d
   17dcc:	bne	17e10 <main@@Base+0x4b30>
   17dd0:	ldr	r6, [sp, #52]	; 0x34
   17dd4:	ldr	sl, [sp, #44]	; 0x2c
   17dd8:	add	r1, r4, #1
   17ddc:	sub	r0, r6, r1
   17de0:	cmp	r0, #2
   17de4:	blt	1a704 <main@@Base+0x7424>
   17de8:	ldrb	r0, [r1]
   17dec:	cmp	r0, #32
   17df0:	bhi	19f68 <main@@Base+0x6c88>
   17df4:	ldr	r6, [sp, #52]	; 0x34
   17df8:	ldr	sl, [sp, #44]	; 0x2c
   17dfc:	bne	1a704 <main@@Base+0x7424>
   17e00:	ldrb	r0, [r4, #2]!
   17e04:	cmp	r0, #32
   17e08:	bhi	16a4c <main@@Base+0x376c>
   17e0c:	b	1a704 <main@@Base+0x7424>
   17e10:	mov	r2, r4
   17e14:	ldr	r6, [sp, #52]	; 0x34
   17e18:	ldr	sl, [sp, #44]	; 0x2c
   17e1c:	mov	r1, r2
   17e20:	mov	r0, sl
   17e24:	mov	r2, r6
   17e28:	add	r3, sp, #60	; 0x3c
   17e2c:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   17e30:	mov	r4, r0
   17e34:	ldr	r0, [sp, #60]	; 0x3c
   17e38:	cmp	r0, #0
   17e3c:	beq	13398 <main@@Base+0xb8>
   17e40:	ldr	r0, [sl]
   17e44:	mov	r1, #1
   17e48:	bl	2c2f4 <flatcc_builder_extend_offset_vector@@Base>
   17e4c:	cmp	r0, #0
   17e50:	beq	13398 <main@@Base+0xb8>
   17e54:	ldr	r1, [sp, #60]	; 0x3c
   17e58:	str	r1, [r0]
   17e5c:	sub	r0, r6, r4
   17e60:	cmp	r0, #2
   17e64:	blt	17e98 <main@@Base+0x4bb8>
   17e68:	ldrb	r0, [r4]
   17e6c:	cmp	r0, #32
   17e70:	bls	17e84 <main@@Base+0x4ba4>
   17e74:	mov	r2, r4
   17e78:	cmp	r2, r6
   17e7c:	bne	17eb4 <main@@Base+0x4bd4>
   17e80:	b	19560 <main@@Base+0x6280>
   17e84:	bne	17e98 <main@@Base+0x4bb8>
   17e88:	mov	r2, r4
   17e8c:	ldrb	r0, [r2, #1]!
   17e90:	cmp	r0, #32
   17e94:	bhi	17eac <main@@Base+0x4bcc>
   17e98:	mov	r0, sl
   17e9c:	mov	r1, r4
   17ea0:	mov	r2, r6
   17ea4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17ea8:	mov	r2, r0
   17eac:	cmp	r2, r6
   17eb0:	beq	19560 <main@@Base+0x6280>
   17eb4:	ldrb	r0, [r2]
   17eb8:	cmp	r0, #44	; 0x2c
   17ebc:	bne	19f3c <main@@Base+0x6c5c>
   17ec0:	add	r1, r2, #1
   17ec4:	sub	r0, r6, r1
   17ec8:	cmp	r0, #2
   17ecc:	blt	17efc <main@@Base+0x4c1c>
   17ed0:	ldrb	r0, [r1]
   17ed4:	cmp	r0, #32
   17ed8:	bls	17eec <main@@Base+0x4c0c>
   17edc:	mov	r2, r1
   17ee0:	cmp	r2, r6
   17ee4:	bne	17f14 <main@@Base+0x4c34>
   17ee8:	b	19f9c <main@@Base+0x6cbc>
   17eec:	bne	17efc <main@@Base+0x4c1c>
   17ef0:	ldrb	r0, [r2, #2]!
   17ef4:	cmp	r0, #32
   17ef8:	bhi	17f0c <main@@Base+0x4c2c>
   17efc:	mov	r0, sl
   17f00:	mov	r2, r6
   17f04:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17f08:	mov	r2, r0
   17f0c:	cmp	r2, r6
   17f10:	beq	19f9c <main@@Base+0x6cbc>
   17f14:	ldrb	r0, [r2]
   17f18:	cmp	r0, #93	; 0x5d
   17f1c:	bne	17e1c <main@@Base+0x4b3c>
   17f20:	add	r1, r2, #1
   17f24:	sub	r0, r6, r1
   17f28:	cmp	r0, #2
   17f2c:	bge	19f5c <main@@Base+0x6c7c>
   17f30:	b	1a704 <main@@Base+0x7424>
   17f34:	mov	r4, r6
   17f38:	b	15a1c <main@@Base+0x273c>
   17f3c:	ldr	r6, [sp, #52]	; 0x34
   17f40:	ldr	sl, [sp, #44]	; 0x2c
   17f44:	ldr	r5, [sp, #48]	; 0x30
   17f48:	bne	17f5c <main@@Base+0x4c7c>
   17f4c:	ldrb	r0, [r2, #2]!
   17f50:	cmp	r0, #32
   17f54:	mov	r4, r2
   17f58:	bhi	1db2c <main@@Base+0xa84c>
   17f5c:	mov	r0, sl
   17f60:	mov	r2, r6
   17f64:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17f68:	mov	r4, r0
   17f6c:	sub	r0, r6, r4
   17f70:	cmp	r0, #2
   17f74:	bge	1db38 <main@@Base+0xa858>
   17f78:	b	15d38 <main@@Base+0x2a58>
   17f7c:	cmp	r0, #93	; 0x5d
   17f80:	bne	19f78 <main@@Base+0x6c98>
   17f84:	ldr	r6, [sp, #52]	; 0x34
   17f88:	ldr	sl, [sp, #44]	; 0x2c
   17f8c:	add	r1, r2, #1
   17f90:	sub	r0, r6, r1
   17f94:	cmp	r0, #2
   17f98:	blt	1a340 <main@@Base+0x7060>
   17f9c:	ldrb	r0, [r1]
   17fa0:	cmp	r0, #32
   17fa4:	bls	1a324 <main@@Base+0x7044>
   17fa8:	ldr	r6, [sp, #52]	; 0x34
   17fac:	ldr	sl, [sp, #44]	; 0x2c
   17fb0:	mov	r4, r1
   17fb4:	b	15a1c <main@@Base+0x273c>
   17fb8:	mov	r0, sl
   17fbc:	mov	r1, r6
   17fc0:	b	19f88 <main@@Base+0x6ca8>
   17fc4:	ldr	r6, [sp, #52]	; 0x34
   17fc8:	ldr	sl, [sp, #44]	; 0x2c
   17fcc:	bne	17fdc <main@@Base+0x4cfc>
   17fd0:	ldrb	r0, [r4, #2]!
   17fd4:	cmp	r0, #32
   17fd8:	bhi	17fec <main@@Base+0x4d0c>
   17fdc:	mov	r0, sl
   17fe0:	mov	r2, r6
   17fe4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   17fe8:	mov	r4, r0
   17fec:	cmp	r4, r6
   17ff0:	mov	r2, r6
   17ff4:	beq	18048 <main@@Base+0x4d68>
   17ff8:	ldrb	r0, [r4]
   17ffc:	cmp	r0, #125	; 0x7d
   18000:	bne	18044 <main@@Base+0x4d64>
   18004:	ldr	r6, [sp, #52]	; 0x34
   18008:	ldr	sl, [sp, #44]	; 0x2c
   1800c:	add	r1, r4, #1
   18010:	sub	r0, r6, r1
   18014:	cmp	r0, #2
   18018:	blt	1a670 <main@@Base+0x7390>
   1801c:	ldrb	r0, [r1]
   18020:	cmp	r0, #32
   18024:	bhi	192ac <main@@Base+0x5fcc>
   18028:	ldr	r6, [sp, #52]	; 0x34
   1802c:	ldr	sl, [sp, #44]	; 0x2c
   18030:	bne	1a670 <main@@Base+0x7390>
   18034:	ldrb	r0, [r4, #2]!
   18038:	cmp	r0, #32
   1803c:	bhi	158c0 <main@@Base+0x25e0>
   18040:	b	1a670 <main@@Base+0x7390>
   18044:	mov	r2, r4
   18048:	ldr	r6, [sp, #52]	; 0x34
   1804c:	ldr	sl, [sp, #44]	; 0x2c
   18050:	cmp	r2, r6
   18054:	mov	r8, r6
   18058:	beq	180ac <main@@Base+0x4dcc>
   1805c:	ldrb	r0, [r2]
   18060:	cmp	r0, #46	; 0x2e
   18064:	beq	18080 <main@@Base+0x4da0>
   18068:	cmp	r0, #34	; 0x22
   1806c:	bne	1809c <main@@Base+0x4dbc>
   18070:	ldr	r0, [sp, #40]	; 0x28
   18074:	mov	r1, #0
   18078:	add	r8, r2, #1
   1807c:	b	180a8 <main@@Base+0x4dc8>
   18080:	mov	r1, r2
   18084:	mov	r0, sl
   18088:	mov	r2, r6
   1808c:	mov	r3, #5
   18090:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18094:	mov	r8, r0
   18098:	b	180ac <main@@Base+0x4dcc>
   1809c:	ldr	r0, [sp, #40]	; 0x28
   180a0:	mov	r1, #1
   180a4:	mov	r8, r2
   180a8:	str	r1, [r0]
   180ac:	sub	lr, r6, r8
   180b0:	mov	r0, #8
   180b4:	cmp	lr, #8
   180b8:	movcc	r0, lr
   180bc:	and	r0, r0, #15
   180c0:	sub	r7, r0, #1
   180c4:	cmp	r7, #7
   180c8:	bhi	18268 <main@@Base+0x4f88>
   180cc:	add	r4, pc, #32
   180d0:	mov	r1, #0
   180d4:	mov	ip, #0
   180d8:	mov	r9, #0
   180dc:	mov	r6, #0
   180e0:	mov	r3, #0
   180e4:	mov	r5, #0
   180e8:	mov	r2, #0
   180ec:	mov	r0, #0
   180f0:	ldr	pc, [r4, r7, lsl #2]
   180f4:	andeq	r8, r1, r8, asr r1
   180f8:	andeq	r8, r1, r0, asr r1
   180fc:	andeq	r8, r1, r8, asr #2
   18100:	andeq	r8, r1, r0, asr #2
   18104:	andeq	r8, r1, r4, lsr r1
   18108:	andeq	r8, r1, r8, lsr #2
   1810c:	andeq	r8, r1, r8, lsl r1
   18110:	andeq	r8, r1, r4, lsl r1
   18114:	ldrb	ip, [r8, #7]
   18118:	ldrb	r0, [r8, #6]
   1811c:	mov	r9, r1
   18120:	orr	r0, ip, r0, lsl #8
   18124:	mov	r1, r0
   18128:	ldrb	r0, [r8, #5]
   1812c:	mov	r6, r9
   18130:	orr	r1, r1, r0, lsl #16
   18134:	ldrb	r0, [r8, #4]
   18138:	mov	r3, r6
   1813c:	orr	r1, r1, r0, lsl #24
   18140:	ldrb	r0, [r8, #3]
   18144:	orr	r5, r0, r3
   18148:	ldrb	r0, [r8, #2]
   1814c:	orr	r2, r5, r0, lsl #8
   18150:	ldrb	r0, [r8, #1]
   18154:	orr	r0, r2, r0, lsl #16
   18158:	ldrb	r2, [r8]
   1815c:	orr	r2, r0, r2, lsl #24
   18160:	movw	r0, #0
   18164:	movt	r0, #25956	; 0x6564
   18168:	subs	r0, r1, r0
   1816c:	movw	r0, #29556	; 0x7374
   18170:	movt	r0, #28261	; 0x6e65
   18174:	sbcs	r0, r2, r0
   18178:	bcs	181e8 <main@@Base+0x4f08>
   1817c:	ldr	r6, [sp, #52]	; 0x34
   18180:	movw	r0, #29793	; 0x7461
   18184:	movt	r0, #25697	; 0x6461
   18188:	teq	r2, r0
   1818c:	bne	18268 <main@@Base+0x4f88>
   18190:	cmp	lr, #5
   18194:	mov	r1, r8
   18198:	blt	18560 <main@@Base+0x5280>
   1819c:	ldr	r1, [sp, #40]	; 0x28
   181a0:	mov	r2, r8
   181a4:	ldrb	r0, [r2, #4]!
   181a8:	ldr	r1, [r1]
   181ac:	cmp	r1, #0
   181b0:	beq	182f0 <main@@Base+0x5010>
   181b4:	cmp	r0, #33	; 0x21
   181b8:	bcc	181c8 <main@@Base+0x4ee8>
   181bc:	cmp	r0, #58	; 0x3a
   181c0:	mov	r1, r8
   181c4:	bne	18560 <main@@Base+0x5280>
   181c8:	ldr	r0, [sp, #40]	; 0x28
   181cc:	mov	r1, #0
   181d0:	str	r1, [r0]
   181d4:	ldr	r0, [sp, #52]	; 0x34
   181d8:	sub	r0, r0, r2
   181dc:	cmp	r0, #2
   181e0:	bge	18310 <main@@Base+0x5030>
   181e4:	b	183c4 <main@@Base+0x50e4>
   181e8:	movw	r0, #29292	; 0x726c
   181ec:	lsr	r3, r1, #8
   181f0:	movw	r7, #29793	; 0x7461
   181f4:	movt	r0, #117	; 0x75
   181f8:	orr	r3, r3, r2, lsl #24
   181fc:	movt	r7, #25697	; 0x6461
   18200:	eor	r0, r0, r2, lsr #8
   18204:	eor	r3, r3, r7
   18208:	orrs	r0, r3, r0
   1820c:	bne	18274 <main@@Base+0x4f94>
   18210:	cmp	lr, #8
   18214:	mov	r1, r8
   18218:	blt	185d0 <main@@Base+0x52f0>
   1821c:	ldr	r1, [sp, #40]	; 0x28
   18220:	mov	r2, r8
   18224:	ldrb	r0, [r2, #7]!
   18228:	ldr	r1, [r1]
   1822c:	cmp	r1, #0
   18230:	beq	18330 <main@@Base+0x5050>
   18234:	cmp	r0, #33	; 0x21
   18238:	bcc	18248 <main@@Base+0x4f68>
   1823c:	cmp	r0, #58	; 0x3a
   18240:	mov	r1, r8
   18244:	bne	185d0 <main@@Base+0x52f0>
   18248:	ldr	r0, [sp, #40]	; 0x28
   1824c:	mov	r1, #0
   18250:	str	r1, [r0]
   18254:	ldr	r0, [sp, #52]	; 0x34
   18258:	sub	r0, r0, r2
   1825c:	cmp	r0, #2
   18260:	bge	18350 <main@@Base+0x5070>
   18264:	b	18448 <main@@Base+0x5168>
   18268:	mov	r0, sl
   1826c:	mov	r1, r8
   18270:	b	186b8 <main@@Base+0x53d8>
   18274:	movw	r0, #29556	; 0x7374
   18278:	bfc	r1, #0, #16
   1827c:	movt	r0, #28261	; 0x6e65
   18280:	eor	r0, r2, r0
   18284:	movw	r2, #0
   18288:	movt	r2, #25956	; 0x6564
   1828c:	eor	r1, r1, r2
   18290:	orrs	r0, r1, r0
   18294:	bne	186a8 <main@@Base+0x53c8>
   18298:	cmp	lr, #7
   1829c:	mov	r1, r8
   182a0:	blt	18640 <main@@Base+0x5360>
   182a4:	ldr	r1, [sp, #40]	; 0x28
   182a8:	mov	r2, r8
   182ac:	ldrb	r0, [r2, #6]!
   182b0:	ldr	r1, [r1]
   182b4:	cmp	r1, #0
   182b8:	beq	18370 <main@@Base+0x5090>
   182bc:	cmp	r0, #33	; 0x21
   182c0:	bcc	182d0 <main@@Base+0x4ff0>
   182c4:	cmp	r0, #58	; 0x3a
   182c8:	mov	r1, r8
   182cc:	bne	18640 <main@@Base+0x5360>
   182d0:	ldr	r0, [sp, #40]	; 0x28
   182d4:	mov	r1, #0
   182d8:	str	r1, [r0]
   182dc:	ldr	r0, [sp, #52]	; 0x34
   182e0:	sub	r0, r0, r2
   182e4:	cmp	r0, #2
   182e8:	bge	18390 <main@@Base+0x50b0>
   182ec:	b	184cc <main@@Base+0x51ec>
   182f0:	cmp	r0, #34	; 0x22
   182f4:	mov	r1, r8
   182f8:	bne	18560 <main@@Base+0x5280>
   182fc:	add	r2, r8, #5
   18300:	ldr	r0, [sp, #52]	; 0x34
   18304:	sub	r0, r0, r2
   18308:	cmp	r0, #2
   1830c:	blt	183c4 <main@@Base+0x50e4>
   18310:	ldrb	r0, [r2]
   18314:	cmp	r0, #32
   18318:	bls	183b0 <main@@Base+0x50d0>
   1831c:	mov	r1, r2
   18320:	ldr	r0, [sp, #52]	; 0x34
   18324:	cmp	r1, r0
   18328:	bne	183e4 <main@@Base+0x5104>
   1832c:	b	18420 <main@@Base+0x5140>
   18330:	cmp	r0, #34	; 0x22
   18334:	mov	r1, r8
   18338:	bne	185d0 <main@@Base+0x52f0>
   1833c:	add	r2, r8, #8
   18340:	ldr	r0, [sp, #52]	; 0x34
   18344:	sub	r0, r0, r2
   18348:	cmp	r0, #2
   1834c:	blt	18448 <main@@Base+0x5168>
   18350:	ldrb	r0, [r2]
   18354:	cmp	r0, #32
   18358:	bls	18434 <main@@Base+0x5154>
   1835c:	mov	r1, r2
   18360:	ldr	r0, [sp, #52]	; 0x34
   18364:	cmp	r1, r0
   18368:	bne	18468 <main@@Base+0x5188>
   1836c:	b	184a4 <main@@Base+0x51c4>
   18370:	cmp	r0, #34	; 0x22
   18374:	mov	r1, r8
   18378:	bne	18640 <main@@Base+0x5360>
   1837c:	add	r2, r8, #7
   18380:	ldr	r0, [sp, #52]	; 0x34
   18384:	sub	r0, r0, r2
   18388:	cmp	r0, #2
   1838c:	blt	184cc <main@@Base+0x51ec>
   18390:	ldrb	r0, [r2]
   18394:	cmp	r0, #32
   18398:	bls	184b8 <main@@Base+0x51d8>
   1839c:	mov	r1, r2
   183a0:	ldr	r0, [sp, #52]	; 0x34
   183a4:	cmp	r1, r0
   183a8:	bne	184ec <main@@Base+0x520c>
   183ac:	b	18528 <main@@Base+0x5248>
   183b0:	bne	183c4 <main@@Base+0x50e4>
   183b4:	mov	r1, r2
   183b8:	ldrb	r0, [r1, #1]!
   183bc:	cmp	r0, #32
   183c0:	bhi	183d8 <main@@Base+0x50f8>
   183c4:	mov	r1, r2
   183c8:	ldr	r0, [sp, #44]	; 0x2c
   183cc:	ldr	r2, [sp, #52]	; 0x34
   183d0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   183d4:	mov	r1, r0
   183d8:	ldr	r0, [sp, #52]	; 0x34
   183dc:	cmp	r1, r0
   183e0:	beq	18420 <main@@Base+0x5140>
   183e4:	ldrb	r0, [r1]
   183e8:	cmp	r0, #58	; 0x3a
   183ec:	bne	18420 <main@@Base+0x5140>
   183f0:	ldr	r0, [sp, #52]	; 0x34
   183f4:	add	r2, r1, #1
   183f8:	sub	r0, r0, r2
   183fc:	cmp	r0, #2
   18400:	blt	1854c <main@@Base+0x526c>
   18404:	ldrb	r0, [r2]
   18408:	cmp	r0, #32
   1840c:	bls	1853c <main@@Base+0x525c>
   18410:	mov	r1, r2
   18414:	cmp	r8, r1
   18418:	bne	18568 <main@@Base+0x5288>
   1841c:	b	186a8 <main@@Base+0x53c8>
   18420:	ldr	r0, [sp, #44]	; 0x2c
   18424:	ldr	r2, [sp, #52]	; 0x34
   18428:	mov	r3, #4
   1842c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18430:	b	1855c <main@@Base+0x527c>
   18434:	bne	18448 <main@@Base+0x5168>
   18438:	mov	r1, r2
   1843c:	ldrb	r0, [r1, #1]!
   18440:	cmp	r0, #32
   18444:	bhi	1845c <main@@Base+0x517c>
   18448:	mov	r1, r2
   1844c:	ldr	r0, [sp, #44]	; 0x2c
   18450:	ldr	r2, [sp, #52]	; 0x34
   18454:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18458:	mov	r1, r0
   1845c:	ldr	r0, [sp, #52]	; 0x34
   18460:	cmp	r1, r0
   18464:	beq	184a4 <main@@Base+0x51c4>
   18468:	ldrb	r0, [r1]
   1846c:	cmp	r0, #58	; 0x3a
   18470:	bne	184a4 <main@@Base+0x51c4>
   18474:	ldr	r0, [sp, #52]	; 0x34
   18478:	add	r2, r1, #1
   1847c:	sub	r0, r0, r2
   18480:	cmp	r0, #2
   18484:	blt	185bc <main@@Base+0x52dc>
   18488:	ldrb	r0, [r2]
   1848c:	cmp	r0, #32
   18490:	bls	185ac <main@@Base+0x52cc>
   18494:	mov	r1, r2
   18498:	cmp	r8, r1
   1849c:	bne	185d8 <main@@Base+0x52f8>
   184a0:	b	186a8 <main@@Base+0x53c8>
   184a4:	ldr	r0, [sp, #44]	; 0x2c
   184a8:	ldr	r2, [sp, #52]	; 0x34
   184ac:	mov	r3, #4
   184b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   184b4:	b	185cc <main@@Base+0x52ec>
   184b8:	bne	184cc <main@@Base+0x51ec>
   184bc:	mov	r1, r2
   184c0:	ldrb	r0, [r1, #1]!
   184c4:	cmp	r0, #32
   184c8:	bhi	184e0 <main@@Base+0x5200>
   184cc:	mov	r1, r2
   184d0:	ldr	r0, [sp, #44]	; 0x2c
   184d4:	ldr	r2, [sp, #52]	; 0x34
   184d8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   184dc:	mov	r1, r0
   184e0:	ldr	r0, [sp, #52]	; 0x34
   184e4:	cmp	r1, r0
   184e8:	beq	18528 <main@@Base+0x5248>
   184ec:	ldrb	r0, [r1]
   184f0:	cmp	r0, #58	; 0x3a
   184f4:	bne	18528 <main@@Base+0x5248>
   184f8:	ldr	r0, [sp, #52]	; 0x34
   184fc:	add	r2, r1, #1
   18500:	sub	r0, r0, r2
   18504:	cmp	r0, #2
   18508:	blt	1862c <main@@Base+0x534c>
   1850c:	ldrb	r0, [r2]
   18510:	cmp	r0, #32
   18514:	bls	1861c <main@@Base+0x533c>
   18518:	mov	r1, r2
   1851c:	cmp	r8, r1
   18520:	bne	18648 <main@@Base+0x5368>
   18524:	b	186a8 <main@@Base+0x53c8>
   18528:	ldr	r0, [sp, #44]	; 0x2c
   1852c:	ldr	r2, [sp, #52]	; 0x34
   18530:	mov	r3, #4
   18534:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18538:	b	1863c <main@@Base+0x535c>
   1853c:	bne	1854c <main@@Base+0x526c>
   18540:	ldrb	r0, [r1, #2]!
   18544:	cmp	r0, #32
   18548:	bhi	18560 <main@@Base+0x5280>
   1854c:	mov	r1, r2
   18550:	ldr	r0, [sp, #44]	; 0x2c
   18554:	ldr	r2, [sp, #52]	; 0x34
   18558:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1855c:	mov	r1, r0
   18560:	cmp	r8, r1
   18564:	beq	186a8 <main@@Base+0x53c8>
   18568:	mov	r0, #0
   1856c:	ldr	r2, [sp, #52]	; 0x34
   18570:	sub	r3, fp, #56	; 0x38
   18574:	str	r0, [sp]
   18578:	ldr	r0, [sp, #44]	; 0x2c
   1857c:	bl	32834 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   18580:	mov	r4, r0
   18584:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18588:	cmp	r0, #0
   1858c:	beq	1a318 <main@@Base+0x7038>
   18590:	ldr	r0, [sp, #44]	; 0x2c
   18594:	mov	r1, #0
   18598:	ldr	r0, [r0]
   1859c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   185a0:	cmp	r0, #0
   185a4:	bne	18688 <main@@Base+0x53a8>
   185a8:	b	1a318 <main@@Base+0x7038>
   185ac:	bne	185bc <main@@Base+0x52dc>
   185b0:	ldrb	r0, [r1, #2]!
   185b4:	cmp	r0, #32
   185b8:	bhi	185d0 <main@@Base+0x52f0>
   185bc:	mov	r1, r2
   185c0:	ldr	r0, [sp, #44]	; 0x2c
   185c4:	ldr	r2, [sp, #52]	; 0x34
   185c8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   185cc:	mov	r1, r0
   185d0:	cmp	r8, r1
   185d4:	beq	186a8 <main@@Base+0x53c8>
   185d8:	mov	r0, #1
   185dc:	ldr	r2, [sp, #52]	; 0x34
   185e0:	sub	r3, fp, #56	; 0x38
   185e4:	str	r0, [sp]
   185e8:	ldr	r0, [sp, #44]	; 0x2c
   185ec:	bl	32834 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   185f0:	mov	r4, r0
   185f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   185f8:	cmp	r0, #0
   185fc:	beq	1a318 <main@@Base+0x7038>
   18600:	ldr	r0, [sp, #44]	; 0x2c
   18604:	mov	r1, #1
   18608:	ldr	r0, [r0]
   1860c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   18610:	cmp	r0, #0
   18614:	bne	18688 <main@@Base+0x53a8>
   18618:	b	1a318 <main@@Base+0x7038>
   1861c:	bne	1862c <main@@Base+0x534c>
   18620:	ldrb	r0, [r1, #2]!
   18624:	cmp	r0, #32
   18628:	bhi	18640 <main@@Base+0x5360>
   1862c:	mov	r1, r2
   18630:	ldr	r0, [sp, #44]	; 0x2c
   18634:	ldr	r2, [sp, #52]	; 0x34
   18638:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1863c:	mov	r1, r0
   18640:	cmp	r8, r1
   18644:	beq	186a8 <main@@Base+0x53c8>
   18648:	mov	r0, #0
   1864c:	ldr	r2, [sp, #52]	; 0x34
   18650:	sub	r3, fp, #56	; 0x38
   18654:	str	r0, [sp]
   18658:	ldr	r0, [sp, #44]	; 0x2c
   1865c:	bl	32834 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   18660:	mov	r4, r0
   18664:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18668:	cmp	r0, #0
   1866c:	beq	1a318 <main@@Base+0x7038>
   18670:	ldr	r0, [sp, #44]	; 0x2c
   18674:	mov	r1, #2
   18678:	ldr	r0, [r0]
   1867c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   18680:	cmp	r0, #0
   18684:	beq	1a318 <main@@Base+0x7038>
   18688:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1868c:	str	r1, [r0]
   18690:	ldr	r6, [sp, #52]	; 0x34
   18694:	ldr	sl, [sp, #44]	; 0x2c
   18698:	sub	r0, r6, r4
   1869c:	cmp	r0, #2
   186a0:	blt	18700 <main@@Base+0x5420>
   186a4:	b	186d0 <main@@Base+0x53f0>
   186a8:	ldr	sl, [sp, #44]	; 0x2c
   186ac:	ldr	r6, [sp, #52]	; 0x34
   186b0:	mov	r1, r8
   186b4:	mov	r0, sl
   186b8:	mov	r2, r6
   186bc:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   186c0:	mov	r4, r0
   186c4:	sub	r0, r6, r4
   186c8:	cmp	r0, #2
   186cc:	blt	18700 <main@@Base+0x5420>
   186d0:	ldrb	r0, [r4]
   186d4:	cmp	r0, #32
   186d8:	bls	186ec <main@@Base+0x540c>
   186dc:	mov	r2, r4
   186e0:	cmp	r2, r6
   186e4:	bne	1871c <main@@Base+0x543c>
   186e8:	b	19058 <main@@Base+0x5d78>
   186ec:	bne	18700 <main@@Base+0x5420>
   186f0:	mov	r2, r4
   186f4:	ldrb	r0, [r2, #1]!
   186f8:	cmp	r0, #32
   186fc:	bhi	18714 <main@@Base+0x5434>
   18700:	mov	r0, sl
   18704:	mov	r1, r4
   18708:	mov	r2, r6
   1870c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18710:	mov	r2, r0
   18714:	cmp	r2, r6
   18718:	beq	19058 <main@@Base+0x5d78>
   1871c:	ldrb	r0, [r2]
   18720:	cmp	r0, #44	; 0x2c
   18724:	bne	19280 <main@@Base+0x5fa0>
   18728:	add	r1, r2, #1
   1872c:	sub	r0, r6, r1
   18730:	cmp	r0, #2
   18734:	blt	18764 <main@@Base+0x5484>
   18738:	ldrb	r0, [r1]
   1873c:	cmp	r0, #32
   18740:	bls	18754 <main@@Base+0x5474>
   18744:	mov	r2, r1
   18748:	cmp	r2, r6
   1874c:	bne	1877c <main@@Base+0x549c>
   18750:	b	192e0 <main@@Base+0x6000>
   18754:	bne	18764 <main@@Base+0x5484>
   18758:	ldrb	r0, [r2, #2]!
   1875c:	cmp	r0, #32
   18760:	bhi	18774 <main@@Base+0x5494>
   18764:	mov	r0, sl
   18768:	mov	r2, r6
   1876c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18770:	mov	r2, r0
   18774:	cmp	r2, r6
   18778:	beq	192e0 <main@@Base+0x6000>
   1877c:	ldrb	r0, [r2]
   18780:	cmp	r0, #125	; 0x7d
   18784:	bne	18050 <main@@Base+0x4d70>
   18788:	add	r1, r2, #1
   1878c:	sub	r0, r6, r1
   18790:	cmp	r0, #2
   18794:	bge	192a0 <main@@Base+0x5fc0>
   18798:	b	1a670 <main@@Base+0x7390>
   1879c:	ldr	r6, [sp, #52]	; 0x34
   187a0:	ldr	sl, [sp, #44]	; 0x2c
   187a4:	bne	187b4 <main@@Base+0x54d4>
   187a8:	ldrb	r0, [r4, #2]!
   187ac:	cmp	r0, #32
   187b0:	bhi	187c4 <main@@Base+0x54e4>
   187b4:	mov	r0, sl
   187b8:	mov	r2, r6
   187bc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   187c0:	mov	r4, r0
   187c4:	cmp	r7, r4
   187c8:	beq	1882c <main@@Base+0x554c>
   187cc:	ldr	r0, [sl]
   187d0:	mov	r1, #8
   187d4:	mov	r2, #8
   187d8:	mvn	r3, #-536870912	; 0xe0000000
   187dc:	bl	2caac <flatcc_builder_start_vector@@Base>
   187e0:	cmp	r0, #0
   187e4:	bne	1dcec <main@@Base+0xaa0c>
   187e8:	cmp	r4, r6
   187ec:	beq	18838 <main@@Base+0x5558>
   187f0:	ldrb	r0, [r4]
   187f4:	cmp	r0, #91	; 0x5b
   187f8:	bne	18838 <main@@Base+0x5558>
   187fc:	add	r1, r4, #1
   18800:	sub	r0, r6, r1
   18804:	cmp	r0, #2
   18808:	blt	19080 <main@@Base+0x5da0>
   1880c:	ldrb	r0, [r1]
   18810:	cmp	r0, #32
   18814:	bls	19070 <main@@Base+0x5d90>
   18818:	mov	r4, r1
   1881c:	ldr	r7, [sp, #52]	; 0x34
   18820:	cmp	r4, r7
   18824:	bne	1909c <main@@Base+0x5dbc>
   18828:	b	190f4 <main@@Base+0x5e14>
   1882c:	mov	r0, sl
   18830:	mov	r1, r7
   18834:	b	1db1c <main@@Base+0xa83c>
   18838:	ldr	sl, [sp, #44]	; 0x2c
   1883c:	mov	r1, r4
   18840:	mov	r2, r6
   18844:	mov	r3, #22
   18848:	mov	r0, sl
   1884c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18850:	mov	r4, r0
   18854:	ldr	r0, [sl]
   18858:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   1885c:	cmp	r0, #0
   18860:	str	r0, [sp, #60]	; 0x3c
   18864:	beq	1dccc <main@@Base+0xa9ec>
   18868:	ldr	r0, [sl]
   1886c:	mov	r1, #33	; 0x21
   18870:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   18874:	cmp	r0, #0
   18878:	beq	1dccc <main@@Base+0xa9ec>
   1887c:	ldr	r1, [sp, #60]	; 0x3c
   18880:	ldr	r6, [sp, #52]	; 0x34
   18884:	str	r1, [r0]
   18888:	b	1db28 <main@@Base+0xa848>
   1888c:	mov	r6, r0
   18890:	ldr	r8, [sp, #52]	; 0x34
   18894:	ldr	sl, [sp, #44]	; 0x2c
   18898:	str	r6, [fp, #-60]	; 0xffffffc4
   1889c:	ldr	r5, [sp, #48]	; 0x30
   188a0:	cmp	r7, r4
   188a4:	bne	188e8 <main@@Base+0x5608>
   188a8:	movw	r3, #33032	; 0x8108
   188ac:	sub	r0, fp, #60	; 0x3c
   188b0:	mov	r1, r7
   188b4:	mov	r2, r8
   188b8:	mov	r5, r8
   188bc:	str	r0, [sp]
   188c0:	mov	r0, sl
   188c4:	movt	r3, #4
   188c8:	bl	23fac <main@@Base+0x10ccc>
   188cc:	mov	r4, r0
   188d0:	cmp	r0, r7
   188d4:	cmpne	r4, r5
   188d8:	beq	1dd30 <main@@Base+0xaa50>
   188dc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   188e0:	ldr	sl, [sp, #44]	; 0x2c
   188e4:	ldr	r5, [sp, #48]	; 0x30
   188e8:	cmp	r6, #0
   188ec:	bne	188fc <main@@Base+0x561c>
   188f0:	ldrb	r0, [sl, #8]
   188f4:	tst	r0, #2
   188f8:	beq	15d28 <main@@Base+0x2a48>
   188fc:	ldr	r0, [sl]
   18900:	mov	r1, #20
   18904:	mov	r2, #4
   18908:	mov	r3, #4
   1890c:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   18910:	cmp	r0, #0
   18914:	beq	1dd30 <main@@Base+0xaa50>
   18918:	str	r6, [r0]
   1891c:	b	15d28 <main@@Base+0x2a48>
   18920:	ldr	r6, [sp, #52]	; 0x34
   18924:	ldr	sl, [sp, #44]	; 0x2c
   18928:	bne	18938 <main@@Base+0x5658>
   1892c:	ldrb	r0, [r4, #2]!
   18930:	cmp	r0, #32
   18934:	bhi	18948 <main@@Base+0x5668>
   18938:	mov	r0, sl
   1893c:	mov	r2, r6
   18940:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18944:	mov	r4, r0
   18948:	cmp	r4, r6
   1894c:	beq	189ac <main@@Base+0x56cc>
   18950:	ldrb	r0, [r4]
   18954:	cmp	r0, #93	; 0x5d
   18958:	bne	189a8 <main@@Base+0x56c8>
   1895c:	ldr	r6, [sp, #52]	; 0x34
   18960:	ldr	sl, [sp, #44]	; 0x2c
   18964:	add	r1, r4, #1
   18968:	sub	r0, r6, r1
   1896c:	cmp	r0, #2
   18970:	blt	18998 <main@@Base+0x56b8>
   18974:	ldrb	r0, [r1]
   18978:	cmp	r0, #32
   1897c:	bhi	1a06c <main@@Base+0x6d8c>
   18980:	ldr	r6, [sp, #52]	; 0x34
   18984:	ldr	sl, [sp, #44]	; 0x2c
   18988:	bne	18998 <main@@Base+0x56b8>
   1898c:	ldrb	r0, [r4, #2]!
   18990:	cmp	r0, #32
   18994:	bhi	16f38 <main@@Base+0x3c58>
   18998:	mov	r0, sl
   1899c:	mov	r2, r6
   189a0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   189a4:	b	16f34 <main@@Base+0x3c54>
   189a8:	mov	r6, r4
   189ac:	mov	r0, #0
   189b0:	mov	r1, #1
   189b4:	str	r0, [sp, #68]	; 0x44
   189b8:	str	r0, [sp, #64]	; 0x40
   189bc:	ldr	r0, [sp, #44]	; 0x2c
   189c0:	ldr	r0, [r0]
   189c4:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   189c8:	cmp	r0, #0
   189cc:	beq	1dd00 <main@@Base+0xaa20>
   189d0:	mov	r4, r6
   189d4:	ldr	r6, [sp, #52]	; 0x34
   189d8:	ldr	sl, [sp, #44]	; 0x2c
   189dc:	mov	r7, r0
   189e0:	mov	r0, #0
   189e4:	cmp	r4, r6
   189e8:	str	r0, [fp, #-52]	; 0xffffffcc
   189ec:	str	r0, [fp, #-56]	; 0xffffffc8
   189f0:	str	r0, [sp, #68]	; 0x44
   189f4:	str	r0, [sp, #64]	; 0x40
   189f8:	str	r0, [fp, #-60]	; 0xffffffc4
   189fc:	beq	18a5c <main@@Base+0x577c>
   18a00:	sub	r0, fp, #56	; 0x38
   18a04:	mov	r1, r4
   18a08:	mov	r2, r6
   18a0c:	sub	r3, fp, #60	; 0x3c
   18a10:	str	r0, [sp]
   18a14:	mov	r0, sl
   18a18:	bl	326c4 <flatcc_json_parser_integer@@Base>
   18a1c:	cmp	r0, r4
   18a20:	beq	18a70 <main@@Base+0x5790>
   18a24:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18a28:	mov	r1, r0
   18a2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18a34:	cmp	r2, #0
   18a38:	beq	18a88 <main@@Base+0x57a8>
   18a3c:	rsbs	r2, r0, #0
   18a40:	mov	r2, #-2147483648	; 0x80000000
   18a44:	sbcs	r2, r2, r3
   18a48:	bcs	18ac0 <main@@Base+0x57e0>
   18a4c:	ldr	sl, [sp, #44]	; 0x2c
   18a50:	ldr	r6, [sp, #52]	; 0x34
   18a54:	mov	r3, #8
   18a58:	b	18a9c <main@@Base+0x57bc>
   18a5c:	mov	r3, #0
   18a60:	mov	r1, r6
   18a64:	cmp	r4, r1
   18a68:	bne	18b20 <main@@Base+0x5840>
   18a6c:	b	18ae0 <main@@Base+0x5800>
   18a70:	mov	r0, #0
   18a74:	mov	r3, #0
   18a78:	mov	r1, r4
   18a7c:	cmp	r4, r1
   18a80:	bne	18b20 <main@@Base+0x5840>
   18a84:	b	18ae0 <main@@Base+0x5800>
   18a88:	cmn	r3, #1
   18a8c:	bgt	18ac8 <main@@Base+0x57e8>
   18a90:	ldr	sl, [sp, #44]	; 0x2c
   18a94:	ldr	r6, [sp, #52]	; 0x34
   18a98:	mov	r3, #7
   18a9c:	mov	r0, sl
   18aa0:	mov	r2, r6
   18aa4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18aa8:	mov	r1, r0
   18aac:	mov	r0, #0
   18ab0:	mov	r3, #0
   18ab4:	cmp	r4, r1
   18ab8:	bne	18b20 <main@@Base+0x5840>
   18abc:	b	18ae0 <main@@Base+0x5800>
   18ac0:	rsbs	r0, r0, #0
   18ac4:	rsc	r3, r3, #0
   18ac8:	ldr	r6, [sp, #52]	; 0x34
   18acc:	ldr	sl, [sp, #44]	; 0x2c
   18ad0:	str	r0, [sp, #64]	; 0x40
   18ad4:	str	r3, [sp, #68]	; 0x44
   18ad8:	cmp	r4, r1
   18adc:	bne	18b20 <main@@Base+0x5840>
   18ae0:	add	r0, sp, #64	; 0x40
   18ae4:	mov	r1, r4
   18ae8:	mov	r2, r6
   18aec:	str	r0, [sp]
   18af0:	movw	r0, #33032	; 0x8108
   18af4:	movt	r0, #4
   18af8:	add	r3, r0, #108	; 0x6c
   18afc:	mov	r0, sl
   18b00:	bl	2423c <main@@Base+0x10f5c>
   18b04:	mov	r1, r0
   18b08:	cmp	r0, r4
   18b0c:	cmpne	r1, r6
   18b10:	beq	1dcf4 <main@@Base+0xaa14>
   18b14:	ldr	r0, [sp, #64]	; 0x40
   18b18:	ldr	r3, [sp, #68]	; 0x44
   18b1c:	ldr	sl, [sp, #44]	; 0x2c
   18b20:	stm	r7, {r0, r3}
   18b24:	sub	r0, r6, r1
   18b28:	cmp	r0, #2
   18b2c:	blt	18b60 <main@@Base+0x5880>
   18b30:	ldrb	r0, [r1]
   18b34:	cmp	r0, #32
   18b38:	bls	18b4c <main@@Base+0x586c>
   18b3c:	mov	r4, r1
   18b40:	cmp	r4, r6
   18b44:	bne	18b78 <main@@Base+0x5898>
   18b48:	b	19f94 <main@@Base+0x6cb4>
   18b4c:	bne	18b60 <main@@Base+0x5880>
   18b50:	mov	r4, r1
   18b54:	ldrb	r0, [r4, #1]!
   18b58:	cmp	r0, #32
   18b5c:	bhi	18b70 <main@@Base+0x5890>
   18b60:	mov	r0, sl
   18b64:	mov	r2, r6
   18b68:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18b6c:	mov	r4, r0
   18b70:	cmp	r4, r6
   18b74:	beq	19f94 <main@@Base+0x6cb4>
   18b78:	ldrb	r0, [r4]
   18b7c:	cmp	r0, #44	; 0x2c
   18b80:	bne	19fa8 <main@@Base+0x6cc8>
   18b84:	add	r1, r4, #1
   18b88:	sub	r0, r6, r1
   18b8c:	cmp	r0, #2
   18b90:	blt	18bc0 <main@@Base+0x58e0>
   18b94:	ldrb	r0, [r1]
   18b98:	cmp	r0, #32
   18b9c:	bls	18bb0 <main@@Base+0x58d0>
   18ba0:	mov	r4, r1
   18ba4:	cmp	r4, r6
   18ba8:	bne	18bd8 <main@@Base+0x58f8>
   18bac:	b	19fe0 <main@@Base+0x6d00>
   18bb0:	bne	18bc0 <main@@Base+0x58e0>
   18bb4:	ldrb	r0, [r4, #2]!
   18bb8:	cmp	r0, #32
   18bbc:	bhi	18bd0 <main@@Base+0x58f0>
   18bc0:	mov	r0, sl
   18bc4:	mov	r2, r6
   18bc8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18bcc:	mov	r4, r0
   18bd0:	cmp	r4, r6
   18bd4:	beq	19fe0 <main@@Base+0x6d00>
   18bd8:	ldrb	r0, [r4]
   18bdc:	cmp	r0, #93	; 0x5d
   18be0:	beq	1a050 <main@@Base+0x6d70>
   18be4:	mov	r0, #0
   18be8:	mov	r1, #1
   18bec:	str	r0, [sp, #68]	; 0x44
   18bf0:	str	r0, [sp, #64]	; 0x40
   18bf4:	ldr	r0, [sl]
   18bf8:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   18bfc:	mov	r7, r0
   18c00:	cmp	r0, #0
   18c04:	bne	189e0 <main@@Base+0x5700>
   18c08:	b	13398 <main@@Base+0xb8>
   18c0c:	ldr	r6, [sp, #52]	; 0x34
   18c10:	ldr	sl, [sp, #44]	; 0x2c
   18c14:	bne	18c24 <main@@Base+0x5944>
   18c18:	ldrb	r0, [r7, #2]!
   18c1c:	cmp	r0, #32
   18c20:	bhi	18c34 <main@@Base+0x5954>
   18c24:	mov	r0, sl
   18c28:	mov	r2, r6
   18c2c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18c30:	mov	r7, r0
   18c34:	cmp	r4, r7
   18c38:	beq	19490 <main@@Base+0x61b0>
   18c3c:	mov	r2, r6
   18c40:	mov	r6, #0
   18c44:	cmp	r7, r2
   18c48:	str	r6, [fp, #-52]	; 0xffffffcc
   18c4c:	str	r6, [fp, #-56]	; 0xffffffc8
   18c50:	str	r6, [sp, #68]	; 0x44
   18c54:	str	r6, [sp, #64]	; 0x40
   18c58:	str	r6, [fp, #-60]	; 0xffffffc4
   18c5c:	beq	18cb8 <main@@Base+0x59d8>
   18c60:	sub	r0, fp, #56	; 0x38
   18c64:	mov	r1, r7
   18c68:	sub	r3, fp, #60	; 0x3c
   18c6c:	str	r0, [sp]
   18c70:	mov	r0, sl
   18c74:	bl	326c4 <flatcc_json_parser_integer@@Base>
   18c78:	cmp	r0, r7
   18c7c:	beq	18ccc <main@@Base+0x59ec>
   18c80:	mov	r4, r0
   18c84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18c88:	ldr	r6, [fp, #-56]	; 0xffffffc8
   18c8c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   18c90:	cmp	r0, #0
   18c94:	beq	18ce8 <main@@Base+0x5a08>
   18c98:	subs	r0, r6, #1
   18c9c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   18ca0:	bcc	18d20 <main@@Base+0x5a40>
   18ca4:	ldr	sl, [sp, #44]	; 0x2c
   18ca8:	ldr	r2, [sp, #52]	; 0x34
   18cac:	mov	r1, r4
   18cb0:	mov	r3, #8
   18cb4:	b	18d00 <main@@Base+0x5a20>
   18cb8:	mov	r5, #0
   18cbc:	mov	r4, r2
   18cc0:	cmp	r7, r4
   18cc4:	bne	18d80 <main@@Base+0x5aa0>
   18cc8:	b	18d3c <main@@Base+0x5a5c>
   18ccc:	mov	r6, #0
   18cd0:	mov	r5, #0
   18cd4:	mov	r4, r7
   18cd8:	ldr	sl, [sp, #44]	; 0x2c
   18cdc:	cmp	r7, r4
   18ce0:	bne	18d80 <main@@Base+0x5aa0>
   18ce4:	b	18d3c <main@@Base+0x5a5c>
   18ce8:	cmn	r5, #1
   18cec:	bgt	18d28 <main@@Base+0x5a48>
   18cf0:	ldr	sl, [sp, #44]	; 0x2c
   18cf4:	ldr	r2, [sp, #52]	; 0x34
   18cf8:	mov	r1, r4
   18cfc:	mov	r3, #7
   18d00:	mov	r0, sl
   18d04:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18d08:	mov	r4, r0
   18d0c:	mov	r6, #0
   18d10:	mov	r5, #0
   18d14:	cmp	r7, r4
   18d18:	bne	18d80 <main@@Base+0x5aa0>
   18d1c:	b	18d3c <main@@Base+0x5a5c>
   18d20:	rsbs	r6, r6, #0
   18d24:	rsc	r5, r5, #0
   18d28:	str	r6, [sp, #64]	; 0x40
   18d2c:	str	r5, [sp, #68]	; 0x44
   18d30:	ldr	sl, [sp, #44]	; 0x2c
   18d34:	cmp	r7, r4
   18d38:	bne	18d80 <main@@Base+0x5aa0>
   18d3c:	add	r0, sp, #64	; 0x40
   18d40:	ldr	r2, [sp, #52]	; 0x34
   18d44:	mov	r1, r7
   18d48:	str	r0, [sp]
   18d4c:	movw	r0, #33032	; 0x8108
   18d50:	movt	r0, #4
   18d54:	add	r3, r0, #24
   18d58:	mov	r0, sl
   18d5c:	bl	2423c <main@@Base+0x10f5c>
   18d60:	cmp	r0, r7
   18d64:	mov	r4, r0
   18d68:	ldrne	r0, [sp, #52]	; 0x34
   18d6c:	cmpne	r4, r0
   18d70:	beq	1dd30 <main@@Base+0xaa50>
   18d74:	ldr	r6, [sp, #64]	; 0x40
   18d78:	ldr	r5, [sp, #68]	; 0x44
   18d7c:	ldr	sl, [sp, #44]	; 0x2c
   18d80:	orrs	r0, r6, r5
   18d84:	bne	18d94 <main@@Base+0x5ab4>
   18d88:	ldrb	r0, [sl, #8]
   18d8c:	tst	r0, #2
   18d90:	beq	18db8 <main@@Base+0x5ad8>
   18d94:	ldr	r0, [sl]
   18d98:	mov	r1, #22
   18d9c:	mov	r2, #8
   18da0:	mov	r3, #8
   18da4:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   18da8:	cmp	r0, #0
   18dac:	beq	1dd30 <main@@Base+0xaa50>
   18db0:	str	r6, [r0]
   18db4:	str	r5, [r0, #4]
   18db8:	ldr	r6, [sp, #52]	; 0x34
   18dbc:	b	1db28 <main@@Base+0xa848>
   18dc0:	mov	r4, r6
   18dc4:	b	16238 <main@@Base+0x2f58>
   18dc8:	cmp	r0, #93	; 0x5d
   18dcc:	bne	1a350 <main@@Base+0x7070>
   18dd0:	ldr	r6, [sp, #52]	; 0x34
   18dd4:	ldr	sl, [sp, #44]	; 0x2c
   18dd8:	add	r1, r2, #1
   18ddc:	sub	r0, r6, r1
   18de0:	cmp	r0, #2
   18de4:	blt	1a508 <main@@Base+0x7228>
   18de8:	ldrb	r0, [r1]
   18dec:	cmp	r0, #32
   18df0:	bls	1a4ec <main@@Base+0x720c>
   18df4:	ldr	r6, [sp, #52]	; 0x34
   18df8:	ldr	sl, [sp, #44]	; 0x2c
   18dfc:	mov	r4, r1
   18e00:	b	16238 <main@@Base+0x2f58>
   18e04:	mov	r4, r6
   18e08:	b	1a554 <main@@Base+0x7274>
   18e0c:	mov	r0, sl
   18e10:	mov	r1, r6
   18e14:	b	1a360 <main@@Base+0x7080>
   18e18:	cmp	r0, #93	; 0x5d
   18e1c:	bne	1a36c <main@@Base+0x708c>
   18e20:	ldr	r0, [sp, #52]	; 0x34
   18e24:	add	r1, r4, #1
   18e28:	sub	r0, r0, r1
   18e2c:	cmp	r0, #2
   18e30:	blt	1a544 <main@@Base+0x7264>
   18e34:	b	19028 <main@@Base+0x5d48>
   18e38:	mov	r0, sl
   18e3c:	mov	r1, r6
   18e40:	mov	r2, r6
   18e44:	b	1a378 <main@@Base+0x7098>
   18e48:	ldr	r6, [sp, #52]	; 0x34
   18e4c:	bne	18e5c <main@@Base+0x5b7c>
   18e50:	ldrb	r0, [r4, #2]!
   18e54:	cmp	r0, #32
   18e58:	bhi	18e6c <main@@Base+0x5b8c>
   18e5c:	ldr	r0, [sp, #44]	; 0x2c
   18e60:	mov	r2, r6
   18e64:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18e68:	mov	r4, r0
   18e6c:	cmp	r4, r6
   18e70:	mov	r3, r6
   18e74:	beq	18ec8 <main@@Base+0x5be8>
   18e78:	ldrb	r0, [r4]
   18e7c:	cmp	r0, #125	; 0x7d
   18e80:	bne	18ec4 <main@@Base+0x5be4>
   18e84:	ldr	r6, [sp, #52]	; 0x34
   18e88:	ldr	sl, [sp, #44]	; 0x2c
   18e8c:	add	r1, r4, #1
   18e90:	sub	r0, r6, r1
   18e94:	cmp	r0, #2
   18e98:	blt	1a75c <main@@Base+0x747c>
   18e9c:	ldrb	r0, [r1]
   18ea0:	cmp	r0, #32
   18ea4:	bhi	1a01c <main@@Base+0x6d3c>
   18ea8:	ldr	r6, [sp, #52]	; 0x34
   18eac:	ldr	sl, [sp, #44]	; 0x2c
   18eb0:	bne	1a75c <main@@Base+0x747c>
   18eb4:	ldrb	r0, [r4, #2]!
   18eb8:	cmp	r0, #32
   18ebc:	bhi	160c0 <main@@Base+0x2de0>
   18ec0:	b	1a75c <main@@Base+0x747c>
   18ec4:	mov	r3, r4
   18ec8:	ldr	r6, [sp, #52]	; 0x34
   18ecc:	ldr	sl, [sp, #44]	; 0x2c
   18ed0:	cmp	r3, r6
   18ed4:	mov	r1, r6
   18ed8:	beq	18f30 <main@@Base+0x5c50>
   18edc:	ldrb	r0, [r3]
   18ee0:	cmp	r0, #46	; 0x2e
   18ee4:	beq	18f04 <main@@Base+0x5c24>
   18ee8:	cmp	r0, #34	; 0x22
   18eec:	bne	18f20 <main@@Base+0x5c40>
   18ef0:	ldr	r0, [sp, #40]	; 0x28
   18ef4:	mov	r1, #0
   18ef8:	str	r1, [r0]
   18efc:	add	r1, r3, #1
   18f00:	b	18f30 <main@@Base+0x5c50>
   18f04:	mov	r1, r3
   18f08:	mov	r0, sl
   18f0c:	mov	r2, r6
   18f10:	mov	r3, #5
   18f14:	bl	30170 <flatcc_json_parser_set_error@@Base>
   18f18:	mov	r1, r0
   18f1c:	b	18f30 <main@@Base+0x5c50>
   18f20:	ldr	r0, [sp, #40]	; 0x28
   18f24:	mov	r1, #1
   18f28:	str	r1, [r0]
   18f2c:	mov	r1, r3
   18f30:	mov	r0, sl
   18f34:	mov	r2, r6
   18f38:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   18f3c:	mov	r2, r0
   18f40:	sub	r0, r6, r0
   18f44:	cmp	r0, #2
   18f48:	blt	18f7c <main@@Base+0x5c9c>
   18f4c:	ldrb	r0, [r2]
   18f50:	cmp	r0, #32
   18f54:	bls	18f68 <main@@Base+0x5c88>
   18f58:	mov	r3, r2
   18f5c:	cmp	r3, r6
   18f60:	bne	18f98 <main@@Base+0x5cb8>
   18f64:	b	19fc8 <main@@Base+0x6ce8>
   18f68:	bne	18f7c <main@@Base+0x5c9c>
   18f6c:	mov	r3, r2
   18f70:	ldrb	r0, [r3, #1]!
   18f74:	cmp	r0, #32
   18f78:	bhi	18f90 <main@@Base+0x5cb0>
   18f7c:	mov	r1, r2
   18f80:	mov	r0, sl
   18f84:	mov	r2, r6
   18f88:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18f8c:	mov	r3, r0
   18f90:	cmp	r3, r6
   18f94:	beq	19fc8 <main@@Base+0x6ce8>
   18f98:	ldrb	r0, [r3]
   18f9c:	cmp	r0, #44	; 0x2c
   18fa0:	bne	19ff0 <main@@Base+0x6d10>
   18fa4:	add	r1, r3, #1
   18fa8:	sub	r0, r6, r1
   18fac:	cmp	r0, #2
   18fb0:	blt	18fe0 <main@@Base+0x5d00>
   18fb4:	ldrb	r0, [r1]
   18fb8:	cmp	r0, #32
   18fbc:	bls	18fd0 <main@@Base+0x5cf0>
   18fc0:	mov	r3, r1
   18fc4:	cmp	r3, r6
   18fc8:	bne	18ff8 <main@@Base+0x5d18>
   18fcc:	b	1a074 <main@@Base+0x6d94>
   18fd0:	bne	18fe0 <main@@Base+0x5d00>
   18fd4:	ldrb	r0, [r3, #2]!
   18fd8:	cmp	r0, #32
   18fdc:	bhi	18ff0 <main@@Base+0x5d10>
   18fe0:	mov	r0, sl
   18fe4:	mov	r2, r6
   18fe8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   18fec:	mov	r3, r0
   18ff0:	cmp	r3, r6
   18ff4:	beq	1a074 <main@@Base+0x6d94>
   18ff8:	ldrb	r0, [r3]
   18ffc:	cmp	r0, #125	; 0x7d
   19000:	bne	18ed0 <main@@Base+0x5bf0>
   19004:	add	r1, r3, #1
   19008:	sub	r0, r6, r1
   1900c:	cmp	r0, #2
   19010:	bge	1a010 <main@@Base+0x6d30>
   19014:	b	1a75c <main@@Base+0x747c>
   19018:	add	r1, r4, #1
   1901c:	sub	r0, r6, r1
   19020:	cmp	r0, #2
   19024:	blt	1a544 <main@@Base+0x7264>
   19028:	ldrb	r0, [r1]
   1902c:	cmp	r0, #32
   19030:	bls	1a534 <main@@Base+0x7254>
   19034:	mov	r4, r1
   19038:	b	1a554 <main@@Base+0x7274>
   1903c:	ldr	sl, [sp, #44]	; 0x2c
   19040:	ldr	r6, [sp, #52]	; 0x34
   19044:	mov	r1, r7
   19048:	mov	r0, sl
   1904c:	mov	r2, r6
   19050:	mov	r3, #9
   19054:	b	15ae4 <main@@Base+0x2804>
   19058:	mov	r4, r6
   1905c:	ldr	r0, [sp, #36]	; 0x24
   19060:	ldr	r0, [r0]
   19064:	cmp	r0, #0
   19068:	bne	158d0 <main@@Base+0x25f0>
   1906c:	b	192c8 <main@@Base+0x5fe8>
   19070:	bne	19080 <main@@Base+0x5da0>
   19074:	ldrb	r0, [r4, #2]!
   19078:	cmp	r0, #32
   1907c:	bhi	19090 <main@@Base+0x5db0>
   19080:	ldr	r0, [sp, #44]	; 0x2c
   19084:	ldr	r2, [sp, #52]	; 0x34
   19088:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1908c:	mov	r4, r0
   19090:	ldr	r7, [sp, #52]	; 0x34
   19094:	cmp	r4, r7
   19098:	beq	190f4 <main@@Base+0x5e14>
   1909c:	ldrb	r0, [r4]
   190a0:	cmp	r0, #93	; 0x5d
   190a4:	bne	190f0 <main@@Base+0x5e10>
   190a8:	ldr	r0, [sp, #52]	; 0x34
   190ac:	ldr	sl, [sp, #44]	; 0x2c
   190b0:	add	r1, r4, #1
   190b4:	sub	r0, r0, r1
   190b8:	cmp	r0, #2
   190bc:	blt	190e0 <main@@Base+0x5e00>
   190c0:	ldrb	r0, [r1]
   190c4:	cmp	r0, #32
   190c8:	bhi	1a4d0 <main@@Base+0x71f0>
   190cc:	ldr	sl, [sp, #44]	; 0x2c
   190d0:	bne	190e0 <main@@Base+0x5e00>
   190d4:	ldrb	r0, [r4, #2]!
   190d8:	cmp	r0, #32
   190dc:	bhi	18854 <main@@Base+0x5574>
   190e0:	ldr	r2, [sp, #52]	; 0x34
   190e4:	mov	r0, sl
   190e8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   190ec:	b	18850 <main@@Base+0x5570>
   190f0:	mov	r7, r4
   190f4:	mov	r0, #0
   190f8:	mov	r1, #1
   190fc:	str	r0, [fp, #-52]	; 0xffffffcc
   19100:	str	r0, [fp, #-56]	; 0xffffffc8
   19104:	ldr	r0, [sp, #44]	; 0x2c
   19108:	ldr	r0, [r0]
   1910c:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   19110:	cmp	r0, #0
   19114:	beq	1dd1c <main@@Base+0xaa3c>
   19118:	ldr	r6, [sp, #52]	; 0x34
   1911c:	ldr	sl, [sp, #44]	; 0x2c
   19120:	mov	r8, r0
   19124:	mov	r4, r7
   19128:	mov	r0, sl
   1912c:	mov	r1, r4
   19130:	mov	r2, r6
   19134:	sub	r3, fp, #56	; 0x38
   19138:	bl	31b28 <flatcc_json_parser_double@@Base>
   1913c:	mov	r7, r0
   19140:	cmp	r4, r0
   19144:	bne	19188 <main@@Base+0x5ea8>
   19148:	sub	r0, fp, #56	; 0x38
   1914c:	mov	r1, r4
   19150:	mov	r2, r6
   19154:	str	r0, [sp]
   19158:	movw	r0, #33032	; 0x8108
   1915c:	movt	r0, #4
   19160:	add	r3, r0, #96	; 0x60
   19164:	mov	r0, sl
   19168:	bl	249b0 <main@@Base+0x116d0>
   1916c:	mov	r7, r0
   19170:	cmp	r0, r4
   19174:	beq	1dd1c <main@@Base+0xaa3c>
   19178:	ldr	r6, [sp, #52]	; 0x34
   1917c:	ldr	sl, [sp, #44]	; 0x2c
   19180:	cmp	r7, r6
   19184:	beq	1dc94 <main@@Base+0xa9b4>
   19188:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1918c:	sub	r0, r6, r7
   19190:	cmp	r0, #2
   19194:	vstr	d16, [r8]
   19198:	blt	191cc <main@@Base+0x5eec>
   1919c:	ldrb	r0, [r7]
   191a0:	cmp	r0, #32
   191a4:	bls	191b8 <main@@Base+0x5ed8>
   191a8:	mov	r4, r7
   191ac:	cmp	r4, r6
   191b0:	bne	191e8 <main@@Base+0x5f08>
   191b4:	b	1a414 <main@@Base+0x7134>
   191b8:	bne	191cc <main@@Base+0x5eec>
   191bc:	mov	r4, r7
   191c0:	ldrb	r0, [r4, #1]!
   191c4:	cmp	r0, #32
   191c8:	bhi	191e0 <main@@Base+0x5f00>
   191cc:	mov	r0, sl
   191d0:	mov	r1, r7
   191d4:	mov	r2, r6
   191d8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   191dc:	mov	r4, r0
   191e0:	cmp	r4, r6
   191e4:	beq	1a414 <main@@Base+0x7134>
   191e8:	ldrb	r0, [r4]
   191ec:	cmp	r0, #44	; 0x2c
   191f0:	bne	1a420 <main@@Base+0x7140>
   191f4:	add	r1, r4, #1
   191f8:	sub	r0, r6, r1
   191fc:	cmp	r0, #2
   19200:	blt	19230 <main@@Base+0x5f50>
   19204:	ldrb	r0, [r1]
   19208:	cmp	r0, #32
   1920c:	bls	19220 <main@@Base+0x5f40>
   19210:	mov	r4, r1
   19214:	cmp	r4, r6
   19218:	bne	19248 <main@@Base+0x5f68>
   1921c:	b	1a45c <main@@Base+0x717c>
   19220:	bne	19230 <main@@Base+0x5f50>
   19224:	ldrb	r0, [r4, #2]!
   19228:	cmp	r0, #32
   1922c:	bhi	19240 <main@@Base+0x5f60>
   19230:	mov	r0, sl
   19234:	mov	r2, r6
   19238:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1923c:	mov	r4, r0
   19240:	cmp	r4, r6
   19244:	beq	1a45c <main@@Base+0x717c>
   19248:	ldrb	r0, [r4]
   1924c:	cmp	r0, #93	; 0x5d
   19250:	beq	1a4b4 <main@@Base+0x71d4>
   19254:	mov	r0, #0
   19258:	mov	r1, #1
   1925c:	str	r0, [fp, #-52]	; 0xffffffcc
   19260:	str	r0, [fp, #-56]	; 0xffffffc8
   19264:	ldr	r0, [sl]
   19268:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   1926c:	mov	r8, r0
   19270:	cmp	r0, #0
   19274:	mov	r7, r4
   19278:	bne	19128 <main@@Base+0x5e48>
   1927c:	b	1dc94 <main@@Base+0xa9b4>
   19280:	cmp	r0, #125	; 0x7d
   19284:	bne	1a498 <main@@Base+0x71b8>
   19288:	ldr	r6, [sp, #52]	; 0x34
   1928c:	ldr	sl, [sp, #44]	; 0x2c
   19290:	add	r1, r2, #1
   19294:	sub	r0, r6, r1
   19298:	cmp	r0, #2
   1929c:	blt	1a670 <main@@Base+0x7390>
   192a0:	ldrb	r0, [r1]
   192a4:	cmp	r0, #32
   192a8:	bls	1a654 <main@@Base+0x7374>
   192ac:	ldr	r6, [sp, #52]	; 0x34
   192b0:	ldr	sl, [sp, #44]	; 0x2c
   192b4:	mov	r4, r1
   192b8:	ldr	r0, [sp, #36]	; 0x24
   192bc:	ldr	r0, [r0]
   192c0:	cmp	r0, #0
   192c4:	bne	158d0 <main@@Base+0x25f0>
   192c8:	ldr	r0, [sl]
   192cc:	bl	2da14 <flatcc_builder_end_table@@Base>
   192d0:	cmp	r0, #0
   192d4:	str	r0, [sp, #60]	; 0x3c
   192d8:	bne	158f4 <main@@Base+0x2614>
   192dc:	b	158d0 <main@@Base+0x25f0>
   192e0:	mov	r0, sl
   192e4:	mov	r1, r6
   192e8:	b	1a4a8 <main@@Base+0x71c8>
   192ec:	ldr	r6, [sp, #52]	; 0x34
   192f0:	ldr	sl, [sp, #44]	; 0x2c
   192f4:	bne	19304 <main@@Base+0x6024>
   192f8:	ldrb	r0, [r7, #2]!
   192fc:	cmp	r0, #32
   19300:	bhi	19314 <main@@Base+0x6034>
   19304:	mov	r0, sl
   19308:	mov	r2, r6
   1930c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19310:	mov	r7, r0
   19314:	cmp	r4, r7
   19318:	beq	19490 <main@@Base+0x61b0>
   1931c:	mov	r2, r6
   19320:	mov	r6, #0
   19324:	cmp	r7, r2
   19328:	str	r6, [fp, #-52]	; 0xffffffcc
   1932c:	str	r6, [fp, #-56]	; 0xffffffc8
   19330:	str	r6, [fp, #-60]	; 0xffffffc4
   19334:	str	r6, [sp, #64]	; 0x40
   19338:	beq	19390 <main@@Base+0x60b0>
   1933c:	sub	r0, fp, #56	; 0x38
   19340:	mov	r1, r7
   19344:	add	r3, sp, #64	; 0x40
   19348:	str	r0, [sp]
   1934c:	ldr	r0, [sp, #44]	; 0x2c
   19350:	bl	326c4 <flatcc_json_parser_integer@@Base>
   19354:	cmp	r0, r7
   19358:	beq	193a0 <main@@Base+0x60c0>
   1935c:	mov	r4, r0
   19360:	ldr	r0, [sp, #64]	; 0x40
   19364:	cmp	r0, #0
   19368:	beq	193b0 <main@@Base+0x60d0>
   1936c:	ldr	r0, [sp, #44]	; 0x2c
   19370:	ldr	r2, [sp, #52]	; 0x34
   19374:	mov	r1, r4
   19378:	mov	r3, #8
   1937c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19380:	mov	r4, r0
   19384:	cmp	r7, r4
   19388:	bne	1a3d0 <main@@Base+0x70f0>
   1938c:	b	1a394 <main@@Base+0x70b4>
   19390:	mov	r4, r2
   19394:	cmp	r7, r4
   19398:	bne	1a3d0 <main@@Base+0x70f0>
   1939c:	b	1a394 <main@@Base+0x70b4>
   193a0:	mov	r4, r7
   193a4:	cmp	r7, r4
   193a8:	bne	1a3d0 <main@@Base+0x70f0>
   193ac:	b	1a394 <main@@Base+0x70b4>
   193b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   193b4:	cmp	r0, #0
   193b8:	beq	1a384 <main@@Base+0x70a4>
   193bc:	ldr	r0, [sp, #44]	; 0x2c
   193c0:	ldr	r2, [sp, #52]	; 0x34
   193c4:	mov	r1, r4
   193c8:	mov	r3, #7
   193cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   193d0:	mov	r4, r0
   193d4:	cmp	r7, r4
   193d8:	bne	1a3d0 <main@@Base+0x70f0>
   193dc:	b	1a394 <main@@Base+0x70b4>
   193e0:	ldr	r6, [sp, #52]	; 0x34
   193e4:	ldr	sl, [sp, #44]	; 0x2c
   193e8:	bne	193f8 <main@@Base+0x6118>
   193ec:	ldrb	r0, [r7, #2]!
   193f0:	cmp	r0, #32
   193f4:	bhi	19408 <main@@Base+0x6128>
   193f8:	mov	r0, sl
   193fc:	mov	r2, r6
   19400:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19404:	mov	r7, r0
   19408:	cmp	r4, r7
   1940c:	beq	19490 <main@@Base+0x61b0>
   19410:	mov	r2, r6
   19414:	mov	r6, #0
   19418:	cmp	r7, r2
   1941c:	str	r6, [fp, #-52]	; 0xffffffcc
   19420:	str	r6, [fp, #-56]	; 0xffffffc8
   19424:	str	r6, [sp, #68]	; 0x44
   19428:	str	r6, [sp, #64]	; 0x40
   1942c:	str	r6, [fp, #-60]	; 0xffffffc4
   19430:	beq	1949c <main@@Base+0x61bc>
   19434:	sub	r0, fp, #56	; 0x38
   19438:	mov	r1, r7
   1943c:	sub	r3, fp, #60	; 0x3c
   19440:	str	r0, [sp]
   19444:	ldr	r0, [sp, #44]	; 0x2c
   19448:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1944c:	cmp	r0, r7
   19450:	beq	194b0 <main@@Base+0x61d0>
   19454:	mov	r4, r0
   19458:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1945c:	cmp	r0, #0
   19460:	beq	194c8 <main@@Base+0x61e8>
   19464:	ldr	r0, [sp, #44]	; 0x2c
   19468:	ldr	r2, [sp, #52]	; 0x34
   1946c:	mov	r1, r4
   19470:	mov	r3, #8
   19474:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19478:	mov	r4, r0
   1947c:	mov	r6, #0
   19480:	mov	r5, #0
   19484:	cmp	r7, r4
   19488:	bne	19520 <main@@Base+0x6240>
   1948c:	b	194e0 <main@@Base+0x6200>
   19490:	mov	r0, sl
   19494:	mov	r1, r4
   19498:	b	1db1c <main@@Base+0xa83c>
   1949c:	mov	r5, #0
   194a0:	mov	r4, r2
   194a4:	cmp	r7, r4
   194a8:	bne	19520 <main@@Base+0x6240>
   194ac:	b	194e0 <main@@Base+0x6200>
   194b0:	mov	r6, #0
   194b4:	mov	r5, #0
   194b8:	mov	r4, r7
   194bc:	cmp	r7, r4
   194c0:	bne	19520 <main@@Base+0x6240>
   194c4:	b	194e0 <main@@Base+0x6200>
   194c8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   194cc:	ldr	r5, [fp, #-52]	; 0xffffffcc
   194d0:	str	r5, [sp, #68]	; 0x44
   194d4:	str	r6, [sp, #64]	; 0x40
   194d8:	cmp	r7, r4
   194dc:	bne	19520 <main@@Base+0x6240>
   194e0:	add	r0, sp, #64	; 0x40
   194e4:	ldr	r2, [sp, #52]	; 0x34
   194e8:	mov	r1, r7
   194ec:	str	r0, [sp]
   194f0:	movw	r0, #33032	; 0x8108
   194f4:	movt	r0, #4
   194f8:	add	r3, r0, #72	; 0x48
   194fc:	ldr	r0, [sp, #44]	; 0x2c
   19500:	bl	24748 <main@@Base+0x11468>
   19504:	cmp	r0, r7
   19508:	mov	r4, r0
   1950c:	ldrne	r0, [sp, #52]	; 0x34
   19510:	cmpne	r4, r0
   19514:	beq	1dd30 <main@@Base+0xaa50>
   19518:	ldr	r6, [sp, #64]	; 0x40
   1951c:	ldr	r5, [sp, #68]	; 0x44
   19520:	ldr	sl, [sp, #44]	; 0x2c
   19524:	orrs	r0, r6, r5
   19528:	bne	19538 <main@@Base+0x6258>
   1952c:	ldrb	r0, [sl, #8]
   19530:	tst	r0, #2
   19534:	beq	18db8 <main@@Base+0x5ad8>
   19538:	ldr	r0, [sl]
   1953c:	mov	r1, #23
   19540:	mov	r2, #8
   19544:	mov	r3, #8
   19548:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   1954c:	cmp	r0, #0
   19550:	beq	1dd30 <main@@Base+0xaa50>
   19554:	str	r6, [r0]
   19558:	str	r5, [r0, #4]
   1955c:	b	1a408 <main@@Base+0x7128>
   19560:	mov	r4, r6
   19564:	b	16a4c <main@@Base+0x376c>
   19568:	bne	19578 <main@@Base+0x6298>
   1956c:	ldrb	r0, [r4, #2]!
   19570:	cmp	r0, #32
   19574:	bhi	19588 <main@@Base+0x62a8>
   19578:	ldr	r0, [sp, #44]	; 0x2c
   1957c:	ldr	r2, [sp, #52]	; 0x34
   19580:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19584:	mov	r4, r0
   19588:	ldr	r2, [sp, #52]	; 0x34
   1958c:	cmp	r4, r2
   19590:	beq	195d8 <main@@Base+0x62f8>
   19594:	ldrb	r0, [r4]
   19598:	cmp	r0, #125	; 0x7d
   1959c:	bne	195d4 <main@@Base+0x62f4>
   195a0:	ldr	r0, [sp, #52]	; 0x34
   195a4:	add	r1, r4, #1
   195a8:	sub	r0, r0, r1
   195ac:	cmp	r0, #2
   195b0:	blt	1a7c8 <main@@Base+0x74e8>
   195b4:	ldrb	r0, [r1]
   195b8:	cmp	r0, #32
   195bc:	bhi	1a5b8 <main@@Base+0x72d8>
   195c0:	bne	1a7c8 <main@@Base+0x74e8>
   195c4:	ldrb	r0, [r4, #2]!
   195c8:	cmp	r0, #32
   195cc:	bhi	16588 <main@@Base+0x32a8>
   195d0:	b	1a7c8 <main@@Base+0x74e8>
   195d4:	mov	r2, r4
   195d8:	ldr	r5, [sp, #52]	; 0x34
   195dc:	ldr	sl, [sp, #44]	; 0x2c
   195e0:	cmp	r2, r5
   195e4:	mov	r8, r5
   195e8:	beq	1963c <main@@Base+0x635c>
   195ec:	ldrb	r0, [r2]
   195f0:	cmp	r0, #46	; 0x2e
   195f4:	beq	19610 <main@@Base+0x6330>
   195f8:	cmp	r0, #34	; 0x22
   195fc:	bne	1962c <main@@Base+0x634c>
   19600:	ldr	r0, [sp, #40]	; 0x28
   19604:	mov	r1, #0
   19608:	add	r8, r2, #1
   1960c:	b	19638 <main@@Base+0x6358>
   19610:	mov	r1, r2
   19614:	mov	r0, sl
   19618:	mov	r2, r5
   1961c:	mov	r3, #5
   19620:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19624:	mov	r8, r0
   19628:	b	1963c <main@@Base+0x635c>
   1962c:	ldr	r0, [sp, #40]	; 0x28
   19630:	mov	r1, #1
   19634:	mov	r8, r2
   19638:	str	r1, [r0]
   1963c:	sub	lr, r5, r8
   19640:	mov	r0, #8
   19644:	cmp	lr, #8
   19648:	movcc	r0, lr
   1964c:	and	r0, r0, #15
   19650:	sub	r7, r0, #1
   19654:	cmp	r7, #7
   19658:	bhi	19e4c <main@@Base+0x6b6c>
   1965c:	add	r4, pc, #32
   19660:	mov	r1, #0
   19664:	mov	ip, #0
   19668:	mov	r9, #0
   1966c:	mov	r6, #0
   19670:	mov	r3, #0
   19674:	mov	r5, #0
   19678:	mov	r2, #0
   1967c:	mov	r0, #0
   19680:	ldr	pc, [r4, r7, lsl #2]
   19684:	andeq	r9, r1, r8, ror #13
   19688:	andeq	r9, r1, r0, ror #13
   1968c:	ldrdeq	r9, [r1], -r8
   19690:	ldrdeq	r9, [r1], -r0
   19694:	andeq	r9, r1, r4, asr #13
   19698:			; <UNDEFINED> instruction: 0x000196b8
   1969c:	andeq	r9, r1, r8, lsr #13
   196a0:	andeq	r9, r1, r4, lsr #13
   196a4:	ldrb	ip, [r8, #7]
   196a8:	ldrb	r0, [r8, #6]
   196ac:	mov	r9, r1
   196b0:	orr	r0, ip, r0, lsl #8
   196b4:	mov	r1, r0
   196b8:	ldrb	r0, [r8, #5]
   196bc:	mov	r6, r9
   196c0:	orr	r1, r1, r0, lsl #16
   196c4:	ldrb	r0, [r8, #4]
   196c8:	mov	r3, r6
   196cc:	orr	r1, r1, r0, lsl #24
   196d0:	ldrb	r0, [r8, #3]
   196d4:	orr	r5, r0, r3
   196d8:	ldrb	r0, [r8, #2]
   196dc:	orr	r2, r5, r0, lsl #8
   196e0:	ldrb	r0, [r8, #1]
   196e4:	orr	r0, r2, r0, lsl #16
   196e8:	ldrb	r2, [r8]
   196ec:	orr	r2, r0, r2, lsl #24
   196f0:	movw	r0, #65535	; 0xffff
   196f4:	movt	r0, #26979	; 0x6963
   196f8:	cmp	r2, r0
   196fc:	bhi	19774 <main@@Base+0x6494>
   19700:	movw	r0, #30062	; 0x756e
   19704:	and	r1, r1, #-16777216	; 0xff000000
   19708:	movt	r0, #25455	; 0x636f
   1970c:	eor	r1, r1, #1946157056	; 0x74000000
   19710:	eor	r0, r2, r0
   19714:	orrs	r0, r1, r0
   19718:	bne	19e4c <main@@Base+0x6b6c>
   1971c:	cmp	lr, #6
   19720:	mov	r7, r8
   19724:	blt	19ab8 <main@@Base+0x67d8>
   19728:	ldr	r2, [sp, #40]	; 0x28
   1972c:	mov	r1, r8
   19730:	ldrb	r0, [r1, #5]!
   19734:	ldr	r2, [r2]
   19738:	cmp	r2, #0
   1973c:	beq	1984c <main@@Base+0x656c>
   19740:	cmp	r0, #33	; 0x21
   19744:	bcc	19754 <main@@Base+0x6474>
   19748:	cmp	r0, #58	; 0x3a
   1974c:	mov	r7, r8
   19750:	bne	19ab8 <main@@Base+0x67d8>
   19754:	ldr	r0, [sp, #40]	; 0x28
   19758:	mov	r2, #0
   1975c:	str	r2, [r0]
   19760:	ldr	r0, [sp, #52]	; 0x34
   19764:	sub	r0, r0, r1
   19768:	cmp	r0, #2
   1976c:	bge	1986c <main@@Base+0x658c>
   19770:	b	19920 <main@@Base+0x6640>
   19774:	movw	r1, #27648	; 0x6c00
   19778:	bic	r0, r2, #255	; 0xff
   1977c:	movt	r1, #30305	; 0x7661
   19780:	teq	r0, r1
   19784:	bne	197e0 <main@@Base+0x6500>
   19788:	cmp	lr, #4
   1978c:	mov	r7, r8
   19790:	blt	19c40 <main@@Base+0x6960>
   19794:	ldr	r2, [sp, #40]	; 0x28
   19798:	mov	r1, r8
   1979c:	ldrb	r0, [r1, #3]!
   197a0:	ldr	r2, [r2]
   197a4:	cmp	r2, #0
   197a8:	beq	1988c <main@@Base+0x65ac>
   197ac:	cmp	r0, #33	; 0x21
   197b0:	bcc	197c0 <main@@Base+0x64e0>
   197b4:	cmp	r0, #58	; 0x3a
   197b8:	mov	r7, r8
   197bc:	bne	19c40 <main@@Base+0x6960>
   197c0:	ldr	r0, [sp, #40]	; 0x28
   197c4:	mov	r2, #0
   197c8:	str	r2, [r0]
   197cc:	ldr	r0, [sp, #52]	; 0x34
   197d0:	sub	r0, r0, r1
   197d4:	cmp	r0, #2
   197d8:	bge	198ac <main@@Base+0x65cc>
   197dc:	b	199a4 <main@@Base+0x66c4>
   197e0:	movw	r0, #0
   197e4:	bfc	r2, #0, #16
   197e8:	movt	r0, #26980	; 0x6964
   197ec:	teq	r2, r0
   197f0:	bne	19e48 <main@@Base+0x6b68>
   197f4:	cmp	lr, #3
   197f8:	mov	r1, r8
   197fc:	blt	19de8 <main@@Base+0x6b08>
   19800:	ldr	r1, [sp, #40]	; 0x28
   19804:	mov	r2, r8
   19808:	ldrb	r0, [r2, #2]!
   1980c:	ldr	r1, [r1]
   19810:	cmp	r1, #0
   19814:	beq	198cc <main@@Base+0x65ec>
   19818:	cmp	r0, #33	; 0x21
   1981c:	bcc	1982c <main@@Base+0x654c>
   19820:	cmp	r0, #58	; 0x3a
   19824:	mov	r1, r8
   19828:	bne	19de8 <main@@Base+0x6b08>
   1982c:	ldr	r0, [sp, #40]	; 0x28
   19830:	mov	r1, #0
   19834:	str	r1, [r0]
   19838:	ldr	r0, [sp, #52]	; 0x34
   1983c:	sub	r0, r0, r2
   19840:	cmp	r0, #2
   19844:	bge	198ec <main@@Base+0x660c>
   19848:	b	19a28 <main@@Base+0x6748>
   1984c:	cmp	r0, #34	; 0x22
   19850:	mov	r7, r8
   19854:	bne	19ab8 <main@@Base+0x67d8>
   19858:	add	r1, r8, #6
   1985c:	ldr	r0, [sp, #52]	; 0x34
   19860:	sub	r0, r0, r1
   19864:	cmp	r0, #2
   19868:	blt	19920 <main@@Base+0x6640>
   1986c:	ldrb	r0, [r1]
   19870:	cmp	r0, #32
   19874:	bls	1990c <main@@Base+0x662c>
   19878:	mov	r7, r1
   1987c:	ldr	r0, [sp, #52]	; 0x34
   19880:	cmp	r7, r0
   19884:	bne	1993c <main@@Base+0x665c>
   19888:	b	19978 <main@@Base+0x6698>
   1988c:	cmp	r0, #34	; 0x22
   19890:	mov	r7, r8
   19894:	bne	19c40 <main@@Base+0x6960>
   19898:	add	r1, r8, #4
   1989c:	ldr	r0, [sp, #52]	; 0x34
   198a0:	sub	r0, r0, r1
   198a4:	cmp	r0, #2
   198a8:	blt	199a4 <main@@Base+0x66c4>
   198ac:	ldrb	r0, [r1]
   198b0:	cmp	r0, #32
   198b4:	bls	19990 <main@@Base+0x66b0>
   198b8:	mov	r7, r1
   198bc:	ldr	r0, [sp, #52]	; 0x34
   198c0:	cmp	r7, r0
   198c4:	bne	199c0 <main@@Base+0x66e0>
   198c8:	b	199fc <main@@Base+0x671c>
   198cc:	cmp	r0, #34	; 0x22
   198d0:	mov	r1, r8
   198d4:	bne	19de8 <main@@Base+0x6b08>
   198d8:	add	r2, r8, #3
   198dc:	ldr	r0, [sp, #52]	; 0x34
   198e0:	sub	r0, r0, r2
   198e4:	cmp	r0, #2
   198e8:	blt	19a28 <main@@Base+0x6748>
   198ec:	ldrb	r0, [r2]
   198f0:	cmp	r0, #32
   198f4:	bls	19a14 <main@@Base+0x6734>
   198f8:	mov	r1, r2
   198fc:	ldr	r0, [sp, #52]	; 0x34
   19900:	cmp	r1, r0
   19904:	bne	19a48 <main@@Base+0x6768>
   19908:	b	19a84 <main@@Base+0x67a4>
   1990c:	bne	19920 <main@@Base+0x6640>
   19910:	mov	r7, r1
   19914:	ldrb	r0, [r7, #1]!
   19918:	cmp	r0, #32
   1991c:	bhi	19930 <main@@Base+0x6650>
   19920:	ldr	r0, [sp, #44]	; 0x2c
   19924:	ldr	r2, [sp, #52]	; 0x34
   19928:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1992c:	mov	r7, r0
   19930:	ldr	r0, [sp, #52]	; 0x34
   19934:	cmp	r7, r0
   19938:	beq	19978 <main@@Base+0x6698>
   1993c:	ldrb	r0, [r7]
   19940:	cmp	r0, #58	; 0x3a
   19944:	bne	19978 <main@@Base+0x6698>
   19948:	ldr	r0, [sp, #52]	; 0x34
   1994c:	add	r1, r7, #1
   19950:	sub	r0, r0, r1
   19954:	cmp	r0, #2
   19958:	blt	19aa8 <main@@Base+0x67c8>
   1995c:	ldrb	r0, [r1]
   19960:	cmp	r0, #32
   19964:	bls	19a98 <main@@Base+0x67b8>
   19968:	mov	r7, r1
   1996c:	cmp	r8, r7
   19970:	bne	19ac0 <main@@Base+0x67e0>
   19974:	b	19e48 <main@@Base+0x6b68>
   19978:	ldr	r0, [sp, #44]	; 0x2c
   1997c:	ldr	r2, [sp, #52]	; 0x34
   19980:	mov	r1, r7
   19984:	mov	r3, #4
   19988:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1998c:	b	19ab4 <main@@Base+0x67d4>
   19990:	bne	199a4 <main@@Base+0x66c4>
   19994:	mov	r7, r1
   19998:	ldrb	r0, [r7, #1]!
   1999c:	cmp	r0, #32
   199a0:	bhi	199b4 <main@@Base+0x66d4>
   199a4:	ldr	r0, [sp, #44]	; 0x2c
   199a8:	ldr	r2, [sp, #52]	; 0x34
   199ac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   199b0:	mov	r7, r0
   199b4:	ldr	r0, [sp, #52]	; 0x34
   199b8:	cmp	r7, r0
   199bc:	beq	199fc <main@@Base+0x671c>
   199c0:	ldrb	r0, [r7]
   199c4:	cmp	r0, #58	; 0x3a
   199c8:	bne	199fc <main@@Base+0x671c>
   199cc:	ldr	r0, [sp, #52]	; 0x34
   199d0:	add	r1, r7, #1
   199d4:	sub	r0, r0, r1
   199d8:	cmp	r0, #2
   199dc:	blt	19c30 <main@@Base+0x6950>
   199e0:	ldrb	r0, [r1]
   199e4:	cmp	r0, #32
   199e8:	bls	19c20 <main@@Base+0x6940>
   199ec:	mov	r7, r1
   199f0:	cmp	r8, r7
   199f4:	bne	19c48 <main@@Base+0x6968>
   199f8:	b	19e48 <main@@Base+0x6b68>
   199fc:	ldr	r0, [sp, #44]	; 0x2c
   19a00:	ldr	r2, [sp, #52]	; 0x34
   19a04:	mov	r1, r7
   19a08:	mov	r3, #4
   19a0c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19a10:	b	19c3c <main@@Base+0x695c>
   19a14:	bne	19a28 <main@@Base+0x6748>
   19a18:	mov	r1, r2
   19a1c:	ldrb	r0, [r1, #1]!
   19a20:	cmp	r0, #32
   19a24:	bhi	19a3c <main@@Base+0x675c>
   19a28:	mov	r1, r2
   19a2c:	ldr	r0, [sp, #44]	; 0x2c
   19a30:	ldr	r2, [sp, #52]	; 0x34
   19a34:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19a38:	mov	r1, r0
   19a3c:	ldr	r0, [sp, #52]	; 0x34
   19a40:	cmp	r1, r0
   19a44:	beq	19a84 <main@@Base+0x67a4>
   19a48:	ldrb	r0, [r1]
   19a4c:	cmp	r0, #58	; 0x3a
   19a50:	bne	19a84 <main@@Base+0x67a4>
   19a54:	ldr	r0, [sp, #52]	; 0x34
   19a58:	add	r2, r1, #1
   19a5c:	sub	r0, r0, r2
   19a60:	cmp	r0, #2
   19a64:	blt	19dd4 <main@@Base+0x6af4>
   19a68:	ldrb	r0, [r2]
   19a6c:	cmp	r0, #32
   19a70:	bls	19dc4 <main@@Base+0x6ae4>
   19a74:	mov	r1, r2
   19a78:	cmp	r8, r1
   19a7c:	bne	19df0 <main@@Base+0x6b10>
   19a80:	b	19e48 <main@@Base+0x6b68>
   19a84:	ldr	r0, [sp, #44]	; 0x2c
   19a88:	ldr	r2, [sp, #52]	; 0x34
   19a8c:	mov	r3, #4
   19a90:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19a94:	b	19de4 <main@@Base+0x6b04>
   19a98:	bne	19aa8 <main@@Base+0x67c8>
   19a9c:	ldrb	r0, [r7, #2]!
   19aa0:	cmp	r0, #32
   19aa4:	bhi	19ab8 <main@@Base+0x67d8>
   19aa8:	ldr	r0, [sp, #44]	; 0x2c
   19aac:	ldr	r2, [sp, #52]	; 0x34
   19ab0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19ab4:	mov	r7, r0
   19ab8:	cmp	r8, r7
   19abc:	beq	19e48 <main@@Base+0x6b68>
   19ac0:	ldr	r0, [sp, #52]	; 0x34
   19ac4:	mov	r6, #0
   19ac8:	str	r6, [fp, #-52]	; 0xffffffcc
   19acc:	str	r6, [fp, #-56]	; 0xffffffc8
   19ad0:	strh	r6, [fp, #-60]	; 0xffffffc4
   19ad4:	str	r6, [sp, #64]	; 0x40
   19ad8:	cmp	r7, r0
   19adc:	beq	19b38 <main@@Base+0x6858>
   19ae0:	sub	r0, fp, #56	; 0x38
   19ae4:	ldr	r2, [sp, #52]	; 0x34
   19ae8:	mov	r1, r7
   19aec:	add	r3, sp, #64	; 0x40
   19af0:	str	r0, [sp]
   19af4:	ldr	r0, [sp, #44]	; 0x2c
   19af8:	bl	326c4 <flatcc_json_parser_integer@@Base>
   19afc:	cmp	r0, r7
   19b00:	beq	19b48 <main@@Base+0x6868>
   19b04:	mov	r4, r0
   19b08:	ldr	r0, [sp, #64]	; 0x40
   19b0c:	cmp	r0, #0
   19b10:	beq	19b58 <main@@Base+0x6878>
   19b14:	ldr	r0, [sp, #44]	; 0x2c
   19b18:	ldr	r2, [sp, #52]	; 0x34
   19b1c:	mov	r1, r4
   19b20:	mov	r3, #8
   19b24:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19b28:	mov	r4, r0
   19b2c:	cmp	r7, r4
   19b30:	bne	19bdc <main@@Base+0x68fc>
   19b34:	b	19ba0 <main@@Base+0x68c0>
   19b38:	ldr	r4, [sp, #52]	; 0x34
   19b3c:	cmp	r7, r4
   19b40:	bne	19bdc <main@@Base+0x68fc>
   19b44:	b	19ba0 <main@@Base+0x68c0>
   19b48:	mov	r4, r7
   19b4c:	cmp	r7, r4
   19b50:	bne	19bdc <main@@Base+0x68fc>
   19b54:	b	19ba0 <main@@Base+0x68c0>
   19b58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19b60:	subs	r2, r0, #65536	; 0x10000
   19b64:	sbcs	r1, r1, #0
   19b68:	bcc	19b90 <main@@Base+0x68b0>
   19b6c:	ldr	r0, [sp, #44]	; 0x2c
   19b70:	ldr	r2, [sp, #52]	; 0x34
   19b74:	mov	r1, r4
   19b78:	mov	r3, #7
   19b7c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19b80:	mov	r4, r0
   19b84:	cmp	r7, r4
   19b88:	bne	19bdc <main@@Base+0x68fc>
   19b8c:	b	19ba0 <main@@Base+0x68c0>
   19b90:	mov	r6, r0
   19b94:	strh	r0, [fp, #-60]	; 0xffffffc4
   19b98:	cmp	r7, r4
   19b9c:	bne	19bdc <main@@Base+0x68fc>
   19ba0:	sub	r0, fp, #60	; 0x3c
   19ba4:	ldr	r2, [sp, #52]	; 0x34
   19ba8:	mov	r1, r7
   19bac:	str	r0, [sp]
   19bb0:	movw	r0, #33392	; 0x8270
   19bb4:	movt	r0, #4
   19bb8:	add	r3, r0, #24
   19bbc:	ldr	r0, [sp, #44]	; 0x2c
   19bc0:	bl	2a71c <main@@Base+0x1743c>
   19bc4:	cmp	r0, r7
   19bc8:	mov	r4, r0
   19bcc:	ldrne	r0, [sp, #52]	; 0x34
   19bd0:	cmpne	r4, r0
   19bd4:	beq	16598 <main@@Base+0x32b8>
   19bd8:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   19bdc:	movw	r0, #65535	; 0xffff
   19be0:	tst	r6, r0
   19be4:	bne	19bf8 <main@@Base+0x6918>
   19be8:	ldr	r0, [sp, #44]	; 0x2c
   19bec:	ldrb	r0, [r0, #8]
   19bf0:	tst	r0, #2
   19bf4:	beq	19e30 <main@@Base+0x6b50>
   19bf8:	ldr	r0, [sp, #44]	; 0x2c
   19bfc:	mov	r1, #2
   19c00:	mov	r2, #2
   19c04:	mov	r3, #2
   19c08:	ldr	r0, [r0]
   19c0c:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   19c10:	cmp	r0, #0
   19c14:	beq	16598 <main@@Base+0x32b8>
   19c18:	strh	r6, [r0]
   19c1c:	b	19e30 <main@@Base+0x6b50>
   19c20:	bne	19c30 <main@@Base+0x6950>
   19c24:	ldrb	r0, [r7, #2]!
   19c28:	cmp	r0, #32
   19c2c:	bhi	19c40 <main@@Base+0x6960>
   19c30:	ldr	r0, [sp, #44]	; 0x2c
   19c34:	ldr	r2, [sp, #52]	; 0x34
   19c38:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19c3c:	mov	r7, r0
   19c40:	cmp	r8, r7
   19c44:	beq	19e48 <main@@Base+0x6b68>
   19c48:	ldr	r0, [sp, #52]	; 0x34
   19c4c:	mov	r6, #0
   19c50:	str	r6, [fp, #-52]	; 0xffffffcc
   19c54:	str	r6, [fp, #-56]	; 0xffffffc8
   19c58:	str	r6, [sp, #68]	; 0x44
   19c5c:	str	r6, [sp, #64]	; 0x40
   19c60:	str	r6, [fp, #-60]	; 0xffffffc4
   19c64:	cmp	r7, r0
   19c68:	beq	19cc8 <main@@Base+0x69e8>
   19c6c:	sub	r0, fp, #56	; 0x38
   19c70:	ldr	r2, [sp, #52]	; 0x34
   19c74:	mov	r1, r7
   19c78:	sub	r3, fp, #60	; 0x3c
   19c7c:	str	r0, [sp]
   19c80:	ldr	r0, [sp, #44]	; 0x2c
   19c84:	bl	326c4 <flatcc_json_parser_integer@@Base>
   19c88:	cmp	r0, r7
   19c8c:	beq	19cdc <main@@Base+0x69fc>
   19c90:	mov	r4, r0
   19c94:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19c98:	ldr	r6, [fp, #-56]	; 0xffffffc8
   19c9c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   19ca0:	cmp	r0, #0
   19ca4:	beq	19cf4 <main@@Base+0x6a14>
   19ca8:	subs	r0, r6, #1
   19cac:	sbcs	r0, r5, #-2147483648	; 0x80000000
   19cb0:	bcc	19d28 <main@@Base+0x6a48>
   19cb4:	ldr	r0, [sp, #44]	; 0x2c
   19cb8:	ldr	r2, [sp, #52]	; 0x34
   19cbc:	mov	r1, r4
   19cc0:	mov	r3, #8
   19cc4:	b	19d0c <main@@Base+0x6a2c>
   19cc8:	ldr	r4, [sp, #52]	; 0x34
   19ccc:	mov	r5, #0
   19cd0:	cmp	r7, r4
   19cd4:	bne	19d80 <main@@Base+0x6aa0>
   19cd8:	b	19d40 <main@@Base+0x6a60>
   19cdc:	mov	r6, #0
   19ce0:	mov	r5, #0
   19ce4:	mov	r4, r7
   19ce8:	cmp	r7, r4
   19cec:	bne	19d80 <main@@Base+0x6aa0>
   19cf0:	b	19d40 <main@@Base+0x6a60>
   19cf4:	cmn	r5, #1
   19cf8:	bgt	19d30 <main@@Base+0x6a50>
   19cfc:	ldr	r0, [sp, #44]	; 0x2c
   19d00:	ldr	r2, [sp, #52]	; 0x34
   19d04:	mov	r1, r4
   19d08:	mov	r3, #7
   19d0c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   19d10:	mov	r4, r0
   19d14:	mov	r6, #0
   19d18:	mov	r5, #0
   19d1c:	cmp	r7, r4
   19d20:	bne	19d80 <main@@Base+0x6aa0>
   19d24:	b	19d40 <main@@Base+0x6a60>
   19d28:	rsbs	r6, r6, #0
   19d2c:	rsc	r5, r5, #0
   19d30:	str	r6, [sp, #64]	; 0x40
   19d34:	str	r5, [sp, #68]	; 0x44
   19d38:	cmp	r7, r4
   19d3c:	bne	19d80 <main@@Base+0x6aa0>
   19d40:	add	r0, sp, #64	; 0x40
   19d44:	ldr	r2, [sp, #52]	; 0x34
   19d48:	mov	r1, r7
   19d4c:	str	r0, [sp]
   19d50:	movw	r0, #33392	; 0x8270
   19d54:	movt	r0, #4
   19d58:	add	r3, r0, #36	; 0x24
   19d5c:	ldr	r0, [sp, #44]	; 0x2c
   19d60:	bl	2423c <main@@Base+0x10f5c>
   19d64:	cmp	r0, r7
   19d68:	mov	r4, r0
   19d6c:	ldrne	r0, [sp, #52]	; 0x34
   19d70:	cmpne	r4, r0
   19d74:	beq	16598 <main@@Base+0x32b8>
   19d78:	ldr	r6, [sp, #64]	; 0x40
   19d7c:	ldr	r5, [sp, #68]	; 0x44
   19d80:	orrs	r0, r6, r5
   19d84:	bne	19d98 <main@@Base+0x6ab8>
   19d88:	ldr	r0, [sp, #44]	; 0x2c
   19d8c:	ldrb	r0, [r0, #8]
   19d90:	tst	r0, #2
   19d94:	beq	19e30 <main@@Base+0x6b50>
   19d98:	ldr	r0, [sp, #44]	; 0x2c
   19d9c:	mov	r1, #1
   19da0:	mov	r2, #8
   19da4:	mov	r3, #8
   19da8:	ldr	r0, [r0]
   19dac:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   19db0:	cmp	r0, #0
   19db4:	beq	16598 <main@@Base+0x32b8>
   19db8:	str	r6, [r0]
   19dbc:	str	r5, [r0, #4]
   19dc0:	b	19e30 <main@@Base+0x6b50>
   19dc4:	bne	19dd4 <main@@Base+0x6af4>
   19dc8:	ldrb	r0, [r1, #2]!
   19dcc:	cmp	r0, #32
   19dd0:	bhi	19de8 <main@@Base+0x6b08>
   19dd4:	mov	r1, r2
   19dd8:	ldr	r0, [sp, #44]	; 0x2c
   19ddc:	ldr	r2, [sp, #52]	; 0x34
   19de0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19de4:	mov	r1, r0
   19de8:	cmp	r8, r1
   19dec:	beq	19e48 <main@@Base+0x6b68>
   19df0:	ldr	r0, [sp, #44]	; 0x2c
   19df4:	ldr	r2, [sp, #52]	; 0x34
   19df8:	sub	r3, fp, #64	; 0x40
   19dfc:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   19e00:	mov	r4, r0
   19e04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19e08:	cmp	r0, #0
   19e0c:	beq	16598 <main@@Base+0x32b8>
   19e10:	ldr	r0, [sp, #44]	; 0x2c
   19e14:	mov	r1, #0
   19e18:	ldr	r0, [r0]
   19e1c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   19e20:	cmp	r0, #0
   19e24:	beq	16598 <main@@Base+0x32b8>
   19e28:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19e2c:	str	r1, [r0]
   19e30:	ldr	r5, [sp, #52]	; 0x34
   19e34:	ldr	sl, [sp, #44]	; 0x2c
   19e38:	sub	r0, r5, r4
   19e3c:	cmp	r0, #2
   19e40:	blt	19ea0 <main@@Base+0x6bc0>
   19e44:	b	19e70 <main@@Base+0x6b90>
   19e48:	ldr	sl, [sp, #44]	; 0x2c
   19e4c:	ldr	r5, [sp, #52]	; 0x34
   19e50:	mov	r0, sl
   19e54:	mov	r1, r8
   19e58:	mov	r2, r5
   19e5c:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   19e60:	mov	r4, r0
   19e64:	sub	r0, r5, r4
   19e68:	cmp	r0, #2
   19e6c:	blt	19ea0 <main@@Base+0x6bc0>
   19e70:	ldrb	r0, [r4]
   19e74:	cmp	r0, #32
   19e78:	bls	19e8c <main@@Base+0x6bac>
   19e7c:	mov	r2, r4
   19e80:	cmp	r2, r5
   19e84:	bne	19ebc <main@@Base+0x6bdc>
   19e88:	b	1a578 <main@@Base+0x7298>
   19e8c:	bne	19ea0 <main@@Base+0x6bc0>
   19e90:	mov	r2, r4
   19e94:	ldrb	r0, [r2, #1]!
   19e98:	cmp	r0, #32
   19e9c:	bhi	19eb4 <main@@Base+0x6bd4>
   19ea0:	mov	r0, sl
   19ea4:	mov	r1, r4
   19ea8:	mov	r2, r5
   19eac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19eb0:	mov	r2, r0
   19eb4:	cmp	r2, r5
   19eb8:	beq	1a578 <main@@Base+0x7298>
   19ebc:	ldrb	r0, [r2]
   19ec0:	cmp	r0, #44	; 0x2c
   19ec4:	bne	1a590 <main@@Base+0x72b0>
   19ec8:	add	r1, r2, #1
   19ecc:	sub	r0, r5, r1
   19ed0:	cmp	r0, #2
   19ed4:	blt	19f04 <main@@Base+0x6c24>
   19ed8:	ldrb	r0, [r1]
   19edc:	cmp	r0, #32
   19ee0:	bls	19ef4 <main@@Base+0x6c14>
   19ee4:	mov	r2, r1
   19ee8:	cmp	r2, r5
   19eec:	bne	19f1c <main@@Base+0x6c3c>
   19ef0:	b	1a60c <main@@Base+0x732c>
   19ef4:	bne	19f04 <main@@Base+0x6c24>
   19ef8:	ldrb	r0, [r2, #2]!
   19efc:	cmp	r0, #32
   19f00:	bhi	19f14 <main@@Base+0x6c34>
   19f04:	mov	r0, sl
   19f08:	mov	r2, r5
   19f0c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   19f10:	mov	r2, r0
   19f14:	cmp	r2, r5
   19f18:	beq	1a60c <main@@Base+0x732c>
   19f1c:	ldrb	r0, [r2]
   19f20:	cmp	r0, #125	; 0x7d
   19f24:	bne	195e0 <main@@Base+0x6300>
   19f28:	add	r1, r2, #1
   19f2c:	sub	r0, r5, r1
   19f30:	cmp	r0, #2
   19f34:	blt	1a7c8 <main@@Base+0x74e8>
   19f38:	b	1a5ac <main@@Base+0x72cc>
   19f3c:	cmp	r0, #93	; 0x5d
   19f40:	bne	1a518 <main@@Base+0x7238>
   19f44:	ldr	r6, [sp, #52]	; 0x34
   19f48:	ldr	sl, [sp, #44]	; 0x2c
   19f4c:	add	r1, r2, #1
   19f50:	sub	r0, r6, r1
   19f54:	cmp	r0, #2
   19f58:	blt	1a704 <main@@Base+0x7424>
   19f5c:	ldrb	r0, [r1]
   19f60:	cmp	r0, #32
   19f64:	bls	1a6e8 <main@@Base+0x7408>
   19f68:	ldr	r6, [sp, #52]	; 0x34
   19f6c:	ldr	sl, [sp, #44]	; 0x2c
   19f70:	mov	r4, r1
   19f74:	b	16a4c <main@@Base+0x376c>
   19f78:	ldr	sl, [sp, #44]	; 0x2c
   19f7c:	ldr	r6, [sp, #52]	; 0x34
   19f80:	mov	r1, r2
   19f84:	mov	r0, sl
   19f88:	mov	r2, r6
   19f8c:	mov	r3, #9
   19f90:	b	15a14 <main@@Base+0x2734>
   19f94:	mov	r4, r6
   19f98:	b	1a734 <main@@Base+0x7454>
   19f9c:	mov	r0, sl
   19fa0:	mov	r1, r6
   19fa4:	b	1a528 <main@@Base+0x7248>
   19fa8:	cmp	r0, #93	; 0x5d
   19fac:	bne	1a560 <main@@Base+0x7280>
   19fb0:	ldr	r0, [sp, #52]	; 0x34
   19fb4:	add	r1, r4, #1
   19fb8:	sub	r0, r0, r1
   19fbc:	cmp	r0, #2
   19fc0:	blt	1a724 <main@@Base+0x7444>
   19fc4:	b	1a060 <main@@Base+0x6d80>
   19fc8:	mov	r4, r6
   19fcc:	ldr	r0, [sp, #36]	; 0x24
   19fd0:	ldr	r0, [r0]
   19fd4:	cmp	r0, #0
   19fd8:	bne	160d0 <main@@Base+0x2df0>
   19fdc:	b	1a038 <main@@Base+0x6d58>
   19fe0:	mov	r0, sl
   19fe4:	mov	r1, r6
   19fe8:	mov	r2, r6
   19fec:	b	1a56c <main@@Base+0x728c>
   19ff0:	cmp	r0, #125	; 0x7d
   19ff4:	bne	1a5f0 <main@@Base+0x7310>
   19ff8:	ldr	r6, [sp, #52]	; 0x34
   19ffc:	ldr	sl, [sp, #44]	; 0x2c
   1a000:	add	r1, r3, #1
   1a004:	sub	r0, r6, r1
   1a008:	cmp	r0, #2
   1a00c:	blt	1a75c <main@@Base+0x747c>
   1a010:	ldrb	r0, [r1]
   1a014:	cmp	r0, #32
   1a018:	bls	1a740 <main@@Base+0x7460>
   1a01c:	ldr	r6, [sp, #52]	; 0x34
   1a020:	ldr	sl, [sp, #44]	; 0x2c
   1a024:	mov	r4, r1
   1a028:	ldr	r0, [sp, #36]	; 0x24
   1a02c:	ldr	r0, [r0]
   1a030:	cmp	r0, #0
   1a034:	bne	160d0 <main@@Base+0x2df0>
   1a038:	ldr	r0, [sl]
   1a03c:	bl	2da14 <flatcc_builder_end_table@@Base>
   1a040:	cmp	r0, #0
   1a044:	str	r0, [sp, #60]	; 0x3c
   1a048:	bne	160f4 <main@@Base+0x2e14>
   1a04c:	b	160d0 <main@@Base+0x2df0>
   1a050:	add	r1, r4, #1
   1a054:	sub	r0, r6, r1
   1a058:	cmp	r0, #2
   1a05c:	blt	1a724 <main@@Base+0x7444>
   1a060:	ldrb	r0, [r1]
   1a064:	cmp	r0, #32
   1a068:	bls	1a714 <main@@Base+0x7434>
   1a06c:	mov	r4, r1
   1a070:	b	1a734 <main@@Base+0x7454>
   1a074:	mov	r0, sl
   1a078:	mov	r1, r6
   1a07c:	b	1a600 <main@@Base+0x7320>
   1a080:	bne	1a090 <main@@Base+0x6db0>
   1a084:	ldrb	r0, [r4, #2]!
   1a088:	cmp	r0, #32
   1a08c:	bhi	1a0a0 <main@@Base+0x6dc0>
   1a090:	ldr	r0, [sp, #44]	; 0x2c
   1a094:	ldr	r2, [sp, #52]	; 0x34
   1a098:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a09c:	mov	r4, r0
   1a0a0:	ldr	r6, [sp, #52]	; 0x34
   1a0a4:	cmp	r4, r6
   1a0a8:	beq	1a0bc <main@@Base+0x6ddc>
   1a0ac:	ldrb	r0, [r4]
   1a0b0:	cmp	r0, #93	; 0x5d
   1a0b4:	beq	1a62c <main@@Base+0x734c>
   1a0b8:	mov	r6, r4
   1a0bc:	mov	r0, #0
   1a0c0:	mov	r1, #1
   1a0c4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a0c8:	ldr	r0, [sp, #44]	; 0x2c
   1a0cc:	ldr	r0, [r0]
   1a0d0:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   1a0d4:	cmp	r0, #0
   1a0d8:	beq	1dd00 <main@@Base+0xaa20>
   1a0dc:	mov	r8, r0
   1a0e0:	mov	r4, r6
   1a0e4:	ldr	r5, [sp, #52]	; 0x34
   1a0e8:	mov	r6, #0
   1a0ec:	str	r6, [fp, #-52]	; 0xffffffcc
   1a0f0:	str	r6, [fp, #-56]	; 0xffffffc8
   1a0f4:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a0f8:	str	r6, [sp, #64]	; 0x40
   1a0fc:	cmp	r4, r5
   1a100:	beq	1a148 <main@@Base+0x6e68>
   1a104:	sub	r0, fp, #56	; 0x38
   1a108:	mov	r1, r4
   1a10c:	mov	r2, r5
   1a110:	add	r3, sp, #64	; 0x40
   1a114:	str	r0, [sp]
   1a118:	ldr	r0, [sp, #44]	; 0x2c
   1a11c:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1a120:	cmp	r0, r4
   1a124:	beq	1a15c <main@@Base+0x6e7c>
   1a128:	mov	r1, r0
   1a12c:	ldr	r0, [sp, #64]	; 0x40
   1a130:	cmp	r0, #0
   1a134:	beq	1a174 <main@@Base+0x6e94>
   1a138:	ldr	r7, [sp, #44]	; 0x2c
   1a13c:	ldr	r5, [sp, #52]	; 0x34
   1a140:	mov	r3, #8
   1a144:	b	1a194 <main@@Base+0x6eb4>
   1a148:	mov	r1, r5
   1a14c:	ldr	r7, [sp, #44]	; 0x2c
   1a150:	cmp	r4, r1
   1a154:	bne	1a1f4 <main@@Base+0x6f14>
   1a158:	b	1a1ac <main@@Base+0x6ecc>
   1a15c:	mov	r1, r4
   1a160:	ldr	r5, [sp, #52]	; 0x34
   1a164:	ldr	r7, [sp, #44]	; 0x2c
   1a168:	cmp	r4, r1
   1a16c:	bne	1a1f4 <main@@Base+0x6f14>
   1a170:	b	1a1ac <main@@Base+0x6ecc>
   1a174:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a178:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a17c:	subs	r3, r0, #256	; 0x100
   1a180:	sbcs	r2, r2, #0
   1a184:	bcc	1a2fc <main@@Base+0x701c>
   1a188:	ldr	r7, [sp, #44]	; 0x2c
   1a18c:	ldr	r5, [sp, #52]	; 0x34
   1a190:	mov	r3, #7
   1a194:	mov	r0, r7
   1a198:	mov	r2, r5
   1a19c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1a1a0:	mov	r1, r0
   1a1a4:	cmp	r4, r1
   1a1a8:	bne	1a1f4 <main@@Base+0x6f14>
   1a1ac:	sub	r0, fp, #60	; 0x3c
   1a1b0:	mov	r1, r4
   1a1b4:	mov	r2, r5
   1a1b8:	str	r0, [sp]
   1a1bc:	movw	r0, #33032	; 0x8108
   1a1c0:	movt	r0, #4
   1a1c4:	add	r3, r0, #84	; 0x54
   1a1c8:	mov	r0, r7
   1a1cc:	bl	1f518 <main@@Base+0xc238>
   1a1d0:	mov	r1, r0
   1a1d4:	cmp	r0, r4
   1a1d8:	beq	1dd2c <main@@Base+0xaa4c>
   1a1dc:	ldr	r0, [sp, #52]	; 0x34
   1a1e0:	cmp	r1, r0
   1a1e4:	beq	1dd2c <main@@Base+0xaa4c>
   1a1e8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a1ec:	ldr	r5, [sp, #52]	; 0x34
   1a1f0:	ldr	r7, [sp, #44]	; 0x2c
   1a1f4:	sub	r0, r5, r1
   1a1f8:	strb	r6, [r8]
   1a1fc:	cmp	r0, #2
   1a200:	blt	1a240 <main@@Base+0x6f60>
   1a204:	ldrb	r0, [r1]
   1a208:	cmp	r0, #32
   1a20c:	bls	1a224 <main@@Base+0x6f44>
   1a210:	ldr	r5, [sp, #52]	; 0x34
   1a214:	mov	r4, r1
   1a218:	cmp	r4, r5
   1a21c:	bne	1a258 <main@@Base+0x6f78>
   1a220:	b	1a61c <main@@Base+0x733c>
   1a224:	ldr	r5, [sp, #52]	; 0x34
   1a228:	ldr	r7, [sp, #44]	; 0x2c
   1a22c:	bne	1a240 <main@@Base+0x6f60>
   1a230:	mov	r4, r1
   1a234:	ldrb	r0, [r4, #1]!
   1a238:	cmp	r0, #32
   1a23c:	bhi	1a250 <main@@Base+0x6f70>
   1a240:	mov	r0, r7
   1a244:	mov	r2, r5
   1a248:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a24c:	mov	r4, r0
   1a250:	cmp	r4, r5
   1a254:	beq	1a61c <main@@Base+0x733c>
   1a258:	ldrb	r0, [r4]
   1a25c:	cmp	r0, #44	; 0x2c
   1a260:	bne	1a624 <main@@Base+0x7344>
   1a264:	ldr	r5, [sp, #52]	; 0x34
   1a268:	add	r1, r4, #1
   1a26c:	sub	r0, r5, r1
   1a270:	cmp	r0, #2
   1a274:	ldr	r0, [sp, #44]	; 0x2c
   1a278:	blt	1a2b4 <main@@Base+0x6fd4>
   1a27c:	ldrb	r0, [r1]
   1a280:	cmp	r0, #32
   1a284:	bls	1a29c <main@@Base+0x6fbc>
   1a288:	ldr	r5, [sp, #52]	; 0x34
   1a28c:	mov	r4, r1
   1a290:	cmp	r4, r5
   1a294:	bne	1a2c8 <main@@Base+0x6fe8>
   1a298:	b	1a680 <main@@Base+0x73a0>
   1a29c:	ldr	r5, [sp, #52]	; 0x34
   1a2a0:	ldr	r0, [sp, #44]	; 0x2c
   1a2a4:	bne	1a2b4 <main@@Base+0x6fd4>
   1a2a8:	ldrb	r2, [r4, #2]!
   1a2ac:	cmp	r2, #32
   1a2b0:	bhi	1a2c0 <main@@Base+0x6fe0>
   1a2b4:	mov	r2, r5
   1a2b8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a2bc:	mov	r4, r0
   1a2c0:	cmp	r4, r5
   1a2c4:	beq	1a680 <main@@Base+0x73a0>
   1a2c8:	ldrb	r0, [r4]
   1a2cc:	cmp	r0, #93	; 0x5d
   1a2d0:	beq	1a62c <main@@Base+0x734c>
   1a2d4:	mov	r0, #0
   1a2d8:	mov	r1, #1
   1a2dc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a2e0:	ldr	r0, [sp, #44]	; 0x2c
   1a2e4:	ldr	r0, [r0]
   1a2e8:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   1a2ec:	mov	r8, r0
   1a2f0:	cmp	r0, #0
   1a2f4:	bne	1a0e4 <main@@Base+0x6e04>
   1a2f8:	b	1dd30 <main@@Base+0xaa50>
   1a2fc:	mov	r6, r0
   1a300:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a304:	ldr	r5, [sp, #52]	; 0x34
   1a308:	ldr	r7, [sp, #44]	; 0x2c
   1a30c:	cmp	r4, r1
   1a310:	bne	1a1f4 <main@@Base+0x6f14>
   1a314:	b	1a1ac <main@@Base+0x6ecc>
   1a318:	ldr	r6, [sp, #52]	; 0x34
   1a31c:	ldr	sl, [sp, #44]	; 0x2c
   1a320:	b	158d0 <main@@Base+0x25f0>
   1a324:	ldr	r6, [sp, #52]	; 0x34
   1a328:	ldr	sl, [sp, #44]	; 0x2c
   1a32c:	bne	1a340 <main@@Base+0x7060>
   1a330:	ldrb	r0, [r2, #2]!
   1a334:	cmp	r0, #32
   1a338:	mov	r4, r2
   1a33c:	bhi	15a1c <main@@Base+0x273c>
   1a340:	mov	r0, sl
   1a344:	mov	r2, r6
   1a348:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a34c:	b	15a18 <main@@Base+0x2738>
   1a350:	ldr	sl, [sp, #44]	; 0x2c
   1a354:	ldr	r6, [sp, #52]	; 0x34
   1a358:	mov	r1, r2
   1a35c:	mov	r0, sl
   1a360:	mov	r2, r6
   1a364:	mov	r3, #9
   1a368:	b	16230 <main@@Base+0x2f50>
   1a36c:	ldr	r0, [sp, #44]	; 0x2c
   1a370:	ldr	r2, [sp, #52]	; 0x34
   1a374:	mov	r1, r4
   1a378:	mov	r3, #9
   1a37c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1a380:	b	1a550 <main@@Base+0x7270>
   1a384:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1a388:	str	r6, [fp, #-60]	; 0xffffffc4
   1a38c:	cmp	r7, r4
   1a390:	bne	1a3d0 <main@@Base+0x70f0>
   1a394:	sub	r0, fp, #60	; 0x3c
   1a398:	ldr	r2, [sp, #52]	; 0x34
   1a39c:	mov	r1, r7
   1a3a0:	str	r0, [sp]
   1a3a4:	movw	r0, #33032	; 0x8108
   1a3a8:	movt	r0, #4
   1a3ac:	add	r3, r0, #48	; 0x30
   1a3b0:	ldr	r0, [sp, #44]	; 0x2c
   1a3b4:	bl	244d0 <main@@Base+0x111f0>
   1a3b8:	cmp	r0, r7
   1a3bc:	mov	r4, r0
   1a3c0:	ldrne	r0, [sp, #52]	; 0x34
   1a3c4:	cmpne	r4, r0
   1a3c8:	beq	1dd30 <main@@Base+0xaa50>
   1a3cc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1a3d0:	ldr	sl, [sp, #44]	; 0x2c
   1a3d4:	cmp	r6, #0
   1a3d8:	bne	1a3e8 <main@@Base+0x7108>
   1a3dc:	ldrb	r0, [sl, #8]
   1a3e0:	tst	r0, #2
   1a3e4:	beq	18db8 <main@@Base+0x5ad8>
   1a3e8:	ldr	r0, [sl]
   1a3ec:	mov	r1, #21
   1a3f0:	mov	r2, #4
   1a3f4:	mov	r3, #4
   1a3f8:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   1a3fc:	cmp	r0, #0
   1a400:	beq	1dd30 <main@@Base+0xaa50>
   1a404:	str	r6, [r0]
   1a408:	ldr	sl, [sp, #44]	; 0x2c
   1a40c:	ldr	r6, [sp, #52]	; 0x34
   1a410:	b	1db28 <main@@Base+0xa848>
   1a414:	ldr	sl, [sp, #44]	; 0x2c
   1a418:	mov	r4, r6
   1a41c:	b	18854 <main@@Base+0x5574>
   1a420:	cmp	r0, #93	; 0x5d
   1a424:	bne	1a76c <main@@Base+0x748c>
   1a428:	ldr	r0, [sp, #52]	; 0x34
   1a42c:	add	r1, r4, #1
   1a430:	sub	r0, r0, r1
   1a434:	cmp	r0, #2
   1a438:	blt	1a4dc <main@@Base+0x71fc>
   1a43c:	ldrb	r0, [r1]
   1a440:	cmp	r0, #32
   1a444:	bhi	1a4d0 <main@@Base+0x71f0>
   1a448:	bne	1a4dc <main@@Base+0x71fc>
   1a44c:	ldrb	r0, [r4, #2]!
   1a450:	cmp	r0, #32
   1a454:	bhi	1a784 <main@@Base+0x74a4>
   1a458:	b	1a4dc <main@@Base+0x71fc>
   1a45c:	mov	r0, sl
   1a460:	mov	r1, r6
   1a464:	mov	r2, r6
   1a468:	b	1a778 <main@@Base+0x7498>
   1a46c:	ldr	r6, [sp, #52]	; 0x34
   1a470:	ldr	sl, [sp, #44]	; 0x2c
   1a474:	bne	1a488 <main@@Base+0x71a8>
   1a478:	ldrb	r0, [r4, #2]!
   1a47c:	cmp	r0, #32
   1a480:	mov	r7, r4
   1a484:	bhi	15aec <main@@Base+0x280c>
   1a488:	mov	r0, sl
   1a48c:	mov	r2, r6
   1a490:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a494:	b	15ae8 <main@@Base+0x2808>
   1a498:	ldr	sl, [sp, #44]	; 0x2c
   1a49c:	ldr	r6, [sp, #52]	; 0x34
   1a4a0:	mov	r1, r2
   1a4a4:	mov	r0, sl
   1a4a8:	mov	r2, r6
   1a4ac:	mov	r3, #10
   1a4b0:	b	158b8 <main@@Base+0x25d8>
   1a4b4:	add	r1, r4, #1
   1a4b8:	sub	r0, r6, r1
   1a4bc:	cmp	r0, #2
   1a4c0:	blt	1a4dc <main@@Base+0x71fc>
   1a4c4:	ldrb	r0, [r1]
   1a4c8:	cmp	r0, #32
   1a4cc:	bls	1a448 <main@@Base+0x7168>
   1a4d0:	ldr	sl, [sp, #44]	; 0x2c
   1a4d4:	mov	r4, r1
   1a4d8:	b	18854 <main@@Base+0x5574>
   1a4dc:	ldr	r0, [sp, #44]	; 0x2c
   1a4e0:	ldr	r2, [sp, #52]	; 0x34
   1a4e4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a4e8:	b	1a780 <main@@Base+0x74a0>
   1a4ec:	ldr	r6, [sp, #52]	; 0x34
   1a4f0:	ldr	sl, [sp, #44]	; 0x2c
   1a4f4:	bne	1a508 <main@@Base+0x7228>
   1a4f8:	ldrb	r0, [r2, #2]!
   1a4fc:	cmp	r0, #32
   1a500:	mov	r4, r2
   1a504:	bhi	16238 <main@@Base+0x2f58>
   1a508:	mov	r0, sl
   1a50c:	mov	r2, r6
   1a510:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a514:	b	16234 <main@@Base+0x2f54>
   1a518:	ldr	sl, [sp, #44]	; 0x2c
   1a51c:	ldr	r6, [sp, #52]	; 0x34
   1a520:	mov	r1, r2
   1a524:	mov	r0, sl
   1a528:	mov	r2, r6
   1a52c:	mov	r3, #9
   1a530:	b	16a44 <main@@Base+0x3764>
   1a534:	bne	1a544 <main@@Base+0x7264>
   1a538:	ldrb	r0, [r4, #2]!
   1a53c:	cmp	r0, #32
   1a540:	bhi	1a554 <main@@Base+0x7274>
   1a544:	ldr	r0, [sp, #44]	; 0x2c
   1a548:	ldr	r2, [sp, #52]	; 0x34
   1a54c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a550:	mov	r4, r0
   1a554:	ldr	r6, [sp, #52]	; 0x34
   1a558:	ldr	sl, [sp, #44]	; 0x2c
   1a55c:	b	16680 <main@@Base+0x33a0>
   1a560:	ldr	r0, [sp, #44]	; 0x2c
   1a564:	ldr	r2, [sp, #52]	; 0x34
   1a568:	mov	r1, r4
   1a56c:	mov	r3, #9
   1a570:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1a574:	b	1a730 <main@@Base+0x7450>
   1a578:	mov	r4, r5
   1a57c:	ldr	r0, [sp, #36]	; 0x24
   1a580:	ldr	r0, [r0]
   1a584:	cmp	r0, #0
   1a588:	bne	16598 <main@@Base+0x32b8>
   1a58c:	b	1a5cc <main@@Base+0x72ec>
   1a590:	cmp	r0, #125	; 0x7d
   1a594:	bne	1a78c <main@@Base+0x74ac>
   1a598:	ldr	r0, [sp, #52]	; 0x34
   1a59c:	add	r1, r2, #1
   1a5a0:	sub	r0, r0, r1
   1a5a4:	cmp	r0, #2
   1a5a8:	blt	1a7c8 <main@@Base+0x74e8>
   1a5ac:	ldrb	r0, [r1]
   1a5b0:	cmp	r0, #32
   1a5b4:	bls	1a7b4 <main@@Base+0x74d4>
   1a5b8:	mov	r4, r1
   1a5bc:	ldr	r0, [sp, #36]	; 0x24
   1a5c0:	ldr	r0, [r0]
   1a5c4:	cmp	r0, #0
   1a5c8:	bne	16598 <main@@Base+0x32b8>
   1a5cc:	ldr	r0, [sp, #44]	; 0x2c
   1a5d0:	ldr	r0, [r0]
   1a5d4:	bl	2da14 <flatcc_builder_end_table@@Base>
   1a5d8:	cmp	r0, #0
   1a5dc:	str	r0, [sp, #60]	; 0x3c
   1a5e0:	beq	16598 <main@@Base+0x32b8>
   1a5e4:	ldr	r6, [sp, #52]	; 0x34
   1a5e8:	ldr	sl, [sp, #44]	; 0x2c
   1a5ec:	b	165c4 <main@@Base+0x32e4>
   1a5f0:	ldr	sl, [sp, #44]	; 0x2c
   1a5f4:	ldr	r6, [sp, #52]	; 0x34
   1a5f8:	mov	r1, r3
   1a5fc:	mov	r0, sl
   1a600:	mov	r2, r6
   1a604:	mov	r3, #10
   1a608:	b	160b8 <main@@Base+0x2dd8>
   1a60c:	mov	r0, sl
   1a610:	mov	r1, r5
   1a614:	mov	r2, r5
   1a618:	b	1a798 <main@@Base+0x74b8>
   1a61c:	ldr	r4, [sp, #52]	; 0x34
   1a620:	b	1a6b0 <main@@Base+0x73d0>
   1a624:	cmp	r0, #93	; 0x5d
   1a628:	bne	1a7a0 <main@@Base+0x74c0>
   1a62c:	ldr	r0, [sp, #52]	; 0x34
   1a630:	add	r1, r4, #1
   1a634:	sub	r0, r0, r1
   1a638:	cmp	r0, #2
   1a63c:	blt	1a6a0 <main@@Base+0x73c0>
   1a640:	ldrb	r0, [r1]
   1a644:	cmp	r0, #32
   1a648:	bls	1a690 <main@@Base+0x73b0>
   1a64c:	mov	r4, r1
   1a650:	b	1a6b0 <main@@Base+0x73d0>
   1a654:	ldr	r6, [sp, #52]	; 0x34
   1a658:	ldr	sl, [sp, #44]	; 0x2c
   1a65c:	bne	1a670 <main@@Base+0x7390>
   1a660:	ldrb	r0, [r2, #2]!
   1a664:	cmp	r0, #32
   1a668:	mov	r4, r2
   1a66c:	bhi	158c0 <main@@Base+0x25e0>
   1a670:	mov	r0, sl
   1a674:	mov	r2, r6
   1a678:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a67c:	b	158bc <main@@Base+0x25dc>
   1a680:	ldr	r1, [sp, #52]	; 0x34
   1a684:	ldr	r0, [sp, #44]	; 0x2c
   1a688:	mov	r2, r1
   1a68c:	b	1a7ac <main@@Base+0x74cc>
   1a690:	bne	1a6a0 <main@@Base+0x73c0>
   1a694:	ldrb	r0, [r4, #2]!
   1a698:	cmp	r0, #32
   1a69c:	bhi	1a6b0 <main@@Base+0x73d0>
   1a6a0:	ldr	r0, [sp, #44]	; 0x2c
   1a6a4:	ldr	r2, [sp, #52]	; 0x34
   1a6a8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a6ac:	mov	r4, r0
   1a6b0:	ldr	sl, [sp, #44]	; 0x2c
   1a6b4:	ldr	r0, [sl]
   1a6b8:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   1a6bc:	ldr	r6, [sp, #52]	; 0x34
   1a6c0:	ldr	r5, [sp, #48]	; 0x30
   1a6c4:	cmp	r0, #0
   1a6c8:	str	r0, [sp, #60]	; 0x3c
   1a6cc:	beq	13398 <main@@Base+0xb8>
   1a6d0:	ldr	r0, [sl]
   1a6d4:	mov	r1, #13
   1a6d8:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   1a6dc:	cmp	r0, #0
   1a6e0:	bne	1d2e4 <main@@Base+0xa004>
   1a6e4:	b	13398 <main@@Base+0xb8>
   1a6e8:	ldr	r6, [sp, #52]	; 0x34
   1a6ec:	ldr	sl, [sp, #44]	; 0x2c
   1a6f0:	bne	1a704 <main@@Base+0x7424>
   1a6f4:	ldrb	r0, [r2, #2]!
   1a6f8:	cmp	r0, #32
   1a6fc:	mov	r4, r2
   1a700:	bhi	16a4c <main@@Base+0x376c>
   1a704:	mov	r0, sl
   1a708:	mov	r2, r6
   1a70c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a710:	b	16a48 <main@@Base+0x3768>
   1a714:	bne	1a724 <main@@Base+0x7444>
   1a718:	ldrb	r0, [r4, #2]!
   1a71c:	cmp	r0, #32
   1a720:	bhi	1a734 <main@@Base+0x7454>
   1a724:	ldr	r0, [sp, #44]	; 0x2c
   1a728:	ldr	r2, [sp, #52]	; 0x34
   1a72c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a730:	mov	r4, r0
   1a734:	ldr	r6, [sp, #52]	; 0x34
   1a738:	ldr	sl, [sp, #44]	; 0x2c
   1a73c:	b	16f38 <main@@Base+0x3c58>
   1a740:	ldr	r6, [sp, #52]	; 0x34
   1a744:	ldr	sl, [sp, #44]	; 0x2c
   1a748:	bne	1a75c <main@@Base+0x747c>
   1a74c:	ldrb	r0, [r3, #2]!
   1a750:	cmp	r0, #32
   1a754:	mov	r4, r3
   1a758:	bhi	160c0 <main@@Base+0x2de0>
   1a75c:	mov	r0, sl
   1a760:	mov	r2, r6
   1a764:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a768:	b	160bc <main@@Base+0x2ddc>
   1a76c:	ldr	r0, [sp, #44]	; 0x2c
   1a770:	ldr	r2, [sp, #52]	; 0x34
   1a774:	mov	r1, r4
   1a778:	mov	r3, #9
   1a77c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1a780:	mov	r4, r0
   1a784:	ldr	sl, [sp, #44]	; 0x2c
   1a788:	b	18854 <main@@Base+0x5574>
   1a78c:	mov	r1, r2
   1a790:	ldr	r0, [sp, #44]	; 0x2c
   1a794:	ldr	r2, [sp, #52]	; 0x34
   1a798:	mov	r3, #10
   1a79c:	b	16580 <main@@Base+0x32a0>
   1a7a0:	ldr	r0, [sp, #44]	; 0x2c
   1a7a4:	ldr	r2, [sp, #52]	; 0x34
   1a7a8:	mov	r1, r4
   1a7ac:	mov	r3, #9
   1a7b0:	b	17074 <main@@Base+0x3d94>
   1a7b4:	bne	1a7c8 <main@@Base+0x74e8>
   1a7b8:	ldrb	r0, [r2, #2]!
   1a7bc:	cmp	r0, #32
   1a7c0:	mov	r4, r2
   1a7c4:	bhi	16588 <main@@Base+0x32a8>
   1a7c8:	ldr	r0, [sp, #44]	; 0x2c
   1a7cc:	ldr	r2, [sp, #52]	; 0x34
   1a7d0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1a7d4:	b	16584 <main@@Base+0x32a4>
   1a7d8:	cmp	r2, r6
   1a7dc:	mov	r8, r6
   1a7e0:	beq	1a834 <main@@Base+0x7554>
   1a7e4:	ldrb	r0, [r2]
   1a7e8:	cmp	r0, #46	; 0x2e
   1a7ec:	beq	1a808 <main@@Base+0x7528>
   1a7f0:	cmp	r0, #34	; 0x22
   1a7f4:	bne	1a824 <main@@Base+0x7544>
   1a7f8:	ldr	r0, [sp, #40]	; 0x28
   1a7fc:	mov	r1, #0
   1a800:	add	r8, r2, #1
   1a804:	b	1a830 <main@@Base+0x7550>
   1a808:	mov	r1, r2
   1a80c:	mov	r0, sl
   1a810:	mov	r2, r6
   1a814:	mov	r3, #5
   1a818:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1a81c:	mov	r8, r0
   1a820:	b	1a834 <main@@Base+0x7554>
   1a824:	ldr	r0, [sp, #40]	; 0x28
   1a828:	mov	r1, #1
   1a82c:	mov	r8, r2
   1a830:	str	r1, [r0]
   1a834:	sub	r9, r6, r8
   1a838:	mov	r0, #8
   1a83c:	cmp	r9, #8
   1a840:	movcc	r0, r9
   1a844:	and	r0, r0, #15
   1a848:	sub	r2, r0, #1
   1a84c:	cmp	r2, #7
   1a850:	bhi	1db14 <main@@Base+0xa834>
   1a854:	add	r0, pc, #32
   1a858:	mov	sl, #0
   1a85c:	mov	ip, #0
   1a860:	mov	r4, #0
   1a864:	mov	r1, #0
   1a868:	mov	r3, #0
   1a86c:	mov	r6, #0
   1a870:	mov	r7, #0
   1a874:	mov	r5, #0
   1a878:	ldr	pc, [r0, r2, lsl #2]
   1a87c:	andeq	sl, r1, r0, ror #17
   1a880:	ldrdeq	sl, [r1], -r8
   1a884:	ldrdeq	sl, [r1], -r0
   1a888:	andeq	sl, r1, r8, asr #17
   1a88c:			; <UNDEFINED> instruction: 0x0001a8bc
   1a890:			; <UNDEFINED> instruction: 0x0001a8b0
   1a894:	andeq	sl, r1, r0, lsr #17
   1a898:	muleq	r1, ip, r8
   1a89c:	ldrb	ip, [r8, #7]
   1a8a0:	ldrb	r0, [r8, #6]
   1a8a4:	mov	r4, sl
   1a8a8:	orr	r0, ip, r0, lsl #8
   1a8ac:	mov	sl, r0
   1a8b0:	ldrb	r0, [r8, #5]
   1a8b4:	mov	r1, r4
   1a8b8:	orr	sl, sl, r0, lsl #16
   1a8bc:	ldrb	r0, [r8, #4]
   1a8c0:	mov	r3, r1
   1a8c4:	orr	sl, sl, r0, lsl #24
   1a8c8:	ldrb	r0, [r8, #3]
   1a8cc:	orr	r6, r0, r3
   1a8d0:	ldrb	r0, [r8, #2]
   1a8d4:	orr	r7, r6, r0, lsl #8
   1a8d8:	ldrb	r0, [r8, #1]
   1a8dc:	orr	r5, r7, r0, lsl #16
   1a8e0:	ldrb	r0, [r8]
   1a8e4:	movw	r1, #29281	; 0x7261
   1a8e8:	movw	r7, #29556	; 0x7374
   1a8ec:	movt	r1, #24946	; 0x6172
   1a8f0:	movt	r7, #29797	; 0x7465
   1a8f4:	subs	r1, sl, r1
   1a8f8:	orr	r0, r5, r0, lsl #24
   1a8fc:	sbcs	r1, r0, r7
   1a900:	bcs	1a9cc <main@@Base+0x76ec>
   1a904:	movw	r1, #28004	; 0x6d64
   1a908:	movw	r3, #28530	; 0x6f72
   1a90c:	movw	r2, #29285	; 0x7265
   1a910:	movw	r6, #24430	; 0x5f6e
   1a914:	movt	r1, #28257	; 0x6e61
   1a918:	movt	r3, #28276	; 0x6e74
   1a91c:	movt	r2, #28769	; 0x7061
   1a920:	movt	r6, #28276	; 0x6e74
   1a924:	cmp	r0, r1
   1a928:	bhi	1ab5c <main@@Base+0x787c>
   1a92c:	ldr	r6, [sp, #52]	; 0x34
   1a930:	movw	r1, #25975	; 0x6577
   1a934:	movt	r1, #26220	; 0x666c
   1a938:	cmp	r0, r1
   1a93c:	bhi	1ac6c <main@@Base+0x798c>
   1a940:	movw	r1, #27759	; 0x6c6f
   1a944:	movt	r1, #25455	; 0x636f
   1a948:	eor	r2, r0, r1
   1a94c:	and	r1, sl, #-16777216	; 0xff000000
   1a950:	eor	r3, r1, #1912602624	; 0x72000000
   1a954:	orrs	r2, r3, r2
   1a958:	beq	1b598 <main@@Base+0x82b8>
   1a95c:	movw	r2, #25965	; 0x656d
   1a960:	ldr	sl, [sp, #44]	; 0x2c
   1a964:	eor	r1, r1, #2030043136	; 0x79000000
   1a968:	movt	r2, #25966	; 0x656e
   1a96c:	eor	r0, r0, r2
   1a970:	orrs	r0, r1, r0
   1a974:	bne	1db14 <main@@Base+0xa834>
   1a978:	cmp	r9, #6
   1a97c:	mov	r1, r8
   1a980:	blt	1cf34 <main@@Base+0x9c54>
   1a984:	ldr	r1, [sp, #40]	; 0x28
   1a988:	mov	r2, r8
   1a98c:	ldrb	r0, [r2, #5]!
   1a990:	ldr	r1, [r1]
   1a994:	cmp	r1, #0
   1a998:	beq	1bd98 <main@@Base+0x8ab8>
   1a99c:	cmp	r0, #33	; 0x21
   1a9a0:	bcc	1a9b0 <main@@Base+0x76d0>
   1a9a4:	cmp	r0, #58	; 0x3a
   1a9a8:	mov	r1, r8
   1a9ac:	bne	1cf34 <main@@Base+0x9c54>
   1a9b0:	ldr	r0, [sp, #40]	; 0x28
   1a9b4:	mov	r1, #0
   1a9b8:	str	r1, [r0]
   1a9bc:	sub	r0, r6, r2
   1a9c0:	cmp	r0, #2
   1a9c4:	bge	1bdb4 <main@@Base+0x8ad4>
   1a9c8:	b	1c23c <main@@Base+0x8f5c>
   1a9cc:	movw	r1, #0
   1a9d0:	movw	r2, #29544	; 0x7368
   1a9d4:	movt	r1, #26163	; 0x6633
   1a9d8:	movt	r2, #26721	; 0x6861
   1a9dc:	subs	r1, sl, r1
   1a9e0:	sbcs	r1, r0, r7
   1a9e4:	bcs	1abe8 <main@@Base+0x7908>
   1a9e8:	movw	r1, #29281	; 0x7261
   1a9ec:	ldr	r6, [sp, #52]	; 0x34
   1a9f0:	movt	r1, #24946	; 0x6172
   1a9f4:	eor	r2, sl, r1
   1a9f8:	eor	r1, r0, r7
   1a9fc:	orrs	r2, r2, r1
   1aa00:	bne	1acec <main@@Base+0x7a0c>
   1aa04:	add	r9, r8, #8
   1aa08:	mov	r0, #8
   1aa0c:	mov	r5, r6
   1aa10:	sub	ip, r6, r9
   1aa14:	cmp	ip, #8
   1aa18:	movcc	r0, ip
   1aa1c:	and	r0, r0, #15
   1aa20:	sub	r6, r0, #1
   1aa24:	cmp	r6, #7
   1aa28:	bhi	1cb70 <main@@Base+0x9890>
   1aa2c:	add	r7, pc, #32
   1aa30:	mov	r1, #0
   1aa34:	mov	lr, #0
   1aa38:	mov	sl, #0
   1aa3c:	mov	r4, #0
   1aa40:	mov	r3, #0
   1aa44:	mov	r5, #0
   1aa48:	mov	r0, #0
   1aa4c:	mov	r2, #0
   1aa50:	ldr	pc, [r7, r6, lsl #2]
   1aa54:			; <UNDEFINED> instruction: 0x0001aab8
   1aa58:			; <UNDEFINED> instruction: 0x0001aab0
   1aa5c:	andeq	sl, r1, r8, lsr #21
   1aa60:	andeq	sl, r1, r0, lsr #21
   1aa64:	muleq	r1, r4, sl
   1aa68:	andeq	sl, r1, r8, lsl #21
   1aa6c:	andeq	sl, r1, r8, ror sl
   1aa70:	andeq	sl, r1, r4, ror sl
   1aa74:	ldrb	lr, [r8, #15]
   1aa78:	ldrb	r0, [r8, #14]
   1aa7c:	mov	sl, r1
   1aa80:	orr	r0, lr, r0, lsl #8
   1aa84:	mov	r1, r0
   1aa88:	ldrb	r0, [r8, #13]
   1aa8c:	mov	r4, sl
   1aa90:	orr	r1, r1, r0, lsl #16
   1aa94:	ldrb	r0, [r8, #12]
   1aa98:	mov	r3, r4
   1aa9c:	orr	r1, r1, r0, lsl #24
   1aaa0:	ldrb	r0, [r8, #11]
   1aaa4:	orr	r5, r0, r3
   1aaa8:	ldrb	r0, [r8, #10]
   1aaac:	orr	r0, r5, r0, lsl #8
   1aab0:	ldrb	r2, [r8, #9]
   1aab4:	orr	r2, r0, r2, lsl #16
   1aab8:	ldrb	r0, [r9]
   1aabc:	movw	r7, #26227	; 0x6673
   1aac0:	movt	r7, #31087	; 0x796f
   1aac4:	orr	r2, r2, r0, lsl #24
   1aac8:	movw	r0, #26989	; 0x696d
   1aacc:	movt	r0, #29810	; 0x7472
   1aad0:	subs	r0, r0, r1
   1aad4:	sbcs	r0, r7, r2
   1aad8:	bcc	1b4c0 <main@@Base+0x81e0>
   1aadc:	movw	r0, #29797	; 0x7465
   1aae0:	ldr	r6, [sp, #52]	; 0x34
   1aae4:	eor	r3, r2, r7
   1aae8:	movt	r0, #28530	; 0x6f72
   1aaec:	eor	r0, r1, r0
   1aaf0:	orrs	r0, r0, r3
   1aaf4:	beq	1b9e4 <main@@Base+0x8704>
   1aaf8:	movw	r0, #27763	; 0x6c73
   1aafc:	mov	r5, r6
   1ab00:	movt	r0, #28527	; 0x6f6f
   1ab04:	eor	r0, r1, r0
   1ab08:	movw	r1, #26210	; 0x6662
   1ab0c:	movt	r1, #31087	; 0x796f
   1ab10:	eor	r1, r2, r1
   1ab14:	orrs	r0, r0, r1
   1ab18:	bne	1cb70 <main@@Base+0x9890>
   1ab1c:	cmp	ip, #9
   1ab20:	blt	1cb70 <main@@Base+0x9890>
   1ab24:	ldr	r2, [sp, #40]	; 0x28
   1ab28:	mov	r1, r8
   1ab2c:	ldrb	r0, [r1, #16]!
   1ab30:	ldr	r2, [r2]
   1ab34:	cmp	r2, #0
   1ab38:	beq	1c10c <main@@Base+0x8e2c>
   1ab3c:	cmp	r0, #33	; 0x21
   1ab40:	bcc	1ab4c <main@@Base+0x786c>
   1ab44:	cmp	r0, #58	; 0x3a
   1ab48:	bne	1cb70 <main@@Base+0x9890>
   1ab4c:	ldr	r0, [sp, #40]	; 0x28
   1ab50:	mov	r2, #0
   1ab54:	str	r2, [r0]
   1ab58:	b	1c118 <main@@Base+0x8e38>
   1ab5c:	ldr	r5, [sp, #52]	; 0x34
   1ab60:	movw	r1, #29555	; 0x7373
   1ab64:	movt	r1, #29797	; 0x7465
   1ab68:	cmp	r0, r1
   1ab6c:	bhi	1adc4 <main@@Base+0x7ae4>
   1ab70:	subs	r1, sl, r6
   1ab74:	sbcs	r1, r0, r2
   1ab78:	bcs	1af7c <main@@Base+0x7c9c>
   1ab7c:	movw	r1, #28005	; 0x6d65
   1ab80:	movt	r1, #28257	; 0x6e61
   1ab84:	teq	r0, r1
   1ab88:	bne	1b5f0 <main@@Base+0x8310>
   1ab8c:	ldr	sl, [sp, #44]	; 0x2c
   1ab90:	cmp	r9, #5
   1ab94:	mov	r1, r8
   1ab98:	mov	r6, r5
   1ab9c:	blt	1d1cc <main@@Base+0x9eec>
   1aba0:	ldr	r1, [sp, #40]	; 0x28
   1aba4:	mov	r2, r8
   1aba8:	ldrb	r0, [r2, #4]!
   1abac:	ldr	r1, [r1]
   1abb0:	cmp	r1, #0
   1abb4:	beq	1be88 <main@@Base+0x8ba8>
   1abb8:	cmp	r0, #33	; 0x21
   1abbc:	bcc	1abcc <main@@Base+0x78ec>
   1abc0:	cmp	r0, #58	; 0x3a
   1abc4:	mov	r1, r8
   1abc8:	bne	1d1cc <main@@Base+0x9eec>
   1abcc:	ldr	r0, [sp, #40]	; 0x28
   1abd0:	mov	r1, #0
   1abd4:	str	r1, [r0]
   1abd8:	sub	r0, r6, r2
   1abdc:	cmp	r0, #2
   1abe0:	bge	1bea4 <main@@Base+0x8bc4>
   1abe4:	b	1c334 <main@@Base+0x9054>
   1abe8:	ldr	r6, [sp, #52]	; 0x34
   1abec:	subs	r1, sl, r2
   1abf0:	sbcs	r1, r0, r7
   1abf4:	bcs	1ae30 <main@@Base+0x7b50>
   1abf8:	movw	r1, #0
   1abfc:	bfc	sl, #0, #16
   1ac00:	eor	r0, r0, r7
   1ac04:	movt	r1, #26163	; 0x6633
   1ac08:	eor	r1, sl, r1
   1ac0c:	orrs	r0, r1, r0
   1ac10:	bne	1db10 <main@@Base+0xa830>
   1ac14:	ldr	sl, [sp, #44]	; 0x2c
   1ac18:	cmp	r9, #7
   1ac1c:	mov	r7, r8
   1ac20:	blt	1c788 <main@@Base+0x94a8>
   1ac24:	ldr	r2, [sp, #40]	; 0x28
   1ac28:	mov	r1, r8
   1ac2c:	ldrb	r0, [r1, #6]!
   1ac30:	ldr	r2, [r2]
   1ac34:	cmp	r2, #0
   1ac38:	beq	1bcd0 <main@@Base+0x89f0>
   1ac3c:	cmp	r0, #33	; 0x21
   1ac40:	bcc	1ac50 <main@@Base+0x7970>
   1ac44:	cmp	r0, #58	; 0x3a
   1ac48:	mov	r7, r8
   1ac4c:	bne	1c788 <main@@Base+0x94a8>
   1ac50:	ldr	r0, [sp, #40]	; 0x28
   1ac54:	mov	r2, #0
   1ac58:	str	r2, [r0]
   1ac5c:	sub	r0, r6, r1
   1ac60:	cmp	r0, #2
   1ac64:	bge	1bcec <main@@Base+0x8a0c>
   1ac68:	b	1c028 <main@@Base+0x8d48>
   1ac6c:	movw	r1, #65535	; 0xffff
   1ac70:	movw	r2, #30309	; 0x7665
   1ac74:	movt	r1, #26735	; 0x686f
   1ac78:	movt	r2, #26990	; 0x696e
   1ac7c:	cmp	r0, r1
   1ac80:	bhi	1b168 <main@@Base+0x7e88>
   1ac84:	movw	r1, #25976	; 0x6578
   1ac88:	movt	r1, #26220	; 0x666c
   1ac8c:	teq	r0, r1
   1ac90:	bne	1db10 <main@@Base+0xa830>
   1ac94:	ldr	sl, [sp, #44]	; 0x2c
   1ac98:	cmp	r9, #5
   1ac9c:	mov	r4, r8
   1aca0:	blt	1d234 <main@@Base+0x9f54>
   1aca4:	ldr	r2, [sp, #40]	; 0x28
   1aca8:	mov	r1, r8
   1acac:	ldrb	r0, [r1, #4]!
   1acb0:	ldr	r2, [r2]
   1acb4:	cmp	r2, #0
   1acb8:	beq	1bec0 <main@@Base+0x8be0>
   1acbc:	cmp	r0, #33	; 0x21
   1acc0:	bcc	1acd0 <main@@Base+0x79f0>
   1acc4:	cmp	r0, #58	; 0x3a
   1acc8:	mov	r4, r8
   1accc:	bne	1d234 <main@@Base+0x9f54>
   1acd0:	ldr	r0, [sp, #40]	; 0x28
   1acd4:	mov	r2, #0
   1acd8:	str	r2, [r0]
   1acdc:	sub	r0, r6, r1
   1ace0:	cmp	r0, #2
   1ace4:	bge	1bedc <main@@Base+0x8bfc>
   1ace8:	b	1c3b0 <main@@Base+0x90d0>
   1acec:	movw	r2, #28788	; 0x7074
   1acf0:	movt	r2, #25965	; 0x656d
   1acf4:	subs	r2, sl, r2
   1acf8:	sbcs	r2, r0, r7
   1acfc:	bcs	1b1e0 <main@@Base+0x7f00>
   1ad00:	movw	r0, #28524	; 0x6f6c
   1ad04:	movt	r0, #25199	; 0x626f
   1ad08:	eor	r0, sl, r0
   1ad0c:	orrs	r0, r0, r1
   1ad10:	beq	1b984 <main@@Base+0x86a4>
   1ad14:	movw	r0, #29541	; 0x7365
   1ad18:	movt	r0, #25185	; 0x6261
   1ad1c:	eor	r0, sl, r0
   1ad20:	orrs	r0, r0, r1
   1ad24:	bne	1db10 <main@@Base+0xa830>
   1ad28:	add	r7, r8, #8
   1ad2c:	mov	r1, #8
   1ad30:	ldr	sl, [sp, #44]	; 0x2c
   1ad34:	sub	r0, r6, r7
   1ad38:	cmp	r0, #8
   1ad3c:	movcc	r1, r0
   1ad40:	and	r2, r1, #15
   1ad44:	sub	r1, r2, #2
   1ad48:	cmp	r1, #7
   1ad4c:	bcs	1bf68 <main@@Base+0x8c88>
   1ad50:	ldrb	r1, [r8, #9]
   1ad54:	lsl	r2, r1, #16
   1ad58:	mov	r1, #0
   1ad5c:	ldrb	r3, [r7]
   1ad60:	orr	r2, r2, r3, lsl #24
   1ad64:	movw	r3, #0
   1ad68:	movt	r3, #13876	; 0x3634
   1ad6c:	eor	r2, r2, r3
   1ad70:	orrs	r1, r1, r2
   1ad74:	bne	1882c <main@@Base+0x554c>
   1ad78:	cmp	r0, #3
   1ad7c:	blt	1882c <main@@Base+0x554c>
   1ad80:	ldr	r2, [sp, #40]	; 0x28
   1ad84:	mov	r1, r8
   1ad88:	ldrb	r0, [r1, #10]!
   1ad8c:	ldr	r2, [r2]
   1ad90:	cmp	r2, #0
   1ad94:	beq	1c530 <main@@Base+0x9250>
   1ad98:	cmp	r0, #33	; 0x21
   1ad9c:	bcc	1ada8 <main@@Base+0x7ac8>
   1ada0:	cmp	r0, #58	; 0x3a
   1ada4:	bne	1882c <main@@Base+0x554c>
   1ada8:	ldr	r0, [sp, #40]	; 0x28
   1adac:	mov	r2, #0
   1adb0:	str	r2, [r0]
   1adb4:	sub	r0, r6, r1
   1adb8:	cmp	r0, #2
   1adbc:	bge	1c548 <main@@Base+0x9268>
   1adc0:	b	1d69c <main@@Base+0xa3bc>
   1adc4:	and	r6, sl, #-16777216	; 0xff000000
   1adc8:	eor	r4, r0, r7
   1adcc:	eor	r1, r6, #872415232	; 0x34000000
   1add0:	orrs	r1, r1, r4
   1add4:	bne	1b288 <main@@Base+0x7fa8>
   1add8:	cmp	r9, #6
   1addc:	mov	r7, r8
   1ade0:	mov	r6, r5
   1ade4:	blt	1c860 <main@@Base+0x9580>
   1ade8:	ldr	r2, [sp, #40]	; 0x28
   1adec:	mov	r1, r8
   1adf0:	ldrb	r0, [r1, #5]!
   1adf4:	ldr	r2, [r2]
   1adf8:	cmp	r2, #0
   1adfc:	beq	1bd08 <main@@Base+0x8a28>
   1ae00:	cmp	r0, #33	; 0x21
   1ae04:	bcc	1ae14 <main@@Base+0x7b34>
   1ae08:	cmp	r0, #58	; 0x3a
   1ae0c:	mov	r7, r8
   1ae10:	bne	1c860 <main@@Base+0x9580>
   1ae14:	ldr	r0, [sp, #40]	; 0x28
   1ae18:	mov	r2, #0
   1ae1c:	str	r2, [r0]
   1ae20:	sub	r0, r6, r1
   1ae24:	cmp	r0, #2
   1ae28:	bge	1bd24 <main@@Base+0x8a44>
   1ae2c:	b	1c0a4 <main@@Base+0x8dc4>
   1ae30:	eor	r2, sl, r2
   1ae34:	eor	r1, r0, r7
   1ae38:	orrs	r2, r2, r1
   1ae3c:	bne	1b2e8 <main@@Base+0x8008>
   1ae40:	add	r9, r8, #8
   1ae44:	mov	r0, #8
   1ae48:	sub	ip, r6, r9
   1ae4c:	cmp	ip, #8
   1ae50:	movcc	r0, ip
   1ae54:	and	r0, r0, #15
   1ae58:	sub	r7, r0, #1
   1ae5c:	cmp	r7, #7
   1ae60:	bhi	1b9dc <main@@Base+0x86fc>
   1ae64:	add	r4, pc, #32
   1ae68:	mov	r1, #0
   1ae6c:	mov	lr, #0
   1ae70:	mov	sl, #0
   1ae74:	mov	r6, #0
   1ae78:	mov	r3, #0
   1ae7c:	mov	r5, #0
   1ae80:	mov	r0, #0
   1ae84:	mov	r2, #0
   1ae88:	ldr	pc, [r4, r7, lsl #2]
   1ae8c:	strdeq	sl, [r1], -r0
   1ae90:	andeq	sl, r1, r8, ror #29
   1ae94:	andeq	sl, r1, r0, ror #29
   1ae98:	ldrdeq	sl, [r1], -r8
   1ae9c:	andeq	sl, r1, ip, asr #29
   1aea0:	andeq	sl, r1, r0, asr #29
   1aea4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aea8:	andeq	sl, r1, ip, lsr #29
   1aeac:	ldrb	lr, [r8, #15]
   1aeb0:	ldrb	r0, [r8, #14]
   1aeb4:	mov	sl, r1
   1aeb8:	orr	r0, lr, r0, lsl #8
   1aebc:	mov	r1, r0
   1aec0:	ldrb	r0, [r8, #13]
   1aec4:	mov	r6, sl
   1aec8:	orr	r1, r1, r0, lsl #16
   1aecc:	ldrb	r0, [r8, #12]
   1aed0:	mov	r3, r6
   1aed4:	orr	r1, r1, r0, lsl #24
   1aed8:	ldrb	r0, [r8, #11]
   1aedc:	orr	r5, r0, r3
   1aee0:	ldrb	r0, [r8, #10]
   1aee4:	orr	r0, r5, r0, lsl #8
   1aee8:	ldrb	r2, [r8, #9]
   1aeec:	orr	r2, r0, r2, lsl #16
   1aef0:	ldrb	r0, [r9]
   1aef4:	movw	r3, #30257	; 0x7631
   1aef8:	movt	r3, #26222	; 0x666e
   1aefc:	orr	r2, r2, r0, lsl #24
   1af00:	subs	r0, r1, r3
   1af04:	movw	r0, #13407	; 0x345f
   1af08:	movt	r0, #29494	; 0x7336
   1af0c:	sbcs	r0, r2, r0
   1af10:	bcs	1b8f4 <main@@Base+0x8614>
   1af14:	eor	r0, r1, r3
   1af18:	ldr	r1, [sp, #32]
   1af1c:	ldr	r6, [sp, #52]	; 0x34
   1af20:	eor	r1, r2, r1
   1af24:	orrs	r0, r0, r1
   1af28:	bne	1b9dc <main@@Base+0x86fc>
   1af2c:	ldr	sl, [sp, #44]	; 0x2c
   1af30:	cmp	ip, #9
   1af34:	blt	1ce78 <main@@Base+0x9b98>
   1af38:	ldr	r2, [sp, #40]	; 0x28
   1af3c:	mov	r1, r8
   1af40:	ldrb	r0, [r1, #16]!
   1af44:	ldr	r2, [r2]
   1af48:	cmp	r2, #0
   1af4c:	beq	1c1f4 <main@@Base+0x8f14>
   1af50:	cmp	r0, #33	; 0x21
   1af54:	bcc	1af60 <main@@Base+0x7c80>
   1af58:	cmp	r0, #58	; 0x3a
   1af5c:	bne	1ce78 <main@@Base+0x9b98>
   1af60:	ldr	r0, [sp, #40]	; 0x28
   1af64:	mov	r2, #0
   1af68:	str	r2, [r0]
   1af6c:	sub	r0, r6, r1
   1af70:	cmp	r0, #2
   1af74:	bge	1c20c <main@@Base+0x8f2c>
   1af78:	b	1ce2c <main@@Base+0x9b4c>
   1af7c:	eor	r1, sl, r6
   1af80:	eor	r2, r0, r2
   1af84:	orrs	r1, r1, r2
   1af88:	bne	1b5fc <main@@Base+0x831c>
   1af8c:	add	r1, r8, #8
   1af90:	mov	r2, #8
   1af94:	ldr	sl, [sp, #44]	; 0x2c
   1af98:	mov	r6, r5
   1af9c:	sub	r0, r5, r1
   1afa0:	cmp	r0, #8
   1afa4:	movcs	r0, r2
   1afa8:	and	r0, r0, #15
   1afac:	sub	r7, r0, #1
   1afb0:	cmp	r7, #7
   1afb4:	bhi	1b97c <main@@Base+0x869c>
   1afb8:	add	r0, pc, #32
   1afbc:	mov	r9, #0
   1afc0:	mov	ip, #0
   1afc4:	mov	lr, #0
   1afc8:	mov	r6, #0
   1afcc:	mov	r3, #0
   1afd0:	mov	r4, #0
   1afd4:	mov	r2, #0
   1afd8:	mov	r5, #0
   1afdc:	ldr	pc, [r0, r7, lsl #2]
   1afe0:	andeq	fp, r1, r4, asr #32
   1afe4:	andeq	fp, r1, ip, lsr r0
   1afe8:	andeq	fp, r1, r4, lsr r0
   1afec:	andeq	fp, r1, ip, lsr #32
   1aff0:	andeq	fp, r1, r0, lsr #32
   1aff4:	andeq	fp, r1, r4, lsl r0
   1aff8:	andeq	fp, r1, r4
   1affc:	andeq	fp, r1, r0
   1b000:	ldrb	ip, [r8, #15]
   1b004:	ldrb	r0, [r8, #14]
   1b008:	mov	lr, r9
   1b00c:	orr	r0, ip, r0, lsl #8
   1b010:	mov	r9, r0
   1b014:	ldrb	r0, [r8, #13]
   1b018:	mov	r6, lr
   1b01c:	orr	r9, r9, r0, lsl #16
   1b020:	ldrb	r0, [r8, #12]
   1b024:	mov	r3, r6
   1b028:	orr	r9, r9, r0, lsl #24
   1b02c:	ldrb	r0, [r8, #11]
   1b030:	orr	r4, r0, r3
   1b034:	ldrb	r0, [r8, #10]
   1b038:	orr	r2, r4, r0, lsl #8
   1b03c:	ldrb	r0, [r8, #9]
   1b040:	orr	r5, r2, r0, lsl #16
   1b044:	ldrb	r2, [r1]
   1b048:	movw	r0, #25445	; 0x6365
   1b04c:	movw	r3, #25971	; 0x6573
   1b050:	ldr	r6, [sp, #52]	; 0x34
   1b054:	movt	r0, #28769	; 0x7061
   1b058:	movt	r3, #24941	; 0x616d
   1b05c:	eor	r0, r9, r0
   1b060:	orr	r2, r5, r2, lsl #24
   1b064:	eor	r2, r2, r3
   1b068:	orrs	r0, r0, r2
   1b06c:	bne	1b97c <main@@Base+0x869c>
   1b070:	add	r9, r8, #16
   1b074:	mov	r1, #8
   1b078:	sub	r0, r6, r9
   1b07c:	cmp	r0, #8
   1b080:	movcc	r1, r0
   1b084:	and	r1, r1, #15
   1b088:	sub	r3, r1, #1
   1b08c:	cmp	r3, #7
   1b090:	bhi	16f14 <main@@Base+0x3c34>
   1b094:	add	r7, pc, #20
   1b098:	mov	r1, #0
   1b09c:	mov	r2, #0
   1b0a0:	mov	r6, #0
   1b0a4:	mov	r5, #0
   1b0a8:	mov	r4, #0
   1b0ac:	ldr	pc, [r7, r3, lsl #2]
   1b0b0:	strdeq	fp, [r1], -r4
   1b0b4:	andeq	fp, r1, ip, ror #1
   1b0b8:	andeq	fp, r1, r4, ror #1
   1b0bc:	ldrdeq	fp, [r1], -r8
   1b0c0:	ldrdeq	fp, [r1], -r0
   1b0c4:	ldrdeq	fp, [r1], -r0
   1b0c8:	ldrdeq	fp, [r1], -r0
   1b0cc:	ldrdeq	fp, [r1], -r0
   1b0d0:	ldrb	r2, [r8, #20]
   1b0d4:	lsl	r2, r2, #24
   1b0d8:	ldrb	r3, [r8, #19]
   1b0dc:	orr	r6, r3, r1
   1b0e0:	mov	r1, r2
   1b0e4:	ldrb	r2, [r8, #18]
   1b0e8:	orr	r5, r6, r2, lsl #8
   1b0ec:	ldrb	r2, [r8, #17]
   1b0f0:	orr	r4, r5, r2, lsl #16
   1b0f4:	ldrb	r2, [r9]
   1b0f8:	movw	r3, #25971	; 0x6573
   1b0fc:	ldr	r6, [sp, #52]	; 0x34
   1b100:	and	r1, r1, #-16777216	; 0xff000000
   1b104:	movt	r3, #24436	; 0x5f74
   1b108:	eor	r1, r1, #1946157056	; 0x74000000
   1b10c:	orr	r2, r4, r2, lsl #24
   1b110:	eor	r2, r2, r3
   1b114:	orrs	r1, r1, r2
   1b118:	bne	16f14 <main@@Base+0x3c34>
   1b11c:	cmp	r0, #6
   1b120:	blt	16f14 <main@@Base+0x3c34>
   1b124:	ldr	r2, [sp, #40]	; 0x28
   1b128:	mov	r1, r8
   1b12c:	ldrb	r0, [r1, #21]!
   1b130:	ldr	r2, [r2]
   1b134:	cmp	r2, #0
   1b138:	beq	1cad8 <main@@Base+0x97f8>
   1b13c:	cmp	r0, #33	; 0x21
   1b140:	bcc	1b14c <main@@Base+0x7e6c>
   1b144:	cmp	r0, #58	; 0x3a
   1b148:	bne	16f14 <main@@Base+0x3c34>
   1b14c:	ldr	r0, [sp, #40]	; 0x28
   1b150:	mov	r2, #0
   1b154:	str	r2, [r0]
   1b158:	sub	r0, r6, r1
   1b15c:	cmp	r0, #2
   1b160:	bge	1caf0 <main@@Base+0x9810>
   1b164:	b	13ad4 <main@@Base+0x7f4>
   1b168:	subs	r1, sl, r3
   1b16c:	sbcs	r1, r0, r2
   1b170:	bcs	1b66c <main@@Base+0x838c>
   1b174:	movw	r1, #0
   1b178:	bfc	r0, #0, #16
   1b17c:	movt	r1, #26736	; 0x6870
   1b180:	teq	r0, r1
   1b184:	bne	1db10 <main@@Base+0xa830>
   1b188:	ldr	sl, [sp, #44]	; 0x2c
   1b18c:	cmp	r9, #3
   1b190:	mov	r7, r8
   1b194:	blt	13cf8 <main@@Base+0xa18>
   1b198:	ldr	r2, [sp, #40]	; 0x28
   1b19c:	mov	r1, r8
   1b1a0:	ldrb	r0, [r1, #2]!
   1b1a4:	ldr	r2, [r2]
   1b1a8:	cmp	r2, #0
   1b1ac:	beq	1c14c <main@@Base+0x8e6c>
   1b1b0:	cmp	r0, #33	; 0x21
   1b1b4:	bcc	1b1c4 <main@@Base+0x7ee4>
   1b1b8:	cmp	r0, #58	; 0x3a
   1b1bc:	mov	r7, r8
   1b1c0:	bne	13cf8 <main@@Base+0xa18>
   1b1c4:	ldr	r0, [sp, #40]	; 0x28
   1b1c8:	mov	r2, #0
   1b1cc:	str	r2, [r0]
   1b1d0:	sub	r0, r6, r1
   1b1d4:	cmp	r0, #2
   1b1d8:	bge	1c168 <main@@Base+0x8e88>
   1b1dc:	b	1cbe8 <main@@Base+0x9908>
   1b1e0:	mvn	r2, #-1711276032	; 0x9a000000
   1b1e4:	subs	r2, r2, sl
   1b1e8:	sbcs	r2, r7, r0
   1b1ec:	bcc	1b700 <main@@Base+0x8420>
   1b1f0:	movw	r0, #28788	; 0x7074
   1b1f4:	movt	r0, #25965	; 0x656d
   1b1f8:	eor	r0, sl, r0
   1b1fc:	orrs	r0, r0, r1
   1b200:	bne	1db10 <main@@Base+0xa830>
   1b204:	add	r7, r8, #8
   1b208:	mov	r1, #8
   1b20c:	mov	r2, #-268435456	; 0xf0000000
   1b210:	ldr	sl, [sp, #44]	; 0x2c
   1b214:	sub	r0, r6, r7
   1b218:	cmp	r0, #8
   1b21c:	movcc	r1, r0
   1b220:	add	r1, r2, r1, lsl #28
   1b224:	asr	r1, r1, #28
   1b228:	cmp	r1, #0
   1b22c:	blt	1882c <main@@Base+0x554c>
   1b230:	ldrb	r1, [r7]
   1b234:	cmp	r1, #121	; 0x79
   1b238:	bne	1882c <main@@Base+0x554c>
   1b23c:	cmp	r0, #2
   1b240:	blt	1882c <main@@Base+0x554c>
   1b244:	ldr	r2, [sp, #40]	; 0x28
   1b248:	mov	r1, r8
   1b24c:	ldrb	r0, [r1, #9]!
   1b250:	ldr	r2, [r2]
   1b254:	cmp	r2, #0
   1b258:	beq	1cd48 <main@@Base+0x9a68>
   1b25c:	cmp	r0, #33	; 0x21
   1b260:	bcc	1b26c <main@@Base+0x7f8c>
   1b264:	cmp	r0, #58	; 0x3a
   1b268:	bne	1882c <main@@Base+0x554c>
   1b26c:	ldr	r0, [sp, #40]	; 0x28
   1b270:	mov	r2, #0
   1b274:	str	r2, [r0]
   1b278:	sub	r0, r6, r1
   1b27c:	cmp	r0, #2
   1b280:	bge	1cd60 <main@@Base+0x9a80>
   1b284:	b	14eb8 <main@@Base+0x1bd8>
   1b288:	teq	r0, r7
   1b28c:	bne	1c480 <main@@Base+0x91a0>
   1b290:	cmp	r9, #5
   1b294:	mov	r1, r8
   1b298:	blt	1d5f0 <main@@Base+0xa310>
   1b29c:	ldr	r1, [sp, #40]	; 0x28
   1b2a0:	mov	r2, r8
   1b2a4:	ldrb	r0, [r2, #4]!
   1b2a8:	ldr	r1, [r1]
   1b2ac:	cmp	r1, #0
   1b2b0:	beq	1bef8 <main@@Base+0x8c18>
   1b2b4:	cmp	r0, #33	; 0x21
   1b2b8:	bcc	1b2c8 <main@@Base+0x7fe8>
   1b2bc:	cmp	r0, #58	; 0x3a
   1b2c0:	mov	r1, r8
   1b2c4:	bne	1d5f0 <main@@Base+0xa310>
   1b2c8:	ldr	r0, [sp, #40]	; 0x28
   1b2cc:	mov	r1, #0
   1b2d0:	str	r1, [r0]
   1b2d4:	sub	r0, r5, r2
   1b2d8:	mov	r7, r5
   1b2dc:	cmp	r0, #2
   1b2e0:	bge	1bf18 <main@@Base+0x8c38>
   1b2e4:	b	1c430 <main@@Base+0x9150>
   1b2e8:	movw	r7, #24431	; 0x5f6f
   1b2ec:	movw	r3, #25460	; 0x6374
   1b2f0:	movt	r7, #28530	; 0x6f72
   1b2f4:	movt	r3, #30309	; 0x7665
   1b2f8:	subs	r2, sl, r7
   1b2fc:	sbcs	r2, r0, r3
   1b300:	bcs	1b780 <main@@Base+0x84a0>
   1b304:	movw	r0, #29556	; 0x7374
   1b308:	movt	r0, #28261	; 0x6e65
   1b30c:	eor	r0, sl, r0
   1b310:	orrs	r0, r0, r1
   1b314:	bne	1db10 <main@@Base+0xa830>
   1b318:	add	r1, r8, #8
   1b31c:	mov	r2, #8
   1b320:	ldr	sl, [sp, #44]	; 0x2c
   1b324:	sub	r0, r6, r1
   1b328:	cmp	r0, #8
   1b32c:	movcs	r0, r2
   1b330:	and	r0, r0, #15
   1b334:	sub	r7, r0, #1
   1b338:	cmp	r7, #7
   1b33c:	bhi	1b97c <main@@Base+0x869c>
   1b340:	add	r0, pc, #32
   1b344:	mov	r9, #0
   1b348:	mov	ip, #0
   1b34c:	mov	lr, #0
   1b350:	mov	r6, #0
   1b354:	mov	r3, #0
   1b358:	mov	r5, #0
   1b35c:	mov	r2, #0
   1b360:	mov	r4, #0
   1b364:	ldr	pc, [r0, r7, lsl #2]
   1b368:	andeq	fp, r1, ip, asr #7
   1b36c:	andeq	fp, r1, r4, asr #7
   1b370:			; <UNDEFINED> instruction: 0x0001b3bc
   1b374:			; <UNDEFINED> instruction: 0x0001b3b4
   1b378:	andeq	fp, r1, r8, lsr #7
   1b37c:	muleq	r1, ip, r3
   1b380:	andeq	fp, r1, ip, lsl #7
   1b384:	andeq	fp, r1, r8, lsl #7
   1b388:	ldrb	ip, [r8, #15]
   1b38c:	ldrb	r0, [r8, #14]
   1b390:	mov	lr, r9
   1b394:	orr	r0, ip, r0, lsl #8
   1b398:	mov	r9, r0
   1b39c:	ldrb	r0, [r8, #13]
   1b3a0:	mov	r6, lr
   1b3a4:	orr	r9, r9, r0, lsl #16
   1b3a8:	ldrb	r0, [r8, #12]
   1b3ac:	mov	r3, r6
   1b3b0:	orr	r9, r9, r0, lsl #24
   1b3b4:	ldrb	r0, [r8, #11]
   1b3b8:	orr	r5, r0, r3
   1b3bc:	ldrb	r0, [r8, #10]
   1b3c0:	orr	r2, r5, r0, lsl #8
   1b3c4:	ldrb	r0, [r8, #9]
   1b3c8:	orr	r4, r2, r0, lsl #16
   1b3cc:	ldrb	r2, [r1]
   1b3d0:	movw	r0, #25205	; 0x6275
   1b3d4:	movw	r3, #26220	; 0x666c
   1b3d8:	ldr	r6, [sp, #52]	; 0x34
   1b3dc:	movt	r0, #24948	; 0x6174
   1b3e0:	movt	r3, #25956	; 0x6564
   1b3e4:	eor	r0, r9, r0
   1b3e8:	orr	r2, r4, r2, lsl #24
   1b3ec:	eor	r2, r2, r3
   1b3f0:	orrs	r0, r0, r2
   1b3f4:	bne	1b97c <main@@Base+0x869c>
   1b3f8:	add	r7, r8, #16
   1b3fc:	mov	r1, #8
   1b400:	sub	r0, r6, r7
   1b404:	cmp	r0, #8
   1b408:	movcc	r1, r0
   1b40c:	and	r1, r1, #15
   1b410:	sub	r2, r1, #1
   1b414:	cmp	r2, #7
   1b418:	bhi	1882c <main@@Base+0x554c>
   1b41c:	add	r3, pc, #4
   1b420:	mov	r1, #0
   1b424:	ldr	pc, [r3, r2, lsl #2]
   1b428:	andeq	fp, r1, ip, asr r4
   1b42c:	andeq	fp, r1, r4, asr r4
   1b430:	andeq	fp, r1, ip, asr #8
   1b434:	andeq	fp, r1, r8, asr #8
   1b438:	andeq	fp, r1, r8, asr #8
   1b43c:	andeq	fp, r1, r8, asr #8
   1b440:	andeq	fp, r1, r8, asr #8
   1b444:	andeq	fp, r1, r8, asr #8
   1b448:	ldrb	r1, [r8, #19]
   1b44c:	ldrb	r2, [r8, #18]
   1b450:	orr	r1, r1, r2, lsl #8
   1b454:	ldrb	r2, [r8, #17]
   1b458:	orr	r1, r1, r2, lsl #16
   1b45c:	ldrb	r2, [r7]
   1b460:	orr	r1, r1, r2, lsl #24
   1b464:	movw	r2, #25970	; 0x6572
   1b468:	movt	r2, #26214	; 0x6666
   1b46c:	teq	r1, r2
   1b470:	bne	1882c <main@@Base+0x554c>
   1b474:	cmp	r0, #5
   1b478:	blt	1882c <main@@Base+0x554c>
   1b47c:	ldr	r2, [sp, #40]	; 0x28
   1b480:	mov	r1, r8
   1b484:	ldrb	r0, [r1, #20]!
   1b488:	ldr	r2, [r2]
   1b48c:	cmp	r2, #0
   1b490:	beq	1d654 <main@@Base+0xa374>
   1b494:	cmp	r0, #33	; 0x21
   1b498:	bcc	1b4a4 <main@@Base+0x81c4>
   1b49c:	cmp	r0, #58	; 0x3a
   1b4a0:	bne	1882c <main@@Base+0x554c>
   1b4a4:	ldr	r0, [sp, #40]	; 0x28
   1b4a8:	mov	r2, #0
   1b4ac:	str	r2, [r0]
   1b4b0:	sub	r0, r6, r1
   1b4b4:	cmp	r0, #2
   1b4b8:	bge	1d66c <main@@Base+0xa38c>
   1b4bc:	b	157ac <main@@Base+0x24cc>
   1b4c0:	movw	r0, #27749	; 0x6c65
   1b4c4:	movw	r3, #26228	; 0x6674
   1b4c8:	ldr	r6, [sp, #52]	; 0x34
   1b4cc:	ldr	sl, [sp, #44]	; 0x2c
   1b4d0:	movt	r0, #24930	; 0x6162
   1b4d4:	movt	r3, #31087	; 0x796f
   1b4d8:	eor	r0, r1, r0
   1b4dc:	eor	r3, r2, r3
   1b4e0:	orrs	r0, r0, r3
   1b4e4:	beq	1bb08 <main@@Base+0x8828>
   1b4e8:	movw	r0, #26990	; 0x696e
   1b4ec:	movt	r0, #29810	; 0x7472
   1b4f0:	eor	r0, r1, r0
   1b4f4:	eor	r1, r2, r7
   1b4f8:	orrs	r0, r0, r1
   1b4fc:	bne	16f14 <main@@Base+0x3c34>
   1b500:	add	r7, r8, #16
   1b504:	mov	r1, #8
   1b508:	sub	r0, r6, r7
   1b50c:	cmp	r0, #8
   1b510:	movcc	r1, r0
   1b514:	and	r2, r1, #15
   1b518:	sub	r1, r2, #2
   1b51c:	cmp	r1, #7
   1b520:	bcs	1bfc8 <main@@Base+0x8ce8>
   1b524:	ldrb	r1, [r8, #17]
   1b528:	lsl	r2, r1, #16
   1b52c:	mov	r1, #0
   1b530:	ldrb	r3, [r7]
   1b534:	orr	r2, r2, r3, lsl #24
   1b538:	movw	r3, #0
   1b53c:	movt	r3, #26418	; 0x6732
   1b540:	eor	r3, r2, r3
   1b544:	orrs	r1, r1, r3
   1b548:	bne	1bd40 <main@@Base+0x8a60>
   1b54c:	cmp	r0, #3
   1b550:	blt	1882c <main@@Base+0x554c>
   1b554:	ldr	r2, [sp, #40]	; 0x28
   1b558:	mov	r1, r8
   1b55c:	ldrb	r0, [r1, #18]!
   1b560:	ldr	r2, [r2]
   1b564:	cmp	r2, #0
   1b568:	beq	1c564 <main@@Base+0x9284>
   1b56c:	cmp	r0, #33	; 0x21
   1b570:	bcc	1b57c <main@@Base+0x829c>
   1b574:	cmp	r0, #58	; 0x3a
   1b578:	bne	1882c <main@@Base+0x554c>
   1b57c:	ldr	r0, [sp, #40]	; 0x28
   1b580:	mov	r2, #0
   1b584:	str	r2, [r0]
   1b588:	sub	r0, r6, r1
   1b58c:	cmp	r0, #2
   1b590:	bge	1c57c <main@@Base+0x929c>
   1b594:	b	1d718 <main@@Base+0xa438>
   1b598:	ldr	sl, [sp, #44]	; 0x2c
   1b59c:	cmp	r9, #6
   1b5a0:	mov	r7, r8
   1b5a4:	blt	1cf94 <main@@Base+0x9cb4>
   1b5a8:	ldr	r2, [sp, #40]	; 0x28
   1b5ac:	mov	r1, r8
   1b5b0:	ldrb	r0, [r1, #5]!
   1b5b4:	ldr	r2, [r2]
   1b5b8:	cmp	r2, #0
   1b5bc:	beq	1bdd0 <main@@Base+0x8af0>
   1b5c0:	cmp	r0, #33	; 0x21
   1b5c4:	bcc	1b5d4 <main@@Base+0x82f4>
   1b5c8:	cmp	r0, #58	; 0x3a
   1b5cc:	mov	r7, r8
   1b5d0:	bne	1cf94 <main@@Base+0x9cb4>
   1b5d4:	ldr	r0, [sp, #40]	; 0x28
   1b5d8:	mov	r2, #0
   1b5dc:	str	r2, [r0]
   1b5e0:	sub	r0, r6, r1
   1b5e4:	cmp	r0, #2
   1b5e8:	bge	1bdec <main@@Base+0x8b0c>
   1b5ec:	b	1c2b8 <main@@Base+0x8fd8>
   1b5f0:	ldr	sl, [sp, #44]	; 0x2c
   1b5f4:	mov	r1, r8
   1b5f8:	b	1cb78 <main@@Base+0x9898>
   1b5fc:	ldr	sl, [sp, #44]	; 0x2c
   1b600:	movw	r1, #29440	; 0x7300
   1b604:	bic	r0, r0, #255	; 0xff
   1b608:	mov	r6, r5
   1b60c:	movt	r1, #28783	; 0x706f
   1b610:	teq	r0, r1
   1b614:	bne	1db14 <main@@Base+0xa834>
   1b618:	cmp	r9, #4
   1b61c:	mov	r4, r8
   1b620:	blt	13e98 <main@@Base+0xbb8>
   1b624:	ldr	r2, [sp, #40]	; 0x28
   1b628:	mov	r1, r8
   1b62c:	ldrb	r0, [r1, #3]!
   1b630:	ldr	r2, [r2]
   1b634:	cmp	r2, #0
   1b638:	beq	1c184 <main@@Base+0x8ea4>
   1b63c:	cmp	r0, #33	; 0x21
   1b640:	bcc	1b650 <main@@Base+0x8370>
   1b644:	cmp	r0, #58	; 0x3a
   1b648:	mov	r4, r8
   1b64c:	bne	13e98 <main@@Base+0xbb8>
   1b650:	ldr	r0, [sp, #40]	; 0x28
   1b654:	mov	r2, #0
   1b658:	str	r2, [r0]
   1b65c:	sub	r0, r6, r1
   1b660:	cmp	r0, #2
   1b664:	bge	1c1a0 <main@@Base+0x8ec0>
   1b668:	b	1cc64 <main@@Base+0x9984>
   1b66c:	eor	r1, sl, r3
   1b670:	eor	r2, r0, r2
   1b674:	orrs	r1, r1, r2
   1b678:	bne	1bb88 <main@@Base+0x88a8>
   1b67c:	add	r7, r8, #8
   1b680:	mov	r1, #8
   1b684:	mov	r2, #-268435456	; 0xf0000000
   1b688:	ldr	sl, [sp, #44]	; 0x2c
   1b68c:	sub	r0, r6, r7
   1b690:	cmp	r0, #8
   1b694:	movcc	r1, r0
   1b698:	add	r1, r2, r1, lsl #28
   1b69c:	asr	r1, r1, #28
   1b6a0:	cmp	r1, #0
   1b6a4:	blt	1882c <main@@Base+0x554c>
   1b6a8:	ldrb	r1, [r7]
   1b6ac:	cmp	r1, #121	; 0x79
   1b6b0:	bne	1882c <main@@Base+0x554c>
   1b6b4:	cmp	r0, #2
   1b6b8:	blt	1882c <main@@Base+0x554c>
   1b6bc:	ldr	r2, [sp, #40]	; 0x28
   1b6c0:	mov	r1, r8
   1b6c4:	ldrb	r0, [r1, #9]!
   1b6c8:	ldr	r2, [r2]
   1b6cc:	cmp	r2, #0
   1b6d0:	beq	1cd7c <main@@Base+0x9a9c>
   1b6d4:	cmp	r0, #33	; 0x21
   1b6d8:	bcc	1b6e4 <main@@Base+0x8404>
   1b6dc:	cmp	r0, #58	; 0x3a
   1b6e0:	bne	1882c <main@@Base+0x554c>
   1b6e4:	ldr	r0, [sp, #40]	; 0x28
   1b6e8:	mov	r2, #0
   1b6ec:	str	r2, [r0]
   1b6f0:	sub	r0, r6, r1
   1b6f4:	cmp	r0, #2
   1b6f8:	bge	1cd94 <main@@Base+0x9ab4>
   1b6fc:	b	14f34 <main@@Base+0x1c54>
   1b700:	movw	r3, #0
   1b704:	mov	r2, sl
   1b708:	movt	r3, #26163	; 0x6633
   1b70c:	bfc	r2, #0, #16
   1b710:	subs	r3, r3, #65536	; 0x10000
   1b714:	eor	r2, r2, r3
   1b718:	sbc	r3, r7, #0
   1b71c:	eor	r0, r0, r3
   1b720:	orrs	r0, r2, r0
   1b724:	bne	1bbf0 <main@@Base+0x8910>
   1b728:	ldr	sl, [sp, #44]	; 0x2c
   1b72c:	cmp	r9, #7
   1b730:	mov	r7, r8
   1b734:	blt	14e14 <main@@Base+0x1b34>
   1b738:	ldr	r2, [sp, #40]	; 0x28
   1b73c:	mov	r1, r8
   1b740:	ldrb	r0, [r1, #6]!
   1b744:	ldr	r2, [r2]
   1b748:	cmp	r2, #0
   1b74c:	beq	1c1bc <main@@Base+0x8edc>
   1b750:	cmp	r0, #33	; 0x21
   1b754:	bcc	1b764 <main@@Base+0x8484>
   1b758:	cmp	r0, #58	; 0x3a
   1b75c:	mov	r7, r8
   1b760:	bne	14e14 <main@@Base+0x1b34>
   1b764:	ldr	r0, [sp, #40]	; 0x28
   1b768:	mov	r2, #0
   1b76c:	str	r2, [r0]
   1b770:	sub	r0, r6, r1
   1b774:	cmp	r0, #2
   1b778:	bge	1c1d8 <main@@Base+0x8ef8>
   1b77c:	b	1cce0 <main@@Base+0x9a00>
   1b780:	eor	r1, sl, r7
   1b784:	eor	r0, r0, r3
   1b788:	orrs	r0, r1, r0
   1b78c:	bne	1db10 <main@@Base+0xa830>
   1b790:	add	r9, r8, #8
   1b794:	mov	r0, #8
   1b798:	mov	r7, r6
   1b79c:	sub	lr, r6, r9
   1b7a0:	cmp	lr, #8
   1b7a4:	movcc	r0, lr
   1b7a8:	and	r0, r0, #15
   1b7ac:	sub	r6, r0, #1
   1b7b0:	cmp	r6, #7
   1b7b4:	bhi	1bf38 <main@@Base+0x8c58>
   1b7b8:	add	r7, pc, #32
   1b7bc:	mov	r1, #0
   1b7c0:	mov	ip, #0
   1b7c4:	mov	sl, #0
   1b7c8:	mov	r4, #0
   1b7cc:	mov	r3, #0
   1b7d0:	mov	r5, #0
   1b7d4:	mov	r2, #0
   1b7d8:	mov	r0, #0
   1b7dc:	ldr	pc, [r7, r6, lsl #2]
   1b7e0:	andeq	fp, r1, r4, asr #16
   1b7e4:	andeq	fp, r1, ip, lsr r8
   1b7e8:	andeq	fp, r1, r4, lsr r8
   1b7ec:	andeq	fp, r1, ip, lsr #16
   1b7f0:	andeq	fp, r1, r0, lsr #16
   1b7f4:	andeq	fp, r1, r4, lsl r8
   1b7f8:	andeq	fp, r1, r4, lsl #16
   1b7fc:	andeq	fp, r1, r0, lsl #16
   1b800:	ldrb	ip, [r8, #15]
   1b804:	ldrb	r0, [r8, #14]
   1b808:	mov	sl, r1
   1b80c:	orr	r0, ip, r0, lsl #8
   1b810:	mov	r1, r0
   1b814:	ldrb	r0, [r8, #13]
   1b818:	mov	r4, sl
   1b81c:	orr	r1, r1, r0, lsl #16
   1b820:	ldrb	r0, [r8, #12]
   1b824:	mov	r3, r4
   1b828:	orr	r1, r1, r0, lsl #24
   1b82c:	ldrb	r0, [r8, #11]
   1b830:	orr	r5, r0, r3
   1b834:	ldrb	r0, [r8, #10]
   1b838:	orr	r2, r5, r0, lsl #8
   1b83c:	ldrb	r0, [r8, #9]
   1b840:	orr	r0, r2, r0, lsl #16
   1b844:	ldrb	r3, [r9]
   1b848:	movw	r2, #27749	; 0x6c65
   1b84c:	movt	r2, #30050	; 0x7562
   1b850:	eor	r2, r1, r2
   1b854:	orr	r0, r0, r3, lsl #24
   1b858:	movw	r3, #25711	; 0x646f
   1b85c:	movt	r3, #26207	; 0x665f
   1b860:	eor	r3, r0, r3
   1b864:	orrs	r2, r2, r3
   1b868:	bne	1be08 <main@@Base+0x8b28>
   1b86c:	ldr	r6, [sp, #52]	; 0x34
   1b870:	add	r7, r8, #16
   1b874:	mov	r1, #8
   1b878:	mov	r2, #-268435456	; 0xf0000000
   1b87c:	ldr	sl, [sp, #44]	; 0x2c
   1b880:	sub	r0, r6, r7
   1b884:	cmp	r0, #8
   1b888:	movcc	r1, r0
   1b88c:	add	r1, r2, r1, lsl #28
   1b890:	asr	r1, r1, #28
   1b894:	cmp	r1, #0
   1b898:	blt	1882c <main@@Base+0x554c>
   1b89c:	ldrb	r1, [r7]
   1b8a0:	cmp	r1, #115	; 0x73
   1b8a4:	bne	1882c <main@@Base+0x554c>
   1b8a8:	cmp	r0, #2
   1b8ac:	blt	1882c <main@@Base+0x554c>
   1b8b0:	ldr	r2, [sp, #40]	; 0x28
   1b8b4:	mov	r1, r8
   1b8b8:	ldrb	r0, [r1, #17]!
   1b8bc:	ldr	r2, [r2]
   1b8c0:	cmp	r2, #0
   1b8c4:	beq	1388c <main@@Base+0x5ac>
   1b8c8:	cmp	r0, #33	; 0x21
   1b8cc:	bcc	1b8d8 <main@@Base+0x85f8>
   1b8d0:	cmp	r0, #58	; 0x3a
   1b8d4:	bne	1882c <main@@Base+0x554c>
   1b8d8:	ldr	r0, [sp, #40]	; 0x28
   1b8dc:	mov	r2, #0
   1b8e0:	str	r2, [r0]
   1b8e4:	sub	r0, r6, r1
   1b8e8:	cmp	r0, #2
   1b8ec:	bge	138a4 <main@@Base+0x5c4>
   1b8f0:	b	15f28 <main@@Base+0x2c48>
   1b8f4:	movw	r0, #30256	; 0x7630
   1b8f8:	ldr	r6, [sp, #52]	; 0x34
   1b8fc:	movt	r0, #26222	; 0x666e
   1b900:	subs	r0, r0, r1
   1b904:	movw	r0, #12895	; 0x325f
   1b908:	movt	r0, #30003	; 0x7533
   1b90c:	sbcs	r0, r0, r2
   1b910:	eor	r0, r1, r3
   1b914:	bcc	1bc58 <main@@Base+0x8978>
   1b918:	movw	r1, #13407	; 0x345f
   1b91c:	ldr	sl, [sp, #44]	; 0x2c
   1b920:	movt	r1, #29494	; 0x7336
   1b924:	eor	r1, r2, r1
   1b928:	orrs	r0, r0, r1
   1b92c:	bne	16f14 <main@@Base+0x3c34>
   1b930:	cmp	ip, #9
   1b934:	blt	1d954 <main@@Base+0xa674>
   1b938:	ldr	r2, [sp, #40]	; 0x28
   1b93c:	mov	r1, r8
   1b940:	ldrb	r0, [r1, #16]!
   1b944:	ldr	r2, [r2]
   1b948:	cmp	r2, #0
   1b94c:	beq	1c6b8 <main@@Base+0x93d8>
   1b950:	cmp	r0, #33	; 0x21
   1b954:	bcc	1b960 <main@@Base+0x8680>
   1b958:	cmp	r0, #58	; 0x3a
   1b95c:	bne	1d954 <main@@Base+0xa674>
   1b960:	ldr	r0, [sp, #40]	; 0x28
   1b964:	mov	r2, #0
   1b968:	str	r2, [r0]
   1b96c:	sub	r0, r6, r1
   1b970:	cmp	r0, #2
   1b974:	bge	1c6d0 <main@@Base+0x93f0>
   1b978:	b	1d908 <main@@Base+0xa628>
   1b97c:	mov	r0, sl
   1b980:	b	1db1c <main@@Base+0xa83c>
   1b984:	ldr	sl, [sp, #44]	; 0x2c
   1b988:	cmp	r9, #9
   1b98c:	mov	r7, r8
   1b990:	blt	138e4 <main@@Base+0x604>
   1b994:	ldr	r2, [sp, #40]	; 0x28
   1b998:	mov	r1, r8
   1b99c:	ldrb	r0, [r1, #8]!
   1b9a0:	ldr	r2, [r2]
   1b9a4:	cmp	r2, #0
   1b9a8:	beq	1bfdc <main@@Base+0x8cfc>
   1b9ac:	cmp	r0, #33	; 0x21
   1b9b0:	bcc	1b9c0 <main@@Base+0x86e0>
   1b9b4:	cmp	r0, #58	; 0x3a
   1b9b8:	mov	r7, r8
   1b9bc:	bne	138e4 <main@@Base+0x604>
   1b9c0:	ldr	r0, [sp, #40]	; 0x28
   1b9c4:	mov	r2, #0
   1b9c8:	str	r2, [r0]
   1b9cc:	sub	r0, r6, r1
   1b9d0:	cmp	r0, #2
   1b9d4:	bge	1bff8 <main@@Base+0x8d18>
   1b9d8:	b	1c700 <main@@Base+0x9420>
   1b9dc:	ldr	sl, [sp, #44]	; 0x2c
   1b9e0:	b	16f14 <main@@Base+0x3c34>
   1b9e4:	add	r9, r8, #16
   1b9e8:	mov	r1, #8
   1b9ec:	ldr	sl, [sp, #44]	; 0x2c
   1b9f0:	sub	lr, r6, r9
   1b9f4:	cmp	lr, #8
   1b9f8:	movcc	r1, lr
   1b9fc:	and	r1, r1, #15
   1ba00:	sub	r7, r1, #1
   1ba04:	cmp	r7, #7
   1ba08:	bhi	16f14 <main@@Base+0x3c34>
   1ba0c:	add	r0, pc, #28
   1ba10:	mov	r1, #0
   1ba14:	mov	ip, #0
   1ba18:	mov	r5, #0
   1ba1c:	mov	r3, #0
   1ba20:	mov	r6, #0
   1ba24:	mov	r4, #0
   1ba28:	mov	r2, #0
   1ba2c:	ldr	pc, [r0, r7, lsl #2]
   1ba30:	andeq	fp, r1, ip, lsl #21
   1ba34:	andeq	fp, r1, r4, lsl #21
   1ba38:	andeq	fp, r1, ip, ror sl
   1ba3c:	andeq	fp, r1, r4, ror sl
   1ba40:	andeq	fp, r1, r8, ror #20
   1ba44:	andeq	fp, r1, r8, asr sl
   1ba48:	andeq	fp, r1, r0, asr sl
   1ba4c:	andeq	fp, r1, r0, asr sl
   1ba50:	ldrb	r0, [r8, #22]
   1ba54:	lsl	ip, r0, #8
   1ba58:	ldrb	r0, [r8, #21]
   1ba5c:	mov	r5, r1
   1ba60:	orr	r0, ip, r0, lsl #16
   1ba64:	mov	r1, r0
   1ba68:	ldrb	r0, [r8, #20]
   1ba6c:	mov	r3, r5
   1ba70:	orr	r1, r1, r0, lsl #24
   1ba74:	ldrb	r0, [r8, #19]
   1ba78:	orr	r6, r0, r3
   1ba7c:	ldrb	r0, [r8, #18]
   1ba80:	orr	r4, r6, r0, lsl #8
   1ba84:	ldrb	r0, [r8, #17]
   1ba88:	orr	r2, r4, r0, lsl #16
   1ba8c:	bic	r0, r1, #255	; 0xff
   1ba90:	movw	r1, #29696	; 0x7400
   1ba94:	ldr	r6, [sp, #52]	; 0x34
   1ba98:	movt	r1, #30051	; 0x7563
   1ba9c:	eor	r0, r0, r1
   1baa0:	ldrb	r1, [r9]
   1baa4:	orr	r1, r2, r1, lsl #24
   1baa8:	movw	r2, #29810	; 0x7472
   1baac:	movt	r2, #25715	; 0x6473
   1bab0:	eor	r1, r1, r2
   1bab4:	orrs	r0, r0, r1
   1bab8:	bne	16f14 <main@@Base+0x3c34>
   1babc:	cmp	lr, #8
   1bac0:	blt	16f14 <main@@Base+0x3c34>
   1bac4:	ldr	r2, [sp, #40]	; 0x28
   1bac8:	mov	r1, r8
   1bacc:	ldrb	r0, [r1, #23]!
   1bad0:	ldr	r2, [r2]
   1bad4:	cmp	r2, #0
   1bad8:	beq	1c598 <main@@Base+0x92b8>
   1badc:	cmp	r0, #33	; 0x21
   1bae0:	bcc	1baec <main@@Base+0x880c>
   1bae4:	cmp	r0, #58	; 0x3a
   1bae8:	bne	16f14 <main@@Base+0x3c34>
   1baec:	ldr	r0, [sp, #40]	; 0x28
   1baf0:	mov	r2, #0
   1baf4:	str	r2, [r0]
   1baf8:	sub	r0, r6, r1
   1bafc:	cmp	r0, #2
   1bb00:	bge	1c5b0 <main@@Base+0x92d0>
   1bb04:	b	1d794 <main@@Base+0xa4b4>
   1bb08:	add	r7, r8, #16
   1bb0c:	mov	r1, #8
   1bb10:	mov	r2, #-268435456	; 0xf0000000
   1bb14:	sub	r0, r6, r7
   1bb18:	cmp	r0, #8
   1bb1c:	movcc	r1, r0
   1bb20:	add	r1, r2, r1, lsl #28
   1bb24:	asr	r1, r1, #28
   1bb28:	cmp	r1, #0
   1bb2c:	blt	1882c <main@@Base+0x554c>
   1bb30:	ldrb	r1, [r7]
   1bb34:	cmp	r1, #115	; 0x73
   1bb38:	bne	1882c <main@@Base+0x554c>
   1bb3c:	cmp	r0, #2
   1bb40:	blt	1882c <main@@Base+0x554c>
   1bb44:	ldr	r2, [sp, #40]	; 0x28
   1bb48:	mov	r1, r8
   1bb4c:	ldrb	r0, [r1, #17]!
   1bb50:	ldr	r2, [r2]
   1bb54:	cmp	r2, #0
   1bb58:	beq	1cba0 <main@@Base+0x98c0>
   1bb5c:	cmp	r0, #33	; 0x21
   1bb60:	bcc	1bb6c <main@@Base+0x888c>
   1bb64:	cmp	r0, #58	; 0x3a
   1bb68:	bne	1882c <main@@Base+0x554c>
   1bb6c:	ldr	r0, [sp, #40]	; 0x28
   1bb70:	mov	r2, #0
   1bb74:	str	r2, [r0]
   1bb78:	sub	r0, r6, r1
   1bb7c:	cmp	r0, #2
   1bb80:	bge	1cbb8 <main@@Base+0x98d8>
   1bb84:	b	13c3c <main@@Base+0x95c>
   1bb88:	ldr	sl, [sp, #44]	; 0x2c
   1bb8c:	movw	r1, #28257	; 0x6e61
   1bb90:	movt	r1, #28001	; 0x6d61
   1bb94:	teq	r0, r1
   1bb98:	bne	1db14 <main@@Base+0xa834>
   1bb9c:	cmp	r9, #5
   1bba0:	mov	r7, r8
   1bba4:	blt	15bac <main@@Base+0x28cc>
   1bba8:	ldr	r2, [sp, #40]	; 0x28
   1bbac:	mov	r1, r8
   1bbb0:	ldrb	r0, [r1, #4]!
   1bbb4:	ldr	r2, [r2]
   1bbb8:	cmp	r2, #0
   1bbbc:	beq	1c5cc <main@@Base+0x92ec>
   1bbc0:	cmp	r0, #33	; 0x21
   1bbc4:	bcc	1bbd4 <main@@Base+0x88f4>
   1bbc8:	cmp	r0, #58	; 0x3a
   1bbcc:	mov	r7, r8
   1bbd0:	bne	15bac <main@@Base+0x28cc>
   1bbd4:	ldr	r0, [sp, #40]	; 0x28
   1bbd8:	mov	r2, #0
   1bbdc:	str	r2, [r0]
   1bbe0:	sub	r0, r6, r1
   1bbe4:	cmp	r0, #2
   1bbe8:	bge	1c5e8 <main@@Base+0x9308>
   1bbec:	b	1d810 <main@@Base+0xa530>
   1bbf0:	and	r0, sl, #-16777216	; 0xff000000
   1bbf4:	eor	r0, r0, #1711276032	; 0x66000000
   1bbf8:	orrs	r0, r0, r1
   1bbfc:	bne	1db10 <main@@Base+0xa830>
   1bc00:	ldr	sl, [sp, #44]	; 0x2c
   1bc04:	cmp	r9, #6
   1bc08:	mov	r7, r8
   1bc0c:	blt	15d78 <main@@Base+0x2a98>
   1bc10:	ldr	r2, [sp, #40]	; 0x28
   1bc14:	mov	r1, r8
   1bc18:	ldrb	r0, [r1, #5]!
   1bc1c:	ldr	r2, [r2]
   1bc20:	cmp	r2, #0
   1bc24:	beq	1c604 <main@@Base+0x9324>
   1bc28:	cmp	r0, #33	; 0x21
   1bc2c:	bcc	1bc3c <main@@Base+0x895c>
   1bc30:	cmp	r0, #58	; 0x3a
   1bc34:	mov	r7, r8
   1bc38:	bne	15d78 <main@@Base+0x2a98>
   1bc3c:	ldr	r0, [sp, #40]	; 0x28
   1bc40:	mov	r2, #0
   1bc44:	str	r2, [r0]
   1bc48:	sub	r0, r6, r1
   1bc4c:	cmp	r0, #2
   1bc50:	bge	1c620 <main@@Base+0x9340>
   1bc54:	b	1d88c <main@@Base+0xa5ac>
   1bc58:	movw	r1, #13407	; 0x345f
   1bc5c:	ldr	sl, [sp, #44]	; 0x2c
   1bc60:	movt	r1, #30006	; 0x7536
   1bc64:	eor	r1, r2, r1
   1bc68:	orrs	r1, r0, r1
   1bc6c:	beq	1bf7c <main@@Base+0x8c9c>
   1bc70:	movw	r1, #12895	; 0x325f
   1bc74:	movt	r1, #30003	; 0x7533
   1bc78:	eor	r1, r2, r1
   1bc7c:	orrs	r0, r0, r1
   1bc80:	bne	16f14 <main@@Base+0x3c34>
   1bc84:	cmp	ip, #9
   1bc88:	blt	15004 <main@@Base+0x1d24>
   1bc8c:	ldr	r2, [sp, #40]	; 0x28
   1bc90:	mov	r1, r8
   1bc94:	ldrb	r0, [r1, #16]!
   1bc98:	ldr	r2, [r2]
   1bc9c:	cmp	r2, #0
   1bca0:	beq	1cdb0 <main@@Base+0x9ad0>
   1bca4:	cmp	r0, #33	; 0x21
   1bca8:	bcc	1bcb4 <main@@Base+0x89d4>
   1bcac:	cmp	r0, #58	; 0x3a
   1bcb0:	bne	15004 <main@@Base+0x1d24>
   1bcb4:	ldr	r0, [sp, #40]	; 0x28
   1bcb8:	mov	r2, #0
   1bcbc:	str	r2, [r0]
   1bcc0:	sub	r0, r6, r1
   1bcc4:	cmp	r0, #2
   1bcc8:	bge	1cdc8 <main@@Base+0x9ae8>
   1bccc:	b	14fb0 <main@@Base+0x1cd0>
   1bcd0:	cmp	r0, #34	; 0x22
   1bcd4:	mov	r7, r8
   1bcd8:	bne	1c788 <main@@Base+0x94a8>
   1bcdc:	add	r1, r8, #7
   1bce0:	sub	r0, r6, r1
   1bce4:	cmp	r0, #2
   1bce8:	blt	1c028 <main@@Base+0x8d48>
   1bcec:	ldrb	r0, [r1]
   1bcf0:	cmp	r0, #32
   1bcf4:	bls	1c014 <main@@Base+0x8d34>
   1bcf8:	mov	r7, r1
   1bcfc:	cmp	r7, r6
   1bd00:	bne	1c040 <main@@Base+0x8d60>
   1bd04:	b	1c078 <main@@Base+0x8d98>
   1bd08:	cmp	r0, #34	; 0x22
   1bd0c:	mov	r7, r8
   1bd10:	bne	1c860 <main@@Base+0x9580>
   1bd14:	add	r1, r8, #6
   1bd18:	sub	r0, r6, r1
   1bd1c:	cmp	r0, #2
   1bd20:	blt	1c0a4 <main@@Base+0x8dc4>
   1bd24:	ldrb	r0, [r1]
   1bd28:	cmp	r0, #32
   1bd2c:	bls	1c090 <main@@Base+0x8db0>
   1bd30:	mov	r7, r1
   1bd34:	cmp	r7, r6
   1bd38:	bne	1c0bc <main@@Base+0x8ddc>
   1bd3c:	b	1c0f4 <main@@Base+0x8e14>
   1bd40:	and	r1, r2, #-16777216	; 0xff000000
   1bd44:	teq	r1, #1728053248	; 0x67000000
   1bd48:	bne	1882c <main@@Base+0x554c>
   1bd4c:	cmp	r0, #2
   1bd50:	blt	1882c <main@@Base+0x554c>
   1bd54:	ldr	r2, [sp, #40]	; 0x28
   1bd58:	mov	r1, r8
   1bd5c:	ldrb	r0, [r1, #17]!
   1bd60:	ldr	r2, [r2]
   1bd64:	cmp	r2, #0
   1bd68:	beq	1d10c <main@@Base+0x9e2c>
   1bd6c:	cmp	r0, #33	; 0x21
   1bd70:	bcc	1bd7c <main@@Base+0x8a9c>
   1bd74:	cmp	r0, #58	; 0x3a
   1bd78:	bne	1882c <main@@Base+0x554c>
   1bd7c:	ldr	r0, [sp, #40]	; 0x28
   1bd80:	mov	r2, #0
   1bd84:	str	r2, [r0]
   1bd88:	sub	r0, r6, r1
   1bd8c:	cmp	r0, #2
   1bd90:	bge	1d124 <main@@Base+0x9e44>
   1bd94:	b	152dc <main@@Base+0x1ffc>
   1bd98:	cmp	r0, #34	; 0x22
   1bd9c:	mov	r1, r8
   1bda0:	bne	1cf34 <main@@Base+0x9c54>
   1bda4:	add	r2, r8, #6
   1bda8:	sub	r0, r6, r2
   1bdac:	cmp	r0, #2
   1bdb0:	blt	1c23c <main@@Base+0x8f5c>
   1bdb4:	ldrb	r0, [r2]
   1bdb8:	cmp	r0, #32
   1bdbc:	bls	1c228 <main@@Base+0x8f48>
   1bdc0:	mov	r1, r2
   1bdc4:	cmp	r1, r6
   1bdc8:	bne	1c258 <main@@Base+0x8f78>
   1bdcc:	b	1c290 <main@@Base+0x8fb0>
   1bdd0:	cmp	r0, #34	; 0x22
   1bdd4:	mov	r7, r8
   1bdd8:	bne	1cf94 <main@@Base+0x9cb4>
   1bddc:	add	r1, r8, #6
   1bde0:	sub	r0, r6, r1
   1bde4:	cmp	r0, #2
   1bde8:	blt	1c2b8 <main@@Base+0x8fd8>
   1bdec:	ldrb	r0, [r1]
   1bdf0:	cmp	r0, #32
   1bdf4:	bls	1c2a4 <main@@Base+0x8fc4>
   1bdf8:	mov	r7, r1
   1bdfc:	cmp	r7, r6
   1be00:	bne	1c2d0 <main@@Base+0x8ff0>
   1be04:	b	1c308 <main@@Base+0x9028>
   1be08:	movw	r2, #24428	; 0x5f6c
   1be0c:	lsr	r1, r1, #8
   1be10:	ldr	r7, [sp, #52]	; 0x34
   1be14:	movt	r2, #102	; 0x66
   1be18:	eor	r2, r2, r0, lsr #8
   1be1c:	orr	r0, r1, r0, lsl #24
   1be20:	movw	r1, #26483	; 0x6773
   1be24:	movt	r1, #28526	; 0x6f6e
   1be28:	eor	r0, r0, r1
   1be2c:	orrs	r0, r0, r2
   1be30:	bne	1bf38 <main@@Base+0x8c58>
   1be34:	ldr	sl, [sp, #44]	; 0x2c
   1be38:	cmp	lr, #8
   1be3c:	mov	r6, r7
   1be40:	blt	16f14 <main@@Base+0x3c34>
   1be44:	ldr	r2, [sp, #40]	; 0x28
   1be48:	mov	r1, r8
   1be4c:	ldrb	r0, [r1, #15]!
   1be50:	ldr	r2, [r2]
   1be54:	cmp	r2, #0
   1be58:	beq	1d174 <main@@Base+0x9e94>
   1be5c:	cmp	r0, #33	; 0x21
   1be60:	bcc	1be6c <main@@Base+0x8b8c>
   1be64:	cmp	r0, #58	; 0x3a
   1be68:	bne	16f14 <main@@Base+0x3c34>
   1be6c:	ldr	r0, [sp, #40]	; 0x28
   1be70:	mov	r2, #0
   1be74:	str	r2, [r0]
   1be78:	sub	r0, r6, r1
   1be7c:	cmp	r0, #2
   1be80:	bge	1d18c <main@@Base+0x9eac>
   1be84:	b	15728 <main@@Base+0x2448>
   1be88:	cmp	r0, #34	; 0x22
   1be8c:	mov	r1, r8
   1be90:	bne	1d1cc <main@@Base+0x9eec>
   1be94:	add	r2, r8, #5
   1be98:	sub	r0, r6, r2
   1be9c:	cmp	r0, #2
   1bea0:	blt	1c334 <main@@Base+0x9054>
   1bea4:	ldrb	r0, [r2]
   1bea8:	cmp	r0, #32
   1beac:	bls	1c320 <main@@Base+0x9040>
   1beb0:	mov	r1, r2
   1beb4:	cmp	r1, r6
   1beb8:	bne	1c350 <main@@Base+0x9070>
   1bebc:	b	1c388 <main@@Base+0x90a8>
   1bec0:	cmp	r0, #34	; 0x22
   1bec4:	mov	r4, r8
   1bec8:	bne	1d234 <main@@Base+0x9f54>
   1becc:	add	r1, r8, #5
   1bed0:	sub	r0, r6, r1
   1bed4:	cmp	r0, #2
   1bed8:	blt	1c3b0 <main@@Base+0x90d0>
   1bedc:	ldrb	r0, [r1]
   1bee0:	cmp	r0, #32
   1bee4:	bls	1c39c <main@@Base+0x90bc>
   1bee8:	mov	r4, r1
   1beec:	cmp	r4, r6
   1bef0:	bne	1c3c8 <main@@Base+0x90e8>
   1bef4:	b	1c400 <main@@Base+0x9120>
   1bef8:	cmp	r0, #34	; 0x22
   1befc:	mov	r1, r8
   1bf00:	bne	1d5f0 <main@@Base+0xa310>
   1bf04:	add	r2, r8, #5
   1bf08:	sub	r0, r5, r2
   1bf0c:	mov	r7, r5
   1bf10:	cmp	r0, #2
   1bf14:	blt	1c430 <main@@Base+0x9150>
   1bf18:	ldrb	r0, [r2]
   1bf1c:	cmp	r0, #32
   1bf20:	bls	1c418 <main@@Base+0x9138>
   1bf24:	mov	r1, r2
   1bf28:	mov	r7, r5
   1bf2c:	cmp	r1, r7
   1bf30:	bne	1c44c <main@@Base+0x916c>
   1bf34:	b	1c4e4 <main@@Base+0x9204>
   1bf38:	ldr	sl, [sp, #44]	; 0x2c
   1bf3c:	mov	r1, r9
   1bf40:	mov	r2, r7
   1bf44:	mov	r0, sl
   1bf48:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   1bf4c:	ldr	r5, [sp, #48]	; 0x30
   1bf50:	mov	r4, r0
   1bf54:	mov	r6, r7
   1bf58:	sub	r0, r6, r4
   1bf5c:	cmp	r0, #2
   1bf60:	bge	1db38 <main@@Base+0xa858>
   1bf64:	b	15d38 <main@@Base+0x2a58>
   1bf68:	cmp	r2, #1
   1bf6c:	mov	r1, #0
   1bf70:	mov	r2, #0
   1bf74:	beq	1ad5c <main@@Base+0x7a7c>
   1bf78:	b	1882c <main@@Base+0x554c>
   1bf7c:	cmp	ip, #9
   1bf80:	blt	15104 <main@@Base+0x1e24>
   1bf84:	ldr	r2, [sp, #40]	; 0x28
   1bf88:	mov	r1, r8
   1bf8c:	ldrb	r0, [r1, #16]!
   1bf90:	ldr	r2, [r2]
   1bf94:	cmp	r2, #0
   1bf98:	beq	1cde4 <main@@Base+0x9b04>
   1bf9c:	cmp	r0, #33	; 0x21
   1bfa0:	bcc	1bfac <main@@Base+0x8ccc>
   1bfa4:	cmp	r0, #58	; 0x3a
   1bfa8:	bne	15104 <main@@Base+0x1e24>
   1bfac:	ldr	r0, [sp, #40]	; 0x28
   1bfb0:	mov	r2, #0
   1bfb4:	str	r2, [r0]
   1bfb8:	sub	r0, r6, r1
   1bfbc:	cmp	r0, #2
   1bfc0:	bge	1cdfc <main@@Base+0x9b1c>
   1bfc4:	b	150b0 <main@@Base+0x1dd0>
   1bfc8:	cmp	r2, #1
   1bfcc:	mov	r1, #0
   1bfd0:	mov	r2, #0
   1bfd4:	beq	1b530 <main@@Base+0x8250>
   1bfd8:	b	1882c <main@@Base+0x554c>
   1bfdc:	cmp	r0, #34	; 0x22
   1bfe0:	mov	r7, r8
   1bfe4:	bne	138e4 <main@@Base+0x604>
   1bfe8:	add	r1, r8, #9
   1bfec:	sub	r0, r6, r1
   1bff0:	cmp	r0, #2
   1bff4:	blt	1c700 <main@@Base+0x9420>
   1bff8:	ldrb	r0, [r1]
   1bffc:	cmp	r0, #32
   1c000:	bls	1c6ec <main@@Base+0x940c>
   1c004:	mov	r7, r1
   1c008:	cmp	r7, r6
   1c00c:	bne	1c718 <main@@Base+0x9438>
   1c010:	b	1c750 <main@@Base+0x9470>
   1c014:	bne	1c028 <main@@Base+0x8d48>
   1c018:	mov	r7, r1
   1c01c:	ldrb	r0, [r7, #1]!
   1c020:	cmp	r0, #32
   1c024:	bhi	1c038 <main@@Base+0x8d58>
   1c028:	mov	r0, sl
   1c02c:	mov	r2, r6
   1c030:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c034:	mov	r7, r0
   1c038:	cmp	r7, r6
   1c03c:	beq	1c078 <main@@Base+0x8d98>
   1c040:	ldrb	r0, [r7]
   1c044:	cmp	r0, #58	; 0x3a
   1c048:	bne	1c078 <main@@Base+0x8d98>
   1c04c:	add	r1, r7, #1
   1c050:	sub	r0, r6, r1
   1c054:	cmp	r0, #2
   1c058:	blt	1c778 <main@@Base+0x9498>
   1c05c:	ldrb	r0, [r1]
   1c060:	cmp	r0, #32
   1c064:	bls	1c768 <main@@Base+0x9488>
   1c068:	mov	r7, r1
   1c06c:	cmp	r8, r7
   1c070:	bne	1c790 <main@@Base+0x94b0>
   1c074:	b	1db14 <main@@Base+0xa834>
   1c078:	mov	r0, sl
   1c07c:	mov	r1, r7
   1c080:	mov	r2, r6
   1c084:	mov	r3, #4
   1c088:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c08c:	b	1c784 <main@@Base+0x94a4>
   1c090:	bne	1c0a4 <main@@Base+0x8dc4>
   1c094:	mov	r7, r1
   1c098:	ldrb	r0, [r7, #1]!
   1c09c:	cmp	r0, #32
   1c0a0:	bhi	1c0b4 <main@@Base+0x8dd4>
   1c0a4:	ldr	r0, [sp, #44]	; 0x2c
   1c0a8:	mov	r2, r6
   1c0ac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c0b0:	mov	r7, r0
   1c0b4:	cmp	r7, r6
   1c0b8:	beq	1c0f4 <main@@Base+0x8e14>
   1c0bc:	ldrb	r0, [r7]
   1c0c0:	cmp	r0, #58	; 0x3a
   1c0c4:	bne	1c0f4 <main@@Base+0x8e14>
   1c0c8:	add	r1, r7, #1
   1c0cc:	sub	r0, r6, r1
   1c0d0:	cmp	r0, #2
   1c0d4:	blt	1c850 <main@@Base+0x9570>
   1c0d8:	ldrb	r0, [r1]
   1c0dc:	cmp	r0, #32
   1c0e0:	bls	1c840 <main@@Base+0x9560>
   1c0e4:	mov	r7, r1
   1c0e8:	cmp	r8, r7
   1c0ec:	bne	1c868 <main@@Base+0x9588>
   1c0f0:	b	1da78 <main@@Base+0xa798>
   1c0f4:	ldr	r0, [sp, #44]	; 0x2c
   1c0f8:	mov	r1, r7
   1c0fc:	mov	r2, r6
   1c100:	mov	r3, #4
   1c104:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c108:	b	1c85c <main@@Base+0x957c>
   1c10c:	cmp	r0, #34	; 0x22
   1c110:	bne	1cb70 <main@@Base+0x9890>
   1c114:	add	r1, r8, #17
   1c118:	ldr	r6, [sp, #44]	; 0x2c
   1c11c:	sub	r0, r5, r1
   1c120:	mov	r7, r5
   1c124:	cmp	r0, #2
   1c128:	blt	1cb24 <main@@Base+0x9844>
   1c12c:	ldrb	r0, [r1]
   1c130:	cmp	r0, #32
   1c134:	bls	1cb0c <main@@Base+0x982c>
   1c138:	mov	r4, r1
   1c13c:	mov	r7, r5
   1c140:	cmp	r4, r7
   1c144:	bne	1cb3c <main@@Base+0x985c>
   1c148:	b	1cb88 <main@@Base+0x98a8>
   1c14c:	cmp	r0, #34	; 0x22
   1c150:	mov	r7, r8
   1c154:	bne	13cf8 <main@@Base+0xa18>
   1c158:	add	r1, r8, #3
   1c15c:	sub	r0, r6, r1
   1c160:	cmp	r0, #2
   1c164:	blt	1cbe8 <main@@Base+0x9908>
   1c168:	ldrb	r0, [r1]
   1c16c:	cmp	r0, #32
   1c170:	bls	1cbd4 <main@@Base+0x98f4>
   1c174:	mov	r7, r1
   1c178:	cmp	r7, r6
   1c17c:	bne	1cc00 <main@@Base+0x9920>
   1c180:	b	1cc38 <main@@Base+0x9958>
   1c184:	cmp	r0, #34	; 0x22
   1c188:	mov	r4, r8
   1c18c:	bne	13e98 <main@@Base+0xbb8>
   1c190:	add	r1, r8, #4
   1c194:	sub	r0, r6, r1
   1c198:	cmp	r0, #2
   1c19c:	blt	1cc64 <main@@Base+0x9984>
   1c1a0:	ldrb	r0, [r1]
   1c1a4:	cmp	r0, #32
   1c1a8:	bls	1cc50 <main@@Base+0x9970>
   1c1ac:	mov	r4, r1
   1c1b0:	cmp	r4, r6
   1c1b4:	bne	1cc7c <main@@Base+0x999c>
   1c1b8:	b	1ccb4 <main@@Base+0x99d4>
   1c1bc:	cmp	r0, #34	; 0x22
   1c1c0:	mov	r7, r8
   1c1c4:	bne	14e14 <main@@Base+0x1b34>
   1c1c8:	add	r1, r8, #7
   1c1cc:	sub	r0, r6, r1
   1c1d0:	cmp	r0, #2
   1c1d4:	blt	1cce0 <main@@Base+0x9a00>
   1c1d8:	ldrb	r0, [r1]
   1c1dc:	cmp	r0, #32
   1c1e0:	bls	1cccc <main@@Base+0x99ec>
   1c1e4:	mov	r7, r1
   1c1e8:	cmp	r7, r6
   1c1ec:	bne	1ccf8 <main@@Base+0x9a18>
   1c1f0:	b	1cd30 <main@@Base+0x9a50>
   1c1f4:	cmp	r0, #34	; 0x22
   1c1f8:	bne	1ce78 <main@@Base+0x9b98>
   1c1fc:	add	r1, r8, #17
   1c200:	sub	r0, r6, r1
   1c204:	cmp	r0, #2
   1c208:	blt	1ce2c <main@@Base+0x9b4c>
   1c20c:	ldrb	r0, [r1]
   1c210:	cmp	r0, #32
   1c214:	bls	1ce18 <main@@Base+0x9b38>
   1c218:	mov	r7, r1
   1c21c:	cmp	r7, r6
   1c220:	bne	1ce44 <main@@Base+0x9b64>
   1c224:	b	1cef8 <main@@Base+0x9c18>
   1c228:	bne	1c23c <main@@Base+0x8f5c>
   1c22c:	mov	r1, r2
   1c230:	ldrb	r0, [r1, #1]!
   1c234:	cmp	r0, #32
   1c238:	bhi	1c250 <main@@Base+0x8f70>
   1c23c:	mov	r1, r2
   1c240:	mov	r0, sl
   1c244:	mov	r2, r6
   1c248:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c24c:	mov	r1, r0
   1c250:	cmp	r1, r6
   1c254:	beq	1c290 <main@@Base+0x8fb0>
   1c258:	ldrb	r0, [r1]
   1c25c:	cmp	r0, #58	; 0x3a
   1c260:	bne	1c290 <main@@Base+0x8fb0>
   1c264:	add	r2, r1, #1
   1c268:	sub	r0, r6, r2
   1c26c:	cmp	r0, #2
   1c270:	blt	1cf20 <main@@Base+0x9c40>
   1c274:	ldrb	r0, [r2]
   1c278:	cmp	r0, #32
   1c27c:	bls	1cf10 <main@@Base+0x9c30>
   1c280:	mov	r1, r2
   1c284:	cmp	r8, r1
   1c288:	bne	1cf3c <main@@Base+0x9c5c>
   1c28c:	b	1db14 <main@@Base+0xa834>
   1c290:	mov	r0, sl
   1c294:	mov	r2, r6
   1c298:	mov	r3, #4
   1c29c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c2a0:	b	1cf30 <main@@Base+0x9c50>
   1c2a4:	bne	1c2b8 <main@@Base+0x8fd8>
   1c2a8:	mov	r7, r1
   1c2ac:	ldrb	r0, [r7, #1]!
   1c2b0:	cmp	r0, #32
   1c2b4:	bhi	1c2c8 <main@@Base+0x8fe8>
   1c2b8:	mov	r0, sl
   1c2bc:	mov	r2, r6
   1c2c0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c2c4:	mov	r7, r0
   1c2c8:	cmp	r7, r6
   1c2cc:	beq	1c308 <main@@Base+0x9028>
   1c2d0:	ldrb	r0, [r7]
   1c2d4:	cmp	r0, #58	; 0x3a
   1c2d8:	bne	1c308 <main@@Base+0x9028>
   1c2dc:	add	r1, r7, #1
   1c2e0:	sub	r0, r6, r1
   1c2e4:	cmp	r0, #2
   1c2e8:	blt	1cf84 <main@@Base+0x9ca4>
   1c2ec:	ldrb	r0, [r1]
   1c2f0:	cmp	r0, #32
   1c2f4:	bls	1cf74 <main@@Base+0x9c94>
   1c2f8:	mov	r7, r1
   1c2fc:	cmp	r8, r7
   1c300:	bne	1cf9c <main@@Base+0x9cbc>
   1c304:	b	1db14 <main@@Base+0xa834>
   1c308:	mov	r0, sl
   1c30c:	mov	r1, r7
   1c310:	mov	r2, r6
   1c314:	mov	r3, #4
   1c318:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c31c:	b	1cf90 <main@@Base+0x9cb0>
   1c320:	bne	1c334 <main@@Base+0x9054>
   1c324:	mov	r1, r2
   1c328:	ldrb	r0, [r1, #1]!
   1c32c:	cmp	r0, #32
   1c330:	bhi	1c348 <main@@Base+0x9068>
   1c334:	mov	r1, r2
   1c338:	mov	r0, sl
   1c33c:	mov	r2, r6
   1c340:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c344:	mov	r1, r0
   1c348:	cmp	r1, r6
   1c34c:	beq	1c388 <main@@Base+0x90a8>
   1c350:	ldrb	r0, [r1]
   1c354:	cmp	r0, #58	; 0x3a
   1c358:	bne	1c388 <main@@Base+0x90a8>
   1c35c:	add	r2, r1, #1
   1c360:	sub	r0, r6, r2
   1c364:	cmp	r0, #2
   1c368:	blt	1d1b8 <main@@Base+0x9ed8>
   1c36c:	ldrb	r0, [r2]
   1c370:	cmp	r0, #32
   1c374:	bls	1d1a8 <main@@Base+0x9ec8>
   1c378:	mov	r1, r2
   1c37c:	cmp	r8, r1
   1c380:	bne	1d1d4 <main@@Base+0x9ef4>
   1c384:	b	1db14 <main@@Base+0xa834>
   1c388:	mov	r0, sl
   1c38c:	mov	r2, r6
   1c390:	mov	r3, #4
   1c394:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c398:	b	1d1c8 <main@@Base+0x9ee8>
   1c39c:	bne	1c3b0 <main@@Base+0x90d0>
   1c3a0:	mov	r4, r1
   1c3a4:	ldrb	r0, [r4, #1]!
   1c3a8:	cmp	r0, #32
   1c3ac:	bhi	1c3c0 <main@@Base+0x90e0>
   1c3b0:	mov	r0, sl
   1c3b4:	mov	r2, r6
   1c3b8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c3bc:	mov	r4, r0
   1c3c0:	cmp	r4, r6
   1c3c4:	beq	1c400 <main@@Base+0x9120>
   1c3c8:	ldrb	r0, [r4]
   1c3cc:	cmp	r0, #58	; 0x3a
   1c3d0:	bne	1c400 <main@@Base+0x9120>
   1c3d4:	add	r1, r4, #1
   1c3d8:	sub	r0, r6, r1
   1c3dc:	cmp	r0, #2
   1c3e0:	blt	1d224 <main@@Base+0x9f44>
   1c3e4:	ldrb	r0, [r1]
   1c3e8:	cmp	r0, #32
   1c3ec:	bls	1d214 <main@@Base+0x9f34>
   1c3f0:	mov	r4, r1
   1c3f4:	cmp	r8, r4
   1c3f8:	bne	1d23c <main@@Base+0x9f5c>
   1c3fc:	b	1db14 <main@@Base+0xa834>
   1c400:	mov	r0, sl
   1c404:	mov	r1, r4
   1c408:	mov	r2, r6
   1c40c:	mov	r3, #4
   1c410:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c414:	b	1d230 <main@@Base+0x9f50>
   1c418:	mov	r7, r5
   1c41c:	bne	1c430 <main@@Base+0x9150>
   1c420:	mov	r1, r2
   1c424:	ldrb	r0, [r1, #1]!
   1c428:	cmp	r0, #32
   1c42c:	bhi	1c444 <main@@Base+0x9164>
   1c430:	ldr	r0, [sp, #44]	; 0x2c
   1c434:	mov	r1, r2
   1c438:	mov	r2, r7
   1c43c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c440:	mov	r1, r0
   1c444:	cmp	r1, r7
   1c448:	beq	1c4e4 <main@@Base+0x9204>
   1c44c:	ldrb	r0, [r1]
   1c450:	cmp	r0, #58	; 0x3a
   1c454:	bne	1c4e4 <main@@Base+0x9204>
   1c458:	add	r2, r1, #1
   1c45c:	sub	r0, r5, r2
   1c460:	cmp	r0, #2
   1c464:	blt	1d5dc <main@@Base+0xa2fc>
   1c468:	ldrb	r0, [r2]
   1c46c:	cmp	r0, #32
   1c470:	bls	1d5cc <main@@Base+0xa2ec>
   1c474:	mov	r1, r2
   1c478:	cmp	r8, r1
   1c47c:	bne	1d5f8 <main@@Base+0xa318>
   1c480:	eor	r0, r6, #889192448	; 0x35000000
   1c484:	mov	r6, r5
   1c488:	orrs	r0, r0, r4
   1c48c:	bne	1da78 <main@@Base+0xa798>
   1c490:	cmp	r9, #6
   1c494:	mov	r7, r8
   1c498:	blt	1da0c <main@@Base+0xa72c>
   1c49c:	ldr	r2, [sp, #40]	; 0x28
   1c4a0:	mov	r1, r8
   1c4a4:	ldrb	r0, [r1, #5]!
   1c4a8:	ldr	r2, [r2]
   1c4ac:	cmp	r2, #0
   1c4b0:	beq	1c4f8 <main@@Base+0x9218>
   1c4b4:	cmp	r0, #33	; 0x21
   1c4b8:	bcc	1c4c8 <main@@Base+0x91e8>
   1c4bc:	cmp	r0, #58	; 0x3a
   1c4c0:	mov	r7, r8
   1c4c4:	bne	1da0c <main@@Base+0xa72c>
   1c4c8:	ldr	r0, [sp, #40]	; 0x28
   1c4cc:	mov	r2, #0
   1c4d0:	str	r2, [r0]
   1c4d4:	sub	r0, r6, r1
   1c4d8:	cmp	r0, #2
   1c4dc:	bge	1c514 <main@@Base+0x9234>
   1c4e0:	b	1c650 <main@@Base+0x9370>
   1c4e4:	ldr	r0, [sp, #44]	; 0x2c
   1c4e8:	mov	r2, r5
   1c4ec:	mov	r3, #4
   1c4f0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c4f4:	b	1d5ec <main@@Base+0xa30c>
   1c4f8:	cmp	r0, #34	; 0x22
   1c4fc:	mov	r7, r8
   1c500:	bne	1da0c <main@@Base+0xa72c>
   1c504:	add	r1, r8, #6
   1c508:	sub	r0, r6, r1
   1c50c:	cmp	r0, #2
   1c510:	blt	1c650 <main@@Base+0x9370>
   1c514:	ldrb	r0, [r1]
   1c518:	cmp	r0, #32
   1c51c:	bls	1c63c <main@@Base+0x935c>
   1c520:	mov	r7, r1
   1c524:	cmp	r7, r6
   1c528:	bne	1c668 <main@@Base+0x9388>
   1c52c:	b	1c6a0 <main@@Base+0x93c0>
   1c530:	cmp	r0, #34	; 0x22
   1c534:	bne	1882c <main@@Base+0x554c>
   1c538:	add	r1, r8, #11
   1c53c:	sub	r0, r6, r1
   1c540:	cmp	r0, #2
   1c544:	blt	1d69c <main@@Base+0xa3bc>
   1c548:	ldrb	r0, [r1]
   1c54c:	cmp	r0, #32
   1c550:	bls	1d688 <main@@Base+0xa3a8>
   1c554:	mov	r4, r1
   1c558:	cmp	r4, r6
   1c55c:	bne	1d6b4 <main@@Base+0xa3d4>
   1c560:	b	1d6ec <main@@Base+0xa40c>
   1c564:	cmp	r0, #34	; 0x22
   1c568:	bne	1882c <main@@Base+0x554c>
   1c56c:	add	r1, r8, #19
   1c570:	sub	r0, r6, r1
   1c574:	cmp	r0, #2
   1c578:	blt	1d718 <main@@Base+0xa438>
   1c57c:	ldrb	r0, [r1]
   1c580:	cmp	r0, #32
   1c584:	bls	1d704 <main@@Base+0xa424>
   1c588:	mov	r4, r1
   1c58c:	cmp	r4, r6
   1c590:	bne	1d730 <main@@Base+0xa450>
   1c594:	b	1d768 <main@@Base+0xa488>
   1c598:	cmp	r0, #34	; 0x22
   1c59c:	bne	16f14 <main@@Base+0x3c34>
   1c5a0:	add	r1, r8, #24
   1c5a4:	sub	r0, r6, r1
   1c5a8:	cmp	r0, #2
   1c5ac:	blt	1d794 <main@@Base+0xa4b4>
   1c5b0:	ldrb	r0, [r1]
   1c5b4:	cmp	r0, #32
   1c5b8:	bls	1d780 <main@@Base+0xa4a0>
   1c5bc:	mov	r7, r1
   1c5c0:	cmp	r7, r6
   1c5c4:	bne	1d7ac <main@@Base+0xa4cc>
   1c5c8:	b	1d7e4 <main@@Base+0xa504>
   1c5cc:	cmp	r0, #34	; 0x22
   1c5d0:	mov	r7, r8
   1c5d4:	bne	15bac <main@@Base+0x28cc>
   1c5d8:	add	r1, r8, #5
   1c5dc:	sub	r0, r6, r1
   1c5e0:	cmp	r0, #2
   1c5e4:	blt	1d810 <main@@Base+0xa530>
   1c5e8:	ldrb	r0, [r1]
   1c5ec:	cmp	r0, #32
   1c5f0:	bls	1d7fc <main@@Base+0xa51c>
   1c5f4:	mov	r7, r1
   1c5f8:	cmp	r7, r6
   1c5fc:	bne	1d828 <main@@Base+0xa548>
   1c600:	b	1d860 <main@@Base+0xa580>
   1c604:	cmp	r0, #34	; 0x22
   1c608:	mov	r7, r8
   1c60c:	bne	15d78 <main@@Base+0x2a98>
   1c610:	add	r1, r8, #6
   1c614:	sub	r0, r6, r1
   1c618:	cmp	r0, #2
   1c61c:	blt	1d88c <main@@Base+0xa5ac>
   1c620:	ldrb	r0, [r1]
   1c624:	cmp	r0, #32
   1c628:	bls	1d878 <main@@Base+0xa598>
   1c62c:	mov	r7, r1
   1c630:	cmp	r7, r6
   1c634:	bne	1d8a4 <main@@Base+0xa5c4>
   1c638:	b	1d8dc <main@@Base+0xa5fc>
   1c63c:	bne	1c650 <main@@Base+0x9370>
   1c640:	mov	r7, r1
   1c644:	ldrb	r0, [r7, #1]!
   1c648:	cmp	r0, #32
   1c64c:	bhi	1c660 <main@@Base+0x9380>
   1c650:	ldr	r0, [sp, #44]	; 0x2c
   1c654:	mov	r2, r6
   1c658:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c65c:	mov	r7, r0
   1c660:	cmp	r7, r6
   1c664:	beq	1c6a0 <main@@Base+0x93c0>
   1c668:	ldrb	r0, [r7]
   1c66c:	cmp	r0, #58	; 0x3a
   1c670:	bne	1c6a0 <main@@Base+0x93c0>
   1c674:	add	r1, r7, #1
   1c678:	sub	r0, r6, r1
   1c67c:	cmp	r0, #2
   1c680:	blt	1d9fc <main@@Base+0xa71c>
   1c684:	ldrb	r0, [r1]
   1c688:	cmp	r0, #32
   1c68c:	bls	1d9ec <main@@Base+0xa70c>
   1c690:	mov	r7, r1
   1c694:	cmp	r8, r7
   1c698:	bne	1da14 <main@@Base+0xa734>
   1c69c:	b	1da78 <main@@Base+0xa798>
   1c6a0:	ldr	r0, [sp, #44]	; 0x2c
   1c6a4:	mov	r1, r7
   1c6a8:	mov	r2, r6
   1c6ac:	mov	r3, #4
   1c6b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c6b4:	b	1da08 <main@@Base+0xa728>
   1c6b8:	cmp	r0, #34	; 0x22
   1c6bc:	bne	1d954 <main@@Base+0xa674>
   1c6c0:	add	r1, r8, #17
   1c6c4:	sub	r0, r6, r1
   1c6c8:	cmp	r0, #2
   1c6cc:	blt	1d908 <main@@Base+0xa628>
   1c6d0:	ldrb	r0, [r1]
   1c6d4:	cmp	r0, #32
   1c6d8:	bls	1d8f4 <main@@Base+0xa614>
   1c6dc:	mov	r7, r1
   1c6e0:	cmp	r7, r6
   1c6e4:	bne	1d920 <main@@Base+0xa640>
   1c6e8:	b	1d9d4 <main@@Base+0xa6f4>
   1c6ec:	bne	1c700 <main@@Base+0x9420>
   1c6f0:	mov	r7, r1
   1c6f4:	ldrb	r0, [r7, #1]!
   1c6f8:	cmp	r0, #32
   1c6fc:	bhi	1c710 <main@@Base+0x9430>
   1c700:	mov	r0, sl
   1c704:	mov	r2, r6
   1c708:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c70c:	mov	r7, r0
   1c710:	cmp	r7, r6
   1c714:	beq	1c750 <main@@Base+0x9470>
   1c718:	ldrb	r0, [r7]
   1c71c:	cmp	r0, #58	; 0x3a
   1c720:	bne	1c750 <main@@Base+0x9470>
   1c724:	add	r1, r7, #1
   1c728:	sub	r0, r6, r1
   1c72c:	cmp	r0, #2
   1c730:	blt	138d4 <main@@Base+0x5f4>
   1c734:	ldrb	r0, [r1]
   1c738:	cmp	r0, #32
   1c73c:	bls	138c4 <main@@Base+0x5e4>
   1c740:	mov	r7, r1
   1c744:	cmp	r8, r7
   1c748:	bne	138ec <main@@Base+0x60c>
   1c74c:	b	1db14 <main@@Base+0xa834>
   1c750:	mov	r0, sl
   1c754:	mov	r1, r7
   1c758:	mov	r2, r6
   1c75c:	mov	r3, #4
   1c760:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c764:	b	138e0 <main@@Base+0x600>
   1c768:	bne	1c778 <main@@Base+0x9498>
   1c76c:	ldrb	r0, [r7, #2]!
   1c770:	cmp	r0, #32
   1c774:	bhi	1c788 <main@@Base+0x94a8>
   1c778:	mov	r0, sl
   1c77c:	mov	r2, r6
   1c780:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c784:	mov	r7, r0
   1c788:	cmp	r8, r7
   1c78c:	beq	1db14 <main@@Base+0xa834>
   1c790:	mov	r0, #0
   1c794:	mov	r1, r7
   1c798:	mov	r2, r6
   1c79c:	sub	r3, fp, #56	; 0x38
   1c7a0:	str	r0, [fp, #-56]	; 0xffffffc8
   1c7a4:	mov	r0, sl
   1c7a8:	bl	32578 <flatcc_json_parser_float@@Base>
   1c7ac:	ldr	r5, [sp, #48]	; 0x30
   1c7b0:	mov	r4, r0
   1c7b4:	cmp	r7, r0
   1c7b8:	bne	1c7f0 <main@@Base+0x9510>
   1c7bc:	sub	r0, fp, #56	; 0x38
   1c7c0:	mov	r1, r7
   1c7c4:	mov	r2, r6
   1c7c8:	str	r0, [sp]
   1c7cc:	movw	r0, #32912	; 0x8090
   1c7d0:	movt	r0, #4
   1c7d4:	add	r3, r0, #96	; 0x60
   1c7d8:	mov	r0, sl
   1c7dc:	bl	23dac <main@@Base+0x10acc>
   1c7e0:	mov	r4, r0
   1c7e4:	cmp	r0, r7
   1c7e8:	cmpne	r4, r6
   1c7ec:	beq	13398 <main@@Base+0xb8>
   1c7f0:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1c7f4:	vcmp.f32	s0, #0.0
   1c7f8:	vmrs	APSR_nzcv, fpscr
   1c7fc:	bne	1c80c <main@@Base+0x952c>
   1c800:	ldrb	r0, [sl, #8]
   1c804:	tst	r0, #2
   1c808:	beq	1db2c <main@@Base+0xa84c>
   1c80c:	ldr	r0, [sl]
   1c810:	mov	r1, #27
   1c814:	mov	r2, #4
   1c818:	mov	r3, #4
   1c81c:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   1c820:	cmp	r0, #0
   1c824:	beq	13398 <main@@Base+0xb8>
   1c828:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c82c:	str	r1, [r0]
   1c830:	sub	r0, r6, r4
   1c834:	cmp	r0, #2
   1c838:	bge	1db38 <main@@Base+0xa858>
   1c83c:	b	15d38 <main@@Base+0x2a58>
   1c840:	bne	1c850 <main@@Base+0x9570>
   1c844:	ldrb	r0, [r7, #2]!
   1c848:	cmp	r0, #32
   1c84c:	bhi	1c860 <main@@Base+0x9580>
   1c850:	ldr	r0, [sp, #44]	; 0x2c
   1c854:	mov	r2, r6
   1c858:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c85c:	mov	r7, r0
   1c860:	cmp	r8, r7
   1c864:	beq	1da78 <main@@Base+0xa798>
   1c868:	ldr	sl, [sp, #44]	; 0x2c
   1c86c:	mov	r1, #4
   1c870:	mov	r2, #2
   1c874:	mvn	r3, #-1073741824	; 0xc0000000
   1c878:	ldr	r0, [sl]
   1c87c:	bl	2caac <flatcc_builder_start_vector@@Base>
   1c880:	cmp	r0, #0
   1c884:	bne	1dc94 <main@@Base+0xa9b4>
   1c888:	cmp	r7, r6
   1c88c:	beq	1c8cc <main@@Base+0x95ec>
   1c890:	ldrb	r0, [r7]
   1c894:	cmp	r0, #91	; 0x5b
   1c898:	bne	1c8cc <main@@Base+0x95ec>
   1c89c:	add	r1, r7, #1
   1c8a0:	sub	r0, r6, r1
   1c8a4:	cmp	r0, #2
   1c8a8:	blt	1c924 <main@@Base+0x9644>
   1c8ac:	ldrb	r0, [r1]
   1c8b0:	cmp	r0, #32
   1c8b4:	bls	1c914 <main@@Base+0x9634>
   1c8b8:	mov	r7, r1
   1c8bc:	cmp	r7, r6
   1c8c0:	mov	r4, r6
   1c8c4:	bne	1c940 <main@@Base+0x9660>
   1c8c8:	b	1c984 <main@@Base+0x96a4>
   1c8cc:	mov	r0, sl
   1c8d0:	mov	r1, r7
   1c8d4:	mov	r2, r6
   1c8d8:	mov	r3, #22
   1c8dc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1c8e0:	ldr	r5, [sp, #48]	; 0x30
   1c8e4:	mov	r7, r0
   1c8e8:	ldr	r0, [sl]
   1c8ec:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   1c8f0:	cmp	r0, #0
   1c8f4:	str	r0, [sp, #60]	; 0x3c
   1c8f8:	beq	1dc94 <main@@Base+0xa9b4>
   1c8fc:	ldr	r0, [sl]
   1c900:	mov	r1, #9
   1c904:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   1c908:	cmp	r0, #0
   1c90c:	bne	135e0 <main@@Base+0x300>
   1c910:	b	1dc94 <main@@Base+0xa9b4>
   1c914:	bne	1c924 <main@@Base+0x9644>
   1c918:	ldrb	r0, [r7, #2]!
   1c91c:	cmp	r0, #32
   1c920:	bhi	1c934 <main@@Base+0x9654>
   1c924:	mov	r0, sl
   1c928:	mov	r2, r6
   1c92c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c930:	mov	r7, r0
   1c934:	cmp	r7, r6
   1c938:	mov	r4, r6
   1c93c:	beq	1c984 <main@@Base+0x96a4>
   1c940:	ldrb	r0, [r7]
   1c944:	cmp	r0, #93	; 0x5d
   1c948:	bne	1c980 <main@@Base+0x96a0>
   1c94c:	ldr	r5, [sp, #48]	; 0x30
   1c950:	add	r1, r7, #1
   1c954:	sub	r0, r6, r1
   1c958:	cmp	r0, #2
   1c95c:	blt	1d644 <main@@Base+0xa364>
   1c960:	ldrb	r0, [r1]
   1c964:	cmp	r0, #32
   1c968:	bhi	1cabc <main@@Base+0x97dc>
   1c96c:	bne	1d644 <main@@Base+0xa364>
   1c970:	ldrb	r0, [r7, #2]!
   1c974:	cmp	r0, #32
   1c978:	bhi	1c8e8 <main@@Base+0x9608>
   1c97c:	b	1d644 <main@@Base+0xa364>
   1c980:	mov	r4, r7
   1c984:	ldr	r0, [sl]
   1c988:	mov	r1, #1
   1c98c:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   1c990:	mov	r3, r0
   1c994:	cmp	r0, #0
   1c998:	beq	13398 <main@@Base+0xb8>
   1c99c:	mov	r0, sl
   1c9a0:	mov	r1, r4
   1c9a4:	mov	r2, r6
   1c9a8:	bl	1fa28 <main@@Base+0xc748>
   1c9ac:	mov	r1, r0
   1c9b0:	sub	r0, r6, r0
   1c9b4:	cmp	r0, #2
   1c9b8:	blt	1c9ec <main@@Base+0x970c>
   1c9bc:	ldrb	r0, [r1]
   1c9c0:	cmp	r0, #32
   1c9c4:	bls	1c9d8 <main@@Base+0x96f8>
   1c9c8:	mov	r4, r1
   1c9cc:	cmp	r4, r6
   1c9d0:	bne	1ca04 <main@@Base+0x9724>
   1c9d4:	b	1ca88 <main@@Base+0x97a8>
   1c9d8:	bne	1c9ec <main@@Base+0x970c>
   1c9dc:	mov	r4, r1
   1c9e0:	ldrb	r0, [r4, #1]!
   1c9e4:	cmp	r0, #32
   1c9e8:	bhi	1c9fc <main@@Base+0x971c>
   1c9ec:	mov	r0, sl
   1c9f0:	mov	r2, r6
   1c9f4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1c9f8:	mov	r4, r0
   1c9fc:	cmp	r4, r6
   1ca00:	beq	1ca88 <main@@Base+0x97a8>
   1ca04:	ldrb	r0, [r4]
   1ca08:	cmp	r0, #44	; 0x2c
   1ca0c:	bne	1ca94 <main@@Base+0x97b4>
   1ca10:	add	r1, r4, #1
   1ca14:	sub	r0, r6, r1
   1ca18:	cmp	r0, #2
   1ca1c:	blt	1ca4c <main@@Base+0x976c>
   1ca20:	ldrb	r0, [r1]
   1ca24:	cmp	r0, #32
   1ca28:	bls	1ca3c <main@@Base+0x975c>
   1ca2c:	mov	r4, r1
   1ca30:	cmp	r4, r6
   1ca34:	bne	1ca64 <main@@Base+0x9784>
   1ca38:	b	1cac4 <main@@Base+0x97e4>
   1ca3c:	bne	1ca4c <main@@Base+0x976c>
   1ca40:	ldrb	r0, [r4, #2]!
   1ca44:	cmp	r0, #32
   1ca48:	bhi	1ca5c <main@@Base+0x977c>
   1ca4c:	mov	r0, sl
   1ca50:	mov	r2, r6
   1ca54:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1ca58:	mov	r4, r0
   1ca5c:	cmp	r4, r6
   1ca60:	beq	1cac4 <main@@Base+0x97e4>
   1ca64:	ldrb	r0, [r4]
   1ca68:	cmp	r0, #93	; 0x5d
   1ca6c:	bne	1c984 <main@@Base+0x96a4>
   1ca70:	ldr	r5, [sp, #48]	; 0x30
   1ca74:	add	r1, r4, #1
   1ca78:	sub	r0, r6, r1
   1ca7c:	cmp	r0, #2
   1ca80:	blt	1d644 <main@@Base+0xa364>
   1ca84:	b	1cab0 <main@@Base+0x97d0>
   1ca88:	ldr	r5, [sp, #48]	; 0x30
   1ca8c:	mov	r7, r6
   1ca90:	b	1c8e8 <main@@Base+0x9608>
   1ca94:	ldr	r5, [sp, #48]	; 0x30
   1ca98:	cmp	r0, #93	; 0x5d
   1ca9c:	bne	1d0f4 <main@@Base+0x9e14>
   1caa0:	add	r1, r4, #1
   1caa4:	sub	r0, r6, r1
   1caa8:	cmp	r0, #2
   1caac:	blt	1d644 <main@@Base+0xa364>
   1cab0:	ldrb	r0, [r1]
   1cab4:	cmp	r0, #32
   1cab8:	bls	1d630 <main@@Base+0xa350>
   1cabc:	mov	r7, r1
   1cac0:	b	1c8e8 <main@@Base+0x9608>
   1cac4:	mov	r0, sl
   1cac8:	mov	r1, r6
   1cacc:	mov	r2, r6
   1cad0:	mov	r3, #9
   1cad4:	b	1c8dc <main@@Base+0x95fc>
   1cad8:	cmp	r0, #34	; 0x22
   1cadc:	bne	16f14 <main@@Base+0x3c34>
   1cae0:	add	r1, r8, #22
   1cae4:	sub	r0, r6, r1
   1cae8:	cmp	r0, #2
   1caec:	blt	13ad4 <main@@Base+0x7f4>
   1caf0:	ldrb	r0, [r1]
   1caf4:	cmp	r0, #32
   1caf8:	bls	13ac0 <main@@Base+0x7e0>
   1cafc:	mov	r4, r1
   1cb00:	cmp	r4, r6
   1cb04:	bne	13aec <main@@Base+0x80c>
   1cb08:	b	13b24 <main@@Base+0x844>
   1cb0c:	mov	r7, r5
   1cb10:	bne	1cb24 <main@@Base+0x9844>
   1cb14:	mov	r4, r1
   1cb18:	ldrb	r0, [r4, #1]!
   1cb1c:	cmp	r0, #32
   1cb20:	bhi	1cb34 <main@@Base+0x9854>
   1cb24:	mov	r0, r6
   1cb28:	mov	r2, r7
   1cb2c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1cb30:	mov	r4, r0
   1cb34:	cmp	r4, r7
   1cb38:	beq	1cb88 <main@@Base+0x98a8>
   1cb3c:	ldrb	r0, [r4]
   1cb40:	cmp	r0, #58	; 0x3a
   1cb44:	bne	1cb88 <main@@Base+0x98a8>
   1cb48:	add	r1, r4, #1
   1cb4c:	sub	r0, r5, r1
   1cb50:	cmp	r0, #2
   1cb54:	blt	13b64 <main@@Base+0x884>
   1cb58:	ldrb	r0, [r1]
   1cb5c:	cmp	r0, #32
   1cb60:	bls	13b54 <main@@Base+0x874>
   1cb64:	mov	r4, r1
   1cb68:	cmp	r9, r4
   1cb6c:	bne	13b7c <main@@Base+0x89c>
   1cb70:	ldr	sl, [sp, #44]	; 0x2c
   1cb74:	mov	r1, r9
   1cb78:	mov	r0, sl
   1cb7c:	mov	r6, r5
   1cb80:	mov	r2, r5
   1cb84:	b	1db20 <main@@Base+0xa840>
   1cb88:	mov	r0, r6
   1cb8c:	mov	r1, r4
   1cb90:	mov	r2, r5
   1cb94:	mov	r3, #4
   1cb98:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1cb9c:	b	13b70 <main@@Base+0x890>
   1cba0:	cmp	r0, #34	; 0x22
   1cba4:	bne	1882c <main@@Base+0x554c>
   1cba8:	add	r1, r8, #18
   1cbac:	sub	r0, r6, r1
   1cbb0:	cmp	r0, #2
   1cbb4:	blt	13c3c <main@@Base+0x95c>
   1cbb8:	ldrb	r0, [r1]
   1cbbc:	cmp	r0, #32
   1cbc0:	bls	13c28 <main@@Base+0x948>
   1cbc4:	mov	r4, r1
   1cbc8:	cmp	r4, r6
   1cbcc:	bne	13c54 <main@@Base+0x974>
   1cbd0:	b	13c8c <main@@Base+0x9ac>
   1cbd4:	bne	1cbe8 <main@@Base+0x9908>
   1cbd8:	mov	r7, r1
   1cbdc:	ldrb	r0, [r7, #1]!
   1cbe0:	cmp	r0, #32
   1cbe4:	bhi	1cbf8 <main@@Base+0x9918>
   1cbe8:	mov	r0, sl
   1cbec:	mov	r2, r6
   1cbf0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1cbf4:	mov	r7, r0
   1cbf8:	cmp	r7, r6
   1cbfc:	beq	1cc38 <main@@Base+0x9958>
   1cc00:	ldrb	r0, [r7]
   1cc04:	cmp	r0, #58	; 0x3a
   1cc08:	bne	1cc38 <main@@Base+0x9958>
   1cc0c:	add	r1, r7, #1
   1cc10:	sub	r0, r6, r1
   1cc14:	cmp	r0, #2
   1cc18:	blt	13ce8 <main@@Base+0xa08>
   1cc1c:	ldrb	r0, [r1]
   1cc20:	cmp	r0, #32
   1cc24:	bls	13cd8 <main@@Base+0x9f8>
   1cc28:	mov	r7, r1
   1cc2c:	cmp	r8, r7
   1cc30:	bne	13d00 <main@@Base+0xa20>
   1cc34:	b	1db14 <main@@Base+0xa834>
   1cc38:	mov	r0, sl
   1cc3c:	mov	r1, r7
   1cc40:	mov	r2, r6
   1cc44:	mov	r3, #4
   1cc48:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1cc4c:	b	13cf4 <main@@Base+0xa14>
   1cc50:	bne	1cc64 <main@@Base+0x9984>
   1cc54:	mov	r4, r1
   1cc58:	ldrb	r0, [r4, #1]!
   1cc5c:	cmp	r0, #32
   1cc60:	bhi	1cc74 <main@@Base+0x9994>
   1cc64:	mov	r0, sl
   1cc68:	mov	r2, r6
   1cc6c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1cc70:	mov	r4, r0
   1cc74:	cmp	r4, r6
   1cc78:	beq	1ccb4 <main@@Base+0x99d4>
   1cc7c:	ldrb	r0, [r4]
   1cc80:	cmp	r0, #58	; 0x3a
   1cc84:	bne	1ccb4 <main@@Base+0x99d4>
   1cc88:	add	r1, r4, #1
   1cc8c:	sub	r0, r6, r1
   1cc90:	cmp	r0, #2
   1cc94:	blt	13e88 <main@@Base+0xba8>
   1cc98:	ldrb	r0, [r1]
   1cc9c:	cmp	r0, #32
   1cca0:	bls	13e78 <main@@Base+0xb98>
   1cca4:	mov	r4, r1
   1cca8:	cmp	r8, r4
   1ccac:	bne	13ea0 <main@@Base+0xbc0>
   1ccb0:	b	1db14 <main@@Base+0xa834>
   1ccb4:	mov	r0, sl
   1ccb8:	mov	r1, r4
   1ccbc:	mov	r2, r6
   1ccc0:	mov	r3, #4
   1ccc4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1ccc8:	b	13e94 <main@@Base+0xbb4>
   1cccc:	bne	1cce0 <main@@Base+0x9a00>
   1ccd0:	mov	r7, r1
   1ccd4:	ldrb	r0, [r7, #1]!
   1ccd8:	cmp	r0, #32
   1ccdc:	bhi	1ccf0 <main@@Base+0x9a10>
   1cce0:	mov	r0, sl
   1cce4:	mov	r2, r6
   1cce8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1ccec:	mov	r7, r0
   1ccf0:	cmp	r7, r6
   1ccf4:	beq	1cd30 <main@@Base+0x9a50>
   1ccf8:	ldrb	r0, [r7]
   1ccfc:	cmp	r0, #58	; 0x3a
   1cd00:	bne	1cd30 <main@@Base+0x9a50>
   1cd04:	add	r1, r7, #1
   1cd08:	sub	r0, r6, r1
   1cd0c:	cmp	r0, #2
   1cd10:	blt	14e04 <main@@Base+0x1b24>
   1cd14:	ldrb	r0, [r1]
   1cd18:	cmp	r0, #32
   1cd1c:	bls	14df4 <main@@Base+0x1b14>
   1cd20:	mov	r7, r1
   1cd24:	cmp	r8, r7
   1cd28:	bne	14e1c <main@@Base+0x1b3c>
   1cd2c:	b	1db14 <main@@Base+0xa834>
   1cd30:	mov	r0, sl
   1cd34:	mov	r1, r7
   1cd38:	mov	r2, r6
   1cd3c:	mov	r3, #4
   1cd40:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1cd44:	b	14e10 <main@@Base+0x1b30>
   1cd48:	cmp	r0, #34	; 0x22
   1cd4c:	bne	1882c <main@@Base+0x554c>
   1cd50:	add	r1, r8, #10
   1cd54:	sub	r0, r6, r1
   1cd58:	cmp	r0, #2
   1cd5c:	blt	14eb8 <main@@Base+0x1bd8>
   1cd60:	ldrb	r0, [r1]
   1cd64:	cmp	r0, #32
   1cd68:	bls	14ea4 <main@@Base+0x1bc4>
   1cd6c:	mov	r4, r1
   1cd70:	cmp	r4, r6
   1cd74:	bne	14ed0 <main@@Base+0x1bf0>
   1cd78:	b	14f08 <main@@Base+0x1c28>
   1cd7c:	cmp	r0, #34	; 0x22
   1cd80:	bne	1882c <main@@Base+0x554c>
   1cd84:	add	r1, r8, #10
   1cd88:	sub	r0, r6, r1
   1cd8c:	cmp	r0, #2
   1cd90:	blt	14f34 <main@@Base+0x1c54>
   1cd94:	ldrb	r0, [r1]
   1cd98:	cmp	r0, #32
   1cd9c:	bls	14f20 <main@@Base+0x1c40>
   1cda0:	mov	r4, r1
   1cda4:	cmp	r4, r6
   1cda8:	bne	14f4c <main@@Base+0x1c6c>
   1cdac:	b	14f84 <main@@Base+0x1ca4>
   1cdb0:	cmp	r0, #34	; 0x22
   1cdb4:	bne	15004 <main@@Base+0x1d24>
   1cdb8:	add	r1, r8, #17
   1cdbc:	sub	r0, r6, r1
   1cdc0:	cmp	r0, #2
   1cdc4:	blt	14fb0 <main@@Base+0x1cd0>
   1cdc8:	ldrb	r0, [r1]
   1cdcc:	cmp	r0, #32
   1cdd0:	bls	14f9c <main@@Base+0x1cbc>
   1cdd4:	mov	r7, r1
   1cdd8:	cmp	r7, r6
   1cddc:	bne	14fc8 <main@@Base+0x1ce8>
   1cde0:	b	15084 <main@@Base+0x1da4>
   1cde4:	cmp	r0, #34	; 0x22
   1cde8:	bne	15104 <main@@Base+0x1e24>
   1cdec:	add	r1, r8, #17
   1cdf0:	sub	r0, r6, r1
   1cdf4:	cmp	r0, #2
   1cdf8:	blt	150b0 <main@@Base+0x1dd0>
   1cdfc:	ldrb	r0, [r1]
   1ce00:	cmp	r0, #32
   1ce04:	bls	1509c <main@@Base+0x1dbc>
   1ce08:	mov	r7, r1
   1ce0c:	cmp	r7, r6
   1ce10:	bne	150c8 <main@@Base+0x1de8>
   1ce14:	b	15184 <main@@Base+0x1ea4>
   1ce18:	bne	1ce2c <main@@Base+0x9b4c>
   1ce1c:	mov	r7, r1
   1ce20:	ldrb	r0, [r7, #1]!
   1ce24:	cmp	r0, #32
   1ce28:	bhi	1ce3c <main@@Base+0x9b5c>
   1ce2c:	mov	r0, sl
   1ce30:	mov	r2, r6
   1ce34:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1ce38:	mov	r7, r0
   1ce3c:	cmp	r7, r6
   1ce40:	beq	1cef8 <main@@Base+0x9c18>
   1ce44:	ldrb	r0, [r7]
   1ce48:	cmp	r0, #58	; 0x3a
   1ce4c:	bne	1cef8 <main@@Base+0x9c18>
   1ce50:	add	r1, r7, #1
   1ce54:	sub	r0, r6, r1
   1ce58:	cmp	r0, #2
   1ce5c:	blt	151c4 <main@@Base+0x1ee4>
   1ce60:	ldrb	r0, [r1]
   1ce64:	cmp	r0, #32
   1ce68:	bls	151b4 <main@@Base+0x1ed4>
   1ce6c:	mov	r7, r1
   1ce70:	cmp	r9, r7
   1ce74:	bne	151dc <main@@Base+0x1efc>
   1ce78:	add	r4, r8, #16
   1ce7c:	mov	r1, #8
   1ce80:	mov	r2, #-268435456	; 0xf0000000
   1ce84:	sub	r0, r6, r4
   1ce88:	cmp	r0, #8
   1ce8c:	movcc	r1, r0
   1ce90:	add	r1, r2, r1, lsl #28
   1ce94:	asr	r1, r1, #28
   1ce98:	cmp	r1, #0
   1ce9c:	blt	19490 <main@@Base+0x61b0>
   1cea0:	ldrb	r1, [r4]
   1cea4:	cmp	r1, #97	; 0x61
   1cea8:	bne	19490 <main@@Base+0x61b0>
   1ceac:	cmp	r0, #2
   1ceb0:	blt	19490 <main@@Base+0x61b0>
   1ceb4:	ldr	r2, [sp, #40]	; 0x28
   1ceb8:	mov	r1, r8
   1cebc:	ldrb	r0, [r1, #17]!
   1cec0:	ldr	r2, [r2]
   1cec4:	cmp	r2, #0
   1cec8:	beq	1d140 <main@@Base+0x9e60>
   1cecc:	cmp	r0, #33	; 0x21
   1ced0:	bcc	1cedc <main@@Base+0x9bfc>
   1ced4:	cmp	r0, #58	; 0x3a
   1ced8:	bne	19490 <main@@Base+0x61b0>
   1cedc:	ldr	r0, [sp, #40]	; 0x28
   1cee0:	mov	r2, #0
   1cee4:	str	r2, [r0]
   1cee8:	sub	r0, r6, r1
   1ceec:	cmp	r0, #2
   1cef0:	bge	1d158 <main@@Base+0x9e78>
   1cef4:	b	15360 <main@@Base+0x2080>
   1cef8:	mov	r0, sl
   1cefc:	mov	r1, r7
   1cf00:	mov	r2, r6
   1cf04:	mov	r3, #4
   1cf08:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1cf0c:	b	151d0 <main@@Base+0x1ef0>
   1cf10:	bne	1cf20 <main@@Base+0x9c40>
   1cf14:	ldrb	r0, [r1, #2]!
   1cf18:	cmp	r0, #32
   1cf1c:	bhi	1cf34 <main@@Base+0x9c54>
   1cf20:	mov	r1, r2
   1cf24:	mov	r0, sl
   1cf28:	mov	r2, r6
   1cf2c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1cf30:	mov	r1, r0
   1cf34:	cmp	r8, r1
   1cf38:	beq	1db14 <main@@Base+0xa834>
   1cf3c:	mov	r0, sl
   1cf40:	mov	r2, r6
   1cf44:	add	r3, sp, #60	; 0x3c
   1cf48:	bl	13358 <main@@Base+0x78>
   1cf4c:	mov	r4, r0
   1cf50:	ldr	r0, [sp, #60]	; 0x3c
   1cf54:	cmp	r0, #0
   1cf58:	beq	13398 <main@@Base+0xb8>
   1cf5c:	ldr	r0, [sl]
   1cf60:	mov	r1, #12
   1cf64:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   1cf68:	cmp	r0, #0
   1cf6c:	bne	1d208 <main@@Base+0x9f28>
   1cf70:	b	13398 <main@@Base+0xb8>
   1cf74:	bne	1cf84 <main@@Base+0x9ca4>
   1cf78:	ldrb	r0, [r7, #2]!
   1cf7c:	cmp	r0, #32
   1cf80:	bhi	1cf94 <main@@Base+0x9cb4>
   1cf84:	mov	r0, sl
   1cf88:	mov	r2, r6
   1cf8c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1cf90:	mov	r7, r0
   1cf94:	cmp	r8, r7
   1cf98:	beq	1db14 <main@@Base+0xa834>
   1cf9c:	mov	r2, r6
   1cfa0:	mov	r6, #0
   1cfa4:	cmp	r7, r2
   1cfa8:	str	r6, [fp, #-52]	; 0xffffffcc
   1cfac:	str	r6, [fp, #-56]	; 0xffffffc8
   1cfb0:	strb	r6, [fp, #-60]	; 0xffffffc4
   1cfb4:	str	r6, [sp, #64]	; 0x40
   1cfb8:	beq	1d01c <main@@Base+0x9d3c>
   1cfbc:	sub	r0, fp, #56	; 0x38
   1cfc0:	mov	r1, r7
   1cfc4:	add	r3, sp, #64	; 0x40
   1cfc8:	mov	r8, r2
   1cfcc:	str	r0, [sp]
   1cfd0:	mov	r0, sl
   1cfd4:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1cfd8:	ldr	r5, [sp, #48]	; 0x30
   1cfdc:	cmp	r0, r7
   1cfe0:	beq	1d034 <main@@Base+0x9d54>
   1cfe4:	ldr	r2, [sp, #64]	; 0x40
   1cfe8:	mov	r4, r0
   1cfec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cff0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1cff4:	cmp	r2, #0
   1cff8:	beq	1d044 <main@@Base+0x9d64>
   1cffc:	subs	r2, r0, #129	; 0x81
   1d000:	sbcs	r1, r1, #0
   1d004:	bcc	1d074 <main@@Base+0x9d94>
   1d008:	mov	r0, sl
   1d00c:	mov	r1, r4
   1d010:	mov	r2, r8
   1d014:	mov	r3, #8
   1d018:	b	1d060 <main@@Base+0x9d80>
   1d01c:	ldr	r5, [sp, #48]	; 0x30
   1d020:	mov	r8, r2
   1d024:	mov	r4, r2
   1d028:	cmp	r7, r4
   1d02c:	bne	1d0d4 <main@@Base+0x9df4>
   1d030:	b	1d098 <main@@Base+0x9db8>
   1d034:	mov	r4, r7
   1d038:	cmp	r7, r4
   1d03c:	bne	1d0d4 <main@@Base+0x9df4>
   1d040:	b	1d098 <main@@Base+0x9db8>
   1d044:	subs	r2, r0, #128	; 0x80
   1d048:	sbcs	r1, r1, #0
   1d04c:	bcc	1d088 <main@@Base+0x9da8>
   1d050:	mov	r0, sl
   1d054:	mov	r1, r4
   1d058:	mov	r2, r8
   1d05c:	mov	r3, #7
   1d060:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d064:	mov	r4, r0
   1d068:	cmp	r7, r4
   1d06c:	bne	1d0d4 <main@@Base+0x9df4>
   1d070:	b	1d098 <main@@Base+0x9db8>
   1d074:	rsb	r6, r0, #0
   1d078:	strb	r6, [fp, #-60]	; 0xffffffc4
   1d07c:	cmp	r7, r4
   1d080:	bne	1d0d4 <main@@Base+0x9df4>
   1d084:	b	1d098 <main@@Base+0x9db8>
   1d088:	mov	r6, r0
   1d08c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1d090:	cmp	r7, r4
   1d094:	bne	1d0d4 <main@@Base+0x9df4>
   1d098:	ldr	r3, [sp, #28]
   1d09c:	sub	r0, fp, #60	; 0x3c
   1d0a0:	mov	r1, r7
   1d0a4:	mov	r2, r8
   1d0a8:	mov	r6, r8
   1d0ac:	str	r0, [sp]
   1d0b0:	mov	r0, sl
   1d0b4:	bl	1f288 <main@@Base+0xbfa8>
   1d0b8:	mov	r4, r0
   1d0bc:	cmp	r0, r7
   1d0c0:	beq	13398 <main@@Base+0xb8>
   1d0c4:	mov	r8, r6
   1d0c8:	cmp	r4, r6
   1d0cc:	beq	1dc9c <main@@Base+0xa9bc>
   1d0d0:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1d0d4:	uxtb	r0, r6
   1d0d8:	cmp	r0, #8
   1d0dc:	ldrbeq	r0, [sl, #8]
   1d0e0:	tsteq	r0, #2
   1d0e4:	beq	15d28 <main@@Base+0x2a48>
   1d0e8:	ldr	r0, [sl]
   1d0ec:	mov	r1, #6
   1d0f0:	b	13a7c <main@@Base+0x79c>
   1d0f4:	mov	r0, sl
   1d0f8:	mov	r1, r4
   1d0fc:	mov	r2, r6
   1d100:	mov	r3, #9
   1d104:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d108:	b	1c8e4 <main@@Base+0x9604>
   1d10c:	cmp	r0, #34	; 0x22
   1d110:	bne	1882c <main@@Base+0x554c>
   1d114:	add	r1, r8, #18
   1d118:	sub	r0, r6, r1
   1d11c:	cmp	r0, #2
   1d120:	blt	152dc <main@@Base+0x1ffc>
   1d124:	ldrb	r0, [r1]
   1d128:	cmp	r0, #32
   1d12c:	bls	152c8 <main@@Base+0x1fe8>
   1d130:	mov	r4, r1
   1d134:	cmp	r4, r6
   1d138:	bne	152f4 <main@@Base+0x2014>
   1d13c:	b	15334 <main@@Base+0x2054>
   1d140:	cmp	r0, #34	; 0x22
   1d144:	bne	19490 <main@@Base+0x61b0>
   1d148:	add	r1, r8, #18
   1d14c:	sub	r0, r6, r1
   1d150:	cmp	r0, #2
   1d154:	blt	15360 <main@@Base+0x2080>
   1d158:	ldrb	r0, [r1]
   1d15c:	cmp	r0, #32
   1d160:	bls	1534c <main@@Base+0x206c>
   1d164:	mov	r7, r1
   1d168:	cmp	r7, r6
   1d16c:	bne	15378 <main@@Base+0x2098>
   1d170:	b	153b8 <main@@Base+0x20d8>
   1d174:	cmp	r0, #34	; 0x22
   1d178:	bne	16f14 <main@@Base+0x3c34>
   1d17c:	add	r1, r8, #16
   1d180:	sub	r0, r6, r1
   1d184:	cmp	r0, #2
   1d188:	blt	15728 <main@@Base+0x2448>
   1d18c:	ldrb	r0, [r1]
   1d190:	cmp	r0, #32
   1d194:	bls	15714 <main@@Base+0x2434>
   1d198:	mov	r4, r1
   1d19c:	cmp	r4, r6
   1d1a0:	bne	15740 <main@@Base+0x2460>
   1d1a4:	b	15780 <main@@Base+0x24a0>
   1d1a8:	bne	1d1b8 <main@@Base+0x9ed8>
   1d1ac:	ldrb	r0, [r1, #2]!
   1d1b0:	cmp	r0, #32
   1d1b4:	bhi	1d1cc <main@@Base+0x9eec>
   1d1b8:	mov	r1, r2
   1d1bc:	mov	r0, sl
   1d1c0:	mov	r2, r6
   1d1c4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d1c8:	mov	r1, r0
   1d1cc:	cmp	r8, r1
   1d1d0:	beq	1db14 <main@@Base+0xa834>
   1d1d4:	mov	r0, sl
   1d1d8:	mov	r2, r6
   1d1dc:	add	r3, sp, #60	; 0x3c
   1d1e0:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   1d1e4:	mov	r4, r0
   1d1e8:	ldr	r0, [sp, #60]	; 0x3c
   1d1ec:	cmp	r0, #0
   1d1f0:	beq	13398 <main@@Base+0xb8>
   1d1f4:	ldr	r0, [sl]
   1d1f8:	mov	r1, #3
   1d1fc:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   1d200:	cmp	r0, #0
   1d204:	beq	13398 <main@@Base+0xb8>
   1d208:	ldr	r1, [sp, #60]	; 0x3c
   1d20c:	str	r1, [r0]
   1d210:	b	1db28 <main@@Base+0xa848>
   1d214:	bne	1d224 <main@@Base+0x9f44>
   1d218:	ldrb	r0, [r4, #2]!
   1d21c:	cmp	r0, #32
   1d220:	bhi	1d234 <main@@Base+0x9f54>
   1d224:	mov	r0, sl
   1d228:	mov	r2, r6
   1d22c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d230:	mov	r4, r0
   1d234:	cmp	r8, r4
   1d238:	beq	1db14 <main@@Base+0xa834>
   1d23c:	ldr	r0, [sl]
   1d240:	mov	r1, #1
   1d244:	mov	r2, #1
   1d248:	mvn	r3, #0
   1d24c:	bl	2caac <flatcc_builder_start_vector@@Base>
   1d250:	cmp	r0, #0
   1d254:	bne	13398 <main@@Base+0xb8>
   1d258:	cmp	r4, r6
   1d25c:	beq	1d2a0 <main@@Base+0x9fc0>
   1d260:	ldrb	r0, [r4]
   1d264:	cmp	r0, #91	; 0x5b
   1d268:	bne	1d2a0 <main@@Base+0x9fc0>
   1d26c:	ldr	r5, [sp, #48]	; 0x30
   1d270:	add	r1, r4, #1
   1d274:	sub	r0, r6, r1
   1d278:	cmp	r0, #2
   1d27c:	blt	1d30c <main@@Base+0xa02c>
   1d280:	ldrb	r0, [r1]
   1d284:	cmp	r0, #32
   1d288:	bls	1d2fc <main@@Base+0xa01c>
   1d28c:	mov	r4, r1
   1d290:	cmp	r4, r6
   1d294:	mov	r8, r6
   1d298:	bne	1d328 <main@@Base+0xa048>
   1d29c:	b	1d350 <main@@Base+0xa070>
   1d2a0:	mov	r0, sl
   1d2a4:	mov	r1, r4
   1d2a8:	mov	r2, r6
   1d2ac:	mov	r3, #22
   1d2b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d2b4:	ldr	r5, [sp, #48]	; 0x30
   1d2b8:	mov	r4, r0
   1d2bc:	ldr	r0, [sl]
   1d2c0:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   1d2c4:	cmp	r0, #0
   1d2c8:	str	r0, [sp, #60]	; 0x3c
   1d2cc:	beq	13398 <main@@Base+0xb8>
   1d2d0:	ldr	r0, [sl]
   1d2d4:	mov	r1, #30
   1d2d8:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   1d2dc:	cmp	r0, #0
   1d2e0:	beq	13398 <main@@Base+0xb8>
   1d2e4:	ldr	r1, [sp, #60]	; 0x3c
   1d2e8:	str	r1, [r0]
   1d2ec:	sub	r0, r6, r4
   1d2f0:	cmp	r0, #2
   1d2f4:	bge	1db38 <main@@Base+0xa858>
   1d2f8:	b	15d38 <main@@Base+0x2a58>
   1d2fc:	bne	1d30c <main@@Base+0xa02c>
   1d300:	ldrb	r0, [r4, #2]!
   1d304:	cmp	r0, #32
   1d308:	bhi	1d31c <main@@Base+0xa03c>
   1d30c:	mov	r0, sl
   1d310:	mov	r2, r6
   1d314:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d318:	mov	r4, r0
   1d31c:	cmp	r4, r6
   1d320:	mov	r8, r6
   1d324:	beq	1d350 <main@@Base+0xa070>
   1d328:	ldrb	r0, [r4]
   1d32c:	cmp	r0, #93	; 0x5d
   1d330:	bne	1d34c <main@@Base+0xa06c>
   1d334:	add	r1, r4, #1
   1d338:	mov	r6, r8
   1d33c:	sub	r0, r8, r1
   1d340:	cmp	r0, #2
   1d344:	blt	1d5b0 <main@@Base+0xa2d0>
   1d348:	b	1d58c <main@@Base+0xa2ac>
   1d34c:	mov	r6, r4
   1d350:	mov	r0, #0
   1d354:	mov	r1, #1
   1d358:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d35c:	ldr	r0, [sl]
   1d360:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   1d364:	cmp	r0, #0
   1d368:	beq	1dcb0 <main@@Base+0xa9d0>
   1d36c:	mov	r7, r0
   1d370:	mov	r4, r6
   1d374:	mov	r6, #0
   1d378:	mov	r2, r8
   1d37c:	cmp	r4, r8
   1d380:	str	r6, [fp, #-52]	; 0xffffffcc
   1d384:	str	r6, [fp, #-56]	; 0xffffffc8
   1d388:	strb	r6, [fp, #-60]	; 0xffffffc4
   1d38c:	str	r6, [sp, #64]	; 0x40
   1d390:	beq	1d3e4 <main@@Base+0xa104>
   1d394:	sub	r0, fp, #56	; 0x38
   1d398:	mov	r1, r4
   1d39c:	add	r3, sp, #64	; 0x40
   1d3a0:	str	r0, [sp]
   1d3a4:	mov	r0, sl
   1d3a8:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1d3ac:	cmp	r0, r4
   1d3b0:	beq	1d3f4 <main@@Base+0xa114>
   1d3b4:	mov	r1, r0
   1d3b8:	ldr	r0, [sp, #64]	; 0x40
   1d3bc:	cmp	r0, #0
   1d3c0:	beq	1d404 <main@@Base+0xa124>
   1d3c4:	mov	r0, sl
   1d3c8:	mov	r2, r8
   1d3cc:	mov	r3, #8
   1d3d0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d3d4:	mov	r1, r0
   1d3d8:	cmp	r4, r1
   1d3dc:	bne	1d480 <main@@Base+0xa1a0>
   1d3e0:	b	1d448 <main@@Base+0xa168>
   1d3e4:	mov	r1, r2
   1d3e8:	cmp	r4, r1
   1d3ec:	bne	1d480 <main@@Base+0xa1a0>
   1d3f0:	b	1d448 <main@@Base+0xa168>
   1d3f4:	mov	r1, r4
   1d3f8:	cmp	r4, r1
   1d3fc:	bne	1d480 <main@@Base+0xa1a0>
   1d400:	b	1d448 <main@@Base+0xa168>
   1d404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d408:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d40c:	subs	r3, r0, #256	; 0x100
   1d410:	sbcs	r2, r2, #0
   1d414:	bcc	1d438 <main@@Base+0xa158>
   1d418:	mov	r0, sl
   1d41c:	mov	r2, r8
   1d420:	mov	r3, #7
   1d424:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d428:	mov	r1, r0
   1d42c:	cmp	r4, r1
   1d430:	bne	1d480 <main@@Base+0xa1a0>
   1d434:	b	1d448 <main@@Base+0xa168>
   1d438:	mov	r6, r0
   1d43c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d440:	cmp	r4, r1
   1d444:	bne	1d480 <main@@Base+0xa1a0>
   1d448:	movw	r3, #32912	; 0x8090
   1d44c:	sub	r0, fp, #60	; 0x3c
   1d450:	mov	r1, r4
   1d454:	mov	r2, r8
   1d458:	mov	r6, r8
   1d45c:	str	r0, [sp]
   1d460:	mov	r0, sl
   1d464:	movt	r3, #4
   1d468:	bl	1f518 <main@@Base+0xc238>
   1d46c:	mov	r1, r0
   1d470:	cmp	r0, r4
   1d474:	cmpne	r1, r6
   1d478:	beq	1dca4 <main@@Base+0xa9c4>
   1d47c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1d480:	sub	r0, r8, r1
   1d484:	strb	r6, [r7]
   1d488:	mov	r6, r8
   1d48c:	cmp	r0, #2
   1d490:	blt	1d4c4 <main@@Base+0xa1e4>
   1d494:	ldrb	r0, [r1]
   1d498:	cmp	r0, #32
   1d49c:	bls	1d4b0 <main@@Base+0xa1d0>
   1d4a0:	mov	r4, r1
   1d4a4:	cmp	r4, r6
   1d4a8:	bne	1d4dc <main@@Base+0xa1fc>
   1d4ac:	b	1d56c <main@@Base+0xa28c>
   1d4b0:	bne	1d4c4 <main@@Base+0xa1e4>
   1d4b4:	mov	r4, r1
   1d4b8:	ldrb	r0, [r4, #1]!
   1d4bc:	cmp	r0, #32
   1d4c0:	bhi	1d4d4 <main@@Base+0xa1f4>
   1d4c4:	mov	r0, sl
   1d4c8:	mov	r2, r6
   1d4cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d4d0:	mov	r4, r0
   1d4d4:	cmp	r4, r6
   1d4d8:	beq	1d56c <main@@Base+0xa28c>
   1d4dc:	ldrb	r0, [r4]
   1d4e0:	cmp	r0, #44	; 0x2c
   1d4e4:	bne	1d574 <main@@Base+0xa294>
   1d4e8:	add	r1, r4, #1
   1d4ec:	sub	r0, r6, r1
   1d4f0:	cmp	r0, #2
   1d4f4:	blt	1d524 <main@@Base+0xa244>
   1d4f8:	ldrb	r0, [r1]
   1d4fc:	cmp	r0, #32
   1d500:	bls	1d514 <main@@Base+0xa234>
   1d504:	mov	r4, r1
   1d508:	cmp	r4, r6
   1d50c:	bne	1d53c <main@@Base+0xa25c>
   1d510:	b	1d5c0 <main@@Base+0xa2e0>
   1d514:	bne	1d524 <main@@Base+0xa244>
   1d518:	ldrb	r0, [r4, #2]!
   1d51c:	cmp	r0, #32
   1d520:	bhi	1d534 <main@@Base+0xa254>
   1d524:	mov	r0, sl
   1d528:	mov	r2, r6
   1d52c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d530:	mov	r4, r0
   1d534:	cmp	r4, r6
   1d538:	beq	1d5c0 <main@@Base+0xa2e0>
   1d53c:	ldrb	r0, [r4]
   1d540:	cmp	r0, #93	; 0x5d
   1d544:	beq	1d57c <main@@Base+0xa29c>
   1d548:	mov	r0, #0
   1d54c:	mov	r1, #1
   1d550:	strb	r0, [fp, #-60]	; 0xffffffc4
   1d554:	ldr	r0, [sl]
   1d558:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   1d55c:	mov	r7, r0
   1d560:	cmp	r0, #0
   1d564:	bne	1d374 <main@@Base+0xa094>
   1d568:	b	1dc9c <main@@Base+0xa9bc>
   1d56c:	mov	r4, r6
   1d570:	b	1d2bc <main@@Base+0x9fdc>
   1d574:	cmp	r0, #93	; 0x5d
   1d578:	bne	13b3c <main@@Base+0x85c>
   1d57c:	add	r1, r4, #1
   1d580:	sub	r0, r6, r1
   1d584:	cmp	r0, #2
   1d588:	blt	1d5b0 <main@@Base+0xa2d0>
   1d58c:	ldrb	r0, [r1]
   1d590:	cmp	r0, #32
   1d594:	bls	1d5a0 <main@@Base+0xa2c0>
   1d598:	mov	r4, r1
   1d59c:	b	1d2bc <main@@Base+0x9fdc>
   1d5a0:	bne	1d5b0 <main@@Base+0xa2d0>
   1d5a4:	ldrb	r0, [r4, #2]!
   1d5a8:	cmp	r0, #32
   1d5ac:	bhi	1d2bc <main@@Base+0x9fdc>
   1d5b0:	mov	r0, sl
   1d5b4:	mov	r2, r6
   1d5b8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d5bc:	b	1d2b8 <main@@Base+0x9fd8>
   1d5c0:	mov	r0, sl
   1d5c4:	mov	r1, r6
   1d5c8:	b	13b44 <main@@Base+0x864>
   1d5cc:	bne	1d5dc <main@@Base+0xa2fc>
   1d5d0:	ldrb	r0, [r1, #2]!
   1d5d4:	cmp	r0, #32
   1d5d8:	bhi	1d5f0 <main@@Base+0xa310>
   1d5dc:	ldr	r0, [sp, #44]	; 0x2c
   1d5e0:	mov	r1, r2
   1d5e4:	mov	r2, r5
   1d5e8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d5ec:	mov	r1, r0
   1d5f0:	cmp	r8, r1
   1d5f4:	beq	1c480 <main@@Base+0x91a0>
   1d5f8:	ldr	r0, [sp, #56]	; 0x38
   1d5fc:	ldr	sl, [sp, #44]	; 0x2c
   1d600:	mov	r2, #8
   1d604:	mov	r3, #0
   1d608:	mov	r6, r5
   1d60c:	str	r2, [sp]
   1d610:	mov	r2, r5
   1d614:	str	r0, [sp, #4]
   1d618:	movw	r0, #632	; 0x278
   1d61c:	movt	r0, #2
   1d620:	str	r0, [sp, #8]
   1d624:	mov	r0, sl
   1d628:	bl	330a4 <flatcc_json_parser_union@@Base>
   1d62c:	b	1db24 <main@@Base+0xa844>
   1d630:	bne	1d644 <main@@Base+0xa364>
   1d634:	ldrb	r0, [r4, #2]!
   1d638:	cmp	r0, #32
   1d63c:	mov	r7, r4
   1d640:	bhi	1c8e8 <main@@Base+0x9608>
   1d644:	mov	r0, sl
   1d648:	mov	r2, r6
   1d64c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d650:	b	1c8e4 <main@@Base+0x9604>
   1d654:	cmp	r0, #34	; 0x22
   1d658:	bne	1882c <main@@Base+0x554c>
   1d65c:	add	r1, r8, #21
   1d660:	sub	r0, r6, r1
   1d664:	cmp	r0, #2
   1d668:	blt	157ac <main@@Base+0x24cc>
   1d66c:	ldrb	r0, [r1]
   1d670:	cmp	r0, #32
   1d674:	bls	15798 <main@@Base+0x24b8>
   1d678:	mov	r4, r1
   1d67c:	cmp	r4, r6
   1d680:	bne	157c4 <main@@Base+0x24e4>
   1d684:	b	15804 <main@@Base+0x2524>
   1d688:	bne	1d69c <main@@Base+0xa3bc>
   1d68c:	mov	r4, r1
   1d690:	ldrb	r0, [r4, #1]!
   1d694:	cmp	r0, #32
   1d698:	bhi	1d6ac <main@@Base+0xa3cc>
   1d69c:	mov	r0, sl
   1d6a0:	mov	r2, r6
   1d6a4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d6a8:	mov	r4, r0
   1d6ac:	cmp	r4, r6
   1d6b0:	beq	1d6ec <main@@Base+0xa40c>
   1d6b4:	ldrb	r0, [r4]
   1d6b8:	cmp	r0, #58	; 0x3a
   1d6bc:	bne	1d6ec <main@@Base+0xa40c>
   1d6c0:	add	r1, r4, #1
   1d6c4:	sub	r0, r6, r1
   1d6c8:	cmp	r0, #2
   1d6cc:	blt	1582c <main@@Base+0x254c>
   1d6d0:	ldrb	r0, [r1]
   1d6d4:	cmp	r0, #32
   1d6d8:	bls	1581c <main@@Base+0x253c>
   1d6dc:	mov	r4, r1
   1d6e0:	cmp	r7, r4
   1d6e4:	bne	15844 <main@@Base+0x2564>
   1d6e8:	b	1882c <main@@Base+0x554c>
   1d6ec:	mov	r0, sl
   1d6f0:	mov	r1, r4
   1d6f4:	mov	r2, r6
   1d6f8:	mov	r3, #4
   1d6fc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d700:	b	15838 <main@@Base+0x2558>
   1d704:	bne	1d718 <main@@Base+0xa438>
   1d708:	mov	r4, r1
   1d70c:	ldrb	r0, [r4, #1]!
   1d710:	cmp	r0, #32
   1d714:	bhi	1d728 <main@@Base+0xa448>
   1d718:	mov	r0, sl
   1d71c:	mov	r2, r6
   1d720:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d724:	mov	r4, r0
   1d728:	cmp	r4, r6
   1d72c:	beq	1d768 <main@@Base+0xa488>
   1d730:	ldrb	r0, [r4]
   1d734:	cmp	r0, #58	; 0x3a
   1d738:	bne	1d768 <main@@Base+0xa488>
   1d73c:	add	r1, r4, #1
   1d740:	sub	r0, r6, r1
   1d744:	cmp	r0, #2
   1d748:	blt	15998 <main@@Base+0x26b8>
   1d74c:	ldrb	r0, [r1]
   1d750:	cmp	r0, #32
   1d754:	bls	15988 <main@@Base+0x26a8>
   1d758:	mov	r4, r1
   1d75c:	cmp	r7, r4
   1d760:	bne	159b0 <main@@Base+0x26d0>
   1d764:	b	1882c <main@@Base+0x554c>
   1d768:	mov	r0, sl
   1d76c:	mov	r1, r4
   1d770:	mov	r2, r6
   1d774:	mov	r3, #4
   1d778:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d77c:	b	159a4 <main@@Base+0x26c4>
   1d780:	bne	1d794 <main@@Base+0xa4b4>
   1d784:	mov	r7, r1
   1d788:	ldrb	r0, [r7, #1]!
   1d78c:	cmp	r0, #32
   1d790:	bhi	1d7a4 <main@@Base+0xa4c4>
   1d794:	mov	r0, sl
   1d798:	mov	r2, r6
   1d79c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d7a0:	mov	r7, r0
   1d7a4:	cmp	r7, r6
   1d7a8:	beq	1d7e4 <main@@Base+0xa504>
   1d7ac:	ldrb	r0, [r7]
   1d7b0:	cmp	r0, #58	; 0x3a
   1d7b4:	bne	1d7e4 <main@@Base+0xa504>
   1d7b8:	add	r1, r7, #1
   1d7bc:	sub	r0, r6, r1
   1d7c0:	cmp	r0, #2
   1d7c4:	blt	15a5c <main@@Base+0x277c>
   1d7c8:	ldrb	r0, [r1]
   1d7cc:	cmp	r0, #32
   1d7d0:	bls	15a4c <main@@Base+0x276c>
   1d7d4:	mov	r7, r1
   1d7d8:	cmp	r9, r7
   1d7dc:	bne	15a74 <main@@Base+0x2794>
   1d7e0:	b	16f14 <main@@Base+0x3c34>
   1d7e4:	mov	r0, sl
   1d7e8:	mov	r1, r7
   1d7ec:	mov	r2, r6
   1d7f0:	mov	r3, #4
   1d7f4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d7f8:	b	15a68 <main@@Base+0x2788>
   1d7fc:	bne	1d810 <main@@Base+0xa530>
   1d800:	mov	r7, r1
   1d804:	ldrb	r0, [r7, #1]!
   1d808:	cmp	r0, #32
   1d80c:	bhi	1d820 <main@@Base+0xa540>
   1d810:	mov	r0, sl
   1d814:	mov	r2, r6
   1d818:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d81c:	mov	r7, r0
   1d820:	cmp	r7, r6
   1d824:	beq	1d860 <main@@Base+0xa580>
   1d828:	ldrb	r0, [r7]
   1d82c:	cmp	r0, #58	; 0x3a
   1d830:	bne	1d860 <main@@Base+0xa580>
   1d834:	add	r1, r7, #1
   1d838:	sub	r0, r6, r1
   1d83c:	cmp	r0, #2
   1d840:	blt	15b9c <main@@Base+0x28bc>
   1d844:	ldrb	r0, [r1]
   1d848:	cmp	r0, #32
   1d84c:	bls	15b8c <main@@Base+0x28ac>
   1d850:	mov	r7, r1
   1d854:	cmp	r8, r7
   1d858:	bne	15bb4 <main@@Base+0x28d4>
   1d85c:	b	1db14 <main@@Base+0xa834>
   1d860:	mov	r0, sl
   1d864:	mov	r1, r7
   1d868:	mov	r2, r6
   1d86c:	mov	r3, #4
   1d870:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d874:	b	15ba8 <main@@Base+0x28c8>
   1d878:	bne	1d88c <main@@Base+0xa5ac>
   1d87c:	mov	r7, r1
   1d880:	ldrb	r0, [r7, #1]!
   1d884:	cmp	r0, #32
   1d888:	bhi	1d89c <main@@Base+0xa5bc>
   1d88c:	mov	r0, sl
   1d890:	mov	r2, r6
   1d894:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d898:	mov	r7, r0
   1d89c:	cmp	r7, r6
   1d8a0:	beq	1d8dc <main@@Base+0xa5fc>
   1d8a4:	ldrb	r0, [r7]
   1d8a8:	cmp	r0, #58	; 0x3a
   1d8ac:	bne	1d8dc <main@@Base+0xa5fc>
   1d8b0:	add	r1, r7, #1
   1d8b4:	sub	r0, r6, r1
   1d8b8:	cmp	r0, #2
   1d8bc:	blt	15d68 <main@@Base+0x2a88>
   1d8c0:	ldrb	r0, [r1]
   1d8c4:	cmp	r0, #32
   1d8c8:	bls	15d58 <main@@Base+0x2a78>
   1d8cc:	mov	r7, r1
   1d8d0:	cmp	r8, r7
   1d8d4:	bne	15d80 <main@@Base+0x2aa0>
   1d8d8:	b	1db14 <main@@Base+0xa834>
   1d8dc:	mov	r0, sl
   1d8e0:	mov	r1, r7
   1d8e4:	mov	r2, r6
   1d8e8:	mov	r3, #4
   1d8ec:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d8f0:	b	15d74 <main@@Base+0x2a94>
   1d8f4:	bne	1d908 <main@@Base+0xa628>
   1d8f8:	mov	r7, r1
   1d8fc:	ldrb	r0, [r7, #1]!
   1d900:	cmp	r0, #32
   1d904:	bhi	1d918 <main@@Base+0xa638>
   1d908:	mov	r0, sl
   1d90c:	mov	r2, r6
   1d910:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1d914:	mov	r7, r0
   1d918:	cmp	r7, r6
   1d91c:	beq	1d9d4 <main@@Base+0xa6f4>
   1d920:	ldrb	r0, [r7]
   1d924:	cmp	r0, #58	; 0x3a
   1d928:	bne	1d9d4 <main@@Base+0xa6f4>
   1d92c:	add	r1, r7, #1
   1d930:	sub	r0, r6, r1
   1d934:	cmp	r0, #2
   1d938:	blt	15e18 <main@@Base+0x2b38>
   1d93c:	ldrb	r0, [r1]
   1d940:	cmp	r0, #32
   1d944:	bls	15e08 <main@@Base+0x2b28>
   1d948:	mov	r7, r1
   1d94c:	cmp	r9, r7
   1d950:	bne	15e30 <main@@Base+0x2b50>
   1d954:	add	r4, r8, #16
   1d958:	mov	r1, #8
   1d95c:	mov	r2, #-268435456	; 0xf0000000
   1d960:	sub	r0, r6, r4
   1d964:	cmp	r0, #8
   1d968:	movcc	r1, r0
   1d96c:	add	r1, r2, r1, lsl #28
   1d970:	asr	r1, r1, #28
   1d974:	cmp	r1, #0
   1d978:	blt	19490 <main@@Base+0x61b0>
   1d97c:	ldrb	r1, [r4]
   1d980:	cmp	r1, #97	; 0x61
   1d984:	bne	19490 <main@@Base+0x61b0>
   1d988:	cmp	r0, #2
   1d98c:	blt	19490 <main@@Base+0x61b0>
   1d990:	ldr	r2, [sp, #40]	; 0x28
   1d994:	mov	r1, r8
   1d998:	ldrb	r0, [r1, #17]!
   1d99c:	ldr	r2, [r2]
   1d9a0:	cmp	r2, #0
   1d9a4:	beq	13ca4 <main@@Base+0x9c4>
   1d9a8:	cmp	r0, #33	; 0x21
   1d9ac:	bcc	1d9b8 <main@@Base+0xa6d8>
   1d9b0:	cmp	r0, #58	; 0x3a
   1d9b4:	bne	19490 <main@@Base+0x61b0>
   1d9b8:	ldr	r0, [sp, #40]	; 0x28
   1d9bc:	mov	r2, #0
   1d9c0:	str	r2, [r0]
   1d9c4:	sub	r0, r6, r1
   1d9c8:	cmp	r0, #2
   1d9cc:	bge	13cbc <main@@Base+0x9dc>
   1d9d0:	b	1612c <main@@Base+0x2e4c>
   1d9d4:	mov	r0, sl
   1d9d8:	mov	r1, r7
   1d9dc:	mov	r2, r6
   1d9e0:	mov	r3, #4
   1d9e4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1d9e8:	b	15e24 <main@@Base+0x2b44>
   1d9ec:	bne	1d9fc <main@@Base+0xa71c>
   1d9f0:	ldrb	r0, [r7, #2]!
   1d9f4:	cmp	r0, #32
   1d9f8:	bhi	1da0c <main@@Base+0xa72c>
   1d9fc:	ldr	r0, [sp, #44]	; 0x2c
   1da00:	mov	r2, r6
   1da04:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1da08:	mov	r7, r0
   1da0c:	cmp	r8, r7
   1da10:	beq	1da78 <main@@Base+0xa798>
   1da14:	ldr	sl, [sp, #44]	; 0x2c
   1da18:	mov	r1, #4
   1da1c:	mov	r2, #2
   1da20:	mvn	r3, #-1073741824	; 0xc0000000
   1da24:	ldr	r0, [sl]
   1da28:	bl	2caac <flatcc_builder_start_vector@@Base>
   1da2c:	cmp	r0, #0
   1da30:	bne	1dc94 <main@@Base+0xa9b4>
   1da34:	cmp	r7, r6
   1da38:	beq	1359c <main@@Base+0x2bc>
   1da3c:	ldrb	r0, [r7]
   1da40:	cmp	r0, #91	; 0x5b
   1da44:	bne	1359c <main@@Base+0x2bc>
   1da48:	add	r1, r7, #1
   1da4c:	sub	r0, r6, r1
   1da50:	cmp	r0, #2
   1da54:	blt	13640 <main@@Base+0x360>
   1da58:	ldrb	r0, [r1]
   1da5c:	cmp	r0, #32
   1da60:	bls	13630 <main@@Base+0x350>
   1da64:	mov	r7, r1
   1da68:	cmp	r7, r6
   1da6c:	mov	r4, r6
   1da70:	bne	1365c <main@@Base+0x37c>
   1da74:	b	136a0 <main@@Base+0x3c0>
   1da78:	movw	r0, #31088	; 0x7970
   1da7c:	movt	r0, #24436	; 0x5f74
   1da80:	eor	r0, sl, r0
   1da84:	orrs	r0, r0, r4
   1da88:	bne	1db10 <main@@Base+0xa830>
   1da8c:	add	r4, r8, #8
   1da90:	mov	r1, #8
   1da94:	mov	r2, #-268435456	; 0xf0000000
   1da98:	ldr	sl, [sp, #44]	; 0x2c
   1da9c:	sub	r0, r6, r4
   1daa0:	cmp	r0, #8
   1daa4:	movcc	r1, r0
   1daa8:	add	r1, r2, r1, lsl #28
   1daac:	asr	r1, r1, #28
   1dab0:	cmp	r1, #0
   1dab4:	blt	19490 <main@@Base+0x61b0>
   1dab8:	ldrb	r1, [r4]
   1dabc:	cmp	r1, #101	; 0x65
   1dac0:	bne	19490 <main@@Base+0x61b0>
   1dac4:	cmp	r0, #2
   1dac8:	blt	19490 <main@@Base+0x61b0>
   1dacc:	ldr	r2, [sp, #40]	; 0x28
   1dad0:	mov	r1, r8
   1dad4:	ldrb	r0, [r1, #9]!
   1dad8:	ldr	r2, [r2]
   1dadc:	cmp	r2, #0
   1dae0:	beq	135fc <main@@Base+0x31c>
   1dae4:	cmp	r0, #33	; 0x21
   1dae8:	bcc	1daf4 <main@@Base+0xa814>
   1daec:	cmp	r0, #58	; 0x3a
   1daf0:	bne	19490 <main@@Base+0x61b0>
   1daf4:	ldr	r0, [sp, #40]	; 0x28
   1daf8:	mov	r2, #0
   1dafc:	str	r2, [r0]
   1db00:	sub	r0, r6, r1
   1db04:	cmp	r0, #2
   1db08:	bge	13614 <main@@Base+0x334>
   1db0c:	b	13824 <main@@Base+0x544>
   1db10:	ldr	sl, [sp, #44]	; 0x2c
   1db14:	mov	r0, sl
   1db18:	mov	r1, r8
   1db1c:	mov	r2, r6
   1db20:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   1db24:	mov	r4, r0
   1db28:	ldr	r5, [sp, #48]	; 0x30
   1db2c:	sub	r0, r6, r4
   1db30:	cmp	r0, #2
   1db34:	blt	15d38 <main@@Base+0x2a58>
   1db38:	ldrb	r0, [r4]
   1db3c:	cmp	r0, #32
   1db40:	bls	1db94 <main@@Base+0xa8b4>
   1db44:	mov	r2, r4
   1db48:	cmp	r2, r6
   1db4c:	beq	1dbb0 <main@@Base+0xa8d0>
   1db50:	ldrb	r0, [r2]
   1db54:	cmp	r0, #44	; 0x2c
   1db58:	bne	1dbc8 <main@@Base+0xa8e8>
   1db5c:	add	r1, r2, #1
   1db60:	sub	r0, r6, r1
   1db64:	cmp	r0, #2
   1db68:	blt	13580 <main@@Base+0x2a0>
   1db6c:	ldrb	r0, [r1]
   1db70:	cmp	r0, #32
   1db74:	bls	13570 <main@@Base+0x290>
   1db78:	mov	r2, r1
   1db7c:	cmp	r2, r6
   1db80:	beq	1dbe4 <main@@Base+0xa904>
   1db84:	ldrb	r0, [r2]
   1db88:	cmp	r0, #125	; 0x7d
   1db8c:	bne	1a7d8 <main@@Base+0x74f8>
   1db90:	b	1dbf0 <main@@Base+0xa910>
   1db94:	bne	15d38 <main@@Base+0x2a58>
   1db98:	mov	r2, r4
   1db9c:	ldrb	r0, [r2, #1]!
   1dba0:	cmp	r0, #32
   1dba4:	bls	15d38 <main@@Base+0x2a58>
   1dba8:	cmp	r2, r6
   1dbac:	bne	1db50 <main@@Base+0xa870>
   1dbb0:	mov	r4, r6
   1dbb4:	ldr	r0, [sp, #36]	; 0x24
   1dbb8:	ldr	r0, [r0]
   1dbbc:	cmp	r0, #0
   1dbc0:	bne	13398 <main@@Base+0xb8>
   1dbc4:	b	13454 <main@@Base+0x174>
   1dbc8:	cmp	r0, #125	; 0x7d
   1dbcc:	bne	1dc68 <main@@Base+0xa988>
   1dbd0:	add	r4, r2, #1
   1dbd4:	sub	r0, r6, r4
   1dbd8:	cmp	r0, #2
   1dbdc:	blt	1dc34 <main@@Base+0xa954>
   1dbe0:	b	1dc00 <main@@Base+0xa920>
   1dbe4:	mov	r0, sl
   1dbe8:	mov	r1, r6
   1dbec:	b	1dc70 <main@@Base+0xa990>
   1dbf0:	add	r4, r2, #1
   1dbf4:	sub	r0, r6, r4
   1dbf8:	cmp	r0, #2
   1dbfc:	blt	1dc34 <main@@Base+0xa954>
   1dc00:	ldrb	r0, [r4]
   1dc04:	cmp	r0, #32
   1dc08:	bhi	1dc80 <main@@Base+0xa9a0>
   1dc0c:	bne	1dc34 <main@@Base+0xa954>
   1dc10:	ldrb	r0, [r2, #2]!
   1dc14:	cmp	r0, #32
   1dc18:	bls	1dc34 <main@@Base+0xa954>
   1dc1c:	mov	r4, r2
   1dc20:	ldr	r0, [sp, #36]	; 0x24
   1dc24:	ldr	r0, [r0]
   1dc28:	cmp	r0, #0
   1dc2c:	bne	13398 <main@@Base+0xb8>
   1dc30:	b	13454 <main@@Base+0x174>
   1dc34:	mov	r0, sl
   1dc38:	mov	r1, r4
   1dc3c:	mov	r2, r6
   1dc40:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1dc44:	b	1dc7c <main@@Base+0xa99c>
   1dc48:	bne	1dc58 <main@@Base+0xa978>
   1dc4c:	ldrb	r0, [r4, #2]!
   1dc50:	cmp	r0, #32
   1dc54:	bhi	13444 <main@@Base+0x164>
   1dc58:	mov	r0, sl
   1dc5c:	mov	r2, r6
   1dc60:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1dc64:	b	13440 <main@@Base+0x160>
   1dc68:	mov	r0, sl
   1dc6c:	mov	r1, r2
   1dc70:	mov	r2, r6
   1dc74:	mov	r3, #10
   1dc78:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1dc7c:	mov	r4, r0
   1dc80:	ldr	r0, [sp, #36]	; 0x24
   1dc84:	ldr	r0, [r0]
   1dc88:	cmp	r0, #0
   1dc8c:	bne	13398 <main@@Base+0xb8>
   1dc90:	b	13454 <main@@Base+0x174>
   1dc94:	mov	r4, r7
   1dc98:	b	13398 <main@@Base+0xb8>
   1dc9c:	mov	r6, r8
   1dca0:	b	13398 <main@@Base+0xb8>
   1dca4:	mov	r4, r1
   1dca8:	mov	r6, r8
   1dcac:	b	13398 <main@@Base+0xb8>
   1dcb0:	mov	r4, r6
   1dcb4:	mov	r6, r8
   1dcb8:	b	13398 <main@@Base+0xb8>
   1dcbc:	mov	r6, r5
   1dcc0:	b	13398 <main@@Base+0xb8>
   1dcc4:	mov	r4, r1
   1dcc8:	b	13398 <main@@Base+0xb8>
   1dccc:	ldr	r6, [sp, #52]	; 0x34
   1dcd0:	b	13398 <main@@Base+0xb8>
   1dcd4:	mov	r4, r6
   1dcd8:	mov	r6, r5
   1dcdc:	b	13398 <main@@Base+0xb8>
   1dce0:	mov	r4, r1
   1dce4:	mov	r6, r5
   1dce8:	b	13398 <main@@Base+0xb8>
   1dcec:	ldr	sl, [sp, #44]	; 0x2c
   1dcf0:	b	13398 <main@@Base+0xb8>
   1dcf4:	ldr	sl, [sp, #44]	; 0x2c
   1dcf8:	mov	r4, r1
   1dcfc:	b	13398 <main@@Base+0xb8>
   1dd00:	mov	r4, r6
   1dd04:	b	1dd30 <main@@Base+0xaa50>
   1dd08:	ldr	r5, [sp, #52]	; 0x34
   1dd0c:	ldr	sl, [sp, #44]	; 0x2c
   1dd10:	mov	r4, r6
   1dd14:	mov	r6, r5
   1dd18:	b	13398 <main@@Base+0xb8>
   1dd1c:	ldr	r6, [sp, #52]	; 0x34
   1dd20:	ldr	sl, [sp, #44]	; 0x2c
   1dd24:	mov	r4, r7
   1dd28:	b	13398 <main@@Base+0xb8>
   1dd2c:	mov	r4, r1
   1dd30:	ldr	r6, [sp, #52]	; 0x34
   1dd34:	ldr	sl, [sp, #44]	; 0x2c
   1dd38:	b	13398 <main@@Base+0xb8>
   1dd3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd40:	add	fp, sp, #28
   1dd44:	sub	sp, sp, #12
   1dd48:	mov	r5, r1
   1dd4c:	sub	r1, r2, r1
   1dd50:	cmp	r1, #8
   1dd54:	movcs	r1, #8
   1dd58:	and	r1, r1, #15
   1dd5c:	sub	r4, r1, #1
   1dd60:	cmp	r4, #7
   1dd64:	bhi	1ded4 <main@@Base+0xabf4>
   1dd68:	str	r3, [sp, #8]
   1dd6c:	add	r8, pc, #32
   1dd70:	mov	r9, #0
   1dd74:	mov	ip, #0
   1dd78:	mov	lr, #0
   1dd7c:	mov	sl, #0
   1dd80:	mov	r6, #0
   1dd84:	mov	r3, #0
   1dd88:	mov	r1, #0
   1dd8c:	mov	r7, #0
   1dd90:	ldr	pc, [r8, r4, lsl #2]
   1dd94:	strdeq	sp, [r1], -r8
   1dd98:	strdeq	sp, [r1], -r0
   1dd9c:	andeq	sp, r1, r8, ror #27
   1dda0:	andeq	sp, r1, r0, ror #27
   1dda4:	ldrdeq	sp, [r1], -r4
   1dda8:	andeq	sp, r1, r8, asr #27
   1ddac:			; <UNDEFINED> instruction: 0x0001ddb8
   1ddb0:			; <UNDEFINED> instruction: 0x0001ddb4
   1ddb4:	ldrb	ip, [r5, #7]
   1ddb8:	ldrb	r1, [r5, #6]
   1ddbc:	mov	lr, r9
   1ddc0:	orr	r1, ip, r1, lsl #8
   1ddc4:	mov	r9, r1
   1ddc8:	ldrb	r1, [r5, #5]
   1ddcc:	mov	sl, lr
   1ddd0:	orr	r9, r9, r1, lsl #16
   1ddd4:	ldrb	r1, [r5, #4]
   1ddd8:	mov	r6, sl
   1dddc:	orr	r9, r9, r1, lsl #24
   1dde0:	ldrb	r1, [r5, #3]
   1dde4:	orr	r3, r1, r6
   1dde8:	ldrb	r1, [r5, #2]
   1ddec:	orr	r1, r3, r1, lsl #8
   1ddf0:	ldrb	r3, [r5, #1]
   1ddf4:	orr	r7, r1, r3, lsl #16
   1ddf8:	ldrb	r1, [r5]
   1ddfc:	ldr	r3, [fp, #12]
   1de00:	ldr	r8, [fp, #8]
   1de04:	movw	r4, #25957	; 0x6565
   1de08:	movt	r4, #18290	; 0x4772
   1de0c:	orr	r7, r7, r1, lsl #24
   1de10:	mvn	r1, #-1845493760	; 0x92000000
   1de14:	subs	r1, r1, r9
   1de18:	sbcs	r1, r4, r7
   1de1c:	bcc	1de54 <main@@Base+0xab74>
   1de20:	movw	r1, #30053	; 0x7565
   1de24:	movt	r1, #17004	; 0x426c
   1de28:	teq	r7, r1
   1de2c:	bne	1ded4 <main@@Base+0xabf4>
   1de30:	str	r3, [sp]
   1de34:	mov	r1, r5
   1de38:	mov	r3, #4
   1de3c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1de40:	cmp	r0, r5
   1de44:	beq	1ded4 <main@@Base+0xabf4>
   1de48:	mov	r1, #0
   1de4c:	mov	r2, #8
   1de50:	b	1dec0 <main@@Base+0xabe0>
   1de54:	movw	r6, #25600	; 0x6400
   1de58:	bic	r1, r7, #255	; 0xff
   1de5c:	movt	r6, #21093	; 0x5265
   1de60:	teq	r1, r6
   1de64:	bne	1de8c <main@@Base+0xabac>
   1de68:	str	r3, [sp]
   1de6c:	mov	r1, r5
   1de70:	mov	r3, #3
   1de74:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1de78:	cmp	r0, r5
   1de7c:	beq	1ded4 <main@@Base+0xabf4>
   1de80:	mov	r1, #0
   1de84:	mov	r2, #1
   1de88:	b	1dec0 <main@@Base+0xabe0>
   1de8c:	eor	r1, r7, r4
   1de90:	and	r7, r9, #-16777216	; 0xff000000
   1de94:	eor	r7, r7, #1845493760	; 0x6e000000
   1de98:	orrs	r1, r7, r1
   1de9c:	bne	1ded4 <main@@Base+0xabf4>
   1dea0:	str	r3, [sp]
   1dea4:	mov	r1, r5
   1dea8:	mov	r3, #5
   1deac:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1deb0:	cmp	r0, r5
   1deb4:	beq	1ded4 <main@@Base+0xabf4>
   1deb8:	mov	r1, #0
   1debc:	mov	r2, #2
   1dec0:	str	r2, [r8]
   1dec4:	str	r1, [r8, #4]
   1dec8:	mov	r5, r0
   1decc:	ldr	r2, [sp, #8]
   1ded0:	str	r1, [r2]
   1ded4:	mov	r0, r5
   1ded8:	sub	sp, fp, #28
   1dedc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dee4:	add	fp, sp, #28
   1dee8:	sub	sp, sp, #20
   1deec:	sub	lr, r2, r1
   1def0:	cmp	lr, #8
   1def4:	mov	r7, lr
   1def8:	movcs	r7, #8
   1defc:	and	r7, r7, #15
   1df00:	sub	r7, r7, #1
   1df04:	cmp	r7, #7
   1df08:	bhi	1e328 <main@@Base+0xb048>
   1df0c:	str	r0, [sp, #16]
   1df10:	str	r3, [sp, #12]
   1df14:	mov	r4, #0
   1df18:	mov	sl, #0
   1df1c:	mov	r8, #0
   1df20:	mov	r5, #0
   1df24:	mov	r3, #0
   1df28:	mov	r6, #0
   1df2c:	mov	r9, #0
   1df30:	mov	ip, #0
   1df34:	ldr	r0, [fp, #12]
   1df38:	str	r0, [sp, #8]
   1df3c:	ldr	r0, [fp, #8]
   1df40:	str	r0, [sp, #4]
   1df44:	add	r0, pc, #0
   1df48:	ldr	pc, [r0, r7, lsl #2]
   1df4c:			; <UNDEFINED> instruction: 0x0001dfb0
   1df50:	andeq	sp, r1, r8, lsr #31
   1df54:	andeq	sp, r1, r0, lsr #31
   1df58:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df5c:	andeq	sp, r1, ip, lsl #31
   1df60:	andeq	sp, r1, r0, lsl #31
   1df64:	andeq	sp, r1, r0, ror pc
   1df68:	andeq	sp, r1, ip, ror #30
   1df6c:	ldrb	sl, [r1, #7]
   1df70:	ldrb	r0, [r1, #6]
   1df74:	mov	r8, r4
   1df78:	orr	r0, sl, r0, lsl #8
   1df7c:	mov	r4, r0
   1df80:	ldrb	r0, [r1, #5]
   1df84:	mov	r5, r8
   1df88:	orr	r4, r4, r0, lsl #16
   1df8c:	ldrb	r0, [r1, #4]
   1df90:	mov	r3, r5
   1df94:	orr	r4, r4, r0, lsl #24
   1df98:	ldrb	r0, [r1, #3]
   1df9c:	orr	r6, r0, r3
   1dfa0:	ldrb	r0, [r1, #2]
   1dfa4:	orr	r9, r6, r0, lsl #8
   1dfa8:	ldrb	r0, [r1, #1]
   1dfac:	orr	ip, r9, r0, lsl #16
   1dfb0:	ldrb	r0, [r1]
   1dfb4:	movw	r7, #30061	; 0x756d
   1dfb8:	movw	r3, #30815	; 0x785f
   1dfbc:	movt	r7, #25966	; 0x656e
   1dfc0:	movt	r3, #26725	; 0x6865
   1dfc4:	orr	r6, ip, r0, lsl #24
   1dfc8:	subs	r0, r4, r7
   1dfcc:	sbcs	r0, r6, r3
   1dfd0:	bcs	1e038 <main@@Base+0xad58>
   1dfd4:	movw	r3, #27759	; 0x6c6f
   1dfd8:	mvn	r0, #-1912602624	; 0x8e000000
   1dfdc:	bic	r7, r6, #255	; 0xff
   1dfe0:	movt	r3, #17263	; 0x436f
   1dfe4:	subs	r0, r0, r4
   1dfe8:	sbcs	r0, r3, r6
   1dfec:	bcc	1e094 <main@@Base+0xadb4>
   1dff0:	cmp	lr, #4
   1dff4:	blt	1e328 <main@@Base+0xb048>
   1dff8:	movw	r0, #30976	; 0x7900
   1dffc:	movt	r0, #16750	; 0x416e
   1e000:	teq	r7, r0
   1e004:	bne	1e328 <main@@Base+0xb048>
   1e008:	ldrb	r0, [r1, #3]
   1e00c:	mov	r3, r1
   1e010:	cmp	r0, #46	; 0x2e
   1e014:	addeq	r3, r3, #4
   1e018:	cmp	r3, r1
   1e01c:	beq	1e328 <main@@Base+0xb048>
   1e020:	mov	r1, r3
   1e024:	ldr	r0, [sp, #16]
   1e028:	ldr	r3, [sp, #12]
   1e02c:	sub	sp, fp, #28
   1e030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e034:	b	23718 <main@@Base+0x10438>
   1e038:	add	r0, r3, #64512	; 0xfc00
   1e03c:	add	r5, r0, #17301504	; 0x1080000
   1e040:	subs	r0, r4, r7
   1e044:	sbcs	r0, r6, r5
   1e048:	bcs	1e0dc <main@@Base+0xadfc>
   1e04c:	cmp	lr, #9
   1e050:	blt	1e328 <main@@Base+0xb048>
   1e054:	eor	r0, r4, r7
   1e058:	eor	r3, r6, r3
   1e05c:	orrs	r0, r0, r3
   1e060:	bne	1e328 <main@@Base+0xb048>
   1e064:	ldrb	r0, [r1, #8]
   1e068:	mov	r3, r1
   1e06c:	cmp	r0, #46	; 0x2e
   1e070:	addeq	r3, r3, #9
   1e074:	cmp	r3, r1
   1e078:	beq	1e328 <main@@Base+0xb048>
   1e07c:	mov	r1, r3
   1e080:	ldr	r0, [sp, #16]
   1e084:	ldr	r3, [sp, #12]
   1e088:	sub	sp, fp, #28
   1e08c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e090:	b	24e30 <main@@Base+0x11b50>
   1e094:	movw	r0, #28416	; 0x6f00
   1e098:	movt	r0, #18031	; 0x466f
   1e09c:	teq	r7, r0
   1e0a0:	bne	1e138 <main@@Base+0xae58>
   1e0a4:	cmp	lr, #4
   1e0a8:	blt	1e328 <main@@Base+0xb048>
   1e0ac:	ldrb	r0, [r1, #3]
   1e0b0:	mov	r3, r1
   1e0b4:	cmp	r0, #46	; 0x2e
   1e0b8:	addeq	r3, r3, #4
   1e0bc:	cmp	r3, r1
   1e0c0:	beq	1e328 <main@@Base+0xb048>
   1e0c4:	mov	r1, r3
   1e0c8:	ldr	r0, [sp, #16]
   1e0cc:	ldr	r3, [sp, #12]
   1e0d0:	sub	sp, fp, #28
   1e0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e0d8:	b	24bc0 <main@@Base+0x118e0>
   1e0dc:	sub	r0, r3, #4352	; 0x1100
   1e0e0:	subs	r3, r4, r7
   1e0e4:	sub	r0, r0, #-100663296	; 0xfa000000
   1e0e8:	sbcs	r0, r6, r0
   1e0ec:	bcs	1e184 <main@@Base+0xaea4>
   1e0f0:	cmp	lr, #9
   1e0f4:	blt	1e328 <main@@Base+0xb048>
   1e0f8:	eor	r0, r4, r7
   1e0fc:	eor	r3, r6, r5
   1e100:	orrs	r0, r0, r3
   1e104:	bne	1e328 <main@@Base+0xb048>
   1e108:	ldrb	r0, [r1, #8]
   1e10c:	mov	r3, r1
   1e110:	cmp	r0, #46	; 0x2e
   1e114:	addeq	r3, r3, #9
   1e118:	cmp	r3, r1
   1e11c:	beq	1e328 <main@@Base+0xb048>
   1e120:	mov	r1, r3
   1e124:	ldr	r0, [sp, #16]
   1e128:	ldr	r3, [sp, #12]
   1e12c:	sub	sp, fp, #28
   1e130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e134:	b	24fe0 <main@@Base+0x11d00>
   1e138:	cmp	lr, #6
   1e13c:	blt	1e328 <main@@Base+0xb048>
   1e140:	and	r0, r4, #-16777216	; 0xff000000
   1e144:	eor	r3, r6, r3
   1e148:	eor	r0, r0, #1912602624	; 0x72000000
   1e14c:	orrs	r0, r0, r3
   1e150:	bne	1e328 <main@@Base+0xb048>
   1e154:	ldrb	r0, [r1, #5]
   1e158:	mov	r3, r1
   1e15c:	cmp	r0, #46	; 0x2e
   1e160:	addeq	r3, r3, #6
   1e164:	cmp	r3, r1
   1e168:	beq	1e328 <main@@Base+0xb048>
   1e16c:	mov	r1, r3
   1e170:	ldr	r0, [sp, #16]
   1e174:	ldr	r3, [sp, #12]
   1e178:	sub	sp, fp, #28
   1e17c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e180:	b	1dd3c <main@@Base+0xaa5c>
   1e184:	movw	r0, #29817	; 0x7479
   1e188:	movw	r3, #29797	; 0x7465
   1e18c:	movt	r0, #28016	; 0x6d70
   1e190:	movt	r3, #28271	; 0x6e6f
   1e194:	eor	r0, r4, r0
   1e198:	eor	r3, r6, r3
   1e19c:	orrs	r0, r0, r3
   1e1a0:	beq	1e1f4 <main@@Base+0xaf14>
   1e1a4:	movw	r3, #26463	; 0x675f
   1e1a8:	eor	r0, r4, r7
   1e1ac:	movt	r3, #28261	; 0x6e65
   1e1b0:	eor	r3, r6, r3
   1e1b4:	orrs	r0, r0, r3
   1e1b8:	bne	1e328 <main@@Base+0xb048>
   1e1bc:	cmp	lr, #9
   1e1c0:	blt	1e328 <main@@Base+0xb048>
   1e1c4:	ldrb	r0, [r1, #8]
   1e1c8:	mov	r3, r1
   1e1cc:	cmp	r0, #46	; 0x2e
   1e1d0:	addeq	r3, r3, #9
   1e1d4:	cmp	r3, r1
   1e1d8:	beq	1e328 <main@@Base+0xb048>
   1e1dc:	mov	r1, r3
   1e1e0:	ldr	r0, [sp, #16]
   1e1e4:	ldr	r3, [sp, #12]
   1e1e8:	sub	sp, fp, #28
   1e1ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1f0:	b	251d4 <main@@Base+0x11ef4>
   1e1f4:	add	r8, r1, #8
   1e1f8:	sub	r5, r2, r8
   1e1fc:	cmp	r5, #8
   1e200:	mov	r0, r5
   1e204:	movcs	r0, #8
   1e208:	and	r0, r0, #15
   1e20c:	sub	r4, r0, #1
   1e210:	cmp	r4, #7
   1e214:	bhi	1e328 <main@@Base+0xb048>
   1e218:	add	r0, pc, #16
   1e21c:	mov	lr, #0
   1e220:	mov	r9, #0
   1e224:	mov	r3, #0
   1e228:	mov	r6, #0
   1e22c:	ldr	pc, [r0, r4, lsl #2]
   1e230:	andeq	lr, r1, r8, ror #4
   1e234:	andeq	lr, r1, r0, ror #4
   1e238:	andeq	lr, r1, r8, asr r2
   1e23c:	andeq	lr, r1, r0, asr r2
   1e240:	andeq	lr, r1, r0, asr r2
   1e244:	andeq	lr, r1, r0, asr r2
   1e248:	andeq	lr, r1, r0, asr r2
   1e24c:	andeq	lr, r1, r0, asr r2
   1e250:	ldrb	r9, [r1, #11]
   1e254:	mov	lr, #0
   1e258:	ldrb	r0, [r1, #10]
   1e25c:	orr	r3, r9, r0, lsl #8
   1e260:	ldrb	r0, [r1, #9]
   1e264:	orr	r6, r3, r0, lsl #16
   1e268:	cmp	r5, #5
   1e26c:	blt	1e328 <main@@Base+0xb048>
   1e270:	ldrb	r0, [r8]
   1e274:	orr	r0, r6, r0, lsl #24
   1e278:	eor	r0, r0, r7
   1e27c:	orrs	r0, lr, r0
   1e280:	bne	1e328 <main@@Base+0xb048>
   1e284:	ldrb	r0, [r1, #12]
   1e288:	mov	r5, r8
   1e28c:	cmp	r0, #46	; 0x2e
   1e290:	addeq	r5, r1, #13
   1e294:	cmp	r5, r8
   1e298:	beq	1e328 <main@@Base+0xb048>
   1e29c:	sub	r0, r2, r5
   1e2a0:	mov	r1, #-268435456	; 0xf0000000
   1e2a4:	cmp	r0, #8
   1e2a8:	movcs	r0, #8
   1e2ac:	add	r0, r1, r0, lsl #28
   1e2b0:	asr	r0, r0, #28
   1e2b4:	cmp	r0, #0
   1e2b8:	blt	1e314 <main@@Base+0xb034>
   1e2bc:	ldrb	r0, [r5]
   1e2c0:	cmp	r0, #120	; 0x78
   1e2c4:	bne	1e324 <main@@Base+0xb044>
   1e2c8:	ldr	r0, [sp, #8]
   1e2cc:	mov	r1, r5
   1e2d0:	mov	r3, #1
   1e2d4:	str	r0, [sp]
   1e2d8:	ldr	r0, [sp, #16]
   1e2dc:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1e2e0:	cmp	r0, r5
   1e2e4:	mov	r1, r5
   1e2e8:	beq	1e328 <main@@Base+0xb048>
   1e2ec:	ldr	r2, [sp, #4]
   1e2f0:	mov	r1, #0
   1e2f4:	str	r1, [r2]
   1e2f8:	str	r1, [r2, #4]
   1e2fc:	ldr	r2, [sp, #12]
   1e300:	str	r1, [r2]
   1e304:	mov	r1, r0
   1e308:	mov	r0, r1
   1e30c:	sub	sp, fp, #28
   1e310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e314:	mov	r1, r5
   1e318:	mov	r0, r1
   1e31c:	sub	sp, fp, #28
   1e320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e324:	mov	r1, r5
   1e328:	mov	r0, r1
   1e32c:	sub	sp, fp, #28
   1e330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e338:	add	fp, sp, #28
   1e33c:	sub	sp, sp, #28
   1e340:	mov	r8, r2
   1e344:	sub	r2, r2, r1
   1e348:	cmp	r2, #8
   1e34c:	movcs	r2, #8
   1e350:	and	r2, r2, #15
   1e354:	sub	r2, r2, #1
   1e358:	cmp	r2, #7
   1e35c:	bhi	1f27c <main@@Base+0xbf9c>
   1e360:	str	r0, [sp, #24]
   1e364:	mov	sl, #0
   1e368:	mov	ip, #0
   1e36c:	mov	lr, #0
   1e370:	mov	r9, #0
   1e374:	mov	r6, #0
   1e378:	mov	r4, #0
   1e37c:	mov	r5, #0
   1e380:	ldr	r0, [fp, #12]
   1e384:	str	r0, [sp, #20]
   1e388:	ldr	r0, [fp, #8]
   1e38c:	str	r0, [sp, #16]
   1e390:	add	r7, pc, #4
   1e394:	mov	r0, #0
   1e398:	ldr	pc, [r7, r2, lsl #2]
   1e39c:	andeq	lr, r1, r0, lsl #8
   1e3a0:	strdeq	lr, [r1], -r8
   1e3a4:	strdeq	lr, [r1], -r0
   1e3a8:	andeq	lr, r1, r8, ror #7
   1e3ac:	ldrdeq	lr, [r1], -ip
   1e3b0:	ldrdeq	lr, [r1], -r0
   1e3b4:	andeq	lr, r1, r0, asr #7
   1e3b8:			; <UNDEFINED> instruction: 0x0001e3bc
   1e3bc:	ldrb	ip, [r1, #7]
   1e3c0:	ldrb	r2, [r1, #6]
   1e3c4:	mov	lr, sl
   1e3c8:	orr	r2, ip, r2, lsl #8
   1e3cc:	mov	sl, r2
   1e3d0:	ldrb	r2, [r1, #5]
   1e3d4:	mov	r9, lr
   1e3d8:	orr	sl, sl, r2, lsl #16
   1e3dc:	ldrb	r2, [r1, #4]
   1e3e0:	mov	r6, r9
   1e3e4:	orr	sl, sl, r2, lsl #24
   1e3e8:	ldrb	r2, [r1, #3]
   1e3ec:	orr	r4, r2, r6
   1e3f0:	ldrb	r2, [r1, #2]
   1e3f4:	orr	r0, r4, r2, lsl #8
   1e3f8:	ldrb	r2, [r1, #1]
   1e3fc:	orr	r5, r0, r2, lsl #16
   1e400:	ldrb	r2, [r1]
   1e404:	movw	r7, #11844	; 0x2e44
   1e408:	movw	r0, #18273	; 0x4761
   1e40c:	movt	r7, #28005	; 0x6d65
   1e410:	movt	r0, #19833	; 0x4d79
   1e414:	subs	r7, r7, sl
   1e418:	orr	r2, r5, r2, lsl #24
   1e41c:	sbcs	r7, r0, r2
   1e420:	bcc	1e588 <main@@Base+0xb2a8>
   1e424:	movw	r0, #31022	; 0x792e
   1e428:	movw	r7, #28276	; 0x6e74
   1e42c:	movt	r0, #24947	; 0x6173
   1e430:	movt	r7, #18017	; 0x4661
   1e434:	eor	r0, sl, r0
   1e438:	eor	r2, r2, r7
   1e43c:	orrs	r0, r0, r2
   1e440:	bne	1f27c <main@@Base+0xbf9c>
   1e444:	add	lr, r1, #8
   1e448:	sub	r0, r8, lr
   1e44c:	cmp	r0, #8
   1e450:	movcs	r0, #8
   1e454:	and	r0, r0, #15
   1e458:	sub	r6, r0, #1
   1e45c:	cmp	r6, #7
   1e460:	bhi	1f27c <main@@Base+0xbf9c>
   1e464:	str	r3, [sp, #12]
   1e468:	add	r2, pc, #32
   1e46c:	mov	sl, #0
   1e470:	mov	ip, #0
   1e474:	mov	r9, #0
   1e478:	mov	r4, #0
   1e47c:	mov	r7, #0
   1e480:	mov	r5, #0
   1e484:	mov	r0, #0
   1e488:	mov	r3, #0
   1e48c:	ldr	pc, [r2, r6, lsl #2]
   1e490:	strdeq	lr, [r1], -r4
   1e494:	andeq	lr, r1, ip, ror #9
   1e498:	andeq	lr, r1, r4, ror #9
   1e49c:	ldrdeq	lr, [r1], -ip
   1e4a0:	ldrdeq	lr, [r1], -r0
   1e4a4:	andeq	lr, r1, r4, asr #9
   1e4a8:			; <UNDEFINED> instruction: 0x0001e4b4
   1e4ac:			; <UNDEFINED> instruction: 0x0001e4b0
   1e4b0:	ldrb	ip, [r1, #15]
   1e4b4:	ldrb	r0, [r1, #14]
   1e4b8:	mov	r9, sl
   1e4bc:	orr	r0, ip, r0, lsl #8
   1e4c0:	mov	sl, r0
   1e4c4:	ldrb	r0, [r1, #13]
   1e4c8:	mov	r4, r9
   1e4cc:	orr	sl, sl, r0, lsl #16
   1e4d0:	ldrb	r0, [r1, #12]
   1e4d4:	mov	r7, r4
   1e4d8:	orr	sl, sl, r0, lsl #24
   1e4dc:	ldrb	r0, [r1, #11]
   1e4e0:	orr	r5, r0, r7
   1e4e4:	ldrb	r0, [r1, #10]
   1e4e8:	orr	r0, r5, r0, lsl #8
   1e4ec:	ldrb	r2, [r1, #9]
   1e4f0:	orr	r3, r0, r2, lsl #16
   1e4f4:	ldrb	r2, [lr]
   1e4f8:	movw	r0, #29797	; 0x7465
   1e4fc:	movt	r0, #24931	; 0x6163
   1e500:	eor	r0, sl, r0
   1e504:	orr	r2, r3, r2, lsl #24
   1e508:	movw	r3, #24946	; 0x6172
   1e50c:	movt	r3, #17256	; 0x4368
   1e510:	eor	r2, r2, r3
   1e514:	orrs	r0, r0, r2
   1e518:	bne	1f27c <main@@Base+0xbf9c>
   1e51c:	add	r0, r1, #16
   1e520:	mov	r7, #-268435456	; 0xf0000000
   1e524:	sub	r2, r8, r0
   1e528:	cmp	r2, #8
   1e52c:	mov	r3, r2
   1e530:	movcs	r3, #8
   1e534:	add	r3, r7, r3, lsl #28
   1e538:	asr	r3, r3, #28
   1e53c:	cmp	r3, #0
   1e540:	cmpge	r2, #2
   1e544:	blt	1f27c <main@@Base+0xbf9c>
   1e548:	ldrb	r2, [r0]
   1e54c:	cmp	r2, #114	; 0x72
   1e550:	bne	1f27c <main@@Base+0xbf9c>
   1e554:	ldrb	r2, [r1, #17]
   1e558:	ldr	r3, [sp, #12]
   1e55c:	cmp	r2, #46	; 0x2e
   1e560:	mov	r2, r0
   1e564:	addeq	r2, r1, #18
   1e568:	cmp	r2, r0
   1e56c:	beq	1f27c <main@@Base+0xbf9c>
   1e570:	ldr	r0, [sp, #24]
   1e574:	mov	r1, r2
   1e578:	mov	r2, r8
   1e57c:	sub	sp, fp, #28
   1e580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e584:	b	25320 <main@@Base+0x12040>
   1e588:	movw	r7, #11855	; 0x2e4f
   1e58c:	eor	r2, r2, r0
   1e590:	movt	r7, #28005	; 0x6d65
   1e594:	eor	r7, sl, r7
   1e598:	orrs	r0, r7, r2
   1e59c:	beq	1e73c <main@@Base+0xb45c>
   1e5a0:	movw	r0, #11845	; 0x2e45
   1e5a4:	movt	r0, #28005	; 0x6d65
   1e5a8:	eor	r0, sl, r0
   1e5ac:	orrs	r0, r0, r2
   1e5b0:	bne	1f27c <main@@Base+0xbf9c>
   1e5b4:	add	lr, r1, #8
   1e5b8:	sub	r0, r8, lr
   1e5bc:	cmp	r0, #8
   1e5c0:	movcs	r0, #8
   1e5c4:	and	r0, r0, #15
   1e5c8:	sub	r7, r0, #1
   1e5cc:	cmp	r7, #7
   1e5d0:	bhi	1f27c <main@@Base+0xbf9c>
   1e5d4:	str	r3, [sp, #12]
   1e5d8:	add	sl, pc, #32
   1e5dc:	mov	r0, #0
   1e5e0:	mov	ip, #0
   1e5e4:	mov	r9, #0
   1e5e8:	mov	r4, #0
   1e5ec:	mov	r6, #0
   1e5f0:	mov	r5, #0
   1e5f4:	mov	r2, #0
   1e5f8:	mov	r3, #0
   1e5fc:	ldr	pc, [sl, r7, lsl #2]
   1e600:	andeq	lr, r1, r4, ror #12
   1e604:	andeq	lr, r1, ip, asr r6
   1e608:	andeq	lr, r1, r4, asr r6
   1e60c:	andeq	lr, r1, ip, asr #12
   1e610:	andeq	lr, r1, r0, asr #12
   1e614:	andeq	lr, r1, r4, lsr r6
   1e618:	andeq	lr, r1, r4, lsr #12
   1e61c:	andeq	lr, r1, r0, lsr #12
   1e620:	ldrb	ip, [r1, #15]
   1e624:	ldrb	r2, [r1, #14]
   1e628:	mov	r9, r0
   1e62c:	orr	r2, ip, r2, lsl #8
   1e630:	mov	r0, r2
   1e634:	ldrb	r2, [r1, #13]
   1e638:	mov	r4, r9
   1e63c:	orr	r0, r0, r2, lsl #16
   1e640:	ldrb	r2, [r1, #12]
   1e644:	mov	r6, r4
   1e648:	orr	r0, r0, r2, lsl #24
   1e64c:	ldrb	r2, [r1, #11]
   1e650:	orr	r5, r2, r6
   1e654:	ldrb	r2, [r1, #10]
   1e658:	orr	r2, r5, r2, lsl #8
   1e65c:	ldrb	r3, [r1, #9]
   1e660:	orr	r3, r2, r3, lsl #16
   1e664:	ldrb	r2, [lr]
   1e668:	movw	r6, #11880	; 0x2e68
   1e66c:	movt	r6, #27749	; 0x6c65
   1e670:	subs	r7, r0, r6
   1e674:	orr	r2, r3, r2, lsl #24
   1e678:	movw	r3, #28016	; 0x6d70
   1e67c:	movt	r3, #30817	; 0x7861
   1e680:	sbcs	r7, r2, r3
   1e684:	bcs	1eb0c <main@@Base+0xb82c>
   1e688:	ldr	lr, [sp, #12]
   1e68c:	subs	r7, r6, #37	; 0x25
   1e690:	sbc	r5, r3, #0
   1e694:	subs	r7, r0, r7
   1e698:	sbcs	r7, r2, r5
   1e69c:	bcs	1ec28 <main@@Base+0xb948>
   1e6a0:	subs	r7, r6, #39	; 0x27
   1e6a4:	sbc	r3, r3, #0
   1e6a8:	eor	r0, r0, r7
   1e6ac:	eor	r2, r2, r3
   1e6b0:	orrs	r0, r0, r2
   1e6b4:	bne	1f27c <main@@Base+0xbf9c>
   1e6b8:	add	r0, r1, #16
   1e6bc:	sub	r2, r8, r0
   1e6c0:	cmp	r2, #8
   1e6c4:	mov	r3, r2
   1e6c8:	movcs	r3, #8
   1e6cc:	and	r7, r3, #15
   1e6d0:	sub	r3, r7, #2
   1e6d4:	cmp	r3, #7
   1e6d8:	bcs	1f10c <main@@Base+0xbe2c>
   1e6dc:	ldrb	r3, [r1, #17]
   1e6e0:	lsl	r7, r3, #16
   1e6e4:	mov	r3, #0
   1e6e8:	cmp	r2, #3
   1e6ec:	blt	1f27c <main@@Base+0xbf9c>
   1e6f0:	ldrb	r2, [r0]
   1e6f4:	orr	r2, r7, r2, lsl #24
   1e6f8:	eor	r2, r2, #7929856	; 0x790000
   1e6fc:	eor	r2, r2, #1845493760	; 0x6e000000
   1e700:	orrs	r2, r3, r2
   1e704:	bne	1f27c <main@@Base+0xbf9c>
   1e708:	ldrb	r2, [r1, #18]
   1e70c:	cmp	r2, #46	; 0x2e
   1e710:	mov	r2, r0
   1e714:	addeq	r2, r1, #19
   1e718:	cmp	r2, r0
   1e71c:	beq	1f27c <main@@Base+0xbf9c>
   1e720:	ldr	r0, [sp, #24]
   1e724:	mov	r1, r2
   1e728:	mov	r2, r8
   1e72c:	mov	r3, lr
   1e730:	sub	sp, fp, #28
   1e734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e738:	b	23718 <main@@Base+0x10438>
   1e73c:	add	lr, r1, #8
   1e740:	sub	r0, r8, lr
   1e744:	cmp	r0, #8
   1e748:	movcs	r0, #8
   1e74c:	and	r0, r0, #15
   1e750:	sub	r7, r0, #1
   1e754:	cmp	r7, #7
   1e758:	bhi	1f27c <main@@Base+0xbf9c>
   1e75c:	str	r3, [sp, #12]
   1e760:	add	r3, pc, #32
   1e764:	mov	r2, #0
   1e768:	mov	ip, #0
   1e76c:	mov	sl, #0
   1e770:	mov	r4, #0
   1e774:	mov	r6, #0
   1e778:	mov	r5, #0
   1e77c:	mov	r0, #0
   1e780:	mov	r9, #0
   1e784:	ldr	pc, [r3, r7, lsl #2]
   1e788:	andeq	lr, r1, ip, ror #15
   1e78c:	andeq	lr, r1, r4, ror #15
   1e790:	ldrdeq	lr, [r1], -ip
   1e794:	ldrdeq	lr, [r1], -r4
   1e798:	andeq	lr, r1, r8, asr #15
   1e79c:			; <UNDEFINED> instruction: 0x0001e7bc
   1e7a0:	andeq	lr, r1, ip, lsr #15
   1e7a4:	andeq	lr, r1, r8, lsr #15
   1e7a8:	ldrb	ip, [r1, #15]
   1e7ac:	ldrb	r0, [r1, #14]
   1e7b0:	mov	sl, r2
   1e7b4:	orr	r0, ip, r0, lsl #8
   1e7b8:	mov	r2, r0
   1e7bc:	ldrb	r0, [r1, #13]
   1e7c0:	mov	r4, sl
   1e7c4:	orr	r2, r2, r0, lsl #16
   1e7c8:	ldrb	r0, [r1, #12]
   1e7cc:	mov	r6, r4
   1e7d0:	orr	r2, r2, r0, lsl #24
   1e7d4:	ldrb	r0, [r1, #11]
   1e7d8:	orr	r5, r0, r6
   1e7dc:	ldrb	r0, [r1, #10]
   1e7e0:	orr	r0, r5, r0, lsl #8
   1e7e4:	ldrb	r3, [r1, #9]
   1e7e8:	orr	r9, r0, r3, lsl #16
   1e7ec:	movw	r0, #28005	; 0x6d65
   1e7f0:	movw	r3, #25970	; 0x6572
   1e7f4:	movt	r0, #20065	; 0x4e61
   1e7f8:	movt	r3, #29800	; 0x7468
   1e7fc:	eor	r0, r2, r0
   1e800:	ldrb	r2, [lr]
   1e804:	orr	r2, r9, r2, lsl #24
   1e808:	eor	r2, r2, r3
   1e80c:	orrs	r0, r0, r2
   1e810:	bne	1f27c <main@@Base+0xbf9c>
   1e814:	add	lr, r1, #16
   1e818:	sub	r0, r8, lr
   1e81c:	cmp	r0, #8
   1e820:	movcs	r0, #8
   1e824:	and	r0, r0, #15
   1e828:	sub	r7, r0, #1
   1e82c:	cmp	r7, #7
   1e830:	bhi	1f27c <main@@Base+0xbf9c>
   1e834:	add	r2, pc, #32
   1e838:	mov	sl, #0
   1e83c:	mov	ip, #0
   1e840:	mov	r9, #0
   1e844:	mov	r4, #0
   1e848:	mov	r6, #0
   1e84c:	mov	r5, #0
   1e850:	mov	r0, #0
   1e854:	mov	r3, #0
   1e858:	ldr	pc, [r2, r7, lsl #2]
   1e85c:	andeq	lr, r1, r0, asr #17
   1e860:			; <UNDEFINED> instruction: 0x0001e8b8
   1e864:			; <UNDEFINED> instruction: 0x0001e8b0
   1e868:	andeq	lr, r1, r8, lsr #17
   1e86c:	muleq	r1, ip, r8
   1e870:	muleq	r1, r0, r8
   1e874:	andeq	lr, r1, r0, lsl #17
   1e878:	andeq	lr, r1, ip, ror r8
   1e87c:	ldrb	ip, [r1, #23]
   1e880:	ldrb	r0, [r1, #22]
   1e884:	mov	r9, sl
   1e888:	orr	r0, ip, r0, lsl #8
   1e88c:	mov	sl, r0
   1e890:	ldrb	r0, [r1, #21]
   1e894:	mov	r4, r9
   1e898:	orr	sl, sl, r0, lsl #16
   1e89c:	ldrb	r0, [r1, #20]
   1e8a0:	mov	r6, r4
   1e8a4:	orr	sl, sl, r0, lsl #24
   1e8a8:	ldrb	r0, [r1, #19]
   1e8ac:	orr	r5, r0, r6
   1e8b0:	ldrb	r0, [r1, #18]
   1e8b4:	orr	r0, r5, r0, lsl #8
   1e8b8:	ldrb	r2, [r1, #17]
   1e8bc:	orr	r3, r0, r2, lsl #16
   1e8c0:	ldrb	r2, [lr]
   1e8c4:	movw	r0, #18034	; 0x4672
   1e8c8:	movt	r0, #25902	; 0x652e
   1e8cc:	eor	r0, sl, r0
   1e8d0:	orr	r2, r3, r2, lsl #24
   1e8d4:	movw	r3, #24931	; 0x6163
   1e8d8:	movt	r3, #21360	; 0x5370
   1e8dc:	eor	r2, r2, r3
   1e8e0:	orrs	r0, r0, r2
   1e8e4:	bne	1f27c <main@@Base+0xbf9c>
   1e8e8:	add	lr, r1, #24
   1e8ec:	sub	r0, r8, lr
   1e8f0:	cmp	r0, #8
   1e8f4:	movcs	r0, #8
   1e8f8:	and	r0, r0, #15
   1e8fc:	sub	r7, r0, #1
   1e900:	cmp	r7, #7
   1e904:	bhi	1f27c <main@@Base+0xbf9c>
   1e908:	add	r2, pc, #32
   1e90c:	mov	sl, #0
   1e910:	mov	ip, #0
   1e914:	mov	r9, #0
   1e918:	mov	r4, #0
   1e91c:	mov	r6, #0
   1e920:	mov	r5, #0
   1e924:	mov	r0, #0
   1e928:	mov	r3, #0
   1e92c:	ldr	pc, [r2, r7, lsl #2]
   1e930:	muleq	r1, r4, r9
   1e934:	andeq	lr, r1, ip, lsl #19
   1e938:	andeq	lr, r1, r4, lsl #19
   1e93c:	andeq	lr, r1, ip, ror r9
   1e940:	andeq	lr, r1, r0, ror r9
   1e944:	andeq	lr, r1, r4, ror #18
   1e948:	andeq	lr, r1, r4, asr r9
   1e94c:	andeq	lr, r1, r0, asr r9
   1e950:	ldrb	ip, [r1, #31]
   1e954:	ldrb	r0, [r1, #30]
   1e958:	mov	r9, sl
   1e95c:	orr	r0, ip, r0, lsl #8
   1e960:	mov	sl, r0
   1e964:	ldrb	r0, [r1, #29]
   1e968:	mov	r4, r9
   1e96c:	orr	sl, sl, r0, lsl #16
   1e970:	ldrb	r0, [r1, #28]
   1e974:	mov	r6, r4
   1e978:	orr	sl, sl, r0, lsl #24
   1e97c:	ldrb	r0, [r1, #27]
   1e980:	orr	r5, r0, r6
   1e984:	ldrb	r0, [r1, #26]
   1e988:	orr	r0, r5, r0, lsl #8
   1e98c:	ldrb	r2, [r1, #25]
   1e990:	orr	r3, r0, r2, lsl #16
   1e994:	ldrb	r2, [lr]
   1e998:	movw	r0, #30052	; 0x7564
   1e99c:	movt	r0, #25452	; 0x636c
   1e9a0:	eor	r0, sl, r0
   1e9a4:	orr	r2, r3, r2, lsl #24
   1e9a8:	movw	r3, #18798	; 0x496e
   1e9ac:	movt	r3, #28525	; 0x6f6d
   1e9b0:	eor	r2, r2, r3
   1e9b4:	orrs	r0, r0, r2
   1e9b8:	bne	1f27c <main@@Base+0xbf9c>
   1e9bc:	add	r0, r1, #32
   1e9c0:	mov	r7, #-268435456	; 0xf0000000
   1e9c4:	sub	r2, r8, r0
   1e9c8:	cmp	r2, #8
   1e9cc:	mov	r3, r2
   1e9d0:	movcs	r3, #8
   1e9d4:	add	r3, r7, r3, lsl #28
   1e9d8:	asr	r3, r3, #28
   1e9dc:	cmp	r3, #0
   1e9e0:	cmpge	r2, #2
   1e9e4:	blt	1f27c <main@@Base+0xbf9c>
   1e9e8:	ldrb	r2, [r0]
   1e9ec:	cmp	r2, #101	; 0x65
   1e9f0:	bne	1f27c <main@@Base+0xbf9c>
   1e9f4:	ldrb	r2, [r1, #33]	; 0x21
   1e9f8:	ldr	r9, [sp, #12]
   1e9fc:	mov	r7, r0
   1ea00:	cmp	r2, #46	; 0x2e
   1ea04:	addeq	r7, r1, #34	; 0x22
   1ea08:	cmp	r7, r0
   1ea0c:	beq	1f27c <main@@Base+0xbf9c>
   1ea10:	sub	r0, r8, r7
   1ea14:	cmp	r0, #8
   1ea18:	movcs	r0, #8
   1ea1c:	and	r0, r0, #15
   1ea20:	sub	r2, r0, #1
   1ea24:	cmp	r2, #7
   1ea28:	bhi	1f258 <main@@Base+0xbf78>
   1ea2c:	add	r5, pc, #32
   1ea30:	mov	sl, #0
   1ea34:	mov	ip, #0
   1ea38:	mov	lr, #0
   1ea3c:	mov	r1, #0
   1ea40:	mov	r3, #0
   1ea44:	mov	r6, #0
   1ea48:	mov	r4, #0
   1ea4c:	mov	r0, #0
   1ea50:	ldr	pc, [r5, r2, lsl #2]
   1ea54:			; <UNDEFINED> instruction: 0x0001eab8
   1ea58:			; <UNDEFINED> instruction: 0x0001eab0
   1ea5c:	andeq	lr, r1, r8, lsr #21
   1ea60:	andeq	lr, r1, r0, lsr #21
   1ea64:	muleq	r1, r4, sl
   1ea68:	andeq	lr, r1, r8, lsl #21
   1ea6c:	andeq	lr, r1, r8, ror sl
   1ea70:	andeq	lr, r1, r4, ror sl
   1ea74:	ldrb	ip, [r7, #7]
   1ea78:	ldrb	r0, [r7, #6]
   1ea7c:	mov	lr, sl
   1ea80:	orr	r0, ip, r0, lsl #8
   1ea84:	mov	sl, r0
   1ea88:	ldrb	r0, [r7, #5]
   1ea8c:	mov	r1, lr
   1ea90:	orr	sl, sl, r0, lsl #16
   1ea94:	ldrb	r0, [r7, #4]
   1ea98:	mov	r3, r1
   1ea9c:	orr	sl, sl, r0, lsl #24
   1eaa0:	ldrb	r0, [r7, #3]
   1eaa4:	orr	r6, r0, r3
   1eaa8:	ldrb	r0, [r7, #2]
   1eaac:	orr	r4, r6, r0, lsl #8
   1eab0:	ldrb	r0, [r7, #1]
   1eab4:	orr	r0, r4, r0, lsl #16
   1eab8:	ldrb	r1, [r7]
   1eabc:	ldr	r4, [sp, #24]
   1eac0:	orr	r6, r0, r1, lsl #24
   1eac4:	movw	r1, #28416	; 0x6f00
   1eac8:	bic	r0, r6, #255	; 0xff
   1eacc:	movt	r1, #18031	; 0x466f
   1ead0:	teq	r0, r1
   1ead4:	bne	1f134 <main@@Base+0xbe54>
   1ead8:	ldr	r0, [sp, #20]
   1eadc:	mov	r1, r7
   1eae0:	mov	r2, r8
   1eae4:	mov	r3, #3
   1eae8:	str	r0, [sp]
   1eaec:	mov	r0, r4
   1eaf0:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1eaf4:	cmp	r0, r7
   1eaf8:	beq	1f134 <main@@Base+0xbe54>
   1eafc:	mov	r1, r0
   1eb00:	mov	r3, #0
   1eb04:	mov	r2, #17
   1eb08:	b	1f1cc <main@@Base+0xbeec>
   1eb0c:	eor	r5, r0, r6
   1eb10:	eor	r7, r2, r3
   1eb14:	orrs	r5, r5, r7
   1eb18:	bne	1ed20 <main@@Base+0xba40>
   1eb1c:	add	ip, r1, #16
   1eb20:	sub	r2, r8, ip
   1eb24:	cmp	r2, #8
   1eb28:	mov	r0, r2
   1eb2c:	movcs	r0, #8
   1eb30:	and	r0, r0, #15
   1eb34:	sub	r4, r0, #1
   1eb38:	cmp	r4, #7
   1eb3c:	bhi	1f27c <main@@Base+0xbf9c>
   1eb40:	add	r6, pc, #28
   1eb44:	mov	r9, #0
   1eb48:	mov	lr, #0
   1eb4c:	mov	sl, #0
   1eb50:	mov	r3, #0
   1eb54:	mov	r5, #0
   1eb58:	mov	r0, #0
   1eb5c:	mov	r7, #0
   1eb60:	ldr	pc, [r6, r4, lsl #2]
   1eb64:	andeq	lr, r1, r0, asr #23
   1eb68:			; <UNDEFINED> instruction: 0x0001ebb8
   1eb6c:			; <UNDEFINED> instruction: 0x0001ebb0
   1eb70:	andeq	lr, r1, r8, lsr #23
   1eb74:	muleq	r1, ip, fp
   1eb78:	andeq	lr, r1, ip, lsl #23
   1eb7c:	andeq	lr, r1, r4, lsl #23
   1eb80:	andeq	lr, r1, r4, lsl #23
   1eb84:	ldrb	r0, [r1, #22]
   1eb88:	lsl	lr, r0, #8
   1eb8c:	ldrb	r0, [r1, #21]
   1eb90:	mov	sl, r9
   1eb94:	orr	r0, lr, r0, lsl #16
   1eb98:	mov	r9, r0
   1eb9c:	ldrb	r0, [r1, #20]
   1eba0:	mov	r3, sl
   1eba4:	orr	r9, r9, r0, lsl #24
   1eba8:	ldrb	r0, [r1, #19]
   1ebac:	orr	r5, r0, r3
   1ebb0:	ldrb	r0, [r1, #18]
   1ebb4:	orr	r0, r5, r0, lsl #8
   1ebb8:	ldrb	r3, [r1, #17]
   1ebbc:	orr	r7, r0, r3, lsl #16
   1ebc0:	cmp	r2, #8
   1ebc4:	blt	1f27c <main@@Base+0xbf9c>
   1ebc8:	ldrb	r0, [ip]
   1ebcc:	movw	r2, #24421	; 0x5f65
   1ebd0:	movw	r3, #27904	; 0x6d00
   1ebd4:	movt	r2, #25959	; 0x6567
   1ebd8:	movt	r3, #28277	; 0x6e75
   1ebdc:	add	r2, r2, #1114112	; 0x110000
   1ebe0:	eor	r3, r9, r3
   1ebe4:	orr	r0, r7, r0, lsl #24
   1ebe8:	eor	r0, r0, r2
   1ebec:	orrs	r0, r3, r0
   1ebf0:	bne	1f27c <main@@Base+0xbf9c>
   1ebf4:	ldrb	r0, [r1, #23]
   1ebf8:	ldr	r3, [sp, #12]
   1ebfc:	mov	r2, ip
   1ec00:	cmp	r0, #46	; 0x2e
   1ec04:	addeq	r2, r1, #24
   1ec08:	cmp	r2, ip
   1ec0c:	beq	1f27c <main@@Base+0xbf9c>
   1ec10:	ldr	r0, [sp, #24]
   1ec14:	mov	r1, r2
   1ec18:	mov	r2, r8
   1ec1c:	sub	sp, fp, #28
   1ec20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec24:	b	24e30 <main@@Base+0x11b50>
   1ec28:	movw	r7, #11846	; 0x2e46
   1ec2c:	eor	r2, r2, r3
   1ec30:	movt	r7, #27749	; 0x6c65
   1ec34:	eor	r7, r0, r7
   1ec38:	orrs	r3, r7, r2
   1ec3c:	beq	1ef80 <main@@Base+0xbca0>
   1ec40:	movw	r3, #11843	; 0x2e43
   1ec44:	movt	r3, #27749	; 0x6c65
   1ec48:	eor	r0, r0, r3
   1ec4c:	orrs	r0, r0, r2
   1ec50:	bne	1f27c <main@@Base+0xbf9c>
   1ec54:	add	r0, r1, #16
   1ec58:	sub	r2, r8, r0
   1ec5c:	cmp	r2, #8
   1ec60:	mov	r3, r2
   1ec64:	movcs	r3, #8
   1ec68:	and	r3, r3, #15
   1ec6c:	sub	r6, r3, #1
   1ec70:	cmp	r6, #7
   1ec74:	bhi	1f27c <main@@Base+0xbf9c>
   1ec78:	add	r3, pc, #16
   1ec7c:	mov	ip, #0
   1ec80:	mov	r7, #0
   1ec84:	mov	r4, #0
   1ec88:	mov	r5, #0
   1ec8c:	ldr	pc, [r3, r6, lsl #2]
   1ec90:	andeq	lr, r1, r8, asr #25
   1ec94:	andeq	lr, r1, r0, asr #25
   1ec98:			; <UNDEFINED> instruction: 0x0001ecb8
   1ec9c:			; <UNDEFINED> instruction: 0x0001ecb0
   1eca0:			; <UNDEFINED> instruction: 0x0001ecb0
   1eca4:			; <UNDEFINED> instruction: 0x0001ecb0
   1eca8:			; <UNDEFINED> instruction: 0x0001ecb0
   1ecac:			; <UNDEFINED> instruction: 0x0001ecb0
   1ecb0:	ldrb	r7, [r1, #19]
   1ecb4:	mov	ip, #0
   1ecb8:	ldrb	r3, [r1, #18]
   1ecbc:	orr	r4, r7, r3, lsl #8
   1ecc0:	ldrb	r3, [r1, #17]
   1ecc4:	orr	r5, r4, r3, lsl #16
   1ecc8:	cmp	r2, #5
   1eccc:	blt	1f27c <main@@Base+0xbf9c>
   1ecd0:	ldrb	r2, [r0]
   1ecd4:	movw	r3, #28530	; 0x6f72
   1ecd8:	movt	r3, #28524	; 0x6f6c
   1ecdc:	orr	r2, r5, r2, lsl #24
   1ece0:	eor	r2, r2, r3
   1ece4:	orrs	r2, ip, r2
   1ece8:	bne	1f27c <main@@Base+0xbf9c>
   1ecec:	ldrb	r2, [r1, #20]
   1ecf0:	cmp	r2, #46	; 0x2e
   1ecf4:	mov	r2, r0
   1ecf8:	addeq	r2, r1, #21
   1ecfc:	cmp	r2, r0
   1ed00:	beq	1f27c <main@@Base+0xbf9c>
   1ed04:	ldr	r0, [sp, #24]
   1ed08:	mov	r1, r2
   1ed0c:	mov	r2, r8
   1ed10:	mov	r3, lr
   1ed14:	sub	sp, fp, #28
   1ed18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed1c:	b	1dd3c <main@@Base+0xaa5c>
   1ed20:	add	r5, r6, #6
   1ed24:	subs	r4, r0, r5
   1ed28:	sbcs	r2, r2, r3
   1ed2c:	bcs	1ee50 <main@@Base+0xbb70>
   1ed30:	add	r2, r6, #1
   1ed34:	eor	r0, r0, r2
   1ed38:	orrs	r0, r0, r7
   1ed3c:	bne	1f27c <main@@Base+0xbf9c>
   1ed40:	add	ip, r1, #16
   1ed44:	sub	r2, r8, ip
   1ed48:	cmp	r2, #8
   1ed4c:	mov	r0, r2
   1ed50:	movcs	r0, #8
   1ed54:	and	r0, r0, #15
   1ed58:	sub	r4, r0, #1
   1ed5c:	cmp	r4, #7
   1ed60:	bhi	1f27c <main@@Base+0xbf9c>
   1ed64:	add	r6, pc, #28
   1ed68:	mov	r9, #0
   1ed6c:	mov	lr, #0
   1ed70:	mov	sl, #0
   1ed74:	mov	r3, #0
   1ed78:	mov	r5, #0
   1ed7c:	mov	r7, #0
   1ed80:	mov	r0, #0
   1ed84:	ldr	pc, [r6, r4, lsl #2]
   1ed88:	andeq	lr, r1, r4, ror #27
   1ed8c:	ldrdeq	lr, [r1], -ip
   1ed90:	ldrdeq	lr, [r1], -r4
   1ed94:	andeq	lr, r1, ip, asr #27
   1ed98:	andeq	lr, r1, r0, asr #27
   1ed9c:			; <UNDEFINED> instruction: 0x0001edb0
   1eda0:	andeq	lr, r1, r8, lsr #27
   1eda4:	andeq	lr, r1, r8, lsr #27
   1eda8:	ldrb	r0, [r1, #22]
   1edac:	lsl	lr, r0, #8
   1edb0:	ldrb	r0, [r1, #21]
   1edb4:	mov	sl, r9
   1edb8:	orr	r0, lr, r0, lsl #16
   1edbc:	mov	r9, r0
   1edc0:	ldrb	r0, [r1, #20]
   1edc4:	mov	r3, sl
   1edc8:	orr	r9, r9, r0, lsl #24
   1edcc:	ldrb	r0, [r1, #19]
   1edd0:	orr	r5, r0, r3
   1edd4:	ldrb	r0, [r1, #18]
   1edd8:	orr	r7, r5, r0, lsl #8
   1eddc:	ldrb	r0, [r1, #17]
   1ede0:	orr	r0, r7, r0, lsl #16
   1ede4:	cmp	r2, #8
   1ede8:	blt	1f27c <main@@Base+0xbf9c>
   1edec:	ldrb	r3, [ip]
   1edf0:	movw	r2, #24421	; 0x5f65
   1edf4:	movt	r2, #25959	; 0x6567
   1edf8:	add	r2, r2, #851968	; 0xd0000
   1edfc:	add	r2, r2, #150994944	; 0x9000000
   1ee00:	orr	r0, r0, r3, lsl #24
   1ee04:	movw	r3, #27904	; 0x6d00
   1ee08:	movt	r3, #28277	; 0x6e75
   1ee0c:	eor	r0, r0, r2
   1ee10:	eor	r3, r9, r3
   1ee14:	orrs	r0, r3, r0
   1ee18:	bne	1f27c <main@@Base+0xbf9c>
   1ee1c:	ldrb	r0, [r1, #23]
   1ee20:	ldr	r3, [sp, #12]
   1ee24:	mov	r2, ip
   1ee28:	cmp	r0, #46	; 0x2e
   1ee2c:	addeq	r2, r1, #24
   1ee30:	cmp	r2, ip
   1ee34:	beq	1f27c <main@@Base+0xbf9c>
   1ee38:	ldr	r0, [sp, #24]
   1ee3c:	mov	r1, r2
   1ee40:	mov	r2, r8
   1ee44:	sub	sp, fp, #28
   1ee48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee4c:	b	24fe0 <main@@Base+0x11d00>
   1ee50:	eor	r0, r0, r5
   1ee54:	orrs	r0, r0, r7
   1ee58:	bne	1f27c <main@@Base+0xbf9c>
   1ee5c:	add	lr, r1, #16
   1ee60:	sub	r2, r8, lr
   1ee64:	cmp	r2, #8
   1ee68:	mov	r0, r2
   1ee6c:	movcs	r0, #8
   1ee70:	and	r0, r0, #15
   1ee74:	sub	r7, r0, #1
   1ee78:	cmp	r7, #7
   1ee7c:	bhi	1f27c <main@@Base+0xbf9c>
   1ee80:	add	r3, pc, #36	; 0x24
   1ee84:	mov	r0, #0
   1ee88:	mov	sl, #0
   1ee8c:	mov	r9, #0
   1ee90:	mov	r4, #0
   1ee94:	mov	r6, #0
   1ee98:	mov	r5, #0
   1ee9c:	mov	ip, #0
   1eea0:	str	r0, [sp, #8]
   1eea4:	mov	r0, #0
   1eea8:	ldr	pc, [r3, r7, lsl #2]
   1eeac:	andeq	lr, r1, r8, lsl pc
   1eeb0:	andeq	lr, r1, r0, lsl pc
   1eeb4:	andeq	lr, r1, r8, lsl #30
   1eeb8:	andeq	lr, r1, r0, lsl #30
   1eebc:	strdeq	lr, [r1], -r4
   1eec0:	andeq	lr, r1, r8, ror #29
   1eec4:	ldrdeq	lr, [r1], -r4
   1eec8:	andeq	lr, r1, ip, asr #29
   1eecc:	ldrb	r0, [r1, #23]
   1eed0:	str	r0, [sp, #8]
   1eed4:	ldrb	r0, [r1, #22]
   1eed8:	ldr	r3, [sp, #8]
   1eedc:	mov	r9, sl
   1eee0:	orr	r0, r3, r0, lsl #8
   1eee4:	mov	sl, r0
   1eee8:	ldrb	r0, [r1, #21]
   1eeec:	mov	r4, r9
   1eef0:	orr	sl, sl, r0, lsl #16
   1eef4:	ldrb	r0, [r1, #20]
   1eef8:	mov	r6, r4
   1eefc:	orr	sl, sl, r0, lsl #24
   1ef00:	ldrb	r0, [r1, #19]
   1ef04:	orr	r5, r0, r6
   1ef08:	ldrb	r0, [r1, #18]
   1ef0c:	orr	ip, r5, r0, lsl #8
   1ef10:	ldrb	r0, [r1, #17]
   1ef14:	orr	r0, ip, r0, lsl #16
   1ef18:	ldrb	r3, [lr]
   1ef1c:	movw	ip, #27904	; 0x6d00
   1ef20:	cmp	r2, #8
   1ef24:	movt	ip, #28277	; 0x6e75
   1ef28:	orr	r6, r0, r3, lsl #24
   1ef2c:	blt	1f004 <main@@Base+0xbd24>
   1ef30:	movw	r2, #24421	; 0x5f65
   1ef34:	bic	r0, sl, #255	; 0xff
   1ef38:	movt	r2, #25959	; 0x6567
   1ef3c:	eor	r0, r0, ip
   1ef40:	eor	r2, r6, r2
   1ef44:	orrs	r0, r0, r2
   1ef48:	bne	1f004 <main@@Base+0xbd24>
   1ef4c:	ldrb	r0, [r1, #23]
   1ef50:	mov	r2, lr
   1ef54:	cmp	r0, #46	; 0x2e
   1ef58:	addeq	r2, r1, #24
   1ef5c:	cmp	r2, lr
   1ef60:	beq	1f004 <main@@Base+0xbd24>
   1ef64:	ldr	r0, [sp, #24]
   1ef68:	ldr	r3, [sp, #12]
   1ef6c:	mov	r1, r2
   1ef70:	mov	r2, r8
   1ef74:	sub	sp, fp, #28
   1ef78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef7c:	b	251d4 <main@@Base+0x11ef4>
   1ef80:	add	r0, r1, #16
   1ef84:	sub	r2, r8, r0
   1ef88:	cmp	r2, #8
   1ef8c:	mov	r3, r2
   1ef90:	movcs	r3, #8
   1ef94:	and	r7, r3, #15
   1ef98:	sub	r3, r7, #2
   1ef9c:	cmp	r3, #7
   1efa0:	bcs	1f120 <main@@Base+0xbe40>
   1efa4:	ldrb	r3, [r1, #17]
   1efa8:	lsl	r7, r3, #16
   1efac:	mov	r3, #0
   1efb0:	cmp	r2, #3
   1efb4:	blt	1f27c <main@@Base+0xbf9c>
   1efb8:	ldrb	r2, [r0]
   1efbc:	orr	r2, r7, r2, lsl #24
   1efc0:	eor	r2, r2, #7274496	; 0x6f0000
   1efc4:	eor	r2, r2, #1862270976	; 0x6f000000
   1efc8:	orrs	r2, r3, r2
   1efcc:	bne	1f27c <main@@Base+0xbf9c>
   1efd0:	ldrb	r2, [r1, #18]
   1efd4:	cmp	r2, #46	; 0x2e
   1efd8:	mov	r2, r0
   1efdc:	addeq	r2, r1, #19
   1efe0:	cmp	r2, r0
   1efe4:	beq	1f27c <main@@Base+0xbf9c>
   1efe8:	ldr	r0, [sp, #24]
   1efec:	mov	r1, r2
   1eff0:	mov	r2, r8
   1eff4:	mov	r3, lr
   1eff8:	sub	sp, fp, #28
   1effc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f000:	b	24bc0 <main@@Base+0x118e0>
   1f004:	movw	r0, #31077	; 0x7965
   1f008:	movw	r2, #25965	; 0x656d
   1f00c:	movt	r0, #28788	; 0x7074
   1f010:	movt	r2, #28532	; 0x6f74
   1f014:	eor	r0, sl, r0
   1f018:	eor	r2, r6, r2
   1f01c:	orrs	r0, r0, r2
   1f020:	bne	1f27c <main@@Base+0xbf9c>
   1f024:	add	r0, r1, #24
   1f028:	sub	r2, r8, r0
   1f02c:	cmp	r2, #8
   1f030:	mov	r3, r2
   1f034:	movcs	r3, #8
   1f038:	and	r7, r3, #15
   1f03c:	sub	r3, r7, #3
   1f040:	cmp	r3, #6
   1f044:	bcs	1f1e8 <main@@Base+0xbf08>
   1f048:	ldrb	r3, [r1, #26]
   1f04c:	ldr	r4, [sp, #12]
   1f050:	lsl	r7, r3, #8
   1f054:	mov	r3, #0
   1f058:	ldrb	r6, [r1, #25]
   1f05c:	orr	r7, r7, r6, lsl #16
   1f060:	cmp	r2, #4
   1f064:	blt	1f27c <main@@Base+0xbf9c>
   1f068:	ldrb	r2, [r0]
   1f06c:	orr	r2, r7, r2, lsl #24
   1f070:	eor	r2, r2, ip
   1f074:	orrs	r2, r3, r2
   1f078:	bne	1f27c <main@@Base+0xbf9c>
   1f07c:	ldrb	r2, [r1, #27]
   1f080:	mov	r6, r0
   1f084:	cmp	r2, #46	; 0x2e
   1f088:	addeq	r6, r1, #28
   1f08c:	cmp	r6, r0
   1f090:	beq	1f27c <main@@Base+0xbf9c>
   1f094:	sub	r0, r8, r6
   1f098:	mov	r1, #-268435456	; 0xf0000000
   1f09c:	cmp	r0, #8
   1f0a0:	movcs	r0, #8
   1f0a4:	add	r0, r1, r0, lsl #28
   1f0a8:	asr	r0, r0, #28
   1f0ac:	cmp	r0, #0
   1f0b0:	blt	1f228 <main@@Base+0xbf48>
   1f0b4:	ldrb	r0, [r6]
   1f0b8:	cmp	r0, #120	; 0x78
   1f0bc:	bne	1f248 <main@@Base+0xbf68>
   1f0c0:	ldr	r0, [sp, #20]
   1f0c4:	mov	r1, r6
   1f0c8:	mov	r2, r8
   1f0cc:	mov	r3, #1
   1f0d0:	str	r0, [sp]
   1f0d4:	ldr	r0, [sp, #24]
   1f0d8:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1f0dc:	cmp	r0, r6
   1f0e0:	mov	r1, r6
   1f0e4:	beq	1f27c <main@@Base+0xbf9c>
   1f0e8:	ldr	r2, [sp, #16]
   1f0ec:	mov	r1, #0
   1f0f0:	str	r1, [r2]
   1f0f4:	str	r1, [r2, #4]
   1f0f8:	str	r1, [r4]
   1f0fc:	mov	r1, r0
   1f100:	mov	r0, r1
   1f104:	sub	sp, fp, #28
   1f108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f10c:	cmp	r7, #1
   1f110:	mov	r3, #0
   1f114:	mov	r7, #0
   1f118:	beq	1e6e8 <main@@Base+0xb408>
   1f11c:	b	1f27c <main@@Base+0xbf9c>
   1f120:	cmp	r7, #1
   1f124:	mov	r3, #0
   1f128:	mov	r7, #0
   1f12c:	beq	1efb0 <main@@Base+0xbcd0>
   1f130:	b	1f27c <main@@Base+0xbf9c>
   1f134:	movw	r0, #25942	; 0x6556
   1f138:	movw	r1, #25452	; 0x636c
   1f13c:	movt	r0, #30052	; 0x7564
   1f140:	movt	r1, #18798	; 0x496e
   1f144:	eor	r0, sl, r0
   1f148:	eor	r1, r6, r1
   1f14c:	orrs	r0, r0, r1
   1f150:	bne	1f208 <main@@Base+0xbf28>
   1f154:	add	r6, r7, #8
   1f158:	sub	r0, r8, r6
   1f15c:	cmp	r0, #8
   1f160:	movcs	r0, #8
   1f164:	and	r1, r0, #15
   1f168:	sub	r0, r1, #2
   1f16c:	cmp	r0, #7
   1f170:	bcs	1f268 <main@@Base+0xbf88>
   1f174:	ldrb	r0, [r7, #9]
   1f178:	lsl	r1, r0, #16
   1f17c:	mov	r0, #0
   1f180:	ldrb	r2, [r6]
   1f184:	orr	r1, r1, r2, lsl #24
   1f188:	eor	r1, r1, #23855104	; 0x16c0000
   1f18c:	eor	r1, r1, #1610612736	; 0x60000000
   1f190:	orrs	r0, r0, r1
   1f194:	bne	1f238 <main@@Base+0xbf58>
   1f198:	ldr	r0, [sp, #20]
   1f19c:	mov	r1, r6
   1f1a0:	mov	r2, r8
   1f1a4:	mov	r3, #2
   1f1a8:	str	r0, [sp]
   1f1ac:	mov	r0, r4
   1f1b0:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   1f1b4:	cmp	r0, r6
   1f1b8:	mov	r1, r7
   1f1bc:	beq	1f27c <main@@Base+0xbf9c>
   1f1c0:	mov	r2, #0
   1f1c4:	mov	r3, #0
   1f1c8:	mov	r1, r0
   1f1cc:	ldr	r0, [sp, #16]
   1f1d0:	strd	r2, [r0]
   1f1d4:	mov	r0, #0
   1f1d8:	str	r0, [r9]
   1f1dc:	mov	r0, r1
   1f1e0:	sub	sp, fp, #28
   1f1e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1e8:	ldr	r4, [sp, #12]
   1f1ec:	mov	r3, #0
   1f1f0:	cmp	r7, #1
   1f1f4:	beq	1f218 <main@@Base+0xbf38>
   1f1f8:	cmp	r7, #2
   1f1fc:	mov	r7, #0
   1f200:	beq	1f058 <main@@Base+0xbd78>
   1f204:	b	1f27c <main@@Base+0xbf9c>
   1f208:	mov	r1, r7
   1f20c:	mov	r0, r1
   1f210:	sub	sp, fp, #28
   1f214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f218:	mov	r7, #0
   1f21c:	cmp	r2, #4
   1f220:	bge	1f068 <main@@Base+0xbd88>
   1f224:	b	1f27c <main@@Base+0xbf9c>
   1f228:	mov	r1, r6
   1f22c:	mov	r0, r1
   1f230:	sub	sp, fp, #28
   1f234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f238:	mov	r1, r7
   1f23c:	mov	r0, r1
   1f240:	sub	sp, fp, #28
   1f244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f248:	mov	r1, r6
   1f24c:	mov	r0, r1
   1f250:	sub	sp, fp, #28
   1f254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f258:	mov	r1, r7
   1f25c:	mov	r0, r1
   1f260:	sub	sp, fp, #28
   1f264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f268:	cmp	r1, #1
   1f26c:	mov	r0, #0
   1f270:	mov	r1, #0
   1f274:	beq	1f180 <main@@Base+0xbea0>
   1f278:	mov	r1, r7
   1f27c:	mov	r0, r1
   1f280:	sub	sp, fp, #28
   1f284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f28c:	add	fp, sp, #28
   1f290:	sub	sp, sp, #44	; 0x2c
   1f294:	mov	r6, r2
   1f298:	ldr	r2, [fp, #8]
   1f29c:	mov	r5, r0
   1f2a0:	mov	r0, #0
   1f2a4:	mov	sl, r3
   1f2a8:	cmp	r1, r6
   1f2ac:	strb	r0, [r2]
   1f2b0:	beq	1f2d4 <main@@Base+0xbff4>
   1f2b4:	ldrb	r0, [r1]
   1f2b8:	cmp	r0, #46	; 0x2e
   1f2bc:	beq	1f2fc <main@@Base+0xc01c>
   1f2c0:	cmp	r0, #34	; 0x22
   1f2c4:	bne	1f4dc <main@@Base+0xc1fc>
   1f2c8:	mov	r0, #0
   1f2cc:	add	r1, r1, #1
   1f2d0:	str	r0, [r5, #12]
   1f2d4:	ldr	r0, [r5, #12]
   1f2d8:	cmp	r0, #0
   1f2dc:	beq	1f31c <main@@Base+0xc03c>
   1f2e0:	mov	r7, r1
   1f2e4:	cmp	r7, r6
   1f2e8:	bne	1f360 <main@@Base+0xc080>
   1f2ec:	mov	r4, r6
   1f2f0:	mov	r0, r4
   1f2f4:	sub	sp, fp, #28
   1f2f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2fc:	mov	r0, r5
   1f300:	mov	r2, r6
   1f304:	mov	r3, #5
   1f308:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f30c:	mov	r1, r0
   1f310:	ldr	r0, [r5, #12]
   1f314:	cmp	r0, #0
   1f318:	bne	1f2e0 <main@@Base+0xc000>
   1f31c:	sub	r0, r6, r1
   1f320:	cmp	r0, #2
   1f324:	blt	1f348 <main@@Base+0xc068>
   1f328:	ldrb	r0, [r1]
   1f32c:	cmp	r0, #32
   1f330:	bhi	1f2e0 <main@@Base+0xc000>
   1f334:	bne	1f348 <main@@Base+0xc068>
   1f338:	mov	r7, r1
   1f33c:	ldrb	r0, [r7, #1]!
   1f340:	cmp	r0, #32
   1f344:	bhi	1f358 <main@@Base+0xc078>
   1f348:	mov	r0, r5
   1f34c:	mov	r2, r6
   1f350:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1f354:	mov	r7, r0
   1f358:	cmp	r7, r6
   1f35c:	beq	1f2ec <main@@Base+0xc00c>
   1f360:	add	r0, sl, #4
   1f364:	mov	r1, #0
   1f368:	mov	r2, #0
   1f36c:	add	r8, sp, #32
   1f370:	add	r9, sp, #28
   1f374:	str	sl, [sp, #12]
   1f378:	str	r1, [sp, #20]
   1f37c:	str	r0, [sp, #8]
   1f380:	ldr	r4, [sl]
   1f384:	mov	sl, r0
   1f388:	str	r2, [sp, #16]
   1f38c:	add	r0, sp, #24
   1f390:	mov	r1, r7
   1f394:	mov	r2, r6
   1f398:	mov	r3, r9
   1f39c:	str	r8, [sp]
   1f3a0:	str	r0, [sp, #4]
   1f3a4:	mov	r0, r5
   1f3a8:	blx	r4
   1f3ac:	cmp	r0, r6
   1f3b0:	beq	1f4a8 <main@@Base+0xc1c8>
   1f3b4:	mov	r4, r0
   1f3b8:	cmp	r0, r7
   1f3bc:	bne	1f3d0 <main@@Base+0xc0f0>
   1f3c0:	ldr	r4, [sl], #4
   1f3c4:	cmp	r4, #0
   1f3c8:	bne	1f38c <main@@Base+0xc0ac>
   1f3cc:	b	1f4b8 <main@@Base+0xc1d8>
   1f3d0:	ldr	r7, [sp, #20]
   1f3d4:	cmp	r7, #0
   1f3d8:	ldrne	r0, [r5, #12]
   1f3dc:	cmpne	r0, #0
   1f3e0:	bne	1f504 <main@@Base+0xc224>
   1f3e4:	ldr	r2, [sp, #28]
   1f3e8:	ldr	r0, [sp, #32]
   1f3ec:	ldr	r1, [sp, #36]	; 0x24
   1f3f0:	cmp	r2, #0
   1f3f4:	beq	1f41c <main@@Base+0xc13c>
   1f3f8:	ldr	sl, [sp, #12]
   1f3fc:	subs	r2, r0, #129	; 0x81
   1f400:	sbcs	r1, r1, #0
   1f404:	bcc	1f450 <main@@Base+0xc170>
   1f408:	mov	r0, r5
   1f40c:	mov	r1, r4
   1f410:	mov	r2, r6
   1f414:	mov	r3, #8
   1f418:	b	1f43c <main@@Base+0xc15c>
   1f41c:	ldr	sl, [sp, #12]
   1f420:	subs	r2, r0, #128	; 0x80
   1f424:	sbcs	r1, r1, #0
   1f428:	bcc	1f464 <main@@Base+0xc184>
   1f42c:	mov	r0, r5
   1f430:	mov	r1, r4
   1f434:	mov	r2, r6
   1f438:	mov	r3, #7
   1f43c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f440:	ldr	r2, [sp, #16]
   1f444:	cmp	r0, r6
   1f448:	bne	1f474 <main@@Base+0xc194>
   1f44c:	b	1f4f4 <main@@Base+0xc214>
   1f450:	rsb	r2, r0, #0
   1f454:	mov	r0, r4
   1f458:	cmp	r0, r6
   1f45c:	bne	1f474 <main@@Base+0xc194>
   1f460:	b	1f4f4 <main@@Base+0xc214>
   1f464:	mov	r2, r0
   1f468:	mov	r0, r4
   1f46c:	cmp	r0, r6
   1f470:	beq	1f4f4 <main@@Base+0xc214>
   1f474:	ldr	r0, [fp, #8]
   1f478:	add	r7, r7, #1
   1f47c:	str	r7, [sp, #20]
   1f480:	mov	r7, r4
   1f484:	mov	r1, r0
   1f488:	ldrb	r0, [r0]
   1f48c:	add	r0, r0, r2
   1f490:	strb	r0, [r1]
   1f494:	ldr	r0, [sp, #24]
   1f498:	cmp	r0, #0
   1f49c:	ldr	r0, [sp, #8]
   1f4a0:	bne	1f380 <main@@Base+0xc0a0>
   1f4a4:	b	1f2f0 <main@@Base+0xc010>
   1f4a8:	mov	r4, r6
   1f4ac:	mov	r0, r4
   1f4b0:	sub	sp, fp, #28
   1f4b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4b8:	mov	r0, r5
   1f4bc:	mov	r1, r7
   1f4c0:	mov	r2, r6
   1f4c4:	mov	r3, #23
   1f4c8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f4cc:	mov	r4, r0
   1f4d0:	mov	r0, r4
   1f4d4:	sub	sp, fp, #28
   1f4d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4dc:	mov	r0, #1
   1f4e0:	str	r0, [r5, #12]
   1f4e4:	ldr	r0, [r5, #12]
   1f4e8:	cmp	r0, #0
   1f4ec:	bne	1f2e0 <main@@Base+0xc000>
   1f4f0:	b	1f31c <main@@Base+0xc03c>
   1f4f4:	mov	r4, r6
   1f4f8:	mov	r0, r4
   1f4fc:	sub	sp, fp, #28
   1f500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f504:	mov	r0, r5
   1f508:	mov	r1, r4
   1f50c:	mov	r2, r6
   1f510:	mov	r3, #14
   1f514:	b	1f4c8 <main@@Base+0xc1e8>
   1f518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f51c:	add	fp, sp, #28
   1f520:	sub	sp, sp, #44	; 0x2c
   1f524:	mov	r6, r2
   1f528:	ldr	r2, [fp, #8]
   1f52c:	mov	r5, r0
   1f530:	mov	r0, #0
   1f534:	mov	sl, r3
   1f538:	cmp	r1, r6
   1f53c:	strb	r0, [r2]
   1f540:	beq	1f564 <main@@Base+0xc284>
   1f544:	ldrb	r0, [r1]
   1f548:	cmp	r0, #46	; 0x2e
   1f54c:	beq	1f58c <main@@Base+0xc2ac>
   1f550:	cmp	r0, #34	; 0x22
   1f554:	bne	1f758 <main@@Base+0xc478>
   1f558:	mov	r0, #0
   1f55c:	add	r1, r1, #1
   1f560:	str	r0, [r5, #12]
   1f564:	ldr	r0, [r5, #12]
   1f568:	cmp	r0, #0
   1f56c:	beq	1f5ac <main@@Base+0xc2cc>
   1f570:	mov	r7, r1
   1f574:	cmp	r7, r6
   1f578:	bne	1f5f0 <main@@Base+0xc310>
   1f57c:	mov	r4, r6
   1f580:	mov	r0, r4
   1f584:	sub	sp, fp, #28
   1f588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f58c:	mov	r0, r5
   1f590:	mov	r2, r6
   1f594:	mov	r3, #5
   1f598:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f59c:	mov	r1, r0
   1f5a0:	ldr	r0, [r5, #12]
   1f5a4:	cmp	r0, #0
   1f5a8:	bne	1f570 <main@@Base+0xc290>
   1f5ac:	sub	r0, r6, r1
   1f5b0:	cmp	r0, #2
   1f5b4:	blt	1f5d8 <main@@Base+0xc2f8>
   1f5b8:	ldrb	r0, [r1]
   1f5bc:	cmp	r0, #32
   1f5c0:	bhi	1f570 <main@@Base+0xc290>
   1f5c4:	bne	1f5d8 <main@@Base+0xc2f8>
   1f5c8:	mov	r7, r1
   1f5cc:	ldrb	r0, [r7, #1]!
   1f5d0:	cmp	r0, #32
   1f5d4:	bhi	1f5e8 <main@@Base+0xc308>
   1f5d8:	mov	r0, r5
   1f5dc:	mov	r2, r6
   1f5e0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1f5e4:	mov	r7, r0
   1f5e8:	cmp	r7, r6
   1f5ec:	beq	1f57c <main@@Base+0xc29c>
   1f5f0:	mov	r1, #0
   1f5f4:	add	r0, sl, #4
   1f5f8:	add	r8, sp, #32
   1f5fc:	add	r9, sp, #28
   1f600:	str	sl, [sp, #12]
   1f604:	str	r1, [sp, #16]
   1f608:	mov	r1, #0
   1f60c:	str	r0, [sp, #8]
   1f610:	str	r1, [sp, #20]
   1f614:	ldr	r4, [sl]
   1f618:	mov	sl, r0
   1f61c:	add	r0, sp, #24
   1f620:	mov	r1, r7
   1f624:	mov	r2, r6
   1f628:	mov	r3, r9
   1f62c:	str	r8, [sp]
   1f630:	str	r0, [sp, #4]
   1f634:	mov	r0, r5
   1f638:	blx	r4
   1f63c:	cmp	r0, r6
   1f640:	beq	1f724 <main@@Base+0xc444>
   1f644:	mov	r4, r0
   1f648:	cmp	r0, r7
   1f64c:	bne	1f660 <main@@Base+0xc380>
   1f650:	ldr	r4, [sl], #4
   1f654:	cmp	r4, #0
   1f658:	bne	1f61c <main@@Base+0xc33c>
   1f65c:	b	1f734 <main@@Base+0xc454>
   1f660:	ldr	r7, [sp, #20]
   1f664:	cmp	r7, #0
   1f668:	ldrne	r0, [r5, #12]
   1f66c:	cmpne	r0, #0
   1f670:	bne	1f780 <main@@Base+0xc4a0>
   1f674:	ldr	r0, [sp, #28]
   1f678:	cmp	r0, #0
   1f67c:	beq	1f6a4 <main@@Base+0xc3c4>
   1f680:	mov	r0, r5
   1f684:	mov	r1, r4
   1f688:	mov	r2, r6
   1f68c:	mov	r3, #8
   1f690:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f694:	ldr	sl, [sp, #12]
   1f698:	cmp	r0, r6
   1f69c:	bne	1f6ec <main@@Base+0xc40c>
   1f6a0:	b	1f770 <main@@Base+0xc490>
   1f6a4:	ldr	r0, [sp, #32]
   1f6a8:	ldr	r1, [sp, #36]	; 0x24
   1f6ac:	ldr	sl, [sp, #12]
   1f6b0:	subs	r2, r0, #256	; 0x100
   1f6b4:	sbcs	r1, r1, #0
   1f6b8:	bcc	1f6dc <main@@Base+0xc3fc>
   1f6bc:	mov	r0, r5
   1f6c0:	mov	r1, r4
   1f6c4:	mov	r2, r6
   1f6c8:	mov	r3, #7
   1f6cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f6d0:	cmp	r0, r6
   1f6d4:	bne	1f6ec <main@@Base+0xc40c>
   1f6d8:	b	1f770 <main@@Base+0xc490>
   1f6dc:	str	r0, [sp, #16]
   1f6e0:	mov	r0, r4
   1f6e4:	cmp	r0, r6
   1f6e8:	beq	1f770 <main@@Base+0xc490>
   1f6ec:	ldr	r0, [fp, #8]
   1f6f0:	ldr	r2, [sp, #16]
   1f6f4:	add	r7, r7, #1
   1f6f8:	str	r7, [sp, #20]
   1f6fc:	mov	r7, r4
   1f700:	mov	r1, r0
   1f704:	ldrb	r0, [r0]
   1f708:	add	r0, r0, r2
   1f70c:	strb	r0, [r1]
   1f710:	ldr	r0, [sp, #24]
   1f714:	cmp	r0, #0
   1f718:	ldr	r0, [sp, #8]
   1f71c:	bne	1f614 <main@@Base+0xc334>
   1f720:	b	1f580 <main@@Base+0xc2a0>
   1f724:	mov	r4, r6
   1f728:	mov	r0, r4
   1f72c:	sub	sp, fp, #28
   1f730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f734:	mov	r0, r5
   1f738:	mov	r1, r7
   1f73c:	mov	r2, r6
   1f740:	mov	r3, #23
   1f744:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f748:	mov	r4, r0
   1f74c:	mov	r0, r4
   1f750:	sub	sp, fp, #28
   1f754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f758:	mov	r0, #1
   1f75c:	str	r0, [r5, #12]
   1f760:	ldr	r0, [r5, #12]
   1f764:	cmp	r0, #0
   1f768:	bne	1f570 <main@@Base+0xc290>
   1f76c:	b	1f5ac <main@@Base+0xc2cc>
   1f770:	mov	r4, r6
   1f774:	mov	r0, r4
   1f778:	sub	sp, fp, #28
   1f77c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f780:	mov	r0, r5
   1f784:	mov	r1, r4
   1f788:	mov	r2, r6
   1f78c:	mov	r3, #14
   1f790:	b	1f744 <main@@Base+0xc464>
   1f794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f798:	add	fp, sp, #28
   1f79c:	sub	sp, sp, #44	; 0x2c
   1f7a0:	mov	r6, r2
   1f7a4:	ldr	r2, [fp, #8]
   1f7a8:	mov	r5, r0
   1f7ac:	mov	r0, #0
   1f7b0:	mov	sl, r3
   1f7b4:	cmp	r1, r6
   1f7b8:	strh	r0, [r2]
   1f7bc:	beq	1f7e0 <main@@Base+0xc500>
   1f7c0:	ldrb	r0, [r1]
   1f7c4:	cmp	r0, #46	; 0x2e
   1f7c8:	beq	1f808 <main@@Base+0xc528>
   1f7cc:	cmp	r0, #34	; 0x22
   1f7d0:	bne	1f9ec <main@@Base+0xc70c>
   1f7d4:	mov	r0, #0
   1f7d8:	add	r1, r1, #1
   1f7dc:	str	r0, [r5, #12]
   1f7e0:	ldr	r0, [r5, #12]
   1f7e4:	cmp	r0, #0
   1f7e8:	beq	1f828 <main@@Base+0xc548>
   1f7ec:	mov	r7, r1
   1f7f0:	cmp	r7, r6
   1f7f4:	bne	1f86c <main@@Base+0xc58c>
   1f7f8:	mov	r4, r6
   1f7fc:	mov	r0, r4
   1f800:	sub	sp, fp, #28
   1f804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f808:	mov	r0, r5
   1f80c:	mov	r2, r6
   1f810:	mov	r3, #5
   1f814:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f818:	mov	r1, r0
   1f81c:	ldr	r0, [r5, #12]
   1f820:	cmp	r0, #0
   1f824:	bne	1f7ec <main@@Base+0xc50c>
   1f828:	sub	r0, r6, r1
   1f82c:	cmp	r0, #2
   1f830:	blt	1f854 <main@@Base+0xc574>
   1f834:	ldrb	r0, [r1]
   1f838:	cmp	r0, #32
   1f83c:	bhi	1f7ec <main@@Base+0xc50c>
   1f840:	bne	1f854 <main@@Base+0xc574>
   1f844:	mov	r7, r1
   1f848:	ldrb	r0, [r7, #1]!
   1f84c:	cmp	r0, #32
   1f850:	bhi	1f864 <main@@Base+0xc584>
   1f854:	mov	r0, r5
   1f858:	mov	r2, r6
   1f85c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1f860:	mov	r7, r0
   1f864:	cmp	r7, r6
   1f868:	beq	1f7f8 <main@@Base+0xc518>
   1f86c:	add	r0, sl, #4
   1f870:	mov	r1, #0
   1f874:	mov	r2, #0
   1f878:	add	r8, sp, #32
   1f87c:	add	r9, sp, #28
   1f880:	str	sl, [sp, #12]
   1f884:	str	r1, [sp, #20]
   1f888:	str	r0, [sp, #8]
   1f88c:	ldr	r4, [sl]
   1f890:	mov	sl, r0
   1f894:	str	r2, [sp, #16]
   1f898:	add	r0, sp, #24
   1f89c:	mov	r1, r7
   1f8a0:	mov	r2, r6
   1f8a4:	mov	r3, r9
   1f8a8:	str	r8, [sp]
   1f8ac:	str	r0, [sp, #4]
   1f8b0:	mov	r0, r5
   1f8b4:	blx	r4
   1f8b8:	cmp	r0, r6
   1f8bc:	beq	1f9b8 <main@@Base+0xc6d8>
   1f8c0:	mov	r4, r0
   1f8c4:	cmp	r0, r7
   1f8c8:	bne	1f8dc <main@@Base+0xc5fc>
   1f8cc:	ldr	r4, [sl], #4
   1f8d0:	cmp	r4, #0
   1f8d4:	bne	1f898 <main@@Base+0xc5b8>
   1f8d8:	b	1f9c8 <main@@Base+0xc6e8>
   1f8dc:	ldr	r7, [sp, #20]
   1f8e0:	cmp	r7, #0
   1f8e4:	ldrne	r0, [r5, #12]
   1f8e8:	cmpne	r0, #0
   1f8ec:	bne	1fa14 <main@@Base+0xc734>
   1f8f0:	ldr	r2, [sp, #28]
   1f8f4:	ldr	r0, [sp, #32]
   1f8f8:	ldr	r1, [sp, #36]	; 0x24
   1f8fc:	cmp	r2, #0
   1f900:	beq	1f92c <main@@Base+0xc64c>
   1f904:	ldr	sl, [sp, #12]
   1f908:	movw	r2, #32769	; 0x8001
   1f90c:	subs	r2, r0, r2
   1f910:	sbcs	r1, r1, #0
   1f914:	bcc	1f960 <main@@Base+0xc680>
   1f918:	mov	r0, r5
   1f91c:	mov	r1, r4
   1f920:	mov	r2, r6
   1f924:	mov	r3, #8
   1f928:	b	1f94c <main@@Base+0xc66c>
   1f92c:	ldr	sl, [sp, #12]
   1f930:	subs	r2, r0, #32768	; 0x8000
   1f934:	sbcs	r1, r1, #0
   1f938:	bcc	1f974 <main@@Base+0xc694>
   1f93c:	mov	r0, r5
   1f940:	mov	r1, r4
   1f944:	mov	r2, r6
   1f948:	mov	r3, #7
   1f94c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f950:	ldr	r2, [sp, #16]
   1f954:	cmp	r0, r6
   1f958:	bne	1f984 <main@@Base+0xc6a4>
   1f95c:	b	1fa04 <main@@Base+0xc724>
   1f960:	rsb	r2, r0, #0
   1f964:	mov	r0, r4
   1f968:	cmp	r0, r6
   1f96c:	bne	1f984 <main@@Base+0xc6a4>
   1f970:	b	1fa04 <main@@Base+0xc724>
   1f974:	mov	r2, r0
   1f978:	mov	r0, r4
   1f97c:	cmp	r0, r6
   1f980:	beq	1fa04 <main@@Base+0xc724>
   1f984:	ldr	r0, [fp, #8]
   1f988:	add	r7, r7, #1
   1f98c:	str	r7, [sp, #20]
   1f990:	mov	r7, r4
   1f994:	mov	r1, r0
   1f998:	ldrh	r0, [r0]
   1f99c:	add	r0, r0, r2
   1f9a0:	strh	r0, [r1]
   1f9a4:	ldr	r0, [sp, #24]
   1f9a8:	cmp	r0, #0
   1f9ac:	ldr	r0, [sp, #8]
   1f9b0:	bne	1f88c <main@@Base+0xc5ac>
   1f9b4:	b	1f7fc <main@@Base+0xc51c>
   1f9b8:	mov	r4, r6
   1f9bc:	mov	r0, r4
   1f9c0:	sub	sp, fp, #28
   1f9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9c8:	mov	r0, r5
   1f9cc:	mov	r1, r7
   1f9d0:	mov	r2, r6
   1f9d4:	mov	r3, #23
   1f9d8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1f9dc:	mov	r4, r0
   1f9e0:	mov	r0, r4
   1f9e4:	sub	sp, fp, #28
   1f9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9ec:	mov	r0, #1
   1f9f0:	str	r0, [r5, #12]
   1f9f4:	ldr	r0, [r5, #12]
   1f9f8:	cmp	r0, #0
   1f9fc:	bne	1f7ec <main@@Base+0xc50c>
   1fa00:	b	1f828 <main@@Base+0xc548>
   1fa04:	mov	r4, r6
   1fa08:	mov	r0, r4
   1fa0c:	sub	sp, fp, #28
   1fa10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa14:	mov	r0, r5
   1fa18:	mov	r1, r4
   1fa1c:	mov	r2, r6
   1fa20:	mov	r3, #14
   1fa24:	b	1f9d8 <main@@Base+0xc6f8>
   1fa28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa2c:	add	fp, sp, #28
   1fa30:	sub	sp, sp, #28
   1fa34:	mov	r7, r2
   1fa38:	mov	r5, r0
   1fa3c:	cmp	r1, r2
   1fa40:	beq	1fab8 <main@@Base+0xc7d8>
   1fa44:	ldrb	r0, [r1]
   1fa48:	cmp	r0, #123	; 0x7b
   1fa4c:	bne	1fab8 <main@@Base+0xc7d8>
   1fa50:	add	r2, r1, #1
   1fa54:	mov	sl, r3
   1fa58:	sub	r0, r7, r2
   1fa5c:	cmp	r0, #2
   1fa60:	blt	1fae8 <main@@Base+0xc808>
   1fa64:	ldrb	r0, [r2]
   1fa68:	cmp	r0, #32
   1fa6c:	bls	1fad8 <main@@Base+0xc7f8>
   1fa70:	mov	r1, r2
   1fa74:	cmp	r1, r7
   1fa78:	mov	r2, r7
   1fa7c:	beq	1fb08 <main@@Base+0xc828>
   1fa80:	ldrb	r0, [r1]
   1fa84:	cmp	r0, #125	; 0x7d
   1fa88:	bne	1fad0 <main@@Base+0xc7f0>
   1fa8c:	add	r2, r1, #1
   1fa90:	sub	r0, r7, r2
   1fa94:	cmp	r0, #2
   1fa98:	blt	20214 <main@@Base+0xcf34>
   1fa9c:	ldrb	r0, [r2]
   1faa0:	cmp	r0, #32
   1faa4:	bls	20204 <main@@Base+0xcf24>
   1faa8:	mov	r1, r2
   1faac:	mov	r0, r1
   1fab0:	sub	sp, fp, #28
   1fab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fab8:	mov	r0, r5
   1fabc:	mov	r2, r7
   1fac0:	mov	r3, #21
   1fac4:	sub	sp, fp, #28
   1fac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1facc:	b	30170 <flatcc_json_parser_set_error@@Base>
   1fad0:	mov	r2, r1
   1fad4:	b	1fb08 <main@@Base+0xc828>
   1fad8:	bne	1fae8 <main@@Base+0xc808>
   1fadc:	ldrb	r0, [r1, #2]!
   1fae0:	cmp	r0, #32
   1fae4:	bhi	1fafc <main@@Base+0xc81c>
   1fae8:	mov	r1, r2
   1faec:	mov	r0, r5
   1faf0:	mov	r2, r7
   1faf4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1faf8:	mov	r1, r0
   1fafc:	cmp	r1, r7
   1fb00:	mov	r2, r7
   1fb04:	bne	1fa80 <main@@Base+0xc7a0>
   1fb08:	movw	r0, #33152	; 0x8180
   1fb0c:	mov	r8, #-268435456	; 0xf0000000
   1fb10:	mov	r9, #1627389952	; 0x61000000
   1fb14:	movt	r0, #4
   1fb18:	add	r0, r0, #60	; 0x3c
   1fb1c:	str	r0, [sp, #4]
   1fb20:	cmp	r2, r7
   1fb24:	mov	r4, r7
   1fb28:	beq	1fb74 <main@@Base+0xc894>
   1fb2c:	ldrb	r0, [r2]
   1fb30:	cmp	r0, #46	; 0x2e
   1fb34:	beq	1fb4c <main@@Base+0xc86c>
   1fb38:	cmp	r0, #34	; 0x22
   1fb3c:	bne	1fb68 <main@@Base+0xc888>
   1fb40:	mov	r0, #0
   1fb44:	add	r4, r2, #1
   1fb48:	b	1fb70 <main@@Base+0xc890>
   1fb4c:	mov	r1, r2
   1fb50:	mov	r0, r5
   1fb54:	mov	r2, r7
   1fb58:	mov	r3, #5
   1fb5c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1fb60:	mov	r4, r0
   1fb64:	b	1fb74 <main@@Base+0xc894>
   1fb68:	mov	r0, #1
   1fb6c:	mov	r4, r2
   1fb70:	str	r0, [r5, #12]
   1fb74:	sub	r0, r7, r4
   1fb78:	mov	r1, #8
   1fb7c:	cmp	r0, #8
   1fb80:	movcc	r1, r0
   1fb84:	add	r1, r8, r1, lsl #28
   1fb88:	asr	r1, r1, #28
   1fb8c:	cmp	r1, #0
   1fb90:	blt	20078 <main@@Base+0xcd98>
   1fb94:	ldrb	r1, [r4]
   1fb98:	teq	r9, r1, lsl #24
   1fb9c:	beq	1fc10 <main@@Base+0xc930>
   1fba0:	lsl	r1, r1, #24
   1fba4:	teq	r1, #1644167168	; 0x62000000
   1fba8:	bne	20078 <main@@Base+0xcd98>
   1fbac:	cmp	r0, #2
   1fbb0:	mov	r6, r4
   1fbb4:	blt	1fdcc <main@@Base+0xcaec>
   1fbb8:	mov	r1, r4
   1fbbc:	ldr	r2, [r5, #12]
   1fbc0:	ldrb	r0, [r1, #1]!
   1fbc4:	cmp	r2, #0
   1fbc8:	beq	1fc74 <main@@Base+0xc994>
   1fbcc:	cmp	r0, #33	; 0x21
   1fbd0:	bcc	1fbe0 <main@@Base+0xc900>
   1fbd4:	cmp	r0, #58	; 0x3a
   1fbd8:	mov	r6, r4
   1fbdc:	bne	1fdcc <main@@Base+0xcaec>
   1fbe0:	mov	r0, #0
   1fbe4:	str	r0, [r5, #12]
   1fbe8:	sub	r0, r7, r1
   1fbec:	cmp	r0, #2
   1fbf0:	blt	1fcc8 <main@@Base+0xc9e8>
   1fbf4:	ldrb	r0, [r1]
   1fbf8:	cmp	r0, #32
   1fbfc:	bls	1fcb4 <main@@Base+0xc9d4>
   1fc00:	mov	r6, r1
   1fc04:	cmp	r6, r7
   1fc08:	bne	1fce0 <main@@Base+0xca00>
   1fc0c:	b	1fd18 <main@@Base+0xca38>
   1fc10:	cmp	r0, #2
   1fc14:	mov	r6, r4
   1fc18:	blt	1ffe8 <main@@Base+0xcd08>
   1fc1c:	mov	r1, r4
   1fc20:	ldr	r2, [r5, #12]
   1fc24:	ldrb	r0, [r1, #1]!
   1fc28:	cmp	r2, #0
   1fc2c:	beq	1fc94 <main@@Base+0xc9b4>
   1fc30:	cmp	r0, #33	; 0x21
   1fc34:	bcc	1fc44 <main@@Base+0xc964>
   1fc38:	cmp	r0, #58	; 0x3a
   1fc3c:	mov	r6, r4
   1fc40:	bne	1ffe8 <main@@Base+0xcd08>
   1fc44:	mov	r0, #0
   1fc48:	str	r0, [r5, #12]
   1fc4c:	sub	r0, r7, r1
   1fc50:	cmp	r0, #2
   1fc54:	blt	1fd44 <main@@Base+0xca64>
   1fc58:	ldrb	r0, [r1]
   1fc5c:	cmp	r0, #32
   1fc60:	bls	1fd30 <main@@Base+0xca50>
   1fc64:	mov	r6, r1
   1fc68:	cmp	r6, r7
   1fc6c:	bne	1fd5c <main@@Base+0xca7c>
   1fc70:	b	1fd94 <main@@Base+0xcab4>
   1fc74:	cmp	r0, #34	; 0x22
   1fc78:	mov	r6, r4
   1fc7c:	bne	1fdcc <main@@Base+0xcaec>
   1fc80:	add	r1, r4, #2
   1fc84:	sub	r0, r7, r1
   1fc88:	cmp	r0, #2
   1fc8c:	bge	1fbf4 <main@@Base+0xc914>
   1fc90:	b	1fcc8 <main@@Base+0xc9e8>
   1fc94:	cmp	r0, #34	; 0x22
   1fc98:	mov	r6, r4
   1fc9c:	bne	1ffe8 <main@@Base+0xcd08>
   1fca0:	add	r1, r4, #2
   1fca4:	sub	r0, r7, r1
   1fca8:	cmp	r0, #2
   1fcac:	bge	1fc58 <main@@Base+0xc978>
   1fcb0:	b	1fd44 <main@@Base+0xca64>
   1fcb4:	bne	1fcc8 <main@@Base+0xc9e8>
   1fcb8:	mov	r6, r1
   1fcbc:	ldrb	r0, [r6, #1]!
   1fcc0:	cmp	r0, #32
   1fcc4:	bhi	1fcd8 <main@@Base+0xc9f8>
   1fcc8:	mov	r0, r5
   1fccc:	mov	r2, r7
   1fcd0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1fcd4:	mov	r6, r0
   1fcd8:	cmp	r6, r7
   1fcdc:	beq	1fd18 <main@@Base+0xca38>
   1fce0:	ldrb	r0, [r6]
   1fce4:	cmp	r0, #58	; 0x3a
   1fce8:	bne	1fd18 <main@@Base+0xca38>
   1fcec:	add	r1, r6, #1
   1fcf0:	sub	r0, r7, r1
   1fcf4:	cmp	r0, #2
   1fcf8:	blt	1fdbc <main@@Base+0xcadc>
   1fcfc:	ldrb	r0, [r1]
   1fd00:	cmp	r0, #32
   1fd04:	bls	1fdac <main@@Base+0xcacc>
   1fd08:	mov	r6, r1
   1fd0c:	cmp	r4, r6
   1fd10:	bne	1fdd4 <main@@Base+0xcaf4>
   1fd14:	b	20078 <main@@Base+0xcd98>
   1fd18:	mov	r0, r5
   1fd1c:	mov	r1, r6
   1fd20:	mov	r2, r7
   1fd24:	mov	r3, #4
   1fd28:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1fd2c:	b	1fdc8 <main@@Base+0xcae8>
   1fd30:	bne	1fd44 <main@@Base+0xca64>
   1fd34:	mov	r6, r1
   1fd38:	ldrb	r0, [r6, #1]!
   1fd3c:	cmp	r0, #32
   1fd40:	bhi	1fd54 <main@@Base+0xca74>
   1fd44:	mov	r0, r5
   1fd48:	mov	r2, r7
   1fd4c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1fd50:	mov	r6, r0
   1fd54:	cmp	r6, r7
   1fd58:	beq	1fd94 <main@@Base+0xcab4>
   1fd5c:	ldrb	r0, [r6]
   1fd60:	cmp	r0, #58	; 0x3a
   1fd64:	bne	1fd94 <main@@Base+0xcab4>
   1fd68:	add	r1, r6, #1
   1fd6c:	sub	r0, r7, r1
   1fd70:	cmp	r0, #2
   1fd74:	blt	1ffd8 <main@@Base+0xccf8>
   1fd78:	ldrb	r0, [r1]
   1fd7c:	cmp	r0, #32
   1fd80:	bls	1ffc8 <main@@Base+0xcce8>
   1fd84:	mov	r6, r1
   1fd88:	cmp	r4, r6
   1fd8c:	bne	1fff0 <main@@Base+0xcd10>
   1fd90:	b	20078 <main@@Base+0xcd98>
   1fd94:	mov	r0, r5
   1fd98:	mov	r1, r6
   1fd9c:	mov	r2, r7
   1fda0:	mov	r3, #4
   1fda4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1fda8:	b	1ffe4 <main@@Base+0xcd04>
   1fdac:	bne	1fdbc <main@@Base+0xcadc>
   1fdb0:	ldrb	r0, [r6, #2]!
   1fdb4:	cmp	r0, #32
   1fdb8:	bhi	1fdcc <main@@Base+0xcaec>
   1fdbc:	mov	r0, r5
   1fdc0:	mov	r2, r7
   1fdc4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1fdc8:	mov	r6, r0
   1fdcc:	cmp	r4, r6
   1fdd0:	beq	20078 <main@@Base+0xcd98>
   1fdd4:	mov	r4, #0
   1fdd8:	cmp	r6, r7
   1fddc:	str	r4, [sp, #20]
   1fde0:	str	r4, [sp, #16]
   1fde4:	strb	r4, [sp, #10]
   1fde8:	str	r4, [sp, #12]
   1fdec:	beq	1fe58 <main@@Base+0xcb78>
   1fdf0:	add	r0, sp, #16
   1fdf4:	mov	r1, r6
   1fdf8:	mov	r2, r7
   1fdfc:	add	r3, sp, #12
   1fe00:	str	r0, [sp]
   1fe04:	mov	r0, r5
   1fe08:	bl	326c4 <flatcc_json_parser_integer@@Base>
   1fe0c:	cmp	r0, r6
   1fe10:	beq	1ff1c <main@@Base+0xcc3c>
   1fe14:	ldr	r3, [sp, #12]
   1fe18:	mov	r1, r0
   1fe1c:	ldr	r0, [sp, #16]
   1fe20:	ldr	r2, [sp, #20]
   1fe24:	cmp	r3, #0
   1fe28:	beq	1ff2c <main@@Base+0xcc4c>
   1fe2c:	subs	r3, r0, #129	; 0x81
   1fe30:	sbcs	r2, r2, #0
   1fe34:	bcc	1ff58 <main@@Base+0xcc78>
   1fe38:	mov	r0, r5
   1fe3c:	mov	r2, r7
   1fe40:	mov	r3, #8
   1fe44:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1fe48:	mov	r1, r0
   1fe4c:	cmp	r6, r1
   1fe50:	bne	1fe64 <main@@Base+0xcb84>
   1fe54:	b	1ff7c <main@@Base+0xcc9c>
   1fe58:	mov	r1, r7
   1fe5c:	cmp	r6, r1
   1fe60:	beq	1ff7c <main@@Base+0xcc9c>
   1fe64:	strb	r4, [sl, #2]
   1fe68:	sub	r0, r7, r1
   1fe6c:	cmp	r0, #2
   1fe70:	blt	20098 <main@@Base+0xcdb8>
   1fe74:	ldrb	r0, [r1]
   1fe78:	cmp	r0, #32
   1fe7c:	bls	1fed0 <main@@Base+0xcbf0>
   1fe80:	mov	r2, r1
   1fe84:	cmp	r2, r7
   1fe88:	beq	20188 <main@@Base+0xcea8>
   1fe8c:	ldrb	r0, [r2]
   1fe90:	cmp	r0, #44	; 0x2c
   1fe94:	bne	20198 <main@@Base+0xceb8>
   1fe98:	add	r1, r2, #1
   1fe9c:	sub	r0, r7, r1
   1fea0:	cmp	r0, #2
   1fea4:	blt	1ff00 <main@@Base+0xcc20>
   1fea8:	ldrb	r0, [r1]
   1feac:	cmp	r0, #32
   1feb0:	bls	1fef0 <main@@Base+0xcc10>
   1feb4:	mov	r2, r1
   1feb8:	cmp	r2, r7
   1febc:	beq	201cc <main@@Base+0xceec>
   1fec0:	ldrb	r0, [r2]
   1fec4:	cmp	r0, #125	; 0x7d
   1fec8:	bne	1fb20 <main@@Base+0xc840>
   1fecc:	b	201d8 <main@@Base+0xcef8>
   1fed0:	bne	20098 <main@@Base+0xcdb8>
   1fed4:	mov	r2, r1
   1fed8:	ldrb	r0, [r2, #1]!
   1fedc:	cmp	r0, #32
   1fee0:	bls	20098 <main@@Base+0xcdb8>
   1fee4:	cmp	r2, r7
   1fee8:	bne	1fe8c <main@@Base+0xcbac>
   1feec:	b	20188 <main@@Base+0xcea8>
   1fef0:	bne	1ff00 <main@@Base+0xcc20>
   1fef4:	ldrb	r0, [r2, #2]!
   1fef8:	cmp	r0, #32
   1fefc:	bhi	1ff10 <main@@Base+0xcc30>
   1ff00:	mov	r0, r5
   1ff04:	mov	r2, r7
   1ff08:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1ff0c:	mov	r2, r0
   1ff10:	cmp	r2, r7
   1ff14:	bne	1fec0 <main@@Base+0xcbe0>
   1ff18:	b	201cc <main@@Base+0xceec>
   1ff1c:	mov	r1, r6
   1ff20:	cmp	r6, r1
   1ff24:	bne	1fe64 <main@@Base+0xcb84>
   1ff28:	b	1ff7c <main@@Base+0xcc9c>
   1ff2c:	subs	r3, r0, #128	; 0x80
   1ff30:	sbcs	r2, r2, #0
   1ff34:	bcc	1ff6c <main@@Base+0xcc8c>
   1ff38:	mov	r0, r5
   1ff3c:	mov	r2, r7
   1ff40:	mov	r3, #7
   1ff44:	bl	30170 <flatcc_json_parser_set_error@@Base>
   1ff48:	mov	r1, r0
   1ff4c:	cmp	r6, r1
   1ff50:	bne	1fe64 <main@@Base+0xcb84>
   1ff54:	b	1ff7c <main@@Base+0xcc9c>
   1ff58:	rsb	r4, r0, #0
   1ff5c:	strb	r4, [sp, #10]
   1ff60:	cmp	r6, r1
   1ff64:	bne	1fe64 <main@@Base+0xcb84>
   1ff68:	b	1ff7c <main@@Base+0xcc9c>
   1ff6c:	mov	r4, r0
   1ff70:	strb	r4, [sp, #10]
   1ff74:	cmp	r6, r1
   1ff78:	bne	1fe64 <main@@Base+0xcb84>
   1ff7c:	add	r0, sp, #10
   1ff80:	mov	r1, r6
   1ff84:	mov	r2, r7
   1ff88:	str	r0, [sp]
   1ff8c:	movw	r0, #33152	; 0x8180
   1ff90:	movt	r0, #4
   1ff94:	add	r3, r0, #48	; 0x30
   1ff98:	mov	r0, r5
   1ff9c:	bl	1f288 <main@@Base+0xbfa8>
   1ffa0:	mov	r1, r0
   1ffa4:	cmp	r0, r6
   1ffa8:	cmpne	r1, r7
   1ffac:	beq	20178 <main@@Base+0xce98>
   1ffb0:	ldrb	r4, [sp, #10]
   1ffb4:	strb	r4, [sl, #2]
   1ffb8:	sub	r0, r7, r1
   1ffbc:	cmp	r0, #2
   1ffc0:	blt	20098 <main@@Base+0xcdb8>
   1ffc4:	b	1fe74 <main@@Base+0xcb94>
   1ffc8:	bne	1ffd8 <main@@Base+0xccf8>
   1ffcc:	ldrb	r0, [r6, #2]!
   1ffd0:	cmp	r0, #32
   1ffd4:	bhi	1ffe8 <main@@Base+0xcd08>
   1ffd8:	mov	r0, r5
   1ffdc:	mov	r2, r7
   1ffe0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   1ffe4:	mov	r6, r0
   1ffe8:	cmp	r4, r6
   1ffec:	beq	20078 <main@@Base+0xcd98>
   1fff0:	mov	r4, #0
   1fff4:	cmp	r6, r7
   1fff8:	str	r4, [sp, #20]
   1fffc:	str	r4, [sp, #16]
   20000:	strh	r4, [sp, #10]
   20004:	str	r4, [sp, #12]
   20008:	beq	200b4 <main@@Base+0xcdd4>
   2000c:	add	r0, sp, #16
   20010:	mov	r1, r6
   20014:	mov	r2, r7
   20018:	add	r3, sp, #12
   2001c:	str	r0, [sp]
   20020:	mov	r0, r5
   20024:	bl	326c4 <flatcc_json_parser_integer@@Base>
   20028:	cmp	r0, r6
   2002c:	beq	200d4 <main@@Base+0xcdf4>
   20030:	ldr	r3, [sp, #12]
   20034:	mov	r1, r0
   20038:	ldr	r0, [sp, #16]
   2003c:	ldr	r2, [sp, #20]
   20040:	cmp	r3, #0
   20044:	beq	20124 <main@@Base+0xce44>
   20048:	movw	r3, #32769	; 0x8001
   2004c:	subs	r3, r0, r3
   20050:	sbcs	r2, r2, #0
   20054:	bcc	20150 <main@@Base+0xce70>
   20058:	mov	r0, r5
   2005c:	mov	r2, r7
   20060:	mov	r3, #8
   20064:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20068:	mov	r1, r0
   2006c:	cmp	r6, r1
   20070:	bne	200c0 <main@@Base+0xcde0>
   20074:	b	200e0 <main@@Base+0xce00>
   20078:	mov	r0, r5
   2007c:	mov	r1, r4
   20080:	mov	r2, r7
   20084:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   20088:	mov	r1, r0
   2008c:	sub	r0, r7, r1
   20090:	cmp	r0, #2
   20094:	bge	1fe74 <main@@Base+0xcb94>
   20098:	mov	r0, r5
   2009c:	mov	r2, r7
   200a0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   200a4:	mov	r2, r0
   200a8:	cmp	r2, r7
   200ac:	bne	1fe8c <main@@Base+0xcbac>
   200b0:	b	20188 <main@@Base+0xcea8>
   200b4:	mov	r1, r7
   200b8:	cmp	r6, r1
   200bc:	beq	200e0 <main@@Base+0xce00>
   200c0:	strh	r4, [sl]
   200c4:	sub	r0, r7, r1
   200c8:	cmp	r0, #2
   200cc:	bge	1fe74 <main@@Base+0xcb94>
   200d0:	b	20098 <main@@Base+0xcdb8>
   200d4:	mov	r1, r6
   200d8:	cmp	r6, r1
   200dc:	bne	200c0 <main@@Base+0xcde0>
   200e0:	add	r0, sp, #10
   200e4:	mov	r1, r6
   200e8:	mov	r2, r7
   200ec:	str	r0, [sp]
   200f0:	mov	r0, r5
   200f4:	ldr	r3, [sp, #4]
   200f8:	bl	1f794 <main@@Base+0xc4b4>
   200fc:	mov	r1, r0
   20100:	cmp	r0, r6
   20104:	cmpne	r1, r7
   20108:	beq	20178 <main@@Base+0xce98>
   2010c:	ldrh	r4, [sp, #10]
   20110:	strh	r4, [sl]
   20114:	sub	r0, r7, r1
   20118:	cmp	r0, #2
   2011c:	bge	1fe74 <main@@Base+0xcb94>
   20120:	b	20098 <main@@Base+0xcdb8>
   20124:	subs	r3, r0, #32768	; 0x8000
   20128:	sbcs	r2, r2, #0
   2012c:	bcc	20164 <main@@Base+0xce84>
   20130:	mov	r0, r5
   20134:	mov	r2, r7
   20138:	mov	r3, #7
   2013c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20140:	mov	r1, r0
   20144:	cmp	r6, r1
   20148:	bne	200c0 <main@@Base+0xcde0>
   2014c:	b	200e0 <main@@Base+0xce00>
   20150:	rsb	r4, r0, #0
   20154:	strh	r4, [sp, #10]
   20158:	cmp	r6, r1
   2015c:	bne	200c0 <main@@Base+0xcde0>
   20160:	b	200e0 <main@@Base+0xce00>
   20164:	mov	r4, r0
   20168:	strh	r4, [sp, #10]
   2016c:	cmp	r6, r1
   20170:	bne	200c0 <main@@Base+0xcde0>
   20174:	b	200e0 <main@@Base+0xce00>
   20178:	mov	r0, r5
   2017c:	mov	r2, r7
   20180:	mov	r3, #33	; 0x21
   20184:	b	2023c <main@@Base+0xcf5c>
   20188:	mov	r1, r7
   2018c:	mov	r0, r1
   20190:	sub	sp, fp, #28
   20194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20198:	cmp	r0, #125	; 0x7d
   2019c:	bne	2022c <main@@Base+0xcf4c>
   201a0:	add	r3, r2, #1
   201a4:	sub	r0, r7, r3
   201a8:	cmp	r0, #2
   201ac:	blt	20258 <main@@Base+0xcf78>
   201b0:	ldrb	r0, [r3]
   201b4:	cmp	r0, #32
   201b8:	bls	20244 <main@@Base+0xcf64>
   201bc:	mov	r1, r3
   201c0:	mov	r0, r1
   201c4:	sub	sp, fp, #28
   201c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201cc:	mov	r0, r5
   201d0:	mov	r1, r7
   201d4:	b	20234 <main@@Base+0xcf54>
   201d8:	add	r3, r2, #1
   201dc:	sub	r0, r7, r3
   201e0:	cmp	r0, #2
   201e4:	blt	20258 <main@@Base+0xcf78>
   201e8:	ldrb	r0, [r3]
   201ec:	cmp	r0, #32
   201f0:	bls	20244 <main@@Base+0xcf64>
   201f4:	mov	r1, r3
   201f8:	mov	r0, r1
   201fc:	sub	sp, fp, #28
   20200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20204:	bne	20214 <main@@Base+0xcf34>
   20208:	ldrb	r0, [r1, #2]!
   2020c:	cmp	r0, #32
   20210:	bhi	2026c <main@@Base+0xcf8c>
   20214:	mov	r1, r2
   20218:	mov	r0, r5
   2021c:	mov	r2, r7
   20220:	sub	sp, fp, #28
   20224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20228:	b	30220 <flatcc_json_parser_space_ext@@Base>
   2022c:	mov	r0, r5
   20230:	mov	r1, r2
   20234:	mov	r2, r7
   20238:	mov	r3, #10
   2023c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20240:	b	20268 <main@@Base+0xcf88>
   20244:	bne	20258 <main@@Base+0xcf78>
   20248:	ldrb	r0, [r2, #2]!
   2024c:	cmp	r0, #32
   20250:	mov	r1, r2
   20254:	bhi	2026c <main@@Base+0xcf8c>
   20258:	mov	r0, r5
   2025c:	mov	r1, r3
   20260:	mov	r2, r7
   20264:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20268:	mov	r1, r0
   2026c:	mov	r0, r1
   20270:	sub	sp, fp, #28
   20274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2027c:	add	fp, sp, #28
   20280:	sub	sp, sp, #76	; 0x4c
   20284:	ldr	r9, [fp, #8]
   20288:	mov	r5, r0
   2028c:	mov	r0, #0
   20290:	mov	r8, r2
   20294:	mov	r4, r1
   20298:	cmp	r3, #4
   2029c:	str	r0, [r9]
   202a0:	bhi	202fc <main@@Base+0xd01c>
   202a4:	add	r0, pc, #0
   202a8:	ldr	pc, [r0, r3, lsl #2]
   202ac:	andeq	r0, r2, r0, asr #5
   202b0:	andeq	r0, r2, r4, lsr #6
   202b4:	andeq	r0, r2, ip, lsr r3
   202b8:	muleq	r2, ip, r3
   202bc:	strdeq	r0, [r2], -ip
   202c0:	sub	r0, r8, r4
   202c4:	cmp	r0, #4
   202c8:	blt	202e0 <main@@Base+0xd000>
   202cc:	ldr	r0, [r4]
   202d0:	movw	r1, #30062	; 0x756e
   202d4:	movt	r1, #27756	; 0x6c6c
   202d8:	cmp	r0, r1
   202dc:	beq	204c0 <main@@Base+0xd1e0>
   202e0:	mov	r0, r5
   202e4:	mov	r1, r4
   202e8:	mov	r2, r8
   202ec:	mov	r3, #26
   202f0:	sub	sp, fp, #28
   202f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   202f8:	b	30170 <flatcc_json_parser_set_error@@Base>
   202fc:	ldrb	r0, [r5, #8]
   20300:	tst	r0, #1
   20304:	bne	204a8 <main@@Base+0xd1c8>
   20308:	mov	r0, r5
   2030c:	mov	r1, r4
   20310:	mov	r2, r8
   20314:	mov	r3, #15
   20318:	sub	sp, fp, #28
   2031c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20320:	b	30170 <flatcc_json_parser_set_error@@Base>
   20324:	mov	r0, r5
   20328:	mov	r1, r4
   2032c:	mov	r2, r8
   20330:	mov	r3, r9
   20334:	bl	13358 <main@@Base+0x78>
   20338:	b	23658 <main@@Base+0x10378>
   2033c:	mov	r0, #0
   20340:	mov	r1, #4
   20344:	str	r0, [r9]
   20348:	ldr	r0, [r5]
   2034c:	bl	2d064 <flatcc_builder_start_table@@Base>
   20350:	cmp	r0, #0
   20354:	bne	23644 <main@@Base+0x10364>
   20358:	cmp	r4, r8
   2035c:	beq	20480 <main@@Base+0xd1a0>
   20360:	ldrb	r0, [r4]
   20364:	cmp	r0, #123	; 0x7b
   20368:	bne	20480 <main@@Base+0xd1a0>
   2036c:	add	r1, r4, #1
   20370:	sub	r0, r8, r1
   20374:	cmp	r0, #2
   20378:	blt	2050c <main@@Base+0xd22c>
   2037c:	ldrb	r0, [r1]
   20380:	cmp	r0, #32
   20384:	bls	204fc <main@@Base+0xd21c>
   20388:	mov	r4, r1
   2038c:	cmp	r4, r8
   20390:	mov	r2, r8
   20394:	bne	20528 <main@@Base+0xd248>
   20398:	b	20558 <main@@Base+0xd278>
   2039c:	mov	r0, #0
   203a0:	mov	r1, #0
   203a4:	str	r0, [r9]
   203a8:	ldr	r0, [r5]
   203ac:	bl	2d064 <flatcc_builder_start_table@@Base>
   203b0:	cmp	r0, #0
   203b4:	bne	23644 <main@@Base+0x10364>
   203b8:	cmp	r4, r8
   203bc:	beq	20480 <main@@Base+0xd1a0>
   203c0:	ldrb	r0, [r4]
   203c4:	cmp	r0, #123	; 0x7b
   203c8:	bne	20480 <main@@Base+0xd1a0>
   203cc:	add	r1, r4, #1
   203d0:	sub	r0, r8, r1
   203d4:	cmp	r0, #2
   203d8:	blt	211d8 <main@@Base+0xdef8>
   203dc:	ldrb	r0, [r1]
   203e0:	cmp	r0, #32
   203e4:	bls	211c8 <main@@Base+0xdee8>
   203e8:	mov	r4, r1
   203ec:	cmp	r4, r8
   203f0:	mov	r3, r8
   203f4:	bne	211f4 <main@@Base+0xdf14>
   203f8:	b	21234 <main@@Base+0xdf54>
   203fc:	mov	r0, #0
   20400:	mov	r1, #4
   20404:	str	r0, [r9]
   20408:	ldr	r0, [r5]
   2040c:	bl	2d064 <flatcc_builder_start_table@@Base>
   20410:	cmp	r0, #0
   20414:	bne	23644 <main@@Base+0x10364>
   20418:	sub	r0, fp, #36	; 0x24
   2041c:	mov	r1, r4
   20420:	mov	r2, r8
   20424:	mov	r3, #1
   20428:	str	r0, [sp]
   2042c:	mov	r0, r5
   20430:	bl	32fa0 <flatcc_json_parser_prepare_unions@@Base>
   20434:	cmp	r0, r8
   20438:	beq	23644 <main@@Base+0x10364>
   2043c:	cmp	r4, r8
   20440:	beq	204d0 <main@@Base+0xd1f0>
   20444:	ldrb	r0, [r4]
   20448:	cmp	r0, #123	; 0x7b
   2044c:	bne	204d0 <main@@Base+0xd1f0>
   20450:	add	r1, r4, #1
   20454:	sub	r0, r8, r1
   20458:	cmp	r0, #2
   2045c:	blt	213cc <main@@Base+0xe0ec>
   20460:	ldrb	r0, [r1]
   20464:	cmp	r0, #32
   20468:	bls	213bc <main@@Base+0xe0dc>
   2046c:	mov	r4, r1
   20470:	cmp	r4, r8
   20474:	mov	r2, r8
   20478:	bne	213e8 <main@@Base+0xe108>
   2047c:	b	2142c <main@@Base+0xe14c>
   20480:	mov	r0, r5
   20484:	mov	r1, r4
   20488:	mov	r2, r8
   2048c:	mov	r3, #21
   20490:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20494:	mov	r4, r0
   20498:	ldr	r0, [r5, #24]
   2049c:	cmp	r0, #0
   204a0:	bne	23644 <main@@Base+0x10364>
   204a4:	b	23630 <main@@Base+0x10350>
   204a8:	mov	r0, r5
   204ac:	mov	r1, r4
   204b0:	mov	r2, r8
   204b4:	sub	sp, fp, #28
   204b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   204bc:	b	30d30 <flatcc_json_parser_generic_json@@Base>
   204c0:	add	r4, r4, #4
   204c4:	mov	r0, r4
   204c8:	sub	sp, fp, #28
   204cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   204d0:	mov	r0, r5
   204d4:	mov	r1, r4
   204d8:	mov	r2, r8
   204dc:	mov	r3, #21
   204e0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   204e4:	mov	r4, r0
   204e8:	add	r0, r5, #24
   204ec:	ldr	r0, [r0]
   204f0:	cmp	r0, #0
   204f4:	bne	23644 <main@@Base+0x10364>
   204f8:	b	23618 <main@@Base+0x10338>
   204fc:	bne	2050c <main@@Base+0xd22c>
   20500:	ldrb	r0, [r4, #2]!
   20504:	cmp	r0, #32
   20508:	bhi	2051c <main@@Base+0xd23c>
   2050c:	mov	r0, r5
   20510:	mov	r2, r8
   20514:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20518:	mov	r4, r0
   2051c:	cmp	r4, r8
   20520:	mov	r2, r8
   20524:	beq	20558 <main@@Base+0xd278>
   20528:	ldrb	r0, [r4]
   2052c:	cmp	r0, #125	; 0x7d
   20530:	bne	20554 <main@@Base+0xd274>
   20534:	add	r1, r4, #1
   20538:	sub	r0, r8, r1
   2053c:	cmp	r0, #2
   20540:	blt	236ec <main@@Base+0x1040c>
   20544:	ldrb	r0, [r1]
   20548:	cmp	r0, #32
   2054c:	bls	2121c <main@@Base+0xdf3c>
   20550:	b	235dc <main@@Base+0x102fc>
   20554:	mov	r2, r4
   20558:	movw	r0, #33392	; 0x8270
   2055c:	movt	r0, #4
   20560:	add	r0, r0, #96	; 0x60
   20564:	str	r0, [sp, #40]	; 0x28
   20568:	movw	r0, #33152	; 0x8180
   2056c:	movt	r0, #4
   20570:	add	r0, r0, #72	; 0x48
   20574:	str	r0, [sp, #36]	; 0x24
   20578:	str	r5, [sp, #52]	; 0x34
   2057c:	str	r9, [sp, #48]	; 0x30
   20580:	cmp	r2, r8
   20584:	mov	sl, r8
   20588:	beq	205d4 <main@@Base+0xd2f4>
   2058c:	ldrb	r0, [r2]
   20590:	cmp	r0, #46	; 0x2e
   20594:	beq	205ac <main@@Base+0xd2cc>
   20598:	cmp	r0, #34	; 0x22
   2059c:	bne	205c8 <main@@Base+0xd2e8>
   205a0:	mov	r0, #0
   205a4:	add	sl, r2, #1
   205a8:	b	205d0 <main@@Base+0xd2f0>
   205ac:	mov	r1, r2
   205b0:	mov	r0, r5
   205b4:	mov	r2, r8
   205b8:	mov	r3, #5
   205bc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   205c0:	mov	sl, r0
   205c4:	b	205d4 <main@@Base+0xd2f4>
   205c8:	mov	r0, #1
   205cc:	mov	sl, r2
   205d0:	str	r0, [r5, #12]
   205d4:	sub	lr, r8, sl
   205d8:	mov	r0, #8
   205dc:	cmp	lr, #8
   205e0:	movcc	r0, lr
   205e4:	and	r0, r0, #15
   205e8:	sub	r2, r0, #1
   205ec:	cmp	r2, #7
   205f0:	bhi	20ff8 <main@@Base+0xdd18>
   205f4:	add	r4, pc, #24
   205f8:	mov	r0, #0
   205fc:	mov	r1, #0
   20600:	mov	r3, #0
   20604:	mov	r7, #0
   20608:	mov	r6, #0
   2060c:	mov	r5, #0
   20610:	ldr	pc, [r4, r2, lsl #2]
   20614:	andeq	r0, r2, r4, ror #12
   20618:	andeq	r0, r2, ip, asr r6
   2061c:	andeq	r0, r2, r4, asr r6
   20620:	andeq	r0, r2, ip, asr #12
   20624:	andeq	r0, r2, ip, lsr r6
   20628:	andeq	r0, r2, r4, lsr r6
   2062c:	andeq	r0, r2, r4, lsr r6
   20630:	andeq	r0, r2, r4, lsr r6
   20634:	ldrb	r1, [sl, #5]
   20638:	lsl	r1, r1, #16
   2063c:	ldrb	r2, [sl, #4]
   20640:	mov	r3, r0
   20644:	orr	r1, r1, r2, lsl #24
   20648:	mov	r0, r1
   2064c:	ldrb	r1, [sl, #3]
   20650:	orr	r7, r1, r3
   20654:	ldrb	r1, [sl, #2]
   20658:	orr	r6, r7, r1, lsl #8
   2065c:	ldrb	r1, [sl, #1]
   20660:	orr	r5, r6, r1, lsl #16
   20664:	ldrb	r1, [sl]
   20668:	movw	r3, #29234	; 0x7232
   2066c:	lsr	r2, r0, #16
   20670:	movt	r3, #27759	; 0x6c6f
   20674:	orr	r9, r5, r1, lsl #24
   20678:	movw	r1, #25455	; 0x636f
   2067c:	orr	r2, r2, r9, lsl #16
   20680:	eor	r1, r1, r9, lsr #16
   20684:	eor	r2, r2, r3
   20688:	orrs	r1, r2, r1
   2068c:	bne	206e4 <main@@Base+0xd404>
   20690:	cmp	lr, #7
   20694:	mov	r7, sl
   20698:	blt	208fc <main@@Base+0xd61c>
   2069c:	ldr	r2, [sp, #52]	; 0x34
   206a0:	mov	r1, sl
   206a4:	ldrb	r0, [r1, #6]!
   206a8:	ldr	r2, [r2, #12]
   206ac:	cmp	r2, #0
   206b0:	beq	20754 <main@@Base+0xd474>
   206b4:	cmp	r0, #33	; 0x21
   206b8:	bcc	206c8 <main@@Base+0xd3e8>
   206bc:	cmp	r0, #58	; 0x3a
   206c0:	mov	r7, sl
   206c4:	bne	208fc <main@@Base+0xd61c>
   206c8:	ldr	r0, [sp, #52]	; 0x34
   206cc:	mov	r2, #0
   206d0:	str	r2, [r0, #12]
   206d4:	sub	r0, r8, r1
   206d8:	cmp	r0, #2
   206dc:	bge	20770 <main@@Base+0xd490>
   206e0:	b	207d8 <main@@Base+0xd4f8>
   206e4:	movw	r1, #27759	; 0x6c6f
   206e8:	and	r0, r0, #-16777216	; 0xff000000
   206ec:	movt	r1, #25455	; 0x636f
   206f0:	eor	r0, r0, #1912602624	; 0x72000000
   206f4:	eor	r1, r9, r1
   206f8:	orrs	r0, r0, r1
   206fc:	bne	20b00 <main@@Base+0xd820>
   20700:	cmp	lr, #6
   20704:	mov	r7, sl
   20708:	blt	20a78 <main@@Base+0xd798>
   2070c:	ldr	r2, [sp, #52]	; 0x34
   20710:	mov	r1, sl
   20714:	ldrb	r0, [r1, #5]!
   20718:	ldr	r2, [r2, #12]
   2071c:	cmp	r2, #0
   20720:	beq	2078c <main@@Base+0xd4ac>
   20724:	cmp	r0, #33	; 0x21
   20728:	bcc	20738 <main@@Base+0xd458>
   2072c:	cmp	r0, #58	; 0x3a
   20730:	mov	r7, sl
   20734:	bne	20a78 <main@@Base+0xd798>
   20738:	ldr	r0, [sp, #52]	; 0x34
   2073c:	mov	r2, #0
   20740:	str	r2, [r0, #12]
   20744:	sub	r0, r8, r1
   20748:	cmp	r0, #2
   2074c:	bge	207a8 <main@@Base+0xd4c8>
   20750:	b	20860 <main@@Base+0xd580>
   20754:	cmp	r0, #34	; 0x22
   20758:	mov	r7, sl
   2075c:	bne	208fc <main@@Base+0xd61c>
   20760:	add	r1, sl, #7
   20764:	sub	r0, r8, r1
   20768:	cmp	r0, #2
   2076c:	blt	207d8 <main@@Base+0xd4f8>
   20770:	ldrb	r0, [r1]
   20774:	cmp	r0, #32
   20778:	bls	207c4 <main@@Base+0xd4e4>
   2077c:	mov	r7, r1
   20780:	cmp	r7, r8
   20784:	bne	207f8 <main@@Base+0xd518>
   20788:	b	20830 <main@@Base+0xd550>
   2078c:	cmp	r0, #34	; 0x22
   20790:	mov	r7, sl
   20794:	bne	20a78 <main@@Base+0xd798>
   20798:	add	r1, sl, #6
   2079c:	sub	r0, r8, r1
   207a0:	cmp	r0, #2
   207a4:	blt	20860 <main@@Base+0xd580>
   207a8:	ldrb	r0, [r1]
   207ac:	cmp	r0, #32
   207b0:	bls	2084c <main@@Base+0xd56c>
   207b4:	mov	r7, r1
   207b8:	cmp	r7, r8
   207bc:	bne	20880 <main@@Base+0xd5a0>
   207c0:	b	208b8 <main@@Base+0xd5d8>
   207c4:	bne	207d8 <main@@Base+0xd4f8>
   207c8:	mov	r7, r1
   207cc:	ldrb	r0, [r7, #1]!
   207d0:	cmp	r0, #32
   207d4:	bhi	207f0 <main@@Base+0xd510>
   207d8:	ldr	r0, [sp, #52]	; 0x34
   207dc:	mov	r2, r8
   207e0:	mov	r4, lr
   207e4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   207e8:	mov	lr, r4
   207ec:	mov	r7, r0
   207f0:	cmp	r7, r8
   207f4:	beq	20830 <main@@Base+0xd550>
   207f8:	ldrb	r0, [r7]
   207fc:	cmp	r0, #58	; 0x3a
   20800:	bne	20830 <main@@Base+0xd550>
   20804:	add	r1, r7, #1
   20808:	sub	r0, r8, r1
   2080c:	cmp	r0, #2
   20810:	blt	208e4 <main@@Base+0xd604>
   20814:	ldrb	r0, [r1]
   20818:	cmp	r0, #32
   2081c:	bls	208d4 <main@@Base+0xd5f4>
   20820:	mov	r7, r1
   20824:	cmp	sl, r7
   20828:	bne	20904 <main@@Base+0xd624>
   2082c:	b	20b00 <main@@Base+0xd820>
   20830:	ldr	r0, [sp, #52]	; 0x34
   20834:	mov	r1, r7
   20838:	mov	r2, r8
   2083c:	mov	r3, #4
   20840:	mov	r4, lr
   20844:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20848:	b	208f4 <main@@Base+0xd614>
   2084c:	bne	20860 <main@@Base+0xd580>
   20850:	mov	r7, r1
   20854:	ldrb	r0, [r7, #1]!
   20858:	cmp	r0, #32
   2085c:	bhi	20878 <main@@Base+0xd598>
   20860:	ldr	r0, [sp, #52]	; 0x34
   20864:	mov	r2, r8
   20868:	mov	r4, lr
   2086c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20870:	mov	lr, r4
   20874:	mov	r7, r0
   20878:	cmp	r7, r8
   2087c:	beq	208b8 <main@@Base+0xd5d8>
   20880:	ldrb	r0, [r7]
   20884:	cmp	r0, #58	; 0x3a
   20888:	bne	208b8 <main@@Base+0xd5d8>
   2088c:	add	r1, r7, #1
   20890:	sub	r0, r8, r1
   20894:	cmp	r0, #2
   20898:	blt	20a60 <main@@Base+0xd780>
   2089c:	ldrb	r0, [r1]
   208a0:	cmp	r0, #32
   208a4:	bls	20a50 <main@@Base+0xd770>
   208a8:	mov	r7, r1
   208ac:	cmp	sl, r7
   208b0:	bne	20a80 <main@@Base+0xd7a0>
   208b4:	b	20b00 <main@@Base+0xd820>
   208b8:	ldr	r0, [sp, #52]	; 0x34
   208bc:	mov	r1, r7
   208c0:	mov	r2, r8
   208c4:	mov	r3, #4
   208c8:	mov	r4, lr
   208cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   208d0:	b	20a70 <main@@Base+0xd790>
   208d4:	bne	208e4 <main@@Base+0xd604>
   208d8:	ldrb	r0, [r7, #2]!
   208dc:	cmp	r0, #32
   208e0:	bhi	208fc <main@@Base+0xd61c>
   208e4:	ldr	r0, [sp, #52]	; 0x34
   208e8:	mov	r2, r8
   208ec:	mov	r4, lr
   208f0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   208f4:	mov	lr, r4
   208f8:	mov	r7, r0
   208fc:	cmp	sl, r7
   20900:	beq	20b00 <main@@Base+0xd820>
   20904:	mov	r6, #0
   20908:	cmp	r7, r8
   2090c:	str	r6, [fp, #-44]	; 0xffffffd4
   20910:	str	r6, [fp, #-48]	; 0xffffffd0
   20914:	strb	r6, [fp, #-36]	; 0xffffffdc
   20918:	str	r6, [fp, #-32]	; 0xffffffe0
   2091c:	beq	20984 <main@@Base+0xd6a4>
   20920:	sub	r0, fp, #48	; 0x30
   20924:	mov	r1, r7
   20928:	mov	r2, r8
   2092c:	sub	r3, fp, #32
   20930:	str	r0, [sp]
   20934:	ldr	r5, [sp, #52]	; 0x34
   20938:	mov	r0, r5
   2093c:	bl	326c4 <flatcc_json_parser_integer@@Base>
   20940:	ldr	r9, [sp, #48]	; 0x30
   20944:	cmp	r0, r7
   20948:	beq	2099c <main@@Base+0xd6bc>
   2094c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20950:	mov	r4, r0
   20954:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20958:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2095c:	cmp	r2, #0
   20960:	beq	209ac <main@@Base+0xd6cc>
   20964:	subs	r2, r0, #129	; 0x81
   20968:	sbcs	r1, r1, #0
   2096c:	bcc	209dc <main@@Base+0xd6fc>
   20970:	mov	r0, r5
   20974:	mov	r1, r4
   20978:	mov	r2, r8
   2097c:	mov	r3, #8
   20980:	b	209c8 <main@@Base+0xd6e8>
   20984:	ldr	r5, [sp, #52]	; 0x34
   20988:	ldr	r9, [sp, #48]	; 0x30
   2098c:	mov	r4, r8
   20990:	cmp	r7, r4
   20994:	bne	20a30 <main@@Base+0xd750>
   20998:	b	20a00 <main@@Base+0xd720>
   2099c:	mov	r4, r7
   209a0:	cmp	r7, r4
   209a4:	bne	20a30 <main@@Base+0xd750>
   209a8:	b	20a00 <main@@Base+0xd720>
   209ac:	subs	r2, r0, #128	; 0x80
   209b0:	sbcs	r1, r1, #0
   209b4:	bcc	209f0 <main@@Base+0xd710>
   209b8:	mov	r0, r5
   209bc:	mov	r1, r4
   209c0:	mov	r2, r8
   209c4:	mov	r3, #7
   209c8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   209cc:	mov	r4, r0
   209d0:	cmp	r7, r4
   209d4:	bne	20a30 <main@@Base+0xd750>
   209d8:	b	20a00 <main@@Base+0xd720>
   209dc:	rsb	r6, r0, #0
   209e0:	strb	r6, [fp, #-36]	; 0xffffffdc
   209e4:	cmp	r7, r4
   209e8:	bne	20a30 <main@@Base+0xd750>
   209ec:	b	20a00 <main@@Base+0xd720>
   209f0:	mov	r6, r0
   209f4:	strb	r6, [fp, #-36]	; 0xffffffdc
   209f8:	cmp	r7, r4
   209fc:	bne	20a30 <main@@Base+0xd750>
   20a00:	sub	r0, fp, #36	; 0x24
   20a04:	mov	r1, r7
   20a08:	mov	r2, r8
   20a0c:	str	r0, [sp]
   20a10:	mov	r0, r5
   20a14:	ldr	r3, [sp, #40]	; 0x28
   20a18:	bl	1f288 <main@@Base+0xbfa8>
   20a1c:	mov	r4, r0
   20a20:	cmp	r0, r7
   20a24:	cmpne	r4, r8
   20a28:	beq	23644 <main@@Base+0x10364>
   20a2c:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20a30:	uxtb	r0, r6
   20a34:	cmp	r0, #2
   20a38:	ldrbeq	r0, [r5, #8]
   20a3c:	tsteq	r0, #2
   20a40:	beq	2100c <main@@Base+0xdd2c>
   20a44:	ldr	r0, [r5]
   20a48:	mov	r1, #1
   20a4c:	b	21108 <main@@Base+0xde28>
   20a50:	bne	20a60 <main@@Base+0xd780>
   20a54:	ldrb	r0, [r7, #2]!
   20a58:	cmp	r0, #32
   20a5c:	bhi	20a78 <main@@Base+0xd798>
   20a60:	ldr	r0, [sp, #52]	; 0x34
   20a64:	mov	r2, r8
   20a68:	mov	r4, lr
   20a6c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20a70:	mov	lr, r4
   20a74:	mov	r7, r0
   20a78:	cmp	sl, r7
   20a7c:	beq	20b00 <main@@Base+0xd820>
   20a80:	mov	r6, #0
   20a84:	cmp	r7, r8
   20a88:	str	r6, [fp, #-44]	; 0xffffffd4
   20a8c:	str	r6, [fp, #-48]	; 0xffffffd0
   20a90:	strb	r6, [fp, #-36]	; 0xffffffdc
   20a94:	str	r6, [fp, #-32]	; 0xffffffe0
   20a98:	beq	20bd0 <main@@Base+0xd8f0>
   20a9c:	sub	r0, fp, #48	; 0x30
   20aa0:	mov	r1, r7
   20aa4:	mov	r2, r8
   20aa8:	sub	r3, fp, #32
   20aac:	str	r0, [sp]
   20ab0:	ldr	r5, [sp, #52]	; 0x34
   20ab4:	mov	r0, r5
   20ab8:	bl	326c4 <flatcc_json_parser_integer@@Base>
   20abc:	ldr	r9, [sp, #48]	; 0x30
   20ac0:	cmp	r0, r7
   20ac4:	beq	20c20 <main@@Base+0xd940>
   20ac8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20acc:	mov	r4, r0
   20ad0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20ad4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20ad8:	cmp	r2, #0
   20adc:	beq	20c68 <main@@Base+0xd988>
   20ae0:	subs	r2, r0, #129	; 0x81
   20ae4:	sbcs	r1, r1, #0
   20ae8:	bcc	20c98 <main@@Base+0xd9b8>
   20aec:	mov	r0, r5
   20af0:	mov	r1, r4
   20af4:	mov	r2, r8
   20af8:	mov	r3, #8
   20afc:	b	20c84 <main@@Base+0xd9a4>
   20b00:	movw	r1, #12800	; 0x3200
   20b04:	bic	r0, r9, #255	; 0xff
   20b08:	movt	r1, #30051	; 0x7563
   20b0c:	teq	r0, r1
   20b10:	bne	20b68 <main@@Base+0xd888>
   20b14:	ldr	r5, [sp, #52]	; 0x34
   20b18:	ldr	r9, [sp, #48]	; 0x30
   20b1c:	cmp	lr, #4
   20b20:	mov	r7, sl
   20b24:	blt	20e28 <main@@Base+0xdb48>
   20b28:	mov	r1, sl
   20b2c:	ldr	r2, [r5, #12]
   20b30:	ldrb	r0, [r1, #3]!
   20b34:	cmp	r2, #0
   20b38:	beq	20be8 <main@@Base+0xd908>
   20b3c:	cmp	r0, #33	; 0x21
   20b40:	bcc	20b50 <main@@Base+0xd870>
   20b44:	cmp	r0, #58	; 0x3a
   20b48:	mov	r7, sl
   20b4c:	bne	20e28 <main@@Base+0xdb48>
   20b50:	mov	r0, #0
   20b54:	str	r0, [r5, #12]
   20b58:	sub	r0, r8, r1
   20b5c:	cmp	r0, #2
   20b60:	bge	20c04 <main@@Base+0xd924>
   20b64:	b	20cc0 <main@@Base+0xd9e0>
   20b68:	movw	r0, #0
   20b6c:	bfc	r9, #0, #16
   20b70:	ldr	r5, [sp, #52]	; 0x34
   20b74:	movt	r0, #30051	; 0x7563
   20b78:	teq	r9, r0
   20b7c:	ldr	r9, [sp, #48]	; 0x30
   20b80:	bne	20ff8 <main@@Base+0xdd18>
   20b84:	cmp	lr, #3
   20b88:	mov	r7, sl
   20b8c:	blt	20f7c <main@@Base+0xdc9c>
   20b90:	mov	r1, sl
   20b94:	ldr	r2, [r5, #12]
   20b98:	ldrb	r0, [r1, #2]!
   20b9c:	cmp	r2, #0
   20ba0:	beq	20c30 <main@@Base+0xd950>
   20ba4:	cmp	r0, #33	; 0x21
   20ba8:	bcc	20bb8 <main@@Base+0xd8d8>
   20bac:	cmp	r0, #58	; 0x3a
   20bb0:	mov	r7, sl
   20bb4:	bne	20f7c <main@@Base+0xdc9c>
   20bb8:	mov	r0, #0
   20bbc:	str	r0, [r5, #12]
   20bc0:	sub	r0, r8, r1
   20bc4:	cmp	r0, #2
   20bc8:	bge	20c4c <main@@Base+0xd96c>
   20bcc:	b	20da0 <main@@Base+0xdac0>
   20bd0:	ldr	r5, [sp, #52]	; 0x34
   20bd4:	ldr	r9, [sp, #48]	; 0x30
   20bd8:	mov	r4, r8
   20bdc:	cmp	r7, r4
   20be0:	bne	20d6c <main@@Base+0xda8c>
   20be4:	b	20d38 <main@@Base+0xda58>
   20be8:	cmp	r0, #34	; 0x22
   20bec:	mov	r7, sl
   20bf0:	bne	20e28 <main@@Base+0xdb48>
   20bf4:	add	r1, sl, #4
   20bf8:	sub	r0, r8, r1
   20bfc:	cmp	r0, #2
   20c00:	blt	20cc0 <main@@Base+0xd9e0>
   20c04:	ldrb	r0, [r1]
   20c08:	cmp	r0, #32
   20c0c:	bls	20cac <main@@Base+0xd9cc>
   20c10:	mov	r7, r1
   20c14:	cmp	r7, r8
   20c18:	bne	20cd8 <main@@Base+0xd9f8>
   20c1c:	b	20d10 <main@@Base+0xda30>
   20c20:	mov	r4, r7
   20c24:	cmp	r7, r4
   20c28:	bne	20d6c <main@@Base+0xda8c>
   20c2c:	b	20d38 <main@@Base+0xda58>
   20c30:	cmp	r0, #34	; 0x22
   20c34:	mov	r7, sl
   20c38:	bne	20f7c <main@@Base+0xdc9c>
   20c3c:	add	r1, sl, #3
   20c40:	sub	r0, r8, r1
   20c44:	cmp	r0, #2
   20c48:	blt	20da0 <main@@Base+0xdac0>
   20c4c:	ldrb	r0, [r1]
   20c50:	cmp	r0, #32
   20c54:	bls	20d8c <main@@Base+0xdaac>
   20c58:	mov	r7, r1
   20c5c:	cmp	r7, r8
   20c60:	bne	20db8 <main@@Base+0xdad8>
   20c64:	b	20df0 <main@@Base+0xdb10>
   20c68:	subs	r2, r0, #128	; 0x80
   20c6c:	sbcs	r1, r1, #0
   20c70:	bcc	20d28 <main@@Base+0xda48>
   20c74:	mov	r0, r5
   20c78:	mov	r1, r4
   20c7c:	mov	r2, r8
   20c80:	mov	r3, #7
   20c84:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20c88:	mov	r4, r0
   20c8c:	cmp	r7, r4
   20c90:	bne	20d6c <main@@Base+0xda8c>
   20c94:	b	20d38 <main@@Base+0xda58>
   20c98:	rsb	r6, r0, #0
   20c9c:	strb	r6, [fp, #-36]	; 0xffffffdc
   20ca0:	cmp	r7, r4
   20ca4:	bne	20d6c <main@@Base+0xda8c>
   20ca8:	b	20d38 <main@@Base+0xda58>
   20cac:	bne	20cc0 <main@@Base+0xd9e0>
   20cb0:	mov	r7, r1
   20cb4:	ldrb	r0, [r7, #1]!
   20cb8:	cmp	r0, #32
   20cbc:	bhi	20cd0 <main@@Base+0xd9f0>
   20cc0:	mov	r0, r5
   20cc4:	mov	r2, r8
   20cc8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20ccc:	mov	r7, r0
   20cd0:	cmp	r7, r8
   20cd4:	beq	20d10 <main@@Base+0xda30>
   20cd8:	ldrb	r0, [r7]
   20cdc:	cmp	r0, #58	; 0x3a
   20ce0:	bne	20d10 <main@@Base+0xda30>
   20ce4:	add	r1, r7, #1
   20ce8:	sub	r0, r8, r1
   20cec:	cmp	r0, #2
   20cf0:	blt	20e18 <main@@Base+0xdb38>
   20cf4:	ldrb	r0, [r1]
   20cf8:	cmp	r0, #32
   20cfc:	bls	20e08 <main@@Base+0xdb28>
   20d00:	mov	r7, r1
   20d04:	cmp	sl, r7
   20d08:	bne	20e30 <main@@Base+0xdb50>
   20d0c:	b	20ff8 <main@@Base+0xdd18>
   20d10:	mov	r0, r5
   20d14:	mov	r1, r7
   20d18:	mov	r2, r8
   20d1c:	mov	r3, #4
   20d20:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20d24:	b	20e24 <main@@Base+0xdb44>
   20d28:	mov	r6, r0
   20d2c:	strb	r6, [fp, #-36]	; 0xffffffdc
   20d30:	cmp	r7, r4
   20d34:	bne	20d6c <main@@Base+0xda8c>
   20d38:	movw	r3, #33504	; 0x82e0
   20d3c:	sub	r0, fp, #36	; 0x24
   20d40:	mov	r1, r7
   20d44:	mov	r2, r8
   20d48:	str	r0, [sp]
   20d4c:	mov	r0, r5
   20d50:	movt	r3, #4
   20d54:	bl	1f288 <main@@Base+0xbfa8>
   20d58:	mov	r4, r0
   20d5c:	cmp	r0, r7
   20d60:	cmpne	r4, r8
   20d64:	beq	23644 <main@@Base+0x10364>
   20d68:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20d6c:	uxtb	r0, r6
   20d70:	cmp	r0, #2
   20d74:	ldrbeq	r0, [r5, #8]
   20d78:	tsteq	r0, #2
   20d7c:	beq	2100c <main@@Base+0xdd2c>
   20d80:	ldr	r0, [r5]
   20d84:	mov	r1, #0
   20d88:	b	21108 <main@@Base+0xde28>
   20d8c:	bne	20da0 <main@@Base+0xdac0>
   20d90:	mov	r7, r1
   20d94:	ldrb	r0, [r7, #1]!
   20d98:	cmp	r0, #32
   20d9c:	bhi	20db0 <main@@Base+0xdad0>
   20da0:	mov	r0, r5
   20da4:	mov	r2, r8
   20da8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20dac:	mov	r7, r0
   20db0:	cmp	r7, r8
   20db4:	beq	20df0 <main@@Base+0xdb10>
   20db8:	ldrb	r0, [r7]
   20dbc:	cmp	r0, #58	; 0x3a
   20dc0:	bne	20df0 <main@@Base+0xdb10>
   20dc4:	add	r1, r7, #1
   20dc8:	sub	r0, r8, r1
   20dcc:	cmp	r0, #2
   20dd0:	blt	20f6c <main@@Base+0xdc8c>
   20dd4:	ldrb	r0, [r1]
   20dd8:	cmp	r0, #32
   20ddc:	bls	20f5c <main@@Base+0xdc7c>
   20de0:	mov	r7, r1
   20de4:	cmp	sl, r7
   20de8:	bne	20f84 <main@@Base+0xdca4>
   20dec:	b	20ff8 <main@@Base+0xdd18>
   20df0:	mov	r0, r5
   20df4:	mov	r1, r7
   20df8:	mov	r2, r8
   20dfc:	mov	r3, #4
   20e00:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20e04:	b	20f78 <main@@Base+0xdc98>
   20e08:	bne	20e18 <main@@Base+0xdb38>
   20e0c:	ldrb	r0, [r7, #2]!
   20e10:	cmp	r0, #32
   20e14:	bhi	20e28 <main@@Base+0xdb48>
   20e18:	mov	r0, r5
   20e1c:	mov	r2, r8
   20e20:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20e24:	mov	r7, r0
   20e28:	cmp	sl, r7
   20e2c:	beq	20ff8 <main@@Base+0xdd18>
   20e30:	mov	r6, #0
   20e34:	cmp	r7, r8
   20e38:	str	r6, [fp, #-44]	; 0xffffffd4
   20e3c:	str	r6, [fp, #-48]	; 0xffffffd0
   20e40:	strb	r6, [fp, #-36]	; 0xffffffdc
   20e44:	str	r6, [fp, #-32]	; 0xffffffe0
   20e48:	beq	20ea4 <main@@Base+0xdbc4>
   20e4c:	sub	r0, fp, #48	; 0x30
   20e50:	mov	r1, r7
   20e54:	mov	r2, r8
   20e58:	sub	r3, fp, #32
   20e5c:	str	r0, [sp]
   20e60:	mov	r0, r5
   20e64:	bl	326c4 <flatcc_json_parser_integer@@Base>
   20e68:	cmp	r0, r7
   20e6c:	beq	20eb4 <main@@Base+0xdbd4>
   20e70:	mov	r4, r0
   20e74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20e78:	cmp	r0, #0
   20e7c:	beq	20ec4 <main@@Base+0xdbe4>
   20e80:	mov	r0, r5
   20e84:	mov	r1, r4
   20e88:	mov	r2, r8
   20e8c:	mov	r3, #8
   20e90:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20e94:	mov	r4, r0
   20e98:	cmp	r7, r4
   20e9c:	bne	20f3c <main@@Base+0xdc5c>
   20ea0:	b	20f0c <main@@Base+0xdc2c>
   20ea4:	mov	r4, r8
   20ea8:	cmp	r7, r4
   20eac:	bne	20f3c <main@@Base+0xdc5c>
   20eb0:	b	20f0c <main@@Base+0xdc2c>
   20eb4:	mov	r4, r7
   20eb8:	cmp	r7, r4
   20ebc:	bne	20f3c <main@@Base+0xdc5c>
   20ec0:	b	20f0c <main@@Base+0xdc2c>
   20ec4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20ec8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20ecc:	subs	r2, r0, #256	; 0x100
   20ed0:	sbcs	r1, r1, #0
   20ed4:	bcc	20efc <main@@Base+0xdc1c>
   20ed8:	mov	r0, r5
   20edc:	mov	r1, r4
   20ee0:	mov	r2, r8
   20ee4:	mov	r3, #7
   20ee8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20eec:	mov	r4, r0
   20ef0:	cmp	r7, r4
   20ef4:	bne	20f3c <main@@Base+0xdc5c>
   20ef8:	b	20f0c <main@@Base+0xdc2c>
   20efc:	mov	r6, r0
   20f00:	strb	r0, [fp, #-36]	; 0xffffffdc
   20f04:	cmp	r7, r4
   20f08:	bne	20f3c <main@@Base+0xdc5c>
   20f0c:	sub	r0, fp, #36	; 0x24
   20f10:	mov	r1, r7
   20f14:	mov	r2, r8
   20f18:	str	r0, [sp]
   20f1c:	mov	r0, r5
   20f20:	ldr	r3, [sp, #36]	; 0x24
   20f24:	bl	1f518 <main@@Base+0xc238>
   20f28:	mov	r4, r0
   20f2c:	cmp	r0, r7
   20f30:	cmpne	r4, r8
   20f34:	beq	23644 <main@@Base+0x10364>
   20f38:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20f3c:	uxtb	r0, r6
   20f40:	cmp	r0, #2
   20f44:	ldrbeq	r0, [r5, #8]
   20f48:	tsteq	r0, #2
   20f4c:	beq	2100c <main@@Base+0xdd2c>
   20f50:	ldr	r0, [r5]
   20f54:	mov	r1, #3
   20f58:	b	21108 <main@@Base+0xde28>
   20f5c:	bne	20f6c <main@@Base+0xdc8c>
   20f60:	ldrb	r0, [r7, #2]!
   20f64:	cmp	r0, #32
   20f68:	bhi	20f7c <main@@Base+0xdc9c>
   20f6c:	mov	r0, r5
   20f70:	mov	r2, r8
   20f74:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   20f78:	mov	r7, r0
   20f7c:	cmp	sl, r7
   20f80:	beq	20ff8 <main@@Base+0xdd18>
   20f84:	mov	r6, #0
   20f88:	cmp	r7, r8
   20f8c:	str	r6, [fp, #-44]	; 0xffffffd4
   20f90:	str	r6, [fp, #-48]	; 0xffffffd0
   20f94:	strb	r6, [fp, #-36]	; 0xffffffdc
   20f98:	str	r6, [fp, #-32]	; 0xffffffe0
   20f9c:	beq	2104c <main@@Base+0xdd6c>
   20fa0:	sub	r0, fp, #48	; 0x30
   20fa4:	mov	r1, r7
   20fa8:	mov	r2, r8
   20fac:	sub	r3, fp, #32
   20fb0:	str	r0, [sp]
   20fb4:	mov	r0, r5
   20fb8:	bl	326c4 <flatcc_json_parser_integer@@Base>
   20fbc:	cmp	r0, r7
   20fc0:	beq	2105c <main@@Base+0xdd7c>
   20fc4:	mov	r4, r0
   20fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20fcc:	cmp	r0, #0
   20fd0:	beq	2106c <main@@Base+0xdd8c>
   20fd4:	mov	r0, r5
   20fd8:	mov	r1, r4
   20fdc:	mov	r2, r8
   20fe0:	mov	r3, #8
   20fe4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   20fe8:	mov	r4, r0
   20fec:	cmp	r7, r4
   20ff0:	bne	210ec <main@@Base+0xde0c>
   20ff4:	b	210b4 <main@@Base+0xddd4>
   20ff8:	mov	r0, r5
   20ffc:	mov	r1, sl
   21000:	mov	r2, r8
   21004:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   21008:	mov	r4, r0
   2100c:	sub	r0, r8, r4
   21010:	cmp	r0, #2
   21014:	blt	2112c <main@@Base+0xde4c>
   21018:	ldrb	r0, [r4]
   2101c:	cmp	r0, #32
   21020:	bls	21034 <main@@Base+0xdd54>
   21024:	mov	r2, r4
   21028:	cmp	r2, r8
   2102c:	bne	21148 <main@@Base+0xde68>
   21030:	b	2136c <main@@Base+0xe08c>
   21034:	bne	2112c <main@@Base+0xde4c>
   21038:	mov	r2, r4
   2103c:	ldrb	r0, [r2, #1]!
   21040:	cmp	r0, #32
   21044:	bhi	21140 <main@@Base+0xde60>
   21048:	b	2112c <main@@Base+0xde4c>
   2104c:	mov	r4, r8
   21050:	cmp	r7, r4
   21054:	bne	210ec <main@@Base+0xde0c>
   21058:	b	210b4 <main@@Base+0xddd4>
   2105c:	mov	r4, r7
   21060:	cmp	r7, r4
   21064:	bne	210ec <main@@Base+0xde0c>
   21068:	b	210b4 <main@@Base+0xddd4>
   2106c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21070:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21074:	subs	r2, r0, #256	; 0x100
   21078:	sbcs	r1, r1, #0
   2107c:	bcc	210a4 <main@@Base+0xddc4>
   21080:	mov	r0, r5
   21084:	mov	r1, r4
   21088:	mov	r2, r8
   2108c:	mov	r3, #7
   21090:	bl	30170 <flatcc_json_parser_set_error@@Base>
   21094:	mov	r4, r0
   21098:	cmp	r7, r4
   2109c:	bne	210ec <main@@Base+0xde0c>
   210a0:	b	210b4 <main@@Base+0xddd4>
   210a4:	mov	r6, r0
   210a8:	strb	r0, [fp, #-36]	; 0xffffffdc
   210ac:	cmp	r7, r4
   210b0:	bne	210ec <main@@Base+0xde0c>
   210b4:	sub	r0, fp, #36	; 0x24
   210b8:	mov	r1, r7
   210bc:	mov	r2, r8
   210c0:	str	r0, [sp]
   210c4:	movw	r0, #33152	; 0x8180
   210c8:	movt	r0, #4
   210cc:	add	r3, r0, #84	; 0x54
   210d0:	mov	r0, r5
   210d4:	bl	1f518 <main@@Base+0xc238>
   210d8:	mov	r4, r0
   210dc:	cmp	r0, r7
   210e0:	cmpne	r4, r8
   210e4:	beq	23644 <main@@Base+0x10364>
   210e8:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   210ec:	uxtb	r0, r6
   210f0:	cmp	r0, #2
   210f4:	ldrbeq	r0, [r5, #8]
   210f8:	tsteq	r0, #2
   210fc:	beq	2100c <main@@Base+0xdd2c>
   21100:	ldr	r0, [r5]
   21104:	mov	r1, #2
   21108:	mov	r2, #1
   2110c:	mov	r3, #1
   21110:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   21114:	cmp	r0, #0
   21118:	beq	23644 <main@@Base+0x10364>
   2111c:	strb	r6, [r0]
   21120:	sub	r0, r8, r4
   21124:	cmp	r0, #2
   21128:	bge	21018 <main@@Base+0xdd38>
   2112c:	mov	r0, r5
   21130:	mov	r1, r4
   21134:	mov	r2, r8
   21138:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2113c:	mov	r2, r0
   21140:	cmp	r2, r8
   21144:	beq	2136c <main@@Base+0xe08c>
   21148:	ldrb	r0, [r2]
   2114c:	cmp	r0, #44	; 0x2c
   21150:	bne	235b8 <main@@Base+0x102d8>
   21154:	add	r1, r2, #1
   21158:	sub	r0, r8, r1
   2115c:	cmp	r0, #2
   21160:	blt	21190 <main@@Base+0xdeb0>
   21164:	ldrb	r0, [r1]
   21168:	cmp	r0, #32
   2116c:	bls	21180 <main@@Base+0xdea0>
   21170:	mov	r2, r1
   21174:	cmp	r2, r8
   21178:	bne	211a8 <main@@Base+0xdec8>
   2117c:	b	21360 <main@@Base+0xe080>
   21180:	bne	21190 <main@@Base+0xdeb0>
   21184:	ldrb	r0, [r2, #2]!
   21188:	cmp	r0, #32
   2118c:	bhi	211a0 <main@@Base+0xdec0>
   21190:	mov	r0, r5
   21194:	mov	r2, r8
   21198:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2119c:	mov	r2, r0
   211a0:	cmp	r2, r8
   211a4:	beq	21360 <main@@Base+0xe080>
   211a8:	ldrb	r0, [r2]
   211ac:	cmp	r0, #125	; 0x7d
   211b0:	bne	20580 <main@@Base+0xd2a0>
   211b4:	add	r1, r2, #1
   211b8:	sub	r0, r8, r1
   211bc:	cmp	r0, #2
   211c0:	blt	236ec <main@@Base+0x1040c>
   211c4:	b	235d0 <main@@Base+0x102f0>
   211c8:	bne	211d8 <main@@Base+0xdef8>
   211cc:	ldrb	r0, [r4, #2]!
   211d0:	cmp	r0, #32
   211d4:	bhi	211e8 <main@@Base+0xdf08>
   211d8:	mov	r0, r5
   211dc:	mov	r2, r8
   211e0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   211e4:	mov	r4, r0
   211e8:	cmp	r4, r8
   211ec:	mov	r3, r8
   211f0:	beq	21234 <main@@Base+0xdf54>
   211f4:	ldrb	r0, [r4]
   211f8:	cmp	r0, #125	; 0x7d
   211fc:	bne	21230 <main@@Base+0xdf50>
   21200:	add	r1, r4, #1
   21204:	sub	r0, r8, r1
   21208:	cmp	r0, #2
   2120c:	blt	236ec <main@@Base+0x1040c>
   21210:	ldrb	r0, [r1]
   21214:	cmp	r0, #32
   21218:	bhi	235dc <main@@Base+0x102fc>
   2121c:	bne	236ec <main@@Base+0x1040c>
   21220:	ldrb	r0, [r4, #2]!
   21224:	cmp	r0, #32
   21228:	bhi	20498 <main@@Base+0xd1b8>
   2122c:	b	236ec <main@@Base+0x1040c>
   21230:	mov	r3, r4
   21234:	mov	r4, #0
   21238:	mov	r7, #1
   2123c:	cmp	r3, r8
   21240:	mov	r1, r8
   21244:	beq	2128c <main@@Base+0xdfac>
   21248:	ldrb	r0, [r3]
   2124c:	cmp	r0, #46	; 0x2e
   21250:	beq	21268 <main@@Base+0xdf88>
   21254:	cmp	r0, #34	; 0x22
   21258:	bne	21284 <main@@Base+0xdfa4>
   2125c:	str	r4, [r5, #12]
   21260:	add	r1, r3, #1
   21264:	b	2128c <main@@Base+0xdfac>
   21268:	mov	r1, r3
   2126c:	mov	r0, r5
   21270:	mov	r2, r8
   21274:	mov	r3, #5
   21278:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2127c:	mov	r1, r0
   21280:	b	2128c <main@@Base+0xdfac>
   21284:	mov	r1, r3
   21288:	str	r7, [r5, #12]
   2128c:	mov	r0, r5
   21290:	mov	r2, r8
   21294:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   21298:	mov	r2, r0
   2129c:	sub	r0, r8, r0
   212a0:	cmp	r0, #2
   212a4:	blt	21318 <main@@Base+0xe038>
   212a8:	ldrb	r0, [r2]
   212ac:	cmp	r0, #32
   212b0:	bls	21304 <main@@Base+0xe024>
   212b4:	mov	r3, r2
   212b8:	cmp	r3, r8
   212bc:	beq	2136c <main@@Base+0xe08c>
   212c0:	ldrb	r0, [r3]
   212c4:	cmp	r0, #44	; 0x2c
   212c8:	bne	21380 <main@@Base+0xe0a0>
   212cc:	add	r1, r3, #1
   212d0:	sub	r0, r8, r1
   212d4:	cmp	r0, #2
   212d8:	blt	21348 <main@@Base+0xe068>
   212dc:	ldrb	r0, [r1]
   212e0:	cmp	r0, #32
   212e4:	bls	21338 <main@@Base+0xe058>
   212e8:	mov	r3, r1
   212ec:	cmp	r3, r8
   212f0:	beq	21360 <main@@Base+0xe080>
   212f4:	ldrb	r0, [r3]
   212f8:	cmp	r0, #125	; 0x7d
   212fc:	bne	2123c <main@@Base+0xdf5c>
   21300:	b	21388 <main@@Base+0xe0a8>
   21304:	bne	21318 <main@@Base+0xe038>
   21308:	mov	r3, r2
   2130c:	ldrb	r0, [r3, #1]!
   21310:	cmp	r0, #32
   21314:	bhi	2132c <main@@Base+0xe04c>
   21318:	mov	r1, r2
   2131c:	mov	r0, r5
   21320:	mov	r2, r8
   21324:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21328:	mov	r3, r0
   2132c:	cmp	r3, r8
   21330:	bne	212c0 <main@@Base+0xdfe0>
   21334:	b	2136c <main@@Base+0xe08c>
   21338:	bne	21348 <main@@Base+0xe068>
   2133c:	ldrb	r0, [r3, #2]!
   21340:	cmp	r0, #32
   21344:	bhi	21358 <main@@Base+0xe078>
   21348:	mov	r0, r5
   2134c:	mov	r2, r8
   21350:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21354:	mov	r3, r0
   21358:	cmp	r3, r8
   2135c:	bne	212f4 <main@@Base+0xe014>
   21360:	mov	r0, r5
   21364:	mov	r1, r8
   21368:	b	236cc <main@@Base+0x103ec>
   2136c:	mov	r4, r8
   21370:	ldr	r0, [r5, #24]
   21374:	cmp	r0, #0
   21378:	bne	23644 <main@@Base+0x10364>
   2137c:	b	23630 <main@@Base+0x10350>
   21380:	cmp	r0, #125	; 0x7d
   21384:	bne	235ac <main@@Base+0x102cc>
   21388:	add	r1, r3, #1
   2138c:	sub	r0, r8, r1
   21390:	cmp	r0, #2
   21394:	blt	236ec <main@@Base+0x1040c>
   21398:	ldrb	r0, [r1]
   2139c:	cmp	r0, #32
   213a0:	bhi	235dc <main@@Base+0x102fc>
   213a4:	bne	236ec <main@@Base+0x1040c>
   213a8:	ldrb	r0, [r3, #2]!
   213ac:	cmp	r0, #32
   213b0:	mov	r4, r3
   213b4:	bhi	20498 <main@@Base+0xd1b8>
   213b8:	b	236ec <main@@Base+0x1040c>
   213bc:	bne	213cc <main@@Base+0xe0ec>
   213c0:	ldrb	r0, [r4, #2]!
   213c4:	cmp	r0, #32
   213c8:	bhi	213dc <main@@Base+0xe0fc>
   213cc:	mov	r0, r5
   213d0:	mov	r2, r8
   213d4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   213d8:	mov	r4, r0
   213dc:	cmp	r4, r8
   213e0:	mov	r2, r8
   213e4:	beq	2142c <main@@Base+0xe14c>
   213e8:	ldrb	r0, [r4]
   213ec:	cmp	r0, #125	; 0x7d
   213f0:	bne	21428 <main@@Base+0xe148>
   213f4:	add	r1, r4, #1
   213f8:	sub	r0, r8, r1
   213fc:	cmp	r0, #2
   21400:	blt	236b4 <main@@Base+0x103d4>
   21404:	ldrb	r0, [r1]
   21408:	cmp	r0, #32
   2140c:	bls	236a4 <main@@Base+0x103c4>
   21410:	mov	r4, r1
   21414:	add	r0, r5, #24
   21418:	ldr	r0, [r0]
   2141c:	cmp	r0, #0
   21420:	bne	23644 <main@@Base+0x10364>
   21424:	b	23618 <main@@Base+0x10338>
   21428:	mov	r2, r4
   2142c:	add	r0, r5, #24
   21430:	str	r0, [sp, #36]	; 0x24
   21434:	add	r0, r5, #12
   21438:	str	r0, [sp, #40]	; 0x28
   2143c:	movw	r0, #33504	; 0x82e0
   21440:	movt	r0, #4
   21444:	add	r0, r0, #16
   21448:	str	r0, [sp, #32]
   2144c:	movw	r0, #24436	; 0x5f74
   21450:	movt	r0, #29299	; 0x7273
   21454:	add	r0, r0, #65536	; 0x10000
   21458:	add	r0, r0, #16777216	; 0x1000000
   2145c:	str	r0, [sp, #28]
   21460:	str	r8, [sp, #44]	; 0x2c
   21464:	str	r5, [sp, #52]	; 0x34
   21468:	str	r9, [sp, #48]	; 0x30
   2146c:	cmp	r2, r8
   21470:	mov	sl, r8
   21474:	beq	214c8 <main@@Base+0xe1e8>
   21478:	ldrb	r0, [r2]
   2147c:	cmp	r0, #46	; 0x2e
   21480:	beq	2149c <main@@Base+0xe1bc>
   21484:	cmp	r0, #34	; 0x22
   21488:	bne	214b8 <main@@Base+0xe1d8>
   2148c:	ldr	r0, [sp, #40]	; 0x28
   21490:	mov	r1, #0
   21494:	add	sl, r2, #1
   21498:	b	214c4 <main@@Base+0xe1e4>
   2149c:	mov	r1, r2
   214a0:	mov	r0, r5
   214a4:	mov	r2, r8
   214a8:	mov	r3, #5
   214ac:	bl	30170 <flatcc_json_parser_set_error@@Base>
   214b0:	mov	sl, r0
   214b4:	b	214c8 <main@@Base+0xe1e8>
   214b8:	ldr	r0, [sp, #40]	; 0x28
   214bc:	mov	r1, #1
   214c0:	mov	sl, r2
   214c4:	str	r1, [r0]
   214c8:	sub	lr, r8, sl
   214cc:	mov	r0, #8
   214d0:	cmp	lr, #8
   214d4:	movcc	r0, lr
   214d8:	and	r0, r0, #15
   214dc:	sub	r2, r0, #1
   214e0:	cmp	r2, #7
   214e4:	bhi	218ac <main@@Base+0xe5cc>
   214e8:	add	r0, pc, #32
   214ec:	mov	r9, #0
   214f0:	mov	ip, #0
   214f4:	mov	r5, #0
   214f8:	mov	r1, #0
   214fc:	mov	r3, #0
   21500:	mov	r6, #0
   21504:	mov	r4, #0
   21508:	mov	r7, #0
   2150c:	ldr	pc, [r0, r2, lsl #2]
   21510:	andeq	r1, r2, r4, ror r5
   21514:	andeq	r1, r2, ip, ror #10
   21518:	andeq	r1, r2, r4, ror #10
   2151c:	andeq	r1, r2, ip, asr r5
   21520:	andeq	r1, r2, r0, asr r5
   21524:	andeq	r1, r2, r4, asr #10
   21528:	andeq	r1, r2, r4, lsr r5
   2152c:	andeq	r1, r2, r0, lsr r5
   21530:	ldrb	ip, [sl, #7]
   21534:	ldrb	r0, [sl, #6]
   21538:	mov	r5, r9
   2153c:	orr	r0, ip, r0, lsl #8
   21540:	mov	r9, r0
   21544:	ldrb	r0, [sl, #5]
   21548:	mov	r1, r5
   2154c:	orr	r9, r9, r0, lsl #16
   21550:	ldrb	r0, [sl, #4]
   21554:	mov	r3, r1
   21558:	orr	r9, r9, r0, lsl #24
   2155c:	ldrb	r0, [sl, #3]
   21560:	orr	r6, r0, r3
   21564:	ldrb	r0, [sl, #2]
   21568:	orr	r4, r6, r0, lsl #8
   2156c:	ldrb	r0, [sl, #1]
   21570:	orr	r7, r4, r0, lsl #16
   21574:	movw	r2, #30976	; 0x7900
   21578:	movt	r2, #24942	; 0x616e
   2157c:	add	r0, r2, #95	; 0x5f
   21580:	eor	r1, r9, r0
   21584:	ldrb	r0, [sl]
   21588:	orr	r4, r7, r0, lsl #24
   2158c:	movw	r0, #28281	; 0x6e79
   21590:	movt	r0, #28001	; 0x6d61
   21594:	eor	r0, r4, r0
   21598:	orrs	r1, r1, r0
   2159c:	bne	21674 <main@@Base+0xe394>
   215a0:	ldr	r8, [sp, #44]	; 0x2c
   215a4:	add	r4, sl, #8
   215a8:	mov	r1, #8
   215ac:	ldr	r5, [sp, #52]	; 0x34
   215b0:	ldr	r9, [sp, #48]	; 0x30
   215b4:	sub	r0, r8, r4
   215b8:	cmp	r0, #8
   215bc:	movcc	r1, r0
   215c0:	and	r1, r1, #15
   215c4:	sub	r2, r1, #1
   215c8:	cmp	r2, #7
   215cc:	bhi	219a4 <main@@Base+0xe6c4>
   215d0:	add	r3, pc, #4
   215d4:	mov	r1, #0
   215d8:	ldr	pc, [r3, r2, lsl #2]
   215dc:	andeq	r1, r2, r0, lsl r6
   215e0:	andeq	r1, r2, r8, lsl #12
   215e4:	andeq	r1, r2, r0, lsl #12
   215e8:	strdeq	r1, [r2], -ip
   215ec:	strdeq	r1, [r2], -ip
   215f0:	strdeq	r1, [r2], -ip
   215f4:	strdeq	r1, [r2], -ip
   215f8:	strdeq	r1, [r2], -ip
   215fc:	ldrb	r1, [sl, #11]
   21600:	ldrb	r2, [sl, #10]
   21604:	orr	r1, r1, r2, lsl #8
   21608:	ldrb	r2, [sl, #9]
   2160c:	orr	r1, r1, r2, lsl #16
   21610:	ldrb	r2, [r4]
   21614:	orr	r1, r1, r2, lsl #24
   21618:	movw	r2, #28773	; 0x7065
   2161c:	movt	r2, #29817	; 0x7479
   21620:	teq	r1, r2
   21624:	bne	219a4 <main@@Base+0xe6c4>
   21628:	cmp	r0, #5
   2162c:	blt	219a4 <main@@Base+0xe6c4>
   21630:	ldr	r2, [sp, #40]	; 0x28
   21634:	mov	r1, sl
   21638:	ldrb	r0, [r1, #12]!
   2163c:	ldr	r2, [r2]
   21640:	cmp	r2, #0
   21644:	beq	2171c <main@@Base+0xe43c>
   21648:	cmp	r0, #33	; 0x21
   2164c:	bcc	21658 <main@@Base+0xe378>
   21650:	cmp	r0, #58	; 0x3a
   21654:	bne	219a4 <main@@Base+0xe6c4>
   21658:	ldr	r0, [sp, #40]	; 0x28
   2165c:	mov	r2, #0
   21660:	str	r2, [r0]
   21664:	sub	r0, r8, r1
   21668:	cmp	r0, #2
   2166c:	bge	21734 <main@@Base+0xe454>
   21670:	b	21958 <main@@Base+0xe678>
   21674:	ldr	r8, [sp, #44]	; 0x2c
   21678:	bic	r1, r9, #255	; 0xff
   2167c:	eor	r1, r1, r2
   21680:	orrs	r0, r1, r0
   21684:	bne	217b8 <main@@Base+0xe4d8>
   21688:	cmp	lr, #8
   2168c:	mov	r1, sl
   21690:	blt	21b04 <main@@Base+0xe824>
   21694:	ldr	r1, [sp, #40]	; 0x28
   21698:	mov	r2, sl
   2169c:	ldrb	r0, [r2, #7]!
   216a0:	ldr	r1, [r1]
   216a4:	cmp	r1, #0
   216a8:	beq	216e0 <main@@Base+0xe400>
   216ac:	cmp	r0, #33	; 0x21
   216b0:	bcc	216c0 <main@@Base+0xe3e0>
   216b4:	cmp	r0, #58	; 0x3a
   216b8:	mov	r1, sl
   216bc:	bne	21b04 <main@@Base+0xe824>
   216c0:	ldr	r0, [sp, #40]	; 0x28
   216c4:	mov	r1, #0
   216c8:	str	r1, [r0]
   216cc:	sub	r0, r8, r2
   216d0:	mov	r5, lr
   216d4:	cmp	r0, #2
   216d8:	bge	21700 <main@@Base+0xe420>
   216dc:	b	21764 <main@@Base+0xe484>
   216e0:	cmp	r0, #34	; 0x22
   216e4:	mov	r1, sl
   216e8:	bne	21b04 <main@@Base+0xe824>
   216ec:	add	r2, sl, #8
   216f0:	sub	r0, r8, r2
   216f4:	mov	r5, lr
   216f8:	cmp	r0, #2
   216fc:	blt	21764 <main@@Base+0xe484>
   21700:	ldrb	r0, [r2]
   21704:	cmp	r0, #32
   21708:	bls	21750 <main@@Base+0xe470>
   2170c:	mov	r1, r2
   21710:	cmp	r1, r8
   21714:	bne	21784 <main@@Base+0xe4a4>
   21718:	b	218c0 <main@@Base+0xe5e0>
   2171c:	cmp	r0, #34	; 0x22
   21720:	bne	219a4 <main@@Base+0xe6c4>
   21724:	add	r1, sl, #13
   21728:	sub	r0, r8, r1
   2172c:	cmp	r0, #2
   21730:	blt	21958 <main@@Base+0xe678>
   21734:	ldrb	r0, [r1]
   21738:	cmp	r0, #32
   2173c:	bls	21944 <main@@Base+0xe664>
   21740:	mov	r2, r1
   21744:	cmp	r2, r8
   21748:	bne	21970 <main@@Base+0xe690>
   2174c:	b	219c8 <main@@Base+0xe6e8>
   21750:	bne	21764 <main@@Base+0xe484>
   21754:	mov	r1, r2
   21758:	ldrb	r0, [r1, #1]!
   2175c:	cmp	r0, #32
   21760:	bhi	2177c <main@@Base+0xe49c>
   21764:	ldr	r0, [sp, #52]	; 0x34
   21768:	mov	r1, r2
   2176c:	mov	r2, r8
   21770:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21774:	mov	lr, r5
   21778:	mov	r1, r0
   2177c:	cmp	r1, r8
   21780:	beq	218c0 <main@@Base+0xe5e0>
   21784:	ldrb	r0, [r1]
   21788:	cmp	r0, #58	; 0x3a
   2178c:	bne	218c0 <main@@Base+0xe5e0>
   21790:	add	r2, r1, #1
   21794:	sub	r0, r8, r2
   21798:	cmp	r0, #2
   2179c:	blt	21aec <main@@Base+0xe80c>
   217a0:	ldrb	r0, [r2]
   217a4:	cmp	r0, #32
   217a8:	bls	21adc <main@@Base+0xe7fc>
   217ac:	mov	r1, r2
   217b0:	cmp	sl, r1
   217b4:	bne	21b0c <main@@Base+0xe82c>
   217b8:	lsr	r1, r9, #16
   217bc:	movw	r2, #27000	; 0x6978
   217c0:	movw	r0, #28786	; 0x7072
   217c4:	orr	r1, r1, r4, lsl #16
   217c8:	movt	r2, #25958	; 0x6566
   217cc:	eor	r0, r0, r4, lsr #16
   217d0:	eor	r1, r1, r2
   217d4:	orrs	r0, r1, r0
   217d8:	bne	21838 <main@@Base+0xe558>
   217dc:	ldr	r5, [sp, #52]	; 0x34
   217e0:	ldr	r9, [sp, #48]	; 0x30
   217e4:	cmp	lr, #7
   217e8:	mov	r1, sl
   217ec:	blt	21bf8 <main@@Base+0xe918>
   217f0:	ldr	r1, [sp, #40]	; 0x28
   217f4:	mov	r2, sl
   217f8:	ldrb	r0, [r2, #6]!
   217fc:	ldr	r1, [r1]
   21800:	cmp	r1, #0
   21804:	beq	218d4 <main@@Base+0xe5f4>
   21808:	cmp	r0, #33	; 0x21
   2180c:	bcc	2181c <main@@Base+0xe53c>
   21810:	cmp	r0, #58	; 0x3a
   21814:	mov	r1, sl
   21818:	bne	21bf8 <main@@Base+0xe918>
   2181c:	ldr	r0, [sp, #40]	; 0x28
   21820:	mov	r1, #0
   21824:	str	r1, [r0]
   21828:	sub	r0, r8, r2
   2182c:	cmp	r0, #2
   21830:	bge	218f0 <main@@Base+0xe610>
   21834:	b	219f4 <main@@Base+0xe714>
   21838:	movw	r0, #30313	; 0x7669
   2183c:	ldr	r5, [sp, #52]	; 0x34
   21840:	and	r1, r9, #-16777216	; 0xff000000
   21844:	movt	r0, #28015	; 0x6d6f
   21848:	eor	r1, r1, #1694498816	; 0x65000000
   2184c:	eor	r0, r4, r0
   21850:	orrs	r0, r1, r0
   21854:	bne	218ac <main@@Base+0xe5cc>
   21858:	cmp	lr, #6
   2185c:	mov	r4, sl
   21860:	blt	21c68 <main@@Base+0xe988>
   21864:	ldr	r2, [sp, #40]	; 0x28
   21868:	mov	r1, sl
   2186c:	ldrb	r0, [r1, #5]!
   21870:	ldr	r2, [r2]
   21874:	cmp	r2, #0
   21878:	beq	2190c <main@@Base+0xe62c>
   2187c:	cmp	r0, #33	; 0x21
   21880:	bcc	21890 <main@@Base+0xe5b0>
   21884:	cmp	r0, #58	; 0x3a
   21888:	mov	r4, sl
   2188c:	bne	21c68 <main@@Base+0xe988>
   21890:	ldr	r0, [sp, #40]	; 0x28
   21894:	mov	r2, #0
   21898:	str	r2, [r0]
   2189c:	sub	r0, r8, r1
   218a0:	cmp	r0, #2
   218a4:	bge	21928 <main@@Base+0xe648>
   218a8:	b	21a70 <main@@Base+0xe790>
   218ac:	mov	r0, r5
   218b0:	mov	r1, sl
   218b4:	mov	r2, r8
   218b8:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   218bc:	b	21b3c <main@@Base+0xe85c>
   218c0:	ldr	r0, [sp, #52]	; 0x34
   218c4:	mov	r2, r8
   218c8:	mov	r3, #4
   218cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   218d0:	b	21afc <main@@Base+0xe81c>
   218d4:	cmp	r0, #34	; 0x22
   218d8:	mov	r1, sl
   218dc:	bne	21bf8 <main@@Base+0xe918>
   218e0:	add	r2, sl, #7
   218e4:	sub	r0, r8, r2
   218e8:	cmp	r0, #2
   218ec:	blt	219f4 <main@@Base+0xe714>
   218f0:	ldrb	r0, [r2]
   218f4:	cmp	r0, #32
   218f8:	bls	219e0 <main@@Base+0xe700>
   218fc:	mov	r1, r2
   21900:	cmp	r1, r8
   21904:	bne	21a10 <main@@Base+0xe730>
   21908:	b	21a48 <main@@Base+0xe768>
   2190c:	cmp	r0, #34	; 0x22
   21910:	mov	r4, sl
   21914:	bne	21c68 <main@@Base+0xe988>
   21918:	add	r1, sl, #6
   2191c:	sub	r0, r8, r1
   21920:	cmp	r0, #2
   21924:	blt	21a70 <main@@Base+0xe790>
   21928:	ldrb	r0, [r1]
   2192c:	cmp	r0, #32
   21930:	bls	21a5c <main@@Base+0xe77c>
   21934:	mov	r4, r1
   21938:	cmp	r4, r8
   2193c:	bne	21a88 <main@@Base+0xe7a8>
   21940:	b	21ac4 <main@@Base+0xe7e4>
   21944:	bne	21958 <main@@Base+0xe678>
   21948:	mov	r2, r1
   2194c:	ldrb	r0, [r2, #1]!
   21950:	cmp	r0, #32
   21954:	bhi	21968 <main@@Base+0xe688>
   21958:	mov	r0, r5
   2195c:	mov	r2, r8
   21960:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21964:	mov	r2, r0
   21968:	cmp	r2, r8
   2196c:	beq	219c8 <main@@Base+0xe6e8>
   21970:	ldrb	r0, [r2]
   21974:	cmp	r0, #58	; 0x3a
   21978:	bne	219c8 <main@@Base+0xe6e8>
   2197c:	add	r1, r2, #1
   21980:	sub	r0, r8, r1
   21984:	cmp	r0, #2
   21988:	blt	21b64 <main@@Base+0xe884>
   2198c:	ldrb	r0, [r1]
   21990:	cmp	r0, #32
   21994:	bls	21b54 <main@@Base+0xe874>
   21998:	mov	r2, r1
   2199c:	cmp	r4, r2
   219a0:	bne	21b7c <main@@Base+0xe89c>
   219a4:	mov	r0, r5
   219a8:	mov	r1, r4
   219ac:	mov	r2, r8
   219b0:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   219b4:	mov	r4, r0
   219b8:	sub	r0, r8, r4
   219bc:	cmp	r0, #2
   219c0:	bge	21d80 <main@@Base+0xeaa0>
   219c4:	b	21db0 <main@@Base+0xead0>
   219c8:	mov	r1, r2
   219cc:	mov	r0, r5
   219d0:	mov	r2, r8
   219d4:	mov	r3, #4
   219d8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   219dc:	b	21b70 <main@@Base+0xe890>
   219e0:	bne	219f4 <main@@Base+0xe714>
   219e4:	mov	r1, r2
   219e8:	ldrb	r0, [r1, #1]!
   219ec:	cmp	r0, #32
   219f0:	bhi	21a08 <main@@Base+0xe728>
   219f4:	mov	r1, r2
   219f8:	mov	r0, r5
   219fc:	mov	r2, r8
   21a00:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21a04:	mov	r1, r0
   21a08:	cmp	r1, r8
   21a0c:	beq	21a48 <main@@Base+0xe768>
   21a10:	ldrb	r0, [r1]
   21a14:	cmp	r0, #58	; 0x3a
   21a18:	bne	21a48 <main@@Base+0xe768>
   21a1c:	add	r2, r1, #1
   21a20:	sub	r0, r8, r2
   21a24:	cmp	r0, #2
   21a28:	blt	21be4 <main@@Base+0xe904>
   21a2c:	ldrb	r0, [r2]
   21a30:	cmp	r0, #32
   21a34:	bls	21bd4 <main@@Base+0xe8f4>
   21a38:	mov	r1, r2
   21a3c:	cmp	sl, r1
   21a40:	bne	21c00 <main@@Base+0xe920>
   21a44:	b	21cf8 <main@@Base+0xea18>
   21a48:	mov	r0, r5
   21a4c:	mov	r2, r8
   21a50:	mov	r3, #4
   21a54:	bl	30170 <flatcc_json_parser_set_error@@Base>
   21a58:	b	21bf4 <main@@Base+0xe914>
   21a5c:	bne	21a70 <main@@Base+0xe790>
   21a60:	mov	r4, r1
   21a64:	ldrb	r0, [r4, #1]!
   21a68:	cmp	r0, #32
   21a6c:	bhi	21a80 <main@@Base+0xe7a0>
   21a70:	mov	r0, r5
   21a74:	mov	r2, r8
   21a78:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21a7c:	mov	r4, r0
   21a80:	cmp	r4, r8
   21a84:	beq	21ac4 <main@@Base+0xe7e4>
   21a88:	ldrb	r0, [r4]
   21a8c:	cmp	r0, #58	; 0x3a
   21a90:	bne	21ac4 <main@@Base+0xe7e4>
   21a94:	add	r1, r4, #1
   21a98:	sub	r0, r8, r1
   21a9c:	cmp	r0, #2
   21aa0:	blt	21c58 <main@@Base+0xe978>
   21aa4:	ldrb	r0, [r1]
   21aa8:	cmp	r0, #32
   21aac:	bls	21c48 <main@@Base+0xe968>
   21ab0:	mov	r4, r1
   21ab4:	ldr	r9, [sp, #48]	; 0x30
   21ab8:	cmp	sl, r4
   21abc:	bne	21c74 <main@@Base+0xe994>
   21ac0:	b	21cf8 <main@@Base+0xea18>
   21ac4:	mov	r0, r5
   21ac8:	mov	r1, r4
   21acc:	mov	r2, r8
   21ad0:	mov	r3, #4
   21ad4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   21ad8:	b	21c64 <main@@Base+0xe984>
   21adc:	bne	21aec <main@@Base+0xe80c>
   21ae0:	ldrb	r0, [r1, #2]!
   21ae4:	cmp	r0, #32
   21ae8:	bhi	21b04 <main@@Base+0xe824>
   21aec:	ldr	r0, [sp, #52]	; 0x34
   21af0:	mov	r1, r2
   21af4:	mov	r2, r8
   21af8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21afc:	mov	lr, r5
   21b00:	mov	r1, r0
   21b04:	cmp	sl, r1
   21b08:	beq	217b8 <main@@Base+0xe4d8>
   21b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21b10:	mov	r2, #3
   21b14:	mov	r3, #0
   21b18:	str	r2, [sp]
   21b1c:	mov	r2, r8
   21b20:	str	r0, [sp, #4]
   21b24:	movw	r0, #632	; 0x278
   21b28:	movt	r0, #2
   21b2c:	str	r0, [sp, #8]
   21b30:	ldr	r5, [sp, #52]	; 0x34
   21b34:	mov	r0, r5
   21b38:	bl	337fc <flatcc_json_parser_union_vector@@Base>
   21b3c:	ldr	r9, [sp, #48]	; 0x30
   21b40:	mov	r4, r0
   21b44:	sub	r0, r8, r4
   21b48:	cmp	r0, #2
   21b4c:	bge	21d80 <main@@Base+0xeaa0>
   21b50:	b	21db0 <main@@Base+0xead0>
   21b54:	bne	21b64 <main@@Base+0xe884>
   21b58:	ldrb	r0, [r2, #2]!
   21b5c:	cmp	r0, #32
   21b60:	bhi	21b74 <main@@Base+0xe894>
   21b64:	mov	r0, r5
   21b68:	mov	r2, r8
   21b6c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21b70:	mov	r2, r0
   21b74:	cmp	r4, r2
   21b78:	beq	219a4 <main@@Base+0xe6c4>
   21b7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21b80:	mov	r1, #3
   21b84:	mov	r3, #0
   21b88:	str	r1, [sp]
   21b8c:	mov	r1, r2
   21b90:	mov	r2, r8
   21b94:	str	r0, [sp, #4]
   21b98:	ldr	r0, [sp, #32]
   21b9c:	str	r0, [sp, #8]
   21ba0:	movw	r0, #632	; 0x278
   21ba4:	movt	r0, #2
   21ba8:	str	r0, [sp, #12]
   21bac:	movw	r0, #22032	; 0x5610
   21bb0:	movt	r0, #2
   21bb4:	str	r0, [sp, #16]
   21bb8:	mov	r0, r5
   21bbc:	bl	33d70 <flatcc_json_parser_union_type_vector@@Base>
   21bc0:	mov	r4, r0
   21bc4:	sub	r0, r8, r4
   21bc8:	cmp	r0, #2
   21bcc:	blt	21db0 <main@@Base+0xead0>
   21bd0:	b	21d80 <main@@Base+0xeaa0>
   21bd4:	bne	21be4 <main@@Base+0xe904>
   21bd8:	ldrb	r0, [r1, #2]!
   21bdc:	cmp	r0, #32
   21be0:	bhi	21bf8 <main@@Base+0xe918>
   21be4:	mov	r1, r2
   21be8:	mov	r0, r5
   21bec:	mov	r2, r8
   21bf0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21bf4:	mov	r1, r0
   21bf8:	cmp	sl, r1
   21bfc:	beq	21cf8 <main@@Base+0xea18>
   21c00:	mov	r0, r5
   21c04:	mov	r2, r8
   21c08:	sub	r3, fp, #32
   21c0c:	bl	25624 <main@@Base+0x12344>
   21c10:	ldr	r6, [fp, #-32]	; 0xffffffe0
   21c14:	mov	r4, r0
   21c18:	cmp	r6, #0
   21c1c:	beq	23644 <main@@Base+0x10364>
   21c20:	ldr	r0, [r5]
   21c24:	mov	r1, #0
   21c28:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   21c2c:	cmp	r0, #0
   21c30:	beq	23644 <main@@Base+0x10364>
   21c34:	str	r6, [r0]
   21c38:	sub	r0, r8, r4
   21c3c:	cmp	r0, #2
   21c40:	bge	21d80 <main@@Base+0xeaa0>
   21c44:	b	21db0 <main@@Base+0xead0>
   21c48:	bne	21c58 <main@@Base+0xe978>
   21c4c:	ldrb	r0, [r4, #2]!
   21c50:	cmp	r0, #32
   21c54:	bhi	21c68 <main@@Base+0xe988>
   21c58:	mov	r0, r5
   21c5c:	mov	r2, r8
   21c60:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21c64:	mov	r4, r0
   21c68:	ldr	r9, [sp, #48]	; 0x30
   21c6c:	cmp	sl, r4
   21c70:	beq	21cf8 <main@@Base+0xea18>
   21c74:	mov	r0, #0
   21c78:	mov	r1, #10
   21c7c:	str	r0, [fp, #-32]	; 0xffffffe0
   21c80:	ldr	r0, [r5]
   21c84:	bl	2d064 <flatcc_builder_start_table@@Base>
   21c88:	cmp	r0, #0
   21c8c:	bne	236fc <main@@Base+0x1041c>
   21c90:	sub	r0, fp, #48	; 0x30
   21c94:	mov	r1, r4
   21c98:	mov	r2, r8
   21c9c:	mov	r3, #5
   21ca0:	str	r0, [sp]
   21ca4:	mov	r0, r5
   21ca8:	bl	32fa0 <flatcc_json_parser_prepare_unions@@Base>
   21cac:	cmp	r0, r8
   21cb0:	beq	236fc <main@@Base+0x1041c>
   21cb4:	cmp	r4, r8
   21cb8:	beq	21d04 <main@@Base+0xea24>
   21cbc:	ldrb	r0, [r4]
   21cc0:	cmp	r0, #123	; 0x7b
   21cc4:	bne	21d04 <main@@Base+0xea24>
   21cc8:	add	r1, r4, #1
   21ccc:	sub	r0, r8, r1
   21cd0:	cmp	r0, #2
   21cd4:	blt	21e4c <main@@Base+0xeb6c>
   21cd8:	ldrb	r0, [r1]
   21cdc:	cmp	r0, #32
   21ce0:	bls	21e3c <main@@Base+0xeb5c>
   21ce4:	mov	r4, r1
   21ce8:	cmp	r4, r8
   21cec:	mov	r2, r8
   21cf0:	bne	21e68 <main@@Base+0xeb88>
   21cf4:	b	21ea8 <main@@Base+0xebc8>
   21cf8:	mov	r0, r5
   21cfc:	mov	r1, sl
   21d00:	b	219ac <main@@Base+0xe6cc>
   21d04:	mov	r0, r5
   21d08:	mov	r1, r4
   21d0c:	mov	r2, r8
   21d10:	mov	r3, #21
   21d14:	bl	30170 <flatcc_json_parser_set_error@@Base>
   21d18:	mov	r4, r0
   21d1c:	ldr	r0, [sp, #36]	; 0x24
   21d20:	ldr	r0, [r0]
   21d24:	cmp	r0, #0
   21d28:	bne	236fc <main@@Base+0x1041c>
   21d2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21d30:	mov	r0, r5
   21d34:	mov	r1, r4
   21d38:	mov	r2, r8
   21d3c:	bl	33030 <flatcc_json_parser_finalize_unions@@Base>
   21d40:	mov	r4, r0
   21d44:	ldr	r0, [r5]
   21d48:	bl	2da14 <flatcc_builder_end_table@@Base>
   21d4c:	cmp	r0, #0
   21d50:	str	r0, [fp, #-32]	; 0xffffffe0
   21d54:	beq	236fc <main@@Base+0x1041c>
   21d58:	mov	r7, r0
   21d5c:	ldr	r0, [r5]
   21d60:	mov	r1, #1
   21d64:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   21d68:	cmp	r0, #0
   21d6c:	beq	23644 <main@@Base+0x10364>
   21d70:	str	r7, [r0]
   21d74:	sub	r0, r8, r4
   21d78:	cmp	r0, #2
   21d7c:	blt	21db0 <main@@Base+0xead0>
   21d80:	ldrb	r0, [r4]
   21d84:	cmp	r0, #32
   21d88:	bls	21d9c <main@@Base+0xeabc>
   21d8c:	mov	r2, r4
   21d90:	cmp	r2, r8
   21d94:	bne	21dcc <main@@Base+0xeaec>
   21d98:	b	23514 <main@@Base+0x10234>
   21d9c:	bne	21db0 <main@@Base+0xead0>
   21da0:	mov	r2, r4
   21da4:	ldrb	r0, [r2, #1]!
   21da8:	cmp	r0, #32
   21dac:	bhi	21dc4 <main@@Base+0xeae4>
   21db0:	mov	r0, r5
   21db4:	mov	r1, r4
   21db8:	mov	r2, r8
   21dbc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21dc0:	mov	r2, r0
   21dc4:	cmp	r2, r8
   21dc8:	beq	23514 <main@@Base+0x10234>
   21dcc:	ldrb	r0, [r2]
   21dd0:	cmp	r0, #44	; 0x2c
   21dd4:	bne	2352c <main@@Base+0x1024c>
   21dd8:	add	r1, r2, #1
   21ddc:	sub	r0, r8, r1
   21de0:	cmp	r0, #2
   21de4:	blt	21e14 <main@@Base+0xeb34>
   21de8:	ldrb	r0, [r1]
   21dec:	cmp	r0, #32
   21df0:	bls	21e04 <main@@Base+0xeb24>
   21df4:	mov	r2, r1
   21df8:	cmp	r2, r8
   21dfc:	bne	21e2c <main@@Base+0xeb4c>
   21e00:	b	23548 <main@@Base+0x10268>
   21e04:	bne	21e14 <main@@Base+0xeb34>
   21e08:	ldrb	r0, [r2, #2]!
   21e0c:	cmp	r0, #32
   21e10:	bhi	21e24 <main@@Base+0xeb44>
   21e14:	mov	r0, r5
   21e18:	mov	r2, r8
   21e1c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21e20:	mov	r2, r0
   21e24:	cmp	r2, r8
   21e28:	beq	23548 <main@@Base+0x10268>
   21e2c:	ldrb	r0, [r2]
   21e30:	cmp	r0, #125	; 0x7d
   21e34:	bne	2146c <main@@Base+0xe18c>
   21e38:	b	23554 <main@@Base+0x10274>
   21e3c:	bne	21e4c <main@@Base+0xeb6c>
   21e40:	ldrb	r0, [r4, #2]!
   21e44:	cmp	r0, #32
   21e48:	bhi	21e5c <main@@Base+0xeb7c>
   21e4c:	mov	r0, r5
   21e50:	mov	r2, r8
   21e54:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   21e58:	mov	r4, r0
   21e5c:	cmp	r4, r8
   21e60:	mov	r2, r8
   21e64:	beq	21ea8 <main@@Base+0xebc8>
   21e68:	ldrb	r0, [r4]
   21e6c:	cmp	r0, #125	; 0x7d
   21e70:	bne	21ea4 <main@@Base+0xebc4>
   21e74:	add	r1, r4, #1
   21e78:	sub	r0, r8, r1
   21e7c:	cmp	r0, #2
   21e80:	blt	23504 <main@@Base+0x10224>
   21e84:	ldrb	r0, [r1]
   21e88:	cmp	r0, #32
   21e8c:	bhi	234ac <main@@Base+0x101cc>
   21e90:	bne	23504 <main@@Base+0x10224>
   21e94:	ldrb	r0, [r4, #2]!
   21e98:	cmp	r0, #32
   21e9c:	bhi	21d1c <main@@Base+0xea3c>
   21ea0:	b	23504 <main@@Base+0x10224>
   21ea4:	mov	r2, r4
   21ea8:	cmp	r2, r8
   21eac:	mov	r9, r8
   21eb0:	beq	21f04 <main@@Base+0xec24>
   21eb4:	ldrb	r0, [r2]
   21eb8:	cmp	r0, #46	; 0x2e
   21ebc:	beq	21ed8 <main@@Base+0xebf8>
   21ec0:	cmp	r0, #34	; 0x22
   21ec4:	bne	21ef4 <main@@Base+0xec14>
   21ec8:	ldr	r0, [sp, #40]	; 0x28
   21ecc:	mov	r1, #0
   21ed0:	add	r9, r2, #1
   21ed4:	b	21f00 <main@@Base+0xec20>
   21ed8:	ldr	r0, [sp, #52]	; 0x34
   21edc:	mov	r1, r2
   21ee0:	mov	r2, r8
   21ee4:	mov	r3, #5
   21ee8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   21eec:	mov	r9, r0
   21ef0:	b	21f04 <main@@Base+0xec24>
   21ef4:	ldr	r0, [sp, #40]	; 0x28
   21ef8:	mov	r1, #1
   21efc:	mov	r9, r2
   21f00:	str	r1, [r0]
   21f04:	sub	ip, r8, r9
   21f08:	mov	r0, #8
   21f0c:	cmp	ip, #8
   21f10:	movcc	r0, ip
   21f14:	and	r0, r0, #15
   21f18:	sub	r7, r0, #1
   21f1c:	cmp	r7, #7
   21f20:	bhi	22a54 <main@@Base+0xf774>
   21f24:	add	r5, pc, #32
   21f28:	mov	r1, #0
   21f2c:	mov	lr, #0
   21f30:	mov	r8, #0
   21f34:	mov	r6, #0
   21f38:	mov	r3, #0
   21f3c:	mov	r4, #0
   21f40:	mov	r0, #0
   21f44:	mov	r2, #0
   21f48:	ldr	pc, [r5, r7, lsl #2]
   21f4c:			; <UNDEFINED> instruction: 0x00021fb0
   21f50:	andeq	r1, r2, r8, lsr #31
   21f54:	andeq	r1, r2, r0, lsr #31
   21f58:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f5c:	andeq	r1, r2, ip, lsl #31
   21f60:	andeq	r1, r2, r0, lsl #31
   21f64:	andeq	r1, r2, r0, ror pc
   21f68:	andeq	r1, r2, ip, ror #30
   21f6c:	ldrb	lr, [r9, #7]
   21f70:	ldrb	r0, [r9, #6]
   21f74:	mov	r8, r1
   21f78:	orr	r0, lr, r0, lsl #8
   21f7c:	mov	r1, r0
   21f80:	ldrb	r0, [r9, #5]
   21f84:	mov	r6, r8
   21f88:	orr	r1, r1, r0, lsl #16
   21f8c:	ldrb	r0, [r9, #4]
   21f90:	mov	r3, r6
   21f94:	orr	r1, r1, r0, lsl #24
   21f98:	ldrb	r0, [r9, #3]
   21f9c:	orr	r4, r0, r3
   21fa0:	ldrb	r0, [r9, #2]
   21fa4:	orr	r0, r4, r0, lsl #8
   21fa8:	ldrb	r2, [r9, #1]
   21fac:	orr	r2, r0, r2, lsl #16
   21fb0:	ldrb	r0, [r9]
   21fb4:	orr	r2, r2, r0, lsl #24
   21fb8:	movw	r0, #29797	; 0x7465
   21fbc:	movt	r0, #24931	; 0x6163
   21fc0:	subs	r0, r1, r0
   21fc4:	movw	r0, #24946	; 0x6172
   21fc8:	movt	r0, #25448	; 0x6368
   21fcc:	sbcs	r0, r2, r0
   21fd0:	bcs	22134 <main@@Base+0xee54>
   21fd4:	movw	r0, #29817	; 0x7479
   21fd8:	movw	r3, #28005	; 0x6d65
   21fdc:	ldr	r8, [sp, #44]	; 0x2c
   21fe0:	movt	r0, #28511	; 0x6f5f
   21fe4:	movt	r3, #25441	; 0x6361
   21fe8:	eor	r0, r1, r0
   21fec:	eor	r3, r2, r3
   21ff0:	orrs	r0, r0, r3
   21ff4:	beq	2245c <main@@Base+0xf17c>
   21ff8:	movw	r0, #28265	; 0x6e69
   21ffc:	movw	r7, #29793	; 0x7461
   22000:	movt	r0, #26479	; 0x676f
   22004:	movt	r7, #24942	; 0x616e
   22008:	eor	r0, r1, r0
   2200c:	eor	r2, r2, r7
   22010:	orrs	r0, r0, r2
   22014:	bne	224f4 <main@@Base+0xf214>
   22018:	add	sl, r9, #8
   2201c:	mov	r0, #8
   22020:	sub	ip, r8, sl
   22024:	cmp	ip, #8
   22028:	movcc	r0, ip
   2202c:	and	r0, r0, #15
   22030:	sub	r6, r0, #1
   22034:	cmp	r6, #7
   22038:	bhi	232e8 <main@@Base+0x10008>
   2203c:	add	r2, pc, #28
   22040:	mov	r5, #0
   22044:	mov	lr, #0
   22048:	mov	r1, #0
   2204c:	mov	r3, #0
   22050:	mov	r4, #0
   22054:	mov	r7, #0
   22058:	mov	r0, #0
   2205c:	ldr	pc, [r2, r6, lsl #2]
   22060:	strheq	r2, [r2], -ip
   22064:	strheq	r2, [r2], -r4
   22068:	andeq	r2, r2, ip, lsr #1
   2206c:	andeq	r2, r2, r4, lsr #1
   22070:	muleq	r2, r8, r0
   22074:	andeq	r2, r2, r8, lsl #1
   22078:	andeq	r2, r2, r0, lsl #1
   2207c:	andeq	r2, r2, r0, lsl #1
   22080:	ldrb	r0, [r9, #14]
   22084:	lsl	lr, r0, #8
   22088:	ldrb	r0, [r9, #13]
   2208c:	mov	r1, r5
   22090:	orr	r0, lr, r0, lsl #16
   22094:	mov	r5, r0
   22098:	ldrb	r0, [r9, #12]
   2209c:	mov	r3, r1
   220a0:	orr	r5, r5, r0, lsl #24
   220a4:	ldrb	r0, [r9, #11]
   220a8:	orr	r4, r0, r3
   220ac:	ldrb	r0, [r9, #10]
   220b0:	orr	r7, r4, r0, lsl #8
   220b4:	ldrb	r0, [r9, #9]
   220b8:	orr	r0, r7, r0, lsl #16
   220bc:	ldrb	r1, [sl]
   220c0:	movw	r3, #25856	; 0x6500
   220c4:	bic	r2, r5, #255	; 0xff
   220c8:	movt	r3, #31088	; 0x7970
   220cc:	eor	r2, r2, r3
   220d0:	orr	r1, r0, r1, lsl #24
   220d4:	ldr	r0, [sp, #28]
   220d8:	eor	r0, r1, r0
   220dc:	orrs	r0, r2, r0
   220e0:	bne	2266c <main@@Base+0xf38c>
   220e4:	ldr	r8, [sp, #44]	; 0x2c
   220e8:	cmp	ip, #8
   220ec:	blt	232e8 <main@@Base+0x10008>
   220f0:	ldr	r2, [sp, #40]	; 0x28
   220f4:	mov	r1, r9
   220f8:	ldrb	r0, [r1, #15]!
   220fc:	ldr	r2, [r2]
   22100:	cmp	r2, #0
   22104:	beq	22870 <main@@Base+0xf590>
   22108:	cmp	r0, #33	; 0x21
   2210c:	bcc	22118 <main@@Base+0xee38>
   22110:	cmp	r0, #58	; 0x3a
   22114:	bne	232e8 <main@@Base+0x10008>
   22118:	ldr	r0, [sp, #40]	; 0x28
   2211c:	mov	r2, #0
   22120:	str	r2, [r0]
   22124:	sub	r0, r8, r1
   22128:	cmp	r0, #2
   2212c:	bge	22888 <main@@Base+0xf5a8>
   22130:	b	22a8c <main@@Base+0xf7ac>
   22134:	movw	r0, #26720	; 0x6860
   22138:	ldr	r8, [sp, #44]	; 0x2c
   2213c:	movt	r0, #24419	; 0x5f63
   22140:	subs	r0, r0, r1
   22144:	movw	r0, #26990	; 0x696e
   22148:	movt	r0, #28001	; 0x6d61
   2214c:	sbcs	r0, r0, r2
   22150:	bcc	22294 <main@@Base+0xefb4>
   22154:	movw	r0, #29797	; 0x7465
   22158:	movt	r0, #24931	; 0x6163
   2215c:	eor	r0, r1, r0
   22160:	movw	r1, #24946	; 0x6172
   22164:	movt	r1, #25448	; 0x6368
   22168:	eor	r1, r2, r1
   2216c:	orrs	r0, r0, r1
   22170:	bne	22a54 <main@@Base+0xf774>
   22174:	add	sl, r9, #8
   22178:	mov	r0, #8
   2217c:	sub	ip, r8, sl
   22180:	cmp	ip, #8
   22184:	movcc	r0, ip
   22188:	and	r0, r0, #15
   2218c:	sub	r6, r0, #1
   22190:	cmp	r6, #7
   22194:	bhi	232e8 <main@@Base+0x10008>
   22198:	add	r2, pc, #28
   2219c:	mov	r1, #0
   221a0:	mov	lr, #0
   221a4:	mov	r5, #0
   221a8:	mov	r3, #0
   221ac:	mov	r4, #0
   221b0:	mov	r7, #0
   221b4:	mov	r0, #0
   221b8:	ldr	pc, [r2, r6, lsl #2]
   221bc:	andeq	r2, r2, r8, lsl r2
   221c0:	andeq	r2, r2, r0, lsl r2
   221c4:	andeq	r2, r2, r8, lsl #4
   221c8:	andeq	r2, r2, r0, lsl #4
   221cc:	strdeq	r2, [r2], -r4
   221d0:	andeq	r2, r2, r4, ror #3
   221d4:	ldrdeq	r2, [r2], -ip
   221d8:	ldrdeq	r2, [r2], -ip
   221dc:	ldrb	r0, [r9, #14]
   221e0:	lsl	lr, r0, #8
   221e4:	ldrb	r0, [r9, #13]
   221e8:	mov	r5, r1
   221ec:	orr	r0, lr, r0, lsl #16
   221f0:	mov	r1, r0
   221f4:	ldrb	r0, [r9, #12]
   221f8:	mov	r3, r5
   221fc:	orr	r1, r1, r0, lsl #24
   22200:	ldrb	r0, [r9, #11]
   22204:	orr	r4, r0, r3
   22208:	ldrb	r0, [r9, #10]
   2220c:	orr	r7, r4, r0, lsl #8
   22210:	ldrb	r0, [r9, #9]
   22214:	orr	r0, r7, r0, lsl #16
   22218:	movw	r2, #25856	; 0x6500
   2221c:	bic	r1, r1, #255	; 0xff
   22220:	movt	r2, #31088	; 0x7970
   22224:	eor	r1, r1, r2
   22228:	ldrb	r2, [sl]
   2222c:	orr	r0, r0, r2, lsl #24
   22230:	movw	r2, #24436	; 0x5f74
   22234:	movt	r2, #29299	; 0x7273
   22238:	eor	r2, r0, r2
   2223c:	orrs	r1, r1, r2
   22240:	bne	226d4 <main@@Base+0xf3f4>
   22244:	ldr	r8, [sp, #44]	; 0x2c
   22248:	cmp	ip, #8
   2224c:	blt	232e8 <main@@Base+0x10008>
   22250:	ldr	r2, [sp, #40]	; 0x28
   22254:	mov	r1, r9
   22258:	ldrb	r0, [r1, #15]!
   2225c:	ldr	r2, [r2]
   22260:	cmp	r2, #0
   22264:	beq	228fc <main@@Base+0xf61c>
   22268:	cmp	r0, #33	; 0x21
   2226c:	bcc	22278 <main@@Base+0xef98>
   22270:	cmp	r0, #58	; 0x3a
   22274:	bne	232e8 <main@@Base+0x10008>
   22278:	ldr	r0, [sp, #40]	; 0x28
   2227c:	mov	r2, #0
   22280:	str	r2, [r0]
   22284:	sub	r0, r8, r1
   22288:	cmp	r0, #2
   2228c:	bge	22914 <main@@Base+0xf634>
   22290:	b	22c20 <main@@Base+0xf940>
   22294:	movw	r0, #26979	; 0x6963
   22298:	movw	r3, #25701	; 0x6465
   2229c:	movt	r0, #24427	; 0x5f6b
   222a0:	movt	r3, #29545	; 0x7369
   222a4:	eor	r0, r1, r0
   222a8:	eor	r3, r2, r3
   222ac:	orrs	r0, r0, r3
   222b0:	beq	22558 <main@@Base+0xf278>
   222b4:	movw	r0, #26721	; 0x6861
   222b8:	movt	r0, #24419	; 0x5f63
   222bc:	eor	r0, r1, r0
   222c0:	movw	r1, #26990	; 0x696e
   222c4:	movt	r1, #28001	; 0x6d61
   222c8:	eor	r1, r2, r1
   222cc:	orrs	r0, r0, r1
   222d0:	bne	22a54 <main@@Base+0xf774>
   222d4:	add	r7, r9, #8
   222d8:	mov	r0, #8
   222dc:	sub	lr, r8, r7
   222e0:	cmp	lr, #8
   222e4:	movcc	r0, lr
   222e8:	and	r0, r0, #15
   222ec:	sub	r6, r0, #1
   222f0:	cmp	r6, #7
   222f4:	bhi	23364 <main@@Base+0x10084>
   222f8:	str	r7, [sp, #24]
   222fc:	add	r5, pc, #32
   22300:	mov	r1, #0
   22304:	mov	ip, #0
   22308:	mov	sl, #0
   2230c:	mov	r7, #0
   22310:	mov	r3, #0
   22314:	mov	r4, #0
   22318:	mov	r2, #0
   2231c:	mov	r0, #0
   22320:	ldr	pc, [r5, r6, lsl #2]
   22324:	andeq	r2, r2, r8, lsl #7
   22328:	andeq	r2, r2, r0, lsl #7
   2232c:	andeq	r2, r2, r8, ror r3
   22330:	andeq	r2, r2, r0, ror r3
   22334:	andeq	r2, r2, r4, ror #6
   22338:	andeq	r2, r2, r8, asr r3
   2233c:	andeq	r2, r2, r8, asr #6
   22340:	andeq	r2, r2, r4, asr #6
   22344:	ldrb	ip, [r9, #15]
   22348:	ldrb	r0, [r9, #14]
   2234c:	mov	sl, r1
   22350:	orr	r0, ip, r0, lsl #8
   22354:	mov	r1, r0
   22358:	ldrb	r0, [r9, #13]
   2235c:	mov	r7, sl
   22360:	orr	r1, r1, r0, lsl #16
   22364:	ldrb	r0, [r9, #12]
   22368:	mov	r3, r7
   2236c:	orr	r1, r1, r0, lsl #24
   22370:	ldrb	r0, [r9, #11]
   22374:	orr	r4, r0, r3
   22378:	ldrb	r0, [r9, #10]
   2237c:	orr	r2, r4, r0, lsl #8
   22380:	ldrb	r0, [r9, #9]
   22384:	orr	r0, r2, r0, lsl #16
   22388:	ldr	r7, [sp, #24]
   2238c:	movw	r2, #24436	; 0x5f74
   22390:	movt	r2, #25970	; 0x6572
   22394:	eor	r2, r1, r2
   22398:	ldrb	r3, [r7]
   2239c:	orr	r0, r0, r3, lsl #24
   223a0:	movw	r3, #25460	; 0x6374
   223a4:	movt	r3, #29281	; 0x7261
   223a8:	eor	r3, r0, r3
   223ac:	orrs	r2, r2, r3
   223b0:	bne	2273c <main@@Base+0xf45c>
   223b4:	ldr	r8, [sp, #44]	; 0x2c
   223b8:	add	r7, r9, #16
   223bc:	mov	r1, #8
   223c0:	sub	r0, r8, r7
   223c4:	cmp	r0, #8
   223c8:	movcc	r1, r0
   223cc:	and	r2, r1, #15
   223d0:	sub	r1, r2, #3
   223d4:	cmp	r1, #6
   223d8:	bcs	228e0 <main@@Base+0xf600>
   223dc:	ldrb	r1, [r9, #18]
   223e0:	lsl	r1, r1, #8
   223e4:	ldrb	r2, [r9, #17]
   223e8:	orr	r1, r1, r2, lsl #16
   223ec:	ldrb	r2, [r7]
   223f0:	bic	r1, r1, #255	; 0xff
   223f4:	orr	r1, r1, r2, lsl #24
   223f8:	movw	r2, #25856	; 0x6500
   223fc:	movt	r2, #31088	; 0x7970
   22400:	teq	r1, r2
   22404:	bne	23364 <main@@Base+0x10084>
   22408:	cmp	r0, #4
   2240c:	blt	23364 <main@@Base+0x10084>
   22410:	ldr	r2, [sp, #40]	; 0x28
   22414:	mov	r1, r9
   22418:	ldrb	r0, [r1, #19]!
   2241c:	ldr	r2, [r2]
   22420:	cmp	r2, #0
   22424:	beq	22c8c <main@@Base+0xf9ac>
   22428:	ldr	r8, [sp, #44]	; 0x2c
   2242c:	cmp	r0, #33	; 0x21
   22430:	bcc	2243c <main@@Base+0xf15c>
   22434:	cmp	r0, #58	; 0x3a
   22438:	bne	23364 <main@@Base+0x10084>
   2243c:	ldr	r0, [sp, #40]	; 0x28
   22440:	mov	r2, #0
   22444:	str	r2, [r0]
   22448:	ldr	r0, [sp, #44]	; 0x2c
   2244c:	sub	r0, r0, r1
   22450:	cmp	r0, #2
   22454:	bge	22cac <main@@Base+0xf9cc>
   22458:	b	23104 <main@@Base+0xfe24>
   2245c:	add	r7, r9, #8
   22460:	mov	r1, #8
   22464:	sub	r0, r8, r7
   22468:	cmp	r0, #8
   2246c:	movcc	r1, r0
   22470:	and	r2, r1, #15
   22474:	sub	r1, r2, #2
   22478:	cmp	r1, #7
   2247c:	bcs	227bc <main@@Base+0xf4dc>
   22480:	ldrb	r1, [r9, #9]
   22484:	lsl	r2, r1, #16
   22488:	mov	r1, #0
   2248c:	ldrb	r3, [r7]
   22490:	orr	r2, r2, r3, lsl #24
   22494:	movw	r3, #0
   22498:	movt	r3, #28773	; 0x7065
   2249c:	eor	r2, r2, r3
   224a0:	orrs	r1, r1, r2
   224a4:	bne	23364 <main@@Base+0x10084>
   224a8:	cmp	r0, #3
   224ac:	blt	23364 <main@@Base+0x10084>
   224b0:	ldr	r2, [sp, #40]	; 0x28
   224b4:	mov	r1, r9
   224b8:	ldrb	r0, [r1, #10]!
   224bc:	ldr	r2, [r2]
   224c0:	cmp	r2, #0
   224c4:	beq	228a8 <main@@Base+0xf5c8>
   224c8:	cmp	r0, #33	; 0x21
   224cc:	bcc	224d8 <main@@Base+0xf1f8>
   224d0:	cmp	r0, #58	; 0x3a
   224d4:	bne	23364 <main@@Base+0x10084>
   224d8:	ldr	r0, [sp, #40]	; 0x28
   224dc:	mov	r2, #0
   224e0:	str	r2, [r0]
   224e4:	sub	r0, r8, r1
   224e8:	cmp	r0, #2
   224ec:	bge	228c0 <main@@Base+0xf5e0>
   224f0:	b	22b10 <main@@Base+0xf830>
   224f4:	and	r0, r1, #-16777216	; 0xff000000
   224f8:	eor	r0, r0, #1862270976	; 0x6f000000
   224fc:	orrs	r0, r0, r3
   22500:	bne	22a54 <main@@Base+0xf774>
   22504:	cmp	ip, #6
   22508:	mov	r1, r9
   2250c:	blt	22e8c <main@@Base+0xfbac>
   22510:	ldr	r1, [sp, #40]	; 0x28
   22514:	mov	r2, r9
   22518:	ldrb	r0, [r2, #5]!
   2251c:	ldr	r1, [r1]
   22520:	cmp	r1, #0
   22524:	beq	22834 <main@@Base+0xf554>
   22528:	cmp	r0, #33	; 0x21
   2252c:	bcc	2253c <main@@Base+0xf25c>
   22530:	cmp	r0, #58	; 0x3a
   22534:	mov	r1, r9
   22538:	bne	22e8c <main@@Base+0xfbac>
   2253c:	ldr	r0, [sp, #40]	; 0x28
   22540:	mov	r1, #0
   22544:	str	r1, [r0]
   22548:	sub	r0, r8, r2
   2254c:	cmp	r0, #2
   22550:	bge	22850 <main@@Base+0xf570>
   22554:	b	22a00 <main@@Base+0xf720>
   22558:	add	sl, r9, #8
   2255c:	mov	r1, #8
   22560:	sub	r0, r8, sl
   22564:	cmp	r0, #8
   22568:	movcc	r1, r0
   2256c:	and	r1, r1, #15
   22570:	sub	r3, r1, #1
   22574:	cmp	r3, #7
   22578:	bhi	232e8 <main@@Base+0x10008>
   2257c:	add	r6, pc, #24
   22580:	mov	ip, #0
   22584:	mov	r2, #0
   22588:	mov	r1, #0
   2258c:	mov	r4, #0
   22590:	mov	r5, #0
   22594:	mov	r7, #0
   22598:	ldr	pc, [r6, r3, lsl #2]
   2259c:	andeq	r2, r2, ip, ror #11
   225a0:	andeq	r2, r2, r4, ror #11
   225a4:	ldrdeq	r2, [r2], -ip
   225a8:	ldrdeq	r2, [r2], -r4
   225ac:	andeq	r2, r2, r4, asr #11
   225b0:			; <UNDEFINED> instruction: 0x000225bc
   225b4:			; <UNDEFINED> instruction: 0x000225bc
   225b8:			; <UNDEFINED> instruction: 0x000225bc
   225bc:	ldrb	r1, [r9, #13]
   225c0:	lsl	r2, r1, #16
   225c4:	ldrb	r1, [r9, #12]
   225c8:	orr	r2, r2, r1, lsl #24
   225cc:	mov	r1, ip
   225d0:	mov	ip, r2
   225d4:	ldrb	r2, [r9, #11]
   225d8:	orr	r4, r2, r1
   225dc:	ldrb	r1, [r9, #10]
   225e0:	orr	r5, r4, r1, lsl #8
   225e4:	ldrb	r1, [r9, #9]
   225e8:	orr	r7, r5, r1, lsl #16
   225ec:	ldrb	r1, [sl]
   225f0:	lsr	r3, ip, #16
   225f4:	movw	r2, #27487	; 0x6b5f
   225f8:	orr	r1, r7, r1, lsl #24
   225fc:	movw	r7, #28773	; 0x7065
   22600:	orr	r3, r3, r1, lsl #16
   22604:	movt	r7, #29817	; 0x7479
   22608:	eor	r2, r2, r1, lsr #16
   2260c:	eor	r3, r3, r7
   22610:	orrs	r2, r3, r2
   22614:	bne	227d0 <main@@Base+0xf4f0>
   22618:	ldr	r8, [sp, #44]	; 0x2c
   2261c:	cmp	r0, #7
   22620:	blt	232e8 <main@@Base+0x10008>
   22624:	ldr	r2, [sp, #40]	; 0x28
   22628:	mov	r1, r9
   2262c:	ldrb	r0, [r1, #14]!
   22630:	ldr	r2, [r2]
   22634:	cmp	r2, #0
   22638:	beq	22934 <main@@Base+0xf654>
   2263c:	cmp	r0, #33	; 0x21
   22640:	bcc	2264c <main@@Base+0xf36c>
   22644:	cmp	r0, #58	; 0x3a
   22648:	bne	232e8 <main@@Base+0x10008>
   2264c:	ldr	r0, [sp, #40]	; 0x28
   22650:	mov	r2, #0
   22654:	str	r2, [r0]
   22658:	ldr	r4, [sp, #44]	; 0x2c
   2265c:	sub	r0, r4, r1
   22660:	cmp	r0, #2
   22664:	bge	22950 <main@@Base+0xf670>
   22668:	b	22ce4 <main@@Base+0xfa04>
   2266c:	ldr	r8, [sp, #44]	; 0x2c
   22670:	movw	r0, #0
   22674:	bfc	r1, #0, #16
   22678:	movt	r0, #29556	; 0x7374
   2267c:	teq	r1, r0
   22680:	bne	232e8 <main@@Base+0x10008>
   22684:	cmp	ip, #3
   22688:	blt	232e8 <main@@Base+0x10008>
   2268c:	ldr	r2, [sp, #40]	; 0x28
   22690:	mov	r1, r9
   22694:	ldrb	r0, [r1, #10]!
   22698:	ldr	r2, [r2]
   2269c:	cmp	r2, #0
   226a0:	beq	22970 <main@@Base+0xf690>
   226a4:	cmp	r0, #33	; 0x21
   226a8:	bcc	226b4 <main@@Base+0xf3d4>
   226ac:	cmp	r0, #58	; 0x3a
   226b0:	bne	232e8 <main@@Base+0x10008>
   226b4:	ldr	r0, [sp, #40]	; 0x28
   226b8:	mov	r2, #0
   226bc:	str	r2, [r0]
   226c0:	ldr	r4, [sp, #44]	; 0x2c
   226c4:	sub	r0, r4, r1
   226c8:	cmp	r0, #2
   226cc:	bge	2298c <main@@Base+0xf6ac>
   226d0:	b	22d6c <main@@Base+0xfa8c>
   226d4:	ldr	r8, [sp, #44]	; 0x2c
   226d8:	movw	r1, #0
   226dc:	bfc	r0, #0, #16
   226e0:	movt	r1, #29299	; 0x7273
   226e4:	teq	r0, r1
   226e8:	bne	232e8 <main@@Base+0x10008>
   226ec:	cmp	ip, #3
   226f0:	blt	232e8 <main@@Base+0x10008>
   226f4:	ldr	r2, [sp, #40]	; 0x28
   226f8:	mov	r1, r9
   226fc:	ldrb	r0, [r1, #10]!
   22700:	ldr	r2, [r2]
   22704:	cmp	r2, #0
   22708:	beq	229ac <main@@Base+0xf6cc>
   2270c:	cmp	r0, #33	; 0x21
   22710:	bcc	2271c <main@@Base+0xf43c>
   22714:	cmp	r0, #58	; 0x3a
   22718:	bne	232e8 <main@@Base+0x10008>
   2271c:	ldr	r0, [sp, #40]	; 0x28
   22720:	mov	r2, #0
   22724:	str	r2, [r0]
   22728:	ldr	r0, [sp, #44]	; 0x2c
   2272c:	sub	r0, r0, r1
   22730:	cmp	r0, #2
   22734:	bge	229c8 <main@@Base+0xf6e8>
   22738:	b	22df0 <main@@Base+0xfb10>
   2273c:	movw	r2, #29281	; 0x7261
   22740:	lsr	r1, r1, #16
   22744:	ldr	r8, [sp, #44]	; 0x2c
   22748:	eor	r2, r2, r0, lsr #16
   2274c:	orr	r0, r1, r0, lsl #16
   22750:	movw	r1, #25970	; 0x6572
   22754:	movt	r1, #25460	; 0x6374
   22758:	eor	r0, r0, r1
   2275c:	orrs	r0, r0, r2
   22760:	bne	23364 <main@@Base+0x10084>
   22764:	cmp	lr, #7
   22768:	blt	23364 <main@@Base+0x10084>
   2276c:	ldr	r2, [sp, #40]	; 0x28
   22770:	mov	r1, r9
   22774:	ldrb	r0, [r1, #14]!
   22778:	ldr	r2, [r2]
   2277c:	cmp	r2, #0
   22780:	beq	22b84 <main@@Base+0xf8a4>
   22784:	ldr	r8, [sp, #44]	; 0x2c
   22788:	ldr	r7, [sp, #24]
   2278c:	cmp	r0, #33	; 0x21
   22790:	bcc	2279c <main@@Base+0xf4bc>
   22794:	cmp	r0, #58	; 0x3a
   22798:	bne	23364 <main@@Base+0x10084>
   2279c:	ldr	r0, [sp, #40]	; 0x28
   227a0:	mov	r2, #0
   227a4:	str	r2, [r0]
   227a8:	ldr	r0, [sp, #44]	; 0x2c
   227ac:	sub	r0, r0, r1
   227b0:	cmp	r0, #2
   227b4:	bge	22ba8 <main@@Base+0xf8c8>
   227b8:	b	22f74 <main@@Base+0xfc94>
   227bc:	cmp	r2, #1
   227c0:	mov	r1, #0
   227c4:	mov	r2, #0
   227c8:	beq	2248c <main@@Base+0xf1ac>
   227cc:	b	23364 <main@@Base+0x10084>
   227d0:	ldr	r8, [sp, #44]	; 0x2c
   227d4:	and	r1, r1, #-16777216	; 0xff000000
   227d8:	teq	r1, #1795162112	; 0x6b000000
   227dc:	bne	232e8 <main@@Base+0x10008>
   227e0:	cmp	r0, #2
   227e4:	blt	232e8 <main@@Base+0x10008>
   227e8:	ldr	r2, [sp, #40]	; 0x28
   227ec:	mov	r1, r9
   227f0:	ldrb	r0, [r1, #9]!
   227f4:	ldr	r2, [r2]
   227f8:	cmp	r2, #0
   227fc:	beq	22bc8 <main@@Base+0xf8e8>
   22800:	ldr	r8, [sp, #44]	; 0x2c
   22804:	cmp	r0, #33	; 0x21
   22808:	bcc	22814 <main@@Base+0xf534>
   2280c:	cmp	r0, #58	; 0x3a
   22810:	bne	232e8 <main@@Base+0x10008>
   22814:	ldr	r0, [sp, #40]	; 0x28
   22818:	mov	r2, #0
   2281c:	str	r2, [r0]
   22820:	ldr	r0, [sp, #44]	; 0x2c
   22824:	sub	r0, r0, r1
   22828:	cmp	r0, #2
   2282c:	bge	22be8 <main@@Base+0xf908>
   22830:	b	23000 <main@@Base+0xfd20>
   22834:	cmp	r0, #34	; 0x22
   22838:	mov	r1, r9
   2283c:	bne	22e8c <main@@Base+0xfbac>
   22840:	add	r2, r9, #6
   22844:	sub	r0, r8, r2
   22848:	cmp	r0, #2
   2284c:	blt	22a00 <main@@Base+0xf720>
   22850:	ldrb	r0, [r2]
   22854:	cmp	r0, #32
   22858:	bls	229e8 <main@@Base+0xf708>
   2285c:	ldr	r8, [sp, #44]	; 0x2c
   22860:	mov	r1, r2
   22864:	cmp	r1, r8
   22868:	bne	22a1c <main@@Base+0xf73c>
   2286c:	b	22a60 <main@@Base+0xf780>
   22870:	cmp	r0, #34	; 0x22
   22874:	bne	232e8 <main@@Base+0x10008>
   22878:	add	r1, r9, #16
   2287c:	sub	r0, r8, r1
   22880:	cmp	r0, #2
   22884:	blt	22a8c <main@@Base+0xf7ac>
   22888:	ldrb	r0, [r1]
   2288c:	cmp	r0, #32
   22890:	bls	22a74 <main@@Base+0xf794>
   22894:	ldr	r8, [sp, #44]	; 0x2c
   22898:	mov	r2, r1
   2289c:	cmp	r2, r8
   228a0:	bne	22aa4 <main@@Base+0xf7c4>
   228a4:	b	22ae0 <main@@Base+0xf800>
   228a8:	cmp	r0, #34	; 0x22
   228ac:	bne	23364 <main@@Base+0x10084>
   228b0:	add	r1, r9, #11
   228b4:	sub	r0, r8, r1
   228b8:	cmp	r0, #2
   228bc:	blt	22b10 <main@@Base+0xf830>
   228c0:	ldrb	r0, [r1]
   228c4:	cmp	r0, #32
   228c8:	bls	22af8 <main@@Base+0xf818>
   228cc:	ldr	r8, [sp, #44]	; 0x2c
   228d0:	mov	r2, r1
   228d4:	cmp	r2, r8
   228d8:	bne	22b28 <main@@Base+0xf848>
   228dc:	b	22b64 <main@@Base+0xf884>
   228e0:	mov	r1, #0
   228e4:	cmp	r2, #1
   228e8:	beq	22b7c <main@@Base+0xf89c>
   228ec:	ldr	r8, [sp, #44]	; 0x2c
   228f0:	cmp	r2, #2
   228f4:	beq	223e4 <main@@Base+0xf104>
   228f8:	b	23364 <main@@Base+0x10084>
   228fc:	cmp	r0, #34	; 0x22
   22900:	bne	232e8 <main@@Base+0x10008>
   22904:	add	r1, r9, #16
   22908:	sub	r0, r8, r1
   2290c:	cmp	r0, #2
   22910:	blt	22c20 <main@@Base+0xf940>
   22914:	ldrb	r0, [r1]
   22918:	cmp	r0, #32
   2291c:	bls	22c08 <main@@Base+0xf928>
   22920:	ldr	r8, [sp, #44]	; 0x2c
   22924:	mov	r2, r1
   22928:	cmp	r2, r8
   2292c:	bne	22c38 <main@@Base+0xf958>
   22930:	b	22c74 <main@@Base+0xf994>
   22934:	cmp	r0, #34	; 0x22
   22938:	bne	232e8 <main@@Base+0x10008>
   2293c:	add	r1, r9, #15
   22940:	ldr	r4, [sp, #44]	; 0x2c
   22944:	sub	r0, r4, r1
   22948:	cmp	r0, #2
   2294c:	blt	22ce4 <main@@Base+0xfa04>
   22950:	ldrb	r0, [r1]
   22954:	cmp	r0, #32
   22958:	bls	22ccc <main@@Base+0xf9ec>
   2295c:	ldr	r4, [sp, #44]	; 0x2c
   22960:	mov	r2, r1
   22964:	cmp	r2, r4
   22968:	bne	22cfc <main@@Base+0xfa1c>
   2296c:	b	22d3c <main@@Base+0xfa5c>
   22970:	cmp	r0, #34	; 0x22
   22974:	bne	232e8 <main@@Base+0x10008>
   22978:	add	r1, r9, #11
   2297c:	ldr	r4, [sp, #44]	; 0x2c
   22980:	sub	r0, r4, r1
   22984:	cmp	r0, #2
   22988:	blt	22d6c <main@@Base+0xfa8c>
   2298c:	ldrb	r0, [r1]
   22990:	cmp	r0, #32
   22994:	bls	22d54 <main@@Base+0xfa74>
   22998:	ldr	r4, [sp, #44]	; 0x2c
   2299c:	mov	r2, r1
   229a0:	cmp	r2, r4
   229a4:	bne	22d84 <main@@Base+0xfaa4>
   229a8:	b	22dc4 <main@@Base+0xfae4>
   229ac:	cmp	r0, #34	; 0x22
   229b0:	bne	232e8 <main@@Base+0x10008>
   229b4:	add	r1, r9, #11
   229b8:	ldr	r0, [sp, #44]	; 0x2c
   229bc:	sub	r0, r0, r1
   229c0:	cmp	r0, #2
   229c4:	blt	22df0 <main@@Base+0xfb10>
   229c8:	ldrb	r0, [r1]
   229cc:	cmp	r0, #32
   229d0:	bls	22ddc <main@@Base+0xfafc>
   229d4:	mov	r2, r1
   229d8:	ldr	r0, [sp, #44]	; 0x2c
   229dc:	cmp	r2, r0
   229e0:	bne	22e0c <main@@Base+0xfb2c>
   229e4:	b	22e4c <main@@Base+0xfb6c>
   229e8:	ldr	r8, [sp, #44]	; 0x2c
   229ec:	bne	22a00 <main@@Base+0xf720>
   229f0:	mov	r1, r2
   229f4:	ldrb	r0, [r1, #1]!
   229f8:	cmp	r0, #32
   229fc:	bhi	22a14 <main@@Base+0xf734>
   22a00:	ldr	r0, [sp, #52]	; 0x34
   22a04:	mov	r1, r2
   22a08:	mov	r2, r8
   22a0c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22a10:	mov	r1, r0
   22a14:	cmp	r1, r8
   22a18:	beq	22a60 <main@@Base+0xf780>
   22a1c:	ldrb	r0, [r1]
   22a20:	cmp	r0, #58	; 0x3a
   22a24:	bne	22a60 <main@@Base+0xf780>
   22a28:	add	r2, r1, #1
   22a2c:	sub	r0, r8, r2
   22a30:	cmp	r0, #2
   22a34:	blt	22e78 <main@@Base+0xfb98>
   22a38:	ldrb	r0, [r2]
   22a3c:	cmp	r0, #32
   22a40:	bls	22e64 <main@@Base+0xfb84>
   22a44:	ldr	r8, [sp, #44]	; 0x2c
   22a48:	mov	r1, r2
   22a4c:	cmp	r9, r1
   22a50:	bne	22e94 <main@@Base+0xfbb4>
   22a54:	ldr	r5, [sp, #52]	; 0x34
   22a58:	mov	r1, r9
   22a5c:	b	2336c <main@@Base+0x1008c>
   22a60:	ldr	r0, [sp, #52]	; 0x34
   22a64:	mov	r2, r8
   22a68:	mov	r3, #4
   22a6c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22a70:	b	22e88 <main@@Base+0xfba8>
   22a74:	ldr	r8, [sp, #44]	; 0x2c
   22a78:	bne	22a8c <main@@Base+0xf7ac>
   22a7c:	mov	r2, r1
   22a80:	ldrb	r0, [r2, #1]!
   22a84:	cmp	r0, #32
   22a88:	bhi	22a9c <main@@Base+0xf7bc>
   22a8c:	ldr	r0, [sp, #52]	; 0x34
   22a90:	mov	r2, r8
   22a94:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22a98:	mov	r2, r0
   22a9c:	cmp	r2, r8
   22aa0:	beq	22ae0 <main@@Base+0xf800>
   22aa4:	ldrb	r0, [r2]
   22aa8:	cmp	r0, #58	; 0x3a
   22aac:	bne	22ae0 <main@@Base+0xf800>
   22ab0:	add	r1, r2, #1
   22ab4:	sub	r0, r8, r1
   22ab8:	cmp	r0, #2
   22abc:	blt	22edc <main@@Base+0xfbfc>
   22ac0:	ldrb	r0, [r1]
   22ac4:	cmp	r0, #32
   22ac8:	bls	22ec8 <main@@Base+0xfbe8>
   22acc:	ldr	r8, [sp, #44]	; 0x2c
   22ad0:	mov	r2, r1
   22ad4:	cmp	sl, r2
   22ad8:	bne	22ef4 <main@@Base+0xfc14>
   22adc:	b	232e8 <main@@Base+0x10008>
   22ae0:	ldr	r0, [sp, #52]	; 0x34
   22ae4:	mov	r1, r2
   22ae8:	mov	r2, r8
   22aec:	mov	r3, #4
   22af0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22af4:	b	22ee8 <main@@Base+0xfc08>
   22af8:	ldr	r8, [sp, #44]	; 0x2c
   22afc:	bne	22b10 <main@@Base+0xf830>
   22b00:	mov	r2, r1
   22b04:	ldrb	r0, [r2, #1]!
   22b08:	cmp	r0, #32
   22b0c:	bhi	22b20 <main@@Base+0xf840>
   22b10:	ldr	r0, [sp, #52]	; 0x34
   22b14:	mov	r2, r8
   22b18:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22b1c:	mov	r2, r0
   22b20:	cmp	r2, r8
   22b24:	beq	22b64 <main@@Base+0xf884>
   22b28:	ldrb	r0, [r2]
   22b2c:	cmp	r0, #58	; 0x3a
   22b30:	bne	22b64 <main@@Base+0xf884>
   22b34:	add	r1, r2, #1
   22b38:	sub	r0, r8, r1
   22b3c:	cmp	r0, #2
   22b40:	blt	22f28 <main@@Base+0xfc48>
   22b44:	ldrb	r0, [r1]
   22b48:	cmp	r0, #32
   22b4c:	bls	22f14 <main@@Base+0xfc34>
   22b50:	ldr	r8, [sp, #44]	; 0x2c
   22b54:	mov	r2, r1
   22b58:	cmp	r7, r2
   22b5c:	bne	22f40 <main@@Base+0xfc60>
   22b60:	b	23364 <main@@Base+0x10084>
   22b64:	ldr	r0, [sp, #52]	; 0x34
   22b68:	mov	r1, r2
   22b6c:	mov	r2, r8
   22b70:	mov	r3, #4
   22b74:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22b78:	b	22f34 <main@@Base+0xfc54>
   22b7c:	ldr	r8, [sp, #44]	; 0x2c
   22b80:	b	223ec <main@@Base+0xf10c>
   22b84:	ldr	r8, [sp, #44]	; 0x2c
   22b88:	ldr	r7, [sp, #24]
   22b8c:	cmp	r0, #34	; 0x22
   22b90:	bne	23364 <main@@Base+0x10084>
   22b94:	add	r1, r9, #15
   22b98:	ldr	r0, [sp, #44]	; 0x2c
   22b9c:	sub	r0, r0, r1
   22ba0:	cmp	r0, #2
   22ba4:	blt	22f74 <main@@Base+0xfc94>
   22ba8:	ldrb	r0, [r1]
   22bac:	cmp	r0, #32
   22bb0:	bls	22f60 <main@@Base+0xfc80>
   22bb4:	mov	r2, r1
   22bb8:	ldr	r0, [sp, #44]	; 0x2c
   22bbc:	cmp	r2, r0
   22bc0:	bne	22f90 <main@@Base+0xfcb0>
   22bc4:	b	22fd4 <main@@Base+0xfcf4>
   22bc8:	ldr	r8, [sp, #44]	; 0x2c
   22bcc:	cmp	r0, #34	; 0x22
   22bd0:	bne	232e8 <main@@Base+0x10008>
   22bd4:	add	r1, r9, #10
   22bd8:	ldr	r0, [sp, #44]	; 0x2c
   22bdc:	sub	r0, r0, r1
   22be0:	cmp	r0, #2
   22be4:	blt	23000 <main@@Base+0xfd20>
   22be8:	ldrb	r0, [r1]
   22bec:	cmp	r0, #32
   22bf0:	bls	22fec <main@@Base+0xfd0c>
   22bf4:	mov	r2, r1
   22bf8:	ldr	r0, [sp, #44]	; 0x2c
   22bfc:	cmp	r2, r0
   22c00:	bne	2301c <main@@Base+0xfd3c>
   22c04:	b	2305c <main@@Base+0xfd7c>
   22c08:	ldr	r8, [sp, #44]	; 0x2c
   22c0c:	bne	22c20 <main@@Base+0xf940>
   22c10:	mov	r2, r1
   22c14:	ldrb	r0, [r2, #1]!
   22c18:	cmp	r0, #32
   22c1c:	bhi	22c30 <main@@Base+0xf950>
   22c20:	ldr	r0, [sp, #52]	; 0x34
   22c24:	mov	r2, r8
   22c28:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22c2c:	mov	r2, r0
   22c30:	cmp	r2, r8
   22c34:	beq	22c74 <main@@Base+0xf994>
   22c38:	ldrb	r0, [r2]
   22c3c:	cmp	r0, #58	; 0x3a
   22c40:	bne	22c74 <main@@Base+0xf994>
   22c44:	add	r1, r2, #1
   22c48:	sub	r0, r8, r1
   22c4c:	cmp	r0, #2
   22c50:	blt	23088 <main@@Base+0xfda8>
   22c54:	ldrb	r0, [r1]
   22c58:	cmp	r0, #32
   22c5c:	bls	23074 <main@@Base+0xfd94>
   22c60:	ldr	r8, [sp, #44]	; 0x2c
   22c64:	mov	r2, r1
   22c68:	cmp	sl, r2
   22c6c:	bne	230a0 <main@@Base+0xfdc0>
   22c70:	b	232e8 <main@@Base+0x10008>
   22c74:	ldr	r0, [sp, #52]	; 0x34
   22c78:	mov	r1, r2
   22c7c:	mov	r2, r8
   22c80:	mov	r3, #4
   22c84:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22c88:	b	23094 <main@@Base+0xfdb4>
   22c8c:	ldr	r8, [sp, #44]	; 0x2c
   22c90:	cmp	r0, #34	; 0x22
   22c94:	bne	23364 <main@@Base+0x10084>
   22c98:	add	r1, r9, #20
   22c9c:	ldr	r0, [sp, #44]	; 0x2c
   22ca0:	sub	r0, r0, r1
   22ca4:	cmp	r0, #2
   22ca8:	blt	23104 <main@@Base+0xfe24>
   22cac:	ldrb	r0, [r1]
   22cb0:	cmp	r0, #32
   22cb4:	bls	230f0 <main@@Base+0xfe10>
   22cb8:	mov	r2, r1
   22cbc:	ldr	r0, [sp, #44]	; 0x2c
   22cc0:	cmp	r2, r0
   22cc4:	bne	23120 <main@@Base+0xfe40>
   22cc8:	b	23160 <main@@Base+0xfe80>
   22ccc:	ldr	r4, [sp, #44]	; 0x2c
   22cd0:	bne	22ce4 <main@@Base+0xfa04>
   22cd4:	mov	r2, r1
   22cd8:	ldrb	r0, [r2, #1]!
   22cdc:	cmp	r0, #32
   22ce0:	bhi	22cf4 <main@@Base+0xfa14>
   22ce4:	ldr	r0, [sp, #52]	; 0x34
   22ce8:	mov	r2, r4
   22cec:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22cf0:	mov	r2, r0
   22cf4:	cmp	r2, r4
   22cf8:	beq	22d3c <main@@Base+0xfa5c>
   22cfc:	ldrb	r0, [r2]
   22d00:	cmp	r0, #58	; 0x3a
   22d04:	bne	22d3c <main@@Base+0xfa5c>
   22d08:	ldr	r0, [sp, #44]	; 0x2c
   22d0c:	add	r1, r2, #1
   22d10:	sub	r0, r0, r1
   22d14:	cmp	r0, #2
   22d18:	blt	231c4 <main@@Base+0xfee4>
   22d1c:	ldrb	r0, [r1]
   22d20:	cmp	r0, #32
   22d24:	bls	231b4 <main@@Base+0xfed4>
   22d28:	mov	r2, r1
   22d2c:	ldr	r8, [sp, #44]	; 0x2c
   22d30:	cmp	sl, r2
   22d34:	bne	231e0 <main@@Base+0xff00>
   22d38:	b	232e8 <main@@Base+0x10008>
   22d3c:	mov	r1, r2
   22d40:	ldr	r0, [sp, #52]	; 0x34
   22d44:	ldr	r2, [sp, #44]	; 0x2c
   22d48:	mov	r3, #4
   22d4c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22d50:	b	231d0 <main@@Base+0xfef0>
   22d54:	ldr	r4, [sp, #44]	; 0x2c
   22d58:	bne	22d6c <main@@Base+0xfa8c>
   22d5c:	mov	r2, r1
   22d60:	ldrb	r0, [r2, #1]!
   22d64:	cmp	r0, #32
   22d68:	bhi	22d7c <main@@Base+0xfa9c>
   22d6c:	ldr	r0, [sp, #52]	; 0x34
   22d70:	mov	r2, r4
   22d74:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22d78:	mov	r2, r0
   22d7c:	cmp	r2, r4
   22d80:	beq	22dc4 <main@@Base+0xfae4>
   22d84:	ldrb	r0, [r2]
   22d88:	cmp	r0, #58	; 0x3a
   22d8c:	bne	22dc4 <main@@Base+0xfae4>
   22d90:	ldr	r0, [sp, #44]	; 0x2c
   22d94:	add	r1, r2, #1
   22d98:	sub	r0, r0, r1
   22d9c:	cmp	r0, #2
   22da0:	blt	23188 <main@@Base+0xfea8>
   22da4:	ldrb	r0, [r1]
   22da8:	cmp	r0, #32
   22dac:	bls	23178 <main@@Base+0xfe98>
   22db0:	mov	r2, r1
   22db4:	ldr	r8, [sp, #44]	; 0x2c
   22db8:	cmp	sl, r2
   22dbc:	bne	231a4 <main@@Base+0xfec4>
   22dc0:	b	232e8 <main@@Base+0x10008>
   22dc4:	mov	r1, r2
   22dc8:	ldr	r0, [sp, #52]	; 0x34
   22dcc:	ldr	r2, [sp, #44]	; 0x2c
   22dd0:	mov	r3, #4
   22dd4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22dd8:	b	23194 <main@@Base+0xfeb4>
   22ddc:	bne	22df0 <main@@Base+0xfb10>
   22de0:	mov	r2, r1
   22de4:	ldrb	r0, [r2, #1]!
   22de8:	cmp	r0, #32
   22dec:	bhi	22e00 <main@@Base+0xfb20>
   22df0:	ldr	r0, [sp, #52]	; 0x34
   22df4:	ldr	r2, [sp, #44]	; 0x2c
   22df8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22dfc:	mov	r2, r0
   22e00:	ldr	r0, [sp, #44]	; 0x2c
   22e04:	cmp	r2, r0
   22e08:	beq	22e4c <main@@Base+0xfb6c>
   22e0c:	ldrb	r0, [r2]
   22e10:	cmp	r0, #58	; 0x3a
   22e14:	bne	22e4c <main@@Base+0xfb6c>
   22e18:	ldr	r0, [sp, #44]	; 0x2c
   22e1c:	add	r1, r2, #1
   22e20:	sub	r0, r0, r1
   22e24:	cmp	r0, #2
   22e28:	blt	23210 <main@@Base+0xff30>
   22e2c:	ldrb	r0, [r1]
   22e30:	cmp	r0, #32
   22e34:	bls	23200 <main@@Base+0xff20>
   22e38:	mov	r2, r1
   22e3c:	ldr	r8, [sp, #44]	; 0x2c
   22e40:	cmp	sl, r2
   22e44:	bne	2322c <main@@Base+0xff4c>
   22e48:	b	232e8 <main@@Base+0x10008>
   22e4c:	mov	r1, r2
   22e50:	ldr	r0, [sp, #52]	; 0x34
   22e54:	ldr	r2, [sp, #44]	; 0x2c
   22e58:	mov	r3, #4
   22e5c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22e60:	b	2321c <main@@Base+0xff3c>
   22e64:	ldr	r8, [sp, #44]	; 0x2c
   22e68:	bne	22e78 <main@@Base+0xfb98>
   22e6c:	ldrb	r0, [r1, #2]!
   22e70:	cmp	r0, #32
   22e74:	bhi	22e8c <main@@Base+0xfbac>
   22e78:	ldr	r0, [sp, #52]	; 0x34
   22e7c:	mov	r1, r2
   22e80:	mov	r2, r8
   22e84:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22e88:	mov	r1, r0
   22e8c:	cmp	r9, r1
   22e90:	beq	22a54 <main@@Base+0xf774>
   22e94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22e98:	mov	r2, #7
   22e9c:	mov	r3, #3
   22ea0:	str	r2, [sp]
   22ea4:	mov	r2, r8
   22ea8:	str	r0, [sp, #4]
   22eac:	movw	r0, #37012	; 0x9094
   22eb0:	movt	r0, #2
   22eb4:	str	r0, [sp, #8]
   22eb8:	ldr	r5, [sp, #52]	; 0x34
   22ebc:	mov	r0, r5
   22ec0:	bl	330a4 <flatcc_json_parser_union@@Base>
   22ec4:	b	23378 <main@@Base+0x10098>
   22ec8:	ldr	r8, [sp, #44]	; 0x2c
   22ecc:	bne	22edc <main@@Base+0xfbfc>
   22ed0:	ldrb	r0, [r2, #2]!
   22ed4:	cmp	r0, #32
   22ed8:	bhi	22eec <main@@Base+0xfc0c>
   22edc:	ldr	r0, [sp, #52]	; 0x34
   22ee0:	mov	r2, r8
   22ee4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22ee8:	mov	r2, r0
   22eec:	cmp	sl, r2
   22ef0:	beq	232e8 <main@@Base+0x10008>
   22ef4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22ef8:	movw	r1, #33504	; 0x82e0
   22efc:	mov	r3, #3
   22f00:	movt	r1, #4
   22f04:	str	r3, [sp]
   22f08:	mov	r3, #1
   22f0c:	add	r1, r1, #32
   22f10:	b	2333c <main@@Base+0x1005c>
   22f14:	ldr	r8, [sp, #44]	; 0x2c
   22f18:	bne	22f28 <main@@Base+0xfc48>
   22f1c:	ldrb	r0, [r2, #2]!
   22f20:	cmp	r0, #32
   22f24:	bhi	22f38 <main@@Base+0xfc58>
   22f28:	ldr	r0, [sp, #52]	; 0x34
   22f2c:	mov	r2, r8
   22f30:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22f34:	mov	r2, r0
   22f38:	cmp	r7, r2
   22f3c:	beq	23364 <main@@Base+0x10084>
   22f40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22f44:	movw	r1, #33504	; 0x82e0
   22f48:	mov	r3, #7
   22f4c:	movt	r1, #4
   22f50:	str	r3, [sp]
   22f54:	mov	r3, #3
   22f58:	add	r1, r1, #48	; 0x30
   22f5c:	b	2333c <main@@Base+0x1005c>
   22f60:	bne	22f74 <main@@Base+0xfc94>
   22f64:	mov	r2, r1
   22f68:	ldrb	r0, [r2, #1]!
   22f6c:	cmp	r0, #32
   22f70:	bhi	22f84 <main@@Base+0xfca4>
   22f74:	ldr	r0, [sp, #52]	; 0x34
   22f78:	ldr	r2, [sp, #44]	; 0x2c
   22f7c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   22f80:	mov	r2, r0
   22f84:	ldr	r0, [sp, #44]	; 0x2c
   22f88:	cmp	r2, r0
   22f8c:	beq	22fd4 <main@@Base+0xfcf4>
   22f90:	ldrb	r0, [r2]
   22f94:	cmp	r0, #58	; 0x3a
   22f98:	bne	22fd4 <main@@Base+0xfcf4>
   22f9c:	ldr	r0, [sp, #44]	; 0x2c
   22fa0:	add	r1, r2, #1
   22fa4:	sub	r0, r0, r1
   22fa8:	cmp	r0, #2
   22fac:	blt	23274 <main@@Base+0xff94>
   22fb0:	ldrb	r0, [r1]
   22fb4:	cmp	r0, #32
   22fb8:	bls	23264 <main@@Base+0xff84>
   22fbc:	mov	r2, r1
   22fc0:	ldr	r7, [sp, #24]
   22fc4:	ldr	r8, [sp, #44]	; 0x2c
   22fc8:	cmp	r7, r2
   22fcc:	bne	23294 <main@@Base+0xffb4>
   22fd0:	b	23364 <main@@Base+0x10084>
   22fd4:	mov	r1, r2
   22fd8:	ldr	r0, [sp, #52]	; 0x34
   22fdc:	ldr	r2, [sp, #44]	; 0x2c
   22fe0:	mov	r3, #4
   22fe4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   22fe8:	b	23280 <main@@Base+0xffa0>
   22fec:	bne	23000 <main@@Base+0xfd20>
   22ff0:	mov	r2, r1
   22ff4:	ldrb	r0, [r2, #1]!
   22ff8:	cmp	r0, #32
   22ffc:	bhi	23010 <main@@Base+0xfd30>
   23000:	ldr	r0, [sp, #52]	; 0x34
   23004:	ldr	r2, [sp, #44]	; 0x2c
   23008:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2300c:	mov	r2, r0
   23010:	ldr	r0, [sp, #44]	; 0x2c
   23014:	cmp	r2, r0
   23018:	beq	2305c <main@@Base+0xfd7c>
   2301c:	ldrb	r0, [r2]
   23020:	cmp	r0, #58	; 0x3a
   23024:	bne	2305c <main@@Base+0xfd7c>
   23028:	ldr	r0, [sp, #44]	; 0x2c
   2302c:	add	r1, r2, #1
   23030:	sub	r0, r0, r1
   23034:	cmp	r0, #2
   23038:	blt	232b4 <main@@Base+0xffd4>
   2303c:	ldrb	r0, [r1]
   23040:	cmp	r0, #32
   23044:	bls	232a4 <main@@Base+0xffc4>
   23048:	mov	r2, r1
   2304c:	ldr	r8, [sp, #44]	; 0x2c
   23050:	cmp	sl, r2
   23054:	bne	232d0 <main@@Base+0xfff0>
   23058:	b	232e8 <main@@Base+0x10008>
   2305c:	mov	r1, r2
   23060:	ldr	r0, [sp, #52]	; 0x34
   23064:	ldr	r2, [sp, #44]	; 0x2c
   23068:	mov	r3, #4
   2306c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23070:	b	232c0 <main@@Base+0xffe0>
   23074:	ldr	r8, [sp, #44]	; 0x2c
   23078:	bne	23088 <main@@Base+0xfda8>
   2307c:	ldrb	r0, [r2, #2]!
   23080:	cmp	r0, #32
   23084:	bhi	23098 <main@@Base+0xfdb8>
   23088:	ldr	r0, [sp, #52]	; 0x34
   2308c:	mov	r2, r8
   23090:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23094:	mov	r2, r0
   23098:	cmp	sl, r2
   2309c:	beq	232e8 <main@@Base+0x10008>
   230a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   230a4:	movw	r1, #33504	; 0x82e0
   230a8:	mov	r3, #9
   230ac:	movt	r1, #4
   230b0:	str	r3, [sp]
   230b4:	mov	r3, #4
   230b8:	add	r1, r1, #64	; 0x40
   230bc:	stmib	sp, {r0, r1}
   230c0:	movw	r0, #37012	; 0x9094
   230c4:	mov	r1, r2
   230c8:	mov	r2, r8
   230cc:	movt	r0, #2
   230d0:	str	r0, [sp, #12]
   230d4:	movw	r0, #41036	; 0xa04c
   230d8:	movt	r0, #2
   230dc:	str	r0, [sp, #16]
   230e0:	ldr	r5, [sp, #52]	; 0x34
   230e4:	mov	r0, r5
   230e8:	bl	33d70 <flatcc_json_parser_union_type_vector@@Base>
   230ec:	b	23378 <main@@Base+0x10098>
   230f0:	bne	23104 <main@@Base+0xfe24>
   230f4:	mov	r2, r1
   230f8:	ldrb	r0, [r2, #1]!
   230fc:	cmp	r0, #32
   23100:	bhi	23114 <main@@Base+0xfe34>
   23104:	ldr	r0, [sp, #52]	; 0x34
   23108:	ldr	r2, [sp, #44]	; 0x2c
   2310c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23110:	mov	r2, r0
   23114:	ldr	r0, [sp, #44]	; 0x2c
   23118:	cmp	r2, r0
   2311c:	beq	23160 <main@@Base+0xfe80>
   23120:	ldrb	r0, [r2]
   23124:	cmp	r0, #58	; 0x3a
   23128:	bne	23160 <main@@Base+0xfe80>
   2312c:	ldr	r0, [sp, #44]	; 0x2c
   23130:	add	r1, r2, #1
   23134:	sub	r0, r0, r1
   23138:	cmp	r0, #2
   2313c:	blt	23304 <main@@Base+0x10024>
   23140:	ldrb	r0, [r1]
   23144:	cmp	r0, #32
   23148:	bls	232f4 <main@@Base+0x10014>
   2314c:	mov	r2, r1
   23150:	ldr	r8, [sp, #44]	; 0x2c
   23154:	cmp	r7, r2
   23158:	bne	23320 <main@@Base+0x10040>
   2315c:	b	23364 <main@@Base+0x10084>
   23160:	mov	r1, r2
   23164:	ldr	r0, [sp, #52]	; 0x34
   23168:	ldr	r2, [sp, #44]	; 0x2c
   2316c:	mov	r3, #4
   23170:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23174:	b	23310 <main@@Base+0x10030>
   23178:	bne	23188 <main@@Base+0xfea8>
   2317c:	ldrb	r0, [r2, #2]!
   23180:	cmp	r0, #32
   23184:	bhi	23198 <main@@Base+0xfeb8>
   23188:	ldr	r0, [sp, #52]	; 0x34
   2318c:	ldr	r2, [sp, #44]	; 0x2c
   23190:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23194:	mov	r2, r0
   23198:	ldr	r8, [sp, #44]	; 0x2c
   2319c:	cmp	sl, r2
   231a0:	beq	232e8 <main@@Base+0x10008>
   231a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   231a8:	mov	r1, #3
   231ac:	mov	r3, #1
   231b0:	b	232dc <main@@Base+0xfffc>
   231b4:	bne	231c4 <main@@Base+0xfee4>
   231b8:	ldrb	r0, [r2, #2]!
   231bc:	cmp	r0, #32
   231c0:	bhi	231d4 <main@@Base+0xfef4>
   231c4:	ldr	r0, [sp, #52]	; 0x34
   231c8:	ldr	r2, [sp, #44]	; 0x2c
   231cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   231d0:	mov	r2, r0
   231d4:	ldr	r8, [sp, #44]	; 0x2c
   231d8:	cmp	sl, r2
   231dc:	beq	232e8 <main@@Base+0x10008>
   231e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   231e4:	movw	r1, #33504	; 0x82e0
   231e8:	mov	r3, #5
   231ec:	movt	r1, #4
   231f0:	str	r3, [sp]
   231f4:	mov	r3, #2
   231f8:	add	r1, r1, #96	; 0x60
   231fc:	b	2333c <main@@Base+0x1005c>
   23200:	bne	23210 <main@@Base+0xff30>
   23204:	ldrb	r0, [r2, #2]!
   23208:	cmp	r0, #32
   2320c:	bhi	23220 <main@@Base+0xff40>
   23210:	ldr	r0, [sp, #52]	; 0x34
   23214:	ldr	r2, [sp, #44]	; 0x2c
   23218:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2321c:	mov	r2, r0
   23220:	ldr	r8, [sp, #44]	; 0x2c
   23224:	cmp	sl, r2
   23228:	beq	232e8 <main@@Base+0x10008>
   2322c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23230:	mov	r1, #9
   23234:	mov	r3, #4
   23238:	str	r1, [sp]
   2323c:	mov	r1, r2
   23240:	mov	r2, r8
   23244:	str	r0, [sp, #4]
   23248:	movw	r0, #37012	; 0x9094
   2324c:	movt	r0, #2
   23250:	str	r0, [sp, #8]
   23254:	ldr	r5, [sp, #52]	; 0x34
   23258:	mov	r0, r5
   2325c:	bl	337fc <flatcc_json_parser_union_vector@@Base>
   23260:	b	23378 <main@@Base+0x10098>
   23264:	bne	23274 <main@@Base+0xff94>
   23268:	ldrb	r0, [r2, #2]!
   2326c:	cmp	r0, #32
   23270:	bhi	23284 <main@@Base+0xffa4>
   23274:	ldr	r0, [sp, #52]	; 0x34
   23278:	ldr	r2, [sp, #44]	; 0x2c
   2327c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23280:	mov	r2, r0
   23284:	ldr	r7, [sp, #24]
   23288:	ldr	r8, [sp, #44]	; 0x2c
   2328c:	cmp	r7, r2
   23290:	beq	23364 <main@@Base+0x10084>
   23294:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23298:	mov	r1, #1
   2329c:	mov	r3, #0
   232a0:	b	232dc <main@@Base+0xfffc>
   232a4:	bne	232b4 <main@@Base+0xffd4>
   232a8:	ldrb	r0, [r2, #2]!
   232ac:	cmp	r0, #32
   232b0:	bhi	232c4 <main@@Base+0xffe4>
   232b4:	ldr	r0, [sp, #52]	; 0x34
   232b8:	ldr	r2, [sp, #44]	; 0x2c
   232bc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   232c0:	mov	r2, r0
   232c4:	ldr	r8, [sp, #44]	; 0x2c
   232c8:	cmp	sl, r2
   232cc:	beq	232e8 <main@@Base+0x10008>
   232d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   232d4:	mov	r1, #5
   232d8:	mov	r3, #2
   232dc:	str	r1, [sp]
   232e0:	mov	r1, r2
   232e4:	b	22ea4 <main@@Base+0xfbc4>
   232e8:	ldr	r5, [sp, #52]	; 0x34
   232ec:	mov	r1, sl
   232f0:	b	2336c <main@@Base+0x1008c>
   232f4:	bne	23304 <main@@Base+0x10024>
   232f8:	ldrb	r0, [r2, #2]!
   232fc:	cmp	r0, #32
   23300:	bhi	23314 <main@@Base+0x10034>
   23304:	ldr	r0, [sp, #52]	; 0x34
   23308:	ldr	r2, [sp, #44]	; 0x2c
   2330c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23310:	mov	r2, r0
   23314:	ldr	r8, [sp, #44]	; 0x2c
   23318:	cmp	r7, r2
   2331c:	beq	23364 <main@@Base+0x10084>
   23320:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23324:	movw	r1, #33504	; 0x82e0
   23328:	mov	r3, #1
   2332c:	movt	r1, #4
   23330:	str	r3, [sp]
   23334:	mov	r3, #0
   23338:	add	r1, r1, #80	; 0x50
   2333c:	stmib	sp, {r0, r1}
   23340:	movw	r0, #37012	; 0x9094
   23344:	mov	r1, r2
   23348:	mov	r2, r8
   2334c:	movt	r0, #2
   23350:	str	r0, [sp, #12]
   23354:	ldr	r5, [sp, #52]	; 0x34
   23358:	mov	r0, r5
   2335c:	bl	331fc <flatcc_json_parser_union_type@@Base>
   23360:	b	23378 <main@@Base+0x10098>
   23364:	ldr	r5, [sp, #52]	; 0x34
   23368:	mov	r1, r7
   2336c:	mov	r0, r5
   23370:	mov	r2, r8
   23374:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   23378:	ldr	r9, [sp, #48]	; 0x30
   2337c:	mov	r1, r0
   23380:	sub	r0, r8, r0
   23384:	cmp	r0, #2
   23388:	blt	233bc <main@@Base+0x100dc>
   2338c:	ldrb	r0, [r1]
   23390:	cmp	r0, #32
   23394:	bls	233a8 <main@@Base+0x100c8>
   23398:	mov	r2, r1
   2339c:	cmp	r2, r8
   233a0:	bne	233d4 <main@@Base+0x100f4>
   233a4:	b	23464 <main@@Base+0x10184>
   233a8:	bne	233bc <main@@Base+0x100dc>
   233ac:	mov	r2, r1
   233b0:	ldrb	r0, [r2, #1]!
   233b4:	cmp	r0, #32
   233b8:	bhi	233cc <main@@Base+0x100ec>
   233bc:	mov	r0, r5
   233c0:	mov	r2, r8
   233c4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   233c8:	mov	r2, r0
   233cc:	cmp	r2, r8
   233d0:	beq	23464 <main@@Base+0x10184>
   233d4:	ldrb	r0, [r2]
   233d8:	cmp	r0, #44	; 0x2c
   233dc:	bne	2347c <main@@Base+0x1019c>
   233e0:	add	r1, r2, #1
   233e4:	sub	r0, r8, r1
   233e8:	cmp	r0, #2
   233ec:	blt	2341c <main@@Base+0x1013c>
   233f0:	ldrb	r0, [r1]
   233f4:	cmp	r0, #32
   233f8:	bls	2340c <main@@Base+0x1012c>
   233fc:	mov	r2, r1
   23400:	cmp	r2, r8
   23404:	bne	23434 <main@@Base+0x10154>
   23408:	b	234c4 <main@@Base+0x101e4>
   2340c:	bne	2341c <main@@Base+0x1013c>
   23410:	ldrb	r0, [r2, #2]!
   23414:	cmp	r0, #32
   23418:	bhi	2342c <main@@Base+0x1014c>
   2341c:	mov	r0, r5
   23420:	mov	r2, r8
   23424:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23428:	mov	r2, r0
   2342c:	cmp	r2, r8
   23430:	beq	234c4 <main@@Base+0x101e4>
   23434:	ldrb	r0, [r2]
   23438:	cmp	r0, #125	; 0x7d
   2343c:	bne	21ea8 <main@@Base+0xebc8>
   23440:	add	r1, r2, #1
   23444:	sub	r0, r8, r1
   23448:	cmp	r0, #2
   2344c:	blt	23504 <main@@Base+0x10224>
   23450:	ldrb	r0, [r1]
   23454:	cmp	r0, #32
   23458:	bhi	234ac <main@@Base+0x101cc>
   2345c:	beq	234f4 <main@@Base+0x10214>
   23460:	b	23504 <main@@Base+0x10224>
   23464:	mov	r4, r8
   23468:	ldr	r0, [sp, #36]	; 0x24
   2346c:	ldr	r0, [r0]
   23470:	cmp	r0, #0
   23474:	beq	21d2c <main@@Base+0xea4c>
   23478:	b	236fc <main@@Base+0x1041c>
   2347c:	cmp	r0, #125	; 0x7d
   23480:	bne	234d0 <main@@Base+0x101f0>
   23484:	add	r1, r2, #1
   23488:	sub	r0, r8, r1
   2348c:	cmp	r0, #2
   23490:	blt	23504 <main@@Base+0x10224>
   23494:	ldrb	r0, [r1]
   23498:	cmp	r0, #32
   2349c:	bls	234e4 <main@@Base+0x10204>
   234a0:	ldr	r8, [sp, #44]	; 0x2c
   234a4:	ldr	r5, [sp, #52]	; 0x34
   234a8:	ldr	r9, [sp, #48]	; 0x30
   234ac:	mov	r4, r1
   234b0:	ldr	r0, [sp, #36]	; 0x24
   234b4:	ldr	r0, [r0]
   234b8:	cmp	r0, #0
   234bc:	beq	21d2c <main@@Base+0xea4c>
   234c0:	b	236fc <main@@Base+0x1041c>
   234c4:	mov	r0, r5
   234c8:	mov	r1, r8
   234cc:	b	234d8 <main@@Base+0x101f8>
   234d0:	mov	r0, r5
   234d4:	mov	r1, r2
   234d8:	mov	r2, r8
   234dc:	mov	r3, #10
   234e0:	b	21d14 <main@@Base+0xea34>
   234e4:	ldr	r8, [sp, #44]	; 0x2c
   234e8:	ldr	r5, [sp, #52]	; 0x34
   234ec:	ldr	r9, [sp, #48]	; 0x30
   234f0:	bne	23504 <main@@Base+0x10224>
   234f4:	ldrb	r0, [r2, #2]!
   234f8:	cmp	r0, #32
   234fc:	mov	r4, r2
   23500:	bhi	21d1c <main@@Base+0xea3c>
   23504:	mov	r0, r5
   23508:	mov	r2, r8
   2350c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23510:	b	21d18 <main@@Base+0xea38>
   23514:	mov	r4, r8
   23518:	ldr	r0, [sp, #36]	; 0x24
   2351c:	ldr	r0, [r0]
   23520:	cmp	r0, #0
   23524:	bne	23644 <main@@Base+0x10364>
   23528:	b	23618 <main@@Base+0x10338>
   2352c:	cmp	r0, #125	; 0x7d
   23530:	bne	235f0 <main@@Base+0x10310>
   23534:	add	r4, r2, #1
   23538:	sub	r0, r8, r4
   2353c:	cmp	r0, #2
   23540:	blt	23598 <main@@Base+0x102b8>
   23544:	b	23564 <main@@Base+0x10284>
   23548:	mov	r0, r5
   2354c:	mov	r1, r8
   23550:	b	235f8 <main@@Base+0x10318>
   23554:	add	r4, r2, #1
   23558:	sub	r0, r8, r4
   2355c:	cmp	r0, #2
   23560:	blt	23598 <main@@Base+0x102b8>
   23564:	ldrb	r0, [r4]
   23568:	cmp	r0, #32
   2356c:	bhi	23608 <main@@Base+0x10328>
   23570:	bne	23598 <main@@Base+0x102b8>
   23574:	ldrb	r0, [r2, #2]!
   23578:	cmp	r0, #32
   2357c:	bls	23598 <main@@Base+0x102b8>
   23580:	mov	r4, r2
   23584:	ldr	r0, [sp, #36]	; 0x24
   23588:	ldr	r0, [r0]
   2358c:	cmp	r0, #0
   23590:	bne	23644 <main@@Base+0x10364>
   23594:	b	23618 <main@@Base+0x10338>
   23598:	mov	r0, r5
   2359c:	mov	r1, r4
   235a0:	mov	r2, r8
   235a4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   235a8:	b	23604 <main@@Base+0x10324>
   235ac:	mov	r0, r5
   235b0:	mov	r1, r3
   235b4:	b	236cc <main@@Base+0x103ec>
   235b8:	cmp	r0, #125	; 0x7d
   235bc:	bne	236c4 <main@@Base+0x103e4>
   235c0:	add	r1, r2, #1
   235c4:	sub	r0, r8, r1
   235c8:	cmp	r0, #2
   235cc:	blt	236ec <main@@Base+0x1040c>
   235d0:	ldrb	r0, [r1]
   235d4:	cmp	r0, #32
   235d8:	bls	236d8 <main@@Base+0x103f8>
   235dc:	mov	r4, r1
   235e0:	ldr	r0, [r5, #24]
   235e4:	cmp	r0, #0
   235e8:	bne	23644 <main@@Base+0x10364>
   235ec:	b	23630 <main@@Base+0x10350>
   235f0:	mov	r0, r5
   235f4:	mov	r1, r2
   235f8:	mov	r2, r8
   235fc:	mov	r3, #10
   23600:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23604:	mov	r4, r0
   23608:	ldr	r0, [sp, #36]	; 0x24
   2360c:	ldr	r0, [r0]
   23610:	cmp	r0, #0
   23614:	bne	23644 <main@@Base+0x10364>
   23618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2361c:	mov	r0, r5
   23620:	mov	r1, r4
   23624:	mov	r2, r8
   23628:	bl	33030 <flatcc_json_parser_finalize_unions@@Base>
   2362c:	mov	r4, r0
   23630:	ldr	r0, [r5]
   23634:	bl	2da14 <flatcc_builder_end_table@@Base>
   23638:	cmp	r0, #0
   2363c:	str	r0, [r9]
   23640:	bne	2365c <main@@Base+0x1037c>
   23644:	mov	r0, r5
   23648:	mov	r1, r4
   2364c:	mov	r2, r8
   23650:	mov	r3, #33	; 0x21
   23654:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23658:	mov	r4, r0
   2365c:	ldr	r0, [r5, #24]
   23660:	cmp	r0, #0
   23664:	bne	23674 <main@@Base+0x10394>
   23668:	ldr	r0, [r9]
   2366c:	cmp	r0, #0
   23670:	beq	23680 <main@@Base+0x103a0>
   23674:	mov	r0, r4
   23678:	sub	sp, fp, #28
   2367c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23680:	mov	r0, r5
   23684:	mov	r1, r4
   23688:	mov	r2, r8
   2368c:	mov	r3, #33	; 0x21
   23690:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23694:	mov	r4, r0
   23698:	mov	r0, r4
   2369c:	sub	sp, fp, #28
   236a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236a4:	bne	236b4 <main@@Base+0x103d4>
   236a8:	ldrb	r0, [r4, #2]!
   236ac:	cmp	r0, #32
   236b0:	bhi	204e8 <main@@Base+0xd208>
   236b4:	mov	r0, r5
   236b8:	mov	r2, r8
   236bc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   236c0:	b	204e4 <main@@Base+0xd204>
   236c4:	mov	r0, r5
   236c8:	mov	r1, r2
   236cc:	mov	r2, r8
   236d0:	mov	r3, #10
   236d4:	b	20490 <main@@Base+0xd1b0>
   236d8:	bne	236ec <main@@Base+0x1040c>
   236dc:	ldrb	r0, [r2, #2]!
   236e0:	cmp	r0, #32
   236e4:	mov	r4, r2
   236e8:	bhi	20498 <main@@Base+0xd1b8>
   236ec:	mov	r0, r5
   236f0:	mov	r2, r8
   236f4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   236f8:	b	20494 <main@@Base+0xd1b4>
   236fc:	mov	r0, r5
   23700:	mov	r1, r4
   23704:	mov	r2, r8
   23708:	mov	r3, #33	; 0x21
   2370c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23710:	mov	r4, r0
   23714:	b	23644 <main@@Base+0x10364>
   23718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2371c:	add	fp, sp, #28
   23720:	sub	sp, sp, #20
   23724:	mov	sl, r1
   23728:	sub	r1, r2, r1
   2372c:	cmp	r1, #8
   23730:	movcs	r1, #8
   23734:	and	r1, r1, #15
   23738:	sub	r5, r1, #1
   2373c:	cmp	r5, #7
   23740:	bhi	23944 <main@@Base+0x10664>
   23744:	str	r2, [sp, #16]
   23748:	str	r0, [sp, #12]
   2374c:	add	r0, pc, #36	; 0x24
   23750:	mov	lr, r3
   23754:	mov	r8, #0
   23758:	mov	ip, #0
   2375c:	mov	r2, #0
   23760:	mov	r1, #0
   23764:	mov	r3, #0
   23768:	mov	r7, #0
   2376c:	mov	r6, #0
   23770:	mov	r4, #0
   23774:	ldr	pc, [r0, r5, lsl #2]
   23778:	ldrdeq	r3, [r2], -ip
   2377c:	ldrdeq	r3, [r2], -r4
   23780:	andeq	r3, r2, ip, asr #15
   23784:	andeq	r3, r2, r4, asr #15
   23788:			; <UNDEFINED> instruction: 0x000237b8
   2378c:	andeq	r3, r2, ip, lsr #15
   23790:	muleq	r2, ip, r7
   23794:	muleq	r2, r8, r7
   23798:	ldrb	ip, [sl, #7]
   2379c:	ldrb	r0, [sl, #6]
   237a0:	mov	r2, r8
   237a4:	orr	r0, ip, r0, lsl #8
   237a8:	mov	r8, r0
   237ac:	ldrb	r0, [sl, #5]
   237b0:	mov	r1, r2
   237b4:	orr	r8, r8, r0, lsl #16
   237b8:	ldrb	r0, [sl, #4]
   237bc:	mov	r3, r1
   237c0:	orr	r8, r8, r0, lsl #24
   237c4:	ldrb	r0, [sl, #3]
   237c8:	orr	r7, r0, r3
   237cc:	ldrb	r0, [sl, #2]
   237d0:	orr	r6, r7, r0, lsl #8
   237d4:	ldrb	r0, [sl, #1]
   237d8:	orr	r4, r6, r0, lsl #16
   237dc:	ldrb	r0, [sl]
   237e0:	ldr	r7, [fp, #12]
   237e4:	ldr	r5, [fp, #8]
   237e8:	movw	r1, #28275	; 0x6e73
   237ec:	movt	r1, #19823	; 0x4d6f
   237f0:	orr	r9, r4, r0, lsl #24
   237f4:	movw	r0, #29184	; 0x7200
   237f8:	movt	r0, #29797	; 0x7465
   237fc:	subs	r2, r8, r0
   23800:	sbcs	r2, r9, r1
   23804:	bcs	2384c <main@@Base+0x1056c>
   23808:	movw	r1, #29696	; 0x7400
   2380c:	bic	r0, r9, #255	; 0xff
   23810:	movt	r1, #16748	; 0x416c
   23814:	teq	r0, r1
   23818:	bne	23944 <main@@Base+0x10664>
   2381c:	ldr	r0, [sp, #12]
   23820:	ldr	r2, [sp, #16]
   23824:	mov	r1, sl
   23828:	mov	r3, #3
   2382c:	mov	r4, lr
   23830:	str	r7, [sp]
   23834:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   23838:	cmp	r0, sl
   2383c:	beq	23944 <main@@Base+0x10664>
   23840:	mov	r1, #0
   23844:	mov	r2, #4
   23848:	b	2388c <main@@Base+0x105ac>
   2384c:	add	r2, r0, #50	; 0x32
   23850:	eor	r1, r9, r1
   23854:	eor	r2, r8, r2
   23858:	orrs	r2, r2, r1
   2385c:	bne	2389c <main@@Base+0x105bc>
   23860:	ldr	r0, [sp, #12]
   23864:	ldr	r2, [sp, #16]
   23868:	mov	r1, sl
   2386c:	mov	r3, #8
   23870:	mov	r4, lr
   23874:	str	r7, [sp]
   23878:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   2387c:	cmp	r0, sl
   23880:	beq	23944 <main@@Base+0x10664>
   23884:	mov	r1, #0
   23888:	mov	r2, #3
   2388c:	str	r2, [r5]
   23890:	str	r1, [r5, #4]
   23894:	str	r1, [r4]
   23898:	b	23940 <main@@Base+0x10660>
   2389c:	ldr	r5, [sp, #16]
   238a0:	ldr	r6, [sp, #12]
   238a4:	bic	r2, r8, #255	; 0xff
   238a8:	eor	r0, r2, r0
   238ac:	orrs	r0, r0, r1
   238b0:	bne	238f4 <main@@Base+0x10614>
   238b4:	mov	r0, r6
   238b8:	mov	r1, sl
   238bc:	mov	r2, r5
   238c0:	mov	r3, #7
   238c4:	str	r7, [sp]
   238c8:	mov	r4, lr
   238cc:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   238d0:	mov	lr, r4
   238d4:	cmp	r0, sl
   238d8:	beq	238f4 <main@@Base+0x10614>
   238dc:	ldr	r3, [fp, #8]
   238e0:	mov	r2, #1
   238e4:	mov	r1, #0
   238e8:	str	r2, [r3]
   238ec:	str	r1, [r3, #4]
   238f0:	b	2393c <main@@Base+0x1065c>
   238f4:	movw	r0, #20037	; 0x4e45
   238f8:	movt	r0, #20047	; 0x4e4f
   238fc:	teq	r9, r0
   23900:	bne	23950 <main@@Base+0x10670>
   23904:	mov	r0, r6
   23908:	mov	r1, sl
   2390c:	mov	r2, r5
   23910:	mov	r3, #4
   23914:	str	r7, [sp]
   23918:	mov	r4, lr
   2391c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   23920:	mov	lr, r4
   23924:	cmp	r0, sl
   23928:	beq	23950 <main@@Base+0x10670>
   2392c:	ldr	r2, [fp, #8]
   23930:	mov	r1, #0
   23934:	str	r1, [r2]
   23938:	str	r1, [r2, #4]
   2393c:	str	r1, [lr]
   23940:	mov	sl, r0
   23944:	mov	r0, sl
   23948:	sub	sp, fp, #28
   2394c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23950:	movw	r0, #28016	; 0x6d70
   23954:	movw	r1, #29556	; 0x7374
   23958:	movt	r0, #21353	; 0x5369
   2395c:	movt	r1, #21605	; 0x5465
   23960:	eor	r0, r8, r0
   23964:	eor	r1, r9, r1
   23968:	orrs	r0, r0, r1
   2396c:	bne	23944 <main@@Base+0x10664>
   23970:	str	lr, [sp, #8]
   23974:	add	lr, sl, #8
   23978:	sub	r0, r5, lr
   2397c:	cmp	r0, #8
   23980:	movcs	r0, #8
   23984:	and	r0, r0, #15
   23988:	sub	r5, r0, #1
   2398c:	cmp	r5, #7
   23990:	bhi	23944 <main@@Base+0x10664>
   23994:	add	r1, pc, #32
   23998:	mov	r9, #0
   2399c:	mov	ip, #0
   239a0:	mov	r8, #0
   239a4:	mov	r2, #0
   239a8:	mov	r3, #0
   239ac:	mov	r0, #0
   239b0:	mov	r4, #0
   239b4:	mov	r6, #0
   239b8:	ldr	pc, [r1, r5, lsl #2]
   239bc:	andeq	r3, r2, r0, lsr #20
   239c0:	andeq	r3, r2, r8, lsl sl
   239c4:	andeq	r3, r2, r0, lsl sl
   239c8:	andeq	r3, r2, r8, lsl #20
   239cc:	strdeq	r3, [r2], -ip
   239d0:	strdeq	r3, [r2], -r0
   239d4:	andeq	r3, r2, r0, ror #19
   239d8:	ldrdeq	r3, [r2], -ip
   239dc:	ldrb	ip, [sl, #15]
   239e0:	ldrb	r0, [sl, #14]
   239e4:	mov	r8, r9
   239e8:	orr	r0, ip, r0, lsl #8
   239ec:	mov	r9, r0
   239f0:	ldrb	r0, [sl, #13]
   239f4:	mov	r2, r8
   239f8:	orr	r9, r9, r0, lsl #16
   239fc:	ldrb	r0, [sl, #12]
   23a00:	mov	r3, r2
   23a04:	orr	r9, r9, r0, lsl #24
   23a08:	ldrb	r0, [sl, #11]
   23a0c:	orr	r0, r0, r3
   23a10:	ldrb	r1, [sl, #10]
   23a14:	orr	r4, r0, r1, lsl #8
   23a18:	ldrb	r0, [sl, #9]
   23a1c:	orr	r6, r4, r0, lsl #16
   23a20:	ldrb	r1, [lr]
   23a24:	movw	r0, #25943	; 0x6557
   23a28:	movw	r2, #21601	; 0x5461
   23a2c:	movt	r0, #25196	; 0x626c
   23a30:	movt	r2, #27749	; 0x6c65
   23a34:	eor	r0, r9, r0
   23a38:	orr	r1, r6, r1, lsl #24
   23a3c:	eor	r1, r1, r2
   23a40:	orrs	r0, r0, r1
   23a44:	bne	23944 <main@@Base+0x10664>
   23a48:	ldr	r0, [sp, #16]
   23a4c:	add	r9, sl, #16
   23a50:	sub	r0, r0, r9
   23a54:	cmp	r0, #8
   23a58:	movcs	r0, #8
   23a5c:	and	r0, r0, #15
   23a60:	sub	r3, r0, #1
   23a64:	cmp	r3, #7
   23a68:	bhi	23944 <main@@Base+0x10664>
   23a6c:	add	r1, pc, #28
   23a70:	mov	r0, #0
   23a74:	mov	ip, #0
   23a78:	mov	lr, #0
   23a7c:	mov	r2, #0
   23a80:	mov	r5, #0
   23a84:	mov	r6, #0
   23a88:	mov	r4, #0
   23a8c:	ldr	pc, [r1, r3, lsl #2]
   23a90:	andeq	r3, r2, ip, ror #21
   23a94:	andeq	r3, r2, r4, ror #21
   23a98:	ldrdeq	r3, [r2], -ip
   23a9c:	ldrdeq	r3, [r2], -r4
   23aa0:	andeq	r3, r2, r8, asr #21
   23aa4:			; <UNDEFINED> instruction: 0x00023ab8
   23aa8:			; <UNDEFINED> instruction: 0x00023ab0
   23aac:			; <UNDEFINED> instruction: 0x00023ab0
   23ab0:	ldrb	r1, [sl, #22]
   23ab4:	lsl	ip, r1, #8
   23ab8:	ldrb	r1, [sl, #21]
   23abc:	mov	lr, r0
   23ac0:	orr	r1, ip, r1, lsl #16
   23ac4:	mov	r0, r1
   23ac8:	ldrb	r1, [sl, #20]
   23acc:	mov	r2, lr
   23ad0:	orr	r0, r0, r1, lsl #24
   23ad4:	ldrb	r1, [sl, #19]
   23ad8:	orr	r5, r1, r2
   23adc:	ldrb	r1, [sl, #18]
   23ae0:	orr	r6, r5, r1, lsl #8
   23ae4:	ldrb	r1, [sl, #17]
   23ae8:	orr	r4, r6, r1, lsl #16
   23aec:	movw	r1, #27904	; 0x6d00
   23af0:	movw	r2, #26693	; 0x6845
   23af4:	movt	r1, #28277	; 0x6e75
   23af8:	movt	r2, #26996	; 0x6974
   23afc:	eor	r0, r0, r1
   23b00:	ldrb	r1, [r9]
   23b04:	orr	r1, r4, r1, lsl #24
   23b08:	eor	r1, r1, r2
   23b0c:	orrs	r0, r0, r1
   23b10:	bne	23944 <main@@Base+0x10664>
   23b14:	ldr	r0, [sp, #12]
   23b18:	ldr	r2, [sp, #16]
   23b1c:	mov	r1, r9
   23b20:	mov	r3, #7
   23b24:	str	r7, [sp]
   23b28:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   23b2c:	ldr	r3, [fp, #8]
   23b30:	cmp	r0, r9
   23b34:	beq	23944 <main@@Base+0x10664>
   23b38:	mov	r2, #2
   23b3c:	mov	r1, #0
   23b40:	str	r2, [r3]
   23b44:	str	r1, [r3, #4]
   23b48:	ldr	r2, [sp, #8]
   23b4c:	str	r1, [r2]
   23b50:	b	23940 <main@@Base+0x10660>
   23b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b58:	add	fp, sp, #28
   23b5c:	sub	sp, sp, #44	; 0x2c
   23b60:	mov	r6, r2
   23b64:	ldr	r2, [fp, #8]
   23b68:	mov	r5, r0
   23b6c:	mov	r0, #0
   23b70:	mov	r8, r3
   23b74:	cmp	r1, r6
   23b78:	strb	r0, [r2]
   23b7c:	beq	23ba0 <main@@Base+0x108c0>
   23b80:	ldrb	r0, [r1]
   23b84:	cmp	r0, #46	; 0x2e
   23b88:	beq	23bc8 <main@@Base+0x108e8>
   23b8c:	cmp	r0, #34	; 0x22
   23b90:	bne	23d70 <main@@Base+0x10a90>
   23b94:	mov	r0, #0
   23b98:	add	r1, r1, #1
   23b9c:	str	r0, [r5, #12]
   23ba0:	ldr	r0, [r5, #12]
   23ba4:	cmp	r0, #0
   23ba8:	beq	23be8 <main@@Base+0x10908>
   23bac:	mov	r7, r1
   23bb0:	cmp	r7, r6
   23bb4:	bne	23c2c <main@@Base+0x1094c>
   23bb8:	mov	r4, r6
   23bbc:	mov	r0, r4
   23bc0:	sub	sp, fp, #28
   23bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bc8:	mov	r0, r5
   23bcc:	mov	r2, r6
   23bd0:	mov	r3, #5
   23bd4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23bd8:	mov	r1, r0
   23bdc:	ldr	r0, [r5, #12]
   23be0:	cmp	r0, #0
   23be4:	bne	23bac <main@@Base+0x108cc>
   23be8:	sub	r0, r6, r1
   23bec:	cmp	r0, #2
   23bf0:	blt	23c14 <main@@Base+0x10934>
   23bf4:	ldrb	r0, [r1]
   23bf8:	cmp	r0, #32
   23bfc:	bhi	23bac <main@@Base+0x108cc>
   23c00:	bne	23c14 <main@@Base+0x10934>
   23c04:	mov	r7, r1
   23c08:	ldrb	r0, [r7, #1]!
   23c0c:	cmp	r0, #32
   23c10:	bhi	23c24 <main@@Base+0x10944>
   23c14:	mov	r0, r5
   23c18:	mov	r2, r6
   23c1c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23c20:	mov	r7, r0
   23c24:	cmp	r7, r6
   23c28:	beq	23bb8 <main@@Base+0x108d8>
   23c2c:	mov	r1, #0
   23c30:	add	r0, r8, #4
   23c34:	add	sl, sp, #32
   23c38:	add	r9, sp, #28
   23c3c:	str	r8, [sp, #12]
   23c40:	str	r1, [sp, #16]
   23c44:	mov	r1, #0
   23c48:	str	r0, [sp, #8]
   23c4c:	str	r1, [sp, #20]
   23c50:	ldr	r4, [r8]
   23c54:	mov	r8, r0
   23c58:	add	r0, sp, #24
   23c5c:	mov	r1, r7
   23c60:	mov	r2, r6
   23c64:	mov	r3, r9
   23c68:	str	sl, [sp]
   23c6c:	str	r0, [sp, #4]
   23c70:	mov	r0, r5
   23c74:	blx	r4
   23c78:	cmp	r0, r6
   23c7c:	beq	23d3c <main@@Base+0x10a5c>
   23c80:	mov	r4, r0
   23c84:	cmp	r0, r7
   23c88:	bne	23c9c <main@@Base+0x109bc>
   23c8c:	ldr	r4, [r8], #4
   23c90:	cmp	r4, #0
   23c94:	bne	23c58 <main@@Base+0x10978>
   23c98:	b	23d4c <main@@Base+0x10a6c>
   23c9c:	ldr	r7, [sp, #20]
   23ca0:	cmp	r7, #0
   23ca4:	ldrne	r0, [r5, #12]
   23ca8:	cmpne	r0, #0
   23cac:	bne	23d98 <main@@Base+0x10ab8>
   23cb0:	ldr	r0, [sp, #28]
   23cb4:	cmp	r0, #0
   23cb8:	beq	23ce0 <main@@Base+0x10a00>
   23cbc:	mov	r0, r5
   23cc0:	mov	r1, r4
   23cc4:	mov	r2, r6
   23cc8:	mov	r3, #8
   23ccc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23cd0:	ldr	r8, [sp, #12]
   23cd4:	cmp	r0, r6
   23cd8:	bne	23d04 <main@@Base+0x10a24>
   23cdc:	b	23d88 <main@@Base+0x10aa8>
   23ce0:	ldr	r0, [sp, #32]
   23ce4:	ldr	r1, [sp, #36]	; 0x24
   23ce8:	orrs	r0, r0, r1
   23cec:	movwne	r0, #1
   23cf0:	str	r0, [sp, #16]
   23cf4:	mov	r0, r4
   23cf8:	ldr	r8, [sp, #12]
   23cfc:	cmp	r0, r6
   23d00:	beq	23d88 <main@@Base+0x10aa8>
   23d04:	ldr	r0, [fp, #8]
   23d08:	ldr	r2, [sp, #16]
   23d0c:	add	r7, r7, #1
   23d10:	str	r7, [sp, #20]
   23d14:	mov	r7, r4
   23d18:	mov	r1, r0
   23d1c:	ldrb	r0, [r0]
   23d20:	add	r0, r0, r2
   23d24:	strb	r0, [r1]
   23d28:	ldr	r0, [sp, #24]
   23d2c:	cmp	r0, #0
   23d30:	ldr	r0, [sp, #8]
   23d34:	bne	23c50 <main@@Base+0x10970>
   23d38:	b	23bbc <main@@Base+0x108dc>
   23d3c:	mov	r4, r6
   23d40:	mov	r0, r4
   23d44:	sub	sp, fp, #28
   23d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d4c:	mov	r0, r5
   23d50:	mov	r1, r7
   23d54:	mov	r2, r6
   23d58:	mov	r3, #23
   23d5c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23d60:	mov	r4, r0
   23d64:	mov	r0, r4
   23d68:	sub	sp, fp, #28
   23d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d70:	mov	r0, #1
   23d74:	str	r0, [r5, #12]
   23d78:	ldr	r0, [r5, #12]
   23d7c:	cmp	r0, #0
   23d80:	bne	23bac <main@@Base+0x108cc>
   23d84:	b	23be8 <main@@Base+0x10908>
   23d88:	mov	r4, r6
   23d8c:	mov	r0, r4
   23d90:	sub	sp, fp, #28
   23d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d98:	mov	r0, r5
   23d9c:	mov	r1, r4
   23da0:	mov	r2, r6
   23da4:	mov	r3, #14
   23da8:	b	23d5c <main@@Base+0x10a7c>
   23dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23db0:	add	fp, sp, #28
   23db4:	sub	sp, sp, #44	; 0x2c
   23db8:	mov	r4, r2
   23dbc:	ldr	r2, [fp, #8]
   23dc0:	mov	r5, r0
   23dc4:	mov	r0, #0
   23dc8:	mov	r6, r3
   23dcc:	cmp	r1, r4
   23dd0:	str	r0, [r2]
   23dd4:	beq	23df8 <main@@Base+0x10b18>
   23dd8:	ldrb	r0, [r1]
   23ddc:	cmp	r0, #46	; 0x2e
   23de0:	beq	23e20 <main@@Base+0x10b40>
   23de4:	cmp	r0, #34	; 0x22
   23de8:	bne	23f80 <main@@Base+0x10ca0>
   23dec:	mov	r0, #0
   23df0:	add	r1, r1, #1
   23df4:	str	r0, [r5, #12]
   23df8:	ldr	r0, [r5, #12]
   23dfc:	cmp	r0, #0
   23e00:	beq	23e40 <main@@Base+0x10b60>
   23e04:	mov	r7, r1
   23e08:	cmp	r7, r4
   23e0c:	bne	23e84 <main@@Base+0x10ba4>
   23e10:	mov	r7, r4
   23e14:	mov	r0, r7
   23e18:	sub	sp, fp, #28
   23e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e20:	mov	r0, r5
   23e24:	mov	r2, r4
   23e28:	mov	r3, #5
   23e2c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23e30:	mov	r1, r0
   23e34:	ldr	r0, [r5, #12]
   23e38:	cmp	r0, #0
   23e3c:	bne	23e04 <main@@Base+0x10b24>
   23e40:	sub	r0, r4, r1
   23e44:	cmp	r0, #2
   23e48:	blt	23e6c <main@@Base+0x10b8c>
   23e4c:	ldrb	r0, [r1]
   23e50:	cmp	r0, #32
   23e54:	bhi	23e04 <main@@Base+0x10b24>
   23e58:	bne	23e6c <main@@Base+0x10b8c>
   23e5c:	mov	r7, r1
   23e60:	ldrb	r0, [r7, #1]!
   23e64:	cmp	r0, #32
   23e68:	bhi	23e7c <main@@Base+0x10b9c>
   23e6c:	mov	r0, r5
   23e70:	mov	r2, r4
   23e74:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   23e78:	mov	r7, r0
   23e7c:	cmp	r7, r4
   23e80:	beq	23e10 <main@@Base+0x10b30>
   23e84:	add	r9, r6, #4
   23e88:	mov	r0, #0
   23e8c:	add	sl, sp, #32
   23e90:	add	r8, sp, #28
   23e94:	str	r6, [sp, #16]
   23e98:	str	r0, [sp, #20]
   23e9c:	str	r9, [sp, #12]
   23ea0:	ldr	r6, [r6]
   23ea4:	add	r0, sp, #24
   23ea8:	mov	r1, r7
   23eac:	mov	r2, r4
   23eb0:	mov	r3, r8
   23eb4:	str	sl, [sp]
   23eb8:	str	r0, [sp, #4]
   23ebc:	mov	r0, r5
   23ec0:	blx	r6
   23ec4:	cmp	r0, r4
   23ec8:	beq	23f4c <main@@Base+0x10c6c>
   23ecc:	cmp	r0, r7
   23ed0:	bne	23ee4 <main@@Base+0x10c04>
   23ed4:	ldr	r6, [r9], #4
   23ed8:	cmp	r6, #0
   23edc:	bne	23ea4 <main@@Base+0x10bc4>
   23ee0:	b	23f5c <main@@Base+0x10c7c>
   23ee4:	ldr	r1, [sp, #20]
   23ee8:	mov	r7, r0
   23eec:	cmp	r1, #0
   23ef0:	ldrne	r0, [r5, #12]
   23ef4:	cmpne	r0, #0
   23ef8:	bne	23f98 <main@@Base+0x10cb8>
   23efc:	add	r1, r1, #1
   23f00:	ldr	r0, [sp, #32]
   23f04:	str	r1, [sp, #20]
   23f08:	ldr	r1, [sp, #36]	; 0x24
   23f0c:	bl	34bf8 <flatcc_json_parser_struct_as_root@@Base+0x658>
   23f10:	ldr	r2, [fp, #8]
   23f14:	ldr	r1, [sp, #28]
   23f18:	vmov	s2, r0
   23f1c:	ldr	r6, [sp, #16]
   23f20:	ldr	r9, [sp, #12]
   23f24:	vneg.f32	s4, s2
   23f28:	vldr	s0, [r2]
   23f2c:	cmp	r1, #0
   23f30:	vseleq.f32	s2, s2, s4
   23f34:	vadd.f32	s0, s0, s2
   23f38:	vstr	s0, [r2]
   23f3c:	ldr	r0, [sp, #24]
   23f40:	cmp	r0, #0
   23f44:	bne	23ea0 <main@@Base+0x10bc0>
   23f48:	b	23e14 <main@@Base+0x10b34>
   23f4c:	mov	r7, r4
   23f50:	mov	r0, r7
   23f54:	sub	sp, fp, #28
   23f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f5c:	mov	r0, r5
   23f60:	mov	r1, r7
   23f64:	mov	r2, r4
   23f68:	mov	r3, #23
   23f6c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   23f70:	mov	r7, r0
   23f74:	mov	r0, r7
   23f78:	sub	sp, fp, #28
   23f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f80:	mov	r0, #1
   23f84:	str	r0, [r5, #12]
   23f88:	ldr	r0, [r5, #12]
   23f8c:	cmp	r0, #0
   23f90:	bne	23e04 <main@@Base+0x10b24>
   23f94:	b	23e40 <main@@Base+0x10b60>
   23f98:	mov	r0, r5
   23f9c:	mov	r1, r7
   23fa0:	mov	r2, r4
   23fa4:	mov	r3, #14
   23fa8:	b	23f6c <main@@Base+0x10c8c>
   23fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23fb0:	add	fp, sp, #28
   23fb4:	sub	sp, sp, #44	; 0x2c
   23fb8:	mov	r6, r2
   23fbc:	ldr	r2, [fp, #8]
   23fc0:	mov	r5, r0
   23fc4:	mov	r0, #0
   23fc8:	mov	sl, r3
   23fcc:	cmp	r1, r6
   23fd0:	str	r0, [r2]
   23fd4:	beq	23ff8 <main@@Base+0x10d18>
   23fd8:	ldrb	r0, [r1]
   23fdc:	cmp	r0, #46	; 0x2e
   23fe0:	beq	24020 <main@@Base+0x10d40>
   23fe4:	cmp	r0, #34	; 0x22
   23fe8:	bne	24200 <main@@Base+0x10f20>
   23fec:	mov	r0, #0
   23ff0:	add	r1, r1, #1
   23ff4:	str	r0, [r5, #12]
   23ff8:	ldr	r0, [r5, #12]
   23ffc:	cmp	r0, #0
   24000:	beq	24040 <main@@Base+0x10d60>
   24004:	mov	r7, r1
   24008:	cmp	r7, r6
   2400c:	bne	24084 <main@@Base+0x10da4>
   24010:	mov	r4, r6
   24014:	mov	r0, r4
   24018:	sub	sp, fp, #28
   2401c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24020:	mov	r0, r5
   24024:	mov	r2, r6
   24028:	mov	r3, #5
   2402c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24030:	mov	r1, r0
   24034:	ldr	r0, [r5, #12]
   24038:	cmp	r0, #0
   2403c:	bne	24004 <main@@Base+0x10d24>
   24040:	sub	r0, r6, r1
   24044:	cmp	r0, #2
   24048:	blt	2406c <main@@Base+0x10d8c>
   2404c:	ldrb	r0, [r1]
   24050:	cmp	r0, #32
   24054:	bhi	24004 <main@@Base+0x10d24>
   24058:	bne	2406c <main@@Base+0x10d8c>
   2405c:	mov	r7, r1
   24060:	ldrb	r0, [r7, #1]!
   24064:	cmp	r0, #32
   24068:	bhi	2407c <main@@Base+0x10d9c>
   2406c:	mov	r0, r5
   24070:	mov	r2, r6
   24074:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   24078:	mov	r7, r0
   2407c:	cmp	r7, r6
   24080:	beq	24010 <main@@Base+0x10d30>
   24084:	add	r0, sl, #4
   24088:	mov	r1, #0
   2408c:	mov	r2, #0
   24090:	add	r8, sp, #32
   24094:	add	r9, sp, #28
   24098:	str	sl, [sp, #12]
   2409c:	str	r1, [sp, #20]
   240a0:	str	r0, [sp, #8]
   240a4:	ldr	r4, [sl]
   240a8:	mov	sl, r0
   240ac:	str	r2, [sp, #16]
   240b0:	add	r0, sp, #24
   240b4:	mov	r1, r7
   240b8:	mov	r2, r6
   240bc:	mov	r3, r9
   240c0:	str	r8, [sp]
   240c4:	str	r0, [sp, #4]
   240c8:	mov	r0, r5
   240cc:	blx	r4
   240d0:	cmp	r0, r6
   240d4:	beq	241cc <main@@Base+0x10eec>
   240d8:	mov	r4, r0
   240dc:	cmp	r0, r7
   240e0:	bne	240f4 <main@@Base+0x10e14>
   240e4:	ldr	r4, [sl], #4
   240e8:	cmp	r4, #0
   240ec:	bne	240b0 <main@@Base+0x10dd0>
   240f0:	b	241dc <main@@Base+0x10efc>
   240f4:	ldr	r7, [sp, #20]
   240f8:	cmp	r7, #0
   240fc:	ldrne	r0, [r5, #12]
   24100:	cmpne	r0, #0
   24104:	bne	24228 <main@@Base+0x10f48>
   24108:	ldr	r2, [sp, #28]
   2410c:	ldr	r0, [sp, #32]
   24110:	ldr	r1, [sp, #36]	; 0x24
   24114:	cmp	r2, #0
   24118:	beq	24140 <main@@Base+0x10e60>
   2411c:	ldr	sl, [sp, #12]
   24120:	subs	r2, r0, #-2147483647	; 0x80000001
   24124:	sbcs	r1, r1, #0
   24128:	bcc	24174 <main@@Base+0x10e94>
   2412c:	mov	r0, r5
   24130:	mov	r1, r4
   24134:	mov	r2, r6
   24138:	mov	r3, #8
   2413c:	b	24160 <main@@Base+0x10e80>
   24140:	ldr	sl, [sp, #12]
   24144:	subs	r2, r0, #-2147483648	; 0x80000000
   24148:	sbcs	r1, r1, #0
   2414c:	bcc	24188 <main@@Base+0x10ea8>
   24150:	mov	r0, r5
   24154:	mov	r1, r4
   24158:	mov	r2, r6
   2415c:	mov	r3, #7
   24160:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24164:	ldr	r2, [sp, #16]
   24168:	cmp	r0, r6
   2416c:	bne	24198 <main@@Base+0x10eb8>
   24170:	b	24218 <main@@Base+0x10f38>
   24174:	rsb	r2, r0, #0
   24178:	mov	r0, r4
   2417c:	cmp	r0, r6
   24180:	bne	24198 <main@@Base+0x10eb8>
   24184:	b	24218 <main@@Base+0x10f38>
   24188:	mov	r2, r0
   2418c:	mov	r0, r4
   24190:	cmp	r0, r6
   24194:	beq	24218 <main@@Base+0x10f38>
   24198:	ldr	r0, [fp, #8]
   2419c:	add	r7, r7, #1
   241a0:	str	r7, [sp, #20]
   241a4:	mov	r7, r4
   241a8:	mov	r1, r0
   241ac:	ldr	r0, [r0]
   241b0:	add	r0, r0, r2
   241b4:	str	r0, [r1]
   241b8:	ldr	r0, [sp, #24]
   241bc:	cmp	r0, #0
   241c0:	ldr	r0, [sp, #8]
   241c4:	bne	240a4 <main@@Base+0x10dc4>
   241c8:	b	24014 <main@@Base+0x10d34>
   241cc:	mov	r4, r6
   241d0:	mov	r0, r4
   241d4:	sub	sp, fp, #28
   241d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241dc:	mov	r0, r5
   241e0:	mov	r1, r7
   241e4:	mov	r2, r6
   241e8:	mov	r3, #23
   241ec:	bl	30170 <flatcc_json_parser_set_error@@Base>
   241f0:	mov	r4, r0
   241f4:	mov	r0, r4
   241f8:	sub	sp, fp, #28
   241fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24200:	mov	r0, #1
   24204:	str	r0, [r5, #12]
   24208:	ldr	r0, [r5, #12]
   2420c:	cmp	r0, #0
   24210:	bne	24004 <main@@Base+0x10d24>
   24214:	b	24040 <main@@Base+0x10d60>
   24218:	mov	r4, r6
   2421c:	mov	r0, r4
   24220:	sub	sp, fp, #28
   24224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24228:	mov	r0, r5
   2422c:	mov	r1, r4
   24230:	mov	r2, r6
   24234:	mov	r3, #14
   24238:	b	241ec <main@@Base+0x10f0c>
   2423c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24240:	add	fp, sp, #28
   24244:	sub	sp, sp, #52	; 0x34
   24248:	mov	r6, r2
   2424c:	ldr	r2, [fp, #8]
   24250:	mov	r5, r0
   24254:	mov	r0, #0
   24258:	mov	sl, r3
   2425c:	cmp	r1, r6
   24260:	str	r0, [r2]
   24264:	str	r0, [r2, #4]
   24268:	beq	2428c <main@@Base+0x10fac>
   2426c:	ldrb	r0, [r1]
   24270:	cmp	r0, #46	; 0x2e
   24274:	beq	242b4 <main@@Base+0x10fd4>
   24278:	cmp	r0, #34	; 0x22
   2427c:	bne	24494 <main@@Base+0x111b4>
   24280:	mov	r0, #0
   24284:	add	r1, r1, #1
   24288:	str	r0, [r5, #12]
   2428c:	ldr	r0, [r5, #12]
   24290:	cmp	r0, #0
   24294:	beq	242d4 <main@@Base+0x10ff4>
   24298:	mov	r7, r1
   2429c:	cmp	r7, r6
   242a0:	bne	24318 <main@@Base+0x11038>
   242a4:	mov	r4, r6
   242a8:	mov	r0, r4
   242ac:	sub	sp, fp, #28
   242b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   242b4:	mov	r0, r5
   242b8:	mov	r2, r6
   242bc:	mov	r3, #5
   242c0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   242c4:	mov	r1, r0
   242c8:	ldr	r0, [r5, #12]
   242cc:	cmp	r0, #0
   242d0:	bne	24298 <main@@Base+0x10fb8>
   242d4:	sub	r0, r6, r1
   242d8:	cmp	r0, #2
   242dc:	blt	24300 <main@@Base+0x11020>
   242e0:	ldrb	r0, [r1]
   242e4:	cmp	r0, #32
   242e8:	bhi	24298 <main@@Base+0x10fb8>
   242ec:	bne	24300 <main@@Base+0x11020>
   242f0:	mov	r7, r1
   242f4:	ldrb	r0, [r7, #1]!
   242f8:	cmp	r0, #32
   242fc:	bhi	24310 <main@@Base+0x11030>
   24300:	mov	r0, r5
   24304:	mov	r2, r6
   24308:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2430c:	mov	r7, r0
   24310:	cmp	r7, r6
   24314:	beq	242a4 <main@@Base+0x10fc4>
   24318:	add	r0, sl, #4
   2431c:	mov	r1, #0
   24320:	mov	r3, #0
   24324:	add	r8, sp, #40	; 0x28
   24328:	add	r9, sp, #36	; 0x24
   2432c:	mov	r2, #0
   24330:	str	sl, [sp, #16]
   24334:	str	r1, [sp, #28]
   24338:	str	r0, [sp, #12]
   2433c:	ldr	r4, [sl]
   24340:	mov	sl, r0
   24344:	str	r2, [sp, #20]
   24348:	str	r3, [sp, #24]
   2434c:	add	r0, sp, #32
   24350:	mov	r1, r7
   24354:	mov	r2, r6
   24358:	mov	r3, r9
   2435c:	str	r8, [sp]
   24360:	str	r0, [sp, #4]
   24364:	mov	r0, r5
   24368:	blx	r4
   2436c:	cmp	r0, r6
   24370:	beq	24460 <main@@Base+0x11180>
   24374:	mov	r4, r0
   24378:	cmp	r0, r7
   2437c:	bne	24390 <main@@Base+0x110b0>
   24380:	ldr	r4, [sl], #4
   24384:	cmp	r4, #0
   24388:	bne	2434c <main@@Base+0x1106c>
   2438c:	b	24470 <main@@Base+0x11190>
   24390:	ldr	r7, [sp, #28]
   24394:	cmp	r7, #0
   24398:	ldrne	r0, [r5, #12]
   2439c:	cmpne	r0, #0
   243a0:	bne	244bc <main@@Base+0x111dc>
   243a4:	add	r2, sp, #36	; 0x24
   243a8:	ldm	r2, {r0, r1, r2}
   243ac:	cmp	r0, #0
   243b0:	beq	243d8 <main@@Base+0x110f8>
   243b4:	ldr	sl, [sp, #16]
   243b8:	subs	r0, r1, #1
   243bc:	sbcs	r0, r2, #-2147483648	; 0x80000000
   243c0:	bcc	24410 <main@@Base+0x11130>
   243c4:	mov	r0, r5
   243c8:	mov	r1, r4
   243cc:	mov	r2, r6
   243d0:	mov	r3, #8
   243d4:	b	243f8 <main@@Base+0x11118>
   243d8:	ldr	sl, [sp, #16]
   243dc:	cmn	r2, #1
   243e0:	mov	r0, r4
   243e4:	bgt	24404 <main@@Base+0x11124>
   243e8:	mov	r0, r5
   243ec:	mov	r1, r4
   243f0:	mov	r2, r6
   243f4:	mov	r3, #7
   243f8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   243fc:	ldr	r1, [sp, #24]
   24400:	ldr	r2, [sp, #20]
   24404:	cmp	r0, r6
   24408:	bne	24424 <main@@Base+0x11144>
   2440c:	b	244ac <main@@Base+0x111cc>
   24410:	rsbs	r1, r1, #0
   24414:	mov	r0, r4
   24418:	rsc	r2, r2, #0
   2441c:	cmp	r0, r6
   24420:	beq	244ac <main@@Base+0x111cc>
   24424:	ldr	r0, [fp, #8]
   24428:	add	r7, r7, #1
   2442c:	str	r7, [sp, #28]
   24430:	mov	r7, r0
   24434:	ldm	r0, {r0, r3}
   24438:	adds	r0, r0, r1
   2443c:	adc	r3, r3, r2
   24440:	stm	r7, {r0, r3}
   24444:	mov	r3, r1
   24448:	mov	r7, r4
   2444c:	ldr	r0, [sp, #32]
   24450:	cmp	r0, #0
   24454:	ldr	r0, [sp, #12]
   24458:	bne	2433c <main@@Base+0x1105c>
   2445c:	b	242a8 <main@@Base+0x10fc8>
   24460:	mov	r4, r6
   24464:	mov	r0, r4
   24468:	sub	sp, fp, #28
   2446c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24470:	mov	r0, r5
   24474:	mov	r1, r7
   24478:	mov	r2, r6
   2447c:	mov	r3, #23
   24480:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24484:	mov	r4, r0
   24488:	mov	r0, r4
   2448c:	sub	sp, fp, #28
   24490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24494:	mov	r0, #1
   24498:	str	r0, [r5, #12]
   2449c:	ldr	r0, [r5, #12]
   244a0:	cmp	r0, #0
   244a4:	bne	24298 <main@@Base+0x10fb8>
   244a8:	b	242d4 <main@@Base+0x10ff4>
   244ac:	mov	r4, r6
   244b0:	mov	r0, r4
   244b4:	sub	sp, fp, #28
   244b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244bc:	mov	r0, r5
   244c0:	mov	r1, r4
   244c4:	mov	r2, r6
   244c8:	mov	r3, #14
   244cc:	b	24480 <main@@Base+0x111a0>
   244d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   244d4:	add	fp, sp, #28
   244d8:	sub	sp, sp, #44	; 0x2c
   244dc:	mov	r6, r2
   244e0:	ldr	r2, [fp, #8]
   244e4:	mov	r5, r0
   244e8:	mov	r0, #0
   244ec:	mov	sl, r3
   244f0:	cmp	r1, r6
   244f4:	str	r0, [r2]
   244f8:	beq	2451c <main@@Base+0x1123c>
   244fc:	ldrb	r0, [r1]
   24500:	cmp	r0, #46	; 0x2e
   24504:	beq	24544 <main@@Base+0x11264>
   24508:	cmp	r0, #34	; 0x22
   2450c:	bne	2470c <main@@Base+0x1142c>
   24510:	mov	r0, #0
   24514:	add	r1, r1, #1
   24518:	str	r0, [r5, #12]
   2451c:	ldr	r0, [r5, #12]
   24520:	cmp	r0, #0
   24524:	beq	24564 <main@@Base+0x11284>
   24528:	mov	r7, r1
   2452c:	cmp	r7, r6
   24530:	bne	245a8 <main@@Base+0x112c8>
   24534:	mov	r4, r6
   24538:	mov	r0, r4
   2453c:	sub	sp, fp, #28
   24540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24544:	mov	r0, r5
   24548:	mov	r2, r6
   2454c:	mov	r3, #5
   24550:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24554:	mov	r1, r0
   24558:	ldr	r0, [r5, #12]
   2455c:	cmp	r0, #0
   24560:	bne	24528 <main@@Base+0x11248>
   24564:	sub	r0, r6, r1
   24568:	cmp	r0, #2
   2456c:	blt	24590 <main@@Base+0x112b0>
   24570:	ldrb	r0, [r1]
   24574:	cmp	r0, #32
   24578:	bhi	24528 <main@@Base+0x11248>
   2457c:	bne	24590 <main@@Base+0x112b0>
   24580:	mov	r7, r1
   24584:	ldrb	r0, [r7, #1]!
   24588:	cmp	r0, #32
   2458c:	bhi	245a0 <main@@Base+0x112c0>
   24590:	mov	r0, r5
   24594:	mov	r2, r6
   24598:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2459c:	mov	r7, r0
   245a0:	cmp	r7, r6
   245a4:	beq	24534 <main@@Base+0x11254>
   245a8:	mov	r1, #0
   245ac:	add	r0, sl, #4
   245b0:	add	r8, sp, #32
   245b4:	add	r9, sp, #28
   245b8:	str	sl, [sp, #12]
   245bc:	str	r1, [sp, #16]
   245c0:	mov	r1, #0
   245c4:	str	r0, [sp, #8]
   245c8:	str	r1, [sp, #20]
   245cc:	ldr	r4, [sl]
   245d0:	mov	sl, r0
   245d4:	add	r0, sp, #24
   245d8:	mov	r1, r7
   245dc:	mov	r2, r6
   245e0:	mov	r3, r9
   245e4:	str	r8, [sp]
   245e8:	str	r0, [sp, #4]
   245ec:	mov	r0, r5
   245f0:	blx	r4
   245f4:	cmp	r0, r6
   245f8:	beq	246d8 <main@@Base+0x113f8>
   245fc:	mov	r4, r0
   24600:	cmp	r0, r7
   24604:	bne	24618 <main@@Base+0x11338>
   24608:	ldr	r4, [sl], #4
   2460c:	cmp	r4, #0
   24610:	bne	245d4 <main@@Base+0x112f4>
   24614:	b	246e8 <main@@Base+0x11408>
   24618:	ldr	r7, [sp, #20]
   2461c:	cmp	r7, #0
   24620:	ldrne	r0, [r5, #12]
   24624:	cmpne	r0, #0
   24628:	bne	24734 <main@@Base+0x11454>
   2462c:	ldr	r0, [sp, #28]
   24630:	cmp	r0, #0
   24634:	beq	2465c <main@@Base+0x1137c>
   24638:	mov	r0, r5
   2463c:	mov	r1, r4
   24640:	mov	r2, r6
   24644:	mov	r3, #8
   24648:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2464c:	ldr	sl, [sp, #12]
   24650:	cmp	r0, r6
   24654:	bne	246a0 <main@@Base+0x113c0>
   24658:	b	24724 <main@@Base+0x11444>
   2465c:	ldr	r0, [sp, #36]	; 0x24
   24660:	ldr	sl, [sp, #12]
   24664:	cmp	r0, #0
   24668:	beq	2468c <main@@Base+0x113ac>
   2466c:	mov	r0, r5
   24670:	mov	r1, r4
   24674:	mov	r2, r6
   24678:	mov	r3, #7
   2467c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24680:	cmp	r0, r6
   24684:	bne	246a0 <main@@Base+0x113c0>
   24688:	b	24724 <main@@Base+0x11444>
   2468c:	ldr	r0, [sp, #32]
   24690:	str	r0, [sp, #16]
   24694:	mov	r0, r4
   24698:	cmp	r0, r6
   2469c:	beq	24724 <main@@Base+0x11444>
   246a0:	ldr	r0, [fp, #8]
   246a4:	ldr	r2, [sp, #16]
   246a8:	add	r7, r7, #1
   246ac:	str	r7, [sp, #20]
   246b0:	mov	r7, r4
   246b4:	mov	r1, r0
   246b8:	ldr	r0, [r0]
   246bc:	add	r0, r0, r2
   246c0:	str	r0, [r1]
   246c4:	ldr	r0, [sp, #24]
   246c8:	cmp	r0, #0
   246cc:	ldr	r0, [sp, #8]
   246d0:	bne	245cc <main@@Base+0x112ec>
   246d4:	b	24538 <main@@Base+0x11258>
   246d8:	mov	r4, r6
   246dc:	mov	r0, r4
   246e0:	sub	sp, fp, #28
   246e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246e8:	mov	r0, r5
   246ec:	mov	r1, r7
   246f0:	mov	r2, r6
   246f4:	mov	r3, #23
   246f8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   246fc:	mov	r4, r0
   24700:	mov	r0, r4
   24704:	sub	sp, fp, #28
   24708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2470c:	mov	r0, #1
   24710:	str	r0, [r5, #12]
   24714:	ldr	r0, [r5, #12]
   24718:	cmp	r0, #0
   2471c:	bne	24528 <main@@Base+0x11248>
   24720:	b	24564 <main@@Base+0x11284>
   24724:	mov	r4, r6
   24728:	mov	r0, r4
   2472c:	sub	sp, fp, #28
   24730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24734:	mov	r0, r5
   24738:	mov	r1, r4
   2473c:	mov	r2, r6
   24740:	mov	r3, #14
   24744:	b	246f8 <main@@Base+0x11418>
   24748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2474c:	add	fp, sp, #28
   24750:	sub	sp, sp, #52	; 0x34
   24754:	mov	r6, r2
   24758:	ldr	r2, [fp, #8]
   2475c:	mov	r5, r0
   24760:	mov	r0, #0
   24764:	mov	r8, r3
   24768:	cmp	r1, r6
   2476c:	str	r0, [r2]
   24770:	str	r0, [r2, #4]
   24774:	beq	24798 <main@@Base+0x114b8>
   24778:	ldrb	r0, [r1]
   2477c:	cmp	r0, #46	; 0x2e
   24780:	beq	247c0 <main@@Base+0x114e0>
   24784:	cmp	r0, #34	; 0x22
   24788:	bne	24974 <main@@Base+0x11694>
   2478c:	mov	r0, #0
   24790:	add	r1, r1, #1
   24794:	str	r0, [r5, #12]
   24798:	ldr	r0, [r5, #12]
   2479c:	cmp	r0, #0
   247a0:	beq	247e0 <main@@Base+0x11500>
   247a4:	mov	r7, r1
   247a8:	cmp	r7, r6
   247ac:	bne	24824 <main@@Base+0x11544>
   247b0:	mov	r4, r6
   247b4:	mov	r0, r4
   247b8:	sub	sp, fp, #28
   247bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247c0:	mov	r0, r5
   247c4:	mov	r2, r6
   247c8:	mov	r3, #5
   247cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   247d0:	mov	r1, r0
   247d4:	ldr	r0, [r5, #12]
   247d8:	cmp	r0, #0
   247dc:	bne	247a4 <main@@Base+0x114c4>
   247e0:	sub	r0, r6, r1
   247e4:	cmp	r0, #2
   247e8:	blt	2480c <main@@Base+0x1152c>
   247ec:	ldrb	r0, [r1]
   247f0:	cmp	r0, #32
   247f4:	bhi	247a4 <main@@Base+0x114c4>
   247f8:	bne	2480c <main@@Base+0x1152c>
   247fc:	mov	r7, r1
   24800:	ldrb	r0, [r7, #1]!
   24804:	cmp	r0, #32
   24808:	bhi	2481c <main@@Base+0x1153c>
   2480c:	mov	r0, r5
   24810:	mov	r2, r6
   24814:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   24818:	mov	r7, r0
   2481c:	cmp	r7, r6
   24820:	beq	247b0 <main@@Base+0x114d0>
   24824:	mov	r1, #0
   24828:	add	r0, r8, #4
   2482c:	add	sl, sp, #40	; 0x28
   24830:	add	r9, sp, #36	; 0x24
   24834:	str	r8, [sp, #16]
   24838:	str	r1, [sp, #24]
   2483c:	mov	r1, #0
   24840:	str	r0, [sp, #12]
   24844:	str	r1, [sp, #20]
   24848:	mov	r1, #0
   2484c:	str	r1, [sp, #28]
   24850:	ldr	r4, [r8]
   24854:	mov	r8, r0
   24858:	add	r0, sp, #32
   2485c:	mov	r1, r7
   24860:	mov	r2, r6
   24864:	mov	r3, r9
   24868:	str	sl, [sp]
   2486c:	str	r0, [sp, #4]
   24870:	mov	r0, r5
   24874:	blx	r4
   24878:	cmp	r0, r6
   2487c:	beq	24940 <main@@Base+0x11660>
   24880:	mov	r4, r0
   24884:	cmp	r0, r7
   24888:	bne	2489c <main@@Base+0x115bc>
   2488c:	ldr	r4, [r8], #4
   24890:	cmp	r4, #0
   24894:	bne	24858 <main@@Base+0x11578>
   24898:	b	24950 <main@@Base+0x11670>
   2489c:	ldr	r7, [sp, #28]
   248a0:	cmp	r7, #0
   248a4:	ldrne	r0, [r5, #12]
   248a8:	cmpne	r0, #0
   248ac:	bne	2499c <main@@Base+0x116bc>
   248b0:	ldr	r0, [sp, #36]	; 0x24
   248b4:	cmp	r0, #0
   248b8:	beq	248e0 <main@@Base+0x11600>
   248bc:	mov	r0, r5
   248c0:	mov	r1, r4
   248c4:	mov	r2, r6
   248c8:	mov	r3, #8
   248cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   248d0:	ldr	r8, [sp, #16]
   248d4:	cmp	r0, r6
   248d8:	bne	24900 <main@@Base+0x11620>
   248dc:	b	2498c <main@@Base+0x116ac>
   248e0:	ldr	r0, [sp, #40]	; 0x28
   248e4:	str	r0, [sp, #24]
   248e8:	ldr	r0, [sp, #44]	; 0x2c
   248ec:	str	r0, [sp, #20]
   248f0:	mov	r0, r4
   248f4:	ldr	r8, [sp, #16]
   248f8:	cmp	r0, r6
   248fc:	beq	2498c <main@@Base+0x116ac>
   24900:	ldr	r0, [fp, #8]
   24904:	add	r7, r7, #1
   24908:	ldr	r3, [sp, #24]
   2490c:	str	r7, [sp, #28]
   24910:	mov	r7, r4
   24914:	mov	r2, r0
   24918:	ldrd	r0, [r0]
   2491c:	adds	r0, r0, r3
   24920:	ldr	r3, [sp, #20]
   24924:	adc	r1, r1, r3
   24928:	strd	r0, [r2]
   2492c:	ldr	r0, [sp, #32]
   24930:	cmp	r0, #0
   24934:	ldr	r0, [sp, #12]
   24938:	bne	24850 <main@@Base+0x11570>
   2493c:	b	247b4 <main@@Base+0x114d4>
   24940:	mov	r4, r6
   24944:	mov	r0, r4
   24948:	sub	sp, fp, #28
   2494c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24950:	mov	r0, r5
   24954:	mov	r1, r7
   24958:	mov	r2, r6
   2495c:	mov	r3, #23
   24960:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24964:	mov	r4, r0
   24968:	mov	r0, r4
   2496c:	sub	sp, fp, #28
   24970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24974:	mov	r0, #1
   24978:	str	r0, [r5, #12]
   2497c:	ldr	r0, [r5, #12]
   24980:	cmp	r0, #0
   24984:	bne	247a4 <main@@Base+0x114c4>
   24988:	b	247e0 <main@@Base+0x11500>
   2498c:	mov	r4, r6
   24990:	mov	r0, r4
   24994:	sub	sp, fp, #28
   24998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2499c:	mov	r0, r5
   249a0:	mov	r1, r4
   249a4:	mov	r2, r6
   249a8:	mov	r3, #14
   249ac:	b	24960 <main@@Base+0x11680>
   249b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249b4:	add	fp, sp, #28
   249b8:	sub	sp, sp, #44	; 0x2c
   249bc:	mov	r4, r2
   249c0:	ldr	r2, [fp, #8]
   249c4:	mov	r5, r0
   249c8:	mov	r0, #0
   249cc:	mov	r9, r3
   249d0:	cmp	r1, r4
   249d4:	str	r0, [r2]
   249d8:	str	r0, [r2, #4]
   249dc:	beq	24a00 <main@@Base+0x11720>
   249e0:	ldrb	r0, [r1]
   249e4:	cmp	r0, #46	; 0x2e
   249e8:	beq	24a28 <main@@Base+0x11748>
   249ec:	cmp	r0, #34	; 0x22
   249f0:	bne	24b94 <main@@Base+0x118b4>
   249f4:	mov	r0, #0
   249f8:	add	r1, r1, #1
   249fc:	str	r0, [r5, #12]
   24a00:	ldr	r0, [r5, #12]
   24a04:	cmp	r0, #0
   24a08:	beq	24a48 <main@@Base+0x11768>
   24a0c:	mov	r7, r1
   24a10:	cmp	r7, r4
   24a14:	bne	24a8c <main@@Base+0x117ac>
   24a18:	mov	r7, r4
   24a1c:	mov	r0, r7
   24a20:	sub	sp, fp, #28
   24a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a28:	mov	r0, r5
   24a2c:	mov	r2, r4
   24a30:	mov	r3, #5
   24a34:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24a38:	mov	r1, r0
   24a3c:	ldr	r0, [r5, #12]
   24a40:	cmp	r0, #0
   24a44:	bne	24a0c <main@@Base+0x1172c>
   24a48:	sub	r0, r4, r1
   24a4c:	cmp	r0, #2
   24a50:	blt	24a74 <main@@Base+0x11794>
   24a54:	ldrb	r0, [r1]
   24a58:	cmp	r0, #32
   24a5c:	bhi	24a0c <main@@Base+0x1172c>
   24a60:	bne	24a74 <main@@Base+0x11794>
   24a64:	mov	r7, r1
   24a68:	ldrb	r0, [r7, #1]!
   24a6c:	cmp	r0, #32
   24a70:	bhi	24a84 <main@@Base+0x117a4>
   24a74:	mov	r0, r5
   24a78:	mov	r2, r4
   24a7c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   24a80:	mov	r7, r0
   24a84:	cmp	r7, r4
   24a88:	beq	24a18 <main@@Base+0x11738>
   24a8c:	add	r0, r9, #4
   24a90:	mov	r1, #0
   24a94:	add	sl, sp, #32
   24a98:	add	r8, sp, #28
   24a9c:	str	r9, [sp, #16]
   24aa0:	str	r1, [sp, #20]
   24aa4:	str	r0, [sp, #12]
   24aa8:	ldr	r6, [r9]
   24aac:	mov	r9, r0
   24ab0:	add	r0, sp, #24
   24ab4:	mov	r1, r7
   24ab8:	mov	r2, r4
   24abc:	mov	r3, r8
   24ac0:	str	sl, [sp]
   24ac4:	str	r0, [sp, #4]
   24ac8:	mov	r0, r5
   24acc:	blx	r6
   24ad0:	cmp	r0, r4
   24ad4:	beq	24b60 <main@@Base+0x11880>
   24ad8:	cmp	r0, r7
   24adc:	bne	24af0 <main@@Base+0x11810>
   24ae0:	ldr	r6, [r9], #4
   24ae4:	cmp	r6, #0
   24ae8:	bne	24ab0 <main@@Base+0x117d0>
   24aec:	b	24b70 <main@@Base+0x11890>
   24af0:	ldr	r1, [sp, #20]
   24af4:	mov	r7, r0
   24af8:	cmp	r1, #0
   24afc:	ldrne	r0, [r5, #12]
   24b00:	cmpne	r0, #0
   24b04:	bne	24bac <main@@Base+0x118cc>
   24b08:	add	r1, r1, #1
   24b0c:	ldr	r0, [sp, #32]
   24b10:	str	r1, [sp, #20]
   24b14:	ldr	r1, [sp, #36]	; 0x24
   24b18:	bl	349c0 <flatcc_json_parser_struct_as_root@@Base+0x420>
   24b1c:	ldr	r2, [fp, #8]
   24b20:	ldr	r3, [sp, #28]
   24b24:	vmov	d17, r0, r1
   24b28:	ldr	r9, [sp, #16]
   24b2c:	vldr	d16, [r2]
   24b30:	mov	r6, r2
   24b34:	eor	r2, r1, #-2147483648	; 0x80000000
   24b38:	cmp	r3, #0
   24b3c:	vmov	d18, r0, r2
   24b40:	vseleq.f64	d17, d17, d18
   24b44:	vadd.f64	d16, d16, d17
   24b48:	vstr	d16, [r6]
   24b4c:	ldr	r0, [sp, #24]
   24b50:	cmp	r0, #0
   24b54:	ldr	r0, [sp, #12]
   24b58:	bne	24aa8 <main@@Base+0x117c8>
   24b5c:	b	24a1c <main@@Base+0x1173c>
   24b60:	mov	r7, r4
   24b64:	mov	r0, r7
   24b68:	sub	sp, fp, #28
   24b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b70:	mov	r0, r5
   24b74:	mov	r1, r7
   24b78:	mov	r2, r4
   24b7c:	mov	r3, #23
   24b80:	bl	30170 <flatcc_json_parser_set_error@@Base>
   24b84:	mov	r7, r0
   24b88:	mov	r0, r7
   24b8c:	sub	sp, fp, #28
   24b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b94:	mov	r0, #1
   24b98:	str	r0, [r5, #12]
   24b9c:	ldr	r0, [r5, #12]
   24ba0:	cmp	r0, #0
   24ba4:	bne	24a0c <main@@Base+0x1172c>
   24ba8:	b	24a48 <main@@Base+0x11768>
   24bac:	mov	r0, r5
   24bb0:	mov	r1, r7
   24bb4:	mov	r2, r4
   24bb8:	mov	r3, #14
   24bbc:	b	24b80 <main@@Base+0x118a0>
   24bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24bc4:	add	fp, sp, #28
   24bc8:	sub	sp, sp, #12
   24bcc:	mov	sl, r1
   24bd0:	sub	r1, r2, r1
   24bd4:	cmp	r1, #8
   24bd8:	movcs	r1, #8
   24bdc:	and	r1, r1, #15
   24be0:	sub	r5, r1, #1
   24be4:	cmp	r5, #7
   24be8:	bhi	24e24 <main@@Base+0x11b44>
   24bec:	str	r3, [sp, #8]
   24bf0:	add	r7, pc, #32
   24bf4:	mov	r8, #0
   24bf8:	mov	ip, #0
   24bfc:	mov	lr, #0
   24c00:	mov	r9, #0
   24c04:	mov	r6, #0
   24c08:	mov	r1, #0
   24c0c:	mov	r3, #0
   24c10:	mov	r4, #0
   24c14:	ldr	pc, [r7, r5, lsl #2]
   24c18:	andeq	r4, r2, ip, ror ip
   24c1c:	andeq	r4, r2, r4, ror ip
   24c20:	andeq	r4, r2, ip, ror #24
   24c24:	andeq	r4, r2, r4, ror #24
   24c28:	andeq	r4, r2, r8, asr ip
   24c2c:	andeq	r4, r2, ip, asr #24
   24c30:	andeq	r4, r2, ip, lsr ip
   24c34:	andeq	r4, r2, r8, lsr ip
   24c38:	ldrb	ip, [sl, #7]
   24c3c:	ldrb	r1, [sl, #6]
   24c40:	mov	lr, r8
   24c44:	orr	r1, ip, r1, lsl #8
   24c48:	mov	r8, r1
   24c4c:	ldrb	r1, [sl, #5]
   24c50:	mov	r9, lr
   24c54:	orr	r8, r8, r1, lsl #16
   24c58:	ldrb	r1, [sl, #4]
   24c5c:	mov	r6, r9
   24c60:	orr	r8, r8, r1, lsl #24
   24c64:	ldrb	r1, [sl, #3]
   24c68:	orr	r1, r1, r6
   24c6c:	ldrb	r3, [sl, #2]
   24c70:	orr	r3, r1, r3, lsl #8
   24c74:	ldrb	r1, [sl, #1]
   24c78:	orr	r4, r3, r1, lsl #16
   24c7c:	movw	r1, #28276	; 0x6e74
   24c80:	movw	r7, #20577	; 0x5061
   24c84:	ldr	r6, [fp, #12]
   24c88:	movt	r1, #29285	; 0x7265
   24c8c:	movt	r7, #18798	; 0x496e
   24c90:	eor	r3, r8, r1
   24c94:	ldrb	r1, [sl]
   24c98:	orr	r1, r4, r1, lsl #24
   24c9c:	eor	r7, r1, r7
   24ca0:	orrs	r3, r3, r7
   24ca4:	bne	24dd8 <main@@Base+0x11af8>
   24ca8:	add	r8, sl, #8
   24cac:	sub	r1, r2, r8
   24cb0:	cmp	r1, #8
   24cb4:	movcs	r1, #8
   24cb8:	and	r1, r1, #15
   24cbc:	sub	r7, r1, #1
   24cc0:	cmp	r7, #7
   24cc4:	bhi	24e24 <main@@Base+0x11b44>
   24cc8:	str	r0, [sp, #4]
   24ccc:	add	lr, pc, #32
   24cd0:	mov	r6, #0
   24cd4:	mov	r0, #0
   24cd8:	mov	r1, #0
   24cdc:	mov	r5, #0
   24ce0:	mov	r4, #0
   24ce4:	mov	r3, #0
   24ce8:	mov	ip, #0
   24cec:	mov	r9, #0
   24cf0:	ldr	pc, [lr, r7, lsl #2]
   24cf4:	andeq	r4, r2, r8, asr sp
   24cf8:	andeq	r4, r2, r0, asr sp
   24cfc:	andeq	r4, r2, r8, asr #26
   24d00:	andeq	r4, r2, r0, asr #26
   24d04:	andeq	r4, r2, r4, lsr sp
   24d08:	andeq	r4, r2, r8, lsr #26
   24d0c:	andeq	r4, r2, r8, lsl sp
   24d10:	andeq	r4, r2, r4, lsl sp
   24d14:	ldrb	r0, [sl, #15]
   24d18:	ldrb	r1, [sl, #14]
   24d1c:	orr	r0, r0, r1, lsl #8
   24d20:	mov	r1, r6
   24d24:	mov	r6, r0
   24d28:	ldrb	r0, [sl, #13]
   24d2c:	mov	r5, r1
   24d30:	orr	r6, r6, r0, lsl #16
   24d34:	ldrb	r0, [sl, #12]
   24d38:	mov	r4, r5
   24d3c:	orr	r6, r6, r0, lsl #24
   24d40:	ldrb	r0, [sl, #11]
   24d44:	orr	r3, r0, r4
   24d48:	ldrb	r0, [sl, #10]
   24d4c:	orr	ip, r3, r0, lsl #8
   24d50:	ldrb	r0, [sl, #9]
   24d54:	orr	r9, ip, r0, lsl #16
   24d58:	ldrb	r1, [r8]
   24d5c:	movw	r0, #24931	; 0x6163
   24d60:	movw	r3, #28005	; 0x6d65
   24d64:	movt	r0, #29552	; 0x7370
   24d68:	movt	r3, #20065	; 0x4e61
   24d6c:	eor	r0, r6, r0
   24d70:	orr	r1, r9, r1, lsl #24
   24d74:	eor	r1, r1, r3
   24d78:	orrs	r0, r0, r1
   24d7c:	bne	24e24 <main@@Base+0x11b44>
   24d80:	add	r6, sl, #16
   24d84:	mov	r1, #-268435456	; 0xf0000000
   24d88:	sub	r0, r2, r6
   24d8c:	cmp	r0, #8
   24d90:	movcs	r0, #8
   24d94:	add	r0, r1, r0, lsl #28
   24d98:	asr	r0, r0, #28
   24d9c:	cmp	r0, #0
   24da0:	blt	24e24 <main@@Base+0x11b44>
   24da4:	ldrb	r0, [r6]
   24da8:	cmp	r0, #101	; 0x65
   24dac:	bne	24e24 <main@@Base+0x11b44>
   24db0:	ldr	r0, [fp, #12]
   24db4:	mov	r1, r6
   24db8:	mov	r3, #1
   24dbc:	mov	r8, #1
   24dc0:	str	r0, [sp]
   24dc4:	ldr	r0, [sp, #4]
   24dc8:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   24dcc:	cmp	r0, r6
   24dd0:	bne	24e04 <main@@Base+0x11b24>
   24dd4:	b	24e24 <main@@Base+0x11b44>
   24dd8:	movw	r3, #20037	; 0x4e45
   24ddc:	movt	r3, #20047	; 0x4e4f
   24de0:	teq	r1, r3
   24de4:	bne	24e24 <main@@Base+0x11b44>
   24de8:	mov	r1, sl
   24dec:	mov	r3, #4
   24df0:	str	r6, [sp]
   24df4:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   24df8:	cmp	r0, sl
   24dfc:	beq	24e24 <main@@Base+0x11b44>
   24e00:	mov	r8, #0
   24e04:	mov	sl, r0
   24e08:	ldr	r0, [fp, #8]
   24e0c:	mov	r1, #0
   24e10:	str	r8, [r0]
   24e14:	str	r1, [r0, #4]
   24e18:	mov	r0, #0
   24e1c:	ldr	r1, [sp, #8]
   24e20:	str	r0, [r1]
   24e24:	mov	r0, sl
   24e28:	sub	sp, fp, #28
   24e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e34:	add	fp, sp, #28
   24e38:	sub	sp, sp, #12
   24e3c:	mov	r5, r1
   24e40:	sub	r1, r2, r1
   24e44:	cmp	r1, #8
   24e48:	movcs	r1, #8
   24e4c:	and	r1, r1, #15
   24e50:	sub	r7, r1, #1
   24e54:	cmp	r7, #7
   24e58:	bhi	24fd4 <main@@Base+0x11cf4>
   24e5c:	str	r3, [sp, #8]
   24e60:	add	r8, pc, #32
   24e64:	mov	lr, #0
   24e68:	mov	ip, #0
   24e6c:	mov	r9, #0
   24e70:	mov	sl, #0
   24e74:	mov	r1, #0
   24e78:	mov	r3, #0
   24e7c:	mov	r4, #0
   24e80:	mov	r6, #0
   24e84:	ldr	pc, [r8, r7, lsl #2]
   24e88:	andeq	r4, r2, ip, ror #29
   24e8c:	andeq	r4, r2, r4, ror #29
   24e90:	ldrdeq	r4, [r2], -ip
   24e94:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24e98:	andeq	r4, r2, r8, asr #29
   24e9c:			; <UNDEFINED> instruction: 0x00024ebc
   24ea0:	andeq	r4, r2, ip, lsr #29
   24ea4:	andeq	r4, r2, r8, lsr #29
   24ea8:	ldrb	ip, [r5, #7]
   24eac:	ldrb	r1, [r5, #6]
   24eb0:	mov	r9, lr
   24eb4:	orr	r1, ip, r1, lsl #8
   24eb8:	mov	lr, r1
   24ebc:	ldrb	r1, [r5, #5]
   24ec0:	mov	sl, r9
   24ec4:	orr	lr, lr, r1, lsl #16
   24ec8:	ldrb	r1, [r5, #4]
   24ecc:	orr	lr, lr, r1, lsl #24
   24ed0:	mov	r1, sl
   24ed4:	ldrb	r3, [r5, #3]
   24ed8:	orr	r3, r3, r1
   24edc:	ldrb	r1, [r5, #2]
   24ee0:	orr	r4, r3, r1, lsl #8
   24ee4:	ldrb	r1, [r5, #1]
   24ee8:	orr	r6, r4, r1, lsl #16
   24eec:	ldrb	r1, [r5]
   24ef0:	ldr	r3, [fp, #12]
   24ef4:	ldr	r8, [fp, #8]
   24ef8:	orr	r1, r6, r1, lsl #24
   24efc:	movw	r6, #30769	; 0x7831
   24f00:	movt	r6, #26725	; 0x6865
   24f04:	cmp	r1, r6
   24f08:	bhi	24f38 <main@@Base+0x11c58>
   24f0c:	teq	r1, r6
   24f10:	bne	24fd4 <main@@Base+0x11cf4>
   24f14:	str	r3, [sp]
   24f18:	mov	r1, r5
   24f1c:	mov	r3, #4
   24f20:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   24f24:	cmp	r0, r5
   24f28:	beq	24fd4 <main@@Base+0x11cf4>
   24f2c:	mov	r1, #0
   24f30:	mov	r2, #3
   24f34:	b	24fc0 <main@@Base+0x11ce0>
   24f38:	lsr	r4, lr, #16
   24f3c:	movw	r7, #25959	; 0x6567
   24f40:	movw	r6, #26725	; 0x6865
   24f44:	orr	r4, r4, r1, lsl #16
   24f48:	movt	r7, #30830	; 0x786e
   24f4c:	eor	r6, r6, r1, lsr #16
   24f50:	eor	r7, r4, r7
   24f54:	orrs	r7, r7, r6
   24f58:	bne	24f8c <main@@Base+0x11cac>
   24f5c:	str	r3, [sp]
   24f60:	mov	r1, r5
   24f64:	mov	r3, #6
   24f68:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   24f6c:	cmp	r0, r5
   24f70:	beq	24fd4 <main@@Base+0x11cf4>
   24f74:	mvn	r2, #1
   24f78:	mvn	r1, #0
   24f7c:	str	r2, [r8]
   24f80:	str	r1, [r8, #4]
   24f84:	mov	r1, #1
   24f88:	b	24fc8 <main@@Base+0x11ce8>
   24f8c:	movw	r7, #30770	; 0x7832
   24f90:	movt	r7, #26725	; 0x6865
   24f94:	teq	r1, r7
   24f98:	bne	24fd4 <main@@Base+0x11cf4>
   24f9c:	str	r3, [sp]
   24fa0:	mov	r1, r5
   24fa4:	mov	r3, #4
   24fa8:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   24fac:	cmp	r0, r5
   24fb0:	beq	24fd4 <main@@Base+0x11cf4>
   24fb4:	movw	r2, #48815	; 0xbeaf
   24fb8:	mov	r1, #0
   24fbc:	movt	r2, #32431	; 0x7eaf
   24fc0:	str	r2, [r8]
   24fc4:	str	r1, [r8, #4]
   24fc8:	ldr	r2, [sp, #8]
   24fcc:	mov	r5, r0
   24fd0:	str	r1, [r2]
   24fd4:	mov	r0, r5
   24fd8:	sub	sp, fp, #28
   24fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fe4:	add	fp, sp, #28
   24fe8:	sub	sp, sp, #12
   24fec:	mov	sl, r1
   24ff0:	sub	r1, r2, r1
   24ff4:	cmp	r1, #8
   24ff8:	movcs	r1, #8
   24ffc:	and	r1, r1, #15
   25000:	sub	r4, r1, #1
   25004:	cmp	r4, #7
   25008:	bhi	251c8 <main@@Base+0x11ee8>
   2500c:	str	r3, [sp, #8]
   25010:	add	r8, pc, #32
   25014:	mov	r9, #0
   25018:	mov	ip, #0
   2501c:	mov	lr, #0
   25020:	mov	r7, #0
   25024:	mov	r6, #0
   25028:	mov	r3, #0
   2502c:	mov	r1, #0
   25030:	mov	r5, #0
   25034:	ldr	pc, [r8, r4, lsl #2]
   25038:	muleq	r2, ip, r0
   2503c:	muleq	r2, r4, r0
   25040:	andeq	r5, r2, ip, lsl #1
   25044:	andeq	r5, r2, r4, lsl #1
   25048:	andeq	r5, r2, r8, ror r0
   2504c:	andeq	r5, r2, ip, rrx
   25050:	andeq	r5, r2, ip, asr r0
   25054:	andeq	r5, r2, r8, asr r0
   25058:	ldrb	ip, [sl, #7]
   2505c:	ldrb	r1, [sl, #6]
   25060:	mov	lr, r9
   25064:	orr	r1, ip, r1, lsl #8
   25068:	mov	r9, r1
   2506c:	ldrb	r1, [sl, #5]
   25070:	mov	r7, lr
   25074:	orr	r9, r9, r1, lsl #16
   25078:	ldrb	r1, [sl, #4]
   2507c:	mov	r6, r7
   25080:	orr	r9, r9, r1, lsl #24
   25084:	ldrb	r1, [sl, #3]
   25088:	orr	r3, r1, r6
   2508c:	ldrb	r1, [sl, #2]
   25090:	orr	r1, r3, r1, lsl #8
   25094:	ldrb	r3, [sl, #1]
   25098:	orr	r5, r1, r3, lsl #16
   2509c:	ldrb	r1, [sl]
   250a0:	ldr	r3, [fp, #12]
   250a4:	ldr	r6, [fp, #8]
   250a8:	orr	r7, r5, r1, lsl #24
   250ac:	movw	r1, #29745	; 0x7431
   250b0:	movt	r1, #26990	; 0x696e
   250b4:	cmp	r7, r1
   250b8:	bhi	250e8 <main@@Base+0x11e08>
   250bc:	teq	r7, r1
   250c0:	bne	251c8 <main@@Base+0x11ee8>
   250c4:	str	r3, [sp]
   250c8:	mov	r1, sl
   250cc:	mov	r3, #4
   250d0:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   250d4:	cmp	r0, sl
   250d8:	beq	251c8 <main@@Base+0x11ee8>
   250dc:	mov	r1, #0
   250e0:	mov	r2, #2
   250e4:	b	25134 <main@@Base+0x11e54>
   250e8:	movw	r4, #0
   250ec:	movw	r1, #29806	; 0x746e
   250f0:	movt	r4, #25959	; 0x6567
   250f4:	movt	r1, #26990	; 0x696e
   250f8:	subs	r5, r9, r4
   250fc:	sbcs	r5, r7, r1
   25100:	bcs	25140 <main@@Base+0x11e60>
   25104:	movw	r1, #29746	; 0x7432
   25108:	movt	r1, #26990	; 0x696e
   2510c:	teq	r7, r1
   25110:	bne	251c8 <main@@Base+0x11ee8>
   25114:	str	r3, [sp]
   25118:	mov	r1, sl
   2511c:	mov	r3, #4
   25120:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25124:	cmp	r0, sl
   25128:	beq	251c8 <main@@Base+0x11ee8>
   2512c:	mov	r1, #0
   25130:	mov	r2, #42	; 0x2a
   25134:	str	r2, [r6]
   25138:	str	r1, [r6, #4]
   2513c:	b	251bc <main@@Base+0x11edc>
   25140:	eor	r1, r7, r1
   25144:	add	r7, r4, #12800	; 0x3200
   25148:	bic	r5, r9, #255	; 0xff
   2514c:	eor	r7, r5, r7
   25150:	orrs	r7, r7, r1
   25154:	bne	25180 <main@@Base+0x11ea0>
   25158:	str	r3, [sp]
   2515c:	mov	r1, sl
   25160:	mov	r3, #7
   25164:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25168:	cmp	r0, sl
   2516c:	beq	251c8 <main@@Base+0x11ee8>
   25170:	mvn	r2, #1
   25174:	mvn	r1, #0
   25178:	add	r2, r2, #1
   2517c:	b	251b0 <main@@Base+0x11ed0>
   25180:	bfc	r9, #0, #16
   25184:	eor	r7, r9, r4
   25188:	orrs	r1, r7, r1
   2518c:	bne	251c8 <main@@Base+0x11ee8>
   25190:	str	r3, [sp]
   25194:	mov	r1, sl
   25198:	mov	r3, #6
   2519c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   251a0:	cmp	r0, sl
   251a4:	beq	251c8 <main@@Base+0x11ee8>
   251a8:	mvn	r1, #0
   251ac:	mvn	r2, #1
   251b0:	str	r2, [r6]
   251b4:	str	r1, [r6, #4]
   251b8:	mov	r1, #1
   251bc:	ldr	r2, [sp, #8]
   251c0:	mov	sl, r0
   251c4:	str	r1, [r2]
   251c8:	mov	r0, sl
   251cc:	sub	sp, fp, #28
   251d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   251d4:	push	{r4, r5, r6, r7, fp, lr}
   251d8:	add	fp, sp, #16
   251dc:	sub	sp, sp, #8
   251e0:	mov	r5, r1
   251e4:	sub	r1, r2, r1
   251e8:	mov	r4, r3
   251ec:	cmp	r1, #8
   251f0:	movcs	r1, #8
   251f4:	and	r1, r1, #15
   251f8:	sub	r3, r1, #1
   251fc:	cmp	r3, #7
   25200:	bhi	25314 <main@@Base+0x12034>
   25204:	add	r7, pc, #4
   25208:	mov	r1, #0
   2520c:	ldr	pc, [r7, r3, lsl #2]
   25210:	andeq	r5, r2, r8, asr #4
   25214:	andeq	r5, r2, r0, asr #4
   25218:	andeq	r5, r2, r8, lsr r2
   2521c:	andeq	r5, r2, r0, lsr r2
   25220:	andeq	r5, r2, r0, lsr r2
   25224:	andeq	r5, r2, r0, lsr r2
   25228:	andeq	r5, r2, r0, lsr r2
   2522c:	andeq	r5, r2, r0, lsr r2
   25230:	ldrb	r3, [r5, #3]
   25234:	orr	r1, r3, r1
   25238:	ldrb	r3, [r5, #2]
   2523c:	orr	r1, r1, r3, lsl #8
   25240:	ldrb	r3, [r5, #1]
   25244:	orr	r1, r1, r3, lsl #16
   25248:	ldrb	r6, [r5]
   2524c:	ldr	r3, [fp, #12]
   25250:	ldr	r7, [fp, #8]
   25254:	orr	r1, r1, r6, lsl #24
   25258:	movw	r6, #26417	; 0x6731
   2525c:	movt	r6, #28261	; 0x6e65
   25260:	cmp	r1, r6
   25264:	bhi	25294 <main@@Base+0x11fb4>
   25268:	teq	r1, r6
   2526c:	bne	25314 <main@@Base+0x12034>
   25270:	str	r3, [sp]
   25274:	mov	r1, r5
   25278:	mov	r3, #4
   2527c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25280:	cmp	r0, r5
   25284:	beq	25314 <main@@Base+0x12034>
   25288:	mvn	r1, #0
   2528c:	mvn	r2, #11
   25290:	b	25300 <main@@Base+0x12020>
   25294:	movw	r6, #26418	; 0x6732
   25298:	movt	r6, #28261	; 0x6e65
   2529c:	teq	r1, r6
   252a0:	beq	252dc <main@@Base+0x11ffc>
   252a4:	movw	r6, #26419	; 0x6733
   252a8:	movt	r6, #28261	; 0x6e65
   252ac:	teq	r1, r6
   252b0:	bne	25314 <main@@Base+0x12034>
   252b4:	str	r3, [sp]
   252b8:	mov	r1, r5
   252bc:	mov	r3, #4
   252c0:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   252c4:	cmp	r0, r5
   252c8:	beq	25314 <main@@Base+0x12034>
   252cc:	mvn	r2, #11
   252d0:	mvn	r1, #0
   252d4:	add	r2, r2, #2
   252d8:	b	25300 <main@@Base+0x12020>
   252dc:	str	r3, [sp]
   252e0:	mov	r1, r5
   252e4:	mov	r3, #4
   252e8:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   252ec:	cmp	r0, r5
   252f0:	beq	25314 <main@@Base+0x12034>
   252f4:	mvn	r2, #11
   252f8:	mvn	r1, #0
   252fc:	add	r2, r2, #1
   25300:	str	r2, [r7]
   25304:	str	r1, [r7, #4]
   25308:	mov	r1, #1
   2530c:	mov	r5, r0
   25310:	str	r1, [r4]
   25314:	mov	r0, r5
   25318:	sub	sp, fp, #16
   2531c:	pop	{r4, r5, r6, r7, fp, pc}
   25320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25324:	add	fp, sp, #28
   25328:	sub	sp, sp, #12
   2532c:	mov	sl, r1
   25330:	sub	r1, r2, r1
   25334:	cmp	r1, #8
   25338:	movcs	r1, #8
   2533c:	and	r1, r1, #15
   25340:	sub	r6, r1, #1
   25344:	cmp	r6, #7
   25348:	bhi	255c4 <main@@Base+0x122e4>
   2534c:	str	r3, [sp, #8]
   25350:	add	r9, pc, #32
   25354:	mov	r1, #0
   25358:	mov	ip, #0
   2535c:	mov	lr, #0
   25360:	mov	r4, #0
   25364:	mov	r7, #0
   25368:	mov	r3, #0
   2536c:	mov	r5, #0
   25370:	mov	r8, #0
   25374:	ldr	pc, [r9, r6, lsl #2]
   25378:	ldrdeq	r5, [r2], -ip
   2537c:	ldrdeq	r5, [r2], -r4
   25380:	andeq	r5, r2, ip, asr #7
   25384:	andeq	r5, r2, r4, asr #7
   25388:			; <UNDEFINED> instruction: 0x000253b8
   2538c:	andeq	r5, r2, ip, lsr #7
   25390:	muleq	r2, ip, r3
   25394:	muleq	r2, r8, r3
   25398:	ldrb	ip, [sl, #7]
   2539c:	ldrb	r3, [sl, #6]
   253a0:	mov	lr, r1
   253a4:	orr	r3, ip, r3, lsl #8
   253a8:	mov	r1, r3
   253ac:	ldrb	r3, [sl, #5]
   253b0:	mov	r4, lr
   253b4:	orr	r1, r1, r3, lsl #16
   253b8:	ldrb	r3, [sl, #4]
   253bc:	mov	r7, r4
   253c0:	orr	r1, r1, r3, lsl #24
   253c4:	ldrb	r3, [sl, #3]
   253c8:	orr	r3, r3, r7
   253cc:	ldrb	r7, [sl, #2]
   253d0:	orr	r5, r3, r7, lsl #8
   253d4:	ldrb	r3, [sl, #1]
   253d8:	orr	r8, r5, r3, lsl #16
   253dc:	ldrb	r3, [sl]
   253e0:	ldr	lr, [fp, #12]
   253e4:	ldr	r9, [fp, #8]
   253e8:	orr	r6, r8, r3, lsl #24
   253ec:	movw	r3, #20036	; 0x4e44
   253f0:	movt	r3, #20047	; 0x4e4f
   253f4:	cmp	r6, r3
   253f8:	bhi	25458 <main@@Base+0x12178>
   253fc:	movw	r7, #28160	; 0x6e00
   25400:	movw	r4, #28523	; 0x6f6b
   25404:	and	r3, r1, #-16777216	; 0xff000000
   25408:	movt	r7, #18017	; 0x4661
   2540c:	movt	r4, #17007	; 0x426f
   25410:	subs	r5, r1, r7
   25414:	sbcs	r5, r6, r4
   25418:	bcs	254a4 <main@@Base+0x121c4>
   2541c:	movw	r1, #27756	; 0x6c6c
   25420:	eor	r3, r3, #1694498816	; 0x65000000
   25424:	movt	r1, #16997	; 0x4265
   25428:	eor	r1, r6, r1
   2542c:	orrs	r1, r3, r1
   25430:	bne	255c4 <main@@Base+0x122e4>
   25434:	mov	r1, sl
   25438:	mov	r3, #5
   2543c:	str	lr, [sp]
   25440:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25444:	cmp	r0, sl
   25448:	beq	255c4 <main@@Base+0x122e4>
   2544c:	mov	r1, #0
   25450:	mov	r2, #9
   25454:	b	255b0 <main@@Base+0x122d0>
   25458:	movw	r7, #26725	; 0x6865
   2545c:	mvn	r3, #-1912602624	; 0x8e000000
   25460:	movt	r7, #20340	; 0x4f74
   25464:	subs	r3, r3, r1
   25468:	sbcs	r3, r7, r6
   2546c:	bcc	254e0 <main@@Base+0x12200>
   25470:	movw	r1, #20037	; 0x4e45
   25474:	movt	r1, #20047	; 0x4e4f
   25478:	teq	r6, r1
   2547c:	bne	255c4 <main@@Base+0x122e4>
   25480:	mov	r1, sl
   25484:	mov	r3, #4
   25488:	str	lr, [sp]
   2548c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25490:	cmp	r0, sl
   25494:	beq	255c4 <main@@Base+0x122e4>
   25498:	mov	r1, #0
   2549c:	str	r1, [r9]
   254a0:	b	255b4 <main@@Base+0x122d4>
   254a4:	movw	r5, #19553	; 0x4c61
   254a8:	eor	r3, r3, #1845493760	; 0x6e000000
   254ac:	movt	r5, #19829	; 0x4d75
   254b0:	eor	r5, r6, r5
   254b4:	orrs	r3, r3, r5
   254b8:	bne	25534 <main@@Base+0x12254>
   254bc:	mov	r1, sl
   254c0:	mov	r3, #5
   254c4:	str	lr, [sp]
   254c8:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   254cc:	cmp	r0, sl
   254d0:	beq	255c4 <main@@Base+0x122e4>
   254d4:	mov	r1, #0
   254d8:	mov	r2, #2
   254dc:	b	255b0 <main@@Base+0x122d0>
   254e0:	movw	r4, #25964	; 0x656c
   254e4:	movw	ip, #28789	; 0x7075
   254e8:	movt	r4, #28282	; 0x6e7a
   254ec:	movt	ip, #21089	; 0x5261
   254f0:	subs	r3, r1, r4
   254f4:	sbcs	r3, r6, ip
   254f8:	bcs	2556c <main@@Base+0x1228c>
   254fc:	and	r1, r1, #-16777216	; 0xff000000
   25500:	eor	r3, r6, r7
   25504:	eor	r1, r1, #1912602624	; 0x72000000
   25508:	orrs	r1, r1, r3
   2550c:	bne	255c4 <main@@Base+0x122e4>
   25510:	mov	r1, sl
   25514:	mov	r3, #5
   25518:	str	lr, [sp]
   2551c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25520:	cmp	r0, sl
   25524:	beq	255c4 <main@@Base+0x122e4>
   25528:	mov	r1, #0
   2552c:	mov	r2, #11
   25530:	b	255b0 <main@@Base+0x122d0>
   25534:	bic	r1, r1, #255	; 0xff
   25538:	eor	r3, r6, r4
   2553c:	eor	r1, r1, r7
   25540:	orrs	r1, r1, r3
   25544:	bne	255c4 <main@@Base+0x122e4>
   25548:	mov	r1, sl
   2554c:	mov	r3, #7
   25550:	str	lr, [sp]
   25554:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   25558:	cmp	r0, sl
   2555c:	beq	255c4 <main@@Base+0x122e4>
   25560:	mov	r1, #0
   25564:	mov	r2, #10
   25568:	b	255b0 <main@@Base+0x122d0>
   2556c:	lsr	r5, r1, #16
   25570:	movw	r7, #25956	; 0x6564
   25574:	movw	r3, #21870	; 0x556e
   25578:	orr	r5, r5, r6, lsl #16
   2557c:	movt	r7, #30067	; 0x7573
   25580:	eor	r3, r3, r6, lsr #16
   25584:	eor	r5, r5, r7
   25588:	orrs	r3, r5, r3
   2558c:	bne	255d0 <main@@Base+0x122f0>
   25590:	mov	r1, sl
   25594:	mov	r3, #6
   25598:	str	lr, [sp]
   2559c:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   255a0:	cmp	r0, sl
   255a4:	beq	255c4 <main@@Base+0x122e4>
   255a8:	mov	r1, #0
   255ac:	mov	r2, #255	; 0xff
   255b0:	str	r2, [r9]
   255b4:	str	r1, [r9, #4]
   255b8:	ldr	r2, [sp, #8]
   255bc:	str	r1, [r2]
   255c0:	mov	sl, r0
   255c4:	mov	r0, sl
   255c8:	sub	sp, fp, #28
   255cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   255d0:	eor	r1, r1, r4
   255d4:	eor	r3, r6, ip
   255d8:	orrs	r1, r1, r3
   255dc:	bne	255c4 <main@@Base+0x122e4>
   255e0:	mov	r1, sl
   255e4:	mov	r3, #8
   255e8:	str	lr, [sp]
   255ec:	mov	r4, #8
   255f0:	bl	308ac <flatcc_json_parser_match_constant@@Base>
   255f4:	cmp	r0, sl
   255f8:	beq	255c4 <main@@Base+0x122e4>
   255fc:	mov	r5, #0
   25600:	strd	r4, [r9]
   25604:	ldr	r1, [sp, #8]
   25608:	str	r5, [r1]
   2560c:	b	255c0 <main@@Base+0x122e0>
   25610:	mov	r1, #0
   25614:	cmp	r0, #5
   25618:	movwcc	r1, #1
   2561c:	mov	r0, r1
   25620:	bx	lr
   25624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25628:	add	fp, sp, #28
   2562c:	sub	sp, sp, #68	; 0x44
   25630:	mov	sl, r0
   25634:	mov	r0, #0
   25638:	mov	r4, r1
   2563c:	mov	r1, #3
   25640:	mov	r5, r3
   25644:	mov	r9, r2
   25648:	str	r0, [r3]
   2564c:	ldr	r0, [sl]
   25650:	bl	2d064 <flatcc_builder_start_table@@Base>
   25654:	cmp	r0, #0
   25658:	bne	28f24 <main@@Base+0x15c44>
   2565c:	cmp	r4, r9
   25660:	beq	256a0 <main@@Base+0x123c0>
   25664:	ldrb	r0, [r4]
   25668:	cmp	r0, #123	; 0x7b
   2566c:	bne	256a0 <main@@Base+0x123c0>
   25670:	add	r1, r4, #1
   25674:	sub	r0, r9, r1
   25678:	cmp	r0, #2
   2567c:	blt	256dc <main@@Base+0x123fc>
   25680:	ldrb	r0, [r1]
   25684:	cmp	r0, #32
   25688:	bls	256cc <main@@Base+0x123ec>
   2568c:	mov	r4, r1
   25690:	cmp	r4, r9
   25694:	mov	r2, r9
   25698:	bne	256f8 <main@@Base+0x12418>
   2569c:	b	2573c <main@@Base+0x1245c>
   256a0:	mov	r0, sl
   256a4:	mov	r1, r4
   256a8:	mov	r2, r9
   256ac:	mov	r3, #21
   256b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   256b4:	mov	r4, r0
   256b8:	add	r0, sl, #24
   256bc:	ldr	r0, [r0]
   256c0:	cmp	r0, #0
   256c4:	bne	28f24 <main@@Base+0x15c44>
   256c8:	b	28ec8 <main@@Base+0x15be8>
   256cc:	bne	256dc <main@@Base+0x123fc>
   256d0:	ldrb	r0, [r4, #2]!
   256d4:	cmp	r0, #32
   256d8:	bhi	256ec <main@@Base+0x1240c>
   256dc:	mov	r0, sl
   256e0:	mov	r2, r9
   256e4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   256e8:	mov	r4, r0
   256ec:	cmp	r4, r9
   256f0:	mov	r2, r9
   256f4:	beq	2573c <main@@Base+0x1245c>
   256f8:	ldrb	r0, [r4]
   256fc:	cmp	r0, #125	; 0x7d
   25700:	bne	25738 <main@@Base+0x12458>
   25704:	add	r1, r4, #1
   25708:	sub	r0, r9, r1
   2570c:	cmp	r0, #2
   25710:	blt	28ef8 <main@@Base+0x15c18>
   25714:	ldrb	r0, [r1]
   25718:	cmp	r0, #32
   2571c:	bls	28ee8 <main@@Base+0x15c08>
   25720:	mov	r4, r1
   25724:	add	r0, sl, #24
   25728:	ldr	r0, [r0]
   2572c:	cmp	r0, #0
   25730:	bne	28f24 <main@@Base+0x15c44>
   25734:	b	28ec8 <main@@Base+0x15be8>
   25738:	mov	r2, r4
   2573c:	add	r0, sl, #24
   25740:	movw	r1, #25186	; 0x6262
   25744:	str	sl, [sp, #24]
   25748:	str	r5, [sp, #32]
   2574c:	str	r0, [sp, #20]
   25750:	add	r0, sl, #12
   25754:	movt	r1, #25186	; 0x6262
   25758:	str	r0, [sp, #28]
   2575c:	movw	r0, #33152	; 0x8180
   25760:	movt	r0, #4
   25764:	add	r0, r0, #96	; 0x60
   25768:	str	r0, [sp, #8]
   2576c:	movw	r0, #257	; 0x101
   25770:	movt	r0, #257	; 0x101
   25774:	add	r0, r1, r0
   25778:	str	r0, [sp, #16]
   2577c:	movw	r0, #514	; 0x202
   25780:	movt	r0, #514	; 0x202
   25784:	add	r0, r1, r0
   25788:	str	r0, [sp, #12]
   2578c:	cmp	r2, r9
   25790:	mov	r8, r9
   25794:	beq	257e8 <main@@Base+0x12508>
   25798:	ldrb	r0, [r2]
   2579c:	cmp	r0, #46	; 0x2e
   257a0:	beq	257bc <main@@Base+0x124dc>
   257a4:	cmp	r0, #34	; 0x22
   257a8:	bne	257d8 <main@@Base+0x124f8>
   257ac:	ldr	r0, [sp, #28]
   257b0:	mov	r1, #0
   257b4:	add	r8, r2, #1
   257b8:	b	257e4 <main@@Base+0x12504>
   257bc:	mov	r1, r2
   257c0:	mov	r0, sl
   257c4:	mov	r2, r9
   257c8:	mov	r3, #5
   257cc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   257d0:	mov	r8, r0
   257d4:	b	257e8 <main@@Base+0x12508>
   257d8:	ldr	r0, [sp, #28]
   257dc:	mov	r1, #1
   257e0:	mov	r8, r2
   257e4:	str	r1, [r0]
   257e8:	sub	r0, r9, r8
   257ec:	mov	r1, #8
   257f0:	cmp	r0, #8
   257f4:	movcs	r0, r1
   257f8:	and	r0, r0, #15
   257fc:	sub	r3, r0, #1
   25800:	cmp	r3, #7
   25804:	bhi	25aa8 <main@@Base+0x127c8>
   25808:	add	r5, pc, #32
   2580c:	mov	r0, #0
   25810:	mov	ip, #0
   25814:	mov	lr, #0
   25818:	mov	r7, #0
   2581c:	mov	r2, #0
   25820:	mov	r6, #0
   25824:	mov	r4, #0
   25828:	mov	r1, #0
   2582c:	ldr	pc, [r5, r3, lsl #2]
   25830:	muleq	r2, r4, r8
   25834:	andeq	r5, r2, ip, lsl #17
   25838:	andeq	r5, r2, r4, lsl #17
   2583c:	andeq	r5, r2, ip, ror r8
   25840:	andeq	r5, r2, r0, ror r8
   25844:	andeq	r5, r2, r4, ror #16
   25848:	andeq	r5, r2, r4, asr r8
   2584c:	andeq	r5, r2, r0, asr r8
   25850:	ldrb	ip, [r8, #7]
   25854:	ldrb	r1, [r8, #6]
   25858:	mov	lr, r0
   2585c:	orr	r1, ip, r1, lsl #8
   25860:	mov	r0, r1
   25864:	ldrb	r1, [r8, #5]
   25868:	mov	r7, lr
   2586c:	orr	r0, r0, r1, lsl #16
   25870:	ldrb	r1, [r8, #4]
   25874:	mov	r2, r7
   25878:	orr	r0, r0, r1, lsl #24
   2587c:	ldrb	r1, [r8, #3]
   25880:	orr	r6, r1, r2
   25884:	ldrb	r1, [r8, #2]
   25888:	orr	r4, r6, r1, lsl #8
   2588c:	ldrb	r1, [r8, #1]
   25890:	orr	r1, r4, r1, lsl #16
   25894:	movw	r2, #28526	; 0x6f6e
   25898:	movt	r2, #27251	; 0x6a73
   2589c:	eor	r0, r0, r2
   258a0:	ldrb	r2, [r8]
   258a4:	orr	r1, r1, r2, lsl #24
   258a8:	movw	r2, #29556	; 0x7374
   258ac:	movt	r2, #29797	; 0x7465
   258b0:	eor	r1, r1, r2
   258b4:	orrs	r0, r0, r1
   258b8:	bne	25aa8 <main@@Base+0x127c8>
   258bc:	add	r1, r8, #8
   258c0:	mov	r2, #8
   258c4:	sub	r0, r9, r1
   258c8:	cmp	r0, #8
   258cc:	movcs	r0, r2
   258d0:	and	r0, r0, #15
   258d4:	sub	r7, r0, #1
   258d8:	cmp	r7, #7
   258dc:	bhi	25ab4 <main@@Base+0x127d4>
   258e0:	add	r0, pc, #32
   258e4:	mov	sl, #0
   258e8:	mov	ip, #0
   258ec:	mov	lr, #0
   258f0:	mov	r6, #0
   258f4:	mov	r3, #0
   258f8:	mov	r5, #0
   258fc:	mov	r2, #0
   25900:	mov	r4, #0
   25904:	ldr	pc, [r0, r7, lsl #2]
   25908:	andeq	r5, r2, ip, ror #18
   2590c:	andeq	r5, r2, r4, ror #18
   25910:	andeq	r5, r2, ip, asr r9
   25914:	andeq	r5, r2, r4, asr r9
   25918:	andeq	r5, r2, r8, asr #18
   2591c:	andeq	r5, r2, ip, lsr r9
   25920:	andeq	r5, r2, ip, lsr #18
   25924:	andeq	r5, r2, r8, lsr #18
   25928:	ldrb	ip, [r8, #15]
   2592c:	ldrb	r0, [r8, #14]
   25930:	mov	lr, sl
   25934:	orr	r0, ip, r0, lsl #8
   25938:	mov	sl, r0
   2593c:	ldrb	r0, [r8, #13]
   25940:	mov	r6, lr
   25944:	orr	sl, sl, r0, lsl #16
   25948:	ldrb	r0, [r8, #12]
   2594c:	mov	r3, r6
   25950:	orr	sl, sl, r0, lsl #24
   25954:	ldrb	r0, [r8, #11]
   25958:	orr	r5, r0, r3
   2595c:	ldrb	r0, [r8, #10]
   25960:	orr	r2, r5, r0, lsl #8
   25964:	ldrb	r0, [r8, #9]
   25968:	orr	r4, r2, r0, lsl #16
   2596c:	ldrb	r2, [r1]
   25970:	movw	r0, #28769	; 0x7061
   25974:	movw	r3, #25958	; 0x6566
   25978:	movt	r0, #27000	; 0x6978
   2597c:	movt	r3, #28786	; 0x7072
   25980:	eor	r0, sl, r0
   25984:	orr	r2, r4, r2, lsl #24
   25988:	eor	r2, r2, r3
   2598c:	orrs	r0, r0, r2
   25990:	bne	25ab4 <main@@Base+0x127d4>
   25994:	add	ip, r8, #16
   25998:	mov	r0, #8
   2599c:	sub	sl, r9, ip
   259a0:	cmp	sl, #8
   259a4:	movcc	r0, sl
   259a8:	and	r0, r0, #15
   259ac:	sub	r2, r0, #1
   259b0:	cmp	r2, #7
   259b4:	bhi	25e68 <main@@Base+0x12b88>
   259b8:	add	r7, pc, #24
   259bc:	mov	r0, #0
   259c0:	mov	r1, #0
   259c4:	mov	r3, #0
   259c8:	mov	r6, #0
   259cc:	mov	r4, #0
   259d0:	mov	r5, #0
   259d4:	ldr	pc, [r7, r2, lsl #2]
   259d8:	andeq	r5, r2, r8, lsr #20
   259dc:	andeq	r5, r2, r0, lsr #20
   259e0:	andeq	r5, r2, r8, lsl sl
   259e4:	andeq	r5, r2, r0, lsl sl
   259e8:	andeq	r5, r2, r0, lsl #20
   259ec:	strdeq	r5, [r2], -r8
   259f0:	strdeq	r5, [r2], -r8
   259f4:	strdeq	r5, [r2], -r8
   259f8:	ldrb	r1, [r8, #21]
   259fc:	lsl	r1, r1, #16
   25a00:	ldrb	r2, [r8, #20]
   25a04:	mov	r3, r0
   25a08:	orr	r1, r1, r2, lsl #24
   25a0c:	mov	r0, r1
   25a10:	ldrb	r1, [r8, #19]
   25a14:	orr	r6, r1, r3
   25a18:	ldrb	r1, [r8, #18]
   25a1c:	orr	r4, r6, r1, lsl #8
   25a20:	ldrb	r1, [r8, #17]
   25a24:	orr	r5, r4, r1, lsl #16
   25a28:	mov	r6, r0
   25a2c:	movw	r1, #0
   25a30:	movw	r3, #26990	; 0x696e
   25a34:	bfc	r6, #0, #16
   25a38:	movt	r1, #26418	; 0x6732
   25a3c:	movt	r3, #29299	; 0x7273
   25a40:	eor	r2, r6, r1
   25a44:	ldrb	r1, [ip]
   25a48:	orr	r1, r5, r1, lsl #24
   25a4c:	eor	r5, r1, r3
   25a50:	orrs	r2, r2, r5
   25a54:	bne	25ac0 <main@@Base+0x127e0>
   25a58:	cmp	sl, #7
   25a5c:	blt	25e68 <main@@Base+0x12b88>
   25a60:	ldr	r2, [sp, #28]
   25a64:	mov	r1, r8
   25a68:	ldrb	r0, [r1, #22]!
   25a6c:	ldr	r2, [r2]
   25a70:	cmp	r2, #0
   25a74:	beq	25b28 <main@@Base+0x12848>
   25a78:	cmp	r0, #33	; 0x21
   25a7c:	bcc	25a88 <main@@Base+0x127a8>
   25a80:	cmp	r0, #58	; 0x3a
   25a84:	bne	25e68 <main@@Base+0x12b88>
   25a88:	ldr	r0, [sp, #28]
   25a8c:	mov	r2, #0
   25a90:	str	r2, [r0]
   25a94:	ldr	r5, [sp, #24]
   25a98:	sub	r0, r9, r1
   25a9c:	cmp	r0, #2
   25aa0:	bge	25b44 <main@@Base+0x12864>
   25aa4:	b	25bb0 <main@@Base+0x128d0>
   25aa8:	mov	r0, sl
   25aac:	mov	r1, r8
   25ab0:	b	25e74 <main@@Base+0x12b94>
   25ab4:	ldr	sl, [sp, #24]
   25ab8:	mov	r0, sl
   25abc:	b	25e74 <main@@Base+0x12b94>
   25ac0:	cmp	sl, #6
   25ac4:	blt	25c98 <main@@Base+0x129b8>
   25ac8:	movw	r2, #26990	; 0x696e
   25acc:	and	r0, r0, #-16777216	; 0xff000000
   25ad0:	movt	r2, #29299	; 0x7273
   25ad4:	eor	r0, r0, #1728053248	; 0x67000000
   25ad8:	eor	r1, r1, r2
   25adc:	orrs	r0, r0, r1
   25ae0:	bne	25c98 <main@@Base+0x129b8>
   25ae4:	ldr	r2, [sp, #28]
   25ae8:	mov	r1, r8
   25aec:	ldrb	r0, [r1, #21]!
   25af0:	ldr	r2, [r2]
   25af4:	cmp	r2, #0
   25af8:	beq	25b64 <main@@Base+0x12884>
   25afc:	cmp	r0, #33	; 0x21
   25b00:	bcc	25b0c <main@@Base+0x1282c>
   25b04:	cmp	r0, #58	; 0x3a
   25b08:	bne	25c98 <main@@Base+0x129b8>
   25b0c:	ldr	r0, [sp, #28]
   25b10:	mov	r2, #0
   25b14:	str	r2, [r0]
   25b18:	sub	r0, r9, r1
   25b1c:	cmp	r0, #2
   25b20:	bge	25b7c <main@@Base+0x1289c>
   25b24:	b	25c3c <main@@Base+0x1295c>
   25b28:	cmp	r0, #34	; 0x22
   25b2c:	bne	25e68 <main@@Base+0x12b88>
   25b30:	add	r1, r8, #23
   25b34:	ldr	r5, [sp, #24]
   25b38:	sub	r0, r9, r1
   25b3c:	cmp	r0, #2
   25b40:	blt	25bb0 <main@@Base+0x128d0>
   25b44:	ldrb	r0, [r1]
   25b48:	cmp	r0, #32
   25b4c:	bls	25b9c <main@@Base+0x128bc>
   25b50:	mov	r4, r1
   25b54:	mov	r6, ip
   25b58:	cmp	r4, r9
   25b5c:	bne	25bd4 <main@@Base+0x128f4>
   25b60:	b	25c10 <main@@Base+0x12930>
   25b64:	cmp	r0, #34	; 0x22
   25b68:	bne	25c98 <main@@Base+0x129b8>
   25b6c:	add	r1, r8, #22
   25b70:	sub	r0, r9, r1
   25b74:	cmp	r0, #2
   25b78:	blt	25c3c <main@@Base+0x1295c>
   25b7c:	ldrb	r0, [r1]
   25b80:	cmp	r0, #32
   25b84:	bls	25c28 <main@@Base+0x12948>
   25b88:	mov	r4, r1
   25b8c:	mov	r7, ip
   25b90:	cmp	r4, r9
   25b94:	bne	25c60 <main@@Base+0x12980>
   25b98:	b	25d00 <main@@Base+0x12a20>
   25b9c:	bne	25bb0 <main@@Base+0x128d0>
   25ba0:	mov	r4, r1
   25ba4:	ldrb	r0, [r4, #1]!
   25ba8:	cmp	r0, #32
   25bac:	bhi	25bc8 <main@@Base+0x128e8>
   25bb0:	mov	r0, r5
   25bb4:	mov	r2, r9
   25bb8:	mov	r4, ip
   25bbc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25bc0:	mov	ip, r4
   25bc4:	mov	r4, r0
   25bc8:	mov	r6, ip
   25bcc:	cmp	r4, r9
   25bd0:	beq	25c10 <main@@Base+0x12930>
   25bd4:	ldrb	r0, [r4]
   25bd8:	cmp	r0, #58	; 0x3a
   25bdc:	bne	25c10 <main@@Base+0x12930>
   25be0:	add	r1, r4, #1
   25be4:	sub	r0, r9, r1
   25be8:	cmp	r0, #2
   25bec:	blt	25dec <main@@Base+0x12b0c>
   25bf0:	ldrb	r0, [r1]
   25bf4:	cmp	r0, #32
   25bf8:	bls	25ddc <main@@Base+0x12afc>
   25bfc:	mov	r4, r1
   25c00:	mov	ip, r6
   25c04:	cmp	r6, r4
   25c08:	bne	25e08 <main@@Base+0x12b28>
   25c0c:	b	25e68 <main@@Base+0x12b88>
   25c10:	mov	r0, r5
   25c14:	mov	r1, r4
   25c18:	mov	r2, r9
   25c1c:	mov	r3, #4
   25c20:	bl	30170 <flatcc_json_parser_set_error@@Base>
   25c24:	b	25df8 <main@@Base+0x12b18>
   25c28:	bne	25c3c <main@@Base+0x1295c>
   25c2c:	mov	r4, r1
   25c30:	ldrb	r0, [r4, #1]!
   25c34:	cmp	r0, #32
   25c38:	bhi	25c54 <main@@Base+0x12974>
   25c3c:	ldr	r0, [sp, #24]
   25c40:	mov	r2, r9
   25c44:	mov	r4, ip
   25c48:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25c4c:	mov	ip, r4
   25c50:	mov	r4, r0
   25c54:	mov	r7, ip
   25c58:	cmp	r4, r9
   25c5c:	beq	25d00 <main@@Base+0x12a20>
   25c60:	ldrb	r0, [r4]
   25c64:	cmp	r0, #58	; 0x3a
   25c68:	bne	25d00 <main@@Base+0x12a20>
   25c6c:	add	r1, r4, #1
   25c70:	sub	r0, r9, r1
   25c74:	cmp	r0, #2
   25c78:	blt	25f8c <main@@Base+0x12cac>
   25c7c:	ldrb	r0, [r1]
   25c80:	cmp	r0, #32
   25c84:	bls	25f7c <main@@Base+0x12c9c>
   25c88:	mov	r4, r1
   25c8c:	mov	ip, r7
   25c90:	cmp	r7, r4
   25c94:	bne	25fa8 <main@@Base+0x12cc8>
   25c98:	movw	r0, #0
   25c9c:	movt	r0, #26418	; 0x6732
   25ca0:	add	r0, r0, #65536	; 0x10000
   25ca4:	eor	r0, r6, r0
   25ca8:	orrs	r0, r0, r5
   25cac:	bne	25e68 <main@@Base+0x12b88>
   25cb0:	cmp	sl, #7
   25cb4:	ldr	sl, [sp, #24]
   25cb8:	blt	25e6c <main@@Base+0x12b8c>
   25cbc:	ldr	r2, [sp, #28]
   25cc0:	mov	r1, r8
   25cc4:	ldrb	r0, [r1, #22]!
   25cc8:	ldr	r2, [r2]
   25ccc:	cmp	r2, #0
   25cd0:	beq	25d18 <main@@Base+0x12a38>
   25cd4:	cmp	r0, #33	; 0x21
   25cd8:	bcc	25ce4 <main@@Base+0x12a04>
   25cdc:	cmp	r0, #58	; 0x3a
   25ce0:	bne	25e6c <main@@Base+0x12b8c>
   25ce4:	ldr	r0, [sp, #28]
   25ce8:	mov	r2, #0
   25cec:	str	r2, [r0]
   25cf0:	sub	r0, r9, r1
   25cf4:	cmp	r0, #2
   25cf8:	bge	25d30 <main@@Base+0x12a50>
   25cfc:	b	25d64 <main@@Base+0x12a84>
   25d00:	ldr	r0, [sp, #24]
   25d04:	mov	r1, r4
   25d08:	mov	r2, r9
   25d0c:	mov	r3, #4
   25d10:	bl	30170 <flatcc_json_parser_set_error@@Base>
   25d14:	b	25f98 <main@@Base+0x12cb8>
   25d18:	cmp	r0, #34	; 0x22
   25d1c:	bne	25e6c <main@@Base+0x12b8c>
   25d20:	add	r1, r8, #23
   25d24:	sub	r0, r9, r1
   25d28:	cmp	r0, #2
   25d2c:	blt	25d64 <main@@Base+0x12a84>
   25d30:	ldrb	r0, [r1]
   25d34:	cmp	r0, #32
   25d38:	bls	25d50 <main@@Base+0x12a70>
   25d3c:	mov	r4, r1
   25d40:	mov	r5, ip
   25d44:	cmp	r4, r9
   25d48:	bne	25d88 <main@@Base+0x12aa8>
   25d4c:	b	25dc4 <main@@Base+0x12ae4>
   25d50:	bne	25d64 <main@@Base+0x12a84>
   25d54:	mov	r4, r1
   25d58:	ldrb	r0, [r4, #1]!
   25d5c:	cmp	r0, #32
   25d60:	bhi	25d7c <main@@Base+0x12a9c>
   25d64:	mov	r0, sl
   25d68:	mov	r2, r9
   25d6c:	mov	r4, ip
   25d70:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25d74:	mov	ip, r4
   25d78:	mov	r4, r0
   25d7c:	mov	r5, ip
   25d80:	cmp	r4, r9
   25d84:	beq	25dc4 <main@@Base+0x12ae4>
   25d88:	ldrb	r0, [r4]
   25d8c:	cmp	r0, #58	; 0x3a
   25d90:	bne	25dc4 <main@@Base+0x12ae4>
   25d94:	add	r1, r4, #1
   25d98:	sub	r0, r9, r1
   25d9c:	cmp	r0, #2
   25da0:	blt	26150 <main@@Base+0x12e70>
   25da4:	ldrb	r0, [r1]
   25da8:	cmp	r0, #32
   25dac:	bls	26140 <main@@Base+0x12e60>
   25db0:	mov	r4, r1
   25db4:	mov	ip, r5
   25db8:	cmp	r5, r4
   25dbc:	bne	2616c <main@@Base+0x12e8c>
   25dc0:	b	25e6c <main@@Base+0x12b8c>
   25dc4:	mov	r0, sl
   25dc8:	mov	r1, r4
   25dcc:	mov	r2, r9
   25dd0:	mov	r3, #4
   25dd4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   25dd8:	b	2615c <main@@Base+0x12e7c>
   25ddc:	bne	25dec <main@@Base+0x12b0c>
   25de0:	ldrb	r0, [r4, #2]!
   25de4:	cmp	r0, #32
   25de8:	bhi	25dfc <main@@Base+0x12b1c>
   25dec:	mov	r0, r5
   25df0:	mov	r2, r9
   25df4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25df8:	mov	r4, r0
   25dfc:	mov	ip, r6
   25e00:	cmp	r6, r4
   25e04:	beq	25e68 <main@@Base+0x12b88>
   25e08:	ldr	sl, [sp, #24]
   25e0c:	mov	r1, #2
   25e10:	ldr	r0, [sl]
   25e14:	bl	2d064 <flatcc_builder_start_table@@Base>
   25e18:	cmp	r0, #0
   25e1c:	bne	28f0c <main@@Base+0x15c2c>
   25e20:	cmp	r4, r9
   25e24:	beq	25f4c <main@@Base+0x12c6c>
   25e28:	ldrb	r0, [r4]
   25e2c:	cmp	r0, #123	; 0x7b
   25e30:	bne	25f4c <main@@Base+0x12c6c>
   25e34:	ldr	r5, [sp, #32]
   25e38:	add	r1, r4, #1
   25e3c:	sub	r0, r9, r1
   25e40:	cmp	r0, #2
   25e44:	blt	26070 <main@@Base+0x12d90>
   25e48:	ldrb	r0, [r1]
   25e4c:	cmp	r0, #32
   25e50:	bls	26060 <main@@Base+0x12d80>
   25e54:	mov	r4, r1
   25e58:	cmp	r4, r9
   25e5c:	mov	r2, r9
   25e60:	bne	2608c <main@@Base+0x12dac>
   25e64:	b	26d3c <main@@Base+0x13a5c>
   25e68:	ldr	sl, [sp, #24]
   25e6c:	mov	r0, sl
   25e70:	mov	r1, ip
   25e74:	mov	r2, r9
   25e78:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   25e7c:	ldr	r5, [sp, #32]
   25e80:	mov	r4, r0
   25e84:	sub	r0, r9, r4
   25e88:	cmp	r0, #2
   25e8c:	blt	25f00 <main@@Base+0x12c20>
   25e90:	ldrb	r0, [r4]
   25e94:	cmp	r0, #32
   25e98:	bls	25eec <main@@Base+0x12c0c>
   25e9c:	mov	r2, r4
   25ea0:	cmp	r2, r9
   25ea4:	beq	28e08 <main@@Base+0x15b28>
   25ea8:	ldrb	r0, [r2]
   25eac:	cmp	r0, #44	; 0x2c
   25eb0:	bne	28e20 <main@@Base+0x15b40>
   25eb4:	add	r1, r2, #1
   25eb8:	sub	r0, r9, r1
   25ebc:	cmp	r0, #2
   25ec0:	blt	25f30 <main@@Base+0x12c50>
   25ec4:	ldrb	r0, [r1]
   25ec8:	cmp	r0, #32
   25ecc:	bls	25f20 <main@@Base+0x12c40>
   25ed0:	mov	r2, r1
   25ed4:	cmp	r2, r9
   25ed8:	beq	28e3c <main@@Base+0x15b5c>
   25edc:	ldrb	r0, [r2]
   25ee0:	cmp	r0, #125	; 0x7d
   25ee4:	bne	2578c <main@@Base+0x124ac>
   25ee8:	b	28e48 <main@@Base+0x15b68>
   25eec:	bne	25f00 <main@@Base+0x12c20>
   25ef0:	mov	r2, r4
   25ef4:	ldrb	r0, [r2, #1]!
   25ef8:	cmp	r0, #32
   25efc:	bhi	25f14 <main@@Base+0x12c34>
   25f00:	mov	r0, sl
   25f04:	mov	r1, r4
   25f08:	mov	r2, r9
   25f0c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25f10:	mov	r2, r0
   25f14:	cmp	r2, r9
   25f18:	bne	25ea8 <main@@Base+0x12bc8>
   25f1c:	b	28e08 <main@@Base+0x15b28>
   25f20:	bne	25f30 <main@@Base+0x12c50>
   25f24:	ldrb	r0, [r2, #2]!
   25f28:	cmp	r0, #32
   25f2c:	bhi	25f40 <main@@Base+0x12c60>
   25f30:	mov	r0, sl
   25f34:	mov	r2, r9
   25f38:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25f3c:	mov	r2, r0
   25f40:	cmp	r2, r9
   25f44:	bne	25edc <main@@Base+0x12bfc>
   25f48:	b	28e3c <main@@Base+0x15b5c>
   25f4c:	mov	r0, sl
   25f50:	mov	r1, r4
   25f54:	mov	r2, r9
   25f58:	mov	r3, #21
   25f5c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   25f60:	ldr	r5, [sp, #32]
   25f64:	mov	r4, r0
   25f68:	ldr	r0, [sp, #20]
   25f6c:	ldr	r0, [r0]
   25f70:	cmp	r0, #0
   25f74:	beq	27584 <main@@Base+0x142a4>
   25f78:	b	28f0c <main@@Base+0x15c2c>
   25f7c:	bne	25f8c <main@@Base+0x12cac>
   25f80:	ldrb	r0, [r4, #2]!
   25f84:	cmp	r0, #32
   25f88:	bhi	25f9c <main@@Base+0x12cbc>
   25f8c:	ldr	r0, [sp, #24]
   25f90:	mov	r2, r9
   25f94:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   25f98:	mov	r4, r0
   25f9c:	mov	ip, r7
   25fa0:	cmp	r7, r4
   25fa4:	beq	25c98 <main@@Base+0x129b8>
   25fa8:	ldr	sl, [sp, #24]
   25fac:	mov	r1, #9
   25fb0:	ldr	r0, [sl]
   25fb4:	bl	2d064 <flatcc_builder_start_table@@Base>
   25fb8:	cmp	r0, #0
   25fbc:	bne	28f0c <main@@Base+0x15c2c>
   25fc0:	cmp	r4, r9
   25fc4:	beq	26008 <main@@Base+0x12d28>
   25fc8:	ldrb	r0, [r4]
   25fcc:	cmp	r0, #123	; 0x7b
   25fd0:	bne	26008 <main@@Base+0x12d28>
   25fd4:	ldr	r5, [sp, #32]
   25fd8:	add	r1, r4, #1
   25fdc:	sub	r0, r9, r1
   25fe0:	cmp	r0, #2
   25fe4:	blt	260e0 <main@@Base+0x12e00>
   25fe8:	ldrb	r0, [r1]
   25fec:	cmp	r0, #32
   25ff0:	bls	260d0 <main@@Base+0x12df0>
   25ff4:	mov	r4, r1
   25ff8:	cmp	r4, r9
   25ffc:	mov	r2, r9
   26000:	bne	260fc <main@@Base+0x12e1c>
   26004:	b	27704 <main@@Base+0x14424>
   26008:	mov	r0, sl
   2600c:	mov	r1, r4
   26010:	mov	r2, r9
   26014:	mov	r3, #21
   26018:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2601c:	ldr	r5, [sp, #32]
   26020:	mov	r4, r0
   26024:	ldr	r0, [sp, #20]
   26028:	ldr	r0, [r0]
   2602c:	cmp	r0, #0
   26030:	bne	28f0c <main@@Base+0x15c2c>
   26034:	ldr	r0, [sl]
   26038:	bl	2da14 <flatcc_builder_end_table@@Base>
   2603c:	cmp	r0, #0
   26040:	beq	28f0c <main@@Base+0x15c2c>
   26044:	mov	r7, r0
   26048:	ldr	r0, [sl]
   2604c:	mov	r1, #0
   26050:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   26054:	cmp	r0, #0
   26058:	bne	27614 <main@@Base+0x14334>
   2605c:	b	28f24 <main@@Base+0x15c44>
   26060:	bne	26070 <main@@Base+0x12d90>
   26064:	ldrb	r0, [r4, #2]!
   26068:	cmp	r0, #32
   2606c:	bhi	26080 <main@@Base+0x12da0>
   26070:	mov	r0, sl
   26074:	mov	r2, r9
   26078:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2607c:	mov	r4, r0
   26080:	cmp	r4, r9
   26084:	mov	r2, r9
   26088:	beq	26d3c <main@@Base+0x13a5c>
   2608c:	ldrb	r0, [r4]
   26090:	cmp	r0, #125	; 0x7d
   26094:	bne	260c8 <main@@Base+0x12de8>
   26098:	add	r1, r4, #1
   2609c:	sub	r0, r9, r1
   260a0:	cmp	r0, #2
   260a4:	blt	27564 <main@@Base+0x14284>
   260a8:	ldrb	r0, [r1]
   260ac:	cmp	r0, #32
   260b0:	bhi	27514 <main@@Base+0x14234>
   260b4:	bne	27564 <main@@Base+0x14284>
   260b8:	ldrb	r0, [r4, #2]!
   260bc:	cmp	r0, #32
   260c0:	bls	27564 <main@@Base+0x14284>
   260c4:	b	27574 <main@@Base+0x14294>
   260c8:	mov	r2, r4
   260cc:	b	26d3c <main@@Base+0x13a5c>
   260d0:	bne	260e0 <main@@Base+0x12e00>
   260d4:	ldrb	r0, [r4, #2]!
   260d8:	cmp	r0, #32
   260dc:	bhi	260f0 <main@@Base+0x12e10>
   260e0:	mov	r0, sl
   260e4:	mov	r2, r9
   260e8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   260ec:	mov	r4, r0
   260f0:	cmp	r4, r9
   260f4:	mov	r2, r9
   260f8:	beq	27704 <main@@Base+0x14424>
   260fc:	ldrb	r0, [r4]
   26100:	cmp	r0, #125	; 0x7d
   26104:	bne	26138 <main@@Base+0x12e58>
   26108:	add	r1, r4, #1
   2610c:	sub	r0, r9, r1
   26110:	cmp	r0, #2
   26114:	blt	28de4 <main@@Base+0x15b04>
   26118:	ldrb	r0, [r1]
   2611c:	cmp	r0, #32
   26120:	bhi	28d94 <main@@Base+0x15ab4>
   26124:	bne	28de4 <main@@Base+0x15b04>
   26128:	ldrb	r0, [r4, #2]!
   2612c:	cmp	r0, #32
   26130:	bhi	26024 <main@@Base+0x12d44>
   26134:	b	28de4 <main@@Base+0x15b04>
   26138:	mov	r2, r4
   2613c:	b	27704 <main@@Base+0x14424>
   26140:	bne	26150 <main@@Base+0x12e70>
   26144:	ldrb	r0, [r4, #2]!
   26148:	cmp	r0, #32
   2614c:	bhi	26160 <main@@Base+0x12e80>
   26150:	mov	r0, sl
   26154:	mov	r2, r9
   26158:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2615c:	mov	r4, r0
   26160:	mov	ip, r5
   26164:	cmp	r5, r4
   26168:	beq	25e6c <main@@Base+0x12b8c>
   2616c:	ldr	r0, [sl]
   26170:	mov	r1, #2
   26174:	bl	2d064 <flatcc_builder_start_table@@Base>
   26178:	cmp	r0, #0
   2617c:	bne	28f0c <main@@Base+0x15c2c>
   26180:	cmp	r4, r9
   26184:	beq	261c8 <main@@Base+0x12ee8>
   26188:	ldrb	r0, [r4]
   2618c:	cmp	r0, #123	; 0x7b
   26190:	bne	261c8 <main@@Base+0x12ee8>
   26194:	ldr	r5, [sp, #32]
   26198:	add	r1, r4, #1
   2619c:	sub	r0, r9, r1
   261a0:	cmp	r0, #2
   261a4:	blt	26208 <main@@Base+0x12f28>
   261a8:	ldrb	r0, [r1]
   261ac:	cmp	r0, #32
   261b0:	bls	261f8 <main@@Base+0x12f18>
   261b4:	mov	r4, r1
   261b8:	cmp	r4, r9
   261bc:	mov	r2, r9
   261c0:	bne	26224 <main@@Base+0x12f44>
   261c4:	b	265c0 <main@@Base+0x132e0>
   261c8:	mov	r0, sl
   261cc:	mov	r1, r4
   261d0:	mov	r2, r9
   261d4:	mov	r3, #21
   261d8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   261dc:	ldr	r5, [sp, #32]
   261e0:	mov	r4, r0
   261e4:	ldr	r0, [sp, #20]
   261e8:	ldr	r0, [r0]
   261ec:	cmp	r0, #0
   261f0:	beq	275ec <main@@Base+0x1430c>
   261f4:	b	28f0c <main@@Base+0x15c2c>
   261f8:	bne	26208 <main@@Base+0x12f28>
   261fc:	ldrb	r0, [r4, #2]!
   26200:	cmp	r0, #32
   26204:	bhi	26218 <main@@Base+0x12f38>
   26208:	mov	r0, sl
   2620c:	mov	r2, r9
   26210:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   26214:	mov	r4, r0
   26218:	cmp	r4, r9
   2621c:	mov	r2, r9
   26220:	beq	265c0 <main@@Base+0x132e0>
   26224:	ldrb	r0, [r4]
   26228:	cmp	r0, #125	; 0x7d
   2622c:	bne	26260 <main@@Base+0x12f80>
   26230:	add	r1, r4, #1
   26234:	sub	r0, r9, r1
   26238:	cmp	r0, #2
   2623c:	blt	275cc <main@@Base+0x142ec>
   26240:	ldrb	r0, [r1]
   26244:	cmp	r0, #32
   26248:	bhi	26c0c <main@@Base+0x1392c>
   2624c:	bne	275cc <main@@Base+0x142ec>
   26250:	ldrb	r0, [r4, #2]!
   26254:	cmp	r0, #32
   26258:	bls	275cc <main@@Base+0x142ec>
   2625c:	b	275dc <main@@Base+0x142fc>
   26260:	mov	r2, r4
   26264:	b	265c0 <main@@Base+0x132e0>
   26268:	mov	r0, sl
   2626c:	mov	r1, r7
   26270:	mov	r2, r9
   26274:	mov	r3, #4
   26278:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2627c:	b	26460 <main@@Base+0x13180>
   26280:	ldr	sl, [sp, #24]
   26284:	ldr	r5, [sp, #32]
   26288:	ldr	r4, [sp, #4]
   2628c:	bne	2629c <main@@Base+0x12fbc>
   26290:	ldrb	r0, [r7, #2]!
   26294:	cmp	r0, #32
   26298:	bhi	262ac <main@@Base+0x12fcc>
   2629c:	mov	r0, sl
   262a0:	mov	r2, r9
   262a4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   262a8:	mov	r7, r0
   262ac:	cmp	r4, r7
   262b0:	beq	26a24 <main@@Base+0x13744>
   262b4:	mov	r6, #0
   262b8:	cmp	r7, r9
   262bc:	str	r6, [fp, #-36]	; 0xffffffdc
   262c0:	str	r6, [fp, #-40]	; 0xffffffd8
   262c4:	str	r6, [sp, #44]	; 0x2c
   262c8:	str	r6, [sp, #40]	; 0x28
   262cc:	str	r6, [fp, #-44]	; 0xffffffd4
   262d0:	beq	26330 <main@@Base+0x13050>
   262d4:	sub	r0, fp, #40	; 0x28
   262d8:	mov	r1, r7
   262dc:	mov	r2, r9
   262e0:	sub	r3, fp, #44	; 0x2c
   262e4:	str	r0, [sp]
   262e8:	mov	r0, sl
   262ec:	bl	326c4 <flatcc_json_parser_integer@@Base>
   262f0:	cmp	r0, r7
   262f4:	beq	26344 <main@@Base+0x13064>
   262f8:	mov	r4, r0
   262fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26300:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26304:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26308:	cmp	r0, #0
   2630c:	beq	26360 <main@@Base+0x13080>
   26310:	subs	r0, r6, #1
   26314:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26318:	bcc	26398 <main@@Base+0x130b8>
   2631c:	ldr	sl, [sp, #24]
   26320:	mov	r1, r4
   26324:	mov	r2, r9
   26328:	mov	r3, #8
   2632c:	b	26378 <main@@Base+0x13098>
   26330:	mov	r5, #0
   26334:	mov	r4, r9
   26338:	cmp	r7, r4
   2633c:	bne	263f4 <main@@Base+0x13114>
   26340:	b	263b4 <main@@Base+0x130d4>
   26344:	mov	r6, #0
   26348:	mov	r5, #0
   2634c:	mov	r4, r7
   26350:	ldr	sl, [sp, #24]
   26354:	cmp	r7, r4
   26358:	bne	263f4 <main@@Base+0x13114>
   2635c:	b	263b4 <main@@Base+0x130d4>
   26360:	cmn	r5, #1
   26364:	bgt	263a0 <main@@Base+0x130c0>
   26368:	ldr	sl, [sp, #24]
   2636c:	mov	r1, r4
   26370:	mov	r2, r9
   26374:	mov	r3, #7
   26378:	mov	r0, sl
   2637c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26380:	mov	r4, r0
   26384:	mov	r6, #0
   26388:	mov	r5, #0
   2638c:	cmp	r7, r4
   26390:	bne	263f4 <main@@Base+0x13114>
   26394:	b	263b4 <main@@Base+0x130d4>
   26398:	rsbs	r6, r6, #0
   2639c:	rsc	r5, r5, #0
   263a0:	str	r6, [sp, #40]	; 0x28
   263a4:	str	r5, [sp, #44]	; 0x2c
   263a8:	ldr	sl, [sp, #24]
   263ac:	cmp	r7, r4
   263b0:	bne	263f4 <main@@Base+0x13114>
   263b4:	add	r0, sp, #40	; 0x28
   263b8:	mov	r1, r7
   263bc:	mov	r2, r9
   263c0:	str	r0, [sp]
   263c4:	movw	r0, #33272	; 0x81f8
   263c8:	movt	r0, #4
   263cc:	add	r3, r0, #84	; 0x54
   263d0:	mov	r0, sl
   263d4:	bl	2423c <main@@Base+0x10f5c>
   263d8:	mov	r4, r0
   263dc:	cmp	r0, r7
   263e0:	cmpne	r4, r9
   263e4:	beq	28f08 <main@@Base+0x15c28>
   263e8:	ldr	r6, [sp, #40]	; 0x28
   263ec:	ldr	r5, [sp, #44]	; 0x2c
   263f0:	ldr	sl, [sp, #24]
   263f4:	orrs	r0, r6, r5
   263f8:	bne	26408 <main@@Base+0x13128>
   263fc:	ldrb	r0, [sl, #8]
   26400:	tst	r0, #2
   26404:	beq	26adc <main@@Base+0x137fc>
   26408:	ldr	r0, [sl]
   2640c:	mov	r1, #0
   26410:	mov	r2, #8
   26414:	mov	r3, #8
   26418:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   2641c:	cmp	r0, #0
   26420:	beq	28f08 <main@@Base+0x15c28>
   26424:	str	r6, [r0]
   26428:	str	r5, [r0, #4]
   2642c:	ldr	r5, [sp, #32]
   26430:	sub	r0, r9, r4
   26434:	cmp	r0, #2
   26438:	bge	26aec <main@@Base+0x1380c>
   2643c:	b	26b1c <main@@Base+0x1383c>
   26440:	ldr	sl, [sp, #24]
   26444:	bne	26454 <main@@Base+0x13174>
   26448:	ldrb	r0, [r7, #2]!
   2644c:	cmp	r0, #32
   26450:	bhi	26464 <main@@Base+0x13184>
   26454:	mov	r0, sl
   26458:	mov	r2, r9
   2645c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   26460:	mov	r7, r0
   26464:	cmp	r8, r7
   26468:	beq	26ac8 <main@@Base+0x137e8>
   2646c:	mov	r5, #0
   26470:	cmp	r7, r9
   26474:	str	r5, [fp, #-36]	; 0xffffffdc
   26478:	str	r5, [fp, #-40]	; 0xffffffd8
   2647c:	str	r5, [fp, #-44]	; 0xffffffd4
   26480:	str	r5, [sp, #40]	; 0x28
   26484:	beq	264d0 <main@@Base+0x131f0>
   26488:	sub	r0, fp, #40	; 0x28
   2648c:	mov	r1, r7
   26490:	mov	r2, r9
   26494:	add	r3, sp, #40	; 0x28
   26498:	str	r0, [sp]
   2649c:	mov	r0, sl
   264a0:	bl	326c4 <flatcc_json_parser_integer@@Base>
   264a4:	cmp	r0, r7
   264a8:	beq	264e0 <main@@Base+0x13200>
   264ac:	mov	r4, r0
   264b0:	ldr	r0, [sp, #40]	; 0x28
   264b4:	cmp	r0, #0
   264b8:	beq	264f4 <main@@Base+0x13214>
   264bc:	ldr	sl, [sp, #24]
   264c0:	mov	r1, r4
   264c4:	mov	r2, r9
   264c8:	mov	r3, #8
   264cc:	b	26510 <main@@Base+0x13230>
   264d0:	mov	r4, r9
   264d4:	cmp	r7, r4
   264d8:	bne	26560 <main@@Base+0x13280>
   264dc:	b	26524 <main@@Base+0x13244>
   264e0:	mov	r4, r7
   264e4:	ldr	sl, [sp, #24]
   264e8:	cmp	r7, r4
   264ec:	bne	26560 <main@@Base+0x13280>
   264f0:	b	26524 <main@@Base+0x13244>
   264f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   264f8:	cmp	r0, #0
   264fc:	beq	265a8 <main@@Base+0x132c8>
   26500:	ldr	sl, [sp, #24]
   26504:	mov	r1, r4
   26508:	mov	r2, r9
   2650c:	mov	r3, #7
   26510:	mov	r0, sl
   26514:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26518:	mov	r4, r0
   2651c:	cmp	r7, r4
   26520:	bne	26560 <main@@Base+0x13280>
   26524:	sub	r0, fp, #44	; 0x2c
   26528:	mov	r1, r7
   2652c:	mov	r2, r9
   26530:	str	r0, [sp]
   26534:	movw	r0, #33272	; 0x81f8
   26538:	movt	r0, #4
   2653c:	add	r3, r0, #72	; 0x48
   26540:	mov	r0, sl
   26544:	bl	244d0 <main@@Base+0x111f0>
   26548:	mov	r4, r0
   2654c:	cmp	r0, r7
   26550:	cmpne	r4, r9
   26554:	beq	28f08 <main@@Base+0x15c28>
   26558:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2655c:	ldr	sl, [sp, #24]
   26560:	cmp	r5, #0
   26564:	bne	26574 <main@@Base+0x13294>
   26568:	ldrb	r0, [sl, #8]
   2656c:	tst	r0, #2
   26570:	beq	26adc <main@@Base+0x137fc>
   26574:	ldr	r0, [sl]
   26578:	mov	r1, #1
   2657c:	mov	r2, #4
   26580:	mov	r3, #4
   26584:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   26588:	cmp	r0, #0
   2658c:	beq	28f08 <main@@Base+0x15c28>
   26590:	str	r5, [r0]
   26594:	ldr	r5, [sp, #32]
   26598:	sub	r0, r9, r4
   2659c:	cmp	r0, #2
   265a0:	bge	26aec <main@@Base+0x1380c>
   265a4:	b	26b1c <main@@Base+0x1383c>
   265a8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   265ac:	str	r5, [fp, #-44]	; 0xffffffd4
   265b0:	ldr	sl, [sp, #24]
   265b4:	cmp	r7, r4
   265b8:	bne	26560 <main@@Base+0x13280>
   265bc:	b	26524 <main@@Base+0x13244>
   265c0:	cmp	r2, r9
   265c4:	mov	r1, r9
   265c8:	beq	26620 <main@@Base+0x13340>
   265cc:	ldrb	r0, [r2]
   265d0:	cmp	r0, #46	; 0x2e
   265d4:	beq	265f4 <main@@Base+0x13314>
   265d8:	cmp	r0, #34	; 0x22
   265dc:	bne	26610 <main@@Base+0x13330>
   265e0:	ldr	r0, [sp, #28]
   265e4:	mov	r1, #0
   265e8:	str	r1, [r0]
   265ec:	add	r1, r2, #1
   265f0:	b	26620 <main@@Base+0x13340>
   265f4:	mov	r1, r2
   265f8:	mov	r0, sl
   265fc:	mov	r2, r9
   26600:	mov	r3, #5
   26604:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26608:	mov	r1, r0
   2660c:	b	26620 <main@@Base+0x13340>
   26610:	ldr	r0, [sp, #28]
   26614:	mov	r1, #1
   26618:	str	r1, [r0]
   2661c:	mov	r1, r2
   26620:	sub	r0, r9, r1
   26624:	mov	r2, #8
   26628:	cmp	r0, #8
   2662c:	movcs	r0, r2
   26630:	and	r0, r0, #15
   26634:	sub	r7, r0, #1
   26638:	cmp	r7, #7
   2663c:	bhi	268cc <main@@Base+0x135ec>
   26640:	add	r0, pc, #32
   26644:	mov	r8, #0
   26648:	mov	ip, #0
   2664c:	mov	lr, #0
   26650:	mov	r6, #0
   26654:	mov	r3, #0
   26658:	mov	r5, #0
   2665c:	mov	r2, #0
   26660:	mov	r4, #0
   26664:	ldr	pc, [r0, r7, lsl #2]
   26668:	andeq	r6, r2, ip, asr #13
   2666c:	andeq	r6, r2, r4, asr #13
   26670:			; <UNDEFINED> instruction: 0x000266bc
   26674:			; <UNDEFINED> instruction: 0x000266b4
   26678:	andeq	r6, r2, r8, lsr #13
   2667c:	muleq	r2, ip, r6
   26680:	andeq	r6, r2, ip, lsl #13
   26684:	andeq	r6, r2, r8, lsl #13
   26688:	ldrb	ip, [r1, #7]
   2668c:	ldrb	r0, [r1, #6]
   26690:	mov	lr, r8
   26694:	orr	r0, ip, r0, lsl #8
   26698:	mov	r8, r0
   2669c:	ldrb	r0, [r1, #5]
   266a0:	mov	r6, lr
   266a4:	orr	r8, r8, r0, lsl #16
   266a8:	ldrb	r0, [r1, #4]
   266ac:	mov	r3, r6
   266b0:	orr	r8, r8, r0, lsl #24
   266b4:	ldrb	r0, [r1, #3]
   266b8:	orr	r5, r0, r3
   266bc:	ldrb	r0, [r1, #2]
   266c0:	orr	r2, r5, r0, lsl #8
   266c4:	ldrb	r0, [r1, #1]
   266c8:	orr	r4, r2, r0, lsl #16
   266cc:	ldrb	r2, [r1]
   266d0:	movw	r0, #25186	; 0x6262
   266d4:	movw	r3, #24929	; 0x6161
   266d8:	movt	r0, #24418	; 0x5f62
   266dc:	movt	r3, #24929	; 0x6161
   266e0:	eor	r0, r8, r0
   266e4:	orr	r2, r4, r2, lsl #24
   266e8:	eor	r2, r2, r3
   266ec:	orrs	r0, r0, r2
   266f0:	bne	268cc <main@@Base+0x135ec>
   266f4:	add	r4, r1, #8
   266f8:	mov	r0, #8
   266fc:	sub	lr, r9, r4
   26700:	cmp	lr, #8
   26704:	movcc	r0, lr
   26708:	and	r0, r0, #15
   2670c:	sub	r6, r0, #1
   26710:	cmp	r6, #7
   26714:	bhi	26940 <main@@Base+0x13660>
   26718:	str	r4, [sp, #4]
   2671c:	add	r8, pc, #32
   26720:	mov	r2, #0
   26724:	mov	ip, #0
   26728:	mov	sl, #0
   2672c:	mov	r5, #0
   26730:	mov	r7, #0
   26734:	mov	r4, #0
   26738:	mov	r0, #0
   2673c:	mov	r3, #0
   26740:	ldr	pc, [r8, r6, lsl #2]
   26744:	andeq	r6, r2, r8, lsr #15
   26748:	andeq	r6, r2, r0, lsr #15
   2674c:	muleq	r2, r8, r7
   26750:	muleq	r2, r0, r7
   26754:	andeq	r6, r2, r4, lsl #15
   26758:	andeq	r6, r2, r8, ror r7
   2675c:	andeq	r6, r2, r8, ror #14
   26760:	andeq	r6, r2, r4, ror #14
   26764:	ldrb	ip, [r1, #15]
   26768:	ldrb	r0, [r1, #14]
   2676c:	mov	sl, r2
   26770:	orr	r0, ip, r0, lsl #8
   26774:	mov	r2, r0
   26778:	ldrb	r0, [r1, #13]
   2677c:	mov	r5, sl
   26780:	orr	r2, r2, r0, lsl #16
   26784:	ldrb	r0, [r1, #12]
   26788:	mov	r7, r5
   2678c:	orr	r2, r2, r0, lsl #24
   26790:	ldrb	r0, [r1, #11]
   26794:	orr	r4, r0, r7
   26798:	ldrb	r0, [r1, #10]
   2679c:	orr	r0, r4, r0, lsl #8
   267a0:	ldrb	r3, [r1, #9]
   267a4:	orr	r3, r0, r3, lsl #16
   267a8:	ldr	r4, [sp, #4]
   267ac:	movw	r0, #29791	; 0x745f
   267b0:	movt	r0, #24946	; 0x6172
   267b4:	eor	r7, r2, r0
   267b8:	ldrb	r0, [r4]
   267bc:	orr	r0, r3, r0, lsl #24
   267c0:	movw	r3, #29556	; 0x7374
   267c4:	movt	r3, #25183	; 0x625f
   267c8:	eor	r0, r0, r3
   267cc:	orrs	r3, r7, r0
   267d0:	bne	268d4 <main@@Base+0x135f4>
   267d4:	add	r8, r1, #16
   267d8:	mov	r2, #8
   267dc:	ldr	sl, [sp, #24]
   267e0:	sub	ip, r9, r8
   267e4:	cmp	ip, #8
   267e8:	movcc	r2, ip
   267ec:	and	r2, r2, #15
   267f0:	sub	r7, r2, #1
   267f4:	cmp	r7, #7
   267f8:	bhi	26ac8 <main@@Base+0x137e8>
   267fc:	add	r0, pc, #20
   26800:	mov	r2, #0
   26804:	mov	r3, #0
   26808:	mov	r6, #0
   2680c:	mov	r5, #0
   26810:	mov	r4, #0
   26814:	ldr	pc, [r0, r7, lsl #2]
   26818:	andeq	r6, r2, ip, asr r8
   2681c:	andeq	r6, r2, r4, asr r8
   26820:	andeq	r6, r2, ip, asr #16
   26824:	andeq	r6, r2, r0, asr #16
   26828:	andeq	r6, r2, r8, lsr r8
   2682c:	andeq	r6, r2, r8, lsr r8
   26830:	andeq	r6, r2, r8, lsr r8
   26834:	andeq	r6, r2, r8, lsr r8
   26838:	ldrb	r0, [r1, #20]
   2683c:	lsl	r3, r0, #24
   26840:	ldrb	r0, [r1, #19]
   26844:	orr	r6, r0, r2
   26848:	mov	r2, r3
   2684c:	ldrb	r0, [r1, #18]
   26850:	orr	r5, r6, r0, lsl #8
   26854:	ldrb	r0, [r1, #17]
   26858:	orr	r4, r5, r0, lsl #16
   2685c:	ldrb	r0, [r8]
   26860:	movw	r3, #25968	; 0x6570
   26864:	and	r2, r2, #-16777216	; 0xff000000
   26868:	movt	r3, #29556	; 0x7374
   2686c:	eor	r2, r2, #1929379840	; 0x73000000
   26870:	orr	r0, r4, r0, lsl #24
   26874:	eor	r0, r0, r3
   26878:	orrs	r0, r2, r0
   2687c:	bne	26ac8 <main@@Base+0x137e8>
   26880:	cmp	ip, #6
   26884:	blt	26ac8 <main@@Base+0x137e8>
   26888:	ldr	r3, [sp, #28]
   2688c:	mov	r2, r1
   26890:	ldrb	r0, [r2, #21]!
   26894:	ldr	r3, [r3]
   26898:	cmp	r3, #0
   2689c:	beq	26980 <main@@Base+0x136a0>
   268a0:	cmp	r0, #33	; 0x21
   268a4:	bcc	268b0 <main@@Base+0x135d0>
   268a8:	cmp	r0, #58	; 0x3a
   268ac:	bne	26ac8 <main@@Base+0x137e8>
   268b0:	ldr	r0, [sp, #28]
   268b4:	mov	r1, #0
   268b8:	str	r1, [r0]
   268bc:	sub	r0, r9, r2
   268c0:	cmp	r0, #2
   268c4:	bge	26998 <main@@Base+0x136b8>
   268c8:	b	26a74 <main@@Base+0x13794>
   268cc:	mov	r0, sl
   268d0:	b	26ad0 <main@@Base+0x137f0>
   268d4:	movw	r3, #29440	; 0x7300
   268d8:	ldr	sl, [sp, #24]
   268dc:	bic	r2, r2, #255	; 0xff
   268e0:	movt	r3, #25968	; 0x6570
   268e4:	eor	r2, r2, r3
   268e8:	orrs	r0, r2, r0
   268ec:	bne	26940 <main@@Base+0x13660>
   268f0:	ldr	r5, [sp, #32]
   268f4:	cmp	lr, #8
   268f8:	blt	26a24 <main@@Base+0x13744>
   268fc:	ldr	r3, [sp, #28]
   26900:	mov	r2, r1
   26904:	ldrb	r0, [r2, #15]!
   26908:	ldr	r3, [r3]
   2690c:	cmp	r3, #0
   26910:	beq	2694c <main@@Base+0x1366c>
   26914:	cmp	r0, #33	; 0x21
   26918:	bcc	26924 <main@@Base+0x13644>
   2691c:	cmp	r0, #58	; 0x3a
   26920:	bne	26a24 <main@@Base+0x13744>
   26924:	ldr	r0, [sp, #28]
   26928:	mov	r1, #0
   2692c:	str	r1, [r0]
   26930:	sub	r0, r9, r2
   26934:	cmp	r0, #2
   26938:	bge	26964 <main@@Base+0x13684>
   2693c:	b	269c8 <main@@Base+0x136e8>
   26940:	mov	r0, sl
   26944:	mov	r1, r4
   26948:	b	26ad0 <main@@Base+0x137f0>
   2694c:	cmp	r0, #34	; 0x22
   26950:	bne	26a24 <main@@Base+0x13744>
   26954:	add	r2, r1, #16
   26958:	sub	r0, r9, r2
   2695c:	cmp	r0, #2
   26960:	blt	269c8 <main@@Base+0x136e8>
   26964:	ldrb	r0, [r2]
   26968:	cmp	r0, #32
   2696c:	bls	269b4 <main@@Base+0x136d4>
   26970:	mov	r7, r2
   26974:	cmp	r7, r9
   26978:	bne	269e4 <main@@Base+0x13704>
   2697c:	b	26a48 <main@@Base+0x13768>
   26980:	cmp	r0, #34	; 0x22
   26984:	bne	26ac8 <main@@Base+0x137e8>
   26988:	add	r2, r1, #22
   2698c:	sub	r0, r9, r2
   26990:	cmp	r0, #2
   26994:	blt	26a74 <main@@Base+0x13794>
   26998:	ldrb	r0, [r2]
   2699c:	cmp	r0, #32
   269a0:	bls	26a60 <main@@Base+0x13780>
   269a4:	mov	r7, r2
   269a8:	cmp	r7, r9
   269ac:	bne	26a90 <main@@Base+0x137b0>
   269b0:	b	26268 <main@@Base+0x12f88>
   269b4:	bne	269c8 <main@@Base+0x136e8>
   269b8:	mov	r7, r2
   269bc:	ldrb	r0, [r7, #1]!
   269c0:	cmp	r0, #32
   269c4:	bhi	269dc <main@@Base+0x136fc>
   269c8:	mov	r1, r2
   269cc:	mov	r0, sl
   269d0:	mov	r2, r9
   269d4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   269d8:	mov	r7, r0
   269dc:	cmp	r7, r9
   269e0:	beq	26a48 <main@@Base+0x13768>
   269e4:	ldrb	r0, [r7]
   269e8:	cmp	r0, #58	; 0x3a
   269ec:	bne	26a48 <main@@Base+0x13768>
   269f0:	add	r1, r7, #1
   269f4:	sub	r0, r9, r1
   269f8:	cmp	r0, #2
   269fc:	blt	2629c <main@@Base+0x12fbc>
   26a00:	ldrb	r0, [r1]
   26a04:	cmp	r0, #32
   26a08:	bls	26280 <main@@Base+0x12fa0>
   26a0c:	ldr	sl, [sp, #24]
   26a10:	ldr	r5, [sp, #32]
   26a14:	ldr	r4, [sp, #4]
   26a18:	mov	r7, r1
   26a1c:	cmp	r4, r7
   26a20:	bne	262b4 <main@@Base+0x12fd4>
   26a24:	mov	r0, sl
   26a28:	mov	r1, r4
   26a2c:	mov	r2, r9
   26a30:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   26a34:	mov	r4, r0
   26a38:	sub	r0, r9, r4
   26a3c:	cmp	r0, #2
   26a40:	blt	26b1c <main@@Base+0x1383c>
   26a44:	b	26aec <main@@Base+0x1380c>
   26a48:	mov	r0, sl
   26a4c:	mov	r1, r7
   26a50:	mov	r2, r9
   26a54:	mov	r3, #4
   26a58:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26a5c:	b	262a8 <main@@Base+0x12fc8>
   26a60:	bne	26a74 <main@@Base+0x13794>
   26a64:	mov	r7, r2
   26a68:	ldrb	r0, [r7, #1]!
   26a6c:	cmp	r0, #32
   26a70:	bhi	26a88 <main@@Base+0x137a8>
   26a74:	mov	r1, r2
   26a78:	mov	r0, sl
   26a7c:	mov	r2, r9
   26a80:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   26a84:	mov	r7, r0
   26a88:	cmp	r7, r9
   26a8c:	beq	26268 <main@@Base+0x12f88>
   26a90:	ldrb	r0, [r7]
   26a94:	cmp	r0, #58	; 0x3a
   26a98:	bne	26268 <main@@Base+0x12f88>
   26a9c:	add	r1, r7, #1
   26aa0:	sub	r0, r9, r1
   26aa4:	cmp	r0, #2
   26aa8:	blt	26454 <main@@Base+0x13174>
   26aac:	ldrb	r0, [r1]
   26ab0:	cmp	r0, #32
   26ab4:	bls	26440 <main@@Base+0x13160>
   26ab8:	ldr	sl, [sp, #24]
   26abc:	mov	r7, r1
   26ac0:	cmp	r8, r7
   26ac4:	bne	2646c <main@@Base+0x1318c>
   26ac8:	mov	r0, sl
   26acc:	mov	r1, r8
   26ad0:	mov	r2, r9
   26ad4:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   26ad8:	mov	r4, r0
   26adc:	ldr	r5, [sp, #32]
   26ae0:	sub	r0, r9, r4
   26ae4:	cmp	r0, #2
   26ae8:	blt	26b1c <main@@Base+0x1383c>
   26aec:	ldrb	r0, [r4]
   26af0:	cmp	r0, #32
   26af4:	bls	26b08 <main@@Base+0x13828>
   26af8:	mov	r2, r4
   26afc:	cmp	r2, r9
   26b00:	bne	26b38 <main@@Base+0x13858>
   26b04:	b	26bc8 <main@@Base+0x138e8>
   26b08:	bne	26b1c <main@@Base+0x1383c>
   26b0c:	mov	r2, r4
   26b10:	ldrb	r0, [r2, #1]!
   26b14:	cmp	r0, #32
   26b18:	bhi	26b30 <main@@Base+0x13850>
   26b1c:	mov	r0, sl
   26b20:	mov	r1, r4
   26b24:	mov	r2, r9
   26b28:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   26b2c:	mov	r2, r0
   26b30:	cmp	r2, r9
   26b34:	beq	26bc8 <main@@Base+0x138e8>
   26b38:	ldrb	r0, [r2]
   26b3c:	cmp	r0, #44	; 0x2c
   26b40:	bne	26be0 <main@@Base+0x13900>
   26b44:	add	r1, r2, #1
   26b48:	sub	r0, r9, r1
   26b4c:	cmp	r0, #2
   26b50:	blt	26b80 <main@@Base+0x138a0>
   26b54:	ldrb	r0, [r1]
   26b58:	cmp	r0, #32
   26b5c:	bls	26b70 <main@@Base+0x13890>
   26b60:	mov	r2, r1
   26b64:	cmp	r2, r9
   26b68:	bne	26b98 <main@@Base+0x138b8>
   26b6c:	b	26c24 <main@@Base+0x13944>
   26b70:	bne	26b80 <main@@Base+0x138a0>
   26b74:	ldrb	r0, [r2, #2]!
   26b78:	cmp	r0, #32
   26b7c:	bhi	26b90 <main@@Base+0x138b0>
   26b80:	mov	r0, sl
   26b84:	mov	r2, r9
   26b88:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   26b8c:	mov	r2, r0
   26b90:	cmp	r2, r9
   26b94:	beq	26c24 <main@@Base+0x13944>
   26b98:	ldrb	r0, [r2]
   26b9c:	cmp	r0, #125	; 0x7d
   26ba0:	bne	265c0 <main@@Base+0x132e0>
   26ba4:	add	r1, r2, #1
   26ba8:	sub	r0, r9, r1
   26bac:	cmp	r0, #2
   26bb0:	blt	275cc <main@@Base+0x142ec>
   26bb4:	ldrb	r0, [r1]
   26bb8:	cmp	r0, #32
   26bbc:	bhi	26c0c <main@@Base+0x1392c>
   26bc0:	beq	275bc <main@@Base+0x142dc>
   26bc4:	b	275cc <main@@Base+0x142ec>
   26bc8:	mov	r4, r9
   26bcc:	ldr	r0, [sp, #20]
   26bd0:	ldr	r0, [r0]
   26bd4:	cmp	r0, #0
   26bd8:	beq	275ec <main@@Base+0x1430c>
   26bdc:	b	28f0c <main@@Base+0x15c2c>
   26be0:	cmp	r0, #125	; 0x7d
   26be4:	bne	26c30 <main@@Base+0x13950>
   26be8:	add	r1, r2, #1
   26bec:	sub	r0, r9, r1
   26bf0:	cmp	r0, #2
   26bf4:	blt	275cc <main@@Base+0x142ec>
   26bf8:	ldrb	r0, [r1]
   26bfc:	cmp	r0, #32
   26c00:	bls	275b0 <main@@Base+0x142d0>
   26c04:	ldr	sl, [sp, #24]
   26c08:	ldr	r5, [sp, #32]
   26c0c:	mov	r4, r1
   26c10:	ldr	r0, [sp, #20]
   26c14:	ldr	r0, [r0]
   26c18:	cmp	r0, #0
   26c1c:	beq	275ec <main@@Base+0x1430c>
   26c20:	b	28f0c <main@@Base+0x15c2c>
   26c24:	mov	r0, sl
   26c28:	mov	r1, r9
   26c2c:	b	26c38 <main@@Base+0x13958>
   26c30:	mov	r0, sl
   26c34:	mov	r1, r2
   26c38:	mov	r2, r9
   26c3c:	mov	r3, #10
   26c40:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26c44:	b	275d8 <main@@Base+0x142f8>
   26c48:	mov	r4, r9
   26c4c:	cmp	r7, r4
   26c50:	bne	26cf8 <main@@Base+0x13a18>
   26c54:	b	26cb8 <main@@Base+0x139d8>
   26c58:	mov	r4, r7
   26c5c:	cmp	r7, r4
   26c60:	bne	26cf8 <main@@Base+0x13a18>
   26c64:	b	26cb8 <main@@Base+0x139d8>
   26c68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26c6c:	cmp	r0, #0
   26c70:	beq	26ca0 <main@@Base+0x139c0>
   26c74:	ldr	sl, [sp, #24]
   26c78:	mov	r1, r4
   26c7c:	mov	r2, r9
   26c80:	mov	r3, #7
   26c84:	mov	r0, sl
   26c88:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26c8c:	mov	r4, r0
   26c90:	ldr	r5, [sp, #32]
   26c94:	cmp	r7, r4
   26c98:	bne	26cf8 <main@@Base+0x13a18>
   26c9c:	b	26cb8 <main@@Base+0x139d8>
   26ca0:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26ca4:	ldr	sl, [sp, #24]
   26ca8:	str	r6, [fp, #-44]	; 0xffffffd4
   26cac:	ldr	r5, [sp, #32]
   26cb0:	cmp	r7, r4
   26cb4:	bne	26cf8 <main@@Base+0x13a18>
   26cb8:	sub	r0, fp, #44	; 0x2c
   26cbc:	mov	r1, r7
   26cc0:	mov	r2, r9
   26cc4:	str	r0, [sp]
   26cc8:	movw	r0, #33152	; 0x8180
   26ccc:	movt	r0, #4
   26cd0:	add	r3, r0, #108	; 0x6c
   26cd4:	mov	r0, sl
   26cd8:	bl	244d0 <main@@Base+0x111f0>
   26cdc:	mov	r4, r0
   26ce0:	cmp	r0, r7
   26ce4:	cmpne	r4, r9
   26ce8:	beq	28f08 <main@@Base+0x15c28>
   26cec:	ldr	r6, [fp, #-44]	; 0xffffffd4
   26cf0:	ldr	sl, [sp, #24]
   26cf4:	ldr	r5, [sp, #32]
   26cf8:	cmp	r6, #0
   26cfc:	bne	26d0c <main@@Base+0x13a2c>
   26d00:	ldrb	r0, [sl, #8]
   26d04:	tst	r0, #2
   26d08:	beq	27400 <main@@Base+0x14120>
   26d0c:	ldr	r0, [sl]
   26d10:	mov	r1, #1
   26d14:	mov	r2, #4
   26d18:	mov	r3, #4
   26d1c:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   26d20:	cmp	r0, #0
   26d24:	beq	28f08 <main@@Base+0x15c28>
   26d28:	str	r6, [r0]
   26d2c:	sub	r0, r9, r4
   26d30:	cmp	r0, #2
   26d34:	bge	2740c <main@@Base+0x1412c>
   26d38:	b	2743c <main@@Base+0x1415c>
   26d3c:	cmp	r2, r9
   26d40:	mov	r1, r9
   26d44:	beq	26d9c <main@@Base+0x13abc>
   26d48:	ldrb	r0, [r2]
   26d4c:	cmp	r0, #46	; 0x2e
   26d50:	beq	26d70 <main@@Base+0x13a90>
   26d54:	cmp	r0, #34	; 0x22
   26d58:	bne	26d8c <main@@Base+0x13aac>
   26d5c:	ldr	r0, [sp, #28]
   26d60:	mov	r1, #0
   26d64:	str	r1, [r0]
   26d68:	add	r1, r2, #1
   26d6c:	b	26d9c <main@@Base+0x13abc>
   26d70:	mov	r1, r2
   26d74:	mov	r0, sl
   26d78:	mov	r2, r9
   26d7c:	mov	r3, #5
   26d80:	bl	30170 <flatcc_json_parser_set_error@@Base>
   26d84:	mov	r1, r0
   26d88:	b	26d9c <main@@Base+0x13abc>
   26d8c:	ldr	r0, [sp, #28]
   26d90:	mov	r1, #1
   26d94:	str	r1, [r0]
   26d98:	mov	r1, r2
   26d9c:	sub	r0, r9, r1
   26da0:	mov	r2, #8
   26da4:	cmp	r0, #8
   26da8:	movcs	r0, r2
   26dac:	and	r0, r0, #15
   26db0:	sub	r7, r0, #1
   26db4:	cmp	r7, #7
   26db8:	bhi	26fa8 <main@@Base+0x13cc8>
   26dbc:	add	r0, pc, #32
   26dc0:	mov	r8, #0
   26dc4:	mov	ip, #0
   26dc8:	mov	lr, #0
   26dcc:	mov	r6, #0
   26dd0:	mov	r3, #0
   26dd4:	mov	r5, #0
   26dd8:	mov	r2, #0
   26ddc:	mov	r4, #0
   26de0:	ldr	pc, [r0, r7, lsl #2]
   26de4:	andeq	r6, r2, r8, asr #28
   26de8:	andeq	r6, r2, r0, asr #28
   26dec:	andeq	r6, r2, r8, lsr lr
   26df0:	andeq	r6, r2, r0, lsr lr
   26df4:	andeq	r6, r2, r4, lsr #28
   26df8:	andeq	r6, r2, r8, lsl lr
   26dfc:	andeq	r6, r2, r8, lsl #28
   26e00:	andeq	r6, r2, r4, lsl #28
   26e04:	ldrb	ip, [r1, #7]
   26e08:	ldrb	r0, [r1, #6]
   26e0c:	mov	lr, r8
   26e10:	orr	r0, ip, r0, lsl #8
   26e14:	mov	r8, r0
   26e18:	ldrb	r0, [r1, #5]
   26e1c:	mov	r6, lr
   26e20:	orr	r8, r8, r0, lsl #16
   26e24:	ldrb	r0, [r1, #4]
   26e28:	mov	r3, r6
   26e2c:	orr	r8, r8, r0, lsl #24
   26e30:	ldrb	r0, [r1, #3]
   26e34:	orr	r5, r0, r3
   26e38:	ldrb	r0, [r1, #2]
   26e3c:	orr	r2, r5, r0, lsl #8
   26e40:	ldrb	r0, [r1, #1]
   26e44:	orr	r4, r2, r0, lsl #16
   26e48:	ldrb	r2, [r1]
   26e4c:	movw	r0, #25186	; 0x6262
   26e50:	movw	r3, #24929	; 0x6161
   26e54:	movt	r0, #24418	; 0x5f62
   26e58:	movt	r3, #24929	; 0x6161
   26e5c:	eor	r0, r8, r0
   26e60:	orr	r2, r4, r2, lsl #24
   26e64:	eor	r2, r2, r3
   26e68:	orrs	r0, r0, r2
   26e6c:	bne	26fa8 <main@@Base+0x13cc8>
   26e70:	add	r4, r1, #8
   26e74:	mov	r0, #8
   26e78:	sub	lr, r9, r4
   26e7c:	cmp	lr, #8
   26e80:	movcc	r0, lr
   26e84:	and	r0, r0, #15
   26e88:	sub	r6, r0, #1
   26e8c:	cmp	r6, #7
   26e90:	bhi	27018 <main@@Base+0x13d38>
   26e94:	str	r4, [sp, #4]
   26e98:	add	r8, pc, #32
   26e9c:	mov	r2, #0
   26ea0:	mov	ip, #0
   26ea4:	mov	sl, #0
   26ea8:	mov	r5, #0
   26eac:	mov	r7, #0
   26eb0:	mov	r4, #0
   26eb4:	mov	r0, #0
   26eb8:	mov	r3, #0
   26ebc:	ldr	pc, [r8, r6, lsl #2]
   26ec0:	andeq	r6, r2, r4, lsr #30
   26ec4:	andeq	r6, r2, ip, lsl pc
   26ec8:	andeq	r6, r2, r4, lsl pc
   26ecc:	andeq	r6, r2, ip, lsl #30
   26ed0:	andeq	r6, r2, r0, lsl #30
   26ed4:	strdeq	r6, [r2], -r4
   26ed8:	andeq	r6, r2, r4, ror #29
   26edc:	andeq	r6, r2, r0, ror #29
   26ee0:	ldrb	ip, [r1, #15]
   26ee4:	ldrb	r0, [r1, #14]
   26ee8:	mov	sl, r2
   26eec:	orr	r0, ip, r0, lsl #8
   26ef0:	mov	r2, r0
   26ef4:	ldrb	r0, [r1, #13]
   26ef8:	mov	r5, sl
   26efc:	orr	r2, r2, r0, lsl #16
   26f00:	ldrb	r0, [r1, #12]
   26f04:	mov	r7, r5
   26f08:	orr	r2, r2, r0, lsl #24
   26f0c:	ldrb	r0, [r1, #11]
   26f10:	orr	r4, r0, r7
   26f14:	ldrb	r0, [r1, #10]
   26f18:	orr	r0, r4, r0, lsl #8
   26f1c:	ldrb	r3, [r1, #9]
   26f20:	orr	r3, r0, r3, lsl #16
   26f24:	ldr	r4, [sp, #4]
   26f28:	movw	r7, #29440	; 0x7300
   26f2c:	bic	r0, r2, #255	; 0xff
   26f30:	movt	r7, #25968	; 0x6570
   26f34:	eor	r7, r0, r7
   26f38:	ldrb	r0, [r4]
   26f3c:	orr	r0, r3, r0, lsl #24
   26f40:	movw	r3, #29556	; 0x7374
   26f44:	movt	r3, #25183	; 0x625f
   26f48:	eor	r0, r0, r3
   26f4c:	orrs	r3, r7, r0
   26f50:	bne	26fb0 <main@@Base+0x13cd0>
   26f54:	ldr	sl, [sp, #24]
   26f58:	ldr	r5, [sp, #32]
   26f5c:	cmp	lr, #8
   26f60:	blt	273ec <main@@Base+0x1410c>
   26f64:	ldr	r3, [sp, #28]
   26f68:	mov	r2, r1
   26f6c:	ldrb	r0, [r2, #15]!
   26f70:	ldr	r3, [r3]
   26f74:	cmp	r3, #0
   26f78:	beq	27040 <main@@Base+0x13d60>
   26f7c:	cmp	r0, #33	; 0x21
   26f80:	bcc	26f8c <main@@Base+0x13cac>
   26f84:	cmp	r0, #58	; 0x3a
   26f88:	bne	273ec <main@@Base+0x1410c>
   26f8c:	ldr	r0, [sp, #28]
   26f90:	mov	r1, #0
   26f94:	str	r1, [r0]
   26f98:	sub	r0, r9, r2
   26f9c:	cmp	r0, #2
   26fa0:	bge	27058 <main@@Base+0x13d78>
   26fa4:	b	270bc <main@@Base+0x13ddc>
   26fa8:	mov	r0, sl
   26fac:	b	27020 <main@@Base+0x13d40>
   26fb0:	movw	r3, #29791	; 0x745f
   26fb4:	ldr	sl, [sp, #24]
   26fb8:	movt	r3, #24946	; 0x6172
   26fbc:	eor	r2, r2, r3
   26fc0:	orrs	r0, r2, r0
   26fc4:	bne	27018 <main@@Base+0x13d38>
   26fc8:	ldr	r5, [sp, #32]
   26fcc:	cmp	lr, #9
   26fd0:	blt	273ec <main@@Base+0x1410c>
   26fd4:	ldr	r3, [sp, #28]
   26fd8:	mov	r2, r1
   26fdc:	ldrb	r0, [r2, #16]!
   26fe0:	ldr	r3, [r3]
   26fe4:	cmp	r3, #0
   26fe8:	beq	27074 <main@@Base+0x13d94>
   26fec:	cmp	r0, #33	; 0x21
   26ff0:	bcc	26ffc <main@@Base+0x13d1c>
   26ff4:	cmp	r0, #58	; 0x3a
   26ff8:	bne	273ec <main@@Base+0x1410c>
   26ffc:	ldr	r0, [sp, #28]
   27000:	mov	r1, #0
   27004:	str	r1, [r0]
   27008:	sub	r0, r9, r2
   2700c:	cmp	r0, #2
   27010:	bge	2708c <main@@Base+0x13dac>
   27014:	b	2713c <main@@Base+0x13e5c>
   27018:	mov	r0, sl
   2701c:	mov	r1, r4
   27020:	mov	r2, r9
   27024:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   27028:	ldr	r5, [sp, #32]
   2702c:	mov	r4, r0
   27030:	sub	r0, r9, r4
   27034:	cmp	r0, #2
   27038:	bge	2740c <main@@Base+0x1412c>
   2703c:	b	2743c <main@@Base+0x1415c>
   27040:	cmp	r0, #34	; 0x22
   27044:	bne	273ec <main@@Base+0x1410c>
   27048:	add	r2, r1, #16
   2704c:	sub	r0, r9, r2
   27050:	cmp	r0, #2
   27054:	blt	270bc <main@@Base+0x13ddc>
   27058:	ldrb	r0, [r2]
   2705c:	cmp	r0, #32
   27060:	bls	270a8 <main@@Base+0x13dc8>
   27064:	mov	r7, r2
   27068:	cmp	r7, r9
   2706c:	bne	270d8 <main@@Base+0x13df8>
   27070:	b	27110 <main@@Base+0x13e30>
   27074:	cmp	r0, #34	; 0x22
   27078:	bne	273ec <main@@Base+0x1410c>
   2707c:	add	r2, r1, #17
   27080:	sub	r0, r9, r2
   27084:	cmp	r0, #2
   27088:	blt	2713c <main@@Base+0x13e5c>
   2708c:	ldrb	r0, [r2]
   27090:	cmp	r0, #32
   27094:	bls	27128 <main@@Base+0x13e48>
   27098:	mov	r7, r2
   2709c:	cmp	r7, r9
   270a0:	bne	27158 <main@@Base+0x13e78>
   270a4:	b	2719c <main@@Base+0x13ebc>
   270a8:	bne	270bc <main@@Base+0x13ddc>
   270ac:	mov	r7, r2
   270b0:	ldrb	r0, [r7, #1]!
   270b4:	cmp	r0, #32
   270b8:	bhi	270d0 <main@@Base+0x13df0>
   270bc:	mov	r1, r2
   270c0:	mov	r0, sl
   270c4:	mov	r2, r9
   270c8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   270cc:	mov	r7, r0
   270d0:	cmp	r7, r9
   270d4:	beq	27110 <main@@Base+0x13e30>
   270d8:	ldrb	r0, [r7]
   270dc:	cmp	r0, #58	; 0x3a
   270e0:	bne	27110 <main@@Base+0x13e30>
   270e4:	add	r1, r7, #1
   270e8:	sub	r0, r9, r1
   270ec:	cmp	r0, #2
   270f0:	blt	271c4 <main@@Base+0x13ee4>
   270f4:	ldrb	r0, [r1]
   270f8:	cmp	r0, #32
   270fc:	bls	271b4 <main@@Base+0x13ed4>
   27100:	mov	r7, r1
   27104:	cmp	r4, r7
   27108:	bne	271dc <main@@Base+0x13efc>
   2710c:	b	273ec <main@@Base+0x1410c>
   27110:	mov	r0, sl
   27114:	mov	r1, r7
   27118:	mov	r2, r9
   2711c:	mov	r3, #4
   27120:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27124:	b	271d0 <main@@Base+0x13ef0>
   27128:	bne	2713c <main@@Base+0x13e5c>
   2712c:	mov	r7, r2
   27130:	ldrb	r0, [r7, #1]!
   27134:	cmp	r0, #32
   27138:	bhi	27150 <main@@Base+0x13e70>
   2713c:	mov	r1, r2
   27140:	mov	r0, sl
   27144:	mov	r2, r9
   27148:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2714c:	mov	r7, r0
   27150:	cmp	r7, r9
   27154:	beq	2719c <main@@Base+0x13ebc>
   27158:	ldrb	r0, [r7]
   2715c:	cmp	r0, #58	; 0x3a
   27160:	bne	2719c <main@@Base+0x13ebc>
   27164:	add	r1, r7, #1
   27168:	sub	r0, r9, r1
   2716c:	cmp	r0, #2
   27170:	blt	27360 <main@@Base+0x14080>
   27174:	ldrb	r0, [r1]
   27178:	cmp	r0, #32
   2717c:	bls	27344 <main@@Base+0x14064>
   27180:	ldr	sl, [sp, #24]
   27184:	ldr	r5, [sp, #32]
   27188:	ldr	r4, [sp, #4]
   2718c:	mov	r7, r1
   27190:	cmp	r4, r7
   27194:	bne	27378 <main@@Base+0x14098>
   27198:	b	273ec <main@@Base+0x1410c>
   2719c:	mov	r0, sl
   271a0:	mov	r1, r7
   271a4:	mov	r2, r9
   271a8:	mov	r3, #4
   271ac:	bl	30170 <flatcc_json_parser_set_error@@Base>
   271b0:	b	2736c <main@@Base+0x1408c>
   271b4:	bne	271c4 <main@@Base+0x13ee4>
   271b8:	ldrb	r0, [r7, #2]!
   271bc:	cmp	r0, #32
   271c0:	bhi	271d4 <main@@Base+0x13ef4>
   271c4:	mov	r0, sl
   271c8:	mov	r2, r9
   271cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   271d0:	mov	r7, r0
   271d4:	cmp	r4, r7
   271d8:	beq	273ec <main@@Base+0x1410c>
   271dc:	mov	r6, #0
   271e0:	cmp	r7, r9
   271e4:	str	r6, [fp, #-36]	; 0xffffffdc
   271e8:	str	r6, [fp, #-40]	; 0xffffffd8
   271ec:	str	r6, [sp, #44]	; 0x2c
   271f0:	str	r6, [sp, #40]	; 0x28
   271f4:	str	r6, [fp, #-44]	; 0xffffffd4
   271f8:	beq	27254 <main@@Base+0x13f74>
   271fc:	sub	r0, fp, #40	; 0x28
   27200:	mov	r1, r7
   27204:	mov	r2, r9
   27208:	sub	r3, fp, #44	; 0x2c
   2720c:	str	r0, [sp]
   27210:	mov	r0, sl
   27214:	bl	326c4 <flatcc_json_parser_integer@@Base>
   27218:	cmp	r0, r7
   2721c:	beq	27268 <main@@Base+0x13f88>
   27220:	sub	r8, fp, #44	; 0x2c
   27224:	mov	r4, r0
   27228:	ldm	r8, {r0, r6, r8}
   2722c:	cmp	r0, #0
   27230:	beq	27280 <main@@Base+0x13fa0>
   27234:	subs	r0, r6, #1
   27238:	sbcs	r0, r8, #-2147483648	; 0x80000000
   2723c:	bcc	272b4 <main@@Base+0x13fd4>
   27240:	mov	r0, sl
   27244:	mov	r1, r4
   27248:	mov	r2, r9
   2724c:	mov	r3, #8
   27250:	b	27298 <main@@Base+0x13fb8>
   27254:	mov	r8, #0
   27258:	mov	r4, r9
   2725c:	cmp	r7, r4
   27260:	bne	27300 <main@@Base+0x14020>
   27264:	b	272cc <main@@Base+0x13fec>
   27268:	mov	r6, #0
   2726c:	mov	r8, #0
   27270:	mov	r4, r7
   27274:	cmp	r7, r4
   27278:	bne	27300 <main@@Base+0x14020>
   2727c:	b	272cc <main@@Base+0x13fec>
   27280:	cmn	r8, #1
   27284:	bgt	272bc <main@@Base+0x13fdc>
   27288:	mov	r0, sl
   2728c:	mov	r1, r4
   27290:	mov	r2, r9
   27294:	mov	r3, #7
   27298:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2729c:	mov	r4, r0
   272a0:	mov	r6, #0
   272a4:	mov	r8, #0
   272a8:	cmp	r7, r4
   272ac:	bne	27300 <main@@Base+0x14020>
   272b0:	b	272cc <main@@Base+0x13fec>
   272b4:	rsbs	r6, r6, #0
   272b8:	rsc	r8, r8, #0
   272bc:	str	r6, [sp, #40]	; 0x28
   272c0:	str	r8, [sp, #44]	; 0x2c
   272c4:	cmp	r7, r4
   272c8:	bne	27300 <main@@Base+0x14020>
   272cc:	ldr	r3, [sp, #8]
   272d0:	add	r0, sp, #40	; 0x28
   272d4:	mov	r1, r7
   272d8:	mov	r2, r9
   272dc:	str	r0, [sp]
   272e0:	mov	r0, sl
   272e4:	bl	2423c <main@@Base+0x10f5c>
   272e8:	mov	r4, r0
   272ec:	cmp	r0, r7
   272f0:	cmpne	r4, r9
   272f4:	beq	28f08 <main@@Base+0x15c28>
   272f8:	ldr	r6, [sp, #40]	; 0x28
   272fc:	ldr	r8, [sp, #44]	; 0x2c
   27300:	orrs	r0, r6, r8
   27304:	bne	27314 <main@@Base+0x14034>
   27308:	ldrb	r0, [sl, #8]
   2730c:	tst	r0, #2
   27310:	beq	27400 <main@@Base+0x14120>
   27314:	ldr	r0, [sl]
   27318:	mov	r1, #0
   2731c:	mov	r2, #8
   27320:	mov	r3, #8
   27324:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   27328:	cmp	r0, #0
   2732c:	beq	28f08 <main@@Base+0x15c28>
   27330:	stm	r0, {r6, r8}
   27334:	sub	r0, r9, r4
   27338:	cmp	r0, #2
   2733c:	bge	2740c <main@@Base+0x1412c>
   27340:	b	2743c <main@@Base+0x1415c>
   27344:	ldr	sl, [sp, #24]
   27348:	ldr	r5, [sp, #32]
   2734c:	ldr	r4, [sp, #4]
   27350:	bne	27360 <main@@Base+0x14080>
   27354:	ldrb	r0, [r7, #2]!
   27358:	cmp	r0, #32
   2735c:	bhi	27370 <main@@Base+0x14090>
   27360:	mov	r0, sl
   27364:	mov	r2, r9
   27368:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2736c:	mov	r7, r0
   27370:	cmp	r4, r7
   27374:	beq	273ec <main@@Base+0x1410c>
   27378:	mov	r6, #0
   2737c:	cmp	r7, r9
   27380:	str	r6, [fp, #-36]	; 0xffffffdc
   27384:	str	r6, [fp, #-40]	; 0xffffffd8
   27388:	str	r6, [fp, #-44]	; 0xffffffd4
   2738c:	str	r6, [sp, #40]	; 0x28
   27390:	beq	26c48 <main@@Base+0x13968>
   27394:	sub	r0, fp, #40	; 0x28
   27398:	mov	r1, r7
   2739c:	mov	r2, r9
   273a0:	add	r3, sp, #40	; 0x28
   273a4:	str	r0, [sp]
   273a8:	mov	r0, sl
   273ac:	bl	326c4 <flatcc_json_parser_integer@@Base>
   273b0:	cmp	r0, r7
   273b4:	beq	26c58 <main@@Base+0x13978>
   273b8:	mov	r4, r0
   273bc:	ldr	r0, [sp, #40]	; 0x28
   273c0:	cmp	r0, #0
   273c4:	beq	26c68 <main@@Base+0x13988>
   273c8:	mov	r0, sl
   273cc:	mov	r1, r4
   273d0:	mov	r2, r9
   273d4:	mov	r3, #8
   273d8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   273dc:	mov	r4, r0
   273e0:	cmp	r7, r4
   273e4:	bne	26cf8 <main@@Base+0x13a18>
   273e8:	b	26cb8 <main@@Base+0x139d8>
   273ec:	mov	r0, sl
   273f0:	mov	r1, r4
   273f4:	mov	r2, r9
   273f8:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   273fc:	mov	r4, r0
   27400:	sub	r0, r9, r4
   27404:	cmp	r0, #2
   27408:	blt	2743c <main@@Base+0x1415c>
   2740c:	ldrb	r0, [r4]
   27410:	cmp	r0, #32
   27414:	bls	27428 <main@@Base+0x14148>
   27418:	mov	r2, r4
   2741c:	cmp	r2, r9
   27420:	bne	27458 <main@@Base+0x14178>
   27424:	b	274d8 <main@@Base+0x141f8>
   27428:	bne	2743c <main@@Base+0x1415c>
   2742c:	mov	r2, r4
   27430:	ldrb	r0, [r2, #1]!
   27434:	cmp	r0, #32
   27438:	bhi	27450 <main@@Base+0x14170>
   2743c:	mov	r0, sl
   27440:	mov	r1, r4
   27444:	mov	r2, r9
   27448:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2744c:	mov	r2, r0
   27450:	cmp	r2, r9
   27454:	beq	274d8 <main@@Base+0x141f8>
   27458:	ldrb	r0, [r2]
   2745c:	cmp	r0, #44	; 0x2c
   27460:	bne	274f0 <main@@Base+0x14210>
   27464:	add	r1, r2, #1
   27468:	sub	r0, r9, r1
   2746c:	cmp	r0, #2
   27470:	blt	274a0 <main@@Base+0x141c0>
   27474:	ldrb	r0, [r1]
   27478:	cmp	r0, #32
   2747c:	bls	27490 <main@@Base+0x141b0>
   27480:	mov	r2, r1
   27484:	cmp	r2, r9
   27488:	bne	274b8 <main@@Base+0x141d8>
   2748c:	b	2752c <main@@Base+0x1424c>
   27490:	bne	274a0 <main@@Base+0x141c0>
   27494:	ldrb	r0, [r2, #2]!
   27498:	cmp	r0, #32
   2749c:	bhi	274b0 <main@@Base+0x141d0>
   274a0:	mov	r0, sl
   274a4:	mov	r2, r9
   274a8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   274ac:	mov	r2, r0
   274b0:	cmp	r2, r9
   274b4:	beq	2752c <main@@Base+0x1424c>
   274b8:	ldrb	r0, [r2]
   274bc:	cmp	r0, #125	; 0x7d
   274c0:	bne	26d3c <main@@Base+0x13a5c>
   274c4:	add	r1, r2, #1
   274c8:	sub	r0, r9, r1
   274cc:	cmp	r0, #2
   274d0:	blt	27564 <main@@Base+0x14284>
   274d4:	b	27508 <main@@Base+0x14228>
   274d8:	mov	r4, r9
   274dc:	ldr	r0, [sp, #20]
   274e0:	ldr	r0, [r0]
   274e4:	cmp	r0, #0
   274e8:	beq	27584 <main@@Base+0x142a4>
   274ec:	b	28f0c <main@@Base+0x15c2c>
   274f0:	cmp	r0, #125	; 0x7d
   274f4:	bne	27538 <main@@Base+0x14258>
   274f8:	add	r1, r2, #1
   274fc:	sub	r0, r9, r1
   27500:	cmp	r0, #2
   27504:	blt	27564 <main@@Base+0x14284>
   27508:	ldrb	r0, [r1]
   2750c:	cmp	r0, #32
   27510:	bls	27550 <main@@Base+0x14270>
   27514:	mov	r4, r1
   27518:	ldr	r0, [sp, #20]
   2751c:	ldr	r0, [r0]
   27520:	cmp	r0, #0
   27524:	beq	27584 <main@@Base+0x142a4>
   27528:	b	28f0c <main@@Base+0x15c2c>
   2752c:	mov	r0, sl
   27530:	mov	r1, r9
   27534:	b	27540 <main@@Base+0x14260>
   27538:	mov	r0, sl
   2753c:	mov	r1, r2
   27540:	mov	r2, r9
   27544:	mov	r3, #10
   27548:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2754c:	b	27570 <main@@Base+0x14290>
   27550:	bne	27564 <main@@Base+0x14284>
   27554:	ldrb	r0, [r2, #2]!
   27558:	cmp	r0, #32
   2755c:	mov	r4, r2
   27560:	bhi	27574 <main@@Base+0x14294>
   27564:	mov	r0, sl
   27568:	mov	r2, r9
   2756c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   27570:	mov	r4, r0
   27574:	ldr	r0, [sp, #20]
   27578:	ldr	r0, [r0]
   2757c:	cmp	r0, #0
   27580:	bne	28f0c <main@@Base+0x15c2c>
   27584:	ldr	r0, [sl]
   27588:	bl	2da14 <flatcc_builder_end_table@@Base>
   2758c:	cmp	r0, #0
   27590:	beq	28f0c <main@@Base+0x15c2c>
   27594:	mov	r7, r0
   27598:	ldr	r0, [sl]
   2759c:	mov	r1, #1
   275a0:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   275a4:	cmp	r0, #0
   275a8:	bne	27614 <main@@Base+0x14334>
   275ac:	b	28f24 <main@@Base+0x15c44>
   275b0:	ldr	sl, [sp, #24]
   275b4:	ldr	r5, [sp, #32]
   275b8:	bne	275cc <main@@Base+0x142ec>
   275bc:	ldrb	r0, [r2, #2]!
   275c0:	cmp	r0, #32
   275c4:	mov	r4, r2
   275c8:	bhi	275dc <main@@Base+0x142fc>
   275cc:	mov	r0, sl
   275d0:	mov	r2, r9
   275d4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   275d8:	mov	r4, r0
   275dc:	ldr	r0, [sp, #20]
   275e0:	ldr	r0, [r0]
   275e4:	cmp	r0, #0
   275e8:	bne	28f0c <main@@Base+0x15c2c>
   275ec:	ldr	r0, [sl]
   275f0:	bl	2da14 <flatcc_builder_end_table@@Base>
   275f4:	cmp	r0, #0
   275f8:	beq	28f0c <main@@Base+0x15c2c>
   275fc:	mov	r7, r0
   27600:	ldr	r0, [sl]
   27604:	mov	r1, #2
   27608:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   2760c:	cmp	r0, #0
   27610:	beq	28f24 <main@@Base+0x15c44>
   27614:	str	r7, [r0]
   27618:	sub	r0, r9, r4
   2761c:	cmp	r0, #2
   27620:	bge	25e90 <main@@Base+0x12bb0>
   27624:	b	25f00 <main@@Base+0x12c20>
   27628:	mov	r4, r9
   2762c:	cmp	r8, r4
   27630:	bne	276c0 <main@@Base+0x143e0>
   27634:	b	27688 <main@@Base+0x143a8>
   27638:	mov	r4, r8
   2763c:	cmp	r8, r4
   27640:	bne	276c0 <main@@Base+0x143e0>
   27644:	b	27688 <main@@Base+0x143a8>
   27648:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2764c:	cmp	r0, #0
   27650:	beq	27678 <main@@Base+0x14398>
   27654:	ldr	r0, [sp, #24]
   27658:	mov	r1, r4
   2765c:	mov	r2, r9
   27660:	mov	r3, #7
   27664:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27668:	mov	r4, r0
   2766c:	cmp	r8, r4
   27670:	bne	276c0 <main@@Base+0x143e0>
   27674:	b	27688 <main@@Base+0x143a8>
   27678:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2767c:	str	r5, [fp, #-44]	; 0xffffffd4
   27680:	cmp	r8, r4
   27684:	bne	276c0 <main@@Base+0x143e0>
   27688:	sub	r0, fp, #44	; 0x2c
   2768c:	mov	r1, r8
   27690:	mov	r2, r9
   27694:	str	r0, [sp]
   27698:	movw	r0, #33272	; 0x81f8
   2769c:	movt	r0, #4
   276a0:	add	r3, r0, #60	; 0x3c
   276a4:	ldr	r0, [sp, #24]
   276a8:	bl	244d0 <main@@Base+0x111f0>
   276ac:	mov	r4, r0
   276b0:	cmp	r0, r8
   276b4:	cmpne	r4, r9
   276b8:	beq	28f08 <main@@Base+0x15c28>
   276bc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   276c0:	cmp	r5, #0
   276c4:	bne	276d8 <main@@Base+0x143f8>
   276c8:	ldr	r0, [sp, #24]
   276cc:	ldrb	r0, [r0, #8]
   276d0:	tst	r0, #2
   276d4:	beq	276fc <main@@Base+0x1441c>
   276d8:	ldr	r0, [sp, #24]
   276dc:	mov	r1, #8
   276e0:	mov	r2, #4
   276e4:	mov	r3, #4
   276e8:	ldr	r0, [r0]
   276ec:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   276f0:	cmp	r0, #0
   276f4:	beq	28f08 <main@@Base+0x15c28>
   276f8:	str	r5, [r0]
   276fc:	ldr	sl, [sp, #24]
   27700:	b	28c7c <main@@Base+0x1599c>
   27704:	cmp	r2, r9
   27708:	mov	sl, r9
   2770c:	beq	27760 <main@@Base+0x14480>
   27710:	ldrb	r0, [r2]
   27714:	cmp	r0, #46	; 0x2e
   27718:	beq	27734 <main@@Base+0x14454>
   2771c:	cmp	r0, #34	; 0x22
   27720:	bne	27750 <main@@Base+0x14470>
   27724:	ldr	r0, [sp, #28]
   27728:	mov	r1, #0
   2772c:	add	sl, r2, #1
   27730:	b	2775c <main@@Base+0x1447c>
   27734:	ldr	r0, [sp, #24]
   27738:	mov	r1, r2
   2773c:	mov	r2, r9
   27740:	mov	r3, #5
   27744:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27748:	mov	sl, r0
   2774c:	b	27760 <main@@Base+0x14480>
   27750:	ldr	r0, [sp, #28]
   27754:	mov	r1, #1
   27758:	mov	sl, r2
   2775c:	str	r1, [r0]
   27760:	sub	r8, r9, sl
   27764:	mov	r0, #8
   27768:	cmp	r8, #8
   2776c:	movcc	r0, r8
   27770:	and	r0, r0, #15
   27774:	sub	r3, r0, #1
   27778:	cmp	r3, #7
   2777c:	bhi	27e54 <main@@Base+0x14b74>
   27780:	add	r5, pc, #32
   27784:	mov	r0, #0
   27788:	mov	ip, #0
   2778c:	mov	lr, #0
   27790:	mov	r7, #0
   27794:	mov	r2, #0
   27798:	mov	r6, #0
   2779c:	mov	r4, #0
   277a0:	mov	r1, #0
   277a4:	ldr	pc, [r5, r3, lsl #2]
   277a8:	andeq	r7, r2, ip, lsl #16
   277ac:	andeq	r7, r2, r4, lsl #16
   277b0:	strdeq	r7, [r2], -ip
   277b4:	strdeq	r7, [r2], -r4
   277b8:	andeq	r7, r2, r8, ror #15
   277bc:	ldrdeq	r7, [r2], -ip
   277c0:	andeq	r7, r2, ip, asr #15
   277c4:	andeq	r7, r2, r8, asr #15
   277c8:	ldrb	ip, [sl, #7]
   277cc:	ldrb	r1, [sl, #6]
   277d0:	mov	lr, r0
   277d4:	orr	r1, ip, r1, lsl #8
   277d8:	mov	r0, r1
   277dc:	ldrb	r1, [sl, #5]
   277e0:	mov	r7, lr
   277e4:	orr	r0, r0, r1, lsl #16
   277e8:	ldrb	r1, [sl, #4]
   277ec:	mov	r2, r7
   277f0:	orr	r0, r0, r1, lsl #24
   277f4:	ldrb	r1, [sl, #3]
   277f8:	orr	r6, r1, r2
   277fc:	ldrb	r1, [sl, #2]
   27800:	orr	r4, r6, r1, lsl #8
   27804:	ldrb	r1, [sl, #1]
   27808:	orr	r1, r4, r1, lsl #16
   2780c:	ldrb	r2, [sl]
   27810:	orr	r7, r1, r2, lsl #24
   27814:	movw	r1, #25442	; 0x6362
   27818:	movt	r1, #25443	; 0x6363
   2781c:	cmp	r7, r1
   27820:	bhi	278c8 <main@@Base+0x145e8>
   27824:	movw	r1, #13108	; 0x3334
   27828:	movt	r1, #12594	; 0x3132
   2782c:	eor	r5, r0, r1
   27830:	movw	r1, #24929	; 0x6161
   27834:	movt	r1, #24929	; 0x6161
   27838:	eor	r0, r7, r1
   2783c:	orrs	r0, r5, r0
   27840:	bne	2793c <main@@Base+0x1465c>
   27844:	add	r7, sl, #8
   27848:	mov	r1, #8
   2784c:	mov	r2, #-268435456	; 0xf0000000
   27850:	sub	r0, r9, r7
   27854:	cmp	r0, #8
   27858:	movcc	r1, r0
   2785c:	add	r1, r2, r1, lsl #28
   27860:	asr	r1, r1, #28
   27864:	cmp	r1, #0
   27868:	blt	28c64 <main@@Base+0x15984>
   2786c:	ldrb	r1, [r7]
   27870:	cmp	r1, #53	; 0x35
   27874:	bne	28c64 <main@@Base+0x15984>
   27878:	cmp	r0, #2
   2787c:	blt	28c64 <main@@Base+0x15984>
   27880:	ldr	r2, [sp, #28]
   27884:	mov	r1, sl
   27888:	ldrb	r0, [r1, #9]!
   2788c:	ldr	r2, [r2]
   27890:	cmp	r2, #0
   27894:	beq	27ba0 <main@@Base+0x148c0>
   27898:	cmp	r0, #33	; 0x21
   2789c:	bcc	278a8 <main@@Base+0x145c8>
   278a0:	cmp	r0, #58	; 0x3a
   278a4:	bne	28c64 <main@@Base+0x15984>
   278a8:	ldr	r0, [sp, #28]
   278ac:	mov	r2, #0
   278b0:	str	r2, [r0]
   278b4:	ldr	r4, [sp, #24]
   278b8:	sub	r0, r9, r1
   278bc:	cmp	r0, #2
   278c0:	bge	27bbc <main@@Base+0x148dc>
   278c4:	b	2821c <main@@Base+0x14f3c>
   278c8:	movw	r1, #13108	; 0x3334
   278cc:	movt	r1, #12594	; 0x3132
   278d0:	eor	r5, r0, r1
   278d4:	ldr	r0, [sp, #16]
   278d8:	eor	r0, r7, r0
   278dc:	orrs	r0, r5, r0
   278e0:	bne	27998 <main@@Base+0x146b8>
   278e4:	ldr	r5, [sp, #32]
   278e8:	cmp	r8, #9
   278ec:	mov	r7, sl
   278f0:	blt	28098 <main@@Base+0x14db8>
   278f4:	ldr	r2, [sp, #28]
   278f8:	mov	r1, sl
   278fc:	ldrb	r0, [r1, #8]!
   27900:	ldr	r2, [r2]
   27904:	cmp	r2, #0
   27908:	beq	279fc <main@@Base+0x1471c>
   2790c:	cmp	r0, #33	; 0x21
   27910:	bcc	27920 <main@@Base+0x14640>
   27914:	cmp	r0, #58	; 0x3a
   27918:	mov	r7, sl
   2791c:	bne	28098 <main@@Base+0x14db8>
   27920:	ldr	r0, [sp, #28]
   27924:	mov	r2, #0
   27928:	str	r2, [r0]
   2792c:	sub	r0, r9, r1
   27930:	cmp	r0, #2
   27934:	bge	27a18 <main@@Base+0x14738>
   27938:	b	27ab8 <main@@Base+0x147d8>
   2793c:	teq	r7, r1
   27940:	bne	27c3c <main@@Base+0x1495c>
   27944:	cmp	r8, #5
   27948:	mov	r1, sl
   2794c:	blt	28328 <main@@Base+0x15048>
   27950:	ldr	r1, [sp, #28]
   27954:	mov	r2, sl
   27958:	ldrb	r0, [r2, #4]!
   2795c:	ldr	r1, [r1]
   27960:	cmp	r1, #0
   27964:	beq	27a34 <main@@Base+0x14754>
   27968:	cmp	r0, #33	; 0x21
   2796c:	bcc	2797c <main@@Base+0x1469c>
   27970:	cmp	r0, #58	; 0x3a
   27974:	mov	r1, sl
   27978:	bne	28328 <main@@Base+0x15048>
   2797c:	ldr	r0, [sp, #28]
   27980:	mov	r1, #0
   27984:	str	r1, [r0]
   27988:	sub	r0, r9, r2
   2798c:	cmp	r0, #2
   27990:	bge	27a50 <main@@Base+0x14770>
   27994:	b	27bec <main@@Base+0x1490c>
   27998:	movw	r0, #25443	; 0x6363
   2799c:	movt	r0, #25443	; 0x6363
   279a0:	teq	r7, r0
   279a4:	bne	27df0 <main@@Base+0x14b10>
   279a8:	cmp	r8, #5
   279ac:	mov	r1, sl
   279b0:	blt	28394 <main@@Base+0x150b4>
   279b4:	ldr	r1, [sp, #28]
   279b8:	mov	r2, sl
   279bc:	ldrb	r0, [r2, #4]!
   279c0:	ldr	r1, [r1]
   279c4:	cmp	r1, #0
   279c8:	beq	27a6c <main@@Base+0x1478c>
   279cc:	cmp	r0, #33	; 0x21
   279d0:	bcc	279e0 <main@@Base+0x14700>
   279d4:	cmp	r0, #58	; 0x3a
   279d8:	mov	r1, sl
   279dc:	bne	28394 <main@@Base+0x150b4>
   279e0:	ldr	r0, [sp, #28]
   279e4:	mov	r1, #0
   279e8:	str	r1, [r0]
   279ec:	sub	r0, r9, r2
   279f0:	cmp	r0, #2
   279f4:	bge	27a88 <main@@Base+0x147a8>
   279f8:	b	27da0 <main@@Base+0x14ac0>
   279fc:	cmp	r0, #34	; 0x22
   27a00:	mov	r7, sl
   27a04:	bne	28098 <main@@Base+0x14db8>
   27a08:	add	r1, sl, #9
   27a0c:	sub	r0, r9, r1
   27a10:	cmp	r0, #2
   27a14:	blt	27ab8 <main@@Base+0x147d8>
   27a18:	ldrb	r0, [r1]
   27a1c:	cmp	r0, #32
   27a20:	bls	27aa4 <main@@Base+0x147c4>
   27a24:	mov	r7, r1
   27a28:	cmp	r7, r9
   27a2c:	bne	27ad0 <main@@Base+0x147f0>
   27a30:	b	27b88 <main@@Base+0x148a8>
   27a34:	cmp	r0, #34	; 0x22
   27a38:	mov	r1, sl
   27a3c:	bne	28328 <main@@Base+0x15048>
   27a40:	add	r2, sl, #5
   27a44:	sub	r0, r9, r2
   27a48:	cmp	r0, #2
   27a4c:	blt	27bec <main@@Base+0x1490c>
   27a50:	ldrb	r0, [r2]
   27a54:	cmp	r0, #32
   27a58:	bls	27bd8 <main@@Base+0x148f8>
   27a5c:	mov	r1, r2
   27a60:	cmp	r1, r9
   27a64:	bne	27c08 <main@@Base+0x14928>
   27a68:	b	27d08 <main@@Base+0x14a28>
   27a6c:	cmp	r0, #34	; 0x22
   27a70:	mov	r1, sl
   27a74:	bne	28394 <main@@Base+0x150b4>
   27a78:	add	r2, sl, #5
   27a7c:	sub	r0, r9, r2
   27a80:	cmp	r0, #2
   27a84:	blt	27da0 <main@@Base+0x14ac0>
   27a88:	ldrb	r0, [r2]
   27a8c:	cmp	r0, #32
   27a90:	bls	27d8c <main@@Base+0x14aac>
   27a94:	mov	r1, r2
   27a98:	cmp	r1, r9
   27a9c:	bne	27dbc <main@@Base+0x14adc>
   27aa0:	b	27e64 <main@@Base+0x14b84>
   27aa4:	bne	27ab8 <main@@Base+0x147d8>
   27aa8:	mov	r7, r1
   27aac:	ldrb	r0, [r7, #1]!
   27ab0:	cmp	r0, #32
   27ab4:	bhi	27ac8 <main@@Base+0x147e8>
   27ab8:	ldr	r0, [sp, #24]
   27abc:	mov	r2, r9
   27ac0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   27ac4:	mov	r7, r0
   27ac8:	cmp	r7, r9
   27acc:	beq	27b88 <main@@Base+0x148a8>
   27ad0:	ldrb	r0, [r7]
   27ad4:	cmp	r0, #58	; 0x3a
   27ad8:	bne	27b88 <main@@Base+0x148a8>
   27adc:	add	r1, r7, #1
   27ae0:	sub	r0, r9, r1
   27ae4:	cmp	r0, #2
   27ae8:	blt	28088 <main@@Base+0x14da8>
   27aec:	ldrb	r0, [r1]
   27af0:	cmp	r0, #32
   27af4:	bls	28078 <main@@Base+0x14d98>
   27af8:	mov	r7, r1
   27afc:	cmp	sl, r7
   27b00:	bne	280a0 <main@@Base+0x14dc0>
   27b04:	add	r7, sl, #8
   27b08:	mov	r1, #8
   27b0c:	mov	r2, #-268435456	; 0xf0000000
   27b10:	sub	r0, r9, r7
   27b14:	cmp	r0, #8
   27b18:	movcc	r1, r0
   27b1c:	add	r1, r2, r1, lsl #28
   27b20:	asr	r1, r1, #28
   27b24:	cmp	r1, #0
   27b28:	blt	28050 <main@@Base+0x14d70>
   27b2c:	ldrb	r1, [r7]
   27b30:	cmp	r1, #53	; 0x35
   27b34:	bne	28050 <main@@Base+0x14d70>
   27b38:	cmp	r0, #2
   27b3c:	blt	28c64 <main@@Base+0x15984>
   27b40:	ldr	r2, [sp, #28]
   27b44:	mov	r1, sl
   27b48:	ldrb	r0, [r1, #9]!
   27b4c:	ldr	r2, [r2]
   27b50:	cmp	r2, #0
   27b54:	beq	27eb0 <main@@Base+0x14bd0>
   27b58:	cmp	r0, #33	; 0x21
   27b5c:	bcc	27b68 <main@@Base+0x14888>
   27b60:	cmp	r0, #58	; 0x3a
   27b64:	bne	28c64 <main@@Base+0x15984>
   27b68:	ldr	r0, [sp, #28]
   27b6c:	mov	r2, #0
   27b70:	str	r2, [r0]
   27b74:	ldr	r4, [sp, #24]
   27b78:	sub	r0, r9, r1
   27b7c:	cmp	r0, #2
   27b80:	bge	27ecc <main@@Base+0x14bec>
   27b84:	b	28428 <main@@Base+0x15148>
   27b88:	ldr	r0, [sp, #24]
   27b8c:	mov	r1, r7
   27b90:	mov	r2, r9
   27b94:	mov	r3, #4
   27b98:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27b9c:	b	28094 <main@@Base+0x14db4>
   27ba0:	cmp	r0, #34	; 0x22
   27ba4:	bne	28c64 <main@@Base+0x15984>
   27ba8:	add	r1, sl, #10
   27bac:	ldr	r4, [sp, #24]
   27bb0:	sub	r0, r9, r1
   27bb4:	cmp	r0, #2
   27bb8:	blt	2821c <main@@Base+0x14f3c>
   27bbc:	ldrb	r0, [r1]
   27bc0:	cmp	r0, #32
   27bc4:	bls	28208 <main@@Base+0x14f28>
   27bc8:	mov	r8, r1
   27bcc:	cmp	r8, r9
   27bd0:	bne	28234 <main@@Base+0x14f54>
   27bd4:	b	2826c <main@@Base+0x14f8c>
   27bd8:	bne	27bec <main@@Base+0x1490c>
   27bdc:	mov	r1, r2
   27be0:	ldrb	r0, [r1, #1]!
   27be4:	cmp	r0, #32
   27be8:	bhi	27c00 <main@@Base+0x14920>
   27bec:	ldr	r0, [sp, #24]
   27bf0:	mov	r1, r2
   27bf4:	mov	r2, r9
   27bf8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   27bfc:	mov	r1, r0
   27c00:	cmp	r1, r9
   27c04:	beq	27d08 <main@@Base+0x14a28>
   27c08:	ldrb	r0, [r1]
   27c0c:	cmp	r0, #58	; 0x3a
   27c10:	bne	27d08 <main@@Base+0x14a28>
   27c14:	add	r2, r1, #1
   27c18:	sub	r0, r9, r2
   27c1c:	cmp	r0, #2
   27c20:	blt	28314 <main@@Base+0x15034>
   27c24:	ldrb	r0, [r2]
   27c28:	cmp	r0, #32
   27c2c:	bls	28304 <main@@Base+0x15024>
   27c30:	mov	r1, r2
   27c34:	cmp	sl, r1
   27c38:	bne	28330 <main@@Base+0x15050>
   27c3c:	movw	r1, #25186	; 0x6262
   27c40:	movt	r1, #25186	; 0x6262
   27c44:	eor	r0, r7, r1
   27c48:	orrs	r0, r5, r0
   27c4c:	bne	27ca8 <main@@Base+0x149c8>
   27c50:	ldr	r5, [sp, #32]
   27c54:	cmp	r8, #9
   27c58:	mov	r7, sl
   27c5c:	blt	284b4 <main@@Base+0x151d4>
   27c60:	ldr	r2, [sp, #28]
   27c64:	mov	r1, sl
   27c68:	ldrb	r0, [r1, #8]!
   27c6c:	ldr	r2, [r2]
   27c70:	cmp	r2, #0
   27c74:	beq	27d1c <main@@Base+0x14a3c>
   27c78:	cmp	r0, #33	; 0x21
   27c7c:	bcc	27c8c <main@@Base+0x149ac>
   27c80:	cmp	r0, #58	; 0x3a
   27c84:	mov	r7, sl
   27c88:	bne	284b4 <main@@Base+0x151d4>
   27c8c:	ldr	r0, [sp, #28]
   27c90:	mov	r2, #0
   27c94:	str	r2, [r0]
   27c98:	sub	r0, r9, r1
   27c9c:	cmp	r0, #2
   27ca0:	bge	27d38 <main@@Base+0x14a58>
   27ca4:	b	27f00 <main@@Base+0x14c20>
   27ca8:	teq	r7, r1
   27cac:	bne	27e54 <main@@Base+0x14b74>
   27cb0:	ldr	r5, [sp, #32]
   27cb4:	cmp	r8, #5
   27cb8:	mov	r1, sl
   27cbc:	blt	28958 <main@@Base+0x15678>
   27cc0:	ldr	r1, [sp, #28]
   27cc4:	mov	r2, sl
   27cc8:	ldrb	r0, [r2, #4]!
   27ccc:	ldr	r1, [r1]
   27cd0:	cmp	r1, #0
   27cd4:	beq	27d54 <main@@Base+0x14a74>
   27cd8:	cmp	r0, #33	; 0x21
   27cdc:	bcc	27cec <main@@Base+0x14a0c>
   27ce0:	cmp	r0, #58	; 0x3a
   27ce4:	mov	r1, sl
   27ce8:	bne	28958 <main@@Base+0x15678>
   27cec:	ldr	r0, [sp, #28]
   27cf0:	mov	r1, #0
   27cf4:	str	r1, [r0]
   27cf8:	sub	r0, r9, r2
   27cfc:	cmp	r0, #2
   27d00:	bge	27d70 <main@@Base+0x14a90>
   27d04:	b	28298 <main@@Base+0x14fb8>
   27d08:	ldr	r0, [sp, #24]
   27d0c:	mov	r2, r9
   27d10:	mov	r3, #4
   27d14:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27d18:	b	28324 <main@@Base+0x15044>
   27d1c:	cmp	r0, #34	; 0x22
   27d20:	mov	r7, sl
   27d24:	bne	284b4 <main@@Base+0x151d4>
   27d28:	add	r1, sl, #9
   27d2c:	sub	r0, r9, r1
   27d30:	cmp	r0, #2
   27d34:	blt	27f00 <main@@Base+0x14c20>
   27d38:	ldrb	r0, [r1]
   27d3c:	cmp	r0, #32
   27d40:	bls	27eec <main@@Base+0x14c0c>
   27d44:	mov	r7, r1
   27d48:	cmp	r7, r9
   27d4c:	bne	27f18 <main@@Base+0x14c38>
   27d50:	b	27f54 <main@@Base+0x14c74>
   27d54:	cmp	r0, #34	; 0x22
   27d58:	mov	r1, sl
   27d5c:	bne	28958 <main@@Base+0x15678>
   27d60:	add	r2, sl, #5
   27d64:	sub	r0, r9, r2
   27d68:	cmp	r0, #2
   27d6c:	blt	28298 <main@@Base+0x14fb8>
   27d70:	ldrb	r0, [r2]
   27d74:	cmp	r0, #32
   27d78:	bls	28284 <main@@Base+0x14fa4>
   27d7c:	mov	r1, r2
   27d80:	cmp	r1, r9
   27d84:	bne	282b4 <main@@Base+0x14fd4>
   27d88:	b	282f0 <main@@Base+0x15010>
   27d8c:	bne	27da0 <main@@Base+0x14ac0>
   27d90:	mov	r1, r2
   27d94:	ldrb	r0, [r1, #1]!
   27d98:	cmp	r0, #32
   27d9c:	bhi	27db4 <main@@Base+0x14ad4>
   27da0:	ldr	r0, [sp, #24]
   27da4:	mov	r1, r2
   27da8:	mov	r2, r9
   27dac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   27db0:	mov	r1, r0
   27db4:	cmp	r1, r9
   27db8:	beq	27e64 <main@@Base+0x14b84>
   27dbc:	ldrb	r0, [r1]
   27dc0:	cmp	r0, #58	; 0x3a
   27dc4:	bne	27e64 <main@@Base+0x14b84>
   27dc8:	add	r2, r1, #1
   27dcc:	sub	r0, r9, r2
   27dd0:	cmp	r0, #2
   27dd4:	blt	28380 <main@@Base+0x150a0>
   27dd8:	ldrb	r0, [r2]
   27ddc:	cmp	r0, #32
   27de0:	bls	28370 <main@@Base+0x15090>
   27de4:	mov	r1, r2
   27de8:	cmp	sl, r1
   27dec:	bne	2839c <main@@Base+0x150bc>
   27df0:	ldr	r0, [sp, #12]
   27df4:	eor	r0, r7, r0
   27df8:	orrs	r0, r5, r0
   27dfc:	bne	27e54 <main@@Base+0x14b74>
   27e00:	cmp	r8, #9
   27e04:	mov	r7, sl
   27e08:	blt	28630 <main@@Base+0x15350>
   27e0c:	ldr	r2, [sp, #28]
   27e10:	mov	r1, sl
   27e14:	ldrb	r0, [r1, #8]!
   27e18:	ldr	r2, [r2]
   27e1c:	cmp	r2, #0
   27e20:	beq	27e78 <main@@Base+0x14b98>
   27e24:	cmp	r0, #33	; 0x21
   27e28:	bcc	27e38 <main@@Base+0x14b58>
   27e2c:	cmp	r0, #58	; 0x3a
   27e30:	mov	r7, sl
   27e34:	bne	28630 <main@@Base+0x15350>
   27e38:	ldr	r0, [sp, #28]
   27e3c:	mov	r2, #0
   27e40:	str	r2, [r0]
   27e44:	sub	r0, r9, r1
   27e48:	cmp	r0, #2
   27e4c:	bge	27e94 <main@@Base+0x14bb4>
   27e50:	b	27f80 <main@@Base+0x14ca0>
   27e54:	ldr	r0, [sp, #24]
   27e58:	mov	r1, sl
   27e5c:	mov	sl, r0
   27e60:	b	28c70 <main@@Base+0x15990>
   27e64:	ldr	r0, [sp, #24]
   27e68:	mov	r2, r9
   27e6c:	mov	r3, #4
   27e70:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27e74:	b	28390 <main@@Base+0x150b0>
   27e78:	cmp	r0, #34	; 0x22
   27e7c:	mov	r7, sl
   27e80:	bne	28630 <main@@Base+0x15350>
   27e84:	add	r1, sl, #9
   27e88:	sub	r0, r9, r1
   27e8c:	cmp	r0, #2
   27e90:	blt	27f80 <main@@Base+0x14ca0>
   27e94:	ldrb	r0, [r1]
   27e98:	cmp	r0, #32
   27e9c:	bls	27f6c <main@@Base+0x14c8c>
   27ea0:	mov	r7, r1
   27ea4:	cmp	r7, r9
   27ea8:	bne	27f98 <main@@Base+0x14cb8>
   27eac:	b	28060 <main@@Base+0x14d80>
   27eb0:	cmp	r0, #34	; 0x22
   27eb4:	bne	28c64 <main@@Base+0x15984>
   27eb8:	add	r1, sl, #10
   27ebc:	ldr	r4, [sp, #24]
   27ec0:	sub	r0, r9, r1
   27ec4:	cmp	r0, #2
   27ec8:	blt	28428 <main@@Base+0x15148>
   27ecc:	ldrb	r0, [r1]
   27ed0:	cmp	r0, #32
   27ed4:	bls	28410 <main@@Base+0x15130>
   27ed8:	ldr	r4, [sp, #24]
   27edc:	mov	r8, r1
   27ee0:	cmp	r8, r9
   27ee4:	bne	28440 <main@@Base+0x15160>
   27ee8:	b	28478 <main@@Base+0x15198>
   27eec:	bne	27f00 <main@@Base+0x14c20>
   27ef0:	mov	r7, r1
   27ef4:	ldrb	r0, [r7, #1]!
   27ef8:	cmp	r0, #32
   27efc:	bhi	27f10 <main@@Base+0x14c30>
   27f00:	ldr	r0, [sp, #24]
   27f04:	mov	r2, r9
   27f08:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   27f0c:	mov	r7, r0
   27f10:	cmp	r7, r9
   27f14:	beq	27f54 <main@@Base+0x14c74>
   27f18:	ldrb	r0, [r7]
   27f1c:	cmp	r0, #58	; 0x3a
   27f20:	bne	27f54 <main@@Base+0x14c74>
   27f24:	add	r1, r7, #1
   27f28:	sub	r0, r9, r1
   27f2c:	cmp	r0, #2
   27f30:	blt	284a4 <main@@Base+0x151c4>
   27f34:	ldrb	r0, [r1]
   27f38:	cmp	r0, #32
   27f3c:	bls	28490 <main@@Base+0x151b0>
   27f40:	ldr	r5, [sp, #32]
   27f44:	mov	r7, r1
   27f48:	cmp	sl, r7
   27f4c:	bne	284bc <main@@Base+0x151dc>
   27f50:	b	289b0 <main@@Base+0x156d0>
   27f54:	ldr	r0, [sp, #24]
   27f58:	mov	r1, r7
   27f5c:	mov	r2, r9
   27f60:	mov	r3, #4
   27f64:	bl	30170 <flatcc_json_parser_set_error@@Base>
   27f68:	b	284b0 <main@@Base+0x151d0>
   27f6c:	bne	27f80 <main@@Base+0x14ca0>
   27f70:	mov	r7, r1
   27f74:	ldrb	r0, [r7, #1]!
   27f78:	cmp	r0, #32
   27f7c:	bhi	27f90 <main@@Base+0x14cb0>
   27f80:	ldr	r0, [sp, #24]
   27f84:	mov	r2, r9
   27f88:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   27f8c:	mov	r7, r0
   27f90:	cmp	r7, r9
   27f94:	beq	28060 <main@@Base+0x14d80>
   27f98:	ldrb	r0, [r7]
   27f9c:	cmp	r0, #58	; 0x3a
   27fa0:	bne	28060 <main@@Base+0x14d80>
   27fa4:	add	r1, r7, #1
   27fa8:	sub	r0, r9, r1
   27fac:	cmp	r0, #2
   27fb0:	blt	28620 <main@@Base+0x15340>
   27fb4:	ldrb	r0, [r1]
   27fb8:	cmp	r0, #32
   27fbc:	bls	28610 <main@@Base+0x15330>
   27fc0:	mov	r7, r1
   27fc4:	cmp	sl, r7
   27fc8:	bne	28638 <main@@Base+0x15358>
   27fcc:	add	r7, sl, #8
   27fd0:	mov	r1, #8
   27fd4:	mov	r2, #-268435456	; 0xf0000000
   27fd8:	ldr	r5, [sp, #32]
   27fdc:	sub	r0, r9, r7
   27fe0:	cmp	r0, #8
   27fe4:	movcc	r1, r0
   27fe8:	add	r1, r2, r1, lsl #28
   27fec:	asr	r1, r1, #28
   27ff0:	cmp	r1, #0
   27ff4:	blt	28050 <main@@Base+0x14d70>
   27ff8:	ldrb	r1, [r7]
   27ffc:	cmp	r1, #53	; 0x35
   28000:	bne	28050 <main@@Base+0x14d70>
   28004:	cmp	r0, #2
   28008:	blt	28c64 <main@@Base+0x15984>
   2800c:	ldr	r2, [sp, #28]
   28010:	mov	r1, sl
   28014:	ldrb	r0, [r1, #9]!
   28018:	ldr	r2, [r2]
   2801c:	cmp	r2, #0
   28020:	beq	283dc <main@@Base+0x150fc>
   28024:	cmp	r0, #33	; 0x21
   28028:	bcc	28034 <main@@Base+0x14d54>
   2802c:	cmp	r0, #58	; 0x3a
   28030:	bne	28c64 <main@@Base+0x15984>
   28034:	ldr	r0, [sp, #28]
   28038:	mov	r2, #0
   2803c:	str	r2, [r0]
   28040:	sub	r0, r9, r1
   28044:	cmp	r0, #2
   28048:	bge	283f4 <main@@Base+0x15114>
   2804c:	b	289ec <main@@Base+0x1570c>
   28050:	ldr	sl, [sp, #24]
   28054:	mov	r1, r7
   28058:	mov	r0, sl
   2805c:	b	289bc <main@@Base+0x156dc>
   28060:	ldr	r0, [sp, #24]
   28064:	mov	r1, r7
   28068:	mov	r2, r9
   2806c:	mov	r3, #4
   28070:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28074:	b	2862c <main@@Base+0x1534c>
   28078:	bne	28088 <main@@Base+0x14da8>
   2807c:	ldrb	r0, [r7, #2]!
   28080:	cmp	r0, #32
   28084:	bhi	28098 <main@@Base+0x14db8>
   28088:	ldr	r0, [sp, #24]
   2808c:	mov	r2, r9
   28090:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28094:	mov	r7, r0
   28098:	cmp	sl, r7
   2809c:	beq	27b04 <main@@Base+0x14824>
   280a0:	mov	r6, #0
   280a4:	cmp	r7, r9
   280a8:	str	r6, [fp, #-36]	; 0xffffffdc
   280ac:	str	r6, [fp, #-40]	; 0xffffffd8
   280b0:	str	r6, [sp, #44]	; 0x2c
   280b4:	str	r6, [sp, #40]	; 0x28
   280b8:	str	r6, [fp, #-44]	; 0xffffffd4
   280bc:	beq	2811c <main@@Base+0x14e3c>
   280c0:	ldr	sl, [sp, #24]
   280c4:	sub	r0, fp, #40	; 0x28
   280c8:	mov	r1, r7
   280cc:	mov	r2, r9
   280d0:	sub	r3, fp, #44	; 0x2c
   280d4:	str	r0, [sp]
   280d8:	mov	r0, sl
   280dc:	bl	326c4 <flatcc_json_parser_integer@@Base>
   280e0:	cmp	r0, r7
   280e4:	beq	28134 <main@@Base+0x14e54>
   280e8:	sub	r8, fp, #44	; 0x2c
   280ec:	mov	r4, r0
   280f0:	ldm	r8, {r0, r6, r8}
   280f4:	cmp	r0, #0
   280f8:	beq	2814c <main@@Base+0x14e6c>
   280fc:	subs	r0, r6, #1
   28100:	sbcs	r0, r8, #-2147483648	; 0x80000000
   28104:	bcc	28180 <main@@Base+0x14ea0>
   28108:	mov	r0, sl
   2810c:	mov	r1, r4
   28110:	mov	r2, r9
   28114:	mov	r3, #8
   28118:	b	28164 <main@@Base+0x14e84>
   2811c:	ldr	sl, [sp, #24]
   28120:	mov	r8, #0
   28124:	mov	r4, r9
   28128:	cmp	r7, r4
   2812c:	bne	281d4 <main@@Base+0x14ef4>
   28130:	b	28198 <main@@Base+0x14eb8>
   28134:	mov	r6, #0
   28138:	mov	r8, #0
   2813c:	mov	r4, r7
   28140:	cmp	r7, r4
   28144:	bne	281d4 <main@@Base+0x14ef4>
   28148:	b	28198 <main@@Base+0x14eb8>
   2814c:	cmn	r8, #1
   28150:	bgt	28188 <main@@Base+0x14ea8>
   28154:	mov	r0, sl
   28158:	mov	r1, r4
   2815c:	mov	r2, r9
   28160:	mov	r3, #7
   28164:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28168:	mov	r4, r0
   2816c:	mov	r6, #0
   28170:	mov	r8, #0
   28174:	cmp	r7, r4
   28178:	bne	281d4 <main@@Base+0x14ef4>
   2817c:	b	28198 <main@@Base+0x14eb8>
   28180:	rsbs	r6, r6, #0
   28184:	rsc	r8, r8, #0
   28188:	str	r6, [sp, #40]	; 0x28
   2818c:	str	r8, [sp, #44]	; 0x2c
   28190:	cmp	r7, r4
   28194:	bne	281d4 <main@@Base+0x14ef4>
   28198:	add	r0, sp, #40	; 0x28
   2819c:	mov	r1, r7
   281a0:	mov	r2, r9
   281a4:	str	r0, [sp]
   281a8:	movw	r0, #33272	; 0x81f8
   281ac:	movt	r0, #4
   281b0:	add	r3, r0, #24
   281b4:	mov	r0, sl
   281b8:	bl	2423c <main@@Base+0x10f5c>
   281bc:	mov	r4, r0
   281c0:	cmp	r0, r7
   281c4:	cmpne	r4, r9
   281c8:	beq	28f0c <main@@Base+0x15c2c>
   281cc:	ldr	r6, [sp, #40]	; 0x28
   281d0:	ldr	r8, [sp, #44]	; 0x2c
   281d4:	orrs	r0, r6, r8
   281d8:	bne	281e8 <main@@Base+0x14f08>
   281dc:	ldrb	r0, [sl, #8]
   281e0:	tst	r0, #2
   281e4:	beq	28c80 <main@@Base+0x159a0>
   281e8:	ldr	r0, [sl]
   281ec:	mov	r1, #5
   281f0:	mov	r2, #8
   281f4:	mov	r3, #8
   281f8:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   281fc:	cmp	r0, #0
   28200:	bne	287a0 <main@@Base+0x154c0>
   28204:	b	28f0c <main@@Base+0x15c2c>
   28208:	bne	2821c <main@@Base+0x14f3c>
   2820c:	mov	r8, r1
   28210:	ldrb	r0, [r8, #1]!
   28214:	cmp	r0, #32
   28218:	bhi	2822c <main@@Base+0x14f4c>
   2821c:	mov	r0, r4
   28220:	mov	r2, r9
   28224:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28228:	mov	r8, r0
   2822c:	cmp	r8, r9
   28230:	beq	2826c <main@@Base+0x14f8c>
   28234:	ldrb	r0, [r8]
   28238:	cmp	r0, #58	; 0x3a
   2823c:	bne	2826c <main@@Base+0x14f8c>
   28240:	add	r1, r8, #1
   28244:	sub	r0, r9, r1
   28248:	cmp	r0, #2
   2824c:	blt	287c4 <main@@Base+0x154e4>
   28250:	ldrb	r0, [r1]
   28254:	cmp	r0, #32
   28258:	bls	287b4 <main@@Base+0x154d4>
   2825c:	mov	r8, r1
   28260:	cmp	r7, r8
   28264:	bne	287dc <main@@Base+0x154fc>
   28268:	b	28c64 <main@@Base+0x15984>
   2826c:	mov	r0, r4
   28270:	mov	r1, r8
   28274:	mov	r2, r9
   28278:	mov	r3, #4
   2827c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28280:	b	287d0 <main@@Base+0x154f0>
   28284:	bne	28298 <main@@Base+0x14fb8>
   28288:	mov	r1, r2
   2828c:	ldrb	r0, [r1, #1]!
   28290:	cmp	r0, #32
   28294:	bhi	282ac <main@@Base+0x14fcc>
   28298:	ldr	r0, [sp, #24]
   2829c:	mov	r1, r2
   282a0:	mov	r2, r9
   282a4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   282a8:	mov	r1, r0
   282ac:	cmp	r1, r9
   282b0:	beq	282f0 <main@@Base+0x15010>
   282b4:	ldrb	r0, [r1]
   282b8:	cmp	r0, #58	; 0x3a
   282bc:	bne	282f0 <main@@Base+0x15010>
   282c0:	add	r2, r1, #1
   282c4:	sub	r0, r9, r2
   282c8:	cmp	r0, #2
   282cc:	blt	28944 <main@@Base+0x15664>
   282d0:	ldrb	r0, [r2]
   282d4:	cmp	r0, #32
   282d8:	bls	28930 <main@@Base+0x15650>
   282dc:	ldr	r5, [sp, #32]
   282e0:	mov	r1, r2
   282e4:	cmp	sl, r1
   282e8:	bne	28960 <main@@Base+0x15680>
   282ec:	b	289b0 <main@@Base+0x156d0>
   282f0:	ldr	r0, [sp, #24]
   282f4:	mov	r2, r9
   282f8:	mov	r3, #4
   282fc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28300:	b	28954 <main@@Base+0x15674>
   28304:	bne	28314 <main@@Base+0x15034>
   28308:	ldrb	r0, [r1, #2]!
   2830c:	cmp	r0, #32
   28310:	bhi	28328 <main@@Base+0x15048>
   28314:	ldr	r0, [sp, #24]
   28318:	mov	r1, r2
   2831c:	mov	r2, r9
   28320:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28324:	mov	r1, r0
   28328:	cmp	sl, r1
   2832c:	beq	27c3c <main@@Base+0x1495c>
   28330:	ldr	sl, [sp, #24]
   28334:	mov	r2, r9
   28338:	add	r3, sp, #36	; 0x24
   2833c:	mov	r0, sl
   28340:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   28344:	mov	r4, r0
   28348:	ldr	r0, [sp, #36]	; 0x24
   2834c:	ldr	r5, [sp, #32]
   28350:	cmp	r0, #0
   28354:	beq	28f0c <main@@Base+0x15c2c>
   28358:	ldr	r0, [sl]
   2835c:	mov	r1, #0
   28360:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   28364:	cmp	r0, #0
   28368:	bne	28998 <main@@Base+0x156b8>
   2836c:	b	28f0c <main@@Base+0x15c2c>
   28370:	bne	28380 <main@@Base+0x150a0>
   28374:	ldrb	r0, [r1, #2]!
   28378:	cmp	r0, #32
   2837c:	bhi	28394 <main@@Base+0x150b4>
   28380:	ldr	r0, [sp, #24]
   28384:	mov	r1, r2
   28388:	mov	r2, r9
   2838c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28390:	mov	r1, r0
   28394:	cmp	sl, r1
   28398:	beq	27df0 <main@@Base+0x14b10>
   2839c:	ldr	sl, [sp, #24]
   283a0:	mov	r2, r9
   283a4:	add	r3, sp, #36	; 0x24
   283a8:	mov	r0, sl
   283ac:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   283b0:	mov	r4, r0
   283b4:	ldr	r0, [sp, #36]	; 0x24
   283b8:	cmp	r0, #0
   283bc:	beq	28f0c <main@@Base+0x15c2c>
   283c0:	ldr	r0, [sl]
   283c4:	mov	r1, #4
   283c8:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   283cc:	ldr	r5, [sp, #32]
   283d0:	cmp	r0, #0
   283d4:	bne	28998 <main@@Base+0x156b8>
   283d8:	b	28f0c <main@@Base+0x15c2c>
   283dc:	cmp	r0, #34	; 0x22
   283e0:	bne	28c64 <main@@Base+0x15984>
   283e4:	add	r1, sl, #10
   283e8:	sub	r0, r9, r1
   283ec:	cmp	r0, #2
   283f0:	blt	289ec <main@@Base+0x1570c>
   283f4:	ldrb	r0, [r1]
   283f8:	cmp	r0, #32
   283fc:	bls	289d8 <main@@Base+0x156f8>
   28400:	mov	r8, r1
   28404:	cmp	r8, r9
   28408:	bne	28a04 <main@@Base+0x15724>
   2840c:	b	28a3c <main@@Base+0x1575c>
   28410:	ldr	r4, [sp, #24]
   28414:	bne	28428 <main@@Base+0x15148>
   28418:	mov	r8, r1
   2841c:	ldrb	r0, [r8, #1]!
   28420:	cmp	r0, #32
   28424:	bhi	28438 <main@@Base+0x15158>
   28428:	mov	r0, r4
   2842c:	mov	r2, r9
   28430:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28434:	mov	r8, r0
   28438:	cmp	r8, r9
   2843c:	beq	28478 <main@@Base+0x15198>
   28440:	ldrb	r0, [r8]
   28444:	cmp	r0, #58	; 0x3a
   28448:	bne	28478 <main@@Base+0x15198>
   2844c:	add	r1, r8, #1
   28450:	sub	r0, r9, r1
   28454:	cmp	r0, #2
   28458:	blt	28a64 <main@@Base+0x15784>
   2845c:	ldrb	r0, [r1]
   28460:	cmp	r0, #32
   28464:	bls	28a54 <main@@Base+0x15774>
   28468:	mov	r8, r1
   2846c:	cmp	r7, r8
   28470:	bne	28a7c <main@@Base+0x1579c>
   28474:	b	28c64 <main@@Base+0x15984>
   28478:	mov	r0, r4
   2847c:	mov	r1, r8
   28480:	mov	r2, r9
   28484:	mov	r3, #4
   28488:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2848c:	b	28a70 <main@@Base+0x15790>
   28490:	ldr	r5, [sp, #32]
   28494:	bne	284a4 <main@@Base+0x151c4>
   28498:	ldrb	r0, [r7, #2]!
   2849c:	cmp	r0, #32
   284a0:	bhi	284b4 <main@@Base+0x151d4>
   284a4:	ldr	r0, [sp, #24]
   284a8:	mov	r2, r9
   284ac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   284b0:	mov	r7, r0
   284b4:	cmp	sl, r7
   284b8:	beq	289b0 <main@@Base+0x156d0>
   284bc:	mov	r6, #0
   284c0:	cmp	r7, r9
   284c4:	str	r6, [fp, #-36]	; 0xffffffdc
   284c8:	str	r6, [fp, #-40]	; 0xffffffd8
   284cc:	str	r6, [sp, #44]	; 0x2c
   284d0:	str	r6, [sp, #40]	; 0x28
   284d4:	str	r6, [fp, #-44]	; 0xffffffd4
   284d8:	beq	28538 <main@@Base+0x15258>
   284dc:	ldr	sl, [sp, #24]
   284e0:	sub	r0, fp, #40	; 0x28
   284e4:	mov	r1, r7
   284e8:	mov	r2, r9
   284ec:	sub	r3, fp, #44	; 0x2c
   284f0:	str	r0, [sp]
   284f4:	mov	r0, sl
   284f8:	bl	326c4 <flatcc_json_parser_integer@@Base>
   284fc:	cmp	r0, r7
   28500:	beq	28550 <main@@Base+0x15270>
   28504:	sub	r8, fp, #44	; 0x2c
   28508:	mov	r4, r0
   2850c:	ldm	r8, {r0, r6, r8}
   28510:	cmp	r0, #0
   28514:	beq	28568 <main@@Base+0x15288>
   28518:	subs	r0, r6, #1
   2851c:	sbcs	r0, r8, #-2147483648	; 0x80000000
   28520:	bcc	2859c <main@@Base+0x152bc>
   28524:	mov	r0, sl
   28528:	mov	r1, r4
   2852c:	mov	r2, r9
   28530:	mov	r3, #8
   28534:	b	28580 <main@@Base+0x152a0>
   28538:	ldr	sl, [sp, #24]
   2853c:	mov	r8, #0
   28540:	mov	r4, r9
   28544:	cmp	r7, r4
   28548:	bne	285f0 <main@@Base+0x15310>
   2854c:	b	285b4 <main@@Base+0x152d4>
   28550:	mov	r6, #0
   28554:	mov	r8, #0
   28558:	mov	r4, r7
   2855c:	cmp	r7, r4
   28560:	bne	285f0 <main@@Base+0x15310>
   28564:	b	285b4 <main@@Base+0x152d4>
   28568:	cmn	r8, #1
   2856c:	bgt	285a4 <main@@Base+0x152c4>
   28570:	mov	r0, sl
   28574:	mov	r1, r4
   28578:	mov	r2, r9
   2857c:	mov	r3, #7
   28580:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28584:	mov	r4, r0
   28588:	mov	r6, #0
   2858c:	mov	r8, #0
   28590:	cmp	r7, r4
   28594:	bne	285f0 <main@@Base+0x15310>
   28598:	b	285b4 <main@@Base+0x152d4>
   2859c:	rsbs	r6, r6, #0
   285a0:	rsc	r8, r8, #0
   285a4:	str	r6, [sp, #40]	; 0x28
   285a8:	str	r8, [sp, #44]	; 0x2c
   285ac:	cmp	r7, r4
   285b0:	bne	285f0 <main@@Base+0x15310>
   285b4:	add	r0, sp, #40	; 0x28
   285b8:	mov	r1, r7
   285bc:	mov	r2, r9
   285c0:	str	r0, [sp]
   285c4:	movw	r0, #33272	; 0x81f8
   285c8:	movt	r0, #4
   285cc:	add	r3, r0, #12
   285d0:	mov	r0, sl
   285d4:	bl	2423c <main@@Base+0x10f5c>
   285d8:	mov	r4, r0
   285dc:	cmp	r0, r7
   285e0:	cmpne	r4, r9
   285e4:	beq	28f08 <main@@Base+0x15c28>
   285e8:	ldr	r6, [sp, #40]	; 0x28
   285ec:	ldr	r8, [sp, #44]	; 0x2c
   285f0:	orrs	r0, r6, r8
   285f4:	bne	28604 <main@@Base+0x15324>
   285f8:	ldrb	r0, [sl, #8]
   285fc:	tst	r0, #2
   28600:	beq	28c80 <main@@Base+0x159a0>
   28604:	ldr	r0, [sl]
   28608:	mov	r1, #3
   2860c:	b	2878c <main@@Base+0x154ac>
   28610:	bne	28620 <main@@Base+0x15340>
   28614:	ldrb	r0, [r7, #2]!
   28618:	cmp	r0, #32
   2861c:	bhi	28630 <main@@Base+0x15350>
   28620:	ldr	r0, [sp, #24]
   28624:	mov	r2, r9
   28628:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2862c:	mov	r7, r0
   28630:	cmp	sl, r7
   28634:	beq	27fcc <main@@Base+0x14cec>
   28638:	ldr	r5, [sp, #32]
   2863c:	mov	r6, #0
   28640:	cmp	r7, r9
   28644:	str	r6, [fp, #-36]	; 0xffffffdc
   28648:	str	r6, [fp, #-40]	; 0xffffffd8
   2864c:	str	r6, [sp, #44]	; 0x2c
   28650:	str	r6, [sp, #40]	; 0x28
   28654:	str	r6, [fp, #-44]	; 0xffffffd4
   28658:	beq	286b8 <main@@Base+0x153d8>
   2865c:	ldr	sl, [sp, #24]
   28660:	sub	r0, fp, #40	; 0x28
   28664:	mov	r1, r7
   28668:	mov	r2, r9
   2866c:	sub	r3, fp, #44	; 0x2c
   28670:	str	r0, [sp]
   28674:	mov	r0, sl
   28678:	bl	326c4 <flatcc_json_parser_integer@@Base>
   2867c:	cmp	r0, r7
   28680:	beq	286d0 <main@@Base+0x153f0>
   28684:	sub	r8, fp, #44	; 0x2c
   28688:	mov	r4, r0
   2868c:	ldm	r8, {r0, r6, r8}
   28690:	cmp	r0, #0
   28694:	beq	286e8 <main@@Base+0x15408>
   28698:	subs	r0, r6, #1
   2869c:	sbcs	r0, r8, #-2147483648	; 0x80000000
   286a0:	bcc	2871c <main@@Base+0x1543c>
   286a4:	mov	r0, sl
   286a8:	mov	r1, r4
   286ac:	mov	r2, r9
   286b0:	mov	r3, #8
   286b4:	b	28700 <main@@Base+0x15420>
   286b8:	ldr	sl, [sp, #24]
   286bc:	mov	r8, #0
   286c0:	mov	r4, r9
   286c4:	cmp	r7, r4
   286c8:	bne	28770 <main@@Base+0x15490>
   286cc:	b	28734 <main@@Base+0x15454>
   286d0:	mov	r6, #0
   286d4:	mov	r8, #0
   286d8:	mov	r4, r7
   286dc:	cmp	r7, r4
   286e0:	bne	28770 <main@@Base+0x15490>
   286e4:	b	28734 <main@@Base+0x15454>
   286e8:	cmn	r8, #1
   286ec:	bgt	28724 <main@@Base+0x15444>
   286f0:	mov	r0, sl
   286f4:	mov	r1, r4
   286f8:	mov	r2, r9
   286fc:	mov	r3, #7
   28700:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28704:	mov	r4, r0
   28708:	mov	r6, #0
   2870c:	mov	r8, #0
   28710:	cmp	r7, r4
   28714:	bne	28770 <main@@Base+0x15490>
   28718:	b	28734 <main@@Base+0x15454>
   2871c:	rsbs	r6, r6, #0
   28720:	rsc	r8, r8, #0
   28724:	str	r6, [sp, #40]	; 0x28
   28728:	str	r8, [sp, #44]	; 0x2c
   2872c:	cmp	r7, r4
   28730:	bne	28770 <main@@Base+0x15490>
   28734:	add	r0, sp, #40	; 0x28
   28738:	mov	r1, r7
   2873c:	mov	r2, r9
   28740:	str	r0, [sp]
   28744:	movw	r0, #33272	; 0x81f8
   28748:	movt	r0, #4
   2874c:	add	r3, r0, #48	; 0x30
   28750:	mov	r0, sl
   28754:	bl	2423c <main@@Base+0x10f5c>
   28758:	mov	r4, r0
   2875c:	cmp	r0, r7
   28760:	cmpne	r4, r9
   28764:	beq	28f08 <main@@Base+0x15c28>
   28768:	ldr	r6, [sp, #40]	; 0x28
   2876c:	ldr	r8, [sp, #44]	; 0x2c
   28770:	orrs	r0, r6, r8
   28774:	bne	28784 <main@@Base+0x154a4>
   28778:	ldrb	r0, [sl, #8]
   2877c:	tst	r0, #2
   28780:	beq	28c80 <main@@Base+0x159a0>
   28784:	ldr	r0, [sl]
   28788:	mov	r1, #7
   2878c:	mov	r2, #8
   28790:	mov	r3, #8
   28794:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   28798:	cmp	r0, #0
   2879c:	beq	28f08 <main@@Base+0x15c28>
   287a0:	stm	r0, {r6, r8}
   287a4:	sub	r0, r9, r4
   287a8:	cmp	r0, #2
   287ac:	bge	28c8c <main@@Base+0x159ac>
   287b0:	b	28cbc <main@@Base+0x159dc>
   287b4:	bne	287c4 <main@@Base+0x154e4>
   287b8:	ldrb	r0, [r8, #2]!
   287bc:	cmp	r0, #32
   287c0:	bhi	287d4 <main@@Base+0x154f4>
   287c4:	ldr	r0, [sp, #24]
   287c8:	mov	r2, r9
   287cc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   287d0:	mov	r8, r0
   287d4:	cmp	r7, r8
   287d8:	beq	28c64 <main@@Base+0x15984>
   287dc:	mov	r6, #0
   287e0:	cmp	r8, r9
   287e4:	str	r6, [fp, #-36]	; 0xffffffdc
   287e8:	str	r6, [fp, #-40]	; 0xffffffd8
   287ec:	str	r6, [fp, #-44]	; 0xffffffd4
   287f0:	str	r6, [sp, #40]	; 0x28
   287f4:	beq	28844 <main@@Base+0x15564>
   287f8:	ldr	sl, [sp, #24]
   287fc:	sub	r0, fp, #40	; 0x28
   28800:	mov	r1, r8
   28804:	mov	r2, r9
   28808:	add	r3, sp, #40	; 0x28
   2880c:	str	r0, [sp]
   28810:	mov	r0, sl
   28814:	bl	326c4 <flatcc_json_parser_integer@@Base>
   28818:	cmp	r0, r8
   2881c:	beq	28858 <main@@Base+0x15578>
   28820:	mov	r4, r0
   28824:	ldr	r0, [sp, #40]	; 0x28
   28828:	cmp	r0, #0
   2882c:	beq	28868 <main@@Base+0x15588>
   28830:	ldr	sl, [sp, #24]
   28834:	mov	r1, r4
   28838:	mov	r2, r9
   2883c:	mov	r3, #8
   28840:	b	28884 <main@@Base+0x155a4>
   28844:	mov	r4, r9
   28848:	ldr	sl, [sp, #24]
   2884c:	cmp	r8, r4
   28850:	bne	288d0 <main@@Base+0x155f0>
   28854:	b	28898 <main@@Base+0x155b8>
   28858:	mov	r4, r8
   2885c:	cmp	r8, r4
   28860:	bne	288d0 <main@@Base+0x155f0>
   28864:	b	28898 <main@@Base+0x155b8>
   28868:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2886c:	cmp	r0, #0
   28870:	beq	28918 <main@@Base+0x15638>
   28874:	ldr	sl, [sp, #24]
   28878:	mov	r1, r4
   2887c:	mov	r2, r9
   28880:	mov	r3, #7
   28884:	mov	r0, sl
   28888:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2888c:	mov	r4, r0
   28890:	cmp	r8, r4
   28894:	bne	288d0 <main@@Base+0x155f0>
   28898:	movw	r3, #33272	; 0x81f8
   2889c:	sub	r0, fp, #44	; 0x2c
   288a0:	mov	r1, r8
   288a4:	mov	r2, r9
   288a8:	str	r0, [sp]
   288ac:	mov	r0, sl
   288b0:	movt	r3, #4
   288b4:	bl	244d0 <main@@Base+0x111f0>
   288b8:	mov	r4, r0
   288bc:	cmp	r0, r8
   288c0:	cmpne	r4, r9
   288c4:	beq	28f08 <main@@Base+0x15c28>
   288c8:	ldr	r6, [fp, #-44]	; 0xffffffd4
   288cc:	ldr	sl, [sp, #24]
   288d0:	ldr	r5, [sp, #32]
   288d4:	cmp	r6, #0
   288d8:	bne	288e8 <main@@Base+0x15608>
   288dc:	ldrb	r0, [sl, #8]
   288e0:	tst	r0, #2
   288e4:	beq	28c80 <main@@Base+0x159a0>
   288e8:	ldr	r0, [sl]
   288ec:	mov	r1, #1
   288f0:	mov	r2, #4
   288f4:	mov	r3, #4
   288f8:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   288fc:	cmp	r0, #0
   28900:	beq	28f08 <main@@Base+0x15c28>
   28904:	str	r6, [r0]
   28908:	sub	r0, r9, r4
   2890c:	cmp	r0, #2
   28910:	bge	28c8c <main@@Base+0x159ac>
   28914:	b	28cbc <main@@Base+0x159dc>
   28918:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2891c:	str	r6, [fp, #-44]	; 0xffffffd4
   28920:	ldr	sl, [sp, #24]
   28924:	cmp	r8, r4
   28928:	bne	288d0 <main@@Base+0x155f0>
   2892c:	b	28898 <main@@Base+0x155b8>
   28930:	ldr	r5, [sp, #32]
   28934:	bne	28944 <main@@Base+0x15664>
   28938:	ldrb	r0, [r1, #2]!
   2893c:	cmp	r0, #32
   28940:	bhi	28958 <main@@Base+0x15678>
   28944:	ldr	r0, [sp, #24]
   28948:	mov	r1, r2
   2894c:	mov	r2, r9
   28950:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28954:	mov	r1, r0
   28958:	cmp	sl, r1
   2895c:	beq	289b0 <main@@Base+0x156d0>
   28960:	ldr	sl, [sp, #24]
   28964:	mov	r2, r9
   28968:	add	r3, sp, #36	; 0x24
   2896c:	mov	r0, sl
   28970:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   28974:	mov	r4, r0
   28978:	ldr	r0, [sp, #36]	; 0x24
   2897c:	cmp	r0, #0
   28980:	beq	28f0c <main@@Base+0x15c2c>
   28984:	ldr	r0, [sl]
   28988:	mov	r1, #2
   2898c:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   28990:	cmp	r0, #0
   28994:	beq	28f0c <main@@Base+0x15c2c>
   28998:	ldr	r1, [sp, #36]	; 0x24
   2899c:	str	r1, [r0]
   289a0:	sub	r0, r9, r4
   289a4:	cmp	r0, #2
   289a8:	bge	28c8c <main@@Base+0x159ac>
   289ac:	b	28cbc <main@@Base+0x159dc>
   289b0:	ldr	r0, [sp, #24]
   289b4:	mov	r1, sl
   289b8:	mov	sl, r0
   289bc:	mov	r2, r9
   289c0:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   289c4:	mov	r4, r0
   289c8:	sub	r0, r9, r4
   289cc:	cmp	r0, #2
   289d0:	bge	28c8c <main@@Base+0x159ac>
   289d4:	b	28cbc <main@@Base+0x159dc>
   289d8:	bne	289ec <main@@Base+0x1570c>
   289dc:	mov	r8, r1
   289e0:	ldrb	r0, [r8, #1]!
   289e4:	cmp	r0, #32
   289e8:	bhi	289fc <main@@Base+0x1571c>
   289ec:	ldr	r0, [sp, #24]
   289f0:	mov	r2, r9
   289f4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   289f8:	mov	r8, r0
   289fc:	cmp	r8, r9
   28a00:	beq	28a3c <main@@Base+0x1575c>
   28a04:	ldrb	r0, [r8]
   28a08:	cmp	r0, #58	; 0x3a
   28a0c:	bne	28a3c <main@@Base+0x1575c>
   28a10:	add	r1, r8, #1
   28a14:	sub	r0, r9, r1
   28a18:	cmp	r0, #2
   28a1c:	blt	28bd8 <main@@Base+0x158f8>
   28a20:	ldrb	r0, [r1]
   28a24:	cmp	r0, #32
   28a28:	bls	28bc8 <main@@Base+0x158e8>
   28a2c:	mov	r8, r1
   28a30:	cmp	r7, r8
   28a34:	bne	28bf0 <main@@Base+0x15910>
   28a38:	b	28c64 <main@@Base+0x15984>
   28a3c:	ldr	r0, [sp, #24]
   28a40:	mov	r1, r8
   28a44:	mov	r2, r9
   28a48:	mov	r3, #4
   28a4c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28a50:	b	28be4 <main@@Base+0x15904>
   28a54:	bne	28a64 <main@@Base+0x15784>
   28a58:	ldrb	r0, [r8, #2]!
   28a5c:	cmp	r0, #32
   28a60:	bhi	28a74 <main@@Base+0x15794>
   28a64:	ldr	r0, [sp, #24]
   28a68:	mov	r2, r9
   28a6c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28a70:	mov	r8, r0
   28a74:	cmp	r7, r8
   28a78:	beq	28c64 <main@@Base+0x15984>
   28a7c:	mov	r5, #0
   28a80:	cmp	r8, r9
   28a84:	str	r5, [fp, #-36]	; 0xffffffdc
   28a88:	str	r5, [fp, #-40]	; 0xffffffd8
   28a8c:	str	r5, [fp, #-44]	; 0xffffffd4
   28a90:	str	r5, [sp, #40]	; 0x28
   28a94:	beq	28af0 <main@@Base+0x15810>
   28a98:	sub	r0, fp, #40	; 0x28
   28a9c:	mov	r1, r8
   28aa0:	mov	r2, r9
   28aa4:	add	r3, sp, #40	; 0x28
   28aa8:	str	r0, [sp]
   28aac:	ldr	r0, [sp, #24]
   28ab0:	bl	326c4 <flatcc_json_parser_integer@@Base>
   28ab4:	cmp	r0, r8
   28ab8:	beq	28b00 <main@@Base+0x15820>
   28abc:	mov	r4, r0
   28ac0:	ldr	r0, [sp, #40]	; 0x28
   28ac4:	cmp	r0, #0
   28ac8:	beq	28b10 <main@@Base+0x15830>
   28acc:	ldr	r0, [sp, #24]
   28ad0:	mov	r1, r4
   28ad4:	mov	r2, r9
   28ad8:	mov	r3, #8
   28adc:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28ae0:	mov	r4, r0
   28ae4:	cmp	r8, r4
   28ae8:	bne	28b88 <main@@Base+0x158a8>
   28aec:	b	28b50 <main@@Base+0x15870>
   28af0:	mov	r4, r9
   28af4:	cmp	r8, r4
   28af8:	bne	28b88 <main@@Base+0x158a8>
   28afc:	b	28b50 <main@@Base+0x15870>
   28b00:	mov	r4, r8
   28b04:	cmp	r8, r4
   28b08:	bne	28b88 <main@@Base+0x158a8>
   28b0c:	b	28b50 <main@@Base+0x15870>
   28b10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28b14:	cmp	r0, #0
   28b18:	beq	28b40 <main@@Base+0x15860>
   28b1c:	ldr	r0, [sp, #24]
   28b20:	mov	r1, r4
   28b24:	mov	r2, r9
   28b28:	mov	r3, #7
   28b2c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28b30:	mov	r4, r0
   28b34:	cmp	r8, r4
   28b38:	bne	28b88 <main@@Base+0x158a8>
   28b3c:	b	28b50 <main@@Base+0x15870>
   28b40:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28b44:	str	r5, [fp, #-44]	; 0xffffffd4
   28b48:	cmp	r8, r4
   28b4c:	bne	28b88 <main@@Base+0x158a8>
   28b50:	sub	r0, fp, #44	; 0x2c
   28b54:	mov	r1, r8
   28b58:	mov	r2, r9
   28b5c:	str	r0, [sp]
   28b60:	movw	r0, #33272	; 0x81f8
   28b64:	movt	r0, #4
   28b68:	add	r3, r0, #36	; 0x24
   28b6c:	ldr	r0, [sp, #24]
   28b70:	bl	244d0 <main@@Base+0x111f0>
   28b74:	mov	r4, r0
   28b78:	cmp	r0, r8
   28b7c:	cmpne	r4, r9
   28b80:	beq	28f08 <main@@Base+0x15c28>
   28b84:	ldr	r5, [fp, #-44]	; 0xffffffd4
   28b88:	ldr	sl, [sp, #24]
   28b8c:	cmp	r5, #0
   28b90:	bne	28ba0 <main@@Base+0x158c0>
   28b94:	ldrb	r0, [sl, #8]
   28b98:	tst	r0, #2
   28b9c:	beq	28c7c <main@@Base+0x1599c>
   28ba0:	ldr	r0, [sl]
   28ba4:	mov	r1, #6
   28ba8:	mov	r2, #4
   28bac:	mov	r3, #4
   28bb0:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   28bb4:	cmp	r0, #0
   28bb8:	beq	28f08 <main@@Base+0x15c28>
   28bbc:	ldr	sl, [sp, #24]
   28bc0:	str	r5, [r0]
   28bc4:	b	28c7c <main@@Base+0x1599c>
   28bc8:	bne	28bd8 <main@@Base+0x158f8>
   28bcc:	ldrb	r0, [r8, #2]!
   28bd0:	cmp	r0, #32
   28bd4:	bhi	28be8 <main@@Base+0x15908>
   28bd8:	ldr	r0, [sp, #24]
   28bdc:	mov	r2, r9
   28be0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28be4:	mov	r8, r0
   28be8:	cmp	r7, r8
   28bec:	beq	28c64 <main@@Base+0x15984>
   28bf0:	mov	r5, #0
   28bf4:	cmp	r8, r9
   28bf8:	str	r5, [fp, #-36]	; 0xffffffdc
   28bfc:	str	r5, [fp, #-40]	; 0xffffffd8
   28c00:	str	r5, [fp, #-44]	; 0xffffffd4
   28c04:	str	r5, [sp, #40]	; 0x28
   28c08:	beq	27628 <main@@Base+0x14348>
   28c0c:	sub	r0, fp, #40	; 0x28
   28c10:	mov	r1, r8
   28c14:	mov	r2, r9
   28c18:	add	r3, sp, #40	; 0x28
   28c1c:	str	r0, [sp]
   28c20:	ldr	r0, [sp, #24]
   28c24:	bl	326c4 <flatcc_json_parser_integer@@Base>
   28c28:	cmp	r0, r8
   28c2c:	beq	27638 <main@@Base+0x14358>
   28c30:	mov	r4, r0
   28c34:	ldr	r0, [sp, #40]	; 0x28
   28c38:	cmp	r0, #0
   28c3c:	beq	27648 <main@@Base+0x14368>
   28c40:	ldr	r0, [sp, #24]
   28c44:	mov	r1, r4
   28c48:	mov	r2, r9
   28c4c:	mov	r3, #8
   28c50:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28c54:	mov	r4, r0
   28c58:	cmp	r8, r4
   28c5c:	bne	276c0 <main@@Base+0x143e0>
   28c60:	b	27688 <main@@Base+0x143a8>
   28c64:	ldr	sl, [sp, #24]
   28c68:	mov	r1, r7
   28c6c:	mov	r0, sl
   28c70:	mov	r2, r9
   28c74:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   28c78:	mov	r4, r0
   28c7c:	ldr	r5, [sp, #32]
   28c80:	sub	r0, r9, r4
   28c84:	cmp	r0, #2
   28c88:	blt	28cbc <main@@Base+0x159dc>
   28c8c:	ldrb	r0, [r4]
   28c90:	cmp	r0, #32
   28c94:	bls	28ca8 <main@@Base+0x159c8>
   28c98:	mov	r2, r4
   28c9c:	cmp	r2, r9
   28ca0:	bne	28cd8 <main@@Base+0x159f8>
   28ca4:	b	28d58 <main@@Base+0x15a78>
   28ca8:	bne	28cbc <main@@Base+0x159dc>
   28cac:	mov	r2, r4
   28cb0:	ldrb	r0, [r2, #1]!
   28cb4:	cmp	r0, #32
   28cb8:	bhi	28cd0 <main@@Base+0x159f0>
   28cbc:	mov	r0, sl
   28cc0:	mov	r1, r4
   28cc4:	mov	r2, r9
   28cc8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28ccc:	mov	r2, r0
   28cd0:	cmp	r2, r9
   28cd4:	beq	28d58 <main@@Base+0x15a78>
   28cd8:	ldrb	r0, [r2]
   28cdc:	cmp	r0, #44	; 0x2c
   28ce0:	bne	28d70 <main@@Base+0x15a90>
   28ce4:	add	r1, r2, #1
   28ce8:	sub	r0, r9, r1
   28cec:	cmp	r0, #2
   28cf0:	blt	28d20 <main@@Base+0x15a40>
   28cf4:	ldrb	r0, [r1]
   28cf8:	cmp	r0, #32
   28cfc:	bls	28d10 <main@@Base+0x15a30>
   28d00:	mov	r2, r1
   28d04:	cmp	r2, r9
   28d08:	bne	28d38 <main@@Base+0x15a58>
   28d0c:	b	28dac <main@@Base+0x15acc>
   28d10:	bne	28d20 <main@@Base+0x15a40>
   28d14:	ldrb	r0, [r2, #2]!
   28d18:	cmp	r0, #32
   28d1c:	bhi	28d30 <main@@Base+0x15a50>
   28d20:	mov	r0, sl
   28d24:	mov	r2, r9
   28d28:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28d2c:	mov	r2, r0
   28d30:	cmp	r2, r9
   28d34:	beq	28dac <main@@Base+0x15acc>
   28d38:	ldrb	r0, [r2]
   28d3c:	cmp	r0, #125	; 0x7d
   28d40:	bne	27704 <main@@Base+0x14424>
   28d44:	add	r1, r2, #1
   28d48:	sub	r0, r9, r1
   28d4c:	cmp	r0, #2
   28d50:	blt	28de4 <main@@Base+0x15b04>
   28d54:	b	28d88 <main@@Base+0x15aa8>
   28d58:	mov	r4, r9
   28d5c:	ldr	r0, [sp, #20]
   28d60:	ldr	r0, [r0]
   28d64:	cmp	r0, #0
   28d68:	beq	26034 <main@@Base+0x12d54>
   28d6c:	b	28f0c <main@@Base+0x15c2c>
   28d70:	cmp	r0, #125	; 0x7d
   28d74:	bne	28db8 <main@@Base+0x15ad8>
   28d78:	add	r1, r2, #1
   28d7c:	sub	r0, r9, r1
   28d80:	cmp	r0, #2
   28d84:	blt	28de4 <main@@Base+0x15b04>
   28d88:	ldrb	r0, [r1]
   28d8c:	cmp	r0, #32
   28d90:	bls	28dd0 <main@@Base+0x15af0>
   28d94:	mov	r4, r1
   28d98:	ldr	r0, [sp, #20]
   28d9c:	ldr	r0, [r0]
   28da0:	cmp	r0, #0
   28da4:	beq	26034 <main@@Base+0x12d54>
   28da8:	b	28f0c <main@@Base+0x15c2c>
   28dac:	mov	r0, sl
   28db0:	mov	r1, r9
   28db4:	b	28dc0 <main@@Base+0x15ae0>
   28db8:	mov	r0, sl
   28dbc:	mov	r1, r2
   28dc0:	mov	r2, r9
   28dc4:	mov	r3, #10
   28dc8:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28dcc:	b	28df0 <main@@Base+0x15b10>
   28dd0:	bne	28de4 <main@@Base+0x15b04>
   28dd4:	ldrb	r0, [r2, #2]!
   28dd8:	cmp	r0, #32
   28ddc:	mov	r4, r2
   28de0:	bhi	26024 <main@@Base+0x12d44>
   28de4:	mov	r0, sl
   28de8:	mov	r2, r9
   28dec:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28df0:	mov	r4, r0
   28df4:	ldr	r0, [sp, #20]
   28df8:	ldr	r0, [r0]
   28dfc:	cmp	r0, #0
   28e00:	beq	26034 <main@@Base+0x12d54>
   28e04:	b	28f0c <main@@Base+0x15c2c>
   28e08:	mov	r4, r9
   28e0c:	ldr	r0, [sp, #20]
   28e10:	ldr	r0, [r0]
   28e14:	cmp	r0, #0
   28e18:	bne	28f24 <main@@Base+0x15c44>
   28e1c:	b	28ec8 <main@@Base+0x15be8>
   28e20:	cmp	r0, #125	; 0x7d
   28e24:	bne	28ea0 <main@@Base+0x15bc0>
   28e28:	add	r4, r2, #1
   28e2c:	sub	r0, r9, r4
   28e30:	cmp	r0, #2
   28e34:	blt	28e8c <main@@Base+0x15bac>
   28e38:	b	28e58 <main@@Base+0x15b78>
   28e3c:	mov	r0, sl
   28e40:	mov	r1, r9
   28e44:	b	28ea8 <main@@Base+0x15bc8>
   28e48:	add	r4, r2, #1
   28e4c:	sub	r0, r9, r4
   28e50:	cmp	r0, #2
   28e54:	blt	28e8c <main@@Base+0x15bac>
   28e58:	ldrb	r0, [r4]
   28e5c:	cmp	r0, #32
   28e60:	bhi	28eb8 <main@@Base+0x15bd8>
   28e64:	bne	28e8c <main@@Base+0x15bac>
   28e68:	ldrb	r0, [r2, #2]!
   28e6c:	cmp	r0, #32
   28e70:	bls	28e8c <main@@Base+0x15bac>
   28e74:	mov	r4, r2
   28e78:	ldr	r0, [sp, #20]
   28e7c:	ldr	r0, [r0]
   28e80:	cmp	r0, #0
   28e84:	bne	28f24 <main@@Base+0x15c44>
   28e88:	b	28ec8 <main@@Base+0x15be8>
   28e8c:	mov	r0, sl
   28e90:	mov	r1, r4
   28e94:	mov	r2, r9
   28e98:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28e9c:	b	28eb4 <main@@Base+0x15bd4>
   28ea0:	mov	r0, sl
   28ea4:	mov	r1, r2
   28ea8:	mov	r2, r9
   28eac:	mov	r3, #10
   28eb0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28eb4:	mov	r4, r0
   28eb8:	ldr	r0, [sp, #20]
   28ebc:	ldr	r0, [r0]
   28ec0:	cmp	r0, #0
   28ec4:	bne	28f24 <main@@Base+0x15c44>
   28ec8:	ldr	r0, [sl]
   28ecc:	bl	2da14 <flatcc_builder_end_table@@Base>
   28ed0:	cmp	r0, #0
   28ed4:	str	r0, [r5]
   28ed8:	beq	28f24 <main@@Base+0x15c44>
   28edc:	mov	r0, r4
   28ee0:	sub	sp, fp, #28
   28ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28ee8:	bne	28ef8 <main@@Base+0x15c18>
   28eec:	ldrb	r0, [r4, #2]!
   28ef0:	cmp	r0, #32
   28ef4:	bhi	256b8 <main@@Base+0x123d8>
   28ef8:	mov	r0, sl
   28efc:	mov	r2, r9
   28f00:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   28f04:	b	256b4 <main@@Base+0x123d4>
   28f08:	ldr	sl, [sp, #24]
   28f0c:	mov	r0, sl
   28f10:	mov	r1, r4
   28f14:	mov	r2, r9
   28f18:	mov	r3, #33	; 0x21
   28f1c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28f20:	mov	r4, r0
   28f24:	mov	r0, sl
   28f28:	mov	r1, r4
   28f2c:	mov	r2, r9
   28f30:	mov	r3, #33	; 0x21
   28f34:	bl	30170 <flatcc_json_parser_set_error@@Base>
   28f38:	mov	r4, r0
   28f3c:	mov	r0, r4
   28f40:	sub	sp, fp, #28
   28f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28f4c:	add	fp, sp, #28
   28f50:	push	{r3}		; (str r3, [sp, #-4]!)
   28f54:	sub	r7, r2, r1
   28f58:	cmp	r7, #8
   28f5c:	movcs	r7, #8
   28f60:	and	r7, r7, #15
   28f64:	sub	r5, r7, #1
   28f68:	cmp	r5, #7
   28f6c:	bhi	29050 <main@@Base+0x15d70>
   28f70:	add	lr, pc, #32
   28f74:	mov	ip, #0
   28f78:	mov	r3, #0
   28f7c:	mov	r8, #0
   28f80:	mov	r9, #0
   28f84:	mov	sl, #0
   28f88:	mov	r7, #0
   28f8c:	mov	r4, #0
   28f90:	mov	r6, #0
   28f94:	ldr	pc, [lr, r5, lsl #2]
   28f98:	strdeq	r8, [r2], -ip
   28f9c:	strdeq	r8, [r2], -r4
   28fa0:	andeq	r8, r2, ip, ror #31
   28fa4:	andeq	r8, r2, r4, ror #31
   28fa8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   28fac:	andeq	r8, r2, ip, asr #31
   28fb0:			; <UNDEFINED> instruction: 0x00028fbc
   28fb4:			; <UNDEFINED> instruction: 0x00028fb8
   28fb8:	ldrb	r3, [r1, #7]
   28fbc:	ldrb	r7, [r1, #6]
   28fc0:	mov	r8, ip
   28fc4:	orr	r3, r3, r7, lsl #8
   28fc8:	mov	ip, r3
   28fcc:	ldrb	r3, [r1, #5]
   28fd0:	mov	r9, r8
   28fd4:	orr	ip, ip, r3, lsl #16
   28fd8:	ldrb	r3, [r1, #4]
   28fdc:	mov	sl, r9
   28fe0:	orr	ip, ip, r3, lsl #24
   28fe4:	ldrb	r3, [r1, #3]
   28fe8:	orr	r7, r3, sl
   28fec:	ldrb	r3, [r1, #2]
   28ff0:	orr	r4, r7, r3, lsl #8
   28ff4:	ldrb	r3, [r1, #1]
   28ff8:	orr	r6, r4, r3, lsl #16
   28ffc:	ldrb	r7, [r1]
   29000:	movw	r3, #29797	; 0x7465
   29004:	movt	r3, #24931	; 0x6163
   29008:	eor	r3, ip, r3
   2900c:	orr	r7, r6, r7, lsl #24
   29010:	movw	r6, #24946	; 0x6172
   29014:	movt	r6, #17256	; 0x4368
   29018:	eor	r7, r7, r6
   2901c:	orrs	r3, r3, r7
   29020:	bne	29050 <main@@Base+0x15d70>
   29024:	add	lr, r1, #8
   29028:	mov	r6, #-268435456	; 0xf0000000
   2902c:	sub	r7, r2, lr
   29030:	cmp	r7, #8
   29034:	mov	r3, r7
   29038:	movcs	r3, #8
   2903c:	add	r3, r6, r3, lsl #28
   29040:	asr	r3, r3, #28
   29044:	cmp	r3, #0
   29048:	cmpge	r7, #2
   2904c:	bge	2905c <main@@Base+0x15d7c>
   29050:	mov	r0, r1
   29054:	sub	sp, fp, #28
   29058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2905c:	ldrb	r3, [lr]
   29060:	cmp	r3, #114	; 0x72
   29064:	bne	29050 <main@@Base+0x15d70>
   29068:	ldrb	r3, [r1, #9]
   2906c:	mov	ip, lr
   29070:	cmp	r3, #46	; 0x2e
   29074:	addeq	ip, r1, #10
   29078:	cmp	ip, lr
   2907c:	beq	29050 <main@@Base+0x15d70>
   29080:	ldr	r3, [sp]
   29084:	mov	r1, ip
   29088:	sub	sp, fp, #28
   2908c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29090:	b	25320 <main@@Base+0x12040>
   29094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29098:	add	fp, sp, #28
   2909c:	sub	sp, sp, #44	; 0x2c
   290a0:	ldr	r7, [fp, #8]
   290a4:	mov	r9, r0
   290a8:	mov	r0, #0
   290ac:	mov	r8, r2
   290b0:	mov	r4, r1
   290b4:	cmp	r3, #11
   290b8:	str	r0, [r7]
   290bc:	bhi	29110 <main@@Base+0x15e30>
   290c0:	add	r0, pc, #0
   290c4:	ldr	pc, [r0, r3, lsl #2]
   290c8:	andeq	r9, r2, r8, asr r1
   290cc:	andeq	r9, r2, r0, lsr r1
   290d0:	muleq	r2, r4, r1
   290d4:	andeq	r9, r2, r0, lsr r1
   290d8:	andeq	r9, r2, r0, lsr r1
   290dc:	andeq	r9, r2, r0, lsr r1
   290e0:	andeq	r9, r2, r0, lsr r1
   290e4:	andeq	r9, r2, r0, lsr r1
   290e8:	strdeq	r9, [r2], -r4
   290ec:	strdeq	r9, [r2], -r8
   290f0:	strdeq	r9, [r2], -r8
   290f4:	andeq	r9, r2, r8, lsl r1
   290f8:	mov	r0, r9
   290fc:	mov	r1, r4
   29100:	mov	r2, r8
   29104:	mov	r3, r7
   29108:	bl	2a074 <main@@Base+0x16d94>
   2910c:	b	292f8 <main@@Base+0x16018>
   29110:	cmp	r3, #255	; 0xff
   29114:	bne	29130 <main@@Base+0x15e50>
   29118:	mov	r0, r9
   2911c:	mov	r1, r4
   29120:	mov	r2, r8
   29124:	mov	r3, r7
   29128:	bl	32c84 <flatcc_json_parser_build_string@@Base>
   2912c:	b	292f8 <main@@Base+0x16018>
   29130:	ldrb	r0, [r9, #8]
   29134:	tst	r0, #1
   29138:	bne	2925c <main@@Base+0x15f7c>
   2913c:	mov	r0, r9
   29140:	mov	r1, r4
   29144:	mov	r2, r8
   29148:	mov	r3, #15
   2914c:	sub	sp, fp, #28
   29150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29154:	b	30170 <flatcc_json_parser_set_error@@Base>
   29158:	sub	r0, r8, r4
   2915c:	cmp	r0, #4
   29160:	blt	29178 <main@@Base+0x15e98>
   29164:	ldr	r0, [r4]
   29168:	movw	r1, #30062	; 0x756e
   2916c:	movt	r1, #27756	; 0x6c6c
   29170:	cmp	r0, r1
   29174:	beq	29344 <main@@Base+0x16064>
   29178:	mov	r0, r9
   2917c:	mov	r1, r4
   29180:	mov	r2, r8
   29184:	mov	r3, #26
   29188:	sub	sp, fp, #28
   2918c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29190:	b	30170 <flatcc_json_parser_set_error@@Base>
   29194:	mov	r0, #0
   29198:	mov	r1, #1
   2919c:	str	r0, [r7]
   291a0:	ldr	r0, [r9]
   291a4:	bl	2d064 <flatcc_builder_start_table@@Base>
   291a8:	cmp	r0, #0
   291ac:	bne	292e4 <main@@Base+0x16004>
   291b0:	cmp	r4, r8
   291b4:	beq	292c0 <main@@Base+0x15fe0>
   291b8:	ldrb	r0, [r4]
   291bc:	cmp	r0, #123	; 0x7b
   291c0:	bne	292c0 <main@@Base+0x15fe0>
   291c4:	add	r1, r4, #1
   291c8:	sub	r0, r8, r1
   291cc:	cmp	r0, #2
   291d0:	blt	298e4 <main@@Base+0x16604>
   291d4:	ldrb	r0, [r1]
   291d8:	cmp	r0, #32
   291dc:	bls	298d4 <main@@Base+0x165f4>
   291e0:	mov	r4, r1
   291e4:	cmp	r4, r8
   291e8:	mov	r2, r8
   291ec:	bne	29900 <main@@Base+0x16620>
   291f0:	b	29940 <main@@Base+0x16660>
   291f4:	mov	r0, #0
   291f8:	mov	r1, #2
   291fc:	mov	r2, #2
   29200:	str	r0, [r7]
   29204:	ldr	r0, [r9]
   29208:	bl	2bd8c <flatcc_builder_start_struct@@Base>
   2920c:	cmp	r0, #0
   29210:	beq	292b4 <main@@Base+0x15fd4>
   29214:	cmp	r4, r8
   29218:	beq	29274 <main@@Base+0x15f94>
   2921c:	ldrb	r1, [r4]
   29220:	cmp	r1, #123	; 0x7b
   29224:	bne	29274 <main@@Base+0x15f94>
   29228:	add	r1, r4, #1
   2922c:	str	r0, [sp, #12]
   29230:	sub	r0, r8, r1
   29234:	cmp	r0, #2
   29238:	blt	29364 <main@@Base+0x16084>
   2923c:	ldrb	r0, [r1]
   29240:	cmp	r0, #32
   29244:	bls	29354 <main@@Base+0x16074>
   29248:	mov	r4, r1
   2924c:	cmp	r4, r8
   29250:	mov	r2, r8
   29254:	bne	29380 <main@@Base+0x160a0>
   29258:	b	293c0 <main@@Base+0x160e0>
   2925c:	mov	r0, r9
   29260:	mov	r1, r4
   29264:	mov	r2, r8
   29268:	sub	sp, fp, #28
   2926c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29270:	b	30d30 <flatcc_json_parser_generic_json@@Base>
   29274:	mov	r0, r9
   29278:	mov	r1, r4
   2927c:	mov	r2, r8
   29280:	mov	r3, #21
   29284:	bl	30170 <flatcc_json_parser_set_error@@Base>
   29288:	mov	r4, r0
   2928c:	cmp	r4, r8
   29290:	mov	r1, r8
   29294:	beq	292b8 <main@@Base+0x15fd8>
   29298:	ldr	r0, [r9]
   2929c:	bl	2be80 <flatcc_builder_end_struct@@Base>
   292a0:	cmp	r0, #0
   292a4:	mov	r1, r4
   292a8:	str	r0, [r7]
   292ac:	bne	292fc <main@@Base+0x1601c>
   292b0:	b	292b8 <main@@Base+0x15fd8>
   292b4:	mov	r1, r4
   292b8:	mov	r0, r9
   292bc:	b	292ec <main@@Base+0x1600c>
   292c0:	mov	r0, r9
   292c4:	mov	r1, r4
   292c8:	mov	r2, r8
   292cc:	mov	r3, #21
   292d0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   292d4:	mov	r4, r0
   292d8:	ldr	r0, [r9, #24]
   292dc:	cmp	r0, #0
   292e0:	beq	29fd8 <main@@Base+0x16cf8>
   292e4:	mov	r0, r9
   292e8:	mov	r1, r4
   292ec:	mov	r2, r8
   292f0:	mov	r3, #33	; 0x21
   292f4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   292f8:	mov	r4, r0
   292fc:	ldr	r0, [r9, #24]
   29300:	cmp	r0, #0
   29304:	bne	29314 <main@@Base+0x16034>
   29308:	ldr	r0, [r7]
   2930c:	cmp	r0, #0
   29310:	beq	29320 <main@@Base+0x16040>
   29314:	mov	r0, r4
   29318:	sub	sp, fp, #28
   2931c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29320:	mov	r0, r9
   29324:	mov	r1, r4
   29328:	mov	r2, r8
   2932c:	mov	r3, #33	; 0x21
   29330:	bl	30170 <flatcc_json_parser_set_error@@Base>
   29334:	mov	r4, r0
   29338:	mov	r0, r4
   2933c:	sub	sp, fp, #28
   29340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29344:	add	r4, r4, #4
   29348:	mov	r0, r4
   2934c:	sub	sp, fp, #28
   29350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29354:	bne	29364 <main@@Base+0x16084>
   29358:	ldrb	r0, [r4, #2]!
   2935c:	cmp	r0, #32
   29360:	bhi	29374 <main@@Base+0x16094>
   29364:	mov	r0, r9
   29368:	mov	r2, r8
   2936c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   29370:	mov	r4, r0
   29374:	cmp	r4, r8
   29378:	mov	r2, r8
   2937c:	beq	293c0 <main@@Base+0x160e0>
   29380:	ldrb	r0, [r4]
   29384:	cmp	r0, #125	; 0x7d
   29388:	bne	293bc <main@@Base+0x160dc>
   2938c:	add	r1, r4, #1
   29390:	sub	r0, r8, r1
   29394:	cmp	r0, #2
   29398:	blt	29980 <main@@Base+0x166a0>
   2939c:	ldrb	r0, [r1]
   293a0:	cmp	r0, #32
   293a4:	bhi	298b4 <main@@Base+0x165d4>
   293a8:	bne	29980 <main@@Base+0x166a0>
   293ac:	ldrb	r0, [r4, #2]!
   293b0:	cmp	r0, #32
   293b4:	bhi	2928c <main@@Base+0x15fac>
   293b8:	b	29980 <main@@Base+0x166a0>
   293bc:	mov	r2, r4
   293c0:	movw	r0, #33272	; 0x81f8
   293c4:	movt	r0, #4
   293c8:	add	r0, r0, #108	; 0x6c
   293cc:	str	r0, [sp, #8]
   293d0:	str	r9, [sp, #20]
   293d4:	b	29560 <main@@Base+0x16280>
   293d8:	bne	293e8 <main@@Base+0x16108>
   293dc:	ldrb	r0, [r2, #2]!
   293e0:	cmp	r0, #32
   293e4:	bhi	293f8 <main@@Base+0x16118>
   293e8:	mov	r0, r9
   293ec:	mov	r2, r8
   293f0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   293f4:	mov	r2, r0
   293f8:	cmp	r2, r8
   293fc:	bne	2984c <main@@Base+0x1656c>
   29400:	b	298c8 <main@@Base+0x165e8>
   29404:	mov	r0, r9
   29408:	mov	r1, r5
   2940c:	mov	r2, r8
   29410:	mov	r3, #4
   29414:	bl	30170 <flatcc_json_parser_set_error@@Base>
   29418:	b	29438 <main@@Base+0x16158>
   2941c:	bne	2942c <main@@Base+0x1614c>
   29420:	ldrb	r0, [r5, #2]!
   29424:	cmp	r0, #32
   29428:	bhi	2943c <main@@Base+0x1615c>
   2942c:	mov	r0, r9
   29430:	mov	r2, r8
   29434:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   29438:	mov	r5, r0
   2943c:	cmp	r4, r5
   29440:	beq	297e0 <main@@Base+0x16500>
   29444:	mov	r4, #0
   29448:	cmp	r5, r8
   2944c:	str	r4, [sp, #36]	; 0x24
   29450:	str	r4, [sp, #32]
   29454:	strh	r4, [sp, #24]
   29458:	str	r4, [sp, #28]
   2945c:	beq	294b4 <main@@Base+0x161d4>
   29460:	add	r0, sp, #32
   29464:	mov	r1, r5
   29468:	mov	r2, r8
   2946c:	add	r3, sp, #28
   29470:	str	r0, [sp]
   29474:	mov	r0, r9
   29478:	bl	326c4 <flatcc_json_parser_integer@@Base>
   2947c:	cmp	r0, r5
   29480:	beq	294c4 <main@@Base+0x161e4>
   29484:	mov	r1, r0
   29488:	ldr	r0, [sp, #28]
   2948c:	cmp	r0, #0
   29490:	beq	294d4 <main@@Base+0x161f4>
   29494:	mov	r0, r9
   29498:	mov	r2, r8
   2949c:	mov	r3, #8
   294a0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   294a4:	mov	r1, r0
   294a8:	cmp	r5, r1
   294ac:	bne	29548 <main@@Base+0x16268>
   294b0:	b	29518 <main@@Base+0x16238>
   294b4:	mov	r1, r8
   294b8:	cmp	r5, r1
   294bc:	bne	29548 <main@@Base+0x16268>
   294c0:	b	29518 <main@@Base+0x16238>
   294c4:	mov	r1, r5
   294c8:	cmp	r5, r1
   294cc:	bne	29548 <main@@Base+0x16268>
   294d0:	b	29518 <main@@Base+0x16238>
   294d4:	ldr	r0, [sp, #32]
   294d8:	ldr	r2, [sp, #36]	; 0x24
   294dc:	subs	r3, r0, #65536	; 0x10000
   294e0:	sbcs	r2, r2, #0
   294e4:	bcc	29508 <main@@Base+0x16228>
   294e8:	mov	r0, r9
   294ec:	mov	r2, r8
   294f0:	mov	r3, #7
   294f4:	bl	30170 <flatcc_json_parser_set_error@@Base>
   294f8:	mov	r1, r0
   294fc:	cmp	r5, r1
   29500:	bne	29548 <main@@Base+0x16268>
   29504:	b	29518 <main@@Base+0x16238>
   29508:	mov	r4, r0
   2950c:	strh	r0, [sp, #24]
   29510:	cmp	r5, r1
   29514:	bne	29548 <main@@Base+0x16268>
   29518:	add	r0, sp, #24
   2951c:	mov	r1, r5
   29520:	mov	r2, r8
   29524:	str	r0, [sp]
   29528:	mov	r0, r9
   2952c:	ldr	r3, [sp, #8]
   29530:	bl	2a71c <main@@Base+0x1743c>
   29534:	mov	r1, r0
   29538:	cmp	r0, r5
   2953c:	cmpne	r1, r8
   29540:	beq	2a034 <main@@Base+0x16d54>
   29544:	ldrh	r4, [sp, #24]
   29548:	ldr	r0, [sp, #12]
   2954c:	strh	r4, [r0]
   29550:	sub	r0, r8, r1
   29554:	cmp	r0, #2
   29558:	bge	29800 <main@@Base+0x16520>
   2955c:	b	29870 <main@@Base+0x16590>
   29560:	cmp	r2, r8
   29564:	mov	r1, r8
   29568:	beq	295b4 <main@@Base+0x162d4>
   2956c:	ldrb	r0, [r2]
   29570:	cmp	r0, #46	; 0x2e
   29574:	beq	2958c <main@@Base+0x162ac>
   29578:	cmp	r0, #34	; 0x22
   2957c:	bne	295a8 <main@@Base+0x162c8>
   29580:	mov	r0, #0
   29584:	add	r1, r2, #1
   29588:	b	295b0 <main@@Base+0x162d0>
   2958c:	mov	r1, r2
   29590:	mov	r0, r9
   29594:	mov	r2, r8
   29598:	mov	r3, #5
   2959c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   295a0:	mov	r1, r0
   295a4:	b	295b4 <main@@Base+0x162d4>
   295a8:	mov	r0, #1
   295ac:	mov	r1, r2
   295b0:	str	r0, [r9, #12]
   295b4:	sub	r0, r8, r1
   295b8:	mov	r2, #8
   295bc:	cmp	r0, #8
   295c0:	movcs	r0, r2
   295c4:	and	r0, r0, #15
   295c8:	sub	r4, r0, #1
   295cc:	cmp	r4, #7
   295d0:	bhi	29728 <main@@Base+0x16448>
   295d4:	add	r0, pc, #36	; 0x24
   295d8:	mov	r9, r7
   295dc:	mov	sl, #0
   295e0:	mov	ip, #0
   295e4:	mov	lr, #0
   295e8:	mov	r6, #0
   295ec:	mov	r3, #0
   295f0:	mov	r5, #0
   295f4:	mov	r2, #0
   295f8:	mov	r7, #0
   295fc:	ldr	pc, [r0, r4, lsl #2]
   29600:	andeq	r9, r2, r4, ror #12
   29604:	andeq	r9, r2, ip, asr r6
   29608:	andeq	r9, r2, r4, asr r6
   2960c:	andeq	r9, r2, ip, asr #12
   29610:	andeq	r9, r2, r0, asr #12
   29614:	andeq	r9, r2, r4, lsr r6
   29618:	andeq	r9, r2, r4, lsr #12
   2961c:	andeq	r9, r2, r0, lsr #12
   29620:	ldrb	ip, [r1, #7]
   29624:	ldrb	r0, [r1, #6]
   29628:	mov	lr, sl
   2962c:	orr	r0, ip, r0, lsl #8
   29630:	mov	sl, r0
   29634:	ldrb	r0, [r1, #5]
   29638:	mov	r6, lr
   2963c:	orr	sl, sl, r0, lsl #16
   29640:	ldrb	r0, [r1, #4]
   29644:	mov	r3, r6
   29648:	orr	sl, sl, r0, lsl #24
   2964c:	ldrb	r0, [r1, #3]
   29650:	orr	r5, r0, r3
   29654:	ldrb	r0, [r1, #2]
   29658:	orr	r2, r5, r0, lsl #8
   2965c:	ldrb	r0, [r1, #1]
   29660:	orr	r7, r2, r0, lsl #16
   29664:	ldrb	r2, [r1]
   29668:	movw	r0, #25966	; 0x656e
   2966c:	movw	r3, #26994	; 0x6972
   29670:	movt	r0, #24428	; 0x5f6c
   29674:	movt	r3, #26721	; 0x6861
   29678:	eor	r0, sl, r0
   2967c:	orr	r2, r7, r2, lsl #24
   29680:	mov	r7, r9
   29684:	ldr	r9, [sp, #20]
   29688:	eor	r2, r2, r3
   2968c:	orrs	r0, r0, r2
   29690:	bne	29728 <main@@Base+0x16448>
   29694:	add	r4, r1, #8
   29698:	mov	r2, #8
   2969c:	sub	r0, r8, r4
   296a0:	cmp	r0, #8
   296a4:	movcc	r2, r0
   296a8:	and	r3, r2, #15
   296ac:	sub	r2, r3, #3
   296b0:	cmp	r2, #6
   296b4:	bcs	29730 <main@@Base+0x16450>
   296b8:	ldrb	r2, [r1, #10]
   296bc:	lsl	r2, r2, #8
   296c0:	ldrb	r3, [r1, #9]
   296c4:	orr	r2, r2, r3, lsl #16
   296c8:	ldrb	r3, [r4]
   296cc:	bic	r2, r2, #255	; 0xff
   296d0:	orr	r2, r2, r3, lsl #24
   296d4:	movw	r3, #26624	; 0x6800
   296d8:	movt	r3, #26484	; 0x6774
   296dc:	teq	r2, r3
   296e0:	bne	297e0 <main@@Base+0x16500>
   296e4:	cmp	r0, #4
   296e8:	blt	297e0 <main@@Base+0x16500>
   296ec:	mov	r2, r1
   296f0:	ldr	r3, [r9, #12]
   296f4:	ldrb	r0, [r2, #11]!
   296f8:	cmp	r3, #0
   296fc:	beq	29748 <main@@Base+0x16468>
   29700:	cmp	r0, #33	; 0x21
   29704:	bcc	29710 <main@@Base+0x16430>
   29708:	cmp	r0, #58	; 0x3a
   2970c:	bne	297e0 <main@@Base+0x16500>
   29710:	mov	r0, #0
   29714:	str	r0, [r9, #12]
   29718:	sub	r0, r8, r2
   2971c:	cmp	r0, #2
   29720:	bge	29760 <main@@Base+0x16480>
   29724:	b	29790 <main@@Base+0x164b0>
   29728:	mov	r0, r9
   2972c:	b	297e8 <main@@Base+0x16508>
   29730:	mov	r2, #0
   29734:	cmp	r3, #1
   29738:	beq	296c8 <main@@Base+0x163e8>
   2973c:	cmp	r3, #2
   29740:	beq	296c0 <main@@Base+0x163e0>
   29744:	b	297e0 <main@@Base+0x16500>
   29748:	cmp	r0, #34	; 0x22
   2974c:	bne	297e0 <main@@Base+0x16500>
   29750:	add	r2, r1, #12
   29754:	sub	r0, r8, r2
   29758:	cmp	r0, #2
   2975c:	blt	29790 <main@@Base+0x164b0>
   29760:	ldrb	r0, [r2]
   29764:	cmp	r0, #32
   29768:	bls	2977c <main@@Base+0x1649c>
   2976c:	mov	r5, r2
   29770:	cmp	r5, r8
   29774:	bne	297ac <main@@Base+0x164cc>
   29778:	b	29404 <main@@Base+0x16124>
   2977c:	bne	29790 <main@@Base+0x164b0>
   29780:	mov	r5, r2
   29784:	ldrb	r0, [r5, #1]!
   29788:	cmp	r0, #32
   2978c:	bhi	297a4 <main@@Base+0x164c4>
   29790:	mov	r1, r2
   29794:	mov	r0, r9
   29798:	mov	r2, r8
   2979c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   297a0:	mov	r5, r0
   297a4:	cmp	r5, r8
   297a8:	beq	29404 <main@@Base+0x16124>
   297ac:	ldrb	r0, [r5]
   297b0:	cmp	r0, #58	; 0x3a
   297b4:	bne	29404 <main@@Base+0x16124>
   297b8:	add	r1, r5, #1
   297bc:	sub	r0, r8, r1
   297c0:	cmp	r0, #2
   297c4:	blt	2942c <main@@Base+0x1614c>
   297c8:	ldrb	r0, [r1]
   297cc:	cmp	r0, #32
   297d0:	bls	2941c <main@@Base+0x1613c>
   297d4:	mov	r5, r1
   297d8:	cmp	r4, r5
   297dc:	bne	29444 <main@@Base+0x16164>
   297e0:	mov	r0, r9
   297e4:	mov	r1, r4
   297e8:	mov	r2, r8
   297ec:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   297f0:	mov	r1, r0
   297f4:	sub	r0, r8, r1
   297f8:	cmp	r0, #2
   297fc:	blt	29870 <main@@Base+0x16590>
   29800:	ldrb	r0, [r1]
   29804:	cmp	r0, #32
   29808:	bls	2985c <main@@Base+0x1657c>
   2980c:	mov	r2, r1
   29810:	cmp	r2, r8
   29814:	beq	29888 <main@@Base+0x165a8>
   29818:	ldrb	r0, [r2]
   2981c:	cmp	r0, #44	; 0x2c
   29820:	bne	29890 <main@@Base+0x165b0>
   29824:	add	r1, r2, #1
   29828:	sub	r0, r8, r1
   2982c:	cmp	r0, #2
   29830:	blt	293e8 <main@@Base+0x16108>
   29834:	ldrb	r0, [r1]
   29838:	cmp	r0, #32
   2983c:	bls	293d8 <main@@Base+0x160f8>
   29840:	mov	r2, r1
   29844:	cmp	r2, r8
   29848:	beq	298c8 <main@@Base+0x165e8>
   2984c:	ldrb	r0, [r2]
   29850:	cmp	r0, #125	; 0x7d
   29854:	bne	29560 <main@@Base+0x16280>
   29858:	b	29898 <main@@Base+0x165b8>
   2985c:	bne	29870 <main@@Base+0x16590>
   29860:	mov	r2, r1
   29864:	ldrb	r0, [r2, #1]!
   29868:	cmp	r0, #32
   2986c:	bhi	29880 <main@@Base+0x165a0>
   29870:	mov	r0, r9
   29874:	mov	r2, r8
   29878:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2987c:	mov	r2, r0
   29880:	cmp	r2, r8
   29884:	bne	29818 <main@@Base+0x16538>
   29888:	mov	r1, r8
   2988c:	b	292b8 <main@@Base+0x15fd8>
   29890:	cmp	r0, #125	; 0x7d
   29894:	bne	29958 <main@@Base+0x16678>
   29898:	add	r1, r2, #1
   2989c:	sub	r0, r8, r1
   298a0:	cmp	r0, #2
   298a4:	blt	29980 <main@@Base+0x166a0>
   298a8:	ldrb	r0, [r1]
   298ac:	cmp	r0, #32
   298b0:	bls	2996c <main@@Base+0x1668c>
   298b4:	mov	r4, r1
   298b8:	cmp	r4, r8
   298bc:	mov	r1, r8
   298c0:	bne	29298 <main@@Base+0x15fb8>
   298c4:	b	292b8 <main@@Base+0x15fd8>
   298c8:	mov	r0, r9
   298cc:	mov	r1, r8
   298d0:	b	29960 <main@@Base+0x16680>
   298d4:	bne	298e4 <main@@Base+0x16604>
   298d8:	ldrb	r0, [r4, #2]!
   298dc:	cmp	r0, #32
   298e0:	bhi	298f4 <main@@Base+0x16614>
   298e4:	mov	r0, r9
   298e8:	mov	r2, r8
   298ec:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   298f0:	mov	r4, r0
   298f4:	cmp	r4, r8
   298f8:	mov	r2, r8
   298fc:	beq	29940 <main@@Base+0x16660>
   29900:	ldrb	r0, [r4]
   29904:	cmp	r0, #125	; 0x7d
   29908:	bne	2993c <main@@Base+0x1665c>
   2990c:	add	r1, r4, #1
   29910:	sub	r0, r8, r1
   29914:	cmp	r0, #2
   29918:	blt	2a024 <main@@Base+0x16d44>
   2991c:	ldrb	r0, [r1]
   29920:	cmp	r0, #32
   29924:	bhi	29fc8 <main@@Base+0x16ce8>
   29928:	bne	2a024 <main@@Base+0x16d44>
   2992c:	ldrb	r0, [r4, #2]!
   29930:	cmp	r0, #32
   29934:	bhi	292d8 <main@@Base+0x15ff8>
   29938:	b	2a024 <main@@Base+0x16d44>
   2993c:	mov	r2, r4
   29940:	movw	r0, #33272	; 0x81f8
   29944:	movt	r0, #4
   29948:	add	r0, r0, #96	; 0x60
   2994c:	str	r0, [sp, #8]
   29950:	str	r7, [sp, #16]
   29954:	b	29b30 <main@@Base+0x16850>
   29958:	mov	r0, r9
   2995c:	mov	r1, r2
   29960:	mov	r2, r8
   29964:	mov	r3, #10
   29968:	b	29284 <main@@Base+0x15fa4>
   2996c:	bne	29980 <main@@Base+0x166a0>
   29970:	ldrb	r0, [r2, #2]!
   29974:	cmp	r0, #32
   29978:	mov	r4, r2
   2997c:	bhi	2928c <main@@Base+0x15fac>
   29980:	mov	r0, r9
   29984:	mov	r2, r8
   29988:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2998c:	b	29288 <main@@Base+0x15fa8>
   29990:	mov	r0, r9
   29994:	mov	r1, r6
   29998:	mov	r2, r8
   2999c:	mov	r3, #4
   299a0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   299a4:	b	299c4 <main@@Base+0x166e4>
   299a8:	bne	299b8 <main@@Base+0x166d8>
   299ac:	ldrb	r0, [r6, #2]!
   299b0:	cmp	r0, #32
   299b4:	bhi	299c8 <main@@Base+0x166e8>
   299b8:	mov	r0, r9
   299bc:	mov	r2, r8
   299c0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   299c4:	mov	r6, r0
   299c8:	cmp	r4, r6
   299cc:	beq	29f54 <main@@Base+0x16c74>
   299d0:	mov	r5, #0
   299d4:	cmp	r6, r8
   299d8:	str	r5, [sp, #36]	; 0x24
   299dc:	str	r5, [sp, #32]
   299e0:	str	r5, [sp, #24]
   299e4:	str	r5, [sp, #28]
   299e8:	beq	29a48 <main@@Base+0x16768>
   299ec:	add	r0, sp, #32
   299f0:	mov	r1, r6
   299f4:	mov	r2, r8
   299f8:	add	r3, sp, #28
   299fc:	str	r0, [sp]
   29a00:	mov	r0, r9
   29a04:	bl	326c4 <flatcc_json_parser_integer@@Base>
   29a08:	cmp	r0, r6
   29a0c:	beq	29a58 <main@@Base+0x16778>
   29a10:	ldr	r2, [sp, #28]
   29a14:	mov	r4, r0
   29a18:	ldr	r0, [sp, #32]
   29a1c:	ldr	r1, [sp, #36]	; 0x24
   29a20:	cmp	r2, #0
   29a24:	beq	29a68 <main@@Base+0x16788>
   29a28:	subs	r2, r0, #-2147483647	; 0x80000001
   29a2c:	sbcs	r1, r1, #0
   29a30:	bcc	29a98 <main@@Base+0x167b8>
   29a34:	mov	r0, r9
   29a38:	mov	r1, r4
   29a3c:	mov	r2, r8
   29a40:	mov	r3, #8
   29a44:	b	29a84 <main@@Base+0x167a4>
   29a48:	mov	r4, r8
   29a4c:	cmp	r6, r4
   29a50:	bne	29aec <main@@Base+0x1680c>
   29a54:	b	29abc <main@@Base+0x167dc>
   29a58:	mov	r4, r6
   29a5c:	cmp	r6, r4
   29a60:	bne	29aec <main@@Base+0x1680c>
   29a64:	b	29abc <main@@Base+0x167dc>
   29a68:	subs	r2, r0, #-2147483648	; 0x80000000
   29a6c:	sbcs	r1, r1, #0
   29a70:	bcc	29aac <main@@Base+0x167cc>
   29a74:	mov	r0, r9
   29a78:	mov	r1, r4
   29a7c:	mov	r2, r8
   29a80:	mov	r3, #7
   29a84:	bl	30170 <flatcc_json_parser_set_error@@Base>
   29a88:	mov	r4, r0
   29a8c:	cmp	r6, r4
   29a90:	bne	29aec <main@@Base+0x1680c>
   29a94:	b	29abc <main@@Base+0x167dc>
   29a98:	rsb	r5, r0, #0
   29a9c:	str	r5, [sp, #24]
   29aa0:	cmp	r6, r4
   29aa4:	bne	29aec <main@@Base+0x1680c>
   29aa8:	b	29abc <main@@Base+0x167dc>
   29aac:	mov	r5, r0
   29ab0:	str	r5, [sp, #24]
   29ab4:	cmp	r6, r4
   29ab8:	bne	29aec <main@@Base+0x1680c>
   29abc:	add	r0, sp, #24
   29ac0:	mov	r1, r6
   29ac4:	mov	r2, r8
   29ac8:	str	r0, [sp]
   29acc:	mov	r0, r9
   29ad0:	ldr	r3, [sp, #8]
   29ad4:	bl	23fac <main@@Base+0x10ccc>
   29ad8:	mov	r4, r0
   29adc:	cmp	r0, r6
   29ae0:	cmpne	r4, r8
   29ae4:	beq	2a044 <main@@Base+0x16d64>
   29ae8:	ldr	r5, [sp, #24]
   29aec:	cmp	r5, #0
   29af0:	bne	29b00 <main@@Base+0x16820>
   29af4:	ldrb	r0, [r9, #8]
   29af8:	tst	r0, #2
   29afc:	beq	29df4 <main@@Base+0x16b14>
   29b00:	ldr	r0, [r9]
   29b04:	mov	r1, #0
   29b08:	mov	r2, #4
   29b0c:	mov	r3, #4
   29b10:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   29b14:	cmp	r0, #0
   29b18:	beq	2a044 <main@@Base+0x16d64>
   29b1c:	str	r5, [r0]
   29b20:	sub	r0, r8, r4
   29b24:	cmp	r0, #2
   29b28:	bge	29e00 <main@@Base+0x16b20>
   29b2c:	b	29f74 <main@@Base+0x16c94>
   29b30:	cmp	r2, r8
   29b34:	mov	r1, r8
   29b38:	beq	29b84 <main@@Base+0x168a4>
   29b3c:	ldrb	r0, [r2]
   29b40:	cmp	r0, #46	; 0x2e
   29b44:	beq	29b5c <main@@Base+0x1687c>
   29b48:	cmp	r0, #34	; 0x22
   29b4c:	bne	29b78 <main@@Base+0x16898>
   29b50:	mov	r0, #0
   29b54:	add	r1, r2, #1
   29b58:	b	29b80 <main@@Base+0x168a0>
   29b5c:	mov	r1, r2
   29b60:	mov	r0, r9
   29b64:	mov	r2, r8
   29b68:	mov	r3, #5
   29b6c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   29b70:	mov	r1, r0
   29b74:	b	29b84 <main@@Base+0x168a4>
   29b78:	mov	r0, #1
   29b7c:	mov	r1, r2
   29b80:	str	r0, [r9, #12]
   29b84:	sub	r0, r8, r1
   29b88:	mov	r2, #8
   29b8c:	cmp	r0, #8
   29b90:	movcs	r0, r2
   29b94:	and	r0, r0, #15
   29b98:	sub	r4, r0, #1
   29b9c:	cmp	r4, #7
   29ba0:	bhi	29dd4 <main@@Base+0x16af4>
   29ba4:	add	sl, pc, #32
   29ba8:	mov	r0, #0
   29bac:	mov	ip, #0
   29bb0:	mov	lr, #0
   29bb4:	mov	r6, #0
   29bb8:	mov	r3, #0
   29bbc:	mov	r2, #0
   29bc0:	mov	r7, #0
   29bc4:	mov	r5, #0
   29bc8:	ldr	pc, [sl, r4, lsl #2]
   29bcc:	andeq	r9, r2, r0, lsr ip
   29bd0:	andeq	r9, r2, r8, lsr #24
   29bd4:	andeq	r9, r2, r0, lsr #24
   29bd8:	andeq	r9, r2, r8, lsl ip
   29bdc:	andeq	r9, r2, ip, lsl #24
   29be0:	andeq	r9, r2, r0, lsl #24
   29be4:	strdeq	r9, [r2], -r0
   29be8:	andeq	r9, r2, ip, ror #23
   29bec:	ldrb	ip, [r1, #7]
   29bf0:	ldrb	r2, [r1, #6]
   29bf4:	mov	lr, r0
   29bf8:	orr	r2, ip, r2, lsl #8
   29bfc:	mov	r0, r2
   29c00:	ldrb	r2, [r1, #5]
   29c04:	mov	r6, lr
   29c08:	orr	r0, r0, r2, lsl #16
   29c0c:	ldrb	r2, [r1, #4]
   29c10:	mov	r3, r6
   29c14:	orr	r0, r0, r2, lsl #24
   29c18:	ldrb	r2, [r1, #3]
   29c1c:	orr	r2, r2, r3
   29c20:	ldrb	r3, [r1, #2]
   29c24:	orr	r7, r2, r3, lsl #8
   29c28:	ldrb	r2, [r1, #1]
   29c2c:	orr	r5, r7, r2, lsl #16
   29c30:	movw	r2, #24948	; 0x6174
   29c34:	movw	r3, #28530	; 0x6f72
   29c38:	movt	r2, #25695	; 0x645f
   29c3c:	movt	r3, #29559	; 0x7377
   29c40:	eor	r0, r0, r2
   29c44:	ldrb	r2, [r1]
   29c48:	orr	r2, r5, r2, lsl #24
   29c4c:	eor	r2, r2, r3
   29c50:	orrs	r0, r0, r2
   29c54:	bne	29dd4 <main@@Base+0x16af4>
   29c58:	add	lr, r1, #8
   29c5c:	mov	r2, #8
   29c60:	sub	r0, r8, lr
   29c64:	cmp	r0, #8
   29c68:	movcs	r0, r2
   29c6c:	and	r0, r0, #15
   29c70:	sub	r3, r0, #1
   29c74:	cmp	r3, #7
   29c78:	bhi	29ddc <main@@Base+0x16afc>
   29c7c:	add	r6, pc, #36	; 0x24
   29c80:	mov	r2, #0
   29c84:	mov	r0, #0
   29c88:	mov	sl, #0
   29c8c:	mov	r4, #0
   29c90:	mov	r5, #0
   29c94:	mov	r7, #0
   29c98:	mov	ip, #0
   29c9c:	str	r2, [sp, #12]
   29ca0:	mov	r2, #0
   29ca4:	ldr	pc, [r6, r3, lsl #2]
   29ca8:	andeq	r9, r2, r4, lsl sp
   29cac:	andeq	r9, r2, ip, lsl #26
   29cb0:	andeq	r9, r2, r4, lsl #26
   29cb4:	strdeq	r9, [r2], -ip
   29cb8:	strdeq	r9, [r2], -r0
   29cbc:	andeq	r9, r2, r4, ror #25
   29cc0:	ldrdeq	r9, [r2], -r0
   29cc4:	andeq	r9, r2, r8, asr #25
   29cc8:	ldrb	r2, [r1, #15]
   29ccc:	str	r2, [sp, #12]
   29cd0:	ldrb	r2, [r1, #14]
   29cd4:	ldr	r3, [sp, #12]
   29cd8:	mov	sl, r0
   29cdc:	orr	r2, r3, r2, lsl #8
   29ce0:	mov	r0, r2
   29ce4:	ldrb	r2, [r1, #13]
   29ce8:	mov	r4, sl
   29cec:	orr	r0, r0, r2, lsl #16
   29cf0:	ldrb	r2, [r1, #12]
   29cf4:	mov	r5, r4
   29cf8:	orr	r0, r0, r2, lsl #24
   29cfc:	ldrb	r2, [r1, #11]
   29d00:	orr	r2, r2, r5
   29d04:	ldrb	r3, [r1, #10]
   29d08:	orr	r7, r2, r3, lsl #8
   29d0c:	ldrb	r2, [r1, #9]
   29d10:	orr	ip, r7, r2, lsl #16
   29d14:	movw	r2, #24941	; 0x616d
   29d18:	movw	r3, #25451	; 0x636b
   29d1c:	movt	r2, #24420	; 0x5f64
   29d20:	movt	r3, #29793	; 0x7461
   29d24:	eor	r0, r0, r2
   29d28:	ldrb	r2, [lr]
   29d2c:	orr	r2, ip, r2, lsl #24
   29d30:	eor	r2, r2, r3
   29d34:	orrs	r0, r0, r2
   29d38:	bne	29ddc <main@@Base+0x16afc>
   29d3c:	add	r4, r1, #16
   29d40:	mov	r2, #8
   29d44:	sub	r0, r8, r4
   29d48:	cmp	r0, #8
   29d4c:	movcc	r2, r0
   29d50:	and	r3, r2, #15
   29d54:	sub	r2, r3, #3
   29d58:	cmp	r2, #6
   29d5c:	bcs	29ea0 <main@@Base+0x16bc0>
   29d60:	ldrb	r2, [r1, #18]
   29d64:	ldr	r7, [sp, #16]
   29d68:	lsl	r2, r2, #8
   29d6c:	ldrb	r3, [r1, #17]
   29d70:	orr	r2, r2, r3, lsl #16
   29d74:	ldrb	r3, [r4]
   29d78:	bic	r2, r2, #255	; 0xff
   29d7c:	orr	r2, r2, r3, lsl #24
   29d80:	movw	r3, #25856	; 0x6500
   29d84:	movt	r3, #24935	; 0x6167
   29d88:	teq	r2, r3
   29d8c:	bne	29f54 <main@@Base+0x16c74>
   29d90:	cmp	r0, #4
   29d94:	blt	29f54 <main@@Base+0x16c74>
   29d98:	mov	r2, r1
   29d9c:	ldr	r3, [r9, #12]
   29da0:	ldrb	r0, [r2, #19]!
   29da4:	cmp	r3, #0
   29da8:	beq	29ebc <main@@Base+0x16bdc>
   29dac:	cmp	r0, #33	; 0x21
   29db0:	bcc	29dbc <main@@Base+0x16adc>
   29db4:	cmp	r0, #58	; 0x3a
   29db8:	bne	29f54 <main@@Base+0x16c74>
   29dbc:	mov	r0, #0
   29dc0:	str	r0, [r9, #12]
   29dc4:	sub	r0, r8, r2
   29dc8:	cmp	r0, #2
   29dcc:	bge	29ed4 <main@@Base+0x16bf4>
   29dd0:	b	29f04 <main@@Base+0x16c24>
   29dd4:	mov	r0, r9
   29dd8:	b	29de4 <main@@Base+0x16b04>
   29ddc:	mov	r0, r9
   29de0:	mov	r1, lr
   29de4:	mov	r2, r8
   29de8:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   29dec:	ldr	r7, [sp, #16]
   29df0:	mov	r4, r0
   29df4:	sub	r0, r8, r4
   29df8:	cmp	r0, #2
   29dfc:	blt	29f74 <main@@Base+0x16c94>
   29e00:	ldrb	r0, [r4]
   29e04:	cmp	r0, #32
   29e08:	bls	29e50 <main@@Base+0x16b70>
   29e0c:	mov	r2, r4
   29e10:	cmp	r2, r8
   29e14:	beq	29f90 <main@@Base+0x16cb0>
   29e18:	ldrb	r0, [r2]
   29e1c:	cmp	r0, #44	; 0x2c
   29e20:	bne	29fa4 <main@@Base+0x16cc4>
   29e24:	add	r1, r2, #1
   29e28:	sub	r0, r8, r1
   29e2c:	cmp	r0, #2
   29e30:	blt	29e78 <main@@Base+0x16b98>
   29e34:	ldrb	r0, [r1]
   29e38:	cmp	r0, #32
   29e3c:	bls	29e68 <main@@Base+0x16b88>
   29e40:	mov	r2, r1
   29e44:	cmp	r2, r8
   29e48:	bne	29e90 <main@@Base+0x16bb0>
   29e4c:	b	29ff0 <main@@Base+0x16d10>
   29e50:	bne	29f74 <main@@Base+0x16c94>
   29e54:	mov	r2, r4
   29e58:	ldrb	r0, [r2, #1]!
   29e5c:	cmp	r0, #32
   29e60:	bhi	29f88 <main@@Base+0x16ca8>
   29e64:	b	29f74 <main@@Base+0x16c94>
   29e68:	bne	29e78 <main@@Base+0x16b98>
   29e6c:	ldrb	r0, [r2, #2]!
   29e70:	cmp	r0, #32
   29e74:	bhi	29e88 <main@@Base+0x16ba8>
   29e78:	mov	r0, r9
   29e7c:	mov	r2, r8
   29e80:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   29e84:	mov	r2, r0
   29e88:	cmp	r2, r8
   29e8c:	beq	29ff0 <main@@Base+0x16d10>
   29e90:	ldrb	r0, [r2]
   29e94:	cmp	r0, #125	; 0x7d
   29e98:	bne	29b30 <main@@Base+0x16850>
   29e9c:	b	29fac <main@@Base+0x16ccc>
   29ea0:	ldr	r7, [sp, #16]
   29ea4:	mov	r2, #0
   29ea8:	cmp	r3, #1
   29eac:	beq	29d74 <main@@Base+0x16a94>
   29eb0:	cmp	r3, #2
   29eb4:	beq	29d6c <main@@Base+0x16a8c>
   29eb8:	b	29f54 <main@@Base+0x16c74>
   29ebc:	cmp	r0, #34	; 0x22
   29ec0:	bne	29f54 <main@@Base+0x16c74>
   29ec4:	add	r2, r1, #20
   29ec8:	sub	r0, r8, r2
   29ecc:	cmp	r0, #2
   29ed0:	blt	29f04 <main@@Base+0x16c24>
   29ed4:	ldrb	r0, [r2]
   29ed8:	cmp	r0, #32
   29edc:	bls	29ef0 <main@@Base+0x16c10>
   29ee0:	mov	r6, r2
   29ee4:	cmp	r6, r8
   29ee8:	bne	29f20 <main@@Base+0x16c40>
   29eec:	b	29990 <main@@Base+0x166b0>
   29ef0:	bne	29f04 <main@@Base+0x16c24>
   29ef4:	mov	r6, r2
   29ef8:	ldrb	r0, [r6, #1]!
   29efc:	cmp	r0, #32
   29f00:	bhi	29f18 <main@@Base+0x16c38>
   29f04:	mov	r1, r2
   29f08:	mov	r0, r9
   29f0c:	mov	r2, r8
   29f10:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   29f14:	mov	r6, r0
   29f18:	cmp	r6, r8
   29f1c:	beq	29990 <main@@Base+0x166b0>
   29f20:	ldrb	r0, [r6]
   29f24:	cmp	r0, #58	; 0x3a
   29f28:	bne	29990 <main@@Base+0x166b0>
   29f2c:	add	r1, r6, #1
   29f30:	sub	r0, r8, r1
   29f34:	cmp	r0, #2
   29f38:	blt	299b8 <main@@Base+0x166d8>
   29f3c:	ldrb	r0, [r1]
   29f40:	cmp	r0, #32
   29f44:	bls	299a8 <main@@Base+0x166c8>
   29f48:	mov	r6, r1
   29f4c:	cmp	r4, r6
   29f50:	bne	299d0 <main@@Base+0x166f0>
   29f54:	mov	r0, r9
   29f58:	mov	r1, r4
   29f5c:	mov	r2, r8
   29f60:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   29f64:	mov	r4, r0
   29f68:	sub	r0, r8, r4
   29f6c:	cmp	r0, #2
   29f70:	bge	29e00 <main@@Base+0x16b20>
   29f74:	mov	r0, r9
   29f78:	mov	r1, r4
   29f7c:	mov	r2, r8
   29f80:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   29f84:	mov	r2, r0
   29f88:	cmp	r2, r8
   29f8c:	bne	29e18 <main@@Base+0x16b38>
   29f90:	mov	r4, r8
   29f94:	ldr	r0, [r9, #24]
   29f98:	cmp	r0, #0
   29f9c:	bne	292e4 <main@@Base+0x16004>
   29fa0:	b	29fd8 <main@@Base+0x16cf8>
   29fa4:	cmp	r0, #125	; 0x7d
   29fa8:	bne	29ffc <main@@Base+0x16d1c>
   29fac:	add	r1, r2, #1
   29fb0:	sub	r0, r8, r1
   29fb4:	cmp	r0, #2
   29fb8:	blt	2a024 <main@@Base+0x16d44>
   29fbc:	ldrb	r0, [r1]
   29fc0:	cmp	r0, #32
   29fc4:	bls	2a010 <main@@Base+0x16d30>
   29fc8:	mov	r4, r1
   29fcc:	ldr	r0, [r9, #24]
   29fd0:	cmp	r0, #0
   29fd4:	bne	292e4 <main@@Base+0x16004>
   29fd8:	ldr	r0, [r9]
   29fdc:	bl	2da14 <flatcc_builder_end_table@@Base>
   29fe0:	cmp	r0, #0
   29fe4:	str	r0, [r7]
   29fe8:	bne	292fc <main@@Base+0x1601c>
   29fec:	b	292e4 <main@@Base+0x16004>
   29ff0:	mov	r0, r9
   29ff4:	mov	r1, r8
   29ff8:	b	2a004 <main@@Base+0x16d24>
   29ffc:	mov	r0, r9
   2a000:	mov	r1, r2
   2a004:	mov	r2, r8
   2a008:	mov	r3, #10
   2a00c:	b	292d0 <main@@Base+0x15ff0>
   2a010:	bne	2a024 <main@@Base+0x16d44>
   2a014:	ldrb	r0, [r2, #2]!
   2a018:	cmp	r0, #32
   2a01c:	mov	r4, r2
   2a020:	bhi	292d8 <main@@Base+0x15ff8>
   2a024:	mov	r0, r9
   2a028:	mov	r2, r8
   2a02c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a030:	b	292d4 <main@@Base+0x15ff4>
   2a034:	mov	r0, r9
   2a038:	mov	r2, r8
   2a03c:	mov	r3, #33	; 0x21
   2a040:	b	29284 <main@@Base+0x15fa4>
   2a044:	ldr	r7, [sp, #16]
   2a048:	b	292e4 <main@@Base+0x16004>
   2a04c:	add	r0, r0, #1
   2a050:	uxtb	r1, r0
   2a054:	cmp	r1, #12
   2a058:	movhi	r0, #0
   2a05c:	bxhi	lr
   2a060:	movw	r1, #20352	; 0x4f80
   2a064:	sxtb	r0, r0
   2a068:	movt	r1, #3
   2a06c:	ldr	r0, [r1, r0, lsl #2]
   2a070:	bx	lr
   2a074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a078:	add	fp, sp, #28
   2a07c:	sub	sp, sp, #36	; 0x24
   2a080:	mov	r9, r0
   2a084:	mov	r0, #0
   2a088:	mov	sl, r2
   2a08c:	mov	r6, r1
   2a090:	mov	r1, #4
   2a094:	mov	r2, #4
   2a098:	str	r3, [sp, #12]
   2a09c:	str	r0, [r3]
   2a0a0:	ldr	r0, [r9]
   2a0a4:	bl	2bd8c <flatcc_builder_start_struct@@Base>
   2a0a8:	cmp	r0, #0
   2a0ac:	beq	2a17c <main@@Base+0x16e9c>
   2a0b0:	cmp	r6, sl
   2a0b4:	beq	2a130 <main@@Base+0x16e50>
   2a0b8:	ldrb	r1, [r6]
   2a0bc:	cmp	r1, #123	; 0x7b
   2a0c0:	bne	2a130 <main@@Base+0x16e50>
   2a0c4:	add	r1, r6, #1
   2a0c8:	str	r0, [sp, #8]
   2a0cc:	sub	r0, sl, r1
   2a0d0:	cmp	r0, #2
   2a0d4:	blt	2a1b8 <main@@Base+0x16ed8>
   2a0d8:	ldrb	r0, [r1]
   2a0dc:	cmp	r0, #32
   2a0e0:	bls	2a1a8 <main@@Base+0x16ec8>
   2a0e4:	mov	r6, r1
   2a0e8:	cmp	r6, sl
   2a0ec:	mov	r2, sl
   2a0f0:	beq	2a374 <main@@Base+0x17094>
   2a0f4:	ldrb	r0, [r6]
   2a0f8:	cmp	r0, #125	; 0x7d
   2a0fc:	bne	2a1a0 <main@@Base+0x16ec0>
   2a100:	add	r1, r6, #1
   2a104:	sub	r0, sl, r1
   2a108:	cmp	r0, #2
   2a10c:	blt	2a6fc <main@@Base+0x1741c>
   2a110:	ldrb	r0, [r1]
   2a114:	cmp	r0, #32
   2a118:	bhi	2a6b4 <main@@Base+0x173d4>
   2a11c:	bne	2a6fc <main@@Base+0x1741c>
   2a120:	ldrb	r0, [r6, #2]!
   2a124:	cmp	r0, #32
   2a128:	bhi	2a148 <main@@Base+0x16e68>
   2a12c:	b	2a6fc <main@@Base+0x1741c>
   2a130:	mov	r0, r9
   2a134:	mov	r1, r6
   2a138:	mov	r2, sl
   2a13c:	mov	r3, #21
   2a140:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a144:	mov	r6, r0
   2a148:	cmp	r6, sl
   2a14c:	mov	r1, sl
   2a150:	beq	2a180 <main@@Base+0x16ea0>
   2a154:	ldr	r0, [r9]
   2a158:	bl	2be80 <flatcc_builder_end_struct@@Base>
   2a15c:	ldr	r1, [sp, #12]
   2a160:	cmp	r0, #0
   2a164:	str	r0, [r1]
   2a168:	mov	r1, r6
   2a16c:	beq	2a180 <main@@Base+0x16ea0>
   2a170:	mov	r0, r6
   2a174:	sub	sp, fp, #28
   2a178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a17c:	mov	r1, r6
   2a180:	mov	r0, r9
   2a184:	mov	r2, sl
   2a188:	mov	r3, #33	; 0x21
   2a18c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a190:	mov	r6, r0
   2a194:	mov	r0, r6
   2a198:	sub	sp, fp, #28
   2a19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a1a0:	mov	r2, r6
   2a1a4:	b	2a374 <main@@Base+0x17094>
   2a1a8:	bne	2a1b8 <main@@Base+0x16ed8>
   2a1ac:	ldrb	r0, [r6, #2]!
   2a1b0:	cmp	r0, #32
   2a1b4:	bhi	2a1c8 <main@@Base+0x16ee8>
   2a1b8:	mov	r0, r9
   2a1bc:	mov	r2, sl
   2a1c0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a1c4:	mov	r6, r0
   2a1c8:	cmp	r6, sl
   2a1cc:	mov	r2, sl
   2a1d0:	bne	2a0f4 <main@@Base+0x16e14>
   2a1d4:	b	2a374 <main@@Base+0x17094>
   2a1d8:	bne	2a1e8 <main@@Base+0x16f08>
   2a1dc:	ldrb	r0, [r2, #2]!
   2a1e0:	cmp	r0, #32
   2a1e4:	bhi	2a1f8 <main@@Base+0x16f18>
   2a1e8:	mov	r0, r9
   2a1ec:	mov	r2, sl
   2a1f0:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a1f4:	mov	r2, r0
   2a1f8:	cmp	r2, sl
   2a1fc:	bne	2a64c <main@@Base+0x1736c>
   2a200:	b	2a6c8 <main@@Base+0x173e8>
   2a204:	mov	r0, r9
   2a208:	mov	r1, r7
   2a20c:	mov	r2, sl
   2a210:	mov	r3, #4
   2a214:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a218:	b	2a238 <main@@Base+0x16f58>
   2a21c:	bne	2a22c <main@@Base+0x16f4c>
   2a220:	ldrb	r0, [r7, #2]!
   2a224:	cmp	r0, #32
   2a228:	bhi	2a23c <main@@Base+0x16f5c>
   2a22c:	mov	r0, r9
   2a230:	mov	r2, sl
   2a234:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a238:	mov	r7, r0
   2a23c:	cmp	r8, r7
   2a240:	beq	2a5e0 <main@@Base+0x17300>
   2a244:	mov	r6, #0
   2a248:	cmp	r7, sl
   2a24c:	str	r6, [sp, #28]
   2a250:	str	r6, [sp, #24]
   2a254:	str	r6, [sp, #16]
   2a258:	str	r6, [sp, #20]
   2a25c:	beq	2a2b8 <main@@Base+0x16fd8>
   2a260:	add	r0, sp, #24
   2a264:	mov	r1, r7
   2a268:	mov	r2, sl
   2a26c:	add	r3, sp, #20
   2a270:	str	r0, [sp]
   2a274:	mov	r0, r9
   2a278:	bl	326c4 <flatcc_json_parser_integer@@Base>
   2a27c:	cmp	r0, r7
   2a280:	beq	2a2c8 <main@@Base+0x16fe8>
   2a284:	ldr	r3, [sp, #20]
   2a288:	mov	r1, r0
   2a28c:	ldr	r0, [sp, #24]
   2a290:	ldr	r2, [sp, #28]
   2a294:	cmp	r3, #0
   2a298:	beq	2a2d8 <main@@Base+0x16ff8>
   2a29c:	subs	r3, r0, #-2147483647	; 0x80000001
   2a2a0:	sbcs	r2, r2, #0
   2a2a4:	bcc	2a304 <main@@Base+0x17024>
   2a2a8:	mov	r0, r9
   2a2ac:	mov	r2, sl
   2a2b0:	mov	r3, #8
   2a2b4:	b	2a2f0 <main@@Base+0x17010>
   2a2b8:	mov	r1, sl
   2a2bc:	cmp	r7, r1
   2a2c0:	bne	2a35c <main@@Base+0x1707c>
   2a2c4:	b	2a328 <main@@Base+0x17048>
   2a2c8:	mov	r1, r7
   2a2cc:	cmp	r7, r1
   2a2d0:	bne	2a35c <main@@Base+0x1707c>
   2a2d4:	b	2a328 <main@@Base+0x17048>
   2a2d8:	subs	r3, r0, #-2147483648	; 0x80000000
   2a2dc:	sbcs	r2, r2, #0
   2a2e0:	bcc	2a318 <main@@Base+0x17038>
   2a2e4:	mov	r0, r9
   2a2e8:	mov	r2, sl
   2a2ec:	mov	r3, #7
   2a2f0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a2f4:	mov	r1, r0
   2a2f8:	cmp	r7, r1
   2a2fc:	bne	2a35c <main@@Base+0x1707c>
   2a300:	b	2a328 <main@@Base+0x17048>
   2a304:	rsb	r6, r0, #0
   2a308:	str	r6, [sp, #16]
   2a30c:	cmp	r7, r1
   2a310:	bne	2a35c <main@@Base+0x1707c>
   2a314:	b	2a328 <main@@Base+0x17048>
   2a318:	mov	r6, r0
   2a31c:	str	r6, [sp, #16]
   2a320:	cmp	r7, r1
   2a324:	bne	2a35c <main@@Base+0x1707c>
   2a328:	movw	r3, #32900	; 0x8084
   2a32c:	add	r0, sp, #16
   2a330:	mov	r1, r7
   2a334:	mov	r2, sl
   2a338:	str	r0, [sp]
   2a33c:	mov	r0, r9
   2a340:	movt	r3, #4
   2a344:	bl	23fac <main@@Base+0x10ccc>
   2a348:	mov	r1, r0
   2a34c:	cmp	r0, r7
   2a350:	cmpne	r1, sl
   2a354:	beq	2a70c <main@@Base+0x1742c>
   2a358:	ldr	r6, [sp, #16]
   2a35c:	ldr	r0, [sp, #8]
   2a360:	str	r6, [r0]
   2a364:	sub	r0, sl, r1
   2a368:	cmp	r0, #2
   2a36c:	bge	2a600 <main@@Base+0x17320>
   2a370:	b	2a670 <main@@Base+0x17390>
   2a374:	cmp	r2, sl
   2a378:	mov	r1, sl
   2a37c:	beq	2a3c8 <main@@Base+0x170e8>
   2a380:	ldrb	r0, [r2]
   2a384:	cmp	r0, #46	; 0x2e
   2a388:	beq	2a3a0 <main@@Base+0x170c0>
   2a38c:	cmp	r0, #34	; 0x22
   2a390:	bne	2a3bc <main@@Base+0x170dc>
   2a394:	mov	r0, #0
   2a398:	add	r1, r2, #1
   2a39c:	b	2a3c4 <main@@Base+0x170e4>
   2a3a0:	mov	r1, r2
   2a3a4:	mov	r0, r9
   2a3a8:	mov	r2, sl
   2a3ac:	mov	r3, #5
   2a3b0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a3b4:	mov	r1, r0
   2a3b8:	b	2a3c8 <main@@Base+0x170e8>
   2a3bc:	mov	r0, #1
   2a3c0:	mov	r1, r2
   2a3c4:	str	r0, [r9, #12]
   2a3c8:	sub	r0, sl, r1
   2a3cc:	mov	r2, #8
   2a3d0:	cmp	r0, #8
   2a3d4:	movcs	r0, r2
   2a3d8:	and	r0, r0, #15
   2a3dc:	sub	r6, r0, #1
   2a3e0:	cmp	r6, #7
   2a3e4:	bhi	2a52c <main@@Base+0x1724c>
   2a3e8:	add	r0, pc, #32
   2a3ec:	mov	r8, #0
   2a3f0:	mov	ip, #0
   2a3f4:	mov	lr, #0
   2a3f8:	mov	r7, #0
   2a3fc:	mov	r3, #0
   2a400:	mov	r5, #0
   2a404:	mov	r2, #0
   2a408:	mov	r4, #0
   2a40c:	ldr	pc, [r0, r6, lsl #2]
   2a410:	andeq	sl, r2, r4, ror r4
   2a414:	andeq	sl, r2, ip, ror #8
   2a418:	andeq	sl, r2, r4, ror #8
   2a41c:	andeq	sl, r2, ip, asr r4
   2a420:	andeq	sl, r2, r0, asr r4
   2a424:	andeq	sl, r2, r4, asr #8
   2a428:	andeq	sl, r2, r4, lsr r4
   2a42c:	andeq	sl, r2, r0, lsr r4
   2a430:	ldrb	ip, [r1, #7]
   2a434:	ldrb	r0, [r1, #6]
   2a438:	mov	lr, r8
   2a43c:	orr	r0, ip, r0, lsl #8
   2a440:	mov	r8, r0
   2a444:	ldrb	r0, [r1, #5]
   2a448:	mov	r7, lr
   2a44c:	orr	r8, r8, r0, lsl #16
   2a450:	ldrb	r0, [r1, #4]
   2a454:	mov	r3, r7
   2a458:	orr	r8, r8, r0, lsl #24
   2a45c:	ldrb	r0, [r1, #3]
   2a460:	orr	r5, r0, r3
   2a464:	ldrb	r0, [r1, #2]
   2a468:	orr	r2, r5, r0, lsl #8
   2a46c:	ldrb	r0, [r1, #1]
   2a470:	orr	r4, r2, r0, lsl #16
   2a474:	ldrb	r2, [r1]
   2a478:	movw	r0, #29285	; 0x7265
   2a47c:	movw	r3, #28523	; 0x6f6b
   2a480:	movt	r0, #29535	; 0x735f
   2a484:	movt	r3, #25199	; 0x626f
   2a488:	eor	r0, r8, r0
   2a48c:	orr	r2, r4, r2, lsl #24
   2a490:	eor	r2, r2, r3
   2a494:	orrs	r0, r0, r2
   2a498:	bne	2a52c <main@@Base+0x1724c>
   2a49c:	add	r8, r1, #8
   2a4a0:	mov	r2, #8
   2a4a4:	sub	r0, sl, r8
   2a4a8:	cmp	r0, #8
   2a4ac:	movcc	r2, r0
   2a4b0:	and	r3, r2, #15
   2a4b4:	sub	r2, r3, #2
   2a4b8:	cmp	r2, #7
   2a4bc:	bcs	2a534 <main@@Base+0x17254>
   2a4c0:	ldrb	r2, [r1, #9]
   2a4c4:	lsl	r3, r2, #16
   2a4c8:	mov	r2, #0
   2a4cc:	ldrb	r7, [r8]
   2a4d0:	orr	r3, r3, r7, lsl #24
   2a4d4:	movw	r7, #0
   2a4d8:	movt	r7, #24932	; 0x6164
   2a4dc:	eor	r3, r3, r7
   2a4e0:	orrs	r2, r2, r3
   2a4e4:	bne	2a5e0 <main@@Base+0x17300>
   2a4e8:	cmp	r0, #3
   2a4ec:	blt	2a5e0 <main@@Base+0x17300>
   2a4f0:	mov	r2, r1
   2a4f4:	ldr	r3, [r9, #12]
   2a4f8:	ldrb	r0, [r2, #10]!
   2a4fc:	cmp	r3, #0
   2a500:	beq	2a548 <main@@Base+0x17268>
   2a504:	cmp	r0, #33	; 0x21
   2a508:	bcc	2a514 <main@@Base+0x17234>
   2a50c:	cmp	r0, #58	; 0x3a
   2a510:	bne	2a5e0 <main@@Base+0x17300>
   2a514:	mov	r0, #0
   2a518:	str	r0, [r9, #12]
   2a51c:	sub	r0, sl, r2
   2a520:	cmp	r0, #2
   2a524:	bge	2a560 <main@@Base+0x17280>
   2a528:	b	2a590 <main@@Base+0x172b0>
   2a52c:	mov	r0, r9
   2a530:	b	2a5e8 <main@@Base+0x17308>
   2a534:	cmp	r3, #1
   2a538:	mov	r2, #0
   2a53c:	mov	r3, #0
   2a540:	beq	2a4cc <main@@Base+0x171ec>
   2a544:	b	2a5e0 <main@@Base+0x17300>
   2a548:	cmp	r0, #34	; 0x22
   2a54c:	bne	2a5e0 <main@@Base+0x17300>
   2a550:	add	r2, r1, #11
   2a554:	sub	r0, sl, r2
   2a558:	cmp	r0, #2
   2a55c:	blt	2a590 <main@@Base+0x172b0>
   2a560:	ldrb	r0, [r2]
   2a564:	cmp	r0, #32
   2a568:	bls	2a57c <main@@Base+0x1729c>
   2a56c:	mov	r7, r2
   2a570:	cmp	r7, sl
   2a574:	bne	2a5ac <main@@Base+0x172cc>
   2a578:	b	2a204 <main@@Base+0x16f24>
   2a57c:	bne	2a590 <main@@Base+0x172b0>
   2a580:	mov	r7, r2
   2a584:	ldrb	r0, [r7, #1]!
   2a588:	cmp	r0, #32
   2a58c:	bhi	2a5a4 <main@@Base+0x172c4>
   2a590:	mov	r1, r2
   2a594:	mov	r0, r9
   2a598:	mov	r2, sl
   2a59c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a5a0:	mov	r7, r0
   2a5a4:	cmp	r7, sl
   2a5a8:	beq	2a204 <main@@Base+0x16f24>
   2a5ac:	ldrb	r0, [r7]
   2a5b0:	cmp	r0, #58	; 0x3a
   2a5b4:	bne	2a204 <main@@Base+0x16f24>
   2a5b8:	add	r1, r7, #1
   2a5bc:	sub	r0, sl, r1
   2a5c0:	cmp	r0, #2
   2a5c4:	blt	2a22c <main@@Base+0x16f4c>
   2a5c8:	ldrb	r0, [r1]
   2a5cc:	cmp	r0, #32
   2a5d0:	bls	2a21c <main@@Base+0x16f3c>
   2a5d4:	mov	r7, r1
   2a5d8:	cmp	r8, r7
   2a5dc:	bne	2a244 <main@@Base+0x16f64>
   2a5e0:	mov	r0, r9
   2a5e4:	mov	r1, r8
   2a5e8:	mov	r2, sl
   2a5ec:	bl	30aa0 <flatcc_json_parser_unmatched_symbol@@Base>
   2a5f0:	mov	r1, r0
   2a5f4:	sub	r0, sl, r1
   2a5f8:	cmp	r0, #2
   2a5fc:	blt	2a670 <main@@Base+0x17390>
   2a600:	ldrb	r0, [r1]
   2a604:	cmp	r0, #32
   2a608:	bls	2a65c <main@@Base+0x1737c>
   2a60c:	mov	r2, r1
   2a610:	cmp	r2, sl
   2a614:	beq	2a688 <main@@Base+0x173a8>
   2a618:	ldrb	r0, [r2]
   2a61c:	cmp	r0, #44	; 0x2c
   2a620:	bne	2a690 <main@@Base+0x173b0>
   2a624:	add	r1, r2, #1
   2a628:	sub	r0, sl, r1
   2a62c:	cmp	r0, #2
   2a630:	blt	2a1e8 <main@@Base+0x16f08>
   2a634:	ldrb	r0, [r1]
   2a638:	cmp	r0, #32
   2a63c:	bls	2a1d8 <main@@Base+0x16ef8>
   2a640:	mov	r2, r1
   2a644:	cmp	r2, sl
   2a648:	beq	2a6c8 <main@@Base+0x173e8>
   2a64c:	ldrb	r0, [r2]
   2a650:	cmp	r0, #125	; 0x7d
   2a654:	bne	2a374 <main@@Base+0x17094>
   2a658:	b	2a698 <main@@Base+0x173b8>
   2a65c:	bne	2a670 <main@@Base+0x17390>
   2a660:	mov	r2, r1
   2a664:	ldrb	r0, [r2, #1]!
   2a668:	cmp	r0, #32
   2a66c:	bhi	2a680 <main@@Base+0x173a0>
   2a670:	mov	r0, r9
   2a674:	mov	r2, sl
   2a678:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a67c:	mov	r2, r0
   2a680:	cmp	r2, sl
   2a684:	bne	2a618 <main@@Base+0x17338>
   2a688:	mov	r1, sl
   2a68c:	b	2a180 <main@@Base+0x16ea0>
   2a690:	cmp	r0, #125	; 0x7d
   2a694:	bne	2a6d4 <main@@Base+0x173f4>
   2a698:	add	r1, r2, #1
   2a69c:	sub	r0, sl, r1
   2a6a0:	cmp	r0, #2
   2a6a4:	blt	2a6fc <main@@Base+0x1741c>
   2a6a8:	ldrb	r0, [r1]
   2a6ac:	cmp	r0, #32
   2a6b0:	bls	2a6e8 <main@@Base+0x17408>
   2a6b4:	mov	r6, r1
   2a6b8:	cmp	r6, sl
   2a6bc:	mov	r1, sl
   2a6c0:	bne	2a154 <main@@Base+0x16e74>
   2a6c4:	b	2a180 <main@@Base+0x16ea0>
   2a6c8:	mov	r0, r9
   2a6cc:	mov	r1, sl
   2a6d0:	b	2a6dc <main@@Base+0x173fc>
   2a6d4:	mov	r0, r9
   2a6d8:	mov	r1, r2
   2a6dc:	mov	r2, sl
   2a6e0:	mov	r3, #10
   2a6e4:	b	2a140 <main@@Base+0x16e60>
   2a6e8:	bne	2a6fc <main@@Base+0x1741c>
   2a6ec:	ldrb	r0, [r2, #2]!
   2a6f0:	cmp	r0, #32
   2a6f4:	mov	r6, r2
   2a6f8:	bhi	2a148 <main@@Base+0x16e68>
   2a6fc:	mov	r0, r9
   2a700:	mov	r2, sl
   2a704:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a708:	b	2a144 <main@@Base+0x16e64>
   2a70c:	mov	r0, r9
   2a710:	mov	r2, sl
   2a714:	mov	r3, #33	; 0x21
   2a718:	b	2a140 <main@@Base+0x16e60>
   2a71c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a720:	add	fp, sp, #28
   2a724:	sub	sp, sp, #44	; 0x2c
   2a728:	mov	r6, r2
   2a72c:	ldr	r2, [fp, #8]
   2a730:	mov	r5, r0
   2a734:	mov	r0, #0
   2a738:	mov	sl, r3
   2a73c:	cmp	r1, r6
   2a740:	strh	r0, [r2]
   2a744:	beq	2a768 <main@@Base+0x17488>
   2a748:	ldrb	r0, [r1]
   2a74c:	cmp	r0, #46	; 0x2e
   2a750:	beq	2a790 <main@@Base+0x174b0>
   2a754:	cmp	r0, #34	; 0x22
   2a758:	bne	2a95c <main@@Base+0x1767c>
   2a75c:	mov	r0, #0
   2a760:	add	r1, r1, #1
   2a764:	str	r0, [r5, #12]
   2a768:	ldr	r0, [r5, #12]
   2a76c:	cmp	r0, #0
   2a770:	beq	2a7b0 <main@@Base+0x174d0>
   2a774:	mov	r7, r1
   2a778:	cmp	r7, r6
   2a77c:	bne	2a7f4 <main@@Base+0x17514>
   2a780:	mov	r4, r6
   2a784:	mov	r0, r4
   2a788:	sub	sp, fp, #28
   2a78c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a790:	mov	r0, r5
   2a794:	mov	r2, r6
   2a798:	mov	r3, #5
   2a79c:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a7a0:	mov	r1, r0
   2a7a4:	ldr	r0, [r5, #12]
   2a7a8:	cmp	r0, #0
   2a7ac:	bne	2a774 <main@@Base+0x17494>
   2a7b0:	sub	r0, r6, r1
   2a7b4:	cmp	r0, #2
   2a7b8:	blt	2a7dc <main@@Base+0x174fc>
   2a7bc:	ldrb	r0, [r1]
   2a7c0:	cmp	r0, #32
   2a7c4:	bhi	2a774 <main@@Base+0x17494>
   2a7c8:	bne	2a7dc <main@@Base+0x174fc>
   2a7cc:	mov	r7, r1
   2a7d0:	ldrb	r0, [r7, #1]!
   2a7d4:	cmp	r0, #32
   2a7d8:	bhi	2a7ec <main@@Base+0x1750c>
   2a7dc:	mov	r0, r5
   2a7e0:	mov	r2, r6
   2a7e4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   2a7e8:	mov	r7, r0
   2a7ec:	cmp	r7, r6
   2a7f0:	beq	2a780 <main@@Base+0x174a0>
   2a7f4:	mov	r1, #0
   2a7f8:	add	r0, sl, #4
   2a7fc:	add	r8, sp, #32
   2a800:	add	r9, sp, #28
   2a804:	str	sl, [sp, #12]
   2a808:	str	r1, [sp, #16]
   2a80c:	mov	r1, #0
   2a810:	str	r0, [sp, #8]
   2a814:	str	r1, [sp, #20]
   2a818:	ldr	r4, [sl]
   2a81c:	mov	sl, r0
   2a820:	add	r0, sp, #24
   2a824:	mov	r1, r7
   2a828:	mov	r2, r6
   2a82c:	mov	r3, r9
   2a830:	str	r8, [sp]
   2a834:	str	r0, [sp, #4]
   2a838:	mov	r0, r5
   2a83c:	blx	r4
   2a840:	cmp	r0, r6
   2a844:	beq	2a928 <main@@Base+0x17648>
   2a848:	mov	r4, r0
   2a84c:	cmp	r0, r7
   2a850:	bne	2a864 <main@@Base+0x17584>
   2a854:	ldr	r4, [sl], #4
   2a858:	cmp	r4, #0
   2a85c:	bne	2a820 <main@@Base+0x17540>
   2a860:	b	2a938 <main@@Base+0x17658>
   2a864:	ldr	r7, [sp, #20]
   2a868:	cmp	r7, #0
   2a86c:	ldrne	r0, [r5, #12]
   2a870:	cmpne	r0, #0
   2a874:	bne	2a984 <main@@Base+0x176a4>
   2a878:	ldr	r0, [sp, #28]
   2a87c:	cmp	r0, #0
   2a880:	beq	2a8a8 <main@@Base+0x175c8>
   2a884:	mov	r0, r5
   2a888:	mov	r1, r4
   2a88c:	mov	r2, r6
   2a890:	mov	r3, #8
   2a894:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a898:	ldr	sl, [sp, #12]
   2a89c:	cmp	r0, r6
   2a8a0:	bne	2a8f0 <main@@Base+0x17610>
   2a8a4:	b	2a974 <main@@Base+0x17694>
   2a8a8:	ldr	r0, [sp, #32]
   2a8ac:	ldr	r1, [sp, #36]	; 0x24
   2a8b0:	ldr	sl, [sp, #12]
   2a8b4:	subs	r2, r0, #65536	; 0x10000
   2a8b8:	sbcs	r1, r1, #0
   2a8bc:	bcc	2a8e0 <main@@Base+0x17600>
   2a8c0:	mov	r0, r5
   2a8c4:	mov	r1, r4
   2a8c8:	mov	r2, r6
   2a8cc:	mov	r3, #7
   2a8d0:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a8d4:	cmp	r0, r6
   2a8d8:	bne	2a8f0 <main@@Base+0x17610>
   2a8dc:	b	2a974 <main@@Base+0x17694>
   2a8e0:	str	r0, [sp, #16]
   2a8e4:	mov	r0, r4
   2a8e8:	cmp	r0, r6
   2a8ec:	beq	2a974 <main@@Base+0x17694>
   2a8f0:	ldr	r0, [fp, #8]
   2a8f4:	ldr	r2, [sp, #16]
   2a8f8:	add	r7, r7, #1
   2a8fc:	str	r7, [sp, #20]
   2a900:	mov	r7, r4
   2a904:	mov	r1, r0
   2a908:	ldrh	r0, [r0]
   2a90c:	add	r0, r0, r2
   2a910:	strh	r0, [r1]
   2a914:	ldr	r0, [sp, #24]
   2a918:	cmp	r0, #0
   2a91c:	ldr	r0, [sp, #8]
   2a920:	bne	2a818 <main@@Base+0x17538>
   2a924:	b	2a784 <main@@Base+0x174a4>
   2a928:	mov	r4, r6
   2a92c:	mov	r0, r4
   2a930:	sub	sp, fp, #28
   2a934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a938:	mov	r0, r5
   2a93c:	mov	r1, r7
   2a940:	mov	r2, r6
   2a944:	mov	r3, #23
   2a948:	bl	30170 <flatcc_json_parser_set_error@@Base>
   2a94c:	mov	r4, r0
   2a950:	mov	r0, r4
   2a954:	sub	sp, fp, #28
   2a958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a95c:	mov	r0, #1
   2a960:	str	r0, [r5, #12]
   2a964:	ldr	r0, [r5, #12]
   2a968:	cmp	r0, #0
   2a96c:	bne	2a774 <main@@Base+0x17494>
   2a970:	b	2a7b0 <main@@Base+0x174d0>
   2a974:	mov	r4, r6
   2a978:	mov	r0, r4
   2a97c:	sub	sp, fp, #28
   2a980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a984:	mov	r0, r5
   2a988:	mov	r1, r4
   2a98c:	mov	r2, r6
   2a990:	mov	r3, #14
   2a994:	b	2a948 <main@@Base+0x17668>

0002a998 <flatcc_builder_default_alloc@@Base>:
   2a998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a99c:	add	fp, sp, #24
   2a9a0:	mov	r4, r1
   2a9a4:	cmp	r2, #0
   2a9a8:	beq	2a9f0 <flatcc_builder_default_alloc@@Base+0x58>
   2a9ac:	ldr	r0, [fp, #8]
   2a9b0:	mov	r8, r3
   2a9b4:	sub	r1, r0, #1
   2a9b8:	cmp	r1, #6
   2a9bc:	bhi	2aa1c <flatcc_builder_default_alloc@@Base+0x84>
   2a9c0:	add	r3, pc, #4
   2a9c4:	mov	r0, #256	; 0x100
   2a9c8:	ldr	pc, [r3, r1, lsl #2]
   2a9cc:	andeq	sl, r2, r0, lsr sl
   2a9d0:	andeq	sl, r2, ip, lsl sl
   2a9d4:	andeq	sl, r2, ip, lsl sl
   2a9d8:	andeq	sl, r2, r8, ror #19
   2a9dc:	andeq	sl, r2, r4, lsr #20
   2a9e0:	andeq	sl, r2, ip, lsl sl
   2a9e4:	andeq	sl, r2, ip, lsr #20
   2a9e8:	mov	r0, #288	; 0x120
   2a9ec:	b	2aa30 <flatcc_builder_default_alloc@@Base+0x98>
   2a9f0:	ldr	r0, [r4]
   2a9f4:	cmp	r0, #0
   2a9f8:	moveq	r6, #0
   2a9fc:	moveq	r0, r6
   2aa00:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aa04:	bl	12aa4 <free@plt>
   2aa08:	mov	r6, #0
   2aa0c:	mov	r0, r6
   2aa10:	str	r6, [r4]
   2aa14:	str	r6, [r4, #4]
   2aa18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aa1c:	mov	r0, #32
   2aa20:	b	2aa30 <flatcc_builder_default_alloc@@Base+0x98>
   2aa24:	mov	r0, r2
   2aa28:	b	2aa30 <flatcc_builder_default_alloc@@Base+0x98>
   2aa2c:	mov	r0, #64	; 0x40
   2aa30:	mov	r7, r0
   2aa34:	lsl	r0, r0, #1
   2aa38:	cmp	r7, r2
   2aa3c:	bcc	2aa30 <flatcc_builder_default_alloc@@Base+0x98>
   2aa40:	ldr	r0, [r4, #4]
   2aa44:	mov	r6, #0
   2aa48:	cmp	r0, r2
   2aa4c:	lsrcs	r0, r0, #1
   2aa50:	cmpcs	r0, r7
   2aa54:	bcs	2aa8c <flatcc_builder_default_alloc@@Base+0xf4>
   2aa58:	ldr	r0, [r4]
   2aa5c:	mov	r1, r7
   2aa60:	bl	12af8 <realloc@plt>
   2aa64:	cmp	r0, #0
   2aa68:	mvneq	r6, #0
   2aa6c:	moveq	r0, r6
   2aa70:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aa74:	cmp	r8, #0
   2aa78:	mov	r5, r0
   2aa7c:	ldrne	r1, [r4, #4]
   2aa80:	cmpne	r7, r1
   2aa84:	bhi	2aa94 <flatcc_builder_default_alloc@@Base+0xfc>
   2aa88:	stm	r4, {r5, r7}
   2aa8c:	mov	r0, r6
   2aa90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aa94:	add	r0, r5, r1
   2aa98:	sub	r2, r7, r1
   2aa9c:	mov	r1, #0
   2aaa0:	bl	12b64 <memset@plt>
   2aaa4:	b	2aa88 <flatcc_builder_default_alloc@@Base+0xf0>

0002aaa8 <flatcc_builder_flush_vtable_cache@@Base>:
   2aaa8:	push	{r4, r5, fp, lr}
   2aaac:	add	fp, sp, #8
   2aab0:	mov	r4, r0
   2aab4:	ldr	r0, [r0, #116]	; 0x74
   2aab8:	cmp	r0, #0
   2aabc:	popeq	{r4, r5, fp, pc}
   2aac0:	ldr	r0, [r4, #92]	; 0x5c
   2aac4:	ldr	r2, [r4, #96]	; 0x60
   2aac8:	mov	r1, #0
   2aacc:	mov	r5, #0
   2aad0:	bl	12b64 <memset@plt>
   2aad4:	mov	r0, #16
   2aad8:	str	r5, [r4, #120]	; 0x78
   2aadc:	str	r0, [r4, #124]	; 0x7c
   2aae0:	pop	{r4, r5, fp, pc}

0002aae4 <flatcc_builder_custom_init@@Base>:
   2aae4:	push	{r4, r5, r6, r7, fp, lr}
   2aae8:	add	fp, sp, #16
   2aaec:	mov	r6, r2
   2aaf0:	mov	r7, r1
   2aaf4:	mov	r1, #0
   2aaf8:	mov	r2, #232	; 0xe8
   2aafc:	mov	r5, r3
   2ab00:	mov	r4, r0
   2ab04:	bl	12b64 <memset@plt>
   2ab08:	ldr	r0, [fp, #8]
   2ab0c:	cmp	r7, #0
   2ab10:	bne	2ab28 <flatcc_builder_custom_init@@Base+0x44>
   2ab14:	movw	r7, #63556	; 0xf844
   2ab18:	mov	r1, #1
   2ab1c:	add	r6, r4, #188	; 0xbc
   2ab20:	movt	r7, #2
   2ab24:	str	r1, [r4, #184]	; 0xb8
   2ab28:	movw	r1, #43416	; 0xa998
   2ab2c:	cmp	r5, #0
   2ab30:	str	r6, [r4, #36]	; 0x24
   2ab34:	str	r0, [r4, #40]	; 0x28
   2ab38:	mov	r0, #0
   2ab3c:	str	r7, [r4, #44]	; 0x2c
   2ab40:	movt	r1, #2
   2ab44:	movne	r1, r5
   2ab48:	str	r1, [r4, #48]	; 0x30
   2ab4c:	pop	{r4, r5, r6, r7, fp, pc}

0002ab50 <flatcc_builder_init@@Base>:
   2ab50:	push	{r4, r5, fp, lr}
   2ab54:	add	fp, sp, #8
   2ab58:	mov	r1, #0
   2ab5c:	mov	r2, #232	; 0xe8
   2ab60:	mov	r4, r0
   2ab64:	mov	r5, #0
   2ab68:	bl	12b64 <memset@plt>
   2ab6c:	mov	r0, #1
   2ab70:	movw	r2, #63556	; 0xf844
   2ab74:	add	r1, r4, #188	; 0xbc
   2ab78:	str	r0, [r4, #184]	; 0xb8
   2ab7c:	movw	r0, #43416	; 0xa998
   2ab80:	movt	r2, #2
   2ab84:	str	r1, [r4, #36]	; 0x24
   2ab88:	str	r5, [r4, #40]	; 0x28
   2ab8c:	movt	r0, #2
   2ab90:	str	r2, [r4, #44]	; 0x2c
   2ab94:	str	r0, [r4, #48]	; 0x30
   2ab98:	mov	r0, #0
   2ab9c:	pop	{r4, r5, fp, pc}

0002aba0 <flatcc_builder_custom_reset@@Base>:
   2aba0:	push	{r4, r5, r6, sl, fp, lr}
   2aba4:	add	fp, sp, #16
   2aba8:	sub	sp, sp, #8
   2abac:	mov	r5, r1
   2abb0:	mov	r4, r0
   2abb4:	cmp	r2, #0
   2abb8:	beq	2ac18 <flatcc_builder_custom_reset@@Base+0x78>
   2abbc:	mov	r1, r4
   2abc0:	ldr	r0, [r1, #52]!	; 0x34
   2abc4:	cmp	r0, #0
   2abc8:	beq	2ac44 <flatcc_builder_custom_reset@@Base+0xa4>
   2abcc:	ldr	r0, [r4, #40]	; 0x28
   2abd0:	ldr	r6, [r4, #48]	; 0x30
   2abd4:	mov	r2, #0
   2abd8:	mov	r3, #1
   2abdc:	str	r2, [sp]
   2abe0:	mov	r2, #1
   2abe4:	blx	r6
   2abe8:	mvn	r6, #0
   2abec:	cmp	r0, #0
   2abf0:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2abf4:	ldr	r0, [r4, #52]	; 0x34
   2abf8:	ldr	r2, [r4, #56]	; 0x38
   2abfc:	mov	r1, #0
   2ac00:	bl	12b64 <memset@plt>
   2ac04:	mov	r1, r4
   2ac08:	ldr	r0, [r1, #60]!	; 0x3c
   2ac0c:	cmp	r0, #0
   2ac10:	bne	2ac60 <flatcc_builder_custom_reset@@Base+0xc0>
   2ac14:	b	2acac <flatcc_builder_custom_reset@@Base+0x10c>
   2ac18:	ldr	r0, [r4, #52]	; 0x34
   2ac1c:	ldr	r2, [r4, #56]	; 0x38
   2ac20:	cmp	r0, #0
   2ac24:	beq	2ad14 <flatcc_builder_custom_reset@@Base+0x174>
   2ac28:	mov	r1, #0
   2ac2c:	bl	12b64 <memset@plt>
   2ac30:	ldr	r0, [r4, #60]	; 0x3c
   2ac34:	ldr	r2, [r4, #64]	; 0x40
   2ac38:	cmp	r0, #0
   2ac3c:	bne	2ad2c <flatcc_builder_custom_reset@@Base+0x18c>
   2ac40:	b	2ad48 <flatcc_builder_custom_reset@@Base+0x1a8>
   2ac44:	ldr	r0, [r4, #56]	; 0x38
   2ac48:	cmp	r0, #0
   2ac4c:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ac50:	mov	r1, r4
   2ac54:	ldr	r0, [r1, #60]!	; 0x3c
   2ac58:	cmp	r0, #0
   2ac5c:	beq	2acac <flatcc_builder_custom_reset@@Base+0x10c>
   2ac60:	ldr	r0, [r4, #40]	; 0x28
   2ac64:	ldr	r6, [r4, #48]	; 0x30
   2ac68:	mov	r2, #1
   2ac6c:	mov	r3, #1
   2ac70:	str	r2, [sp]
   2ac74:	mov	r2, #1
   2ac78:	blx	r6
   2ac7c:	mvn	r6, #0
   2ac80:	cmp	r0, #0
   2ac84:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2ac88:	ldr	r0, [r4, #60]	; 0x3c
   2ac8c:	ldr	r2, [r4, #64]	; 0x40
   2ac90:	mov	r1, #0
   2ac94:	bl	12b64 <memset@plt>
   2ac98:	mov	r1, r4
   2ac9c:	ldr	r0, [r1, #68]!	; 0x44
   2aca0:	cmp	r0, #0
   2aca4:	bne	2acc8 <flatcc_builder_custom_reset@@Base+0x128>
   2aca8:	b	2af04 <flatcc_builder_custom_reset@@Base+0x364>
   2acac:	ldr	r0, [r4, #64]	; 0x40
   2acb0:	cmp	r0, #0
   2acb4:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2acb8:	mov	r1, r4
   2acbc:	ldr	r0, [r1, #68]!	; 0x44
   2acc0:	cmp	r0, #0
   2acc4:	beq	2af04 <flatcc_builder_custom_reset@@Base+0x364>
   2acc8:	ldr	r0, [r4, #40]	; 0x28
   2accc:	ldr	r6, [r4, #48]	; 0x30
   2acd0:	mov	r2, #2
   2acd4:	mov	r3, #1
   2acd8:	str	r2, [sp]
   2acdc:	mov	r2, #1
   2ace0:	blx	r6
   2ace4:	mvn	r6, #0
   2ace8:	cmp	r0, #0
   2acec:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2acf0:	ldr	r0, [r4, #68]	; 0x44
   2acf4:	ldr	r2, [r4, #72]	; 0x48
   2acf8:	mov	r1, #0
   2acfc:	bl	12b64 <memset@plt>
   2ad00:	mov	r1, r4
   2ad04:	ldr	r0, [r1, #76]!	; 0x4c
   2ad08:	cmp	r0, #0
   2ad0c:	bne	2af20 <flatcc_builder_custom_reset@@Base+0x380>
   2ad10:	b	2af6c <flatcc_builder_custom_reset@@Base+0x3cc>
   2ad14:	cmp	r2, #0
   2ad18:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ad1c:	ldr	r0, [r4, #60]	; 0x3c
   2ad20:	ldr	r2, [r4, #64]	; 0x40
   2ad24:	cmp	r0, #0
   2ad28:	beq	2ad48 <flatcc_builder_custom_reset@@Base+0x1a8>
   2ad2c:	mov	r1, #0
   2ad30:	bl	12b64 <memset@plt>
   2ad34:	ldr	r0, [r4, #68]	; 0x44
   2ad38:	ldr	r2, [r4, #72]	; 0x48
   2ad3c:	cmp	r0, #0
   2ad40:	bne	2ad60 <flatcc_builder_custom_reset@@Base+0x1c0>
   2ad44:	b	2ad7c <flatcc_builder_custom_reset@@Base+0x1dc>
   2ad48:	cmp	r2, #0
   2ad4c:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ad50:	ldr	r0, [r4, #68]	; 0x44
   2ad54:	ldr	r2, [r4, #72]	; 0x48
   2ad58:	cmp	r0, #0
   2ad5c:	beq	2ad7c <flatcc_builder_custom_reset@@Base+0x1dc>
   2ad60:	mov	r1, #0
   2ad64:	bl	12b64 <memset@plt>
   2ad68:	ldr	r0, [r4, #76]	; 0x4c
   2ad6c:	ldr	r2, [r4, #80]	; 0x50
   2ad70:	cmp	r0, #0
   2ad74:	bne	2ad94 <flatcc_builder_custom_reset@@Base+0x1f4>
   2ad78:	b	2adb0 <flatcc_builder_custom_reset@@Base+0x210>
   2ad7c:	cmp	r2, #0
   2ad80:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ad84:	ldr	r0, [r4, #76]	; 0x4c
   2ad88:	ldr	r2, [r4, #80]	; 0x50
   2ad8c:	cmp	r0, #0
   2ad90:	beq	2adb0 <flatcc_builder_custom_reset@@Base+0x210>
   2ad94:	mov	r1, #0
   2ad98:	bl	12b64 <memset@plt>
   2ad9c:	ldr	r0, [r4, #84]	; 0x54
   2ada0:	ldr	r2, [r4, #88]	; 0x58
   2ada4:	cmp	r0, #0
   2ada8:	bne	2adc8 <flatcc_builder_custom_reset@@Base+0x228>
   2adac:	b	2ade4 <flatcc_builder_custom_reset@@Base+0x244>
   2adb0:	cmp	r2, #0
   2adb4:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2adb8:	ldr	r0, [r4, #84]	; 0x54
   2adbc:	ldr	r2, [r4, #88]	; 0x58
   2adc0:	cmp	r0, #0
   2adc4:	beq	2ade4 <flatcc_builder_custom_reset@@Base+0x244>
   2adc8:	mov	r1, #0
   2adcc:	bl	12b64 <memset@plt>
   2add0:	ldr	r0, [r4, #92]	; 0x5c
   2add4:	ldr	r2, [r4, #96]	; 0x60
   2add8:	cmp	r0, #0
   2addc:	bne	2adfc <flatcc_builder_custom_reset@@Base+0x25c>
   2ade0:	b	2ae18 <flatcc_builder_custom_reset@@Base+0x278>
   2ade4:	cmp	r2, #0
   2ade8:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2adec:	ldr	r0, [r4, #92]	; 0x5c
   2adf0:	ldr	r2, [r4, #96]	; 0x60
   2adf4:	cmp	r0, #0
   2adf8:	beq	2ae18 <flatcc_builder_custom_reset@@Base+0x278>
   2adfc:	mov	r1, #0
   2ae00:	bl	12b64 <memset@plt>
   2ae04:	ldr	r0, [r4, #100]	; 0x64
   2ae08:	ldr	r2, [r4, #104]	; 0x68
   2ae0c:	cmp	r0, #0
   2ae10:	bne	2ae30 <flatcc_builder_custom_reset@@Base+0x290>
   2ae14:	b	2ae4c <flatcc_builder_custom_reset@@Base+0x2ac>
   2ae18:	cmp	r2, #0
   2ae1c:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ae20:	ldr	r0, [r4, #100]	; 0x64
   2ae24:	ldr	r2, [r4, #104]	; 0x68
   2ae28:	cmp	r0, #0
   2ae2c:	beq	2ae4c <flatcc_builder_custom_reset@@Base+0x2ac>
   2ae30:	mov	r1, #0
   2ae34:	bl	12b64 <memset@plt>
   2ae38:	ldr	r0, [r4, #108]	; 0x6c
   2ae3c:	ldr	r2, [r4, #112]	; 0x70
   2ae40:	cmp	r0, #0
   2ae44:	bne	2ae64 <flatcc_builder_custom_reset@@Base+0x2c4>
   2ae48:	b	2ae70 <flatcc_builder_custom_reset@@Base+0x2d0>
   2ae4c:	cmp	r2, #0
   2ae50:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ae54:	ldr	r0, [r4, #108]	; 0x6c
   2ae58:	ldr	r2, [r4, #112]	; 0x70
   2ae5c:	cmp	r0, #0
   2ae60:	beq	2ae70 <flatcc_builder_custom_reset@@Base+0x2d0>
   2ae64:	mov	r1, #0
   2ae68:	bl	12b64 <memset@plt>
   2ae6c:	b	2ae78 <flatcc_builder_custom_reset@@Base+0x2d8>
   2ae70:	cmp	r2, #0
   2ae74:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2ae78:	mov	r0, #0
   2ae7c:	vmov.i32	q8, #0	; 0x00000000
   2ae80:	mov	r6, #0
   2ae84:	str	r0, [r4, #120]	; 0x78
   2ae88:	ldr	r1, [r4, #124]	; 0x7c
   2ae8c:	cmp	r1, #0
   2ae90:	movne	r1, #16
   2ae94:	strne	r1, [r4, #124]	; 0x7c
   2ae98:	add	r1, r4, #148	; 0x94
   2ae9c:	strh	r0, [r4, #128]	; 0x80
   2aea0:	str	r0, [r4, #136]	; 0x88
   2aea4:	str	r0, [r4, #140]	; 0x8c
   2aea8:	str	r0, [r4, #32]
   2aeac:	cmp	r5, #0
   2aeb0:	vst1.32	{d16-d17}, [r1]
   2aeb4:	ldr	r2, [r4, #60]	; 0x3c
   2aeb8:	ldr	r1, [r4, #52]	; 0x34
   2aebc:	ldr	r3, [r4, #76]	; 0x4c
   2aec0:	str	r2, [r4, #16]
   2aec4:	str	r0, [r4, #20]
   2aec8:	str	r0, [r4, #24]
   2aecc:	movne	r0, #0
   2aed0:	str	r3, [r4]
   2aed4:	str	r1, [r4, #4]
   2aed8:	strne	r0, [r4, #172]	; 0xac
   2aedc:	strne	r0, [r4, #176]	; 0xb0
   2aee0:	strne	r0, [r4, #180]	; 0xb4
   2aee4:	ldr	r0, [r4, #184]	; 0xb8
   2aee8:	cmp	r0, #0
   2aeec:	beq	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2aef0:	add	r0, r4, #188	; 0xbc
   2aef4:	bl	2f70c <flatcc_emitter_reset@@Base>
   2aef8:	mov	r0, r6
   2aefc:	sub	sp, fp, #16
   2af00:	pop	{r4, r5, r6, sl, fp, pc}
   2af04:	ldr	r0, [r4, #72]	; 0x48
   2af08:	cmp	r0, #0
   2af0c:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2af10:	mov	r1, r4
   2af14:	ldr	r0, [r1, #76]!	; 0x4c
   2af18:	cmp	r0, #0
   2af1c:	beq	2af6c <flatcc_builder_custom_reset@@Base+0x3cc>
   2af20:	ldr	r0, [r4, #40]	; 0x28
   2af24:	ldr	r6, [r4, #48]	; 0x30
   2af28:	mov	r2, #3
   2af2c:	mov	r3, #1
   2af30:	str	r2, [sp]
   2af34:	mov	r2, #1
   2af38:	blx	r6
   2af3c:	mvn	r6, #0
   2af40:	cmp	r0, #0
   2af44:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2af48:	ldr	r0, [r4, #76]	; 0x4c
   2af4c:	ldr	r2, [r4, #80]	; 0x50
   2af50:	mov	r1, #0
   2af54:	bl	12b64 <memset@plt>
   2af58:	mov	r1, r4
   2af5c:	ldr	r0, [r1, #84]!	; 0x54
   2af60:	cmp	r0, #0
   2af64:	bne	2af88 <flatcc_builder_custom_reset@@Base+0x3e8>
   2af68:	b	2afd4 <flatcc_builder_custom_reset@@Base+0x434>
   2af6c:	ldr	r0, [r4, #80]	; 0x50
   2af70:	cmp	r0, #0
   2af74:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2af78:	mov	r1, r4
   2af7c:	ldr	r0, [r1, #84]!	; 0x54
   2af80:	cmp	r0, #0
   2af84:	beq	2afd4 <flatcc_builder_custom_reset@@Base+0x434>
   2af88:	ldr	r0, [r4, #40]	; 0x28
   2af8c:	ldr	r6, [r4, #48]	; 0x30
   2af90:	mov	r2, #4
   2af94:	mov	r3, #1
   2af98:	str	r2, [sp]
   2af9c:	mov	r2, #1
   2afa0:	blx	r6
   2afa4:	mvn	r6, #0
   2afa8:	cmp	r0, #0
   2afac:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2afb0:	ldr	r0, [r4, #84]	; 0x54
   2afb4:	ldr	r2, [r4, #88]	; 0x58
   2afb8:	mov	r1, #0
   2afbc:	bl	12b64 <memset@plt>
   2afc0:	ldr	r0, [r4, #92]	; 0x5c
   2afc4:	ldr	r2, [r4, #96]	; 0x60
   2afc8:	cmp	r0, #0
   2afcc:	bne	2aff0 <flatcc_builder_custom_reset@@Base+0x450>
   2afd0:	b	2b00c <flatcc_builder_custom_reset@@Base+0x46c>
   2afd4:	ldr	r0, [r4, #88]	; 0x58
   2afd8:	cmp	r0, #0
   2afdc:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2afe0:	ldr	r0, [r4, #92]	; 0x5c
   2afe4:	ldr	r2, [r4, #96]	; 0x60
   2afe8:	cmp	r0, #0
   2afec:	beq	2b00c <flatcc_builder_custom_reset@@Base+0x46c>
   2aff0:	mov	r1, #0
   2aff4:	bl	12b64 <memset@plt>
   2aff8:	mov	r1, r4
   2affc:	ldr	r0, [r1, #100]!	; 0x64
   2b000:	cmp	r0, #0
   2b004:	bne	2b024 <flatcc_builder_custom_reset@@Base+0x484>
   2b008:	b	2b070 <flatcc_builder_custom_reset@@Base+0x4d0>
   2b00c:	cmp	r2, #0
   2b010:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2b014:	mov	r1, r4
   2b018:	ldr	r0, [r1, #100]!	; 0x64
   2b01c:	cmp	r0, #0
   2b020:	beq	2b070 <flatcc_builder_custom_reset@@Base+0x4d0>
   2b024:	ldr	r0, [r4, #40]	; 0x28
   2b028:	ldr	r6, [r4, #48]	; 0x30
   2b02c:	mov	r2, #6
   2b030:	mov	r3, #1
   2b034:	str	r2, [sp]
   2b038:	mov	r2, #1
   2b03c:	blx	r6
   2b040:	mvn	r6, #0
   2b044:	cmp	r0, #0
   2b048:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2b04c:	ldr	r0, [r4, #100]	; 0x64
   2b050:	ldr	r2, [r4, #104]	; 0x68
   2b054:	mov	r1, #0
   2b058:	bl	12b64 <memset@plt>
   2b05c:	mov	r1, r4
   2b060:	ldr	r0, [r1, #108]!	; 0x6c
   2b064:	cmp	r0, #0
   2b068:	bne	2b08c <flatcc_builder_custom_reset@@Base+0x4ec>
   2b06c:	b	2b0c0 <flatcc_builder_custom_reset@@Base+0x520>
   2b070:	ldr	r0, [r4, #104]	; 0x68
   2b074:	cmp	r0, #0
   2b078:	bne	2b0cc <flatcc_builder_custom_reset@@Base+0x52c>
   2b07c:	mov	r1, r4
   2b080:	ldr	r0, [r1, #108]!	; 0x6c
   2b084:	cmp	r0, #0
   2b088:	beq	2b0c0 <flatcc_builder_custom_reset@@Base+0x520>
   2b08c:	ldr	r0, [r4, #40]	; 0x28
   2b090:	ldr	r6, [r4, #48]	; 0x30
   2b094:	mov	r2, #7
   2b098:	mov	r3, #1
   2b09c:	str	r2, [sp]
   2b0a0:	mov	r2, #1
   2b0a4:	blx	r6
   2b0a8:	mvn	r6, #0
   2b0ac:	cmp	r0, #0
   2b0b0:	bne	2aef8 <flatcc_builder_custom_reset@@Base+0x358>
   2b0b4:	ldr	r0, [r4, #108]	; 0x6c
   2b0b8:	ldr	r2, [r4, #112]	; 0x70
   2b0bc:	b	2ae64 <flatcc_builder_custom_reset@@Base+0x2c4>
   2b0c0:	ldr	r0, [r4, #112]	; 0x70
   2b0c4:	cmp	r0, #0
   2b0c8:	beq	2ae78 <flatcc_builder_custom_reset@@Base+0x2d8>
   2b0cc:	movw	r0, #20916	; 0x51b4
   2b0d0:	movw	r1, #20934	; 0x51c6
   2b0d4:	movw	r3, #21004	; 0x520c
   2b0d8:	movw	r2, #434	; 0x1b2
   2b0dc:	movt	r0, #3
   2b0e0:	movt	r1, #3
   2b0e4:	movt	r3, #3
   2b0e8:	bl	12bc4 <__assert_fail@plt>

0002b0ec <flatcc_builder_reset@@Base>:
   2b0ec:	mov	r1, #0
   2b0f0:	mov	r2, #0
   2b0f4:	b	2aba0 <flatcc_builder_custom_reset@@Base>

0002b0f8 <flatcc_builder_clear@@Base>:
   2b0f8:	push	{r4, sl, fp, lr}
   2b0fc:	add	fp, sp, #8
   2b100:	sub	sp, sp, #8
   2b104:	mov	r4, r0
   2b108:	ldr	r0, [r0, #40]	; 0x28
   2b10c:	mov	r1, #0
   2b110:	mov	r2, #0
   2b114:	mov	r3, #0
   2b118:	ldr	ip, [r4, #48]	; 0x30
   2b11c:	str	r1, [sp]
   2b120:	add	r1, r4, #52	; 0x34
   2b124:	blx	ip
   2b128:	ldr	r0, [r4, #40]	; 0x28
   2b12c:	ldr	ip, [r4, #48]	; 0x30
   2b130:	mov	r1, #1
   2b134:	mov	r2, #0
   2b138:	mov	r3, #0
   2b13c:	str	r1, [sp]
   2b140:	add	r1, r4, #60	; 0x3c
   2b144:	blx	ip
   2b148:	ldr	r0, [r4, #40]	; 0x28
   2b14c:	ldr	ip, [r4, #48]	; 0x30
   2b150:	mov	r1, #2
   2b154:	mov	r2, #0
   2b158:	mov	r3, #0
   2b15c:	str	r1, [sp]
   2b160:	add	r1, r4, #68	; 0x44
   2b164:	blx	ip
   2b168:	ldr	r0, [r4, #40]	; 0x28
   2b16c:	ldr	ip, [r4, #48]	; 0x30
   2b170:	mov	r1, #3
   2b174:	mov	r2, #0
   2b178:	mov	r3, #0
   2b17c:	str	r1, [sp]
   2b180:	add	r1, r4, #76	; 0x4c
   2b184:	blx	ip
   2b188:	ldr	r0, [r4, #40]	; 0x28
   2b18c:	ldr	ip, [r4, #48]	; 0x30
   2b190:	mov	r1, #4
   2b194:	mov	r2, #0
   2b198:	mov	r3, #0
   2b19c:	str	r1, [sp]
   2b1a0:	add	r1, r4, #84	; 0x54
   2b1a4:	blx	ip
   2b1a8:	ldr	r0, [r4, #40]	; 0x28
   2b1ac:	ldr	ip, [r4, #48]	; 0x30
   2b1b0:	mov	r1, #5
   2b1b4:	mov	r2, #0
   2b1b8:	mov	r3, #0
   2b1bc:	str	r1, [sp]
   2b1c0:	add	r1, r4, #92	; 0x5c
   2b1c4:	blx	ip
   2b1c8:	ldr	r0, [r4, #40]	; 0x28
   2b1cc:	ldr	ip, [r4, #48]	; 0x30
   2b1d0:	mov	r1, #6
   2b1d4:	mov	r2, #0
   2b1d8:	mov	r3, #0
   2b1dc:	str	r1, [sp]
   2b1e0:	add	r1, r4, #100	; 0x64
   2b1e4:	blx	ip
   2b1e8:	ldr	r0, [r4, #40]	; 0x28
   2b1ec:	ldr	ip, [r4, #48]	; 0x30
   2b1f0:	mov	r1, #7
   2b1f4:	mov	r2, #0
   2b1f8:	mov	r3, #0
   2b1fc:	str	r1, [sp]
   2b200:	add	r1, r4, #108	; 0x6c
   2b204:	blx	ip
   2b208:	ldr	r0, [r4, #184]	; 0xb8
   2b20c:	cmp	r0, #0
   2b210:	beq	2b21c <flatcc_builder_clear@@Base+0x124>
   2b214:	add	r0, r4, #188	; 0xbc
   2b218:	bl	2f7d8 <flatcc_emitter_clear@@Base>
   2b21c:	mov	r0, r4
   2b220:	mov	r1, #0
   2b224:	mov	r2, #232	; 0xe8
   2b228:	sub	sp, fp, #8
   2b22c:	pop	{r4, sl, fp, lr}
   2b230:	b	12b64 <memset@plt>

0002b234 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2b234:	push	{r4, r5, r6, r7, fp, lr}
   2b238:	add	fp, sp, #16
   2b23c:	sub	sp, sp, #8
   2b240:	mov	r4, r0
   2b244:	ldr	r0, [r0, #112]	; 0x70
   2b248:	add	r1, r1, #7
   2b24c:	ldr	r7, [r4, #228]	; 0xe4
   2b250:	bic	r5, r1, #3
   2b254:	add	r6, r4, #108	; 0x6c
   2b258:	add	r2, r7, r5
   2b25c:	cmp	r2, r0
   2b260:	bls	2b288 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2b264:	ldr	r0, [r4, #40]	; 0x28
   2b268:	ldr	ip, [r4, #48]	; 0x30
   2b26c:	mov	r1, #7
   2b270:	mov	r3, #0
   2b274:	str	r1, [sp]
   2b278:	mov	r1, r6
   2b27c:	blx	ip
   2b280:	cmp	r0, #0
   2b284:	bne	2b2dc <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   2b288:	ldr	r0, [r6]
   2b28c:	adds	r6, r0, r7
   2b290:	beq	2b2cc <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   2b294:	mov	r0, r6
   2b298:	mov	r1, #0
   2b29c:	mov	r2, r5
   2b2a0:	bl	12b64 <memset@plt>
   2b2a4:	ldr	r0, [r4, #224]	; 0xe0
   2b2a8:	str	r0, [r6], #4
   2b2ac:	ldr	r0, [r4, #228]	; 0xe4
   2b2b0:	add	r1, r0, #4
   2b2b4:	add	r0, r0, r5
   2b2b8:	str	r1, [r4, #224]	; 0xe0
   2b2bc:	str	r0, [r4, #228]	; 0xe4
   2b2c0:	mov	r0, r6
   2b2c4:	sub	sp, fp, #16
   2b2c8:	pop	{r4, r5, r6, r7, fp, pc}
   2b2cc:	mov	r6, #0
   2b2d0:	mov	r0, r6
   2b2d4:	sub	sp, fp, #16
   2b2d8:	pop	{r4, r5, r6, r7, fp, pc}
   2b2dc:	movw	r0, #25452	; 0x636c
   2b2e0:	movw	r1, #20934	; 0x51c6
   2b2e4:	movw	r3, #24998	; 0x61a6
   2b2e8:	mov	r2, #308	; 0x134
   2b2ec:	movt	r0, #3
   2b2f0:	movt	r1, #3
   2b2f4:	movt	r3, #3
   2b2f8:	bl	12bc4 <__assert_fail@plt>

0002b2fc <flatcc_builder_enter_user_frame@@Base>:
   2b2fc:	push	{r4, r5, r6, r7, fp, lr}
   2b300:	add	fp, sp, #16
   2b304:	sub	sp, sp, #8
   2b308:	mov	r4, r0
   2b30c:	ldr	r0, [r0, #112]	; 0x70
   2b310:	add	r1, r1, #7
   2b314:	ldr	r7, [r4, #228]	; 0xe4
   2b318:	bic	r5, r1, #3
   2b31c:	add	r6, r4, #108	; 0x6c
   2b320:	add	r2, r7, r5
   2b324:	cmp	r2, r0
   2b328:	bls	2b350 <flatcc_builder_enter_user_frame@@Base+0x54>
   2b32c:	ldr	r0, [r4, #40]	; 0x28
   2b330:	ldr	ip, [r4, #48]	; 0x30
   2b334:	mov	r1, #7
   2b338:	mov	r3, #0
   2b33c:	str	r1, [sp]
   2b340:	mov	r1, r6
   2b344:	blx	ip
   2b348:	cmp	r0, #0
   2b34c:	bne	2b398 <flatcc_builder_enter_user_frame@@Base+0x9c>
   2b350:	ldr	r0, [r6]
   2b354:	adds	r6, r0, r7
   2b358:	moveq	r0, #0
   2b35c:	subeq	sp, fp, #16
   2b360:	popeq	{r4, r5, r6, r7, fp, pc}
   2b364:	mov	r0, r6
   2b368:	mov	r1, #0
   2b36c:	mov	r2, r5
   2b370:	bl	12b64 <memset@plt>
   2b374:	ldr	r0, [r4, #224]	; 0xe0
   2b378:	str	r0, [r6]
   2b37c:	ldr	r1, [r4, #228]	; 0xe4
   2b380:	add	r0, r1, #4
   2b384:	add	r1, r1, r5
   2b388:	str	r0, [r4, #224]	; 0xe0
   2b38c:	str	r1, [r4, #228]	; 0xe4
   2b390:	sub	sp, fp, #16
   2b394:	pop	{r4, r5, r6, r7, fp, pc}
   2b398:	movw	r0, #25452	; 0x636c
   2b39c:	movw	r1, #20934	; 0x51c6
   2b3a0:	movw	r3, #24998	; 0x61a6
   2b3a4:	mov	r2, #308	; 0x134
   2b3a8:	movt	r0, #3
   2b3ac:	movt	r1, #3
   2b3b0:	movt	r3, #3
   2b3b4:	bl	12bc4 <__assert_fail@plt>

0002b3b8 <flatcc_builder_exit_user_frame@@Base>:
   2b3b8:	ldr	r1, [r0, #224]	; 0xe0
   2b3bc:	cmp	r1, #0
   2b3c0:	subne	r2, r1, #4
   2b3c4:	strne	r2, [r0, #228]	; 0xe4
   2b3c8:	ldrne	r2, [r0, #108]	; 0x6c
   2b3cc:	addne	r1, r2, r1
   2b3d0:	ldrne	r1, [r1, #-4]
   2b3d4:	strne	r1, [r0, #224]	; 0xe0
   2b3d8:	movne	r0, r1
   2b3dc:	bxne	lr
   2b3e0:	push	{fp, lr}
   2b3e4:	mov	fp, sp
   2b3e8:	movw	r0, #21066	; 0x524a
   2b3ec:	movw	r1, #20934	; 0x51c6
   2b3f0:	movw	r3, #21091	; 0x5263
   2b3f4:	movw	r2, #542	; 0x21e
   2b3f8:	movt	r0, #3
   2b3fc:	movt	r1, #3
   2b400:	movt	r3, #3
   2b404:	bl	12bc4 <__assert_fail@plt>

0002b408 <flatcc_builder_exit_user_frame_at@@Base>:
   2b408:	push	{fp, lr}
   2b40c:	mov	fp, sp
   2b410:	ldr	r2, [r0, #224]	; 0xe0
   2b414:	cmp	r2, r1
   2b418:	bcc	2b464 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2b41c:	cmp	r1, #0
   2b420:	str	r1, [r0, #224]	; 0xe0
   2b424:	subne	r2, r1, #4
   2b428:	strne	r2, [r0, #228]	; 0xe4
   2b42c:	ldrne	r2, [r0, #108]	; 0x6c
   2b430:	addne	r1, r2, r1
   2b434:	ldrne	r1, [r1, #-4]
   2b438:	strne	r1, [r0, #224]	; 0xe0
   2b43c:	movne	r0, r1
   2b440:	popne	{fp, pc}
   2b444:	movw	r0, #21066	; 0x524a
   2b448:	movw	r1, #20934	; 0x51c6
   2b44c:	movw	r3, #21091	; 0x5263
   2b450:	movw	r2, #542	; 0x21e
   2b454:	movt	r0, #3
   2b458:	movt	r1, #3
   2b45c:	movt	r3, #3
   2b460:	bl	12bc4 <__assert_fail@plt>
   2b464:	movw	r0, #21149	; 0x529d
   2b468:	movw	r1, #20934	; 0x51c6
   2b46c:	movw	r3, #21180	; 0x52bc
   2b470:	movw	r2, #551	; 0x227
   2b474:	movt	r0, #3
   2b478:	movt	r1, #3
   2b47c:	movt	r3, #3
   2b480:	bl	12bc4 <__assert_fail@plt>

0002b484 <flatcc_builder_get_current_user_frame@@Base>:
   2b484:	ldr	r0, [r0, #224]	; 0xe0
   2b488:	bx	lr

0002b48c <flatcc_builder_get_user_frame_ptr@@Base>:
   2b48c:	ldr	r0, [r0, #108]	; 0x6c
   2b490:	add	r0, r0, r1
   2b494:	bx	lr

0002b498 <flatcc_builder_embed_buffer@@Base>:
   2b498:	push	{r4, r5, r6, r7, fp, lr}
   2b49c:	add	fp, sp, #16
   2b4a0:	sub	sp, sp, #88	; 0x58
   2b4a4:	mov	r4, r0
   2b4a8:	ldr	r0, [fp, #8]
   2b4ac:	mov	r5, r3
   2b4b0:	mov	r7, r2
   2b4b4:	mov	r2, r1
   2b4b8:	sub	r1, fp, #18
   2b4bc:	strh	r0, [fp, #-18]	; 0xffffffee
   2b4c0:	mov	r0, r4
   2b4c4:	ldr	r3, [r4, #152]	; 0x98
   2b4c8:	cmp	r3, #0
   2b4cc:	movwne	r3, #1
   2b4d0:	bl	2b608 <flatcc_builder_embed_buffer@@Base+0x170>
   2b4d4:	ldr	r1, [fp, #12]
   2b4d8:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2b4dc:	ldr	r0, [r4, #136]	; 0x88
   2b4e0:	mov	r2, #0
   2b4e4:	str	r2, [sp, #8]
   2b4e8:	str	r2, [sp, #12]
   2b4ec:	and	r1, r1, #2
   2b4f0:	sub	r3, r3, #1
   2b4f4:	add	r1, r5, r1, lsl #1
   2b4f8:	sub	r1, r0, r1
   2b4fc:	and	r3, r3, r1
   2b500:	add	r1, r3, r5
   2b504:	str	r1, [fp, #-24]	; 0xffffffe8
   2b508:	ldr	r1, [r4, #152]	; 0x98
   2b50c:	cmp	r1, #0
   2b510:	mov	r1, #0
   2b514:	beq	2b534 <flatcc_builder_embed_buffer@@Base+0x9c>
   2b518:	sub	r1, fp, #24
   2b51c:	mov	r2, #1
   2b520:	str	r1, [sp, #16]
   2b524:	mov	r1, #4
   2b528:	str	r1, [sp, #8]
   2b52c:	str	r1, [sp, #20]
   2b530:	str	r2, [sp, #12]
   2b534:	cmp	r5, #0
   2b538:	beq	2b55c <flatcc_builder_embed_buffer@@Base+0xc4>
   2b53c:	add	r6, sp, #8
   2b540:	add	r1, r1, r5
   2b544:	add	r6, r6, r2, lsl #3
   2b548:	add	r2, r2, #1
   2b54c:	str	r1, [sp, #8]
   2b550:	str	r7, [r6, #8]
   2b554:	str	r5, [r6, #12]
   2b558:	str	r2, [sp, #12]
   2b55c:	cmp	r3, #0
   2b560:	beq	2b58c <flatcc_builder_embed_buffer@@Base+0xf4>
   2b564:	add	r7, sp, #8
   2b568:	movw	r6, #20404	; 0x4fb4
   2b56c:	add	r1, r1, r3
   2b570:	add	r7, r7, r2, lsl #3
   2b574:	add	r2, r2, #1
   2b578:	movt	r6, #3
   2b57c:	str	r1, [sp, #8]
   2b580:	str	r6, [r7, #8]
   2b584:	str	r3, [r7, #12]
   2b588:	str	r2, [sp, #12]
   2b58c:	cmp	r1, #0
   2b590:	ble	2b5e8 <flatcc_builder_embed_buffer@@Base+0x150>
   2b594:	sub	r5, r0, r1
   2b598:	ldr	r0, [r4, #36]	; 0x24
   2b59c:	ldr	r7, [r4, #44]	; 0x2c
   2b5a0:	str	r1, [sp]
   2b5a4:	add	r1, sp, #8
   2b5a8:	add	r1, r1, #8
   2b5ac:	mov	r3, r5
   2b5b0:	blx	r7
   2b5b4:	cmp	r0, #0
   2b5b8:	streq	r5, [r4, #136]	; 0x88
   2b5bc:	moveq	r0, r5
   2b5c0:	subeq	sp, fp, #16
   2b5c4:	popeq	{r4, r5, r6, r7, fp, pc}
   2b5c8:	movw	r0, #25452	; 0x636c
   2b5cc:	movw	r1, #20934	; 0x51c6
   2b5d0:	movw	r3, #25131	; 0x622b
   2b5d4:	movw	r2, #651	; 0x28b
   2b5d8:	movt	r0, #3
   2b5dc:	movt	r1, #3
   2b5e0:	movt	r3, #3
   2b5e4:	bl	12bc4 <__assert_fail@plt>
   2b5e8:	movw	r0, #25452	; 0x636c
   2b5ec:	movw	r1, #20934	; 0x51c6
   2b5f0:	movw	r3, #25131	; 0x622b
   2b5f4:	movw	r2, #647	; 0x287
   2b5f8:	movt	r0, #3
   2b5fc:	movt	r1, #3
   2b600:	movt	r3, #3
   2b604:	bl	12bc4 <__assert_fail@plt>
   2b608:	push	{r4, sl, fp, lr}
   2b60c:	add	fp, sp, #8
   2b610:	sub	sp, sp, #80	; 0x50
   2b614:	cmp	r2, #0
   2b618:	bne	2b628 <flatcc_builder_embed_buffer@@Base+0x190>
   2b61c:	ldrh	r2, [r0, #132]	; 0x84
   2b620:	cmp	r2, #0
   2b624:	movweq	r2, #1
   2b628:	ldrh	r4, [r1]
   2b62c:	cmp	r4, #4
   2b630:	movwcc	r4, #4
   2b634:	cmpcs	r4, r2
   2b638:	bcs	2b648 <flatcc_builder_embed_buffer@@Base+0x1b0>
   2b63c:	cmp	r4, r2
   2b640:	movcc	r4, r2
   2b644:	strh	r4, [r1]
   2b648:	cmp	r3, #0
   2b64c:	bne	2b6c0 <flatcc_builder_embed_buffer@@Base+0x228>
   2b650:	ldr	r4, [r0, #140]	; 0x8c
   2b654:	sub	r1, r2, #1
   2b658:	ands	r1, r4, r1
   2b65c:	beq	2b6c0 <flatcc_builder_embed_buffer@@Base+0x228>
   2b660:	movw	r2, #20404	; 0x4fb4
   2b664:	cmn	r1, #1
   2b668:	movt	r2, #3
   2b66c:	str	r2, [sp, #16]
   2b670:	mov	r2, #1
   2b674:	str	r1, [sp, #8]
   2b678:	str	r1, [sp, #20]
   2b67c:	str	r2, [sp, #12]
   2b680:	add	r2, r4, r1
   2b684:	str	r2, [r0, #140]	; 0x8c
   2b688:	ble	2b6c8 <flatcc_builder_embed_buffer@@Base+0x230>
   2b68c:	ldr	r2, [r0, #36]	; 0x24
   2b690:	ldr	ip, [r0, #44]	; 0x2c
   2b694:	add	r0, sp, #8
   2b698:	str	r1, [sp]
   2b69c:	mov	r3, r4
   2b6a0:	add	r1, r0, #8
   2b6a4:	mov	r0, r2
   2b6a8:	mov	r2, #1
   2b6ac:	blx	ip
   2b6b0:	cmp	r0, #0
   2b6b4:	bne	2b6e8 <flatcc_builder_embed_buffer@@Base+0x250>
   2b6b8:	cmn	r4, #1
   2b6bc:	beq	2b708 <flatcc_builder_embed_buffer@@Base+0x270>
   2b6c0:	sub	sp, fp, #8
   2b6c4:	pop	{r4, sl, fp, pc}
   2b6c8:	movw	r0, #25452	; 0x636c
   2b6cc:	movw	r1, #20934	; 0x51c6
   2b6d0:	movw	r3, #25319	; 0x62e7
   2b6d4:	movw	r2, #673	; 0x2a1
   2b6d8:	movt	r0, #3
   2b6dc:	movt	r1, #3
   2b6e0:	movt	r3, #3
   2b6e4:	bl	12bc4 <__assert_fail@plt>
   2b6e8:	movw	r0, #25452	; 0x636c
   2b6ec:	movw	r1, #20934	; 0x51c6
   2b6f0:	movw	r3, #25319	; 0x62e7
   2b6f4:	movw	r2, #677	; 0x2a5
   2b6f8:	movt	r0, #3
   2b6fc:	movt	r1, #3
   2b700:	movt	r3, #3
   2b704:	bl	12bc4 <__assert_fail@plt>
   2b708:	movw	r0, #25452	; 0x636c
   2b70c:	movw	r1, #20934	; 0x51c6
   2b710:	movw	r3, #25065	; 0x61e9
   2b714:	movw	r2, #702	; 0x2be
   2b718:	movt	r0, #3
   2b71c:	movt	r1, #3
   2b720:	movt	r3, #3
   2b724:	bl	12bc4 <__assert_fail@plt>

0002b728 <flatcc_builder_create_buffer@@Base>:
   2b728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b72c:	add	fp, sp, #28
   2b730:	sub	sp, sp, #100	; 0x64
   2b734:	ldr	r8, [fp, #12]
   2b738:	mov	r4, r0
   2b73c:	ldr	r0, [fp, #8]
   2b740:	mov	r7, r1
   2b744:	mov	r5, #0
   2b748:	mov	r9, r3
   2b74c:	sub	r1, fp, #30
   2b750:	str	r5, [sp, #12]
   2b754:	and	r6, r8, #1
   2b758:	strh	r0, [fp, #-30]	; 0xffffffe2
   2b75c:	mov	r0, r4
   2b760:	mov	r3, r6
   2b764:	bl	2b608 <flatcc_builder_embed_buffer@@Base+0x170>
   2b768:	ldrh	r0, [r4, #128]	; 0x80
   2b76c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2b770:	cmp	r0, r1
   2b774:	strhcc	r1, [r4, #128]	; 0x80
   2b778:	cmp	r7, #0
   2b77c:	stmib	sp, {r6, r9}
   2b780:	beq	2b79c <flatcc_builder_create_buffer@@Base+0x74>
   2b784:	ldr	r5, [r7]
   2b788:	cmp	r5, #0
   2b78c:	str	r5, [sp, #12]
   2b790:	movwne	r5, #1
   2b794:	lsl	r7, r5, #2
   2b798:	b	2b7a0 <flatcc_builder_create_buffer@@Base+0x78>
   2b79c:	mov	r7, #0
   2b7a0:	ldr	r9, [r4, #136]	; 0x88
   2b7a4:	mov	sl, #4
   2b7a8:	mvn	r6, #3
   2b7ac:	mov	r3, #0
   2b7b0:	ands	ip, r8, #3
   2b7b4:	and	r2, sl, r8, lsl #1
   2b7b8:	str	r3, [sp, #20]
   2b7bc:	str	r3, [sp, #16]
   2b7c0:	sub	r2, r6, r2
   2b7c4:	sub	r6, r1, #1
   2b7c8:	mov	r1, #4
   2b7cc:	add	r2, r2, r9
   2b7d0:	sub	r2, r2, r7
   2b7d4:	beq	2b7f8 <flatcc_builder_create_buffer@@Base+0xd0>
   2b7d8:	sub	r1, fp, #40	; 0x28
   2b7dc:	mov	r3, #1
   2b7e0:	str	r1, [sp, #24]
   2b7e4:	mov	r1, #4
   2b7e8:	str	r1, [sp, #16]
   2b7ec:	str	r1, [sp, #28]
   2b7f0:	mov	r1, #8
   2b7f4:	str	r3, [sp, #20]
   2b7f8:	add	lr, sp, #16
   2b7fc:	and	r6, r2, r6
   2b800:	sub	r0, fp, #36	; 0x24
   2b804:	str	r1, [sp, #16]
   2b808:	cmp	r5, #0
   2b80c:	add	r2, lr, r3, lsl #3
   2b810:	str	r0, [r2, #8]
   2b814:	str	sl, [r2, #12]
   2b818:	add	r2, r3, #1
   2b81c:	str	r2, [sp, #20]
   2b820:	beq	2b844 <flatcc_builder_create_buffer@@Base+0x11c>
   2b824:	add	r1, r1, r7
   2b828:	add	r0, lr, r2, lsl #3
   2b82c:	add	r2, sp, #12
   2b830:	str	r1, [sp, #16]
   2b834:	str	r2, [r0, #8]
   2b838:	orr	r2, r3, #2
   2b83c:	str	r7, [r0, #12]
   2b840:	str	r2, [sp, #20]
   2b844:	cmp	r6, #0
   2b848:	beq	2b870 <flatcc_builder_create_buffer@@Base+0x148>
   2b84c:	movw	r3, #20404	; 0x4fb4
   2b850:	add	r1, r1, r6
   2b854:	add	r0, lr, r2, lsl #3
   2b858:	add	r2, r2, #1
   2b85c:	movt	r3, #3
   2b860:	str	r1, [sp, #16]
   2b864:	str	r3, [r0, #8]
   2b868:	str	r6, [r0, #12]
   2b86c:	str	r2, [sp, #20]
   2b870:	ldr	r5, [sp, #4]
   2b874:	sub	r7, r9, r1
   2b878:	cmp	ip, #0
   2b87c:	mov	r6, #144	; 0x90
   2b880:	ldr	r3, [sp, #8]
   2b884:	mov	r0, r7
   2b888:	addne	r0, r0, #4
   2b88c:	cmp	r5, #0
   2b890:	sub	r3, r3, r0
   2b894:	movweq	r6, #140	; 0x8c
   2b898:	cmp	r1, #0
   2b89c:	ldr	r6, [r4, r6]
   2b8a0:	str	r3, [fp, #-36]	; 0xffffffdc
   2b8a4:	sub	r0, r6, r0
   2b8a8:	str	r0, [fp, #-40]	; 0xffffffd8
   2b8ac:	ble	2b904 <flatcc_builder_create_buffer@@Base+0x1dc>
   2b8b0:	ldr	r0, [r4, #36]	; 0x24
   2b8b4:	ldr	r6, [r4, #44]	; 0x2c
   2b8b8:	str	r1, [sp]
   2b8bc:	add	r1, lr, #8
   2b8c0:	mov	r3, r7
   2b8c4:	blx	r6
   2b8c8:	cmp	r0, #0
   2b8cc:	bne	2b924 <flatcc_builder_create_buffer@@Base+0x1fc>
   2b8d0:	cmp	r7, #0
   2b8d4:	str	r7, [r4, #136]	; 0x88
   2b8d8:	movne	r0, r7
   2b8dc:	subne	sp, fp, #28
   2b8e0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b8e4:	movw	r0, #25452	; 0x636c
   2b8e8:	movw	r1, #20934	; 0x51c6
   2b8ec:	movw	r3, #21249	; 0x5301
   2b8f0:	mov	r2, #772	; 0x304
   2b8f4:	movt	r0, #3
   2b8f8:	movt	r1, #3
   2b8fc:	movt	r3, #3
   2b900:	bl	12bc4 <__assert_fail@plt>
   2b904:	movw	r0, #25452	; 0x636c
   2b908:	movw	r1, #20934	; 0x51c6
   2b90c:	movw	r3, #25131	; 0x622b
   2b910:	movw	r2, #647	; 0x287
   2b914:	movt	r0, #3
   2b918:	movt	r1, #3
   2b91c:	movt	r3, #3
   2b920:	bl	12bc4 <__assert_fail@plt>
   2b924:	movw	r0, #25452	; 0x636c
   2b928:	movw	r1, #20934	; 0x51c6
   2b92c:	movw	r3, #25131	; 0x622b
   2b930:	movw	r2, #651	; 0x28b
   2b934:	movt	r0, #3
   2b938:	movt	r1, #3
   2b93c:	movt	r3, #3
   2b940:	bl	12bc4 <__assert_fail@plt>

0002b944 <flatcc_builder_create_struct@@Base>:
   2b944:	push	{r4, r5, r6, sl, fp, lr}
   2b948:	add	fp, sp, #16
   2b94c:	sub	sp, sp, #80	; 0x50
   2b950:	cmp	r3, #0
   2b954:	beq	2ba2c <flatcc_builder_create_struct@@Base+0xe8>
   2b958:	mov	r5, r0
   2b95c:	ldrh	r0, [r0, #128]	; 0x80
   2b960:	mov	r4, #0
   2b964:	cmp	r0, r3
   2b968:	strhcc	r3, [r5, #128]	; 0x80
   2b96c:	sub	r3, r3, #1
   2b970:	cmp	r2, #0
   2b974:	ldr	r0, [r5, #136]	; 0x88
   2b978:	str	r4, [sp, #12]
   2b97c:	str	r4, [sp, #8]
   2b980:	movne	r4, #1
   2b984:	strne	r1, [sp, #16]
   2b988:	strne	r2, [sp, #8]
   2b98c:	strne	r2, [sp, #20]
   2b990:	strne	r4, [sp, #12]
   2b994:	sub	r6, r0, r2
   2b998:	and	r3, r6, r3
   2b99c:	cmp	r3, #0
   2b9a0:	beq	2b9cc <flatcc_builder_create_struct@@Base+0x88>
   2b9a4:	add	r1, sp, #8
   2b9a8:	movw	r6, #20404	; 0x4fb4
   2b9ac:	add	r2, r3, r2
   2b9b0:	add	r1, r1, r4, lsl #3
   2b9b4:	add	r4, r4, #1
   2b9b8:	movt	r6, #3
   2b9bc:	str	r2, [sp, #8]
   2b9c0:	str	r6, [r1, #8]
   2b9c4:	str	r3, [r1, #12]
   2b9c8:	str	r4, [sp, #12]
   2b9cc:	cmp	r2, #0
   2b9d0:	ble	2ba4c <flatcc_builder_create_struct@@Base+0x108>
   2b9d4:	sub	r6, r0, r2
   2b9d8:	ldr	r0, [r5, #36]	; 0x24
   2b9dc:	ldr	ip, [r5, #44]	; 0x2c
   2b9e0:	add	r1, sp, #8
   2b9e4:	str	r2, [sp]
   2b9e8:	mov	r2, r4
   2b9ec:	add	r1, r1, #8
   2b9f0:	mov	r3, r6
   2b9f4:	blx	ip
   2b9f8:	cmp	r0, #0
   2b9fc:	streq	r6, [r5, #136]	; 0x88
   2ba00:	moveq	r0, r6
   2ba04:	subeq	sp, fp, #16
   2ba08:	popeq	{r4, r5, r6, sl, fp, pc}
   2ba0c:	movw	r0, #25452	; 0x636c
   2ba10:	movw	r1, #20934	; 0x51c6
   2ba14:	movw	r3, #25131	; 0x622b
   2ba18:	movw	r2, #651	; 0x28b
   2ba1c:	movt	r0, #3
   2ba20:	movt	r1, #3
   2ba24:	movt	r3, #3
   2ba28:	bl	12bc4 <__assert_fail@plt>
   2ba2c:	movw	r0, #21380	; 0x5384
   2ba30:	movw	r1, #20934	; 0x51c6
   2ba34:	movw	r3, #21391	; 0x538f
   2ba38:	movw	r2, #783	; 0x30f
   2ba3c:	movt	r0, #3
   2ba40:	movt	r1, #3
   2ba44:	movt	r3, #3
   2ba48:	bl	12bc4 <__assert_fail@plt>
   2ba4c:	movw	r0, #25452	; 0x636c
   2ba50:	movw	r1, #20934	; 0x51c6
   2ba54:	movw	r3, #25131	; 0x622b
   2ba58:	movw	r2, #647	; 0x287
   2ba5c:	movt	r0, #3
   2ba60:	movt	r1, #3
   2ba64:	movt	r3, #3
   2ba68:	bl	12bc4 <__assert_fail@plt>

0002ba6c <flatcc_builder_start_buffer@@Base>:
   2ba6c:	push	{r4, r5, r6, r7, fp, lr}
   2ba70:	add	fp, sp, #16
   2ba74:	mov	r5, r1
   2ba78:	ldrh	r1, [r0, #128]	; 0x80
   2ba7c:	mov	r6, r3
   2ba80:	mov	r7, r2
   2ba84:	mov	r4, r0
   2ba88:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2ba8c:	mov	r1, r0
   2ba90:	mvn	r0, #0
   2ba94:	cmp	r1, #0
   2ba98:	popne	{r4, r5, r6, r7, fp, pc}
   2ba9c:	mov	r0, #1
   2baa0:	cmp	r5, #0
   2baa4:	strh	r0, [r4, #128]	; 0x80
   2baa8:	ldrh	r1, [r4, #132]	; 0x84
   2baac:	ldr	r2, [r4, #32]
   2bab0:	strh	r1, [r2, #34]	; 0x22
   2bab4:	strh	r7, [r4, #132]	; 0x84
   2bab8:	ldrh	r1, [r4, #164]	; 0xa4
   2babc:	ldr	r2, [r4, #32]
   2bac0:	strh	r1, [r2, #32]
   2bac4:	strh	r6, [r4, #164]	; 0xa4
   2bac8:	ldr	r1, [r4, #32]
   2bacc:	ldr	r2, [r4, #144]	; 0x90
   2bad0:	str	r2, [r1, #20]
   2bad4:	ldr	r1, [r4, #32]
   2bad8:	ldr	r2, [r4, #152]	; 0x98
   2badc:	str	r2, [r1, #28]
   2bae0:	ldr	r3, [r4, #148]	; 0x94
   2bae4:	ldr	r1, [r4, #32]
   2bae8:	ldr	r2, [r4, #136]	; 0x88
   2baec:	ldr	r7, [r4, #168]	; 0xa8
   2baf0:	add	r6, r3, #1
   2baf4:	str	r2, [r4, #144]	; 0x90
   2baf8:	str	r6, [r4, #148]	; 0x94
   2bafc:	str	r3, [r4, #152]	; 0x98
   2bb00:	str	r7, [r1, #16]
   2bb04:	movw	r1, #20404	; 0x4fb4
   2bb08:	movt	r1, #3
   2bb0c:	movne	r1, r5
   2bb10:	ldr	r1, [r1]
   2bb14:	str	r1, [r4, #168]	; 0xa8
   2bb18:	ldr	r1, [r4, #32]
   2bb1c:	strh	r0, [r1, #14]
   2bb20:	mov	r0, #0
   2bb24:	pop	{r4, r5, r6, r7, fp, pc}
   2bb28:	push	{r4, r5, r6, r7, fp, lr}
   2bb2c:	add	fp, sp, #16
   2bb30:	sub	sp, sp, #8
   2bb34:	mov	r5, r1
   2bb38:	ldr	r1, [r0, #156]	; 0x9c
   2bb3c:	ldr	r2, [r0, #160]	; 0xa0
   2bb40:	mov	r4, r0
   2bb44:	add	r0, r1, #1
   2bb48:	cmp	r1, r2
   2bb4c:	str	r0, [r4, #156]	; 0x9c
   2bb50:	bge	2bb64 <flatcc_builder_start_buffer@@Base+0xf8>
   2bb54:	ldr	r0, [r4, #32]
   2bb58:	add	r0, r0, #36	; 0x24
   2bb5c:	str	r0, [r4, #32]
   2bb60:	b	2bbf8 <flatcc_builder_start_buffer@@Base+0x18c>
   2bb64:	ldr	r2, [r4, #176]	; 0xb0
   2bb68:	mvn	r6, #0
   2bb6c:	cmp	r2, #1
   2bb70:	cmpge	r1, r2
   2bb74:	bge	2bc30 <flatcc_builder_start_buffer@@Base+0x1c4>
   2bb78:	add	r7, r0, r0, lsl #3
   2bb7c:	ldr	r0, [r4, #88]	; 0x58
   2bb80:	lsl	r2, r7, #2
   2bb84:	cmp	r2, r0
   2bb88:	bls	2bbb0 <flatcc_builder_start_buffer@@Base+0x144>
   2bb8c:	ldr	r0, [r4, #40]	; 0x28
   2bb90:	ldr	ip, [r4, #48]	; 0x30
   2bb94:	mov	r3, #4
   2bb98:	add	r1, r4, #84	; 0x54
   2bb9c:	str	r3, [sp]
   2bba0:	mov	r3, #0
   2bba4:	blx	ip
   2bba8:	cmp	r0, #0
   2bbac:	bne	2bc3c <flatcc_builder_start_buffer@@Base+0x1d0>
   2bbb0:	ldr	r1, [r4, #84]	; 0x54
   2bbb4:	mvn	r0, #35	; 0x23
   2bbb8:	add	r0, r0, r7, lsl #2
   2bbbc:	adds	r0, r0, r1
   2bbc0:	str	r0, [r4, #32]
   2bbc4:	beq	2bc30 <flatcc_builder_start_buffer@@Base+0x1c4>
   2bbc8:	ldr	r1, [r4, #88]	; 0x58
   2bbcc:	movw	r3, #36409	; 0x8e39
   2bbd0:	ldr	r2, [r4, #176]	; 0xb0
   2bbd4:	movt	r3, #14563	; 0x38e3
   2bbd8:	umull	r1, r3, r1, r3
   2bbdc:	lsr	r1, r3, #3
   2bbe0:	cmp	r2, r3, lsr #3
   2bbe4:	mov	r3, r1
   2bbe8:	movlt	r3, r2
   2bbec:	cmp	r2, #0
   2bbf0:	movle	r3, r1
   2bbf4:	str	r3, [r4, #160]	; 0xa0
   2bbf8:	ldr	r1, [r4, #20]
   2bbfc:	mvn	r3, #3
   2bc00:	mov	r6, #0
   2bc04:	str	r1, [r0, #8]
   2bc08:	ldrh	r2, [r4, #130]	; 0x82
   2bc0c:	strh	r2, [r0, #12]
   2bc10:	strh	r5, [r4, #130]	; 0x82
   2bc14:	ldr	r2, [r4, #28]
   2bc18:	stm	r0, {r2, r3}
   2bc1c:	add	r0, r1, r2
   2bc20:	str	r6, [r4, #20]
   2bc24:	add	r0, r0, #7
   2bc28:	bic	r0, r0, #7
   2bc2c:	str	r0, [r4, #28]
   2bc30:	mov	r0, r6
   2bc34:	sub	sp, fp, #16
   2bc38:	pop	{r4, r5, r6, r7, fp, pc}
   2bc3c:	movw	r0, #25452	; 0x636c
   2bc40:	movw	r1, #20934	; 0x51c6
   2bc44:	movw	r3, #24998	; 0x61a6
   2bc48:	mov	r2, #308	; 0x134
   2bc4c:	movt	r0, #3
   2bc50:	movt	r1, #3
   2bc54:	movt	r3, #3
   2bc58:	bl	12bc4 <__assert_fail@plt>

0002bc5c <flatcc_builder_end_buffer@@Base>:
   2bc5c:	push	{r4, r5, r6, sl, fp, lr}
   2bc60:	add	fp, sp, #16
   2bc64:	sub	sp, sp, #8
   2bc68:	mov	r4, r0
   2bc6c:	ldr	r0, [r0, #32]
   2bc70:	ldrh	r0, [r0, #14]
   2bc74:	cmp	r0, #1
   2bc78:	bne	2bd6c <flatcc_builder_end_buffer@@Base+0x110>
   2bc7c:	mov	r3, r1
   2bc80:	ldr	r1, [r4, #152]	; 0x98
   2bc84:	ldrh	r0, [r4, #164]	; 0xa4
   2bc88:	ldrh	r2, [r4, #132]	; 0x84
   2bc8c:	cmp	r1, #0
   2bc90:	ldrh	r1, [r4, #128]	; 0x80
   2bc94:	and	r0, r0, #2
   2bc98:	orrne	r0, r0, #1
   2bc9c:	cmp	r1, r2
   2bca0:	movcc	r1, r2
   2bca4:	strhcc	r2, [r4, #128]	; 0x80
   2bca8:	str	r0, [sp, #4]
   2bcac:	mov	r0, r4
   2bcb0:	str	r1, [sp]
   2bcb4:	add	r1, r4, #168	; 0xa8
   2bcb8:	bl	2b728 <flatcc_builder_create_buffer@@Base>
   2bcbc:	mov	r6, r0
   2bcc0:	cmp	r0, #0
   2bcc4:	beq	2bd60 <flatcc_builder_end_buffer@@Base+0x104>
   2bcc8:	ldr	r1, [r4, #32]
   2bccc:	ldr	r0, [r4, #16]
   2bcd0:	ldr	r2, [r4, #20]
   2bcd4:	ldr	r3, [r1, #20]
   2bcd8:	str	r3, [r4, #144]	; 0x90
   2bcdc:	ldr	r3, [r1, #28]
   2bce0:	str	r3, [r4, #152]	; 0x98
   2bce4:	ldr	r3, [r1, #16]
   2bce8:	str	r3, [r4, #168]	; 0xa8
   2bcec:	ldrh	r1, [r1, #32]
   2bcf0:	strh	r1, [r4, #164]	; 0xa4
   2bcf4:	mov	r1, #0
   2bcf8:	bl	12b64 <memset@plt>
   2bcfc:	ldr	r0, [r4, #32]
   2bd00:	ldr	r1, [r4, #60]	; 0x3c
   2bd04:	ldr	r2, [r4, #64]	; 0x40
   2bd08:	ldr	r3, [r0, #8]
   2bd0c:	str	r3, [r4, #20]
   2bd10:	ldr	r3, [r0]
   2bd14:	str	r3, [r4, #28]
   2bd18:	add	r1, r1, r3
   2bd1c:	ldr	r5, [r0, #4]
   2bd20:	str	r1, [r4, #16]
   2bd24:	sub	r1, r2, r3
   2bd28:	cmp	r1, r5
   2bd2c:	movhi	r1, r5
   2bd30:	str	r1, [r4, #24]
   2bd34:	ldrh	r1, [r4, #130]	; 0x82
   2bd38:	ldrh	r2, [r4, #128]	; 0x80
   2bd3c:	cmp	r2, r1
   2bd40:	strhcc	r1, [r4, #128]	; 0x80
   2bd44:	ldrh	r1, [r0, #12]
   2bd48:	sub	r0, r0, #36	; 0x24
   2bd4c:	str	r0, [r4, #32]
   2bd50:	strh	r1, [r4, #130]	; 0x82
   2bd54:	ldr	r0, [r4, #156]	; 0x9c
   2bd58:	sub	r0, r0, #1
   2bd5c:	str	r0, [r4, #156]	; 0x9c
   2bd60:	mov	r0, r6
   2bd64:	sub	sp, fp, #16
   2bd68:	pop	{r4, r5, r6, sl, fp, pc}
   2bd6c:	movw	r0, #21493	; 0x53f5
   2bd70:	movw	r1, #20934	; 0x51c6
   2bd74:	movw	r3, #21537	; 0x5421
   2bd78:	movw	r2, #838	; 0x346
   2bd7c:	movt	r0, #3
   2bd80:	movt	r1, #3
   2bd84:	movt	r3, #3
   2bd88:	bl	12bc4 <__assert_fail@plt>

0002bd8c <flatcc_builder_start_struct@@Base>:
   2bd8c:	push	{r4, r5, r6, r7, fp, lr}
   2bd90:	add	fp, sp, #16
   2bd94:	sub	sp, sp, #8
   2bd98:	mov	r6, r1
   2bd9c:	mov	r1, r2
   2bda0:	mov	r4, r0
   2bda4:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2bda8:	mov	r5, #0
   2bdac:	cmp	r0, #0
   2bdb0:	bne	2be2c <flatcc_builder_start_struct@@Base+0xa0>
   2bdb4:	ldr	r2, [r4, #32]
   2bdb8:	mov	r0, #2
   2bdbc:	mvn	r7, #3
   2bdc0:	strh	r0, [r2, #14]
   2bdc4:	ldr	r1, [r4, #28]
   2bdc8:	ldr	r3, [r4, #64]	; 0x40
   2bdcc:	ldr	r0, [r4, #60]	; 0x3c
   2bdd0:	sub	r3, r3, r1
   2bdd4:	add	r0, r0, r1
   2bdd8:	cmn	r3, #4
   2bddc:	str	r0, [r4, #16]
   2bde0:	movcs	r3, r7
   2bde4:	str	r3, [r4, #24]
   2bde8:	str	r7, [r2, #4]
   2bdec:	ldr	r7, [r4, #20]
   2bdf0:	add	r2, r7, r6
   2bdf4:	cmp	r2, r3
   2bdf8:	str	r2, [r4, #20]
   2bdfc:	bcc	2be68 <flatcc_builder_start_struct@@Base+0xdc>
   2be00:	ldr	r0, [r4, #40]	; 0x28
   2be04:	ldr	r6, [r4, #48]	; 0x30
   2be08:	add	r1, r1, r2
   2be0c:	mov	r3, #1
   2be10:	str	r3, [sp]
   2be14:	add	r2, r1, #1
   2be18:	add	r1, r4, #60	; 0x3c
   2be1c:	mov	r3, #1
   2be20:	blx	r6
   2be24:	cmp	r0, #0
   2be28:	beq	2be38 <flatcc_builder_start_struct@@Base+0xac>
   2be2c:	mov	r0, r5
   2be30:	sub	sp, fp, #16
   2be34:	pop	{r4, r5, r6, r7, fp, pc}
   2be38:	ldr	r1, [r4, #28]
   2be3c:	ldr	r0, [r4, #60]	; 0x3c
   2be40:	ldr	r3, [r4, #64]	; 0x40
   2be44:	ldr	r2, [r4, #32]
   2be48:	add	r0, r0, r1
   2be4c:	sub	r1, r3, r1
   2be50:	mvn	r3, #3
   2be54:	cmn	r1, #4
   2be58:	str	r0, [r4, #16]
   2be5c:	movcs	r1, r3
   2be60:	str	r1, [r4, #24]
   2be64:	str	r3, [r2, #4]
   2be68:	add	r5, r0, r7
   2be6c:	mov	r0, r5
   2be70:	sub	sp, fp, #16
   2be74:	pop	{r4, r5, r6, r7, fp, pc}

0002be78 <flatcc_builder_struct_edit@@Base>:
   2be78:	ldr	r0, [r0, #16]
   2be7c:	bx	lr

0002be80 <flatcc_builder_end_struct@@Base>:
   2be80:	push	{r4, r5, fp, lr}
   2be84:	add	fp, sp, #8
   2be88:	mov	r4, r0
   2be8c:	ldr	r0, [r0, #32]
   2be90:	ldrh	r0, [r0, #14]
   2be94:	cmp	r0, #2
   2be98:	bne	2bf38 <flatcc_builder_end_struct@@Base+0xb8>
   2be9c:	ldrh	r3, [r4, #130]	; 0x82
   2bea0:	ldr	r1, [r4, #16]
   2bea4:	ldr	r2, [r4, #20]
   2bea8:	mov	r0, r4
   2beac:	bl	2b944 <flatcc_builder_create_struct@@Base>
   2beb0:	mov	r5, r0
   2beb4:	cmp	r0, #0
   2beb8:	beq	2bf30 <flatcc_builder_end_struct@@Base+0xb0>
   2bebc:	ldr	r0, [r4, #16]
   2bec0:	ldr	r2, [r4, #20]
   2bec4:	mov	r1, #0
   2bec8:	bl	12b64 <memset@plt>
   2becc:	ldr	r0, [r4, #32]
   2bed0:	ldr	r1, [r4, #60]	; 0x3c
   2bed4:	ldr	ip, [r4, #64]	; 0x40
   2bed8:	ldr	r3, [r0, #8]
   2bedc:	str	r3, [r4, #20]
   2bee0:	ldr	r3, [r0]
   2bee4:	str	r3, [r4, #28]
   2bee8:	add	r1, r1, r3
   2beec:	ldr	r2, [r0, #4]
   2bef0:	str	r1, [r4, #16]
   2bef4:	sub	r1, ip, r3
   2bef8:	cmp	r1, r2
   2befc:	movhi	r1, r2
   2bf00:	str	r1, [r4, #24]
   2bf04:	ldrh	r1, [r4, #130]	; 0x82
   2bf08:	ldrh	r2, [r4, #128]	; 0x80
   2bf0c:	cmp	r2, r1
   2bf10:	strhcc	r1, [r4, #128]	; 0x80
   2bf14:	ldrh	r1, [r0, #12]
   2bf18:	sub	r0, r0, #36	; 0x24
   2bf1c:	str	r0, [r4, #32]
   2bf20:	strh	r1, [r4, #130]	; 0x82
   2bf24:	ldr	r0, [r4, #156]	; 0x9c
   2bf28:	sub	r0, r0, #1
   2bf2c:	str	r0, [r4, #156]	; 0x9c
   2bf30:	mov	r0, r5
   2bf34:	pop	{r4, r5, fp, pc}
   2bf38:	movw	r0, #21626	; 0x547a
   2bf3c:	movw	r1, #20934	; 0x51c6
   2bf40:	movw	r3, #21670	; 0x54a6
   2bf44:	mov	r2, #872	; 0x368
   2bf48:	movt	r0, #3
   2bf4c:	movt	r1, #3
   2bf50:	movt	r3, #3
   2bf54:	bl	12bc4 <__assert_fail@plt>

0002bf58 <flatcc_builder_extend_vector@@Base>:
   2bf58:	push	{r4, r5, fp, lr}
   2bf5c:	add	fp, sp, #8
   2bf60:	sub	sp, sp, #8
   2bf64:	mov	r4, r0
   2bf68:	ldr	r0, [r0, #32]
   2bf6c:	ldr	r2, [r0, #20]
   2bf70:	adds	r2, r2, r1
   2bf74:	bcs	2c034 <flatcc_builder_extend_vector@@Base+0xdc>
   2bf78:	ldr	r3, [r0, #24]
   2bf7c:	cmp	r2, r3
   2bf80:	bhi	2c034 <flatcc_builder_extend_vector@@Base+0xdc>
   2bf84:	str	r2, [r0, #20]
   2bf88:	ldr	r2, [r4, #32]
   2bf8c:	ldr	r5, [r4, #20]
   2bf90:	ldr	r0, [r4, #24]
   2bf94:	ldr	r2, [r2, #16]
   2bf98:	mla	r1, r2, r1, r5
   2bf9c:	cmp	r1, r0
   2bfa0:	str	r1, [r4, #20]
   2bfa4:	bcs	2bfb8 <flatcc_builder_extend_vector@@Base+0x60>
   2bfa8:	ldr	r0, [r4, #16]
   2bfac:	add	r0, r0, r5
   2bfb0:	sub	sp, fp, #8
   2bfb4:	pop	{r4, r5, fp, pc}
   2bfb8:	ldr	r2, [r4, #28]
   2bfbc:	ldr	r0, [r4, #40]	; 0x28
   2bfc0:	ldr	ip, [r4, #48]	; 0x30
   2bfc4:	mov	r3, #1
   2bfc8:	str	r3, [sp]
   2bfcc:	mov	r3, #1
   2bfd0:	add	r1, r1, r2
   2bfd4:	add	r2, r1, #1
   2bfd8:	add	r1, r4, #60	; 0x3c
   2bfdc:	blx	ip
   2bfe0:	mov	r1, r0
   2bfe4:	mov	r0, #0
   2bfe8:	cmp	r1, #0
   2bfec:	beq	2bff8 <flatcc_builder_extend_vector@@Base+0xa0>
   2bff0:	sub	sp, fp, #8
   2bff4:	pop	{r4, r5, fp, pc}
   2bff8:	ldr	r1, [r4, #28]
   2bffc:	ldr	r0, [r4, #60]	; 0x3c
   2c000:	ldr	r3, [r4, #64]	; 0x40
   2c004:	ldr	r2, [r4, #32]
   2c008:	add	r0, r0, r1
   2c00c:	sub	r1, r3, r1
   2c010:	mvn	r3, #3
   2c014:	cmn	r1, #4
   2c018:	str	r0, [r4, #16]
   2c01c:	movcs	r1, r3
   2c020:	str	r1, [r4, #24]
   2c024:	str	r3, [r2, #4]
   2c028:	add	r0, r0, r5
   2c02c:	sub	sp, fp, #8
   2c030:	pop	{r4, r5, fp, pc}
   2c034:	movw	r0, #25205	; 0x6275
   2c038:	movw	r1, #20934	; 0x51c6
   2c03c:	movw	r3, #25232	; 0x6290
   2c040:	mov	r2, #892	; 0x37c
   2c044:	movt	r0, #3
   2c048:	movt	r1, #3
   2c04c:	movt	r3, #3
   2c050:	bl	12bc4 <__assert_fail@plt>

0002c054 <flatcc_builder_vector_push@@Base>:
   2c054:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c058:	add	fp, sp, #24
   2c05c:	sub	sp, sp, #8
   2c060:	mov	r5, r0
   2c064:	ldr	r0, [r0, #32]
   2c068:	mov	r8, r1
   2c06c:	ldrh	r1, [r0, #14]
   2c070:	cmp	r1, #4
   2c074:	bne	2c160 <flatcc_builder_vector_push@@Base+0x10c>
   2c078:	ldr	r1, [r0, #20]
   2c07c:	ldr	r2, [r0, #24]
   2c080:	cmp	r1, r2
   2c084:	bhi	2c180 <flatcc_builder_vector_push@@Base+0x12c>
   2c088:	add	r1, r1, #1
   2c08c:	str	r1, [r0, #20]
   2c090:	ldr	r1, [r5, #32]
   2c094:	ldr	r4, [r5, #20]
   2c098:	ldr	r0, [r5, #24]
   2c09c:	ldr	r6, [r1, #16]
   2c0a0:	add	r1, r4, r6
   2c0a4:	cmp	r1, r0
   2c0a8:	str	r1, [r5, #20]
   2c0ac:	bcs	2c0d8 <flatcc_builder_vector_push@@Base+0x84>
   2c0b0:	ldr	r0, [r5, #16]
   2c0b4:	adds	r7, r0, r4
   2c0b8:	beq	2c150 <flatcc_builder_vector_push@@Base+0xfc>
   2c0bc:	mov	r0, r7
   2c0c0:	mov	r1, r8
   2c0c4:	mov	r2, r6
   2c0c8:	bl	12ab0 <memcpy@plt>
   2c0cc:	mov	r0, r7
   2c0d0:	sub	sp, fp, #24
   2c0d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c0d8:	ldr	r2, [r5, #28]
   2c0dc:	ldr	r0, [r5, #40]	; 0x28
   2c0e0:	ldr	r7, [r5, #48]	; 0x30
   2c0e4:	mov	r3, #1
   2c0e8:	str	r3, [sp]
   2c0ec:	mov	r3, #1
   2c0f0:	add	r1, r1, r2
   2c0f4:	add	r2, r1, #1
   2c0f8:	add	r1, r5, #60	; 0x3c
   2c0fc:	blx	r7
   2c100:	mov	r7, #0
   2c104:	cmp	r0, #0
   2c108:	beq	2c118 <flatcc_builder_vector_push@@Base+0xc4>
   2c10c:	mov	r0, r7
   2c110:	sub	sp, fp, #24
   2c114:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c118:	ldr	r1, [r5, #28]
   2c11c:	ldr	r0, [r5, #60]	; 0x3c
   2c120:	ldr	r3, [r5, #64]	; 0x40
   2c124:	ldr	r2, [r5, #32]
   2c128:	add	r0, r0, r1
   2c12c:	sub	r1, r3, r1
   2c130:	mvn	r3, #3
   2c134:	cmn	r1, #4
   2c138:	str	r0, [r5, #16]
   2c13c:	movcs	r1, r3
   2c140:	str	r1, [r5, #24]
   2c144:	str	r3, [r2, #4]
   2c148:	adds	r7, r0, r4
   2c14c:	bne	2c0bc <flatcc_builder_vector_push@@Base+0x68>
   2c150:	mov	r7, #0
   2c154:	mov	r0, r7
   2c158:	sub	sp, fp, #24
   2c15c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c160:	movw	r0, #21737	; 0x54e9
   2c164:	movw	r1, #20934	; 0x51c6
   2c168:	movw	r3, #21781	; 0x5515
   2c16c:	movw	r2, #907	; 0x38b
   2c170:	movt	r0, #3
   2c174:	movt	r1, #3
   2c178:	movt	r3, #3
   2c17c:	bl	12bc4 <__assert_fail@plt>
   2c180:	movw	r0, #21848	; 0x5558
   2c184:	movw	r1, #20934	; 0x51c6
   2c188:	movw	r3, #21781	; 0x5515
   2c18c:	mov	r2, #908	; 0x38c
   2c190:	movt	r0, #3
   2c194:	movt	r1, #3
   2c198:	movt	r3, #3
   2c19c:	bl	12bc4 <__assert_fail@plt>

0002c1a0 <flatcc_builder_append_vector@@Base>:
   2c1a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c1a4:	add	fp, sp, #24
   2c1a8:	sub	sp, sp, #8
   2c1ac:	mov	r6, r0
   2c1b0:	ldr	r0, [r0, #32]
   2c1b4:	mov	r8, r1
   2c1b8:	ldrh	r1, [r0, #14]
   2c1bc:	cmp	r1, #4
   2c1c0:	bne	2c2d4 <flatcc_builder_append_vector@@Base+0x134>
   2c1c4:	ldr	r1, [r0, #20]
   2c1c8:	mov	r5, r2
   2c1cc:	adds	r1, r1, r2
   2c1d0:	bcs	2c2b4 <flatcc_builder_append_vector@@Base+0x114>
   2c1d4:	ldr	r2, [r0, #24]
   2c1d8:	cmp	r1, r2
   2c1dc:	bhi	2c2b4 <flatcc_builder_append_vector@@Base+0x114>
   2c1e0:	str	r1, [r0, #20]
   2c1e4:	ldr	r1, [r6, #32]
   2c1e8:	ldr	r4, [r6, #20]
   2c1ec:	ldr	r0, [r6, #24]
   2c1f0:	ldr	r9, [r1, #16]
   2c1f4:	mla	r1, r9, r5, r4
   2c1f8:	cmp	r1, r0
   2c1fc:	str	r1, [r6, #20]
   2c200:	bcs	2c22c <flatcc_builder_append_vector@@Base+0x8c>
   2c204:	ldr	r0, [r6, #16]
   2c208:	adds	r7, r0, r4
   2c20c:	beq	2c2a4 <flatcc_builder_append_vector@@Base+0x104>
   2c210:	mul	r2, r9, r5
   2c214:	mov	r0, r7
   2c218:	mov	r1, r8
   2c21c:	bl	12ab0 <memcpy@plt>
   2c220:	mov	r0, r7
   2c224:	sub	sp, fp, #24
   2c228:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c22c:	ldr	r2, [r6, #28]
   2c230:	ldr	r0, [r6, #40]	; 0x28
   2c234:	ldr	r7, [r6, #48]	; 0x30
   2c238:	mov	r3, #1
   2c23c:	str	r3, [sp]
   2c240:	mov	r3, #1
   2c244:	add	r1, r1, r2
   2c248:	add	r2, r1, #1
   2c24c:	add	r1, r6, #60	; 0x3c
   2c250:	blx	r7
   2c254:	mov	r7, #0
   2c258:	cmp	r0, #0
   2c25c:	beq	2c26c <flatcc_builder_append_vector@@Base+0xcc>
   2c260:	mov	r0, r7
   2c264:	sub	sp, fp, #24
   2c268:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c26c:	ldr	r1, [r6, #28]
   2c270:	ldr	r0, [r6, #60]	; 0x3c
   2c274:	ldr	r3, [r6, #64]	; 0x40
   2c278:	ldr	r2, [r6, #32]
   2c27c:	add	r0, r0, r1
   2c280:	sub	r1, r3, r1
   2c284:	mvn	r3, #3
   2c288:	cmn	r1, #4
   2c28c:	str	r0, [r6, #16]
   2c290:	movcs	r1, r3
   2c294:	str	r1, [r6, #24]
   2c298:	str	r3, [r2, #4]
   2c29c:	adds	r7, r0, r4
   2c2a0:	bne	2c210 <flatcc_builder_append_vector@@Base+0x70>
   2c2a4:	mov	r7, #0
   2c2a8:	mov	r0, r7
   2c2ac:	sub	sp, fp, #24
   2c2b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c2b4:	movw	r0, #25205	; 0x6275
   2c2b8:	movw	r1, #20934	; 0x51c6
   2c2bc:	movw	r3, #25232	; 0x6290
   2c2c0:	mov	r2, #892	; 0x37c
   2c2c4:	movt	r0, #3
   2c2c8:	movt	r1, #3
   2c2cc:	movt	r3, #3
   2c2d0:	bl	12bc4 <__assert_fail@plt>
   2c2d4:	movw	r0, #21737	; 0x54e9
   2c2d8:	movw	r1, #20934	; 0x51c6
   2c2dc:	movw	r3, #21909	; 0x5595
   2c2e0:	movw	r2, #915	; 0x393
   2c2e4:	movt	r0, #3
   2c2e8:	movt	r1, #3
   2c2ec:	movt	r3, #3
   2c2f0:	bl	12bc4 <__assert_fail@plt>

0002c2f4 <flatcc_builder_extend_offset_vector@@Base>:
   2c2f4:	push	{r4, r5, fp, lr}
   2c2f8:	add	fp, sp, #8
   2c2fc:	sub	sp, sp, #8
   2c300:	mov	r4, r0
   2c304:	ldr	r0, [r0, #32]
   2c308:	ldr	r2, [r0, #20]
   2c30c:	adds	r2, r2, r1
   2c310:	cmpcc	r2, #1073741824	; 0x40000000
   2c314:	bcc	2c338 <flatcc_builder_extend_offset_vector@@Base+0x44>
   2c318:	movw	r0, #25205	; 0x6275
   2c31c:	movw	r1, #20934	; 0x51c6
   2c320:	movw	r3, #25232	; 0x6290
   2c324:	mov	r2, #892	; 0x37c
   2c328:	movt	r0, #3
   2c32c:	movt	r1, #3
   2c330:	movt	r3, #3
   2c334:	bl	12bc4 <__assert_fail@plt>
   2c338:	str	r2, [r0, #20]
   2c33c:	ldr	r5, [r4, #20]
   2c340:	ldr	r0, [r4, #24]
   2c344:	add	r1, r5, r1, lsl #2
   2c348:	cmp	r1, r0
   2c34c:	str	r1, [r4, #20]
   2c350:	bcs	2c364 <flatcc_builder_extend_offset_vector@@Base+0x70>
   2c354:	ldr	r0, [r4, #16]
   2c358:	add	r0, r0, r5
   2c35c:	sub	sp, fp, #8
   2c360:	pop	{r4, r5, fp, pc}
   2c364:	ldr	r2, [r4, #28]
   2c368:	ldr	r0, [r4, #40]	; 0x28
   2c36c:	ldr	ip, [r4, #48]	; 0x30
   2c370:	mov	r3, #1
   2c374:	str	r3, [sp]
   2c378:	mov	r3, #1
   2c37c:	add	r1, r1, r2
   2c380:	add	r2, r1, #1
   2c384:	add	r1, r4, #60	; 0x3c
   2c388:	blx	ip
   2c38c:	mov	r1, r0
   2c390:	mov	r0, #0
   2c394:	cmp	r1, #0
   2c398:	beq	2c3a4 <flatcc_builder_extend_offset_vector@@Base+0xb0>
   2c39c:	sub	sp, fp, #8
   2c3a0:	pop	{r4, r5, fp, pc}
   2c3a4:	ldr	r1, [r4, #28]
   2c3a8:	ldr	r0, [r4, #60]	; 0x3c
   2c3ac:	ldr	r3, [r4, #64]	; 0x40
   2c3b0:	ldr	r2, [r4, #32]
   2c3b4:	add	r0, r0, r1
   2c3b8:	sub	r1, r3, r1
   2c3bc:	mvn	r3, #3
   2c3c0:	cmn	r1, #4
   2c3c4:	str	r0, [r4, #16]
   2c3c8:	movcs	r1, r3
   2c3cc:	str	r1, [r4, #24]
   2c3d0:	str	r3, [r2, #4]
   2c3d4:	add	r0, r0, r5
   2c3d8:	sub	sp, fp, #8
   2c3dc:	pop	{r4, r5, fp, pc}

0002c3e0 <flatcc_builder_offset_vector_push@@Base>:
   2c3e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c3e4:	add	fp, sp, #24
   2c3e8:	sub	sp, sp, #8
   2c3ec:	mov	r6, r0
   2c3f0:	ldr	r0, [r0, #32]
   2c3f4:	mov	r8, r1
   2c3f8:	ldrh	r1, [r0, #14]
   2c3fc:	cmp	r1, #5
   2c400:	bne	2c4c0 <flatcc_builder_offset_vector_push@@Base+0xe0>
   2c404:	ldr	r1, [r0, #20]
   2c408:	mov	r5, #0
   2c40c:	cmn	r1, #-1073741823	; 0xc0000001
   2c410:	beq	2c46c <flatcc_builder_offset_vector_push@@Base+0x8c>
   2c414:	add	r1, r1, #1
   2c418:	str	r1, [r0, #20]
   2c41c:	ldr	r7, [r6, #20]
   2c420:	ldr	r0, [r6, #24]
   2c424:	add	r1, r7, #4
   2c428:	cmp	r1, r0
   2c42c:	str	r1, [r6, #20]
   2c430:	bcs	2c43c <flatcc_builder_offset_vector_push@@Base+0x5c>
   2c434:	ldr	r0, [r6, #16]
   2c438:	b	2c4a8 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2c43c:	ldr	r1, [r6, #28]
   2c440:	ldr	r0, [r6, #40]	; 0x28
   2c444:	ldr	r4, [r6, #48]	; 0x30
   2c448:	mov	r2, #1
   2c44c:	mov	r3, #1
   2c450:	str	r2, [sp]
   2c454:	add	r1, r7, r1
   2c458:	add	r2, r1, #5
   2c45c:	add	r1, r6, #60	; 0x3c
   2c460:	blx	r4
   2c464:	cmp	r0, #0
   2c468:	beq	2c478 <flatcc_builder_offset_vector_push@@Base+0x98>
   2c46c:	mov	r0, r5
   2c470:	sub	sp, fp, #24
   2c474:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c478:	ldr	r1, [r6, #28]
   2c47c:	ldr	r0, [r6, #60]	; 0x3c
   2c480:	ldr	r3, [r6, #64]	; 0x40
   2c484:	ldr	r2, [r6, #32]
   2c488:	add	r0, r0, r1
   2c48c:	sub	r1, r3, r1
   2c490:	mvn	r3, #3
   2c494:	cmn	r1, #4
   2c498:	str	r0, [r6, #16]
   2c49c:	movcs	r1, r3
   2c4a0:	str	r1, [r6, #24]
   2c4a4:	str	r3, [r2, #4]
   2c4a8:	adds	r0, r0, r7
   2c4ac:	movne	r5, r0
   2c4b0:	strne	r8, [r0]
   2c4b4:	mov	r0, r5
   2c4b8:	sub	sp, fp, #24
   2c4bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c4c0:	movw	r0, #21986	; 0x55e2
   2c4c4:	movw	r1, #20934	; 0x51c6
   2c4c8:	movw	r3, #22037	; 0x5615
   2c4cc:	movw	r2, #934	; 0x3a6
   2c4d0:	movt	r0, #3
   2c4d4:	movt	r1, #3
   2c4d8:	movt	r3, #3
   2c4dc:	bl	12bc4 <__assert_fail@plt>

0002c4e0 <flatcc_builder_append_offset_vector@@Base>:
   2c4e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c4e4:	add	fp, sp, #24
   2c4e8:	sub	sp, sp, #8
   2c4ec:	mov	r6, r0
   2c4f0:	ldr	r0, [r0, #32]
   2c4f4:	mov	r8, r1
   2c4f8:	ldrh	r1, [r0, #14]
   2c4fc:	cmp	r1, #5
   2c500:	bne	2c604 <flatcc_builder_append_offset_vector@@Base+0x124>
   2c504:	ldr	r1, [r0, #20]
   2c508:	mov	r5, r2
   2c50c:	adds	r1, r1, r2
   2c510:	cmpcc	r1, #1073741824	; 0x40000000
   2c514:	bcc	2c538 <flatcc_builder_append_offset_vector@@Base+0x58>
   2c518:	movw	r0, #25205	; 0x6275
   2c51c:	movw	r1, #20934	; 0x51c6
   2c520:	movw	r3, #25232	; 0x6290
   2c524:	mov	r2, #892	; 0x37c
   2c528:	movt	r0, #3
   2c52c:	movt	r1, #3
   2c530:	movt	r3, #3
   2c534:	bl	12bc4 <__assert_fail@plt>
   2c538:	str	r1, [r0, #20]
   2c53c:	ldr	r4, [r6, #20]
   2c540:	ldr	r0, [r6, #24]
   2c544:	add	r1, r4, r5, lsl #2
   2c548:	cmp	r1, r0
   2c54c:	str	r1, [r6, #20]
   2c550:	bcs	2c57c <flatcc_builder_append_offset_vector@@Base+0x9c>
   2c554:	ldr	r0, [r6, #16]
   2c558:	adds	r7, r0, r4
   2c55c:	beq	2c5f4 <flatcc_builder_append_offset_vector@@Base+0x114>
   2c560:	lsl	r2, r5, #2
   2c564:	mov	r0, r7
   2c568:	mov	r1, r8
   2c56c:	bl	12ab0 <memcpy@plt>
   2c570:	mov	r0, r7
   2c574:	sub	sp, fp, #24
   2c578:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c57c:	ldr	r2, [r6, #28]
   2c580:	ldr	r0, [r6, #40]	; 0x28
   2c584:	ldr	r7, [r6, #48]	; 0x30
   2c588:	mov	r3, #1
   2c58c:	str	r3, [sp]
   2c590:	mov	r3, #1
   2c594:	add	r1, r1, r2
   2c598:	add	r2, r1, #1
   2c59c:	add	r1, r6, #60	; 0x3c
   2c5a0:	blx	r7
   2c5a4:	mov	r7, #0
   2c5a8:	cmp	r0, #0
   2c5ac:	beq	2c5bc <flatcc_builder_append_offset_vector@@Base+0xdc>
   2c5b0:	mov	r0, r7
   2c5b4:	sub	sp, fp, #24
   2c5b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c5bc:	ldr	r1, [r6, #28]
   2c5c0:	ldr	r0, [r6, #60]	; 0x3c
   2c5c4:	ldr	r3, [r6, #64]	; 0x40
   2c5c8:	ldr	r2, [r6, #32]
   2c5cc:	add	r0, r0, r1
   2c5d0:	sub	r1, r3, r1
   2c5d4:	mvn	r3, #3
   2c5d8:	cmn	r1, #4
   2c5dc:	str	r0, [r6, #16]
   2c5e0:	movcs	r1, r3
   2c5e4:	str	r1, [r6, #24]
   2c5e8:	str	r3, [r2, #4]
   2c5ec:	adds	r7, r0, r4
   2c5f0:	bne	2c560 <flatcc_builder_append_offset_vector@@Base+0x80>
   2c5f4:	mov	r7, #0
   2c5f8:	mov	r0, r7
   2c5fc:	sub	sp, fp, #24
   2c600:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c604:	movw	r0, #21986	; 0x55e2
   2c608:	movw	r1, #20934	; 0x51c6
   2c60c:	movw	r3, #22135	; 0x5677
   2c610:	mov	r2, #948	; 0x3b4
   2c614:	movt	r0, #3
   2c618:	movt	r1, #3
   2c61c:	movt	r3, #3
   2c620:	bl	12bc4 <__assert_fail@plt>

0002c624 <flatcc_builder_extend_string@@Base>:
   2c624:	push	{r4, r5, fp, lr}
   2c628:	add	fp, sp, #8
   2c62c:	sub	sp, sp, #8
   2c630:	mov	r4, r0
   2c634:	ldr	r0, [r0, #32]
   2c638:	ldrh	r2, [r0, #14]
   2c63c:	cmp	r2, #6
   2c640:	bne	2c6f8 <flatcc_builder_extend_string@@Base+0xd4>
   2c644:	ldr	r2, [r0, #20]
   2c648:	adds	r2, r2, r1
   2c64c:	bcs	2c718 <flatcc_builder_extend_string@@Base+0xf4>
   2c650:	str	r2, [r0, #20]
   2c654:	ldr	r5, [r4, #20]
   2c658:	ldr	r0, [r4, #24]
   2c65c:	add	r1, r5, r1
   2c660:	cmp	r1, r0
   2c664:	str	r1, [r4, #20]
   2c668:	bcs	2c67c <flatcc_builder_extend_string@@Base+0x58>
   2c66c:	ldr	r0, [r4, #16]
   2c670:	add	r0, r0, r5
   2c674:	sub	sp, fp, #8
   2c678:	pop	{r4, r5, fp, pc}
   2c67c:	ldr	r2, [r4, #28]
   2c680:	ldr	r0, [r4, #40]	; 0x28
   2c684:	ldr	ip, [r4, #48]	; 0x30
   2c688:	mov	r3, #1
   2c68c:	str	r3, [sp]
   2c690:	mov	r3, #1
   2c694:	add	r1, r1, r2
   2c698:	add	r2, r1, #1
   2c69c:	add	r1, r4, #60	; 0x3c
   2c6a0:	blx	ip
   2c6a4:	mov	r1, r0
   2c6a8:	mov	r0, #0
   2c6ac:	cmp	r1, #0
   2c6b0:	beq	2c6bc <flatcc_builder_extend_string@@Base+0x98>
   2c6b4:	sub	sp, fp, #8
   2c6b8:	pop	{r4, r5, fp, pc}
   2c6bc:	ldr	r1, [r4, #28]
   2c6c0:	ldr	r0, [r4, #60]	; 0x3c
   2c6c4:	ldr	r3, [r4, #64]	; 0x40
   2c6c8:	ldr	r2, [r4, #32]
   2c6cc:	add	r0, r0, r1
   2c6d0:	sub	r1, r3, r1
   2c6d4:	mvn	r3, #3
   2c6d8:	cmn	r1, #4
   2c6dc:	str	r0, [r4, #16]
   2c6e0:	movcs	r1, r3
   2c6e4:	str	r1, [r4, #24]
   2c6e8:	str	r3, [r2, #4]
   2c6ec:	add	r0, r0, r5
   2c6f0:	sub	sp, fp, #8
   2c6f4:	pop	{r4, r5, fp, pc}
   2c6f8:	movw	r0, #22251	; 0x56eb
   2c6fc:	movw	r1, #20934	; 0x51c6
   2c700:	movw	r3, #22295	; 0x5717
   2c704:	movw	r2, #957	; 0x3bd
   2c708:	movt	r0, #3
   2c70c:	movt	r1, #3
   2c710:	movt	r3, #3
   2c714:	bl	12bc4 <__assert_fail@plt>
   2c718:	movw	r0, #25205	; 0x6275
   2c71c:	movw	r1, #20934	; 0x51c6
   2c720:	movw	r3, #25232	; 0x6290
   2c724:	mov	r2, #892	; 0x37c
   2c728:	movt	r0, #3
   2c72c:	movt	r1, #3
   2c730:	movt	r3, #3
   2c734:	bl	12bc4 <__assert_fail@plt>

0002c738 <flatcc_builder_append_string@@Base>:
   2c738:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c73c:	add	fp, sp, #24
   2c740:	sub	sp, sp, #8
   2c744:	mov	r6, r0
   2c748:	ldr	r0, [r0, #32]
   2c74c:	mov	r8, r1
   2c750:	ldrh	r1, [r0, #14]
   2c754:	cmp	r1, #6
   2c758:	bne	2c838 <flatcc_builder_append_string@@Base+0x100>
   2c75c:	ldr	r1, [r0, #20]
   2c760:	mov	r4, r2
   2c764:	adds	r1, r1, r2
   2c768:	bcs	2c858 <flatcc_builder_append_string@@Base+0x120>
   2c76c:	str	r1, [r0, #20]
   2c770:	ldr	r5, [r6, #20]
   2c774:	ldr	r0, [r6, #24]
   2c778:	add	r1, r5, r4
   2c77c:	cmp	r1, r0
   2c780:	str	r1, [r6, #20]
   2c784:	bcs	2c7b0 <flatcc_builder_append_string@@Base+0x78>
   2c788:	ldr	r0, [r6, #16]
   2c78c:	adds	r7, r0, r5
   2c790:	beq	2c828 <flatcc_builder_append_string@@Base+0xf0>
   2c794:	mov	r0, r7
   2c798:	mov	r1, r8
   2c79c:	mov	r2, r4
   2c7a0:	bl	12ab0 <memcpy@plt>
   2c7a4:	mov	r0, r7
   2c7a8:	sub	sp, fp, #24
   2c7ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c7b0:	ldr	r2, [r6, #28]
   2c7b4:	ldr	r0, [r6, #40]	; 0x28
   2c7b8:	ldr	r7, [r6, #48]	; 0x30
   2c7bc:	mov	r3, #1
   2c7c0:	str	r3, [sp]
   2c7c4:	mov	r3, #1
   2c7c8:	add	r1, r1, r2
   2c7cc:	add	r2, r1, #1
   2c7d0:	add	r1, r6, #60	; 0x3c
   2c7d4:	blx	r7
   2c7d8:	mov	r7, #0
   2c7dc:	cmp	r0, #0
   2c7e0:	beq	2c7f0 <flatcc_builder_append_string@@Base+0xb8>
   2c7e4:	mov	r0, r7
   2c7e8:	sub	sp, fp, #24
   2c7ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c7f0:	ldr	r1, [r6, #28]
   2c7f4:	ldr	r0, [r6, #60]	; 0x3c
   2c7f8:	ldr	r3, [r6, #64]	; 0x40
   2c7fc:	ldr	r2, [r6, #32]
   2c800:	add	r0, r0, r1
   2c804:	sub	r1, r3, r1
   2c808:	mvn	r3, #3
   2c80c:	cmn	r1, #4
   2c810:	str	r0, [r6, #16]
   2c814:	movcs	r1, r3
   2c818:	str	r1, [r6, #24]
   2c81c:	str	r3, [r2, #4]
   2c820:	adds	r7, r0, r5
   2c824:	bne	2c794 <flatcc_builder_append_string@@Base+0x5c>
   2c828:	mov	r7, #0
   2c82c:	mov	r0, r7
   2c830:	sub	sp, fp, #24
   2c834:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c838:	movw	r0, #22251	; 0x56eb
   2c83c:	movw	r1, #20934	; 0x51c6
   2c840:	movw	r3, #22358	; 0x5756
   2c844:	movw	r2, #966	; 0x3c6
   2c848:	movt	r0, #3
   2c84c:	movt	r1, #3
   2c850:	movt	r3, #3
   2c854:	bl	12bc4 <__assert_fail@plt>
   2c858:	movw	r0, #25205	; 0x6275
   2c85c:	movw	r1, #20934	; 0x51c6
   2c860:	movw	r3, #25232	; 0x6290
   2c864:	mov	r2, #892	; 0x37c
   2c868:	movt	r0, #3
   2c86c:	movt	r1, #3
   2c870:	movt	r3, #3
   2c874:	bl	12bc4 <__assert_fail@plt>

0002c878 <flatcc_builder_append_string_str@@Base>:
   2c878:	push	{r4, r5, fp, lr}
   2c87c:	add	fp, sp, #8
   2c880:	mov	r5, r0
   2c884:	mov	r0, r1
   2c888:	mov	r4, r1
   2c88c:	bl	12b40 <strlen@plt>
   2c890:	mov	r2, r0
   2c894:	mov	r0, r5
   2c898:	mov	r1, r4
   2c89c:	pop	{r4, r5, fp, lr}
   2c8a0:	b	2c738 <flatcc_builder_append_string@@Base>

0002c8a4 <flatcc_builder_append_string_strn@@Base>:
   2c8a4:	push	{r4, r5, r6, sl, fp, lr}
   2c8a8:	add	fp, sp, #16
   2c8ac:	mov	r6, r0
   2c8b0:	mov	r5, r1
   2c8b4:	mov	r0, r1
   2c8b8:	mov	r1, #0
   2c8bc:	mov	r4, r2
   2c8c0:	bl	12b7c <memchr@plt>
   2c8c4:	cmp	r0, #0
   2c8c8:	mov	r1, r5
   2c8cc:	subne	r4, r0, r5
   2c8d0:	mov	r0, r6
   2c8d4:	mov	r2, r4
   2c8d8:	pop	{r4, r5, r6, sl, fp, lr}
   2c8dc:	b	2c738 <flatcc_builder_append_string@@Base>

0002c8e0 <flatcc_builder_truncate_vector@@Base>:
   2c8e0:	push	{fp, lr}
   2c8e4:	mov	fp, sp
   2c8e8:	ldr	r2, [r0, #32]
   2c8ec:	ldrh	r3, [r2, #14]
   2c8f0:	cmp	r3, #4
   2c8f4:	bne	2c93c <flatcc_builder_truncate_vector@@Base+0x5c>
   2c8f8:	ldr	r3, [r2, #20]
   2c8fc:	cmp	r3, r1
   2c900:	bcc	2c95c <flatcc_builder_truncate_vector@@Base+0x7c>
   2c904:	sub	r3, r3, r1
   2c908:	str	r3, [r2, #20]
   2c90c:	ldr	r2, [r0, #32]
   2c910:	ldr	r3, [r0, #20]
   2c914:	ldr	ip, [r0, #16]
   2c918:	ldr	r2, [r2, #16]
   2c91c:	mls	r3, r2, r1, r3
   2c920:	mul	r2, r2, r1
   2c924:	mov	r1, #0
   2c928:	str	r3, [r0, #20]
   2c92c:	add	r0, ip, r3
   2c930:	bl	12b64 <memset@plt>
   2c934:	mov	r0, #0
   2c938:	pop	{fp, pc}
   2c93c:	movw	r0, #21737	; 0x54e9
   2c940:	movw	r1, #20934	; 0x51c6
   2c944:	movw	r3, #22435	; 0x57a3
   2c948:	movw	r2, #985	; 0x3d9
   2c94c:	movt	r0, #3
   2c950:	movt	r1, #3
   2c954:	movt	r3, #3
   2c958:	bl	12bc4 <__assert_fail@plt>
   2c95c:	movw	r0, #22498	; 0x57e2
   2c960:	movw	r1, #20934	; 0x51c6
   2c964:	movw	r3, #22435	; 0x57a3
   2c968:	movw	r2, #986	; 0x3da
   2c96c:	movt	r0, #3
   2c970:	movt	r1, #3
   2c974:	movt	r3, #3
   2c978:	bl	12bc4 <__assert_fail@plt>

0002c97c <flatcc_builder_truncate_offset_vector@@Base>:
   2c97c:	push	{fp, lr}
   2c980:	mov	fp, sp
   2c984:	ldr	r2, [r0, #32]
   2c988:	ldrh	r3, [r2, #14]
   2c98c:	cmp	r3, #5
   2c990:	bne	2c9d8 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2c994:	ldr	r3, [r2, #20]
   2c998:	cmp	r3, r1
   2c99c:	bcc	2c9f8 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2c9a0:	sub	r3, r3, r1
   2c9a4:	str	r3, [r2, #20]
   2c9a8:	ldr	r2, [r0, #32]
   2c9ac:	ldr	r3, [r0, #20]
   2c9b0:	ldr	ip, [r0, #16]
   2c9b4:	ldr	r2, [r2, #16]
   2c9b8:	mls	r3, r2, r1, r3
   2c9bc:	mul	r2, r2, r1
   2c9c0:	mov	r1, #0
   2c9c4:	str	r3, [r0, #20]
   2c9c8:	add	r0, ip, r3
   2c9cc:	bl	12b64 <memset@plt>
   2c9d0:	mov	r0, #0
   2c9d4:	pop	{fp, pc}
   2c9d8:	movw	r0, #21986	; 0x55e2
   2c9dc:	movw	r1, #20934	; 0x51c6
   2c9e0:	movw	r3, #22534	; 0x5806
   2c9e4:	movw	r2, #994	; 0x3e2
   2c9e8:	movt	r0, #3
   2c9ec:	movt	r1, #3
   2c9f0:	movt	r3, #3
   2c9f4:	bl	12bc4 <__assert_fail@plt>
   2c9f8:	movw	r0, #22604	; 0x584c
   2c9fc:	movw	r1, #20934	; 0x51c6
   2ca00:	movw	r3, #22534	; 0x5806
   2ca04:	movw	r2, #995	; 0x3e3
   2ca08:	movt	r0, #3
   2ca0c:	movt	r1, #3
   2ca10:	movt	r3, #3
   2ca14:	bl	12bc4 <__assert_fail@plt>

0002ca18 <flatcc_builder_truncate_string@@Base>:
   2ca18:	push	{fp, lr}
   2ca1c:	mov	fp, sp
   2ca20:	mov	r2, r1
   2ca24:	ldr	r1, [r0, #32]
   2ca28:	ldrh	r3, [r1, #14]
   2ca2c:	cmp	r3, #6
   2ca30:	bne	2ca6c <flatcc_builder_truncate_string@@Base+0x54>
   2ca34:	ldr	r3, [r1, #20]
   2ca38:	cmp	r3, r2
   2ca3c:	bcc	2ca8c <flatcc_builder_truncate_string@@Base+0x74>
   2ca40:	sub	r3, r3, r2
   2ca44:	str	r3, [r1, #20]
   2ca48:	ldr	r3, [r0, #20]
   2ca4c:	ldr	r1, [r0, #16]
   2ca50:	sub	r3, r3, r2
   2ca54:	str	r3, [r0, #20]
   2ca58:	add	r0, r1, r3
   2ca5c:	mov	r1, #0
   2ca60:	bl	12b64 <memset@plt>
   2ca64:	mov	r0, #0
   2ca68:	pop	{fp, pc}
   2ca6c:	movw	r0, #22251	; 0x56eb
   2ca70:	movw	r1, #20934	; 0x51c6
   2ca74:	movw	r3, #22663	; 0x5887
   2ca78:	movw	r2, #1003	; 0x3eb
   2ca7c:	movt	r0, #3
   2ca80:	movt	r1, #3
   2ca84:	movt	r3, #3
   2ca88:	bl	12bc4 <__assert_fail@plt>
   2ca8c:	movw	r0, #22726	; 0x58c6
   2ca90:	movw	r1, #20934	; 0x51c6
   2ca94:	movw	r3, #22663	; 0x5887
   2ca98:	mov	r2, #1004	; 0x3ec
   2ca9c:	movt	r0, #3
   2caa0:	movt	r1, #3
   2caa4:	movt	r3, #3
   2caa8:	bl	12bc4 <__assert_fail@plt>

0002caac <flatcc_builder_start_vector@@Base>:
   2caac:	push	{r4, r5, r6, r7, fp, lr}
   2cab0:	add	fp, sp, #16
   2cab4:	mov	r7, #4
   2cab8:	cmp	r2, #4
   2cabc:	mov	r6, r1
   2cac0:	mov	r5, r3
   2cac4:	mov	r4, r0
   2cac8:	movls	r2, r7
   2cacc:	mov	r1, r2
   2cad0:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2cad4:	mov	r1, r0
   2cad8:	mvn	r0, #0
   2cadc:	cmp	r1, #0
   2cae0:	popne	{r4, r5, r6, r7, fp, pc}
   2cae4:	ldr	r0, [r4, #32]
   2cae8:	str	r6, [r0, #16]
   2caec:	mov	r0, #0
   2caf0:	ldr	r1, [r4, #32]
   2caf4:	str	r0, [r1, #20]
   2caf8:	ldr	r1, [r4, #32]
   2cafc:	str	r5, [r1, #24]
   2cb00:	ldr	r1, [r4, #32]
   2cb04:	strh	r7, [r1, #14]
   2cb08:	ldr	r2, [r4, #28]
   2cb0c:	ldr	r3, [r4, #60]	; 0x3c
   2cb10:	ldr	r7, [r4, #64]	; 0x40
   2cb14:	add	r3, r3, r2
   2cb18:	sub	r2, r7, r2
   2cb1c:	str	r3, [r4, #16]
   2cb20:	mvn	r3, #3
   2cb24:	cmn	r2, #4
   2cb28:	movcs	r2, r3
   2cb2c:	str	r2, [r4, #24]
   2cb30:	str	r3, [r1, #4]
   2cb34:	pop	{r4, r5, r6, r7, fp, pc}

0002cb38 <flatcc_builder_start_offset_vector@@Base>:
   2cb38:	push	{r4, r5, fp, lr}
   2cb3c:	add	fp, sp, #8
   2cb40:	mov	r1, #4
   2cb44:	mov	r4, r0
   2cb48:	mov	r5, #4
   2cb4c:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2cb50:	mov	r1, r0
   2cb54:	mvn	r0, #0
   2cb58:	cmp	r1, #0
   2cb5c:	popne	{r4, r5, fp, pc}
   2cb60:	ldr	r0, [r4, #32]
   2cb64:	mov	r2, #5
   2cb68:	str	r5, [r0, #16]
   2cb6c:	mov	r0, #0
   2cb70:	ldr	r1, [r4, #32]
   2cb74:	str	r0, [r1, #20]
   2cb78:	ldr	r1, [r4, #32]
   2cb7c:	strh	r2, [r1, #14]
   2cb80:	ldr	r2, [r4, #28]
   2cb84:	ldr	r3, [r4, #60]	; 0x3c
   2cb88:	ldr	r5, [r4, #64]	; 0x40
   2cb8c:	add	r3, r3, r2
   2cb90:	sub	r2, r5, r2
   2cb94:	str	r3, [r4, #16]
   2cb98:	mvn	r3, #3
   2cb9c:	cmn	r2, #4
   2cba0:	movcs	r2, r3
   2cba4:	str	r2, [r4, #24]
   2cba8:	str	r3, [r1, #4]
   2cbac:	pop	{r4, r5, fp, pc}

0002cbb0 <flatcc_builder_create_offset_vector@@Base>:
   2cbb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cbb4:	add	fp, sp, #24
   2cbb8:	sub	sp, sp, #8
   2cbbc:	mov	r8, r1
   2cbc0:	mov	r1, #4
   2cbc4:	mov	r6, r2
   2cbc8:	mov	r4, r0
   2cbcc:	mov	r5, #4
   2cbd0:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2cbd4:	mov	r7, #0
   2cbd8:	cmp	r0, #0
   2cbdc:	beq	2cbec <flatcc_builder_create_offset_vector@@Base+0x3c>
   2cbe0:	mov	r0, r7
   2cbe4:	sub	sp, fp, #24
   2cbe8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cbec:	ldr	r0, [r4, #32]
   2cbf0:	mov	r1, #0
   2cbf4:	str	r5, [r0, #16]
   2cbf8:	ldr	r0, [r4, #32]
   2cbfc:	str	r1, [r0, #20]
   2cc00:	mov	r1, #5
   2cc04:	ldr	r0, [r4, #32]
   2cc08:	strh	r1, [r0, #14]
   2cc0c:	ldr	r1, [r4, #28]
   2cc10:	ldr	r2, [r4, #60]	; 0x3c
   2cc14:	ldr	r3, [r4, #64]	; 0x40
   2cc18:	add	r2, r2, r1
   2cc1c:	sub	r1, r3, r1
   2cc20:	str	r2, [r4, #16]
   2cc24:	mvn	r2, #3
   2cc28:	cmn	r1, #4
   2cc2c:	movcs	r1, r2
   2cc30:	str	r1, [r4, #24]
   2cc34:	str	r2, [r0, #4]
   2cc38:	ldr	r1, [r0, #20]
   2cc3c:	adds	r1, r1, r6
   2cc40:	cmpcc	r1, #1073741824	; 0x40000000
   2cc44:	bcc	2cc68 <flatcc_builder_create_offset_vector@@Base+0xb8>
   2cc48:	movw	r0, #25205	; 0x6275
   2cc4c:	movw	r1, #20934	; 0x51c6
   2cc50:	movw	r3, #25232	; 0x6290
   2cc54:	mov	r2, #892	; 0x37c
   2cc58:	movt	r0, #3
   2cc5c:	movt	r1, #3
   2cc60:	movt	r3, #3
   2cc64:	bl	12bc4 <__assert_fail@plt>
   2cc68:	str	r1, [r0, #20]
   2cc6c:	ldr	r5, [r4, #20]
   2cc70:	ldr	r0, [r4, #24]
   2cc74:	add	r1, r5, r6, lsl #2
   2cc78:	cmp	r1, r0
   2cc7c:	str	r1, [r4, #20]
   2cc80:	bcs	2cd54 <flatcc_builder_create_offset_vector@@Base+0x1a4>
   2cc84:	ldr	r0, [r4, #16]
   2cc88:	adds	r0, r0, r5
   2cc8c:	beq	2cdc0 <flatcc_builder_create_offset_vector@@Base+0x210>
   2cc90:	lsl	r2, r6, #2
   2cc94:	mov	r1, r8
   2cc98:	bl	12ab0 <memcpy@plt>
   2cc9c:	ldr	r0, [r4, #32]
   2cca0:	ldrh	r1, [r0, #14]
   2cca4:	cmp	r1, #5
   2cca8:	bne	2cdd0 <flatcc_builder_create_offset_vector@@Base+0x220>
   2ccac:	ldr	r2, [r0, #20]
   2ccb0:	ldr	r1, [r4, #16]
   2ccb4:	mov	r0, r4
   2ccb8:	mov	r3, #0
   2ccbc:	mov	r7, #0
   2ccc0:	bl	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ccc4:	cmp	r0, #0
   2ccc8:	beq	2cbe0 <flatcc_builder_create_offset_vector@@Base+0x30>
   2cccc:	mov	r5, r0
   2ccd0:	ldr	r0, [r4, #16]
   2ccd4:	ldr	r2, [r4, #20]
   2ccd8:	mov	r1, #0
   2ccdc:	bl	12b64 <memset@plt>
   2cce0:	ldr	r0, [r4, #32]
   2cce4:	ldr	r1, [r4, #60]	; 0x3c
   2cce8:	ldr	r2, [r4, #64]	; 0x40
   2ccec:	ldr	r3, [r0, #8]
   2ccf0:	str	r3, [r4, #20]
   2ccf4:	ldr	r3, [r0]
   2ccf8:	str	r3, [r4, #28]
   2ccfc:	add	r1, r1, r3
   2cd00:	ldr	r7, [r0, #4]
   2cd04:	str	r1, [r4, #16]
   2cd08:	sub	r1, r2, r3
   2cd0c:	cmp	r1, r7
   2cd10:	movhi	r1, r7
   2cd14:	mov	r7, r5
   2cd18:	str	r1, [r4, #24]
   2cd1c:	ldrh	r1, [r4, #130]	; 0x82
   2cd20:	ldrh	r2, [r4, #128]	; 0x80
   2cd24:	cmp	r2, r1
   2cd28:	strhcc	r1, [r4, #128]	; 0x80
   2cd2c:	ldrh	r1, [r0, #12]
   2cd30:	sub	r0, r0, #36	; 0x24
   2cd34:	str	r0, [r4, #32]
   2cd38:	strh	r1, [r4, #130]	; 0x82
   2cd3c:	ldr	r0, [r4, #156]	; 0x9c
   2cd40:	sub	r0, r0, #1
   2cd44:	str	r0, [r4, #156]	; 0x9c
   2cd48:	mov	r0, r7
   2cd4c:	sub	sp, fp, #24
   2cd50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cd54:	ldr	r2, [r4, #28]
   2cd58:	ldr	r0, [r4, #40]	; 0x28
   2cd5c:	ldr	r7, [r4, #48]	; 0x30
   2cd60:	mov	r3, #1
   2cd64:	str	r3, [sp]
   2cd68:	mov	r3, #1
   2cd6c:	add	r1, r1, r2
   2cd70:	add	r2, r1, #1
   2cd74:	add	r1, r4, #60	; 0x3c
   2cd78:	blx	r7
   2cd7c:	mov	r7, #0
   2cd80:	cmp	r0, #0
   2cd84:	bne	2cbe0 <flatcc_builder_create_offset_vector@@Base+0x30>
   2cd88:	ldr	r1, [r4, #28]
   2cd8c:	ldr	r0, [r4, #60]	; 0x3c
   2cd90:	ldr	r3, [r4, #64]	; 0x40
   2cd94:	ldr	r2, [r4, #32]
   2cd98:	add	r0, r0, r1
   2cd9c:	sub	r1, r3, r1
   2cda0:	mvn	r3, #3
   2cda4:	cmn	r1, #4
   2cda8:	str	r0, [r4, #16]
   2cdac:	movcs	r1, r3
   2cdb0:	str	r1, [r4, #24]
   2cdb4:	str	r3, [r2, #4]
   2cdb8:	adds	r0, r0, r5
   2cdbc:	bne	2cc90 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2cdc0:	mov	r7, #0
   2cdc4:	mov	r0, r7
   2cdc8:	sub	sp, fp, #24
   2cdcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cdd0:	movw	r0, #21986	; 0x55e2
   2cdd4:	movw	r1, #20934	; 0x51c6
   2cdd8:	movw	r3, #23569	; 0x5c11
   2cddc:	movw	r2, #1480	; 0x5c8
   2cde0:	movt	r0, #3
   2cde4:	movt	r1, #3
   2cde8:	movt	r3, #3
   2cdec:	bl	12bc4 <__assert_fail@plt>

0002cdf0 <flatcc_builder_end_offset_vector@@Base>:
   2cdf0:	push	{r4, r5, fp, lr}
   2cdf4:	add	fp, sp, #8
   2cdf8:	mov	r4, r0
   2cdfc:	ldr	r0, [r0, #32]
   2ce00:	ldrh	r1, [r0, #14]
   2ce04:	cmp	r1, #5
   2ce08:	bne	2cea8 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2ce0c:	ldr	r2, [r0, #20]
   2ce10:	ldr	r1, [r4, #16]
   2ce14:	mov	r0, r4
   2ce18:	mov	r3, #0
   2ce1c:	bl	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ce20:	mov	r5, r0
   2ce24:	cmp	r0, #0
   2ce28:	beq	2cea0 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2ce2c:	ldr	r0, [r4, #16]
   2ce30:	ldr	r2, [r4, #20]
   2ce34:	mov	r1, #0
   2ce38:	bl	12b64 <memset@plt>
   2ce3c:	ldr	r0, [r4, #32]
   2ce40:	ldr	r1, [r4, #60]	; 0x3c
   2ce44:	ldr	ip, [r4, #64]	; 0x40
   2ce48:	ldr	r3, [r0, #8]
   2ce4c:	str	r3, [r4, #20]
   2ce50:	ldr	r3, [r0]
   2ce54:	str	r3, [r4, #28]
   2ce58:	add	r1, r1, r3
   2ce5c:	ldr	r2, [r0, #4]
   2ce60:	str	r1, [r4, #16]
   2ce64:	sub	r1, ip, r3
   2ce68:	cmp	r1, r2
   2ce6c:	movhi	r1, r2
   2ce70:	str	r1, [r4, #24]
   2ce74:	ldrh	r1, [r4, #130]	; 0x82
   2ce78:	ldrh	r2, [r4, #128]	; 0x80
   2ce7c:	cmp	r2, r1
   2ce80:	strhcc	r1, [r4, #128]	; 0x80
   2ce84:	ldrh	r1, [r0, #12]
   2ce88:	sub	r0, r0, #36	; 0x24
   2ce8c:	str	r0, [r4, #32]
   2ce90:	strh	r1, [r4, #130]	; 0x82
   2ce94:	ldr	r0, [r4, #156]	; 0x9c
   2ce98:	sub	r0, r0, #1
   2ce9c:	str	r0, [r4, #156]	; 0x9c
   2cea0:	mov	r0, r5
   2cea4:	pop	{r4, r5, fp, pc}
   2cea8:	movw	r0, #21986	; 0x55e2
   2ceac:	movw	r1, #20934	; 0x51c6
   2ceb0:	movw	r3, #23569	; 0x5c11
   2ceb4:	movw	r2, #1480	; 0x5c8
   2ceb8:	movt	r0, #3
   2cebc:	movt	r1, #3
   2cec0:	movt	r3, #3
   2cec4:	bl	12bc4 <__assert_fail@plt>

0002cec8 <flatcc_builder_start_string@@Base>:
   2cec8:	push	{r4, r5, fp, lr}
   2cecc:	add	fp, sp, #8
   2ced0:	mov	r1, #1
   2ced4:	mov	r4, r0
   2ced8:	mov	r5, #1
   2cedc:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2cee0:	mov	r1, r0
   2cee4:	mvn	r0, #0
   2cee8:	cmp	r1, #0
   2ceec:	popne	{r4, r5, fp, pc}
   2cef0:	ldr	r0, [r4, #32]
   2cef4:	mov	r2, #6
   2cef8:	str	r5, [r0, #16]
   2cefc:	mov	r0, #0
   2cf00:	ldr	r1, [r4, #32]
   2cf04:	str	r0, [r1, #20]
   2cf08:	ldr	r1, [r4, #32]
   2cf0c:	strh	r2, [r1, #14]
   2cf10:	ldr	r2, [r4, #28]
   2cf14:	ldr	r3, [r4, #60]	; 0x3c
   2cf18:	ldr	r5, [r4, #64]	; 0x40
   2cf1c:	add	r3, r3, r2
   2cf20:	sub	r2, r5, r2
   2cf24:	str	r3, [r4, #16]
   2cf28:	mvn	r3, #3
   2cf2c:	cmn	r2, #4
   2cf30:	movcs	r2, r3
   2cf34:	str	r2, [r4, #24]
   2cf38:	str	r3, [r1, #4]
   2cf3c:	pop	{r4, r5, fp, pc}

0002cf40 <flatcc_builder_reserve_table@@Base>:
   2cf40:	push	{r4, r5, r6, sl, fp, lr}
   2cf44:	add	fp, sp, #16
   2cf48:	sub	sp, sp, #8
   2cf4c:	cmn	r1, #1
   2cf50:	ble	2d024 <flatcc_builder_reserve_table@@Base+0xe4>
   2cf54:	mov	r4, r0
   2cf58:	ldr	r0, [r0, #32]
   2cf5c:	mov	r5, r1
   2cf60:	ldr	r1, [r4, #56]	; 0x38
   2cf64:	ldrh	r2, [r0, #28]
   2cf68:	ldr	r0, [r0, #16]
   2cf6c:	add	r6, r0, r2, lsl #1
   2cf70:	add	r0, r6, r5, lsl #1
   2cf74:	add	r2, r0, #4
   2cf78:	cmp	r2, r1
   2cf7c:	bls	2cfa4 <flatcc_builder_reserve_table@@Base+0x64>
   2cf80:	ldr	r0, [r4, #40]	; 0x28
   2cf84:	ldr	ip, [r4, #48]	; 0x30
   2cf88:	mov	r3, #0
   2cf8c:	add	r1, r4, #52	; 0x34
   2cf90:	str	r3, [sp]
   2cf94:	mov	r3, #1
   2cf98:	blx	ip
   2cf9c:	cmp	r0, #0
   2cfa0:	bne	2d044 <flatcc_builder_reserve_table@@Base+0x104>
   2cfa4:	ldr	r0, [r4, #52]	; 0x34
   2cfa8:	adds	r0, r0, r6
   2cfac:	str	r0, [r4, #4]
   2cfb0:	mvneq	r0, #0
   2cfb4:	subeq	sp, fp, #16
   2cfb8:	popeq	{r4, r5, r6, sl, fp, pc}
   2cfbc:	add	r0, r0, #4
   2cfc0:	lsl	r1, r5, #1
   2cfc4:	str	r0, [r4, #4]
   2cfc8:	ldr	r0, [r4, #32]
   2cfcc:	ldr	r3, [r4, #80]	; 0x50
   2cfd0:	ldr	r5, [r0, #20]
   2cfd4:	orr	r0, r1, #1
   2cfd8:	add	r2, r5, r0
   2cfdc:	cmp	r2, r3
   2cfe0:	bls	2d008 <flatcc_builder_reserve_table@@Base+0xc8>
   2cfe4:	ldr	r0, [r4, #40]	; 0x28
   2cfe8:	ldr	r6, [r4, #48]	; 0x30
   2cfec:	mov	r3, #3
   2cff0:	add	r1, r4, #76	; 0x4c
   2cff4:	str	r3, [sp]
   2cff8:	mov	r3, #0
   2cffc:	blx	r6
   2d000:	cmp	r0, #0
   2d004:	bne	2d044 <flatcc_builder_reserve_table@@Base+0x104>
   2d008:	ldr	r0, [r4, #76]	; 0x4c
   2d00c:	adds	r0, r0, r5
   2d010:	str	r0, [r4]
   2d014:	mov	r0, #0
   2d018:	mvneq	r0, #0
   2d01c:	sub	sp, fp, #16
   2d020:	pop	{r4, r5, r6, sl, fp, pc}
   2d024:	movw	r0, #22825	; 0x5929
   2d028:	movw	r1, #20934	; 0x51c6
   2d02c:	movw	r3, #22760	; 0x58e8
   2d030:	movw	r2, #1065	; 0x429
   2d034:	movt	r0, #3
   2d038:	movt	r1, #3
   2d03c:	movt	r3, #3
   2d040:	bl	12bc4 <__assert_fail@plt>
   2d044:	movw	r0, #25452	; 0x636c
   2d048:	movw	r1, #20934	; 0x51c6
   2d04c:	movw	r3, #24998	; 0x61a6
   2d050:	mov	r2, #308	; 0x134
   2d054:	movt	r0, #3
   2d058:	movt	r1, #3
   2d05c:	movt	r3, #3
   2d060:	bl	12bc4 <__assert_fail@plt>

0002d064 <flatcc_builder_start_table@@Base>:
   2d064:	push	{r4, r5, r6, r7, fp, lr}
   2d068:	add	fp, sp, #16
   2d06c:	sub	sp, sp, #8
   2d070:	mov	r6, r1
   2d074:	mov	r1, #4
   2d078:	mov	r4, r0
   2d07c:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2d080:	mvn	r5, #0
   2d084:	cmp	r0, #0
   2d088:	beq	2d098 <flatcc_builder_start_table@@Base+0x34>
   2d08c:	mov	r0, r5
   2d090:	sub	sp, fp, #16
   2d094:	pop	{r4, r5, r6, r7, fp, pc}
   2d098:	mov	r1, r4
   2d09c:	ldr	r2, [r4, #4]
   2d0a0:	ldr	r3, [r4, #32]
   2d0a4:	ldr	r0, [r1, #52]!	; 0x34
   2d0a8:	sub	r0, r2, r0
   2d0ac:	str	r0, [r3, #16]
   2d0b0:	ldr	r0, [r4]
   2d0b4:	ldr	r3, [r4, #76]	; 0x4c
   2d0b8:	ldr	r2, [r4, #32]
   2d0bc:	sub	r0, r0, r3
   2d0c0:	mov	r3, #0
   2d0c4:	str	r0, [r2, #20]
   2d0c8:	ldr	r0, [r4, #12]
   2d0cc:	ldr	r2, [r4, #32]
   2d0d0:	str	r0, [r2, #24]
   2d0d4:	ldr	r0, [r4, #32]
   2d0d8:	ldrh	r2, [r4, #8]
   2d0dc:	strh	r2, [r0, #28]
   2d0e0:	movw	r0, #15186	; 0x3b52
   2d0e4:	strh	r3, [r4, #8]
   2d0e8:	mov	r2, #3
   2d0ec:	movt	r0, #12137	; 0x2f69
   2d0f0:	str	r0, [r4, #12]
   2d0f4:	ldr	r0, [r4, #32]
   2d0f8:	strh	r2, [r0, #14]
   2d0fc:	ldrh	r2, [r0, #28]
   2d100:	ldr	r0, [r0, #16]
   2d104:	add	r7, r0, r2, lsl #1
   2d108:	add	r0, r7, r6, lsl #1
   2d10c:	add	r2, r0, #4
   2d110:	ldr	r0, [r4, #56]	; 0x38
   2d114:	cmp	r2, r0
   2d118:	bls	2d138 <flatcc_builder_start_table@@Base+0xd4>
   2d11c:	ldr	r0, [r4, #40]	; 0x28
   2d120:	ldr	ip, [r4, #48]	; 0x30
   2d124:	str	r3, [sp]
   2d128:	mov	r3, #1
   2d12c:	blx	ip
   2d130:	cmp	r0, #0
   2d134:	bne	2d1e4 <flatcc_builder_start_table@@Base+0x180>
   2d138:	ldr	r0, [r4, #52]	; 0x34
   2d13c:	adds	r0, r0, r7
   2d140:	str	r0, [r4, #4]
   2d144:	beq	2d08c <flatcc_builder_start_table@@Base+0x28>
   2d148:	add	r0, r0, #4
   2d14c:	lsl	r1, r6, #1
   2d150:	str	r0, [r4, #4]
   2d154:	ldr	r0, [r4, #32]
   2d158:	ldr	r3, [r4, #80]	; 0x50
   2d15c:	ldr	r6, [r0, #20]
   2d160:	orr	r0, r1, #1
   2d164:	add	r2, r6, r0
   2d168:	cmp	r2, r3
   2d16c:	bls	2d194 <flatcc_builder_start_table@@Base+0x130>
   2d170:	ldr	r0, [r4, #40]	; 0x28
   2d174:	ldr	r7, [r4, #48]	; 0x30
   2d178:	mov	r3, #3
   2d17c:	add	r1, r4, #76	; 0x4c
   2d180:	str	r3, [sp]
   2d184:	mov	r3, #0
   2d188:	blx	r7
   2d18c:	cmp	r0, #0
   2d190:	bne	2d1e4 <flatcc_builder_start_table@@Base+0x180>
   2d194:	ldr	r0, [r4, #76]	; 0x4c
   2d198:	adds	r0, r0, r6
   2d19c:	str	r0, [r4]
   2d1a0:	beq	2d08c <flatcc_builder_start_table@@Base+0x28>
   2d1a4:	ldr	r0, [r4, #28]
   2d1a8:	ldr	r2, [r4, #60]	; 0x3c
   2d1ac:	ldr	r3, [r4, #64]	; 0x40
   2d1b0:	ldr	r1, [r4, #32]
   2d1b4:	mov	r5, #0
   2d1b8:	add	r2, r2, r0
   2d1bc:	sub	r0, r3, r0
   2d1c0:	str	r2, [r4, #16]
   2d1c4:	movw	r2, #65532	; 0xfffc
   2d1c8:	cmp	r0, r2
   2d1cc:	movcs	r0, r2
   2d1d0:	str	r0, [r4, #24]
   2d1d4:	str	r2, [r1, #4]
   2d1d8:	mov	r0, r5
   2d1dc:	sub	sp, fp, #16
   2d1e0:	pop	{r4, r5, r6, r7, fp, pc}
   2d1e4:	movw	r0, #25452	; 0x636c
   2d1e8:	movw	r1, #20934	; 0x51c6
   2d1ec:	movw	r3, #24998	; 0x61a6
   2d1f0:	mov	r2, #308	; 0x134
   2d1f4:	movt	r0, #3
   2d1f8:	movt	r1, #3
   2d1fc:	movt	r3, #3
   2d200:	bl	12bc4 <__assert_fail@plt>

0002d204 <flatcc_builder_create_vtable@@Base>:
   2d204:	push	{r4, r5, fp, lr}
   2d208:	add	fp, sp, #8
   2d20c:	sub	sp, sp, #80	; 0x50
   2d210:	mov	r3, r2
   2d214:	mov	r2, #0
   2d218:	mov	r4, r0
   2d21c:	cmp	r3, #0
   2d220:	str	r2, [sp, #12]
   2d224:	str	r2, [sp, #8]
   2d228:	movne	r2, #1
   2d22c:	strne	r1, [sp, #16]
   2d230:	strne	r3, [sp, #8]
   2d234:	strne	r3, [sp, #20]
   2d238:	strne	r2, [sp, #12]
   2d23c:	ldr	r0, [r4, #152]	; 0x98
   2d240:	cmp	r0, #0
   2d244:	bne	2d254 <flatcc_builder_create_vtable@@Base+0x50>
   2d248:	ldr	r0, [r4, #180]	; 0xb4
   2d24c:	cmp	r0, #0
   2d250:	beq	2d2a0 <flatcc_builder_create_vtable@@Base+0x9c>
   2d254:	cmp	r3, #0
   2d258:	beq	2d2e4 <flatcc_builder_create_vtable@@Base+0xe0>
   2d25c:	ldr	r0, [r4, #136]	; 0x88
   2d260:	ldr	ip, [r4, #44]	; 0x2c
   2d264:	add	r1, sp, #8
   2d268:	add	r1, r1, #8
   2d26c:	sub	r5, r0, r3
   2d270:	ldr	r0, [r4, #36]	; 0x24
   2d274:	str	r3, [sp]
   2d278:	mov	r3, r5
   2d27c:	blx	ip
   2d280:	cmp	r0, #0
   2d284:	bne	2d304 <flatcc_builder_create_vtable@@Base+0x100>
   2d288:	cmp	r5, #0
   2d28c:	str	r5, [r4, #136]	; 0x88
   2d290:	beq	2d2d8 <flatcc_builder_create_vtable@@Base+0xd4>
   2d294:	add	r0, r5, #1
   2d298:	sub	sp, fp, #8
   2d29c:	pop	{r4, r5, fp, pc}
   2d2a0:	ldr	r5, [r4, #140]	; 0x8c
   2d2a4:	ldr	r0, [r4, #36]	; 0x24
   2d2a8:	ldr	ip, [r4, #44]	; 0x2c
   2d2ac:	add	r1, r5, r3
   2d2b0:	str	r1, [r4, #140]	; 0x8c
   2d2b4:	add	r1, sp, #8
   2d2b8:	str	r3, [sp]
   2d2bc:	mov	r3, r5
   2d2c0:	add	r1, r1, #8
   2d2c4:	blx	ip
   2d2c8:	cmp	r0, #0
   2d2cc:	bne	2d324 <flatcc_builder_create_vtable@@Base+0x120>
   2d2d0:	adds	r0, r5, #1
   2d2d4:	bne	2d298 <flatcc_builder_create_vtable@@Base+0x94>
   2d2d8:	mov	r0, #0
   2d2dc:	sub	sp, fp, #8
   2d2e0:	pop	{r4, r5, fp, pc}
   2d2e4:	movw	r0, #25452	; 0x636c
   2d2e8:	movw	r1, #20934	; 0x51c6
   2d2ec:	movw	r3, #25131	; 0x622b
   2d2f0:	movw	r2, #647	; 0x287
   2d2f4:	movt	r0, #3
   2d2f8:	movt	r1, #3
   2d2fc:	movt	r3, #3
   2d300:	bl	12bc4 <__assert_fail@plt>
   2d304:	movw	r0, #25452	; 0x636c
   2d308:	movw	r1, #20934	; 0x51c6
   2d30c:	movw	r3, #25131	; 0x622b
   2d310:	movw	r2, #651	; 0x28b
   2d314:	movt	r0, #3
   2d318:	movt	r1, #3
   2d31c:	movt	r3, #3
   2d320:	bl	12bc4 <__assert_fail@plt>
   2d324:	movw	r0, #25452	; 0x636c
   2d328:	movw	r1, #20934	; 0x51c6
   2d32c:	movw	r3, #25319	; 0x62e7
   2d330:	movw	r2, #677	; 0x2a5
   2d334:	movt	r0, #3
   2d338:	movt	r1, #3
   2d33c:	movt	r3, #3
   2d340:	bl	12bc4 <__assert_fail@plt>

0002d344 <flatcc_builder_create_cached_vtable@@Base>:
   2d344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d348:	add	fp, sp, #28
   2d34c:	sub	sp, sp, #20
   2d350:	mov	sl, r0
   2d354:	ldr	r0, [r0, #116]	; 0x74
   2d358:	mov	r8, r3
   2d35c:	mov	r5, r2
   2d360:	str	r1, [sp, #16]
   2d364:	cmp	r0, #0
   2d368:	beq	2d40c <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2d36c:	ldr	r1, [sl, #92]	; 0x5c
   2d370:	rsb	r0, r0, #32
   2d374:	lsr	r0, r8, r0
   2d378:	add	r6, r1, r0, lsl #2
   2d37c:	cmp	r6, #0
   2d380:	beq	2d4d0 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2d384:	ldr	r7, [r6]
   2d388:	str	r6, [sp, #12]
   2d38c:	cmp	r7, #0
   2d390:	beq	2d4e0 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   2d394:	ldr	r4, [sl, #68]	; 0x44
   2d398:	ldr	r8, [sl, #100]	; 0x64
   2d39c:	mov	r0, #0
   2d3a0:	str	r0, [sp, #8]
   2d3a4:	add	r9, r8, r7
   2d3a8:	mov	r1, r4
   2d3ac:	ldr	r0, [r9, #8]
   2d3b0:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2d3b4:	cmp	r0, r5
   2d3b8:	bne	2d3d0 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2d3bc:	ldr	r0, [sp, #16]
   2d3c0:	mov	r2, r5
   2d3c4:	bl	12ac8 <memcmp@plt>
   2d3c8:	cmp	r0, #0
   2d3cc:	beq	2d3e4 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2d3d0:	ldr	r7, [r9, #12]!
   2d3d4:	cmp	r7, #0
   2d3d8:	mov	r6, r9
   2d3dc:	bne	2d3a4 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2d3e0:	b	2d4c8 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2d3e4:	ldr	r0, [sl, #152]	; 0x98
   2d3e8:	ldr	r1, [r9, #4]
   2d3ec:	cmp	r1, r0
   2d3f0:	beq	2d64c <flatcc_builder_create_cached_vtable@@Base+0x308>
   2d3f4:	mov	r6, r9
   2d3f8:	mov	r0, r9
   2d3fc:	ldr	r7, [r6, #12]!
   2d400:	cmp	r7, #0
   2d404:	bne	2d3a0 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2d408:	b	2d4e4 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   2d40c:	ldr	r0, [sl, #124]	; 0x7c
   2d410:	cmp	r0, #0
   2d414:	bne	2d6a0 <flatcc_builder_create_cached_vtable@@Base+0x35c>
   2d418:	ldr	r0, [sl, #104]	; 0x68
   2d41c:	add	r7, sl, #100	; 0x64
   2d420:	cmp	r0, #15
   2d424:	bhi	2d450 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2d428:	ldr	r0, [sl, #40]	; 0x28
   2d42c:	ldr	r6, [sl, #48]	; 0x30
   2d430:	mov	r1, #6
   2d434:	mov	r2, #16
   2d438:	mov	r3, #0
   2d43c:	str	r1, [sp]
   2d440:	mov	r1, r7
   2d444:	blx	r6
   2d448:	cmp	r0, #0
   2d44c:	bne	2d680 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2d450:	ldr	r0, [r7]
   2d454:	mov	r7, #0
   2d458:	cmp	r0, #0
   2d45c:	beq	2d584 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d460:	mov	r0, #16
   2d464:	mov	r2, #5
   2d468:	add	r1, sl, #92	; 0x5c
   2d46c:	mov	r3, #1
   2d470:	mov	r4, #256	; 0x100
   2d474:	str	r0, [sl, #124]	; 0x7c
   2d478:	ldr	r0, [sl, #40]	; 0x28
   2d47c:	ldr	r6, [sl, #48]	; 0x30
   2d480:	str	r2, [sp]
   2d484:	mov	r2, #256	; 0x100
   2d488:	blx	r6
   2d48c:	cmp	r0, #0
   2d490:	bne	2d584 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d494:	ldr	r0, [sl, #96]	; 0x60
   2d498:	mov	r1, r4
   2d49c:	lsl	r4, r4, #1
   2d4a0:	cmp	r0, r1, lsl #1
   2d4a4:	bcs	2d498 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2d4a8:	lsr	r1, r1, #2
   2d4ac:	mvn	r0, #0
   2d4b0:	mov	r2, #1
   2d4b4:	add	r0, r0, #1
   2d4b8:	cmp	r1, r2, lsl r0
   2d4bc:	bhi	2d4b4 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2d4c0:	str	r0, [sl, #116]	; 0x74
   2d4c4:	b	2d36c <flatcc_builder_create_cached_vtable@@Base+0x28>
   2d4c8:	ldr	r9, [sp, #8]
   2d4cc:	b	2d4e4 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   2d4d0:	mov	r7, #0
   2d4d4:	mov	r0, r7
   2d4d8:	sub	sp, fp, #28
   2d4dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d4e0:	mov	r9, #0
   2d4e4:	ldr	r4, [sl, #124]	; 0x7c
   2d4e8:	ldr	r0, [sl, #104]	; 0x68
   2d4ec:	add	r7, sl, #100	; 0x64
   2d4f0:	add	r2, r4, #16
   2d4f4:	cmp	r2, r0
   2d4f8:	bls	2d520 <flatcc_builder_create_cached_vtable@@Base+0x1dc>
   2d4fc:	ldr	r0, [sl, #40]	; 0x28
   2d500:	ldr	r6, [sl, #48]	; 0x30
   2d504:	mov	r1, #6
   2d508:	mov	r3, #0
   2d50c:	str	r1, [sp]
   2d510:	mov	r1, r7
   2d514:	blx	r6
   2d518:	cmp	r0, #0
   2d51c:	bne	2d680 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2d520:	ldr	r0, [r7]
   2d524:	mov	r7, #0
   2d528:	adds	r4, r0, r4
   2d52c:	beq	2d584 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d530:	ldr	r0, [sl, #124]	; 0x7c
   2d534:	ldr	r1, [sl, #152]	; 0x98
   2d538:	add	r2, r0, #16
   2d53c:	str	r2, [sl, #124]	; 0x7c
   2d540:	ldr	r2, [sp, #12]
   2d544:	str	r1, [r4, #4]
   2d548:	ldr	r1, [r2]
   2d54c:	str	r1, [r4, #12]
   2d550:	ldr	r1, [sp, #16]
   2d554:	str	r0, [r2]
   2d558:	mov	r0, sl
   2d55c:	mov	r2, r5
   2d560:	bl	2d204 <flatcc_builder_create_vtable@@Base>
   2d564:	cmp	r0, #0
   2d568:	str	r0, [r4]
   2d56c:	beq	2d584 <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d570:	cmp	r9, #0
   2d574:	beq	2d590 <flatcc_builder_create_cached_vtable@@Base+0x24c>
   2d578:	ldr	r0, [r9, #8]
   2d57c:	str	r0, [r4, #8]
   2d580:	ldr	r7, [r4]
   2d584:	mov	r0, r7
   2d588:	sub	sp, fp, #28
   2d58c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d590:	ldr	r6, [sl, #120]	; 0x78
   2d594:	ldr	r0, [sl, #172]	; 0xac
   2d598:	add	r2, r6, r5
   2d59c:	cmp	r0, #0
   2d5a0:	beq	2d5dc <flatcc_builder_create_cached_vtable@@Base+0x298>
   2d5a4:	cmp	r0, r2
   2d5a8:	bcs	2d5dc <flatcc_builder_create_cached_vtable@@Base+0x298>
   2d5ac:	ldr	r0, [sl, #116]	; 0x74
   2d5b0:	cmp	r0, #0
   2d5b4:	beq	2d580 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2d5b8:	ldr	r0, [sl, #92]	; 0x5c
   2d5bc:	ldr	r2, [sl, #96]	; 0x60
   2d5c0:	mov	r1, #0
   2d5c4:	mov	r5, #0
   2d5c8:	bl	12b64 <memset@plt>
   2d5cc:	mov	r0, #16
   2d5d0:	str	r5, [sl, #120]	; 0x78
   2d5d4:	str	r0, [sl, #124]	; 0x7c
   2d5d8:	b	2d580 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2d5dc:	ldr	r0, [sl, #72]	; 0x48
   2d5e0:	add	r7, sl, #68	; 0x44
   2d5e4:	cmp	r2, r0
   2d5e8:	bls	2d610 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   2d5ec:	ldr	r0, [sl, #40]	; 0x28
   2d5f0:	ldr	ip, [sl, #48]	; 0x30
   2d5f4:	mov	r1, #2
   2d5f8:	mov	r3, #0
   2d5fc:	str	r1, [sp]
   2d600:	mov	r1, r7
   2d604:	blx	ip
   2d608:	cmp	r0, #0
   2d60c:	bne	2d680 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2d610:	ldr	r0, [r7]
   2d614:	adds	r0, r0, r6
   2d618:	beq	2d63c <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2d61c:	ldr	r1, [sl, #120]	; 0x78
   2d620:	mov	r2, r5
   2d624:	str	r1, [r4, #8]
   2d628:	add	r1, r1, r5
   2d62c:	str	r1, [sl, #120]	; 0x78
   2d630:	ldr	r1, [sp, #16]
   2d634:	bl	12ab0 <memcpy@plt>
   2d638:	b	2d580 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2d63c:	mvn	r7, #0
   2d640:	mov	r0, r7
   2d644:	sub	sp, fp, #28
   2d648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d64c:	ldr	r0, [sp, #12]
   2d650:	cmp	r6, r0
   2d654:	beq	2d670 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   2d658:	mov	r1, r0
   2d65c:	ldr	r0, [r9, #12]
   2d660:	str	r0, [r6]
   2d664:	ldr	r0, [r1]
   2d668:	str	r0, [r9, #12]
   2d66c:	str	r7, [r1]
   2d670:	ldr	r7, [r9]
   2d674:	mov	r0, r7
   2d678:	sub	sp, fp, #28
   2d67c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d680:	movw	r0, #25452	; 0x636c
   2d684:	movw	r1, #20934	; 0x51c6
   2d688:	movw	r3, #24998	; 0x61a6
   2d68c:	mov	r2, #308	; 0x134
   2d690:	movt	r0, #3
   2d694:	movt	r1, #3
   2d698:	movt	r3, #3
   2d69c:	bl	12bc4 <__assert_fail@plt>
   2d6a0:	movw	r0, #25392	; 0x6330
   2d6a4:	movw	r1, #20934	; 0x51c6
   2d6a8:	movw	r3, #25407	; 0x633f
   2d6ac:	movw	r2, #342	; 0x156
   2d6b0:	movt	r0, #3
   2d6b4:	movt	r1, #3
   2d6b8:	movt	r3, #3
   2d6bc:	bl	12bc4 <__assert_fail@plt>

0002d6c0 <flatcc_builder_create_table@@Base>:
   2d6c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d6c4:	add	fp, sp, #24
   2d6c8:	sub	sp, sp, #80	; 0x50
   2d6cc:	ldr	r5, [fp, #12]
   2d6d0:	cmn	r5, #1
   2d6d4:	ble	2d828 <flatcc_builder_create_table@@Base+0x168>
   2d6d8:	ldr	ip, [fp, #16]
   2d6dc:	tst	ip, #1
   2d6e0:	beq	2d848 <flatcc_builder_create_table@@Base+0x188>
   2d6e4:	mov	r8, r0
   2d6e8:	ldrh	r0, [r0, #128]	; 0x80
   2d6ec:	cmp	r3, #4
   2d6f0:	movls	r3, #4
   2d6f4:	cmp	r0, r3
   2d6f8:	strhcc	r3, [r8, #128]	; 0x80
   2d6fc:	sub	r3, r3, #1
   2d700:	cmp	r5, #1
   2d704:	ldr	r4, [r8, #136]	; 0x88
   2d708:	sub	r0, r4, r2
   2d70c:	and	r0, r0, r3
   2d710:	add	r3, ip, r0
   2d714:	mvn	ip, #3
   2d718:	sub	r6, ip, r2
   2d71c:	add	r4, r6, r4
   2d720:	add	r6, r4, #1
   2d724:	sub	r3, r6, r3
   2d728:	str	r3, [fp, #-28]	; 0xffffffe4
   2d72c:	blt	2d758 <flatcc_builder_create_table@@Base+0x98>
   2d730:	ldr	r3, [fp, #8]
   2d734:	sub	r6, r4, r0
   2d738:	sub	r4, ip, r6
   2d73c:	ldrh	r6, [r3], #2
   2d740:	subs	r5, r5, #1
   2d744:	ldr	r7, [r6, r1]
   2d748:	add	r7, r4, r7
   2d74c:	sub	r7, r7, r6
   2d750:	str	r7, [r6, r1]
   2d754:	bne	2d73c <flatcc_builder_create_table@@Base+0x7c>
   2d758:	sub	r3, fp, #28
   2d75c:	mov	r4, #4
   2d760:	cmp	r2, #0
   2d764:	str	r3, [sp, #12]
   2d768:	mov	r3, #1
   2d76c:	str	r4, [sp, #4]
   2d770:	str	r4, [sp, #16]
   2d774:	str	r3, [sp, #8]
   2d778:	beq	2d794 <flatcc_builder_create_table@@Base+0xd4>
   2d77c:	mov	r3, #2
   2d780:	add	r4, r2, #4
   2d784:	str	r1, [sp, #20]
   2d788:	str	r2, [sp, #24]
   2d78c:	str	r3, [sp, #8]
   2d790:	str	r4, [sp, #4]
   2d794:	cmp	r0, #0
   2d798:	beq	2d7c4 <flatcc_builder_create_table@@Base+0x104>
   2d79c:	add	r1, sp, #4
   2d7a0:	movw	r2, #20404	; 0x4fb4
   2d7a4:	add	r4, r4, r0
   2d7a8:	add	r1, r1, r3, lsl #3
   2d7ac:	add	r3, r3, #1
   2d7b0:	movt	r2, #3
   2d7b4:	str	r4, [sp, #4]
   2d7b8:	str	r2, [r1, #8]
   2d7bc:	str	r0, [r1, #12]
   2d7c0:	str	r3, [sp, #8]
   2d7c4:	cmp	r4, #0
   2d7c8:	ble	2d868 <flatcc_builder_create_table@@Base+0x1a8>
   2d7cc:	ldr	r0, [r8, #136]	; 0x88
   2d7d0:	ldr	r7, [r8, #44]	; 0x2c
   2d7d4:	add	r1, sp, #4
   2d7d8:	mov	r2, r3
   2d7dc:	add	r1, r1, #8
   2d7e0:	sub	r5, r0, r4
   2d7e4:	ldr	r0, [r8, #36]	; 0x24
   2d7e8:	str	r4, [sp]
   2d7ec:	mov	r3, r5
   2d7f0:	blx	r7
   2d7f4:	cmp	r0, #0
   2d7f8:	streq	r5, [r8, #136]	; 0x88
   2d7fc:	moveq	r0, r5
   2d800:	subeq	sp, fp, #24
   2d804:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d808:	movw	r0, #25452	; 0x636c
   2d80c:	movw	r1, #20934	; 0x51c6
   2d810:	movw	r3, #25131	; 0x622b
   2d814:	movw	r2, #651	; 0x28b
   2d818:	movt	r0, #3
   2d81c:	movt	r1, #3
   2d820:	movt	r3, #3
   2d824:	bl	12bc4 <__assert_fail@plt>
   2d828:	movw	r0, #22818	; 0x5922
   2d82c:	movw	r1, #20934	; 0x51c6
   2d830:	movw	r3, #22836	; 0x5934
   2d834:	movw	r2, #1237	; 0x4d5
   2d838:	movt	r0, #3
   2d83c:	movt	r1, #3
   2d840:	movt	r3, #3
   2d844:	bl	12bc4 <__assert_fail@plt>
   2d848:	movw	r0, #22992	; 0x59d0
   2d84c:	movw	r1, #20934	; 0x51c6
   2d850:	movw	r3, #22836	; 0x5934
   2d854:	movw	r2, #1243	; 0x4db
   2d858:	movt	r0, #3
   2d85c:	movt	r1, #3
   2d860:	movt	r3, #3
   2d864:	bl	12bc4 <__assert_fail@plt>
   2d868:	movw	r0, #25452	; 0x636c
   2d86c:	movw	r1, #20934	; 0x51c6
   2d870:	movw	r3, #25131	; 0x622b
   2d874:	movw	r2, #647	; 0x287
   2d878:	movt	r0, #3
   2d87c:	movt	r1, #3
   2d880:	movt	r3, #3
   2d884:	bl	12bc4 <__assert_fail@plt>

0002d888 <flatcc_builder_check_required_field@@Base>:
   2d888:	ldr	r2, [r0, #32]
   2d88c:	ldrh	r2, [r2, #14]
   2d890:	cmp	r2, #3
   2d894:	bne	2d8c4 <flatcc_builder_check_required_field@@Base+0x3c>
   2d898:	ldrh	r3, [r0, #8]
   2d89c:	mov	r2, #0
   2d8a0:	cmp	r3, r1
   2d8a4:	bls	2d8bc <flatcc_builder_check_required_field@@Base+0x34>
   2d8a8:	ldr	r0, [r0, #4]
   2d8ac:	add	r0, r0, r1, lsl #1
   2d8b0:	ldrh	r2, [r0]
   2d8b4:	cmp	r2, #0
   2d8b8:	movwne	r2, #1
   2d8bc:	mov	r0, r2
   2d8c0:	bx	lr
   2d8c4:	push	{fp, lr}
   2d8c8:	mov	fp, sp
   2d8cc:	movw	r0, #23003	; 0x59db
   2d8d0:	movw	r1, #20934	; 0x51c6
   2d8d4:	movw	r3, #23046	; 0x5a06
   2d8d8:	movw	r2, #1272	; 0x4f8
   2d8dc:	movt	r0, #3
   2d8e0:	movt	r1, #3
   2d8e4:	movt	r3, #3
   2d8e8:	bl	12bc4 <__assert_fail@plt>

0002d8ec <flatcc_builder_check_union_field@@Base>:
   2d8ec:	mov	r2, r0
   2d8f0:	ldr	r0, [r0, #32]
   2d8f4:	ldrh	r0, [r0, #14]
   2d8f8:	cmp	r0, #3
   2d8fc:	bne	2d95c <flatcc_builder_check_union_field@@Base+0x70>
   2d900:	cmp	r1, #0
   2d904:	mov	r0, #0
   2d908:	ldrhne	r3, [r2, #8]
   2d90c:	cmpne	r3, r1
   2d910:	bhi	2d918 <flatcc_builder_check_union_field@@Base+0x2c>
   2d914:	bx	lr
   2d918:	ldr	r0, [r2, #4]
   2d91c:	add	r0, r0, r1, lsl #1
   2d920:	ldrh	r1, [r0, #-2]
   2d924:	cmp	r1, #0
   2d928:	beq	2d94c <flatcc_builder_check_union_field@@Base+0x60>
   2d92c:	ldr	r2, [r2, #16]
   2d930:	ldrh	r0, [r0]
   2d934:	ldrb	r1, [r2, r1]
   2d938:	cmp	r1, #0
   2d93c:	beq	2d950 <flatcc_builder_check_union_field@@Base+0x64>
   2d940:	cmp	r0, #0
   2d944:	movwne	r0, #1
   2d948:	bx	lr
   2d94c:	ldrh	r0, [r0]
   2d950:	clz	r0, r0
   2d954:	lsr	r0, r0, #5
   2d958:	bx	lr
   2d95c:	push	{fp, lr}
   2d960:	mov	fp, sp
   2d964:	movw	r0, #23003	; 0x59db
   2d968:	movw	r1, #20934	; 0x51c6
   2d96c:	movw	r3, #23129	; 0x5a59
   2d970:	movw	r2, #1279	; 0x4ff
   2d974:	movt	r0, #3
   2d978:	movt	r1, #3
   2d97c:	movt	r3, #3
   2d980:	bl	12bc4 <__assert_fail@plt>

0002d984 <flatcc_builder_check_required@@Base>:
   2d984:	push	{fp, lr}
   2d988:	mov	fp, sp
   2d98c:	mov	r3, r0
   2d990:	ldr	r0, [r0, #32]
   2d994:	ldrh	r0, [r0, #14]
   2d998:	cmp	r0, #3
   2d99c:	bne	2d9f4 <flatcc_builder_check_required@@Base+0x70>
   2d9a0:	ldrh	ip, [r3, #8]
   2d9a4:	mov	r0, #0
   2d9a8:	cmp	ip, r2
   2d9ac:	movge	r0, #1
   2d9b0:	cmpge	r2, #1
   2d9b4:	bge	2d9bc <flatcc_builder_check_required@@Base+0x38>
   2d9b8:	pop	{fp, pc}
   2d9bc:	ldr	ip, [r3, #4]
   2d9c0:	mov	lr, #0
   2d9c4:	b	2d9d8 <flatcc_builder_check_required@@Base+0x54>
   2d9c8:	add	lr, lr, #1
   2d9cc:	add	r1, r1, #2
   2d9d0:	cmp	lr, r2
   2d9d4:	popge	{fp, pc}
   2d9d8:	ldrh	r3, [r1]
   2d9dc:	add	r3, ip, r3, lsl #1
   2d9e0:	ldrh	r3, [r3]
   2d9e4:	cmp	r3, #0
   2d9e8:	bne	2d9c8 <flatcc_builder_check_required@@Base+0x44>
   2d9ec:	mov	r0, #0
   2d9f0:	pop	{fp, pc}
   2d9f4:	movw	r0, #23003	; 0x59db
   2d9f8:	movw	r1, #20934	; 0x51c6
   2d9fc:	movw	r3, #23209	; 0x5aa9
   2da00:	movw	r2, #1297	; 0x511
   2da04:	movt	r0, #3
   2da08:	movt	r1, #3
   2da0c:	movt	r3, #3
   2da10:	bl	12bc4 <__assert_fail@plt>

0002da14 <flatcc_builder_end_table@@Base>:
   2da14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2da18:	add	fp, sp, #24
   2da1c:	sub	sp, sp, #16
   2da20:	mov	r4, r0
   2da24:	ldr	r0, [r0, #32]
   2da28:	ldrh	r0, [r0, #14]
   2da2c:	cmp	r0, #3
   2da30:	bne	2dbb4 <flatcc_builder_end_table@@Base+0x1a0>
   2da34:	ldrh	r0, [r4, #8]
   2da38:	ldr	r5, [r4, #4]
   2da3c:	mov	r1, #4
   2da40:	movw	r2, #31153	; 0x79b1
   2da44:	movt	r2, #40503	; 0x9e37
   2da48:	add	r0, r1, r0, lsl #1
   2da4c:	strh	r0, [r5, #-4]!
   2da50:	ldrh	r1, [r4, #20]
   2da54:	uxth	r6, r0
   2da58:	add	r1, r1, #4
   2da5c:	strh	r1, [r5, #2]
   2da60:	uxth	r1, r1
   2da64:	ldr	r0, [r4, #12]
   2da68:	eor	r0, r0, r6
   2da6c:	mul	r0, r0, r2
   2da70:	eor	r0, r0, r1
   2da74:	mov	r1, r5
   2da78:	mul	r3, r0, r2
   2da7c:	mov	r0, r4
   2da80:	mov	r2, r6
   2da84:	str	r3, [r4, #12]
   2da88:	bl	2d344 <flatcc_builder_create_cached_vtable@@Base>
   2da8c:	cmp	r0, #0
   2da90:	beq	2dba4 <flatcc_builder_end_table@@Base+0x190>
   2da94:	mov	r7, r0
   2da98:	mov	r0, r5
   2da9c:	mov	r1, #0
   2daa0:	mov	r2, r6
   2daa4:	mov	r8, #0
   2daa8:	bl	12b64 <memset@plt>
   2daac:	ldr	r5, [r4, #32]
   2dab0:	ldr	r0, [r4, #76]	; 0x4c
   2dab4:	ldr	r6, [r4]
   2dab8:	ldrh	r3, [r4, #130]	; 0x82
   2dabc:	ldr	r1, [r4, #16]
   2dac0:	ldr	r2, [r4, #20]
   2dac4:	ldr	r5, [r5, #20]
   2dac8:	add	r0, r0, r5
   2dacc:	sub	r6, r6, r0
   2dad0:	asr	r6, r6, #1
   2dad4:	stm	sp, {r0, r6, r7}
   2dad8:	mov	r0, r4
   2dadc:	bl	2d6c0 <flatcc_builder_create_table@@Base>
   2dae0:	cmp	r0, #0
   2dae4:	beq	2db98 <flatcc_builder_end_table@@Base+0x184>
   2dae8:	ldr	r1, [r4, #32]
   2daec:	mov	r5, r0
   2daf0:	ldr	r0, [r4, #16]
   2daf4:	ldr	r2, [r4, #20]
   2daf8:	ldr	r3, [r4, #52]	; 0x34
   2dafc:	ldr	r7, [r1, #24]
   2db00:	str	r7, [r4, #12]
   2db04:	ldrh	r7, [r1, #28]
   2db08:	strh	r7, [r4, #8]
   2db0c:	ldr	r7, [r1, #16]
   2db10:	add	r3, r3, r7
   2db14:	str	r3, [r4, #4]
   2db18:	ldr	r3, [r4, #76]	; 0x4c
   2db1c:	ldr	r1, [r1, #20]
   2db20:	add	r1, r3, r1
   2db24:	str	r1, [r4]
   2db28:	mov	r1, #0
   2db2c:	bl	12b64 <memset@plt>
   2db30:	ldr	r0, [r4, #32]
   2db34:	ldr	r1, [r4, #60]	; 0x3c
   2db38:	ldr	r2, [r4, #64]	; 0x40
   2db3c:	mov	r8, r5
   2db40:	ldr	r3, [r0, #8]
   2db44:	str	r3, [r4, #20]
   2db48:	ldr	r3, [r0]
   2db4c:	str	r3, [r4, #28]
   2db50:	add	r1, r1, r3
   2db54:	ldr	r7, [r0, #4]
   2db58:	str	r1, [r4, #16]
   2db5c:	sub	r1, r2, r3
   2db60:	cmp	r1, r7
   2db64:	movhi	r1, r7
   2db68:	str	r1, [r4, #24]
   2db6c:	ldrh	r1, [r4, #130]	; 0x82
   2db70:	ldrh	r2, [r4, #128]	; 0x80
   2db74:	cmp	r2, r1
   2db78:	strhcc	r1, [r4, #128]	; 0x80
   2db7c:	ldrh	r1, [r0, #12]
   2db80:	sub	r0, r0, #36	; 0x24
   2db84:	str	r0, [r4, #32]
   2db88:	strh	r1, [r4, #130]	; 0x82
   2db8c:	ldr	r0, [r4, #156]	; 0x9c
   2db90:	sub	r0, r0, #1
   2db94:	str	r0, [r4, #156]	; 0x9c
   2db98:	mov	r0, r8
   2db9c:	sub	sp, fp, #24
   2dba0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dba4:	mov	r8, #0
   2dba8:	mov	r0, r8
   2dbac:	sub	sp, fp, #24
   2dbb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dbb4:	movw	r0, #23003	; 0x59db
   2dbb8:	movw	r1, #20934	; 0x51c6
   2dbbc:	movw	r3, #23299	; 0x5b03
   2dbc0:	movw	r2, #1317	; 0x525
   2dbc4:	movt	r0, #3
   2dbc8:	movt	r1, #3
   2dbcc:	movt	r3, #3
   2dbd0:	bl	12bc4 <__assert_fail@plt>

0002dbd4 <flatcc_builder_create_vector@@Base>:
   2dbd4:	push	{r4, r5, r6, r7, fp, lr}
   2dbd8:	add	fp, sp, #16
   2dbdc:	sub	sp, sp, #80	; 0x50
   2dbe0:	mov	r7, r0
   2dbe4:	ldr	r0, [fp, #12]
   2dbe8:	cmp	r2, r0
   2dbec:	bhi	2dcec <flatcc_builder_create_vector@@Base+0x118>
   2dbf0:	ldr	r0, [fp, #8]
   2dbf4:	mov	r4, r2
   2dbf8:	ldrh	r2, [r7, #128]	; 0x80
   2dbfc:	mov	r5, #4
   2dc00:	cmp	r0, #4
   2dc04:	movls	r0, r5
   2dc08:	cmp	r2, r0
   2dc0c:	sub	r2, fp, #20
   2dc10:	strhcc	r0, [r7, #128]	; 0x80
   2dc14:	str	r4, [fp, #-20]	; 0xffffffec
   2dc18:	sub	r0, r0, #1
   2dc1c:	ldr	ip, [r7, #136]	; 0x88
   2dc20:	str	r2, [sp, #12]
   2dc24:	mov	r2, #1
   2dc28:	str	r5, [sp, #4]
   2dc2c:	str	r5, [sp, #16]
   2dc30:	str	r2, [sp, #8]
   2dc34:	mls	r6, r3, r4, ip
   2dc38:	mul	r3, r3, r4
   2dc3c:	and	r0, r6, r0
   2dc40:	cmp	r3, #0
   2dc44:	beq	2dc60 <flatcc_builder_create_vector@@Base+0x8c>
   2dc48:	mov	r2, #2
   2dc4c:	add	r5, r3, #4
   2dc50:	str	r1, [sp, #20]
   2dc54:	str	r3, [sp, #24]
   2dc58:	str	r2, [sp, #8]
   2dc5c:	str	r5, [sp, #4]
   2dc60:	cmp	r0, #0
   2dc64:	beq	2dc90 <flatcc_builder_create_vector@@Base+0xbc>
   2dc68:	add	r1, sp, #4
   2dc6c:	movw	r3, #20404	; 0x4fb4
   2dc70:	add	r5, r5, r0
   2dc74:	add	r1, r1, r2, lsl #3
   2dc78:	add	r2, r2, #1
   2dc7c:	movt	r3, #3
   2dc80:	str	r5, [sp, #4]
   2dc84:	str	r3, [r1, #8]
   2dc88:	str	r0, [r1, #12]
   2dc8c:	str	r2, [sp, #8]
   2dc90:	cmp	r5, #0
   2dc94:	ble	2dd0c <flatcc_builder_create_vector@@Base+0x138>
   2dc98:	ldr	r0, [r7, #36]	; 0x24
   2dc9c:	ldr	r6, [r7, #44]	; 0x2c
   2dca0:	add	r1, sp, #4
   2dca4:	sub	r4, ip, r5
   2dca8:	str	r5, [sp]
   2dcac:	add	r1, r1, #8
   2dcb0:	mov	r3, r4
   2dcb4:	blx	r6
   2dcb8:	cmp	r0, #0
   2dcbc:	streq	r4, [r7, #136]	; 0x88
   2dcc0:	moveq	r0, r4
   2dcc4:	subeq	sp, fp, #16
   2dcc8:	popeq	{r4, r5, r6, r7, fp, pc}
   2dccc:	movw	r0, #25452	; 0x636c
   2dcd0:	movw	r1, #20934	; 0x51c6
   2dcd4:	movw	r3, #25131	; 0x622b
   2dcd8:	movw	r2, #651	; 0x28b
   2dcdc:	movt	r0, #3
   2dce0:	movt	r1, #3
   2dce4:	movt	r3, #3
   2dce8:	bl	12bc4 <__assert_fail@plt>
   2dcec:	movw	r0, #23365	; 0x5b45
   2dcf0:	movw	r1, #20934	; 0x51c6
   2dcf4:	movw	r3, #23384	; 0x5b58
   2dcf8:	movw	r2, #1365	; 0x555
   2dcfc:	movt	r0, #3
   2dd00:	movt	r1, #3
   2dd04:	movt	r3, #3
   2dd08:	bl	12bc4 <__assert_fail@plt>
   2dd0c:	movw	r0, #25452	; 0x636c
   2dd10:	movw	r1, #20934	; 0x51c6
   2dd14:	movw	r3, #25131	; 0x622b
   2dd18:	movw	r2, #647	; 0x287
   2dd1c:	movt	r0, #3
   2dd20:	movt	r1, #3
   2dd24:	movt	r3, #3
   2dd28:	bl	12bc4 <__assert_fail@plt>

0002dd2c <flatcc_builder_end_vector@@Base>:
   2dd2c:	push	{r4, r5, fp, lr}
   2dd30:	add	fp, sp, #8
   2dd34:	sub	sp, sp, #8
   2dd38:	mov	r4, r0
   2dd3c:	ldr	r0, [r0, #32]
   2dd40:	ldrh	r1, [r0, #14]
   2dd44:	cmp	r1, #4
   2dd48:	bne	2ddfc <flatcc_builder_end_vector@@Base+0xd0>
   2dd4c:	ldr	r3, [r0, #16]
   2dd50:	ldr	r2, [r0, #20]
   2dd54:	ldr	r0, [r0, #24]
   2dd58:	ldr	r1, [r4, #16]
   2dd5c:	ldrh	r5, [r4, #130]	; 0x82
   2dd60:	str	r0, [sp, #4]
   2dd64:	mov	r0, r4
   2dd68:	str	r5, [sp]
   2dd6c:	bl	2dbd4 <flatcc_builder_create_vector@@Base>
   2dd70:	mov	r5, r0
   2dd74:	cmp	r0, #0
   2dd78:	beq	2ddf0 <flatcc_builder_end_vector@@Base+0xc4>
   2dd7c:	ldr	r0, [r4, #16]
   2dd80:	ldr	r2, [r4, #20]
   2dd84:	mov	r1, #0
   2dd88:	bl	12b64 <memset@plt>
   2dd8c:	ldr	r0, [r4, #32]
   2dd90:	ldr	r1, [r4, #60]	; 0x3c
   2dd94:	ldr	ip, [r4, #64]	; 0x40
   2dd98:	ldr	r3, [r0, #8]
   2dd9c:	str	r3, [r4, #20]
   2dda0:	ldr	r3, [r0]
   2dda4:	str	r3, [r4, #28]
   2dda8:	add	r1, r1, r3
   2ddac:	ldr	r2, [r0, #4]
   2ddb0:	str	r1, [r4, #16]
   2ddb4:	sub	r1, ip, r3
   2ddb8:	cmp	r1, r2
   2ddbc:	movhi	r1, r2
   2ddc0:	str	r1, [r4, #24]
   2ddc4:	ldrh	r1, [r4, #130]	; 0x82
   2ddc8:	ldrh	r2, [r4, #128]	; 0x80
   2ddcc:	cmp	r2, r1
   2ddd0:	strhcc	r1, [r4, #128]	; 0x80
   2ddd4:	ldrh	r1, [r0, #12]
   2ddd8:	sub	r0, r0, #36	; 0x24
   2dddc:	str	r0, [r4, #32]
   2dde0:	strh	r1, [r4, #130]	; 0x82
   2dde4:	ldr	r0, [r4, #156]	; 0x9c
   2dde8:	sub	r0, r0, #1
   2ddec:	str	r0, [r4, #156]	; 0x9c
   2ddf0:	mov	r0, r5
   2ddf4:	sub	sp, fp, #8
   2ddf8:	pop	{r4, r5, fp, pc}
   2ddfc:	movw	r0, #21737	; 0x54e9
   2de00:	movw	r1, #20934	; 0x51c6
   2de04:	movw	r3, #23502	; 0x5bce
   2de08:	movw	r2, #1400	; 0x578
   2de0c:	movt	r0, #3
   2de10:	movt	r1, #3
   2de14:	movt	r3, #3
   2de18:	bl	12bc4 <__assert_fail@plt>

0002de1c <flatcc_builder_vector_count@@Base>:
   2de1c:	ldr	r0, [r0, #32]
   2de20:	ldr	r0, [r0, #20]
   2de24:	bx	lr

0002de28 <flatcc_builder_vector_edit@@Base>:
   2de28:	ldr	r0, [r0, #16]
   2de2c:	bx	lr

0002de30 <flatcc_builder_create_offset_vector_direct@@Base>:
   2de30:	mov	r3, #0
   2de34:	b	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2de38:	push	{r4, r5, r6, r7, fp, lr}
   2de3c:	add	fp, sp, #16
   2de40:	sub	sp, sp, #80	; 0x50
   2de44:	mov	r5, #0
   2de48:	cmn	r2, #-1073741823	; 0xc0000001
   2de4c:	bhi	2dfac <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   2de50:	mov	r7, r0
   2de54:	ldrh	r0, [r0, #128]	; 0x80
   2de58:	sub	r6, fp, #20
   2de5c:	mov	r4, #4
   2de60:	mov	ip, #1
   2de64:	cmp	r0, #3
   2de68:	movls	r0, #4
   2de6c:	strhls	r0, [r7, #128]	; 0x80
   2de70:	str	r2, [fp, #-20]	; 0xffffffec
   2de74:	ldr	lr, [r7, #136]	; 0x88
   2de78:	str	r6, [sp, #12]
   2de7c:	mov	r6, #0
   2de80:	str	r4, [sp, #4]
   2de84:	str	r4, [sp, #16]
   2de88:	str	ip, [sp, #8]
   2de8c:	cmp	r6, r2, lsl #2
   2de90:	and	r5, lr, #3
   2de94:	beq	2deb4 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2de98:	lsl	r6, r2, #2
   2de9c:	mov	ip, #2
   2dea0:	str	r1, [sp, #20]
   2dea4:	add	r4, r6, #4
   2dea8:	str	r6, [sp, #24]
   2deac:	str	ip, [sp, #8]
   2deb0:	str	r4, [sp, #4]
   2deb4:	cmp	r5, #0
   2deb8:	beq	2dee4 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2debc:	add	r6, sp, #4
   2dec0:	movw	r0, #20404	; 0x4fb4
   2dec4:	add	r4, r4, r5
   2dec8:	add	r6, r6, ip, lsl #3
   2decc:	add	ip, ip, #1
   2ded0:	movt	r0, #3
   2ded4:	str	r4, [sp, #4]
   2ded8:	str	r0, [r6, #8]
   2dedc:	str	r5, [r6, #12]
   2dee0:	str	ip, [sp, #8]
   2dee4:	cmp	r2, #0
   2dee8:	beq	2df70 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   2deec:	mvn	r0, #3
   2def0:	cmp	r3, #0
   2def4:	sub	r0, r0, lr
   2def8:	add	r0, r0, r4
   2defc:	beq	2df48 <flatcc_builder_create_offset_vector_direct@@Base+0x118>
   2df00:	mov	r5, #0
   2df04:	ldr	r6, [r1, r5, lsl #2]
   2df08:	cmp	r6, #0
   2df0c:	beq	2df28 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   2df10:	add	r6, r0, r6
   2df14:	str	r6, [r1, r5, lsl #2]
   2df18:	ldrb	r6, [r3, r5]
   2df1c:	cmp	r6, #0
   2df20:	bne	2df34 <flatcc_builder_create_offset_vector_direct@@Base+0x104>
   2df24:	b	2dfb8 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   2df28:	ldrb	r6, [r3, r5]
   2df2c:	cmp	r6, #0
   2df30:	bne	2dff8 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   2df34:	add	r5, r5, #1
   2df38:	sub	r0, r0, #4
   2df3c:	cmp	r5, r2
   2df40:	bcc	2df04 <flatcc_builder_create_offset_vector_direct@@Base+0xd4>
   2df44:	b	2df70 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   2df48:	mov	r3, #0
   2df4c:	ldr	r5, [r1, r3, lsl #2]
   2df50:	cmp	r5, #0
   2df54:	beq	2dfd8 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2df58:	add	r6, r0, r5
   2df5c:	sub	r0, r0, #4
   2df60:	str	r6, [r1, r3, lsl #2]
   2df64:	add	r3, r3, #1
   2df68:	cmp	r3, r2
   2df6c:	bcc	2df4c <flatcc_builder_create_offset_vector_direct@@Base+0x11c>
   2df70:	cmp	r4, #0
   2df74:	ble	2e018 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   2df78:	ldr	r0, [r7, #136]	; 0x88
   2df7c:	ldr	r6, [r7, #44]	; 0x2c
   2df80:	add	r1, sp, #4
   2df84:	mov	r2, ip
   2df88:	add	r1, r1, #8
   2df8c:	sub	r5, r0, r4
   2df90:	ldr	r0, [r7, #36]	; 0x24
   2df94:	str	r4, [sp]
   2df98:	mov	r3, r5
   2df9c:	blx	r6
   2dfa0:	cmp	r0, #0
   2dfa4:	bne	2e038 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   2dfa8:	str	r5, [r7, #136]	; 0x88
   2dfac:	mov	r0, r5
   2dfb0:	sub	sp, fp, #16
   2dfb4:	pop	{r4, r5, r6, r7, fp, pc}
   2dfb8:	movw	r0, #25440	; 0x6360
   2dfbc:	movw	r1, #20934	; 0x51c6
   2dfc0:	movw	r3, #25454	; 0x636e
   2dfc4:	movw	r2, #1457	; 0x5b1
   2dfc8:	movt	r0, #3
   2dfcc:	movt	r1, #3
   2dfd0:	movt	r3, #3
   2dfd4:	bl	12bc4 <__assert_fail@plt>
   2dfd8:	movw	r0, #25452	; 0x636c
   2dfdc:	movw	r1, #20934	; 0x51c6
   2dfe0:	movw	r3, #25454	; 0x636e
   2dfe4:	movw	r2, #1463	; 0x5b7
   2dfe8:	movt	r0, #3
   2dfec:	movt	r1, #3
   2dff0:	movt	r3, #3
   2dff4:	bl	12bc4 <__assert_fail@plt>
   2dff8:	movw	r0, #25585	; 0x63f1
   2dffc:	movw	r1, #20934	; 0x51c6
   2e000:	movw	r3, #25454	; 0x636e
   2e004:	movw	r2, #1461	; 0x5b5
   2e008:	movt	r0, #3
   2e00c:	movt	r1, #3
   2e010:	movt	r3, #3
   2e014:	bl	12bc4 <__assert_fail@plt>
   2e018:	movw	r0, #25452	; 0x636c
   2e01c:	movw	r1, #20934	; 0x51c6
   2e020:	movw	r3, #25131	; 0x622b
   2e024:	movw	r2, #647	; 0x287
   2e028:	movt	r0, #3
   2e02c:	movt	r1, #3
   2e030:	movt	r3, #3
   2e034:	bl	12bc4 <__assert_fail@plt>
   2e038:	movw	r0, #25452	; 0x636c
   2e03c:	movw	r1, #20934	; 0x51c6
   2e040:	movw	r3, #25131	; 0x622b
   2e044:	movw	r2, #651	; 0x28b
   2e048:	movt	r0, #3
   2e04c:	movt	r1, #3
   2e050:	movt	r3, #3
   2e054:	bl	12bc4 <__assert_fail@plt>

0002e058 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2e058:	push	{r4, r5, fp, lr}
   2e05c:	add	fp, sp, #8
   2e060:	mov	r4, r0
   2e064:	ldr	r0, [r0, #32]
   2e068:	mov	r3, r1
   2e06c:	ldrh	r1, [r0, #14]
   2e070:	cmp	r1, #5
   2e074:	bne	2e110 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2e078:	ldr	r2, [r0, #20]
   2e07c:	ldr	r1, [r4, #16]
   2e080:	mov	r0, r4
   2e084:	bl	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e088:	mov	r5, r0
   2e08c:	cmp	r0, #0
   2e090:	beq	2e108 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2e094:	ldr	r0, [r4, #16]
   2e098:	ldr	r2, [r4, #20]
   2e09c:	mov	r1, #0
   2e0a0:	bl	12b64 <memset@plt>
   2e0a4:	ldr	r0, [r4, #32]
   2e0a8:	ldr	r1, [r4, #60]	; 0x3c
   2e0ac:	ldr	ip, [r4, #64]	; 0x40
   2e0b0:	ldr	r3, [r0, #8]
   2e0b4:	str	r3, [r4, #20]
   2e0b8:	ldr	r3, [r0]
   2e0bc:	str	r3, [r4, #28]
   2e0c0:	add	r1, r1, r3
   2e0c4:	ldr	r2, [r0, #4]
   2e0c8:	str	r1, [r4, #16]
   2e0cc:	sub	r1, ip, r3
   2e0d0:	cmp	r1, r2
   2e0d4:	movhi	r1, r2
   2e0d8:	str	r1, [r4, #24]
   2e0dc:	ldrh	r1, [r4, #130]	; 0x82
   2e0e0:	ldrh	r2, [r4, #128]	; 0x80
   2e0e4:	cmp	r2, r1
   2e0e8:	strhcc	r1, [r4, #128]	; 0x80
   2e0ec:	ldrh	r1, [r0, #12]
   2e0f0:	sub	r0, r0, #36	; 0x24
   2e0f4:	str	r0, [r4, #32]
   2e0f8:	strh	r1, [r4, #130]	; 0x82
   2e0fc:	ldr	r0, [r4, #156]	; 0x9c
   2e100:	sub	r0, r0, #1
   2e104:	str	r0, [r4, #156]	; 0x9c
   2e108:	mov	r0, r5
   2e10c:	pop	{r4, r5, fp, pc}
   2e110:	movw	r0, #21986	; 0x55e2
   2e114:	movw	r1, #20934	; 0x51c6
   2e118:	movw	r3, #23643	; 0x5c5b
   2e11c:	movw	r2, #1493	; 0x5d5
   2e120:	movt	r0, #3
   2e124:	movt	r1, #3
   2e128:	movt	r3, #3
   2e12c:	bl	12bc4 <__assert_fail@plt>

0002e130 <flatcc_builder_offset_vector_edit@@Base>:
   2e130:	ldr	r0, [r0, #16]
   2e134:	bx	lr

0002e138 <flatcc_builder_offset_vector_count@@Base>:
   2e138:	ldr	r0, [r0, #32]
   2e13c:	ldr	r0, [r0, #20]
   2e140:	bx	lr

0002e144 <flatcc_builder_table_add_union@@Base>:
   2e144:	push	{r4, r5, r6, r7, fp, lr}
   2e148:	add	fp, sp, #16
   2e14c:	mov	r5, r0
   2e150:	ldr	r0, [r0, #32]
   2e154:	ldrh	r0, [r0, #14]
   2e158:	cmp	r0, #3
   2e15c:	bne	2e1e4 <flatcc_builder_table_add_union@@Base+0xa0>
   2e160:	mov	r7, r3
   2e164:	mov	r4, r2
   2e168:	mov	r6, r1
   2e16c:	cmp	r3, #0
   2e170:	beq	2e180 <flatcc_builder_table_add_union@@Base+0x3c>
   2e174:	uxtb	r0, r4
   2e178:	cmp	r0, #0
   2e17c:	beq	2e204 <flatcc_builder_table_add_union@@Base+0xc0>
   2e180:	cmp	r7, #0
   2e184:	beq	2e1a0 <flatcc_builder_table_add_union@@Base+0x5c>
   2e188:	mov	r0, r5
   2e18c:	mov	r1, r6
   2e190:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   2e194:	cmp	r0, #0
   2e198:	beq	2e224 <flatcc_builder_table_add_union@@Base+0xe0>
   2e19c:	str	r7, [r0]
   2e1a0:	sub	r1, r6, #1
   2e1a4:	mov	r0, r5
   2e1a8:	mov	r2, #1
   2e1ac:	mov	r3, #1
   2e1b0:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   2e1b4:	cmp	r0, #0
   2e1b8:	strbne	r4, [r0]
   2e1bc:	movne	r0, #0
   2e1c0:	popne	{r4, r5, r6, r7, fp, pc}
   2e1c4:	movw	r0, #23889	; 0x5d51
   2e1c8:	movw	r1, #20934	; 0x51c6
   2e1cc:	movw	r3, #23757	; 0x5ccd
   2e1d0:	movw	r2, #1526	; 0x5f6
   2e1d4:	movt	r0, #3
   2e1d8:	movt	r1, #3
   2e1dc:	movt	r3, #3
   2e1e0:	bl	12bc4 <__assert_fail@plt>
   2e1e4:	movw	r0, #23003	; 0x59db
   2e1e8:	movw	r1, #20934	; 0x51c6
   2e1ec:	movw	r3, #23757	; 0x5ccd
   2e1f0:	movw	r2, #1518	; 0x5ee
   2e1f4:	movt	r0, #3
   2e1f8:	movt	r1, #3
   2e1fc:	movt	r3, #3
   2e200:	bl	12bc4 <__assert_fail@plt>
   2e204:	movw	r0, #23845	; 0x5d25
   2e208:	movw	r1, #20934	; 0x51c6
   2e20c:	movw	r3, #23757	; 0x5ccd
   2e210:	movw	r2, #1519	; 0x5ef
   2e214:	movt	r0, #3
   2e218:	movt	r1, #3
   2e21c:	movt	r3, #3
   2e220:	bl	12bc4 <__assert_fail@plt>
   2e224:	movw	r0, #23879	; 0x5d47
   2e228:	movw	r1, #20934	; 0x51c6
   2e22c:	movw	r3, #23757	; 0x5ccd
   2e230:	movw	r2, #1522	; 0x5f2
   2e234:	movt	r0, #3
   2e238:	movt	r1, #3
   2e23c:	movt	r3, #3
   2e240:	bl	12bc4 <__assert_fail@plt>

0002e244 <flatcc_builder_table_add_offset@@Base>:
   2e244:	push	{r4, r5, r6, r7, fp, lr}
   2e248:	add	fp, sp, #16
   2e24c:	sub	sp, sp, #8
   2e250:	mov	r4, r0
   2e254:	ldr	r0, [r0, #32]
   2e258:	ldrh	r0, [r0, #14]
   2e25c:	cmp	r0, #3
   2e260:	bne	2e374 <flatcc_builder_table_add_offset@@Base+0x130>
   2e264:	movw	r0, #32765	; 0x7ffd
   2e268:	mov	r5, r1
   2e26c:	cmp	r1, r0
   2e270:	bcs	2e394 <flatcc_builder_table_add_offset@@Base+0x150>
   2e274:	ldr	r0, [r4, #4]
   2e278:	add	r1, r0, r5, lsl #1
   2e27c:	ldrh	r1, [r1]
   2e280:	cmp	r1, #0
   2e284:	bne	2e3b4 <flatcc_builder_table_add_offset@@Base+0x170>
   2e288:	ldr	r2, [r4, #20]
   2e28c:	ldr	r1, [r4, #12]
   2e290:	ldr	r3, [r4, #24]
   2e294:	add	r2, r2, #3
   2e298:	eor	r1, r1, r5
   2e29c:	bic	r6, r2, #3
   2e2a0:	movw	r2, #31153	; 0x79b1
   2e2a4:	movt	r2, #40503	; 0x9e37
   2e2a8:	add	r7, r6, #4
   2e2ac:	mul	r1, r1, r2
   2e2b0:	cmp	r7, r3
   2e2b4:	str	r7, [r4, #20]
   2e2b8:	eor	r1, r1, #4
   2e2bc:	mul	r1, r1, r2
   2e2c0:	str	r1, [r4, #12]
   2e2c4:	bls	2e338 <flatcc_builder_table_add_offset@@Base+0xf4>
   2e2c8:	ldr	r1, [r4, #28]
   2e2cc:	ldr	r0, [r4, #40]	; 0x28
   2e2d0:	ldr	ip, [r4, #48]	; 0x30
   2e2d4:	mov	r2, #1
   2e2d8:	mov	r3, #1
   2e2dc:	str	r2, [sp]
   2e2e0:	add	r2, r1, r7
   2e2e4:	add	r1, r4, #60	; 0x3c
   2e2e8:	blx	ip
   2e2ec:	mov	r1, r0
   2e2f0:	mov	r0, #0
   2e2f4:	cmp	r1, #0
   2e2f8:	beq	2e304 <flatcc_builder_table_add_offset@@Base+0xc0>
   2e2fc:	sub	sp, fp, #16
   2e300:	pop	{r4, r5, r6, r7, fp, pc}
   2e304:	ldr	r0, [r4, #28]
   2e308:	ldr	r2, [r4, #60]	; 0x3c
   2e30c:	ldr	r3, [r4, #64]	; 0x40
   2e310:	ldr	r1, [r4, #32]
   2e314:	add	r2, r2, r0
   2e318:	sub	r0, r3, r0
   2e31c:	str	r2, [r4, #16]
   2e320:	movw	r2, #65532	; 0xfffc
   2e324:	cmp	r0, r2
   2e328:	movcs	r0, r2
   2e32c:	str	r0, [r4, #24]
   2e330:	str	r2, [r1, #4]
   2e334:	ldr	r0, [r4, #4]
   2e338:	uxth	r1, r5
   2e33c:	add	r0, r0, r1, lsl #1
   2e340:	strh	r7, [r0]
   2e344:	ldrh	r0, [r4, #8]
   2e348:	cmp	r0, r1
   2e34c:	addls	r0, r5, #1
   2e350:	strhls	r0, [r4, #8]
   2e354:	ldr	r0, [r4]
   2e358:	add	r1, r0, #2
   2e35c:	str	r1, [r4]
   2e360:	strh	r6, [r0]
   2e364:	ldr	r0, [r4, #16]
   2e368:	add	r0, r0, r6
   2e36c:	sub	sp, fp, #16
   2e370:	pop	{r4, r5, r6, r7, fp, pc}
   2e374:	movw	r0, #23003	; 0x59db
   2e378:	movw	r1, #20934	; 0x51c6
   2e37c:	movw	r3, #24783	; 0x60cf
   2e380:	movw	r2, #1811	; 0x713
   2e384:	movt	r0, #3
   2e388:	movt	r1, #3
   2e38c:	movt	r3, #3
   2e390:	bl	12bc4 <__assert_fail@plt>
   2e394:	movw	r0, #24655	; 0x604f
   2e398:	movw	r1, #20934	; 0x51c6
   2e39c:	movw	r3, #24783	; 0x60cf
   2e3a0:	movw	r2, #1812	; 0x714
   2e3a4:	movt	r0, #3
   2e3a8:	movt	r1, #3
   2e3ac:	movt	r3, #3
   2e3b0:	bl	12bc4 <__assert_fail@plt>
   2e3b4:	movw	r0, #25452	; 0x636c
   2e3b8:	movw	r1, #20934	; 0x51c6
   2e3bc:	movw	r3, #24783	; 0x60cf
   2e3c0:	movw	r2, #1819	; 0x71b
   2e3c4:	movt	r0, #3
   2e3c8:	movt	r1, #3
   2e3cc:	movt	r3, #3
   2e3d0:	bl	12bc4 <__assert_fail@plt>

0002e3d4 <flatcc_builder_table_add@@Base>:
   2e3d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e3d8:	add	fp, sp, #24
   2e3dc:	sub	sp, sp, #8
   2e3e0:	mov	r4, r0
   2e3e4:	ldr	r0, [r0, #32]
   2e3e8:	ldrh	r0, [r0, #14]
   2e3ec:	cmp	r0, #3
   2e3f0:	bne	2e510 <flatcc_builder_table_add@@Base+0x13c>
   2e3f4:	movw	r0, #32765	; 0x7ffd
   2e3f8:	mov	r8, r1
   2e3fc:	cmp	r1, r0
   2e400:	bcs	2e530 <flatcc_builder_table_add@@Base+0x15c>
   2e404:	ldrh	r0, [r4, #130]	; 0x82
   2e408:	cmp	r0, r3
   2e40c:	strhcc	r3, [r4, #130]	; 0x82
   2e410:	ldr	r0, [r4, #4]
   2e414:	add	r1, r0, r8, lsl #1
   2e418:	ldrh	r1, [r1]
   2e41c:	cmp	r1, #0
   2e420:	bne	2e550 <flatcc_builder_table_add@@Base+0x17c>
   2e424:	ldr	r1, [r4, #12]
   2e428:	movw	r7, #31153	; 0x79b1
   2e42c:	ldr	r6, [r4, #20]
   2e430:	ldr	r5, [r4, #24]
   2e434:	movt	r7, #40503	; 0x9e37
   2e438:	eor	r1, r1, r8
   2e43c:	mul	r1, r1, r7
   2e440:	eor	r1, r1, r2
   2e444:	mul	r1, r1, r7
   2e448:	str	r1, [r4, #12]
   2e44c:	add	r1, r3, r6
   2e450:	rsb	r3, r3, #0
   2e454:	sub	r1, r1, #1
   2e458:	and	r6, r1, r3
   2e45c:	add	r1, r6, r2
   2e460:	cmp	r1, r5
   2e464:	str	r1, [r4, #20]
   2e468:	bcc	2e4e0 <flatcc_builder_table_add@@Base+0x10c>
   2e46c:	ldr	r2, [r4, #28]
   2e470:	ldr	r0, [r4, #40]	; 0x28
   2e474:	ldr	r7, [r4, #48]	; 0x30
   2e478:	mov	r3, #1
   2e47c:	str	r3, [sp]
   2e480:	mov	r3, #1
   2e484:	add	r1, r1, r2
   2e488:	add	r2, r1, #1
   2e48c:	add	r1, r4, #60	; 0x3c
   2e490:	blx	r7
   2e494:	mov	r1, r0
   2e498:	mov	r0, #0
   2e49c:	cmp	r1, #0
   2e4a0:	beq	2e4ac <flatcc_builder_table_add@@Base+0xd8>
   2e4a4:	sub	sp, fp, #24
   2e4a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e4ac:	ldr	r0, [r4, #28]
   2e4b0:	ldr	r2, [r4, #60]	; 0x3c
   2e4b4:	ldr	r3, [r4, #64]	; 0x40
   2e4b8:	ldr	r1, [r4, #32]
   2e4bc:	add	r2, r2, r0
   2e4c0:	sub	r0, r3, r0
   2e4c4:	str	r2, [r4, #16]
   2e4c8:	movw	r2, #65532	; 0xfffc
   2e4cc:	cmp	r0, r2
   2e4d0:	movcs	r0, r2
   2e4d4:	str	r0, [r4, #24]
   2e4d8:	str	r2, [r1, #4]
   2e4dc:	ldr	r0, [r4, #4]
   2e4e0:	uxth	r1, r8
   2e4e4:	add	r2, r6, #4
   2e4e8:	add	r0, r0, r1, lsl #1
   2e4ec:	strh	r2, [r0]
   2e4f0:	ldrh	r0, [r4, #8]
   2e4f4:	cmp	r0, r1
   2e4f8:	addls	r0, r8, #1
   2e4fc:	strhls	r0, [r4, #8]
   2e500:	ldr	r0, [r4, #16]
   2e504:	add	r0, r0, r6
   2e508:	sub	sp, fp, #24
   2e50c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e510:	movw	r0, #23003	; 0x59db
   2e514:	movw	r1, #20934	; 0x51c6
   2e518:	movw	r3, #24581	; 0x6005
   2e51c:	movw	r2, #1773	; 0x6ed
   2e520:	movt	r0, #3
   2e524:	movt	r1, #3
   2e528:	movt	r3, #3
   2e52c:	bl	12bc4 <__assert_fail@plt>
   2e530:	movw	r0, #24655	; 0x604f
   2e534:	movw	r1, #20934	; 0x51c6
   2e538:	movw	r3, #24581	; 0x6005
   2e53c:	movw	r2, #1774	; 0x6ee
   2e540:	movt	r0, #3
   2e544:	movt	r1, #3
   2e548:	movt	r3, #3
   2e54c:	bl	12bc4 <__assert_fail@plt>
   2e550:	movw	r0, #25452	; 0x636c
   2e554:	movw	r1, #20934	; 0x51c6
   2e558:	movw	r3, #24581	; 0x6005
   2e55c:	movw	r2, #1784	; 0x6f8
   2e560:	movt	r0, #3
   2e564:	movt	r1, #3
   2e568:	movt	r3, #3
   2e56c:	bl	12bc4 <__assert_fail@plt>

0002e570 <flatcc_builder_table_add_union_vector@@Base>:
   2e570:	push	{r4, r5, r6, r7, fp, lr}
   2e574:	add	fp, sp, #16
   2e578:	mov	r6, r0
   2e57c:	ldr	r0, [r0, #32]
   2e580:	ldrh	r0, [r0, #14]
   2e584:	cmp	r0, #3
   2e588:	bne	2e5f0 <flatcc_builder_table_add_union_vector@@Base+0x80>
   2e58c:	clz	r0, r3
   2e590:	mov	r5, r1
   2e594:	clz	r1, r2
   2e598:	mov	r4, r3
   2e59c:	mov	r7, r2
   2e5a0:	lsr	r0, r0, #5
   2e5a4:	lsr	r1, r1, #5
   2e5a8:	cmp	r1, r0
   2e5ac:	bne	2e610 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   2e5b0:	cmp	r7, #0
   2e5b4:	beq	2e5e8 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2e5b8:	sub	r1, r5, #1
   2e5bc:	mov	r0, r6
   2e5c0:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   2e5c4:	cmp	r0, #0
   2e5c8:	beq	2e630 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   2e5cc:	str	r7, [r0]
   2e5d0:	mov	r0, r6
   2e5d4:	mov	r1, r5
   2e5d8:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   2e5dc:	cmp	r0, #0
   2e5e0:	beq	2e650 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2e5e4:	str	r4, [r0]
   2e5e8:	mov	r0, #0
   2e5ec:	pop	{r4, r5, r6, r7, fp, pc}
   2e5f0:	movw	r0, #23003	; 0x59db
   2e5f4:	movw	r1, #20934	; 0x51c6
   2e5f8:	movw	r3, #23901	; 0x5d5d
   2e5fc:	mov	r2, #1536	; 0x600
   2e600:	movt	r0, #3
   2e604:	movt	r1, #3
   2e608:	movt	r3, #3
   2e60c:	bl	12bc4 <__assert_fail@plt>
   2e610:	movw	r0, #24000	; 0x5dc0
   2e614:	movw	r1, #20934	; 0x51c6
   2e618:	movw	r3, #23901	; 0x5d5d
   2e61c:	movw	r2, #1537	; 0x601
   2e620:	movt	r0, #3
   2e624:	movt	r1, #3
   2e628:	movt	r3, #3
   2e62c:	bl	12bc4 <__assert_fail@plt>
   2e630:	movw	r0, #23879	; 0x5d47
   2e634:	movw	r1, #20934	; 0x51c6
   2e638:	movw	r3, #23901	; 0x5d5d
   2e63c:	movw	r2, #1540	; 0x604
   2e640:	movt	r0, #3
   2e644:	movt	r1, #3
   2e648:	movt	r3, #3
   2e64c:	bl	12bc4 <__assert_fail@plt>
   2e650:	movw	r0, #23879	; 0x5d47
   2e654:	movw	r1, #20934	; 0x51c6
   2e658:	movw	r3, #23901	; 0x5d5d
   2e65c:	movw	r2, #1544	; 0x608
   2e660:	movt	r0, #3
   2e664:	movt	r1, #3
   2e668:	movt	r3, #3
   2e66c:	bl	12bc4 <__assert_fail@plt>

0002e670 <flatcc_builder_create_union_vector@@Base>:
   2e670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e674:	add	fp, sp, #28
   2e678:	sub	sp, sp, #12
   2e67c:	mov	r7, #0
   2e680:	mov	r4, r1
   2e684:	mov	r5, r0
   2e688:	mov	sl, r3
   2e68c:	mov	r9, r2
   2e690:	mov	r6, #4
   2e694:	str	r7, [r0]
   2e698:	str	r7, [r0, #4]
   2e69c:	mov	r0, r1
   2e6a0:	mov	r1, #4
   2e6a4:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2e6a8:	cmp	r0, #0
   2e6ac:	beq	2e6b8 <flatcc_builder_create_union_vector@@Base+0x48>
   2e6b0:	sub	sp, fp, #28
   2e6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e6b8:	ldr	r0, [r4, #32]
   2e6bc:	mov	r1, #5
   2e6c0:	str	r6, [r0, #16]
   2e6c4:	ldr	r0, [r4, #32]
   2e6c8:	str	r7, [r0, #20]
   2e6cc:	ldr	r0, [r4, #32]
   2e6d0:	strh	r1, [r0, #14]
   2e6d4:	ldr	r1, [r4, #28]
   2e6d8:	ldr	r2, [r4, #60]	; 0x3c
   2e6dc:	ldr	r3, [r4, #64]	; 0x40
   2e6e0:	add	r2, r2, r1
   2e6e4:	sub	r1, r3, r1
   2e6e8:	str	r2, [r4, #16]
   2e6ec:	mvn	r2, #3
   2e6f0:	cmn	r1, #4
   2e6f4:	movcs	r1, r2
   2e6f8:	str	r1, [r4, #24]
   2e6fc:	str	r2, [r0, #4]
   2e700:	ldr	r1, [r0, #20]
   2e704:	adds	r1, r1, sl
   2e708:	cmpcc	r1, #1073741824	; 0x40000000
   2e70c:	bcc	2e730 <flatcc_builder_create_union_vector@@Base+0xc0>
   2e710:	movw	r0, #25205	; 0x6275
   2e714:	movw	r1, #20934	; 0x51c6
   2e718:	movw	r3, #25232	; 0x6290
   2e71c:	mov	r2, #892	; 0x37c
   2e720:	movt	r0, #3
   2e724:	movt	r1, #3
   2e728:	movt	r3, #3
   2e72c:	bl	12bc4 <__assert_fail@plt>
   2e730:	str	r1, [r0, #20]
   2e734:	ldr	r7, [r4, #20]
   2e738:	ldr	r0, [r4, #24]
   2e73c:	add	r1, r7, sl, lsl #2
   2e740:	cmp	r1, r0
   2e744:	str	r1, [r4, #20]
   2e748:	bcs	2e75c <flatcc_builder_create_union_vector@@Base+0xec>
   2e74c:	ldr	r1, [r4, #16]
   2e750:	adds	r2, r1, r7
   2e754:	bne	2e7c4 <flatcc_builder_create_union_vector@@Base+0x154>
   2e758:	b	2e6b0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e75c:	ldr	r2, [r4, #28]
   2e760:	ldr	r0, [r4, #40]	; 0x28
   2e764:	ldr	r6, [r4, #48]	; 0x30
   2e768:	mov	r3, #1
   2e76c:	str	r3, [sp]
   2e770:	mov	r3, #1
   2e774:	add	r1, r1, r2
   2e778:	add	r2, r1, #1
   2e77c:	add	r1, r4, #60	; 0x3c
   2e780:	blx	r6
   2e784:	cmp	r0, #0
   2e788:	bne	2e6b0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e78c:	ldr	r0, [r4, #28]
   2e790:	ldr	r1, [r4, #60]	; 0x3c
   2e794:	ldr	r3, [r4, #64]	; 0x40
   2e798:	ldr	r2, [r4, #32]
   2e79c:	add	r1, r1, r0
   2e7a0:	sub	r0, r3, r0
   2e7a4:	mvn	r3, #3
   2e7a8:	cmn	r0, #4
   2e7ac:	str	r1, [r4, #16]
   2e7b0:	movcs	r0, r3
   2e7b4:	str	r0, [r4, #24]
   2e7b8:	str	r3, [r2, #4]
   2e7bc:	adds	r2, r1, r7
   2e7c0:	beq	2e6b0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e7c4:	ldr	r7, [r4, #20]
   2e7c8:	add	r2, r7, sl
   2e7cc:	cmp	r2, r0
   2e7d0:	str	r2, [r4, #20]
   2e7d4:	bcc	2e838 <flatcc_builder_create_union_vector@@Base+0x1c8>
   2e7d8:	ldr	r1, [r4, #28]
   2e7dc:	ldr	r0, [r4, #40]	; 0x28
   2e7e0:	ldr	r6, [r4, #48]	; 0x30
   2e7e4:	mov	r3, #1
   2e7e8:	str	r3, [sp]
   2e7ec:	mov	r3, #1
   2e7f0:	add	r1, r2, r1
   2e7f4:	add	r2, r1, #1
   2e7f8:	add	r1, r4, #60	; 0x3c
   2e7fc:	blx	r6
   2e800:	cmp	r0, #0
   2e804:	bne	2e6b0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e808:	ldr	r0, [r4, #28]
   2e80c:	ldr	r1, [r4, #60]	; 0x3c
   2e810:	ldr	r3, [r4, #64]	; 0x40
   2e814:	ldr	r2, [r4, #32]
   2e818:	add	r1, r1, r0
   2e81c:	sub	r0, r3, r0
   2e820:	mvn	r3, #3
   2e824:	cmn	r0, #4
   2e828:	str	r1, [r4, #16]
   2e82c:	movcs	r0, r3
   2e830:	str	r0, [r4, #24]
   2e834:	str	r3, [r2, #4]
   2e838:	adds	r8, r1, r7
   2e83c:	beq	2e6b0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e840:	cmp	sl, #0
   2e844:	beq	2e874 <flatcc_builder_create_union_vector@@Base+0x204>
   2e848:	add	r0, r9, #4
   2e84c:	mov	r2, sl
   2e850:	mov	r3, r1
   2e854:	mov	r7, r8
   2e858:	ldrb	r6, [r0, #-4]
   2e85c:	subs	r2, r2, #1
   2e860:	strb	r6, [r7], #1
   2e864:	ldr	r6, [r0]
   2e868:	add	r0, r0, #8
   2e86c:	str	r6, [r3], #4
   2e870:	bne	2e858 <flatcc_builder_create_union_vector@@Base+0x1e8>
   2e874:	mov	r0, r4
   2e878:	mov	r2, sl
   2e87c:	mov	r3, r8
   2e880:	bl	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e884:	mov	r7, r0
   2e888:	mov	r9, #0
   2e88c:	cmp	r0, #0
   2e890:	beq	2e8bc <flatcc_builder_create_union_vector@@Base+0x24c>
   2e894:	mvn	r0, #0
   2e898:	mov	r1, #1
   2e89c:	mov	r2, sl
   2e8a0:	mov	r3, #1
   2e8a4:	str	r1, [sp]
   2e8a8:	str	r0, [sp, #4]
   2e8ac:	mov	r0, r4
   2e8b0:	mov	r1, r8
   2e8b4:	bl	2dbd4 <flatcc_builder_create_vector@@Base>
   2e8b8:	b	2e8c0 <flatcc_builder_create_union_vector@@Base+0x250>
   2e8bc:	mov	r0, #0
   2e8c0:	orr	r1, r9, r7
   2e8c4:	stm	r5, {r0, r1}
   2e8c8:	mov	r1, #0
   2e8cc:	ldr	r0, [r4, #16]
   2e8d0:	ldr	r2, [r4, #20]
   2e8d4:	bl	12b64 <memset@plt>
   2e8d8:	ldr	r0, [r4, #32]
   2e8dc:	ldr	r1, [r4, #60]	; 0x3c
   2e8e0:	ldr	r2, [r4, #64]	; 0x40
   2e8e4:	ldr	r3, [r0, #8]
   2e8e8:	str	r3, [r4, #20]
   2e8ec:	ldr	r3, [r0]
   2e8f0:	str	r3, [r4, #28]
   2e8f4:	add	r1, r1, r3
   2e8f8:	ldr	r7, [r0, #4]
   2e8fc:	str	r1, [r4, #16]
   2e900:	sub	r1, r2, r3
   2e904:	cmp	r1, r7
   2e908:	movhi	r1, r7
   2e90c:	str	r1, [r4, #24]
   2e910:	ldrh	r1, [r4, #130]	; 0x82
   2e914:	ldrh	r2, [r4, #128]	; 0x80
   2e918:	cmp	r2, r1
   2e91c:	strhcc	r1, [r4, #128]	; 0x80
   2e920:	ldrh	r1, [r0, #12]
   2e924:	sub	r0, r0, #36	; 0x24
   2e928:	str	r0, [r4, #32]
   2e92c:	strh	r1, [r4, #130]	; 0x82
   2e930:	ldr	r0, [r4, #156]	; 0x9c
   2e934:	sub	r0, r0, #1
   2e938:	str	r0, [r4, #156]	; 0x9c
   2e93c:	sub	sp, fp, #28
   2e940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e944 <flatcc_builder_create_union_vector_direct@@Base>:
   2e944:	push	{r4, r5, r6, r7, fp, lr}
   2e948:	add	fp, sp, #16
   2e94c:	sub	sp, sp, #8
   2e950:	ldr	r7, [fp, #8]
   2e954:	mov	r5, r2
   2e958:	mov	r4, r0
   2e95c:	mov	r0, #0
   2e960:	mov	r6, r1
   2e964:	str	r0, [r4]
   2e968:	str	r0, [r4, #4]
   2e96c:	mov	r0, r1
   2e970:	mov	r1, r3
   2e974:	mov	r3, r5
   2e978:	mov	r2, r7
   2e97c:	bl	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e980:	cmp	r0, #0
   2e984:	str	r0, [r4, #4]
   2e988:	beq	2e9b4 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2e98c:	mvn	r0, #0
   2e990:	mov	r1, #1
   2e994:	mov	r2, r7
   2e998:	mov	r3, #1
   2e99c:	str	r1, [sp]
   2e9a0:	str	r0, [sp, #4]
   2e9a4:	mov	r0, r6
   2e9a8:	mov	r1, r5
   2e9ac:	bl	2dbd4 <flatcc_builder_create_vector@@Base>
   2e9b0:	str	r0, [r4]
   2e9b4:	sub	sp, fp, #16
   2e9b8:	pop	{r4, r5, r6, r7, fp, pc}

0002e9bc <flatcc_builder_start_union_vector@@Base>:
   2e9bc:	push	{r4, sl, fp, lr}
   2e9c0:	add	fp, sp, #8
   2e9c4:	mov	r1, #4
   2e9c8:	mov	r4, r0
   2e9cc:	bl	2bb28 <flatcc_builder_start_buffer@@Base+0xbc>
   2e9d0:	mov	r1, r0
   2e9d4:	mvn	r0, #0
   2e9d8:	cmp	r1, #0
   2e9dc:	popne	{r4, sl, fp, pc}
   2e9e0:	ldr	r0, [r4, #32]
   2e9e4:	mov	r1, #8
   2e9e8:	mov	r2, #7
   2e9ec:	str	r1, [r0, #16]
   2e9f0:	mov	r0, #0
   2e9f4:	ldr	r1, [r4, #32]
   2e9f8:	str	r0, [r1, #20]
   2e9fc:	ldr	r1, [r4, #32]
   2ea00:	strh	r2, [r1, #14]
   2ea04:	ldr	r2, [r4, #28]
   2ea08:	ldr	r3, [r4, #60]	; 0x3c
   2ea0c:	ldr	ip, [r4, #64]	; 0x40
   2ea10:	add	r3, r3, r2
   2ea14:	sub	r2, ip, r2
   2ea18:	str	r3, [r4, #16]
   2ea1c:	mvn	r3, #3
   2ea20:	cmn	r2, #4
   2ea24:	movcs	r2, r3
   2ea28:	str	r2, [r4, #24]
   2ea2c:	str	r3, [r1, #4]
   2ea30:	pop	{r4, sl, fp, pc}

0002ea34 <flatcc_builder_end_union_vector@@Base>:
   2ea34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ea38:	add	fp, sp, #28
   2ea3c:	sub	sp, sp, #12
   2ea40:	mov	sl, r0
   2ea44:	mov	r0, #0
   2ea48:	mov	r4, r1
   2ea4c:	str	r0, [sl]
   2ea50:	str	r0, [sl, #4]
   2ea54:	ldr	r0, [r1, #32]
   2ea58:	ldrh	r1, [r0, #14]
   2ea5c:	cmp	r1, #7
   2ea60:	bne	2ec08 <flatcc_builder_end_union_vector@@Base+0x1d4>
   2ea64:	ldr	r6, [r0, #20]
   2ea68:	ldr	r7, [r4, #20]
   2ea6c:	ldr	r2, [r4, #24]
   2ea70:	add	r0, r6, r6, lsl #2
   2ea74:	add	r1, r7, r0
   2ea78:	cmp	r1, r2
   2ea7c:	str	r1, [r4, #20]
   2ea80:	bcs	2eb10 <flatcc_builder_end_union_vector@@Base+0xdc>
   2ea84:	ldr	r0, [r4, #16]
   2ea88:	adds	r1, r0, r7
   2ea8c:	beq	2eb78 <flatcc_builder_end_union_vector@@Base+0x144>
   2ea90:	add	r8, r1, r6, lsl #2
   2ea94:	cmp	r6, #0
   2ea98:	beq	2eac8 <flatcc_builder_end_union_vector@@Base+0x94>
   2ea9c:	add	r0, r0, #4
   2eaa0:	mov	r2, r6
   2eaa4:	mov	r3, r1
   2eaa8:	mov	r7, r8
   2eaac:	ldrb	r5, [r0, #-4]
   2eab0:	subs	r2, r2, #1
   2eab4:	strb	r5, [r7], #1
   2eab8:	ldr	r5, [r0]
   2eabc:	add	r0, r0, #8
   2eac0:	str	r5, [r3], #4
   2eac4:	bne	2eaac <flatcc_builder_end_union_vector@@Base+0x78>
   2eac8:	mov	r0, r4
   2eacc:	mov	r2, r6
   2ead0:	mov	r3, r8
   2ead4:	bl	2de38 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ead8:	mov	r7, r0
   2eadc:	mov	r9, #0
   2eae0:	cmp	r0, #0
   2eae4:	beq	2eb80 <flatcc_builder_end_union_vector@@Base+0x14c>
   2eae8:	mvn	r0, #0
   2eaec:	mov	r1, #1
   2eaf0:	mov	r2, r6
   2eaf4:	mov	r3, #1
   2eaf8:	str	r1, [sp]
   2eafc:	str	r0, [sp, #4]
   2eb00:	mov	r0, r4
   2eb04:	mov	r1, r8
   2eb08:	bl	2dbd4 <flatcc_builder_create_vector@@Base>
   2eb0c:	b	2eb84 <flatcc_builder_end_union_vector@@Base+0x150>
   2eb10:	ldr	r2, [r4, #28]
   2eb14:	ldr	r0, [r4, #40]	; 0x28
   2eb18:	ldr	r5, [r4, #48]	; 0x30
   2eb1c:	mov	r3, #1
   2eb20:	str	r3, [sp]
   2eb24:	mov	r3, #1
   2eb28:	add	r1, r1, r2
   2eb2c:	add	r2, r1, #1
   2eb30:	add	r1, r4, #60	; 0x3c
   2eb34:	blx	r5
   2eb38:	cmp	r0, #0
   2eb3c:	bne	2eb78 <flatcc_builder_end_union_vector@@Base+0x144>
   2eb40:	ldr	r1, [r4, #28]
   2eb44:	ldr	r0, [r4, #60]	; 0x3c
   2eb48:	ldr	r3, [r4, #64]	; 0x40
   2eb4c:	ldr	r2, [r4, #32]
   2eb50:	add	r0, r0, r1
   2eb54:	sub	r1, r3, r1
   2eb58:	mvn	r3, #3
   2eb5c:	cmn	r1, #4
   2eb60:	str	r0, [r4, #16]
   2eb64:	movcs	r1, r3
   2eb68:	str	r1, [r4, #24]
   2eb6c:	str	r3, [r2, #4]
   2eb70:	adds	r1, r0, r7
   2eb74:	bne	2ea90 <flatcc_builder_end_union_vector@@Base+0x5c>
   2eb78:	sub	sp, fp, #28
   2eb7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb80:	mov	r0, #0
   2eb84:	orr	r1, r9, r7
   2eb88:	stm	sl, {r0, r1}
   2eb8c:	mov	r1, #0
   2eb90:	ldr	r0, [r4, #16]
   2eb94:	ldr	r2, [r4, #20]
   2eb98:	bl	12b64 <memset@plt>
   2eb9c:	ldr	r0, [r4, #32]
   2eba0:	ldr	r1, [r4, #60]	; 0x3c
   2eba4:	ldr	r2, [r4, #64]	; 0x40
   2eba8:	ldr	r3, [r0, #8]
   2ebac:	str	r3, [r4, #20]
   2ebb0:	ldr	r3, [r0]
   2ebb4:	str	r3, [r4, #28]
   2ebb8:	add	r1, r1, r3
   2ebbc:	ldr	r7, [r0, #4]
   2ebc0:	str	r1, [r4, #16]
   2ebc4:	sub	r1, r2, r3
   2ebc8:	cmp	r1, r7
   2ebcc:	movhi	r1, r7
   2ebd0:	str	r1, [r4, #24]
   2ebd4:	ldrh	r1, [r4, #130]	; 0x82
   2ebd8:	ldrh	r2, [r4, #128]	; 0x80
   2ebdc:	cmp	r2, r1
   2ebe0:	strhcc	r1, [r4, #128]	; 0x80
   2ebe4:	ldrh	r1, [r0, #12]
   2ebe8:	sub	r0, r0, #36	; 0x24
   2ebec:	str	r0, [r4, #32]
   2ebf0:	strh	r1, [r4, #130]	; 0x82
   2ebf4:	ldr	r0, [r4, #156]	; 0x9c
   2ebf8:	sub	r0, r0, #1
   2ebfc:	str	r0, [r4, #156]	; 0x9c
   2ec00:	sub	sp, fp, #28
   2ec04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ec08:	movw	r0, #24040	; 0x5de8
   2ec0c:	movw	r1, #20934	; 0x51c6
   2ec10:	movw	r3, #24090	; 0x5e1a
   2ec14:	movw	r2, #1617	; 0x651
   2ec18:	movt	r0, #3
   2ec1c:	movt	r1, #3
   2ec20:	movt	r3, #3
   2ec24:	bl	12bc4 <__assert_fail@plt>

0002ec28 <flatcc_builder_union_vector_count@@Base>:
   2ec28:	ldr	r0, [r0, #32]
   2ec2c:	ldr	r0, [r0, #20]
   2ec30:	bx	lr

0002ec34 <flatcc_builder_union_vector_edit@@Base>:
   2ec34:	ldr	r0, [r0, #16]
   2ec38:	bx	lr

0002ec3c <flatcc_builder_extend_union_vector@@Base>:
   2ec3c:	push	{r4, r5, fp, lr}
   2ec40:	add	fp, sp, #8
   2ec44:	sub	sp, sp, #8
   2ec48:	mov	r4, r0
   2ec4c:	ldr	r0, [r0, #32]
   2ec50:	ldr	r2, [r0, #20]
   2ec54:	adds	r2, r2, r1
   2ec58:	cmpcc	r2, #536870912	; 0x20000000
   2ec5c:	bcc	2ec80 <flatcc_builder_extend_union_vector@@Base+0x44>
   2ec60:	movw	r0, #25205	; 0x6275
   2ec64:	movw	r1, #20934	; 0x51c6
   2ec68:	movw	r3, #25232	; 0x6290
   2ec6c:	mov	r2, #892	; 0x37c
   2ec70:	movt	r0, #3
   2ec74:	movt	r1, #3
   2ec78:	movt	r3, #3
   2ec7c:	bl	12bc4 <__assert_fail@plt>
   2ec80:	str	r2, [r0, #20]
   2ec84:	ldr	r5, [r4, #20]
   2ec88:	ldr	r0, [r4, #24]
   2ec8c:	add	r1, r5, r1, lsl #3
   2ec90:	cmp	r1, r0
   2ec94:	str	r1, [r4, #20]
   2ec98:	bcs	2ecac <flatcc_builder_extend_union_vector@@Base+0x70>
   2ec9c:	ldr	r0, [r4, #16]
   2eca0:	add	r0, r0, r5
   2eca4:	sub	sp, fp, #8
   2eca8:	pop	{r4, r5, fp, pc}
   2ecac:	ldr	r2, [r4, #28]
   2ecb0:	ldr	r0, [r4, #40]	; 0x28
   2ecb4:	ldr	ip, [r4, #48]	; 0x30
   2ecb8:	mov	r3, #1
   2ecbc:	str	r3, [sp]
   2ecc0:	mov	r3, #1
   2ecc4:	add	r1, r1, r2
   2ecc8:	add	r2, r1, #1
   2eccc:	add	r1, r4, #60	; 0x3c
   2ecd0:	blx	ip
   2ecd4:	mov	r1, r0
   2ecd8:	mov	r0, #0
   2ecdc:	cmp	r1, #0
   2ece0:	beq	2ecec <flatcc_builder_extend_union_vector@@Base+0xb0>
   2ece4:	sub	sp, fp, #8
   2ece8:	pop	{r4, r5, fp, pc}
   2ecec:	ldr	r1, [r4, #28]
   2ecf0:	ldr	r0, [r4, #60]	; 0x3c
   2ecf4:	ldr	r3, [r4, #64]	; 0x40
   2ecf8:	ldr	r2, [r4, #32]
   2ecfc:	add	r0, r0, r1
   2ed00:	sub	r1, r3, r1
   2ed04:	mvn	r3, #3
   2ed08:	cmn	r1, #4
   2ed0c:	str	r0, [r4, #16]
   2ed10:	movcs	r1, r3
   2ed14:	str	r1, [r4, #24]
   2ed18:	str	r3, [r2, #4]
   2ed1c:	add	r0, r0, r5
   2ed20:	sub	sp, fp, #8
   2ed24:	pop	{r4, r5, fp, pc}

0002ed28 <flatcc_builder_truncate_union_vector@@Base>:
   2ed28:	push	{fp, lr}
   2ed2c:	mov	fp, sp
   2ed30:	ldr	r2, [r0, #32]
   2ed34:	ldrh	r3, [r2, #14]
   2ed38:	cmp	r3, #7
   2ed3c:	bne	2ed84 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2ed40:	ldr	r3, [r2, #20]
   2ed44:	cmp	r3, r1
   2ed48:	bcc	2eda4 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   2ed4c:	sub	r3, r3, r1
   2ed50:	str	r3, [r2, #20]
   2ed54:	ldr	r2, [r0, #32]
   2ed58:	ldr	r3, [r0, #20]
   2ed5c:	ldr	ip, [r0, #16]
   2ed60:	ldr	r2, [r2, #16]
   2ed64:	mls	r3, r2, r1, r3
   2ed68:	mul	r2, r2, r1
   2ed6c:	mov	r1, #0
   2ed70:	str	r3, [r0, #20]
   2ed74:	add	r0, ip, r3
   2ed78:	bl	12b64 <memset@plt>
   2ed7c:	mov	r0, #0
   2ed80:	pop	{fp, pc}
   2ed84:	movw	r0, #24040	; 0x5de8
   2ed88:	movw	r1, #20934	; 0x51c6
   2ed8c:	movw	r3, #24173	; 0x5e6d
   2ed90:	movw	r2, #1665	; 0x681
   2ed94:	movt	r0, #3
   2ed98:	movt	r1, #3
   2ed9c:	movt	r3, #3
   2eda0:	bl	12bc4 <__assert_fail@plt>
   2eda4:	movw	r0, #22604	; 0x584c
   2eda8:	movw	r1, #20934	; 0x51c6
   2edac:	movw	r3, #24173	; 0x5e6d
   2edb0:	movw	r2, #1666	; 0x682
   2edb4:	movt	r0, #3
   2edb8:	movt	r1, #3
   2edbc:	movt	r3, #3
   2edc0:	bl	12bc4 <__assert_fail@plt>

0002edc4 <flatcc_builder_union_vector_push@@Base>:
   2edc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2edc8:	add	fp, sp, #24
   2edcc:	sub	sp, sp, #8
   2edd0:	mov	r7, r0
   2edd4:	ldr	r0, [r0, #32]
   2edd8:	mov	r9, r1
   2eddc:	ldrh	r1, [r0, #14]
   2ede0:	cmp	r1, #7
   2ede4:	bne	2eeac <flatcc_builder_union_vector_push@@Base+0xe8>
   2ede8:	ldr	r1, [r0, #20]
   2edec:	mov	r6, #0
   2edf0:	cmn	r1, #-536870911	; 0xe0000001
   2edf4:	beq	2ee54 <flatcc_builder_union_vector_push@@Base+0x90>
   2edf8:	add	r1, r1, #1
   2edfc:	mov	r8, r2
   2ee00:	str	r1, [r0, #20]
   2ee04:	ldr	r4, [r7, #20]
   2ee08:	ldr	r0, [r7, #24]
   2ee0c:	add	r1, r4, #8
   2ee10:	cmp	r1, r0
   2ee14:	str	r1, [r7, #20]
   2ee18:	bcs	2ee24 <flatcc_builder_union_vector_push@@Base+0x60>
   2ee1c:	ldr	r0, [r7, #16]
   2ee20:	b	2ee90 <flatcc_builder_union_vector_push@@Base+0xcc>
   2ee24:	ldr	r1, [r7, #28]
   2ee28:	ldr	r0, [r7, #40]	; 0x28
   2ee2c:	ldr	r5, [r7, #48]	; 0x30
   2ee30:	mov	r2, #1
   2ee34:	mov	r3, #1
   2ee38:	str	r2, [sp]
   2ee3c:	add	r1, r4, r1
   2ee40:	add	r2, r1, #9
   2ee44:	add	r1, r7, #60	; 0x3c
   2ee48:	blx	r5
   2ee4c:	cmp	r0, #0
   2ee50:	beq	2ee60 <flatcc_builder_union_vector_push@@Base+0x9c>
   2ee54:	mov	r0, r6
   2ee58:	sub	sp, fp, #24
   2ee5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ee60:	ldr	r1, [r7, #28]
   2ee64:	ldr	r0, [r7, #60]	; 0x3c
   2ee68:	ldr	r3, [r7, #64]	; 0x40
   2ee6c:	ldr	r2, [r7, #32]
   2ee70:	add	r0, r0, r1
   2ee74:	sub	r1, r3, r1
   2ee78:	mvn	r3, #3
   2ee7c:	cmn	r1, #4
   2ee80:	str	r0, [r7, #16]
   2ee84:	movcs	r1, r3
   2ee88:	str	r1, [r7, #24]
   2ee8c:	str	r3, [r2, #4]
   2ee90:	adds	r0, r0, r4
   2ee94:	movne	r6, r0
   2ee98:	strne	r9, [r0]
   2ee9c:	strne	r8, [r0, #4]
   2eea0:	mov	r0, r6
   2eea4:	sub	sp, fp, #24
   2eea8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2eeac:	movw	r0, #24040	; 0x5de8
   2eeb0:	movw	r1, #20934	; 0x51c6
   2eeb4:	movw	r3, #24242	; 0x5eb2
   2eeb8:	movw	r2, #1677	; 0x68d
   2eebc:	movt	r0, #3
   2eec0:	movt	r1, #3
   2eec4:	movt	r3, #3
   2eec8:	bl	12bc4 <__assert_fail@plt>

0002eecc <flatcc_builder_append_union_vector@@Base>:
   2eecc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eed0:	add	fp, sp, #24
   2eed4:	sub	sp, sp, #8
   2eed8:	mov	r6, r0
   2eedc:	ldr	r0, [r0, #32]
   2eee0:	mov	r8, r1
   2eee4:	ldrh	r1, [r0, #14]
   2eee8:	cmp	r1, #7
   2eeec:	bne	2eff0 <flatcc_builder_append_union_vector@@Base+0x124>
   2eef0:	ldr	r1, [r0, #20]
   2eef4:	mov	r5, r2
   2eef8:	adds	r1, r1, r2
   2eefc:	cmpcc	r1, #536870912	; 0x20000000
   2ef00:	bcc	2ef24 <flatcc_builder_append_union_vector@@Base+0x58>
   2ef04:	movw	r0, #25205	; 0x6275
   2ef08:	movw	r1, #20934	; 0x51c6
   2ef0c:	movw	r3, #25232	; 0x6290
   2ef10:	mov	r2, #892	; 0x37c
   2ef14:	movt	r0, #3
   2ef18:	movt	r1, #3
   2ef1c:	movt	r3, #3
   2ef20:	bl	12bc4 <__assert_fail@plt>
   2ef24:	str	r1, [r0, #20]
   2ef28:	ldr	r4, [r6, #20]
   2ef2c:	ldr	r0, [r6, #24]
   2ef30:	add	r1, r4, r5, lsl #3
   2ef34:	cmp	r1, r0
   2ef38:	str	r1, [r6, #20]
   2ef3c:	bcs	2ef68 <flatcc_builder_append_union_vector@@Base+0x9c>
   2ef40:	ldr	r0, [r6, #16]
   2ef44:	adds	r7, r0, r4
   2ef48:	beq	2efe0 <flatcc_builder_append_union_vector@@Base+0x114>
   2ef4c:	lsl	r2, r5, #3
   2ef50:	mov	r0, r7
   2ef54:	mov	r1, r8
   2ef58:	bl	12ab0 <memcpy@plt>
   2ef5c:	mov	r0, r7
   2ef60:	sub	sp, fp, #24
   2ef64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ef68:	ldr	r2, [r6, #28]
   2ef6c:	ldr	r0, [r6, #40]	; 0x28
   2ef70:	ldr	r7, [r6, #48]	; 0x30
   2ef74:	mov	r3, #1
   2ef78:	str	r3, [sp]
   2ef7c:	mov	r3, #1
   2ef80:	add	r1, r1, r2
   2ef84:	add	r2, r1, #1
   2ef88:	add	r1, r6, #60	; 0x3c
   2ef8c:	blx	r7
   2ef90:	mov	r7, #0
   2ef94:	cmp	r0, #0
   2ef98:	beq	2efa8 <flatcc_builder_append_union_vector@@Base+0xdc>
   2ef9c:	mov	r0, r7
   2efa0:	sub	sp, fp, #24
   2efa4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2efa8:	ldr	r1, [r6, #28]
   2efac:	ldr	r0, [r6, #60]	; 0x3c
   2efb0:	ldr	r3, [r6, #64]	; 0x40
   2efb4:	ldr	r2, [r6, #32]
   2efb8:	add	r0, r0, r1
   2efbc:	sub	r1, r3, r1
   2efc0:	mvn	r3, #3
   2efc4:	cmn	r1, #4
   2efc8:	str	r0, [r6, #16]
   2efcc:	movcs	r1, r3
   2efd0:	str	r1, [r6, #24]
   2efd4:	str	r3, [r2, #4]
   2efd8:	adds	r7, r0, r4
   2efdc:	bne	2ef4c <flatcc_builder_append_union_vector@@Base+0x80>
   2efe0:	mov	r7, #0
   2efe4:	mov	r0, r7
   2efe8:	sub	sp, fp, #24
   2efec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eff0:	movw	r0, #24040	; 0x5de8
   2eff4:	movw	r1, #20934	; 0x51c6
   2eff8:	movw	r3, #24351	; 0x5f1f
   2effc:	movw	r2, #1692	; 0x69c
   2f000:	movt	r0, #3
   2f004:	movt	r1, #3
   2f008:	movt	r3, #3
   2f00c:	bl	12bc4 <__assert_fail@plt>

0002f010 <flatcc_builder_create_string@@Base>:
   2f010:	push	{r4, r5, r6, sl, fp, lr}
   2f014:	add	fp, sp, #16
   2f018:	sub	sp, sp, #80	; 0x50
   2f01c:	str	r2, [fp, #-20]	; 0xffffffec
   2f020:	mvn	r5, r2
   2f024:	mov	r6, r0
   2f028:	mov	r3, #1
   2f02c:	cmp	r2, #0
   2f030:	ldr	ip, [r0, #136]	; 0x88
   2f034:	sub	r0, fp, #20
   2f038:	str	r0, [sp, #12]
   2f03c:	mov	r0, #4
   2f040:	str	r0, [sp, #4]
   2f044:	str	r0, [sp, #16]
   2f048:	str	r3, [sp, #8]
   2f04c:	add	r5, ip, r5
   2f050:	and	r5, r5, #3
   2f054:	add	r5, r5, #1
   2f058:	beq	2f074 <flatcc_builder_create_string@@Base+0x64>
   2f05c:	mov	r3, #2
   2f060:	add	r0, r2, #4
   2f064:	str	r1, [sp, #20]
   2f068:	str	r2, [sp, #24]
   2f06c:	str	r3, [sp, #8]
   2f070:	str	r0, [sp, #4]
   2f074:	movw	r2, #20404	; 0x4fb4
   2f078:	add	lr, sp, #4
   2f07c:	add	r1, r0, r5
   2f080:	add	r0, lr, r3, lsl #3
   2f084:	movt	r2, #3
   2f088:	str	r1, [sp, #4]
   2f08c:	cmp	r1, #0
   2f090:	str	r2, [r0, #8]
   2f094:	add	r2, r3, #1
   2f098:	str	r5, [r0, #12]
   2f09c:	str	r2, [sp, #8]
   2f0a0:	ble	2f0f4 <flatcc_builder_create_string@@Base+0xe4>
   2f0a4:	ldr	r0, [r6, #36]	; 0x24
   2f0a8:	ldr	r4, [r6, #44]	; 0x2c
   2f0ac:	sub	r5, ip, r1
   2f0b0:	str	r1, [sp]
   2f0b4:	add	r1, lr, #8
   2f0b8:	mov	r3, r5
   2f0bc:	blx	r4
   2f0c0:	cmp	r0, #0
   2f0c4:	streq	r5, [r6, #136]	; 0x88
   2f0c8:	moveq	r0, r5
   2f0cc:	subeq	sp, fp, #16
   2f0d0:	popeq	{r4, r5, r6, sl, fp, pc}
   2f0d4:	movw	r0, #25452	; 0x636c
   2f0d8:	movw	r1, #20934	; 0x51c6
   2f0dc:	movw	r3, #25131	; 0x622b
   2f0e0:	movw	r2, #651	; 0x28b
   2f0e4:	movt	r0, #3
   2f0e8:	movt	r1, #3
   2f0ec:	movt	r3, #3
   2f0f0:	bl	12bc4 <__assert_fail@plt>
   2f0f4:	movw	r0, #25452	; 0x636c
   2f0f8:	movw	r1, #20934	; 0x51c6
   2f0fc:	movw	r3, #25131	; 0x622b
   2f100:	movw	r2, #647	; 0x287
   2f104:	movt	r0, #3
   2f108:	movt	r1, #3
   2f10c:	movt	r3, #3
   2f110:	bl	12bc4 <__assert_fail@plt>

0002f114 <flatcc_builder_create_string_str@@Base>:
   2f114:	push	{r4, r5, fp, lr}
   2f118:	add	fp, sp, #8
   2f11c:	mov	r5, r0
   2f120:	mov	r0, r1
   2f124:	mov	r4, r1
   2f128:	bl	12b40 <strlen@plt>
   2f12c:	mov	r2, r0
   2f130:	mov	r0, r5
   2f134:	mov	r1, r4
   2f138:	pop	{r4, r5, fp, lr}
   2f13c:	b	2f010 <flatcc_builder_create_string@@Base>

0002f140 <flatcc_builder_create_string_strn@@Base>:
   2f140:	push	{r4, r5, r6, sl, fp, lr}
   2f144:	add	fp, sp, #16
   2f148:	mov	r6, r0
   2f14c:	mov	r5, r1
   2f150:	mov	r0, r1
   2f154:	mov	r1, #0
   2f158:	mov	r4, r2
   2f15c:	bl	12b7c <memchr@plt>
   2f160:	cmp	r0, #0
   2f164:	mov	r1, r5
   2f168:	subne	r4, r0, r5
   2f16c:	mov	r0, r6
   2f170:	mov	r2, r4
   2f174:	pop	{r4, r5, r6, sl, fp, lr}
   2f178:	b	2f010 <flatcc_builder_create_string@@Base>

0002f17c <flatcc_builder_end_string@@Base>:
   2f17c:	push	{r4, r5, fp, lr}
   2f180:	add	fp, sp, #8
   2f184:	mov	r4, r0
   2f188:	ldr	r0, [r0, #32]
   2f18c:	ldrh	r1, [r0, #14]
   2f190:	cmp	r1, #6
   2f194:	bne	2f23c <flatcc_builder_end_string@@Base+0xc0>
   2f198:	ldr	r2, [r0, #20]
   2f19c:	ldr	r0, [r4, #20]
   2f1a0:	cmp	r2, r0
   2f1a4:	bne	2f25c <flatcc_builder_end_string@@Base+0xe0>
   2f1a8:	ldr	r1, [r4, #16]
   2f1ac:	mov	r0, r4
   2f1b0:	bl	2f010 <flatcc_builder_create_string@@Base>
   2f1b4:	mov	r5, r0
   2f1b8:	cmp	r0, #0
   2f1bc:	beq	2f234 <flatcc_builder_end_string@@Base+0xb8>
   2f1c0:	ldr	r0, [r4, #16]
   2f1c4:	ldr	r2, [r4, #20]
   2f1c8:	mov	r1, #0
   2f1cc:	bl	12b64 <memset@plt>
   2f1d0:	ldr	r0, [r4, #32]
   2f1d4:	ldr	r1, [r4, #60]	; 0x3c
   2f1d8:	ldr	ip, [r4, #64]	; 0x40
   2f1dc:	ldr	r3, [r0, #8]
   2f1e0:	str	r3, [r4, #20]
   2f1e4:	ldr	r3, [r0]
   2f1e8:	str	r3, [r4, #28]
   2f1ec:	add	r1, r1, r3
   2f1f0:	ldr	r2, [r0, #4]
   2f1f4:	str	r1, [r4, #16]
   2f1f8:	sub	r1, ip, r3
   2f1fc:	cmp	r1, r2
   2f200:	movhi	r1, r2
   2f204:	str	r1, [r4, #24]
   2f208:	ldrh	r1, [r4, #130]	; 0x82
   2f20c:	ldrh	r2, [r4, #128]	; 0x80
   2f210:	cmp	r2, r1
   2f214:	strhcc	r1, [r4, #128]	; 0x80
   2f218:	ldrh	r1, [r0, #12]
   2f21c:	sub	r0, r0, #36	; 0x24
   2f220:	str	r0, [r4, #32]
   2f224:	strh	r1, [r4, #130]	; 0x82
   2f228:	ldr	r0, [r4, #156]	; 0x9c
   2f22c:	sub	r0, r0, #1
   2f230:	str	r0, [r4, #156]	; 0x9c
   2f234:	mov	r0, r5
   2f238:	pop	{r4, r5, fp, pc}
   2f23c:	movw	r0, #22251	; 0x56eb
   2f240:	movw	r1, #20934	; 0x51c6
   2f244:	movw	r3, #24478	; 0x5f9e
   2f248:	movw	r2, #1732	; 0x6c4
   2f24c:	movt	r0, #3
   2f250:	movt	r1, #3
   2f254:	movt	r3, #3
   2f258:	bl	12bc4 <__assert_fail@plt>
   2f25c:	movw	r0, #24545	; 0x5fe1
   2f260:	movw	r1, #20934	; 0x51c6
   2f264:	movw	r3, #24478	; 0x5f9e
   2f268:	movw	r2, #1733	; 0x6c5
   2f26c:	movt	r0, #3
   2f270:	movt	r1, #3
   2f274:	movt	r3, #3
   2f278:	bl	12bc4 <__assert_fail@plt>

0002f27c <flatcc_builder_string_edit@@Base>:
   2f27c:	ldr	r0, [r0, #16]
   2f280:	bx	lr

0002f284 <flatcc_builder_string_len@@Base>:
   2f284:	ldr	r0, [r0, #32]
   2f288:	ldr	r0, [r0, #20]
   2f28c:	bx	lr

0002f290 <flatcc_builder_table_edit@@Base>:
   2f290:	ldr	r2, [r0, #32]
   2f294:	ldrh	r2, [r2, #14]
   2f298:	cmp	r2, #3
   2f29c:	ldreq	r2, [r0, #16]
   2f2a0:	ldreq	r0, [r0, #20]
   2f2a4:	addeq	r0, r2, r0
   2f2a8:	subeq	r0, r0, r1
   2f2ac:	bxeq	lr
   2f2b0:	push	{fp, lr}
   2f2b4:	mov	fp, sp
   2f2b8:	movw	r0, #23003	; 0x59db
   2f2bc:	movw	r1, #20934	; 0x51c6
   2f2c0:	movw	r3, #24723	; 0x6093
   2f2c4:	movw	r2, #1794	; 0x702
   2f2c8:	movt	r0, #3
   2f2cc:	movt	r1, #3
   2f2d0:	movt	r3, #3
   2f2d4:	bl	12bc4 <__assert_fail@plt>

0002f2d8 <flatcc_builder_table_add_copy@@Base>:
   2f2d8:	push	{r4, r5, r6, sl, fp, lr}
   2f2dc:	add	fp, sp, #16
   2f2e0:	mov	r4, r3
   2f2e4:	ldr	r3, [fp, #8]
   2f2e8:	mov	r5, r2
   2f2ec:	mov	r2, r4
   2f2f0:	bl	2e3d4 <flatcc_builder_table_add@@Base>
   2f2f4:	mov	r6, r0
   2f2f8:	cmp	r0, #0
   2f2fc:	beq	2f310 <flatcc_builder_table_add_copy@@Base+0x38>
   2f300:	mov	r0, r6
   2f304:	mov	r1, r5
   2f308:	mov	r2, r4
   2f30c:	bl	12ab0 <memcpy@plt>
   2f310:	mov	r0, r6
   2f314:	pop	{r4, r5, r6, sl, fp, pc}

0002f318 <flatcc_builder_push_buffer_alignment@@Base>:
   2f318:	ldrh	r1, [r0, #128]	; 0x80
   2f31c:	mov	r2, #4
   2f320:	strh	r2, [r0, #128]	; 0x80
   2f324:	mov	r0, r1
   2f328:	bx	lr

0002f32c <flatcc_builder_pop_buffer_alignment@@Base>:
   2f32c:	ldrh	r2, [r0, #128]	; 0x80
   2f330:	cmp	r2, r1
   2f334:	strhcc	r1, [r0, #128]	; 0x80
   2f338:	bx	lr

0002f33c <flatcc_builder_get_buffer_alignment@@Base>:
   2f33c:	ldrh	r0, [r0, #128]	; 0x80
   2f340:	bx	lr

0002f344 <flatcc_builder_set_vtable_clustering@@Base>:
   2f344:	clz	r1, r1
   2f348:	lsr	r1, r1, #5
   2f34c:	str	r1, [r0, #180]	; 0xb4
   2f350:	bx	lr

0002f354 <flatcc_builder_set_block_align@@Base>:
   2f354:	strh	r1, [r0, #132]	; 0x84
   2f358:	bx	lr

0002f35c <flatcc_builder_get_level@@Base>:
   2f35c:	ldr	r0, [r0, #156]	; 0x9c
   2f360:	bx	lr

0002f364 <flatcc_builder_set_max_level@@Base>:
   2f364:	str	r1, [r0, #176]	; 0xb0
   2f368:	ldr	r2, [r0, #160]	; 0xa0
   2f36c:	cmp	r2, r1
   2f370:	strlt	r1, [r0, #160]	; 0xa0
   2f374:	bx	lr

0002f378 <flatcc_builder_get_buffer_size@@Base>:
   2f378:	ldr	r1, [r0, #136]	; 0x88
   2f37c:	ldr	r0, [r0, #140]	; 0x8c
   2f380:	sub	r0, r0, r1
   2f384:	bx	lr

0002f388 <flatcc_builder_get_buffer_start@@Base>:
   2f388:	ldr	r0, [r0, #136]	; 0x88
   2f38c:	bx	lr

0002f390 <flatcc_builder_get_buffer_end@@Base>:
   2f390:	ldr	r0, [r0, #140]	; 0x8c
   2f394:	bx	lr

0002f398 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2f398:	str	r1, [r0, #172]	; 0xac
   2f39c:	bx	lr

0002f3a0 <flatcc_builder_set_identifier@@Base>:
   2f3a0:	movw	r2, #20404	; 0x4fb4
   2f3a4:	cmp	r1, #0
   2f3a8:	movt	r2, #3
   2f3ac:	movne	r2, r1
   2f3b0:	ldr	r1, [r2]
   2f3b4:	str	r1, [r0, #168]	; 0xa8
   2f3b8:	bx	lr

0002f3bc <flatcc_builder_get_type@@Base>:
   2f3bc:	ldr	r0, [r0, #32]
   2f3c0:	cmp	r0, #0
   2f3c4:	ldrhne	r0, [r0, #14]
   2f3c8:	moveq	r0, #0
   2f3cc:	bx	lr

0002f3d0 <flatcc_builder_get_type_at@@Base>:
   2f3d0:	mov	r2, r0
   2f3d4:	cmp	r1, #1
   2f3d8:	mov	r0, #0
   2f3dc:	ldrge	r3, [r2, #156]	; 0x9c
   2f3e0:	cmpge	r3, r1
   2f3e4:	bge	2f3ec <flatcc_builder_get_type_at@@Base+0x1c>
   2f3e8:	bx	lr
   2f3ec:	sub	r0, r1, r3
   2f3f0:	ldr	r1, [r2, #32]
   2f3f4:	add	r0, r0, r0, lsl #3
   2f3f8:	add	r0, r1, r0, lsl #2
   2f3fc:	ldrh	r0, [r0, #14]
   2f400:	bx	lr

0002f404 <flatcc_builder_get_direct_buffer@@Base>:
   2f404:	ldr	r2, [r0, #184]	; 0xb8
   2f408:	cmp	r2, #0
   2f40c:	beq	2f438 <flatcc_builder_get_direct_buffer@@Base+0x34>
   2f410:	ldr	r2, [r0, #188]	; 0xbc
   2f414:	ldr	r3, [r0, #192]	; 0xc0
   2f418:	cmp	r2, r3
   2f41c:	beq	2f450 <flatcc_builder_get_direct_buffer@@Base+0x4c>
   2f420:	cmp	r1, #0
   2f424:	moveq	r0, #0
   2f428:	bxeq	lr
   2f42c:	mov	r0, #0
   2f430:	str	r0, [r1]
   2f434:	bx	lr
   2f438:	cmp	r1, #0
   2f43c:	moveq	r0, #0
   2f440:	bxeq	lr
   2f444:	mov	r0, #0
   2f448:	str	r0, [r1]
   2f44c:	bx	lr
   2f450:	cmp	r1, #0
   2f454:	ldrne	r2, [r0, #212]	; 0xd4
   2f458:	strne	r2, [r1]
   2f45c:	ldr	r0, [r0, #196]	; 0xc4
   2f460:	bx	lr

0002f464 <flatcc_builder_copy_buffer@@Base>:
   2f464:	push	{fp, lr}
   2f468:	mov	fp, sp
   2f46c:	ldr	r3, [r0, #184]	; 0xb8
   2f470:	cmp	r3, #0
   2f474:	beq	2f4a8 <flatcc_builder_copy_buffer@@Base+0x44>
   2f478:	add	r0, r0, #188	; 0xbc
   2f47c:	bl	2fbbc <flatcc_emitter_copy_buffer@@Base>
   2f480:	cmp	r0, #0
   2f484:	popne	{fp, pc}
   2f488:	movw	r0, #21530	; 0x541a
   2f48c:	movw	r1, #20934	; 0x51c6
   2f490:	movw	r3, #24862	; 0x611e
   2f494:	movw	r2, #1926	; 0x786
   2f498:	movt	r0, #3
   2f49c:	movt	r1, #3
   2f4a0:	movt	r3, #3
   2f4a4:	bl	12bc4 <__assert_fail@plt>
   2f4a8:	mov	r0, #0
   2f4ac:	pop	{fp, pc}

0002f4b0 <flatcc_builder_finalize_buffer@@Base>:
   2f4b0:	push	{r4, r5, r6, sl, fp, lr}
   2f4b4:	add	fp, sp, #16
   2f4b8:	mov	r5, r0
   2f4bc:	ldr	r0, [r0, #136]	; 0x88
   2f4c0:	cmp	r1, #0
   2f4c4:	ldr	r2, [r5, #140]	; 0x8c
   2f4c8:	sub	r4, r2, r0
   2f4cc:	mov	r0, r4
   2f4d0:	strne	r4, [r1]
   2f4d4:	bl	12b10 <malloc@plt>
   2f4d8:	cmp	r0, #0
   2f4dc:	beq	2f52c <flatcc_builder_finalize_buffer@@Base+0x7c>
   2f4e0:	mov	r6, r0
   2f4e4:	ldr	r0, [r5, #184]	; 0xb8
   2f4e8:	cmp	r0, #0
   2f4ec:	beq	2f54c <flatcc_builder_finalize_buffer@@Base+0x9c>
   2f4f0:	add	r0, r5, #188	; 0xbc
   2f4f4:	mov	r1, r6
   2f4f8:	mov	r2, r4
   2f4fc:	bl	2fbbc <flatcc_emitter_copy_buffer@@Base>
   2f500:	cmp	r0, #0
   2f504:	movne	r0, r6
   2f508:	popne	{r4, r5, r6, sl, fp, pc}
   2f50c:	movw	r0, #21530	; 0x541a
   2f510:	movw	r1, #20934	; 0x51c6
   2f514:	movw	r3, #24862	; 0x611e
   2f518:	movw	r2, #1926	; 0x786
   2f51c:	movt	r0, #3
   2f520:	movt	r1, #3
   2f524:	movt	r3, #3
   2f528:	bl	12bc4 <__assert_fail@plt>
   2f52c:	movw	r0, #25452	; 0x636c
   2f530:	movw	r1, #20934	; 0x51c6
   2f534:	movw	r3, #24931	; 0x6163
   2f538:	movw	r2, #1944	; 0x798
   2f53c:	movt	r0, #3
   2f540:	movt	r1, #3
   2f544:	movt	r3, #3
   2f548:	bl	12bc4 <__assert_fail@plt>
   2f54c:	movw	r0, #25452	; 0x636c
   2f550:	movw	r1, #20934	; 0x51c6
   2f554:	movw	r3, #24931	; 0x6163
   2f558:	movw	r2, #1948	; 0x79c
   2f55c:	movt	r0, #3
   2f560:	movt	r1, #3
   2f564:	movt	r3, #3
   2f568:	bl	12bc4 <__assert_fail@plt>

0002f56c <flatcc_builder_finalize_aligned_buffer@@Base>:
   2f56c:	push	{r4, r5, r6, r7, fp, lr}
   2f570:	add	fp, sp, #16
   2f574:	sub	sp, sp, #8
   2f578:	mov	r5, r0
   2f57c:	mov	r4, r1
   2f580:	ldr	r0, [r0, #136]	; 0x88
   2f584:	ldr	r1, [r5, #140]	; 0x8c
   2f588:	cmp	r4, #0
   2f58c:	sub	r0, r1, r0
   2f590:	mov	r1, #0
   2f594:	strne	r0, [r4]
   2f598:	ldrh	r2, [r5, #128]	; 0x80
   2f59c:	str	r1, [sp, #4]
   2f5a0:	add	r0, r0, r2
   2f5a4:	cmp	r2, #4
   2f5a8:	mov	r1, r2
   2f5ac:	rsb	r2, r2, #0
   2f5b0:	sub	r0, r0, #1
   2f5b4:	movls	r1, #4
   2f5b8:	and	r7, r0, r2
   2f5bc:	add	r0, sp, #4
   2f5c0:	mov	r2, r7
   2f5c4:	bl	12b58 <posix_memalign@plt>
   2f5c8:	ldr	r6, [sp, #4]
   2f5cc:	cmp	r0, #0
   2f5d0:	cmpne	r6, #0
   2f5d4:	bne	2f610 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   2f5d8:	cmp	r6, #0
   2f5dc:	beq	2f618 <flatcc_builder_finalize_aligned_buffer@@Base+0xac>
   2f5e0:	ldr	r0, [r5, #184]	; 0xb8
   2f5e4:	cmp	r0, #0
   2f5e8:	beq	2f610 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   2f5ec:	add	r0, r5, #188	; 0xbc
   2f5f0:	mov	r1, r6
   2f5f4:	mov	r2, r7
   2f5f8:	bl	2fbbc <flatcc_emitter_copy_buffer@@Base>
   2f5fc:	cmp	r0, #0
   2f600:	beq	2f630 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   2f604:	mov	r0, r6
   2f608:	sub	sp, fp, #16
   2f60c:	pop	{r4, r5, r6, r7, fp, pc}
   2f610:	mov	r0, r6
   2f614:	bl	12aa4 <free@plt>
   2f618:	mov	r6, #0
   2f61c:	cmp	r4, #0
   2f620:	strne	r6, [r4]
   2f624:	mov	r0, r6
   2f628:	sub	sp, fp, #16
   2f62c:	pop	{r4, r5, r6, r7, fp, pc}
   2f630:	movw	r0, #21530	; 0x541a
   2f634:	movw	r1, #20934	; 0x51c6
   2f638:	movw	r3, #24862	; 0x611e
   2f63c:	movw	r2, #1926	; 0x786
   2f640:	movt	r0, #3
   2f644:	movt	r1, #3
   2f648:	movt	r3, #3
   2f64c:	bl	12bc4 <__assert_fail@plt>

0002f650 <flatcc_builder_aligned_alloc@@Base>:
   2f650:	push	{fp, lr}
   2f654:	mov	fp, sp
   2f658:	sub	sp, sp, #8
   2f65c:	mov	r2, r1
   2f660:	mov	r1, r0
   2f664:	mov	r0, #0
   2f668:	cmp	r1, #4
   2f66c:	str	r0, [sp, #4]
   2f670:	add	r0, sp, #4
   2f674:	movls	r1, #4
   2f678:	bl	12b58 <posix_memalign@plt>
   2f67c:	mov	r1, r0
   2f680:	ldr	r0, [sp, #4]
   2f684:	cmp	r1, #0
   2f688:	cmpne	r0, #0
   2f68c:	bne	2f698 <flatcc_builder_aligned_alloc@@Base+0x48>
   2f690:	mov	sp, fp
   2f694:	pop	{fp, pc}
   2f698:	bl	12aa4 <free@plt>
   2f69c:	mov	r0, #0
   2f6a0:	str	r0, [sp, #4]
   2f6a4:	mov	sp, fp
   2f6a8:	pop	{fp, pc}

0002f6ac <flatcc_builder_aligned_free@@Base>:
   2f6ac:	b	12aa4 <free@plt>

0002f6b0 <flatcc_builder_get_emit_context@@Base>:
   2f6b0:	ldr	r0, [r0, #36]	; 0x24
   2f6b4:	bx	lr

0002f6b8 <flatcc_emitter_recycle_page@@Base>:
   2f6b8:	ldr	r3, [r0]
   2f6bc:	mov	r2, r0
   2f6c0:	mvn	r0, #0
   2f6c4:	cmp	r3, r1
   2f6c8:	ldrne	r2, [r2, #4]
   2f6cc:	cmpne	r2, r1
   2f6d0:	bne	2f6d8 <flatcc_emitter_recycle_page@@Base+0x20>
   2f6d4:	bx	lr
   2f6d8:	ldr	r0, [r1, #2944]	; 0xb80
   2f6dc:	ldr	r2, [r1, #2948]	; 0xb84
   2f6e0:	str	r2, [r0, #2948]	; 0xb84
   2f6e4:	ldr	r2, [r1, #2948]	; 0xb84
   2f6e8:	str	r0, [r2, #2944]	; 0xb80
   2f6ec:	ldr	r0, [r3, #2948]	; 0xb84
   2f6f0:	str	r3, [r1, #2944]	; 0xb80
   2f6f4:	str	r0, [r1, #2948]	; 0xb84
   2f6f8:	str	r1, [r0, #2944]	; 0xb80
   2f6fc:	ldr	r0, [r1, #2944]	; 0xb80
   2f700:	str	r1, [r0, #2948]	; 0xb84
   2f704:	mov	r0, #0
   2f708:	bx	lr

0002f70c <flatcc_emitter_reset@@Base>:
   2f70c:	push	{r4, sl, fp, lr}
   2f710:	add	fp, sp, #8
   2f714:	ldr	r1, [r0]
   2f718:	cmp	r1, #0
   2f71c:	beq	2f7d4 <flatcc_emitter_reset@@Base+0xc8>
   2f720:	mov	r4, r0
   2f724:	add	r2, r1, #1472	; 0x5c0
   2f728:	mov	r0, #1472	; 0x5c0
   2f72c:	mov	r3, #0
   2f730:	stmib	r4, {r1, r2}
   2f734:	str	r0, [r4, #12]
   2f738:	str	r2, [r4, #16]
   2f73c:	str	r0, [r4, #20]
   2f740:	movw	r0, #64064	; 0xfa40
   2f744:	movt	r0, #65535	; 0xffff
   2f748:	str	r0, [r1, #2952]	; 0xb88
   2f74c:	ldr	r2, [r4, #32]
   2f750:	ldr	r0, [r4, #24]
   2f754:	cmp	r2, #0
   2f758:	moveq	r2, r0
   2f75c:	streq	r0, [r4, #32]
   2f760:	str	r3, [r4, #24]
   2f764:	add	r2, r2, r2, lsl #1
   2f768:	lsr	r2, r2, #2
   2f76c:	add	r0, r2, r0, lsr #2
   2f770:	str	r0, [r4, #32]
   2f774:	ldr	r2, [r4, #28]
   2f778:	cmp	r2, r0, lsl #1
   2f77c:	bls	2f7d4 <flatcc_emitter_reset@@Base+0xc8>
   2f780:	mov	r2, r1
   2f784:	ldr	r0, [r2, #2944]!	; 0xb80
   2f788:	cmp	r0, r1
   2f78c:	beq	2f7d4 <flatcc_emitter_reset@@Base+0xc8>
   2f790:	ldr	r3, [r0, #2944]	; 0xb80
   2f794:	str	r3, [r2]
   2f798:	ldr	r2, [r0, #2944]	; 0xb80
   2f79c:	str	r1, [r2, #2948]	; 0xb84
   2f7a0:	bl	12aa4 <free@plt>
   2f7a4:	ldr	r0, [r4, #28]
   2f7a8:	ldr	r1, [r4, #32]
   2f7ac:	sub	r0, r0, #2944	; 0xb80
   2f7b0:	cmp	r0, r1, lsl #1
   2f7b4:	str	r0, [r4, #28]
   2f7b8:	popls	{r4, sl, fp, pc}
   2f7bc:	ldr	r1, [r4, #4]
   2f7c0:	ldr	r3, [r4]
   2f7c4:	mov	r2, r1
   2f7c8:	ldr	r0, [r2, #2944]!	; 0xb80
   2f7cc:	cmp	r0, r3
   2f7d0:	bne	2f790 <flatcc_emitter_reset@@Base+0x84>
   2f7d4:	pop	{r4, sl, fp, pc}

0002f7d8 <flatcc_emitter_clear@@Base>:
   2f7d8:	push	{r4, r5, r6, sl, fp, lr}
   2f7dc:	add	fp, sp, #16
   2f7e0:	ldr	r5, [r0]
   2f7e4:	cmp	r5, #0
   2f7e8:	popeq	{r4, r5, r6, sl, fp, pc}
   2f7ec:	mov	r4, r0
   2f7f0:	ldr	r0, [r5, #2948]	; 0xb84
   2f7f4:	mov	r6, #0
   2f7f8:	str	r6, [r0, #2944]	; 0xb80
   2f7fc:	ldr	r0, [r5, #2944]	; 0xb80
   2f800:	cmp	r0, #0
   2f804:	beq	2f820 <flatcc_emitter_clear@@Base+0x48>
   2f808:	mov	r5, r0
   2f80c:	ldr	r0, [r0, #2948]	; 0xb84
   2f810:	bl	12aa4 <free@plt>
   2f814:	ldr	r0, [r5, #2944]	; 0xb80
   2f818:	cmp	r0, #0
   2f81c:	bne	2f808 <flatcc_emitter_clear@@Base+0x30>
   2f820:	mov	r0, r5
   2f824:	bl	12aa4 <free@plt>
   2f828:	vmov.i32	q8, #0	; 0x00000000
   2f82c:	add	r0, r4, #16
   2f830:	vst1.32	{d16-d17}, [r0]
   2f834:	mov	r0, #32
   2f838:	vst1.32	{d16-d17}, [r4], r0
   2f83c:	str	r6, [r4]
   2f840:	pop	{r4, r5, r6, sl, fp, pc}

0002f844 <flatcc_emitter@@Base>:
   2f844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f848:	add	fp, sp, #28
   2f84c:	sub	sp, sp, #4
   2f850:	mov	r6, r0
   2f854:	mov	r7, r1
   2f858:	ldr	r0, [r0, #24]
   2f85c:	ldr	r1, [fp, #8]
   2f860:	mov	r4, r2
   2f864:	cmn	r3, #1
   2f868:	mov	r9, r6
   2f86c:	add	r0, r0, r1
   2f870:	str	r0, [r6, #24]
   2f874:	ble	2f9c0 <flatcc_emitter@@Base+0x17c>
   2f878:	ldr	r0, [r9, #20]!
   2f87c:	cmp	r0, r1
   2f880:	bcs	2fb40 <flatcc_emitter@@Base+0x2fc>
   2f884:	mov	r8, #0
   2f888:	cmp	r4, #0
   2f88c:	beq	2fba0 <flatcc_emitter@@Base+0x35c>
   2f890:	movw	sl, #64064	; 0xfa40
   2f894:	movt	sl, #65535	; 0xffff
   2f898:	ldr	r8, [r7, #4]
   2f89c:	cmp	r8, #0
   2f8a0:	beq	2f9a4 <flatcc_emitter@@Base+0x160>
   2f8a4:	ldr	r9, [r7]
   2f8a8:	cmp	r8, r0
   2f8ac:	mov	r5, r8
   2f8b0:	bls	2f970 <flatcc_emitter@@Base+0x12c>
   2f8b4:	mov	r5, r0
   2f8b8:	cmp	r5, #0
   2f8bc:	bne	2f970 <flatcc_emitter@@Base+0x12c>
   2f8c0:	ldr	r5, [r6, #4]
   2f8c4:	cmp	r5, #0
   2f8c8:	beq	2f8dc <flatcc_emitter@@Base+0x98>
   2f8cc:	ldr	r0, [r5, #2944]	; 0xb80
   2f8d0:	ldr	r1, [r6]
   2f8d4:	cmp	r0, r1
   2f8d8:	bne	2f914 <flatcc_emitter@@Base+0xd0>
   2f8dc:	movw	r0, #2956	; 0xb8c
   2f8e0:	bl	12b10 <malloc@plt>
   2f8e4:	cmp	r0, #0
   2f8e8:	beq	2fb50 <flatcc_emitter@@Base+0x30c>
   2f8ec:	ldr	r1, [r6, #28]
   2f8f0:	cmp	r5, #0
   2f8f4:	add	r1, r1, #2944	; 0xb80
   2f8f8:	str	r1, [r6, #28]
   2f8fc:	beq	2f940 <flatcc_emitter@@Base+0xfc>
   2f900:	ldr	r1, [r6]
   2f904:	str	r1, [r0, #2944]	; 0xb80
   2f908:	str	r5, [r0, #2948]	; 0xb84
   2f90c:	str	r0, [r1, #2948]	; 0xb84
   2f910:	str	r0, [r5, #2944]	; 0xb80
   2f914:	mov	r5, #2944	; 0xb80
   2f918:	str	r0, [r6, #4]
   2f91c:	str	r0, [r6, #16]
   2f920:	str	r5, [r6, #20]
   2f924:	ldr	r1, [r0, #2948]	; 0xb84
   2f928:	ldr	r1, [r1, #2952]	; 0xb88
   2f92c:	add	r1, r1, #2944	; 0xb80
   2f930:	str	r1, [r0, #2952]	; 0xb88
   2f934:	cmp	r8, r5
   2f938:	bhi	2f8b8 <flatcc_emitter@@Base+0x74>
   2f93c:	b	2f96c <flatcc_emitter@@Base+0x128>
   2f940:	add	r1, r0, #1472	; 0x5c0
   2f944:	mov	r5, #1472	; 0x5c0
   2f948:	str	r0, [r6]
   2f94c:	stmib	r6, {r0, r1, r5}
   2f950:	str	r1, [r6, #16]
   2f954:	str	r5, [r6, #20]
   2f958:	str	r0, [r0, #2944]	; 0xb80
   2f95c:	str	r0, [r0, #2948]	; 0xb84
   2f960:	str	sl, [r0, #2952]	; 0xb88
   2f964:	cmp	r8, r5
   2f968:	bhi	2f8b8 <flatcc_emitter@@Base+0x74>
   2f96c:	mov	r5, r8
   2f970:	ldr	r0, [r6, #16]
   2f974:	mov	r1, r9
   2f978:	mov	r2, r5
   2f97c:	bl	12ab0 <memcpy@plt>
   2f980:	ldr	r0, [r6, #16]
   2f984:	ldr	r1, [r6, #20]
   2f988:	add	r9, r9, r5
   2f98c:	subs	r8, r8, r5
   2f990:	add	r2, r0, r5
   2f994:	sub	r0, r1, r5
   2f998:	str	r2, [r6, #16]
   2f99c:	str	r0, [r6, #20]
   2f9a0:	bne	2f8a8 <flatcc_emitter@@Base+0x64>
   2f9a4:	subs	r4, r4, #1
   2f9a8:	add	r7, r7, #8
   2f9ac:	bne	2f898 <flatcc_emitter@@Base+0x54>
   2f9b0:	mov	r8, #0
   2f9b4:	mov	r0, r8
   2f9b8:	sub	sp, fp, #28
   2f9bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f9c0:	ldr	r0, [r9, #12]!
   2f9c4:	cmp	r0, r1
   2f9c8:	bcs	2fb60 <flatcc_emitter@@Base+0x31c>
   2f9cc:	mov	r8, #0
   2f9d0:	cmp	r4, #0
   2f9d4:	beq	2fba0 <flatcc_emitter@@Base+0x35c>
   2f9d8:	add	r0, r7, r4, lsl #3
   2f9dc:	movw	sl, #2952	; 0xb88
   2f9e0:	ldr	r8, [r0, #-4]
   2f9e4:	sub	r1, r0, #8
   2f9e8:	str	r1, [sp]
   2f9ec:	cmp	r8, #0
   2f9f0:	beq	2fb24 <flatcc_emitter@@Base+0x2e0>
   2f9f4:	ldr	r0, [sp]
   2f9f8:	ldr	r0, [r0]
   2f9fc:	add	r7, r0, r8
   2fa00:	ldr	r1, [r9]
   2fa04:	cmp	r8, r1
   2fa08:	bhi	2fa38 <flatcc_emitter@@Base+0x1f4>
   2fa0c:	b	2faf4 <flatcc_emitter@@Base+0x2b0>
   2fa10:	add	r3, r0, #2944	; 0xb80
   2fa14:	mov	r1, #2944	; 0xb80
   2fa18:	str	r3, [r6, #8]
   2fa1c:	str	r1, [r6, #12]
   2fa20:	ldr	r0, [r0, #2944]	; 0xb80
   2fa24:	ldr	r0, [r0, #2952]	; 0xb88
   2fa28:	sub	r0, r0, #2944	; 0xb80
   2fa2c:	str	r0, [r2]
   2fa30:	cmp	r8, r1
   2fa34:	bls	2faf4 <flatcc_emitter@@Base+0x2b0>
   2fa38:	cmp	r1, #0
   2fa3c:	mov	r5, r1
   2fa40:	bne	2faf8 <flatcc_emitter@@Base+0x2b4>
   2fa44:	ldr	r5, [r6]
   2fa48:	cmp	r5, #0
   2fa4c:	beq	2fa78 <flatcc_emitter@@Base+0x234>
   2fa50:	ldr	r0, [r5, #2948]	; 0xb84
   2fa54:	ldr	r1, [r6, #4]
   2fa58:	cmp	r0, r1
   2fa5c:	beq	2fa78 <flatcc_emitter@@Base+0x234>
   2fa60:	ldr	r1, [r5, #2952]	; 0xb88
   2fa64:	mov	r2, r0
   2fa68:	sub	r1, r1, #2944	; 0xb80
   2fa6c:	str	r1, [r2, #2952]!	; 0xb88
   2fa70:	str	r0, [r6]
   2fa74:	b	2fa10 <flatcc_emitter@@Base+0x1cc>
   2fa78:	movw	r0, #2956	; 0xb8c
   2fa7c:	bl	12b10 <malloc@plt>
   2fa80:	cmp	r0, #0
   2fa84:	beq	2fbac <flatcc_emitter@@Base+0x368>
   2fa88:	ldr	r1, [r6, #28]
   2fa8c:	cmp	r5, #0
   2fa90:	add	r1, r1, #2944	; 0xb80
   2fa94:	str	r1, [r6, #28]
   2fa98:	beq	2fabc <flatcc_emitter@@Base+0x278>
   2fa9c:	ldr	r1, [r6, #4]
   2faa0:	add	r2, r0, sl
   2faa4:	str	r5, [r0, #2944]	; 0xb80
   2faa8:	str	r1, [r0, #2948]	; 0xb84
   2faac:	str	r0, [r5, #2948]	; 0xb84
   2fab0:	str	r0, [r1, #2944]	; 0xb80
   2fab4:	str	r0, [r6]
   2fab8:	b	2fa10 <flatcc_emitter@@Base+0x1cc>
   2fabc:	add	r2, r0, #1472	; 0x5c0
   2fac0:	mov	r1, #1472	; 0x5c0
   2fac4:	str	r0, [r6]
   2fac8:	stmib	r6, {r0, r2}
   2facc:	str	r1, [r6, #12]
   2fad0:	str	r2, [r6, #16]
   2fad4:	movw	r2, #64064	; 0xfa40
   2fad8:	str	r1, [r6, #20]
   2fadc:	str	r0, [r0, #2944]	; 0xb80
   2fae0:	str	r0, [r0, #2948]	; 0xb84
   2fae4:	movt	r2, #65535	; 0xffff
   2fae8:	str	r2, [r0, #2952]	; 0xb88
   2faec:	cmp	r8, r1
   2faf0:	bhi	2fa38 <flatcc_emitter@@Base+0x1f4>
   2faf4:	mov	r5, r8
   2faf8:	sub	r0, r1, r5
   2fafc:	sub	r7, r7, r5
   2fb00:	mov	r2, r5
   2fb04:	str	r0, [r6, #12]
   2fb08:	mov	r1, r7
   2fb0c:	ldr	r0, [r6, #8]
   2fb10:	sub	r0, r0, r5
   2fb14:	str	r0, [r6, #8]
   2fb18:	bl	12ab0 <memcpy@plt>
   2fb1c:	subs	r8, r8, r5
   2fb20:	bne	2fa00 <flatcc_emitter@@Base+0x1bc>
   2fb24:	ldr	r0, [sp]
   2fb28:	subs	r4, r4, #1
   2fb2c:	bne	2f9e0 <flatcc_emitter@@Base+0x19c>
   2fb30:	mov	r8, #0
   2fb34:	mov	r0, r8
   2fb38:	sub	sp, fp, #28
   2fb3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb40:	ldr	r5, [r6, #16]
   2fb44:	add	r2, r5, r1
   2fb48:	str	r2, [r6, #16]
   2fb4c:	b	2fb6c <flatcc_emitter@@Base+0x328>
   2fb50:	mvn	r8, #0
   2fb54:	mov	r0, r8
   2fb58:	sub	sp, fp, #28
   2fb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb60:	ldr	r2, [r6, #8]
   2fb64:	sub	r5, r2, r1
   2fb68:	str	r5, [r6, #8]
   2fb6c:	sub	r0, r0, r1
   2fb70:	mov	r8, #0
   2fb74:	cmp	r4, #0
   2fb78:	str	r0, [r9]
   2fb7c:	beq	2fba0 <flatcc_emitter@@Base+0x35c>
   2fb80:	ldm	r7, {r1, r2}
   2fb84:	mov	r0, r5
   2fb88:	bl	12ab0 <memcpy@plt>
   2fb8c:	ldr	r0, [r7, #4]
   2fb90:	add	r7, r7, #8
   2fb94:	subs	r4, r4, #1
   2fb98:	add	r5, r5, r0
   2fb9c:	bne	2fb80 <flatcc_emitter@@Base+0x33c>
   2fba0:	mov	r0, r8
   2fba4:	sub	sp, fp, #28
   2fba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fbac:	mvn	r8, #0
   2fbb0:	mov	r0, r8
   2fbb4:	sub	sp, fp, #28
   2fbb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002fbbc <flatcc_emitter_copy_buffer@@Base>:
   2fbbc:	push	{r4, r5, r6, sl, fp, lr}
   2fbc0:	add	fp, sp, #16
   2fbc4:	mov	r3, r2
   2fbc8:	ldr	r2, [r0, #24]
   2fbcc:	mov	r5, #0
   2fbd0:	cmp	r2, r3
   2fbd4:	bhi	2fc5c <flatcc_emitter_copy_buffer@@Base+0xa0>
   2fbd8:	mov	r4, r0
   2fbdc:	ldr	r0, [r0]
   2fbe0:	cmp	r0, #0
   2fbe4:	beq	2fc5c <flatcc_emitter_copy_buffer@@Base+0xa0>
   2fbe8:	mov	r6, r1
   2fbec:	ldr	r1, [r4, #4]
   2fbf0:	cmp	r0, r1
   2fbf4:	beq	2fc64 <flatcc_emitter_copy_buffer@@Base+0xa8>
   2fbf8:	ldr	r0, [r4, #12]
   2fbfc:	ldr	r1, [r4, #8]
   2fc00:	rsb	r5, r0, #2944	; 0xb80
   2fc04:	mov	r0, r6
   2fc08:	mov	r2, r5
   2fc0c:	bl	12ab0 <memcpy@plt>
   2fc10:	ldm	r4, {r0, r1}
   2fc14:	add	r5, r6, r5
   2fc18:	ldr	r6, [r0, #2944]	; 0xb80
   2fc1c:	cmp	r6, r1
   2fc20:	beq	2fc48 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2fc24:	mov	r0, r5
   2fc28:	mov	r1, r6
   2fc2c:	mov	r2, #2944	; 0xb80
   2fc30:	bl	12ab0 <memcpy@plt>
   2fc34:	ldr	r6, [r6, #2944]	; 0xb80
   2fc38:	ldr	r0, [r4, #4]
   2fc3c:	add	r5, r5, #2944	; 0xb80
   2fc40:	cmp	r6, r0
   2fc44:	bne	2fc24 <flatcc_emitter_copy_buffer@@Base+0x68>
   2fc48:	ldr	r0, [r4, #20]
   2fc4c:	mov	r1, r6
   2fc50:	rsb	r2, r0, #2944	; 0xb80
   2fc54:	mov	r0, r5
   2fc58:	bl	12ab0 <memcpy@plt>
   2fc5c:	mov	r0, r5
   2fc60:	pop	{r4, r5, r6, sl, fp, pc}
   2fc64:	ldr	r1, [r4, #8]
   2fc68:	mov	r0, r6
   2fc6c:	bl	12ab0 <memcpy@plt>
   2fc70:	mov	r0, r6
   2fc74:	pop	{r4, r5, r6, sl, fp, pc}

0002fc78 <grisu3_diy_fp_encode_double@@Base>:
   2fc78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fc7c:	add	fp, sp, #28
   2fc80:	sub	sp, sp, #12
   2fc84:	ldr	lr, [fp, #8]
   2fc88:	orr	r7, r0, r1
   2fc8c:	cmp	lr, #0
   2fc90:	movwne	lr, #4
   2fc94:	cmp	r7, #0
   2fc98:	beq	30090 <grisu3_diy_fp_encode_double@@Base+0x418>
   2fc9c:	mov	ip, #0
   2fca0:	mov	r5, #0
   2fca4:	cmp	ip, r1, lsr #22
   2fca8:	bne	2fcc8 <grisu3_diy_fp_encode_double@@Base+0x50>
   2fcac:	mov	ip, #0
   2fcb0:	lsl	r1, r1, #10
   2fcb4:	sub	ip, ip, #10
   2fcb8:	orr	r1, r1, r0, lsr #22
   2fcbc:	lsl	r0, r0, #10
   2fcc0:	cmp	r1, #4194304	; 0x400000
   2fcc4:	bcc	2fcb0 <grisu3_diy_fp_encode_double@@Base+0x38>
   2fcc8:	sub	r6, r2, r3
   2fccc:	mvn	r2, #0
   2fcd0:	cmp	r1, #0
   2fcd4:	blt	2fcfc <grisu3_diy_fp_encode_double@@Base+0x84>
   2fcd8:	lsl	r1, r1, #1
   2fcdc:	lsl	r4, r0, #1
   2fce0:	sub	ip, ip, #1
   2fce4:	orr	r1, r1, r0, lsr #31
   2fce8:	subs	r0, r2, r0, lsl #1
   2fcec:	sbcs	r0, r2, r1
   2fcf0:	mov	r0, r4
   2fcf4:	blt	2fcd8 <grisu3_diy_fp_encode_double@@Base+0x60>
   2fcf8:	b	2fd00 <grisu3_diy_fp_encode_double@@Base+0x88>
   2fcfc:	mov	r4, r0
   2fd00:	cmn	r6, #348	; 0x15c
   2fd04:	blt	300b0 <grisu3_diy_fp_encode_double@@Base+0x438>
   2fd08:	cmp	r6, #348	; 0x15c
   2fd0c:	bge	300d0 <grisu3_diy_fp_encode_double@@Base+0x458>
   2fd10:	add	r0, r6, #348	; 0x15c
   2fd14:	movw	r9, #25712	; 0x6470
   2fd18:	asr	r5, r0, #31
   2fd1c:	movt	r9, #3
   2fd20:	add	r0, r0, r5, lsr #29
   2fd24:	mvn	r5, #15
   2fd28:	and	r0, r5, r0, lsl #1
   2fd2c:	ldr	r5, [r9, r0]!
   2fd30:	ldrsh	r0, [r9, #10]
   2fd34:	cmp	r6, r0
   2fd38:	blt	300f0 <grisu3_diy_fp_encode_double@@Base+0x478>
   2fd3c:	add	r7, r0, #8
   2fd40:	cmp	r7, r6
   2fd44:	ble	30110 <grisu3_diy_fp_encode_double@@Base+0x498>
   2fd48:	rsb	r7, ip, #0
   2fd4c:	cmp	r6, r0
   2fd50:	lsl	r8, lr, r7
   2fd54:	beq	2fde0 <grisu3_diy_fp_encode_double@@Base+0x168>
   2fd58:	mvn	r0, r0
   2fd5c:	str	r8, [sp, #4]
   2fd60:	str	r3, [sp, #8]
   2fd64:	add	sl, r6, r0
   2fd68:	cmp	sl, #7
   2fd6c:	bcs	30130 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   2fd70:	movw	r0, #25600	; 0x6400
   2fd74:	movt	r0, #3
   2fd78:	ldr	r7, [r0, sl, lsl #4]!
   2fd7c:	ldr	r8, [r0, #4]
   2fd80:	ldr	r0, [r0, #8]
   2fd84:	umull	lr, r6, r7, r1
   2fd88:	str	r0, [sp]
   2fd8c:	umull	r3, r0, r8, r4
   2fd90:	umaal	r6, r0, r8, r1
   2fd94:	umull	r1, r4, r7, r4
   2fd98:	ldr	r8, [sp, #4]
   2fd9c:	mov	r1, #0
   2fda0:	adds	r7, lr, r4
   2fda4:	adc	r1, r1, #0
   2fda8:	adds	r3, r7, r3
   2fdac:	adc	r1, r1, #0
   2fdb0:	adds	r3, r3, #-2147483648	; 0x80000000
   2fdb4:	adc	r1, r1, #0
   2fdb8:	adds	r4, r6, r1
   2fdbc:	adc	r1, r0, #0
   2fdc0:	ldr	r0, [sp, #8]
   2fdc4:	add	r0, r0, sl
   2fdc8:	add	r0, r0, #1
   2fdcc:	cmp	r0, #19
   2fdd0:	ldr	r0, [sp]
   2fdd4:	addgt	r8, r8, #4
   2fdd8:	add	r0, ip, r0
   2fddc:	add	ip, r0, #64	; 0x40
   2fde0:	ldr	r0, [r9, #4]
   2fde4:	umull	r3, r6, r4, r5
   2fde8:	mov	lr, #0
   2fdec:	umull	r3, r7, r1, r5
   2fdf0:	adds	r3, r3, r6
   2fdf4:	adc	r6, lr, #0
   2fdf8:	umull	r4, r5, r4, r0
   2fdfc:	adds	r3, r3, r4
   2fe00:	umaal	r7, r5, r1, r0
   2fe04:	adc	r4, r6, #0
   2fe08:	adds	r3, r3, #-2147483648	; 0x80000000
   2fe0c:	mov	r6, #9
   2fe10:	adc	r3, r4, #0
   2fe14:	adds	r4, r7, r3
   2fe18:	adc	r3, r5, #0
   2fe1c:	cmp	r8, #0
   2fe20:	orr	r0, r4, r3
   2fe24:	movweq	r6, #8
   2fe28:	cmp	r0, #0
   2fe2c:	beq	30090 <grisu3_diy_fp_encode_double@@Base+0x418>
   2fe30:	ldrsh	r0, [r9, #8]
   2fe34:	cmp	lr, r3, lsr #22
   2fe38:	add	r0, r0, ip
   2fe3c:	add	r5, r0, #64	; 0x40
   2fe40:	bne	2fe78 <grisu3_diy_fp_encode_double@@Base+0x200>
   2fe44:	mov	lr, #0
   2fe48:	mov	r1, r5
   2fe4c:	lsl	r0, r3, #10
   2fe50:	sub	r1, r1, #10
   2fe54:	orr	r3, r0, r4, lsr #22
   2fe58:	lsl	r4, r4, #10
   2fe5c:	cmp	r3, #4194304	; 0x400000
   2fe60:	bcc	2fe4c <grisu3_diy_fp_encode_double@@Base+0x1d4>
   2fe64:	subs	r0, r2, r4
   2fe68:	add	r7, r6, r8
   2fe6c:	sbcs	r0, r2, r3
   2fe70:	blt	2fe8c <grisu3_diy_fp_encode_double@@Base+0x214>
   2fe74:	b	2feb0 <grisu3_diy_fp_encode_double@@Base+0x238>
   2fe78:	mov	r1, r5
   2fe7c:	subs	r0, r2, r4
   2fe80:	add	r7, r6, r8
   2fe84:	sbcs	r0, r2, r3
   2fe88:	bge	2feb0 <grisu3_diy_fp_encode_double@@Base+0x238>
   2fe8c:	lsl	r0, r3, #1
   2fe90:	subs	r6, r2, r4, lsl #1
   2fe94:	sub	r1, r1, #1
   2fe98:	orr	r3, r0, r4, lsr #31
   2fe9c:	lsl	r0, r4, #1
   2fea0:	sbcs	r6, r2, r3
   2fea4:	mov	r4, r0
   2fea8:	blt	2fe8c <grisu3_diy_fp_encode_double@@Base+0x214>
   2feac:	b	2feb4 <grisu3_diy_fp_encode_double@@Base+0x23c>
   2feb0:	mov	r0, r4
   2feb4:	movw	ip, #64462	; 0xfbce
   2feb8:	sub	r2, r5, r1
   2febc:	mov	r5, #0
   2fec0:	movt	ip, #65535	; 0xffff
   2fec4:	lsl	lr, r7, r2
   2fec8:	sub	r2, ip, #1
   2fecc:	cmp	r1, r2
   2fed0:	bgt	2ff24 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   2fed4:	mvn	r2, #1136	; 0x470
   2fed8:	mov	r5, #64	; 0x40
   2fedc:	cmp	r1, r2
   2fee0:	blt	2fef0 <grisu3_diy_fp_encode_double@@Base+0x278>
   2fee4:	sub	r5, ip, r1
   2fee8:	cmp	r5, #61	; 0x3d
   2feec:	blt	2ff24 <grisu3_diy_fp_encode_double@@Base+0x2ac>
   2fef0:	sub	r2, r5, #62	; 0x3e
   2fef4:	mov	r4, #9
   2fef8:	add	lr, r4, lr, asr r2
   2fefc:	lsr	r0, r0, r2
   2ff00:	rsb	r4, r5, #94	; 0x5e
   2ff04:	add	r1, r2, r1
   2ff08:	orr	r0, r0, r3, lsl r4
   2ff0c:	sub	r4, r5, #94	; 0x5e
   2ff10:	mov	r5, #62	; 0x3e
   2ff14:	cmp	r4, #0
   2ff18:	lsrge	r0, r3, r4
   2ff1c:	lsr	r3, r3, r2
   2ff20:	movwge	r3, #0
   2ff24:	lsr	r2, r0, r5
   2ff28:	rsb	r4, r5, #32
   2ff2c:	lsr	r6, r3, r5
   2ff30:	add	r1, r1, r5
   2ff34:	orr	r2, r2, r3, lsl r4
   2ff38:	sub	r4, r5, #32
   2ff3c:	cmp	r4, #0
   2ff40:	lsrge	r2, r3, r4
   2ff44:	sub	r3, r5, #1
   2ff48:	mov	r4, #1
   2ff4c:	movwge	r6, #0
   2ff50:	lsl	r4, r4, r3
   2ff54:	sub	r3, r5, #33	; 0x21
   2ff58:	cmp	r3, #0
   2ff5c:	movwge	r4, #0
   2ff60:	add	sl, lr, r4, lsl #3
   2ff64:	cmp	r5, sl
   2ff68:	blt	2ff88 <grisu3_diy_fp_encode_double@@Base+0x310>
   2ff6c:	adds	r2, r2, #1
   2ff70:	adc	r6, r6, #0
   2ff74:	tst	r6, #2097152	; 0x200000
   2ff78:	beq	2ff88 <grisu3_diy_fp_encode_double@@Base+0x310>
   2ff7c:	lsrs	r6, r6, #1
   2ff80:	add	r1, r1, #1
   2ff84:	rrx	r2, r2
   2ff88:	and	r0, r4, r0
   2ff8c:	cmp	r6, #2097152	; 0x200000
   2ff90:	bcc	2ffb4 <grisu3_diy_fp_encode_double@@Base+0x33c>
   2ff94:	mov	r3, #0
   2ff98:	lsrs	r7, r6, #1
   2ff9c:	add	r1, r1, #1
   2ffa0:	rrx	r2, r2
   2ffa4:	cmp	r3, r6, lsr #22
   2ffa8:	mov	r6, r7
   2ffac:	bne	2ff98 <grisu3_diy_fp_encode_double@@Base+0x320>
   2ffb0:	b	2ffb8 <grisu3_diy_fp_encode_double@@Base+0x340>
   2ffb4:	mov	r7, r6
   2ffb8:	ldr	r8, [fp, #12]
   2ffbc:	lsl	r9, r4, #3
   2ffc0:	lsl	r0, r0, #3
   2ffc4:	vmov.i32	d16, #0	; 0x00000000
   2ffc8:	cmp	r1, ip
   2ffcc:	blt	30064 <grisu3_diy_fp_encode_double@@Base+0x3ec>
   2ffd0:	and	r3, r7, #1048576	; 0x100000
   2ffd4:	mov	r4, #1
   2ffd8:	cmp	r1, ip
   2ffdc:	eor	r5, r4, r3, lsr #20
   2ffe0:	beq	30024 <grisu3_diy_fp_encode_double@@Base+0x3ac>
   2ffe4:	cmp	r3, #0
   2ffe8:	bne	30024 <grisu3_diy_fp_encode_double@@Base+0x3ac>
   2ffec:	mov	r3, #1
   2fff0:	lsl	r4, r7, #1
   2fff4:	and	r7, r7, #524288	; 0x80000
   2fff8:	cmn	r1, #1072	; 0x430
   2fffc:	orr	r6, r4, r2, lsr #31
   30000:	eor	r5, r3, r7, lsr #19
   30004:	lsl	r2, r2, #1
   30008:	sub	r4, r1, #1
   3000c:	blt	3002c <grisu3_diy_fp_encode_double@@Base+0x3b4>
   30010:	cmp	r7, #0
   30014:	mov	r7, r6
   30018:	mov	r1, r4
   3001c:	beq	2fff0 <grisu3_diy_fp_encode_double@@Base+0x378>
   30020:	b	3002c <grisu3_diy_fp_encode_double@@Base+0x3b4>
   30024:	mov	r4, r1
   30028:	mov	r6, r7
   3002c:	cmp	r4, ip
   30030:	bne	30044 <grisu3_diy_fp_encode_double@@Base+0x3cc>
   30034:	mov	r1, #0
   30038:	cmp	r5, #0
   3003c:	mov	r3, #0
   30040:	bne	30054 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   30044:	movw	r1, #0
   30048:	movt	r1, #17200	; 0x4330
   3004c:	add	r3, r1, r4, lsl #20
   30050:	mov	r1, #0
   30054:	bfc	r6, #20, #12
   30058:	orr	r1, r1, r2
   3005c:	orr	r2, r3, r6
   30060:	vmov	d16, r1, r2
   30064:	cmp	r0, sl
   30068:	mov	r2, #0
   3006c:	sub	r3, r9, lr
   30070:	mov	r1, #0
   30074:	vstr	d16, [r8]
   30078:	movwge	r2, #1
   3007c:	cmp	r3, r0
   30080:	movwge	r1, #1
   30084:	orr	r0, r2, r1
   30088:	sub	sp, fp, #28
   3008c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30090:	movw	r0, #29131	; 0x71cb
   30094:	movw	r1, #29140	; 0x71d4
   30098:	movw	r3, #29226	; 0x722a
   3009c:	mov	r2, #260	; 0x104
   300a0:	movt	r0, #3
   300a4:	movt	r1, #3
   300a8:	movt	r3, #3
   300ac:	bl	12bc4 <__assert_fail@plt>
   300b0:	movw	r0, #29283	; 0x7263
   300b4:	movw	r1, #27784	; 0x6c88
   300b8:	movw	r3, #29314	; 0x7282
   300bc:	mov	r2, #80	; 0x50
   300c0:	movt	r0, #3
   300c4:	movt	r1, #3
   300c8:	movt	r3, #3
   300cc:	bl	12bc4 <__assert_fail@plt>
   300d0:	movw	r0, #29371	; 0x72bb
   300d4:	movw	r1, #27784	; 0x6c88
   300d8:	movw	r3, #29314	; 0x7282
   300dc:	mov	r2, #81	; 0x51
   300e0:	movt	r0, #3
   300e4:	movt	r1, #3
   300e8:	movt	r3, #3
   300ec:	bl	12bc4 <__assert_fail@plt>
   300f0:	movw	r0, #29414	; 0x72e6
   300f4:	movw	r1, #27784	; 0x6c88
   300f8:	movw	r3, #29314	; 0x7282
   300fc:	mov	r2, #88	; 0x58
   30100:	movt	r0, #3
   30104:	movt	r1, #3
   30108:	movt	r3, #3
   3010c:	bl	12bc4 <__assert_fail@plt>
   30110:	movw	r0, #29429	; 0x72f5
   30114:	movw	r1, #27784	; 0x6c88
   30118:	movw	r3, #29314	; 0x7282
   3011c:	mov	r2, #89	; 0x59
   30120:	movt	r0, #3
   30124:	movt	r1, #3
   30128:	movt	r3, #3
   3012c:	bl	12bc4 <__assert_fail@plt>
   30130:	movw	r0, #27756	; 0x6c6c
   30134:	movw	r1, #27784	; 0x6c88
   30138:	movw	r3, #27871	; 0x6cdf
   3013c:	mov	r2, #185	; 0xb9
   30140:	movt	r0, #3
   30144:	movt	r1, #3
   30148:	movt	r3, #3
   3014c:	bl	12bc4 <__assert_fail@plt>

00030150 <flatcc_json_parser_error_string@@Base>:
   30150:	cmp	r0, #34	; 0x22
   30154:	movwhi	r0, #28581	; 0x6fa5
   30158:	movthi	r0, #3
   3015c:	bxhi	lr
   30160:	movw	r1, #27616	; 0x6be0
   30164:	movt	r1, #3
   30168:	ldr	r0, [r1, r0, lsl #2]
   3016c:	bx	lr

00030170 <flatcc_json_parser_set_error@@Base>:
   30170:	mov	ip, r2
   30174:	ldr	r2, [r0, #24]
   30178:	cmp	r2, #0
   3017c:	beq	30188 <flatcc_json_parser_set_error@@Base+0x18>
   30180:	mov	r0, ip
   30184:	bx	lr
   30188:	str	r1, [r0, #36]	; 0x24
   3018c:	add	r1, r1, #1
   30190:	ldr	r2, [r0, #4]
   30194:	sub	r1, r1, r2
   30198:	str	r1, [r0, #20]
   3019c:	str	r3, [r0, #24]
   301a0:	mov	r0, ip
   301a4:	bx	lr

000301a8 <flatcc_json_parser_string_part@@Base>:
   301a8:	cmp	r1, r2
   301ac:	beq	301d8 <flatcc_json_parser_string_part@@Base+0x30>
   301b0:	ldrb	r3, [r1]
   301b4:	cmp	r3, #32
   301b8:	bcc	3020c <flatcc_json_parser_string_part@@Base+0x64>
   301bc:	cmp	r3, #34	; 0x22
   301c0:	cmpne	r3, #92	; 0x5c
   301c4:	beq	30204 <flatcc_json_parser_string_part@@Base+0x5c>
   301c8:	add	r1, r1, #1
   301cc:	cmp	r2, r1
   301d0:	bne	301b0 <flatcc_json_parser_string_part@@Base+0x8>
   301d4:	mov	r1, r2
   301d8:	ldr	r3, [r0, #24]
   301dc:	cmp	r3, #0
   301e0:	bne	30200 <flatcc_json_parser_string_part@@Base+0x58>
   301e4:	mov	ip, #20
   301e8:	str	r1, [r0, #36]	; 0x24
   301ec:	add	r1, r1, #1
   301f0:	ldr	r3, [r0, #4]
   301f4:	sub	r1, r1, r3
   301f8:	str	r1, [r0, #20]
   301fc:	str	ip, [r0, #24]
   30200:	mov	r1, r2
   30204:	mov	r0, r1
   30208:	bx	lr
   3020c:	ldr	r3, [r0, #24]
   30210:	cmp	r3, #0
   30214:	bne	30200 <flatcc_json_parser_string_part@@Base+0x58>
   30218:	mov	ip, #17
   3021c:	b	301e8 <flatcc_json_parser_string_part@@Base+0x40>

00030220 <flatcc_json_parser_space_ext@@Base>:
   30220:	mov	ip, r2
   30224:	cmp	r1, r2
   30228:	bne	30304 <flatcc_json_parser_space_ext@@Base+0xe4>
   3022c:	b	3032c <flatcc_json_parser_space_ext@@Base+0x10c>
   30230:	add	r1, r1, #1
   30234:	str	r1, [r0, #4]
   30238:	ldr	r2, [r0, #16]
   3023c:	add	r2, r2, #1
   30240:	str	r2, [r0, #16]
   30244:	cmp	r1, ip
   30248:	bne	3025c <flatcc_json_parser_space_ext@@Base+0x3c>
   3024c:	b	3032c <flatcc_json_parser_space_ext@@Base+0x10c>
   30250:	add	r1, r1, #1
   30254:	cmp	r1, ip
   30258:	beq	3032c <flatcc_json_parser_space_ext@@Base+0x10c>
   3025c:	ldrb	r3, [r1]
   30260:	cmp	r3, #32
   30264:	movhi	r0, r1
   30268:	bxhi	lr
   3026c:	sub	r3, r3, #9
   30270:	cmp	r3, #23
   30274:	bhi	30320 <flatcc_json_parser_space_ext@@Base+0x100>
   30278:	add	r2, pc, #0
   3027c:	ldr	pc, [r2, r3, lsl #2]
   30280:	andeq	r0, r3, r0, asr r2
   30284:	andeq	r0, r3, r0, lsr r2
   30288:	andeq	r0, r3, r0, lsr #6
   3028c:	andeq	r0, r3, r0, lsr #6
   30290:	andeq	r0, r3, r0, ror #5
   30294:	andeq	r0, r3, r0, lsr #6
   30298:	andeq	r0, r3, r0, lsr #6
   3029c:	andeq	r0, r3, r0, lsr #6
   302a0:	andeq	r0, r3, r0, lsr #6
   302a4:	andeq	r0, r3, r0, lsr #6
   302a8:	andeq	r0, r3, r0, lsr #6
   302ac:	andeq	r0, r3, r0, lsr #6
   302b0:	andeq	r0, r3, r0, lsr #6
   302b4:	andeq	r0, r3, r0, lsr #6
   302b8:	andeq	r0, r3, r0, lsr #6
   302bc:	andeq	r0, r3, r0, lsr #6
   302c0:	andeq	r0, r3, r0, lsr #6
   302c4:	andeq	r0, r3, r0, lsr #6
   302c8:	andeq	r0, r3, r0, lsr #6
   302cc:	andeq	r0, r3, r0, lsr #6
   302d0:	andeq	r0, r3, r0, lsr #6
   302d4:	andeq	r0, r3, r0, lsr #6
   302d8:	andeq	r0, r3, r0, lsr #6
   302dc:	andeq	r0, r3, r4, lsl r3
   302e0:	sub	r2, ip, r1
   302e4:	mov	r3, #0
   302e8:	cmp	r2, #2
   302ec:	ldrbge	r2, [r1, #1]
   302f0:	subge	r2, r2, #10
   302f4:	clzge	r2, r2
   302f8:	lsrge	r3, r2, #5
   302fc:	add	r1, r1, r3
   30300:	b	30230 <flatcc_json_parser_space_ext@@Base+0x10>
   30304:	ldrb	r3, [r1]
   30308:	cmp	r3, #32
   3030c:	bne	30244 <flatcc_json_parser_space_ext@@Base+0x24>
   30310:	add	r1, r1, #1
   30314:	cmp	r1, ip
   30318:	bne	30304 <flatcc_json_parser_space_ext@@Base+0xe4>
   3031c:	b	3032c <flatcc_json_parser_space_ext@@Base+0x10c>
   30320:	ldr	r2, [r0, #24]
   30324:	cmp	r2, #0
   30328:	beq	30334 <flatcc_json_parser_space_ext@@Base+0x114>
   3032c:	mov	r0, ip
   30330:	bx	lr
   30334:	str	r1, [r0, #36]	; 0x24
   30338:	add	r1, r1, #1
   3033c:	mov	r2, #5
   30340:	ldr	r3, [r0, #4]
   30344:	sub	r1, r1, r3
   30348:	str	r1, [r0, #20]
   3034c:	str	r2, [r0, #24]
   30350:	mov	r0, ip
   30354:	bx	lr

00030358 <flatcc_json_parser_string_escape@@Base>:
   30358:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3035c:	add	fp, sp, #24
   30360:	sub	r7, r2, r1
   30364:	cmp	r7, #2
   30368:	blt	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   3036c:	ldrb	r6, [r1]
   30370:	cmp	r6, #92	; 0x5c
   30374:	bne	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   30378:	ldrb	r6, [r1, #1]
   3037c:	sub	r6, r6, #34	; 0x22
   30380:	cmp	r6, #86	; 0x56
   30384:	bhi	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   30388:	add	r5, pc, #0
   3038c:	ldr	pc, [r5, r6, lsl #2]
   30390:	andeq	r0, r3, ip, ror #9
   30394:	andeq	r0, r3, r0, asr #11
   30398:	andeq	r0, r3, r0, asr #11
   3039c:	andeq	r0, r3, r0, asr #11
   303a0:	andeq	r0, r3, r0, asr #11
   303a4:	andeq	r0, r3, r0, asr #11
   303a8:	andeq	r0, r3, r0, asr #11
   303ac:	andeq	r0, r3, r0, asr #11
   303b0:	andeq	r0, r3, r0, asr #11
   303b4:	andeq	r0, r3, r0, asr #11
   303b8:	andeq	r0, r3, r0, asr #11
   303bc:	andeq	r0, r3, r0, asr #11
   303c0:	andeq	r0, r3, r0, asr #11
   303c4:	andeq	r0, r3, r0, lsl #10
   303c8:	andeq	r0, r3, r0, asr #11
   303cc:	andeq	r0, r3, r0, asr #11
   303d0:	andeq	r0, r3, r0, asr #11
   303d4:	andeq	r0, r3, r0, asr #11
   303d8:	andeq	r0, r3, r0, asr #11
   303dc:	andeq	r0, r3, r0, asr #11
   303e0:	andeq	r0, r3, r0, asr #11
   303e4:	andeq	r0, r3, r0, asr #11
   303e8:	andeq	r0, r3, r0, asr #11
   303ec:	andeq	r0, r3, r0, asr #11
   303f0:	andeq	r0, r3, r0, asr #11
   303f4:	andeq	r0, r3, r0, asr #11
   303f8:	andeq	r0, r3, r0, asr #11
   303fc:	andeq	r0, r3, r0, asr #11
   30400:	andeq	r0, r3, r0, asr #11
   30404:	andeq	r0, r3, r0, asr #11
   30408:	andeq	r0, r3, r0, asr #11
   3040c:	andeq	r0, r3, r0, asr #11
   30410:	andeq	r0, r3, r0, asr #11
   30414:	andeq	r0, r3, r0, asr #11
   30418:	andeq	r0, r3, r0, asr #11
   3041c:	andeq	r0, r3, r0, asr #11
   30420:	andeq	r0, r3, r0, asr #11
   30424:	andeq	r0, r3, r0, asr #11
   30428:	andeq	r0, r3, r0, asr #11
   3042c:	andeq	r0, r3, r0, asr #11
   30430:	andeq	r0, r3, r0, asr #11
   30434:	andeq	r0, r3, r0, asr #11
   30438:	andeq	r0, r3, r0, asr #11
   3043c:	andeq	r0, r3, r0, asr #11
   30440:	andeq	r0, r3, r0, asr #11
   30444:	andeq	r0, r3, r0, asr #11
   30448:	andeq	r0, r3, r0, asr #11
   3044c:	andeq	r0, r3, r0, asr #11
   30450:	andeq	r0, r3, r0, asr #11
   30454:	andeq	r0, r3, r0, asr #11
   30458:	andeq	r0, r3, r0, asr #11
   3045c:	andeq	r0, r3, r0, asr #11
   30460:	andeq	r0, r3, r0, asr #11
   30464:	andeq	r0, r3, r0, asr #11
   30468:	andeq	r0, r3, r0, asr #11
   3046c:	andeq	r0, r3, r0, asr #11
   30470:	andeq	r0, r3, r0, asr #11
   30474:	andeq	r0, r3, r0, asr #11
   30478:	andeq	r0, r3, r4, lsl r5
   3047c:	andeq	r0, r3, r0, asr #11
   30480:	andeq	r0, r3, r0, asr #11
   30484:	andeq	r0, r3, r0, asr #11
   30488:	andeq	r0, r3, r0, asr #11
   3048c:	andeq	r0, r3, r0, asr #11
   30490:	andeq	r0, r3, r8, lsr #10
   30494:	andeq	r0, r3, r0, asr #11
   30498:	andeq	r0, r3, r0, asr #11
   3049c:	andeq	r0, r3, r0, asr #11
   304a0:	andeq	r0, r3, ip, lsr r5
   304a4:	andeq	r0, r3, r0, asr #11
   304a8:	andeq	r0, r3, r0, asr #11
   304ac:	andeq	r0, r3, r0, asr #11
   304b0:	andeq	r0, r3, r0, asr #11
   304b4:	andeq	r0, r3, r0, asr #11
   304b8:	andeq	r0, r3, r0, asr #11
   304bc:	andeq	r0, r3, r0, asr #11
   304c0:	andeq	r0, r3, r0, asr r5
   304c4:	andeq	r0, r3, r0, asr #11
   304c8:	andeq	r0, r3, r0, asr #11
   304cc:	andeq	r0, r3, r0, asr #11
   304d0:	andeq	r0, r3, r4, ror #10
   304d4:	andeq	r0, r3, r0, asr #11
   304d8:	andeq	r0, r3, r8, ror r5
   304dc:	andeq	r0, r3, ip, lsl #11
   304e0:	andeq	r0, r3, r0, asr #11
   304e4:	andeq	r0, r3, r0, asr #11
   304e8:			; <UNDEFINED> instruction: 0x000305b0
   304ec:	movw	r0, #8705	; 0x2201
   304f0:	add	r2, r1, #2
   304f4:	strh	r0, [r3]
   304f8:	mov	r0, r2
   304fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30500:	movw	r0, #12033	; 0x2f01
   30504:	add	r2, r1, #2
   30508:	strh	r0, [r3]
   3050c:	mov	r0, r2
   30510:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30514:	movw	r0, #23553	; 0x5c01
   30518:	add	r2, r1, #2
   3051c:	strh	r0, [r3]
   30520:	mov	r0, r2
   30524:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30528:	movw	r0, #2049	; 0x801
   3052c:	add	r2, r1, #2
   30530:	strh	r0, [r3]
   30534:	mov	r0, r2
   30538:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3053c:	movw	r0, #3073	; 0xc01
   30540:	add	r2, r1, #2
   30544:	strh	r0, [r3]
   30548:	mov	r0, r2
   3054c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30550:	movw	r0, #2561	; 0xa01
   30554:	add	r2, r1, #2
   30558:	strh	r0, [r3]
   3055c:	mov	r0, r2
   30560:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30564:	movw	r0, #3329	; 0xd01
   30568:	add	r2, r1, #2
   3056c:	strh	r0, [r3]
   30570:	mov	r0, r2
   30574:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30578:	movw	r0, #2305	; 0x901
   3057c:	add	r2, r1, #2
   30580:	strh	r0, [r3]
   30584:	mov	r0, r2
   30588:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3058c:	cmp	r7, #5
   30590:	ble	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   30594:	ldrb	r7, [r1, #2]
   30598:	sub	r6, r7, #48	; 0x30
   3059c:	uxtb	r6, r6
   305a0:	cmp	r6, #9
   305a4:	bhi	3061c <flatcc_json_parser_string_escape@@Base+0x2c4>
   305a8:	lsl	ip, r7, #12
   305ac:	b	3063c <flatcc_json_parser_string_escape@@Base+0x2e4>
   305b0:	mov	r6, #1
   305b4:	cmp	r7, #3
   305b8:	strb	r6, [r3]
   305bc:	bgt	30600 <flatcc_json_parser_string_escape@@Base+0x2a8>
   305c0:	mov	r7, #0
   305c4:	strb	r7, [r3]
   305c8:	ldr	r3, [r0, #24]
   305cc:	cmp	r3, #0
   305d0:	beq	305dc <flatcc_json_parser_string_escape@@Base+0x284>
   305d4:	mov	r0, r2
   305d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   305dc:	str	r1, [r0, #36]	; 0x24
   305e0:	add	r1, r1, #1
   305e4:	mov	r3, #18
   305e8:	ldr	r7, [r0, #4]
   305ec:	sub	r1, r1, r7
   305f0:	str	r1, [r0, #20]
   305f4:	str	r3, [r0, #24]
   305f8:	mov	r0, r2
   305fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30600:	ldrb	r7, [r1, #2]
   30604:	sub	r6, r7, #48	; 0x30
   30608:	uxtb	r6, r6
   3060c:	cmp	r6, #9
   30610:	bhi	30658 <flatcc_json_parser_string_escape@@Base+0x300>
   30614:	lsl	r7, r7, #4
   30618:	b	30674 <flatcc_json_parser_string_escape@@Base+0x31c>
   3061c:	orr	r6, r7, #32
   30620:	sub	r6, r6, #97	; 0x61
   30624:	uxtb	r6, r6
   30628:	cmp	r6, #5
   3062c:	bhi	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   30630:	movw	r6, #36864	; 0x9000
   30634:	movt	r6, #65535	; 0xffff
   30638:	add	ip, r6, r7, lsl #12
   3063c:	ldrb	lr, [r1, #3]
   30640:	sub	r4, lr, #48	; 0x30
   30644:	uxtb	r4, r4
   30648:	cmp	r4, #10
   3064c:	bcs	306b4 <flatcc_json_parser_string_escape@@Base+0x35c>
   30650:	mov	r8, #53248	; 0xd000
   30654:	b	306cc <flatcc_json_parser_string_escape@@Base+0x374>
   30658:	orr	r6, r7, #32
   3065c:	sub	r6, r6, #97	; 0x61
   30660:	uxtb	r6, r6
   30664:	cmp	r6, #5
   30668:	bhi	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   3066c:	mvn	r6, #111	; 0x6f
   30670:	add	r7, r6, r7, lsl #4
   30674:	ldrb	r5, [r1, #3]
   30678:	sub	r6, r5, #48	; 0x30
   3067c:	uxtb	r4, r6
   30680:	cmp	r4, #10
   30684:	bcc	306a0 <flatcc_json_parser_string_escape@@Base+0x348>
   30688:	orr	r6, r5, #32
   3068c:	sub	r5, r6, #97	; 0x61
   30690:	uxtb	r5, r5
   30694:	cmp	r5, #5
   30698:	bhi	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   3069c:	sub	r6, r6, #87	; 0x57
   306a0:	orr	r0, r6, r7
   306a4:	add	r2, r1, #4
   306a8:	strb	r0, [r3, #1]
   306ac:	mov	r0, r2
   306b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   306b4:	orr	lr, lr, #32
   306b8:	mov	r8, #43264	; 0xa900
   306bc:	sub	r4, lr, #97	; 0x61
   306c0:	uxtb	r4, r4
   306c4:	cmp	r4, #6
   306c8:	bcs	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   306cc:	ldrb	r5, [r1, #4]
   306d0:	sub	r4, r5, #48	; 0x30
   306d4:	uxtb	r4, r4
   306d8:	cmp	r4, #10
   306dc:	bcs	306e8 <flatcc_json_parser_string_escape@@Base+0x390>
   306e0:	mov	r9, #64768	; 0xfd00
   306e4:	b	30700 <flatcc_json_parser_string_escape@@Base+0x3a8>
   306e8:	orr	r5, r5, #32
   306ec:	movw	r9, #64144	; 0xfa90
   306f0:	sub	r4, r5, #97	; 0x61
   306f4:	uxtb	r4, r4
   306f8:	cmp	r4, #6
   306fc:	bcs	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   30700:	ldrb	r7, [r1, #5]
   30704:	sub	r4, r7, #48	; 0x30
   30708:	uxtb	r4, r4
   3070c:	cmp	r4, #10
   30710:	bcs	30720 <flatcc_json_parser_string_escape@@Base+0x3c8>
   30714:	mvn	r0, #86	; 0x56
   30718:	add	r4, r0, #39	; 0x27
   3071c:	b	30738 <flatcc_json_parser_string_escape@@Base+0x3e0>
   30720:	orr	r7, r7, #32
   30724:	movw	r4, #65449	; 0xffa9
   30728:	sub	r6, r7, #97	; 0x61
   3072c:	uxtb	r6, r6
   30730:	cmp	r6, #6
   30734:	bcs	305c0 <flatcc_json_parser_string_escape@@Base+0x268>
   30738:	add	r0, r8, lr, lsl #8
   3073c:	add	r2, r9, r5, lsl #4
   30740:	orr	r0, r0, ip
   30744:	orr	r0, r0, r2
   30748:	add	r2, r4, r7
   3074c:	orr	r0, r0, r2
   30750:	uxth	r7, r0
   30754:	cmp	r7, #127	; 0x7f
   30758:	bhi	30774 <flatcc_json_parser_string_escape@@Base+0x41c>
   3075c:	mov	r2, #1
   30760:	strb	r2, [r3]
   30764:	strb	r0, [r3, r2]
   30768:	add	r2, r1, #6
   3076c:	mov	r0, r2
   30770:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30774:	and	r2, r0, #63488	; 0xf800
   30778:	mov	r6, #0
   3077c:	cmp	r6, r2, lsr #11
   30780:	bne	3079c <flatcc_json_parser_string_escape@@Base+0x444>
   30784:	mov	r7, #192	; 0xc0
   30788:	mov	r2, #2
   3078c:	orr	r7, r7, r0, lsr #6
   30790:	strb	r2, [r3]
   30794:	strb	r7, [r3, #1]
   30798:	b	307c0 <flatcc_json_parser_string_escape@@Base+0x468>
   3079c:	mov	r6, #224	; 0xe0
   307a0:	mov	r2, #3
   307a4:	orr	r6, r6, r7, lsr #12
   307a8:	strb	r2, [r3]
   307ac:	lsr	r7, r7, #6
   307b0:	strb	r6, [r3, #1]
   307b4:	mov	r6, #2
   307b8:	bfi	r7, r6, #6, #26
   307bc:	strb	r7, [r3, #2]
   307c0:	mvn	r7, #-67108863	; 0xfc000001
   307c4:	bfi	r0, r7, #6, #26
   307c8:	strb	r0, [r3, r2]
   307cc:	add	r2, r1, #6
   307d0:	mov	r0, r2
   307d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000307d8 <flatcc_json_parser_skip_constant@@Base>:
   307d8:	push	{r4, r5, r6, sl, fp, lr}
   307dc:	add	fp, sp, #16
   307e0:	cmp	r1, r2
   307e4:	moveq	r0, r1
   307e8:	popeq	{r4, r5, r6, sl, fp, pc}
   307ec:	mov	r4, r2
   307f0:	mov	r5, r0
   307f4:	ldrsb	r0, [r1]
   307f8:	mov	r6, r1
   307fc:	cmp	r0, #0
   30800:	bge	30824 <flatcc_json_parser_skip_constant@@Base+0x4c>
   30804:	b	30858 <flatcc_json_parser_skip_constant@@Base+0x80>
   30808:	cmp	r1, r4
   3080c:	moveq	r0, r4
   30810:	popeq	{r4, r5, r6, sl, fp, pc}
   30814:	ldrsb	r0, [r1]
   30818:	mov	r6, r1
   3081c:	cmp	r0, #0
   30820:	blt	30858 <flatcc_json_parser_skip_constant@@Base+0x80>
   30824:	uxtb	r0, r0
   30828:	cmp	r0, #95	; 0x5f
   3082c:	cmpne	r0, #46	; 0x2e
   30830:	beq	30858 <flatcc_json_parser_skip_constant@@Base+0x80>
   30834:	sub	r1, r0, #48	; 0x30
   30838:	uxtb	r1, r1
   3083c:	cmp	r1, #9
   30840:	bls	30858 <flatcc_json_parser_skip_constant@@Base+0x80>
   30844:	orr	r1, r0, #32
   30848:	sub	r1, r1, #97	; 0x61
   3084c:	uxtb	r1, r1
   30850:	cmp	r1, #25
   30854:	bhi	30860 <flatcc_json_parser_skip_constant@@Base+0x88>
   30858:	add	r1, r6, #1
   3085c:	b	30808 <flatcc_json_parser_skip_constant@@Base+0x30>
   30860:	sub	r1, r4, r6
   30864:	cmp	r1, #2
   30868:	blt	30888 <flatcc_json_parser_skip_constant@@Base+0xb0>
   3086c:	cmp	r0, #32
   30870:	bhi	308a4 <flatcc_json_parser_skip_constant@@Base+0xcc>
   30874:	bne	30888 <flatcc_json_parser_skip_constant@@Base+0xb0>
   30878:	mov	r1, r6
   3087c:	ldrb	r0, [r1, #1]!
   30880:	cmp	r0, #32
   30884:	bhi	30808 <flatcc_json_parser_skip_constant@@Base+0x30>
   30888:	mov	r0, r5
   3088c:	mov	r1, r6
   30890:	mov	r2, r4
   30894:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   30898:	mov	r1, r0
   3089c:	cmp	r0, r6
   308a0:	bne	30808 <flatcc_json_parser_skip_constant@@Base+0x30>
   308a4:	mov	r0, r6
   308a8:	pop	{r4, r5, r6, sl, fp, pc}

000308ac <flatcc_json_parser_match_constant@@Base>:
   308ac:	push	{r4, r5, r6, r7, fp, lr}
   308b0:	add	fp, sp, #16
   308b4:	ldr	r7, [fp, #8]
   308b8:	mov	r4, r1
   308bc:	sub	r1, r2, r1
   308c0:	cmp	r1, r3
   308c4:	ble	309d8 <flatcc_json_parser_match_constant@@Base+0x12c>
   308c8:	ldr	r1, [r0, #12]
   308cc:	mov	r5, r2
   308d0:	add	r6, r4, r3
   308d4:	cmp	r1, #0
   308d8:	beq	30964 <flatcc_json_parser_match_constant@@Base+0xb8>
   308dc:	sub	r1, r5, r6
   308e0:	cmp	r1, #2
   308e4:	blt	3090c <flatcc_json_parser_match_constant@@Base+0x60>
   308e8:	ldrb	r1, [r6]
   308ec:	mov	r2, r6
   308f0:	cmp	r1, #32
   308f4:	bhi	3091c <flatcc_json_parser_match_constant@@Base+0x70>
   308f8:	bne	3090c <flatcc_json_parser_match_constant@@Base+0x60>
   308fc:	mov	r2, r6
   30900:	ldrb	r1, [r2, #1]!
   30904:	cmp	r1, #32
   30908:	bhi	3091c <flatcc_json_parser_match_constant@@Base+0x70>
   3090c:	mov	r1, r6
   30910:	mov	r2, r5
   30914:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   30918:	mov	r2, r0
   3091c:	cmp	r2, r5
   30920:	beq	309ec <flatcc_json_parser_match_constant@@Base+0x140>
   30924:	cmp	r2, r6
   30928:	beq	309fc <flatcc_json_parser_match_constant@@Base+0x150>
   3092c:	ldrsb	r0, [r2]
   30930:	cmp	r0, #95	; 0x5f
   30934:	beq	30954 <flatcc_json_parser_match_constant@@Base+0xa8>
   30938:	cmn	r0, #1
   3093c:	ble	30954 <flatcc_json_parser_match_constant@@Base+0xa8>
   30940:	orr	r0, r0, #32
   30944:	sub	r0, r0, #97	; 0x61
   30948:	uxtb	r0, r0
   3094c:	cmp	r0, #25
   30950:	bhi	309fc <flatcc_json_parser_match_constant@@Base+0x150>
   30954:	mov	r0, #1
   30958:	str	r0, [r7]
   3095c:	mov	r0, r2
   30960:	pop	{r4, r5, r6, r7, fp, pc}
   30964:	ldrb	r1, [r6]
   30968:	cmp	r1, #92	; 0x5c
   3096c:	beq	30a24 <flatcc_json_parser_match_constant@@Base+0x178>
   30970:	cmp	r1, #34	; 0x22
   30974:	beq	309a8 <flatcc_json_parser_match_constant@@Base+0xfc>
   30978:	cmp	r1, #32
   3097c:	bne	309d8 <flatcc_json_parser_match_constant@@Base+0x12c>
   30980:	add	r1, r4, r3
   30984:	add	r1, r1, #1
   30988:	cmp	r5, r1
   3098c:	beq	309ec <flatcc_json_parser_match_constant@@Base+0x140>
   30990:	ldrb	r2, [r1], #1
   30994:	cmp	r2, #32
   30998:	beq	30988 <flatcc_json_parser_match_constant@@Base+0xdc>
   3099c:	cmp	r2, #34	; 0x22
   309a0:	bne	30a8c <flatcc_json_parser_match_constant@@Base+0x1e0>
   309a4:	sub	r6, r1, #1
   309a8:	mvn	r2, r6
   309ac:	add	r1, r6, #1
   309b0:	cmp	r2, #2
   309b4:	blt	30a70 <flatcc_json_parser_match_constant@@Base+0x1c4>
   309b8:	ldrb	r2, [r1]
   309bc:	cmp	r2, #32
   309c0:	bls	30a5c <flatcc_json_parser_match_constant@@Base+0x1b0>
   309c4:	mov	r2, r1
   309c8:	mov	r0, #0
   309cc:	str	r0, [r7]
   309d0:	mov	r0, r2
   309d4:	pop	{r4, r5, r6, r7, fp, pc}
   309d8:	mov	r0, #0
   309dc:	mov	r2, r4
   309e0:	str	r0, [r7]
   309e4:	mov	r0, r2
   309e8:	pop	{r4, r5, r6, r7, fp, pc}
   309ec:	mov	r0, #0
   309f0:	str	r0, [r7]
   309f4:	mov	r0, r5
   309f8:	pop	{r4, r5, r6, r7, fp, pc}
   309fc:	mov	r0, #0
   30a00:	str	r0, [r7]
   30a04:	ldrb	r0, [r2]
   30a08:	cmp	r0, #44	; 0x2c
   30a0c:	cmpne	r0, #93	; 0x5d
   30a10:	beq	309e4 <flatcc_json_parser_match_constant@@Base+0x138>
   30a14:	cmp	r0, #125	; 0x7d
   30a18:	movne	r2, r4
   30a1c:	mov	r0, r2
   30a20:	pop	{r4, r5, r6, r7, fp, pc}
   30a24:	mov	r1, #0
   30a28:	str	r1, [r7]
   30a2c:	ldr	r1, [r0, #24]
   30a30:	cmp	r1, #0
   30a34:	bne	309f4 <flatcc_json_parser_match_constant@@Base+0x148>
   30a38:	str	r6, [r0, #36]	; 0x24
   30a3c:	add	r3, r6, #1
   30a40:	mov	r1, #18
   30a44:	ldr	r2, [r0, #4]
   30a48:	sub	r2, r3, r2
   30a4c:	str	r2, [r0, #20]
   30a50:	str	r1, [r0, #24]
   30a54:	mov	r0, r5
   30a58:	pop	{r4, r5, r6, r7, fp, pc}
   30a5c:	bne	30a70 <flatcc_json_parser_match_constant@@Base+0x1c4>
   30a60:	ldrb	r2, [r6, #2]!
   30a64:	cmp	r2, #32
   30a68:	mov	r2, r6
   30a6c:	bhi	30a7c <flatcc_json_parser_match_constant@@Base+0x1d0>
   30a70:	mov	r2, #0
   30a74:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   30a78:	mov	r2, r0
   30a7c:	mov	r0, #0
   30a80:	str	r0, [r7]
   30a84:	mov	r0, r2
   30a88:	pop	{r4, r5, r6, r7, fp, pc}
   30a8c:	mov	r0, #1
   30a90:	sub	r2, r1, #1
   30a94:	str	r0, [r7]
   30a98:	mov	r0, r2
   30a9c:	pop	{r4, r5, r6, r7, fp, pc}

00030aa0 <flatcc_json_parser_unmatched_symbol@@Base>:
   30aa0:	push	{r4, r5, r6, sl, fp, lr}
   30aa4:	add	fp, sp, #16
   30aa8:	mov	r6, r0
   30aac:	ldrb	r0, [r0, #8]
   30ab0:	mov	r4, r2
   30ab4:	tst	r0, #1
   30ab8:	bne	30aec <flatcc_json_parser_unmatched_symbol@@Base+0x4c>
   30abc:	ldr	r0, [r6, #24]
   30ac0:	cmp	r0, #0
   30ac4:	bne	30cd0 <flatcc_json_parser_unmatched_symbol@@Base+0x230>
   30ac8:	str	r1, [r6, #36]	; 0x24
   30acc:	add	r1, r1, #1
   30ad0:	mov	r0, #13
   30ad4:	ldr	r2, [r6, #4]
   30ad8:	sub	r1, r1, r2
   30adc:	str	r1, [r6, #20]
   30ae0:	str	r0, [r6, #24]
   30ae4:	mov	r0, r4
   30ae8:	pop	{r4, r5, r6, sl, fp, pc}
   30aec:	ldr	r0, [r6, #12]
   30af0:	cmp	r0, #0
   30af4:	beq	30bd0 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   30af8:	cmp	r1, r4
   30afc:	beq	30b78 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   30b00:	ldrb	r3, [r1]
   30b04:	cmp	r3, #33	; 0x21
   30b08:	bcc	30b78 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   30b0c:	add	r0, r1, #1
   30b10:	uxtb	r2, r3
   30b14:	cmp	r2, #46	; 0x2e
   30b18:	cmpne	r2, #95	; 0x5f
   30b1c:	bne	30b3c <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
   30b20:	cmp	r4, r0
   30b24:	beq	30c60 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   30b28:	ldrb	r3, [r0], #1
   30b2c:	add	r1, r1, #1
   30b30:	cmp	r3, #33	; 0x21
   30b34:	bcs	30b10 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   30b38:	b	30c64 <flatcc_json_parser_unmatched_symbol@@Base+0x1c4>
   30b3c:	sxtb	r5, r3
   30b40:	cmp	r5, #0
   30b44:	blt	30b20 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   30b48:	sub	r5, r3, #48	; 0x30
   30b4c:	uxtb	r5, r5
   30b50:	cmp	r5, #9
   30b54:	bls	30b20 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   30b58:	orr	r3, r3, #32
   30b5c:	sub	r3, r3, #97	; 0x61
   30b60:	uxtb	r3, r3
   30b64:	cmp	r3, #26
   30b68:	bcc	30b20 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   30b6c:	sub	r1, r0, #1
   30b70:	cmp	r2, #46	; 0x2e
   30b74:	beq	30c6c <flatcc_json_parser_unmatched_symbol@@Base+0x1cc>
   30b78:	mov	r2, r1
   30b7c:	sub	r0, r4, r2
   30b80:	cmp	r0, #2
   30b84:	blt	30ca8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   30b88:	ldrb	r0, [r2]
   30b8c:	cmp	r0, #32
   30b90:	bls	30c34 <flatcc_json_parser_unmatched_symbol@@Base+0x194>
   30b94:	mov	r3, r2
   30b98:	cmp	r3, r4
   30b9c:	beq	30cc4 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   30ba0:	ldrb	r0, [r3]
   30ba4:	cmp	r0, #58	; 0x3a
   30ba8:	bne	30cc4 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   30bac:	add	r1, r3, #1
   30bb0:	sub	r0, r4, r1
   30bb4:	cmp	r0, #2
   30bb8:	blt	30d0c <flatcc_json_parser_unmatched_symbol@@Base+0x26c>
   30bbc:	ldrb	r0, [r1]
   30bc0:	cmp	r0, #32
   30bc4:	bls	30cfc <flatcc_json_parser_unmatched_symbol@@Base+0x25c>
   30bc8:	mov	r3, r1
   30bcc:	b	30d1c <flatcc_json_parser_unmatched_symbol@@Base+0x27c>
   30bd0:	cmp	r1, r4
   30bd4:	beq	30c1c <flatcc_json_parser_unmatched_symbol@@Base+0x17c>
   30bd8:	ldrb	r0, [r1]
   30bdc:	cmp	r0, #92	; 0x5c
   30be0:	beq	30bfc <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   30be4:	cmp	r0, #34	; 0x22
   30be8:	beq	30c4c <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   30bec:	add	r1, r1, #1
   30bf0:	cmp	r1, r4
   30bf4:	bne	30bd8 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   30bf8:	b	30c18 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   30bfc:	sub	r0, r4, r1
   30c00:	cmp	r0, #2
   30c04:	blt	30c1c <flatcc_json_parser_unmatched_symbol@@Base+0x17c>
   30c08:	add	r1, r1, #1
   30c0c:	add	r1, r1, #1
   30c10:	cmp	r1, r4
   30c14:	bne	30bd8 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   30c18:	mov	r1, r4
   30c1c:	ldr	r0, [r6, #24]
   30c20:	mov	r2, r4
   30c24:	cmp	r0, #0
   30c28:	bne	30c9c <flatcc_json_parser_unmatched_symbol@@Base+0x1fc>
   30c2c:	mov	r0, #20
   30c30:	b	30c80 <flatcc_json_parser_unmatched_symbol@@Base+0x1e0>
   30c34:	bne	30ca8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   30c38:	mov	r3, r2
   30c3c:	ldrb	r0, [r3, #1]!
   30c40:	cmp	r0, #32
   30c44:	bls	30ca8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   30c48:	b	30cbc <flatcc_json_parser_unmatched_symbol@@Base+0x21c>
   30c4c:	add	r2, r1, #1
   30c50:	sub	r0, r4, r2
   30c54:	cmp	r0, #2
   30c58:	bge	30b88 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   30c5c:	b	30ca8 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
   30c60:	mov	r1, r4
   30c64:	cmp	r2, #46	; 0x2e
   30c68:	bne	30b78 <flatcc_json_parser_unmatched_symbol@@Base+0xd8>
   30c6c:	ldr	r0, [r6, #24]
   30c70:	mov	r2, r4
   30c74:	cmp	r0, #0
   30c78:	bne	30c9c <flatcc_json_parser_unmatched_symbol@@Base+0x1fc>
   30c7c:	mov	r0, #5
   30c80:	str	r1, [r6, #36]	; 0x24
   30c84:	add	r1, r1, #1
   30c88:	ldr	r2, [r6, #4]
   30c8c:	sub	r1, r1, r2
   30c90:	mov	r2, r4
   30c94:	str	r1, [r6, #20]
   30c98:	str	r0, [r6, #24]
   30c9c:	sub	r0, r4, r2
   30ca0:	cmp	r0, #2
   30ca4:	bge	30b88 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   30ca8:	mov	r1, r2
   30cac:	mov	r0, r6
   30cb0:	mov	r2, r4
   30cb4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   30cb8:	mov	r3, r0
   30cbc:	cmp	r3, r4
   30cc0:	bne	30ba0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   30cc4:	ldr	r0, [r6, #24]
   30cc8:	cmp	r0, #0
   30ccc:	beq	30cd8 <flatcc_json_parser_unmatched_symbol@@Base+0x238>
   30cd0:	mov	r0, r4
   30cd4:	pop	{r4, r5, r6, sl, fp, pc}
   30cd8:	str	r3, [r6, #36]	; 0x24
   30cdc:	add	r2, r3, #1
   30ce0:	mov	r0, #4
   30ce4:	ldr	r1, [r6, #4]
   30ce8:	sub	r1, r2, r1
   30cec:	str	r1, [r6, #20]
   30cf0:	str	r0, [r6, #24]
   30cf4:	mov	r0, r4
   30cf8:	pop	{r4, r5, r6, sl, fp, pc}
   30cfc:	bne	30d0c <flatcc_json_parser_unmatched_symbol@@Base+0x26c>
   30d00:	ldrb	r0, [r3, #2]!
   30d04:	cmp	r0, #32
   30d08:	bhi	30d1c <flatcc_json_parser_unmatched_symbol@@Base+0x27c>
   30d0c:	mov	r0, r6
   30d10:	mov	r2, r4
   30d14:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   30d18:	mov	r3, r0
   30d1c:	mov	r0, r6
   30d20:	mov	r1, r3
   30d24:	mov	r2, r4
   30d28:	pop	{r4, r5, r6, sl, fp, lr}
   30d2c:	b	30d30 <flatcc_json_parser_generic_json@@Base>

00030d30 <flatcc_json_parser_generic_json@@Base>:
   30d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d34:	add	fp, sp, #28
   30d38:	sub	sp, sp, #540	; 0x21c
   30d3c:	mov	r7, r1
   30d40:	cmp	r1, r2
   30d44:	beq	31a24 <flatcc_json_parser_generic_json@@Base+0xcf4>
   30d48:	mov	r5, r0
   30d4c:	add	r0, r2, #1
   30d50:	add	r1, sp, #24
   30d54:	mov	r6, r2
   30d58:	mov	r8, #0
   30d5c:	str	r0, [sp, #4]
   30d60:	add	r0, r5, #36	; 0x24
   30d64:	sub	sl, r1, #1
   30d68:	add	r9, r5, #24
   30d6c:	str	r0, [sp, #16]
   30d70:	add	r0, r5, #20
   30d74:	str	r0, [sp, #12]
   30d78:	add	r0, r5, #4
   30d7c:	str	r0, [sp, #8]
   30d80:	mov	r0, r1
   30d84:	cmp	r8, #0
   30d88:	beq	31070 <flatcc_json_parser_generic_json@@Base+0x340>
   30d8c:	ldrb	r0, [r0, #-1]
   30d90:	cmp	r0, #125	; 0x7d
   30d94:	bne	31070 <flatcc_json_parser_generic_json@@Base+0x340>
   30d98:	ldrb	r0, [r7]
   30d9c:	cmp	r0, #46	; 0x2e
   30da0:	beq	30e1c <flatcc_json_parser_generic_json@@Base+0xec>
   30da4:	cmp	r0, #34	; 0x22
   30da8:	bne	30eb0 <flatcc_json_parser_generic_json@@Base+0x180>
   30dac:	mov	r0, #0
   30db0:	mov	r2, r6
   30db4:	str	r0, [r5, #12]
   30db8:	add	r0, r7, #1
   30dbc:	cmp	r0, r6
   30dc0:	beq	30e64 <flatcc_json_parser_generic_json@@Base+0x134>
   30dc4:	ldrb	r1, [r0]
   30dc8:	cmp	r1, #92	; 0x5c
   30dcc:	beq	30de8 <flatcc_json_parser_generic_json@@Base+0xb8>
   30dd0:	cmp	r1, #34	; 0x22
   30dd4:	beq	30f50 <flatcc_json_parser_generic_json@@Base+0x220>
   30dd8:	add	r0, r0, #1
   30ddc:	cmp	r0, r6
   30de0:	bne	30dc4 <flatcc_json_parser_generic_json@@Base+0x94>
   30de4:	b	30e04 <flatcc_json_parser_generic_json@@Base+0xd4>
   30de8:	sub	r1, r6, r0
   30dec:	cmp	r1, #2
   30df0:	blt	30fac <flatcc_json_parser_generic_json@@Base+0x27c>
   30df4:	add	r0, r0, #1
   30df8:	add	r0, r0, #1
   30dfc:	cmp	r0, r6
   30e00:	bne	30dc4 <flatcc_json_parser_generic_json@@Base+0x94>
   30e04:	mov	r2, r6
   30e08:	ldr	r0, [r9]
   30e0c:	mov	r1, r6
   30e10:	cmp	r0, #0
   30e14:	bne	30fc0 <flatcc_json_parser_generic_json@@Base+0x290>
   30e18:	b	30e74 <flatcc_json_parser_generic_json@@Base+0x144>
   30e1c:	ldr	r0, [r9]
   30e20:	cmp	r0, #0
   30e24:	bne	30e50 <flatcc_json_parser_generic_json@@Base+0x120>
   30e28:	mov	r0, #5
   30e2c:	add	r1, r7, #1
   30e30:	str	r0, [r9]
   30e34:	ldr	r0, [sp, #8]
   30e38:	ldr	r0, [r0]
   30e3c:	sub	r0, r1, r0
   30e40:	ldr	r1, [sp, #12]
   30e44:	str	r0, [r1]
   30e48:	ldr	r0, [sp, #16]
   30e4c:	str	r7, [r0]
   30e50:	ldr	r0, [r5, #12]
   30e54:	mov	r2, r6
   30e58:	mov	r1, r6
   30e5c:	cmp	r0, #0
   30e60:	bne	30fc0 <flatcc_json_parser_generic_json@@Base+0x290>
   30e64:	ldr	r0, [r9]
   30e68:	mov	r1, r6
   30e6c:	cmp	r0, #0
   30e70:	bne	30fc0 <flatcc_json_parser_generic_json@@Base+0x290>
   30e74:	mov	r0, #20
   30e78:	add	r1, r2, #1
   30e7c:	str	r0, [r9]
   30e80:	ldr	r0, [sp, #8]
   30e84:	ldr	r0, [r0]
   30e88:	sub	r0, r1, r0
   30e8c:	ldr	r1, [sp, #12]
   30e90:	str	r0, [r1]
   30e94:	ldr	r0, [sp, #16]
   30e98:	str	r2, [r0]
   30e9c:	mov	r1, r6
   30ea0:	sub	r0, r6, r1
   30ea4:	cmp	r0, #2
   30ea8:	bge	30fcc <flatcc_json_parser_generic_json@@Base+0x29c>
   30eac:	b	31034 <flatcc_json_parser_generic_json@@Base+0x304>
   30eb0:	mov	r0, #1
   30eb4:	cmp	r7, r6
   30eb8:	mov	r1, r6
   30ebc:	str	r0, [r5, #12]
   30ec0:	beq	30fc0 <flatcc_json_parser_generic_json@@Base+0x290>
   30ec4:	ldrb	r2, [r7]
   30ec8:	cmp	r2, #33	; 0x21
   30ecc:	bcc	30f3c <flatcc_json_parser_generic_json@@Base+0x20c>
   30ed0:	add	r0, r7, #1
   30ed4:	uxtb	r1, r2
   30ed8:	cmp	r1, #46	; 0x2e
   30edc:	cmpne	r1, #95	; 0x5f
   30ee0:	bne	30f00 <flatcc_json_parser_generic_json@@Base+0x1d0>
   30ee4:	cmp	r6, r0
   30ee8:	beq	30f64 <flatcc_json_parser_generic_json@@Base+0x234>
   30eec:	ldrb	r2, [r0], #1
   30ef0:	add	r7, r7, #1
   30ef4:	cmp	r2, #33	; 0x21
   30ef8:	bcs	30ed4 <flatcc_json_parser_generic_json@@Base+0x1a4>
   30efc:	b	30f68 <flatcc_json_parser_generic_json@@Base+0x238>
   30f00:	sxtb	r3, r2
   30f04:	cmp	r3, #0
   30f08:	blt	30ee4 <flatcc_json_parser_generic_json@@Base+0x1b4>
   30f0c:	sub	r3, r2, #48	; 0x30
   30f10:	uxtb	r3, r3
   30f14:	cmp	r3, #9
   30f18:	bls	30ee4 <flatcc_json_parser_generic_json@@Base+0x1b4>
   30f1c:	orr	r2, r2, #32
   30f20:	sub	r2, r2, #97	; 0x61
   30f24:	uxtb	r2, r2
   30f28:	cmp	r2, #26
   30f2c:	bcc	30ee4 <flatcc_json_parser_generic_json@@Base+0x1b4>
   30f30:	sub	r7, r0, #1
   30f34:	cmp	r1, #46	; 0x2e
   30f38:	beq	30f70 <flatcc_json_parser_generic_json@@Base+0x240>
   30f3c:	mov	r1, r7
   30f40:	sub	r0, r6, r1
   30f44:	cmp	r0, #2
   30f48:	bge	30fcc <flatcc_json_parser_generic_json@@Base+0x29c>
   30f4c:	b	31034 <flatcc_json_parser_generic_json@@Base+0x304>
   30f50:	add	r1, r0, #1
   30f54:	sub	r0, r6, r1
   30f58:	cmp	r0, #2
   30f5c:	bge	30fcc <flatcc_json_parser_generic_json@@Base+0x29c>
   30f60:	b	31034 <flatcc_json_parser_generic_json@@Base+0x304>
   30f64:	mov	r7, r6
   30f68:	cmp	r1, #46	; 0x2e
   30f6c:	bne	30f3c <flatcc_json_parser_generic_json@@Base+0x20c>
   30f70:	ldr	r0, [r9]
   30f74:	mov	r1, r6
   30f78:	cmp	r0, #0
   30f7c:	bne	30fc0 <flatcc_json_parser_generic_json@@Base+0x290>
   30f80:	mov	r0, #5
   30f84:	add	r1, r7, #1
   30f88:	str	r0, [r9]
   30f8c:	ldr	r0, [sp, #8]
   30f90:	ldr	r0, [r0]
   30f94:	sub	r0, r1, r0
   30f98:	ldr	r1, [sp, #12]
   30f9c:	str	r0, [r1]
   30fa0:	ldr	r0, [sp, #16]
   30fa4:	str	r7, [r0]
   30fa8:	b	30e9c <flatcc_json_parser_generic_json@@Base+0x16c>
   30fac:	mov	r2, r0
   30fb0:	ldr	r0, [r9]
   30fb4:	mov	r1, r6
   30fb8:	cmp	r0, #0
   30fbc:	beq	30e74 <flatcc_json_parser_generic_json@@Base+0x144>
   30fc0:	sub	r0, r6, r1
   30fc4:	cmp	r0, #2
   30fc8:	blt	31034 <flatcc_json_parser_generic_json@@Base+0x304>
   30fcc:	ldrb	r0, [r1]
   30fd0:	cmp	r0, #32
   30fd4:	bls	31020 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30fd8:	mov	r7, r1
   30fdc:	cmp	r7, r6
   30fe0:	beq	31ab0 <flatcc_json_parser_generic_json@@Base+0xd80>
   30fe4:	ldrb	r0, [r7]
   30fe8:	cmp	r0, #58	; 0x3a
   30fec:	bne	31ac8 <flatcc_json_parser_generic_json@@Base+0xd98>
   30ff0:	add	r1, r7, #1
   30ff4:	sub	r0, r6, r1
   30ff8:	cmp	r0, #2
   30ffc:	blt	31060 <flatcc_json_parser_generic_json@@Base+0x330>
   31000:	ldrb	r2, [r1]
   31004:	cmp	r2, #32
   31008:	bls	31050 <flatcc_json_parser_generic_json@@Base+0x320>
   3100c:	mov	r7, r1
   31010:	sub	r0, r2, #48	; 0x30
   31014:	cmp	r0, #10
   31018:	bcc	31080 <flatcc_json_parser_generic_json@@Base+0x350>
   3101c:	b	31118 <flatcc_json_parser_generic_json@@Base+0x3e8>
   31020:	bne	31034 <flatcc_json_parser_generic_json@@Base+0x304>
   31024:	mov	r7, r1
   31028:	ldrb	r0, [r7, #1]!
   3102c:	cmp	r0, #32
   31030:	bhi	31044 <flatcc_json_parser_generic_json@@Base+0x314>
   31034:	mov	r0, r5
   31038:	mov	r2, r6
   3103c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   31040:	mov	r7, r0
   31044:	cmp	r7, r6
   31048:	bne	30fe4 <flatcc_json_parser_generic_json@@Base+0x2b4>
   3104c:	b	31ab0 <flatcc_json_parser_generic_json@@Base+0xd80>
   31050:	bne	31060 <flatcc_json_parser_generic_json@@Base+0x330>
   31054:	ldrb	r2, [r7, #2]!
   31058:	cmp	r2, #32
   3105c:	bhi	31074 <flatcc_json_parser_generic_json@@Base+0x344>
   31060:	mov	r0, r5
   31064:	mov	r2, r6
   31068:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   3106c:	mov	r7, r0
   31070:	ldrb	r2, [r7]
   31074:	sub	r0, r2, #48	; 0x30
   31078:	cmp	r0, #10
   3107c:	bcs	31118 <flatcc_json_parser_generic_json@@Base+0x3e8>
   31080:	cmp	r7, r6
   31084:	beq	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   31088:	cmp	r2, #45	; 0x2d
   3108c:	bne	310a0 <flatcc_json_parser_generic_json@@Base+0x370>
   31090:	add	r7, r7, #1
   31094:	cmp	r7, r6
   31098:	beq	314bc <flatcc_json_parser_generic_json@@Base+0x78c>
   3109c:	ldrb	r2, [r7]
   310a0:	cmp	r2, #48	; 0x30
   310a4:	bne	31134 <flatcc_json_parser_generic_json@@Base+0x404>
   310a8:	add	r4, r7, #1
   310ac:	cmp	r4, r6
   310b0:	mov	r1, r6
   310b4:	beq	316e8 <flatcc_json_parser_generic_json@@Base+0x9b8>
   310b8:	ldrb	r0, [r4]
   310bc:	cmp	r0, #46	; 0x2e
   310c0:	bne	3135c <flatcc_json_parser_generic_json@@Base+0x62c>
   310c4:	mov	r0, r4
   310c8:	ldrb	r1, [r0, #1]!
   310cc:	sub	r1, r1, #48	; 0x30
   310d0:	uxtb	r1, r1
   310d4:	cmp	r1, #10
   310d8:	bcc	31328 <flatcc_json_parser_generic_json@@Base+0x5f8>
   310dc:	ldr	r1, [r9]
   310e0:	cmp	r1, #0
   310e4:	bne	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   310e8:	mov	r1, #6
   310ec:	add	r2, r0, #1
   310f0:	mov	r4, r6
   310f4:	str	r1, [r9]
   310f8:	ldr	r1, [sp, #8]
   310fc:	ldr	r1, [r1]
   31100:	sub	r1, r2, r1
   31104:	ldr	r2, [sp, #12]
   31108:	str	r1, [r2]
   3110c:	ldr	r1, [sp, #16]
   31110:	str	r0, [r1]
   31114:	b	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   31118:	cmp	r2, #90	; 0x5a
   3111c:	bgt	3117c <flatcc_json_parser_generic_json@@Base+0x44c>
   31120:	cmp	r2, #34	; 0x22
   31124:	beq	31200 <flatcc_json_parser_generic_json@@Base+0x4d0>
   31128:	cmp	r2, #45	; 0x2d
   3112c:	beq	31080 <flatcc_json_parser_generic_json@@Base+0x350>
   31130:	b	31264 <flatcc_json_parser_generic_json@@Base+0x534>
   31134:	sub	r0, r2, #49	; 0x31
   31138:	uxtb	r0, r0
   3113c:	cmp	r0, #8
   31140:	bls	311cc <flatcc_json_parser_generic_json@@Base+0x49c>
   31144:	ldr	r0, [r9]
   31148:	cmp	r0, #0
   3114c:	bne	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   31150:	mov	r0, #6
   31154:	add	r1, r7, #1
   31158:	str	r0, [r9]
   3115c:	ldr	r0, [sp, #8]
   31160:	ldr	r0, [r0]
   31164:	sub	r0, r1, r0
   31168:	ldr	r1, [sp, #12]
   3116c:	str	r0, [r1]
   31170:	ldr	r0, [sp, #16]
   31174:	str	r7, [r0]
   31178:	b	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   3117c:	cmp	r2, #91	; 0x5b
   31180:	beq	31224 <flatcc_json_parser_generic_json@@Base+0x4f4>
   31184:	cmp	r2, #123	; 0x7b
   31188:	bne	31264 <flatcc_json_parser_generic_json@@Base+0x534>
   3118c:	cmp	r8, #512	; 0x200
   31190:	beq	31adc <flatcc_json_parser_generic_json@@Base+0xdac>
   31194:	add	r0, sp, #24
   31198:	mov	r1, #125	; 0x7d
   3119c:	strb	r1, [r0, r8]
   311a0:	add	r1, r7, #1
   311a4:	sub	r0, r6, r1
   311a8:	cmp	r0, #2
   311ac:	blt	31530 <flatcc_json_parser_generic_json@@Base+0x800>
   311b0:	ldrb	r0, [r1]
   311b4:	cmp	r0, #32
   311b8:	bls	31520 <flatcc_json_parser_generic_json@@Base+0x7f0>
   311bc:	mov	r7, r1
   311c0:	cmp	r7, r6
   311c4:	bne	31548 <flatcc_json_parser_generic_json@@Base+0x818>
   311c8:	b	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   311cc:	add	r0, r7, #1
   311d0:	cmp	r6, r0
   311d4:	beq	314d0 <flatcc_json_parser_generic_json@@Base+0x7a0>
   311d8:	ldrb	r1, [r0], #1
   311dc:	sub	r1, r1, #48	; 0x30
   311e0:	uxtb	r1, r1
   311e4:	cmp	r1, #10
   311e8:	bcc	311d0 <flatcc_json_parser_generic_json@@Base+0x4a0>
   311ec:	sub	r4, r0, #1
   311f0:	cmp	r4, r6
   311f4:	mov	r1, r6
   311f8:	bne	310b8 <flatcc_json_parser_generic_json@@Base+0x388>
   311fc:	b	316e8 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31200:	cmp	r7, r6
   31204:	beq	314e4 <flatcc_json_parser_generic_json@@Base+0x7b4>
   31208:	add	r0, r7, #1
   3120c:	mov	r1, r6
   31210:	add	r4, sp, #20
   31214:	mov	r7, #17
   31218:	cmp	r0, r6
   3121c:	bne	315e0 <flatcc_json_parser_generic_json@@Base+0x8b0>
   31220:	b	316c0 <flatcc_json_parser_generic_json@@Base+0x990>
   31224:	cmp	r8, #512	; 0x200
   31228:	beq	31adc <flatcc_json_parser_generic_json@@Base+0xdac>
   3122c:	add	r0, sp, #24
   31230:	mov	r1, #93	; 0x5d
   31234:	strb	r1, [r0, r8]
   31238:	add	r1, r7, #1
   3123c:	sub	r0, r6, r1
   31240:	cmp	r0, #2
   31244:	blt	31570 <flatcc_json_parser_generic_json@@Base+0x840>
   31248:	ldrb	r0, [r1]
   3124c:	cmp	r0, #32
   31250:	bls	31560 <flatcc_json_parser_generic_json@@Base+0x830>
   31254:	mov	r7, r1
   31258:	cmp	r7, r6
   3125c:	bne	31588 <flatcc_json_parser_generic_json@@Base+0x858>
   31260:	b	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31264:	cmp	r7, r6
   31268:	mov	r4, r6
   3126c:	beq	3131c <flatcc_json_parser_generic_json@@Base+0x5ec>
   31270:	mov	r4, r7
   31274:	sxtb	r0, r2
   31278:	cmp	r0, #0
   3127c:	blt	3130c <flatcc_json_parser_generic_json@@Base+0x5dc>
   31280:	uxtb	r0, r2
   31284:	cmp	r0, #95	; 0x5f
   31288:	cmpne	r0, #46	; 0x2e
   3128c:	beq	3130c <flatcc_json_parser_generic_json@@Base+0x5dc>
   31290:	sub	r1, r2, #48	; 0x30
   31294:	uxtb	r1, r1
   31298:	cmp	r1, #9
   3129c:	bls	3130c <flatcc_json_parser_generic_json@@Base+0x5dc>
   312a0:	orr	r1, r2, #32
   312a4:	sub	r1, r1, #97	; 0x61
   312a8:	uxtb	r1, r1
   312ac:	cmp	r1, #25
   312b0:	bls	3130c <flatcc_json_parser_generic_json@@Base+0x5dc>
   312b4:	sub	r1, r6, r4
   312b8:	cmp	r1, #2
   312bc:	blt	312dc <flatcc_json_parser_generic_json@@Base+0x5ac>
   312c0:	cmp	r0, #32
   312c4:	bhi	3131c <flatcc_json_parser_generic_json@@Base+0x5ec>
   312c8:	bne	312dc <flatcc_json_parser_generic_json@@Base+0x5ac>
   312cc:	mov	r0, r4
   312d0:	ldrb	r1, [r0, #1]!
   312d4:	cmp	r1, #32
   312d8:	bhi	31310 <flatcc_json_parser_generic_json@@Base+0x5e0>
   312dc:	mov	r0, r5
   312e0:	mov	r1, r4
   312e4:	mov	r2, r6
   312e8:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   312ec:	cmp	r0, r4
   312f0:	bne	31310 <flatcc_json_parser_generic_json@@Base+0x5e0>
   312f4:	b	3131c <flatcc_json_parser_generic_json@@Base+0x5ec>
   312f8:	ldrb	r2, [r0]
   312fc:	mov	r4, r0
   31300:	sxtb	r0, r2
   31304:	cmp	r0, #0
   31308:	bge	31280 <flatcc_json_parser_generic_json@@Base+0x550>
   3130c:	add	r0, r4, #1
   31310:	cmp	r0, r6
   31314:	bne	312f8 <flatcc_json_parser_generic_json@@Base+0x5c8>
   31318:	mov	r4, r6
   3131c:	cmp	r7, r4
   31320:	bne	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   31324:	b	31af0 <flatcc_json_parser_generic_json@@Base+0xdc0>
   31328:	add	r4, r4, #2
   3132c:	mov	r1, r6
   31330:	cmp	r4, r6
   31334:	beq	316e8 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31338:	ldrb	r0, [r4]
   3133c:	sub	r1, r0, #48	; 0x30
   31340:	uxtb	r1, r1
   31344:	cmp	r1, #9
   31348:	bhi	3135c <flatcc_json_parser_generic_json@@Base+0x62c>
   3134c:	add	r4, r4, #1
   31350:	cmp	r6, r4
   31354:	bne	31338 <flatcc_json_parser_generic_json@@Base+0x608>
   31358:	b	314d0 <flatcc_json_parser_generic_json@@Base+0x7a0>
   3135c:	cmp	r4, r6
   31360:	mov	r1, r6
   31364:	beq	316e8 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31368:	orr	r1, r0, #32
   3136c:	cmp	r1, #101	; 0x65
   31370:	bne	313d0 <flatcc_json_parser_generic_json@@Base+0x6a0>
   31374:	add	r0, r4, #1
   31378:	cmp	r0, r6
   3137c:	beq	314bc <flatcc_json_parser_generic_json@@Base+0x78c>
   31380:	ldrb	r1, [r0]
   31384:	cmp	r1, #45	; 0x2d
   31388:	cmpne	r1, #43	; 0x2b
   3138c:	addeq	r0, r4, #2
   31390:	cmp	r0, r6
   31394:	beq	310dc <flatcc_json_parser_generic_json@@Base+0x3ac>
   31398:	ldrb	r1, [r0]
   3139c:	sub	r1, r1, #48	; 0x30
   313a0:	uxtb	r1, r1
   313a4:	cmp	r1, #9
   313a8:	bhi	310dc <flatcc_json_parser_generic_json@@Base+0x3ac>
   313ac:	add	r1, r0, #1
   313b0:	cmp	r6, r1
   313b4:	beq	314d0 <flatcc_json_parser_generic_json@@Base+0x7a0>
   313b8:	ldrb	r0, [r1], #1
   313bc:	sub	r2, r0, #48	; 0x30
   313c0:	uxtb	r2, r2
   313c4:	cmp	r2, #10
   313c8:	bcc	313b0 <flatcc_json_parser_generic_json@@Base+0x680>
   313cc:	sub	r4, r1, #1
   313d0:	cmp	r4, r6
   313d4:	mov	r1, r6
   313d8:	beq	316e8 <flatcc_json_parser_generic_json@@Base+0x9b8>
   313dc:	sub	r2, r0, #9
   313e0:	cmp	r2, #49	; 0x31
   313e4:	bhi	316d4 <flatcc_json_parser_generic_json@@Base+0x9a4>
   313e8:	add	r0, pc, #4
   313ec:	mov	r1, r4
   313f0:	ldr	pc, [r0, r2, lsl #2]
   313f4:	strdeq	r1, [r3], -r8
   313f8:	strdeq	r1, [r3], -r8
   313fc:	strdeq	r1, [r3], -r8
   31400:	andeq	r1, r3, r8, ror #13
   31404:	strdeq	r1, [r3], -r8
   31408:	andeq	r1, r3, r8, ror #13
   3140c:	andeq	r1, r3, r8, ror #13
   31410:	andeq	r1, r3, r8, ror #13
   31414:	andeq	r1, r3, r8, ror #13
   31418:	andeq	r1, r3, r8, ror #13
   3141c:	andeq	r1, r3, r8, ror #13
   31420:	andeq	r1, r3, r8, ror #13
   31424:	andeq	r1, r3, r8, ror #13
   31428:	andeq	r1, r3, r8, ror #13
   3142c:	andeq	r1, r3, r8, ror #13
   31430:	andeq	r1, r3, r8, ror #13
   31434:	andeq	r1, r3, r8, ror #13
   31438:	andeq	r1, r3, r8, ror #13
   3143c:	andeq	r1, r3, r8, ror #13
   31440:	andeq	r1, r3, r8, ror #13
   31444:	andeq	r1, r3, r8, ror #13
   31448:	andeq	r1, r3, r8, ror #13
   3144c:	andeq	r1, r3, r8, ror #13
   31450:	strdeq	r1, [r3], -r8
   31454:	andeq	r1, r3, r8, ror #13
   31458:	andeq	r1, r3, r8, ror #13
   3145c:	andeq	r1, r3, r8, ror #13
   31460:	andeq	r1, r3, r8, ror #13
   31464:	andeq	r1, r3, r8, ror #13
   31468:	andeq	r1, r3, r8, ror #13
   3146c:	andeq	r1, r3, r8, ror #13
   31470:	andeq	r1, r3, r8, ror #13
   31474:	andeq	r1, r3, r8, ror #13
   31478:	andeq	r1, r3, r8, ror #13
   3147c:	andeq	r1, r3, r8, ror #13
   31480:	strdeq	r1, [r3], -r8
   31484:	andeq	r1, r3, r8, ror #13
   31488:	andeq	r1, r3, r8, ror #13
   3148c:	andeq	r1, r3, r8, ror #13
   31490:	andeq	r1, r3, r8, ror #13
   31494:	andeq	r1, r3, r8, ror #13
   31498:	andeq	r1, r3, r8, ror #13
   3149c:	andeq	r1, r3, r8, ror #13
   314a0:	andeq	r1, r3, r8, ror #13
   314a4:	andeq	r1, r3, r8, ror #13
   314a8:	andeq	r1, r3, r8, ror #13
   314ac:	andeq	r1, r3, r8, ror #13
   314b0:	andeq	r1, r3, r8, ror #13
   314b4:	andeq	r1, r3, r8, ror #13
   314b8:	strdeq	r1, [r3], -r8
   314bc:	ldr	r0, [r9]
   314c0:	cmp	r0, #0
   314c4:	bne	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   314c8:	mov	r0, #6
   314cc:	b	314f4 <flatcc_json_parser_generic_json@@Base+0x7c4>
   314d0:	mov	r1, r6
   314d4:	ldr	r0, [r9]
   314d8:	cmp	r0, #0
   314dc:	bne	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   314e0:	b	319f4 <flatcc_json_parser_generic_json@@Base+0xcc4>
   314e4:	ldr	r0, [r9]
   314e8:	cmp	r0, #0
   314ec:	bne	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   314f0:	mov	r0, #16
   314f4:	str	r0, [r9]
   314f8:	ldr	r0, [sp, #8]
   314fc:	ldr	r1, [sp, #4]
   31500:	mov	r4, r6
   31504:	ldr	r0, [r0]
   31508:	sub	r0, r1, r0
   3150c:	ldr	r1, [sp, #12]
   31510:	str	r0, [r1]
   31514:	ldr	r0, [sp, #16]
   31518:	str	r6, [r0]
   3151c:	b	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   31520:	bne	31530 <flatcc_json_parser_generic_json@@Base+0x800>
   31524:	ldrb	r0, [r7, #2]!
   31528:	cmp	r0, #32
   3152c:	bhi	31540 <flatcc_json_parser_generic_json@@Base+0x810>
   31530:	mov	r0, r5
   31534:	mov	r2, r6
   31538:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   3153c:	mov	r7, r0
   31540:	cmp	r7, r6
   31544:	beq	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31548:	ldrb	r0, [r7]
   3154c:	add	r8, r8, #1
   31550:	cmp	r0, #125	; 0x7d
   31554:	mov	r4, r7
   31558:	bne	319e0 <flatcc_json_parser_generic_json@@Base+0xcb0>
   3155c:	b	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   31560:	bne	31570 <flatcc_json_parser_generic_json@@Base+0x840>
   31564:	ldrb	r0, [r7, #2]!
   31568:	cmp	r0, #32
   3156c:	bhi	31580 <flatcc_json_parser_generic_json@@Base+0x850>
   31570:	mov	r0, r5
   31574:	mov	r2, r6
   31578:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   3157c:	mov	r7, r0
   31580:	cmp	r7, r6
   31584:	beq	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31588:	ldrb	r0, [r7]
   3158c:	add	r8, r8, #1
   31590:	cmp	r0, #93	; 0x5d
   31594:	mov	r4, r7
   31598:	beq	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   3159c:	b	319e0 <flatcc_json_parser_generic_json@@Base+0xcb0>
   315a0:	ldr	r0, [r9]
   315a4:	mov	r1, r6
   315a8:	cmp	r0, #0
   315ac:	bne	31680 <flatcc_json_parser_generic_json@@Base+0x950>
   315b0:	mov	r0, #20
   315b4:	ldr	r1, [sp, #4]
   315b8:	str	r0, [r9]
   315bc:	ldr	r0, [sp, #8]
   315c0:	ldr	r0, [r0]
   315c4:	sub	r0, r1, r0
   315c8:	ldr	r1, [sp, #12]
   315cc:	str	r0, [r1]
   315d0:	ldr	r0, [sp, #16]
   315d4:	mov	r1, r6
   315d8:	str	r6, [r0]
   315dc:	b	31680 <flatcc_json_parser_generic_json@@Base+0x950>
   315e0:	ldrb	r1, [r0]
   315e4:	cmp	r1, #34	; 0x22
   315e8:	beq	316a0 <flatcc_json_parser_generic_json@@Base+0x970>
   315ec:	cmp	r1, #32
   315f0:	bcc	3162c <flatcc_json_parser_generic_json@@Base+0x8fc>
   315f4:	rsb	r0, r0, #0
   315f8:	uxtb	r2, r1
   315fc:	cmp	r2, #34	; 0x22
   31600:	cmpne	r2, #92	; 0x5c
   31604:	beq	31668 <flatcc_json_parser_generic_json@@Base+0x938>
   31608:	add	r1, r6, r0
   3160c:	cmp	r1, #1
   31610:	beq	315a0 <flatcc_json_parser_generic_json@@Base+0x870>
   31614:	rsb	r1, r0, #0
   31618:	sub	r0, r0, #1
   3161c:	ldrb	r1, [r1, #1]
   31620:	cmp	r1, #32
   31624:	bcs	315f8 <flatcc_json_parser_generic_json@@Base+0x8c8>
   31628:	rsb	r0, r0, #0
   3162c:	ldr	r1, [r9]
   31630:	cmp	r1, #0
   31634:	mov	r1, r6
   31638:	bne	31680 <flatcc_json_parser_generic_json@@Base+0x950>
   3163c:	ldr	r1, [sp, #8]
   31640:	str	r7, [r9]
   31644:	add	r2, r0, #1
   31648:	ldr	r1, [r1]
   3164c:	sub	r1, r2, r1
   31650:	ldr	r2, [sp, #12]
   31654:	str	r1, [r2]
   31658:	ldr	r1, [sp, #16]
   3165c:	str	r0, [r1]
   31660:	mov	r1, r6
   31664:	b	31680 <flatcc_json_parser_generic_json@@Base+0x950>
   31668:	adds	r1, r6, r0
   3166c:	mov	r1, r6
   31670:	beq	31680 <flatcc_json_parser_generic_json@@Base+0x950>
   31674:	rsb	r1, r0, #0
   31678:	cmp	r2, #34	; 0x22
   3167c:	beq	316a4 <flatcc_json_parser_generic_json@@Base+0x974>
   31680:	mov	r0, r5
   31684:	mov	r2, r6
   31688:	mov	r3, r4
   3168c:	bl	30358 <flatcc_json_parser_string_escape@@Base>
   31690:	cmp	r0, r6
   31694:	bne	315e0 <flatcc_json_parser_generic_json@@Base+0x8b0>
   31698:	mov	r1, r6
   3169c:	b	316c0 <flatcc_json_parser_generic_json@@Base+0x990>
   316a0:	mov	r1, r0
   316a4:	cmp	r1, r6
   316a8:	beq	316c0 <flatcc_json_parser_generic_json@@Base+0x990>
   316ac:	ldrb	r0, [r1]
   316b0:	cmp	r0, #34	; 0x22
   316b4:	bne	316c0 <flatcc_json_parser_generic_json@@Base+0x990>
   316b8:	add	r4, r1, #1
   316bc:	b	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   316c0:	ldr	r0, [r9]
   316c4:	cmp	r0, #0
   316c8:	bne	316f4 <flatcc_json_parser_generic_json@@Base+0x9c4>
   316cc:	mov	r0, #20
   316d0:	b	319f8 <flatcc_json_parser_generic_json@@Base+0xcc8>
   316d4:	cmp	r0, #93	; 0x5d
   316d8:	beq	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   316dc:	cmp	r0, #125	; 0x7d
   316e0:	mov	r1, r4
   316e4:	beq	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   316e8:	ldr	r0, [r9]
   316ec:	cmp	r0, #0
   316f0:	beq	319f4 <flatcc_json_parser_generic_json@@Base+0xcc4>
   316f4:	mov	r4, r6
   316f8:	subs	r1, r4, r6
   316fc:	mov	r2, r8
   31700:	movwne	r1, #1
   31704:	cmp	r8, #0
   31708:	movwne	r2, #1
   3170c:	beq	31a34 <flatcc_json_parser_generic_json@@Base+0xd04>
   31710:	cmp	r4, r6
   31714:	beq	31a44 <flatcc_json_parser_generic_json@@Base+0xd14>
   31718:	ldrb	r1, [sl, r8]
   3171c:	sub	r0, r6, r4
   31720:	cmp	r1, #93	; 0x5d
   31724:	bne	31778 <flatcc_json_parser_generic_json@@Base+0xa48>
   31728:	cmp	r0, #2
   3172c:	blt	31804 <flatcc_json_parser_generic_json@@Base+0xad4>
   31730:	ldrb	r0, [r4]
   31734:	cmp	r0, #32
   31738:	bls	317f0 <flatcc_json_parser_generic_json@@Base+0xac0>
   3173c:	mov	r7, r4
   31740:	cmp	r7, r6
   31744:	mov	r4, r6
   31748:	beq	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   3174c:	ldrb	r0, [r7]
   31750:	cmp	r0, #44	; 0x2c
   31754:	beq	31860 <flatcc_json_parser_generic_json@@Base+0xb30>
   31758:	cmp	r0, #93	; 0x5d
   3175c:	beq	3193c <flatcc_json_parser_generic_json@@Base+0xc0c>
   31760:	ldr	r0, [r9]
   31764:	mov	r4, r6
   31768:	cmp	r0, #0
   3176c:	bne	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31770:	mov	r0, #9
   31774:	b	317c4 <flatcc_json_parser_generic_json@@Base+0xa94>
   31778:	cmp	r0, #2
   3177c:	blt	3183c <flatcc_json_parser_generic_json@@Base+0xb0c>
   31780:	ldrb	r0, [r4]
   31784:	cmp	r0, #32
   31788:	bls	31828 <flatcc_json_parser_generic_json@@Base+0xaf8>
   3178c:	mov	r7, r4
   31790:	cmp	r7, r6
   31794:	mov	r4, r6
   31798:	beq	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   3179c:	ldrb	r0, [r7]
   317a0:	cmp	r0, #44	; 0x2c
   317a4:	beq	318a0 <flatcc_json_parser_generic_json@@Base+0xb70>
   317a8:	cmp	r0, #125	; 0x7d
   317ac:	beq	3193c <flatcc_json_parser_generic_json@@Base+0xc0c>
   317b0:	ldr	r0, [r9]
   317b4:	mov	r4, r6
   317b8:	cmp	r0, #0
   317bc:	bne	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   317c0:	mov	r0, #10
   317c4:	str	r0, [r9]
   317c8:	ldr	r0, [sp, #8]
   317cc:	add	r1, r7, #1
   317d0:	mov	r4, r6
   317d4:	ldr	r0, [r0]
   317d8:	sub	r0, r1, r0
   317dc:	ldr	r1, [sp, #12]
   317e0:	str	r0, [r1]
   317e4:	ldr	r0, [sp, #16]
   317e8:	str	r7, [r0]
   317ec:	b	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   317f0:	bne	31804 <flatcc_json_parser_generic_json@@Base+0xad4>
   317f4:	mov	r7, r4
   317f8:	ldrb	r0, [r7, #1]!
   317fc:	cmp	r0, #32
   31800:	bhi	31818 <flatcc_json_parser_generic_json@@Base+0xae8>
   31804:	mov	r0, r5
   31808:	mov	r1, r4
   3180c:	mov	r2, r6
   31810:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   31814:	mov	r7, r0
   31818:	cmp	r7, r6
   3181c:	mov	r4, r6
   31820:	bne	3174c <flatcc_json_parser_generic_json@@Base+0xa1c>
   31824:	b	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31828:	bne	3183c <flatcc_json_parser_generic_json@@Base+0xb0c>
   3182c:	mov	r7, r4
   31830:	ldrb	r0, [r7, #1]!
   31834:	cmp	r0, #32
   31838:	bhi	31850 <flatcc_json_parser_generic_json@@Base+0xb20>
   3183c:	mov	r0, r5
   31840:	mov	r1, r4
   31844:	mov	r2, r6
   31848:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   3184c:	mov	r7, r0
   31850:	cmp	r7, r6
   31854:	mov	r4, r6
   31858:	bne	3179c <flatcc_json_parser_generic_json@@Base+0xa6c>
   3185c:	b	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31860:	add	r1, r7, #1
   31864:	sub	r0, r6, r1
   31868:	cmp	r0, #2
   3186c:	blt	31918 <flatcc_json_parser_generic_json@@Base+0xbe8>
   31870:	ldrb	r0, [r1]
   31874:	cmp	r0, #32
   31878:	bls	31908 <flatcc_json_parser_generic_json@@Base+0xbd8>
   3187c:	mov	r7, r1
   31880:	cmp	r7, r6
   31884:	bne	31930 <flatcc_json_parser_generic_json@@Base+0xc00>
   31888:	ldr	r0, [r9]
   3188c:	mov	r4, r6
   31890:	cmp	r0, #0
   31894:	bne	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31898:	mov	r0, #9
   3189c:	b	318dc <flatcc_json_parser_generic_json@@Base+0xbac>
   318a0:	add	r1, r7, #1
   318a4:	sub	r0, r6, r1
   318a8:	cmp	r0, #2
   318ac:	blt	319bc <flatcc_json_parser_generic_json@@Base+0xc8c>
   318b0:	ldrb	r0, [r1]
   318b4:	cmp	r0, #32
   318b8:	bls	319ac <flatcc_json_parser_generic_json@@Base+0xc7c>
   318bc:	mov	r7, r1
   318c0:	cmp	r7, r6
   318c4:	bne	319d4 <flatcc_json_parser_generic_json@@Base+0xca4>
   318c8:	ldr	r0, [r9]
   318cc:	mov	r4, r6
   318d0:	cmp	r0, #0
   318d4:	bne	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   318d8:	mov	r0, #10
   318dc:	str	r0, [r9]
   318e0:	ldr	r0, [sp, #8]
   318e4:	ldr	r1, [sp, #4]
   318e8:	mov	r4, r6
   318ec:	ldr	r0, [r0]
   318f0:	sub	r0, r1, r0
   318f4:	ldr	r1, [sp, #12]
   318f8:	str	r0, [r1]
   318fc:	ldr	r0, [sp, #16]
   31900:	str	r6, [r0]
   31904:	b	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31908:	bne	31918 <flatcc_json_parser_generic_json@@Base+0xbe8>
   3190c:	ldrb	r0, [r7, #2]!
   31910:	cmp	r0, #32
   31914:	bhi	31928 <flatcc_json_parser_generic_json@@Base+0xbf8>
   31918:	mov	r0, r5
   3191c:	mov	r2, r6
   31920:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   31924:	mov	r7, r0
   31928:	cmp	r7, r6
   3192c:	beq	31888 <flatcc_json_parser_generic_json@@Base+0xb58>
   31930:	ldrb	r0, [r7]
   31934:	cmp	r0, #93	; 0x5d
   31938:	bne	319e0 <flatcc_json_parser_generic_json@@Base+0xcb0>
   3193c:	add	r1, r7, #1
   31940:	sub	r0, r6, r1
   31944:	cmp	r0, #2
   31948:	blt	31974 <flatcc_json_parser_generic_json@@Base+0xc44>
   3194c:	ldrb	r0, [r1]
   31950:	cmp	r0, #32
   31954:	bls	31960 <flatcc_json_parser_generic_json@@Base+0xc30>
   31958:	mov	r4, r1
   3195c:	b	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31960:	bne	31974 <flatcc_json_parser_generic_json@@Base+0xc44>
   31964:	ldrb	r0, [r7, #2]!
   31968:	cmp	r0, #32
   3196c:	mov	r4, r7
   31970:	bhi	31984 <flatcc_json_parser_generic_json@@Base+0xc54>
   31974:	mov	r0, r5
   31978:	mov	r2, r6
   3197c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   31980:	mov	r4, r0
   31984:	subs	r1, r4, r6
   31988:	sub	r0, r8, #1
   3198c:	movwne	r1, #1
   31990:	subs	r2, r8, #1
   31994:	movwne	r2, #1
   31998:	beq	31a48 <flatcc_json_parser_generic_json@@Base+0xd18>
   3199c:	cmp	r4, r6
   319a0:	mov	r8, r0
   319a4:	bne	31718 <flatcc_json_parser_generic_json@@Base+0x9e8>
   319a8:	b	31a48 <flatcc_json_parser_generic_json@@Base+0xd18>
   319ac:	bne	319bc <flatcc_json_parser_generic_json@@Base+0xc8c>
   319b0:	ldrb	r0, [r7, #2]!
   319b4:	cmp	r0, #32
   319b8:	bhi	319cc <flatcc_json_parser_generic_json@@Base+0xc9c>
   319bc:	mov	r0, r5
   319c0:	mov	r2, r6
   319c4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   319c8:	mov	r7, r0
   319cc:	cmp	r7, r6
   319d0:	beq	318c8 <flatcc_json_parser_generic_json@@Base+0xb98>
   319d4:	ldrb	r0, [r7]
   319d8:	cmp	r0, #125	; 0x7d
   319dc:	beq	3193c <flatcc_json_parser_generic_json@@Base+0xc0c>
   319e0:	add	r0, sp, #24
   319e4:	cmp	r7, r6
   319e8:	add	r0, r0, r8
   319ec:	bne	30d84 <flatcc_json_parser_generic_json@@Base+0x54>
   319f0:	b	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   319f4:	mov	r0, #6
   319f8:	str	r0, [r9]
   319fc:	ldr	r0, [sp, #8]
   31a00:	add	r2, r1, #1
   31a04:	mov	r4, r6
   31a08:	ldr	r0, [r0]
   31a0c:	sub	r0, r2, r0
   31a10:	ldr	r2, [sp, #12]
   31a14:	str	r0, [r2]
   31a18:	ldr	r0, [sp, #16]
   31a1c:	str	r1, [r0]
   31a20:	b	316f8 <flatcc_json_parser_generic_json@@Base+0x9c8>
   31a24:	mov	r4, r7
   31a28:	mov	r0, r4
   31a2c:	sub	sp, fp, #28
   31a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a34:	mov	r0, r8
   31a38:	cmp	r1, #0
   31a3c:	beq	31a50 <flatcc_json_parser_generic_json@@Base+0xd20>
   31a40:	b	31aa4 <flatcc_json_parser_generic_json@@Base+0xd74>
   31a44:	mov	r0, r8
   31a48:	cmp	r1, #0
   31a4c:	bne	31aa4 <flatcc_json_parser_generic_json@@Base+0xd74>
   31a50:	cmp	r2, #0
   31a54:	beq	31aa4 <flatcc_json_parser_generic_json@@Base+0xd74>
   31a58:	ldr	r1, [r9]
   31a5c:	cmp	r1, #0
   31a60:	bne	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31a64:	add	r1, sp, #24
   31a68:	add	r0, r1, r0
   31a6c:	mov	r1, #10
   31a70:	ldrb	r0, [r0, #-1]
   31a74:	cmp	r0, #93	; 0x5d
   31a78:	movweq	r1, #9
   31a7c:	str	r1, [r9]
   31a80:	ldr	r0, [sp, #8]
   31a84:	ldr	r1, [sp, #4]
   31a88:	ldr	r0, [r0]
   31a8c:	sub	r0, r1, r0
   31a90:	ldr	r1, [sp, #12]
   31a94:	str	r0, [r1]
   31a98:	ldr	r0, [sp, #16]
   31a9c:	str	r6, [r0]
   31aa0:	mov	r4, r6
   31aa4:	mov	r0, r4
   31aa8:	sub	sp, fp, #28
   31aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31ab0:	ldr	r0, [r9]
   31ab4:	cmp	r0, #0
   31ab8:	bne	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31abc:	mov	r0, #10
   31ac0:	str	r0, [r9]
   31ac4:	b	31a80 <flatcc_json_parser_generic_json@@Base+0xd50>
   31ac8:	ldr	r0, [r9]
   31acc:	cmp	r0, #0
   31ad0:	bne	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31ad4:	mov	r0, #4
   31ad8:	b	31b00 <flatcc_json_parser_generic_json@@Base+0xdd0>
   31adc:	ldr	r0, [r9]
   31ae0:	cmp	r0, #0
   31ae4:	bne	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31ae8:	mov	r0, #2
   31aec:	b	31b00 <flatcc_json_parser_generic_json@@Base+0xdd0>
   31af0:	ldr	r0, [r9]
   31af4:	cmp	r0, #0
   31af8:	bne	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>
   31afc:	mov	r0, #5
   31b00:	str	r0, [r9]
   31b04:	ldr	r0, [sp, #8]
   31b08:	add	r1, r7, #1
   31b0c:	ldr	r0, [r0]
   31b10:	sub	r0, r1, r0
   31b14:	ldr	r1, [sp, #12]
   31b18:	str	r0, [r1]
   31b1c:	ldr	r0, [sp, #16]
   31b20:	str	r7, [r0]
   31b24:	b	31aa0 <flatcc_json_parser_generic_json@@Base+0xd70>

00031b28 <flatcc_json_parser_double@@Base>:
   31b28:	push	{r4, r5, r6, r7, fp, lr}
   31b2c:	add	fp, sp, #16
   31b30:	mov	r5, r0
   31b34:	mov	r0, #0
   31b38:	mov	r6, r1
   31b3c:	cmp	r1, r2
   31b40:	str	r0, [r3]
   31b44:	str	r0, [r3, #4]
   31b48:	moveq	r0, r6
   31b4c:	popeq	{r4, r5, r6, r7, fp, pc}
   31b50:	mov	r0, r6
   31b54:	mov	r4, r2
   31b58:	mov	r7, r3
   31b5c:	ldrb	r1, [r0], #1
   31b60:	cmp	r1, #45	; 0x2d
   31b64:	movne	r0, r6
   31b68:	sub	r2, r2, r0
   31b6c:	cmp	r2, #2
   31b70:	blt	31b9c <flatcc_json_parser_double@@Base+0x74>
   31b74:	sub	r1, r1, #45	; 0x2d
   31b78:	clz	r1, r1
   31b7c:	lsr	r1, r1, #5
   31b80:	ldrb	r1, [r6, r1]
   31b84:	cmp	r1, #46	; 0x2e
   31b88:	beq	31bec <flatcc_json_parser_double@@Base+0xc4>
   31b8c:	cmp	r1, #48	; 0x30
   31b90:	ldrbeq	r0, [r0, #1]
   31b94:	cmpeq	r0, #48	; 0x30
   31b98:	beq	31bec <flatcc_json_parser_double@@Base+0xc4>
   31b9c:	sub	r1, r4, r6
   31ba0:	mov	r0, r6
   31ba4:	mov	r2, r7
   31ba8:	bl	31c20 <flatcc_json_parser_double@@Base+0xf8>
   31bac:	cmp	r0, #0
   31bb0:	cmpne	r0, r6
   31bb4:	popne	{r4, r5, r6, r7, fp, pc}
   31bb8:	vldr	d0, [r7]
   31bbc:	bl	12aec <__isinf@plt>
   31bc0:	ldr	r1, [r5, #24]
   31bc4:	cmp	r0, #0
   31bc8:	beq	31bdc <flatcc_json_parser_double@@Base+0xb4>
   31bcc:	cmp	r1, #0
   31bd0:	bne	31be4 <flatcc_json_parser_double@@Base+0xbc>
   31bd4:	mov	r0, #7
   31bd8:	b	31bfc <flatcc_json_parser_double@@Base+0xd4>
   31bdc:	cmp	r1, #0
   31be0:	beq	31bf8 <flatcc_json_parser_double@@Base+0xd0>
   31be4:	mov	r0, r4
   31be8:	pop	{r4, r5, r6, r7, fp, pc}
   31bec:	ldr	r0, [r5, #24]
   31bf0:	cmp	r0, #0
   31bf4:	bne	31be4 <flatcc_json_parser_double@@Base+0xbc>
   31bf8:	mov	r0, #6
   31bfc:	str	r6, [r5, #36]	; 0x24
   31c00:	add	r2, r6, #1
   31c04:	ldr	r1, [r5, #4]
   31c08:	sub	r1, r2, r1
   31c0c:	str	r1, [r5, #20]
   31c10:	str	r0, [r5, #24]
   31c14:	mov	r0, r4
   31c18:	pop	{r4, r5, r6, r7, fp, pc}
   31c1c:	nop	{0}
   31c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31c24:	add	fp, sp, #28
   31c28:	sub	sp, sp, #36	; 0x24
   31c2c:	cmp	r1, #1000	; 0x3e8
   31c30:	mov	r3, r1
   31c34:	mov	r6, #0
   31c38:	mov	r9, r0
   31c3c:	movge	r1, #1000	; 0x3e8
   31c40:	str	r6, [r2]
   31c44:	str	r6, [r2, #4]
   31c48:	add	lr, r0, r1
   31c4c:	add	r4, lr, #1
   31c50:	cmp	r4, r0
   31c54:	beq	31cbc <flatcc_json_parser_double@@Base+0x194>
   31c58:	ldrb	r0, [r9]
   31c5c:	mov	r5, r9
   31c60:	cmp	r0, #45	; 0x2d
   31c64:	bne	31c7c <flatcc_json_parser_double@@Base+0x154>
   31c68:	cmp	r1, #0
   31c6c:	beq	31d0c <flatcc_json_parser_double@@Base+0x1e4>
   31c70:	add	r5, r9, #1
   31c74:	mov	r6, #1
   31c78:	ldrb	r0, [r5]
   31c7c:	cmp	r0, #48	; 0x30
   31c80:	bne	31ccc <flatcc_json_parser_double@@Base+0x1a4>
   31c84:	add	ip, r5, #1
   31c88:	cmp	r5, lr
   31c8c:	beq	31d4c <flatcc_json_parser_double@@Base+0x224>
   31c90:	ldrb	r1, [ip]
   31c94:	orr	r0, r1, #32
   31c98:	cmp	r0, #120	; 0x78
   31c9c:	bne	31d1c <flatcc_json_parser_double@@Base+0x1f4>
   31ca0:	mov	r0, #0
   31ca4:	str	r0, [r2]
   31ca8:	str	r0, [r2, #4]
   31cac:	mov	r2, r9
   31cb0:	mov	r0, r2
   31cb4:	sub	sp, fp, #28
   31cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31cbc:	mov	r2, r9
   31cc0:	mov	r0, r2
   31cc4:	sub	sp, fp, #28
   31cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31ccc:	sub	r1, r0, #49	; 0x31
   31cd0:	uxtb	r1, r1
   31cd4:	cmp	r1, #9
   31cd8:	bcc	31cf4 <flatcc_json_parser_double@@Base+0x1cc>
   31cdc:	cmp	r6, #0
   31ce0:	movne	r9, #0
   31ce4:	mov	r2, r9
   31ce8:	mov	r0, r2
   31cec:	sub	sp, fp, #28
   31cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31cf4:	sub	r0, r0, #48	; 0x30
   31cf8:	add	ip, r5, #1
   31cfc:	asr	r1, r0, #31
   31d00:	cmp	ip, r4
   31d04:	bne	31d5c <flatcc_json_parser_double@@Base+0x234>
   31d08:	b	31dd8 <flatcc_json_parser_double@@Base+0x2b0>
   31d0c:	mov	r2, #0
   31d10:	mov	r0, r2
   31d14:	sub	sp, fp, #28
   31d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31d1c:	cmp	r1, #48	; 0x30
   31d20:	mov	r0, #0
   31d24:	mov	r1, #0
   31d28:	bne	31d54 <flatcc_json_parser_double@@Base+0x22c>
   31d2c:	add	r0, r5, #2
   31d30:	mov	ip, r0
   31d34:	cmp	r4, r0
   31d38:	beq	31d4c <flatcc_json_parser_double@@Base+0x224>
   31d3c:	mov	r0, ip
   31d40:	ldrb	r1, [r0], #1
   31d44:	cmp	r1, #48	; 0x30
   31d48:	beq	31d30 <flatcc_json_parser_double@@Base+0x208>
   31d4c:	mov	r0, #0
   31d50:	mov	r1, #0
   31d54:	cmp	ip, r4
   31d58:	beq	31dd8 <flatcc_json_parser_double@@Base+0x2b0>
   31d5c:	movw	r5, #39321	; 0x9999
   31d60:	mov	sl, #10
   31d64:	mov	r7, ip
   31d68:	str	r6, [sp, #20]
   31d6c:	str	r2, [sp, #24]
   31d70:	movt	r5, #6553	; 0x1999
   31d74:	ldrb	r8, [r7]
   31d78:	sub	r2, r8, #48	; 0x30
   31d7c:	uxtb	r6, r2
   31d80:	mov	r2, #0
   31d84:	cmp	r6, #9
   31d88:	bhi	31dc0 <flatcc_json_parser_double@@Base+0x298>
   31d8c:	movw	r6, #39320	; 0x9998
   31d90:	movt	r6, #39321	; 0x9999
   31d94:	subs	r6, r6, r0
   31d98:	sbcs	r6, r5, r1
   31d9c:	bcc	31de8 <flatcc_json_parser_double@@Base+0x2c0>
   31da0:	add	r1, r1, r1, lsl #2
   31da4:	add	r7, r7, #1
   31da8:	lsl	r1, r1, #1
   31dac:	umlal	r8, r1, r0, sl
   31db0:	subs	r0, r8, #48	; 0x30
   31db4:	sbc	r1, r1, #0
   31db8:	cmp	r4, r7
   31dbc:	bne	31d74 <flatcc_json_parser_double@@Base+0x24c>
   31dc0:	mov	r5, r1
   31dc4:	mov	sl, #0
   31dc8:	str	r0, [sp, #28]
   31dcc:	cmp	r7, r4
   31dd0:	bne	31e0c <flatcc_json_parser_double@@Base+0x2e4>
   31dd4:	b	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31dd8:	mov	r2, #0
   31ddc:	mov	r0, r2
   31de0:	sub	sp, fp, #28
   31de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31de8:	adds	r6, r0, #1
   31dec:	mov	sl, #1
   31df0:	adc	r5, r1, #0
   31df4:	cmp	r8, #52	; 0x34
   31df8:	movls	r6, r0
   31dfc:	movls	r5, r1
   31e00:	str	r6, [sp, #28]
   31e04:	cmp	r7, r4
   31e08:	beq	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31e0c:	sub	r8, r7, ip
   31e10:	mvn	ip, r3
   31e14:	mov	r3, #0
   31e18:	cmn	ip, #1000	; 0x3e8
   31e1c:	mov	r0, ip
   31e20:	mvnlt	r0, #1000	; 0x3e8
   31e24:	mvn	r0, r0
   31e28:	sub	r0, r0, r7
   31e2c:	add	r0, r9, r0
   31e30:	ldrb	r1, [r7]
   31e34:	cmp	r1, #48	; 0x30
   31e38:	bne	31e68 <flatcc_json_parser_double@@Base+0x340>
   31e3c:	add	r1, r7, #1
   31e40:	cmp	r7, lr
   31e44:	sub	r0, r0, #1
   31e48:	add	r3, r3, #1
   31e4c:	mov	r7, r1
   31e50:	bne	31e30 <flatcc_json_parser_double@@Base+0x308>
   31e54:	mov	r7, r1
   31e58:	mov	r2, #0
   31e5c:	cmp	r7, r4
   31e60:	bne	31ebc <flatcc_json_parser_double@@Base+0x394>
   31e64:	b	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31e68:	sub	r1, r1, #49	; 0x31
   31e6c:	uxtb	r1, r1
   31e70:	cmp	r1, #8
   31e74:	bhi	31eb0 <flatcc_json_parser_double@@Base+0x388>
   31e78:	mvn	r2, #0
   31e7c:	mov	r1, r2
   31e80:	cmp	r0, #0
   31e84:	beq	31ea4 <flatcc_json_parser_double@@Base+0x37c>
   31e88:	ldrb	r2, [r7, -r1]
   31e8c:	sub	r0, r0, #1
   31e90:	sub	r2, r2, #48	; 0x30
   31e94:	uxtb	r6, r2
   31e98:	sub	r2, r1, #1
   31e9c:	cmp	r6, #10
   31ea0:	bcc	31e7c <flatcc_json_parser_double@@Base+0x354>
   31ea4:	sub	r3, r3, r1
   31ea8:	sub	r7, r7, r1
   31eac:	mov	sl, #1
   31eb0:	mov	r2, #0
   31eb4:	cmp	r7, r4
   31eb8:	beq	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31ebc:	ldrb	r0, [r7]
   31ec0:	cmp	r0, #46	; 0x2e
   31ec4:	bne	32068 <flatcc_json_parser_double@@Base+0x540>
   31ec8:	mov	r6, r7
   31ecc:	ldrb	r0, [r6, #1]!
   31ed0:	sub	r1, r0, #48	; 0x30
   31ed4:	uxtb	r1, r1
   31ed8:	cmp	r1, #9
   31edc:	bhi	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31ee0:	cmp	r7, lr
   31ee4:	beq	31fa8 <flatcc_json_parser_double@@Base+0x480>
   31ee8:	cmn	ip, #1000	; 0x3e8
   31eec:	mvn	r1, #1
   31ef0:	str	sl, [sp, #12]
   31ef4:	str	r6, [sp, #8]
   31ef8:	str	r8, [sp, #16]
   31efc:	mvnlt	ip, #1000	; 0x3e8
   31f00:	sub	r1, r1, ip
   31f04:	sub	r1, r1, r7
   31f08:	add	sl, r9, r1
   31f0c:	mov	r1, #0
   31f10:	mov	ip, r1
   31f14:	ldr	r1, [sp, #28]
   31f18:	movw	r6, #39320	; 0x9998
   31f1c:	movt	r6, #39321	; 0x9999
   31f20:	subs	r1, r6, r1
   31f24:	movw	r1, #39321	; 0x9999
   31f28:	movt	r1, #6553	; 0x1999
   31f2c:	sbcs	r1, r1, r5
   31f30:	bcc	31fb8 <flatcc_json_parser_double@@Base+0x490>
   31f34:	add	r1, r5, r5, lsl #2
   31f38:	ldr	r5, [sp, #28]
   31f3c:	uxtb	r0, r0
   31f40:	mov	r6, #10
   31f44:	lsl	r1, r1, #1
   31f48:	umlal	r0, r1, r5, r6
   31f4c:	add	r6, r7, ip
   31f50:	subs	r0, r0, #48	; 0x30
   31f54:	sbc	r5, r1, #0
   31f58:	cmp	sl, ip
   31f5c:	str	r0, [sp, #28]
   31f60:	beq	31f84 <flatcc_json_parser_double@@Base+0x45c>
   31f64:	ldrb	r0, [r6, #2]
   31f68:	mov	r8, r5
   31f6c:	add	r1, ip, #1
   31f70:	sub	r5, r0, #48	; 0x30
   31f74:	uxtb	r5, r5
   31f78:	cmp	r5, #10
   31f7c:	mov	r5, r8
   31f80:	bcc	31f10 <flatcc_json_parser_double@@Base+0x3e8>
   31f84:	ldr	r8, [sp, #16]
   31f88:	ldr	sl, [sp, #12]
   31f8c:	sub	r0, r3, #1
   31f90:	add	r7, r6, #2
   31f94:	sub	r3, r0, ip
   31f98:	ldr	r6, [sp, #8]
   31f9c:	cmp	r7, r4
   31fa0:	bne	32004 <flatcc_json_parser_double@@Base+0x4dc>
   31fa4:	b	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31fa8:	mov	r7, r6
   31fac:	cmp	r7, r4
   31fb0:	bne	32004 <flatcc_json_parser_double@@Base+0x4dc>
   31fb4:	b	32304 <flatcc_json_parser_double@@Base+0x7dc>
   31fb8:	ldr	sl, [sp, #12]
   31fbc:	ldr	r8, [sp, #16]
   31fc0:	add	r1, r7, ip
   31fc4:	sub	r3, r3, ip
   31fc8:	add	r7, r1, #1
   31fcc:	cmp	sl, #0
   31fd0:	bne	31ff8 <flatcc_json_parser_double@@Base+0x4d0>
   31fd4:	ldr	r6, [sp, #28]
   31fd8:	uxtb	r0, r0
   31fdc:	mov	sl, #1
   31fe0:	adds	r1, r6, #1
   31fe4:	adc	ip, r5, #0
   31fe8:	cmp	r0, #52	; 0x34
   31fec:	movhi	r6, r1
   31ff0:	movhi	r5, ip
   31ff4:	str	r6, [sp, #28]
   31ff8:	ldr	r6, [sp, #8]
   31ffc:	cmp	r7, r4
   32000:	beq	32304 <flatcc_json_parser_double@@Base+0x7dc>
   32004:	sub	r0, r7, r6
   32008:	add	r8, r0, r8
   3200c:	ldrb	r0, [r7]
   32010:	cmp	r0, #48	; 0x30
   32014:	bne	3202c <flatcc_json_parser_double@@Base+0x504>
   32018:	add	r7, r7, #1
   3201c:	add	r3, r3, #1
   32020:	cmp	r4, r7
   32024:	bne	3200c <flatcc_json_parser_double@@Base+0x4e4>
   32028:	b	32068 <flatcc_json_parser_double@@Base+0x540>
   3202c:	sub	r0, r0, #49	; 0x31
   32030:	uxtb	r0, r0
   32034:	cmp	r0, #8
   32038:	bhi	32068 <flatcc_json_parser_double@@Base+0x540>
   3203c:	add	r0, r7, #1
   32040:	mov	sl, #1
   32044:	mov	r7, r0
   32048:	cmp	r4, r0
   3204c:	beq	32068 <flatcc_json_parser_double@@Base+0x540>
   32050:	mov	r0, r7
   32054:	ldrb	r1, [r0], #1
   32058:	sub	r1, r1, #48	; 0x30
   3205c:	uxtb	r1, r1
   32060:	cmp	r1, #10
   32064:	bcc	32044 <flatcc_json_parser_double@@Base+0x51c>
   32068:	cmp	r7, r4
   3206c:	beq	32304 <flatcc_json_parser_double@@Base+0x7dc>
   32070:	ldrb	r0, [r7]
   32074:	mov	ip, #0
   32078:	orr	r0, r0, #32
   3207c:	cmp	r0, #101	; 0x65
   32080:	bne	320a0 <flatcc_json_parser_double@@Base+0x578>
   32084:	sub	r0, r4, r7
   32088:	cmp	r0, #2
   3208c:	bge	32118 <flatcc_json_parser_double@@Base+0x5f0>
   32090:	mov	r2, #0
   32094:	mov	r0, r2
   32098:	sub	sp, fp, #28
   3209c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   320a0:	mov	r0, #0
   320a4:	cmp	r7, r4
   320a8:	mov	r2, #0
   320ac:	beq	32304 <flatcc_json_parser_double@@Base+0x7dc>
   320b0:	ldr	r1, [sp, #28]
   320b4:	cmp	ip, #0
   320b8:	vmov.i32	d16, #0	; 0x00000000
   320bc:	rsbne	r0, r0, #0
   320c0:	orrs	r1, r1, r5
   320c4:	beq	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   320c8:	add	r1, r8, r3
   320cc:	add	r4, r1, r0
   320d0:	cmn	r4, #324	; 0x144
   320d4:	blt	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   320d8:	movw	r0, #310	; 0x136
   320dc:	cmp	r4, r0
   320e0:	ble	3214c <flatcc_json_parser_double@@Base+0x624>
   320e4:	vldr	d16, [pc, #988]	; 324c8 <flatcc_json_parser_double@@Base+0x9a0>
   320e8:	ldr	r0, [sp, #24]
   320ec:	vstr	d16, [r0]
   320f0:	ldr	r0, [sp, #20]
   320f4:	cmp	r0, #0
   320f8:	ldrne	r0, [sp, #24]
   320fc:	vldrne	d16, [r0]
   32100:	vnegne.f64	d16, d16
   32104:	vstrne	d16, [r0]
   32108:	mov	r2, r7
   3210c:	mov	r0, r2
   32110:	sub	sp, fp, #28
   32114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32118:	mov	r1, r7
   3211c:	ldrb	r0, [r1, #1]!
   32120:	cmp	r0, #45	; 0x2d
   32124:	beq	32244 <flatcc_json_parser_double@@Base+0x71c>
   32128:	mov	ip, #0
   3212c:	cmp	r0, #43	; 0x2b
   32130:	bne	32254 <flatcc_json_parser_double@@Base+0x72c>
   32134:	add	r1, r7, #2
   32138:	mov	r2, #0
   3213c:	cmp	r1, r4
   32140:	beq	32304 <flatcc_json_parser_double@@Base+0x7dc>
   32144:	mov	ip, #0
   32148:	b	32254 <flatcc_json_parser_double@@Base+0x72c>
   3214c:	mov	r0, #0
   32150:	cmp	r0, r5, lsr #21
   32154:	bne	322b4 <flatcc_json_parser_double@@Base+0x78c>
   32158:	cmp	r4, #22
   3215c:	bhi	322b4 <flatcc_json_parser_double@@Base+0x78c>
   32160:	ldr	r0, [sp, #28]
   32164:	mov	r1, r5
   32168:	bl	349c0 <flatcc_json_parser_struct_as_root@@Base+0x420>
   3216c:	sub	r2, r4, r8
   32170:	vmov	d16, r0, r1
   32174:	add	r0, r2, #22
   32178:	cmp	r0, #44	; 0x2c
   3217c:	bhi	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32180:	add	r1, pc, #0
   32184:	ldr	pc, [r1, r0, lsl #2]
   32188:	andeq	r2, r3, ip, lsr r2
   3218c:	andeq	r2, r3, r0, lsl r3
   32190:	andeq	r2, r3, r8, lsl r3
   32194:	andeq	r2, r3, r0, lsr #6
   32198:	andeq	r2, r3, r8, lsr #6
   3219c:	andeq	r2, r3, r0, lsr r3
   321a0:	andeq	r2, r3, r8, lsr r3
   321a4:	andeq	r2, r3, r0, asr #6
   321a8:	andeq	r2, r3, r8, asr #6
   321ac:	andeq	r2, r3, r0, asr r3
   321b0:	andeq	r2, r3, r8, asr r3
   321b4:	andeq	r2, r3, r0, ror #6
   321b8:	andeq	r2, r3, r8, ror #6
   321bc:	andeq	r2, r3, r0, ror r3
   321c0:	andeq	r2, r3, r8, ror r3
   321c4:	andeq	r2, r3, r0, lsl #7
   321c8:	andeq	r2, r3, r8, lsl #7
   321cc:	muleq	r3, r0, r3
   321d0:	muleq	r3, r8, r3
   321d4:	andeq	r2, r3, r0, lsr #7
   321d8:	andeq	r2, r3, r8, lsr #7
   321dc:			; <UNDEFINED> instruction: 0x000323b0
   321e0:	andeq	r2, r3, r8, ror #1
   321e4:			; <UNDEFINED> instruction: 0x000323bc
   321e8:	andeq	r2, r3, r8, asr #7
   321ec:	ldrdeq	r2, [r3], -r4
   321f0:	andeq	r2, r3, r0, ror #7
   321f4:	andeq	r2, r3, ip, ror #7
   321f8:	strdeq	r2, [r3], -r8
   321fc:	andeq	r2, r3, r4, lsl #8
   32200:	andeq	r2, r3, r0, lsl r4
   32204:	andeq	r2, r3, ip, lsl r4
   32208:	andeq	r2, r3, r8, lsr #8
   3220c:	andeq	r2, r3, r4, lsr r4
   32210:	andeq	r2, r3, r0, asr #8
   32214:	andeq	r2, r3, ip, asr #8
   32218:	andeq	r2, r3, r8, asr r4
   3221c:	andeq	r2, r3, r4, ror #8
   32220:	andeq	r2, r3, r0, ror r4
   32224:	andeq	r2, r3, ip, ror r4
   32228:	andeq	r2, r3, r8, lsl #9
   3222c:	muleq	r3, r4, r4
   32230:	andeq	r2, r3, r0, lsr #9
   32234:	andeq	r2, r3, ip, lsr #9
   32238:			; <UNDEFINED> instruction: 0x000324b8
   3223c:	vldr	d17, [pc, #812]	; 32570 <flatcc_json_parser_double@@Base+0xa48>
   32240:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32244:	add	r1, r7, #2
   32248:	mov	ip, #1
   3224c:	cmp	r1, r4
   32250:	beq	32300 <flatcc_json_parser_double@@Base+0x7d8>
   32254:	ldrb	r0, [r1]
   32258:	mov	r7, r5
   3225c:	mov	r2, #0
   32260:	sub	r0, r0, #48	; 0x30
   32264:	uxtb	r5, r0
   32268:	cmp	r5, #9
   3226c:	bhi	32304 <flatcc_json_parser_double@@Base+0x7dc>
   32270:	mov	r5, r7
   32274:	add	r7, r1, #1
   32278:	cmp	r1, lr
   3227c:	beq	320a4 <flatcc_json_parser_double@@Base+0x57c>
   32280:	ldrb	r1, [r7]
   32284:	sub	r2, r1, #48	; 0x30
   32288:	uxtb	r2, r2
   3228c:	cmp	r2, #9
   32290:	bhi	320a4 <flatcc_json_parser_double@@Base+0x57c>
   32294:	cmp	r0, #32768	; 0x8000
   32298:	add	r7, r7, #1
   3229c:	addlt	r0, r0, r0, lsl #2
   322a0:	addlt	r0, r1, r0, lsl #1
   322a4:	sublt	r0, r0, #48	; 0x30
   322a8:	cmp	r4, r7
   322ac:	bne	32280 <flatcc_json_parser_double@@Base+0x758>
   322b0:	b	320a4 <flatcc_json_parser_double@@Base+0x57c>
   322b4:	ldr	r0, [sp, #24]
   322b8:	mov	r1, r5
   322bc:	mov	r2, r4
   322c0:	mov	r3, r8
   322c4:	str	sl, [sp]
   322c8:	str	r0, [sp, #4]
   322cc:	ldr	r0, [sp, #28]
   322d0:	bl	2fc78 <grisu3_diy_fp_encode_double@@Base>
   322d4:	cmp	r0, #0
   322d8:	bne	320f0 <flatcc_json_parser_double@@Base+0x5c8>
   322dc:	add	r1, sp, #32
   322e0:	mov	r0, r9
   322e4:	bl	12b70 <strtod@plt>
   322e8:	ldr	r0, [sp, #24]
   322ec:	vstr	d0, [r0]
   322f0:	ldr	r0, [sp, #32]
   322f4:	cmp	r0, r7
   322f8:	movcc	r7, r0
   322fc:	b	32108 <flatcc_json_parser_double@@Base+0x5e0>
   32300:	mov	r2, #0
   32304:	mov	r0, r2
   32308:	sub	sp, fp, #28
   3230c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32310:	vldr	d17, [pc, #440]	; 324d0 <flatcc_json_parser_double@@Base+0x9a8>
   32314:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32318:	vldr	d17, [pc, #440]	; 324d8 <flatcc_json_parser_double@@Base+0x9b0>
   3231c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32320:	vldr	d17, [pc, #440]	; 324e0 <flatcc_json_parser_double@@Base+0x9b8>
   32324:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32328:	vldr	d17, [pc, #440]	; 324e8 <flatcc_json_parser_double@@Base+0x9c0>
   3232c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32330:	vldr	d17, [pc, #440]	; 324f0 <flatcc_json_parser_double@@Base+0x9c8>
   32334:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32338:	vldr	d17, [pc, #440]	; 324f8 <flatcc_json_parser_double@@Base+0x9d0>
   3233c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32340:	vldr	d17, [pc, #440]	; 32500 <flatcc_json_parser_double@@Base+0x9d8>
   32344:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32348:	vldr	d17, [pc, #440]	; 32508 <flatcc_json_parser_double@@Base+0x9e0>
   3234c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32350:	vldr	d17, [pc, #440]	; 32510 <flatcc_json_parser_double@@Base+0x9e8>
   32354:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32358:	vldr	d17, [pc, #440]	; 32518 <flatcc_json_parser_double@@Base+0x9f0>
   3235c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32360:	vldr	d17, [pc, #440]	; 32520 <flatcc_json_parser_double@@Base+0x9f8>
   32364:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32368:	vldr	d17, [pc, #440]	; 32528 <flatcc_json_parser_double@@Base+0xa00>
   3236c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32370:	vldr	d17, [pc, #440]	; 32530 <flatcc_json_parser_double@@Base+0xa08>
   32374:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32378:	vldr	d17, [pc, #440]	; 32538 <flatcc_json_parser_double@@Base+0xa10>
   3237c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32380:	vldr	d17, [pc, #440]	; 32540 <flatcc_json_parser_double@@Base+0xa18>
   32384:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32388:	vldr	d17, [pc, #440]	; 32548 <flatcc_json_parser_double@@Base+0xa20>
   3238c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32390:	vldr	d17, [pc, #440]	; 32550 <flatcc_json_parser_double@@Base+0xa28>
   32394:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   32398:	vldr	d17, [pc, #440]	; 32558 <flatcc_json_parser_double@@Base+0xa30>
   3239c:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   323a0:	vldr	d17, [pc, #440]	; 32560 <flatcc_json_parser_double@@Base+0xa38>
   323a4:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   323a8:	vldr	d17, [pc, #440]	; 32568 <flatcc_json_parser_double@@Base+0xa40>
   323ac:	b	323b4 <flatcc_json_parser_double@@Base+0x88c>
   323b0:	vmov.f64	d17, #36	; 0x41200000  10.0
   323b4:	vdiv.f64	d16, d16, d17
   323b8:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   323bc:	vmov.f64	d17, #36	; 0x41200000  10.0
   323c0:	vmul.f64	d16, d16, d17
   323c4:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   323c8:	vldr	d17, [pc, #408]	; 32568 <flatcc_json_parser_double@@Base+0xa40>
   323cc:	vmul.f64	d16, d16, d17
   323d0:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   323d4:	vldr	d17, [pc, #388]	; 32560 <flatcc_json_parser_double@@Base+0xa38>
   323d8:	vmul.f64	d16, d16, d17
   323dc:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   323e0:	vldr	d17, [pc, #368]	; 32558 <flatcc_json_parser_double@@Base+0xa30>
   323e4:	vmul.f64	d16, d16, d17
   323e8:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   323ec:	vldr	d17, [pc, #348]	; 32550 <flatcc_json_parser_double@@Base+0xa28>
   323f0:	vmul.f64	d16, d16, d17
   323f4:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   323f8:	vldr	d17, [pc, #328]	; 32548 <flatcc_json_parser_double@@Base+0xa20>
   323fc:	vmul.f64	d16, d16, d17
   32400:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32404:	vldr	d17, [pc, #308]	; 32540 <flatcc_json_parser_double@@Base+0xa18>
   32408:	vmul.f64	d16, d16, d17
   3240c:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32410:	vldr	d17, [pc, #288]	; 32538 <flatcc_json_parser_double@@Base+0xa10>
   32414:	vmul.f64	d16, d16, d17
   32418:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   3241c:	vldr	d17, [pc, #268]	; 32530 <flatcc_json_parser_double@@Base+0xa08>
   32420:	vmul.f64	d16, d16, d17
   32424:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32428:	vldr	d17, [pc, #248]	; 32528 <flatcc_json_parser_double@@Base+0xa00>
   3242c:	vmul.f64	d16, d16, d17
   32430:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32434:	vldr	d17, [pc, #228]	; 32520 <flatcc_json_parser_double@@Base+0x9f8>
   32438:	vmul.f64	d16, d16, d17
   3243c:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32440:	vldr	d17, [pc, #208]	; 32518 <flatcc_json_parser_double@@Base+0x9f0>
   32444:	vmul.f64	d16, d16, d17
   32448:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   3244c:	vldr	d17, [pc, #188]	; 32510 <flatcc_json_parser_double@@Base+0x9e8>
   32450:	vmul.f64	d16, d16, d17
   32454:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32458:	vldr	d17, [pc, #168]	; 32508 <flatcc_json_parser_double@@Base+0x9e0>
   3245c:	vmul.f64	d16, d16, d17
   32460:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32464:	vldr	d17, [pc, #148]	; 32500 <flatcc_json_parser_double@@Base+0x9d8>
   32468:	vmul.f64	d16, d16, d17
   3246c:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32470:	vldr	d17, [pc, #128]	; 324f8 <flatcc_json_parser_double@@Base+0x9d0>
   32474:	vmul.f64	d16, d16, d17
   32478:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   3247c:	vldr	d17, [pc, #108]	; 324f0 <flatcc_json_parser_double@@Base+0x9c8>
   32480:	vmul.f64	d16, d16, d17
   32484:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32488:	vldr	d17, [pc, #88]	; 324e8 <flatcc_json_parser_double@@Base+0x9c0>
   3248c:	vmul.f64	d16, d16, d17
   32490:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   32494:	vldr	d17, [pc, #68]	; 324e0 <flatcc_json_parser_double@@Base+0x9b8>
   32498:	vmul.f64	d16, d16, d17
   3249c:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   324a0:	vldr	d17, [pc, #48]	; 324d8 <flatcc_json_parser_double@@Base+0x9b0>
   324a4:	vmul.f64	d16, d16, d17
   324a8:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   324ac:	vldr	d17, [pc, #28]	; 324d0 <flatcc_json_parser_double@@Base+0x9a8>
   324b0:	vmul.f64	d16, d16, d17
   324b4:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   324b8:	vldr	d17, [pc, #176]	; 32570 <flatcc_json_parser_double@@Base+0xa48>
   324bc:	vmul.f64	d16, d16, d17
   324c0:	b	320e8 <flatcc_json_parser_double@@Base+0x5c0>
   324c4:	nop	{0}
   324c8:	andeq	r0, r0, r0
   324cc:	svcvc	0x00f00000	; IMB
   324d0:	usatle	lr, #2, r0, asr #30
   324d4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   324d8:	ldmvc	r5!, {r6, sl, fp, pc}
   324dc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   324e0:	addsvs	r3, r1, r0, lsl #26
   324e4:	mvnmi	r5, #228, 16	; 0xe40000
   324e8:	strbvs	ip, [lr, -r0, lsl #16]
   324ec:			; <UNDEFINED> instruction: 0x43abc16d
   324f0:	ldrbhi	sl, [r8]
   324f4:	cmnmi	r6, #1459617792	; 0x57000000
   324f8:	strbcc	r8, [r0, r0]!
   324fc:	movtmi	ip, #4985	; 0x1379
   32500:	ldrtcs	r0, [r4], -r0
   32504:	movwmi	r6, #52213	; 0xcbf5
   32508:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3250c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   32510:	strb	r0, [r0, #-0]
   32514:	adcmi	r3, r2, #156	; 0x9c
   32518:	andge	r0, r0, #0
   3251c:	rsbmi	r1, sp, #148, 20	; 0x94000
   32520:	stmda	r0, {}	; <UNPREDICTABLE>
   32524:	eorsmi	r4, r7, #7733248	; 0x760000
   32528:	andcs	r0, r0, r0
   3252c:	andmi	sl, r2, #95	; 0x5f
   32530:	andeq	r0, r0, r0
   32534:	bicmi	ip, sp, r5, ror #26
   32538:	andeq	r0, r0, r0
   3253c:	orrsmi	sp, r7, r4, lsl #15
   32540:	andeq	r0, r0, r0
   32544:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   32548:	andeq	r0, r0, r0
   3254c:	smlawbmi	lr, r0, r4, r8
   32550:	andeq	r0, r0, r0
   32554:	rscsmi	r6, r8, r0, lsl #20
   32558:	andeq	r0, r0, r0
   3255c:	sbcmi	r8, r3, r0, lsl #16
   32560:	andeq	r0, r0, r0
   32564:	addmi	r4, pc, r0
   32568:	andeq	r0, r0, r0
   3256c:	subsmi	r0, r9, r0
   32570:			; <UNDEFINED> instruction: 0x064dd592
   32574:	strmi	pc, [r0], #207	; 0xcf

00032578 <flatcc_json_parser_float@@Base>:
   32578:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3257c:	add	fp, sp, #24
   32580:	vpush	{d8-d9}
   32584:	sub	sp, sp, #8
   32588:	mov	r8, r0
   3258c:	mov	r0, #0
   32590:	mov	r6, r1
   32594:	cmp	r1, r2
   32598:	str	r0, [r3]
   3259c:	beq	32660 <flatcc_json_parser_float@@Base+0xe8>
   325a0:	mov	r0, r6
   325a4:	mov	r5, r2
   325a8:	mov	r7, r3
   325ac:	ldrb	r1, [r0], #1
   325b0:	cmp	r1, #45	; 0x2d
   325b4:	movne	r0, r6
   325b8:	sub	r2, r2, r0
   325bc:	cmp	r2, #2
   325c0:	blt	325ec <flatcc_json_parser_float@@Base+0x74>
   325c4:	sub	r1, r1, #45	; 0x2d
   325c8:	clz	r1, r1
   325cc:	lsr	r1, r1, #5
   325d0:	ldrb	r1, [r6, r1]
   325d4:	cmp	r1, #46	; 0x2e
   325d8:	beq	32674 <flatcc_json_parser_float@@Base+0xfc>
   325dc:	cmp	r1, #48	; 0x30
   325e0:	ldrbeq	r0, [r0, #1]
   325e4:	cmpeq	r0, #48	; 0x30
   325e8:	beq	32674 <flatcc_json_parser_float@@Base+0xfc>
   325ec:	sub	r1, r5, r6
   325f0:	mov	r2, sp
   325f4:	mov	r0, r6
   325f8:	bl	31c20 <flatcc_json_parser_double@@Base+0xf8>
   325fc:	vldr	d16, [sp]
   32600:	mov	r4, r0
   32604:	add	r0, pc, #176	; 0xb0
   32608:	vcmpe.f64	d16, #0.0
   3260c:	vcvt.f32.f64	s16, d16
   32610:	vmrs	APSR_nzcv, fpscr
   32614:	vmov.f32	s0, s16
   32618:	addmi	r0, r0, #4
   3261c:	vldr	s18, [r0]
   32620:	bl	12ae0 <__isinff@plt>
   32624:	cmp	r0, #0
   32628:	movne	r4, r6
   3262c:	vseleq.f32	s0, s16, s18
   32630:	cmp	r4, #0
   32634:	vstr	s0, [r7]
   32638:	cmpne	r4, r6
   3263c:	bne	32664 <flatcc_json_parser_float@@Base+0xec>
   32640:	bl	12ae0 <__isinff@plt>
   32644:	ldr	r1, [r8, #24]
   32648:	cmp	r0, #0
   3264c:	beq	32684 <flatcc_json_parser_float@@Base+0x10c>
   32650:	cmp	r1, #0
   32654:	bne	326a8 <flatcc_json_parser_float@@Base+0x130>
   32658:	mov	r0, #7
   3265c:	b	32690 <flatcc_json_parser_float@@Base+0x118>
   32660:	mov	r4, r6
   32664:	mov	r0, r4
   32668:	sub	sp, fp, #40	; 0x28
   3266c:	vpop	{d8-d9}
   32670:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32674:	ldr	r0, [r8, #24]
   32678:	cmp	r0, #0
   3267c:	bne	326a8 <flatcc_json_parser_float@@Base+0x130>
   32680:	b	3268c <flatcc_json_parser_float@@Base+0x114>
   32684:	cmp	r1, #0
   32688:	bne	326a8 <flatcc_json_parser_float@@Base+0x130>
   3268c:	mov	r0, #6
   32690:	str	r6, [r8, #36]	; 0x24
   32694:	add	r2, r6, #1
   32698:	ldr	r1, [r8, #4]
   3269c:	sub	r1, r2, r1
   326a0:	str	r1, [r8, #20]
   326a4:	str	r0, [r8, #24]
   326a8:	mov	r4, r5
   326ac:	mov	r0, r4
   326b0:	sub	sp, fp, #40	; 0x28
   326b4:	vpop	{d8-d9}
   326b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   326bc:	svcvc	0x00800000
   326c0:			; <UNDEFINED> instruction: 0xff800000

000326c4 <flatcc_json_parser_integer@@Base>:
   326c4:	push	{r4, r5, r6, r7, fp, lr}
   326c8:	add	fp, sp, #16
   326cc:	mov	ip, r1
   326d0:	cmp	r1, r2
   326d4:	beq	327c0 <flatcc_json_parser_integer@@Base+0xfc>
   326d8:	ldrb	r1, [ip]
   326dc:	mov	r4, #0
   326e0:	sub	r1, r1, #45	; 0x2d
   326e4:	clz	r1, r1
   326e8:	lsr	r1, r1, #5
   326ec:	str	r1, [r3]
   326f0:	add	r1, ip, r1
   326f4:	cmp	r1, r2
   326f8:	beq	327ac <flatcc_json_parser_integer@@Base+0xe8>
   326fc:	mov	lr, #10
   32700:	mov	r5, #0
   32704:	ldrb	r6, [r1]
   32708:	sub	r7, r6, #48	; 0x30
   3270c:	uxtb	r7, r7
   32710:	cmp	r7, #9
   32714:	bhi	327c8 <flatcc_json_parser_integer@@Base+0x104>
   32718:	add	r7, r5, r5, lsl #2
   3271c:	lsl	r7, r7, #1
   32720:	umlal	r6, r7, r4, lr
   32724:	subs	r6, r6, #48	; 0x30
   32728:	sbc	r7, r7, #0
   3272c:	subs	r4, r6, r4
   32730:	sbcs	r4, r7, r5
   32734:	bcc	327d8 <flatcc_json_parser_integer@@Base+0x114>
   32738:	add	r1, r1, #1
   3273c:	mov	r4, r6
   32740:	mov	r5, r7
   32744:	cmp	r2, r1
   32748:	bne	32704 <flatcc_json_parser_integer@@Base+0x40>
   3274c:	mov	r3, #0
   32750:	mov	r1, r2
   32754:	mov	r4, r6
   32758:	mov	r5, r7
   3275c:	cmp	r1, ip
   32760:	beq	327c0 <flatcc_json_parser_integer@@Base+0xfc>
   32764:	cmp	r3, #0
   32768:	beq	327f4 <flatcc_json_parser_integer@@Base+0x130>
   3276c:	ldrb	r3, [r1]
   32770:	cmp	r3, #46	; 0x2e
   32774:	cmpne	r3, #101	; 0x65
   32778:	bne	327ec <flatcc_json_parser_integer@@Base+0x128>
   3277c:	ldr	r3, [r0, #24]
   32780:	cmp	r3, #0
   32784:	bne	327e4 <flatcc_json_parser_integer@@Base+0x120>
   32788:	str	r1, [r0, #36]	; 0x24
   3278c:	add	r1, r1, #1
   32790:	mov	r3, #12
   32794:	ldr	r7, [r0, #4]
   32798:	sub	r1, r1, r7
   3279c:	str	r1, [r0, #20]
   327a0:	str	r3, [r0, #24]
   327a4:	mov	r0, r2
   327a8:	pop	{r4, r5, r6, r7, fp, pc}
   327ac:	mov	r1, r2
   327b0:	mov	r5, #0
   327b4:	mov	r3, #0
   327b8:	cmp	r1, ip
   327bc:	bne	32764 <flatcc_json_parser_integer@@Base+0xa0>
   327c0:	mov	r0, ip
   327c4:	pop	{r4, r5, r6, r7, fp, pc}
   327c8:	mov	r3, #1
   327cc:	cmp	r1, ip
   327d0:	bne	32764 <flatcc_json_parser_integer@@Base+0xa0>
   327d4:	b	327c0 <flatcc_json_parser_integer@@Base+0xfc>
   327d8:	ldr	r7, [r0, #24]
   327dc:	cmp	r7, #0
   327e0:	beq	32808 <flatcc_json_parser_integer@@Base+0x144>
   327e4:	mov	r0, r2
   327e8:	pop	{r4, r5, r6, r7, fp, pc}
   327ec:	cmp	r3, #69	; 0x45
   327f0:	beq	3277c <flatcc_json_parser_integer@@Base+0xb8>
   327f4:	ldr	r0, [fp, #8]
   327f8:	mov	ip, r1
   327fc:	strd	r4, [r0]
   32800:	mov	r0, ip
   32804:	pop	{r4, r5, r6, r7, fp, pc}
   32808:	str	r1, [r0, #36]	; 0x24
   3280c:	cmp	r3, #0
   32810:	mov	r7, #8
   32814:	add	r1, r1, #1
   32818:	ldr	r3, [r0, #4]
   3281c:	movweq	r7, #7
   32820:	sub	r1, r1, r3
   32824:	str	r1, [r0, #20]
   32828:	str	r7, [r0, #24]
   3282c:	mov	r0, r2
   32830:	pop	{r4, r5, r6, r7, fp, pc}

00032834 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   32834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32838:	add	fp, sp, #28
   3283c:	sub	sp, sp, #28
   32840:	ldr	r9, [fp, #8]
   32844:	mov	r6, r3
   32848:	mov	r4, r2
   3284c:	mov	r5, r0
   32850:	cmp	r1, r2
   32854:	beq	3289c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   32858:	ldrb	r0, [r1]
   3285c:	cmp	r0, #34	; 0x22
   32860:	bne	3289c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   32864:	add	sl, r1, #1
   32868:	cmp	sl, r4
   3286c:	beq	328a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   32870:	mov	r7, sl
   32874:	ldrb	r1, [r7]
   32878:	cmp	r1, #32
   3287c:	bcc	32aec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   32880:	cmp	r1, #34	; 0x22
   32884:	cmpne	r1, #92	; 0x5c
   32888:	beq	3294c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x118>
   3288c:	add	r7, r7, #1
   32890:	cmp	r4, r7
   32894:	bne	32874 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   32898:	b	328a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   3289c:	ldr	r0, [r5, #24]
   328a0:	cmp	r0, #0
   328a4:	beq	328bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x88>
   328a8:	ldr	r0, [r5, #24]
   328ac:	cmp	r0, #0
   328b0:	mov	r0, r4
   328b4:	bne	32908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   328b8:	b	328e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb4>
   328bc:	str	r1, [r5, #36]	; 0x24
   328c0:	add	r1, r1, #1
   328c4:	mov	r0, #16
   328c8:	ldr	r2, [r5, #4]
   328cc:	sub	r1, r1, r2
   328d0:	str	r1, [r5, #20]
   328d4:	str	r0, [r5, #24]
   328d8:	ldr	r0, [r5, #24]
   328dc:	cmp	r0, #0
   328e0:	mov	r0, r4
   328e4:	bne	32908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   328e8:	str	r4, [r5, #36]	; 0x24
   328ec:	mov	r0, #20
   328f0:	add	r2, r4, #1
   328f4:	ldr	r1, [r5, #4]
   328f8:	sub	r1, r2, r1
   328fc:	str	r1, [r5, #20]
   32900:	str	r0, [r5, #24]
   32904:	mov	r0, r4
   32908:	mov	r1, #0
   3290c:	str	r1, [r6]
   32910:	ldr	r1, [r5, #24]
   32914:	cmp	r1, #0
   32918:	bne	32940 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   3291c:	str	r0, [r5, #36]	; 0x24
   32920:	mov	r1, #31
   32924:	cmp	r9, #0
   32928:	add	r0, r0, #1
   3292c:	ldr	r2, [r5, #4]
   32930:	movwne	r1, #32
   32934:	sub	r0, r0, r2
   32938:	str	r0, [r5, #20]
   3293c:	str	r1, [r5, #24]
   32940:	mov	r0, r4
   32944:	sub	sp, fp, #28
   32948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3294c:	cmp	r4, r7
   32950:	mov	r0, r4
   32954:	beq	32908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   32958:	cmp	r1, #34	; 0x22
   3295c:	bne	32988 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   32960:	sub	r1, r7, sl
   32964:	and	r0, r1, #3
   32968:	str	r1, [sp, #20]
   3296c:	lsr	r1, r1, #2
   32970:	add	r8, r1, r1, lsl #1
   32974:	cmp	r0, #2
   32978:	beq	32990 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15c>
   3297c:	cmp	r0, #3
   32980:	addeq	r8, r8, #2
   32984:	b	32994 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   32988:	mov	r0, r7
   3298c:	b	32908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   32990:	add	r8, r8, #1
   32994:	ldr	r0, [r5]
   32998:	mov	r1, #1
   3299c:	mov	r2, #1
   329a0:	mvn	r3, #0
   329a4:	bl	2caac <flatcc_builder_start_vector@@Base>
   329a8:	cmp	r0, #0
   329ac:	beq	329ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   329b0:	mov	r0, #0
   329b4:	str	r0, [r6]
   329b8:	ldr	r0, [r5, #24]
   329bc:	cmp	r0, #0
   329c0:	bne	32940 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   329c4:	mov	r0, #33	; 0x21
   329c8:	str	r7, [r5, #36]	; 0x24
   329cc:	add	r2, r7, #1
   329d0:	ldr	r1, [r5, #4]
   329d4:	sub	r1, r2, r1
   329d8:	str	r1, [r5, #20]
   329dc:	str	r0, [r5, #24]
   329e0:	mov	r0, r4
   329e4:	sub	sp, fp, #28
   329e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   329ec:	ldr	r0, [r5]
   329f0:	mov	r1, r8
   329f4:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   329f8:	cmp	r0, #0
   329fc:	beq	329b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   32a00:	movw	r2, #27360	; 0x6ae0
   32a04:	mov	r1, r8
   32a08:	movw	r8, #27104	; 0x69e0
   32a0c:	str	r0, [sp]
   32a10:	str	r0, [sp, #12]
   32a14:	ldr	r0, [sp, #20]
   32a18:	cmp	r9, #0
   32a1c:	add	lr, sp, #24
   32a20:	mov	ip, sl
   32a24:	movt	r2, #3
   32a28:	movt	r8, #3
   32a2c:	str	r1, [sp, #4]
   32a30:	movne	r8, r2
   32a34:	cmp	r1, #0
   32a38:	mvneq	r1, #0
   32a3c:	str	r1, [sp, #16]
   32a40:	mov	r1, #0
   32a44:	str	r0, [sp, #8]
   32a48:	cmp	r0, r1
   32a4c:	beq	32b0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   32a50:	ldrb	r2, [ip, r1]
   32a54:	ldrb	r3, [r8, r2]
   32a58:	cmp	r3, #64	; 0x40
   32a5c:	strb	r3, [lr, r1]
   32a60:	bcc	32a78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   32a64:	cmp	r3, #65	; 0x41
   32a68:	bne	32b48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x314>
   32a6c:	sub	r1, r1, #1
   32a70:	sub	r0, r0, #1
   32a74:	add	ip, ip, #1
   32a78:	add	r1, r1, #1
   32a7c:	cmp	r1, #4
   32a80:	bcc	32a48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x214>
   32a84:	ldr	lr, [sp, #16]
   32a88:	cmp	lr, #3
   32a8c:	bcc	32b3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   32a90:	ldrb	r2, [sp, #25]
   32a94:	ldrb	r1, [sp, #24]
   32a98:	subs	lr, lr, #3
   32a9c:	sub	r0, r0, #4
   32aa0:	add	ip, ip, #4
   32aa4:	str	lr, [sp, #16]
   32aa8:	add	lr, sp, #24
   32aac:	lsr	r3, r2, #4
   32ab0:	orr	r1, r3, r1, lsl #2
   32ab4:	ldr	r3, [sp, #12]
   32ab8:	strb	r1, [r3]
   32abc:	ldrb	r1, [sp, #26]
   32ac0:	lsr	r1, r1, #2
   32ac4:	orr	r1, r1, r2, lsl #4
   32ac8:	strb	r1, [r3, #1]
   32acc:	ldrb	r1, [sp, #26]
   32ad0:	ldrb	r2, [sp, #27]
   32ad4:	orr	r1, r2, r1, lsl #6
   32ad8:	strb	r1, [r3, #2]
   32adc:	add	r3, r3, #3
   32ae0:	str	r3, [sp, #12]
   32ae4:	bne	32a40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   32ae8:	b	32bf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   32aec:	ldr	r0, [r5, #24]
   32af0:	cmp	r0, #0
   32af4:	mov	r0, r4
   32af8:	bne	32908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   32afc:	str	r7, [r5, #36]	; 0x24
   32b00:	mov	r0, #17
   32b04:	add	r2, r7, #1
   32b08:	b	328f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   32b0c:	mov	r1, r0
   32b10:	mov	r3, r0
   32b14:	ldr	r2, [sp, #16]
   32b18:	sub	r0, r0, r3
   32b1c:	cmp	r1, #0
   32b20:	beq	32bf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   32b24:	cmp	r1, #3
   32b28:	beq	32b88 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x354>
   32b2c:	cmp	r1, #2
   32b30:	ldrbeq	r1, [sp, #25]
   32b34:	tsteq	r1, #15
   32b38:	beq	32be0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3ac>
   32b3c:	ldr	r0, [sp, #20]
   32b40:	ldr	r1, [sp, #8]
   32b44:	b	32c08 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d4>
   32b48:	cmp	r3, #66	; 0x42
   32b4c:	bne	32bc8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   32b50:	add	r2, r1, #1
   32b54:	mov	r3, r2
   32b58:	cmp	r2, r0
   32b5c:	bcs	32b14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   32b60:	cmp	r3, #7
   32b64:	bhi	32b14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   32b68:	ldrb	r2, [ip, r3]
   32b6c:	ldrb	r2, [r8, r2]
   32b70:	sub	r2, r2, #65	; 0x41
   32b74:	uxtb	lr, r2
   32b78:	add	r2, r3, #1
   32b7c:	cmp	lr, #2
   32b80:	bcc	32b54 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x320>
   32b84:	b	32b14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
   32b88:	cmp	r2, #2
   32b8c:	bcc	32b3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   32b90:	ldrb	r1, [sp, #26]
   32b94:	ands	r2, r1, #3
   32b98:	bne	32b3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   32b9c:	ldrb	r3, [sp, #25]
   32ba0:	ldrb	ip, [sp, #24]
   32ba4:	lsl	r2, r3, #4
   32ba8:	orr	r1, r2, r1, lsr #2
   32bac:	ldr	r2, [sp, #12]
   32bb0:	strb	r1, [r2, #1]
   32bb4:	lsr	r1, r3, #4
   32bb8:	orr	r1, r1, ip, lsl #2
   32bbc:	strb	r1, [r2]
   32bc0:	add	r2, r2, #2
   32bc4:	b	32bf4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c0>
   32bc8:	mov	r3, r1
   32bcc:	ldr	r2, [sp, #16]
   32bd0:	sub	r0, r0, r3
   32bd4:	cmp	r1, #0
   32bd8:	bne	32b24 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   32bdc:	b	32bf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   32be0:	ldrb	r2, [sp, #24]
   32be4:	lsl	r2, r2, #2
   32be8:	orr	r1, r2, r1, lsr #4
   32bec:	ldr	r2, [sp, #12]
   32bf0:	strb	r1, [r2], #1
   32bf4:	str	r2, [sp, #12]
   32bf8:	cmp	r0, #0
   32bfc:	beq	32c14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   32c00:	mov	r1, r0
   32c04:	ldr	r0, [sp, #20]
   32c08:	sub	r0, r0, r1
   32c0c:	add	r0, sl, r0
   32c10:	b	32908 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   32c14:	ldr	r0, [sp]
   32c18:	ldr	r1, [sp, #12]
   32c1c:	sub	r0, r1, r0
   32c20:	ldr	r1, [sp, #4]
   32c24:	cmp	r1, r0
   32c28:	bls	32c40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40c>
   32c2c:	sub	r1, r1, r0
   32c30:	ldr	r0, [r5]
   32c34:	bl	2c8e0 <flatcc_builder_truncate_vector@@Base>
   32c38:	cmp	r0, #0
   32c3c:	bne	329b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   32c40:	ldr	r0, [r5]
   32c44:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   32c48:	cmp	r0, #0
   32c4c:	str	r0, [r6]
   32c50:	beq	329b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   32c54:	ldrb	r0, [r7]
   32c58:	cmp	r0, #34	; 0x22
   32c5c:	bne	32c70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x43c>
   32c60:	add	r4, r7, #1
   32c64:	mov	r0, r4
   32c68:	sub	sp, fp, #28
   32c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c70:	ldr	r0, [r5, #24]
   32c74:	cmp	r0, #0
   32c78:	bne	32940 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   32c7c:	mov	r0, #20
   32c80:	b	329c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x194>

00032c84 <flatcc_json_parser_build_string@@Base>:
   32c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32c88:	add	fp, sp, #28
   32c8c:	sub	sp, sp, #4
   32c90:	mov	sl, r3
   32c94:	mov	r4, r2
   32c98:	mov	r5, r0
   32c9c:	cmp	r1, r2
   32ca0:	beq	32cfc <flatcc_json_parser_build_string@@Base+0x78>
   32ca4:	ldrb	r0, [r1]
   32ca8:	cmp	r0, #34	; 0x22
   32cac:	bne	32cfc <flatcc_json_parser_build_string@@Base+0x78>
   32cb0:	add	r1, r1, #1
   32cb4:	mov	r6, r4
   32cb8:	cmp	r1, r4
   32cbc:	beq	32d0c <flatcc_json_parser_build_string@@Base+0x88>
   32cc0:	mov	r6, r1
   32cc4:	ldrb	r0, [r6]
   32cc8:	cmp	r0, #32
   32ccc:	bcc	32f40 <flatcc_json_parser_build_string@@Base+0x2bc>
   32cd0:	cmp	r0, #34	; 0x22
   32cd4:	cmpne	r0, #92	; 0x5c
   32cd8:	beq	32e40 <flatcc_json_parser_build_string@@Base+0x1bc>
   32cdc:	add	r6, r6, #1
   32ce0:	cmp	r4, r6
   32ce4:	bne	32cc4 <flatcc_json_parser_build_string@@Base+0x40>
   32ce8:	mov	r6, r1
   32cec:	ldr	r0, [r5, #24]
   32cf0:	cmp	r0, #0
   32cf4:	bne	32d34 <flatcc_json_parser_build_string@@Base+0xb0>
   32cf8:	b	32d18 <flatcc_json_parser_build_string@@Base+0x94>
   32cfc:	ldr	r0, [r5, #24]
   32d00:	mov	r6, r4
   32d04:	cmp	r0, #0
   32d08:	beq	32e10 <flatcc_json_parser_build_string@@Base+0x18c>
   32d0c:	ldr	r0, [r5, #24]
   32d10:	cmp	r0, #0
   32d14:	bne	32d34 <flatcc_json_parser_build_string@@Base+0xb0>
   32d18:	str	r4, [r5, #36]	; 0x24
   32d1c:	add	r2, r4, #1
   32d20:	mov	r0, #20
   32d24:	ldr	r1, [r5, #4]
   32d28:	sub	r1, r2, r1
   32d2c:	str	r1, [r5, #20]
   32d30:	str	r0, [r5, #24]
   32d34:	mov	r7, r4
   32d38:	ldr	r0, [r5]
   32d3c:	bl	2cec8 <flatcc_builder_start_string@@Base>
   32d40:	cmp	r0, #0
   32d44:	bne	32f64 <flatcc_json_parser_build_string@@Base+0x2e0>
   32d48:	ldr	r0, [r5]
   32d4c:	sub	r2, r7, r6
   32d50:	mov	r1, r6
   32d54:	bl	2c738 <flatcc_builder_append_string@@Base>
   32d58:	cmp	r0, #0
   32d5c:	beq	32f64 <flatcc_json_parser_build_string@@Base+0x2e0>
   32d60:	cmp	r7, r4
   32d64:	mov	r6, r4
   32d68:	beq	32ee4 <flatcc_json_parser_build_string@@Base+0x260>
   32d6c:	mov	r8, sp
   32d70:	add	r9, r8, #1
   32d74:	ldrb	r0, [r7]
   32d78:	cmp	r0, #34	; 0x22
   32d7c:	beq	32ee0 <flatcc_json_parser_build_string@@Base+0x25c>
   32d80:	mov	r0, r5
   32d84:	mov	r1, r7
   32d88:	mov	r2, r4
   32d8c:	mov	r3, r8
   32d90:	bl	30358 <flatcc_json_parser_string_escape@@Base>
   32d94:	mov	r6, r0
   32d98:	ldr	r0, [r5]
   32d9c:	ldrb	r2, [sp]
   32da0:	mov	r1, r9
   32da4:	bl	2c738 <flatcc_builder_append_string@@Base>
   32da8:	cmp	r0, #0
   32dac:	beq	32f38 <flatcc_json_parser_build_string@@Base+0x2b4>
   32db0:	cmp	r6, r4
   32db4:	beq	32e8c <flatcc_json_parser_build_string@@Base+0x208>
   32db8:	mov	r7, r6
   32dbc:	ldrb	r0, [r7]
   32dc0:	cmp	r0, #32
   32dc4:	bcc	32eac <flatcc_json_parser_build_string@@Base+0x228>
   32dc8:	cmp	r0, #34	; 0x22
   32dcc:	cmpne	r0, #92	; 0x5c
   32dd0:	beq	32de4 <flatcc_json_parser_build_string@@Base+0x160>
   32dd4:	add	r7, r7, #1
   32dd8:	cmp	r4, r7
   32ddc:	bne	32dbc <flatcc_json_parser_build_string@@Base+0x138>
   32de0:	b	32e8c <flatcc_json_parser_build_string@@Base+0x208>
   32de4:	cmp	r4, r7
   32de8:	beq	32ed8 <flatcc_json_parser_build_string@@Base+0x254>
   32dec:	ldr	r0, [r5]
   32df0:	sub	r2, r7, r6
   32df4:	mov	r1, r6
   32df8:	bl	2c738 <flatcc_builder_append_string@@Base>
   32dfc:	cmp	r0, #0
   32e00:	beq	32f64 <flatcc_json_parser_build_string@@Base+0x2e0>
   32e04:	cmp	r4, r7
   32e08:	bne	32d74 <flatcc_json_parser_build_string@@Base+0xf0>
   32e0c:	b	32ed8 <flatcc_json_parser_build_string@@Base+0x254>
   32e10:	str	r1, [r5, #36]	; 0x24
   32e14:	add	r1, r1, #1
   32e18:	mov	r0, #16
   32e1c:	mov	r6, r4
   32e20:	ldr	r2, [r5, #4]
   32e24:	sub	r1, r1, r2
   32e28:	str	r1, [r5, #20]
   32e2c:	str	r0, [r5, #24]
   32e30:	ldr	r0, [r5, #24]
   32e34:	cmp	r0, #0
   32e38:	bne	32d34 <flatcc_json_parser_build_string@@Base+0xb0>
   32e3c:	b	32d18 <flatcc_json_parser_build_string@@Base+0x94>
   32e40:	cmp	r4, r6
   32e44:	beq	32f4c <flatcc_json_parser_build_string@@Base+0x2c8>
   32e48:	cmp	r0, #34	; 0x22
   32e4c:	bne	32e84 <flatcc_json_parser_build_string@@Base+0x200>
   32e50:	ldr	r0, [r5]
   32e54:	sub	r2, r6, r1
   32e58:	bl	2f010 <flatcc_builder_create_string@@Base>
   32e5c:	cmp	r6, r4
   32e60:	str	r0, [sl]
   32e64:	beq	32ef8 <flatcc_json_parser_build_string@@Base+0x274>
   32e68:	ldrb	r0, [r6]
   32e6c:	cmp	r0, #34	; 0x22
   32e70:	bne	32ef8 <flatcc_json_parser_build_string@@Base+0x274>
   32e74:	add	r4, r6, #1
   32e78:	mov	r0, r4
   32e7c:	sub	sp, fp, #28
   32e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e84:	mov	r7, r6
   32e88:	b	32f50 <flatcc_json_parser_build_string@@Base+0x2cc>
   32e8c:	ldr	r0, [r5, #24]
   32e90:	mov	r6, r4
   32e94:	cmp	r0, #0
   32e98:	bne	32ee4 <flatcc_json_parser_build_string@@Base+0x260>
   32e9c:	str	r4, [r5, #36]	; 0x24
   32ea0:	mov	r0, #20
   32ea4:	add	r2, r4, #1
   32ea8:	b	32ec8 <flatcc_json_parser_build_string@@Base+0x244>
   32eac:	ldr	r0, [r5, #24]
   32eb0:	mov	r6, r4
   32eb4:	cmp	r0, #0
   32eb8:	bne	32ee4 <flatcc_json_parser_build_string@@Base+0x260>
   32ebc:	str	r7, [r5, #36]	; 0x24
   32ec0:	mov	r0, #17
   32ec4:	add	r2, r7, #1
   32ec8:	ldr	r1, [r5, #4]
   32ecc:	sub	r1, r2, r1
   32ed0:	str	r1, [r5, #20]
   32ed4:	str	r0, [r5, #24]
   32ed8:	mov	r6, r4
   32edc:	b	32ee4 <flatcc_json_parser_build_string@@Base+0x260>
   32ee0:	mov	r6, r7
   32ee4:	ldr	r0, [r5]
   32ee8:	bl	2f17c <flatcc_builder_end_string@@Base>
   32eec:	cmp	r6, r4
   32ef0:	str	r0, [sl]
   32ef4:	bne	32e68 <flatcc_json_parser_build_string@@Base+0x1e4>
   32ef8:	ldr	r0, [r5, #24]
   32efc:	cmp	r0, #0
   32f00:	beq	32f10 <flatcc_json_parser_build_string@@Base+0x28c>
   32f04:	mov	r0, r4
   32f08:	sub	sp, fp, #28
   32f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f10:	str	r6, [r5, #36]	; 0x24
   32f14:	add	r2, r6, #1
   32f18:	mov	r0, #20
   32f1c:	ldr	r1, [r5, #4]
   32f20:	sub	r1, r2, r1
   32f24:	str	r1, [r5, #20]
   32f28:	str	r0, [r5, #24]
   32f2c:	mov	r0, r4
   32f30:	sub	sp, fp, #28
   32f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f38:	mov	r4, r6
   32f3c:	b	32f68 <flatcc_json_parser_build_string@@Base+0x2e4>
   32f40:	ldr	r0, [r5, #24]
   32f44:	cmp	r0, #0
   32f48:	beq	32f7c <flatcc_json_parser_build_string@@Base+0x2f8>
   32f4c:	mov	r7, r4
   32f50:	mov	r6, r1
   32f54:	ldr	r0, [r5]
   32f58:	bl	2cec8 <flatcc_builder_start_string@@Base>
   32f5c:	cmp	r0, #0
   32f60:	beq	32d48 <flatcc_json_parser_build_string@@Base+0xc4>
   32f64:	mov	r4, r7
   32f68:	mov	r0, #0
   32f6c:	str	r0, [sl]
   32f70:	mov	r0, r4
   32f74:	sub	sp, fp, #28
   32f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f7c:	str	r6, [r5, #36]	; 0x24
   32f80:	add	r3, r6, #1
   32f84:	mov	r0, #17
   32f88:	mov	r7, r4
   32f8c:	ldr	r2, [r5, #4]
   32f90:	sub	r2, r3, r2
   32f94:	str	r2, [r5, #20]
   32f98:	str	r0, [r5, #24]
   32f9c:	b	32f50 <flatcc_json_parser_build_string@@Base+0x2cc>

00032fa0 <flatcc_json_parser_prepare_unions@@Base>:
   32fa0:	push	{r4, r5, r6, r7, fp, lr}
   32fa4:	add	fp, sp, #16
   32fa8:	mov	r5, r1
   32fac:	mov	r6, r0
   32fb0:	add	r0, r3, r3, lsl #1
   32fb4:	mov	r1, #8
   32fb8:	mov	r7, r3
   32fbc:	mov	r4, r2
   32fc0:	add	r1, r1, r0, lsl #3
   32fc4:	ldr	r0, [r6]
   32fc8:	bl	2b2fc <flatcc_builder_enter_user_frame@@Base>
   32fcc:	mov	r1, r0
   32fd0:	ldr	r0, [fp, #8]
   32fd4:	cmp	r1, #0
   32fd8:	str	r1, [r0]
   32fdc:	beq	32ff8 <flatcc_json_parser_prepare_unions@@Base+0x58>
   32fe0:	ldr	r0, [r6]
   32fe4:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   32fe8:	mov	r4, r5
   32fec:	str	r7, [r0]
   32ff0:	mov	r0, r4
   32ff4:	pop	{r4, r5, r6, r7, fp, pc}
   32ff8:	ldr	r0, [r6, #24]
   32ffc:	cmp	r0, #0
   33000:	beq	3300c <flatcc_json_parser_prepare_unions@@Base+0x6c>
   33004:	mov	r0, r4
   33008:	pop	{r4, r5, r6, r7, fp, pc}
   3300c:	str	r5, [r6, #36]	; 0x24
   33010:	add	r2, r5, #1
   33014:	mov	r0, #33	; 0x21
   33018:	ldr	r1, [r6, #4]
   3301c:	sub	r1, r2, r1
   33020:	str	r1, [r6, #20]
   33024:	str	r0, [r6, #24]
   33028:	mov	r0, r4
   3302c:	pop	{r4, r5, r6, r7, fp, pc}

00033030 <flatcc_json_parser_finalize_unions@@Base>:
   33030:	push	{r4, r5, r6, r7, fp, lr}
   33034:	add	fp, sp, #16
   33038:	mov	r6, r0
   3303c:	ldr	r0, [r0]
   33040:	mov	r7, r1
   33044:	mov	r1, r3
   33048:	mov	r5, r3
   3304c:	mov	r4, r2
   33050:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   33054:	ldr	r0, [r0, #4]
   33058:	cmp	r0, #0
   3305c:	beq	3308c <flatcc_json_parser_finalize_unions@@Base+0x5c>
   33060:	ldr	r0, [r6, #24]
   33064:	cmp	r0, #0
   33068:	bne	33090 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3306c:	str	r7, [r6, #36]	; 0x24
   33070:	add	r2, r7, #1
   33074:	mov	r0, #27
   33078:	ldr	r1, [r6, #4]
   3307c:	sub	r1, r2, r1
   33080:	str	r1, [r6, #20]
   33084:	str	r0, [r6, #24]
   33088:	b	33090 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3308c:	mov	r4, r7
   33090:	ldr	r0, [r6]
   33094:	mov	r1, r5
   33098:	bl	2b408 <flatcc_builder_exit_user_frame_at@@Base>
   3309c:	mov	r0, r4
   330a0:	pop	{r4, r5, r6, r7, fp, pc}

000330a4 <flatcc_json_parser_union@@Base>:
   330a4:	push	{r4, r5, r6, r7, fp, lr}
   330a8:	add	fp, sp, #16
   330ac:	sub	sp, sp, #16
   330b0:	mov	r6, r1
   330b4:	mov	r5, r0
   330b8:	ldr	r0, [r0]
   330bc:	ldr	r1, [fp, #12]
   330c0:	mov	r7, r3
   330c4:	mov	r4, r2
   330c8:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   330cc:	add	r2, r0, #8
   330d0:	add	r3, r7, r7, lsl #1
   330d4:	mov	r1, r2
   330d8:	ldr	r7, [r1, r3, lsl #3]!
   330dc:	cmp	r7, #0
   330e0:	beq	33118 <flatcc_json_parser_union@@Base+0x74>
   330e4:	ldr	r0, [r5, #24]
   330e8:	cmp	r0, #0
   330ec:	bne	331e8 <flatcc_json_parser_union@@Base+0x144>
   330f0:	mov	r0, #28
   330f4:	str	r6, [r5, #36]	; 0x24
   330f8:	add	r2, r6, #1
   330fc:	ldr	r1, [r5, #4]
   33100:	sub	r1, r2, r1
   33104:	str	r1, [r5, #20]
   33108:	str	r0, [r5, #24]
   3310c:	mov	r0, r4
   33110:	sub	sp, fp, #16
   33114:	pop	{r4, r5, r6, r7, fp, pc}
   33118:	add	r2, r2, r3, lsl #3
   3311c:	ldrb	r3, [r2, #12]
   33120:	cmp	r3, #0
   33124:	beq	3319c <flatcc_json_parser_union@@Base+0xf8>
   33128:	ldrb	r3, [r2, #13]
   3312c:	cmp	r3, #0
   33130:	strb	r3, [sp, #8]
   33134:	beq	331dc <flatcc_json_parser_union@@Base+0x138>
   33138:	ldr	r1, [r0, #4]
   3313c:	ldr	r7, [fp, #16]
   33140:	mov	r2, r4
   33144:	sub	r1, r1, #1
   33148:	str	r1, [r0, #4]
   3314c:	add	r0, sp, #8
   33150:	mov	r1, r6
   33154:	add	r0, r0, #4
   33158:	str	r0, [sp]
   3315c:	mov	r0, r5
   33160:	blx	r7
   33164:	cmp	r0, r4
   33168:	beq	331e8 <flatcc_json_parser_union@@Base+0x144>
   3316c:	mov	r6, r0
   33170:	ldr	r1, [fp, #8]
   33174:	ldr	r0, [r5]
   33178:	ldr	r2, [sp, #8]
   3317c:	ldr	r3, [sp, #12]
   33180:	bl	2e144 <flatcc_builder_table_add_union@@Base>
   33184:	cmp	r0, #0
   33188:	bne	330e4 <flatcc_json_parser_union@@Base+0x40>
   3318c:	mov	r4, r6
   33190:	mov	r0, r4
   33194:	sub	sp, fp, #16
   33198:	pop	{r4, r5, r6, r7, fp, pc}
   3319c:	ldr	r3, [r0, #4]
   331a0:	add	r3, r3, #1
   331a4:	str	r3, [r0, #4]
   331a8:	ldr	r0, [r5, #16]
   331ac:	str	r0, [r2, #8]
   331b0:	ldr	r0, [r5, #4]
   331b4:	str	r0, [r2, #4]
   331b8:	str	r6, [r1]
   331bc:	mov	r0, r5
   331c0:	mov	r1, r6
   331c4:	mov	r2, r4
   331c8:	bl	30d30 <flatcc_json_parser_generic_json@@Base>
   331cc:	mov	r4, r0
   331d0:	mov	r0, r4
   331d4:	sub	sp, fp, #16
   331d8:	pop	{r4, r5, r6, r7, fp, pc}
   331dc:	ldr	r0, [r5, #24]
   331e0:	cmp	r0, #0
   331e4:	beq	331f4 <flatcc_json_parser_union@@Base+0x150>
   331e8:	mov	r0, r4
   331ec:	sub	sp, fp, #16
   331f0:	pop	{r4, r5, r6, r7, fp, pc}
   331f4:	mov	r0, #25
   331f8:	b	330f4 <flatcc_json_parser_union@@Base+0x50>

000331fc <flatcc_json_parser_union_type@@Base>:
   331fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33200:	add	fp, sp, #28
   33204:	sub	sp, sp, #20
   33208:	mov	r8, r1
   3320c:	mov	r5, r0
   33210:	ldr	r0, [r0]
   33214:	ldr	r1, [fp, #12]
   33218:	mov	r6, r3
   3321c:	mov	r4, r2
   33220:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   33224:	add	r2, r0, #8
   33228:	add	r3, r6, r6, lsl #1
   3322c:	mov	r9, r0
   33230:	add	sl, r2, r3, lsl #3
   33234:	mov	r0, sl
   33238:	ldrb	r1, [r0, #12]!
   3323c:	cmp	r1, #0
   33240:	beq	3325c <flatcc_json_parser_union_type@@Base+0x60>
   33244:	ldr	r0, [r5, #24]
   33248:	cmp	r0, #0
   3324c:	beq	33344 <flatcc_json_parser_union_type@@Base+0x148>
   33250:	mov	r0, r4
   33254:	sub	sp, fp, #28
   33258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3325c:	mov	r1, #1
   33260:	mov	r6, #0
   33264:	mov	lr, sl
   33268:	cmp	r8, r4
   3326c:	str	r3, [sp, #4]
   33270:	str	r2, [sp, #8]
   33274:	strb	r1, [r0]
   33278:	strb	r6, [lr, #13]!
   3327c:	beq	33464 <flatcc_json_parser_union_type@@Base+0x268>
   33280:	mov	r2, r8
   33284:	ldrb	ip, [r2], #1
   33288:	cmp	ip, #45	; 0x2d
   3328c:	movne	r2, r8
   33290:	cmp	r2, r4
   33294:	beq	3336c <flatcc_json_parser_union_type@@Base+0x170>
   33298:	mov	r6, #0
   3329c:	mov	r0, #10
   332a0:	mov	r7, #0
   332a4:	ldrb	r1, [r2]
   332a8:	sub	r3, r1, #48	; 0x30
   332ac:	uxtb	r3, r3
   332b0:	cmp	r3, #9
   332b4:	bhi	333f8 <flatcc_json_parser_union_type@@Base+0x1fc>
   332b8:	add	r3, r7, r7, lsl #2
   332bc:	lsl	r3, r3, #1
   332c0:	umlal	r1, r3, r6, r0
   332c4:	subs	r1, r1, #48	; 0x30
   332c8:	sbc	r3, r3, #0
   332cc:	subs	r6, r1, r6
   332d0:	sbcs	r7, r3, r7
   332d4:	bcc	33408 <flatcc_json_parser_union_type@@Base+0x20c>
   332d8:	add	r2, r2, #1
   332dc:	mov	r6, r1
   332e0:	mov	r7, r3
   332e4:	cmp	r4, r2
   332e8:	bne	332a4 <flatcc_json_parser_union_type@@Base+0xa8>
   332ec:	mov	r0, #0
   332f0:	mov	r2, r4
   332f4:	mov	r6, r1
   332f8:	mov	r7, r3
   332fc:	cmp	r2, r8
   33300:	beq	33464 <flatcc_json_parser_union_type@@Base+0x268>
   33304:	cmp	r0, #0
   33308:	beq	33384 <flatcc_json_parser_union_type@@Base+0x188>
   3330c:	ldrb	r0, [r2]
   33310:	cmp	r0, #46	; 0x2e
   33314:	beq	33324 <flatcc_json_parser_union_type@@Base+0x128>
   33318:	cmp	r0, #101	; 0x65
   3331c:	cmpne	r0, #69	; 0x45
   33320:	bne	33384 <flatcc_json_parser_union_type@@Base+0x188>
   33324:	ldr	r0, [r5, #24]
   33328:	mov	r6, #0
   3332c:	mov	r7, #0
   33330:	cmp	r0, #0
   33334:	mov	r0, r4
   33338:	bne	33448 <flatcc_json_parser_union_type@@Base+0x24c>
   3333c:	mov	r0, #12
   33340:	b	33424 <flatcc_json_parser_union_type@@Base+0x228>
   33344:	str	r8, [r5, #36]	; 0x24
   33348:	mov	r0, #28
   3334c:	add	r2, r8, #1
   33350:	ldr	r1, [r5, #4]
   33354:	sub	r1, r2, r1
   33358:	str	r1, [r5, #20]
   3335c:	str	r0, [r5, #24]
   33360:	mov	r0, r4
   33364:	sub	sp, fp, #28
   33368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3336c:	mov	r2, r4
   33370:	mov	r7, #0
   33374:	mov	r0, #0
   33378:	cmp	r2, r8
   3337c:	bne	33304 <flatcc_json_parser_union_type@@Base+0x108>
   33380:	b	33464 <flatcc_json_parser_union_type@@Base+0x268>
   33384:	mov	r0, r2
   33388:	cmp	r0, r8
   3338c:	beq	33464 <flatcc_json_parser_union_type@@Base+0x268>
   33390:	cmp	ip, #45	; 0x2d
   33394:	bne	333b0 <flatcc_json_parser_union_type@@Base+0x1b4>
   33398:	ldr	r1, [r5, #24]
   3339c:	mov	r2, r4
   333a0:	cmp	r1, #0
   333a4:	bne	3345c <flatcc_json_parser_union_type@@Base+0x260>
   333a8:	mov	r1, #8
   333ac:	b	333d0 <flatcc_json_parser_union_type@@Base+0x1d4>
   333b0:	subs	r1, r6, #256	; 0x100
   333b4:	sbcs	r1, r7, #0
   333b8:	bcc	33454 <flatcc_json_parser_union_type@@Base+0x258>
   333bc:	ldr	r1, [r5, #24]
   333c0:	mov	r2, r4
   333c4:	cmp	r1, #0
   333c8:	bne	3345c <flatcc_json_parser_union_type@@Base+0x260>
   333cc:	mov	r1, #7
   333d0:	str	r0, [r5, #36]	; 0x24
   333d4:	add	r0, r0, #1
   333d8:	ldr	r2, [r5, #4]
   333dc:	sub	r0, r0, r2
   333e0:	mov	r2, r4
   333e4:	str	r0, [r5, #20]
   333e8:	str	r1, [r5, #24]
   333ec:	cmp	r2, r8
   333f0:	bne	33488 <flatcc_json_parser_union_type@@Base+0x28c>
   333f4:	b	33464 <flatcc_json_parser_union_type@@Base+0x268>
   333f8:	mov	r0, #1
   333fc:	cmp	r2, r8
   33400:	bne	33304 <flatcc_json_parser_union_type@@Base+0x108>
   33404:	b	33464 <flatcc_json_parser_union_type@@Base+0x268>
   33408:	ldr	r0, [r5, #24]
   3340c:	mov	r6, #0
   33410:	mov	r7, #0
   33414:	cmp	r0, #0
   33418:	mov	r0, r4
   3341c:	bne	33448 <flatcc_json_parser_union_type@@Base+0x24c>
   33420:	mov	r0, #8
   33424:	str	r2, [r5, #36]	; 0x24
   33428:	add	r2, r2, #1
   3342c:	mov	r6, #0
   33430:	mov	r7, #0
   33434:	ldr	r1, [r5, #4]
   33438:	sub	r1, r2, r1
   3343c:	str	r1, [r5, #20]
   33440:	str	r0, [r5, #24]
   33444:	mov	r0, r4
   33448:	cmp	r0, r8
   3344c:	bne	33390 <flatcc_json_parser_union_type@@Base+0x194>
   33450:	b	33464 <flatcc_json_parser_union_type@@Base+0x268>
   33454:	mov	r2, r0
   33458:	strb	r6, [lr]
   3345c:	cmp	r2, r8
   33460:	bne	33488 <flatcc_json_parser_union_type@@Base+0x28c>
   33464:	ldr	r3, [fp, #16]
   33468:	mov	r0, r5
   3346c:	mov	r1, r8
   33470:	mov	r2, r4
   33474:	str	lr, [sp]
   33478:	mov	r6, lr
   3347c:	bl	33590 <flatcc_json_parser_union_type@@Base+0x394>
   33480:	mov	lr, r6
   33484:	mov	r2, r0
   33488:	ldr	r0, [sp, #8]
   3348c:	ldr	r1, [sp, #4]
   33490:	ldr	r1, [r0, r1, lsl #3]
   33494:	cmp	r1, #0
   33498:	beq	33534 <flatcc_json_parser_union_type@@Base+0x338>
   3349c:	ldr	r0, [r9, #4]
   334a0:	str	r2, [sp, #8]
   334a4:	cmp	r0, #0
   334a8:	beq	33570 <flatcc_json_parser_union_type@@Base+0x374>
   334ac:	sub	r0, r0, #1
   334b0:	ldr	r6, [fp, #20]
   334b4:	mov	r2, r4
   334b8:	str	r0, [r9, #4]
   334bc:	ldr	r0, [sl, #8]
   334c0:	ldr	r8, [r5, #4]
   334c4:	ldr	r7, [r5, #16]
   334c8:	str	r0, [r5, #16]
   334cc:	ldr	r0, [sl, #4]
   334d0:	str	r0, [r5, #4]
   334d4:	add	r0, sp, #12
   334d8:	ldrb	r3, [lr]
   334dc:	add	r0, r0, #4
   334e0:	str	r0, [sp]
   334e4:	mov	r0, r5
   334e8:	strb	r3, [sp, #12]
   334ec:	blx	r6
   334f0:	cmp	r0, r4
   334f4:	beq	33250 <flatcc_json_parser_union_type@@Base+0x54>
   334f8:	ldr	r1, [fp, #8]
   334fc:	ldr	r0, [r5]
   33500:	ldr	r2, [sp, #12]
   33504:	ldr	r3, [sp, #16]
   33508:	bl	2e144 <flatcc_builder_table_add_union@@Base>
   3350c:	cmp	r0, #0
   33510:	beq	33558 <flatcc_json_parser_union_type@@Base+0x35c>
   33514:	ldr	r0, [r5, #24]
   33518:	cmp	r0, #0
   3351c:	bne	33250 <flatcc_json_parser_union_type@@Base+0x54>
   33520:	ldr	r2, [sp, #8]
   33524:	mov	r0, #28
   33528:	str	r2, [r5, #36]	; 0x24
   3352c:	add	r2, r2, #1
   33530:	b	33350 <flatcc_json_parser_union_type@@Base+0x154>
   33534:	ldrb	r0, [lr]
   33538:	ldr	r1, [r9, #4]
   3353c:	mov	r4, r2
   33540:	cmp	r0, #0
   33544:	addne	r1, r1, #1
   33548:	str	r1, [r9, #4]
   3354c:	mov	r0, r4
   33550:	sub	sp, fp, #28
   33554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33558:	ldr	r4, [sp, #8]
   3355c:	str	r8, [r5, #4]
   33560:	str	r7, [r5, #16]
   33564:	mov	r0, r4
   33568:	sub	sp, fp, #28
   3356c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33570:	movw	r0, #28589	; 0x6fad
   33574:	movw	r1, #28604	; 0x6fbc
   33578:	movw	r3, #28678	; 0x7006
   3357c:	movw	r2, #965	; 0x3c5
   33580:	movt	r0, #3
   33584:	movt	r1, #3
   33588:	movt	r3, #3
   3358c:	bl	12bc4 <__assert_fail@plt>
   33590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33594:	add	fp, sp, #28
   33598:	sub	sp, sp, #44	; 0x2c
   3359c:	mov	r4, r2
   335a0:	mov	r2, r1
   335a4:	ldr	r1, [fp, #8]
   335a8:	mov	r5, r0
   335ac:	mov	r0, #0
   335b0:	cmp	r2, r4
   335b4:	strb	r0, [r1]
   335b8:	beq	337a0 <flatcc_json_parser_union_type@@Base+0x5a4>
   335bc:	ldrb	r0, [r2]
   335c0:	cmp	r0, #46	; 0x2e
   335c4:	beq	33638 <flatcc_json_parser_union_type@@Base+0x43c>
   335c8:	cmp	r0, #34	; 0x22
   335cc:	bne	33798 <flatcc_json_parser_union_type@@Base+0x59c>
   335d0:	mov	r0, #0
   335d4:	add	r1, r2, #1
   335d8:	str	r0, [r5, #12]
   335dc:	ldr	r0, [r5, #12]
   335e0:	cmp	r0, #0
   335e4:	bne	33674 <flatcc_json_parser_union_type@@Base+0x478>
   335e8:	sub	r0, r4, r1
   335ec:	cmp	r0, #2
   335f0:	blt	33614 <flatcc_json_parser_union_type@@Base+0x418>
   335f4:	ldrb	r0, [r1]
   335f8:	cmp	r0, #32
   335fc:	bhi	33674 <flatcc_json_parser_union_type@@Base+0x478>
   33600:	bne	33614 <flatcc_json_parser_union_type@@Base+0x418>
   33604:	mov	r7, r1
   33608:	ldrb	r0, [r7, #1]!
   3360c:	cmp	r0, #32
   33610:	bhi	3362c <flatcc_json_parser_union_type@@Base+0x430>
   33614:	mov	r0, r5
   33618:	mov	r2, r4
   3361c:	mov	r6, r3
   33620:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33624:	mov	r3, r6
   33628:	mov	r7, r0
   3362c:	cmp	r7, r4
   33630:	bne	33680 <flatcc_json_parser_union_type@@Base+0x484>
   33634:	b	3378c <flatcc_json_parser_union_type@@Base+0x590>
   33638:	ldr	r0, [r5, #24]
   3363c:	mov	r1, r4
   33640:	cmp	r0, #0
   33644:	bne	337a4 <flatcc_json_parser_union_type@@Base+0x5a8>
   33648:	str	r2, [r5, #36]	; 0x24
   3364c:	add	r2, r2, #1
   33650:	mov	r0, #5
   33654:	ldr	r1, [r5, #4]
   33658:	sub	r1, r2, r1
   3365c:	str	r1, [r5, #20]
   33660:	str	r0, [r5, #24]
   33664:	mov	r1, r4
   33668:	ldr	r0, [r5, #12]
   3366c:	cmp	r0, #0
   33670:	beq	335e8 <flatcc_json_parser_union_type@@Base+0x3ec>
   33674:	mov	r7, r1
   33678:	cmp	r7, r4
   3367c:	beq	3378c <flatcc_json_parser_union_type@@Base+0x590>
   33680:	add	r9, r3, #4
   33684:	mov	r6, #0
   33688:	add	sl, sp, #32
   3368c:	add	r8, sp, #28
   33690:	str	r3, [sp, #16]
   33694:	str	r9, [sp, #12]
   33698:	b	336d0 <flatcc_json_parser_union_type@@Base+0x4d4>
   3369c:	ldr	r2, [fp, #8]
   336a0:	ldr	r9, [sp, #12]
   336a4:	add	r6, r6, #1
   336a8:	mov	r7, r0
   336ac:	mov	r3, r2
   336b0:	ldrb	r2, [r2]
   336b4:	add	r1, r2, r1
   336b8:	strb	r1, [r3]
   336bc:	ldr	r3, [sp, #16]
   336c0:	ldr	r1, [sp, #24]
   336c4:	cmp	r1, #0
   336c8:	subeq	sp, fp, #28
   336cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   336d0:	str	r6, [sp, #20]
   336d4:	mov	r6, r3
   336d8:	ldr	r6, [r3]
   336dc:	add	r0, sp, #24
   336e0:	mov	r1, r7
   336e4:	mov	r2, r4
   336e8:	mov	r3, r8
   336ec:	str	sl, [sp]
   336f0:	str	r0, [sp, #4]
   336f4:	mov	r0, r5
   336f8:	blx	r6
   336fc:	cmp	r0, r4
   33700:	beq	3378c <flatcc_json_parser_union_type@@Base+0x590>
   33704:	cmp	r0, r7
   33708:	bne	3371c <flatcc_json_parser_union_type@@Base+0x520>
   3370c:	ldr	r6, [r9], #4
   33710:	cmp	r6, #0
   33714:	bne	336dc <flatcc_json_parser_union_type@@Base+0x4e0>
   33718:	b	33764 <flatcc_json_parser_union_type@@Base+0x568>
   3371c:	ldr	r6, [sp, #20]
   33720:	cmp	r6, #0
   33724:	ldrne	r1, [r5, #12]
   33728:	cmpne	r1, #0
   3372c:	bne	337c8 <flatcc_json_parser_union_type@@Base+0x5cc>
   33730:	ldr	r1, [sp, #28]
   33734:	cmp	r1, #0
   33738:	bne	337b4 <flatcc_json_parser_union_type@@Base+0x5b8>
   3373c:	ldr	r1, [sp, #32]
   33740:	ldr	r2, [sp, #36]	; 0x24
   33744:	subs	r3, r1, #256	; 0x100
   33748:	sbcs	r2, r2, #0
   3374c:	bcc	3369c <flatcc_json_parser_union_type@@Base+0x4a0>
   33750:	ldr	r1, [r5, #24]
   33754:	cmp	r1, #0
   33758:	bne	3378c <flatcc_json_parser_union_type@@Base+0x590>
   3375c:	mov	r1, #7
   33760:	b	337d8 <flatcc_json_parser_union_type@@Base+0x5dc>
   33764:	ldr	r0, [r5, #24]
   33768:	cmp	r0, #0
   3376c:	bne	3378c <flatcc_json_parser_union_type@@Base+0x590>
   33770:	str	r7, [r5, #36]	; 0x24
   33774:	add	r2, r7, #1
   33778:	mov	r0, #23
   3377c:	ldr	r1, [r5, #4]
   33780:	sub	r1, r2, r1
   33784:	str	r1, [r5, #20]
   33788:	str	r0, [r5, #24]
   3378c:	mov	r0, r4
   33790:	sub	sp, fp, #28
   33794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33798:	mov	r0, #1
   3379c:	str	r0, [r5, #12]
   337a0:	mov	r1, r2
   337a4:	ldr	r0, [r5, #12]
   337a8:	cmp	r0, #0
   337ac:	bne	33674 <flatcc_json_parser_union_type@@Base+0x478>
   337b0:	b	335e8 <flatcc_json_parser_union_type@@Base+0x3ec>
   337b4:	ldr	r1, [r5, #24]
   337b8:	cmp	r1, #0
   337bc:	bne	3378c <flatcc_json_parser_union_type@@Base+0x590>
   337c0:	mov	r1, #8
   337c4:	b	337d8 <flatcc_json_parser_union_type@@Base+0x5dc>
   337c8:	ldr	r1, [r5, #24]
   337cc:	cmp	r1, #0
   337d0:	bne	3378c <flatcc_json_parser_union_type@@Base+0x590>
   337d4:	mov	r1, #14
   337d8:	str	r0, [r5, #36]	; 0x24
   337dc:	add	r0, r0, #1
   337e0:	ldr	r2, [r5, #4]
   337e4:	sub	r0, r0, r2
   337e8:	str	r0, [r5, #20]
   337ec:	str	r1, [r5, #24]
   337f0:	mov	r0, r4
   337f4:	sub	sp, fp, #28
   337f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000337fc <flatcc_json_parser_union_vector@@Base>:
   337fc:	push	{r4, r5, r6, r7, fp, lr}
   33800:	add	fp, sp, #16
   33804:	sub	sp, sp, #16
   33808:	mov	r6, r1
   3380c:	mov	r5, r0
   33810:	ldr	r0, [r0]
   33814:	ldr	r1, [fp, #12]
   33818:	mov	r7, r3
   3381c:	mov	r4, r2
   33820:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   33824:	add	r2, r0, #8
   33828:	add	r3, r7, r7, lsl #1
   3382c:	mov	r1, r2
   33830:	ldr	r7, [r1, r3, lsl #3]!
   33834:	cmp	r7, #0
   33838:	beq	33854 <flatcc_json_parser_union_vector@@Base+0x58>
   3383c:	ldr	r0, [r5, #24]
   33840:	cmp	r0, #0
   33844:	beq	338a0 <flatcc_json_parser_union_vector@@Base+0xa4>
   33848:	mov	r0, r4
   3384c:	sub	sp, fp, #16
   33850:	pop	{r4, r5, r6, r7, fp, pc}
   33854:	add	r2, r2, r3, lsl #3
   33858:	ldr	r3, [r0, #4]
   3385c:	ldrb	r7, [r2, #12]
   33860:	cmp	r7, #0
   33864:	beq	338c8 <flatcc_json_parser_union_vector@@Base+0xcc>
   33868:	sub	r3, r3, #1
   3386c:	ldr	r1, [fp, #16]
   33870:	ldr	r7, [fp, #8]
   33874:	str	r3, [r0, #4]
   33878:	ldr	r0, [r2, #16]
   3387c:	ldr	r3, [r2, #20]
   33880:	mov	r2, r4
   33884:	stm	sp, {r0, r7}
   33888:	str	r1, [sp, #8]
   3388c:	mov	r0, r5
   33890:	mov	r1, r6
   33894:	bl	338fc <flatcc_json_parser_union_vector@@Base+0x100>
   33898:	sub	sp, fp, #16
   3389c:	pop	{r4, r5, r6, r7, fp, pc}
   338a0:	str	r6, [r5, #36]	; 0x24
   338a4:	add	r2, r6, #1
   338a8:	mov	r0, #28
   338ac:	ldr	r1, [r5, #4]
   338b0:	sub	r1, r2, r1
   338b4:	str	r1, [r5, #20]
   338b8:	str	r0, [r5, #24]
   338bc:	mov	r0, r4
   338c0:	sub	sp, fp, #16
   338c4:	pop	{r4, r5, r6, r7, fp, pc}
   338c8:	add	r3, r3, #1
   338cc:	str	r3, [r0, #4]
   338d0:	ldr	r0, [r5, #16]
   338d4:	str	r0, [r2, #8]
   338d8:	ldr	r0, [r5, #4]
   338dc:	str	r0, [r2, #4]
   338e0:	str	r6, [r1]
   338e4:	mov	r0, r5
   338e8:	mov	r1, r6
   338ec:	mov	r2, r4
   338f0:	sub	sp, fp, #16
   338f4:	pop	{r4, r5, r6, r7, fp, lr}
   338f8:	b	30d30 <flatcc_json_parser_generic_json@@Base>
   338fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33900:	add	fp, sp, #28
   33904:	sub	sp, sp, #12
   33908:	mov	r5, r0
   3390c:	mov	r0, #0
   33910:	mov	r8, r3
   33914:	mov	r6, r2
   33918:	mov	r7, r1
   3391c:	str	r0, [sp, #8]
   33920:	ldr	r0, [r5]
   33924:	bl	2cb38 <flatcc_builder_start_offset_vector@@Base>
   33928:	cmp	r0, #0
   3392c:	beq	3394c <flatcc_json_parser_union_vector@@Base+0x150>
   33930:	ldr	r0, [r5, #24]
   33934:	cmp	r0, #0
   33938:	bne	339d4 <flatcc_json_parser_union_vector@@Base+0x1d8>
   3393c:	str	r7, [r5, #36]	; 0x24
   33940:	mov	r0, #33	; 0x21
   33944:	add	r2, r7, #1
   33948:	b	339c4 <flatcc_json_parser_union_vector@@Base+0x1c8>
   3394c:	ldr	sl, [fp, #8]
   33950:	cmp	r7, r6
   33954:	beq	33994 <flatcc_json_parser_union_vector@@Base+0x198>
   33958:	ldrb	r0, [r7]
   3395c:	cmp	r0, #91	; 0x5b
   33960:	bne	33994 <flatcc_json_parser_union_vector@@Base+0x198>
   33964:	add	r1, r7, #1
   33968:	sub	r0, r6, r1
   3396c:	cmp	r0, #2
   33970:	blt	33a7c <flatcc_json_parser_union_vector@@Base+0x280>
   33974:	ldrb	r0, [r1]
   33978:	cmp	r0, #32
   3397c:	bls	33a6c <flatcc_json_parser_union_vector@@Base+0x270>
   33980:	mov	r7, r1
   33984:	cmp	r7, r6
   33988:	mov	r4, r6
   3398c:	bne	33a98 <flatcc_json_parser_union_vector@@Base+0x29c>
   33990:	b	33ad4 <flatcc_json_parser_union_vector@@Base+0x2d8>
   33994:	ldr	r0, [r5, #24]
   33998:	mov	r9, r6
   3399c:	cmp	r0, #0
   339a0:	beq	339e0 <flatcc_json_parser_union_vector@@Base+0x1e4>
   339a4:	cmp	sl, #0
   339a8:	beq	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>
   339ac:	ldr	r0, [r5, #24]
   339b0:	cmp	r0, #0
   339b4:	bne	339d4 <flatcc_json_parser_union_vector@@Base+0x1d8>
   339b8:	str	r9, [r5, #36]	; 0x24
   339bc:	mov	r0, #30
   339c0:	add	r2, r9, #1
   339c4:	ldr	r1, [r5, #4]
   339c8:	sub	r1, r2, r1
   339cc:	str	r1, [r5, #20]
   339d0:	str	r0, [r5, #24]
   339d4:	mov	r0, r6
   339d8:	sub	sp, fp, #28
   339dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   339e0:	str	r7, [r5, #36]	; 0x24
   339e4:	add	r2, r7, #1
   339e8:	mov	r0, #22
   339ec:	mov	r9, r6
   339f0:	ldr	r1, [r5, #4]
   339f4:	sub	r1, r2, r1
   339f8:	str	r1, [r5, #20]
   339fc:	str	r0, [r5, #24]
   33a00:	cmp	sl, #0
   33a04:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33a08:	ldr	r0, [r5]
   33a0c:	mov	r1, r8
   33a10:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   33a14:	mov	r1, r0
   33a18:	ldr	r0, [r5]
   33a1c:	bl	2e058 <flatcc_builder_end_offset_vector_for_unions@@Base>
   33a20:	cmp	r0, #0
   33a24:	str	r0, [sp, #8]
   33a28:	beq	33a58 <flatcc_json_parser_union_vector@@Base+0x25c>
   33a2c:	ldr	r1, [fp, #12]
   33a30:	ldr	r0, [r5]
   33a34:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   33a38:	cmp	r0, #0
   33a3c:	beq	33a58 <flatcc_json_parser_union_vector@@Base+0x25c>
   33a40:	ldr	r1, [sp, #8]
   33a44:	mov	r6, r9
   33a48:	str	r1, [r0]
   33a4c:	mov	r0, r6
   33a50:	sub	sp, fp, #28
   33a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33a58:	mov	r7, r9
   33a5c:	ldr	r0, [r5, #24]
   33a60:	cmp	r0, #0
   33a64:	bne	339d4 <flatcc_json_parser_union_vector@@Base+0x1d8>
   33a68:	b	3393c <flatcc_json_parser_union_vector@@Base+0x140>
   33a6c:	bne	33a7c <flatcc_json_parser_union_vector@@Base+0x280>
   33a70:	ldrb	r0, [r7, #2]!
   33a74:	cmp	r0, #32
   33a78:	bhi	33a8c <flatcc_json_parser_union_vector@@Base+0x290>
   33a7c:	mov	r0, r5
   33a80:	mov	r2, r6
   33a84:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33a88:	mov	r7, r0
   33a8c:	cmp	r7, r6
   33a90:	mov	r4, r6
   33a94:	beq	33ad4 <flatcc_json_parser_union_vector@@Base+0x2d8>
   33a98:	ldrb	r0, [r7]
   33a9c:	cmp	r0, #93	; 0x5d
   33aa0:	bne	33ad0 <flatcc_json_parser_union_vector@@Base+0x2d4>
   33aa4:	add	r1, r7, #1
   33aa8:	sub	r0, r6, r1
   33aac:	cmp	r0, #2
   33ab0:	blt	33c60 <flatcc_json_parser_union_vector@@Base+0x464>
   33ab4:	ldrb	r0, [r1]
   33ab8:	cmp	r0, #32
   33abc:	bls	33c4c <flatcc_json_parser_union_vector@@Base+0x450>
   33ac0:	mov	r9, r1
   33ac4:	cmp	sl, #0
   33ac8:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33acc:	b	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>
   33ad0:	mov	r4, r7
   33ad4:	cmp	sl, #0
   33ad8:	beq	33c30 <flatcc_json_parser_union_vector@@Base+0x434>
   33adc:	add	r0, r6, #1
   33ae0:	mov	sl, #0
   33ae4:	add	r9, sp, #8
   33ae8:	str	r0, [sp, #4]
   33aec:	ldr	r0, [r5]
   33af0:	mov	r1, r8
   33af4:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   33af8:	ldrb	r3, [r0, -sl]
   33afc:	ldr	r7, [fp, #16]
   33b00:	mov	r0, r5
   33b04:	mov	r1, r4
   33b08:	mov	r2, r6
   33b0c:	str	r9, [sp]
   33b10:	blx	r7
   33b14:	cmp	r0, r6
   33b18:	beq	339d4 <flatcc_json_parser_union_vector@@Base+0x1d8>
   33b1c:	mov	r7, r0
   33b20:	ldr	r0, [r5]
   33b24:	mov	r1, #1
   33b28:	bl	2c2f4 <flatcc_builder_extend_offset_vector@@Base>
   33b2c:	cmp	r0, #0
   33b30:	beq	33930 <flatcc_json_parser_union_vector@@Base+0x134>
   33b34:	ldr	r1, [sp, #8]
   33b38:	str	r1, [r0]
   33b3c:	sub	r0, r6, r7
   33b40:	cmp	r0, #2
   33b44:	blt	33bc8 <flatcc_json_parser_union_vector@@Base+0x3cc>
   33b48:	ldrb	r0, [r7]
   33b4c:	cmp	r0, #32
   33b50:	bls	33bb4 <flatcc_json_parser_union_vector@@Base+0x3b8>
   33b54:	mov	r4, r7
   33b58:	cmp	r4, r6
   33b5c:	beq	33c7c <flatcc_json_parser_union_vector@@Base+0x480>
   33b60:	ldrb	r0, [r4]
   33b64:	cmp	r0, #44	; 0x2c
   33b68:	bne	33c94 <flatcc_json_parser_union_vector@@Base+0x498>
   33b6c:	add	r1, r4, #1
   33b70:	sub	r0, r6, r1
   33b74:	cmp	r0, #2
   33b78:	blt	33bf8 <flatcc_json_parser_union_vector@@Base+0x3fc>
   33b7c:	ldrb	r0, [r1]
   33b80:	cmp	r0, #32
   33b84:	bls	33be8 <flatcc_json_parser_union_vector@@Base+0x3ec>
   33b88:	mov	r4, r1
   33b8c:	cmp	r4, r6
   33b90:	beq	33c10 <flatcc_json_parser_union_vector@@Base+0x414>
   33b94:	ldrb	r0, [r4]
   33b98:	cmp	r0, #93	; 0x5d
   33b9c:	beq	33cd0 <flatcc_json_parser_union_vector@@Base+0x4d4>
   33ba0:	ldr	r0, [fp, #8]
   33ba4:	sub	sl, sl, #1
   33ba8:	adds	r0, r0, sl
   33bac:	bne	33aec <flatcc_json_parser_union_vector@@Base+0x2f0>
   33bb0:	b	33c30 <flatcc_json_parser_union_vector@@Base+0x434>
   33bb4:	bne	33bc8 <flatcc_json_parser_union_vector@@Base+0x3cc>
   33bb8:	mov	r4, r7
   33bbc:	ldrb	r0, [r4, #1]!
   33bc0:	cmp	r0, #32
   33bc4:	bhi	33bdc <flatcc_json_parser_union_vector@@Base+0x3e0>
   33bc8:	mov	r0, r5
   33bcc:	mov	r1, r7
   33bd0:	mov	r2, r6
   33bd4:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33bd8:	mov	r4, r0
   33bdc:	cmp	r4, r6
   33be0:	bne	33b60 <flatcc_json_parser_union_vector@@Base+0x364>
   33be4:	b	33c7c <flatcc_json_parser_union_vector@@Base+0x480>
   33be8:	bne	33bf8 <flatcc_json_parser_union_vector@@Base+0x3fc>
   33bec:	ldrb	r0, [r4, #2]!
   33bf0:	cmp	r0, #32
   33bf4:	bhi	33c08 <flatcc_json_parser_union_vector@@Base+0x40c>
   33bf8:	mov	r0, r5
   33bfc:	mov	r2, r6
   33c00:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33c04:	mov	r4, r0
   33c08:	cmp	r4, r6
   33c0c:	bne	33b94 <flatcc_json_parser_union_vector@@Base+0x398>
   33c10:	ldr	r0, [r5, #24]
   33c14:	mov	r9, r6
   33c18:	cmp	r0, #0
   33c1c:	bne	33d28 <flatcc_json_parser_union_vector@@Base+0x52c>
   33c20:	str	r6, [r5, #36]	; 0x24
   33c24:	ldr	r2, [sp, #4]
   33c28:	mov	r0, #9
   33c2c:	b	33d48 <flatcc_json_parser_union_vector@@Base+0x54c>
   33c30:	ldr	r0, [r5, #24]
   33c34:	cmp	r0, #0
   33c38:	bne	339d4 <flatcc_json_parser_union_vector@@Base+0x1d8>
   33c3c:	str	r4, [r5, #36]	; 0x24
   33c40:	mov	r0, #30
   33c44:	add	r2, r4, #1
   33c48:	b	339c4 <flatcc_json_parser_union_vector@@Base+0x1c8>
   33c4c:	bne	33c60 <flatcc_json_parser_union_vector@@Base+0x464>
   33c50:	ldrb	r0, [r7, #2]!
   33c54:	cmp	r0, #32
   33c58:	mov	r9, r7
   33c5c:	bhi	339a4 <flatcc_json_parser_union_vector@@Base+0x1a8>
   33c60:	mov	r0, r5
   33c64:	mov	r2, r6
   33c68:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33c6c:	mov	r9, r0
   33c70:	cmp	sl, #0
   33c74:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33c78:	b	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>
   33c7c:	mov	r9, r6
   33c80:	ldr	r0, [fp, #8]
   33c84:	add	r0, r0, sl
   33c88:	cmp	r0, #1
   33c8c:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33c90:	b	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>
   33c94:	cmp	r0, #93	; 0x5d
   33c98:	bne	33d18 <flatcc_json_parser_union_vector@@Base+0x51c>
   33c9c:	add	r1, r4, #1
   33ca0:	sub	r0, r6, r1
   33ca4:	cmp	r0, #2
   33ca8:	blt	33d04 <flatcc_json_parser_union_vector@@Base+0x508>
   33cac:	ldrb	r0, [r1]
   33cb0:	cmp	r0, #32
   33cb4:	bhi	33cec <flatcc_json_parser_union_vector@@Base+0x4f0>
   33cb8:	bne	33d04 <flatcc_json_parser_union_vector@@Base+0x508>
   33cbc:	ldrb	r0, [r4, #2]!
   33cc0:	cmp	r0, #32
   33cc4:	mov	r9, r4
   33cc8:	bhi	33d28 <flatcc_json_parser_union_vector@@Base+0x52c>
   33ccc:	b	33d04 <flatcc_json_parser_union_vector@@Base+0x508>
   33cd0:	add	r1, r4, #1
   33cd4:	sub	r0, r6, r1
   33cd8:	cmp	r0, #2
   33cdc:	blt	33d04 <flatcc_json_parser_union_vector@@Base+0x508>
   33ce0:	ldrb	r0, [r1]
   33ce4:	cmp	r0, #32
   33ce8:	bls	33cb8 <flatcc_json_parser_union_vector@@Base+0x4bc>
   33cec:	mov	r9, r1
   33cf0:	ldr	r0, [fp, #8]
   33cf4:	add	r0, r0, sl
   33cf8:	cmp	r0, #1
   33cfc:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33d00:	b	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>
   33d04:	mov	r0, r5
   33d08:	mov	r2, r6
   33d0c:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33d10:	mov	r9, r0
   33d14:	b	33d28 <flatcc_json_parser_union_vector@@Base+0x52c>
   33d18:	ldr	r0, [r5, #24]
   33d1c:	mov	r9, r6
   33d20:	cmp	r0, #0
   33d24:	beq	33d3c <flatcc_json_parser_union_vector@@Base+0x540>
   33d28:	ldr	r0, [fp, #8]
   33d2c:	add	r0, r0, sl
   33d30:	cmp	r0, #1
   33d34:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33d38:	b	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>
   33d3c:	str	r4, [r5, #36]	; 0x24
   33d40:	mov	r0, #9
   33d44:	add	r2, r4, #1
   33d48:	ldr	r1, [r5, #4]
   33d4c:	sub	r1, r2, r1
   33d50:	mov	r9, r6
   33d54:	str	r1, [r5, #20]
   33d58:	str	r0, [r5, #24]
   33d5c:	ldr	r0, [fp, #8]
   33d60:	add	r0, r0, sl
   33d64:	cmp	r0, #1
   33d68:	bne	339ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   33d6c:	b	33a08 <flatcc_json_parser_union_vector@@Base+0x20c>

00033d70 <flatcc_json_parser_union_type_vector@@Base>:
   33d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33d74:	add	fp, sp, #28
   33d78:	sub	sp, sp, #28
   33d7c:	mov	r7, r1
   33d80:	mov	r5, r0
   33d84:	ldr	r0, [r0]
   33d88:	ldr	r1, [fp, #12]
   33d8c:	mov	r4, r3
   33d90:	mov	r8, r2
   33d94:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   33d98:	add	r0, r0, #8
   33d9c:	add	r6, r4, r4, lsl #1
   33da0:	add	r4, r0, r6, lsl #3
   33da4:	mov	r0, r4
   33da8:	ldrb	r1, [r0, #12]!
   33dac:	cmp	r1, #0
   33db0:	beq	33dd0 <flatcc_json_parser_union_type_vector@@Base+0x60>
   33db4:	ldr	r0, [r5, #24]
   33db8:	cmp	r0, #0
   33dbc:	bne	33e20 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   33dc0:	str	r7, [r5, #36]	; 0x24
   33dc4:	mov	r0, #28
   33dc8:	add	r2, r7, #1
   33dcc:	b	33e10 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   33dd0:	mov	r1, #1
   33dd4:	mov	r2, #1
   33dd8:	mvn	r3, #0
   33ddc:	strb	r1, [r0]
   33de0:	mov	r1, #1
   33de4:	ldr	r0, [r5]
   33de8:	bl	2caac <flatcc_builder_start_vector@@Base>
   33dec:	cmp	r0, #0
   33df0:	beq	33e2c <flatcc_json_parser_union_type_vector@@Base+0xbc>
   33df4:	mov	sl, r7
   33df8:	ldr	r0, [r5, #24]
   33dfc:	cmp	r0, #0
   33e00:	bne	33e20 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   33e04:	str	sl, [r5, #36]	; 0x24
   33e08:	mov	r0, #33	; 0x21
   33e0c:	add	r2, sl, #1
   33e10:	ldr	r1, [r5, #4]
   33e14:	sub	r1, r2, r1
   33e18:	str	r1, [r5, #20]
   33e1c:	str	r0, [r5, #24]
   33e20:	mov	r0, r8
   33e24:	sub	sp, fp, #28
   33e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33e2c:	cmp	r7, r8
   33e30:	beq	33e70 <flatcc_json_parser_union_type_vector@@Base+0x100>
   33e34:	ldrb	r0, [r7]
   33e38:	cmp	r0, #91	; 0x5b
   33e3c:	bne	33e70 <flatcc_json_parser_union_type_vector@@Base+0x100>
   33e40:	add	r1, r7, #1
   33e44:	sub	r0, r8, r1
   33e48:	cmp	r0, #2
   33e4c:	blt	33eb4 <flatcc_json_parser_union_type_vector@@Base+0x144>
   33e50:	ldrb	r0, [r1]
   33e54:	cmp	r0, #32
   33e58:	bls	33ea4 <flatcc_json_parser_union_type_vector@@Base+0x134>
   33e5c:	mov	r7, r1
   33e60:	cmp	r7, r8
   33e64:	mov	sl, r8
   33e68:	bne	33ed0 <flatcc_json_parser_union_type_vector@@Base+0x160>
   33e6c:	b	33f14 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   33e70:	ldr	r0, [r5, #24]
   33e74:	cmp	r0, #0
   33e78:	mov	r0, r8
   33e7c:	bne	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   33e80:	str	r7, [r5, #36]	; 0x24
   33e84:	mov	r0, #22
   33e88:	add	r2, r7, #1
   33e8c:	ldr	r1, [r5, #4]
   33e90:	sub	r1, r2, r1
   33e94:	str	r1, [r5, #20]
   33e98:	str	r0, [r5, #24]
   33e9c:	mov	r0, r8
   33ea0:	b	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   33ea4:	bne	33eb4 <flatcc_json_parser_union_type_vector@@Base+0x144>
   33ea8:	ldrb	r0, [r7, #2]!
   33eac:	cmp	r0, #32
   33eb0:	bhi	33ec4 <flatcc_json_parser_union_type_vector@@Base+0x154>
   33eb4:	mov	r0, r5
   33eb8:	mov	r2, r8
   33ebc:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   33ec0:	mov	r7, r0
   33ec4:	cmp	r7, r8
   33ec8:	mov	sl, r8
   33ecc:	beq	33f14 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   33ed0:	ldrb	r0, [r7]
   33ed4:	cmp	r0, #93	; 0x5d
   33ed8:	bne	33f10 <flatcc_json_parser_union_type_vector@@Base+0x1a0>
   33edc:	add	r1, r7, #1
   33ee0:	sub	r0, r8, r1
   33ee4:	cmp	r0, #2
   33ee8:	blt	34378 <flatcc_json_parser_union_type_vector@@Base+0x608>
   33eec:	ldrb	r0, [r1]
   33ef0:	cmp	r0, #32
   33ef4:	bhi	3430c <flatcc_json_parser_union_type_vector@@Base+0x59c>
   33ef8:	bne	34378 <flatcc_json_parser_union_type_vector@@Base+0x608>
   33efc:	ldrb	r0, [r7, #2]!
   33f00:	cmp	r0, #32
   33f04:	mov	r0, r7
   33f08:	bls	34378 <flatcc_json_parser_union_type_vector@@Base+0x608>
   33f0c:	b	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   33f10:	mov	sl, r7
   33f14:	ldr	r0, [r5]
   33f18:	mov	r1, #1
   33f1c:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   33f20:	cmp	r0, #0
   33f24:	beq	33df8 <flatcc_json_parser_union_type_vector@@Base+0x88>
   33f28:	mov	r1, r0
   33f2c:	add	r0, r8, #1
   33f30:	str	r4, [sp, #16]
   33f34:	str	r0, [sp, #12]
   33f38:	mov	r9, #0
   33f3c:	cmp	sl, r8
   33f40:	mov	r4, r8
   33f44:	str	r1, [sp, #20]
   33f48:	strb	r9, [sp, #27]
   33f4c:	beq	34170 <flatcc_json_parser_union_type_vector@@Base+0x400>
   33f50:	mov	r2, sl
   33f54:	mov	r9, #0
   33f58:	ldrb	ip, [r2], #1
   33f5c:	cmp	ip, #45	; 0x2d
   33f60:	movne	r2, sl
   33f64:	cmp	r2, r8
   33f68:	beq	33fe0 <flatcc_json_parser_union_type_vector@@Base+0x270>
   33f6c:	mov	r7, #0
   33f70:	mov	r0, #0
   33f74:	mov	r4, #10
   33f78:	ldrb	r1, [r2]
   33f7c:	sub	r3, r1, #48	; 0x30
   33f80:	uxtb	r3, r3
   33f84:	cmp	r3, #9
   33f88:	bhi	34000 <flatcc_json_parser_union_type_vector@@Base+0x290>
   33f8c:	add	r3, r0, r0, lsl #2
   33f90:	lsl	r3, r3, #1
   33f94:	umlal	r1, r3, r7, r4
   33f98:	subs	r1, r1, #48	; 0x30
   33f9c:	sbc	r3, r3, #0
   33fa0:	subs	r7, r1, r7
   33fa4:	sbcs	r0, r3, r0
   33fa8:	bcc	34084 <flatcc_json_parser_union_type_vector@@Base+0x314>
   33fac:	add	r2, r2, #1
   33fb0:	mov	r7, r1
   33fb4:	mov	r0, r3
   33fb8:	cmp	r8, r2
   33fbc:	bne	33f78 <flatcc_json_parser_union_type_vector@@Base+0x208>
   33fc0:	mov	lr, #0
   33fc4:	mov	r2, r8
   33fc8:	mov	r7, r1
   33fcc:	mov	r0, r3
   33fd0:	cmp	r2, sl
   33fd4:	mov	r4, sl
   33fd8:	bne	34010 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   33fdc:	b	34170 <flatcc_json_parser_union_type_vector@@Base+0x400>
   33fe0:	mov	r2, r8
   33fe4:	mov	r7, #0
   33fe8:	mov	r0, #0
   33fec:	mov	lr, #0
   33ff0:	cmp	r2, sl
   33ff4:	mov	r4, sl
   33ff8:	bne	34010 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   33ffc:	b	34170 <flatcc_json_parser_union_type_vector@@Base+0x400>
   34000:	mov	lr, #1
   34004:	cmp	r2, sl
   34008:	mov	r4, sl
   3400c:	beq	34170 <flatcc_json_parser_union_type_vector@@Base+0x400>
   34010:	cmp	lr, #0
   34014:	beq	34064 <flatcc_json_parser_union_type_vector@@Base+0x2f4>
   34018:	ldrb	r1, [r2]
   3401c:	cmp	r1, #46	; 0x2e
   34020:	beq	34030 <flatcc_json_parser_union_type_vector@@Base+0x2c0>
   34024:	cmp	r1, #101	; 0x65
   34028:	cmpne	r1, #69	; 0x45
   3402c:	bne	340d4 <flatcc_json_parser_union_type_vector@@Base+0x364>
   34030:	ldr	r0, [r5, #24]
   34034:	mov	r7, #0
   34038:	mov	r4, r8
   3403c:	cmp	r0, #0
   34040:	mov	r0, #0
   34044:	bne	340d8 <flatcc_json_parser_union_type_vector@@Base+0x368>
   34048:	str	r2, [r5, #36]	; 0x24
   3404c:	add	r1, r2, #1
   34050:	ldr	r0, [r5, #4]
   34054:	sub	r0, r1, r0
   34058:	str	r0, [r5, #20]
   3405c:	mov	r0, #12
   34060:	b	340b4 <flatcc_json_parser_union_type_vector@@Base+0x344>
   34064:	mov	r4, r2
   34068:	mov	r9, #0
   3406c:	cmp	r4, sl
   34070:	bne	340e4 <flatcc_json_parser_union_type_vector@@Base+0x374>
   34074:	mov	r4, sl
   34078:	cmp	sl, r4
   3407c:	bne	341ac <flatcc_json_parser_union_type_vector@@Base+0x43c>
   34080:	b	34178 <flatcc_json_parser_union_type_vector@@Base+0x408>
   34084:	ldr	r0, [r5, #24]
   34088:	mov	r7, #0
   3408c:	mov	r4, r8
   34090:	cmp	r0, #0
   34094:	mov	r0, #0
   34098:	bne	340d8 <flatcc_json_parser_union_type_vector@@Base+0x368>
   3409c:	str	r2, [r5, #36]	; 0x24
   340a0:	add	r1, r2, #1
   340a4:	ldr	r0, [r5, #4]
   340a8:	sub	r0, r1, r0
   340ac:	str	r0, [r5, #20]
   340b0:	mov	r0, #8
   340b4:	str	r0, [r5, #24]
   340b8:	mov	r7, #0
   340bc:	mov	r0, #0
   340c0:	mov	r4, r8
   340c4:	mov	r9, #0
   340c8:	cmp	r4, sl
   340cc:	bne	340e4 <flatcc_json_parser_union_type_vector@@Base+0x374>
   340d0:	b	34074 <flatcc_json_parser_union_type_vector@@Base+0x304>
   340d4:	mov	r4, r2
   340d8:	mov	r9, #0
   340dc:	cmp	r4, sl
   340e0:	beq	34074 <flatcc_json_parser_union_type_vector@@Base+0x304>
   340e4:	cmp	ip, #45	; 0x2d
   340e8:	bne	34114 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   340ec:	ldr	r0, [r5, #24]
   340f0:	cmp	r0, #0
   340f4:	bne	3412c <flatcc_json_parser_union_type_vector@@Base+0x3bc>
   340f8:	str	r4, [r5, #36]	; 0x24
   340fc:	add	r1, r4, #1
   34100:	ldr	r0, [r5, #4]
   34104:	sub	r0, r1, r0
   34108:	str	r0, [r5, #20]
   3410c:	mov	r0, #8
   34110:	b	34168 <flatcc_json_parser_union_type_vector@@Base+0x3f8>
   34114:	subs	r1, r7, #256	; 0x100
   34118:	sbcs	r0, r0, #0
   3411c:	bcc	3413c <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   34120:	ldr	r0, [r5, #24]
   34124:	cmp	r0, #0
   34128:	beq	34150 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   3412c:	mov	r4, r8
   34130:	cmp	sl, r4
   34134:	bne	341ac <flatcc_json_parser_union_type_vector@@Base+0x43c>
   34138:	b	34178 <flatcc_json_parser_union_type_vector@@Base+0x408>
   3413c:	mov	r9, r7
   34140:	strb	r7, [sp, #27]
   34144:	cmp	sl, r4
   34148:	bne	341ac <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3414c:	b	34178 <flatcc_json_parser_union_type_vector@@Base+0x408>
   34150:	str	r4, [r5, #36]	; 0x24
   34154:	add	r1, r4, #1
   34158:	ldr	r0, [r5, #4]
   3415c:	sub	r0, r1, r0
   34160:	str	r0, [r5, #20]
   34164:	mov	r0, #7
   34168:	str	r0, [r5, #24]
   3416c:	mov	r4, r8
   34170:	cmp	sl, r4
   34174:	bne	341ac <flatcc_json_parser_union_type_vector@@Base+0x43c>
   34178:	ldr	r3, [fp, #16]
   3417c:	add	r0, sp, #27
   34180:	mov	r1, sl
   34184:	mov	r2, r8
   34188:	str	r0, [sp]
   3418c:	mov	r0, r5
   34190:	bl	33590 <flatcc_json_parser_union_type@@Base+0x394>
   34194:	mov	r4, r0
   34198:	cmp	r0, sl
   3419c:	beq	34334 <flatcc_json_parser_union_type_vector@@Base+0x5c4>
   341a0:	cmp	r4, r8
   341a4:	beq	34334 <flatcc_json_parser_union_type_vector@@Base+0x5c4>
   341a8:	ldrb	r9, [sp, #27]
   341ac:	ldr	r1, [fp, #24]
   341b0:	uxtb	r0, r9
   341b4:	blx	r1
   341b8:	cmp	r0, #0
   341bc:	bne	341d4 <flatcc_json_parser_union_type_vector@@Base+0x464>
   341c0:	ldrb	r0, [r5, #8]
   341c4:	tst	r0, #1
   341c8:	beq	34348 <flatcc_json_parser_union_type_vector@@Base+0x5d8>
   341cc:	mov	r9, #0
   341d0:	strb	r9, [sp, #27]
   341d4:	ldr	r0, [sp, #20]
   341d8:	strb	r9, [r0]
   341dc:	sub	r0, r8, r4
   341e0:	cmp	r0, #2
   341e4:	blt	34274 <flatcc_json_parser_union_type_vector@@Base+0x504>
   341e8:	ldrb	r0, [r4]
   341ec:	cmp	r0, #32
   341f0:	bls	34260 <flatcc_json_parser_union_type_vector@@Base+0x4f0>
   341f4:	mov	sl, r4
   341f8:	cmp	sl, r8
   341fc:	beq	342dc <flatcc_json_parser_union_type_vector@@Base+0x56c>
   34200:	ldrb	r0, [sl]
   34204:	ldr	r4, [sp, #16]
   34208:	cmp	r0, #44	; 0x2c
   3420c:	bne	342e8 <flatcc_json_parser_union_type_vector@@Base+0x578>
   34210:	add	r1, sl, #1
   34214:	sub	r0, r8, r1
   34218:	cmp	r0, #2
   3421c:	blt	342a4 <flatcc_json_parser_union_type_vector@@Base+0x534>
   34220:	ldrb	r0, [r1]
   34224:	cmp	r0, #32
   34228:	bls	34294 <flatcc_json_parser_union_type_vector@@Base+0x524>
   3422c:	mov	sl, r1
   34230:	cmp	sl, r8
   34234:	beq	342bc <flatcc_json_parser_union_type_vector@@Base+0x54c>
   34238:	ldrb	r0, [sl]
   3423c:	cmp	r0, #93	; 0x5d
   34240:	beq	342f0 <flatcc_json_parser_union_type_vector@@Base+0x580>
   34244:	ldr	r0, [r5]
   34248:	mov	r1, #1
   3424c:	bl	2bf58 <flatcc_builder_extend_vector@@Base>
   34250:	mov	r1, r0
   34254:	cmp	r0, #0
   34258:	bne	33f38 <flatcc_json_parser_union_type_vector@@Base+0x1c8>
   3425c:	b	33df8 <flatcc_json_parser_union_type_vector@@Base+0x88>
   34260:	bne	34274 <flatcc_json_parser_union_type_vector@@Base+0x504>
   34264:	mov	sl, r4
   34268:	ldrb	r0, [sl, #1]!
   3426c:	cmp	r0, #32
   34270:	bhi	34288 <flatcc_json_parser_union_type_vector@@Base+0x518>
   34274:	mov	r0, r5
   34278:	mov	r1, r4
   3427c:	mov	r2, r8
   34280:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   34284:	mov	sl, r0
   34288:	cmp	sl, r8
   3428c:	bne	34200 <flatcc_json_parser_union_type_vector@@Base+0x490>
   34290:	b	342dc <flatcc_json_parser_union_type_vector@@Base+0x56c>
   34294:	bne	342a4 <flatcc_json_parser_union_type_vector@@Base+0x534>
   34298:	ldrb	r0, [sl, #2]!
   3429c:	cmp	r0, #32
   342a0:	bhi	342b4 <flatcc_json_parser_union_type_vector@@Base+0x544>
   342a4:	mov	r0, r5
   342a8:	mov	r2, r8
   342ac:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   342b0:	mov	sl, r0
   342b4:	cmp	sl, r8
   342b8:	bne	34238 <flatcc_json_parser_union_type_vector@@Base+0x4c8>
   342bc:	ldr	r0, [r5, #24]
   342c0:	cmp	r0, #0
   342c4:	mov	r0, r8
   342c8:	bne	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   342cc:	str	r8, [r5, #36]	; 0x24
   342d0:	ldr	r2, [sp, #12]
   342d4:	mov	r0, #9
   342d8:	b	33e8c <flatcc_json_parser_union_type_vector@@Base+0x11c>
   342dc:	ldr	r4, [sp, #16]
   342e0:	mov	r0, r8
   342e4:	b	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   342e8:	cmp	r0, #93	; 0x5d
   342ec:	bne	34314 <flatcc_json_parser_union_type_vector@@Base+0x5a4>
   342f0:	add	r1, sl, #1
   342f4:	sub	r0, r8, r1
   342f8:	cmp	r0, #2
   342fc:	blt	34378 <flatcc_json_parser_union_type_vector@@Base+0x608>
   34300:	ldrb	r0, [r1]
   34304:	cmp	r0, #32
   34308:	bls	34364 <flatcc_json_parser_union_type_vector@@Base+0x5f4>
   3430c:	mov	r0, r1
   34310:	b	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   34314:	ldr	r0, [r5, #24]
   34318:	cmp	r0, #0
   3431c:	mov	r0, r8
   34320:	bne	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   34324:	str	sl, [r5, #36]	; 0x24
   34328:	mov	r0, #9
   3432c:	add	r2, sl, #1
   34330:	b	33e8c <flatcc_json_parser_union_type_vector@@Base+0x11c>
   34334:	mov	sl, r4
   34338:	ldr	r0, [r5, #24]
   3433c:	cmp	r0, #0
   34340:	bne	33e20 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   34344:	b	33e04 <flatcc_json_parser_union_type_vector@@Base+0x94>
   34348:	ldr	r0, [r5, #24]
   3434c:	cmp	r0, #0
   34350:	bne	33e20 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   34354:	str	r4, [r5, #36]	; 0x24
   34358:	mov	r0, #15
   3435c:	add	r2, r4, #1
   34360:	b	33e10 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   34364:	bne	34378 <flatcc_json_parser_union_type_vector@@Base+0x608>
   34368:	ldrb	r0, [sl, #2]!
   3436c:	cmp	r0, #32
   34370:	mov	r0, sl
   34374:	bhi	34384 <flatcc_json_parser_union_type_vector@@Base+0x614>
   34378:	mov	r0, r5
   3437c:	mov	r2, r8
   34380:	bl	30220 <flatcc_json_parser_space_ext@@Base>
   34384:	mov	sl, r0
   34388:	ldr	r0, [r5]
   3438c:	bl	2de1c <flatcc_builder_vector_count@@Base>
   34390:	str	r0, [r4, #16]
   34394:	mov	r7, r0
   34398:	ldr	r0, [r5]
   3439c:	mov	r1, r7
   343a0:	bl	2b2fc <flatcc_builder_enter_user_frame@@Base>
   343a4:	mov	r9, r0
   343a8:	ldr	r0, [r5]
   343ac:	mov	r1, r9
   343b0:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   343b4:	mov	r4, r0
   343b8:	ldr	r0, [r5]
   343bc:	bl	2de28 <flatcc_builder_vector_edit@@Base>
   343c0:	mov	r1, r0
   343c4:	mov	r0, r4
   343c8:	mov	r2, r7
   343cc:	bl	12ab0 <memcpy@plt>
   343d0:	ldr	r0, [r5]
   343d4:	bl	2dd2c <flatcc_builder_end_vector@@Base>
   343d8:	cmp	r0, #0
   343dc:	beq	33df8 <flatcc_json_parser_union_type_vector@@Base+0x88>
   343e0:	ldr	r1, [fp, #8]
   343e4:	mov	r4, r0
   343e8:	ldr	r0, [r5]
   343ec:	sub	r1, r1, #1
   343f0:	bl	2e244 <flatcc_builder_table_add_offset@@Base>
   343f4:	cmp	r0, #0
   343f8:	beq	33df8 <flatcc_json_parser_union_type_vector@@Base+0x88>
   343fc:	str	r4, [r0]
   34400:	ldr	r1, [fp, #12]
   34404:	ldr	r0, [r5]
   34408:	bl	2b48c <flatcc_builder_get_user_frame_ptr@@Base>
   3440c:	add	r2, r0, #8
   34410:	mov	r3, r2
   34414:	ldr	r1, [r3, r6, lsl #3]!
   34418:	str	r9, [r3, #20]
   3441c:	cmp	r1, #0
   34420:	ldr	r3, [r0, #4]
   34424:	beq	34494 <flatcc_json_parser_union_type_vector@@Base+0x724>
   34428:	cmp	r3, #0
   3442c:	beq	344ac <flatcc_json_parser_union_type_vector@@Base+0x73c>
   34430:	sub	r3, r3, #1
   34434:	ldr	ip, [fp, #20]
   34438:	str	r3, [r0, #4]
   3443c:	add	r0, r2, r6, lsl #3
   34440:	mov	r3, r9
   34444:	ldr	r2, [r0, #8]
   34448:	ldr	r6, [r5, #4]
   3444c:	ldr	r4, [r5, #16]
   34450:	str	r2, [r5, #16]
   34454:	mov	r2, r8
   34458:	ldr	r0, [r0, #4]
   3445c:	str	r0, [r5, #4]
   34460:	ldr	r0, [fp, #8]
   34464:	str	r7, [sp]
   34468:	stmib	sp, {r0, ip}
   3446c:	mov	r0, r5
   34470:	bl	338fc <flatcc_json_parser_union_vector@@Base+0x100>
   34474:	cmp	r0, r8
   34478:	beq	33e20 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   3447c:	str	r6, [r5, #4]
   34480:	str	r4, [r5, #16]
   34484:	mov	r8, sl
   34488:	mov	r0, r8
   3448c:	sub	sp, fp, #28
   34490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34494:	add	r1, r3, #1
   34498:	str	r1, [r0, #4]
   3449c:	mov	r8, sl
   344a0:	mov	r0, r8
   344a4:	sub	sp, fp, #28
   344a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   344ac:	movw	r0, #28589	; 0x6fad
   344b0:	movw	r1, #28604	; 0x6fbc
   344b4:	movw	r3, #28882	; 0x70d2
   344b8:	movw	r2, #1122	; 0x462
   344bc:	movt	r0, #3
   344c0:	movt	r1, #3
   344c4:	movt	r3, #3
   344c8:	bl	12bc4 <__assert_fail@plt>

000344cc <flatcc_json_parser_table_as_root@@Base>:
   344cc:	push	{r4, r5, r6, r7, fp, lr}
   344d0:	add	fp, sp, #16
   344d4:	sub	sp, sp, #48	; 0x30
   344d8:	add	r5, sp, #4
   344dc:	cmp	r1, #0
   344e0:	mov	r6, r0
   344e4:	vmov.i32	q8, #0	; 0x00000000
   344e8:	add	r7, r2, r3
   344ec:	mov	r4, r2
   344f0:	movne	r5, r1
   344f4:	mov	r1, #1
   344f8:	add	r0, r5, #12
   344fc:	vst1.32	{d16-d17}, [r0]
   34500:	add	r0, r5, #28
   34504:	vst1.32	{d16-d17}, [r0]
   34508:	ldr	r0, [fp, #8]
   3450c:	str	r6, [r5]
   34510:	str	r2, [r5, #4]
   34514:	str	r0, [r5, #8]
   34518:	str	r1, [r5, #16]
   3451c:	mov	r1, #2
   34520:	str	r2, [r5, #28]
   34524:	str	r7, [r5, #32]
   34528:	str	r2, [r5, #36]	; 0x24
   3452c:	mov	r2, #0
   34530:	and	r3, r1, r0, lsr #1
   34534:	ldr	r1, [fp, #12]
   34538:	mov	r0, r6
   3453c:	bl	2ba6c <flatcc_builder_start_buffer@@Base>
   34540:	mov	r1, r0
   34544:	mvn	r0, #0
   34548:	cmp	r1, #0
   3454c:	bne	34574 <flatcc_json_parser_table_as_root@@Base+0xa8>
   34550:	ldr	ip, [fp, #16]
   34554:	mov	r3, sp
   34558:	mov	r0, r5
   3455c:	mov	r1, r4
   34560:	mov	r2, r7
   34564:	blx	ip
   34568:	ldr	r0, [r5, #24]
   3456c:	cmp	r0, #0
   34570:	beq	3457c <flatcc_json_parser_table_as_root@@Base+0xb0>
   34574:	sub	sp, fp, #16
   34578:	pop	{r4, r5, r6, r7, fp, pc}
   3457c:	ldr	r1, [sp]
   34580:	mov	r0, r6
   34584:	bl	2bc5c <flatcc_builder_end_buffer@@Base>
   34588:	cmp	r0, #0
   3458c:	mvn	r0, #0
   34590:	movne	r0, #0
   34594:	strne	r4, [r5, #40]	; 0x28
   34598:	sub	sp, fp, #16
   3459c:	pop	{r4, r5, r6, r7, fp, pc}

000345a0 <flatcc_json_parser_struct_as_root@@Base>:
   345a0:	push	{r4, r5, r6, r7, fp, lr}
   345a4:	add	fp, sp, #16
   345a8:	sub	sp, sp, #48	; 0x30
   345ac:	add	r5, sp, #4
   345b0:	cmp	r1, #0
   345b4:	mov	r6, r0
   345b8:	vmov.i32	q8, #0	; 0x00000000
   345bc:	add	r7, r2, r3
   345c0:	mov	r4, r2
   345c4:	movne	r5, r1
   345c8:	mov	r1, #1
   345cc:	add	r0, r5, #12
   345d0:	vst1.32	{d16-d17}, [r0]
   345d4:	add	r0, r5, #28
   345d8:	vst1.32	{d16-d17}, [r0]
   345dc:	ldr	r0, [fp, #8]
   345e0:	str	r6, [r5]
   345e4:	str	r2, [r5, #4]
   345e8:	str	r0, [r5, #8]
   345ec:	str	r1, [r5, #16]
   345f0:	mov	r1, #2
   345f4:	str	r2, [r5, #28]
   345f8:	str	r7, [r5, #32]
   345fc:	str	r2, [r5, #36]	; 0x24
   34600:	mov	r2, #0
   34604:	and	r3, r1, r0, lsr #1
   34608:	ldr	r1, [fp, #12]
   3460c:	mov	r0, r6
   34610:	bl	2ba6c <flatcc_builder_start_buffer@@Base>
   34614:	mov	r1, r0
   34618:	mvn	r0, #0
   3461c:	cmp	r1, #0
   34620:	bne	34648 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   34624:	ldr	ip, [fp, #16]
   34628:	mov	r3, sp
   3462c:	mov	r0, r5
   34630:	mov	r1, r4
   34634:	mov	r2, r7
   34638:	blx	ip
   3463c:	ldr	r0, [r5, #24]
   34640:	cmp	r0, #0
   34644:	beq	34650 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   34648:	sub	sp, fp, #16
   3464c:	pop	{r4, r5, r6, r7, fp, pc}
   34650:	ldr	r1, [sp]
   34654:	mov	r0, r6
   34658:	bl	2bc5c <flatcc_builder_end_buffer@@Base>
   3465c:	cmp	r0, #0
   34660:	mvn	r0, #0
   34664:	movne	r0, #0
   34668:	strne	r4, [r5, #40]	; 0x28
   3466c:	sub	sp, fp, #16
   34670:	pop	{r4, r5, r6, r7, fp, pc}
   34674:	eor	r1, r1, #-2147483648	; 0x80000000
   34678:	b	34680 <flatcc_json_parser_struct_as_root@@Base+0xe0>
   3467c:	eor	r3, r3, #-2147483648	; 0x80000000
   34680:	push	{r4, r5, lr}
   34684:	lsl	r4, r1, #1
   34688:	lsl	r5, r3, #1
   3468c:	teq	r4, r5
   34690:	teqeq	r0, r2
   34694:	orrsne	ip, r4, r0
   34698:	orrsne	ip, r5, r2
   3469c:	mvnsne	ip, r4, asr #21
   346a0:	mvnsne	ip, r5, asr #21
   346a4:	beq	34890 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   346a8:	lsr	r4, r4, #21
   346ac:	rsbs	r5, r4, r5, lsr #21
   346b0:	rsblt	r5, r5, #0
   346b4:	ble	346d4 <flatcc_json_parser_struct_as_root@@Base+0x134>
   346b8:	add	r4, r4, r5
   346bc:	eor	r2, r0, r2
   346c0:	eor	r3, r1, r3
   346c4:	eor	r0, r2, r0
   346c8:	eor	r1, r3, r1
   346cc:	eor	r2, r0, r2
   346d0:	eor	r3, r1, r3
   346d4:	cmp	r5, #54	; 0x36
   346d8:	pophi	{r4, r5, pc}
   346dc:	tst	r1, #-2147483648	; 0x80000000
   346e0:	lsl	r1, r1, #12
   346e4:	mov	ip, #1048576	; 0x100000
   346e8:	orr	r1, ip, r1, lsr #12
   346ec:	beq	346f8 <flatcc_json_parser_struct_as_root@@Base+0x158>
   346f0:	rsbs	r0, r0, #0
   346f4:	rsc	r1, r1, #0
   346f8:	tst	r3, #-2147483648	; 0x80000000
   346fc:	lsl	r3, r3, #12
   34700:	orr	r3, ip, r3, lsr #12
   34704:	beq	34710 <flatcc_json_parser_struct_as_root@@Base+0x170>
   34708:	rsbs	r2, r2, #0
   3470c:	rsc	r3, r3, #0
   34710:	teq	r4, r5
   34714:	beq	34878 <flatcc_json_parser_struct_as_root@@Base+0x2d8>
   34718:	sub	r4, r4, #1
   3471c:	rsbs	lr, r5, #32
   34720:	blt	3473c <flatcc_json_parser_struct_as_root@@Base+0x19c>
   34724:	lsl	ip, r2, lr
   34728:	adds	r0, r0, r2, lsr r5
   3472c:	adc	r1, r1, #0
   34730:	adds	r0, r0, r3, lsl lr
   34734:	adcs	r1, r1, r3, asr r5
   34738:	b	34758 <flatcc_json_parser_struct_as_root@@Base+0x1b8>
   3473c:	sub	r5, r5, #32
   34740:	add	lr, lr, #32
   34744:	cmp	r2, #1
   34748:	lsl	ip, r3, lr
   3474c:	orrcs	ip, ip, #2
   34750:	adds	r0, r0, r3, asr r5
   34754:	adcs	r1, r1, r3, asr #31
   34758:	and	r5, r1, #-2147483648	; 0x80000000
   3475c:	bpl	3476c <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   34760:	rsbs	ip, ip, #0
   34764:	rscs	r0, r0, #0
   34768:	rsc	r1, r1, #0
   3476c:	cmp	r1, #1048576	; 0x100000
   34770:	bcc	347b0 <flatcc_json_parser_struct_as_root@@Base+0x210>
   34774:	cmp	r1, #2097152	; 0x200000
   34778:	bcc	34798 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   3477c:	lsrs	r1, r1, #1
   34780:	rrxs	r0, r0
   34784:	rrx	ip, ip
   34788:	add	r4, r4, #1
   3478c:	lsl	r2, r4, #21
   34790:	cmn	r2, #4194304	; 0x400000
   34794:	bcs	348f0 <flatcc_json_parser_struct_as_root@@Base+0x350>
   34798:	cmp	ip, #-2147483648	; 0x80000000
   3479c:	lsrseq	ip, r0, #1
   347a0:	adcs	r0, r0, #0
   347a4:	adc	r1, r1, r4, lsl #20
   347a8:	orr	r1, r1, r5
   347ac:	pop	{r4, r5, pc}
   347b0:	lsls	ip, ip, #1
   347b4:	adcs	r0, r0, r0
   347b8:	adc	r1, r1, r1
   347bc:	tst	r1, #1048576	; 0x100000
   347c0:	sub	r4, r4, #1
   347c4:	bne	34798 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   347c8:	teq	r1, #0
   347cc:	moveq	r1, r0
   347d0:	moveq	r0, #0
   347d4:	clz	r3, r1
   347d8:	addeq	r3, r3, #32
   347dc:	sub	r3, r3, #11
   347e0:	subs	r2, r3, #32
   347e4:	bge	34808 <flatcc_json_parser_struct_as_root@@Base+0x268>
   347e8:	adds	r2, r2, #12
   347ec:	ble	34804 <flatcc_json_parser_struct_as_root@@Base+0x264>
   347f0:	add	ip, r2, #20
   347f4:	rsb	r2, r2, #12
   347f8:	lsl	r0, r1, ip
   347fc:	lsr	r1, r1, r2
   34800:	b	34818 <flatcc_json_parser_struct_as_root@@Base+0x278>
   34804:	add	r2, r2, #20
   34808:	rsble	ip, r2, #32
   3480c:	lsl	r1, r1, r2
   34810:	orrle	r1, r1, r0, lsr ip
   34814:	lslle	r0, r0, r2
   34818:	subs	r4, r4, r3
   3481c:	addge	r1, r1, r4, lsl #20
   34820:	orrge	r1, r1, r5
   34824:	popge	{r4, r5, pc}
   34828:	mvn	r4, r4
   3482c:	subs	r4, r4, #31
   34830:	bge	3486c <flatcc_json_parser_struct_as_root@@Base+0x2cc>
   34834:	adds	r4, r4, #12
   34838:	bgt	34854 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   3483c:	add	r4, r4, #20
   34840:	rsb	r2, r4, #32
   34844:	lsr	r0, r0, r4
   34848:	orr	r0, r0, r1, lsl r2
   3484c:	orr	r1, r5, r1, lsr r4
   34850:	pop	{r4, r5, pc}
   34854:	rsb	r4, r4, #12
   34858:	rsb	r2, r4, #32
   3485c:	lsr	r0, r0, r2
   34860:	orr	r0, r0, r1, lsl r4
   34864:	mov	r1, r5
   34868:	pop	{r4, r5, pc}
   3486c:	lsr	r0, r1, r4
   34870:	mov	r1, r5
   34874:	pop	{r4, r5, pc}
   34878:	teq	r4, #0
   3487c:	eor	r3, r3, #1048576	; 0x100000
   34880:	eoreq	r1, r1, #1048576	; 0x100000
   34884:	addeq	r4, r4, #1
   34888:	subne	r5, r5, #1
   3488c:	b	34718 <flatcc_json_parser_struct_as_root@@Base+0x178>
   34890:	mvns	ip, r4, asr #21
   34894:	mvnsne	ip, r5, asr #21
   34898:	beq	34900 <flatcc_json_parser_struct_as_root@@Base+0x360>
   3489c:	teq	r4, r5
   348a0:	teqeq	r0, r2
   348a4:	beq	348b8 <flatcc_json_parser_struct_as_root@@Base+0x318>
   348a8:	orrs	ip, r4, r0
   348ac:	moveq	r1, r3
   348b0:	moveq	r0, r2
   348b4:	pop	{r4, r5, pc}
   348b8:	teq	r1, r3
   348bc:	movne	r1, #0
   348c0:	movne	r0, #0
   348c4:	popne	{r4, r5, pc}
   348c8:	lsrs	ip, r4, #21
   348cc:	bne	348e0 <flatcc_json_parser_struct_as_root@@Base+0x340>
   348d0:	lsls	r0, r0, #1
   348d4:	adcs	r1, r1, r1
   348d8:	orrcs	r1, r1, #-2147483648	; 0x80000000
   348dc:	pop	{r4, r5, pc}
   348e0:	adds	r4, r4, #4194304	; 0x400000
   348e4:	addcc	r1, r1, #1048576	; 0x100000
   348e8:	popcc	{r4, r5, pc}
   348ec:	and	r5, r1, #-2147483648	; 0x80000000
   348f0:	orr	r1, r5, #2130706432	; 0x7f000000
   348f4:	orr	r1, r1, #15728640	; 0xf00000
   348f8:	mov	r0, #0
   348fc:	pop	{r4, r5, pc}
   34900:	mvns	ip, r4, asr #21
   34904:	movne	r1, r3
   34908:	movne	r0, r2
   3490c:	mvnseq	ip, r5, asr #21
   34910:	movne	r3, r1
   34914:	movne	r2, r0
   34918:	orrs	r4, r0, r1, lsl #12
   3491c:	orrseq	r5, r2, r3, lsl #12
   34920:	teqeq	r1, r3
   34924:	orrne	r1, r1, #524288	; 0x80000
   34928:	pop	{r4, r5, pc}
   3492c:	teq	r0, #0
   34930:	moveq	r1, #0
   34934:	bxeq	lr
   34938:	push	{r4, r5, lr}
   3493c:	mov	r4, #1024	; 0x400
   34940:	add	r4, r4, #50	; 0x32
   34944:	mov	r5, #0
   34948:	mov	r1, #0
   3494c:	b	347c8 <flatcc_json_parser_struct_as_root@@Base+0x228>
   34950:	teq	r0, #0
   34954:	moveq	r1, #0
   34958:	bxeq	lr
   3495c:	push	{r4, r5, lr}
   34960:	mov	r4, #1024	; 0x400
   34964:	add	r4, r4, #50	; 0x32
   34968:	ands	r5, r0, #-2147483648	; 0x80000000
   3496c:	rsbmi	r0, r0, #0
   34970:	mov	r1, #0
   34974:	b	347c8 <flatcc_json_parser_struct_as_root@@Base+0x228>
   34978:	lsls	r2, r0, #1
   3497c:	asr	r1, r2, #3
   34980:	rrx	r1, r1
   34984:	lsl	r0, r2, #28
   34988:	andsne	r3, r2, #-16777216	; 0xff000000
   3498c:	teqne	r3, #-16777216	; 0xff000000
   34990:	eorne	r1, r1, #939524096	; 0x38000000
   34994:	bxne	lr
   34998:	bics	r2, r2, #-16777216	; 0xff000000
   3499c:	bxeq	lr
   349a0:	teq	r3, #-16777216	; 0xff000000
   349a4:	orreq	r1, r1, #524288	; 0x80000
   349a8:	bxeq	lr
   349ac:	push	{r4, r5, lr}
   349b0:	mov	r4, #896	; 0x380
   349b4:	and	r5, r1, #-2147483648	; 0x80000000
   349b8:	bic	r1, r1, #-2147483648	; 0x80000000
   349bc:	b	347c8 <flatcc_json_parser_struct_as_root@@Base+0x228>
   349c0:	orrs	r2, r0, r1
   349c4:	bxeq	lr
   349c8:	push	{r4, r5, lr}
   349cc:	mov	r5, #0
   349d0:	b	349f0 <flatcc_json_parser_struct_as_root@@Base+0x450>
   349d4:	orrs	r2, r0, r1
   349d8:	bxeq	lr
   349dc:	push	{r4, r5, lr}
   349e0:	ands	r5, r1, #-2147483648	; 0x80000000
   349e4:	bpl	349f0 <flatcc_json_parser_struct_as_root@@Base+0x450>
   349e8:	rsbs	r0, r0, #0
   349ec:	rsc	r1, r1, #0
   349f0:	mov	r4, #1024	; 0x400
   349f4:	add	r4, r4, #50	; 0x32
   349f8:	lsrs	ip, r1, #22
   349fc:	beq	3476c <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   34a00:	mov	r2, #3
   34a04:	lsrs	ip, ip, #3
   34a08:	addne	r2, r2, #3
   34a0c:	lsrs	ip, ip, #3
   34a10:	addne	r2, r2, #3
   34a14:	add	r2, r2, ip, lsr #3
   34a18:	rsb	r3, r2, #32
   34a1c:	lsl	ip, r0, r3
   34a20:	lsr	r0, r0, r2
   34a24:	orr	r0, r0, r1, lsl r3
   34a28:	lsr	r1, r1, r2
   34a2c:	add	r4, r4, r2
   34a30:	b	3476c <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   34a34:	eor	r0, r0, #-2147483648	; 0x80000000
   34a38:	b	34a40 <flatcc_json_parser_struct_as_root@@Base+0x4a0>
   34a3c:	eor	r1, r1, #-2147483648	; 0x80000000
   34a40:	lsls	r2, r0, #1
   34a44:	lslsne	r3, r1, #1
   34a48:	teqne	r2, r3
   34a4c:	mvnsne	ip, r2, asr #24
   34a50:	mvnsne	ip, r3, asr #24
   34a54:	beq	34b4c <flatcc_json_parser_struct_as_root@@Base+0x5ac>
   34a58:	lsr	r2, r2, #24
   34a5c:	rsbs	r3, r2, r3, lsr #24
   34a60:	addgt	r2, r2, r3
   34a64:	eorgt	r1, r0, r1
   34a68:	eorgt	r0, r1, r0
   34a6c:	eorgt	r1, r0, r1
   34a70:	rsblt	r3, r3, #0
   34a74:	cmp	r3, #25
   34a78:	bxhi	lr
   34a7c:	tst	r0, #-2147483648	; 0x80000000
   34a80:	orr	r0, r0, #8388608	; 0x800000
   34a84:	bic	r0, r0, #-16777216	; 0xff000000
   34a88:	rsbne	r0, r0, #0
   34a8c:	tst	r1, #-2147483648	; 0x80000000
   34a90:	orr	r1, r1, #8388608	; 0x800000
   34a94:	bic	r1, r1, #-16777216	; 0xff000000
   34a98:	rsbne	r1, r1, #0
   34a9c:	teq	r2, r3
   34aa0:	beq	34b34 <flatcc_json_parser_struct_as_root@@Base+0x594>
   34aa4:	sub	r2, r2, #1
   34aa8:	adds	r0, r0, r1, asr r3
   34aac:	rsb	r3, r3, #32
   34ab0:	lsl	r1, r1, r3
   34ab4:	and	r3, r0, #-2147483648	; 0x80000000
   34ab8:	bpl	34ac4 <flatcc_json_parser_struct_as_root@@Base+0x524>
   34abc:	rsbs	r1, r1, #0
   34ac0:	rsc	r0, r0, #0
   34ac4:	cmp	r0, #8388608	; 0x800000
   34ac8:	bcc	34afc <flatcc_json_parser_struct_as_root@@Base+0x55c>
   34acc:	cmp	r0, #16777216	; 0x1000000
   34ad0:	bcc	34ae8 <flatcc_json_parser_struct_as_root@@Base+0x548>
   34ad4:	lsrs	r0, r0, #1
   34ad8:	rrx	r1, r1
   34adc:	add	r2, r2, #1
   34ae0:	cmp	r2, #254	; 0xfe
   34ae4:	bcs	34ba0 <flatcc_json_parser_struct_as_root@@Base+0x600>
   34ae8:	cmp	r1, #-2147483648	; 0x80000000
   34aec:	adc	r0, r0, r2, lsl #23
   34af0:	biceq	r0, r0, #1
   34af4:	orr	r0, r0, r3
   34af8:	bx	lr
   34afc:	lsls	r1, r1, #1
   34b00:	adc	r0, r0, r0
   34b04:	tst	r0, #8388608	; 0x800000
   34b08:	sub	r2, r2, #1
   34b0c:	bne	34ae8 <flatcc_json_parser_struct_as_root@@Base+0x548>
   34b10:	clz	ip, r0
   34b14:	sub	ip, ip, #8
   34b18:	subs	r2, r2, ip
   34b1c:	lsl	r0, r0, ip
   34b20:	addge	r0, r0, r2, lsl #23
   34b24:	rsblt	r2, r2, #0
   34b28:	orrge	r0, r0, r3
   34b2c:	orrlt	r0, r3, r0, lsr r2
   34b30:	bx	lr
   34b34:	teq	r2, #0
   34b38:	eor	r1, r1, #8388608	; 0x800000
   34b3c:	eoreq	r0, r0, #8388608	; 0x800000
   34b40:	addeq	r2, r2, #1
   34b44:	subne	r3, r3, #1
   34b48:	b	34aa4 <flatcc_json_parser_struct_as_root@@Base+0x504>
   34b4c:	lsl	r3, r1, #1
   34b50:	mvns	ip, r2, asr #24
   34b54:	mvnsne	ip, r3, asr #24
   34b58:	beq	34bac <flatcc_json_parser_struct_as_root@@Base+0x60c>
   34b5c:	teq	r2, r3
   34b60:	beq	34b70 <flatcc_json_parser_struct_as_root@@Base+0x5d0>
   34b64:	teq	r2, #0
   34b68:	moveq	r0, r1
   34b6c:	bx	lr
   34b70:	teq	r0, r1
   34b74:	movne	r0, #0
   34b78:	bxne	lr
   34b7c:	tst	r2, #-16777216	; 0xff000000
   34b80:	bne	34b90 <flatcc_json_parser_struct_as_root@@Base+0x5f0>
   34b84:	lsls	r0, r0, #1
   34b88:	orrcs	r0, r0, #-2147483648	; 0x80000000
   34b8c:	bx	lr
   34b90:	adds	r2, r2, #33554432	; 0x2000000
   34b94:	addcc	r0, r0, #8388608	; 0x800000
   34b98:	bxcc	lr
   34b9c:	and	r3, r0, #-2147483648	; 0x80000000
   34ba0:	orr	r0, r3, #2130706432	; 0x7f000000
   34ba4:	orr	r0, r0, #8388608	; 0x800000
   34ba8:	bx	lr
   34bac:	mvns	r2, r2, asr #24
   34bb0:	movne	r0, r1
   34bb4:	mvnseq	r3, r3, asr #24
   34bb8:	movne	r1, r0
   34bbc:	lsls	r2, r0, #9
   34bc0:	lslseq	r3, r1, #9
   34bc4:	teqeq	r0, r1
   34bc8:	orrne	r0, r0, #4194304	; 0x400000
   34bcc:	bx	lr
   34bd0:	mov	r3, #0
   34bd4:	b	34be0 <flatcc_json_parser_struct_as_root@@Base+0x640>
   34bd8:	ands	r3, r0, #-2147483648	; 0x80000000
   34bdc:	rsbmi	r0, r0, #0
   34be0:	movs	ip, r0
   34be4:	bxeq	lr
   34be8:	orr	r3, r3, #1258291200	; 0x4b000000
   34bec:	mov	r1, r0
   34bf0:	mov	r0, #0
   34bf4:	b	34c38 <flatcc_json_parser_struct_as_root@@Base+0x698>
   34bf8:	orrs	r2, r0, r1
   34bfc:	bxeq	lr
   34c00:	mov	r3, #0
   34c04:	b	34c20 <flatcc_json_parser_struct_as_root@@Base+0x680>
   34c08:	orrs	r2, r0, r1
   34c0c:	bxeq	lr
   34c10:	ands	r3, r1, #-2147483648	; 0x80000000
   34c14:	bpl	34c20 <flatcc_json_parser_struct_as_root@@Base+0x680>
   34c18:	rsbs	r0, r0, #0
   34c1c:	rsc	r1, r1, #0
   34c20:	movs	ip, r1
   34c24:	moveq	ip, r0
   34c28:	moveq	r1, r0
   34c2c:	moveq	r0, #0
   34c30:	orr	r3, r3, #1526726656	; 0x5b000000
   34c34:	subeq	r3, r3, #268435456	; 0x10000000
   34c38:	sub	r3, r3, #8388608	; 0x800000
   34c3c:	clz	r2, ip
   34c40:	subs	r2, r2, #8
   34c44:	sub	r3, r3, r2, lsl #23
   34c48:	blt	34c68 <flatcc_json_parser_struct_as_root@@Base+0x6c8>
   34c4c:	add	r3, r3, r1, lsl r2
   34c50:	lsl	ip, r0, r2
   34c54:	rsb	r2, r2, #32
   34c58:	cmp	ip, #-2147483648	; 0x80000000
   34c5c:	adc	r0, r3, r0, lsr r2
   34c60:	biceq	r0, r0, #1
   34c64:	bx	lr
   34c68:	add	r2, r2, #32
   34c6c:	lsl	ip, r1, r2
   34c70:	rsb	r2, r2, #32
   34c74:	orrs	r0, r0, ip, lsl #1
   34c78:	adc	r0, r3, r1, lsr r2
   34c7c:	biceq	r0, r0, ip, lsr #31
   34c80:	bx	lr

00034c84 <__libc_csu_init@@Base>:
   34c84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34c88:	mov	r7, r0
   34c8c:	ldr	r6, [pc, #72]	; 34cdc <__libc_csu_init@@Base+0x58>
   34c90:	ldr	r5, [pc, #72]	; 34ce0 <__libc_csu_init@@Base+0x5c>
   34c94:	add	r6, pc, r6
   34c98:	add	r5, pc, r5
   34c9c:	sub	r6, r6, r5
   34ca0:	mov	r8, r1
   34ca4:	mov	r9, r2
   34ca8:	bl	12a78 <fopen@plt-0x20>
   34cac:	asrs	r6, r6, #2
   34cb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34cb4:	mov	r4, #0
   34cb8:	add	r4, r4, #1
   34cbc:	ldr	r3, [r5], #4
   34cc0:	mov	r2, r9
   34cc4:	mov	r1, r8
   34cc8:	mov	r0, r7
   34ccc:	blx	r3
   34cd0:	cmp	r6, r4
   34cd4:	bne	34cb8 <__libc_csu_init@@Base+0x34>
   34cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34cdc:	andeq	r3, r1, r0, ror r2
   34ce0:	andeq	r3, r1, r8, ror #4

00034ce4 <__libc_csu_fini@@Base>:
   34ce4:	bx	lr

Disassembly of section .fini:

00034ce8 <.fini>:
   34ce8:	push	{r3, lr}
   34cec:	pop	{r3, pc}
