
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

000128e0 <.init>:
   128e0:	push	{r3, lr}
   128e4:	bl	12bf0 <_start@@Base+0x3c>
   128e8:	pop	{r3, pc}

Disassembly of section .plt:

000128ec <strcmp@plt-0x14>:
   128ec:	push	{lr}		; (str lr, [sp, #-4]!)
   128f0:	ldr	lr, [pc, #4]	; 128fc <strcmp@plt-0x4>
   128f4:	add	lr, pc, lr
   128f8:	ldr	pc, [lr, #8]!
   128fc:	andeq	r5, r1, r4, lsl #14

00012900 <strcmp@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #86016	; 0x15000
   12908:	ldr	pc, [ip, #1796]!	; 0x704

0001290c <printf@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #86016	; 0x15000
   12914:	ldr	pc, [ip, #1788]!	; 0x6fc

00012918 <free@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #86016	; 0x15000
   12920:	ldr	pc, [ip, #1780]!	; 0x6f4

00012924 <realloc@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #86016	; 0x15000
   1292c:	ldr	pc, [ip, #1772]!	; 0x6ec

00012930 <strcpy@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #86016	; 0x15000
   12938:	ldr	pc, [ip, #1764]!	; 0x6e4

0001293c <malloc@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #86016	; 0x15000
   12944:	ldr	pc, [ip, #1756]!	; 0x6dc

00012948 <__libc_start_main@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #86016	; 0x15000
   12950:	ldr	pc, [ip, #1748]!	; 0x6d4

00012954 <__gmon_start__@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #86016	; 0x15000
   1295c:	ldr	pc, [ip, #1740]!	; 0x6cc

00012960 <strlen@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #86016	; 0x15000
   12968:	ldr	pc, [ip, #1732]!	; 0x6c4

0001296c <snprintf@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #86016	; 0x15000
   12974:	ldr	pc, [ip, #1724]!	; 0x6bc

00012978 <__isoc99_sscanf@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #86016	; 0x15000
   12980:	ldr	pc, [ip, #1716]!	; 0x6b4

00012984 <abort@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #86016	; 0x15000
   1298c:	ldr	pc, [ip, #1708]!	; 0x6ac

Disassembly of section .text:

00012990 <main@@Base>:
   12990:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12994:	mov	r4, #0
   12998:	strd	r6, [sp, #8]
   1299c:	mov	r5, r4
   129a0:	str	r8, [sp, #16]
   129a4:	movw	r8, #52429	; 0xcccd
   129a8:	movt	r8, #52428	; 0xcccc
   129ac:	str	lr, [sp, #20]
   129b0:	vpush	{d8}
   129b4:	sub	sp, sp, #64	; 0x40
   129b8:	add	r0, sp, #8
   129bc:	vldr	s16, [pc, #484]	; 12ba8 <main@@Base+0x218>
   129c0:	bl	12e20 <table_init@@Base>
   129c4:	mov	r2, r4
   129c8:	add	r0, sp, #8
   129cc:	vldr	s17, [pc, #472]	; 12bac <main@@Base+0x21c>
   129d0:	movw	r1, #31616	; 0x7b80
   129d4:	movt	r1, #1
   129d8:	bl	1381c <table_add_column@@Base>
   129dc:	mov	r7, r0
   129e0:	movw	r1, #31620	; 0x7b84
   129e4:	movt	r1, #1
   129e8:	add	r0, sp, #8
   129ec:	mov	r2, #16
   129f0:	bl	1381c <table_add_column@@Base>
   129f4:	mov	r6, r0
   129f8:	b	12a58 <main@@Base+0xc8>
   129fc:	lsr	r3, r3, #3
   12a00:	add	r3, r3, r3, lsl #2
   12a04:	cmp	r4, r3, lsl #1
   12a08:	bne	12a14 <main@@Base+0x84>
   12a0c:	vldr	s16, [pc, #404]	; 12ba8 <main@@Base+0x218>
   12a10:	add	r5, r5, #1
   12a14:	tst	r4, #1
   12a18:	add	r0, sp, #8
   12a1c:	vaddeq.f32	s16, s16, s17
   12a20:	bl	15c08 <table_add_row@@Base>
   12a24:	mov	r3, r5
   12a28:	mov	r2, r7
   12a2c:	mov	r1, r4
   12a30:	add	r0, sp, #8
   12a34:	bl	16218 <table_set_int@@Base>
   12a38:	mov	r2, r6
   12a3c:	mov	r1, r4
   12a40:	vmov.f32	s0, s16
   12a44:	add	r0, sp, #8
   12a48:	bl	16bd4 <table_set_float@@Base>
   12a4c:	cmp	r4, #99	; 0x63
   12a50:	beq	12a98 <main@@Base+0x108>
   12a54:	add	r4, r4, #1
   12a58:	cmp	r4, #0
   12a5c:	umull	r2, r3, r8, r4
   12a60:	bne	129fc <main@@Base+0x6c>
   12a64:	add	r0, sp, #8
   12a68:	bl	15c08 <table_add_row@@Base>
   12a6c:	mov	r2, r7
   12a70:	mov	r1, r4
   12a74:	mov	r3, r5
   12a78:	add	r0, sp, #8
   12a7c:	bl	16218 <table_set_int@@Base>
   12a80:	vmov.f32	s0, s16
   12a84:	mov	r2, r6
   12a88:	mov	r1, r4
   12a8c:	add	r0, sp, #8
   12a90:	bl	16bd4 <table_set_float@@Base>
   12a94:	b	12a54 <main@@Base+0xc4>
   12a98:	mov	r1, r7
   12a9c:	mov	r3, #0
   12aa0:	mov	r2, #4
   12aa4:	add	r0, sp, #8
   12aa8:	bl	14cc4 <table_sorted_find_int@@Base>
   12aac:	mov	r5, r0
   12ab0:	mov	r1, r7
   12ab4:	mov	r3, #1
   12ab8:	mov	r2, #4
   12abc:	add	r0, sp, #8
   12ac0:	bl	14cc4 <table_sorted_find_int@@Base>
   12ac4:	cmp	r5, #40	; 0x28
   12ac8:	mov	r4, r0
   12acc:	moveq	r7, #0
   12ad0:	beq	12ae8 <main@@Base+0x158>
   12ad4:	movw	r0, #31624	; 0x7b88
   12ad8:	movt	r0, #1
   12adc:	mov	r1, r5
   12ae0:	mvn	r7, #0
   12ae4:	bl	1290c <printf@plt>
   12ae8:	cmp	r4, #49	; 0x31
   12aec:	beq	12b04 <main@@Base+0x174>
   12af0:	movw	r0, #31680	; 0x7bc0
   12af4:	movt	r0, #1
   12af8:	mov	r1, r4
   12afc:	mvn	r7, #0
   12b00:	bl	1290c <printf@plt>
   12b04:	mov	r3, r5
   12b08:	mov	r2, #0
   12b0c:	vldr	s0, [pc, #156]	; 12bb0 <main@@Base+0x220>
   12b10:	mov	r1, r6
   12b14:	add	r0, sp, #8
   12b18:	str	r4, [sp]
   12b1c:	bl	15760 <table_sorted_subset_find_float@@Base>
   12b20:	mov	r8, r0
   12b24:	mov	r3, r5
   12b28:	vldr	s0, [pc, #128]	; 12bb0 <main@@Base+0x220>
   12b2c:	mov	r1, r6
   12b30:	mov	r2, #1
   12b34:	str	r4, [sp]
   12b38:	add	r0, sp, #8
   12b3c:	bl	15760 <table_sorted_subset_find_float@@Base>
   12b40:	cmp	r8, #42	; 0x2a
   12b44:	mov	r4, r0
   12b48:	beq	12b60 <main@@Base+0x1d0>
   12b4c:	movw	r0, #31736	; 0x7bf8
   12b50:	movt	r0, #1
   12b54:	mov	r1, r8
   12b58:	mvn	r7, #0
   12b5c:	bl	1290c <printf@plt>
   12b60:	cmp	r4, #43	; 0x2b
   12b64:	bne	12b90 <main@@Base+0x200>
   12b68:	add	r0, sp, #8
   12b6c:	bl	12e60 <table_destroy@@Base>
   12b70:	mov	r0, r7
   12b74:	add	sp, sp, #64	; 0x40
   12b78:	vpop	{d8}
   12b7c:	ldrd	r4, [sp]
   12b80:	ldrd	r6, [sp, #8]
   12b84:	ldr	r8, [sp, #16]
   12b88:	add	sp, sp, #20
   12b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b90:	mov	r1, r4
   12b94:	movw	r0, #31800	; 0x7c38
   12b98:	movt	r0, #1
   12b9c:	mvn	r7, #0
   12ba0:	bl	1290c <printf@plt>
   12ba4:	b	12b68 <main@@Base+0x1d8>
   12ba8:	andeq	r0, r0, r0
   12bac:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12bb0:	svccc	0x00000000

00012bb4 <_start@@Base>:
   12bb4:	mov	fp, #0
   12bb8:	mov	lr, #0
   12bbc:	pop	{r1}		; (ldr r1, [sp], #4)
   12bc0:	mov	r2, sp
   12bc4:	push	{r2}		; (str r2, [sp, #-4]!)
   12bc8:	push	{r0}		; (str r0, [sp, #-4]!)
   12bcc:	ldr	ip, [pc, #16]	; 12be4 <_start@@Base+0x30>
   12bd0:	push	{ip}		; (str ip, [sp, #-4]!)
   12bd4:	ldr	r0, [pc, #12]	; 12be8 <_start@@Base+0x34>
   12bd8:	ldr	r3, [pc, #12]	; 12bec <_start@@Base+0x38>
   12bdc:	bl	12948 <__libc_start_main@plt>
   12be0:	bl	12984 <abort@plt>
   12be4:	andeq	r7, r1, r0, ror fp
   12be8:	muleq	r1, r0, r9
   12bec:	andeq	r7, r1, r0, lsl fp
   12bf0:	ldr	r3, [pc, #20]	; 12c0c <_start@@Base+0x58>
   12bf4:	ldr	r2, [pc, #20]	; 12c10 <_start@@Base+0x5c>
   12bf8:	add	r3, pc, r3
   12bfc:	ldr	r2, [r3, r2]
   12c00:	cmp	r2, #0
   12c04:	bxeq	lr
   12c08:	b	12954 <__gmon_start__@plt>
   12c0c:	andeq	r5, r1, r0, lsl #8
   12c10:	andeq	r0, r0, ip, lsr r0
   12c14:	ldr	r0, [pc, #24]	; 12c34 <_start@@Base+0x80>
   12c18:	ldr	r3, [pc, #24]	; 12c38 <_start@@Base+0x84>
   12c1c:	cmp	r3, r0
   12c20:	bxeq	lr
   12c24:	ldr	r3, [pc, #16]	; 12c3c <_start@@Base+0x88>
   12c28:	cmp	r3, #0
   12c2c:	bxeq	lr
   12c30:	bx	r3
   12c34:	andeq	r8, r2, r8, asr #32
   12c38:	andeq	r8, r2, r8, asr #32
   12c3c:	andeq	r0, r0, r0
   12c40:	ldr	r0, [pc, #36]	; 12c6c <_start@@Base+0xb8>
   12c44:	ldr	r1, [pc, #36]	; 12c70 <_start@@Base+0xbc>
   12c48:	sub	r1, r1, r0
   12c4c:	asr	r1, r1, #2
   12c50:	add	r1, r1, r1, lsr #31
   12c54:	asrs	r1, r1, #1
   12c58:	bxeq	lr
   12c5c:	ldr	r3, [pc, #16]	; 12c74 <_start@@Base+0xc0>
   12c60:	cmp	r3, #0
   12c64:	bxeq	lr
   12c68:	bx	r3
   12c6c:	andeq	r8, r2, r8, asr #32
   12c70:	andeq	r8, r2, r8, asr #32
   12c74:	andeq	r0, r0, r0
   12c78:	push	{r4, lr}
   12c7c:	ldr	r4, [pc, #24]	; 12c9c <_start@@Base+0xe8>
   12c80:	ldrb	r3, [r4]
   12c84:	cmp	r3, #0
   12c88:	popne	{r4, pc}
   12c8c:	bl	12c14 <_start@@Base+0x60>
   12c90:	mov	r3, #1
   12c94:	strb	r3, [r4]
   12c98:	pop	{r4, pc}
   12c9c:	andeq	r8, r2, r8, asr #32
   12ca0:	b	12c40 <_start@@Base+0x8c>
   12ca4:	mvn	r2, #0
   12ca8:	mov	r3, #64	; 0x40
   12cac:	strd	r4, [sp, #-16]!
   12cb0:	mov	r1, r2
   12cb4:	mov	r4, r0
   12cb8:	str	r6, [sp, #8]
   12cbc:	str	lr, [sp, #12]
   12cc0:	bl	1364c <table_notify@@Base>
   12cc4:	mov	r0, r4
   12cc8:	bl	15c00 <table_get_row_length@@Base>
   12ccc:	subs	r6, r0, #0
   12cd0:	ble	12cf0 <_start@@Base+0x13c>
   12cd4:	mov	r5, #0
   12cd8:	mov	r1, r5
   12cdc:	mov	r0, r4
   12ce0:	add	r5, r5, #1
   12ce4:	bl	15b80 <table_row_destroy@@Base>
   12ce8:	cmp	r6, r5
   12cec:	bne	12cd8 <_start@@Base+0x124>
   12cf0:	ldr	r0, [r4, #16]
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d00 <_start@@Base+0x14c>
   12cfc:	bl	12918 <free@plt>
   12d00:	mov	r0, r4
   12d04:	bl	13784 <table_get_column_length@@Base>
   12d08:	subs	r6, r0, #0
   12d0c:	ble	12d2c <_start@@Base+0x178>
   12d10:	mov	r5, #0
   12d14:	mov	r1, r5
   12d18:	mov	r0, r4
   12d1c:	add	r5, r5, #1
   12d20:	bl	13768 <table_column_destroy@@Base>
   12d24:	cmp	r6, r5
   12d28:	bne	12d14 <_start@@Base+0x160>
   12d2c:	ldr	r0, [r4]
   12d30:	cmp	r0, #0
   12d34:	beq	12d3c <_start@@Base+0x188>
   12d38:	bl	12918 <free@plt>
   12d3c:	ldr	r0, [r4, #36]	; 0x24
   12d40:	cmp	r0, #0
   12d44:	beq	12d4c <_start@@Base+0x198>
   12d48:	bl	12918 <free@plt>
   12d4c:	ldr	r0, [r4, #40]	; 0x28
   12d50:	cmp	r0, #0
   12d54:	beq	12d5c <_start@@Base+0x1a8>
   12d58:	bl	12918 <free@plt>
   12d5c:	ldr	r0, [r4, #44]	; 0x2c
   12d60:	cmp	r0, #0
   12d64:	beq	12d7c <_start@@Base+0x1c8>
   12d68:	ldrd	r4, [sp]
   12d6c:	ldr	r6, [sp, #8]
   12d70:	ldr	lr, [sp, #12]
   12d74:	add	sp, sp, #16
   12d78:	b	12918 <free@plt>
   12d7c:	ldrd	r4, [sp]
   12d80:	ldr	r6, [sp, #8]
   12d84:	add	sp, sp, #12
   12d88:	pop	{pc}		; (ldr pc, [sp], #4)

00012d8c <table_new@@Base>:
   12d8c:	mov	r0, #56	; 0x38
   12d90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12d94:	mov	r4, #10
   12d98:	mov	r5, #0
   12d9c:	strd	r6, [sp, #8]
   12da0:	mov	r6, #20
   12da4:	mov	r7, #0
   12da8:	str	r8, [sp, #16]
   12dac:	str	lr, [sp, #20]
   12db0:	bl	1293c <malloc@plt>
   12db4:	mov	r2, #0
   12db8:	ldr	r8, [sp, #16]
   12dbc:	strd	r4, [r0, #8]
   12dc0:	strd	r6, [r0, #24]
   12dc4:	strd	r4, [r0, #48]	; 0x30
   12dc8:	ldrd	r4, [sp]
   12dcc:	str	r2, [r0]
   12dd0:	ldrd	r6, [sp, #8]
   12dd4:	add	sp, sp, #20
   12dd8:	str	r2, [r0, #4]
   12ddc:	str	r2, [r0, #16]
   12de0:	str	r2, [r0, #20]
   12de4:	str	r2, [r0, #32]
   12de8:	str	r2, [r0, #36]	; 0x24
   12dec:	str	r2, [r0, #40]	; 0x28
   12df0:	str	r2, [r0, #44]	; 0x2c
   12df4:	pop	{pc}		; (ldr pc, [sp], #4)

00012df8 <table_delete@@Base>:
   12df8:	str	r4, [sp, #-8]!
   12dfc:	subs	r4, r0, #0
   12e00:	str	lr, [sp, #4]
   12e04:	beq	12e0c <table_delete@@Base+0x14>
   12e08:	bl	12ca4 <_start@@Base+0xf0>
   12e0c:	mov	r0, r4
   12e10:	ldr	r4, [sp]
   12e14:	ldr	lr, [sp, #4]
   12e18:	add	sp, sp, #8
   12e1c:	b	12918 <free@plt>

00012e20 <table_init@@Base>:
   12e20:	mov	r3, #0
   12e24:	mov	r2, #10
   12e28:	mov	r1, #20
   12e2c:	str	r3, [r0]
   12e30:	str	r3, [r0, #4]
   12e34:	strd	r2, [r0, #8]
   12e38:	str	r3, [r0, #16]
   12e3c:	str	r3, [r0, #20]
   12e40:	str	r1, [r0, #24]
   12e44:	str	r3, [r0, #28]
   12e48:	str	r3, [r0, #32]
   12e4c:	str	r3, [r0, #36]	; 0x24
   12e50:	str	r3, [r0, #40]	; 0x28
   12e54:	str	r3, [r0, #44]	; 0x2c
   12e58:	strd	r2, [r0, #48]	; 0x30
   12e5c:	bx	lr

00012e60 <table_destroy@@Base>:
   12e60:	cmp	r0, #0
   12e64:	beq	12e6c <table_destroy@@Base+0xc>
   12e68:	b	12ca4 <_start@@Base+0xf0>
   12e6c:	bx	lr

00012e70 <table_dupe@@Base>:
   12e70:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12e74:	mov	r4, #0
   12e78:	strd	r6, [sp, #8]
   12e7c:	mov	r6, r0
   12e80:	strd	r8, [sp, #16]
   12e84:	str	lr, [sp, #24]
   12e88:	sub	sp, sp, #20
   12e8c:	bl	15c00 <table_get_row_length@@Base>
   12e90:	mov	r9, r0
   12e94:	mov	r0, r6
   12e98:	bl	13784 <table_get_column_length@@Base>
   12e9c:	mov	r8, r0
   12ea0:	mov	r0, #56	; 0x38
   12ea4:	bl	1293c <malloc@plt>
   12ea8:	mov	r7, r0
   12eac:	mov	r2, #10
   12eb0:	mov	r3, #0
   12eb4:	mov	r0, #20
   12eb8:	mov	r1, #0
   12ebc:	cmp	r8, r4
   12ec0:	str	r4, [r7]
   12ec4:	str	r4, [r7, #4]
   12ec8:	strd	r2, [r7, #8]
   12ecc:	str	r4, [r7, #16]
   12ed0:	str	r4, [r7, #20]
   12ed4:	strd	r0, [r7, #24]
   12ed8:	str	r4, [r7, #32]
   12edc:	str	r4, [r7, #36]	; 0x24
   12ee0:	str	r4, [r7, #40]	; 0x28
   12ee4:	str	r4, [r7, #44]	; 0x2c
   12ee8:	strd	r2, [r7, #48]	; 0x30
   12eec:	ble	12f28 <table_dupe@@Base+0xb8>
   12ef0:	mov	r1, r4
   12ef4:	mov	r0, r6
   12ef8:	bl	13b20 <table_get_column_name@@Base>
   12efc:	mov	r5, r0
   12f00:	mov	r1, r4
   12f04:	mov	r0, r6
   12f08:	add	r4, r4, #1
   12f0c:	bl	13808 <table_get_column_data_type@@Base>
   12f10:	mov	r2, r0
   12f14:	mov	r1, r5
   12f18:	mov	r0, r7
   12f1c:	bl	1381c <table_add_column@@Base>
   12f20:	cmp	r8, r4
   12f24:	bne	12ef0 <table_dupe@@Base+0x80>
   12f28:	cmp	r9, #0
   12f2c:	ble	13000 <table_dupe@@Base+0x190>
   12f30:	mov	r5, #0
   12f34:	mov	r0, r7
   12f38:	bl	15c08 <table_add_row@@Base>
   12f3c:	cmp	r8, #0
   12f40:	ble	12ff4 <table_dupe@@Base+0x184>
   12f44:	mov	r4, #0
   12f48:	mov	r1, r4
   12f4c:	mov	r0, r6
   12f50:	bl	13808 <table_get_column_data_type@@Base>
   12f54:	cmp	r0, #23
   12f58:	ldrls	pc, [pc, r0, lsl #2]
   12f5c:	b	12fe8 <table_dupe@@Base+0x178>
   12f60:	andeq	r3, r1, ip, rrx
   12f64:	andeq	r3, r1, r0, ror #5
   12f68:			; <UNDEFINED> instruction: 0x000132b8
   12f6c:	muleq	r1, r0, r2
   12f70:	andeq	r3, r1, r8, ror #4
   12f74:	andeq	r3, r1, r0, lsl #7
   12f78:	andeq	r3, r1, r8, asr r3
   12f7c:	andeq	r3, r1, r0, lsr r3
   12f80:	andeq	r3, r1, r8, lsl #6
   12f84:	andeq	r3, r1, r0, asr #4
   12f88:	andeq	r3, r1, r8, lsl r2
   12f8c:	strdeq	r3, [r1], -r0
   12f90:	andeq	r3, r1, r8, asr #3
   12f94:	andeq	r3, r1, r0, lsr #3
   12f98:	andeq	r3, r1, r8, ror r1
   12f9c:	andeq	r3, r1, r0, asr r1
   12fa0:	andeq	r3, r1, ip, lsr #2
   12fa4:	andeq	r3, r1, r8, lsl #2
   12fa8:	andeq	r3, r1, r4, ror #1
   12fac:	strheq	r3, [r1], -ip
   12fb0:	muleq	r1, r4, r0
   12fb4:	andeq	r3, r1, r4, asr #32
   12fb8:	andeq	r3, r1, ip, lsl r0
   12fbc:	andeq	r2, r1, r0, asr #31
   12fc0:	mov	r2, r4
   12fc4:	mov	r1, r5
   12fc8:	mov	r0, r6
   12fcc:	bl	15b30 <table_get_ptr@@Base>
   12fd0:	add	r3, sp, #12
   12fd4:	mov	r2, r4
   12fd8:	str	r0, [sp, #12]
   12fdc:	mov	r1, r5
   12fe0:	mov	r0, r7
   12fe4:	bl	16f94 <table_set_ptr@@Base>
   12fe8:	add	r4, r4, #1
   12fec:	cmp	r8, r4
   12ff0:	bne	12f48 <table_dupe@@Base+0xd8>
   12ff4:	add	r5, r5, #1
   12ff8:	cmp	r9, r5
   12ffc:	bne	12f34 <table_dupe@@Base+0xc4>
   13000:	mov	r0, r7
   13004:	add	sp, sp, #20
   13008:	ldrd	r4, [sp]
   1300c:	ldrd	r6, [sp, #8]
   13010:	ldrd	r8, [sp, #16]
   13014:	add	sp, sp, #24
   13018:	pop	{pc}		; (ldr pc, [sp], #4)
   1301c:	mov	r2, r4
   13020:	mov	r1, r5
   13024:	mov	r0, r6
   13028:	bl	15854 <table_get_bool@@Base>
   1302c:	mov	r3, r0
   13030:	mov	r2, r4
   13034:	mov	r1, r5
   13038:	mov	r0, r7
   1303c:	bl	16180 <table_set_bool@@Base>
   13040:	b	12fe8 <table_dupe@@Base+0x178>
   13044:	mov	r2, r4
   13048:	mov	r1, r5
   1304c:	mov	r0, r6
   13050:	bl	15b14 <table_get_string@@Base>
   13054:	mov	r3, r0
   13058:	mov	r2, r4
   1305c:	mov	r1, r5
   13060:	mov	r0, r7
   13064:	bl	16dc0 <table_set_string@@Base>
   13068:	b	12fe8 <table_dupe@@Base+0x178>
   1306c:	mov	r2, r4
   13070:	mov	r1, r5
   13074:	mov	r0, r6
   13078:	bl	15874 <table_get_int@@Base>
   1307c:	mov	r3, r0
   13080:	mov	r2, r4
   13084:	mov	r1, r5
   13088:	mov	r0, r7
   1308c:	bl	16218 <table_set_int@@Base>
   13090:	b	12fe8 <table_dupe@@Base+0x178>
   13094:	mov	r2, r4
   13098:	mov	r1, r5
   1309c:	mov	r0, r6
   130a0:	bl	15af4 <table_get_uchar@@Base>
   130a4:	mov	r3, r0
   130a8:	mov	r2, r4
   130ac:	mov	r1, r5
   130b0:	mov	r0, r7
   130b4:	bl	16ef8 <table_set_uchar@@Base>
   130b8:	b	12fe8 <table_dupe@@Base+0x178>
   130bc:	mov	r2, r4
   130c0:	mov	r1, r5
   130c4:	mov	r0, r6
   130c8:	bl	15ad4 <table_get_char@@Base>
   130cc:	mov	r3, r0
   130d0:	mov	r2, r4
   130d4:	mov	r1, r5
   130d8:	mov	r0, r7
   130dc:	bl	16e5c <table_set_char@@Base>
   130e0:	b	12fe8 <table_dupe@@Base+0x178>
   130e4:	mov	r2, r4
   130e8:	mov	r1, r5
   130ec:	mov	r0, r6
   130f0:	bl	15ab4 <table_get_ldouble@@Base>
   130f4:	mov	r2, r4
   130f8:	mov	r1, r5
   130fc:	mov	r0, r7
   13100:	bl	16d18 <table_set_ldouble@@Base>
   13104:	b	12fe8 <table_dupe@@Base+0x178>
   13108:	mov	r2, r4
   1310c:	mov	r1, r5
   13110:	mov	r0, r6
   13114:	bl	15a94 <table_get_double@@Base>
   13118:	mov	r2, r4
   1311c:	mov	r1, r5
   13120:	mov	r0, r7
   13124:	bl	16c70 <table_set_double@@Base>
   13128:	b	12fe8 <table_dupe@@Base+0x178>
   1312c:	mov	r2, r4
   13130:	mov	r1, r5
   13134:	mov	r0, r6
   13138:	bl	15a74 <table_get_float@@Base>
   1313c:	mov	r2, r4
   13140:	mov	r1, r5
   13144:	mov	r0, r7
   13148:	bl	16bd4 <table_set_float@@Base>
   1314c:	b	12fe8 <table_dupe@@Base+0x178>
   13150:	mov	r2, r4
   13154:	mov	r1, r5
   13158:	mov	r0, r6
   1315c:	bl	15a54 <table_get_ullong@@Base>
   13160:	mov	r2, r4
   13164:	strd	r0, [sp]
   13168:	mov	r1, r5
   1316c:	mov	r0, r7
   13170:	bl	16b2c <table_set_ullong@@Base>
   13174:	b	12fe8 <table_dupe@@Base+0x178>
   13178:	mov	r2, r4
   1317c:	mov	r1, r5
   13180:	mov	r0, r6
   13184:	bl	15a34 <table_get_llong@@Base>
   13188:	mov	r2, r4
   1318c:	strd	r0, [sp]
   13190:	mov	r1, r5
   13194:	mov	r0, r7
   13198:	bl	16a84 <table_set_llong@@Base>
   1319c:	b	12fe8 <table_dupe@@Base+0x178>
   131a0:	mov	r2, r4
   131a4:	mov	r1, r5
   131a8:	mov	r0, r6
   131ac:	bl	15a14 <table_get_ulong@@Base>
   131b0:	mov	r3, r0
   131b4:	mov	r2, r4
   131b8:	mov	r1, r5
   131bc:	mov	r0, r7
   131c0:	bl	169e8 <table_set_ulong@@Base>
   131c4:	b	12fe8 <table_dupe@@Base+0x178>
   131c8:	mov	r2, r4
   131cc:	mov	r1, r5
   131d0:	mov	r0, r6
   131d4:	bl	159f4 <table_get_long@@Base>
   131d8:	mov	r3, r0
   131dc:	mov	r2, r4
   131e0:	mov	r1, r5
   131e4:	mov	r0, r7
   131e8:	bl	1694c <table_set_long@@Base>
   131ec:	b	12fe8 <table_dupe@@Base+0x178>
   131f0:	mov	r2, r4
   131f4:	mov	r1, r5
   131f8:	mov	r0, r6
   131fc:	bl	159d4 <table_get_ushort@@Base>
   13200:	mov	r3, r0
   13204:	mov	r2, r4
   13208:	mov	r1, r5
   1320c:	mov	r0, r7
   13210:	bl	168b4 <table_set_ushort@@Base>
   13214:	b	12fe8 <table_dupe@@Base+0x178>
   13218:	mov	r2, r4
   1321c:	mov	r1, r5
   13220:	mov	r0, r6
   13224:	bl	159b4 <table_get_short@@Base>
   13228:	mov	r3, r0
   1322c:	mov	r2, r4
   13230:	mov	r1, r5
   13234:	mov	r0, r7
   13238:	bl	1681c <table_set_short@@Base>
   1323c:	b	12fe8 <table_dupe@@Base+0x178>
   13240:	mov	r2, r4
   13244:	mov	r1, r5
   13248:	mov	r0, r6
   1324c:	bl	15994 <table_get_uint64@@Base>
   13250:	mov	r2, r4
   13254:	strd	r0, [sp]
   13258:	mov	r1, r5
   1325c:	mov	r0, r7
   13260:	bl	16778 <table_set_uint64@@Base>
   13264:	b	12fe8 <table_dupe@@Base+0x178>
   13268:	mov	r2, r4
   1326c:	mov	r1, r5
   13270:	mov	r0, r6
   13274:	bl	158f4 <table_get_int16@@Base>
   13278:	mov	r3, r0
   1327c:	mov	r2, r4
   13280:	mov	r1, r5
   13284:	mov	r0, r7
   13288:	bl	16478 <table_set_int16@@Base>
   1328c:	b	12fe8 <table_dupe@@Base+0x178>
   13290:	mov	r2, r4
   13294:	mov	r1, r5
   13298:	mov	r0, r6
   1329c:	bl	158d4 <table_get_uint8@@Base>
   132a0:	mov	r3, r0
   132a4:	mov	r2, r4
   132a8:	mov	r1, r5
   132ac:	mov	r0, r7
   132b0:	bl	163e0 <table_set_uint8@@Base>
   132b4:	b	12fe8 <table_dupe@@Base+0x178>
   132b8:	mov	r2, r4
   132bc:	mov	r1, r5
   132c0:	mov	r0, r6
   132c4:	bl	158b4 <table_get_int8@@Base>
   132c8:	mov	r3, r0
   132cc:	mov	r2, r4
   132d0:	mov	r1, r5
   132d4:	mov	r0, r7
   132d8:	bl	16348 <table_set_int8@@Base>
   132dc:	b	12fe8 <table_dupe@@Base+0x178>
   132e0:	mov	r2, r4
   132e4:	mov	r1, r5
   132e8:	mov	r0, r6
   132ec:	bl	15894 <table_get_uint@@Base>
   132f0:	mov	r3, r0
   132f4:	mov	r2, r4
   132f8:	mov	r1, r5
   132fc:	mov	r0, r7
   13300:	bl	162b0 <table_set_uint@@Base>
   13304:	b	12fe8 <table_dupe@@Base+0x178>
   13308:	mov	r2, r4
   1330c:	mov	r1, r5
   13310:	mov	r0, r6
   13314:	bl	15974 <table_get_int64@@Base>
   13318:	mov	r2, r4
   1331c:	strd	r0, [sp]
   13320:	mov	r1, r5
   13324:	mov	r0, r7
   13328:	bl	166d8 <table_set_int64@@Base>
   1332c:	b	12fe8 <table_dupe@@Base+0x178>
   13330:	mov	r2, r4
   13334:	mov	r1, r5
   13338:	mov	r0, r6
   1333c:	bl	15954 <table_get_uint32@@Base>
   13340:	mov	r3, r0
   13344:	mov	r2, r4
   13348:	mov	r1, r5
   1334c:	mov	r0, r7
   13350:	bl	16640 <table_set_uint32@@Base>
   13354:	b	12fe8 <table_dupe@@Base+0x178>
   13358:	mov	r2, r4
   1335c:	mov	r1, r5
   13360:	mov	r0, r6
   13364:	bl	15934 <table_get_int32@@Base>
   13368:	mov	r3, r0
   1336c:	mov	r2, r4
   13370:	mov	r1, r5
   13374:	mov	r0, r7
   13378:	bl	165a8 <table_set_int32@@Base>
   1337c:	b	12fe8 <table_dupe@@Base+0x178>
   13380:	mov	r2, r4
   13384:	mov	r1, r5
   13388:	mov	r0, r6
   1338c:	bl	15914 <table_get_uint16@@Base>
   13390:	mov	r3, r0
   13394:	mov	r2, r4
   13398:	mov	r1, r5
   1339c:	mov	r0, r7
   133a0:	bl	16510 <table_set_uint16@@Base>
   133a4:	b	12fe8 <table_dupe@@Base+0x178>

000133a8 <table_get_major_version@@Base>:
   133a8:	mov	r0, #0
   133ac:	bx	lr

000133b0 <table_get_minor_version@@Base>:
   133b0:	mov	r0, #0
   133b4:	bx	lr

000133b8 <table_get_patch_version@@Base>:
   133b8:	mov	r0, #0
   133bc:	bx	lr

000133c0 <table_get_version@@Base>:
   133c0:	movw	r0, #31860	; 0x7c74
   133c4:	movt	r0, #1
   133c8:	bx	lr

000133cc <table_get_callback_length@@Base>:
   133cc:	ldr	r0, [r0, #32]
   133d0:	bx	lr

000133d4 <table_register_callback@@Base>:
   133d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   133d8:	ldr	r5, [r0, #32]
   133dc:	strd	r6, [sp, #8]
   133e0:	strd	r8, [sp, #16]
   133e4:	str	sl, [sp, #24]
   133e8:	str	lr, [sp, #28]
   133ec:	cmp	r5, #0
   133f0:	ldr	r7, [r0, #36]	; 0x24
   133f4:	ble	1344c <table_register_callback@@Base+0x78>
   133f8:	sub	lr, r7, #4
   133fc:	mov	ip, #0
   13400:	b	13410 <table_register_callback@@Base+0x3c>
   13404:	add	ip, ip, #1
   13408:	cmp	ip, r5
   1340c:	beq	1344c <table_register_callback@@Base+0x78>
   13410:	ldr	r4, [lr, #4]!
   13414:	lsl	r6, ip, #2
   13418:	cmp	r1, r4
   1341c:	bne	13404 <table_register_callback@@Base+0x30>
   13420:	ldr	r4, [r0, #40]	; 0x28
   13424:	ldr	r4, [r4, ip, lsl #2]
   13428:	cmp	r2, r4
   1342c:	bne	13404 <table_register_callback@@Base+0x30>
   13430:	cmp	ip, #0
   13434:	beq	1344c <table_register_callback@@Base+0x78>
   13438:	ldr	r2, [r0, #44]	; 0x2c
   1343c:	ldr	r8, [r2, r6]
   13440:	orr	r8, r8, r3
   13444:	str	r8, [r2, r6]
   13448:	b	13490 <table_register_callback@@Base+0xbc>
   1344c:	mov	r8, r3
   13450:	ldr	r3, [r0, #48]	; 0x30
   13454:	mov	r4, r2
   13458:	mov	r9, r1
   1345c:	mov	r6, r0
   13460:	udiv	r2, r5, r3
   13464:	mls	r2, r3, r2, r5
   13468:	cmp	r2, #0
   1346c:	beq	134a8 <table_register_callback@@Base+0xd4>
   13470:	str	r9, [r7, r5, lsl #2]
   13474:	ldr	r3, [r6, #40]	; 0x28
   13478:	str	r4, [r3, r5, lsl #2]
   1347c:	ldr	r3, [r6, #44]	; 0x2c
   13480:	str	r8, [r3, r5, lsl #2]
   13484:	ldr	r3, [r6, #32]
   13488:	add	r3, r3, #1
   1348c:	str	r3, [r6, #32]
   13490:	ldrd	r4, [sp]
   13494:	ldrd	r6, [sp, #8]
   13498:	ldrd	r8, [sp, #16]
   1349c:	ldr	sl, [sp, #24]
   134a0:	add	sp, sp, #28
   134a4:	pop	{pc}		; (ldr pc, [sp], #4)
   134a8:	ldr	r2, [r6, #52]	; 0x34
   134ac:	mov	r0, r7
   134b0:	add	r3, r3, r2
   134b4:	lsl	r1, r3, #2
   134b8:	str	r3, [r6, #52]	; 0x34
   134bc:	bl	12924 <realloc@plt>
   134c0:	ldr	r1, [r6, #52]	; 0x34
   134c4:	str	r0, [r6, #36]	; 0x24
   134c8:	ldr	r0, [r6, #40]	; 0x28
   134cc:	lsl	r1, r1, #2
   134d0:	bl	12924 <realloc@plt>
   134d4:	ldr	r1, [r6, #52]	; 0x34
   134d8:	str	r0, [r6, #40]	; 0x28
   134dc:	ldr	r0, [r6, #44]	; 0x2c
   134e0:	lsl	r1, r1, #2
   134e4:	bl	12924 <realloc@plt>
   134e8:	str	r0, [r6, #44]	; 0x2c
   134ec:	ldr	r5, [r6, #32]
   134f0:	ldr	r7, [r6, #36]	; 0x24
   134f4:	b	13470 <table_register_callback@@Base+0x9c>

000134f8 <table_unregister_callback@@Base>:
   134f8:	ldr	ip, [r0, #32]
   134fc:	cmp	ip, #0
   13500:	bxle	lr
   13504:	strd	r4, [sp, #-16]!
   13508:	mov	r3, #0
   1350c:	str	r6, [sp, #8]
   13510:	ldr	r6, [r0, #36]	; 0x24
   13514:	str	lr, [sp, #12]
   13518:	sub	r4, r6, #4
   1351c:	b	1352c <table_unregister_callback@@Base+0x34>
   13520:	add	r3, r3, #1
   13524:	cmp	r3, ip
   13528:	beq	1360c <table_unregister_callback@@Base+0x114>
   1352c:	ldr	r5, [r4, #4]!
   13530:	lsl	lr, r3, #2
   13534:	cmp	r1, r5
   13538:	bne	13520 <table_unregister_callback@@Base+0x28>
   1353c:	ldr	r5, [r0, #40]	; 0x28
   13540:	ldr	r5, [r5, r3, lsl #2]
   13544:	cmp	r2, r5
   13548:	bne	13520 <table_unregister_callback@@Base+0x28>
   1354c:	sub	ip, ip, #1
   13550:	cmp	ip, r3
   13554:	ble	135a4 <table_unregister_callback@@Base+0xac>
   13558:	add	r3, r3, #1
   1355c:	lsl	r2, r3, #2
   13560:	b	13568 <table_unregister_callback@@Base+0x70>
   13564:	ldr	r6, [r0, #36]	; 0x24
   13568:	ldr	r1, [r6, r2]
   1356c:	str	r1, [r6, lr]
   13570:	ldr	r1, [r0, #40]	; 0x28
   13574:	ldr	ip, [r1, r2]
   13578:	str	ip, [r1, lr]
   1357c:	ldr	r1, [r0, #44]	; 0x2c
   13580:	ldr	ip, [r1, r2]
   13584:	add	r2, r2, #4
   13588:	str	ip, [r1, lr]
   1358c:	lsl	lr, r3, #2
   13590:	ldr	ip, [r0, #32]
   13594:	sub	ip, ip, #1
   13598:	cmp	ip, r3
   1359c:	add	r3, r3, #1
   135a0:	bgt	13564 <table_unregister_callback@@Base+0x6c>
   135a4:	ldr	r2, [r0, #48]	; 0x30
   135a8:	str	ip, [r0, #32]
   135ac:	udiv	r3, ip, r2
   135b0:	mls	ip, r2, r3, ip
   135b4:	cmp	ip, #0
   135b8:	bne	1360c <table_unregister_callback@@Base+0x114>
   135bc:	mov	r4, r0
   135c0:	ldr	r0, [r0, #36]	; 0x24
   135c4:	ldr	r5, [r4, #52]	; 0x34
   135c8:	sub	r5, r5, r2
   135cc:	cmp	r5, #0
   135d0:	str	r5, [r4, #52]	; 0x34
   135d4:	beq	1361c <table_unregister_callback@@Base+0x124>
   135d8:	lsl	r1, r5, #2
   135dc:	bl	12924 <realloc@plt>
   135e0:	ldr	r1, [r4, #52]	; 0x34
   135e4:	str	r0, [r4, #36]	; 0x24
   135e8:	ldr	r0, [r4, #40]	; 0x28
   135ec:	lsl	r1, r1, #2
   135f0:	bl	12924 <realloc@plt>
   135f4:	ldr	r1, [r4, #52]	; 0x34
   135f8:	str	r0, [r4, #40]	; 0x28
   135fc:	ldr	r0, [r4, #44]	; 0x2c
   13600:	lsl	r1, r1, #2
   13604:	bl	12924 <realloc@plt>
   13608:	str	r0, [r4, #44]	; 0x2c
   1360c:	ldrd	r4, [sp]
   13610:	ldr	r6, [sp, #8]
   13614:	add	sp, sp, #12
   13618:	pop	{pc}		; (ldr pc, [sp], #4)
   1361c:	bl	12918 <free@plt>
   13620:	ldr	r0, [r4, #40]	; 0x28
   13624:	bl	12918 <free@plt>
   13628:	ldr	r0, [r4, #44]	; 0x2c
   1362c:	bl	12918 <free@plt>
   13630:	str	r5, [r4, #36]	; 0x24
   13634:	str	r5, [r4, #40]	; 0x28
   13638:	str	r5, [r4, #44]	; 0x2c
   1363c:	ldrd	r4, [sp]
   13640:	ldr	r6, [sp, #8]
   13644:	add	sp, sp, #12
   13648:	pop	{pc}		; (ldr pc, [sp], #4)

0001364c <table_notify@@Base>:
   1364c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13650:	strd	r6, [sp, #8]
   13654:	str	lr, [sp, #24]
   13658:	ldr	lr, [r0, #32]
   1365c:	strd	r8, [sp, #16]
   13660:	sub	sp, sp, #12
   13664:	cmp	lr, #0
   13668:	ble	136dc <table_notify@@Base+0x90>
   1366c:	ldr	r7, [r0, #44]	; 0x2c
   13670:	mov	r6, r3
   13674:	mov	r9, r2
   13678:	mov	r8, r1
   1367c:	mov	r5, r0
   13680:	mov	r4, #0
   13684:	ldr	ip, [r7, r4, lsl #2]
   13688:	mov	r3, r6
   1368c:	mov	r2, r9
   13690:	mov	r1, r8
   13694:	mov	r0, r5
   13698:	tst	r6, ip
   1369c:	beq	136d0 <table_notify@@Base+0x84>
   136a0:	ldr	ip, [r5, #36]	; 0x24
   136a4:	ldr	lr, [r5, #40]	; 0x28
   136a8:	ldr	lr, [lr, r4, lsl #2]
   136ac:	str	lr, [sp]
   136b0:	ldr	r7, [ip, r4, lsl #2]
   136b4:	add	r4, r4, #1
   136b8:	blx	r7
   136bc:	ldr	lr, [r5, #32]
   136c0:	cmp	lr, r4
   136c4:	ble	136dc <table_notify@@Base+0x90>
   136c8:	ldr	r7, [r5, #44]	; 0x2c
   136cc:	b	13684 <table_notify@@Base+0x38>
   136d0:	add	r4, r4, #1
   136d4:	cmp	r4, lr
   136d8:	blt	13684 <table_notify@@Base+0x38>
   136dc:	add	sp, sp, #12
   136e0:	ldrd	r4, [sp]
   136e4:	ldrd	r6, [sp, #8]
   136e8:	ldrd	r8, [sp, #16]
   136ec:	add	sp, sp, #24
   136f0:	pop	{pc}		; (ldr pc, [sp], #4)

000136f4 <table_column_init@@Base>:
   136f4:	add	r1, r1, r1, lsl #1
   136f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   136fc:	strd	r6, [sp, #8]
   13700:	mov	r7, r2
   13704:	ldr	r6, [r0]
   13708:	mov	r0, r2
   1370c:	lsl	r4, r1, #2
   13710:	strd	r8, [sp, #16]
   13714:	mov	r9, r3
   13718:	str	sl, [sp, #24]
   1371c:	str	lr, [sp, #28]
   13720:	bl	12960 <strlen@plt>
   13724:	add	r0, r0, #1
   13728:	ldr	r8, [sp, #32]
   1372c:	add	r5, r6, r4
   13730:	bl	1293c <malloc@plt>
   13734:	cmp	r0, #0
   13738:	str	r0, [r6, r4]
   1373c:	beq	13748 <table_column_init@@Base+0x54>
   13740:	mov	r1, r7
   13744:	bl	12930 <strcpy@plt>
   13748:	ldrd	r6, [sp, #8]
   1374c:	ldr	sl, [sp, #24]
   13750:	str	r9, [r5, #4]
   13754:	str	r8, [r5, #8]
   13758:	ldrd	r4, [sp]
   1375c:	ldrd	r8, [sp, #16]
   13760:	add	sp, sp, #28
   13764:	pop	{pc}		; (ldr pc, [sp], #4)

00013768 <table_column_destroy@@Base>:
   13768:	ldr	r3, [r0]
   1376c:	add	r1, r1, r1, lsl #1
   13770:	ldr	r0, [r3, r1, lsl #2]
   13774:	cmp	r0, #0
   13778:	beq	13780 <table_column_destroy@@Base+0x18>
   1377c:	b	12918 <free@plt>
   13780:	bx	lr

00013784 <table_get_column_length@@Base>:
   13784:	ldr	r0, [r0, #4]
   13788:	bx	lr

0001378c <table_get_column@@Base>:
   1378c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13790:	strd	r6, [sp, #8]
   13794:	ldr	r7, [r0, #4]
   13798:	str	r8, [sp, #16]
   1379c:	str	lr, [sp, #20]
   137a0:	cmp	r7, #0
   137a4:	ble	137f4 <table_get_column@@Base+0x68>
   137a8:	mov	r6, r1
   137ac:	mov	r4, #0
   137b0:	ldr	r5, [r0]
   137b4:	b	137c4 <table_get_column@@Base+0x38>
   137b8:	add	r4, r4, #1
   137bc:	cmp	r7, r4
   137c0:	beq	13800 <table_get_column@@Base+0x74>
   137c4:	mov	r1, r6
   137c8:	ldr	r0, [r5]
   137cc:	add	r5, r5, #12
   137d0:	bl	12900 <strcmp@plt>
   137d4:	cmp	r0, #0
   137d8:	bne	137b8 <table_get_column@@Base+0x2c>
   137dc:	mov	r0, r4
   137e0:	ldrd	r4, [sp]
   137e4:	ldrd	r6, [sp, #8]
   137e8:	ldr	r8, [sp, #16]
   137ec:	add	sp, sp, #20
   137f0:	pop	{pc}		; (ldr pc, [sp], #4)
   137f4:	beq	13800 <table_get_column@@Base+0x74>
   137f8:	mov	r4, #0
   137fc:	b	137dc <table_get_column@@Base+0x50>
   13800:	mvn	r4, #0
   13804:	b	137dc <table_get_column@@Base+0x50>

00013808 <table_get_column_data_type@@Base>:
   13808:	ldr	r3, [r0]
   1380c:	add	r1, r1, r1, lsl #1
   13810:	add	r3, r3, r1, lsl #2
   13814:	ldr	r0, [r3, #4]
   13818:	bx	lr

0001381c <table_add_column@@Base>:
   1381c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13820:	mov	r4, r0
   13824:	ldr	r3, [r0, #8]
   13828:	strd	r6, [sp, #8]
   1382c:	strd	sl, [sp, #24]
   13830:	mov	fp, r1
   13834:	ldr	r1, [r0, #4]
   13838:	strd	r8, [sp, #16]
   1383c:	mov	r9, r2
   13840:	str	lr, [sp, #32]
   13844:	sub	sp, sp, #12
   13848:	udiv	r5, r1, r3
   1384c:	mls	r5, r3, r5, r1
   13850:	cmp	r5, #0
   13854:	beq	13918 <table_add_column@@Base+0xfc>
   13858:	mov	r0, r4
   1385c:	bl	15c00 <table_get_row_length@@Base>
   13860:	ldr	r6, [r4, #4]
   13864:	mov	r7, r0
   13868:	mov	r0, r9
   1386c:	bl	141e0 <table_get_default_compare_function_for_data_type@@Base>
   13870:	str	r0, [sp, #4]
   13874:	mov	r0, fp
   13878:	ldr	sl, [r4]
   1387c:	bl	12960 <strlen@plt>
   13880:	add	r5, r6, r6, lsl #1
   13884:	add	r0, r0, #1
   13888:	bl	1293c <malloc@plt>
   1388c:	lsl	r5, r5, #2
   13890:	cmp	r0, #0
   13894:	add	r8, sl, r5
   13898:	str	r0, [sl, r5]
   1389c:	beq	138a8 <table_add_column@@Base+0x8c>
   138a0:	mov	r1, fp
   138a4:	bl	12930 <strcpy@plt>
   138a8:	ldr	r3, [sp, #4]
   138ac:	cmp	r7, #0
   138b0:	str	r9, [r8, #4]
   138b4:	str	r3, [r8, #8]
   138b8:	ble	138dc <table_add_column@@Base+0xc0>
   138bc:	mov	r5, #0
   138c0:	mov	r1, r5
   138c4:	mov	r2, r6
   138c8:	mov	r0, r4
   138cc:	add	r5, r5, #1
   138d0:	bl	17008 <table_cell_init@@Base>
   138d4:	cmp	r7, r5
   138d8:	bne	138c0 <table_add_column@@Base+0xa4>
   138dc:	mov	r0, r4
   138e0:	mov	r3, #8
   138e4:	ldr	r2, [r4, #4]
   138e8:	mvn	r1, #0
   138ec:	bl	1364c <table_notify@@Base>
   138f0:	ldr	r0, [r4, #4]
   138f4:	add	r3, r0, #1
   138f8:	str	r3, [r4, #4]
   138fc:	add	sp, sp, #12
   13900:	ldrd	r4, [sp]
   13904:	ldrd	r6, [sp, #8]
   13908:	ldrd	r8, [sp, #16]
   1390c:	ldrd	sl, [sp, #24]
   13910:	add	sp, sp, #32
   13914:	pop	{pc}		; (ldr pc, [sp], #4)
   13918:	ldr	r2, [r4, #12]
   1391c:	ldr	r0, [r0]
   13920:	add	r3, r3, r2
   13924:	add	r1, r3, r3, lsl #1
   13928:	str	r3, [r4, #12]
   1392c:	lsl	r1, r1, #2
   13930:	bl	12924 <realloc@plt>
   13934:	str	r0, [r4]
   13938:	mov	r0, r4
   1393c:	bl	15c00 <table_get_row_length@@Base>
   13940:	subs	r7, r0, #0
   13944:	ble	13858 <table_add_column@@Base+0x3c>
   13948:	mov	r1, r5
   1394c:	mov	r0, r4
   13950:	bl	15df4 <table_get_row_ptr@@Base>
   13954:	ldr	r1, [r4, #12]
   13958:	mov	r6, r0
   1395c:	add	r5, r5, #1
   13960:	ldr	r0, [r0]
   13964:	lsl	r1, r1, #2
   13968:	bl	12924 <realloc@plt>
   1396c:	cmp	r7, r5
   13970:	str	r0, [r6]
   13974:	bne	13948 <table_add_column@@Base+0x12c>
   13978:	b	13858 <table_add_column@@Base+0x3c>

0001397c <table_remove_column@@Base>:
   1397c:	ldr	r3, [r0]
   13980:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13984:	mov	r4, r0
   13988:	mov	r5, r1
   1398c:	strd	r6, [sp, #8]
   13990:	add	r6, r1, r1, lsl #1
   13994:	strd	r8, [sp, #16]
   13998:	lsl	r6, r6, #2
   1399c:	str	sl, [sp, #24]
   139a0:	str	lr, [sp, #28]
   139a4:	ldr	r0, [r3, r6]
   139a8:	cmp	r0, #0
   139ac:	beq	139b4 <table_remove_column@@Base+0x38>
   139b0:	bl	12918 <free@plt>
   139b4:	ldr	r7, [r4, #4]
   139b8:	sub	r7, r7, #1
   139bc:	cmp	r5, r7
   139c0:	bge	139fc <table_remove_column@@Base+0x80>
   139c4:	mov	r1, r5
   139c8:	ldr	r3, [r4]
   139cc:	add	r1, r1, #1
   139d0:	cmp	r1, r7
   139d4:	add	r2, r3, r6
   139d8:	add	r6, r6, #12
   139dc:	add	r3, r3, r6
   139e0:	ldr	ip, [r3]
   139e4:	ldr	r0, [r3, #4]
   139e8:	ldr	r3, [r3, #8]
   139ec:	str	ip, [r2]
   139f0:	str	r0, [r2, #4]
   139f4:	str	r3, [r2, #8]
   139f8:	bne	139c8 <table_remove_column@@Base+0x4c>
   139fc:	mov	r0, r4
   13a00:	bl	15c00 <table_get_row_length@@Base>
   13a04:	subs	r9, r0, #0
   13a08:	ble	13a6c <table_remove_column@@Base+0xf0>
   13a0c:	lsl	r8, r5, #2
   13a10:	mov	r6, #0
   13a14:	mov	r2, r5
   13a18:	mov	r1, r6
   13a1c:	mov	r0, r4
   13a20:	bl	17030 <table_cell_destroy@@Base>
   13a24:	mov	r1, r6
   13a28:	mov	r0, r4
   13a2c:	bl	15df4 <table_get_row_ptr@@Base>
   13a30:	cmp	r5, r7
   13a34:	bge	13a60 <table_remove_column@@Base+0xe4>
   13a38:	mov	r3, r8
   13a3c:	mov	r2, r5
   13a40:	ldr	r1, [r0]
   13a44:	add	r2, r2, #1
   13a48:	cmp	r2, r7
   13a4c:	add	ip, r1, r3
   13a50:	add	r3, r3, #4
   13a54:	ldr	r1, [r1, r3]
   13a58:	str	r1, [ip]
   13a5c:	bne	13a40 <table_remove_column@@Base+0xc4>
   13a60:	add	r6, r6, #1
   13a64:	cmp	r9, r6
   13a68:	bne	13a14 <table_remove_column@@Base+0x98>
   13a6c:	ldr	r6, [r4, #4]
   13a70:	ldr	r2, [r4, #8]
   13a74:	sub	r3, r6, #1
   13a78:	udiv	r6, r3, r2
   13a7c:	str	r3, [r4, #4]
   13a80:	mls	r6, r2, r6, r3
   13a84:	cmp	r6, #0
   13a88:	beq	13abc <table_remove_column@@Base+0x140>
   13a8c:	mov	r0, r4
   13a90:	mov	r2, r5
   13a94:	mov	r3, #16
   13a98:	mvn	r1, #0
   13a9c:	bl	1364c <table_notify@@Base>
   13aa0:	ldrd	r4, [sp]
   13aa4:	mov	r0, #0
   13aa8:	ldrd	r6, [sp, #8]
   13aac:	ldrd	r8, [sp, #16]
   13ab0:	ldr	sl, [sp, #24]
   13ab4:	add	sp, sp, #28
   13ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   13abc:	ldr	r0, [r4]
   13ac0:	ldr	r3, [r4, #12]
   13ac4:	sub	r2, r3, r2
   13ac8:	add	r1, r2, r2, lsl #1
   13acc:	str	r2, [r4, #12]
   13ad0:	lsl	r1, r1, #2
   13ad4:	bl	12924 <realloc@plt>
   13ad8:	str	r0, [r4]
   13adc:	mov	r0, r4
   13ae0:	bl	15c00 <table_get_row_length@@Base>
   13ae4:	subs	r8, r0, #0
   13ae8:	ble	13a8c <table_remove_column@@Base+0x110>
   13aec:	mov	r1, r6
   13af0:	mov	r0, r4
   13af4:	bl	15df4 <table_get_row_ptr@@Base>
   13af8:	ldr	r1, [r4, #12]
   13afc:	mov	r7, r0
   13b00:	add	r6, r6, #1
   13b04:	ldr	r0, [r0]
   13b08:	lsl	r1, r1, #2
   13b0c:	bl	12924 <realloc@plt>
   13b10:	cmp	r8, r6
   13b14:	str	r0, [r7]
   13b18:	bne	13aec <table_remove_column@@Base+0x170>
   13b1c:	b	13a8c <table_remove_column@@Base+0x110>

00013b20 <table_get_column_name@@Base>:
   13b20:	ldr	r3, [r0]
   13b24:	add	r1, r1, r1, lsl #1
   13b28:	ldr	r0, [r3, r1, lsl #2]
   13b2c:	bx	lr

00013b30 <table_get_col_ptr@@Base>:
   13b30:	ldr	r0, [r0]
   13b34:	add	r1, r1, r1, lsl #1
   13b38:	add	r0, r0, r1, lsl #2
   13b3c:	bx	lr

00013b40 <table_get_column_compare_function@@Base>:
   13b40:	ldr	r3, [r0]
   13b44:	add	r1, r1, r1, lsl #1
   13b48:	add	r3, r3, r1, lsl #2
   13b4c:	ldr	r0, [r3, #8]
   13b50:	bx	lr

00013b54 <table_set_column_compare_function@@Base>:
   13b54:	ldr	r3, [r0]
   13b58:	add	r1, r1, r1, lsl #1
   13b5c:	add	r3, r3, r1, lsl #2
   13b60:	str	r2, [r3, #8]
   13b64:	bx	lr

00013b68 <table_compare_ptr@@Base>:
   13b68:	cmp	r0, r1
   13b6c:	bhi	13b7c <table_compare_ptr@@Base+0x14>
   13b70:	mvncc	r0, #0
   13b74:	movcs	r0, #0
   13b78:	bx	lr
   13b7c:	mov	r0, #1
   13b80:	bx	lr

00013b84 <table_compare_string@@Base>:
   13b84:	cmp	r0, #0
   13b88:	beq	13b98 <table_compare_string@@Base+0x14>
   13b8c:	cmp	r1, #0
   13b90:	beq	13ba8 <table_compare_string@@Base+0x24>
   13b94:	b	12900 <strcmp@plt>
   13b98:	adds	r0, r1, #0
   13b9c:	movne	r0, #1
   13ba0:	rsb	r0, r0, #0
   13ba4:	bx	lr
   13ba8:	mov	r0, #1
   13bac:	bx	lr

00013bb0 <table_compare_bool@@Base>:
   13bb0:	cmp	r0, #0
   13bb4:	beq	13be4 <table_compare_bool@@Base+0x34>
   13bb8:	cmp	r1, #0
   13bbc:	beq	13bdc <table_compare_bool@@Base+0x2c>
   13bc0:	ldrb	r2, [r0]
   13bc4:	ldrb	r3, [r1]
   13bc8:	cmp	r2, r3
   13bcc:	bhi	13bdc <table_compare_bool@@Base+0x2c>
   13bd0:	mvncc	r0, #0
   13bd4:	movcs	r0, #0
   13bd8:	bx	lr
   13bdc:	mov	r0, #1
   13be0:	bx	lr
   13be4:	adds	r1, r1, #0
   13be8:	movne	r1, #1
   13bec:	rsb	r0, r1, #0
   13bf0:	bx	lr

00013bf4 <table_compare_int32@@Base>:
   13bf4:	cmp	r0, #0
   13bf8:	beq	13c28 <table_compare_int32@@Base+0x34>
   13bfc:	cmp	r1, #0
   13c00:	beq	13c20 <table_compare_int32@@Base+0x2c>
   13c04:	ldr	r2, [r0]
   13c08:	ldr	r3, [r1]
   13c0c:	cmp	r2, r3
   13c10:	bgt	13c20 <table_compare_int32@@Base+0x2c>
   13c14:	mvnlt	r0, #0
   13c18:	movge	r0, #0
   13c1c:	bx	lr
   13c20:	mov	r0, #1
   13c24:	bx	lr
   13c28:	adds	r1, r1, #0
   13c2c:	movne	r1, #1
   13c30:	rsb	r0, r1, #0
   13c34:	bx	lr

00013c38 <table_compare_uint32@@Base>:
   13c38:	cmp	r0, #0
   13c3c:	beq	13c6c <table_compare_uint32@@Base+0x34>
   13c40:	cmp	r1, #0
   13c44:	beq	13c64 <table_compare_uint32@@Base+0x2c>
   13c48:	ldr	r2, [r0]
   13c4c:	ldr	r3, [r1]
   13c50:	cmp	r2, r3
   13c54:	bhi	13c64 <table_compare_uint32@@Base+0x2c>
   13c58:	mvncc	r0, #0
   13c5c:	movcs	r0, #0
   13c60:	bx	lr
   13c64:	mov	r0, #1
   13c68:	bx	lr
   13c6c:	adds	r1, r1, #0
   13c70:	movne	r1, #1
   13c74:	rsb	r0, r1, #0
   13c78:	bx	lr

00013c7c <table_compare_int8@@Base>:
   13c7c:	cmp	r0, #0
   13c80:	beq	13cb0 <table_compare_int8@@Base+0x34>
   13c84:	cmp	r1, #0
   13c88:	beq	13ca8 <table_compare_int8@@Base+0x2c>
   13c8c:	ldrsb	r2, [r0]
   13c90:	ldrsb	r3, [r1]
   13c94:	cmp	r2, r3
   13c98:	bgt	13ca8 <table_compare_int8@@Base+0x2c>
   13c9c:	mvnlt	r0, #0
   13ca0:	movge	r0, #0
   13ca4:	bx	lr
   13ca8:	mov	r0, #1
   13cac:	bx	lr
   13cb0:	adds	r1, r1, #0
   13cb4:	movne	r1, #1
   13cb8:	rsb	r0, r1, #0
   13cbc:	bx	lr

00013cc0 <table_compare_char@@Base>:
   13cc0:	cmp	r0, #0
   13cc4:	beq	13cf4 <table_compare_char@@Base+0x34>
   13cc8:	cmp	r1, #0
   13ccc:	beq	13cec <table_compare_char@@Base+0x2c>
   13cd0:	ldrb	r2, [r0]
   13cd4:	ldrb	r3, [r1]
   13cd8:	cmp	r2, r3
   13cdc:	bhi	13cec <table_compare_char@@Base+0x2c>
   13ce0:	mvncc	r0, #0
   13ce4:	movcs	r0, #0
   13ce8:	bx	lr
   13cec:	mov	r0, #1
   13cf0:	bx	lr
   13cf4:	adds	r1, r1, #0
   13cf8:	movne	r1, #1
   13cfc:	rsb	r0, r1, #0
   13d00:	bx	lr

00013d04 <table_compare_short@@Base>:
   13d04:	cmp	r0, #0
   13d08:	beq	13d38 <table_compare_short@@Base+0x34>
   13d0c:	cmp	r1, #0
   13d10:	beq	13d30 <table_compare_short@@Base+0x2c>
   13d14:	ldrsh	r2, [r0]
   13d18:	ldrsh	r3, [r1]
   13d1c:	cmp	r2, r3
   13d20:	bgt	13d30 <table_compare_short@@Base+0x2c>
   13d24:	mvnlt	r0, #0
   13d28:	movge	r0, #0
   13d2c:	bx	lr
   13d30:	mov	r0, #1
   13d34:	bx	lr
   13d38:	adds	r1, r1, #0
   13d3c:	movne	r1, #1
   13d40:	rsb	r0, r1, #0
   13d44:	bx	lr

00013d48 <table_compare_ushort@@Base>:
   13d48:	cmp	r0, #0
   13d4c:	beq	13d7c <table_compare_ushort@@Base+0x34>
   13d50:	cmp	r1, #0
   13d54:	beq	13d74 <table_compare_ushort@@Base+0x2c>
   13d58:	ldrh	r2, [r0]
   13d5c:	ldrh	r3, [r1]
   13d60:	cmp	r2, r3
   13d64:	bhi	13d74 <table_compare_ushort@@Base+0x2c>
   13d68:	mvncc	r0, #0
   13d6c:	movcs	r0, #0
   13d70:	bx	lr
   13d74:	mov	r0, #1
   13d78:	bx	lr
   13d7c:	adds	r1, r1, #0
   13d80:	movne	r1, #1
   13d84:	rsb	r0, r1, #0
   13d88:	bx	lr

00013d8c <table_compare_llong@@Base>:
   13d8c:	cmp	r0, #0
   13d90:	beq	13dd4 <table_compare_llong@@Base+0x48>
   13d94:	cmp	r1, #0
   13d98:	beq	13de4 <table_compare_llong@@Base+0x58>
   13d9c:	strd	r4, [sp, #-8]!
   13da0:	ldrd	r2, [r1]
   13da4:	ldrd	r4, [r0]
   13da8:	cmp	r2, r4
   13dac:	sbcs	r1, r3, r5
   13db0:	movlt	r0, #1
   13db4:	blt	13dc8 <table_compare_llong@@Base+0x3c>
   13db8:	cmp	r4, r2
   13dbc:	sbcs	r3, r5, r3
   13dc0:	mvnlt	r0, #0
   13dc4:	movge	r0, #0
   13dc8:	ldrd	r4, [sp]
   13dcc:	add	sp, sp, #8
   13dd0:	bx	lr
   13dd4:	adds	r1, r1, #0
   13dd8:	movne	r1, #1
   13ddc:	rsb	r0, r1, #0
   13de0:	bx	lr
   13de4:	mov	r0, #1
   13de8:	bx	lr

00013dec <table_compare_uint64@@Base>:
   13dec:	cmp	r0, #0
   13df0:	beq	13e2c <table_compare_uint64@@Base+0x40>
   13df4:	cmp	r1, #0
   13df8:	beq	13e3c <table_compare_uint64@@Base+0x50>
   13dfc:	strd	r4, [sp, #-8]!
   13e00:	ldrd	r2, [r1]
   13e04:	ldrd	r4, [r0]
   13e08:	cmp	r5, r3
   13e0c:	cmpeq	r4, r2
   13e10:	movhi	r0, #1
   13e14:	bhi	13e20 <table_compare_uint64@@Base+0x34>
   13e18:	mvncc	r0, #0
   13e1c:	movcs	r0, #0
   13e20:	ldrd	r4, [sp]
   13e24:	add	sp, sp, #8
   13e28:	bx	lr
   13e2c:	adds	r1, r1, #0
   13e30:	movne	r1, #1
   13e34:	rsb	r0, r1, #0
   13e38:	bx	lr
   13e3c:	mov	r0, #1
   13e40:	bx	lr

00013e44 <table_compare_long@@Base>:
   13e44:	cmp	r0, #0
   13e48:	beq	13e78 <table_compare_long@@Base+0x34>
   13e4c:	cmp	r1, #0
   13e50:	beq	13e70 <table_compare_long@@Base+0x2c>
   13e54:	ldr	r2, [r0]
   13e58:	ldr	r3, [r1]
   13e5c:	cmp	r2, r3
   13e60:	bgt	13e70 <table_compare_long@@Base+0x2c>
   13e64:	mvnlt	r0, #0
   13e68:	movge	r0, #0
   13e6c:	bx	lr
   13e70:	mov	r0, #1
   13e74:	bx	lr
   13e78:	adds	r1, r1, #0
   13e7c:	movne	r1, #1
   13e80:	rsb	r0, r1, #0
   13e84:	bx	lr

00013e88 <table_compare_ullong@@Base>:
   13e88:	cmp	r0, #0
   13e8c:	beq	13ebc <table_compare_ullong@@Base+0x34>
   13e90:	cmp	r1, #0
   13e94:	beq	13eb4 <table_compare_ullong@@Base+0x2c>
   13e98:	ldr	r2, [r0]
   13e9c:	ldr	r3, [r1]
   13ea0:	cmp	r2, r3
   13ea4:	bhi	13eb4 <table_compare_ullong@@Base+0x2c>
   13ea8:	mvncc	r0, #0
   13eac:	movcs	r0, #0
   13eb0:	bx	lr
   13eb4:	mov	r0, #1
   13eb8:	bx	lr
   13ebc:	adds	r1, r1, #0
   13ec0:	movne	r1, #1
   13ec4:	rsb	r0, r1, #0
   13ec8:	bx	lr

00013ecc <table_compare_float@@Base>:
   13ecc:	cmp	r0, #0
   13ed0:	beq	13f04 <table_compare_float@@Base+0x38>
   13ed4:	cmp	r1, #0
   13ed8:	beq	13efc <table_compare_float@@Base+0x30>
   13edc:	vldr	s14, [r0]
   13ee0:	vldr	s15, [r1]
   13ee4:	vcmpe.f32	s14, s15
   13ee8:	vmrs	APSR_nzcv, fpscr
   13eec:	bgt	13efc <table_compare_float@@Base+0x30>
   13ef0:	mvnmi	r0, #0
   13ef4:	movpl	r0, #0
   13ef8:	bx	lr
   13efc:	mov	r0, #1
   13f00:	bx	lr
   13f04:	adds	r1, r1, #0
   13f08:	movne	r1, #1
   13f0c:	rsb	r0, r1, #0
   13f10:	bx	lr

00013f14 <table_compare_double@@Base>:
   13f14:	cmp	r0, #0
   13f18:	beq	13f4c <table_compare_double@@Base+0x38>
   13f1c:	cmp	r1, #0
   13f20:	beq	13f44 <table_compare_double@@Base+0x30>
   13f24:	vldr	d6, [r0]
   13f28:	vldr	d7, [r1]
   13f2c:	vcmpe.f64	d6, d7
   13f30:	vmrs	APSR_nzcv, fpscr
   13f34:	bgt	13f44 <table_compare_double@@Base+0x30>
   13f38:	mvnmi	r0, #0
   13f3c:	movpl	r0, #0
   13f40:	bx	lr
   13f44:	mov	r0, #1
   13f48:	bx	lr
   13f4c:	adds	r1, r1, #0
   13f50:	movne	r1, #1
   13f54:	rsb	r0, r1, #0
   13f58:	bx	lr

00013f5c <table_compare_ldouble@@Base>:
   13f5c:	cmp	r0, #0
   13f60:	beq	13f94 <table_compare_ldouble@@Base+0x38>
   13f64:	cmp	r1, #0
   13f68:	beq	13f8c <table_compare_ldouble@@Base+0x30>
   13f6c:	vldr	d6, [r0]
   13f70:	vldr	d7, [r1]
   13f74:	vcmpe.f64	d6, d7
   13f78:	vmrs	APSR_nzcv, fpscr
   13f7c:	bgt	13f8c <table_compare_ldouble@@Base+0x30>
   13f80:	mvnmi	r0, #0
   13f84:	movpl	r0, #0
   13f88:	bx	lr
   13f8c:	mov	r0, #1
   13f90:	bx	lr
   13f94:	adds	r1, r1, #0
   13f98:	movne	r1, #1
   13f9c:	rsb	r0, r1, #0
   13fa0:	bx	lr

00013fa4 <table_compare_uchar@@Base>:
   13fa4:	cmp	r0, #0
   13fa8:	beq	13fd8 <table_compare_uchar@@Base+0x34>
   13fac:	cmp	r1, #0
   13fb0:	beq	13fd0 <table_compare_uchar@@Base+0x2c>
   13fb4:	ldrb	r2, [r0]
   13fb8:	ldrb	r3, [r1]
   13fbc:	cmp	r2, r3
   13fc0:	bhi	13fd0 <table_compare_uchar@@Base+0x2c>
   13fc4:	mvncc	r0, #0
   13fc8:	movcs	r0, #0
   13fcc:	bx	lr
   13fd0:	mov	r0, #1
   13fd4:	bx	lr
   13fd8:	adds	r1, r1, #0
   13fdc:	movne	r1, #1
   13fe0:	rsb	r0, r1, #0
   13fe4:	bx	lr

00013fe8 <table_compare_int@@Base>:
   13fe8:	cmp	r0, #0
   13fec:	beq	1401c <table_compare_int@@Base+0x34>
   13ff0:	cmp	r1, #0
   13ff4:	beq	14014 <table_compare_int@@Base+0x2c>
   13ff8:	ldr	r2, [r0]
   13ffc:	ldr	r3, [r1]
   14000:	cmp	r2, r3
   14004:	bgt	14014 <table_compare_int@@Base+0x2c>
   14008:	mvnlt	r0, #0
   1400c:	movge	r0, #0
   14010:	bx	lr
   14014:	mov	r0, #1
   14018:	bx	lr
   1401c:	adds	r1, r1, #0
   14020:	movne	r1, #1
   14024:	rsb	r0, r1, #0
   14028:	bx	lr

0001402c <table_compare_uint@@Base>:
   1402c:	cmp	r0, #0
   14030:	beq	14060 <table_compare_uint@@Base+0x34>
   14034:	cmp	r1, #0
   14038:	beq	14058 <table_compare_uint@@Base+0x2c>
   1403c:	ldr	r2, [r0]
   14040:	ldr	r3, [r1]
   14044:	cmp	r2, r3
   14048:	bhi	14058 <table_compare_uint@@Base+0x2c>
   1404c:	mvncc	r0, #0
   14050:	movcs	r0, #0
   14054:	bx	lr
   14058:	mov	r0, #1
   1405c:	bx	lr
   14060:	adds	r1, r1, #0
   14064:	movne	r1, #1
   14068:	rsb	r0, r1, #0
   1406c:	bx	lr

00014070 <table_compare_uint8@@Base>:
   14070:	cmp	r0, #0
   14074:	beq	140a4 <table_compare_uint8@@Base+0x34>
   14078:	cmp	r1, #0
   1407c:	beq	1409c <table_compare_uint8@@Base+0x2c>
   14080:	ldrb	r2, [r0]
   14084:	ldrb	r3, [r1]
   14088:	cmp	r2, r3
   1408c:	bhi	1409c <table_compare_uint8@@Base+0x2c>
   14090:	mvncc	r0, #0
   14094:	movcs	r0, #0
   14098:	bx	lr
   1409c:	mov	r0, #1
   140a0:	bx	lr
   140a4:	adds	r1, r1, #0
   140a8:	movne	r1, #1
   140ac:	rsb	r0, r1, #0
   140b0:	bx	lr

000140b4 <table_compare_int16@@Base>:
   140b4:	cmp	r0, #0
   140b8:	beq	140e8 <table_compare_int16@@Base+0x34>
   140bc:	cmp	r1, #0
   140c0:	beq	140e0 <table_compare_int16@@Base+0x2c>
   140c4:	ldrsh	r2, [r0]
   140c8:	ldrsh	r3, [r1]
   140cc:	cmp	r2, r3
   140d0:	bgt	140e0 <table_compare_int16@@Base+0x2c>
   140d4:	mvnlt	r0, #0
   140d8:	movge	r0, #0
   140dc:	bx	lr
   140e0:	mov	r0, #1
   140e4:	bx	lr
   140e8:	adds	r1, r1, #0
   140ec:	movne	r1, #1
   140f0:	rsb	r0, r1, #0
   140f4:	bx	lr

000140f8 <table_compare_uint16@@Base>:
   140f8:	cmp	r0, #0
   140fc:	beq	1412c <table_compare_uint16@@Base+0x34>
   14100:	cmp	r1, #0
   14104:	beq	14124 <table_compare_uint16@@Base+0x2c>
   14108:	ldrh	r2, [r0]
   1410c:	ldrh	r3, [r1]
   14110:	cmp	r2, r3
   14114:	bhi	14124 <table_compare_uint16@@Base+0x2c>
   14118:	mvncc	r0, #0
   1411c:	movcs	r0, #0
   14120:	bx	lr
   14124:	mov	r0, #1
   14128:	bx	lr
   1412c:	adds	r1, r1, #0
   14130:	movne	r1, #1
   14134:	rsb	r0, r1, #0
   14138:	bx	lr

0001413c <table_compare_ulong@@Base>:
   1413c:	cmp	r0, #0
   14140:	beq	14170 <table_compare_ulong@@Base+0x34>
   14144:	cmp	r1, #0
   14148:	beq	14168 <table_compare_ulong@@Base+0x2c>
   1414c:	ldr	r2, [r0]
   14150:	ldr	r3, [r1]
   14154:	cmp	r2, r3
   14158:	bhi	14168 <table_compare_ulong@@Base+0x2c>
   1415c:	mvncc	r0, #0
   14160:	movcs	r0, #0
   14164:	bx	lr
   14168:	mov	r0, #1
   1416c:	bx	lr
   14170:	adds	r1, r1, #0
   14174:	movne	r1, #1
   14178:	rsb	r0, r1, #0
   1417c:	bx	lr

00014180 <table_compare_int64@@Base>:
   14180:	cmp	r0, #0
   14184:	beq	141c8 <table_compare_int64@@Base+0x48>
   14188:	cmp	r1, #0
   1418c:	beq	141d8 <table_compare_int64@@Base+0x58>
   14190:	strd	r4, [sp, #-8]!
   14194:	ldrd	r2, [r1]
   14198:	ldrd	r4, [r0]
   1419c:	cmp	r2, r4
   141a0:	sbcs	r1, r3, r5
   141a4:	movlt	r0, #1
   141a8:	blt	141bc <table_compare_int64@@Base+0x3c>
   141ac:	cmp	r4, r2
   141b0:	sbcs	r3, r5, r3
   141b4:	mvnlt	r0, #0
   141b8:	movge	r0, #0
   141bc:	ldrd	r4, [sp]
   141c0:	add	sp, sp, #8
   141c4:	bx	lr
   141c8:	adds	r1, r1, #0
   141cc:	movne	r1, #1
   141d0:	rsb	r0, r1, #0
   141d4:	bx	lr
   141d8:	mov	r0, #1
   141dc:	bx	lr

000141e0 <table_get_default_compare_function_for_data_type@@Base>:
   141e0:	cmp	r0, #23
   141e4:	movwls	r3, #31864	; 0x7c78
   141e8:	movtls	r3, #1
   141ec:	ldrls	r0, [r3, r0, lsl #2]
   141f0:	movhi	r0, #0
   141f4:	bx	lr

000141f8 <table_subset_find@@Base>:
   141f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   141fc:	strd	r6, [sp, #8]
   14200:	mov	r7, r0
   14204:	str	sl, [sp, #24]
   14208:	mov	sl, r3
   1420c:	strd	r8, [sp, #16]
   14210:	mov	r9, r2
   14214:	mov	r8, r1
   14218:	str	lr, [sp, #28]
   1421c:	ldr	r5, [sp, #32]
   14220:	ldr	r4, [sp, #36]	; 0x24
   14224:	bl	13b40 <table_get_column_compare_function@@Base>
   14228:	cmp	sl, #0
   1422c:	mov	r6, r0
   14230:	bne	14280 <table_subset_find@@Base+0x88>
   14234:	cmp	r5, r4
   14238:	ble	14298 <table_subset_find@@Base+0xa0>
   1423c:	mvn	r0, #0
   14240:	ldrd	r4, [sp]
   14244:	ldrd	r6, [sp, #8]
   14248:	ldrd	r8, [sp, #16]
   1424c:	ldr	sl, [sp, #24]
   14250:	add	sp, sp, #28
   14254:	pop	{pc}		; (ldr pc, [sp], #4)
   14258:	mov	r2, r8
   1425c:	mov	r1, r4
   14260:	mov	r0, r7
   14264:	bl	15838 <table_get@@Base>
   14268:	mov	r1, r0
   1426c:	mov	r0, r9
   14270:	blx	r6
   14274:	cmp	r0, #0
   14278:	beq	142c4 <table_subset_find@@Base+0xcc>
   1427c:	sub	r4, r4, #1
   14280:	cmp	r5, r4
   14284:	ble	14258 <table_subset_find@@Base+0x60>
   14288:	b	1423c <table_subset_find@@Base+0x44>
   1428c:	add	r5, r5, #1
   14290:	cmp	r4, r5
   14294:	blt	1423c <table_subset_find@@Base+0x44>
   14298:	mov	r2, r8
   1429c:	mov	r1, r5
   142a0:	mov	r0, r7
   142a4:	bl	15838 <table_get@@Base>
   142a8:	mov	r1, r0
   142ac:	mov	r0, r9
   142b0:	blx	r6
   142b4:	cmp	r0, #0
   142b8:	bne	1428c <table_subset_find@@Base+0x94>
   142bc:	mov	r0, r5
   142c0:	b	14240 <table_subset_find@@Base+0x48>
   142c4:	mov	r0, r4
   142c8:	b	14240 <table_subset_find@@Base+0x48>

000142cc <table_find@@Base>:
   142cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   142d0:	mov	r5, r1
   142d4:	mov	r4, r0
   142d8:	strd	r6, [sp, #8]
   142dc:	mov	r6, r2
   142e0:	mov	r7, r3
   142e4:	str	lr, [sp, #16]
   142e8:	sub	sp, sp, #12
   142ec:	bl	15c00 <table_get_row_length@@Base>
   142f0:	sub	ip, r0, #1
   142f4:	mov	lr, #0
   142f8:	mov	r3, r7
   142fc:	mov	r2, r6
   14300:	mov	r1, r5
   14304:	mov	r0, r4
   14308:	str	lr, [sp]
   1430c:	str	ip, [sp, #4]
   14310:	bl	141f8 <table_subset_find@@Base>
   14314:	add	sp, sp, #12
   14318:	ldrd	r4, [sp]
   1431c:	ldrd	r6, [sp, #8]
   14320:	add	sp, sp, #16
   14324:	pop	{pc}		; (ldr pc, [sp], #4)

00014328 <table_find_bool@@Base>:
   14328:	strd	r4, [sp, #-16]!
   1432c:	mov	r5, r1
   14330:	mov	r4, r0
   14334:	str	r6, [sp, #8]
   14338:	mov	r6, r3
   1433c:	str	lr, [sp, #12]
   14340:	sub	sp, sp, #16
   14344:	strb	r2, [sp, #15]
   14348:	bl	15c00 <table_get_row_length@@Base>
   1434c:	sub	ip, r0, #1
   14350:	mov	r2, #0
   14354:	mov	r3, r6
   14358:	mov	r1, r5
   1435c:	mov	r0, r4
   14360:	stm	sp, {r2, ip}
   14364:	add	r2, sp, #15
   14368:	bl	141f8 <table_subset_find@@Base>
   1436c:	add	sp, sp, #16
   14370:	ldrd	r4, [sp]
   14374:	ldr	r6, [sp, #8]
   14378:	add	sp, sp, #12
   1437c:	pop	{pc}		; (ldr pc, [sp], #4)

00014380 <table_find_int@@Base>:
   14380:	strd	r4, [sp, #-16]!
   14384:	mov	r5, r1
   14388:	mov	r4, r0
   1438c:	str	r6, [sp, #8]
   14390:	mov	r6, r3
   14394:	str	lr, [sp, #12]
   14398:	sub	sp, sp, #16
   1439c:	str	r2, [sp, #12]
   143a0:	bl	15c00 <table_get_row_length@@Base>
   143a4:	sub	ip, r0, #1
   143a8:	mov	r2, #0
   143ac:	mov	r3, r6
   143b0:	mov	r1, r5
   143b4:	mov	r0, r4
   143b8:	stm	sp, {r2, ip}
   143bc:	add	r2, sp, #12
   143c0:	bl	141f8 <table_subset_find@@Base>
   143c4:	add	sp, sp, #16
   143c8:	ldrd	r4, [sp]
   143cc:	ldr	r6, [sp, #8]
   143d0:	add	sp, sp, #12
   143d4:	pop	{pc}		; (ldr pc, [sp], #4)

000143d8 <table_find_uint@@Base>:
   143d8:	strd	r4, [sp, #-16]!
   143dc:	mov	r5, r1
   143e0:	mov	r4, r0
   143e4:	str	r6, [sp, #8]
   143e8:	mov	r6, r3
   143ec:	str	lr, [sp, #12]
   143f0:	sub	sp, sp, #16
   143f4:	str	r2, [sp, #12]
   143f8:	bl	15c00 <table_get_row_length@@Base>
   143fc:	sub	ip, r0, #1
   14400:	mov	r2, #0
   14404:	mov	r3, r6
   14408:	mov	r1, r5
   1440c:	mov	r0, r4
   14410:	stm	sp, {r2, ip}
   14414:	add	r2, sp, #12
   14418:	bl	141f8 <table_subset_find@@Base>
   1441c:	add	sp, sp, #16
   14420:	ldrd	r4, [sp]
   14424:	ldr	r6, [sp, #8]
   14428:	add	sp, sp, #12
   1442c:	pop	{pc}		; (ldr pc, [sp], #4)

00014430 <table_find_int8@@Base>:
   14430:	strd	r4, [sp, #-16]!
   14434:	mov	r5, r1
   14438:	mov	r4, r0
   1443c:	str	r6, [sp, #8]
   14440:	mov	r6, r3
   14444:	str	lr, [sp, #12]
   14448:	sub	sp, sp, #16
   1444c:	strb	r2, [sp, #15]
   14450:	bl	15c00 <table_get_row_length@@Base>
   14454:	sub	ip, r0, #1
   14458:	mov	r2, #0
   1445c:	mov	r3, r6
   14460:	mov	r1, r5
   14464:	mov	r0, r4
   14468:	stm	sp, {r2, ip}
   1446c:	add	r2, sp, #15
   14470:	bl	141f8 <table_subset_find@@Base>
   14474:	add	sp, sp, #16
   14478:	ldrd	r4, [sp]
   1447c:	ldr	r6, [sp, #8]
   14480:	add	sp, sp, #12
   14484:	pop	{pc}		; (ldr pc, [sp], #4)

00014488 <table_find_uint8@@Base>:
   14488:	strd	r4, [sp, #-16]!
   1448c:	mov	r5, r1
   14490:	mov	r4, r0
   14494:	str	r6, [sp, #8]
   14498:	mov	r6, r3
   1449c:	str	lr, [sp, #12]
   144a0:	sub	sp, sp, #16
   144a4:	strb	r2, [sp, #15]
   144a8:	bl	15c00 <table_get_row_length@@Base>
   144ac:	sub	ip, r0, #1
   144b0:	mov	r2, #0
   144b4:	mov	r3, r6
   144b8:	mov	r1, r5
   144bc:	mov	r0, r4
   144c0:	stm	sp, {r2, ip}
   144c4:	add	r2, sp, #15
   144c8:	bl	141f8 <table_subset_find@@Base>
   144cc:	add	sp, sp, #16
   144d0:	ldrd	r4, [sp]
   144d4:	ldr	r6, [sp, #8]
   144d8:	add	sp, sp, #12
   144dc:	pop	{pc}		; (ldr pc, [sp], #4)

000144e0 <table_find_int16@@Base>:
   144e0:	strd	r4, [sp, #-16]!
   144e4:	mov	r5, r1
   144e8:	mov	r4, r0
   144ec:	str	r6, [sp, #8]
   144f0:	mov	r6, r3
   144f4:	str	lr, [sp, #12]
   144f8:	sub	sp, sp, #16
   144fc:	strh	r2, [sp, #14]
   14500:	bl	15c00 <table_get_row_length@@Base>
   14504:	sub	ip, r0, #1
   14508:	mov	r2, #0
   1450c:	mov	r3, r6
   14510:	mov	r1, r5
   14514:	mov	r0, r4
   14518:	stm	sp, {r2, ip}
   1451c:	add	r2, sp, #14
   14520:	bl	141f8 <table_subset_find@@Base>
   14524:	add	sp, sp, #16
   14528:	ldrd	r4, [sp]
   1452c:	ldr	r6, [sp, #8]
   14530:	add	sp, sp, #12
   14534:	pop	{pc}		; (ldr pc, [sp], #4)

00014538 <table_find_uint16@@Base>:
   14538:	strd	r4, [sp, #-16]!
   1453c:	mov	r5, r1
   14540:	mov	r4, r0
   14544:	str	r6, [sp, #8]
   14548:	mov	r6, r3
   1454c:	str	lr, [sp, #12]
   14550:	sub	sp, sp, #16
   14554:	strh	r2, [sp, #14]
   14558:	bl	15c00 <table_get_row_length@@Base>
   1455c:	sub	ip, r0, #1
   14560:	mov	r2, #0
   14564:	mov	r3, r6
   14568:	mov	r1, r5
   1456c:	mov	r0, r4
   14570:	stm	sp, {r2, ip}
   14574:	add	r2, sp, #14
   14578:	bl	141f8 <table_subset_find@@Base>
   1457c:	add	sp, sp, #16
   14580:	ldrd	r4, [sp]
   14584:	ldr	r6, [sp, #8]
   14588:	add	sp, sp, #12
   1458c:	pop	{pc}		; (ldr pc, [sp], #4)

00014590 <table_find_int32@@Base>:
   14590:	strd	r4, [sp, #-16]!
   14594:	mov	r5, r1
   14598:	mov	r4, r0
   1459c:	str	r6, [sp, #8]
   145a0:	mov	r6, r3
   145a4:	str	lr, [sp, #12]
   145a8:	sub	sp, sp, #16
   145ac:	str	r2, [sp, #12]
   145b0:	bl	15c00 <table_get_row_length@@Base>
   145b4:	sub	ip, r0, #1
   145b8:	mov	r2, #0
   145bc:	mov	r3, r6
   145c0:	mov	r1, r5
   145c4:	mov	r0, r4
   145c8:	stm	sp, {r2, ip}
   145cc:	add	r2, sp, #12
   145d0:	bl	141f8 <table_subset_find@@Base>
   145d4:	add	sp, sp, #16
   145d8:	ldrd	r4, [sp]
   145dc:	ldr	r6, [sp, #8]
   145e0:	add	sp, sp, #12
   145e4:	pop	{pc}		; (ldr pc, [sp], #4)

000145e8 <table_find_uint32@@Base>:
   145e8:	strd	r4, [sp, #-16]!
   145ec:	mov	r5, r1
   145f0:	mov	r4, r0
   145f4:	str	r6, [sp, #8]
   145f8:	mov	r6, r3
   145fc:	str	lr, [sp, #12]
   14600:	sub	sp, sp, #16
   14604:	str	r2, [sp, #12]
   14608:	bl	15c00 <table_get_row_length@@Base>
   1460c:	sub	ip, r0, #1
   14610:	mov	r2, #0
   14614:	mov	r3, r6
   14618:	mov	r1, r5
   1461c:	mov	r0, r4
   14620:	stm	sp, {r2, ip}
   14624:	add	r2, sp, #12
   14628:	bl	141f8 <table_subset_find@@Base>
   1462c:	add	sp, sp, #16
   14630:	ldrd	r4, [sp]
   14634:	ldr	r6, [sp, #8]
   14638:	add	sp, sp, #12
   1463c:	pop	{pc}		; (ldr pc, [sp], #4)

00014640 <table_find_int64@@Base>:
   14640:	strd	r4, [sp, #-12]!
   14644:	mov	r5, r1
   14648:	mov	r4, r0
   1464c:	str	lr, [sp, #8]
   14650:	sub	sp, sp, #20
   14654:	strd	r2, [sp, #8]
   14658:	bl	15c00 <table_get_row_length@@Base>
   1465c:	ldr	r3, [sp, #32]
   14660:	sub	ip, r0, #1
   14664:	mov	r2, #0
   14668:	mov	r1, r5
   1466c:	mov	r0, r4
   14670:	stm	sp, {r2, ip}
   14674:	add	r2, sp, #8
   14678:	bl	141f8 <table_subset_find@@Base>
   1467c:	add	sp, sp, #20
   14680:	ldrd	r4, [sp]
   14684:	add	sp, sp, #8
   14688:	pop	{pc}		; (ldr pc, [sp], #4)

0001468c <table_find_uint64@@Base>:
   1468c:	strd	r4, [sp, #-12]!
   14690:	mov	r5, r1
   14694:	mov	r4, r0
   14698:	str	lr, [sp, #8]
   1469c:	sub	sp, sp, #20
   146a0:	strd	r2, [sp, #8]
   146a4:	bl	15c00 <table_get_row_length@@Base>
   146a8:	ldr	r3, [sp, #32]
   146ac:	sub	ip, r0, #1
   146b0:	mov	r2, #0
   146b4:	mov	r1, r5
   146b8:	mov	r0, r4
   146bc:	stm	sp, {r2, ip}
   146c0:	add	r2, sp, #8
   146c4:	bl	141f8 <table_subset_find@@Base>
   146c8:	add	sp, sp, #20
   146cc:	ldrd	r4, [sp]
   146d0:	add	sp, sp, #8
   146d4:	pop	{pc}		; (ldr pc, [sp], #4)

000146d8 <table_find_short@@Base>:
   146d8:	strd	r4, [sp, #-16]!
   146dc:	mov	r5, r1
   146e0:	mov	r4, r0
   146e4:	str	r6, [sp, #8]
   146e8:	mov	r6, r3
   146ec:	str	lr, [sp, #12]
   146f0:	sub	sp, sp, #16
   146f4:	strh	r2, [sp, #14]
   146f8:	bl	15c00 <table_get_row_length@@Base>
   146fc:	sub	ip, r0, #1
   14700:	mov	r2, #0
   14704:	mov	r3, r6
   14708:	mov	r1, r5
   1470c:	mov	r0, r4
   14710:	stm	sp, {r2, ip}
   14714:	add	r2, sp, #14
   14718:	bl	141f8 <table_subset_find@@Base>
   1471c:	add	sp, sp, #16
   14720:	ldrd	r4, [sp]
   14724:	ldr	r6, [sp, #8]
   14728:	add	sp, sp, #12
   1472c:	pop	{pc}		; (ldr pc, [sp], #4)

00014730 <table_find_ushort@@Base>:
   14730:	strd	r4, [sp, #-16]!
   14734:	mov	r5, r1
   14738:	mov	r4, r0
   1473c:	str	r6, [sp, #8]
   14740:	mov	r6, r3
   14744:	str	lr, [sp, #12]
   14748:	sub	sp, sp, #16
   1474c:	strh	r2, [sp, #14]
   14750:	bl	15c00 <table_get_row_length@@Base>
   14754:	sub	ip, r0, #1
   14758:	mov	r2, #0
   1475c:	mov	r3, r6
   14760:	mov	r1, r5
   14764:	mov	r0, r4
   14768:	stm	sp, {r2, ip}
   1476c:	add	r2, sp, #14
   14770:	bl	141f8 <table_subset_find@@Base>
   14774:	add	sp, sp, #16
   14778:	ldrd	r4, [sp]
   1477c:	ldr	r6, [sp, #8]
   14780:	add	sp, sp, #12
   14784:	pop	{pc}		; (ldr pc, [sp], #4)

00014788 <table_find_long@@Base>:
   14788:	strd	r4, [sp, #-16]!
   1478c:	mov	r5, r1
   14790:	mov	r4, r0
   14794:	str	r6, [sp, #8]
   14798:	mov	r6, r3
   1479c:	str	lr, [sp, #12]
   147a0:	sub	sp, sp, #16
   147a4:	str	r2, [sp, #12]
   147a8:	bl	15c00 <table_get_row_length@@Base>
   147ac:	sub	ip, r0, #1
   147b0:	mov	r2, #0
   147b4:	mov	r3, r6
   147b8:	mov	r1, r5
   147bc:	mov	r0, r4
   147c0:	stm	sp, {r2, ip}
   147c4:	add	r2, sp, #12
   147c8:	bl	141f8 <table_subset_find@@Base>
   147cc:	add	sp, sp, #16
   147d0:	ldrd	r4, [sp]
   147d4:	ldr	r6, [sp, #8]
   147d8:	add	sp, sp, #12
   147dc:	pop	{pc}		; (ldr pc, [sp], #4)

000147e0 <table_find_ulong@@Base>:
   147e0:	strd	r4, [sp, #-16]!
   147e4:	mov	r5, r1
   147e8:	mov	r4, r0
   147ec:	str	r6, [sp, #8]
   147f0:	mov	r6, r3
   147f4:	str	lr, [sp, #12]
   147f8:	sub	sp, sp, #16
   147fc:	str	r2, [sp, #12]
   14800:	bl	15c00 <table_get_row_length@@Base>
   14804:	sub	ip, r0, #1
   14808:	mov	r2, #0
   1480c:	mov	r3, r6
   14810:	mov	r1, r5
   14814:	mov	r0, r4
   14818:	stm	sp, {r2, ip}
   1481c:	add	r2, sp, #12
   14820:	bl	141f8 <table_subset_find@@Base>
   14824:	add	sp, sp, #16
   14828:	ldrd	r4, [sp]
   1482c:	ldr	r6, [sp, #8]
   14830:	add	sp, sp, #12
   14834:	pop	{pc}		; (ldr pc, [sp], #4)

00014838 <table_find_llong@@Base>:
   14838:	strd	r4, [sp, #-12]!
   1483c:	mov	r5, r1
   14840:	mov	r4, r0
   14844:	str	lr, [sp, #8]
   14848:	sub	sp, sp, #20
   1484c:	strd	r2, [sp, #8]
   14850:	bl	15c00 <table_get_row_length@@Base>
   14854:	ldr	r3, [sp, #32]
   14858:	sub	ip, r0, #1
   1485c:	mov	r2, #0
   14860:	mov	r1, r5
   14864:	mov	r0, r4
   14868:	stm	sp, {r2, ip}
   1486c:	add	r2, sp, #8
   14870:	bl	141f8 <table_subset_find@@Base>
   14874:	add	sp, sp, #20
   14878:	ldrd	r4, [sp]
   1487c:	add	sp, sp, #8
   14880:	pop	{pc}		; (ldr pc, [sp], #4)

00014884 <table_find_ullong@@Base>:
   14884:	strd	r4, [sp, #-12]!
   14888:	mov	r5, r1
   1488c:	mov	r4, r0
   14890:	str	lr, [sp, #8]
   14894:	sub	sp, sp, #20
   14898:	strd	r2, [sp, #8]
   1489c:	bl	15c00 <table_get_row_length@@Base>
   148a0:	ldr	r3, [sp, #32]
   148a4:	sub	ip, r0, #1
   148a8:	mov	r2, #0
   148ac:	mov	r1, r5
   148b0:	mov	r0, r4
   148b4:	stm	sp, {r2, ip}
   148b8:	add	r2, sp, #8
   148bc:	bl	141f8 <table_subset_find@@Base>
   148c0:	add	sp, sp, #20
   148c4:	ldrd	r4, [sp]
   148c8:	add	sp, sp, #8
   148cc:	pop	{pc}		; (ldr pc, [sp], #4)

000148d0 <table_find_float@@Base>:
   148d0:	strd	r4, [sp, #-16]!
   148d4:	mov	r5, r1
   148d8:	mov	r4, r0
   148dc:	str	r6, [sp, #8]
   148e0:	mov	r6, r2
   148e4:	str	lr, [sp, #12]
   148e8:	sub	sp, sp, #16
   148ec:	vstr	s0, [sp, #12]
   148f0:	bl	15c00 <table_get_row_length@@Base>
   148f4:	sub	ip, r0, #1
   148f8:	mov	lr, #0
   148fc:	mov	r3, r6
   14900:	mov	r1, r5
   14904:	mov	r0, r4
   14908:	add	r2, sp, #12
   1490c:	str	lr, [sp]
   14910:	str	ip, [sp, #4]
   14914:	bl	141f8 <table_subset_find@@Base>
   14918:	add	sp, sp, #16
   1491c:	ldrd	r4, [sp]
   14920:	ldr	r6, [sp, #8]
   14924:	add	sp, sp, #12
   14928:	pop	{pc}		; (ldr pc, [sp], #4)

0001492c <table_find_double@@Base>:
   1492c:	strd	r4, [sp, #-16]!
   14930:	mov	r5, r1
   14934:	mov	r4, r0
   14938:	str	r6, [sp, #8]
   1493c:	mov	r6, r2
   14940:	str	lr, [sp, #12]
   14944:	sub	sp, sp, #16
   14948:	vstr	d0, [sp, #8]
   1494c:	bl	15c00 <table_get_row_length@@Base>
   14950:	sub	ip, r0, #1
   14954:	mov	lr, #0
   14958:	mov	r3, r6
   1495c:	mov	r1, r5
   14960:	mov	r0, r4
   14964:	add	r2, sp, #8
   14968:	str	lr, [sp]
   1496c:	str	ip, [sp, #4]
   14970:	bl	141f8 <table_subset_find@@Base>
   14974:	add	sp, sp, #16
   14978:	ldrd	r4, [sp]
   1497c:	ldr	r6, [sp, #8]
   14980:	add	sp, sp, #12
   14984:	pop	{pc}		; (ldr pc, [sp], #4)

00014988 <table_find_ldouble@@Base>:
   14988:	strd	r4, [sp, #-16]!
   1498c:	mov	r5, r1
   14990:	mov	r4, r0
   14994:	str	r6, [sp, #8]
   14998:	mov	r6, r2
   1499c:	str	lr, [sp, #12]
   149a0:	sub	sp, sp, #16
   149a4:	vstr	d0, [sp, #8]
   149a8:	bl	15c00 <table_get_row_length@@Base>
   149ac:	sub	ip, r0, #1
   149b0:	mov	lr, #0
   149b4:	mov	r3, r6
   149b8:	mov	r1, r5
   149bc:	mov	r0, r4
   149c0:	add	r2, sp, #8
   149c4:	str	lr, [sp]
   149c8:	str	ip, [sp, #4]
   149cc:	bl	141f8 <table_subset_find@@Base>
   149d0:	add	sp, sp, #16
   149d4:	ldrd	r4, [sp]
   149d8:	ldr	r6, [sp, #8]
   149dc:	add	sp, sp, #12
   149e0:	pop	{pc}		; (ldr pc, [sp], #4)

000149e4 <table_find_char@@Base>:
   149e4:	strd	r4, [sp, #-16]!
   149e8:	mov	r5, r1
   149ec:	mov	r4, r0
   149f0:	str	r6, [sp, #8]
   149f4:	mov	r6, r3
   149f8:	str	lr, [sp, #12]
   149fc:	sub	sp, sp, #16
   14a00:	strb	r2, [sp, #15]
   14a04:	bl	15c00 <table_get_row_length@@Base>
   14a08:	sub	ip, r0, #1
   14a0c:	mov	r2, #0
   14a10:	mov	r3, r6
   14a14:	mov	r1, r5
   14a18:	mov	r0, r4
   14a1c:	stm	sp, {r2, ip}
   14a20:	add	r2, sp, #15
   14a24:	bl	141f8 <table_subset_find@@Base>
   14a28:	add	sp, sp, #16
   14a2c:	ldrd	r4, [sp]
   14a30:	ldr	r6, [sp, #8]
   14a34:	add	sp, sp, #12
   14a38:	pop	{pc}		; (ldr pc, [sp], #4)

00014a3c <table_find_uchar@@Base>:
   14a3c:	strd	r4, [sp, #-16]!
   14a40:	mov	r5, r1
   14a44:	mov	r4, r0
   14a48:	str	r6, [sp, #8]
   14a4c:	mov	r6, r3
   14a50:	str	lr, [sp, #12]
   14a54:	sub	sp, sp, #16
   14a58:	strb	r2, [sp, #15]
   14a5c:	bl	15c00 <table_get_row_length@@Base>
   14a60:	sub	ip, r0, #1
   14a64:	mov	r2, #0
   14a68:	mov	r3, r6
   14a6c:	mov	r1, r5
   14a70:	mov	r0, r4
   14a74:	stm	sp, {r2, ip}
   14a78:	add	r2, sp, #15
   14a7c:	bl	141f8 <table_subset_find@@Base>
   14a80:	add	sp, sp, #16
   14a84:	ldrd	r4, [sp]
   14a88:	ldr	r6, [sp, #8]
   14a8c:	add	sp, sp, #12
   14a90:	pop	{pc}		; (ldr pc, [sp], #4)

00014a94 <table_find_string@@Base>:
   14a94:	strd	r4, [sp, #-16]!
   14a98:	mov	r5, r1
   14a9c:	mov	r4, r0
   14aa0:	str	r6, [sp, #8]
   14aa4:	mov	r6, r3
   14aa8:	str	lr, [sp, #12]
   14aac:	sub	sp, sp, #16
   14ab0:	str	r2, [sp, #12]
   14ab4:	bl	15c00 <table_get_row_length@@Base>
   14ab8:	sub	ip, r0, #1
   14abc:	mov	r2, #0
   14ac0:	mov	r3, r6
   14ac4:	mov	r1, r5
   14ac8:	mov	r0, r4
   14acc:	stm	sp, {r2, ip}
   14ad0:	add	r2, sp, #12
   14ad4:	bl	141f8 <table_subset_find@@Base>
   14ad8:	add	sp, sp, #16
   14adc:	ldrd	r4, [sp]
   14ae0:	ldr	r6, [sp, #8]
   14ae4:	add	sp, sp, #12
   14ae8:	pop	{pc}		; (ldr pc, [sp], #4)

00014aec <table_find_ptr@@Base>:
   14aec:	strd	r4, [sp, #-20]!	; 0xffffffec
   14af0:	mov	r5, r1
   14af4:	mov	r4, r0
   14af8:	strd	r6, [sp, #8]
   14afc:	mov	r6, r2
   14b00:	mov	r7, r3
   14b04:	str	lr, [sp, #16]
   14b08:	sub	sp, sp, #12
   14b0c:	bl	15c00 <table_get_row_length@@Base>
   14b10:	sub	ip, r0, #1
   14b14:	mov	lr, #0
   14b18:	mov	r3, r7
   14b1c:	mov	r2, r6
   14b20:	mov	r1, r5
   14b24:	mov	r0, r4
   14b28:	str	lr, [sp]
   14b2c:	str	ip, [sp, #4]
   14b30:	bl	141f8 <table_subset_find@@Base>
   14b34:	add	sp, sp, #12
   14b38:	ldrd	r4, [sp]
   14b3c:	ldrd	r6, [sp, #8]
   14b40:	add	sp, sp, #16
   14b44:	pop	{pc}		; (ldr pc, [sp], #4)

00014b48 <table_sorted_subset_find@@Base>:
   14b48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b4c:	mov	r5, r0
   14b50:	strd	r6, [sp, #8]
   14b54:	mov	r6, r1
   14b58:	strd	r8, [sp, #16]
   14b5c:	mov	r9, r2
   14b60:	strd	sl, [sp, #24]
   14b64:	mov	fp, r3
   14b68:	str	lr, [sp, #32]
   14b6c:	sub	sp, sp, #4
   14b70:	ldr	r8, [sp, #40]	; 0x28
   14b74:	ldr	sl, [sp, #44]	; 0x2c
   14b78:	sub	r4, sl, r8
   14b7c:	mov	r1, r6
   14b80:	add	r4, r4, r4, lsr #31
   14b84:	mov	r0, r5
   14b88:	bl	13b40 <table_get_column_compare_function@@Base>
   14b8c:	add	r4, r8, r4, asr #1
   14b90:	mov	r7, r0
   14b94:	mov	r2, r6
   14b98:	mov	r0, r5
   14b9c:	mov	r1, r4
   14ba0:	bl	15838 <table_get@@Base>
   14ba4:	mov	r1, r0
   14ba8:	mov	r0, r9
   14bac:	blx	r7
   14bb0:	cmp	sl, r8
   14bb4:	blt	14bd0 <table_sorted_subset_find@@Base+0x88>
   14bb8:	cmp	r0, #0
   14bbc:	beq	14bfc <table_sorted_subset_find@@Base+0xb4>
   14bc0:	cmp	r0, #1
   14bc4:	beq	14bf4 <table_sorted_subset_find@@Base+0xac>
   14bc8:	cmn	r0, #1
   14bcc:	beq	14c60 <table_sorted_subset_find@@Base+0x118>
   14bd0:	rsb	r4, r4, #0
   14bd4:	mov	r0, r4
   14bd8:	add	sp, sp, #4
   14bdc:	ldrd	r4, [sp]
   14be0:	ldrd	r6, [sp, #8]
   14be4:	ldrd	r8, [sp, #16]
   14be8:	ldrd	sl, [sp, #24]
   14bec:	add	sp, sp, #32
   14bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bf4:	mov	r8, r4
   14bf8:	b	14b78 <table_sorted_subset_find@@Base+0x30>
   14bfc:	cmp	fp, #0
   14c00:	beq	14c38 <table_sorted_subset_find@@Base+0xf0>
   14c04:	b	14c0c <table_sorted_subset_find@@Base+0xc4>
   14c08:	mov	r4, r8
   14c0c:	add	r8, r4, #1
   14c10:	mov	r2, r6
   14c14:	mov	r1, r8
   14c18:	mov	r0, r5
   14c1c:	bl	15838 <table_get@@Base>
   14c20:	mov	r1, r9
   14c24:	blx	r7
   14c28:	cmp	r0, #0
   14c2c:	beq	14c08 <table_sorted_subset_find@@Base+0xc0>
   14c30:	b	14bd4 <table_sorted_subset_find@@Base+0x8c>
   14c34:	mov	r4, r8
   14c38:	sub	r8, r4, #1
   14c3c:	mov	r2, r6
   14c40:	mov	r1, r8
   14c44:	mov	r0, r5
   14c48:	bl	15838 <table_get@@Base>
   14c4c:	mov	r1, r9
   14c50:	blx	r7
   14c54:	cmp	r0, #0
   14c58:	beq	14c34 <table_sorted_subset_find@@Base+0xec>
   14c5c:	b	14bd4 <table_sorted_subset_find@@Base+0x8c>
   14c60:	sub	sl, r4, #1
   14c64:	b	14b78 <table_sorted_subset_find@@Base+0x30>

00014c68 <table_sorted_find@@Base>:
   14c68:	strd	r4, [sp, #-20]!	; 0xffffffec
   14c6c:	mov	r5, r1
   14c70:	mov	r4, r0
   14c74:	strd	r6, [sp, #8]
   14c78:	mov	r6, r2
   14c7c:	mov	r7, r3
   14c80:	str	lr, [sp, #16]
   14c84:	sub	sp, sp, #12
   14c88:	bl	15c00 <table_get_row_length@@Base>
   14c8c:	sub	ip, r0, #1
   14c90:	mov	lr, #0
   14c94:	mov	r3, r7
   14c98:	mov	r2, r6
   14c9c:	mov	r1, r5
   14ca0:	mov	r0, r4
   14ca4:	str	lr, [sp]
   14ca8:	str	ip, [sp, #4]
   14cac:	bl	14b48 <table_sorted_subset_find@@Base>
   14cb0:	add	sp, sp, #12
   14cb4:	ldrd	r4, [sp]
   14cb8:	ldrd	r6, [sp, #8]
   14cbc:	add	sp, sp, #16
   14cc0:	pop	{pc}		; (ldr pc, [sp], #4)

00014cc4 <table_sorted_find_int@@Base>:
   14cc4:	strd	r4, [sp, #-16]!
   14cc8:	mov	r5, r1
   14ccc:	mov	r4, r0
   14cd0:	str	r6, [sp, #8]
   14cd4:	mov	r6, r3
   14cd8:	str	lr, [sp, #12]
   14cdc:	sub	sp, sp, #16
   14ce0:	str	r2, [sp, #12]
   14ce4:	bl	15c00 <table_get_row_length@@Base>
   14ce8:	sub	ip, r0, #1
   14cec:	mov	r2, #0
   14cf0:	mov	r3, r6
   14cf4:	mov	r1, r5
   14cf8:	mov	r0, r4
   14cfc:	stm	sp, {r2, ip}
   14d00:	add	r2, sp, #12
   14d04:	bl	14b48 <table_sorted_subset_find@@Base>
   14d08:	add	sp, sp, #16
   14d0c:	ldrd	r4, [sp]
   14d10:	ldr	r6, [sp, #8]
   14d14:	add	sp, sp, #12
   14d18:	pop	{pc}		; (ldr pc, [sp], #4)

00014d1c <table_sorted_find_uint@@Base>:
   14d1c:	strd	r4, [sp, #-16]!
   14d20:	mov	r5, r1
   14d24:	mov	r4, r0
   14d28:	str	r6, [sp, #8]
   14d2c:	mov	r6, r3
   14d30:	str	lr, [sp, #12]
   14d34:	sub	sp, sp, #16
   14d38:	str	r2, [sp, #12]
   14d3c:	bl	15c00 <table_get_row_length@@Base>
   14d40:	sub	ip, r0, #1
   14d44:	mov	r2, #0
   14d48:	mov	r3, r6
   14d4c:	mov	r1, r5
   14d50:	mov	r0, r4
   14d54:	stm	sp, {r2, ip}
   14d58:	add	r2, sp, #12
   14d5c:	bl	14b48 <table_sorted_subset_find@@Base>
   14d60:	add	sp, sp, #16
   14d64:	ldrd	r4, [sp]
   14d68:	ldr	r6, [sp, #8]
   14d6c:	add	sp, sp, #12
   14d70:	pop	{pc}		; (ldr pc, [sp], #4)

00014d74 <table_sorted_find_int8@@Base>:
   14d74:	strd	r4, [sp, #-16]!
   14d78:	mov	r5, r1
   14d7c:	mov	r4, r0
   14d80:	str	r6, [sp, #8]
   14d84:	mov	r6, r3
   14d88:	str	lr, [sp, #12]
   14d8c:	sub	sp, sp, #16
   14d90:	strb	r2, [sp, #15]
   14d94:	bl	15c00 <table_get_row_length@@Base>
   14d98:	sub	ip, r0, #1
   14d9c:	mov	r2, #0
   14da0:	mov	r3, r6
   14da4:	mov	r1, r5
   14da8:	mov	r0, r4
   14dac:	stm	sp, {r2, ip}
   14db0:	add	r2, sp, #15
   14db4:	bl	14b48 <table_sorted_subset_find@@Base>
   14db8:	add	sp, sp, #16
   14dbc:	ldrd	r4, [sp]
   14dc0:	ldr	r6, [sp, #8]
   14dc4:	add	sp, sp, #12
   14dc8:	pop	{pc}		; (ldr pc, [sp], #4)

00014dcc <table_sorted_find_uint8@@Base>:
   14dcc:	strd	r4, [sp, #-16]!
   14dd0:	mov	r5, r1
   14dd4:	mov	r4, r0
   14dd8:	str	r6, [sp, #8]
   14ddc:	mov	r6, r3
   14de0:	str	lr, [sp, #12]
   14de4:	sub	sp, sp, #16
   14de8:	strb	r2, [sp, #15]
   14dec:	bl	15c00 <table_get_row_length@@Base>
   14df0:	sub	ip, r0, #1
   14df4:	mov	r2, #0
   14df8:	mov	r3, r6
   14dfc:	mov	r1, r5
   14e00:	mov	r0, r4
   14e04:	stm	sp, {r2, ip}
   14e08:	add	r2, sp, #15
   14e0c:	bl	14b48 <table_sorted_subset_find@@Base>
   14e10:	add	sp, sp, #16
   14e14:	ldrd	r4, [sp]
   14e18:	ldr	r6, [sp, #8]
   14e1c:	add	sp, sp, #12
   14e20:	pop	{pc}		; (ldr pc, [sp], #4)

00014e24 <table_sorted_find_int16@@Base>:
   14e24:	strd	r4, [sp, #-16]!
   14e28:	mov	r5, r1
   14e2c:	mov	r4, r0
   14e30:	str	r6, [sp, #8]
   14e34:	mov	r6, r3
   14e38:	str	lr, [sp, #12]
   14e3c:	sub	sp, sp, #16
   14e40:	strh	r2, [sp, #14]
   14e44:	bl	15c00 <table_get_row_length@@Base>
   14e48:	sub	ip, r0, #1
   14e4c:	mov	r2, #0
   14e50:	mov	r3, r6
   14e54:	mov	r1, r5
   14e58:	mov	r0, r4
   14e5c:	stm	sp, {r2, ip}
   14e60:	add	r2, sp, #14
   14e64:	bl	14b48 <table_sorted_subset_find@@Base>
   14e68:	add	sp, sp, #16
   14e6c:	ldrd	r4, [sp]
   14e70:	ldr	r6, [sp, #8]
   14e74:	add	sp, sp, #12
   14e78:	pop	{pc}		; (ldr pc, [sp], #4)

00014e7c <table_sorted_find_uint16@@Base>:
   14e7c:	strd	r4, [sp, #-16]!
   14e80:	mov	r5, r1
   14e84:	mov	r4, r0
   14e88:	str	r6, [sp, #8]
   14e8c:	mov	r6, r3
   14e90:	str	lr, [sp, #12]
   14e94:	sub	sp, sp, #16
   14e98:	strh	r2, [sp, #14]
   14e9c:	bl	15c00 <table_get_row_length@@Base>
   14ea0:	sub	ip, r0, #1
   14ea4:	mov	r2, #0
   14ea8:	mov	r3, r6
   14eac:	mov	r1, r5
   14eb0:	mov	r0, r4
   14eb4:	stm	sp, {r2, ip}
   14eb8:	add	r2, sp, #14
   14ebc:	bl	14b48 <table_sorted_subset_find@@Base>
   14ec0:	add	sp, sp, #16
   14ec4:	ldrd	r4, [sp]
   14ec8:	ldr	r6, [sp, #8]
   14ecc:	add	sp, sp, #12
   14ed0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ed4 <table_sorted_find_int32@@Base>:
   14ed4:	strd	r4, [sp, #-16]!
   14ed8:	mov	r5, r1
   14edc:	mov	r4, r0
   14ee0:	str	r6, [sp, #8]
   14ee4:	mov	r6, r3
   14ee8:	str	lr, [sp, #12]
   14eec:	sub	sp, sp, #16
   14ef0:	str	r2, [sp, #12]
   14ef4:	bl	15c00 <table_get_row_length@@Base>
   14ef8:	sub	ip, r0, #1
   14efc:	mov	r2, #0
   14f00:	mov	r3, r6
   14f04:	mov	r1, r5
   14f08:	mov	r0, r4
   14f0c:	stm	sp, {r2, ip}
   14f10:	add	r2, sp, #12
   14f14:	bl	14b48 <table_sorted_subset_find@@Base>
   14f18:	add	sp, sp, #16
   14f1c:	ldrd	r4, [sp]
   14f20:	ldr	r6, [sp, #8]
   14f24:	add	sp, sp, #12
   14f28:	pop	{pc}		; (ldr pc, [sp], #4)

00014f2c <table_sorted_find_uint32@@Base>:
   14f2c:	strd	r4, [sp, #-16]!
   14f30:	mov	r5, r1
   14f34:	mov	r4, r0
   14f38:	str	r6, [sp, #8]
   14f3c:	mov	r6, r3
   14f40:	str	lr, [sp, #12]
   14f44:	sub	sp, sp, #16
   14f48:	str	r2, [sp, #12]
   14f4c:	bl	15c00 <table_get_row_length@@Base>
   14f50:	sub	ip, r0, #1
   14f54:	mov	r2, #0
   14f58:	mov	r3, r6
   14f5c:	mov	r1, r5
   14f60:	mov	r0, r4
   14f64:	stm	sp, {r2, ip}
   14f68:	add	r2, sp, #12
   14f6c:	bl	14b48 <table_sorted_subset_find@@Base>
   14f70:	add	sp, sp, #16
   14f74:	ldrd	r4, [sp]
   14f78:	ldr	r6, [sp, #8]
   14f7c:	add	sp, sp, #12
   14f80:	pop	{pc}		; (ldr pc, [sp], #4)

00014f84 <table_sorted_find_int64@@Base>:
   14f84:	strd	r4, [sp, #-12]!
   14f88:	mov	r5, r1
   14f8c:	mov	r4, r0
   14f90:	str	lr, [sp, #8]
   14f94:	sub	sp, sp, #20
   14f98:	strd	r2, [sp, #8]
   14f9c:	bl	15c00 <table_get_row_length@@Base>
   14fa0:	ldr	r3, [sp, #32]
   14fa4:	sub	ip, r0, #1
   14fa8:	mov	r2, #0
   14fac:	mov	r1, r5
   14fb0:	mov	r0, r4
   14fb4:	stm	sp, {r2, ip}
   14fb8:	add	r2, sp, #8
   14fbc:	bl	14b48 <table_sorted_subset_find@@Base>
   14fc0:	add	sp, sp, #20
   14fc4:	ldrd	r4, [sp]
   14fc8:	add	sp, sp, #8
   14fcc:	pop	{pc}		; (ldr pc, [sp], #4)

00014fd0 <table_sorted_find_uint64@@Base>:
   14fd0:	strd	r4, [sp, #-12]!
   14fd4:	mov	r5, r1
   14fd8:	mov	r4, r0
   14fdc:	str	lr, [sp, #8]
   14fe0:	sub	sp, sp, #20
   14fe4:	strd	r2, [sp, #8]
   14fe8:	bl	15c00 <table_get_row_length@@Base>
   14fec:	ldr	r3, [sp, #32]
   14ff0:	sub	ip, r0, #1
   14ff4:	mov	r2, #0
   14ff8:	mov	r1, r5
   14ffc:	mov	r0, r4
   15000:	stm	sp, {r2, ip}
   15004:	add	r2, sp, #8
   15008:	bl	14b48 <table_sorted_subset_find@@Base>
   1500c:	add	sp, sp, #20
   15010:	ldrd	r4, [sp]
   15014:	add	sp, sp, #8
   15018:	pop	{pc}		; (ldr pc, [sp], #4)

0001501c <table_sorted_find_short@@Base>:
   1501c:	strd	r4, [sp, #-16]!
   15020:	mov	r5, r1
   15024:	mov	r4, r0
   15028:	str	r6, [sp, #8]
   1502c:	mov	r6, r3
   15030:	str	lr, [sp, #12]
   15034:	sub	sp, sp, #16
   15038:	strh	r2, [sp, #14]
   1503c:	bl	15c00 <table_get_row_length@@Base>
   15040:	sub	ip, r0, #1
   15044:	mov	r2, #0
   15048:	mov	r3, r6
   1504c:	mov	r1, r5
   15050:	mov	r0, r4
   15054:	stm	sp, {r2, ip}
   15058:	add	r2, sp, #14
   1505c:	bl	14b48 <table_sorted_subset_find@@Base>
   15060:	add	sp, sp, #16
   15064:	ldrd	r4, [sp]
   15068:	ldr	r6, [sp, #8]
   1506c:	add	sp, sp, #12
   15070:	pop	{pc}		; (ldr pc, [sp], #4)

00015074 <table_sorted_find_ushort@@Base>:
   15074:	strd	r4, [sp, #-16]!
   15078:	mov	r5, r1
   1507c:	mov	r4, r0
   15080:	str	r6, [sp, #8]
   15084:	mov	r6, r3
   15088:	str	lr, [sp, #12]
   1508c:	sub	sp, sp, #16
   15090:	strh	r2, [sp, #14]
   15094:	bl	15c00 <table_get_row_length@@Base>
   15098:	sub	ip, r0, #1
   1509c:	mov	r2, #0
   150a0:	mov	r3, r6
   150a4:	mov	r1, r5
   150a8:	mov	r0, r4
   150ac:	stm	sp, {r2, ip}
   150b0:	add	r2, sp, #14
   150b4:	bl	14b48 <table_sorted_subset_find@@Base>
   150b8:	add	sp, sp, #16
   150bc:	ldrd	r4, [sp]
   150c0:	ldr	r6, [sp, #8]
   150c4:	add	sp, sp, #12
   150c8:	pop	{pc}		; (ldr pc, [sp], #4)

000150cc <table_sorted_find_long@@Base>:
   150cc:	strd	r4, [sp, #-16]!
   150d0:	mov	r5, r1
   150d4:	mov	r4, r0
   150d8:	str	r6, [sp, #8]
   150dc:	mov	r6, r3
   150e0:	str	lr, [sp, #12]
   150e4:	sub	sp, sp, #16
   150e8:	str	r2, [sp, #12]
   150ec:	bl	15c00 <table_get_row_length@@Base>
   150f0:	sub	ip, r0, #1
   150f4:	mov	r2, #0
   150f8:	mov	r3, r6
   150fc:	mov	r1, r5
   15100:	mov	r0, r4
   15104:	stm	sp, {r2, ip}
   15108:	add	r2, sp, #12
   1510c:	bl	14b48 <table_sorted_subset_find@@Base>
   15110:	add	sp, sp, #16
   15114:	ldrd	r4, [sp]
   15118:	ldr	r6, [sp, #8]
   1511c:	add	sp, sp, #12
   15120:	pop	{pc}		; (ldr pc, [sp], #4)

00015124 <table_sorted_find_ulong@@Base>:
   15124:	strd	r4, [sp, #-16]!
   15128:	mov	r5, r1
   1512c:	mov	r4, r0
   15130:	str	r6, [sp, #8]
   15134:	mov	r6, r3
   15138:	str	lr, [sp, #12]
   1513c:	sub	sp, sp, #16
   15140:	str	r2, [sp, #12]
   15144:	bl	15c00 <table_get_row_length@@Base>
   15148:	sub	ip, r0, #1
   1514c:	mov	r2, #0
   15150:	mov	r3, r6
   15154:	mov	r1, r5
   15158:	mov	r0, r4
   1515c:	stm	sp, {r2, ip}
   15160:	add	r2, sp, #12
   15164:	bl	14b48 <table_sorted_subset_find@@Base>
   15168:	add	sp, sp, #16
   1516c:	ldrd	r4, [sp]
   15170:	ldr	r6, [sp, #8]
   15174:	add	sp, sp, #12
   15178:	pop	{pc}		; (ldr pc, [sp], #4)

0001517c <table_sorted_find_llong@@Base>:
   1517c:	strd	r4, [sp, #-12]!
   15180:	mov	r5, r1
   15184:	mov	r4, r0
   15188:	str	lr, [sp, #8]
   1518c:	sub	sp, sp, #20
   15190:	strd	r2, [sp, #8]
   15194:	bl	15c00 <table_get_row_length@@Base>
   15198:	ldr	r3, [sp, #32]
   1519c:	sub	ip, r0, #1
   151a0:	mov	r2, #0
   151a4:	mov	r1, r5
   151a8:	mov	r0, r4
   151ac:	stm	sp, {r2, ip}
   151b0:	add	r2, sp, #8
   151b4:	bl	14b48 <table_sorted_subset_find@@Base>
   151b8:	add	sp, sp, #20
   151bc:	ldrd	r4, [sp]
   151c0:	add	sp, sp, #8
   151c4:	pop	{pc}		; (ldr pc, [sp], #4)

000151c8 <table_sorted_find_ullong@@Base>:
   151c8:	strd	r4, [sp, #-12]!
   151cc:	mov	r5, r1
   151d0:	mov	r4, r0
   151d4:	str	lr, [sp, #8]
   151d8:	sub	sp, sp, #20
   151dc:	strd	r2, [sp, #8]
   151e0:	bl	15c00 <table_get_row_length@@Base>
   151e4:	ldr	r3, [sp, #32]
   151e8:	sub	ip, r0, #1
   151ec:	mov	r2, #0
   151f0:	mov	r1, r5
   151f4:	mov	r0, r4
   151f8:	stm	sp, {r2, ip}
   151fc:	add	r2, sp, #8
   15200:	bl	14b48 <table_sorted_subset_find@@Base>
   15204:	add	sp, sp, #20
   15208:	ldrd	r4, [sp]
   1520c:	add	sp, sp, #8
   15210:	pop	{pc}		; (ldr pc, [sp], #4)

00015214 <table_sorted_find_float@@Base>:
   15214:	strd	r4, [sp, #-16]!
   15218:	mov	r5, r1
   1521c:	mov	r4, r0
   15220:	str	r6, [sp, #8]
   15224:	mov	r6, r2
   15228:	str	lr, [sp, #12]
   1522c:	sub	sp, sp, #16
   15230:	vstr	s0, [sp, #12]
   15234:	bl	15c00 <table_get_row_length@@Base>
   15238:	sub	ip, r0, #1
   1523c:	mov	lr, #0
   15240:	mov	r3, r6
   15244:	mov	r1, r5
   15248:	mov	r0, r4
   1524c:	add	r2, sp, #12
   15250:	str	lr, [sp]
   15254:	str	ip, [sp, #4]
   15258:	bl	14b48 <table_sorted_subset_find@@Base>
   1525c:	add	sp, sp, #16
   15260:	ldrd	r4, [sp]
   15264:	ldr	r6, [sp, #8]
   15268:	add	sp, sp, #12
   1526c:	pop	{pc}		; (ldr pc, [sp], #4)

00015270 <table_sorted_find_double@@Base>:
   15270:	strd	r4, [sp, #-16]!
   15274:	mov	r5, r1
   15278:	mov	r4, r0
   1527c:	str	r6, [sp, #8]
   15280:	mov	r6, r2
   15284:	str	lr, [sp, #12]
   15288:	sub	sp, sp, #16
   1528c:	vstr	d0, [sp, #8]
   15290:	bl	15c00 <table_get_row_length@@Base>
   15294:	sub	ip, r0, #1
   15298:	mov	lr, #0
   1529c:	mov	r3, r6
   152a0:	mov	r1, r5
   152a4:	mov	r0, r4
   152a8:	add	r2, sp, #8
   152ac:	str	lr, [sp]
   152b0:	str	ip, [sp, #4]
   152b4:	bl	14b48 <table_sorted_subset_find@@Base>
   152b8:	add	sp, sp, #16
   152bc:	ldrd	r4, [sp]
   152c0:	ldr	r6, [sp, #8]
   152c4:	add	sp, sp, #12
   152c8:	pop	{pc}		; (ldr pc, [sp], #4)

000152cc <table_sorted_find_ldouble@@Base>:
   152cc:	strd	r4, [sp, #-16]!
   152d0:	mov	r5, r1
   152d4:	mov	r4, r0
   152d8:	str	r6, [sp, #8]
   152dc:	mov	r6, r2
   152e0:	str	lr, [sp, #12]
   152e4:	sub	sp, sp, #16
   152e8:	vstr	d0, [sp, #8]
   152ec:	bl	15c00 <table_get_row_length@@Base>
   152f0:	sub	ip, r0, #1
   152f4:	mov	lr, #0
   152f8:	mov	r3, r6
   152fc:	mov	r1, r5
   15300:	mov	r0, r4
   15304:	add	r2, sp, #8
   15308:	str	lr, [sp]
   1530c:	str	ip, [sp, #4]
   15310:	bl	14b48 <table_sorted_subset_find@@Base>
   15314:	add	sp, sp, #16
   15318:	ldrd	r4, [sp]
   1531c:	ldr	r6, [sp, #8]
   15320:	add	sp, sp, #12
   15324:	pop	{pc}		; (ldr pc, [sp], #4)

00015328 <table_sorted_find_char@@Base>:
   15328:	strd	r4, [sp, #-16]!
   1532c:	mov	r5, r1
   15330:	mov	r4, r0
   15334:	str	r6, [sp, #8]
   15338:	mov	r6, r3
   1533c:	str	lr, [sp, #12]
   15340:	sub	sp, sp, #16
   15344:	strb	r2, [sp, #15]
   15348:	bl	15c00 <table_get_row_length@@Base>
   1534c:	sub	ip, r0, #1
   15350:	mov	r2, #0
   15354:	mov	r3, r6
   15358:	mov	r1, r5
   1535c:	mov	r0, r4
   15360:	stm	sp, {r2, ip}
   15364:	add	r2, sp, #15
   15368:	bl	14b48 <table_sorted_subset_find@@Base>
   1536c:	add	sp, sp, #16
   15370:	ldrd	r4, [sp]
   15374:	ldr	r6, [sp, #8]
   15378:	add	sp, sp, #12
   1537c:	pop	{pc}		; (ldr pc, [sp], #4)

00015380 <table_sorted_find_uchar@@Base>:
   15380:	strd	r4, [sp, #-16]!
   15384:	mov	r5, r1
   15388:	mov	r4, r0
   1538c:	str	r6, [sp, #8]
   15390:	mov	r6, r3
   15394:	str	lr, [sp, #12]
   15398:	sub	sp, sp, #16
   1539c:	strb	r2, [sp, #15]
   153a0:	bl	15c00 <table_get_row_length@@Base>
   153a4:	sub	ip, r0, #1
   153a8:	mov	r2, #0
   153ac:	mov	r3, r6
   153b0:	mov	r1, r5
   153b4:	mov	r0, r4
   153b8:	stm	sp, {r2, ip}
   153bc:	add	r2, sp, #15
   153c0:	bl	14b48 <table_sorted_subset_find@@Base>
   153c4:	add	sp, sp, #16
   153c8:	ldrd	r4, [sp]
   153cc:	ldr	r6, [sp, #8]
   153d0:	add	sp, sp, #12
   153d4:	pop	{pc}		; (ldr pc, [sp], #4)

000153d8 <table_sorted_find_string@@Base>:
   153d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   153dc:	mov	r5, r1
   153e0:	mov	r4, r0
   153e4:	strd	r6, [sp, #8]
   153e8:	mov	r6, r2
   153ec:	mov	r7, r3
   153f0:	str	lr, [sp, #16]
   153f4:	sub	sp, sp, #12
   153f8:	bl	15c00 <table_get_row_length@@Base>
   153fc:	sub	ip, r0, #1
   15400:	mov	lr, #0
   15404:	mov	r3, r7
   15408:	mov	r2, r6
   1540c:	mov	r1, r5
   15410:	mov	r0, r4
   15414:	str	lr, [sp]
   15418:	str	ip, [sp, #4]
   1541c:	bl	14b48 <table_sorted_subset_find@@Base>
   15420:	add	sp, sp, #12
   15424:	ldrd	r4, [sp]
   15428:	ldrd	r6, [sp, #8]
   1542c:	add	sp, sp, #16
   15430:	pop	{pc}		; (ldr pc, [sp], #4)

00015434 <table_sorted_find_ptr@@Base>:
   15434:	strd	r4, [sp, #-20]!	; 0xffffffec
   15438:	mov	r5, r1
   1543c:	mov	r4, r0
   15440:	strd	r6, [sp, #8]
   15444:	mov	r6, r2
   15448:	mov	r7, r3
   1544c:	str	lr, [sp, #16]
   15450:	sub	sp, sp, #12
   15454:	bl	15c00 <table_get_row_length@@Base>
   15458:	sub	ip, r0, #1
   1545c:	mov	lr, #0
   15460:	mov	r3, r7
   15464:	mov	r2, r6
   15468:	mov	r1, r5
   1546c:	mov	r0, r4
   15470:	str	lr, [sp]
   15474:	str	ip, [sp, #4]
   15478:	bl	14b48 <table_sorted_subset_find@@Base>
   1547c:	add	sp, sp, #12
   15480:	ldrd	r4, [sp]
   15484:	ldrd	r6, [sp, #8]
   15488:	add	sp, sp, #16
   1548c:	pop	{pc}		; (ldr pc, [sp], #4)

00015490 <table_sorted_subset_find_int@@Base>:
   15490:	push	{lr}		; (str lr, [sp, #-4]!)
   15494:	sub	sp, sp, #20
   15498:	ldr	lr, [sp, #24]
   1549c:	ldr	ip, [sp, #28]
   154a0:	str	lr, [sp]
   154a4:	str	r2, [sp, #12]
   154a8:	add	r2, sp, #12
   154ac:	str	ip, [sp, #4]
   154b0:	bl	14b48 <table_sorted_subset_find@@Base>
   154b4:	add	sp, sp, #20
   154b8:	pop	{pc}		; (ldr pc, [sp], #4)

000154bc <table_sorted_subset_find_uint@@Base>:
   154bc:	push	{lr}		; (str lr, [sp, #-4]!)
   154c0:	sub	sp, sp, #20
   154c4:	ldr	lr, [sp, #24]
   154c8:	ldr	ip, [sp, #28]
   154cc:	str	lr, [sp]
   154d0:	str	r2, [sp, #12]
   154d4:	add	r2, sp, #12
   154d8:	str	ip, [sp, #4]
   154dc:	bl	14b48 <table_sorted_subset_find@@Base>
   154e0:	add	sp, sp, #20
   154e4:	pop	{pc}		; (ldr pc, [sp], #4)

000154e8 <table_sorted_subset_find_int8@@Base>:
   154e8:	push	{lr}		; (str lr, [sp, #-4]!)
   154ec:	sub	sp, sp, #20
   154f0:	ldr	lr, [sp, #24]
   154f4:	ldr	ip, [sp, #28]
   154f8:	str	lr, [sp]
   154fc:	strb	r2, [sp, #15]
   15500:	add	r2, sp, #15
   15504:	str	ip, [sp, #4]
   15508:	bl	14b48 <table_sorted_subset_find@@Base>
   1550c:	add	sp, sp, #20
   15510:	pop	{pc}		; (ldr pc, [sp], #4)

00015514 <table_sorted_subset_find_uint8@@Base>:
   15514:	push	{lr}		; (str lr, [sp, #-4]!)
   15518:	sub	sp, sp, #20
   1551c:	ldr	lr, [sp, #24]
   15520:	ldr	ip, [sp, #28]
   15524:	str	lr, [sp]
   15528:	strb	r2, [sp, #15]
   1552c:	add	r2, sp, #15
   15530:	str	ip, [sp, #4]
   15534:	bl	14b48 <table_sorted_subset_find@@Base>
   15538:	add	sp, sp, #20
   1553c:	pop	{pc}		; (ldr pc, [sp], #4)

00015540 <table_sorted_subset_find_int16@@Base>:
   15540:	push	{lr}		; (str lr, [sp, #-4]!)
   15544:	sub	sp, sp, #20
   15548:	ldr	lr, [sp, #24]
   1554c:	ldr	ip, [sp, #28]
   15550:	str	lr, [sp]
   15554:	strh	r2, [sp, #14]
   15558:	add	r2, sp, #14
   1555c:	str	ip, [sp, #4]
   15560:	bl	14b48 <table_sorted_subset_find@@Base>
   15564:	add	sp, sp, #20
   15568:	pop	{pc}		; (ldr pc, [sp], #4)

0001556c <table_sorted_subset_find_uint16@@Base>:
   1556c:	push	{lr}		; (str lr, [sp, #-4]!)
   15570:	sub	sp, sp, #20
   15574:	ldr	lr, [sp, #24]
   15578:	ldr	ip, [sp, #28]
   1557c:	str	lr, [sp]
   15580:	strh	r2, [sp, #14]
   15584:	add	r2, sp, #14
   15588:	str	ip, [sp, #4]
   1558c:	bl	14b48 <table_sorted_subset_find@@Base>
   15590:	add	sp, sp, #20
   15594:	pop	{pc}		; (ldr pc, [sp], #4)

00015598 <table_sorted_subset_find_int32@@Base>:
   15598:	push	{lr}		; (str lr, [sp, #-4]!)
   1559c:	sub	sp, sp, #20
   155a0:	ldr	lr, [sp, #24]
   155a4:	ldr	ip, [sp, #28]
   155a8:	str	lr, [sp]
   155ac:	str	r2, [sp, #12]
   155b0:	add	r2, sp, #12
   155b4:	str	ip, [sp, #4]
   155b8:	bl	14b48 <table_sorted_subset_find@@Base>
   155bc:	add	sp, sp, #20
   155c0:	pop	{pc}		; (ldr pc, [sp], #4)

000155c4 <table_sorted_subset_find_uint32@@Base>:
   155c4:	push	{lr}		; (str lr, [sp, #-4]!)
   155c8:	sub	sp, sp, #20
   155cc:	ldr	lr, [sp, #24]
   155d0:	ldr	ip, [sp, #28]
   155d4:	str	lr, [sp]
   155d8:	str	r2, [sp, #12]
   155dc:	add	r2, sp, #12
   155e0:	str	ip, [sp, #4]
   155e4:	bl	14b48 <table_sorted_subset_find@@Base>
   155e8:	add	sp, sp, #20
   155ec:	pop	{pc}		; (ldr pc, [sp], #4)

000155f0 <table_sorted_subset_find_int64@@Base>:
   155f0:	push	{lr}		; (str lr, [sp, #-4]!)
   155f4:	sub	sp, sp, #20
   155f8:	ldr	lr, [sp, #28]
   155fc:	ldr	ip, [sp, #32]
   15600:	strd	r2, [sp, #8]
   15604:	add	r2, sp, #8
   15608:	ldr	r3, [sp, #24]
   1560c:	str	lr, [sp]
   15610:	str	ip, [sp, #4]
   15614:	bl	14b48 <table_sorted_subset_find@@Base>
   15618:	add	sp, sp, #20
   1561c:	pop	{pc}		; (ldr pc, [sp], #4)

00015620 <table_sorted_subset_find_uint64@@Base>:
   15620:	push	{lr}		; (str lr, [sp, #-4]!)
   15624:	sub	sp, sp, #20
   15628:	ldr	lr, [sp, #28]
   1562c:	ldr	ip, [sp, #32]
   15630:	strd	r2, [sp, #8]
   15634:	add	r2, sp, #8
   15638:	ldr	r3, [sp, #24]
   1563c:	str	lr, [sp]
   15640:	str	ip, [sp, #4]
   15644:	bl	14b48 <table_sorted_subset_find@@Base>
   15648:	add	sp, sp, #20
   1564c:	pop	{pc}		; (ldr pc, [sp], #4)

00015650 <table_sorted_subset_find_short@@Base>:
   15650:	push	{lr}		; (str lr, [sp, #-4]!)
   15654:	sub	sp, sp, #20
   15658:	ldr	lr, [sp, #24]
   1565c:	ldr	ip, [sp, #28]
   15660:	str	lr, [sp]
   15664:	strh	r2, [sp, #14]
   15668:	add	r2, sp, #14
   1566c:	str	ip, [sp, #4]
   15670:	bl	14b48 <table_sorted_subset_find@@Base>
   15674:	add	sp, sp, #20
   15678:	pop	{pc}		; (ldr pc, [sp], #4)

0001567c <table_sorted_subset_find_ushort@@Base>:
   1567c:	push	{lr}		; (str lr, [sp, #-4]!)
   15680:	sub	sp, sp, #20
   15684:	ldr	lr, [sp, #24]
   15688:	ldr	ip, [sp, #28]
   1568c:	str	lr, [sp]
   15690:	strh	r2, [sp, #14]
   15694:	add	r2, sp, #14
   15698:	str	ip, [sp, #4]
   1569c:	bl	14b48 <table_sorted_subset_find@@Base>
   156a0:	add	sp, sp, #20
   156a4:	pop	{pc}		; (ldr pc, [sp], #4)

000156a8 <table_sorted_subset_find_long@@Base>:
   156a8:	push	{lr}		; (str lr, [sp, #-4]!)
   156ac:	sub	sp, sp, #20
   156b0:	ldr	lr, [sp, #24]
   156b4:	ldr	ip, [sp, #28]
   156b8:	str	lr, [sp]
   156bc:	str	r2, [sp, #12]
   156c0:	add	r2, sp, #12
   156c4:	str	ip, [sp, #4]
   156c8:	bl	14b48 <table_sorted_subset_find@@Base>
   156cc:	add	sp, sp, #20
   156d0:	pop	{pc}		; (ldr pc, [sp], #4)

000156d4 <table_sorted_subset_find_ulong@@Base>:
   156d4:	push	{lr}		; (str lr, [sp, #-4]!)
   156d8:	sub	sp, sp, #20
   156dc:	ldr	lr, [sp, #24]
   156e0:	ldr	ip, [sp, #28]
   156e4:	str	lr, [sp]
   156e8:	str	r2, [sp, #12]
   156ec:	add	r2, sp, #12
   156f0:	str	ip, [sp, #4]
   156f4:	bl	14b48 <table_sorted_subset_find@@Base>
   156f8:	add	sp, sp, #20
   156fc:	pop	{pc}		; (ldr pc, [sp], #4)

00015700 <table_sorted_subset_find_llong@@Base>:
   15700:	push	{lr}		; (str lr, [sp, #-4]!)
   15704:	sub	sp, sp, #20
   15708:	ldr	lr, [sp, #28]
   1570c:	ldr	ip, [sp, #32]
   15710:	strd	r2, [sp, #8]
   15714:	add	r2, sp, #8
   15718:	ldr	r3, [sp, #24]
   1571c:	str	lr, [sp]
   15720:	str	ip, [sp, #4]
   15724:	bl	14b48 <table_sorted_subset_find@@Base>
   15728:	add	sp, sp, #20
   1572c:	pop	{pc}		; (ldr pc, [sp], #4)

00015730 <table_sorted_subset_find_ullong@@Base>:
   15730:	push	{lr}		; (str lr, [sp, #-4]!)
   15734:	sub	sp, sp, #20
   15738:	ldr	lr, [sp, #28]
   1573c:	ldr	ip, [sp, #32]
   15740:	strd	r2, [sp, #8]
   15744:	add	r2, sp, #8
   15748:	ldr	r3, [sp, #24]
   1574c:	str	lr, [sp]
   15750:	str	ip, [sp, #4]
   15754:	bl	14b48 <table_sorted_subset_find@@Base>
   15758:	add	sp, sp, #20
   1575c:	pop	{pc}		; (ldr pc, [sp], #4)

00015760 <table_sorted_subset_find_float@@Base>:
   15760:	push	{lr}		; (str lr, [sp, #-4]!)
   15764:	sub	sp, sp, #20
   15768:	ldr	ip, [sp, #24]
   1576c:	stm	sp, {r3, ip}
   15770:	mov	r3, r2
   15774:	add	r2, sp, #12
   15778:	vstr	s0, [sp, #12]
   1577c:	bl	14b48 <table_sorted_subset_find@@Base>
   15780:	add	sp, sp, #20
   15784:	pop	{pc}		; (ldr pc, [sp], #4)

00015788 <table_sorted_subset_find_double@@Base>:
   15788:	push	{lr}		; (str lr, [sp, #-4]!)
   1578c:	sub	sp, sp, #20
   15790:	ldr	ip, [sp, #24]
   15794:	stm	sp, {r3, ip}
   15798:	mov	r3, r2
   1579c:	add	r2, sp, #8
   157a0:	vstr	d0, [sp, #8]
   157a4:	bl	14b48 <table_sorted_subset_find@@Base>
   157a8:	add	sp, sp, #20
   157ac:	pop	{pc}		; (ldr pc, [sp], #4)

000157b0 <table_sorted_subset_find_ldouble@@Base>:
   157b0:	push	{lr}		; (str lr, [sp, #-4]!)
   157b4:	sub	sp, sp, #20
   157b8:	ldr	ip, [sp, #24]
   157bc:	stm	sp, {r3, ip}
   157c0:	mov	r3, r2
   157c4:	add	r2, sp, #8
   157c8:	vstr	d0, [sp, #8]
   157cc:	bl	14b48 <table_sorted_subset_find@@Base>
   157d0:	add	sp, sp, #20
   157d4:	pop	{pc}		; (ldr pc, [sp], #4)

000157d8 <table_sorted_subset_find_char@@Base>:
   157d8:	push	{lr}		; (str lr, [sp, #-4]!)
   157dc:	sub	sp, sp, #20
   157e0:	ldr	lr, [sp, #24]
   157e4:	ldr	ip, [sp, #28]
   157e8:	str	lr, [sp]
   157ec:	strb	r2, [sp, #15]
   157f0:	add	r2, sp, #15
   157f4:	str	ip, [sp, #4]
   157f8:	bl	14b48 <table_sorted_subset_find@@Base>
   157fc:	add	sp, sp, #20
   15800:	pop	{pc}		; (ldr pc, [sp], #4)

00015804 <table_sorted_subset_find_uchar@@Base>:
   15804:	push	{lr}		; (str lr, [sp, #-4]!)
   15808:	sub	sp, sp, #20
   1580c:	ldr	lr, [sp, #24]
   15810:	ldr	ip, [sp, #28]
   15814:	str	lr, [sp]
   15818:	strb	r2, [sp, #15]
   1581c:	add	r2, sp, #15
   15820:	str	ip, [sp, #4]
   15824:	bl	14b48 <table_sorted_subset_find@@Base>
   15828:	add	sp, sp, #20
   1582c:	pop	{pc}		; (ldr pc, [sp], #4)

00015830 <table_sorted_subset_find_string@@Base>:
   15830:	b	14b48 <table_sorted_subset_find@@Base>

00015834 <table_sorted_subset_find_ptr@@Base>:
   15834:	b	14b48 <table_sorted_subset_find@@Base>

00015838 <table_get@@Base>:
   15838:	str	r4, [sp, #-8]!
   1583c:	str	lr, [sp, #4]
   15840:	bl	17aec <table_get_cell_ptr@@Base>
   15844:	ldr	r4, [sp]
   15848:	add	sp, sp, #4
   1584c:	ldr	r0, [r0]
   15850:	pop	{pc}		; (ldr pc, [sp], #4)

00015854 <table_get_bool@@Base>:
   15854:	str	r4, [sp, #-8]!
   15858:	str	lr, [sp, #4]
   1585c:	bl	17aec <table_get_cell_ptr@@Base>
   15860:	ldr	r3, [r0]
   15864:	ldr	r4, [sp]
   15868:	add	sp, sp, #4
   1586c:	ldrb	r0, [r3]
   15870:	pop	{pc}		; (ldr pc, [sp], #4)

00015874 <table_get_int@@Base>:
   15874:	str	r4, [sp, #-8]!
   15878:	str	lr, [sp, #4]
   1587c:	bl	17aec <table_get_cell_ptr@@Base>
   15880:	ldr	r3, [r0]
   15884:	ldr	r4, [sp]
   15888:	add	sp, sp, #4
   1588c:	ldr	r0, [r3]
   15890:	pop	{pc}		; (ldr pc, [sp], #4)

00015894 <table_get_uint@@Base>:
   15894:	str	r4, [sp, #-8]!
   15898:	str	lr, [sp, #4]
   1589c:	bl	17aec <table_get_cell_ptr@@Base>
   158a0:	ldr	r3, [r0]
   158a4:	ldr	r4, [sp]
   158a8:	add	sp, sp, #4
   158ac:	ldr	r0, [r3]
   158b0:	pop	{pc}		; (ldr pc, [sp], #4)

000158b4 <table_get_int8@@Base>:
   158b4:	str	r4, [sp, #-8]!
   158b8:	str	lr, [sp, #4]
   158bc:	bl	17aec <table_get_cell_ptr@@Base>
   158c0:	ldr	r3, [r0]
   158c4:	ldr	r4, [sp]
   158c8:	add	sp, sp, #4
   158cc:	ldrsb	r0, [r3]
   158d0:	pop	{pc}		; (ldr pc, [sp], #4)

000158d4 <table_get_uint8@@Base>:
   158d4:	str	r4, [sp, #-8]!
   158d8:	str	lr, [sp, #4]
   158dc:	bl	17aec <table_get_cell_ptr@@Base>
   158e0:	ldr	r3, [r0]
   158e4:	ldr	r4, [sp]
   158e8:	add	sp, sp, #4
   158ec:	ldrb	r0, [r3]
   158f0:	pop	{pc}		; (ldr pc, [sp], #4)

000158f4 <table_get_int16@@Base>:
   158f4:	str	r4, [sp, #-8]!
   158f8:	str	lr, [sp, #4]
   158fc:	bl	17aec <table_get_cell_ptr@@Base>
   15900:	ldr	r3, [r0]
   15904:	ldr	r4, [sp]
   15908:	add	sp, sp, #4
   1590c:	ldrsh	r0, [r3]
   15910:	pop	{pc}		; (ldr pc, [sp], #4)

00015914 <table_get_uint16@@Base>:
   15914:	str	r4, [sp, #-8]!
   15918:	str	lr, [sp, #4]
   1591c:	bl	17aec <table_get_cell_ptr@@Base>
   15920:	ldr	r3, [r0]
   15924:	ldr	r4, [sp]
   15928:	add	sp, sp, #4
   1592c:	ldrh	r0, [r3]
   15930:	pop	{pc}		; (ldr pc, [sp], #4)

00015934 <table_get_int32@@Base>:
   15934:	str	r4, [sp, #-8]!
   15938:	str	lr, [sp, #4]
   1593c:	bl	17aec <table_get_cell_ptr@@Base>
   15940:	ldr	r3, [r0]
   15944:	ldr	r4, [sp]
   15948:	add	sp, sp, #4
   1594c:	ldr	r0, [r3]
   15950:	pop	{pc}		; (ldr pc, [sp], #4)

00015954 <table_get_uint32@@Base>:
   15954:	str	r4, [sp, #-8]!
   15958:	str	lr, [sp, #4]
   1595c:	bl	17aec <table_get_cell_ptr@@Base>
   15960:	ldr	r3, [r0]
   15964:	ldr	r4, [sp]
   15968:	add	sp, sp, #4
   1596c:	ldr	r0, [r3]
   15970:	pop	{pc}		; (ldr pc, [sp], #4)

00015974 <table_get_int64@@Base>:
   15974:	str	r4, [sp, #-8]!
   15978:	str	lr, [sp, #4]
   1597c:	bl	17aec <table_get_cell_ptr@@Base>
   15980:	ldr	r3, [r0]
   15984:	ldr	r4, [sp]
   15988:	add	sp, sp, #4
   1598c:	ldrd	r0, [r3]
   15990:	pop	{pc}		; (ldr pc, [sp], #4)

00015994 <table_get_uint64@@Base>:
   15994:	str	r4, [sp, #-8]!
   15998:	str	lr, [sp, #4]
   1599c:	bl	17aec <table_get_cell_ptr@@Base>
   159a0:	ldr	r3, [r0]
   159a4:	ldr	r4, [sp]
   159a8:	add	sp, sp, #4
   159ac:	ldrd	r0, [r3]
   159b0:	pop	{pc}		; (ldr pc, [sp], #4)

000159b4 <table_get_short@@Base>:
   159b4:	str	r4, [sp, #-8]!
   159b8:	str	lr, [sp, #4]
   159bc:	bl	17aec <table_get_cell_ptr@@Base>
   159c0:	ldr	r3, [r0]
   159c4:	ldr	r4, [sp]
   159c8:	add	sp, sp, #4
   159cc:	ldrsh	r0, [r3]
   159d0:	pop	{pc}		; (ldr pc, [sp], #4)

000159d4 <table_get_ushort@@Base>:
   159d4:	str	r4, [sp, #-8]!
   159d8:	str	lr, [sp, #4]
   159dc:	bl	17aec <table_get_cell_ptr@@Base>
   159e0:	ldr	r3, [r0]
   159e4:	ldr	r4, [sp]
   159e8:	add	sp, sp, #4
   159ec:	ldrh	r0, [r3]
   159f0:	pop	{pc}		; (ldr pc, [sp], #4)

000159f4 <table_get_long@@Base>:
   159f4:	str	r4, [sp, #-8]!
   159f8:	str	lr, [sp, #4]
   159fc:	bl	17aec <table_get_cell_ptr@@Base>
   15a00:	ldr	r3, [r0]
   15a04:	ldr	r4, [sp]
   15a08:	add	sp, sp, #4
   15a0c:	ldr	r0, [r3]
   15a10:	pop	{pc}		; (ldr pc, [sp], #4)

00015a14 <table_get_ulong@@Base>:
   15a14:	str	r4, [sp, #-8]!
   15a18:	str	lr, [sp, #4]
   15a1c:	bl	17aec <table_get_cell_ptr@@Base>
   15a20:	ldr	r3, [r0]
   15a24:	ldr	r4, [sp]
   15a28:	add	sp, sp, #4
   15a2c:	ldr	r0, [r3]
   15a30:	pop	{pc}		; (ldr pc, [sp], #4)

00015a34 <table_get_llong@@Base>:
   15a34:	str	r4, [sp, #-8]!
   15a38:	str	lr, [sp, #4]
   15a3c:	bl	17aec <table_get_cell_ptr@@Base>
   15a40:	ldr	r3, [r0]
   15a44:	ldr	r4, [sp]
   15a48:	add	sp, sp, #4
   15a4c:	ldrd	r0, [r3]
   15a50:	pop	{pc}		; (ldr pc, [sp], #4)

00015a54 <table_get_ullong@@Base>:
   15a54:	str	r4, [sp, #-8]!
   15a58:	str	lr, [sp, #4]
   15a5c:	bl	17aec <table_get_cell_ptr@@Base>
   15a60:	ldr	r3, [r0]
   15a64:	ldr	r4, [sp]
   15a68:	add	sp, sp, #4
   15a6c:	ldrd	r0, [r3]
   15a70:	pop	{pc}		; (ldr pc, [sp], #4)

00015a74 <table_get_float@@Base>:
   15a74:	str	r4, [sp, #-8]!
   15a78:	str	lr, [sp, #4]
   15a7c:	bl	17aec <table_get_cell_ptr@@Base>
   15a80:	ldr	r3, [r0]
   15a84:	ldr	r4, [sp]
   15a88:	add	sp, sp, #4
   15a8c:	vldr	s0, [r3]
   15a90:	pop	{pc}		; (ldr pc, [sp], #4)

00015a94 <table_get_double@@Base>:
   15a94:	str	r4, [sp, #-8]!
   15a98:	str	lr, [sp, #4]
   15a9c:	bl	17aec <table_get_cell_ptr@@Base>
   15aa0:	ldr	r3, [r0]
   15aa4:	ldr	r4, [sp]
   15aa8:	add	sp, sp, #4
   15aac:	vldr	d0, [r3]
   15ab0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ab4 <table_get_ldouble@@Base>:
   15ab4:	str	r4, [sp, #-8]!
   15ab8:	str	lr, [sp, #4]
   15abc:	bl	17aec <table_get_cell_ptr@@Base>
   15ac0:	ldr	r3, [r0]
   15ac4:	ldr	r4, [sp]
   15ac8:	add	sp, sp, #4
   15acc:	vldr	d0, [r3]
   15ad0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ad4 <table_get_char@@Base>:
   15ad4:	str	r4, [sp, #-8]!
   15ad8:	str	lr, [sp, #4]
   15adc:	bl	17aec <table_get_cell_ptr@@Base>
   15ae0:	ldr	r3, [r0]
   15ae4:	ldr	r4, [sp]
   15ae8:	add	sp, sp, #4
   15aec:	ldrb	r0, [r3]
   15af0:	pop	{pc}		; (ldr pc, [sp], #4)

00015af4 <table_get_uchar@@Base>:
   15af4:	str	r4, [sp, #-8]!
   15af8:	str	lr, [sp, #4]
   15afc:	bl	17aec <table_get_cell_ptr@@Base>
   15b00:	ldr	r3, [r0]
   15b04:	ldr	r4, [sp]
   15b08:	add	sp, sp, #4
   15b0c:	ldrb	r0, [r3]
   15b10:	pop	{pc}		; (ldr pc, [sp], #4)

00015b14 <table_get_string@@Base>:
   15b14:	str	r4, [sp, #-8]!
   15b18:	str	lr, [sp, #4]
   15b1c:	bl	17aec <table_get_cell_ptr@@Base>
   15b20:	ldr	r4, [sp]
   15b24:	add	sp, sp, #4
   15b28:	ldr	r0, [r0]
   15b2c:	pop	{pc}		; (ldr pc, [sp], #4)

00015b30 <table_get_ptr@@Base>:
   15b30:	str	r4, [sp, #-8]!
   15b34:	str	lr, [sp, #4]
   15b38:	bl	17aec <table_get_cell_ptr@@Base>
   15b3c:	ldr	r4, [sp]
   15b40:	add	sp, sp, #4
   15b44:	ldr	r0, [r0]
   15b48:	pop	{pc}		; (ldr pc, [sp], #4)

00015b4c <table_row_init@@Base>:
   15b4c:	ldr	r3, [r0, #12]
   15b50:	strd	r4, [sp, #-16]!
   15b54:	mov	r5, r1
   15b58:	ldr	r4, [r0, #16]
   15b5c:	str	r6, [sp, #8]
   15b60:	str	lr, [sp, #12]
   15b64:	lsl	r0, r3, #2
   15b68:	bl	1293c <malloc@plt>
   15b6c:	str	r0, [r4, r5, lsl #2]
   15b70:	ldrd	r4, [sp]
   15b74:	ldr	r6, [sp, #8]
   15b78:	add	sp, sp, #12
   15b7c:	pop	{pc}		; (ldr pc, [sp], #4)

00015b80 <table_row_destroy@@Base>:
   15b80:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b84:	mov	r5, r1
   15b88:	strd	r6, [sp, #8]
   15b8c:	mov	r6, r0
   15b90:	str	r8, [sp, #16]
   15b94:	str	lr, [sp, #20]
   15b98:	bl	13784 <table_get_column_length@@Base>
   15b9c:	subs	r7, r0, #0
   15ba0:	ldr	r8, [r6, #16]
   15ba4:	ble	15bc8 <table_row_destroy@@Base+0x48>
   15ba8:	mov	r4, #0
   15bac:	mov	r2, r4
   15bb0:	mov	r1, r5
   15bb4:	add	r4, r4, #1
   15bb8:	mov	r0, r6
   15bbc:	bl	17030 <table_cell_destroy@@Base>
   15bc0:	cmp	r7, r4
   15bc4:	bne	15bac <table_row_destroy@@Base+0x2c>
   15bc8:	ldr	r0, [r8, r5, lsl #2]
   15bcc:	cmp	r0, #0
   15bd0:	beq	15bec <table_row_destroy@@Base+0x6c>
   15bd4:	ldrd	r4, [sp]
   15bd8:	ldrd	r6, [sp, #8]
   15bdc:	ldr	r8, [sp, #16]
   15be0:	ldr	lr, [sp, #20]
   15be4:	add	sp, sp, #24
   15be8:	b	12918 <free@plt>
   15bec:	ldrd	r4, [sp]
   15bf0:	ldrd	r6, [sp, #8]
   15bf4:	ldr	r8, [sp, #16]
   15bf8:	add	sp, sp, #20
   15bfc:	pop	{pc}		; (ldr pc, [sp], #4)

00015c00 <table_get_row_length@@Base>:
   15c00:	ldr	r0, [r0, #20]
   15c04:	bx	lr

00015c08 <table_add_row@@Base>:
   15c08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15c0c:	mov	r4, r0
   15c10:	ldr	r5, [r0, #20]
   15c14:	ldr	r3, [r0, #24]
   15c18:	strd	r6, [sp, #8]
   15c1c:	str	r8, [sp, #16]
   15c20:	str	lr, [sp, #20]
   15c24:	udiv	r2, r5, r3
   15c28:	mls	r2, r3, r2, r5
   15c2c:	cmp	r2, #0
   15c30:	beq	15cb0 <table_add_row@@Base+0xa8>
   15c34:	mov	r0, r4
   15c38:	bl	13784 <table_get_column_length@@Base>
   15c3c:	mov	r7, r0
   15c40:	ldr	r0, [r4, #12]
   15c44:	ldr	r6, [r4, #16]
   15c48:	lsl	r0, r0, #2
   15c4c:	bl	1293c <malloc@plt>
   15c50:	cmp	r7, #0
   15c54:	str	r0, [r6, r5, lsl #2]
   15c58:	ble	15c7c <table_add_row@@Base+0x74>
   15c5c:	mov	r6, #0
   15c60:	mov	r2, r6
   15c64:	mov	r1, r5
   15c68:	add	r6, r6, #1
   15c6c:	mov	r0, r4
   15c70:	bl	17008 <table_cell_init@@Base>
   15c74:	cmp	r7, r6
   15c78:	bne	15c60 <table_add_row@@Base+0x58>
   15c7c:	mov	r0, r4
   15c80:	mov	r3, #2
   15c84:	ldr	r1, [r4, #20]
   15c88:	mvn	r2, #0
   15c8c:	bl	1364c <table_notify@@Base>
   15c90:	ldr	r0, [r4, #20]
   15c94:	ldrd	r6, [sp, #8]
   15c98:	ldr	r8, [sp, #16]
   15c9c:	add	r3, r0, #1
   15ca0:	str	r3, [r4, #20]
   15ca4:	ldrd	r4, [sp]
   15ca8:	add	sp, sp, #20
   15cac:	pop	{pc}		; (ldr pc, [sp], #4)
   15cb0:	ldr	r2, [r4, #28]
   15cb4:	ldr	r0, [r0, #16]
   15cb8:	add	r3, r3, r2
   15cbc:	lsl	r1, r3, #2
   15cc0:	str	r3, [r4, #28]
   15cc4:	bl	12924 <realloc@plt>
   15cc8:	str	r0, [r4, #16]
   15ccc:	ldr	r5, [r4, #20]
   15cd0:	b	15c34 <table_add_row@@Base+0x2c>

00015cd4 <table_remove_row@@Base>:
   15cd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15cd8:	mov	r4, r0
   15cdc:	mov	r5, r1
   15ce0:	strd	r6, [sp, #8]
   15ce4:	str	r8, [sp, #16]
   15ce8:	str	lr, [sp, #20]
   15cec:	ldr	r7, [r0, #20]
   15cf0:	bl	13784 <table_get_column_length@@Base>
   15cf4:	subs	r8, r0, #0
   15cf8:	ble	15d40 <table_remove_row@@Base+0x6c>
   15cfc:	mov	r6, #0
   15d00:	mov	r1, r6
   15d04:	mov	r0, r4
   15d08:	bl	13808 <table_get_column_data_type@@Base>
   15d0c:	cmp	r0, #23
   15d10:	mov	r2, r6
   15d14:	mov	r1, r5
   15d18:	add	r6, r6, #1
   15d1c:	mov	r0, r4
   15d20:	beq	15d38 <table_remove_row@@Base+0x64>
   15d24:	bl	17aec <table_get_cell_ptr@@Base>
   15d28:	ldr	r3, [r0]
   15d2c:	subs	r0, r3, #0
   15d30:	beq	15d38 <table_remove_row@@Base+0x64>
   15d34:	bl	12918 <free@plt>
   15d38:	cmp	r8, r6
   15d3c:	bne	15d00 <table_remove_row@@Base+0x2c>
   15d40:	ldr	r3, [r4, #16]
   15d44:	lsl	r6, r5, #2
   15d48:	ldr	r0, [r3, r5, lsl #2]
   15d4c:	cmp	r0, #0
   15d50:	beq	15d58 <table_remove_row@@Base+0x84>
   15d54:	bl	12918 <free@plt>
   15d58:	sub	r3, r7, #1
   15d5c:	cmp	r5, r3
   15d60:	bge	15d88 <table_remove_row@@Base+0xb4>
   15d64:	mov	r2, r5
   15d68:	ldr	r1, [r4, #16]
   15d6c:	add	r2, r2, #1
   15d70:	cmp	r2, r3
   15d74:	add	r0, r1, r6
   15d78:	add	r6, r6, #4
   15d7c:	ldr	r1, [r1, r6]
   15d80:	str	r1, [r0]
   15d84:	bne	15d68 <table_remove_row@@Base+0x94>
   15d88:	ldr	r3, [r4, #20]
   15d8c:	ldr	r1, [r4, #24]
   15d90:	sub	r3, r3, #1
   15d94:	udiv	r2, r3, r1
   15d98:	str	r3, [r4, #20]
   15d9c:	mls	r3, r1, r2, r3
   15da0:	cmp	r3, #0
   15da4:	beq	15dd4 <table_remove_row@@Base+0x100>
   15da8:	mov	r0, r4
   15dac:	mov	r1, r5
   15db0:	mov	r3, #4
   15db4:	mvn	r2, #0
   15db8:	bl	1364c <table_notify@@Base>
   15dbc:	ldrd	r4, [sp]
   15dc0:	mov	r0, #0
   15dc4:	ldrd	r6, [sp, #8]
   15dc8:	ldr	r8, [sp, #16]
   15dcc:	add	sp, sp, #20
   15dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   15dd4:	ldr	r0, [r4, #16]
   15dd8:	ldr	r3, [r4, #28]
   15ddc:	sub	r3, r3, r1
   15de0:	lsl	r1, r3, #2
   15de4:	str	r3, [r4, #28]
   15de8:	bl	12924 <realloc@plt>
   15dec:	str	r0, [r4, #16]
   15df0:	b	15da8 <table_remove_row@@Base+0xd4>

00015df4 <table_get_row_ptr@@Base>:
   15df4:	ldr	r0, [r0, #16]
   15df8:	add	r0, r0, r1, lsl #2
   15dfc:	bx	lr

00015e00 <table_set_row_ptr@@Base>:
   15e00:	ldr	r2, [r2]
   15e04:	ldr	r3, [r0, #16]
   15e08:	str	r2, [r3, r1, lsl #2]
   15e0c:	bx	lr

00015e10 <table_set@@Base>:
   15e10:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15e14:	mov	r5, r0
   15e18:	ldr	r4, [sp, #32]
   15e1c:	strd	r6, [sp, #8]
   15e20:	mov	r6, r2
   15e24:	mov	r7, r3
   15e28:	strd	r8, [sp, #16]
   15e2c:	mov	r9, r1
   15e30:	str	sl, [sp, #24]
   15e34:	str	lr, [sp, #28]
   15e38:	bl	17aec <table_get_cell_ptr@@Base>
   15e3c:	mov	r8, r0
   15e40:	mov	r1, r6
   15e44:	mov	r0, r5
   15e48:	bl	13b30 <table_get_col_ptr@@Base>
   15e4c:	cmp	r4, #23
   15e50:	ldrls	pc, [pc, r4, lsl #2]
   15e54:	b	15ec4 <table_set@@Base+0xb4>
   15e58:	andeq	r6, r1, ip, ror r0
   15e5c:	andeq	r6, r1, ip, rrx
   15e60:	andeq	r6, r1, ip, asr r0
   15e64:	andeq	r6, r1, ip, asr #32
   15e68:	andeq	r6, r1, ip, lsr r0
   15e6c:	andeq	r6, r1, r8, lsl r0
   15e70:	andeq	r6, r1, r8
   15e74:	strdeq	r5, [r1], -r8
   15e78:	strheq	r6, [r1], -ip
   15e7c:	andeq	r6, r1, ip, lsr #1
   15e80:	muleq	r1, ip, r0
   15e84:	andeq	r6, r1, ip, lsl #1
   15e88:	strdeq	r6, [r1], -r8
   15e8c:	andeq	r6, r1, r8, ror #1
   15e90:			; <UNDEFINED> instruction: 0x00015eb8
   15e94:	andeq	r5, r1, r8, ror #31
   15e98:	andeq	r5, r1, r4, asr #31
   15e9c:			; <UNDEFINED> instruction: 0x00015fb4
   15ea0:	andeq	r5, r1, r8, lsl #31
   15ea4:	andeq	r5, r1, r8, ror pc
   15ea8:	andeq	r5, r1, r8, ror #30
   15eac:	andeq	r5, r1, r0, lsr pc
   15eb0:	andeq	r5, r1, ip, lsl #30
   15eb4:	andeq	r5, r1, r0, ror #29
   15eb8:	ldr	r3, [r0, #4]
   15ebc:	cmp	r3, #14
   15ec0:	beq	15f94 <table_set@@Base+0x184>
   15ec4:	mvn	r0, #0
   15ec8:	ldrd	r4, [sp]
   15ecc:	ldrd	r6, [sp, #8]
   15ed0:	ldrd	r8, [sp, #16]
   15ed4:	ldr	sl, [sp, #24]
   15ed8:	add	sp, sp, #28
   15edc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ee0:	ldr	r3, [r0, #4]
   15ee4:	cmp	r3, #23
   15ee8:	bne	15ec4 <table_set@@Base+0xb4>
   15eec:	str	r7, [r8]
   15ef0:	mov	r0, r5
   15ef4:	mov	r2, r6
   15ef8:	mov	r1, r9
   15efc:	mov	r3, #1
   15f00:	bl	1364c <table_notify@@Base>
   15f04:	mov	r0, #0
   15f08:	b	15ec8 <table_set@@Base+0xb8>
   15f0c:	ldr	r3, [r0, #4]
   15f10:	cmp	r3, #22
   15f14:	bne	15ec4 <table_set@@Base+0xb4>
   15f18:	ldr	r0, [r8]
   15f1c:	cmp	r0, #0
   15f20:	beq	16138 <table_set@@Base+0x328>
   15f24:	ldrb	r3, [r7]
   15f28:	strb	r3, [r0]
   15f2c:	b	15ef0 <table_set@@Base+0xe0>
   15f30:	ldr	r3, [r0, #4]
   15f34:	cmp	r3, #21
   15f38:	bne	15ec4 <table_set@@Base+0xb4>
   15f3c:	mov	r0, r7
   15f40:	bl	12960 <strlen@plt>
   15f44:	add	r1, r0, #1
   15f48:	ldr	r0, [r8]
   15f4c:	bl	12924 <realloc@plt>
   15f50:	cmp	r0, #0
   15f54:	str	r0, [r8]
   15f58:	beq	15ec4 <table_set@@Base+0xb4>
   15f5c:	mov	r1, r7
   15f60:	bl	12930 <strcpy@plt>
   15f64:	b	15ef0 <table_set@@Base+0xe0>
   15f68:	ldr	r3, [r0, #4]
   15f6c:	cmp	r3, #20
   15f70:	bne	15ec4 <table_set@@Base+0xb4>
   15f74:	b	15f18 <table_set@@Base+0x108>
   15f78:	ldr	r3, [r0, #4]
   15f7c:	cmp	r3, #19
   15f80:	bne	15ec4 <table_set@@Base+0xb4>
   15f84:	b	15f18 <table_set@@Base+0x108>
   15f88:	ldr	r3, [r0, #4]
   15f8c:	cmp	r3, #18
   15f90:	bne	15ec4 <table_set@@Base+0xb4>
   15f94:	ldr	r0, [r8]
   15f98:	cmp	r0, #0
   15f9c:	beq	16150 <table_set@@Base+0x340>
   15fa0:	ldr	r2, [r7]
   15fa4:	ldr	r3, [r7, #4]
   15fa8:	str	r2, [r0]
   15fac:	str	r3, [r0, #4]
   15fb0:	b	15ef0 <table_set@@Base+0xe0>
   15fb4:	ldr	r3, [r0, #4]
   15fb8:	cmp	r3, #17
   15fbc:	bne	15ec4 <table_set@@Base+0xb4>
   15fc0:	b	15f94 <table_set@@Base+0x184>
   15fc4:	ldr	r3, [r0, #4]
   15fc8:	cmp	r3, #16
   15fcc:	bne	15ec4 <table_set@@Base+0xb4>
   15fd0:	ldr	r0, [r8]
   15fd4:	cmp	r0, #0
   15fd8:	beq	16108 <table_set@@Base+0x2f8>
   15fdc:	ldr	r3, [r7]
   15fe0:	str	r3, [r0]
   15fe4:	b	15ef0 <table_set@@Base+0xe0>
   15fe8:	ldr	r3, [r0, #4]
   15fec:	cmp	r3, #15
   15ff0:	bne	15ec4 <table_set@@Base+0xb4>
   15ff4:	b	15f94 <table_set@@Base+0x184>
   15ff8:	ldr	r3, [r0, #4]
   15ffc:	cmp	r3, #7
   16000:	beq	15fd0 <table_set@@Base+0x1c0>
   16004:	b	15ec4 <table_set@@Base+0xb4>
   16008:	ldr	r3, [r0, #4]
   1600c:	cmp	r3, #6
   16010:	beq	15fd0 <table_set@@Base+0x1c0>
   16014:	b	15ec4 <table_set@@Base+0xb4>
   16018:	ldr	r3, [r0, #4]
   1601c:	cmp	r3, #5
   16020:	bne	15ec4 <table_set@@Base+0xb4>
   16024:	ldr	r0, [r8]
   16028:	cmp	r0, #0
   1602c:	beq	16120 <table_set@@Base+0x310>
   16030:	ldrh	r3, [r7]
   16034:	strh	r3, [r0]
   16038:	b	15ef0 <table_set@@Base+0xe0>
   1603c:	ldr	r3, [r0, #4]
   16040:	cmp	r3, #4
   16044:	beq	16024 <table_set@@Base+0x214>
   16048:	b	15ec4 <table_set@@Base+0xb4>
   1604c:	ldr	r3, [r0, #4]
   16050:	cmp	r3, #3
   16054:	beq	15f18 <table_set@@Base+0x108>
   16058:	b	15ec4 <table_set@@Base+0xb4>
   1605c:	ldr	r3, [r0, #4]
   16060:	cmp	r3, #2
   16064:	beq	15f18 <table_set@@Base+0x108>
   16068:	b	15ec4 <table_set@@Base+0xb4>
   1606c:	ldr	r3, [r0, #4]
   16070:	cmp	r3, #1
   16074:	beq	15fd0 <table_set@@Base+0x1c0>
   16078:	b	15ec4 <table_set@@Base+0xb4>
   1607c:	ldr	r3, [r0, #4]
   16080:	cmp	r3, #0
   16084:	beq	15fd0 <table_set@@Base+0x1c0>
   16088:	b	15ec4 <table_set@@Base+0xb4>
   1608c:	ldr	r3, [r0, #4]
   16090:	cmp	r3, #11
   16094:	beq	16024 <table_set@@Base+0x214>
   16098:	b	15ec4 <table_set@@Base+0xb4>
   1609c:	ldr	r3, [r0, #4]
   160a0:	cmp	r3, #10
   160a4:	beq	16024 <table_set@@Base+0x214>
   160a8:	b	15ec4 <table_set@@Base+0xb4>
   160ac:	ldr	r3, [r0, #4]
   160b0:	cmp	r3, #9
   160b4:	beq	15f94 <table_set@@Base+0x184>
   160b8:	b	15ec4 <table_set@@Base+0xb4>
   160bc:	ldr	r0, [r0, #4]
   160c0:	cmp	r0, #8
   160c4:	bne	15ec4 <table_set@@Base+0xb4>
   160c8:	ldr	r3, [r8]
   160cc:	cmp	r3, #0
   160d0:	beq	16168 <table_set@@Base+0x358>
   160d4:	ldr	r1, [r7]
   160d8:	ldr	r2, [r7, #4]
   160dc:	str	r1, [r3]
   160e0:	str	r2, [r3, #4]
   160e4:	b	15ef0 <table_set@@Base+0xe0>
   160e8:	ldr	r3, [r0, #4]
   160ec:	cmp	r3, #13
   160f0:	bne	15ec4 <table_set@@Base+0xb4>
   160f4:	b	15fd0 <table_set@@Base+0x1c0>
   160f8:	ldr	r3, [r0, #4]
   160fc:	cmp	r3, #12
   16100:	bne	15ec4 <table_set@@Base+0xb4>
   16104:	b	15fd0 <table_set@@Base+0x1c0>
   16108:	mov	r0, #4
   1610c:	bl	1293c <malloc@plt>
   16110:	cmp	r0, #0
   16114:	str	r0, [r8]
   16118:	bne	15fdc <table_set@@Base+0x1cc>
   1611c:	b	15ec4 <table_set@@Base+0xb4>
   16120:	mov	r0, #2
   16124:	bl	1293c <malloc@plt>
   16128:	cmp	r0, #0
   1612c:	str	r0, [r8]
   16130:	bne	16030 <table_set@@Base+0x220>
   16134:	b	15ec4 <table_set@@Base+0xb4>
   16138:	mov	r0, #1
   1613c:	bl	1293c <malloc@plt>
   16140:	cmp	r0, #0
   16144:	str	r0, [r8]
   16148:	bne	15f24 <table_set@@Base+0x114>
   1614c:	b	15ec4 <table_set@@Base+0xb4>
   16150:	mov	r0, #8
   16154:	bl	1293c <malloc@plt>
   16158:	cmp	r0, #0
   1615c:	str	r0, [r8]
   16160:	bne	15fa0 <table_set@@Base+0x190>
   16164:	b	15ec4 <table_set@@Base+0xb4>
   16168:	bl	1293c <malloc@plt>
   1616c:	cmp	r0, #0
   16170:	mov	r3, r0
   16174:	str	r0, [r8]
   16178:	bne	160d4 <table_set@@Base+0x2c4>
   1617c:	b	15ec4 <table_set@@Base+0xb4>

00016180 <table_set_bool@@Base>:
   16180:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16184:	mov	r5, r2
   16188:	mov	r4, r0
   1618c:	strd	r6, [sp, #8]
   16190:	mov	r7, r3
   16194:	str	r8, [sp, #16]
   16198:	mov	r8, r1
   1619c:	str	lr, [sp, #20]
   161a0:	bl	17aec <table_get_cell_ptr@@Base>
   161a4:	mov	r6, r0
   161a8:	mov	r1, r5
   161ac:	mov	r0, r4
   161b0:	bl	13b30 <table_get_col_ptr@@Base>
   161b4:	ldr	r2, [r0, #4]
   161b8:	cmp	r2, #22
   161bc:	bne	16210 <table_set_bool@@Base+0x90>
   161c0:	ldr	r0, [r6]
   161c4:	cmp	r0, #0
   161c8:	beq	161fc <table_set_bool@@Base+0x7c>
   161cc:	mov	r2, r5
   161d0:	mov	r1, r8
   161d4:	strb	r7, [r0]
   161d8:	mov	r3, #1
   161dc:	mov	r0, r4
   161e0:	bl	1364c <table_notify@@Base>
   161e4:	mov	r0, #0
   161e8:	ldrd	r4, [sp]
   161ec:	ldrd	r6, [sp, #8]
   161f0:	ldr	r8, [sp, #16]
   161f4:	add	sp, sp, #20
   161f8:	pop	{pc}		; (ldr pc, [sp], #4)
   161fc:	mov	r0, #1
   16200:	bl	1293c <malloc@plt>
   16204:	cmp	r0, #0
   16208:	str	r0, [r6]
   1620c:	bne	161cc <table_set_bool@@Base+0x4c>
   16210:	mvn	r0, #0
   16214:	b	161e8 <table_set_bool@@Base+0x68>

00016218 <table_set_int@@Base>:
   16218:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1621c:	mov	r5, r2
   16220:	mov	r4, r0
   16224:	strd	r6, [sp, #8]
   16228:	mov	r7, r3
   1622c:	str	r8, [sp, #16]
   16230:	mov	r8, r1
   16234:	str	lr, [sp, #20]
   16238:	bl	17aec <table_get_cell_ptr@@Base>
   1623c:	mov	r6, r0
   16240:	mov	r1, r5
   16244:	mov	r0, r4
   16248:	bl	13b30 <table_get_col_ptr@@Base>
   1624c:	ldr	r2, [r0, #4]
   16250:	cmp	r2, #0
   16254:	bne	162a8 <table_set_int@@Base+0x90>
   16258:	ldr	r0, [r6]
   1625c:	cmp	r0, #0
   16260:	beq	16294 <table_set_int@@Base+0x7c>
   16264:	mov	r2, r5
   16268:	mov	r1, r8
   1626c:	str	r7, [r0]
   16270:	mov	r3, #1
   16274:	mov	r0, r4
   16278:	bl	1364c <table_notify@@Base>
   1627c:	mov	r0, #0
   16280:	ldrd	r4, [sp]
   16284:	ldrd	r6, [sp, #8]
   16288:	ldr	r8, [sp, #16]
   1628c:	add	sp, sp, #20
   16290:	pop	{pc}		; (ldr pc, [sp], #4)
   16294:	mov	r0, #4
   16298:	bl	1293c <malloc@plt>
   1629c:	cmp	r0, #0
   162a0:	str	r0, [r6]
   162a4:	bne	16264 <table_set_int@@Base+0x4c>
   162a8:	mvn	r0, #0
   162ac:	b	16280 <table_set_int@@Base+0x68>

000162b0 <table_set_uint@@Base>:
   162b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   162b4:	mov	r5, r2
   162b8:	mov	r4, r0
   162bc:	strd	r6, [sp, #8]
   162c0:	mov	r7, r3
   162c4:	str	r8, [sp, #16]
   162c8:	mov	r8, r1
   162cc:	str	lr, [sp, #20]
   162d0:	bl	17aec <table_get_cell_ptr@@Base>
   162d4:	mov	r6, r0
   162d8:	mov	r1, r5
   162dc:	mov	r0, r4
   162e0:	bl	13b30 <table_get_col_ptr@@Base>
   162e4:	ldr	r2, [r0, #4]
   162e8:	cmp	r2, #1
   162ec:	bne	16340 <table_set_uint@@Base+0x90>
   162f0:	ldr	r0, [r6]
   162f4:	cmp	r0, #0
   162f8:	beq	1632c <table_set_uint@@Base+0x7c>
   162fc:	mov	r2, r5
   16300:	mov	r1, r8
   16304:	str	r7, [r0]
   16308:	mov	r3, #1
   1630c:	mov	r0, r4
   16310:	bl	1364c <table_notify@@Base>
   16314:	mov	r0, #0
   16318:	ldrd	r4, [sp]
   1631c:	ldrd	r6, [sp, #8]
   16320:	ldr	r8, [sp, #16]
   16324:	add	sp, sp, #20
   16328:	pop	{pc}		; (ldr pc, [sp], #4)
   1632c:	mov	r0, #4
   16330:	bl	1293c <malloc@plt>
   16334:	cmp	r0, #0
   16338:	str	r0, [r6]
   1633c:	bne	162fc <table_set_uint@@Base+0x4c>
   16340:	mvn	r0, #0
   16344:	b	16318 <table_set_uint@@Base+0x68>

00016348 <table_set_int8@@Base>:
   16348:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1634c:	mov	r5, r2
   16350:	mov	r4, r0
   16354:	strd	r6, [sp, #8]
   16358:	mov	r7, r3
   1635c:	str	r8, [sp, #16]
   16360:	mov	r8, r1
   16364:	str	lr, [sp, #20]
   16368:	bl	17aec <table_get_cell_ptr@@Base>
   1636c:	mov	r6, r0
   16370:	mov	r1, r5
   16374:	mov	r0, r4
   16378:	bl	13b30 <table_get_col_ptr@@Base>
   1637c:	ldr	r2, [r0, #4]
   16380:	cmp	r2, #2
   16384:	bne	163d8 <table_set_int8@@Base+0x90>
   16388:	ldr	r0, [r6]
   1638c:	cmp	r0, #0
   16390:	beq	163c4 <table_set_int8@@Base+0x7c>
   16394:	mov	r2, r5
   16398:	mov	r1, r8
   1639c:	strb	r7, [r0]
   163a0:	mov	r3, #1
   163a4:	mov	r0, r4
   163a8:	bl	1364c <table_notify@@Base>
   163ac:	mov	r0, #0
   163b0:	ldrd	r4, [sp]
   163b4:	ldrd	r6, [sp, #8]
   163b8:	ldr	r8, [sp, #16]
   163bc:	add	sp, sp, #20
   163c0:	pop	{pc}		; (ldr pc, [sp], #4)
   163c4:	mov	r0, #1
   163c8:	bl	1293c <malloc@plt>
   163cc:	cmp	r0, #0
   163d0:	str	r0, [r6]
   163d4:	bne	16394 <table_set_int8@@Base+0x4c>
   163d8:	mvn	r0, #0
   163dc:	b	163b0 <table_set_int8@@Base+0x68>

000163e0 <table_set_uint8@@Base>:
   163e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   163e4:	mov	r5, r2
   163e8:	mov	r4, r0
   163ec:	strd	r6, [sp, #8]
   163f0:	mov	r7, r3
   163f4:	str	r8, [sp, #16]
   163f8:	mov	r8, r1
   163fc:	str	lr, [sp, #20]
   16400:	bl	17aec <table_get_cell_ptr@@Base>
   16404:	mov	r6, r0
   16408:	mov	r1, r5
   1640c:	mov	r0, r4
   16410:	bl	13b30 <table_get_col_ptr@@Base>
   16414:	ldr	r2, [r0, #4]
   16418:	cmp	r2, #3
   1641c:	bne	16470 <table_set_uint8@@Base+0x90>
   16420:	ldr	r0, [r6]
   16424:	cmp	r0, #0
   16428:	beq	1645c <table_set_uint8@@Base+0x7c>
   1642c:	mov	r2, r5
   16430:	mov	r1, r8
   16434:	strb	r7, [r0]
   16438:	mov	r3, #1
   1643c:	mov	r0, r4
   16440:	bl	1364c <table_notify@@Base>
   16444:	mov	r0, #0
   16448:	ldrd	r4, [sp]
   1644c:	ldrd	r6, [sp, #8]
   16450:	ldr	r8, [sp, #16]
   16454:	add	sp, sp, #20
   16458:	pop	{pc}		; (ldr pc, [sp], #4)
   1645c:	mov	r0, #1
   16460:	bl	1293c <malloc@plt>
   16464:	cmp	r0, #0
   16468:	str	r0, [r6]
   1646c:	bne	1642c <table_set_uint8@@Base+0x4c>
   16470:	mvn	r0, #0
   16474:	b	16448 <table_set_uint8@@Base+0x68>

00016478 <table_set_int16@@Base>:
   16478:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1647c:	mov	r5, r2
   16480:	mov	r4, r0
   16484:	strd	r6, [sp, #8]
   16488:	mov	r7, r3
   1648c:	str	r8, [sp, #16]
   16490:	mov	r8, r1
   16494:	str	lr, [sp, #20]
   16498:	bl	17aec <table_get_cell_ptr@@Base>
   1649c:	mov	r6, r0
   164a0:	mov	r1, r5
   164a4:	mov	r0, r4
   164a8:	bl	13b30 <table_get_col_ptr@@Base>
   164ac:	ldr	r2, [r0, #4]
   164b0:	cmp	r2, #4
   164b4:	bne	16508 <table_set_int16@@Base+0x90>
   164b8:	ldr	r0, [r6]
   164bc:	cmp	r0, #0
   164c0:	beq	164f4 <table_set_int16@@Base+0x7c>
   164c4:	mov	r2, r5
   164c8:	mov	r1, r8
   164cc:	strh	r7, [r0]
   164d0:	mov	r3, #1
   164d4:	mov	r0, r4
   164d8:	bl	1364c <table_notify@@Base>
   164dc:	mov	r0, #0
   164e0:	ldrd	r4, [sp]
   164e4:	ldrd	r6, [sp, #8]
   164e8:	ldr	r8, [sp, #16]
   164ec:	add	sp, sp, #20
   164f0:	pop	{pc}		; (ldr pc, [sp], #4)
   164f4:	mov	r0, #2
   164f8:	bl	1293c <malloc@plt>
   164fc:	cmp	r0, #0
   16500:	str	r0, [r6]
   16504:	bne	164c4 <table_set_int16@@Base+0x4c>
   16508:	mvn	r0, #0
   1650c:	b	164e0 <table_set_int16@@Base+0x68>

00016510 <table_set_uint16@@Base>:
   16510:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16514:	mov	r5, r2
   16518:	mov	r4, r0
   1651c:	strd	r6, [sp, #8]
   16520:	mov	r7, r3
   16524:	str	r8, [sp, #16]
   16528:	mov	r8, r1
   1652c:	str	lr, [sp, #20]
   16530:	bl	17aec <table_get_cell_ptr@@Base>
   16534:	mov	r6, r0
   16538:	mov	r1, r5
   1653c:	mov	r0, r4
   16540:	bl	13b30 <table_get_col_ptr@@Base>
   16544:	ldr	r2, [r0, #4]
   16548:	cmp	r2, #5
   1654c:	bne	165a0 <table_set_uint16@@Base+0x90>
   16550:	ldr	r0, [r6]
   16554:	cmp	r0, #0
   16558:	beq	1658c <table_set_uint16@@Base+0x7c>
   1655c:	mov	r2, r5
   16560:	mov	r1, r8
   16564:	strh	r7, [r0]
   16568:	mov	r3, #1
   1656c:	mov	r0, r4
   16570:	bl	1364c <table_notify@@Base>
   16574:	mov	r0, #0
   16578:	ldrd	r4, [sp]
   1657c:	ldrd	r6, [sp, #8]
   16580:	ldr	r8, [sp, #16]
   16584:	add	sp, sp, #20
   16588:	pop	{pc}		; (ldr pc, [sp], #4)
   1658c:	mov	r0, #2
   16590:	bl	1293c <malloc@plt>
   16594:	cmp	r0, #0
   16598:	str	r0, [r6]
   1659c:	bne	1655c <table_set_uint16@@Base+0x4c>
   165a0:	mvn	r0, #0
   165a4:	b	16578 <table_set_uint16@@Base+0x68>

000165a8 <table_set_int32@@Base>:
   165a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   165ac:	mov	r5, r2
   165b0:	mov	r4, r0
   165b4:	strd	r6, [sp, #8]
   165b8:	mov	r7, r3
   165bc:	str	r8, [sp, #16]
   165c0:	mov	r8, r1
   165c4:	str	lr, [sp, #20]
   165c8:	bl	17aec <table_get_cell_ptr@@Base>
   165cc:	mov	r6, r0
   165d0:	mov	r1, r5
   165d4:	mov	r0, r4
   165d8:	bl	13b30 <table_get_col_ptr@@Base>
   165dc:	ldr	r2, [r0, #4]
   165e0:	cmp	r2, #6
   165e4:	bne	16638 <table_set_int32@@Base+0x90>
   165e8:	ldr	r0, [r6]
   165ec:	cmp	r0, #0
   165f0:	beq	16624 <table_set_int32@@Base+0x7c>
   165f4:	mov	r2, r5
   165f8:	mov	r1, r8
   165fc:	str	r7, [r0]
   16600:	mov	r3, #1
   16604:	mov	r0, r4
   16608:	bl	1364c <table_notify@@Base>
   1660c:	mov	r0, #0
   16610:	ldrd	r4, [sp]
   16614:	ldrd	r6, [sp, #8]
   16618:	ldr	r8, [sp, #16]
   1661c:	add	sp, sp, #20
   16620:	pop	{pc}		; (ldr pc, [sp], #4)
   16624:	mov	r0, #4
   16628:	bl	1293c <malloc@plt>
   1662c:	cmp	r0, #0
   16630:	str	r0, [r6]
   16634:	bne	165f4 <table_set_int32@@Base+0x4c>
   16638:	mvn	r0, #0
   1663c:	b	16610 <table_set_int32@@Base+0x68>

00016640 <table_set_uint32@@Base>:
   16640:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16644:	mov	r5, r2
   16648:	mov	r4, r0
   1664c:	strd	r6, [sp, #8]
   16650:	mov	r7, r3
   16654:	str	r8, [sp, #16]
   16658:	mov	r8, r1
   1665c:	str	lr, [sp, #20]
   16660:	bl	17aec <table_get_cell_ptr@@Base>
   16664:	mov	r6, r0
   16668:	mov	r1, r5
   1666c:	mov	r0, r4
   16670:	bl	13b30 <table_get_col_ptr@@Base>
   16674:	ldr	r2, [r0, #4]
   16678:	cmp	r2, #7
   1667c:	bne	166d0 <table_set_uint32@@Base+0x90>
   16680:	ldr	r0, [r6]
   16684:	cmp	r0, #0
   16688:	beq	166bc <table_set_uint32@@Base+0x7c>
   1668c:	mov	r2, r5
   16690:	mov	r1, r8
   16694:	str	r7, [r0]
   16698:	mov	r3, #1
   1669c:	mov	r0, r4
   166a0:	bl	1364c <table_notify@@Base>
   166a4:	mov	r0, #0
   166a8:	ldrd	r4, [sp]
   166ac:	ldrd	r6, [sp, #8]
   166b0:	ldr	r8, [sp, #16]
   166b4:	add	sp, sp, #20
   166b8:	pop	{pc}		; (ldr pc, [sp], #4)
   166bc:	mov	r0, #4
   166c0:	bl	1293c <malloc@plt>
   166c4:	cmp	r0, #0
   166c8:	str	r0, [r6]
   166cc:	bne	1668c <table_set_uint32@@Base+0x4c>
   166d0:	mvn	r0, #0
   166d4:	b	166a8 <table_set_uint32@@Base+0x68>

000166d8 <table_set_int64@@Base>:
   166d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   166dc:	mov	r5, r2
   166e0:	mov	r4, r0
   166e4:	strd	r6, [sp, #8]
   166e8:	mov	r7, r1
   166ec:	str	r8, [sp, #16]
   166f0:	str	lr, [sp, #20]
   166f4:	bl	17aec <table_get_cell_ptr@@Base>
   166f8:	mov	r6, r0
   166fc:	mov	r1, r5
   16700:	mov	r0, r4
   16704:	bl	13b30 <table_get_col_ptr@@Base>
   16708:	ldr	r0, [r0, #4]
   1670c:	cmp	r0, #8
   16710:	bne	16770 <table_set_int64@@Base+0x98>
   16714:	ldr	ip, [r6]
   16718:	cmp	ip, #0
   1671c:	beq	1675c <table_set_int64@@Base+0x84>
   16720:	ldr	r6, [sp, #24]
   16724:	mov	r0, r4
   16728:	mov	r2, r5
   1672c:	mov	r1, r7
   16730:	mov	r3, #1
   16734:	ldr	lr, [sp, #28]
   16738:	str	r6, [ip]
   1673c:	str	lr, [ip, #4]
   16740:	bl	1364c <table_notify@@Base>
   16744:	mov	r0, #0
   16748:	ldrd	r4, [sp]
   1674c:	ldrd	r6, [sp, #8]
   16750:	ldr	r8, [sp, #16]
   16754:	add	sp, sp, #20
   16758:	pop	{pc}		; (ldr pc, [sp], #4)
   1675c:	bl	1293c <malloc@plt>
   16760:	cmp	r0, #0
   16764:	mov	ip, r0
   16768:	str	r0, [r6]
   1676c:	bne	16720 <table_set_int64@@Base+0x48>
   16770:	mvn	r0, #0
   16774:	b	16748 <table_set_int64@@Base+0x70>

00016778 <table_set_uint64@@Base>:
   16778:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1677c:	mov	r5, r2
   16780:	mov	r4, r0
   16784:	strd	r6, [sp, #8]
   16788:	mov	r7, r1
   1678c:	str	r8, [sp, #16]
   16790:	str	lr, [sp, #20]
   16794:	bl	17aec <table_get_cell_ptr@@Base>
   16798:	mov	r6, r0
   1679c:	mov	r1, r5
   167a0:	mov	r0, r4
   167a4:	bl	13b30 <table_get_col_ptr@@Base>
   167a8:	ldr	r3, [r0, #4]
   167ac:	cmp	r3, #9
   167b0:	bne	16814 <table_set_uint64@@Base+0x9c>
   167b4:	ldr	ip, [r6]
   167b8:	cmp	ip, #0
   167bc:	beq	167fc <table_set_uint64@@Base+0x84>
   167c0:	ldr	r6, [sp, #24]
   167c4:	mov	r0, r4
   167c8:	mov	r2, r5
   167cc:	mov	r1, r7
   167d0:	mov	r3, #1
   167d4:	ldr	lr, [sp, #28]
   167d8:	str	r6, [ip]
   167dc:	str	lr, [ip, #4]
   167e0:	bl	1364c <table_notify@@Base>
   167e4:	mov	r0, #0
   167e8:	ldrd	r4, [sp]
   167ec:	ldrd	r6, [sp, #8]
   167f0:	ldr	r8, [sp, #16]
   167f4:	add	sp, sp, #20
   167f8:	pop	{pc}		; (ldr pc, [sp], #4)
   167fc:	mov	r0, #8
   16800:	bl	1293c <malloc@plt>
   16804:	cmp	r0, #0
   16808:	mov	ip, r0
   1680c:	str	r0, [r6]
   16810:	bne	167c0 <table_set_uint64@@Base+0x48>
   16814:	mvn	r0, #0
   16818:	b	167e8 <table_set_uint64@@Base+0x70>

0001681c <table_set_short@@Base>:
   1681c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16820:	mov	r5, r2
   16824:	mov	r4, r0
   16828:	strd	r6, [sp, #8]
   1682c:	mov	r7, r3
   16830:	str	r8, [sp, #16]
   16834:	mov	r8, r1
   16838:	str	lr, [sp, #20]
   1683c:	bl	17aec <table_get_cell_ptr@@Base>
   16840:	mov	r6, r0
   16844:	mov	r1, r5
   16848:	mov	r0, r4
   1684c:	bl	13b30 <table_get_col_ptr@@Base>
   16850:	ldr	r2, [r0, #4]
   16854:	cmp	r2, #10
   16858:	bne	168ac <table_set_short@@Base+0x90>
   1685c:	ldr	r0, [r6]
   16860:	cmp	r0, #0
   16864:	beq	16898 <table_set_short@@Base+0x7c>
   16868:	mov	r2, r5
   1686c:	mov	r1, r8
   16870:	strh	r7, [r0]
   16874:	mov	r3, #1
   16878:	mov	r0, r4
   1687c:	bl	1364c <table_notify@@Base>
   16880:	mov	r0, #0
   16884:	ldrd	r4, [sp]
   16888:	ldrd	r6, [sp, #8]
   1688c:	ldr	r8, [sp, #16]
   16890:	add	sp, sp, #20
   16894:	pop	{pc}		; (ldr pc, [sp], #4)
   16898:	mov	r0, #2
   1689c:	bl	1293c <malloc@plt>
   168a0:	cmp	r0, #0
   168a4:	str	r0, [r6]
   168a8:	bne	16868 <table_set_short@@Base+0x4c>
   168ac:	mvn	r0, #0
   168b0:	b	16884 <table_set_short@@Base+0x68>

000168b4 <table_set_ushort@@Base>:
   168b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   168b8:	mov	r5, r2
   168bc:	mov	r4, r0
   168c0:	strd	r6, [sp, #8]
   168c4:	mov	r7, r3
   168c8:	str	r8, [sp, #16]
   168cc:	mov	r8, r1
   168d0:	str	lr, [sp, #20]
   168d4:	bl	17aec <table_get_cell_ptr@@Base>
   168d8:	mov	r6, r0
   168dc:	mov	r1, r5
   168e0:	mov	r0, r4
   168e4:	bl	13b30 <table_get_col_ptr@@Base>
   168e8:	ldr	r2, [r0, #4]
   168ec:	cmp	r2, #11
   168f0:	bne	16944 <table_set_ushort@@Base+0x90>
   168f4:	ldr	r0, [r6]
   168f8:	cmp	r0, #0
   168fc:	beq	16930 <table_set_ushort@@Base+0x7c>
   16900:	mov	r2, r5
   16904:	mov	r1, r8
   16908:	strh	r7, [r0]
   1690c:	mov	r3, #1
   16910:	mov	r0, r4
   16914:	bl	1364c <table_notify@@Base>
   16918:	mov	r0, #0
   1691c:	ldrd	r4, [sp]
   16920:	ldrd	r6, [sp, #8]
   16924:	ldr	r8, [sp, #16]
   16928:	add	sp, sp, #20
   1692c:	pop	{pc}		; (ldr pc, [sp], #4)
   16930:	mov	r0, #2
   16934:	bl	1293c <malloc@plt>
   16938:	cmp	r0, #0
   1693c:	str	r0, [r6]
   16940:	bne	16900 <table_set_ushort@@Base+0x4c>
   16944:	mvn	r0, #0
   16948:	b	1691c <table_set_ushort@@Base+0x68>

0001694c <table_set_long@@Base>:
   1694c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16950:	mov	r5, r2
   16954:	mov	r4, r0
   16958:	strd	r6, [sp, #8]
   1695c:	mov	r6, r3
   16960:	mov	r7, r1
   16964:	str	r8, [sp, #16]
   16968:	str	lr, [sp, #20]
   1696c:	bl	17aec <table_get_cell_ptr@@Base>
   16970:	mov	r8, r0
   16974:	mov	r1, r5
   16978:	mov	r0, r4
   1697c:	bl	13b30 <table_get_col_ptr@@Base>
   16980:	ldr	r3, [r0, #4]
   16984:	cmp	r3, #12
   16988:	beq	169a4 <table_set_long@@Base+0x58>
   1698c:	mvn	r0, #0
   16990:	ldrd	r4, [sp]
   16994:	ldrd	r6, [sp, #8]
   16998:	ldr	r8, [sp, #16]
   1699c:	add	sp, sp, #20
   169a0:	pop	{pc}		; (ldr pc, [sp], #4)
   169a4:	ldr	r0, [r8]
   169a8:	cmp	r0, #0
   169ac:	beq	169d0 <table_set_long@@Base+0x84>
   169b0:	mov	r2, r5
   169b4:	mov	r1, r7
   169b8:	str	r6, [r0]
   169bc:	mov	r3, #1
   169c0:	mov	r0, r4
   169c4:	bl	1364c <table_notify@@Base>
   169c8:	mov	r0, #0
   169cc:	b	16990 <table_set_long@@Base+0x44>
   169d0:	mov	r0, #4
   169d4:	bl	1293c <malloc@plt>
   169d8:	cmp	r0, #0
   169dc:	str	r0, [r8]
   169e0:	bne	169b0 <table_set_long@@Base+0x64>
   169e4:	b	1698c <table_set_long@@Base+0x40>

000169e8 <table_set_ulong@@Base>:
   169e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   169ec:	mov	r5, r2
   169f0:	mov	r4, r0
   169f4:	strd	r6, [sp, #8]
   169f8:	mov	r6, r3
   169fc:	mov	r7, r1
   16a00:	str	r8, [sp, #16]
   16a04:	str	lr, [sp, #20]
   16a08:	bl	17aec <table_get_cell_ptr@@Base>
   16a0c:	mov	r8, r0
   16a10:	mov	r1, r5
   16a14:	mov	r0, r4
   16a18:	bl	13b30 <table_get_col_ptr@@Base>
   16a1c:	ldr	r3, [r0, #4]
   16a20:	cmp	r3, #13
   16a24:	beq	16a40 <table_set_ulong@@Base+0x58>
   16a28:	mvn	r0, #0
   16a2c:	ldrd	r4, [sp]
   16a30:	ldrd	r6, [sp, #8]
   16a34:	ldr	r8, [sp, #16]
   16a38:	add	sp, sp, #20
   16a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a40:	ldr	r0, [r8]
   16a44:	cmp	r0, #0
   16a48:	beq	16a6c <table_set_ulong@@Base+0x84>
   16a4c:	mov	r2, r5
   16a50:	mov	r1, r7
   16a54:	str	r6, [r0]
   16a58:	mov	r3, #1
   16a5c:	mov	r0, r4
   16a60:	bl	1364c <table_notify@@Base>
   16a64:	mov	r0, #0
   16a68:	b	16a2c <table_set_ulong@@Base+0x44>
   16a6c:	mov	r0, #4
   16a70:	bl	1293c <malloc@plt>
   16a74:	cmp	r0, #0
   16a78:	str	r0, [r8]
   16a7c:	bne	16a4c <table_set_ulong@@Base+0x64>
   16a80:	b	16a28 <table_set_ulong@@Base+0x40>

00016a84 <table_set_llong@@Base>:
   16a84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16a88:	mov	r5, r2
   16a8c:	mov	r4, r0
   16a90:	strd	r6, [sp, #8]
   16a94:	mov	r6, r1
   16a98:	str	r8, [sp, #16]
   16a9c:	str	lr, [sp, #20]
   16aa0:	bl	17aec <table_get_cell_ptr@@Base>
   16aa4:	mov	r7, r0
   16aa8:	mov	r1, r5
   16aac:	mov	r0, r4
   16ab0:	bl	13b30 <table_get_col_ptr@@Base>
   16ab4:	ldr	r3, [r0, #4]
   16ab8:	cmp	r3, #14
   16abc:	beq	16ad8 <table_set_llong@@Base+0x54>
   16ac0:	mvn	r0, #0
   16ac4:	ldrd	r4, [sp]
   16ac8:	ldrd	r6, [sp, #8]
   16acc:	ldr	r8, [sp, #16]
   16ad0:	add	sp, sp, #20
   16ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ad8:	ldr	ip, [r7]
   16adc:	cmp	ip, #0
   16ae0:	beq	16b10 <table_set_llong@@Base+0x8c>
   16ae4:	ldr	r7, [sp, #24]
   16ae8:	mov	r0, r4
   16aec:	mov	r2, r5
   16af0:	mov	r1, r6
   16af4:	mov	r3, #1
   16af8:	ldr	lr, [sp, #28]
   16afc:	str	r7, [ip]
   16b00:	str	lr, [ip, #4]
   16b04:	bl	1364c <table_notify@@Base>
   16b08:	mov	r0, #0
   16b0c:	b	16ac4 <table_set_llong@@Base+0x40>
   16b10:	mov	r0, #8
   16b14:	bl	1293c <malloc@plt>
   16b18:	cmp	r0, #0
   16b1c:	mov	ip, r0
   16b20:	str	r0, [r7]
   16b24:	bne	16ae4 <table_set_llong@@Base+0x60>
   16b28:	b	16ac0 <table_set_llong@@Base+0x3c>

00016b2c <table_set_ullong@@Base>:
   16b2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16b30:	mov	r5, r2
   16b34:	mov	r4, r0
   16b38:	strd	r6, [sp, #8]
   16b3c:	mov	r6, r1
   16b40:	str	r8, [sp, #16]
   16b44:	str	lr, [sp, #20]
   16b48:	bl	17aec <table_get_cell_ptr@@Base>
   16b4c:	mov	r7, r0
   16b50:	mov	r1, r5
   16b54:	mov	r0, r4
   16b58:	bl	13b30 <table_get_col_ptr@@Base>
   16b5c:	ldr	r3, [r0, #4]
   16b60:	cmp	r3, #15
   16b64:	beq	16b80 <table_set_ullong@@Base+0x54>
   16b68:	mvn	r0, #0
   16b6c:	ldrd	r4, [sp]
   16b70:	ldrd	r6, [sp, #8]
   16b74:	ldr	r8, [sp, #16]
   16b78:	add	sp, sp, #20
   16b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b80:	ldr	ip, [r7]
   16b84:	cmp	ip, #0
   16b88:	beq	16bb8 <table_set_ullong@@Base+0x8c>
   16b8c:	ldr	r7, [sp, #24]
   16b90:	mov	r0, r4
   16b94:	mov	r2, r5
   16b98:	mov	r1, r6
   16b9c:	mov	r3, #1
   16ba0:	ldr	lr, [sp, #28]
   16ba4:	str	r7, [ip]
   16ba8:	str	lr, [ip, #4]
   16bac:	bl	1364c <table_notify@@Base>
   16bb0:	mov	r0, #0
   16bb4:	b	16b6c <table_set_ullong@@Base+0x40>
   16bb8:	mov	r0, #8
   16bbc:	bl	1293c <malloc@plt>
   16bc0:	cmp	r0, #0
   16bc4:	mov	ip, r0
   16bc8:	str	r0, [r7]
   16bcc:	bne	16b8c <table_set_ullong@@Base+0x60>
   16bd0:	b	16b68 <table_set_ullong@@Base+0x3c>

00016bd4 <table_set_float@@Base>:
   16bd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16bd8:	mov	r5, r2
   16bdc:	mov	r4, r0
   16be0:	strd	r6, [sp, #8]
   16be4:	mov	r7, r1
   16be8:	vmov	r6, s0
   16bec:	str	r8, [sp, #16]
   16bf0:	str	lr, [sp, #20]
   16bf4:	bl	17aec <table_get_cell_ptr@@Base>
   16bf8:	mov	r8, r0
   16bfc:	mov	r1, r5
   16c00:	mov	r0, r4
   16c04:	bl	13b30 <table_get_col_ptr@@Base>
   16c08:	ldr	r3, [r0, #4]
   16c0c:	cmp	r3, #16
   16c10:	beq	16c2c <table_set_float@@Base+0x58>
   16c14:	mvn	r0, #0
   16c18:	ldrd	r4, [sp]
   16c1c:	ldrd	r6, [sp, #8]
   16c20:	ldr	r8, [sp, #16]
   16c24:	add	sp, sp, #20
   16c28:	pop	{pc}		; (ldr pc, [sp], #4)
   16c2c:	ldr	r0, [r8]
   16c30:	cmp	r0, #0
   16c34:	beq	16c58 <table_set_float@@Base+0x84>
   16c38:	mov	r2, r5
   16c3c:	mov	r1, r7
   16c40:	str	r6, [r0]
   16c44:	mov	r3, #1
   16c48:	mov	r0, r4
   16c4c:	bl	1364c <table_notify@@Base>
   16c50:	mov	r0, #0
   16c54:	b	16c18 <table_set_float@@Base+0x44>
   16c58:	mov	r0, #4
   16c5c:	bl	1293c <malloc@plt>
   16c60:	cmp	r0, #0
   16c64:	str	r0, [r8]
   16c68:	bne	16c38 <table_set_float@@Base+0x64>
   16c6c:	b	16c14 <table_set_float@@Base+0x40>

00016c70 <table_set_double@@Base>:
   16c70:	strd	r4, [sp, #-20]!	; 0xffffffec
   16c74:	mov	r5, r2
   16c78:	mov	r4, r0
   16c7c:	strd	r6, [sp, #8]
   16c80:	mov	r6, r1
   16c84:	str	lr, [sp, #16]
   16c88:	sub	sp, sp, #12
   16c8c:	vstr	d0, [sp]
   16c90:	bl	17aec <table_get_cell_ptr@@Base>
   16c94:	mov	r7, r0
   16c98:	mov	r1, r5
   16c9c:	mov	r0, r4
   16ca0:	bl	13b30 <table_get_col_ptr@@Base>
   16ca4:	ldr	r3, [r0, #4]
   16ca8:	cmp	r3, #17
   16cac:	beq	16cc8 <table_set_double@@Base+0x58>
   16cb0:	mvn	r0, #0
   16cb4:	add	sp, sp, #12
   16cb8:	ldrd	r4, [sp]
   16cbc:	ldrd	r6, [sp, #8]
   16cc0:	add	sp, sp, #16
   16cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   16cc8:	ldr	ip, [r7]
   16ccc:	cmp	ip, #0
   16cd0:	beq	16cfc <table_set_double@@Base+0x8c>
   16cd4:	ldm	sp, {r7, lr}
   16cd8:	mov	r0, r4
   16cdc:	mov	r2, r5
   16ce0:	mov	r1, r6
   16ce4:	mov	r3, #1
   16ce8:	str	r7, [ip]
   16cec:	str	lr, [ip, #4]
   16cf0:	bl	1364c <table_notify@@Base>
   16cf4:	mov	r0, #0
   16cf8:	b	16cb4 <table_set_double@@Base+0x44>
   16cfc:	mov	r0, #8
   16d00:	bl	1293c <malloc@plt>
   16d04:	cmp	r0, #0
   16d08:	mov	ip, r0
   16d0c:	str	r0, [r7]
   16d10:	bne	16cd4 <table_set_double@@Base+0x64>
   16d14:	b	16cb0 <table_set_double@@Base+0x40>

00016d18 <table_set_ldouble@@Base>:
   16d18:	strd	r4, [sp, #-20]!	; 0xffffffec
   16d1c:	mov	r5, r2
   16d20:	mov	r4, r0
   16d24:	strd	r6, [sp, #8]
   16d28:	mov	r6, r1
   16d2c:	str	lr, [sp, #16]
   16d30:	sub	sp, sp, #12
   16d34:	vstr	d0, [sp]
   16d38:	bl	17aec <table_get_cell_ptr@@Base>
   16d3c:	mov	r7, r0
   16d40:	mov	r1, r5
   16d44:	mov	r0, r4
   16d48:	bl	13b30 <table_get_col_ptr@@Base>
   16d4c:	ldr	r3, [r0, #4]
   16d50:	cmp	r3, #18
   16d54:	beq	16d70 <table_set_ldouble@@Base+0x58>
   16d58:	mvn	r0, #0
   16d5c:	add	sp, sp, #12
   16d60:	ldrd	r4, [sp]
   16d64:	ldrd	r6, [sp, #8]
   16d68:	add	sp, sp, #16
   16d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d70:	ldr	ip, [r7]
   16d74:	cmp	ip, #0
   16d78:	beq	16da4 <table_set_ldouble@@Base+0x8c>
   16d7c:	ldm	sp, {r7, lr}
   16d80:	mov	r0, r4
   16d84:	mov	r2, r5
   16d88:	mov	r1, r6
   16d8c:	mov	r3, #1
   16d90:	str	r7, [ip]
   16d94:	str	lr, [ip, #4]
   16d98:	bl	1364c <table_notify@@Base>
   16d9c:	mov	r0, #0
   16da0:	b	16d5c <table_set_ldouble@@Base+0x44>
   16da4:	mov	r0, #8
   16da8:	bl	1293c <malloc@plt>
   16dac:	cmp	r0, #0
   16db0:	mov	ip, r0
   16db4:	str	r0, [r7]
   16db8:	bne	16d7c <table_set_ldouble@@Base+0x64>
   16dbc:	b	16d58 <table_set_ldouble@@Base+0x40>

00016dc0 <table_set_string@@Base>:
   16dc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16dc4:	mov	r5, r2
   16dc8:	mov	r4, r0
   16dcc:	strd	r6, [sp, #8]
   16dd0:	mov	r6, r3
   16dd4:	mov	r7, r1
   16dd8:	str	r8, [sp, #16]
   16ddc:	str	lr, [sp, #20]
   16de0:	bl	17aec <table_get_cell_ptr@@Base>
   16de4:	mov	r8, r0
   16de8:	mov	r1, r5
   16dec:	mov	r0, r4
   16df0:	bl	13b30 <table_get_col_ptr@@Base>
   16df4:	ldr	r3, [r0, #4]
   16df8:	cmp	r3, #21
   16dfc:	beq	16e18 <table_set_string@@Base+0x58>
   16e00:	mvn	r0, #0
   16e04:	ldrd	r4, [sp]
   16e08:	ldrd	r6, [sp, #8]
   16e0c:	ldr	r8, [sp, #16]
   16e10:	add	sp, sp, #20
   16e14:	pop	{pc}		; (ldr pc, [sp], #4)
   16e18:	mov	r0, r6
   16e1c:	bl	12960 <strlen@plt>
   16e20:	add	r1, r0, #1
   16e24:	ldr	r0, [r8]
   16e28:	bl	12924 <realloc@plt>
   16e2c:	cmp	r0, #0
   16e30:	str	r0, [r8]
   16e34:	beq	16e00 <table_set_string@@Base+0x40>
   16e38:	mov	r1, r6
   16e3c:	bl	12930 <strcpy@plt>
   16e40:	mov	r0, r4
   16e44:	mov	r2, r5
   16e48:	mov	r1, r7
   16e4c:	mov	r3, #1
   16e50:	bl	1364c <table_notify@@Base>
   16e54:	mov	r0, #0
   16e58:	b	16e04 <table_set_string@@Base+0x44>

00016e5c <table_set_char@@Base>:
   16e5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16e60:	mov	r5, r2
   16e64:	mov	r4, r0
   16e68:	strd	r6, [sp, #8]
   16e6c:	mov	r6, r3
   16e70:	mov	r7, r1
   16e74:	str	r8, [sp, #16]
   16e78:	str	lr, [sp, #20]
   16e7c:	bl	17aec <table_get_cell_ptr@@Base>
   16e80:	mov	r8, r0
   16e84:	mov	r1, r5
   16e88:	mov	r0, r4
   16e8c:	bl	13b30 <table_get_col_ptr@@Base>
   16e90:	ldr	r3, [r0, #4]
   16e94:	cmp	r3, #19
   16e98:	beq	16eb4 <table_set_char@@Base+0x58>
   16e9c:	mvn	r0, #0
   16ea0:	ldrd	r4, [sp]
   16ea4:	ldrd	r6, [sp, #8]
   16ea8:	ldr	r8, [sp, #16]
   16eac:	add	sp, sp, #20
   16eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   16eb4:	ldr	r0, [r8]
   16eb8:	cmp	r0, #0
   16ebc:	beq	16ee0 <table_set_char@@Base+0x84>
   16ec0:	mov	r2, r5
   16ec4:	mov	r1, r7
   16ec8:	strb	r6, [r0]
   16ecc:	mov	r3, #1
   16ed0:	mov	r0, r4
   16ed4:	bl	1364c <table_notify@@Base>
   16ed8:	mov	r0, #0
   16edc:	b	16ea0 <table_set_char@@Base+0x44>
   16ee0:	mov	r0, #1
   16ee4:	bl	1293c <malloc@plt>
   16ee8:	cmp	r0, #0
   16eec:	str	r0, [r8]
   16ef0:	bne	16ec0 <table_set_char@@Base+0x64>
   16ef4:	b	16e9c <table_set_char@@Base+0x40>

00016ef8 <table_set_uchar@@Base>:
   16ef8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16efc:	mov	r5, r2
   16f00:	mov	r4, r0
   16f04:	strd	r6, [sp, #8]
   16f08:	mov	r6, r3
   16f0c:	mov	r7, r1
   16f10:	str	r8, [sp, #16]
   16f14:	str	lr, [sp, #20]
   16f18:	bl	17aec <table_get_cell_ptr@@Base>
   16f1c:	mov	r8, r0
   16f20:	mov	r1, r5
   16f24:	mov	r0, r4
   16f28:	bl	13b30 <table_get_col_ptr@@Base>
   16f2c:	ldr	r3, [r0, #4]
   16f30:	cmp	r3, #20
   16f34:	beq	16f50 <table_set_uchar@@Base+0x58>
   16f38:	mvn	r0, #0
   16f3c:	ldrd	r4, [sp]
   16f40:	ldrd	r6, [sp, #8]
   16f44:	ldr	r8, [sp, #16]
   16f48:	add	sp, sp, #20
   16f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f50:	ldr	r0, [r8]
   16f54:	cmp	r0, #0
   16f58:	beq	16f7c <table_set_uchar@@Base+0x84>
   16f5c:	mov	r2, r5
   16f60:	mov	r1, r7
   16f64:	strb	r6, [r0]
   16f68:	mov	r3, #1
   16f6c:	mov	r0, r4
   16f70:	bl	1364c <table_notify@@Base>
   16f74:	mov	r0, #0
   16f78:	b	16f3c <table_set_uchar@@Base+0x44>
   16f7c:	mov	r0, #1
   16f80:	bl	1293c <malloc@plt>
   16f84:	cmp	r0, #0
   16f88:	str	r0, [r8]
   16f8c:	bne	16f5c <table_set_uchar@@Base+0x64>
   16f90:	b	16f38 <table_set_uchar@@Base+0x40>

00016f94 <table_set_ptr@@Base>:
   16f94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16f98:	mov	r5, r2
   16f9c:	mov	r4, r0
   16fa0:	strd	r6, [sp, #8]
   16fa4:	mov	r7, r3
   16fa8:	str	r8, [sp, #16]
   16fac:	mov	r8, r1
   16fb0:	str	lr, [sp, #20]
   16fb4:	bl	17aec <table_get_cell_ptr@@Base>
   16fb8:	mov	r6, r0
   16fbc:	mov	r1, r5
   16fc0:	mov	r0, r4
   16fc4:	bl	13b30 <table_get_col_ptr@@Base>
   16fc8:	ldr	r2, [r0, #4]
   16fcc:	cmp	r2, #23
   16fd0:	mvnne	r0, #0
   16fd4:	bne	16ff4 <table_set_ptr@@Base+0x60>
   16fd8:	mov	r0, r4
   16fdc:	mov	r2, r5
   16fe0:	str	r7, [r6]
   16fe4:	mov	r1, r8
   16fe8:	mov	r3, #1
   16fec:	bl	1364c <table_notify@@Base>
   16ff0:	mov	r0, #0
   16ff4:	ldrd	r4, [sp]
   16ff8:	ldrd	r6, [sp, #8]
   16ffc:	ldr	r8, [sp, #16]
   17000:	add	sp, sp, #20
   17004:	pop	{pc}		; (ldr pc, [sp], #4)

00017008 <table_cell_init@@Base>:
   17008:	str	r4, [sp, #-8]!
   1700c:	mov	r4, r2
   17010:	str	lr, [sp, #4]
   17014:	bl	15df4 <table_get_row_ptr@@Base>
   17018:	ldr	r3, [r0]
   1701c:	mov	r2, #0
   17020:	str	r2, [r3, r4, lsl #2]
   17024:	ldr	r4, [sp]
   17028:	add	sp, sp, #4
   1702c:	pop	{pc}		; (ldr pc, [sp], #4)

00017030 <table_cell_destroy@@Base>:
   17030:	strd	r4, [sp, #-16]!
   17034:	mov	r4, r2
   17038:	mov	r5, r0
   1703c:	str	r6, [sp, #8]
   17040:	mov	r6, r1
   17044:	mov	r1, r2
   17048:	str	lr, [sp, #12]
   1704c:	bl	13808 <table_get_column_data_type@@Base>
   17050:	cmp	r0, #23
   17054:	bne	17068 <table_cell_destroy@@Base+0x38>
   17058:	ldrd	r4, [sp]
   1705c:	ldr	r6, [sp, #8]
   17060:	add	sp, sp, #12
   17064:	pop	{pc}		; (ldr pc, [sp], #4)
   17068:	mov	r1, r6
   1706c:	mov	r0, r5
   17070:	bl	15df4 <table_get_row_ptr@@Base>
   17074:	ldr	r3, [r0]
   17078:	ldr	r0, [r3, r4, lsl #2]
   1707c:	cmp	r0, #0
   17080:	beq	17058 <table_cell_destroy@@Base+0x28>
   17084:	ldrd	r4, [sp]
   17088:	ldr	r6, [sp, #8]
   1708c:	ldr	lr, [sp, #12]
   17090:	add	sp, sp, #16
   17094:	b	12918 <free@plt>

00017098 <table_cell_to_buffer@@Base>:
   17098:	strd	r4, [sp, #-20]!	; 0xffffffec
   1709c:	mov	r4, r2
   170a0:	mov	r5, r3
   170a4:	strd	r6, [sp, #8]
   170a8:	mov	r7, r1
   170ac:	mov	r1, r2
   170b0:	str	lr, [sp, #16]
   170b4:	sub	sp, sp, #12
   170b8:	mov	r6, r0
   170bc:	bl	13808 <table_get_column_data_type@@Base>
   170c0:	cmp	r0, #23
   170c4:	ldrls	pc, [pc, r0, lsl #2]
   170c8:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   170cc:	andeq	r7, r1, r0, ror #8
   170d0:	andeq	r7, r1, ip, asr #8
   170d4:	andeq	r7, r1, r8, lsr r4
   170d8:	andeq	r7, r1, r4, lsr #8
   170dc:	andeq	r7, r1, r0, lsl r4
   170e0:	strdeq	r7, [r1], -ip
   170e4:	andeq	r7, r1, r8, ror #7
   170e8:			; <UNDEFINED> instruction: 0x000173bc
   170ec:	andeq	r7, r1, r8, lsr #7
   170f0:	muleq	r1, r4, r3
   170f4:	andeq	r7, r1, r8, ror #6
   170f8:	andeq	r7, r1, ip, lsr r3
   170fc:	andeq	r7, r1, r0, lsl r3
   17100:	andeq	r7, r1, r4, ror #5
   17104:			; <UNDEFINED> instruction: 0x000172b8
   17108:	andeq	r7, r1, ip, lsl #5
   1710c:	andeq	r7, r1, ip, asr r2
   17110:	andeq	r7, r1, r0, lsr r2
   17114:	andeq	r7, r1, r4, lsl #4
   17118:	strdeq	r7, [r1], -r0
   1711c:	andeq	r7, r1, ip, lsr #2
   17120:	andeq	r7, r1, r4, asr #3
   17124:	muleq	r1, r8, r1
   17128:	andeq	r7, r1, ip, ror #2
   1712c:	mov	r2, r4
   17130:	mov	r1, r7
   17134:	mov	r0, r6
   17138:	bl	15af4 <table_get_uchar@@Base>
   1713c:	mov	r3, r0
   17140:	movw	r2, #32012	; 0x7d0c
   17144:	movt	r2, #1
   17148:	mov	r0, r5
   1714c:	ldr	r1, [sp, #32]
   17150:	bl	1296c <snprintf@plt>
   17154:	mov	r0, #0
   17158:	add	sp, sp, #12
   1715c:	ldrd	r4, [sp]
   17160:	ldrd	r6, [sp, #8]
   17164:	add	sp, sp, #16
   17168:	pop	{pc}		; (ldr pc, [sp], #4)
   1716c:	mov	r2, r4
   17170:	mov	r1, r7
   17174:	mov	r0, r6
   17178:	bl	15b30 <table_get_ptr@@Base>
   1717c:	mov	r3, r0
   17180:	movw	r2, #32016	; 0x7d10
   17184:	movt	r2, #1
   17188:	mov	r0, r5
   1718c:	ldr	r1, [sp, #32]
   17190:	bl	1296c <snprintf@plt>
   17194:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   17198:	mov	r2, r4
   1719c:	mov	r1, r7
   171a0:	mov	r0, r6
   171a4:	bl	15854 <table_get_bool@@Base>
   171a8:	mov	r3, r0
   171ac:	movw	r2, #31732	; 0x7bf4
   171b0:	movt	r2, #1
   171b4:	mov	r0, r5
   171b8:	ldr	r1, [sp, #32]
   171bc:	bl	1296c <snprintf@plt>
   171c0:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   171c4:	mov	r2, r4
   171c8:	mov	r1, r7
   171cc:	mov	r0, r6
   171d0:	bl	15b14 <table_get_string@@Base>
   171d4:	mov	r3, r0
   171d8:	movw	r2, #31996	; 0x7cfc
   171dc:	movt	r2, #1
   171e0:	mov	r0, r5
   171e4:	ldr	r1, [sp, #32]
   171e8:	bl	1296c <snprintf@plt>
   171ec:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   171f0:	mov	r2, r4
   171f4:	mov	r1, r7
   171f8:	mov	r0, r6
   171fc:	bl	15ad4 <table_get_char@@Base>
   17200:	b	1713c <table_cell_to_buffer@@Base+0xa4>
   17204:	mov	r2, r4
   17208:	mov	r1, r7
   1720c:	mov	r0, r6
   17210:	bl	15ab4 <table_get_ldouble@@Base>
   17214:	mov	r0, r5
   17218:	movw	r2, #32008	; 0x7d08
   1721c:	movt	r2, #1
   17220:	vstr	d0, [sp]
   17224:	ldr	r1, [sp, #32]
   17228:	bl	1296c <snprintf@plt>
   1722c:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   17230:	mov	r2, r4
   17234:	mov	r1, r7
   17238:	mov	r0, r6
   1723c:	bl	15a94 <table_get_double@@Base>
   17240:	mov	r0, r5
   17244:	movw	r2, #32004	; 0x7d04
   17248:	movt	r2, #1
   1724c:	vstr	d0, [sp]
   17250:	ldr	r1, [sp, #32]
   17254:	bl	1296c <snprintf@plt>
   17258:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   1725c:	mov	r2, r4
   17260:	mov	r1, r7
   17264:	mov	r0, r6
   17268:	bl	15a74 <table_get_float@@Base>
   1726c:	vcvt.f64.f32	d0, s0
   17270:	mov	r0, r5
   17274:	movw	r2, #32000	; 0x7d00
   17278:	movt	r2, #1
   1727c:	ldr	r1, [sp, #32]
   17280:	vstr	d0, [sp]
   17284:	bl	1296c <snprintf@plt>
   17288:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   1728c:	mov	r2, r4
   17290:	mov	r1, r7
   17294:	mov	r0, r6
   17298:	bl	15a54 <table_get_ullong@@Base>
   1729c:	movw	r2, #31972	; 0x7ce4
   172a0:	movt	r2, #1
   172a4:	strd	r0, [sp]
   172a8:	mov	r0, r5
   172ac:	ldr	r1, [sp, #32]
   172b0:	bl	1296c <snprintf@plt>
   172b4:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   172b8:	mov	r2, r4
   172bc:	mov	r1, r7
   172c0:	mov	r0, r6
   172c4:	bl	15a34 <table_get_llong@@Base>
   172c8:	movw	r2, #31964	; 0x7cdc
   172cc:	movt	r2, #1
   172d0:	strd	r0, [sp]
   172d4:	mov	r0, r5
   172d8:	ldr	r1, [sp, #32]
   172dc:	bl	1296c <snprintf@plt>
   172e0:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   172e4:	mov	r2, r4
   172e8:	mov	r1, r7
   172ec:	mov	r0, r6
   172f0:	bl	15a14 <table_get_ulong@@Base>
   172f4:	mov	r3, r0
   172f8:	movw	r2, #31992	; 0x7cf8
   172fc:	movt	r2, #1
   17300:	mov	r0, r5
   17304:	ldr	r1, [sp, #32]
   17308:	bl	1296c <snprintf@plt>
   1730c:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   17310:	mov	r2, r4
   17314:	mov	r1, r7
   17318:	mov	r0, r6
   1731c:	bl	159f4 <table_get_long@@Base>
   17320:	mov	r3, r0
   17324:	movw	r2, #31988	; 0x7cf4
   17328:	movt	r2, #1
   1732c:	mov	r0, r5
   17330:	ldr	r1, [sp, #32]
   17334:	bl	1296c <snprintf@plt>
   17338:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   1733c:	mov	r2, r4
   17340:	mov	r1, r7
   17344:	mov	r0, r6
   17348:	bl	159d4 <table_get_ushort@@Base>
   1734c:	mov	r3, r0
   17350:	movw	r2, #31984	; 0x7cf0
   17354:	movt	r2, #1
   17358:	mov	r0, r5
   1735c:	ldr	r1, [sp, #32]
   17360:	bl	1296c <snprintf@plt>
   17364:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   17368:	mov	r2, r4
   1736c:	mov	r1, r7
   17370:	mov	r0, r6
   17374:	bl	159b4 <table_get_short@@Base>
   17378:	mov	r3, r0
   1737c:	movw	r2, #31980	; 0x7cec
   17380:	movt	r2, #1
   17384:	mov	r0, r5
   17388:	ldr	r1, [sp, #32]
   1738c:	bl	1296c <snprintf@plt>
   17390:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   17394:	mov	r2, r4
   17398:	mov	r1, r7
   1739c:	mov	r0, r6
   173a0:	bl	15994 <table_get_uint64@@Base>
   173a4:	b	1729c <table_cell_to_buffer@@Base+0x204>
   173a8:	mov	r2, r4
   173ac:	mov	r1, r7
   173b0:	mov	r0, r6
   173b4:	bl	15974 <table_get_int64@@Base>
   173b8:	b	172c8 <table_cell_to_buffer@@Base+0x230>
   173bc:	mov	r2, r4
   173c0:	mov	r1, r7
   173c4:	mov	r0, r6
   173c8:	bl	15954 <table_get_uint32@@Base>
   173cc:	mov	r3, r0
   173d0:	movw	r2, #31960	; 0x7cd8
   173d4:	movt	r2, #1
   173d8:	mov	r0, r5
   173dc:	ldr	r1, [sp, #32]
   173e0:	bl	1296c <snprintf@plt>
   173e4:	b	17154 <table_cell_to_buffer@@Base+0xbc>
   173e8:	mov	r2, r4
   173ec:	mov	r1, r7
   173f0:	mov	r0, r6
   173f4:	bl	15934 <table_get_int32@@Base>
   173f8:	b	171a8 <table_cell_to_buffer@@Base+0x110>
   173fc:	mov	r2, r4
   17400:	mov	r1, r7
   17404:	mov	r0, r6
   17408:	bl	15914 <table_get_uint16@@Base>
   1740c:	b	173cc <table_cell_to_buffer@@Base+0x334>
   17410:	mov	r2, r4
   17414:	mov	r1, r7
   17418:	mov	r0, r6
   1741c:	bl	158f4 <table_get_int16@@Base>
   17420:	b	171a8 <table_cell_to_buffer@@Base+0x110>
   17424:	mov	r2, r4
   17428:	mov	r1, r7
   1742c:	mov	r0, r6
   17430:	bl	158d4 <table_get_uint8@@Base>
   17434:	b	173cc <table_cell_to_buffer@@Base+0x334>
   17438:	mov	r2, r4
   1743c:	mov	r1, r7
   17440:	mov	r0, r6
   17444:	bl	158b4 <table_get_int8@@Base>
   17448:	b	171a8 <table_cell_to_buffer@@Base+0x110>
   1744c:	mov	r2, r4
   17450:	mov	r1, r7
   17454:	mov	r0, r6
   17458:	bl	15894 <table_get_uint@@Base>
   1745c:	b	173cc <table_cell_to_buffer@@Base+0x334>
   17460:	mov	r2, r4
   17464:	mov	r1, r7
   17468:	mov	r0, r6
   1746c:	bl	15874 <table_get_int@@Base>
   17470:	b	171a8 <table_cell_to_buffer@@Base+0x110>

00017474 <table_cell_from_buffer@@Base>:
   17474:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17478:	mov	r4, r2
   1747c:	mov	r5, r3
   17480:	strd	r6, [sp, #8]
   17484:	strd	r8, [sp, #16]
   17488:	mov	r9, r1
   1748c:	mov	r1, r2
   17490:	str	lr, [sp, #24]
   17494:	sub	sp, sp, #268	; 0x10c
   17498:	mov	r8, r0
   1749c:	bl	13808 <table_get_column_data_type@@Base>
   174a0:	cmp	r0, #23
   174a4:	ldrls	pc, [pc, r0, lsl #2]
   174a8:	b	17aa0 <table_cell_from_buffer@@Base+0x62c>
   174ac:	andeq	r7, r1, r4, lsr sl
   174b0:	strdeq	r7, [r1], -ip
   174b4:	andeq	r7, r1, r4, asr #19
   174b8:	andeq	r7, r1, ip, lsl #19
   174bc:	andeq	r7, r1, r4, asr r9
   174c0:	andeq	r7, r1, ip, lsl r9
   174c4:	andeq	r7, r1, r4, ror #17
   174c8:	andeq	r7, r1, ip, lsr #17
   174cc:	andeq	r7, r1, r0, ror r8
   174d0:	andeq	r7, r1, r4, lsr r8
   174d4:	strdeq	r7, [r1], -ip
   174d8:	andeq	r7, r1, r4, asr #15
   174dc:	andeq	r7, r1, ip, lsl #15
   174e0:	andeq	r7, r1, r4, asr r7
   174e4:	andeq	r7, r1, r8, lsl r7
   174e8:	ldrdeq	r7, [r1], -ip
   174ec:	andeq	r7, r1, ip, ror #12
   174f0:	andeq	r7, r1, r4, lsr r6
   174f4:	andeq	r7, r1, r4, lsr #13
   174f8:	andeq	r7, r1, ip, lsl #11
   174fc:	strdeq	r7, [r1], -ip
   17500:	andeq	r7, r1, r4, asr #11
   17504:	andeq	r7, r1, r8, asr #10
   17508:	andeq	r7, r1, ip, lsl #10
   1750c:	mov	r0, r5
   17510:	movw	r1, #32016	; 0x7d10
   17514:	movt	r1, #1
   17518:	add	r2, sp, #8
   1751c:	bl	12978 <__isoc99_sscanf@plt>
   17520:	cmp	r0, #1
   17524:	beq	17a6c <table_cell_from_buffer@@Base+0x5f8>
   17528:	mvn	r5, #0
   1752c:	mov	r0, r5
   17530:	add	sp, sp, #268	; 0x10c
   17534:	ldrd	r4, [sp]
   17538:	ldrd	r6, [sp, #8]
   1753c:	ldrd	r8, [sp, #16]
   17540:	add	sp, sp, #24
   17544:	pop	{pc}		; (ldr pc, [sp], #4)
   17548:	mov	r0, r5
   1754c:	movw	r1, #31732	; 0x7bf4
   17550:	movt	r1, #1
   17554:	add	r2, sp, #8
   17558:	bl	12978 <__isoc99_sscanf@plt>
   1755c:	cmp	r0, #1
   17560:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17564:	ldr	r5, [sp, #8]
   17568:	cmp	r5, #0
   1756c:	beq	17a88 <table_cell_from_buffer@@Base+0x614>
   17570:	mov	r3, r0
   17574:	mov	r2, r4
   17578:	mov	r1, r9
   1757c:	mov	r0, r8
   17580:	bl	16180 <table_set_bool@@Base>
   17584:	mov	r5, #0
   17588:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   1758c:	mov	r0, r5
   17590:	movw	r1, #32012	; 0x7d0c
   17594:	movt	r1, #1
   17598:	add	r2, sp, #8
   1759c:	bl	12978 <__isoc99_sscanf@plt>
   175a0:	cmp	r0, #1
   175a4:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   175a8:	mov	r2, r4
   175ac:	mov	r1, r9
   175b0:	ldrb	r3, [sp, #8]
   175b4:	mov	r0, r8
   175b8:	mov	r5, #0
   175bc:	bl	16e5c <table_set_char@@Base>
   175c0:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   175c4:	mov	r0, r5
   175c8:	add	r2, sp, #8
   175cc:	movw	r1, #31996	; 0x7cfc
   175d0:	movt	r1, #1
   175d4:	bl	12978 <__isoc99_sscanf@plt>
   175d8:	cmp	r0, #1
   175dc:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   175e0:	add	r3, sp, #8
   175e4:	mov	r2, r4
   175e8:	mov	r1, r9
   175ec:	mov	r0, r8
   175f0:	bl	16dc0 <table_set_string@@Base>
   175f4:	mov	r5, #0
   175f8:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   175fc:	mov	r0, r5
   17600:	movw	r1, #32012	; 0x7d0c
   17604:	movt	r1, #1
   17608:	add	r2, sp, #8
   1760c:	bl	12978 <__isoc99_sscanf@plt>
   17610:	cmp	r0, #1
   17614:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17618:	mov	r2, r4
   1761c:	mov	r1, r9
   17620:	ldrb	r3, [sp, #8]
   17624:	mov	r0, r8
   17628:	mov	r5, #0
   1762c:	bl	16ef8 <table_set_uchar@@Base>
   17630:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17634:	mov	r0, r5
   17638:	movw	r1, #32004	; 0x7d04
   1763c:	movt	r1, #1
   17640:	add	r2, sp, #8
   17644:	bl	12978 <__isoc99_sscanf@plt>
   17648:	cmp	r0, #1
   1764c:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17650:	mov	r2, r4
   17654:	mov	r1, r9
   17658:	vldr	d0, [sp, #8]
   1765c:	mov	r0, r8
   17660:	mov	r5, #0
   17664:	bl	16c70 <table_set_double@@Base>
   17668:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   1766c:	mov	r0, r5
   17670:	movw	r1, #32000	; 0x7d00
   17674:	movt	r1, #1
   17678:	add	r2, sp, #8
   1767c:	bl	12978 <__isoc99_sscanf@plt>
   17680:	cmp	r0, #1
   17684:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17688:	mov	r2, r4
   1768c:	mov	r1, r9
   17690:	vldr	s0, [sp, #8]
   17694:	mov	r0, r8
   17698:	mov	r5, #0
   1769c:	bl	16bd4 <table_set_float@@Base>
   176a0:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   176a4:	mov	r0, r5
   176a8:	movw	r1, #32008	; 0x7d08
   176ac:	movt	r1, #1
   176b0:	add	r2, sp, #8
   176b4:	bl	12978 <__isoc99_sscanf@plt>
   176b8:	cmp	r0, #1
   176bc:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   176c0:	mov	r2, r4
   176c4:	mov	r1, r9
   176c8:	vldr	d0, [sp, #8]
   176cc:	mov	r0, r8
   176d0:	mov	r5, #0
   176d4:	bl	16d18 <table_set_ldouble@@Base>
   176d8:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   176dc:	mov	r0, r5
   176e0:	add	r2, sp, #8
   176e4:	movw	r1, #31972	; 0x7ce4
   176e8:	movt	r1, #1
   176ec:	bl	12978 <__isoc99_sscanf@plt>
   176f0:	cmp	r0, #1
   176f4:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   176f8:	ldrd	r6, [sp, #8]
   176fc:	mov	r2, r4
   17700:	mov	r1, r9
   17704:	mov	r0, r8
   17708:	mov	r5, #0
   1770c:	strd	r6, [sp]
   17710:	bl	16b2c <table_set_ullong@@Base>
   17714:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17718:	mov	r0, r5
   1771c:	add	r2, sp, #8
   17720:	movw	r1, #31964	; 0x7cdc
   17724:	movt	r1, #1
   17728:	bl	12978 <__isoc99_sscanf@plt>
   1772c:	cmp	r0, #1
   17730:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17734:	ldrd	r6, [sp, #8]
   17738:	mov	r2, r4
   1773c:	mov	r1, r9
   17740:	mov	r0, r8
   17744:	mov	r5, #0
   17748:	strd	r6, [sp]
   1774c:	bl	16a84 <table_set_llong@@Base>
   17750:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17754:	mov	r0, r5
   17758:	movw	r1, #31992	; 0x7cf8
   1775c:	movt	r1, #1
   17760:	add	r2, sp, #8
   17764:	bl	12978 <__isoc99_sscanf@plt>
   17768:	cmp	r0, #1
   1776c:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17770:	mov	r2, r4
   17774:	mov	r1, r9
   17778:	ldr	r3, [sp, #8]
   1777c:	mov	r0, r8
   17780:	mov	r5, #0
   17784:	bl	169e8 <table_set_ulong@@Base>
   17788:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   1778c:	mov	r0, r5
   17790:	movw	r1, #31988	; 0x7cf4
   17794:	movt	r1, #1
   17798:	add	r2, sp, #8
   1779c:	bl	12978 <__isoc99_sscanf@plt>
   177a0:	cmp	r0, #1
   177a4:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   177a8:	mov	r2, r4
   177ac:	mov	r1, r9
   177b0:	ldr	r3, [sp, #8]
   177b4:	mov	r0, r8
   177b8:	mov	r5, #0
   177bc:	bl	1694c <table_set_long@@Base>
   177c0:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   177c4:	mov	r0, r5
   177c8:	add	r2, sp, #8
   177cc:	movw	r1, #31984	; 0x7cf0
   177d0:	movt	r1, #1
   177d4:	bl	12978 <__isoc99_sscanf@plt>
   177d8:	cmp	r0, #1
   177dc:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   177e0:	ldrh	r3, [sp, #8]
   177e4:	mov	r2, r4
   177e8:	mov	r1, r9
   177ec:	mov	r0, r8
   177f0:	mov	r5, #0
   177f4:	bl	168b4 <table_set_ushort@@Base>
   177f8:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   177fc:	mov	r0, r5
   17800:	add	r2, sp, #8
   17804:	movw	r1, #31980	; 0x7cec
   17808:	movt	r1, #1
   1780c:	bl	12978 <__isoc99_sscanf@plt>
   17810:	cmp	r0, #1
   17814:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17818:	ldrsh	r3, [sp, #8]
   1781c:	mov	r2, r4
   17820:	mov	r1, r9
   17824:	mov	r0, r8
   17828:	mov	r5, #0
   1782c:	bl	1681c <table_set_short@@Base>
   17830:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17834:	mov	r0, r5
   17838:	add	r2, sp, #8
   1783c:	movw	r1, #31972	; 0x7ce4
   17840:	movt	r1, #1
   17844:	bl	12978 <__isoc99_sscanf@plt>
   17848:	cmp	r0, #1
   1784c:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17850:	ldrd	r6, [sp, #8]
   17854:	mov	r2, r4
   17858:	mov	r1, r9
   1785c:	mov	r0, r8
   17860:	mov	r5, #0
   17864:	strd	r6, [sp]
   17868:	bl	16778 <table_set_uint64@@Base>
   1786c:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17870:	mov	r0, r5
   17874:	add	r2, sp, #8
   17878:	movw	r1, #31964	; 0x7cdc
   1787c:	movt	r1, #1
   17880:	bl	12978 <__isoc99_sscanf@plt>
   17884:	cmp	r0, #1
   17888:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   1788c:	ldrd	r6, [sp, #8]
   17890:	mov	r2, r4
   17894:	mov	r1, r9
   17898:	mov	r0, r8
   1789c:	mov	r5, #0
   178a0:	strd	r6, [sp]
   178a4:	bl	166d8 <table_set_int64@@Base>
   178a8:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   178ac:	mov	r0, r5
   178b0:	movw	r1, #31960	; 0x7cd8
   178b4:	movt	r1, #1
   178b8:	add	r2, sp, #8
   178bc:	bl	12978 <__isoc99_sscanf@plt>
   178c0:	cmp	r0, #1
   178c4:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   178c8:	mov	r2, r4
   178cc:	mov	r1, r9
   178d0:	ldr	r3, [sp, #8]
   178d4:	mov	r0, r8
   178d8:	mov	r5, #0
   178dc:	bl	16640 <table_set_uint32@@Base>
   178e0:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   178e4:	mov	r0, r5
   178e8:	movw	r1, #31732	; 0x7bf4
   178ec:	movt	r1, #1
   178f0:	add	r2, sp, #8
   178f4:	bl	12978 <__isoc99_sscanf@plt>
   178f8:	cmp	r0, #1
   178fc:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17900:	mov	r2, r4
   17904:	mov	r1, r9
   17908:	ldr	r3, [sp, #8]
   1790c:	mov	r0, r8
   17910:	mov	r5, #0
   17914:	bl	165a8 <table_set_int32@@Base>
   17918:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   1791c:	mov	r0, r5
   17920:	add	r2, sp, #8
   17924:	movw	r1, #31984	; 0x7cf0
   17928:	movt	r1, #1
   1792c:	bl	12978 <__isoc99_sscanf@plt>
   17930:	cmp	r0, #1
   17934:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17938:	ldrh	r3, [sp, #8]
   1793c:	mov	r2, r4
   17940:	mov	r1, r9
   17944:	mov	r0, r8
   17948:	mov	r5, #0
   1794c:	bl	16510 <table_set_uint16@@Base>
   17950:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17954:	mov	r0, r5
   17958:	add	r2, sp, #8
   1795c:	movw	r1, #31980	; 0x7cec
   17960:	movt	r1, #1
   17964:	bl	12978 <__isoc99_sscanf@plt>
   17968:	cmp	r0, #1
   1796c:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17970:	ldrsh	r3, [sp, #8]
   17974:	mov	r2, r4
   17978:	mov	r1, r9
   1797c:	mov	r0, r8
   17980:	mov	r5, #0
   17984:	bl	16478 <table_set_int16@@Base>
   17988:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   1798c:	mov	r0, r5
   17990:	movw	r1, #32028	; 0x7d1c
   17994:	movt	r1, #1
   17998:	add	r2, sp, #8
   1799c:	bl	12978 <__isoc99_sscanf@plt>
   179a0:	cmp	r0, #1
   179a4:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   179a8:	mov	r2, r4
   179ac:	mov	r1, r9
   179b0:	ldrb	r3, [sp, #8]
   179b4:	mov	r0, r8
   179b8:	mov	r5, #0
   179bc:	bl	163e0 <table_set_uint8@@Base>
   179c0:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   179c4:	mov	r0, r5
   179c8:	add	r2, sp, #8
   179cc:	movw	r1, #32020	; 0x7d14
   179d0:	movt	r1, #1
   179d4:	bl	12978 <__isoc99_sscanf@plt>
   179d8:	cmp	r0, #1
   179dc:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   179e0:	ldrsb	r3, [sp, #8]
   179e4:	mov	r2, r4
   179e8:	mov	r1, r9
   179ec:	mov	r0, r8
   179f0:	mov	r5, #0
   179f4:	bl	16348 <table_set_int8@@Base>
   179f8:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   179fc:	mov	r0, r5
   17a00:	movw	r1, #31960	; 0x7cd8
   17a04:	movt	r1, #1
   17a08:	add	r2, sp, #8
   17a0c:	bl	12978 <__isoc99_sscanf@plt>
   17a10:	cmp	r0, #1
   17a14:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17a18:	mov	r2, r4
   17a1c:	mov	r1, r9
   17a20:	ldr	r3, [sp, #8]
   17a24:	mov	r0, r8
   17a28:	mov	r5, #0
   17a2c:	bl	162b0 <table_set_uint@@Base>
   17a30:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17a34:	mov	r0, r5
   17a38:	movw	r1, #31732	; 0x7bf4
   17a3c:	movt	r1, #1
   17a40:	add	r2, sp, #8
   17a44:	bl	12978 <__isoc99_sscanf@plt>
   17a48:	cmp	r0, #1
   17a4c:	bne	17528 <table_cell_from_buffer@@Base+0xb4>
   17a50:	mov	r2, r4
   17a54:	mov	r1, r9
   17a58:	ldr	r3, [sp, #8]
   17a5c:	mov	r0, r8
   17a60:	mov	r5, #0
   17a64:	bl	16218 <table_set_int@@Base>
   17a68:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17a6c:	mov	r2, r4
   17a70:	mov	r1, r9
   17a74:	ldr	r3, [sp, #8]
   17a78:	mov	r0, r8
   17a7c:	mov	r5, #0
   17a80:	bl	16f94 <table_set_ptr@@Base>
   17a84:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17a88:	mov	r2, r4
   17a8c:	mov	r1, r9
   17a90:	mov	r0, r8
   17a94:	mov	r3, r5
   17a98:	bl	16180 <table_set_bool@@Base>
   17a9c:	b	1752c <table_cell_from_buffer@@Base+0xb8>
   17aa0:	mov	r5, #0
   17aa4:	b	1752c <table_cell_from_buffer@@Base+0xb8>

00017aa8 <table_cell_nullify@@Base>:
   17aa8:	strd	r4, [sp, #-16]!
   17aac:	mov	r5, r2
   17ab0:	str	r6, [sp, #8]
   17ab4:	str	lr, [sp, #12]
   17ab8:	bl	15df4 <table_get_row_ptr@@Base>
   17abc:	ldr	r4, [r0]
   17ac0:	ldr	r0, [r4, r5, lsl #2]
   17ac4:	cmp	r0, #0
   17ac8:	beq	17ad8 <table_cell_nullify@@Base+0x30>
   17acc:	bl	12918 <free@plt>
   17ad0:	mov	r3, #0
   17ad4:	str	r3, [r4, r5, lsl #2]
   17ad8:	ldrd	r4, [sp]
   17adc:	mov	r0, #0
   17ae0:	ldr	r6, [sp, #8]
   17ae4:	add	sp, sp, #12
   17ae8:	pop	{pc}		; (ldr pc, [sp], #4)

00017aec <table_get_cell_ptr@@Base>:
   17aec:	str	r4, [sp, #-8]!
   17af0:	mov	r4, r2
   17af4:	str	lr, [sp, #4]
   17af8:	bl	15df4 <table_get_row_ptr@@Base>
   17afc:	ldr	r0, [r0]
   17b00:	add	r0, r0, r4, lsl #2
   17b04:	ldr	r4, [sp]
   17b08:	add	sp, sp, #4
   17b0c:	pop	{pc}		; (ldr pc, [sp], #4)

00017b10 <__libc_csu_init@@Base>:
   17b10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17b14:	mov	r7, r0
   17b18:	ldr	r6, [pc, #72]	; 17b68 <__libc_csu_init@@Base+0x58>
   17b1c:	ldr	r5, [pc, #72]	; 17b6c <__libc_csu_init@@Base+0x5c>
   17b20:	add	r6, pc, r6
   17b24:	add	r5, pc, r5
   17b28:	sub	r6, r6, r5
   17b2c:	mov	r8, r1
   17b30:	mov	r9, r2
   17b34:	bl	128e0 <strcmp@plt-0x20>
   17b38:	asrs	r6, r6, #2
   17b3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b40:	mov	r4, #0
   17b44:	add	r4, r4, #1
   17b48:	ldr	r3, [r5], #4
   17b4c:	mov	r2, r9
   17b50:	mov	r1, r8
   17b54:	mov	r0, r7
   17b58:	blx	r3
   17b5c:	cmp	r6, r4
   17b60:	bne	17b44 <__libc_csu_init@@Base+0x34>
   17b64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b68:	andeq	r0, r1, ip, ror #7
   17b6c:	andeq	r0, r1, r4, ror #7

00017b70 <__libc_csu_fini@@Base>:
   17b70:	bx	lr

Disassembly of section .fini:

00017b74 <.fini>:
   17b74:	push	{r3, lr}
   17b78:	pop	{r3, pc}
