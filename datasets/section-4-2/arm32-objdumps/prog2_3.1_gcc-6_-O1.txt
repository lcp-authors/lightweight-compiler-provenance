
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a70 <.init>:
   10a70:	push	{r3, lr}
   10a74:	bl	10bc8 <_start@@Base+0x3c>
   10a78:	pop	{r3, pc}

Disassembly of section .plt:

00010a7c <calloc@plt-0x14>:
   10a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a80:	ldr	lr, [pc, #4]	; 10a8c <calloc@plt-0x4>
   10a84:	add	lr, pc, lr
   10a88:	ldr	pc, [lr, #8]!
   10a8c:	andeq	r1, r1, r4, ror r5

00010a90 <calloc@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1396]!	; 0x574

00010a9c <strstr@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00010aa8 <raise@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1380]!	; 0x564

00010ab4 <strcmp@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1372]!	; 0x55c

00010ac0 <printf@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1364]!	; 0x554

00010acc <fopen@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1348]!	; 0x544

00010ae4 <fgets@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1340]!	; 0x53c

00010af0 <time@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1332]!	; 0x534

00010afc <realloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1324]!	; 0x52c

00010b08 <strcat@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1316]!	; 0x524

00010b14 <strcpy@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b20 <puts@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1300]!	; 0x514

00010b2c <malloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1292]!	; 0x50c

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1284]!	; 0x504

00010b44 <__gmon_start__@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b50 <strlen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b5c <srand@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b68 <rand@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b74 <fclose@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b80 <abort@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1236]!	; 0x4d4

Disassembly of section .text:

00010b8c <_start@@Base>:
   10b8c:	mov	fp, #0
   10b90:	mov	lr, #0
   10b94:	pop	{r1}		; (ldr r1, [sp], #4)
   10b98:	mov	r2, sp
   10b9c:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba4:	ldr	ip, [pc, #16]	; 10bbc <_start@@Base+0x30>
   10ba8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bac:	ldr	r0, [pc, #12]	; 10bc0 <_start@@Base+0x34>
   10bb0:	ldr	r3, [pc, #12]	; 10bc4 <_start@@Base+0x38>
   10bb4:	bl	10b38 <__libc_start_main@plt>
   10bb8:	bl	10b80 <abort@plt>
   10bbc:	andeq	r1, r1, r0, lsl r8
   10bc0:			; <UNDEFINED> instruction: 0x00010eb4
   10bc4:			; <UNDEFINED> instruction: 0x000117b0
   10bc8:	ldr	r3, [pc, #20]	; 10be4 <_start@@Base+0x58>
   10bcc:	ldr	r2, [pc, #20]	; 10be8 <_start@@Base+0x5c>
   10bd0:	add	r3, pc, r3
   10bd4:	ldr	r2, [r3, r2]
   10bd8:	cmp	r2, #0
   10bdc:	bxeq	lr
   10be0:	b	10b44 <__gmon_start__@plt>
   10be4:	andeq	r1, r1, r8, lsr #8
   10be8:	andeq	r0, r0, r0, rrx
   10bec:	ldr	r3, [pc, #28]	; 10c10 <_start@@Base+0x84>
   10bf0:	ldr	r0, [pc, #28]	; 10c14 <_start@@Base+0x88>
   10bf4:	sub	r3, r3, r0
   10bf8:	cmp	r3, #6
   10bfc:	bxls	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <_start@@Base+0x8c>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r2, r2, pc, rrx
   10c14:	andeq	r2, r2, ip, rrx
   10c18:	andeq	r0, r0, r0
   10c1c:	ldr	r1, [pc, #36]	; 10c48 <_start@@Base+0xbc>
   10c20:	ldr	r0, [pc, #36]	; 10c4c <_start@@Base+0xc0>
   10c24:	sub	r1, r1, r0
   10c28:	asr	r1, r1, #2
   10c2c:	add	r1, r1, r1, lsr #31
   10c30:	asrs	r1, r1, #1
   10c34:	bxeq	lr
   10c38:	ldr	r3, [pc, #16]	; 10c50 <_start@@Base+0xc4>
   10c3c:	cmp	r3, #0
   10c40:	bxeq	lr
   10c44:	bx	r3
   10c48:	andeq	r2, r2, ip, rrx
   10c4c:	andeq	r2, r2, ip, rrx
   10c50:	andeq	r0, r0, r0
   10c54:	push	{r4, lr}
   10c58:	ldr	r4, [pc, #24]	; 10c78 <_start@@Base+0xec>
   10c5c:	ldrb	r3, [r4]
   10c60:	cmp	r3, #0
   10c64:	popne	{r4, pc}
   10c68:	bl	10bec <_start@@Base+0x60>
   10c6c:	mov	r3, #1
   10c70:	strb	r3, [r4]
   10c74:	pop	{r4, pc}
   10c78:	andeq	r2, r2, ip, rrx
   10c7c:	ldr	r0, [pc, #40]	; 10cac <_start@@Base+0x120>
   10c80:	ldr	r3, [r0]
   10c84:	cmp	r3, #0
   10c88:	bne	10c90 <_start@@Base+0x104>
   10c8c:	b	10c1c <_start@@Base+0x90>
   10c90:	ldr	r3, [pc, #24]	; 10cb0 <_start@@Base+0x124>
   10c94:	cmp	r3, #0
   10c98:	beq	10c8c <_start@@Base+0x100>
   10c9c:	push	{r4, lr}
   10ca0:	blx	r3
   10ca4:	pop	{r4, lr}
   10ca8:	b	10c1c <_start@@Base+0x90>
   10cac:	andeq	r1, r2, r4, lsl pc
   10cb0:	andeq	r0, r0, r0

00010cb4 <vetor_imprime@@Base>:
   10cb4:	push	{r4, r5, r6, r7, r8, lr}
   10cb8:	ldr	r6, [r0]
   10cbc:	cmp	r6, #0
   10cc0:	pople	{r4, r5, r6, r7, r8, pc}
   10cc4:	mov	r5, r0
   10cc8:	mov	r4, #0
   10ccc:	ldr	r7, [pc, #40]	; 10cfc <vetor_imprime@@Base+0x48>
   10cd0:	mov	r1, r4
   10cd4:	mov	r0, r5
   10cd8:	bl	11140 <vetor_elemento@@Base>
   10cdc:	mov	r2, r0
   10ce0:	mov	r1, r4
   10ce4:	mov	r0, r7
   10ce8:	bl	10ac0 <printf@plt>
   10cec:	add	r4, r4, #1
   10cf0:	cmp	r6, r4
   10cf4:	bne	10cd0 <vetor_imprime@@Base+0x1c>
   10cf8:	pop	{r4, r5, r6, r7, r8, pc}
   10cfc:	andeq	r1, r1, r0, lsr #16

00010d00 <vetor_num_ocorrencias@@Base>:
   10d00:	push	{r4, r5, r6, r7, r8, lr}
   10d04:	ldr	r7, [r0]
   10d08:	cmp	r7, #0
   10d0c:	ble	10d54 <vetor_num_ocorrencias@@Base+0x54>
   10d10:	mov	r6, r1
   10d14:	mov	r5, r0
   10d18:	mov	r4, #0
   10d1c:	mov	r8, r4
   10d20:	mov	r1, r4
   10d24:	mov	r0, r5
   10d28:	bl	11140 <vetor_elemento@@Base>
   10d2c:	mov	r1, r0
   10d30:	mov	r0, r6
   10d34:	bl	10ab4 <strcmp@plt>
   10d38:	cmp	r0, #0
   10d3c:	addeq	r8, r8, #1
   10d40:	add	r4, r4, #1
   10d44:	cmp	r7, r4
   10d48:	bne	10d20 <vetor_num_ocorrencias@@Base+0x20>
   10d4c:	mov	r0, r8
   10d50:	pop	{r4, r5, r6, r7, r8, pc}
   10d54:	mov	r8, #0
   10d58:	b	10d4c <vetor_num_ocorrencias@@Base+0x4c>

00010d5c <vetor_remove_repetidas@@Base>:
   10d5c:	ldr	r3, [r0]
   10d60:	cmp	r3, #0
   10d64:	bxle	lr
   10d68:	push	{r4, r5, r6, r7, lr}
   10d6c:	sub	sp, sp, #108	; 0x6c
   10d70:	mov	r5, r0
   10d74:	mov	r6, #0
   10d78:	ldr	r7, [pc, #152]	; 10e18 <vetor_remove_repetidas@@Base+0xbc>
   10d7c:	b	10de0 <vetor_remove_repetidas@@Base+0x84>
   10d80:	add	r4, r4, #1
   10d84:	ldr	r3, [r5]
   10d88:	cmp	r3, r4
   10d8c:	ble	10dd4 <vetor_remove_repetidas@@Base+0x78>
   10d90:	mov	r1, r4
   10d94:	mov	r0, r5
   10d98:	bl	11140 <vetor_elemento@@Base>
   10d9c:	mov	r1, r0
   10da0:	add	r0, sp, #4
   10da4:	bl	10ab4 <strcmp@plt>
   10da8:	cmp	r0, #0
   10dac:	bne	10d80 <vetor_remove_repetidas@@Base+0x24>
   10db0:	mov	r1, r4
   10db4:	mov	r0, r5
   10db8:	bl	1127c <vetor_remove@@Base>
   10dbc:	cmn	r0, #1
   10dc0:	subne	r4, r4, #1
   10dc4:	bne	10d80 <vetor_remove_repetidas@@Base+0x24>
   10dc8:	mov	r0, r7
   10dcc:	bl	10b20 <puts@plt>
   10dd0:	b	10d80 <vetor_remove_repetidas@@Base+0x24>
   10dd4:	ldr	r3, [r5]
   10dd8:	cmp	r3, r6
   10ddc:	ble	10e10 <vetor_remove_repetidas@@Base+0xb4>
   10de0:	mov	r1, r6
   10de4:	mov	r0, r5
   10de8:	bl	11140 <vetor_elemento@@Base>
   10dec:	mov	r1, r0
   10df0:	add	r0, sp, #4
   10df4:	bl	10b14 <strcpy@plt>
   10df8:	add	r6, r6, #1
   10dfc:	ldr	r3, [r5]
   10e00:	cmp	r6, r3
   10e04:	bge	10dd4 <vetor_remove_repetidas@@Base+0x78>
   10e08:	mov	r4, r6
   10e0c:	b	10d90 <vetor_remove_repetidas@@Base+0x34>
   10e10:	add	sp, sp, #108	; 0x6c
   10e14:	pop	{r4, r5, r6, r7, pc}
   10e18:	andeq	r1, r1, r0, lsr r8

00010e1c <vetor_pesquisa_parcial@@Base>:
   10e1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e20:	mov	r5, r0
   10e24:	mov	r6, r1
   10e28:	bl	11020 <vetor_novo@@Base>
   10e2c:	mov	r7, r0
   10e30:	ldr	r3, [r5]
   10e34:	cmp	r3, #0
   10e38:	ble	10ea8 <vetor_pesquisa_parcial@@Base+0x8c>
   10e3c:	mov	r4, #0
   10e40:	mov	r8, r4
   10e44:	ldr	r9, [pc, #100]	; 10eb0 <vetor_pesquisa_parcial@@Base+0x94>
   10e48:	b	10e5c <vetor_pesquisa_parcial@@Base+0x40>
   10e4c:	add	r4, r4, #1
   10e50:	ldr	r3, [r5]
   10e54:	cmp	r3, r4
   10e58:	ble	10ea8 <vetor_pesquisa_parcial@@Base+0x8c>
   10e5c:	mov	r1, r4
   10e60:	mov	r0, r5
   10e64:	bl	11140 <vetor_elemento@@Base>
   10e68:	mov	r1, r6
   10e6c:	bl	10a9c <strstr@plt>
   10e70:	cmp	r0, #0
   10e74:	beq	10e4c <vetor_pesquisa_parcial@@Base+0x30>
   10e78:	mov	r1, r4
   10e7c:	mov	r0, r5
   10e80:	bl	11140 <vetor_elemento@@Base>
   10e84:	mov	r2, r8
   10e88:	mov	r1, r0
   10e8c:	mov	r0, r7
   10e90:	bl	1117c <vetor_insere@@Base>
   10e94:	cmn	r0, #1
   10e98:	bne	10e4c <vetor_pesquisa_parcial@@Base+0x30>
   10e9c:	mov	r0, r9
   10ea0:	bl	10b20 <puts@plt>
   10ea4:	b	10e4c <vetor_pesquisa_parcial@@Base+0x30>
   10ea8:	mov	r0, r7
   10eac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10eb0:	andeq	r1, r1, ip, asr r8

00010eb4 <main@@Base>:
   10eb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   10eb8:	sub	sp, sp, #108	; 0x6c
   10ebc:	bl	11020 <vetor_novo@@Base>
   10ec0:	mov	r6, r0
   10ec4:	ldr	r1, [pc, #296]	; 10ff4 <main@@Base+0x140>
   10ec8:	ldr	r0, [pc, #296]	; 10ff8 <main@@Base+0x144>
   10ecc:	bl	10acc <fopen@plt>
   10ed0:	mov	r7, r0
   10ed4:	mov	r4, #0
   10ed8:	mov	r8, #100	; 0x64
   10edc:	mov	r9, r4
   10ee0:	mov	r2, r7
   10ee4:	mov	r1, r8
   10ee8:	add	r0, sp, #4
   10eec:	bl	10ae4 <fgets@plt>
   10ef0:	cmp	r0, #0
   10ef4:	beq	10f38 <main@@Base+0x84>
   10ef8:	add	r0, sp, #4
   10efc:	bl	10b50 <strlen@plt>
   10f00:	add	r3, sp, #104	; 0x68
   10f04:	add	r0, r3, r0
   10f08:	strb	r9, [r0, #-101]	; 0xffffff9b
   10f0c:	mov	r2, r4
   10f10:	add	r1, sp, #4
   10f14:	mov	r0, r6
   10f18:	bl	1117c <vetor_insere@@Base>
   10f1c:	mov	r5, r0
   10f20:	cmn	r0, #1
   10f24:	addne	r4, r4, #1
   10f28:	bne	10ee0 <main@@Base+0x2c>
   10f2c:	ldr	r0, [pc, #200]	; 10ffc <main@@Base+0x148>
   10f30:	bl	10b20 <puts@plt>
   10f34:	b	10fdc <main@@Base+0x128>
   10f38:	mov	r1, r4
   10f3c:	ldr	r0, [pc, #188]	; 11000 <main@@Base+0x14c>
   10f40:	bl	10ac0 <printf@plt>
   10f44:	mov	r0, r6
   10f48:	bl	10cb4 <vetor_imprime@@Base>
   10f4c:	ldr	r1, [pc, #176]	; 11004 <main@@Base+0x150>
   10f50:	mov	r0, r6
   10f54:	bl	1130c <vetor_pesquisa@@Base>
   10f58:	mov	r1, r0
   10f5c:	ldr	r0, [pc, #164]	; 11008 <main@@Base+0x154>
   10f60:	bl	10ac0 <printf@plt>
   10f64:	mov	r0, r6
   10f68:	bl	11370 <vetor_ordena@@Base>
   10f6c:	cmp	r0, #0
   10f70:	bne	10fe8 <main@@Base+0x134>
   10f74:	mov	r0, r6
   10f78:	bl	10cb4 <vetor_imprime@@Base>
   10f7c:	ldr	r1, [pc, #136]	; 1100c <main@@Base+0x158>
   10f80:	mov	r0, r6
   10f84:	bl	10d00 <vetor_num_ocorrencias@@Base>
   10f88:	mov	r1, r0
   10f8c:	ldr	r0, [pc, #124]	; 11010 <main@@Base+0x15c>
   10f90:	bl	10ac0 <printf@plt>
   10f94:	mov	r0, r6
   10f98:	bl	10d5c <vetor_remove_repetidas@@Base>
   10f9c:	ldr	r1, [r6]
   10fa0:	sub	r1, r1, #1
   10fa4:	ldr	r0, [pc, #104]	; 11014 <main@@Base+0x160>
   10fa8:	bl	10ac0 <printf@plt>
   10fac:	ldr	r1, [pc, #100]	; 11018 <main@@Base+0x164>
   10fb0:	mov	r0, r6
   10fb4:	bl	10e1c <vetor_pesquisa_parcial@@Base>
   10fb8:	mov	r4, r0
   10fbc:	bl	10cb4 <vetor_imprime@@Base>
   10fc0:	mov	r0, r4
   10fc4:	bl	11044 <vetor_apaga@@Base>
   10fc8:	mov	r0, r6
   10fcc:	bl	11044 <vetor_apaga@@Base>
   10fd0:	mov	r0, r7
   10fd4:	bl	10b74 <fclose@plt>
   10fd8:	mov	r5, #0
   10fdc:	mov	r0, r5
   10fe0:	add	sp, sp, #108	; 0x6c
   10fe4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10fe8:	ldr	r0, [pc, #44]	; 1101c <main@@Base+0x168>
   10fec:	bl	10b20 <puts@plt>
   10ff0:	b	10f7c <main@@Base+0xc8>
   10ff4:	andeq	r1, r1, ip, lsl #19
   10ff8:	muleq	r1, r8, r8
   10ffc:			; <UNDEFINED> instruction: 0x000118b0
   11000:	andeq	r1, r1, r0, ror #17
   11004:	strdeq	r1, [r1], -ip
   11008:	andeq	r1, r1, r0, lsr #18
   1100c:	muleq	r1, r0, r9
   11010:	andeq	r1, r1, r4, lsr #19
   11014:	ldrdeq	r1, [r1], -ip
   11018:	andeq	r1, r1, ip, lsl sl
   1101c:	andeq	r1, r1, r8, ror #18

00011020 <vetor_novo@@Base>:
   11020:	push	{r4, lr}
   11024:	mov	r0, #12
   11028:	bl	10b2c <malloc@plt>
   1102c:	cmp	r0, #0
   11030:	movne	r3, #0
   11034:	strne	r3, [r0]
   11038:	strne	r3, [r0, #4]
   1103c:	strne	r3, [r0, #8]
   11040:	pop	{r4, pc}

00011044 <vetor_apaga@@Base>:
   11044:	push	{r4, r5, r6, lr}
   11048:	subs	r5, r0, #0
   1104c:	popeq	{r4, r5, r6, pc}
   11050:	ldr	r3, [r5]
   11054:	cmp	r3, #0
   11058:	ble	1107c <vetor_apaga@@Base+0x38>
   1105c:	mov	r4, #0
   11060:	ldr	r3, [r5, #8]
   11064:	ldr	r0, [r3, r4, lsl #2]
   11068:	bl	10ad8 <free@plt>
   1106c:	add	r4, r4, #1
   11070:	ldr	r3, [r5]
   11074:	cmp	r3, r4
   11078:	bgt	11060 <vetor_apaga@@Base+0x1c>
   1107c:	ldr	r0, [r5, #8]
   11080:	bl	10ad8 <free@plt>
   11084:	mov	r0, r5
   11088:	bl	10ad8 <free@plt>
   1108c:	pop	{r4, r5, r6, pc}

00011090 <vetor_atribui@@Base>:
   11090:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11094:	mov	r5, r0
   11098:	clz	r0, r0
   1109c:	lsr	r0, r0, #5
   110a0:	orrs	r3, r0, r1, lsr #31
   110a4:	bne	11118 <vetor_atribui@@Base+0x88>
   110a8:	ldr	r3, [r5]
   110ac:	cmp	r1, r3
   110b0:	bge	11120 <vetor_atribui@@Base+0x90>
   110b4:	mov	r6, r2
   110b8:	mov	r4, r1
   110bc:	mov	r0, r2
   110c0:	bl	10b50 <strlen@plt>
   110c4:	mov	r9, r0
   110c8:	ldr	r7, [r5, #8]
   110cc:	ldr	r8, [r7, r4, lsl #2]
   110d0:	mov	r0, r8
   110d4:	bl	10b50 <strlen@plt>
   110d8:	cmp	r9, r0
   110dc:	bls	11100 <vetor_atribui@@Base+0x70>
   110e0:	add	r1, r9, #1
   110e4:	mov	r0, r8
   110e8:	bl	10afc <realloc@plt>
   110ec:	str	r0, [r7, r4, lsl #2]
   110f0:	ldr	r3, [r5, #8]
   110f4:	ldr	r3, [r3, r4, lsl #2]
   110f8:	cmp	r3, #0
   110fc:	beq	11128 <vetor_atribui@@Base+0x98>
   11100:	ldr	r3, [r5, #8]
   11104:	mov	r1, r6
   11108:	ldr	r0, [r3, r4, lsl #2]
   1110c:	bl	10b14 <strcpy@plt>
   11110:	mov	r0, r4
   11114:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11118:	mvn	r0, #0
   1111c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11120:	mvn	r0, #0
   11124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11128:	mvn	r0, #0
   1112c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011130 <vetor_tamanho@@Base>:
   11130:	cmp	r0, #0
   11134:	ldrne	r0, [r0]
   11138:	mvneq	r0, #0
   1113c:	bx	lr

00011140 <vetor_elemento@@Base>:
   11140:	mov	r3, r0
   11144:	clz	r0, r0
   11148:	lsr	r0, r0, #5
   1114c:	orrs	r2, r0, r1, lsr #31
   11150:	bne	1116c <vetor_elemento@@Base+0x2c>
   11154:	ldr	r2, [r3]
   11158:	cmp	r1, r2
   1115c:	bge	11174 <vetor_elemento@@Base+0x34>
   11160:	ldr	r3, [r3, #8]
   11164:	ldr	r0, [r3, r1, lsl #2]
   11168:	bx	lr
   1116c:	mov	r0, #0
   11170:	bx	lr
   11174:	mov	r0, #0
   11178:	bx	lr

0001117c <vetor_insere@@Base>:
   1117c:	push	{r4, r5, r6, r7, r8, lr}
   11180:	mov	r5, r0
   11184:	clz	r0, r0
   11188:	lsr	r0, r0, #5
   1118c:	orrs	r3, r0, r2, lsr #31
   11190:	bne	11264 <vetor_insere@@Base+0xe8>
   11194:	ldr	r3, [r5]
   11198:	cmp	r2, r3
   1119c:	bgt	1126c <vetor_insere@@Base+0xf0>
   111a0:	mov	r4, r2
   111a4:	mov	r6, r1
   111a8:	ldr	r2, [r5, #4]
   111ac:	cmp	r3, r2
   111b0:	beq	11230 <vetor_insere@@Base+0xb4>
   111b4:	ldr	r3, [r5]
   111b8:	sub	ip, r3, #1
   111bc:	cmp	r4, ip
   111c0:	bgt	111e8 <vetor_insere@@Base+0x6c>
   111c4:	lsl	r3, r3, #2
   111c8:	ldr	lr, [r5, #8]
   111cc:	add	r2, lr, r3
   111d0:	ldr	r2, [r2, #-4]
   111d4:	str	r2, [lr, r3]
   111d8:	sub	ip, ip, #1
   111dc:	sub	r3, r3, #4
   111e0:	cmp	r4, ip
   111e4:	ble	111c8 <vetor_insere@@Base+0x4c>
   111e8:	ldr	r7, [r5, #8]
   111ec:	mov	r0, r6
   111f0:	bl	10b50 <strlen@plt>
   111f4:	mov	r1, #1
   111f8:	add	r0, r0, r1
   111fc:	bl	10a90 <calloc@plt>
   11200:	str	r0, [r7, r4, lsl #2]
   11204:	ldr	r3, [r5, #8]
   11208:	ldr	r0, [r3, r4, lsl #2]
   1120c:	cmp	r0, #0
   11210:	beq	11274 <vetor_insere@@Base+0xf8>
   11214:	mov	r1, r6
   11218:	bl	10b14 <strcpy@plt>
   1121c:	ldr	r3, [r5]
   11220:	add	r3, r3, #1
   11224:	str	r3, [r5]
   11228:	mov	r0, r4
   1122c:	pop	{r4, r5, r6, r7, r8, pc}
   11230:	cmp	r3, #0
   11234:	moveq	r3, #1
   11238:	lslne	r3, r3, #1
   1123c:	str	r3, [r5, #4]
   11240:	ldr	r1, [r5, #4]
   11244:	lsl	r1, r1, #2
   11248:	ldr	r0, [r5, #8]
   1124c:	bl	10afc <realloc@plt>
   11250:	str	r0, [r5, #8]
   11254:	cmp	r0, #0
   11258:	bne	111b4 <vetor_insere@@Base+0x38>
   1125c:	mvn	r0, #0
   11260:	pop	{r4, r5, r6, r7, r8, pc}
   11264:	mvn	r0, #0
   11268:	pop	{r4, r5, r6, r7, r8, pc}
   1126c:	mvn	r0, #0
   11270:	pop	{r4, r5, r6, r7, r8, pc}
   11274:	mvn	r0, #0
   11278:	pop	{r4, r5, r6, r7, r8, pc}

0001127c <vetor_remove@@Base>:
   1127c:	push	{r4, r5, r6, lr}
   11280:	mov	r6, r0
   11284:	clz	r0, r0
   11288:	lsr	r0, r0, #5
   1128c:	orrs	r3, r0, r1, lsr #31
   11290:	bne	112fc <vetor_remove@@Base+0x80>
   11294:	ldr	r3, [r6]
   11298:	cmp	r1, r3
   1129c:	bge	11304 <vetor_remove@@Base+0x88>
   112a0:	mov	r4, r1
   112a4:	lsl	r5, r1, #2
   112a8:	ldr	r3, [r6, #8]
   112ac:	ldr	r0, [r3, r1, lsl #2]
   112b0:	bl	10ad8 <free@plt>
   112b4:	add	r1, r4, #1
   112b8:	ldr	r0, [r6]
   112bc:	cmp	r1, r0
   112c0:	bge	112ec <vetor_remove@@Base+0x70>
   112c4:	mov	r3, r5
   112c8:	ldr	ip, [r6, #8]
   112cc:	add	r2, r3, #4
   112d0:	ldr	r0, [ip, r2]
   112d4:	str	r0, [ip, r3]
   112d8:	add	r1, r1, #1
   112dc:	ldr	r0, [r6]
   112e0:	mov	r3, r2
   112e4:	cmp	r0, r1
   112e8:	bgt	112c8 <vetor_remove@@Base+0x4c>
   112ec:	sub	r0, r0, #1
   112f0:	str	r0, [r6]
   112f4:	mov	r0, #0
   112f8:	pop	{r4, r5, r6, pc}
   112fc:	mvn	r0, #0
   11300:	pop	{r4, r5, r6, pc}
   11304:	mvn	r0, #0
   11308:	pop	{r4, r5, r6, pc}

0001130c <vetor_pesquisa@@Base>:
   1130c:	push	{r4, r5, r6, r7, r8, lr}
   11310:	cmp	r0, #0
   11314:	beq	11360 <vetor_pesquisa@@Base+0x54>
   11318:	ldr	r7, [r0]
   1131c:	cmp	r7, #0
   11320:	ble	11368 <vetor_pesquisa@@Base+0x5c>
   11324:	mov	r6, r1
   11328:	ldr	r5, [r0, #8]
   1132c:	sub	r5, r5, #4
   11330:	mov	r4, #0
   11334:	mov	r1, r6
   11338:	ldr	r0, [r5, #4]!
   1133c:	bl	10ab4 <strcmp@plt>
   11340:	cmp	r0, #0
   11344:	beq	11358 <vetor_pesquisa@@Base+0x4c>
   11348:	add	r4, r4, #1
   1134c:	cmp	r4, r7
   11350:	bne	11334 <vetor_pesquisa@@Base+0x28>
   11354:	mvn	r4, #0
   11358:	mov	r0, r4
   1135c:	pop	{r4, r5, r6, r7, r8, pc}
   11360:	mvn	r4, #0
   11364:	b	11358 <vetor_pesquisa@@Base+0x4c>
   11368:	mvn	r4, #0
   1136c:	b	11358 <vetor_pesquisa@@Base+0x4c>

00011370 <vetor_ordena@@Base>:
   11370:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11374:	subs	r8, r0, #0
   11378:	beq	11408 <vetor_ordena@@Base+0x98>
   1137c:	ldr	r3, [r8]
   11380:	cmp	r3, #1
   11384:	ble	11410 <vetor_ordena@@Base+0xa0>
   11388:	mov	fp, #4
   1138c:	mov	sl, #1
   11390:	b	113b4 <vetor_ordena@@Base+0x44>
   11394:	mov	r6, sl
   11398:	ldr	r3, [r8, #8]
   1139c:	str	r9, [r3, r6, lsl #2]
   113a0:	add	sl, sl, #1
   113a4:	add	fp, fp, #4
   113a8:	ldr	r3, [r8]
   113ac:	cmp	r3, sl
   113b0:	ble	11400 <vetor_ordena@@Base+0x90>
   113b4:	ldr	r3, [r8, #8]
   113b8:	ldr	r9, [r3, fp]
   113bc:	cmp	sl, #0
   113c0:	ble	11394 <vetor_ordena@@Base+0x24>
   113c4:	mov	r4, fp
   113c8:	mov	r6, sl
   113cc:	ldr	r5, [r8, #8]
   113d0:	sub	r7, r4, #4
   113d4:	ldr	r1, [r5, r7]
   113d8:	mov	r0, r9
   113dc:	bl	10ab4 <strcmp@plt>
   113e0:	cmp	r0, #0
   113e4:	bge	11398 <vetor_ordena@@Base+0x28>
   113e8:	ldr	r3, [r5, r7]
   113ec:	str	r3, [r5, r4]
   113f0:	sub	r4, r4, #4
   113f4:	subs	r6, r6, #1
   113f8:	bne	113cc <vetor_ordena@@Base+0x5c>
   113fc:	b	11398 <vetor_ordena@@Base+0x28>
   11400:	mov	r0, #0
   11404:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11408:	mvn	r0, #0
   1140c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11410:	mov	r0, #0
   11414:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011418 <vetor_concatena@@Base>:
   11418:	push	{r4, r5, r6, lr}
   1141c:	cmp	r1, #0
   11420:	cmpne	r0, #0
   11424:	moveq	r6, #0
   11428:	beq	11480 <vetor_concatena@@Base+0x68>
   1142c:	mov	r5, r0
   11430:	mov	r4, r1
   11434:	bl	11020 <vetor_novo@@Base>
   11438:	mov	r6, r0
   1143c:	ldr	r0, [r4]
   11440:	ldr	r2, [r5]
   11444:	add	r3, r2, r0, lsl #2
   11448:	str	r3, [r6, #8]
   1144c:	ldr	r3, [r5, #4]
   11450:	ldr	r1, [r4, #4]
   11454:	add	r3, r3, r1
   11458:	str	r3, [r6, #4]
   1145c:	ldr	r3, [r5, #8]
   11460:	ldr	r1, [r3]
   11464:	ldr	r0, [r2, r0, lsl #2]
   11468:	bl	10b14 <strcpy@plt>
   1146c:	ldr	r2, [r4, #8]
   11470:	ldr	r3, [r6, #8]
   11474:	ldr	r1, [r2]
   11478:	ldr	r0, [r3]
   1147c:	bl	10b08 <strcat@plt>
   11480:	mov	r0, r6
   11484:	pop	{r4, r5, r6, pc}

00011488 <vetor_inverte@@Base>:
   11488:	cmp	r0, #0
   1148c:	beq	114ec <vetor_inverte@@Base+0x64>
   11490:	push	{r4, r5, lr}
   11494:	ldr	lr, [r0]
   11498:	cmp	lr, #0
   1149c:	ble	114e4 <vetor_inverte@@Base+0x5c>
   114a0:	lsl	r1, lr, #2
   114a4:	mov	r2, lr
   114a8:	mov	r3, #0
   114ac:	ldr	ip, [r0, #8]
   114b0:	ldr	r4, [ip, r3, lsl #2]
   114b4:	ldr	r5, [ip, r1]
   114b8:	str	r5, [ip, r3, lsl #2]
   114bc:	ldr	ip, [r0, #8]
   114c0:	str	r4, [ip, r1]
   114c4:	sub	r2, r2, #1
   114c8:	add	r3, r3, #1
   114cc:	sub	r1, r1, #4
   114d0:	cmp	r2, lr
   114d4:	movlt	ip, r2
   114d8:	movge	ip, lr
   114dc:	cmp	ip, r3
   114e0:	bgt	114ac <vetor_inverte@@Base+0x24>
   114e4:	mov	r0, #0
   114e8:	pop	{r4, r5, pc}
   114ec:	mov	r0, #0
   114f0:	bx	lr

000114f4 <vetor_baralha@@Base>:
   114f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   114f8:	sub	sp, sp, #12
   114fc:	ldr	r8, [r0]
   11500:	bl	11020 <vetor_novo@@Base>
   11504:	mov	r6, r0
   11508:	add	r0, sp, #4
   1150c:	bl	10af0 <time@plt>
   11510:	bl	10b5c <srand@plt>
   11514:	cmp	r8, #0
   11518:	ble	11554 <vetor_baralha@@Base+0x60>
   1151c:	mov	r4, #0
   11520:	add	r9, r8, #1
   11524:	bl	10b68 <rand@plt>
   11528:	ldr	r5, [r6, #8]
   1152c:	ldr	r7, [r5, r4, lsl #2]
   11530:	mov	r1, r9
   11534:	bl	11780 <vetor_baralha@@Base+0x28c>
   11538:	ldr	r3, [r5, r1, lsl #2]
   1153c:	str	r3, [r5, r4, lsl #2]
   11540:	ldr	r3, [r6, #8]
   11544:	str	r7, [r3, r1, lsl #2]
   11548:	add	r4, r4, #1
   1154c:	cmp	r8, r4
   11550:	bne	11524 <vetor_baralha@@Base+0x30>
   11554:	mov	r0, r6
   11558:	add	sp, sp, #12
   1155c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11560:	cmp	r1, #0
   11564:	beq	11770 <vetor_baralha@@Base+0x27c>
   11568:	eor	ip, r0, r1
   1156c:	rsbmi	r1, r1, #0
   11570:	subs	r2, r1, #1
   11574:	beq	1173c <vetor_baralha@@Base+0x248>
   11578:	movs	r3, r0
   1157c:	rsbmi	r3, r0, #0
   11580:	cmp	r3, r1
   11584:	bls	11748 <vetor_baralha@@Base+0x254>
   11588:	tst	r1, r2
   1158c:	beq	11758 <vetor_baralha@@Base+0x264>
   11590:	clz	r2, r3
   11594:	clz	r0, r1
   11598:	sub	r2, r0, r2
   1159c:	rsbs	r2, r2, #31
   115a0:	addne	r2, r2, r2, lsl #1
   115a4:	mov	r0, #0
   115a8:	addne	pc, pc, r2, lsl #2
   115ac:	nop			; (mov r0, r0)
   115b0:	cmp	r3, r1, lsl #31
   115b4:	adc	r0, r0, r0
   115b8:	subcs	r3, r3, r1, lsl #31
   115bc:	cmp	r3, r1, lsl #30
   115c0:	adc	r0, r0, r0
   115c4:	subcs	r3, r3, r1, lsl #30
   115c8:	cmp	r3, r1, lsl #29
   115cc:	adc	r0, r0, r0
   115d0:	subcs	r3, r3, r1, lsl #29
   115d4:	cmp	r3, r1, lsl #28
   115d8:	adc	r0, r0, r0
   115dc:	subcs	r3, r3, r1, lsl #28
   115e0:	cmp	r3, r1, lsl #27
   115e4:	adc	r0, r0, r0
   115e8:	subcs	r3, r3, r1, lsl #27
   115ec:	cmp	r3, r1, lsl #26
   115f0:	adc	r0, r0, r0
   115f4:	subcs	r3, r3, r1, lsl #26
   115f8:	cmp	r3, r1, lsl #25
   115fc:	adc	r0, r0, r0
   11600:	subcs	r3, r3, r1, lsl #25
   11604:	cmp	r3, r1, lsl #24
   11608:	adc	r0, r0, r0
   1160c:	subcs	r3, r3, r1, lsl #24
   11610:	cmp	r3, r1, lsl #23
   11614:	adc	r0, r0, r0
   11618:	subcs	r3, r3, r1, lsl #23
   1161c:	cmp	r3, r1, lsl #22
   11620:	adc	r0, r0, r0
   11624:	subcs	r3, r3, r1, lsl #22
   11628:	cmp	r3, r1, lsl #21
   1162c:	adc	r0, r0, r0
   11630:	subcs	r3, r3, r1, lsl #21
   11634:	cmp	r3, r1, lsl #20
   11638:	adc	r0, r0, r0
   1163c:	subcs	r3, r3, r1, lsl #20
   11640:	cmp	r3, r1, lsl #19
   11644:	adc	r0, r0, r0
   11648:	subcs	r3, r3, r1, lsl #19
   1164c:	cmp	r3, r1, lsl #18
   11650:	adc	r0, r0, r0
   11654:	subcs	r3, r3, r1, lsl #18
   11658:	cmp	r3, r1, lsl #17
   1165c:	adc	r0, r0, r0
   11660:	subcs	r3, r3, r1, lsl #17
   11664:	cmp	r3, r1, lsl #16
   11668:	adc	r0, r0, r0
   1166c:	subcs	r3, r3, r1, lsl #16
   11670:	cmp	r3, r1, lsl #15
   11674:	adc	r0, r0, r0
   11678:	subcs	r3, r3, r1, lsl #15
   1167c:	cmp	r3, r1, lsl #14
   11680:	adc	r0, r0, r0
   11684:	subcs	r3, r3, r1, lsl #14
   11688:	cmp	r3, r1, lsl #13
   1168c:	adc	r0, r0, r0
   11690:	subcs	r3, r3, r1, lsl #13
   11694:	cmp	r3, r1, lsl #12
   11698:	adc	r0, r0, r0
   1169c:	subcs	r3, r3, r1, lsl #12
   116a0:	cmp	r3, r1, lsl #11
   116a4:	adc	r0, r0, r0
   116a8:	subcs	r3, r3, r1, lsl #11
   116ac:	cmp	r3, r1, lsl #10
   116b0:	adc	r0, r0, r0
   116b4:	subcs	r3, r3, r1, lsl #10
   116b8:	cmp	r3, r1, lsl #9
   116bc:	adc	r0, r0, r0
   116c0:	subcs	r3, r3, r1, lsl #9
   116c4:	cmp	r3, r1, lsl #8
   116c8:	adc	r0, r0, r0
   116cc:	subcs	r3, r3, r1, lsl #8
   116d0:	cmp	r3, r1, lsl #7
   116d4:	adc	r0, r0, r0
   116d8:	subcs	r3, r3, r1, lsl #7
   116dc:	cmp	r3, r1, lsl #6
   116e0:	adc	r0, r0, r0
   116e4:	subcs	r3, r3, r1, lsl #6
   116e8:	cmp	r3, r1, lsl #5
   116ec:	adc	r0, r0, r0
   116f0:	subcs	r3, r3, r1, lsl #5
   116f4:	cmp	r3, r1, lsl #4
   116f8:	adc	r0, r0, r0
   116fc:	subcs	r3, r3, r1, lsl #4
   11700:	cmp	r3, r1, lsl #3
   11704:	adc	r0, r0, r0
   11708:	subcs	r3, r3, r1, lsl #3
   1170c:	cmp	r3, r1, lsl #2
   11710:	adc	r0, r0, r0
   11714:	subcs	r3, r3, r1, lsl #2
   11718:	cmp	r3, r1, lsl #1
   1171c:	adc	r0, r0, r0
   11720:	subcs	r3, r3, r1, lsl #1
   11724:	cmp	r3, r1
   11728:	adc	r0, r0, r0
   1172c:	subcs	r3, r3, r1
   11730:	cmp	ip, #0
   11734:	rsbmi	r0, r0, #0
   11738:	bx	lr
   1173c:	teq	ip, r0
   11740:	rsbmi	r0, r0, #0
   11744:	bx	lr
   11748:	movcc	r0, #0
   1174c:	asreq	r0, ip, #31
   11750:	orreq	r0, r0, #1
   11754:	bx	lr
   11758:	clz	r2, r1
   1175c:	rsb	r2, r2, #31
   11760:	cmp	ip, #0
   11764:	lsr	r0, r3, r2
   11768:	rsbmi	r0, r0, #0
   1176c:	bx	lr
   11770:	cmp	r0, #0
   11774:	mvngt	r0, #-2147483648	; 0x80000000
   11778:	movlt	r0, #-2147483648	; 0x80000000
   1177c:	b	117a0 <vetor_baralha@@Base+0x2ac>
   11780:	cmp	r1, #0
   11784:	beq	11770 <vetor_baralha@@Base+0x27c>
   11788:	push	{r0, r1, lr}
   1178c:	bl	11568 <vetor_baralha@@Base+0x74>
   11790:	pop	{r1, r2, lr}
   11794:	mul	r3, r2, r0
   11798:	sub	r1, r1, r3
   1179c:	bx	lr
   117a0:	push	{r1, lr}
   117a4:	mov	r0, #8
   117a8:	bl	10aa8 <raise@plt>
   117ac:	pop	{r1, pc}

000117b0 <__libc_csu_init@@Base>:
   117b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117b4:	mov	r7, r0
   117b8:	ldr	r6, [pc, #72]	; 11808 <__libc_csu_init@@Base+0x58>
   117bc:	ldr	r5, [pc, #72]	; 1180c <__libc_csu_init@@Base+0x5c>
   117c0:	add	r6, pc, r6
   117c4:	add	r5, pc, r5
   117c8:	sub	r6, r6, r5
   117cc:	mov	r8, r1
   117d0:	mov	r9, r2
   117d4:	bl	10a70 <calloc@plt-0x20>
   117d8:	asrs	r6, r6, #2
   117dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   117e0:	mov	r4, #0
   117e4:	add	r4, r4, #1
   117e8:	ldr	r3, [r5], #4
   117ec:	mov	r2, r9
   117f0:	mov	r1, r8
   117f4:	mov	r0, r7
   117f8:	blx	r3
   117fc:	cmp	r6, r4
   11800:	bne	117e4 <__libc_csu_init@@Base+0x34>
   11804:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11808:	andeq	r0, r1, r8, asr #14
   1180c:	andeq	r0, r1, r0, asr #14

00011810 <__libc_csu_fini@@Base>:
   11810:	bx	lr

Disassembly of section .fini:

00011814 <.fini>:
   11814:	push	{r3, lr}
   11818:	pop	{r3, pc}
