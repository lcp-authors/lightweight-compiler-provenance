
../repos/coreutils/src/chcon:     file format elf32-littlearm


Disassembly of section .init:

0001147c <.init>:
   1147c:	push	{r3, lr}
   11480:	bl	118bc <__assert_fail@plt+0x48>
   11484:	pop	{r3, pc}

Disassembly of section .plt:

00011488 <fstatfs64@plt-0x14>:
   11488:	push	{lr}		; (str lr, [sp, #-4]!)
   1148c:	ldr	lr, [pc, #4]	; 11498 <fstatfs64@plt-0x4>
   11490:	add	lr, pc, lr
   11494:	ldr	pc, [lr, #8]!
   11498:	andeq	r3, r2, r8, ror #22

0001149c <fstatfs64@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #143360	; 0x23000
   114a4:	ldr	pc, [ip, #2920]!	; 0xb68

000114a8 <calloc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #143360	; 0x23000
   114b0:	ldr	pc, [ip, #2912]!	; 0xb60

000114b4 <fputs_unlocked@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #143360	; 0x23000
   114bc:	ldr	pc, [ip, #2904]!	; 0xb58

000114c0 <raise@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #143360	; 0x23000
   114c8:	ldr	pc, [ip, #2896]!	; 0xb50

000114cc <is_selinux_enabled@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #143360	; 0x23000
   114d4:	ldr	pc, [ip, #2888]!	; 0xb48

000114d8 <strcmp@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #143360	; 0x23000
   114e0:	ldr	pc, [ip, #2880]!	; 0xb40

000114e4 <printf@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #143360	; 0x23000
   114ec:	ldr	pc, [ip, #2872]!	; 0xb38

000114f0 <fflush@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #143360	; 0x23000
   114f8:	ldr	pc, [ip, #2864]!	; 0xb30

000114fc <lsetfilecon@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #143360	; 0x23000
   11504:	ldr	pc, [ip, #2856]!	; 0xb28

00011508 <memmove@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #143360	; 0x23000
   11510:	ldr	pc, [ip, #2848]!	; 0xb20

00011514 <free@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #143360	; 0x23000
   1151c:	ldr	pc, [ip, #2840]!	; 0xb18

00011520 <_exit@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #143360	; 0x23000
   11528:	ldr	pc, [ip, #2832]!	; 0xb10

0001152c <memcpy@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #143360	; 0x23000
   11534:	ldr	pc, [ip, #2824]!	; 0xb08

00011538 <mbsinit@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #143360	; 0x23000
   11540:	ldr	pc, [ip, #2816]!	; 0xb00

00011544 <context_new@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #143360	; 0x23000
   1154c:	ldr	pc, [ip, #2808]!	; 0xaf8

00011550 <memcmp@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #143360	; 0x23000
   11558:	ldr	pc, [ip, #2800]!	; 0xaf0

0001155c <context_role_set@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #143360	; 0x23000
   11564:	ldr	pc, [ip, #2792]!	; 0xae8

00011568 <context_type_set@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #143360	; 0x23000
   11570:	ldr	pc, [ip, #2784]!	; 0xae0

00011574 <realloc@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #143360	; 0x23000
   1157c:	ldr	pc, [ip, #2776]!	; 0xad8

00011580 <fgetfilecon@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #143360	; 0x23000
   11588:	ldr	pc, [ip, #2768]!	; 0xad0

0001158c <textdomain@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #143360	; 0x23000
   11594:	ldr	pc, [ip, #2760]!	; 0xac8

00011598 <chdir@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #143360	; 0x23000
   115a0:	ldr	pc, [ip, #2752]!	; 0xac0

000115a4 <__fxstatat64@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #143360	; 0x23000
   115ac:	ldr	pc, [ip, #2744]!	; 0xab8

000115b0 <iswprint@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #143360	; 0x23000
   115b8:	ldr	pc, [ip, #2736]!	; 0xab0

000115bc <__fxstat64@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #143360	; 0x23000
   115c4:	ldr	pc, [ip, #2728]!	; 0xaa8

000115c8 <lseek64@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #143360	; 0x23000
   115d0:	ldr	pc, [ip, #2720]!	; 0xaa0

000115d4 <__ctype_get_mb_cur_max@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #143360	; 0x23000
   115dc:	ldr	pc, [ip, #2712]!	; 0xa98

000115e0 <strcpy@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #143360	; 0x23000
   115e8:	ldr	pc, [ip, #2704]!	; 0xa90

000115ec <__fpending@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #143360	; 0x23000
   115f4:	ldr	pc, [ip, #2696]!	; 0xa88

000115f8 <ferror_unlocked@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #143360	; 0x23000
   11600:	ldr	pc, [ip, #2688]!	; 0xa80

00011604 <mbrtowc@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #143360	; 0x23000
   1160c:	ldr	pc, [ip, #2680]!	; 0xa78

00011610 <error@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #143360	; 0x23000
   11618:	ldr	pc, [ip, #2672]!	; 0xa70

0001161c <security_check_context@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #143360	; 0x23000
   11624:	ldr	pc, [ip, #2664]!	; 0xa68

00011628 <open64@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #143360	; 0x23000
   11630:	ldr	pc, [ip, #2656]!	; 0xa60

00011634 <lgetfilecon@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #143360	; 0x23000
   1163c:	ldr	pc, [ip, #2648]!	; 0xa58

00011640 <malloc@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #143360	; 0x23000
   11648:	ldr	pc, [ip, #2640]!	; 0xa50

0001164c <__libc_start_main@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #143360	; 0x23000
   11654:	ldr	pc, [ip, #2632]!	; 0xa48

00011658 <__freading@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #143360	; 0x23000
   11660:	ldr	pc, [ip, #2624]!	; 0xa40

00011664 <__gmon_start__@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #143360	; 0x23000
   1166c:	ldr	pc, [ip, #2616]!	; 0xa38

00011670 <context_free@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #143360	; 0x23000
   11678:	ldr	pc, [ip, #2608]!	; 0xa30

0001167c <getopt_long@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #143360	; 0x23000
   11684:	ldr	pc, [ip, #2600]!	; 0xa28

00011688 <__ctype_b_loc@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #143360	; 0x23000
   11690:	ldr	pc, [ip, #2592]!	; 0xa20

00011694 <getcwd@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #143360	; 0x23000
   1169c:	ldr	pc, [ip, #2584]!	; 0xa18

000116a0 <exit@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #143360	; 0x23000
   116a8:	ldr	pc, [ip, #2576]!	; 0xa10

000116ac <context_user_set@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #143360	; 0x23000
   116b4:	ldr	pc, [ip, #2568]!	; 0xa08

000116b8 <gettext@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #143360	; 0x23000
   116c0:	ldr	pc, [ip, #2560]!	; 0xa00

000116c4 <getfilecon@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #143360	; 0x23000
   116cc:	ldr	pc, [ip, #2552]!	; 0x9f8

000116d0 <strlen@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #143360	; 0x23000
   116d8:	ldr	pc, [ip, #2544]!	; 0x9f0

000116dc <openat64@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #143360	; 0x23000
   116e4:	ldr	pc, [ip, #2536]!	; 0x9e8

000116e8 <memrchr@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #143360	; 0x23000
   116f0:	ldr	pc, [ip, #2528]!	; 0x9e0

000116f4 <fprintf@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #143360	; 0x23000
   116fc:	ldr	pc, [ip, #2520]!	; 0x9d8

00011700 <__errno_location@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #143360	; 0x23000
   11708:	ldr	pc, [ip, #2512]!	; 0x9d0

0001170c <__cxa_atexit@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #143360	; 0x23000
   11714:	ldr	pc, [ip, #2504]!	; 0x9c8

00011718 <memset@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #143360	; 0x23000
   11720:	ldr	pc, [ip, #2496]!	; 0x9c0

00011724 <fileno@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #143360	; 0x23000
   1172c:	ldr	pc, [ip, #2488]!	; 0x9b8

00011730 <memchr@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #143360	; 0x23000
   11738:	ldr	pc, [ip, #2480]!	; 0x9b0

0001173c <setfilecon@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #143360	; 0x23000
   11744:	ldr	pc, [ip, #2472]!	; 0x9a8

00011748 <access@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #143360	; 0x23000
   11750:	ldr	pc, [ip, #2464]!	; 0x9a0

00011754 <fclose@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #143360	; 0x23000
   1175c:	ldr	pc, [ip, #2456]!	; 0x998

00011760 <fseeko64@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #143360	; 0x23000
   11768:	ldr	pc, [ip, #2448]!	; 0x990

0001176c <fcntl64@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #143360	; 0x23000
   11774:	ldr	pc, [ip, #2440]!	; 0x988

00011778 <setlocale@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #143360	; 0x23000
   11780:	ldr	pc, [ip, #2432]!	; 0x980

00011784 <strrchr@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #143360	; 0x23000
   1178c:	ldr	pc, [ip, #2424]!	; 0x978

00011790 <nl_langinfo@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #143360	; 0x23000
   11798:	ldr	pc, [ip, #2416]!	; 0x970

0001179c <sprintf@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #143360	; 0x23000
   117a4:	ldr	pc, [ip, #2408]!	; 0x968

000117a8 <readdir64@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #143360	; 0x23000
   117b0:	ldr	pc, [ip, #2400]!	; 0x960

000117b4 <fdopendir@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #143360	; 0x23000
   117bc:	ldr	pc, [ip, #2392]!	; 0x958

000117c0 <dirfd@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #143360	; 0x23000
   117c8:	ldr	pc, [ip, #2384]!	; 0x950

000117cc <fchdir@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #143360	; 0x23000
   117d4:	ldr	pc, [ip, #2376]!	; 0x948

000117d8 <qsort@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #143360	; 0x23000
   117e0:	ldr	pc, [ip, #2368]!	; 0x940

000117e4 <freecon@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #143360	; 0x23000
   117ec:	ldr	pc, [ip, #2360]!	; 0x938

000117f0 <bindtextdomain@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #143360	; 0x23000
   117f8:	ldr	pc, [ip, #2352]!	; 0x930

000117fc <context_range_set@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #143360	; 0x23000
   11804:	ldr	pc, [ip, #2344]!	; 0x928

00011808 <context_str@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #143360	; 0x23000
   11810:	ldr	pc, [ip, #2336]!	; 0x920

00011814 <__xstat64@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #143360	; 0x23000
   1181c:	ldr	pc, [ip, #2328]!	; 0x918

00011820 <fputs@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #143360	; 0x23000
   11828:	ldr	pc, [ip, #2320]!	; 0x910

0001182c <strncmp@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #143360	; 0x23000
   11834:	ldr	pc, [ip, #2312]!	; 0x908

00011838 <abort@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #143360	; 0x23000
   11840:	ldr	pc, [ip, #2304]!	; 0x900

00011844 <close@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #143360	; 0x23000
   1184c:	ldr	pc, [ip, #2296]!	; 0x8f8

00011850 <__lxstat64@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #143360	; 0x23000
   11858:	ldr	pc, [ip, #2288]!	; 0x8f0

0001185c <closedir@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #143360	; 0x23000
   11864:	ldr	pc, [ip, #2280]!	; 0x8e8

00011868 <strspn@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #143360	; 0x23000
   11870:	ldr	pc, [ip, #2272]!	; 0x8e0

00011874 <__assert_fail@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #143360	; 0x23000
   1187c:	ldr	pc, [ip, #2264]!	; 0x8d8

Disassembly of section .text:

00011880 <.text>:
   11880:	mov	fp, #0
   11884:	mov	lr, #0
   11888:	pop	{r1}		; (ldr r1, [sp], #4)
   1188c:	mov	r2, sp
   11890:	push	{r2}		; (str r2, [sp, #-4]!)
   11894:	push	{r0}		; (str r0, [sp, #-4]!)
   11898:	ldr	ip, [pc, #16]	; 118b0 <__assert_fail@plt+0x3c>
   1189c:	push	{ip}		; (str ip, [sp, #-4]!)
   118a0:	ldr	r0, [pc, #12]	; 118b4 <__assert_fail@plt+0x40>
   118a4:	ldr	r3, [pc, #12]	; 118b8 <__assert_fail@plt+0x44>
   118a8:	bl	1164c <__libc_start_main@plt>
   118ac:	bl	11838 <abort@plt>
   118b0:	andeq	r3, r2, r4, asr r3
   118b4:	andeq	r1, r1, r8, ror #26
   118b8:	strdeq	r3, [r2], -r4
   118bc:	ldr	r3, [pc, #20]	; 118d8 <__assert_fail@plt+0x64>
   118c0:	ldr	r2, [pc, #20]	; 118dc <__assert_fail@plt+0x68>
   118c4:	add	r3, pc, r3
   118c8:	ldr	r2, [r3, r2]
   118cc:	cmp	r2, #0
   118d0:	bxeq	lr
   118d4:	b	11664 <__gmon_start__@plt>
   118d8:	andeq	r3, r2, r4, lsr r7
   118dc:	andeq	r0, r0, r8, asr r1
   118e0:	ldr	r0, [pc, #24]	; 11900 <__assert_fail@plt+0x8c>
   118e4:	ldr	r3, [pc, #24]	; 11904 <__assert_fail@plt+0x90>
   118e8:	cmp	r3, r0
   118ec:	bxeq	lr
   118f0:	ldr	r3, [pc, #16]	; 11908 <__assert_fail@plt+0x94>
   118f4:	cmp	r3, #0
   118f8:	bxeq	lr
   118fc:	bx	r3
   11900:	andeq	r5, r3, ip, lsr #3
   11904:	andeq	r5, r3, ip, lsr #3
   11908:	andeq	r0, r0, r0
   1190c:	ldr	r0, [pc, #36]	; 11938 <__assert_fail@plt+0xc4>
   11910:	ldr	r1, [pc, #36]	; 1193c <__assert_fail@plt+0xc8>
   11914:	sub	r1, r1, r0
   11918:	asr	r1, r1, #2
   1191c:	add	r1, r1, r1, lsr #31
   11920:	asrs	r1, r1, #1
   11924:	bxeq	lr
   11928:	ldr	r3, [pc, #16]	; 11940 <__assert_fail@plt+0xcc>
   1192c:	cmp	r3, #0
   11930:	bxeq	lr
   11934:	bx	r3
   11938:	andeq	r5, r3, ip, lsr #3
   1193c:	andeq	r5, r3, ip, lsr #3
   11940:	andeq	r0, r0, r0
   11944:	push	{r4, lr}
   11948:	ldr	r4, [pc, #24]	; 11968 <__assert_fail@plt+0xf4>
   1194c:	ldrb	r3, [r4]
   11950:	cmp	r3, #0
   11954:	popne	{r4, pc}
   11958:	bl	118e0 <__assert_fail@plt+0x6c>
   1195c:	mov	r3, #1
   11960:	strb	r3, [r4]
   11964:	pop	{r4, pc}
   11968:	andeq	r5, r3, ip, asr #3
   1196c:	b	1190c <__assert_fail@plt+0x98>
   11970:	push	{fp, lr}
   11974:	mov	fp, sp
   11978:	sub	sp, sp, #64	; 0x40
   1197c:	str	r0, [fp, #-4]
   11980:	ldr	r0, [fp, #-4]
   11984:	cmp	r0, #0
   11988:	beq	119d8 <__assert_fail@plt+0x164>
   1198c:	b	11990 <__assert_fail@plt+0x11c>
   11990:	movw	r0, #20928	; 0x51c0
   11994:	movt	r0, #3
   11998:	ldr	r0, [r0]
   1199c:	movw	r1, #13268	; 0x33d4
   119a0:	movt	r1, #2
   119a4:	str	r0, [fp, #-8]
   119a8:	mov	r0, r1
   119ac:	bl	116b8 <gettext@plt>
   119b0:	movw	r1, #21004	; 0x520c
   119b4:	movt	r1, #3
   119b8:	ldr	r2, [r1]
   119bc:	ldr	r1, [fp, #-8]
   119c0:	str	r0, [fp, #-12]
   119c4:	mov	r0, r1
   119c8:	ldr	r1, [fp, #-12]
   119cc:	bl	116f4 <fprintf@plt>
   119d0:	str	r0, [fp, #-16]
   119d4:	b	11b78 <__assert_fail@plt+0x304>
   119d8:	movw	r0, #13307	; 0x33fb
   119dc:	movt	r0, #2
   119e0:	bl	116b8 <gettext@plt>
   119e4:	movw	lr, #21004	; 0x520c
   119e8:	movt	lr, #3
   119ec:	ldr	r1, [lr]
   119f0:	ldr	r2, [lr]
   119f4:	ldr	r3, [lr]
   119f8:	bl	114e4 <printf@plt>
   119fc:	movw	r1, #13465	; 0x3499
   11a00:	movt	r1, #2
   11a04:	str	r0, [fp, #-20]	; 0xffffffec
   11a08:	mov	r0, r1
   11a0c:	bl	116b8 <gettext@plt>
   11a10:	movw	r1, #20932	; 0x51c4
   11a14:	movt	r1, #3
   11a18:	ldr	r1, [r1]
   11a1c:	bl	114b4 <fputs_unlocked@plt>
   11a20:	str	r0, [fp, #-24]	; 0xffffffe8
   11a24:	bl	11b80 <__assert_fail@plt+0x30c>
   11a28:	movw	r0, #13604	; 0x3524
   11a2c:	movt	r0, #2
   11a30:	bl	116b8 <gettext@plt>
   11a34:	movw	r1, #20932	; 0x51c4
   11a38:	movt	r1, #3
   11a3c:	ldr	r1, [r1]
   11a40:	bl	114b4 <fputs_unlocked@plt>
   11a44:	movw	r1, #13835	; 0x360b
   11a48:	movt	r1, #2
   11a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   11a50:	mov	r0, r1
   11a54:	bl	116b8 <gettext@plt>
   11a58:	movw	r1, #20932	; 0x51c4
   11a5c:	movt	r1, #3
   11a60:	ldr	r1, [r1]
   11a64:	bl	114b4 <fputs_unlocked@plt>
   11a68:	movw	r1, #14118	; 0x3726
   11a6c:	movt	r1, #2
   11a70:	str	r0, [sp, #32]
   11a74:	mov	r0, r1
   11a78:	bl	116b8 <gettext@plt>
   11a7c:	movw	r1, #20932	; 0x51c4
   11a80:	movt	r1, #3
   11a84:	ldr	r1, [r1]
   11a88:	bl	114b4 <fputs_unlocked@plt>
   11a8c:	movw	r1, #14246	; 0x37a6
   11a90:	movt	r1, #2
   11a94:	str	r0, [sp, #28]
   11a98:	mov	r0, r1
   11a9c:	bl	116b8 <gettext@plt>
   11aa0:	movw	r1, #20932	; 0x51c4
   11aa4:	movt	r1, #3
   11aa8:	ldr	r1, [r1]
   11aac:	bl	114b4 <fputs_unlocked@plt>
   11ab0:	movw	r1, #14365	; 0x381d
   11ab4:	movt	r1, #2
   11ab8:	str	r0, [sp, #24]
   11abc:	mov	r0, r1
   11ac0:	bl	116b8 <gettext@plt>
   11ac4:	movw	r1, #20932	; 0x51c4
   11ac8:	movt	r1, #3
   11acc:	ldr	r1, [r1]
   11ad0:	bl	114b4 <fputs_unlocked@plt>
   11ad4:	movw	r1, #14436	; 0x3864
   11ad8:	movt	r1, #2
   11adc:	str	r0, [sp, #20]
   11ae0:	mov	r0, r1
   11ae4:	bl	116b8 <gettext@plt>
   11ae8:	movw	r1, #20932	; 0x51c4
   11aec:	movt	r1, #3
   11af0:	ldr	r1, [r1]
   11af4:	bl	114b4 <fputs_unlocked@plt>
   11af8:	movw	r1, #14507	; 0x38ab
   11afc:	movt	r1, #2
   11b00:	str	r0, [sp, #16]
   11b04:	mov	r0, r1
   11b08:	bl	116b8 <gettext@plt>
   11b0c:	movw	r1, #20932	; 0x51c4
   11b10:	movt	r1, #3
   11b14:	ldr	r1, [r1]
   11b18:	bl	114b4 <fputs_unlocked@plt>
   11b1c:	movw	r1, #14972	; 0x3a7c
   11b20:	movt	r1, #2
   11b24:	str	r0, [sp, #12]
   11b28:	mov	r0, r1
   11b2c:	bl	116b8 <gettext@plt>
   11b30:	movw	r1, #20932	; 0x51c4
   11b34:	movt	r1, #3
   11b38:	ldr	r1, [r1]
   11b3c:	bl	114b4 <fputs_unlocked@plt>
   11b40:	movw	r1, #15017	; 0x3aa9
   11b44:	movt	r1, #2
   11b48:	str	r0, [sp, #8]
   11b4c:	mov	r0, r1
   11b50:	bl	116b8 <gettext@plt>
   11b54:	movw	r1, #20932	; 0x51c4
   11b58:	movt	r1, #3
   11b5c:	ldr	r1, [r1]
   11b60:	bl	114b4 <fputs_unlocked@plt>
   11b64:	movw	r1, #15071	; 0x3adf
   11b68:	movt	r1, #2
   11b6c:	str	r0, [sp, #4]
   11b70:	mov	r0, r1
   11b74:	bl	11bb4 <__assert_fail@plt+0x340>
   11b78:	ldr	r0, [fp, #-4]
   11b7c:	bl	116a0 <exit@plt>
   11b80:	push	{fp, lr}
   11b84:	mov	fp, sp
   11b88:	sub	sp, sp, #8
   11b8c:	movw	r0, #15392	; 0x3c20
   11b90:	movt	r0, #2
   11b94:	bl	116b8 <gettext@plt>
   11b98:	movw	lr, #20932	; 0x51c4
   11b9c:	movt	lr, #3
   11ba0:	ldr	r1, [lr]
   11ba4:	bl	114b4 <fputs_unlocked@plt>
   11ba8:	str	r0, [sp, #4]
   11bac:	mov	sp, fp
   11bb0:	pop	{fp, pc}
   11bb4:	push	{fp, lr}
   11bb8:	mov	fp, sp
   11bbc:	sub	sp, sp, #96	; 0x60
   11bc0:	add	r1, sp, #36	; 0x24
   11bc4:	movw	r2, #16708	; 0x4144
   11bc8:	movt	r2, #2
   11bcc:	str	r0, [fp, #-4]
   11bd0:	mov	r0, r1
   11bd4:	str	r1, [sp, #20]
   11bd8:	mov	r1, r2
   11bdc:	movw	r2, #56	; 0x38
   11be0:	bl	1152c <memcpy@plt>
   11be4:	ldr	r0, [fp, #-4]
   11be8:	str	r0, [sp, #32]
   11bec:	ldr	r0, [sp, #20]
   11bf0:	str	r0, [sp, #28]
   11bf4:	ldr	r0, [sp, #28]
   11bf8:	ldr	r0, [r0]
   11bfc:	movw	r1, #0
   11c00:	cmp	r0, r1
   11c04:	movw	r0, #0
   11c08:	str	r0, [sp, #16]
   11c0c:	beq	11c38 <__assert_fail@plt+0x3c4>
   11c10:	ldr	r0, [fp, #-4]
   11c14:	ldr	r1, [sp, #28]
   11c18:	ldr	r1, [r1]
   11c1c:	bl	114d8 <strcmp@plt>
   11c20:	cmp	r0, #0
   11c24:	movw	r0, #0
   11c28:	moveq	r0, #1
   11c2c:	mvn	r1, #0
   11c30:	eor	r0, r0, r1
   11c34:	str	r0, [sp, #16]
   11c38:	ldr	r0, [sp, #16]
   11c3c:	tst	r0, #1
   11c40:	beq	11c54 <__assert_fail@plt+0x3e0>
   11c44:	ldr	r0, [sp, #28]
   11c48:	add	r0, r0, #8
   11c4c:	str	r0, [sp, #28]
   11c50:	b	11bf4 <__assert_fail@plt+0x380>
   11c54:	ldr	r0, [sp, #28]
   11c58:	ldr	r0, [r0, #4]
   11c5c:	movw	r1, #0
   11c60:	cmp	r0, r1
   11c64:	beq	11c74 <__assert_fail@plt+0x400>
   11c68:	ldr	r0, [sp, #28]
   11c6c:	ldr	r0, [r0, #4]
   11c70:	str	r0, [sp, #32]
   11c74:	movw	r0, #15562	; 0x3cca
   11c78:	movt	r0, #2
   11c7c:	bl	116b8 <gettext@plt>
   11c80:	movw	r1, #15116	; 0x3b0c
   11c84:	movt	r1, #2
   11c88:	movw	r2, #15585	; 0x3ce1
   11c8c:	movt	r2, #2
   11c90:	bl	114e4 <printf@plt>
   11c94:	movw	r1, #5
   11c98:	str	r0, [sp, #12]
   11c9c:	mov	r0, r1
   11ca0:	movw	r1, #0
   11ca4:	bl	11778 <setlocale@plt>
   11ca8:	str	r0, [sp, #24]
   11cac:	ldr	r0, [sp, #24]
   11cb0:	movw	r1, #0
   11cb4:	cmp	r0, r1
   11cb8:	beq	11cf8 <__assert_fail@plt+0x484>
   11cbc:	ldr	r0, [sp, #24]
   11cc0:	movw	r1, #15625	; 0x3d09
   11cc4:	movt	r1, #2
   11cc8:	movw	r2, #3
   11ccc:	bl	1182c <strncmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	beq	11cf8 <__assert_fail@plt+0x484>
   11cd8:	movw	r0, #15629	; 0x3d0d
   11cdc:	movt	r0, #2
   11ce0:	bl	116b8 <gettext@plt>
   11ce4:	movw	lr, #20932	; 0x51c4
   11ce8:	movt	lr, #3
   11cec:	ldr	r1, [lr]
   11cf0:	bl	114b4 <fputs_unlocked@plt>
   11cf4:	str	r0, [sp, #8]
   11cf8:	movw	r0, #15700	; 0x3d54
   11cfc:	movt	r0, #2
   11d00:	bl	116b8 <gettext@plt>
   11d04:	ldr	r2, [fp, #-4]
   11d08:	movw	r1, #15585	; 0x3ce1
   11d0c:	movt	r1, #2
   11d10:	bl	114e4 <printf@plt>
   11d14:	movw	r1, #15727	; 0x3d6f
   11d18:	movt	r1, #2
   11d1c:	str	r0, [sp, #4]
   11d20:	mov	r0, r1
   11d24:	bl	116b8 <gettext@plt>
   11d28:	ldr	r1, [sp, #32]
   11d2c:	ldr	r2, [sp, #32]
   11d30:	ldr	lr, [fp, #-4]
   11d34:	cmp	r2, lr
   11d38:	movw	r2, #0
   11d3c:	moveq	r2, #1
   11d40:	tst	r2, #1
   11d44:	movw	r2, #14971	; 0x3a7b
   11d48:	movt	r2, #2
   11d4c:	movw	lr, #15495	; 0x3c87
   11d50:	movt	lr, #2
   11d54:	movne	r2, lr
   11d58:	bl	114e4 <printf@plt>
   11d5c:	str	r0, [sp]
   11d60:	mov	sp, fp
   11d64:	pop	{fp, pc}
   11d68:	push	{fp, lr}
   11d6c:	mov	fp, sp
   11d70:	sub	sp, sp, #136	; 0x88
   11d74:	movw	r2, #0
   11d78:	str	r2, [fp, #-4]
   11d7c:	str	r0, [fp, #-8]
   11d80:	str	r1, [fp, #-12]
   11d84:	movw	r0, #16
   11d88:	str	r0, [fp, #-16]
   11d8c:	mvn	r0, #0
   11d90:	str	r0, [fp, #-20]	; 0xffffffec
   11d94:	movw	r0, #0
   11d98:	strb	r0, [fp, #-22]	; 0xffffffea
   11d9c:	strb	r0, [fp, #-23]	; 0xffffffe9
   11da0:	str	r2, [fp, #-28]	; 0xffffffe4
   11da4:	ldr	r0, [fp, #-12]
   11da8:	ldr	r0, [r0]
   11dac:	bl	18e60 <__assert_fail@plt+0x75ec>
   11db0:	movw	r0, #6
   11db4:	movw	r1, #14971	; 0x3a7b
   11db8:	movt	r1, #2
   11dbc:	bl	11778 <setlocale@plt>
   11dc0:	movw	r1, #15120	; 0x3b10
   11dc4:	movt	r1, #2
   11dc8:	str	r0, [fp, #-40]	; 0xffffffd8
   11dcc:	mov	r0, r1
   11dd0:	movw	r1, #15077	; 0x3ae5
   11dd4:	movt	r1, #2
   11dd8:	bl	117f0 <bindtextdomain@plt>
   11ddc:	movw	r1, #15120	; 0x3b10
   11de0:	movt	r1, #2
   11de4:	str	r0, [fp, #-44]	; 0xffffffd4
   11de8:	mov	r0, r1
   11dec:	bl	1158c <textdomain@plt>
   11df0:	movw	r1, #13048	; 0x32f8
   11df4:	movt	r1, #1
   11df8:	str	r0, [fp, #-48]	; 0xffffffd0
   11dfc:	mov	r0, r1
   11e00:	bl	23358 <__assert_fail@plt+0x11ae4>
   11e04:	str	r0, [fp, #-52]	; 0xffffffcc
   11e08:	ldr	r0, [fp, #-8]
   11e0c:	ldr	r1, [fp, #-12]
   11e10:	movw	r2, #15101	; 0x3afd
   11e14:	movt	r2, #2
   11e18:	movw	r3, #16484	; 0x4064
   11e1c:	movt	r3, #2
   11e20:	movw	ip, #0
   11e24:	str	ip, [sp]
   11e28:	bl	1167c <getopt_long@plt>
   11e2c:	str	r0, [fp, #-32]	; 0xffffffe0
   11e30:	cmn	r0, #1
   11e34:	beq	120e4 <__assert_fail@plt+0x870>
   11e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e3c:	cmn	r0, #3
   11e40:	str	r0, [fp, #-56]	; 0xffffffc8
   11e44:	beq	12084 <__assert_fail@plt+0x810>
   11e48:	b	11e4c <__assert_fail@plt+0x5d8>
   11e4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e50:	cmn	r0, #2
   11e54:	beq	1207c <__assert_fail@plt+0x808>
   11e58:	b	11e5c <__assert_fail@plt+0x5e8>
   11e5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e60:	cmp	r0, #72	; 0x48
   11e64:	beq	11f58 <__assert_fail@plt+0x6e4>
   11e68:	b	11e6c <__assert_fail@plt+0x5f8>
   11e6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e70:	cmp	r0, #76	; 0x4c
   11e74:	beq	11f64 <__assert_fail@plt+0x6f0>
   11e78:	b	11e7c <__assert_fail@plt+0x608>
   11e7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e80:	cmp	r0, #80	; 0x50
   11e84:	beq	11f70 <__assert_fail@plt+0x6fc>
   11e88:	b	11e8c <__assert_fail@plt+0x618>
   11e8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e90:	cmp	r0, #82	; 0x52
   11e94:	beq	11fc0 <__assert_fail@plt+0x74c>
   11e98:	b	11e9c <__assert_fail@plt+0x628>
   11e9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ea0:	cmp	r0, #102	; 0x66
   11ea4:	beq	11fd4 <__assert_fail@plt+0x760>
   11ea8:	b	11eac <__assert_fail@plt+0x638>
   11eac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11eb0:	cmp	r0, #104	; 0x68
   11eb4:	beq	11f7c <__assert_fail@plt+0x708>
   11eb8:	b	11ebc <__assert_fail@plt+0x648>
   11ebc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ec0:	cmp	r0, #108	; 0x6c
   11ec4:	beq	12058 <__assert_fail@plt+0x7e4>
   11ec8:	b	11ecc <__assert_fail@plt+0x658>
   11ecc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ed0:	cmp	r0, #114	; 0x72
   11ed4:	beq	12010 <__assert_fail@plt+0x79c>
   11ed8:	b	11edc <__assert_fail@plt+0x668>
   11edc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ee0:	cmp	r0, #116	; 0x74
   11ee4:	beq	12034 <__assert_fail@plt+0x7c0>
   11ee8:	b	11eec <__assert_fail@plt+0x678>
   11eec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ef0:	cmp	r0, #117	; 0x75
   11ef4:	beq	11fec <__assert_fail@plt+0x778>
   11ef8:	b	11efc <__assert_fail@plt+0x688>
   11efc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11f00:	cmp	r0, #118	; 0x76
   11f04:	beq	11fd8 <__assert_fail@plt+0x764>
   11f08:	b	11f0c <__assert_fail@plt+0x698>
   11f0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11f10:	cmp	r0, #256	; 0x100
   11f14:	beq	11f88 <__assert_fail@plt+0x714>
   11f18:	b	11f1c <__assert_fail@plt+0x6a8>
   11f1c:	movw	r0, #257	; 0x101
   11f20:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11f24:	cmp	r1, r0
   11f28:	beq	11f94 <__assert_fail@plt+0x720>
   11f2c:	b	11f30 <__assert_fail@plt+0x6bc>
   11f30:	movw	r0, #258	; 0x102
   11f34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11f38:	cmp	r1, r0
   11f3c:	beq	11fa0 <__assert_fail@plt+0x72c>
   11f40:	b	11f44 <__assert_fail@plt+0x6d0>
   11f44:	movw	r0, #259	; 0x103
   11f48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11f4c:	cmp	r1, r0
   11f50:	beq	11fac <__assert_fail@plt+0x738>
   11f54:	b	120d8 <__assert_fail@plt+0x864>
   11f58:	movw	r0, #17
   11f5c:	str	r0, [fp, #-16]
   11f60:	b	120e0 <__assert_fail@plt+0x86c>
   11f64:	movw	r0, #2
   11f68:	str	r0, [fp, #-16]
   11f6c:	b	120e0 <__assert_fail@plt+0x86c>
   11f70:	movw	r0, #16
   11f74:	str	r0, [fp, #-16]
   11f78:	b	120e0 <__assert_fail@plt+0x86c>
   11f7c:	movw	r0, #0
   11f80:	str	r0, [fp, #-20]	; 0xffffffec
   11f84:	b	120e0 <__assert_fail@plt+0x86c>
   11f88:	movw	r0, #1
   11f8c:	str	r0, [fp, #-20]	; 0xffffffec
   11f90:	b	120e0 <__assert_fail@plt+0x86c>
   11f94:	movw	r0, #0
   11f98:	strb	r0, [fp, #-22]	; 0xffffffea
   11f9c:	b	120e0 <__assert_fail@plt+0x86c>
   11fa0:	movw	r0, #1
   11fa4:	strb	r0, [fp, #-22]	; 0xffffffea
   11fa8:	b	120e0 <__assert_fail@plt+0x86c>
   11fac:	movw	r0, #20936	; 0x51c8
   11fb0:	movt	r0, #3
   11fb4:	ldr	r0, [r0]
   11fb8:	str	r0, [fp, #-28]	; 0xffffffe4
   11fbc:	b	120e0 <__assert_fail@plt+0x86c>
   11fc0:	movw	r0, #20944	; 0x51d0
   11fc4:	movt	r0, #3
   11fc8:	movw	r1, #1
   11fcc:	strb	r1, [r0]
   11fd0:	b	120e0 <__assert_fail@plt+0x86c>
   11fd4:	b	120e0 <__assert_fail@plt+0x86c>
   11fd8:	movw	r0, #20945	; 0x51d1
   11fdc:	movt	r0, #3
   11fe0:	movw	r1, #1
   11fe4:	strb	r1, [r0]
   11fe8:	b	120e0 <__assert_fail@plt+0x86c>
   11fec:	movw	r0, #20936	; 0x51c8
   11ff0:	movt	r0, #3
   11ff4:	ldr	r0, [r0]
   11ff8:	movw	r1, #20948	; 0x51d4
   11ffc:	movt	r1, #3
   12000:	str	r0, [r1]
   12004:	movw	r0, #1
   12008:	strb	r0, [fp, #-23]	; 0xffffffe9
   1200c:	b	120e0 <__assert_fail@plt+0x86c>
   12010:	movw	r0, #20936	; 0x51c8
   12014:	movt	r0, #3
   12018:	ldr	r0, [r0]
   1201c:	movw	r1, #20952	; 0x51d8
   12020:	movt	r1, #3
   12024:	str	r0, [r1]
   12028:	movw	r0, #1
   1202c:	strb	r0, [fp, #-23]	; 0xffffffe9
   12030:	b	120e0 <__assert_fail@plt+0x86c>
   12034:	movw	r0, #20936	; 0x51c8
   12038:	movt	r0, #3
   1203c:	ldr	r0, [r0]
   12040:	movw	r1, #20956	; 0x51dc
   12044:	movt	r1, #3
   12048:	str	r0, [r1]
   1204c:	movw	r0, #1
   12050:	strb	r0, [fp, #-23]	; 0xffffffe9
   12054:	b	120e0 <__assert_fail@plt+0x86c>
   12058:	movw	r0, #20936	; 0x51c8
   1205c:	movt	r0, #3
   12060:	ldr	r0, [r0]
   12064:	movw	r1, #20960	; 0x51e0
   12068:	movt	r1, #3
   1206c:	str	r0, [r1]
   12070:	movw	r0, #1
   12074:	strb	r0, [fp, #-23]	; 0xffffffe9
   12078:	b	120e0 <__assert_fail@plt+0x86c>
   1207c:	movw	r0, #0
   12080:	bl	11970 <__assert_fail@plt+0xfc>
   12084:	movw	r0, #20932	; 0x51c4
   12088:	movt	r0, #3
   1208c:	ldr	r0, [r0]
   12090:	movw	r1, #20836	; 0x5164
   12094:	movt	r1, #3
   12098:	ldr	r3, [r1]
   1209c:	movw	r1, #15071	; 0x3adf
   120a0:	movt	r1, #2
   120a4:	movw	r2, #15116	; 0x3b0c
   120a8:	movt	r2, #2
   120ac:	movw	ip, #15130	; 0x3b1a
   120b0:	movt	ip, #2
   120b4:	str	ip, [sp]
   120b8:	movw	ip, #15144	; 0x3b28
   120bc:	movt	ip, #2
   120c0:	str	ip, [sp, #4]
   120c4:	movw	ip, #0
   120c8:	str	ip, [sp, #8]
   120cc:	bl	1c92c <__assert_fail@plt+0xb0b8>
   120d0:	movw	r0, #0
   120d4:	bl	116a0 <exit@plt>
   120d8:	movw	r0, #1
   120dc:	bl	11970 <__assert_fail@plt+0xfc>
   120e0:	b	11e08 <__assert_fail@plt+0x594>
   120e4:	movw	r0, #20944	; 0x51d0
   120e8:	movt	r0, #3
   120ec:	ldrb	r0, [r0]
   120f0:	tst	r0, #1
   120f4:	beq	1218c <__assert_fail@plt+0x918>
   120f8:	ldr	r0, [fp, #-16]
   120fc:	cmp	r0, #16
   12100:	bne	12148 <__assert_fail@plt+0x8d4>
   12104:	ldr	r0, [fp, #-20]	; 0xffffffec
   12108:	cmp	r0, #1
   1210c:	bne	12134 <__assert_fail@plt+0x8c0>
   12110:	movw	r0, #15157	; 0x3b35
   12114:	movt	r0, #2
   12118:	bl	116b8 <gettext@plt>
   1211c:	movw	lr, #1
   12120:	str	r0, [fp, #-60]	; 0xffffffc4
   12124:	mov	r0, lr
   12128:	movw	r1, #0
   1212c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12130:	bl	11610 <error@plt>
   12134:	movw	r0, #20964	; 0x51e4
   12138:	movt	r0, #3
   1213c:	movw	r1, #0
   12140:	strb	r1, [r0]
   12144:	b	12188 <__assert_fail@plt+0x914>
   12148:	ldr	r0, [fp, #-20]	; 0xffffffec
   1214c:	cmp	r0, #0
   12150:	bne	12178 <__assert_fail@plt+0x904>
   12154:	movw	r0, #15199	; 0x3b5f
   12158:	movt	r0, #2
   1215c:	bl	116b8 <gettext@plt>
   12160:	movw	lr, #1
   12164:	str	r0, [fp, #-64]	; 0xffffffc0
   12168:	mov	r0, lr
   1216c:	movw	r1, #0
   12170:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12174:	bl	11610 <error@plt>
   12178:	movw	r0, #20964	; 0x51e4
   1217c:	movt	r0, #3
   12180:	movw	r1, #1
   12184:	strb	r1, [r0]
   12188:	b	121b4 <__assert_fail@plt+0x940>
   1218c:	movw	r0, #16
   12190:	str	r0, [fp, #-16]
   12194:	ldr	r0, [fp, #-20]	; 0xffffffec
   12198:	cmp	r0, #0
   1219c:	movw	r0, #0
   121a0:	movne	r0, #1
   121a4:	and	r0, r0, #1
   121a8:	movw	r1, #20964	; 0x51e4
   121ac:	movt	r1, #3
   121b0:	strb	r0, [r1]
   121b4:	ldr	r0, [fp, #-8]
   121b8:	movw	r1, #20920	; 0x51b8
   121bc:	movt	r1, #3
   121c0:	ldr	r1, [r1]
   121c4:	sub	r0, r0, r1
   121c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121cc:	movw	r2, #0
   121d0:	cmp	r1, r2
   121d4:	movw	r1, #1
   121d8:	str	r0, [sp, #68]	; 0x44
   121dc:	str	r1, [sp, #64]	; 0x40
   121e0:	bne	121ec <__assert_fail@plt+0x978>
   121e4:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   121e8:	str	r0, [sp, #64]	; 0x40
   121ec:	ldr	r0, [sp, #64]	; 0x40
   121f0:	tst	r0, #1
   121f4:	movw	r0, #1
   121f8:	moveq	r0, #2
   121fc:	ldr	r1, [sp, #68]	; 0x44
   12200:	cmp	r1, r0
   12204:	bge	12294 <__assert_fail@plt+0xa20>
   12208:	ldr	r0, [fp, #-8]
   1220c:	movw	r1, #20920	; 0x51b8
   12210:	movt	r1, #3
   12214:	ldr	r1, [r1]
   12218:	cmp	r0, r1
   1221c:	bgt	12248 <__assert_fail@plt+0x9d4>
   12220:	movw	r0, #15217	; 0x3b71
   12224:	movt	r0, #2
   12228:	bl	116b8 <gettext@plt>
   1222c:	movw	lr, #0
   12230:	str	r0, [sp, #60]	; 0x3c
   12234:	mov	r0, lr
   12238:	mov	r1, lr
   1223c:	ldr	r2, [sp, #60]	; 0x3c
   12240:	bl	11610 <error@plt>
   12244:	b	1228c <__assert_fail@plt+0xa18>
   12248:	movw	r0, #15233	; 0x3b81
   1224c:	movt	r0, #2
   12250:	bl	116b8 <gettext@plt>
   12254:	ldr	lr, [fp, #-12]
   12258:	ldr	r1, [fp, #-8]
   1225c:	sub	r1, r1, #1
   12260:	add	r1, lr, r1, lsl #2
   12264:	ldr	r1, [r1]
   12268:	str	r0, [sp, #56]	; 0x38
   1226c:	mov	r0, r1
   12270:	bl	1b4bc <__assert_fail@plt+0x9c48>
   12274:	movw	r1, #0
   12278:	str	r0, [sp, #52]	; 0x34
   1227c:	mov	r0, r1
   12280:	ldr	r2, [sp, #56]	; 0x38
   12284:	ldr	r3, [sp, #52]	; 0x34
   12288:	bl	11610 <error@plt>
   1228c:	movw	r0, #1
   12290:	bl	11970 <__assert_fail@plt+0xfc>
   12294:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12298:	movw	r1, #0
   1229c:	cmp	r0, r1
   122a0:	beq	1231c <__assert_fail@plt+0xaa8>
   122a4:	movw	r0, #0
   122a8:	str	r0, [fp, #-36]	; 0xffffffdc
   122ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   122b0:	sub	r1, fp, #36	; 0x24
   122b4:	bl	1bfe4 <__assert_fail@plt+0xa770>
   122b8:	cmp	r0, #0
   122bc:	bge	12308 <__assert_fail@plt+0xa94>
   122c0:	bl	11700 <__errno_location@plt>
   122c4:	ldr	r1, [r0]
   122c8:	movw	r0, #15258	; 0x3b9a
   122cc:	movt	r0, #2
   122d0:	str	r1, [sp, #48]	; 0x30
   122d4:	bl	116b8 <gettext@plt>
   122d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122dc:	movw	lr, #4
   122e0:	str	r0, [sp, #44]	; 0x2c
   122e4:	mov	r0, lr
   122e8:	bl	1b124 <__assert_fail@plt+0x98b0>
   122ec:	movw	r1, #1
   122f0:	str	r0, [sp, #40]	; 0x28
   122f4:	mov	r0, r1
   122f8:	ldr	r1, [sp, #48]	; 0x30
   122fc:	ldr	r2, [sp, #44]	; 0x2c
   12300:	ldr	r3, [sp, #40]	; 0x28
   12304:	bl	11610 <error@plt>
   12308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1230c:	movw	r1, #20968	; 0x51e8
   12310:	movt	r1, #3
   12314:	str	r0, [r1]
   12318:	b	123e4 <__assert_fail@plt+0xb70>
   1231c:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   12320:	tst	r0, #1
   12324:	beq	1233c <__assert_fail@plt+0xac8>
   12328:	movw	r0, #20968	; 0x51e8
   1232c:	movt	r0, #3
   12330:	movw	r1, #0
   12334:	str	r1, [r0]
   12338:	b	123e0 <__assert_fail@plt+0xb6c>
   1233c:	ldr	r0, [fp, #-12]
   12340:	movw	r1, #20920	; 0x51b8
   12344:	movt	r1, #3
   12348:	ldr	r2, [r1]
   1234c:	add	r3, r2, #1
   12350:	str	r3, [r1]
   12354:	add	r0, r0, r2, lsl #2
   12358:	ldr	r0, [r0]
   1235c:	movw	r1, #20968	; 0x51e8
   12360:	movt	r1, #3
   12364:	str	r0, [r1]
   12368:	bl	114cc <is_selinux_enabled@plt>
   1236c:	movw	r1, #0
   12370:	cmp	r1, r0
   12374:	bge	123dc <__assert_fail@plt+0xb68>
   12378:	movw	r0, #20968	; 0x51e8
   1237c:	movt	r0, #3
   12380:	ldr	r0, [r0]
   12384:	bl	1161c <security_check_context@plt>
   12388:	cmp	r0, #0
   1238c:	bge	123dc <__assert_fail@plt+0xb68>
   12390:	bl	11700 <__errno_location@plt>
   12394:	ldr	r1, [r0]
   12398:	movw	r0, #15295	; 0x3bbf
   1239c:	movt	r0, #2
   123a0:	str	r1, [sp, #36]	; 0x24
   123a4:	bl	116b8 <gettext@plt>
   123a8:	movw	r1, #20968	; 0x51e8
   123ac:	movt	r1, #3
   123b0:	ldr	r1, [r1]
   123b4:	str	r0, [sp, #32]
   123b8:	mov	r0, r1
   123bc:	bl	1b4bc <__assert_fail@plt+0x9c48>
   123c0:	movw	r1, #1
   123c4:	str	r0, [sp, #28]
   123c8:	mov	r0, r1
   123cc:	ldr	r1, [sp, #36]	; 0x24
   123d0:	ldr	r2, [sp, #32]
   123d4:	ldr	r3, [sp, #28]
   123d8:	bl	11610 <error@plt>
   123dc:	b	123e0 <__assert_fail@plt+0xb6c>
   123e0:	b	123e4 <__assert_fail@plt+0xb70>
   123e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   123e8:	movw	r1, #0
   123ec:	cmp	r0, r1
   123f0:	beq	1242c <__assert_fail@plt+0xbb8>
   123f4:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   123f8:	tst	r0, #1
   123fc:	beq	1242c <__assert_fail@plt+0xbb8>
   12400:	movw	r0, #15315	; 0x3bd3
   12404:	movt	r0, #2
   12408:	bl	116b8 <gettext@plt>
   1240c:	movw	lr, #0
   12410:	str	r0, [sp, #24]
   12414:	mov	r0, lr
   12418:	mov	r1, lr
   1241c:	ldr	r2, [sp, #24]
   12420:	bl	11610 <error@plt>
   12424:	movw	r0, #1
   12428:	bl	11970 <__assert_fail@plt+0xfc>
   1242c:	movw	r0, #20944	; 0x51d0
   12430:	movt	r0, #3
   12434:	ldrb	r0, [r0]
   12438:	tst	r0, #1
   1243c:	beq	124c4 <__assert_fail@plt+0xc50>
   12440:	ldrb	r0, [fp, #-22]	; 0xffffffea
   12444:	tst	r0, #1
   12448:	beq	124c4 <__assert_fail@plt+0xc50>
   1244c:	movw	r0, #20976	; 0x51f0
   12450:	movt	r0, #3
   12454:	bl	1b5f4 <__assert_fail@plt+0x9d80>
   12458:	movw	lr, #20992	; 0x5200
   1245c:	movt	lr, #3
   12460:	str	r0, [lr]
   12464:	ldr	r0, [lr]
   12468:	movw	lr, #0
   1246c:	cmp	r0, lr
   12470:	bne	124c0 <__assert_fail@plt+0xc4c>
   12474:	bl	11700 <__errno_location@plt>
   12478:	ldr	r1, [r0]
   1247c:	movw	r0, #15361	; 0x3c01
   12480:	movt	r0, #2
   12484:	str	r1, [sp, #20]
   12488:	bl	116b8 <gettext@plt>
   1248c:	movw	r1, #4
   12490:	str	r0, [sp, #16]
   12494:	mov	r0, r1
   12498:	movw	r1, #18161	; 0x46f1
   1249c:	movt	r1, #2
   124a0:	bl	1b124 <__assert_fail@plt+0x98b0>
   124a4:	movw	r1, #1
   124a8:	str	r0, [sp, #12]
   124ac:	mov	r0, r1
   124b0:	ldr	r1, [sp, #20]
   124b4:	ldr	r2, [sp, #16]
   124b8:	ldr	r3, [sp, #12]
   124bc:	bl	11610 <error@plt>
   124c0:	b	124d4 <__assert_fail@plt+0xc60>
   124c4:	movw	r0, #20992	; 0x5200
   124c8:	movt	r0, #3
   124cc:	movw	r1, #0
   124d0:	str	r1, [r0]
   124d4:	ldr	r0, [fp, #-12]
   124d8:	movw	r1, #20920	; 0x51b8
   124dc:	movt	r1, #3
   124e0:	ldr	r1, [r1]
   124e4:	add	r0, r0, r1, lsl #2
   124e8:	ldr	r1, [fp, #-16]
   124ec:	orr	r1, r1, #8
   124f0:	bl	12514 <__assert_fail@plt+0xca0>
   124f4:	and	r0, r0, #1
   124f8:	strb	r0, [fp, #-21]	; 0xffffffeb
   124fc:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   12500:	tst	r0, #1
   12504:	movw	r0, #0
   12508:	moveq	r0, #1
   1250c:	mov	sp, fp
   12510:	pop	{fp, pc}
   12514:	push	{fp, lr}
   12518:	mov	fp, sp
   1251c:	sub	sp, sp, #40	; 0x28
   12520:	str	r0, [fp, #-4]
   12524:	str	r1, [fp, #-8]
   12528:	movw	r0, #1
   1252c:	strb	r0, [fp, #-9]
   12530:	ldr	r0, [fp, #-4]
   12534:	ldr	r1, [fp, #-8]
   12538:	movw	r2, #0
   1253c:	bl	1f8e8 <__assert_fail@plt+0xe074>
   12540:	str	r0, [fp, #-16]
   12544:	ldr	r0, [fp, #-16]
   12548:	bl	14524 <__assert_fail@plt+0x2cb0>
   1254c:	str	r0, [sp, #20]
   12550:	ldr	r0, [sp, #20]
   12554:	movw	lr, #0
   12558:	cmp	r0, lr
   1255c:	bne	125ac <__assert_fail@plt+0xd38>
   12560:	bl	11700 <__errno_location@plt>
   12564:	ldr	r0, [r0]
   12568:	cmp	r0, #0
   1256c:	beq	125a8 <__assert_fail@plt+0xd34>
   12570:	bl	11700 <__errno_location@plt>
   12574:	ldr	r1, [r0]
   12578:	movw	r0, #15862	; 0x3df6
   1257c:	movt	r0, #2
   12580:	str	r1, [sp, #16]
   12584:	bl	116b8 <gettext@plt>
   12588:	movw	r1, #0
   1258c:	str	r0, [sp, #12]
   12590:	mov	r0, r1
   12594:	ldr	r1, [sp, #16]
   12598:	ldr	r2, [sp, #12]
   1259c:	bl	11610 <error@plt>
   125a0:	movw	r0, #0
   125a4:	strb	r0, [fp, #-9]
   125a8:	b	125e0 <__assert_fail@plt+0xd6c>
   125ac:	ldr	r0, [fp, #-16]
   125b0:	ldr	r1, [sp, #20]
   125b4:	bl	12638 <__assert_fail@plt+0xdc4>
   125b8:	and	r0, r0, #1
   125bc:	ldrb	r1, [fp, #-9]
   125c0:	and	r1, r1, #1
   125c4:	and	r0, r1, r0
   125c8:	cmp	r0, #0
   125cc:	movw	r0, #0
   125d0:	movne	r0, #1
   125d4:	and	r0, r0, #1
   125d8:	strb	r0, [fp, #-9]
   125dc:	b	12544 <__assert_fail@plt+0xcd0>
   125e0:	ldr	r0, [fp, #-16]
   125e4:	bl	14260 <__assert_fail@plt+0x29ec>
   125e8:	cmp	r0, #0
   125ec:	beq	12628 <__assert_fail@plt+0xdb4>
   125f0:	bl	11700 <__errno_location@plt>
   125f4:	ldr	r1, [r0]
   125f8:	movw	r0, #15878	; 0x3e06
   125fc:	movt	r0, #2
   12600:	str	r1, [sp, #8]
   12604:	bl	116b8 <gettext@plt>
   12608:	movw	r1, #0
   1260c:	str	r0, [sp, #4]
   12610:	mov	r0, r1
   12614:	ldr	r1, [sp, #8]
   12618:	ldr	r2, [sp, #4]
   1261c:	bl	11610 <error@plt>
   12620:	movw	r0, #0
   12624:	strb	r0, [fp, #-9]
   12628:	ldrb	r0, [fp, #-9]
   1262c:	and	r0, r0, #1
   12630:	mov	sp, fp
   12634:	pop	{fp, pc}
   12638:	push	{fp, lr}
   1263c:	mov	fp, sp
   12640:	sub	sp, sp, #160	; 0xa0
   12644:	str	r0, [fp, #-8]
   12648:	str	r1, [fp, #-12]
   1264c:	ldr	r0, [fp, #-12]
   12650:	ldr	r0, [r0, #28]
   12654:	str	r0, [fp, #-16]
   12658:	ldr	r0, [fp, #-12]
   1265c:	ldr	r0, [r0, #24]
   12660:	str	r0, [fp, #-20]	; 0xffffffec
   12664:	ldr	r0, [fp, #-12]
   12668:	add	r0, r0, #64	; 0x40
   1266c:	str	r0, [fp, #-24]	; 0xffffffe8
   12670:	mov	r0, #1
   12674:	strb	r0, [fp, #-25]	; 0xffffffe7
   12678:	ldr	r0, [fp, #-12]
   1267c:	ldrh	r0, [r0, #56]	; 0x38
   12680:	sub	r0, r0, #1
   12684:	cmp	r0, #9
   12688:	str	r0, [fp, #-32]	; 0xffffffe0
   1268c:	bhi	12a64 <__assert_fail@plt+0x11f0>
   12690:	add	r0, pc, #8
   12694:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12698:	ldr	r0, [r0, r1, lsl #2]
   1269c:	mov	pc, r0
   126a0:	andeq	r2, r1, r8, asr #13
   126a4:	strdeq	r2, [r1], -ip
   126a8:	andeq	r2, r1, r4, ror #20
   126ac:	andeq	r2, r1, r8, lsr #19
   126b0:	andeq	r2, r1, r4, ror #20
   126b4:	andeq	r2, r1, r8, lsl #17
   126b8:	andeq	r2, r1, ip, asr r9
   126bc:	andeq	r2, r1, r4, ror #20
   126c0:	andeq	r2, r1, r4, ror #20
   126c4:			; <UNDEFINED> instruction: 0x000128b0
   126c8:	movw	r0, #20944	; 0x51d0
   126cc:	movt	r0, #3
   126d0:	ldrb	r0, [r0]
   126d4:	tst	r0, #1
   126d8:	beq	12884 <__assert_fail@plt+0x1010>
   126dc:	movw	r0, #20992	; 0x5200
   126e0:	movt	r0, #3
   126e4:	ldr	r0, [r0]
   126e8:	movw	r1, #0
   126ec:	cmp	r0, r1
   126f0:	beq	12874 <__assert_fail@plt+0x1000>
   126f4:	ldr	r0, [fp, #-12]
   126f8:	ldr	r1, [r0, #160]	; 0xa0
   126fc:	ldr	r0, [r0, #164]	; 0xa4
   12700:	movw	r2, #20992	; 0x5200
   12704:	movt	r2, #3
   12708:	ldr	r2, [r2]
   1270c:	ldr	r3, [r2]
   12710:	ldr	r2, [r2, #4]
   12714:	eor	r0, r0, r2
   12718:	eor	r1, r1, r3
   1271c:	orr	r0, r1, r0
   12720:	cmp	r0, #0
   12724:	bne	12874 <__assert_fail@plt+0x1000>
   12728:	b	1272c <__assert_fail@plt+0xeb8>
   1272c:	ldr	r0, [fp, #-12]
   12730:	ldr	r1, [r0, #64]	; 0x40
   12734:	ldr	r0, [r0, #68]	; 0x44
   12738:	movw	r2, #20992	; 0x5200
   1273c:	movt	r2, #3
   12740:	ldr	r2, [r2]
   12744:	ldr	r3, [r2, #8]
   12748:	ldr	r2, [r2, #12]
   1274c:	eor	r0, r0, r2
   12750:	eor	r1, r1, r3
   12754:	orr	r0, r1, r0
   12758:	cmp	r0, #0
   1275c:	bne	12874 <__assert_fail@plt+0x1000>
   12760:	b	12764 <__assert_fail@plt+0xef0>
   12764:	b	12768 <__assert_fail@plt+0xef4>
   12768:	ldr	r0, [fp, #-16]
   1276c:	movw	r1, #18161	; 0x46f1
   12770:	movt	r1, #2
   12774:	bl	114d8 <strcmp@plt>
   12778:	cmp	r0, #0
   1277c:	bne	127bc <__assert_fail@plt+0xf48>
   12780:	movw	r0, #15895	; 0x3e17
   12784:	movt	r0, #2
   12788:	bl	116b8 <gettext@plt>
   1278c:	ldr	r1, [fp, #-16]
   12790:	movw	lr, #4
   12794:	str	r0, [fp, #-36]	; 0xffffffdc
   12798:	mov	r0, lr
   1279c:	bl	1b124 <__assert_fail@plt+0x98b0>
   127a0:	movw	r1, #0
   127a4:	str	r0, [fp, #-40]	; 0xffffffd8
   127a8:	mov	r0, r1
   127ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   127b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   127b4:	bl	11610 <error@plt>
   127b8:	b	1281c <__assert_fail@plt+0xfa8>
   127bc:	movw	r0, #15940	; 0x3e44
   127c0:	movt	r0, #2
   127c4:	bl	116b8 <gettext@plt>
   127c8:	ldr	r2, [fp, #-16]
   127cc:	movw	lr, #0
   127d0:	str	r0, [fp, #-44]	; 0xffffffd4
   127d4:	mov	r0, lr
   127d8:	movw	r1, #4
   127dc:	bl	1b050 <__assert_fail@plt+0x97dc>
   127e0:	movw	r1, #1
   127e4:	str	r0, [fp, #-48]	; 0xffffffd0
   127e8:	mov	r0, r1
   127ec:	movw	r1, #4
   127f0:	movw	r2, #18161	; 0x46f1
   127f4:	movt	r2, #2
   127f8:	bl	1b050 <__assert_fail@plt+0x97dc>
   127fc:	movw	r1, #0
   12800:	str	r0, [fp, #-52]	; 0xffffffcc
   12804:	mov	r0, r1
   12808:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1280c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12810:	ldr	lr, [fp, #-52]	; 0xffffffcc
   12814:	str	lr, [sp]
   12818:	bl	11610 <error@plt>
   1281c:	movw	r0, #15998	; 0x3e7e
   12820:	movt	r0, #2
   12824:	bl	116b8 <gettext@plt>
   12828:	movw	lr, #0
   1282c:	str	r0, [fp, #-56]	; 0xffffffc8
   12830:	mov	r0, lr
   12834:	mov	r1, lr
   12838:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1283c:	bl	11610 <error@plt>
   12840:	ldr	r0, [fp, #-8]
   12844:	ldr	r1, [fp, #-12]
   12848:	movw	r2, #4
   1284c:	bl	16478 <__assert_fail@plt+0x4c04>
   12850:	ldr	r1, [fp, #-8]
   12854:	str	r0, [fp, #-60]	; 0xffffffc4
   12858:	mov	r0, r1
   1285c:	bl	14524 <__assert_fail@plt+0x2cb0>
   12860:	movw	r1, #0
   12864:	and	r1, r1, #1
   12868:	strb	r1, [fp, #-1]
   1286c:	str	r0, [fp, #-64]	; 0xffffffc0
   12870:	b	12ca0 <__assert_fail@plt+0x142c>
   12874:	movw	r0, #1
   12878:	and	r0, r0, #1
   1287c:	strb	r0, [fp, #-1]
   12880:	b	12ca0 <__assert_fail@plt+0x142c>
   12884:	b	12a68 <__assert_fail@plt+0x11f4>
   12888:	movw	r0, #20944	; 0x51d0
   1288c:	movt	r0, #3
   12890:	ldrb	r0, [r0]
   12894:	tst	r0, #1
   12898:	bne	128ac <__assert_fail@plt+0x1038>
   1289c:	movw	r0, #1
   128a0:	and	r0, r0, #1
   128a4:	strb	r0, [fp, #-1]
   128a8:	b	12ca0 <__assert_fail@plt+0x142c>
   128ac:	b	12a68 <__assert_fail@plt+0x11f4>
   128b0:	ldr	r0, [fp, #-12]
   128b4:	ldr	r0, [r0, #48]	; 0x30
   128b8:	cmp	r0, #0
   128bc:	bne	12908 <__assert_fail@plt+0x1094>
   128c0:	ldr	r0, [fp, #-12]
   128c4:	ldr	r0, [r0, #16]
   128c8:	cmp	r0, #0
   128cc:	bne	12908 <__assert_fail@plt+0x1094>
   128d0:	ldr	r0, [fp, #-12]
   128d4:	movw	r1, #1
   128d8:	str	r1, [r0, #16]
   128dc:	ldr	r0, [fp, #-8]
   128e0:	ldr	r2, [fp, #-12]
   128e4:	str	r1, [fp, #-68]	; 0xffffffbc
   128e8:	mov	r1, r2
   128ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   128f0:	bl	16478 <__assert_fail@plt+0x4c04>
   128f4:	movw	r1, #1
   128f8:	and	r1, r1, #1
   128fc:	strb	r1, [fp, #-1]
   12900:	str	r0, [fp, #-72]	; 0xffffffb8
   12904:	b	12ca0 <__assert_fail@plt+0x142c>
   12908:	ldr	r0, [fp, #-12]
   1290c:	ldr	r1, [r0, #32]
   12910:	movw	r0, #16047	; 0x3eaf
   12914:	movt	r0, #2
   12918:	str	r1, [fp, #-76]	; 0xffffffb4
   1291c:	bl	116b8 <gettext@plt>
   12920:	ldr	r1, [fp, #-16]
   12924:	movw	lr, #4
   12928:	str	r0, [sp, #80]	; 0x50
   1292c:	mov	r0, lr
   12930:	bl	1b124 <__assert_fail@plt+0x98b0>
   12934:	movw	r1, #0
   12938:	str	r0, [sp, #76]	; 0x4c
   1293c:	mov	r0, r1
   12940:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12944:	ldr	r2, [sp, #80]	; 0x50
   12948:	ldr	r3, [sp, #76]	; 0x4c
   1294c:	bl	11610 <error@plt>
   12950:	movw	r0, #0
   12954:	strb	r0, [fp, #-25]	; 0xffffffe7
   12958:	b	12a68 <__assert_fail@plt+0x11f4>
   1295c:	ldr	r0, [fp, #-12]
   12960:	ldr	r1, [r0, #32]
   12964:	ldr	r2, [fp, #-16]
   12968:	movw	r0, #0
   1296c:	movw	r3, #3
   12970:	str	r1, [sp, #72]	; 0x48
   12974:	mov	r1, r3
   12978:	bl	1b278 <__assert_fail@plt+0x9a04>
   1297c:	movw	r1, #0
   12980:	str	r0, [sp, #68]	; 0x44
   12984:	mov	r0, r1
   12988:	ldr	r1, [sp, #72]	; 0x48
   1298c:	movw	r2, #16795	; 0x419b
   12990:	movt	r2, #2
   12994:	ldr	r3, [sp, #68]	; 0x44
   12998:	bl	11610 <error@plt>
   1299c:	movw	r0, #0
   129a0:	strb	r0, [fp, #-25]	; 0xffffffe7
   129a4:	b	12a68 <__assert_fail@plt+0x11f4>
   129a8:	ldr	r0, [fp, #-12]
   129ac:	ldr	r1, [r0, #32]
   129b0:	movw	r0, #16064	; 0x3ec0
   129b4:	movt	r0, #2
   129b8:	str	r1, [sp, #64]	; 0x40
   129bc:	bl	116b8 <gettext@plt>
   129c0:	ldr	r1, [fp, #-16]
   129c4:	movw	lr, #4
   129c8:	str	r0, [sp, #60]	; 0x3c
   129cc:	mov	r0, lr
   129d0:	bl	1b124 <__assert_fail@plt+0x98b0>
   129d4:	movw	r1, #0
   129d8:	str	r0, [sp, #56]	; 0x38
   129dc:	mov	r0, r1
   129e0:	ldr	r1, [sp, #64]	; 0x40
   129e4:	ldr	r2, [sp, #60]	; 0x3c
   129e8:	ldr	r3, [sp, #56]	; 0x38
   129ec:	bl	11610 <error@plt>
   129f0:	movw	r0, #0
   129f4:	strb	r0, [fp, #-25]	; 0xffffffe7
   129f8:	b	12a68 <__assert_fail@plt+0x11f4>
   129fc:	ldr	r0, [fp, #-8]
   12a00:	ldr	r1, [fp, #-12]
   12a04:	bl	1f96c <__assert_fail@plt+0xe0f8>
   12a08:	tst	r0, #1
   12a0c:	beq	12a60 <__assert_fail@plt+0x11ec>
   12a10:	b	12a14 <__assert_fail@plt+0x11a0>
   12a14:	movw	r0, #16089	; 0x3ed9
   12a18:	movt	r0, #2
   12a1c:	bl	116b8 <gettext@plt>
   12a20:	ldr	r2, [fp, #-16]
   12a24:	movw	lr, #0
   12a28:	str	r0, [sp, #52]	; 0x34
   12a2c:	mov	r0, lr
   12a30:	movw	r1, #3
   12a34:	bl	1b278 <__assert_fail@plt+0x9a04>
   12a38:	movw	r1, #0
   12a3c:	str	r0, [sp, #48]	; 0x30
   12a40:	mov	r0, r1
   12a44:	ldr	r2, [sp, #52]	; 0x34
   12a48:	ldr	r3, [sp, #48]	; 0x30
   12a4c:	bl	11610 <error@plt>
   12a50:	movw	r0, #0
   12a54:	and	r0, r0, #1
   12a58:	strb	r0, [fp, #-1]
   12a5c:	b	12ca0 <__assert_fail@plt+0x142c>
   12a60:	b	12a68 <__assert_fail@plt+0x11f4>
   12a64:	b	12a68 <__assert_fail@plt+0x11f4>
   12a68:	ldr	r0, [fp, #-12]
   12a6c:	ldrh	r0, [r0, #56]	; 0x38
   12a70:	cmp	r0, #6
   12a74:	bne	12bf0 <__assert_fail@plt+0x137c>
   12a78:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12a7c:	tst	r0, #1
   12a80:	beq	12bf0 <__assert_fail@plt+0x137c>
   12a84:	movw	r0, #20992	; 0x5200
   12a88:	movt	r0, #3
   12a8c:	ldr	r0, [r0]
   12a90:	movw	r1, #0
   12a94:	cmp	r0, r1
   12a98:	beq	12bf0 <__assert_fail@plt+0x137c>
   12a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12aa0:	ldr	r1, [r0, #96]	; 0x60
   12aa4:	ldr	r0, [r0, #100]	; 0x64
   12aa8:	movw	r2, #20992	; 0x5200
   12aac:	movt	r2, #3
   12ab0:	ldr	r2, [r2]
   12ab4:	ldr	r3, [r2]
   12ab8:	ldr	r2, [r2, #4]
   12abc:	eor	r0, r0, r2
   12ac0:	eor	r1, r1, r3
   12ac4:	orr	r0, r1, r0
   12ac8:	cmp	r0, #0
   12acc:	bne	12bf0 <__assert_fail@plt+0x137c>
   12ad0:	b	12ad4 <__assert_fail@plt+0x1260>
   12ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ad8:	ldr	r1, [r0]
   12adc:	ldr	r0, [r0, #4]
   12ae0:	movw	r2, #20992	; 0x5200
   12ae4:	movt	r2, #3
   12ae8:	ldr	r2, [r2]
   12aec:	ldr	r3, [r2, #8]
   12af0:	ldr	r2, [r2, #12]
   12af4:	eor	r0, r0, r2
   12af8:	eor	r1, r1, r3
   12afc:	orr	r0, r1, r0
   12b00:	cmp	r0, #0
   12b04:	bne	12bf0 <__assert_fail@plt+0x137c>
   12b08:	b	12b0c <__assert_fail@plt+0x1298>
   12b0c:	b	12b10 <__assert_fail@plt+0x129c>
   12b10:	ldr	r0, [fp, #-16]
   12b14:	movw	r1, #18161	; 0x46f1
   12b18:	movt	r1, #2
   12b1c:	bl	114d8 <strcmp@plt>
   12b20:	cmp	r0, #0
   12b24:	bne	12b64 <__assert_fail@plt+0x12f0>
   12b28:	movw	r0, #15895	; 0x3e17
   12b2c:	movt	r0, #2
   12b30:	bl	116b8 <gettext@plt>
   12b34:	ldr	r1, [fp, #-16]
   12b38:	movw	lr, #4
   12b3c:	str	r0, [sp, #44]	; 0x2c
   12b40:	mov	r0, lr
   12b44:	bl	1b124 <__assert_fail@plt+0x98b0>
   12b48:	movw	r1, #0
   12b4c:	str	r0, [sp, #40]	; 0x28
   12b50:	mov	r0, r1
   12b54:	ldr	r2, [sp, #44]	; 0x2c
   12b58:	ldr	r3, [sp, #40]	; 0x28
   12b5c:	bl	11610 <error@plt>
   12b60:	b	12bc4 <__assert_fail@plt+0x1350>
   12b64:	movw	r0, #15940	; 0x3e44
   12b68:	movt	r0, #2
   12b6c:	bl	116b8 <gettext@plt>
   12b70:	ldr	r2, [fp, #-16]
   12b74:	movw	lr, #0
   12b78:	str	r0, [sp, #36]	; 0x24
   12b7c:	mov	r0, lr
   12b80:	movw	r1, #4
   12b84:	bl	1b050 <__assert_fail@plt+0x97dc>
   12b88:	movw	r1, #1
   12b8c:	str	r0, [sp, #32]
   12b90:	mov	r0, r1
   12b94:	movw	r1, #4
   12b98:	movw	r2, #18161	; 0x46f1
   12b9c:	movt	r2, #2
   12ba0:	bl	1b050 <__assert_fail@plt+0x97dc>
   12ba4:	movw	r1, #0
   12ba8:	str	r0, [sp, #28]
   12bac:	mov	r0, r1
   12bb0:	ldr	r2, [sp, #36]	; 0x24
   12bb4:	ldr	r3, [sp, #32]
   12bb8:	ldr	lr, [sp, #28]
   12bbc:	str	lr, [sp]
   12bc0:	bl	11610 <error@plt>
   12bc4:	movw	r0, #15998	; 0x3e7e
   12bc8:	movt	r0, #2
   12bcc:	bl	116b8 <gettext@plt>
   12bd0:	movw	lr, #0
   12bd4:	str	r0, [sp, #24]
   12bd8:	mov	r0, lr
   12bdc:	mov	r1, lr
   12be0:	ldr	r2, [sp, #24]
   12be4:	bl	11610 <error@plt>
   12be8:	movw	r0, #0
   12bec:	strb	r0, [fp, #-25]	; 0xffffffe7
   12bf0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12bf4:	tst	r0, #1
   12bf8:	beq	12c6c <__assert_fail@plt+0x13f8>
   12bfc:	movw	r0, #20945	; 0x51d1
   12c00:	movt	r0, #3
   12c04:	ldrb	r0, [r0]
   12c08:	tst	r0, #1
   12c0c:	beq	12c48 <__assert_fail@plt+0x13d4>
   12c10:	movw	r0, #16275	; 0x3f93
   12c14:	movt	r0, #2
   12c18:	bl	116b8 <gettext@plt>
   12c1c:	ldr	r1, [fp, #-16]
   12c20:	movw	lr, #4
   12c24:	str	r0, [sp, #20]
   12c28:	mov	r0, lr
   12c2c:	bl	1b124 <__assert_fail@plt+0x98b0>
   12c30:	ldr	r1, [sp, #20]
   12c34:	str	r0, [sp, #16]
   12c38:	mov	r0, r1
   12c3c:	ldr	r1, [sp, #16]
   12c40:	bl	114e4 <printf@plt>
   12c44:	str	r0, [sp, #12]
   12c48:	ldr	r0, [fp, #-8]
   12c4c:	ldr	r0, [r0, #32]
   12c50:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c54:	bl	12cb0 <__assert_fail@plt+0x143c>
   12c58:	cmp	r0, #0
   12c5c:	beq	12c68 <__assert_fail@plt+0x13f4>
   12c60:	movw	r0, #0
   12c64:	strb	r0, [fp, #-25]	; 0xffffffe7
   12c68:	b	12c6c <__assert_fail@plt+0x13f8>
   12c6c:	movw	r0, #20944	; 0x51d0
   12c70:	movt	r0, #3
   12c74:	ldrb	r0, [r0]
   12c78:	tst	r0, #1
   12c7c:	bne	12c94 <__assert_fail@plt+0x1420>
   12c80:	ldr	r0, [fp, #-8]
   12c84:	ldr	r1, [fp, #-12]
   12c88:	movw	r2, #4
   12c8c:	bl	16478 <__assert_fail@plt+0x4c04>
   12c90:	str	r0, [sp, #8]
   12c94:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12c98:	and	r0, r0, #1
   12c9c:	strb	r0, [fp, #-1]
   12ca0:	ldrb	r0, [fp, #-1]
   12ca4:	and	r0, r0, #1
   12ca8:	mov	sp, fp
   12cac:	pop	{fp, pc}
   12cb0:	push	{fp, lr}
   12cb4:	mov	fp, sp
   12cb8:	sub	sp, sp, #88	; 0x58
   12cbc:	str	r0, [fp, #-8]
   12cc0:	str	r1, [fp, #-12]
   12cc4:	movw	r0, #0
   12cc8:	str	r0, [fp, #-16]
   12ccc:	str	r0, [fp, #-28]	; 0xffffffe4
   12cd0:	movw	r1, #20968	; 0x51e8
   12cd4:	movt	r1, #3
   12cd8:	ldr	r1, [r1]
   12cdc:	cmp	r1, r0
   12ce0:	bne	12e20 <__assert_fail@plt+0x15ac>
   12ce4:	movw	r0, #20964	; 0x51e4
   12ce8:	movt	r0, #3
   12cec:	ldrb	r0, [r0]
   12cf0:	tst	r0, #1
   12cf4:	beq	12d10 <__assert_fail@plt+0x149c>
   12cf8:	ldr	r0, [fp, #-8]
   12cfc:	ldr	r1, [fp, #-12]
   12d00:	sub	r2, fp, #16
   12d04:	bl	1b664 <__assert_fail@plt+0x9df0>
   12d08:	str	r0, [fp, #-40]	; 0xffffffd8
   12d0c:	b	12d24 <__assert_fail@plt+0x14b0>
   12d10:	ldr	r0, [fp, #-8]
   12d14:	ldr	r1, [fp, #-12]
   12d18:	sub	r2, fp, #16
   12d1c:	bl	1b8c4 <__assert_fail@plt+0xa050>
   12d20:	str	r0, [fp, #-40]	; 0xffffffd8
   12d24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d28:	str	r0, [fp, #-32]	; 0xffffffe0
   12d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d30:	cmp	r0, #0
   12d34:	bge	12d9c <__assert_fail@plt+0x1528>
   12d38:	bl	11700 <__errno_location@plt>
   12d3c:	ldr	r0, [r0]
   12d40:	cmp	r0, #61	; 0x3d
   12d44:	beq	12d9c <__assert_fail@plt+0x1528>
   12d48:	bl	11700 <__errno_location@plt>
   12d4c:	ldr	r1, [r0]
   12d50:	movw	r0, #15258	; 0x3b9a
   12d54:	movt	r0, #2
   12d58:	str	r1, [sp, #44]	; 0x2c
   12d5c:	bl	116b8 <gettext@plt>
   12d60:	ldr	r1, [fp, #-12]
   12d64:	movw	lr, #4
   12d68:	str	r0, [sp, #40]	; 0x28
   12d6c:	mov	r0, lr
   12d70:	bl	1b124 <__assert_fail@plt+0x98b0>
   12d74:	movw	r1, #0
   12d78:	str	r0, [sp, #36]	; 0x24
   12d7c:	mov	r0, r1
   12d80:	ldr	r1, [sp, #44]	; 0x2c
   12d84:	ldr	r2, [sp, #40]	; 0x28
   12d88:	ldr	r3, [sp, #36]	; 0x24
   12d8c:	bl	11610 <error@plt>
   12d90:	movw	r0, #1
   12d94:	str	r0, [fp, #-4]
   12d98:	b	12f4c <__assert_fail@plt+0x16d8>
   12d9c:	ldr	r0, [fp, #-16]
   12da0:	movw	r1, #0
   12da4:	cmp	r0, r1
   12da8:	bne	12df0 <__assert_fail@plt+0x157c>
   12dac:	movw	r0, #16308	; 0x3fb4
   12db0:	movt	r0, #2
   12db4:	bl	116b8 <gettext@plt>
   12db8:	ldr	r1, [fp, #-12]
   12dbc:	movw	lr, #4
   12dc0:	str	r0, [sp, #32]
   12dc4:	mov	r0, lr
   12dc8:	bl	1b124 <__assert_fail@plt+0x98b0>
   12dcc:	movw	r1, #0
   12dd0:	str	r0, [sp, #28]
   12dd4:	mov	r0, r1
   12dd8:	ldr	r2, [sp, #32]
   12ddc:	ldr	r3, [sp, #28]
   12de0:	bl	11610 <error@plt>
   12de4:	movw	r0, #1
   12de8:	str	r0, [fp, #-4]
   12dec:	b	12f4c <__assert_fail@plt+0x16d8>
   12df0:	ldr	r0, [fp, #-16]
   12df4:	sub	r1, fp, #20
   12df8:	bl	12f58 <__assert_fail@plt+0x16e4>
   12dfc:	cmp	r0, #0
   12e00:	beq	12e10 <__assert_fail@plt+0x159c>
   12e04:	movw	r0, #1
   12e08:	str	r0, [fp, #-4]
   12e0c:	b	12f4c <__assert_fail@plt+0x16d8>
   12e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e14:	bl	11808 <context_str@plt>
   12e18:	str	r0, [fp, #-24]	; 0xffffffe8
   12e1c:	b	12e30 <__assert_fail@plt+0x15bc>
   12e20:	movw	r0, #20968	; 0x51e8
   12e24:	movt	r0, #3
   12e28:	ldr	r0, [r0]
   12e2c:	str	r0, [fp, #-24]	; 0xffffffe8
   12e30:	ldr	r0, [fp, #-16]
   12e34:	movw	r1, #0
   12e38:	cmp	r0, r1
   12e3c:	beq	12e54 <__assert_fail@plt+0x15e0>
   12e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e44:	ldr	r1, [fp, #-16]
   12e48:	bl	114d8 <strcmp@plt>
   12e4c:	cmp	r0, #0
   12e50:	beq	12f1c <__assert_fail@plt+0x16a8>
   12e54:	movw	r0, #20964	; 0x51e4
   12e58:	movt	r0, #3
   12e5c:	ldrb	r0, [r0]
   12e60:	tst	r0, #1
   12e64:	beq	12e80 <__assert_fail@plt+0x160c>
   12e68:	ldr	r0, [fp, #-8]
   12e6c:	ldr	r1, [fp, #-12]
   12e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e74:	bl	1bb24 <__assert_fail@plt+0xa2b0>
   12e78:	str	r0, [sp, #24]
   12e7c:	b	12e94 <__assert_fail@plt+0x1620>
   12e80:	ldr	r0, [fp, #-8]
   12e84:	ldr	r1, [fp, #-12]
   12e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e8c:	bl	1bd84 <__assert_fail@plt+0xa510>
   12e90:	str	r0, [sp, #24]
   12e94:	ldr	r0, [sp, #24]
   12e98:	str	r0, [fp, #-36]	; 0xffffffdc
   12e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12ea0:	cmp	r0, #0
   12ea4:	beq	12f18 <__assert_fail@plt+0x16a4>
   12ea8:	movw	r0, #1
   12eac:	str	r0, [fp, #-28]	; 0xffffffe4
   12eb0:	bl	11700 <__errno_location@plt>
   12eb4:	ldr	r1, [r0]
   12eb8:	movw	r0, #16357	; 0x3fe5
   12ebc:	movt	r0, #2
   12ec0:	str	r1, [sp, #20]
   12ec4:	bl	116b8 <gettext@plt>
   12ec8:	ldr	r2, [fp, #-12]
   12ecc:	movw	r1, #0
   12ed0:	str	r0, [sp, #16]
   12ed4:	mov	r0, r1
   12ed8:	movw	r1, #4
   12edc:	bl	1b050 <__assert_fail@plt+0x97dc>
   12ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12ee4:	movw	r2, #1
   12ee8:	str	r0, [sp, #12]
   12eec:	mov	r0, r2
   12ef0:	bl	1b490 <__assert_fail@plt+0x9c1c>
   12ef4:	movw	r1, #0
   12ef8:	str	r0, [sp, #8]
   12efc:	mov	r0, r1
   12f00:	ldr	r1, [sp, #20]
   12f04:	ldr	r2, [sp, #16]
   12f08:	ldr	r3, [sp, #12]
   12f0c:	ldr	lr, [sp, #8]
   12f10:	str	lr, [sp]
   12f14:	bl	11610 <error@plt>
   12f18:	b	12f1c <__assert_fail@plt+0x16a8>
   12f1c:	movw	r0, #20968	; 0x51e8
   12f20:	movt	r0, #3
   12f24:	ldr	r0, [r0]
   12f28:	movw	r1, #0
   12f2c:	cmp	r0, r1
   12f30:	bne	12f44 <__assert_fail@plt+0x16d0>
   12f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f38:	bl	11670 <context_free@plt>
   12f3c:	ldr	r0, [fp, #-16]
   12f40:	bl	117e4 <freecon@plt>
   12f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f48:	str	r0, [fp, #-4]
   12f4c:	ldr	r0, [fp, #-4]
   12f50:	mov	sp, fp
   12f54:	pop	{fp, pc}
   12f58:	push	{fp, lr}
   12f5c:	mov	fp, sp
   12f60:	sub	sp, sp, #96	; 0x60
   12f64:	str	r0, [fp, #-8]
   12f68:	str	r1, [fp, #-12]
   12f6c:	movw	r0, #1
   12f70:	strb	r0, [fp, #-13]
   12f74:	ldr	r0, [fp, #-8]
   12f78:	bl	11544 <context_new@plt>
   12f7c:	str	r0, [fp, #-20]	; 0xffffffec
   12f80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f84:	movw	r1, #0
   12f88:	cmp	r0, r1
   12f8c:	bne	12fe0 <__assert_fail@plt+0x176c>
   12f90:	bl	11700 <__errno_location@plt>
   12f94:	ldr	r1, [r0]
   12f98:	movw	r0, #16394	; 0x400a
   12f9c:	movt	r0, #2
   12fa0:	str	r1, [fp, #-28]	; 0xffffffe4
   12fa4:	bl	116b8 <gettext@plt>
   12fa8:	ldr	r1, [fp, #-8]
   12fac:	str	r0, [fp, #-32]	; 0xffffffe0
   12fb0:	mov	r0, r1
   12fb4:	bl	1b4bc <__assert_fail@plt+0x9c48>
   12fb8:	movw	r1, #0
   12fbc:	str	r0, [fp, #-36]	; 0xffffffdc
   12fc0:	mov	r0, r1
   12fc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12fcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12fd0:	bl	11610 <error@plt>
   12fd4:	movw	r0, #1
   12fd8:	str	r0, [fp, #-4]
   12fdc:	b	132a4 <__assert_fail@plt+0x1a30>
   12fe0:	b	12fe4 <__assert_fail@plt+0x1770>
   12fe4:	movw	r0, #20948	; 0x51d4
   12fe8:	movt	r0, #3
   12fec:	ldr	r0, [r0]
   12ff0:	movw	r1, #0
   12ff4:	cmp	r0, r1
   12ff8:	beq	13078 <__assert_fail@plt+0x1804>
   12ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13000:	movw	r1, #20948	; 0x51d4
   13004:	movt	r1, #3
   13008:	ldr	r1, [r1]
   1300c:	bl	116ac <context_user_set@plt>
   13010:	cmp	r0, #0
   13014:	beq	13078 <__assert_fail@plt+0x1804>
   13018:	bl	11700 <__errno_location@plt>
   1301c:	ldr	r1, [r0]
   13020:	movw	r0, #16432	; 0x4030
   13024:	movt	r0, #2
   13028:	str	r1, [fp, #-40]	; 0xffffffd8
   1302c:	bl	116b8 <gettext@plt>
   13030:	movw	r1, #20948	; 0x51d4
   13034:	movt	r1, #3
   13038:	ldr	r1, [r1]
   1303c:	str	r0, [fp, #-44]	; 0xffffffd4
   13040:	mov	r0, r1
   13044:	bl	1b4bc <__assert_fail@plt+0x9c48>
   13048:	movw	r1, #0
   1304c:	str	r0, [sp, #48]	; 0x30
   13050:	mov	r0, r1
   13054:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13058:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1305c:	movw	r3, #15820	; 0x3dcc
   13060:	movt	r3, #2
   13064:	ldr	lr, [sp, #48]	; 0x30
   13068:	str	lr, [sp]
   1306c:	bl	11610 <error@plt>
   13070:	movw	r0, #0
   13074:	strb	r0, [fp, #-13]
   13078:	b	1307c <__assert_fail@plt+0x1808>
   1307c:	b	13080 <__assert_fail@plt+0x180c>
   13080:	movw	r0, #20960	; 0x51e0
   13084:	movt	r0, #3
   13088:	ldr	r0, [r0]
   1308c:	movw	r1, #0
   13090:	cmp	r0, r1
   13094:	beq	13114 <__assert_fail@plt+0x18a0>
   13098:	ldr	r0, [fp, #-20]	; 0xffffffec
   1309c:	movw	r1, #20960	; 0x51e0
   130a0:	movt	r1, #3
   130a4:	ldr	r1, [r1]
   130a8:	bl	117fc <context_range_set@plt>
   130ac:	cmp	r0, #0
   130b0:	beq	13114 <__assert_fail@plt+0x18a0>
   130b4:	bl	11700 <__errno_location@plt>
   130b8:	ldr	r1, [r0]
   130bc:	movw	r0, #16432	; 0x4030
   130c0:	movt	r0, #2
   130c4:	str	r1, [sp, #44]	; 0x2c
   130c8:	bl	116b8 <gettext@plt>
   130cc:	movw	r1, #20960	; 0x51e0
   130d0:	movt	r1, #3
   130d4:	ldr	r1, [r1]
   130d8:	str	r0, [sp, #40]	; 0x28
   130dc:	mov	r0, r1
   130e0:	bl	1b4bc <__assert_fail@plt+0x9c48>
   130e4:	movw	r1, #0
   130e8:	str	r0, [sp, #36]	; 0x24
   130ec:	mov	r0, r1
   130f0:	ldr	r1, [sp, #44]	; 0x2c
   130f4:	ldr	r2, [sp, #40]	; 0x28
   130f8:	movw	r3, #15835	; 0x3ddb
   130fc:	movt	r3, #2
   13100:	ldr	lr, [sp, #36]	; 0x24
   13104:	str	lr, [sp]
   13108:	bl	11610 <error@plt>
   1310c:	movw	r0, #0
   13110:	strb	r0, [fp, #-13]
   13114:	b	13118 <__assert_fail@plt+0x18a4>
   13118:	b	1311c <__assert_fail@plt+0x18a8>
   1311c:	movw	r0, #20952	; 0x51d8
   13120:	movt	r0, #3
   13124:	ldr	r0, [r0]
   13128:	movw	r1, #0
   1312c:	cmp	r0, r1
   13130:	beq	131b0 <__assert_fail@plt+0x193c>
   13134:	ldr	r0, [fp, #-20]	; 0xffffffec
   13138:	movw	r1, #20952	; 0x51d8
   1313c:	movt	r1, #3
   13140:	ldr	r1, [r1]
   13144:	bl	1155c <context_role_set@plt>
   13148:	cmp	r0, #0
   1314c:	beq	131b0 <__assert_fail@plt+0x193c>
   13150:	bl	11700 <__errno_location@plt>
   13154:	ldr	r1, [r0]
   13158:	movw	r0, #16432	; 0x4030
   1315c:	movt	r0, #2
   13160:	str	r1, [sp, #32]
   13164:	bl	116b8 <gettext@plt>
   13168:	movw	r1, #20952	; 0x51d8
   1316c:	movt	r1, #3
   13170:	ldr	r1, [r1]
   13174:	str	r0, [sp, #28]
   13178:	mov	r0, r1
   1317c:	bl	1b4bc <__assert_fail@plt+0x9c48>
   13180:	movw	r1, #0
   13184:	str	r0, [sp, #24]
   13188:	mov	r0, r1
   1318c:	ldr	r1, [sp, #32]
   13190:	ldr	r2, [sp, #28]
   13194:	movw	r3, #15825	; 0x3dd1
   13198:	movt	r3, #2
   1319c:	ldr	lr, [sp, #24]
   131a0:	str	lr, [sp]
   131a4:	bl	11610 <error@plt>
   131a8:	movw	r0, #0
   131ac:	strb	r0, [fp, #-13]
   131b0:	b	131b4 <__assert_fail@plt+0x1940>
   131b4:	b	131b8 <__assert_fail@plt+0x1944>
   131b8:	movw	r0, #20956	; 0x51dc
   131bc:	movt	r0, #3
   131c0:	ldr	r0, [r0]
   131c4:	movw	r1, #0
   131c8:	cmp	r0, r1
   131cc:	beq	1324c <__assert_fail@plt+0x19d8>
   131d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   131d4:	movw	r1, #20956	; 0x51dc
   131d8:	movt	r1, #3
   131dc:	ldr	r1, [r1]
   131e0:	bl	11568 <context_type_set@plt>
   131e4:	cmp	r0, #0
   131e8:	beq	1324c <__assert_fail@plt+0x19d8>
   131ec:	bl	11700 <__errno_location@plt>
   131f0:	ldr	r1, [r0]
   131f4:	movw	r0, #16432	; 0x4030
   131f8:	movt	r0, #2
   131fc:	str	r1, [sp, #20]
   13200:	bl	116b8 <gettext@plt>
   13204:	movw	r1, #20956	; 0x51dc
   13208:	movt	r1, #3
   1320c:	ldr	r1, [r1]
   13210:	str	r0, [sp, #16]
   13214:	mov	r0, r1
   13218:	bl	1b4bc <__assert_fail@plt+0x9c48>
   1321c:	movw	r1, #0
   13220:	str	r0, [sp, #12]
   13224:	mov	r0, r1
   13228:	ldr	r1, [sp, #20]
   1322c:	ldr	r2, [sp, #16]
   13230:	movw	r3, #15830	; 0x3dd6
   13234:	movt	r3, #2
   13238:	ldr	lr, [sp, #12]
   1323c:	str	lr, [sp]
   13240:	bl	11610 <error@plt>
   13244:	movw	r0, #0
   13248:	strb	r0, [fp, #-13]
   1324c:	b	13250 <__assert_fail@plt+0x19dc>
   13250:	ldrb	r0, [fp, #-13]
   13254:	tst	r0, #1
   13258:	bne	13290 <__assert_fail@plt+0x1a1c>
   1325c:	bl	11700 <__errno_location@plt>
   13260:	ldr	r0, [r0]
   13264:	str	r0, [fp, #-24]	; 0xffffffe8
   13268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1326c:	bl	11670 <context_free@plt>
   13270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13274:	str	r0, [sp, #8]
   13278:	bl	11700 <__errno_location@plt>
   1327c:	ldr	lr, [sp, #8]
   13280:	str	lr, [r0]
   13284:	movw	r0, #1
   13288:	str	r0, [fp, #-4]
   1328c:	b	132a4 <__assert_fail@plt+0x1a30>
   13290:	ldr	r0, [fp, #-20]	; 0xffffffec
   13294:	ldr	r1, [fp, #-12]
   13298:	str	r0, [r1]
   1329c:	movw	r0, #0
   132a0:	str	r0, [fp, #-4]
   132a4:	ldr	r0, [fp, #-4]
   132a8:	mov	sp, fp
   132ac:	pop	{fp, pc}
   132b0:	sub	sp, sp, #4
   132b4:	str	r0, [sp]
   132b8:	ldr	r0, [sp]
   132bc:	movw	r1, #20996	; 0x5204
   132c0:	movt	r1, #3
   132c4:	str	r0, [r1]
   132c8:	add	sp, sp, #4
   132cc:	bx	lr
   132d0:	sub	sp, sp, #4
   132d4:	and	r0, r0, #1
   132d8:	strb	r0, [sp, #3]
   132dc:	ldrb	r0, [sp, #3]
   132e0:	and	r0, r0, #1
   132e4:	movw	r1, #21000	; 0x5208
   132e8:	movt	r1, #3
   132ec:	strb	r0, [r1]
   132f0:	add	sp, sp, #4
   132f4:	bx	lr
   132f8:	push	{fp, lr}
   132fc:	mov	fp, sp
   13300:	sub	sp, sp, #24
   13304:	movw	r0, #20932	; 0x51c4
   13308:	movt	r0, #3
   1330c:	ldr	r0, [r0]
   13310:	bl	200f8 <__assert_fail@plt+0xe884>
   13314:	cmp	r0, #0
   13318:	beq	133e8 <__assert_fail@plt+0x1b74>
   1331c:	movw	r0, #21000	; 0x5208
   13320:	movt	r0, #3
   13324:	ldrb	r0, [r0]
   13328:	tst	r0, #1
   1332c:	beq	13340 <__assert_fail@plt+0x1acc>
   13330:	bl	11700 <__errno_location@plt>
   13334:	ldr	r0, [r0]
   13338:	cmp	r0, #32
   1333c:	beq	133e8 <__assert_fail@plt+0x1b74>
   13340:	movw	r0, #16779	; 0x418b
   13344:	movt	r0, #2
   13348:	bl	116b8 <gettext@plt>
   1334c:	str	r0, [fp, #-4]
   13350:	movw	r0, #20996	; 0x5204
   13354:	movt	r0, #3
   13358:	ldr	r0, [r0]
   1335c:	movw	lr, #0
   13360:	cmp	r0, lr
   13364:	beq	133bc <__assert_fail@plt+0x1b48>
   13368:	bl	11700 <__errno_location@plt>
   1336c:	ldr	r1, [r0]
   13370:	movw	r0, #20996	; 0x5204
   13374:	movt	r0, #3
   13378:	ldr	r0, [r0]
   1337c:	str	r1, [fp, #-8]
   13380:	bl	1b220 <__assert_fail@plt+0x99ac>
   13384:	ldr	r1, [fp, #-4]
   13388:	movw	lr, #0
   1338c:	str	r0, [sp, #12]
   13390:	mov	r0, lr
   13394:	ldr	lr, [fp, #-8]
   13398:	str	r1, [sp, #8]
   1339c:	mov	r1, lr
   133a0:	movw	r2, #16791	; 0x4197
   133a4:	movt	r2, #2
   133a8:	ldr	r3, [sp, #12]
   133ac:	ldr	ip, [sp, #8]
   133b0:	str	ip, [sp]
   133b4:	bl	11610 <error@plt>
   133b8:	b	133d8 <__assert_fail@plt+0x1b64>
   133bc:	bl	11700 <__errno_location@plt>
   133c0:	ldr	r1, [r0]
   133c4:	ldr	r3, [fp, #-4]
   133c8:	movw	r0, #0
   133cc:	movw	r2, #16795	; 0x419b
   133d0:	movt	r2, #2
   133d4:	bl	11610 <error@plt>
   133d8:	movw	r0, #20840	; 0x5168
   133dc:	movt	r0, #3
   133e0:	ldr	r0, [r0]
   133e4:	bl	11520 <_exit@plt>
   133e8:	movw	r0, #20928	; 0x51c0
   133ec:	movt	r0, #3
   133f0:	ldr	r0, [r0]
   133f4:	bl	200f8 <__assert_fail@plt+0xe884>
   133f8:	cmp	r0, #0
   133fc:	beq	13410 <__assert_fail@plt+0x1b9c>
   13400:	movw	r0, #20840	; 0x5168
   13404:	movt	r0, #3
   13408:	ldr	r0, [r0]
   1340c:	bl	11520 <_exit@plt>
   13410:	mov	sp, fp
   13414:	pop	{fp, pc}
   13418:	push	{fp, lr}
   1341c:	mov	fp, sp
   13420:	sub	sp, sp, #88	; 0x58
   13424:	ldr	r3, [pc, #1456]	; 139dc <__assert_fail@plt+0x2168>
   13428:	str	r0, [fp, #-8]
   1342c:	str	r1, [fp, #-12]
   13430:	str	r2, [fp, #-16]
   13434:	movw	r0, #0
   13438:	str	r0, [fp, #-36]	; 0xffffffdc
   1343c:	str	r0, [fp, #-40]	; 0xffffffd8
   13440:	ldr	r0, [fp, #-12]
   13444:	and	r0, r0, r3
   13448:	cmp	r0, #0
   1344c:	beq	13468 <__assert_fail@plt+0x1bf4>
   13450:	bl	11700 <__errno_location@plt>
   13454:	movw	lr, #22
   13458:	str	lr, [r0]
   1345c:	movw	r0, #0
   13460:	str	r0, [fp, #-4]
   13464:	b	139d0 <__assert_fail@plt+0x215c>
   13468:	ldr	r0, [fp, #-12]
   1346c:	and	r0, r0, #4
   13470:	cmp	r0, #0
   13474:	beq	134a0 <__assert_fail@plt+0x1c2c>
   13478:	ldr	r0, [fp, #-12]
   1347c:	and	r0, r0, #512	; 0x200
   13480:	cmp	r0, #0
   13484:	beq	134a0 <__assert_fail@plt+0x1c2c>
   13488:	bl	11700 <__errno_location@plt>
   1348c:	movw	lr, #22
   13490:	str	lr, [r0]
   13494:	movw	r0, #0
   13498:	str	r0, [fp, #-4]
   1349c:	b	139d0 <__assert_fail@plt+0x215c>
   134a0:	ldr	r0, [fp, #-12]
   134a4:	and	r0, r0, #18
   134a8:	cmp	r0, #0
   134ac:	bne	134c8 <__assert_fail@plt+0x1c54>
   134b0:	bl	11700 <__errno_location@plt>
   134b4:	movw	lr, #22
   134b8:	str	lr, [r0]
   134bc:	movw	r0, #0
   134c0:	str	r0, [fp, #-4]
   134c4:	b	139d0 <__assert_fail@plt+0x215c>
   134c8:	movw	r0, #1
   134cc:	movw	r1, #96	; 0x60
   134d0:	bl	1fa10 <__assert_fail@plt+0xe19c>
   134d4:	str	r0, [fp, #-20]	; 0xffffffec
   134d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   134dc:	movw	r1, #0
   134e0:	cmp	r0, r1
   134e4:	bne	134f4 <__assert_fail@plt+0x1c80>
   134e8:	movw	r0, #0
   134ec:	str	r0, [fp, #-4]
   134f0:	b	139d0 <__assert_fail@plt+0x215c>
   134f4:	ldr	r0, [fp, #-16]
   134f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   134fc:	str	r0, [r1, #44]	; 0x2c
   13500:	ldr	r0, [fp, #-12]
   13504:	ldr	r1, [fp, #-20]	; 0xffffffec
   13508:	str	r0, [r1, #48]	; 0x30
   1350c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13510:	ldr	r0, [r0, #48]	; 0x30
   13514:	and	r0, r0, #2
   13518:	cmp	r0, #0
   1351c:	beq	13544 <__assert_fail@plt+0x1cd0>
   13520:	ldr	r0, [fp, #-20]	; 0xffffffec
   13524:	ldr	r1, [r0, #48]	; 0x30
   13528:	orr	r1, r1, #4
   1352c:	str	r1, [r0, #48]	; 0x30
   13530:	ldr	r0, [fp, #-20]	; 0xffffffec
   13534:	ldr	r1, [r0, #48]	; 0x30
   13538:	mvn	r2, #512	; 0x200
   1353c:	and	r1, r1, r2
   13540:	str	r1, [r0, #48]	; 0x30
   13544:	ldr	r0, [fp, #-20]	; 0xffffffec
   13548:	mvn	r1, #99	; 0x63
   1354c:	str	r1, [r0, #32]
   13550:	ldr	r0, [fp, #-20]	; 0xffffffec
   13554:	ldr	r0, [r0, #48]	; 0x30
   13558:	and	r0, r0, #512	; 0x200
   1355c:	cmp	r0, #0
   13560:	beq	1359c <__assert_fail@plt+0x1d28>
   13564:	b	1359c <__assert_fail@plt+0x1d28>
   13568:	ldr	r1, [pc, #1136]	; 139e0 <__assert_fail@plt+0x216c>
   1356c:	movw	r0, #16799	; 0x419f
   13570:	movt	r0, #2
   13574:	bl	20884 <__assert_fail@plt+0xf010>
   13578:	str	r0, [sp, #40]	; 0x28
   1357c:	ldr	r0, [sp, #40]	; 0x28
   13580:	cmp	r0, #0
   13584:	bge	1358c <__assert_fail@plt+0x1d18>
   13588:	b	13598 <__assert_fail@plt+0x1d24>
   1358c:	ldr	r0, [sp, #40]	; 0x28
   13590:	bl	11844 <close@plt>
   13594:	str	r0, [sp, #24]
   13598:	b	1359c <__assert_fail@plt+0x1d28>
   1359c:	ldr	r0, [fp, #-8]
   135a0:	bl	139e4 <__assert_fail@plt+0x2170>
   135a4:	str	r0, [sp, #36]	; 0x24
   135a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   135ac:	ldr	lr, [sp, #36]	; 0x24
   135b0:	cmp	lr, #4096	; 0x1000
   135b4:	str	r0, [sp, #20]
   135b8:	bls	135c8 <__assert_fail@plt+0x1d54>
   135bc:	ldr	r0, [sp, #36]	; 0x24
   135c0:	str	r0, [sp, #16]
   135c4:	b	135d4 <__assert_fail@plt+0x1d60>
   135c8:	movw	r0, #4096	; 0x1000
   135cc:	str	r0, [sp, #16]
   135d0:	b	135d4 <__assert_fail@plt+0x1d60>
   135d4:	ldr	r0, [sp, #16]
   135d8:	ldr	r1, [sp, #20]
   135dc:	str	r0, [sp, #12]
   135e0:	mov	r0, r1
   135e4:	ldr	r1, [sp, #12]
   135e8:	bl	13a58 <__assert_fail@plt+0x21e4>
   135ec:	tst	r0, #1
   135f0:	bne	135f8 <__assert_fail@plt+0x1d84>
   135f4:	b	139c0 <__assert_fail@plt+0x214c>
   135f8:	ldr	r0, [fp, #-8]
   135fc:	ldr	r0, [r0]
   13600:	movw	r1, #0
   13604:	cmp	r0, r1
   13608:	beq	13640 <__assert_fail@plt+0x1dcc>
   1360c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13610:	movw	r1, #14971	; 0x3a7b
   13614:	movt	r1, #2
   13618:	movw	r2, #0
   1361c:	bl	13b50 <__assert_fail@plt+0x22dc>
   13620:	str	r0, [fp, #-36]	; 0xffffffdc
   13624:	movw	r1, #0
   13628:	cmp	r0, r1
   1362c:	bne	13634 <__assert_fail@plt+0x1dc0>
   13630:	b	139b4 <__assert_fail@plt+0x2140>
   13634:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13638:	mvn	r1, #0
   1363c:	str	r1, [r0, #48]	; 0x30
   13640:	ldr	r0, [fp, #-16]
   13644:	movw	r1, #0
   13648:	cmp	r0, r1
   1364c:	movw	r0, #1
   13650:	str	r0, [sp, #8]
   13654:	beq	13674 <__assert_fail@plt+0x1e00>
   13658:	ldr	r0, [fp, #-20]	; 0xffffffec
   1365c:	ldr	r0, [r0, #48]	; 0x30
   13660:	and	r0, r0, #1024	; 0x400
   13664:	cmp	r0, #0
   13668:	movw	r0, #0
   1366c:	movne	r0, #1
   13670:	str	r0, [sp, #8]
   13674:	ldr	r0, [sp, #8]
   13678:	and	r0, r0, #1
   1367c:	strb	r0, [fp, #-41]	; 0xffffffd7
   13680:	movw	r0, #0
   13684:	str	r0, [fp, #-28]	; 0xffffffe4
   13688:	str	r0, [fp, #-32]	; 0xffffffe0
   1368c:	ldr	r0, [fp, #-8]
   13690:	ldr	r0, [r0]
   13694:	movw	r1, #0
   13698:	cmp	r0, r1
   1369c:	beq	13890 <__assert_fail@plt+0x201c>
   136a0:	ldr	r0, [fp, #-8]
   136a4:	ldr	r0, [r0]
   136a8:	bl	116d0 <strlen@plt>
   136ac:	str	r0, [sp, #32]
   136b0:	ldr	r0, [fp, #-12]
   136b4:	and	r0, r0, #2048	; 0x800
   136b8:	cmp	r0, #0
   136bc:	bne	13760 <__assert_fail@plt+0x1eec>
   136c0:	ldr	r0, [fp, #-8]
   136c4:	ldr	r0, [r0]
   136c8:	str	r0, [sp, #28]
   136cc:	ldr	r0, [sp, #32]
   136d0:	movw	r1, #2
   136d4:	cmp	r1, r0
   136d8:	bcs	1375c <__assert_fail@plt+0x1ee8>
   136dc:	ldr	r0, [sp, #28]
   136e0:	ldr	r1, [sp, #32]
   136e4:	sub	r1, r1, #1
   136e8:	add	r0, r0, r1
   136ec:	ldrb	r0, [r0]
   136f0:	cmp	r0, #47	; 0x2f
   136f4:	bne	1375c <__assert_fail@plt+0x1ee8>
   136f8:	b	136fc <__assert_fail@plt+0x1e88>
   136fc:	ldr	r0, [sp, #32]
   13700:	movw	r1, #1
   13704:	cmp	r1, r0
   13708:	movw	r0, #0
   1370c:	str	r0, [sp, #4]
   13710:	bcs	13738 <__assert_fail@plt+0x1ec4>
   13714:	ldr	r0, [sp, #28]
   13718:	ldr	r1, [sp, #32]
   1371c:	sub	r1, r1, #2
   13720:	add	r0, r0, r1
   13724:	ldrb	r0, [r0]
   13728:	cmp	r0, #47	; 0x2f
   1372c:	movw	r0, #0
   13730:	moveq	r0, #1
   13734:	str	r0, [sp, #4]
   13738:	ldr	r0, [sp, #4]
   1373c:	tst	r0, #1
   13740:	beq	13758 <__assert_fail@plt+0x1ee4>
   13744:	ldr	r0, [sp, #32]
   13748:	mvn	r1, #0
   1374c:	add	r0, r0, r1
   13750:	str	r0, [sp, #32]
   13754:	b	136fc <__assert_fail@plt+0x1e88>
   13758:	b	1375c <__assert_fail@plt+0x1ee8>
   1375c:	b	13760 <__assert_fail@plt+0x1eec>
   13760:	ldr	r0, [fp, #-20]	; 0xffffffec
   13764:	ldr	r1, [fp, #-8]
   13768:	ldr	r1, [r1]
   1376c:	ldr	r2, [sp, #32]
   13770:	bl	13b50 <__assert_fail@plt+0x22dc>
   13774:	str	r0, [fp, #-24]	; 0xffffffe8
   13778:	movw	r1, #0
   1377c:	cmp	r0, r1
   13780:	bne	13788 <__assert_fail@plt+0x1f14>
   13784:	b	139a4 <__assert_fail@plt+0x2130>
   13788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1378c:	movw	r1, #0
   13790:	str	r1, [r0, #48]	; 0x30
   13794:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1379c:	str	r0, [r1, #4]
   137a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137a4:	add	r0, r0, #168	; 0xa8
   137a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137ac:	str	r0, [r1, #24]
   137b0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   137b4:	tst	r0, #1
   137b8:	beq	137ec <__assert_fail@plt+0x1f78>
   137bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137c0:	movw	r1, #0
   137c4:	cmp	r0, r1
   137c8:	beq	137ec <__assert_fail@plt+0x1f78>
   137cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137d0:	movw	r1, #11
   137d4:	strh	r1, [r0, #56]	; 0x38
   137d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137dc:	movw	r1, #1
   137e0:	and	r1, r1, #1
   137e4:	bl	13c48 <__assert_fail@plt+0x23d4>
   137e8:	b	13808 <__assert_fail@plt+0x1f94>
   137ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   137f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137f4:	movw	r2, #0
   137f8:	and	r2, r2, #1
   137fc:	bl	13ca0 <__assert_fail@plt+0x242c>
   13800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13804:	strh	r0, [r1, #56]	; 0x38
   13808:	ldr	r0, [fp, #-16]
   1380c:	movw	r1, #0
   13810:	cmp	r0, r1
   13814:	beq	13830 <__assert_fail@plt+0x1fbc>
   13818:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1381c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13820:	str	r0, [r1, #8]
   13824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13828:	str	r0, [fp, #-28]	; 0xffffffe4
   1382c:	b	13870 <__assert_fail@plt+0x1ffc>
   13830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13834:	movw	r1, #0
   13838:	str	r1, [r0, #8]
   1383c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13840:	cmp	r0, r1
   13844:	bne	13858 <__assert_fail@plt+0x1fe4>
   13848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1384c:	str	r0, [fp, #-28]	; 0xffffffe4
   13850:	str	r0, [fp, #-40]	; 0xffffffd8
   13854:	b	1386c <__assert_fail@plt+0x1ff8>
   13858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1385c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13860:	str	r0, [r1, #8]
   13864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13868:	str	r0, [fp, #-40]	; 0xffffffd8
   1386c:	b	13870 <__assert_fail@plt+0x1ffc>
   13870:	b	13874 <__assert_fail@plt+0x2000>
   13874:	ldr	r0, [fp, #-8]
   13878:	add	r0, r0, #4
   1387c:	str	r0, [fp, #-8]
   13880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13884:	add	r0, r0, #1
   13888:	str	r0, [fp, #-32]	; 0xffffffe0
   1388c:	b	1368c <__assert_fail@plt+0x1e18>
   13890:	ldr	r0, [fp, #-16]
   13894:	movw	r1, #0
   13898:	cmp	r0, r1
   1389c:	beq	138c0 <__assert_fail@plt+0x204c>
   138a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138a4:	cmp	r0, #1
   138a8:	bls	138c0 <__assert_fail@plt+0x204c>
   138ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   138b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   138b8:	bl	13eb8 <__assert_fail@plt+0x2644>
   138bc:	str	r0, [fp, #-28]	; 0xffffffe4
   138c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   138c4:	movw	r1, #14971	; 0x3a7b
   138c8:	movt	r1, #2
   138cc:	movw	r2, #0
   138d0:	bl	13b50 <__assert_fail@plt+0x22dc>
   138d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   138d8:	str	r0, [r1]
   138dc:	movw	r1, #0
   138e0:	cmp	r0, r1
   138e4:	bne	138ec <__assert_fail@plt+0x2078>
   138e8:	b	139a4 <__assert_fail@plt+0x2130>
   138ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   138f4:	ldr	r1, [r1]
   138f8:	str	r0, [r1, #8]
   138fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13900:	ldr	r0, [r0]
   13904:	movw	r1, #9
   13908:	strh	r1, [r0, #56]	; 0x38
   1390c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13910:	ldr	r0, [r0]
   13914:	movw	r1, #1
   13918:	str	r1, [r0, #48]	; 0x30
   1391c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13920:	bl	14080 <__assert_fail@plt+0x280c>
   13924:	tst	r0, #1
   13928:	bne	13930 <__assert_fail@plt+0x20bc>
   1392c:	b	139a4 <__assert_fail@plt+0x2130>
   13930:	ldr	r0, [fp, #-20]	; 0xffffffec
   13934:	ldr	r0, [r0, #48]	; 0x30
   13938:	and	r0, r0, #4
   1393c:	cmp	r0, #0
   13940:	bne	13988 <__assert_fail@plt+0x2114>
   13944:	ldr	r0, [fp, #-20]	; 0xffffffec
   13948:	ldr	r0, [r0, #48]	; 0x30
   1394c:	and	r0, r0, #512	; 0x200
   13950:	cmp	r0, #0
   13954:	bne	13988 <__assert_fail@plt+0x2114>
   13958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1395c:	movw	r1, #16799	; 0x419f
   13960:	movt	r1, #2
   13964:	bl	1415c <__assert_fail@plt+0x28e8>
   13968:	ldr	r1, [fp, #-20]	; 0xffffffec
   1396c:	str	r0, [r1, #28]
   13970:	cmp	r0, #0
   13974:	bge	13988 <__assert_fail@plt+0x2114>
   13978:	ldr	r0, [fp, #-20]	; 0xffffffec
   1397c:	ldr	r1, [r0, #48]	; 0x30
   13980:	orr	r1, r1, #4
   13984:	str	r1, [r0, #48]	; 0x30
   13988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1398c:	add	r0, r0, #60	; 0x3c
   13990:	mvn	r1, #0
   13994:	bl	18b34 <__assert_fail@plt+0x72c0>
   13998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1399c:	str	r0, [fp, #-4]
   139a0:	b	139d0 <__assert_fail@plt+0x215c>
   139a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139a8:	bl	141f8 <__assert_fail@plt+0x2984>
   139ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   139b0:	bl	209b8 <__assert_fail@plt+0xf144>
   139b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   139b8:	ldr	r0, [r0, #24]
   139bc:	bl	209b8 <__assert_fail@plt+0xf144>
   139c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   139c4:	bl	209b8 <__assert_fail@plt+0xf144>
   139c8:	movw	r0, #0
   139cc:	str	r0, [fp, #-4]
   139d0:	ldr	r0, [fp, #-4]
   139d4:	mov	sp, fp
   139d8:	pop	{fp, pc}
   139dc:			; <UNDEFINED> instruction: 0xfffff000
   139e0:	andeq	r0, r8, r0
   139e4:	push	{fp, lr}
   139e8:	mov	fp, sp
   139ec:	sub	sp, sp, #16
   139f0:	str	r0, [fp, #-4]
   139f4:	movw	r0, #0
   139f8:	str	r0, [sp, #4]
   139fc:	ldr	r0, [fp, #-4]
   13a00:	ldr	r0, [r0]
   13a04:	movw	r1, #0
   13a08:	cmp	r0, r1
   13a0c:	beq	13a48 <__assert_fail@plt+0x21d4>
   13a10:	ldr	r0, [fp, #-4]
   13a14:	ldr	r0, [r0]
   13a18:	bl	116d0 <strlen@plt>
   13a1c:	str	r0, [sp, #8]
   13a20:	ldr	lr, [sp, #4]
   13a24:	cmp	r0, lr
   13a28:	bls	13a34 <__assert_fail@plt+0x21c0>
   13a2c:	ldr	r0, [sp, #8]
   13a30:	str	r0, [sp, #4]
   13a34:	b	13a38 <__assert_fail@plt+0x21c4>
   13a38:	ldr	r0, [fp, #-4]
   13a3c:	add	r0, r0, #4
   13a40:	str	r0, [fp, #-4]
   13a44:	b	139fc <__assert_fail@plt+0x2188>
   13a48:	ldr	r0, [sp, #4]
   13a4c:	add	r0, r0, #1
   13a50:	mov	sp, fp
   13a54:	pop	{fp, pc}
   13a58:	push	{fp, lr}
   13a5c:	mov	fp, sp
   13a60:	sub	sp, sp, #24
   13a64:	str	r0, [fp, #-8]
   13a68:	str	r1, [sp, #12]
   13a6c:	ldr	r0, [fp, #-8]
   13a70:	ldr	r0, [r0, #36]	; 0x24
   13a74:	ldr	r1, [sp, #12]
   13a78:	add	r0, r0, r1
   13a7c:	add	r0, r0, #256	; 0x100
   13a80:	str	r0, [sp, #4]
   13a84:	ldr	r0, [sp, #4]
   13a88:	ldr	r1, [fp, #-8]
   13a8c:	ldr	r1, [r1, #36]	; 0x24
   13a90:	cmp	r0, r1
   13a94:	bcs	13acc <__assert_fail@plt+0x2258>
   13a98:	ldr	r0, [fp, #-8]
   13a9c:	ldr	r0, [r0, #24]
   13aa0:	bl	209b8 <__assert_fail@plt+0xf144>
   13aa4:	ldr	r0, [fp, #-8]
   13aa8:	movw	lr, #0
   13aac:	str	lr, [r0, #24]
   13ab0:	bl	11700 <__errno_location@plt>
   13ab4:	movw	lr, #36	; 0x24
   13ab8:	str	lr, [r0]
   13abc:	movw	r0, #0
   13ac0:	and	r0, r0, #1
   13ac4:	strb	r0, [fp, #-1]
   13ac8:	b	13b40 <__assert_fail@plt+0x22cc>
   13acc:	ldr	r0, [sp, #4]
   13ad0:	ldr	r1, [fp, #-8]
   13ad4:	str	r0, [r1, #36]	; 0x24
   13ad8:	ldr	r0, [fp, #-8]
   13adc:	ldr	r0, [r0, #24]
   13ae0:	ldr	r1, [fp, #-8]
   13ae4:	ldr	r1, [r1, #36]	; 0x24
   13ae8:	bl	1fb1c <__assert_fail@plt+0xe2a8>
   13aec:	str	r0, [sp, #8]
   13af0:	ldr	r0, [sp, #8]
   13af4:	movw	r1, #0
   13af8:	cmp	r0, r1
   13afc:	bne	13b28 <__assert_fail@plt+0x22b4>
   13b00:	ldr	r0, [fp, #-8]
   13b04:	ldr	r0, [r0, #24]
   13b08:	bl	209b8 <__assert_fail@plt+0xf144>
   13b0c:	ldr	r0, [fp, #-8]
   13b10:	movw	lr, #0
   13b14:	str	lr, [r0, #24]
   13b18:	movw	r0, #0
   13b1c:	and	r0, r0, #1
   13b20:	strb	r0, [fp, #-1]
   13b24:	b	13b40 <__assert_fail@plt+0x22cc>
   13b28:	ldr	r0, [sp, #8]
   13b2c:	ldr	r1, [fp, #-8]
   13b30:	str	r0, [r1, #24]
   13b34:	movw	r0, #1
   13b38:	and	r0, r0, #1
   13b3c:	strb	r0, [fp, #-1]
   13b40:	ldrb	r0, [fp, #-1]
   13b44:	and	r0, r0, #1
   13b48:	mov	sp, fp
   13b4c:	pop	{fp, pc}
   13b50:	push	{fp, lr}
   13b54:	mov	fp, sp
   13b58:	sub	sp, sp, #24
   13b5c:	str	r0, [fp, #-8]
   13b60:	str	r1, [sp, #12]
   13b64:	str	r2, [sp, #8]
   13b68:	ldr	r0, [sp, #8]
   13b6c:	add	r0, r0, #1
   13b70:	add	r0, r0, #175	; 0xaf
   13b74:	mvn	r1, #7
   13b78:	and	r0, r0, r1
   13b7c:	str	r0, [sp]
   13b80:	ldr	r0, [sp]
   13b84:	bl	1faac <__assert_fail@plt+0xe238>
   13b88:	str	r0, [sp, #4]
   13b8c:	movw	r1, #0
   13b90:	cmp	r0, r1
   13b94:	bne	13ba4 <__assert_fail@plt+0x2330>
   13b98:	movw	r0, #0
   13b9c:	str	r0, [fp, #-4]
   13ba0:	b	13c3c <__assert_fail@plt+0x23c8>
   13ba4:	ldr	r0, [sp, #4]
   13ba8:	add	r0, r0, #168	; 0xa8
   13bac:	ldr	r1, [sp, #12]
   13bb0:	ldr	r2, [sp, #8]
   13bb4:	bl	1152c <memcpy@plt>
   13bb8:	ldr	r0, [sp, #4]
   13bbc:	add	r0, r0, #168	; 0xa8
   13bc0:	ldr	r1, [sp, #8]
   13bc4:	add	r0, r0, r1
   13bc8:	movw	r1, #0
   13bcc:	strb	r1, [r0]
   13bd0:	ldr	r0, [sp, #8]
   13bd4:	ldr	r1, [sp, #4]
   13bd8:	str	r0, [r1, #52]	; 0x34
   13bdc:	ldr	r0, [fp, #-8]
   13be0:	ldr	r1, [sp, #4]
   13be4:	str	r0, [r1, #44]	; 0x2c
   13be8:	ldr	r0, [fp, #-8]
   13bec:	ldr	r0, [r0, #24]
   13bf0:	ldr	r1, [sp, #4]
   13bf4:	str	r0, [r1, #28]
   13bf8:	ldr	r0, [sp, #4]
   13bfc:	movw	r1, #0
   13c00:	str	r1, [r0, #32]
   13c04:	ldr	r0, [sp, #4]
   13c08:	str	r1, [r0, #12]
   13c0c:	ldr	r0, [sp, #4]
   13c10:	movw	r2, #0
   13c14:	strh	r2, [r0, #58]	; 0x3a
   13c18:	ldr	r0, [sp, #4]
   13c1c:	movw	r2, #3
   13c20:	strh	r2, [r0, #60]	; 0x3c
   13c24:	ldr	r0, [sp, #4]
   13c28:	str	r1, [r0, #16]
   13c2c:	ldr	r0, [sp, #4]
   13c30:	str	r1, [r0, #20]
   13c34:	ldr	r0, [sp, #4]
   13c38:	str	r0, [fp, #-4]
   13c3c:	ldr	r0, [fp, #-4]
   13c40:	mov	sp, fp
   13c44:	pop	{fp, pc}
   13c48:	push	{fp, lr}
   13c4c:	mov	fp, sp
   13c50:	sub	sp, sp, #8
   13c54:	str	r0, [sp, #4]
   13c58:	and	r0, r1, #1
   13c5c:	strb	r0, [sp, #3]
   13c60:	ldr	r0, [sp, #4]
   13c64:	ldrh	r0, [r0, #56]	; 0x38
   13c68:	cmp	r0, #11
   13c6c:	beq	13c74 <__assert_fail@plt+0x2400>
   13c70:	bl	11838 <abort@plt>
   13c74:	b	13c78 <__assert_fail@plt+0x2404>
   13c78:	ldrb	r0, [sp, #3]
   13c7c:	mov	r1, #1
   13c80:	tst	r0, #1
   13c84:	movwne	r1, #2
   13c88:	ldr	r0, [sp, #4]
   13c8c:	mov	r2, #0
   13c90:	str	r2, [r0, #116]	; 0x74
   13c94:	str	r1, [r0, #112]	; 0x70
   13c98:	mov	sp, fp
   13c9c:	pop	{fp, pc}
   13ca0:	push	{fp, lr}
   13ca4:	mov	fp, sp
   13ca8:	sub	sp, sp, #24
   13cac:	str	r0, [fp, #-8]
   13cb0:	str	r1, [sp, #12]
   13cb4:	and	r0, r2, #1
   13cb8:	strb	r0, [sp, #11]
   13cbc:	ldr	r0, [sp, #12]
   13cc0:	add	r0, r0, #64	; 0x40
   13cc4:	str	r0, [sp, #4]
   13cc8:	ldr	r0, [sp, #12]
   13ccc:	ldr	r0, [r0, #48]	; 0x30
   13cd0:	cmp	r0, #0
   13cd4:	bne	13cf4 <__assert_fail@plt+0x2480>
   13cd8:	ldr	r0, [fp, #-8]
   13cdc:	ldr	r0, [r0, #48]	; 0x30
   13ce0:	and	r0, r0, #1
   13ce4:	cmp	r0, #0
   13ce8:	beq	13cf4 <__assert_fail@plt+0x2480>
   13cec:	movw	r0, #1
   13cf0:	strb	r0, [sp, #11]
   13cf4:	ldr	r0, [fp, #-8]
   13cf8:	ldr	r0, [r0, #48]	; 0x30
   13cfc:	and	r0, r0, #2
   13d00:	cmp	r0, #0
   13d04:	bne	13d14 <__assert_fail@plt+0x24a0>
   13d08:	ldrb	r0, [sp, #11]
   13d0c:	tst	r0, #1
   13d10:	beq	13d84 <__assert_fail@plt+0x2510>
   13d14:	ldr	r0, [sp, #12]
   13d18:	ldr	r0, [r0, #24]
   13d1c:	ldr	r1, [sp, #4]
   13d20:	bl	23370 <__assert_fail@plt+0x11afc>
   13d24:	cmp	r0, #0
   13d28:	beq	13d80 <__assert_fail@plt+0x250c>
   13d2c:	bl	11700 <__errno_location@plt>
   13d30:	ldr	r0, [r0]
   13d34:	cmp	r0, #2
   13d38:	bne	13d6c <__assert_fail@plt+0x24f8>
   13d3c:	ldr	r0, [sp, #12]
   13d40:	ldr	r0, [r0, #24]
   13d44:	ldr	r1, [sp, #4]
   13d48:	bl	23390 <__assert_fail@plt+0x11b1c>
   13d4c:	cmp	r0, #0
   13d50:	bne	13d6c <__assert_fail@plt+0x24f8>
   13d54:	bl	11700 <__errno_location@plt>
   13d58:	movw	lr, #0
   13d5c:	str	lr, [r0]
   13d60:	movw	r0, #13
   13d64:	strh	r0, [fp, #-2]
   13d68:	b	13eac <__assert_fail@plt+0x2638>
   13d6c:	bl	11700 <__errno_location@plt>
   13d70:	ldr	r0, [r0]
   13d74:	ldr	lr, [sp, #12]
   13d78:	str	r0, [lr, #32]
   13d7c:	b	13db8 <__assert_fail@plt+0x2544>
   13d80:	b	13ddc <__assert_fail@plt+0x2568>
   13d84:	ldr	r0, [fp, #-8]
   13d88:	ldr	r0, [r0, #32]
   13d8c:	ldr	r1, [sp, #12]
   13d90:	ldr	r1, [r1, #24]
   13d94:	ldr	r2, [sp, #4]
   13d98:	movw	r3, #256	; 0x100
   13d9c:	bl	233a0 <__assert_fail@plt+0x11b2c>
   13da0:	cmp	r0, #0
   13da4:	beq	13dd8 <__assert_fail@plt+0x2564>
   13da8:	bl	11700 <__errno_location@plt>
   13dac:	ldr	r0, [r0]
   13db0:	ldr	lr, [sp, #12]
   13db4:	str	r0, [lr, #32]
   13db8:	ldr	r0, [sp, #4]
   13dbc:	movw	r1, #0
   13dc0:	and	r1, r1, #255	; 0xff
   13dc4:	movw	r2, #104	; 0x68
   13dc8:	bl	11718 <memset@plt>
   13dcc:	movw	r0, #10
   13dd0:	strh	r0, [fp, #-2]
   13dd4:	b	13eac <__assert_fail@plt+0x2638>
   13dd8:	b	13ddc <__assert_fail@plt+0x2568>
   13ddc:	ldr	r0, [sp, #4]
   13de0:	ldr	r0, [r0, #16]
   13de4:	and	r0, r0, #61440	; 0xf000
   13de8:	cmp	r0, #16384	; 0x4000
   13dec:	bne	13e64 <__assert_fail@plt+0x25f0>
   13df0:	ldr	r0, [sp, #12]
   13df4:	ldrb	r0, [r0, #168]	; 0xa8
   13df8:	cmp	r0, #46	; 0x2e
   13dfc:	bne	13e58 <__assert_fail@plt+0x25e4>
   13e00:	ldr	r0, [sp, #12]
   13e04:	ldrsb	r0, [r0, #169]	; 0xa9
   13e08:	cmp	r0, #0
   13e0c:	beq	13e30 <__assert_fail@plt+0x25bc>
   13e10:	ldr	r0, [sp, #12]
   13e14:	ldrb	r0, [r0, #169]	; 0xa9
   13e18:	cmp	r0, #46	; 0x2e
   13e1c:	bne	13e58 <__assert_fail@plt+0x25e4>
   13e20:	ldr	r0, [sp, #12]
   13e24:	ldrsb	r0, [r0, #170]	; 0xaa
   13e28:	cmp	r0, #0
   13e2c:	bne	13e58 <__assert_fail@plt+0x25e4>
   13e30:	ldr	r0, [sp, #12]
   13e34:	ldr	r0, [r0, #48]	; 0x30
   13e38:	cmp	r0, #0
   13e3c:	movw	r0, #0
   13e40:	moveq	r0, #1
   13e44:	tst	r0, #1
   13e48:	movw	r0, #1
   13e4c:	moveq	r0, #5
   13e50:	strh	r0, [fp, #-2]
   13e54:	b	13eac <__assert_fail@plt+0x2638>
   13e58:	movw	r0, #1
   13e5c:	strh	r0, [fp, #-2]
   13e60:	b	13eac <__assert_fail@plt+0x2638>
   13e64:	ldr	r0, [sp, #4]
   13e68:	ldr	r0, [r0, #16]
   13e6c:	and	r0, r0, #61440	; 0xf000
   13e70:	cmp	r0, #40960	; 0xa000
   13e74:	bne	13e84 <__assert_fail@plt+0x2610>
   13e78:	movw	r0, #12
   13e7c:	strh	r0, [fp, #-2]
   13e80:	b	13eac <__assert_fail@plt+0x2638>
   13e84:	ldr	r0, [sp, #4]
   13e88:	ldr	r0, [r0, #16]
   13e8c:	and	r0, r0, #61440	; 0xf000
   13e90:	cmp	r0, #32768	; 0x8000
   13e94:	bne	13ea4 <__assert_fail@plt+0x2630>
   13e98:	movw	r0, #8
   13e9c:	strh	r0, [fp, #-2]
   13ea0:	b	13eac <__assert_fail@plt+0x2638>
   13ea4:	movw	r0, #3
   13ea8:	strh	r0, [fp, #-2]
   13eac:	ldrh	r0, [fp, #-2]
   13eb0:	mov	sp, fp
   13eb4:	pop	{fp, pc}
   13eb8:	push	{fp, lr}
   13ebc:	mov	fp, sp
   13ec0:	sub	sp, sp, #48	; 0x30
   13ec4:	add	r3, sp, #20
   13ec8:	str	r0, [fp, #-8]
   13ecc:	str	r1, [fp, #-12]
   13ed0:	str	r2, [fp, #-16]
   13ed4:	mov	r0, r3
   13ed8:	cmp	r3, r0
   13edc:	bne	13ef0 <__assert_fail@plt+0x267c>
   13ee0:	ldr	r0, [fp, #-8]
   13ee4:	ldr	r0, [r0, #44]	; 0x2c
   13ee8:	str	r0, [sp, #8]
   13eec:	b	13f00 <__assert_fail@plt+0x268c>
   13ef0:	movw	r0, #28268	; 0x6e6c
   13ef4:	movt	r0, #1
   13ef8:	str	r0, [sp, #8]
   13efc:	b	13f00 <__assert_fail@plt+0x268c>
   13f00:	ldr	r0, [sp, #8]
   13f04:	str	r0, [sp, #16]
   13f08:	ldr	r0, [fp, #-16]
   13f0c:	ldr	r1, [fp, #-8]
   13f10:	ldr	r1, [r1, #40]	; 0x28
   13f14:	cmp	r0, r1
   13f18:	bls	13fa8 <__assert_fail@plt+0x2734>
   13f1c:	ldr	r0, [pc, #344]	; 1407c <__assert_fail@plt+0x2808>
   13f20:	ldr	r1, [fp, #-16]
   13f24:	add	r1, r1, #40	; 0x28
   13f28:	ldr	r2, [fp, #-8]
   13f2c:	str	r1, [r2, #40]	; 0x28
   13f30:	ldr	r1, [fp, #-8]
   13f34:	ldr	r1, [r1, #40]	; 0x28
   13f38:	cmp	r0, r1
   13f3c:	bcc	13f70 <__assert_fail@plt+0x26fc>
   13f40:	ldr	r0, [fp, #-8]
   13f44:	ldr	r1, [r0, #8]
   13f48:	ldr	r0, [r0, #40]	; 0x28
   13f4c:	lsl	r0, r0, #2
   13f50:	str	r0, [sp, #4]
   13f54:	mov	r0, r1
   13f58:	ldr	r1, [sp, #4]
   13f5c:	bl	1fb1c <__assert_fail@plt+0xe2a8>
   13f60:	str	r0, [sp, #12]
   13f64:	movw	r1, #0
   13f68:	cmp	r0, r1
   13f6c:	bne	13f9c <__assert_fail@plt+0x2728>
   13f70:	ldr	r0, [fp, #-8]
   13f74:	ldr	r0, [r0, #8]
   13f78:	bl	209b8 <__assert_fail@plt+0xf144>
   13f7c:	ldr	r0, [fp, #-8]
   13f80:	movw	lr, #0
   13f84:	str	lr, [r0, #8]
   13f88:	ldr	r0, [fp, #-8]
   13f8c:	str	lr, [r0, #40]	; 0x28
   13f90:	ldr	r0, [fp, #-12]
   13f94:	str	r0, [fp, #-4]
   13f98:	b	14070 <__assert_fail@plt+0x27fc>
   13f9c:	ldr	r0, [sp, #12]
   13fa0:	ldr	r1, [fp, #-8]
   13fa4:	str	r0, [r1, #8]
   13fa8:	ldr	r0, [fp, #-8]
   13fac:	ldr	r0, [r0, #8]
   13fb0:	str	r0, [fp, #-20]	; 0xffffffec
   13fb4:	ldr	r0, [fp, #-12]
   13fb8:	str	r0, [sp, #24]
   13fbc:	ldr	r0, [sp, #24]
   13fc0:	movw	r1, #0
   13fc4:	cmp	r0, r1
   13fc8:	beq	13ff0 <__assert_fail@plt+0x277c>
   13fcc:	ldr	r0, [sp, #24]
   13fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13fd4:	add	r2, r1, #4
   13fd8:	str	r2, [fp, #-20]	; 0xffffffec
   13fdc:	str	r0, [r1]
   13fe0:	ldr	r0, [sp, #24]
   13fe4:	ldr	r0, [r0, #8]
   13fe8:	str	r0, [sp, #24]
   13fec:	b	13fbc <__assert_fail@plt+0x2748>
   13ff0:	ldr	r0, [fp, #-8]
   13ff4:	ldr	r0, [r0, #8]
   13ff8:	ldr	r1, [fp, #-16]
   13ffc:	ldr	r3, [sp, #16]
   14000:	movw	r2, #4
   14004:	bl	117d8 <qsort@plt>
   14008:	ldr	r0, [fp, #-8]
   1400c:	ldr	r0, [r0, #8]
   14010:	str	r0, [fp, #-20]	; 0xffffffec
   14014:	ldr	r0, [r0]
   14018:	str	r0, [fp, #-12]
   1401c:	ldr	r0, [fp, #-16]
   14020:	mvn	r1, #0
   14024:	add	r0, r0, r1
   14028:	str	r0, [fp, #-16]
   1402c:	cmp	r0, #0
   14030:	beq	14058 <__assert_fail@plt+0x27e4>
   14034:	ldr	r0, [fp, #-20]	; 0xffffffec
   14038:	ldr	r0, [r0, #4]
   1403c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14040:	ldr	r1, [r1]
   14044:	str	r0, [r1, #8]
   14048:	ldr	r0, [fp, #-20]	; 0xffffffec
   1404c:	add	r0, r0, #4
   14050:	str	r0, [fp, #-20]	; 0xffffffec
   14054:	b	1401c <__assert_fail@plt+0x27a8>
   14058:	ldr	r0, [fp, #-20]	; 0xffffffec
   1405c:	ldr	r0, [r0]
   14060:	movw	r1, #0
   14064:	str	r1, [r0, #8]
   14068:	ldr	r0, [fp, #-12]
   1406c:	str	r0, [fp, #-4]
   14070:	ldr	r0, [fp, #-4]
   14074:	mov	sp, fp
   14078:	pop	{fp, pc}
   1407c:	svccc	0x00ffffff
   14080:	push	{fp, lr}
   14084:	mov	fp, sp
   14088:	sub	sp, sp, #16
   1408c:	str	r0, [sp, #8]
   14090:	ldr	r0, [sp, #8]
   14094:	ldr	r0, [r0, #48]	; 0x30
   14098:	movw	r1, #258	; 0x102
   1409c:	and	r0, r0, r1
   140a0:	cmp	r0, #0
   140a4:	beq	14100 <__assert_fail@plt+0x288c>
   140a8:	movw	r0, #31
   140ac:	movw	r1, #0
   140b0:	movw	r2, #26428	; 0x673c
   140b4:	movt	r2, #1
   140b8:	movw	r3, #26512	; 0x6790
   140bc:	movt	r3, #1
   140c0:	movw	ip, #2488	; 0x9b8
   140c4:	movt	ip, #2
   140c8:	str	ip, [sp]
   140cc:	bl	176d4 <__assert_fail@plt+0x5e60>
   140d0:	ldr	r1, [sp, #8]
   140d4:	str	r0, [r1, #56]	; 0x38
   140d8:	ldr	r0, [sp, #8]
   140dc:	ldr	r0, [r0, #56]	; 0x38
   140e0:	movw	r1, #0
   140e4:	cmp	r0, r1
   140e8:	bne	140fc <__assert_fail@plt+0x2888>
   140ec:	movw	r0, #0
   140f0:	and	r0, r0, #1
   140f4:	strb	r0, [fp, #-1]
   140f8:	b	1414c <__assert_fail@plt+0x28d8>
   140fc:	b	14140 <__assert_fail@plt+0x28cc>
   14100:	movw	r0, #32
   14104:	bl	1faac <__assert_fail@plt+0xe238>
   14108:	ldr	lr, [sp, #8]
   1410c:	str	r0, [lr, #56]	; 0x38
   14110:	ldr	r0, [sp, #8]
   14114:	ldr	r0, [r0, #56]	; 0x38
   14118:	movw	lr, #0
   1411c:	cmp	r0, lr
   14120:	bne	14134 <__assert_fail@plt+0x28c0>
   14124:	movw	r0, #0
   14128:	and	r0, r0, #1
   1412c:	strb	r0, [fp, #-1]
   14130:	b	1414c <__assert_fail@plt+0x28d8>
   14134:	ldr	r0, [sp, #8]
   14138:	ldr	r0, [r0, #56]	; 0x38
   1413c:	bl	201c8 <__assert_fail@plt+0xe954>
   14140:	movw	r0, #1
   14144:	and	r0, r0, #1
   14148:	strb	r0, [fp, #-1]
   1414c:	ldrb	r0, [fp, #-1]
   14150:	and	r0, r0, #1
   14154:	mov	sp, fp
   14158:	pop	{fp, pc}
   1415c:	push	{fp, lr}
   14160:	mov	fp, sp
   14164:	sub	sp, sp, #24
   14168:	ldr	r2, [pc, #132]	; 141f4 <__assert_fail@plt+0x2980>
   1416c:	str	r0, [fp, #-4]
   14170:	str	r1, [fp, #-8]
   14174:	ldr	r0, [fp, #-4]
   14178:	ldr	r0, [r0, #48]	; 0x30
   1417c:	and	r0, r0, #16
   14180:	cmp	r0, #0
   14184:	movw	r0, #0
   14188:	movne	r0, #1
   1418c:	tst	r0, #1
   14190:	movw	r0, #32768	; 0x8000
   14194:	moveq	r0, #0
   14198:	orr	r0, r0, r2
   1419c:	str	r0, [sp, #12]
   141a0:	ldr	r0, [fp, #-4]
   141a4:	ldr	r0, [r0, #48]	; 0x30
   141a8:	and	r0, r0, #512	; 0x200
   141ac:	cmp	r0, #0
   141b0:	beq	141d0 <__assert_fail@plt+0x295c>
   141b4:	ldr	r0, [fp, #-4]
   141b8:	ldr	r0, [r0, #32]
   141bc:	ldr	r1, [fp, #-8]
   141c0:	ldr	r2, [sp, #12]
   141c4:	bl	18d10 <__assert_fail@plt+0x749c>
   141c8:	str	r0, [sp, #4]
   141cc:	b	141e0 <__assert_fail@plt+0x296c>
   141d0:	ldr	r0, [fp, #-8]
   141d4:	ldr	r1, [sp, #12]
   141d8:	bl	20884 <__assert_fail@plt+0xf010>
   141dc:	str	r0, [sp, #4]
   141e0:	ldr	r0, [sp, #4]
   141e4:	str	r0, [sp, #8]
   141e8:	ldr	r0, [sp, #8]
   141ec:	mov	sp, fp
   141f0:	pop	{fp, pc}
   141f4:	andeq	r4, r8, r0, lsl #18
   141f8:	push	{fp, lr}
   141fc:	mov	fp, sp
   14200:	sub	sp, sp, #16
   14204:	str	r0, [fp, #-4]
   14208:	ldr	r0, [fp, #-4]
   1420c:	str	r0, [sp, #8]
   14210:	movw	r1, #0
   14214:	cmp	r0, r1
   14218:	beq	14258 <__assert_fail@plt+0x29e4>
   1421c:	ldr	r0, [fp, #-4]
   14220:	ldr	r0, [r0, #8]
   14224:	str	r0, [fp, #-4]
   14228:	ldr	r0, [sp, #8]
   1422c:	ldr	r0, [r0, #12]
   14230:	movw	r1, #0
   14234:	cmp	r0, r1
   14238:	beq	1424c <__assert_fail@plt+0x29d8>
   1423c:	ldr	r0, [sp, #8]
   14240:	ldr	r0, [r0, #12]
   14244:	bl	1185c <closedir@plt>
   14248:	str	r0, [sp, #4]
   1424c:	ldr	r0, [sp, #8]
   14250:	bl	209b8 <__assert_fail@plt+0xf144>
   14254:	b	14208 <__assert_fail@plt+0x2994>
   14258:	mov	sp, fp
   1425c:	pop	{fp, pc}
   14260:	push	{fp, lr}
   14264:	mov	fp, sp
   14268:	sub	sp, sp, #32
   1426c:	str	r0, [fp, #-8]
   14270:	movw	r0, #0
   14274:	str	r0, [sp, #12]
   14278:	ldr	r1, [fp, #-8]
   1427c:	ldr	r1, [r1]
   14280:	cmp	r1, r0
   14284:	beq	142f8 <__assert_fail@plt+0x2a84>
   14288:	ldr	r0, [fp, #-8]
   1428c:	ldr	r0, [r0]
   14290:	str	r0, [sp, #16]
   14294:	ldr	r0, [sp, #16]
   14298:	ldr	r0, [r0, #48]	; 0x30
   1429c:	cmp	r0, #0
   142a0:	blt	142f0 <__assert_fail@plt+0x2a7c>
   142a4:	ldr	r0, [sp, #16]
   142a8:	str	r0, [fp, #-12]
   142ac:	ldr	r0, [sp, #16]
   142b0:	ldr	r0, [r0, #8]
   142b4:	movw	r1, #0
   142b8:	cmp	r0, r1
   142bc:	beq	142d0 <__assert_fail@plt+0x2a5c>
   142c0:	ldr	r0, [sp, #16]
   142c4:	ldr	r0, [r0, #8]
   142c8:	str	r0, [sp, #8]
   142cc:	b	142dc <__assert_fail@plt+0x2a68>
   142d0:	ldr	r0, [sp, #16]
   142d4:	ldr	r0, [r0, #4]
   142d8:	str	r0, [sp, #8]
   142dc:	ldr	r0, [sp, #8]
   142e0:	str	r0, [sp, #16]
   142e4:	ldr	r0, [fp, #-12]
   142e8:	bl	209b8 <__assert_fail@plt+0xf144>
   142ec:	b	14294 <__assert_fail@plt+0x2a20>
   142f0:	ldr	r0, [sp, #16]
   142f4:	bl	209b8 <__assert_fail@plt+0xf144>
   142f8:	ldr	r0, [fp, #-8]
   142fc:	ldr	r0, [r0, #4]
   14300:	movw	r1, #0
   14304:	cmp	r0, r1
   14308:	beq	14318 <__assert_fail@plt+0x2aa4>
   1430c:	ldr	r0, [fp, #-8]
   14310:	ldr	r0, [r0, #4]
   14314:	bl	141f8 <__assert_fail@plt+0x2984>
   14318:	ldr	r0, [fp, #-8]
   1431c:	ldr	r0, [r0, #8]
   14320:	bl	209b8 <__assert_fail@plt+0xf144>
   14324:	ldr	r0, [fp, #-8]
   14328:	ldr	r0, [r0, #24]
   1432c:	bl	209b8 <__assert_fail@plt+0xf144>
   14330:	ldr	r0, [fp, #-8]
   14334:	ldr	r0, [r0, #48]	; 0x30
   14338:	and	r0, r0, #512	; 0x200
   1433c:	cmp	r0, #0
   14340:	beq	14380 <__assert_fail@plt+0x2b0c>
   14344:	ldr	r0, [fp, #-8]
   14348:	ldr	r0, [r0, #32]
   1434c:	movw	r1, #0
   14350:	cmp	r1, r0
   14354:	bgt	1437c <__assert_fail@plt+0x2b08>
   14358:	ldr	r0, [fp, #-8]
   1435c:	ldr	r0, [r0, #32]
   14360:	bl	11844 <close@plt>
   14364:	cmp	r0, #0
   14368:	beq	14378 <__assert_fail@plt+0x2b04>
   1436c:	bl	11700 <__errno_location@plt>
   14370:	ldr	r0, [r0]
   14374:	str	r0, [sp, #12]
   14378:	b	1437c <__assert_fail@plt+0x2b08>
   1437c:	b	143ec <__assert_fail@plt+0x2b78>
   14380:	ldr	r0, [fp, #-8]
   14384:	ldr	r0, [r0, #48]	; 0x30
   14388:	and	r0, r0, #4
   1438c:	cmp	r0, #0
   14390:	bne	143e8 <__assert_fail@plt+0x2b74>
   14394:	ldr	r0, [fp, #-8]
   14398:	ldr	r0, [r0, #28]
   1439c:	bl	117cc <fchdir@plt>
   143a0:	cmp	r0, #0
   143a4:	beq	143b4 <__assert_fail@plt+0x2b40>
   143a8:	bl	11700 <__errno_location@plt>
   143ac:	ldr	r0, [r0]
   143b0:	str	r0, [sp, #12]
   143b4:	ldr	r0, [fp, #-8]
   143b8:	ldr	r0, [r0, #28]
   143bc:	bl	11844 <close@plt>
   143c0:	cmp	r0, #0
   143c4:	beq	143e4 <__assert_fail@plt+0x2b70>
   143c8:	ldr	r0, [sp, #12]
   143cc:	cmp	r0, #0
   143d0:	bne	143e0 <__assert_fail@plt+0x2b6c>
   143d4:	bl	11700 <__errno_location@plt>
   143d8:	ldr	r0, [r0]
   143dc:	str	r0, [sp, #12]
   143e0:	b	143e4 <__assert_fail@plt+0x2b70>
   143e4:	b	143e8 <__assert_fail@plt+0x2b74>
   143e8:	b	143ec <__assert_fail@plt+0x2b78>
   143ec:	ldr	r0, [fp, #-8]
   143f0:	add	r0, r0, #60	; 0x3c
   143f4:	bl	14468 <__assert_fail@plt+0x2bf4>
   143f8:	ldr	r0, [fp, #-8]
   143fc:	ldr	r0, [r0, #52]	; 0x34
   14400:	movw	lr, #0
   14404:	cmp	r0, lr
   14408:	beq	14418 <__assert_fail@plt+0x2ba4>
   1440c:	ldr	r0, [fp, #-8]
   14410:	ldr	r0, [r0, #52]	; 0x34
   14414:	bl	17c28 <__assert_fail@plt+0x63b4>
   14418:	ldr	r0, [fp, #-8]
   1441c:	bl	144c4 <__assert_fail@plt+0x2c50>
   14420:	ldr	r0, [fp, #-8]
   14424:	bl	209b8 <__assert_fail@plt+0xf144>
   14428:	ldr	r0, [sp, #12]
   1442c:	cmp	r0, #0
   14430:	beq	14454 <__assert_fail@plt+0x2be0>
   14434:	ldr	r0, [sp, #12]
   14438:	str	r0, [sp, #4]
   1443c:	bl	11700 <__errno_location@plt>
   14440:	ldr	lr, [sp, #4]
   14444:	str	lr, [r0]
   14448:	mvn	r0, #0
   1444c:	str	r0, [fp, #-4]
   14450:	b	1445c <__assert_fail@plt+0x2be8>
   14454:	movw	r0, #0
   14458:	str	r0, [fp, #-4]
   1445c:	ldr	r0, [fp, #-4]
   14460:	mov	sp, fp
   14464:	pop	{fp, pc}
   14468:	push	{fp, lr}
   1446c:	mov	fp, sp
   14470:	sub	sp, sp, #16
   14474:	str	r0, [fp, #-4]
   14478:	ldr	r0, [fp, #-4]
   1447c:	bl	18ba8 <__assert_fail@plt+0x7334>
   14480:	mvn	lr, #0
   14484:	eor	r0, r0, lr
   14488:	tst	r0, #1
   1448c:	beq	144bc <__assert_fail@plt+0x2c48>
   14490:	ldr	r0, [fp, #-4]
   14494:	bl	18c78 <__assert_fail@plt+0x7404>
   14498:	str	r0, [sp, #8]
   1449c:	ldr	r0, [sp, #8]
   144a0:	movw	lr, #0
   144a4:	cmp	lr, r0
   144a8:	bgt	144b8 <__assert_fail@plt+0x2c44>
   144ac:	ldr	r0, [sp, #8]
   144b0:	bl	11844 <close@plt>
   144b4:	str	r0, [sp, #4]
   144b8:	b	14478 <__assert_fail@plt+0x2c04>
   144bc:	mov	sp, fp
   144c0:	pop	{fp, pc}
   144c4:	push	{fp, lr}
   144c8:	mov	fp, sp
   144cc:	sub	sp, sp, #8
   144d0:	str	r0, [sp, #4]
   144d4:	ldr	r0, [sp, #4]
   144d8:	ldr	r0, [r0, #48]	; 0x30
   144dc:	movw	r1, #258	; 0x102
   144e0:	and	r0, r0, r1
   144e4:	cmp	r0, #0
   144e8:	beq	14510 <__assert_fail@plt+0x2c9c>
   144ec:	ldr	r0, [sp, #4]
   144f0:	ldr	r0, [r0, #56]	; 0x38
   144f4:	movw	r1, #0
   144f8:	cmp	r0, r1
   144fc:	beq	1450c <__assert_fail@plt+0x2c98>
   14500:	ldr	r0, [sp, #4]
   14504:	ldr	r0, [r0, #56]	; 0x38
   14508:	bl	17c28 <__assert_fail@plt+0x63b4>
   1450c:	b	1451c <__assert_fail@plt+0x2ca8>
   14510:	ldr	r0, [sp, #4]
   14514:	ldr	r0, [r0, #56]	; 0x38
   14518:	bl	209b8 <__assert_fail@plt+0xf144>
   1451c:	mov	sp, fp
   14520:	pop	{fp, pc}
   14524:	push	{fp, lr}
   14528:	mov	fp, sp
   1452c:	sub	sp, sp, #48	; 0x30
   14530:	str	r0, [fp, #-8]
   14534:	ldr	r0, [fp, #-8]
   14538:	ldr	r0, [r0]
   1453c:	movw	r1, #0
   14540:	cmp	r0, r1
   14544:	beq	1455c <__assert_fail@plt+0x2ce8>
   14548:	ldr	r0, [fp, #-8]
   1454c:	ldr	r0, [r0, #48]	; 0x30
   14550:	and	r0, r0, #8192	; 0x2000
   14554:	cmp	r0, #0
   14558:	beq	14568 <__assert_fail@plt+0x2cf4>
   1455c:	movw	r0, #0
   14560:	str	r0, [fp, #-4]
   14564:	b	14f04 <__assert_fail@plt+0x3690>
   14568:	ldr	r0, [fp, #-8]
   1456c:	ldr	r0, [r0]
   14570:	str	r0, [fp, #-12]
   14574:	ldr	r0, [fp, #-12]
   14578:	ldrh	r0, [r0, #60]	; 0x3c
   1457c:	strh	r0, [fp, #-18]	; 0xffffffee
   14580:	ldr	r0, [fp, #-12]
   14584:	movw	r1, #3
   14588:	strh	r1, [r0, #60]	; 0x3c
   1458c:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14590:	cmp	r0, #1
   14594:	bne	145c0 <__assert_fail@plt+0x2d4c>
   14598:	ldr	r0, [fp, #-8]
   1459c:	ldr	r1, [fp, #-12]
   145a0:	movw	r2, #0
   145a4:	and	r2, r2, #1
   145a8:	bl	13ca0 <__assert_fail@plt+0x242c>
   145ac:	ldr	r1, [fp, #-12]
   145b0:	strh	r0, [r1, #56]	; 0x38
   145b4:	ldr	r0, [fp, #-12]
   145b8:	str	r0, [fp, #-4]
   145bc:	b	14f04 <__assert_fail@plt+0x3690>
   145c0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   145c4:	cmp	r0, #2
   145c8:	bne	14684 <__assert_fail@plt+0x2e10>
   145cc:	ldr	r0, [fp, #-12]
   145d0:	ldrh	r0, [r0, #56]	; 0x38
   145d4:	cmp	r0, #12
   145d8:	beq	145ec <__assert_fail@plt+0x2d78>
   145dc:	ldr	r0, [fp, #-12]
   145e0:	ldrh	r0, [r0, #56]	; 0x38
   145e4:	cmp	r0, #13
   145e8:	bne	14684 <__assert_fail@plt+0x2e10>
   145ec:	ldr	r0, [fp, #-8]
   145f0:	ldr	r1, [fp, #-12]
   145f4:	movw	r2, #1
   145f8:	and	r2, r2, #1
   145fc:	bl	13ca0 <__assert_fail@plt+0x242c>
   14600:	ldr	r1, [fp, #-12]
   14604:	strh	r0, [r1, #56]	; 0x38
   14608:	ldr	r0, [fp, #-12]
   1460c:	ldrh	r0, [r0, #56]	; 0x38
   14610:	cmp	r0, #1
   14614:	bne	14680 <__assert_fail@plt+0x2e0c>
   14618:	ldr	r0, [fp, #-8]
   1461c:	ldr	r0, [r0, #48]	; 0x30
   14620:	and	r0, r0, #4
   14624:	cmp	r0, #0
   14628:	bne	14680 <__assert_fail@plt+0x2e0c>
   1462c:	ldr	r0, [fp, #-8]
   14630:	movw	r1, #16799	; 0x419f
   14634:	movt	r1, #2
   14638:	bl	1415c <__assert_fail@plt+0x28e8>
   1463c:	ldr	r1, [fp, #-12]
   14640:	str	r0, [r1, #36]	; 0x24
   14644:	cmp	r0, #0
   14648:	bge	1466c <__assert_fail@plt+0x2df8>
   1464c:	bl	11700 <__errno_location@plt>
   14650:	ldr	r0, [r0]
   14654:	ldr	lr, [fp, #-12]
   14658:	str	r0, [lr, #32]
   1465c:	ldr	r0, [fp, #-12]
   14660:	movw	lr, #7
   14664:	strh	lr, [r0, #56]	; 0x38
   14668:	b	1467c <__assert_fail@plt+0x2e08>
   1466c:	ldr	r0, [fp, #-12]
   14670:	ldrh	r1, [r0, #58]	; 0x3a
   14674:	orr	r1, r1, #2
   14678:	strh	r1, [r0, #58]	; 0x3a
   1467c:	b	14680 <__assert_fail@plt+0x2e0c>
   14680:	b	14b9c <__assert_fail@plt+0x3328>
   14684:	ldr	r0, [fp, #-12]
   14688:	ldrh	r0, [r0, #56]	; 0x38
   1468c:	cmp	r0, #1
   14690:	bne	148f0 <__assert_fail@plt+0x307c>
   14694:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14698:	cmp	r0, #4
   1469c:	beq	146e4 <__assert_fail@plt+0x2e70>
   146a0:	ldr	r0, [fp, #-8]
   146a4:	ldr	r0, [r0, #48]	; 0x30
   146a8:	and	r0, r0, #64	; 0x40
   146ac:	cmp	r0, #0
   146b0:	beq	14758 <__assert_fail@plt+0x2ee4>
   146b4:	ldr	r0, [fp, #-12]
   146b8:	ldr	r1, [r0, #64]	; 0x40
   146bc:	ldr	r0, [r0, #68]	; 0x44
   146c0:	ldr	r2, [fp, #-8]
   146c4:	ldr	r3, [r2, #16]
   146c8:	ldr	r2, [r2, #20]
   146cc:	eor	r0, r0, r2
   146d0:	eor	r1, r1, r3
   146d4:	orr	r0, r1, r0
   146d8:	cmp	r0, #0
   146dc:	beq	14758 <__assert_fail@plt+0x2ee4>
   146e0:	b	146e4 <__assert_fail@plt+0x2e70>
   146e4:	ldr	r0, [fp, #-12]
   146e8:	ldrh	r0, [r0, #58]	; 0x3a
   146ec:	and	r0, r0, #2
   146f0:	cmp	r0, #0
   146f4:	beq	14708 <__assert_fail@plt+0x2e94>
   146f8:	ldr	r0, [fp, #-12]
   146fc:	ldr	r0, [r0, #36]	; 0x24
   14700:	bl	11844 <close@plt>
   14704:	str	r0, [sp, #20]
   14708:	ldr	r0, [fp, #-8]
   1470c:	ldr	r0, [r0, #4]
   14710:	movw	r1, #0
   14714:	cmp	r0, r1
   14718:	beq	14734 <__assert_fail@plt+0x2ec0>
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldr	r0, [r0, #4]
   14724:	bl	141f8 <__assert_fail@plt+0x2984>
   14728:	ldr	r0, [fp, #-8]
   1472c:	movw	lr, #0
   14730:	str	lr, [r0, #4]
   14734:	ldr	r0, [fp, #-12]
   14738:	movw	r1, #6
   1473c:	strh	r1, [r0, #56]	; 0x38
   14740:	ldr	r0, [fp, #-8]
   14744:	ldr	r1, [fp, #-12]
   14748:	bl	14f10 <__assert_fail@plt+0x369c>
   1474c:	ldr	r0, [fp, #-12]
   14750:	str	r0, [fp, #-4]
   14754:	b	14f04 <__assert_fail@plt+0x3690>
   14758:	ldr	r0, [fp, #-8]
   1475c:	ldr	r0, [r0, #4]
   14760:	movw	r1, #0
   14764:	cmp	r0, r1
   14768:	beq	147ac <__assert_fail@plt+0x2f38>
   1476c:	ldr	r0, [fp, #-8]
   14770:	ldr	r0, [r0, #48]	; 0x30
   14774:	and	r0, r0, #4096	; 0x1000
   14778:	cmp	r0, #0
   1477c:	beq	147ac <__assert_fail@plt+0x2f38>
   14780:	ldr	r0, [fp, #-8]
   14784:	ldr	r1, [r0, #48]	; 0x30
   14788:	mvn	r2, #4096	; 0x1000
   1478c:	and	r1, r1, r2
   14790:	str	r1, [r0, #48]	; 0x30
   14794:	ldr	r0, [fp, #-8]
   14798:	ldr	r0, [r0, #4]
   1479c:	bl	141f8 <__assert_fail@plt+0x2984>
   147a0:	ldr	r0, [fp, #-8]
   147a4:	movw	r1, #0
   147a8:	str	r1, [r0, #4]
   147ac:	ldr	r0, [fp, #-8]
   147b0:	ldr	r0, [r0, #4]
   147b4:	movw	r1, #0
   147b8:	cmp	r0, r1
   147bc:	beq	14848 <__assert_fail@plt+0x2fd4>
   147c0:	ldr	r0, [fp, #-8]
   147c4:	ldr	r1, [fp, #-12]
   147c8:	ldr	r2, [fp, #-12]
   147cc:	ldr	r3, [r2, #24]
   147d0:	mvn	r2, #0
   147d4:	bl	150b0 <__assert_fail@plt+0x383c>
   147d8:	cmp	r0, #0
   147dc:	beq	14844 <__assert_fail@plt+0x2fd0>
   147e0:	bl	11700 <__errno_location@plt>
   147e4:	ldr	r0, [r0]
   147e8:	ldr	lr, [fp, #-12]
   147ec:	str	r0, [lr, #32]
   147f0:	ldr	r0, [fp, #-12]
   147f4:	ldrh	lr, [r0, #58]	; 0x3a
   147f8:	orr	lr, lr, #1
   147fc:	strh	lr, [r0, #58]	; 0x3a
   14800:	ldr	r0, [fp, #-8]
   14804:	ldr	r0, [r0, #4]
   14808:	str	r0, [fp, #-12]
   1480c:	ldr	r0, [fp, #-12]
   14810:	movw	r1, #0
   14814:	cmp	r0, r1
   14818:	beq	14840 <__assert_fail@plt+0x2fcc>
   1481c:	ldr	r0, [fp, #-12]
   14820:	ldr	r0, [r0, #4]
   14824:	ldr	r0, [r0, #24]
   14828:	ldr	r1, [fp, #-12]
   1482c:	str	r0, [r1, #24]
   14830:	ldr	r0, [fp, #-12]
   14834:	ldr	r0, [r0, #8]
   14838:	str	r0, [fp, #-12]
   1483c:	b	1480c <__assert_fail@plt+0x2f98>
   14840:	b	14844 <__assert_fail@plt+0x2fd0>
   14844:	b	148d4 <__assert_fail@plt+0x3060>
   14848:	ldr	r0, [fp, #-8]
   1484c:	movw	r1, #3
   14850:	bl	15374 <__assert_fail@plt+0x3b00>
   14854:	ldr	r1, [fp, #-8]
   14858:	str	r0, [r1, #4]
   1485c:	movw	r1, #0
   14860:	cmp	r0, r1
   14864:	bne	148d0 <__assert_fail@plt+0x305c>
   14868:	ldr	r0, [fp, #-8]
   1486c:	ldr	r0, [r0, #48]	; 0x30
   14870:	and	r0, r0, #8192	; 0x2000
   14874:	cmp	r0, #0
   14878:	beq	14888 <__assert_fail@plt+0x3014>
   1487c:	movw	r0, #0
   14880:	str	r0, [fp, #-4]
   14884:	b	14f04 <__assert_fail@plt+0x3690>
   14888:	ldr	r0, [fp, #-12]
   1488c:	ldr	r0, [r0, #32]
   14890:	cmp	r0, #0
   14894:	beq	148b4 <__assert_fail@plt+0x3040>
   14898:	ldr	r0, [fp, #-12]
   1489c:	ldrh	r0, [r0, #56]	; 0x38
   148a0:	cmp	r0, #4
   148a4:	beq	148b4 <__assert_fail@plt+0x3040>
   148a8:	ldr	r0, [fp, #-12]
   148ac:	movw	r1, #7
   148b0:	strh	r1, [r0, #56]	; 0x38
   148b4:	b	148b8 <__assert_fail@plt+0x3044>
   148b8:	ldr	r0, [fp, #-8]
   148bc:	ldr	r1, [fp, #-12]
   148c0:	bl	14f10 <__assert_fail@plt+0x369c>
   148c4:	ldr	r0, [fp, #-12]
   148c8:	str	r0, [fp, #-4]
   148cc:	b	14f04 <__assert_fail@plt+0x3690>
   148d0:	b	148d4 <__assert_fail@plt+0x3060>
   148d4:	ldr	r0, [fp, #-8]
   148d8:	ldr	r0, [r0, #4]
   148dc:	str	r0, [fp, #-12]
   148e0:	ldr	r0, [fp, #-8]
   148e4:	movw	r1, #0
   148e8:	str	r1, [r0, #4]
   148ec:	b	14afc <__assert_fail@plt+0x3288>
   148f0:	b	148f4 <__assert_fail@plt+0x3080>
   148f4:	ldr	r0, [fp, #-12]
   148f8:	str	r0, [fp, #-16]
   148fc:	ldr	r0, [fp, #-12]
   14900:	ldr	r0, [r0, #8]
   14904:	movw	r1, #0
   14908:	cmp	r0, r1
   1490c:	bne	149a8 <__assert_fail@plt+0x3134>
   14910:	ldr	r0, [fp, #-12]
   14914:	ldr	r0, [r0, #4]
   14918:	ldr	r0, [r0, #12]
   1491c:	movw	r1, #0
   14920:	cmp	r0, r1
   14924:	beq	149a8 <__assert_fail@plt+0x3134>
   14928:	ldr	r0, [fp, #-16]
   1492c:	ldr	r0, [r0, #4]
   14930:	str	r0, [fp, #-12]
   14934:	ldr	r0, [fp, #-12]
   14938:	ldr	r1, [fp, #-8]
   1493c:	str	r0, [r1]
   14940:	ldr	r0, [fp, #-8]
   14944:	ldr	r0, [r0, #24]
   14948:	ldr	r1, [fp, #-12]
   1494c:	ldr	r1, [r1, #40]	; 0x28
   14950:	add	r0, r0, r1
   14954:	movw	r1, #0
   14958:	strb	r1, [r0]
   1495c:	ldr	r0, [fp, #-8]
   14960:	movw	r1, #3
   14964:	bl	15374 <__assert_fail@plt+0x3b00>
   14968:	str	r0, [fp, #-12]
   1496c:	movw	r1, #0
   14970:	cmp	r0, r1
   14974:	bne	1499c <__assert_fail@plt+0x3128>
   14978:	ldr	r0, [fp, #-8]
   1497c:	ldr	r0, [r0, #48]	; 0x30
   14980:	and	r0, r0, #8192	; 0x2000
   14984:	cmp	r0, #0
   14988:	beq	14998 <__assert_fail@plt+0x3124>
   1498c:	movw	r0, #0
   14990:	str	r0, [fp, #-4]
   14994:	b	14f04 <__assert_fail@plt+0x3690>
   14998:	b	14ca4 <__assert_fail@plt+0x3430>
   1499c:	ldr	r0, [fp, #-16]
   149a0:	bl	209b8 <__assert_fail@plt+0xf144>
   149a4:	b	14afc <__assert_fail@plt+0x3288>
   149a8:	ldr	r0, [fp, #-12]
   149ac:	ldr	r0, [r0, #8]
   149b0:	str	r0, [fp, #-12]
   149b4:	movw	r1, #0
   149b8:	cmp	r0, r1
   149bc:	beq	14ca0 <__assert_fail@plt+0x342c>
   149c0:	ldr	r0, [fp, #-12]
   149c4:	ldr	r1, [fp, #-8]
   149c8:	str	r0, [r1]
   149cc:	ldr	r0, [fp, #-16]
   149d0:	bl	209b8 <__assert_fail@plt+0xf144>
   149d4:	ldr	r0, [fp, #-12]
   149d8:	ldr	r0, [r0, #48]	; 0x30
   149dc:	cmp	r0, #0
   149e0:	bne	14a34 <__assert_fail@plt+0x31c0>
   149e4:	ldr	r0, [fp, #-8]
   149e8:	bl	16050 <__assert_fail@plt+0x47dc>
   149ec:	cmp	r0, #0
   149f0:	beq	14a10 <__assert_fail@plt+0x319c>
   149f4:	ldr	r0, [fp, #-8]
   149f8:	ldr	r1, [r0, #48]	; 0x30
   149fc:	orr	r1, r1, #8192	; 0x2000
   14a00:	str	r1, [r0, #48]	; 0x30
   14a04:	movw	r0, #0
   14a08:	str	r0, [fp, #-4]
   14a0c:	b	14f04 <__assert_fail@plt+0x3690>
   14a10:	ldr	r0, [fp, #-8]
   14a14:	bl	144c4 <__assert_fail@plt+0x2c50>
   14a18:	ldr	r0, [fp, #-8]
   14a1c:	ldr	r1, [fp, #-12]
   14a20:	bl	16160 <__assert_fail@plt+0x48ec>
   14a24:	ldr	r0, [fp, #-8]
   14a28:	bl	14080 <__assert_fail@plt+0x280c>
   14a2c:	str	r0, [sp, #16]
   14a30:	b	14b9c <__assert_fail@plt+0x3328>
   14a34:	ldr	r0, [fp, #-12]
   14a38:	ldrh	r0, [r0, #60]	; 0x3c
   14a3c:	cmp	r0, #4
   14a40:	bne	14a48 <__assert_fail@plt+0x31d4>
   14a44:	b	148f4 <__assert_fail@plt+0x3080>
   14a48:	ldr	r0, [fp, #-12]
   14a4c:	ldrh	r0, [r0, #60]	; 0x3c
   14a50:	cmp	r0, #2
   14a54:	bne	14af8 <__assert_fail@plt+0x3284>
   14a58:	ldr	r0, [fp, #-8]
   14a5c:	ldr	r1, [fp, #-12]
   14a60:	movw	r2, #1
   14a64:	and	r2, r2, #1
   14a68:	bl	13ca0 <__assert_fail@plt+0x242c>
   14a6c:	ldr	r1, [fp, #-12]
   14a70:	strh	r0, [r1, #56]	; 0x38
   14a74:	ldr	r0, [fp, #-12]
   14a78:	ldrh	r0, [r0, #56]	; 0x38
   14a7c:	cmp	r0, #1
   14a80:	bne	14aec <__assert_fail@plt+0x3278>
   14a84:	ldr	r0, [fp, #-8]
   14a88:	ldr	r0, [r0, #48]	; 0x30
   14a8c:	and	r0, r0, #4
   14a90:	cmp	r0, #0
   14a94:	bne	14aec <__assert_fail@plt+0x3278>
   14a98:	ldr	r0, [fp, #-8]
   14a9c:	movw	r1, #16799	; 0x419f
   14aa0:	movt	r1, #2
   14aa4:	bl	1415c <__assert_fail@plt+0x28e8>
   14aa8:	ldr	r1, [fp, #-12]
   14aac:	str	r0, [r1, #36]	; 0x24
   14ab0:	cmp	r0, #0
   14ab4:	bge	14ad8 <__assert_fail@plt+0x3264>
   14ab8:	bl	11700 <__errno_location@plt>
   14abc:	ldr	r0, [r0]
   14ac0:	ldr	lr, [fp, #-12]
   14ac4:	str	r0, [lr, #32]
   14ac8:	ldr	r0, [fp, #-12]
   14acc:	movw	lr, #7
   14ad0:	strh	lr, [r0, #56]	; 0x38
   14ad4:	b	14ae8 <__assert_fail@plt+0x3274>
   14ad8:	ldr	r0, [fp, #-12]
   14adc:	ldrh	r1, [r0, #58]	; 0x3a
   14ae0:	orr	r1, r1, #2
   14ae4:	strh	r1, [r0, #58]	; 0x3a
   14ae8:	b	14aec <__assert_fail@plt+0x3278>
   14aec:	ldr	r0, [fp, #-12]
   14af0:	movw	r1, #3
   14af4:	strh	r1, [r0, #60]	; 0x3c
   14af8:	b	14afc <__assert_fail@plt+0x3288>
   14afc:	ldr	r0, [fp, #-8]
   14b00:	ldr	r0, [r0, #24]
   14b04:	ldr	r1, [fp, #-12]
   14b08:	ldr	r1, [r1, #4]
   14b0c:	ldr	r1, [r1, #28]
   14b10:	ldr	r2, [fp, #-12]
   14b14:	ldr	r2, [r2, #4]
   14b18:	ldr	r2, [r2, #40]	; 0x28
   14b1c:	sub	r2, r2, #1
   14b20:	add	r1, r1, r2
   14b24:	ldrb	r1, [r1]
   14b28:	cmp	r1, #47	; 0x2f
   14b2c:	str	r0, [sp, #12]
   14b30:	bne	14b4c <__assert_fail@plt+0x32d8>
   14b34:	ldr	r0, [fp, #-12]
   14b38:	ldr	r0, [r0, #4]
   14b3c:	ldr	r0, [r0, #40]	; 0x28
   14b40:	sub	r0, r0, #1
   14b44:	str	r0, [sp, #8]
   14b48:	b	14b5c <__assert_fail@plt+0x32e8>
   14b4c:	ldr	r0, [fp, #-12]
   14b50:	ldr	r0, [r0, #4]
   14b54:	ldr	r0, [r0, #40]	; 0x28
   14b58:	str	r0, [sp, #8]
   14b5c:	ldr	r0, [sp, #8]
   14b60:	ldr	r1, [sp, #12]
   14b64:	add	r0, r1, r0
   14b68:	str	r0, [sp, #24]
   14b6c:	ldr	r0, [sp, #24]
   14b70:	add	r2, r0, #1
   14b74:	str	r2, [sp, #24]
   14b78:	movw	r2, #47	; 0x2f
   14b7c:	strb	r2, [r0]
   14b80:	ldr	r0, [sp, #24]
   14b84:	ldr	r2, [fp, #-12]
   14b88:	add	r1, r2, #168	; 0xa8
   14b8c:	ldr	r2, [fp, #-12]
   14b90:	ldr	r2, [r2, #52]	; 0x34
   14b94:	add	r2, r2, #1
   14b98:	bl	11508 <memmove@plt>
   14b9c:	ldr	r0, [fp, #-12]
   14ba0:	ldr	r1, [fp, #-8]
   14ba4:	str	r0, [r1]
   14ba8:	ldr	r0, [fp, #-12]
   14bac:	ldrh	r0, [r0, #56]	; 0x38
   14bb0:	cmp	r0, #11
   14bb4:	bne	14c2c <__assert_fail@plt+0x33b8>
   14bb8:	ldr	r0, [fp, #-12]
   14bbc:	ldr	r1, [r0, #112]	; 0x70
   14bc0:	ldr	r0, [r0, #116]	; 0x74
   14bc4:	eor	r1, r1, #2
   14bc8:	orr	r0, r1, r0
   14bcc:	cmp	r0, #0
   14bd0:	bne	14bf8 <__assert_fail@plt+0x3384>
   14bd4:	b	14bd8 <__assert_fail@plt+0x3364>
   14bd8:	ldr	r0, [fp, #-8]
   14bdc:	ldr	r1, [fp, #-12]
   14be0:	movw	r2, #0
   14be4:	and	r2, r2, #1
   14be8:	bl	13ca0 <__assert_fail@plt+0x242c>
   14bec:	ldr	r1, [fp, #-12]
   14bf0:	strh	r0, [r1, #56]	; 0x38
   14bf4:	b	14c28 <__assert_fail@plt+0x33b4>
   14bf8:	b	14bfc <__assert_fail@plt+0x3388>
   14bfc:	ldr	r0, [fp, #-12]
   14c00:	ldr	r1, [r0, #112]	; 0x70
   14c04:	ldr	r0, [r0, #116]	; 0x74
   14c08:	eor	r1, r1, #1
   14c0c:	orr	r0, r1, r0
   14c10:	cmp	r0, #0
   14c14:	beq	14c20 <__assert_fail@plt+0x33ac>
   14c18:	b	14c1c <__assert_fail@plt+0x33a8>
   14c1c:	bl	11838 <abort@plt>
   14c20:	b	14c24 <__assert_fail@plt+0x33b0>
   14c24:	b	14c28 <__assert_fail@plt+0x33b4>
   14c28:	b	14c2c <__assert_fail@plt+0x33b8>
   14c2c:	ldr	r0, [fp, #-12]
   14c30:	ldrh	r0, [r0, #56]	; 0x38
   14c34:	cmp	r0, #1
   14c38:	bne	14c94 <__assert_fail@plt+0x3420>
   14c3c:	ldr	r0, [fp, #-12]
   14c40:	ldr	r0, [r0, #48]	; 0x30
   14c44:	cmp	r0, #0
   14c48:	bne	14c64 <__assert_fail@plt+0x33f0>
   14c4c:	ldr	r0, [fp, #-12]
   14c50:	ldr	r1, [r0, #64]	; 0x40
   14c54:	ldr	r0, [r0, #68]	; 0x44
   14c58:	ldr	r2, [fp, #-8]
   14c5c:	str	r0, [r2, #20]
   14c60:	str	r1, [r2, #16]
   14c64:	ldr	r0, [fp, #-8]
   14c68:	ldr	r1, [fp, #-12]
   14c6c:	bl	16240 <__assert_fail@plt+0x49cc>
   14c70:	tst	r0, #1
   14c74:	bne	14c90 <__assert_fail@plt+0x341c>
   14c78:	bl	11700 <__errno_location@plt>
   14c7c:	movw	lr, #12
   14c80:	str	lr, [r0]
   14c84:	movw	r0, #0
   14c88:	str	r0, [fp, #-4]
   14c8c:	b	14f04 <__assert_fail@plt+0x3690>
   14c90:	b	14c94 <__assert_fail@plt+0x3420>
   14c94:	ldr	r0, [fp, #-12]
   14c98:	str	r0, [fp, #-4]
   14c9c:	b	14f04 <__assert_fail@plt+0x3690>
   14ca0:	b	14ca4 <__assert_fail@plt+0x3430>
   14ca4:	ldr	r0, [fp, #-16]
   14ca8:	ldr	r0, [r0, #4]
   14cac:	str	r0, [fp, #-12]
   14cb0:	ldr	r0, [fp, #-12]
   14cb4:	ldr	r1, [fp, #-8]
   14cb8:	str	r0, [r1]
   14cbc:	ldr	r0, [fp, #-16]
   14cc0:	bl	209b8 <__assert_fail@plt+0xf144>
   14cc4:	ldr	r0, [fp, #-12]
   14cc8:	ldr	r0, [r0, #48]	; 0x30
   14ccc:	cmn	r0, #1
   14cd0:	bne	14cf8 <__assert_fail@plt+0x3484>
   14cd4:	ldr	r0, [fp, #-12]
   14cd8:	bl	209b8 <__assert_fail@plt+0xf144>
   14cdc:	bl	11700 <__errno_location@plt>
   14ce0:	movw	lr, #0
   14ce4:	str	lr, [r0]
   14ce8:	ldr	r0, [fp, #-8]
   14cec:	str	lr, [r0]
   14cf0:	str	lr, [fp, #-4]
   14cf4:	b	14f04 <__assert_fail@plt+0x3690>
   14cf8:	b	14cfc <__assert_fail@plt+0x3488>
   14cfc:	ldr	r0, [fp, #-12]
   14d00:	ldrh	r0, [r0, #56]	; 0x38
   14d04:	cmp	r0, #11
   14d08:	bne	14d10 <__assert_fail@plt+0x349c>
   14d0c:	bl	11838 <abort@plt>
   14d10:	b	14d14 <__assert_fail@plt+0x34a0>
   14d14:	ldr	r0, [fp, #-8]
   14d18:	ldr	r0, [r0, #24]
   14d1c:	ldr	r1, [fp, #-12]
   14d20:	ldr	r1, [r1, #40]	; 0x28
   14d24:	add	r0, r0, r1
   14d28:	movw	r1, #0
   14d2c:	strb	r1, [r0]
   14d30:	ldr	r0, [fp, #-12]
   14d34:	ldr	r0, [r0, #48]	; 0x30
   14d38:	cmp	r0, #0
   14d3c:	bne	14d74 <__assert_fail@plt+0x3500>
   14d40:	ldr	r0, [fp, #-8]
   14d44:	bl	16050 <__assert_fail@plt+0x47dc>
   14d48:	cmp	r0, #0
   14d4c:	beq	14d70 <__assert_fail@plt+0x34fc>
   14d50:	bl	11700 <__errno_location@plt>
   14d54:	ldr	r0, [r0]
   14d58:	ldr	lr, [fp, #-12]
   14d5c:	str	r0, [lr, #32]
   14d60:	ldr	r0, [fp, #-8]
   14d64:	ldr	lr, [r0, #48]	; 0x30
   14d68:	orr	lr, lr, #8192	; 0x2000
   14d6c:	str	lr, [r0, #48]	; 0x30
   14d70:	b	14e74 <__assert_fail@plt+0x3600>
   14d74:	ldr	r0, [fp, #-12]
   14d78:	ldrh	r0, [r0, #58]	; 0x3a
   14d7c:	and	r0, r0, #2
   14d80:	cmp	r0, #0
   14d84:	beq	14e14 <__assert_fail@plt+0x35a0>
   14d88:	ldr	r0, [fp, #-8]
   14d8c:	ldr	r0, [r0, #48]	; 0x30
   14d90:	and	r0, r0, #4
   14d94:	cmp	r0, #0
   14d98:	bne	14e00 <__assert_fail@plt+0x358c>
   14d9c:	ldr	r0, [fp, #-8]
   14da0:	ldr	r0, [r0, #48]	; 0x30
   14da4:	and	r0, r0, #512	; 0x200
   14da8:	cmp	r0, #0
   14dac:	beq	14dcc <__assert_fail@plt+0x3558>
   14db0:	ldr	r0, [fp, #-8]
   14db4:	ldr	r1, [fp, #-12]
   14db8:	ldr	r1, [r1, #36]	; 0x24
   14dbc:	movw	r2, #1
   14dc0:	and	r2, r2, #1
   14dc4:	bl	163a0 <__assert_fail@plt+0x4b2c>
   14dc8:	b	14e00 <__assert_fail@plt+0x358c>
   14dcc:	ldr	r0, [fp, #-12]
   14dd0:	ldr	r0, [r0, #36]	; 0x24
   14dd4:	bl	117cc <fchdir@plt>
   14dd8:	cmp	r0, #0
   14ddc:	beq	14e00 <__assert_fail@plt+0x358c>
   14de0:	bl	11700 <__errno_location@plt>
   14de4:	ldr	r0, [r0]
   14de8:	ldr	lr, [fp, #-12]
   14dec:	str	r0, [lr, #32]
   14df0:	ldr	r0, [fp, #-8]
   14df4:	ldr	lr, [r0, #48]	; 0x30
   14df8:	orr	lr, lr, #8192	; 0x2000
   14dfc:	str	lr, [r0, #48]	; 0x30
   14e00:	ldr	r0, [fp, #-12]
   14e04:	ldr	r0, [r0, #36]	; 0x24
   14e08:	bl	11844 <close@plt>
   14e0c:	str	r0, [sp, #4]
   14e10:	b	14e70 <__assert_fail@plt+0x35fc>
   14e14:	ldr	r0, [fp, #-12]
   14e18:	ldrh	r0, [r0, #58]	; 0x3a
   14e1c:	and	r0, r0, #1
   14e20:	cmp	r0, #0
   14e24:	bne	14e6c <__assert_fail@plt+0x35f8>
   14e28:	ldr	r0, [fp, #-8]
   14e2c:	ldr	r1, [fp, #-12]
   14e30:	ldr	r1, [r1, #4]
   14e34:	mvn	r2, #0
   14e38:	movw	r3, #16798	; 0x419e
   14e3c:	movt	r3, #2
   14e40:	bl	150b0 <__assert_fail@plt+0x383c>
   14e44:	cmp	r0, #0
   14e48:	beq	14e6c <__assert_fail@plt+0x35f8>
   14e4c:	bl	11700 <__errno_location@plt>
   14e50:	ldr	r0, [r0]
   14e54:	ldr	lr, [fp, #-12]
   14e58:	str	r0, [lr, #32]
   14e5c:	ldr	r0, [fp, #-8]
   14e60:	ldr	lr, [r0, #48]	; 0x30
   14e64:	orr	lr, lr, #8192	; 0x2000
   14e68:	str	lr, [r0, #48]	; 0x30
   14e6c:	b	14e70 <__assert_fail@plt+0x35fc>
   14e70:	b	14e74 <__assert_fail@plt+0x3600>
   14e74:	ldr	r0, [fp, #-12]
   14e78:	ldrh	r0, [r0, #56]	; 0x38
   14e7c:	cmp	r0, #2
   14e80:	beq	14ed4 <__assert_fail@plt+0x3660>
   14e84:	ldr	r0, [fp, #-12]
   14e88:	ldr	r0, [r0, #32]
   14e8c:	cmp	r0, #0
   14e90:	movw	r0, #0
   14e94:	movne	r0, #1
   14e98:	tst	r0, #1
   14e9c:	movw	r0, #7
   14ea0:	moveq	r0, #6
   14ea4:	ldr	r1, [fp, #-12]
   14ea8:	strh	r0, [r1, #56]	; 0x38
   14eac:	ldr	r0, [fp, #-12]
   14eb0:	ldr	r0, [r0, #32]
   14eb4:	cmp	r0, #0
   14eb8:	bne	14ed0 <__assert_fail@plt+0x365c>
   14ebc:	b	14ec0 <__assert_fail@plt+0x364c>
   14ec0:	ldr	r0, [fp, #-8]
   14ec4:	ldr	r1, [fp, #-12]
   14ec8:	bl	14f10 <__assert_fail@plt+0x369c>
   14ecc:	b	14ed0 <__assert_fail@plt+0x365c>
   14ed0:	b	14ed4 <__assert_fail@plt+0x3660>
   14ed4:	ldr	r0, [fp, #-8]
   14ed8:	ldr	r0, [r0, #48]	; 0x30
   14edc:	and	r0, r0, #8192	; 0x2000
   14ee0:	cmp	r0, #0
   14ee4:	beq	14ef4 <__assert_fail@plt+0x3680>
   14ee8:	movw	r0, #0
   14eec:	str	r0, [sp]
   14ef0:	b	14efc <__assert_fail@plt+0x3688>
   14ef4:	ldr	r0, [fp, #-12]
   14ef8:	str	r0, [sp]
   14efc:	ldr	r0, [sp]
   14f00:	str	r0, [fp, #-4]
   14f04:	ldr	r0, [fp, #-4]
   14f08:	mov	sp, fp
   14f0c:	pop	{fp, pc}
   14f10:	push	{fp, lr}
   14f14:	mov	fp, sp
   14f18:	sub	sp, sp, #48	; 0x30
   14f1c:	str	r0, [fp, #-4]
   14f20:	str	r1, [fp, #-8]
   14f24:	ldr	r0, [fp, #-8]
   14f28:	add	r0, r0, #64	; 0x40
   14f2c:	str	r0, [fp, #-12]
   14f30:	ldr	r0, [fp, #-4]
   14f34:	ldr	r0, [r0, #48]	; 0x30
   14f38:	movw	r1, #258	; 0x102
   14f3c:	and	r0, r0, r1
   14f40:	cmp	r0, #0
   14f44:	beq	14fa4 <__assert_fail@plt+0x3730>
   14f48:	ldr	r0, [fp, #-12]
   14f4c:	ldr	r1, [r0]
   14f50:	ldr	r0, [r0, #4]
   14f54:	str	r0, [sp, #12]
   14f58:	str	r1, [sp, #8]
   14f5c:	ldr	r0, [fp, #-12]
   14f60:	ldr	r1, [r0, #96]	; 0x60
   14f64:	ldr	r0, [r0, #100]	; 0x64
   14f68:	str	r0, [sp, #20]
   14f6c:	str	r1, [sp, #16]
   14f70:	ldr	r0, [fp, #-4]
   14f74:	ldr	r0, [r0, #56]	; 0x38
   14f78:	add	r1, sp, #8
   14f7c:	bl	18774 <__assert_fail@plt+0x6f00>
   14f80:	str	r0, [sp, #4]
   14f84:	ldr	r0, [sp, #4]
   14f88:	movw	r1, #0
   14f8c:	cmp	r0, r1
   14f90:	bne	14f98 <__assert_fail@plt+0x3724>
   14f94:	bl	11838 <abort@plt>
   14f98:	ldr	r0, [sp, #4]
   14f9c:	bl	209b8 <__assert_fail@plt+0xf144>
   14fa0:	b	150a8 <__assert_fail@plt+0x3834>
   14fa4:	ldr	r0, [fp, #-8]
   14fa8:	ldr	r0, [r0, #4]
   14fac:	str	r0, [sp]
   14fb0:	ldr	r0, [sp]
   14fb4:	movw	r1, #0
   14fb8:	cmp	r0, r1
   14fbc:	beq	150a4 <__assert_fail@plt+0x3830>
   14fc0:	ldr	r0, [sp]
   14fc4:	ldr	r0, [r0, #48]	; 0x30
   14fc8:	movw	r1, #0
   14fcc:	cmp	r1, r0
   14fd0:	bgt	150a4 <__assert_fail@plt+0x3830>
   14fd4:	b	14fd8 <__assert_fail@plt+0x3764>
   14fd8:	ldr	r0, [fp, #-4]
   14fdc:	ldr	r0, [r0, #56]	; 0x38
   14fe0:	ldr	r1, [r0, #16]
   14fe4:	ldr	r0, [r0, #20]
   14fe8:	orr	r0, r1, r0
   14fec:	cmp	r0, #0
   14ff0:	bne	14ffc <__assert_fail@plt+0x3788>
   14ff4:	b	14ff8 <__assert_fail@plt+0x3784>
   14ff8:	bl	11838 <abort@plt>
   14ffc:	ldr	r0, [fp, #-4]
   15000:	ldr	r0, [r0, #56]	; 0x38
   15004:	ldr	r1, [r0]
   15008:	ldr	r0, [r0, #4]
   1500c:	ldr	r2, [fp, #-12]
   15010:	ldr	r3, [r2, #96]	; 0x60
   15014:	ldr	r2, [r2, #100]	; 0x64
   15018:	eor	r0, r0, r2
   1501c:	eor	r1, r1, r3
   15020:	orr	r0, r1, r0
   15024:	cmp	r0, #0
   15028:	bne	1509c <__assert_fail@plt+0x3828>
   1502c:	b	15030 <__assert_fail@plt+0x37bc>
   15030:	ldr	r0, [fp, #-4]
   15034:	ldr	r0, [r0, #56]	; 0x38
   15038:	ldr	r1, [r0, #8]
   1503c:	ldr	r0, [r0, #12]
   15040:	ldr	r2, [fp, #-12]
   15044:	ldr	r3, [r2]
   15048:	ldr	r2, [r2, #4]
   1504c:	eor	r0, r0, r2
   15050:	eor	r1, r1, r3
   15054:	orr	r0, r1, r0
   15058:	cmp	r0, #0
   1505c:	bne	1509c <__assert_fail@plt+0x3828>
   15060:	b	15064 <__assert_fail@plt+0x37f0>
   15064:	ldr	r0, [sp]
   15068:	ldr	r1, [r0, #64]	; 0x40
   1506c:	ldr	r0, [r0, #68]	; 0x44
   15070:	ldr	r2, [fp, #-4]
   15074:	ldr	r2, [r2, #56]	; 0x38
   15078:	str	r0, [r2, #12]
   1507c:	str	r1, [r2, #8]
   15080:	ldr	r0, [sp]
   15084:	ldr	r1, [r0, #160]	; 0xa0
   15088:	ldr	r0, [r0, #164]	; 0xa4
   1508c:	ldr	r2, [fp, #-4]
   15090:	ldr	r2, [r2, #56]	; 0x38
   15094:	str	r0, [r2, #4]
   15098:	str	r1, [r2]
   1509c:	b	150a0 <__assert_fail@plt+0x382c>
   150a0:	b	150a4 <__assert_fail@plt+0x3830>
   150a4:	b	150a8 <__assert_fail@plt+0x3834>
   150a8:	mov	sp, fp
   150ac:	pop	{fp, pc}
   150b0:	push	{fp, lr}
   150b4:	mov	fp, sp
   150b8:	sub	sp, sp, #168	; 0xa8
   150bc:	str	r0, [fp, #-8]
   150c0:	str	r1, [fp, #-12]
   150c4:	str	r2, [fp, #-16]
   150c8:	str	r3, [fp, #-20]	; 0xffffffec
   150cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   150d0:	movw	r1, #0
   150d4:	cmp	r0, r1
   150d8:	movw	r0, #0
   150dc:	str	r0, [sp, #16]
   150e0:	beq	15104 <__assert_fail@plt+0x3890>
   150e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   150e8:	movw	r1, #16798	; 0x419e
   150ec:	movt	r1, #2
   150f0:	bl	114d8 <strcmp@plt>
   150f4:	cmp	r0, #0
   150f8:	movw	r0, #0
   150fc:	moveq	r0, #1
   15100:	str	r0, [sp, #16]
   15104:	ldr	r0, [sp, #16]
   15108:	and	r0, r0, #1
   1510c:	strb	r0, [fp, #-25]	; 0xffffffe7
   15110:	ldr	r0, [fp, #-8]
   15114:	ldr	r0, [r0, #48]	; 0x30
   15118:	and	r0, r0, #4
   1511c:	cmp	r0, #0
   15120:	beq	15160 <__assert_fail@plt+0x38ec>
   15124:	ldr	r0, [fp, #-8]
   15128:	ldr	r0, [r0, #48]	; 0x30
   1512c:	and	r0, r0, #512	; 0x200
   15130:	cmp	r0, #0
   15134:	beq	15154 <__assert_fail@plt+0x38e0>
   15138:	ldr	r0, [fp, #-16]
   1513c:	movw	r1, #0
   15140:	cmp	r1, r0
   15144:	bgt	15154 <__assert_fail@plt+0x38e0>
   15148:	ldr	r0, [fp, #-16]
   1514c:	bl	11844 <close@plt>
   15150:	str	r0, [sp, #12]
   15154:	movw	r0, #0
   15158:	str	r0, [fp, #-4]
   1515c:	b	15368 <__assert_fail@plt+0x3af4>
   15160:	ldr	r0, [fp, #-16]
   15164:	cmp	r0, #0
   15168:	bge	151d8 <__assert_fail@plt+0x3964>
   1516c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15170:	tst	r0, #1
   15174:	beq	151d8 <__assert_fail@plt+0x3964>
   15178:	ldr	r0, [fp, #-8]
   1517c:	ldr	r0, [r0, #48]	; 0x30
   15180:	and	r0, r0, #512	; 0x200
   15184:	cmp	r0, #0
   15188:	beq	151d8 <__assert_fail@plt+0x3964>
   1518c:	ldr	r0, [fp, #-8]
   15190:	add	r0, r0, #60	; 0x3c
   15194:	bl	18ba8 <__assert_fail@plt+0x7334>
   15198:	tst	r0, #1
   1519c:	bne	151d4 <__assert_fail@plt+0x3960>
   151a0:	ldr	r0, [fp, #-8]
   151a4:	add	r0, r0, #60	; 0x3c
   151a8:	bl	18c78 <__assert_fail@plt+0x7404>
   151ac:	str	r0, [fp, #-36]	; 0xffffffdc
   151b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151b4:	movw	lr, #0
   151b8:	cmp	lr, r0
   151bc:	bgt	151d0 <__assert_fail@plt+0x395c>
   151c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151c4:	str	r0, [fp, #-16]
   151c8:	movw	r0, #0
   151cc:	str	r0, [fp, #-20]	; 0xffffffec
   151d0:	b	151d4 <__assert_fail@plt+0x3960>
   151d4:	b	151d8 <__assert_fail@plt+0x3964>
   151d8:	ldr	r0, [fp, #-16]
   151dc:	str	r0, [fp, #-32]	; 0xffffffe0
   151e0:	ldr	r0, [fp, #-16]
   151e4:	cmp	r0, #0
   151e8:	bge	15210 <__assert_fail@plt+0x399c>
   151ec:	ldr	r0, [fp, #-8]
   151f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   151f4:	bl	1415c <__assert_fail@plt+0x28e8>
   151f8:	str	r0, [fp, #-32]	; 0xffffffe0
   151fc:	cmp	r0, #0
   15200:	bge	15210 <__assert_fail@plt+0x399c>
   15204:	mvn	r0, #0
   15208:	str	r0, [fp, #-4]
   1520c:	b	15368 <__assert_fail@plt+0x3af4>
   15210:	ldr	r0, [fp, #-8]
   15214:	ldr	r0, [r0, #48]	; 0x30
   15218:	and	r0, r0, #2
   1521c:	cmp	r0, #0
   15220:	bne	1524c <__assert_fail@plt+0x39d8>
   15224:	ldr	r0, [fp, #-20]	; 0xffffffec
   15228:	movw	r1, #0
   1522c:	cmp	r0, r1
   15230:	beq	152e0 <__assert_fail@plt+0x3a6c>
   15234:	ldr	r0, [fp, #-20]	; 0xffffffec
   15238:	movw	r1, #16798	; 0x419e
   1523c:	movt	r1, #2
   15240:	bl	114d8 <strcmp@plt>
   15244:	cmp	r0, #0
   15248:	bne	152e0 <__assert_fail@plt+0x3a6c>
   1524c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15250:	add	r1, sp, #24
   15254:	bl	23380 <__assert_fail@plt+0x11b0c>
   15258:	cmp	r0, #0
   1525c:	beq	1526c <__assert_fail@plt+0x39f8>
   15260:	mvn	r0, #0
   15264:	str	r0, [fp, #-24]	; 0xffffffe8
   15268:	b	15328 <__assert_fail@plt+0x3ab4>
   1526c:	ldr	r0, [fp, #-12]
   15270:	ldr	r1, [r0, #64]	; 0x40
   15274:	ldr	r0, [r0, #68]	; 0x44
   15278:	ldr	r2, [sp, #24]
   1527c:	ldr	r3, [sp, #28]
   15280:	eor	r0, r0, r3
   15284:	eor	r1, r1, r2
   15288:	orr	r0, r1, r0
   1528c:	cmp	r0, #0
   15290:	bne	152c4 <__assert_fail@plt+0x3a50>
   15294:	b	15298 <__assert_fail@plt+0x3a24>
   15298:	ldr	r0, [fp, #-12]
   1529c:	ldr	r1, [r0, #160]	; 0xa0
   152a0:	ldr	r0, [r0, #164]	; 0xa4
   152a4:	ldr	r2, [sp, #120]	; 0x78
   152a8:	ldr	r3, [sp, #124]	; 0x7c
   152ac:	eor	r0, r0, r3
   152b0:	eor	r1, r1, r2
   152b4:	orr	r0, r1, r0
   152b8:	cmp	r0, #0
   152bc:	beq	152dc <__assert_fail@plt+0x3a68>
   152c0:	b	152c4 <__assert_fail@plt+0x3a50>
   152c4:	bl	11700 <__errno_location@plt>
   152c8:	movw	lr, #2
   152cc:	str	lr, [r0]
   152d0:	mvn	r0, #0
   152d4:	str	r0, [fp, #-24]	; 0xffffffe8
   152d8:	b	15328 <__assert_fail@plt+0x3ab4>
   152dc:	b	152e0 <__assert_fail@plt+0x3a6c>
   152e0:	ldr	r0, [fp, #-8]
   152e4:	ldr	r0, [r0, #48]	; 0x30
   152e8:	and	r0, r0, #512	; 0x200
   152ec:	cmp	r0, #0
   152f0:	beq	1531c <__assert_fail@plt+0x3aa8>
   152f4:	ldr	r0, [fp, #-8]
   152f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   152fc:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   15300:	mvn	r3, #0
   15304:	eor	r2, r2, r3
   15308:	and	r2, r2, #1
   1530c:	bl	163a0 <__assert_fail@plt+0x4b2c>
   15310:	movw	r0, #0
   15314:	str	r0, [fp, #-4]
   15318:	b	15368 <__assert_fail@plt+0x3af4>
   1531c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15320:	bl	117cc <fchdir@plt>
   15324:	str	r0, [fp, #-24]	; 0xffffffe8
   15328:	ldr	r0, [fp, #-16]
   1532c:	cmp	r0, #0
   15330:	bge	15360 <__assert_fail@plt+0x3aec>
   15334:	bl	11700 <__errno_location@plt>
   15338:	ldr	r0, [r0]
   1533c:	str	r0, [sp, #20]
   15340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15344:	bl	11844 <close@plt>
   15348:	ldr	lr, [sp, #20]
   1534c:	str	r0, [sp, #8]
   15350:	str	lr, [sp, #4]
   15354:	bl	11700 <__errno_location@plt>
   15358:	ldr	lr, [sp, #4]
   1535c:	str	lr, [r0]
   15360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15364:	str	r0, [fp, #-4]
   15368:	ldr	r0, [fp, #-4]
   1536c:	mov	sp, fp
   15370:	pop	{fp, pc}
   15374:	push	{fp, lr}
   15378:	mov	fp, sp
   1537c:	sub	sp, sp, #176	; 0xb0
   15380:	str	r0, [fp, #-8]
   15384:	str	r1, [fp, #-12]
   15388:	ldr	r0, [fp, #-8]
   1538c:	ldr	r0, [r0]
   15390:	str	r0, [fp, #-68]	; 0xffffffbc
   15394:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15398:	ldr	r0, [r0, #12]
   1539c:	movw	r1, #0
   153a0:	cmp	r0, r1
   153a4:	movw	r0, #0
   153a8:	movne	r0, #1
   153ac:	mvn	r1, #0
   153b0:	eor	r0, r0, r1
   153b4:	eor	r0, r0, r1
   153b8:	and	r0, r0, #1
   153bc:	strb	r0, [fp, #-69]	; 0xffffffbb
   153c0:	movw	r0, #0
   153c4:	strb	r0, [fp, #-70]	; 0xffffffba
   153c8:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   153cc:	tst	r0, #1
   153d0:	beq	15450 <__assert_fail@plt+0x3bdc>
   153d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   153d8:	ldr	r0, [r0, #12]
   153dc:	str	r0, [fp, #-80]	; 0xffffffb0
   153e0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   153e4:	bl	117c0 <dirfd@plt>
   153e8:	str	r0, [fp, #-64]	; 0xffffffc0
   153ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   153f0:	cmp	r0, #0
   153f4:	bge	1544c <__assert_fail@plt+0x3bd8>
   153f8:	b	153fc <__assert_fail@plt+0x3b88>
   153fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15400:	ldr	r0, [r0, #12]
   15404:	bl	1185c <closedir@plt>
   15408:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1540c:	movw	r1, #0
   15410:	str	r1, [lr, #12]
   15414:	str	r0, [sp, #80]	; 0x50
   15418:	ldr	r0, [fp, #-12]
   1541c:	cmp	r0, #3
   15420:	bne	15440 <__assert_fail@plt+0x3bcc>
   15424:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15428:	movw	r1, #4
   1542c:	strh	r1, [r0, #56]	; 0x38
   15430:	bl	11700 <__errno_location@plt>
   15434:	ldr	r0, [r0]
   15438:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1543c:	str	r0, [r1, #32]
   15440:	movw	r0, #0
   15444:	str	r0, [fp, #-4]
   15448:	b	16040 <__assert_fail@plt+0x47cc>
   1544c:	b	15628 <__assert_fail@plt+0x3db4>
   15450:	ldr	r0, [fp, #-8]
   15454:	ldr	r0, [r0, #48]	; 0x30
   15458:	and	r0, r0, #4
   1545c:	cmp	r0, #0
   15460:	bne	15488 <__assert_fail@plt+0x3c14>
   15464:	ldr	r0, [fp, #-8]
   15468:	ldr	r0, [r0, #48]	; 0x30
   1546c:	and	r0, r0, #512	; 0x200
   15470:	cmp	r0, #0
   15474:	beq	15488 <__assert_fail@plt+0x3c14>
   15478:	ldr	r0, [fp, #-8]
   1547c:	ldr	r0, [r0, #32]
   15480:	str	r0, [sp, #76]	; 0x4c
   15484:	b	15494 <__assert_fail@plt+0x3c20>
   15488:	mvn	r0, #99	; 0x63
   1548c:	str	r0, [sp, #76]	; 0x4c
   15490:	b	15494 <__assert_fail@plt+0x3c20>
   15494:	ldr	r0, [sp, #76]	; 0x4c
   15498:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1549c:	ldr	r1, [r1, #24]
   154a0:	ldr	r2, [fp, #-8]
   154a4:	ldr	r2, [r2, #48]	; 0x30
   154a8:	and	r2, r2, #16
   154ac:	cmp	r2, #0
   154b0:	movw	r2, #0
   154b4:	str	r0, [sp, #72]	; 0x48
   154b8:	str	r1, [sp, #68]	; 0x44
   154bc:	str	r2, [sp, #64]	; 0x40
   154c0:	beq	15508 <__assert_fail@plt+0x3c94>
   154c4:	ldr	r0, [fp, #-8]
   154c8:	ldr	r0, [r0, #48]	; 0x30
   154cc:	and	r0, r0, #1
   154d0:	cmp	r0, #0
   154d4:	movw	r0, #0
   154d8:	str	r0, [sp, #60]	; 0x3c
   154dc:	beq	154f8 <__assert_fail@plt+0x3c84>
   154e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   154e4:	ldr	r0, [r0, #48]	; 0x30
   154e8:	cmp	r0, #0
   154ec:	movw	r0, #0
   154f0:	moveq	r0, #1
   154f4:	str	r0, [sp, #60]	; 0x3c
   154f8:	ldr	r0, [sp, #60]	; 0x3c
   154fc:	mvn	r1, #0
   15500:	eor	r0, r0, r1
   15504:	str	r0, [sp, #64]	; 0x40
   15508:	ldr	r0, [sp, #64]	; 0x40
   1550c:	tst	r0, #1
   15510:	movw	r0, #32768	; 0x8000
   15514:	moveq	r0, #0
   15518:	ldr	r1, [sp, #72]	; 0x48
   1551c:	str	r0, [sp, #56]	; 0x38
   15520:	mov	r0, r1
   15524:	ldr	r1, [sp, #68]	; 0x44
   15528:	ldr	r2, [sp, #56]	; 0x38
   1552c:	sub	r3, fp, #64	; 0x40
   15530:	bl	18d98 <__assert_fail@plt+0x7524>
   15534:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15538:	str	r0, [r1, #12]
   1553c:	movw	r1, #0
   15540:	cmp	r0, r1
   15544:	bne	1557c <__assert_fail@plt+0x3d08>
   15548:	ldr	r0, [fp, #-12]
   1554c:	cmp	r0, #3
   15550:	bne	15570 <__assert_fail@plt+0x3cfc>
   15554:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15558:	movw	r1, #4
   1555c:	strh	r1, [r0, #56]	; 0x38
   15560:	bl	11700 <__errno_location@plt>
   15564:	ldr	r0, [r0]
   15568:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1556c:	str	r0, [r1, #32]
   15570:	movw	r0, #0
   15574:	str	r0, [fp, #-4]
   15578:	b	16040 <__assert_fail@plt+0x47cc>
   1557c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15580:	ldrh	r0, [r0, #56]	; 0x38
   15584:	cmp	r0, #11
   15588:	bne	155ac <__assert_fail@plt+0x3d38>
   1558c:	ldr	r0, [fp, #-8]
   15590:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15594:	movw	r2, #0
   15598:	and	r2, r2, #1
   1559c:	bl	13ca0 <__assert_fail@plt+0x242c>
   155a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   155a4:	strh	r0, [r1, #56]	; 0x38
   155a8:	b	15624 <__assert_fail@plt+0x3db0>
   155ac:	ldr	r0, [fp, #-8]
   155b0:	ldr	r0, [r0, #48]	; 0x30
   155b4:	and	r0, r0, #256	; 0x100
   155b8:	cmp	r0, #0
   155bc:	beq	15620 <__assert_fail@plt+0x3dac>
   155c0:	b	155c4 <__assert_fail@plt+0x3d50>
   155c4:	ldr	r0, [fp, #-8]
   155c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   155cc:	bl	14f10 <__assert_fail@plt+0x369c>
   155d0:	ldr	r0, [fp, #-8]
   155d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   155d8:	movw	r2, #0
   155dc:	and	r2, r2, #1
   155e0:	bl	13ca0 <__assert_fail@plt+0x242c>
   155e4:	ldr	r1, [fp, #-8]
   155e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   155ec:	str	r0, [sp, #52]	; 0x34
   155f0:	mov	r0, r1
   155f4:	mov	r1, r2
   155f8:	bl	16240 <__assert_fail@plt+0x49cc>
   155fc:	tst	r0, #1
   15600:	bne	1561c <__assert_fail@plt+0x3da8>
   15604:	bl	11700 <__errno_location@plt>
   15608:	movw	lr, #12
   1560c:	str	lr, [r0]
   15610:	movw	r0, #0
   15614:	str	r0, [fp, #-4]
   15618:	b	16040 <__assert_fail@plt+0x47cc>
   1561c:	b	15620 <__assert_fail@plt+0x3dac>
   15620:	b	15624 <__assert_fail@plt+0x3db0>
   15624:	b	15628 <__assert_fail@plt+0x3db4>
   15628:	ldr	r0, [pc, #2588]	; 1604c <__assert_fail@plt+0x47d8>
   1562c:	ldr	r1, [fp, #-8]
   15630:	ldr	r1, [r1, #44]	; 0x2c
   15634:	movw	r2, #0
   15638:	cmp	r1, r2
   1563c:	movw	r1, #0
   15640:	movne	r1, #1
   15644:	tst	r1, #1
   15648:	mvn	r1, #0
   1564c:	movne	r0, r1
   15650:	str	r0, [fp, #-76]	; 0xffffffb4
   15654:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15658:	tst	r0, #1
   1565c:	beq	1566c <__assert_fail@plt+0x3df8>
   15660:	movw	r0, #1
   15664:	strb	r0, [fp, #-37]	; 0xffffffdb
   15668:	b	15838 <__assert_fail@plt+0x3fc4>
   1566c:	ldr	r0, [fp, #-12]
   15670:	cmp	r0, #2
   15674:	movw	r0, #0
   15678:	str	r0, [sp, #48]	; 0x30
   1567c:	beq	15718 <__assert_fail@plt+0x3ea4>
   15680:	ldr	r0, [fp, #-8]
   15684:	ldr	r0, [r0, #48]	; 0x30
   15688:	and	r0, r0, #8
   1568c:	cmp	r0, #0
   15690:	movw	r0, #0
   15694:	str	r0, [sp, #44]	; 0x2c
   15698:	beq	15708 <__assert_fail@plt+0x3e94>
   1569c:	ldr	r0, [fp, #-8]
   156a0:	ldr	r0, [r0, #48]	; 0x30
   156a4:	and	r0, r0, #16
   156a8:	cmp	r0, #0
   156ac:	movw	r0, #0
   156b0:	str	r0, [sp, #44]	; 0x2c
   156b4:	beq	15708 <__assert_fail@plt+0x3e94>
   156b8:	ldr	r0, [fp, #-8]
   156bc:	ldr	r0, [r0, #48]	; 0x30
   156c0:	and	r0, r0, #32
   156c4:	cmp	r0, #0
   156c8:	movw	r0, #0
   156cc:	str	r0, [sp, #44]	; 0x2c
   156d0:	bne	15708 <__assert_fail@plt+0x3e94>
   156d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   156d8:	ldr	r0, [r0, #84]	; 0x54
   156dc:	cmp	r0, #2
   156e0:	movw	r0, #0
   156e4:	str	r0, [sp, #44]	; 0x2c
   156e8:	bne	15708 <__assert_fail@plt+0x3e94>
   156ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   156f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   156f4:	bl	16824 <__assert_fail@plt+0x4fb0>
   156f8:	cmp	r0, #0
   156fc:	movw	r0, #0
   15700:	movne	r0, #1
   15704:	str	r0, [sp, #44]	; 0x2c
   15708:	ldr	r0, [sp, #44]	; 0x2c
   1570c:	mvn	r1, #0
   15710:	eor	r0, r0, r1
   15714:	str	r0, [sp, #48]	; 0x30
   15718:	ldr	r0, [sp, #48]	; 0x30
   1571c:	and	r0, r0, #1
   15720:	strb	r0, [fp, #-37]	; 0xffffffdb
   15724:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15728:	tst	r0, #1
   1572c:	bne	1573c <__assert_fail@plt+0x3ec8>
   15730:	ldr	r0, [fp, #-12]
   15734:	cmp	r0, #3
   15738:	bne	15834 <__assert_fail@plt+0x3fc0>
   1573c:	ldr	r0, [fp, #-8]
   15740:	ldr	r0, [r0, #48]	; 0x30
   15744:	and	r0, r0, #512	; 0x200
   15748:	cmp	r0, #0
   1574c:	beq	15764 <__assert_fail@plt+0x3ef0>
   15750:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15754:	movw	r1, #1030	; 0x406
   15758:	movw	r2, #3
   1575c:	bl	204a4 <__assert_fail@plt+0xec30>
   15760:	str	r0, [fp, #-64]	; 0xffffffc0
   15764:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15768:	cmp	r0, #0
   1576c:	blt	1578c <__assert_fail@plt+0x3f18>
   15770:	ldr	r0, [fp, #-8]
   15774:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15778:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1577c:	movw	r3, #0
   15780:	bl	150b0 <__assert_fail@plt+0x383c>
   15784:	cmp	r0, #0
   15788:	beq	15828 <__assert_fail@plt+0x3fb4>
   1578c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15790:	tst	r0, #1
   15794:	beq	157b4 <__assert_fail@plt+0x3f40>
   15798:	ldr	r0, [fp, #-12]
   1579c:	cmp	r0, #3
   157a0:	bne	157b4 <__assert_fail@plt+0x3f40>
   157a4:	bl	11700 <__errno_location@plt>
   157a8:	ldr	r0, [r0]
   157ac:	ldr	lr, [fp, #-68]	; 0xffffffbc
   157b0:	str	r0, [lr, #32]
   157b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   157b8:	ldrh	r1, [r0, #58]	; 0x3a
   157bc:	orr	r1, r1, #1
   157c0:	strh	r1, [r0, #58]	; 0x3a
   157c4:	movw	r0, #0
   157c8:	strb	r0, [fp, #-37]	; 0xffffffdb
   157cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   157d0:	ldr	r0, [r0, #12]
   157d4:	bl	1185c <closedir@plt>
   157d8:	ldr	lr, [fp, #-68]	; 0xffffffbc
   157dc:	movw	r1, #0
   157e0:	str	r1, [lr, #12]
   157e4:	str	r0, [sp, #40]	; 0x28
   157e8:	ldr	r0, [fp, #-8]
   157ec:	ldr	r0, [r0, #48]	; 0x30
   157f0:	and	r0, r0, #512	; 0x200
   157f4:	cmp	r0, #0
   157f8:	beq	15818 <__assert_fail@plt+0x3fa4>
   157fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15800:	movw	r1, #0
   15804:	cmp	r1, r0
   15808:	bgt	15818 <__assert_fail@plt+0x3fa4>
   1580c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15810:	bl	11844 <close@plt>
   15814:	str	r0, [sp, #36]	; 0x24
   15818:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1581c:	movw	r1, #0
   15820:	str	r1, [r0, #12]
   15824:	b	15830 <__assert_fail@plt+0x3fbc>
   15828:	movw	r0, #1
   1582c:	strb	r0, [fp, #-37]	; 0xffffffdb
   15830:	b	15834 <__assert_fail@plt+0x3fc0>
   15834:	b	15838 <__assert_fail@plt+0x3fc4>
   15838:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1583c:	ldr	r0, [r0, #28]
   15840:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15844:	ldr	r1, [r1, #40]	; 0x28
   15848:	sub	r1, r1, #1
   1584c:	add	r0, r0, r1
   15850:	ldrb	r0, [r0]
   15854:	cmp	r0, #47	; 0x2f
   15858:	bne	15870 <__assert_fail@plt+0x3ffc>
   1585c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15860:	ldr	r0, [r0, #40]	; 0x28
   15864:	sub	r0, r0, #1
   15868:	str	r0, [sp, #32]
   1586c:	b	1587c <__assert_fail@plt+0x4008>
   15870:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15874:	ldr	r0, [r0, #40]	; 0x28
   15878:	str	r0, [sp, #32]
   1587c:	ldr	r0, [sp, #32]
   15880:	str	r0, [fp, #-48]	; 0xffffffd0
   15884:	ldr	r0, [fp, #-8]
   15888:	ldr	r0, [r0, #48]	; 0x30
   1588c:	and	r0, r0, #4
   15890:	cmp	r0, #0
   15894:	beq	158c4 <__assert_fail@plt+0x4050>
   15898:	ldr	r0, [fp, #-8]
   1589c:	ldr	r0, [r0, #24]
   158a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   158a4:	add	r0, r0, r1
   158a8:	str	r0, [fp, #-60]	; 0xffffffc4
   158ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   158b0:	add	r1, r0, #1
   158b4:	str	r1, [fp, #-60]	; 0xffffffc4
   158b8:	movw	r1, #47	; 0x2f
   158bc:	strb	r1, [r0]
   158c0:	b	158cc <__assert_fail@plt+0x4058>
   158c4:	movw	r0, #0
   158c8:	str	r0, [fp, #-60]	; 0xffffffc4
   158cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   158d0:	add	r0, r0, #1
   158d4:	str	r0, [fp, #-48]	; 0xffffffd0
   158d8:	ldr	r0, [fp, #-8]
   158dc:	ldr	r0, [r0, #36]	; 0x24
   158e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   158e4:	sub	r0, r0, r1
   158e8:	str	r0, [fp, #-52]	; 0xffffffcc
   158ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158f0:	ldr	r0, [r0, #48]	; 0x30
   158f4:	add	r0, r0, #1
   158f8:	str	r0, [fp, #-44]	; 0xffffffd4
   158fc:	movw	r0, #0
   15900:	strb	r0, [fp, #-38]	; 0xffffffda
   15904:	movw	r0, #0
   15908:	str	r0, [fp, #-20]	; 0xffffffec
   1590c:	str	r0, [fp, #-28]	; 0xffffffe4
   15910:	str	r0, [fp, #-24]	; 0xffffffe8
   15914:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15918:	ldr	r0, [r0, #12]
   1591c:	movw	r1, #0
   15920:	cmp	r0, r1
   15924:	beq	15e24 <__assert_fail@plt+0x45b0>
   15928:	bl	11700 <__errno_location@plt>
   1592c:	movw	lr, #0
   15930:	str	lr, [r0]
   15934:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15938:	ldr	r0, [r0, #12]
   1593c:	bl	117a8 <readdir64@plt>
   15940:	str	r0, [sp, #88]	; 0x58
   15944:	ldr	r0, [sp, #88]	; 0x58
   15948:	movw	lr, #0
   1594c:	cmp	r0, lr
   15950:	bne	159b8 <__assert_fail@plt+0x4144>
   15954:	bl	11700 <__errno_location@plt>
   15958:	ldr	r0, [r0]
   1595c:	cmp	r0, #0
   15960:	beq	159b4 <__assert_fail@plt+0x4140>
   15964:	bl	11700 <__errno_location@plt>
   15968:	ldr	r0, [r0]
   1596c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15970:	str	r0, [lr, #32]
   15974:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15978:	tst	r0, #1
   1597c:	movw	r0, #1
   15980:	str	r0, [sp, #28]
   15984:	bne	1599c <__assert_fail@plt+0x4128>
   15988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1598c:	cmp	r0, #0
   15990:	movw	r0, #0
   15994:	movne	r0, #1
   15998:	str	r0, [sp, #28]
   1599c:	ldr	r0, [sp, #28]
   159a0:	tst	r0, #1
   159a4:	movw	r0, #7
   159a8:	moveq	r0, #4
   159ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159b0:	strh	r0, [r1, #56]	; 0x38
   159b4:	b	15e24 <__assert_fail@plt+0x45b0>
   159b8:	ldr	r0, [fp, #-8]
   159bc:	ldr	r0, [r0, #48]	; 0x30
   159c0:	and	r0, r0, #32
   159c4:	cmp	r0, #0
   159c8:	bne	15a10 <__assert_fail@plt+0x419c>
   159cc:	ldr	r0, [sp, #88]	; 0x58
   159d0:	ldrb	r0, [r0, #19]
   159d4:	cmp	r0, #46	; 0x2e
   159d8:	bne	15a10 <__assert_fail@plt+0x419c>
   159dc:	ldr	r0, [sp, #88]	; 0x58
   159e0:	ldrsb	r0, [r0, #20]
   159e4:	cmp	r0, #0
   159e8:	beq	15a0c <__assert_fail@plt+0x4198>
   159ec:	ldr	r0, [sp, #88]	; 0x58
   159f0:	ldrb	r0, [r0, #20]
   159f4:	cmp	r0, #46	; 0x2e
   159f8:	bne	15a10 <__assert_fail@plt+0x419c>
   159fc:	ldr	r0, [sp, #88]	; 0x58
   15a00:	ldrsb	r0, [r0, #21]
   15a04:	cmp	r0, #0
   15a08:	bne	15a10 <__assert_fail@plt+0x419c>
   15a0c:	b	15914 <__assert_fail@plt+0x40a0>
   15a10:	ldr	r0, [sp, #88]	; 0x58
   15a14:	add	r0, r0, #19
   15a18:	bl	116d0 <strlen@plt>
   15a1c:	str	r0, [fp, #-84]	; 0xffffffac
   15a20:	ldr	r0, [fp, #-8]
   15a24:	ldr	lr, [sp, #88]	; 0x58
   15a28:	add	r1, lr, #19
   15a2c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15a30:	bl	13b50 <__assert_fail@plt+0x22dc>
   15a34:	str	r0, [fp, #-16]
   15a38:	ldr	r0, [fp, #-16]
   15a3c:	movw	r1, #0
   15a40:	cmp	r0, r1
   15a44:	bne	15a4c <__assert_fail@plt+0x41d8>
   15a48:	b	15a8c <__assert_fail@plt+0x4218>
   15a4c:	ldr	r0, [fp, #-84]	; 0xffffffac
   15a50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15a54:	cmp	r0, r1
   15a58:	bcc	15b5c <__assert_fail@plt+0x42e8>
   15a5c:	ldr	r0, [fp, #-8]
   15a60:	ldr	r0, [r0, #24]
   15a64:	str	r0, [fp, #-32]	; 0xffffffe0
   15a68:	ldr	r0, [fp, #-8]
   15a6c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15a70:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15a74:	add	r1, r1, r2
   15a78:	add	r1, r1, #1
   15a7c:	bl	13a58 <__assert_fail@plt+0x21e4>
   15a80:	tst	r0, #1
   15a84:	bne	15b00 <__assert_fail@plt+0x428c>
   15a88:	b	15a8c <__assert_fail@plt+0x4218>
   15a8c:	bl	11700 <__errno_location@plt>
   15a90:	ldr	r0, [r0]
   15a94:	str	r0, [fp, #-36]	; 0xffffffdc
   15a98:	ldr	r0, [fp, #-16]
   15a9c:	bl	209b8 <__assert_fail@plt+0xf144>
   15aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15aa4:	bl	141f8 <__assert_fail@plt+0x2984>
   15aa8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15aac:	ldr	r0, [r0, #12]
   15ab0:	bl	1185c <closedir@plt>
   15ab4:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15ab8:	movw	r1, #0
   15abc:	str	r1, [lr, #12]
   15ac0:	str	r0, [sp, #24]
   15ac4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ac8:	movw	r1, #7
   15acc:	strh	r1, [r0, #56]	; 0x38
   15ad0:	ldr	r0, [fp, #-8]
   15ad4:	ldr	r1, [r0, #48]	; 0x30
   15ad8:	orr	r1, r1, #8192	; 0x2000
   15adc:	str	r1, [r0, #48]	; 0x30
   15ae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ae4:	str	r0, [sp, #20]
   15ae8:	bl	11700 <__errno_location@plt>
   15aec:	ldr	r1, [sp, #20]
   15af0:	str	r1, [r0]
   15af4:	movw	r0, #0
   15af8:	str	r0, [fp, #-4]
   15afc:	b	16040 <__assert_fail@plt+0x47cc>
   15b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b04:	ldr	r1, [fp, #-8]
   15b08:	ldr	r1, [r1, #24]
   15b0c:	cmp	r0, r1
   15b10:	beq	15b48 <__assert_fail@plt+0x42d4>
   15b14:	movw	r0, #1
   15b18:	strb	r0, [fp, #-38]	; 0xffffffda
   15b1c:	ldr	r0, [fp, #-8]
   15b20:	ldr	r0, [r0, #48]	; 0x30
   15b24:	and	r0, r0, #4
   15b28:	cmp	r0, #0
   15b2c:	beq	15b44 <__assert_fail@plt+0x42d0>
   15b30:	ldr	r0, [fp, #-8]
   15b34:	ldr	r0, [r0, #24]
   15b38:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15b3c:	add	r0, r0, r1
   15b40:	str	r0, [fp, #-60]	; 0xffffffc4
   15b44:	b	15b48 <__assert_fail@plt+0x42d4>
   15b48:	ldr	r0, [fp, #-8]
   15b4c:	ldr	r0, [r0, #36]	; 0x24
   15b50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15b54:	sub	r0, r0, r1
   15b58:	str	r0, [fp, #-52]	; 0xffffffcc
   15b5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b60:	ldr	r1, [fp, #-84]	; 0xffffffac
   15b64:	add	r0, r0, r1
   15b68:	str	r0, [fp, #-56]	; 0xffffffc8
   15b6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15b74:	cmp	r0, r1
   15b78:	bcs	15bdc <__assert_fail@plt+0x4368>
   15b7c:	ldr	r0, [fp, #-16]
   15b80:	bl	209b8 <__assert_fail@plt+0xf144>
   15b84:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b88:	bl	141f8 <__assert_fail@plt+0x2984>
   15b8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b90:	ldr	r0, [r0, #12]
   15b94:	bl	1185c <closedir@plt>
   15b98:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15b9c:	movw	r1, #0
   15ba0:	str	r1, [lr, #12]
   15ba4:	str	r0, [sp, #16]
   15ba8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15bac:	movw	r1, #7
   15bb0:	strh	r1, [r0, #56]	; 0x38
   15bb4:	ldr	r0, [fp, #-8]
   15bb8:	ldr	r1, [r0, #48]	; 0x30
   15bbc:	orr	r1, r1, #8192	; 0x2000
   15bc0:	str	r1, [r0, #48]	; 0x30
   15bc4:	bl	11700 <__errno_location@plt>
   15bc8:	movw	r1, #36	; 0x24
   15bcc:	str	r1, [r0]
   15bd0:	movw	r0, #0
   15bd4:	str	r0, [fp, #-4]
   15bd8:	b	16040 <__assert_fail@plt+0x47cc>
   15bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15be0:	ldr	r1, [fp, #-16]
   15be4:	str	r0, [r1, #48]	; 0x30
   15be8:	ldr	r0, [fp, #-8]
   15bec:	ldr	r0, [r0]
   15bf0:	ldr	r1, [fp, #-16]
   15bf4:	str	r0, [r1, #4]
   15bf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bfc:	ldr	r1, [fp, #-16]
   15c00:	str	r0, [r1, #40]	; 0x28
   15c04:	ldr	r0, [sp, #88]	; 0x58
   15c08:	ldr	r1, [r0]
   15c0c:	ldr	r0, [r0, #4]
   15c10:	ldr	r2, [fp, #-16]
   15c14:	str	r0, [r2, #164]	; 0xa4
   15c18:	str	r1, [r2, #160]	; 0xa0
   15c1c:	ldr	r0, [fp, #-8]
   15c20:	ldr	r0, [r0, #48]	; 0x30
   15c24:	and	r0, r0, #4
   15c28:	cmp	r0, #0
   15c2c:	beq	15c60 <__assert_fail@plt+0x43ec>
   15c30:	ldr	r0, [fp, #-16]
   15c34:	ldr	r0, [r0, #28]
   15c38:	ldr	r1, [fp, #-16]
   15c3c:	str	r0, [r1, #24]
   15c40:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15c44:	ldr	r1, [fp, #-16]
   15c48:	add	r1, r1, #168	; 0xa8
   15c4c:	ldr	r2, [fp, #-16]
   15c50:	ldr	r2, [r2, #52]	; 0x34
   15c54:	add	r2, r2, #1
   15c58:	bl	11508 <memmove@plt>
   15c5c:	b	15c70 <__assert_fail@plt+0x43fc>
   15c60:	ldr	r0, [fp, #-16]
   15c64:	add	r0, r0, #168	; 0xa8
   15c68:	ldr	r1, [fp, #-16]
   15c6c:	str	r0, [r1, #24]
   15c70:	ldr	r0, [fp, #-8]
   15c74:	ldr	r0, [r0, #44]	; 0x2c
   15c78:	movw	r1, #0
   15c7c:	cmp	r0, r1
   15c80:	beq	15c98 <__assert_fail@plt+0x4424>
   15c84:	ldr	r0, [fp, #-8]
   15c88:	ldr	r0, [r0, #48]	; 0x30
   15c8c:	and	r0, r0, #1024	; 0x400
   15c90:	cmp	r0, #0
   15c94:	beq	15d70 <__assert_fail@plt+0x44fc>
   15c98:	ldr	r0, [fp, #-8]
   15c9c:	ldr	r0, [r0, #48]	; 0x30
   15ca0:	and	r0, r0, #8
   15ca4:	cmp	r0, #0
   15ca8:	movw	r0, #0
   15cac:	str	r0, [sp, #12]
   15cb0:	beq	15d28 <__assert_fail@plt+0x44b4>
   15cb4:	ldr	r0, [sp, #88]	; 0x58
   15cb8:	ldrb	r0, [r0, #18]
   15cbc:	cmp	r0, #0
   15cc0:	movw	r0, #0
   15cc4:	str	r0, [sp, #12]
   15cc8:	beq	15d28 <__assert_fail@plt+0x44b4>
   15ccc:	ldr	r0, [sp, #88]	; 0x58
   15cd0:	ldrb	r0, [r0, #18]
   15cd4:	cmp	r0, #4
   15cd8:	movw	r0, #0
   15cdc:	str	r0, [sp, #12]
   15ce0:	beq	15d28 <__assert_fail@plt+0x44b4>
   15ce4:	ldr	r0, [fp, #-8]
   15ce8:	ldr	r0, [r0, #48]	; 0x30
   15cec:	and	r0, r0, #16
   15cf0:	cmp	r0, #0
   15cf4:	movw	r0, #1
   15cf8:	str	r0, [sp, #8]
   15cfc:	bne	15d20 <__assert_fail@plt+0x44ac>
   15d00:	ldr	r0, [sp, #88]	; 0x58
   15d04:	ldrb	r0, [r0, #18]
   15d08:	cmp	r0, #10
   15d0c:	movw	r0, #0
   15d10:	moveq	r0, #1
   15d14:	mvn	r1, #0
   15d18:	eor	r0, r0, r1
   15d1c:	str	r0, [sp, #8]
   15d20:	ldr	r0, [sp, #8]
   15d24:	str	r0, [sp, #12]
   15d28:	ldr	r0, [sp, #12]
   15d2c:	and	r0, r0, #1
   15d30:	strb	r0, [sp, #87]	; 0x57
   15d34:	ldr	r0, [fp, #-16]
   15d38:	movw	r1, #11
   15d3c:	strh	r1, [r0, #56]	; 0x38
   15d40:	ldr	r0, [fp, #-16]
   15d44:	add	r0, r0, #64	; 0x40
   15d48:	ldr	r1, [sp, #88]	; 0x58
   15d4c:	ldrb	r1, [r1, #18]
   15d50:	bl	168e0 <__assert_fail@plt+0x506c>
   15d54:	ldr	r0, [fp, #-16]
   15d58:	ldrb	r1, [sp, #87]	; 0x57
   15d5c:	mvn	lr, #0
   15d60:	eor	r1, r1, lr
   15d64:	and	r1, r1, #1
   15d68:	bl	13c48 <__assert_fail@plt+0x23d4>
   15d6c:	b	15d8c <__assert_fail@plt+0x4518>
   15d70:	ldr	r0, [fp, #-8]
   15d74:	ldr	r1, [fp, #-16]
   15d78:	movw	r2, #0
   15d7c:	and	r2, r2, #1
   15d80:	bl	13ca0 <__assert_fail@plt+0x242c>
   15d84:	ldr	r1, [fp, #-16]
   15d88:	strh	r0, [r1, #56]	; 0x38
   15d8c:	ldr	r0, [fp, #-16]
   15d90:	movw	r1, #0
   15d94:	str	r1, [r0, #8]
   15d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d9c:	cmp	r0, r1
   15da0:	bne	15db4 <__assert_fail@plt+0x4540>
   15da4:	ldr	r0, [fp, #-16]
   15da8:	str	r0, [fp, #-28]	; 0xffffffe4
   15dac:	str	r0, [fp, #-20]	; 0xffffffec
   15db0:	b	15dc8 <__assert_fail@plt+0x4554>
   15db4:	ldr	r0, [fp, #-16]
   15db8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15dbc:	str	r0, [r1, #8]
   15dc0:	ldr	r0, [fp, #-16]
   15dc4:	str	r0, [fp, #-28]	; 0xffffffe4
   15dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dcc:	movw	r1, #10000	; 0x2710
   15dd0:	cmp	r0, r1
   15dd4:	bne	15e00 <__assert_fail@plt+0x458c>
   15dd8:	ldr	r0, [fp, #-8]
   15ddc:	ldr	r0, [r0, #44]	; 0x2c
   15de0:	movw	r1, #0
   15de4:	cmp	r0, r1
   15de8:	bne	15e00 <__assert_fail@plt+0x458c>
   15dec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15df0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15df4:	bl	169b0 <__assert_fail@plt+0x513c>
   15df8:	and	r0, r0, #1
   15dfc:	strb	r0, [fp, #-70]	; 0xffffffba
   15e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e04:	add	r0, r0, #1
   15e08:	str	r0, [fp, #-24]	; 0xffffffe8
   15e0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e14:	cmp	r0, r1
   15e18:	bhi	15e20 <__assert_fail@plt+0x45ac>
   15e1c:	b	15e60 <__assert_fail@plt+0x45ec>
   15e20:	b	15914 <__assert_fail@plt+0x40a0>
   15e24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e28:	ldr	r0, [r0, #12]
   15e2c:	movw	r1, #0
   15e30:	cmp	r0, r1
   15e34:	beq	15e5c <__assert_fail@plt+0x45e8>
   15e38:	b	15e3c <__assert_fail@plt+0x45c8>
   15e3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e40:	ldr	r0, [r0, #12]
   15e44:	bl	1185c <closedir@plt>
   15e48:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15e4c:	movw	r1, #0
   15e50:	str	r1, [lr, #12]
   15e54:	str	r0, [sp, #4]
   15e58:	b	15e5c <__assert_fail@plt+0x45e8>
   15e5c:	b	15e60 <__assert_fail@plt+0x45ec>
   15e60:	ldrb	r0, [fp, #-38]	; 0xffffffda
   15e64:	tst	r0, #1
   15e68:	beq	15e78 <__assert_fail@plt+0x4604>
   15e6c:	ldr	r0, [fp, #-8]
   15e70:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e74:	bl	16a44 <__assert_fail@plt+0x51d0>
   15e78:	ldr	r0, [fp, #-8]
   15e7c:	ldr	r0, [r0, #48]	; 0x30
   15e80:	and	r0, r0, #4
   15e84:	cmp	r0, #0
   15e88:	beq	15ec8 <__assert_fail@plt+0x4654>
   15e8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e90:	ldr	r1, [fp, #-8]
   15e94:	ldr	r1, [r1, #36]	; 0x24
   15e98:	cmp	r0, r1
   15e9c:	beq	15eac <__assert_fail@plt+0x4638>
   15ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ea4:	cmp	r0, #0
   15ea8:	bne	15ebc <__assert_fail@plt+0x4648>
   15eac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15eb0:	mvn	r1, #0
   15eb4:	add	r0, r0, r1
   15eb8:	str	r0, [fp, #-60]	; 0xffffffc4
   15ebc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15ec0:	movw	r1, #0
   15ec4:	strb	r1, [r0]
   15ec8:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15ecc:	tst	r0, #1
   15ed0:	bne	15f70 <__assert_fail@plt+0x46fc>
   15ed4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15ed8:	tst	r0, #1
   15edc:	beq	15f70 <__assert_fail@plt+0x46fc>
   15ee0:	ldr	r0, [fp, #-12]
   15ee4:	cmp	r0, #1
   15ee8:	beq	15ef8 <__assert_fail@plt+0x4684>
   15eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ef0:	cmp	r0, #0
   15ef4:	bne	15f70 <__assert_fail@plt+0x46fc>
   15ef8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15efc:	ldr	r0, [r0, #48]	; 0x30
   15f00:	cmp	r0, #0
   15f04:	bne	15f1c <__assert_fail@plt+0x46a8>
   15f08:	ldr	r0, [fp, #-8]
   15f0c:	bl	16050 <__assert_fail@plt+0x47dc>
   15f10:	cmp	r0, #0
   15f14:	bne	15f40 <__assert_fail@plt+0x46cc>
   15f18:	b	15f70 <__assert_fail@plt+0x46fc>
   15f1c:	ldr	r0, [fp, #-8]
   15f20:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15f24:	ldr	r1, [r1, #4]
   15f28:	mvn	r2, #0
   15f2c:	movw	r3, #16798	; 0x419e
   15f30:	movt	r3, #2
   15f34:	bl	150b0 <__assert_fail@plt+0x383c>
   15f38:	cmp	r0, #0
   15f3c:	beq	15f70 <__assert_fail@plt+0x46fc>
   15f40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f44:	movw	r1, #7
   15f48:	strh	r1, [r0, #56]	; 0x38
   15f4c:	ldr	r0, [fp, #-8]
   15f50:	ldr	r1, [r0, #48]	; 0x30
   15f54:	orr	r1, r1, #8192	; 0x2000
   15f58:	str	r1, [r0, #48]	; 0x30
   15f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f60:	bl	141f8 <__assert_fail@plt+0x2984>
   15f64:	movw	r0, #0
   15f68:	str	r0, [fp, #-4]
   15f6c:	b	16040 <__assert_fail@plt+0x47cc>
   15f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f74:	cmp	r0, #0
   15f78:	bne	15fc8 <__assert_fail@plt+0x4754>
   15f7c:	ldr	r0, [fp, #-12]
   15f80:	cmp	r0, #3
   15f84:	bne	15fb4 <__assert_fail@plt+0x4740>
   15f88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f8c:	ldrh	r0, [r0, #56]	; 0x38
   15f90:	cmp	r0, #4
   15f94:	beq	15fb4 <__assert_fail@plt+0x4740>
   15f98:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f9c:	ldrh	r0, [r0, #56]	; 0x38
   15fa0:	cmp	r0, #7
   15fa4:	beq	15fb4 <__assert_fail@plt+0x4740>
   15fa8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15fac:	movw	r1, #6
   15fb0:	strh	r1, [r0, #56]	; 0x38
   15fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fb8:	bl	141f8 <__assert_fail@plt+0x2984>
   15fbc:	movw	r0, #0
   15fc0:	str	r0, [fp, #-4]
   15fc4:	b	16040 <__assert_fail@plt+0x47cc>
   15fc8:	ldrb	r0, [fp, #-70]	; 0xffffffba
   15fcc:	tst	r0, #1
   15fd0:	beq	16004 <__assert_fail@plt+0x4790>
   15fd4:	ldr	r0, [fp, #-8]
   15fd8:	movw	r1, #27520	; 0x6b80
   15fdc:	movt	r1, #1
   15fe0:	str	r1, [r0, #44]	; 0x2c
   15fe4:	ldr	r0, [fp, #-8]
   15fe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ff0:	bl	13eb8 <__assert_fail@plt+0x2644>
   15ff4:	str	r0, [fp, #-20]	; 0xffffffec
   15ff8:	ldr	r0, [fp, #-8]
   15ffc:	movw	r1, #0
   16000:	str	r1, [r0, #44]	; 0x2c
   16004:	ldr	r0, [fp, #-8]
   16008:	ldr	r0, [r0, #44]	; 0x2c
   1600c:	movw	r1, #0
   16010:	cmp	r0, r1
   16014:	beq	16038 <__assert_fail@plt+0x47c4>
   16018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1601c:	cmp	r0, #1
   16020:	bls	16038 <__assert_fail@plt+0x47c4>
   16024:	ldr	r0, [fp, #-8]
   16028:	ldr	r1, [fp, #-20]	; 0xffffffec
   1602c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16030:	bl	13eb8 <__assert_fail@plt+0x2644>
   16034:	str	r0, [fp, #-20]	; 0xffffffec
   16038:	ldr	r0, [fp, #-20]	; 0xffffffec
   1603c:	str	r0, [fp, #-4]
   16040:	ldr	r0, [fp, #-4]
   16044:	mov	sp, fp
   16048:	pop	{fp, pc}
   1604c:	andeq	r8, r1, r0, lsr #13
   16050:	push	{fp, lr}
   16054:	mov	fp, sp
   16058:	sub	sp, sp, #32
   1605c:	str	r0, [fp, #-4]
   16060:	ldr	r0, [fp, #-4]
   16064:	ldr	r0, [r0, #48]	; 0x30
   16068:	and	r0, r0, #4
   1606c:	cmp	r0, #0
   16070:	movw	r0, #0
   16074:	str	r0, [fp, #-12]
   16078:	bne	1613c <__assert_fail@plt+0x48c8>
   1607c:	ldr	r0, [fp, #-4]
   16080:	ldr	r0, [r0, #48]	; 0x30
   16084:	and	r0, r0, #512	; 0x200
   16088:	cmp	r0, #0
   1608c:	beq	160f0 <__assert_fail@plt+0x487c>
   16090:	ldr	r0, [fp, #-4]
   16094:	ldr	r1, [fp, #-4]
   16098:	ldr	r1, [r1, #48]	; 0x30
   1609c:	and	r1, r1, #512	; 0x200
   160a0:	cmp	r1, #0
   160a4:	str	r0, [sp, #16]
   160a8:	beq	160b8 <__assert_fail@plt+0x4844>
   160ac:	mvn	r0, #99	; 0x63
   160b0:	str	r0, [sp, #12]
   160b4:	b	160c4 <__assert_fail@plt+0x4850>
   160b8:	ldr	r0, [fp, #-4]
   160bc:	ldr	r0, [r0, #28]
   160c0:	str	r0, [sp, #12]
   160c4:	ldr	r0, [sp, #12]
   160c8:	ldr	r1, [sp, #16]
   160cc:	str	r0, [sp, #8]
   160d0:	mov	r0, r1
   160d4:	ldr	r1, [sp, #8]
   160d8:	movw	r2, #1
   160dc:	and	r2, r2, #1
   160e0:	bl	163a0 <__assert_fail@plt+0x4b2c>
   160e4:	movw	r0, #0
   160e8:	str	r0, [sp, #4]
   160ec:	b	16128 <__assert_fail@plt+0x48b4>
   160f0:	ldr	r0, [fp, #-4]
   160f4:	ldr	r0, [r0, #48]	; 0x30
   160f8:	and	r0, r0, #512	; 0x200
   160fc:	cmp	r0, #0
   16100:	beq	16110 <__assert_fail@plt+0x489c>
   16104:	mvn	r0, #99	; 0x63
   16108:	str	r0, [sp]
   1610c:	b	1611c <__assert_fail@plt+0x48a8>
   16110:	ldr	r0, [fp, #-4]
   16114:	ldr	r0, [r0, #28]
   16118:	str	r0, [sp]
   1611c:	ldr	r0, [sp]
   16120:	bl	117cc <fchdir@plt>
   16124:	str	r0, [sp, #4]
   16128:	ldr	r0, [sp, #4]
   1612c:	cmp	r0, #0
   16130:	movw	r0, #0
   16134:	movne	r0, #1
   16138:	str	r0, [fp, #-12]
   1613c:	ldr	r0, [fp, #-12]
   16140:	and	r0, r0, #1
   16144:	str	r0, [fp, #-8]
   16148:	ldr	r0, [fp, #-4]
   1614c:	add	r0, r0, #60	; 0x3c
   16150:	bl	14468 <__assert_fail@plt+0x2bf4>
   16154:	ldr	r0, [fp, #-8]
   16158:	mov	sp, fp
   1615c:	pop	{fp, pc}
   16160:	push	{fp, lr}
   16164:	mov	fp, sp
   16168:	sub	sp, sp, #16
   1616c:	str	r0, [fp, #-4]
   16170:	str	r1, [sp, #8]
   16174:	ldr	r0, [sp, #8]
   16178:	ldr	r0, [r0, #52]	; 0x34
   1617c:	ldr	r1, [sp, #8]
   16180:	str	r0, [r1, #40]	; 0x28
   16184:	str	r0, [sp, #4]
   16188:	ldr	r0, [fp, #-4]
   1618c:	ldr	r0, [r0, #24]
   16190:	ldr	r1, [sp, #8]
   16194:	add	r1, r1, #168	; 0xa8
   16198:	ldr	r2, [sp, #4]
   1619c:	add	r2, r2, #1
   161a0:	bl	11508 <memmove@plt>
   161a4:	ldr	r0, [sp, #8]
   161a8:	add	r0, r0, #168	; 0xa8
   161ac:	movw	r1, #47	; 0x2f
   161b0:	bl	11784 <strrchr@plt>
   161b4:	str	r0, [sp]
   161b8:	movw	r1, #0
   161bc:	cmp	r0, r1
   161c0:	beq	16220 <__assert_fail@plt+0x49ac>
   161c4:	ldr	r0, [sp]
   161c8:	ldr	r1, [sp, #8]
   161cc:	add	r1, r1, #168	; 0xa8
   161d0:	cmp	r0, r1
   161d4:	bne	161e8 <__assert_fail@plt+0x4974>
   161d8:	ldr	r0, [sp]
   161dc:	ldrb	r0, [r0, #1]
   161e0:	cmp	r0, #0
   161e4:	beq	16220 <__assert_fail@plt+0x49ac>
   161e8:	ldr	r0, [sp]
   161ec:	add	r0, r0, #1
   161f0:	str	r0, [sp]
   161f4:	bl	116d0 <strlen@plt>
   161f8:	str	r0, [sp, #4]
   161fc:	ldr	r0, [sp, #8]
   16200:	add	r0, r0, #168	; 0xa8
   16204:	ldr	r1, [sp]
   16208:	ldr	lr, [sp, #4]
   1620c:	add	r2, lr, #1
   16210:	bl	11508 <memmove@plt>
   16214:	ldr	r0, [sp, #4]
   16218:	ldr	r1, [sp, #8]
   1621c:	str	r0, [r1, #52]	; 0x34
   16220:	ldr	r0, [fp, #-4]
   16224:	ldr	r0, [r0, #24]
   16228:	ldr	r1, [sp, #8]
   1622c:	str	r0, [r1, #28]
   16230:	ldr	r1, [sp, #8]
   16234:	str	r0, [r1, #24]
   16238:	mov	sp, fp
   1623c:	pop	{fp, pc}
   16240:	push	{fp, lr}
   16244:	mov	fp, sp
   16248:	sub	sp, sp, #24
   1624c:	str	r0, [fp, #-8]
   16250:	str	r1, [sp, #12]
   16254:	ldr	r0, [fp, #-8]
   16258:	ldr	r0, [r0, #48]	; 0x30
   1625c:	movw	r1, #258	; 0x102
   16260:	and	r0, r0, r1
   16264:	cmp	r0, #0
   16268:	beq	1634c <__assert_fail@plt+0x4ad8>
   1626c:	ldr	r0, [sp, #12]
   16270:	add	r0, r0, #64	; 0x40
   16274:	str	r0, [sp, #8]
   16278:	movw	r0, #24
   1627c:	bl	1faac <__assert_fail@plt+0xe238>
   16280:	str	r0, [sp, #4]
   16284:	ldr	r0, [sp, #4]
   16288:	movw	lr, #0
   1628c:	cmp	r0, lr
   16290:	bne	162a4 <__assert_fail@plt+0x4a30>
   16294:	movw	r0, #0
   16298:	and	r0, r0, #1
   1629c:	strb	r0, [fp, #-1]
   162a0:	b	16390 <__assert_fail@plt+0x4b1c>
   162a4:	ldr	r0, [sp, #8]
   162a8:	ldr	r1, [r0]
   162ac:	ldr	r0, [r0, #4]
   162b0:	ldr	r2, [sp, #4]
   162b4:	str	r0, [r2, #4]
   162b8:	str	r1, [r2]
   162bc:	ldr	r0, [sp, #8]
   162c0:	ldr	r1, [r0, #96]	; 0x60
   162c4:	ldr	r0, [r0, #100]	; 0x64
   162c8:	ldr	r2, [sp, #4]
   162cc:	str	r0, [r2, #12]
   162d0:	str	r1, [r2, #8]
   162d4:	ldr	r0, [sp, #12]
   162d8:	ldr	r1, [sp, #4]
   162dc:	str	r0, [r1, #16]
   162e0:	ldr	r0, [fp, #-8]
   162e4:	ldr	r0, [r0, #56]	; 0x38
   162e8:	ldr	r1, [sp, #4]
   162ec:	bl	18700 <__assert_fail@plt+0x6e8c>
   162f0:	str	r0, [sp]
   162f4:	ldr	r0, [sp]
   162f8:	ldr	r1, [sp, #4]
   162fc:	cmp	r0, r1
   16300:	beq	16348 <__assert_fail@plt+0x4ad4>
   16304:	ldr	r0, [sp, #4]
   16308:	bl	209b8 <__assert_fail@plt+0xf144>
   1630c:	ldr	r0, [sp]
   16310:	movw	lr, #0
   16314:	cmp	r0, lr
   16318:	bne	1632c <__assert_fail@plt+0x4ab8>
   1631c:	movw	r0, #0
   16320:	and	r0, r0, #1
   16324:	strb	r0, [fp, #-1]
   16328:	b	16390 <__assert_fail@plt+0x4b1c>
   1632c:	ldr	r0, [sp]
   16330:	ldr	r0, [r0, #16]
   16334:	ldr	r1, [sp, #12]
   16338:	str	r0, [r1]
   1633c:	ldr	r0, [sp, #12]
   16340:	movw	r1, #2
   16344:	strh	r1, [r0, #56]	; 0x38
   16348:	b	16384 <__assert_fail@plt+0x4b10>
   1634c:	ldr	r0, [fp, #-8]
   16350:	ldr	r0, [r0, #56]	; 0x38
   16354:	ldr	r1, [sp, #12]
   16358:	add	r1, r1, #64	; 0x40
   1635c:	bl	201f8 <__assert_fail@plt+0xe984>
   16360:	tst	r0, #1
   16364:	beq	16380 <__assert_fail@plt+0x4b0c>
   16368:	ldr	r0, [sp, #12]
   1636c:	ldr	r1, [sp, #12]
   16370:	str	r0, [r1]
   16374:	ldr	r0, [sp, #12]
   16378:	movw	r1, #2
   1637c:	strh	r1, [r0, #56]	; 0x38
   16380:	b	16384 <__assert_fail@plt+0x4b10>
   16384:	movw	r0, #1
   16388:	and	r0, r0, #1
   1638c:	strb	r0, [fp, #-1]
   16390:	ldrb	r0, [fp, #-1]
   16394:	and	r0, r0, #1
   16398:	mov	sp, fp
   1639c:	pop	{fp, pc}
   163a0:	push	{fp, lr}
   163a4:	mov	fp, sp
   163a8:	sub	sp, sp, #32
   163ac:	str	r0, [fp, #-4]
   163b0:	str	r1, [fp, #-8]
   163b4:	and	r0, r2, #1
   163b8:	strb	r0, [fp, #-9]
   163bc:	ldr	r0, [fp, #-4]
   163c0:	ldr	r0, [r0, #32]
   163c4:	str	r0, [sp, #16]
   163c8:	ldr	r0, [sp, #16]
   163cc:	ldr	r1, [fp, #-8]
   163d0:	cmp	r0, r1
   163d4:	bne	163e8 <__assert_fail@plt+0x4b74>
   163d8:	ldr	r0, [sp, #16]
   163dc:	cmn	r0, #100	; 0x64
   163e0:	beq	163e8 <__assert_fail@plt+0x4b74>
   163e4:	bl	11838 <abort@plt>
   163e8:	b	163ec <__assert_fail@plt+0x4b78>
   163ec:	ldrb	r0, [fp, #-9]
   163f0:	tst	r0, #1
   163f4:	beq	1642c <__assert_fail@plt+0x4bb8>
   163f8:	ldr	r0, [fp, #-4]
   163fc:	add	r0, r0, #60	; 0x3c
   16400:	ldr	r1, [sp, #16]
   16404:	bl	18bc4 <__assert_fail@plt+0x7350>
   16408:	str	r0, [sp, #12]
   1640c:	ldr	r0, [sp, #12]
   16410:	movw	r1, #0
   16414:	cmp	r1, r0
   16418:	bgt	16428 <__assert_fail@plt+0x4bb4>
   1641c:	ldr	r0, [sp, #12]
   16420:	bl	11844 <close@plt>
   16424:	str	r0, [sp, #8]
   16428:	b	16464 <__assert_fail@plt+0x4bf0>
   1642c:	ldr	r0, [fp, #-4]
   16430:	ldr	r0, [r0, #48]	; 0x30
   16434:	and	r0, r0, #4
   16438:	cmp	r0, #0
   1643c:	bne	16460 <__assert_fail@plt+0x4bec>
   16440:	ldr	r0, [sp, #16]
   16444:	movw	r1, #0
   16448:	cmp	r1, r0
   1644c:	bgt	1645c <__assert_fail@plt+0x4be8>
   16450:	ldr	r0, [sp, #16]
   16454:	bl	11844 <close@plt>
   16458:	str	r0, [sp, #4]
   1645c:	b	16460 <__assert_fail@plt+0x4bec>
   16460:	b	16464 <__assert_fail@plt+0x4bf0>
   16464:	ldr	r0, [fp, #-8]
   16468:	ldr	r1, [fp, #-4]
   1646c:	str	r0, [r1, #32]
   16470:	mov	sp, fp
   16474:	pop	{fp, pc}
   16478:	push	{fp, lr}
   1647c:	mov	fp, sp
   16480:	sub	sp, sp, #16
   16484:	str	r0, [sp, #8]
   16488:	str	r1, [sp, #4]
   1648c:	str	r2, [sp]
   16490:	ldr	r0, [sp]
   16494:	cmp	r0, #0
   16498:	beq	164e4 <__assert_fail@plt+0x4c70>
   1649c:	ldr	r0, [sp]
   164a0:	cmp	r0, #1
   164a4:	beq	164e4 <__assert_fail@plt+0x4c70>
   164a8:	ldr	r0, [sp]
   164ac:	cmp	r0, #2
   164b0:	beq	164e4 <__assert_fail@plt+0x4c70>
   164b4:	ldr	r0, [sp]
   164b8:	cmp	r0, #3
   164bc:	beq	164e4 <__assert_fail@plt+0x4c70>
   164c0:	ldr	r0, [sp]
   164c4:	cmp	r0, #4
   164c8:	beq	164e4 <__assert_fail@plt+0x4c70>
   164cc:	bl	11700 <__errno_location@plt>
   164d0:	movw	lr, #22
   164d4:	str	lr, [r0]
   164d8:	movw	r0, #1
   164dc:	str	r0, [fp, #-4]
   164e0:	b	164f8 <__assert_fail@plt+0x4c84>
   164e4:	ldr	r0, [sp]
   164e8:	ldr	r1, [sp, #4]
   164ec:	strh	r0, [r1, #60]	; 0x3c
   164f0:	movw	r0, #0
   164f4:	str	r0, [fp, #-4]
   164f8:	ldr	r0, [fp, #-4]
   164fc:	mov	sp, fp
   16500:	pop	{fp, pc}
   16504:	push	{fp, lr}
   16508:	mov	fp, sp
   1650c:	sub	sp, sp, #40	; 0x28
   16510:	str	r0, [fp, #-8]
   16514:	str	r1, [fp, #-12]
   16518:	ldr	r0, [fp, #-12]
   1651c:	cmp	r0, #0
   16520:	beq	16548 <__assert_fail@plt+0x4cd4>
   16524:	ldr	r0, [fp, #-12]
   16528:	cmp	r0, #4096	; 0x1000
   1652c:	beq	16548 <__assert_fail@plt+0x4cd4>
   16530:	bl	11700 <__errno_location@plt>
   16534:	movw	lr, #22
   16538:	str	lr, [r0]
   1653c:	movw	r0, #0
   16540:	str	r0, [fp, #-4]
   16544:	b	16730 <__assert_fail@plt+0x4ebc>
   16548:	ldr	r0, [fp, #-8]
   1654c:	ldr	r0, [r0]
   16550:	str	r0, [fp, #-16]
   16554:	bl	11700 <__errno_location@plt>
   16558:	movw	lr, #0
   1655c:	str	lr, [r0]
   16560:	ldr	r0, [fp, #-8]
   16564:	ldr	r0, [r0, #48]	; 0x30
   16568:	and	r0, r0, #8192	; 0x2000
   1656c:	cmp	r0, #0
   16570:	beq	16580 <__assert_fail@plt+0x4d0c>
   16574:	movw	r0, #0
   16578:	str	r0, [fp, #-4]
   1657c:	b	16730 <__assert_fail@plt+0x4ebc>
   16580:	ldr	r0, [fp, #-16]
   16584:	ldrh	r0, [r0, #56]	; 0x38
   16588:	cmp	r0, #9
   1658c:	bne	165a0 <__assert_fail@plt+0x4d2c>
   16590:	ldr	r0, [fp, #-16]
   16594:	ldr	r0, [r0, #8]
   16598:	str	r0, [fp, #-4]
   1659c:	b	16730 <__assert_fail@plt+0x4ebc>
   165a0:	ldr	r0, [fp, #-16]
   165a4:	ldrh	r0, [r0, #56]	; 0x38
   165a8:	cmp	r0, #1
   165ac:	beq	165bc <__assert_fail@plt+0x4d48>
   165b0:	movw	r0, #0
   165b4:	str	r0, [fp, #-4]
   165b8:	b	16730 <__assert_fail@plt+0x4ebc>
   165bc:	ldr	r0, [fp, #-8]
   165c0:	ldr	r0, [r0, #4]
   165c4:	movw	r1, #0
   165c8:	cmp	r0, r1
   165cc:	beq	165dc <__assert_fail@plt+0x4d68>
   165d0:	ldr	r0, [fp, #-8]
   165d4:	ldr	r0, [r0, #4]
   165d8:	bl	141f8 <__assert_fail@plt+0x2984>
   165dc:	ldr	r0, [fp, #-12]
   165e0:	cmp	r0, #4096	; 0x1000
   165e4:	bne	16604 <__assert_fail@plt+0x4d90>
   165e8:	ldr	r0, [fp, #-8]
   165ec:	ldr	r1, [r0, #48]	; 0x30
   165f0:	orr	r1, r1, #4096	; 0x1000
   165f4:	str	r1, [r0, #48]	; 0x30
   165f8:	movw	r0, #2
   165fc:	str	r0, [fp, #-12]
   16600:	b	1660c <__assert_fail@plt+0x4d98>
   16604:	movw	r0, #1
   16608:	str	r0, [fp, #-12]
   1660c:	ldr	r0, [fp, #-16]
   16610:	ldr	r0, [r0, #48]	; 0x30
   16614:	cmp	r0, #0
   16618:	bne	16644 <__assert_fail@plt+0x4dd0>
   1661c:	ldr	r0, [fp, #-16]
   16620:	ldr	r0, [r0, #24]
   16624:	ldrb	r0, [r0]
   16628:	cmp	r0, #47	; 0x2f
   1662c:	beq	16644 <__assert_fail@plt+0x4dd0>
   16630:	ldr	r0, [fp, #-8]
   16634:	ldr	r0, [r0, #48]	; 0x30
   16638:	and	r0, r0, #4
   1663c:	cmp	r0, #0
   16640:	beq	16660 <__assert_fail@plt+0x4dec>
   16644:	ldr	r0, [fp, #-8]
   16648:	ldr	r1, [fp, #-12]
   1664c:	bl	15374 <__assert_fail@plt+0x3b00>
   16650:	ldr	r1, [fp, #-8]
   16654:	str	r0, [r1, #4]
   16658:	str	r0, [fp, #-4]
   1665c:	b	16730 <__assert_fail@plt+0x4ebc>
   16660:	ldr	r0, [fp, #-8]
   16664:	movw	r1, #16799	; 0x419f
   16668:	movt	r1, #2
   1666c:	bl	1415c <__assert_fail@plt+0x28e8>
   16670:	str	r0, [sp, #20]
   16674:	cmp	r0, #0
   16678:	bge	16690 <__assert_fail@plt+0x4e1c>
   1667c:	ldr	r0, [fp, #-8]
   16680:	movw	r1, #0
   16684:	str	r1, [r0, #4]
   16688:	str	r1, [fp, #-4]
   1668c:	b	16730 <__assert_fail@plt+0x4ebc>
   16690:	ldr	r0, [fp, #-8]
   16694:	ldr	r1, [fp, #-12]
   16698:	bl	15374 <__assert_fail@plt+0x3b00>
   1669c:	ldr	r1, [fp, #-8]
   166a0:	str	r0, [r1, #4]
   166a4:	ldr	r0, [fp, #-8]
   166a8:	ldr	r0, [r0, #48]	; 0x30
   166ac:	and	r0, r0, #512	; 0x200
   166b0:	cmp	r0, #0
   166b4:	beq	166d0 <__assert_fail@plt+0x4e5c>
   166b8:	ldr	r0, [fp, #-8]
   166bc:	ldr	r1, [sp, #20]
   166c0:	movw	r2, #1
   166c4:	and	r2, r2, #1
   166c8:	bl	163a0 <__assert_fail@plt+0x4b2c>
   166cc:	b	16724 <__assert_fail@plt+0x4eb0>
   166d0:	ldr	r0, [sp, #20]
   166d4:	bl	117cc <fchdir@plt>
   166d8:	cmp	r0, #0
   166dc:	beq	16718 <__assert_fail@plt+0x4ea4>
   166e0:	bl	11700 <__errno_location@plt>
   166e4:	ldr	r0, [r0]
   166e8:	str	r0, [sp, #16]
   166ec:	ldr	r0, [sp, #20]
   166f0:	bl	11844 <close@plt>
   166f4:	ldr	lr, [sp, #16]
   166f8:	str	r0, [sp, #12]
   166fc:	str	lr, [sp, #8]
   16700:	bl	11700 <__errno_location@plt>
   16704:	ldr	lr, [sp, #8]
   16708:	str	lr, [r0]
   1670c:	movw	r0, #0
   16710:	str	r0, [fp, #-4]
   16714:	b	16730 <__assert_fail@plt+0x4ebc>
   16718:	ldr	r0, [sp, #20]
   1671c:	bl	11844 <close@plt>
   16720:	str	r0, [sp, #4]
   16724:	ldr	r0, [fp, #-8]
   16728:	ldr	r0, [r0, #4]
   1672c:	str	r0, [fp, #-4]
   16730:	ldr	r0, [fp, #-4]
   16734:	mov	sp, fp
   16738:	pop	{fp, pc}
   1673c:	push	{fp, lr}
   16740:	mov	fp, sp
   16744:	sub	sp, sp, #24
   16748:	str	r0, [fp, #-4]
   1674c:	str	r1, [fp, #-8]
   16750:	ldr	r0, [fp, #-4]
   16754:	str	r0, [sp, #12]
   16758:	ldr	r0, [sp, #12]
   1675c:	ldr	r1, [r0, #8]
   16760:	ldr	r0, [r0, #12]
   16764:	ldr	r2, [fp, #-8]
   16768:	mov	r3, #0
   1676c:	str	r0, [sp, #8]
   16770:	mov	r0, r1
   16774:	ldr	r1, [sp, #8]
   16778:	bl	23180 <__assert_fail@plt+0x1190c>
   1677c:	str	r0, [sp, #4]
   16780:	mov	r0, r2
   16784:	str	r1, [sp]
   16788:	mov	sp, fp
   1678c:	pop	{fp, pc}
   16790:	sub	sp, sp, #20
   16794:	str	r0, [sp, #16]
   16798:	str	r1, [sp, #12]
   1679c:	ldr	r0, [sp, #16]
   167a0:	str	r0, [sp, #8]
   167a4:	ldr	r0, [sp, #12]
   167a8:	str	r0, [sp, #4]
   167ac:	ldr	r0, [sp, #8]
   167b0:	ldr	r1, [r0, #8]
   167b4:	ldr	r0, [r0, #12]
   167b8:	ldr	r2, [sp, #4]
   167bc:	ldr	r3, [r2, #8]
   167c0:	ldr	r2, [r2, #12]
   167c4:	eor	r0, r0, r2
   167c8:	eor	r1, r1, r3
   167cc:	orr	r0, r1, r0
   167d0:	mov	r1, #0
   167d4:	cmp	r0, #0
   167d8:	str	r1, [sp]
   167dc:	bne	16814 <__assert_fail@plt+0x4fa0>
   167e0:	b	167e4 <__assert_fail@plt+0x4f70>
   167e4:	ldr	r0, [sp, #8]
   167e8:	ldr	r1, [r0]
   167ec:	ldr	r0, [r0, #4]
   167f0:	ldr	r2, [sp, #4]
   167f4:	ldr	r3, [r2]
   167f8:	ldr	r2, [r2, #4]
   167fc:	eor	r0, r0, r2
   16800:	eor	r1, r1, r3
   16804:	orr	r0, r1, r0
   16808:	clz	r0, r0
   1680c:	lsr	r0, r0, #5
   16810:	str	r0, [sp]
   16814:	ldr	r0, [sp]
   16818:	and	r0, r0, #1
   1681c:	add	sp, sp, #20
   16820:	bx	lr
   16824:	push	{fp, lr}
   16828:	mov	fp, sp
   1682c:	sub	sp, sp, #16
   16830:	str	r0, [sp, #8]
   16834:	str	r1, [sp, #4]
   16838:	ldr	r0, [sp, #8]
   1683c:	ldr	r1, [sp, #4]
   16840:	bl	16bf8 <__assert_fail@plt+0x5384>
   16844:	mov	r1, r0
   16848:	movw	lr, #19778	; 0x4d42
   1684c:	movt	lr, #65363	; 0xff53
   16850:	cmp	r0, lr
   16854:	str	r1, [sp]
   16858:	beq	168b8 <__assert_fail@plt+0x5044>
   1685c:	b	16860 <__assert_fail@plt+0x4fec>
   16860:	ldr	r0, [sp]
   16864:	cmp	r0, #0
   16868:	beq	168b0 <__assert_fail@plt+0x503c>
   1686c:	b	16870 <__assert_fail@plt+0x4ffc>
   16870:	movw	r0, #26985	; 0x6969
   16874:	ldr	r1, [sp]
   16878:	cmp	r1, r0
   1687c:	beq	168bc <__assert_fail@plt+0x5048>
   16880:	b	16884 <__assert_fail@plt+0x5010>
   16884:	movw	r0, #40864	; 0x9fa0
   16888:	ldr	r1, [sp]
   1688c:	cmp	r1, r0
   16890:	beq	168c0 <__assert_fail@plt+0x504c>
   16894:	b	16898 <__assert_fail@plt+0x5024>
   16898:	movw	r0, #16719	; 0x414f
   1689c:	movt	r0, #21318	; 0x5346
   168a0:	ldr	r1, [sp]
   168a4:	cmp	r1, r0
   168a8:	beq	168b4 <__assert_fail@plt+0x5040>
   168ac:	b	168cc <__assert_fail@plt+0x5058>
   168b0:	b	168b4 <__assert_fail@plt+0x5040>
   168b4:	b	168b8 <__assert_fail@plt+0x5044>
   168b8:	b	168bc <__assert_fail@plt+0x5048>
   168bc:	b	168c0 <__assert_fail@plt+0x504c>
   168c0:	movw	r0, #0
   168c4:	str	r0, [fp, #-4]
   168c8:	b	168d4 <__assert_fail@plt+0x5060>
   168cc:	movw	r0, #1
   168d0:	str	r0, [fp, #-4]
   168d4:	ldr	r0, [fp, #-4]
   168d8:	mov	sp, fp
   168dc:	pop	{fp, pc}
   168e0:	sub	sp, sp, #16
   168e4:	str	r0, [sp, #12]
   168e8:	str	r1, [sp, #8]
   168ec:	ldr	r0, [sp, #8]
   168f0:	sub	r0, r0, #1
   168f4:	cmp	r0, #11
   168f8:	str	r0, [sp]
   168fc:	bhi	16994 <__assert_fail@plt+0x5120>
   16900:	add	r0, pc, #8
   16904:	ldr	r1, [sp]
   16908:	ldr	r0, [r0, r1, lsl #2]
   1690c:	mov	pc, r0
   16910:	andeq	r6, r1, r4, ror #18
   16914:	andeq	r6, r1, ip, asr #18
   16918:	muleq	r1, r4, r9
   1691c:	andeq	r6, r1, r8, asr r9
   16920:	muleq	r1, r4, r9
   16924:	andeq	r6, r1, r0, asr #18
   16928:	muleq	r1, r4, r9
   1692c:	andeq	r6, r1, ip, ror r9
   16930:	muleq	r1, r4, r9
   16934:	andeq	r6, r1, r0, ror r9
   16938:	muleq	r1, r4, r9
   1693c:	andeq	r6, r1, r8, lsl #19
   16940:	movw	r0, #24576	; 0x6000
   16944:	str	r0, [sp, #4]
   16948:	b	1699c <__assert_fail@plt+0x5128>
   1694c:	movw	r0, #8192	; 0x2000
   16950:	str	r0, [sp, #4]
   16954:	b	1699c <__assert_fail@plt+0x5128>
   16958:	movw	r0, #16384	; 0x4000
   1695c:	str	r0, [sp, #4]
   16960:	b	1699c <__assert_fail@plt+0x5128>
   16964:	movw	r0, #4096	; 0x1000
   16968:	str	r0, [sp, #4]
   1696c:	b	1699c <__assert_fail@plt+0x5128>
   16970:	movw	r0, #40960	; 0xa000
   16974:	str	r0, [sp, #4]
   16978:	b	1699c <__assert_fail@plt+0x5128>
   1697c:	movw	r0, #32768	; 0x8000
   16980:	str	r0, [sp, #4]
   16984:	b	1699c <__assert_fail@plt+0x5128>
   16988:	movw	r0, #49152	; 0xc000
   1698c:	str	r0, [sp, #4]
   16990:	b	1699c <__assert_fail@plt+0x5128>
   16994:	movw	r0, #0
   16998:	str	r0, [sp, #4]
   1699c:	ldr	r0, [sp, #4]
   169a0:	ldr	r1, [sp, #12]
   169a4:	str	r0, [r1, #16]
   169a8:	add	sp, sp, #16
   169ac:	bx	lr
   169b0:	push	{fp, lr}
   169b4:	mov	fp, sp
   169b8:	sub	sp, sp, #16
   169bc:	str	r0, [sp, #8]
   169c0:	str	r1, [sp, #4]
   169c4:	ldr	r0, [sp, #8]
   169c8:	ldr	r1, [sp, #4]
   169cc:	bl	16bf8 <__assert_fail@plt+0x5384>
   169d0:	mov	r1, r0
   169d4:	movw	lr, #19778	; 0x4d42
   169d8:	movt	lr, #65363	; 0xff53
   169dc:	cmp	r0, lr
   169e0:	str	r1, [sp]
   169e4:	beq	16a18 <__assert_fail@plt+0x51a4>
   169e8:	b	169ec <__assert_fail@plt+0x5178>
   169ec:	movw	r0, #26985	; 0x6969
   169f0:	ldr	r1, [sp]
   169f4:	cmp	r1, r0
   169f8:	beq	16a18 <__assert_fail@plt+0x51a4>
   169fc:	b	16a00 <__assert_fail@plt+0x518c>
   16a00:	movw	r0, #6548	; 0x1994
   16a04:	movt	r0, #258	; 0x102
   16a08:	ldr	r1, [sp]
   16a0c:	cmp	r1, r0
   16a10:	bne	16a28 <__assert_fail@plt+0x51b4>
   16a14:	b	16a18 <__assert_fail@plt+0x51a4>
   16a18:	movw	r0, #0
   16a1c:	and	r0, r0, #1
   16a20:	strb	r0, [fp, #-1]
   16a24:	b	16a34 <__assert_fail@plt+0x51c0>
   16a28:	movw	r0, #1
   16a2c:	and	r0, r0, #1
   16a30:	strb	r0, [fp, #-1]
   16a34:	ldrb	r0, [fp, #-1]
   16a38:	and	r0, r0, #1
   16a3c:	mov	sp, fp
   16a40:	pop	{fp, pc}
   16a44:	sub	sp, sp, #20
   16a48:	str	r0, [sp, #16]
   16a4c:	str	r1, [sp, #12]
   16a50:	ldr	r0, [sp, #16]
   16a54:	ldr	r0, [r0, #24]
   16a58:	str	r0, [sp, #4]
   16a5c:	ldr	r0, [sp, #16]
   16a60:	ldr	r0, [r0, #4]
   16a64:	str	r0, [sp, #8]
   16a68:	ldr	r0, [sp, #8]
   16a6c:	movw	r1, #0
   16a70:	cmp	r0, r1
   16a74:	beq	16ad8 <__assert_fail@plt+0x5264>
   16a78:	b	16a7c <__assert_fail@plt+0x5208>
   16a7c:	ldr	r0, [sp, #8]
   16a80:	ldr	r0, [r0, #24]
   16a84:	ldr	r1, [sp, #8]
   16a88:	add	r1, r1, #168	; 0xa8
   16a8c:	cmp	r0, r1
   16a90:	beq	16ab8 <__assert_fail@plt+0x5244>
   16a94:	ldr	r0, [sp, #4]
   16a98:	ldr	r1, [sp, #8]
   16a9c:	ldr	r1, [r1, #24]
   16aa0:	ldr	r2, [sp, #8]
   16aa4:	ldr	r2, [r2, #28]
   16aa8:	sub	r1, r1, r2
   16aac:	add	r0, r0, r1
   16ab0:	ldr	r1, [sp, #8]
   16ab4:	str	r0, [r1, #24]
   16ab8:	ldr	r0, [sp, #4]
   16abc:	ldr	r1, [sp, #8]
   16ac0:	str	r0, [r1, #28]
   16ac4:	b	16ac8 <__assert_fail@plt+0x5254>
   16ac8:	ldr	r0, [sp, #8]
   16acc:	ldr	r0, [r0, #8]
   16ad0:	str	r0, [sp, #8]
   16ad4:	b	16a68 <__assert_fail@plt+0x51f4>
   16ad8:	ldr	r0, [sp, #12]
   16adc:	str	r0, [sp, #8]
   16ae0:	ldr	r0, [sp, #8]
   16ae4:	ldr	r0, [r0, #48]	; 0x30
   16ae8:	cmp	r0, #0
   16aec:	blt	16b78 <__assert_fail@plt+0x5304>
   16af0:	b	16af4 <__assert_fail@plt+0x5280>
   16af4:	ldr	r0, [sp, #8]
   16af8:	ldr	r0, [r0, #24]
   16afc:	ldr	r1, [sp, #8]
   16b00:	add	r1, r1, #168	; 0xa8
   16b04:	cmp	r0, r1
   16b08:	beq	16b30 <__assert_fail@plt+0x52bc>
   16b0c:	ldr	r0, [sp, #4]
   16b10:	ldr	r1, [sp, #8]
   16b14:	ldr	r1, [r1, #24]
   16b18:	ldr	r2, [sp, #8]
   16b1c:	ldr	r2, [r2, #28]
   16b20:	sub	r1, r1, r2
   16b24:	add	r0, r0, r1
   16b28:	ldr	r1, [sp, #8]
   16b2c:	str	r0, [r1, #24]
   16b30:	ldr	r0, [sp, #4]
   16b34:	ldr	r1, [sp, #8]
   16b38:	str	r0, [r1, #28]
   16b3c:	ldr	r0, [sp, #8]
   16b40:	ldr	r0, [r0, #8]
   16b44:	movw	r1, #0
   16b48:	cmp	r0, r1
   16b4c:	beq	16b60 <__assert_fail@plt+0x52ec>
   16b50:	ldr	r0, [sp, #8]
   16b54:	ldr	r0, [r0, #8]
   16b58:	str	r0, [sp]
   16b5c:	b	16b6c <__assert_fail@plt+0x52f8>
   16b60:	ldr	r0, [sp, #8]
   16b64:	ldr	r0, [r0, #4]
   16b68:	str	r0, [sp]
   16b6c:	ldr	r0, [sp]
   16b70:	str	r0, [sp, #8]
   16b74:	b	16ae0 <__assert_fail@plt+0x526c>
   16b78:	add	sp, sp, #20
   16b7c:	bx	lr
   16b80:	push	{r4, r5, fp, lr}
   16b84:	add	fp, sp, #8
   16b88:	sub	sp, sp, #24
   16b8c:	str	r0, [fp, #-12]
   16b90:	str	r1, [sp, #16]
   16b94:	ldr	r0, [fp, #-12]
   16b98:	ldr	r0, [r0]
   16b9c:	ldr	r1, [r0, #160]	; 0xa0
   16ba0:	ldr	r0, [r0, #164]	; 0xa4
   16ba4:	ldr	r2, [sp, #16]
   16ba8:	ldr	r2, [r2]
   16bac:	ldr	r3, [r2, #160]	; 0xa0
   16bb0:	ldr	r2, [r2, #164]	; 0xa4
   16bb4:	subs	ip, r3, r1
   16bb8:	sbcs	lr, r2, r0
   16bbc:	mov	r4, #0
   16bc0:	mov	r5, r4
   16bc4:	movwcc	r5, #1
   16bc8:	subs	r1, r1, r3
   16bcc:	sbcs	r0, r0, r2
   16bd0:	movwcc	r4, #1
   16bd4:	and	r2, r4, #1
   16bd8:	sub	r2, r5, r2
   16bdc:	str	r0, [sp, #12]
   16be0:	mov	r0, r2
   16be4:	str	ip, [sp, #8]
   16be8:	str	r1, [sp, #4]
   16bec:	str	lr, [sp]
   16bf0:	sub	sp, fp, #8
   16bf4:	pop	{r4, r5, fp, pc}
   16bf8:	push	{fp, lr}
   16bfc:	mov	fp, sp
   16c00:	sub	sp, sp, #136	; 0x88
   16c04:	str	r0, [fp, #-8]
   16c08:	str	r1, [fp, #-12]
   16c0c:	ldr	r0, [fp, #-8]
   16c10:	ldr	r0, [r0, #44]	; 0x2c
   16c14:	str	r0, [fp, #-16]
   16c18:	ldr	r0, [fp, #-16]
   16c1c:	ldr	r0, [r0, #52]	; 0x34
   16c20:	str	r0, [fp, #-20]	; 0xffffffec
   16c24:	ldr	r0, [fp, #-16]
   16c28:	ldr	r0, [r0, #48]	; 0x30
   16c2c:	and	r0, r0, #512	; 0x200
   16c30:	cmp	r0, #0
   16c34:	bne	16c44 <__assert_fail@plt+0x53d0>
   16c38:	movw	r0, #0
   16c3c:	str	r0, [fp, #-4]
   16c40:	b	16db4 <__assert_fail@plt+0x5540>
   16c44:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c48:	movw	r1, #0
   16c4c:	cmp	r0, r1
   16c50:	bne	16c88 <__assert_fail@plt+0x5414>
   16c54:	movw	r0, #13
   16c58:	movw	r1, #0
   16c5c:	movw	r2, #28096	; 0x6dc0
   16c60:	movt	r2, #1
   16c64:	movw	r3, #28184	; 0x6e18
   16c68:	movt	r3, #1
   16c6c:	movw	ip, #2488	; 0x9b8
   16c70:	movt	ip, #2
   16c74:	str	ip, [sp]
   16c78:	bl	176d4 <__assert_fail@plt+0x5e60>
   16c7c:	ldr	r1, [fp, #-16]
   16c80:	str	r0, [r1, #52]	; 0x34
   16c84:	str	r0, [fp, #-20]	; 0xffffffec
   16c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c8c:	movw	r1, #0
   16c90:	cmp	r0, r1
   16c94:	beq	16ce0 <__assert_fail@plt+0x546c>
   16c98:	ldr	r0, [fp, #-8]
   16c9c:	ldr	r1, [r0, #64]	; 0x40
   16ca0:	ldr	r0, [r0, #68]	; 0x44
   16ca4:	str	r0, [sp, #12]
   16ca8:	str	r1, [sp, #8]
   16cac:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cb0:	add	r1, sp, #8
   16cb4:	bl	171b8 <__assert_fail@plt+0x5944>
   16cb8:	str	r0, [fp, #-24]	; 0xffffffe8
   16cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cc0:	movw	r1, #0
   16cc4:	cmp	r0, r1
   16cc8:	beq	16cdc <__assert_fail@plt+0x5468>
   16ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd0:	ldr	r0, [r0, #8]
   16cd4:	str	r0, [fp, #-4]
   16cd8:	b	16db4 <__assert_fail@plt+0x5540>
   16cdc:	b	16ce0 <__assert_fail@plt+0x546c>
   16ce0:	ldr	r0, [fp, #-12]
   16ce4:	cmp	r0, #0
   16ce8:	blt	16d00 <__assert_fail@plt+0x548c>
   16cec:	ldr	r0, [fp, #-12]
   16cf0:	add	r1, sp, #24
   16cf4:	bl	1149c <fstatfs64@plt>
   16cf8:	cmp	r0, #0
   16cfc:	beq	16d0c <__assert_fail@plt+0x5498>
   16d00:	movw	r0, #0
   16d04:	str	r0, [fp, #-4]
   16d08:	b	16db4 <__assert_fail@plt+0x5540>
   16d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d10:	movw	r1, #0
   16d14:	cmp	r0, r1
   16d18:	beq	16dac <__assert_fail@plt+0x5538>
   16d1c:	movw	r0, #16
   16d20:	bl	1faac <__assert_fail@plt+0xe238>
   16d24:	str	r0, [sp, #4]
   16d28:	ldr	r0, [sp, #4]
   16d2c:	movw	lr, #0
   16d30:	cmp	r0, lr
   16d34:	beq	16da8 <__assert_fail@plt+0x5534>
   16d38:	ldr	r0, [fp, #-8]
   16d3c:	ldr	r1, [r0, #64]	; 0x40
   16d40:	ldr	r0, [r0, #68]	; 0x44
   16d44:	ldr	r2, [sp, #4]
   16d48:	str	r0, [r2, #4]
   16d4c:	str	r1, [r2]
   16d50:	ldr	r0, [sp, #24]
   16d54:	ldr	r1, [sp, #4]
   16d58:	str	r0, [r1, #8]
   16d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d60:	ldr	r1, [sp, #4]
   16d64:	bl	18700 <__assert_fail@plt+0x6e8c>
   16d68:	str	r0, [fp, #-24]	; 0xffffffe8
   16d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d70:	movw	r1, #0
   16d74:	cmp	r0, r1
   16d78:	beq	16d9c <__assert_fail@plt+0x5528>
   16d7c:	b	16d80 <__assert_fail@plt+0x550c>
   16d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d84:	ldr	r1, [sp, #4]
   16d88:	cmp	r0, r1
   16d8c:	beq	16d94 <__assert_fail@plt+0x5520>
   16d90:	bl	11838 <abort@plt>
   16d94:	b	16d98 <__assert_fail@plt+0x5524>
   16d98:	b	16da4 <__assert_fail@plt+0x5530>
   16d9c:	ldr	r0, [sp, #4]
   16da0:	bl	209b8 <__assert_fail@plt+0xf144>
   16da4:	b	16da8 <__assert_fail@plt+0x5534>
   16da8:	b	16dac <__assert_fail@plt+0x5538>
   16dac:	ldr	r0, [sp, #24]
   16db0:	str	r0, [fp, #-4]
   16db4:	ldr	r0, [fp, #-4]
   16db8:	mov	sp, fp
   16dbc:	pop	{fp, pc}
   16dc0:	push	{fp, lr}
   16dc4:	mov	fp, sp
   16dc8:	sub	sp, sp, #32
   16dcc:	str	r0, [fp, #-4]
   16dd0:	str	r1, [fp, #-8]
   16dd4:	ldr	r0, [fp, #-4]
   16dd8:	str	r0, [fp, #-12]
   16ddc:	ldr	r0, [fp, #-12]
   16de0:	ldr	r1, [r0]
   16de4:	ldr	r0, [r0, #4]
   16de8:	str	r0, [sp, #12]
   16dec:	str	r1, [sp, #8]
   16df0:	ldr	r0, [sp, #8]
   16df4:	ldr	r1, [sp, #12]
   16df8:	ldr	r2, [fp, #-8]
   16dfc:	mov	r3, #0
   16e00:	bl	23180 <__assert_fail@plt+0x1190c>
   16e04:	str	r0, [sp, #4]
   16e08:	mov	r0, r2
   16e0c:	str	r1, [sp]
   16e10:	mov	sp, fp
   16e14:	pop	{fp, pc}
   16e18:	sub	sp, sp, #16
   16e1c:	str	r0, [sp, #12]
   16e20:	str	r1, [sp, #8]
   16e24:	ldr	r0, [sp, #12]
   16e28:	str	r0, [sp, #4]
   16e2c:	ldr	r0, [sp, #8]
   16e30:	str	r0, [sp]
   16e34:	ldr	r0, [sp, #4]
   16e38:	ldr	r1, [r0]
   16e3c:	ldr	r0, [r0, #4]
   16e40:	ldr	r2, [sp]
   16e44:	ldr	r3, [r2]
   16e48:	ldr	r2, [r2, #4]
   16e4c:	eor	r0, r0, r2
   16e50:	eor	r1, r1, r3
   16e54:	orr	r0, r1, r0
   16e58:	clz	r0, r0
   16e5c:	lsr	r0, r0, #5
   16e60:	and	r0, r0, #1
   16e64:	add	sp, sp, #16
   16e68:	bx	lr
   16e6c:	push	{fp, lr}
   16e70:	mov	fp, sp
   16e74:	sub	sp, sp, #24
   16e78:	str	r0, [fp, #-4]
   16e7c:	str	r1, [fp, #-8]
   16e80:	ldr	r0, [fp, #-4]
   16e84:	str	r0, [sp, #12]
   16e88:	ldr	r0, [fp, #-8]
   16e8c:	str	r0, [sp, #8]
   16e90:	ldr	r0, [sp, #12]
   16e94:	ldr	r0, [r0]
   16e98:	ldr	r0, [r0, #44]	; 0x2c
   16e9c:	ldr	r0, [r0, #44]	; 0x2c
   16ea0:	ldr	r1, [sp, #12]
   16ea4:	ldr	r2, [sp, #8]
   16ea8:	str	r0, [sp, #4]
   16eac:	mov	r0, r1
   16eb0:	mov	r1, r2
   16eb4:	ldr	r2, [sp, #4]
   16eb8:	blx	r2
   16ebc:	mov	sp, fp
   16ec0:	pop	{fp, pc}
   16ec4:	andeq	r0, r0, r0
   16ec8:	sub	sp, sp, #4
   16ecc:	str	r0, [sp]
   16ed0:	ldr	r0, [sp]
   16ed4:	ldr	r0, [r0, #8]
   16ed8:	add	sp, sp, #4
   16edc:	bx	lr
   16ee0:	sub	sp, sp, #4
   16ee4:	str	r0, [sp]
   16ee8:	ldr	r0, [sp]
   16eec:	ldr	r0, [r0, #12]
   16ef0:	add	sp, sp, #4
   16ef4:	bx	lr
   16ef8:	sub	sp, sp, #4
   16efc:	str	r0, [sp]
   16f00:	ldr	r0, [sp]
   16f04:	ldr	r0, [r0, #16]
   16f08:	add	sp, sp, #4
   16f0c:	bx	lr
   16f10:	sub	sp, sp, #20
   16f14:	str	r0, [sp, #16]
   16f18:	movw	r0, #0
   16f1c:	str	r0, [sp, #8]
   16f20:	ldr	r0, [sp, #16]
   16f24:	ldr	r0, [r0]
   16f28:	str	r0, [sp, #12]
   16f2c:	ldr	r0, [sp, #12]
   16f30:	ldr	r1, [sp, #16]
   16f34:	ldr	r1, [r1, #4]
   16f38:	cmp	r0, r1
   16f3c:	bcs	16fc0 <__assert_fail@plt+0x574c>
   16f40:	ldr	r0, [sp, #12]
   16f44:	ldr	r0, [r0]
   16f48:	movw	r1, #0
   16f4c:	cmp	r0, r1
   16f50:	beq	16fac <__assert_fail@plt+0x5738>
   16f54:	ldr	r0, [sp, #12]
   16f58:	str	r0, [sp, #4]
   16f5c:	movw	r0, #1
   16f60:	str	r0, [sp]
   16f64:	ldr	r0, [sp, #4]
   16f68:	ldr	r0, [r0, #4]
   16f6c:	str	r0, [sp, #4]
   16f70:	ldr	r0, [sp, #4]
   16f74:	movw	r1, #0
   16f78:	cmp	r0, r1
   16f7c:	beq	16f90 <__assert_fail@plt+0x571c>
   16f80:	ldr	r0, [sp]
   16f84:	add	r0, r0, #1
   16f88:	str	r0, [sp]
   16f8c:	b	16f64 <__assert_fail@plt+0x56f0>
   16f90:	ldr	r0, [sp]
   16f94:	ldr	r1, [sp, #8]
   16f98:	cmp	r0, r1
   16f9c:	bls	16fa8 <__assert_fail@plt+0x5734>
   16fa0:	ldr	r0, [sp]
   16fa4:	str	r0, [sp, #8]
   16fa8:	b	16fac <__assert_fail@plt+0x5738>
   16fac:	b	16fb0 <__assert_fail@plt+0x573c>
   16fb0:	ldr	r0, [sp, #12]
   16fb4:	add	r0, r0, #8
   16fb8:	str	r0, [sp, #12]
   16fbc:	b	16f2c <__assert_fail@plt+0x56b8>
   16fc0:	ldr	r0, [sp, #8]
   16fc4:	add	sp, sp, #20
   16fc8:	bx	lr
   16fcc:	sub	sp, sp, #24
   16fd0:	str	r0, [sp, #16]
   16fd4:	movw	r0, #0
   16fd8:	str	r0, [sp, #8]
   16fdc:	str	r0, [sp, #4]
   16fe0:	ldr	r0, [sp, #16]
   16fe4:	ldr	r0, [r0]
   16fe8:	str	r0, [sp, #12]
   16fec:	ldr	r0, [sp, #12]
   16ff0:	ldr	r1, [sp, #16]
   16ff4:	ldr	r1, [r1, #4]
   16ff8:	cmp	r0, r1
   16ffc:	bcs	17078 <__assert_fail@plt+0x5804>
   17000:	ldr	r0, [sp, #12]
   17004:	ldr	r0, [r0]
   17008:	movw	r1, #0
   1700c:	cmp	r0, r1
   17010:	beq	17064 <__assert_fail@plt+0x57f0>
   17014:	ldr	r0, [sp, #12]
   17018:	str	r0, [sp]
   1701c:	ldr	r0, [sp, #8]
   17020:	add	r0, r0, #1
   17024:	str	r0, [sp, #8]
   17028:	ldr	r0, [sp, #4]
   1702c:	add	r0, r0, #1
   17030:	str	r0, [sp, #4]
   17034:	ldr	r0, [sp]
   17038:	ldr	r0, [r0, #4]
   1703c:	str	r0, [sp]
   17040:	ldr	r0, [sp]
   17044:	movw	r1, #0
   17048:	cmp	r0, r1
   1704c:	beq	17060 <__assert_fail@plt+0x57ec>
   17050:	ldr	r0, [sp, #4]
   17054:	add	r0, r0, #1
   17058:	str	r0, [sp, #4]
   1705c:	b	17034 <__assert_fail@plt+0x57c0>
   17060:	b	17064 <__assert_fail@plt+0x57f0>
   17064:	b	17068 <__assert_fail@plt+0x57f4>
   17068:	ldr	r0, [sp, #12]
   1706c:	add	r0, r0, #8
   17070:	str	r0, [sp, #12]
   17074:	b	16fec <__assert_fail@plt+0x5778>
   17078:	ldr	r0, [sp, #8]
   1707c:	ldr	r1, [sp, #16]
   17080:	ldr	r1, [r1, #12]
   17084:	cmp	r0, r1
   17088:	bne	170b0 <__assert_fail@plt+0x583c>
   1708c:	ldr	r0, [sp, #4]
   17090:	ldr	r1, [sp, #16]
   17094:	ldr	r1, [r1, #16]
   17098:	cmp	r0, r1
   1709c:	bne	170b0 <__assert_fail@plt+0x583c>
   170a0:	movw	r0, #1
   170a4:	and	r0, r0, #1
   170a8:	strb	r0, [sp, #23]
   170ac:	b	170bc <__assert_fail@plt+0x5848>
   170b0:	movw	r0, #0
   170b4:	and	r0, r0, #1
   170b8:	strb	r0, [sp, #23]
   170bc:	ldrb	r0, [sp, #23]
   170c0:	and	r0, r0, #1
   170c4:	add	sp, sp, #24
   170c8:	bx	lr
   170cc:	nop	{0}
   170d0:	push	{fp, lr}
   170d4:	mov	fp, sp
   170d8:	sub	sp, sp, #48	; 0x30
   170dc:	str	r0, [fp, #-4]
   170e0:	str	r1, [fp, #-8]
   170e4:	ldr	r0, [fp, #-4]
   170e8:	bl	16ef8 <__assert_fail@plt+0x5684>
   170ec:	str	r0, [fp, #-12]
   170f0:	ldr	r0, [fp, #-4]
   170f4:	bl	16ec8 <__assert_fail@plt+0x5654>
   170f8:	str	r0, [fp, #-16]
   170fc:	ldr	r0, [fp, #-4]
   17100:	bl	16ee0 <__assert_fail@plt+0x566c>
   17104:	str	r0, [fp, #-20]	; 0xffffffec
   17108:	ldr	r0, [fp, #-4]
   1710c:	bl	16f10 <__assert_fail@plt+0x569c>
   17110:	str	r0, [sp, #24]
   17114:	ldr	r0, [fp, #-8]
   17118:	ldr	r2, [fp, #-12]
   1711c:	movw	r1, #16801	; 0x41a1
   17120:	movt	r1, #2
   17124:	bl	116f4 <fprintf@plt>
   17128:	ldr	r1, [fp, #-8]
   1712c:	ldr	r2, [fp, #-16]
   17130:	str	r0, [sp, #20]
   17134:	mov	r0, r1
   17138:	movw	r1, #16825	; 0x41b9
   1713c:	movt	r1, #2
   17140:	bl	116f4 <fprintf@plt>
   17144:	vldr	d16, [pc, #100]	; 171b0 <__assert_fail@plt+0x593c>
   17148:	ldr	r1, [fp, #-8]
   1714c:	ldr	r2, [fp, #-20]	; 0xffffffec
   17150:	ldr	lr, [fp, #-20]	; 0xffffffec
   17154:	vmov	s0, lr
   17158:	vcvt.f64.u32	d17, s0
   1715c:	vmul.f64	d16, d16, d17
   17160:	ldr	lr, [fp, #-16]
   17164:	vmov	s0, lr
   17168:	vcvt.f64.u32	d17, s0
   1716c:	vdiv.f64	d16, d16, d17
   17170:	str	r0, [sp, #16]
   17174:	mov	r0, r1
   17178:	movw	r1, #16849	; 0x41d1
   1717c:	movt	r1, #2
   17180:	vstr	d16, [sp]
   17184:	bl	116f4 <fprintf@plt>
   17188:	ldr	r1, [fp, #-8]
   1718c:	ldr	r2, [sp, #24]
   17190:	str	r0, [sp, #12]
   17194:	mov	r0, r1
   17198:	movw	r1, #16882	; 0x41f2
   1719c:	movt	r1, #2
   171a0:	bl	116f4 <fprintf@plt>
   171a4:	str	r0, [sp, #8]
   171a8:	mov	sp, fp
   171ac:	pop	{fp, pc}
   171b0:	andeq	r0, r0, r0
   171b4:	subsmi	r0, r9, r0
   171b8:	push	{fp, lr}
   171bc:	mov	fp, sp
   171c0:	sub	sp, sp, #24
   171c4:	str	r0, [fp, #-8]
   171c8:	str	r1, [sp, #12]
   171cc:	ldr	r0, [fp, #-8]
   171d0:	ldr	r1, [sp, #12]
   171d4:	bl	17290 <__assert_fail@plt+0x5a1c>
   171d8:	str	r0, [sp, #8]
   171dc:	ldr	r0, [sp, #8]
   171e0:	ldr	r0, [r0]
   171e4:	movw	r1, #0
   171e8:	cmp	r0, r1
   171ec:	bne	171fc <__assert_fail@plt+0x5988>
   171f0:	movw	r0, #0
   171f4:	str	r0, [fp, #-4]
   171f8:	b	17284 <__assert_fail@plt+0x5a10>
   171fc:	ldr	r0, [sp, #8]
   17200:	str	r0, [sp, #4]
   17204:	ldr	r0, [sp, #4]
   17208:	movw	r1, #0
   1720c:	cmp	r0, r1
   17210:	beq	1727c <__assert_fail@plt+0x5a08>
   17214:	ldr	r0, [sp, #12]
   17218:	ldr	r1, [sp, #4]
   1721c:	ldr	r1, [r1]
   17220:	cmp	r0, r1
   17224:	beq	17258 <__assert_fail@plt+0x59e4>
   17228:	ldr	r0, [fp, #-8]
   1722c:	ldr	r0, [r0, #28]
   17230:	ldr	r1, [sp, #12]
   17234:	ldr	r2, [sp, #4]
   17238:	ldr	r2, [r2]
   1723c:	str	r0, [sp]
   17240:	mov	r0, r1
   17244:	mov	r1, r2
   17248:	ldr	r2, [sp]
   1724c:	blx	r2
   17250:	tst	r0, #1
   17254:	beq	17268 <__assert_fail@plt+0x59f4>
   17258:	ldr	r0, [sp, #4]
   1725c:	ldr	r0, [r0]
   17260:	str	r0, [fp, #-4]
   17264:	b	17284 <__assert_fail@plt+0x5a10>
   17268:	b	1726c <__assert_fail@plt+0x59f8>
   1726c:	ldr	r0, [sp, #4]
   17270:	ldr	r0, [r0, #4]
   17274:	str	r0, [sp, #4]
   17278:	b	17204 <__assert_fail@plt+0x5990>
   1727c:	movw	r0, #0
   17280:	str	r0, [fp, #-4]
   17284:	ldr	r0, [fp, #-4]
   17288:	mov	sp, fp
   1728c:	pop	{fp, pc}
   17290:	push	{fp, lr}
   17294:	mov	fp, sp
   17298:	sub	sp, sp, #16
   1729c:	str	r0, [fp, #-4]
   172a0:	str	r1, [sp, #8]
   172a4:	ldr	r0, [fp, #-4]
   172a8:	ldr	r0, [r0, #24]
   172ac:	ldr	r1, [sp, #8]
   172b0:	ldr	r2, [fp, #-4]
   172b4:	ldr	r2, [r2, #8]
   172b8:	str	r0, [sp]
   172bc:	mov	r0, r1
   172c0:	mov	r1, r2
   172c4:	ldr	r2, [sp]
   172c8:	blx	r2
   172cc:	str	r0, [sp, #4]
   172d0:	ldr	r0, [sp, #4]
   172d4:	ldr	r1, [fp, #-4]
   172d8:	ldr	r1, [r1, #8]
   172dc:	cmp	r0, r1
   172e0:	bcc	172e8 <__assert_fail@plt+0x5a74>
   172e4:	bl	11838 <abort@plt>
   172e8:	ldr	r0, [fp, #-4]
   172ec:	ldr	r0, [r0]
   172f0:	ldr	r1, [sp, #4]
   172f4:	add	r0, r0, r1, lsl #3
   172f8:	mov	sp, fp
   172fc:	pop	{fp, pc}
   17300:	push	{fp, lr}
   17304:	mov	fp, sp
   17308:	sub	sp, sp, #16
   1730c:	str	r0, [sp, #8]
   17310:	ldr	r0, [sp, #8]
   17314:	ldr	r0, [r0, #16]
   17318:	cmp	r0, #0
   1731c:	bne	1732c <__assert_fail@plt+0x5ab8>
   17320:	movw	r0, #0
   17324:	str	r0, [fp, #-4]
   17328:	b	1738c <__assert_fail@plt+0x5b18>
   1732c:	ldr	r0, [sp, #8]
   17330:	ldr	r0, [r0]
   17334:	str	r0, [sp, #4]
   17338:	ldr	r0, [sp, #4]
   1733c:	ldr	r1, [sp, #8]
   17340:	ldr	r1, [r1, #4]
   17344:	cmp	r0, r1
   17348:	bcc	17350 <__assert_fail@plt+0x5adc>
   1734c:	bl	11838 <abort@plt>
   17350:	ldr	r0, [sp, #4]
   17354:	ldr	r0, [r0]
   17358:	movw	r1, #0
   1735c:	cmp	r0, r1
   17360:	beq	17374 <__assert_fail@plt+0x5b00>
   17364:	ldr	r0, [sp, #4]
   17368:	ldr	r0, [r0]
   1736c:	str	r0, [fp, #-4]
   17370:	b	1738c <__assert_fail@plt+0x5b18>
   17374:	b	17378 <__assert_fail@plt+0x5b04>
   17378:	b	1737c <__assert_fail@plt+0x5b08>
   1737c:	ldr	r0, [sp, #4]
   17380:	add	r0, r0, #8
   17384:	str	r0, [sp, #4]
   17388:	b	17338 <__assert_fail@plt+0x5ac4>
   1738c:	ldr	r0, [fp, #-4]
   17390:	mov	sp, fp
   17394:	pop	{fp, pc}
   17398:	push	{fp, lr}
   1739c:	mov	fp, sp
   173a0:	sub	sp, sp, #24
   173a4:	str	r0, [fp, #-8]
   173a8:	str	r1, [sp, #12]
   173ac:	ldr	r0, [fp, #-8]
   173b0:	ldr	r1, [sp, #12]
   173b4:	bl	17290 <__assert_fail@plt+0x5a1c>
   173b8:	str	r0, [sp, #8]
   173bc:	ldr	r0, [sp, #8]
   173c0:	str	r0, [sp, #4]
   173c4:	ldr	r0, [sp, #4]
   173c8:	ldr	r0, [r0]
   173cc:	ldr	r1, [sp, #12]
   173d0:	cmp	r0, r1
   173d4:	bne	17400 <__assert_fail@plt+0x5b8c>
   173d8:	ldr	r0, [sp, #4]
   173dc:	ldr	r0, [r0, #4]
   173e0:	movw	r1, #0
   173e4:	cmp	r0, r1
   173e8:	beq	17400 <__assert_fail@plt+0x5b8c>
   173ec:	ldr	r0, [sp, #4]
   173f0:	ldr	r0, [r0, #4]
   173f4:	ldr	r0, [r0]
   173f8:	str	r0, [fp, #-4]
   173fc:	b	1746c <__assert_fail@plt+0x5bf8>
   17400:	ldr	r0, [sp, #4]
   17404:	ldr	r0, [r0, #4]
   17408:	str	r0, [sp, #4]
   1740c:	ldr	r0, [sp, #4]
   17410:	movw	r1, #0
   17414:	cmp	r0, r1
   17418:	bne	173c4 <__assert_fail@plt+0x5b50>
   1741c:	b	17420 <__assert_fail@plt+0x5bac>
   17420:	ldr	r0, [sp, #8]
   17424:	add	r0, r0, #8
   17428:	str	r0, [sp, #8]
   1742c:	ldr	r1, [fp, #-8]
   17430:	ldr	r1, [r1, #4]
   17434:	cmp	r0, r1
   17438:	bcs	17464 <__assert_fail@plt+0x5bf0>
   1743c:	ldr	r0, [sp, #8]
   17440:	ldr	r0, [r0]
   17444:	movw	r1, #0
   17448:	cmp	r0, r1
   1744c:	beq	17460 <__assert_fail@plt+0x5bec>
   17450:	ldr	r0, [sp, #8]
   17454:	ldr	r0, [r0]
   17458:	str	r0, [fp, #-4]
   1745c:	b	1746c <__assert_fail@plt+0x5bf8>
   17460:	b	17420 <__assert_fail@plt+0x5bac>
   17464:	movw	r0, #0
   17468:	str	r0, [fp, #-4]
   1746c:	ldr	r0, [fp, #-4]
   17470:	mov	sp, fp
   17474:	pop	{fp, pc}
   17478:	sub	sp, sp, #28
   1747c:	str	r0, [sp, #20]
   17480:	str	r1, [sp, #16]
   17484:	str	r2, [sp, #12]
   17488:	movw	r0, #0
   1748c:	str	r0, [sp, #8]
   17490:	ldr	r0, [sp, #20]
   17494:	ldr	r0, [r0]
   17498:	str	r0, [sp, #4]
   1749c:	ldr	r0, [sp, #4]
   174a0:	ldr	r1, [sp, #20]
   174a4:	ldr	r1, [r1, #4]
   174a8:	cmp	r0, r1
   174ac:	bcs	17540 <__assert_fail@plt+0x5ccc>
   174b0:	ldr	r0, [sp, #4]
   174b4:	ldr	r0, [r0]
   174b8:	movw	r1, #0
   174bc:	cmp	r0, r1
   174c0:	beq	1752c <__assert_fail@plt+0x5cb8>
   174c4:	ldr	r0, [sp, #4]
   174c8:	str	r0, [sp]
   174cc:	ldr	r0, [sp]
   174d0:	movw	r1, #0
   174d4:	cmp	r0, r1
   174d8:	beq	17528 <__assert_fail@plt+0x5cb4>
   174dc:	ldr	r0, [sp, #8]
   174e0:	ldr	r1, [sp, #12]
   174e4:	cmp	r0, r1
   174e8:	bcc	174f8 <__assert_fail@plt+0x5c84>
   174ec:	ldr	r0, [sp, #8]
   174f0:	str	r0, [sp, #24]
   174f4:	b	17548 <__assert_fail@plt+0x5cd4>
   174f8:	ldr	r0, [sp]
   174fc:	ldr	r0, [r0]
   17500:	ldr	r1, [sp, #16]
   17504:	ldr	r2, [sp, #8]
   17508:	add	r3, r2, #1
   1750c:	str	r3, [sp, #8]
   17510:	add	r1, r1, r2, lsl #2
   17514:	str	r0, [r1]
   17518:	ldr	r0, [sp]
   1751c:	ldr	r0, [r0, #4]
   17520:	str	r0, [sp]
   17524:	b	174cc <__assert_fail@plt+0x5c58>
   17528:	b	1752c <__assert_fail@plt+0x5cb8>
   1752c:	b	17530 <__assert_fail@plt+0x5cbc>
   17530:	ldr	r0, [sp, #4]
   17534:	add	r0, r0, #8
   17538:	str	r0, [sp, #4]
   1753c:	b	1749c <__assert_fail@plt+0x5c28>
   17540:	ldr	r0, [sp, #8]
   17544:	str	r0, [sp, #24]
   17548:	ldr	r0, [sp, #24]
   1754c:	add	sp, sp, #28
   17550:	bx	lr
   17554:	push	{fp, lr}
   17558:	mov	fp, sp
   1755c:	sub	sp, sp, #32
   17560:	str	r0, [fp, #-8]
   17564:	str	r1, [fp, #-12]
   17568:	str	r2, [sp, #16]
   1756c:	movw	r0, #0
   17570:	str	r0, [sp, #12]
   17574:	ldr	r0, [fp, #-8]
   17578:	ldr	r0, [r0]
   1757c:	str	r0, [sp, #8]
   17580:	ldr	r0, [sp, #8]
   17584:	ldr	r1, [fp, #-8]
   17588:	ldr	r1, [r1, #4]
   1758c:	cmp	r0, r1
   17590:	bcs	1762c <__assert_fail@plt+0x5db8>
   17594:	ldr	r0, [sp, #8]
   17598:	ldr	r0, [r0]
   1759c:	movw	r1, #0
   175a0:	cmp	r0, r1
   175a4:	beq	17618 <__assert_fail@plt+0x5da4>
   175a8:	ldr	r0, [sp, #8]
   175ac:	str	r0, [sp, #4]
   175b0:	ldr	r0, [sp, #4]
   175b4:	movw	r1, #0
   175b8:	cmp	r0, r1
   175bc:	beq	17614 <__assert_fail@plt+0x5da0>
   175c0:	ldr	r0, [fp, #-12]
   175c4:	ldr	r1, [sp, #4]
   175c8:	ldr	r1, [r1]
   175cc:	ldr	r2, [sp, #16]
   175d0:	str	r0, [sp]
   175d4:	mov	r0, r1
   175d8:	mov	r1, r2
   175dc:	ldr	r2, [sp]
   175e0:	blx	r2
   175e4:	tst	r0, #1
   175e8:	bne	175f8 <__assert_fail@plt+0x5d84>
   175ec:	ldr	r0, [sp, #12]
   175f0:	str	r0, [fp, #-4]
   175f4:	b	17634 <__assert_fail@plt+0x5dc0>
   175f8:	ldr	r0, [sp, #12]
   175fc:	add	r0, r0, #1
   17600:	str	r0, [sp, #12]
   17604:	ldr	r0, [sp, #4]
   17608:	ldr	r0, [r0, #4]
   1760c:	str	r0, [sp, #4]
   17610:	b	175b0 <__assert_fail@plt+0x5d3c>
   17614:	b	17618 <__assert_fail@plt+0x5da4>
   17618:	b	1761c <__assert_fail@plt+0x5da8>
   1761c:	ldr	r0, [sp, #8]
   17620:	add	r0, r0, #8
   17624:	str	r0, [sp, #8]
   17628:	b	17580 <__assert_fail@plt+0x5d0c>
   1762c:	ldr	r0, [sp, #12]
   17630:	str	r0, [fp, #-4]
   17634:	ldr	r0, [fp, #-4]
   17638:	mov	sp, fp
   1763c:	pop	{fp, pc}
   17640:	sub	sp, sp, #16
   17644:	str	r0, [sp, #12]
   17648:	str	r1, [sp, #8]
   1764c:	movw	r0, #0
   17650:	str	r0, [sp, #4]
   17654:	ldr	r0, [sp, #12]
   17658:	ldrb	r0, [r0]
   1765c:	strb	r0, [sp, #3]
   17660:	sxtb	r0, r0
   17664:	cmp	r0, #0
   17668:	beq	1769c <__assert_fail@plt+0x5e28>
   1766c:	ldr	r0, [sp, #4]
   17670:	rsb	r0, r0, r0, lsl #5
   17674:	ldrb	r1, [sp, #3]
   17678:	add	r0, r0, r1
   1767c:	ldr	r1, [sp, #8]
   17680:	udiv	r2, r0, r1
   17684:	mls	r0, r2, r1, r0
   17688:	str	r0, [sp, #4]
   1768c:	ldr	r0, [sp, #12]
   17690:	add	r0, r0, #1
   17694:	str	r0, [sp, #12]
   17698:	b	17654 <__assert_fail@plt+0x5de0>
   1769c:	ldr	r0, [sp, #4]
   176a0:	add	sp, sp, #16
   176a4:	bx	lr
   176a8:	push	{fp, lr}
   176ac:	mov	fp, sp
   176b0:	sub	sp, sp, #8
   176b4:	movw	r1, #16908	; 0x420c
   176b8:	movt	r1, #2
   176bc:	str	r0, [sp, #4]
   176c0:	ldr	r0, [sp, #4]
   176c4:	movw	r2, #20
   176c8:	bl	1152c <memcpy@plt>
   176cc:	mov	sp, fp
   176d0:	pop	{fp, pc}
   176d4:	push	{fp, lr}
   176d8:	mov	fp, sp
   176dc:	sub	sp, sp, #32
   176e0:	ldr	ip, [fp, #8]
   176e4:	str	r0, [fp, #-8]
   176e8:	str	r1, [fp, #-12]
   176ec:	str	r2, [sp, #16]
   176f0:	str	r3, [sp, #12]
   176f4:	ldr	r0, [sp, #16]
   176f8:	movw	r1, #0
   176fc:	cmp	r0, r1
   17700:	str	ip, [sp, #4]
   17704:	bne	17714 <__assert_fail@plt+0x5ea0>
   17708:	movw	r0, #30828	; 0x786c
   1770c:	movt	r0, #1
   17710:	str	r0, [sp, #16]
   17714:	ldr	r0, [sp, #12]
   17718:	movw	r1, #0
   1771c:	cmp	r0, r1
   17720:	bne	17730 <__assert_fail@plt+0x5ebc>
   17724:	movw	r0, #30888	; 0x78a8
   17728:	movt	r0, #1
   1772c:	str	r0, [sp, #12]
   17730:	movw	r0, #40	; 0x28
   17734:	bl	1faac <__assert_fail@plt+0xe238>
   17738:	str	r0, [sp, #8]
   1773c:	ldr	r0, [sp, #8]
   17740:	movw	lr, #0
   17744:	cmp	r0, lr
   17748:	bne	17758 <__assert_fail@plt+0x5ee4>
   1774c:	movw	r0, #0
   17750:	str	r0, [fp, #-4]
   17754:	b	17860 <__assert_fail@plt+0x5fec>
   17758:	ldr	r0, [fp, #-12]
   1775c:	movw	r1, #0
   17760:	cmp	r0, r1
   17764:	bne	17774 <__assert_fail@plt+0x5f00>
   17768:	movw	r0, #16908	; 0x420c
   1776c:	movt	r0, #2
   17770:	str	r0, [fp, #-12]
   17774:	ldr	r0, [fp, #-12]
   17778:	ldr	r1, [sp, #8]
   1777c:	str	r0, [r1, #20]
   17780:	ldr	r0, [sp, #8]
   17784:	bl	178d4 <__assert_fail@plt+0x6060>
   17788:	tst	r0, #1
   1778c:	bne	17794 <__assert_fail@plt+0x5f20>
   17790:	b	17850 <__assert_fail@plt+0x5fdc>
   17794:	ldr	r0, [fp, #-8]
   17798:	ldr	r1, [fp, #-12]
   1779c:	bl	17a28 <__assert_fail@plt+0x61b4>
   177a0:	ldr	r1, [sp, #8]
   177a4:	str	r0, [r1, #8]
   177a8:	ldr	r0, [sp, #8]
   177ac:	ldr	r0, [r0, #8]
   177b0:	cmp	r0, #0
   177b4:	bne	177bc <__assert_fail@plt+0x5f48>
   177b8:	b	17850 <__assert_fail@plt+0x5fdc>
   177bc:	ldr	r0, [sp, #8]
   177c0:	ldr	r0, [r0, #8]
   177c4:	movw	r1, #8
   177c8:	bl	1fa10 <__assert_fail@plt+0xe19c>
   177cc:	ldr	r1, [sp, #8]
   177d0:	str	r0, [r1]
   177d4:	ldr	r0, [sp, #8]
   177d8:	ldr	r0, [r0]
   177dc:	movw	r1, #0
   177e0:	cmp	r0, r1
   177e4:	bne	177ec <__assert_fail@plt+0x5f78>
   177e8:	b	17850 <__assert_fail@plt+0x5fdc>
   177ec:	ldr	r0, [sp, #8]
   177f0:	ldr	r1, [r0]
   177f4:	ldr	r0, [r0, #8]
   177f8:	add	r0, r1, r0, lsl #3
   177fc:	ldr	r1, [sp, #8]
   17800:	str	r0, [r1, #4]
   17804:	ldr	r0, [sp, #8]
   17808:	movw	r1, #0
   1780c:	str	r1, [r0, #12]
   17810:	ldr	r0, [sp, #8]
   17814:	str	r1, [r0, #16]
   17818:	ldr	r0, [sp, #16]
   1781c:	ldr	r2, [sp, #8]
   17820:	str	r0, [r2, #24]
   17824:	ldr	r0, [sp, #12]
   17828:	ldr	r2, [sp, #8]
   1782c:	str	r0, [r2, #28]
   17830:	ldr	r0, [fp, #8]
   17834:	ldr	r2, [sp, #8]
   17838:	str	r0, [r2, #32]
   1783c:	ldr	r0, [sp, #8]
   17840:	str	r1, [r0, #36]	; 0x24
   17844:	ldr	r0, [sp, #8]
   17848:	str	r0, [fp, #-4]
   1784c:	b	17860 <__assert_fail@plt+0x5fec>
   17850:	ldr	r0, [sp, #8]
   17854:	bl	209b8 <__assert_fail@plt+0xf144>
   17858:	movw	r0, #0
   1785c:	str	r0, [fp, #-4]
   17860:	ldr	r0, [fp, #-4]
   17864:	mov	sp, fp
   17868:	pop	{fp, pc}
   1786c:	push	{fp, lr}
   17870:	mov	fp, sp
   17874:	sub	sp, sp, #16
   17878:	str	r0, [fp, #-4]
   1787c:	str	r1, [sp, #8]
   17880:	ldr	r0, [fp, #-4]
   17884:	mov	r1, #3
   17888:	bl	1ff00 <__assert_fail@plt+0xe68c>
   1788c:	str	r0, [sp, #4]
   17890:	ldr	r0, [sp, #4]
   17894:	ldr	r1, [sp, #8]
   17898:	udiv	lr, r0, r1
   1789c:	mls	r0, lr, r1, r0
   178a0:	mov	sp, fp
   178a4:	pop	{fp, pc}
   178a8:	sub	sp, sp, #8
   178ac:	str	r0, [sp, #4]
   178b0:	str	r1, [sp]
   178b4:	ldr	r0, [sp, #4]
   178b8:	ldr	r1, [sp]
   178bc:	cmp	r0, r1
   178c0:	movw	r0, #0
   178c4:	moveq	r0, #1
   178c8:	and	r0, r0, #1
   178cc:	add	sp, sp, #8
   178d0:	bx	lr
   178d4:	sub	sp, sp, #16
   178d8:	str	r0, [sp, #8]
   178dc:	ldr	r0, [sp, #8]
   178e0:	ldr	r0, [r0, #20]
   178e4:	str	r0, [sp, #4]
   178e8:	ldr	r0, [sp, #4]
   178ec:	movw	r1, #16908	; 0x420c
   178f0:	movt	r1, #2
   178f4:	cmp	r0, r1
   178f8:	bne	1790c <__assert_fail@plt+0x6098>
   178fc:	movw	r0, #1
   17900:	and	r0, r0, #1
   17904:	strb	r0, [sp, #15]
   17908:	b	17a10 <__assert_fail@plt+0x619c>
   1790c:	vldr	s0, [pc, #268]	; 17a20 <__assert_fail@plt+0x61ac>
   17910:	vstr	s0, [sp]
   17914:	vldr	s0, [sp]
   17918:	ldr	r0, [sp, #4]
   1791c:	vldr	s2, [r0, #8]
   17920:	vcmpe.f32	s0, s2
   17924:	vmrs	APSR_nzcv, fpscr
   17928:	bpl	179f4 <__assert_fail@plt+0x6180>
   1792c:	ldr	r0, [sp, #4]
   17930:	vldr	s0, [r0, #8]
   17934:	vldr	s2, [sp]
   17938:	vmov.f32	s4, #112	; 0x3f800000  1.0
   1793c:	vsub.f32	s2, s4, s2
   17940:	vcmpe.f32	s0, s2
   17944:	vmrs	APSR_nzcv, fpscr
   17948:	bpl	179f4 <__assert_fail@plt+0x6180>
   1794c:	vldr	s0, [sp]
   17950:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17954:	vadd.f32	s0, s2, s0
   17958:	ldr	r0, [sp, #4]
   1795c:	vldr	s2, [r0, #12]
   17960:	vcmpe.f32	s0, s2
   17964:	vmrs	APSR_nzcv, fpscr
   17968:	bpl	179f4 <__assert_fail@plt+0x6180>
   1796c:	vldr	s0, [pc, #176]	; 17a24 <__assert_fail@plt+0x61b0>
   17970:	ldr	r0, [sp, #4]
   17974:	vldr	s2, [r0]
   17978:	vcmpe.f32	s0, s2
   1797c:	vmrs	APSR_nzcv, fpscr
   17980:	bhi	179f4 <__assert_fail@plt+0x6180>
   17984:	ldr	r0, [sp, #4]
   17988:	vldr	s0, [r0]
   1798c:	vldr	s2, [sp]
   17990:	vadd.f32	s0, s0, s2
   17994:	ldr	r0, [sp, #4]
   17998:	vldr	s2, [r0, #4]
   1799c:	vcmpe.f32	s0, s2
   179a0:	vmrs	APSR_nzcv, fpscr
   179a4:	bpl	179f4 <__assert_fail@plt+0x6180>
   179a8:	ldr	r0, [sp, #4]
   179ac:	vldr	s0, [r0, #4]
   179b0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   179b4:	vcmpe.f32	s0, s2
   179b8:	vmrs	APSR_nzcv, fpscr
   179bc:	bhi	179f4 <__assert_fail@plt+0x6180>
   179c0:	ldr	r0, [sp, #4]
   179c4:	vldr	s0, [r0]
   179c8:	vldr	s2, [sp]
   179cc:	vadd.f32	s0, s0, s2
   179d0:	ldr	r0, [sp, #4]
   179d4:	vldr	s2, [r0, #8]
   179d8:	vcmpe.f32	s0, s2
   179dc:	vmrs	APSR_nzcv, fpscr
   179e0:	bpl	179f4 <__assert_fail@plt+0x6180>
   179e4:	movw	r0, #1
   179e8:	and	r0, r0, #1
   179ec:	strb	r0, [sp, #15]
   179f0:	b	17a10 <__assert_fail@plt+0x619c>
   179f4:	ldr	r0, [sp, #8]
   179f8:	movw	r1, #16908	; 0x420c
   179fc:	movt	r1, #2
   17a00:	str	r1, [r0, #20]
   17a04:	movw	r0, #0
   17a08:	and	r0, r0, #1
   17a0c:	strb	r0, [sp, #15]
   17a10:	ldrb	r0, [sp, #15]
   17a14:	and	r0, r0, #1
   17a18:	add	sp, sp, #16
   17a1c:	bx	lr
   17a20:	stclcc	12, cr12, [ip, #820]	; 0x334
   17a24:	andeq	r0, r0, r0
   17a28:	push	{fp, lr}
   17a2c:	mov	fp, sp
   17a30:	sub	sp, sp, #16
   17a34:	str	r0, [sp, #8]
   17a38:	str	r1, [sp, #4]
   17a3c:	ldr	r0, [sp, #4]
   17a40:	ldrb	r0, [r0, #16]
   17a44:	tst	r0, #1
   17a48:	bne	17a98 <__assert_fail@plt+0x6224>
   17a4c:	vldr	s0, [pc, #128]	; 17ad4 <__assert_fail@plt+0x6260>
   17a50:	ldr	r0, [sp, #8]
   17a54:	vmov	s2, r0
   17a58:	vcvt.f32.u32	s2, s2
   17a5c:	ldr	r0, [sp, #4]
   17a60:	vldr	s4, [r0, #8]
   17a64:	vdiv.f32	s2, s2, s4
   17a68:	vstr	s2, [sp]
   17a6c:	vldr	s2, [sp]
   17a70:	vcmpe.f32	s0, s2
   17a74:	vmrs	APSR_nzcv, fpscr
   17a78:	bhi	17a88 <__assert_fail@plt+0x6214>
   17a7c:	movw	r0, #0
   17a80:	str	r0, [fp, #-4]
   17a84:	b	17ac8 <__assert_fail@plt+0x6254>
   17a88:	vldr	s0, [sp]
   17a8c:	vcvt.u32.f32	s0, s0
   17a90:	vmov	r0, s0
   17a94:	str	r0, [sp, #8]
   17a98:	ldr	r0, [sp, #8]
   17a9c:	bl	189a0 <__assert_fail@plt+0x712c>
   17aa0:	ldr	lr, [pc, #48]	; 17ad8 <__assert_fail@plt+0x6264>
   17aa4:	str	r0, [sp, #8]
   17aa8:	ldr	r0, [sp, #8]
   17aac:	cmp	lr, r0
   17ab0:	bcs	17ac0 <__assert_fail@plt+0x624c>
   17ab4:	movw	r0, #0
   17ab8:	str	r0, [fp, #-4]
   17abc:	b	17ac8 <__assert_fail@plt+0x6254>
   17ac0:	ldr	r0, [sp, #8]
   17ac4:	str	r0, [fp, #-4]
   17ac8:	ldr	r0, [fp, #-4]
   17acc:	mov	sp, fp
   17ad0:	pop	{fp, pc}
   17ad4:	svcmi	0x00800000
   17ad8:	svcne	0x00ffffff
   17adc:	push	{fp, lr}
   17ae0:	mov	fp, sp
   17ae4:	sub	sp, sp, #24
   17ae8:	str	r0, [fp, #-4]
   17aec:	ldr	r0, [fp, #-4]
   17af0:	ldr	r0, [r0]
   17af4:	str	r0, [fp, #-8]
   17af8:	ldr	r0, [fp, #-8]
   17afc:	ldr	r1, [fp, #-4]
   17b00:	ldr	r1, [r1, #4]
   17b04:	cmp	r0, r1
   17b08:	bcs	17c0c <__assert_fail@plt+0x6398>
   17b0c:	ldr	r0, [fp, #-8]
   17b10:	ldr	r0, [r0]
   17b14:	movw	r1, #0
   17b18:	cmp	r0, r1
   17b1c:	beq	17bf8 <__assert_fail@plt+0x6384>
   17b20:	ldr	r0, [fp, #-8]
   17b24:	ldr	r0, [r0, #4]
   17b28:	str	r0, [sp, #12]
   17b2c:	ldr	r0, [sp, #12]
   17b30:	movw	r1, #0
   17b34:	cmp	r0, r1
   17b38:	beq	17bb0 <__assert_fail@plt+0x633c>
   17b3c:	ldr	r0, [fp, #-4]
   17b40:	ldr	r0, [r0, #32]
   17b44:	movw	r1, #0
   17b48:	cmp	r0, r1
   17b4c:	beq	17b70 <__assert_fail@plt+0x62fc>
   17b50:	ldr	r0, [fp, #-4]
   17b54:	ldr	r0, [r0, #32]
   17b58:	ldr	r1, [sp, #12]
   17b5c:	ldr	r1, [r1]
   17b60:	str	r0, [sp, #4]
   17b64:	mov	r0, r1
   17b68:	ldr	r1, [sp, #4]
   17b6c:	blx	r1
   17b70:	ldr	r0, [sp, #12]
   17b74:	movw	r1, #0
   17b78:	str	r1, [r0]
   17b7c:	ldr	r0, [sp, #12]
   17b80:	ldr	r0, [r0, #4]
   17b84:	str	r0, [sp, #8]
   17b88:	ldr	r0, [fp, #-4]
   17b8c:	ldr	r0, [r0, #36]	; 0x24
   17b90:	ldr	r1, [sp, #12]
   17b94:	str	r0, [r1, #4]
   17b98:	ldr	r0, [sp, #12]
   17b9c:	ldr	r1, [fp, #-4]
   17ba0:	str	r0, [r1, #36]	; 0x24
   17ba4:	ldr	r0, [sp, #8]
   17ba8:	str	r0, [sp, #12]
   17bac:	b	17b2c <__assert_fail@plt+0x62b8>
   17bb0:	ldr	r0, [fp, #-4]
   17bb4:	ldr	r0, [r0, #32]
   17bb8:	movw	r1, #0
   17bbc:	cmp	r0, r1
   17bc0:	beq	17be4 <__assert_fail@plt+0x6370>
   17bc4:	ldr	r0, [fp, #-4]
   17bc8:	ldr	r0, [r0, #32]
   17bcc:	ldr	r1, [fp, #-8]
   17bd0:	ldr	r1, [r1]
   17bd4:	str	r0, [sp]
   17bd8:	mov	r0, r1
   17bdc:	ldr	r1, [sp]
   17be0:	blx	r1
   17be4:	ldr	r0, [fp, #-8]
   17be8:	movw	r1, #0
   17bec:	str	r1, [r0]
   17bf0:	ldr	r0, [fp, #-8]
   17bf4:	str	r1, [r0, #4]
   17bf8:	b	17bfc <__assert_fail@plt+0x6388>
   17bfc:	ldr	r0, [fp, #-8]
   17c00:	add	r0, r0, #8
   17c04:	str	r0, [fp, #-8]
   17c08:	b	17af8 <__assert_fail@plt+0x6284>
   17c0c:	ldr	r0, [fp, #-4]
   17c10:	movw	r1, #0
   17c14:	str	r1, [r0, #12]
   17c18:	ldr	r0, [fp, #-4]
   17c1c:	str	r1, [r0, #16]
   17c20:	mov	sp, fp
   17c24:	pop	{fp, pc}
   17c28:	push	{fp, lr}
   17c2c:	mov	fp, sp
   17c30:	sub	sp, sp, #24
   17c34:	str	r0, [fp, #-4]
   17c38:	ldr	r0, [fp, #-4]
   17c3c:	ldr	r0, [r0, #32]
   17c40:	movw	r1, #0
   17c44:	cmp	r0, r1
   17c48:	beq	17cf4 <__assert_fail@plt+0x6480>
   17c4c:	ldr	r0, [fp, #-4]
   17c50:	ldr	r0, [r0, #16]
   17c54:	cmp	r0, #0
   17c58:	beq	17cf4 <__assert_fail@plt+0x6480>
   17c5c:	ldr	r0, [fp, #-4]
   17c60:	ldr	r0, [r0]
   17c64:	str	r0, [fp, #-8]
   17c68:	ldr	r0, [fp, #-8]
   17c6c:	ldr	r1, [fp, #-4]
   17c70:	ldr	r1, [r1, #4]
   17c74:	cmp	r0, r1
   17c78:	bcs	17cf0 <__assert_fail@plt+0x647c>
   17c7c:	ldr	r0, [fp, #-8]
   17c80:	ldr	r0, [r0]
   17c84:	movw	r1, #0
   17c88:	cmp	r0, r1
   17c8c:	beq	17cdc <__assert_fail@plt+0x6468>
   17c90:	ldr	r0, [fp, #-8]
   17c94:	str	r0, [sp, #12]
   17c98:	ldr	r0, [sp, #12]
   17c9c:	movw	r1, #0
   17ca0:	cmp	r0, r1
   17ca4:	beq	17cd8 <__assert_fail@plt+0x6464>
   17ca8:	ldr	r0, [fp, #-4]
   17cac:	ldr	r0, [r0, #32]
   17cb0:	ldr	r1, [sp, #12]
   17cb4:	ldr	r1, [r1]
   17cb8:	str	r0, [sp, #4]
   17cbc:	mov	r0, r1
   17cc0:	ldr	r1, [sp, #4]
   17cc4:	blx	r1
   17cc8:	ldr	r0, [sp, #12]
   17ccc:	ldr	r0, [r0, #4]
   17cd0:	str	r0, [sp, #12]
   17cd4:	b	17c98 <__assert_fail@plt+0x6424>
   17cd8:	b	17cdc <__assert_fail@plt+0x6468>
   17cdc:	b	17ce0 <__assert_fail@plt+0x646c>
   17ce0:	ldr	r0, [fp, #-8]
   17ce4:	add	r0, r0, #8
   17ce8:	str	r0, [fp, #-8]
   17cec:	b	17c68 <__assert_fail@plt+0x63f4>
   17cf0:	b	17cf4 <__assert_fail@plt+0x6480>
   17cf4:	ldr	r0, [fp, #-4]
   17cf8:	ldr	r0, [r0]
   17cfc:	str	r0, [fp, #-8]
   17d00:	ldr	r0, [fp, #-8]
   17d04:	ldr	r1, [fp, #-4]
   17d08:	ldr	r1, [r1, #4]
   17d0c:	cmp	r0, r1
   17d10:	bcs	17d64 <__assert_fail@plt+0x64f0>
   17d14:	ldr	r0, [fp, #-8]
   17d18:	ldr	r0, [r0, #4]
   17d1c:	str	r0, [sp, #12]
   17d20:	ldr	r0, [sp, #12]
   17d24:	movw	r1, #0
   17d28:	cmp	r0, r1
   17d2c:	beq	17d50 <__assert_fail@plt+0x64dc>
   17d30:	ldr	r0, [sp, #12]
   17d34:	ldr	r0, [r0, #4]
   17d38:	str	r0, [sp, #8]
   17d3c:	ldr	r0, [sp, #12]
   17d40:	bl	209b8 <__assert_fail@plt+0xf144>
   17d44:	ldr	r0, [sp, #8]
   17d48:	str	r0, [sp, #12]
   17d4c:	b	17d20 <__assert_fail@plt+0x64ac>
   17d50:	b	17d54 <__assert_fail@plt+0x64e0>
   17d54:	ldr	r0, [fp, #-8]
   17d58:	add	r0, r0, #8
   17d5c:	str	r0, [fp, #-8]
   17d60:	b	17d00 <__assert_fail@plt+0x648c>
   17d64:	ldr	r0, [fp, #-4]
   17d68:	ldr	r0, [r0, #36]	; 0x24
   17d6c:	str	r0, [sp, #12]
   17d70:	ldr	r0, [sp, #12]
   17d74:	movw	r1, #0
   17d78:	cmp	r0, r1
   17d7c:	beq	17da0 <__assert_fail@plt+0x652c>
   17d80:	ldr	r0, [sp, #12]
   17d84:	ldr	r0, [r0, #4]
   17d88:	str	r0, [sp, #8]
   17d8c:	ldr	r0, [sp, #12]
   17d90:	bl	209b8 <__assert_fail@plt+0xf144>
   17d94:	ldr	r0, [sp, #8]
   17d98:	str	r0, [sp, #12]
   17d9c:	b	17d70 <__assert_fail@plt+0x64fc>
   17da0:	ldr	r0, [fp, #-4]
   17da4:	ldr	r0, [r0]
   17da8:	bl	209b8 <__assert_fail@plt+0xf144>
   17dac:	ldr	r0, [fp, #-4]
   17db0:	bl	209b8 <__assert_fail@plt+0xf144>
   17db4:	mov	sp, fp
   17db8:	pop	{fp, pc}
   17dbc:	push	{fp, lr}
   17dc0:	mov	fp, sp
   17dc4:	sub	sp, sp, #64	; 0x40
   17dc8:	str	r0, [fp, #-8]
   17dcc:	str	r1, [fp, #-12]
   17dd0:	ldr	r0, [fp, #-12]
   17dd4:	ldr	r1, [fp, #-8]
   17dd8:	ldr	r1, [r1, #20]
   17ddc:	bl	17a28 <__assert_fail@plt+0x61b4>
   17de0:	str	r0, [sp, #4]
   17de4:	ldr	r0, [sp, #4]
   17de8:	cmp	r0, #0
   17dec:	bne	17e00 <__assert_fail@plt+0x658c>
   17df0:	movw	r0, #0
   17df4:	and	r0, r0, #1
   17df8:	strb	r0, [fp, #-1]
   17dfc:	b	17fd8 <__assert_fail@plt+0x6764>
   17e00:	ldr	r0, [sp, #4]
   17e04:	ldr	r1, [fp, #-8]
   17e08:	ldr	r1, [r1, #8]
   17e0c:	cmp	r0, r1
   17e10:	bne	17e24 <__assert_fail@plt+0x65b0>
   17e14:	movw	r0, #1
   17e18:	and	r0, r0, #1
   17e1c:	strb	r0, [fp, #-1]
   17e20:	b	17fd8 <__assert_fail@plt+0x6764>
   17e24:	add	r0, sp, #12
   17e28:	str	r0, [sp, #8]
   17e2c:	ldr	r0, [sp, #4]
   17e30:	movw	r1, #8
   17e34:	bl	1fa10 <__assert_fail@plt+0xe19c>
   17e38:	ldr	r1, [sp, #8]
   17e3c:	str	r0, [r1]
   17e40:	ldr	r0, [sp, #8]
   17e44:	ldr	r0, [r0]
   17e48:	movw	r1, #0
   17e4c:	cmp	r0, r1
   17e50:	bne	17e64 <__assert_fail@plt+0x65f0>
   17e54:	movw	r0, #0
   17e58:	and	r0, r0, #1
   17e5c:	strb	r0, [fp, #-1]
   17e60:	b	17fd8 <__assert_fail@plt+0x6764>
   17e64:	ldr	r0, [sp, #4]
   17e68:	ldr	r1, [sp, #8]
   17e6c:	str	r0, [r1, #8]
   17e70:	ldr	r0, [sp, #8]
   17e74:	ldr	r0, [r0]
   17e78:	ldr	r1, [sp, #4]
   17e7c:	add	r0, r0, r1, lsl #3
   17e80:	ldr	r1, [sp, #8]
   17e84:	str	r0, [r1, #4]
   17e88:	ldr	r0, [sp, #8]
   17e8c:	movw	r1, #0
   17e90:	str	r1, [r0, #12]
   17e94:	ldr	r0, [sp, #8]
   17e98:	str	r1, [r0, #16]
   17e9c:	ldr	r0, [fp, #-8]
   17ea0:	ldr	r0, [r0, #20]
   17ea4:	ldr	r1, [sp, #8]
   17ea8:	str	r0, [r1, #20]
   17eac:	ldr	r0, [fp, #-8]
   17eb0:	ldr	r0, [r0, #24]
   17eb4:	ldr	r1, [sp, #8]
   17eb8:	str	r0, [r1, #24]
   17ebc:	ldr	r0, [fp, #-8]
   17ec0:	ldr	r0, [r0, #28]
   17ec4:	ldr	r1, [sp, #8]
   17ec8:	str	r0, [r1, #28]
   17ecc:	ldr	r0, [fp, #-8]
   17ed0:	ldr	r0, [r0, #32]
   17ed4:	ldr	r1, [sp, #8]
   17ed8:	str	r0, [r1, #32]
   17edc:	ldr	r0, [fp, #-8]
   17ee0:	ldr	r0, [r0, #36]	; 0x24
   17ee4:	ldr	r1, [sp, #8]
   17ee8:	str	r0, [r1, #36]	; 0x24
   17eec:	ldr	r0, [sp, #8]
   17ef0:	ldr	r1, [fp, #-8]
   17ef4:	movw	r2, #0
   17ef8:	and	r2, r2, #1
   17efc:	bl	17fe8 <__assert_fail@plt+0x6774>
   17f00:	tst	r0, #1
   17f04:	beq	17f74 <__assert_fail@plt+0x6700>
   17f08:	ldr	r0, [fp, #-8]
   17f0c:	ldr	r0, [r0]
   17f10:	bl	209b8 <__assert_fail@plt+0xf144>
   17f14:	ldr	r0, [sp, #8]
   17f18:	ldr	r0, [r0]
   17f1c:	ldr	lr, [fp, #-8]
   17f20:	str	r0, [lr]
   17f24:	ldr	r0, [sp, #8]
   17f28:	ldr	r0, [r0, #4]
   17f2c:	ldr	lr, [fp, #-8]
   17f30:	str	r0, [lr, #4]
   17f34:	ldr	r0, [sp, #8]
   17f38:	ldr	r0, [r0, #8]
   17f3c:	ldr	lr, [fp, #-8]
   17f40:	str	r0, [lr, #8]
   17f44:	ldr	r0, [sp, #8]
   17f48:	ldr	r0, [r0, #12]
   17f4c:	ldr	lr, [fp, #-8]
   17f50:	str	r0, [lr, #12]
   17f54:	ldr	r0, [sp, #8]
   17f58:	ldr	r0, [r0, #36]	; 0x24
   17f5c:	ldr	lr, [fp, #-8]
   17f60:	str	r0, [lr, #36]	; 0x24
   17f64:	movw	r0, #1
   17f68:	and	r0, r0, #1
   17f6c:	strb	r0, [fp, #-1]
   17f70:	b	17fd8 <__assert_fail@plt+0x6764>
   17f74:	ldr	r0, [sp, #8]
   17f78:	ldr	r0, [r0, #36]	; 0x24
   17f7c:	ldr	r1, [fp, #-8]
   17f80:	str	r0, [r1, #36]	; 0x24
   17f84:	ldr	r0, [fp, #-8]
   17f88:	ldr	r1, [sp, #8]
   17f8c:	movw	r2, #1
   17f90:	and	r2, r2, #1
   17f94:	bl	17fe8 <__assert_fail@plt+0x6774>
   17f98:	tst	r0, #1
   17f9c:	beq	17fbc <__assert_fail@plt+0x6748>
   17fa0:	ldr	r0, [fp, #-8]
   17fa4:	ldr	r1, [sp, #8]
   17fa8:	movw	r2, #0
   17fac:	and	r2, r2, #1
   17fb0:	bl	17fe8 <__assert_fail@plt+0x6774>
   17fb4:	tst	r0, #1
   17fb8:	bne	17fc0 <__assert_fail@plt+0x674c>
   17fbc:	bl	11838 <abort@plt>
   17fc0:	ldr	r0, [sp, #8]
   17fc4:	ldr	r0, [r0]
   17fc8:	bl	209b8 <__assert_fail@plt+0xf144>
   17fcc:	movw	r0, #0
   17fd0:	and	r0, r0, #1
   17fd4:	strb	r0, [fp, #-1]
   17fd8:	ldrb	r0, [fp, #-1]
   17fdc:	and	r0, r0, #1
   17fe0:	mov	sp, fp
   17fe4:	pop	{fp, pc}
   17fe8:	push	{fp, lr}
   17fec:	mov	fp, sp
   17ff0:	sub	sp, sp, #40	; 0x28
   17ff4:	str	r0, [fp, #-8]
   17ff8:	str	r1, [fp, #-12]
   17ffc:	and	r0, r2, #1
   18000:	strb	r0, [fp, #-13]
   18004:	ldr	r0, [fp, #-12]
   18008:	ldr	r0, [r0]
   1800c:	str	r0, [sp, #20]
   18010:	ldr	r0, [sp, #20]
   18014:	ldr	r1, [fp, #-12]
   18018:	ldr	r1, [r1, #4]
   1801c:	cmp	r0, r1
   18020:	bcs	181dc <__assert_fail@plt+0x6968>
   18024:	ldr	r0, [sp, #20]
   18028:	ldr	r0, [r0]
   1802c:	movw	r1, #0
   18030:	cmp	r0, r1
   18034:	beq	181c8 <__assert_fail@plt+0x6954>
   18038:	ldr	r0, [sp, #20]
   1803c:	ldr	r0, [r0, #4]
   18040:	str	r0, [sp, #16]
   18044:	ldr	r0, [sp, #16]
   18048:	movw	r1, #0
   1804c:	cmp	r0, r1
   18050:	beq	180e8 <__assert_fail@plt+0x6874>
   18054:	ldr	r0, [sp, #16]
   18058:	ldr	r0, [r0]
   1805c:	str	r0, [sp, #8]
   18060:	ldr	r0, [fp, #-8]
   18064:	ldr	r1, [sp, #8]
   18068:	bl	17290 <__assert_fail@plt+0x5a1c>
   1806c:	str	r0, [sp, #4]
   18070:	ldr	r0, [sp, #16]
   18074:	ldr	r0, [r0, #4]
   18078:	str	r0, [sp, #12]
   1807c:	ldr	r0, [sp, #4]
   18080:	ldr	r0, [r0]
   18084:	movw	r1, #0
   18088:	cmp	r0, r1
   1808c:	beq	180b0 <__assert_fail@plt+0x683c>
   18090:	ldr	r0, [sp, #4]
   18094:	ldr	r0, [r0, #4]
   18098:	ldr	r1, [sp, #16]
   1809c:	str	r0, [r1, #4]
   180a0:	ldr	r0, [sp, #16]
   180a4:	ldr	r1, [sp, #4]
   180a8:	str	r0, [r1, #4]
   180ac:	b	180d8 <__assert_fail@plt+0x6864>
   180b0:	ldr	r0, [sp, #8]
   180b4:	ldr	r1, [sp, #4]
   180b8:	str	r0, [r1]
   180bc:	ldr	r0, [fp, #-8]
   180c0:	ldr	r1, [r0, #12]
   180c4:	add	r1, r1, #1
   180c8:	str	r1, [r0, #12]
   180cc:	ldr	r0, [fp, #-8]
   180d0:	ldr	r1, [sp, #16]
   180d4:	bl	18af8 <__assert_fail@plt+0x7284>
   180d8:	b	180dc <__assert_fail@plt+0x6868>
   180dc:	ldr	r0, [sp, #12]
   180e0:	str	r0, [sp, #16]
   180e4:	b	18044 <__assert_fail@plt+0x67d0>
   180e8:	ldr	r0, [sp, #20]
   180ec:	ldr	r0, [r0]
   180f0:	str	r0, [sp, #8]
   180f4:	ldr	r0, [sp, #20]
   180f8:	movw	r1, #0
   180fc:	str	r1, [r0, #4]
   18100:	ldrb	r0, [fp, #-13]
   18104:	tst	r0, #1
   18108:	beq	18110 <__assert_fail@plt+0x689c>
   1810c:	b	181cc <__assert_fail@plt+0x6958>
   18110:	ldr	r0, [fp, #-8]
   18114:	ldr	r1, [sp, #8]
   18118:	bl	17290 <__assert_fail@plt+0x5a1c>
   1811c:	str	r0, [sp, #4]
   18120:	ldr	r0, [sp, #4]
   18124:	ldr	r0, [r0]
   18128:	movw	r1, #0
   1812c:	cmp	r0, r1
   18130:	beq	1818c <__assert_fail@plt+0x6918>
   18134:	ldr	r0, [fp, #-8]
   18138:	bl	186a4 <__assert_fail@plt+0x6e30>
   1813c:	str	r0, [sp]
   18140:	ldr	r0, [sp]
   18144:	movw	lr, #0
   18148:	cmp	r0, lr
   1814c:	bne	18160 <__assert_fail@plt+0x68ec>
   18150:	movw	r0, #0
   18154:	and	r0, r0, #1
   18158:	strb	r0, [fp, #-1]
   1815c:	b	181e8 <__assert_fail@plt+0x6974>
   18160:	ldr	r0, [sp, #8]
   18164:	ldr	r1, [sp]
   18168:	str	r0, [r1]
   1816c:	ldr	r0, [sp, #4]
   18170:	ldr	r0, [r0, #4]
   18174:	ldr	r1, [sp]
   18178:	str	r0, [r1, #4]
   1817c:	ldr	r0, [sp]
   18180:	ldr	r1, [sp, #4]
   18184:	str	r0, [r1, #4]
   18188:	b	181a8 <__assert_fail@plt+0x6934>
   1818c:	ldr	r0, [sp, #8]
   18190:	ldr	r1, [sp, #4]
   18194:	str	r0, [r1]
   18198:	ldr	r0, [fp, #-8]
   1819c:	ldr	r1, [r0, #12]
   181a0:	add	r1, r1, #1
   181a4:	str	r1, [r0, #12]
   181a8:	ldr	r0, [sp, #20]
   181ac:	movw	r1, #0
   181b0:	str	r1, [r0]
   181b4:	ldr	r0, [fp, #-12]
   181b8:	ldr	r1, [r0, #12]
   181bc:	mvn	r2, #0
   181c0:	add	r1, r1, r2
   181c4:	str	r1, [r0, #12]
   181c8:	b	181cc <__assert_fail@plt+0x6958>
   181cc:	ldr	r0, [sp, #20]
   181d0:	add	r0, r0, #8
   181d4:	str	r0, [sp, #20]
   181d8:	b	18010 <__assert_fail@plt+0x679c>
   181dc:	movw	r0, #1
   181e0:	and	r0, r0, #1
   181e4:	strb	r0, [fp, #-1]
   181e8:	ldrb	r0, [fp, #-1]
   181ec:	and	r0, r0, #1
   181f0:	mov	sp, fp
   181f4:	pop	{fp, pc}
   181f8:	push	{fp, lr}
   181fc:	mov	fp, sp
   18200:	sub	sp, sp, #48	; 0x30
   18204:	str	r0, [fp, #-8]
   18208:	str	r1, [fp, #-12]
   1820c:	str	r2, [fp, #-16]
   18210:	ldr	r0, [fp, #-12]
   18214:	movw	r1, #0
   18218:	cmp	r0, r1
   1821c:	bne	18224 <__assert_fail@plt+0x69b0>
   18220:	bl	11838 <abort@plt>
   18224:	ldr	r0, [fp, #-8]
   18228:	ldr	r1, [fp, #-12]
   1822c:	add	r2, sp, #24
   18230:	movw	r3, #0
   18234:	and	r3, r3, #1
   18238:	bl	184a8 <__assert_fail@plt+0x6c34>
   1823c:	str	r0, [fp, #-20]	; 0xffffffec
   18240:	movw	r1, #0
   18244:	cmp	r0, r1
   18248:	beq	18274 <__assert_fail@plt+0x6a00>
   1824c:	ldr	r0, [fp, #-16]
   18250:	movw	r1, #0
   18254:	cmp	r0, r1
   18258:	beq	18268 <__assert_fail@plt+0x69f4>
   1825c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18260:	ldr	r1, [fp, #-16]
   18264:	str	r0, [r1]
   18268:	movw	r0, #0
   1826c:	str	r0, [fp, #-4]
   18270:	b	18498 <__assert_fail@plt+0x6c24>
   18274:	ldr	r0, [fp, #-8]
   18278:	ldr	r0, [r0, #12]
   1827c:	vmov	s0, r0
   18280:	vcvt.f32.u32	s0, s0
   18284:	ldr	r0, [fp, #-8]
   18288:	ldr	r0, [r0, #20]
   1828c:	vldr	s2, [r0, #8]
   18290:	ldr	r0, [fp, #-8]
   18294:	ldr	r0, [r0, #8]
   18298:	vmov	s4, r0
   1829c:	vcvt.f32.u32	s4, s4
   182a0:	vmul.f32	s2, s2, s4
   182a4:	vcmpe.f32	s0, s2
   182a8:	vmrs	APSR_nzcv, fpscr
   182ac:	ble	183e4 <__assert_fail@plt+0x6b70>
   182b0:	ldr	r0, [fp, #-8]
   182b4:	bl	178d4 <__assert_fail@plt+0x6060>
   182b8:	ldr	lr, [fp, #-8]
   182bc:	ldr	lr, [lr, #12]
   182c0:	vmov	s0, lr
   182c4:	vcvt.f32.u32	s0, s0
   182c8:	ldr	lr, [fp, #-8]
   182cc:	ldr	lr, [lr, #20]
   182d0:	vldr	s2, [lr, #8]
   182d4:	ldr	lr, [fp, #-8]
   182d8:	ldr	lr, [lr, #8]
   182dc:	vmov	s4, lr
   182e0:	vcvt.f32.u32	s4, s4
   182e4:	vmul.f32	s2, s2, s4
   182e8:	vcmpe.f32	s0, s2
   182ec:	vmrs	APSR_nzcv, fpscr
   182f0:	str	r0, [sp, #8]
   182f4:	ble	183e0 <__assert_fail@plt+0x6b6c>
   182f8:	ldr	r0, [fp, #-8]
   182fc:	ldr	r0, [r0, #20]
   18300:	str	r0, [sp, #20]
   18304:	ldr	r0, [sp, #20]
   18308:	ldrb	r0, [r0, #16]
   1830c:	tst	r0, #1
   18310:	beq	18338 <__assert_fail@plt+0x6ac4>
   18314:	ldr	r0, [fp, #-8]
   18318:	ldr	r0, [r0, #8]
   1831c:	vmov	s0, r0
   18320:	vcvt.f32.u32	s0, s0
   18324:	ldr	r0, [sp, #20]
   18328:	vldr	s2, [r0, #12]
   1832c:	vmul.f32	s0, s0, s2
   18330:	vstr	s0, [sp, #4]
   18334:	b	18364 <__assert_fail@plt+0x6af0>
   18338:	ldr	r0, [fp, #-8]
   1833c:	ldr	r0, [r0, #8]
   18340:	vmov	s0, r0
   18344:	vcvt.f32.u32	s0, s0
   18348:	ldr	r0, [sp, #20]
   1834c:	vldr	s2, [r0, #12]
   18350:	vmul.f32	s0, s0, s2
   18354:	ldr	r0, [sp, #20]
   18358:	vldr	s2, [r0, #8]
   1835c:	vmul.f32	s0, s0, s2
   18360:	vstr	s0, [sp, #4]
   18364:	vldr	s0, [sp, #4]
   18368:	vldr	s2, [pc, #308]	; 184a4 <__assert_fail@plt+0x6c30>
   1836c:	vstr	s0, [sp, #16]
   18370:	vldr	s0, [sp, #16]
   18374:	vcmpe.f32	s2, s0
   18378:	vmrs	APSR_nzcv, fpscr
   1837c:	bhi	1838c <__assert_fail@plt+0x6b18>
   18380:	mvn	r0, #0
   18384:	str	r0, [fp, #-4]
   18388:	b	18498 <__assert_fail@plt+0x6c24>
   1838c:	ldr	r0, [fp, #-8]
   18390:	vldr	s0, [sp, #16]
   18394:	vcvt.u32.f32	s0, s0
   18398:	vmov	r1, s0
   1839c:	bl	17dbc <__assert_fail@plt+0x6548>
   183a0:	tst	r0, #1
   183a4:	bne	183b4 <__assert_fail@plt+0x6b40>
   183a8:	mvn	r0, #0
   183ac:	str	r0, [fp, #-4]
   183b0:	b	18498 <__assert_fail@plt+0x6c24>
   183b4:	ldr	r0, [fp, #-8]
   183b8:	ldr	r1, [fp, #-12]
   183bc:	add	r2, sp, #24
   183c0:	movw	r3, #0
   183c4:	and	r3, r3, #1
   183c8:	bl	184a8 <__assert_fail@plt+0x6c34>
   183cc:	movw	r1, #0
   183d0:	cmp	r0, r1
   183d4:	beq	183dc <__assert_fail@plt+0x6b68>
   183d8:	bl	11838 <abort@plt>
   183dc:	b	183e0 <__assert_fail@plt+0x6b6c>
   183e0:	b	183e4 <__assert_fail@plt+0x6b70>
   183e4:	ldr	r0, [sp, #24]
   183e8:	ldr	r0, [r0]
   183ec:	movw	r1, #0
   183f0:	cmp	r0, r1
   183f4:	beq	18464 <__assert_fail@plt+0x6bf0>
   183f8:	ldr	r0, [fp, #-8]
   183fc:	bl	186a4 <__assert_fail@plt+0x6e30>
   18400:	str	r0, [sp, #12]
   18404:	ldr	r0, [sp, #12]
   18408:	movw	lr, #0
   1840c:	cmp	r0, lr
   18410:	bne	18420 <__assert_fail@plt+0x6bac>
   18414:	mvn	r0, #0
   18418:	str	r0, [fp, #-4]
   1841c:	b	18498 <__assert_fail@plt+0x6c24>
   18420:	ldr	r0, [fp, #-12]
   18424:	ldr	r1, [sp, #12]
   18428:	str	r0, [r1]
   1842c:	ldr	r0, [sp, #24]
   18430:	ldr	r0, [r0, #4]
   18434:	ldr	r1, [sp, #12]
   18438:	str	r0, [r1, #4]
   1843c:	ldr	r0, [sp, #12]
   18440:	ldr	r1, [sp, #24]
   18444:	str	r0, [r1, #4]
   18448:	ldr	r0, [fp, #-8]
   1844c:	ldr	r1, [r0, #16]
   18450:	add	r1, r1, #1
   18454:	str	r1, [r0, #16]
   18458:	movw	r0, #1
   1845c:	str	r0, [fp, #-4]
   18460:	b	18498 <__assert_fail@plt+0x6c24>
   18464:	ldr	r0, [fp, #-12]
   18468:	ldr	r1, [sp, #24]
   1846c:	str	r0, [r1]
   18470:	ldr	r0, [fp, #-8]
   18474:	ldr	r1, [r0, #16]
   18478:	add	r1, r1, #1
   1847c:	str	r1, [r0, #16]
   18480:	ldr	r0, [fp, #-8]
   18484:	ldr	r1, [r0, #12]
   18488:	add	r1, r1, #1
   1848c:	str	r1, [r0, #12]
   18490:	movw	r0, #1
   18494:	str	r0, [fp, #-4]
   18498:	ldr	r0, [fp, #-4]
   1849c:	mov	sp, fp
   184a0:	pop	{fp, pc}
   184a4:	svcmi	0x00800000
   184a8:	push	{fp, lr}
   184ac:	mov	fp, sp
   184b0:	sub	sp, sp, #56	; 0x38
   184b4:	str	r0, [fp, #-8]
   184b8:	str	r1, [fp, #-12]
   184bc:	str	r2, [fp, #-16]
   184c0:	and	r0, r3, #1
   184c4:	strb	r0, [fp, #-17]	; 0xffffffef
   184c8:	ldr	r0, [fp, #-8]
   184cc:	ldr	r1, [fp, #-12]
   184d0:	bl	17290 <__assert_fail@plt+0x5a1c>
   184d4:	str	r0, [fp, #-24]	; 0xffffffe8
   184d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184dc:	ldr	r1, [fp, #-16]
   184e0:	str	r0, [r1]
   184e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e8:	ldr	r0, [r0]
   184ec:	movw	r1, #0
   184f0:	cmp	r0, r1
   184f4:	bne	18504 <__assert_fail@plt+0x6c90>
   184f8:	movw	r0, #0
   184fc:	str	r0, [fp, #-4]
   18500:	b	18698 <__assert_fail@plt+0x6e24>
   18504:	ldr	r0, [fp, #-12]
   18508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1850c:	ldr	r1, [r1]
   18510:	cmp	r0, r1
   18514:	beq	18548 <__assert_fail@plt+0x6cd4>
   18518:	ldr	r0, [fp, #-8]
   1851c:	ldr	r0, [r0, #28]
   18520:	ldr	r1, [fp, #-12]
   18524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18528:	ldr	r2, [r2]
   1852c:	str	r0, [sp, #8]
   18530:	mov	r0, r1
   18534:	mov	r1, r2
   18538:	ldr	r2, [sp, #8]
   1853c:	blx	r2
   18540:	tst	r0, #1
   18544:	beq	185c4 <__assert_fail@plt+0x6d50>
   18548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1854c:	ldr	r0, [r0]
   18550:	str	r0, [sp, #24]
   18554:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18558:	tst	r0, #1
   1855c:	beq	185b8 <__assert_fail@plt+0x6d44>
   18560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18564:	ldr	r0, [r0, #4]
   18568:	movw	r1, #0
   1856c:	cmp	r0, r1
   18570:	beq	185a8 <__assert_fail@plt+0x6d34>
   18574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18578:	ldr	r0, [r0, #4]
   1857c:	str	r0, [sp, #20]
   18580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18584:	ldr	r1, [sp, #20]
   18588:	ldr	r2, [r1]
   1858c:	str	r2, [r0]
   18590:	ldr	r1, [r1, #4]
   18594:	str	r1, [r0, #4]
   18598:	ldr	r0, [fp, #-8]
   1859c:	ldr	r1, [sp, #20]
   185a0:	bl	18af8 <__assert_fail@plt+0x7284>
   185a4:	b	185b4 <__assert_fail@plt+0x6d40>
   185a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185ac:	movw	r1, #0
   185b0:	str	r1, [r0]
   185b4:	b	185b8 <__assert_fail@plt+0x6d44>
   185b8:	ldr	r0, [sp, #24]
   185bc:	str	r0, [fp, #-4]
   185c0:	b	18698 <__assert_fail@plt+0x6e24>
   185c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c8:	str	r0, [sp, #28]
   185cc:	ldr	r0, [sp, #28]
   185d0:	ldr	r0, [r0, #4]
   185d4:	movw	r1, #0
   185d8:	cmp	r0, r1
   185dc:	beq	18690 <__assert_fail@plt+0x6e1c>
   185e0:	ldr	r0, [fp, #-12]
   185e4:	ldr	r1, [sp, #28]
   185e8:	ldr	r1, [r1, #4]
   185ec:	ldr	r1, [r1]
   185f0:	cmp	r0, r1
   185f4:	beq	1862c <__assert_fail@plt+0x6db8>
   185f8:	ldr	r0, [fp, #-8]
   185fc:	ldr	r0, [r0, #28]
   18600:	ldr	r1, [fp, #-12]
   18604:	ldr	r2, [sp, #28]
   18608:	ldr	r2, [r2, #4]
   1860c:	ldr	r2, [r2]
   18610:	str	r0, [sp, #4]
   18614:	mov	r0, r1
   18618:	mov	r1, r2
   1861c:	ldr	r2, [sp, #4]
   18620:	blx	r2
   18624:	tst	r0, #1
   18628:	beq	1867c <__assert_fail@plt+0x6e08>
   1862c:	ldr	r0, [sp, #28]
   18630:	ldr	r0, [r0, #4]
   18634:	ldr	r0, [r0]
   18638:	str	r0, [sp, #16]
   1863c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18640:	tst	r0, #1
   18644:	beq	18670 <__assert_fail@plt+0x6dfc>
   18648:	ldr	r0, [sp, #28]
   1864c:	ldr	r0, [r0, #4]
   18650:	str	r0, [sp, #12]
   18654:	ldr	r0, [sp, #12]
   18658:	ldr	r0, [r0, #4]
   1865c:	ldr	r1, [sp, #28]
   18660:	str	r0, [r1, #4]
   18664:	ldr	r0, [fp, #-8]
   18668:	ldr	r1, [sp, #12]
   1866c:	bl	18af8 <__assert_fail@plt+0x7284>
   18670:	ldr	r0, [sp, #16]
   18674:	str	r0, [fp, #-4]
   18678:	b	18698 <__assert_fail@plt+0x6e24>
   1867c:	b	18680 <__assert_fail@plt+0x6e0c>
   18680:	ldr	r0, [sp, #28]
   18684:	ldr	r0, [r0, #4]
   18688:	str	r0, [sp, #28]
   1868c:	b	185cc <__assert_fail@plt+0x6d58>
   18690:	movw	r0, #0
   18694:	str	r0, [fp, #-4]
   18698:	ldr	r0, [fp, #-4]
   1869c:	mov	sp, fp
   186a0:	pop	{fp, pc}
   186a4:	push	{fp, lr}
   186a8:	mov	fp, sp
   186ac:	sub	sp, sp, #8
   186b0:	str	r0, [sp, #4]
   186b4:	ldr	r0, [sp, #4]
   186b8:	ldr	r0, [r0, #36]	; 0x24
   186bc:	movw	r1, #0
   186c0:	cmp	r0, r1
   186c4:	beq	186e8 <__assert_fail@plt+0x6e74>
   186c8:	ldr	r0, [sp, #4]
   186cc:	ldr	r0, [r0, #36]	; 0x24
   186d0:	str	r0, [sp]
   186d4:	ldr	r0, [sp]
   186d8:	ldr	r0, [r0, #4]
   186dc:	ldr	r1, [sp, #4]
   186e0:	str	r0, [r1, #36]	; 0x24
   186e4:	b	186f4 <__assert_fail@plt+0x6e80>
   186e8:	movw	r0, #8
   186ec:	bl	1faac <__assert_fail@plt+0xe238>
   186f0:	str	r0, [sp]
   186f4:	ldr	r0, [sp]
   186f8:	mov	sp, fp
   186fc:	pop	{fp, pc}
   18700:	push	{fp, lr}
   18704:	mov	fp, sp
   18708:	sub	sp, sp, #24
   1870c:	str	r0, [fp, #-4]
   18710:	str	r1, [fp, #-8]
   18714:	ldr	r0, [fp, #-4]
   18718:	ldr	r1, [fp, #-8]
   1871c:	add	r2, sp, #12
   18720:	bl	181f8 <__assert_fail@plt+0x6984>
   18724:	str	r0, [sp, #8]
   18728:	ldr	r0, [sp, #8]
   1872c:	cmn	r0, #1
   18730:	bne	18740 <__assert_fail@plt+0x6ecc>
   18734:	movw	r0, #0
   18738:	str	r0, [sp, #4]
   1873c:	b	18768 <__assert_fail@plt+0x6ef4>
   18740:	ldr	r0, [sp, #8]
   18744:	cmp	r0, #0
   18748:	bne	18758 <__assert_fail@plt+0x6ee4>
   1874c:	ldr	r0, [sp, #12]
   18750:	str	r0, [sp]
   18754:	b	18760 <__assert_fail@plt+0x6eec>
   18758:	ldr	r0, [fp, #-8]
   1875c:	str	r0, [sp]
   18760:	ldr	r0, [sp]
   18764:	str	r0, [sp, #4]
   18768:	ldr	r0, [sp, #4]
   1876c:	mov	sp, fp
   18770:	pop	{fp, pc}
   18774:	push	{fp, lr}
   18778:	mov	fp, sp
   1877c:	sub	sp, sp, #48	; 0x30
   18780:	str	r0, [fp, #-8]
   18784:	str	r1, [fp, #-12]
   18788:	ldr	r0, [fp, #-8]
   1878c:	ldr	r1, [fp, #-12]
   18790:	sub	r2, fp, #20
   18794:	movw	r3, #1
   18798:	and	r3, r3, #1
   1879c:	bl	184a8 <__assert_fail@plt+0x6c34>
   187a0:	str	r0, [fp, #-16]
   187a4:	ldr	r0, [fp, #-16]
   187a8:	movw	r1, #0
   187ac:	cmp	r0, r1
   187b0:	bne	187c0 <__assert_fail@plt+0x6f4c>
   187b4:	movw	r0, #0
   187b8:	str	r0, [fp, #-4]
   187bc:	b	1896c <__assert_fail@plt+0x70f8>
   187c0:	ldr	r0, [fp, #-8]
   187c4:	ldr	r1, [r0, #16]
   187c8:	mvn	r2, #0
   187cc:	add	r1, r1, r2
   187d0:	str	r1, [r0, #16]
   187d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   187d8:	ldr	r0, [r0]
   187dc:	movw	r1, #0
   187e0:	cmp	r0, r1
   187e4:	bne	18964 <__assert_fail@plt+0x70f0>
   187e8:	ldr	r0, [fp, #-8]
   187ec:	ldr	r1, [r0, #12]
   187f0:	mvn	r2, #0
   187f4:	add	r1, r1, r2
   187f8:	str	r1, [r0, #12]
   187fc:	ldr	r0, [fp, #-8]
   18800:	ldr	r0, [r0, #12]
   18804:	vmov	s0, r0
   18808:	vcvt.f32.u32	s0, s0
   1880c:	ldr	r0, [fp, #-8]
   18810:	ldr	r0, [r0, #20]
   18814:	vldr	s2, [r0]
   18818:	ldr	r0, [fp, #-8]
   1881c:	ldr	r0, [r0, #8]
   18820:	vmov	s4, r0
   18824:	vcvt.f32.u32	s4, s4
   18828:	vmul.f32	s2, s2, s4
   1882c:	vcmpe.f32	s0, s2
   18830:	vmrs	APSR_nzcv, fpscr
   18834:	bpl	18960 <__assert_fail@plt+0x70ec>
   18838:	ldr	r0, [fp, #-8]
   1883c:	bl	178d4 <__assert_fail@plt+0x6060>
   18840:	ldr	lr, [fp, #-8]
   18844:	ldr	lr, [lr, #12]
   18848:	vmov	s0, lr
   1884c:	vcvt.f32.u32	s0, s0
   18850:	ldr	lr, [fp, #-8]
   18854:	ldr	lr, [lr, #20]
   18858:	vldr	s2, [lr]
   1885c:	ldr	lr, [fp, #-8]
   18860:	ldr	lr, [lr, #8]
   18864:	vmov	s4, lr
   18868:	vcvt.f32.u32	s4, s4
   1886c:	vmul.f32	s2, s2, s4
   18870:	vcmpe.f32	s0, s2
   18874:	vmrs	APSR_nzcv, fpscr
   18878:	str	r0, [sp, #8]
   1887c:	bpl	1895c <__assert_fail@plt+0x70e8>
   18880:	ldr	r0, [fp, #-8]
   18884:	ldr	r0, [r0, #20]
   18888:	str	r0, [sp, #24]
   1888c:	ldr	r0, [sp, #24]
   18890:	ldrb	r0, [r0, #16]
   18894:	tst	r0, #1
   18898:	beq	188c0 <__assert_fail@plt+0x704c>
   1889c:	ldr	r0, [fp, #-8]
   188a0:	ldr	r0, [r0, #8]
   188a4:	vmov	s0, r0
   188a8:	vcvt.f32.u32	s0, s0
   188ac:	ldr	r0, [sp, #24]
   188b0:	vldr	s2, [r0, #4]
   188b4:	vmul.f32	s0, s0, s2
   188b8:	vstr	s0, [sp, #4]
   188bc:	b	188ec <__assert_fail@plt+0x7078>
   188c0:	ldr	r0, [fp, #-8]
   188c4:	ldr	r0, [r0, #8]
   188c8:	vmov	s0, r0
   188cc:	vcvt.f32.u32	s0, s0
   188d0:	ldr	r0, [sp, #24]
   188d4:	vldr	s2, [r0, #4]
   188d8:	vmul.f32	s0, s0, s2
   188dc:	ldr	r0, [sp, #24]
   188e0:	vldr	s2, [r0, #8]
   188e4:	vmul.f32	s0, s0, s2
   188e8:	vstr	s0, [sp, #4]
   188ec:	vldr	s0, [sp, #4]
   188f0:	vcvt.u32.f32	s0, s0
   188f4:	vmov	r0, s0
   188f8:	str	r0, [sp, #20]
   188fc:	ldr	r0, [fp, #-8]
   18900:	ldr	r1, [sp, #20]
   18904:	bl	17dbc <__assert_fail@plt+0x6548>
   18908:	tst	r0, #1
   1890c:	bne	18958 <__assert_fail@plt+0x70e4>
   18910:	ldr	r0, [fp, #-8]
   18914:	ldr	r0, [r0, #36]	; 0x24
   18918:	str	r0, [sp, #16]
   1891c:	ldr	r0, [sp, #16]
   18920:	movw	r1, #0
   18924:	cmp	r0, r1
   18928:	beq	1894c <__assert_fail@plt+0x70d8>
   1892c:	ldr	r0, [sp, #16]
   18930:	ldr	r0, [r0, #4]
   18934:	str	r0, [sp, #12]
   18938:	ldr	r0, [sp, #16]
   1893c:	bl	209b8 <__assert_fail@plt+0xf144>
   18940:	ldr	r0, [sp, #12]
   18944:	str	r0, [sp, #16]
   18948:	b	1891c <__assert_fail@plt+0x70a8>
   1894c:	ldr	r0, [fp, #-8]
   18950:	movw	r1, #0
   18954:	str	r1, [r0, #36]	; 0x24
   18958:	b	1895c <__assert_fail@plt+0x70e8>
   1895c:	b	18960 <__assert_fail@plt+0x70ec>
   18960:	b	18964 <__assert_fail@plt+0x70f0>
   18964:	ldr	r0, [fp, #-16]
   18968:	str	r0, [fp, #-4]
   1896c:	ldr	r0, [fp, #-4]
   18970:	mov	sp, fp
   18974:	pop	{fp, pc}
   18978:	push	{fp, lr}
   1897c:	mov	fp, sp
   18980:	sub	sp, sp, #8
   18984:	str	r0, [sp, #4]
   18988:	str	r1, [sp]
   1898c:	ldr	r0, [sp, #4]
   18990:	ldr	r1, [sp]
   18994:	bl	18774 <__assert_fail@plt+0x6f00>
   18998:	mov	sp, fp
   1899c:	pop	{fp, pc}
   189a0:	push	{fp, lr}
   189a4:	mov	fp, sp
   189a8:	sub	sp, sp, #8
   189ac:	str	r0, [sp, #4]
   189b0:	ldr	r0, [sp, #4]
   189b4:	cmp	r0, #10
   189b8:	bcs	189c4 <__assert_fail@plt+0x7150>
   189bc:	movw	r0, #10
   189c0:	str	r0, [sp, #4]
   189c4:	ldr	r0, [sp, #4]
   189c8:	orr	r0, r0, #1
   189cc:	str	r0, [sp, #4]
   189d0:	ldr	r0, [sp, #4]
   189d4:	mvn	r1, #0
   189d8:	cmp	r1, r0
   189dc:	movw	r0, #0
   189e0:	str	r0, [sp]
   189e4:	beq	189fc <__assert_fail@plt+0x7188>
   189e8:	ldr	r0, [sp, #4]
   189ec:	bl	18a24 <__assert_fail@plt+0x71b0>
   189f0:	mvn	lr, #0
   189f4:	eor	r0, r0, lr
   189f8:	str	r0, [sp]
   189fc:	ldr	r0, [sp]
   18a00:	tst	r0, #1
   18a04:	beq	18a18 <__assert_fail@plt+0x71a4>
   18a08:	ldr	r0, [sp, #4]
   18a0c:	add	r0, r0, #2
   18a10:	str	r0, [sp, #4]
   18a14:	b	189d0 <__assert_fail@plt+0x715c>
   18a18:	ldr	r0, [sp, #4]
   18a1c:	mov	sp, fp
   18a20:	pop	{fp, pc}
   18a24:	sub	sp, sp, #16
   18a28:	str	r0, [sp, #12]
   18a2c:	movw	r0, #3
   18a30:	str	r0, [sp, #8]
   18a34:	ldr	r0, [sp, #8]
   18a38:	ldr	r1, [sp, #8]
   18a3c:	mul	r0, r0, r1
   18a40:	str	r0, [sp, #4]
   18a44:	ldr	r0, [sp, #4]
   18a48:	ldr	r1, [sp, #12]
   18a4c:	cmp	r0, r1
   18a50:	movw	r0, #0
   18a54:	str	r0, [sp]
   18a58:	bcs	18a7c <__assert_fail@plt+0x7208>
   18a5c:	ldr	r0, [sp, #12]
   18a60:	ldr	r1, [sp, #8]
   18a64:	udiv	r2, r0, r1
   18a68:	mls	r0, r2, r1, r0
   18a6c:	cmp	r0, #0
   18a70:	movw	r0, #0
   18a74:	movne	r0, #1
   18a78:	str	r0, [sp]
   18a7c:	ldr	r0, [sp]
   18a80:	tst	r0, #1
   18a84:	beq	18ab8 <__assert_fail@plt+0x7244>
   18a88:	ldr	r0, [sp, #8]
   18a8c:	add	r0, r0, #1
   18a90:	str	r0, [sp, #8]
   18a94:	ldr	r0, [sp, #8]
   18a98:	lsl	r0, r0, #2
   18a9c:	ldr	r1, [sp, #4]
   18aa0:	add	r0, r1, r0
   18aa4:	str	r0, [sp, #4]
   18aa8:	ldr	r0, [sp, #8]
   18aac:	add	r0, r0, #1
   18ab0:	str	r0, [sp, #8]
   18ab4:	b	18a44 <__assert_fail@plt+0x71d0>
   18ab8:	ldr	r0, [sp, #12]
   18abc:	ldr	r1, [sp, #8]
   18ac0:	udiv	r2, r0, r1
   18ac4:	mls	r0, r2, r1, r0
   18ac8:	cmp	r0, #0
   18acc:	movw	r0, #0
   18ad0:	movne	r0, #1
   18ad4:	tst	r0, #1
   18ad8:	movw	r0, #1
   18adc:	moveq	r0, #0
   18ae0:	cmp	r0, #0
   18ae4:	movw	r0, #0
   18ae8:	movne	r0, #1
   18aec:	and	r0, r0, #1
   18af0:	add	sp, sp, #16
   18af4:	bx	lr
   18af8:	sub	sp, sp, #8
   18afc:	str	r0, [sp, #4]
   18b00:	str	r1, [sp]
   18b04:	ldr	r0, [sp]
   18b08:	movw	r1, #0
   18b0c:	str	r1, [r0]
   18b10:	ldr	r0, [sp, #4]
   18b14:	ldr	r0, [r0, #36]	; 0x24
   18b18:	ldr	r1, [sp]
   18b1c:	str	r0, [r1, #4]
   18b20:	ldr	r0, [sp]
   18b24:	ldr	r1, [sp, #4]
   18b28:	str	r0, [r1, #36]	; 0x24
   18b2c:	add	sp, sp, #8
   18b30:	bx	lr
   18b34:	sub	sp, sp, #12
   18b38:	str	r0, [sp, #8]
   18b3c:	str	r1, [sp, #4]
   18b40:	ldr	r0, [sp, #8]
   18b44:	movw	r1, #1
   18b48:	strb	r1, [r0, #28]
   18b4c:	ldr	r0, [sp, #8]
   18b50:	movw	r1, #0
   18b54:	str	r1, [r0, #20]
   18b58:	ldr	r0, [sp, #8]
   18b5c:	str	r1, [r0, #24]
   18b60:	str	r1, [sp]
   18b64:	ldr	r0, [sp]
   18b68:	cmp	r0, #4
   18b6c:	bge	18b94 <__assert_fail@plt+0x7320>
   18b70:	ldr	r0, [sp, #4]
   18b74:	ldr	r1, [sp, #8]
   18b78:	ldr	r2, [sp]
   18b7c:	add	r1, r1, r2, lsl #2
   18b80:	str	r0, [r1]
   18b84:	ldr	r0, [sp]
   18b88:	add	r0, r0, #1
   18b8c:	str	r0, [sp]
   18b90:	b	18b64 <__assert_fail@plt+0x72f0>
   18b94:	ldr	r0, [sp, #4]
   18b98:	ldr	r1, [sp, #8]
   18b9c:	str	r0, [r1, #16]
   18ba0:	add	sp, sp, #12
   18ba4:	bx	lr
   18ba8:	sub	sp, sp, #4
   18bac:	str	r0, [sp]
   18bb0:	ldr	r0, [sp]
   18bb4:	ldrb	r0, [r0, #28]
   18bb8:	and	r0, r0, #1
   18bbc:	add	sp, sp, #4
   18bc0:	bx	lr
   18bc4:	sub	sp, sp, #16
   18bc8:	str	r0, [sp, #12]
   18bcc:	str	r1, [sp, #8]
   18bd0:	ldr	r0, [sp, #12]
   18bd4:	ldr	r1, [r0, #20]
   18bd8:	ldrb	r0, [r0, #28]
   18bdc:	mov	r2, #1
   18be0:	bic	r0, r2, r0
   18be4:	add	r0, r1, r0
   18be8:	and	r0, r0, #3
   18bec:	str	r0, [sp, #4]
   18bf0:	ldr	r0, [sp, #12]
   18bf4:	ldr	r1, [sp, #4]
   18bf8:	ldr	r0, [r0, r1, lsl #2]
   18bfc:	str	r0, [sp]
   18c00:	ldr	r0, [sp, #8]
   18c04:	ldr	r1, [sp, #12]
   18c08:	ldr	r2, [sp, #4]
   18c0c:	add	r1, r1, r2, lsl #2
   18c10:	str	r0, [r1]
   18c14:	ldr	r0, [sp, #4]
   18c18:	ldr	r1, [sp, #12]
   18c1c:	str	r0, [r1, #20]
   18c20:	ldr	r0, [sp, #4]
   18c24:	ldr	r1, [sp, #12]
   18c28:	ldr	r1, [r1, #24]
   18c2c:	cmp	r0, r1
   18c30:	bne	18c60 <__assert_fail@plt+0x73ec>
   18c34:	ldr	r0, [sp, #12]
   18c38:	ldr	r0, [r0, #24]
   18c3c:	ldr	r1, [sp, #12]
   18c40:	ldrb	r1, [r1, #28]
   18c44:	mvn	r2, #0
   18c48:	eor	r1, r1, r2
   18c4c:	and	r1, r1, #1
   18c50:	add	r0, r0, r1
   18c54:	and	r0, r0, #3
   18c58:	ldr	r1, [sp, #12]
   18c5c:	str	r0, [r1, #24]
   18c60:	ldr	r0, [sp, #12]
   18c64:	movw	r1, #0
   18c68:	strb	r1, [r0, #28]
   18c6c:	ldr	r0, [sp]
   18c70:	add	sp, sp, #16
   18c74:	bx	lr
   18c78:	push	{fp, lr}
   18c7c:	mov	fp, sp
   18c80:	sub	sp, sp, #8
   18c84:	str	r0, [sp, #4]
   18c88:	ldr	r0, [sp, #4]
   18c8c:	bl	18ba8 <__assert_fail@plt+0x7334>
   18c90:	tst	r0, #1
   18c94:	beq	18c9c <__assert_fail@plt+0x7428>
   18c98:	bl	11838 <abort@plt>
   18c9c:	ldr	r0, [sp, #4]
   18ca0:	ldr	r1, [r0, #20]
   18ca4:	ldr	r0, [r0, r1, lsl #2]
   18ca8:	str	r0, [sp]
   18cac:	ldr	r0, [sp, #4]
   18cb0:	ldr	r1, [r0, #16]
   18cb4:	ldr	r2, [r0, #20]
   18cb8:	add	r0, r0, r2, lsl #2
   18cbc:	str	r1, [r0]
   18cc0:	ldr	r0, [sp, #4]
   18cc4:	ldr	r0, [r0, #20]
   18cc8:	ldr	r1, [sp, #4]
   18ccc:	ldr	r1, [r1, #24]
   18cd0:	cmp	r0, r1
   18cd4:	bne	18ce8 <__assert_fail@plt+0x7474>
   18cd8:	ldr	r0, [sp, #4]
   18cdc:	movw	r1, #1
   18ce0:	strb	r1, [r0, #28]
   18ce4:	b	18d04 <__assert_fail@plt+0x7490>
   18ce8:	ldr	r0, [sp, #4]
   18cec:	ldr	r0, [r0, #20]
   18cf0:	add	r0, r0, #4
   18cf4:	sub	r0, r0, #1
   18cf8:	and	r0, r0, #3
   18cfc:	ldr	r1, [sp, #4]
   18d00:	str	r0, [r1, #20]
   18d04:	ldr	r0, [sp]
   18d08:	mov	sp, fp
   18d0c:	pop	{fp, pc}
   18d10:	sub	sp, sp, #4
   18d14:	push	{fp, lr}
   18d18:	mov	fp, sp
   18d1c:	sub	sp, sp, #28
   18d20:	str	r3, [fp, #8]
   18d24:	str	r0, [fp, #-4]
   18d28:	str	r1, [fp, #-8]
   18d2c:	str	r2, [fp, #-12]
   18d30:	movw	r0, #0
   18d34:	str	r0, [sp, #12]
   18d38:	ldr	r0, [fp, #-12]
   18d3c:	and	r0, r0, #64	; 0x40
   18d40:	cmp	r0, #0
   18d44:	beq	18d70 <__assert_fail@plt+0x74fc>
   18d48:	add	r0, sp, #8
   18d4c:	mov	r1, r0
   18d50:	add	r2, fp, #8
   18d54:	str	r2, [r1]
   18d58:	ldr	r1, [sp, #8]
   18d5c:	add	r2, r1, #4
   18d60:	str	r2, [sp, #8]
   18d64:	ldr	r1, [r1]
   18d68:	str	r1, [sp, #12]
   18d6c:	str	r0, [sp, #4]
   18d70:	ldr	r0, [fp, #-4]
   18d74:	ldr	r1, [fp, #-8]
   18d78:	ldr	r2, [fp, #-12]
   18d7c:	ldr	r3, [sp, #12]
   18d80:	bl	116dc <openat64@plt>
   18d84:	bl	1c130 <__assert_fail@plt+0xa8bc>
   18d88:	mov	sp, fp
   18d8c:	pop	{fp, lr}
   18d90:	add	sp, sp, #4
   18d94:	bx	lr
   18d98:	push	{fp, lr}
   18d9c:	mov	fp, sp
   18da0:	sub	sp, sp, #48	; 0x30
   18da4:	ldr	ip, [pc, #176]	; 18e5c <__assert_fail@plt+0x75e8>
   18da8:	str	r0, [fp, #-8]
   18dac:	str	r1, [fp, #-12]
   18db0:	str	r2, [fp, #-16]
   18db4:	str	r3, [fp, #-20]	; 0xffffffec
   18db8:	ldr	r0, [fp, #-16]
   18dbc:	orr	r0, r0, ip
   18dc0:	str	r0, [sp, #24]
   18dc4:	ldr	r0, [fp, #-8]
   18dc8:	ldr	r1, [fp, #-12]
   18dcc:	ldr	r2, [sp, #24]
   18dd0:	bl	18d10 <__assert_fail@plt+0x749c>
   18dd4:	str	r0, [sp, #20]
   18dd8:	ldr	r0, [sp, #20]
   18ddc:	cmp	r0, #0
   18de0:	bge	18df0 <__assert_fail@plt+0x757c>
   18de4:	movw	r0, #0
   18de8:	str	r0, [fp, #-4]
   18dec:	b	18e50 <__assert_fail@plt+0x75dc>
   18df0:	ldr	r0, [sp, #20]
   18df4:	bl	117b4 <fdopendir@plt>
   18df8:	str	r0, [sp, #16]
   18dfc:	ldr	r0, [sp, #16]
   18e00:	movw	lr, #0
   18e04:	cmp	r0, lr
   18e08:	beq	18e1c <__assert_fail@plt+0x75a8>
   18e0c:	ldr	r0, [sp, #20]
   18e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   18e14:	str	r0, [r1]
   18e18:	b	18e48 <__assert_fail@plt+0x75d4>
   18e1c:	bl	11700 <__errno_location@plt>
   18e20:	ldr	r0, [r0]
   18e24:	str	r0, [sp, #12]
   18e28:	ldr	r0, [sp, #20]
   18e2c:	bl	11844 <close@plt>
   18e30:	ldr	lr, [sp, #12]
   18e34:	str	r0, [sp, #8]
   18e38:	str	lr, [sp, #4]
   18e3c:	bl	11700 <__errno_location@plt>
   18e40:	ldr	lr, [sp, #4]
   18e44:	str	lr, [r0]
   18e48:	ldr	r0, [sp, #16]
   18e4c:	str	r0, [fp, #-4]
   18e50:	ldr	r0, [fp, #-4]
   18e54:	mov	sp, fp
   18e58:	pop	{fp, pc}
   18e5c:	andeq	r4, r8, r0, lsl #18
   18e60:	push	{fp, lr}
   18e64:	mov	fp, sp
   18e68:	sub	sp, sp, #24
   18e6c:	str	r0, [fp, #-4]
   18e70:	ldr	r0, [fp, #-4]
   18e74:	movw	r1, #0
   18e78:	cmp	r0, r1
   18e7c:	bne	18ea0 <__assert_fail@plt+0x762c>
   18e80:	movw	r0, #20928	; 0x51c0
   18e84:	movt	r0, #3
   18e88:	ldr	r1, [r0]
   18e8c:	movw	r0, #16928	; 0x4220
   18e90:	movt	r0, #2
   18e94:	bl	11820 <fputs@plt>
   18e98:	str	r0, [sp, #8]
   18e9c:	bl	11838 <abort@plt>
   18ea0:	ldr	r0, [fp, #-4]
   18ea4:	movw	r1, #47	; 0x2f
   18ea8:	bl	11784 <strrchr@plt>
   18eac:	str	r0, [fp, #-8]
   18eb0:	ldr	r0, [fp, #-8]
   18eb4:	movw	r1, #0
   18eb8:	cmp	r0, r1
   18ebc:	beq	18ed0 <__assert_fail@plt+0x765c>
   18ec0:	ldr	r0, [fp, #-8]
   18ec4:	add	r0, r0, #1
   18ec8:	str	r0, [sp, #4]
   18ecc:	b	18ed8 <__assert_fail@plt+0x7664>
   18ed0:	ldr	r0, [fp, #-4]
   18ed4:	str	r0, [sp, #4]
   18ed8:	ldr	r0, [sp, #4]
   18edc:	str	r0, [sp, #12]
   18ee0:	ldr	r0, [sp, #12]
   18ee4:	ldr	r1, [fp, #-4]
   18ee8:	sub	r0, r0, r1
   18eec:	cmp	r0, #7
   18ef0:	blt	18f5c <__assert_fail@plt+0x76e8>
   18ef4:	ldr	r0, [sp, #12]
   18ef8:	mvn	r1, #6
   18efc:	add	r0, r0, r1
   18f00:	movw	r1, #16984	; 0x4258
   18f04:	movt	r1, #2
   18f08:	movw	r2, #7
   18f0c:	bl	1182c <strncmp@plt>
   18f10:	cmp	r0, #0
   18f14:	bne	18f5c <__assert_fail@plt+0x76e8>
   18f18:	ldr	r0, [sp, #12]
   18f1c:	str	r0, [fp, #-4]
   18f20:	ldr	r0, [sp, #12]
   18f24:	movw	r1, #16992	; 0x4260
   18f28:	movt	r1, #2
   18f2c:	movw	r2, #3
   18f30:	bl	1182c <strncmp@plt>
   18f34:	cmp	r0, #0
   18f38:	bne	18f58 <__assert_fail@plt+0x76e4>
   18f3c:	ldr	r0, [sp, #12]
   18f40:	add	r0, r0, #3
   18f44:	str	r0, [fp, #-4]
   18f48:	ldr	r0, [fp, #-4]
   18f4c:	movw	r1, #20912	; 0x51b0
   18f50:	movt	r1, #3
   18f54:	str	r0, [r1]
   18f58:	b	18f5c <__assert_fail@plt+0x76e8>
   18f5c:	ldr	r0, [fp, #-4]
   18f60:	movw	r1, #21004	; 0x520c
   18f64:	movt	r1, #3
   18f68:	str	r0, [r1]
   18f6c:	ldr	r0, [fp, #-4]
   18f70:	movw	r1, #20916	; 0x51b4
   18f74:	movt	r1, #3
   18f78:	str	r0, [r1]
   18f7c:	mov	sp, fp
   18f80:	pop	{fp, pc}
   18f84:	push	{fp, lr}
   18f88:	mov	fp, sp
   18f8c:	sub	sp, sp, #24
   18f90:	str	r0, [fp, #-4]
   18f94:	bl	11700 <__errno_location@plt>
   18f98:	ldr	r0, [r0]
   18f9c:	str	r0, [fp, #-8]
   18fa0:	ldr	r0, [fp, #-4]
   18fa4:	movw	lr, #0
   18fa8:	cmp	r0, lr
   18fac:	beq	18fbc <__assert_fail@plt+0x7748>
   18fb0:	ldr	r0, [fp, #-4]
   18fb4:	str	r0, [sp, #8]
   18fb8:	b	18fcc <__assert_fail@plt+0x7758>
   18fbc:	movw	r0, #21008	; 0x5210
   18fc0:	movt	r0, #3
   18fc4:	str	r0, [sp, #8]
   18fc8:	b	18fcc <__assert_fail@plt+0x7758>
   18fcc:	ldr	r0, [sp, #8]
   18fd0:	movw	r1, #48	; 0x30
   18fd4:	bl	1f798 <__assert_fail@plt+0xdf24>
   18fd8:	str	r0, [sp, #12]
   18fdc:	ldr	r0, [fp, #-8]
   18fe0:	str	r0, [sp, #4]
   18fe4:	bl	11700 <__errno_location@plt>
   18fe8:	ldr	r1, [sp, #4]
   18fec:	str	r1, [r0]
   18ff0:	ldr	r0, [sp, #12]
   18ff4:	mov	sp, fp
   18ff8:	pop	{fp, pc}
   18ffc:	sub	sp, sp, #8
   19000:	str	r0, [sp, #4]
   19004:	ldr	r0, [sp, #4]
   19008:	movw	r1, #0
   1900c:	cmp	r0, r1
   19010:	beq	19020 <__assert_fail@plt+0x77ac>
   19014:	ldr	r0, [sp, #4]
   19018:	str	r0, [sp]
   1901c:	b	19030 <__assert_fail@plt+0x77bc>
   19020:	movw	r0, #21008	; 0x5210
   19024:	movt	r0, #3
   19028:	str	r0, [sp]
   1902c:	b	19030 <__assert_fail@plt+0x77bc>
   19030:	ldr	r0, [sp]
   19034:	ldr	r0, [r0]
   19038:	add	sp, sp, #8
   1903c:	bx	lr
   19040:	sub	sp, sp, #16
   19044:	str	r0, [sp, #12]
   19048:	str	r1, [sp, #8]
   1904c:	ldr	r0, [sp, #8]
   19050:	ldr	r1, [sp, #12]
   19054:	movw	r2, #0
   19058:	cmp	r1, r2
   1905c:	str	r0, [sp, #4]
   19060:	beq	19070 <__assert_fail@plt+0x77fc>
   19064:	ldr	r0, [sp, #12]
   19068:	str	r0, [sp]
   1906c:	b	19080 <__assert_fail@plt+0x780c>
   19070:	movw	r0, #21008	; 0x5210
   19074:	movt	r0, #3
   19078:	str	r0, [sp]
   1907c:	b	19080 <__assert_fail@plt+0x780c>
   19080:	ldr	r0, [sp]
   19084:	ldr	r1, [sp, #4]
   19088:	str	r1, [r0]
   1908c:	add	sp, sp, #16
   19090:	bx	lr
   19094:	sub	sp, sp, #32
   19098:	str	r0, [sp, #28]
   1909c:	strb	r1, [sp, #27]
   190a0:	str	r2, [sp, #20]
   190a4:	ldrb	r0, [sp, #27]
   190a8:	strb	r0, [sp, #19]
   190ac:	ldr	r0, [sp, #28]
   190b0:	movw	r1, #0
   190b4:	cmp	r0, r1
   190b8:	beq	190c8 <__assert_fail@plt+0x7854>
   190bc:	ldr	r0, [sp, #28]
   190c0:	str	r0, [sp]
   190c4:	b	190d8 <__assert_fail@plt+0x7864>
   190c8:	movw	r0, #21008	; 0x5210
   190cc:	movt	r0, #3
   190d0:	str	r0, [sp]
   190d4:	b	190d8 <__assert_fail@plt+0x7864>
   190d8:	ldr	r0, [sp]
   190dc:	add	r0, r0, #8
   190e0:	ldrb	r1, [sp, #19]
   190e4:	lsr	r1, r1, #5
   190e8:	add	r0, r0, r1, lsl #2
   190ec:	str	r0, [sp, #12]
   190f0:	ldrb	r0, [sp, #19]
   190f4:	and	r0, r0, #31
   190f8:	str	r0, [sp, #8]
   190fc:	ldr	r0, [sp, #12]
   19100:	ldr	r0, [r0]
   19104:	ldr	r1, [sp, #8]
   19108:	lsr	r0, r0, r1
   1910c:	and	r0, r0, #1
   19110:	str	r0, [sp, #4]
   19114:	ldr	r0, [sp, #20]
   19118:	and	r0, r0, #1
   1911c:	ldr	r1, [sp, #4]
   19120:	eor	r0, r0, r1
   19124:	ldr	r1, [sp, #8]
   19128:	lsl	r0, r0, r1
   1912c:	ldr	r1, [sp, #12]
   19130:	ldr	r2, [r1]
   19134:	eor	r0, r2, r0
   19138:	str	r0, [r1]
   1913c:	ldr	r0, [sp, #4]
   19140:	add	sp, sp, #32
   19144:	bx	lr
   19148:	sub	sp, sp, #12
   1914c:	str	r0, [sp, #8]
   19150:	str	r1, [sp, #4]
   19154:	ldr	r0, [sp, #8]
   19158:	movw	r1, #0
   1915c:	cmp	r0, r1
   19160:	bne	19170 <__assert_fail@plt+0x78fc>
   19164:	movw	r0, #21008	; 0x5210
   19168:	movt	r0, #3
   1916c:	str	r0, [sp, #8]
   19170:	ldr	r0, [sp, #8]
   19174:	ldr	r0, [r0, #4]
   19178:	str	r0, [sp]
   1917c:	ldr	r0, [sp, #4]
   19180:	ldr	r1, [sp, #8]
   19184:	str	r0, [r1, #4]
   19188:	ldr	r0, [sp]
   1918c:	add	sp, sp, #12
   19190:	bx	lr
   19194:	push	{fp, lr}
   19198:	mov	fp, sp
   1919c:	sub	sp, sp, #16
   191a0:	str	r0, [fp, #-4]
   191a4:	str	r1, [sp, #8]
   191a8:	str	r2, [sp, #4]
   191ac:	ldr	r0, [fp, #-4]
   191b0:	movw	r1, #0
   191b4:	cmp	r0, r1
   191b8:	bne	191c8 <__assert_fail@plt+0x7954>
   191bc:	movw	r0, #21008	; 0x5210
   191c0:	movt	r0, #3
   191c4:	str	r0, [fp, #-4]
   191c8:	ldr	r0, [fp, #-4]
   191cc:	movw	r1, #10
   191d0:	str	r1, [r0]
   191d4:	ldr	r0, [sp, #8]
   191d8:	movw	r1, #0
   191dc:	cmp	r0, r1
   191e0:	beq	191f4 <__assert_fail@plt+0x7980>
   191e4:	ldr	r0, [sp, #4]
   191e8:	movw	r1, #0
   191ec:	cmp	r0, r1
   191f0:	bne	191f8 <__assert_fail@plt+0x7984>
   191f4:	bl	11838 <abort@plt>
   191f8:	ldr	r0, [sp, #8]
   191fc:	ldr	r1, [fp, #-4]
   19200:	str	r0, [r1, #40]	; 0x28
   19204:	ldr	r0, [sp, #4]
   19208:	ldr	r1, [fp, #-4]
   1920c:	str	r0, [r1, #44]	; 0x2c
   19210:	mov	sp, fp
   19214:	pop	{fp, pc}
   19218:	push	{r4, r5, r6, sl, fp, lr}
   1921c:	add	fp, sp, #16
   19220:	sub	sp, sp, #64	; 0x40
   19224:	ldr	ip, [fp, #8]
   19228:	str	r0, [fp, #-20]	; 0xffffffec
   1922c:	str	r1, [fp, #-24]	; 0xffffffe8
   19230:	str	r2, [fp, #-28]	; 0xffffffe4
   19234:	str	r3, [fp, #-32]	; 0xffffffe0
   19238:	ldr	r0, [fp, #8]
   1923c:	movw	r1, #0
   19240:	cmp	r0, r1
   19244:	str	ip, [sp, #32]
   19248:	beq	19258 <__assert_fail@plt+0x79e4>
   1924c:	ldr	r0, [fp, #8]
   19250:	str	r0, [sp, #28]
   19254:	b	19268 <__assert_fail@plt+0x79f4>
   19258:	movw	r0, #21008	; 0x5210
   1925c:	movt	r0, #3
   19260:	str	r0, [sp, #28]
   19264:	b	19268 <__assert_fail@plt+0x79f4>
   19268:	ldr	r0, [sp, #28]
   1926c:	str	r0, [fp, #-36]	; 0xffffffdc
   19270:	bl	11700 <__errno_location@plt>
   19274:	ldr	r0, [r0]
   19278:	str	r0, [sp, #40]	; 0x28
   1927c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19280:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19284:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1928c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19290:	ldr	lr, [lr]
   19294:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19298:	ldr	ip, [ip, #4]
   1929c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   192a0:	add	r4, r4, #8
   192a4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   192a8:	ldr	r5, [r5, #40]	; 0x28
   192ac:	ldr	r6, [fp, #-36]	; 0xffffffdc
   192b0:	ldr	r6, [r6, #44]	; 0x2c
   192b4:	str	lr, [sp]
   192b8:	str	ip, [sp, #4]
   192bc:	str	r4, [sp, #8]
   192c0:	str	r5, [sp, #12]
   192c4:	str	r6, [sp, #16]
   192c8:	bl	192f0 <__assert_fail@plt+0x7a7c>
   192cc:	str	r0, [sp, #36]	; 0x24
   192d0:	ldr	r0, [sp, #40]	; 0x28
   192d4:	str	r0, [sp, #24]
   192d8:	bl	11700 <__errno_location@plt>
   192dc:	ldr	r1, [sp, #24]
   192e0:	str	r1, [r0]
   192e4:	ldr	r0, [sp, #36]	; 0x24
   192e8:	sub	sp, fp, #16
   192ec:	pop	{r4, r5, r6, sl, fp, pc}
   192f0:	push	{r4, r5, r6, sl, fp, lr}
   192f4:	add	fp, sp, #16
   192f8:	sub	sp, sp, #168	; 0xa8
   192fc:	ldr	ip, [fp, #24]
   19300:	ldr	lr, [fp, #20]
   19304:	ldr	r4, [fp, #16]
   19308:	ldr	r5, [fp, #12]
   1930c:	ldr	r6, [fp, #8]
   19310:	str	r0, [fp, #-24]	; 0xffffffe8
   19314:	str	r1, [fp, #-28]	; 0xffffffe4
   19318:	str	r2, [fp, #-32]	; 0xffffffe0
   1931c:	str	r3, [fp, #-36]	; 0xffffffdc
   19320:	movw	r0, #0
   19324:	str	r0, [fp, #-44]	; 0xffffffd4
   19328:	str	r0, [fp, #-48]	; 0xffffffd0
   1932c:	str	r0, [fp, #-52]	; 0xffffffcc
   19330:	str	r0, [fp, #-56]	; 0xffffffc8
   19334:	movw	r0, #0
   19338:	strb	r0, [fp, #-57]	; 0xffffffc7
   1933c:	str	r6, [sp, #80]	; 0x50
   19340:	str	lr, [sp, #76]	; 0x4c
   19344:	str	r4, [sp, #72]	; 0x48
   19348:	str	r5, [sp, #68]	; 0x44
   1934c:	str	ip, [sp, #64]	; 0x40
   19350:	bl	115d4 <__ctype_get_mb_cur_max@plt>
   19354:	cmp	r0, #1
   19358:	movw	r0, #0
   1935c:	moveq	r0, #1
   19360:	and	r0, r0, #1
   19364:	strb	r0, [fp, #-58]	; 0xffffffc6
   19368:	ldr	r0, [fp, #12]
   1936c:	and	r0, r0, #2
   19370:	cmp	r0, #0
   19374:	movw	r0, #0
   19378:	movne	r0, #1
   1937c:	and	r0, r0, #1
   19380:	strb	r0, [fp, #-59]	; 0xffffffc5
   19384:	movw	r0, #0
   19388:	strb	r0, [fp, #-60]	; 0xffffffc4
   1938c:	strb	r0, [fp, #-61]	; 0xffffffc3
   19390:	movw	r0, #1
   19394:	strb	r0, [fp, #-62]	; 0xffffffc2
   19398:	ldr	r0, [fp, #8]
   1939c:	cmp	r0, #10
   193a0:	str	r0, [sp, #60]	; 0x3c
   193a4:	bhi	195cc <__assert_fail@plt+0x7d58>
   193a8:	add	r0, pc, #8
   193ac:	ldr	r1, [sp, #60]	; 0x3c
   193b0:	ldr	r0, [r0, r1, lsl #2]
   193b4:	mov	pc, r0
   193b8:	andeq	r9, r1, r0, asr #11
   193bc:	andeq	r9, r1, ip, lsr r5
   193c0:	andeq	r9, r1, ip, asr r5
   193c4:	andeq	r9, r1, r4, lsr r5
   193c8:	andeq	r9, r1, r4, asr #10
   193cc:	strdeq	r9, [r1], -r4
   193d0:	andeq	r9, r1, r4, ror #7
   193d4:	andeq	r9, r1, r8, asr r4
   193d8:	andeq	r9, r1, ip, ror #8
   193dc:	andeq	r9, r1, ip, ror #8
   193e0:	andeq	r9, r1, ip, ror #8
   193e4:	movw	r0, #5
   193e8:	str	r0, [fp, #8]
   193ec:	movw	r0, #1
   193f0:	strb	r0, [fp, #-59]	; 0xffffffc5
   193f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   193f8:	tst	r0, #1
   193fc:	bne	19438 <__assert_fail@plt+0x7bc4>
   19400:	b	19404 <__assert_fail@plt+0x7b90>
   19404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19408:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1940c:	cmp	r0, r1
   19410:	bcs	19428 <__assert_fail@plt+0x7bb4>
   19414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19418:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1941c:	add	r0, r0, r1
   19420:	movw	r1, #34	; 0x22
   19424:	strb	r1, [r0]
   19428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1942c:	add	r0, r0, #1
   19430:	str	r0, [fp, #-44]	; 0xffffffd4
   19434:	b	19438 <__assert_fail@plt+0x7bc4>
   19438:	movw	r0, #1
   1943c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19440:	movw	r0, #17072	; 0x42b0
   19444:	movt	r0, #2
   19448:	str	r0, [fp, #-52]	; 0xffffffcc
   1944c:	movw	r0, #1
   19450:	str	r0, [fp, #-56]	; 0xffffffc8
   19454:	b	195d0 <__assert_fail@plt+0x7d5c>
   19458:	movw	r0, #1
   1945c:	strb	r0, [fp, #-57]	; 0xffffffc7
   19460:	movw	r0, #0
   19464:	strb	r0, [fp, #-59]	; 0xffffffc5
   19468:	b	195d0 <__assert_fail@plt+0x7d5c>
   1946c:	ldr	r0, [fp, #8]
   19470:	cmp	r0, #10
   19474:	beq	194a0 <__assert_fail@plt+0x7c2c>
   19478:	ldr	r1, [fp, #8]
   1947c:	movw	r0, #17074	; 0x42b2
   19480:	movt	r0, #2
   19484:	bl	1b4e0 <__assert_fail@plt+0x9c6c>
   19488:	str	r0, [fp, #20]
   1948c:	ldr	r1, [fp, #8]
   19490:	movw	r0, #18437	; 0x4805
   19494:	movt	r0, #2
   19498:	bl	1b4e0 <__assert_fail@plt+0x9c6c>
   1949c:	str	r0, [fp, #24]
   194a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   194a4:	tst	r0, #1
   194a8:	bne	19514 <__assert_fail@plt+0x7ca0>
   194ac:	ldr	r0, [fp, #20]
   194b0:	str	r0, [fp, #-52]	; 0xffffffcc
   194b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194b8:	ldrsb	r0, [r0]
   194bc:	cmp	r0, #0
   194c0:	beq	19510 <__assert_fail@plt+0x7c9c>
   194c4:	b	194c8 <__assert_fail@plt+0x7c54>
   194c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   194d0:	cmp	r0, r1
   194d4:	bcs	194f0 <__assert_fail@plt+0x7c7c>
   194d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194dc:	ldrb	r0, [r0]
   194e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   194e8:	add	r1, r1, r2
   194ec:	strb	r0, [r1]
   194f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194f4:	add	r0, r0, #1
   194f8:	str	r0, [fp, #-44]	; 0xffffffd4
   194fc:	b	19500 <__assert_fail@plt+0x7c8c>
   19500:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19504:	add	r0, r0, #1
   19508:	str	r0, [fp, #-52]	; 0xffffffcc
   1950c:	b	194b4 <__assert_fail@plt+0x7c40>
   19510:	b	19514 <__assert_fail@plt+0x7ca0>
   19514:	movw	r0, #1
   19518:	strb	r0, [fp, #-57]	; 0xffffffc7
   1951c:	ldr	r0, [fp, #24]
   19520:	str	r0, [fp, #-52]	; 0xffffffcc
   19524:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19528:	bl	116d0 <strlen@plt>
   1952c:	str	r0, [fp, #-56]	; 0xffffffc8
   19530:	b	195d0 <__assert_fail@plt+0x7d5c>
   19534:	movw	r0, #1
   19538:	strb	r0, [fp, #-57]	; 0xffffffc7
   1953c:	movw	r0, #1
   19540:	strb	r0, [fp, #-59]	; 0xffffffc5
   19544:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19548:	tst	r0, #1
   1954c:	bne	19558 <__assert_fail@plt+0x7ce4>
   19550:	movw	r0, #1
   19554:	strb	r0, [fp, #-57]	; 0xffffffc7
   19558:	b	1955c <__assert_fail@plt+0x7ce8>
   1955c:	movw	r0, #2
   19560:	str	r0, [fp, #8]
   19564:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19568:	tst	r0, #1
   1956c:	bne	195a8 <__assert_fail@plt+0x7d34>
   19570:	b	19574 <__assert_fail@plt+0x7d00>
   19574:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1957c:	cmp	r0, r1
   19580:	bcs	19598 <__assert_fail@plt+0x7d24>
   19584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19588:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1958c:	add	r0, r0, r1
   19590:	movw	r1, #39	; 0x27
   19594:	strb	r1, [r0]
   19598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1959c:	add	r0, r0, #1
   195a0:	str	r0, [fp, #-44]	; 0xffffffd4
   195a4:	b	195a8 <__assert_fail@plt+0x7d34>
   195a8:	movw	r0, #18437	; 0x4805
   195ac:	movt	r0, #2
   195b0:	str	r0, [fp, #-52]	; 0xffffffcc
   195b4:	movw	r0, #1
   195b8:	str	r0, [fp, #-56]	; 0xffffffc8
   195bc:	b	195d0 <__assert_fail@plt+0x7d5c>
   195c0:	movw	r0, #0
   195c4:	strb	r0, [fp, #-59]	; 0xffffffc5
   195c8:	b	195d0 <__assert_fail@plt+0x7d5c>
   195cc:	bl	11838 <abort@plt>
   195d0:	movw	r0, #0
   195d4:	str	r0, [fp, #-40]	; 0xffffffd8
   195d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   195dc:	cmn	r0, #1
   195e0:	bne	1960c <__assert_fail@plt+0x7d98>
   195e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   195e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   195ec:	add	r0, r0, r1
   195f0:	ldrb	r0, [r0]
   195f4:	cmp	r0, #0
   195f8:	movw	r0, #0
   195fc:	moveq	r0, #1
   19600:	and	r0, r0, #1
   19604:	str	r0, [sp, #56]	; 0x38
   19608:	b	19628 <__assert_fail@plt+0x7db4>
   1960c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19610:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19614:	cmp	r0, r1
   19618:	movw	r0, #0
   1961c:	moveq	r0, #1
   19620:	and	r0, r0, #1
   19624:	str	r0, [sp, #56]	; 0x38
   19628:	ldr	r0, [sp, #56]	; 0x38
   1962c:	cmp	r0, #0
   19630:	movw	r0, #0
   19634:	movne	r0, #1
   19638:	mvn	r1, #0
   1963c:	eor	r0, r0, r1
   19640:	tst	r0, #1
   19644:	beq	1a834 <__assert_fail@plt+0x8fc0>
   19648:	movw	r0, #0
   1964c:	strb	r0, [fp, #-65]	; 0xffffffbf
   19650:	strb	r0, [fp, #-66]	; 0xffffffbe
   19654:	strb	r0, [fp, #-67]	; 0xffffffbd
   19658:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1965c:	tst	r0, #1
   19660:	beq	1970c <__assert_fail@plt+0x7e98>
   19664:	ldr	r0, [fp, #8]
   19668:	cmp	r0, #2
   1966c:	beq	1970c <__assert_fail@plt+0x7e98>
   19670:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19674:	cmp	r0, #0
   19678:	beq	1970c <__assert_fail@plt+0x7e98>
   1967c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19680:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19684:	add	r0, r0, r1
   19688:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1968c:	cmn	r1, #1
   19690:	str	r0, [sp, #52]	; 0x34
   19694:	bne	196bc <__assert_fail@plt+0x7e48>
   19698:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1969c:	movw	r1, #1
   196a0:	cmp	r1, r0
   196a4:	bcs	196bc <__assert_fail@plt+0x7e48>
   196a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   196ac:	bl	116d0 <strlen@plt>
   196b0:	str	r0, [fp, #-36]	; 0xffffffdc
   196b4:	str	r0, [sp, #48]	; 0x30
   196b8:	b	196c4 <__assert_fail@plt+0x7e50>
   196bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   196c0:	str	r0, [sp, #48]	; 0x30
   196c4:	ldr	r0, [sp, #48]	; 0x30
   196c8:	ldr	r1, [sp, #52]	; 0x34
   196cc:	cmp	r1, r0
   196d0:	bhi	1970c <__assert_fail@plt+0x7e98>
   196d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   196d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   196dc:	add	r0, r0, r1
   196e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   196e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   196e8:	bl	11550 <memcmp@plt>
   196ec:	cmp	r0, #0
   196f0:	bne	1970c <__assert_fail@plt+0x7e98>
   196f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   196f8:	tst	r0, #1
   196fc:	beq	19704 <__assert_fail@plt+0x7e90>
   19700:	b	1a9b4 <__assert_fail@plt+0x9140>
   19704:	movw	r0, #1
   19708:	strb	r0, [fp, #-65]	; 0xffffffbf
   1970c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19710:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19714:	ldrb	r0, [r0, r1]
   19718:	strb	r0, [fp, #-63]	; 0xffffffc1
   1971c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19720:	mov	r1, r0
   19724:	cmp	r0, #126	; 0x7e
   19728:	str	r1, [sp, #44]	; 0x2c
   1972c:	bhi	19f9c <__assert_fail@plt+0x8728>
   19730:	add	r0, pc, #8
   19734:	ldr	r1, [sp, #44]	; 0x2c
   19738:	ldr	r0, [r0, r1, lsl #2]
   1973c:	mov	pc, r0
   19740:	andeq	r9, r1, ip, lsr r9
   19744:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19748:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1974c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19750:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19754:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19758:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1975c:	andeq	r9, r1, r4, asr #26
   19760:	andeq	r9, r1, r0, asr sp
   19764:	andeq	r9, r1, r0, lsl #27
   19768:	andeq	r9, r1, r8, ror #26
   1976c:	andeq	r9, r1, ip, lsl #27
   19770:	andeq	r9, r1, ip, asr sp
   19774:	andeq	r9, r1, r4, ror sp
   19778:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1977c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19780:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19784:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19788:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1978c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19790:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19794:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19798:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1979c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197a0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197a4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197a8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197ac:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197b0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197b4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197b8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197bc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197c0:	andeq	r9, r1, r0, ror lr
   197c4:	andeq	r9, r1, r8, ror lr
   197c8:	andeq	r9, r1, r8, ror lr
   197cc:	andeq	r9, r1, ip, asr lr
   197d0:	andeq	r9, r1, r8, ror lr
   197d4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   197d8:	andeq	r9, r1, r8, ror lr
   197dc:	muleq	r1, r8, lr
   197e0:	andeq	r9, r1, r8, ror lr
   197e4:	andeq	r9, r1, r8, ror lr
   197e8:	andeq	r9, r1, r8, ror lr
   197ec:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   197f0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   197f4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   197f8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   197fc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19800:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19804:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19808:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1980c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19810:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19814:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19818:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1981c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19820:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19824:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19828:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1982c:	andeq	r9, r1, r8, ror lr
   19830:	andeq	r9, r1, r8, ror lr
   19834:	andeq	r9, r1, r8, ror lr
   19838:	andeq	r9, r1, r8, ror lr
   1983c:	andeq	r9, r1, r8, asr #22
   19840:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19844:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19848:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1984c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19850:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19854:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19858:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1985c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19860:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19864:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19868:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1986c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19870:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19874:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19878:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1987c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19880:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19884:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19888:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1988c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19890:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19894:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19898:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1989c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198a0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198a4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198a8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198ac:	andeq	r9, r1, r8, ror lr
   198b0:	muleq	r1, r8, sp
   198b4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198b8:	andeq	r9, r1, r8, ror lr
   198bc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198c0:	andeq	r9, r1, r8, ror lr
   198c4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198c8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198cc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198d0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198d4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198d8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198dc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198e0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198e4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198e8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198ec:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198f0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198f4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198f8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198fc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19900:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19904:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19908:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1990c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19910:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19914:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19918:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1991c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19920:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19924:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19928:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1992c:	andeq	r9, r1, r8, lsr #28
   19930:	andeq	r9, r1, r8, ror lr
   19934:	andeq	r9, r1, r8, lsr #28
   19938:	andeq	r9, r1, ip, asr lr
   1993c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19940:	tst	r0, #1
   19944:	beq	19b2c <__assert_fail@plt+0x82b8>
   19948:	b	1994c <__assert_fail@plt+0x80d8>
   1994c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19950:	tst	r0, #1
   19954:	beq	1995c <__assert_fail@plt+0x80e8>
   19958:	b	1a9b4 <__assert_fail@plt+0x9140>
   1995c:	movw	r0, #1
   19960:	strb	r0, [fp, #-66]	; 0xffffffbe
   19964:	ldr	r0, [fp, #8]
   19968:	cmp	r0, #2
   1996c:	bne	19a20 <__assert_fail@plt+0x81ac>
   19970:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19974:	tst	r0, #1
   19978:	bne	19a20 <__assert_fail@plt+0x81ac>
   1997c:	b	19980 <__assert_fail@plt+0x810c>
   19980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19984:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19988:	cmp	r0, r1
   1998c:	bcs	199a4 <__assert_fail@plt+0x8130>
   19990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19994:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19998:	add	r0, r0, r1
   1999c:	movw	r1, #39	; 0x27
   199a0:	strb	r1, [r0]
   199a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199a8:	add	r0, r0, #1
   199ac:	str	r0, [fp, #-44]	; 0xffffffd4
   199b0:	b	199b4 <__assert_fail@plt+0x8140>
   199b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199bc:	cmp	r0, r1
   199c0:	bcs	199d8 <__assert_fail@plt+0x8164>
   199c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199cc:	add	r0, r0, r1
   199d0:	movw	r1, #36	; 0x24
   199d4:	strb	r1, [r0]
   199d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199dc:	add	r0, r0, #1
   199e0:	str	r0, [fp, #-44]	; 0xffffffd4
   199e4:	b	199e8 <__assert_fail@plt+0x8174>
   199e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199f0:	cmp	r0, r1
   199f4:	bcs	19a0c <__assert_fail@plt+0x8198>
   199f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a00:	add	r0, r0, r1
   19a04:	movw	r1, #39	; 0x27
   19a08:	strb	r1, [r0]
   19a0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a10:	add	r0, r0, #1
   19a14:	str	r0, [fp, #-44]	; 0xffffffd4
   19a18:	movw	r0, #1
   19a1c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19a20:	b	19a24 <__assert_fail@plt+0x81b0>
   19a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a2c:	cmp	r0, r1
   19a30:	bcs	19a48 <__assert_fail@plt+0x81d4>
   19a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a3c:	add	r0, r0, r1
   19a40:	movw	r1, #92	; 0x5c
   19a44:	strb	r1, [r0]
   19a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a4c:	add	r0, r0, #1
   19a50:	str	r0, [fp, #-44]	; 0xffffffd4
   19a54:	b	19a58 <__assert_fail@plt+0x81e4>
   19a58:	ldr	r0, [fp, #8]
   19a5c:	cmp	r0, #2
   19a60:	beq	19b20 <__assert_fail@plt+0x82ac>
   19a64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19a68:	add	r0, r0, #1
   19a6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a70:	cmp	r0, r1
   19a74:	bcs	19b20 <__assert_fail@plt+0x82ac>
   19a78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a80:	add	r1, r1, #1
   19a84:	add	r0, r0, r1
   19a88:	ldrb	r0, [r0]
   19a8c:	movw	r1, #48	; 0x30
   19a90:	cmp	r1, r0
   19a94:	bgt	19b20 <__assert_fail@plt+0x82ac>
   19a98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19aa0:	add	r1, r1, #1
   19aa4:	add	r0, r0, r1
   19aa8:	ldrb	r0, [r0]
   19aac:	cmp	r0, #57	; 0x39
   19ab0:	bgt	19b20 <__assert_fail@plt+0x82ac>
   19ab4:	b	19ab8 <__assert_fail@plt+0x8244>
   19ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ac0:	cmp	r0, r1
   19ac4:	bcs	19adc <__assert_fail@plt+0x8268>
   19ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19acc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ad0:	add	r0, r0, r1
   19ad4:	movw	r1, #48	; 0x30
   19ad8:	strb	r1, [r0]
   19adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ae0:	add	r0, r0, #1
   19ae4:	str	r0, [fp, #-44]	; 0xffffffd4
   19ae8:	b	19aec <__assert_fail@plt+0x8278>
   19aec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19af0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19af4:	cmp	r0, r1
   19af8:	bcs	19b10 <__assert_fail@plt+0x829c>
   19afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b04:	add	r0, r0, r1
   19b08:	movw	r1, #48	; 0x30
   19b0c:	strb	r1, [r0]
   19b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b14:	add	r0, r0, #1
   19b18:	str	r0, [fp, #-44]	; 0xffffffd4
   19b1c:	b	19b20 <__assert_fail@plt+0x82ac>
   19b20:	movw	r0, #48	; 0x30
   19b24:	strb	r0, [fp, #-63]	; 0xffffffc1
   19b28:	b	19b44 <__assert_fail@plt+0x82d0>
   19b2c:	ldr	r0, [fp, #12]
   19b30:	and	r0, r0, #1
   19b34:	cmp	r0, #0
   19b38:	beq	19b40 <__assert_fail@plt+0x82cc>
   19b3c:	b	1a824 <__assert_fail@plt+0x8fb0>
   19b40:	b	19b44 <__assert_fail@plt+0x82d0>
   19b44:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19b48:	ldr	r0, [fp, #8]
   19b4c:	cmp	r0, #2
   19b50:	str	r0, [sp, #40]	; 0x28
   19b54:	beq	19b6c <__assert_fail@plt+0x82f8>
   19b58:	b	19b5c <__assert_fail@plt+0x82e8>
   19b5c:	ldr	r0, [sp, #40]	; 0x28
   19b60:	cmp	r0, #5
   19b64:	beq	19b80 <__assert_fail@plt+0x830c>
   19b68:	b	19d3c <__assert_fail@plt+0x84c8>
   19b6c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b70:	tst	r0, #1
   19b74:	beq	19b7c <__assert_fail@plt+0x8308>
   19b78:	b	1a9b4 <__assert_fail@plt+0x9140>
   19b7c:	b	19d40 <__assert_fail@plt+0x84cc>
   19b80:	ldr	r0, [fp, #12]
   19b84:	and	r0, r0, #4
   19b88:	cmp	r0, #0
   19b8c:	beq	19d38 <__assert_fail@plt+0x84c4>
   19b90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b94:	add	r0, r0, #2
   19b98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b9c:	cmp	r0, r1
   19ba0:	bcs	19d38 <__assert_fail@plt+0x84c4>
   19ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ba8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bac:	add	r1, r1, #1
   19bb0:	add	r0, r0, r1
   19bb4:	ldrb	r0, [r0]
   19bb8:	cmp	r0, #63	; 0x3f
   19bbc:	bne	19d38 <__assert_fail@plt+0x84c4>
   19bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bc8:	add	r0, r0, r1
   19bcc:	ldrb	r0, [r0, #2]
   19bd0:	mov	r1, r0
   19bd4:	cmp	r0, #33	; 0x21
   19bd8:	str	r1, [sp, #36]	; 0x24
   19bdc:	beq	19c2c <__assert_fail@plt+0x83b8>
   19be0:	b	19be4 <__assert_fail@plt+0x8370>
   19be4:	ldr	r0, [sp, #36]	; 0x24
   19be8:	sub	r1, r0, #39	; 0x27
   19bec:	cmp	r1, #3
   19bf0:	bcc	19c2c <__assert_fail@plt+0x83b8>
   19bf4:	b	19bf8 <__assert_fail@plt+0x8384>
   19bf8:	ldr	r0, [sp, #36]	; 0x24
   19bfc:	cmp	r0, #45	; 0x2d
   19c00:	beq	19c2c <__assert_fail@plt+0x83b8>
   19c04:	b	19c08 <__assert_fail@plt+0x8394>
   19c08:	ldr	r0, [sp, #36]	; 0x24
   19c0c:	cmp	r0, #47	; 0x2f
   19c10:	beq	19c2c <__assert_fail@plt+0x83b8>
   19c14:	b	19c18 <__assert_fail@plt+0x83a4>
   19c18:	ldr	r0, [sp, #36]	; 0x24
   19c1c:	sub	r1, r0, #60	; 0x3c
   19c20:	cmp	r1, #2
   19c24:	bhi	19d30 <__assert_fail@plt+0x84bc>
   19c28:	b	19c2c <__assert_fail@plt+0x83b8>
   19c2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c30:	tst	r0, #1
   19c34:	beq	19c3c <__assert_fail@plt+0x83c8>
   19c38:	b	1a9b4 <__assert_fail@plt+0x9140>
   19c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19c44:	add	r1, r1, #2
   19c48:	add	r0, r0, r1
   19c4c:	ldrb	r0, [r0]
   19c50:	strb	r0, [fp, #-63]	; 0xffffffc1
   19c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c58:	add	r0, r0, #2
   19c5c:	str	r0, [fp, #-40]	; 0xffffffd8
   19c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c68:	cmp	r0, r1
   19c6c:	bcs	19c84 <__assert_fail@plt+0x8410>
   19c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c78:	add	r0, r0, r1
   19c7c:	movw	r1, #63	; 0x3f
   19c80:	strb	r1, [r0]
   19c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c88:	add	r0, r0, #1
   19c8c:	str	r0, [fp, #-44]	; 0xffffffd4
   19c90:	b	19c94 <__assert_fail@plt+0x8420>
   19c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c9c:	cmp	r0, r1
   19ca0:	bcs	19cb8 <__assert_fail@plt+0x8444>
   19ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ca8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19cac:	add	r0, r0, r1
   19cb0:	movw	r1, #34	; 0x22
   19cb4:	strb	r1, [r0]
   19cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19cbc:	add	r0, r0, #1
   19cc0:	str	r0, [fp, #-44]	; 0xffffffd4
   19cc4:	b	19cc8 <__assert_fail@plt+0x8454>
   19cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ccc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19cd0:	cmp	r0, r1
   19cd4:	bcs	19cec <__assert_fail@plt+0x8478>
   19cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ce0:	add	r0, r0, r1
   19ce4:	movw	r1, #34	; 0x22
   19ce8:	strb	r1, [r0]
   19cec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19cf0:	add	r0, r0, #1
   19cf4:	str	r0, [fp, #-44]	; 0xffffffd4
   19cf8:	b	19cfc <__assert_fail@plt+0x8488>
   19cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d04:	cmp	r0, r1
   19d08:	bcs	19d20 <__assert_fail@plt+0x84ac>
   19d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19d14:	add	r0, r0, r1
   19d18:	movw	r1, #63	; 0x3f
   19d1c:	strb	r1, [r0]
   19d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d24:	add	r0, r0, #1
   19d28:	str	r0, [fp, #-44]	; 0xffffffd4
   19d2c:	b	19d34 <__assert_fail@plt+0x84c0>
   19d30:	b	19d34 <__assert_fail@plt+0x84c0>
   19d34:	b	19d38 <__assert_fail@plt+0x84c4>
   19d38:	b	19d40 <__assert_fail@plt+0x84cc>
   19d3c:	b	19d40 <__assert_fail@plt+0x84cc>
   19d40:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19d44:	movw	r0, #97	; 0x61
   19d48:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d4c:	b	19e0c <__assert_fail@plt+0x8598>
   19d50:	movw	r0, #98	; 0x62
   19d54:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d58:	b	19e0c <__assert_fail@plt+0x8598>
   19d5c:	movw	r0, #102	; 0x66
   19d60:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d64:	b	19e0c <__assert_fail@plt+0x8598>
   19d68:	movw	r0, #110	; 0x6e
   19d6c:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d70:	b	19dec <__assert_fail@plt+0x8578>
   19d74:	movw	r0, #114	; 0x72
   19d78:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d7c:	b	19dec <__assert_fail@plt+0x8578>
   19d80:	movw	r0, #116	; 0x74
   19d84:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d88:	b	19dec <__assert_fail@plt+0x8578>
   19d8c:	movw	r0, #118	; 0x76
   19d90:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d94:	b	19e0c <__assert_fail@plt+0x8598>
   19d98:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19d9c:	strb	r0, [fp, #-64]	; 0xffffffc0
   19da0:	ldr	r0, [fp, #8]
   19da4:	cmp	r0, #2
   19da8:	bne	19dc0 <__assert_fail@plt+0x854c>
   19dac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19db0:	tst	r0, #1
   19db4:	beq	19dbc <__assert_fail@plt+0x8548>
   19db8:	b	1a9b4 <__assert_fail@plt+0x9140>
   19dbc:	b	1a748 <__assert_fail@plt+0x8ed4>
   19dc0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19dc4:	tst	r0, #1
   19dc8:	beq	19de8 <__assert_fail@plt+0x8574>
   19dcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19dd0:	tst	r0, #1
   19dd4:	beq	19de8 <__assert_fail@plt+0x8574>
   19dd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ddc:	cmp	r0, #0
   19de0:	beq	19de8 <__assert_fail@plt+0x8574>
   19de4:	b	1a748 <__assert_fail@plt+0x8ed4>
   19de8:	b	19dec <__assert_fail@plt+0x8578>
   19dec:	ldr	r0, [fp, #8]
   19df0:	cmp	r0, #2
   19df4:	bne	19e08 <__assert_fail@plt+0x8594>
   19df8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19dfc:	tst	r0, #1
   19e00:	beq	19e08 <__assert_fail@plt+0x8594>
   19e04:	b	1a9b4 <__assert_fail@plt+0x9140>
   19e08:	b	19e0c <__assert_fail@plt+0x8598>
   19e0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19e10:	tst	r0, #1
   19e14:	beq	19e24 <__assert_fail@plt+0x85b0>
   19e18:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   19e1c:	strb	r0, [fp, #-63]	; 0xffffffc1
   19e20:	b	1a634 <__assert_fail@plt+0x8dc0>
   19e24:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19e28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e2c:	cmn	r0, #1
   19e30:	bne	19e48 <__assert_fail@plt+0x85d4>
   19e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e38:	ldrb	r0, [r0, #1]
   19e3c:	cmp	r0, #0
   19e40:	beq	19e58 <__assert_fail@plt+0x85e4>
   19e44:	b	19e54 <__assert_fail@plt+0x85e0>
   19e48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e4c:	cmp	r0, #1
   19e50:	beq	19e58 <__assert_fail@plt+0x85e4>
   19e54:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19e58:	b	19e5c <__assert_fail@plt+0x85e8>
   19e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e60:	cmp	r0, #0
   19e64:	beq	19e6c <__assert_fail@plt+0x85f8>
   19e68:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19e6c:	b	19e70 <__assert_fail@plt+0x85fc>
   19e70:	movw	r0, #1
   19e74:	strb	r0, [fp, #-67]	; 0xffffffbd
   19e78:	ldr	r0, [fp, #8]
   19e7c:	cmp	r0, #2
   19e80:	bne	19e94 <__assert_fail@plt+0x8620>
   19e84:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19e88:	tst	r0, #1
   19e8c:	beq	19e94 <__assert_fail@plt+0x8620>
   19e90:	b	1a9b4 <__assert_fail@plt+0x9140>
   19e94:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19e98:	movw	r0, #1
   19e9c:	strb	r0, [fp, #-61]	; 0xffffffc3
   19ea0:	strb	r0, [fp, #-67]	; 0xffffffbd
   19ea4:	ldr	r0, [fp, #8]
   19ea8:	cmp	r0, #2
   19eac:	bne	19f8c <__assert_fail@plt+0x8718>
   19eb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19eb4:	tst	r0, #1
   19eb8:	beq	19ec0 <__assert_fail@plt+0x864c>
   19ebc:	b	1a9b4 <__assert_fail@plt+0x9140>
   19ec0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ec4:	cmp	r0, #0
   19ec8:	beq	19ee8 <__assert_fail@plt+0x8674>
   19ecc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ed0:	cmp	r0, #0
   19ed4:	bne	19ee8 <__assert_fail@plt+0x8674>
   19ed8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19edc:	str	r0, [fp, #-48]	; 0xffffffd0
   19ee0:	movw	r0, #0
   19ee4:	str	r0, [fp, #-28]	; 0xffffffe4
   19ee8:	b	19eec <__assert_fail@plt+0x8678>
   19eec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ef0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ef4:	cmp	r0, r1
   19ef8:	bcs	19f10 <__assert_fail@plt+0x869c>
   19efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f04:	add	r0, r0, r1
   19f08:	movw	r1, #39	; 0x27
   19f0c:	strb	r1, [r0]
   19f10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f14:	add	r0, r0, #1
   19f18:	str	r0, [fp, #-44]	; 0xffffffd4
   19f1c:	b	19f20 <__assert_fail@plt+0x86ac>
   19f20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f28:	cmp	r0, r1
   19f2c:	bcs	19f44 <__assert_fail@plt+0x86d0>
   19f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f38:	add	r0, r0, r1
   19f3c:	movw	r1, #92	; 0x5c
   19f40:	strb	r1, [r0]
   19f44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f48:	add	r0, r0, #1
   19f4c:	str	r0, [fp, #-44]	; 0xffffffd4
   19f50:	b	19f54 <__assert_fail@plt+0x86e0>
   19f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f5c:	cmp	r0, r1
   19f60:	bcs	19f78 <__assert_fail@plt+0x8704>
   19f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f6c:	add	r0, r0, r1
   19f70:	movw	r1, #39	; 0x27
   19f74:	strb	r1, [r0]
   19f78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f7c:	add	r0, r0, #1
   19f80:	str	r0, [fp, #-44]	; 0xffffffd4
   19f84:	movw	r0, #0
   19f88:	strb	r0, [fp, #-60]	; 0xffffffc4
   19f8c:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19f90:	movw	r0, #1
   19f94:	strb	r0, [fp, #-67]	; 0xffffffbd
   19f98:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   19f9c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   19fa0:	tst	r0, #1
   19fa4:	beq	19fe8 <__assert_fail@plt+0x8774>
   19fa8:	mov	r0, #1
   19fac:	str	r0, [fp, #-72]	; 0xffffffb8
   19fb0:	bl	11688 <__ctype_b_loc@plt>
   19fb4:	ldr	r0, [r0]
   19fb8:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   19fbc:	mov	r1, lr
   19fc0:	add	r0, r0, lr, lsl #1
   19fc4:	ldrh	r0, [r0]
   19fc8:	and	r0, r0, #16384	; 0x4000
   19fcc:	cmp	r0, #0
   19fd0:	movw	r0, #0
   19fd4:	movne	r0, #1
   19fd8:	and	r0, r0, #1
   19fdc:	strb	r0, [fp, #-73]	; 0xffffffb7
   19fe0:	str	r1, [sp, #32]
   19fe4:	b	1a274 <__assert_fail@plt+0x8a00>
   19fe8:	sub	r0, fp, #84	; 0x54
   19fec:	movw	r1, #0
   19ff0:	and	r1, r1, #255	; 0xff
   19ff4:	movw	r2, #8
   19ff8:	bl	11718 <memset@plt>
   19ffc:	movw	r0, #0
   1a000:	str	r0, [fp, #-72]	; 0xffffffb8
   1a004:	movw	r0, #1
   1a008:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a00c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a010:	cmn	r0, #1
   1a014:	bne	1a024 <__assert_fail@plt+0x87b0>
   1a018:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a01c:	bl	116d0 <strlen@plt>
   1a020:	str	r0, [fp, #-36]	; 0xffffffdc
   1a024:	b	1a028 <__assert_fail@plt+0x87b4>
   1a028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a02c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a030:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a034:	add	r1, r1, r2
   1a038:	add	r1, r0, r1
   1a03c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a040:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a044:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a048:	add	r2, r2, r3
   1a04c:	sub	r2, r0, r2
   1a050:	sub	r0, fp, #88	; 0x58
   1a054:	sub	r3, fp, #84	; 0x54
   1a058:	bl	20d34 <__assert_fail@plt+0xf4c0>
   1a05c:	str	r0, [sp, #92]	; 0x5c
   1a060:	ldr	r0, [sp, #92]	; 0x5c
   1a064:	cmp	r0, #0
   1a068:	bne	1a070 <__assert_fail@plt+0x87fc>
   1a06c:	b	1a270 <__assert_fail@plt+0x89fc>
   1a070:	ldr	r0, [sp, #92]	; 0x5c
   1a074:	cmn	r0, #1
   1a078:	bne	1a088 <__assert_fail@plt+0x8814>
   1a07c:	movw	r0, #0
   1a080:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a084:	b	1a270 <__assert_fail@plt+0x89fc>
   1a088:	ldr	r0, [sp, #92]	; 0x5c
   1a08c:	cmn	r0, #2
   1a090:	bne	1a104 <__assert_fail@plt+0x8890>
   1a094:	movw	r0, #0
   1a098:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a09c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a0a4:	add	r0, r0, r1
   1a0a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a0ac:	cmp	r0, r1
   1a0b0:	movw	r0, #0
   1a0b4:	str	r0, [sp, #28]
   1a0b8:	bcs	1a0e4 <__assert_fail@plt+0x8870>
   1a0bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a0c8:	add	r1, r1, r2
   1a0cc:	add	r0, r0, r1
   1a0d0:	ldrb	r0, [r0]
   1a0d4:	cmp	r0, #0
   1a0d8:	movw	r0, #0
   1a0dc:	movne	r0, #1
   1a0e0:	str	r0, [sp, #28]
   1a0e4:	ldr	r0, [sp, #28]
   1a0e8:	tst	r0, #1
   1a0ec:	beq	1a100 <__assert_fail@plt+0x888c>
   1a0f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a0f4:	add	r0, r0, #1
   1a0f8:	str	r0, [fp, #-72]	; 0xffffffb8
   1a0fc:	b	1a09c <__assert_fail@plt+0x8828>
   1a100:	b	1a270 <__assert_fail@plt+0x89fc>
   1a104:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a108:	tst	r0, #1
   1a10c:	beq	1a218 <__assert_fail@plt+0x89a4>
   1a110:	ldr	r0, [fp, #8]
   1a114:	cmp	r0, #2
   1a118:	bne	1a218 <__assert_fail@plt+0x89a4>
   1a11c:	movw	r0, #1
   1a120:	str	r0, [sp, #88]	; 0x58
   1a124:	ldr	r0, [sp, #88]	; 0x58
   1a128:	ldr	r1, [sp, #92]	; 0x5c
   1a12c:	cmp	r0, r1
   1a130:	bcs	1a214 <__assert_fail@plt+0x89a0>
   1a134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a138:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a13c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a140:	add	r1, r1, r2
   1a144:	ldr	r2, [sp, #88]	; 0x58
   1a148:	add	r1, r1, r2
   1a14c:	ldrb	r0, [r0, r1]
   1a150:	sub	r0, r0, #91	; 0x5b
   1a154:	cmp	r0, #33	; 0x21
   1a158:	str	r0, [sp, #24]
   1a15c:	bhi	1a1fc <__assert_fail@plt+0x8988>
   1a160:	add	r0, pc, #8
   1a164:	ldr	r1, [sp, #24]
   1a168:	ldr	r0, [r0, r1, lsl #2]
   1a16c:	mov	pc, r0
   1a170:	strdeq	sl, [r1], -r8
   1a174:	strdeq	sl, [r1], -r8
   1a178:	strdeq	sl, [r1], -ip
   1a17c:	strdeq	sl, [r1], -r8
   1a180:	strdeq	sl, [r1], -ip
   1a184:	strdeq	sl, [r1], -r8
   1a188:	strdeq	sl, [r1], -ip
   1a18c:	strdeq	sl, [r1], -ip
   1a190:	strdeq	sl, [r1], -ip
   1a194:	strdeq	sl, [r1], -ip
   1a198:	strdeq	sl, [r1], -ip
   1a19c:	strdeq	sl, [r1], -ip
   1a1a0:	strdeq	sl, [r1], -ip
   1a1a4:	strdeq	sl, [r1], -ip
   1a1a8:	strdeq	sl, [r1], -ip
   1a1ac:	strdeq	sl, [r1], -ip
   1a1b0:	strdeq	sl, [r1], -ip
   1a1b4:	strdeq	sl, [r1], -ip
   1a1b8:	strdeq	sl, [r1], -ip
   1a1bc:	strdeq	sl, [r1], -ip
   1a1c0:	strdeq	sl, [r1], -ip
   1a1c4:	strdeq	sl, [r1], -ip
   1a1c8:	strdeq	sl, [r1], -ip
   1a1cc:	strdeq	sl, [r1], -ip
   1a1d0:	strdeq	sl, [r1], -ip
   1a1d4:	strdeq	sl, [r1], -ip
   1a1d8:	strdeq	sl, [r1], -ip
   1a1dc:	strdeq	sl, [r1], -ip
   1a1e0:	strdeq	sl, [r1], -ip
   1a1e4:	strdeq	sl, [r1], -ip
   1a1e8:	strdeq	sl, [r1], -ip
   1a1ec:	strdeq	sl, [r1], -ip
   1a1f0:	strdeq	sl, [r1], -ip
   1a1f4:	strdeq	sl, [r1], -r8
   1a1f8:	b	1a9b4 <__assert_fail@plt+0x9140>
   1a1fc:	b	1a200 <__assert_fail@plt+0x898c>
   1a200:	b	1a204 <__assert_fail@plt+0x8990>
   1a204:	ldr	r0, [sp, #88]	; 0x58
   1a208:	add	r0, r0, #1
   1a20c:	str	r0, [sp, #88]	; 0x58
   1a210:	b	1a124 <__assert_fail@plt+0x88b0>
   1a214:	b	1a218 <__assert_fail@plt+0x89a4>
   1a218:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a21c:	bl	115b0 <iswprint@plt>
   1a220:	cmp	r0, #0
   1a224:	bne	1a230 <__assert_fail@plt+0x89bc>
   1a228:	movw	r0, #0
   1a22c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a230:	ldr	r0, [sp, #92]	; 0x5c
   1a234:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a238:	add	r0, r1, r0
   1a23c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a240:	b	1a244 <__assert_fail@plt+0x89d0>
   1a244:	b	1a248 <__assert_fail@plt+0x89d4>
   1a248:	b	1a24c <__assert_fail@plt+0x89d8>
   1a24c:	sub	r0, fp, #84	; 0x54
   1a250:	bl	11538 <mbsinit@plt>
   1a254:	cmp	r0, #0
   1a258:	movw	r0, #0
   1a25c:	movne	r0, #1
   1a260:	mvn	lr, #0
   1a264:	eor	r0, r0, lr
   1a268:	tst	r0, #1
   1a26c:	bne	1a028 <__assert_fail@plt+0x87b4>
   1a270:	b	1a274 <__assert_fail@plt+0x8a00>
   1a274:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a278:	and	r0, r0, #1
   1a27c:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a280:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a284:	movw	r1, #1
   1a288:	cmp	r1, r0
   1a28c:	bcc	1a2a8 <__assert_fail@plt+0x8a34>
   1a290:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a294:	tst	r0, #1
   1a298:	beq	1a5bc <__assert_fail@plt+0x8d48>
   1a29c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a2a0:	tst	r0, #1
   1a2a4:	bne	1a5bc <__assert_fail@plt+0x8d48>
   1a2a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a2ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a2b0:	add	r0, r0, r1
   1a2b4:	str	r0, [sp, #84]	; 0x54
   1a2b8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a2bc:	tst	r0, #1
   1a2c0:	beq	1a470 <__assert_fail@plt+0x8bfc>
   1a2c4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a2c8:	tst	r0, #1
   1a2cc:	bne	1a470 <__assert_fail@plt+0x8bfc>
   1a2d0:	b	1a2d4 <__assert_fail@plt+0x8a60>
   1a2d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a2d8:	tst	r0, #1
   1a2dc:	beq	1a2e4 <__assert_fail@plt+0x8a70>
   1a2e0:	b	1a9b4 <__assert_fail@plt+0x9140>
   1a2e4:	movw	r0, #1
   1a2e8:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a2ec:	ldr	r0, [fp, #8]
   1a2f0:	cmp	r0, #2
   1a2f4:	bne	1a3a8 <__assert_fail@plt+0x8b34>
   1a2f8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a2fc:	tst	r0, #1
   1a300:	bne	1a3a8 <__assert_fail@plt+0x8b34>
   1a304:	b	1a308 <__assert_fail@plt+0x8a94>
   1a308:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a30c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a310:	cmp	r0, r1
   1a314:	bcs	1a32c <__assert_fail@plt+0x8ab8>
   1a318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a31c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a320:	add	r0, r0, r1
   1a324:	movw	r1, #39	; 0x27
   1a328:	strb	r1, [r0]
   1a32c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a330:	add	r0, r0, #1
   1a334:	str	r0, [fp, #-44]	; 0xffffffd4
   1a338:	b	1a33c <__assert_fail@plt+0x8ac8>
   1a33c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a340:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a344:	cmp	r0, r1
   1a348:	bcs	1a360 <__assert_fail@plt+0x8aec>
   1a34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a350:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a354:	add	r0, r0, r1
   1a358:	movw	r1, #36	; 0x24
   1a35c:	strb	r1, [r0]
   1a360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a364:	add	r0, r0, #1
   1a368:	str	r0, [fp, #-44]	; 0xffffffd4
   1a36c:	b	1a370 <__assert_fail@plt+0x8afc>
   1a370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a374:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a378:	cmp	r0, r1
   1a37c:	bcs	1a394 <__assert_fail@plt+0x8b20>
   1a380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a384:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a388:	add	r0, r0, r1
   1a38c:	movw	r1, #39	; 0x27
   1a390:	strb	r1, [r0]
   1a394:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a398:	add	r0, r0, #1
   1a39c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3a0:	movw	r0, #1
   1a3a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a3a8:	b	1a3ac <__assert_fail@plt+0x8b38>
   1a3ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3b4:	cmp	r0, r1
   1a3b8:	bcs	1a3d0 <__assert_fail@plt+0x8b5c>
   1a3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a3c4:	add	r0, r0, r1
   1a3c8:	movw	r1, #92	; 0x5c
   1a3cc:	strb	r1, [r0]
   1a3d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3d4:	add	r0, r0, #1
   1a3d8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3dc:	b	1a3e0 <__assert_fail@plt+0x8b6c>
   1a3e0:	b	1a3e4 <__assert_fail@plt+0x8b70>
   1a3e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3ec:	cmp	r0, r1
   1a3f0:	bcs	1a410 <__assert_fail@plt+0x8b9c>
   1a3f4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3f8:	asr	r0, r0, #6
   1a3fc:	add	r0, r0, #48	; 0x30
   1a400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a404:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a408:	add	r1, r1, r2
   1a40c:	strb	r0, [r1]
   1a410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a414:	add	r0, r0, #1
   1a418:	str	r0, [fp, #-44]	; 0xffffffd4
   1a41c:	b	1a420 <__assert_fail@plt+0x8bac>
   1a420:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a428:	cmp	r0, r1
   1a42c:	bcs	1a450 <__assert_fail@plt+0x8bdc>
   1a430:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a434:	asr	r0, r0, #3
   1a438:	and	r0, r0, #7
   1a43c:	add	r0, r0, #48	; 0x30
   1a440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a444:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a448:	add	r1, r1, r2
   1a44c:	strb	r0, [r1]
   1a450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a454:	add	r0, r0, #1
   1a458:	str	r0, [fp, #-44]	; 0xffffffd4
   1a45c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a460:	and	r0, r0, #7
   1a464:	add	r0, r0, #48	; 0x30
   1a468:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a46c:	b	1a4bc <__assert_fail@plt+0x8c48>
   1a470:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a474:	tst	r0, #1
   1a478:	beq	1a4b8 <__assert_fail@plt+0x8c44>
   1a47c:	b	1a480 <__assert_fail@plt+0x8c0c>
   1a480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a488:	cmp	r0, r1
   1a48c:	bcs	1a4a4 <__assert_fail@plt+0x8c30>
   1a490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a494:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a498:	add	r0, r0, r1
   1a49c:	movw	r1, #92	; 0x5c
   1a4a0:	strb	r1, [r0]
   1a4a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4a8:	add	r0, r0, #1
   1a4ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4b0:	movw	r0, #0
   1a4b4:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a4b8:	b	1a4bc <__assert_fail@plt+0x8c48>
   1a4bc:	ldr	r0, [sp, #84]	; 0x54
   1a4c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a4c4:	add	r1, r1, #1
   1a4c8:	cmp	r0, r1
   1a4cc:	bhi	1a4d4 <__assert_fail@plt+0x8c60>
   1a4d0:	b	1a5b8 <__assert_fail@plt+0x8d44>
   1a4d4:	b	1a4d8 <__assert_fail@plt+0x8c64>
   1a4d8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a4dc:	tst	r0, #1
   1a4e0:	beq	1a560 <__assert_fail@plt+0x8cec>
   1a4e4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a4e8:	tst	r0, #1
   1a4ec:	bne	1a560 <__assert_fail@plt+0x8cec>
   1a4f0:	b	1a4f4 <__assert_fail@plt+0x8c80>
   1a4f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4fc:	cmp	r0, r1
   1a500:	bcs	1a518 <__assert_fail@plt+0x8ca4>
   1a504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a508:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a50c:	add	r0, r0, r1
   1a510:	movw	r1, #39	; 0x27
   1a514:	strb	r1, [r0]
   1a518:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a51c:	add	r0, r0, #1
   1a520:	str	r0, [fp, #-44]	; 0xffffffd4
   1a524:	b	1a528 <__assert_fail@plt+0x8cb4>
   1a528:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a52c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a530:	cmp	r0, r1
   1a534:	bcs	1a54c <__assert_fail@plt+0x8cd8>
   1a538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a53c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a540:	add	r0, r0, r1
   1a544:	movw	r1, #39	; 0x27
   1a548:	strb	r1, [r0]
   1a54c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a550:	add	r0, r0, #1
   1a554:	str	r0, [fp, #-44]	; 0xffffffd4
   1a558:	movw	r0, #0
   1a55c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a560:	b	1a564 <__assert_fail@plt+0x8cf0>
   1a564:	b	1a568 <__assert_fail@plt+0x8cf4>
   1a568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a56c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a570:	cmp	r0, r1
   1a574:	bcs	1a58c <__assert_fail@plt+0x8d18>
   1a578:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a57c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a580:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a584:	add	r1, r1, r2
   1a588:	strb	r0, [r1]
   1a58c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a590:	add	r0, r0, #1
   1a594:	str	r0, [fp, #-44]	; 0xffffffd4
   1a598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a59c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a5a0:	add	r1, r1, #1
   1a5a4:	str	r1, [fp, #-40]	; 0xffffffd8
   1a5a8:	add	r0, r0, r1
   1a5ac:	ldrb	r0, [r0]
   1a5b0:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a5b4:	b	1a2b8 <__assert_fail@plt+0x8a44>
   1a5b8:	b	1a748 <__assert_fail@plt+0x8ed4>
   1a5bc:	b	1a5c0 <__assert_fail@plt+0x8d4c>
   1a5c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a5c4:	tst	r0, #1
   1a5c8:	beq	1a5d8 <__assert_fail@plt+0x8d64>
   1a5cc:	ldr	r0, [fp, #8]
   1a5d0:	cmp	r0, #2
   1a5d4:	bne	1a5e4 <__assert_fail@plt+0x8d70>
   1a5d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a5dc:	tst	r0, #1
   1a5e0:	beq	1a620 <__assert_fail@plt+0x8dac>
   1a5e4:	ldr	r0, [fp, #16]
   1a5e8:	movw	r1, #0
   1a5ec:	cmp	r0, r1
   1a5f0:	beq	1a620 <__assert_fail@plt+0x8dac>
   1a5f4:	ldr	r0, [fp, #16]
   1a5f8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a5fc:	lsr	r1, r1, #5
   1a600:	add	r0, r0, r1, lsl #2
   1a604:	ldr	r0, [r0]
   1a608:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a60c:	and	r1, r1, #31
   1a610:	lsr	r0, r0, r1
   1a614:	and	r0, r0, #1
   1a618:	cmp	r0, #0
   1a61c:	bne	1a630 <__assert_fail@plt+0x8dbc>
   1a620:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a624:	tst	r0, #1
   1a628:	bne	1a630 <__assert_fail@plt+0x8dbc>
   1a62c:	b	1a748 <__assert_fail@plt+0x8ed4>
   1a630:	b	1a634 <__assert_fail@plt+0x8dc0>
   1a634:	b	1a638 <__assert_fail@plt+0x8dc4>
   1a638:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a63c:	tst	r0, #1
   1a640:	beq	1a648 <__assert_fail@plt+0x8dd4>
   1a644:	b	1a9b4 <__assert_fail@plt+0x9140>
   1a648:	movw	r0, #1
   1a64c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a650:	ldr	r0, [fp, #8]
   1a654:	cmp	r0, #2
   1a658:	bne	1a70c <__assert_fail@plt+0x8e98>
   1a65c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a660:	tst	r0, #1
   1a664:	bne	1a70c <__assert_fail@plt+0x8e98>
   1a668:	b	1a66c <__assert_fail@plt+0x8df8>
   1a66c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a674:	cmp	r0, r1
   1a678:	bcs	1a690 <__assert_fail@plt+0x8e1c>
   1a67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a684:	add	r0, r0, r1
   1a688:	movw	r1, #39	; 0x27
   1a68c:	strb	r1, [r0]
   1a690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a694:	add	r0, r0, #1
   1a698:	str	r0, [fp, #-44]	; 0xffffffd4
   1a69c:	b	1a6a0 <__assert_fail@plt+0x8e2c>
   1a6a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6a8:	cmp	r0, r1
   1a6ac:	bcs	1a6c4 <__assert_fail@plt+0x8e50>
   1a6b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6b8:	add	r0, r0, r1
   1a6bc:	movw	r1, #36	; 0x24
   1a6c0:	strb	r1, [r0]
   1a6c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6c8:	add	r0, r0, #1
   1a6cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6d0:	b	1a6d4 <__assert_fail@plt+0x8e60>
   1a6d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6dc:	cmp	r0, r1
   1a6e0:	bcs	1a6f8 <__assert_fail@plt+0x8e84>
   1a6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6ec:	add	r0, r0, r1
   1a6f0:	movw	r1, #39	; 0x27
   1a6f4:	strb	r1, [r0]
   1a6f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6fc:	add	r0, r0, #1
   1a700:	str	r0, [fp, #-44]	; 0xffffffd4
   1a704:	movw	r0, #1
   1a708:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a70c:	b	1a710 <__assert_fail@plt+0x8e9c>
   1a710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a718:	cmp	r0, r1
   1a71c:	bcs	1a734 <__assert_fail@plt+0x8ec0>
   1a720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a724:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a728:	add	r0, r0, r1
   1a72c:	movw	r1, #92	; 0x5c
   1a730:	strb	r1, [r0]
   1a734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a738:	add	r0, r0, #1
   1a73c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a740:	b	1a744 <__assert_fail@plt+0x8ed0>
   1a744:	b	1a748 <__assert_fail@plt+0x8ed4>
   1a748:	b	1a74c <__assert_fail@plt+0x8ed8>
   1a74c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a750:	tst	r0, #1
   1a754:	beq	1a7d4 <__assert_fail@plt+0x8f60>
   1a758:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a75c:	tst	r0, #1
   1a760:	bne	1a7d4 <__assert_fail@plt+0x8f60>
   1a764:	b	1a768 <__assert_fail@plt+0x8ef4>
   1a768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a76c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a770:	cmp	r0, r1
   1a774:	bcs	1a78c <__assert_fail@plt+0x8f18>
   1a778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a77c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a780:	add	r0, r0, r1
   1a784:	movw	r1, #39	; 0x27
   1a788:	strb	r1, [r0]
   1a78c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a790:	add	r0, r0, #1
   1a794:	str	r0, [fp, #-44]	; 0xffffffd4
   1a798:	b	1a79c <__assert_fail@plt+0x8f28>
   1a79c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a7a4:	cmp	r0, r1
   1a7a8:	bcs	1a7c0 <__assert_fail@plt+0x8f4c>
   1a7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a7b4:	add	r0, r0, r1
   1a7b8:	movw	r1, #39	; 0x27
   1a7bc:	strb	r1, [r0]
   1a7c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7c4:	add	r0, r0, #1
   1a7c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a7cc:	movw	r0, #0
   1a7d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a7d4:	b	1a7d8 <__assert_fail@plt+0x8f64>
   1a7d8:	b	1a7dc <__assert_fail@plt+0x8f68>
   1a7dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a7e4:	cmp	r0, r1
   1a7e8:	bcs	1a800 <__assert_fail@plt+0x8f8c>
   1a7ec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a7f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a7f8:	add	r1, r1, r2
   1a7fc:	strb	r0, [r1]
   1a800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a804:	add	r0, r0, #1
   1a808:	str	r0, [fp, #-44]	; 0xffffffd4
   1a80c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1a810:	tst	r0, #1
   1a814:	bne	1a820 <__assert_fail@plt+0x8fac>
   1a818:	movw	r0, #0
   1a81c:	strb	r0, [fp, #-62]	; 0xffffffc2
   1a820:	b	1a824 <__assert_fail@plt+0x8fb0>
   1a824:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a828:	add	r0, r0, #1
   1a82c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a830:	b	195d8 <__assert_fail@plt+0x7d64>
   1a834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a838:	cmp	r0, #0
   1a83c:	bne	1a85c <__assert_fail@plt+0x8fe8>
   1a840:	ldr	r0, [fp, #8]
   1a844:	cmp	r0, #2
   1a848:	bne	1a85c <__assert_fail@plt+0x8fe8>
   1a84c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a850:	tst	r0, #1
   1a854:	beq	1a85c <__assert_fail@plt+0x8fe8>
   1a858:	b	1a9b4 <__assert_fail@plt+0x9140>
   1a85c:	ldr	r0, [fp, #8]
   1a860:	cmp	r0, #2
   1a864:	bne	1a904 <__assert_fail@plt+0x9090>
   1a868:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a86c:	tst	r0, #1
   1a870:	bne	1a904 <__assert_fail@plt+0x9090>
   1a874:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1a878:	tst	r0, #1
   1a87c:	beq	1a904 <__assert_fail@plt+0x9090>
   1a880:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1a884:	tst	r0, #1
   1a888:	beq	1a8d0 <__assert_fail@plt+0x905c>
   1a88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a890:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a898:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a89c:	ldr	ip, [fp, #12]
   1a8a0:	ldr	lr, [fp, #16]
   1a8a4:	ldr	r4, [fp, #20]
   1a8a8:	ldr	r5, [fp, #24]
   1a8ac:	movw	r6, #5
   1a8b0:	str	r6, [sp]
   1a8b4:	str	ip, [sp, #4]
   1a8b8:	str	lr, [sp, #8]
   1a8bc:	str	r4, [sp, #12]
   1a8c0:	str	r5, [sp, #16]
   1a8c4:	bl	192f0 <__assert_fail@plt+0x7a7c>
   1a8c8:	str	r0, [fp, #-20]	; 0xffffffec
   1a8cc:	b	1aa1c <__assert_fail@plt+0x91a8>
   1a8d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a8d4:	cmp	r0, #0
   1a8d8:	bne	1a8fc <__assert_fail@plt+0x9088>
   1a8dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a8e0:	cmp	r0, #0
   1a8e4:	beq	1a8fc <__assert_fail@plt+0x9088>
   1a8e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a8ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8f0:	movw	r0, #0
   1a8f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8f8:	b	19398 <__assert_fail@plt+0x7b24>
   1a8fc:	b	1a900 <__assert_fail@plt+0x908c>
   1a900:	b	1a904 <__assert_fail@plt+0x9090>
   1a904:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a908:	movw	r1, #0
   1a90c:	cmp	r0, r1
   1a910:	beq	1a984 <__assert_fail@plt+0x9110>
   1a914:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a918:	tst	r0, #1
   1a91c:	bne	1a984 <__assert_fail@plt+0x9110>
   1a920:	b	1a924 <__assert_fail@plt+0x90b0>
   1a924:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a928:	ldrsb	r0, [r0]
   1a92c:	cmp	r0, #0
   1a930:	beq	1a980 <__assert_fail@plt+0x910c>
   1a934:	b	1a938 <__assert_fail@plt+0x90c4>
   1a938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a940:	cmp	r0, r1
   1a944:	bcs	1a960 <__assert_fail@plt+0x90ec>
   1a948:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a94c:	ldrb	r0, [r0]
   1a950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a954:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a958:	add	r1, r1, r2
   1a95c:	strb	r0, [r1]
   1a960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a964:	add	r0, r0, #1
   1a968:	str	r0, [fp, #-44]	; 0xffffffd4
   1a96c:	b	1a970 <__assert_fail@plt+0x90fc>
   1a970:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a974:	add	r0, r0, #1
   1a978:	str	r0, [fp, #-52]	; 0xffffffcc
   1a97c:	b	1a924 <__assert_fail@plt+0x90b0>
   1a980:	b	1a984 <__assert_fail@plt+0x9110>
   1a984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a988:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a98c:	cmp	r0, r1
   1a990:	bcs	1a9a8 <__assert_fail@plt+0x9134>
   1a994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a998:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a99c:	add	r0, r0, r1
   1a9a0:	movw	r1, #0
   1a9a4:	strb	r1, [r0]
   1a9a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9ac:	str	r0, [fp, #-20]	; 0xffffffec
   1a9b0:	b	1aa1c <__assert_fail@plt+0x91a8>
   1a9b4:	ldr	r0, [fp, #8]
   1a9b8:	cmp	r0, #2
   1a9bc:	bne	1a9d4 <__assert_fail@plt+0x9160>
   1a9c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a9c4:	tst	r0, #1
   1a9c8:	beq	1a9d4 <__assert_fail@plt+0x9160>
   1a9cc:	movw	r0, #4
   1a9d0:	str	r0, [fp, #8]
   1a9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a9e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a9e4:	ldr	ip, [fp, #8]
   1a9e8:	ldr	lr, [fp, #12]
   1a9ec:	mvn	r4, #2
   1a9f0:	and	lr, lr, r4
   1a9f4:	ldr	r4, [fp, #20]
   1a9f8:	ldr	r5, [fp, #24]
   1a9fc:	str	ip, [sp]
   1aa00:	str	lr, [sp, #4]
   1aa04:	movw	ip, #0
   1aa08:	str	ip, [sp, #8]
   1aa0c:	str	r4, [sp, #12]
   1aa10:	str	r5, [sp, #16]
   1aa14:	bl	192f0 <__assert_fail@plt+0x7a7c>
   1aa18:	str	r0, [fp, #-20]	; 0xffffffec
   1aa1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa20:	sub	sp, fp, #16
   1aa24:	pop	{r4, r5, r6, sl, fp, pc}
   1aa28:	push	{fp, lr}
   1aa2c:	mov	fp, sp
   1aa30:	sub	sp, sp, #16
   1aa34:	str	r0, [fp, #-4]
   1aa38:	str	r1, [sp, #8]
   1aa3c:	str	r2, [sp, #4]
   1aa40:	ldr	r0, [fp, #-4]
   1aa44:	ldr	r1, [sp, #8]
   1aa48:	ldr	r3, [sp, #4]
   1aa4c:	movw	r2, #0
   1aa50:	bl	1aa5c <__assert_fail@plt+0x91e8>
   1aa54:	mov	sp, fp
   1aa58:	pop	{fp, pc}
   1aa5c:	push	{r4, r5, r6, sl, fp, lr}
   1aa60:	add	fp, sp, #16
   1aa64:	sub	sp, sp, #72	; 0x48
   1aa68:	str	r0, [fp, #-20]	; 0xffffffec
   1aa6c:	str	r1, [fp, #-24]	; 0xffffffe8
   1aa70:	str	r2, [fp, #-28]	; 0xffffffe4
   1aa74:	str	r3, [fp, #-32]	; 0xffffffe0
   1aa78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa7c:	movw	r1, #0
   1aa80:	cmp	r0, r1
   1aa84:	beq	1aa94 <__assert_fail@plt+0x9220>
   1aa88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa8c:	str	r0, [sp, #32]
   1aa90:	b	1aaa4 <__assert_fail@plt+0x9230>
   1aa94:	movw	r0, #21008	; 0x5210
   1aa98:	movt	r0, #3
   1aa9c:	str	r0, [sp, #32]
   1aaa0:	b	1aaa4 <__assert_fail@plt+0x9230>
   1aaa4:	ldr	r0, [sp, #32]
   1aaa8:	str	r0, [fp, #-36]	; 0xffffffdc
   1aaac:	bl	11700 <__errno_location@plt>
   1aab0:	ldr	r0, [r0]
   1aab4:	str	r0, [fp, #-40]	; 0xffffffd8
   1aab8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aabc:	ldr	r0, [r0, #4]
   1aac0:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1aac4:	movw	r1, #0
   1aac8:	cmp	lr, r1
   1aacc:	movw	lr, #0
   1aad0:	movne	lr, #1
   1aad4:	tst	lr, #1
   1aad8:	mov	lr, r1
   1aadc:	moveq	lr, #1
   1aae0:	orr	r0, r0, lr
   1aae4:	str	r0, [sp, #44]	; 0x2c
   1aae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aaec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aaf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aaf4:	ldr	r0, [r0]
   1aaf8:	ldr	lr, [sp, #44]	; 0x2c
   1aafc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ab00:	add	ip, ip, #8
   1ab04:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1ab08:	ldr	r4, [r4, #40]	; 0x28
   1ab0c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1ab10:	ldr	r5, [r5, #44]	; 0x2c
   1ab14:	str	r0, [sp, #28]
   1ab18:	mov	r0, r1
   1ab1c:	ldr	r6, [sp, #28]
   1ab20:	str	r6, [sp]
   1ab24:	str	lr, [sp, #4]
   1ab28:	str	ip, [sp, #8]
   1ab2c:	str	r4, [sp, #12]
   1ab30:	str	r5, [sp, #16]
   1ab34:	bl	192f0 <__assert_fail@plt+0x7a7c>
   1ab38:	add	r0, r0, #1
   1ab3c:	str	r0, [sp, #40]	; 0x28
   1ab40:	ldr	r0, [sp, #40]	; 0x28
   1ab44:	bl	1cb34 <__assert_fail@plt+0xb2c0>
   1ab48:	str	r0, [sp, #36]	; 0x24
   1ab4c:	ldr	r0, [sp, #36]	; 0x24
   1ab50:	ldr	r1, [sp, #40]	; 0x28
   1ab54:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab5c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ab60:	ldr	ip, [ip]
   1ab64:	ldr	lr, [sp, #44]	; 0x2c
   1ab68:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1ab6c:	add	r4, r4, #8
   1ab70:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1ab74:	ldr	r5, [r5, #40]	; 0x28
   1ab78:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1ab7c:	ldr	r6, [r6, #44]	; 0x2c
   1ab80:	str	ip, [sp]
   1ab84:	str	lr, [sp, #4]
   1ab88:	str	r4, [sp, #8]
   1ab8c:	str	r5, [sp, #12]
   1ab90:	str	r6, [sp, #16]
   1ab94:	bl	192f0 <__assert_fail@plt+0x7a7c>
   1ab98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab9c:	str	r0, [sp, #24]
   1aba0:	str	r1, [sp, #20]
   1aba4:	bl	11700 <__errno_location@plt>
   1aba8:	ldr	r1, [sp, #20]
   1abac:	str	r1, [r0]
   1abb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1abb4:	movw	r2, #0
   1abb8:	cmp	r0, r2
   1abbc:	beq	1abd0 <__assert_fail@plt+0x935c>
   1abc0:	ldr	r0, [sp, #40]	; 0x28
   1abc4:	sub	r0, r0, #1
   1abc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abcc:	str	r0, [r1]
   1abd0:	ldr	r0, [sp, #36]	; 0x24
   1abd4:	sub	sp, fp, #16
   1abd8:	pop	{r4, r5, r6, sl, fp, pc}
   1abdc:	push	{fp, lr}
   1abe0:	mov	fp, sp
   1abe4:	sub	sp, sp, #8
   1abe8:	movw	r0, #20844	; 0x516c
   1abec:	movt	r0, #3
   1abf0:	ldr	r0, [r0]
   1abf4:	str	r0, [sp, #4]
   1abf8:	movw	r0, #1
   1abfc:	str	r0, [sp]
   1ac00:	ldr	r0, [sp]
   1ac04:	movw	r1, #20848	; 0x5170
   1ac08:	movt	r1, #3
   1ac0c:	ldr	r1, [r1]
   1ac10:	cmp	r0, r1
   1ac14:	bge	1ac3c <__assert_fail@plt+0x93c8>
   1ac18:	ldr	r0, [sp, #4]
   1ac1c:	ldr	r1, [sp]
   1ac20:	add	r0, r0, r1, lsl #3
   1ac24:	ldr	r0, [r0, #4]
   1ac28:	bl	209b8 <__assert_fail@plt+0xf144>
   1ac2c:	ldr	r0, [sp]
   1ac30:	add	r0, r0, #1
   1ac34:	str	r0, [sp]
   1ac38:	b	1ac00 <__assert_fail@plt+0x938c>
   1ac3c:	ldr	r0, [sp, #4]
   1ac40:	ldr	r0, [r0, #4]
   1ac44:	movw	r1, #21056	; 0x5240
   1ac48:	movt	r1, #3
   1ac4c:	cmp	r0, r1
   1ac50:	beq	1ac7c <__assert_fail@plt+0x9408>
   1ac54:	ldr	r0, [sp, #4]
   1ac58:	ldr	r0, [r0, #4]
   1ac5c:	bl	209b8 <__assert_fail@plt+0xf144>
   1ac60:	movw	r0, #256	; 0x100
   1ac64:	movw	lr, #20852	; 0x5174
   1ac68:	movt	lr, #3
   1ac6c:	str	r0, [lr]
   1ac70:	movw	r0, #21056	; 0x5240
   1ac74:	movt	r0, #3
   1ac78:	str	r0, [lr, #4]
   1ac7c:	ldr	r0, [sp, #4]
   1ac80:	movw	r1, #20852	; 0x5174
   1ac84:	movt	r1, #3
   1ac88:	cmp	r0, r1
   1ac8c:	beq	1acac <__assert_fail@plt+0x9438>
   1ac90:	ldr	r0, [sp, #4]
   1ac94:	bl	209b8 <__assert_fail@plt+0xf144>
   1ac98:	movw	r0, #20844	; 0x516c
   1ac9c:	movt	r0, #3
   1aca0:	movw	lr, #20852	; 0x5174
   1aca4:	movt	lr, #3
   1aca8:	str	lr, [r0]
   1acac:	movw	r0, #20848	; 0x5170
   1acb0:	movt	r0, #3
   1acb4:	movw	r1, #1
   1acb8:	str	r1, [r0]
   1acbc:	mov	sp, fp
   1acc0:	pop	{fp, pc}
   1acc4:	push	{fp, lr}
   1acc8:	mov	fp, sp
   1accc:	sub	sp, sp, #8
   1acd0:	str	r0, [sp, #4]
   1acd4:	str	r1, [sp]
   1acd8:	ldr	r0, [sp, #4]
   1acdc:	ldr	r1, [sp]
   1ace0:	mvn	r2, #0
   1ace4:	movw	r3, #21008	; 0x5210
   1ace8:	movt	r3, #3
   1acec:	bl	1acf8 <__assert_fail@plt+0x9484>
   1acf0:	mov	sp, fp
   1acf4:	pop	{fp, pc}
   1acf8:	push	{r4, r5, r6, sl, fp, lr}
   1acfc:	add	fp, sp, #16
   1ad00:	sub	sp, sp, #88	; 0x58
   1ad04:	str	r0, [fp, #-20]	; 0xffffffec
   1ad08:	str	r1, [fp, #-24]	; 0xffffffe8
   1ad0c:	str	r2, [fp, #-28]	; 0xffffffe4
   1ad10:	str	r3, [fp, #-32]	; 0xffffffe0
   1ad14:	bl	11700 <__errno_location@plt>
   1ad18:	ldr	r1, [pc, #676]	; 1afc4 <__assert_fail@plt+0x9750>
   1ad1c:	ldr	r0, [r0]
   1ad20:	str	r0, [fp, #-36]	; 0xffffffdc
   1ad24:	movw	r0, #20844	; 0x516c
   1ad28:	movt	r0, #3
   1ad2c:	ldr	r0, [r0]
   1ad30:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad34:	str	r1, [fp, #-44]	; 0xffffffd4
   1ad38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad3c:	movw	r1, #0
   1ad40:	cmp	r1, r0
   1ad44:	bgt	1ad58 <__assert_fail@plt+0x94e4>
   1ad48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad50:	cmp	r0, r1
   1ad54:	blt	1ad5c <__assert_fail@plt+0x94e8>
   1ad58:	bl	11838 <abort@plt>
   1ad5c:	movw	r0, #20848	; 0x5170
   1ad60:	movt	r0, #3
   1ad64:	ldr	r0, [r0]
   1ad68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad6c:	cmp	r0, r1
   1ad70:	bgt	1ae68 <__assert_fail@plt+0x95f4>
   1ad74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad78:	movw	r1, #20852	; 0x5174
   1ad7c:	movt	r1, #3
   1ad80:	cmp	r0, r1
   1ad84:	movw	r0, #0
   1ad88:	moveq	r0, #1
   1ad8c:	and	r0, r0, #1
   1ad90:	strb	r0, [fp, #-45]	; 0xffffffd3
   1ad94:	movw	r0, #20848	; 0x5170
   1ad98:	movt	r0, #3
   1ad9c:	ldr	r0, [r0]
   1ada0:	str	r0, [sp, #52]	; 0x34
   1ada4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ada8:	tst	r0, #1
   1adac:	beq	1adbc <__assert_fail@plt+0x9548>
   1adb0:	movw	r0, #0
   1adb4:	str	r0, [sp, #32]
   1adb8:	b	1adc4 <__assert_fail@plt+0x9550>
   1adbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1adc0:	str	r0, [sp, #32]
   1adc4:	ldr	r0, [sp, #32]
   1adc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1adcc:	movw	r2, #20848	; 0x5170
   1add0:	movt	r2, #3
   1add4:	ldr	r2, [r2]
   1add8:	sub	r1, r1, r2
   1addc:	add	r2, r1, #1
   1ade0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ade4:	add	r1, sp, #52	; 0x34
   1ade8:	movw	ip, #8
   1adec:	str	ip, [sp]
   1adf0:	bl	1cd70 <__assert_fail@plt+0xb4fc>
   1adf4:	str	r0, [fp, #-40]	; 0xffffffd8
   1adf8:	movw	r1, #20844	; 0x516c
   1adfc:	movt	r1, #3
   1ae00:	str	r0, [r1]
   1ae04:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ae08:	tst	r0, #1
   1ae0c:	beq	1ae2c <__assert_fail@plt+0x95b8>
   1ae10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae14:	movw	r1, #20852	; 0x5174
   1ae18:	movt	r1, #3
   1ae1c:	ldr	r2, [r1]
   1ae20:	str	r2, [r0]
   1ae24:	ldr	r1, [r1, #4]
   1ae28:	str	r1, [r0, #4]
   1ae2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae30:	movw	r1, #20848	; 0x5170
   1ae34:	movt	r1, #3
   1ae38:	ldr	r1, [r1]
   1ae3c:	add	r0, r0, r1, lsl #3
   1ae40:	ldr	r2, [sp, #52]	; 0x34
   1ae44:	sub	r1, r2, r1
   1ae48:	lsl	r2, r1, #3
   1ae4c:	movw	r1, #0
   1ae50:	and	r1, r1, #255	; 0xff
   1ae54:	bl	11718 <memset@plt>
   1ae58:	ldr	r0, [sp, #52]	; 0x34
   1ae5c:	movw	r1, #20848	; 0x5170
   1ae60:	movt	r1, #3
   1ae64:	str	r0, [r1]
   1ae68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae70:	ldr	r0, [r0, r1, lsl #3]
   1ae74:	str	r0, [sp, #48]	; 0x30
   1ae78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae80:	add	r0, r0, r1, lsl #3
   1ae84:	ldr	r0, [r0, #4]
   1ae88:	str	r0, [sp, #44]	; 0x2c
   1ae8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae90:	ldr	r0, [r0, #4]
   1ae94:	orr	r0, r0, #1
   1ae98:	str	r0, [sp, #40]	; 0x28
   1ae9c:	ldr	r0, [sp, #44]	; 0x2c
   1aea0:	ldr	r1, [sp, #48]	; 0x30
   1aea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aeac:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1aeb0:	ldr	ip, [ip]
   1aeb4:	ldr	lr, [sp, #40]	; 0x28
   1aeb8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1aebc:	add	r4, r4, #8
   1aec0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1aec4:	ldr	r5, [r5, #40]	; 0x28
   1aec8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1aecc:	ldr	r6, [r6, #44]	; 0x2c
   1aed0:	str	ip, [sp]
   1aed4:	str	lr, [sp, #4]
   1aed8:	str	r4, [sp, #8]
   1aedc:	str	r5, [sp, #12]
   1aee0:	str	r6, [sp, #16]
   1aee4:	bl	192f0 <__assert_fail@plt+0x7a7c>
   1aee8:	str	r0, [sp, #36]	; 0x24
   1aeec:	ldr	r0, [sp, #48]	; 0x30
   1aef0:	ldr	r1, [sp, #36]	; 0x24
   1aef4:	cmp	r0, r1
   1aef8:	bhi	1afa4 <__assert_fail@plt+0x9730>
   1aefc:	ldr	r0, [sp, #36]	; 0x24
   1af00:	add	r0, r0, #1
   1af04:	str	r0, [sp, #48]	; 0x30
   1af08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1af0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1af10:	add	r1, r1, r2, lsl #3
   1af14:	str	r0, [r1]
   1af18:	ldr	r0, [sp, #44]	; 0x2c
   1af1c:	movw	r1, #21056	; 0x5240
   1af20:	movt	r1, #3
   1af24:	cmp	r0, r1
   1af28:	beq	1af34 <__assert_fail@plt+0x96c0>
   1af2c:	ldr	r0, [sp, #44]	; 0x2c
   1af30:	bl	209b8 <__assert_fail@plt+0xf144>
   1af34:	ldr	r0, [sp, #48]	; 0x30
   1af38:	bl	1cb34 <__assert_fail@plt+0xb2c0>
   1af3c:	mov	lr, r0
   1af40:	str	r0, [sp, #44]	; 0x2c
   1af44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1af48:	ldr	r1, [fp, #-20]	; 0xffffffec
   1af4c:	add	r0, r0, r1, lsl #3
   1af50:	str	lr, [r0, #4]
   1af54:	ldr	r0, [sp, #44]	; 0x2c
   1af58:	ldr	r1, [sp, #48]	; 0x30
   1af5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1af60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af64:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1af68:	ldr	lr, [lr]
   1af6c:	ldr	ip, [sp, #40]	; 0x28
   1af70:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1af74:	add	r4, r4, #8
   1af78:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1af7c:	ldr	r5, [r5, #40]	; 0x28
   1af80:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1af84:	ldr	r6, [r6, #44]	; 0x2c
   1af88:	str	lr, [sp]
   1af8c:	str	ip, [sp, #4]
   1af90:	str	r4, [sp, #8]
   1af94:	str	r5, [sp, #12]
   1af98:	str	r6, [sp, #16]
   1af9c:	bl	192f0 <__assert_fail@plt+0x7a7c>
   1afa0:	str	r0, [sp, #28]
   1afa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1afa8:	str	r0, [sp, #24]
   1afac:	bl	11700 <__errno_location@plt>
   1afb0:	ldr	lr, [sp, #24]
   1afb4:	str	lr, [r0]
   1afb8:	ldr	r0, [sp, #44]	; 0x2c
   1afbc:	sub	sp, fp, #16
   1afc0:	pop	{r4, r5, r6, sl, fp, pc}
   1afc4:	svcvc	0x00ffffff
   1afc8:	push	{fp, lr}
   1afcc:	mov	fp, sp
   1afd0:	sub	sp, sp, #16
   1afd4:	str	r0, [fp, #-4]
   1afd8:	str	r1, [sp, #8]
   1afdc:	str	r2, [sp, #4]
   1afe0:	ldr	r0, [fp, #-4]
   1afe4:	ldr	r1, [sp, #8]
   1afe8:	ldr	r2, [sp, #4]
   1afec:	movw	r3, #21008	; 0x5210
   1aff0:	movt	r3, #3
   1aff4:	bl	1acf8 <__assert_fail@plt+0x9484>
   1aff8:	mov	sp, fp
   1affc:	pop	{fp, pc}
   1b000:	push	{fp, lr}
   1b004:	mov	fp, sp
   1b008:	sub	sp, sp, #8
   1b00c:	str	r0, [sp, #4]
   1b010:	ldr	r1, [sp, #4]
   1b014:	movw	r0, #0
   1b018:	bl	1acc4 <__assert_fail@plt+0x9450>
   1b01c:	mov	sp, fp
   1b020:	pop	{fp, pc}
   1b024:	push	{fp, lr}
   1b028:	mov	fp, sp
   1b02c:	sub	sp, sp, #8
   1b030:	str	r0, [sp, #4]
   1b034:	str	r1, [sp]
   1b038:	ldr	r1, [sp, #4]
   1b03c:	ldr	r2, [sp]
   1b040:	movw	r0, #0
   1b044:	bl	1afc8 <__assert_fail@plt+0x9754>
   1b048:	mov	sp, fp
   1b04c:	pop	{fp, pc}
   1b050:	push	{fp, lr}
   1b054:	mov	fp, sp
   1b058:	sub	sp, sp, #64	; 0x40
   1b05c:	str	r0, [fp, #-4]
   1b060:	str	r1, [fp, #-8]
   1b064:	str	r2, [fp, #-12]
   1b068:	ldr	r1, [fp, #-8]
   1b06c:	add	r0, sp, #4
   1b070:	bl	1b090 <__assert_fail@plt+0x981c>
   1b074:	ldr	r0, [fp, #-4]
   1b078:	ldr	r1, [fp, #-12]
   1b07c:	mvn	r2, #0
   1b080:	add	r3, sp, #4
   1b084:	bl	1acf8 <__assert_fail@plt+0x9484>
   1b088:	mov	sp, fp
   1b08c:	pop	{fp, pc}
   1b090:	push	{fp, lr}
   1b094:	mov	fp, sp
   1b098:	sub	sp, sp, #8
   1b09c:	str	r1, [sp, #4]
   1b0a0:	mov	r1, r0
   1b0a4:	str	r0, [sp]
   1b0a8:	mov	r0, r1
   1b0ac:	movw	r1, #0
   1b0b0:	and	r1, r1, #255	; 0xff
   1b0b4:	movw	r2, #48	; 0x30
   1b0b8:	bl	11718 <memset@plt>
   1b0bc:	ldr	r0, [sp, #4]
   1b0c0:	cmp	r0, #10
   1b0c4:	bne	1b0cc <__assert_fail@plt+0x9858>
   1b0c8:	bl	11838 <abort@plt>
   1b0cc:	ldr	r0, [sp, #4]
   1b0d0:	ldr	r1, [sp]
   1b0d4:	str	r0, [r1]
   1b0d8:	mov	sp, fp
   1b0dc:	pop	{fp, pc}
   1b0e0:	push	{fp, lr}
   1b0e4:	mov	fp, sp
   1b0e8:	sub	sp, sp, #64	; 0x40
   1b0ec:	str	r0, [fp, #-4]
   1b0f0:	str	r1, [fp, #-8]
   1b0f4:	str	r2, [fp, #-12]
   1b0f8:	str	r3, [fp, #-16]
   1b0fc:	ldr	r1, [fp, #-8]
   1b100:	mov	r0, sp
   1b104:	bl	1b090 <__assert_fail@plt+0x981c>
   1b108:	ldr	r0, [fp, #-4]
   1b10c:	ldr	r1, [fp, #-12]
   1b110:	ldr	r2, [fp, #-16]
   1b114:	mov	r3, sp
   1b118:	bl	1acf8 <__assert_fail@plt+0x9484>
   1b11c:	mov	sp, fp
   1b120:	pop	{fp, pc}
   1b124:	push	{fp, lr}
   1b128:	mov	fp, sp
   1b12c:	sub	sp, sp, #8
   1b130:	str	r0, [sp, #4]
   1b134:	str	r1, [sp]
   1b138:	ldr	r1, [sp, #4]
   1b13c:	ldr	r2, [sp]
   1b140:	movw	r0, #0
   1b144:	bl	1b050 <__assert_fail@plt+0x97dc>
   1b148:	mov	sp, fp
   1b14c:	pop	{fp, pc}
   1b150:	push	{fp, lr}
   1b154:	mov	fp, sp
   1b158:	sub	sp, sp, #16
   1b15c:	str	r0, [fp, #-4]
   1b160:	str	r1, [sp, #8]
   1b164:	str	r2, [sp, #4]
   1b168:	ldr	r1, [fp, #-4]
   1b16c:	ldr	r2, [sp, #8]
   1b170:	ldr	r3, [sp, #4]
   1b174:	movw	r0, #0
   1b178:	bl	1b0e0 <__assert_fail@plt+0x986c>
   1b17c:	mov	sp, fp
   1b180:	pop	{fp, pc}
   1b184:	push	{fp, lr}
   1b188:	mov	fp, sp
   1b18c:	sub	sp, sp, #72	; 0x48
   1b190:	movw	r3, #21008	; 0x5210
   1b194:	movt	r3, #3
   1b198:	str	r0, [fp, #-4]
   1b19c:	str	r1, [fp, #-8]
   1b1a0:	strb	r2, [fp, #-9]
   1b1a4:	add	r0, sp, #12
   1b1a8:	mov	r1, r0
   1b1ac:	str	r0, [sp, #8]
   1b1b0:	mov	r0, r1
   1b1b4:	mov	r1, r3
   1b1b8:	movw	r2, #48	; 0x30
   1b1bc:	bl	1152c <memcpy@plt>
   1b1c0:	ldr	r0, [sp, #8]
   1b1c4:	ldrb	r1, [fp, #-9]
   1b1c8:	movw	r2, #1
   1b1cc:	bl	19094 <__assert_fail@plt+0x7820>
   1b1d0:	ldr	r1, [fp, #-4]
   1b1d4:	ldr	r2, [fp, #-8]
   1b1d8:	movw	r3, #0
   1b1dc:	str	r0, [sp, #4]
   1b1e0:	mov	r0, r3
   1b1e4:	add	r3, sp, #12
   1b1e8:	bl	1acf8 <__assert_fail@plt+0x9484>
   1b1ec:	mov	sp, fp
   1b1f0:	pop	{fp, pc}
   1b1f4:	push	{fp, lr}
   1b1f8:	mov	fp, sp
   1b1fc:	sub	sp, sp, #8
   1b200:	str	r0, [sp, #4]
   1b204:	strb	r1, [sp, #3]
   1b208:	ldr	r0, [sp, #4]
   1b20c:	mvn	r1, #0
   1b210:	ldrb	r2, [sp, #3]
   1b214:	bl	1b184 <__assert_fail@plt+0x9910>
   1b218:	mov	sp, fp
   1b21c:	pop	{fp, pc}
   1b220:	push	{fp, lr}
   1b224:	mov	fp, sp
   1b228:	sub	sp, sp, #8
   1b22c:	str	r0, [sp, #4]
   1b230:	ldr	r0, [sp, #4]
   1b234:	movw	r1, #58	; 0x3a
   1b238:	and	r1, r1, #255	; 0xff
   1b23c:	bl	1b1f4 <__assert_fail@plt+0x9980>
   1b240:	mov	sp, fp
   1b244:	pop	{fp, pc}
   1b248:	push	{fp, lr}
   1b24c:	mov	fp, sp
   1b250:	sub	sp, sp, #8
   1b254:	str	r0, [sp, #4]
   1b258:	str	r1, [sp]
   1b25c:	ldr	r0, [sp, #4]
   1b260:	ldr	r1, [sp]
   1b264:	movw	r2, #58	; 0x3a
   1b268:	and	r2, r2, #255	; 0xff
   1b26c:	bl	1b184 <__assert_fail@plt+0x9910>
   1b270:	mov	sp, fp
   1b274:	pop	{fp, pc}
   1b278:	push	{fp, lr}
   1b27c:	mov	fp, sp
   1b280:	sub	sp, sp, #120	; 0x78
   1b284:	str	r0, [fp, #-4]
   1b288:	str	r1, [fp, #-8]
   1b28c:	str	r2, [fp, #-12]
   1b290:	ldr	r1, [fp, #-8]
   1b294:	add	r0, sp, #12
   1b298:	bl	1b090 <__assert_fail@plt+0x981c>
   1b29c:	add	r0, sp, #60	; 0x3c
   1b2a0:	mov	r1, r0
   1b2a4:	add	r2, sp, #12
   1b2a8:	str	r0, [sp, #8]
   1b2ac:	mov	r0, r1
   1b2b0:	mov	r1, r2
   1b2b4:	movw	r2, #48	; 0x30
   1b2b8:	bl	1152c <memcpy@plt>
   1b2bc:	ldr	r0, [sp, #8]
   1b2c0:	movw	r1, #58	; 0x3a
   1b2c4:	and	r1, r1, #255	; 0xff
   1b2c8:	movw	r2, #1
   1b2cc:	bl	19094 <__assert_fail@plt+0x7820>
   1b2d0:	ldr	r1, [fp, #-4]
   1b2d4:	ldr	r2, [fp, #-12]
   1b2d8:	str	r0, [sp, #4]
   1b2dc:	mov	r0, r1
   1b2e0:	mov	r1, r2
   1b2e4:	mvn	r2, #0
   1b2e8:	add	r3, sp, #60	; 0x3c
   1b2ec:	bl	1acf8 <__assert_fail@plt+0x9484>
   1b2f0:	mov	sp, fp
   1b2f4:	pop	{fp, pc}
   1b2f8:	push	{fp, lr}
   1b2fc:	mov	fp, sp
   1b300:	sub	sp, sp, #24
   1b304:	str	r0, [fp, #-4]
   1b308:	str	r1, [fp, #-8]
   1b30c:	str	r2, [sp, #12]
   1b310:	str	r3, [sp, #8]
   1b314:	ldr	r0, [fp, #-4]
   1b318:	ldr	r1, [fp, #-8]
   1b31c:	ldr	r2, [sp, #12]
   1b320:	ldr	r3, [sp, #8]
   1b324:	mvn	ip, #0
   1b328:	str	ip, [sp]
   1b32c:	bl	1b338 <__assert_fail@plt+0x9ac4>
   1b330:	mov	sp, fp
   1b334:	pop	{fp, pc}
   1b338:	push	{fp, lr}
   1b33c:	mov	fp, sp
   1b340:	sub	sp, sp, #72	; 0x48
   1b344:	ldr	ip, [fp, #8]
   1b348:	movw	lr, #21008	; 0x5210
   1b34c:	movt	lr, #3
   1b350:	str	r0, [fp, #-4]
   1b354:	str	r1, [fp, #-8]
   1b358:	str	r2, [fp, #-12]
   1b35c:	str	r3, [fp, #-16]
   1b360:	add	r0, sp, #8
   1b364:	mov	r1, r0
   1b368:	str	r0, [sp, #4]
   1b36c:	mov	r0, r1
   1b370:	mov	r1, lr
   1b374:	movw	r2, #48	; 0x30
   1b378:	str	ip, [sp]
   1b37c:	bl	1152c <memcpy@plt>
   1b380:	ldr	r1, [fp, #-8]
   1b384:	ldr	r2, [fp, #-12]
   1b388:	ldr	r0, [sp, #4]
   1b38c:	bl	19194 <__assert_fail@plt+0x7920>
   1b390:	ldr	r0, [fp, #-4]
   1b394:	ldr	r1, [fp, #-16]
   1b398:	ldr	r2, [fp, #8]
   1b39c:	add	r3, sp, #8
   1b3a0:	bl	1acf8 <__assert_fail@plt+0x9484>
   1b3a4:	mov	sp, fp
   1b3a8:	pop	{fp, pc}
   1b3ac:	push	{fp, lr}
   1b3b0:	mov	fp, sp
   1b3b4:	sub	sp, sp, #16
   1b3b8:	str	r0, [fp, #-4]
   1b3bc:	str	r1, [sp, #8]
   1b3c0:	str	r2, [sp, #4]
   1b3c4:	ldr	r1, [fp, #-4]
   1b3c8:	ldr	r2, [sp, #8]
   1b3cc:	ldr	r3, [sp, #4]
   1b3d0:	movw	r0, #0
   1b3d4:	bl	1b2f8 <__assert_fail@plt+0x9a84>
   1b3d8:	mov	sp, fp
   1b3dc:	pop	{fp, pc}
   1b3e0:	push	{fp, lr}
   1b3e4:	mov	fp, sp
   1b3e8:	sub	sp, sp, #24
   1b3ec:	str	r0, [fp, #-4]
   1b3f0:	str	r1, [fp, #-8]
   1b3f4:	str	r2, [sp, #12]
   1b3f8:	str	r3, [sp, #8]
   1b3fc:	ldr	r1, [fp, #-4]
   1b400:	ldr	r2, [fp, #-8]
   1b404:	ldr	r3, [sp, #12]
   1b408:	ldr	r0, [sp, #8]
   1b40c:	movw	ip, #0
   1b410:	str	r0, [sp, #4]
   1b414:	mov	r0, ip
   1b418:	ldr	ip, [sp, #4]
   1b41c:	str	ip, [sp]
   1b420:	bl	1b338 <__assert_fail@plt+0x9ac4>
   1b424:	mov	sp, fp
   1b428:	pop	{fp, pc}
   1b42c:	push	{fp, lr}
   1b430:	mov	fp, sp
   1b434:	sub	sp, sp, #16
   1b438:	str	r0, [fp, #-4]
   1b43c:	str	r1, [sp, #8]
   1b440:	str	r2, [sp, #4]
   1b444:	ldr	r0, [fp, #-4]
   1b448:	ldr	r1, [sp, #8]
   1b44c:	ldr	r2, [sp, #4]
   1b450:	movw	r3, #20860	; 0x517c
   1b454:	movt	r3, #3
   1b458:	bl	1acf8 <__assert_fail@plt+0x9484>
   1b45c:	mov	sp, fp
   1b460:	pop	{fp, pc}
   1b464:	push	{fp, lr}
   1b468:	mov	fp, sp
   1b46c:	sub	sp, sp, #8
   1b470:	str	r0, [sp, #4]
   1b474:	str	r1, [sp]
   1b478:	ldr	r1, [sp, #4]
   1b47c:	ldr	r2, [sp]
   1b480:	movw	r0, #0
   1b484:	bl	1b42c <__assert_fail@plt+0x9bb8>
   1b488:	mov	sp, fp
   1b48c:	pop	{fp, pc}
   1b490:	push	{fp, lr}
   1b494:	mov	fp, sp
   1b498:	sub	sp, sp, #8
   1b49c:	str	r0, [sp, #4]
   1b4a0:	str	r1, [sp]
   1b4a4:	ldr	r0, [sp, #4]
   1b4a8:	ldr	r1, [sp]
   1b4ac:	mvn	r2, #0
   1b4b0:	bl	1b42c <__assert_fail@plt+0x9bb8>
   1b4b4:	mov	sp, fp
   1b4b8:	pop	{fp, pc}
   1b4bc:	push	{fp, lr}
   1b4c0:	mov	fp, sp
   1b4c4:	sub	sp, sp, #8
   1b4c8:	str	r0, [sp, #4]
   1b4cc:	ldr	r1, [sp, #4]
   1b4d0:	movw	r0, #0
   1b4d4:	bl	1b490 <__assert_fail@plt+0x9c1c>
   1b4d8:	mov	sp, fp
   1b4dc:	pop	{fp, pc}
   1b4e0:	push	{fp, lr}
   1b4e4:	mov	fp, sp
   1b4e8:	sub	sp, sp, #24
   1b4ec:	str	r0, [fp, #-8]
   1b4f0:	str	r1, [sp, #12]
   1b4f4:	ldr	r0, [fp, #-8]
   1b4f8:	bl	116b8 <gettext@plt>
   1b4fc:	str	r0, [sp, #8]
   1b500:	ldr	r0, [sp, #8]
   1b504:	ldr	r1, [fp, #-8]
   1b508:	cmp	r0, r1
   1b50c:	beq	1b51c <__assert_fail@plt+0x9ca8>
   1b510:	ldr	r0, [sp, #8]
   1b514:	str	r0, [fp, #-4]
   1b518:	b	1b5e8 <__assert_fail@plt+0x9d74>
   1b51c:	bl	20cd8 <__assert_fail@plt+0xf464>
   1b520:	str	r0, [sp, #4]
   1b524:	ldr	r0, [sp, #4]
   1b528:	movw	r1, #17076	; 0x42b4
   1b52c:	movt	r1, #2
   1b530:	bl	20040 <__assert_fail@plt+0xe7cc>
   1b534:	cmp	r0, #0
   1b538:	bne	1b570 <__assert_fail@plt+0x9cfc>
   1b53c:	ldr	r0, [fp, #-8]
   1b540:	ldrb	r0, [r0]
   1b544:	cmp	r0, #96	; 0x60
   1b548:	movw	r0, #0
   1b54c:	moveq	r0, #1
   1b550:	tst	r0, #1
   1b554:	movw	r0, #17086	; 0x42be
   1b558:	movt	r0, #2
   1b55c:	movw	r1, #17082	; 0x42ba
   1b560:	movt	r1, #2
   1b564:	movne	r0, r1
   1b568:	str	r0, [fp, #-4]
   1b56c:	b	1b5e8 <__assert_fail@plt+0x9d74>
   1b570:	ldr	r0, [sp, #4]
   1b574:	movw	r1, #17090	; 0x42c2
   1b578:	movt	r1, #2
   1b57c:	bl	20040 <__assert_fail@plt+0xe7cc>
   1b580:	cmp	r0, #0
   1b584:	bne	1b5bc <__assert_fail@plt+0x9d48>
   1b588:	ldr	r0, [fp, #-8]
   1b58c:	ldrb	r0, [r0]
   1b590:	cmp	r0, #96	; 0x60
   1b594:	movw	r0, #0
   1b598:	moveq	r0, #1
   1b59c:	tst	r0, #1
   1b5a0:	movw	r0, #17102	; 0x42ce
   1b5a4:	movt	r0, #2
   1b5a8:	movw	r1, #17098	; 0x42ca
   1b5ac:	movt	r1, #2
   1b5b0:	movne	r0, r1
   1b5b4:	str	r0, [fp, #-4]
   1b5b8:	b	1b5e8 <__assert_fail@plt+0x9d74>
   1b5bc:	ldr	r0, [sp, #12]
   1b5c0:	cmp	r0, #9
   1b5c4:	movw	r0, #0
   1b5c8:	moveq	r0, #1
   1b5cc:	tst	r0, #1
   1b5d0:	movw	r0, #18437	; 0x4805
   1b5d4:	movt	r0, #2
   1b5d8:	movw	r1, #17072	; 0x42b0
   1b5dc:	movt	r1, #2
   1b5e0:	movne	r0, r1
   1b5e4:	str	r0, [fp, #-4]
   1b5e8:	ldr	r0, [fp, #-4]
   1b5ec:	mov	sp, fp
   1b5f0:	pop	{fp, pc}
   1b5f4:	push	{fp, lr}
   1b5f8:	mov	fp, sp
   1b5fc:	sub	sp, sp, #112	; 0x70
   1b600:	str	r0, [fp, #-8]
   1b604:	movw	r0, #18161	; 0x46f1
   1b608:	movt	r0, #2
   1b60c:	mov	r1, sp
   1b610:	bl	23390 <__assert_fail@plt+0x11b1c>
   1b614:	cmp	r0, #0
   1b618:	beq	1b628 <__assert_fail@plt+0x9db4>
   1b61c:	movw	r0, #0
   1b620:	str	r0, [fp, #-4]
   1b624:	b	1b658 <__assert_fail@plt+0x9de4>
   1b628:	ldr	r0, [sp, #96]	; 0x60
   1b62c:	ldr	r1, [sp, #100]	; 0x64
   1b630:	ldr	r2, [fp, #-8]
   1b634:	str	r1, [r2, #4]
   1b638:	str	r0, [r2]
   1b63c:	ldr	r0, [sp]
   1b640:	ldr	r1, [sp, #4]
   1b644:	ldr	r2, [fp, #-8]
   1b648:	str	r1, [r2, #12]
   1b64c:	str	r0, [r2, #8]
   1b650:	ldr	r0, [fp, #-8]
   1b654:	str	r0, [fp, #-4]
   1b658:	ldr	r0, [fp, #-4]
   1b65c:	mov	sp, fp
   1b660:	pop	{fp, pc}
   1b664:	push	{r4, r5, fp, lr}
   1b668:	add	fp, sp, #8
   1b66c:	sub	sp, sp, #4096	; 0x1000
   1b670:	str	r0, [fp, #-16]
   1b674:	str	r1, [fp, #-20]	; 0xffffffec
   1b678:	str	r2, [fp, #-24]	; 0xffffffe8
   1b67c:	ldr	r0, [fp, #-16]
   1b680:	cmn	r0, #100	; 0x64
   1b684:	beq	1b698 <__assert_fail@plt+0x9e24>
   1b688:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b68c:	ldrb	r0, [r0]
   1b690:	cmp	r0, #47	; 0x2f
   1b694:	bne	1b6ac <__assert_fail@plt+0x9e38>
   1b698:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b69c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b6a0:	bl	1bfe4 <__assert_fail@plt+0xa770>
   1b6a4:	str	r0, [fp, #-12]
   1b6a8:	b	1b8b8 <__assert_fail@plt+0xa044>
   1b6ac:	add	r0, sp, #32
   1b6b0:	ldr	r1, [fp, #-16]
   1b6b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b6b8:	bl	1fbc0 <__assert_fail@plt+0xe34c>
   1b6bc:	str	r0, [sp, #28]
   1b6c0:	ldr	r0, [sp, #28]
   1b6c4:	movw	r1, #0
   1b6c8:	cmp	r0, r1
   1b6cc:	beq	1b78c <__assert_fail@plt+0x9f18>
   1b6d0:	ldr	r0, [sp, #28]
   1b6d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b6d8:	bl	1bfe4 <__assert_fail@plt+0xa770>
   1b6dc:	str	r0, [sp, #24]
   1b6e0:	bl	11700 <__errno_location@plt>
   1b6e4:	add	r1, sp, #32
   1b6e8:	ldr	r0, [r0]
   1b6ec:	str	r0, [sp, #20]
   1b6f0:	ldr	r0, [sp, #28]
   1b6f4:	cmp	r0, r1
   1b6f8:	beq	1b704 <__assert_fail@plt+0x9e90>
   1b6fc:	ldr	r0, [sp, #28]
   1b700:	bl	209b8 <__assert_fail@plt+0xf144>
   1b704:	ldr	r0, [sp, #24]
   1b708:	mvn	r1, #0
   1b70c:	cmp	r1, r0
   1b710:	beq	1b720 <__assert_fail@plt+0x9eac>
   1b714:	ldr	r0, [sp, #24]
   1b718:	str	r0, [fp, #-12]
   1b71c:	b	1b8b8 <__assert_fail@plt+0xa044>
   1b720:	ldr	r0, [sp, #20]
   1b724:	cmp	r0, #20
   1b728:	beq	1b788 <__assert_fail@plt+0x9f14>
   1b72c:	ldr	r0, [sp, #20]
   1b730:	cmp	r0, #2
   1b734:	beq	1b788 <__assert_fail@plt+0x9f14>
   1b738:	ldr	r0, [sp, #20]
   1b73c:	cmp	r0, #1
   1b740:	beq	1b788 <__assert_fail@plt+0x9f14>
   1b744:	ldr	r0, [sp, #20]
   1b748:	cmp	r0, #13
   1b74c:	beq	1b788 <__assert_fail@plt+0x9f14>
   1b750:	ldr	r0, [sp, #20]
   1b754:	cmp	r0, #38	; 0x26
   1b758:	beq	1b788 <__assert_fail@plt+0x9f14>
   1b75c:	ldr	r0, [sp, #20]
   1b760:	cmp	r0, #95	; 0x5f
   1b764:	beq	1b788 <__assert_fail@plt+0x9f14>
   1b768:	ldr	r0, [sp, #20]
   1b76c:	str	r0, [sp, #16]
   1b770:	bl	11700 <__errno_location@plt>
   1b774:	ldr	lr, [sp, #16]
   1b778:	str	lr, [r0]
   1b77c:	ldr	r0, [sp, #24]
   1b780:	str	r0, [fp, #-12]
   1b784:	b	1b8b8 <__assert_fail@plt+0xa044>
   1b788:	b	1b78c <__assert_fail@plt+0x9f18>
   1b78c:	sub	r0, fp, #32
   1b790:	bl	2221c <__assert_fail@plt+0x109a8>
   1b794:	cmp	r0, #0
   1b798:	beq	1b7a8 <__assert_fail@plt+0x9f34>
   1b79c:	bl	11700 <__errno_location@plt>
   1b7a0:	ldr	r0, [r0]
   1b7a4:	bl	20de4 <__assert_fail@plt+0xf570>
   1b7a8:	ldr	r0, [fp, #-16]
   1b7ac:	movw	r1, #0
   1b7b0:	cmp	r1, r0
   1b7b4:	bgt	1b7e8 <__assert_fail@plt+0x9f74>
   1b7b8:	ldr	r0, [fp, #-16]
   1b7bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b7c0:	cmp	r0, r1
   1b7c4:	bne	1b7e8 <__assert_fail@plt+0x9f74>
   1b7c8:	sub	r0, fp, #32
   1b7cc:	bl	2230c <__assert_fail@plt+0x10a98>
   1b7d0:	bl	11700 <__errno_location@plt>
   1b7d4:	movw	lr, #9
   1b7d8:	str	lr, [r0]
   1b7dc:	mvn	r0, #0
   1b7e0:	str	r0, [fp, #-12]
   1b7e4:	b	1b8b8 <__assert_fail@plt+0xa044>
   1b7e8:	ldr	r0, [fp, #-16]
   1b7ec:	bl	117cc <fchdir@plt>
   1b7f0:	cmp	r0, #0
   1b7f4:	beq	1b82c <__assert_fail@plt+0x9fb8>
   1b7f8:	bl	11700 <__errno_location@plt>
   1b7fc:	ldr	r0, [r0]
   1b800:	str	r0, [fp, #-36]	; 0xffffffdc
   1b804:	sub	r0, fp, #32
   1b808:	bl	2230c <__assert_fail@plt+0x10a98>
   1b80c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b810:	str	r0, [sp, #12]
   1b814:	bl	11700 <__errno_location@plt>
   1b818:	ldr	lr, [sp, #12]
   1b81c:	str	lr, [r0]
   1b820:	mvn	r0, #0
   1b824:	str	r0, [fp, #-12]
   1b828:	b	1b8b8 <__assert_fail@plt+0xa044>
   1b82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b834:	bl	1bfe4 <__assert_fail@plt+0xa770>
   1b838:	str	r0, [fp, #-40]	; 0xffffffd8
   1b83c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b840:	cmn	r0, #1
   1b844:	bne	1b858 <__assert_fail@plt+0x9fe4>
   1b848:	bl	11700 <__errno_location@plt>
   1b84c:	ldr	r0, [r0]
   1b850:	str	r0, [sp, #8]
   1b854:	b	1b864 <__assert_fail@plt+0x9ff0>
   1b858:	movw	r0, #0
   1b85c:	str	r0, [sp, #8]
   1b860:	b	1b864 <__assert_fail@plt+0x9ff0>
   1b864:	ldr	r0, [sp, #8]
   1b868:	str	r0, [fp, #-36]	; 0xffffffdc
   1b86c:	sub	r0, fp, #32
   1b870:	bl	222b8 <__assert_fail@plt+0x10a44>
   1b874:	cmp	r0, #0
   1b878:	beq	1b888 <__assert_fail@plt+0xa014>
   1b87c:	bl	11700 <__errno_location@plt>
   1b880:	ldr	r0, [r0]
   1b884:	bl	20e38 <__assert_fail@plt+0xf5c4>
   1b888:	sub	r0, fp, #32
   1b88c:	bl	2230c <__assert_fail@plt+0x10a98>
   1b890:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b894:	cmp	r0, #0
   1b898:	beq	1b8b0 <__assert_fail@plt+0xa03c>
   1b89c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b8a0:	str	r0, [sp, #4]
   1b8a4:	bl	11700 <__errno_location@plt>
   1b8a8:	ldr	lr, [sp, #4]
   1b8ac:	str	lr, [r0]
   1b8b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b8b4:	str	r0, [fp, #-12]
   1b8b8:	ldr	r0, [fp, #-12]
   1b8bc:	sub	sp, fp, #8
   1b8c0:	pop	{r4, r5, fp, pc}
   1b8c4:	push	{r4, r5, fp, lr}
   1b8c8:	add	fp, sp, #8
   1b8cc:	sub	sp, sp, #4096	; 0x1000
   1b8d0:	str	r0, [fp, #-16]
   1b8d4:	str	r1, [fp, #-20]	; 0xffffffec
   1b8d8:	str	r2, [fp, #-24]	; 0xffffffe8
   1b8dc:	ldr	r0, [fp, #-16]
   1b8e0:	cmn	r0, #100	; 0x64
   1b8e4:	beq	1b8f8 <__assert_fail@plt+0xa084>
   1b8e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b8ec:	ldrb	r0, [r0]
   1b8f0:	cmp	r0, #47	; 0x2f
   1b8f4:	bne	1b90c <__assert_fail@plt+0xa098>
   1b8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b8fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b900:	bl	1c0c0 <__assert_fail@plt+0xa84c>
   1b904:	str	r0, [fp, #-12]
   1b908:	b	1bb18 <__assert_fail@plt+0xa2a4>
   1b90c:	add	r0, sp, #32
   1b910:	ldr	r1, [fp, #-16]
   1b914:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b918:	bl	1fbc0 <__assert_fail@plt+0xe34c>
   1b91c:	str	r0, [sp, #28]
   1b920:	ldr	r0, [sp, #28]
   1b924:	movw	r1, #0
   1b928:	cmp	r0, r1
   1b92c:	beq	1b9ec <__assert_fail@plt+0xa178>
   1b930:	ldr	r0, [sp, #28]
   1b934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b938:	bl	1c0c0 <__assert_fail@plt+0xa84c>
   1b93c:	str	r0, [sp, #24]
   1b940:	bl	11700 <__errno_location@plt>
   1b944:	add	r1, sp, #32
   1b948:	ldr	r0, [r0]
   1b94c:	str	r0, [sp, #20]
   1b950:	ldr	r0, [sp, #28]
   1b954:	cmp	r0, r1
   1b958:	beq	1b964 <__assert_fail@plt+0xa0f0>
   1b95c:	ldr	r0, [sp, #28]
   1b960:	bl	209b8 <__assert_fail@plt+0xf144>
   1b964:	ldr	r0, [sp, #24]
   1b968:	mvn	r1, #0
   1b96c:	cmp	r1, r0
   1b970:	beq	1b980 <__assert_fail@plt+0xa10c>
   1b974:	ldr	r0, [sp, #24]
   1b978:	str	r0, [fp, #-12]
   1b97c:	b	1bb18 <__assert_fail@plt+0xa2a4>
   1b980:	ldr	r0, [sp, #20]
   1b984:	cmp	r0, #20
   1b988:	beq	1b9e8 <__assert_fail@plt+0xa174>
   1b98c:	ldr	r0, [sp, #20]
   1b990:	cmp	r0, #2
   1b994:	beq	1b9e8 <__assert_fail@plt+0xa174>
   1b998:	ldr	r0, [sp, #20]
   1b99c:	cmp	r0, #1
   1b9a0:	beq	1b9e8 <__assert_fail@plt+0xa174>
   1b9a4:	ldr	r0, [sp, #20]
   1b9a8:	cmp	r0, #13
   1b9ac:	beq	1b9e8 <__assert_fail@plt+0xa174>
   1b9b0:	ldr	r0, [sp, #20]
   1b9b4:	cmp	r0, #38	; 0x26
   1b9b8:	beq	1b9e8 <__assert_fail@plt+0xa174>
   1b9bc:	ldr	r0, [sp, #20]
   1b9c0:	cmp	r0, #95	; 0x5f
   1b9c4:	beq	1b9e8 <__assert_fail@plt+0xa174>
   1b9c8:	ldr	r0, [sp, #20]
   1b9cc:	str	r0, [sp, #16]
   1b9d0:	bl	11700 <__errno_location@plt>
   1b9d4:	ldr	lr, [sp, #16]
   1b9d8:	str	lr, [r0]
   1b9dc:	ldr	r0, [sp, #24]
   1b9e0:	str	r0, [fp, #-12]
   1b9e4:	b	1bb18 <__assert_fail@plt+0xa2a4>
   1b9e8:	b	1b9ec <__assert_fail@plt+0xa178>
   1b9ec:	sub	r0, fp, #32
   1b9f0:	bl	2221c <__assert_fail@plt+0x109a8>
   1b9f4:	cmp	r0, #0
   1b9f8:	beq	1ba08 <__assert_fail@plt+0xa194>
   1b9fc:	bl	11700 <__errno_location@plt>
   1ba00:	ldr	r0, [r0]
   1ba04:	bl	20de4 <__assert_fail@plt+0xf570>
   1ba08:	ldr	r0, [fp, #-16]
   1ba0c:	movw	r1, #0
   1ba10:	cmp	r1, r0
   1ba14:	bgt	1ba48 <__assert_fail@plt+0xa1d4>
   1ba18:	ldr	r0, [fp, #-16]
   1ba1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ba20:	cmp	r0, r1
   1ba24:	bne	1ba48 <__assert_fail@plt+0xa1d4>
   1ba28:	sub	r0, fp, #32
   1ba2c:	bl	2230c <__assert_fail@plt+0x10a98>
   1ba30:	bl	11700 <__errno_location@plt>
   1ba34:	movw	lr, #9
   1ba38:	str	lr, [r0]
   1ba3c:	mvn	r0, #0
   1ba40:	str	r0, [fp, #-12]
   1ba44:	b	1bb18 <__assert_fail@plt+0xa2a4>
   1ba48:	ldr	r0, [fp, #-16]
   1ba4c:	bl	117cc <fchdir@plt>
   1ba50:	cmp	r0, #0
   1ba54:	beq	1ba8c <__assert_fail@plt+0xa218>
   1ba58:	bl	11700 <__errno_location@plt>
   1ba5c:	ldr	r0, [r0]
   1ba60:	str	r0, [fp, #-36]	; 0xffffffdc
   1ba64:	sub	r0, fp, #32
   1ba68:	bl	2230c <__assert_fail@plt+0x10a98>
   1ba6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba70:	str	r0, [sp, #12]
   1ba74:	bl	11700 <__errno_location@plt>
   1ba78:	ldr	lr, [sp, #12]
   1ba7c:	str	lr, [r0]
   1ba80:	mvn	r0, #0
   1ba84:	str	r0, [fp, #-12]
   1ba88:	b	1bb18 <__assert_fail@plt+0xa2a4>
   1ba8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba94:	bl	1c0c0 <__assert_fail@plt+0xa84c>
   1ba98:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1baa0:	cmn	r0, #1
   1baa4:	bne	1bab8 <__assert_fail@plt+0xa244>
   1baa8:	bl	11700 <__errno_location@plt>
   1baac:	ldr	r0, [r0]
   1bab0:	str	r0, [sp, #8]
   1bab4:	b	1bac4 <__assert_fail@plt+0xa250>
   1bab8:	movw	r0, #0
   1babc:	str	r0, [sp, #8]
   1bac0:	b	1bac4 <__assert_fail@plt+0xa250>
   1bac4:	ldr	r0, [sp, #8]
   1bac8:	str	r0, [fp, #-36]	; 0xffffffdc
   1bacc:	sub	r0, fp, #32
   1bad0:	bl	222b8 <__assert_fail@plt+0x10a44>
   1bad4:	cmp	r0, #0
   1bad8:	beq	1bae8 <__assert_fail@plt+0xa274>
   1badc:	bl	11700 <__errno_location@plt>
   1bae0:	ldr	r0, [r0]
   1bae4:	bl	20e38 <__assert_fail@plt+0xf5c4>
   1bae8:	sub	r0, fp, #32
   1baec:	bl	2230c <__assert_fail@plt+0x10a98>
   1baf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1baf4:	cmp	r0, #0
   1baf8:	beq	1bb10 <__assert_fail@plt+0xa29c>
   1bafc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bb00:	str	r0, [sp, #4]
   1bb04:	bl	11700 <__errno_location@plt>
   1bb08:	ldr	lr, [sp, #4]
   1bb0c:	str	lr, [r0]
   1bb10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb14:	str	r0, [fp, #-12]
   1bb18:	ldr	r0, [fp, #-12]
   1bb1c:	sub	sp, fp, #8
   1bb20:	pop	{r4, r5, fp, pc}
   1bb24:	push	{r4, r5, fp, lr}
   1bb28:	add	fp, sp, #8
   1bb2c:	sub	sp, sp, #4096	; 0x1000
   1bb30:	str	r0, [fp, #-16]
   1bb34:	str	r1, [fp, #-20]	; 0xffffffec
   1bb38:	str	r2, [fp, #-24]	; 0xffffffe8
   1bb3c:	ldr	r0, [fp, #-16]
   1bb40:	cmn	r0, #100	; 0x64
   1bb44:	beq	1bb58 <__assert_fail@plt+0xa2e4>
   1bb48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb4c:	ldrb	r0, [r0]
   1bb50:	cmp	r0, #47	; 0x2f
   1bb54:	bne	1bb6c <__assert_fail@plt+0xa2f8>
   1bb58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb60:	bl	1173c <setfilecon@plt>
   1bb64:	str	r0, [fp, #-12]
   1bb68:	b	1bd78 <__assert_fail@plt+0xa504>
   1bb6c:	add	r0, sp, #32
   1bb70:	ldr	r1, [fp, #-16]
   1bb74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bb78:	bl	1fbc0 <__assert_fail@plt+0xe34c>
   1bb7c:	str	r0, [sp, #28]
   1bb80:	ldr	r0, [sp, #28]
   1bb84:	movw	r1, #0
   1bb88:	cmp	r0, r1
   1bb8c:	beq	1bc4c <__assert_fail@plt+0xa3d8>
   1bb90:	ldr	r0, [sp, #28]
   1bb94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb98:	bl	1173c <setfilecon@plt>
   1bb9c:	str	r0, [sp, #24]
   1bba0:	bl	11700 <__errno_location@plt>
   1bba4:	add	r1, sp, #32
   1bba8:	ldr	r0, [r0]
   1bbac:	str	r0, [sp, #20]
   1bbb0:	ldr	r0, [sp, #28]
   1bbb4:	cmp	r0, r1
   1bbb8:	beq	1bbc4 <__assert_fail@plt+0xa350>
   1bbbc:	ldr	r0, [sp, #28]
   1bbc0:	bl	209b8 <__assert_fail@plt+0xf144>
   1bbc4:	ldr	r0, [sp, #24]
   1bbc8:	mvn	r1, #0
   1bbcc:	cmp	r1, r0
   1bbd0:	beq	1bbe0 <__assert_fail@plt+0xa36c>
   1bbd4:	ldr	r0, [sp, #24]
   1bbd8:	str	r0, [fp, #-12]
   1bbdc:	b	1bd78 <__assert_fail@plt+0xa504>
   1bbe0:	ldr	r0, [sp, #20]
   1bbe4:	cmp	r0, #20
   1bbe8:	beq	1bc48 <__assert_fail@plt+0xa3d4>
   1bbec:	ldr	r0, [sp, #20]
   1bbf0:	cmp	r0, #2
   1bbf4:	beq	1bc48 <__assert_fail@plt+0xa3d4>
   1bbf8:	ldr	r0, [sp, #20]
   1bbfc:	cmp	r0, #1
   1bc00:	beq	1bc48 <__assert_fail@plt+0xa3d4>
   1bc04:	ldr	r0, [sp, #20]
   1bc08:	cmp	r0, #13
   1bc0c:	beq	1bc48 <__assert_fail@plt+0xa3d4>
   1bc10:	ldr	r0, [sp, #20]
   1bc14:	cmp	r0, #38	; 0x26
   1bc18:	beq	1bc48 <__assert_fail@plt+0xa3d4>
   1bc1c:	ldr	r0, [sp, #20]
   1bc20:	cmp	r0, #95	; 0x5f
   1bc24:	beq	1bc48 <__assert_fail@plt+0xa3d4>
   1bc28:	ldr	r0, [sp, #20]
   1bc2c:	str	r0, [sp, #16]
   1bc30:	bl	11700 <__errno_location@plt>
   1bc34:	ldr	lr, [sp, #16]
   1bc38:	str	lr, [r0]
   1bc3c:	ldr	r0, [sp, #24]
   1bc40:	str	r0, [fp, #-12]
   1bc44:	b	1bd78 <__assert_fail@plt+0xa504>
   1bc48:	b	1bc4c <__assert_fail@plt+0xa3d8>
   1bc4c:	sub	r0, fp, #32
   1bc50:	bl	2221c <__assert_fail@plt+0x109a8>
   1bc54:	cmp	r0, #0
   1bc58:	beq	1bc68 <__assert_fail@plt+0xa3f4>
   1bc5c:	bl	11700 <__errno_location@plt>
   1bc60:	ldr	r0, [r0]
   1bc64:	bl	20de4 <__assert_fail@plt+0xf570>
   1bc68:	ldr	r0, [fp, #-16]
   1bc6c:	movw	r1, #0
   1bc70:	cmp	r1, r0
   1bc74:	bgt	1bca8 <__assert_fail@plt+0xa434>
   1bc78:	ldr	r0, [fp, #-16]
   1bc7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bc80:	cmp	r0, r1
   1bc84:	bne	1bca8 <__assert_fail@plt+0xa434>
   1bc88:	sub	r0, fp, #32
   1bc8c:	bl	2230c <__assert_fail@plt+0x10a98>
   1bc90:	bl	11700 <__errno_location@plt>
   1bc94:	movw	lr, #9
   1bc98:	str	lr, [r0]
   1bc9c:	mvn	r0, #0
   1bca0:	str	r0, [fp, #-12]
   1bca4:	b	1bd78 <__assert_fail@plt+0xa504>
   1bca8:	ldr	r0, [fp, #-16]
   1bcac:	bl	117cc <fchdir@plt>
   1bcb0:	cmp	r0, #0
   1bcb4:	beq	1bcec <__assert_fail@plt+0xa478>
   1bcb8:	bl	11700 <__errno_location@plt>
   1bcbc:	ldr	r0, [r0]
   1bcc0:	str	r0, [fp, #-36]	; 0xffffffdc
   1bcc4:	sub	r0, fp, #32
   1bcc8:	bl	2230c <__assert_fail@plt+0x10a98>
   1bccc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bcd0:	str	r0, [sp, #12]
   1bcd4:	bl	11700 <__errno_location@plt>
   1bcd8:	ldr	lr, [sp, #12]
   1bcdc:	str	lr, [r0]
   1bce0:	mvn	r0, #0
   1bce4:	str	r0, [fp, #-12]
   1bce8:	b	1bd78 <__assert_fail@plt+0xa504>
   1bcec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bcf4:	bl	1173c <setfilecon@plt>
   1bcf8:	str	r0, [fp, #-40]	; 0xffffffd8
   1bcfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd00:	cmn	r0, #1
   1bd04:	bne	1bd18 <__assert_fail@plt+0xa4a4>
   1bd08:	bl	11700 <__errno_location@plt>
   1bd0c:	ldr	r0, [r0]
   1bd10:	str	r0, [sp, #8]
   1bd14:	b	1bd24 <__assert_fail@plt+0xa4b0>
   1bd18:	movw	r0, #0
   1bd1c:	str	r0, [sp, #8]
   1bd20:	b	1bd24 <__assert_fail@plt+0xa4b0>
   1bd24:	ldr	r0, [sp, #8]
   1bd28:	str	r0, [fp, #-36]	; 0xffffffdc
   1bd2c:	sub	r0, fp, #32
   1bd30:	bl	222b8 <__assert_fail@plt+0x10a44>
   1bd34:	cmp	r0, #0
   1bd38:	beq	1bd48 <__assert_fail@plt+0xa4d4>
   1bd3c:	bl	11700 <__errno_location@plt>
   1bd40:	ldr	r0, [r0]
   1bd44:	bl	20e38 <__assert_fail@plt+0xf5c4>
   1bd48:	sub	r0, fp, #32
   1bd4c:	bl	2230c <__assert_fail@plt+0x10a98>
   1bd50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bd54:	cmp	r0, #0
   1bd58:	beq	1bd70 <__assert_fail@plt+0xa4fc>
   1bd5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bd60:	str	r0, [sp, #4]
   1bd64:	bl	11700 <__errno_location@plt>
   1bd68:	ldr	lr, [sp, #4]
   1bd6c:	str	lr, [r0]
   1bd70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd74:	str	r0, [fp, #-12]
   1bd78:	ldr	r0, [fp, #-12]
   1bd7c:	sub	sp, fp, #8
   1bd80:	pop	{r4, r5, fp, pc}
   1bd84:	push	{r4, r5, fp, lr}
   1bd88:	add	fp, sp, #8
   1bd8c:	sub	sp, sp, #4096	; 0x1000
   1bd90:	str	r0, [fp, #-16]
   1bd94:	str	r1, [fp, #-20]	; 0xffffffec
   1bd98:	str	r2, [fp, #-24]	; 0xffffffe8
   1bd9c:	ldr	r0, [fp, #-16]
   1bda0:	cmn	r0, #100	; 0x64
   1bda4:	beq	1bdb8 <__assert_fail@plt+0xa544>
   1bda8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bdac:	ldrb	r0, [r0]
   1bdb0:	cmp	r0, #47	; 0x2f
   1bdb4:	bne	1bdcc <__assert_fail@plt+0xa558>
   1bdb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bdbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdc0:	bl	114fc <lsetfilecon@plt>
   1bdc4:	str	r0, [fp, #-12]
   1bdc8:	b	1bfd8 <__assert_fail@plt+0xa764>
   1bdcc:	add	r0, sp, #32
   1bdd0:	ldr	r1, [fp, #-16]
   1bdd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bdd8:	bl	1fbc0 <__assert_fail@plt+0xe34c>
   1bddc:	str	r0, [sp, #28]
   1bde0:	ldr	r0, [sp, #28]
   1bde4:	movw	r1, #0
   1bde8:	cmp	r0, r1
   1bdec:	beq	1beac <__assert_fail@plt+0xa638>
   1bdf0:	ldr	r0, [sp, #28]
   1bdf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdf8:	bl	114fc <lsetfilecon@plt>
   1bdfc:	str	r0, [sp, #24]
   1be00:	bl	11700 <__errno_location@plt>
   1be04:	add	r1, sp, #32
   1be08:	ldr	r0, [r0]
   1be0c:	str	r0, [sp, #20]
   1be10:	ldr	r0, [sp, #28]
   1be14:	cmp	r0, r1
   1be18:	beq	1be24 <__assert_fail@plt+0xa5b0>
   1be1c:	ldr	r0, [sp, #28]
   1be20:	bl	209b8 <__assert_fail@plt+0xf144>
   1be24:	ldr	r0, [sp, #24]
   1be28:	mvn	r1, #0
   1be2c:	cmp	r1, r0
   1be30:	beq	1be40 <__assert_fail@plt+0xa5cc>
   1be34:	ldr	r0, [sp, #24]
   1be38:	str	r0, [fp, #-12]
   1be3c:	b	1bfd8 <__assert_fail@plt+0xa764>
   1be40:	ldr	r0, [sp, #20]
   1be44:	cmp	r0, #20
   1be48:	beq	1bea8 <__assert_fail@plt+0xa634>
   1be4c:	ldr	r0, [sp, #20]
   1be50:	cmp	r0, #2
   1be54:	beq	1bea8 <__assert_fail@plt+0xa634>
   1be58:	ldr	r0, [sp, #20]
   1be5c:	cmp	r0, #1
   1be60:	beq	1bea8 <__assert_fail@plt+0xa634>
   1be64:	ldr	r0, [sp, #20]
   1be68:	cmp	r0, #13
   1be6c:	beq	1bea8 <__assert_fail@plt+0xa634>
   1be70:	ldr	r0, [sp, #20]
   1be74:	cmp	r0, #38	; 0x26
   1be78:	beq	1bea8 <__assert_fail@plt+0xa634>
   1be7c:	ldr	r0, [sp, #20]
   1be80:	cmp	r0, #95	; 0x5f
   1be84:	beq	1bea8 <__assert_fail@plt+0xa634>
   1be88:	ldr	r0, [sp, #20]
   1be8c:	str	r0, [sp, #16]
   1be90:	bl	11700 <__errno_location@plt>
   1be94:	ldr	lr, [sp, #16]
   1be98:	str	lr, [r0]
   1be9c:	ldr	r0, [sp, #24]
   1bea0:	str	r0, [fp, #-12]
   1bea4:	b	1bfd8 <__assert_fail@plt+0xa764>
   1bea8:	b	1beac <__assert_fail@plt+0xa638>
   1beac:	sub	r0, fp, #32
   1beb0:	bl	2221c <__assert_fail@plt+0x109a8>
   1beb4:	cmp	r0, #0
   1beb8:	beq	1bec8 <__assert_fail@plt+0xa654>
   1bebc:	bl	11700 <__errno_location@plt>
   1bec0:	ldr	r0, [r0]
   1bec4:	bl	20de4 <__assert_fail@plt+0xf570>
   1bec8:	ldr	r0, [fp, #-16]
   1becc:	movw	r1, #0
   1bed0:	cmp	r1, r0
   1bed4:	bgt	1bf08 <__assert_fail@plt+0xa694>
   1bed8:	ldr	r0, [fp, #-16]
   1bedc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bee0:	cmp	r0, r1
   1bee4:	bne	1bf08 <__assert_fail@plt+0xa694>
   1bee8:	sub	r0, fp, #32
   1beec:	bl	2230c <__assert_fail@plt+0x10a98>
   1bef0:	bl	11700 <__errno_location@plt>
   1bef4:	movw	lr, #9
   1bef8:	str	lr, [r0]
   1befc:	mvn	r0, #0
   1bf00:	str	r0, [fp, #-12]
   1bf04:	b	1bfd8 <__assert_fail@plt+0xa764>
   1bf08:	ldr	r0, [fp, #-16]
   1bf0c:	bl	117cc <fchdir@plt>
   1bf10:	cmp	r0, #0
   1bf14:	beq	1bf4c <__assert_fail@plt+0xa6d8>
   1bf18:	bl	11700 <__errno_location@plt>
   1bf1c:	ldr	r0, [r0]
   1bf20:	str	r0, [fp, #-36]	; 0xffffffdc
   1bf24:	sub	r0, fp, #32
   1bf28:	bl	2230c <__assert_fail@plt+0x10a98>
   1bf2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bf30:	str	r0, [sp, #12]
   1bf34:	bl	11700 <__errno_location@plt>
   1bf38:	ldr	lr, [sp, #12]
   1bf3c:	str	lr, [r0]
   1bf40:	mvn	r0, #0
   1bf44:	str	r0, [fp, #-12]
   1bf48:	b	1bfd8 <__assert_fail@plt+0xa764>
   1bf4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf54:	bl	114fc <lsetfilecon@plt>
   1bf58:	str	r0, [fp, #-40]	; 0xffffffd8
   1bf5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bf60:	cmn	r0, #1
   1bf64:	bne	1bf78 <__assert_fail@plt+0xa704>
   1bf68:	bl	11700 <__errno_location@plt>
   1bf6c:	ldr	r0, [r0]
   1bf70:	str	r0, [sp, #8]
   1bf74:	b	1bf84 <__assert_fail@plt+0xa710>
   1bf78:	movw	r0, #0
   1bf7c:	str	r0, [sp, #8]
   1bf80:	b	1bf84 <__assert_fail@plt+0xa710>
   1bf84:	ldr	r0, [sp, #8]
   1bf88:	str	r0, [fp, #-36]	; 0xffffffdc
   1bf8c:	sub	r0, fp, #32
   1bf90:	bl	222b8 <__assert_fail@plt+0x10a44>
   1bf94:	cmp	r0, #0
   1bf98:	beq	1bfa8 <__assert_fail@plt+0xa734>
   1bf9c:	bl	11700 <__errno_location@plt>
   1bfa0:	ldr	r0, [r0]
   1bfa4:	bl	20e38 <__assert_fail@plt+0xf5c4>
   1bfa8:	sub	r0, fp, #32
   1bfac:	bl	2230c <__assert_fail@plt+0x10a98>
   1bfb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bfb4:	cmp	r0, #0
   1bfb8:	beq	1bfd0 <__assert_fail@plt+0xa75c>
   1bfbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bfc0:	str	r0, [sp, #4]
   1bfc4:	bl	11700 <__errno_location@plt>
   1bfc8:	ldr	lr, [sp, #4]
   1bfcc:	str	lr, [r0]
   1bfd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bfd4:	str	r0, [fp, #-12]
   1bfd8:	ldr	r0, [fp, #-12]
   1bfdc:	sub	sp, fp, #8
   1bfe0:	pop	{r4, r5, fp, pc}
   1bfe4:	push	{fp, lr}
   1bfe8:	mov	fp, sp
   1bfec:	sub	sp, sp, #16
   1bff0:	str	r0, [fp, #-4]
   1bff4:	str	r1, [sp, #8]
   1bff8:	ldr	r0, [fp, #-4]
   1bffc:	ldr	r1, [sp, #8]
   1c000:	bl	116c4 <getfilecon@plt>
   1c004:	str	r0, [sp, #4]
   1c008:	ldr	r0, [sp, #4]
   1c00c:	ldr	r1, [sp, #8]
   1c010:	bl	1c01c <__assert_fail@plt+0xa7a8>
   1c014:	mov	sp, fp
   1c018:	pop	{fp, pc}
   1c01c:	push	{fp, lr}
   1c020:	mov	fp, sp
   1c024:	sub	sp, sp, #16
   1c028:	str	r0, [sp, #8]
   1c02c:	str	r1, [sp, #4]
   1c030:	ldr	r0, [sp, #8]
   1c034:	cmp	r0, #0
   1c038:	bne	1c054 <__assert_fail@plt+0xa7e0>
   1c03c:	bl	11700 <__errno_location@plt>
   1c040:	movw	lr, #95	; 0x5f
   1c044:	str	lr, [r0]
   1c048:	mvn	r0, #0
   1c04c:	str	r0, [fp, #-4]
   1c050:	b	1c0b4 <__assert_fail@plt+0xa840>
   1c054:	ldr	r0, [sp, #8]
   1c058:	cmp	r0, #10
   1c05c:	bne	1c0ac <__assert_fail@plt+0xa838>
   1c060:	ldr	r0, [sp, #4]
   1c064:	ldr	r0, [r0]
   1c068:	movw	r1, #17192	; 0x4328
   1c06c:	movt	r1, #2
   1c070:	bl	114d8 <strcmp@plt>
   1c074:	cmp	r0, #0
   1c078:	bne	1c0ac <__assert_fail@plt+0xa838>
   1c07c:	ldr	r0, [sp, #4]
   1c080:	ldr	r0, [r0]
   1c084:	bl	117e4 <freecon@plt>
   1c088:	ldr	r0, [sp, #4]
   1c08c:	movw	lr, #0
   1c090:	str	lr, [r0]
   1c094:	bl	11700 <__errno_location@plt>
   1c098:	movw	lr, #61	; 0x3d
   1c09c:	str	lr, [r0]
   1c0a0:	mvn	r0, #0
   1c0a4:	str	r0, [fp, #-4]
   1c0a8:	b	1c0b4 <__assert_fail@plt+0xa840>
   1c0ac:	ldr	r0, [sp, #8]
   1c0b0:	str	r0, [fp, #-4]
   1c0b4:	ldr	r0, [fp, #-4]
   1c0b8:	mov	sp, fp
   1c0bc:	pop	{fp, pc}
   1c0c0:	push	{fp, lr}
   1c0c4:	mov	fp, sp
   1c0c8:	sub	sp, sp, #16
   1c0cc:	str	r0, [fp, #-4]
   1c0d0:	str	r1, [sp, #8]
   1c0d4:	ldr	r0, [fp, #-4]
   1c0d8:	ldr	r1, [sp, #8]
   1c0dc:	bl	11634 <lgetfilecon@plt>
   1c0e0:	str	r0, [sp, #4]
   1c0e4:	ldr	r0, [sp, #4]
   1c0e8:	ldr	r1, [sp, #8]
   1c0ec:	bl	1c01c <__assert_fail@plt+0xa7a8>
   1c0f0:	mov	sp, fp
   1c0f4:	pop	{fp, pc}
   1c0f8:	push	{fp, lr}
   1c0fc:	mov	fp, sp
   1c100:	sub	sp, sp, #16
   1c104:	str	r0, [fp, #-4]
   1c108:	str	r1, [sp, #8]
   1c10c:	ldr	r0, [fp, #-4]
   1c110:	ldr	r1, [sp, #8]
   1c114:	bl	11580 <fgetfilecon@plt>
   1c118:	str	r0, [sp, #4]
   1c11c:	ldr	r0, [sp, #4]
   1c120:	ldr	r1, [sp, #8]
   1c124:	bl	1c01c <__assert_fail@plt+0xa7a8>
   1c128:	mov	sp, fp
   1c12c:	pop	{fp, pc}
   1c130:	push	{fp, lr}
   1c134:	mov	fp, sp
   1c138:	sub	sp, sp, #24
   1c13c:	str	r0, [fp, #-4]
   1c140:	ldr	r0, [fp, #-4]
   1c144:	movw	r1, #0
   1c148:	cmp	r1, r0
   1c14c:	bgt	1c19c <__assert_fail@plt+0xa928>
   1c150:	ldr	r0, [fp, #-4]
   1c154:	cmp	r0, #2
   1c158:	bgt	1c19c <__assert_fail@plt+0xa928>
   1c15c:	ldr	r0, [fp, #-4]
   1c160:	bl	22350 <__assert_fail@plt+0x10adc>
   1c164:	str	r0, [fp, #-8]
   1c168:	bl	11700 <__errno_location@plt>
   1c16c:	ldr	r0, [r0]
   1c170:	str	r0, [sp, #12]
   1c174:	ldr	r0, [fp, #-4]
   1c178:	bl	11844 <close@plt>
   1c17c:	ldr	lr, [sp, #12]
   1c180:	str	r0, [sp, #8]
   1c184:	str	lr, [sp, #4]
   1c188:	bl	11700 <__errno_location@plt>
   1c18c:	ldr	lr, [sp, #4]
   1c190:	str	lr, [r0]
   1c194:	ldr	r0, [fp, #-8]
   1c198:	str	r0, [fp, #-4]
   1c19c:	ldr	r0, [fp, #-4]
   1c1a0:	mov	sp, fp
   1c1a4:	pop	{fp, pc}
   1c1a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1ac:	add	fp, sp, #28
   1c1b0:	sub	sp, sp, #260	; 0x104
   1c1b4:	ldr	ip, [fp, #12]
   1c1b8:	ldr	lr, [fp, #8]
   1c1bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c1c0:	str	r1, [fp, #-36]	; 0xffffffdc
   1c1c4:	str	r2, [fp, #-40]	; 0xffffffd8
   1c1c8:	str	r3, [fp, #-44]	; 0xffffffd4
   1c1cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c1d0:	movw	r1, #0
   1c1d4:	cmp	r0, r1
   1c1d8:	str	lr, [fp, #-48]	; 0xffffffd0
   1c1dc:	str	ip, [fp, #-52]	; 0xffffffcc
   1c1e0:	beq	1c218 <__assert_fail@plt+0xa9a4>
   1c1e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c1e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c1ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c1f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c1f4:	movw	ip, #17202	; 0x4332
   1c1f8:	movt	ip, #2
   1c1fc:	str	r1, [fp, #-56]	; 0xffffffc8
   1c200:	mov	r1, ip
   1c204:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1c208:	str	ip, [sp]
   1c20c:	bl	116f4 <fprintf@plt>
   1c210:	str	r0, [fp, #-60]	; 0xffffffc4
   1c214:	b	1c234 <__assert_fail@plt+0xa9c0>
   1c218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c21c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c220:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c224:	movw	r1, #17214	; 0x433e
   1c228:	movt	r1, #2
   1c22c:	bl	116f4 <fprintf@plt>
   1c230:	str	r0, [fp, #-64]	; 0xffffffc0
   1c234:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c238:	movw	r1, #17221	; 0x4345
   1c23c:	movt	r1, #2
   1c240:	str	r0, [fp, #-68]	; 0xffffffbc
   1c244:	mov	r0, r1
   1c248:	bl	116b8 <gettext@plt>
   1c24c:	movw	r1, #17939	; 0x4613
   1c250:	movt	r1, #2
   1c254:	movw	r3, #2022	; 0x7e6
   1c258:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1c25c:	str	r0, [fp, #-72]	; 0xffffffb8
   1c260:	mov	r0, lr
   1c264:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c268:	bl	116f4 <fprintf@plt>
   1c26c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c270:	movw	r2, #14970	; 0x3a7a
   1c274:	movt	r2, #2
   1c278:	str	r0, [fp, #-76]	; 0xffffffb4
   1c27c:	mov	r0, r2
   1c280:	str	r2, [fp, #-80]	; 0xffffffb0
   1c284:	bl	114b4 <fputs_unlocked@plt>
   1c288:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c28c:	movw	r2, #17225	; 0x4349
   1c290:	movt	r2, #2
   1c294:	str	r0, [fp, #-84]	; 0xffffffac
   1c298:	mov	r0, r2
   1c29c:	str	r1, [fp, #-88]	; 0xffffffa8
   1c2a0:	bl	116b8 <gettext@plt>
   1c2a4:	movw	r2, #17396	; 0x43f4
   1c2a8:	movt	r2, #2
   1c2ac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c2b0:	str	r0, [fp, #-92]	; 0xffffffa4
   1c2b4:	mov	r0, r1
   1c2b8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c2bc:	bl	116f4 <fprintf@plt>
   1c2c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c2c4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c2c8:	str	r0, [fp, #-96]	; 0xffffffa0
   1c2cc:	mov	r0, r2
   1c2d0:	bl	114b4 <fputs_unlocked@plt>
   1c2d4:	ldr	r1, [fp, #12]
   1c2d8:	cmp	r1, #9
   1c2dc:	str	r0, [fp, #-100]	; 0xffffff9c
   1c2e0:	str	r1, [fp, #-104]	; 0xffffff98
   1c2e4:	bhi	1c724 <__assert_fail@plt+0xaeb0>
   1c2e8:	add	r0, pc, #8
   1c2ec:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c2f0:	ldr	r0, [r0, r1, lsl #2]
   1c2f4:	mov	pc, r0
   1c2f8:	andeq	ip, r1, r0, lsr #6
   1c2fc:	andeq	ip, r1, r4, lsr #6
   1c300:	andeq	ip, r1, r0, ror #6
   1c304:	andeq	ip, r1, r4, lsr #7
   1c308:	andeq	ip, r1, r0, lsl #8
   1c30c:	andeq	ip, r1, r8, ror #8
   1c310:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c314:	andeq	ip, r1, ip, asr r5
   1c318:	andeq	ip, r1, r8, ror #11
   1c31c:	andeq	ip, r1, r0, lsl #13
   1c320:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c324:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c328:	movw	r1, #17430	; 0x4416
   1c32c:	movt	r1, #2
   1c330:	str	r0, [fp, #-108]	; 0xffffff94
   1c334:	mov	r0, r1
   1c338:	bl	116b8 <gettext@plt>
   1c33c:	ldr	r1, [fp, #8]
   1c340:	ldr	r2, [r1]
   1c344:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c348:	str	r0, [fp, #-112]	; 0xffffff90
   1c34c:	mov	r0, r1
   1c350:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c354:	bl	116f4 <fprintf@plt>
   1c358:	str	r0, [fp, #-116]	; 0xffffff8c
   1c35c:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c360:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c364:	movw	r1, #17446	; 0x4426
   1c368:	movt	r1, #2
   1c36c:	str	r0, [fp, #-120]	; 0xffffff88
   1c370:	mov	r0, r1
   1c374:	bl	116b8 <gettext@plt>
   1c378:	ldr	r1, [fp, #8]
   1c37c:	ldr	r2, [r1]
   1c380:	ldr	r1, [fp, #8]
   1c384:	ldr	r3, [r1, #4]
   1c388:	ldr	r1, [fp, #-120]	; 0xffffff88
   1c38c:	str	r0, [fp, #-124]	; 0xffffff84
   1c390:	mov	r0, r1
   1c394:	ldr	r1, [fp, #-124]	; 0xffffff84
   1c398:	bl	116f4 <fprintf@plt>
   1c39c:	str	r0, [fp, #-128]	; 0xffffff80
   1c3a0:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c3a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3a8:	movw	r1, #17469	; 0x443d
   1c3ac:	movt	r1, #2
   1c3b0:	str	r0, [fp, #-132]	; 0xffffff7c
   1c3b4:	mov	r0, r1
   1c3b8:	bl	116b8 <gettext@plt>
   1c3bc:	ldr	r1, [fp, #8]
   1c3c0:	ldr	r2, [r1]
   1c3c4:	ldr	r1, [fp, #8]
   1c3c8:	ldr	r3, [r1, #4]
   1c3cc:	ldr	r1, [fp, #8]
   1c3d0:	ldr	r1, [r1, #8]
   1c3d4:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1c3d8:	str	r0, [fp, #-136]	; 0xffffff78
   1c3dc:	mov	r0, lr
   1c3e0:	ldr	ip, [fp, #-136]	; 0xffffff78
   1c3e4:	str	r1, [fp, #-140]	; 0xffffff74
   1c3e8:	mov	r1, ip
   1c3ec:	ldr	r4, [fp, #-140]	; 0xffffff74
   1c3f0:	str	r4, [sp]
   1c3f4:	bl	116f4 <fprintf@plt>
   1c3f8:	str	r0, [sp, #144]	; 0x90
   1c3fc:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c404:	movw	r1, #17497	; 0x4459
   1c408:	movt	r1, #2
   1c40c:	str	r0, [sp, #140]	; 0x8c
   1c410:	mov	r0, r1
   1c414:	bl	116b8 <gettext@plt>
   1c418:	ldr	r1, [fp, #8]
   1c41c:	ldr	r2, [r1]
   1c420:	ldr	r1, [fp, #8]
   1c424:	ldr	r3, [r1, #4]
   1c428:	ldr	r1, [fp, #8]
   1c42c:	ldr	r1, [r1, #8]
   1c430:	ldr	lr, [fp, #8]
   1c434:	ldr	lr, [lr, #12]
   1c438:	ldr	ip, [sp, #140]	; 0x8c
   1c43c:	str	r0, [sp, #136]	; 0x88
   1c440:	mov	r0, ip
   1c444:	ldr	r4, [sp, #136]	; 0x88
   1c448:	str	r1, [sp, #132]	; 0x84
   1c44c:	mov	r1, r4
   1c450:	ldr	r5, [sp, #132]	; 0x84
   1c454:	str	r5, [sp]
   1c458:	str	lr, [sp, #4]
   1c45c:	bl	116f4 <fprintf@plt>
   1c460:	str	r0, [sp, #128]	; 0x80
   1c464:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c468:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c46c:	movw	r1, #17529	; 0x4479
   1c470:	movt	r1, #2
   1c474:	str	r0, [sp, #124]	; 0x7c
   1c478:	mov	r0, r1
   1c47c:	bl	116b8 <gettext@plt>
   1c480:	ldr	r1, [fp, #8]
   1c484:	ldr	r2, [r1]
   1c488:	ldr	r1, [fp, #8]
   1c48c:	ldr	r3, [r1, #4]
   1c490:	ldr	r1, [fp, #8]
   1c494:	ldr	r1, [r1, #8]
   1c498:	ldr	lr, [fp, #8]
   1c49c:	ldr	lr, [lr, #12]
   1c4a0:	ldr	ip, [fp, #8]
   1c4a4:	ldr	ip, [ip, #16]
   1c4a8:	ldr	r4, [sp, #124]	; 0x7c
   1c4ac:	str	r0, [sp, #120]	; 0x78
   1c4b0:	mov	r0, r4
   1c4b4:	ldr	r5, [sp, #120]	; 0x78
   1c4b8:	str	r1, [sp, #116]	; 0x74
   1c4bc:	mov	r1, r5
   1c4c0:	ldr	r6, [sp, #116]	; 0x74
   1c4c4:	str	r6, [sp]
   1c4c8:	str	lr, [sp, #4]
   1c4cc:	str	ip, [sp, #8]
   1c4d0:	bl	116f4 <fprintf@plt>
   1c4d4:	str	r0, [sp, #112]	; 0x70
   1c4d8:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c4dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4e0:	movw	r1, #17565	; 0x449d
   1c4e4:	movt	r1, #2
   1c4e8:	str	r0, [sp, #108]	; 0x6c
   1c4ec:	mov	r0, r1
   1c4f0:	bl	116b8 <gettext@plt>
   1c4f4:	ldr	r1, [fp, #8]
   1c4f8:	ldr	r2, [r1]
   1c4fc:	ldr	r1, [fp, #8]
   1c500:	ldr	r3, [r1, #4]
   1c504:	ldr	r1, [fp, #8]
   1c508:	ldr	r1, [r1, #8]
   1c50c:	ldr	lr, [fp, #8]
   1c510:	ldr	lr, [lr, #12]
   1c514:	ldr	ip, [fp, #8]
   1c518:	ldr	ip, [ip, #16]
   1c51c:	ldr	r4, [fp, #8]
   1c520:	ldr	r4, [r4, #20]
   1c524:	ldr	r5, [sp, #108]	; 0x6c
   1c528:	str	r0, [sp, #104]	; 0x68
   1c52c:	mov	r0, r5
   1c530:	ldr	r6, [sp, #104]	; 0x68
   1c534:	str	r1, [sp, #100]	; 0x64
   1c538:	mov	r1, r6
   1c53c:	ldr	r7, [sp, #100]	; 0x64
   1c540:	str	r7, [sp]
   1c544:	str	lr, [sp, #4]
   1c548:	str	ip, [sp, #8]
   1c54c:	str	r4, [sp, #12]
   1c550:	bl	116f4 <fprintf@plt>
   1c554:	str	r0, [sp, #96]	; 0x60
   1c558:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c55c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c560:	movw	r1, #17605	; 0x44c5
   1c564:	movt	r1, #2
   1c568:	str	r0, [sp, #92]	; 0x5c
   1c56c:	mov	r0, r1
   1c570:	bl	116b8 <gettext@plt>
   1c574:	ldr	r1, [fp, #8]
   1c578:	ldr	r2, [r1]
   1c57c:	ldr	r1, [fp, #8]
   1c580:	ldr	r3, [r1, #4]
   1c584:	ldr	r1, [fp, #8]
   1c588:	ldr	r1, [r1, #8]
   1c58c:	ldr	lr, [fp, #8]
   1c590:	ldr	lr, [lr, #12]
   1c594:	ldr	ip, [fp, #8]
   1c598:	ldr	ip, [ip, #16]
   1c59c:	ldr	r4, [fp, #8]
   1c5a0:	ldr	r4, [r4, #20]
   1c5a4:	ldr	r5, [fp, #8]
   1c5a8:	ldr	r5, [r5, #24]
   1c5ac:	ldr	r6, [sp, #92]	; 0x5c
   1c5b0:	str	r0, [sp, #88]	; 0x58
   1c5b4:	mov	r0, r6
   1c5b8:	ldr	r7, [sp, #88]	; 0x58
   1c5bc:	str	r1, [sp, #84]	; 0x54
   1c5c0:	mov	r1, r7
   1c5c4:	ldr	r8, [sp, #84]	; 0x54
   1c5c8:	str	r8, [sp]
   1c5cc:	str	lr, [sp, #4]
   1c5d0:	str	ip, [sp, #8]
   1c5d4:	str	r4, [sp, #12]
   1c5d8:	str	r5, [sp, #16]
   1c5dc:	bl	116f4 <fprintf@plt>
   1c5e0:	str	r0, [sp, #80]	; 0x50
   1c5e4:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c5e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5ec:	movw	r1, #17649	; 0x44f1
   1c5f0:	movt	r1, #2
   1c5f4:	str	r0, [sp, #76]	; 0x4c
   1c5f8:	mov	r0, r1
   1c5fc:	bl	116b8 <gettext@plt>
   1c600:	ldr	r1, [fp, #8]
   1c604:	ldr	r2, [r1]
   1c608:	ldr	r1, [fp, #8]
   1c60c:	ldr	r3, [r1, #4]
   1c610:	ldr	r1, [fp, #8]
   1c614:	ldr	r1, [r1, #8]
   1c618:	ldr	lr, [fp, #8]
   1c61c:	ldr	lr, [lr, #12]
   1c620:	ldr	ip, [fp, #8]
   1c624:	ldr	ip, [ip, #16]
   1c628:	ldr	r4, [fp, #8]
   1c62c:	ldr	r4, [r4, #20]
   1c630:	ldr	r5, [fp, #8]
   1c634:	ldr	r5, [r5, #24]
   1c638:	ldr	r6, [fp, #8]
   1c63c:	ldr	r6, [r6, #28]
   1c640:	ldr	r7, [sp, #76]	; 0x4c
   1c644:	str	r0, [sp, #72]	; 0x48
   1c648:	mov	r0, r7
   1c64c:	ldr	r8, [sp, #72]	; 0x48
   1c650:	str	r1, [sp, #68]	; 0x44
   1c654:	mov	r1, r8
   1c658:	ldr	r9, [sp, #68]	; 0x44
   1c65c:	str	r9, [sp]
   1c660:	str	lr, [sp, #4]
   1c664:	str	ip, [sp, #8]
   1c668:	str	r4, [sp, #12]
   1c66c:	str	r5, [sp, #16]
   1c670:	str	r6, [sp, #20]
   1c674:	bl	116f4 <fprintf@plt>
   1c678:	str	r0, [sp, #64]	; 0x40
   1c67c:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c684:	movw	r1, #17697	; 0x4521
   1c688:	movt	r1, #2
   1c68c:	str	r0, [sp, #60]	; 0x3c
   1c690:	mov	r0, r1
   1c694:	bl	116b8 <gettext@plt>
   1c698:	ldr	r1, [fp, #8]
   1c69c:	ldr	r2, [r1]
   1c6a0:	ldr	r1, [fp, #8]
   1c6a4:	ldr	r3, [r1, #4]
   1c6a8:	ldr	r1, [fp, #8]
   1c6ac:	ldr	r1, [r1, #8]
   1c6b0:	ldr	lr, [fp, #8]
   1c6b4:	ldr	lr, [lr, #12]
   1c6b8:	ldr	ip, [fp, #8]
   1c6bc:	ldr	ip, [ip, #16]
   1c6c0:	ldr	r4, [fp, #8]
   1c6c4:	ldr	r4, [r4, #20]
   1c6c8:	ldr	r5, [fp, #8]
   1c6cc:	ldr	r5, [r5, #24]
   1c6d0:	ldr	r6, [fp, #8]
   1c6d4:	ldr	r6, [r6, #28]
   1c6d8:	ldr	r7, [fp, #8]
   1c6dc:	ldr	r7, [r7, #32]
   1c6e0:	ldr	r8, [sp, #60]	; 0x3c
   1c6e4:	str	r0, [sp, #56]	; 0x38
   1c6e8:	mov	r0, r8
   1c6ec:	ldr	r9, [sp, #56]	; 0x38
   1c6f0:	str	r1, [sp, #52]	; 0x34
   1c6f4:	mov	r1, r9
   1c6f8:	ldr	sl, [sp, #52]	; 0x34
   1c6fc:	str	sl, [sp]
   1c700:	str	lr, [sp, #4]
   1c704:	str	ip, [sp, #8]
   1c708:	str	r4, [sp, #12]
   1c70c:	str	r5, [sp, #16]
   1c710:	str	r6, [sp, #20]
   1c714:	str	r7, [sp, #24]
   1c718:	bl	116f4 <fprintf@plt>
   1c71c:	str	r0, [sp, #48]	; 0x30
   1c720:	b	1c7c4 <__assert_fail@plt+0xaf50>
   1c724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c728:	movw	r1, #17749	; 0x4555
   1c72c:	movt	r1, #2
   1c730:	str	r0, [sp, #44]	; 0x2c
   1c734:	mov	r0, r1
   1c738:	bl	116b8 <gettext@plt>
   1c73c:	ldr	r1, [fp, #8]
   1c740:	ldr	r2, [r1]
   1c744:	ldr	r1, [fp, #8]
   1c748:	ldr	r3, [r1, #4]
   1c74c:	ldr	r1, [fp, #8]
   1c750:	ldr	r1, [r1, #8]
   1c754:	ldr	lr, [fp, #8]
   1c758:	ldr	lr, [lr, #12]
   1c75c:	ldr	ip, [fp, #8]
   1c760:	ldr	ip, [ip, #16]
   1c764:	ldr	r4, [fp, #8]
   1c768:	ldr	r4, [r4, #20]
   1c76c:	ldr	r5, [fp, #8]
   1c770:	ldr	r5, [r5, #24]
   1c774:	ldr	r6, [fp, #8]
   1c778:	ldr	r6, [r6, #28]
   1c77c:	ldr	r7, [fp, #8]
   1c780:	ldr	r7, [r7, #32]
   1c784:	ldr	r8, [sp, #44]	; 0x2c
   1c788:	str	r0, [sp, #40]	; 0x28
   1c78c:	mov	r0, r8
   1c790:	ldr	r9, [sp, #40]	; 0x28
   1c794:	str	r1, [sp, #36]	; 0x24
   1c798:	mov	r1, r9
   1c79c:	ldr	sl, [sp, #36]	; 0x24
   1c7a0:	str	sl, [sp]
   1c7a4:	str	lr, [sp, #4]
   1c7a8:	str	ip, [sp, #8]
   1c7ac:	str	r4, [sp, #12]
   1c7b0:	str	r5, [sp, #16]
   1c7b4:	str	r6, [sp, #20]
   1c7b8:	str	r7, [sp, #24]
   1c7bc:	bl	116f4 <fprintf@plt>
   1c7c0:	str	r0, [sp, #32]
   1c7c4:	sub	sp, fp, #28
   1c7c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7cc:	push	{fp, lr}
   1c7d0:	mov	fp, sp
   1c7d4:	sub	sp, sp, #32
   1c7d8:	ldr	ip, [fp, #8]
   1c7dc:	str	r0, [fp, #-4]
   1c7e0:	str	r1, [fp, #-8]
   1c7e4:	str	r2, [fp, #-12]
   1c7e8:	str	r3, [sp, #16]
   1c7ec:	movw	r0, #0
   1c7f0:	str	r0, [sp, #12]
   1c7f4:	str	ip, [sp, #8]
   1c7f8:	ldr	r0, [fp, #8]
   1c7fc:	ldr	r1, [sp, #12]
   1c800:	add	r0, r0, r1, lsl #2
   1c804:	ldr	r0, [r0]
   1c808:	movw	r1, #0
   1c80c:	cmp	r0, r1
   1c810:	beq	1c828 <__assert_fail@plt+0xafb4>
   1c814:	b	1c818 <__assert_fail@plt+0xafa4>
   1c818:	ldr	r0, [sp, #12]
   1c81c:	add	r0, r0, #1
   1c820:	str	r0, [sp, #12]
   1c824:	b	1c7f8 <__assert_fail@plt+0xaf84>
   1c828:	ldr	r0, [fp, #-4]
   1c82c:	ldr	r1, [fp, #-8]
   1c830:	ldr	r2, [fp, #-12]
   1c834:	ldr	r3, [sp, #16]
   1c838:	ldr	ip, [fp, #8]
   1c83c:	ldr	lr, [sp, #12]
   1c840:	str	ip, [sp]
   1c844:	str	lr, [sp, #4]
   1c848:	bl	1c1a8 <__assert_fail@plt+0xa934>
   1c84c:	mov	sp, fp
   1c850:	pop	{fp, pc}
   1c854:	push	{fp, lr}
   1c858:	mov	fp, sp
   1c85c:	sub	sp, sp, #80	; 0x50
   1c860:	ldr	ip, [fp, #8]
   1c864:	str	ip, [fp, #-4]
   1c868:	str	r0, [fp, #-8]
   1c86c:	str	r1, [fp, #-12]
   1c870:	str	r2, [fp, #-16]
   1c874:	str	r3, [fp, #-20]	; 0xffffffec
   1c878:	movw	r0, #0
   1c87c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c884:	cmp	r0, #10
   1c888:	movw	r0, #0
   1c88c:	str	r0, [sp, #12]
   1c890:	bcs	1c8c8 <__assert_fail@plt+0xb054>
   1c894:	ldr	r0, [fp, #-4]
   1c898:	add	r1, r0, #4
   1c89c:	str	r1, [fp, #-4]
   1c8a0:	ldr	r0, [r0]
   1c8a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8a8:	add	r2, sp, #16
   1c8ac:	add	r1, r2, r1, lsl #2
   1c8b0:	str	r0, [r1]
   1c8b4:	movw	r1, #0
   1c8b8:	cmp	r0, r1
   1c8bc:	movw	r0, #0
   1c8c0:	movne	r0, #1
   1c8c4:	str	r0, [sp, #12]
   1c8c8:	ldr	r0, [sp, #12]
   1c8cc:	tst	r0, #1
   1c8d0:	beq	1c8e8 <__assert_fail@plt+0xb074>
   1c8d4:	b	1c8d8 <__assert_fail@plt+0xb064>
   1c8d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8dc:	add	r0, r0, #1
   1c8e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c8e4:	b	1c880 <__assert_fail@plt+0xb00c>
   1c8e8:	add	r0, sp, #16
   1c8ec:	ldr	r1, [fp, #-8]
   1c8f0:	ldr	r2, [fp, #-12]
   1c8f4:	ldr	r3, [fp, #-16]
   1c8f8:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c8fc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c900:	str	r0, [sp, #8]
   1c904:	mov	r0, r1
   1c908:	mov	r1, r2
   1c90c:	mov	r2, r3
   1c910:	mov	r3, ip
   1c914:	ldr	ip, [sp, #8]
   1c918:	str	ip, [sp]
   1c91c:	str	lr, [sp, #4]
   1c920:	bl	1c1a8 <__assert_fail@plt+0xa934>
   1c924:	mov	sp, fp
   1c928:	pop	{fp, pc}
   1c92c:	push	{fp, lr}
   1c930:	mov	fp, sp
   1c934:	sub	sp, sp, #32
   1c938:	str	r0, [fp, #-4]
   1c93c:	str	r1, [fp, #-8]
   1c940:	str	r2, [fp, #-12]
   1c944:	str	r3, [sp, #16]
   1c948:	add	r0, fp, #8
   1c94c:	str	r0, [sp, #12]
   1c950:	ldr	r0, [fp, #-4]
   1c954:	ldr	r1, [fp, #-8]
   1c958:	ldr	r2, [fp, #-12]
   1c95c:	ldr	r3, [sp, #16]
   1c960:	ldr	ip, [sp, #12]
   1c964:	mov	lr, sp
   1c968:	str	ip, [lr]
   1c96c:	bl	1c854 <__assert_fail@plt+0xafe0>
   1c970:	add	r0, sp, #12
   1c974:	str	r0, [sp, #8]
   1c978:	mov	sp, fp
   1c97c:	pop	{fp, pc}
   1c980:	push	{fp, lr}
   1c984:	mov	fp, sp
   1c988:	sub	sp, sp, #16
   1c98c:	movw	r0, #20932	; 0x51c4
   1c990:	movt	r0, #3
   1c994:	ldr	r1, [r0]
   1c998:	movw	r0, #14970	; 0x3a7a
   1c99c:	movt	r0, #2
   1c9a0:	bl	114b4 <fputs_unlocked@plt>
   1c9a4:	movw	r1, #17809	; 0x4591
   1c9a8:	movt	r1, #2
   1c9ac:	str	r0, [fp, #-4]
   1c9b0:	mov	r0, r1
   1c9b4:	bl	116b8 <gettext@plt>
   1c9b8:	movw	r1, #17829	; 0x45a5
   1c9bc:	movt	r1, #2
   1c9c0:	bl	114e4 <printf@plt>
   1c9c4:	movw	r1, #17851	; 0x45bb
   1c9c8:	movt	r1, #2
   1c9cc:	str	r0, [sp, #8]
   1c9d0:	mov	r0, r1
   1c9d4:	bl	116b8 <gettext@plt>
   1c9d8:	movw	r1, #15116	; 0x3b0c
   1c9dc:	movt	r1, #2
   1c9e0:	movw	r2, #15585	; 0x3ce1
   1c9e4:	movt	r2, #2
   1c9e8:	bl	114e4 <printf@plt>
   1c9ec:	movw	r1, #17871	; 0x45cf
   1c9f0:	movt	r1, #2
   1c9f4:	str	r0, [sp, #4]
   1c9f8:	mov	r0, r1
   1c9fc:	bl	116b8 <gettext@plt>
   1ca00:	movw	r1, #17910	; 0x45f6
   1ca04:	movt	r1, #2
   1ca08:	bl	114e4 <printf@plt>
   1ca0c:	str	r0, [sp]
   1ca10:	mov	sp, fp
   1ca14:	pop	{fp, pc}
   1ca18:	push	{fp, lr}
   1ca1c:	mov	fp, sp
   1ca20:	sub	sp, sp, #16
   1ca24:	str	r0, [fp, #-4]
   1ca28:	str	r1, [sp, #8]
   1ca2c:	str	r2, [sp, #4]
   1ca30:	ldr	r0, [fp, #-4]
   1ca34:	ldr	r1, [sp, #8]
   1ca38:	ldr	r2, [sp, #4]
   1ca3c:	bl	1ca48 <__assert_fail@plt+0xb1d4>
   1ca40:	mov	sp, fp
   1ca44:	pop	{fp, pc}
   1ca48:	push	{fp, lr}
   1ca4c:	mov	fp, sp
   1ca50:	sub	sp, sp, #16
   1ca54:	str	r0, [fp, #-4]
   1ca58:	str	r1, [sp, #8]
   1ca5c:	str	r2, [sp, #4]
   1ca60:	ldr	r0, [fp, #-4]
   1ca64:	ldr	r1, [sp, #8]
   1ca68:	ldr	r2, [sp, #4]
   1ca6c:	bl	20e8c <__assert_fail@plt+0xf618>
   1ca70:	str	r0, [sp]
   1ca74:	ldr	r0, [sp]
   1ca78:	movw	r1, #0
   1ca7c:	cmp	r0, r1
   1ca80:	bne	1cab0 <__assert_fail@plt+0xb23c>
   1ca84:	ldr	r0, [fp, #-4]
   1ca88:	movw	r1, #0
   1ca8c:	cmp	r0, r1
   1ca90:	beq	1caac <__assert_fail@plt+0xb238>
   1ca94:	ldr	r0, [sp, #8]
   1ca98:	cmp	r0, #0
   1ca9c:	beq	1cab0 <__assert_fail@plt+0xb23c>
   1caa0:	ldr	r0, [sp, #4]
   1caa4:	cmp	r0, #0
   1caa8:	beq	1cab0 <__assert_fail@plt+0xb23c>
   1caac:	bl	1f898 <__assert_fail@plt+0xe024>
   1cab0:	ldr	r0, [sp]
   1cab4:	mov	sp, fp
   1cab8:	pop	{fp, pc}
   1cabc:	push	{fp, lr}
   1cac0:	mov	fp, sp
   1cac4:	sub	sp, sp, #8
   1cac8:	str	r0, [sp, #4]
   1cacc:	ldr	r0, [sp, #4]
   1cad0:	bl	1faac <__assert_fail@plt+0xe238>
   1cad4:	bl	1cae0 <__assert_fail@plt+0xb26c>
   1cad8:	mov	sp, fp
   1cadc:	pop	{fp, pc}
   1cae0:	push	{fp, lr}
   1cae4:	mov	fp, sp
   1cae8:	sub	sp, sp, #8
   1caec:	str	r0, [sp, #4]
   1caf0:	ldr	r0, [sp, #4]
   1caf4:	movw	r1, #0
   1caf8:	cmp	r0, r1
   1cafc:	bne	1cb04 <__assert_fail@plt+0xb290>
   1cb00:	bl	1f898 <__assert_fail@plt+0xe024>
   1cb04:	ldr	r0, [sp, #4]
   1cb08:	mov	sp, fp
   1cb0c:	pop	{fp, pc}
   1cb10:	push	{fp, lr}
   1cb14:	mov	fp, sp
   1cb18:	sub	sp, sp, #8
   1cb1c:	str	r0, [sp, #4]
   1cb20:	ldr	r0, [sp, #4]
   1cb24:	bl	20b20 <__assert_fail@plt+0xf2ac>
   1cb28:	bl	1cae0 <__assert_fail@plt+0xb26c>
   1cb2c:	mov	sp, fp
   1cb30:	pop	{fp, pc}
   1cb34:	push	{fp, lr}
   1cb38:	mov	fp, sp
   1cb3c:	sub	sp, sp, #8
   1cb40:	str	r0, [sp, #4]
   1cb44:	ldr	r0, [sp, #4]
   1cb48:	bl	1cabc <__assert_fail@plt+0xb248>
   1cb4c:	mov	sp, fp
   1cb50:	pop	{fp, pc}
   1cb54:	push	{fp, lr}
   1cb58:	mov	fp, sp
   1cb5c:	sub	sp, sp, #16
   1cb60:	str	r0, [fp, #-4]
   1cb64:	str	r1, [sp, #8]
   1cb68:	ldr	r0, [fp, #-4]
   1cb6c:	ldr	r1, [sp, #8]
   1cb70:	bl	1fb1c <__assert_fail@plt+0xe2a8>
   1cb74:	str	r0, [sp, #4]
   1cb78:	ldr	r0, [sp, #4]
   1cb7c:	movw	r1, #0
   1cb80:	cmp	r0, r1
   1cb84:	bne	1cba8 <__assert_fail@plt+0xb334>
   1cb88:	ldr	r0, [fp, #-4]
   1cb8c:	movw	r1, #0
   1cb90:	cmp	r0, r1
   1cb94:	beq	1cba4 <__assert_fail@plt+0xb330>
   1cb98:	ldr	r0, [sp, #8]
   1cb9c:	cmp	r0, #0
   1cba0:	beq	1cba8 <__assert_fail@plt+0xb334>
   1cba4:	bl	1f898 <__assert_fail@plt+0xe024>
   1cba8:	ldr	r0, [sp, #4]
   1cbac:	mov	sp, fp
   1cbb0:	pop	{fp, pc}
   1cbb4:	push	{fp, lr}
   1cbb8:	mov	fp, sp
   1cbbc:	sub	sp, sp, #8
   1cbc0:	str	r0, [sp, #4]
   1cbc4:	str	r1, [sp]
   1cbc8:	ldr	r0, [sp, #4]
   1cbcc:	ldr	r1, [sp]
   1cbd0:	bl	20b60 <__assert_fail@plt+0xf2ec>
   1cbd4:	bl	1cae0 <__assert_fail@plt+0xb26c>
   1cbd8:	mov	sp, fp
   1cbdc:	pop	{fp, pc}
   1cbe0:	push	{fp, lr}
   1cbe4:	mov	fp, sp
   1cbe8:	sub	sp, sp, #16
   1cbec:	str	r0, [fp, #-4]
   1cbf0:	str	r1, [sp, #8]
   1cbf4:	str	r2, [sp, #4]
   1cbf8:	ldr	r0, [fp, #-4]
   1cbfc:	ldr	r1, [sp, #8]
   1cc00:	ldr	r2, [sp, #4]
   1cc04:	bl	20c58 <__assert_fail@plt+0xf3e4>
   1cc08:	bl	1cae0 <__assert_fail@plt+0xb26c>
   1cc0c:	mov	sp, fp
   1cc10:	pop	{fp, pc}
   1cc14:	push	{fp, lr}
   1cc18:	mov	fp, sp
   1cc1c:	sub	sp, sp, #8
   1cc20:	str	r0, [sp, #4]
   1cc24:	str	r1, [sp]
   1cc28:	ldr	r1, [sp, #4]
   1cc2c:	ldr	r2, [sp]
   1cc30:	movw	r0, #0
   1cc34:	bl	1ca48 <__assert_fail@plt+0xb1d4>
   1cc38:	mov	sp, fp
   1cc3c:	pop	{fp, pc}
   1cc40:	push	{fp, lr}
   1cc44:	mov	fp, sp
   1cc48:	sub	sp, sp, #8
   1cc4c:	str	r0, [sp, #4]
   1cc50:	str	r1, [sp]
   1cc54:	ldr	r1, [sp, #4]
   1cc58:	ldr	r2, [sp]
   1cc5c:	movw	r0, #0
   1cc60:	bl	1cbe0 <__assert_fail@plt+0xb36c>
   1cc64:	mov	sp, fp
   1cc68:	pop	{fp, pc}
   1cc6c:	push	{fp, lr}
   1cc70:	mov	fp, sp
   1cc74:	sub	sp, sp, #8
   1cc78:	str	r0, [sp, #4]
   1cc7c:	str	r1, [sp]
   1cc80:	ldr	r0, [sp, #4]
   1cc84:	ldr	r1, [sp]
   1cc88:	movw	r2, #1
   1cc8c:	bl	1cc98 <__assert_fail@plt+0xb424>
   1cc90:	mov	sp, fp
   1cc94:	pop	{fp, pc}
   1cc98:	push	{fp, lr}
   1cc9c:	mov	fp, sp
   1cca0:	sub	sp, sp, #16
   1cca4:	str	r0, [fp, #-4]
   1cca8:	str	r1, [sp, #8]
   1ccac:	str	r2, [sp, #4]
   1ccb0:	ldr	r0, [sp, #8]
   1ccb4:	ldr	r0, [r0]
   1ccb8:	str	r0, [sp]
   1ccbc:	ldr	r0, [fp, #-4]
   1ccc0:	movw	r1, #0
   1ccc4:	cmp	r0, r1
   1ccc8:	bne	1cd14 <__assert_fail@plt+0xb4a0>
   1cccc:	ldr	r0, [sp]
   1ccd0:	cmp	r0, #0
   1ccd4:	bne	1cd10 <__assert_fail@plt+0xb49c>
   1ccd8:	ldr	r0, [sp, #4]
   1ccdc:	movw	r1, #64	; 0x40
   1cce0:	udiv	r0, r1, r0
   1cce4:	str	r0, [sp]
   1cce8:	ldr	r0, [sp]
   1ccec:	cmp	r0, #0
   1ccf0:	movw	r0, #0
   1ccf4:	movne	r0, #1
   1ccf8:	mvn	r1, #0
   1ccfc:	eor	r0, r0, r1
   1cd00:	and	r0, r0, #1
   1cd04:	ldr	r1, [sp]
   1cd08:	add	r0, r1, r0
   1cd0c:	str	r0, [sp]
   1cd10:	b	1cd44 <__assert_fail@plt+0xb4d0>
   1cd14:	ldr	r0, [sp]
   1cd18:	ldr	r1, [sp]
   1cd1c:	lsr	r1, r1, #1
   1cd20:	add	r1, r1, #1
   1cd24:	adds	r0, r0, r1
   1cd28:	mov	r1, #0
   1cd2c:	adc	r1, r1, #0
   1cd30:	str	r0, [sp]
   1cd34:	tst	r1, #1
   1cd38:	beq	1cd40 <__assert_fail@plt+0xb4cc>
   1cd3c:	bl	1f898 <__assert_fail@plt+0xe024>
   1cd40:	b	1cd44 <__assert_fail@plt+0xb4d0>
   1cd44:	ldr	r0, [fp, #-4]
   1cd48:	ldr	r1, [sp]
   1cd4c:	ldr	r2, [sp, #4]
   1cd50:	bl	1ca48 <__assert_fail@plt+0xb1d4>
   1cd54:	str	r0, [fp, #-4]
   1cd58:	ldr	r0, [sp]
   1cd5c:	ldr	r1, [sp, #8]
   1cd60:	str	r0, [r1]
   1cd64:	ldr	r0, [fp, #-4]
   1cd68:	mov	sp, fp
   1cd6c:	pop	{fp, pc}
   1cd70:	push	{fp, lr}
   1cd74:	mov	fp, sp
   1cd78:	sub	sp, sp, #376	; 0x178
   1cd7c:	ldr	ip, [fp, #8]
   1cd80:	str	r0, [fp, #-4]
   1cd84:	str	r1, [fp, #-8]
   1cd88:	str	r2, [fp, #-12]
   1cd8c:	str	r3, [fp, #-16]
   1cd90:	ldr	r0, [fp, #-8]
   1cd94:	ldr	r0, [r0]
   1cd98:	str	r0, [fp, #-20]	; 0xffffffec
   1cd9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cda0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cda4:	asr	r1, r1, #1
   1cda8:	add	r1, r0, r1
   1cdac:	mov	r2, #1
   1cdb0:	cmp	r1, r0
   1cdb4:	movwvc	r2, #0
   1cdb8:	str	r1, [fp, #-24]	; 0xffffffe8
   1cdbc:	tst	r2, #1
   1cdc0:	str	ip, [fp, #-36]	; 0xffffffdc
   1cdc4:	beq	1cdd0 <__assert_fail@plt+0xb55c>
   1cdc8:	ldr	r0, [pc, #4044]	; 1dd9c <__assert_fail@plt+0xc528>
   1cdcc:	str	r0, [fp, #-24]	; 0xffffffe8
   1cdd0:	ldr	r0, [fp, #-16]
   1cdd4:	movw	r1, #0
   1cdd8:	cmp	r1, r0
   1cddc:	bgt	1cdf8 <__assert_fail@plt+0xb584>
   1cde0:	ldr	r0, [fp, #-16]
   1cde4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cde8:	cmp	r0, r1
   1cdec:	bge	1cdf8 <__assert_fail@plt+0xb584>
   1cdf0:	ldr	r0, [fp, #-16]
   1cdf4:	str	r0, [fp, #-24]	; 0xffffffe8
   1cdf8:	b	1d1d0 <__assert_fail@plt+0xb95c>
   1cdfc:	b	1ce00 <__assert_fail@plt+0xb58c>
   1ce00:	ldr	r0, [fp, #8]
   1ce04:	cmp	r0, #0
   1ce08:	bge	1cf1c <__assert_fail@plt+0xb6a8>
   1ce0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce10:	cmp	r0, #0
   1ce14:	bge	1cea0 <__assert_fail@plt+0xb62c>
   1ce18:	b	1ce1c <__assert_fail@plt+0xb5a8>
   1ce1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce20:	ldr	r1, [fp, #8]
   1ce24:	movw	r2, #127	; 0x7f
   1ce28:	sdiv	r1, r2, r1
   1ce2c:	cmp	r0, r1
   1ce30:	blt	1cfbc <__assert_fail@plt+0xb748>
   1ce34:	b	1cfd4 <__assert_fail@plt+0xb760>
   1ce38:	b	1ce3c <__assert_fail@plt+0xb5c8>
   1ce3c:	ldr	r0, [pc, #4076]	; 1de30 <__assert_fail@plt+0xc5bc>
   1ce40:	ldr	r1, [fp, #8]
   1ce44:	cmp	r1, r0
   1ce48:	blt	1ce60 <__assert_fail@plt+0xb5ec>
   1ce4c:	b	1ce6c <__assert_fail@plt+0xb5f8>
   1ce50:	ldr	r0, [fp, #8]
   1ce54:	movw	r1, #0
   1ce58:	cmp	r1, r0
   1ce5c:	bge	1ce6c <__assert_fail@plt+0xb5f8>
   1ce60:	movw	r0, #0
   1ce64:	str	r0, [fp, #-40]	; 0xffffffd8
   1ce68:	b	1ce84 <__assert_fail@plt+0xb610>
   1ce6c:	ldr	r0, [fp, #8]
   1ce70:	movw	r1, #0
   1ce74:	sub	r0, r1, r0
   1ce78:	movw	r1, #127	; 0x7f
   1ce7c:	sdiv	r0, r1, r0
   1ce80:	str	r0, [fp, #-40]	; 0xffffffd8
   1ce84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ce88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce8c:	mvn	r2, #0
   1ce90:	sub	r1, r2, r1
   1ce94:	cmp	r0, r1
   1ce98:	ble	1cfbc <__assert_fail@plt+0xb748>
   1ce9c:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cea0:	b	1cea4 <__assert_fail@plt+0xb630>
   1cea4:	b	1cf00 <__assert_fail@plt+0xb68c>
   1cea8:	b	1cf00 <__assert_fail@plt+0xb68c>
   1ceac:	ldr	r0, [fp, #8]
   1ceb0:	cmn	r0, #1
   1ceb4:	bne	1cf00 <__assert_fail@plt+0xb68c>
   1ceb8:	b	1cebc <__assert_fail@plt+0xb648>
   1cebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cec0:	mvn	r1, #127	; 0x7f
   1cec4:	add	r0, r0, r1
   1cec8:	movw	r1, #0
   1cecc:	cmp	r1, r0
   1ced0:	blt	1cfbc <__assert_fail@plt+0xb748>
   1ced4:	b	1cfd4 <__assert_fail@plt+0xb760>
   1ced8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cedc:	movw	r1, #0
   1cee0:	cmp	r1, r0
   1cee4:	bge	1cfd4 <__assert_fail@plt+0xb760>
   1cee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceec:	sub	r0, r0, #1
   1cef0:	movw	r1, #127	; 0x7f
   1cef4:	cmp	r1, r0
   1cef8:	blt	1cfbc <__assert_fail@plt+0xb748>
   1cefc:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cf00:	ldr	r0, [fp, #8]
   1cf04:	mvn	r1, #127	; 0x7f
   1cf08:	sdiv	r0, r1, r0
   1cf0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf10:	cmp	r0, r1
   1cf14:	blt	1cfbc <__assert_fail@plt+0xb748>
   1cf18:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cf1c:	ldr	r0, [fp, #8]
   1cf20:	cmp	r0, #0
   1cf24:	bne	1cf2c <__assert_fail@plt+0xb6b8>
   1cf28:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cf2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf30:	cmp	r0, #0
   1cf34:	bge	1cfa4 <__assert_fail@plt+0xb730>
   1cf38:	b	1cf3c <__assert_fail@plt+0xb6c8>
   1cf3c:	b	1cf88 <__assert_fail@plt+0xb714>
   1cf40:	b	1cf88 <__assert_fail@plt+0xb714>
   1cf44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf48:	cmn	r0, #1
   1cf4c:	bne	1cf88 <__assert_fail@plt+0xb714>
   1cf50:	b	1cf54 <__assert_fail@plt+0xb6e0>
   1cf54:	ldr	r0, [fp, #8]
   1cf58:	mvn	r1, #127	; 0x7f
   1cf5c:	add	r0, r0, r1
   1cf60:	movw	r1, #0
   1cf64:	cmp	r1, r0
   1cf68:	blt	1cfbc <__assert_fail@plt+0xb748>
   1cf6c:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cf70:	ldr	r0, [fp, #8]
   1cf74:	sub	r0, r0, #1
   1cf78:	movw	r1, #127	; 0x7f
   1cf7c:	cmp	r1, r0
   1cf80:	blt	1cfbc <__assert_fail@plt+0xb748>
   1cf84:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cf88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf8c:	mvn	r1, #127	; 0x7f
   1cf90:	sdiv	r0, r1, r0
   1cf94:	ldr	r1, [fp, #8]
   1cf98:	cmp	r0, r1
   1cf9c:	blt	1cfbc <__assert_fail@plt+0xb748>
   1cfa0:	b	1cfd4 <__assert_fail@plt+0xb760>
   1cfa4:	ldr	r0, [fp, #8]
   1cfa8:	movw	r1, #127	; 0x7f
   1cfac:	sdiv	r0, r1, r0
   1cfb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfb4:	cmp	r0, r1
   1cfb8:	bge	1cfd4 <__assert_fail@plt+0xb760>
   1cfbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfc0:	ldr	r1, [fp, #8]
   1cfc4:	mul	r0, r0, r1
   1cfc8:	sxtb	r0, r0
   1cfcc:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfd0:	b	1e1e8 <__assert_fail@plt+0xc974>
   1cfd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfd8:	ldr	r1, [fp, #8]
   1cfdc:	mul	r0, r0, r1
   1cfe0:	sxtb	r0, r0
   1cfe4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfe8:	b	1e1f8 <__assert_fail@plt+0xc984>
   1cfec:	ldr	r0, [fp, #8]
   1cff0:	cmp	r0, #0
   1cff4:	bge	1d104 <__assert_fail@plt+0xb890>
   1cff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cffc:	cmp	r0, #0
   1d000:	bge	1d08c <__assert_fail@plt+0xb818>
   1d004:	b	1d008 <__assert_fail@plt+0xb794>
   1d008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d00c:	ldr	r1, [fp, #8]
   1d010:	movw	r2, #255	; 0xff
   1d014:	sdiv	r1, r2, r1
   1d018:	cmp	r0, r1
   1d01c:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d020:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d024:	b	1d028 <__assert_fail@plt+0xb7b4>
   1d028:	ldr	r0, [pc, #3584]	; 1de30 <__assert_fail@plt+0xc5bc>
   1d02c:	ldr	r1, [fp, #8]
   1d030:	cmp	r1, r0
   1d034:	blt	1d04c <__assert_fail@plt+0xb7d8>
   1d038:	b	1d058 <__assert_fail@plt+0xb7e4>
   1d03c:	ldr	r0, [fp, #8]
   1d040:	movw	r1, #0
   1d044:	cmp	r1, r0
   1d048:	bge	1d058 <__assert_fail@plt+0xb7e4>
   1d04c:	movw	r0, #0
   1d050:	str	r0, [fp, #-44]	; 0xffffffd4
   1d054:	b	1d070 <__assert_fail@plt+0xb7fc>
   1d058:	ldr	r0, [fp, #8]
   1d05c:	movw	r1, #0
   1d060:	sub	r0, r1, r0
   1d064:	movw	r1, #255	; 0xff
   1d068:	sdiv	r0, r1, r0
   1d06c:	str	r0, [fp, #-44]	; 0xffffffd4
   1d070:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d078:	mvn	r2, #0
   1d07c:	sub	r1, r2, r1
   1d080:	cmp	r0, r1
   1d084:	ble	1d1a0 <__assert_fail@plt+0xb92c>
   1d088:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d08c:	b	1d090 <__assert_fail@plt+0xb81c>
   1d090:	b	1d0e8 <__assert_fail@plt+0xb874>
   1d094:	b	1d0e8 <__assert_fail@plt+0xb874>
   1d098:	ldr	r0, [fp, #8]
   1d09c:	cmn	r0, #1
   1d0a0:	bne	1d0e8 <__assert_fail@plt+0xb874>
   1d0a4:	b	1d0a8 <__assert_fail@plt+0xb834>
   1d0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0ac:	add	r0, r0, #0
   1d0b0:	movw	r1, #0
   1d0b4:	cmp	r1, r0
   1d0b8:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d0bc:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0c4:	movw	r1, #0
   1d0c8:	cmp	r1, r0
   1d0cc:	bge	1d1b8 <__assert_fail@plt+0xb944>
   1d0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0d4:	sub	r0, r0, #1
   1d0d8:	mvn	r1, #0
   1d0dc:	cmp	r1, r0
   1d0e0:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d0e4:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d0e8:	ldr	r0, [fp, #8]
   1d0ec:	movw	r1, #0
   1d0f0:	sdiv	r0, r1, r0
   1d0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0f8:	cmp	r0, r1
   1d0fc:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d100:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d104:	ldr	r0, [fp, #8]
   1d108:	cmp	r0, #0
   1d10c:	bne	1d114 <__assert_fail@plt+0xb8a0>
   1d110:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d118:	cmp	r0, #0
   1d11c:	bge	1d188 <__assert_fail@plt+0xb914>
   1d120:	b	1d124 <__assert_fail@plt+0xb8b0>
   1d124:	b	1d16c <__assert_fail@plt+0xb8f8>
   1d128:	b	1d16c <__assert_fail@plt+0xb8f8>
   1d12c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d130:	cmn	r0, #1
   1d134:	bne	1d16c <__assert_fail@plt+0xb8f8>
   1d138:	b	1d13c <__assert_fail@plt+0xb8c8>
   1d13c:	ldr	r0, [fp, #8]
   1d140:	add	r0, r0, #0
   1d144:	movw	r1, #0
   1d148:	cmp	r1, r0
   1d14c:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d150:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d154:	ldr	r0, [fp, #8]
   1d158:	sub	r0, r0, #1
   1d15c:	mvn	r1, #0
   1d160:	cmp	r1, r0
   1d164:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d168:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d170:	movw	r1, #0
   1d174:	sdiv	r0, r1, r0
   1d178:	ldr	r1, [fp, #8]
   1d17c:	cmp	r0, r1
   1d180:	blt	1d1a0 <__assert_fail@plt+0xb92c>
   1d184:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d188:	ldr	r0, [fp, #8]
   1d18c:	movw	r1, #255	; 0xff
   1d190:	sdiv	r0, r1, r0
   1d194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d198:	cmp	r0, r1
   1d19c:	bge	1d1b8 <__assert_fail@plt+0xb944>
   1d1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1a4:	ldr	r1, [fp, #8]
   1d1a8:	mul	r0, r0, r1
   1d1ac:	and	r0, r0, #255	; 0xff
   1d1b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1b4:	b	1e1e8 <__assert_fail@plt+0xc974>
   1d1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1bc:	ldr	r1, [fp, #8]
   1d1c0:	mul	r0, r0, r1
   1d1c4:	and	r0, r0, #255	; 0xff
   1d1c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1cc:	b	1e1f8 <__assert_fail@plt+0xc984>
   1d1d0:	b	1d5a8 <__assert_fail@plt+0xbd34>
   1d1d4:	b	1d1d8 <__assert_fail@plt+0xb964>
   1d1d8:	ldr	r0, [fp, #8]
   1d1dc:	cmp	r0, #0
   1d1e0:	bge	1d2f4 <__assert_fail@plt+0xba80>
   1d1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1e8:	cmp	r0, #0
   1d1ec:	bge	1d278 <__assert_fail@plt+0xba04>
   1d1f0:	b	1d1f4 <__assert_fail@plt+0xb980>
   1d1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f8:	ldr	r1, [fp, #8]
   1d1fc:	movw	r2, #32767	; 0x7fff
   1d200:	sdiv	r1, r2, r1
   1d204:	cmp	r0, r1
   1d208:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d20c:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d210:	b	1d214 <__assert_fail@plt+0xb9a0>
   1d214:	ldr	r0, [pc, #3092]	; 1de30 <__assert_fail@plt+0xc5bc>
   1d218:	ldr	r1, [fp, #8]
   1d21c:	cmp	r1, r0
   1d220:	blt	1d238 <__assert_fail@plt+0xb9c4>
   1d224:	b	1d244 <__assert_fail@plt+0xb9d0>
   1d228:	ldr	r0, [fp, #8]
   1d22c:	movw	r1, #0
   1d230:	cmp	r1, r0
   1d234:	bge	1d244 <__assert_fail@plt+0xb9d0>
   1d238:	movw	r0, #0
   1d23c:	str	r0, [fp, #-48]	; 0xffffffd0
   1d240:	b	1d25c <__assert_fail@plt+0xb9e8>
   1d244:	ldr	r0, [fp, #8]
   1d248:	movw	r1, #0
   1d24c:	sub	r0, r1, r0
   1d250:	movw	r1, #32767	; 0x7fff
   1d254:	sdiv	r0, r1, r0
   1d258:	str	r0, [fp, #-48]	; 0xffffffd0
   1d25c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d264:	mvn	r2, #0
   1d268:	sub	r1, r2, r1
   1d26c:	cmp	r0, r1
   1d270:	ble	1d394 <__assert_fail@plt+0xbb20>
   1d274:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d278:	b	1d27c <__assert_fail@plt+0xba08>
   1d27c:	b	1d2d8 <__assert_fail@plt+0xba64>
   1d280:	b	1d2d8 <__assert_fail@plt+0xba64>
   1d284:	ldr	r0, [fp, #8]
   1d288:	cmn	r0, #1
   1d28c:	bne	1d2d8 <__assert_fail@plt+0xba64>
   1d290:	b	1d294 <__assert_fail@plt+0xba20>
   1d294:	ldr	r0, [pc, #3928]	; 1e1f4 <__assert_fail@plt+0xc980>
   1d298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d29c:	add	r0, r1, r0
   1d2a0:	movw	r1, #0
   1d2a4:	cmp	r1, r0
   1d2a8:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d2ac:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b4:	movw	r1, #0
   1d2b8:	cmp	r1, r0
   1d2bc:	bge	1d3ac <__assert_fail@plt+0xbb38>
   1d2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c4:	sub	r0, r0, #1
   1d2c8:	movw	r1, #32767	; 0x7fff
   1d2cc:	cmp	r1, r0
   1d2d0:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d2d4:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d2d8:	ldr	r0, [pc, #3860]	; 1e1f4 <__assert_fail@plt+0xc980>
   1d2dc:	ldr	r1, [fp, #8]
   1d2e0:	sdiv	r0, r0, r1
   1d2e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2e8:	cmp	r0, r1
   1d2ec:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d2f0:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d2f4:	ldr	r0, [fp, #8]
   1d2f8:	cmp	r0, #0
   1d2fc:	bne	1d304 <__assert_fail@plt+0xba90>
   1d300:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d308:	cmp	r0, #0
   1d30c:	bge	1d37c <__assert_fail@plt+0xbb08>
   1d310:	b	1d314 <__assert_fail@plt+0xbaa0>
   1d314:	b	1d360 <__assert_fail@plt+0xbaec>
   1d318:	b	1d360 <__assert_fail@plt+0xbaec>
   1d31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d320:	cmn	r0, #1
   1d324:	bne	1d360 <__assert_fail@plt+0xbaec>
   1d328:	b	1d32c <__assert_fail@plt+0xbab8>
   1d32c:	ldr	r0, [pc, #3776]	; 1e1f4 <__assert_fail@plt+0xc980>
   1d330:	ldr	r1, [fp, #8]
   1d334:	add	r0, r1, r0
   1d338:	movw	r1, #0
   1d33c:	cmp	r1, r0
   1d340:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d344:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d348:	ldr	r0, [fp, #8]
   1d34c:	sub	r0, r0, #1
   1d350:	movw	r1, #32767	; 0x7fff
   1d354:	cmp	r1, r0
   1d358:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d35c:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d360:	ldr	r0, [pc, #3724]	; 1e1f4 <__assert_fail@plt+0xc980>
   1d364:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d368:	sdiv	r0, r0, r1
   1d36c:	ldr	r1, [fp, #8]
   1d370:	cmp	r0, r1
   1d374:	blt	1d394 <__assert_fail@plt+0xbb20>
   1d378:	b	1d3ac <__assert_fail@plt+0xbb38>
   1d37c:	ldr	r0, [fp, #8]
   1d380:	movw	r1, #32767	; 0x7fff
   1d384:	sdiv	r0, r1, r0
   1d388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d38c:	cmp	r0, r1
   1d390:	bge	1d3ac <__assert_fail@plt+0xbb38>
   1d394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d398:	ldr	r1, [fp, #8]
   1d39c:	mul	r0, r0, r1
   1d3a0:	sxth	r0, r0
   1d3a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3a8:	b	1e1e8 <__assert_fail@plt+0xc974>
   1d3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3b0:	ldr	r1, [fp, #8]
   1d3b4:	mul	r0, r0, r1
   1d3b8:	sxth	r0, r0
   1d3bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3c0:	b	1e1f8 <__assert_fail@plt+0xc984>
   1d3c4:	ldr	r0, [fp, #8]
   1d3c8:	cmp	r0, #0
   1d3cc:	bge	1d4dc <__assert_fail@plt+0xbc68>
   1d3d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3d4:	cmp	r0, #0
   1d3d8:	bge	1d464 <__assert_fail@plt+0xbbf0>
   1d3dc:	b	1d3e0 <__assert_fail@plt+0xbb6c>
   1d3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3e4:	ldr	r1, [fp, #8]
   1d3e8:	movw	r2, #65535	; 0xffff
   1d3ec:	sdiv	r1, r2, r1
   1d3f0:	cmp	r0, r1
   1d3f4:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d3f8:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d3fc:	b	1d400 <__assert_fail@plt+0xbb8c>
   1d400:	ldr	r0, [pc, #2600]	; 1de30 <__assert_fail@plt+0xc5bc>
   1d404:	ldr	r1, [fp, #8]
   1d408:	cmp	r1, r0
   1d40c:	blt	1d424 <__assert_fail@plt+0xbbb0>
   1d410:	b	1d430 <__assert_fail@plt+0xbbbc>
   1d414:	ldr	r0, [fp, #8]
   1d418:	movw	r1, #0
   1d41c:	cmp	r1, r0
   1d420:	bge	1d430 <__assert_fail@plt+0xbbbc>
   1d424:	movw	r0, #0
   1d428:	str	r0, [fp, #-52]	; 0xffffffcc
   1d42c:	b	1d448 <__assert_fail@plt+0xbbd4>
   1d430:	ldr	r0, [fp, #8]
   1d434:	movw	r1, #0
   1d438:	sub	r0, r1, r0
   1d43c:	movw	r1, #65535	; 0xffff
   1d440:	sdiv	r0, r1, r0
   1d444:	str	r0, [fp, #-52]	; 0xffffffcc
   1d448:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d44c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d450:	mvn	r2, #0
   1d454:	sub	r1, r2, r1
   1d458:	cmp	r0, r1
   1d45c:	ble	1d578 <__assert_fail@plt+0xbd04>
   1d460:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d464:	b	1d468 <__assert_fail@plt+0xbbf4>
   1d468:	b	1d4c0 <__assert_fail@plt+0xbc4c>
   1d46c:	b	1d4c0 <__assert_fail@plt+0xbc4c>
   1d470:	ldr	r0, [fp, #8]
   1d474:	cmn	r0, #1
   1d478:	bne	1d4c0 <__assert_fail@plt+0xbc4c>
   1d47c:	b	1d480 <__assert_fail@plt+0xbc0c>
   1d480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d484:	add	r0, r0, #0
   1d488:	movw	r1, #0
   1d48c:	cmp	r1, r0
   1d490:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d494:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d49c:	movw	r1, #0
   1d4a0:	cmp	r1, r0
   1d4a4:	bge	1d590 <__assert_fail@plt+0xbd1c>
   1d4a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4ac:	sub	r0, r0, #1
   1d4b0:	mvn	r1, #0
   1d4b4:	cmp	r1, r0
   1d4b8:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d4bc:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d4c0:	ldr	r0, [fp, #8]
   1d4c4:	movw	r1, #0
   1d4c8:	sdiv	r0, r1, r0
   1d4cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4d0:	cmp	r0, r1
   1d4d4:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d4d8:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d4dc:	ldr	r0, [fp, #8]
   1d4e0:	cmp	r0, #0
   1d4e4:	bne	1d4ec <__assert_fail@plt+0xbc78>
   1d4e8:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4f0:	cmp	r0, #0
   1d4f4:	bge	1d560 <__assert_fail@plt+0xbcec>
   1d4f8:	b	1d4fc <__assert_fail@plt+0xbc88>
   1d4fc:	b	1d544 <__assert_fail@plt+0xbcd0>
   1d500:	b	1d544 <__assert_fail@plt+0xbcd0>
   1d504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d508:	cmn	r0, #1
   1d50c:	bne	1d544 <__assert_fail@plt+0xbcd0>
   1d510:	b	1d514 <__assert_fail@plt+0xbca0>
   1d514:	ldr	r0, [fp, #8]
   1d518:	add	r0, r0, #0
   1d51c:	movw	r1, #0
   1d520:	cmp	r1, r0
   1d524:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d528:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d52c:	ldr	r0, [fp, #8]
   1d530:	sub	r0, r0, #1
   1d534:	mvn	r1, #0
   1d538:	cmp	r1, r0
   1d53c:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d540:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d548:	movw	r1, #0
   1d54c:	sdiv	r0, r1, r0
   1d550:	ldr	r1, [fp, #8]
   1d554:	cmp	r0, r1
   1d558:	blt	1d578 <__assert_fail@plt+0xbd04>
   1d55c:	b	1d590 <__assert_fail@plt+0xbd1c>
   1d560:	ldr	r0, [fp, #8]
   1d564:	movw	r1, #65535	; 0xffff
   1d568:	sdiv	r0, r1, r0
   1d56c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d570:	cmp	r0, r1
   1d574:	bge	1d590 <__assert_fail@plt+0xbd1c>
   1d578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d57c:	ldr	r1, [fp, #8]
   1d580:	mul	r0, r0, r1
   1d584:	uxth	r0, r0
   1d588:	str	r0, [fp, #-28]	; 0xffffffe4
   1d58c:	b	1e1e8 <__assert_fail@plt+0xc974>
   1d590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d594:	ldr	r1, [fp, #8]
   1d598:	mul	r0, r0, r1
   1d59c:	uxth	r0, r0
   1d5a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5a4:	b	1e1f8 <__assert_fail@plt+0xc984>
   1d5a8:	b	1d5ac <__assert_fail@plt+0xbd38>
   1d5ac:	b	1d5b0 <__assert_fail@plt+0xbd3c>
   1d5b0:	ldr	r0, [fp, #8]
   1d5b4:	cmp	r0, #0
   1d5b8:	bge	1d6bc <__assert_fail@plt+0xbe48>
   1d5bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5c0:	cmp	r0, #0
   1d5c4:	bge	1d650 <__assert_fail@plt+0xbddc>
   1d5c8:	b	1d5cc <__assert_fail@plt+0xbd58>
   1d5cc:	ldr	r0, [pc, #1992]	; 1dd9c <__assert_fail@plt+0xc528>
   1d5d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5d4:	ldr	r2, [fp, #8]
   1d5d8:	sdiv	r0, r0, r2
   1d5dc:	cmp	r1, r0
   1d5e0:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d5e4:	b	1d760 <__assert_fail@plt+0xbeec>
   1d5e8:	b	1d5ec <__assert_fail@plt+0xbd78>
   1d5ec:	ldr	r0, [pc, #2108]	; 1de30 <__assert_fail@plt+0xc5bc>
   1d5f0:	ldr	r1, [fp, #8]
   1d5f4:	cmp	r1, r0
   1d5f8:	blt	1d610 <__assert_fail@plt+0xbd9c>
   1d5fc:	b	1d61c <__assert_fail@plt+0xbda8>
   1d600:	ldr	r0, [fp, #8]
   1d604:	movw	r1, #0
   1d608:	cmp	r1, r0
   1d60c:	bge	1d61c <__assert_fail@plt+0xbda8>
   1d610:	movw	r0, #0
   1d614:	str	r0, [fp, #-56]	; 0xffffffc8
   1d618:	b	1d634 <__assert_fail@plt+0xbdc0>
   1d61c:	ldr	r0, [pc, #1912]	; 1dd9c <__assert_fail@plt+0xc528>
   1d620:	ldr	r1, [fp, #8]
   1d624:	movw	r2, #0
   1d628:	sub	r1, r2, r1
   1d62c:	sdiv	r0, r0, r1
   1d630:	str	r0, [fp, #-56]	; 0xffffffc8
   1d634:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d63c:	mvn	r2, #0
   1d640:	sub	r1, r2, r1
   1d644:	cmp	r0, r1
   1d648:	ble	1d74c <__assert_fail@plt+0xbed8>
   1d64c:	b	1d760 <__assert_fail@plt+0xbeec>
   1d650:	ldr	r0, [fp, #8]
   1d654:	cmn	r0, #1
   1d658:	bne	1d6a0 <__assert_fail@plt+0xbe2c>
   1d65c:	b	1d660 <__assert_fail@plt+0xbdec>
   1d660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d664:	add	r0, r0, #-2147483648	; 0x80000000
   1d668:	movw	r1, #0
   1d66c:	cmp	r1, r0
   1d670:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d674:	b	1d760 <__assert_fail@plt+0xbeec>
   1d678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d67c:	movw	r1, #0
   1d680:	cmp	r1, r0
   1d684:	bge	1d760 <__assert_fail@plt+0xbeec>
   1d688:	ldr	r0, [pc, #1804]	; 1dd9c <__assert_fail@plt+0xc528>
   1d68c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d690:	sub	r1, r1, #1
   1d694:	cmp	r0, r1
   1d698:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d69c:	b	1d760 <__assert_fail@plt+0xbeec>
   1d6a0:	ldr	r0, [pc, #4072]	; 1e690 <__assert_fail@plt+0xce1c>
   1d6a4:	ldr	r1, [fp, #8]
   1d6a8:	sdiv	r0, r0, r1
   1d6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6b0:	cmp	r0, r1
   1d6b4:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d6b8:	b	1d760 <__assert_fail@plt+0xbeec>
   1d6bc:	ldr	r0, [fp, #8]
   1d6c0:	cmp	r0, #0
   1d6c4:	bne	1d6cc <__assert_fail@plt+0xbe58>
   1d6c8:	b	1d760 <__assert_fail@plt+0xbeec>
   1d6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6d0:	cmp	r0, #0
   1d6d4:	bge	1d734 <__assert_fail@plt+0xbec0>
   1d6d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6dc:	cmn	r0, #1
   1d6e0:	bne	1d718 <__assert_fail@plt+0xbea4>
   1d6e4:	b	1d6e8 <__assert_fail@plt+0xbe74>
   1d6e8:	ldr	r0, [fp, #8]
   1d6ec:	add	r0, r0, #-2147483648	; 0x80000000
   1d6f0:	movw	r1, #0
   1d6f4:	cmp	r1, r0
   1d6f8:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d6fc:	b	1d760 <__assert_fail@plt+0xbeec>
   1d700:	ldr	r0, [pc, #1684]	; 1dd9c <__assert_fail@plt+0xc528>
   1d704:	ldr	r1, [fp, #8]
   1d708:	sub	r1, r1, #1
   1d70c:	cmp	r0, r1
   1d710:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d714:	b	1d760 <__assert_fail@plt+0xbeec>
   1d718:	ldr	r0, [pc, #3952]	; 1e690 <__assert_fail@plt+0xce1c>
   1d71c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d720:	sdiv	r0, r0, r1
   1d724:	ldr	r1, [fp, #8]
   1d728:	cmp	r0, r1
   1d72c:	blt	1d74c <__assert_fail@plt+0xbed8>
   1d730:	b	1d760 <__assert_fail@plt+0xbeec>
   1d734:	ldr	r0, [pc, #1632]	; 1dd9c <__assert_fail@plt+0xc528>
   1d738:	ldr	r1, [fp, #8]
   1d73c:	sdiv	r0, r0, r1
   1d740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d744:	cmp	r0, r1
   1d748:	bge	1d760 <__assert_fail@plt+0xbeec>
   1d74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d750:	ldr	r1, [fp, #8]
   1d754:	mul	r0, r0, r1
   1d758:	str	r0, [fp, #-28]	; 0xffffffe4
   1d75c:	b	1e1e8 <__assert_fail@plt+0xc974>
   1d760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d764:	ldr	r1, [fp, #8]
   1d768:	mul	r0, r0, r1
   1d76c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d770:	b	1e1f8 <__assert_fail@plt+0xc984>
   1d774:	ldr	r0, [fp, #8]
   1d778:	cmp	r0, #0
   1d77c:	bge	1d88c <__assert_fail@plt+0xc018>
   1d780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d784:	cmp	r0, #0
   1d788:	bge	1d814 <__assert_fail@plt+0xbfa0>
   1d78c:	b	1d7ac <__assert_fail@plt+0xbf38>
   1d790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d794:	ldr	r1, [fp, #8]
   1d798:	mvn	r2, #0
   1d79c:	udiv	r1, r2, r1
   1d7a0:	cmp	r0, r1
   1d7a4:	bcc	1d928 <__assert_fail@plt+0xc0b4>
   1d7a8:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d7ac:	b	1d7b0 <__assert_fail@plt+0xbf3c>
   1d7b0:	ldr	r0, [pc, #1656]	; 1de30 <__assert_fail@plt+0xc5bc>
   1d7b4:	ldr	r1, [fp, #8]
   1d7b8:	cmp	r1, r0
   1d7bc:	blt	1d7d4 <__assert_fail@plt+0xbf60>
   1d7c0:	b	1d7e0 <__assert_fail@plt+0xbf6c>
   1d7c4:	ldr	r0, [fp, #8]
   1d7c8:	movw	r1, #0
   1d7cc:	cmp	r1, r0
   1d7d0:	bge	1d7e0 <__assert_fail@plt+0xbf6c>
   1d7d4:	movw	r0, #1
   1d7d8:	str	r0, [fp, #-60]	; 0xffffffc4
   1d7dc:	b	1d7f8 <__assert_fail@plt+0xbf84>
   1d7e0:	ldr	r0, [fp, #8]
   1d7e4:	movw	r1, #0
   1d7e8:	sub	r0, r1, r0
   1d7ec:	mvn	r1, #0
   1d7f0:	udiv	r0, r1, r0
   1d7f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d7f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d7fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d800:	mvn	r2, #0
   1d804:	sub	r1, r2, r1
   1d808:	cmp	r0, r1
   1d80c:	bls	1d928 <__assert_fail@plt+0xc0b4>
   1d810:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d814:	b	1d818 <__assert_fail@plt+0xbfa4>
   1d818:	b	1d870 <__assert_fail@plt+0xbffc>
   1d81c:	b	1d870 <__assert_fail@plt+0xbffc>
   1d820:	ldr	r0, [fp, #8]
   1d824:	cmn	r0, #1
   1d828:	bne	1d870 <__assert_fail@plt+0xbffc>
   1d82c:	b	1d830 <__assert_fail@plt+0xbfbc>
   1d830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d834:	add	r0, r0, #0
   1d838:	movw	r1, #0
   1d83c:	cmp	r1, r0
   1d840:	blt	1d928 <__assert_fail@plt+0xc0b4>
   1d844:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d84c:	movw	r1, #0
   1d850:	cmp	r1, r0
   1d854:	bge	1d93c <__assert_fail@plt+0xc0c8>
   1d858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d85c:	sub	r0, r0, #1
   1d860:	mvn	r1, #0
   1d864:	cmp	r1, r0
   1d868:	blt	1d928 <__assert_fail@plt+0xc0b4>
   1d86c:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d870:	ldr	r0, [fp, #8]
   1d874:	movw	r1, #0
   1d878:	sdiv	r0, r1, r0
   1d87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d880:	cmp	r0, r1
   1d884:	blt	1d928 <__assert_fail@plt+0xc0b4>
   1d888:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d88c:	ldr	r0, [fp, #8]
   1d890:	cmp	r0, #0
   1d894:	bne	1d89c <__assert_fail@plt+0xc028>
   1d898:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8a0:	cmp	r0, #0
   1d8a4:	bge	1d910 <__assert_fail@plt+0xc09c>
   1d8a8:	b	1d8ac <__assert_fail@plt+0xc038>
   1d8ac:	b	1d8f4 <__assert_fail@plt+0xc080>
   1d8b0:	b	1d8f4 <__assert_fail@plt+0xc080>
   1d8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8b8:	cmn	r0, #1
   1d8bc:	bne	1d8f4 <__assert_fail@plt+0xc080>
   1d8c0:	b	1d8c4 <__assert_fail@plt+0xc050>
   1d8c4:	ldr	r0, [fp, #8]
   1d8c8:	add	r0, r0, #0
   1d8cc:	movw	r1, #0
   1d8d0:	cmp	r1, r0
   1d8d4:	blt	1d928 <__assert_fail@plt+0xc0b4>
   1d8d8:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d8dc:	ldr	r0, [fp, #8]
   1d8e0:	sub	r0, r0, #1
   1d8e4:	mvn	r1, #0
   1d8e8:	cmp	r1, r0
   1d8ec:	blt	1d928 <__assert_fail@plt+0xc0b4>
   1d8f0:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d8f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8f8:	movw	r1, #0
   1d8fc:	sdiv	r0, r1, r0
   1d900:	ldr	r1, [fp, #8]
   1d904:	cmp	r0, r1
   1d908:	blt	1d928 <__assert_fail@plt+0xc0b4>
   1d90c:	b	1d93c <__assert_fail@plt+0xc0c8>
   1d910:	ldr	r0, [fp, #8]
   1d914:	mvn	r1, #0
   1d918:	udiv	r0, r1, r0
   1d91c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d920:	cmp	r0, r1
   1d924:	bcs	1d93c <__assert_fail@plt+0xc0c8>
   1d928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d92c:	ldr	r1, [fp, #8]
   1d930:	mul	r0, r0, r1
   1d934:	str	r0, [fp, #-28]	; 0xffffffe4
   1d938:	b	1e1e8 <__assert_fail@plt+0xc974>
   1d93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d940:	ldr	r1, [fp, #8]
   1d944:	mul	r0, r0, r1
   1d948:	str	r0, [fp, #-28]	; 0xffffffe4
   1d94c:	b	1e1f8 <__assert_fail@plt+0xc984>
   1d950:	b	1d954 <__assert_fail@plt+0xc0e0>
   1d954:	b	1d958 <__assert_fail@plt+0xc0e4>
   1d958:	ldr	r0, [fp, #8]
   1d95c:	cmp	r0, #0
   1d960:	bge	1da64 <__assert_fail@plt+0xc1f0>
   1d964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d968:	cmp	r0, #0
   1d96c:	bge	1d9f8 <__assert_fail@plt+0xc184>
   1d970:	b	1d974 <__assert_fail@plt+0xc100>
   1d974:	ldr	r0, [pc, #1056]	; 1dd9c <__assert_fail@plt+0xc528>
   1d978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d97c:	ldr	r2, [fp, #8]
   1d980:	sdiv	r0, r0, r2
   1d984:	cmp	r1, r0
   1d988:	blt	1daf4 <__assert_fail@plt+0xc280>
   1d98c:	b	1db08 <__assert_fail@plt+0xc294>
   1d990:	b	1d994 <__assert_fail@plt+0xc120>
   1d994:	ldr	r0, [pc, #1172]	; 1de30 <__assert_fail@plt+0xc5bc>
   1d998:	ldr	r1, [fp, #8]
   1d99c:	cmp	r1, r0
   1d9a0:	blt	1d9b8 <__assert_fail@plt+0xc144>
   1d9a4:	b	1d9c4 <__assert_fail@plt+0xc150>
   1d9a8:	ldr	r0, [fp, #8]
   1d9ac:	movw	r1, #0
   1d9b0:	cmp	r1, r0
   1d9b4:	bge	1d9c4 <__assert_fail@plt+0xc150>
   1d9b8:	movw	r0, #0
   1d9bc:	str	r0, [fp, #-64]	; 0xffffffc0
   1d9c0:	b	1d9dc <__assert_fail@plt+0xc168>
   1d9c4:	ldr	r0, [pc, #976]	; 1dd9c <__assert_fail@plt+0xc528>
   1d9c8:	ldr	r1, [fp, #8]
   1d9cc:	movw	r2, #0
   1d9d0:	sub	r1, r2, r1
   1d9d4:	sdiv	r0, r0, r1
   1d9d8:	str	r0, [fp, #-64]	; 0xffffffc0
   1d9dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d9e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d9e4:	mvn	r2, #0
   1d9e8:	sub	r1, r2, r1
   1d9ec:	cmp	r0, r1
   1d9f0:	ble	1daf4 <__assert_fail@plt+0xc280>
   1d9f4:	b	1db08 <__assert_fail@plt+0xc294>
   1d9f8:	ldr	r0, [fp, #8]
   1d9fc:	cmn	r0, #1
   1da00:	bne	1da48 <__assert_fail@plt+0xc1d4>
   1da04:	b	1da08 <__assert_fail@plt+0xc194>
   1da08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da0c:	add	r0, r0, #-2147483648	; 0x80000000
   1da10:	movw	r1, #0
   1da14:	cmp	r1, r0
   1da18:	blt	1daf4 <__assert_fail@plt+0xc280>
   1da1c:	b	1db08 <__assert_fail@plt+0xc294>
   1da20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da24:	movw	r1, #0
   1da28:	cmp	r1, r0
   1da2c:	bge	1db08 <__assert_fail@plt+0xc294>
   1da30:	ldr	r0, [pc, #868]	; 1dd9c <__assert_fail@plt+0xc528>
   1da34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da38:	sub	r1, r1, #1
   1da3c:	cmp	r0, r1
   1da40:	blt	1daf4 <__assert_fail@plt+0xc280>
   1da44:	b	1db08 <__assert_fail@plt+0xc294>
   1da48:	ldr	r0, [pc, #3136]	; 1e690 <__assert_fail@plt+0xce1c>
   1da4c:	ldr	r1, [fp, #8]
   1da50:	sdiv	r0, r0, r1
   1da54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da58:	cmp	r0, r1
   1da5c:	blt	1daf4 <__assert_fail@plt+0xc280>
   1da60:	b	1db08 <__assert_fail@plt+0xc294>
   1da64:	ldr	r0, [fp, #8]
   1da68:	cmp	r0, #0
   1da6c:	bne	1da74 <__assert_fail@plt+0xc200>
   1da70:	b	1db08 <__assert_fail@plt+0xc294>
   1da74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da78:	cmp	r0, #0
   1da7c:	bge	1dadc <__assert_fail@plt+0xc268>
   1da80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da84:	cmn	r0, #1
   1da88:	bne	1dac0 <__assert_fail@plt+0xc24c>
   1da8c:	b	1da90 <__assert_fail@plt+0xc21c>
   1da90:	ldr	r0, [fp, #8]
   1da94:	add	r0, r0, #-2147483648	; 0x80000000
   1da98:	movw	r1, #0
   1da9c:	cmp	r1, r0
   1daa0:	blt	1daf4 <__assert_fail@plt+0xc280>
   1daa4:	b	1db08 <__assert_fail@plt+0xc294>
   1daa8:	ldr	r0, [pc, #748]	; 1dd9c <__assert_fail@plt+0xc528>
   1daac:	ldr	r1, [fp, #8]
   1dab0:	sub	r1, r1, #1
   1dab4:	cmp	r0, r1
   1dab8:	blt	1daf4 <__assert_fail@plt+0xc280>
   1dabc:	b	1db08 <__assert_fail@plt+0xc294>
   1dac0:	ldr	r0, [pc, #3016]	; 1e690 <__assert_fail@plt+0xce1c>
   1dac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dac8:	sdiv	r0, r0, r1
   1dacc:	ldr	r1, [fp, #8]
   1dad0:	cmp	r0, r1
   1dad4:	blt	1daf4 <__assert_fail@plt+0xc280>
   1dad8:	b	1db08 <__assert_fail@plt+0xc294>
   1dadc:	ldr	r0, [pc, #696]	; 1dd9c <__assert_fail@plt+0xc528>
   1dae0:	ldr	r1, [fp, #8]
   1dae4:	sdiv	r0, r0, r1
   1dae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1daec:	cmp	r0, r1
   1daf0:	bge	1db08 <__assert_fail@plt+0xc294>
   1daf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daf8:	ldr	r1, [fp, #8]
   1dafc:	mul	r0, r0, r1
   1db00:	str	r0, [fp, #-28]	; 0xffffffe4
   1db04:	b	1e1e8 <__assert_fail@plt+0xc974>
   1db08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db0c:	ldr	r1, [fp, #8]
   1db10:	mul	r0, r0, r1
   1db14:	str	r0, [fp, #-28]	; 0xffffffe4
   1db18:	b	1e1f8 <__assert_fail@plt+0xc984>
   1db1c:	ldr	r0, [fp, #8]
   1db20:	cmp	r0, #0
   1db24:	bge	1dc34 <__assert_fail@plt+0xc3c0>
   1db28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db2c:	cmp	r0, #0
   1db30:	bge	1dbbc <__assert_fail@plt+0xc348>
   1db34:	b	1db54 <__assert_fail@plt+0xc2e0>
   1db38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db3c:	ldr	r1, [fp, #8]
   1db40:	mvn	r2, #0
   1db44:	udiv	r1, r2, r1
   1db48:	cmp	r0, r1
   1db4c:	bcc	1dcd0 <__assert_fail@plt+0xc45c>
   1db50:	b	1dce4 <__assert_fail@plt+0xc470>
   1db54:	b	1db58 <__assert_fail@plt+0xc2e4>
   1db58:	ldr	r0, [pc, #720]	; 1de30 <__assert_fail@plt+0xc5bc>
   1db5c:	ldr	r1, [fp, #8]
   1db60:	cmp	r1, r0
   1db64:	blt	1db7c <__assert_fail@plt+0xc308>
   1db68:	b	1db88 <__assert_fail@plt+0xc314>
   1db6c:	ldr	r0, [fp, #8]
   1db70:	movw	r1, #0
   1db74:	cmp	r1, r0
   1db78:	bge	1db88 <__assert_fail@plt+0xc314>
   1db7c:	movw	r0, #1
   1db80:	str	r0, [fp, #-68]	; 0xffffffbc
   1db84:	b	1dba0 <__assert_fail@plt+0xc32c>
   1db88:	ldr	r0, [fp, #8]
   1db8c:	movw	r1, #0
   1db90:	sub	r0, r1, r0
   1db94:	mvn	r1, #0
   1db98:	udiv	r0, r1, r0
   1db9c:	str	r0, [fp, #-68]	; 0xffffffbc
   1dba0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1dba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dba8:	mvn	r2, #0
   1dbac:	sub	r1, r2, r1
   1dbb0:	cmp	r0, r1
   1dbb4:	bls	1dcd0 <__assert_fail@plt+0xc45c>
   1dbb8:	b	1dce4 <__assert_fail@plt+0xc470>
   1dbbc:	b	1dbc0 <__assert_fail@plt+0xc34c>
   1dbc0:	b	1dc18 <__assert_fail@plt+0xc3a4>
   1dbc4:	b	1dc18 <__assert_fail@plt+0xc3a4>
   1dbc8:	ldr	r0, [fp, #8]
   1dbcc:	cmn	r0, #1
   1dbd0:	bne	1dc18 <__assert_fail@plt+0xc3a4>
   1dbd4:	b	1dbd8 <__assert_fail@plt+0xc364>
   1dbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbdc:	add	r0, r0, #0
   1dbe0:	movw	r1, #0
   1dbe4:	cmp	r1, r0
   1dbe8:	blt	1dcd0 <__assert_fail@plt+0xc45c>
   1dbec:	b	1dce4 <__assert_fail@plt+0xc470>
   1dbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbf4:	movw	r1, #0
   1dbf8:	cmp	r1, r0
   1dbfc:	bge	1dce4 <__assert_fail@plt+0xc470>
   1dc00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc04:	sub	r0, r0, #1
   1dc08:	mvn	r1, #0
   1dc0c:	cmp	r1, r0
   1dc10:	blt	1dcd0 <__assert_fail@plt+0xc45c>
   1dc14:	b	1dce4 <__assert_fail@plt+0xc470>
   1dc18:	ldr	r0, [fp, #8]
   1dc1c:	movw	r1, #0
   1dc20:	sdiv	r0, r1, r0
   1dc24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc28:	cmp	r0, r1
   1dc2c:	blt	1dcd0 <__assert_fail@plt+0xc45c>
   1dc30:	b	1dce4 <__assert_fail@plt+0xc470>
   1dc34:	ldr	r0, [fp, #8]
   1dc38:	cmp	r0, #0
   1dc3c:	bne	1dc44 <__assert_fail@plt+0xc3d0>
   1dc40:	b	1dce4 <__assert_fail@plt+0xc470>
   1dc44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc48:	cmp	r0, #0
   1dc4c:	bge	1dcb8 <__assert_fail@plt+0xc444>
   1dc50:	b	1dc54 <__assert_fail@plt+0xc3e0>
   1dc54:	b	1dc9c <__assert_fail@plt+0xc428>
   1dc58:	b	1dc9c <__assert_fail@plt+0xc428>
   1dc5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc60:	cmn	r0, #1
   1dc64:	bne	1dc9c <__assert_fail@plt+0xc428>
   1dc68:	b	1dc6c <__assert_fail@plt+0xc3f8>
   1dc6c:	ldr	r0, [fp, #8]
   1dc70:	add	r0, r0, #0
   1dc74:	movw	r1, #0
   1dc78:	cmp	r1, r0
   1dc7c:	blt	1dcd0 <__assert_fail@plt+0xc45c>
   1dc80:	b	1dce4 <__assert_fail@plt+0xc470>
   1dc84:	ldr	r0, [fp, #8]
   1dc88:	sub	r0, r0, #1
   1dc8c:	mvn	r1, #0
   1dc90:	cmp	r1, r0
   1dc94:	blt	1dcd0 <__assert_fail@plt+0xc45c>
   1dc98:	b	1dce4 <__assert_fail@plt+0xc470>
   1dc9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dca0:	movw	r1, #0
   1dca4:	sdiv	r0, r1, r0
   1dca8:	ldr	r1, [fp, #8]
   1dcac:	cmp	r0, r1
   1dcb0:	blt	1dcd0 <__assert_fail@plt+0xc45c>
   1dcb4:	b	1dce4 <__assert_fail@plt+0xc470>
   1dcb8:	ldr	r0, [fp, #8]
   1dcbc:	mvn	r1, #0
   1dcc0:	udiv	r0, r1, r0
   1dcc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dcc8:	cmp	r0, r1
   1dccc:	bcs	1dce4 <__assert_fail@plt+0xc470>
   1dcd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcd4:	ldr	r1, [fp, #8]
   1dcd8:	mul	r0, r0, r1
   1dcdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1dce0:	b	1e1e8 <__assert_fail@plt+0xc974>
   1dce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dce8:	ldr	r1, [fp, #8]
   1dcec:	mul	r0, r0, r1
   1dcf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dcf4:	b	1e1f8 <__assert_fail@plt+0xc984>
   1dcf8:	b	1dcfc <__assert_fail@plt+0xc488>
   1dcfc:	ldr	r0, [fp, #8]
   1dd00:	cmp	r0, #0
   1dd04:	bge	1de94 <__assert_fail@plt+0xc620>
   1dd08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd0c:	cmp	r0, #0
   1dd10:	bge	1ddfc <__assert_fail@plt+0xc588>
   1dd14:	b	1dd18 <__assert_fail@plt+0xc4a4>
   1dd18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd1c:	ldr	r1, [fp, #8]
   1dd20:	asr	r3, r1, #31
   1dd24:	mvn	r2, #0
   1dd28:	mvn	ip, #-2147483648	; 0x80000000
   1dd2c:	str	r0, [fp, #-72]	; 0xffffffb8
   1dd30:	mov	r0, r2
   1dd34:	str	r1, [fp, #-76]	; 0xffffffb4
   1dd38:	mov	r1, ip
   1dd3c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1dd40:	bl	230ac <__assert_fail@plt+0x11838>
   1dd44:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1dd48:	subs	r0, r2, r0
   1dd4c:	rscs	r1, r1, r2, asr #31
   1dd50:	str	r0, [fp, #-80]	; 0xffffffb0
   1dd54:	str	r1, [fp, #-84]	; 0xffffffac
   1dd58:	blt	1df74 <__assert_fail@plt+0xc700>
   1dd5c:	b	1df88 <__assert_fail@plt+0xc714>
   1dd60:	b	1dd64 <__assert_fail@plt+0xc4f0>
   1dd64:	ldr	r0, [pc, #196]	; 1de30 <__assert_fail@plt+0xc5bc>
   1dd68:	ldr	r1, [fp, #8]
   1dd6c:	cmp	r1, r0
   1dd70:	blt	1dd88 <__assert_fail@plt+0xc514>
   1dd74:	b	1dda0 <__assert_fail@plt+0xc52c>
   1dd78:	ldr	r0, [fp, #8]
   1dd7c:	movw	r1, #0
   1dd80:	cmp	r1, r0
   1dd84:	bge	1dda0 <__assert_fail@plt+0xc52c>
   1dd88:	mov	r0, #0
   1dd8c:	mvn	r1, #0
   1dd90:	str	r1, [fp, #-88]	; 0xffffffa8
   1dd94:	str	r0, [fp, #-92]	; 0xffffffa4
   1dd98:	b	1ddd4 <__assert_fail@plt+0xc560>
   1dd9c:	svcvc	0x00ffffff
   1dda0:	ldr	r0, [fp, #8]
   1dda4:	rsb	r0, r0, #0
   1dda8:	asr	r3, r0, #31
   1ddac:	mvn	r1, #0
   1ddb0:	mvn	r2, #-2147483648	; 0x80000000
   1ddb4:	str	r0, [fp, #-96]	; 0xffffffa0
   1ddb8:	mov	r0, r1
   1ddbc:	mov	r1, r2
   1ddc0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ddc4:	bl	230ac <__assert_fail@plt+0x11838>
   1ddc8:	str	r0, [fp, #-88]	; 0xffffffa8
   1ddcc:	str	r1, [fp, #-92]	; 0xffffffa4
   1ddd0:	b	1ddd4 <__assert_fail@plt+0xc560>
   1ddd4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1ddd8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1dddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dde0:	mvn	r2, r2
   1dde4:	subs	r1, r2, r1
   1dde8:	rscs	r0, r0, r2, asr #31
   1ddec:	str	r1, [fp, #-100]	; 0xffffff9c
   1ddf0:	str	r0, [fp, #-104]	; 0xffffff98
   1ddf4:	bge	1df74 <__assert_fail@plt+0xc700>
   1ddf8:	b	1df88 <__assert_fail@plt+0xc714>
   1ddfc:	ldr	r0, [fp, #8]
   1de00:	cmn	r0, #1
   1de04:	bne	1de54 <__assert_fail@plt+0xc5e0>
   1de08:	b	1de0c <__assert_fail@plt+0xc598>
   1de0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de10:	mov	r1, #-2147483648	; 0x80000000
   1de14:	add	r1, r1, r0, asr #31
   1de18:	rsbs	r0, r0, #0
   1de1c:	rscs	r1, r1, #0
   1de20:	str	r0, [fp, #-108]	; 0xffffff94
   1de24:	str	r1, [fp, #-112]	; 0xffffff90
   1de28:	blt	1df74 <__assert_fail@plt+0xc700>
   1de2c:	b	1df88 <__assert_fail@plt+0xc714>
   1de30:	andhi	r0, r0, r1
   1de34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de38:	movw	r1, #0
   1de3c:	cmp	r1, r0
   1de40:	bge	1df88 <__assert_fail@plt+0xc714>
   1de44:	mov	r0, #0
   1de48:	cmp	r0, #0
   1de4c:	bne	1df74 <__assert_fail@plt+0xc700>
   1de50:	b	1df88 <__assert_fail@plt+0xc714>
   1de54:	ldr	r0, [fp, #8]
   1de58:	asr	r3, r0, #31
   1de5c:	mov	r1, #0
   1de60:	mov	r2, #-2147483648	; 0x80000000
   1de64:	str	r0, [fp, #-116]	; 0xffffff8c
   1de68:	mov	r0, r1
   1de6c:	mov	r1, r2
   1de70:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1de74:	bl	230ac <__assert_fail@plt+0x11838>
   1de78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1de7c:	subs	r0, r0, r2
   1de80:	sbcs	r1, r1, r2, asr #31
   1de84:	str	r0, [fp, #-120]	; 0xffffff88
   1de88:	str	r1, [fp, #-124]	; 0xffffff84
   1de8c:	blt	1df74 <__assert_fail@plt+0xc700>
   1de90:	b	1df88 <__assert_fail@plt+0xc714>
   1de94:	ldr	r0, [fp, #8]
   1de98:	cmp	r0, #0
   1de9c:	bne	1dea4 <__assert_fail@plt+0xc630>
   1dea0:	b	1df88 <__assert_fail@plt+0xc714>
   1dea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dea8:	cmp	r0, #0
   1deac:	bge	1df34 <__assert_fail@plt+0xc6c0>
   1deb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1deb4:	cmn	r0, #1
   1deb8:	bne	1def4 <__assert_fail@plt+0xc680>
   1debc:	b	1dec0 <__assert_fail@plt+0xc64c>
   1dec0:	ldr	r0, [fp, #8]
   1dec4:	mov	r1, #-2147483648	; 0x80000000
   1dec8:	add	r1, r1, r0, asr #31
   1decc:	rsbs	r0, r0, #0
   1ded0:	rscs	r1, r1, #0
   1ded4:	str	r0, [fp, #-128]	; 0xffffff80
   1ded8:	str	r1, [fp, #-132]	; 0xffffff7c
   1dedc:	blt	1df74 <__assert_fail@plt+0xc700>
   1dee0:	b	1df88 <__assert_fail@plt+0xc714>
   1dee4:	mov	r0, #0
   1dee8:	cmp	r0, #0
   1deec:	bne	1df74 <__assert_fail@plt+0xc700>
   1def0:	b	1df88 <__assert_fail@plt+0xc714>
   1def4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1def8:	asr	r3, r0, #31
   1defc:	mov	r1, #0
   1df00:	mov	r2, #-2147483648	; 0x80000000
   1df04:	str	r0, [fp, #-136]	; 0xffffff78
   1df08:	mov	r0, r1
   1df0c:	mov	r1, r2
   1df10:	ldr	r2, [fp, #-136]	; 0xffffff78
   1df14:	bl	230ac <__assert_fail@plt+0x11838>
   1df18:	ldr	r2, [fp, #8]
   1df1c:	subs	r0, r0, r2
   1df20:	sbcs	r1, r1, r2, asr #31
   1df24:	str	r0, [fp, #-140]	; 0xffffff74
   1df28:	str	r1, [fp, #-144]	; 0xffffff70
   1df2c:	blt	1df74 <__assert_fail@plt+0xc700>
   1df30:	b	1df88 <__assert_fail@plt+0xc714>
   1df34:	ldr	r0, [fp, #8]
   1df38:	asr	r3, r0, #31
   1df3c:	mvn	r1, #0
   1df40:	mvn	r2, #-2147483648	; 0x80000000
   1df44:	str	r0, [fp, #-148]	; 0xffffff6c
   1df48:	mov	r0, r1
   1df4c:	mov	r1, r2
   1df50:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1df54:	bl	230ac <__assert_fail@plt+0x11838>
   1df58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df5c:	subs	r0, r0, r2
   1df60:	sbcs	r1, r1, r2, asr #31
   1df64:	str	r0, [fp, #-152]	; 0xffffff68
   1df68:	str	r1, [fp, #-156]	; 0xffffff64
   1df6c:	bge	1df88 <__assert_fail@plt+0xc714>
   1df70:	b	1df74 <__assert_fail@plt+0xc700>
   1df74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df78:	ldr	r1, [fp, #8]
   1df7c:	mul	r0, r0, r1
   1df80:	str	r0, [fp, #-28]	; 0xffffffe4
   1df84:	b	1e1e8 <__assert_fail@plt+0xc974>
   1df88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df8c:	ldr	r1, [fp, #8]
   1df90:	mul	r0, r0, r1
   1df94:	str	r0, [fp, #-28]	; 0xffffffe4
   1df98:	b	1e1f8 <__assert_fail@plt+0xc984>
   1df9c:	ldr	r0, [fp, #8]
   1dfa0:	cmp	r0, #0
   1dfa4:	bge	1e104 <__assert_fail@plt+0xc890>
   1dfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfac:	cmp	r0, #0
   1dfb0:	bge	1e08c <__assert_fail@plt+0xc818>
   1dfb4:	b	1dffc <__assert_fail@plt+0xc788>
   1dfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfbc:	ldr	r1, [fp, #8]
   1dfc0:	asr	r3, r1, #31
   1dfc4:	mvn	r2, #0
   1dfc8:	str	r0, [fp, #-160]	; 0xffffff60
   1dfcc:	mov	r0, r2
   1dfd0:	str	r1, [fp, #-164]	; 0xffffff5c
   1dfd4:	mov	r1, r2
   1dfd8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dfdc:	bl	23180 <__assert_fail@plt+0x1190c>
   1dfe0:	ldr	r2, [fp, #-160]	; 0xffffff60
   1dfe4:	subs	r0, r2, r0
   1dfe8:	rscs	r1, r1, r2, asr #31
   1dfec:	str	r0, [fp, #-168]	; 0xffffff58
   1dff0:	str	r1, [fp, #-172]	; 0xffffff54
   1dff4:	bcc	1e1c0 <__assert_fail@plt+0xc94c>
   1dff8:	b	1e1d4 <__assert_fail@plt+0xc960>
   1dffc:	b	1e000 <__assert_fail@plt+0xc78c>
   1e000:	ldr	r0, [pc, #-472]	; 1de30 <__assert_fail@plt+0xc5bc>
   1e004:	ldr	r1, [fp, #8]
   1e008:	cmp	r1, r0
   1e00c:	blt	1e024 <__assert_fail@plt+0xc7b0>
   1e010:	b	1e038 <__assert_fail@plt+0xc7c4>
   1e014:	ldr	r0, [fp, #8]
   1e018:	movw	r1, #0
   1e01c:	cmp	r1, r0
   1e020:	bge	1e038 <__assert_fail@plt+0xc7c4>
   1e024:	mov	r0, #1
   1e028:	mvn	r1, #0
   1e02c:	str	r1, [fp, #-176]	; 0xffffff50
   1e030:	str	r0, [fp, #-180]	; 0xffffff4c
   1e034:	b	1e064 <__assert_fail@plt+0xc7f0>
   1e038:	ldr	r0, [fp, #8]
   1e03c:	rsb	r0, r0, #0
   1e040:	asr	r3, r0, #31
   1e044:	mvn	r1, #0
   1e048:	str	r0, [fp, #-184]	; 0xffffff48
   1e04c:	mov	r0, r1
   1e050:	ldr	r2, [fp, #-184]	; 0xffffff48
   1e054:	bl	23180 <__assert_fail@plt+0x1190c>
   1e058:	str	r0, [fp, #-176]	; 0xffffff50
   1e05c:	str	r1, [fp, #-180]	; 0xffffff4c
   1e060:	b	1e064 <__assert_fail@plt+0xc7f0>
   1e064:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1e068:	ldr	r1, [fp, #-176]	; 0xffffff50
   1e06c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e070:	mvn	r2, r2
   1e074:	subs	r1, r2, r1
   1e078:	rscs	r0, r0, r2, asr #31
   1e07c:	str	r1, [sp, #188]	; 0xbc
   1e080:	str	r0, [sp, #184]	; 0xb8
   1e084:	bcs	1e1c0 <__assert_fail@plt+0xc94c>
   1e088:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e08c:	b	1e090 <__assert_fail@plt+0xc81c>
   1e090:	b	1e0e8 <__assert_fail@plt+0xc874>
   1e094:	b	1e0e8 <__assert_fail@plt+0xc874>
   1e098:	ldr	r0, [fp, #8]
   1e09c:	cmn	r0, #1
   1e0a0:	bne	1e0e8 <__assert_fail@plt+0xc874>
   1e0a4:	b	1e0a8 <__assert_fail@plt+0xc834>
   1e0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0ac:	add	r0, r0, #0
   1e0b0:	movw	r1, #0
   1e0b4:	cmp	r1, r0
   1e0b8:	blt	1e1c0 <__assert_fail@plt+0xc94c>
   1e0bc:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0c4:	movw	r1, #0
   1e0c8:	cmp	r1, r0
   1e0cc:	bge	1e1d4 <__assert_fail@plt+0xc960>
   1e0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0d4:	sub	r0, r0, #1
   1e0d8:	mvn	r1, #0
   1e0dc:	cmp	r1, r0
   1e0e0:	blt	1e1c0 <__assert_fail@plt+0xc94c>
   1e0e4:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e0e8:	ldr	r0, [fp, #8]
   1e0ec:	movw	r1, #0
   1e0f0:	sdiv	r0, r1, r0
   1e0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0f8:	cmp	r0, r1
   1e0fc:	blt	1e1c0 <__assert_fail@plt+0xc94c>
   1e100:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e104:	ldr	r0, [fp, #8]
   1e108:	cmp	r0, #0
   1e10c:	bne	1e114 <__assert_fail@plt+0xc8a0>
   1e110:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e118:	cmp	r0, #0
   1e11c:	bge	1e188 <__assert_fail@plt+0xc914>
   1e120:	b	1e124 <__assert_fail@plt+0xc8b0>
   1e124:	b	1e16c <__assert_fail@plt+0xc8f8>
   1e128:	b	1e16c <__assert_fail@plt+0xc8f8>
   1e12c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e130:	cmn	r0, #1
   1e134:	bne	1e16c <__assert_fail@plt+0xc8f8>
   1e138:	b	1e13c <__assert_fail@plt+0xc8c8>
   1e13c:	ldr	r0, [fp, #8]
   1e140:	add	r0, r0, #0
   1e144:	movw	r1, #0
   1e148:	cmp	r1, r0
   1e14c:	blt	1e1c0 <__assert_fail@plt+0xc94c>
   1e150:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e154:	ldr	r0, [fp, #8]
   1e158:	sub	r0, r0, #1
   1e15c:	mvn	r1, #0
   1e160:	cmp	r1, r0
   1e164:	blt	1e1c0 <__assert_fail@plt+0xc94c>
   1e168:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e170:	movw	r1, #0
   1e174:	sdiv	r0, r1, r0
   1e178:	ldr	r1, [fp, #8]
   1e17c:	cmp	r0, r1
   1e180:	blt	1e1c0 <__assert_fail@plt+0xc94c>
   1e184:	b	1e1d4 <__assert_fail@plt+0xc960>
   1e188:	ldr	r0, [fp, #8]
   1e18c:	asr	r3, r0, #31
   1e190:	mvn	r1, #0
   1e194:	str	r0, [sp, #180]	; 0xb4
   1e198:	mov	r0, r1
   1e19c:	ldr	r2, [sp, #180]	; 0xb4
   1e1a0:	bl	23180 <__assert_fail@plt+0x1190c>
   1e1a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1a8:	subs	r0, r0, r2
   1e1ac:	sbcs	r1, r1, r2, asr #31
   1e1b0:	str	r0, [sp, #176]	; 0xb0
   1e1b4:	str	r1, [sp, #172]	; 0xac
   1e1b8:	bcs	1e1d4 <__assert_fail@plt+0xc960>
   1e1bc:	b	1e1c0 <__assert_fail@plt+0xc94c>
   1e1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1c4:	ldr	r1, [fp, #8]
   1e1c8:	mul	r0, r0, r1
   1e1cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1d0:	b	1e1e8 <__assert_fail@plt+0xc974>
   1e1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1d8:	ldr	r1, [fp, #8]
   1e1dc:	mul	r0, r0, r1
   1e1e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1e4:	b	1e1f8 <__assert_fail@plt+0xc984>
   1e1e8:	ldr	r0, [pc, #-1108]	; 1dd9c <__assert_fail@plt+0xc528>
   1e1ec:	str	r0, [sp, #168]	; 0xa8
   1e1f0:	b	1e218 <__assert_fail@plt+0xc9a4>
   1e1f4:			; <UNDEFINED> instruction: 0xffff8000
   1e1f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e1fc:	cmp	r0, #64	; 0x40
   1e200:	movw	r0, #0
   1e204:	movlt	r0, #1
   1e208:	tst	r0, #1
   1e20c:	movw	r0, #64	; 0x40
   1e210:	moveq	r0, #0
   1e214:	str	r0, [sp, #168]	; 0xa8
   1e218:	ldr	r0, [sp, #168]	; 0xa8
   1e21c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e224:	cmp	r0, #0
   1e228:	beq	1e258 <__assert_fail@plt+0xc9e4>
   1e22c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e230:	ldr	r1, [fp, #8]
   1e234:	sdiv	r0, r0, r1
   1e238:	str	r0, [fp, #-24]	; 0xffffffe8
   1e23c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e240:	mov	r1, r0
   1e244:	ldr	r2, [fp, #8]
   1e248:	sdiv	r3, r0, r2
   1e24c:	mls	r0, r3, r2, r0
   1e250:	sub	r0, r1, r0
   1e254:	str	r0, [fp, #-28]	; 0xffffffe4
   1e258:	ldr	r0, [fp, #-4]
   1e25c:	movw	r1, #0
   1e260:	cmp	r0, r1
   1e264:	bne	1e274 <__assert_fail@plt+0xca00>
   1e268:	ldr	r0, [fp, #-8]
   1e26c:	movw	r1, #0
   1e270:	str	r1, [r0]
   1e274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e278:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e27c:	sub	r0, r0, r1
   1e280:	ldr	r1, [fp, #-12]
   1e284:	cmp	r0, r1
   1e288:	bge	1f6c0 <__assert_fail@plt+0xde4c>
   1e28c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e290:	ldr	r1, [fp, #-12]
   1e294:	add	r1, r0, r1
   1e298:	mov	r2, #1
   1e29c:	cmp	r1, r0
   1e2a0:	movwvc	r2, #0
   1e2a4:	str	r1, [fp, #-24]	; 0xffffffe8
   1e2a8:	tst	r2, #1
   1e2ac:	bne	1f6bc <__assert_fail@plt+0xde48>
   1e2b0:	ldr	r0, [fp, #-16]
   1e2b4:	movw	r1, #0
   1e2b8:	cmp	r1, r0
   1e2bc:	bgt	1e2d0 <__assert_fail@plt+0xca5c>
   1e2c0:	ldr	r0, [fp, #-16]
   1e2c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2c8:	cmp	r0, r1
   1e2cc:	blt	1f6bc <__assert_fail@plt+0xde48>
   1e2d0:	b	1e6ac <__assert_fail@plt+0xce38>
   1e2d4:	b	1e2d8 <__assert_fail@plt+0xca64>
   1e2d8:	ldr	r0, [fp, #8]
   1e2dc:	cmp	r0, #0
   1e2e0:	bge	1e3f4 <__assert_fail@plt+0xcb80>
   1e2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2e8:	cmp	r0, #0
   1e2ec:	bge	1e378 <__assert_fail@plt+0xcb04>
   1e2f0:	b	1e2f4 <__assert_fail@plt+0xca80>
   1e2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2f8:	ldr	r1, [fp, #8]
   1e2fc:	movw	r2, #127	; 0x7f
   1e300:	sdiv	r1, r2, r1
   1e304:	cmp	r0, r1
   1e308:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e30c:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e310:	b	1e314 <__assert_fail@plt+0xcaa0>
   1e314:	ldr	r0, [pc, #-1260]	; 1de30 <__assert_fail@plt+0xc5bc>
   1e318:	ldr	r1, [fp, #8]
   1e31c:	cmp	r1, r0
   1e320:	blt	1e338 <__assert_fail@plt+0xcac4>
   1e324:	b	1e344 <__assert_fail@plt+0xcad0>
   1e328:	ldr	r0, [fp, #8]
   1e32c:	movw	r1, #0
   1e330:	cmp	r1, r0
   1e334:	bge	1e344 <__assert_fail@plt+0xcad0>
   1e338:	movw	r0, #0
   1e33c:	str	r0, [sp, #164]	; 0xa4
   1e340:	b	1e35c <__assert_fail@plt+0xcae8>
   1e344:	ldr	r0, [fp, #8]
   1e348:	movw	r1, #0
   1e34c:	sub	r0, r1, r0
   1e350:	movw	r1, #127	; 0x7f
   1e354:	sdiv	r0, r1, r0
   1e358:	str	r0, [sp, #164]	; 0xa4
   1e35c:	ldr	r0, [sp, #164]	; 0xa4
   1e360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e364:	mvn	r2, #0
   1e368:	sub	r1, r2, r1
   1e36c:	cmp	r0, r1
   1e370:	ble	1e494 <__assert_fail@plt+0xcc20>
   1e374:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e378:	b	1e37c <__assert_fail@plt+0xcb08>
   1e37c:	b	1e3d8 <__assert_fail@plt+0xcb64>
   1e380:	b	1e3d8 <__assert_fail@plt+0xcb64>
   1e384:	ldr	r0, [fp, #8]
   1e388:	cmn	r0, #1
   1e38c:	bne	1e3d8 <__assert_fail@plt+0xcb64>
   1e390:	b	1e394 <__assert_fail@plt+0xcb20>
   1e394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e398:	mvn	r1, #127	; 0x7f
   1e39c:	add	r0, r0, r1
   1e3a0:	movw	r1, #0
   1e3a4:	cmp	r1, r0
   1e3a8:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e3ac:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3b4:	movw	r1, #0
   1e3b8:	cmp	r1, r0
   1e3bc:	bge	1e4ac <__assert_fail@plt+0xcc38>
   1e3c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c4:	sub	r0, r0, #1
   1e3c8:	movw	r1, #127	; 0x7f
   1e3cc:	cmp	r1, r0
   1e3d0:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e3d4:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e3d8:	ldr	r0, [fp, #8]
   1e3dc:	mvn	r1, #127	; 0x7f
   1e3e0:	sdiv	r0, r1, r0
   1e3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3e8:	cmp	r0, r1
   1e3ec:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e3f0:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e3f4:	ldr	r0, [fp, #8]
   1e3f8:	cmp	r0, #0
   1e3fc:	bne	1e404 <__assert_fail@plt+0xcb90>
   1e400:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e408:	cmp	r0, #0
   1e40c:	bge	1e47c <__assert_fail@plt+0xcc08>
   1e410:	b	1e414 <__assert_fail@plt+0xcba0>
   1e414:	b	1e460 <__assert_fail@plt+0xcbec>
   1e418:	b	1e460 <__assert_fail@plt+0xcbec>
   1e41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e420:	cmn	r0, #1
   1e424:	bne	1e460 <__assert_fail@plt+0xcbec>
   1e428:	b	1e42c <__assert_fail@plt+0xcbb8>
   1e42c:	ldr	r0, [fp, #8]
   1e430:	mvn	r1, #127	; 0x7f
   1e434:	add	r0, r0, r1
   1e438:	movw	r1, #0
   1e43c:	cmp	r1, r0
   1e440:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e444:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e448:	ldr	r0, [fp, #8]
   1e44c:	sub	r0, r0, #1
   1e450:	movw	r1, #127	; 0x7f
   1e454:	cmp	r1, r0
   1e458:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e45c:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e464:	mvn	r1, #127	; 0x7f
   1e468:	sdiv	r0, r1, r0
   1e46c:	ldr	r1, [fp, #8]
   1e470:	cmp	r0, r1
   1e474:	blt	1e494 <__assert_fail@plt+0xcc20>
   1e478:	b	1e4ac <__assert_fail@plt+0xcc38>
   1e47c:	ldr	r0, [fp, #8]
   1e480:	movw	r1, #127	; 0x7f
   1e484:	sdiv	r0, r1, r0
   1e488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e48c:	cmp	r0, r1
   1e490:	bge	1e4ac <__assert_fail@plt+0xcc38>
   1e494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e498:	ldr	r1, [fp, #8]
   1e49c:	mul	r0, r0, r1
   1e4a0:	sxtb	r0, r0
   1e4a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4a8:	b	1f6bc <__assert_fail@plt+0xde48>
   1e4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4b0:	ldr	r1, [fp, #8]
   1e4b4:	mul	r0, r0, r1
   1e4b8:	sxtb	r0, r0
   1e4bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4c0:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1e4c4:	ldr	r0, [fp, #8]
   1e4c8:	cmp	r0, #0
   1e4cc:	bge	1e5dc <__assert_fail@plt+0xcd68>
   1e4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4d4:	cmp	r0, #0
   1e4d8:	bge	1e564 <__assert_fail@plt+0xccf0>
   1e4dc:	b	1e4e0 <__assert_fail@plt+0xcc6c>
   1e4e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e4:	ldr	r1, [fp, #8]
   1e4e8:	movw	r2, #255	; 0xff
   1e4ec:	sdiv	r1, r2, r1
   1e4f0:	cmp	r0, r1
   1e4f4:	blt	1e678 <__assert_fail@plt+0xce04>
   1e4f8:	b	1e694 <__assert_fail@plt+0xce20>
   1e4fc:	b	1e500 <__assert_fail@plt+0xcc8c>
   1e500:	ldr	r0, [pc, #-1752]	; 1de30 <__assert_fail@plt+0xc5bc>
   1e504:	ldr	r1, [fp, #8]
   1e508:	cmp	r1, r0
   1e50c:	blt	1e524 <__assert_fail@plt+0xccb0>
   1e510:	b	1e530 <__assert_fail@plt+0xccbc>
   1e514:	ldr	r0, [fp, #8]
   1e518:	movw	r1, #0
   1e51c:	cmp	r1, r0
   1e520:	bge	1e530 <__assert_fail@plt+0xccbc>
   1e524:	movw	r0, #0
   1e528:	str	r0, [sp, #160]	; 0xa0
   1e52c:	b	1e548 <__assert_fail@plt+0xccd4>
   1e530:	ldr	r0, [fp, #8]
   1e534:	movw	r1, #0
   1e538:	sub	r0, r1, r0
   1e53c:	movw	r1, #255	; 0xff
   1e540:	sdiv	r0, r1, r0
   1e544:	str	r0, [sp, #160]	; 0xa0
   1e548:	ldr	r0, [sp, #160]	; 0xa0
   1e54c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e550:	mvn	r2, #0
   1e554:	sub	r1, r2, r1
   1e558:	cmp	r0, r1
   1e55c:	ble	1e678 <__assert_fail@plt+0xce04>
   1e560:	b	1e694 <__assert_fail@plt+0xce20>
   1e564:	b	1e568 <__assert_fail@plt+0xccf4>
   1e568:	b	1e5c0 <__assert_fail@plt+0xcd4c>
   1e56c:	b	1e5c0 <__assert_fail@plt+0xcd4c>
   1e570:	ldr	r0, [fp, #8]
   1e574:	cmn	r0, #1
   1e578:	bne	1e5c0 <__assert_fail@plt+0xcd4c>
   1e57c:	b	1e580 <__assert_fail@plt+0xcd0c>
   1e580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e584:	add	r0, r0, #0
   1e588:	movw	r1, #0
   1e58c:	cmp	r1, r0
   1e590:	blt	1e678 <__assert_fail@plt+0xce04>
   1e594:	b	1e694 <__assert_fail@plt+0xce20>
   1e598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e59c:	movw	r1, #0
   1e5a0:	cmp	r1, r0
   1e5a4:	bge	1e694 <__assert_fail@plt+0xce20>
   1e5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5ac:	sub	r0, r0, #1
   1e5b0:	mvn	r1, #0
   1e5b4:	cmp	r1, r0
   1e5b8:	blt	1e678 <__assert_fail@plt+0xce04>
   1e5bc:	b	1e694 <__assert_fail@plt+0xce20>
   1e5c0:	ldr	r0, [fp, #8]
   1e5c4:	movw	r1, #0
   1e5c8:	sdiv	r0, r1, r0
   1e5cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5d0:	cmp	r0, r1
   1e5d4:	blt	1e678 <__assert_fail@plt+0xce04>
   1e5d8:	b	1e694 <__assert_fail@plt+0xce20>
   1e5dc:	ldr	r0, [fp, #8]
   1e5e0:	cmp	r0, #0
   1e5e4:	bne	1e5ec <__assert_fail@plt+0xcd78>
   1e5e8:	b	1e694 <__assert_fail@plt+0xce20>
   1e5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5f0:	cmp	r0, #0
   1e5f4:	bge	1e660 <__assert_fail@plt+0xcdec>
   1e5f8:	b	1e5fc <__assert_fail@plt+0xcd88>
   1e5fc:	b	1e644 <__assert_fail@plt+0xcdd0>
   1e600:	b	1e644 <__assert_fail@plt+0xcdd0>
   1e604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e608:	cmn	r0, #1
   1e60c:	bne	1e644 <__assert_fail@plt+0xcdd0>
   1e610:	b	1e614 <__assert_fail@plt+0xcda0>
   1e614:	ldr	r0, [fp, #8]
   1e618:	add	r0, r0, #0
   1e61c:	movw	r1, #0
   1e620:	cmp	r1, r0
   1e624:	blt	1e678 <__assert_fail@plt+0xce04>
   1e628:	b	1e694 <__assert_fail@plt+0xce20>
   1e62c:	ldr	r0, [fp, #8]
   1e630:	sub	r0, r0, #1
   1e634:	mvn	r1, #0
   1e638:	cmp	r1, r0
   1e63c:	blt	1e678 <__assert_fail@plt+0xce04>
   1e640:	b	1e694 <__assert_fail@plt+0xce20>
   1e644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e648:	movw	r1, #0
   1e64c:	sdiv	r0, r1, r0
   1e650:	ldr	r1, [fp, #8]
   1e654:	cmp	r0, r1
   1e658:	blt	1e678 <__assert_fail@plt+0xce04>
   1e65c:	b	1e694 <__assert_fail@plt+0xce20>
   1e660:	ldr	r0, [fp, #8]
   1e664:	movw	r1, #255	; 0xff
   1e668:	sdiv	r0, r1, r0
   1e66c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e670:	cmp	r0, r1
   1e674:	bge	1e694 <__assert_fail@plt+0xce20>
   1e678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e67c:	ldr	r1, [fp, #8]
   1e680:	mul	r0, r0, r1
   1e684:	and	r0, r0, #255	; 0xff
   1e688:	str	r0, [fp, #-28]	; 0xffffffe4
   1e68c:	b	1f6bc <__assert_fail@plt+0xde48>
   1e690:	andhi	r0, r0, r0
   1e694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e698:	ldr	r1, [fp, #8]
   1e69c:	mul	r0, r0, r1
   1e6a0:	and	r0, r0, #255	; 0xff
   1e6a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e6a8:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1e6ac:	b	1ea84 <__assert_fail@plt+0xd210>
   1e6b0:	b	1e6b4 <__assert_fail@plt+0xce40>
   1e6b4:	ldr	r0, [fp, #8]
   1e6b8:	cmp	r0, #0
   1e6bc:	bge	1e7d0 <__assert_fail@plt+0xcf5c>
   1e6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6c4:	cmp	r0, #0
   1e6c8:	bge	1e754 <__assert_fail@plt+0xcee0>
   1e6cc:	b	1e6d0 <__assert_fail@plt+0xce5c>
   1e6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6d4:	ldr	r1, [fp, #8]
   1e6d8:	movw	r2, #32767	; 0x7fff
   1e6dc:	sdiv	r1, r2, r1
   1e6e0:	cmp	r0, r1
   1e6e4:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e6e8:	b	1e888 <__assert_fail@plt+0xd014>
   1e6ec:	b	1e6f0 <__assert_fail@plt+0xce7c>
   1e6f0:	ldr	r0, [pc, #4084]	; 1f6ec <__assert_fail@plt+0xde78>
   1e6f4:	ldr	r1, [fp, #8]
   1e6f8:	cmp	r1, r0
   1e6fc:	blt	1e714 <__assert_fail@plt+0xcea0>
   1e700:	b	1e720 <__assert_fail@plt+0xceac>
   1e704:	ldr	r0, [fp, #8]
   1e708:	movw	r1, #0
   1e70c:	cmp	r1, r0
   1e710:	bge	1e720 <__assert_fail@plt+0xceac>
   1e714:	movw	r0, #0
   1e718:	str	r0, [sp, #156]	; 0x9c
   1e71c:	b	1e738 <__assert_fail@plt+0xcec4>
   1e720:	ldr	r0, [fp, #8]
   1e724:	movw	r1, #0
   1e728:	sub	r0, r1, r0
   1e72c:	movw	r1, #32767	; 0x7fff
   1e730:	sdiv	r0, r1, r0
   1e734:	str	r0, [sp, #156]	; 0x9c
   1e738:	ldr	r0, [sp, #156]	; 0x9c
   1e73c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e740:	mvn	r2, #0
   1e744:	sub	r1, r2, r1
   1e748:	cmp	r0, r1
   1e74c:	ble	1e870 <__assert_fail@plt+0xcffc>
   1e750:	b	1e888 <__assert_fail@plt+0xd014>
   1e754:	b	1e758 <__assert_fail@plt+0xcee4>
   1e758:	b	1e7b4 <__assert_fail@plt+0xcf40>
   1e75c:	b	1e7b4 <__assert_fail@plt+0xcf40>
   1e760:	ldr	r0, [fp, #8]
   1e764:	cmn	r0, #1
   1e768:	bne	1e7b4 <__assert_fail@plt+0xcf40>
   1e76c:	b	1e770 <__assert_fail@plt+0xcefc>
   1e770:	ldr	r0, [pc, #3964]	; 1f6f4 <__assert_fail@plt+0xde80>
   1e774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e778:	add	r0, r1, r0
   1e77c:	movw	r1, #0
   1e780:	cmp	r1, r0
   1e784:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e788:	b	1e888 <__assert_fail@plt+0xd014>
   1e78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e790:	movw	r1, #0
   1e794:	cmp	r1, r0
   1e798:	bge	1e888 <__assert_fail@plt+0xd014>
   1e79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7a0:	sub	r0, r0, #1
   1e7a4:	movw	r1, #32767	; 0x7fff
   1e7a8:	cmp	r1, r0
   1e7ac:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e7b0:	b	1e888 <__assert_fail@plt+0xd014>
   1e7b4:	ldr	r0, [pc, #3896]	; 1f6f4 <__assert_fail@plt+0xde80>
   1e7b8:	ldr	r1, [fp, #8]
   1e7bc:	sdiv	r0, r0, r1
   1e7c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7c4:	cmp	r0, r1
   1e7c8:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e7cc:	b	1e888 <__assert_fail@plt+0xd014>
   1e7d0:	ldr	r0, [fp, #8]
   1e7d4:	cmp	r0, #0
   1e7d8:	bne	1e7e0 <__assert_fail@plt+0xcf6c>
   1e7dc:	b	1e888 <__assert_fail@plt+0xd014>
   1e7e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7e4:	cmp	r0, #0
   1e7e8:	bge	1e858 <__assert_fail@plt+0xcfe4>
   1e7ec:	b	1e7f0 <__assert_fail@plt+0xcf7c>
   1e7f0:	b	1e83c <__assert_fail@plt+0xcfc8>
   1e7f4:	b	1e83c <__assert_fail@plt+0xcfc8>
   1e7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7fc:	cmn	r0, #1
   1e800:	bne	1e83c <__assert_fail@plt+0xcfc8>
   1e804:	b	1e808 <__assert_fail@plt+0xcf94>
   1e808:	ldr	r0, [pc, #3812]	; 1f6f4 <__assert_fail@plt+0xde80>
   1e80c:	ldr	r1, [fp, #8]
   1e810:	add	r0, r1, r0
   1e814:	movw	r1, #0
   1e818:	cmp	r1, r0
   1e81c:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e820:	b	1e888 <__assert_fail@plt+0xd014>
   1e824:	ldr	r0, [fp, #8]
   1e828:	sub	r0, r0, #1
   1e82c:	movw	r1, #32767	; 0x7fff
   1e830:	cmp	r1, r0
   1e834:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e838:	b	1e888 <__assert_fail@plt+0xd014>
   1e83c:	ldr	r0, [pc, #3760]	; 1f6f4 <__assert_fail@plt+0xde80>
   1e840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e844:	sdiv	r0, r0, r1
   1e848:	ldr	r1, [fp, #8]
   1e84c:	cmp	r0, r1
   1e850:	blt	1e870 <__assert_fail@plt+0xcffc>
   1e854:	b	1e888 <__assert_fail@plt+0xd014>
   1e858:	ldr	r0, [fp, #8]
   1e85c:	movw	r1, #32767	; 0x7fff
   1e860:	sdiv	r0, r1, r0
   1e864:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e868:	cmp	r0, r1
   1e86c:	bge	1e888 <__assert_fail@plt+0xd014>
   1e870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e874:	ldr	r1, [fp, #8]
   1e878:	mul	r0, r0, r1
   1e87c:	sxth	r0, r0
   1e880:	str	r0, [fp, #-28]	; 0xffffffe4
   1e884:	b	1f6bc <__assert_fail@plt+0xde48>
   1e888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e88c:	ldr	r1, [fp, #8]
   1e890:	mul	r0, r0, r1
   1e894:	sxth	r0, r0
   1e898:	str	r0, [fp, #-28]	; 0xffffffe4
   1e89c:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1e8a0:	ldr	r0, [fp, #8]
   1e8a4:	cmp	r0, #0
   1e8a8:	bge	1e9b8 <__assert_fail@plt+0xd144>
   1e8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8b0:	cmp	r0, #0
   1e8b4:	bge	1e940 <__assert_fail@plt+0xd0cc>
   1e8b8:	b	1e8bc <__assert_fail@plt+0xd048>
   1e8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8c0:	ldr	r1, [fp, #8]
   1e8c4:	movw	r2, #65535	; 0xffff
   1e8c8:	sdiv	r1, r2, r1
   1e8cc:	cmp	r0, r1
   1e8d0:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1e8d4:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1e8d8:	b	1e8dc <__assert_fail@plt+0xd068>
   1e8dc:	ldr	r0, [pc, #3592]	; 1f6ec <__assert_fail@plt+0xde78>
   1e8e0:	ldr	r1, [fp, #8]
   1e8e4:	cmp	r1, r0
   1e8e8:	blt	1e900 <__assert_fail@plt+0xd08c>
   1e8ec:	b	1e90c <__assert_fail@plt+0xd098>
   1e8f0:	ldr	r0, [fp, #8]
   1e8f4:	movw	r1, #0
   1e8f8:	cmp	r1, r0
   1e8fc:	bge	1e90c <__assert_fail@plt+0xd098>
   1e900:	movw	r0, #0
   1e904:	str	r0, [sp, #152]	; 0x98
   1e908:	b	1e924 <__assert_fail@plt+0xd0b0>
   1e90c:	ldr	r0, [fp, #8]
   1e910:	movw	r1, #0
   1e914:	sub	r0, r1, r0
   1e918:	movw	r1, #65535	; 0xffff
   1e91c:	sdiv	r0, r1, r0
   1e920:	str	r0, [sp, #152]	; 0x98
   1e924:	ldr	r0, [sp, #152]	; 0x98
   1e928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e92c:	mvn	r2, #0
   1e930:	sub	r1, r2, r1
   1e934:	cmp	r0, r1
   1e938:	ble	1ea54 <__assert_fail@plt+0xd1e0>
   1e93c:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1e940:	b	1e944 <__assert_fail@plt+0xd0d0>
   1e944:	b	1e99c <__assert_fail@plt+0xd128>
   1e948:	b	1e99c <__assert_fail@plt+0xd128>
   1e94c:	ldr	r0, [fp, #8]
   1e950:	cmn	r0, #1
   1e954:	bne	1e99c <__assert_fail@plt+0xd128>
   1e958:	b	1e95c <__assert_fail@plt+0xd0e8>
   1e95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e960:	add	r0, r0, #0
   1e964:	movw	r1, #0
   1e968:	cmp	r1, r0
   1e96c:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1e970:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1e974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e978:	movw	r1, #0
   1e97c:	cmp	r1, r0
   1e980:	bge	1ea6c <__assert_fail@plt+0xd1f8>
   1e984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e988:	sub	r0, r0, #1
   1e98c:	mvn	r1, #0
   1e990:	cmp	r1, r0
   1e994:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1e998:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1e99c:	ldr	r0, [fp, #8]
   1e9a0:	movw	r1, #0
   1e9a4:	sdiv	r0, r1, r0
   1e9a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9ac:	cmp	r0, r1
   1e9b0:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1e9b4:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1e9b8:	ldr	r0, [fp, #8]
   1e9bc:	cmp	r0, #0
   1e9c0:	bne	1e9c8 <__assert_fail@plt+0xd154>
   1e9c4:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1e9c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9cc:	cmp	r0, #0
   1e9d0:	bge	1ea3c <__assert_fail@plt+0xd1c8>
   1e9d4:	b	1e9d8 <__assert_fail@plt+0xd164>
   1e9d8:	b	1ea20 <__assert_fail@plt+0xd1ac>
   1e9dc:	b	1ea20 <__assert_fail@plt+0xd1ac>
   1e9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9e4:	cmn	r0, #1
   1e9e8:	bne	1ea20 <__assert_fail@plt+0xd1ac>
   1e9ec:	b	1e9f0 <__assert_fail@plt+0xd17c>
   1e9f0:	ldr	r0, [fp, #8]
   1e9f4:	add	r0, r0, #0
   1e9f8:	movw	r1, #0
   1e9fc:	cmp	r1, r0
   1ea00:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1ea04:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1ea08:	ldr	r0, [fp, #8]
   1ea0c:	sub	r0, r0, #1
   1ea10:	mvn	r1, #0
   1ea14:	cmp	r1, r0
   1ea18:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1ea1c:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1ea20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea24:	movw	r1, #0
   1ea28:	sdiv	r0, r1, r0
   1ea2c:	ldr	r1, [fp, #8]
   1ea30:	cmp	r0, r1
   1ea34:	blt	1ea54 <__assert_fail@plt+0xd1e0>
   1ea38:	b	1ea6c <__assert_fail@plt+0xd1f8>
   1ea3c:	ldr	r0, [fp, #8]
   1ea40:	movw	r1, #65535	; 0xffff
   1ea44:	sdiv	r0, r1, r0
   1ea48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea4c:	cmp	r0, r1
   1ea50:	bge	1ea6c <__assert_fail@plt+0xd1f8>
   1ea54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea58:	ldr	r1, [fp, #8]
   1ea5c:	mul	r0, r0, r1
   1ea60:	uxth	r0, r0
   1ea64:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea68:	b	1f6bc <__assert_fail@plt+0xde48>
   1ea6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea70:	ldr	r1, [fp, #8]
   1ea74:	mul	r0, r0, r1
   1ea78:	uxth	r0, r0
   1ea7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea80:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1ea84:	b	1ea88 <__assert_fail@plt+0xd214>
   1ea88:	b	1ea8c <__assert_fail@plt+0xd218>
   1ea8c:	ldr	r0, [fp, #8]
   1ea90:	cmp	r0, #0
   1ea94:	bge	1eb98 <__assert_fail@plt+0xd324>
   1ea98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea9c:	cmp	r0, #0
   1eaa0:	bge	1eb2c <__assert_fail@plt+0xd2b8>
   1eaa4:	b	1eaa8 <__assert_fail@plt+0xd234>
   1eaa8:	ldr	r0, [pc, #3128]	; 1f6e8 <__assert_fail@plt+0xde74>
   1eaac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eab0:	ldr	r2, [fp, #8]
   1eab4:	sdiv	r0, r0, r2
   1eab8:	cmp	r1, r0
   1eabc:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1eac0:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1eac4:	b	1eac8 <__assert_fail@plt+0xd254>
   1eac8:	ldr	r0, [pc, #3100]	; 1f6ec <__assert_fail@plt+0xde78>
   1eacc:	ldr	r1, [fp, #8]
   1ead0:	cmp	r1, r0
   1ead4:	blt	1eaec <__assert_fail@plt+0xd278>
   1ead8:	b	1eaf8 <__assert_fail@plt+0xd284>
   1eadc:	ldr	r0, [fp, #8]
   1eae0:	movw	r1, #0
   1eae4:	cmp	r1, r0
   1eae8:	bge	1eaf8 <__assert_fail@plt+0xd284>
   1eaec:	movw	r0, #0
   1eaf0:	str	r0, [sp, #148]	; 0x94
   1eaf4:	b	1eb10 <__assert_fail@plt+0xd29c>
   1eaf8:	ldr	r0, [pc, #3048]	; 1f6e8 <__assert_fail@plt+0xde74>
   1eafc:	ldr	r1, [fp, #8]
   1eb00:	movw	r2, #0
   1eb04:	sub	r1, r2, r1
   1eb08:	sdiv	r0, r0, r1
   1eb0c:	str	r0, [sp, #148]	; 0x94
   1eb10:	ldr	r0, [sp, #148]	; 0x94
   1eb14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb18:	mvn	r2, #0
   1eb1c:	sub	r1, r2, r1
   1eb20:	cmp	r0, r1
   1eb24:	ble	1ec28 <__assert_fail@plt+0xd3b4>
   1eb28:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1eb2c:	ldr	r0, [fp, #8]
   1eb30:	cmn	r0, #1
   1eb34:	bne	1eb7c <__assert_fail@plt+0xd308>
   1eb38:	b	1eb3c <__assert_fail@plt+0xd2c8>
   1eb3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb40:	add	r0, r0, #-2147483648	; 0x80000000
   1eb44:	movw	r1, #0
   1eb48:	cmp	r1, r0
   1eb4c:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1eb50:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1eb54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb58:	movw	r1, #0
   1eb5c:	cmp	r1, r0
   1eb60:	bge	1ec3c <__assert_fail@plt+0xd3c8>
   1eb64:	ldr	r0, [pc, #2940]	; 1f6e8 <__assert_fail@plt+0xde74>
   1eb68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb6c:	sub	r1, r1, #1
   1eb70:	cmp	r0, r1
   1eb74:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1eb78:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1eb7c:	ldr	r0, [pc, #2924]	; 1f6f0 <__assert_fail@plt+0xde7c>
   1eb80:	ldr	r1, [fp, #8]
   1eb84:	sdiv	r0, r0, r1
   1eb88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb8c:	cmp	r0, r1
   1eb90:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1eb94:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1eb98:	ldr	r0, [fp, #8]
   1eb9c:	cmp	r0, #0
   1eba0:	bne	1eba8 <__assert_fail@plt+0xd334>
   1eba4:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1eba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebac:	cmp	r0, #0
   1ebb0:	bge	1ec10 <__assert_fail@plt+0xd39c>
   1ebb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebb8:	cmn	r0, #1
   1ebbc:	bne	1ebf4 <__assert_fail@plt+0xd380>
   1ebc0:	b	1ebc4 <__assert_fail@plt+0xd350>
   1ebc4:	ldr	r0, [fp, #8]
   1ebc8:	add	r0, r0, #-2147483648	; 0x80000000
   1ebcc:	movw	r1, #0
   1ebd0:	cmp	r1, r0
   1ebd4:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1ebd8:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1ebdc:	ldr	r0, [pc, #2820]	; 1f6e8 <__assert_fail@plt+0xde74>
   1ebe0:	ldr	r1, [fp, #8]
   1ebe4:	sub	r1, r1, #1
   1ebe8:	cmp	r0, r1
   1ebec:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1ebf0:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1ebf4:	ldr	r0, [pc, #2804]	; 1f6f0 <__assert_fail@plt+0xde7c>
   1ebf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebfc:	sdiv	r0, r0, r1
   1ec00:	ldr	r1, [fp, #8]
   1ec04:	cmp	r0, r1
   1ec08:	blt	1ec28 <__assert_fail@plt+0xd3b4>
   1ec0c:	b	1ec3c <__assert_fail@plt+0xd3c8>
   1ec10:	ldr	r0, [pc, #2768]	; 1f6e8 <__assert_fail@plt+0xde74>
   1ec14:	ldr	r1, [fp, #8]
   1ec18:	sdiv	r0, r0, r1
   1ec1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec20:	cmp	r0, r1
   1ec24:	bge	1ec3c <__assert_fail@plt+0xd3c8>
   1ec28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec2c:	ldr	r1, [fp, #8]
   1ec30:	mul	r0, r0, r1
   1ec34:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec38:	b	1f6bc <__assert_fail@plt+0xde48>
   1ec3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec40:	ldr	r1, [fp, #8]
   1ec44:	mul	r0, r0, r1
   1ec48:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec4c:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1ec50:	ldr	r0, [fp, #8]
   1ec54:	cmp	r0, #0
   1ec58:	bge	1ed68 <__assert_fail@plt+0xd4f4>
   1ec5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec60:	cmp	r0, #0
   1ec64:	bge	1ecf0 <__assert_fail@plt+0xd47c>
   1ec68:	b	1ec88 <__assert_fail@plt+0xd414>
   1ec6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec70:	ldr	r1, [fp, #8]
   1ec74:	mvn	r2, #0
   1ec78:	udiv	r1, r2, r1
   1ec7c:	cmp	r0, r1
   1ec80:	bcc	1ee04 <__assert_fail@plt+0xd590>
   1ec84:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1ec88:	b	1ec8c <__assert_fail@plt+0xd418>
   1ec8c:	ldr	r0, [pc, #2648]	; 1f6ec <__assert_fail@plt+0xde78>
   1ec90:	ldr	r1, [fp, #8]
   1ec94:	cmp	r1, r0
   1ec98:	blt	1ecb0 <__assert_fail@plt+0xd43c>
   1ec9c:	b	1ecbc <__assert_fail@plt+0xd448>
   1eca0:	ldr	r0, [fp, #8]
   1eca4:	movw	r1, #0
   1eca8:	cmp	r1, r0
   1ecac:	bge	1ecbc <__assert_fail@plt+0xd448>
   1ecb0:	movw	r0, #1
   1ecb4:	str	r0, [sp, #144]	; 0x90
   1ecb8:	b	1ecd4 <__assert_fail@plt+0xd460>
   1ecbc:	ldr	r0, [fp, #8]
   1ecc0:	movw	r1, #0
   1ecc4:	sub	r0, r1, r0
   1ecc8:	mvn	r1, #0
   1eccc:	udiv	r0, r1, r0
   1ecd0:	str	r0, [sp, #144]	; 0x90
   1ecd4:	ldr	r0, [sp, #144]	; 0x90
   1ecd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecdc:	mvn	r2, #0
   1ece0:	sub	r1, r2, r1
   1ece4:	cmp	r0, r1
   1ece8:	bls	1ee04 <__assert_fail@plt+0xd590>
   1ecec:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1ecf0:	b	1ecf4 <__assert_fail@plt+0xd480>
   1ecf4:	b	1ed4c <__assert_fail@plt+0xd4d8>
   1ecf8:	b	1ed4c <__assert_fail@plt+0xd4d8>
   1ecfc:	ldr	r0, [fp, #8]
   1ed00:	cmn	r0, #1
   1ed04:	bne	1ed4c <__assert_fail@plt+0xd4d8>
   1ed08:	b	1ed0c <__assert_fail@plt+0xd498>
   1ed0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed10:	add	r0, r0, #0
   1ed14:	movw	r1, #0
   1ed18:	cmp	r1, r0
   1ed1c:	blt	1ee04 <__assert_fail@plt+0xd590>
   1ed20:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1ed24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed28:	movw	r1, #0
   1ed2c:	cmp	r1, r0
   1ed30:	bge	1ee18 <__assert_fail@plt+0xd5a4>
   1ed34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed38:	sub	r0, r0, #1
   1ed3c:	mvn	r1, #0
   1ed40:	cmp	r1, r0
   1ed44:	blt	1ee04 <__assert_fail@plt+0xd590>
   1ed48:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1ed4c:	ldr	r0, [fp, #8]
   1ed50:	movw	r1, #0
   1ed54:	sdiv	r0, r1, r0
   1ed58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed5c:	cmp	r0, r1
   1ed60:	blt	1ee04 <__assert_fail@plt+0xd590>
   1ed64:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1ed68:	ldr	r0, [fp, #8]
   1ed6c:	cmp	r0, #0
   1ed70:	bne	1ed78 <__assert_fail@plt+0xd504>
   1ed74:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1ed78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed7c:	cmp	r0, #0
   1ed80:	bge	1edec <__assert_fail@plt+0xd578>
   1ed84:	b	1ed88 <__assert_fail@plt+0xd514>
   1ed88:	b	1edd0 <__assert_fail@plt+0xd55c>
   1ed8c:	b	1edd0 <__assert_fail@plt+0xd55c>
   1ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed94:	cmn	r0, #1
   1ed98:	bne	1edd0 <__assert_fail@plt+0xd55c>
   1ed9c:	b	1eda0 <__assert_fail@plt+0xd52c>
   1eda0:	ldr	r0, [fp, #8]
   1eda4:	add	r0, r0, #0
   1eda8:	movw	r1, #0
   1edac:	cmp	r1, r0
   1edb0:	blt	1ee04 <__assert_fail@plt+0xd590>
   1edb4:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1edb8:	ldr	r0, [fp, #8]
   1edbc:	sub	r0, r0, #1
   1edc0:	mvn	r1, #0
   1edc4:	cmp	r1, r0
   1edc8:	blt	1ee04 <__assert_fail@plt+0xd590>
   1edcc:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1edd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edd4:	movw	r1, #0
   1edd8:	sdiv	r0, r1, r0
   1eddc:	ldr	r1, [fp, #8]
   1ede0:	cmp	r0, r1
   1ede4:	blt	1ee04 <__assert_fail@plt+0xd590>
   1ede8:	b	1ee18 <__assert_fail@plt+0xd5a4>
   1edec:	ldr	r0, [fp, #8]
   1edf0:	mvn	r1, #0
   1edf4:	udiv	r0, r1, r0
   1edf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edfc:	cmp	r0, r1
   1ee00:	bcs	1ee18 <__assert_fail@plt+0xd5a4>
   1ee04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee08:	ldr	r1, [fp, #8]
   1ee0c:	mul	r0, r0, r1
   1ee10:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee14:	b	1f6bc <__assert_fail@plt+0xde48>
   1ee18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee1c:	ldr	r1, [fp, #8]
   1ee20:	mul	r0, r0, r1
   1ee24:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee28:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1ee2c:	b	1ee30 <__assert_fail@plt+0xd5bc>
   1ee30:	b	1ee34 <__assert_fail@plt+0xd5c0>
   1ee34:	ldr	r0, [fp, #8]
   1ee38:	cmp	r0, #0
   1ee3c:	bge	1ef40 <__assert_fail@plt+0xd6cc>
   1ee40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee44:	cmp	r0, #0
   1ee48:	bge	1eed4 <__assert_fail@plt+0xd660>
   1ee4c:	b	1ee50 <__assert_fail@plt+0xd5dc>
   1ee50:	ldr	r0, [pc, #2192]	; 1f6e8 <__assert_fail@plt+0xde74>
   1ee54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee58:	ldr	r2, [fp, #8]
   1ee5c:	sdiv	r0, r0, r2
   1ee60:	cmp	r1, r0
   1ee64:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1ee68:	b	1efe4 <__assert_fail@plt+0xd770>
   1ee6c:	b	1ee70 <__assert_fail@plt+0xd5fc>
   1ee70:	ldr	r0, [pc, #2164]	; 1f6ec <__assert_fail@plt+0xde78>
   1ee74:	ldr	r1, [fp, #8]
   1ee78:	cmp	r1, r0
   1ee7c:	blt	1ee94 <__assert_fail@plt+0xd620>
   1ee80:	b	1eea0 <__assert_fail@plt+0xd62c>
   1ee84:	ldr	r0, [fp, #8]
   1ee88:	movw	r1, #0
   1ee8c:	cmp	r1, r0
   1ee90:	bge	1eea0 <__assert_fail@plt+0xd62c>
   1ee94:	movw	r0, #0
   1ee98:	str	r0, [sp, #140]	; 0x8c
   1ee9c:	b	1eeb8 <__assert_fail@plt+0xd644>
   1eea0:	ldr	r0, [pc, #2112]	; 1f6e8 <__assert_fail@plt+0xde74>
   1eea4:	ldr	r1, [fp, #8]
   1eea8:	movw	r2, #0
   1eeac:	sub	r1, r2, r1
   1eeb0:	sdiv	r0, r0, r1
   1eeb4:	str	r0, [sp, #140]	; 0x8c
   1eeb8:	ldr	r0, [sp, #140]	; 0x8c
   1eebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eec0:	mvn	r2, #0
   1eec4:	sub	r1, r2, r1
   1eec8:	cmp	r0, r1
   1eecc:	ble	1efd0 <__assert_fail@plt+0xd75c>
   1eed0:	b	1efe4 <__assert_fail@plt+0xd770>
   1eed4:	ldr	r0, [fp, #8]
   1eed8:	cmn	r0, #1
   1eedc:	bne	1ef24 <__assert_fail@plt+0xd6b0>
   1eee0:	b	1eee4 <__assert_fail@plt+0xd670>
   1eee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eee8:	add	r0, r0, #-2147483648	; 0x80000000
   1eeec:	movw	r1, #0
   1eef0:	cmp	r1, r0
   1eef4:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1eef8:	b	1efe4 <__assert_fail@plt+0xd770>
   1eefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef00:	movw	r1, #0
   1ef04:	cmp	r1, r0
   1ef08:	bge	1efe4 <__assert_fail@plt+0xd770>
   1ef0c:	ldr	r0, [pc, #2004]	; 1f6e8 <__assert_fail@plt+0xde74>
   1ef10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef14:	sub	r1, r1, #1
   1ef18:	cmp	r0, r1
   1ef1c:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1ef20:	b	1efe4 <__assert_fail@plt+0xd770>
   1ef24:	ldr	r0, [pc, #1988]	; 1f6f0 <__assert_fail@plt+0xde7c>
   1ef28:	ldr	r1, [fp, #8]
   1ef2c:	sdiv	r0, r0, r1
   1ef30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef34:	cmp	r0, r1
   1ef38:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1ef3c:	b	1efe4 <__assert_fail@plt+0xd770>
   1ef40:	ldr	r0, [fp, #8]
   1ef44:	cmp	r0, #0
   1ef48:	bne	1ef50 <__assert_fail@plt+0xd6dc>
   1ef4c:	b	1efe4 <__assert_fail@plt+0xd770>
   1ef50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef54:	cmp	r0, #0
   1ef58:	bge	1efb8 <__assert_fail@plt+0xd744>
   1ef5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef60:	cmn	r0, #1
   1ef64:	bne	1ef9c <__assert_fail@plt+0xd728>
   1ef68:	b	1ef6c <__assert_fail@plt+0xd6f8>
   1ef6c:	ldr	r0, [fp, #8]
   1ef70:	add	r0, r0, #-2147483648	; 0x80000000
   1ef74:	movw	r1, #0
   1ef78:	cmp	r1, r0
   1ef7c:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1ef80:	b	1efe4 <__assert_fail@plt+0xd770>
   1ef84:	ldr	r0, [pc, #1884]	; 1f6e8 <__assert_fail@plt+0xde74>
   1ef88:	ldr	r1, [fp, #8]
   1ef8c:	sub	r1, r1, #1
   1ef90:	cmp	r0, r1
   1ef94:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1ef98:	b	1efe4 <__assert_fail@plt+0xd770>
   1ef9c:	ldr	r0, [pc, #1868]	; 1f6f0 <__assert_fail@plt+0xde7c>
   1efa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efa4:	sdiv	r0, r0, r1
   1efa8:	ldr	r1, [fp, #8]
   1efac:	cmp	r0, r1
   1efb0:	blt	1efd0 <__assert_fail@plt+0xd75c>
   1efb4:	b	1efe4 <__assert_fail@plt+0xd770>
   1efb8:	ldr	r0, [pc, #1832]	; 1f6e8 <__assert_fail@plt+0xde74>
   1efbc:	ldr	r1, [fp, #8]
   1efc0:	sdiv	r0, r0, r1
   1efc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efc8:	cmp	r0, r1
   1efcc:	bge	1efe4 <__assert_fail@plt+0xd770>
   1efd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efd4:	ldr	r1, [fp, #8]
   1efd8:	mul	r0, r0, r1
   1efdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1efe0:	b	1f6bc <__assert_fail@plt+0xde48>
   1efe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efe8:	ldr	r1, [fp, #8]
   1efec:	mul	r0, r0, r1
   1eff0:	str	r0, [fp, #-28]	; 0xffffffe4
   1eff4:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1eff8:	ldr	r0, [fp, #8]
   1effc:	cmp	r0, #0
   1f000:	bge	1f110 <__assert_fail@plt+0xd89c>
   1f004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f008:	cmp	r0, #0
   1f00c:	bge	1f098 <__assert_fail@plt+0xd824>
   1f010:	b	1f030 <__assert_fail@plt+0xd7bc>
   1f014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f018:	ldr	r1, [fp, #8]
   1f01c:	mvn	r2, #0
   1f020:	udiv	r1, r2, r1
   1f024:	cmp	r0, r1
   1f028:	bcc	1f1ac <__assert_fail@plt+0xd938>
   1f02c:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f030:	b	1f034 <__assert_fail@plt+0xd7c0>
   1f034:	ldr	r0, [pc, #1712]	; 1f6ec <__assert_fail@plt+0xde78>
   1f038:	ldr	r1, [fp, #8]
   1f03c:	cmp	r1, r0
   1f040:	blt	1f058 <__assert_fail@plt+0xd7e4>
   1f044:	b	1f064 <__assert_fail@plt+0xd7f0>
   1f048:	ldr	r0, [fp, #8]
   1f04c:	movw	r1, #0
   1f050:	cmp	r1, r0
   1f054:	bge	1f064 <__assert_fail@plt+0xd7f0>
   1f058:	movw	r0, #1
   1f05c:	str	r0, [sp, #136]	; 0x88
   1f060:	b	1f07c <__assert_fail@plt+0xd808>
   1f064:	ldr	r0, [fp, #8]
   1f068:	movw	r1, #0
   1f06c:	sub	r0, r1, r0
   1f070:	mvn	r1, #0
   1f074:	udiv	r0, r1, r0
   1f078:	str	r0, [sp, #136]	; 0x88
   1f07c:	ldr	r0, [sp, #136]	; 0x88
   1f080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f084:	mvn	r2, #0
   1f088:	sub	r1, r2, r1
   1f08c:	cmp	r0, r1
   1f090:	bls	1f1ac <__assert_fail@plt+0xd938>
   1f094:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f098:	b	1f09c <__assert_fail@plt+0xd828>
   1f09c:	b	1f0f4 <__assert_fail@plt+0xd880>
   1f0a0:	b	1f0f4 <__assert_fail@plt+0xd880>
   1f0a4:	ldr	r0, [fp, #8]
   1f0a8:	cmn	r0, #1
   1f0ac:	bne	1f0f4 <__assert_fail@plt+0xd880>
   1f0b0:	b	1f0b4 <__assert_fail@plt+0xd840>
   1f0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0b8:	add	r0, r0, #0
   1f0bc:	movw	r1, #0
   1f0c0:	cmp	r1, r0
   1f0c4:	blt	1f1ac <__assert_fail@plt+0xd938>
   1f0c8:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0d0:	movw	r1, #0
   1f0d4:	cmp	r1, r0
   1f0d8:	bge	1f1c0 <__assert_fail@plt+0xd94c>
   1f0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0e0:	sub	r0, r0, #1
   1f0e4:	mvn	r1, #0
   1f0e8:	cmp	r1, r0
   1f0ec:	blt	1f1ac <__assert_fail@plt+0xd938>
   1f0f0:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f0f4:	ldr	r0, [fp, #8]
   1f0f8:	movw	r1, #0
   1f0fc:	sdiv	r0, r1, r0
   1f100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f104:	cmp	r0, r1
   1f108:	blt	1f1ac <__assert_fail@plt+0xd938>
   1f10c:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f110:	ldr	r0, [fp, #8]
   1f114:	cmp	r0, #0
   1f118:	bne	1f120 <__assert_fail@plt+0xd8ac>
   1f11c:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f124:	cmp	r0, #0
   1f128:	bge	1f194 <__assert_fail@plt+0xd920>
   1f12c:	b	1f130 <__assert_fail@plt+0xd8bc>
   1f130:	b	1f178 <__assert_fail@plt+0xd904>
   1f134:	b	1f178 <__assert_fail@plt+0xd904>
   1f138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f13c:	cmn	r0, #1
   1f140:	bne	1f178 <__assert_fail@plt+0xd904>
   1f144:	b	1f148 <__assert_fail@plt+0xd8d4>
   1f148:	ldr	r0, [fp, #8]
   1f14c:	add	r0, r0, #0
   1f150:	movw	r1, #0
   1f154:	cmp	r1, r0
   1f158:	blt	1f1ac <__assert_fail@plt+0xd938>
   1f15c:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f160:	ldr	r0, [fp, #8]
   1f164:	sub	r0, r0, #1
   1f168:	mvn	r1, #0
   1f16c:	cmp	r1, r0
   1f170:	blt	1f1ac <__assert_fail@plt+0xd938>
   1f174:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f17c:	movw	r1, #0
   1f180:	sdiv	r0, r1, r0
   1f184:	ldr	r1, [fp, #8]
   1f188:	cmp	r0, r1
   1f18c:	blt	1f1ac <__assert_fail@plt+0xd938>
   1f190:	b	1f1c0 <__assert_fail@plt+0xd94c>
   1f194:	ldr	r0, [fp, #8]
   1f198:	mvn	r1, #0
   1f19c:	udiv	r0, r1, r0
   1f1a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1a4:	cmp	r0, r1
   1f1a8:	bcs	1f1c0 <__assert_fail@plt+0xd94c>
   1f1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1b0:	ldr	r1, [fp, #8]
   1f1b4:	mul	r0, r0, r1
   1f1b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1f1bc:	b	1f6bc <__assert_fail@plt+0xde48>
   1f1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1c4:	ldr	r1, [fp, #8]
   1f1c8:	mul	r0, r0, r1
   1f1cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1f1d0:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1f1d4:	b	1f1d8 <__assert_fail@plt+0xd964>
   1f1d8:	ldr	r0, [fp, #8]
   1f1dc:	cmp	r0, #0
   1f1e0:	bge	1f368 <__assert_fail@plt+0xdaf4>
   1f1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1e8:	cmp	r0, #0
   1f1ec:	bge	1f2d4 <__assert_fail@plt+0xda60>
   1f1f0:	b	1f1f4 <__assert_fail@plt+0xd980>
   1f1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1f8:	ldr	r1, [fp, #8]
   1f1fc:	asr	r3, r1, #31
   1f200:	mvn	r2, #0
   1f204:	mvn	ip, #-2147483648	; 0x80000000
   1f208:	str	r0, [sp, #132]	; 0x84
   1f20c:	mov	r0, r2
   1f210:	str	r1, [sp, #128]	; 0x80
   1f214:	mov	r1, ip
   1f218:	ldr	r2, [sp, #128]	; 0x80
   1f21c:	bl	230ac <__assert_fail@plt+0x11838>
   1f220:	ldr	r2, [sp, #132]	; 0x84
   1f224:	subs	r0, r2, r0
   1f228:	rscs	r1, r1, r2, asr #31
   1f22c:	str	r0, [sp, #124]	; 0x7c
   1f230:	str	r1, [sp, #120]	; 0x78
   1f234:	blt	1f448 <__assert_fail@plt+0xdbd4>
   1f238:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f23c:	b	1f240 <__assert_fail@plt+0xd9cc>
   1f240:	ldr	r0, [pc, #1188]	; 1f6ec <__assert_fail@plt+0xde78>
   1f244:	ldr	r1, [fp, #8]
   1f248:	cmp	r1, r0
   1f24c:	blt	1f264 <__assert_fail@plt+0xd9f0>
   1f250:	b	1f278 <__assert_fail@plt+0xda04>
   1f254:	ldr	r0, [fp, #8]
   1f258:	movw	r1, #0
   1f25c:	cmp	r1, r0
   1f260:	bge	1f278 <__assert_fail@plt+0xda04>
   1f264:	mov	r0, #0
   1f268:	mvn	r1, #0
   1f26c:	str	r1, [sp, #116]	; 0x74
   1f270:	str	r0, [sp, #112]	; 0x70
   1f274:	b	1f2ac <__assert_fail@plt+0xda38>
   1f278:	ldr	r0, [fp, #8]
   1f27c:	rsb	r0, r0, #0
   1f280:	asr	r3, r0, #31
   1f284:	mvn	r1, #0
   1f288:	mvn	r2, #-2147483648	; 0x80000000
   1f28c:	str	r0, [sp, #108]	; 0x6c
   1f290:	mov	r0, r1
   1f294:	mov	r1, r2
   1f298:	ldr	r2, [sp, #108]	; 0x6c
   1f29c:	bl	230ac <__assert_fail@plt+0x11838>
   1f2a0:	str	r0, [sp, #116]	; 0x74
   1f2a4:	str	r1, [sp, #112]	; 0x70
   1f2a8:	b	1f2ac <__assert_fail@plt+0xda38>
   1f2ac:	ldr	r0, [sp, #112]	; 0x70
   1f2b0:	ldr	r1, [sp, #116]	; 0x74
   1f2b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f2b8:	mvn	r2, r2
   1f2bc:	subs	r1, r2, r1
   1f2c0:	rscs	r0, r0, r2, asr #31
   1f2c4:	str	r1, [sp, #104]	; 0x68
   1f2c8:	str	r0, [sp, #100]	; 0x64
   1f2cc:	bge	1f448 <__assert_fail@plt+0xdbd4>
   1f2d0:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f2d4:	ldr	r0, [fp, #8]
   1f2d8:	cmn	r0, #1
   1f2dc:	bne	1f328 <__assert_fail@plt+0xdab4>
   1f2e0:	b	1f2e4 <__assert_fail@plt+0xda70>
   1f2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2e8:	mov	r1, #-2147483648	; 0x80000000
   1f2ec:	add	r1, r1, r0, asr #31
   1f2f0:	rsbs	r0, r0, #0
   1f2f4:	rscs	r1, r1, #0
   1f2f8:	str	r0, [sp, #96]	; 0x60
   1f2fc:	str	r1, [sp, #92]	; 0x5c
   1f300:	blt	1f448 <__assert_fail@plt+0xdbd4>
   1f304:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f30c:	movw	r1, #0
   1f310:	cmp	r1, r0
   1f314:	bge	1f45c <__assert_fail@plt+0xdbe8>
   1f318:	mov	r0, #0
   1f31c:	cmp	r0, #0
   1f320:	bne	1f448 <__assert_fail@plt+0xdbd4>
   1f324:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f328:	ldr	r0, [fp, #8]
   1f32c:	asr	r3, r0, #31
   1f330:	mov	r1, #0
   1f334:	mov	r2, #-2147483648	; 0x80000000
   1f338:	str	r0, [sp, #88]	; 0x58
   1f33c:	mov	r0, r1
   1f340:	mov	r1, r2
   1f344:	ldr	r2, [sp, #88]	; 0x58
   1f348:	bl	230ac <__assert_fail@plt+0x11838>
   1f34c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f350:	subs	r0, r0, r2
   1f354:	sbcs	r1, r1, r2, asr #31
   1f358:	str	r0, [sp, #84]	; 0x54
   1f35c:	str	r1, [sp, #80]	; 0x50
   1f360:	blt	1f448 <__assert_fail@plt+0xdbd4>
   1f364:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f368:	ldr	r0, [fp, #8]
   1f36c:	cmp	r0, #0
   1f370:	bne	1f378 <__assert_fail@plt+0xdb04>
   1f374:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f37c:	cmp	r0, #0
   1f380:	bge	1f408 <__assert_fail@plt+0xdb94>
   1f384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f388:	cmn	r0, #1
   1f38c:	bne	1f3c8 <__assert_fail@plt+0xdb54>
   1f390:	b	1f394 <__assert_fail@plt+0xdb20>
   1f394:	ldr	r0, [fp, #8]
   1f398:	mov	r1, #-2147483648	; 0x80000000
   1f39c:	add	r1, r1, r0, asr #31
   1f3a0:	rsbs	r0, r0, #0
   1f3a4:	rscs	r1, r1, #0
   1f3a8:	str	r0, [sp, #76]	; 0x4c
   1f3ac:	str	r1, [sp, #72]	; 0x48
   1f3b0:	blt	1f448 <__assert_fail@plt+0xdbd4>
   1f3b4:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f3b8:	mov	r0, #0
   1f3bc:	cmp	r0, #0
   1f3c0:	bne	1f448 <__assert_fail@plt+0xdbd4>
   1f3c4:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3cc:	asr	r3, r0, #31
   1f3d0:	mov	r1, #0
   1f3d4:	mov	r2, #-2147483648	; 0x80000000
   1f3d8:	str	r0, [sp, #68]	; 0x44
   1f3dc:	mov	r0, r1
   1f3e0:	mov	r1, r2
   1f3e4:	ldr	r2, [sp, #68]	; 0x44
   1f3e8:	bl	230ac <__assert_fail@plt+0x11838>
   1f3ec:	ldr	r2, [fp, #8]
   1f3f0:	subs	r0, r0, r2
   1f3f4:	sbcs	r1, r1, r2, asr #31
   1f3f8:	str	r0, [sp, #64]	; 0x40
   1f3fc:	str	r1, [sp, #60]	; 0x3c
   1f400:	blt	1f448 <__assert_fail@plt+0xdbd4>
   1f404:	b	1f45c <__assert_fail@plt+0xdbe8>
   1f408:	ldr	r0, [fp, #8]
   1f40c:	asr	r3, r0, #31
   1f410:	mvn	r1, #0
   1f414:	mvn	r2, #-2147483648	; 0x80000000
   1f418:	str	r0, [sp, #56]	; 0x38
   1f41c:	mov	r0, r1
   1f420:	mov	r1, r2
   1f424:	ldr	r2, [sp, #56]	; 0x38
   1f428:	bl	230ac <__assert_fail@plt+0x11838>
   1f42c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f430:	subs	r0, r0, r2
   1f434:	sbcs	r1, r1, r2, asr #31
   1f438:	str	r0, [sp, #52]	; 0x34
   1f43c:	str	r1, [sp, #48]	; 0x30
   1f440:	bge	1f45c <__assert_fail@plt+0xdbe8>
   1f444:	b	1f448 <__assert_fail@plt+0xdbd4>
   1f448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f44c:	ldr	r1, [fp, #8]
   1f450:	mul	r0, r0, r1
   1f454:	str	r0, [fp, #-28]	; 0xffffffe4
   1f458:	b	1f6bc <__assert_fail@plt+0xde48>
   1f45c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f460:	ldr	r1, [fp, #8]
   1f464:	mul	r0, r0, r1
   1f468:	str	r0, [fp, #-28]	; 0xffffffe4
   1f46c:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1f470:	ldr	r0, [fp, #8]
   1f474:	cmp	r0, #0
   1f478:	bge	1f5d8 <__assert_fail@plt+0xdd64>
   1f47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f480:	cmp	r0, #0
   1f484:	bge	1f560 <__assert_fail@plt+0xdcec>
   1f488:	b	1f4d0 <__assert_fail@plt+0xdc5c>
   1f48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f490:	ldr	r1, [fp, #8]
   1f494:	asr	r3, r1, #31
   1f498:	mvn	r2, #0
   1f49c:	str	r0, [sp, #44]	; 0x2c
   1f4a0:	mov	r0, r2
   1f4a4:	str	r1, [sp, #40]	; 0x28
   1f4a8:	mov	r1, r2
   1f4ac:	ldr	r2, [sp, #40]	; 0x28
   1f4b0:	bl	23180 <__assert_fail@plt+0x1190c>
   1f4b4:	ldr	r2, [sp, #44]	; 0x2c
   1f4b8:	subs	r0, r2, r0
   1f4bc:	rscs	r1, r1, r2, asr #31
   1f4c0:	str	r0, [sp, #36]	; 0x24
   1f4c4:	str	r1, [sp, #32]
   1f4c8:	bcc	1f694 <__assert_fail@plt+0xde20>
   1f4cc:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f4d0:	b	1f4d4 <__assert_fail@plt+0xdc60>
   1f4d4:	ldr	r0, [pc, #528]	; 1f6ec <__assert_fail@plt+0xde78>
   1f4d8:	ldr	r1, [fp, #8]
   1f4dc:	cmp	r1, r0
   1f4e0:	blt	1f4f8 <__assert_fail@plt+0xdc84>
   1f4e4:	b	1f50c <__assert_fail@plt+0xdc98>
   1f4e8:	ldr	r0, [fp, #8]
   1f4ec:	movw	r1, #0
   1f4f0:	cmp	r1, r0
   1f4f4:	bge	1f50c <__assert_fail@plt+0xdc98>
   1f4f8:	mov	r0, #1
   1f4fc:	mvn	r1, #0
   1f500:	str	r1, [sp, #28]
   1f504:	str	r0, [sp, #24]
   1f508:	b	1f538 <__assert_fail@plt+0xdcc4>
   1f50c:	ldr	r0, [fp, #8]
   1f510:	rsb	r0, r0, #0
   1f514:	asr	r3, r0, #31
   1f518:	mvn	r1, #0
   1f51c:	str	r0, [sp, #20]
   1f520:	mov	r0, r1
   1f524:	ldr	r2, [sp, #20]
   1f528:	bl	23180 <__assert_fail@plt+0x1190c>
   1f52c:	str	r0, [sp, #28]
   1f530:	str	r1, [sp, #24]
   1f534:	b	1f538 <__assert_fail@plt+0xdcc4>
   1f538:	ldr	r0, [sp, #24]
   1f53c:	ldr	r1, [sp, #28]
   1f540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f544:	mvn	r2, r2
   1f548:	subs	r1, r2, r1
   1f54c:	rscs	r0, r0, r2, asr #31
   1f550:	str	r1, [sp, #16]
   1f554:	str	r0, [sp, #12]
   1f558:	bcs	1f694 <__assert_fail@plt+0xde20>
   1f55c:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f560:	b	1f564 <__assert_fail@plt+0xdcf0>
   1f564:	b	1f5bc <__assert_fail@plt+0xdd48>
   1f568:	b	1f5bc <__assert_fail@plt+0xdd48>
   1f56c:	ldr	r0, [fp, #8]
   1f570:	cmn	r0, #1
   1f574:	bne	1f5bc <__assert_fail@plt+0xdd48>
   1f578:	b	1f57c <__assert_fail@plt+0xdd08>
   1f57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f580:	add	r0, r0, #0
   1f584:	movw	r1, #0
   1f588:	cmp	r1, r0
   1f58c:	blt	1f694 <__assert_fail@plt+0xde20>
   1f590:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f598:	movw	r1, #0
   1f59c:	cmp	r1, r0
   1f5a0:	bge	1f6a8 <__assert_fail@plt+0xde34>
   1f5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5a8:	sub	r0, r0, #1
   1f5ac:	mvn	r1, #0
   1f5b0:	cmp	r1, r0
   1f5b4:	blt	1f694 <__assert_fail@plt+0xde20>
   1f5b8:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f5bc:	ldr	r0, [fp, #8]
   1f5c0:	movw	r1, #0
   1f5c4:	sdiv	r0, r1, r0
   1f5c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f5cc:	cmp	r0, r1
   1f5d0:	blt	1f694 <__assert_fail@plt+0xde20>
   1f5d4:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f5d8:	ldr	r0, [fp, #8]
   1f5dc:	cmp	r0, #0
   1f5e0:	bne	1f5e8 <__assert_fail@plt+0xdd74>
   1f5e4:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f5e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5ec:	cmp	r0, #0
   1f5f0:	bge	1f65c <__assert_fail@plt+0xdde8>
   1f5f4:	b	1f5f8 <__assert_fail@plt+0xdd84>
   1f5f8:	b	1f640 <__assert_fail@plt+0xddcc>
   1f5fc:	b	1f640 <__assert_fail@plt+0xddcc>
   1f600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f604:	cmn	r0, #1
   1f608:	bne	1f640 <__assert_fail@plt+0xddcc>
   1f60c:	b	1f610 <__assert_fail@plt+0xdd9c>
   1f610:	ldr	r0, [fp, #8]
   1f614:	add	r0, r0, #0
   1f618:	movw	r1, #0
   1f61c:	cmp	r1, r0
   1f620:	blt	1f694 <__assert_fail@plt+0xde20>
   1f624:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f628:	ldr	r0, [fp, #8]
   1f62c:	sub	r0, r0, #1
   1f630:	mvn	r1, #0
   1f634:	cmp	r1, r0
   1f638:	blt	1f694 <__assert_fail@plt+0xde20>
   1f63c:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f644:	movw	r1, #0
   1f648:	sdiv	r0, r1, r0
   1f64c:	ldr	r1, [fp, #8]
   1f650:	cmp	r0, r1
   1f654:	blt	1f694 <__assert_fail@plt+0xde20>
   1f658:	b	1f6a8 <__assert_fail@plt+0xde34>
   1f65c:	ldr	r0, [fp, #8]
   1f660:	asr	r3, r0, #31
   1f664:	mvn	r1, #0
   1f668:	str	r0, [sp, #8]
   1f66c:	mov	r0, r1
   1f670:	ldr	r2, [sp, #8]
   1f674:	bl	23180 <__assert_fail@plt+0x1190c>
   1f678:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f67c:	subs	r0, r0, r2
   1f680:	sbcs	r1, r1, r2, asr #31
   1f684:	str	r0, [sp, #4]
   1f688:	str	r1, [sp]
   1f68c:	bcs	1f6a8 <__assert_fail@plt+0xde34>
   1f690:	b	1f694 <__assert_fail@plt+0xde20>
   1f694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f698:	ldr	r1, [fp, #8]
   1f69c:	mul	r0, r0, r1
   1f6a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6a4:	b	1f6bc <__assert_fail@plt+0xde48>
   1f6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6ac:	ldr	r1, [fp, #8]
   1f6b0:	mul	r0, r0, r1
   1f6b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6b8:	b	1f6c0 <__assert_fail@plt+0xde4c>
   1f6bc:	bl	1f898 <__assert_fail@plt+0xe024>
   1f6c0:	ldr	r0, [fp, #-4]
   1f6c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f6c8:	bl	1cb54 <__assert_fail@plt+0xb2e0>
   1f6cc:	str	r0, [fp, #-4]
   1f6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6d4:	ldr	r1, [fp, #-8]
   1f6d8:	str	r0, [r1]
   1f6dc:	ldr	r0, [fp, #-4]
   1f6e0:	mov	sp, fp
   1f6e4:	pop	{fp, pc}
   1f6e8:	svcvc	0x00ffffff
   1f6ec:	andhi	r0, r0, r1
   1f6f0:	andhi	r0, r0, r0
   1f6f4:			; <UNDEFINED> instruction: 0xffff8000
   1f6f8:	push	{fp, lr}
   1f6fc:	mov	fp, sp
   1f700:	sub	sp, sp, #8
   1f704:	str	r0, [sp, #4]
   1f708:	ldr	r0, [sp, #4]
   1f70c:	movw	r1, #1
   1f710:	bl	1f71c <__assert_fail@plt+0xdea8>
   1f714:	mov	sp, fp
   1f718:	pop	{fp, pc}
   1f71c:	push	{fp, lr}
   1f720:	mov	fp, sp
   1f724:	sub	sp, sp, #8
   1f728:	str	r0, [sp, #4]
   1f72c:	str	r1, [sp]
   1f730:	ldr	r0, [sp, #4]
   1f734:	ldr	r1, [sp]
   1f738:	bl	1fa10 <__assert_fail@plt+0xe19c>
   1f73c:	bl	1cae0 <__assert_fail@plt+0xb26c>
   1f740:	mov	sp, fp
   1f744:	pop	{fp, pc}
   1f748:	push	{fp, lr}
   1f74c:	mov	fp, sp
   1f750:	sub	sp, sp, #8
   1f754:	str	r0, [sp, #4]
   1f758:	ldr	r0, [sp, #4]
   1f75c:	movw	r1, #1
   1f760:	bl	1f76c <__assert_fail@plt+0xdef8>
   1f764:	mov	sp, fp
   1f768:	pop	{fp, pc}
   1f76c:	push	{fp, lr}
   1f770:	mov	fp, sp
   1f774:	sub	sp, sp, #8
   1f778:	str	r0, [sp, #4]
   1f77c:	str	r1, [sp]
   1f780:	ldr	r0, [sp, #4]
   1f784:	ldr	r1, [sp]
   1f788:	bl	20bc8 <__assert_fail@plt+0xf354>
   1f78c:	bl	1cae0 <__assert_fail@plt+0xb26c>
   1f790:	mov	sp, fp
   1f794:	pop	{fp, pc}
   1f798:	push	{fp, lr}
   1f79c:	mov	fp, sp
   1f7a0:	sub	sp, sp, #16
   1f7a4:	str	r0, [fp, #-4]
   1f7a8:	str	r1, [sp, #8]
   1f7ac:	ldr	r0, [sp, #8]
   1f7b0:	bl	1cabc <__assert_fail@plt+0xb248>
   1f7b4:	ldr	r1, [fp, #-4]
   1f7b8:	ldr	r2, [sp, #8]
   1f7bc:	str	r0, [sp, #4]
   1f7c0:	bl	1152c <memcpy@plt>
   1f7c4:	ldr	r0, [sp, #4]
   1f7c8:	mov	sp, fp
   1f7cc:	pop	{fp, pc}
   1f7d0:	push	{fp, lr}
   1f7d4:	mov	fp, sp
   1f7d8:	sub	sp, sp, #16
   1f7dc:	str	r0, [fp, #-4]
   1f7e0:	str	r1, [sp, #8]
   1f7e4:	ldr	r0, [sp, #8]
   1f7e8:	bl	1cb10 <__assert_fail@plt+0xb29c>
   1f7ec:	ldr	r1, [fp, #-4]
   1f7f0:	ldr	r2, [sp, #8]
   1f7f4:	str	r0, [sp, #4]
   1f7f8:	bl	1152c <memcpy@plt>
   1f7fc:	ldr	r0, [sp, #4]
   1f800:	mov	sp, fp
   1f804:	pop	{fp, pc}
   1f808:	push	{fp, lr}
   1f80c:	mov	fp, sp
   1f810:	sub	sp, sp, #16
   1f814:	str	r0, [fp, #-4]
   1f818:	str	r1, [sp, #8]
   1f81c:	ldr	r0, [sp, #8]
   1f820:	add	r0, r0, #1
   1f824:	bl	1cb10 <__assert_fail@plt+0xb29c>
   1f828:	str	r0, [sp, #4]
   1f82c:	ldr	r0, [sp, #4]
   1f830:	ldr	r1, [sp, #8]
   1f834:	add	r0, r0, r1
   1f838:	movw	r1, #0
   1f83c:	strb	r1, [r0]
   1f840:	ldr	r0, [sp, #4]
   1f844:	ldr	r1, [fp, #-4]
   1f848:	ldr	r2, [sp, #8]
   1f84c:	str	r0, [sp]
   1f850:	bl	1152c <memcpy@plt>
   1f854:	ldr	r0, [sp]
   1f858:	mov	sp, fp
   1f85c:	pop	{fp, pc}
   1f860:	push	{fp, lr}
   1f864:	mov	fp, sp
   1f868:	sub	sp, sp, #8
   1f86c:	str	r0, [sp, #4]
   1f870:	ldr	r0, [sp, #4]
   1f874:	ldr	r1, [sp, #4]
   1f878:	str	r0, [sp]
   1f87c:	mov	r0, r1
   1f880:	bl	116d0 <strlen@plt>
   1f884:	add	r1, r0, #1
   1f888:	ldr	r0, [sp]
   1f88c:	bl	1f798 <__assert_fail@plt+0xdf24>
   1f890:	mov	sp, fp
   1f894:	pop	{fp, pc}
   1f898:	push	{fp, lr}
   1f89c:	mov	fp, sp
   1f8a0:	sub	sp, sp, #8
   1f8a4:	movw	r0, #20840	; 0x5168
   1f8a8:	movt	r0, #3
   1f8ac:	ldr	r0, [r0]
   1f8b0:	movw	r1, #17986	; 0x4642
   1f8b4:	movt	r1, #2
   1f8b8:	str	r0, [sp, #4]
   1f8bc:	mov	r0, r1
   1f8c0:	bl	116b8 <gettext@plt>
   1f8c4:	ldr	r1, [sp, #4]
   1f8c8:	str	r0, [sp]
   1f8cc:	mov	r0, r1
   1f8d0:	movw	r1, #0
   1f8d4:	movw	r2, #16795	; 0x419b
   1f8d8:	movt	r2, #2
   1f8dc:	ldr	r3, [sp]
   1f8e0:	bl	11610 <error@plt>
   1f8e4:	bl	11838 <abort@plt>
   1f8e8:	push	{fp, lr}
   1f8ec:	mov	fp, sp
   1f8f0:	sub	sp, sp, #16
   1f8f4:	str	r0, [fp, #-4]
   1f8f8:	str	r1, [sp, #8]
   1f8fc:	str	r2, [sp, #4]
   1f900:	ldr	r0, [fp, #-4]
   1f904:	ldr	r1, [sp, #8]
   1f908:	orr	r1, r1, #512	; 0x200
   1f90c:	ldr	r2, [sp, #4]
   1f910:	bl	13418 <__assert_fail@plt+0x1ba4>
   1f914:	str	r0, [sp]
   1f918:	ldr	r0, [sp]
   1f91c:	movw	r1, #0
   1f920:	cmp	r0, r1
   1f924:	bne	1f960 <__assert_fail@plt+0xe0ec>
   1f928:	bl	11700 <__errno_location@plt>
   1f92c:	ldr	r0, [r0]
   1f930:	cmp	r0, #22
   1f934:	beq	1f93c <__assert_fail@plt+0xe0c8>
   1f938:	b	1f95c <__assert_fail@plt+0xe0e8>
   1f93c:	movw	r0, #18003	; 0x4653
   1f940:	movt	r0, #2
   1f944:	movw	r1, #18019	; 0x4663
   1f948:	movt	r1, #2
   1f94c:	movw	r2, #41	; 0x29
   1f950:	movw	r3, #18030	; 0x466e
   1f954:	movt	r3, #2
   1f958:	bl	11874 <__assert_fail@plt>
   1f95c:	bl	1f898 <__assert_fail@plt+0xe024>
   1f960:	ldr	r0, [sp]
   1f964:	mov	sp, fp
   1f968:	pop	{fp, pc}
   1f96c:	sub	sp, sp, #16
   1f970:	str	r0, [sp, #12]
   1f974:	str	r1, [sp, #8]
   1f978:	ldr	r0, [sp, #12]
   1f97c:	ldr	r0, [r0, #48]	; 0x30
   1f980:	and	r0, r0, #16
   1f984:	cmp	r0, #0
   1f988:	beq	1f9a8 <__assert_fail@plt+0xe134>
   1f98c:	ldr	r0, [sp, #12]
   1f990:	ldr	r0, [r0, #48]	; 0x30
   1f994:	and	r0, r0, #1
   1f998:	cmp	r0, #0
   1f99c:	movw	r0, #1
   1f9a0:	str	r0, [sp, #4]
   1f9a4:	beq	1fa00 <__assert_fail@plt+0xe18c>
   1f9a8:	ldr	r0, [sp, #12]
   1f9ac:	ldr	r0, [r0, #48]	; 0x30
   1f9b0:	and	r0, r0, #16
   1f9b4:	cmp	r0, #0
   1f9b8:	movw	r0, #0
   1f9bc:	str	r0, [sp]
   1f9c0:	beq	1f9f8 <__assert_fail@plt+0xe184>
   1f9c4:	ldr	r0, [sp, #12]
   1f9c8:	ldr	r0, [r0, #48]	; 0x30
   1f9cc:	and	r0, r0, #1
   1f9d0:	cmp	r0, #0
   1f9d4:	movw	r0, #0
   1f9d8:	str	r0, [sp]
   1f9dc:	beq	1f9f8 <__assert_fail@plt+0xe184>
   1f9e0:	ldr	r0, [sp, #8]
   1f9e4:	ldr	r0, [r0, #48]	; 0x30
   1f9e8:	cmp	r0, #0
   1f9ec:	movw	r0, #0
   1f9f0:	movne	r0, #1
   1f9f4:	str	r0, [sp]
   1f9f8:	ldr	r0, [sp]
   1f9fc:	str	r0, [sp, #4]
   1fa00:	ldr	r0, [sp, #4]
   1fa04:	and	r0, r0, #1
   1fa08:	add	sp, sp, #16
   1fa0c:	bx	lr
   1fa10:	push	{fp, lr}
   1fa14:	mov	fp, sp
   1fa18:	sub	sp, sp, #16
   1fa1c:	str	r0, [sp, #8]
   1fa20:	str	r1, [sp, #4]
   1fa24:	ldr	r0, [sp, #8]
   1fa28:	cmp	r0, #0
   1fa2c:	beq	1fa3c <__assert_fail@plt+0xe1c8>
   1fa30:	ldr	r0, [sp, #4]
   1fa34:	cmp	r0, #0
   1fa38:	bne	1fa48 <__assert_fail@plt+0xe1d4>
   1fa3c:	movw	r0, #1
   1fa40:	str	r0, [sp, #4]
   1fa44:	str	r0, [sp, #8]
   1fa48:	ldr	r0, [sp, #4]
   1fa4c:	cmp	r0, #0
   1fa50:	beq	1fa84 <__assert_fail@plt+0xe210>
   1fa54:	ldr	r0, [pc, #76]	; 1faa8 <__assert_fail@plt+0xe234>
   1fa58:	ldr	r1, [sp, #4]
   1fa5c:	udiv	r0, r0, r1
   1fa60:	ldr	r1, [sp, #8]
   1fa64:	cmp	r0, r1
   1fa68:	bcs	1fa84 <__assert_fail@plt+0xe210>
   1fa6c:	bl	11700 <__errno_location@plt>
   1fa70:	movw	lr, #12
   1fa74:	str	lr, [r0]
   1fa78:	movw	r0, #0
   1fa7c:	str	r0, [fp, #-4]
   1fa80:	b	1fa9c <__assert_fail@plt+0xe228>
   1fa84:	ldr	r0, [sp, #8]
   1fa88:	ldr	r1, [sp, #4]
   1fa8c:	bl	114a8 <calloc@plt>
   1fa90:	str	r0, [sp]
   1fa94:	ldr	r0, [sp]
   1fa98:	str	r0, [fp, #-4]
   1fa9c:	ldr	r0, [fp, #-4]
   1faa0:	mov	sp, fp
   1faa4:	pop	{fp, pc}
   1faa8:	svcvc	0x00ffffff
   1faac:	push	{fp, lr}
   1fab0:	mov	fp, sp
   1fab4:	sub	sp, sp, #16
   1fab8:	str	r0, [sp, #8]
   1fabc:	ldr	r0, [sp, #8]
   1fac0:	cmp	r0, #0
   1fac4:	bne	1fad0 <__assert_fail@plt+0xe25c>
   1fac8:	movw	r0, #1
   1facc:	str	r0, [sp, #8]
   1fad0:	ldr	r0, [pc, #64]	; 1fb18 <__assert_fail@plt+0xe2a4>
   1fad4:	ldr	r1, [sp, #8]
   1fad8:	cmp	r0, r1
   1fadc:	bcs	1faf8 <__assert_fail@plt+0xe284>
   1fae0:	bl	11700 <__errno_location@plt>
   1fae4:	movw	lr, #12
   1fae8:	str	lr, [r0]
   1faec:	movw	r0, #0
   1faf0:	str	r0, [fp, #-4]
   1faf4:	b	1fb0c <__assert_fail@plt+0xe298>
   1faf8:	ldr	r0, [sp, #8]
   1fafc:	bl	11640 <malloc@plt>
   1fb00:	str	r0, [sp, #4]
   1fb04:	ldr	r0, [sp, #4]
   1fb08:	str	r0, [fp, #-4]
   1fb0c:	ldr	r0, [fp, #-4]
   1fb10:	mov	sp, fp
   1fb14:	pop	{fp, pc}
   1fb18:	svcvc	0x00ffffff
   1fb1c:	push	{fp, lr}
   1fb20:	mov	fp, sp
   1fb24:	sub	sp, sp, #16
   1fb28:	str	r0, [sp, #8]
   1fb2c:	str	r1, [sp, #4]
   1fb30:	ldr	r0, [sp, #8]
   1fb34:	movw	r1, #0
   1fb38:	cmp	r0, r1
   1fb3c:	bne	1fb50 <__assert_fail@plt+0xe2dc>
   1fb40:	ldr	r0, [sp, #4]
   1fb44:	bl	1faac <__assert_fail@plt+0xe238>
   1fb48:	str	r0, [fp, #-4]
   1fb4c:	b	1fbb0 <__assert_fail@plt+0xe33c>
   1fb50:	ldr	r0, [sp, #4]
   1fb54:	cmp	r0, #0
   1fb58:	bne	1fb70 <__assert_fail@plt+0xe2fc>
   1fb5c:	ldr	r0, [sp, #8]
   1fb60:	bl	209b8 <__assert_fail@plt+0xf144>
   1fb64:	movw	r0, #0
   1fb68:	str	r0, [fp, #-4]
   1fb6c:	b	1fbb0 <__assert_fail@plt+0xe33c>
   1fb70:	ldr	r0, [pc, #68]	; 1fbbc <__assert_fail@plt+0xe348>
   1fb74:	ldr	r1, [sp, #4]
   1fb78:	cmp	r0, r1
   1fb7c:	bcs	1fb98 <__assert_fail@plt+0xe324>
   1fb80:	bl	11700 <__errno_location@plt>
   1fb84:	movw	lr, #12
   1fb88:	str	lr, [r0]
   1fb8c:	movw	r0, #0
   1fb90:	str	r0, [fp, #-4]
   1fb94:	b	1fbb0 <__assert_fail@plt+0xe33c>
   1fb98:	ldr	r0, [sp, #8]
   1fb9c:	ldr	r1, [sp, #4]
   1fba0:	bl	11574 <realloc@plt>
   1fba4:	str	r0, [sp]
   1fba8:	ldr	r0, [sp]
   1fbac:	str	r0, [fp, #-4]
   1fbb0:	ldr	r0, [fp, #-4]
   1fbb4:	mov	sp, fp
   1fbb8:	pop	{fp, pc}
   1fbbc:	svcvc	0x00ffffff
   1fbc0:	push	{fp, lr}
   1fbc4:	mov	fp, sp
   1fbc8:	sub	sp, sp, #80	; 0x50
   1fbcc:	str	r0, [fp, #-8]
   1fbd0:	str	r1, [fp, #-12]
   1fbd4:	str	r2, [fp, #-16]
   1fbd8:	ldr	r0, [fp, #-8]
   1fbdc:	str	r0, [fp, #-20]	; 0xffffffec
   1fbe0:	ldr	r0, [fp, #-16]
   1fbe4:	ldrsb	r0, [r0]
   1fbe8:	cmp	r0, #0
   1fbec:	bne	1fc08 <__assert_fail@plt+0xe394>
   1fbf0:	ldr	r0, [fp, #-8]
   1fbf4:	movw	r1, #0
   1fbf8:	strb	r1, [r0]
   1fbfc:	ldr	r0, [fp, #-8]
   1fc00:	str	r0, [fp, #-4]
   1fc04:	b	1fd50 <__assert_fail@plt+0xe4dc>
   1fc08:	movw	r0, #21312	; 0x5340
   1fc0c:	movt	r0, #3
   1fc10:	ldr	r0, [r0]
   1fc14:	cmp	r0, #0
   1fc18:	bne	1fcac <__assert_fail@plt+0xe438>
   1fc1c:	ldr	r1, [pc, #312]	; 1fd5c <__assert_fail@plt+0xe4e8>
   1fc20:	movw	r0, #18108	; 0x46bc
   1fc24:	movt	r0, #2
   1fc28:	bl	11628 <open64@plt>
   1fc2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc34:	cmp	r0, #0
   1fc38:	bge	1fc50 <__assert_fail@plt+0xe3dc>
   1fc3c:	movw	r0, #21312	; 0x5340
   1fc40:	movt	r0, #3
   1fc44:	mvn	r1, #0
   1fc48:	str	r1, [r0]
   1fc4c:	b	1fca8 <__assert_fail@plt+0xe434>
   1fc50:	add	r0, sp, #20
   1fc54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fc58:	movw	r1, #18122	; 0x46ca
   1fc5c:	movt	r1, #2
   1fc60:	bl	1179c <sprintf@plt>
   1fc64:	add	r1, sp, #20
   1fc68:	str	r0, [sp, #12]
   1fc6c:	mov	r0, r1
   1fc70:	movw	r1, #0
   1fc74:	bl	11748 <access@plt>
   1fc78:	cmp	r0, #0
   1fc7c:	movw	r0, #0
   1fc80:	movne	r0, #1
   1fc84:	tst	r0, #1
   1fc88:	mvn	r0, #0
   1fc8c:	moveq	r0, #1
   1fc90:	movw	r1, #21312	; 0x5340
   1fc94:	movt	r1, #3
   1fc98:	str	r0, [r1]
   1fc9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fca0:	bl	11844 <close@plt>
   1fca4:	str	r0, [sp, #8]
   1fca8:	b	1fcac <__assert_fail@plt+0xe438>
   1fcac:	movw	r0, #21312	; 0x5340
   1fcb0:	movt	r0, #3
   1fcb4:	ldr	r0, [r0]
   1fcb8:	cmp	r0, #0
   1fcbc:	bge	1fccc <__assert_fail@plt+0xe458>
   1fcc0:	movw	r0, #0
   1fcc4:	str	r0, [fp, #-4]
   1fcc8:	b	1fd50 <__assert_fail@plt+0xe4dc>
   1fccc:	ldr	r0, [fp, #-16]
   1fcd0:	bl	116d0 <strlen@plt>
   1fcd4:	add	r0, r0, #27
   1fcd8:	str	r0, [sp, #16]
   1fcdc:	ldr	r0, [sp, #16]
   1fce0:	movw	lr, #4032	; 0xfc0
   1fce4:	cmp	lr, r0
   1fce8:	bcs	1fd18 <__assert_fail@plt+0xe4a4>
   1fcec:	ldr	r0, [sp, #16]
   1fcf0:	bl	1faac <__assert_fail@plt+0xe238>
   1fcf4:	str	r0, [fp, #-20]	; 0xffffffec
   1fcf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fcfc:	movw	lr, #0
   1fd00:	cmp	r0, lr
   1fd04:	bne	1fd14 <__assert_fail@plt+0xe4a0>
   1fd08:	movw	r0, #0
   1fd0c:	str	r0, [fp, #-4]
   1fd10:	b	1fd50 <__assert_fail@plt+0xe4dc>
   1fd14:	b	1fd18 <__assert_fail@plt+0xe4a4>
   1fd18:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd1c:	ldr	r2, [fp, #-12]
   1fd20:	movw	r1, #18145	; 0x46e1
   1fd24:	movt	r1, #2
   1fd28:	bl	1179c <sprintf@plt>
   1fd2c:	str	r0, [fp, #-24]	; 0xffffffe8
   1fd30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fd38:	add	r0, r0, r1
   1fd3c:	ldr	r1, [fp, #-16]
   1fd40:	bl	115e0 <strcpy@plt>
   1fd44:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd48:	str	r1, [fp, #-4]
   1fd4c:	str	r0, [sp, #4]
   1fd50:	ldr	r0, [fp, #-4]
   1fd54:	mov	sp, fp
   1fd58:	pop	{fp, pc}
   1fd5c:	andeq	r4, r8, r0, lsl #18
   1fd60:	push	{r4, sl, fp, lr}
   1fd64:	add	fp, sp, #8
   1fd68:	sub	sp, sp, #16
   1fd6c:	str	r0, [sp, #8]
   1fd70:	str	r1, [sp, #12]
   1fd74:	str	r2, [sp, #4]
   1fd78:	ldr	r0, [sp, #8]
   1fd7c:	ldr	r1, [sp, #12]
   1fd80:	ldr	r2, [sp, #4]
   1fd84:	rsb	r3, r2, #32
   1fd88:	lsr	ip, r0, r3
   1fd8c:	orr	ip, ip, r1, lsl r2
   1fd90:	sub	lr, r2, #32
   1fd94:	cmp	lr, #0
   1fd98:	lslge	ip, r0, lr
   1fd9c:	lsl	r4, r0, r2
   1fda0:	cmp	lr, #0
   1fda4:	movwge	r4, #0
   1fda8:	rsb	r2, r2, #64	; 0x40
   1fdac:	lsr	lr, r1, r2
   1fdb0:	cmp	r3, #0
   1fdb4:	movwge	lr, #0
   1fdb8:	lsr	r0, r0, r2
   1fdbc:	rsb	r2, r2, #32
   1fdc0:	orr	r0, r0, r1, lsl r2
   1fdc4:	cmp	r3, #0
   1fdc8:	lsrge	r0, r1, r3
   1fdcc:	orr	r0, r4, r0
   1fdd0:	orr	r1, ip, lr
   1fdd4:	sub	sp, fp, #8
   1fdd8:	pop	{r4, sl, fp, pc}
   1fddc:	push	{r4, sl, fp, lr}
   1fde0:	add	fp, sp, #8
   1fde4:	sub	sp, sp, #16
   1fde8:	str	r0, [sp, #8]
   1fdec:	str	r1, [sp, #12]
   1fdf0:	str	r2, [sp, #4]
   1fdf4:	ldr	r0, [sp, #8]
   1fdf8:	ldr	r1, [sp, #12]
   1fdfc:	ldr	r2, [sp, #4]
   1fe00:	lsr	r3, r1, r2
   1fe04:	sub	ip, r2, #32
   1fe08:	cmp	ip, #0
   1fe0c:	movwge	r3, #0
   1fe10:	lsr	lr, r0, r2
   1fe14:	rsb	r4, r2, #32
   1fe18:	orr	lr, lr, r1, lsl r4
   1fe1c:	cmp	ip, #0
   1fe20:	lsrge	lr, r1, ip
   1fe24:	rsb	r2, r2, #64	; 0x40
   1fe28:	rsb	ip, r2, #32
   1fe2c:	lsr	ip, r0, ip
   1fe30:	orr	r1, ip, r1, lsl r2
   1fe34:	cmp	r4, #0
   1fe38:	lslge	r1, r0, r4
   1fe3c:	lsl	r0, r0, r2
   1fe40:	cmp	r4, #0
   1fe44:	movwge	r0, #0
   1fe48:	orr	r0, lr, r0
   1fe4c:	orr	r1, r3, r1
   1fe50:	sub	sp, fp, #8
   1fe54:	pop	{r4, sl, fp, pc}
   1fe58:	sub	sp, sp, #8
   1fe5c:	str	r0, [sp, #4]
   1fe60:	str	r1, [sp]
   1fe64:	ldr	r0, [sp, #4]
   1fe68:	ldr	r1, [sp]
   1fe6c:	lsl	r0, r0, r1
   1fe70:	ldr	r1, [sp, #4]
   1fe74:	ldr	r2, [sp]
   1fe78:	movw	r3, #32
   1fe7c:	sub	r2, r3, r2
   1fe80:	lsr	r1, r1, r2
   1fe84:	orr	r0, r0, r1
   1fe88:	add	sp, sp, #8
   1fe8c:	bx	lr
   1fe90:	sub	sp, sp, #8
   1fe94:	str	r0, [sp, #4]
   1fe98:	str	r1, [sp]
   1fe9c:	ldr	r0, [sp, #4]
   1fea0:	ldr	r1, [sp]
   1fea4:	lsr	r0, r0, r1
   1fea8:	ldr	r1, [sp, #4]
   1feac:	ldr	r2, [sp]
   1feb0:	movw	r3, #32
   1feb4:	sub	r2, r3, r2
   1feb8:	lsl	r1, r1, r2
   1febc:	orr	r0, r0, r1
   1fec0:	add	sp, sp, #8
   1fec4:	bx	lr
   1fec8:	sub	sp, sp, #8
   1fecc:	str	r0, [sp, #4]
   1fed0:	str	r1, [sp]
   1fed4:	ldr	r0, [sp, #4]
   1fed8:	ldr	r1, [sp]
   1fedc:	lsl	r0, r0, r1
   1fee0:	ldr	r1, [sp, #4]
   1fee4:	ldr	r2, [sp]
   1fee8:	movw	r3, #32
   1feec:	sub	r2, r3, r2
   1fef0:	lsr	r1, r1, r2
   1fef4:	orr	r0, r0, r1
   1fef8:	add	sp, sp, #8
   1fefc:	bx	lr
   1ff00:	sub	sp, sp, #8
   1ff04:	str	r0, [sp, #4]
   1ff08:	str	r1, [sp]
   1ff0c:	ldr	r0, [sp, #4]
   1ff10:	ldr	r1, [sp]
   1ff14:	lsr	r0, r0, r1
   1ff18:	ldr	r1, [sp, #4]
   1ff1c:	ldr	r2, [sp]
   1ff20:	movw	r3, #32
   1ff24:	sub	r2, r3, r2
   1ff28:	lsl	r1, r1, r2
   1ff2c:	orr	r0, r0, r1
   1ff30:	add	sp, sp, #8
   1ff34:	bx	lr
   1ff38:	sub	sp, sp, #8
   1ff3c:	strh	r0, [sp, #6]
   1ff40:	str	r1, [sp]
   1ff44:	ldrh	r0, [sp, #6]
   1ff48:	ldr	r1, [sp]
   1ff4c:	lsl	r0, r0, r1
   1ff50:	ldrh	r1, [sp, #6]
   1ff54:	ldr	r2, [sp]
   1ff58:	movw	r3, #16
   1ff5c:	sub	r2, r3, r2
   1ff60:	lsr	r1, r1, r2
   1ff64:	orr	r0, r0, r1
   1ff68:	movw	r1, #65535	; 0xffff
   1ff6c:	and	r0, r0, r1
   1ff70:	uxth	r0, r0
   1ff74:	add	sp, sp, #8
   1ff78:	bx	lr
   1ff7c:	sub	sp, sp, #8
   1ff80:	strh	r0, [sp, #6]
   1ff84:	str	r1, [sp]
   1ff88:	ldrh	r0, [sp, #6]
   1ff8c:	ldr	r1, [sp]
   1ff90:	lsr	r0, r0, r1
   1ff94:	ldrh	r1, [sp, #6]
   1ff98:	ldr	r2, [sp]
   1ff9c:	movw	r3, #16
   1ffa0:	sub	r2, r3, r2
   1ffa4:	lsl	r1, r1, r2
   1ffa8:	orr	r0, r0, r1
   1ffac:	movw	r1, #65535	; 0xffff
   1ffb0:	and	r0, r0, r1
   1ffb4:	uxth	r0, r0
   1ffb8:	add	sp, sp, #8
   1ffbc:	bx	lr
   1ffc0:	sub	sp, sp, #8
   1ffc4:	strb	r0, [sp, #7]
   1ffc8:	str	r1, [sp]
   1ffcc:	ldrb	r0, [sp, #7]
   1ffd0:	ldr	r1, [sp]
   1ffd4:	lsl	r0, r0, r1
   1ffd8:	ldrb	r1, [sp, #7]
   1ffdc:	ldr	r2, [sp]
   1ffe0:	movw	r3, #8
   1ffe4:	sub	r2, r3, r2
   1ffe8:	lsr	r1, r1, r2
   1ffec:	orr	r0, r0, r1
   1fff0:	and	r0, r0, #255	; 0xff
   1fff4:	and	r0, r0, #255	; 0xff
   1fff8:	add	sp, sp, #8
   1fffc:	bx	lr
   20000:	sub	sp, sp, #8
   20004:	strb	r0, [sp, #7]
   20008:	str	r1, [sp]
   2000c:	ldrb	r0, [sp, #7]
   20010:	ldr	r1, [sp]
   20014:	lsr	r0, r0, r1
   20018:	ldrb	r1, [sp, #7]
   2001c:	ldr	r2, [sp]
   20020:	movw	r3, #8
   20024:	sub	r2, r3, r2
   20028:	lsl	r1, r1, r2
   2002c:	orr	r0, r0, r1
   20030:	and	r0, r0, #255	; 0xff
   20034:	and	r0, r0, #255	; 0xff
   20038:	add	sp, sp, #8
   2003c:	bx	lr
   20040:	push	{fp, lr}
   20044:	mov	fp, sp
   20048:	sub	sp, sp, #24
   2004c:	str	r0, [fp, #-8]
   20050:	str	r1, [sp, #12]
   20054:	ldr	r0, [fp, #-8]
   20058:	str	r0, [sp, #8]
   2005c:	ldr	r0, [sp, #12]
   20060:	str	r0, [sp, #4]
   20064:	ldr	r0, [sp, #8]
   20068:	ldr	r1, [sp, #4]
   2006c:	cmp	r0, r1
   20070:	bne	20080 <__assert_fail@plt+0xe80c>
   20074:	movw	r0, #0
   20078:	str	r0, [fp, #-4]
   2007c:	b	200ec <__assert_fail@plt+0xe878>
   20080:	b	20084 <__assert_fail@plt+0xe810>
   20084:	ldr	r0, [sp, #8]
   20088:	ldrb	r0, [r0]
   2008c:	bl	22930 <__assert_fail@plt+0x110bc>
   20090:	strb	r0, [sp, #3]
   20094:	ldr	r0, [sp, #4]
   20098:	ldrb	r0, [r0]
   2009c:	bl	22930 <__assert_fail@plt+0x110bc>
   200a0:	strb	r0, [sp, #2]
   200a4:	ldrb	r0, [sp, #3]
   200a8:	cmp	r0, #0
   200ac:	bne	200b4 <__assert_fail@plt+0xe840>
   200b0:	b	200dc <__assert_fail@plt+0xe868>
   200b4:	ldr	r0, [sp, #8]
   200b8:	add	r0, r0, #1
   200bc:	str	r0, [sp, #8]
   200c0:	ldr	r0, [sp, #4]
   200c4:	add	r0, r0, #1
   200c8:	str	r0, [sp, #4]
   200cc:	ldrb	r0, [sp, #3]
   200d0:	ldrb	r1, [sp, #2]
   200d4:	cmp	r0, r1
   200d8:	beq	20084 <__assert_fail@plt+0xe810>
   200dc:	ldrb	r0, [sp, #3]
   200e0:	ldrb	r1, [sp, #2]
   200e4:	sub	r0, r0, r1
   200e8:	str	r0, [fp, #-4]
   200ec:	ldr	r0, [fp, #-4]
   200f0:	mov	sp, fp
   200f4:	pop	{fp, pc}
   200f8:	push	{fp, lr}
   200fc:	mov	fp, sp
   20100:	sub	sp, sp, #16
   20104:	str	r0, [sp, #8]
   20108:	ldr	r0, [sp, #8]
   2010c:	bl	115ec <__fpending@plt>
   20110:	cmp	r0, #0
   20114:	movw	r0, #0
   20118:	movne	r0, #1
   2011c:	and	r0, r0, #1
   20120:	strb	r0, [sp, #7]
   20124:	ldr	r0, [sp, #8]
   20128:	bl	115f8 <ferror_unlocked@plt>
   2012c:	cmp	r0, #0
   20130:	movw	r0, #0
   20134:	movne	r0, #1
   20138:	and	r0, r0, #1
   2013c:	strb	r0, [sp, #6]
   20140:	ldr	r0, [sp, #8]
   20144:	bl	203b8 <__assert_fail@plt+0xeb44>
   20148:	cmp	r0, #0
   2014c:	movw	r0, #0
   20150:	movne	r0, #1
   20154:	and	r0, r0, #1
   20158:	strb	r0, [sp, #5]
   2015c:	ldrb	r0, [sp, #6]
   20160:	tst	r0, #1
   20164:	bne	20190 <__assert_fail@plt+0xe91c>
   20168:	ldrb	r0, [sp, #5]
   2016c:	tst	r0, #1
   20170:	beq	201b4 <__assert_fail@plt+0xe940>
   20174:	ldrb	r0, [sp, #7]
   20178:	tst	r0, #1
   2017c:	bne	20190 <__assert_fail@plt+0xe91c>
   20180:	bl	11700 <__errno_location@plt>
   20184:	ldr	r0, [r0]
   20188:	cmp	r0, #9
   2018c:	beq	201b4 <__assert_fail@plt+0xe940>
   20190:	ldrb	r0, [sp, #5]
   20194:	tst	r0, #1
   20198:	bne	201a8 <__assert_fail@plt+0xe934>
   2019c:	bl	11700 <__errno_location@plt>
   201a0:	movw	lr, #0
   201a4:	str	lr, [r0]
   201a8:	mvn	r0, #0
   201ac:	str	r0, [fp, #-4]
   201b0:	b	201bc <__assert_fail@plt+0xe948>
   201b4:	movw	r0, #0
   201b8:	str	r0, [fp, #-4]
   201bc:	ldr	r0, [fp, #-4]
   201c0:	mov	sp, fp
   201c4:	pop	{fp, pc}
   201c8:	sub	sp, sp, #4
   201cc:	ldr	r1, [pc, #32]	; 201f4 <__assert_fail@plt+0xe980>
   201d0:	str	r0, [sp]
   201d4:	ldr	r0, [sp]
   201d8:	mov	r2, #0
   201dc:	str	r2, [r0, #20]
   201e0:	str	r2, [r0, #16]
   201e4:	ldr	r0, [sp]
   201e8:	str	r1, [r0, #24]
   201ec:	add	sp, sp, #4
   201f0:	bx	lr
   201f4:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   201f8:	push	{fp, lr}
   201fc:	mov	fp, sp
   20200:	sub	sp, sp, #16
   20204:	ldr	r2, [pc, #364]	; 20378 <__assert_fail@plt+0xeb04>
   20208:	str	r0, [sp, #8]
   2020c:	str	r1, [sp, #4]
   20210:	ldr	r0, [sp, #8]
   20214:	ldr	r0, [r0, #24]
   20218:	cmp	r0, r2
   2021c:	bne	20224 <__assert_fail@plt+0xe9b0>
   20220:	b	20244 <__assert_fail@plt+0xe9d0>
   20224:	movw	r0, #18163	; 0x46f3
   20228:	movt	r0, #2
   2022c:	movw	r1, #18187	; 0x470b
   20230:	movt	r1, #2
   20234:	movw	r2, #60	; 0x3c
   20238:	movw	r3, #18205	; 0x471d
   2023c:	movt	r3, #2
   20240:	bl	11874 <__assert_fail@plt>
   20244:	ldr	r0, [sp, #8]
   20248:	ldr	r1, [r0, #16]
   2024c:	ldr	r0, [r0, #20]
   20250:	orr	r0, r1, r0
   20254:	cmp	r0, #0
   20258:	beq	202d0 <__assert_fail@plt+0xea5c>
   2025c:	b	20260 <__assert_fail@plt+0xe9ec>
   20260:	ldr	r0, [sp, #4]
   20264:	ldr	r1, [r0, #96]	; 0x60
   20268:	ldr	r0, [r0, #100]	; 0x64
   2026c:	ldr	r2, [sp, #8]
   20270:	ldr	r3, [r2]
   20274:	ldr	r2, [r2, #4]
   20278:	eor	r0, r0, r2
   2027c:	eor	r1, r1, r3
   20280:	orr	r0, r1, r0
   20284:	cmp	r0, #0
   20288:	bne	202d0 <__assert_fail@plt+0xea5c>
   2028c:	b	20290 <__assert_fail@plt+0xea1c>
   20290:	ldr	r0, [sp, #4]
   20294:	ldr	r1, [r0]
   20298:	ldr	r0, [r0, #4]
   2029c:	ldr	r2, [sp, #8]
   202a0:	ldr	r3, [r2, #8]
   202a4:	ldr	r2, [r2, #12]
   202a8:	eor	r0, r0, r2
   202ac:	eor	r1, r1, r3
   202b0:	orr	r0, r1, r0
   202b4:	cmp	r0, #0
   202b8:	bne	202d0 <__assert_fail@plt+0xea5c>
   202bc:	b	202c0 <__assert_fail@plt+0xea4c>
   202c0:	movw	r0, #1
   202c4:	and	r0, r0, #1
   202c8:	strb	r0, [fp, #-1]
   202cc:	b	20368 <__assert_fail@plt+0xeaf4>
   202d0:	ldr	r0, [sp, #8]
   202d4:	ldr	r1, [r0, #16]
   202d8:	ldr	r2, [r0, #20]
   202dc:	adds	r1, r1, #1
   202e0:	adc	r2, r2, #0
   202e4:	str	r1, [r0, #16]
   202e8:	str	r2, [r0, #20]
   202ec:	mov	r0, r1
   202f0:	mov	r1, r2
   202f4:	bl	2037c <__assert_fail@plt+0xeb08>
   202f8:	tst	r0, #1
   202fc:	beq	2035c <__assert_fail@plt+0xeae8>
   20300:	ldr	r0, [sp, #8]
   20304:	ldr	r1, [r0, #16]
   20308:	ldr	r0, [r0, #20]
   2030c:	orr	r0, r1, r0
   20310:	cmp	r0, #0
   20314:	bne	2032c <__assert_fail@plt+0xeab8>
   20318:	b	2031c <__assert_fail@plt+0xeaa8>
   2031c:	movw	r0, #1
   20320:	and	r0, r0, #1
   20324:	strb	r0, [fp, #-1]
   20328:	b	20368 <__assert_fail@plt+0xeaf4>
   2032c:	ldr	r0, [sp, #4]
   20330:	ldr	r1, [r0]
   20334:	ldr	r0, [r0, #4]
   20338:	ldr	r2, [sp, #8]
   2033c:	str	r0, [r2, #12]
   20340:	str	r1, [r2, #8]
   20344:	ldr	r0, [sp, #4]
   20348:	ldr	r1, [r0, #96]	; 0x60
   2034c:	ldr	r0, [r0, #100]	; 0x64
   20350:	ldr	r2, [sp, #8]
   20354:	str	r0, [r2, #4]
   20358:	str	r1, [r2]
   2035c:	movw	r0, #0
   20360:	and	r0, r0, #1
   20364:	strb	r0, [fp, #-1]
   20368:	ldrb	r0, [fp, #-1]
   2036c:	and	r0, r0, #1
   20370:	mov	sp, fp
   20374:	pop	{fp, pc}
   20378:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   2037c:	sub	sp, sp, #8
   20380:	str	r0, [sp]
   20384:	str	r1, [sp, #4]
   20388:	ldr	r0, [sp]
   2038c:	ldr	r1, [sp, #4]
   20390:	subs	r2, r0, #1
   20394:	sbc	r3, r1, #0
   20398:	and	r0, r0, r2
   2039c:	and	r1, r1, r3
   203a0:	orr	r0, r0, r1
   203a4:	clz	r0, r0
   203a8:	lsr	r0, r0, #5
   203ac:	and	r0, r0, #1
   203b0:	add	sp, sp, #8
   203b4:	bx	lr
   203b8:	push	{fp, lr}
   203bc:	mov	fp, sp
   203c0:	sub	sp, sp, #32
   203c4:	str	r0, [fp, #-8]
   203c8:	movw	r0, #0
   203cc:	str	r0, [fp, #-12]
   203d0:	str	r0, [sp, #12]
   203d4:	ldr	r0, [fp, #-8]
   203d8:	bl	11724 <fileno@plt>
   203dc:	str	r0, [sp, #16]
   203e0:	ldr	r0, [sp, #16]
   203e4:	cmp	r0, #0
   203e8:	bge	203fc <__assert_fail@plt+0xeb88>
   203ec:	ldr	r0, [fp, #-8]
   203f0:	bl	11754 <fclose@plt>
   203f4:	str	r0, [fp, #-4]
   203f8:	b	20498 <__assert_fail@plt+0xec24>
   203fc:	ldr	r0, [fp, #-8]
   20400:	bl	11658 <__freading@plt>
   20404:	cmp	r0, #0
   20408:	beq	20440 <__assert_fail@plt+0xebcc>
   2040c:	ldr	r0, [fp, #-8]
   20410:	bl	11724 <fileno@plt>
   20414:	mov	lr, sp
   20418:	mov	r1, #1
   2041c:	str	r1, [lr]
   20420:	mov	r1, #0
   20424:	mov	r2, r1
   20428:	mov	r3, r1
   2042c:	bl	115c8 <lseek64@plt>
   20430:	and	r0, r0, r1
   20434:	cmn	r0, #1
   20438:	beq	2045c <__assert_fail@plt+0xebe8>
   2043c:	b	20440 <__assert_fail@plt+0xebcc>
   20440:	ldr	r0, [fp, #-8]
   20444:	bl	20908 <__assert_fail@plt+0xf094>
   20448:	cmp	r0, #0
   2044c:	beq	2045c <__assert_fail@plt+0xebe8>
   20450:	bl	11700 <__errno_location@plt>
   20454:	ldr	r0, [r0]
   20458:	str	r0, [fp, #-12]
   2045c:	ldr	r0, [fp, #-8]
   20460:	bl	11754 <fclose@plt>
   20464:	str	r0, [sp, #12]
   20468:	ldr	r0, [fp, #-12]
   2046c:	cmp	r0, #0
   20470:	beq	20490 <__assert_fail@plt+0xec1c>
   20474:	ldr	r0, [fp, #-12]
   20478:	str	r0, [sp, #8]
   2047c:	bl	11700 <__errno_location@plt>
   20480:	ldr	lr, [sp, #8]
   20484:	str	lr, [r0]
   20488:	mvn	r0, #0
   2048c:	str	r0, [sp, #12]
   20490:	ldr	r0, [sp, #12]
   20494:	str	r0, [fp, #-4]
   20498:	ldr	r0, [fp, #-4]
   2049c:	mov	sp, fp
   204a0:	pop	{fp, pc}
   204a4:	sub	sp, sp, #8
   204a8:	push	{fp, lr}
   204ac:	mov	fp, sp
   204b0:	sub	sp, sp, #48	; 0x30
   204b4:	str	r3, [fp, #12]
   204b8:	str	r2, [fp, #8]
   204bc:	str	r0, [fp, #-4]
   204c0:	str	r1, [fp, #-8]
   204c4:	mvn	r0, #0
   204c8:	str	r0, [fp, #-16]
   204cc:	add	r0, fp, #8
   204d0:	str	r0, [fp, #-12]
   204d4:	ldr	r0, [fp, #-8]
   204d8:	cmp	r0, #0
   204dc:	str	r0, [sp, #12]
   204e0:	beq	204fc <__assert_fail@plt+0xec88>
   204e4:	b	204e8 <__assert_fail@plt+0xec74>
   204e8:	movw	r0, #1030	; 0x406
   204ec:	ldr	r1, [sp, #12]
   204f0:	cmp	r1, r0
   204f4:	beq	20524 <__assert_fail@plt+0xecb0>
   204f8:	b	2054c <__assert_fail@plt+0xecd8>
   204fc:	ldr	r0, [fp, #-12]
   20500:	add	r1, r0, #4
   20504:	str	r1, [fp, #-12]
   20508:	ldr	r0, [r0]
   2050c:	str	r0, [fp, #-20]	; 0xffffffec
   20510:	ldr	r0, [fp, #-4]
   20514:	ldr	r1, [fp, #-20]	; 0xffffffec
   20518:	bl	206f8 <__assert_fail@plt+0xee84>
   2051c:	str	r0, [fp, #-16]
   20520:	b	206d8 <__assert_fail@plt+0xee64>
   20524:	ldr	r0, [fp, #-12]
   20528:	add	r1, r0, #4
   2052c:	str	r1, [fp, #-12]
   20530:	ldr	r0, [r0]
   20534:	str	r0, [sp, #24]
   20538:	ldr	r0, [fp, #-4]
   2053c:	ldr	r1, [sp, #24]
   20540:	bl	2072c <__assert_fail@plt+0xeeb8>
   20544:	str	r0, [fp, #-16]
   20548:	b	206d8 <__assert_fail@plt+0xee64>
   2054c:	ldr	r0, [fp, #-8]
   20550:	cmp	r0, #0
   20554:	str	r0, [sp, #8]
   20558:	beq	20680 <__assert_fail@plt+0xee0c>
   2055c:	b	20560 <__assert_fail@plt+0xecec>
   20560:	ldr	r0, [sp, #8]
   20564:	cmp	r0, #1
   20568:	beq	2066c <__assert_fail@plt+0xedf8>
   2056c:	b	20570 <__assert_fail@plt+0xecfc>
   20570:	ldr	r0, [sp, #8]
   20574:	cmp	r0, #2
   20578:	beq	20680 <__assert_fail@plt+0xee0c>
   2057c:	b	20580 <__assert_fail@plt+0xed0c>
   20580:	ldr	r0, [sp, #8]
   20584:	cmp	r0, #3
   20588:	beq	2066c <__assert_fail@plt+0xedf8>
   2058c:	b	20590 <__assert_fail@plt+0xed1c>
   20590:	ldr	r0, [sp, #8]
   20594:	cmp	r0, #4
   20598:	beq	20680 <__assert_fail@plt+0xee0c>
   2059c:	b	205a0 <__assert_fail@plt+0xed2c>
   205a0:	ldr	r0, [sp, #8]
   205a4:	cmp	r0, #8
   205a8:	beq	20680 <__assert_fail@plt+0xee0c>
   205ac:	b	205b0 <__assert_fail@plt+0xed3c>
   205b0:	ldr	r0, [sp, #8]
   205b4:	cmp	r0, #9
   205b8:	beq	2066c <__assert_fail@plt+0xedf8>
   205bc:	b	205c0 <__assert_fail@plt+0xed4c>
   205c0:	ldr	r0, [sp, #8]
   205c4:	cmp	r0, #10
   205c8:	beq	20680 <__assert_fail@plt+0xee0c>
   205cc:	b	205d0 <__assert_fail@plt+0xed5c>
   205d0:	ldr	r0, [sp, #8]
   205d4:	cmp	r0, #11
   205d8:	beq	2066c <__assert_fail@plt+0xedf8>
   205dc:	b	205e0 <__assert_fail@plt+0xed6c>
   205e0:	ldr	r0, [sp, #8]
   205e4:	cmp	r0, #1024	; 0x400
   205e8:	beq	20680 <__assert_fail@plt+0xee0c>
   205ec:	b	205f0 <__assert_fail@plt+0xed7c>
   205f0:	movw	r0, #1025	; 0x401
   205f4:	ldr	r1, [sp, #8]
   205f8:	cmp	r1, r0
   205fc:	beq	2066c <__assert_fail@plt+0xedf8>
   20600:	b	20604 <__assert_fail@plt+0xed90>
   20604:	movw	r0, #1026	; 0x402
   20608:	ldr	r1, [sp, #8]
   2060c:	cmp	r1, r0
   20610:	beq	20680 <__assert_fail@plt+0xee0c>
   20614:	b	20618 <__assert_fail@plt+0xeda4>
   20618:	movw	r0, #1030	; 0x406
   2061c:	ldr	r1, [sp, #8]
   20620:	sub	r0, r1, r0
   20624:	cmp	r0, #2
   20628:	bcc	20680 <__assert_fail@plt+0xee0c>
   2062c:	b	20630 <__assert_fail@plt+0xedbc>
   20630:	movw	r0, #1032	; 0x408
   20634:	ldr	r1, [sp, #8]
   20638:	cmp	r1, r0
   2063c:	beq	2066c <__assert_fail@plt+0xedf8>
   20640:	b	20644 <__assert_fail@plt+0xedd0>
   20644:	movw	r0, #1033	; 0x409
   20648:	ldr	r1, [sp, #8]
   2064c:	cmp	r1, r0
   20650:	beq	20680 <__assert_fail@plt+0xee0c>
   20654:	b	20658 <__assert_fail@plt+0xede4>
   20658:	movw	r0, #1034	; 0x40a
   2065c:	ldr	r1, [sp, #8]
   20660:	cmp	r1, r0
   20664:	bne	206ac <__assert_fail@plt+0xee38>
   20668:	b	2066c <__assert_fail@plt+0xedf8>
   2066c:	ldr	r0, [fp, #-4]
   20670:	ldr	r1, [fp, #-8]
   20674:	bl	1176c <fcntl64@plt>
   20678:	str	r0, [fp, #-16]
   2067c:	b	206d4 <__assert_fail@plt+0xee60>
   20680:	ldr	r0, [fp, #-12]
   20684:	add	r1, r0, #4
   20688:	str	r1, [fp, #-12]
   2068c:	ldr	r0, [r0]
   20690:	str	r0, [sp, #20]
   20694:	ldr	r0, [fp, #-4]
   20698:	ldr	r1, [fp, #-8]
   2069c:	ldr	r2, [sp, #20]
   206a0:	bl	1176c <fcntl64@plt>
   206a4:	str	r0, [fp, #-16]
   206a8:	b	206d4 <__assert_fail@plt+0xee60>
   206ac:	ldr	r0, [fp, #-12]
   206b0:	add	r1, r0, #4
   206b4:	str	r1, [fp, #-12]
   206b8:	ldr	r0, [r0]
   206bc:	str	r0, [sp, #16]
   206c0:	ldr	r0, [fp, #-4]
   206c4:	ldr	r1, [fp, #-8]
   206c8:	ldr	r2, [sp, #16]
   206cc:	bl	1176c <fcntl64@plt>
   206d0:	str	r0, [fp, #-16]
   206d4:	b	206d8 <__assert_fail@plt+0xee64>
   206d8:	sub	r0, fp, #12
   206dc:	ldr	r1, [fp, #-16]
   206e0:	str	r0, [sp, #4]
   206e4:	mov	r0, r1
   206e8:	mov	sp, fp
   206ec:	pop	{fp, lr}
   206f0:	add	sp, sp, #8
   206f4:	bx	lr
   206f8:	push	{fp, lr}
   206fc:	mov	fp, sp
   20700:	sub	sp, sp, #16
   20704:	str	r0, [fp, #-4]
   20708:	str	r1, [sp, #8]
   2070c:	ldr	r0, [fp, #-4]
   20710:	ldr	r2, [sp, #8]
   20714:	movw	r1, #0
   20718:	bl	1176c <fcntl64@plt>
   2071c:	str	r0, [sp, #4]
   20720:	ldr	r0, [sp, #4]
   20724:	mov	sp, fp
   20728:	pop	{fp, pc}
   2072c:	push	{fp, lr}
   20730:	mov	fp, sp
   20734:	sub	sp, sp, #32
   20738:	str	r0, [fp, #-4]
   2073c:	str	r1, [fp, #-8]
   20740:	movw	r0, #21316	; 0x5344
   20744:	movt	r0, #3
   20748:	ldr	r0, [r0]
   2074c:	movw	r1, #0
   20750:	cmp	r1, r0
   20754:	bgt	207d4 <__assert_fail@plt+0xef60>
   20758:	ldr	r0, [fp, #-4]
   2075c:	ldr	r2, [fp, #-8]
   20760:	movw	r1, #1030	; 0x406
   20764:	bl	1176c <fcntl64@plt>
   20768:	str	r0, [fp, #-12]
   2076c:	ldr	r0, [fp, #-12]
   20770:	movw	r1, #0
   20774:	cmp	r1, r0
   20778:	ble	2078c <__assert_fail@plt+0xef18>
   2077c:	bl	11700 <__errno_location@plt>
   20780:	ldr	r0, [r0]
   20784:	cmp	r0, #22
   20788:	beq	207a0 <__assert_fail@plt+0xef2c>
   2078c:	movw	r0, #21316	; 0x5344
   20790:	movt	r0, #3
   20794:	movw	r1, #1
   20798:	str	r1, [r0]
   2079c:	b	207d0 <__assert_fail@plt+0xef5c>
   207a0:	ldr	r0, [fp, #-4]
   207a4:	ldr	r1, [fp, #-8]
   207a8:	bl	206f8 <__assert_fail@plt+0xee84>
   207ac:	str	r0, [fp, #-12]
   207b0:	ldr	r0, [fp, #-12]
   207b4:	cmp	r0, #0
   207b8:	blt	207cc <__assert_fail@plt+0xef58>
   207bc:	movw	r0, #21316	; 0x5344
   207c0:	movt	r0, #3
   207c4:	mvn	r1, #0
   207c8:	str	r1, [r0]
   207cc:	b	207d0 <__assert_fail@plt+0xef5c>
   207d0:	b	207e4 <__assert_fail@plt+0xef70>
   207d4:	ldr	r0, [fp, #-4]
   207d8:	ldr	r1, [fp, #-8]
   207dc:	bl	206f8 <__assert_fail@plt+0xee84>
   207e0:	str	r0, [fp, #-12]
   207e4:	ldr	r0, [fp, #-12]
   207e8:	movw	r1, #0
   207ec:	cmp	r1, r0
   207f0:	bgt	20878 <__assert_fail@plt+0xf004>
   207f4:	movw	r0, #21316	; 0x5344
   207f8:	movt	r0, #3
   207fc:	ldr	r0, [r0]
   20800:	cmn	r0, #1
   20804:	bne	20878 <__assert_fail@plt+0xf004>
   20808:	ldr	r0, [fp, #-12]
   2080c:	movw	r1, #1
   20810:	bl	1176c <fcntl64@plt>
   20814:	str	r0, [sp, #16]
   20818:	ldr	r0, [sp, #16]
   2081c:	cmp	r0, #0
   20820:	blt	20840 <__assert_fail@plt+0xefcc>
   20824:	ldr	r0, [fp, #-12]
   20828:	ldr	r1, [sp, #16]
   2082c:	orr	r2, r1, #1
   20830:	movw	r1, #2
   20834:	bl	1176c <fcntl64@plt>
   20838:	cmn	r0, #1
   2083c:	bne	20874 <__assert_fail@plt+0xf000>
   20840:	bl	11700 <__errno_location@plt>
   20844:	ldr	r0, [r0]
   20848:	str	r0, [sp, #12]
   2084c:	ldr	r0, [fp, #-12]
   20850:	bl	11844 <close@plt>
   20854:	ldr	lr, [sp, #12]
   20858:	str	r0, [sp, #8]
   2085c:	str	lr, [sp, #4]
   20860:	bl	11700 <__errno_location@plt>
   20864:	ldr	lr, [sp, #4]
   20868:	str	lr, [r0]
   2086c:	mvn	r0, #0
   20870:	str	r0, [fp, #-12]
   20874:	b	20878 <__assert_fail@plt+0xf004>
   20878:	ldr	r0, [fp, #-12]
   2087c:	mov	sp, fp
   20880:	pop	{fp, pc}
   20884:	sub	sp, sp, #8
   20888:	push	{fp, lr}
   2088c:	mov	fp, sp
   20890:	sub	sp, sp, #24
   20894:	str	r3, [fp, #12]
   20898:	str	r2, [fp, #8]
   2089c:	str	r0, [fp, #-4]
   208a0:	str	r1, [fp, #-8]
   208a4:	movw	r0, #0
   208a8:	str	r0, [sp, #12]
   208ac:	ldr	r0, [fp, #-8]
   208b0:	and	r0, r0, #64	; 0x40
   208b4:	cmp	r0, #0
   208b8:	beq	208e4 <__assert_fail@plt+0xf070>
   208bc:	add	r0, sp, #8
   208c0:	mov	r1, r0
   208c4:	add	r2, fp, #8
   208c8:	str	r2, [r1]
   208cc:	ldr	r1, [sp, #8]
   208d0:	add	r2, r1, #4
   208d4:	str	r2, [sp, #8]
   208d8:	ldr	r1, [r1]
   208dc:	str	r1, [sp, #12]
   208e0:	str	r0, [sp, #4]
   208e4:	ldr	r0, [fp, #-4]
   208e8:	ldr	r1, [fp, #-8]
   208ec:	ldr	r2, [sp, #12]
   208f0:	bl	11628 <open64@plt>
   208f4:	bl	1c130 <__assert_fail@plt+0xa8bc>
   208f8:	mov	sp, fp
   208fc:	pop	{fp, lr}
   20900:	add	sp, sp, #8
   20904:	bx	lr
   20908:	push	{fp, lr}
   2090c:	mov	fp, sp
   20910:	sub	sp, sp, #8
   20914:	str	r0, [sp]
   20918:	ldr	r0, [sp]
   2091c:	movw	r1, #0
   20920:	cmp	r0, r1
   20924:	beq	20938 <__assert_fail@plt+0xf0c4>
   20928:	ldr	r0, [sp]
   2092c:	bl	11658 <__freading@plt>
   20930:	cmp	r0, #0
   20934:	bne	20948 <__assert_fail@plt+0xf0d4>
   20938:	ldr	r0, [sp]
   2093c:	bl	114f0 <fflush@plt>
   20940:	str	r0, [sp, #4]
   20944:	b	2095c <__assert_fail@plt+0xf0e8>
   20948:	ldr	r0, [sp]
   2094c:	bl	20968 <__assert_fail@plt+0xf0f4>
   20950:	ldr	r0, [sp]
   20954:	bl	114f0 <fflush@plt>
   20958:	str	r0, [sp, #4]
   2095c:	ldr	r0, [sp, #4]
   20960:	mov	sp, fp
   20964:	pop	{fp, pc}
   20968:	push	{fp, lr}
   2096c:	mov	fp, sp
   20970:	sub	sp, sp, #16
   20974:	str	r0, [fp, #-4]
   20978:	ldr	r0, [fp, #-4]
   2097c:	ldr	r0, [r0]
   20980:	and	r0, r0, #256	; 0x100
   20984:	cmp	r0, #0
   20988:	beq	209b0 <__assert_fail@plt+0xf13c>
   2098c:	ldr	r0, [fp, #-4]
   20990:	mov	r1, sp
   20994:	mov	r2, #1
   20998:	str	r2, [r1]
   2099c:	mov	r1, #0
   209a0:	mov	r2, r1
   209a4:	mov	r3, r1
   209a8:	bl	209f8 <__assert_fail@plt+0xf184>
   209ac:	str	r0, [sp, #8]
   209b0:	mov	sp, fp
   209b4:	pop	{fp, pc}
   209b8:	push	{fp, lr}
   209bc:	mov	fp, sp
   209c0:	sub	sp, sp, #16
   209c4:	str	r0, [fp, #-4]
   209c8:	bl	11700 <__errno_location@plt>
   209cc:	ldr	r0, [r0]
   209d0:	str	r0, [sp, #8]
   209d4:	ldr	r0, [fp, #-4]
   209d8:	bl	11514 <free@plt>
   209dc:	ldr	r0, [sp, #8]
   209e0:	str	r0, [sp, #4]
   209e4:	bl	11700 <__errno_location@plt>
   209e8:	ldr	lr, [sp, #4]
   209ec:	str	lr, [r0]
   209f0:	mov	sp, fp
   209f4:	pop	{fp, pc}
   209f8:	push	{fp, lr}
   209fc:	mov	fp, sp
   20a00:	sub	sp, sp, #32
   20a04:	ldr	r1, [fp, #8]
   20a08:	str	r0, [fp, #-8]
   20a0c:	str	r3, [sp, #20]
   20a10:	str	r2, [sp, #16]
   20a14:	ldr	r0, [fp, #-8]
   20a18:	ldr	r0, [r0, #8]
   20a1c:	ldr	r2, [fp, #-8]
   20a20:	ldr	r2, [r2, #4]
   20a24:	cmp	r0, r2
   20a28:	str	r1, [sp, #4]
   20a2c:	bne	20ad8 <__assert_fail@plt+0xf264>
   20a30:	ldr	r0, [fp, #-8]
   20a34:	ldr	r0, [r0, #20]
   20a38:	ldr	r1, [fp, #-8]
   20a3c:	ldr	r1, [r1, #16]
   20a40:	cmp	r0, r1
   20a44:	bne	20ad8 <__assert_fail@plt+0xf264>
   20a48:	ldr	r0, [fp, #-8]
   20a4c:	ldr	r0, [r0, #36]	; 0x24
   20a50:	movw	r1, #0
   20a54:	cmp	r0, r1
   20a58:	bne	20ad8 <__assert_fail@plt+0xf264>
   20a5c:	ldr	r0, [fp, #-8]
   20a60:	bl	11724 <fileno@plt>
   20a64:	ldr	r2, [sp, #16]
   20a68:	ldr	r3, [sp, #20]
   20a6c:	ldr	lr, [fp, #8]
   20a70:	mov	r1, sp
   20a74:	str	lr, [r1]
   20a78:	bl	115c8 <lseek64@plt>
   20a7c:	str	r1, [sp, #12]
   20a80:	str	r0, [sp, #8]
   20a84:	ldr	r0, [sp, #8]
   20a88:	ldr	r1, [sp, #12]
   20a8c:	and	r0, r0, r1
   20a90:	cmn	r0, #1
   20a94:	bne	20aa8 <__assert_fail@plt+0xf234>
   20a98:	b	20a9c <__assert_fail@plt+0xf228>
   20a9c:	mvn	r0, #0
   20aa0:	str	r0, [fp, #-4]
   20aa4:	b	20af8 <__assert_fail@plt+0xf284>
   20aa8:	ldr	r0, [fp, #-8]
   20aac:	ldr	r1, [r0]
   20ab0:	bic	r1, r1, #16
   20ab4:	str	r1, [r0]
   20ab8:	ldr	r0, [sp, #8]
   20abc:	ldr	r1, [sp, #12]
   20ac0:	ldr	r2, [fp, #-8]
   20ac4:	str	r1, [r2, #84]	; 0x54
   20ac8:	str	r0, [r2, #80]	; 0x50
   20acc:	movw	r0, #0
   20ad0:	str	r0, [fp, #-4]
   20ad4:	b	20af8 <__assert_fail@plt+0xf284>
   20ad8:	ldr	r0, [fp, #-8]
   20adc:	ldr	r2, [sp, #16]
   20ae0:	ldr	r3, [sp, #20]
   20ae4:	ldr	r1, [fp, #8]
   20ae8:	mov	ip, sp
   20aec:	str	r1, [ip]
   20af0:	bl	11760 <fseeko64@plt>
   20af4:	str	r0, [fp, #-4]
   20af8:	ldr	r0, [fp, #-4]
   20afc:	mov	sp, fp
   20b00:	pop	{fp, pc}
   20b04:	push	{fp, lr}
   20b08:	mov	fp, sp
   20b0c:	bl	11700 <__errno_location@plt>
   20b10:	movw	lr, #12
   20b14:	str	lr, [r0]
   20b18:	movw	r0, #0
   20b1c:	pop	{fp, pc}
   20b20:	push	{fp, lr}
   20b24:	mov	fp, sp
   20b28:	sub	sp, sp, #8
   20b2c:	str	r0, [sp, #4]
   20b30:	ldr	r0, [sp, #4]
   20b34:	cmn	r0, #1
   20b38:	bhi	20b4c <__assert_fail@plt+0xf2d8>
   20b3c:	ldr	r0, [sp, #4]
   20b40:	bl	1faac <__assert_fail@plt+0xe238>
   20b44:	str	r0, [sp]
   20b48:	b	20b54 <__assert_fail@plt+0xf2e0>
   20b4c:	bl	20b04 <__assert_fail@plt+0xf290>
   20b50:	str	r0, [sp]
   20b54:	ldr	r0, [sp]
   20b58:	mov	sp, fp
   20b5c:	pop	{fp, pc}
   20b60:	push	{fp, lr}
   20b64:	mov	fp, sp
   20b68:	sub	sp, sp, #16
   20b6c:	str	r0, [fp, #-4]
   20b70:	str	r1, [sp, #8]
   20b74:	ldr	r0, [sp, #8]
   20b78:	cmn	r0, #1
   20b7c:	bhi	20bb4 <__assert_fail@plt+0xf340>
   20b80:	ldr	r0, [fp, #-4]
   20b84:	ldr	r1, [sp, #8]
   20b88:	ldr	r2, [sp, #8]
   20b8c:	cmp	r2, #0
   20b90:	movw	r2, #0
   20b94:	movne	r2, #1
   20b98:	mvn	r3, #0
   20b9c:	eor	r2, r2, r3
   20ba0:	and	r2, r2, #1
   20ba4:	orr	r1, r1, r2
   20ba8:	bl	1fb1c <__assert_fail@plt+0xe2a8>
   20bac:	str	r0, [sp, #4]
   20bb0:	b	20bbc <__assert_fail@plt+0xf348>
   20bb4:	bl	20b04 <__assert_fail@plt+0xf290>
   20bb8:	str	r0, [sp, #4]
   20bbc:	ldr	r0, [sp, #4]
   20bc0:	mov	sp, fp
   20bc4:	pop	{fp, pc}
   20bc8:	push	{fp, lr}
   20bcc:	mov	fp, sp
   20bd0:	sub	sp, sp, #16
   20bd4:	str	r0, [sp, #8]
   20bd8:	str	r1, [sp, #4]
   20bdc:	ldr	r0, [sp, #8]
   20be0:	mvn	r1, #0
   20be4:	cmp	r1, r0
   20be8:	bcs	20c0c <__assert_fail@plt+0xf398>
   20bec:	ldr	r0, [sp, #4]
   20bf0:	cmp	r0, #0
   20bf4:	beq	20c04 <__assert_fail@plt+0xf390>
   20bf8:	bl	20b04 <__assert_fail@plt+0xf290>
   20bfc:	str	r0, [fp, #-4]
   20c00:	b	20c4c <__assert_fail@plt+0xf3d8>
   20c04:	movw	r0, #0
   20c08:	str	r0, [sp, #8]
   20c0c:	ldr	r0, [sp, #4]
   20c10:	mvn	r1, #0
   20c14:	cmp	r1, r0
   20c18:	bcs	20c3c <__assert_fail@plt+0xf3c8>
   20c1c:	ldr	r0, [sp, #8]
   20c20:	cmp	r0, #0
   20c24:	beq	20c34 <__assert_fail@plt+0xf3c0>
   20c28:	bl	20b04 <__assert_fail@plt+0xf290>
   20c2c:	str	r0, [fp, #-4]
   20c30:	b	20c4c <__assert_fail@plt+0xf3d8>
   20c34:	movw	r0, #0
   20c38:	str	r0, [sp, #4]
   20c3c:	ldr	r0, [sp, #8]
   20c40:	ldr	r1, [sp, #4]
   20c44:	bl	1fa10 <__assert_fail@plt+0xe19c>
   20c48:	str	r0, [fp, #-4]
   20c4c:	ldr	r0, [fp, #-4]
   20c50:	mov	sp, fp
   20c54:	pop	{fp, pc}
   20c58:	push	{fp, lr}
   20c5c:	mov	fp, sp
   20c60:	sub	sp, sp, #16
   20c64:	str	r0, [fp, #-4]
   20c68:	str	r1, [sp, #8]
   20c6c:	str	r2, [sp, #4]
   20c70:	ldr	r0, [sp, #8]
   20c74:	cmp	r0, #0
   20c78:	beq	20c88 <__assert_fail@plt+0xf414>
   20c7c:	ldr	r0, [sp, #4]
   20c80:	cmp	r0, #0
   20c84:	bne	20c94 <__assert_fail@plt+0xf420>
   20c88:	movw	r0, #1
   20c8c:	str	r0, [sp, #4]
   20c90:	str	r0, [sp, #8]
   20c94:	ldr	r0, [sp, #8]
   20c98:	cmn	r0, #1
   20c9c:	bhi	20cc4 <__assert_fail@plt+0xf450>
   20ca0:	ldr	r0, [sp, #4]
   20ca4:	cmn	r0, #1
   20ca8:	bhi	20cc4 <__assert_fail@plt+0xf450>
   20cac:	ldr	r0, [fp, #-4]
   20cb0:	ldr	r1, [sp, #8]
   20cb4:	ldr	r2, [sp, #4]
   20cb8:	bl	20e8c <__assert_fail@plt+0xf618>
   20cbc:	str	r0, [sp]
   20cc0:	b	20ccc <__assert_fail@plt+0xf458>
   20cc4:	bl	20b04 <__assert_fail@plt+0xf290>
   20cc8:	str	r0, [sp]
   20ccc:	ldr	r0, [sp]
   20cd0:	mov	sp, fp
   20cd4:	pop	{fp, pc}
   20cd8:	push	{fp, lr}
   20cdc:	mov	fp, sp
   20ce0:	sub	sp, sp, #8
   20ce4:	movw	r0, #14
   20ce8:	bl	11790 <nl_langinfo@plt>
   20cec:	str	r0, [sp, #4]
   20cf0:	ldr	r0, [sp, #4]
   20cf4:	movw	lr, #0
   20cf8:	cmp	r0, lr
   20cfc:	bne	20d0c <__assert_fail@plt+0xf498>
   20d00:	movw	r0, #14971	; 0x3a7b
   20d04:	movt	r0, #2
   20d08:	str	r0, [sp, #4]
   20d0c:	ldr	r0, [sp, #4]
   20d10:	ldrb	r0, [r0]
   20d14:	cmp	r0, #0
   20d18:	bne	20d28 <__assert_fail@plt+0xf4b4>
   20d1c:	movw	r0, #18272	; 0x4760
   20d20:	movt	r0, #2
   20d24:	str	r0, [sp, #4]
   20d28:	ldr	r0, [sp, #4]
   20d2c:	mov	sp, fp
   20d30:	pop	{fp, pc}
   20d34:	push	{fp, lr}
   20d38:	mov	fp, sp
   20d3c:	sub	sp, sp, #32
   20d40:	str	r0, [fp, #-8]
   20d44:	str	r1, [fp, #-12]
   20d48:	str	r2, [sp, #16]
   20d4c:	str	r3, [sp, #12]
   20d50:	ldr	r0, [fp, #-8]
   20d54:	movw	r1, #0
   20d58:	cmp	r0, r1
   20d5c:	bne	20d68 <__assert_fail@plt+0xf4f4>
   20d60:	add	r0, sp, #4
   20d64:	str	r0, [fp, #-8]
   20d68:	ldr	r0, [fp, #-8]
   20d6c:	ldr	r1, [fp, #-12]
   20d70:	ldr	r2, [sp, #16]
   20d74:	ldr	r3, [sp, #12]
   20d78:	bl	11604 <mbrtowc@plt>
   20d7c:	str	r0, [sp, #8]
   20d80:	ldr	r0, [sp, #8]
   20d84:	mvn	r1, #1
   20d88:	cmp	r1, r0
   20d8c:	bhi	20dd0 <__assert_fail@plt+0xf55c>
   20d90:	ldr	r0, [sp, #16]
   20d94:	cmp	r0, #0
   20d98:	beq	20dd0 <__assert_fail@plt+0xf55c>
   20d9c:	movw	r0, #0
   20da0:	bl	22eb4 <__assert_fail@plt+0x11640>
   20da4:	tst	r0, #1
   20da8:	bne	20dd0 <__assert_fail@plt+0xf55c>
   20dac:	ldr	r0, [fp, #-12]
   20db0:	ldrb	r0, [r0]
   20db4:	strb	r0, [sp, #3]
   20db8:	ldrb	r0, [sp, #3]
   20dbc:	ldr	r1, [fp, #-8]
   20dc0:	str	r0, [r1]
   20dc4:	movw	r0, #1
   20dc8:	str	r0, [fp, #-4]
   20dcc:	b	20dd8 <__assert_fail@plt+0xf564>
   20dd0:	ldr	r0, [sp, #8]
   20dd4:	str	r0, [fp, #-4]
   20dd8:	ldr	r0, [fp, #-4]
   20ddc:	mov	sp, fp
   20de0:	pop	{fp, pc}
   20de4:	push	{fp, lr}
   20de8:	mov	fp, sp
   20dec:	sub	sp, sp, #16
   20df0:	str	r0, [fp, #-4]
   20df4:	movw	r0, #20840	; 0x5168
   20df8:	movt	r0, #3
   20dfc:	ldr	r0, [r0]
   20e00:	ldr	r1, [fp, #-4]
   20e04:	movw	r2, #18278	; 0x4766
   20e08:	movt	r2, #2
   20e0c:	str	r0, [sp, #8]
   20e10:	mov	r0, r2
   20e14:	str	r1, [sp, #4]
   20e18:	bl	116b8 <gettext@plt>
   20e1c:	ldr	r1, [sp, #8]
   20e20:	str	r0, [sp]
   20e24:	mov	r0, r1
   20e28:	ldr	r1, [sp, #4]
   20e2c:	ldr	r2, [sp]
   20e30:	bl	11610 <error@plt>
   20e34:	bl	11838 <abort@plt>
   20e38:	push	{fp, lr}
   20e3c:	mov	fp, sp
   20e40:	sub	sp, sp, #16
   20e44:	str	r0, [fp, #-4]
   20e48:	movw	r0, #20840	; 0x5168
   20e4c:	movt	r0, #3
   20e50:	ldr	r0, [r0]
   20e54:	ldr	r1, [fp, #-4]
   20e58:	movw	r2, #18321	; 0x4791
   20e5c:	movt	r2, #2
   20e60:	str	r0, [sp, #8]
   20e64:	mov	r0, r2
   20e68:	str	r1, [sp, #4]
   20e6c:	bl	116b8 <gettext@plt>
   20e70:	ldr	r1, [sp, #8]
   20e74:	str	r0, [sp]
   20e78:	mov	r0, r1
   20e7c:	ldr	r1, [sp, #4]
   20e80:	ldr	r2, [sp]
   20e84:	bl	11610 <error@plt>
   20e88:	bl	11838 <abort@plt>
   20e8c:	push	{fp, lr}
   20e90:	mov	fp, sp
   20e94:	sub	sp, sp, #176	; 0xb0
   20e98:	str	r0, [fp, #-8]
   20e9c:	str	r1, [fp, #-12]
   20ea0:	str	r2, [fp, #-16]
   20ea4:	b	2125c <__assert_fail@plt+0xf9e8>
   20ea8:	b	2107c <__assert_fail@plt+0xf808>
   20eac:	ldr	r0, [fp, #-16]
   20eb0:	cmp	r0, #0
   20eb4:	bcs	20fb8 <__assert_fail@plt+0xf744>
   20eb8:	ldr	r0, [fp, #-12]
   20ebc:	cmp	r0, #0
   20ec0:	bcs	20f48 <__assert_fail@plt+0xf6d4>
   20ec4:	b	20ee4 <__assert_fail@plt+0xf670>
   20ec8:	ldr	r0, [fp, #-12]
   20ecc:	ldr	r1, [fp, #-16]
   20ed0:	movw	r2, #127	; 0x7f
   20ed4:	udiv	r1, r2, r1
   20ed8:	cmp	r0, r1
   20edc:	bcc	2104c <__assert_fail@plt+0xf7d8>
   20ee0:	b	21064 <__assert_fail@plt+0xf7f0>
   20ee4:	b	20ef8 <__assert_fail@plt+0xf684>
   20ee8:	ldr	r0, [fp, #-16]
   20eec:	cmp	r0, #1
   20ef0:	bcc	20f08 <__assert_fail@plt+0xf694>
   20ef4:	b	20f14 <__assert_fail@plt+0xf6a0>
   20ef8:	ldr	r0, [fp, #-16]
   20efc:	movw	r1, #0
   20f00:	cmp	r1, r0
   20f04:	bcs	20f14 <__assert_fail@plt+0xf6a0>
   20f08:	movw	r0, #0
   20f0c:	str	r0, [fp, #-24]	; 0xffffffe8
   20f10:	b	20f2c <__assert_fail@plt+0xf6b8>
   20f14:	ldr	r0, [fp, #-16]
   20f18:	movw	r1, #0
   20f1c:	sub	r0, r1, r0
   20f20:	movw	r1, #127	; 0x7f
   20f24:	udiv	r0, r1, r0
   20f28:	str	r0, [fp, #-24]	; 0xffffffe8
   20f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20f30:	ldr	r1, [fp, #-12]
   20f34:	mvn	r2, #0
   20f38:	sub	r1, r2, r1
   20f3c:	cmp	r0, r1
   20f40:	bls	2104c <__assert_fail@plt+0xf7d8>
   20f44:	b	21064 <__assert_fail@plt+0xf7f0>
   20f48:	ldr	r0, [fp, #-16]
   20f4c:	cmn	r0, #1
   20f50:	bne	20f9c <__assert_fail@plt+0xf728>
   20f54:	b	20f74 <__assert_fail@plt+0xf700>
   20f58:	ldr	r0, [fp, #-12]
   20f5c:	mvn	r1, #127	; 0x7f
   20f60:	add	r0, r0, r1
   20f64:	movw	r1, #0
   20f68:	cmp	r1, r0
   20f6c:	bcc	2104c <__assert_fail@plt+0xf7d8>
   20f70:	b	21064 <__assert_fail@plt+0xf7f0>
   20f74:	ldr	r0, [fp, #-12]
   20f78:	movw	r1, #0
   20f7c:	cmp	r1, r0
   20f80:	bcs	21064 <__assert_fail@plt+0xf7f0>
   20f84:	ldr	r0, [fp, #-12]
   20f88:	sub	r0, r0, #1
   20f8c:	movw	r1, #127	; 0x7f
   20f90:	cmp	r1, r0
   20f94:	bcc	2104c <__assert_fail@plt+0xf7d8>
   20f98:	b	21064 <__assert_fail@plt+0xf7f0>
   20f9c:	ldr	r0, [fp, #-16]
   20fa0:	mvn	r1, #127	; 0x7f
   20fa4:	udiv	r0, r1, r0
   20fa8:	ldr	r1, [fp, #-12]
   20fac:	cmp	r0, r1
   20fb0:	bcc	2104c <__assert_fail@plt+0xf7d8>
   20fb4:	b	21064 <__assert_fail@plt+0xf7f0>
   20fb8:	ldr	r0, [fp, #-16]
   20fbc:	cmp	r0, #0
   20fc0:	bne	20fc8 <__assert_fail@plt+0xf754>
   20fc4:	b	21064 <__assert_fail@plt+0xf7f0>
   20fc8:	ldr	r0, [fp, #-12]
   20fcc:	cmp	r0, #0
   20fd0:	bcs	21034 <__assert_fail@plt+0xf7c0>
   20fd4:	ldr	r0, [fp, #-12]
   20fd8:	cmn	r0, #1
   20fdc:	bne	21018 <__assert_fail@plt+0xf7a4>
   20fe0:	b	21000 <__assert_fail@plt+0xf78c>
   20fe4:	ldr	r0, [fp, #-16]
   20fe8:	mvn	r1, #127	; 0x7f
   20fec:	add	r0, r0, r1
   20ff0:	movw	r1, #0
   20ff4:	cmp	r1, r0
   20ff8:	bcc	2104c <__assert_fail@plt+0xf7d8>
   20ffc:	b	21064 <__assert_fail@plt+0xf7f0>
   21000:	ldr	r0, [fp, #-16]
   21004:	sub	r0, r0, #1
   21008:	movw	r1, #127	; 0x7f
   2100c:	cmp	r1, r0
   21010:	bcc	2104c <__assert_fail@plt+0xf7d8>
   21014:	b	21064 <__assert_fail@plt+0xf7f0>
   21018:	ldr	r0, [fp, #-12]
   2101c:	mvn	r1, #127	; 0x7f
   21020:	udiv	r0, r1, r0
   21024:	ldr	r1, [fp, #-16]
   21028:	cmp	r0, r1
   2102c:	bcc	2104c <__assert_fail@plt+0xf7d8>
   21030:	b	21064 <__assert_fail@plt+0xf7f0>
   21034:	ldr	r0, [fp, #-16]
   21038:	movw	r1, #127	; 0x7f
   2103c:	udiv	r0, r1, r0
   21040:	ldr	r1, [fp, #-12]
   21044:	cmp	r0, r1
   21048:	bcs	21064 <__assert_fail@plt+0xf7f0>
   2104c:	ldr	r0, [fp, #-12]
   21050:	ldr	r1, [fp, #-16]
   21054:	mul	r0, r0, r1
   21058:	sxtb	r0, r0
   2105c:	str	r0, [fp, #-20]	; 0xffffffec
   21060:	b	221dc <__assert_fail@plt+0x10968>
   21064:	ldr	r0, [fp, #-12]
   21068:	ldr	r1, [fp, #-16]
   2106c:	mul	r0, r0, r1
   21070:	sxtb	r0, r0
   21074:	str	r0, [fp, #-20]	; 0xffffffec
   21078:	b	221f4 <__assert_fail@plt+0x10980>
   2107c:	ldr	r0, [fp, #-16]
   21080:	cmp	r0, #0
   21084:	bcs	21190 <__assert_fail@plt+0xf91c>
   21088:	ldr	r0, [fp, #-12]
   2108c:	cmp	r0, #0
   21090:	bcs	21118 <__assert_fail@plt+0xf8a4>
   21094:	b	210b4 <__assert_fail@plt+0xf840>
   21098:	ldr	r0, [fp, #-12]
   2109c:	ldr	r1, [fp, #-16]
   210a0:	movw	r2, #255	; 0xff
   210a4:	udiv	r1, r2, r1
   210a8:	cmp	r0, r1
   210ac:	bcc	2122c <__assert_fail@plt+0xf9b8>
   210b0:	b	21244 <__assert_fail@plt+0xf9d0>
   210b4:	b	210c8 <__assert_fail@plt+0xf854>
   210b8:	ldr	r0, [fp, #-16]
   210bc:	cmp	r0, #1
   210c0:	bcc	210d8 <__assert_fail@plt+0xf864>
   210c4:	b	210e4 <__assert_fail@plt+0xf870>
   210c8:	ldr	r0, [fp, #-16]
   210cc:	movw	r1, #0
   210d0:	cmp	r1, r0
   210d4:	bcs	210e4 <__assert_fail@plt+0xf870>
   210d8:	movw	r0, #0
   210dc:	str	r0, [fp, #-28]	; 0xffffffe4
   210e0:	b	210fc <__assert_fail@plt+0xf888>
   210e4:	ldr	r0, [fp, #-16]
   210e8:	movw	r1, #0
   210ec:	sub	r0, r1, r0
   210f0:	movw	r1, #255	; 0xff
   210f4:	udiv	r0, r1, r0
   210f8:	str	r0, [fp, #-28]	; 0xffffffe4
   210fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21100:	ldr	r1, [fp, #-12]
   21104:	mvn	r2, #0
   21108:	sub	r1, r2, r1
   2110c:	cmp	r0, r1
   21110:	bls	2122c <__assert_fail@plt+0xf9b8>
   21114:	b	21244 <__assert_fail@plt+0xf9d0>
   21118:	b	21120 <__assert_fail@plt+0xf8ac>
   2111c:	b	21124 <__assert_fail@plt+0xf8b0>
   21120:	b	21174 <__assert_fail@plt+0xf900>
   21124:	ldr	r0, [fp, #-16]
   21128:	cmn	r0, #1
   2112c:	bne	21174 <__assert_fail@plt+0xf900>
   21130:	b	2114c <__assert_fail@plt+0xf8d8>
   21134:	ldr	r0, [fp, #-12]
   21138:	add	r0, r0, #0
   2113c:	movw	r1, #0
   21140:	cmp	r1, r0
   21144:	bcc	2122c <__assert_fail@plt+0xf9b8>
   21148:	b	21244 <__assert_fail@plt+0xf9d0>
   2114c:	ldr	r0, [fp, #-12]
   21150:	movw	r1, #0
   21154:	cmp	r1, r0
   21158:	bcs	21244 <__assert_fail@plt+0xf9d0>
   2115c:	ldr	r0, [fp, #-12]
   21160:	sub	r0, r0, #1
   21164:	mvn	r1, #0
   21168:	cmp	r1, r0
   2116c:	bcc	2122c <__assert_fail@plt+0xf9b8>
   21170:	b	21244 <__assert_fail@plt+0xf9d0>
   21174:	ldr	r0, [fp, #-16]
   21178:	movw	r1, #0
   2117c:	udiv	r0, r1, r0
   21180:	ldr	r1, [fp, #-12]
   21184:	cmp	r0, r1
   21188:	bcc	2122c <__assert_fail@plt+0xf9b8>
   2118c:	b	21244 <__assert_fail@plt+0xf9d0>
   21190:	ldr	r0, [fp, #-16]
   21194:	cmp	r0, #0
   21198:	bne	211a0 <__assert_fail@plt+0xf92c>
   2119c:	b	21244 <__assert_fail@plt+0xf9d0>
   211a0:	ldr	r0, [fp, #-12]
   211a4:	cmp	r0, #0
   211a8:	bcs	21214 <__assert_fail@plt+0xf9a0>
   211ac:	b	211b4 <__assert_fail@plt+0xf940>
   211b0:	b	211b8 <__assert_fail@plt+0xf944>
   211b4:	b	211f8 <__assert_fail@plt+0xf984>
   211b8:	ldr	r0, [fp, #-12]
   211bc:	cmn	r0, #1
   211c0:	bne	211f8 <__assert_fail@plt+0xf984>
   211c4:	b	211e0 <__assert_fail@plt+0xf96c>
   211c8:	ldr	r0, [fp, #-16]
   211cc:	add	r0, r0, #0
   211d0:	movw	r1, #0
   211d4:	cmp	r1, r0
   211d8:	bcc	2122c <__assert_fail@plt+0xf9b8>
   211dc:	b	21244 <__assert_fail@plt+0xf9d0>
   211e0:	ldr	r0, [fp, #-16]
   211e4:	sub	r0, r0, #1
   211e8:	mvn	r1, #0
   211ec:	cmp	r1, r0
   211f0:	bcc	2122c <__assert_fail@plt+0xf9b8>
   211f4:	b	21244 <__assert_fail@plt+0xf9d0>
   211f8:	ldr	r0, [fp, #-12]
   211fc:	movw	r1, #0
   21200:	udiv	r0, r1, r0
   21204:	ldr	r1, [fp, #-16]
   21208:	cmp	r0, r1
   2120c:	bcc	2122c <__assert_fail@plt+0xf9b8>
   21210:	b	21244 <__assert_fail@plt+0xf9d0>
   21214:	ldr	r0, [fp, #-16]
   21218:	movw	r1, #255	; 0xff
   2121c:	udiv	r0, r1, r0
   21220:	ldr	r1, [fp, #-12]
   21224:	cmp	r0, r1
   21228:	bcs	21244 <__assert_fail@plt+0xf9d0>
   2122c:	ldr	r0, [fp, #-12]
   21230:	ldr	r1, [fp, #-16]
   21234:	mul	r0, r0, r1
   21238:	and	r0, r0, #255	; 0xff
   2123c:	str	r0, [fp, #-20]	; 0xffffffec
   21240:	b	221dc <__assert_fail@plt+0x10968>
   21244:	ldr	r0, [fp, #-12]
   21248:	ldr	r1, [fp, #-16]
   2124c:	mul	r0, r0, r1
   21250:	and	r0, r0, #255	; 0xff
   21254:	str	r0, [fp, #-20]	; 0xffffffec
   21258:	b	221f4 <__assert_fail@plt+0x10980>
   2125c:	b	21614 <__assert_fail@plt+0xfda0>
   21260:	b	21434 <__assert_fail@plt+0xfbc0>
   21264:	ldr	r0, [fp, #-16]
   21268:	cmp	r0, #0
   2126c:	bcs	21370 <__assert_fail@plt+0xfafc>
   21270:	ldr	r0, [fp, #-12]
   21274:	cmp	r0, #0
   21278:	bcs	21300 <__assert_fail@plt+0xfa8c>
   2127c:	b	2129c <__assert_fail@plt+0xfa28>
   21280:	ldr	r0, [fp, #-12]
   21284:	ldr	r1, [fp, #-16]
   21288:	movw	r2, #32767	; 0x7fff
   2128c:	udiv	r1, r2, r1
   21290:	cmp	r0, r1
   21294:	bcc	21404 <__assert_fail@plt+0xfb90>
   21298:	b	2141c <__assert_fail@plt+0xfba8>
   2129c:	b	212b0 <__assert_fail@plt+0xfa3c>
   212a0:	ldr	r0, [fp, #-16]
   212a4:	cmp	r0, #1
   212a8:	bcc	212c0 <__assert_fail@plt+0xfa4c>
   212ac:	b	212cc <__assert_fail@plt+0xfa58>
   212b0:	ldr	r0, [fp, #-16]
   212b4:	movw	r1, #0
   212b8:	cmp	r1, r0
   212bc:	bcs	212cc <__assert_fail@plt+0xfa58>
   212c0:	movw	r0, #0
   212c4:	str	r0, [fp, #-32]	; 0xffffffe0
   212c8:	b	212e4 <__assert_fail@plt+0xfa70>
   212cc:	ldr	r0, [fp, #-16]
   212d0:	movw	r1, #0
   212d4:	sub	r0, r1, r0
   212d8:	movw	r1, #32767	; 0x7fff
   212dc:	udiv	r0, r1, r0
   212e0:	str	r0, [fp, #-32]	; 0xffffffe0
   212e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   212e8:	ldr	r1, [fp, #-12]
   212ec:	mvn	r2, #0
   212f0:	sub	r1, r2, r1
   212f4:	cmp	r0, r1
   212f8:	bls	21404 <__assert_fail@plt+0xfb90>
   212fc:	b	2141c <__assert_fail@plt+0xfba8>
   21300:	ldr	r0, [fp, #-16]
   21304:	cmn	r0, #1
   21308:	bne	21354 <__assert_fail@plt+0xfae0>
   2130c:	b	2132c <__assert_fail@plt+0xfab8>
   21310:	ldr	r0, [pc, #3840]	; 22218 <__assert_fail@plt+0x109a4>
   21314:	ldr	r1, [fp, #-12]
   21318:	add	r0, r1, r0
   2131c:	movw	r1, #0
   21320:	cmp	r1, r0
   21324:	bcc	21404 <__assert_fail@plt+0xfb90>
   21328:	b	2141c <__assert_fail@plt+0xfba8>
   2132c:	ldr	r0, [fp, #-12]
   21330:	movw	r1, #0
   21334:	cmp	r1, r0
   21338:	bcs	2141c <__assert_fail@plt+0xfba8>
   2133c:	ldr	r0, [fp, #-12]
   21340:	sub	r0, r0, #1
   21344:	movw	r1, #32767	; 0x7fff
   21348:	cmp	r1, r0
   2134c:	bcc	21404 <__assert_fail@plt+0xfb90>
   21350:	b	2141c <__assert_fail@plt+0xfba8>
   21354:	ldr	r0, [pc, #3772]	; 22218 <__assert_fail@plt+0x109a4>
   21358:	ldr	r1, [fp, #-16]
   2135c:	udiv	r0, r0, r1
   21360:	ldr	r1, [fp, #-12]
   21364:	cmp	r0, r1
   21368:	bcc	21404 <__assert_fail@plt+0xfb90>
   2136c:	b	2141c <__assert_fail@plt+0xfba8>
   21370:	ldr	r0, [fp, #-16]
   21374:	cmp	r0, #0
   21378:	bne	21380 <__assert_fail@plt+0xfb0c>
   2137c:	b	2141c <__assert_fail@plt+0xfba8>
   21380:	ldr	r0, [fp, #-12]
   21384:	cmp	r0, #0
   21388:	bcs	213ec <__assert_fail@plt+0xfb78>
   2138c:	ldr	r0, [fp, #-12]
   21390:	cmn	r0, #1
   21394:	bne	213d0 <__assert_fail@plt+0xfb5c>
   21398:	b	213b8 <__assert_fail@plt+0xfb44>
   2139c:	ldr	r0, [pc, #3700]	; 22218 <__assert_fail@plt+0x109a4>
   213a0:	ldr	r1, [fp, #-16]
   213a4:	add	r0, r1, r0
   213a8:	movw	r1, #0
   213ac:	cmp	r1, r0
   213b0:	bcc	21404 <__assert_fail@plt+0xfb90>
   213b4:	b	2141c <__assert_fail@plt+0xfba8>
   213b8:	ldr	r0, [fp, #-16]
   213bc:	sub	r0, r0, #1
   213c0:	movw	r1, #32767	; 0x7fff
   213c4:	cmp	r1, r0
   213c8:	bcc	21404 <__assert_fail@plt+0xfb90>
   213cc:	b	2141c <__assert_fail@plt+0xfba8>
   213d0:	ldr	r0, [pc, #3648]	; 22218 <__assert_fail@plt+0x109a4>
   213d4:	ldr	r1, [fp, #-12]
   213d8:	udiv	r0, r0, r1
   213dc:	ldr	r1, [fp, #-16]
   213e0:	cmp	r0, r1
   213e4:	bcc	21404 <__assert_fail@plt+0xfb90>
   213e8:	b	2141c <__assert_fail@plt+0xfba8>
   213ec:	ldr	r0, [fp, #-16]
   213f0:	movw	r1, #32767	; 0x7fff
   213f4:	udiv	r0, r1, r0
   213f8:	ldr	r1, [fp, #-12]
   213fc:	cmp	r0, r1
   21400:	bcs	2141c <__assert_fail@plt+0xfba8>
   21404:	ldr	r0, [fp, #-12]
   21408:	ldr	r1, [fp, #-16]
   2140c:	mul	r0, r0, r1
   21410:	sxth	r0, r0
   21414:	str	r0, [fp, #-20]	; 0xffffffec
   21418:	b	221dc <__assert_fail@plt+0x10968>
   2141c:	ldr	r0, [fp, #-12]
   21420:	ldr	r1, [fp, #-16]
   21424:	mul	r0, r0, r1
   21428:	sxth	r0, r0
   2142c:	str	r0, [fp, #-20]	; 0xffffffec
   21430:	b	221f4 <__assert_fail@plt+0x10980>
   21434:	ldr	r0, [fp, #-16]
   21438:	cmp	r0, #0
   2143c:	bcs	21548 <__assert_fail@plt+0xfcd4>
   21440:	ldr	r0, [fp, #-12]
   21444:	cmp	r0, #0
   21448:	bcs	214d0 <__assert_fail@plt+0xfc5c>
   2144c:	b	2146c <__assert_fail@plt+0xfbf8>
   21450:	ldr	r0, [fp, #-12]
   21454:	ldr	r1, [fp, #-16]
   21458:	movw	r2, #65535	; 0xffff
   2145c:	udiv	r1, r2, r1
   21460:	cmp	r0, r1
   21464:	bcc	215e4 <__assert_fail@plt+0xfd70>
   21468:	b	215fc <__assert_fail@plt+0xfd88>
   2146c:	b	21480 <__assert_fail@plt+0xfc0c>
   21470:	ldr	r0, [fp, #-16]
   21474:	cmp	r0, #1
   21478:	bcc	21490 <__assert_fail@plt+0xfc1c>
   2147c:	b	2149c <__assert_fail@plt+0xfc28>
   21480:	ldr	r0, [fp, #-16]
   21484:	movw	r1, #0
   21488:	cmp	r1, r0
   2148c:	bcs	2149c <__assert_fail@plt+0xfc28>
   21490:	movw	r0, #0
   21494:	str	r0, [fp, #-36]	; 0xffffffdc
   21498:	b	214b4 <__assert_fail@plt+0xfc40>
   2149c:	ldr	r0, [fp, #-16]
   214a0:	movw	r1, #0
   214a4:	sub	r0, r1, r0
   214a8:	movw	r1, #65535	; 0xffff
   214ac:	udiv	r0, r1, r0
   214b0:	str	r0, [fp, #-36]	; 0xffffffdc
   214b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   214b8:	ldr	r1, [fp, #-12]
   214bc:	mvn	r2, #0
   214c0:	sub	r1, r2, r1
   214c4:	cmp	r0, r1
   214c8:	bls	215e4 <__assert_fail@plt+0xfd70>
   214cc:	b	215fc <__assert_fail@plt+0xfd88>
   214d0:	b	214d8 <__assert_fail@plt+0xfc64>
   214d4:	b	214dc <__assert_fail@plt+0xfc68>
   214d8:	b	2152c <__assert_fail@plt+0xfcb8>
   214dc:	ldr	r0, [fp, #-16]
   214e0:	cmn	r0, #1
   214e4:	bne	2152c <__assert_fail@plt+0xfcb8>
   214e8:	b	21504 <__assert_fail@plt+0xfc90>
   214ec:	ldr	r0, [fp, #-12]
   214f0:	add	r0, r0, #0
   214f4:	movw	r1, #0
   214f8:	cmp	r1, r0
   214fc:	bcc	215e4 <__assert_fail@plt+0xfd70>
   21500:	b	215fc <__assert_fail@plt+0xfd88>
   21504:	ldr	r0, [fp, #-12]
   21508:	movw	r1, #0
   2150c:	cmp	r1, r0
   21510:	bcs	215fc <__assert_fail@plt+0xfd88>
   21514:	ldr	r0, [fp, #-12]
   21518:	sub	r0, r0, #1
   2151c:	mvn	r1, #0
   21520:	cmp	r1, r0
   21524:	bcc	215e4 <__assert_fail@plt+0xfd70>
   21528:	b	215fc <__assert_fail@plt+0xfd88>
   2152c:	ldr	r0, [fp, #-16]
   21530:	movw	r1, #0
   21534:	udiv	r0, r1, r0
   21538:	ldr	r1, [fp, #-12]
   2153c:	cmp	r0, r1
   21540:	bcc	215e4 <__assert_fail@plt+0xfd70>
   21544:	b	215fc <__assert_fail@plt+0xfd88>
   21548:	ldr	r0, [fp, #-16]
   2154c:	cmp	r0, #0
   21550:	bne	21558 <__assert_fail@plt+0xfce4>
   21554:	b	215fc <__assert_fail@plt+0xfd88>
   21558:	ldr	r0, [fp, #-12]
   2155c:	cmp	r0, #0
   21560:	bcs	215cc <__assert_fail@plt+0xfd58>
   21564:	b	2156c <__assert_fail@plt+0xfcf8>
   21568:	b	21570 <__assert_fail@plt+0xfcfc>
   2156c:	b	215b0 <__assert_fail@plt+0xfd3c>
   21570:	ldr	r0, [fp, #-12]
   21574:	cmn	r0, #1
   21578:	bne	215b0 <__assert_fail@plt+0xfd3c>
   2157c:	b	21598 <__assert_fail@plt+0xfd24>
   21580:	ldr	r0, [fp, #-16]
   21584:	add	r0, r0, #0
   21588:	movw	r1, #0
   2158c:	cmp	r1, r0
   21590:	bcc	215e4 <__assert_fail@plt+0xfd70>
   21594:	b	215fc <__assert_fail@plt+0xfd88>
   21598:	ldr	r0, [fp, #-16]
   2159c:	sub	r0, r0, #1
   215a0:	mvn	r1, #0
   215a4:	cmp	r1, r0
   215a8:	bcc	215e4 <__assert_fail@plt+0xfd70>
   215ac:	b	215fc <__assert_fail@plt+0xfd88>
   215b0:	ldr	r0, [fp, #-12]
   215b4:	movw	r1, #0
   215b8:	udiv	r0, r1, r0
   215bc:	ldr	r1, [fp, #-16]
   215c0:	cmp	r0, r1
   215c4:	bcc	215e4 <__assert_fail@plt+0xfd70>
   215c8:	b	215fc <__assert_fail@plt+0xfd88>
   215cc:	ldr	r0, [fp, #-16]
   215d0:	movw	r1, #65535	; 0xffff
   215d4:	udiv	r0, r1, r0
   215d8:	ldr	r1, [fp, #-12]
   215dc:	cmp	r0, r1
   215e0:	bcs	215fc <__assert_fail@plt+0xfd88>
   215e4:	ldr	r0, [fp, #-12]
   215e8:	ldr	r1, [fp, #-16]
   215ec:	mul	r0, r0, r1
   215f0:	uxth	r0, r0
   215f4:	str	r0, [fp, #-20]	; 0xffffffec
   215f8:	b	221dc <__assert_fail@plt+0x10968>
   215fc:	ldr	r0, [fp, #-12]
   21600:	ldr	r1, [fp, #-16]
   21604:	mul	r0, r0, r1
   21608:	uxth	r0, r0
   2160c:	str	r0, [fp, #-20]	; 0xffffffec
   21610:	b	221f4 <__assert_fail@plt+0x10980>
   21614:	b	21618 <__assert_fail@plt+0xfda4>
   21618:	b	217dc <__assert_fail@plt+0xff68>
   2161c:	ldr	r0, [fp, #-16]
   21620:	cmp	r0, #0
   21624:	bcs	21724 <__assert_fail@plt+0xfeb0>
   21628:	ldr	r0, [fp, #-12]
   2162c:	cmp	r0, #0
   21630:	bcs	216b8 <__assert_fail@plt+0xfe44>
   21634:	b	21654 <__assert_fail@plt+0xfde0>
   21638:	ldr	r0, [pc, #3024]	; 22210 <__assert_fail@plt+0x1099c>
   2163c:	ldr	r1, [fp, #-12]
   21640:	ldr	r2, [fp, #-16]
   21644:	udiv	r0, r0, r2
   21648:	cmp	r1, r0
   2164c:	bcc	217b4 <__assert_fail@plt+0xff40>
   21650:	b	217c8 <__assert_fail@plt+0xff54>
   21654:	b	21668 <__assert_fail@plt+0xfdf4>
   21658:	ldr	r0, [fp, #-16]
   2165c:	cmp	r0, #1
   21660:	bcc	21678 <__assert_fail@plt+0xfe04>
   21664:	b	21684 <__assert_fail@plt+0xfe10>
   21668:	ldr	r0, [fp, #-16]
   2166c:	movw	r1, #0
   21670:	cmp	r1, r0
   21674:	bcs	21684 <__assert_fail@plt+0xfe10>
   21678:	movw	r0, #0
   2167c:	str	r0, [fp, #-40]	; 0xffffffd8
   21680:	b	2169c <__assert_fail@plt+0xfe28>
   21684:	ldr	r0, [pc, #2948]	; 22210 <__assert_fail@plt+0x1099c>
   21688:	ldr	r1, [fp, #-16]
   2168c:	movw	r2, #0
   21690:	sub	r1, r2, r1
   21694:	udiv	r0, r0, r1
   21698:	str	r0, [fp, #-40]	; 0xffffffd8
   2169c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   216a0:	ldr	r1, [fp, #-12]
   216a4:	mvn	r2, #0
   216a8:	sub	r1, r2, r1
   216ac:	cmp	r0, r1
   216b0:	bls	217b4 <__assert_fail@plt+0xff40>
   216b4:	b	217c8 <__assert_fail@plt+0xff54>
   216b8:	ldr	r0, [fp, #-16]
   216bc:	cmn	r0, #1
   216c0:	bne	21708 <__assert_fail@plt+0xfe94>
   216c4:	b	216e0 <__assert_fail@plt+0xfe6c>
   216c8:	ldr	r0, [fp, #-12]
   216cc:	add	r0, r0, #-2147483648	; 0x80000000
   216d0:	movw	r1, #0
   216d4:	cmp	r1, r0
   216d8:	bcc	217b4 <__assert_fail@plt+0xff40>
   216dc:	b	217c8 <__assert_fail@plt+0xff54>
   216e0:	ldr	r0, [fp, #-12]
   216e4:	movw	r1, #0
   216e8:	cmp	r1, r0
   216ec:	bcs	217c8 <__assert_fail@plt+0xff54>
   216f0:	ldr	r0, [pc, #2840]	; 22210 <__assert_fail@plt+0x1099c>
   216f4:	ldr	r1, [fp, #-12]
   216f8:	sub	r1, r1, #1
   216fc:	cmp	r0, r1
   21700:	bcc	217b4 <__assert_fail@plt+0xff40>
   21704:	b	217c8 <__assert_fail@plt+0xff54>
   21708:	ldr	r0, [pc, #2820]	; 22214 <__assert_fail@plt+0x109a0>
   2170c:	ldr	r1, [fp, #-16]
   21710:	udiv	r0, r0, r1
   21714:	ldr	r1, [fp, #-12]
   21718:	cmp	r0, r1
   2171c:	bcc	217b4 <__assert_fail@plt+0xff40>
   21720:	b	217c8 <__assert_fail@plt+0xff54>
   21724:	ldr	r0, [fp, #-16]
   21728:	cmp	r0, #0
   2172c:	bne	21734 <__assert_fail@plt+0xfec0>
   21730:	b	217c8 <__assert_fail@plt+0xff54>
   21734:	ldr	r0, [fp, #-12]
   21738:	cmp	r0, #0
   2173c:	bcs	2179c <__assert_fail@plt+0xff28>
   21740:	ldr	r0, [fp, #-12]
   21744:	cmn	r0, #1
   21748:	bne	21780 <__assert_fail@plt+0xff0c>
   2174c:	b	21768 <__assert_fail@plt+0xfef4>
   21750:	ldr	r0, [fp, #-16]
   21754:	add	r0, r0, #-2147483648	; 0x80000000
   21758:	movw	r1, #0
   2175c:	cmp	r1, r0
   21760:	bcc	217b4 <__assert_fail@plt+0xff40>
   21764:	b	217c8 <__assert_fail@plt+0xff54>
   21768:	ldr	r0, [pc, #2720]	; 22210 <__assert_fail@plt+0x1099c>
   2176c:	ldr	r1, [fp, #-16]
   21770:	sub	r1, r1, #1
   21774:	cmp	r0, r1
   21778:	bcc	217b4 <__assert_fail@plt+0xff40>
   2177c:	b	217c8 <__assert_fail@plt+0xff54>
   21780:	ldr	r0, [pc, #2700]	; 22214 <__assert_fail@plt+0x109a0>
   21784:	ldr	r1, [fp, #-12]
   21788:	udiv	r0, r0, r1
   2178c:	ldr	r1, [fp, #-16]
   21790:	cmp	r0, r1
   21794:	bcc	217b4 <__assert_fail@plt+0xff40>
   21798:	b	217c8 <__assert_fail@plt+0xff54>
   2179c:	ldr	r0, [pc, #2668]	; 22210 <__assert_fail@plt+0x1099c>
   217a0:	ldr	r1, [fp, #-16]
   217a4:	udiv	r0, r0, r1
   217a8:	ldr	r1, [fp, #-12]
   217ac:	cmp	r0, r1
   217b0:	bcs	217c8 <__assert_fail@plt+0xff54>
   217b4:	ldr	r0, [fp, #-12]
   217b8:	ldr	r1, [fp, #-16]
   217bc:	mul	r0, r0, r1
   217c0:	str	r0, [fp, #-20]	; 0xffffffec
   217c4:	b	221dc <__assert_fail@plt+0x10968>
   217c8:	ldr	r0, [fp, #-12]
   217cc:	ldr	r1, [fp, #-16]
   217d0:	mul	r0, r0, r1
   217d4:	str	r0, [fp, #-20]	; 0xffffffec
   217d8:	b	221f4 <__assert_fail@plt+0x10980>
   217dc:	ldr	r0, [fp, #-16]
   217e0:	cmp	r0, #0
   217e4:	bcs	218f0 <__assert_fail@plt+0x1007c>
   217e8:	ldr	r0, [fp, #-12]
   217ec:	cmp	r0, #0
   217f0:	bcs	21878 <__assert_fail@plt+0x10004>
   217f4:	b	21814 <__assert_fail@plt+0xffa0>
   217f8:	ldr	r0, [fp, #-12]
   217fc:	ldr	r1, [fp, #-16]
   21800:	mvn	r2, #0
   21804:	udiv	r1, r2, r1
   21808:	cmp	r0, r1
   2180c:	bcc	2198c <__assert_fail@plt+0x10118>
   21810:	b	219a0 <__assert_fail@plt+0x1012c>
   21814:	b	21828 <__assert_fail@plt+0xffb4>
   21818:	ldr	r0, [fp, #-16]
   2181c:	cmp	r0, #1
   21820:	bcc	21838 <__assert_fail@plt+0xffc4>
   21824:	b	21844 <__assert_fail@plt+0xffd0>
   21828:	ldr	r0, [fp, #-16]
   2182c:	movw	r1, #0
   21830:	cmp	r1, r0
   21834:	bcs	21844 <__assert_fail@plt+0xffd0>
   21838:	movw	r0, #1
   2183c:	str	r0, [fp, #-44]	; 0xffffffd4
   21840:	b	2185c <__assert_fail@plt+0xffe8>
   21844:	ldr	r0, [fp, #-16]
   21848:	movw	r1, #0
   2184c:	sub	r0, r1, r0
   21850:	mvn	r1, #0
   21854:	udiv	r0, r1, r0
   21858:	str	r0, [fp, #-44]	; 0xffffffd4
   2185c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21860:	ldr	r1, [fp, #-12]
   21864:	mvn	r2, #0
   21868:	sub	r1, r2, r1
   2186c:	cmp	r0, r1
   21870:	bls	2198c <__assert_fail@plt+0x10118>
   21874:	b	219a0 <__assert_fail@plt+0x1012c>
   21878:	b	21880 <__assert_fail@plt+0x1000c>
   2187c:	b	21884 <__assert_fail@plt+0x10010>
   21880:	b	218d4 <__assert_fail@plt+0x10060>
   21884:	ldr	r0, [fp, #-16]
   21888:	cmn	r0, #1
   2188c:	bne	218d4 <__assert_fail@plt+0x10060>
   21890:	b	218ac <__assert_fail@plt+0x10038>
   21894:	ldr	r0, [fp, #-12]
   21898:	add	r0, r0, #0
   2189c:	movw	r1, #0
   218a0:	cmp	r1, r0
   218a4:	bcc	2198c <__assert_fail@plt+0x10118>
   218a8:	b	219a0 <__assert_fail@plt+0x1012c>
   218ac:	ldr	r0, [fp, #-12]
   218b0:	movw	r1, #0
   218b4:	cmp	r1, r0
   218b8:	bcs	219a0 <__assert_fail@plt+0x1012c>
   218bc:	ldr	r0, [fp, #-12]
   218c0:	sub	r0, r0, #1
   218c4:	mvn	r1, #0
   218c8:	cmp	r1, r0
   218cc:	bcc	2198c <__assert_fail@plt+0x10118>
   218d0:	b	219a0 <__assert_fail@plt+0x1012c>
   218d4:	ldr	r0, [fp, #-16]
   218d8:	movw	r1, #0
   218dc:	udiv	r0, r1, r0
   218e0:	ldr	r1, [fp, #-12]
   218e4:	cmp	r0, r1
   218e8:	bcc	2198c <__assert_fail@plt+0x10118>
   218ec:	b	219a0 <__assert_fail@plt+0x1012c>
   218f0:	ldr	r0, [fp, #-16]
   218f4:	cmp	r0, #0
   218f8:	bne	21900 <__assert_fail@plt+0x1008c>
   218fc:	b	219a0 <__assert_fail@plt+0x1012c>
   21900:	ldr	r0, [fp, #-12]
   21904:	cmp	r0, #0
   21908:	bcs	21974 <__assert_fail@plt+0x10100>
   2190c:	b	21914 <__assert_fail@plt+0x100a0>
   21910:	b	21918 <__assert_fail@plt+0x100a4>
   21914:	b	21958 <__assert_fail@plt+0x100e4>
   21918:	ldr	r0, [fp, #-12]
   2191c:	cmn	r0, #1
   21920:	bne	21958 <__assert_fail@plt+0x100e4>
   21924:	b	21940 <__assert_fail@plt+0x100cc>
   21928:	ldr	r0, [fp, #-16]
   2192c:	add	r0, r0, #0
   21930:	movw	r1, #0
   21934:	cmp	r1, r0
   21938:	bcc	2198c <__assert_fail@plt+0x10118>
   2193c:	b	219a0 <__assert_fail@plt+0x1012c>
   21940:	ldr	r0, [fp, #-16]
   21944:	sub	r0, r0, #1
   21948:	mvn	r1, #0
   2194c:	cmp	r1, r0
   21950:	bcc	2198c <__assert_fail@plt+0x10118>
   21954:	b	219a0 <__assert_fail@plt+0x1012c>
   21958:	ldr	r0, [fp, #-12]
   2195c:	movw	r1, #0
   21960:	udiv	r0, r1, r0
   21964:	ldr	r1, [fp, #-16]
   21968:	cmp	r0, r1
   2196c:	bcc	2198c <__assert_fail@plt+0x10118>
   21970:	b	219a0 <__assert_fail@plt+0x1012c>
   21974:	ldr	r0, [fp, #-16]
   21978:	mvn	r1, #0
   2197c:	udiv	r0, r1, r0
   21980:	ldr	r1, [fp, #-12]
   21984:	cmp	r0, r1
   21988:	bcs	219a0 <__assert_fail@plt+0x1012c>
   2198c:	ldr	r0, [fp, #-12]
   21990:	ldr	r1, [fp, #-16]
   21994:	mul	r0, r0, r1
   21998:	str	r0, [fp, #-20]	; 0xffffffec
   2199c:	b	221dc <__assert_fail@plt+0x10968>
   219a0:	ldr	r0, [fp, #-12]
   219a4:	ldr	r1, [fp, #-16]
   219a8:	mul	r0, r0, r1
   219ac:	str	r0, [fp, #-20]	; 0xffffffec
   219b0:	b	221f4 <__assert_fail@plt+0x10980>
   219b4:	b	219b8 <__assert_fail@plt+0x10144>
   219b8:	b	21b7c <__assert_fail@plt+0x10308>
   219bc:	ldr	r0, [fp, #-16]
   219c0:	cmp	r0, #0
   219c4:	bcs	21ac4 <__assert_fail@plt+0x10250>
   219c8:	ldr	r0, [fp, #-12]
   219cc:	cmp	r0, #0
   219d0:	bcs	21a58 <__assert_fail@plt+0x101e4>
   219d4:	b	219f4 <__assert_fail@plt+0x10180>
   219d8:	ldr	r0, [pc, #2096]	; 22210 <__assert_fail@plt+0x1099c>
   219dc:	ldr	r1, [fp, #-12]
   219e0:	ldr	r2, [fp, #-16]
   219e4:	udiv	r0, r0, r2
   219e8:	cmp	r1, r0
   219ec:	bcc	21b54 <__assert_fail@plt+0x102e0>
   219f0:	b	21b68 <__assert_fail@plt+0x102f4>
   219f4:	b	21a08 <__assert_fail@plt+0x10194>
   219f8:	ldr	r0, [fp, #-16]
   219fc:	cmp	r0, #1
   21a00:	bcc	21a18 <__assert_fail@plt+0x101a4>
   21a04:	b	21a24 <__assert_fail@plt+0x101b0>
   21a08:	ldr	r0, [fp, #-16]
   21a0c:	movw	r1, #0
   21a10:	cmp	r1, r0
   21a14:	bcs	21a24 <__assert_fail@plt+0x101b0>
   21a18:	movw	r0, #0
   21a1c:	str	r0, [fp, #-48]	; 0xffffffd0
   21a20:	b	21a3c <__assert_fail@plt+0x101c8>
   21a24:	ldr	r0, [pc, #2020]	; 22210 <__assert_fail@plt+0x1099c>
   21a28:	ldr	r1, [fp, #-16]
   21a2c:	movw	r2, #0
   21a30:	sub	r1, r2, r1
   21a34:	udiv	r0, r0, r1
   21a38:	str	r0, [fp, #-48]	; 0xffffffd0
   21a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21a40:	ldr	r1, [fp, #-12]
   21a44:	mvn	r2, #0
   21a48:	sub	r1, r2, r1
   21a4c:	cmp	r0, r1
   21a50:	bls	21b54 <__assert_fail@plt+0x102e0>
   21a54:	b	21b68 <__assert_fail@plt+0x102f4>
   21a58:	ldr	r0, [fp, #-16]
   21a5c:	cmn	r0, #1
   21a60:	bne	21aa8 <__assert_fail@plt+0x10234>
   21a64:	b	21a80 <__assert_fail@plt+0x1020c>
   21a68:	ldr	r0, [fp, #-12]
   21a6c:	add	r0, r0, #-2147483648	; 0x80000000
   21a70:	movw	r1, #0
   21a74:	cmp	r1, r0
   21a78:	bcc	21b54 <__assert_fail@plt+0x102e0>
   21a7c:	b	21b68 <__assert_fail@plt+0x102f4>
   21a80:	ldr	r0, [fp, #-12]
   21a84:	movw	r1, #0
   21a88:	cmp	r1, r0
   21a8c:	bcs	21b68 <__assert_fail@plt+0x102f4>
   21a90:	ldr	r0, [pc, #1912]	; 22210 <__assert_fail@plt+0x1099c>
   21a94:	ldr	r1, [fp, #-12]
   21a98:	sub	r1, r1, #1
   21a9c:	cmp	r0, r1
   21aa0:	bcc	21b54 <__assert_fail@plt+0x102e0>
   21aa4:	b	21b68 <__assert_fail@plt+0x102f4>
   21aa8:	ldr	r0, [pc, #1892]	; 22214 <__assert_fail@plt+0x109a0>
   21aac:	ldr	r1, [fp, #-16]
   21ab0:	udiv	r0, r0, r1
   21ab4:	ldr	r1, [fp, #-12]
   21ab8:	cmp	r0, r1
   21abc:	bcc	21b54 <__assert_fail@plt+0x102e0>
   21ac0:	b	21b68 <__assert_fail@plt+0x102f4>
   21ac4:	ldr	r0, [fp, #-16]
   21ac8:	cmp	r0, #0
   21acc:	bne	21ad4 <__assert_fail@plt+0x10260>
   21ad0:	b	21b68 <__assert_fail@plt+0x102f4>
   21ad4:	ldr	r0, [fp, #-12]
   21ad8:	cmp	r0, #0
   21adc:	bcs	21b3c <__assert_fail@plt+0x102c8>
   21ae0:	ldr	r0, [fp, #-12]
   21ae4:	cmn	r0, #1
   21ae8:	bne	21b20 <__assert_fail@plt+0x102ac>
   21aec:	b	21b08 <__assert_fail@plt+0x10294>
   21af0:	ldr	r0, [fp, #-16]
   21af4:	add	r0, r0, #-2147483648	; 0x80000000
   21af8:	movw	r1, #0
   21afc:	cmp	r1, r0
   21b00:	bcc	21b54 <__assert_fail@plt+0x102e0>
   21b04:	b	21b68 <__assert_fail@plt+0x102f4>
   21b08:	ldr	r0, [pc, #1792]	; 22210 <__assert_fail@plt+0x1099c>
   21b0c:	ldr	r1, [fp, #-16]
   21b10:	sub	r1, r1, #1
   21b14:	cmp	r0, r1
   21b18:	bcc	21b54 <__assert_fail@plt+0x102e0>
   21b1c:	b	21b68 <__assert_fail@plt+0x102f4>
   21b20:	ldr	r0, [pc, #1772]	; 22214 <__assert_fail@plt+0x109a0>
   21b24:	ldr	r1, [fp, #-12]
   21b28:	udiv	r0, r0, r1
   21b2c:	ldr	r1, [fp, #-16]
   21b30:	cmp	r0, r1
   21b34:	bcc	21b54 <__assert_fail@plt+0x102e0>
   21b38:	b	21b68 <__assert_fail@plt+0x102f4>
   21b3c:	ldr	r0, [pc, #1740]	; 22210 <__assert_fail@plt+0x1099c>
   21b40:	ldr	r1, [fp, #-16]
   21b44:	udiv	r0, r0, r1
   21b48:	ldr	r1, [fp, #-12]
   21b4c:	cmp	r0, r1
   21b50:	bcs	21b68 <__assert_fail@plt+0x102f4>
   21b54:	ldr	r0, [fp, #-12]
   21b58:	ldr	r1, [fp, #-16]
   21b5c:	mul	r0, r0, r1
   21b60:	str	r0, [fp, #-20]	; 0xffffffec
   21b64:	b	221dc <__assert_fail@plt+0x10968>
   21b68:	ldr	r0, [fp, #-12]
   21b6c:	ldr	r1, [fp, #-16]
   21b70:	mul	r0, r0, r1
   21b74:	str	r0, [fp, #-20]	; 0xffffffec
   21b78:	b	221f4 <__assert_fail@plt+0x10980>
   21b7c:	ldr	r0, [fp, #-16]
   21b80:	cmp	r0, #0
   21b84:	bcs	21c90 <__assert_fail@plt+0x1041c>
   21b88:	ldr	r0, [fp, #-12]
   21b8c:	cmp	r0, #0
   21b90:	bcs	21c18 <__assert_fail@plt+0x103a4>
   21b94:	b	21bb4 <__assert_fail@plt+0x10340>
   21b98:	ldr	r0, [fp, #-12]
   21b9c:	ldr	r1, [fp, #-16]
   21ba0:	mvn	r2, #0
   21ba4:	udiv	r1, r2, r1
   21ba8:	cmp	r0, r1
   21bac:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21bb0:	b	21d40 <__assert_fail@plt+0x104cc>
   21bb4:	b	21bc8 <__assert_fail@plt+0x10354>
   21bb8:	ldr	r0, [fp, #-16]
   21bbc:	cmp	r0, #1
   21bc0:	bcc	21bd8 <__assert_fail@plt+0x10364>
   21bc4:	b	21be4 <__assert_fail@plt+0x10370>
   21bc8:	ldr	r0, [fp, #-16]
   21bcc:	movw	r1, #0
   21bd0:	cmp	r1, r0
   21bd4:	bcs	21be4 <__assert_fail@plt+0x10370>
   21bd8:	movw	r0, #1
   21bdc:	str	r0, [fp, #-52]	; 0xffffffcc
   21be0:	b	21bfc <__assert_fail@plt+0x10388>
   21be4:	ldr	r0, [fp, #-16]
   21be8:	movw	r1, #0
   21bec:	sub	r0, r1, r0
   21bf0:	mvn	r1, #0
   21bf4:	udiv	r0, r1, r0
   21bf8:	str	r0, [fp, #-52]	; 0xffffffcc
   21bfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21c00:	ldr	r1, [fp, #-12]
   21c04:	mvn	r2, #0
   21c08:	sub	r1, r2, r1
   21c0c:	cmp	r0, r1
   21c10:	bls	21d2c <__assert_fail@plt+0x104b8>
   21c14:	b	21d40 <__assert_fail@plt+0x104cc>
   21c18:	b	21c20 <__assert_fail@plt+0x103ac>
   21c1c:	b	21c24 <__assert_fail@plt+0x103b0>
   21c20:	b	21c74 <__assert_fail@plt+0x10400>
   21c24:	ldr	r0, [fp, #-16]
   21c28:	cmn	r0, #1
   21c2c:	bne	21c74 <__assert_fail@plt+0x10400>
   21c30:	b	21c4c <__assert_fail@plt+0x103d8>
   21c34:	ldr	r0, [fp, #-12]
   21c38:	add	r0, r0, #0
   21c3c:	movw	r1, #0
   21c40:	cmp	r1, r0
   21c44:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21c48:	b	21d40 <__assert_fail@plt+0x104cc>
   21c4c:	ldr	r0, [fp, #-12]
   21c50:	movw	r1, #0
   21c54:	cmp	r1, r0
   21c58:	bcs	21d40 <__assert_fail@plt+0x104cc>
   21c5c:	ldr	r0, [fp, #-12]
   21c60:	sub	r0, r0, #1
   21c64:	mvn	r1, #0
   21c68:	cmp	r1, r0
   21c6c:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21c70:	b	21d40 <__assert_fail@plt+0x104cc>
   21c74:	ldr	r0, [fp, #-16]
   21c78:	movw	r1, #0
   21c7c:	udiv	r0, r1, r0
   21c80:	ldr	r1, [fp, #-12]
   21c84:	cmp	r0, r1
   21c88:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21c8c:	b	21d40 <__assert_fail@plt+0x104cc>
   21c90:	ldr	r0, [fp, #-16]
   21c94:	cmp	r0, #0
   21c98:	bne	21ca0 <__assert_fail@plt+0x1042c>
   21c9c:	b	21d40 <__assert_fail@plt+0x104cc>
   21ca0:	ldr	r0, [fp, #-12]
   21ca4:	cmp	r0, #0
   21ca8:	bcs	21d14 <__assert_fail@plt+0x104a0>
   21cac:	b	21cb4 <__assert_fail@plt+0x10440>
   21cb0:	b	21cb8 <__assert_fail@plt+0x10444>
   21cb4:	b	21cf8 <__assert_fail@plt+0x10484>
   21cb8:	ldr	r0, [fp, #-12]
   21cbc:	cmn	r0, #1
   21cc0:	bne	21cf8 <__assert_fail@plt+0x10484>
   21cc4:	b	21ce0 <__assert_fail@plt+0x1046c>
   21cc8:	ldr	r0, [fp, #-16]
   21ccc:	add	r0, r0, #0
   21cd0:	movw	r1, #0
   21cd4:	cmp	r1, r0
   21cd8:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21cdc:	b	21d40 <__assert_fail@plt+0x104cc>
   21ce0:	ldr	r0, [fp, #-16]
   21ce4:	sub	r0, r0, #1
   21ce8:	mvn	r1, #0
   21cec:	cmp	r1, r0
   21cf0:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21cf4:	b	21d40 <__assert_fail@plt+0x104cc>
   21cf8:	ldr	r0, [fp, #-12]
   21cfc:	movw	r1, #0
   21d00:	udiv	r0, r1, r0
   21d04:	ldr	r1, [fp, #-16]
   21d08:	cmp	r0, r1
   21d0c:	bcc	21d2c <__assert_fail@plt+0x104b8>
   21d10:	b	21d40 <__assert_fail@plt+0x104cc>
   21d14:	ldr	r0, [fp, #-16]
   21d18:	mvn	r1, #0
   21d1c:	udiv	r0, r1, r0
   21d20:	ldr	r1, [fp, #-12]
   21d24:	cmp	r0, r1
   21d28:	bcs	21d40 <__assert_fail@plt+0x104cc>
   21d2c:	ldr	r0, [fp, #-12]
   21d30:	ldr	r1, [fp, #-16]
   21d34:	mul	r0, r0, r1
   21d38:	str	r0, [fp, #-20]	; 0xffffffec
   21d3c:	b	221dc <__assert_fail@plt+0x10968>
   21d40:	ldr	r0, [fp, #-12]
   21d44:	ldr	r1, [fp, #-16]
   21d48:	mul	r0, r0, r1
   21d4c:	str	r0, [fp, #-20]	; 0xffffffec
   21d50:	b	221f4 <__assert_fail@plt+0x10980>
   21d54:	b	21fa8 <__assert_fail@plt+0x10734>
   21d58:	ldr	r0, [fp, #-16]
   21d5c:	cmp	r0, #0
   21d60:	bcs	21ec0 <__assert_fail@plt+0x1064c>
   21d64:	ldr	r0, [fp, #-12]
   21d68:	cmp	r0, #0
   21d6c:	bcs	21e3c <__assert_fail@plt+0x105c8>
   21d70:	b	21d74 <__assert_fail@plt+0x10500>
   21d74:	ldr	r0, [fp, #-12]
   21d78:	ldr	r2, [fp, #-16]
   21d7c:	mvn	r1, #0
   21d80:	mvn	r3, #-2147483648	; 0x80000000
   21d84:	mov	ip, #0
   21d88:	str	r0, [fp, #-56]	; 0xffffffc8
   21d8c:	mov	r0, r1
   21d90:	mov	r1, r3
   21d94:	mov	r3, ip
   21d98:	bl	23180 <__assert_fail@plt+0x1190c>
   21d9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21da0:	subs	r0, r2, r0
   21da4:	rscs	r1, r1, #0
   21da8:	str	r0, [fp, #-60]	; 0xffffffc4
   21dac:	str	r1, [fp, #-64]	; 0xffffffc0
   21db0:	blt	21f80 <__assert_fail@plt+0x1070c>
   21db4:	b	21f94 <__assert_fail@plt+0x10720>
   21db8:	b	21dcc <__assert_fail@plt+0x10558>
   21dbc:	ldr	r0, [fp, #-16]
   21dc0:	cmp	r0, #1
   21dc4:	bcc	21ddc <__assert_fail@plt+0x10568>
   21dc8:	b	21df0 <__assert_fail@plt+0x1057c>
   21dcc:	ldr	r0, [fp, #-16]
   21dd0:	movw	r1, #0
   21dd4:	cmp	r1, r0
   21dd8:	bcs	21df0 <__assert_fail@plt+0x1057c>
   21ddc:	mov	r0, #0
   21de0:	mvn	r1, #0
   21de4:	str	r1, [fp, #-68]	; 0xffffffbc
   21de8:	str	r0, [fp, #-72]	; 0xffffffb8
   21dec:	b	21e14 <__assert_fail@plt+0x105a0>
   21df0:	ldr	r0, [fp, #-16]
   21df4:	rsb	r2, r0, #0
   21df8:	mvn	r0, #0
   21dfc:	mvn	r1, #-2147483648	; 0x80000000
   21e00:	mov	r3, #0
   21e04:	bl	23180 <__assert_fail@plt+0x1190c>
   21e08:	str	r0, [fp, #-68]	; 0xffffffbc
   21e0c:	str	r1, [fp, #-72]	; 0xffffffb8
   21e10:	b	21e14 <__assert_fail@plt+0x105a0>
   21e14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   21e18:	ldr	r1, [fp, #-68]	; 0xffffffbc
   21e1c:	ldr	r2, [fp, #-12]
   21e20:	mvn	r2, r2
   21e24:	subs	r1, r2, r1
   21e28:	rscs	r0, r0, #0
   21e2c:	str	r1, [fp, #-76]	; 0xffffffb4
   21e30:	str	r0, [fp, #-80]	; 0xffffffb0
   21e34:	bge	21f80 <__assert_fail@plt+0x1070c>
   21e38:	b	21f94 <__assert_fail@plt+0x10720>
   21e3c:	ldr	r0, [fp, #-16]
   21e40:	cmn	r0, #1
   21e44:	bne	21e8c <__assert_fail@plt+0x10618>
   21e48:	b	21e6c <__assert_fail@plt+0x105f8>
   21e4c:	ldr	r0, [fp, #-12]
   21e50:	rsbs	r0, r0, #0
   21e54:	mov	r1, #0
   21e58:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21e5c:	str	r0, [fp, #-84]	; 0xffffffac
   21e60:	str	r1, [sp, #88]	; 0x58
   21e64:	blt	21f80 <__assert_fail@plt+0x1070c>
   21e68:	b	21f94 <__assert_fail@plt+0x10720>
   21e6c:	ldr	r0, [fp, #-12]
   21e70:	movw	r1, #0
   21e74:	cmp	r1, r0
   21e78:	bcs	21f94 <__assert_fail@plt+0x10720>
   21e7c:	mov	r0, #0
   21e80:	cmp	r0, #0
   21e84:	bne	21f80 <__assert_fail@plt+0x1070c>
   21e88:	b	21f94 <__assert_fail@plt+0x10720>
   21e8c:	ldr	r2, [fp, #-16]
   21e90:	mov	r1, #-2147483648	; 0x80000000
   21e94:	mov	r0, #0
   21e98:	str	r0, [sp, #84]	; 0x54
   21e9c:	ldr	r3, [sp, #84]	; 0x54
   21ea0:	bl	230ac <__assert_fail@plt+0x11838>
   21ea4:	ldr	r2, [fp, #-12]
   21ea8:	subs	r0, r0, r2
   21eac:	sbcs	r1, r1, #0
   21eb0:	str	r0, [sp, #80]	; 0x50
   21eb4:	str	r1, [sp, #76]	; 0x4c
   21eb8:	blt	21f80 <__assert_fail@plt+0x1070c>
   21ebc:	b	21f94 <__assert_fail@plt+0x10720>
   21ec0:	ldr	r0, [fp, #-16]
   21ec4:	cmp	r0, #0
   21ec8:	bne	21ed0 <__assert_fail@plt+0x1065c>
   21ecc:	b	21f94 <__assert_fail@plt+0x10720>
   21ed0:	ldr	r0, [fp, #-12]
   21ed4:	cmp	r0, #0
   21ed8:	bcs	21f50 <__assert_fail@plt+0x106dc>
   21edc:	ldr	r0, [fp, #-12]
   21ee0:	cmn	r0, #1
   21ee4:	bne	21f1c <__assert_fail@plt+0x106a8>
   21ee8:	b	21f0c <__assert_fail@plt+0x10698>
   21eec:	ldr	r0, [fp, #-16]
   21ef0:	rsbs	r0, r0, #0
   21ef4:	mov	r1, #0
   21ef8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21efc:	str	r0, [sp, #72]	; 0x48
   21f00:	str	r1, [sp, #68]	; 0x44
   21f04:	blt	21f80 <__assert_fail@plt+0x1070c>
   21f08:	b	21f94 <__assert_fail@plt+0x10720>
   21f0c:	mov	r0, #0
   21f10:	cmp	r0, #0
   21f14:	bne	21f80 <__assert_fail@plt+0x1070c>
   21f18:	b	21f94 <__assert_fail@plt+0x10720>
   21f1c:	ldr	r2, [fp, #-12]
   21f20:	mov	r1, #-2147483648	; 0x80000000
   21f24:	mov	r0, #0
   21f28:	str	r0, [sp, #64]	; 0x40
   21f2c:	ldr	r3, [sp, #64]	; 0x40
   21f30:	bl	230ac <__assert_fail@plt+0x11838>
   21f34:	ldr	r2, [fp, #-16]
   21f38:	subs	r0, r0, r2
   21f3c:	sbcs	r1, r1, #0
   21f40:	str	r0, [sp, #60]	; 0x3c
   21f44:	str	r1, [sp, #56]	; 0x38
   21f48:	blt	21f80 <__assert_fail@plt+0x1070c>
   21f4c:	b	21f94 <__assert_fail@plt+0x10720>
   21f50:	ldr	r2, [fp, #-16]
   21f54:	mvn	r0, #0
   21f58:	mvn	r1, #-2147483648	; 0x80000000
   21f5c:	mov	r3, #0
   21f60:	bl	23180 <__assert_fail@plt+0x1190c>
   21f64:	ldr	r2, [fp, #-12]
   21f68:	subs	r0, r0, r2
   21f6c:	sbcs	r1, r1, #0
   21f70:	str	r0, [sp, #52]	; 0x34
   21f74:	str	r1, [sp, #48]	; 0x30
   21f78:	bge	21f94 <__assert_fail@plt+0x10720>
   21f7c:	b	21f80 <__assert_fail@plt+0x1070c>
   21f80:	ldr	r0, [fp, #-12]
   21f84:	ldr	r1, [fp, #-16]
   21f88:	mul	r0, r0, r1
   21f8c:	str	r0, [fp, #-20]	; 0xffffffec
   21f90:	b	221dc <__assert_fail@plt+0x10968>
   21f94:	ldr	r0, [fp, #-12]
   21f98:	ldr	r1, [fp, #-16]
   21f9c:	mul	r0, r0, r1
   21fa0:	str	r0, [fp, #-20]	; 0xffffffec
   21fa4:	b	221f4 <__assert_fail@plt+0x10980>
   21fa8:	ldr	r0, [fp, #-16]
   21fac:	cmp	r0, #0
   21fb0:	bcs	220fc <__assert_fail@plt+0x10888>
   21fb4:	ldr	r0, [fp, #-12]
   21fb8:	cmp	r0, #0
   21fbc:	bcs	22084 <__assert_fail@plt+0x10810>
   21fc0:	b	21ffc <__assert_fail@plt+0x10788>
   21fc4:	ldr	r0, [fp, #-12]
   21fc8:	ldr	r2, [fp, #-16]
   21fcc:	mvn	r1, #0
   21fd0:	mov	r3, #0
   21fd4:	str	r0, [sp, #44]	; 0x2c
   21fd8:	mov	r0, r1
   21fdc:	bl	23180 <__assert_fail@plt+0x1190c>
   21fe0:	ldr	r2, [sp, #44]	; 0x2c
   21fe4:	subs	r0, r2, r0
   21fe8:	rscs	r1, r1, #0
   21fec:	str	r0, [sp, #40]	; 0x28
   21ff0:	str	r1, [sp, #36]	; 0x24
   21ff4:	bcc	221b4 <__assert_fail@plt+0x10940>
   21ff8:	b	221c8 <__assert_fail@plt+0x10954>
   21ffc:	b	22010 <__assert_fail@plt+0x1079c>
   22000:	ldr	r0, [fp, #-16]
   22004:	cmp	r0, #1
   22008:	bcc	22020 <__assert_fail@plt+0x107ac>
   2200c:	b	22034 <__assert_fail@plt+0x107c0>
   22010:	ldr	r0, [fp, #-16]
   22014:	movw	r1, #0
   22018:	cmp	r1, r0
   2201c:	bcs	22034 <__assert_fail@plt+0x107c0>
   22020:	mov	r0, #1
   22024:	mvn	r1, #0
   22028:	str	r1, [sp, #32]
   2202c:	str	r0, [sp, #28]
   22030:	b	2205c <__assert_fail@plt+0x107e8>
   22034:	ldr	r0, [fp, #-16]
   22038:	rsb	r2, r0, #0
   2203c:	mvn	r0, #0
   22040:	mov	r3, #0
   22044:	str	r0, [sp, #24]
   22048:	ldr	r1, [sp, #24]
   2204c:	bl	23180 <__assert_fail@plt+0x1190c>
   22050:	str	r0, [sp, #32]
   22054:	str	r1, [sp, #28]
   22058:	b	2205c <__assert_fail@plt+0x107e8>
   2205c:	ldr	r0, [sp, #28]
   22060:	ldr	r1, [sp, #32]
   22064:	ldr	r2, [fp, #-12]
   22068:	mvn	r2, r2
   2206c:	subs	r1, r2, r1
   22070:	rscs	r0, r0, #0
   22074:	str	r1, [sp, #20]
   22078:	str	r0, [sp, #16]
   2207c:	bcs	221b4 <__assert_fail@plt+0x10940>
   22080:	b	221c8 <__assert_fail@plt+0x10954>
   22084:	b	2208c <__assert_fail@plt+0x10818>
   22088:	b	22090 <__assert_fail@plt+0x1081c>
   2208c:	b	220e0 <__assert_fail@plt+0x1086c>
   22090:	ldr	r0, [fp, #-16]
   22094:	cmn	r0, #1
   22098:	bne	220e0 <__assert_fail@plt+0x1086c>
   2209c:	b	220b8 <__assert_fail@plt+0x10844>
   220a0:	ldr	r0, [fp, #-12]
   220a4:	add	r0, r0, #0
   220a8:	movw	r1, #0
   220ac:	cmp	r1, r0
   220b0:	bcc	221b4 <__assert_fail@plt+0x10940>
   220b4:	b	221c8 <__assert_fail@plt+0x10954>
   220b8:	ldr	r0, [fp, #-12]
   220bc:	movw	r1, #0
   220c0:	cmp	r1, r0
   220c4:	bcs	221c8 <__assert_fail@plt+0x10954>
   220c8:	ldr	r0, [fp, #-12]
   220cc:	sub	r0, r0, #1
   220d0:	mvn	r1, #0
   220d4:	cmp	r1, r0
   220d8:	bcc	221b4 <__assert_fail@plt+0x10940>
   220dc:	b	221c8 <__assert_fail@plt+0x10954>
   220e0:	ldr	r0, [fp, #-16]
   220e4:	movw	r1, #0
   220e8:	udiv	r0, r1, r0
   220ec:	ldr	r1, [fp, #-12]
   220f0:	cmp	r0, r1
   220f4:	bcc	221b4 <__assert_fail@plt+0x10940>
   220f8:	b	221c8 <__assert_fail@plt+0x10954>
   220fc:	ldr	r0, [fp, #-16]
   22100:	cmp	r0, #0
   22104:	bne	2210c <__assert_fail@plt+0x10898>
   22108:	b	221c8 <__assert_fail@plt+0x10954>
   2210c:	ldr	r0, [fp, #-12]
   22110:	cmp	r0, #0
   22114:	bcs	22180 <__assert_fail@plt+0x1090c>
   22118:	b	22120 <__assert_fail@plt+0x108ac>
   2211c:	b	22124 <__assert_fail@plt+0x108b0>
   22120:	b	22164 <__assert_fail@plt+0x108f0>
   22124:	ldr	r0, [fp, #-12]
   22128:	cmn	r0, #1
   2212c:	bne	22164 <__assert_fail@plt+0x108f0>
   22130:	b	2214c <__assert_fail@plt+0x108d8>
   22134:	ldr	r0, [fp, #-16]
   22138:	add	r0, r0, #0
   2213c:	movw	r1, #0
   22140:	cmp	r1, r0
   22144:	bcc	221b4 <__assert_fail@plt+0x10940>
   22148:	b	221c8 <__assert_fail@plt+0x10954>
   2214c:	ldr	r0, [fp, #-16]
   22150:	sub	r0, r0, #1
   22154:	mvn	r1, #0
   22158:	cmp	r1, r0
   2215c:	bcc	221b4 <__assert_fail@plt+0x10940>
   22160:	b	221c8 <__assert_fail@plt+0x10954>
   22164:	ldr	r0, [fp, #-12]
   22168:	movw	r1, #0
   2216c:	udiv	r0, r1, r0
   22170:	ldr	r1, [fp, #-16]
   22174:	cmp	r0, r1
   22178:	bcc	221b4 <__assert_fail@plt+0x10940>
   2217c:	b	221c8 <__assert_fail@plt+0x10954>
   22180:	ldr	r2, [fp, #-16]
   22184:	mvn	r0, #0
   22188:	mov	r3, #0
   2218c:	str	r0, [sp, #12]
   22190:	ldr	r1, [sp, #12]
   22194:	bl	23180 <__assert_fail@plt+0x1190c>
   22198:	ldr	r2, [fp, #-12]
   2219c:	subs	r0, r0, r2
   221a0:	sbcs	r1, r1, #0
   221a4:	str	r0, [sp, #8]
   221a8:	str	r1, [sp, #4]
   221ac:	bcs	221c8 <__assert_fail@plt+0x10954>
   221b0:	b	221b4 <__assert_fail@plt+0x10940>
   221b4:	ldr	r0, [fp, #-12]
   221b8:	ldr	r1, [fp, #-16]
   221bc:	mul	r0, r0, r1
   221c0:	str	r0, [fp, #-20]	; 0xffffffec
   221c4:	b	221dc <__assert_fail@plt+0x10968>
   221c8:	ldr	r0, [fp, #-12]
   221cc:	ldr	r1, [fp, #-16]
   221d0:	mul	r0, r0, r1
   221d4:	str	r0, [fp, #-20]	; 0xffffffec
   221d8:	b	221f4 <__assert_fail@plt+0x10980>
   221dc:	bl	11700 <__errno_location@plt>
   221e0:	movw	lr, #12
   221e4:	str	lr, [r0]
   221e8:	movw	r0, #0
   221ec:	str	r0, [fp, #-4]
   221f0:	b	22204 <__assert_fail@plt+0x10990>
   221f4:	ldr	r0, [fp, #-8]
   221f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   221fc:	bl	1fb1c <__assert_fail@plt+0xe2a8>
   22200:	str	r0, [fp, #-4]
   22204:	ldr	r0, [fp, #-4]
   22208:	mov	sp, fp
   2220c:	pop	{fp, pc}
   22210:	svcvc	0x00ffffff
   22214:	andhi	r0, r0, r0
   22218:			; <UNDEFINED> instruction: 0xffff8000
   2221c:	push	{fp, lr}
   22220:	mov	fp, sp
   22224:	sub	sp, sp, #16
   22228:	ldr	r1, [pc, #132]	; 222b4 <__assert_fail@plt+0x10a40>
   2222c:	str	r0, [sp, #8]
   22230:	ldr	r0, [sp, #8]
   22234:	movw	r2, #0
   22238:	str	r2, [r0, #4]
   2223c:	movw	r0, #16799	; 0x419f
   22240:	movt	r0, #2
   22244:	bl	20884 <__assert_fail@plt+0xf010>
   22248:	ldr	r1, [sp, #8]
   2224c:	str	r0, [r1]
   22250:	ldr	r0, [sp, #8]
   22254:	ldr	r0, [r0]
   22258:	cmp	r0, #0
   2225c:	bge	222a0 <__assert_fail@plt+0x10a2c>
   22260:	movw	r0, #0
   22264:	str	r0, [sp, #4]
   22268:	ldr	r1, [sp, #4]
   2226c:	bl	11694 <getcwd@plt>
   22270:	ldr	r1, [sp, #8]
   22274:	str	r0, [r1, #4]
   22278:	ldr	r0, [sp, #8]
   2227c:	ldr	r0, [r0, #4]
   22280:	movw	r1, #0
   22284:	cmp	r0, r1
   22288:	movw	r0, #0
   2228c:	movne	r0, #1
   22290:	tst	r0, #1
   22294:	mvneq	r1, #0
   22298:	str	r1, [fp, #-4]
   2229c:	b	222a8 <__assert_fail@plt+0x10a34>
   222a0:	movw	r0, #0
   222a4:	str	r0, [fp, #-4]
   222a8:	ldr	r0, [fp, #-4]
   222ac:	mov	sp, fp
   222b0:	pop	{fp, pc}
   222b4:	andeq	r0, r8, r0
   222b8:	push	{fp, lr}
   222bc:	mov	fp, sp
   222c0:	sub	sp, sp, #8
   222c4:	str	r0, [sp]
   222c8:	ldr	r0, [sp]
   222cc:	ldr	r0, [r0]
   222d0:	movw	r1, #0
   222d4:	cmp	r1, r0
   222d8:	bgt	222f0 <__assert_fail@plt+0x10a7c>
   222dc:	ldr	r0, [sp]
   222e0:	ldr	r0, [r0]
   222e4:	bl	117cc <fchdir@plt>
   222e8:	str	r0, [sp, #4]
   222ec:	b	22300 <__assert_fail@plt+0x10a8c>
   222f0:	ldr	r0, [sp]
   222f4:	ldr	r0, [r0, #4]
   222f8:	bl	229b8 <__assert_fail@plt+0x11144>
   222fc:	str	r0, [sp, #4]
   22300:	ldr	r0, [sp, #4]
   22304:	mov	sp, fp
   22308:	pop	{fp, pc}
   2230c:	push	{fp, lr}
   22310:	mov	fp, sp
   22314:	sub	sp, sp, #8
   22318:	str	r0, [sp, #4]
   2231c:	ldr	r0, [sp, #4]
   22320:	ldr	r0, [r0]
   22324:	cmp	r0, #0
   22328:	blt	2233c <__assert_fail@plt+0x10ac8>
   2232c:	ldr	r0, [sp, #4]
   22330:	ldr	r0, [r0]
   22334:	bl	11844 <close@plt>
   22338:	str	r0, [sp]
   2233c:	ldr	r0, [sp, #4]
   22340:	ldr	r0, [r0, #4]
   22344:	bl	209b8 <__assert_fail@plt+0xf144>
   22348:	mov	sp, fp
   2234c:	pop	{fp, pc}
   22350:	push	{fp, lr}
   22354:	mov	fp, sp
   22358:	sub	sp, sp, #8
   2235c:	str	r0, [sp, #4]
   22360:	ldr	r0, [sp, #4]
   22364:	movw	r1, #0
   22368:	movw	r2, #3
   2236c:	bl	204a4 <__assert_fail@plt+0xec30>
   22370:	mov	sp, fp
   22374:	pop	{fp, pc}
   22378:	sub	sp, sp, #12
   2237c:	str	r0, [sp, #4]
   22380:	ldr	r0, [sp, #4]
   22384:	sub	r1, r0, #48	; 0x30
   22388:	cmp	r1, #10
   2238c:	str	r0, [sp]
   22390:	bcc	223c0 <__assert_fail@plt+0x10b4c>
   22394:	b	22398 <__assert_fail@plt+0x10b24>
   22398:	ldr	r0, [sp]
   2239c:	sub	r1, r0, #65	; 0x41
   223a0:	cmp	r1, #26
   223a4:	bcc	223c0 <__assert_fail@plt+0x10b4c>
   223a8:	b	223ac <__assert_fail@plt+0x10b38>
   223ac:	ldr	r0, [sp]
   223b0:	sub	r1, r0, #97	; 0x61
   223b4:	cmp	r1, #25
   223b8:	bhi	223d0 <__assert_fail@plt+0x10b5c>
   223bc:	b	223c0 <__assert_fail@plt+0x10b4c>
   223c0:	movw	r0, #1
   223c4:	and	r0, r0, #1
   223c8:	strb	r0, [sp, #11]
   223cc:	b	223dc <__assert_fail@plt+0x10b68>
   223d0:	movw	r0, #0
   223d4:	and	r0, r0, #1
   223d8:	strb	r0, [sp, #11]
   223dc:	ldrb	r0, [sp, #11]
   223e0:	and	r0, r0, #1
   223e4:	add	sp, sp, #12
   223e8:	bx	lr
   223ec:	sub	sp, sp, #12
   223f0:	str	r0, [sp, #4]
   223f4:	ldr	r0, [sp, #4]
   223f8:	sub	r1, r0, #65	; 0x41
   223fc:	cmp	r1, #26
   22400:	str	r0, [sp]
   22404:	bcc	22420 <__assert_fail@plt+0x10bac>
   22408:	b	2240c <__assert_fail@plt+0x10b98>
   2240c:	ldr	r0, [sp]
   22410:	sub	r1, r0, #97	; 0x61
   22414:	cmp	r1, #25
   22418:	bhi	22430 <__assert_fail@plt+0x10bbc>
   2241c:	b	22420 <__assert_fail@plt+0x10bac>
   22420:	movw	r0, #1
   22424:	and	r0, r0, #1
   22428:	strb	r0, [sp, #11]
   2242c:	b	2243c <__assert_fail@plt+0x10bc8>
   22430:	movw	r0, #0
   22434:	and	r0, r0, #1
   22438:	strb	r0, [sp, #11]
   2243c:	ldrb	r0, [sp, #11]
   22440:	and	r0, r0, #1
   22444:	add	sp, sp, #12
   22448:	bx	lr
   2244c:	sub	sp, sp, #8
   22450:	str	r0, [sp]
   22454:	ldr	r0, [sp]
   22458:	cmp	r0, #127	; 0x7f
   2245c:	bhi	22474 <__assert_fail@plt+0x10c00>
   22460:	b	22464 <__assert_fail@plt+0x10bf0>
   22464:	movw	r0, #1
   22468:	and	r0, r0, #1
   2246c:	strb	r0, [sp, #7]
   22470:	b	22480 <__assert_fail@plt+0x10c0c>
   22474:	movw	r0, #0
   22478:	and	r0, r0, #1
   2247c:	strb	r0, [sp, #7]
   22480:	ldrb	r0, [sp, #7]
   22484:	and	r0, r0, #1
   22488:	add	sp, sp, #8
   2248c:	bx	lr
   22490:	sub	sp, sp, #8
   22494:	str	r0, [sp, #4]
   22498:	ldr	r0, [sp, #4]
   2249c:	cmp	r0, #32
   224a0:	movw	r0, #1
   224a4:	str	r0, [sp]
   224a8:	beq	224c0 <__assert_fail@plt+0x10c4c>
   224ac:	ldr	r0, [sp, #4]
   224b0:	cmp	r0, #9
   224b4:	movw	r0, #0
   224b8:	moveq	r0, #1
   224bc:	str	r0, [sp]
   224c0:	ldr	r0, [sp]
   224c4:	and	r0, r0, #1
   224c8:	add	sp, sp, #8
   224cc:	bx	lr
   224d0:	sub	sp, sp, #12
   224d4:	str	r0, [sp, #4]
   224d8:	ldr	r0, [sp, #4]
   224dc:	cmp	r0, #32
   224e0:	str	r0, [sp]
   224e4:	bcc	224fc <__assert_fail@plt+0x10c88>
   224e8:	b	224ec <__assert_fail@plt+0x10c78>
   224ec:	ldr	r0, [sp]
   224f0:	cmp	r0, #127	; 0x7f
   224f4:	bne	2250c <__assert_fail@plt+0x10c98>
   224f8:	b	224fc <__assert_fail@plt+0x10c88>
   224fc:	movw	r0, #1
   22500:	and	r0, r0, #1
   22504:	strb	r0, [sp, #11]
   22508:	b	22518 <__assert_fail@plt+0x10ca4>
   2250c:	movw	r0, #0
   22510:	and	r0, r0, #1
   22514:	strb	r0, [sp, #11]
   22518:	ldrb	r0, [sp, #11]
   2251c:	and	r0, r0, #1
   22520:	add	sp, sp, #12
   22524:	bx	lr
   22528:	sub	sp, sp, #8
   2252c:	str	r0, [sp]
   22530:	ldr	r0, [sp]
   22534:	sub	r0, r0, #48	; 0x30
   22538:	cmp	r0, #9
   2253c:	bhi	22554 <__assert_fail@plt+0x10ce0>
   22540:	b	22544 <__assert_fail@plt+0x10cd0>
   22544:	movw	r0, #1
   22548:	and	r0, r0, #1
   2254c:	strb	r0, [sp, #7]
   22550:	b	22560 <__assert_fail@plt+0x10cec>
   22554:	movw	r0, #0
   22558:	and	r0, r0, #1
   2255c:	strb	r0, [sp, #7]
   22560:	ldrb	r0, [sp, #7]
   22564:	and	r0, r0, #1
   22568:	add	sp, sp, #8
   2256c:	bx	lr
   22570:	sub	sp, sp, #8
   22574:	str	r0, [sp]
   22578:	ldr	r0, [sp]
   2257c:	sub	r0, r0, #33	; 0x21
   22580:	cmp	r0, #93	; 0x5d
   22584:	bhi	2259c <__assert_fail@plt+0x10d28>
   22588:	b	2258c <__assert_fail@plt+0x10d18>
   2258c:	movw	r0, #1
   22590:	and	r0, r0, #1
   22594:	strb	r0, [sp, #7]
   22598:	b	225a8 <__assert_fail@plt+0x10d34>
   2259c:	movw	r0, #0
   225a0:	and	r0, r0, #1
   225a4:	strb	r0, [sp, #7]
   225a8:	ldrb	r0, [sp, #7]
   225ac:	and	r0, r0, #1
   225b0:	add	sp, sp, #8
   225b4:	bx	lr
   225b8:	sub	sp, sp, #8
   225bc:	str	r0, [sp]
   225c0:	ldr	r0, [sp]
   225c4:	sub	r0, r0, #97	; 0x61
   225c8:	cmp	r0, #25
   225cc:	bhi	225e4 <__assert_fail@plt+0x10d70>
   225d0:	b	225d4 <__assert_fail@plt+0x10d60>
   225d4:	movw	r0, #1
   225d8:	and	r0, r0, #1
   225dc:	strb	r0, [sp, #7]
   225e0:	b	225f0 <__assert_fail@plt+0x10d7c>
   225e4:	movw	r0, #0
   225e8:	and	r0, r0, #1
   225ec:	strb	r0, [sp, #7]
   225f0:	ldrb	r0, [sp, #7]
   225f4:	and	r0, r0, #1
   225f8:	add	sp, sp, #8
   225fc:	bx	lr
   22600:	sub	sp, sp, #8
   22604:	str	r0, [sp]
   22608:	ldr	r0, [sp]
   2260c:	sub	r0, r0, #32
   22610:	cmp	r0, #94	; 0x5e
   22614:	bhi	2262c <__assert_fail@plt+0x10db8>
   22618:	b	2261c <__assert_fail@plt+0x10da8>
   2261c:	movw	r0, #1
   22620:	and	r0, r0, #1
   22624:	strb	r0, [sp, #7]
   22628:	b	22638 <__assert_fail@plt+0x10dc4>
   2262c:	movw	r0, #0
   22630:	and	r0, r0, #1
   22634:	strb	r0, [sp, #7]
   22638:	ldrb	r0, [sp, #7]
   2263c:	and	r0, r0, #1
   22640:	add	sp, sp, #8
   22644:	bx	lr
   22648:	sub	sp, sp, #12
   2264c:	str	r0, [sp, #4]
   22650:	ldr	r0, [sp, #4]
   22654:	sub	r0, r0, #33	; 0x21
   22658:	cmp	r0, #93	; 0x5d
   2265c:	str	r0, [sp]
   22660:	bhi	227fc <__assert_fail@plt+0x10f88>
   22664:	add	r0, pc, #8
   22668:	ldr	r1, [sp]
   2266c:	ldr	r0, [r0, r1, lsl #2]
   22670:	mov	pc, r0
   22674:	andeq	r2, r2, ip, ror #15
   22678:	andeq	r2, r2, ip, ror #15
   2267c:	andeq	r2, r2, ip, ror #15
   22680:	andeq	r2, r2, ip, ror #15
   22684:	andeq	r2, r2, ip, ror #15
   22688:	andeq	r2, r2, ip, ror #15
   2268c:	andeq	r2, r2, ip, ror #15
   22690:	andeq	r2, r2, ip, ror #15
   22694:	andeq	r2, r2, ip, ror #15
   22698:	andeq	r2, r2, ip, ror #15
   2269c:	andeq	r2, r2, ip, ror #15
   226a0:	andeq	r2, r2, ip, ror #15
   226a4:	andeq	r2, r2, ip, ror #15
   226a8:	andeq	r2, r2, ip, ror #15
   226ac:	andeq	r2, r2, ip, ror #15
   226b0:	strdeq	r2, [r2], -ip
   226b4:	strdeq	r2, [r2], -ip
   226b8:	strdeq	r2, [r2], -ip
   226bc:	strdeq	r2, [r2], -ip
   226c0:	strdeq	r2, [r2], -ip
   226c4:	strdeq	r2, [r2], -ip
   226c8:	strdeq	r2, [r2], -ip
   226cc:	strdeq	r2, [r2], -ip
   226d0:	strdeq	r2, [r2], -ip
   226d4:	strdeq	r2, [r2], -ip
   226d8:	andeq	r2, r2, ip, ror #15
   226dc:	andeq	r2, r2, ip, ror #15
   226e0:	andeq	r2, r2, ip, ror #15
   226e4:	andeq	r2, r2, ip, ror #15
   226e8:	andeq	r2, r2, ip, ror #15
   226ec:	andeq	r2, r2, ip, ror #15
   226f0:	andeq	r2, r2, ip, ror #15
   226f4:	strdeq	r2, [r2], -ip
   226f8:	strdeq	r2, [r2], -ip
   226fc:	strdeq	r2, [r2], -ip
   22700:	strdeq	r2, [r2], -ip
   22704:	strdeq	r2, [r2], -ip
   22708:	strdeq	r2, [r2], -ip
   2270c:	strdeq	r2, [r2], -ip
   22710:	strdeq	r2, [r2], -ip
   22714:	strdeq	r2, [r2], -ip
   22718:	strdeq	r2, [r2], -ip
   2271c:	strdeq	r2, [r2], -ip
   22720:	strdeq	r2, [r2], -ip
   22724:	strdeq	r2, [r2], -ip
   22728:	strdeq	r2, [r2], -ip
   2272c:	strdeq	r2, [r2], -ip
   22730:	strdeq	r2, [r2], -ip
   22734:	strdeq	r2, [r2], -ip
   22738:	strdeq	r2, [r2], -ip
   2273c:	strdeq	r2, [r2], -ip
   22740:	strdeq	r2, [r2], -ip
   22744:	strdeq	r2, [r2], -ip
   22748:	strdeq	r2, [r2], -ip
   2274c:	strdeq	r2, [r2], -ip
   22750:	strdeq	r2, [r2], -ip
   22754:	strdeq	r2, [r2], -ip
   22758:	strdeq	r2, [r2], -ip
   2275c:	andeq	r2, r2, ip, ror #15
   22760:	andeq	r2, r2, ip, ror #15
   22764:	andeq	r2, r2, ip, ror #15
   22768:	andeq	r2, r2, ip, ror #15
   2276c:	andeq	r2, r2, ip, ror #15
   22770:	andeq	r2, r2, ip, ror #15
   22774:	strdeq	r2, [r2], -ip
   22778:	strdeq	r2, [r2], -ip
   2277c:	strdeq	r2, [r2], -ip
   22780:	strdeq	r2, [r2], -ip
   22784:	strdeq	r2, [r2], -ip
   22788:	strdeq	r2, [r2], -ip
   2278c:	strdeq	r2, [r2], -ip
   22790:	strdeq	r2, [r2], -ip
   22794:	strdeq	r2, [r2], -ip
   22798:	strdeq	r2, [r2], -ip
   2279c:	strdeq	r2, [r2], -ip
   227a0:	strdeq	r2, [r2], -ip
   227a4:	strdeq	r2, [r2], -ip
   227a8:	strdeq	r2, [r2], -ip
   227ac:	strdeq	r2, [r2], -ip
   227b0:	strdeq	r2, [r2], -ip
   227b4:	strdeq	r2, [r2], -ip
   227b8:	strdeq	r2, [r2], -ip
   227bc:	strdeq	r2, [r2], -ip
   227c0:	strdeq	r2, [r2], -ip
   227c4:	strdeq	r2, [r2], -ip
   227c8:	strdeq	r2, [r2], -ip
   227cc:	strdeq	r2, [r2], -ip
   227d0:	strdeq	r2, [r2], -ip
   227d4:	strdeq	r2, [r2], -ip
   227d8:	strdeq	r2, [r2], -ip
   227dc:	andeq	r2, r2, ip, ror #15
   227e0:	andeq	r2, r2, ip, ror #15
   227e4:	andeq	r2, r2, ip, ror #15
   227e8:	andeq	r2, r2, ip, ror #15
   227ec:	movw	r0, #1
   227f0:	and	r0, r0, #1
   227f4:	strb	r0, [sp, #11]
   227f8:	b	22808 <__assert_fail@plt+0x10f94>
   227fc:	movw	r0, #0
   22800:	and	r0, r0, #1
   22804:	strb	r0, [sp, #11]
   22808:	ldrb	r0, [sp, #11]
   2280c:	and	r0, r0, #1
   22810:	add	sp, sp, #12
   22814:	bx	lr
   22818:	sub	sp, sp, #12
   2281c:	str	r0, [sp, #4]
   22820:	ldr	r0, [sp, #4]
   22824:	sub	r1, r0, #9
   22828:	cmp	r1, #5
   2282c:	str	r0, [sp]
   22830:	bcc	22848 <__assert_fail@plt+0x10fd4>
   22834:	b	22838 <__assert_fail@plt+0x10fc4>
   22838:	ldr	r0, [sp]
   2283c:	cmp	r0, #32
   22840:	bne	22858 <__assert_fail@plt+0x10fe4>
   22844:	b	22848 <__assert_fail@plt+0x10fd4>
   22848:	movw	r0, #1
   2284c:	and	r0, r0, #1
   22850:	strb	r0, [sp, #11]
   22854:	b	22864 <__assert_fail@plt+0x10ff0>
   22858:	movw	r0, #0
   2285c:	and	r0, r0, #1
   22860:	strb	r0, [sp, #11]
   22864:	ldrb	r0, [sp, #11]
   22868:	and	r0, r0, #1
   2286c:	add	sp, sp, #12
   22870:	bx	lr
   22874:	sub	sp, sp, #8
   22878:	str	r0, [sp]
   2287c:	ldr	r0, [sp]
   22880:	sub	r0, r0, #65	; 0x41
   22884:	cmp	r0, #25
   22888:	bhi	228a0 <__assert_fail@plt+0x1102c>
   2288c:	b	22890 <__assert_fail@plt+0x1101c>
   22890:	movw	r0, #1
   22894:	and	r0, r0, #1
   22898:	strb	r0, [sp, #7]
   2289c:	b	228ac <__assert_fail@plt+0x11038>
   228a0:	movw	r0, #0
   228a4:	and	r0, r0, #1
   228a8:	strb	r0, [sp, #7]
   228ac:	ldrb	r0, [sp, #7]
   228b0:	and	r0, r0, #1
   228b4:	add	sp, sp, #8
   228b8:	bx	lr
   228bc:	sub	sp, sp, #12
   228c0:	str	r0, [sp, #4]
   228c4:	ldr	r0, [sp, #4]
   228c8:	sub	r1, r0, #48	; 0x30
   228cc:	cmp	r1, #10
   228d0:	str	r0, [sp]
   228d4:	bcc	22904 <__assert_fail@plt+0x11090>
   228d8:	b	228dc <__assert_fail@plt+0x11068>
   228dc:	ldr	r0, [sp]
   228e0:	sub	r1, r0, #65	; 0x41
   228e4:	cmp	r1, #6
   228e8:	bcc	22904 <__assert_fail@plt+0x11090>
   228ec:	b	228f0 <__assert_fail@plt+0x1107c>
   228f0:	ldr	r0, [sp]
   228f4:	sub	r1, r0, #97	; 0x61
   228f8:	cmp	r1, #5
   228fc:	bhi	22914 <__assert_fail@plt+0x110a0>
   22900:	b	22904 <__assert_fail@plt+0x11090>
   22904:	movw	r0, #1
   22908:	and	r0, r0, #1
   2290c:	strb	r0, [sp, #11]
   22910:	b	22920 <__assert_fail@plt+0x110ac>
   22914:	movw	r0, #0
   22918:	and	r0, r0, #1
   2291c:	strb	r0, [sp, #11]
   22920:	ldrb	r0, [sp, #11]
   22924:	and	r0, r0, #1
   22928:	add	sp, sp, #12
   2292c:	bx	lr
   22930:	sub	sp, sp, #8
   22934:	str	r0, [sp]
   22938:	ldr	r0, [sp]
   2293c:	sub	r0, r0, #65	; 0x41
   22940:	cmp	r0, #25
   22944:	bhi	22960 <__assert_fail@plt+0x110ec>
   22948:	b	2294c <__assert_fail@plt+0x110d8>
   2294c:	ldr	r0, [sp]
   22950:	sub	r0, r0, #65	; 0x41
   22954:	add	r0, r0, #97	; 0x61
   22958:	str	r0, [sp, #4]
   2295c:	b	22968 <__assert_fail@plt+0x110f4>
   22960:	ldr	r0, [sp]
   22964:	str	r0, [sp, #4]
   22968:	ldr	r0, [sp, #4]
   2296c:	add	sp, sp, #8
   22970:	bx	lr
   22974:	sub	sp, sp, #8
   22978:	str	r0, [sp]
   2297c:	ldr	r0, [sp]
   22980:	sub	r0, r0, #97	; 0x61
   22984:	cmp	r0, #25
   22988:	bhi	229a4 <__assert_fail@plt+0x11130>
   2298c:	b	22990 <__assert_fail@plt+0x1111c>
   22990:	ldr	r0, [sp]
   22994:	sub	r0, r0, #97	; 0x61
   22998:	add	r0, r0, #65	; 0x41
   2299c:	str	r0, [sp, #4]
   229a0:	b	229ac <__assert_fail@plt+0x11138>
   229a4:	ldr	r0, [sp]
   229a8:	str	r0, [sp, #4]
   229ac:	ldr	r0, [sp, #4]
   229b0:	add	sp, sp, #8
   229b4:	bx	lr
   229b8:	push	{fp, lr}
   229bc:	mov	fp, sp
   229c0:	sub	sp, sp, #56	; 0x38
   229c4:	str	r0, [fp, #-8]
   229c8:	ldr	r0, [fp, #-8]
   229cc:	bl	11598 <chdir@plt>
   229d0:	str	r0, [fp, #-12]
   229d4:	ldr	r0, [fp, #-12]
   229d8:	cmp	r0, #0
   229dc:	beq	229f0 <__assert_fail@plt+0x1117c>
   229e0:	bl	11700 <__errno_location@plt>
   229e4:	ldr	r0, [r0]
   229e8:	cmp	r0, #36	; 0x24
   229ec:	beq	229fc <__assert_fail@plt+0x11188>
   229f0:	ldr	r0, [fp, #-12]
   229f4:	str	r0, [fp, #-4]
   229f8:	b	22d44 <__assert_fail@plt+0x114d0>
   229fc:	ldr	r0, [fp, #-8]
   22a00:	bl	116d0 <strlen@plt>
   22a04:	str	r0, [fp, #-16]
   22a08:	ldr	r0, [fp, #-8]
   22a0c:	ldr	lr, [fp, #-16]
   22a10:	add	r0, r0, lr
   22a14:	str	r0, [fp, #-20]	; 0xffffffec
   22a18:	sub	r0, fp, #24
   22a1c:	bl	22d50 <__assert_fail@plt+0x114dc>
   22a20:	ldr	r0, [fp, #-16]
   22a24:	movw	lr, #0
   22a28:	cmp	lr, r0
   22a2c:	bcs	22a34 <__assert_fail@plt+0x111c0>
   22a30:	b	22a54 <__assert_fail@plt+0x111e0>
   22a34:	movw	r0, #18367	; 0x47bf
   22a38:	movt	r0, #2
   22a3c:	movw	r1, #18375	; 0x47c7
   22a40:	movt	r1, #2
   22a44:	movw	r2, #126	; 0x7e
   22a48:	movw	r3, #18392	; 0x47d8
   22a4c:	movt	r3, #2
   22a50:	bl	11874 <__assert_fail@plt>
   22a54:	ldr	r0, [fp, #-16]
   22a58:	movw	r1, #4096	; 0x1000
   22a5c:	cmp	r1, r0
   22a60:	bhi	22a68 <__assert_fail@plt+0x111f4>
   22a64:	b	22a88 <__assert_fail@plt+0x11214>
   22a68:	movw	r0, #18415	; 0x47ef
   22a6c:	movt	r0, #2
   22a70:	movw	r1, #18375	; 0x47c7
   22a74:	movt	r1, #2
   22a78:	movw	r2, #127	; 0x7f
   22a7c:	movw	r3, #18392	; 0x47d8
   22a80:	movt	r3, #2
   22a84:	bl	11874 <__assert_fail@plt>
   22a88:	ldr	r0, [fp, #-8]
   22a8c:	movw	r1, #18161	; 0x46f1
   22a90:	movt	r1, #2
   22a94:	bl	11868 <strspn@plt>
   22a98:	str	r0, [sp, #28]
   22a9c:	ldr	r0, [sp, #28]
   22aa0:	cmp	r0, #2
   22aa4:	bne	22b40 <__assert_fail@plt+0x112cc>
   22aa8:	ldr	r0, [fp, #-8]
   22aac:	add	r0, r0, #3
   22ab0:	ldr	r1, [fp, #-20]	; 0xffffffec
   22ab4:	ldr	r2, [fp, #-8]
   22ab8:	add	r2, r2, #3
   22abc:	sub	r2, r1, r2
   22ac0:	mov	r1, #47	; 0x2f
   22ac4:	bl	11730 <memchr@plt>
   22ac8:	str	r0, [sp, #20]
   22acc:	ldr	r0, [sp, #20]
   22ad0:	movw	r1, #0
   22ad4:	cmp	r0, r1
   22ad8:	bne	22af4 <__assert_fail@plt+0x11280>
   22adc:	bl	11700 <__errno_location@plt>
   22ae0:	movw	lr, #36	; 0x24
   22ae4:	str	lr, [r0]
   22ae8:	mvn	r0, #0
   22aec:	str	r0, [fp, #-4]
   22af0:	b	22d44 <__assert_fail@plt+0x114d0>
   22af4:	ldr	r0, [sp, #20]
   22af8:	movw	r1, #0
   22afc:	strb	r1, [r0]
   22b00:	ldr	r1, [fp, #-8]
   22b04:	sub	r0, fp, #24
   22b08:	bl	22d6c <__assert_fail@plt+0x114f8>
   22b0c:	str	r0, [sp, #24]
   22b10:	ldr	r0, [sp, #20]
   22b14:	movw	r1, #47	; 0x2f
   22b18:	strb	r1, [r0]
   22b1c:	ldr	r0, [sp, #24]
   22b20:	cmp	r0, #0
   22b24:	beq	22b2c <__assert_fail@plt+0x112b8>
   22b28:	b	22d14 <__assert_fail@plt+0x114a0>
   22b2c:	ldr	r0, [sp, #20]
   22b30:	add	r0, r0, #1
   22b34:	bl	22dd8 <__assert_fail@plt+0x11564>
   22b38:	str	r0, [fp, #-8]
   22b3c:	b	22b7c <__assert_fail@plt+0x11308>
   22b40:	ldr	r0, [sp, #28]
   22b44:	cmp	r0, #0
   22b48:	beq	22b78 <__assert_fail@plt+0x11304>
   22b4c:	sub	r0, fp, #24
   22b50:	movw	r1, #18161	; 0x46f1
   22b54:	movt	r1, #2
   22b58:	bl	22d6c <__assert_fail@plt+0x114f8>
   22b5c:	cmp	r0, #0
   22b60:	beq	22b68 <__assert_fail@plt+0x112f4>
   22b64:	b	22d14 <__assert_fail@plt+0x114a0>
   22b68:	ldr	r0, [sp, #28]
   22b6c:	ldr	r1, [fp, #-8]
   22b70:	add	r0, r1, r0
   22b74:	str	r0, [fp, #-8]
   22b78:	b	22b7c <__assert_fail@plt+0x11308>
   22b7c:	ldr	r0, [fp, #-8]
   22b80:	ldrb	r0, [r0]
   22b84:	cmp	r0, #47	; 0x2f
   22b88:	beq	22b90 <__assert_fail@plt+0x1131c>
   22b8c:	b	22bb0 <__assert_fail@plt+0x1133c>
   22b90:	movw	r0, #18427	; 0x47fb
   22b94:	movt	r0, #2
   22b98:	movw	r1, #18375	; 0x47c7
   22b9c:	movt	r1, #2
   22ba0:	movw	r2, #162	; 0xa2
   22ba4:	movw	r3, #18392	; 0x47d8
   22ba8:	movt	r3, #2
   22bac:	bl	11874 <__assert_fail@plt>
   22bb0:	ldr	r0, [fp, #-8]
   22bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   22bb8:	cmp	r0, r1
   22bbc:	bhi	22bc4 <__assert_fail@plt+0x11350>
   22bc0:	b	22be4 <__assert_fail@plt+0x11370>
   22bc4:	movw	r0, #18439	; 0x4807
   22bc8:	movt	r0, #2
   22bcc:	movw	r1, #18375	; 0x47c7
   22bd0:	movt	r1, #2
   22bd4:	movw	r2, #163	; 0xa3
   22bd8:	movw	r3, #18392	; 0x47d8
   22bdc:	movt	r3, #2
   22be0:	bl	11874 <__assert_fail@plt>
   22be4:	b	22be8 <__assert_fail@plt+0x11374>
   22be8:	ldr	r0, [fp, #-20]	; 0xffffffec
   22bec:	ldr	r1, [fp, #-8]
   22bf0:	sub	r0, r0, r1
   22bf4:	movw	r1, #4096	; 0x1000
   22bf8:	cmp	r1, r0
   22bfc:	bgt	22cc0 <__assert_fail@plt+0x1144c>
   22c00:	ldr	r0, [fp, #-8]
   22c04:	movw	r1, #47	; 0x2f
   22c08:	movw	r2, #4096	; 0x1000
   22c0c:	bl	116e8 <memrchr@plt>
   22c10:	str	r0, [sp, #12]
   22c14:	ldr	r0, [sp, #12]
   22c18:	movw	r1, #0
   22c1c:	cmp	r0, r1
   22c20:	bne	22c3c <__assert_fail@plt+0x113c8>
   22c24:	bl	11700 <__errno_location@plt>
   22c28:	movw	lr, #36	; 0x24
   22c2c:	str	lr, [r0]
   22c30:	mvn	r0, #0
   22c34:	str	r0, [fp, #-4]
   22c38:	b	22d44 <__assert_fail@plt+0x114d0>
   22c3c:	ldr	r0, [sp, #12]
   22c40:	movw	r1, #0
   22c44:	strb	r1, [r0]
   22c48:	ldr	r0, [sp, #12]
   22c4c:	ldr	r1, [fp, #-8]
   22c50:	sub	r0, r0, r1
   22c54:	cmp	r0, #4096	; 0x1000
   22c58:	bge	22c60 <__assert_fail@plt+0x113ec>
   22c5c:	b	22c80 <__assert_fail@plt+0x1140c>
   22c60:	movw	r0, #18454	; 0x4816
   22c64:	movt	r0, #2
   22c68:	movw	r1, #18375	; 0x47c7
   22c6c:	movt	r1, #2
   22c70:	movw	r2, #179	; 0xb3
   22c74:	movw	r3, #18392	; 0x47d8
   22c78:	movt	r3, #2
   22c7c:	bl	11874 <__assert_fail@plt>
   22c80:	ldr	r1, [fp, #-8]
   22c84:	sub	r0, fp, #24
   22c88:	bl	22d6c <__assert_fail@plt+0x114f8>
   22c8c:	str	r0, [sp, #16]
   22c90:	ldr	r0, [sp, #12]
   22c94:	movw	r1, #47	; 0x2f
   22c98:	strb	r1, [r0]
   22c9c:	ldr	r0, [sp, #16]
   22ca0:	cmp	r0, #0
   22ca4:	beq	22cac <__assert_fail@plt+0x11438>
   22ca8:	b	22d14 <__assert_fail@plt+0x114a0>
   22cac:	ldr	r0, [sp, #12]
   22cb0:	add	r0, r0, #1
   22cb4:	bl	22dd8 <__assert_fail@plt+0x11564>
   22cb8:	str	r0, [fp, #-8]
   22cbc:	b	22be8 <__assert_fail@plt+0x11374>
   22cc0:	ldr	r0, [fp, #-8]
   22cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   22cc8:	cmp	r0, r1
   22ccc:	bcs	22cec <__assert_fail@plt+0x11478>
   22cd0:	ldr	r1, [fp, #-8]
   22cd4:	sub	r0, fp, #24
   22cd8:	bl	22d6c <__assert_fail@plt+0x114f8>
   22cdc:	cmp	r0, #0
   22ce0:	beq	22ce8 <__assert_fail@plt+0x11474>
   22ce4:	b	22d14 <__assert_fail@plt+0x114a0>
   22ce8:	b	22cec <__assert_fail@plt+0x11478>
   22cec:	sub	r0, fp, #24
   22cf0:	bl	22e10 <__assert_fail@plt+0x1159c>
   22cf4:	cmp	r0, #0
   22cf8:	beq	22d00 <__assert_fail@plt+0x1148c>
   22cfc:	b	22d14 <__assert_fail@plt+0x114a0>
   22d00:	sub	r0, fp, #24
   22d04:	bl	22e34 <__assert_fail@plt+0x115c0>
   22d08:	movw	r0, #0
   22d0c:	str	r0, [fp, #-4]
   22d10:	b	22d44 <__assert_fail@plt+0x114d0>
   22d14:	bl	11700 <__errno_location@plt>
   22d18:	ldr	r0, [r0]
   22d1c:	str	r0, [sp, #8]
   22d20:	sub	r0, fp, #24
   22d24:	bl	22e34 <__assert_fail@plt+0x115c0>
   22d28:	ldr	r0, [sp, #8]
   22d2c:	str	r0, [sp, #4]
   22d30:	bl	11700 <__errno_location@plt>
   22d34:	ldr	lr, [sp, #4]
   22d38:	str	lr, [r0]
   22d3c:	mvn	r0, #0
   22d40:	str	r0, [fp, #-4]
   22d44:	ldr	r0, [fp, #-4]
   22d48:	mov	sp, fp
   22d4c:	pop	{fp, pc}
   22d50:	sub	sp, sp, #4
   22d54:	str	r0, [sp]
   22d58:	ldr	r0, [sp]
   22d5c:	mvn	r1, #99	; 0x63
   22d60:	str	r1, [r0]
   22d64:	add	sp, sp, #4
   22d68:	bx	lr
   22d6c:	push	{fp, lr}
   22d70:	mov	fp, sp
   22d74:	sub	sp, sp, #16
   22d78:	str	r0, [sp, #8]
   22d7c:	str	r1, [sp, #4]
   22d80:	ldr	r0, [sp, #8]
   22d84:	ldr	r0, [r0]
   22d88:	ldr	r1, [sp, #4]
   22d8c:	movw	r2, #18688	; 0x4900
   22d90:	bl	116dc <openat64@plt>
   22d94:	str	r0, [sp]
   22d98:	ldr	r0, [sp]
   22d9c:	cmp	r0, #0
   22da0:	bge	22db0 <__assert_fail@plt+0x1153c>
   22da4:	mvn	r0, #0
   22da8:	str	r0, [fp, #-4]
   22dac:	b	22dcc <__assert_fail@plt+0x11558>
   22db0:	ldr	r0, [sp, #8]
   22db4:	bl	22e34 <__assert_fail@plt+0x115c0>
   22db8:	ldr	r0, [sp]
   22dbc:	ldr	lr, [sp, #8]
   22dc0:	str	r0, [lr]
   22dc4:	movw	r0, #0
   22dc8:	str	r0, [fp, #-4]
   22dcc:	ldr	r0, [fp, #-4]
   22dd0:	mov	sp, fp
   22dd4:	pop	{fp, pc}
   22dd8:	push	{fp, lr}
   22ddc:	mov	fp, sp
   22de0:	sub	sp, sp, #8
   22de4:	str	r0, [sp, #4]
   22de8:	ldr	r0, [sp, #4]
   22dec:	movw	r1, #18161	; 0x46f1
   22df0:	movt	r1, #2
   22df4:	bl	11868 <strspn@plt>
   22df8:	str	r0, [sp]
   22dfc:	ldr	r0, [sp, #4]
   22e00:	ldr	r1, [sp]
   22e04:	add	r0, r0, r1
   22e08:	mov	sp, fp
   22e0c:	pop	{fp, pc}
   22e10:	push	{fp, lr}
   22e14:	mov	fp, sp
   22e18:	sub	sp, sp, #8
   22e1c:	str	r0, [sp, #4]
   22e20:	ldr	r0, [sp, #4]
   22e24:	ldr	r0, [r0]
   22e28:	bl	117cc <fchdir@plt>
   22e2c:	mov	sp, fp
   22e30:	pop	{fp, pc}
   22e34:	push	{fp, lr}
   22e38:	mov	fp, sp
   22e3c:	sub	sp, sp, #8
   22e40:	str	r0, [sp, #4]
   22e44:	ldr	r0, [sp, #4]
   22e48:	ldr	r0, [r0]
   22e4c:	movw	r1, #0
   22e50:	cmp	r1, r0
   22e54:	bgt	22eac <__assert_fail@plt+0x11638>
   22e58:	ldr	r0, [sp, #4]
   22e5c:	ldr	r0, [r0]
   22e60:	bl	11844 <close@plt>
   22e64:	cmp	r0, #0
   22e68:	movw	r0, #0
   22e6c:	movne	r0, #1
   22e70:	and	r0, r0, #1
   22e74:	strb	r0, [sp, #3]
   22e78:	ldrb	r0, [sp, #3]
   22e7c:	tst	r0, #1
   22e80:	bne	22e88 <__assert_fail@plt+0x11614>
   22e84:	b	22ea8 <__assert_fail@plt+0x11634>
   22e88:	movw	r0, #18473	; 0x4829
   22e8c:	movt	r0, #2
   22e90:	movw	r1, #18375	; 0x47c7
   22e94:	movt	r1, #2
   22e98:	movw	r2, #64	; 0x40
   22e9c:	movw	r3, #18486	; 0x4836
   22ea0:	movt	r3, #2
   22ea4:	bl	11874 <__assert_fail@plt>
   22ea8:	b	22eac <__assert_fail@plt+0x11638>
   22eac:	mov	sp, fp
   22eb0:	pop	{fp, pc}
   22eb4:	push	{r4, r5, fp, lr}
   22eb8:	add	fp, sp, #8
   22ebc:	sub	sp, sp, #272	; 0x110
   22ec0:	add	r1, sp, #7
   22ec4:	str	r0, [fp, #-16]
   22ec8:	ldr	r0, [fp, #-16]
   22ecc:	movw	r2, #257	; 0x101
   22ed0:	bl	22f50 <__assert_fail@plt+0x116dc>
   22ed4:	cmp	r0, #0
   22ed8:	beq	22eec <__assert_fail@plt+0x11678>
   22edc:	movw	r0, #0
   22ee0:	and	r0, r0, #1
   22ee4:	strb	r0, [fp, #-9]
   22ee8:	b	22f40 <__assert_fail@plt+0x116cc>
   22eec:	add	r0, sp, #7
   22ef0:	movw	r1, #18523	; 0x485b
   22ef4:	movt	r1, #2
   22ef8:	bl	114d8 <strcmp@plt>
   22efc:	cmp	r0, #0
   22f00:	movw	r0, #1
   22f04:	str	r0, [sp]
   22f08:	beq	22f2c <__assert_fail@plt+0x116b8>
   22f0c:	add	r0, sp, #7
   22f10:	movw	r1, #18525	; 0x485d
   22f14:	movt	r1, #2
   22f18:	bl	114d8 <strcmp@plt>
   22f1c:	cmp	r0, #0
   22f20:	movw	r0, #0
   22f24:	moveq	r0, #1
   22f28:	str	r0, [sp]
   22f2c:	ldr	r0, [sp]
   22f30:	mvn	r1, #0
   22f34:	eor	r0, r0, r1
   22f38:	and	r0, r0, #1
   22f3c:	strb	r0, [fp, #-9]
   22f40:	ldrb	r0, [fp, #-9]
   22f44:	and	r0, r0, #1
   22f48:	sub	sp, fp, #8
   22f4c:	pop	{r4, r5, fp, pc}
   22f50:	push	{fp, lr}
   22f54:	mov	fp, sp
   22f58:	sub	sp, sp, #16
   22f5c:	str	r0, [fp, #-4]
   22f60:	str	r1, [sp, #8]
   22f64:	str	r2, [sp, #4]
   22f68:	ldr	r0, [fp, #-4]
   22f6c:	ldr	r1, [sp, #8]
   22f70:	ldr	r2, [sp, #4]
   22f74:	bl	22f80 <__assert_fail@plt+0x1170c>
   22f78:	mov	sp, fp
   22f7c:	pop	{fp, pc}
   22f80:	push	{fp, lr}
   22f84:	mov	fp, sp
   22f88:	sub	sp, sp, #24
   22f8c:	str	r0, [fp, #-8]
   22f90:	str	r1, [sp, #12]
   22f94:	str	r2, [sp, #8]
   22f98:	ldr	r0, [fp, #-8]
   22f9c:	bl	23080 <__assert_fail@plt+0x1180c>
   22fa0:	str	r0, [sp, #4]
   22fa4:	ldr	r0, [sp, #4]
   22fa8:	movw	r1, #0
   22fac:	cmp	r0, r1
   22fb0:	bne	22fd8 <__assert_fail@plt+0x11764>
   22fb4:	ldr	r0, [sp, #8]
   22fb8:	cmp	r0, #0
   22fbc:	bls	22fcc <__assert_fail@plt+0x11758>
   22fc0:	ldr	r0, [sp, #12]
   22fc4:	movw	r1, #0
   22fc8:	strb	r1, [r0]
   22fcc:	movw	r0, #22
   22fd0:	str	r0, [fp, #-4]
   22fd4:	b	23054 <__assert_fail@plt+0x117e0>
   22fd8:	ldr	r0, [sp, #4]
   22fdc:	bl	116d0 <strlen@plt>
   22fe0:	str	r0, [sp]
   22fe4:	ldr	r0, [sp]
   22fe8:	ldr	lr, [sp, #8]
   22fec:	cmp	r0, lr
   22ff0:	bcs	23014 <__assert_fail@plt+0x117a0>
   22ff4:	ldr	r0, [sp, #12]
   22ff8:	ldr	r1, [sp, #4]
   22ffc:	ldr	r2, [sp]
   23000:	add	r2, r2, #1
   23004:	bl	1152c <memcpy@plt>
   23008:	movw	r0, #0
   2300c:	str	r0, [fp, #-4]
   23010:	b	23054 <__assert_fail@plt+0x117e0>
   23014:	ldr	r0, [sp, #8]
   23018:	cmp	r0, #0
   2301c:	bls	2304c <__assert_fail@plt+0x117d8>
   23020:	ldr	r0, [sp, #12]
   23024:	ldr	r1, [sp, #4]
   23028:	ldr	r2, [sp, #8]
   2302c:	sub	r2, r2, #1
   23030:	bl	1152c <memcpy@plt>
   23034:	ldr	r0, [sp, #12]
   23038:	ldr	r1, [sp, #8]
   2303c:	sub	r1, r1, #1
   23040:	add	r0, r0, r1
   23044:	movw	r1, #0
   23048:	strb	r1, [r0]
   2304c:	movw	r0, #34	; 0x22
   23050:	str	r0, [fp, #-4]
   23054:	ldr	r0, [fp, #-4]
   23058:	mov	sp, fp
   2305c:	pop	{fp, pc}
   23060:	push	{fp, lr}
   23064:	mov	fp, sp
   23068:	sub	sp, sp, #8
   2306c:	str	r0, [sp, #4]
   23070:	ldr	r0, [sp, #4]
   23074:	bl	23080 <__assert_fail@plt+0x1180c>
   23078:	mov	sp, fp
   2307c:	pop	{fp, pc}
   23080:	push	{fp, lr}
   23084:	mov	fp, sp
   23088:	sub	sp, sp, #8
   2308c:	str	r0, [sp, #4]
   23090:	ldr	r0, [sp, #4]
   23094:	movw	r1, #0
   23098:	bl	11778 <setlocale@plt>
   2309c:	str	r0, [sp]
   230a0:	ldr	r0, [sp]
   230a4:	mov	sp, fp
   230a8:	pop	{fp, pc}
   230ac:	cmp	r3, #0
   230b0:	cmpeq	r2, #0
   230b4:	bne	230d8 <__assert_fail@plt+0x11864>
   230b8:	cmp	r1, #0
   230bc:	movlt	r1, #-2147483648	; 0x80000000
   230c0:	movlt	r0, #0
   230c4:	blt	230d4 <__assert_fail@plt+0x11860>
   230c8:	cmpeq	r0, #0
   230cc:	mvnne	r1, #-2147483648	; 0x80000000
   230d0:	mvnne	r0, #0
   230d4:	b	231bc <__assert_fail@plt+0x11948>
   230d8:	sub	sp, sp, #8
   230dc:	push	{sp, lr}
   230e0:	cmp	r1, #0
   230e4:	blt	23104 <__assert_fail@plt+0x11890>
   230e8:	cmp	r3, #0
   230ec:	blt	23138 <__assert_fail@plt+0x118c4>
   230f0:	bl	231cc <__assert_fail@plt+0x11958>
   230f4:	ldr	lr, [sp, #4]
   230f8:	add	sp, sp, #8
   230fc:	pop	{r2, r3}
   23100:	bx	lr
   23104:	rsbs	r0, r0, #0
   23108:	sbc	r1, r1, r1, lsl #1
   2310c:	cmp	r3, #0
   23110:	blt	2315c <__assert_fail@plt+0x118e8>
   23114:	bl	231cc <__assert_fail@plt+0x11958>
   23118:	ldr	lr, [sp, #4]
   2311c:	add	sp, sp, #8
   23120:	pop	{r2, r3}
   23124:	rsbs	r0, r0, #0
   23128:	sbc	r1, r1, r1, lsl #1
   2312c:	rsbs	r2, r2, #0
   23130:	sbc	r3, r3, r3, lsl #1
   23134:	bx	lr
   23138:	rsbs	r2, r2, #0
   2313c:	sbc	r3, r3, r3, lsl #1
   23140:	bl	231cc <__assert_fail@plt+0x11958>
   23144:	ldr	lr, [sp, #4]
   23148:	add	sp, sp, #8
   2314c:	pop	{r2, r3}
   23150:	rsbs	r0, r0, #0
   23154:	sbc	r1, r1, r1, lsl #1
   23158:	bx	lr
   2315c:	rsbs	r2, r2, #0
   23160:	sbc	r3, r3, r3, lsl #1
   23164:	bl	231cc <__assert_fail@plt+0x11958>
   23168:	ldr	lr, [sp, #4]
   2316c:	add	sp, sp, #8
   23170:	pop	{r2, r3}
   23174:	rsbs	r2, r2, #0
   23178:	sbc	r3, r3, r3, lsl #1
   2317c:	bx	lr
   23180:	cmp	r3, #0
   23184:	cmpeq	r2, #0
   23188:	bne	231a0 <__assert_fail@plt+0x1192c>
   2318c:	cmp	r1, #0
   23190:	cmpeq	r0, #0
   23194:	mvnne	r1, #0
   23198:	mvnne	r0, #0
   2319c:	b	231bc <__assert_fail@plt+0x11948>
   231a0:	sub	sp, sp, #8
   231a4:	push	{sp, lr}
   231a8:	bl	231cc <__assert_fail@plt+0x11958>
   231ac:	ldr	lr, [sp, #4]
   231b0:	add	sp, sp, #8
   231b4:	pop	{r2, r3}
   231b8:	bx	lr
   231bc:	push	{r1, lr}
   231c0:	mov	r0, #8
   231c4:	bl	114c0 <raise@plt>
   231c8:	pop	{r1, pc}
   231cc:	cmp	r1, r3
   231d0:	cmpeq	r0, r2
   231d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231d8:	mov	r4, r0
   231dc:	movcc	r0, #0
   231e0:	mov	r5, r1
   231e4:	ldr	lr, [sp, #36]	; 0x24
   231e8:	movcc	r1, r0
   231ec:	bcc	232e8 <__assert_fail@plt+0x11a74>
   231f0:	cmp	r3, #0
   231f4:	clzeq	ip, r2
   231f8:	clzne	ip, r3
   231fc:	addeq	ip, ip, #32
   23200:	cmp	r5, #0
   23204:	clzeq	r1, r4
   23208:	addeq	r1, r1, #32
   2320c:	clzne	r1, r5
   23210:	sub	ip, ip, r1
   23214:	sub	sl, ip, #32
   23218:	lsl	r9, r3, ip
   2321c:	rsb	fp, ip, #32
   23220:	orr	r9, r9, r2, lsl sl
   23224:	orr	r9, r9, r2, lsr fp
   23228:	lsl	r8, r2, ip
   2322c:	cmp	r5, r9
   23230:	cmpeq	r4, r8
   23234:	movcc	r0, #0
   23238:	movcc	r1, r0
   2323c:	bcc	23258 <__assert_fail@plt+0x119e4>
   23240:	mov	r0, #1
   23244:	subs	r4, r4, r8
   23248:	lsl	r1, r0, sl
   2324c:	orr	r1, r1, r0, lsr fp
   23250:	lsl	r0, r0, ip
   23254:	sbc	r5, r5, r9
   23258:	cmp	ip, #0
   2325c:	beq	232e8 <__assert_fail@plt+0x11a74>
   23260:	lsr	r6, r8, #1
   23264:	orr	r6, r6, r9, lsl #31
   23268:	lsr	r7, r9, #1
   2326c:	mov	r2, ip
   23270:	b	23294 <__assert_fail@plt+0x11a20>
   23274:	subs	r3, r4, r6
   23278:	sbc	r8, r5, r7
   2327c:	adds	r3, r3, r3
   23280:	adc	r8, r8, r8
   23284:	adds	r4, r3, #1
   23288:	adc	r5, r8, #0
   2328c:	subs	r2, r2, #1
   23290:	beq	232b0 <__assert_fail@plt+0x11a3c>
   23294:	cmp	r5, r7
   23298:	cmpeq	r4, r6
   2329c:	bcs	23274 <__assert_fail@plt+0x11a00>
   232a0:	adds	r4, r4, r4
   232a4:	adc	r5, r5, r5
   232a8:	subs	r2, r2, #1
   232ac:	bne	23294 <__assert_fail@plt+0x11a20>
   232b0:	lsr	r3, r4, ip
   232b4:	orr	r3, r3, r5, lsl fp
   232b8:	lsr	r2, r5, ip
   232bc:	orr	r3, r3, r5, lsr sl
   232c0:	adds	r0, r0, r4
   232c4:	mov	r4, r3
   232c8:	lsl	r3, r2, ip
   232cc:	orr	r3, r3, r4, lsl sl
   232d0:	lsl	ip, r4, ip
   232d4:	orr	r3, r3, r4, lsr fp
   232d8:	adc	r1, r1, r5
   232dc:	subs	r0, r0, ip
   232e0:	mov	r5, r2
   232e4:	sbc	r1, r1, r3
   232e8:	cmp	lr, #0
   232ec:	strdne	r4, [lr]
   232f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   232f8:	mov	r7, r0
   232fc:	ldr	r6, [pc, #72]	; 2334c <__assert_fail@plt+0x11ad8>
   23300:	ldr	r5, [pc, #72]	; 23350 <__assert_fail@plt+0x11adc>
   23304:	add	r6, pc, r6
   23308:	add	r5, pc, r5
   2330c:	sub	r6, r6, r5
   23310:	mov	r8, r1
   23314:	mov	r9, r2
   23318:	bl	1147c <fstatfs64@plt-0x20>
   2331c:	asrs	r6, r6, #2
   23320:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23324:	mov	r4, #0
   23328:	add	r4, r4, #1
   2332c:	ldr	r3, [r5], #4
   23330:	mov	r2, r9
   23334:	mov	r1, r8
   23338:	mov	r0, r7
   2333c:	blx	r3
   23340:	cmp	r6, r4
   23344:	bne	23328 <__assert_fail@plt+0x11ab4>
   23348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2334c:	strdeq	r1, [r1], -r8
   23350:	strdeq	r1, [r1], -r0
   23354:	bx	lr
   23358:	ldr	r3, [pc, #12]	; 2336c <__assert_fail@plt+0x11af8>
   2335c:	mov	r1, #0
   23360:	add	r3, pc, r3
   23364:	ldr	r2, [r3]
   23368:	b	1170c <__cxa_atexit@plt>
   2336c:	strdeq	r1, [r1], -r8
   23370:	mov	r2, r1
   23374:	mov	r1, r0
   23378:	mov	r0, #3
   2337c:	b	11814 <__xstat64@plt>
   23380:	mov	r2, r1
   23384:	mov	r1, r0
   23388:	mov	r0, #3
   2338c:	b	115bc <__fxstat64@plt>
   23390:	mov	r2, r1
   23394:	mov	r1, r0
   23398:	mov	r0, #3
   2339c:	b	11850 <__lxstat64@plt>
   233a0:	push	{lr}		; (str lr, [sp, #-4]!)
   233a4:	sub	sp, sp, #12
   233a8:	str	r3, [sp]
   233ac:	mov	r3, r2
   233b0:	mov	r2, r1
   233b4:	mov	r1, r0
   233b8:	mov	r0, #3
   233bc:	bl	115a4 <__fxstatat64@plt>
   233c0:	add	sp, sp, #12
   233c4:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000233c8 <.fini>:
   233c8:	push	{r3, lr}
   233cc:	pop	{r3, pc}
