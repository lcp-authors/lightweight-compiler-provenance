
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

0001065c <.init>:
   1065c:	push	{r3, lr}
   10660:	bl	107c0 <sprintf@plt+0x48>
   10664:	pop	{r3, pc}

Disassembly of section .plt:

00010668 <open@plt-0x14>:
   10668:	push	{lr}		; (str lr, [sp, #-4]!)
   1066c:	ldr	lr, [pc, #4]	; 10678 <open@plt-0x4>
   10670:	add	lr, pc, lr
   10674:	ldr	pc, [lr, #8]!
   10678:	andeq	r1, r1, r8, lsl #19

0001067c <open@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2440]!	; 0x988

00010688 <abort@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2432]!	; 0x980

00010694 <srand@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2424]!	; 0x978

000106a0 <__libc_start_main@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2416]!	; 0x970

000106ac <__gmon_start__@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2408]!	; 0x968

000106b8 <getpass@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2400]!	; 0x960

000106c4 <calloc@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2392]!	; 0x958

000106d0 <free@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2384]!	; 0x950

000106dc <read@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2376]!	; 0x948

000106e8 <strlen@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2368]!	; 0x940

000106f4 <getopt@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2360]!	; 0x938

00010700 <strtol@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2352]!	; 0x930

0001070c <printf@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2344]!	; 0x928

00010718 <fwrite@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2336]!	; 0x920

00010724 <time@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2328]!	; 0x918

00010730 <strdup@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2320]!	; 0x910

0001073c <rb_crypt@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2312]!	; 0x908

00010748 <puts@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2304]!	; 0x900

00010754 <rand@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2296]!	; 0x8f8

00010760 <strcmp@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2288]!	; 0x8f0

0001076c <exit@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2280]!	; 0x8e8

00010778 <sprintf@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2272]!	; 0x8e0

Disassembly of section .text:

00010784 <.text>:
   10784:	mov	fp, #0
   10788:	mov	lr, #0
   1078c:	pop	{r1}		; (ldr r1, [sp], #4)
   10790:	mov	r2, sp
   10794:	push	{r2}		; (str r2, [sp, #-4]!)
   10798:	push	{r0}		; (str r0, [sp, #-4]!)
   1079c:	ldr	ip, [pc, #16]	; 107b4 <sprintf@plt+0x3c>
   107a0:	push	{ip}		; (str ip, [sp, #-4]!)
   107a4:	ldr	r0, [pc, #12]	; 107b8 <sprintf@plt+0x40>
   107a8:	ldr	r3, [pc, #12]	; 107bc <sprintf@plt+0x44>
   107ac:	bl	106a0 <__libc_start_main@plt>
   107b0:	bl	10688 <abort@plt>
   107b4:	ldrdeq	r1, [r1], -r4
   107b8:	andeq	r0, r1, r4, asr #19
   107bc:	andeq	r1, r1, r4, ror r1
   107c0:	ldr	r3, [pc, #20]	; 107dc <sprintf@plt+0x64>
   107c4:	ldr	r2, [pc, #20]	; 107e0 <sprintf@plt+0x68>
   107c8:	add	r3, pc, r3
   107cc:	ldr	r2, [r3, r2]
   107d0:	cmp	r2, #0
   107d4:	bxeq	lr
   107d8:	b	106ac <__gmon_start__@plt>
   107dc:	andeq	r1, r1, r0, lsr r8
   107e0:	andeq	r0, r0, r4, rrx
   107e4:	ldr	r0, [pc, #24]	; 10804 <sprintf@plt+0x8c>
   107e8:	ldr	r3, [pc, #24]	; 10808 <sprintf@plt+0x90>
   107ec:	cmp	r3, r0
   107f0:	bxeq	lr
   107f4:	ldr	r3, [pc, #16]	; 1080c <sprintf@plt+0x94>
   107f8:	cmp	r3, #0
   107fc:	bxeq	lr
   10800:	bx	r3
   10804:	andeq	r2, r2, r0, ror r0
   10808:	andeq	r2, r2, r0, ror r0
   1080c:	andeq	r0, r0, r0
   10810:	ldr	r0, [pc, #36]	; 1083c <sprintf@plt+0xc4>
   10814:	ldr	r1, [pc, #36]	; 10840 <sprintf@plt+0xc8>
   10818:	sub	r1, r1, r0
   1081c:	asr	r1, r1, #2
   10820:	add	r1, r1, r1, lsr #31
   10824:	asrs	r1, r1, #1
   10828:	bxeq	lr
   1082c:	ldr	r3, [pc, #16]	; 10844 <sprintf@plt+0xcc>
   10830:	cmp	r3, #0
   10834:	bxeq	lr
   10838:	bx	r3
   1083c:	andeq	r2, r2, r0, ror r0
   10840:	andeq	r2, r2, r0, ror r0
   10844:	andeq	r0, r0, r0
   10848:	push	{r4, lr}
   1084c:	ldr	r4, [pc, #24]	; 1086c <sprintf@plt+0xf4>
   10850:	ldrb	r3, [r4]
   10854:	cmp	r3, #0
   10858:	popne	{r4, pc}
   1085c:	bl	107e4 <sprintf@plt+0x6c>
   10860:	mov	r3, #1
   10864:	strb	r3, [r4]
   10868:	pop	{r4, pc}
   1086c:	andeq	r2, r2, ip, ror r0
   10870:	b	10810 <sprintf@plt+0x98>
   10874:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10878:	strd	r6, [sp, #8]
   1087c:	str	r8, [sp, #16]
   10880:	str	lr, [sp, #20]
   10884:	mov	r7, r0
   10888:	mov	r5, r1
   1088c:	mov	r0, #0
   10890:	bl	10724 <time@plt>
   10894:	bl	10694 <srand@plt>
   10898:	cmp	r5, #0
   1089c:	ble	108d4 <sprintf@plt+0x15c>
   108a0:	sub	r4, r7, #1
   108a4:	add	r5, r4, r5
   108a8:	movw	r6, #4580	; 0x11e4
   108ac:	movt	r6, #1
   108b0:	bl	10754 <rand@plt>
   108b4:	rsbs	r3, r0, #0
   108b8:	and	r0, r0, #63	; 0x3f
   108bc:	and	r3, r3, #63	; 0x3f
   108c0:	rsbpl	r0, r3, #0
   108c4:	ldrb	r3, [r6, r0]
   108c8:	strb	r3, [r4, #1]!
   108cc:	cmp	r4, r5
   108d0:	bne	108b0 <sprintf@plt+0x138>
   108d4:	mov	r0, r7
   108d8:	ldrd	r4, [sp]
   108dc:	ldrd	r6, [sp, #8]
   108e0:	ldr	r8, [sp, #16]
   108e4:	add	sp, sp, #20
   108e8:	pop	{pc}		; (ldr pc, [sp], #4)
   108ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   108f0:	strd	r6, [sp, #8]
   108f4:	str	r8, [sp, #16]
   108f8:	str	lr, [sp, #20]
   108fc:	mov	r5, r0
   10900:	mov	r4, r1
   10904:	mov	r1, #0
   10908:	movw	r0, #4648	; 0x1228
   1090c:	movt	r0, #1
   10910:	bl	1067c <open@plt>
   10914:	subs	r7, r0, #0
   10918:	blt	1099c <sprintf@plt+0x224>
   1091c:	mov	r1, r4
   10920:	mov	r0, #1
   10924:	bl	106c4 <calloc@plt>
   10928:	mov	r6, r0
   1092c:	mov	r2, r4
   10930:	mov	r1, r0
   10934:	mov	r0, r7
   10938:	bl	106dc <read@plt>
   1093c:	cmp	r0, r4
   10940:	bne	109ac <sprintf@plt+0x234>
   10944:	cmp	r4, #0
   10948:	ble	1097c <sprintf@plt+0x204>
   1094c:	sub	r2, r6, #1
   10950:	sub	r1, r5, #1
   10954:	sub	r4, r4, #1
   10958:	add	r4, r6, r4
   1095c:	movw	r0, #4580	; 0x11e4
   10960:	movt	r0, #1
   10964:	ldrb	r3, [r2, #1]!
   10968:	and	r3, r3, #63	; 0x3f
   1096c:	ldrb	r3, [r0, r3]
   10970:	strb	r3, [r1, #1]!
   10974:	cmp	r2, r4
   10978:	bne	10964 <sprintf@plt+0x1ec>
   1097c:	mov	r0, r6
   10980:	bl	106d0 <free@plt>
   10984:	mov	r0, r5
   10988:	ldrd	r4, [sp]
   1098c:	ldrd	r6, [sp, #8]
   10990:	ldr	r8, [sp, #16]
   10994:	add	sp, sp, #20
   10998:	pop	{pc}		; (ldr pc, [sp], #4)
   1099c:	mov	r1, r4
   109a0:	mov	r0, r5
   109a4:	bl	10874 <sprintf@plt+0xfc>
   109a8:	b	10988 <sprintf@plt+0x210>
   109ac:	mov	r0, r6
   109b0:	bl	106d0 <free@plt>
   109b4:	mov	r1, r4
   109b8:	mov	r0, r5
   109bc:	bl	10874 <sprintf@plt+0xfc>
   109c0:	b	10988 <sprintf@plt+0x210>
   109c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   109c8:	strd	r6, [sp, #8]
   109cc:	strd	r8, [sp, #16]
   109d0:	strd	sl, [sp, #24]
   109d4:	str	lr, [sp, #32]
   109d8:	sub	sp, sp, #20
   109dc:	mov	r6, r0
   109e0:	mov	r8, r1
   109e4:	mov	r3, #0
   109e8:	mov	fp, r3
   109ec:	str	r3, [sp]
   109f0:	str	r3, [sp, #4]
   109f4:	mov	r4, r3
   109f8:	mov	sl, r3
   109fc:	movw	r5, #5560	; 0x15b8
   10a00:	movt	r5, #1
   10a04:	movw	r9, #5536	; 0x15a0
   10a08:	movt	r9, #1
   10a0c:	movw	r7, #8312	; 0x2078
   10a10:	movt	r7, #2
   10a14:	b	10a1c <sprintf@plt+0x2a4>
   10a18:	orr	r4, r4, #1
   10a1c:	mov	r2, r5
   10a20:	mov	r1, r8
   10a24:	mov	r0, r6
   10a28:	bl	106f4 <getopt@plt>
   10a2c:	cmn	r0, #1
   10a30:	beq	10ca4 <sprintf@plt+0x52c>
   10a34:	sub	r3, r0, #63	; 0x3f
   10a38:	cmp	r3, #58	; 0x3a
   10a3c:	ldrls	pc, [pc, r3, lsl #2]
   10a40:	b	10c94 <sprintf@plt+0x51c>
   10a44:	andeq	r0, r1, r8, lsr ip
   10a48:	muleq	r1, r4, ip
   10a4c:	muleq	r1, r4, ip
   10a50:	muleq	r1, r4, ip
   10a54:	muleq	r1, r4, ip
   10a58:	muleq	r1, r4, ip
   10a5c:	muleq	r1, r4, ip
   10a60:	muleq	r1, r4, ip
   10a64:	muleq	r1, r4, ip
   10a68:	muleq	r1, r4, ip
   10a6c:	muleq	r1, r4, ip
   10a70:	muleq	r1, r4, ip
   10a74:	muleq	r1, r4, ip
   10a78:	muleq	r1, r4, ip
   10a7c:	muleq	r1, r4, ip
   10a80:	muleq	r1, r4, ip
   10a84:	muleq	r1, r4, ip
   10a88:	muleq	r1, r4, ip
   10a8c:	muleq	r1, r4, ip
   10a90:	muleq	r1, r4, ip
   10a94:	muleq	r1, r4, ip
   10a98:	muleq	r1, r4, ip
   10a9c:	muleq	r1, r4, ip
   10aa0:	muleq	r1, r4, ip
   10aa4:	muleq	r1, r4, ip
   10aa8:	muleq	r1, r4, ip
   10aac:	muleq	r1, r4, ip
   10ab0:	muleq	r1, r4, ip
   10ab4:	muleq	r1, r4, ip
   10ab8:	muleq	r1, r4, ip
   10abc:	muleq	r1, r4, ip
   10ac0:	muleq	r1, r4, ip
   10ac4:	muleq	r1, r4, ip
   10ac8:	muleq	r1, r4, ip
   10acc:	muleq	r1, r4, ip
   10ad0:	andeq	r0, r1, r0, lsr fp
   10ad4:	muleq	r1, r4, ip
   10ad8:	muleq	r1, r4, ip
   10adc:	muleq	r1, r4, ip
   10ae0:	muleq	r1, r4, ip
   10ae4:	muleq	r1, r4, ip
   10ae8:	andeq	r0, r1, r0, lsr #23
   10aec:	muleq	r1, r4, ip
   10af0:	muleq	r1, r4, ip
   10af4:	muleq	r1, r4, ip
   10af8:	andeq	r0, r1, r0, asr #22
   10afc:	andeq	r0, r1, r8, lsl sl
   10b00:	muleq	r1, r4, ip
   10b04:	muleq	r1, r4, ip
   10b08:	andeq	r0, r1, r4, lsl #23
   10b0c:	muleq	r1, r4, ip
   10b10:	andeq	r0, r1, ip, asr fp
   10b14:	andeq	r0, r1, r8, ror fp
   10b18:	muleq	r1, r4, ip
   10b1c:	muleq	r1, r4, ip
   10b20:	muleq	r1, r4, ip
   10b24:	muleq	r1, r4, ip
   10b28:	muleq	r1, r0, fp
   10b2c:	muleq	r1, r8, fp
   10b30:	orr	r4, r4, #16
   10b34:	mov	r3, #4
   10b38:	str	r3, [sp]
   10b3c:	b	10a1c <sprintf@plt+0x2a4>
   10b40:	orr	r4, r4, #8
   10b44:	mov	r2, #10
   10b48:	mov	r1, #0
   10b4c:	ldr	r0, [r7]
   10b50:	bl	10700 <strtol@plt>
   10b54:	str	r0, [sp, #4]
   10b58:	b	10a1c <sprintf@plt+0x2a4>
   10b5c:	orr	r4, r4, #32
   10b60:	mov	r2, #10
   10b64:	mov	r1, #0
   10b68:	ldr	r0, [r7]
   10b6c:	bl	10700 <strtol@plt>
   10b70:	str	r0, [sp]
   10b74:	b	10a1c <sprintf@plt+0x2a4>
   10b78:	orr	r4, r4, #2
   10b7c:	ldr	sl, [r7]
   10b80:	b	10a1c <sprintf@plt+0x2a4>
   10b84:	orr	r4, r4, #4
   10b88:	ldr	fp, [r7]
   10b8c:	b	10a1c <sprintf@plt+0x2a4>
   10b90:	orr	r4, r4, #64	; 0x40
   10b94:	b	10a1c <sprintf@plt+0x2a4>
   10b98:	orr	r4, r4, #128	; 0x80
   10b9c:	b	10a1c <sprintf@plt+0x2a4>
   10ba0:	movw	r0, #4660	; 0x1234
   10ba4:	movt	r0, #1
   10ba8:	bl	10748 <puts@plt>
   10bac:	movw	r0, #4736	; 0x1280
   10bb0:	movt	r0, #1
   10bb4:	bl	10748 <puts@plt>
   10bb8:	movw	r0, #4768	; 0x12a0
   10bbc:	movt	r0, #1
   10bc0:	bl	10748 <puts@plt>
   10bc4:	movw	r0, #4800	; 0x12c0
   10bc8:	movt	r0, #1
   10bcc:	bl	10748 <puts@plt>
   10bd0:	movw	r0, #4828	; 0x12dc
   10bd4:	movt	r0, #1
   10bd8:	bl	10748 <puts@plt>
   10bdc:	movw	r0, #4860	; 0x12fc
   10be0:	movt	r0, #1
   10be4:	bl	10748 <puts@plt>
   10be8:	movw	r0, #4916	; 0x1334
   10bec:	movt	r0, #1
   10bf0:	bl	10748 <puts@plt>
   10bf4:	movw	r0, #4972	; 0x136c
   10bf8:	movt	r0, #1
   10bfc:	bl	10748 <puts@plt>
   10c00:	movw	r0, #5016	; 0x1398
   10c04:	movt	r0, #1
   10c08:	bl	10748 <puts@plt>
   10c0c:	movw	r0, #5072	; 0x13d0
   10c10:	movt	r0, #1
   10c14:	bl	10748 <puts@plt>
   10c18:	movw	r0, #5100	; 0x13ec
   10c1c:	movt	r0, #1
   10c20:	bl	10748 <puts@plt>
   10c24:	movw	r0, #5140	; 0x1414
   10c28:	movt	r0, #1
   10c2c:	bl	10748 <puts@plt>
   10c30:	mov	r0, #0
   10c34:	bl	1076c <exit@plt>
   10c38:	movw	r0, #5176	; 0x1438
   10c3c:	movt	r0, #1
   10c40:	bl	10748 <puts@plt>
   10c44:	movw	r0, #5212	; 0x145c
   10c48:	movt	r0, #1
   10c4c:	bl	10748 <puts@plt>
   10c50:	movw	r0, #5280	; 0x14a0
   10c54:	movt	r0, #1
   10c58:	bl	10748 <puts@plt>
   10c5c:	movw	r0, #5344	; 0x14e0
   10c60:	movt	r0, #1
   10c64:	bl	10748 <puts@plt>
   10c68:	movw	r0, #5408	; 0x1520
   10c6c:	movt	r0, #1
   10c70:	bl	10748 <puts@plt>
   10c74:	movw	r0, #5472	; 0x1560
   10c78:	movt	r0, #1
   10c7c:	bl	10748 <puts@plt>
   10c80:	movw	r0, #5512	; 0x1588
   10c84:	movt	r0, #1
   10c88:	bl	10748 <puts@plt>
   10c8c:	mov	r0, #0
   10c90:	bl	1076c <exit@plt>
   10c94:	mov	r1, r0
   10c98:	mov	r0, r9
   10c9c:	bl	1070c <printf@plt>
   10ca0:	b	10a1c <sprintf@plt+0x2a4>
   10ca4:	tst	r4, #1
   10ca8:	beq	10d34 <sprintf@plt+0x5bc>
   10cac:	ldr	r3, [sp, #4]
   10cb0:	cmp	r3, #0
   10cb4:	beq	10fe0 <sprintf@plt+0x868>
   10cb8:	tst	r4, #2
   10cbc:	bne	10ff0 <sprintf@plt+0x878>
   10cc0:	ldr	r3, [sp, #4]
   10cc4:	cmp	r3, #16
   10cc8:	ble	10cf4 <sprintf@plt+0x57c>
   10ccc:	movw	r0, #5652	; 0x1614
   10cd0:	movt	r0, #1
   10cd4:	bl	10748 <puts@plt>
   10cd8:	mov	r0, #0
   10cdc:	bl	1076c <exit@plt>
   10ce0:	movw	r0, #5584	; 0x15d0
   10ce4:	movt	r0, #1
   10ce8:	bl	10748 <puts@plt>
   10cec:	mov	r0, #1
   10cf0:	bl	1076c <exit@plt>
   10cf4:	movw	r5, #8320	; 0x2080
   10cf8:	movt	r5, #2
   10cfc:	mov	r6, #36	; 0x24
   10d00:	strb	r6, [r5]
   10d04:	mov	r3, #49	; 0x31
   10d08:	strb	r3, [r5, #1]
   10d0c:	strb	r6, [r5, #2]
   10d10:	ldr	r7, [sp, #4]
   10d14:	mov	r1, r7
   10d18:	add	r0, r5, #3
   10d1c:	bl	108ec <sprintf@plt+0x174>
   10d20:	add	r9, r5, r7
   10d24:	strb	r6, [r9, #3]
   10d28:	mov	r3, #0
   10d2c:	strb	r3, [r9, #4]
   10d30:	b	11020 <sprintf@plt+0x8a8>
   10d34:	tst	r4, #16
   10d38:	beq	10dd0 <sprintf@plt+0x658>
   10d3c:	ldr	r3, [sp, #4]
   10d40:	cmp	r3, #0
   10d44:	beq	11068 <sprintf@plt+0x8f0>
   10d48:	tst	r4, #2
   10d4c:	beq	10db0 <sprintf@plt+0x638>
   10d50:	cmp	sl, #0
   10d54:	beq	10d9c <sprintf@plt+0x624>
   10d58:	mov	r0, sl
   10d5c:	bl	106e8 <strlen@plt>
   10d60:	cmp	r0, #22
   10d64:	bhi	10d9c <sprintf@plt+0x624>
   10d68:	ldr	r2, [sp]
   10d6c:	movw	r1, #5680	; 0x1630
   10d70:	movt	r1, #1
   10d74:	add	r0, sp, #12
   10d78:	bl	10778 <sprintf@plt>
   10d7c:	ldr	r5, [pc, #984]	; 1115c <sprintf@plt+0x9e4>
   10d80:	mov	r3, sl
   10d84:	add	r2, sp, #12
   10d88:	movw	r1, #5688	; 0x1638
   10d8c:	movt	r1, #1
   10d90:	mov	r0, r5
   10d94:	bl	10778 <sprintf@plt>
   10d98:	b	11020 <sprintf@plt+0x8a8>
   10d9c:	movw	r0, #5700	; 0x1644
   10da0:	movt	r0, #1
   10da4:	bl	10748 <puts@plt>
   10da8:	mov	r0, #1
   10dac:	bl	1076c <exit@plt>
   10db0:	ldr	r3, [sp, #4]
   10db4:	cmp	r3, #22
   10db8:	ble	11078 <sprintf@plt+0x900>
   10dbc:	movw	r0, #5768	; 0x1688
   10dc0:	movt	r0, #1
   10dc4:	bl	10748 <puts@plt>
   10dc8:	mov	r0, #0
   10dcc:	bl	1076c <exit@plt>
   10dd0:	tst	r4, #64	; 0x40
   10dd4:	beq	10e64 <sprintf@plt+0x6ec>
   10dd8:	ldr	r3, [sp, #4]
   10ddc:	cmp	r3, #0
   10de0:	beq	110d4 <sprintf@plt+0x95c>
   10de4:	tst	r4, #2
   10de8:	bne	110e4 <sprintf@plt+0x96c>
   10dec:	ldr	r3, [sp, #4]
   10df0:	cmp	r3, #16
   10df4:	ble	10e20 <sprintf@plt+0x6a8>
   10df8:	movw	r0, #5816	; 0x16b8
   10dfc:	movt	r0, #1
   10e00:	bl	10748 <puts@plt>
   10e04:	mov	r0, #0
   10e08:	bl	1076c <exit@plt>
   10e0c:	movw	r0, #5584	; 0x15d0
   10e10:	movt	r0, #1
   10e14:	bl	10748 <puts@plt>
   10e18:	mov	r0, #1
   10e1c:	bl	1076c <exit@plt>
   10e20:	movw	r5, #8320	; 0x2080
   10e24:	movt	r5, #2
   10e28:	mov	r6, #36	; 0x24
   10e2c:	strb	r6, [r5, #56]	; 0x38
   10e30:	mov	r3, #53	; 0x35
   10e34:	strb	r3, [r5, #57]	; 0x39
   10e38:	strb	r6, [r5, #58]	; 0x3a
   10e3c:	ldr	r7, [sp, #4]
   10e40:	mov	r1, r7
   10e44:	add	r0, r5, #59	; 0x3b
   10e48:	bl	108ec <sprintf@plt+0x174>
   10e4c:	add	r5, r5, r7
   10e50:	strb	r6, [r5, #59]	; 0x3b
   10e54:	mov	r3, #0
   10e58:	strb	r3, [r5, #60]	; 0x3c
   10e5c:	ldr	r5, [pc, #764]	; 11160 <sprintf@plt+0x9e8>
   10e60:	b	11020 <sprintf@plt+0x8a8>
   10e64:	ldr	r3, [sp, #4]
   10e68:	cmp	r3, #0
   10e6c:	beq	11118 <sprintf@plt+0x9a0>
   10e70:	tst	r4, #2
   10e74:	bne	11128 <sprintf@plt+0x9b0>
   10e78:	ldr	r3, [sp, #4]
   10e7c:	cmp	r3, #16
   10e80:	ble	10eac <sprintf@plt+0x734>
   10e84:	movw	r0, #5852	; 0x16dc
   10e88:	movt	r0, #1
   10e8c:	bl	10748 <puts@plt>
   10e90:	mov	r0, #0
   10e94:	bl	1076c <exit@plt>
   10e98:	movw	r0, #5584	; 0x15d0
   10e9c:	movt	r0, #1
   10ea0:	bl	10748 <puts@plt>
   10ea4:	mov	r0, #1
   10ea8:	bl	1076c <exit@plt>
   10eac:	movw	r5, #8320	; 0x2080
   10eb0:	movt	r5, #2
   10eb4:	mov	r6, #36	; 0x24
   10eb8:	strb	r6, [r5, #104]	; 0x68
   10ebc:	mov	r3, #54	; 0x36
   10ec0:	strb	r3, [r5, #105]	; 0x69
   10ec4:	strb	r6, [r5, #106]	; 0x6a
   10ec8:	ldr	r7, [sp, #4]
   10ecc:	mov	r1, r7
   10ed0:	add	r0, r5, #107	; 0x6b
   10ed4:	bl	108ec <sprintf@plt+0x174>
   10ed8:	add	r5, r5, r7
   10edc:	strb	r6, [r5, #107]	; 0x6b
   10ee0:	mov	r3, #0
   10ee4:	strb	r3, [r5, #108]	; 0x6c
   10ee8:	ldr	r5, [pc, #628]	; 11164 <sprintf@plt+0x9ec>
   10eec:	b	11020 <sprintf@plt+0x8a8>
   10ef0:	movw	r3, #8304	; 0x2070
   10ef4:	movt	r3, #2
   10ef8:	ldr	r3, [r3]
   10efc:	mov	r2, #30
   10f00:	mov	r1, #1
   10f04:	movw	r0, #5880	; 0x16f8
   10f08:	movt	r0, #1
   10f0c:	bl	10718 <fwrite@plt>
   10f10:	mov	r0, #1
   10f14:	b	1104c <sprintf@plt+0x8d4>
   10f18:	movw	r0, #5912	; 0x1718
   10f1c:	movt	r0, #1
   10f20:	bl	106b8 <getpass@plt>
   10f24:	mov	r1, r5
   10f28:	bl	1073c <rb_crypt@plt>
   10f2c:	cmp	r0, #0
   10f30:	beq	10f90 <sprintf@plt+0x818>
   10f34:	bl	10730 <strdup@plt>
   10f38:	mov	r4, r0
   10f3c:	movw	r0, #5944	; 0x1738
   10f40:	movt	r0, #1
   10f44:	bl	106b8 <getpass@plt>
   10f48:	mov	r1, r5
   10f4c:	bl	1073c <rb_crypt@plt>
   10f50:	subs	r1, r0, #0
   10f54:	beq	10fb8 <sprintf@plt+0x840>
   10f58:	mov	r0, r4
   10f5c:	bl	10760 <strcmp@plt>
   10f60:	cmp	r0, #0
   10f64:	beq	11040 <sprintf@plt+0x8c8>
   10f68:	movw	r3, #8304	; 0x2070
   10f6c:	movt	r3, #2
   10f70:	ldr	r3, [r3]
   10f74:	mov	r2, #23
   10f78:	mov	r1, #1
   10f7c:	movw	r0, #5952	; 0x1740
   10f80:	movt	r0, #1
   10f84:	bl	10718 <fwrite@plt>
   10f88:	mov	r0, #1
   10f8c:	b	1104c <sprintf@plt+0x8d4>
   10f90:	movw	r3, #8304	; 0x2070
   10f94:	movt	r3, #2
   10f98:	ldr	r3, [r3]
   10f9c:	mov	r2, #18
   10fa0:	mov	r1, #1
   10fa4:	movw	r0, #5924	; 0x1724
   10fa8:	movt	r0, #1
   10fac:	bl	10718 <fwrite@plt>
   10fb0:	mov	r0, #1
   10fb4:	b	1104c <sprintf@plt+0x8d4>
   10fb8:	movw	r3, #8304	; 0x2070
   10fbc:	movt	r3, #2
   10fc0:	ldr	r3, [r3]
   10fc4:	mov	r2, #18
   10fc8:	mov	r1, #1
   10fcc:	movw	r0, #5924	; 0x1724
   10fd0:	movt	r0, #1
   10fd4:	bl	10718 <fwrite@plt>
   10fd8:	mov	r0, #1
   10fdc:	b	1104c <sprintf@plt+0x8d4>
   10fe0:	tst	r4, #2
   10fe4:	moveq	r3, #8
   10fe8:	streq	r3, [sp, #4]
   10fec:	beq	10cf4 <sprintf@plt+0x57c>
   10ff0:	cmp	sl, #0
   10ff4:	beq	10ce0 <sprintf@plt+0x568>
   10ff8:	mov	r0, sl
   10ffc:	bl	106e8 <strlen@plt>
   11000:	cmp	r0, #16
   11004:	bhi	10ce0 <sprintf@plt+0x568>
   11008:	ldr	r5, [pc, #344]	; 11168 <sprintf@plt+0x9f0>
   1100c:	mov	r2, sl
   11010:	movw	r1, #5576	; 0x15c8
   11014:	movt	r1, #1
   11018:	mov	r0, r5
   1101c:	bl	10778 <sprintf@plt>
   11020:	tst	r4, #4
   11024:	beq	10f18 <sprintf@plt+0x7a0>
   11028:	cmp	fp, #0
   1102c:	beq	10ef0 <sprintf@plt+0x778>
   11030:	mov	r1, r5
   11034:	mov	r0, fp
   11038:	bl	1073c <rb_crypt@plt>
   1103c:	mov	r4, r0
   11040:	mov	r0, r4
   11044:	bl	10748 <puts@plt>
   11048:	mov	r0, #0
   1104c:	add	sp, sp, #20
   11050:	ldrd	r4, [sp]
   11054:	ldrd	r6, [sp, #8]
   11058:	ldrd	r8, [sp, #16]
   1105c:	ldrd	sl, [sp, #24]
   11060:	add	sp, sp, #32
   11064:	pop	{pc}		; (ldr pc, [sp], #4)
   11068:	tst	r4, #2
   1106c:	moveq	r3, #22
   11070:	streq	r3, [sp, #4]
   11074:	bne	10d50 <sprintf@plt+0x5d8>
   11078:	ldr	r2, [sp]
   1107c:	movw	r1, #5680	; 0x1630
   11080:	movt	r1, #1
   11084:	add	r0, sp, #12
   11088:	bl	10778 <sprintf@plt>
   1108c:	movw	r6, #8320	; 0x2080
   11090:	movt	r6, #2
   11094:	add	r5, r6, #24
   11098:	add	r2, sp, #12
   1109c:	movw	r1, #5800	; 0x16a8
   110a0:	movt	r1, #1
   110a4:	mov	r0, r5
   110a8:	bl	10778 <sprintf@plt>
   110ac:	ldr	r7, [sp, #4]
   110b0:	mov	r1, r7
   110b4:	add	r0, r6, #31
   110b8:	bl	108ec <sprintf@plt+0x174>
   110bc:	add	r6, r6, r7
   110c0:	mov	r3, #36	; 0x24
   110c4:	strb	r3, [r6, #31]
   110c8:	mov	r3, #0
   110cc:	strb	r3, [r6, #32]
   110d0:	b	11020 <sprintf@plt+0x8a8>
   110d4:	tst	r4, #2
   110d8:	moveq	r3, #16
   110dc:	streq	r3, [sp, #4]
   110e0:	beq	10e20 <sprintf@plt+0x6a8>
   110e4:	cmp	sl, #0
   110e8:	beq	10e0c <sprintf@plt+0x694>
   110ec:	mov	r0, sl
   110f0:	bl	106e8 <strlen@plt>
   110f4:	cmp	r0, #16
   110f8:	bhi	10e0c <sprintf@plt+0x694>
   110fc:	ldr	r5, [pc, #104]	; 1116c <sprintf@plt+0x9f4>
   11100:	mov	r2, sl
   11104:	movw	r1, #5808	; 0x16b0
   11108:	movt	r1, #1
   1110c:	mov	r0, r5
   11110:	bl	10778 <sprintf@plt>
   11114:	b	11020 <sprintf@plt+0x8a8>
   11118:	tst	r4, #2
   1111c:	moveq	r3, #16
   11120:	streq	r3, [sp, #4]
   11124:	beq	10eac <sprintf@plt+0x734>
   11128:	cmp	sl, #0
   1112c:	beq	10e98 <sprintf@plt+0x720>
   11130:	mov	r0, sl
   11134:	bl	106e8 <strlen@plt>
   11138:	cmp	r0, #16
   1113c:	bhi	10e98 <sprintf@plt+0x720>
   11140:	ldr	r5, [pc, #40]	; 11170 <sprintf@plt+0x9f8>
   11144:	mov	r2, sl
   11148:	movw	r1, #5844	; 0x16d4
   1114c:	movt	r1, #1
   11150:	mov	r0, r5
   11154:	bl	10778 <sprintf@plt>
   11158:	b	11020 <sprintf@plt+0x8a8>
   1115c:	andeq	r2, r2, r8, lsl r1
   11160:	strheq	r2, [r2], -r8
   11164:	andeq	r2, r2, r8, ror #1
   11168:	andeq	r2, r2, r0, lsl #2
   1116c:	andeq	r2, r2, r8, lsr r1
   11170:	ldrdeq	r2, [r2], -r0
   11174:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11178:	mov	r7, r0
   1117c:	ldr	r6, [pc, #72]	; 111cc <sprintf@plt+0xa54>
   11180:	ldr	r5, [pc, #72]	; 111d0 <sprintf@plt+0xa58>
   11184:	add	r6, pc, r6
   11188:	add	r5, pc, r5
   1118c:	sub	r6, r6, r5
   11190:	mov	r8, r1
   11194:	mov	r9, r2
   11198:	bl	1065c <open@plt-0x20>
   1119c:	asrs	r6, r6, #2
   111a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   111a4:	mov	r4, #0
   111a8:	add	r4, r4, #1
   111ac:	ldr	r3, [r5], #4
   111b0:	mov	r2, r9
   111b4:	mov	r1, r8
   111b8:	mov	r0, r7
   111bc:	blx	r3
   111c0:	cmp	r6, r4
   111c4:	bne	111a8 <sprintf@plt+0xa30>
   111c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111cc:	andeq	r0, r1, r0, ror sp
   111d0:	andeq	r0, r1, r8, ror #26
   111d4:	bx	lr

Disassembly of section .fini:

000111d8 <.fini>:
   111d8:	push	{r3, lr}
   111dc:	pop	{r3, pc}
