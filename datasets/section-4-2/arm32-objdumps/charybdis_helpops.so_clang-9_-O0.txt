
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000007a0 <_init>:
 7a0:	push	{r3, lr}
 7a4:	bl	874 <call_weak_fn>
 7a8:	pop	{r3, pc}

Disassembly of section .plt:

000007ac <.plt>:
 7ac:	push	{lr}		; (str lr, [sp, #-4]!)
 7b0:	ldr	lr, [pc, #4]	; 7bc <.plt+0x10>
 7b4:	add	lr, pc, lr
 7b8:	ldr	pc, [lr, #8]!
 7bc:	.word	0x00011844

000007c0 <__cxa_finalize@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2116]!	; 0x844

000007cc <sendto_one@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2108]!	; 0x83c

000007d8 <user_mode@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2100]!	; 0x834

000007e4 <sendto_realops_snomask@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2092]!	; 0x82c

000007f0 <find_umode_slot@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2084]!	; 0x824

000007fc <rb_free_rb_dlink_node@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2076]!	; 0x81c

00000808 <__gmon_start__@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2068]!	; 0x814

00000814 <rb_make_rb_dlink_node@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2060]!	; 0x80c

00000820 <sendto_one_numeric@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2052]!	; 0x804

0000082c <find_person@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2044]!	; 0x7fc

00000838 <sendto_one_notice@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2036]!	; 0x7f4

00000844 <find_named_person@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000850 <privilegeset_in_set@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2020]!	; 0x7e4

0000085c <__assert_fail@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2012]!	; 0x7dc

00000868 <construct_umodebuf@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000874 <call_weak_fn>:
     874:	ldr	r3, [pc, #20]	; 890 <call_weak_fn+0x1c>
     878:	ldr	r2, [pc, #20]	; 894 <call_weak_fn+0x20>
     87c:	add	r3, pc, r3
     880:	ldr	r2, [r3, r2]
     884:	cmp	r2, #0
     888:	bxeq	lr
     88c:	b	808 <__gmon_start__@plt>
     890:	.word	0x0001177c
     894:	.word	0x00000054

00000898 <deregister_tm_clones>:
     898:	ldr	r0, [pc, #44]	; 8cc <deregister_tm_clones+0x34>
     89c:	ldr	r3, [pc, #44]	; 8d0 <deregister_tm_clones+0x38>
     8a0:	add	r0, pc, r0
     8a4:	add	r3, pc, r3
     8a8:	cmp	r3, r0
     8ac:	ldr	r3, [pc, #32]	; 8d4 <deregister_tm_clones+0x3c>
     8b0:	add	r3, pc, r3
     8b4:	bxeq	lr
     8b8:	ldr	r2, [pc, #24]	; 8d8 <deregister_tm_clones+0x40>
     8bc:	ldr	r3, [r3, r2]
     8c0:	cmp	r3, #0
     8c4:	bxeq	lr
     8c8:	bx	r3
     8cc:	.word	0x00011888
     8d0:	.word	0x00011884
     8d4:	.word	0x00011748
     8d8:	.word	0x0000004c

000008dc <register_tm_clones>:
     8dc:	ldr	r0, [pc, #56]	; 91c <register_tm_clones+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <register_tm_clones+0x44>
     8e4:	add	r0, pc, r0
     8e8:	add	r3, pc, r3
     8ec:	sub	r1, r3, r0
     8f0:	ldr	r3, [pc, #44]	; 924 <register_tm_clones+0x48>
     8f4:	asr	r1, r1, #2
     8f8:	add	r3, pc, r3
     8fc:	add	r1, r1, r1, lsr #31
     900:	asrs	r1, r1, #1
     904:	bxeq	lr
     908:	ldr	r2, [pc, #24]	; 928 <register_tm_clones+0x4c>
     90c:	ldr	r3, [r3, r2]
     910:	cmp	r3, #0
     914:	bxeq	lr
     918:	bx	r3
     91c:	.word	0x00011844
     920:	.word	0x00011840
     924:	.word	0x00011700
     928:	.word	0x0000005c

0000092c <__do_global_dtors_aux>:
     92c:	ldr	r3, [pc, #76]	; 980 <__do_global_dtors_aux+0x54>
     930:	ldr	r2, [pc, #76]	; 984 <__do_global_dtors_aux+0x58>
     934:	add	r3, pc, r3
     938:	add	r2, pc, r2
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	bxne	lr
     948:	ldr	r3, [pc, #56]	; 988 <__do_global_dtors_aux+0x5c>
     94c:	push	{r4, lr}
     950:	ldr	r3, [r2, r3]
     954:	cmp	r3, #0
     958:	beq	968 <__do_global_dtors_aux+0x3c>
     95c:	ldr	r3, [pc, #40]	; 98c <__do_global_dtors_aux+0x60>
     960:	ldr	r0, [pc, r3]
     964:	bl	7c0 <__cxa_finalize@plt>
     968:	bl	898 <deregister_tm_clones>
     96c:	ldr	r3, [pc, #28]	; 990 <__do_global_dtors_aux+0x64>
     970:	mov	r2, #1
     974:	add	r3, pc, r3
     978:	strb	r2, [r3]
     97c:	pop	{r4, pc}
     980:	.word	0x000117f4
     984:	.word	0x000116c0
     988:	.word	0x00000048
     98c:	.word	0x000116fc
     990:	.word	0x000117b4

00000994 <frame_dummy>:
     994:	b	8dc <register_tm_clones>

00000998 <h_hdl_stats_request>:
     998:	push	{fp, lr}
     99c:	mov	fp, sp
     9a0:	sub	sp, sp, #32
     9a4:	str	r0, [fp, #-4]
     9a8:	movw	r0, #0
     9ac:	str	r0, [sp, #16]
     9b0:	ldr	r0, [fp, #-4]
     9b4:	ldr	r0, [r0, #8]
     9b8:	cmp	r0, #112	; 0x70
     9bc:	beq	9c4 <h_hdl_stats_request+0x2c>
     9c0:	b	a94 <h_hdl_stats_request+0xfc>
     9c4:	ldr	r0, [pc, #208]	; a9c <h_hdl_stats_request+0x104>
     9c8:	add	r0, pc, r0
     9cc:	ldr	r0, [r0]
     9d0:	str	r0, [fp, #-12]
     9d4:	ldr	r0, [fp, #-12]
     9d8:	movw	r1, #0
     9dc:	cmp	r0, r1
     9e0:	beq	a6c <h_hdl_stats_request+0xd4>
     9e4:	ldr	r0, [fp, #-12]
     9e8:	ldr	r0, [r0]
     9ec:	str	r0, [fp, #-8]
     9f0:	ldr	r0, [fp, #-8]
     9f4:	ldr	r0, [r0, #24]
     9f8:	ldr	r0, [r0, #24]
     9fc:	movw	r1, #0
     a00:	cmp	r0, r1
     a04:	beq	a0c <h_hdl_stats_request+0x74>
     a08:	b	a5c <h_hdl_stats_request+0xc4>
     a0c:	ldr	r0, [pc, #144]	; aa4 <h_hdl_stats_request+0x10c>
     a10:	add	r2, pc, r0
     a14:	ldr	r0, [sp, #16]
     a18:	add	r0, r0, #1
     a1c:	str	r0, [sp, #16]
     a20:	ldr	r0, [fp, #-4]
     a24:	ldr	r0, [r0]
     a28:	ldr	r1, [fp, #-8]
     a2c:	add	r3, r1, #88	; 0x58
     a30:	ldr	r1, [fp, #-8]
     a34:	add	r1, r1, #152	; 0x98
     a38:	ldr	ip, [fp, #-8]
     a3c:	add	ip, ip, #163	; 0xa3
     a40:	movw	lr, #249	; 0xf9
     a44:	str	r1, [sp, #12]
     a48:	mov	r1, lr
     a4c:	ldr	lr, [sp, #12]
     a50:	str	lr, [sp]
     a54:	str	ip, [sp, #4]
     a58:	bl	820 <sendto_one_numeric@plt>
     a5c:	ldr	r0, [fp, #-12]
     a60:	ldr	r0, [r0, #8]
     a64:	str	r0, [fp, #-12]
     a68:	b	9d4 <h_hdl_stats_request+0x3c>
     a6c:	ldr	r0, [pc, #44]	; aa0 <h_hdl_stats_request+0x108>
     a70:	add	r2, pc, r0
     a74:	ldr	r0, [fp, #-4]
     a78:	ldr	r0, [r0]
     a7c:	ldr	r3, [sp, #16]
     a80:	movw	r1, #249	; 0xf9
     a84:	bl	820 <sendto_one_numeric@plt>
     a88:	ldr	r0, [fp, #-4]
     a8c:	movw	r1, #1
     a90:	str	r1, [r0, #12]
     a94:	mov	sp, fp
     a98:	pop	{fp, pc}
     a9c:	.word	0x00011764
     aa0:	.word	0x000010a6
     aa4:	.word	0x000010f8

00000aa8 <h_hdl_new_remote_user>:
     aa8:	push	{fp, lr}
     aac:	mov	fp, sp
     ab0:	sub	sp, sp, #8
     ab4:	ldr	r1, [pc, #44]	; ae8 <h_hdl_new_remote_user+0x40>
     ab8:	ldr	r1, [pc, r1]
     abc:	str	r0, [sp, #4]
     ac0:	ldr	r0, [sp, #4]
     ac4:	ldr	r0, [r0, #56]	; 0x38
     ac8:	ldr	r1, [r1, #288]	; 0x120
     acc:	and	r0, r0, r1
     ad0:	cmp	r0, #0
     ad4:	beq	ae0 <h_hdl_new_remote_user+0x38>
     ad8:	ldr	r0, [sp, #4]
     adc:	bl	1260 <helper_add>
     ae0:	mov	sp, fp
     ae4:	pop	{fp, pc}
     ae8:	.word	0x00011590

00000aec <h_hdl_client_exit>:
     aec:	push	{fp, lr}
     af0:	mov	fp, sp
     af4:	sub	sp, sp, #8
     af8:	str	r0, [sp, #4]
     afc:	ldr	r0, [sp, #4]
     b00:	ldr	r0, [r0, #4]
     b04:	bl	152c <recurse_client_exit>
     b08:	mov	sp, fp
     b0c:	pop	{fp, pc}

00000b10 <h_hdl_umode_changed>:
     b10:	push	{fp, lr}
     b14:	mov	fp, sp
     b18:	sub	sp, sp, #24
     b1c:	ldr	r1, [pc, #380]	; ca0 <h_hdl_umode_changed+0x190>
     b20:	ldr	r1, [pc, r1]
     b24:	str	r0, [fp, #-4]
     b28:	ldr	r0, [fp, #-4]
     b2c:	ldr	r0, [r0]
     b30:	str	r0, [fp, #-8]
     b34:	ldr	r0, [fp, #-4]
     b38:	ldr	r0, [r0, #4]
     b3c:	ldr	r2, [fp, #-8]
     b40:	ldr	r2, [r2, #56]	; 0x38
     b44:	eor	r0, r0, r2
     b48:	ldr	r2, [r1, #288]	; 0x120
     b4c:	and	r0, r0, r2
     b50:	cmp	r0, #0
     b54:	movw	r0, #0
     b58:	movne	r0, #1
     b5c:	and	r0, r0, #1
     b60:	strb	r0, [fp, #-9]
     b64:	ldr	r0, [fp, #-8]
     b68:	ldr	r0, [r0, #56]	; 0x38
     b6c:	ldr	r1, [r1, #288]	; 0x120
     b70:	and	r0, r0, r1
     b74:	cmp	r0, #0
     b78:	beq	c80 <h_hdl_umode_changed+0x170>
     b7c:	ldr	r0, [fp, #-8]
     b80:	ldrb	r0, [r0, #65]	; 0x41
     b84:	tst	r0, #32
     b88:	beq	c68 <h_hdl_umode_changed+0x158>
     b8c:	b	b90 <h_hdl_umode_changed+0x80>
     b90:	ldr	r0, [fp, #-8]
     b94:	ldrh	r0, [r0, #80]	; 0x50
     b98:	cmp	r0, #64	; 0x40
     b9c:	bne	c68 <h_hdl_umode_changed+0x158>
     ba0:	ldr	r0, [fp, #-8]
     ba4:	ldr	r0, [r0, #24]
     ba8:	movw	r1, #0
     bac:	cmp	r0, r1
     bb0:	beq	bec <h_hdl_umode_changed+0xdc>
     bb4:	ldr	r0, [fp, #-8]
     bb8:	ldr	r0, [r0, #24]
     bbc:	ldr	r0, [r0, #36]	; 0x24
     bc0:	movw	r1, #0
     bc4:	cmp	r0, r1
     bc8:	beq	bec <h_hdl_umode_changed+0xdc>
     bcc:	ldr	r0, [pc, #208]	; ca4 <h_hdl_umode_changed+0x194>
     bd0:	add	r1, pc, r0
     bd4:	ldr	r0, [fp, #-8]
     bd8:	ldr	r0, [r0, #24]
     bdc:	ldr	r0, [r0, #36]	; 0x24
     be0:	bl	850 <privilegeset_in_set@plt>
     be4:	cmp	r0, #0
     be8:	bne	c68 <h_hdl_umode_changed+0x158>
     bec:	ldr	r0, [pc, #180]	; ca8 <h_hdl_umode_changed+0x198>
     bf0:	add	r1, pc, r0
     bf4:	ldr	r0, [pc, #176]	; cac <h_hdl_umode_changed+0x19c>
     bf8:	ldr	r0, [pc, r0]
     bfc:	add	r2, r0, #88	; 0x58
     c00:	ldr	r0, [pc, #168]	; cb0 <h_hdl_umode_changed+0x1a0>
     c04:	add	r0, pc, r0
     c08:	ldr	r3, [pc, #164]	; cb4 <h_hdl_umode_changed+0x1a4>
     c0c:	ldr	r3, [pc, r3]
     c10:	ldr	r3, [r3, #288]	; 0x120
     c14:	mvn	ip, #0
     c18:	eor	r3, r3, ip
     c1c:	ldr	ip, [fp, #-8]
     c20:	ldr	lr, [ip, #56]	; 0x38
     c24:	and	r3, lr, r3
     c28:	str	r3, [ip, #56]	; 0x38
     c2c:	ldr	r3, [fp, #-8]
     c30:	ldr	ip, [fp, #-8]
     c34:	add	ip, ip, #88	; 0x58
     c38:	str	r0, [sp, #8]
     c3c:	mov	r0, r3
     c40:	mov	r3, ip
     c44:	ldr	ip, [sp, #8]
     c48:	str	ip, [sp]
     c4c:	bl	7cc <sendto_one@plt>
     c50:	ldrb	r0, [fp, #-9]
     c54:	tst	r0, #1
     c58:	bne	c64 <h_hdl_umode_changed+0x154>
     c5c:	ldr	r0, [fp, #-8]
     c60:	bl	1628 <helper_delete>
     c64:	b	c98 <h_hdl_umode_changed+0x188>
     c68:	ldrb	r0, [fp, #-9]
     c6c:	tst	r0, #1
     c70:	beq	c7c <h_hdl_umode_changed+0x16c>
     c74:	ldr	r0, [fp, #-8]
     c78:	bl	1260 <helper_add>
     c7c:	b	c98 <h_hdl_umode_changed+0x188>
     c80:	ldrb	r0, [fp, #-9]
     c84:	tst	r0, #1
     c88:	beq	c94 <h_hdl_umode_changed+0x184>
     c8c:	ldr	r0, [fp, #-8]
     c90:	bl	1628 <helper_delete>
     c94:	b	c98 <h_hdl_umode_changed+0x188>
     c98:	mov	sp, fp
     c9c:	pop	{fp, pc}
     ca0:	.word	0x00011528
     ca4:	.word	0x00001076
     ca8:	.word	0x00000e80
     cac:	.word	0x00011460
     cb0:	.word	0x00001042
     cb4:	.word	0x0001143c

00000cb8 <h_hdl_whois>:
     cb8:	push	{fp, lr}
     cbc:	mov	fp, sp
     cc0:	sub	sp, sp, #16
     cc4:	ldr	r1, [pc, #136]	; d54 <h_hdl_whois+0x9c>
     cc8:	ldr	r1, [pc, r1]
     ccc:	str	r0, [fp, #-4]
     cd0:	ldr	r0, [fp, #-4]
     cd4:	ldr	r0, [r0]
     cd8:	str	r0, [sp, #8]
     cdc:	ldr	r0, [fp, #-4]
     ce0:	ldr	r0, [r0, #4]
     ce4:	str	r0, [sp, #4]
     ce8:	ldr	r0, [sp, #4]
     cec:	ldr	r0, [r0, #56]	; 0x38
     cf0:	ldr	r1, [r1, #288]	; 0x120
     cf4:	and	r0, r0, r1
     cf8:	cmp	r0, #0
     cfc:	beq	d4c <h_hdl_whois+0x94>
     d00:	ldr	r0, [sp, #4]
     d04:	ldr	r0, [r0, #24]
     d08:	ldr	r0, [r0, #24]
     d0c:	movw	r1, #0
     d10:	cmp	r0, r1
     d14:	beq	d30 <h_hdl_whois+0x78>
     d18:	ldr	r0, [sp, #4]
     d1c:	ldr	r0, [r0, #24]
     d20:	ldr	r0, [r0, #24]
     d24:	ldrb	r0, [r0]
     d28:	cmp	r0, #0
     d2c:	bne	d4c <h_hdl_whois+0x94>
     d30:	ldr	r0, [pc, #32]	; d58 <h_hdl_whois+0xa0>
     d34:	add	r2, pc, r0
     d38:	ldr	r0, [sp, #8]
     d3c:	ldr	r1, [sp, #4]
     d40:	add	r3, r1, #88	; 0x58
     d44:	movw	r1, #310	; 0x136
     d48:	bl	820 <sendto_one_numeric@plt>
     d4c:	mov	sp, fp
     d50:	pop	{fp, pc}
     d54:	.word	0x00011380
     d58:	.word	0x00000f23

00000d5c <me_dehelper>:
     d5c:	push	{fp, lr}
     d60:	mov	fp, sp
     d64:	sub	sp, sp, #24
     d68:	ldr	ip, [fp, #8]
     d6c:	str	r0, [fp, #-4]
     d70:	str	r1, [fp, #-8]
     d74:	str	r2, [sp, #12]
     d78:	str	r3, [sp, #8]
     d7c:	ldr	r0, [fp, #8]
     d80:	ldr	r0, [r0, #4]
     d84:	str	ip, [sp]
     d88:	bl	82c <find_person@plt>
     d8c:	str	r0, [sp, #4]
     d90:	ldr	r0, [sp, #4]
     d94:	movw	r1, #0
     d98:	cmp	r0, r1
     d9c:	bne	dc0 <me_dehelper+0x64>
     da0:	ldr	r0, [pc, #84]	; dfc <me_dehelper+0xa0>
     da4:	add	r2, pc, r0
     da8:	ldr	r0, [sp, #12]
     dac:	ldr	r1, [fp, #8]
     db0:	ldr	r3, [r1, #4]
     db4:	movw	r1, #401	; 0x191
     db8:	bl	820 <sendto_one_numeric@plt>
     dbc:	b	df4 <me_dehelper+0x98>
     dc0:	ldr	r0, [sp, #4]
     dc4:	ldrb	r0, [r0, #65]	; 0x41
     dc8:	tst	r0, #32
     dcc:	beq	de4 <me_dehelper+0x88>
     dd0:	b	dd4 <me_dehelper+0x78>
     dd4:	ldr	r0, [sp, #4]
     dd8:	ldrh	r0, [r0, #80]	; 0x50
     ddc:	cmp	r0, #64	; 0x40
     de0:	beq	de8 <me_dehelper+0x8c>
     de4:	b	df4 <me_dehelper+0x98>
     de8:	ldr	r0, [sp, #12]
     dec:	ldr	r1, [sp, #4]
     df0:	bl	1190 <do_dehelper>
     df4:	mov	sp, fp
     df8:	pop	{fp, pc}
     dfc:	.word	0x00000cf3

00000e00 <mo_dehelper>:
     e00:	push	{fp, lr}
     e04:	mov	fp, sp
     e08:	sub	sp, sp, #56	; 0x38
     e0c:	ldr	ip, [fp, #8]
     e10:	str	r0, [fp, #-4]
     e14:	str	r1, [fp, #-8]
     e18:	str	r2, [fp, #-12]
     e1c:	str	r3, [fp, #-16]
     e20:	ldr	r0, [fp, #-12]
     e24:	ldr	r0, [r0, #24]
     e28:	movw	r1, #0
     e2c:	cmp	r0, r1
     e30:	beq	e6c <mo_dehelper+0x6c>
     e34:	ldr	r0, [fp, #-12]
     e38:	ldr	r0, [r0, #24]
     e3c:	ldr	r0, [r0, #36]	; 0x24
     e40:	movw	r1, #0
     e44:	cmp	r0, r1
     e48:	beq	e6c <mo_dehelper+0x6c>
     e4c:	ldr	r0, [pc, #376]	; fcc <mo_dehelper+0x1cc>
     e50:	add	r1, pc, r0
     e54:	ldr	r0, [fp, #-12]
     e58:	ldr	r0, [r0, #24]
     e5c:	ldr	r0, [r0, #36]	; 0x24
     e60:	bl	850 <privilegeset_in_set@plt>
     e64:	cmp	r0, #0
     e68:	bne	eb0 <mo_dehelper+0xb0>
     e6c:	ldr	r0, [pc, #348]	; fd0 <mo_dehelper+0x1d0>
     e70:	add	r1, pc, r0
     e74:	ldr	r0, [pc, #344]	; fd4 <mo_dehelper+0x1d4>
     e78:	ldr	r0, [pc, r0]
     e7c:	add	r2, r0, #88	; 0x58
     e80:	ldr	r0, [pc, #336]	; fd8 <mo_dehelper+0x1d8>
     e84:	add	r0, pc, r0
     e88:	ldr	r3, [fp, #-12]
     e8c:	ldr	ip, [fp, #-12]
     e90:	add	ip, ip, #88	; 0x58
     e94:	str	r0, [fp, #-24]	; 0xffffffe8
     e98:	mov	r0, r3
     e9c:	mov	r3, ip
     ea0:	ldr	ip, [fp, #-24]	; 0xffffffe8
     ea4:	str	ip, [sp]
     ea8:	bl	7cc <sendto_one@plt>
     eac:	b	fc4 <mo_dehelper+0x1c4>
     eb0:	ldr	r0, [fp, #8]
     eb4:	ldr	r0, [r0, #4]
     eb8:	bl	844 <find_named_person@plt>
     ebc:	str	r0, [fp, #-20]	; 0xffffffec
     ec0:	movw	r1, #0
     ec4:	cmp	r0, r1
     ec8:	bne	eec <mo_dehelper+0xec>
     ecc:	ldr	r0, [pc, #264]	; fdc <mo_dehelper+0x1dc>
     ed0:	add	r2, pc, r0
     ed4:	ldr	r0, [fp, #-12]
     ed8:	ldr	r1, [fp, #8]
     edc:	ldr	r3, [r1, #4]
     ee0:	movw	r1, #401	; 0x191
     ee4:	bl	820 <sendto_one_numeric@plt>
     ee8:	b	fc4 <mo_dehelper+0x1c4>
     eec:	ldr	r0, [fp, #-20]	; 0xffffffec
     ef0:	ldrb	r0, [r0, #65]	; 0x41
     ef4:	tst	r0, #32
     ef8:	beq	f20 <mo_dehelper+0x120>
     efc:	b	f00 <mo_dehelper+0x100>
     f00:	ldr	r0, [fp, #-20]	; 0xffffffec
     f04:	ldrh	r0, [r0, #80]	; 0x50
     f08:	cmp	r0, #64	; 0x40
     f0c:	bne	f20 <mo_dehelper+0x120>
     f10:	ldr	r0, [fp, #-12]
     f14:	ldr	r1, [fp, #-20]	; 0xffffffec
     f18:	bl	1190 <do_dehelper>
     f1c:	b	fc4 <mo_dehelper+0x1c4>
     f20:	ldr	r0, [fp, #-20]	; 0xffffffec
     f24:	ldr	r1, [fp, #-12]
     f28:	ldrb	r1, [r1, #396]	; 0x18c
     f2c:	cmp	r1, #0
     f30:	str	r0, [sp, #28]
     f34:	beq	f48 <mo_dehelper+0x148>
     f38:	ldr	r0, [fp, #-12]
     f3c:	add	r0, r0, #396	; 0x18c
     f40:	str	r0, [sp, #24]
     f44:	b	f54 <mo_dehelper+0x154>
     f48:	ldr	r0, [fp, #-12]
     f4c:	add	r0, r0, #88	; 0x58
     f50:	str	r0, [sp, #24]
     f54:	ldr	r0, [sp, #24]
     f58:	ldr	r1, [fp, #-20]	; 0xffffffec
     f5c:	ldr	r1, [r1, #32]
     f60:	add	r3, r1, #88	; 0x58
     f64:	ldr	r1, [fp, #-20]	; 0xffffffec
     f68:	ldrb	r1, [r1, #396]	; 0x18c
     f6c:	cmp	r1, #0
     f70:	str	r0, [sp, #20]
     f74:	str	r3, [sp, #16]
     f78:	beq	f8c <mo_dehelper+0x18c>
     f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f80:	add	r0, r0, #396	; 0x18c
     f84:	str	r0, [sp, #12]
     f88:	b	f98 <mo_dehelper+0x198>
     f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f90:	add	r0, r0, #88	; 0x58
     f94:	str	r0, [sp, #12]
     f98:	ldr	r0, [sp, #12]
     f9c:	ldr	r1, [pc, #60]	; fe0 <mo_dehelper+0x1e0>
     fa0:	add	r1, pc, r1
     fa4:	ldr	r2, [sp, #28]
     fa8:	str	r0, [sp, #8]
     fac:	mov	r0, r2
     fb0:	ldr	r2, [sp, #20]
     fb4:	ldr	r3, [sp, #16]
     fb8:	ldr	ip, [sp, #8]
     fbc:	str	ip, [sp]
     fc0:	bl	7cc <sendto_one@plt>
     fc4:	mov	sp, fp
     fc8:	pop	{fp, pc}
     fcc:	.word	0x00000c12
     fd0:	.word	0x00000c00
     fd4:	.word	0x000111e0
     fd8:	.word	0x00000be3
     fdc:	.word	0x00000bc7
     fe0:	.word	0x00000b10

00000fe4 <_modinit>:
     fe4:	push	{fp, lr}
     fe8:	mov	fp, sp
     fec:	sub	sp, sp, #8
     ff0:	bl	7f0 <find_umode_slot@plt>
     ff4:	ldr	r1, [pc, #164]	; 10a0 <_modinit+0xbc>
     ff8:	ldr	r1, [pc, r1]
     ffc:	str	r0, [r1, #288]	; 0x120
    1000:	bl	868 <construct_umodebuf@plt>
    1004:	ldr	r0, [pc, #144]	; 109c <_modinit+0xb8>
    1008:	ldr	r0, [pc, r0]
    100c:	ldr	r0, [r0]
    1010:	str	r0, [sp, #4]
    1014:	ldr	r0, [sp, #4]
    1018:	movw	r1, #0
    101c:	cmp	r0, r1
    1020:	beq	1090 <_modinit+0xac>
    1024:	ldr	r0, [sp, #4]
    1028:	ldr	r0, [r0]
    102c:	str	r0, [sp]
    1030:	ldr	r0, [sp]
    1034:	ldrh	r0, [r0, #80]	; 0x50
    1038:	cmp	r0, #64	; 0x40
    103c:	bne	107c <_modinit+0x98>
    1040:	ldr	r0, [sp]
    1044:	ldr	r0, [r0, #24]
    1048:	movw	r1, #0
    104c:	cmp	r0, r1
    1050:	beq	107c <_modinit+0x98>
    1054:	ldr	r0, [pc, #72]	; 10a4 <_modinit+0xc0>
    1058:	ldr	r0, [pc, r0]
    105c:	ldr	r1, [sp]
    1060:	ldr	r1, [r1, #56]	; 0x38
    1064:	ldr	r0, [r0, #288]	; 0x120
    1068:	and	r0, r1, r0
    106c:	cmp	r0, #0
    1070:	beq	107c <_modinit+0x98>
    1074:	ldr	r0, [sp]
    1078:	bl	1260 <helper_add>
    107c:	b	1080 <_modinit+0x9c>
    1080:	ldr	r0, [sp, #4]
    1084:	ldr	r0, [r0, #8]
    1088:	str	r0, [sp, #4]
    108c:	b	1014 <_modinit+0x30>
    1090:	movw	r0, #0
    1094:	mov	sp, fp
    1098:	pop	{fp, pc}
    109c:	.word	0x00011048
    10a0:	.word	0x00011050
    10a4:	.word	0x00010ff0

000010a8 <_moddeinit>:
    10a8:	push	{fp, lr}
    10ac:	mov	fp, sp
    10b0:	sub	sp, sp, #16
    10b4:	ldr	r0, [pc, #204]	; 1188 <_moddeinit+0xe0>
    10b8:	ldr	r0, [pc, r0]
    10bc:	movw	r1, #0
    10c0:	str	r1, [r0, #288]	; 0x120
    10c4:	bl	868 <construct_umodebuf@plt>
    10c8:	ldr	r0, [pc, #180]	; 1184 <_moddeinit+0xdc>
    10cc:	add	r0, pc, r0
    10d0:	ldr	r0, [r0]
    10d4:	str	r0, [fp, #-4]
    10d8:	ldr	r0, [fp, #-4]
    10dc:	movw	r1, #0
    10e0:	cmp	r0, r1
    10e4:	beq	10f8 <_moddeinit+0x50>
    10e8:	ldr	r0, [fp, #-4]
    10ec:	ldr	r0, [r0, #8]
    10f0:	str	r0, [sp, #4]
    10f4:	b	1104 <_moddeinit+0x5c>
    10f8:	movw	r0, #0
    10fc:	str	r0, [sp, #4]
    1100:	b	1104 <_moddeinit+0x5c>
    1104:	ldr	r0, [sp, #4]
    1108:	str	r0, [sp, #8]
    110c:	ldr	r0, [fp, #-4]
    1110:	movw	r1, #0
    1114:	cmp	r0, r1
    1118:	beq	117c <_moddeinit+0xd4>
    111c:	b	1120 <_moddeinit+0x78>
    1120:	ldr	r0, [pc, #100]	; 118c <_moddeinit+0xe4>
    1124:	add	r1, pc, r0
    1128:	ldr	r0, [fp, #-4]
    112c:	bl	18c8 <rb_dlinkDelete>
    1130:	ldr	r0, [fp, #-4]
    1134:	bl	7fc <rb_free_rb_dlink_node@plt>
    1138:	b	113c <_moddeinit+0x94>
    113c:	ldr	r0, [sp, #8]
    1140:	str	r0, [fp, #-4]
    1144:	ldr	r0, [fp, #-4]
    1148:	movw	r1, #0
    114c:	cmp	r0, r1
    1150:	beq	1164 <_moddeinit+0xbc>
    1154:	ldr	r0, [fp, #-4]
    1158:	ldr	r0, [r0, #8]
    115c:	str	r0, [sp]
    1160:	b	1170 <_moddeinit+0xc8>
    1164:	movw	r0, #0
    1168:	str	r0, [sp]
    116c:	b	1170 <_moddeinit+0xc8>
    1170:	ldr	r0, [sp]
    1174:	str	r0, [sp, #8]
    1178:	b	110c <_moddeinit+0x64>
    117c:	mov	sp, fp
    1180:	pop	{fp, pc}
    1184:	.word	0x00011060
    1188:	.word	0x00010f90
    118c:	.word	0x00011008

00001190 <do_dehelper>:
    1190:	push	{fp, lr}
    1194:	mov	fp, sp
    1198:	sub	sp, sp, #32
    119c:	ldr	r2, [pc, #172]	; 1250 <do_dehelper+0xc0>
    11a0:	ldr	r2, [pc, r2]
    11a4:	str	r0, [fp, #-4]
    11a8:	str	r1, [fp, #-8]
    11ac:	ldr	r0, [fp, #-8]
    11b0:	ldr	r0, [r0, #56]	; 0x38
    11b4:	ldr	r1, [r2, #288]	; 0x120
    11b8:	and	r0, r0, r1
    11bc:	cmp	r0, #0
    11c0:	bne	11c8 <do_dehelper+0x38>
    11c4:	b	1248 <do_dehelper+0xb8>
    11c8:	ldr	r0, [pc, #140]	; 125c <do_dehelper+0xcc>
    11cc:	add	r2, pc, r0
    11d0:	ldr	r0, [fp, #-4]
    11d4:	add	r3, r0, #88	; 0x58
    11d8:	ldr	r0, [fp, #-8]
    11dc:	add	r0, r0, #88	; 0x58
    11e0:	movw	r1, #256	; 0x100
    11e4:	str	r0, [sp, #4]
    11e8:	mov	r0, r1
    11ec:	ldr	ip, [sp, #4]
    11f0:	str	ip, [sp]
    11f4:	bl	7e4 <sendto_realops_snomask@plt>
    11f8:	ldr	r0, [pc, #88]	; 1258 <do_dehelper+0xc8>
    11fc:	add	r1, pc, r0
    1200:	ldr	r0, [fp, #-8]
    1204:	ldr	r2, [fp, #-4]
    1208:	add	r2, r2, #88	; 0x58
    120c:	bl	838 <sendto_one_notice@plt>
    1210:	add	r3, sp, #8
    1214:	ldr	r0, [pc, #56]	; 1254 <do_dehelper+0xc4>
    1218:	add	r0, pc, r0
    121c:	ldr	r1, [fp, #-8]
    1220:	add	r1, r1, #88	; 0x58
    1224:	str	r1, [sp, #12]
    1228:	str	r1, [sp, #8]
    122c:	str	r0, [sp, #16]
    1230:	movw	r0, #0
    1234:	str	r0, [sp, #20]
    1238:	ldr	r0, [fp, #-8]
    123c:	ldr	r1, [fp, #-8]
    1240:	movw	r2, #3
    1244:	bl	7d8 <user_mode@plt>
    1248:	mov	sp, fp
    124c:	pop	{fp, pc}
    1250:	.word	0x00010ea8
    1254:	.word	0x000008ed
    1258:	.word	0x000008e8
    125c:	.word	0x000008fd

00001260 <helper_add>:
    1260:	push	{fp, lr}
    1264:	mov	fp, sp
    1268:	sub	sp, sp, #16
    126c:	ldr	r1, [pc, #76]	; 12c0 <helper_add+0x60>
    1270:	add	r1, pc, r1
    1274:	str	r0, [fp, #-4]
    1278:	ldr	r0, [fp, #-4]
    127c:	bl	12c8 <rb_dlinkFind>
    1280:	movw	r1, #0
    1284:	cmp	r0, r1
    1288:	beq	1290 <helper_add+0x30>
    128c:	b	12b8 <helper_add+0x58>
    1290:	ldr	r0, [fp, #-4]
    1294:	str	r0, [sp, #8]
    1298:	bl	814 <rb_make_rb_dlink_node@plt>
    129c:	ldr	r1, [pc, #32]	; 12c4 <helper_add+0x64>
    12a0:	add	r2, pc, r1
    12a4:	ldr	r1, [sp, #8]
    12a8:	str	r0, [sp, #4]
    12ac:	mov	r0, r1
    12b0:	ldr	r1, [sp, #4]
    12b4:	bl	13c0 <rb_dlinkAdd>
    12b8:	mov	sp, fp
    12bc:	pop	{fp, pc}
    12c0:	.word	0x00010ebc
    12c4:	.word	0x00010e8c

000012c8 <rb_dlinkFind>:
    12c8:	push	{fp, lr}
    12cc:	mov	fp, sp
    12d0:	sub	sp, sp, #16
    12d4:	str	r0, [sp, #8]
    12d8:	str	r1, [sp, #4]
    12dc:	ldr	r0, [sp, #4]
    12e0:	movw	r1, #0
    12e4:	cmp	r0, r1
    12e8:	beq	12f0 <rb_dlinkFind+0x28>
    12ec:	b	1310 <rb_dlinkFind+0x48>
    12f0:	ldr	r0, [pc, #176]	; 13a8 <rb_dlinkFind+0xe0>
    12f4:	add	r0, pc, r0
    12f8:	ldr	r1, [pc, #172]	; 13ac <rb_dlinkFind+0xe4>
    12fc:	add	r1, pc, r1
    1300:	ldr	r2, [pc, #168]	; 13b0 <rb_dlinkFind+0xe8>
    1304:	add	r3, pc, r2
    1308:	movw	r2, #310	; 0x136
    130c:	bl	85c <__assert_fail@plt>
    1310:	ldr	r0, [sp, #8]
    1314:	movw	r1, #0
    1318:	cmp	r0, r1
    131c:	beq	1324 <rb_dlinkFind+0x5c>
    1320:	b	1344 <rb_dlinkFind+0x7c>
    1324:	ldr	r0, [pc, #136]	; 13b4 <rb_dlinkFind+0xec>
    1328:	add	r0, pc, r0
    132c:	ldr	r1, [pc, #132]	; 13b8 <rb_dlinkFind+0xf0>
    1330:	add	r1, pc, r1
    1334:	ldr	r2, [pc, #128]	; 13bc <rb_dlinkFind+0xf4>
    1338:	add	r3, pc, r2
    133c:	movw	r2, #311	; 0x137
    1340:	bl	85c <__assert_fail@plt>
    1344:	ldr	r0, [sp, #4]
    1348:	ldr	r0, [r0]
    134c:	str	r0, [sp]
    1350:	ldr	r0, [sp]
    1354:	movw	r1, #0
    1358:	cmp	r0, r1
    135c:	beq	1394 <rb_dlinkFind+0xcc>
    1360:	ldr	r0, [sp]
    1364:	ldr	r0, [r0]
    1368:	ldr	r1, [sp, #8]
    136c:	cmp	r0, r1
    1370:	bne	1380 <rb_dlinkFind+0xb8>
    1374:	ldr	r0, [sp]
    1378:	str	r0, [fp, #-4]
    137c:	b	139c <rb_dlinkFind+0xd4>
    1380:	b	1384 <rb_dlinkFind+0xbc>
    1384:	ldr	r0, [sp]
    1388:	ldr	r0, [r0, #8]
    138c:	str	r0, [sp]
    1390:	b	1350 <rb_dlinkFind+0x88>
    1394:	movw	r0, #0
    1398:	str	r0, [fp, #-4]
    139c:	ldr	r0, [fp, #-4]
    13a0:	mov	sp, fp
    13a4:	pop	{fp, pc}
    13a8:	.word	0x00000836
    13ac:	.word	0x0000083b
    13b0:	.word	0x0000084f
    13b4:	.word	0x00000860
    13b8:	.word	0x00000807
    13bc:	.word	0x0000081b

000013c0 <rb_dlinkAdd>:
    13c0:	push	{fp, lr}
    13c4:	mov	fp, sp
    13c8:	sub	sp, sp, #16
    13cc:	str	r0, [fp, #-4]
    13d0:	str	r1, [sp, #8]
    13d4:	str	r2, [sp, #4]
    13d8:	ldr	r0, [fp, #-4]
    13dc:	movw	r1, #0
    13e0:	cmp	r0, r1
    13e4:	beq	13ec <rb_dlinkAdd+0x2c>
    13e8:	b	140c <rb_dlinkAdd+0x4c>
    13ec:	ldr	r0, [pc, #276]	; 1508 <rb_dlinkAdd+0x148>
    13f0:	add	r0, pc, r0
    13f4:	ldr	r1, [pc, #272]	; 150c <rb_dlinkAdd+0x14c>
    13f8:	add	r1, pc, r1
    13fc:	ldr	r2, [pc, #268]	; 1510 <rb_dlinkAdd+0x150>
    1400:	add	r3, pc, r2
    1404:	movw	r2, #143	; 0x8f
    1408:	bl	85c <__assert_fail@plt>
    140c:	ldr	r0, [sp, #8]
    1410:	movw	r1, #0
    1414:	cmp	r0, r1
    1418:	beq	1420 <rb_dlinkAdd+0x60>
    141c:	b	1440 <rb_dlinkAdd+0x80>
    1420:	ldr	r0, [pc, #236]	; 1514 <rb_dlinkAdd+0x154>
    1424:	add	r0, pc, r0
    1428:	ldr	r1, [pc, #232]	; 1518 <rb_dlinkAdd+0x158>
    142c:	add	r1, pc, r1
    1430:	ldr	r2, [pc, #228]	; 151c <rb_dlinkAdd+0x15c>
    1434:	add	r3, pc, r2
    1438:	movw	r2, #144	; 0x90
    143c:	bl	85c <__assert_fail@plt>
    1440:	ldr	r0, [sp, #4]
    1444:	movw	r1, #0
    1448:	cmp	r0, r1
    144c:	beq	1454 <rb_dlinkAdd+0x94>
    1450:	b	1474 <rb_dlinkAdd+0xb4>
    1454:	ldr	r0, [pc, #196]	; 1520 <rb_dlinkAdd+0x160>
    1458:	add	r0, pc, r0
    145c:	ldr	r1, [pc, #192]	; 1524 <rb_dlinkAdd+0x164>
    1460:	add	r1, pc, r1
    1464:	ldr	r2, [pc, #188]	; 1528 <rb_dlinkAdd+0x168>
    1468:	add	r3, pc, r2
    146c:	movw	r2, #145	; 0x91
    1470:	bl	85c <__assert_fail@plt>
    1474:	ldr	r0, [fp, #-4]
    1478:	ldr	r1, [sp, #8]
    147c:	str	r0, [r1]
    1480:	ldr	r0, [sp, #8]
    1484:	movw	r1, #0
    1488:	str	r1, [r0, #4]
    148c:	ldr	r0, [sp, #4]
    1490:	ldr	r0, [r0]
    1494:	ldr	r2, [sp, #8]
    1498:	str	r0, [r2, #8]
    149c:	ldr	r0, [sp, #4]
    14a0:	ldr	r0, [r0]
    14a4:	cmp	r0, r1
    14a8:	beq	14c0 <rb_dlinkAdd+0x100>
    14ac:	ldr	r0, [sp, #8]
    14b0:	ldr	r1, [sp, #4]
    14b4:	ldr	r1, [r1]
    14b8:	str	r0, [r1, #4]
    14bc:	b	14e4 <rb_dlinkAdd+0x124>
    14c0:	ldr	r0, [sp, #4]
    14c4:	ldr	r0, [r0, #4]
    14c8:	movw	r1, #0
    14cc:	cmp	r0, r1
    14d0:	bne	14e0 <rb_dlinkAdd+0x120>
    14d4:	ldr	r0, [sp, #8]
    14d8:	ldr	r1, [sp, #4]
    14dc:	str	r0, [r1, #4]
    14e0:	b	14e4 <rb_dlinkAdd+0x124>
    14e4:	ldr	r0, [sp, #8]
    14e8:	ldr	r1, [sp, #4]
    14ec:	str	r0, [r1]
    14f0:	ldr	r0, [sp, #4]
    14f4:	ldr	r1, [r0, #8]
    14f8:	add	r1, r1, #1
    14fc:	str	r1, [r0, #8]
    1500:	mov	sp, fp
    1504:	pop	{fp, pc}
    1508:	.word	0x00000798
    150c:	.word	0x0000073f
    1510:	.word	0x00000795
    1514:	.word	0x000007ac
    1518:	.word	0x0000070b
    151c:	.word	0x00000761
    1520:	.word	0x000006d2
    1524:	.word	0x000006d7
    1528:	.word	0x0000072d

0000152c <recurse_client_exit>:
    152c:	push	{fp, lr}
    1530:	mov	fp, sp
    1534:	sub	sp, sp, #8
    1538:	str	r0, [sp, #4]
    153c:	ldr	r0, [sp, #4]
    1540:	ldrh	r0, [r0, #80]	; 0x50
    1544:	cmp	r0, #64	; 0x40
    1548:	bne	158c <recurse_client_exit+0x60>
    154c:	ldr	r0, [sp, #4]
    1550:	ldr	r0, [r0, #24]
    1554:	movw	r1, #0
    1558:	cmp	r0, r1
    155c:	beq	158c <recurse_client_exit+0x60>
    1560:	ldr	r0, [pc, #188]	; 1624 <recurse_client_exit+0xf8>
    1564:	ldr	r0, [pc, r0]
    1568:	ldr	r1, [sp, #4]
    156c:	ldr	r1, [r1, #56]	; 0x38
    1570:	ldr	r0, [r0, #288]	; 0x120
    1574:	and	r0, r1, r0
    1578:	cmp	r0, #0
    157c:	beq	1588 <recurse_client_exit+0x5c>
    1580:	ldr	r0, [sp, #4]
    1584:	bl	1628 <helper_delete>
    1588:	b	161c <recurse_client_exit+0xf0>
    158c:	ldr	r0, [sp, #4]
    1590:	ldrh	r0, [r0, #80]	; 0x50
    1594:	cmp	r0, #32
    1598:	bne	1618 <recurse_client_exit+0xec>
    159c:	ldr	r0, [sp, #4]
    15a0:	ldr	r0, [r0, #28]
    15a4:	ldr	r0, [r0, #48]	; 0x30
    15a8:	str	r0, [sp]
    15ac:	ldr	r0, [sp]
    15b0:	movw	r1, #0
    15b4:	cmp	r0, r1
    15b8:	beq	15d8 <recurse_client_exit+0xac>
    15bc:	ldr	r0, [sp]
    15c0:	ldr	r0, [r0]
    15c4:	bl	152c <recurse_client_exit>
    15c8:	ldr	r0, [sp]
    15cc:	ldr	r0, [r0, #8]
    15d0:	str	r0, [sp]
    15d4:	b	15ac <recurse_client_exit+0x80>
    15d8:	ldr	r0, [sp, #4]
    15dc:	ldr	r0, [r0, #28]
    15e0:	ldr	r0, [r0, #36]	; 0x24
    15e4:	str	r0, [sp]
    15e8:	ldr	r0, [sp]
    15ec:	movw	r1, #0
    15f0:	cmp	r0, r1
    15f4:	beq	1614 <recurse_client_exit+0xe8>
    15f8:	ldr	r0, [sp]
    15fc:	ldr	r0, [r0]
    1600:	bl	152c <recurse_client_exit>
    1604:	ldr	r0, [sp]
    1608:	ldr	r0, [r0, #8]
    160c:	str	r0, [sp]
    1610:	b	15e8 <recurse_client_exit+0xbc>
    1614:	b	1618 <recurse_client_exit+0xec>
    1618:	b	161c <recurse_client_exit+0xf0>
    161c:	mov	sp, fp
    1620:	pop	{fp, pc}
    1624:	.word	0x00010ae4

00001628 <helper_delete>:
    1628:	push	{fp, lr}
    162c:	mov	fp, sp
    1630:	sub	sp, sp, #8
    1634:	ldr	r1, [pc, #20]	; 1650 <helper_delete+0x28>
    1638:	add	r1, pc, r1
    163c:	str	r0, [sp, #4]
    1640:	ldr	r0, [sp, #4]
    1644:	bl	1654 <rb_dlinkFindDestroy>
    1648:	mov	sp, fp
    164c:	pop	{fp, pc}
    1650:	.word	0x00010af4

00001654 <rb_dlinkFindDestroy>:
    1654:	push	{fp, lr}
    1658:	mov	fp, sp
    165c:	sub	sp, sp, #16
    1660:	str	r0, [sp, #8]
    1664:	str	r1, [sp, #4]
    1668:	ldr	r0, [sp, #4]
    166c:	movw	r1, #0
    1670:	cmp	r0, r1
    1674:	beq	167c <rb_dlinkFindDestroy+0x28>
    1678:	b	169c <rb_dlinkFindDestroy+0x48>
    167c:	ldr	r0, [pc, #148]	; 1718 <rb_dlinkFindDestroy+0xc4>
    1680:	add	r0, pc, r0
    1684:	ldr	r1, [pc, #144]	; 171c <rb_dlinkFindDestroy+0xc8>
    1688:	add	r1, pc, r1
    168c:	ldr	r2, [pc, #140]	; 1720 <rb_dlinkFindDestroy+0xcc>
    1690:	add	r3, pc, r2
    1694:	movw	r2, #287	; 0x11f
    1698:	bl	85c <__assert_fail@plt>
    169c:	ldr	r0, [sp, #8]
    16a0:	movw	r1, #0
    16a4:	cmp	r0, r1
    16a8:	beq	16b0 <rb_dlinkFindDestroy+0x5c>
    16ac:	b	16d0 <rb_dlinkFindDestroy+0x7c>
    16b0:	ldr	r0, [pc, #108]	; 1724 <rb_dlinkFindDestroy+0xd0>
    16b4:	add	r0, pc, r0
    16b8:	ldr	r1, [pc, #104]	; 1728 <rb_dlinkFindDestroy+0xd4>
    16bc:	add	r1, pc, r1
    16c0:	ldr	r2, [pc, #100]	; 172c <rb_dlinkFindDestroy+0xd8>
    16c4:	add	r3, pc, r2
    16c8:	movw	r2, #288	; 0x120
    16cc:	bl	85c <__assert_fail@plt>
    16d0:	ldr	r0, [sp, #8]
    16d4:	ldr	r1, [sp, #4]
    16d8:	bl	1730 <rb_dlinkFindDelete>
    16dc:	str	r0, [sp]
    16e0:	ldr	r0, [sp]
    16e4:	movw	r1, #0
    16e8:	cmp	r0, r1
    16ec:	beq	1704 <rb_dlinkFindDestroy+0xb0>
    16f0:	ldr	r0, [sp]
    16f4:	bl	7fc <rb_free_rb_dlink_node@plt>
    16f8:	movw	r0, #1
    16fc:	str	r0, [fp, #-4]
    1700:	b	170c <rb_dlinkFindDestroy+0xb8>
    1704:	movw	r0, #0
    1708:	str	r0, [fp, #-4]
    170c:	ldr	r0, [fp, #-4]
    1710:	mov	sp, fp
    1714:	pop	{fp, pc}
    1718:	.word	0x000004aa
    171c:	.word	0x000004af
    1720:	.word	0x0000054a
    1724:	.word	0x000004d4
    1728:	.word	0x0000047b
    172c:	.word	0x00000516

00001730 <rb_dlinkFindDelete>:
    1730:	push	{fp, lr}
    1734:	mov	fp, sp
    1738:	sub	sp, sp, #16
    173c:	str	r0, [sp, #8]
    1740:	str	r1, [sp, #4]
    1744:	ldr	r0, [sp, #4]
    1748:	movw	r1, #0
    174c:	cmp	r0, r1
    1750:	beq	1758 <rb_dlinkFindDelete+0x28>
    1754:	b	1778 <rb_dlinkFindDelete+0x48>
    1758:	ldr	r0, [pc, #336]	; 18b0 <rb_dlinkFindDelete+0x180>
    175c:	add	r0, pc, r0
    1760:	ldr	r1, [pc, #332]	; 18b4 <rb_dlinkFindDelete+0x184>
    1764:	add	r1, pc, r1
    1768:	ldr	r2, [pc, #328]	; 18b8 <rb_dlinkFindDelete+0x188>
    176c:	add	r3, pc, r2
    1770:	movw	r2, #258	; 0x102
    1774:	bl	85c <__assert_fail@plt>
    1778:	ldr	r0, [sp, #8]
    177c:	movw	r1, #0
    1780:	cmp	r0, r1
    1784:	beq	178c <rb_dlinkFindDelete+0x5c>
    1788:	b	17ac <rb_dlinkFindDelete+0x7c>
    178c:	ldr	r0, [pc, #296]	; 18bc <rb_dlinkFindDelete+0x18c>
    1790:	add	r0, pc, r0
    1794:	ldr	r1, [pc, #292]	; 18c0 <rb_dlinkFindDelete+0x190>
    1798:	add	r1, pc, r1
    179c:	ldr	r2, [pc, #288]	; 18c4 <rb_dlinkFindDelete+0x194>
    17a0:	add	r3, pc, r2
    17a4:	movw	r2, #259	; 0x103
    17a8:	bl	85c <__assert_fail@plt>
    17ac:	ldr	r0, [sp, #4]
    17b0:	ldr	r0, [r0]
    17b4:	str	r0, [sp]
    17b8:	ldr	r0, [sp]
    17bc:	movw	r1, #0
    17c0:	cmp	r0, r1
    17c4:	beq	189c <rb_dlinkFindDelete+0x16c>
    17c8:	ldr	r0, [sp]
    17cc:	ldr	r0, [r0]
    17d0:	ldr	r1, [sp, #8]
    17d4:	cmp	r0, r1
    17d8:	beq	17e0 <rb_dlinkFindDelete+0xb0>
    17dc:	b	188c <rb_dlinkFindDelete+0x15c>
    17e0:	ldr	r0, [sp]
    17e4:	ldr	r0, [r0, #8]
    17e8:	movw	r1, #0
    17ec:	cmp	r0, r1
    17f0:	beq	180c <rb_dlinkFindDelete+0xdc>
    17f4:	ldr	r0, [sp]
    17f8:	ldr	r0, [r0, #4]
    17fc:	ldr	r1, [sp]
    1800:	ldr	r1, [r1, #8]
    1804:	str	r0, [r1, #4]
    1808:	b	181c <rb_dlinkFindDelete+0xec>
    180c:	ldr	r0, [sp]
    1810:	ldr	r0, [r0, #4]
    1814:	ldr	r1, [sp, #4]
    1818:	str	r0, [r1, #4]
    181c:	ldr	r0, [sp]
    1820:	ldr	r0, [r0, #4]
    1824:	movw	r1, #0
    1828:	cmp	r0, r1
    182c:	beq	1848 <rb_dlinkFindDelete+0x118>
    1830:	ldr	r0, [sp]
    1834:	ldr	r0, [r0, #8]
    1838:	ldr	r1, [sp]
    183c:	ldr	r1, [r1, #4]
    1840:	str	r0, [r1, #8]
    1844:	b	1858 <rb_dlinkFindDelete+0x128>
    1848:	ldr	r0, [sp]
    184c:	ldr	r0, [r0, #8]
    1850:	ldr	r1, [sp, #4]
    1854:	str	r0, [r1]
    1858:	ldr	r0, [sp]
    185c:	movw	r1, #0
    1860:	str	r1, [r0, #4]
    1864:	ldr	r0, [sp]
    1868:	str	r1, [r0, #8]
    186c:	ldr	r0, [sp, #4]
    1870:	ldr	r1, [r0, #8]
    1874:	mvn	r2, #0
    1878:	add	r1, r1, r2
    187c:	str	r1, [r0, #8]
    1880:	ldr	r0, [sp]
    1884:	str	r0, [fp, #-4]
    1888:	b	18a4 <rb_dlinkFindDelete+0x174>
    188c:	ldr	r0, [sp]
    1890:	ldr	r0, [r0, #8]
    1894:	str	r0, [sp]
    1898:	b	17b8 <rb_dlinkFindDelete+0x88>
    189c:	movw	r0, #0
    18a0:	str	r0, [fp, #-4]
    18a4:	ldr	r0, [fp, #-4]
    18a8:	mov	sp, fp
    18ac:	pop	{fp, pc}
    18b0:	.word	0x000003ce
    18b4:	.word	0x000003d3
    18b8:	.word	0x0000049f
    18bc:	.word	0x000003f8
    18c0:	.word	0x0000039f
    18c4:	.word	0x0000046b

000018c8 <rb_dlinkDelete>:
    18c8:	push	{fp, lr}
    18cc:	mov	fp, sp
    18d0:	sub	sp, sp, #8
    18d4:	str	r0, [sp, #4]
    18d8:	str	r1, [sp]
    18dc:	ldr	r0, [sp, #4]
    18e0:	movw	r1, #0
    18e4:	cmp	r0, r1
    18e8:	beq	18f0 <rb_dlinkDelete+0x28>
    18ec:	b	1910 <rb_dlinkDelete+0x48>
    18f0:	ldr	r0, [pc, #244]	; 19ec <rb_dlinkDelete+0x124>
    18f4:	add	r0, pc, r0
    18f8:	ldr	r1, [pc, #240]	; 19f0 <rb_dlinkDelete+0x128>
    18fc:	add	r1, pc, r1
    1900:	ldr	r2, [pc, #236]	; 19f4 <rb_dlinkDelete+0x12c>
    1904:	add	r3, pc, r2
    1908:	movw	r2, #235	; 0xeb
    190c:	bl	85c <__assert_fail@plt>
    1910:	ldr	r0, [sp]
    1914:	movw	r1, #0
    1918:	cmp	r0, r1
    191c:	beq	1924 <rb_dlinkDelete+0x5c>
    1920:	b	1944 <rb_dlinkDelete+0x7c>
    1924:	ldr	r0, [pc, #204]	; 19f8 <rb_dlinkDelete+0x130>
    1928:	add	r0, pc, r0
    192c:	ldr	r1, [pc, #200]	; 19fc <rb_dlinkDelete+0x134>
    1930:	add	r1, pc, r1
    1934:	ldr	r2, [pc, #196]	; 1a00 <rb_dlinkDelete+0x138>
    1938:	add	r3, pc, r2
    193c:	movw	r2, #236	; 0xec
    1940:	bl	85c <__assert_fail@plt>
    1944:	ldr	r0, [sp, #4]
    1948:	ldr	r0, [r0, #8]
    194c:	movw	r1, #0
    1950:	cmp	r0, r1
    1954:	beq	1970 <rb_dlinkDelete+0xa8>
    1958:	ldr	r0, [sp, #4]
    195c:	ldr	r0, [r0, #4]
    1960:	ldr	r1, [sp, #4]
    1964:	ldr	r1, [r1, #8]
    1968:	str	r0, [r1, #4]
    196c:	b	1980 <rb_dlinkDelete+0xb8>
    1970:	ldr	r0, [sp, #4]
    1974:	ldr	r0, [r0, #4]
    1978:	ldr	r1, [sp]
    197c:	str	r0, [r1, #4]
    1980:	ldr	r0, [sp, #4]
    1984:	ldr	r0, [r0, #4]
    1988:	movw	r1, #0
    198c:	cmp	r0, r1
    1990:	beq	19ac <rb_dlinkDelete+0xe4>
    1994:	ldr	r0, [sp, #4]
    1998:	ldr	r0, [r0, #8]
    199c:	ldr	r1, [sp, #4]
    19a0:	ldr	r1, [r1, #4]
    19a4:	str	r0, [r1, #8]
    19a8:	b	19bc <rb_dlinkDelete+0xf4>
    19ac:	ldr	r0, [sp, #4]
    19b0:	ldr	r0, [r0, #8]
    19b4:	ldr	r1, [sp]
    19b8:	str	r0, [r1]
    19bc:	ldr	r0, [sp, #4]
    19c0:	movw	r1, #0
    19c4:	str	r1, [r0, #4]
    19c8:	ldr	r0, [sp, #4]
    19cc:	str	r1, [r0, #8]
    19d0:	ldr	r0, [sp]
    19d4:	ldr	r1, [r0, #8]
    19d8:	mvn	r2, #0
    19dc:	add	r1, r1, r2
    19e0:	str	r1, [r0, #8]
    19e4:	mov	sp, fp
    19e8:	pop	{fp, pc}
    19ec:	.word	0x000002dc
    19f0:	.word	0x0000023b
    19f4:	.word	0x0000036e
    19f8:	.word	0x00000202
    19fc:	.word	0x00000207
    1a00:	.word	0x0000033a

Disassembly of section .fini:

00001a04 <_fini>:
    1a04:	push	{r3, lr}
    1a08:	pop	{r3, pc}
