
../repos/coreutils/src/comm:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10f0c <close@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <fdopen@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <fdopen@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <fdopen@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #90112	; 0x16000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <calloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #90112	; 0x16000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fputs_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #90112	; 0x16000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <raise@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #90112	; 0x16000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #90112	; 0x16000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <posix_fadvise64@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #90112	; 0x16000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <fflush@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #90112	; 0x16000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <free@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #90112	; 0x16000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <_exit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #90112	; 0x16000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <memcpy@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #90112	; 0x16000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <mbsinit@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #90112	; 0x16000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <fwrite_unlocked@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #90112	; 0x16000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <memcmp@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #90112	; 0x16000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fputc_unlocked@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #90112	; 0x16000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <dcgettext@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #90112	; 0x16000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <textdomain@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <iswprint@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <fwrite@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <lseek64@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <__ctype_get_mb_cur_max@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__fpending@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <mbrtowc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <error@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <strcoll@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <malloc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <__libc_start_main@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <__freading@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__gmon_start__@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <getopt_long@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <__ctype_b_loc@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <exit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <strlen@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <__errno_location@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <__cxa_atexit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <memset@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <__printf_chk@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <fileno@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <__fprintf_chk@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <fclose@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <fseeko64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <fcntl64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <__uflow@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

00010e70 <setlocale@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #576]!	; 0x240

00010e7c <strrchr@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #568]!	; 0x238

00010e88 <nl_langinfo@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #560]!	; 0x230

00010e94 <fopen64@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #552]!	; 0x228

00010ea0 <bindtextdomain@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #544]!	; 0x220

00010eac <strncmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #536]!	; 0x218

00010eb8 <abort@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #528]!	; 0x210

00010ec4 <close@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #520]!	; 0x208

Disassembly of section .text:

00010ed0 <.text>:
   10ed0:	mov	fp, #0
   10ed4:	mov	lr, #0
   10ed8:	pop	{r1}		; (ldr r1, [sp], #4)
   10edc:	mov	r2, sp
   10ee0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ee8:	ldr	ip, [pc, #16]	; 10f00 <close@plt+0x3c>
   10eec:	push	{ip}		; (str ip, [sp, #-4]!)
   10ef0:	ldr	r0, [pc, #12]	; 10f04 <close@plt+0x40>
   10ef4:	ldr	r3, [pc, #12]	; 10f08 <close@plt+0x44>
   10ef8:	bl	10da4 <__libc_start_main@plt>
   10efc:	bl	10eb8 <abort@plt>
   10f00:	andeq	r5, r1, r8, lsr sl
   10f04:	strdeq	r1, [r1], -ip
   10f08:	ldrdeq	r5, [r1], -r8
   10f0c:	ldr	r3, [pc, #20]	; 10f28 <close@plt+0x64>
   10f10:	ldr	r2, [pc, #20]	; 10f2c <close@plt+0x68>
   10f14:	add	r3, pc, r3
   10f18:	ldr	r2, [r3, r2]
   10f1c:	cmp	r2, #0
   10f20:	bxeq	lr
   10f24:	b	10dbc <__gmon_start__@plt>
   10f28:	andeq	r6, r1, r4, ror #1
   10f2c:	ldrdeq	r0, [r0], -r8
   10f30:	ldr	r3, [pc, #28]	; 10f54 <close@plt+0x90>
   10f34:	ldr	r0, [pc, #28]	; 10f58 <close@plt+0x94>
   10f38:	sub	r3, r3, r0
   10f3c:	cmp	r3, #6
   10f40:	bxls	lr
   10f44:	ldr	r3, [pc, #16]	; 10f5c <close@plt+0x98>
   10f48:	cmp	r3, #0
   10f4c:	bxeq	lr
   10f50:	bx	r3
   10f54:	andeq	r7, r2, r7, lsr r1
   10f58:	andeq	r7, r2, r4, lsr r1
   10f5c:	andeq	r0, r0, r0
   10f60:	ldr	r1, [pc, #36]	; 10f8c <close@plt+0xc8>
   10f64:	ldr	r0, [pc, #36]	; 10f90 <close@plt+0xcc>
   10f68:	sub	r1, r1, r0
   10f6c:	asr	r1, r1, #2
   10f70:	add	r1, r1, r1, lsr #31
   10f74:	asrs	r1, r1, #1
   10f78:	bxeq	lr
   10f7c:	ldr	r3, [pc, #16]	; 10f94 <close@plt+0xd0>
   10f80:	cmp	r3, #0
   10f84:	bxeq	lr
   10f88:	bx	r3
   10f8c:	andeq	r7, r2, r4, lsr r1
   10f90:	andeq	r7, r2, r4, lsr r1
   10f94:	andeq	r0, r0, r0
   10f98:	push	{r4, lr}
   10f9c:	ldr	r4, [pc, #24]	; 10fbc <close@plt+0xf8>
   10fa0:	ldrb	r3, [r4]
   10fa4:	cmp	r3, #0
   10fa8:	popne	{r4, pc}
   10fac:	bl	10f30 <close@plt+0x6c>
   10fb0:	mov	r3, #1
   10fb4:	strb	r3, [r4]
   10fb8:	pop	{r4, pc}
   10fbc:	andeq	r7, r2, ip, asr r1
   10fc0:	ldr	r0, [pc, #40]	; 10ff0 <close@plt+0x12c>
   10fc4:	ldr	r3, [r0]
   10fc8:	cmp	r3, #0
   10fcc:	bne	10fd4 <close@plt+0x110>
   10fd0:	b	10f60 <close@plt+0x9c>
   10fd4:	ldr	r3, [pc, #24]	; 10ff4 <close@plt+0x130>
   10fd8:	cmp	r3, #0
   10fdc:	beq	10fd0 <close@plt+0x10c>
   10fe0:	push	{r4, lr}
   10fe4:	blx	r3
   10fe8:	pop	{r4, lr}
   10fec:	b	10f60 <close@plt+0x9c>
   10ff0:	andeq	r6, r2, r4, lsl pc
   10ff4:	andeq	r0, r0, r0
   10ff8:	push	{r4, r5, r6, lr}
   10ffc:	mov	r4, r0
   11000:	mov	r5, r1
   11004:	cmp	r2, #2
   11008:	beq	11048 <close@plt+0x184>
   1100c:	cmp	r2, #3
   11010:	beq	11088 <close@plt+0x1c4>
   11014:	cmp	r2, #1
   11018:	beq	11034 <close@plt+0x170>
   1101c:	mov	r3, r5
   11020:	ldr	r2, [r4, #4]
   11024:	mov	r1, #1
   11028:	ldr	r0, [r4, #8]
   1102c:	bl	10cf0 <fwrite_unlocked@plt>
   11030:	pop	{r4, r5, r6, pc}
   11034:	ldr	r3, [pc, #184]	; 110f4 <close@plt+0x230>
   11038:	ldrb	r3, [r3]
   1103c:	cmp	r3, #0
   11040:	bne	1101c <close@plt+0x158>
   11044:	pop	{r4, r5, r6, pc}
   11048:	ldr	r3, [pc, #164]	; 110f4 <close@plt+0x230>
   1104c:	ldrb	r3, [r3, #1]
   11050:	cmp	r3, #0
   11054:	popeq	{r4, r5, r6, pc}
   11058:	ldr	r3, [pc, #148]	; 110f4 <close@plt+0x230>
   1105c:	ldrb	r3, [r3]
   11060:	cmp	r3, #0
   11064:	beq	1101c <close@plt+0x158>
   11068:	mov	r3, r1
   1106c:	ldr	r2, [pc, #128]	; 110f4 <close@plt+0x230>
   11070:	ldr	r2, [r2, #4]
   11074:	mov	r1, #1
   11078:	ldr	r0, [pc, #120]	; 110f8 <close@plt+0x234>
   1107c:	ldr	r0, [r0]
   11080:	bl	10cf0 <fwrite_unlocked@plt>
   11084:	b	1101c <close@plt+0x158>
   11088:	ldr	r3, [pc, #100]	; 110f4 <close@plt+0x230>
   1108c:	ldrb	r3, [r3, #8]
   11090:	cmp	r3, #0
   11094:	popeq	{r4, r5, r6, pc}
   11098:	ldr	r3, [pc, #84]	; 110f4 <close@plt+0x230>
   1109c:	ldrb	r3, [r3]
   110a0:	cmp	r3, #0
   110a4:	beq	110c4 <close@plt+0x200>
   110a8:	mov	r3, r1
   110ac:	ldr	r2, [pc, #64]	; 110f4 <close@plt+0x230>
   110b0:	ldr	r2, [r2, #4]
   110b4:	mov	r1, #1
   110b8:	ldr	r0, [pc, #56]	; 110f8 <close@plt+0x234>
   110bc:	ldr	r0, [r0]
   110c0:	bl	10cf0 <fwrite_unlocked@plt>
   110c4:	ldr	r3, [pc, #40]	; 110f4 <close@plt+0x230>
   110c8:	ldrb	r3, [r3, #1]
   110cc:	cmp	r3, #0
   110d0:	beq	1101c <close@plt+0x158>
   110d4:	mov	r3, r5
   110d8:	ldr	r2, [pc, #20]	; 110f4 <close@plt+0x230>
   110dc:	ldr	r2, [r2, #4]
   110e0:	mov	r1, #1
   110e4:	ldr	r0, [pc, #12]	; 110f8 <close@plt+0x234>
   110e8:	ldr	r0, [r0]
   110ec:	bl	10cf0 <fwrite_unlocked@plt>
   110f0:	b	1101c <close@plt+0x158>
   110f4:	andeq	r7, r2, r0, ror #2
   110f8:	andeq	r7, r2, r4, ror #1
   110fc:	ldr	ip, [pc, #220]	; 111e0 <close@plt+0x31c>
   11100:	ldr	ip, [ip, #12]
   11104:	cmp	ip, #2
   11108:	bxeq	lr
   1110c:	cmp	ip, #1
   11110:	beq	11124 <close@plt+0x260>
   11114:	ldr	r3, [pc, #196]	; 111e0 <close@plt+0x31c>
   11118:	ldrb	r3, [r3, #16]
   1111c:	cmp	r3, #0
   11120:	bxeq	lr
   11124:	push	{r4, r5, r6, r7, r8, lr}
   11128:	sub	r5, r2, #1
   1112c:	ldr	ip, [pc, #172]	; 111e0 <close@plt+0x31c>
   11130:	add	ip, ip, r5
   11134:	ldrb	r3, [ip, #20]
   11138:	cmp	r3, #0
   1113c:	popne	{r4, r5, r6, r7, r8, pc}
   11140:	mov	r4, r2
   11144:	ldr	r3, [pc, #148]	; 111e0 <close@plt+0x31c>
   11148:	ldrb	r3, [r3, #22]
   1114c:	cmp	r3, #0
   11150:	bne	111c0 <close@plt+0x2fc>
   11154:	ldr	r3, [r1, #4]
   11158:	ldr	ip, [r0, #4]
   1115c:	sub	r3, r3, #1
   11160:	ldr	r2, [r1, #8]
   11164:	sub	r1, ip, #1
   11168:	ldr	r0, [r0, #8]
   1116c:	bl	124a0 <close@plt+0x15dc>
   11170:	cmp	r0, #0
   11174:	pople	{r4, r5, r6, r7, r8, pc}
   11178:	ldr	r6, [pc, #96]	; 111e0 <close@plt+0x31c>
   1117c:	ldr	r7, [r6, #12]
   11180:	cmp	r7, #1
   11184:	movne	r7, #0
   11188:	moveq	r7, #1
   1118c:	mov	r2, #5
   11190:	ldr	r1, [pc, #76]	; 111e4 <close@plt+0x320>
   11194:	mov	r0, #0
   11198:	bl	10d14 <dcgettext@plt>
   1119c:	mov	r3, r4
   111a0:	mov	r2, r0
   111a4:	mov	r1, #0
   111a8:	mov	r0, r7
   111ac:	bl	10d80 <error@plt>
   111b0:	add	r5, r6, r5
   111b4:	mov	r3, #1
   111b8:	strb	r3, [r5, #20]
   111bc:	pop	{r4, r5, r6, r7, r8, pc}
   111c0:	ldr	r3, [r1, #4]
   111c4:	ldr	ip, [r0, #4]
   111c8:	sub	r3, r3, #1
   111cc:	ldr	r2, [r1, #8]
   111d0:	sub	r1, ip, #1
   111d4:	ldr	r0, [r0, #8]
   111d8:	bl	14d3c <close@plt+0x3e78>
   111dc:	b	11170 <close@plt+0x2ac>
   111e0:	andeq	r7, r2, r0, ror #2
   111e4:	andeq	r5, r1, r8, lsl fp
   111e8:	push	{lr}		; (str lr, [sp, #-4]!)
   111ec:	sub	sp, sp, #60	; 0x3c
   111f0:	subs	r6, r0, #0
   111f4:	beq	11230 <close@plt+0x36c>
   111f8:	ldr	r3, [pc, #908]	; 1158c <close@plt+0x6c8>
   111fc:	ldr	r4, [r3]
   11200:	mov	r2, #5
   11204:	ldr	r1, [pc, #900]	; 11590 <close@plt+0x6cc>
   11208:	mov	r0, #0
   1120c:	bl	10d14 <dcgettext@plt>
   11210:	ldr	r3, [pc, #892]	; 11594 <close@plt+0x6d0>
   11214:	ldr	r3, [r3]
   11218:	mov	r2, r0
   1121c:	mov	r1, #1
   11220:	mov	r0, r4
   11224:	bl	10e34 <__fprintf_chk@plt>
   11228:	mov	r0, r6
   1122c:	bl	10de0 <exit@plt>
   11230:	mov	r2, #5
   11234:	ldr	r1, [pc, #860]	; 11598 <close@plt+0x6d4>
   11238:	mov	r0, #0
   1123c:	bl	10d14 <dcgettext@plt>
   11240:	ldr	r5, [pc, #844]	; 11594 <close@plt+0x6d0>
   11244:	ldr	r2, [r5]
   11248:	mov	r1, r0
   1124c:	mov	r0, #1
   11250:	bl	10e1c <__printf_chk@plt>
   11254:	mov	r2, #5
   11258:	ldr	r1, [pc, #828]	; 1159c <close@plt+0x6d8>
   1125c:	mov	r0, #0
   11260:	bl	10d14 <dcgettext@plt>
   11264:	ldr	r4, [pc, #820]	; 115a0 <close@plt+0x6dc>
   11268:	ldr	r1, [r4]
   1126c:	bl	10c84 <fputs_unlocked@plt>
   11270:	mov	r2, #5
   11274:	ldr	r1, [pc, #808]	; 115a4 <close@plt+0x6e0>
   11278:	mov	r0, #0
   1127c:	bl	10d14 <dcgettext@plt>
   11280:	ldr	r1, [r4]
   11284:	bl	10c84 <fputs_unlocked@plt>
   11288:	mov	r2, #5
   1128c:	ldr	r1, [pc, #788]	; 115a8 <close@plt+0x6e4>
   11290:	mov	r0, #0
   11294:	bl	10d14 <dcgettext@plt>
   11298:	ldr	r1, [r4]
   1129c:	bl	10c84 <fputs_unlocked@plt>
   112a0:	mov	r2, #5
   112a4:	ldr	r1, [pc, #768]	; 115ac <close@plt+0x6e8>
   112a8:	mov	r0, #0
   112ac:	bl	10d14 <dcgettext@plt>
   112b0:	ldr	r1, [r4]
   112b4:	bl	10c84 <fputs_unlocked@plt>
   112b8:	mov	r2, #5
   112bc:	ldr	r1, [pc, #748]	; 115b0 <close@plt+0x6ec>
   112c0:	mov	r0, #0
   112c4:	bl	10d14 <dcgettext@plt>
   112c8:	ldr	r1, [r4]
   112cc:	bl	10c84 <fputs_unlocked@plt>
   112d0:	mov	r2, #5
   112d4:	ldr	r1, [pc, #728]	; 115b4 <close@plt+0x6f0>
   112d8:	mov	r0, #0
   112dc:	bl	10d14 <dcgettext@plt>
   112e0:	ldr	r1, [r4]
   112e4:	bl	10c84 <fputs_unlocked@plt>
   112e8:	mov	r2, #5
   112ec:	ldr	r1, [pc, #708]	; 115b8 <close@plt+0x6f4>
   112f0:	mov	r0, #0
   112f4:	bl	10d14 <dcgettext@plt>
   112f8:	ldr	r1, [r4]
   112fc:	bl	10c84 <fputs_unlocked@plt>
   11300:	mov	r2, #5
   11304:	ldr	r1, [pc, #688]	; 115bc <close@plt+0x6f8>
   11308:	mov	r0, #0
   1130c:	bl	10d14 <dcgettext@plt>
   11310:	ldr	r1, [r4]
   11314:	bl	10c84 <fputs_unlocked@plt>
   11318:	mov	r2, #5
   1131c:	ldr	r1, [pc, #668]	; 115c0 <close@plt+0x6fc>
   11320:	mov	r0, #0
   11324:	bl	10d14 <dcgettext@plt>
   11328:	ldr	r1, [r4]
   1132c:	bl	10c84 <fputs_unlocked@plt>
   11330:	mov	r2, #5
   11334:	ldr	r1, [pc, #648]	; 115c4 <close@plt+0x700>
   11338:	mov	r0, #0
   1133c:	bl	10d14 <dcgettext@plt>
   11340:	ldr	r1, [r4]
   11344:	bl	10c84 <fputs_unlocked@plt>
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #628]	; 115c8 <close@plt+0x704>
   11350:	mov	r0, #0
   11354:	bl	10d14 <dcgettext@plt>
   11358:	ldr	r1, [r4]
   1135c:	bl	10c84 <fputs_unlocked@plt>
   11360:	mov	r2, #5
   11364:	ldr	r1, [pc, #608]	; 115cc <close@plt+0x708>
   11368:	mov	r0, #0
   1136c:	bl	10d14 <dcgettext@plt>
   11370:	ldr	r2, [r5]
   11374:	mov	r3, r2
   11378:	mov	r1, r0
   1137c:	mov	r0, #1
   11380:	bl	10e1c <__printf_chk@plt>
   11384:	mov	ip, sp
   11388:	ldr	lr, [pc, #576]	; 115d0 <close@plt+0x70c>
   1138c:	ldm	lr!, {r0, r1, r2, r3}
   11390:	stmia	ip!, {r0, r1, r2, r3}
   11394:	ldm	lr!, {r0, r1, r2, r3}
   11398:	stmia	ip!, {r0, r1, r2, r3}
   1139c:	ldm	lr!, {r0, r1, r2, r3}
   113a0:	stmia	ip!, {r0, r1, r2, r3}
   113a4:	ldm	lr, {r0, r1}
   113a8:	stm	ip, {r0, r1}
   113ac:	ldr	r1, [sp]
   113b0:	cmp	r1, #0
   113b4:	moveq	r4, sp
   113b8:	beq	113e0 <close@plt+0x51c>
   113bc:	mov	r4, sp
   113c0:	ldr	r5, [pc, #524]	; 115d4 <close@plt+0x710>
   113c4:	mov	r0, r5
   113c8:	bl	10c9c <strcmp@plt>
   113cc:	cmp	r0, #0
   113d0:	beq	113e0 <close@plt+0x51c>
   113d4:	ldr	r1, [r4, #8]!
   113d8:	cmp	r1, #0
   113dc:	bne	113c4 <close@plt+0x500>
   113e0:	ldr	r4, [r4, #4]
   113e4:	cmp	r4, #0
   113e8:	beq	114fc <close@plt+0x638>
   113ec:	mov	r2, #5
   113f0:	ldr	r1, [pc, #480]	; 115d8 <close@plt+0x714>
   113f4:	mov	r0, #0
   113f8:	bl	10d14 <dcgettext@plt>
   113fc:	ldr	r3, [pc, #472]	; 115dc <close@plt+0x718>
   11400:	ldr	r2, [pc, #472]	; 115e0 <close@plt+0x71c>
   11404:	mov	r1, r0
   11408:	mov	r0, #1
   1140c:	bl	10e1c <__printf_chk@plt>
   11410:	mov	r1, #0
   11414:	mov	r0, #5
   11418:	bl	10e70 <setlocale@plt>
   1141c:	cmp	r0, #0
   11420:	beq	11438 <close@plt+0x574>
   11424:	mov	r2, #3
   11428:	ldr	r1, [pc, #436]	; 115e4 <close@plt+0x720>
   1142c:	bl	10eac <strncmp@plt>
   11430:	cmp	r0, #0
   11434:	bne	11498 <close@plt+0x5d4>
   11438:	mov	r2, #5
   1143c:	ldr	r1, [pc, #420]	; 115e8 <close@plt+0x724>
   11440:	mov	r0, #0
   11444:	bl	10d14 <dcgettext@plt>
   11448:	ldr	r5, [pc, #388]	; 115d4 <close@plt+0x710>
   1144c:	mov	r3, r5
   11450:	ldr	r2, [pc, #388]	; 115dc <close@plt+0x718>
   11454:	mov	r1, r0
   11458:	mov	r0, #1
   1145c:	bl	10e1c <__printf_chk@plt>
   11460:	mov	r2, #5
   11464:	ldr	r1, [pc, #384]	; 115ec <close@plt+0x728>
   11468:	mov	r0, #0
   1146c:	bl	10d14 <dcgettext@plt>
   11470:	mov	r1, r0
   11474:	ldr	r2, [pc, #372]	; 115f0 <close@plt+0x72c>
   11478:	ldr	r3, [pc, #372]	; 115f4 <close@plt+0x730>
   1147c:	cmp	r4, r5
   11480:	movne	r3, r2
   11484:	mov	r2, r4
   11488:	mov	r0, #1
   1148c:	bl	10e1c <__printf_chk@plt>
   11490:	b	11228 <close@plt+0x364>
   11494:	ldr	r4, [pc, #312]	; 115d4 <close@plt+0x710>
   11498:	mov	r2, #5
   1149c:	ldr	r1, [pc, #340]	; 115f8 <close@plt+0x734>
   114a0:	mov	r0, #0
   114a4:	bl	10d14 <dcgettext@plt>
   114a8:	ldr	r3, [pc, #240]	; 115a0 <close@plt+0x6dc>
   114ac:	ldr	r1, [r3]
   114b0:	bl	10c84 <fputs_unlocked@plt>
   114b4:	b	11438 <close@plt+0x574>
   114b8:	mov	r2, #5
   114bc:	ldr	r1, [pc, #292]	; 115e8 <close@plt+0x724>
   114c0:	mov	r0, #0
   114c4:	bl	10d14 <dcgettext@plt>
   114c8:	ldr	r4, [pc, #260]	; 115d4 <close@plt+0x710>
   114cc:	mov	r3, r4
   114d0:	ldr	r2, [pc, #260]	; 115dc <close@plt+0x718>
   114d4:	mov	r1, r0
   114d8:	mov	r0, #1
   114dc:	bl	10e1c <__printf_chk@plt>
   114e0:	mov	r2, #5
   114e4:	ldr	r1, [pc, #256]	; 115ec <close@plt+0x728>
   114e8:	mov	r0, #0
   114ec:	bl	10d14 <dcgettext@plt>
   114f0:	mov	r1, r0
   114f4:	ldr	r3, [pc, #248]	; 115f4 <close@plt+0x730>
   114f8:	b	11484 <close@plt+0x5c0>
   114fc:	mov	r2, #5
   11500:	ldr	r1, [pc, #208]	; 115d8 <close@plt+0x714>
   11504:	mov	r0, #0
   11508:	bl	10d14 <dcgettext@plt>
   1150c:	ldr	r3, [pc, #200]	; 115dc <close@plt+0x718>
   11510:	ldr	r2, [pc, #200]	; 115e0 <close@plt+0x71c>
   11514:	mov	r1, r0
   11518:	mov	r0, #1
   1151c:	bl	10e1c <__printf_chk@plt>
   11520:	mov	r1, #0
   11524:	mov	r0, #5
   11528:	bl	10e70 <setlocale@plt>
   1152c:	cmp	r0, #0
   11530:	beq	114b8 <close@plt+0x5f4>
   11534:	mov	r2, #3
   11538:	ldr	r1, [pc, #164]	; 115e4 <close@plt+0x720>
   1153c:	bl	10eac <strncmp@plt>
   11540:	cmp	r0, #0
   11544:	bne	11494 <close@plt+0x5d0>
   11548:	mov	r2, #5
   1154c:	ldr	r1, [pc, #148]	; 115e8 <close@plt+0x724>
   11550:	mov	r0, #0
   11554:	bl	10d14 <dcgettext@plt>
   11558:	ldr	r4, [pc, #116]	; 115d4 <close@plt+0x710>
   1155c:	mov	r3, r4
   11560:	ldr	r2, [pc, #116]	; 115dc <close@plt+0x718>
   11564:	mov	r1, r0
   11568:	mov	r0, #1
   1156c:	bl	10e1c <__printf_chk@plt>
   11570:	mov	r2, #5
   11574:	ldr	r1, [pc, #112]	; 115ec <close@plt+0x728>
   11578:	mov	r0, #0
   1157c:	bl	10d14 <dcgettext@plt>
   11580:	mov	r1, r0
   11584:	ldr	r3, [pc, #104]	; 115f4 <close@plt+0x730>
   11588:	b	11484 <close@plt+0x5c0>
   1158c:	andeq	r7, r2, r8, asr #2
   11590:	andeq	r5, r1, r0, asr #22
   11594:	andeq	r7, r2, r0, lsl #3
   11598:	andeq	r5, r1, r8, ror #22
   1159c:	andeq	r5, r1, ip, lsl #23
   115a0:	andeq	r7, r2, r4, asr r1
   115a4:	andeq	r5, r1, r0, asr #23
   115a8:	strdeq	r5, [r1], -ip
   115ac:			; <UNDEFINED> instruction: 0x00015cbc
   115b0:	muleq	r1, r4, sp
   115b4:	andeq	r5, r1, r8, ror #28
   115b8:	andeq	r5, r1, r4, lsr #29
   115bc:	ldrdeq	r5, [r1], -r0
   115c0:	andeq	r5, r1, r0, lsl pc
   115c4:	andeq	r5, r1, r0, asr #30
   115c8:	andeq	r5, r1, r8, ror pc
   115cc:			; <UNDEFINED> instruction: 0x00015fb8
   115d0:	andeq	r5, r1, r0, ror #20
   115d4:	andeq	r5, r1, r8, lsr fp
   115d8:	andeq	r6, r1, r4, asr r0
   115dc:	andeq	r6, r1, ip, rrx
   115e0:	muleq	r1, r4, r0
   115e4:	andeq	r6, r1, r4, lsr #1
   115e8:	strdeq	r6, [r1], -r0
   115ec:	andeq	r6, r1, ip, lsl #2
   115f0:			; <UNDEFINED> instruction: 0x00015cb8
   115f4:	andeq	r6, r1, r4, lsr r2
   115f8:	andeq	r6, r1, r8, lsr #1
   115fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11600:	sub	sp, sp, #308	; 0x134
   11604:	str	r0, [sp, #32]
   11608:	mov	r4, r1
   1160c:	ldr	r0, [r1]
   11610:	bl	124e4 <close@plt+0x1620>
   11614:	ldr	r1, [pc, #2116]	; 11e60 <close@plt+0xf9c>
   11618:	mov	r0, #6
   1161c:	bl	10e70 <setlocale@plt>
   11620:	ldr	r6, [pc, #2108]	; 11e64 <close@plt+0xfa0>
   11624:	ldr	r1, [pc, #2108]	; 11e68 <close@plt+0xfa4>
   11628:	mov	r0, r6
   1162c:	bl	10ea0 <bindtextdomain@plt>
   11630:	mov	r0, r6
   11634:	bl	10d2c <textdomain@plt>
   11638:	mov	r0, #3
   1163c:	bl	12294 <close@plt+0x13d0>
   11640:	ldr	r6, [pc, #2084]	; 11e6c <close@plt+0xfa8>
   11644:	strb	r0, [r6, #22]
   11648:	ldr	r0, [pc, #2080]	; 11e70 <close@plt+0xfac>
   1164c:	bl	15a3c <close@plt+0x4b78>
   11650:	mov	r3, #1
   11654:	strb	r3, [r6]
   11658:	strb	r3, [r6, #1]
   1165c:	strb	r3, [r6, #8]
   11660:	mov	r3, #0
   11664:	strb	r3, [r6, #16]
   11668:	strb	r3, [r6, #21]
   1166c:	strb	r3, [r6, #20]
   11670:	str	r3, [r6, #12]
   11674:	strb	r3, [r6, #23]
   11678:	ldr	r7, [pc, #2036]	; 11e74 <close@plt+0xfb0>
   1167c:	ldr	r6, [pc, #2036]	; 11e78 <close@plt+0xfb4>
   11680:	ldr	r8, [pc, #2020]	; 11e6c <close@plt+0xfa8>
   11684:	ldr	r5, [pc, #2032]	; 11e7c <close@plt+0xfb8>
   11688:	ldr	r9, [pc, #2032]	; 11e80 <close@plt+0xfbc>
   1168c:	ldr	fp, [pc, #2032]	; 11e84 <close@plt+0xfc0>
   11690:	mov	r3, #0
   11694:	str	r3, [sp]
   11698:	mov	r3, r7
   1169c:	mov	r2, r6
   116a0:	mov	r1, r4
   116a4:	ldr	r0, [sp, #32]
   116a8:	bl	10dc8 <getopt_long@plt>
   116ac:	cmn	r0, #1
   116b0:	beq	1181c <close@plt+0x958>
   116b4:	cmp	r0, #51	; 0x33
   116b8:	beq	11784 <close@plt+0x8c0>
   116bc:	ble	116ec <close@plt+0x828>
   116c0:	ldr	r3, [pc, #1984]	; 11e88 <close@plt+0xfc4>
   116c4:	cmp	r0, r3
   116c8:	beq	1179c <close@plt+0x8d8>
   116cc:	bgt	11758 <close@plt+0x894>
   116d0:	cmp	r0, #122	; 0x7a
   116d4:	beq	11790 <close@plt+0x8cc>
   116d8:	cmp	r0, #256	; 0x100
   116dc:	bne	11814 <close@plt+0x950>
   116e0:	mov	r3, #1
   116e4:	str	r3, [r8, #12]
   116e8:	b	11690 <close@plt+0x7cc>
   116ec:	cmn	r0, #2
   116f0:	beq	1180c <close@plt+0x948>
   116f4:	ble	11714 <close@plt+0x850>
   116f8:	cmp	r0, #49	; 0x31
   116fc:	beq	11778 <close@plt+0x8b4>
   11700:	cmp	r0, #50	; 0x32
   11704:	bne	11814 <close@plt+0x950>
   11708:	mov	r3, #0
   1170c:	strb	r3, [r8, #1]
   11710:	b	11690 <close@plt+0x7cc>
   11714:	cmn	r0, #3
   11718:	bne	11814 <close@plt+0x950>
   1171c:	mov	r4, #0
   11720:	str	r4, [sp, #8]
   11724:	ldr	r3, [pc, #1888]	; 11e8c <close@plt+0xfc8>
   11728:	str	r3, [sp, #4]
   1172c:	ldr	r3, [pc, #1884]	; 11e90 <close@plt+0xfcc>
   11730:	str	r3, [sp]
   11734:	ldr	r3, [pc, #1880]	; 11e94 <close@plt+0xfd0>
   11738:	ldr	r3, [r3]
   1173c:	ldr	r2, [pc, #1876]	; 11e98 <close@plt+0xfd4>
   11740:	ldr	r1, [pc, #1876]	; 11e9c <close@plt+0xfd8>
   11744:	ldr	r0, [pc, #1876]	; 11ea0 <close@plt+0xfdc>
   11748:	ldr	r0, [r0]
   1174c:	bl	145bc <close@plt+0x36f8>
   11750:	mov	r0, r4
   11754:	bl	10de0 <exit@plt>
   11758:	ldr	r3, [pc, #1860]	; 11ea4 <close@plt+0xfe0>
   1175c:	cmp	r0, r3
   11760:	beq	117a8 <close@plt+0x8e4>
   11764:	cmp	r0, fp
   11768:	bne	11814 <close@plt+0x950>
   1176c:	mov	r3, #1
   11770:	strb	r3, [r8, #23]
   11774:	b	11690 <close@plt+0x7cc>
   11778:	mov	r3, #0
   1177c:	strb	r3, [r8]
   11780:	b	11690 <close@plt+0x7cc>
   11784:	mov	r3, #0
   11788:	strb	r3, [r8, #8]
   1178c:	b	11690 <close@plt+0x7cc>
   11790:	mov	r3, #0
   11794:	strb	r3, [r9, #4]
   11798:	b	11690 <close@plt+0x7cc>
   1179c:	mov	r3, #2
   117a0:	str	r3, [r8, #12]
   117a4:	b	11690 <close@plt+0x7cc>
   117a8:	ldr	r3, [r8, #4]
   117ac:	cmp	r3, #0
   117b0:	beq	117c8 <close@plt+0x904>
   117b4:	ldr	r1, [r5]
   117b8:	ldr	r0, [r9]
   117bc:	bl	10c9c <strcmp@plt>
   117c0:	cmp	r0, #0
   117c4:	bne	117ec <close@plt+0x928>
   117c8:	ldr	r0, [r5]
   117cc:	str	r0, [r9]
   117d0:	ldrb	r3, [r0]
   117d4:	cmp	r3, #0
   117d8:	moveq	r0, #1
   117dc:	beq	117e4 <close@plt+0x920>
   117e0:	bl	10dec <strlen@plt>
   117e4:	str	r0, [r8, #4]
   117e8:	b	11690 <close@plt+0x7cc>
   117ec:	mov	r2, #5
   117f0:	ldr	r1, [pc, #1712]	; 11ea8 <close@plt+0xfe4>
   117f4:	mov	r0, #0
   117f8:	bl	10d14 <dcgettext@plt>
   117fc:	mov	r2, r0
   11800:	mov	r1, #0
   11804:	mov	r0, #1
   11808:	bl	10d80 <error@plt>
   1180c:	mov	r0, #0
   11810:	bl	111e8 <close@plt+0x324>
   11814:	mov	r0, #1
   11818:	bl	111e8 <close@plt+0x324>
   1181c:	ldr	r3, [pc, #1608]	; 11e6c <close@plt+0xfa8>
   11820:	ldr	r3, [r3, #4]
   11824:	cmp	r3, #0
   11828:	moveq	r2, #1
   1182c:	ldreq	r3, [pc, #1592]	; 11e6c <close@plt+0xfa8>
   11830:	streq	r2, [r3, #4]
   11834:	ldr	r3, [pc, #1648]	; 11eac <close@plt+0xfe8>
   11838:	ldr	r2, [r3]
   1183c:	ldr	r3, [sp, #32]
   11840:	sub	r3, r3, r2
   11844:	cmp	r3, #1
   11848:	ble	11898 <close@plt+0x9d4>
   1184c:	cmp	r3, #2
   11850:	ble	11908 <close@plt+0xa44>
   11854:	mov	r2, #5
   11858:	ldr	r1, [pc, #1616]	; 11eb0 <close@plt+0xfec>
   1185c:	mov	r0, #0
   11860:	bl	10d14 <dcgettext@plt>
   11864:	mov	r5, r0
   11868:	ldr	r3, [pc, #1596]	; 11eac <close@plt+0xfe8>
   1186c:	ldr	r3, [r3]
   11870:	add	r3, r3, #2
   11874:	ldr	r0, [r4, r3, lsl #2]
   11878:	bl	14034 <close@plt+0x3170>
   1187c:	mov	r3, r0
   11880:	mov	r2, r5
   11884:	mov	r1, #0
   11888:	mov	r0, r1
   1188c:	bl	10d80 <error@plt>
   11890:	mov	r0, #1
   11894:	bl	111e8 <close@plt+0x324>
   11898:	ldr	r3, [sp, #32]
   1189c:	cmp	r3, r2
   118a0:	bgt	118cc <close@plt+0xa08>
   118a4:	mov	r2, #5
   118a8:	ldr	r1, [pc, #1540]	; 11eb4 <close@plt+0xff0>
   118ac:	mov	r0, #0
   118b0:	bl	10d14 <dcgettext@plt>
   118b4:	mov	r2, r0
   118b8:	mov	r1, #0
   118bc:	mov	r0, r1
   118c0:	bl	10d80 <error@plt>
   118c4:	mov	r0, #1
   118c8:	bl	111e8 <close@plt+0x324>
   118cc:	mov	r2, #5
   118d0:	ldr	r1, [pc, #1504]	; 11eb8 <close@plt+0xff4>
   118d4:	mov	r0, #0
   118d8:	bl	10d14 <dcgettext@plt>
   118dc:	mov	r6, r0
   118e0:	ldr	r3, [sp, #32]
   118e4:	sub	r5, r3, #-1073741823	; 0xc0000001
   118e8:	ldr	r0, [r4, r5, lsl #2]
   118ec:	bl	14034 <close@plt+0x3170>
   118f0:	mov	r3, r0
   118f4:	mov	r2, r6
   118f8:	mov	r1, #0
   118fc:	mov	r0, r1
   11900:	bl	10d80 <error@plt>
   11904:	b	118c4 <close@plt+0xa00>
   11908:	add	r3, r4, r2, lsl #2
   1190c:	str	r3, [sp, #60]	; 0x3c
   11910:	str	r3, [sp, #32]
   11914:	mov	r9, #0
   11918:	mov	fp, r9
   1191c:	str	r0, [sp, #24]
   11920:	mov	sl, fp
   11924:	mov	r6, #48	; 0x30
   11928:	mul	r6, r6, fp
   1192c:	add	r3, sp, #176	; 0xb0
   11930:	add	r8, r3, fp, lsl #4
   11934:	mov	r4, #0
   11938:	mov	r7, #12
   1193c:	mla	r5, r7, r4, r6
   11940:	add	r3, sp, #208	; 0xd0
   11944:	add	r5, r3, r5
   11948:	mov	r0, r5
   1194c:	bl	1235c <close@plt+0x1498>
   11950:	str	r5, [r8, r4, lsl #2]
   11954:	add	r4, r4, #1
   11958:	cmp	r4, #4
   1195c:	bne	1193c <close@plt+0xa78>
   11960:	mov	r2, #0
   11964:	add	r3, sp, #152	; 0x98
   11968:	str	r2, [r3, r9]!
   1196c:	str	r2, [r3, #4]
   11970:	str	r2, [r3, #8]
   11974:	ldr	r3, [sp, #32]
   11978:	mov	r5, r3
   1197c:	ldr	r4, [r3], #4
   11980:	str	r3, [sp, #32]
   11984:	ldr	r1, [pc, #1328]	; 11ebc <close@plt+0xff8>
   11988:	mov	r0, r4
   1198c:	bl	10c9c <strcmp@plt>
   11990:	cmp	r0, #0
   11994:	ldreq	r3, [pc, #1316]	; 11ec0 <close@plt+0xffc>
   11998:	ldreq	r4, [r3]
   1199c:	bne	11a30 <close@plt+0xb6c>
   119a0:	add	r3, sp, #72	; 0x48
   119a4:	str	r4, [r3, sl, lsl #2]
   119a8:	cmp	r4, #0
   119ac:	beq	11a44 <close@plt+0xb80>
   119b0:	mov	r1, #2
   119b4:	mov	r0, r4
   119b8:	bl	12010 <close@plt+0x114c>
   119bc:	add	r3, sp, #152	; 0x98
   119c0:	ldr	r3, [r3, r9]
   119c4:	add	r3, r3, fp, lsl #2
   119c8:	add	r2, sp, #304	; 0x130
   119cc:	add	r3, r2, r3, lsl #2
   119d0:	ldr	r2, [pc, #1192]	; 11e80 <close@plt+0xfbc>
   119d4:	ldrb	r2, [r2, #4]
   119d8:	mov	r1, r4
   119dc:	ldr	r0, [r3, #-128]	; 0xffffff80
   119e0:	bl	12370 <close@plt+0x14ac>
   119e4:	add	r3, sp, #64	; 0x40
   119e8:	str	r0, [r3, sl, lsl #2]
   119ec:	ldr	r3, [r4]
   119f0:	ands	r3, r3, #32
   119f4:	bne	11a70 <close@plt+0xbac>
   119f8:	add	fp, fp, #1
   119fc:	add	r9, r9, #12
   11a00:	cmp	fp, #2
   11a04:	bne	11920 <close@plt+0xa5c>
   11a08:	ldr	sl, [sp, #24]
   11a0c:	str	r3, [sp, #36]	; 0x24
   11a10:	mov	r2, #0
   11a14:	mov	r3, #0
   11a18:	strd	r2, [sp, #40]	; 0x28
   11a1c:	strd	r2, [sp, #24]
   11a20:	strd	r2, [sp, #48]	; 0x30
   11a24:	mov	fp, #0
   11a28:	str	sl, [sp, #56]	; 0x38
   11a2c:	b	11c7c <close@plt+0xdb8>
   11a30:	ldr	r1, [pc, #1164]	; 11ec4 <close@plt+0x1000>
   11a34:	mov	r0, r4
   11a38:	bl	12150 <close@plt+0x128c>
   11a3c:	mov	r4, r0
   11a40:	b	119a0 <close@plt+0xadc>
   11a44:	bl	10df8 <__errno_location@plt>
   11a48:	ldr	r4, [r0]
   11a4c:	ldr	r2, [r5]
   11a50:	mov	r1, #3
   11a54:	mov	r0, #0
   11a58:	bl	13ecc <close@plt+0x3008>
   11a5c:	mov	r3, r0
   11a60:	ldr	r2, [pc, #1120]	; 11ec8 <close@plt+0x1004>
   11a64:	mov	r1, r4
   11a68:	mov	r0, #1
   11a6c:	bl	10d80 <error@plt>
   11a70:	bl	10df8 <__errno_location@plt>
   11a74:	ldr	r4, [r0]
   11a78:	ldr	r2, [r5]
   11a7c:	mov	r1, #3
   11a80:	mov	r0, #0
   11a84:	bl	13ecc <close@plt+0x3008>
   11a88:	mov	r3, r0
   11a8c:	ldr	r2, [pc, #1076]	; 11ec8 <close@plt+0x1004>
   11a90:	mov	r1, r4
   11a94:	mov	r0, #1
   11a98:	bl	10d80 <error@plt>
   11a9c:	ldr	r3, [r0, #4]
   11aa0:	ldr	r1, [r4, #4]
   11aa4:	sub	r3, r3, #1
   11aa8:	ldr	r2, [r0, #8]
   11aac:	sub	r1, r1, #1
   11ab0:	ldr	r0, [r4, #8]
   11ab4:	bl	14d3c <close@plt+0x3e78>
   11ab8:	mov	r5, r0
   11abc:	cmp	r5, #0
   11ac0:	bne	11c08 <close@plt+0xd44>
   11ac4:	ldrd	r2, [sp, #40]	; 0x28
   11ac8:	adds	r2, r2, #1
   11acc:	adc	r3, r3, #0
   11ad0:	strd	r2, [sp, #40]	; 0x28
   11ad4:	mov	r2, #3
   11ad8:	ldr	r3, [pc, #960]	; 11ea0 <close@plt+0xfdc>
   11adc:	ldr	r1, [r3]
   11ae0:	ldr	r0, [sp, #68]	; 0x44
   11ae4:	bl	10ff8 <close@plt+0x134>
   11ae8:	mov	r3, #1
   11aec:	strb	r3, [sp, #129]	; 0x81
   11af0:	mov	r3, #1
   11af4:	strb	r3, [sp, #128]	; 0x80
   11af8:	b	11c48 <close@plt+0xd84>
   11afc:	ldr	r9, [r5, #4]
   11b00:	str	r9, [r5, #8]
   11b04:	ldr	r7, [r5]
   11b08:	str	r7, [r5, #4]
   11b0c:	add	r3, r7, #1
   11b10:	and	r3, r3, #3
   11b14:	str	r3, [r5]
   11b18:	add	r2, sp, #72	; 0x48
   11b1c:	ldr	sl, [r2, r4, lsl #2]
   11b20:	add	r3, r3, r4, lsl #2
   11b24:	add	r2, sp, #304	; 0x130
   11b28:	add	r3, r2, r3, lsl #2
   11b2c:	ldr	r2, [pc, #844]	; 11e80 <close@plt+0xfbc>
   11b30:	ldrb	r2, [r2, #4]
   11b34:	mov	r1, sl
   11b38:	ldr	r0, [r3, #-128]	; 0xffffff80
   11b3c:	bl	12370 <close@plt+0x14ac>
   11b40:	add	r3, sp, #64	; 0x40
   11b44:	str	r0, [r3, r4, lsl #2]
   11b48:	cmp	r0, #0
   11b4c:	beq	11b84 <close@plt+0xcc0>
   11b50:	add	r7, r7, r4, lsl #2
   11b54:	add	r3, sp, #304	; 0x130
   11b58:	add	r7, r3, r7, lsl #2
   11b5c:	mov	r2, r6
   11b60:	mov	r1, r0
   11b64:	ldr	r0, [r7, #-128]	; 0xffffff80
   11b68:	bl	110fc <close@plt+0x238>
   11b6c:	ldr	r3, [sl]
   11b70:	tst	r3, #32
   11b74:	bne	11bbc <close@plt+0xcf8>
   11b78:	ldr	r3, [sp, #32]
   11b7c:	strb	fp, [r3, r8]
   11b80:	b	11c68 <close@plt+0xda4>
   11b84:	add	r9, r9, r4, lsl #2
   11b88:	add	r3, sp, #304	; 0x130
   11b8c:	add	r9, r3, r9, lsl #2
   11b90:	ldr	r0, [r9, #-128]	; 0xffffff80
   11b94:	ldr	r3, [r0, #8]
   11b98:	cmp	r3, #0
   11b9c:	beq	11b6c <close@plt+0xca8>
   11ba0:	add	r7, r7, r4, lsl #2
   11ba4:	add	r3, sp, #304	; 0x130
   11ba8:	add	r7, r3, r7, lsl #2
   11bac:	mov	r2, r6
   11bb0:	ldr	r1, [r7, #-128]	; 0xffffff80
   11bb4:	bl	110fc <close@plt+0x238>
   11bb8:	b	11b6c <close@plt+0xca8>
   11bbc:	bl	10df8 <__errno_location@plt>
   11bc0:	ldr	r4, [r0]
   11bc4:	ldr	r3, [sp, #60]	; 0x3c
   11bc8:	ldr	r2, [sp, #32]
   11bcc:	ldr	r2, [r3, r2, lsl #2]
   11bd0:	mov	r1, #3
   11bd4:	mov	r0, #0
   11bd8:	bl	13ecc <close@plt+0x3008>
   11bdc:	mov	r3, r0
   11be0:	ldr	r2, [pc, #736]	; 11ec8 <close@plt+0x1004>
   11be4:	mov	r1, r4
   11be8:	mov	r0, #1
   11bec:	bl	10d80 <error@plt>
   11bf0:	ldr	r3, [sp, #68]	; 0x44
   11bf4:	cmp	r3, #0
   11bf8:	beq	11cec <close@plt+0xe28>
   11bfc:	strb	fp, [sp, #128]	; 0x80
   11c00:	strb	fp, [sp, #129]	; 0x81
   11c04:	mov	r5, #1
   11c08:	mov	r3, #1
   11c0c:	ldr	r2, [pc, #600]	; 11e6c <close@plt+0xfa8>
   11c10:	strb	r3, [r2, #16]
   11c14:	cmp	r5, #0
   11c18:	ble	11e2c <close@plt+0xf68>
   11c1c:	ldrd	r2, [sp, #24]
   11c20:	adds	r2, r2, #1
   11c24:	adc	r3, r3, #0
   11c28:	strd	r2, [sp, #24]
   11c2c:	mov	r2, #2
   11c30:	ldr	r3, [pc, #616]	; 11ea0 <close@plt+0xfdc>
   11c34:	ldr	r1, [r3]
   11c38:	ldr	r0, [sp, #68]	; 0x44
   11c3c:	bl	10ff8 <close@plt+0x134>
   11c40:	mov	r3, #1
   11c44:	strb	r3, [sp, #129]	; 0x81
   11c48:	add	r5, sp, #152	; 0x98
   11c4c:	ldr	r4, [sp, #36]	; 0x24
   11c50:	mov	r6, #1
   11c54:	add	r8, sp, #128	; 0x80
   11c58:	str	r4, [sp, #32]
   11c5c:	ldrb	r3, [r4, r8]
   11c60:	cmp	r3, #0
   11c64:	bne	11afc <close@plt+0xc38>
   11c68:	add	r4, r4, #1
   11c6c:	add	r6, r6, #1
   11c70:	add	r5, r5, #12
   11c74:	cmp	r4, #2
   11c78:	bne	11c58 <close@plt+0xd94>
   11c7c:	ldr	r4, [sp, #64]	; 0x40
   11c80:	cmp	r4, #0
   11c84:	beq	11bf0 <close@plt+0xd2c>
   11c88:	strb	fp, [sp, #128]	; 0x80
   11c8c:	strb	fp, [sp, #129]	; 0x81
   11c90:	ldr	r0, [sp, #68]	; 0x44
   11c94:	cmp	r0, #0
   11c98:	beq	11e1c <close@plt+0xf58>
   11c9c:	ldr	r3, [pc, #456]	; 11e6c <close@plt+0xfa8>
   11ca0:	ldrb	r3, [r3, #22]
   11ca4:	cmp	r3, #0
   11ca8:	bne	11a9c <close@plt+0xbd8>
   11cac:	ldr	r7, [r0, #4]
   11cb0:	ldr	r6, [r4, #4]
   11cb4:	cmp	r7, r6
   11cb8:	movlt	r2, r7
   11cbc:	movge	r2, r6
   11cc0:	sub	r2, r2, #1
   11cc4:	ldr	r1, [r0, #8]
   11cc8:	ldr	r0, [r4, #8]
   11ccc:	bl	10cfc <memcmp@plt>
   11cd0:	subs	r5, r0, #0
   11cd4:	bne	11c08 <close@plt+0xd44>
   11cd8:	cmp	r7, r6
   11cdc:	bgt	11e1c <close@plt+0xf58>
   11ce0:	subs	r5, r7, r6
   11ce4:	movne	r5, #1
   11ce8:	b	11abc <close@plt+0xbf8>
   11cec:	ldr	r0, [sp, #72]	; 0x48
   11cf0:	bl	12044 <close@plt+0x1180>
   11cf4:	cmp	r0, #0
   11cf8:	bne	11d64 <close@plt+0xea0>
   11cfc:	ldr	r0, [sp, #76]	; 0x4c
   11d00:	bl	12044 <close@plt+0x1180>
   11d04:	cmp	r0, #0
   11d08:	bne	11d5c <close@plt+0xe98>
   11d0c:	ldr	r3, [pc, #344]	; 11e6c <close@plt+0xfa8>
   11d10:	ldrb	r3, [r3, #23]
   11d14:	cmp	r3, #0
   11d18:	bne	11d98 <close@plt+0xed4>
   11d1c:	ldr	r3, [pc, #328]	; 11e6c <close@plt+0xfa8>
   11d20:	ldrb	r3, [r3, #20]
   11d24:	cmp	r3, #0
   11d28:	bne	11d3c <close@plt+0xe78>
   11d2c:	ldr	r3, [pc, #312]	; 11e6c <close@plt+0xfa8>
   11d30:	ldrb	r3, [r3, #21]
   11d34:	cmp	r3, #0
   11d38:	beq	11e14 <close@plt+0xf50>
   11d3c:	mov	r2, #5
   11d40:	ldr	r1, [pc, #388]	; 11ecc <close@plt+0x1008>
   11d44:	mov	r0, #0
   11d48:	bl	10d14 <dcgettext@plt>
   11d4c:	mov	r2, r0
   11d50:	mov	r1, #0
   11d54:	mov	r0, #1
   11d58:	bl	10d80 <error@plt>
   11d5c:	mov	r3, #1
   11d60:	str	r3, [sp, #36]	; 0x24
   11d64:	bl	10df8 <__errno_location@plt>
   11d68:	ldr	r4, [r0]
   11d6c:	ldr	r3, [sp, #60]	; 0x3c
   11d70:	ldr	r2, [sp, #36]	; 0x24
   11d74:	ldr	r2, [r3, r2, lsl #2]
   11d78:	mov	r1, #3
   11d7c:	mov	r0, #0
   11d80:	bl	13ecc <close@plt+0x3008>
   11d84:	mov	r3, r0
   11d88:	ldr	r2, [pc, #312]	; 11ec8 <close@plt+0x1004>
   11d8c:	mov	r1, r4
   11d90:	mov	r0, #1
   11d94:	bl	10d80 <error@plt>
   11d98:	add	r2, sp, #80	; 0x50
   11d9c:	ldrd	r0, [sp, #48]	; 0x30
   11da0:	bl	122f4 <close@plt+0x1430>
   11da4:	mov	r6, r0
   11da8:	add	r2, sp, #104	; 0x68
   11dac:	ldrd	r0, [sp, #24]
   11db0:	bl	122f4 <close@plt+0x1430>
   11db4:	mov	r7, r0
   11db8:	add	r2, sp, #128	; 0x80
   11dbc:	ldrd	r0, [sp, #40]	; 0x28
   11dc0:	bl	122f4 <close@plt+0x1430>
   11dc4:	mov	r8, r0
   11dc8:	ldr	r5, [pc, #176]	; 11e80 <close@plt+0xfbc>
   11dcc:	ldr	r4, [r5]
   11dd0:	mov	r2, #5
   11dd4:	ldr	r1, [pc, #244]	; 11ed0 <close@plt+0x100c>
   11dd8:	mov	r0, #0
   11ddc:	bl	10d14 <dcgettext@plt>
   11de0:	ldrb	r3, [r5, #4]
   11de4:	str	r3, [sp, #20]
   11de8:	str	r0, [sp, #16]
   11dec:	str	r4, [sp, #12]
   11df0:	str	r8, [sp, #8]
   11df4:	str	r4, [sp, #4]
   11df8:	str	r7, [sp]
   11dfc:	mov	r3, r4
   11e00:	mov	r2, r6
   11e04:	ldr	r1, [pc, #200]	; 11ed4 <close@plt+0x1010>
   11e08:	mov	r0, #1
   11e0c:	bl	10e1c <__printf_chk@plt>
   11e10:	b	11d1c <close@plt+0xe58>
   11e14:	mov	r0, #0
   11e18:	bl	10de0 <exit@plt>
   11e1c:	mov	r3, #1
   11e20:	ldr	r2, [pc, #68]	; 11e6c <close@plt+0xfa8>
   11e24:	strb	r3, [r2, #16]
   11e28:	ldr	r5, [sp, #56]	; 0x38
   11e2c:	ldrd	r2, [sp, #48]	; 0x30
   11e30:	adds	r2, r2, #1
   11e34:	adc	r3, r3, #0
   11e38:	strd	r2, [sp, #48]	; 0x30
   11e3c:	mov	r2, #1
   11e40:	ldr	r3, [pc, #88]	; 11ea0 <close@plt+0xfdc>
   11e44:	ldr	r1, [r3]
   11e48:	mov	r0, r4
   11e4c:	bl	10ff8 <close@plt+0x134>
   11e50:	cmp	r5, #0
   11e54:	movge	r3, #1
   11e58:	strbge	r3, [sp, #129]	; 0x81
   11e5c:	b	11af0 <close@plt+0xc2c>
   11e60:			; <UNDEFINED> instruction: 0x00015cb8
   11e64:	muleq	r1, r8, r0
   11e68:	andeq	r6, r1, r0, asr #2
   11e6c:	andeq	r7, r2, r0, ror #2
   11e70:	strdeq	r1, [r1], -r8
   11e74:	muleq	r1, r8, sl
   11e78:	andeq	r6, r1, r4, lsr #3
   11e7c:	andeq	r7, r2, r8, asr r1
   11e80:	andeq	r7, r2, r4, ror #1
   11e84:	andeq	r0, r0, r3, lsl #2
   11e88:	andeq	r0, r0, r1, lsl #2
   11e8c:	andeq	r6, r1, r0, lsl #3
   11e90:	muleq	r1, r0, r1
   11e94:	andeq	r7, r2, ip, ror #1
   11e98:	muleq	r1, r4, r0
   11e9c:	andeq	r5, r1, r8, lsr fp
   11ea0:	andeq	r7, r2, r4, asr r1
   11ea4:	andeq	r0, r0, r2, lsl #2
   11ea8:	andeq	r6, r1, r8, asr r1
   11eac:	andeq	r7, r2, r0, asr #2
   11eb0:	ldrdeq	r6, [r1], -r8
   11eb4:	andeq	r6, r1, ip, lsr #3
   11eb8:			; <UNDEFINED> instruction: 0x000161bc
   11ebc:	andeq	r6, r1, ip, ror #3
   11ec0:	andeq	r7, r2, r0, asr r1
   11ec4:			; <UNDEFINED> instruction: 0x000162b0
   11ec8:	andeq	r6, r1, ip, lsl #6
   11ecc:	andeq	r6, r1, ip, lsl #4
   11ed0:	strdeq	r6, [r1], -r0
   11ed4:	strdeq	r6, [r1], -r8
   11ed8:	ldr	r3, [pc, #4]	; 11ee4 <close@plt+0x1020>
   11edc:	str	r0, [r3]
   11ee0:	bx	lr
   11ee4:	andeq	r7, r2, r8, ror r1
   11ee8:	ldr	r3, [pc, #4]	; 11ef4 <close@plt+0x1030>
   11eec:	strb	r0, [r3, #4]
   11ef0:	bx	lr
   11ef4:	andeq	r7, r2, r8, ror r1
   11ef8:	push	{r4, r5, r6, lr}
   11efc:	sub	sp, sp, #8
   11f00:	ldr	r3, [pc, #200]	; 11fd0 <close@plt+0x110c>
   11f04:	ldr	r0, [r3]
   11f08:	bl	14eb8 <close@plt+0x3ff4>
   11f0c:	cmp	r0, #0
   11f10:	beq	11f34 <close@plt+0x1070>
   11f14:	ldr	r3, [pc, #184]	; 11fd4 <close@plt+0x1110>
   11f18:	ldrb	r3, [r3, #4]
   11f1c:	cmp	r3, #0
   11f20:	beq	11f50 <close@plt+0x108c>
   11f24:	bl	10df8 <__errno_location@plt>
   11f28:	ldr	r3, [r0]
   11f2c:	cmp	r3, #32
   11f30:	bne	11f50 <close@plt+0x108c>
   11f34:	ldr	r3, [pc, #156]	; 11fd8 <close@plt+0x1114>
   11f38:	ldr	r0, [r3]
   11f3c:	bl	14eb8 <close@plt+0x3ff4>
   11f40:	cmp	r0, #0
   11f44:	bne	11fc4 <close@plt+0x1100>
   11f48:	add	sp, sp, #8
   11f4c:	pop	{r4, r5, r6, pc}
   11f50:	mov	r2, #5
   11f54:	ldr	r1, [pc, #128]	; 11fdc <close@plt+0x1118>
   11f58:	mov	r0, #0
   11f5c:	bl	10d14 <dcgettext@plt>
   11f60:	mov	r4, r0
   11f64:	ldr	r3, [pc, #104]	; 11fd4 <close@plt+0x1110>
   11f68:	ldr	r5, [r3]
   11f6c:	cmp	r5, #0
   11f70:	beq	11fa8 <close@plt+0x10e4>
   11f74:	bl	10df8 <__errno_location@plt>
   11f78:	ldr	r6, [r0]
   11f7c:	mov	r0, r5
   11f80:	bl	13eac <close@plt+0x2fe8>
   11f84:	str	r4, [sp]
   11f88:	mov	r3, r0
   11f8c:	ldr	r2, [pc, #76]	; 11fe0 <close@plt+0x111c>
   11f90:	mov	r1, r6
   11f94:	mov	r0, #0
   11f98:	bl	10d80 <error@plt>
   11f9c:	ldr	r3, [pc, #64]	; 11fe4 <close@plt+0x1120>
   11fa0:	ldr	r0, [r3]
   11fa4:	bl	10ccc <_exit@plt>
   11fa8:	bl	10df8 <__errno_location@plt>
   11fac:	mov	r3, r4
   11fb0:	ldr	r2, [pc, #48]	; 11fe8 <close@plt+0x1124>
   11fb4:	ldr	r1, [r0]
   11fb8:	mov	r0, #0
   11fbc:	bl	10d80 <error@plt>
   11fc0:	b	11f9c <close@plt+0x10d8>
   11fc4:	ldr	r3, [pc, #24]	; 11fe4 <close@plt+0x1120>
   11fc8:	ldr	r0, [r3]
   11fcc:	bl	10ccc <_exit@plt>
   11fd0:	andeq	r7, r2, r4, asr r1
   11fd4:	andeq	r7, r2, r8, ror r1
   11fd8:	andeq	r7, r2, r8, asr #2
   11fdc:	strdeq	r6, [r1], -ip
   11fe0:	andeq	r6, r1, r8, lsl #6
   11fe4:	strdeq	r7, [r2], -r0
   11fe8:	andeq	r6, r1, ip, lsl #6
   11fec:	push	{r4, r5, lr}
   11ff0:	sub	sp, sp, #20
   11ff4:	ldr	r1, [sp, #40]	; 0x28
   11ff8:	str	r1, [sp, #8]
   11ffc:	ldrd	r4, [sp, #32]
   12000:	strd	r4, [sp]
   12004:	bl	10ca8 <posix_fadvise64@plt>
   12008:	add	sp, sp, #20
   1200c:	pop	{r4, r5, pc}
   12010:	cmp	r0, #0
   12014:	bxeq	lr
   12018:	push	{r4, lr}
   1201c:	sub	sp, sp, #16
   12020:	mov	r4, r1
   12024:	bl	10e28 <fileno@plt>
   12028:	str	r4, [sp, #8]
   1202c:	mov	r2, #0
   12030:	mov	r3, #0
   12034:	strd	r2, [sp]
   12038:	bl	10ca8 <posix_fadvise64@plt>
   1203c:	add	sp, sp, #16
   12040:	pop	{r4, pc}
   12044:	push	{r4, r5, r6, lr}
   12048:	sub	sp, sp, #8
   1204c:	mov	r4, r0
   12050:	bl	10e28 <fileno@plt>
   12054:	cmp	r0, #0
   12058:	blt	120d0 <close@plt+0x120c>
   1205c:	mov	r0, r4
   12060:	bl	10db0 <__freading@plt>
   12064:	cmp	r0, #0
   12068:	beq	1209c <close@plt+0x11d8>
   1206c:	mov	r0, r4
   12070:	bl	10e28 <fileno@plt>
   12074:	mov	r3, #1
   12078:	str	r3, [sp]
   1207c:	mov	r2, #0
   12080:	mov	r3, #0
   12084:	bl	10d50 <lseek64@plt>
   12088:	mvn	r2, #0
   1208c:	mvn	r3, #0
   12090:	cmp	r1, r3
   12094:	cmpeq	r0, r2
   12098:	beq	120dc <close@plt+0x1218>
   1209c:	mov	r0, r4
   120a0:	bl	120ec <close@plt+0x1228>
   120a4:	cmp	r0, #0
   120a8:	beq	120dc <close@plt+0x1218>
   120ac:	bl	10df8 <__errno_location@plt>
   120b0:	mov	r5, r0
   120b4:	ldr	r6, [r0]
   120b8:	mov	r0, r4
   120bc:	bl	10e40 <fclose@plt>
   120c0:	cmp	r6, #0
   120c4:	strne	r6, [r5]
   120c8:	mvnne	r0, #0
   120cc:	b	120e4 <close@plt+0x1220>
   120d0:	mov	r0, r4
   120d4:	bl	10e40 <fclose@plt>
   120d8:	b	120e4 <close@plt+0x1220>
   120dc:	mov	r0, r4
   120e0:	bl	10e40 <fclose@plt>
   120e4:	add	sp, sp, #8
   120e8:	pop	{r4, r5, r6, pc}
   120ec:	push	{r4, lr}
   120f0:	sub	sp, sp, #8
   120f4:	subs	r4, r0, #0
   120f8:	beq	1210c <close@plt+0x1248>
   120fc:	mov	r0, r4
   12100:	bl	10db0 <__freading@plt>
   12104:	cmp	r0, #0
   12108:	bne	1211c <close@plt+0x1258>
   1210c:	mov	r0, r4
   12110:	bl	10cb4 <fflush@plt>
   12114:	add	sp, sp, #8
   12118:	pop	{r4, pc}
   1211c:	ldr	r3, [r4]
   12120:	tst	r3, #256	; 0x100
   12124:	bne	12134 <close@plt+0x1270>
   12128:	mov	r0, r4
   1212c:	bl	10cb4 <fflush@plt>
   12130:	b	12114 <close@plt+0x1250>
   12134:	mov	r3, #1
   12138:	str	r3, [sp]
   1213c:	mov	r2, #0
   12140:	mov	r3, #0
   12144:	mov	r0, r4
   12148:	bl	121ec <close@plt+0x1328>
   1214c:	b	12128 <close@plt+0x1264>
   12150:	push	{r4, r5, r6, lr}
   12154:	mov	r5, r1
   12158:	bl	10e94 <fopen64@plt>
   1215c:	subs	r4, r0, #0
   12160:	beq	12174 <close@plt+0x12b0>
   12164:	mov	r0, r4
   12168:	bl	10e28 <fileno@plt>
   1216c:	cmp	r0, #2
   12170:	bls	1217c <close@plt+0x12b8>
   12174:	mov	r0, r4
   12178:	pop	{r4, r5, r6, pc}
   1217c:	bl	140f0 <close@plt+0x322c>
   12180:	subs	r6, r0, #0
   12184:	blt	121cc <close@plt+0x1308>
   12188:	mov	r0, r4
   1218c:	bl	12044 <close@plt+0x1180>
   12190:	cmp	r0, #0
   12194:	bne	121ac <close@plt+0x12e8>
   12198:	mov	r1, r5
   1219c:	mov	r0, r6
   121a0:	bl	10c6c <fdopen@plt>
   121a4:	subs	r4, r0, #0
   121a8:	bne	12174 <close@plt+0x12b0>
   121ac:	bl	10df8 <__errno_location@plt>
   121b0:	mov	r4, r0
   121b4:	ldr	r5, [r0]
   121b8:	mov	r0, r6
   121bc:	bl	10ec4 <close@plt>
   121c0:	str	r5, [r4]
   121c4:	mov	r4, #0
   121c8:	b	12174 <close@plt+0x12b0>
   121cc:	bl	10df8 <__errno_location@plt>
   121d0:	mov	r5, r0
   121d4:	ldr	r6, [r0]
   121d8:	mov	r0, r4
   121dc:	bl	12044 <close@plt+0x1180>
   121e0:	str	r6, [r5]
   121e4:	mov	r4, #0
   121e8:	b	12174 <close@plt+0x12b0>
   121ec:	push	{r4, r5, r6, r7, lr}
   121f0:	sub	sp, sp, #12
   121f4:	mov	r4, r0
   121f8:	mov	r6, r2
   121fc:	mov	r7, r3
   12200:	ldr	r5, [sp, #32]
   12204:	ldr	r2, [r0, #8]
   12208:	ldr	r3, [r0, #4]
   1220c:	cmp	r2, r3
   12210:	beq	12230 <close@plt+0x136c>
   12214:	str	r5, [sp]
   12218:	mov	r2, r6
   1221c:	mov	r3, r7
   12220:	mov	r0, r4
   12224:	bl	10e4c <fseeko64@plt>
   12228:	add	sp, sp, #12
   1222c:	pop	{r4, r5, r6, r7, pc}
   12230:	ldr	r2, [r0, #20]
   12234:	ldr	r3, [r0, #16]
   12238:	cmp	r2, r3
   1223c:	bne	12214 <close@plt+0x1350>
   12240:	ldr	r3, [r0, #36]	; 0x24
   12244:	cmp	r3, #0
   12248:	bne	12214 <close@plt+0x1350>
   1224c:	bl	10e28 <fileno@plt>
   12250:	str	r5, [sp]
   12254:	mov	r2, r6
   12258:	mov	r3, r7
   1225c:	bl	10d50 <lseek64@plt>
   12260:	mvn	r2, #0
   12264:	mvn	r3, #0
   12268:	cmp	r1, r3
   1226c:	cmpeq	r0, r2
   12270:	beq	1228c <close@plt+0x13c8>
   12274:	ldr	r3, [r4]
   12278:	bic	r3, r3, #16
   1227c:	str	r3, [r4]
   12280:	strd	r0, [r4, #80]	; 0x50
   12284:	mov	r0, #0
   12288:	b	12228 <close@plt+0x1364>
   1228c:	mvn	r0, #0
   12290:	b	12228 <close@plt+0x1364>
   12294:	push	{lr}		; (str lr, [sp, #-4]!)
   12298:	sub	sp, sp, #268	; 0x10c
   1229c:	ldr	r2, [pc, #68]	; 122e8 <close@plt+0x1424>
   122a0:	add	r1, sp, #4
   122a4:	bl	14048 <close@plt+0x3184>
   122a8:	cmp	r0, #0
   122ac:	movne	r0, #0
   122b0:	bne	122e0 <close@plt+0x141c>
   122b4:	ldr	r1, [pc, #48]	; 122ec <close@plt+0x1428>
   122b8:	add	r0, sp, #4
   122bc:	bl	10c9c <strcmp@plt>
   122c0:	cmp	r0, #0
   122c4:	moveq	r0, #0
   122c8:	beq	122e0 <close@plt+0x141c>
   122cc:	ldr	r1, [pc, #28]	; 122f0 <close@plt+0x142c>
   122d0:	add	r0, sp, #4
   122d4:	bl	10c9c <strcmp@plt>
   122d8:	adds	r0, r0, #0
   122dc:	movne	r0, #1
   122e0:	add	sp, sp, #268	; 0x10c
   122e4:	pop	{pc}		; (ldr pc, [sp], #4)
   122e8:	andeq	r0, r0, r1, lsl #2
   122ec:	andeq	r6, r1, r0, lsl r3
   122f0:	andeq	r6, r1, r4, lsl r3
   122f4:	push	{r4, r5, r6, r8, r9, lr}
   122f8:	mov	r4, r0
   122fc:	mov	r5, r1
   12300:	add	r6, r2, #20
   12304:	mov	r3, #0
   12308:	strb	r3, [r2, #20]
   1230c:	mov	r8, #10
   12310:	mov	r9, #0
   12314:	mov	r2, r8
   12318:	mov	r3, r9
   1231c:	mov	r0, r4
   12320:	mov	r1, r5
   12324:	bl	15864 <close@plt+0x49a0>
   12328:	add	r2, r2, #48	; 0x30
   1232c:	strb	r2, [r6, #-1]!
   12330:	mov	r2, r8
   12334:	mov	r3, r9
   12338:	mov	r0, r4
   1233c:	mov	r1, r5
   12340:	bl	15864 <close@plt+0x49a0>
   12344:	mov	r4, r0
   12348:	mov	r5, r1
   1234c:	orrs	r3, r4, r5
   12350:	bne	12314 <close@plt+0x1450>
   12354:	mov	r0, r6
   12358:	pop	{r4, r5, r6, r8, r9, pc}
   1235c:	mov	r3, #0
   12360:	str	r3, [r0]
   12364:	str	r3, [r0, #4]
   12368:	str	r3, [r0, #8]
   1236c:	bx	lr
   12370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12374:	sub	sp, sp, #12
   12378:	ldr	r9, [r0, #8]
   1237c:	ldr	r8, [r0]
   12380:	add	r8, r9, r8
   12384:	ldr	r3, [r1]
   12388:	tst	r3, #16
   1238c:	bne	12468 <close@plt+0x15a4>
   12390:	mov	r7, r2
   12394:	mov	r6, r1
   12398:	mov	sl, r0
   1239c:	mov	r5, r9
   123a0:	mov	fp, #1
   123a4:	b	123d4 <close@plt+0x1510>
   123a8:	mov	r0, r6
   123ac:	bl	10e64 <__uflow@plt>
   123b0:	mov	r4, r0
   123b4:	b	123f0 <close@plt+0x152c>
   123b8:	cmp	r5, r8
   123bc:	movne	r3, r5
   123c0:	beq	12420 <close@plt+0x155c>
   123c4:	add	r5, r3, #1
   123c8:	strb	r4, [r3]
   123cc:	cmp	r4, r7
   123d0:	beq	12454 <close@plt+0x1590>
   123d4:	ldr	r3, [r6, #4]
   123d8:	ldr	r2, [r6, #8]
   123dc:	cmp	r3, r2
   123e0:	bcs	123a8 <close@plt+0x14e4>
   123e4:	add	r2, r3, #1
   123e8:	str	r2, [r6, #4]
   123ec:	ldrb	r4, [r3]
   123f0:	cmn	r4, #1
   123f4:	bne	123b8 <close@plt+0x14f4>
   123f8:	cmp	r9, r5
   123fc:	beq	12470 <close@plt+0x15ac>
   12400:	ldr	r3, [r6]
   12404:	tst	r3, #32
   12408:	bne	12478 <close@plt+0x15b4>
   1240c:	ldrb	r3, [r5, #-1]
   12410:	cmp	r3, r7
   12414:	beq	12454 <close@plt+0x1590>
   12418:	mov	r4, r7
   1241c:	b	123b8 <close@plt+0x14f4>
   12420:	ldr	r5, [sl]
   12424:	str	fp, [sp]
   12428:	mvn	r3, #0
   1242c:	mov	r2, fp
   12430:	mov	r1, sl
   12434:	mov	r0, r9
   12438:	bl	14834 <close@plt+0x3970>
   1243c:	mov	r9, r0
   12440:	add	r3, r0, r5
   12444:	str	r0, [sl, #8]
   12448:	ldr	r8, [sl]
   1244c:	add	r8, r0, r8
   12450:	b	123c4 <close@plt+0x1500>
   12454:	sub	r5, r5, r9
   12458:	str	r5, [sl, #4]
   1245c:	mov	r0, sl
   12460:	add	sp, sp, #12
   12464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12468:	mov	r0, #0
   1246c:	b	12460 <close@plt+0x159c>
   12470:	mov	r0, #0
   12474:	b	12460 <close@plt+0x159c>
   12478:	mov	r0, #0
   1247c:	b	12460 <close@plt+0x159c>
   12480:	push	{r4, lr}
   12484:	mov	r2, #10
   12488:	bl	12370 <close@plt+0x14ac>
   1248c:	pop	{r4, pc}
   12490:	push	{r4, lr}
   12494:	ldr	r0, [r0, #8]
   12498:	bl	15188 <close@plt+0x42c4>
   1249c:	pop	{r4, pc}
   124a0:	push	{r4, r5, r6, lr}
   124a4:	mov	r5, r1
   124a8:	mov	r1, r2
   124ac:	mov	r4, r3
   124b0:	cmp	r5, r3
   124b4:	movcc	r2, r5
   124b8:	movcs	r2, r3
   124bc:	bl	10cfc <memcmp@plt>
   124c0:	cmp	r0, #0
   124c4:	popne	{r4, r5, r6, pc}
   124c8:	cmp	r5, r4
   124cc:	movhi	r0, #1
   124d0:	movls	r0, #0
   124d4:	movcc	r3, #1
   124d8:	movcs	r3, #0
   124dc:	sub	r0, r0, r3
   124e0:	pop	{r4, r5, r6, pc}
   124e4:	push	{r4, r5, r6, lr}
   124e8:	subs	r4, r0, #0
   124ec:	beq	12564 <close@plt+0x16a0>
   124f0:	mov	r1, #47	; 0x2f
   124f4:	mov	r0, r4
   124f8:	bl	10e7c <strrchr@plt>
   124fc:	cmp	r0, #0
   12500:	addne	r5, r0, #1
   12504:	moveq	r5, r4
   12508:	sub	r3, r5, r4
   1250c:	cmp	r3, #6
   12510:	ble	12550 <close@plt+0x168c>
   12514:	mov	r2, #7
   12518:	ldr	r1, [pc, #96]	; 12580 <close@plt+0x16bc>
   1251c:	sub	r0, r5, #7
   12520:	bl	10eac <strncmp@plt>
   12524:	cmp	r0, #0
   12528:	bne	12550 <close@plt+0x168c>
   1252c:	mov	r2, #3
   12530:	ldr	r1, [pc, #76]	; 12584 <close@plt+0x16c0>
   12534:	mov	r0, r5
   12538:	bl	10eac <strncmp@plt>
   1253c:	cmp	r0, #0
   12540:	addeq	r4, r5, #3
   12544:	ldreq	r3, [pc, #60]	; 12588 <close@plt+0x16c4>
   12548:	streq	r4, [r3]
   1254c:	movne	r4, r5
   12550:	ldr	r3, [pc, #52]	; 1258c <close@plt+0x16c8>
   12554:	str	r4, [r3]
   12558:	ldr	r3, [pc, #48]	; 12590 <close@plt+0x16cc>
   1255c:	str	r4, [r3]
   12560:	pop	{r4, r5, r6, pc}
   12564:	ldr	r3, [pc, #40]	; 12594 <close@plt+0x16d0>
   12568:	ldr	r3, [r3]
   1256c:	mov	r2, #55	; 0x37
   12570:	mov	r1, #1
   12574:	ldr	r0, [pc, #28]	; 12598 <close@plt+0x16d4>
   12578:	bl	10d44 <fwrite@plt>
   1257c:	bl	10eb8 <abort@plt>
   12580:	andeq	r6, r1, r4, asr r3
   12584:	andeq	r6, r1, ip, asr r3
   12588:	andeq	r7, r2, r8, lsr r1
   1258c:	andeq	r7, r2, r0, lsl #3
   12590:	andeq	r7, r2, ip, lsr r1
   12594:	andeq	r7, r2, r8, asr #2
   12598:	andeq	r6, r1, ip, lsl r3
   1259c:	push	{r4, r5, r6, lr}
   125a0:	mov	r5, r0
   125a4:	mov	r4, r1
   125a8:	mov	r2, #48	; 0x30
   125ac:	mov	r1, #0
   125b0:	bl	10e10 <memset@plt>
   125b4:	cmp	r4, #10
   125b8:	beq	125c8 <close@plt+0x1704>
   125bc:	str	r4, [r5]
   125c0:	mov	r0, r5
   125c4:	pop	{r4, r5, r6, pc}
   125c8:	bl	10eb8 <abort@plt>
   125cc:	push	{r4, r5, r6, lr}
   125d0:	mov	r4, r0
   125d4:	mov	r5, r1
   125d8:	mov	r2, #5
   125dc:	mov	r1, r0
   125e0:	mov	r0, #0
   125e4:	bl	10d14 <dcgettext@plt>
   125e8:	cmp	r4, r0
   125ec:	popne	{r4, r5, r6, pc}
   125f0:	bl	151e0 <close@plt+0x431c>
   125f4:	ldrb	r3, [r0]
   125f8:	bic	r3, r3, #32
   125fc:	cmp	r3, #85	; 0x55
   12600:	beq	1267c <close@plt+0x17b8>
   12604:	cmp	r3, #71	; 0x47
   12608:	bne	126d8 <close@plt+0x1814>
   1260c:	ldrb	r3, [r0, #1]
   12610:	bic	r3, r3, #32
   12614:	cmp	r3, #66	; 0x42
   12618:	bne	126d8 <close@plt+0x1814>
   1261c:	ldrb	r3, [r0, #2]
   12620:	cmp	r3, #49	; 0x31
   12624:	bne	126d8 <close@plt+0x1814>
   12628:	ldrb	r3, [r0, #3]
   1262c:	cmp	r3, #56	; 0x38
   12630:	bne	126d8 <close@plt+0x1814>
   12634:	ldrb	r3, [r0, #4]
   12638:	cmp	r3, #48	; 0x30
   1263c:	bne	126d8 <close@plt+0x1814>
   12640:	ldrb	r3, [r0, #5]
   12644:	cmp	r3, #51	; 0x33
   12648:	bne	126d8 <close@plt+0x1814>
   1264c:	ldrb	r3, [r0, #6]
   12650:	cmp	r3, #48	; 0x30
   12654:	bne	126d8 <close@plt+0x1814>
   12658:	ldrb	r3, [r0, #7]
   1265c:	cmp	r3, #0
   12660:	bne	126d8 <close@plt+0x1814>
   12664:	ldrb	r2, [r4]
   12668:	ldr	r3, [pc, #124]	; 126ec <close@plt+0x1828>
   1266c:	ldr	r0, [pc, #124]	; 126f0 <close@plt+0x182c>
   12670:	cmp	r2, #96	; 0x60
   12674:	movne	r0, r3
   12678:	pop	{r4, r5, r6, pc}
   1267c:	ldrb	r3, [r0, #1]
   12680:	bic	r3, r3, #32
   12684:	cmp	r3, #84	; 0x54
   12688:	bne	126d8 <close@plt+0x1814>
   1268c:	ldrb	r3, [r0, #2]
   12690:	bic	r3, r3, #32
   12694:	cmp	r3, #70	; 0x46
   12698:	bne	126d8 <close@plt+0x1814>
   1269c:	ldrb	r3, [r0, #3]
   126a0:	cmp	r3, #45	; 0x2d
   126a4:	bne	126d8 <close@plt+0x1814>
   126a8:	ldrb	r3, [r0, #4]
   126ac:	cmp	r3, #56	; 0x38
   126b0:	bne	126d8 <close@plt+0x1814>
   126b4:	ldrb	r3, [r0, #5]
   126b8:	cmp	r3, #0
   126bc:	bne	126d8 <close@plt+0x1814>
   126c0:	ldrb	r2, [r4]
   126c4:	ldr	r3, [pc, #40]	; 126f4 <close@plt+0x1830>
   126c8:	ldr	r0, [pc, #40]	; 126f8 <close@plt+0x1834>
   126cc:	cmp	r2, #96	; 0x60
   126d0:	movne	r0, r3
   126d4:	pop	{r4, r5, r6, pc}
   126d8:	ldr	r3, [pc, #28]	; 126fc <close@plt+0x1838>
   126dc:	ldr	r0, [pc, #28]	; 12700 <close@plt+0x183c>
   126e0:	cmp	r5, #9
   126e4:	movne	r0, r3
   126e8:	pop	{r4, r5, r6, pc}
   126ec:			; <UNDEFINED> instruction: 0x000163b8
   126f0:	andeq	r6, r1, r4, asr #7
   126f4:			; <UNDEFINED> instruction: 0x000163b4
   126f8:	andeq	r6, r1, r8, asr #7
   126fc:			; <UNDEFINED> instruction: 0x000163bc
   12700:	andeq	r6, r1, r0, asr #7
   12704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12708:	sub	sp, sp, #116	; 0x74
   1270c:	str	r0, [sp, #36]	; 0x24
   12710:	mov	sl, r1
   12714:	str	r2, [sp, #52]	; 0x34
   12718:	str	r3, [sp, #28]
   1271c:	ldr	r8, [sp, #152]	; 0x98
   12720:	bl	10d5c <__ctype_get_mb_cur_max@plt>
   12724:	str	r0, [sp, #84]	; 0x54
   12728:	ldr	r3, [sp, #156]	; 0x9c
   1272c:	lsr	r3, r3, #1
   12730:	and	r3, r3, #1
   12734:	str	r3, [sp, #32]
   12738:	mov	r3, #1
   1273c:	str	r3, [sp, #40]	; 0x28
   12740:	mov	r3, #0
   12744:	str	r3, [sp, #80]	; 0x50
   12748:	str	r3, [sp, #44]	; 0x2c
   1274c:	str	r3, [sp, #48]	; 0x30
   12750:	str	r3, [sp, #60]	; 0x3c
   12754:	str	r3, [sp, #72]	; 0x48
   12758:	str	r3, [sp, #76]	; 0x4c
   1275c:	mov	r7, sl
   12760:	mov	sl, r8
   12764:	cmp	sl, #10
   12768:	ldrls	pc, [pc, sl, lsl #2]
   1276c:	b	12924 <close@plt+0x1a60>
   12770:	ldrdeq	r2, [r1], -r4
   12774:	andeq	r2, r1, r4, lsr #15
   12778:	andeq	r2, r1, r0, lsl #18
   1277c:	muleq	r1, ip, r7
   12780:			; <UNDEFINED> instruction: 0x000128b4
   12784:	andeq	r2, r1, r4, ror #15
   12788:	andeq	r3, r1, r0, asr r8
   1278c:	andeq	r2, r1, r8, lsr #18
   12790:	andeq	r2, r1, r0, lsr #16
   12794:	andeq	r2, r1, r0, lsr #16
   12798:	andeq	r2, r1, r0, lsr #16
   1279c:	mov	r3, #1
   127a0:	str	r3, [sp, #48]	; 0x30
   127a4:	mov	r3, #1
   127a8:	str	r3, [sp, #32]
   127ac:	str	r3, [sp, #60]	; 0x3c
   127b0:	ldr	r3, [pc, #4068]	; 1379c <close@plt+0x28d8>
   127b4:	str	r3, [sp, #72]	; 0x48
   127b8:	mov	fp, #0
   127bc:	mov	sl, #2
   127c0:	mov	r6, #0
   127c4:	ldr	r3, [sp, #48]	; 0x30
   127c8:	eor	r3, r3, #1
   127cc:	str	r3, [sp, #68]	; 0x44
   127d0:	b	130b8 <close@plt+0x21f4>
   127d4:	mov	r3, #0
   127d8:	str	r3, [sp, #32]
   127dc:	mov	fp, r3
   127e0:	b	127c0 <close@plt+0x18fc>
   127e4:	ldr	r3, [sp, #32]
   127e8:	cmp	r3, #0
   127ec:	bne	12940 <close@plt+0x1a7c>
   127f0:	cmp	r7, #0
   127f4:	beq	12960 <close@plt+0x1a9c>
   127f8:	ldr	r3, [sp, #36]	; 0x24
   127fc:	mov	r2, #34	; 0x22
   12800:	strb	r2, [r3]
   12804:	mov	r3, #1
   12808:	str	r3, [sp, #48]	; 0x30
   1280c:	str	r3, [sp, #60]	; 0x3c
   12810:	ldr	r3, [pc, #3980]	; 137a4 <close@plt+0x28e0>
   12814:	str	r3, [sp, #72]	; 0x48
   12818:	mov	fp, #1
   1281c:	b	127c0 <close@plt+0x18fc>
   12820:	cmp	sl, #10
   12824:	beq	12848 <close@plt+0x1984>
   12828:	mov	r1, sl
   1282c:	ldr	r0, [pc, #3948]	; 137a0 <close@plt+0x28dc>
   12830:	bl	125cc <close@plt+0x1708>
   12834:	str	r0, [sp, #164]	; 0xa4
   12838:	mov	r1, sl
   1283c:	ldr	r0, [pc, #3928]	; 1379c <close@plt+0x28d8>
   12840:	bl	125cc <close@plt+0x1708>
   12844:	str	r0, [sp, #168]	; 0xa8
   12848:	ldr	r3, [sp, #32]
   1284c:	cmp	r3, #0
   12850:	movne	fp, #0
   12854:	bne	1288c <close@plt+0x19c8>
   12858:	ldr	r3, [sp, #164]	; 0xa4
   1285c:	ldrb	r3, [r3]
   12860:	cmp	r3, #0
   12864:	beq	128ac <close@plt+0x19e8>
   12868:	ldr	r2, [sp, #164]	; 0xa4
   1286c:	mov	fp, #0
   12870:	ldr	r1, [sp, #36]	; 0x24
   12874:	cmp	r7, fp
   12878:	strbhi	r3, [r1, fp]
   1287c:	add	fp, fp, #1
   12880:	ldrb	r3, [r2, #1]!
   12884:	cmp	r3, #0
   12888:	bne	12874 <close@plt+0x19b0>
   1288c:	ldr	r0, [sp, #168]	; 0xa8
   12890:	bl	10dec <strlen@plt>
   12894:	str	r0, [sp, #60]	; 0x3c
   12898:	ldr	r3, [sp, #168]	; 0xa8
   1289c:	str	r3, [sp, #72]	; 0x48
   128a0:	mov	r3, #1
   128a4:	str	r3, [sp, #48]	; 0x30
   128a8:	b	127c0 <close@plt+0x18fc>
   128ac:	mov	fp, #0
   128b0:	b	1288c <close@plt+0x19c8>
   128b4:	ldr	r3, [sp, #32]
   128b8:	cmp	r3, #0
   128bc:	bne	1297c <close@plt+0x1ab8>
   128c0:	mov	r3, #1
   128c4:	str	r3, [sp, #48]	; 0x30
   128c8:	cmp	r7, #0
   128cc:	beq	12998 <close@plt+0x1ad4>
   128d0:	ldr	r3, [sp, #36]	; 0x24
   128d4:	mov	r2, #39	; 0x27
   128d8:	strb	r2, [r3]
   128dc:	mov	r3, #0
   128e0:	str	r3, [sp, #32]
   128e4:	mov	r3, #1
   128e8:	str	r3, [sp, #60]	; 0x3c
   128ec:	ldr	r3, [pc, #3752]	; 1379c <close@plt+0x28d8>
   128f0:	str	r3, [sp, #72]	; 0x48
   128f4:	mov	fp, #1
   128f8:	mov	sl, #2
   128fc:	b	127c0 <close@plt+0x18fc>
   12900:	ldr	r3, [sp, #32]
   12904:	cmp	r3, #0
   12908:	beq	128c8 <close@plt+0x1a04>
   1290c:	mov	r3, #1
   12910:	str	r3, [sp, #60]	; 0x3c
   12914:	ldr	r3, [pc, #3712]	; 1379c <close@plt+0x28d8>
   12918:	str	r3, [sp, #72]	; 0x48
   1291c:	mov	fp, #0
   12920:	b	127c0 <close@plt+0x18fc>
   12924:	bl	10eb8 <abort@plt>
   12928:	mov	r3, #0
   1292c:	str	r3, [sp, #32]
   12930:	mov	r3, #1
   12934:	str	r3, [sp, #48]	; 0x30
   12938:	mov	fp, #0
   1293c:	b	127c0 <close@plt+0x18fc>
   12940:	ldr	r3, [sp, #32]
   12944:	str	r3, [sp, #48]	; 0x30
   12948:	mov	r3, #1
   1294c:	str	r3, [sp, #60]	; 0x3c
   12950:	ldr	r3, [pc, #3660]	; 137a4 <close@plt+0x28e0>
   12954:	str	r3, [sp, #72]	; 0x48
   12958:	mov	fp, #0
   1295c:	b	127c0 <close@plt+0x18fc>
   12960:	mov	r3, #1
   12964:	str	r3, [sp, #48]	; 0x30
   12968:	str	r3, [sp, #60]	; 0x3c
   1296c:	ldr	r3, [pc, #3632]	; 137a4 <close@plt+0x28e0>
   12970:	str	r3, [sp, #72]	; 0x48
   12974:	mov	fp, #1
   12978:	b	127c0 <close@plt+0x18fc>
   1297c:	mov	r3, #1
   12980:	str	r3, [sp, #60]	; 0x3c
   12984:	ldr	r3, [pc, #3600]	; 1379c <close@plt+0x28d8>
   12988:	str	r3, [sp, #72]	; 0x48
   1298c:	mov	fp, #0
   12990:	mov	sl, #2
   12994:	b	127c0 <close@plt+0x18fc>
   12998:	mov	r3, #0
   1299c:	str	r3, [sp, #32]
   129a0:	mov	r3, #1
   129a4:	str	r3, [sp, #60]	; 0x3c
   129a8:	ldr	r3, [pc, #3564]	; 1379c <close@plt+0x28d8>
   129ac:	str	r3, [sp, #72]	; 0x48
   129b0:	mov	fp, #1
   129b4:	mov	sl, #2
   129b8:	b	127c0 <close@plt+0x18fc>
   129bc:	mov	r3, #0
   129c0:	str	r3, [sp, #56]	; 0x38
   129c4:	ldr	r3, [sp, #52]	; 0x34
   129c8:	add	r2, r3, r6
   129cc:	str	r2, [sp, #64]	; 0x40
   129d0:	ldrb	r4, [r3, r6]
   129d4:	cmp	r4, #126	; 0x7e
   129d8:	ldrls	pc, [pc, r4, lsl #2]
   129dc:	b	13218 <close@plt+0x2354>
   129e0:	strdeq	r2, [r1], -r8
   129e4:	andeq	r3, r1, r8, lsl r2
   129e8:	andeq	r3, r1, r8, lsl r2
   129ec:	andeq	r3, r1, r8, lsl r2
   129f0:	andeq	r3, r1, r8, lsl r2
   129f4:	andeq	r3, r1, r8, lsl r2
   129f8:	andeq	r3, r1, r8, lsl r2
   129fc:	andeq	r2, r1, r4, asr pc
   12a00:	strdeq	r2, [r1], -r0
   12a04:	andeq	r2, r1, ip, lsl #30
   12a08:	andeq	r2, r1, r4, lsl #30
   12a0c:	andeq	r2, r1, r4, ror lr
   12a10:	andeq	r2, r1, ip, ror #28
   12a14:	andeq	r2, r1, r8, ror #23
   12a18:	andeq	r3, r1, r8, lsl r2
   12a1c:	andeq	r3, r1, r8, lsl r2
   12a20:	andeq	r3, r1, r8, lsl r2
   12a24:	andeq	r3, r1, r8, lsl r2
   12a28:	andeq	r3, r1, r8, lsl r2
   12a2c:	andeq	r3, r1, r8, lsl r2
   12a30:	andeq	r3, r1, r8, lsl r2
   12a34:	andeq	r3, r1, r8, lsl r2
   12a38:	andeq	r3, r1, r8, lsl r2
   12a3c:	andeq	r3, r1, r8, lsl r2
   12a40:	andeq	r3, r1, r8, lsl r2
   12a44:	andeq	r3, r1, r8, lsl r2
   12a48:	andeq	r3, r1, r8, lsl r2
   12a4c:	andeq	r3, r1, r8, lsl r2
   12a50:	andeq	r3, r1, r8, lsl r2
   12a54:	andeq	r3, r1, r8, lsl r2
   12a58:	andeq	r3, r1, r8, lsl r2
   12a5c:	andeq	r3, r1, r8, lsl r2
   12a60:	andeq	r2, r1, r8, lsr #31
   12a64:	andeq	r2, r1, r4, lsr #31
   12a68:	andeq	r2, r1, r4, lsr #31
   12a6c:	andeq	r2, r1, ip, ror pc
   12a70:	andeq	r2, r1, r4, lsr #31
   12a74:	andeq	r3, r1, ip, ror #11
   12a78:	andeq	r2, r1, r4, lsr #31
   12a7c:	andeq	r3, r1, ip, ror r1
   12a80:	andeq	r2, r1, r4, lsr #31
   12a84:	andeq	r2, r1, r4, lsr #31
   12a88:	andeq	r2, r1, r4, lsr #31
   12a8c:	andeq	r3, r1, ip, ror #11
   12a90:	andeq	r3, r1, ip, ror #11
   12a94:	andeq	r3, r1, ip, ror #11
   12a98:	andeq	r3, r1, ip, ror #11
   12a9c:	andeq	r3, r1, ip, ror #11
   12aa0:	andeq	r3, r1, ip, ror #11
   12aa4:	andeq	r3, r1, ip, ror #11
   12aa8:	andeq	r3, r1, ip, ror #11
   12aac:	andeq	r3, r1, ip, ror #11
   12ab0:	andeq	r3, r1, ip, ror #11
   12ab4:	andeq	r3, r1, ip, ror #11
   12ab8:	andeq	r3, r1, ip, ror #11
   12abc:	andeq	r3, r1, ip, ror #11
   12ac0:	andeq	r3, r1, ip, ror #11
   12ac4:	andeq	r3, r1, ip, ror #11
   12ac8:	andeq	r3, r1, ip, ror #11
   12acc:	andeq	r2, r1, r4, lsr #31
   12ad0:	andeq	r2, r1, r4, lsr #31
   12ad4:	andeq	r2, r1, r4, lsr #31
   12ad8:	andeq	r2, r1, r4, lsr #31
   12adc:	andeq	r2, r1, r0, lsl #26
   12ae0:	andeq	r3, r1, r8, lsl r2
   12ae4:	andeq	r3, r1, ip, ror #11
   12ae8:	andeq	r3, r1, ip, ror #11
   12aec:	andeq	r3, r1, ip, ror #11
   12af0:	andeq	r3, r1, ip, ror #11
   12af4:	andeq	r3, r1, ip, ror #11
   12af8:	andeq	r3, r1, ip, ror #11
   12afc:	andeq	r3, r1, ip, ror #11
   12b00:	andeq	r3, r1, ip, ror #11
   12b04:	andeq	r3, r1, ip, ror #11
   12b08:	andeq	r3, r1, ip, ror #11
   12b0c:	andeq	r3, r1, ip, ror #11
   12b10:	andeq	r3, r1, ip, ror #11
   12b14:	andeq	r3, r1, ip, ror #11
   12b18:	andeq	r3, r1, ip, ror #11
   12b1c:	andeq	r3, r1, ip, ror #11
   12b20:	andeq	r3, r1, ip, ror #11
   12b24:	andeq	r3, r1, ip, ror #11
   12b28:	andeq	r3, r1, ip, ror #11
   12b2c:	andeq	r3, r1, ip, ror #11
   12b30:	andeq	r3, r1, ip, ror #11
   12b34:	andeq	r3, r1, ip, ror #11
   12b38:	andeq	r3, r1, ip, ror #11
   12b3c:	andeq	r3, r1, ip, ror #11
   12b40:	andeq	r3, r1, ip, ror #11
   12b44:	andeq	r3, r1, ip, ror #11
   12b48:	andeq	r3, r1, ip, ror #11
   12b4c:	andeq	r2, r1, r4, lsr #31
   12b50:	andeq	r2, r1, ip, ror lr
   12b54:	andeq	r3, r1, ip, ror #11
   12b58:	andeq	r2, r1, r4, lsr #31
   12b5c:	andeq	r3, r1, ip, ror #11
   12b60:	andeq	r2, r1, r4, lsr #31
   12b64:	andeq	r3, r1, ip, ror #11
   12b68:	andeq	r3, r1, ip, ror #11
   12b6c:	andeq	r3, r1, ip, ror #11
   12b70:	andeq	r3, r1, ip, ror #11
   12b74:	andeq	r3, r1, ip, ror #11
   12b78:	andeq	r3, r1, ip, ror #11
   12b7c:	andeq	r3, r1, ip, ror #11
   12b80:	andeq	r3, r1, ip, ror #11
   12b84:	andeq	r3, r1, ip, ror #11
   12b88:	andeq	r3, r1, ip, ror #11
   12b8c:	andeq	r3, r1, ip, ror #11
   12b90:	andeq	r3, r1, ip, ror #11
   12b94:	andeq	r3, r1, ip, ror #11
   12b98:	andeq	r3, r1, ip, ror #11
   12b9c:	andeq	r3, r1, ip, ror #11
   12ba0:	andeq	r3, r1, ip, ror #11
   12ba4:	andeq	r3, r1, ip, ror #11
   12ba8:	andeq	r3, r1, ip, ror #11
   12bac:	andeq	r3, r1, ip, ror #11
   12bb0:	andeq	r3, r1, ip, ror #11
   12bb4:	andeq	r3, r1, ip, ror #11
   12bb8:	andeq	r3, r1, ip, ror #11
   12bbc:	andeq	r3, r1, ip, ror #11
   12bc0:	andeq	r3, r1, ip, ror #11
   12bc4:	andeq	r3, r1, ip, ror #11
   12bc8:	andeq	r3, r1, ip, ror #11
   12bcc:	andeq	r2, r1, ip, asr pc
   12bd0:	andeq	r2, r1, r4, lsr #31
   12bd4:	andeq	r2, r1, ip, asr pc
   12bd8:	andeq	r2, r1, ip, ror pc
   12bdc:	mov	r3, #0
   12be0:	str	r3, [sp, #56]	; 0x38
   12be4:	b	129c4 <close@plt+0x1b00>
   12be8:	mov	r3, #114	; 0x72
   12bec:	b	12f10 <close@plt+0x204c>
   12bf0:	mov	r3, #98	; 0x62
   12bf4:	b	12f28 <close@plt+0x2064>
   12bf8:	ldr	r3, [sp, #48]	; 0x30
   12bfc:	cmp	r3, #0
   12c00:	beq	12ce8 <close@plt+0x1e24>
   12c04:	ldr	r3, [sp, #32]
   12c08:	cmp	r3, #0
   12c0c:	bne	13770 <close@plt+0x28ac>
   12c10:	ldr	r3, [sp, #44]	; 0x2c
   12c14:	eor	r3, r3, #1
   12c18:	cmp	sl, #2
   12c1c:	movne	r3, #0
   12c20:	andeq	r3, r3, #1
   12c24:	cmp	r3, #0
   12c28:	moveq	r2, fp
   12c2c:	beq	12c70 <close@plt+0x1dac>
   12c30:	cmp	r7, fp
   12c34:	ldrhi	r2, [sp, #36]	; 0x24
   12c38:	movhi	r1, #39	; 0x27
   12c3c:	strbhi	r1, [r2, fp]
   12c40:	add	r2, fp, #1
   12c44:	cmp	r7, r2
   12c48:	ldrhi	r1, [sp, #36]	; 0x24
   12c4c:	movhi	r0, #36	; 0x24
   12c50:	strbhi	r0, [r1, r2]
   12c54:	add	r2, fp, #2
   12c58:	cmp	r7, r2
   12c5c:	ldrhi	r1, [sp, #36]	; 0x24
   12c60:	movhi	r0, #39	; 0x27
   12c64:	strbhi	r0, [r1, r2]
   12c68:	add	r2, fp, #3
   12c6c:	str	r3, [sp, #44]	; 0x2c
   12c70:	cmp	r7, r2
   12c74:	ldrhi	r3, [sp, #36]	; 0x24
   12c78:	movhi	r1, #92	; 0x5c
   12c7c:	strbhi	r1, [r3, r2]
   12c80:	add	fp, r2, #1
   12c84:	cmp	r5, #0
   12c88:	beq	135f4 <close@plt+0x2730>
   12c8c:	add	r3, r6, #1
   12c90:	ldr	r1, [sp, #28]
   12c94:	cmp	r1, r3
   12c98:	bls	13604 <close@plt+0x2740>
   12c9c:	ldr	r1, [sp, #52]	; 0x34
   12ca0:	ldrb	r3, [r1, r3]
   12ca4:	sub	r3, r3, #48	; 0x30
   12ca8:	uxtb	r3, r3
   12cac:	cmp	r3, #9
   12cb0:	bhi	13610 <close@plt+0x274c>
   12cb4:	cmp	r7, fp
   12cb8:	movhi	r3, #48	; 0x30
   12cbc:	ldrhi	r1, [sp, #36]	; 0x24
   12cc0:	strbhi	r3, [r1, fp]
   12cc4:	add	r3, r2, #2
   12cc8:	cmp	r7, r3
   12ccc:	movhi	r1, #48	; 0x30
   12cd0:	ldrhi	r0, [sp, #36]	; 0x24
   12cd4:	strbhi	r1, [r0, r3]
   12cd8:	add	fp, r2, #3
   12cdc:	ldr	r8, [sp, #32]
   12ce0:	mov	r4, #48	; 0x30
   12ce4:	b	12fc0 <close@plt+0x20fc>
   12ce8:	ldr	r3, [sp, #156]	; 0x9c
   12cec:	tst	r3, #1
   12cf0:	bne	130b4 <close@plt+0x21f0>
   12cf4:	ldr	r5, [sp, #48]	; 0x30
   12cf8:	mov	r8, r5
   12cfc:	b	12fc0 <close@plt+0x20fc>
   12d00:	cmp	sl, #2
   12d04:	beq	12d1c <close@plt+0x1e58>
   12d08:	cmp	sl, #5
   12d0c:	beq	12d34 <close@plt+0x1e70>
   12d10:	mov	r8, #0
   12d14:	mov	r5, r8
   12d18:	b	12fc0 <close@plt+0x20fc>
   12d1c:	ldr	r3, [sp, #32]
   12d20:	cmp	r3, #0
   12d24:	bne	13784 <close@plt+0x28c0>
   12d28:	mov	r8, r3
   12d2c:	mov	r5, r3
   12d30:	b	12fc0 <close@plt+0x20fc>
   12d34:	ldr	r3, [sp, #156]	; 0x9c
   12d38:	tst	r3, #4
   12d3c:	beq	1361c <close@plt+0x2758>
   12d40:	add	r3, r6, #2
   12d44:	ldr	r2, [sp, #28]
   12d48:	cmp	r2, r3
   12d4c:	bls	13628 <close@plt+0x2764>
   12d50:	ldr	r2, [sp, #52]	; 0x34
   12d54:	add	r2, r2, r6
   12d58:	ldrb	r2, [r2, #1]
   12d5c:	cmp	r2, #63	; 0x3f
   12d60:	movne	r8, #0
   12d64:	movne	r5, r8
   12d68:	bne	12fc0 <close@plt+0x20fc>
   12d6c:	ldr	r2, [sp, #52]	; 0x34
   12d70:	ldrb	r2, [r2, r3]
   12d74:	sub	r1, r2, #33	; 0x21
   12d78:	cmp	r1, #29
   12d7c:	ldrls	pc, [pc, r1, lsl #2]
   12d80:	b	13634 <close@plt+0x2770>
   12d84:	strdeq	r2, [r1], -ip
   12d88:	andeq	r3, r1, r4, lsr r6
   12d8c:	andeq	r3, r1, r4, lsr r6
   12d90:	andeq	r3, r1, r4, lsr r6
   12d94:	andeq	r3, r1, r4, lsr r6
   12d98:	andeq	r3, r1, r4, lsr r6
   12d9c:	strdeq	r2, [r1], -ip
   12da0:	strdeq	r2, [r1], -ip
   12da4:	strdeq	r2, [r1], -ip
   12da8:	andeq	r3, r1, r4, lsr r6
   12dac:	andeq	r3, r1, r4, lsr r6
   12db0:	andeq	r3, r1, r4, lsr r6
   12db4:	strdeq	r2, [r1], -ip
   12db8:	andeq	r3, r1, r4, lsr r6
   12dbc:	strdeq	r2, [r1], -ip
   12dc0:	andeq	r3, r1, r4, lsr r6
   12dc4:	andeq	r3, r1, r4, lsr r6
   12dc8:	andeq	r3, r1, r4, lsr r6
   12dcc:	andeq	r3, r1, r4, lsr r6
   12dd0:	andeq	r3, r1, r4, lsr r6
   12dd4:	andeq	r3, r1, r4, lsr r6
   12dd8:	andeq	r3, r1, r4, lsr r6
   12ddc:	andeq	r3, r1, r4, lsr r6
   12de0:	andeq	r3, r1, r4, lsr r6
   12de4:	andeq	r3, r1, r4, lsr r6
   12de8:	andeq	r3, r1, r4, lsr r6
   12dec:	andeq	r3, r1, r4, lsr r6
   12df0:	strdeq	r2, [r1], -ip
   12df4:	strdeq	r2, [r1], -ip
   12df8:	strdeq	r2, [r1], -ip
   12dfc:	ldr	r1, [sp, #32]
   12e00:	cmp	r1, #0
   12e04:	bne	13844 <close@plt+0x2980>
   12e08:	cmp	r7, fp
   12e0c:	movhi	r1, #63	; 0x3f
   12e10:	ldrhi	r0, [sp, #36]	; 0x24
   12e14:	strbhi	r1, [r0, fp]
   12e18:	add	r1, fp, #1
   12e1c:	cmp	r7, r1
   12e20:	ldrhi	r0, [sp, #36]	; 0x24
   12e24:	movhi	ip, #34	; 0x22
   12e28:	strbhi	ip, [r0, r1]
   12e2c:	add	r1, fp, #2
   12e30:	cmp	r7, r1
   12e34:	ldrhi	r0, [sp, #36]	; 0x24
   12e38:	movhi	ip, #34	; 0x22
   12e3c:	strbhi	ip, [r0, r1]
   12e40:	add	r1, fp, #3
   12e44:	cmp	r7, r1
   12e48:	movhi	r0, #63	; 0x3f
   12e4c:	ldrhi	ip, [sp, #36]	; 0x24
   12e50:	strbhi	r0, [ip, r1]
   12e54:	add	fp, fp, #4
   12e58:	ldr	r5, [sp, #32]
   12e5c:	mov	r8, r5
   12e60:	mov	r4, r2
   12e64:	mov	r6, r3
   12e68:	b	12fc0 <close@plt+0x20fc>
   12e6c:	mov	r3, #102	; 0x66
   12e70:	b	12f28 <close@plt+0x2064>
   12e74:	mov	r3, #118	; 0x76
   12e78:	b	12f28 <close@plt+0x2064>
   12e7c:	cmp	sl, #2
   12e80:	beq	12eec <close@plt+0x2028>
   12e84:	ldr	r3, [sp, #48]	; 0x30
   12e88:	ldr	r2, [sp, #32]
   12e8c:	and	r3, r3, r2
   12e90:	tst	r9, r3
   12e94:	moveq	r3, r4
   12e98:	beq	12f28 <close@plt+0x2064>
   12e9c:	mov	r8, #0
   12ea0:	mov	r5, r8
   12ea4:	eor	r5, r5, #1
   12ea8:	ldr	r3, [sp, #44]	; 0x2c
   12eac:	and	r5, r5, r3
   12eb0:	tst	r5, #255	; 0xff
   12eb4:	beq	13094 <close@plt+0x21d0>
   12eb8:	cmp	r7, fp
   12ebc:	ldrhi	r3, [sp, #36]	; 0x24
   12ec0:	movhi	r2, #39	; 0x27
   12ec4:	strbhi	r2, [r3, fp]
   12ec8:	add	r3, fp, #1
   12ecc:	cmp	r7, r3
   12ed0:	ldrhi	r2, [sp, #36]	; 0x24
   12ed4:	movhi	r1, #39	; 0x27
   12ed8:	strbhi	r1, [r2, r3]
   12edc:	add	fp, fp, #2
   12ee0:	mov	r3, #0
   12ee4:	str	r3, [sp, #44]	; 0x2c
   12ee8:	b	13094 <close@plt+0x21d0>
   12eec:	ldr	r3, [sp, #32]
   12ef0:	cmp	r3, #0
   12ef4:	bne	13790 <close@plt+0x28cc>
   12ef8:	mov	r8, r3
   12efc:	mov	r5, r3
   12f00:	b	12ea4 <close@plt+0x1fe0>
   12f04:	mov	r3, #110	; 0x6e
   12f08:	b	12f10 <close@plt+0x204c>
   12f0c:	mov	r3, #116	; 0x74
   12f10:	ldr	r2, [sp, #32]
   12f14:	cmp	sl, #2
   12f18:	movne	r2, #0
   12f1c:	andeq	r2, r2, #1
   12f20:	cmp	r2, #0
   12f24:	bne	12f48 <close@plt+0x2084>
   12f28:	ldr	r2, [sp, #48]	; 0x30
   12f2c:	cmp	r2, #0
   12f30:	moveq	r8, r2
   12f34:	moveq	r5, r2
   12f38:	beq	12fc0 <close@plt+0x20fc>
   12f3c:	mov	r4, r3
   12f40:	mov	r8, #0
   12f44:	b	13018 <close@plt+0x2154>
   12f48:	mov	r8, sl
   12f4c:	mov	sl, r7
   12f50:	b	137bc <close@plt+0x28f8>
   12f54:	mov	r3, #97	; 0x61
   12f58:	b	12f28 <close@plt+0x2064>
   12f5c:	ldr	r3, [sp, #28]
   12f60:	cmn	r3, #1
   12f64:	beq	12f90 <close@plt+0x20cc>
   12f68:	ldr	r3, [sp, #28]
   12f6c:	subs	r3, r3, #1
   12f70:	movne	r3, #1
   12f74:	cmp	r3, #0
   12f78:	bne	13640 <close@plt+0x277c>
   12f7c:	cmp	r6, #0
   12f80:	beq	12fa8 <close@plt+0x20e4>
   12f84:	mov	r8, #0
   12f88:	mov	r5, r8
   12f8c:	b	12fc0 <close@plt+0x20fc>
   12f90:	ldr	r3, [sp, #52]	; 0x34
   12f94:	ldrb	r3, [r3, #1]
   12f98:	adds	r3, r3, #0
   12f9c:	movne	r3, #1
   12fa0:	b	12f74 <close@plt+0x20b0>
   12fa4:	mov	r8, #0
   12fa8:	ldr	r5, [sp, #32]
   12fac:	cmp	sl, #2
   12fb0:	movne	r5, #0
   12fb4:	andeq	r5, r5, #1
   12fb8:	cmp	r5, #0
   12fbc:	bne	13170 <close@plt+0x22ac>
   12fc0:	ldr	r3, [sp, #68]	; 0x44
   12fc4:	cmp	sl, #2
   12fc8:	orreq	r3, r3, #1
   12fcc:	eor	r3, r3, #1
   12fd0:	ldr	r2, [sp, #32]
   12fd4:	orr	r3, r2, r3
   12fd8:	tst	r3, #255	; 0xff
   12fdc:	beq	1300c <close@plt+0x2148>
   12fe0:	ldr	r3, [sp, #160]	; 0xa0
   12fe4:	cmp	r3, #0
   12fe8:	beq	1300c <close@plt+0x2148>
   12fec:	lsr	r2, r4, #5
   12ff0:	uxtb	r2, r2
   12ff4:	and	r3, r4, #31
   12ff8:	ldr	r1, [sp, #160]	; 0xa0
   12ffc:	ldr	r2, [r1, r2, lsl #2]
   13000:	lsr	r3, r2, r3
   13004:	tst	r3, #1
   13008:	bne	13018 <close@plt+0x2154>
   1300c:	ldr	r3, [sp, #56]	; 0x38
   13010:	cmp	r3, #0
   13014:	beq	12ea4 <close@plt+0x1fe0>
   13018:	ldr	r3, [sp, #32]
   1301c:	cmp	r3, #0
   13020:	bne	1382c <close@plt+0x2968>
   13024:	ldr	r3, [sp, #44]	; 0x2c
   13028:	eor	r3, r3, #1
   1302c:	cmp	sl, #2
   13030:	movne	r3, #0
   13034:	andeq	r3, r3, #1
   13038:	cmp	r3, #0
   1303c:	beq	13080 <close@plt+0x21bc>
   13040:	cmp	r7, fp
   13044:	ldrhi	r2, [sp, #36]	; 0x24
   13048:	movhi	r1, #39	; 0x27
   1304c:	strbhi	r1, [r2, fp]
   13050:	add	r2, fp, #1
   13054:	cmp	r7, r2
   13058:	ldrhi	r1, [sp, #36]	; 0x24
   1305c:	movhi	r0, #36	; 0x24
   13060:	strbhi	r0, [r1, r2]
   13064:	add	r2, fp, #2
   13068:	cmp	r7, r2
   1306c:	ldrhi	r1, [sp, #36]	; 0x24
   13070:	movhi	r0, #39	; 0x27
   13074:	strbhi	r0, [r1, r2]
   13078:	add	fp, fp, #3
   1307c:	str	r3, [sp, #44]	; 0x2c
   13080:	cmp	r7, fp
   13084:	ldrhi	r3, [sp, #36]	; 0x24
   13088:	movhi	r2, #92	; 0x5c
   1308c:	strbhi	r2, [r3, fp]
   13090:	add	fp, fp, #1
   13094:	cmp	fp, r7
   13098:	ldrcc	r3, [sp, #36]	; 0x24
   1309c:	strbcc	r4, [r3, fp]
   130a0:	add	fp, fp, #1
   130a4:	ldr	r3, [sp, #40]	; 0x28
   130a8:	cmp	r8, #0
   130ac:	moveq	r3, #0
   130b0:	str	r3, [sp, #40]	; 0x28
   130b4:	add	r6, r6, #1
   130b8:	ldr	r3, [sp, #28]
   130bc:	cmn	r3, #1
   130c0:	beq	1364c <close@plt+0x2788>
   130c4:	ldr	r3, [sp, #28]
   130c8:	subs	r8, r3, r6
   130cc:	movne	r8, #1
   130d0:	cmp	r8, #0
   130d4:	beq	13660 <close@plt+0x279c>
   130d8:	ldr	r5, [sp, #48]	; 0x30
   130dc:	cmp	sl, #2
   130e0:	moveq	r5, #0
   130e4:	andne	r5, r5, #1
   130e8:	ldr	r3, [sp, #60]	; 0x3c
   130ec:	adds	r9, r3, #0
   130f0:	movne	r9, #1
   130f4:	ands	r2, r5, r9
   130f8:	str	r2, [sp, #56]	; 0x38
   130fc:	beq	129c4 <close@plt+0x1b00>
   13100:	add	r4, r6, r3
   13104:	ldr	r2, [sp, #28]
   13108:	cmp	r3, #1
   1310c:	movls	r3, #0
   13110:	movhi	r3, #1
   13114:	cmn	r2, #1
   13118:	movne	r3, #0
   1311c:	cmp	r3, #0
   13120:	beq	13130 <close@plt+0x226c>
   13124:	ldr	r0, [sp, #52]	; 0x34
   13128:	bl	10dec <strlen@plt>
   1312c:	str	r0, [sp, #28]
   13130:	ldr	r3, [sp, #28]
   13134:	cmp	r3, r4
   13138:	bcc	129bc <close@plt+0x1af8>
   1313c:	ldr	r2, [sp, #60]	; 0x3c
   13140:	ldr	r1, [sp, #72]	; 0x48
   13144:	ldr	r3, [sp, #52]	; 0x34
   13148:	add	r0, r3, r6
   1314c:	bl	10cfc <memcmp@plt>
   13150:	cmp	r0, #0
   13154:	bne	12bdc <close@plt+0x1d18>
   13158:	ldr	r3, [sp, #32]
   1315c:	cmp	r3, #0
   13160:	beq	129c4 <close@plt+0x1b00>
   13164:	mov	r8, sl
   13168:	mov	sl, r7
   1316c:	b	137bc <close@plt+0x28f8>
   13170:	mov	r8, sl
   13174:	mov	sl, r7
   13178:	b	137bc <close@plt+0x28f8>
   1317c:	cmp	sl, #2
   13180:	strne	r8, [sp, #80]	; 0x50
   13184:	movne	r5, #0
   13188:	bne	12fc0 <close@plt+0x20fc>
   1318c:	ldr	r3, [sp, #32]
   13190:	cmp	r3, #0
   13194:	bne	137a8 <close@plt+0x28e4>
   13198:	ldr	r2, [sp, #76]	; 0x4c
   1319c:	adds	r3, r7, #0
   131a0:	movne	r3, #1
   131a4:	cmp	r2, #0
   131a8:	movne	r3, #0
   131ac:	cmp	r3, #0
   131b0:	movne	r3, #0
   131b4:	bne	131e4 <close@plt+0x2320>
   131b8:	cmp	r7, fp
   131bc:	ldrhi	r3, [sp, #36]	; 0x24
   131c0:	movhi	r2, #39	; 0x27
   131c4:	strbhi	r2, [r3, fp]
   131c8:	add	r3, fp, #1
   131cc:	cmp	r7, r3
   131d0:	ldrhi	r2, [sp, #36]	; 0x24
   131d4:	movhi	r1, #92	; 0x5c
   131d8:	strbhi	r1, [r2, r3]
   131dc:	mov	r3, r7
   131e0:	ldr	r7, [sp, #76]	; 0x4c
   131e4:	add	r2, fp, #2
   131e8:	cmp	r2, r3
   131ec:	ldrcc	r1, [sp, #36]	; 0x24
   131f0:	movcc	r0, #39	; 0x27
   131f4:	strbcc	r0, [r1, r2]
   131f8:	add	fp, fp, #3
   131fc:	ldr	r2, [sp, #32]
   13200:	mov	r5, r2
   13204:	str	r8, [sp, #80]	; 0x50
   13208:	str	r2, [sp, #44]	; 0x2c
   1320c:	str	r7, [sp, #76]	; 0x4c
   13210:	mov	r7, r3
   13214:	b	12fc0 <close@plt+0x20fc>
   13218:	ldr	r5, [sp, #84]	; 0x54
   1321c:	cmp	r5, #1
   13220:	beq	13250 <close@plt+0x238c>
   13224:	mov	r3, #0
   13228:	str	r3, [sp, #104]	; 0x68
   1322c:	str	r3, [sp, #108]	; 0x6c
   13230:	ldr	r3, [sp, #28]
   13234:	cmn	r3, #1
   13238:	beq	13284 <close@plt+0x23c0>
   1323c:	mov	r3, #0
   13240:	str	r4, [sp, #88]	; 0x58
   13244:	str	fp, [sp, #92]	; 0x5c
   13248:	mov	fp, r3
   1324c:	b	133ac <close@plt+0x24e8>
   13250:	bl	10dd4 <__ctype_b_loc@plt>
   13254:	ldr	r2, [r0]
   13258:	lsl	r3, r4, #1
   1325c:	ldrh	r8, [r2, r3]
   13260:	lsr	r8, r8, #14
   13264:	and	r8, r8, #1
   13268:	mov	r2, r5
   1326c:	eor	r5, r8, #1
   13270:	ldr	r3, [sp, #48]	; 0x30
   13274:	and	r5, r5, r3
   13278:	ands	r5, r5, #255	; 0xff
   1327c:	beq	12fc0 <close@plt+0x20fc>
   13280:	b	13444 <close@plt+0x2580>
   13284:	ldr	r0, [sp, #52]	; 0x34
   13288:	bl	10dec <strlen@plt>
   1328c:	str	r0, [sp, #28]
   13290:	b	1323c <close@plt+0x2378>
   13294:	mov	r2, fp
   13298:	mov	r1, r4
   1329c:	ldr	r4, [sp, #88]	; 0x58
   132a0:	ldr	fp, [sp, #92]	; 0x5c
   132a4:	ldr	r0, [sp, #28]
   132a8:	cmp	r0, r5
   132ac:	bls	13478 <close@plt+0x25b4>
   132b0:	ldrb	r3, [r1]
   132b4:	cmp	r3, #0
   132b8:	beq	13480 <close@plt+0x25bc>
   132bc:	mov	r3, r1
   132c0:	add	r2, r2, #1
   132c4:	add	r1, r6, r2
   132c8:	cmp	r0, r1
   132cc:	bls	13488 <close@plt+0x25c4>
   132d0:	ldrb	r1, [r3, #1]!
   132d4:	cmp	r1, #0
   132d8:	bne	132c0 <close@plt+0x23fc>
   132dc:	mov	r8, #0
   132e0:	b	1343c <close@plt+0x2578>
   132e4:	cmp	r4, r5
   132e8:	beq	13388 <close@plt+0x24c4>
   132ec:	ldrb	r3, [r4, #1]!
   132f0:	sub	r3, r3, #91	; 0x5b
   132f4:	cmp	r3, #33	; 0x21
   132f8:	ldrls	pc, [pc, r3, lsl #2]
   132fc:	b	132e4 <close@plt+0x2420>
   13300:			; <UNDEFINED> instruction: 0x000137b4
   13304:			; <UNDEFINED> instruction: 0x000137b4
   13308:	andeq	r3, r1, r4, ror #5
   1330c:			; <UNDEFINED> instruction: 0x000137b4
   13310:	andeq	r3, r1, r4, ror #5
   13314:			; <UNDEFINED> instruction: 0x000137b4
   13318:	andeq	r3, r1, r4, ror #5
   1331c:	andeq	r3, r1, r4, ror #5
   13320:	andeq	r3, r1, r4, ror #5
   13324:	andeq	r3, r1, r4, ror #5
   13328:	andeq	r3, r1, r4, ror #5
   1332c:	andeq	r3, r1, r4, ror #5
   13330:	andeq	r3, r1, r4, ror #5
   13334:	andeq	r3, r1, r4, ror #5
   13338:	andeq	r3, r1, r4, ror #5
   1333c:	andeq	r3, r1, r4, ror #5
   13340:	andeq	r3, r1, r4, ror #5
   13344:	andeq	r3, r1, r4, ror #5
   13348:	andeq	r3, r1, r4, ror #5
   1334c:	andeq	r3, r1, r4, ror #5
   13350:	andeq	r3, r1, r4, ror #5
   13354:	andeq	r3, r1, r4, ror #5
   13358:	andeq	r3, r1, r4, ror #5
   1335c:	andeq	r3, r1, r4, ror #5
   13360:	andeq	r3, r1, r4, ror #5
   13364:	andeq	r3, r1, r4, ror #5
   13368:	andeq	r3, r1, r4, ror #5
   1336c:	andeq	r3, r1, r4, ror #5
   13370:	andeq	r3, r1, r4, ror #5
   13374:	andeq	r3, r1, r4, ror #5
   13378:	andeq	r3, r1, r4, ror #5
   1337c:	andeq	r3, r1, r4, ror #5
   13380:	andeq	r3, r1, r4, ror #5
   13384:			; <UNDEFINED> instruction: 0x000137b4
   13388:	ldr	r0, [sp, #100]	; 0x64
   1338c:	bl	10d38 <iswprint@plt>
   13390:	cmp	r0, #0
   13394:	moveq	r8, #0
   13398:	add	fp, fp, r9
   1339c:	add	r0, sp, #104	; 0x68
   133a0:	bl	10ce4 <mbsinit@plt>
   133a4:	cmp	r0, #0
   133a8:	bne	1341c <close@plt+0x2558>
   133ac:	add	r5, r6, fp
   133b0:	ldr	r3, [sp, #52]	; 0x34
   133b4:	add	r4, r3, r5
   133b8:	add	r3, sp, #104	; 0x68
   133bc:	ldr	r2, [sp, #28]
   133c0:	sub	r2, r2, r5
   133c4:	mov	r1, r4
   133c8:	add	r0, sp, #100	; 0x64
   133cc:	bl	15214 <close@plt+0x4350>
   133d0:	subs	r9, r0, #0
   133d4:	beq	13490 <close@plt+0x25cc>
   133d8:	cmn	r9, #1
   133dc:	beq	1342c <close@plt+0x2568>
   133e0:	cmn	r9, #2
   133e4:	beq	13294 <close@plt+0x23d0>
   133e8:	ldr	r3, [sp, #32]
   133ec:	cmp	sl, #2
   133f0:	movne	r3, #0
   133f4:	andeq	r3, r3, #1
   133f8:	cmp	r3, #0
   133fc:	beq	13388 <close@plt+0x24c4>
   13400:	cmp	r9, #1
   13404:	bls	13388 <close@plt+0x24c4>
   13408:	sub	r3, r9, #1
   1340c:	add	r5, r3, r5
   13410:	ldr	r3, [sp, #52]	; 0x34
   13414:	add	r5, r3, r5
   13418:	b	132ec <close@plt+0x2428>
   1341c:	ldr	r4, [sp, #88]	; 0x58
   13420:	mov	r2, fp
   13424:	ldr	fp, [sp, #92]	; 0x5c
   13428:	b	1343c <close@plt+0x2578>
   1342c:	ldr	r4, [sp, #88]	; 0x58
   13430:	mov	r2, fp
   13434:	ldr	fp, [sp, #92]	; 0x5c
   13438:	mov	r8, #0
   1343c:	cmp	r2, #1
   13440:	bls	1326c <close@plt+0x23a8>
   13444:	add	r1, r6, r2
   13448:	ldr	ip, [sp, #64]	; 0x40
   1344c:	mov	r5, #0
   13450:	eor	r3, r8, #1
   13454:	ldr	r2, [sp, #48]	; 0x30
   13458:	and	r3, r3, r2
   1345c:	uxtb	r3, r3
   13460:	ldr	r9, [sp, #32]
   13464:	ldr	lr, [sp, #44]	; 0x2c
   13468:	ldr	r2, [sp, #56]	; 0x38
   1346c:	str	r8, [sp, #56]	; 0x38
   13470:	ldr	r0, [sp, #36]	; 0x24
   13474:	b	13510 <close@plt+0x264c>
   13478:	mov	r8, #0
   1347c:	b	1343c <close@plt+0x2578>
   13480:	mov	r8, #0
   13484:	b	1343c <close@plt+0x2578>
   13488:	mov	r8, #0
   1348c:	b	1343c <close@plt+0x2578>
   13490:	ldr	r4, [sp, #88]	; 0x58
   13494:	mov	r2, fp
   13498:	ldr	fp, [sp, #92]	; 0x5c
   1349c:	b	1343c <close@plt+0x2578>
   134a0:	cmp	r2, #0
   134a4:	beq	134b8 <close@plt+0x25f4>
   134a8:	cmp	r7, fp
   134ac:	movhi	r2, #92	; 0x5c
   134b0:	strbhi	r2, [r0, fp]
   134b4:	add	fp, fp, #1
   134b8:	add	r8, r6, #1
   134bc:	cmp	r1, r8
   134c0:	bls	135c8 <close@plt+0x2704>
   134c4:	eor	r2, r5, #1
   134c8:	and	r2, r2, lr
   134cc:	ands	r2, r2, #255	; 0xff
   134d0:	beq	135e4 <close@plt+0x2720>
   134d4:	cmp	r7, fp
   134d8:	movhi	r2, #39	; 0x27
   134dc:	strbhi	r2, [r0, fp]
   134e0:	add	r2, fp, #1
   134e4:	cmp	r7, r2
   134e8:	movhi	lr, #39	; 0x27
   134ec:	strbhi	lr, [r0, r2]
   134f0:	add	fp, fp, #2
   134f4:	mov	r6, r8
   134f8:	mov	r2, r3
   134fc:	mov	lr, r3
   13500:	cmp	r7, fp
   13504:	strbhi	r4, [r0, fp]
   13508:	add	fp, fp, #1
   1350c:	ldrb	r4, [ip, #1]!
   13510:	cmp	r3, #0
   13514:	beq	134a0 <close@plt+0x25dc>
   13518:	cmp	r9, #0
   1351c:	bne	13820 <close@plt+0x295c>
   13520:	eor	r5, lr, #1
   13524:	cmp	sl, #2
   13528:	movne	r5, #0
   1352c:	andeq	r5, r5, #1
   13530:	cmp	r5, #0
   13534:	beq	1356c <close@plt+0x26a8>
   13538:	cmp	r7, fp
   1353c:	movhi	lr, #39	; 0x27
   13540:	strbhi	lr, [r0, fp]
   13544:	add	lr, fp, #1
   13548:	cmp	r7, lr
   1354c:	movhi	r8, #36	; 0x24
   13550:	strbhi	r8, [r0, lr]
   13554:	add	lr, fp, #2
   13558:	cmp	r7, lr
   1355c:	movhi	r8, #39	; 0x27
   13560:	strbhi	r8, [r0, lr]
   13564:	add	fp, fp, #3
   13568:	mov	lr, r5
   1356c:	cmp	r7, fp
   13570:	movhi	r5, #92	; 0x5c
   13574:	strbhi	r5, [r0, fp]
   13578:	add	r5, fp, #1
   1357c:	cmp	r7, r5
   13580:	lsrhi	r8, r4, #6
   13584:	addhi	r8, r8, #48	; 0x30
   13588:	strbhi	r8, [r0, r5]
   1358c:	add	r8, fp, #2
   13590:	cmp	r7, r8
   13594:	lsrhi	r5, r4, #3
   13598:	andhi	r5, r5, #7
   1359c:	addhi	r5, r5, #48	; 0x30
   135a0:	strbhi	r5, [r0, r8]
   135a4:	add	fp, fp, #3
   135a8:	and	r4, r4, #7
   135ac:	add	r4, r4, #48	; 0x30
   135b0:	add	r5, r6, #1
   135b4:	cmp	r1, r5
   135b8:	bls	135d4 <close@plt+0x2710>
   135bc:	mov	r6, r5
   135c0:	mov	r5, r3
   135c4:	b	13500 <close@plt+0x263c>
   135c8:	str	lr, [sp, #44]	; 0x2c
   135cc:	ldr	r8, [sp, #56]	; 0x38
   135d0:	b	12ea4 <close@plt+0x1fe0>
   135d4:	str	lr, [sp, #44]	; 0x2c
   135d8:	ldr	r8, [sp, #56]	; 0x38
   135dc:	mov	r5, r3
   135e0:	b	12ea4 <close@plt+0x1fe0>
   135e4:	mov	r6, r8
   135e8:	b	13500 <close@plt+0x263c>
   135ec:	mov	r5, #0
   135f0:	b	12fc0 <close@plt+0x20fc>
   135f4:	mov	r8, r5
   135f8:	ldr	r5, [sp, #48]	; 0x30
   135fc:	mov	r4, #48	; 0x30
   13600:	b	12fc0 <close@plt+0x20fc>
   13604:	ldr	r8, [sp, #32]
   13608:	mov	r4, #48	; 0x30
   1360c:	b	12fc0 <close@plt+0x20fc>
   13610:	ldr	r8, [sp, #32]
   13614:	mov	r4, #48	; 0x30
   13618:	b	12fc0 <close@plt+0x20fc>
   1361c:	mov	r8, #0
   13620:	mov	r5, r8
   13624:	b	12fc0 <close@plt+0x20fc>
   13628:	mov	r8, #0
   1362c:	mov	r5, r8
   13630:	b	12fc0 <close@plt+0x20fc>
   13634:	mov	r8, #0
   13638:	mov	r5, r8
   1363c:	b	12fc0 <close@plt+0x20fc>
   13640:	mov	r8, #0
   13644:	mov	r5, r8
   13648:	b	12fc0 <close@plt+0x20fc>
   1364c:	ldr	r3, [sp, #52]	; 0x34
   13650:	ldrb	r8, [r3, r6]
   13654:	adds	r8, r8, #0
   13658:	movne	r8, #1
   1365c:	b	130d0 <close@plt+0x220c>
   13660:	cmp	sl, #2
   13664:	movne	r3, #0
   13668:	moveq	r3, #1
   1366c:	ldr	r1, [sp, #32]
   13670:	mov	r2, r1
   13674:	and	r2, r2, r3
   13678:	cmp	fp, #0
   1367c:	movne	r2, #0
   13680:	andeq	r2, r2, #1
   13684:	cmp	r2, #0
   13688:	bne	13838 <close@plt+0x2974>
   1368c:	eor	r2, r1, #1
   13690:	and	r3, r3, r2
   13694:	ldr	r1, [sp, #80]	; 0x50
   13698:	tst	r1, r3
   1369c:	beq	13714 <close@plt+0x2850>
   136a0:	ldr	r3, [sp, #40]	; 0x28
   136a4:	cmp	r3, #0
   136a8:	bne	136d0 <close@plt+0x280c>
   136ac:	ldr	r1, [sp, #76]	; 0x4c
   136b0:	clz	r3, r7
   136b4:	lsr	r3, r3, #5
   136b8:	cmp	r1, #0
   136bc:	moveq	r3, #0
   136c0:	cmp	r3, #0
   136c4:	beq	13714 <close@plt+0x2850>
   136c8:	ldr	r7, [sp, #76]	; 0x4c
   136cc:	b	12764 <close@plt+0x18a0>
   136d0:	ldr	r3, [sp, #168]	; 0xa8
   136d4:	str	r3, [sp, #16]
   136d8:	ldr	r3, [sp, #164]	; 0xa4
   136dc:	str	r3, [sp, #12]
   136e0:	ldr	r3, [sp, #160]	; 0xa0
   136e4:	str	r3, [sp, #8]
   136e8:	ldr	r3, [sp, #156]	; 0x9c
   136ec:	str	r3, [sp, #4]
   136f0:	mov	r3, #5
   136f4:	str	r3, [sp]
   136f8:	ldr	r3, [sp, #28]
   136fc:	ldr	r2, [sp, #52]	; 0x34
   13700:	ldr	r1, [sp, #76]	; 0x4c
   13704:	ldr	r0, [sp, #36]	; 0x24
   13708:	bl	12704 <close@plt+0x1840>
   1370c:	mov	fp, r0
   13710:	b	13814 <close@plt+0x2950>
   13714:	mov	sl, r7
   13718:	ldr	r3, [sp, #72]	; 0x48
   1371c:	cmp	r3, #0
   13720:	moveq	r2, #0
   13724:	andne	r2, r2, #1
   13728:	cmp	r2, #0
   1372c:	beq	1375c <close@plt+0x2898>
   13730:	mov	r2, r3
   13734:	ldrb	r3, [r3]
   13738:	cmp	r3, #0
   1373c:	beq	1375c <close@plt+0x2898>
   13740:	ldr	r1, [sp, #36]	; 0x24
   13744:	cmp	sl, fp
   13748:	strbhi	r3, [r1, fp]
   1374c:	add	fp, fp, #1
   13750:	ldrb	r3, [r2, #1]!
   13754:	cmp	r3, #0
   13758:	bne	13744 <close@plt+0x2880>
   1375c:	cmp	sl, fp
   13760:	movhi	r3, #0
   13764:	ldrhi	r2, [sp, #36]	; 0x24
   13768:	strbhi	r3, [r2, fp]
   1376c:	b	13814 <close@plt+0x2950>
   13770:	mov	r8, sl
   13774:	mov	sl, r7
   13778:	ldr	r3, [sp, #32]
   1377c:	str	r3, [sp, #48]	; 0x30
   13780:	b	137bc <close@plt+0x28f8>
   13784:	mov	r8, sl
   13788:	mov	sl, r7
   1378c:	b	137bc <close@plt+0x28f8>
   13790:	mov	r8, sl
   13794:	mov	sl, r7
   13798:	b	137bc <close@plt+0x28f8>
   1379c:			; <UNDEFINED> instruction: 0x000163bc
   137a0:	andeq	r6, r1, ip, asr #7
   137a4:	andeq	r6, r1, r0, asr #7
   137a8:	mov	r8, sl
   137ac:	mov	sl, r7
   137b0:	b	137bc <close@plt+0x28f8>
   137b4:	mov	r8, sl
   137b8:	mov	sl, r7
   137bc:	ldr	r3, [sp, #48]	; 0x30
   137c0:	cmp	r8, #2
   137c4:	movne	r3, #0
   137c8:	andeq	r3, r3, #1
   137cc:	cmp	r3, #0
   137d0:	movne	r8, #4
   137d4:	ldr	r3, [sp, #168]	; 0xa8
   137d8:	str	r3, [sp, #16]
   137dc:	ldr	r3, [sp, #164]	; 0xa4
   137e0:	str	r3, [sp, #12]
   137e4:	mov	r3, #0
   137e8:	str	r3, [sp, #8]
   137ec:	ldr	r3, [sp, #156]	; 0x9c
   137f0:	bic	r3, r3, #2
   137f4:	str	r3, [sp, #4]
   137f8:	str	r8, [sp]
   137fc:	ldr	r3, [sp, #28]
   13800:	ldr	r2, [sp, #52]	; 0x34
   13804:	mov	r1, sl
   13808:	ldr	r0, [sp, #36]	; 0x24
   1380c:	bl	12704 <close@plt+0x1840>
   13810:	mov	fp, r0
   13814:	mov	r0, fp
   13818:	add	sp, sp, #116	; 0x74
   1381c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13820:	mov	r8, sl
   13824:	mov	sl, r7
   13828:	b	137bc <close@plt+0x28f8>
   1382c:	mov	r8, sl
   13830:	mov	sl, r7
   13834:	b	137bc <close@plt+0x28f8>
   13838:	mov	r8, sl
   1383c:	mov	sl, r7
   13840:	b	137bc <close@plt+0x28f8>
   13844:	mov	r8, sl
   13848:	mov	sl, r7
   1384c:	b	137d4 <close@plt+0x2910>
   13850:	mov	r3, #1
   13854:	str	r3, [sp, #32]
   13858:	str	r3, [sp, #48]	; 0x30
   1385c:	str	r3, [sp, #60]	; 0x3c
   13860:	ldr	r3, [pc, #-196]	; 137a4 <close@plt+0x28e0>
   13864:	str	r3, [sp, #72]	; 0x48
   13868:	mov	fp, #0
   1386c:	mov	sl, #5
   13870:	b	127c0 <close@plt+0x18fc>
   13874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13878:	sub	sp, sp, #52	; 0x34
   1387c:	mov	r5, r0
   13880:	str	r1, [sp, #24]
   13884:	str	r2, [sp, #28]
   13888:	mov	r4, r3
   1388c:	bl	10df8 <__errno_location@plt>
   13890:	str	r0, [sp, #32]
   13894:	ldr	r3, [r0]
   13898:	str	r3, [sp, #36]	; 0x24
   1389c:	ldr	r3, [pc, #396]	; 13a30 <close@plt+0x2b6c>
   138a0:	ldr	r6, [r3]
   138a4:	cmn	r5, #-2147483647	; 0x80000001
   138a8:	movne	r3, #0
   138ac:	moveq	r3, #1
   138b0:	orrs	r3, r3, r5, lsr #31
   138b4:	bne	139f4 <close@plt+0x2b30>
   138b8:	ldr	r3, [pc, #368]	; 13a30 <close@plt+0x2b6c>
   138bc:	ldr	r2, [r3, #4]
   138c0:	cmp	r5, r2
   138c4:	blt	1392c <close@plt+0x2a68>
   138c8:	str	r2, [sp, #44]	; 0x2c
   138cc:	add	r3, r3, #8
   138d0:	cmp	r6, r3
   138d4:	beq	139f8 <close@plt+0x2b34>
   138d8:	sub	r2, r5, r2
   138dc:	mov	r3, #8
   138e0:	str	r3, [sp]
   138e4:	mvn	r3, #-2147483648	; 0x80000000
   138e8:	add	r2, r2, #1
   138ec:	add	r1, sp, #44	; 0x2c
   138f0:	mov	r0, r6
   138f4:	bl	14834 <close@plt+0x3970>
   138f8:	mov	r6, r0
   138fc:	ldr	r3, [pc, #300]	; 13a30 <close@plt+0x2b6c>
   13900:	str	r0, [r3]
   13904:	ldr	r7, [pc, #292]	; 13a30 <close@plt+0x2b6c>
   13908:	ldr	r0, [r7, #4]
   1390c:	ldr	r2, [sp, #44]	; 0x2c
   13910:	sub	r2, r2, r0
   13914:	lsl	r2, r2, #3
   13918:	mov	r1, #0
   1391c:	add	r0, r6, r0, lsl #3
   13920:	bl	10e10 <memset@plt>
   13924:	ldr	r3, [sp, #44]	; 0x2c
   13928:	str	r3, [r7, #4]
   1392c:	add	fp, r6, r5, lsl #3
   13930:	ldr	r8, [r6, r5, lsl #3]
   13934:	ldr	r7, [fp, #4]
   13938:	ldr	r9, [r4, #4]
   1393c:	orr	r9, r9, #1
   13940:	add	sl, r4, #8
   13944:	ldr	r3, [r4, #44]	; 0x2c
   13948:	str	r3, [sp, #16]
   1394c:	ldr	r3, [r4, #40]	; 0x28
   13950:	str	r3, [sp, #12]
   13954:	str	sl, [sp, #8]
   13958:	str	r9, [sp, #4]
   1395c:	ldr	r3, [r4]
   13960:	str	r3, [sp]
   13964:	ldr	r3, [sp, #28]
   13968:	ldr	r2, [sp, #24]
   1396c:	mov	r1, r8
   13970:	mov	r0, r7
   13974:	bl	12704 <close@plt+0x1840>
   13978:	cmp	r8, r0
   1397c:	bhi	139dc <close@plt+0x2b18>
   13980:	add	r8, r0, #1
   13984:	str	r8, [r6, r5, lsl #3]
   13988:	ldr	r3, [pc, #164]	; 13a34 <close@plt+0x2b70>
   1398c:	cmp	r7, r3
   13990:	beq	1399c <close@plt+0x2ad8>
   13994:	mov	r0, r7
   13998:	bl	15188 <close@plt+0x42c4>
   1399c:	mov	r0, r8
   139a0:	bl	146b0 <close@plt+0x37ec>
   139a4:	mov	r7, r0
   139a8:	str	r0, [fp, #4]
   139ac:	ldr	r3, [r4, #44]	; 0x2c
   139b0:	str	r3, [sp, #16]
   139b4:	ldr	r3, [r4, #40]	; 0x28
   139b8:	str	r3, [sp, #12]
   139bc:	str	sl, [sp, #8]
   139c0:	str	r9, [sp, #4]
   139c4:	ldr	r3, [r4]
   139c8:	str	r3, [sp]
   139cc:	ldr	r3, [sp, #28]
   139d0:	ldr	r2, [sp, #24]
   139d4:	mov	r1, r8
   139d8:	bl	12704 <close@plt+0x1840>
   139dc:	ldr	r3, [sp, #32]
   139e0:	ldr	r2, [sp, #36]	; 0x24
   139e4:	str	r2, [r3]
   139e8:	mov	r0, r7
   139ec:	add	sp, sp, #52	; 0x34
   139f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f4:	bl	10eb8 <abort@plt>
   139f8:	sub	r2, r5, r2
   139fc:	mov	r3, #8
   13a00:	str	r3, [sp]
   13a04:	mvn	r3, #-2147483648	; 0x80000000
   13a08:	add	r2, r2, #1
   13a0c:	add	r1, sp, #44	; 0x2c
   13a10:	mov	r0, #0
   13a14:	bl	14834 <close@plt+0x3970>
   13a18:	mov	r6, r0
   13a1c:	ldr	r3, [pc, #12]	; 13a30 <close@plt+0x2b6c>
   13a20:	str	r0, [r3], #8
   13a24:	ldm	r3, {r0, r1}
   13a28:	stm	r6, {r0, r1}
   13a2c:	b	13904 <close@plt+0x2a40>
   13a30:	strdeq	r7, [r2], -r4
   13a34:	andeq	r7, r2, r4, lsl #3
   13a38:	push	{r4, r5, r6, lr}
   13a3c:	mov	r4, r0
   13a40:	bl	10df8 <__errno_location@plt>
   13a44:	mov	r5, r0
   13a48:	ldr	r6, [r0]
   13a4c:	cmp	r4, #0
   13a50:	ldr	r3, [pc, #20]	; 13a6c <close@plt+0x2ba8>
   13a54:	moveq	r4, r3
   13a58:	mov	r1, #48	; 0x30
   13a5c:	mov	r0, r4
   13a60:	bl	14b9c <close@plt+0x3cd8>
   13a64:	str	r6, [r5]
   13a68:	pop	{r4, r5, r6, pc}
   13a6c:	andeq	r7, r2, r4, lsl #5
   13a70:	subs	r3, r0, #0
   13a74:	ldr	r2, [pc, #8]	; 13a84 <close@plt+0x2bc0>
   13a78:	moveq	r3, r2
   13a7c:	ldr	r0, [r3]
   13a80:	bx	lr
   13a84:	andeq	r7, r2, r4, lsl #5
   13a88:	subs	r3, r0, #0
   13a8c:	ldr	r2, [pc, #8]	; 13a9c <close@plt+0x2bd8>
   13a90:	moveq	r3, r2
   13a94:	str	r1, [r3]
   13a98:	bx	lr
   13a9c:	andeq	r7, r2, r4, lsl #5
   13aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   13aa4:	subs	r3, r0, #0
   13aa8:	ldr	r0, [pc, #44]	; 13adc <close@plt+0x2c18>
   13aac:	moveq	r3, r0
   13ab0:	add	r3, r3, #8
   13ab4:	lsr	lr, r1, #5
   13ab8:	and	r1, r1, #31
   13abc:	ldr	ip, [r3, lr, lsl #2]
   13ac0:	lsr	r0, ip, r1
   13ac4:	eor	r2, r2, r0
   13ac8:	and	r2, r2, #1
   13acc:	eor	r1, ip, r2, lsl r1
   13ad0:	str	r1, [r3, lr, lsl #2]
   13ad4:	and	r0, r0, #1
   13ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   13adc:	andeq	r7, r2, r4, lsl #5
   13ae0:	subs	r3, r0, #0
   13ae4:	ldr	r2, [pc, #12]	; 13af8 <close@plt+0x2c34>
   13ae8:	moveq	r3, r2
   13aec:	ldr	r0, [r3, #4]
   13af0:	str	r1, [r3, #4]
   13af4:	bx	lr
   13af8:	andeq	r7, r2, r4, lsl #5
   13afc:	subs	r3, r0, #0
   13b00:	ldr	r0, [pc, #40]	; 13b30 <close@plt+0x2c6c>
   13b04:	moveq	r3, r0
   13b08:	mov	r0, #10
   13b0c:	str	r0, [r3]
   13b10:	cmp	r2, #0
   13b14:	cmpne	r1, #0
   13b18:	beq	13b28 <close@plt+0x2c64>
   13b1c:	str	r1, [r3, #40]	; 0x28
   13b20:	str	r2, [r3, #44]	; 0x2c
   13b24:	bx	lr
   13b28:	push	{r4, lr}
   13b2c:	bl	10eb8 <abort@plt>
   13b30:	andeq	r7, r2, r4, lsl #5
   13b34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b38:	sub	sp, sp, #24
   13b3c:	mov	r7, r0
   13b40:	mov	r8, r1
   13b44:	mov	r9, r2
   13b48:	mov	sl, r3
   13b4c:	ldr	r4, [sp, #56]	; 0x38
   13b50:	cmp	r4, #0
   13b54:	ldr	r3, [pc, #84]	; 13bb0 <close@plt+0x2cec>
   13b58:	moveq	r4, r3
   13b5c:	bl	10df8 <__errno_location@plt>
   13b60:	mov	r5, r0
   13b64:	ldr	r6, [r0]
   13b68:	ldr	r3, [r4, #44]	; 0x2c
   13b6c:	str	r3, [sp, #16]
   13b70:	ldr	r3, [r4, #40]	; 0x28
   13b74:	str	r3, [sp, #12]
   13b78:	add	r3, r4, #8
   13b7c:	str	r3, [sp, #8]
   13b80:	ldr	r3, [r4, #4]
   13b84:	str	r3, [sp, #4]
   13b88:	ldr	r3, [r4]
   13b8c:	str	r3, [sp]
   13b90:	mov	r3, sl
   13b94:	mov	r2, r9
   13b98:	mov	r1, r8
   13b9c:	mov	r0, r7
   13ba0:	bl	12704 <close@plt+0x1840>
   13ba4:	str	r6, [r5]
   13ba8:	add	sp, sp, #24
   13bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bb0:	andeq	r7, r2, r4, lsl #5
   13bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bb8:	sub	sp, sp, #44	; 0x2c
   13bbc:	str	r0, [sp, #28]
   13bc0:	str	r1, [sp, #32]
   13bc4:	mov	r6, r2
   13bc8:	subs	r4, r3, #0
   13bcc:	ldr	r3, [pc, #172]	; 13c80 <close@plt+0x2dbc>
   13bd0:	moveq	r4, r3
   13bd4:	bl	10df8 <__errno_location@plt>
   13bd8:	mov	r7, r0
   13bdc:	ldr	fp, [r0]
   13be0:	ldr	r5, [r4, #4]
   13be4:	cmp	r6, #0
   13be8:	orreq	r5, r5, #1
   13bec:	add	r9, r4, #8
   13bf0:	ldr	r3, [r4, #44]	; 0x2c
   13bf4:	str	r3, [sp, #16]
   13bf8:	ldr	r3, [r4, #40]	; 0x28
   13bfc:	str	r3, [sp, #12]
   13c00:	str	r9, [sp, #8]
   13c04:	str	r5, [sp, #4]
   13c08:	ldr	r3, [r4]
   13c0c:	str	r3, [sp]
   13c10:	ldr	r3, [sp, #32]
   13c14:	ldr	r2, [sp, #28]
   13c18:	mov	r1, #0
   13c1c:	mov	r0, r1
   13c20:	bl	12704 <close@plt+0x1840>
   13c24:	mov	sl, r0
   13c28:	add	r8, r0, #1
   13c2c:	mov	r0, r8
   13c30:	bl	146b0 <close@plt+0x37ec>
   13c34:	str	r0, [sp, #36]	; 0x24
   13c38:	ldr	r3, [r4, #44]	; 0x2c
   13c3c:	str	r3, [sp, #16]
   13c40:	ldr	r3, [r4, #40]	; 0x28
   13c44:	str	r3, [sp, #12]
   13c48:	str	r9, [sp, #8]
   13c4c:	str	r5, [sp, #4]
   13c50:	ldr	r3, [r4]
   13c54:	str	r3, [sp]
   13c58:	ldr	r3, [sp, #32]
   13c5c:	ldr	r2, [sp, #28]
   13c60:	mov	r1, r8
   13c64:	bl	12704 <close@plt+0x1840>
   13c68:	str	fp, [r7]
   13c6c:	cmp	r6, #0
   13c70:	strne	sl, [r6]
   13c74:	ldr	r0, [sp, #36]	; 0x24
   13c78:	add	sp, sp, #44	; 0x2c
   13c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c80:	andeq	r7, r2, r4, lsl #5
   13c84:	push	{r4, lr}
   13c88:	mov	r3, r2
   13c8c:	mov	r2, #0
   13c90:	bl	13bb4 <close@plt+0x2cf0>
   13c94:	pop	{r4, pc}
   13c98:	push	{r4, r5, r6, r7, r8, lr}
   13c9c:	ldr	r3, [pc, #140]	; 13d30 <close@plt+0x2e6c>
   13ca0:	ldr	r7, [r3]
   13ca4:	ldr	r3, [r3, #4]
   13ca8:	cmp	r3, #1
   13cac:	ble	13cd8 <close@plt+0x2e14>
   13cb0:	mov	r5, r7
   13cb4:	mov	r4, #1
   13cb8:	ldr	r6, [pc, #112]	; 13d30 <close@plt+0x2e6c>
   13cbc:	ldr	r0, [r5, #12]
   13cc0:	bl	15188 <close@plt+0x42c4>
   13cc4:	add	r4, r4, #1
   13cc8:	add	r5, r5, #8
   13ccc:	ldr	r3, [r6, #4]
   13cd0:	cmp	r3, r4
   13cd4:	bgt	13cbc <close@plt+0x2df8>
   13cd8:	ldr	r0, [r7, #4]
   13cdc:	ldr	r3, [pc, #80]	; 13d34 <close@plt+0x2e70>
   13ce0:	cmp	r0, r3
   13ce4:	beq	13d00 <close@plt+0x2e3c>
   13ce8:	bl	15188 <close@plt+0x42c4>
   13cec:	ldr	r3, [pc, #60]	; 13d30 <close@plt+0x2e6c>
   13cf0:	mov	r2, #256	; 0x100
   13cf4:	str	r2, [r3, #8]
   13cf8:	ldr	r2, [pc, #52]	; 13d34 <close@plt+0x2e70>
   13cfc:	str	r2, [r3, #12]
   13d00:	ldr	r3, [pc, #48]	; 13d38 <close@plt+0x2e74>
   13d04:	cmp	r7, r3
   13d08:	beq	13d20 <close@plt+0x2e5c>
   13d0c:	mov	r0, r7
   13d10:	bl	15188 <close@plt+0x42c4>
   13d14:	ldr	r3, [pc, #20]	; 13d30 <close@plt+0x2e6c>
   13d18:	add	r2, r3, #8
   13d1c:	str	r2, [r3]
   13d20:	mov	r2, #1
   13d24:	ldr	r3, [pc, #4]	; 13d30 <close@plt+0x2e6c>
   13d28:	str	r2, [r3, #4]
   13d2c:	pop	{r4, r5, r6, r7, r8, pc}
   13d30:	strdeq	r7, [r2], -r4
   13d34:	andeq	r7, r2, r4, lsl #3
   13d38:	strdeq	r7, [r2], -ip
   13d3c:	push	{r4, lr}
   13d40:	ldr	r3, [pc, #8]	; 13d50 <close@plt+0x2e8c>
   13d44:	mvn	r2, #0
   13d48:	bl	13874 <close@plt+0x29b0>
   13d4c:	pop	{r4, pc}
   13d50:	andeq	r7, r2, r4, lsl #5
   13d54:	push	{r4, lr}
   13d58:	ldr	r3, [pc, #4]	; 13d64 <close@plt+0x2ea0>
   13d5c:	bl	13874 <close@plt+0x29b0>
   13d60:	pop	{r4, pc}
   13d64:	andeq	r7, r2, r4, lsl #5
   13d68:	push	{r4, lr}
   13d6c:	mov	r1, r0
   13d70:	mov	r0, #0
   13d74:	bl	13d3c <close@plt+0x2e78>
   13d78:	pop	{r4, pc}
   13d7c:	push	{r4, lr}
   13d80:	mov	r2, r1
   13d84:	mov	r1, r0
   13d88:	mov	r0, #0
   13d8c:	bl	13d54 <close@plt+0x2e90>
   13d90:	pop	{r4, pc}
   13d94:	push	{r4, r5, lr}
   13d98:	sub	sp, sp, #52	; 0x34
   13d9c:	mov	r4, r0
   13da0:	mov	r5, r2
   13da4:	mov	r0, sp
   13da8:	bl	1259c <close@plt+0x16d8>
   13dac:	mov	r3, sp
   13db0:	mvn	r2, #0
   13db4:	mov	r1, r5
   13db8:	mov	r0, r4
   13dbc:	bl	13874 <close@plt+0x29b0>
   13dc0:	add	sp, sp, #52	; 0x34
   13dc4:	pop	{r4, r5, pc}
   13dc8:	push	{r4, r5, r6, lr}
   13dcc:	sub	sp, sp, #48	; 0x30
   13dd0:	mov	r4, r0
   13dd4:	mov	r5, r2
   13dd8:	mov	r6, r3
   13ddc:	mov	r0, sp
   13de0:	bl	1259c <close@plt+0x16d8>
   13de4:	mov	r3, sp
   13de8:	mov	r2, r6
   13dec:	mov	r1, r5
   13df0:	mov	r0, r4
   13df4:	bl	13874 <close@plt+0x29b0>
   13df8:	add	sp, sp, #48	; 0x30
   13dfc:	pop	{r4, r5, r6, pc}
   13e00:	push	{r4, lr}
   13e04:	mov	r2, r1
   13e08:	mov	r1, r0
   13e0c:	mov	r0, #0
   13e10:	bl	13d94 <close@plt+0x2ed0>
   13e14:	pop	{r4, pc}
   13e18:	push	{r4, lr}
   13e1c:	mov	r3, r2
   13e20:	mov	r2, r1
   13e24:	mov	r1, r0
   13e28:	mov	r0, #0
   13e2c:	bl	13dc8 <close@plt+0x2f04>
   13e30:	pop	{r4, pc}
   13e34:	push	{r4, r5, r6, lr}
   13e38:	sub	sp, sp, #48	; 0x30
   13e3c:	mov	r4, r0
   13e40:	mov	r5, r1
   13e44:	mov	r6, r2
   13e48:	mov	ip, sp
   13e4c:	ldr	lr, [pc, #64]	; 13e94 <close@plt+0x2fd0>
   13e50:	ldm	lr!, {r0, r1, r2, r3}
   13e54:	stmia	ip!, {r0, r1, r2, r3}
   13e58:	ldm	lr!, {r0, r1, r2, r3}
   13e5c:	stmia	ip!, {r0, r1, r2, r3}
   13e60:	ldm	lr, {r0, r1, r2, r3}
   13e64:	stm	ip, {r0, r1, r2, r3}
   13e68:	mov	r2, #1
   13e6c:	mov	r1, r6
   13e70:	mov	r0, sp
   13e74:	bl	13aa0 <close@plt+0x2bdc>
   13e78:	mov	r3, sp
   13e7c:	mov	r2, r5
   13e80:	mov	r1, r4
   13e84:	mov	r0, #0
   13e88:	bl	13874 <close@plt+0x29b0>
   13e8c:	add	sp, sp, #48	; 0x30
   13e90:	pop	{r4, r5, r6, pc}
   13e94:	andeq	r7, r2, r4, lsl #5
   13e98:	push	{r4, lr}
   13e9c:	mov	r2, r1
   13ea0:	mvn	r1, #0
   13ea4:	bl	13e34 <close@plt+0x2f70>
   13ea8:	pop	{r4, pc}
   13eac:	push	{r4, lr}
   13eb0:	mov	r1, #58	; 0x3a
   13eb4:	bl	13e98 <close@plt+0x2fd4>
   13eb8:	pop	{r4, pc}
   13ebc:	push	{r4, lr}
   13ec0:	mov	r2, #58	; 0x3a
   13ec4:	bl	13e34 <close@plt+0x2f70>
   13ec8:	pop	{r4, pc}
   13ecc:	push	{r4, r5, lr}
   13ed0:	sub	sp, sp, #100	; 0x64
   13ed4:	mov	r4, r0
   13ed8:	mov	r5, r2
   13edc:	mov	r0, sp
   13ee0:	bl	1259c <close@plt+0x16d8>
   13ee4:	add	lr, sp, #48	; 0x30
   13ee8:	mov	ip, sp
   13eec:	ldm	ip!, {r0, r1, r2, r3}
   13ef0:	stmia	lr!, {r0, r1, r2, r3}
   13ef4:	ldm	ip!, {r0, r1, r2, r3}
   13ef8:	stmia	lr!, {r0, r1, r2, r3}
   13efc:	ldm	ip, {r0, r1, r2, r3}
   13f00:	stm	lr, {r0, r1, r2, r3}
   13f04:	mov	r2, #1
   13f08:	mov	r1, #58	; 0x3a
   13f0c:	add	r0, sp, #48	; 0x30
   13f10:	bl	13aa0 <close@plt+0x2bdc>
   13f14:	add	r3, sp, #48	; 0x30
   13f18:	mvn	r2, #0
   13f1c:	mov	r1, r5
   13f20:	mov	r0, r4
   13f24:	bl	13874 <close@plt+0x29b0>
   13f28:	add	sp, sp, #100	; 0x64
   13f2c:	pop	{r4, r5, pc}
   13f30:	push	{r4, r5, r6, r7, lr}
   13f34:	sub	sp, sp, #52	; 0x34
   13f38:	mov	r4, r0
   13f3c:	mov	r6, r1
   13f40:	mov	r7, r2
   13f44:	mov	r5, r3
   13f48:	mov	ip, sp
   13f4c:	ldr	lr, [pc, #64]	; 13f94 <close@plt+0x30d0>
   13f50:	ldm	lr!, {r0, r1, r2, r3}
   13f54:	stmia	ip!, {r0, r1, r2, r3}
   13f58:	ldm	lr!, {r0, r1, r2, r3}
   13f5c:	stmia	ip!, {r0, r1, r2, r3}
   13f60:	ldm	lr, {r0, r1, r2, r3}
   13f64:	stm	ip, {r0, r1, r2, r3}
   13f68:	mov	r2, r7
   13f6c:	mov	r1, r6
   13f70:	mov	r0, sp
   13f74:	bl	13afc <close@plt+0x2c38>
   13f78:	mov	r3, sp
   13f7c:	ldr	r2, [sp, #72]	; 0x48
   13f80:	mov	r1, r5
   13f84:	mov	r0, r4
   13f88:	bl	13874 <close@plt+0x29b0>
   13f8c:	add	sp, sp, #52	; 0x34
   13f90:	pop	{r4, r5, r6, r7, pc}
   13f94:	andeq	r7, r2, r4, lsl #5
   13f98:	push	{lr}		; (str lr, [sp, #-4]!)
   13f9c:	sub	sp, sp, #12
   13fa0:	mvn	ip, #0
   13fa4:	str	ip, [sp]
   13fa8:	bl	13f30 <close@plt+0x306c>
   13fac:	add	sp, sp, #12
   13fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   13fb4:	push	{r4, lr}
   13fb8:	mov	r3, r2
   13fbc:	mov	r2, r1
   13fc0:	mov	r1, r0
   13fc4:	mov	r0, #0
   13fc8:	bl	13f98 <close@plt+0x30d4>
   13fcc:	pop	{r4, pc}
   13fd0:	push	{lr}		; (str lr, [sp, #-4]!)
   13fd4:	sub	sp, sp, #12
   13fd8:	str	r3, [sp]
   13fdc:	mov	r3, r2
   13fe0:	mov	r2, r1
   13fe4:	mov	r1, r0
   13fe8:	mov	r0, #0
   13fec:	bl	13f30 <close@plt+0x306c>
   13ff0:	add	sp, sp, #12
   13ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ff8:	push	{r4, lr}
   13ffc:	ldr	r3, [pc, #4]	; 14008 <close@plt+0x3144>
   14000:	bl	13874 <close@plt+0x29b0>
   14004:	pop	{r4, pc}
   14008:	andeq	r7, r2, r4, lsl #2
   1400c:	push	{r4, lr}
   14010:	mov	r2, r1
   14014:	mov	r1, r0
   14018:	mov	r0, #0
   1401c:	bl	13ff8 <close@plt+0x3134>
   14020:	pop	{r4, pc}
   14024:	push	{r4, lr}
   14028:	mvn	r2, #0
   1402c:	bl	13ff8 <close@plt+0x3134>
   14030:	pop	{r4, pc}
   14034:	push	{r4, lr}
   14038:	mov	r1, r0
   1403c:	mov	r0, #0
   14040:	bl	14024 <close@plt+0x3160>
   14044:	pop	{r4, pc}
   14048:	push	{r4, r5, r6, lr}
   1404c:	mov	r6, r1
   14050:	mov	r4, r2
   14054:	mov	r1, #0
   14058:	bl	10e70 <setlocale@plt>
   1405c:	subs	r5, r0, #0
   14060:	beq	14084 <close@plt+0x31c0>
   14064:	mov	r0, r5
   14068:	bl	10dec <strlen@plt>
   1406c:	cmp	r4, r0
   14070:	bhi	1409c <close@plt+0x31d8>
   14074:	cmp	r4, #0
   14078:	bne	140b4 <close@plt+0x31f0>
   1407c:	mov	r0, #34	; 0x22
   14080:	pop	{r4, r5, r6, pc}
   14084:	cmp	r4, #0
   14088:	beq	140d8 <close@plt+0x3214>
   1408c:	mov	r3, #0
   14090:	strb	r3, [r6]
   14094:	mov	r0, #22
   14098:	pop	{r4, r5, r6, pc}
   1409c:	add	r2, r0, #1
   140a0:	mov	r1, r5
   140a4:	mov	r0, r6
   140a8:	bl	10cd8 <memcpy@plt>
   140ac:	mov	r0, #0
   140b0:	pop	{r4, r5, r6, pc}
   140b4:	sub	r4, r4, #1
   140b8:	mov	r2, r4
   140bc:	mov	r1, r5
   140c0:	mov	r0, r6
   140c4:	bl	10cd8 <memcpy@plt>
   140c8:	mov	r3, #0
   140cc:	strb	r3, [r6, r4]
   140d0:	mov	r0, #34	; 0x22
   140d4:	pop	{r4, r5, r6, pc}
   140d8:	mov	r0, #22
   140dc:	pop	{r4, r5, r6, pc}
   140e0:	push	{r4, lr}
   140e4:	mov	r1, #0
   140e8:	bl	10e70 <setlocale@plt>
   140ec:	pop	{r4, pc}
   140f0:	push	{r4, lr}
   140f4:	mov	r2, #3
   140f8:	mov	r1, #0
   140fc:	bl	14f30 <close@plt+0x406c>
   14100:	pop	{r4, pc}
   14104:	push	{r4, r5, r6, lr}
   14108:	sub	sp, sp, #32
   1410c:	mov	r4, r0
   14110:	ldr	r5, [sp, #48]	; 0x30
   14114:	ldr	r6, [sp, #52]	; 0x34
   14118:	cmp	r1, #0
   1411c:	beq	141d4 <close@plt+0x3310>
   14120:	str	r3, [sp, #4]
   14124:	str	r2, [sp]
   14128:	mov	r3, r1
   1412c:	ldr	r2, [pc, #940]	; 144e0 <close@plt+0x361c>
   14130:	mov	r1, #1
   14134:	bl	10e34 <__fprintf_chk@plt>
   14138:	mov	r2, #5
   1413c:	ldr	r1, [pc, #928]	; 144e4 <close@plt+0x3620>
   14140:	mov	r0, #0
   14144:	bl	10d14 <dcgettext@plt>
   14148:	ldr	r3, [pc, #920]	; 144e8 <close@plt+0x3624>
   1414c:	str	r3, [sp]
   14150:	mov	r3, r0
   14154:	ldr	r2, [pc, #912]	; 144ec <close@plt+0x3628>
   14158:	mov	r1, #1
   1415c:	mov	r0, r4
   14160:	bl	10e34 <__fprintf_chk@plt>
   14164:	mov	r1, r4
   14168:	mov	r0, #10
   1416c:	bl	10d08 <fputc_unlocked@plt>
   14170:	mov	r2, #5
   14174:	ldr	r1, [pc, #884]	; 144f0 <close@plt+0x362c>
   14178:	mov	r0, #0
   1417c:	bl	10d14 <dcgettext@plt>
   14180:	ldr	r3, [pc, #876]	; 144f4 <close@plt+0x3630>
   14184:	mov	r2, r0
   14188:	mov	r1, #1
   1418c:	mov	r0, r4
   14190:	bl	10e34 <__fprintf_chk@plt>
   14194:	mov	r1, r4
   14198:	mov	r0, #10
   1419c:	bl	10d08 <fputc_unlocked@plt>
   141a0:	cmp	r6, #9
   141a4:	ldrls	pc, [pc, r6, lsl #2]
   141a8:	b	14478 <close@plt+0x35b4>
   141ac:	andeq	r4, r1, r0, lsl r2
   141b0:	andeq	r4, r1, ip, ror #3
   141b4:	andeq	r4, r1, r8, lsl r2
   141b8:	andeq	r4, r1, r8, asr #4
   141bc:	andeq	r4, r1, r0, lsl #5
   141c0:	andeq	r4, r1, r0, asr #5
   141c4:	andeq	r4, r1, r8, lsl #6
   141c8:	andeq	r4, r1, r8, asr r3
   141cc:			; <UNDEFINED> instruction: 0x000143b0
   141d0:	andeq	r4, r1, r0, lsl r4
   141d4:	str	r3, [sp]
   141d8:	mov	r3, r2
   141dc:	ldr	r2, [pc, #788]	; 144f8 <close@plt+0x3634>
   141e0:	mov	r1, #1
   141e4:	bl	10e34 <__fprintf_chk@plt>
   141e8:	b	14138 <close@plt+0x3274>
   141ec:	mov	r2, #5
   141f0:	ldr	r1, [pc, #772]	; 144fc <close@plt+0x3638>
   141f4:	mov	r0, #0
   141f8:	bl	10d14 <dcgettext@plt>
   141fc:	ldr	r3, [r5]
   14200:	mov	r2, r0
   14204:	mov	r1, #1
   14208:	mov	r0, r4
   1420c:	bl	10e34 <__fprintf_chk@plt>
   14210:	add	sp, sp, #32
   14214:	pop	{r4, r5, r6, pc}
   14218:	mov	r2, #5
   1421c:	ldr	r1, [pc, #732]	; 14500 <close@plt+0x363c>
   14220:	mov	r0, #0
   14224:	bl	10d14 <dcgettext@plt>
   14228:	ldr	r3, [r5]
   1422c:	ldr	r2, [r5, #4]
   14230:	str	r2, [sp]
   14234:	mov	r2, r0
   14238:	mov	r1, #1
   1423c:	mov	r0, r4
   14240:	bl	10e34 <__fprintf_chk@plt>
   14244:	b	14210 <close@plt+0x334c>
   14248:	mov	r2, #5
   1424c:	ldr	r1, [pc, #688]	; 14504 <close@plt+0x3640>
   14250:	mov	r0, #0
   14254:	bl	10d14 <dcgettext@plt>
   14258:	ldr	r3, [r5]
   1425c:	ldr	r2, [r5, #8]
   14260:	str	r2, [sp, #4]
   14264:	ldr	r2, [r5, #4]
   14268:	str	r2, [sp]
   1426c:	mov	r2, r0
   14270:	mov	r1, #1
   14274:	mov	r0, r4
   14278:	bl	10e34 <__fprintf_chk@plt>
   1427c:	b	14210 <close@plt+0x334c>
   14280:	mov	r2, #5
   14284:	ldr	r1, [pc, #636]	; 14508 <close@plt+0x3644>
   14288:	mov	r0, #0
   1428c:	bl	10d14 <dcgettext@plt>
   14290:	ldr	r3, [r5]
   14294:	ldr	r2, [r5, #12]
   14298:	str	r2, [sp, #8]
   1429c:	ldr	r2, [r5, #8]
   142a0:	str	r2, [sp, #4]
   142a4:	ldr	r2, [r5, #4]
   142a8:	str	r2, [sp]
   142ac:	mov	r2, r0
   142b0:	mov	r1, #1
   142b4:	mov	r0, r4
   142b8:	bl	10e34 <__fprintf_chk@plt>
   142bc:	b	14210 <close@plt+0x334c>
   142c0:	mov	r2, #5
   142c4:	ldr	r1, [pc, #576]	; 1450c <close@plt+0x3648>
   142c8:	mov	r0, #0
   142cc:	bl	10d14 <dcgettext@plt>
   142d0:	ldr	r3, [r5]
   142d4:	ldr	r2, [r5, #16]
   142d8:	str	r2, [sp, #12]
   142dc:	ldr	r2, [r5, #12]
   142e0:	str	r2, [sp, #8]
   142e4:	ldr	r2, [r5, #8]
   142e8:	str	r2, [sp, #4]
   142ec:	ldr	r2, [r5, #4]
   142f0:	str	r2, [sp]
   142f4:	mov	r2, r0
   142f8:	mov	r1, #1
   142fc:	mov	r0, r4
   14300:	bl	10e34 <__fprintf_chk@plt>
   14304:	b	14210 <close@plt+0x334c>
   14308:	mov	r2, #5
   1430c:	ldr	r1, [pc, #508]	; 14510 <close@plt+0x364c>
   14310:	mov	r0, #0
   14314:	bl	10d14 <dcgettext@plt>
   14318:	ldr	r3, [r5]
   1431c:	ldr	r2, [r5, #20]
   14320:	str	r2, [sp, #16]
   14324:	ldr	r2, [r5, #16]
   14328:	str	r2, [sp, #12]
   1432c:	ldr	r2, [r5, #12]
   14330:	str	r2, [sp, #8]
   14334:	ldr	r2, [r5, #8]
   14338:	str	r2, [sp, #4]
   1433c:	ldr	r2, [r5, #4]
   14340:	str	r2, [sp]
   14344:	mov	r2, r0
   14348:	mov	r1, #1
   1434c:	mov	r0, r4
   14350:	bl	10e34 <__fprintf_chk@plt>
   14354:	b	14210 <close@plt+0x334c>
   14358:	mov	r2, #5
   1435c:	ldr	r1, [pc, #432]	; 14514 <close@plt+0x3650>
   14360:	mov	r0, #0
   14364:	bl	10d14 <dcgettext@plt>
   14368:	ldr	r3, [r5]
   1436c:	ldr	r2, [r5, #24]
   14370:	str	r2, [sp, #20]
   14374:	ldr	r2, [r5, #20]
   14378:	str	r2, [sp, #16]
   1437c:	ldr	r2, [r5, #16]
   14380:	str	r2, [sp, #12]
   14384:	ldr	r2, [r5, #12]
   14388:	str	r2, [sp, #8]
   1438c:	ldr	r2, [r5, #8]
   14390:	str	r2, [sp, #4]
   14394:	ldr	r2, [r5, #4]
   14398:	str	r2, [sp]
   1439c:	mov	r2, r0
   143a0:	mov	r1, #1
   143a4:	mov	r0, r4
   143a8:	bl	10e34 <__fprintf_chk@plt>
   143ac:	b	14210 <close@plt+0x334c>
   143b0:	mov	r2, #5
   143b4:	ldr	r1, [pc, #348]	; 14518 <close@plt+0x3654>
   143b8:	mov	r0, #0
   143bc:	bl	10d14 <dcgettext@plt>
   143c0:	ldr	r3, [r5]
   143c4:	ldr	r2, [r5, #28]
   143c8:	str	r2, [sp, #24]
   143cc:	ldr	r2, [r5, #24]
   143d0:	str	r2, [sp, #20]
   143d4:	ldr	r2, [r5, #20]
   143d8:	str	r2, [sp, #16]
   143dc:	ldr	r2, [r5, #16]
   143e0:	str	r2, [sp, #12]
   143e4:	ldr	r2, [r5, #12]
   143e8:	str	r2, [sp, #8]
   143ec:	ldr	r2, [r5, #8]
   143f0:	str	r2, [sp, #4]
   143f4:	ldr	r2, [r5, #4]
   143f8:	str	r2, [sp]
   143fc:	mov	r2, r0
   14400:	mov	r1, #1
   14404:	mov	r0, r4
   14408:	bl	10e34 <__fprintf_chk@plt>
   1440c:	b	14210 <close@plt+0x334c>
   14410:	mov	r2, #5
   14414:	ldr	r1, [pc, #256]	; 1451c <close@plt+0x3658>
   14418:	mov	r0, #0
   1441c:	bl	10d14 <dcgettext@plt>
   14420:	ldr	r3, [r5]
   14424:	ldr	r2, [r5, #32]
   14428:	str	r2, [sp, #28]
   1442c:	ldr	r2, [r5, #28]
   14430:	str	r2, [sp, #24]
   14434:	ldr	r2, [r5, #24]
   14438:	str	r2, [sp, #20]
   1443c:	ldr	r2, [r5, #20]
   14440:	str	r2, [sp, #16]
   14444:	ldr	r2, [r5, #16]
   14448:	str	r2, [sp, #12]
   1444c:	ldr	r2, [r5, #12]
   14450:	str	r2, [sp, #8]
   14454:	ldr	r2, [r5, #8]
   14458:	str	r2, [sp, #4]
   1445c:	ldr	r2, [r5, #4]
   14460:	str	r2, [sp]
   14464:	mov	r2, r0
   14468:	mov	r1, #1
   1446c:	mov	r0, r4
   14470:	bl	10e34 <__fprintf_chk@plt>
   14474:	b	14210 <close@plt+0x334c>
   14478:	mov	r2, #5
   1447c:	ldr	r1, [pc, #156]	; 14520 <close@plt+0x365c>
   14480:	mov	r0, #0
   14484:	bl	10d14 <dcgettext@plt>
   14488:	ldr	r3, [r5]
   1448c:	ldr	r2, [r5, #32]
   14490:	str	r2, [sp, #28]
   14494:	ldr	r2, [r5, #28]
   14498:	str	r2, [sp, #24]
   1449c:	ldr	r2, [r5, #24]
   144a0:	str	r2, [sp, #20]
   144a4:	ldr	r2, [r5, #20]
   144a8:	str	r2, [sp, #16]
   144ac:	ldr	r2, [r5, #16]
   144b0:	str	r2, [sp, #12]
   144b4:	ldr	r2, [r5, #12]
   144b8:	str	r2, [sp, #8]
   144bc:	ldr	r2, [r5, #8]
   144c0:	str	r2, [sp, #4]
   144c4:	ldr	r2, [r5, #4]
   144c8:	str	r2, [sp]
   144cc:	mov	r2, r0
   144d0:	mov	r1, #1
   144d4:	mov	r0, r4
   144d8:	bl	10e34 <__fprintf_chk@plt>
   144dc:	b	14210 <close@plt+0x334c>
   144e0:	andeq	r6, r1, r8, lsr r4
   144e4:	andeq	r6, r1, ip, asr #8
   144e8:	andeq	r0, r0, r6, ror #15
   144ec:	andeq	r6, r1, r4, lsr #14
   144f0:	andeq	r6, r1, r0, asr r4
   144f4:	strdeq	r6, [r1], -ip
   144f8:	andeq	r6, r1, r4, asr #8
   144fc:	andeq	r6, r1, r0, lsr #10
   14500:	andeq	r6, r1, r0, lsr r5
   14504:	andeq	r6, r1, r8, asr #10
   14508:	andeq	r6, r1, r4, ror #10
   1450c:	andeq	r6, r1, r4, lsl #11
   14510:	andeq	r6, r1, r8, lsr #11
   14514:	ldrdeq	r6, [r1], -r0
   14518:	strdeq	r6, [r1], -ip
   1451c:	andeq	r6, r1, ip, lsr #12
   14520:	andeq	r6, r1, r0, ror #12
   14524:	push	{r4, r5, lr}
   14528:	sub	sp, sp, #12
   1452c:	ldr	r5, [sp, #24]
   14530:	ldr	ip, [r5]
   14534:	cmp	ip, #0
   14538:	beq	14568 <close@plt+0x36a4>
   1453c:	mov	lr, r5
   14540:	mov	ip, #0
   14544:	add	ip, ip, #1
   14548:	ldr	r4, [lr, #4]!
   1454c:	cmp	r4, #0
   14550:	bne	14544 <close@plt+0x3680>
   14554:	str	ip, [sp, #4]
   14558:	str	r5, [sp]
   1455c:	bl	14104 <close@plt+0x3240>
   14560:	add	sp, sp, #12
   14564:	pop	{r4, r5, pc}
   14568:	mov	ip, #0
   1456c:	b	14554 <close@plt+0x3690>
   14570:	push	{r4, r5, lr}
   14574:	sub	sp, sp, #52	; 0x34
   14578:	ldr	r4, [sp, #64]	; 0x40
   1457c:	sub	r4, r4, #4
   14580:	add	r5, sp, #4
   14584:	mov	ip, #0
   14588:	ldr	lr, [r4, #4]!
   1458c:	str	lr, [r5, #4]!
   14590:	cmp	lr, #0
   14594:	beq	145a4 <close@plt+0x36e0>
   14598:	add	ip, ip, #1
   1459c:	cmp	ip, #10
   145a0:	bne	14588 <close@plt+0x36c4>
   145a4:	str	ip, [sp, #4]
   145a8:	add	ip, sp, #8
   145ac:	str	ip, [sp]
   145b0:	bl	14104 <close@plt+0x3240>
   145b4:	add	sp, sp, #52	; 0x34
   145b8:	pop	{r4, r5, pc}
   145bc:	push	{r3}		; (str r3, [sp, #-4]!)
   145c0:	push	{lr}		; (str lr, [sp, #-4]!)
   145c4:	sub	sp, sp, #16
   145c8:	add	r3, sp, #24
   145cc:	str	r3, [sp, #12]
   145d0:	str	r3, [sp]
   145d4:	ldr	r3, [sp, #20]
   145d8:	bl	14570 <close@plt+0x36ac>
   145dc:	add	sp, sp, #16
   145e0:	pop	{lr}		; (ldr lr, [sp], #4)
   145e4:	add	sp, sp, #4
   145e8:	bx	lr
   145ec:	push	{r4, lr}
   145f0:	ldr	r3, [pc, #112]	; 14668 <close@plt+0x37a4>
   145f4:	ldr	r1, [r3]
   145f8:	mov	r0, #10
   145fc:	bl	10d08 <fputc_unlocked@plt>
   14600:	mov	r2, #5
   14604:	ldr	r1, [pc, #96]	; 1466c <close@plt+0x37a8>
   14608:	mov	r0, #0
   1460c:	bl	10d14 <dcgettext@plt>
   14610:	ldr	r2, [pc, #88]	; 14670 <close@plt+0x37ac>
   14614:	mov	r1, r0
   14618:	mov	r0, #1
   1461c:	bl	10e1c <__printf_chk@plt>
   14620:	mov	r2, #5
   14624:	ldr	r1, [pc, #72]	; 14674 <close@plt+0x37b0>
   14628:	mov	r0, #0
   1462c:	bl	10d14 <dcgettext@plt>
   14630:	ldr	r3, [pc, #64]	; 14678 <close@plt+0x37b4>
   14634:	ldr	r2, [pc, #64]	; 1467c <close@plt+0x37b8>
   14638:	mov	r1, r0
   1463c:	mov	r0, #1
   14640:	bl	10e1c <__printf_chk@plt>
   14644:	mov	r2, #5
   14648:	ldr	r1, [pc, #48]	; 14680 <close@plt+0x37bc>
   1464c:	mov	r0, #0
   14650:	bl	10d14 <dcgettext@plt>
   14654:	ldr	r2, [pc, #40]	; 14684 <close@plt+0x37c0>
   14658:	mov	r1, r0
   1465c:	mov	r0, #1
   14660:	bl	10e1c <__printf_chk@plt>
   14664:	pop	{r4, pc}
   14668:	andeq	r7, r2, r4, asr r1
   1466c:	muleq	r1, ip, r6
   14670:			; <UNDEFINED> instruction: 0x000166b0
   14674:	andeq	r6, r1, r8, asr #13
   14678:	andeq	r6, r1, ip, rrx
   1467c:	muleq	r1, r4, r0
   14680:	ldrdeq	r6, [r1], -ip
   14684:	andeq	r6, r1, r4, lsl #14
   14688:	push	{r4, lr}
   1468c:	bl	14e38 <close@plt+0x3f74>
   14690:	cmp	r0, #0
   14694:	popne	{r4, pc}
   14698:	bl	14c2c <close@plt+0x3d68>
   1469c:	push	{r4, lr}
   146a0:	bl	14e38 <close@plt+0x3f74>
   146a4:	cmp	r0, #0
   146a8:	popne	{r4, pc}
   146ac:	bl	14c2c <close@plt+0x3d68>
   146b0:	push	{r4, lr}
   146b4:	bl	14688 <close@plt+0x37c4>
   146b8:	pop	{r4, pc}
   146bc:	push	{r4, r5, r6, lr}
   146c0:	mov	r5, r0
   146c4:	mov	r4, r1
   146c8:	bl	14e68 <close@plt+0x3fa4>
   146cc:	cmp	r0, #0
   146d0:	popne	{r4, r5, r6, pc}
   146d4:	adds	r4, r4, #0
   146d8:	movne	r4, #1
   146dc:	cmp	r5, #0
   146e0:	orreq	r4, r4, #1
   146e4:	cmp	r4, #0
   146e8:	popeq	{r4, r5, r6, pc}
   146ec:	bl	14c2c <close@plt+0x3d68>
   146f0:	push	{r4, lr}
   146f4:	cmp	r1, #0
   146f8:	orreq	r1, r1, #1
   146fc:	bl	14e68 <close@plt+0x3fa4>
   14700:	cmp	r0, #0
   14704:	popne	{r4, pc}
   14708:	bl	14c2c <close@plt+0x3d68>
   1470c:	push	{r4, r5, r6, lr}
   14710:	mov	r6, r0
   14714:	mov	r5, r1
   14718:	mov	r4, r2
   1471c:	bl	153cc <close@plt+0x4508>
   14720:	cmp	r0, #0
   14724:	popne	{r4, r5, r6, pc}
   14728:	cmp	r6, #0
   1472c:	beq	1473c <close@plt+0x3878>
   14730:	cmp	r5, #0
   14734:	cmpne	r4, #0
   14738:	popeq	{r4, r5, r6, pc}
   1473c:	bl	14c2c <close@plt+0x3d68>
   14740:	push	{r4, lr}
   14744:	bl	1470c <close@plt+0x3848>
   14748:	pop	{r4, pc}
   1474c:	push	{r4, lr}
   14750:	mov	ip, r1
   14754:	mov	r3, r2
   14758:	cmp	r2, #0
   1475c:	cmpne	r1, #0
   14760:	moveq	r3, #1
   14764:	moveq	ip, r3
   14768:	mov	r2, r3
   1476c:	mov	r1, ip
   14770:	bl	153cc <close@plt+0x4508>
   14774:	cmp	r0, #0
   14778:	popne	{r4, pc}
   1477c:	bl	14c2c <close@plt+0x3d68>
   14780:	push	{r4, lr}
   14784:	mov	r2, r1
   14788:	mov	r1, r0
   1478c:	mov	r0, #0
   14790:	bl	1470c <close@plt+0x3848>
   14794:	pop	{r4, pc}
   14798:	push	{r4, lr}
   1479c:	mov	r2, r1
   147a0:	mov	r1, r0
   147a4:	mov	r0, #0
   147a8:	bl	1474c <close@plt+0x3888>
   147ac:	pop	{r4, pc}
   147b0:	push	{r4, r5, r6, r7, r8, lr}
   147b4:	mov	r5, r1
   147b8:	mov	r6, r2
   147bc:	ldr	r4, [r1]
   147c0:	subs	r7, r0, #0
   147c4:	beq	147e0 <close@plt+0x391c>
   147c8:	lsr	r2, r4, #1
   147cc:	add	r3, r2, #1
   147d0:	mvn	r3, r3
   147d4:	cmp	r4, r3
   147d8:	bls	14804 <close@plt+0x3940>
   147dc:	bl	14c2c <close@plt+0x3d68>
   147e0:	cmp	r4, #0
   147e4:	bne	1480c <close@plt+0x3948>
   147e8:	mov	r1, r2
   147ec:	mov	r0, #64	; 0x40
   147f0:	bl	15418 <close@plt+0x4554>
   147f4:	cmp	r0, #0
   147f8:	movne	r4, r0
   147fc:	addeq	r4, r0, #1
   14800:	b	1480c <close@plt+0x3948>
   14804:	add	r4, r4, #1
   14808:	add	r4, r4, r2
   1480c:	mov	r2, r6
   14810:	mov	r1, r4
   14814:	mov	r0, r7
   14818:	bl	1470c <close@plt+0x3848>
   1481c:	str	r4, [r5]
   14820:	pop	{r4, r5, r6, r7, r8, pc}
   14824:	push	{r4, lr}
   14828:	mov	r2, #1
   1482c:	bl	147b0 <close@plt+0x38ec>
   14830:	pop	{r4, pc}
   14834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14838:	sub	sp, sp, #12
   1483c:	mov	fp, r0
   14840:	mov	sl, r1
   14844:	mov	r9, r2
   14848:	mov	r7, r3
   1484c:	ldr	r6, [sp, #48]	; 0x30
   14850:	ldr	r5, [r1]
   14854:	asrs	r4, r5, #1
   14858:	bmi	149b4 <close@plt+0x3af0>
   1485c:	cmp	r5, #0
   14860:	blt	149c8 <close@plt+0x3b04>
   14864:	mvn	r3, #-2147483648	; 0x80000000
   14868:	sub	r3, r3, r4
   1486c:	cmp	r5, r3
   14870:	movle	r3, #0
   14874:	movgt	r3, #1
   14878:	cmp	r3, #0
   1487c:	addeq	r4, r4, r5
   14880:	mvnne	r4, #-2147483648	; 0x80000000
   14884:	mvn	r8, r7
   14888:	lsr	r8, r8, #31
   1488c:	cmp	r7, r4
   14890:	movge	r3, #0
   14894:	andlt	r3, r8, #1
   14898:	cmp	r3, #0
   1489c:	movne	r4, r7
   148a0:	cmp	r6, #0
   148a4:	blt	149dc <close@plt+0x3b18>
   148a8:	cmp	r6, #0
   148ac:	beq	14a88 <close@plt+0x3bc4>
   148b0:	cmp	r4, #0
   148b4:	blt	14a38 <close@plt+0x3b74>
   148b8:	mov	r1, r6
   148bc:	mvn	r0, #-2147483648	; 0x80000000
   148c0:	bl	15624 <close@plt+0x4760>
   148c4:	cmp	r0, r4
   148c8:	movge	r0, #0
   148cc:	movlt	r0, #1
   148d0:	cmp	r0, #0
   148d4:	mvnne	r3, #-2147483648	; 0x80000000
   148d8:	strne	r3, [sp, #4]
   148dc:	beq	14a70 <close@plt+0x3bac>
   148e0:	mov	r1, r6
   148e4:	ldr	r0, [sp, #4]
   148e8:	bl	15624 <close@plt+0x4760>
   148ec:	mov	r4, r0
   148f0:	mov	r1, r6
   148f4:	ldr	r0, [sp, #4]
   148f8:	bl	15844 <close@plt+0x4980>
   148fc:	ldr	r3, [sp, #4]
   14900:	sub	r1, r3, r1
   14904:	cmp	fp, #0
   14908:	moveq	r3, #0
   1490c:	streq	r3, [sl]
   14910:	sub	r3, r4, r5
   14914:	cmp	r3, r9
   14918:	bge	149a0 <close@plt+0x3adc>
   1491c:	cmp	r9, #0
   14920:	blt	14a94 <close@plt+0x3bd0>
   14924:	cmp	r5, #0
   14928:	blt	14aa8 <close@plt+0x3be4>
   1492c:	mvn	r3, #-2147483648	; 0x80000000
   14930:	sub	r3, r3, r9
   14934:	cmp	r5, r3
   14938:	movle	r3, #0
   1493c:	movgt	r3, #1
   14940:	cmp	r3, #0
   14944:	bne	14b50 <close@plt+0x3c8c>
   14948:	add	r5, r5, r9
   1494c:	mov	r4, r5
   14950:	cmp	r7, r5
   14954:	movge	r7, #0
   14958:	andlt	r7, r8, #1
   1495c:	cmp	r7, #0
   14960:	bne	14b50 <close@plt+0x3c8c>
   14964:	cmp	r6, #0
   14968:	blt	14abc <close@plt+0x3bf8>
   1496c:	cmp	r6, #0
   14970:	beq	1499c <close@plt+0x3ad8>
   14974:	cmp	r5, #0
   14978:	blt	14b18 <close@plt+0x3c54>
   1497c:	mov	r1, r6
   14980:	mvn	r0, #-2147483648	; 0x80000000
   14984:	bl	15624 <close@plt+0x4760>
   14988:	cmp	r5, r0
   1498c:	movle	r0, #0
   14990:	movgt	r0, #1
   14994:	cmp	r0, #0
   14998:	bne	14b50 <close@plt+0x3c8c>
   1499c:	mul	r1, r5, r6
   149a0:	mov	r0, fp
   149a4:	bl	146bc <close@plt+0x37f8>
   149a8:	str	r4, [sl]
   149ac:	add	sp, sp, #12
   149b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149b4:	rsb	r3, r4, #-2147483648	; 0x80000000
   149b8:	cmp	r5, r3
   149bc:	movge	r3, #0
   149c0:	movlt	r3, #1
   149c4:	b	14878 <close@plt+0x39b4>
   149c8:	rsb	r3, r5, #-2147483648	; 0x80000000
   149cc:	cmp	r4, r3
   149d0:	movge	r3, #0
   149d4:	movlt	r3, #1
   149d8:	b	14878 <close@plt+0x39b4>
   149dc:	cmp	r4, #0
   149e0:	blt	14a08 <close@plt+0x3b44>
   149e4:	cmn	r6, #1
   149e8:	beq	14a24 <close@plt+0x3b60>
   149ec:	mov	r1, r6
   149f0:	mov	r0, #-2147483648	; 0x80000000
   149f4:	bl	15624 <close@plt+0x4760>
   149f8:	cmp	r0, r4
   149fc:	movge	r0, #0
   14a00:	movlt	r0, #1
   14a04:	b	148d0 <close@plt+0x3a0c>
   14a08:	mov	r1, r6
   14a0c:	mvn	r0, #-2147483648	; 0x80000000
   14a10:	bl	15624 <close@plt+0x4760>
   14a14:	cmp	r0, r4
   14a18:	movle	r0, #0
   14a1c:	movgt	r0, #1
   14a20:	b	148d0 <close@plt+0x3a0c>
   14a24:	add	r0, r4, #-2147483648	; 0x80000000
   14a28:	cmp	r0, #0
   14a2c:	movle	r0, #0
   14a30:	movgt	r0, #1
   14a34:	b	148d0 <close@plt+0x3a0c>
   14a38:	cmn	r4, #1
   14a3c:	beq	14a5c <close@plt+0x3b98>
   14a40:	mov	r1, r4
   14a44:	mov	r0, #-2147483648	; 0x80000000
   14a48:	bl	15624 <close@plt+0x4760>
   14a4c:	cmp	r6, r0
   14a50:	movle	r0, #0
   14a54:	movgt	r0, #1
   14a58:	b	148d0 <close@plt+0x3a0c>
   14a5c:	add	r0, r6, #-2147483648	; 0x80000000
   14a60:	cmp	r0, #0
   14a64:	movle	r0, #0
   14a68:	movgt	r0, #1
   14a6c:	b	148d0 <close@plt+0x3a0c>
   14a70:	mul	r1, r6, r4
   14a74:	cmp	r1, #63	; 0x3f
   14a78:	movle	r3, #64	; 0x40
   14a7c:	strle	r3, [sp, #4]
   14a80:	bgt	14904 <close@plt+0x3a40>
   14a84:	b	148e0 <close@plt+0x3a1c>
   14a88:	mov	r3, #64	; 0x40
   14a8c:	str	r3, [sp, #4]
   14a90:	b	148e0 <close@plt+0x3a1c>
   14a94:	rsb	r3, r9, #-2147483648	; 0x80000000
   14a98:	cmp	r5, r3
   14a9c:	movge	r3, #0
   14aa0:	movlt	r3, #1
   14aa4:	b	14940 <close@plt+0x3a7c>
   14aa8:	rsb	r3, r5, #-2147483648	; 0x80000000
   14aac:	cmp	r9, r3
   14ab0:	movge	r3, #0
   14ab4:	movlt	r3, #1
   14ab8:	b	14940 <close@plt+0x3a7c>
   14abc:	cmp	r5, #0
   14ac0:	blt	14ae8 <close@plt+0x3c24>
   14ac4:	cmn	r6, #1
   14ac8:	beq	14b04 <close@plt+0x3c40>
   14acc:	mov	r1, r6
   14ad0:	mov	r0, #-2147483648	; 0x80000000
   14ad4:	bl	15624 <close@plt+0x4760>
   14ad8:	cmp	r5, r0
   14adc:	movle	r0, #0
   14ae0:	movgt	r0, #1
   14ae4:	b	14994 <close@plt+0x3ad0>
   14ae8:	mov	r1, r6
   14aec:	mvn	r0, #-2147483648	; 0x80000000
   14af0:	bl	15624 <close@plt+0x4760>
   14af4:	cmp	r5, r0
   14af8:	movge	r0, #0
   14afc:	movlt	r0, #1
   14b00:	b	14994 <close@plt+0x3ad0>
   14b04:	add	r0, r5, #-2147483648	; 0x80000000
   14b08:	cmp	r0, #0
   14b0c:	movle	r0, #0
   14b10:	movgt	r0, #1
   14b14:	b	14994 <close@plt+0x3ad0>
   14b18:	cmn	r5, #1
   14b1c:	beq	14b3c <close@plt+0x3c78>
   14b20:	mov	r1, r5
   14b24:	mov	r0, #-2147483648	; 0x80000000
   14b28:	bl	15624 <close@plt+0x4760>
   14b2c:	cmp	r6, r0
   14b30:	movle	r0, #0
   14b34:	movgt	r0, #1
   14b38:	b	14994 <close@plt+0x3ad0>
   14b3c:	add	r0, r6, #-2147483648	; 0x80000000
   14b40:	cmp	r0, #0
   14b44:	movle	r0, #0
   14b48:	movgt	r0, #1
   14b4c:	b	14994 <close@plt+0x3ad0>
   14b50:	bl	14c2c <close@plt+0x3d68>
   14b54:	push	{r4, lr}
   14b58:	bl	14de8 <close@plt+0x3f24>
   14b5c:	cmp	r0, #0
   14b60:	popne	{r4, pc}
   14b64:	bl	14c2c <close@plt+0x3d68>
   14b68:	push	{r4, lr}
   14b6c:	mov	r1, #1
   14b70:	bl	14b54 <close@plt+0x3c90>
   14b74:	pop	{r4, pc}
   14b78:	push	{r4, lr}
   14b7c:	bl	14de8 <close@plt+0x3f24>
   14b80:	cmp	r0, #0
   14b84:	popne	{r4, pc}
   14b88:	bl	14c2c <close@plt+0x3d68>
   14b8c:	push	{r4, lr}
   14b90:	mov	r1, #1
   14b94:	bl	14b78 <close@plt+0x3cb4>
   14b98:	pop	{r4, pc}
   14b9c:	push	{r4, r5, r6, lr}
   14ba0:	mov	r5, r0
   14ba4:	mov	r4, r1
   14ba8:	mov	r0, r1
   14bac:	bl	14688 <close@plt+0x37c4>
   14bb0:	mov	r2, r4
   14bb4:	mov	r1, r5
   14bb8:	bl	10cd8 <memcpy@plt>
   14bbc:	pop	{r4, r5, r6, pc}
   14bc0:	push	{r4, r5, r6, lr}
   14bc4:	mov	r5, r0
   14bc8:	mov	r4, r1
   14bcc:	mov	r0, r1
   14bd0:	bl	1469c <close@plt+0x37d8>
   14bd4:	mov	r2, r4
   14bd8:	mov	r1, r5
   14bdc:	bl	10cd8 <memcpy@plt>
   14be0:	pop	{r4, r5, r6, pc}
   14be4:	push	{r4, r5, r6, lr}
   14be8:	mov	r5, r0
   14bec:	mov	r4, r1
   14bf0:	add	r0, r1, #1
   14bf4:	bl	1469c <close@plt+0x37d8>
   14bf8:	mov	r2, #0
   14bfc:	strb	r2, [r0, r4]
   14c00:	mov	r2, r4
   14c04:	mov	r1, r5
   14c08:	bl	10cd8 <memcpy@plt>
   14c0c:	pop	{r4, r5, r6, pc}
   14c10:	push	{r4, lr}
   14c14:	mov	r4, r0
   14c18:	bl	10dec <strlen@plt>
   14c1c:	add	r1, r0, #1
   14c20:	mov	r0, r4
   14c24:	bl	14b9c <close@plt+0x3cd8>
   14c28:	pop	{r4, pc}
   14c2c:	push	{r4, lr}
   14c30:	ldr	r3, [pc, #40]	; 14c60 <close@plt+0x3d9c>
   14c34:	ldr	r4, [r3]
   14c38:	mov	r2, #5
   14c3c:	ldr	r1, [pc, #32]	; 14c64 <close@plt+0x3da0>
   14c40:	mov	r0, #0
   14c44:	bl	10d14 <dcgettext@plt>
   14c48:	mov	r3, r0
   14c4c:	ldr	r2, [pc, #20]	; 14c68 <close@plt+0x3da4>
   14c50:	mov	r1, #0
   14c54:	mov	r0, r4
   14c58:	bl	10d80 <error@plt>
   14c5c:	bl	10eb8 <abort@plt>
   14c60:	strdeq	r7, [r2], -r0
   14c64:	andeq	r6, r1, r4, asr r7
   14c68:	andeq	r6, r1, ip, lsl #6
   14c6c:	push	{r4, r5, r6, r7, r8, lr}
   14c70:	sub	sp, sp, #8
   14c74:	mov	r4, r0
   14c78:	mov	r6, r1
   14c7c:	mov	r8, r2
   14c80:	mov	r7, r3
   14c84:	mov	r2, #5
   14c88:	ldr	r1, [pc, #156]	; 14d2c <close@plt+0x3e68>
   14c8c:	mov	r0, #0
   14c90:	bl	10d14 <dcgettext@plt>
   14c94:	mov	r2, r0
   14c98:	mov	r1, r4
   14c9c:	mov	r0, #0
   14ca0:	bl	10d80 <error@plt>
   14ca4:	mov	r2, #5
   14ca8:	ldr	r1, [pc, #128]	; 14d30 <close@plt+0x3e6c>
   14cac:	mov	r0, #0
   14cb0:	bl	10d14 <dcgettext@plt>
   14cb4:	mov	r2, r0
   14cb8:	mov	r1, #0
   14cbc:	mov	r0, r1
   14cc0:	bl	10d80 <error@plt>
   14cc4:	ldr	r3, [pc, #104]	; 14d34 <close@plt+0x3e70>
   14cc8:	ldr	r4, [r3]
   14ccc:	mov	r2, #5
   14cd0:	ldr	r1, [pc, #96]	; 14d38 <close@plt+0x3e74>
   14cd4:	mov	r0, #0
   14cd8:	bl	10d14 <dcgettext@plt>
   14cdc:	mov	r5, r0
   14ce0:	mov	r3, r8
   14ce4:	mov	r2, r6
   14ce8:	mov	r1, #8
   14cec:	mov	r0, #0
   14cf0:	bl	13dc8 <close@plt+0x2f04>
   14cf4:	mov	r6, r0
   14cf8:	ldr	r3, [sp, #32]
   14cfc:	mov	r2, r7
   14d00:	mov	r1, #8
   14d04:	mov	r0, #1
   14d08:	bl	13dc8 <close@plt+0x2f04>
   14d0c:	str	r0, [sp]
   14d10:	mov	r3, r6
   14d14:	mov	r2, r5
   14d18:	mov	r1, #0
   14d1c:	mov	r0, r4
   14d20:	bl	10d80 <error@plt>
   14d24:	add	sp, sp, #8
   14d28:	pop	{r4, r5, r6, r7, r8, pc}
   14d2c:	andeq	r6, r1, r8, ror #14
   14d30:	andeq	r6, r1, r4, lsl #15
   14d34:	strdeq	r7, [r2], -r0
   14d38:			; <UNDEFINED> instruction: 0x000167b0
   14d3c:	push	{r4, r5, r6, r7, r8, lr}
   14d40:	sub	sp, sp, #8
   14d44:	mov	r5, r0
   14d48:	mov	r6, r1
   14d4c:	mov	r7, r2
   14d50:	mov	r8, r3
   14d54:	bl	152f0 <close@plt+0x442c>
   14d58:	mov	r4, r0
   14d5c:	bl	10df8 <__errno_location@plt>
   14d60:	ldr	r0, [r0]
   14d64:	cmp	r0, #0
   14d68:	bne	14d78 <close@plt+0x3eb4>
   14d6c:	mov	r0, r4
   14d70:	add	sp, sp, #8
   14d74:	pop	{r4, r5, r6, r7, r8, pc}
   14d78:	str	r8, [sp]
   14d7c:	mov	r3, r7
   14d80:	mov	r2, r6
   14d84:	mov	r1, r5
   14d88:	bl	14c6c <close@plt+0x3da8>
   14d8c:	b	14d6c <close@plt+0x3ea8>
   14d90:	push	{r4, r5, r6, r7, r8, lr}
   14d94:	sub	sp, sp, #8
   14d98:	mov	r6, r0
   14d9c:	mov	r7, r1
   14da0:	mov	r8, r2
   14da4:	mov	r4, r3
   14da8:	bl	1536c <close@plt+0x44a8>
   14dac:	mov	r5, r0
   14db0:	bl	10df8 <__errno_location@plt>
   14db4:	ldr	r0, [r0]
   14db8:	cmp	r0, #0
   14dbc:	bne	14dcc <close@plt+0x3f08>
   14dc0:	mov	r0, r5
   14dc4:	add	sp, sp, #8
   14dc8:	pop	{r4, r5, r6, r7, r8, pc}
   14dcc:	sub	r4, r4, #1
   14dd0:	str	r4, [sp]
   14dd4:	mov	r3, r8
   14dd8:	sub	r2, r7, #1
   14ddc:	mov	r1, r6
   14de0:	bl	14c6c <close@plt+0x3da8>
   14de4:	b	14dc0 <close@plt+0x3efc>
   14de8:	push	{r4, lr}
   14dec:	mov	r2, r0
   14df0:	mov	r3, r1
   14df4:	cmp	r1, #0
   14df8:	cmpne	r0, #0
   14dfc:	moveq	r3, #1
   14e00:	moveq	r2, r3
   14e04:	umull	r0, r1, r2, r3
   14e08:	cmp	r0, #0
   14e0c:	cmpge	r1, #0
   14e10:	bne	14e24 <close@plt+0x3f60>
   14e14:	mov	r1, r3
   14e18:	mov	r0, r2
   14e1c:	bl	10c78 <calloc@plt>
   14e20:	pop	{r4, pc}
   14e24:	bl	10df8 <__errno_location@plt>
   14e28:	mov	r3, #12
   14e2c:	str	r3, [r0]
   14e30:	mov	r0, #0
   14e34:	pop	{r4, pc}
   14e38:	push	{r4, lr}
   14e3c:	cmp	r0, #0
   14e40:	moveq	r0, #1
   14e44:	cmp	r0, #0
   14e48:	blt	14e54 <close@plt+0x3f90>
   14e4c:	bl	10d98 <malloc@plt>
   14e50:	pop	{r4, pc}
   14e54:	bl	10df8 <__errno_location@plt>
   14e58:	mov	r3, #12
   14e5c:	str	r3, [r0]
   14e60:	mov	r0, #0
   14e64:	pop	{r4, pc}
   14e68:	push	{r4, lr}
   14e6c:	cmp	r0, #0
   14e70:	beq	14e8c <close@plt+0x3fc8>
   14e74:	cmp	r1, #0
   14e78:	beq	14e98 <close@plt+0x3fd4>
   14e7c:	cmp	r1, #0
   14e80:	blt	14ea4 <close@plt+0x3fe0>
   14e84:	bl	10d20 <realloc@plt>
   14e88:	pop	{r4, pc}
   14e8c:	mov	r0, r1
   14e90:	bl	14e38 <close@plt+0x3f74>
   14e94:	pop	{r4, pc}
   14e98:	bl	15188 <close@plt+0x42c4>
   14e9c:	mov	r0, #0
   14ea0:	pop	{r4, pc}
   14ea4:	bl	10df8 <__errno_location@plt>
   14ea8:	mov	r3, #12
   14eac:	str	r3, [r0]
   14eb0:	mov	r0, #0
   14eb4:	pop	{r4, pc}
   14eb8:	push	{r4, r5, r6, lr}
   14ebc:	mov	r5, r0
   14ec0:	bl	10d68 <__fpending@plt>
   14ec4:	mov	r6, r0
   14ec8:	ldr	r4, [r5]
   14ecc:	and	r4, r4, #32
   14ed0:	mov	r0, r5
   14ed4:	bl	12044 <close@plt+0x1180>
   14ed8:	cmp	r4, #0
   14edc:	bne	14f04 <close@plt+0x4040>
   14ee0:	cmp	r0, #0
   14ee4:	popeq	{r4, r5, r6, pc}
   14ee8:	cmp	r6, #0
   14eec:	bne	14f20 <close@plt+0x405c>
   14ef0:	bl	10df8 <__errno_location@plt>
   14ef4:	ldr	r0, [r0]
   14ef8:	subs	r0, r0, #9
   14efc:	mvnne	r0, #0
   14f00:	pop	{r4, r5, r6, pc}
   14f04:	cmp	r0, #0
   14f08:	bne	14f28 <close@plt+0x4064>
   14f0c:	bl	10df8 <__errno_location@plt>
   14f10:	mov	r3, #0
   14f14:	str	r3, [r0]
   14f18:	mvn	r0, #0
   14f1c:	pop	{r4, r5, r6, pc}
   14f20:	mvn	r0, #0
   14f24:	pop	{r4, r5, r6, pc}
   14f28:	mvn	r0, #0
   14f2c:	pop	{r4, r5, r6, pc}
   14f30:	push	{r1, r2, r3}
   14f34:	push	{r4, r5, r6, lr}
   14f38:	sub	sp, sp, #12
   14f3c:	mov	r5, r0
   14f40:	ldr	r1, [sp, #28]
   14f44:	add	r3, sp, #32
   14f48:	str	r3, [sp, #4]
   14f4c:	cmp	r1, #0
   14f50:	beq	14f98 <close@plt+0x40d4>
   14f54:	ldr	r3, [pc, #540]	; 15178 <close@plt+0x42b4>
   14f58:	cmp	r1, r3
   14f5c:	beq	14fc8 <close@plt+0x4104>
   14f60:	cmp	r1, #11
   14f64:	beq	15168 <close@plt+0x42a4>
   14f68:	bgt	150f4 <close@plt+0x4230>
   14f6c:	cmp	r1, #3
   14f70:	beq	15168 <close@plt+0x42a4>
   14f74:	ble	150b4 <close@plt+0x41f0>
   14f78:	cmp	r1, #8
   14f7c:	beq	150d4 <close@plt+0x4210>
   14f80:	ble	150cc <close@plt+0x4208>
   14f84:	cmp	r1, #9
   14f88:	beq	15168 <close@plt+0x42a4>
   14f8c:	cmp	r1, #10
   14f90:	bne	1512c <close@plt+0x4268>
   14f94:	b	150d4 <close@plt+0x4210>
   14f98:	ldr	r3, [sp, #4]
   14f9c:	add	r2, r3, #4
   14fa0:	str	r2, [sp, #4]
   14fa4:	ldr	r2, [r3]
   14fa8:	mov	r1, #0
   14fac:	bl	10e58 <fcntl64@plt>
   14fb0:	mov	r4, r0
   14fb4:	mov	r0, r4
   14fb8:	add	sp, sp, #12
   14fbc:	pop	{r4, r5, r6, lr}
   14fc0:	add	sp, sp, #12
   14fc4:	bx	lr
   14fc8:	ldr	r3, [sp, #4]
   14fcc:	add	r2, r3, #4
   14fd0:	str	r2, [sp, #4]
   14fd4:	ldr	r6, [r3]
   14fd8:	ldr	r3, [pc, #412]	; 1517c <close@plt+0x42b8>
   14fdc:	ldr	r3, [r3]
   14fe0:	cmp	r3, #0
   14fe4:	blt	15044 <close@plt+0x4180>
   14fe8:	mov	r2, r6
   14fec:	ldr	r1, [pc, #388]	; 15178 <close@plt+0x42b4>
   14ff0:	bl	10e58 <fcntl64@plt>
   14ff4:	subs	r4, r0, #0
   14ff8:	blt	1500c <close@plt+0x4148>
   14ffc:	mov	r2, #1
   15000:	ldr	r3, [pc, #372]	; 1517c <close@plt+0x42b8>
   15004:	str	r2, [r3]
   15008:	b	14fb4 <close@plt+0x40f0>
   1500c:	bl	10df8 <__errno_location@plt>
   15010:	ldr	r3, [r0]
   15014:	cmp	r3, #22
   15018:	bne	14ffc <close@plt+0x4138>
   1501c:	mov	r2, r6
   15020:	mov	r1, #0
   15024:	mov	r0, r5
   15028:	bl	10e58 <fcntl64@plt>
   1502c:	subs	r4, r0, #0
   15030:	blt	14fb4 <close@plt+0x40f0>
   15034:	mvn	r2, #0
   15038:	ldr	r3, [pc, #316]	; 1517c <close@plt+0x42b8>
   1503c:	str	r2, [r3]
   15040:	b	15068 <close@plt+0x41a4>
   15044:	mov	r2, r6
   15048:	mov	r1, #0
   1504c:	bl	10e58 <fcntl64@plt>
   15050:	subs	r4, r0, #0
   15054:	blt	14fb4 <close@plt+0x40f0>
   15058:	ldr	r3, [pc, #284]	; 1517c <close@plt+0x42b8>
   1505c:	ldr	r3, [r3]
   15060:	cmn	r3, #1
   15064:	bne	14fb4 <close@plt+0x40f0>
   15068:	mov	r1, #1
   1506c:	mov	r0, r4
   15070:	bl	10e58 <fcntl64@plt>
   15074:	subs	r2, r0, #0
   15078:	blt	15094 <close@plt+0x41d0>
   1507c:	orr	r2, r2, #1
   15080:	mov	r1, #2
   15084:	mov	r0, r4
   15088:	bl	10e58 <fcntl64@plt>
   1508c:	cmn	r0, #1
   15090:	bne	14fb4 <close@plt+0x40f0>
   15094:	bl	10df8 <__errno_location@plt>
   15098:	mov	r5, r0
   1509c:	ldr	r6, [r0]
   150a0:	mov	r0, r4
   150a4:	bl	10ec4 <close@plt>
   150a8:	str	r6, [r5]
   150ac:	mvn	r4, #0
   150b0:	b	14fb4 <close@plt+0x40f0>
   150b4:	cmp	r1, #1
   150b8:	beq	15168 <close@plt+0x42a4>
   150bc:	bgt	150d4 <close@plt+0x4210>
   150c0:	cmp	r1, #0
   150c4:	bne	1512c <close@plt+0x4268>
   150c8:	b	150d4 <close@plt+0x4210>
   150cc:	cmp	r1, #4
   150d0:	bne	1512c <close@plt+0x4268>
   150d4:	ldr	r3, [sp, #4]
   150d8:	add	r2, r3, #4
   150dc:	str	r2, [sp, #4]
   150e0:	ldr	r2, [r3]
   150e4:	mov	r0, r5
   150e8:	bl	10e58 <fcntl64@plt>
   150ec:	mov	r4, r0
   150f0:	b	14fb4 <close@plt+0x40f0>
   150f4:	ldr	r3, [pc, #132]	; 15180 <close@plt+0x42bc>
   150f8:	cmp	r1, r3
   150fc:	bgt	1514c <close@plt+0x4288>
   15100:	sub	r3, r3, #1
   15104:	cmp	r1, r3
   15108:	bge	150d4 <close@plt+0x4210>
   1510c:	sub	r3, r3, #5
   15110:	cmp	r1, r3
   15114:	beq	15168 <close@plt+0x42a4>
   15118:	add	r3, r3, #1
   1511c:	cmp	r1, r3
   15120:	beq	150d4 <close@plt+0x4210>
   15124:	cmp	r1, #1024	; 0x400
   15128:	beq	150d4 <close@plt+0x4210>
   1512c:	ldr	r3, [sp, #4]
   15130:	add	r2, r3, #4
   15134:	str	r2, [sp, #4]
   15138:	ldr	r2, [r3]
   1513c:	mov	r0, r5
   15140:	bl	10e58 <fcntl64@plt>
   15144:	mov	r4, r0
   15148:	b	14fb4 <close@plt+0x40f0>
   1514c:	ldr	r3, [pc, #48]	; 15184 <close@plt+0x42c0>
   15150:	cmp	r1, r3
   15154:	beq	150d4 <close@plt+0x4210>
   15158:	blt	15168 <close@plt+0x42a4>
   1515c:	add	r3, r3, #1
   15160:	cmp	r1, r3
   15164:	bne	1512c <close@plt+0x4268>
   15168:	mov	r0, r5
   1516c:	bl	10e58 <fcntl64@plt>
   15170:	mov	r4, r0
   15174:	b	14fb4 <close@plt+0x40f0>
   15178:	andeq	r0, r0, r6, lsl #8
   1517c:			; <UNDEFINED> instruction: 0x000272b4
   15180:	andeq	r0, r0, r7, lsl #8
   15184:	andeq	r0, r0, r9, lsl #8
   15188:	push	{r4, r5, lr}
   1518c:	sub	sp, sp, #12
   15190:	mov	r5, r0
   15194:	bl	10df8 <__errno_location@plt>
   15198:	mov	r4, r0
   1519c:	ldr	r3, [r0]
   151a0:	str	r3, [sp]
   151a4:	str	r3, [sp, #4]
   151a8:	mov	r3, #0
   151ac:	str	r3, [r0]
   151b0:	mov	r0, r5
   151b4:	bl	10cc0 <free@plt>
   151b8:	ldr	r3, [r4]
   151bc:	cmp	r3, #0
   151c0:	moveq	r3, #4
   151c4:	movne	r3, #0
   151c8:	add	r2, sp, #8
   151cc:	add	r3, r2, r3
   151d0:	ldr	r3, [r3, #-8]
   151d4:	str	r3, [r4]
   151d8:	add	sp, sp, #12
   151dc:	pop	{r4, r5, pc}
   151e0:	push	{r4, lr}
   151e4:	mov	r0, #14
   151e8:	bl	10e88 <nl_langinfo@plt>
   151ec:	cmp	r0, #0
   151f0:	beq	15208 <close@plt+0x4344>
   151f4:	ldrb	r2, [r0]
   151f8:	ldr	r3, [pc, #16]	; 15210 <close@plt+0x434c>
   151fc:	cmp	r2, #0
   15200:	moveq	r0, r3
   15204:	pop	{r4, pc}
   15208:	ldr	r0, [pc]	; 15210 <close@plt+0x434c>
   1520c:	pop	{r4, pc}
   15210:	ldrdeq	r6, [r1], -r8
   15214:	push	{r4, r5, r6, r7, lr}
   15218:	sub	sp, sp, #12
   1521c:	mov	r7, r1
   15220:	mov	r5, r2
   15224:	subs	r6, r0, #0
   15228:	addeq	r6, sp, #4
   1522c:	mov	r0, r6
   15230:	bl	10d74 <mbrtowc@plt>
   15234:	mov	r4, r0
   15238:	cmp	r5, #0
   1523c:	cmnne	r0, #3
   15240:	bhi	15250 <close@plt+0x438c>
   15244:	mov	r0, r4
   15248:	add	sp, sp, #12
   1524c:	pop	{r4, r5, r6, r7, pc}
   15250:	mov	r0, #0
   15254:	bl	12294 <close@plt+0x13d0>
   15258:	cmp	r0, #0
   1525c:	ldrbeq	r3, [r7]
   15260:	streq	r3, [r6]
   15264:	moveq	r4, #1
   15268:	b	15244 <close@plt+0x4380>
   1526c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15270:	mov	r5, r0
   15274:	mov	r7, r1
   15278:	mov	r4, r2
   1527c:	mov	r8, r3
   15280:	bl	10df8 <__errno_location@plt>
   15284:	mov	sl, r0
   15288:	mov	r9, #0
   1528c:	str	r9, [sl]
   15290:	mov	r1, r4
   15294:	mov	r0, r5
   15298:	bl	10d8c <strcoll@plt>
   1529c:	cmp	r0, #0
   152a0:	bne	152ec <close@plt+0x4428>
   152a4:	mov	r0, r5
   152a8:	bl	10dec <strlen@plt>
   152ac:	add	r6, r0, #1
   152b0:	mov	r0, r4
   152b4:	bl	10dec <strlen@plt>
   152b8:	add	r0, r0, #1
   152bc:	add	r5, r5, r6
   152c0:	add	r4, r4, r0
   152c4:	sub	r8, r8, r0
   152c8:	subs	r7, r7, r6
   152cc:	beq	152e0 <close@plt+0x441c>
   152d0:	cmp	r8, #0
   152d4:	bne	1528c <close@plt+0x43c8>
   152d8:	mov	r0, #1
   152dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152e0:	adds	r0, r8, #0
   152e4:	mvnne	r0, #0
   152e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152f4:	mov	r7, r0
   152f8:	mov	r4, r1
   152fc:	mov	r6, r2
   15300:	mov	r5, r3
   15304:	cmp	r1, r3
   15308:	beq	15348 <close@plt+0x4484>
   1530c:	ldrb	sl, [r7, r4]
   15310:	ldrb	r9, [r6, r5]
   15314:	mov	r3, #0
   15318:	strb	r3, [r7, r4]
   1531c:	strb	r3, [r6, r5]
   15320:	add	r3, r5, #1
   15324:	mov	r2, r6
   15328:	add	r1, r4, #1
   1532c:	mov	r0, r7
   15330:	bl	1526c <close@plt+0x43a8>
   15334:	mov	r8, r0
   15338:	strb	sl, [r7, r4]
   1533c:	strb	r9, [r6, r5]
   15340:	mov	r0, r8
   15344:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15348:	mov	r2, r1
   1534c:	mov	r1, r6
   15350:	bl	10cfc <memcmp@plt>
   15354:	subs	r8, r0, #0
   15358:	bne	1530c <close@plt+0x4448>
   1535c:	bl	10df8 <__errno_location@plt>
   15360:	mov	r3, #0
   15364:	str	r3, [r0]
   15368:	b	15340 <close@plt+0x447c>
   1536c:	push	{r4, r5, r6, r7, r8, lr}
   15370:	mov	r7, r0
   15374:	mov	r4, r1
   15378:	mov	r8, r2
   1537c:	mov	r5, r3
   15380:	cmp	r1, r3
   15384:	beq	153a8 <close@plt+0x44e4>
   15388:	mov	r3, r5
   1538c:	mov	r2, r8
   15390:	mov	r1, r4
   15394:	mov	r0, r7
   15398:	bl	1526c <close@plt+0x43a8>
   1539c:	mov	r6, r0
   153a0:	mov	r0, r6
   153a4:	pop	{r4, r5, r6, r7, r8, pc}
   153a8:	mov	r2, r1
   153ac:	mov	r1, r8
   153b0:	bl	10cfc <memcmp@plt>
   153b4:	subs	r6, r0, #0
   153b8:	bne	15388 <close@plt+0x44c4>
   153bc:	bl	10df8 <__errno_location@plt>
   153c0:	mov	r3, #0
   153c4:	str	r3, [r0]
   153c8:	b	153a0 <close@plt+0x44dc>
   153cc:	push	{r4, r5, r6, lr}
   153d0:	mov	r6, r0
   153d4:	mov	r5, r1
   153d8:	subs	r4, r2, #0
   153dc:	beq	15408 <close@plt+0x4544>
   153e0:	mov	r1, r4
   153e4:	mvn	r0, #0
   153e8:	bl	15418 <close@plt+0x4554>
   153ec:	cmp	r0, r5
   153f0:	bcs	15408 <close@plt+0x4544>
   153f4:	bl	10df8 <__errno_location@plt>
   153f8:	mov	r3, #12
   153fc:	str	r3, [r0]
   15400:	mov	r0, #0
   15404:	pop	{r4, r5, r6, pc}
   15408:	mul	r1, r5, r4
   1540c:	mov	r0, r6
   15410:	bl	14e68 <close@plt+0x3fa4>
   15414:	pop	{r4, r5, r6, pc}
   15418:	subs	r2, r1, #1
   1541c:	bxeq	lr
   15420:	bcc	155f8 <close@plt+0x4734>
   15424:	cmp	r0, r1
   15428:	bls	155dc <close@plt+0x4718>
   1542c:	tst	r1, r2
   15430:	beq	155e8 <close@plt+0x4724>
   15434:	clz	r3, r0
   15438:	clz	r2, r1
   1543c:	sub	r3, r2, r3
   15440:	rsbs	r3, r3, #31
   15444:	addne	r3, r3, r3, lsl #1
   15448:	mov	r2, #0
   1544c:	addne	pc, pc, r3, lsl #2
   15450:	nop			; (mov r0, r0)
   15454:	cmp	r0, r1, lsl #31
   15458:	adc	r2, r2, r2
   1545c:	subcs	r0, r0, r1, lsl #31
   15460:	cmp	r0, r1, lsl #30
   15464:	adc	r2, r2, r2
   15468:	subcs	r0, r0, r1, lsl #30
   1546c:	cmp	r0, r1, lsl #29
   15470:	adc	r2, r2, r2
   15474:	subcs	r0, r0, r1, lsl #29
   15478:	cmp	r0, r1, lsl #28
   1547c:	adc	r2, r2, r2
   15480:	subcs	r0, r0, r1, lsl #28
   15484:	cmp	r0, r1, lsl #27
   15488:	adc	r2, r2, r2
   1548c:	subcs	r0, r0, r1, lsl #27
   15490:	cmp	r0, r1, lsl #26
   15494:	adc	r2, r2, r2
   15498:	subcs	r0, r0, r1, lsl #26
   1549c:	cmp	r0, r1, lsl #25
   154a0:	adc	r2, r2, r2
   154a4:	subcs	r0, r0, r1, lsl #25
   154a8:	cmp	r0, r1, lsl #24
   154ac:	adc	r2, r2, r2
   154b0:	subcs	r0, r0, r1, lsl #24
   154b4:	cmp	r0, r1, lsl #23
   154b8:	adc	r2, r2, r2
   154bc:	subcs	r0, r0, r1, lsl #23
   154c0:	cmp	r0, r1, lsl #22
   154c4:	adc	r2, r2, r2
   154c8:	subcs	r0, r0, r1, lsl #22
   154cc:	cmp	r0, r1, lsl #21
   154d0:	adc	r2, r2, r2
   154d4:	subcs	r0, r0, r1, lsl #21
   154d8:	cmp	r0, r1, lsl #20
   154dc:	adc	r2, r2, r2
   154e0:	subcs	r0, r0, r1, lsl #20
   154e4:	cmp	r0, r1, lsl #19
   154e8:	adc	r2, r2, r2
   154ec:	subcs	r0, r0, r1, lsl #19
   154f0:	cmp	r0, r1, lsl #18
   154f4:	adc	r2, r2, r2
   154f8:	subcs	r0, r0, r1, lsl #18
   154fc:	cmp	r0, r1, lsl #17
   15500:	adc	r2, r2, r2
   15504:	subcs	r0, r0, r1, lsl #17
   15508:	cmp	r0, r1, lsl #16
   1550c:	adc	r2, r2, r2
   15510:	subcs	r0, r0, r1, lsl #16
   15514:	cmp	r0, r1, lsl #15
   15518:	adc	r2, r2, r2
   1551c:	subcs	r0, r0, r1, lsl #15
   15520:	cmp	r0, r1, lsl #14
   15524:	adc	r2, r2, r2
   15528:	subcs	r0, r0, r1, lsl #14
   1552c:	cmp	r0, r1, lsl #13
   15530:	adc	r2, r2, r2
   15534:	subcs	r0, r0, r1, lsl #13
   15538:	cmp	r0, r1, lsl #12
   1553c:	adc	r2, r2, r2
   15540:	subcs	r0, r0, r1, lsl #12
   15544:	cmp	r0, r1, lsl #11
   15548:	adc	r2, r2, r2
   1554c:	subcs	r0, r0, r1, lsl #11
   15550:	cmp	r0, r1, lsl #10
   15554:	adc	r2, r2, r2
   15558:	subcs	r0, r0, r1, lsl #10
   1555c:	cmp	r0, r1, lsl #9
   15560:	adc	r2, r2, r2
   15564:	subcs	r0, r0, r1, lsl #9
   15568:	cmp	r0, r1, lsl #8
   1556c:	adc	r2, r2, r2
   15570:	subcs	r0, r0, r1, lsl #8
   15574:	cmp	r0, r1, lsl #7
   15578:	adc	r2, r2, r2
   1557c:	subcs	r0, r0, r1, lsl #7
   15580:	cmp	r0, r1, lsl #6
   15584:	adc	r2, r2, r2
   15588:	subcs	r0, r0, r1, lsl #6
   1558c:	cmp	r0, r1, lsl #5
   15590:	adc	r2, r2, r2
   15594:	subcs	r0, r0, r1, lsl #5
   15598:	cmp	r0, r1, lsl #4
   1559c:	adc	r2, r2, r2
   155a0:	subcs	r0, r0, r1, lsl #4
   155a4:	cmp	r0, r1, lsl #3
   155a8:	adc	r2, r2, r2
   155ac:	subcs	r0, r0, r1, lsl #3
   155b0:	cmp	r0, r1, lsl #2
   155b4:	adc	r2, r2, r2
   155b8:	subcs	r0, r0, r1, lsl #2
   155bc:	cmp	r0, r1, lsl #1
   155c0:	adc	r2, r2, r2
   155c4:	subcs	r0, r0, r1, lsl #1
   155c8:	cmp	r0, r1
   155cc:	adc	r2, r2, r2
   155d0:	subcs	r0, r0, r1
   155d4:	mov	r0, r2
   155d8:	bx	lr
   155dc:	moveq	r0, #1
   155e0:	movne	r0, #0
   155e4:	bx	lr
   155e8:	clz	r2, r1
   155ec:	rsb	r2, r2, #31
   155f0:	lsr	r0, r0, r2
   155f4:	bx	lr
   155f8:	cmp	r0, #0
   155fc:	mvnne	r0, #0
   15600:	b	158a0 <close@plt+0x49dc>
   15604:	cmp	r1, #0
   15608:	beq	155f8 <close@plt+0x4734>
   1560c:	push	{r0, r1, lr}
   15610:	bl	15418 <close@plt+0x4554>
   15614:	pop	{r1, r2, lr}
   15618:	mul	r3, r2, r0
   1561c:	sub	r1, r1, r3
   15620:	bx	lr
   15624:	cmp	r1, #0
   15628:	beq	15834 <close@plt+0x4970>
   1562c:	eor	ip, r0, r1
   15630:	rsbmi	r1, r1, #0
   15634:	subs	r2, r1, #1
   15638:	beq	15800 <close@plt+0x493c>
   1563c:	movs	r3, r0
   15640:	rsbmi	r3, r0, #0
   15644:	cmp	r3, r1
   15648:	bls	1580c <close@plt+0x4948>
   1564c:	tst	r1, r2
   15650:	beq	1581c <close@plt+0x4958>
   15654:	clz	r2, r3
   15658:	clz	r0, r1
   1565c:	sub	r2, r0, r2
   15660:	rsbs	r2, r2, #31
   15664:	addne	r2, r2, r2, lsl #1
   15668:	mov	r0, #0
   1566c:	addne	pc, pc, r2, lsl #2
   15670:	nop			; (mov r0, r0)
   15674:	cmp	r3, r1, lsl #31
   15678:	adc	r0, r0, r0
   1567c:	subcs	r3, r3, r1, lsl #31
   15680:	cmp	r3, r1, lsl #30
   15684:	adc	r0, r0, r0
   15688:	subcs	r3, r3, r1, lsl #30
   1568c:	cmp	r3, r1, lsl #29
   15690:	adc	r0, r0, r0
   15694:	subcs	r3, r3, r1, lsl #29
   15698:	cmp	r3, r1, lsl #28
   1569c:	adc	r0, r0, r0
   156a0:	subcs	r3, r3, r1, lsl #28
   156a4:	cmp	r3, r1, lsl #27
   156a8:	adc	r0, r0, r0
   156ac:	subcs	r3, r3, r1, lsl #27
   156b0:	cmp	r3, r1, lsl #26
   156b4:	adc	r0, r0, r0
   156b8:	subcs	r3, r3, r1, lsl #26
   156bc:	cmp	r3, r1, lsl #25
   156c0:	adc	r0, r0, r0
   156c4:	subcs	r3, r3, r1, lsl #25
   156c8:	cmp	r3, r1, lsl #24
   156cc:	adc	r0, r0, r0
   156d0:	subcs	r3, r3, r1, lsl #24
   156d4:	cmp	r3, r1, lsl #23
   156d8:	adc	r0, r0, r0
   156dc:	subcs	r3, r3, r1, lsl #23
   156e0:	cmp	r3, r1, lsl #22
   156e4:	adc	r0, r0, r0
   156e8:	subcs	r3, r3, r1, lsl #22
   156ec:	cmp	r3, r1, lsl #21
   156f0:	adc	r0, r0, r0
   156f4:	subcs	r3, r3, r1, lsl #21
   156f8:	cmp	r3, r1, lsl #20
   156fc:	adc	r0, r0, r0
   15700:	subcs	r3, r3, r1, lsl #20
   15704:	cmp	r3, r1, lsl #19
   15708:	adc	r0, r0, r0
   1570c:	subcs	r3, r3, r1, lsl #19
   15710:	cmp	r3, r1, lsl #18
   15714:	adc	r0, r0, r0
   15718:	subcs	r3, r3, r1, lsl #18
   1571c:	cmp	r3, r1, lsl #17
   15720:	adc	r0, r0, r0
   15724:	subcs	r3, r3, r1, lsl #17
   15728:	cmp	r3, r1, lsl #16
   1572c:	adc	r0, r0, r0
   15730:	subcs	r3, r3, r1, lsl #16
   15734:	cmp	r3, r1, lsl #15
   15738:	adc	r0, r0, r0
   1573c:	subcs	r3, r3, r1, lsl #15
   15740:	cmp	r3, r1, lsl #14
   15744:	adc	r0, r0, r0
   15748:	subcs	r3, r3, r1, lsl #14
   1574c:	cmp	r3, r1, lsl #13
   15750:	adc	r0, r0, r0
   15754:	subcs	r3, r3, r1, lsl #13
   15758:	cmp	r3, r1, lsl #12
   1575c:	adc	r0, r0, r0
   15760:	subcs	r3, r3, r1, lsl #12
   15764:	cmp	r3, r1, lsl #11
   15768:	adc	r0, r0, r0
   1576c:	subcs	r3, r3, r1, lsl #11
   15770:	cmp	r3, r1, lsl #10
   15774:	adc	r0, r0, r0
   15778:	subcs	r3, r3, r1, lsl #10
   1577c:	cmp	r3, r1, lsl #9
   15780:	adc	r0, r0, r0
   15784:	subcs	r3, r3, r1, lsl #9
   15788:	cmp	r3, r1, lsl #8
   1578c:	adc	r0, r0, r0
   15790:	subcs	r3, r3, r1, lsl #8
   15794:	cmp	r3, r1, lsl #7
   15798:	adc	r0, r0, r0
   1579c:	subcs	r3, r3, r1, lsl #7
   157a0:	cmp	r3, r1, lsl #6
   157a4:	adc	r0, r0, r0
   157a8:	subcs	r3, r3, r1, lsl #6
   157ac:	cmp	r3, r1, lsl #5
   157b0:	adc	r0, r0, r0
   157b4:	subcs	r3, r3, r1, lsl #5
   157b8:	cmp	r3, r1, lsl #4
   157bc:	adc	r0, r0, r0
   157c0:	subcs	r3, r3, r1, lsl #4
   157c4:	cmp	r3, r1, lsl #3
   157c8:	adc	r0, r0, r0
   157cc:	subcs	r3, r3, r1, lsl #3
   157d0:	cmp	r3, r1, lsl #2
   157d4:	adc	r0, r0, r0
   157d8:	subcs	r3, r3, r1, lsl #2
   157dc:	cmp	r3, r1, lsl #1
   157e0:	adc	r0, r0, r0
   157e4:	subcs	r3, r3, r1, lsl #1
   157e8:	cmp	r3, r1
   157ec:	adc	r0, r0, r0
   157f0:	subcs	r3, r3, r1
   157f4:	cmp	ip, #0
   157f8:	rsbmi	r0, r0, #0
   157fc:	bx	lr
   15800:	teq	ip, r0
   15804:	rsbmi	r0, r0, #0
   15808:	bx	lr
   1580c:	movcc	r0, #0
   15810:	asreq	r0, ip, #31
   15814:	orreq	r0, r0, #1
   15818:	bx	lr
   1581c:	clz	r2, r1
   15820:	rsb	r2, r2, #31
   15824:	cmp	ip, #0
   15828:	lsr	r0, r3, r2
   1582c:	rsbmi	r0, r0, #0
   15830:	bx	lr
   15834:	cmp	r0, #0
   15838:	mvngt	r0, #-2147483648	; 0x80000000
   1583c:	movlt	r0, #-2147483648	; 0x80000000
   15840:	b	158a0 <close@plt+0x49dc>
   15844:	cmp	r1, #0
   15848:	beq	15834 <close@plt+0x4970>
   1584c:	push	{r0, r1, lr}
   15850:	bl	1562c <close@plt+0x4768>
   15854:	pop	{r1, r2, lr}
   15858:	mul	r3, r2, r0
   1585c:	sub	r1, r1, r3
   15860:	bx	lr
   15864:	cmp	r3, #0
   15868:	cmpeq	r2, #0
   1586c:	bne	15884 <close@plt+0x49c0>
   15870:	cmp	r1, #0
   15874:	cmpeq	r0, #0
   15878:	mvnne	r1, #0
   1587c:	mvnne	r0, #0
   15880:	b	158a0 <close@plt+0x49dc>
   15884:	sub	sp, sp, #8
   15888:	push	{sp, lr}
   1588c:	bl	158b0 <close@plt+0x49ec>
   15890:	ldr	lr, [sp, #4]
   15894:	add	sp, sp, #8
   15898:	pop	{r2, r3}
   1589c:	bx	lr
   158a0:	push	{r1, lr}
   158a4:	mov	r0, #8
   158a8:	bl	10c90 <raise@plt>
   158ac:	pop	{r1, pc}
   158b0:	cmp	r1, r3
   158b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   158b8:	cmpeq	r0, r2
   158bc:	mov	r4, r0
   158c0:	mov	r5, r1
   158c4:	ldr	r9, [sp, #28]
   158c8:	movcc	r0, #0
   158cc:	movcc	r1, #0
   158d0:	bcc	159c8 <close@plt+0x4b04>
   158d4:	cmp	r3, #0
   158d8:	clzeq	ip, r2
   158dc:	clzne	ip, r3
   158e0:	addeq	ip, ip, #32
   158e4:	cmp	r5, #0
   158e8:	clzeq	r1, r4
   158ec:	addeq	r1, r1, #32
   158f0:	clzne	r1, r5
   158f4:	sub	ip, ip, r1
   158f8:	sub	lr, ip, #32
   158fc:	lsl	r7, r3, ip
   15900:	rsb	r8, ip, #32
   15904:	orr	r7, r7, r2, lsl lr
   15908:	orr	r7, r7, r2, lsr r8
   1590c:	lsl	r6, r2, ip
   15910:	cmp	r5, r7
   15914:	cmpeq	r4, r6
   15918:	movcc	r0, #0
   1591c:	movcc	r1, #0
   15920:	bcc	1593c <close@plt+0x4a78>
   15924:	mov	r3, #1
   15928:	subs	r4, r4, r6
   1592c:	lsl	r1, r3, lr
   15930:	lsl	r0, r3, ip
   15934:	orr	r1, r1, r3, lsr r8
   15938:	sbc	r5, r5, r7
   1593c:	cmp	ip, #0
   15940:	beq	159c8 <close@plt+0x4b04>
   15944:	lsrs	r3, r7, #1
   15948:	rrx	r2, r6
   1594c:	mov	r6, ip
   15950:	b	15974 <close@plt+0x4ab0>
   15954:	subs	r4, r4, r2
   15958:	sbc	r5, r5, r3
   1595c:	adds	r4, r4, r4
   15960:	adc	r5, r5, r5
   15964:	adds	r4, r4, #1
   15968:	adc	r5, r5, #0
   1596c:	subs	r6, r6, #1
   15970:	beq	15990 <close@plt+0x4acc>
   15974:	cmp	r5, r3
   15978:	cmpeq	r4, r2
   1597c:	bcs	15954 <close@plt+0x4a90>
   15980:	adds	r4, r4, r4
   15984:	adc	r5, r5, r5
   15988:	subs	r6, r6, #1
   1598c:	bne	15974 <close@plt+0x4ab0>
   15990:	lsr	r6, r4, ip
   15994:	lsr	r7, r5, ip
   15998:	orr	r6, r6, r5, lsl r8
   1599c:	adds	r2, r0, r4
   159a0:	orr	r6, r6, r5, lsr lr
   159a4:	adc	r3, r1, r5
   159a8:	lsl	r1, r7, ip
   159ac:	orr	r1, r1, r6, lsl lr
   159b0:	lsl	r0, r6, ip
   159b4:	orr	r1, r1, r6, lsr r8
   159b8:	subs	r0, r2, r0
   159bc:	mov	r4, r6
   159c0:	mov	r5, r7
   159c4:	sbc	r1, r3, r1
   159c8:	cmp	r9, #0
   159cc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   159d0:	strd	r4, [r9]
   159d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   159d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159dc:	mov	r7, r0
   159e0:	ldr	r6, [pc, #72]	; 15a30 <close@plt+0x4b6c>
   159e4:	ldr	r5, [pc, #72]	; 15a34 <close@plt+0x4b70>
   159e8:	add	r6, pc, r6
   159ec:	add	r5, pc, r5
   159f0:	sub	r6, r6, r5
   159f4:	mov	r8, r1
   159f8:	mov	r9, r2
   159fc:	bl	10c4c <fdopen@plt-0x20>
   15a00:	asrs	r6, r6, #2
   15a04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a08:	mov	r4, #0
   15a0c:	add	r4, r4, #1
   15a10:	ldr	r3, [r5], #4
   15a14:	mov	r2, r9
   15a18:	mov	r1, r8
   15a1c:	mov	r0, r7
   15a20:	blx	r3
   15a24:	cmp	r6, r4
   15a28:	bne	15a0c <close@plt+0x4b48>
   15a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a30:	andeq	r1, r1, r0, lsr #10
   15a34:	andeq	r1, r1, r8, lsl r5
   15a38:	bx	lr
   15a3c:	ldr	r3, [pc, #12]	; 15a50 <close@plt+0x4b8c>
   15a40:	mov	r1, #0
   15a44:	add	r3, pc, r3
   15a48:	ldr	r2, [r3]
   15a4c:	b	10e04 <__cxa_atexit@plt>
   15a50:	muleq	r1, r4, r6

Disassembly of section .fini:

00015a54 <.fini>:
   15a54:	push	{r3, lr}
   15a58:	pop	{r3, pc}
