
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf32-littlearm


Disassembly of section .init:

00011128 <.init>:
   11128:	push	{r3, lr}
   1112c:	bl	11280 <_start@@Base+0x3c>
   11130:	pop	{r3, pc}

Disassembly of section .plt:

00011134 <strstr@plt-0x14>:
   11134:	push	{lr}		; (str lr, [sp, #-4]!)
   11138:	ldr	lr, [pc, #4]	; 11144 <strstr@plt-0x4>
   1113c:	add	lr, pc, lr
   11140:	ldr	pc, [lr, #8]!
   11144:			; <UNDEFINED> instruction: 0x00013ebc

00011148 <strstr@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #77824	; 0x13000
   11150:	ldr	pc, [ip, #3772]!	; 0xebc

00011154 <strcmp@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #77824	; 0x13000
   1115c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011160 <mprotect@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #77824	; 0x13000
   11168:	ldr	pc, [ip, #3756]!	; 0xeac

0001116c <free@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #77824	; 0x13000
   11174:	ldr	pc, [ip, #3748]!	; 0xea4

00011178 <memcpy@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #77824	; 0x13000
   11180:	ldr	pc, [ip, #3740]!	; 0xe9c

00011184 <fn_vv@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #77824	; 0x13000
   1118c:	ldr	pc, [ip, #3732]!	; 0xe94

00011190 <realloc@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #77824	; 0x13000
   11198:	ldr	pc, [ip, #3724]!	; 0xe8c

0001119c <fn_ii@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #77824	; 0x13000
   111a4:	ldr	pc, [ip, #3716]!	; 0xe84

000111a8 <fn_ii_va@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #77824	; 0x13000
   111b0:	ldr	pc, [ip, #3708]!	; 0xe7c

000111b4 <malloc@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #77824	; 0x13000
   111bc:	ldr	pc, [ip, #3700]!	; 0xe74

000111c0 <__libc_start_main@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #77824	; 0x13000
   111c8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111cc <__gmon_start__@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #77824	; 0x13000
   111d4:	ldr	pc, [ip, #3684]!	; 0xe64

000111d8 <strlen@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #77824	; 0x13000
   111e0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111e4 <mmap@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #77824	; 0x13000
   111ec:	ldr	pc, [ip, #3668]!	; 0xe54

000111f0 <strchr@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #77824	; 0x13000
   111f8:	ldr	pc, [ip, #3660]!	; 0xe4c

000111fc <fprintf@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #77824	; 0x13000
   11204:	ldr	pc, [ip, #3652]!	; 0xe44

00011208 <__errno_location@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #77824	; 0x13000
   11210:	ldr	pc, [ip, #3644]!	; 0xe3c

00011214 <snprintf@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #77824	; 0x13000
   1121c:	ldr	pc, [ip, #3636]!	; 0xe34

00011220 <munmap@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #77824	; 0x13000
   11228:	ldr	pc, [ip, #3628]!	; 0xe2c

0001122c <strncmp@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #77824	; 0x13000
   11234:	ldr	pc, [ip, #3620]!	; 0xe24

00011238 <abort@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #77824	; 0x13000
   11240:	ldr	pc, [ip, #3612]!	; 0xe1c

Disassembly of section .text:

00011244 <_start@@Base>:
   11244:	mov	fp, #0
   11248:	mov	lr, #0
   1124c:	pop	{r1}		; (ldr r1, [sp], #4)
   11250:	mov	r2, sp
   11254:	push	{r2}		; (str r2, [sp, #-4]!)
   11258:	push	{r0}		; (str r0, [sp, #-4]!)
   1125c:	ldr	ip, [pc, #16]	; 11274 <_start@@Base+0x30>
   11260:	push	{ip}		; (str ip, [sp, #-4]!)
   11264:	ldr	r0, [pc, #12]	; 11278 <_start@@Base+0x34>
   11268:	ldr	r3, [pc, #12]	; 1127c <_start@@Base+0x38>
   1126c:	bl	111c0 <__libc_start_main@plt>
   11270:	bl	11238 <abort@plt>
   11274:	andeq	r4, r1, r8, lsr r8
   11278:	andeq	r2, r1, ip, lsl #9
   1127c:	ldrdeq	r4, [r1], -r8
   11280:	ldr	r3, [pc, #20]	; 1129c <_start@@Base+0x58>
   11284:	ldr	r2, [pc, #20]	; 112a0 <_start@@Base+0x5c>
   11288:	add	r3, pc, r3
   1128c:	ldr	r2, [r3, r2]
   11290:	cmp	r2, #0
   11294:	bxeq	lr
   11298:	b	111cc <__gmon_start__@plt>
   1129c:	andeq	r3, r1, r0, ror sp
   112a0:	andeq	r0, r0, r0, rrx
   112a4:	ldr	r0, [pc, #24]	; 112c4 <_start@@Base+0x80>
   112a8:	ldr	r3, [pc, #24]	; 112c8 <_start@@Base+0x84>
   112ac:	cmp	r3, r0
   112b0:	bxeq	lr
   112b4:	ldr	r3, [pc, #16]	; 112cc <_start@@Base+0x88>
   112b8:	cmp	r3, #0
   112bc:	bxeq	lr
   112c0:	bx	r3
   112c4:	andeq	r5, r2, r0, ror r0
   112c8:	andeq	r5, r2, r0, ror r0
   112cc:	andeq	r0, r0, r0
   112d0:	ldr	r0, [pc, #36]	; 112fc <_start@@Base+0xb8>
   112d4:	ldr	r1, [pc, #36]	; 11300 <_start@@Base+0xbc>
   112d8:	sub	r1, r1, r0
   112dc:	asr	r1, r1, #2
   112e0:	add	r1, r1, r1, lsr #31
   112e4:	asrs	r1, r1, #1
   112e8:	bxeq	lr
   112ec:	ldr	r3, [pc, #16]	; 11304 <_start@@Base+0xc0>
   112f0:	cmp	r3, #0
   112f4:	bxeq	lr
   112f8:	bx	r3
   112fc:	andeq	r5, r2, r0, ror r0
   11300:	andeq	r5, r2, r0, ror r0
   11304:	andeq	r0, r0, r0
   11308:	push	{r4, lr}
   1130c:	ldr	r4, [pc, #24]	; 1132c <_start@@Base+0xe8>
   11310:	ldrb	r3, [r4]
   11314:	cmp	r3, #0
   11318:	popne	{r4, pc}
   1131c:	bl	112a4 <_start@@Base+0x60>
   11320:	mov	r3, #1
   11324:	strb	r3, [r4]
   11328:	pop	{r4, pc}
   1132c:	andeq	r5, r2, r8, lsl #1
   11330:	b	112d0 <_start@@Base+0x8c>
   11334:	str	fp, [sp, #-8]!
   11338:	str	lr, [sp, #4]
   1133c:	add	fp, sp, #4
   11340:	sub	sp, sp, #96	; 0x60
   11344:	str	r0, [fp, #-96]	; 0xffffffa0
   11348:	bl	13174 <mmk_matcher_ctx@@Base>
   1134c:	str	r0, [fp, #-24]	; 0xffffffe8
   11350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11354:	cmp	r3, #0
   11358:	beq	115b4 <_start@@Base+0x370>
   1135c:	bl	13e9c <mmk_ctx@@Base>
   11360:	mov	r3, r0
   11364:	mov	r0, r3
   11368:	bl	13a9c <mmk_stub_context@@Base>
   1136c:	str	r0, [fp, #-28]	; 0xffffffe4
   11370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11374:	ldr	r3, [r3]
   11378:	cmp	r3, #0
   1137c:	bne	113d0 <_start@@Base+0x18c>
   11380:	mov	r0, #44	; 0x2c
   11384:	bl	145a0 <mmk_malloc@@Base>
   11388:	str	r0, [fp, #-32]	; 0xffffffe0
   1138c:	bl	146f0 <mmk_when_get_result@@Base>
   11390:	mov	r2, r0
   11394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11398:	add	r3, r3, #8
   1139c:	ldrd	r0, [r2]
   113a0:	strd	r0, [r3]
   113a4:	ldrd	r0, [r2, #8]
   113a8:	strd	r0, [r3, #8]
   113ac:	ldr	r2, [r2, #16]
   113b0:	str	r2, [r3, #16]
   113b4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   113b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   113bc:	str	r2, [r3, #40]	; 0x28
   113c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   113c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   113c8:	bl	14718 <mmk_when_impl@@Base>
   113cc:	b	115a4 <_start@@Base+0x360>
   113d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113d4:	ldr	r3, [r3]
   113d8:	cmp	r3, #1
   113dc:	bne	115a4 <_start@@Base+0x360>
   113e0:	mov	r3, #0
   113e4:	str	r3, [fp, #-8]
   113e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   113ec:	bl	134cc <mmk_mock_params_begin@@Base>
   113f0:	str	r0, [fp, #-12]
   113f4:	b	1155c <_start@@Base+0x318>
   113f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113fc:	str	r3, [fp, #-36]	; 0xffffffdc
   11400:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11404:	ldr	r3, [r3, #8]
   11408:	cmp	r3, #0
   1140c:	beq	114fc <_start@@Base+0x2b8>
   11410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11414:	ldr	r3, [r3, #8]
   11418:	str	r3, [fp, #-36]	; 0xffffffdc
   1141c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11420:	ldr	r3, [r3]
   11424:	cmp	r3, #0
   11428:	beq	11520 <_start@@Base+0x2dc>
   1142c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11430:	ldr	r3, [r3]
   11434:	cmp	r3, #0
   11438:	bge	114bc <_start@@Base+0x278>
   1143c:	ldr	r3, [fp, #-12]
   11440:	add	r3, r3, #12
   11444:	sub	r1, fp, #96	; 0x60
   11448:	mov	r2, #4
   1144c:	mov	r0, r3
   11450:	bl	1440c <mmk_memcmp@@Base>
   11454:	str	r0, [fp, #-40]	; 0xffffffd8
   11458:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1145c:	cmp	r3, #0
   11460:	bne	11478 <_start@@Base+0x234>
   11464:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11468:	ldr	r3, [r3]
   1146c:	and	r3, r3, #2
   11470:	cmp	r3, #0
   11474:	beq	11538 <_start@@Base+0x2f4>
   11478:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1147c:	cmp	r3, #0
   11480:	bge	11498 <_start@@Base+0x254>
   11484:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11488:	ldr	r3, [r3]
   1148c:	and	r3, r3, #4
   11490:	cmp	r3, #0
   11494:	beq	11540 <_start@@Base+0x2fc>
   11498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1149c:	cmp	r3, #0
   114a0:	ble	11520 <_start@@Base+0x2dc>
   114a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114a8:	ldr	r3, [r3]
   114ac:	and	r3, r3, #8
   114b0:	cmp	r3, #0
   114b4:	bne	11520 <_start@@Base+0x2dc>
   114b8:	b	1154c <_start@@Base+0x308>
   114bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114c0:	ldr	r3, [r3]
   114c4:	cmp	r3, #1
   114c8:	bne	11520 <_start@@Base+0x2dc>
   114cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   114d0:	bl	131f0 <mmk_matcher_get_predicate@@Base>
   114d4:	str	r0, [fp, #-44]	; 0xffffffd4
   114d8:	ldr	r3, [fp, #-12]
   114dc:	ldr	r2, [r3, #12]
   114e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   114e4:	mov	r0, r2
   114e8:	blx	r3
   114ec:	mov	r3, r0
   114f0:	cmp	r3, #0
   114f4:	bne	11520 <_start@@Base+0x2dc>
   114f8:	b	1154c <_start@@Base+0x308>
   114fc:	ldr	r3, [fp, #-12]
   11500:	add	r3, r3, #12
   11504:	sub	r1, fp, #96	; 0x60
   11508:	mov	r2, #4
   1150c:	mov	r0, r3
   11510:	bl	1440c <mmk_memcmp@@Base>
   11514:	mov	r3, r0
   11518:	cmp	r3, #0
   1151c:	bne	11548 <_start@@Base+0x304>
   11520:	ldr	r3, [fp, #-12]
   11524:	ldr	r3, [r3]
   11528:	ldr	r2, [fp, #-8]
   1152c:	add	r3, r2, r3
   11530:	str	r3, [fp, #-8]
   11534:	b	1154c <_start@@Base+0x308>
   11538:	nop	{0}
   1153c:	b	1154c <_start@@Base+0x308>
   11540:	nop	{0}
   11544:	b	1154c <_start@@Base+0x308>
   11548:	nop	{0}
   1154c:	ldr	r1, [fp, #-12]
   11550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11554:	bl	13520 <mmk_mock_params_next@@Base>
   11558:	str	r0, [fp, #-12]
   1155c:	ldr	r3, [fp, #-12]
   11560:	cmp	r3, #0
   11564:	bne	113f8 <_start@@Base+0x1b4>
   11568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1156c:	str	r3, [fp, #-16]
   11570:	b	11590 <_start@@Base+0x34c>
   11574:	ldr	r3, [fp, #-16]
   11578:	ldr	r3, [r3, #8]
   1157c:	str	r3, [fp, #-48]	; 0xffffffd0
   11580:	ldr	r0, [fp, #-16]
   11584:	bl	145c0 <mmk_free@@Base>
   11588:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1158c:	str	r3, [fp, #-16]
   11590:	ldr	r3, [fp, #-16]
   11594:	cmp	r3, #0
   11598:	bne	11574 <_start@@Base+0x330>
   1159c:	ldr	r0, [fp, #-8]
   115a0:	bl	13fd8 <mmk_verify_set_times@@Base>
   115a4:	movw	r3, #20624	; 0x5090
   115a8:	movt	r3, #2
   115ac:	ldr	r3, [r3]
   115b0:	b	11824 <_start@@Base+0x5e0>
   115b4:	sub	r1, fp, #88	; 0x58
   115b8:	mov	r2, #0
   115bc:	mov	r3, #0
   115c0:	strd	r2, [r1]
   115c4:	strd	r2, [r1, #8]
   115c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   115cc:	str	r3, [fp, #-76]	; 0xffffffb4
   115d0:	sub	r3, fp, #88	; 0x58
   115d4:	str	r3, [fp, #-52]	; 0xffffffcc
   115d8:	mov	r1, #16
   115dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   115e0:	bl	141f0 <mmk_verify_register_call@@Base>
   115e4:	bl	13598 <mmk_mock_get_params@@Base>
   115e8:	str	r0, [fp, #-20]	; 0xffffffec
   115ec:	b	1180c <_start@@Base+0x5c8>
   115f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   115f4:	str	r3, [fp, #-56]	; 0xffffffc8
   115f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   115fc:	ldr	r3, [r3]
   11600:	str	r3, [fp, #-60]	; 0xffffffc4
   11604:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11608:	ldr	r3, [r3, #8]
   1160c:	cmp	r3, #0
   11610:	beq	116f8 <_start@@Base+0x4b4>
   11614:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11618:	ldr	r3, [r3, #8]
   1161c:	str	r3, [fp, #-60]	; 0xffffffc4
   11620:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11624:	ldr	r3, [r3]
   11628:	cmp	r3, #0
   1162c:	beq	1171c <_start@@Base+0x4d8>
   11630:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11634:	ldr	r3, [r3]
   11638:	cmp	r3, #0
   1163c:	bge	116bc <_start@@Base+0x478>
   11640:	sub	r1, fp, #96	; 0x60
   11644:	sub	r3, fp, #96	; 0x60
   11648:	mov	r2, #4
   1164c:	mov	r0, r3
   11650:	bl	1440c <mmk_memcmp@@Base>
   11654:	str	r0, [fp, #-64]	; 0xffffffc0
   11658:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1165c:	cmp	r3, #0
   11660:	bne	11678 <_start@@Base+0x434>
   11664:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11668:	ldr	r3, [r3]
   1166c:	and	r3, r3, #2
   11670:	cmp	r3, #0
   11674:	beq	117f4 <_start@@Base+0x5b0>
   11678:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1167c:	cmp	r3, #0
   11680:	bge	11698 <_start@@Base+0x454>
   11684:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11688:	ldr	r3, [r3]
   1168c:	and	r3, r3, #4
   11690:	cmp	r3, #0
   11694:	beq	117f4 <_start@@Base+0x5b0>
   11698:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1169c:	cmp	r3, #0
   116a0:	ble	1171c <_start@@Base+0x4d8>
   116a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116a8:	ldr	r3, [r3]
   116ac:	and	r3, r3, #8
   116b0:	cmp	r3, #0
   116b4:	bne	1171c <_start@@Base+0x4d8>
   116b8:	b	117f4 <_start@@Base+0x5b0>
   116bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116c0:	ldr	r3, [r3]
   116c4:	cmp	r3, #1
   116c8:	bne	1171c <_start@@Base+0x4d8>
   116cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   116d0:	bl	131f0 <mmk_matcher_get_predicate@@Base>
   116d4:	str	r0, [fp, #-68]	; 0xffffffbc
   116d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   116dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   116e0:	mov	r0, r2
   116e4:	blx	r3
   116e8:	mov	r3, r0
   116ec:	cmp	r3, #0
   116f0:	bne	1171c <_start@@Base+0x4d8>
   116f4:	b	11800 <_start@@Base+0x5bc>
   116f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116fc:	add	r1, r3, #40	; 0x28
   11700:	sub	r3, fp, #96	; 0x60
   11704:	mov	r2, #4
   11708:	mov	r0, r3
   1170c:	bl	1440c <mmk_memcmp@@Base>
   11710:	mov	r3, r0
   11714:	cmp	r3, #0
   11718:	bne	117fc <_start@@Base+0x5b8>
   1171c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11720:	ldr	r3, [r3, #12]
   11724:	cmp	r3, #0
   11728:	beq	11740 <_start@@Base+0x4fc>
   1172c:	bl	11208 <__errno_location@plt>
   11730:	mov	r2, r0
   11734:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11738:	ldr	r3, [r3, #12]
   1173c:	str	r3, [r2]
   11740:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11744:	ldr	r3, [r3, #20]
   11748:	cmp	r3, #0
   1174c:	beq	11780 <_start@@Base+0x53c>
   11750:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11754:	ldr	r3, [r3, #16]
   11758:	cmp	r3, #0
   1175c:	bne	11780 <_start@@Base+0x53c>
   11760:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11764:	ldr	r3, [r3, #20]
   11768:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1176c:	mov	r0, r2
   11770:	blx	r3
   11774:	str	r0, [fp, #-72]	; 0xffffffb8
   11778:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1177c:	b	11824 <_start@@Base+0x5e0>
   11780:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11784:	ldr	r3, [r3, #20]
   11788:	cmp	r3, #0
   1178c:	beq	117c4 <_start@@Base+0x580>
   11790:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11794:	ldr	r3, [r3, #16]
   11798:	cmp	r3, #0
   1179c:	beq	117c4 <_start@@Base+0x580>
   117a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117a4:	ldr	r3, [r3, #20]
   117a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   117ac:	mov	r0, r2
   117b0:	blx	r3
   117b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117b8:	ldr	r3, [r3, #16]
   117bc:	ldr	r3, [r3]
   117c0:	b	11824 <_start@@Base+0x5e0>
   117c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117c8:	ldr	r3, [r3, #16]
   117cc:	cmp	r3, #0
   117d0:	beq	117e4 <_start@@Base+0x5a0>
   117d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117d8:	ldr	r3, [r3, #16]
   117dc:	ldr	r3, [r3]
   117e0:	b	11824 <_start@@Base+0x5e0>
   117e4:	movw	r3, #20624	; 0x5090
   117e8:	movt	r3, #2
   117ec:	ldr	r3, [r3]
   117f0:	b	11824 <_start@@Base+0x5e0>
   117f4:	nop	{0}
   117f8:	b	11800 <_start@@Base+0x5bc>
   117fc:	nop	{0}
   11800:	ldr	r3, [fp, #-20]	; 0xffffffec
   11804:	ldr	r3, [r3, #4]
   11808:	str	r3, [fp, #-20]	; 0xffffffec
   1180c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11810:	cmp	r3, #0
   11814:	bne	115f0 <_start@@Base+0x3ac>
   11818:	movw	r3, #20624	; 0x5090
   1181c:	movt	r3, #2
   11820:	ldr	r3, [r3]
   11824:	mov	r0, r3
   11828:	sub	sp, fp, #4
   1182c:	ldr	fp, [sp]
   11830:	add	sp, sp, #4
   11834:	pop	{pc}		; (ldr pc, [sp], #4)
   11838:	str	fp, [sp, #-8]!
   1183c:	str	lr, [sp, #4]
   11840:	add	fp, sp, #4
   11844:	sub	sp, sp, #8
   11848:	str	r0, [fp, #-8]
   1184c:	movw	r1, #4916	; 0x1334
   11850:	movt	r1, #1
   11854:	ldr	r0, [fp, #-8]
   11858:	bl	131f8 <mmk_mock_create_internal@@Base>
   1185c:	mov	r3, r0
   11860:	mov	r0, r3
   11864:	sub	sp, fp, #4
   11868:	ldr	fp, [sp]
   1186c:	add	sp, sp, #4
   11870:	pop	{pc}		; (ldr pc, [sp], #4)
   11874:	str	fp, [sp, #-8]!
   11878:	str	lr, [sp, #4]
   1187c:	add	fp, sp, #4
   11880:	sub	sp, sp, #64	; 0x40
   11884:	bl	13174 <mmk_matcher_ctx@@Base>
   11888:	str	r0, [fp, #-20]	; 0xffffffec
   1188c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11890:	cmp	r3, #0
   11894:	beq	119a4 <_start@@Base+0x760>
   11898:	bl	13e9c <mmk_ctx@@Base>
   1189c:	mov	r3, r0
   118a0:	mov	r0, r3
   118a4:	bl	13a9c <mmk_stub_context@@Base>
   118a8:	str	r0, [fp, #-24]	; 0xffffffe8
   118ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   118b0:	ldr	r3, [r3]
   118b4:	cmp	r3, #0
   118b8:	bne	11900 <_start@@Base+0x6bc>
   118bc:	mov	r0, #40	; 0x28
   118c0:	bl	145a0 <mmk_malloc@@Base>
   118c4:	str	r0, [fp, #-28]	; 0xffffffe4
   118c8:	bl	146f0 <mmk_when_get_result@@Base>
   118cc:	mov	r2, r0
   118d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   118d4:	add	r3, r3, #8
   118d8:	ldrd	r0, [r2]
   118dc:	strd	r0, [r3]
   118e0:	ldrd	r0, [r2, #8]
   118e4:	strd	r0, [r3, #8]
   118e8:	ldr	r2, [r2, #16]
   118ec:	str	r2, [r3, #16]
   118f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   118f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118f8:	bl	14718 <mmk_when_impl@@Base>
   118fc:	b	11a8c <_start@@Base+0x848>
   11900:	ldr	r3, [fp, #-20]	; 0xffffffec
   11904:	ldr	r3, [r3]
   11908:	cmp	r3, #1
   1190c:	bne	11a8c <_start@@Base+0x848>
   11910:	mov	r3, #0
   11914:	str	r3, [fp, #-8]
   11918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1191c:	bl	134cc <mmk_mock_params_begin@@Base>
   11920:	str	r0, [fp, #-12]
   11924:	b	11958 <_start@@Base+0x714>
   11928:	ldr	r3, [fp, #-20]	; 0xffffffec
   1192c:	str	r3, [fp, #-32]	; 0xffffffe0
   11930:	ldr	r3, [fp, #-12]
   11934:	ldr	r3, [r3]
   11938:	ldr	r2, [fp, #-8]
   1193c:	add	r3, r2, r3
   11940:	str	r3, [fp, #-8]
   11944:	nop	{0}
   11948:	ldr	r1, [fp, #-12]
   1194c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11950:	bl	13520 <mmk_mock_params_next@@Base>
   11954:	str	r0, [fp, #-12]
   11958:	ldr	r3, [fp, #-12]
   1195c:	cmp	r3, #0
   11960:	bne	11928 <_start@@Base+0x6e4>
   11964:	ldr	r3, [fp, #-20]	; 0xffffffec
   11968:	str	r3, [fp, #-16]
   1196c:	b	1198c <_start@@Base+0x748>
   11970:	ldr	r3, [fp, #-16]
   11974:	ldr	r3, [r3, #8]
   11978:	str	r3, [fp, #-36]	; 0xffffffdc
   1197c:	ldr	r0, [fp, #-16]
   11980:	bl	145c0 <mmk_free@@Base>
   11984:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11988:	str	r3, [fp, #-16]
   1198c:	ldr	r3, [fp, #-16]
   11990:	cmp	r3, #0
   11994:	bne	11970 <_start@@Base+0x72c>
   11998:	ldr	r0, [fp, #-8]
   1199c:	bl	13fd8 <mmk_verify_set_times@@Base>
   119a0:	b	11a8c <_start@@Base+0x848>
   119a4:	sub	r1, fp, #64	; 0x40
   119a8:	mov	r2, #0
   119ac:	mov	r3, #0
   119b0:	strd	r2, [r1]
   119b4:	mov	r3, r2
   119b8:	str	r3, [r1, #8]
   119bc:	sub	r3, fp, #64	; 0x40
   119c0:	str	r3, [fp, #-40]	; 0xffffffd8
   119c4:	mov	r1, #12
   119c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   119cc:	bl	141f0 <mmk_verify_register_call@@Base>
   119d0:	bl	13598 <mmk_mock_get_params@@Base>
   119d4:	str	r0, [fp, #-44]	; 0xffffffd4
   119d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   119dc:	cmp	r3, #0
   119e0:	beq	11a94 <_start@@Base+0x850>
   119e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   119e8:	str	r3, [fp, #-48]	; 0xffffffd0
   119ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   119f0:	ldr	r3, [r3]
   119f4:	str	r3, [fp, #-52]	; 0xffffffcc
   119f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   119fc:	ldr	r3, [r3, #12]
   11a00:	cmp	r3, #0
   11a04:	beq	11a1c <_start@@Base+0x7d8>
   11a08:	bl	11208 <__errno_location@plt>
   11a0c:	mov	r2, r0
   11a10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a14:	ldr	r3, [r3, #12]
   11a18:	str	r3, [r2]
   11a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a20:	ldr	r3, [r3, #20]
   11a24:	cmp	r3, #0
   11a28:	beq	11a4c <_start@@Base+0x808>
   11a2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a30:	ldr	r3, [r3, #16]
   11a34:	cmp	r3, #0
   11a38:	bne	11a4c <_start@@Base+0x808>
   11a3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a40:	ldr	r3, [r3, #20]
   11a44:	blx	r3
   11a48:	b	11a98 <_start@@Base+0x854>
   11a4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a50:	ldr	r3, [r3, #20]
   11a54:	cmp	r3, #0
   11a58:	beq	11a7c <_start@@Base+0x838>
   11a5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a60:	ldr	r3, [r3, #16]
   11a64:	cmp	r3, #0
   11a68:	beq	11a7c <_start@@Base+0x838>
   11a6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a70:	ldr	r3, [r3, #20]
   11a74:	blx	r3
   11a78:	b	11a98 <_start@@Base+0x854>
   11a7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a80:	ldr	r3, [r3, #16]
   11a84:	cmp	r3, #0
   11a88:	b	11a98 <_start@@Base+0x854>
   11a8c:	nop	{0}
   11a90:	b	11a98 <_start@@Base+0x854>
   11a94:	nop	{0}
   11a98:	sub	sp, fp, #4
   11a9c:	ldr	fp, [sp]
   11aa0:	add	sp, sp, #4
   11aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa8:	str	fp, [sp, #-8]!
   11aac:	str	lr, [sp, #4]
   11ab0:	add	fp, sp, #4
   11ab4:	sub	sp, sp, #8
   11ab8:	str	r0, [fp, #-8]
   11abc:	movw	r1, #6260	; 0x1874
   11ac0:	movt	r1, #1
   11ac4:	ldr	r0, [fp, #-8]
   11ac8:	bl	131f8 <mmk_mock_create_internal@@Base>
   11acc:	mov	r3, r0
   11ad0:	mov	r0, r3
   11ad4:	sub	sp, fp, #4
   11ad8:	ldr	fp, [sp]
   11adc:	add	sp, sp, #4
   11ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ae4:	str	r4, [sp, #-12]!
   11ae8:	str	fp, [sp, #4]
   11aec:	str	lr, [sp, #8]
   11af0:	add	fp, sp, #8
   11af4:	sub	sp, sp, #36	; 0x24
   11af8:	str	r0, [fp, #-32]	; 0xffffffe0
   11afc:	str	r1, [fp, #-36]	; 0xffffffdc
   11b00:	str	r2, [fp, #-40]	; 0xffffffd8
   11b04:	str	r3, [fp, #-44]	; 0xffffffd4
   11b08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b0c:	cmp	r3, #0
   11b10:	bgt	11b1c <_start@@Base+0x8d8>
   11b14:	mov	r3, #0
   11b18:	b	11bec <_start@@Base+0x9a8>
   11b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b20:	lsl	r3, r3, #2
   11b24:	mov	r0, r3
   11b28:	bl	145a0 <mmk_malloc@@Base>
   11b2c:	str	r0, [fp, #-20]	; 0xffffffec
   11b30:	mov	r3, #0
   11b34:	str	r3, [fp, #-16]
   11b38:	b	11bc0 <_start@@Base+0x97c>
   11b3c:	ldr	r3, [fp, #-16]
   11b40:	lsl	r3, r3, #2
   11b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b48:	add	r4, r2, r3
   11b4c:	mov	r0, #8
   11b50:	bl	145a0 <mmk_malloc@@Base>
   11b54:	mov	r3, r0
   11b58:	str	r3, [r4]
   11b5c:	ldr	r3, [fp, #-16]
   11b60:	lsl	r3, r3, #2
   11b64:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b68:	add	r3, r2, r3
   11b6c:	ldr	r3, [r3]
   11b70:	mov	r2, #4
   11b74:	str	r2, [r3]
   11b78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b7c:	add	r2, r3, #4
   11b80:	str	r2, [fp, #-36]	; 0xffffffdc
   11b84:	ldr	r3, [r3]
   11b88:	str	r3, [fp, #-24]	; 0xffffffe8
   11b8c:	ldr	r3, [fp, #-16]
   11b90:	lsl	r3, r3, #2
   11b94:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b98:	add	r3, r2, r3
   11b9c:	ldr	r3, [r3]
   11ba0:	add	r3, r3, #4
   11ba4:	sub	r1, fp, #24
   11ba8:	mov	r2, #4
   11bac:	mov	r0, r3
   11bb0:	bl	14460 <mmk_memcpy@@Base>
   11bb4:	ldr	r3, [fp, #-16]
   11bb8:	add	r3, r3, #1
   11bbc:	str	r3, [fp, #-16]
   11bc0:	ldr	r2, [fp, #-16]
   11bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bc8:	cmp	r2, r3
   11bcc:	blt	11b3c <_start@@Base+0x8f8>
   11bd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11bd8:	str	r2, [r3]
   11bdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   11be4:	str	r2, [r3]
   11be8:	mov	r3, #1
   11bec:	mov	r0, r3
   11bf0:	sub	sp, fp, #8
   11bf4:	ldr	r4, [sp]
   11bf8:	ldr	fp, [sp, #4]
   11bfc:	add	sp, sp, #8
   11c00:	pop	{pc}		; (ldr pc, [sp], #4)
   11c04:	push	{r0, r1, r2, r3}
   11c08:	str	r4, [sp, #-12]!
   11c0c:	str	fp, [sp, #4]
   11c10:	str	lr, [sp, #8]
   11c14:	add	fp, sp, #8
   11c18:	sub	sp, sp, #156	; 0x9c
   11c1c:	movw	r3, #6884	; 0x1ae4
   11c20:	movt	r3, #1
   11c24:	str	r3, [fp, #-40]	; 0xffffffd8
   11c28:	add	r3, fp, #8
   11c2c:	str	r3, [fp, #-136]	; 0xffffff78
   11c30:	bl	13174 <mmk_matcher_ctx@@Base>
   11c34:	str	r0, [fp, #-44]	; 0xffffffd4
   11c38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11c3c:	cmp	r3, #0
   11c40:	beq	12120 <_start@@Base+0xedc>
   11c44:	bl	13e9c <mmk_ctx@@Base>
   11c48:	mov	r3, r0
   11c4c:	mov	r0, r3
   11c50:	bl	13a9c <mmk_stub_context@@Base>
   11c54:	str	r0, [fp, #-48]	; 0xffffffd0
   11c58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11c5c:	ldr	r3, [r3]
   11c60:	cmp	r3, #0
   11c64:	bne	11d10 <_start@@Base+0xacc>
   11c68:	mov	r0, #44	; 0x2c
   11c6c:	bl	145a0 <mmk_malloc@@Base>
   11c70:	str	r0, [fp, #-52]	; 0xffffffcc
   11c74:	bl	146f0 <mmk_when_get_result@@Base>
   11c78:	mov	r2, r0
   11c7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11c80:	add	r3, r3, #8
   11c84:	ldrd	r0, [r2]
   11c88:	strd	r0, [r3]
   11c8c:	ldrd	r0, [r2, #8]
   11c90:	strd	r0, [r3, #8]
   11c94:	ldr	r2, [r2, #16]
   11c98:	str	r2, [r3, #16]
   11c9c:	ldr	r2, [fp, #4]
   11ca0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11ca4:	str	r2, [r3, #40]	; 0x28
   11ca8:	mov	r3, #0
   11cac:	str	r3, [fp, #-144]	; 0xffffff70
   11cb0:	mov	r3, #0
   11cb4:	str	r3, [fp, #-148]	; 0xffffff6c
   11cb8:	ldr	r3, [fp, #-136]	; 0xffffff78
   11cbc:	str	r3, [fp, #-140]	; 0xffffff74
   11cc0:	ldr	r0, [fp, #4]
   11cc4:	sub	r3, fp, #148	; 0x94
   11cc8:	sub	r2, fp, #144	; 0x90
   11ccc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   11cd0:	ldr	r1, [fp, #-140]	; 0xffffff74
   11cd4:	blx	r4
   11cd8:	str	r0, [fp, #-56]	; 0xffffffc8
   11cdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11ce0:	cmp	r3, #0
   11ce4:	beq	11d00 <_start@@Base+0xabc>
   11ce8:	ldr	r2, [fp, #-144]	; 0xffffff70
   11cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11cf0:	str	r2, [r3, #32]
   11cf4:	ldr	r2, [fp, #-148]	; 0xffffff6c
   11cf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11cfc:	str	r2, [r3, #36]	; 0x24
   11d00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11d04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11d08:	bl	14718 <mmk_when_impl@@Base>
   11d0c:	b	12110 <_start@@Base+0xecc>
   11d10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d14:	ldr	r3, [r3]
   11d18:	cmp	r3, #1
   11d1c:	bne	12110 <_start@@Base+0xecc>
   11d20:	mov	r3, #0
   11d24:	str	r3, [fp, #-16]
   11d28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11d2c:	bl	134cc <mmk_mock_params_begin@@Base>
   11d30:	str	r0, [fp, #-20]	; 0xffffffec
   11d34:	b	120c8 <_start@@Base+0xe84>
   11d38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d3c:	str	r3, [fp, #-24]	; 0xffffffe8
   11d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d44:	ldr	r3, [r3, #8]
   11d48:	cmp	r3, #0
   11d4c:	beq	11e3c <_start@@Base+0xbf8>
   11d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d54:	ldr	r3, [r3, #8]
   11d58:	str	r3, [fp, #-24]	; 0xffffffe8
   11d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d60:	ldr	r3, [r3]
   11d64:	cmp	r3, #0
   11d68:	beq	11e60 <_start@@Base+0xc1c>
   11d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d70:	ldr	r3, [r3]
   11d74:	cmp	r3, #0
   11d78:	bge	11dfc <_start@@Base+0xbb8>
   11d7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d80:	add	r3, r3, #12
   11d84:	mov	r2, #4
   11d88:	add	r1, fp, #4
   11d8c:	mov	r0, r3
   11d90:	bl	1440c <mmk_memcmp@@Base>
   11d94:	str	r0, [fp, #-60]	; 0xffffffc4
   11d98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d9c:	cmp	r3, #0
   11da0:	bne	11db8 <_start@@Base+0xb74>
   11da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11da8:	ldr	r3, [r3]
   11dac:	and	r3, r3, #2
   11db0:	cmp	r3, #0
   11db4:	beq	1207c <_start@@Base+0xe38>
   11db8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11dbc:	cmp	r3, #0
   11dc0:	bge	11dd8 <_start@@Base+0xb94>
   11dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dc8:	ldr	r3, [r3]
   11dcc:	and	r3, r3, #4
   11dd0:	cmp	r3, #0
   11dd4:	beq	12084 <_start@@Base+0xe40>
   11dd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ddc:	cmp	r3, #0
   11de0:	ble	11e60 <_start@@Base+0xc1c>
   11de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11de8:	ldr	r3, [r3]
   11dec:	and	r3, r3, #8
   11df0:	cmp	r3, #0
   11df4:	bne	11e60 <_start@@Base+0xc1c>
   11df8:	b	120b8 <_start@@Base+0xe74>
   11dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e00:	ldr	r3, [r3]
   11e04:	cmp	r3, #1
   11e08:	bne	11e60 <_start@@Base+0xc1c>
   11e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e10:	bl	131f0 <mmk_matcher_get_predicate@@Base>
   11e14:	str	r0, [fp, #-64]	; 0xffffffc0
   11e18:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e1c:	ldr	r2, [r3, #12]
   11e20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11e24:	mov	r0, r2
   11e28:	blx	r3
   11e2c:	mov	r3, r0
   11e30:	cmp	r3, #0
   11e34:	bne	11e60 <_start@@Base+0xc1c>
   11e38:	b	120b8 <_start@@Base+0xe74>
   11e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e40:	add	r3, r3, #12
   11e44:	mov	r2, #4
   11e48:	add	r1, fp, #4
   11e4c:	mov	r0, r3
   11e50:	bl	1440c <mmk_memcmp@@Base>
   11e54:	mov	r3, r0
   11e58:	cmp	r3, #0
   11e5c:	bne	1208c <_start@@Base+0xe48>
   11e60:	mov	r3, #0
   11e64:	str	r3, [fp, #-152]	; 0xffffff68
   11e68:	mov	r3, #0
   11e6c:	str	r3, [fp, #-156]	; 0xffffff64
   11e70:	ldr	r3, [fp, #-136]	; 0xffffff78
   11e74:	str	r3, [fp, #-140]	; 0xffffff74
   11e78:	ldr	r0, [fp, #4]
   11e7c:	sub	r3, fp, #156	; 0x9c
   11e80:	sub	r2, fp, #152	; 0x98
   11e84:	ldr	r4, [fp, #-40]	; 0xffffffd8
   11e88:	ldr	r1, [fp, #-140]	; 0xffffff74
   11e8c:	blx	r4
   11e90:	str	r0, [fp, #-68]	; 0xffffffbc
   11e94:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11e98:	cmp	r3, #0
   11e9c:	beq	12094 <_start@@Base+0xe50>
   11ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ea4:	ldr	r2, [r3, #4]
   11ea8:	ldr	r3, [fp, #-152]	; 0xffffff68
   11eac:	cmp	r2, r3
   11eb0:	bne	12094 <_start@@Base+0xe50>
   11eb4:	mov	r3, #0
   11eb8:	str	r3, [fp, #-28]	; 0xffffffe4
   11ebc:	b	12048 <_start@@Base+0xe04>
   11ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ec4:	ldr	r2, [r3, #8]
   11ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ecc:	lsl	r3, r3, #2
   11ed0:	add	r3, r2, r3
   11ed4:	ldr	r3, [r3]
   11ed8:	str	r3, [fp, #-72]	; 0xffffffb8
   11edc:	ldr	r2, [fp, #-156]	; 0xffffff64
   11ee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ee4:	lsl	r3, r3, #2
   11ee8:	add	r3, r2, r3
   11eec:	ldr	r3, [r3]
   11ef0:	str	r3, [fp, #-76]	; 0xffffffb4
   11ef4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11ef8:	ldr	r2, [r3]
   11efc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11f00:	ldr	r3, [r3]
   11f04:	cmp	r2, r3
   11f08:	bne	1209c <_start@@Base+0xe58>
   11f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f10:	ldr	r3, [r3, #8]
   11f14:	cmp	r3, #0
   11f18:	beq	12008 <_start@@Base+0xdc4>
   11f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f20:	ldr	r3, [r3, #8]
   11f24:	str	r3, [fp, #-24]	; 0xffffffe8
   11f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f2c:	ldr	r3, [r3]
   11f30:	cmp	r3, #0
   11f34:	beq	12034 <_start@@Base+0xdf0>
   11f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f3c:	ldr	r3, [r3]
   11f40:	cmp	r3, #0
   11f44:	bge	11fd0 <_start@@Base+0xd8c>
   11f48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11f4c:	add	r0, r3, #4
   11f50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11f54:	add	r1, r3, #4
   11f58:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11f5c:	ldr	r3, [r3]
   11f60:	mov	r2, r3
   11f64:	bl	1440c <mmk_memcmp@@Base>
   11f68:	str	r0, [fp, #-80]	; 0xffffffb0
   11f6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11f70:	cmp	r3, #0
   11f74:	bne	11f8c <_start@@Base+0xd48>
   11f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f7c:	ldr	r3, [r3]
   11f80:	and	r3, r3, #2
   11f84:	cmp	r3, #0
   11f88:	beq	120a4 <_start@@Base+0xe60>
   11f8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11f90:	cmp	r3, #0
   11f94:	bge	11fac <_start@@Base+0xd68>
   11f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f9c:	ldr	r3, [r3]
   11fa0:	and	r3, r3, #4
   11fa4:	cmp	r3, #0
   11fa8:	beq	120ac <_start@@Base+0xe68>
   11fac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11fb0:	cmp	r3, #0
   11fb4:	ble	12034 <_start@@Base+0xdf0>
   11fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fbc:	ldr	r3, [r3]
   11fc0:	and	r3, r3, #8
   11fc4:	cmp	r3, #0
   11fc8:	bne	12034 <_start@@Base+0xdf0>
   11fcc:	b	120b8 <_start@@Base+0xe74>
   11fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fd4:	ldr	r3, [r3]
   11fd8:	cmp	r3, #1
   11fdc:	bne	12034 <_start@@Base+0xdf0>
   11fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11fe4:	bl	131f0 <mmk_matcher_get_predicate@@Base>
   11fe8:	str	r0, [fp, #-84]	; 0xffffffac
   11fec:	ldr	r3, [fp, #-84]	; 0xffffffac
   11ff0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ff4:	blx	r3
   11ff8:	mov	r3, r0
   11ffc:	cmp	r3, #0
   12000:	bne	12034 <_start@@Base+0xdf0>
   12004:	b	120b8 <_start@@Base+0xe74>
   12008:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1200c:	add	r0, r3, #4
   12010:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12014:	add	r1, r3, #4
   12018:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1201c:	ldr	r3, [r3]
   12020:	mov	r2, r3
   12024:	bl	1440c <mmk_memcmp@@Base>
   12028:	mov	r3, r0
   1202c:	cmp	r3, #0
   12030:	bne	120b4 <_start@@Base+0xe70>
   12034:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12038:	bl	145c0 <mmk_free@@Base>
   1203c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12040:	add	r3, r3, #1
   12044:	str	r3, [fp, #-28]	; 0xffffffe4
   12048:	ldr	r3, [fp, #-152]	; 0xffffff68
   1204c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12050:	cmp	r2, r3
   12054:	bcc	11ec0 <_start@@Base+0xc7c>
   12058:	ldr	r3, [fp, #-156]	; 0xffffff64
   1205c:	mov	r0, r3
   12060:	bl	145c0 <mmk_free@@Base>
   12064:	ldr	r3, [fp, #-20]	; 0xffffffec
   12068:	ldr	r3, [r3]
   1206c:	ldr	r2, [fp, #-16]
   12070:	add	r3, r2, r3
   12074:	str	r3, [fp, #-16]
   12078:	b	120b8 <_start@@Base+0xe74>
   1207c:	nop	{0}
   12080:	b	120b8 <_start@@Base+0xe74>
   12084:	nop	{0}
   12088:	b	120b8 <_start@@Base+0xe74>
   1208c:	nop	{0}
   12090:	b	120b8 <_start@@Base+0xe74>
   12094:	nop	{0}
   12098:	b	120b8 <_start@@Base+0xe74>
   1209c:	nop	{0}
   120a0:	b	120b8 <_start@@Base+0xe74>
   120a4:	nop	{0}
   120a8:	b	120b8 <_start@@Base+0xe74>
   120ac:	nop	{0}
   120b0:	b	120b8 <_start@@Base+0xe74>
   120b4:	nop	{0}
   120b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   120bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120c0:	bl	13520 <mmk_mock_params_next@@Base>
   120c4:	str	r0, [fp, #-20]	; 0xffffffec
   120c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   120cc:	cmp	r3, #0
   120d0:	bne	11d38 <_start@@Base+0xaf4>
   120d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   120d8:	str	r3, [fp, #-32]	; 0xffffffe0
   120dc:	b	120fc <_start@@Base+0xeb8>
   120e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   120e4:	ldr	r3, [r3, #8]
   120e8:	str	r3, [fp, #-88]	; 0xffffffa8
   120ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120f0:	bl	145c0 <mmk_free@@Base>
   120f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   120f8:	str	r3, [fp, #-32]	; 0xffffffe0
   120fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12100:	cmp	r3, #0
   12104:	bne	120e0 <_start@@Base+0xe9c>
   12108:	ldr	r0, [fp, #-16]
   1210c:	bl	13fd8 <mmk_verify_set_times@@Base>
   12110:	movw	r3, #20628	; 0x5094
   12114:	movt	r3, #2
   12118:	ldr	r3, [r3]
   1211c:	b	12408 <_start@@Base+0x11c4>
   12120:	sub	r1, fp, #132	; 0x84
   12124:	mov	r2, #0
   12128:	mov	r3, #0
   1212c:	strd	r2, [r1]
   12130:	strd	r2, [r1, #8]
   12134:	ldr	r3, [fp, #4]
   12138:	str	r3, [fp, #-120]	; 0xffffff88
   1213c:	sub	r3, fp, #132	; 0x84
   12140:	str	r3, [fp, #-92]	; 0xffffffa4
   12144:	mov	r3, #0
   12148:	str	r3, [fp, #-160]	; 0xffffff60
   1214c:	mov	r3, #0
   12150:	str	r3, [fp, #-164]	; 0xffffff5c
   12154:	ldr	r3, [fp, #-136]	; 0xffffff78
   12158:	str	r3, [fp, #-140]	; 0xffffff74
   1215c:	ldr	r0, [fp, #4]
   12160:	sub	r3, fp, #164	; 0xa4
   12164:	sub	r2, fp, #160	; 0xa0
   12168:	ldr	r4, [fp, #-40]	; 0xffffffd8
   1216c:	ldr	r1, [fp, #-140]	; 0xffffff74
   12170:	blx	r4
   12174:	str	r0, [fp, #-96]	; 0xffffffa0
   12178:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1217c:	cmp	r3, #0
   12180:	beq	1219c <_start@@Base+0xf58>
   12184:	ldr	r2, [fp, #-160]	; 0xffffff60
   12188:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1218c:	str	r2, [r3, #4]
   12190:	ldr	r2, [fp, #-164]	; 0xffffff5c
   12194:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12198:	str	r2, [r3, #8]
   1219c:	mov	r1, #16
   121a0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   121a4:	bl	141f0 <mmk_verify_register_call@@Base>
   121a8:	bl	13598 <mmk_mock_get_params@@Base>
   121ac:	str	r0, [fp, #-36]	; 0xffffffdc
   121b0:	b	123f0 <_start@@Base+0x11ac>
   121b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121b8:	str	r3, [fp, #-100]	; 0xffffff9c
   121bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121c0:	ldr	r3, [r3]
   121c4:	str	r3, [fp, #-104]	; 0xffffff98
   121c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   121cc:	ldr	r3, [r3, #8]
   121d0:	cmp	r3, #0
   121d4:	beq	122c0 <_start@@Base+0x107c>
   121d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   121dc:	ldr	r3, [r3, #8]
   121e0:	str	r3, [fp, #-104]	; 0xffffff98
   121e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   121e8:	ldr	r3, [r3]
   121ec:	cmp	r3, #0
   121f0:	beq	122e8 <_start@@Base+0x10a4>
   121f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   121f8:	ldr	r3, [r3]
   121fc:	cmp	r3, #0
   12200:	bge	12284 <_start@@Base+0x1040>
   12204:	mov	r2, #4
   12208:	add	r3, fp, #4
   1220c:	mov	r1, r3
   12210:	add	r3, fp, #4
   12214:	mov	r0, r3
   12218:	bl	1440c <mmk_memcmp@@Base>
   1221c:	str	r0, [fp, #-108]	; 0xffffff94
   12220:	ldr	r3, [fp, #-108]	; 0xffffff94
   12224:	cmp	r3, #0
   12228:	bne	12240 <_start@@Base+0xffc>
   1222c:	ldr	r3, [fp, #-104]	; 0xffffff98
   12230:	ldr	r3, [r3]
   12234:	and	r3, r3, #2
   12238:	cmp	r3, #0
   1223c:	beq	123d8 <_start@@Base+0x1194>
   12240:	ldr	r3, [fp, #-108]	; 0xffffff94
   12244:	cmp	r3, #0
   12248:	bge	12260 <_start@@Base+0x101c>
   1224c:	ldr	r3, [fp, #-104]	; 0xffffff98
   12250:	ldr	r3, [r3]
   12254:	and	r3, r3, #4
   12258:	cmp	r3, #0
   1225c:	beq	123d8 <_start@@Base+0x1194>
   12260:	ldr	r3, [fp, #-108]	; 0xffffff94
   12264:	cmp	r3, #0
   12268:	ble	122e8 <_start@@Base+0x10a4>
   1226c:	ldr	r3, [fp, #-104]	; 0xffffff98
   12270:	ldr	r3, [r3]
   12274:	and	r3, r3, #8
   12278:	cmp	r3, #0
   1227c:	bne	122e8 <_start@@Base+0x10a4>
   12280:	b	123d8 <_start@@Base+0x1194>
   12284:	ldr	r3, [fp, #-104]	; 0xffffff98
   12288:	ldr	r3, [r3]
   1228c:	cmp	r3, #1
   12290:	bne	122e8 <_start@@Base+0x10a4>
   12294:	ldr	r0, [fp, #-104]	; 0xffffff98
   12298:	bl	131f0 <mmk_matcher_get_predicate@@Base>
   1229c:	str	r0, [fp, #-112]	; 0xffffff90
   122a0:	ldr	r2, [fp, #4]
   122a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   122a8:	mov	r0, r2
   122ac:	blx	r3
   122b0:	mov	r3, r0
   122b4:	cmp	r3, #0
   122b8:	bne	122e8 <_start@@Base+0x10a4>
   122bc:	b	123e4 <_start@@Base+0x11a0>
   122c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122c4:	add	r3, r3, #40	; 0x28
   122c8:	mov	r2, #4
   122cc:	mov	r1, r3
   122d0:	add	r3, fp, #4
   122d4:	mov	r0, r3
   122d8:	bl	1440c <mmk_memcmp@@Base>
   122dc:	mov	r3, r0
   122e0:	cmp	r3, #0
   122e4:	bne	123e0 <_start@@Base+0x119c>
   122e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122ec:	ldr	r3, [r3, #12]
   122f0:	cmp	r3, #0
   122f4:	beq	1230c <_start@@Base+0x10c8>
   122f8:	bl	11208 <__errno_location@plt>
   122fc:	mov	r2, r0
   12300:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12304:	ldr	r3, [r3, #12]
   12308:	str	r3, [r2]
   1230c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12310:	ldr	r3, [r3, #20]
   12314:	cmp	r3, #0
   12318:	beq	12358 <_start@@Base+0x1114>
   1231c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12320:	ldr	r3, [r3, #16]
   12324:	cmp	r3, #0
   12328:	bne	12358 <_start@@Base+0x1114>
   1232c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12330:	str	r3, [fp, #-140]	; 0xffffff74
   12334:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12338:	ldr	r3, [r3, #20]
   1233c:	ldr	r2, [fp, #4]
   12340:	ldr	r1, [fp, #-140]	; 0xffffff74
   12344:	mov	r0, r2
   12348:	blx	r3
   1234c:	str	r0, [fp, #-116]	; 0xffffff8c
   12350:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12354:	b	12408 <_start@@Base+0x11c4>
   12358:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1235c:	ldr	r3, [r3, #20]
   12360:	cmp	r3, #0
   12364:	beq	123a8 <_start@@Base+0x1164>
   12368:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1236c:	ldr	r3, [r3, #16]
   12370:	cmp	r3, #0
   12374:	beq	123a8 <_start@@Base+0x1164>
   12378:	ldr	r3, [fp, #-136]	; 0xffffff78
   1237c:	str	r3, [fp, #-140]	; 0xffffff74
   12380:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12384:	ldr	r3, [r3, #20]
   12388:	ldr	r2, [fp, #4]
   1238c:	ldr	r1, [fp, #-140]	; 0xffffff74
   12390:	mov	r0, r2
   12394:	blx	r3
   12398:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1239c:	ldr	r3, [r3, #16]
   123a0:	ldr	r3, [r3]
   123a4:	b	12408 <_start@@Base+0x11c4>
   123a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123ac:	ldr	r3, [r3, #16]
   123b0:	cmp	r3, #0
   123b4:	beq	123c8 <_start@@Base+0x1184>
   123b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123bc:	ldr	r3, [r3, #16]
   123c0:	ldr	r3, [r3]
   123c4:	b	12408 <_start@@Base+0x11c4>
   123c8:	movw	r3, #20628	; 0x5094
   123cc:	movt	r3, #2
   123d0:	ldr	r3, [r3]
   123d4:	b	12408 <_start@@Base+0x11c4>
   123d8:	nop	{0}
   123dc:	b	123e4 <_start@@Base+0x11a0>
   123e0:	nop	{0}
   123e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   123e8:	ldr	r3, [r3, #4]
   123ec:	str	r3, [fp, #-36]	; 0xffffffdc
   123f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   123f4:	cmp	r3, #0
   123f8:	bne	121b4 <_start@@Base+0xf70>
   123fc:	movw	r3, #20628	; 0x5094
   12400:	movt	r3, #2
   12404:	ldr	r3, [r3]
   12408:	mov	r0, r3
   1240c:	sub	sp, fp, #8
   12410:	ldr	r4, [sp]
   12414:	ldr	fp, [sp, #4]
   12418:	ldr	lr, [sp, #8]
   1241c:	add	sp, sp, #12
   12420:	add	sp, sp, #16
   12424:	bx	lr
   12428:	str	fp, [sp, #-8]!
   1242c:	str	lr, [sp, #4]
   12430:	add	fp, sp, #4
   12434:	sub	sp, sp, #8
   12438:	str	r0, [fp, #-8]
   1243c:	movw	r1, #7172	; 0x1c04
   12440:	movt	r1, #1
   12444:	ldr	r0, [fp, #-8]
   12448:	bl	131f8 <mmk_mock_create_internal@@Base>
   1244c:	mov	r3, r0
   12450:	mov	r0, r3
   12454:	sub	sp, fp, #4
   12458:	ldr	fp, [sp]
   1245c:	add	sp, sp, #4
   12460:	pop	{pc}		; (ldr pc, [sp], #4)

00012464 <set_valid@@Base>:
   12464:	push	{fp}		; (str fp, [sp, #-4]!)
   12468:	add	fp, sp, #0
   1246c:	movw	r3, #20620	; 0x508c
   12470:	movt	r3, #2
   12474:	mov	r2, #1
   12478:	str	r2, [r3]
   1247c:	nop	{0}
   12480:	add	sp, fp, #0
   12484:	pop	{fp}		; (ldr fp, [sp], #4)
   12488:	bx	lr

0001248c <main@@Base>:
   1248c:	str	fp, [sp, #-8]!
   12490:	str	lr, [sp, #4]
   12494:	add	fp, sp, #4
   12498:	sub	sp, sp, #464	; 0x1d0
   1249c:	movw	r0, #18504	; 0x4848
   124a0:	movt	r0, #1
   124a4:	bl	11aa8 <_start@@Base+0x864>
   124a8:	mov	r0, #0
   124ac:	bl	13128 <mmk_matcher_init@@Base>
   124b0:	sub	r1, fp, #460	; 0x1cc
   124b4:	mov	r2, #0
   124b8:	mov	r3, #0
   124bc:	strd	r2, [r1]
   124c0:	strd	r2, [r1, #8]
   124c4:	mov	r3, r2
   124c8:	str	r3, [r1, #16]
   124cc:	movw	r3, #9316	; 0x2464
   124d0:	movt	r3, #1
   124d4:	str	r3, [fp, #-448]	; 0xfffffe40
   124d8:	sub	r3, fp, #460	; 0x1cc
   124dc:	mov	r0, r3
   124e0:	bl	146bc <mmk_when_init@@Base>
   124e4:	bl	11184 <fn_vv@plt>
   124e8:	bl	1315c <mmk_matcher_term@@Base>
   124ec:	mov	r0, #1
   124f0:	bl	13128 <mmk_matcher_init@@Base>
   124f4:	bl	11184 <fn_vv@plt>
   124f8:	bl	1315c <mmk_matcher_term@@Base>
   124fc:	sub	r1, fp, #440	; 0x1b8
   12500:	mov	r2, #0
   12504:	mov	r3, #0
   12508:	strd	r2, [r1]
   1250c:	strd	r2, [r1, #8]
   12510:	strd	r2, [r1, #16]
   12514:	mov	r3, #1
   12518:	str	r3, [fp, #-440]	; 0xfffffe48
   1251c:	mov	r3, #1
   12520:	str	r3, [fp, #-436]	; 0xfffffe4c
   12524:	sub	r3, fp, #440	; 0x1b8
   12528:	mov	r0, r3
   1252c:	bl	1400c <mmk_verify_times@@Base>
   12530:	mov	r3, r0
   12534:	cmp	r3, #0
   12538:	bne	12570 <main@@Base+0xe4>
   1253c:	movw	r3, #20592	; 0x5070
   12540:	movt	r3, #2
   12544:	ldr	r0, [r3]
   12548:	movw	r3, #18604	; 0x48ac
   1254c:	movt	r3, #1
   12550:	str	r3, [sp]
   12554:	mov	r3, #42	; 0x2a
   12558:	movw	r2, #18512	; 0x4850
   1255c:	movt	r2, #1
   12560:	movw	r1, #18572	; 0x488c
   12564:	movt	r1, #1
   12568:	bl	111fc <fprintf@plt>
   1256c:	bl	11238 <abort@plt>
   12570:	mov	r0, #1
   12574:	bl	13128 <mmk_matcher_init@@Base>
   12578:	bl	11184 <fn_vv@plt>
   1257c:	bl	1315c <mmk_matcher_term@@Base>
   12580:	sub	r1, fp, #416	; 0x1a0
   12584:	mov	r2, #0
   12588:	mov	r3, #0
   1258c:	strd	r2, [r1]
   12590:	strd	r2, [r1, #8]
   12594:	strd	r2, [r1, #16]
   12598:	mov	r3, #1
   1259c:	str	r3, [fp, #-416]	; 0xfffffe60
   125a0:	mov	r3, #1
   125a4:	str	r3, [fp, #-404]	; 0xfffffe6c
   125a8:	sub	r3, fp, #416	; 0x1a0
   125ac:	mov	r0, r3
   125b0:	bl	1400c <mmk_verify_times@@Base>
   125b4:	mov	r3, r0
   125b8:	cmp	r3, #0
   125bc:	bne	125f4 <main@@Base+0x168>
   125c0:	movw	r3, #20592	; 0x5070
   125c4:	movt	r3, #2
   125c8:	ldr	r0, [r3]
   125cc:	movw	r3, #18636	; 0x48cc
   125d0:	movt	r3, #1
   125d4:	str	r3, [sp]
   125d8:	mov	r3, #43	; 0x2b
   125dc:	movw	r2, #18512	; 0x4850
   125e0:	movt	r2, #1
   125e4:	movw	r1, #18572	; 0x488c
   125e8:	movt	r1, #1
   125ec:	bl	111fc <fprintf@plt>
   125f0:	bl	11238 <abort@plt>
   125f4:	mov	r0, #1
   125f8:	bl	13128 <mmk_matcher_init@@Base>
   125fc:	bl	11184 <fn_vv@plt>
   12600:	bl	1315c <mmk_matcher_term@@Base>
   12604:	sub	r1, fp, #392	; 0x188
   12608:	mov	r2, #0
   1260c:	mov	r3, #0
   12610:	strd	r2, [r1]
   12614:	strd	r2, [r1, #8]
   12618:	strd	r2, [r1, #16]
   1261c:	mov	r3, #1
   12620:	str	r3, [fp, #-392]	; 0xfffffe78
   12624:	mov	r3, #1
   12628:	str	r3, [fp, #-376]	; 0xfffffe88
   1262c:	sub	r3, fp, #392	; 0x188
   12630:	mov	r0, r3
   12634:	bl	1400c <mmk_verify_times@@Base>
   12638:	mov	r3, r0
   1263c:	cmp	r3, #0
   12640:	beq	12678 <main@@Base+0x1ec>
   12644:	movw	r3, #20592	; 0x5070
   12648:	movt	r3, #2
   1264c:	ldr	r0, [r3]
   12650:	movw	r3, #18672	; 0x48f0
   12654:	movt	r3, #1
   12658:	str	r3, [sp]
   1265c:	mov	r3, #45	; 0x2d
   12660:	movw	r2, #18512	; 0x4850
   12664:	movt	r2, #1
   12668:	movw	r1, #18572	; 0x488c
   1266c:	movt	r1, #1
   12670:	bl	111fc <fprintf@plt>
   12674:	bl	11238 <abort@plt>
   12678:	mov	r0, #1
   1267c:	bl	13128 <mmk_matcher_init@@Base>
   12680:	bl	11184 <fn_vv@plt>
   12684:	bl	1315c <mmk_matcher_term@@Base>
   12688:	sub	r1, fp, #368	; 0x170
   1268c:	mov	r2, #0
   12690:	mov	r3, #0
   12694:	strd	r2, [r1]
   12698:	strd	r2, [r1, #8]
   1269c:	strd	r2, [r1, #16]
   126a0:	mov	r3, #1
   126a4:	str	r3, [fp, #-368]	; 0xfffffe90
   126a8:	mov	r3, #1
   126ac:	str	r3, [fp, #-360]	; 0xfffffe98
   126b0:	sub	r3, fp, #368	; 0x170
   126b4:	mov	r0, r3
   126b8:	bl	1400c <mmk_verify_times@@Base>
   126bc:	mov	r3, r0
   126c0:	cmp	r3, #0
   126c4:	beq	126fc <main@@Base+0x270>
   126c8:	movw	r3, #20592	; 0x5070
   126cc:	movt	r3, #2
   126d0:	ldr	r0, [r3]
   126d4:	movw	r3, #18708	; 0x4914
   126d8:	movt	r3, #1
   126dc:	str	r3, [sp]
   126e0:	mov	r3, #46	; 0x2e
   126e4:	movw	r2, #18512	; 0x4850
   126e8:	movt	r2, #1
   126ec:	movw	r1, #18572	; 0x488c
   126f0:	movt	r1, #1
   126f4:	bl	111fc <fprintf@plt>
   126f8:	bl	11238 <abort@plt>
   126fc:	mov	r0, #1
   12700:	bl	13128 <mmk_matcher_init@@Base>
   12704:	bl	11184 <fn_vv@plt>
   12708:	bl	1315c <mmk_matcher_term@@Base>
   1270c:	sub	r1, fp, #344	; 0x158
   12710:	mov	r2, #0
   12714:	mov	r3, #0
   12718:	strd	r2, [r1]
   1271c:	strd	r2, [r1, #8]
   12720:	strd	r2, [r1, #16]
   12724:	mov	r3, #1
   12728:	str	r3, [fp, #-344]	; 0xfffffea8
   1272c:	mov	r3, #1
   12730:	str	r3, [fp, #-336]	; 0xfffffeb0
   12734:	mov	r3, #1
   12738:	str	r3, [fp, #-332]	; 0xfffffeb4
   1273c:	sub	r3, fp, #344	; 0x158
   12740:	mov	r0, r3
   12744:	bl	1400c <mmk_verify_times@@Base>
   12748:	mov	r3, r0
   1274c:	cmp	r3, #0
   12750:	beq	12788 <main@@Base+0x2fc>
   12754:	movw	r3, #20592	; 0x5070
   12758:	movt	r3, #2
   1275c:	ldr	r0, [r3]
   12760:	movw	r3, #18744	; 0x4938
   12764:	movt	r3, #1
   12768:	str	r3, [sp]
   1276c:	mov	r3, #47	; 0x2f
   12770:	movw	r2, #18512	; 0x4850
   12774:	movt	r2, #1
   12778:	movw	r1, #18572	; 0x488c
   1277c:	movt	r1, #1
   12780:	bl	111fc <fprintf@plt>
   12784:	bl	11238 <abort@plt>
   12788:	bl	11184 <fn_vv@plt>
   1278c:	movw	r3, #20620	; 0x508c
   12790:	movt	r3, #2
   12794:	ldr	r3, [r3]
   12798:	cmp	r3, #0
   1279c:	bne	127d4 <main@@Base+0x348>
   127a0:	movw	r3, #20592	; 0x5070
   127a4:	movt	r3, #2
   127a8:	ldr	r0, [r3]
   127ac:	movw	r3, #18796	; 0x496c
   127b0:	movt	r3, #1
   127b4:	str	r3, [sp]
   127b8:	mov	r3, #50	; 0x32
   127bc:	movw	r2, #18512	; 0x4850
   127c0:	movt	r2, #1
   127c4:	movw	r1, #18572	; 0x488c
   127c8:	movt	r1, #1
   127cc:	bl	111fc <fprintf@plt>
   127d0:	bl	11238 <abort@plt>
   127d4:	mov	r0, #1
   127d8:	bl	13128 <mmk_matcher_init@@Base>
   127dc:	bl	11184 <fn_vv@plt>
   127e0:	bl	1315c <mmk_matcher_term@@Base>
   127e4:	sub	r1, fp, #320	; 0x140
   127e8:	mov	r2, #0
   127ec:	mov	r3, #0
   127f0:	strd	r2, [r1]
   127f4:	strd	r2, [r1, #8]
   127f8:	strd	r2, [r1, #16]
   127fc:	mov	r3, #1
   12800:	str	r3, [fp, #-320]	; 0xfffffec0
   12804:	mov	r3, #1
   12808:	str	r3, [fp, #-304]	; 0xfffffed0
   1280c:	sub	r3, fp, #320	; 0x140
   12810:	mov	r0, r3
   12814:	bl	1400c <mmk_verify_times@@Base>
   12818:	mov	r3, r0
   1281c:	cmp	r3, #0
   12820:	bne	12858 <main@@Base+0x3cc>
   12824:	movw	r3, #20592	; 0x5070
   12828:	movt	r3, #2
   1282c:	ldr	r0, [r3]
   12830:	movw	r3, #18804	; 0x4974
   12834:	movt	r3, #1
   12838:	str	r3, [sp]
   1283c:	mov	r3, #51	; 0x33
   12840:	movw	r2, #18512	; 0x4850
   12844:	movt	r2, #1
   12848:	movw	r1, #18572	; 0x488c
   1284c:	movt	r1, #1
   12850:	bl	111fc <fprintf@plt>
   12854:	bl	11238 <abort@plt>
   12858:	mov	r0, #1
   1285c:	bl	13128 <mmk_matcher_init@@Base>
   12860:	bl	11184 <fn_vv@plt>
   12864:	bl	1315c <mmk_matcher_term@@Base>
   12868:	sub	r1, fp, #296	; 0x128
   1286c:	mov	r2, #0
   12870:	mov	r3, #0
   12874:	strd	r2, [r1]
   12878:	strd	r2, [r1, #8]
   1287c:	strd	r2, [r1, #16]
   12880:	mov	r3, #1
   12884:	str	r3, [fp, #-296]	; 0xfffffed8
   12888:	mov	r3, #1
   1288c:	str	r3, [fp, #-288]	; 0xfffffee0
   12890:	sub	r3, fp, #296	; 0x128
   12894:	mov	r0, r3
   12898:	bl	1400c <mmk_verify_times@@Base>
   1289c:	mov	r3, r0
   128a0:	cmp	r3, #0
   128a4:	bne	128dc <main@@Base+0x450>
   128a8:	movw	r3, #20592	; 0x5070
   128ac:	movt	r3, #2
   128b0:	ldr	r0, [r3]
   128b4:	movw	r3, #18836	; 0x4994
   128b8:	movt	r3, #1
   128bc:	str	r3, [sp]
   128c0:	mov	r3, #52	; 0x34
   128c4:	movw	r2, #18512	; 0x4850
   128c8:	movt	r2, #1
   128cc:	movw	r1, #18572	; 0x488c
   128d0:	movt	r1, #1
   128d4:	bl	111fc <fprintf@plt>
   128d8:	bl	11238 <abort@plt>
   128dc:	mov	r0, #1
   128e0:	bl	13128 <mmk_matcher_init@@Base>
   128e4:	bl	11184 <fn_vv@plt>
   128e8:	bl	1315c <mmk_matcher_term@@Base>
   128ec:	sub	r1, fp, #272	; 0x110
   128f0:	mov	r2, #0
   128f4:	mov	r3, #0
   128f8:	strd	r2, [r1]
   128fc:	strd	r2, [r1, #8]
   12900:	strd	r2, [r1, #16]
   12904:	mov	r3, #1
   12908:	str	r3, [fp, #-272]	; 0xfffffef0
   1290c:	mov	r3, #1
   12910:	str	r3, [fp, #-260]	; 0xfffffefc
   12914:	sub	r3, fp, #272	; 0x110
   12918:	mov	r0, r3
   1291c:	bl	1400c <mmk_verify_times@@Base>
   12920:	mov	r3, r0
   12924:	cmp	r3, #0
   12928:	bne	12960 <main@@Base+0x4d4>
   1292c:	movw	r3, #20592	; 0x5070
   12930:	movt	r3, #2
   12934:	ldr	r0, [r3]
   12938:	movw	r3, #18636	; 0x48cc
   1293c:	movt	r3, #1
   12940:	str	r3, [sp]
   12944:	mov	r3, #53	; 0x35
   12948:	movw	r2, #18512	; 0x4850
   1294c:	movt	r2, #1
   12950:	movw	r1, #18572	; 0x488c
   12954:	movt	r1, #1
   12958:	bl	111fc <fprintf@plt>
   1295c:	bl	11238 <abort@plt>
   12960:	mov	r0, #1
   12964:	bl	13128 <mmk_matcher_init@@Base>
   12968:	bl	11184 <fn_vv@plt>
   1296c:	bl	1315c <mmk_matcher_term@@Base>
   12970:	sub	r1, fp, #248	; 0xf8
   12974:	mov	r2, #0
   12978:	mov	r3, #0
   1297c:	strd	r2, [r1]
   12980:	strd	r2, [r1, #8]
   12984:	strd	r2, [r1, #16]
   12988:	mov	r3, #1
   1298c:	str	r3, [fp, #-248]	; 0xffffff08
   12990:	mov	r3, #1
   12994:	str	r3, [fp, #-240]	; 0xffffff10
   12998:	mov	r3, #1
   1299c:	str	r3, [fp, #-236]	; 0xffffff14
   129a0:	sub	r3, fp, #248	; 0xf8
   129a4:	mov	r0, r3
   129a8:	bl	1400c <mmk_verify_times@@Base>
   129ac:	mov	r3, r0
   129b0:	cmp	r3, #0
   129b4:	bne	129ec <main@@Base+0x560>
   129b8:	movw	r3, #20592	; 0x5070
   129bc:	movt	r3, #2
   129c0:	ldr	r0, [r3]
   129c4:	movw	r3, #18872	; 0x49b8
   129c8:	movt	r3, #1
   129cc:	str	r3, [sp]
   129d0:	mov	r3, #54	; 0x36
   129d4:	movw	r2, #18512	; 0x4850
   129d8:	movt	r2, #1
   129dc:	movw	r1, #18572	; 0x488c
   129e0:	movt	r1, #1
   129e4:	bl	111fc <fprintf@plt>
   129e8:	bl	11238 <abort@plt>
   129ec:	mov	r0, #1
   129f0:	bl	13128 <mmk_matcher_init@@Base>
   129f4:	bl	11184 <fn_vv@plt>
   129f8:	bl	1315c <mmk_matcher_term@@Base>
   129fc:	sub	r1, fp, #224	; 0xe0
   12a00:	mov	r2, #0
   12a04:	mov	r3, #0
   12a08:	strd	r2, [r1]
   12a0c:	strd	r2, [r1, #8]
   12a10:	strd	r2, [r1, #16]
   12a14:	mov	r3, #1
   12a18:	str	r3, [fp, #-224]	; 0xffffff20
   12a1c:	mov	r3, #1
   12a20:	str	r3, [fp, #-220]	; 0xffffff24
   12a24:	sub	r3, fp, #224	; 0xe0
   12a28:	mov	r0, r3
   12a2c:	bl	1400c <mmk_verify_times@@Base>
   12a30:	mov	r3, r0
   12a34:	cmp	r3, #0
   12a38:	beq	12a70 <main@@Base+0x5e4>
   12a3c:	movw	r3, #20592	; 0x5070
   12a40:	movt	r3, #2
   12a44:	ldr	r0, [r3]
   12a48:	movw	r3, #18924	; 0x49ec
   12a4c:	movt	r3, #1
   12a50:	str	r3, [sp]
   12a54:	mov	r3, #55	; 0x37
   12a58:	movw	r2, #18512	; 0x4850
   12a5c:	movt	r2, #1
   12a60:	movw	r1, #18572	; 0x488c
   12a64:	movt	r1, #1
   12a68:	bl	111fc <fprintf@plt>
   12a6c:	bl	11238 <abort@plt>
   12a70:	mov	r0, #1
   12a74:	bl	13128 <mmk_matcher_init@@Base>
   12a78:	bl	11184 <fn_vv@plt>
   12a7c:	bl	1315c <mmk_matcher_term@@Base>
   12a80:	sub	r1, fp, #200	; 0xc8
   12a84:	mov	r2, #0
   12a88:	mov	r3, #0
   12a8c:	strd	r2, [r1]
   12a90:	strd	r2, [r1, #8]
   12a94:	strd	r2, [r1, #16]
   12a98:	mov	r3, #1
   12a9c:	str	r3, [fp, #-200]	; 0xffffff38
   12aa0:	mov	r3, #2
   12aa4:	str	r3, [fp, #-184]	; 0xffffff48
   12aa8:	sub	r3, fp, #200	; 0xc8
   12aac:	mov	r0, r3
   12ab0:	bl	1400c <mmk_verify_times@@Base>
   12ab4:	mov	r3, r0
   12ab8:	cmp	r3, #0
   12abc:	beq	12af4 <main@@Base+0x668>
   12ac0:	movw	r3, #20592	; 0x5070
   12ac4:	movt	r3, #2
   12ac8:	ldr	r0, [r3]
   12acc:	movw	r3, #18960	; 0x4a10
   12ad0:	movt	r3, #1
   12ad4:	str	r3, [sp]
   12ad8:	mov	r3, #56	; 0x38
   12adc:	movw	r2, #18512	; 0x4850
   12ae0:	movt	r2, #1
   12ae4:	movw	r1, #18572	; 0x488c
   12ae8:	movt	r1, #1
   12aec:	bl	111fc <fprintf@plt>
   12af0:	bl	11238 <abort@plt>
   12af4:	mov	r0, #1
   12af8:	bl	13128 <mmk_matcher_init@@Base>
   12afc:	bl	11184 <fn_vv@plt>
   12b00:	bl	1315c <mmk_matcher_term@@Base>
   12b04:	sub	r1, fp, #176	; 0xb0
   12b08:	mov	r2, #0
   12b0c:	mov	r3, #0
   12b10:	strd	r2, [r1]
   12b14:	strd	r2, [r1, #8]
   12b18:	strd	r2, [r1, #16]
   12b1c:	mov	r3, #1
   12b20:	str	r3, [fp, #-176]	; 0xffffff50
   12b24:	mov	r3, #2
   12b28:	str	r3, [fp, #-168]	; 0xffffff58
   12b2c:	sub	r3, fp, #176	; 0xb0
   12b30:	mov	r0, r3
   12b34:	bl	1400c <mmk_verify_times@@Base>
   12b38:	mov	r3, r0
   12b3c:	cmp	r3, #0
   12b40:	beq	12b78 <main@@Base+0x6ec>
   12b44:	movw	r3, #20592	; 0x5070
   12b48:	movt	r3, #2
   12b4c:	ldr	r0, [r3]
   12b50:	movw	r3, #18996	; 0x4a34
   12b54:	movt	r3, #1
   12b58:	str	r3, [sp]
   12b5c:	mov	r3, #57	; 0x39
   12b60:	movw	r2, #18512	; 0x4850
   12b64:	movt	r2, #1
   12b68:	movw	r1, #18572	; 0x488c
   12b6c:	movt	r1, #1
   12b70:	bl	111fc <fprintf@plt>
   12b74:	bl	11238 <abort@plt>
   12b78:	movw	r0, #4484	; 0x1184
   12b7c:	movt	r0, #1
   12b80:	bl	130d0 <mmk_reset@@Base>
   12b84:	movw	r3, #65278	; 0xfefe
   12b88:	movt	r3, #65278	; 0xfefe
   12b8c:	str	r3, [fp, #-8]
   12b90:	movw	r0, #19032	; 0x4a58
   12b94:	movt	r0, #1
   12b98:	bl	11838 <_start@@Base+0x5f4>
   12b9c:	mov	r0, #0
   12ba0:	bl	13128 <mmk_matcher_init@@Base>
   12ba4:	sub	r1, fp, #152	; 0x98
   12ba8:	mov	r2, #0
   12bac:	mov	r3, #0
   12bb0:	strd	r2, [r1]
   12bb4:	strd	r2, [r1, #8]
   12bb8:	mov	r3, r2
   12bbc:	str	r3, [r1, #16]
   12bc0:	ldr	r3, [fp, #-8]
   12bc4:	str	r3, [fp, #-148]	; 0xffffff6c
   12bc8:	mov	r3, #1
   12bcc:	str	r3, [fp, #-132]	; 0xffffff7c
   12bd0:	sub	r3, fp, #132	; 0x84
   12bd4:	str	r3, [fp, #-144]	; 0xffffff70
   12bd8:	sub	r3, fp, #152	; 0x98
   12bdc:	mov	r0, r3
   12be0:	bl	146bc <mmk_when_init@@Base>
   12be4:	mov	r0, #1
   12be8:	bl	1119c <fn_ii@plt>
   12bec:	bl	1315c <mmk_matcher_term@@Base>
   12bf0:	mov	r0, #1
   12bf4:	bl	1119c <fn_ii@plt>
   12bf8:	mov	r3, r0
   12bfc:	cmp	r3, #1
   12c00:	bne	12c1c <main@@Base+0x790>
   12c04:	bl	11208 <__errno_location@plt>
   12c08:	mov	r3, r0
   12c0c:	ldr	r3, [r3]
   12c10:	ldr	r2, [fp, #-8]
   12c14:	cmp	r2, r3
   12c18:	beq	12c50 <main@@Base+0x7c4>
   12c1c:	movw	r3, #20592	; 0x5070
   12c20:	movt	r3, #2
   12c24:	ldr	r0, [r3]
   12c28:	movw	r3, #19040	; 0x4a60
   12c2c:	movt	r3, #1
   12c30:	str	r3, [sp]
   12c34:	mov	r3, #64	; 0x40
   12c38:	movw	r2, #18512	; 0x4850
   12c3c:	movt	r2, #1
   12c40:	movw	r1, #18572	; 0x488c
   12c44:	movt	r1, #1
   12c48:	bl	111fc <fprintf@plt>
   12c4c:	bl	11238 <abort@plt>
   12c50:	mov	r0, #42	; 0x2a
   12c54:	bl	1119c <fn_ii@plt>
   12c58:	mov	r3, r0
   12c5c:	cmp	r3, #0
   12c60:	beq	12c98 <main@@Base+0x80c>
   12c64:	movw	r3, #20592	; 0x5070
   12c68:	movt	r3, #2
   12c6c:	ldr	r0, [r3]
   12c70:	movw	r3, #19072	; 0x4a80
   12c74:	movt	r3, #1
   12c78:	str	r3, [sp]
   12c7c:	mov	r3, #65	; 0x41
   12c80:	movw	r2, #18512	; 0x4850
   12c84:	movt	r2, #1
   12c88:	movw	r1, #18572	; 0x488c
   12c8c:	movt	r1, #1
   12c90:	bl	111fc <fprintf@plt>
   12c94:	bl	11238 <abort@plt>
   12c98:	mov	r0, #1
   12c9c:	bl	13128 <mmk_matcher_init@@Base>
   12ca0:	mov	r1, #0
   12ca4:	mov	r0, #0
   12ca8:	bl	13188 <mmk_matcher_add@@Base>
   12cac:	mov	r0, #0
   12cb0:	bl	1119c <fn_ii@plt>
   12cb4:	bl	1315c <mmk_matcher_term@@Base>
   12cb8:	sub	r1, fp, #128	; 0x80
   12cbc:	mov	r2, #0
   12cc0:	mov	r3, #0
   12cc4:	strd	r2, [r1]
   12cc8:	strd	r2, [r1, #8]
   12ccc:	strd	r2, [r1, #16]
   12cd0:	mov	r3, #1
   12cd4:	str	r3, [fp, #-128]	; 0xffffff80
   12cd8:	mov	r3, #2
   12cdc:	str	r3, [fp, #-112]	; 0xffffff90
   12ce0:	sub	r3, fp, #128	; 0x80
   12ce4:	mov	r0, r3
   12ce8:	bl	1400c <mmk_verify_times@@Base>
   12cec:	mov	r3, r0
   12cf0:	cmp	r3, #0
   12cf4:	bne	12d2c <main@@Base+0x8a0>
   12cf8:	movw	r3, #20592	; 0x5070
   12cfc:	movt	r3, #2
   12d00:	ldr	r0, [r3]
   12d04:	movw	r3, #19088	; 0x4a90
   12d08:	movt	r3, #1
   12d0c:	str	r3, [sp]
   12d10:	mov	r3, #67	; 0x43
   12d14:	movw	r2, #18512	; 0x4850
   12d18:	movt	r2, #1
   12d1c:	movw	r1, #18572	; 0x488c
   12d20:	movt	r1, #1
   12d24:	bl	111fc <fprintf@plt>
   12d28:	bl	11238 <abort@plt>
   12d2c:	mov	r0, #1
   12d30:	bl	13128 <mmk_matcher_init@@Base>
   12d34:	mov	r0, #1
   12d38:	bl	1119c <fn_ii@plt>
   12d3c:	bl	1315c <mmk_matcher_term@@Base>
   12d40:	sub	r1, fp, #104	; 0x68
   12d44:	mov	r2, #0
   12d48:	mov	r3, #0
   12d4c:	strd	r2, [r1]
   12d50:	strd	r2, [r1, #8]
   12d54:	strd	r2, [r1, #16]
   12d58:	mov	r3, #1
   12d5c:	str	r3, [fp, #-104]	; 0xffffff98
   12d60:	mov	r3, #1
   12d64:	str	r3, [fp, #-88]	; 0xffffffa8
   12d68:	sub	r3, fp, #104	; 0x68
   12d6c:	mov	r0, r3
   12d70:	bl	1400c <mmk_verify_times@@Base>
   12d74:	mov	r3, r0
   12d78:	cmp	r3, #0
   12d7c:	bne	12db4 <main@@Base+0x928>
   12d80:	movw	r3, #20592	; 0x5070
   12d84:	movt	r3, #2
   12d88:	ldr	r0, [r3]
   12d8c:	movw	r3, #19132	; 0x4abc
   12d90:	movt	r3, #1
   12d94:	str	r3, [sp]
   12d98:	mov	r3, #68	; 0x44
   12d9c:	movw	r2, #18512	; 0x4850
   12da0:	movt	r2, #1
   12da4:	movw	r1, #18572	; 0x488c
   12da8:	movt	r1, #1
   12dac:	bl	111fc <fprintf@plt>
   12db0:	bl	11238 <abort@plt>
   12db4:	mov	r0, #1
   12db8:	bl	13128 <mmk_matcher_init@@Base>
   12dbc:	mov	r0, #42	; 0x2a
   12dc0:	bl	1119c <fn_ii@plt>
   12dc4:	bl	1315c <mmk_matcher_term@@Base>
   12dc8:	sub	r1, fp, #80	; 0x50
   12dcc:	mov	r2, #0
   12dd0:	mov	r3, #0
   12dd4:	strd	r2, [r1]
   12dd8:	strd	r2, [r1, #8]
   12ddc:	strd	r2, [r1, #16]
   12de0:	mov	r3, #1
   12de4:	str	r3, [fp, #-80]	; 0xffffffb0
   12de8:	mov	r3, #1
   12dec:	str	r3, [fp, #-64]	; 0xffffffc0
   12df0:	sub	r3, fp, #80	; 0x50
   12df4:	mov	r0, r3
   12df8:	bl	1400c <mmk_verify_times@@Base>
   12dfc:	mov	r3, r0
   12e00:	cmp	r3, #0
   12e04:	bne	12e3c <main@@Base+0x9b0>
   12e08:	movw	r3, #20592	; 0x5070
   12e0c:	movt	r3, #2
   12e10:	ldr	r0, [r3]
   12e14:	movw	r3, #19168	; 0x4ae0
   12e18:	movt	r3, #1
   12e1c:	str	r3, [sp]
   12e20:	mov	r3, #69	; 0x45
   12e24:	movw	r2, #18512	; 0x4850
   12e28:	movt	r2, #1
   12e2c:	movw	r1, #18572	; 0x488c
   12e30:	movt	r1, #1
   12e34:	bl	111fc <fprintf@plt>
   12e38:	bl	11238 <abort@plt>
   12e3c:	mov	r0, #1
   12e40:	bl	13128 <mmk_matcher_init@@Base>
   12e44:	mov	r0, #12
   12e48:	bl	1119c <fn_ii@plt>
   12e4c:	bl	1315c <mmk_matcher_term@@Base>
   12e50:	sub	r1, fp, #56	; 0x38
   12e54:	mov	r2, #0
   12e58:	mov	r3, #0
   12e5c:	strd	r2, [r1]
   12e60:	strd	r2, [r1, #8]
   12e64:	strd	r2, [r1, #16]
   12e68:	mov	r3, #1
   12e6c:	str	r3, [fp, #-56]	; 0xffffffc8
   12e70:	mov	r3, #1
   12e74:	str	r3, [fp, #-52]	; 0xffffffcc
   12e78:	sub	r3, fp, #56	; 0x38
   12e7c:	mov	r0, r3
   12e80:	bl	1400c <mmk_verify_times@@Base>
   12e84:	mov	r3, r0
   12e88:	cmp	r3, #0
   12e8c:	bne	12ec4 <main@@Base+0xa38>
   12e90:	movw	r3, #20592	; 0x5070
   12e94:	movt	r3, #2
   12e98:	ldr	r0, [r3]
   12e9c:	movw	r3, #19204	; 0x4b04
   12ea0:	movt	r3, #1
   12ea4:	str	r3, [sp]
   12ea8:	mov	r3, #70	; 0x46
   12eac:	movw	r2, #18512	; 0x4850
   12eb0:	movt	r2, #1
   12eb4:	movw	r1, #18572	; 0x488c
   12eb8:	movt	r1, #1
   12ebc:	bl	111fc <fprintf@plt>
   12ec0:	bl	11238 <abort@plt>
   12ec4:	movw	r0, #4508	; 0x119c
   12ec8:	movt	r0, #1
   12ecc:	bl	130d0 <mmk_reset@@Base>
   12ed0:	movw	r0, #19240	; 0x4b28
   12ed4:	movt	r0, #1
   12ed8:	bl	12428 <_start@@Base+0x11e4>
   12edc:	mov	r0, #0
   12ee0:	bl	13128 <mmk_matcher_init@@Base>
   12ee4:	sub	r1, fp, #32
   12ee8:	mov	r2, #0
   12eec:	mov	r3, #0
   12ef0:	strd	r2, [r1]
   12ef4:	strd	r2, [r1, #8]
   12ef8:	mov	r3, r2
   12efc:	str	r3, [r1, #16]
   12f00:	mov	r3, #1
   12f04:	str	r3, [fp, #-12]
   12f08:	sub	r3, fp, #12
   12f0c:	str	r3, [fp, #-24]	; 0xffffffe8
   12f10:	sub	r3, fp, #32
   12f14:	mov	r0, r3
   12f18:	bl	146bc <mmk_when_init@@Base>
   12f1c:	mov	r1, #42	; 0x2a
   12f20:	mov	r0, #1
   12f24:	bl	111a8 <fn_ii_va@plt>
   12f28:	bl	1315c <mmk_matcher_term@@Base>
   12f2c:	mov	r1, #42	; 0x2a
   12f30:	mov	r0, #1
   12f34:	bl	111a8 <fn_ii_va@plt>
   12f38:	mov	r3, r0
   12f3c:	cmp	r3, #1
   12f40:	beq	12f78 <main@@Base+0xaec>
   12f44:	movw	r3, #20592	; 0x5070
   12f48:	movt	r3, #2
   12f4c:	ldr	r0, [r3]
   12f50:	movw	r3, #19252	; 0x4b34
   12f54:	movt	r3, #1
   12f58:	str	r3, [sp]
   12f5c:	mov	r3, #77	; 0x4d
   12f60:	movw	r2, #18512	; 0x4850
   12f64:	movt	r2, #1
   12f68:	movw	r1, #18572	; 0x488c
   12f6c:	movt	r1, #1
   12f70:	bl	111fc <fprintf@plt>
   12f74:	bl	11238 <abort@plt>
   12f78:	movw	r0, #4520	; 0x11a8
   12f7c:	movt	r0, #1
   12f80:	bl	130d0 <mmk_reset@@Base>
   12f84:	mov	r3, #0
   12f88:	mov	r0, r3
   12f8c:	sub	sp, fp, #4
   12f90:	ldr	fp, [sp]
   12f94:	add	sp, sp, #4
   12f98:	pop	{pc}		; (ldr pc, [sp], #4)

00012f9c <mmk_init@@Base>:
   12f9c:	str	fp, [sp, #-8]!
   12fa0:	str	lr, [sp, #4]
   12fa4:	add	fp, sp, #4
   12fa8:	sub	sp, sp, #8
   12fac:	movw	r3, #20632	; 0x5098
   12fb0:	movt	r3, #2
   12fb4:	ldr	r3, [r3]
   12fb8:	cmp	r3, #0
   12fbc:	bne	13044 <mmk_init@@Base+0xa8>
   12fc0:	bl	1376c <plt_init_ctx@@Base>
   12fc4:	mov	r2, r0
   12fc8:	movw	r3, #20632	; 0x5098
   12fcc:	movt	r3, #2
   12fd0:	str	r2, [r3, #4]
   12fd4:	movw	r3, #20632	; 0x5098
   12fd8:	movt	r3, #2
   12fdc:	ldr	r3, [r3, #4]
   12fe0:	cmn	r3, #1
   12fe4:	bne	1301c <mmk_init@@Base+0x80>
   12fe8:	movw	r3, #20592	; 0x5070
   12fec:	movt	r3, #2
   12ff0:	ldr	r0, [r3]
   12ff4:	movw	r3, #19364	; 0x4ba4
   12ff8:	movt	r3, #1
   12ffc:	str	r3, [sp]
   13000:	mov	r3, #45	; 0x2d
   13004:	movw	r2, #19276	; 0x4b4c
   13008:	movt	r2, #1
   1300c:	movw	r1, #19332	; 0x4b84
   13010:	movt	r1, #1
   13014:	bl	111fc <fprintf@plt>
   13018:	bl	11238 <abort@plt>
   1301c:	movw	r3, #20632	; 0x5098
   13020:	movt	r3, #2
   13024:	ldr	r3, [r3, #4]
   13028:	mov	r0, r3
   1302c:	bl	145d0 <mmk_init_vital_functions@@Base>
   13030:	movw	r3, #20632	; 0x5098
   13034:	movt	r3, #2
   13038:	mov	r2, #1
   1303c:	str	r2, [r3]
   13040:	b	13048 <mmk_init@@Base+0xac>
   13044:	nop	{0}
   13048:	sub	sp, fp, #4
   1304c:	ldr	fp, [sp]
   13050:	add	sp, sp, #4
   13054:	pop	{pc}		; (ldr pc, [sp], #4)

00013058 <mmk_plt_ctx@@Base>:
   13058:	str	fp, [sp, #-8]!
   1305c:	str	lr, [sp, #4]
   13060:	add	fp, sp, #4
   13064:	sub	sp, sp, #8
   13068:	movw	r3, #20632	; 0x5098
   1306c:	movt	r3, #2
   13070:	ldr	r3, [r3]
   13074:	cmp	r3, #0
   13078:	bne	130b0 <mmk_plt_ctx@@Base+0x58>
   1307c:	movw	r3, #20592	; 0x5070
   13080:	movt	r3, #2
   13084:	ldr	r0, [r3]
   13088:	movw	r3, #19388	; 0x4bbc
   1308c:	movt	r3, #1
   13090:	str	r3, [sp]
   13094:	mov	r3, #54	; 0x36
   13098:	movw	r2, #19276	; 0x4b4c
   1309c:	movt	r2, #1
   130a0:	movw	r1, #19332	; 0x4b84
   130a4:	movt	r1, #1
   130a8:	bl	111fc <fprintf@plt>
   130ac:	bl	11238 <abort@plt>
   130b0:	movw	r3, #20632	; 0x5098
   130b4:	movt	r3, #2
   130b8:	ldr	r3, [r3, #4]
   130bc:	mov	r0, r3
   130c0:	sub	sp, fp, #4
   130c4:	ldr	fp, [sp]
   130c8:	add	sp, sp, #4
   130cc:	pop	{pc}		; (ldr pc, [sp], #4)

000130d0 <mmk_reset@@Base>:
   130d0:	str	fp, [sp, #-8]!
   130d4:	str	lr, [sp, #4]
   130d8:	add	fp, sp, #4
   130dc:	sub	sp, sp, #16
   130e0:	str	r0, [fp, #-16]
   130e4:	ldr	r3, [fp, #-16]
   130e8:	cmp	r3, #0
   130ec:	beq	13114 <mmk_reset@@Base+0x44>
   130f0:	ldr	r0, [fp, #-16]
   130f4:	bl	13e10 <mmk_ask_ctx@@Base>
   130f8:	str	r0, [fp, #-8]
   130fc:	ldr	r0, [fp, #-8]
   13100:	bl	13a9c <mmk_stub_context@@Base>
   13104:	str	r0, [fp, #-12]
   13108:	ldr	r0, [fp, #-12]
   1310c:	bl	133e4 <mmk_mock_destroy_internal@@Base>
   13110:	b	13118 <mmk_reset@@Base+0x48>
   13114:	nop	{0}
   13118:	sub	sp, fp, #4
   1311c:	ldr	fp, [sp]
   13120:	add	sp, sp, #4
   13124:	pop	{pc}		; (ldr pc, [sp], #4)

00013128 <mmk_matcher_init@@Base>:
   13128:	push	{r4, lr}
   1312c:	mov	r4, r0
   13130:	mov	r0, #12
   13134:	bl	145a0 <mmk_malloc@@Base>
   13138:	ldr	r2, [pc, #24]	; 13158 <mmk_matcher_init@@Base+0x30>
   1313c:	mov	r3, #0
   13140:	str	r4, [r0]
   13144:	str	r3, [r0, #4]
   13148:	str	r3, [r0, #8]
   1314c:	mrc	15, 0, r3, cr13, cr0, {3}
   13150:	str	r0, [r3, r2]
   13154:	pop	{r4, pc}
   13158:	andeq	r0, r0, r8

0001315c <mmk_matcher_term@@Base>:
   1315c:	ldr	r2, [pc, #12]	; 13170 <mmk_matcher_term@@Base+0x14>
   13160:	mrc	15, 0, r3, cr13, cr0, {3}
   13164:	mov	r1, #0
   13168:	str	r1, [r3, r2]
   1316c:	bx	lr
   13170:	andeq	r0, r0, r8

00013174 <mmk_matcher_ctx@@Base>:
   13174:	ldr	r2, [pc, #8]	; 13184 <mmk_matcher_ctx@@Base+0x10>
   13178:	mrc	15, 0, r3, cr13, cr0, {3}
   1317c:	ldr	r0, [r2, r3]
   13180:	bx	lr
   13184:	andeq	r0, r0, r8

00013188 <mmk_matcher_add@@Base>:
   13188:	push	{r4, r5, r6, lr}
   1318c:	mov	r5, r0
   13190:	mov	r0, #12
   13194:	mov	r4, r1
   13198:	bl	145a0 <mmk_malloc@@Base>
   1319c:	ldr	r2, [pc, #72]	; 131ec <mmk_matcher_add@@Base+0x64>
   131a0:	mrc	15, 0, r3, cr13, cr0, {3}
   131a4:	str	r5, [r0]
   131a8:	str	r4, [r0, #4]
   131ac:	ldr	r2, [r3, r2]
   131b0:	mov	r3, #0
   131b4:	str	r3, [r0, #8]
   131b8:	ldr	r3, [r2, #8]
   131bc:	cmp	r3, #0
   131c0:	bne	131d4 <mmk_matcher_add@@Base+0x4c>
   131c4:	ldr	r3, [r2, #8]
   131c8:	str	r3, [r0, #8]
   131cc:	str	r0, [r2, #8]
   131d0:	pop	{r4, r5, r6, pc}
   131d4:	ldr	r1, [r3, #4]
   131d8:	cmp	r4, r1
   131dc:	bls	131c4 <mmk_matcher_add@@Base+0x3c>
   131e0:	mov	r2, r3
   131e4:	ldr	r3, [r3, #8]
   131e8:	b	131bc <mmk_matcher_add@@Base+0x34>
   131ec:	andeq	r0, r0, r8

000131f0 <mmk_matcher_get_predicate@@Base>:
   131f0:	add	r0, r0, #12
   131f4:	bx	lr

000131f8 <mmk_mock_create_internal@@Base>:
   131f8:	str	r4, [sp, #-12]!
   131fc:	str	fp, [sp, #4]
   13200:	str	lr, [sp, #8]
   13204:	add	fp, sp, #8
   13208:	sub	sp, sp, #44	; 0x2c
   1320c:	str	r0, [fp, #-40]	; 0xffffffd8
   13210:	str	r1, [fp, #-44]	; 0xffffffd4
   13214:	bl	12f9c <mmk_init@@Base>
   13218:	mov	r0, #20
   1321c:	bl	145a0 <mmk_malloc@@Base>
   13220:	str	r0, [fp, #-20]	; 0xffffffec
   13224:	ldr	r3, [fp, #-20]	; 0xffffffec
   13228:	cmp	r3, #0
   1322c:	bne	13264 <mmk_mock_create_internal@@Base+0x6c>
   13230:	movw	r3, #20592	; 0x5070
   13234:	movt	r3, #2
   13238:	ldr	r0, [r3]
   1323c:	movw	r3, #19496	; 0x4c28
   13240:	movt	r3, #1
   13244:	str	r3, [sp]
   13248:	mov	r3, #36	; 0x24
   1324c:	movw	r2, #19408	; 0x4bd0
   13250:	movt	r2, #1
   13254:	movw	r1, #19464	; 0x4c08
   13258:	movt	r1, #1
   1325c:	bl	111fc <fprintf@plt>
   13260:	bl	11238 <abort@plt>
   13264:	ldr	r3, [fp, #-20]	; 0xffffffec
   13268:	mov	r1, r3
   1326c:	mov	r2, #0
   13270:	mov	r3, #0
   13274:	strd	r2, [r1]
   13278:	strd	r2, [r1, #8]
   1327c:	mov	r3, r2
   13280:	str	r3, [r1, #16]
   13284:	mov	r1, #64	; 0x40
   13288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1328c:	bl	144e4 <mmk_strchr@@Base>
   13290:	str	r0, [fp, #-24]	; 0xffffffe8
   13294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13298:	cmp	r3, #0
   1329c:	bne	132b0 <mmk_mock_create_internal@@Base+0xb8>
   132a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   132a4:	bl	1455c <mmk_strlen@@Base>
   132a8:	str	r0, [fp, #-16]
   132ac:	b	132c0 <mmk_mock_create_internal@@Base+0xc8>
   132b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   132b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   132b8:	sub	r3, r2, r3
   132bc:	str	r3, [fp, #-16]
   132c0:	ldr	r3, [fp, #-16]
   132c4:	add	r3, r3, #1
   132c8:	mov	r0, r3
   132cc:	bl	145a0 <mmk_malloc@@Base>
   132d0:	str	r0, [fp, #-28]	; 0xffffffe4
   132d4:	ldr	r2, [fp, #-16]
   132d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   132e0:	bl	1452c <mmk_strncpy@@Base>
   132e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   132e8:	ldr	r3, [fp, #-16]
   132ec:	add	r3, r2, r3
   132f0:	mov	r2, #0
   132f4:	strb	r2, [r3]
   132f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132fc:	cmp	r3, #0
   13300:	beq	1332c <mmk_mock_create_internal@@Base+0x134>
   13304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13308:	add	r3, r3, #1
   1330c:	mov	r2, #4
   13310:	movw	r1, #19500	; 0x4c2c
   13314:	movt	r1, #1
   13318:	mov	r0, r3
   1331c:	bl	14480 <mmk_strneq@@Base>
   13320:	mov	r3, r0
   13324:	cmp	r3, #0
   13328:	beq	13334 <mmk_mock_create_internal@@Base+0x13c>
   1332c:	mov	r3, #1
   13330:	b	13338 <mmk_mock_create_internal@@Base+0x140>
   13334:	mov	r3, #0
   13338:	str	r3, [fp, #-32]	; 0xffffffe0
   1333c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13340:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13348:	bl	13cdc <mmk_stub_create@@Base>
   1334c:	mov	r2, r0
   13350:	ldr	r3, [fp, #-20]	; 0xffffffec
   13354:	str	r2, [r3, #4]
   13358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1335c:	ldr	r3, [r3, #4]
   13360:	cmp	r3, #0
   13364:	bne	1338c <mmk_mock_create_internal@@Base+0x194>
   13368:	movw	r3, #20592	; 0x5070
   1336c:	movt	r3, #2
   13370:	ldr	r3, [r3]
   13374:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13378:	movw	r1, #19508	; 0x4c34
   1337c:	movt	r1, #1
   13380:	mov	r0, r3
   13384:	bl	111fc <fprintf@plt>
   13388:	bl	11238 <abort@plt>
   1338c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13390:	cmp	r3, #0
   13394:	bne	133b8 <mmk_mock_create_internal@@Base+0x1c0>
   13398:	ldr	r3, [fp, #-20]	; 0xffffffec
   1339c:	ldr	r4, [r3, #4]
   133a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   133a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   133ac:	bl	13cdc <mmk_stub_create@@Base>
   133b0:	mov	r3, r0
   133b4:	str	r3, [r4, #36]	; 0x24
   133b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   133bc:	bl	145c0 <mmk_free@@Base>
   133c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   133c4:	ldr	r3, [r3, #4]
   133c8:	ldr	r3, [r3, #32]
   133cc:	mov	r0, r3
   133d0:	sub	sp, fp, #8
   133d4:	ldr	r4, [sp]
   133d8:	ldr	fp, [sp, #4]
   133dc:	add	sp, sp, #8
   133e0:	pop	{pc}		; (ldr pc, [sp], #4)

000133e4 <mmk_mock_destroy_internal@@Base>:
   133e4:	str	fp, [sp, #-8]!
   133e8:	str	lr, [sp, #4]
   133ec:	add	fp, sp, #4
   133f0:	sub	sp, sp, #32
   133f4:	str	r0, [fp, #-32]	; 0xffffffe0
   133f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133fc:	ldr	r3, [r3, #4]
   13400:	str	r3, [fp, #-8]
   13404:	b	13424 <mmk_mock_destroy_internal@@Base+0x40>
   13408:	ldr	r3, [fp, #-8]
   1340c:	ldr	r3, [r3, #36]	; 0x24
   13410:	str	r3, [fp, #-20]	; 0xffffffec
   13414:	ldr	r0, [fp, #-8]
   13418:	bl	13dd8 <mmk_stub_destroy@@Base>
   1341c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13420:	str	r3, [fp, #-8]
   13424:	ldr	r3, [fp, #-8]
   13428:	cmp	r3, #0
   1342c:	bne	13408 <mmk_mock_destroy_internal@@Base+0x24>
   13430:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13434:	ldr	r3, [r3, #8]
   13438:	mov	r0, r3
   1343c:	bl	145c0 <mmk_free@@Base>
   13440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13444:	ldr	r3, [r3]
   13448:	str	r3, [fp, #-12]
   1344c:	b	134a4 <mmk_mock_destroy_internal@@Base+0xc0>
   13450:	ldr	r3, [fp, #-12]
   13454:	ldr	r3, [r3, #4]
   13458:	str	r3, [fp, #-24]	; 0xffffffe8
   1345c:	ldr	r3, [fp, #-12]
   13460:	ldr	r3, [r3]
   13464:	str	r3, [fp, #-16]
   13468:	b	13488 <mmk_mock_destroy_internal@@Base+0xa4>
   1346c:	ldr	r3, [fp, #-16]
   13470:	ldr	r3, [r3, #8]
   13474:	str	r3, [fp, #-28]	; 0xffffffe4
   13478:	ldr	r0, [fp, #-16]
   1347c:	bl	145c0 <mmk_free@@Base>
   13480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13484:	str	r3, [fp, #-16]
   13488:	ldr	r3, [fp, #-16]
   1348c:	cmp	r3, #0
   13490:	bne	1346c <mmk_mock_destroy_internal@@Base+0x88>
   13494:	ldr	r0, [fp, #-12]
   13498:	bl	145c0 <mmk_free@@Base>
   1349c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134a0:	str	r3, [fp, #-12]
   134a4:	ldr	r3, [fp, #-12]
   134a8:	cmp	r3, #0
   134ac:	bne	13450 <mmk_mock_destroy_internal@@Base+0x6c>
   134b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134b4:	bl	145c0 <mmk_free@@Base>
   134b8:	nop	{0}
   134bc:	sub	sp, fp, #4
   134c0:	ldr	fp, [sp]
   134c4:	add	sp, sp, #4
   134c8:	pop	{pc}		; (ldr pc, [sp], #4)

000134cc <mmk_mock_params_begin@@Base>:
   134cc:	push	{fp}		; (str fp, [sp, #-4]!)
   134d0:	add	fp, sp, #0
   134d4:	sub	sp, sp, #12
   134d8:	str	r0, [fp, #-8]
   134dc:	ldr	r3, [fp, #-8]
   134e0:	ldr	r3, [r3, #8]
   134e4:	cmp	r3, #0
   134e8:	beq	134fc <mmk_mock_params_begin@@Base+0x30>
   134ec:	ldr	r3, [fp, #-8]
   134f0:	ldr	r3, [r3, #12]
   134f4:	cmp	r3, #0
   134f8:	bne	13504 <mmk_mock_params_begin@@Base+0x38>
   134fc:	mov	r3, #0
   13500:	b	13510 <mmk_mock_params_begin@@Base+0x44>
   13504:	ldr	r3, [fp, #-8]
   13508:	ldr	r3, [r3, #8]
   1350c:	add	r3, r3, #4
   13510:	mov	r0, r3
   13514:	add	sp, fp, #0
   13518:	pop	{fp}		; (ldr fp, [sp], #4)
   1351c:	bx	lr

00013520 <mmk_mock_params_next@@Base>:
   13520:	push	{fp}		; (str fp, [sp, #-4]!)
   13524:	add	fp, sp, #0
   13528:	sub	sp, sp, #20
   1352c:	str	r0, [fp, #-16]
   13530:	str	r1, [fp, #-20]	; 0xffffffec
   13534:	ldr	r3, [fp, #-20]	; 0xffffffec
   13538:	str	r3, [fp, #-8]
   1353c:	ldr	r3, [fp, #-8]
   13540:	ldr	r3, [r3, #-4]
   13544:	str	r3, [fp, #-12]
   13548:	ldr	r3, [fp, #-12]
   1354c:	add	r3, r3, #4
   13550:	ldr	r2, [fp, #-8]
   13554:	add	r3, r2, r3
   13558:	str	r3, [fp, #-8]
   1355c:	ldr	r3, [fp, #-16]
   13560:	ldr	r2, [r3, #8]
   13564:	ldr	r3, [fp, #-16]
   13568:	ldr	r3, [r3, #12]
   1356c:	add	r3, r2, r3
   13570:	ldr	r2, [fp, #-8]
   13574:	cmp	r2, r3
   13578:	bcc	13584 <mmk_mock_params_next@@Base+0x64>
   1357c:	mov	r3, #0
   13580:	b	13588 <mmk_mock_params_next@@Base+0x68>
   13584:	ldr	r3, [fp, #-8]
   13588:	mov	r0, r3
   1358c:	add	sp, fp, #0
   13590:	pop	{fp}		; (ldr fp, [sp], #4)
   13594:	bx	lr

00013598 <mmk_mock_get_params@@Base>:
   13598:	str	fp, [sp, #-8]!
   1359c:	str	lr, [sp, #4]
   135a0:	add	fp, sp, #4
   135a4:	sub	sp, sp, #8
   135a8:	bl	13e9c <mmk_ctx@@Base>
   135ac:	mov	r3, r0
   135b0:	mov	r0, r3
   135b4:	bl	13a9c <mmk_stub_context@@Base>
   135b8:	str	r0, [fp, #-8]
   135bc:	ldr	r3, [fp, #-8]
   135c0:	ldr	r3, [r3]
   135c4:	mov	r0, r3
   135c8:	sub	sp, fp, #4
   135cc:	ldr	fp, [sp]
   135d0:	add	sp, sp, #4
   135d4:	pop	{pc}		; (ldr pc, [sp], #4)
   135d8:	ldr	r2, [r0, #8]
   135dc:	ldr	r3, [r2]
   135e0:	cmp	r3, #0
   135e4:	bne	135f0 <mmk_mock_get_params@@Base+0x58>
   135e8:	mov	r0, r3
   135ec:	bx	lr
   135f0:	cmp	r3, r1
   135f4:	bne	1360c <mmk_mock_get_params@@Base+0x74>
   135f8:	ldr	r3, [r0]
   135fc:	ldr	r0, [r2, #4]
   13600:	cmp	r0, r3
   13604:	addcc	r0, r0, r3
   13608:	bx	lr
   1360c:	add	r2, r2, #8
   13610:	b	135dc <mmk_mock_get_params@@Base+0x44>
   13614:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13618:	mov	r9, r1
   1361c:	mov	r1, #6
   13620:	mov	r6, r0
   13624:	bl	135d8 <mmk_mock_get_params@@Base+0x40>
   13628:	mov	r7, r0
   1362c:	mov	r1, #5
   13630:	mov	r0, r6
   13634:	bl	135d8 <mmk_mock_get_params@@Base+0x40>
   13638:	ldr	fp, [r6, #8]
   1363c:	mov	r8, r0
   13640:	mov	r2, fp
   13644:	ldr	r0, [r2]
   13648:	cmp	r0, #0
   1364c:	moveq	r4, r0
   13650:	beq	13660 <mmk_mock_get_params@@Base+0xc8>
   13654:	cmp	r0, #20
   13658:	bne	13708 <mmk_mock_get_params@@Base+0x170>
   1365c:	ldr	r4, [r2, #4]
   13660:	mov	r1, #23
   13664:	mov	r0, r6
   13668:	bl	135d8 <mmk_mock_get_params@@Base+0x40>
   1366c:	mov	sl, r0
   13670:	mov	r3, fp
   13674:	ldr	r1, [r3]
   13678:	cmp	r1, #0
   1367c:	beq	1368c <mmk_mock_get_params@@Base+0xf4>
   13680:	cmp	r1, #2
   13684:	bne	13710 <mmk_mock_get_params@@Base+0x178>
   13688:	ldr	r1, [r3, #4]
   1368c:	add	r3, r4, #2
   13690:	ldr	r5, [fp]
   13694:	cmp	r5, #0
   13698:	beq	136a8 <mmk_mock_get_params@@Base+0x110>
   1369c:	cmp	r3, r5
   136a0:	bne	13718 <mmk_mock_get_params@@Base+0x180>
   136a4:	ldr	r5, [fp, #4]
   136a8:	clz	r0, r8
   136ac:	cmp	r7, #0
   136b0:	lsr	r0, r0, #5
   136b4:	moveq	r2, #1
   136b8:	movne	r2, r0
   136bc:	cmp	r2, #0
   136c0:	bne	13764 <mmk_mock_get_params@@Base+0x1cc>
   136c4:	clz	r3, sl
   136c8:	cmp	r4, #0
   136cc:	lsr	r3, r3, #5
   136d0:	moveq	r0, #1
   136d4:	movne	r0, r3
   136d8:	cmp	r0, #0
   136dc:	movne	r0, r2
   136e0:	bne	13700 <mmk_mock_get_params@@Base+0x168>
   136e4:	clz	r4, r5
   136e8:	cmp	r1, #0
   136ec:	lsr	r4, r4, #5
   136f0:	moveq	r4, #1
   136f4:	cmp	r4, #0
   136f8:	udiveq	fp, r1, r5
   136fc:	beq	1375c <mmk_mock_get_params@@Base+0x1c4>
   13700:	add	sp, sp, #4
   13704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13708:	add	r2, r2, #8
   1370c:	b	13644 <mmk_mock_get_params@@Base+0xac>
   13710:	add	r3, r3, #8
   13714:	b	13674 <mmk_mock_get_params@@Base+0xdc>
   13718:	add	fp, fp, #8
   1371c:	b	13690 <mmk_mock_get_params@@Base+0xf8>
   13720:	ldr	r3, [sl, #4]
   13724:	mov	r1, r9
   13728:	lsr	r3, r3, #8
   1372c:	ldr	r0, [r7, r3, lsl #4]
   13730:	add	r0, r8, r0
   13734:	bl	11154 <strcmp@plt>
   13738:	cmp	r0, #0
   1373c:	bne	13754 <mmk_mock_get_params@@Base+0x1bc>
   13740:	ldr	r0, [sl]
   13744:	ldr	r3, [r6]
   13748:	cmp	r0, #0
   1374c:	addne	r0, r3, r0
   13750:	b	13700 <mmk_mock_get_params@@Base+0x168>
   13754:	add	r4, r4, #1
   13758:	add	sl, sl, r5
   1375c:	cmp	r4, fp
   13760:	bne	13720 <mmk_mock_get_params@@Base+0x188>
   13764:	mov	r0, #0
   13768:	b	13700 <mmk_mock_get_params@@Base+0x168>

0001376c <plt_init_ctx@@Base>:
   1376c:	ldr	r3, [pc, #20]	; 13788 <plt_init_ctx@@Base+0x1c>
   13770:	ldr	r2, [r3]
   13774:	cmn	r2, #1
   13778:	ldreq	r2, [pc, #12]	; 1378c <plt_init_ctx@@Base+0x20>
   1377c:	streq	r2, [r3]
   13780:	ldr	r0, [r3]
   13784:	bx	lr
   13788:	andeq	r5, r2, ip, rrx
   1378c:	andeq	r5, r2, r4, ror r0

00013790 <plt_get_lib@@Base>:
   13790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13794:	add	fp, sp, #32
   13798:	sub	sp, sp, #12
   1379c:	subs	r4, r1, #0
   137a0:	mov	r6, r0
   137a4:	beq	138e0 <plt_get_lib@@Base+0x150>
   137a8:	mov	r2, #4
   137ac:	ldr	r1, [pc, #460]	; 13980 <plt_get_lib@@Base+0x1f0>
   137b0:	mov	r0, r4
   137b4:	bl	1122c <strncmp@plt>
   137b8:	cmp	r0, #0
   137bc:	moveq	r5, #1
   137c0:	beq	1385c <plt_get_lib@@Base+0xcc>
   137c4:	mov	r2, #5
   137c8:	ldr	r1, [pc, #436]	; 13984 <plt_get_lib@@Base+0x1f4>
   137cc:	mov	r0, r4
   137d0:	bl	1122c <strncmp@plt>
   137d4:	cmp	r0, #0
   137d8:	moveq	r5, #2
   137dc:	beq	1385c <plt_get_lib@@Base+0xcc>
   137e0:	mov	r2, #4
   137e4:	ldr	r1, [pc, #412]	; 13988 <plt_get_lib@@Base+0x1f8>
   137e8:	mov	r0, r4
   137ec:	bl	1122c <strncmp@plt>
   137f0:	cmp	r0, #0
   137f4:	moveq	r5, #3
   137f8:	beq	1385c <plt_get_lib@@Base+0xcc>
   137fc:	ldr	r1, [pc, #392]	; 1398c <plt_get_lib@@Base+0x1fc>
   13800:	mov	r0, r4
   13804:	bl	11154 <strcmp@plt>
   13808:	subs	r5, r0, #0
   1380c:	beq	138f0 <plt_get_lib@@Base+0x160>
   13810:	mov	r1, #58	; 0x3a
   13814:	mov	r0, r4
   13818:	bl	111f0 <strchr@plt>
   1381c:	ldr	r3, [pc, #364]	; 13990 <plt_get_lib@@Base+0x200>
   13820:	subs	r2, r0, #0
   13824:	ldr	ip, [r3]
   13828:	beq	13848 <plt_get_lib@@Base+0xb8>
   1382c:	sub	r2, r2, r4
   13830:	mov	r3, r4
   13834:	add	r2, r2, #1
   13838:	ldr	r1, [pc, #340]	; 13994 <plt_get_lib@@Base+0x204>
   1383c:	mov	r0, ip
   13840:	bl	111fc <fprintf@plt>
   13844:	bl	11238 <abort@plt>
   13848:	mov	r2, r4
   1384c:	ldr	r1, [pc, #324]	; 13998 <plt_get_lib@@Base+0x208>
   13850:	mov	r0, ip
   13854:	bl	111fc <fprintf@plt>
   13858:	b	13844 <plt_get_lib@@Base+0xb4>
   1385c:	mov	r1, #58	; 0x3a
   13860:	mov	r0, r4
   13864:	bl	111f0 <strchr@plt>
   13868:	add	r7, r0, #1
   1386c:	mov	r0, r7
   13870:	bl	111d8 <strlen@plt>
   13874:	mov	r8, r0
   13878:	ldr	r1, [pc, #284]	; 1399c <plt_get_lib@@Base+0x20c>
   1387c:	mov	r0, r7
   13880:	bl	11154 <strcmp@plt>
   13884:	ldr	r6, [r6, #4]
   13888:	add	r3, r8, #15
   1388c:	mov	sl, r0
   13890:	bic	r3, r3, #7
   13894:	str	r3, [fp, #-40]	; 0xffffffd8
   13898:	cmp	r6, #0
   1389c:	beq	13930 <plt_get_lib@@Base+0x1a0>
   138a0:	cmp	r5, #1
   138a4:	bne	13948 <plt_get_lib@@Base+0x1b8>
   138a8:	cmp	sl, #0
   138ac:	bne	138f8 <plt_get_lib@@Base+0x168>
   138b0:	ldr	r9, [r6, #4]
   138b4:	ldr	r1, [pc, #228]	; 139a0 <plt_get_lib@@Base+0x210>
   138b8:	mov	r0, r9
   138bc:	bl	11148 <strstr@plt>
   138c0:	cmp	r0, #0
   138c4:	bne	13930 <plt_get_lib@@Base+0x1a0>
   138c8:	ldr	r1, [pc, #212]	; 139a4 <plt_get_lib@@Base+0x214>
   138cc:	mov	r0, r9
   138d0:	bl	11148 <strstr@plt>
   138d4:	cmp	r0, #0
   138d8:	beq	13940 <plt_get_lib@@Base+0x1b0>
   138dc:	b	13930 <plt_get_lib@@Base+0x1a0>
   138e0:	ldr	r4, [pc, #192]	; 139a8 <plt_get_lib@@Base+0x218>
   138e4:	mov	r5, r1
   138e8:	mov	r7, r4
   138ec:	b	1386c <plt_get_lib@@Base+0xdc>
   138f0:	ldr	r4, [pc, #176]	; 139a8 <plt_get_lib@@Base+0x218>
   138f4:	b	138e8 <plt_get_lib@@Base+0x158>
   138f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   138fc:	mov	r9, sp
   13900:	add	r1, r8, #8
   13904:	ldr	r2, [pc, #160]	; 139ac <plt_get_lib@@Base+0x21c>
   13908:	sub	sp, sp, r3
   1390c:	mov	r3, r7
   13910:	mov	r0, sp
   13914:	bl	11214 <snprintf@plt>
   13918:	mov	r1, sp
   1391c:	ldr	r0, [r6, #4]
   13920:	bl	11148 <strstr@plt>
   13924:	cmp	r0, #0
   13928:	beq	1393c <plt_get_lib@@Base+0x1ac>
   1392c:	mov	sp, r9
   13930:	mov	r0, r6
   13934:	sub	sp, fp, #32
   13938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1393c:	mov	sp, r9
   13940:	ldr	r6, [r6, #12]
   13944:	b	13898 <plt_get_lib@@Base+0x108>
   13948:	tst	r5, #1
   1394c:	bne	13968 <plt_get_lib@@Base+0x1d8>
   13950:	mov	r0, r4
   13954:	ldr	r1, [r6, #4]
   13958:	bl	11154 <strcmp@plt>
   1395c:	cmp	r0, #0
   13960:	bne	13940 <plt_get_lib@@Base+0x1b0>
   13964:	b	13930 <plt_get_lib@@Base+0x1a0>
   13968:	cmp	r5, #3
   1396c:	bne	13940 <plt_get_lib@@Base+0x1b0>
   13970:	mov	r1, r7
   13974:	mov	r0, r6
   13978:	bl	13614 <mmk_mock_get_params@@Base+0x7c>
   1397c:	b	138d4 <plt_get_lib@@Base+0x144>
   13980:	andeq	r4, r1, r7, ror #24
   13984:	andeq	r4, r1, ip, ror #24
   13988:	andeq	r4, r1, r2, ror ip
   1398c:	andeq	r4, r1, r7, ror ip
   13990:	andeq	r5, r2, r0, ror r0
   13994:	andeq	r4, r1, ip, ror ip
   13998:	muleq	r1, lr, ip
   1399c:	andeq	r4, r1, r9, lsl sp
   139a0:	andeq	r4, r1, r1, asr #25
   139a4:	andeq	r4, r1, sl, asr #25
   139a8:	andeq	r4, r1, r0, asr #25
   139ac:	ldrdeq	r4, [r1], -r3

000139b0 <plt_get_offsets@@Base>:
   139b0:	push	{r4, r5, r6, lr}
   139b4:	mov	r5, r2
   139b8:	bl	13614 <mmk_mock_get_params@@Base+0x7c>
   139bc:	subs	r4, r0, #0
   139c0:	beq	139e8 <plt_get_offsets@@Base+0x38>
   139c4:	mov	r0, #8
   139c8:	bl	145a0 <mmk_malloc@@Base>
   139cc:	mov	r3, #1
   139d0:	mov	r2, #0
   139d4:	str	r3, [r5]
   139d8:	mov	r3, #0
   139dc:	strd	r2, [r0]
   139e0:	str	r4, [r0]
   139e4:	mov	r4, r0
   139e8:	mov	r0, r4
   139ec:	pop	{r4, r5, r6, pc}

000139f0 <plt_set_offsets@@Base>:
   139f0:	mov	r3, #0
   139f4:	add	ip, r0, #4
   139f8:	cmp	r3, r1
   139fc:	bxeq	lr
   13a00:	push	{r4, lr}
   13a04:	ldr	r4, [ip, r3, lsl #3]
   13a08:	ldr	lr, [r0, r3, lsl #3]
   13a0c:	cmp	r4, #0
   13a10:	ldreq	r4, [lr]
   13a14:	streq	r4, [ip, r3, lsl #3]
   13a18:	add	r3, r3, #1
   13a1c:	cmp	r3, r1
   13a20:	str	r2, [lr]
   13a24:	bne	13a04 <plt_set_offsets@@Base+0x14>
   13a28:	pop	{r4, pc}

00013a2c <plt_reset_offsets@@Base>:
   13a2c:	mov	r3, #0
   13a30:	add	r2, r0, #4
   13a34:	cmp	r3, r1
   13a38:	bxeq	lr
   13a3c:	push	{lr}		; (str lr, [sp, #-4]!)
   13a40:	ldr	lr, [r2, r3, lsl #3]
   13a44:	ldr	ip, [r0, r3, lsl #3]
   13a48:	add	r3, r3, #1
   13a4c:	cmp	r3, r1
   13a50:	str	lr, [ip]
   13a54:	bne	13a40 <plt_reset_offsets@@Base+0x14>
   13a58:	pop	{pc}		; (ldr pc, [sp], #4)

00013a5c <plt_get_real_fn@@Base>:
   13a5c:	push	{r4, r5, r6, lr}
   13a60:	mov	r5, r1
   13a64:	ldr	r4, [r0, #4]
   13a68:	cmp	r4, #0
   13a6c:	bne	13a78 <plt_get_real_fn@@Base+0x1c>
   13a70:	mov	r0, r4
   13a74:	pop	{r4, r5, r6, pc}
   13a78:	mov	r1, r5
   13a7c:	mov	r0, r4
   13a80:	bl	13614 <mmk_mock_get_params@@Base+0x7c>
   13a84:	cmp	r0, #0
   13a88:	beq	13a94 <plt_get_real_fn@@Base+0x38>
   13a8c:	ldr	r0, [r0]
   13a90:	pop	{r4, r5, r6, pc}
   13a94:	ldr	r4, [r4, #12]
   13a98:	b	13a68 <plt_get_real_fn@@Base+0xc>

00013a9c <mmk_stub_context@@Base>:
   13a9c:	push	{fp}		; (str fp, [sp, #-4]!)
   13aa0:	add	fp, sp, #0
   13aa4:	sub	sp, sp, #12
   13aa8:	str	r0, [fp, #-8]
   13aac:	ldr	r3, [fp, #-8]
   13ab0:	cmp	r3, #0
   13ab4:	bne	13ac0 <mmk_stub_context@@Base+0x24>
   13ab8:	mov	r3, #0
   13abc:	b	13ac8 <mmk_stub_context@@Base+0x2c>
   13ac0:	ldr	r3, [fp, #-8]
   13ac4:	ldr	r3, [r3, #12]
   13ac8:	mov	r0, r3
   13acc:	add	sp, fp, #0
   13ad0:	pop	{fp}		; (ldr fp, [sp], #4)
   13ad4:	bx	lr

00013ad8 <mmk_stub_create_static@@Base>:
   13ad8:	str	fp, [sp, #-8]!
   13adc:	str	lr, [sp, #4]
   13ae0:	add	fp, sp, #4
   13ae4:	sub	sp, sp, #40	; 0x28
   13ae8:	str	r0, [fp, #-32]	; 0xffffffe0
   13aec:	str	r1, [fp, #-36]	; 0xffffffdc
   13af0:	str	r2, [fp, #-40]	; 0xffffffd8
   13af4:	str	r3, [fp, #-44]	; 0xffffffd4
   13af8:	mrc	15, 0, r3, cr13, cr0, {3}
   13afc:	ldr	r2, [pc, #464]	; 13cd4 <mmk_stub_create_static@@Base+0x1fc>
   13b00:	mov	r1, #0
   13b04:	str	r1, [r3, r2]
   13b08:	mrc	15, 0, r3, cr13, cr0, {3}
   13b0c:	ldr	r2, [pc, #452]	; 13cd8 <mmk_stub_create_static@@Base+0x200>
   13b10:	mov	r1, #0
   13b14:	str	r1, [r3, r2]
   13b18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b1c:	bl	1455c <mmk_strlen@@Base>
   13b20:	mov	r3, r0
   13b24:	add	r3, r3, #1
   13b28:	mov	r0, r3
   13b2c:	bl	145a0 <mmk_malloc@@Base>
   13b30:	str	r0, [fp, #-12]
   13b34:	ldr	r3, [fp, #-12]
   13b38:	cmp	r3, #0
   13b3c:	bne	13b48 <mmk_stub_create_static@@Base+0x70>
   13b40:	mvn	r3, #11
   13b44:	b	13cc0 <mmk_stub_create_static@@Base+0x1e8>
   13b48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b4c:	ldr	r0, [fp, #-12]
   13b50:	bl	1450c <mmk_strcpy@@Base>
   13b54:	mov	r3, #0
   13b58:	str	r3, [fp, #-8]
   13b5c:	mov	r1, #64	; 0x40
   13b60:	ldr	r0, [fp, #-12]
   13b64:	bl	144e4 <mmk_strchr@@Base>
   13b68:	str	r0, [fp, #-16]
   13b6c:	ldr	r3, [fp, #-16]
   13b70:	cmp	r3, #0
   13b74:	beq	13b90 <mmk_stub_create_static@@Base+0xb8>
   13b78:	ldr	r3, [fp, #-16]
   13b7c:	mov	r2, #0
   13b80:	strb	r2, [r3]
   13b84:	ldr	r3, [fp, #-16]
   13b88:	add	r3, r3, #1
   13b8c:	str	r3, [fp, #-8]
   13b90:	bl	13058 <mmk_plt_ctx@@Base>
   13b94:	mov	r3, r0
   13b98:	ldr	r1, [fp, #-8]
   13b9c:	mov	r0, r3
   13ba0:	bl	13790 <plt_get_lib@@Base>
   13ba4:	str	r0, [fp, #-20]	; 0xffffffec
   13ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bac:	cmp	r3, #0
   13bb0:	bne	13bbc <mmk_stub_create_static@@Base+0xe4>
   13bb4:	mvn	r3, #1
   13bb8:	b	13cc0 <mmk_stub_create_static@@Base+0x1e8>
   13bbc:	mov	r3, #0
   13bc0:	str	r3, [fp, #-28]	; 0xffffffe4
   13bc4:	sub	r3, fp, #28
   13bc8:	mov	r2, r3
   13bcc:	ldr	r1, [fp, #-12]
   13bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bd4:	bl	139b0 <plt_get_offsets@@Base>
   13bd8:	str	r0, [fp, #-24]	; 0xffffffe8
   13bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13be0:	cmp	r3, #0
   13be4:	beq	13bf4 <mmk_stub_create_static@@Base+0x11c>
   13be8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bec:	cmp	r3, #0
   13bf0:	bne	13bfc <mmk_stub_create_static@@Base+0x124>
   13bf4:	mvn	r3, #1
   13bf8:	b	13cc0 <mmk_stub_create_static@@Base+0x1e8>
   13bfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c04:	mov	r1, r3
   13c08:	mov	r2, #0
   13c0c:	mov	r3, #0
   13c10:	strd	r2, [r1]
   13c14:	strd	r2, [r1, #8]
   13c18:	strd	r2, [r1, #16]
   13c1c:	strd	r2, [r1, #24]
   13c20:	strd	r2, [r1, #32]
   13c24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13c28:	movw	r3, #15960	; 0x3e58
   13c2c:	movt	r3, #1
   13c30:	str	r3, [r2]
   13c34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13c38:	movw	r3, #16068	; 0x3ec4
   13c3c:	movt	r3, #1
   13c40:	str	r3, [r2, #4]
   13c44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13c48:	movw	r3, #16028	; 0x3e9c
   13c4c:	movt	r3, #1
   13c50:	str	r3, [r2, #8]
   13c54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13c5c:	str	r2, [r3, #12]
   13c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c64:	ldr	r2, [fp, #-12]
   13c68:	str	r2, [r3, #16]
   13c6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c70:	ldr	r2, [fp, #-8]
   13c74:	str	r2, [r3, #20]
   13c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c80:	str	r2, [r3, #24]
   13c84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c88:	str	r0, [r3, #28]
   13c8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c94:	bl	13ef8 <create_trampoline@@Base>
   13c98:	mov	r2, r0
   13c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ca0:	str	r2, [r3, #32]
   13ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cac:	ldr	r3, [r3, #32]
   13cb0:	mov	r2, r3
   13cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cb8:	bl	139f0 <plt_set_offsets@@Base>
   13cbc:	mov	r3, #0
   13cc0:	mov	r0, r3
   13cc4:	sub	sp, fp, #4
   13cc8:	ldr	fp, [sp]
   13ccc:	add	sp, sp, #4
   13cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   13cd4:	andeq	r0, r0, ip
   13cd8:	andeq	r0, r0, r0, lsl r0

00013cdc <mmk_stub_create@@Base>:
   13cdc:	str	fp, [sp, #-8]!
   13ce0:	str	lr, [sp, #4]
   13ce4:	add	fp, sp, #4
   13ce8:	sub	sp, sp, #24
   13cec:	str	r0, [fp, #-16]
   13cf0:	str	r1, [fp, #-20]	; 0xffffffec
   13cf4:	str	r2, [fp, #-24]	; 0xffffffe8
   13cf8:	bl	12f9c <mmk_init@@Base>
   13cfc:	mov	r0, #40	; 0x28
   13d00:	bl	145a0 <mmk_malloc@@Base>
   13d04:	str	r0, [fp, #-8]
   13d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d10:	ldr	r1, [fp, #-16]
   13d14:	ldr	r0, [fp, #-8]
   13d18:	bl	13ad8 <mmk_stub_create_static@@Base>
   13d1c:	str	r0, [fp, #-12]
   13d20:	ldr	r3, [fp, #-12]
   13d24:	cmp	r3, #0
   13d28:	bge	13d4c <mmk_stub_create@@Base+0x70>
   13d2c:	ldr	r0, [fp, #-8]
   13d30:	bl	145c0 <mmk_free@@Base>
   13d34:	bl	11208 <__errno_location@plt>
   13d38:	mov	r2, r0
   13d3c:	ldr	r3, [fp, #-12]
   13d40:	str	r3, [r2]
   13d44:	mov	r3, #0
   13d48:	str	r3, [fp, #-8]
   13d4c:	ldr	r3, [fp, #-8]
   13d50:	mov	r0, r3
   13d54:	sub	sp, fp, #4
   13d58:	ldr	fp, [sp]
   13d5c:	add	sp, sp, #4
   13d60:	pop	{pc}		; (ldr pc, [sp], #4)

00013d64 <mmk_stub_destroy_static@@Base>:
   13d64:	str	fp, [sp, #-8]!
   13d68:	str	lr, [sp, #4]
   13d6c:	add	fp, sp, #4
   13d70:	sub	sp, sp, #8
   13d74:	str	r0, [fp, #-8]
   13d78:	ldr	r3, [fp, #-8]
   13d7c:	ldr	r2, [r3, #24]
   13d80:	ldr	r3, [fp, #-8]
   13d84:	ldr	r3, [r3, #28]
   13d88:	mov	r1, r3
   13d8c:	mov	r0, r2
   13d90:	bl	13a2c <plt_reset_offsets@@Base>
   13d94:	ldr	r3, [fp, #-8]
   13d98:	ldr	r3, [r3, #24]
   13d9c:	mov	r0, r3
   13da0:	bl	145c0 <mmk_free@@Base>
   13da4:	ldr	r3, [fp, #-8]
   13da8:	ldr	r3, [r3, #32]
   13dac:	mov	r0, r3
   13db0:	bl	13fcc <destroy_trampoline@@Base>
   13db4:	ldr	r3, [fp, #-8]
   13db8:	ldr	r3, [r3, #16]
   13dbc:	mov	r0, r3
   13dc0:	bl	145c0 <mmk_free@@Base>
   13dc4:	nop	{0}
   13dc8:	sub	sp, fp, #4
   13dcc:	ldr	fp, [sp]
   13dd0:	add	sp, sp, #4
   13dd4:	pop	{pc}		; (ldr pc, [sp], #4)

00013dd8 <mmk_stub_destroy@@Base>:
   13dd8:	str	fp, [sp, #-8]!
   13ddc:	str	lr, [sp, #4]
   13de0:	add	fp, sp, #4
   13de4:	sub	sp, sp, #8
   13de8:	str	r0, [fp, #-8]
   13dec:	ldr	r0, [fp, #-8]
   13df0:	bl	13d64 <mmk_stub_destroy_static@@Base>
   13df4:	ldr	r0, [fp, #-8]
   13df8:	bl	145c0 <mmk_free@@Base>
   13dfc:	nop	{0}
   13e00:	sub	sp, fp, #4
   13e04:	ldr	fp, [sp]
   13e08:	add	sp, sp, #4
   13e0c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e10 <mmk_ask_ctx@@Base>:
   13e10:	str	fp, [sp, #-8]!
   13e14:	str	lr, [sp, #4]
   13e18:	add	fp, sp, #4
   13e1c:	sub	sp, sp, #8
   13e20:	str	r0, [fp, #-8]
   13e24:	mrc	15, 0, r3, cr13, cr0, {3}
   13e28:	ldr	r2, [pc, #36]	; 13e54 <mmk_ask_ctx@@Base+0x44>
   13e2c:	mov	r1, #1
   13e30:	str	r1, [r3, r2]
   13e34:	ldr	r3, [fp, #-8]
   13e38:	blx	r3
   13e3c:	mov	r3, r0
   13e40:	mov	r0, r3
   13e44:	sub	sp, fp, #4
   13e48:	ldr	fp, [sp]
   13e4c:	add	sp, sp, #4
   13e50:	pop	{pc}		; (ldr pc, [sp], #4)
   13e54:	andeq	r0, r0, ip

00013e58 <mmk_ctx_asked@@Base>:
   13e58:	push	{fp}		; (str fp, [sp, #-4]!)
   13e5c:	add	fp, sp, #0
   13e60:	sub	sp, sp, #12
   13e64:	mrc	15, 0, r3, cr13, cr0, {3}
   13e68:	ldr	r2, [pc, #40]	; 13e98 <mmk_ctx_asked@@Base+0x40>
   13e6c:	ldr	r3, [r3, r2]
   13e70:	str	r3, [fp, #-8]
   13e74:	mrc	15, 0, r3, cr13, cr0, {3}
   13e78:	ldr	r2, [pc, #24]	; 13e98 <mmk_ctx_asked@@Base+0x40>
   13e7c:	mov	r1, #0
   13e80:	str	r1, [r3, r2]
   13e84:	ldr	r3, [fp, #-8]
   13e88:	mov	r0, r3
   13e8c:	add	sp, fp, #0
   13e90:	pop	{fp}		; (ldr fp, [sp], #4)
   13e94:	bx	lr
   13e98:	andeq	r0, r0, ip

00013e9c <mmk_ctx@@Base>:
   13e9c:	push	{fp}		; (str fp, [sp, #-4]!)
   13ea0:	add	fp, sp, #0
   13ea4:	mrc	15, 0, r3, cr13, cr0, {3}
   13ea8:	ldr	r2, [pc, #16]	; 13ec0 <mmk_ctx@@Base+0x24>
   13eac:	ldr	r3, [r3, r2]
   13eb0:	mov	r0, r3
   13eb4:	add	sp, fp, #0
   13eb8:	pop	{fp}		; (ldr fp, [sp], #4)
   13ebc:	bx	lr
   13ec0:	andeq	r0, r0, r0, lsl r0

00013ec4 <mmk_set_ctx@@Base>:
   13ec4:	push	{fp}		; (str fp, [sp, #-4]!)
   13ec8:	add	fp, sp, #0
   13ecc:	sub	sp, sp, #12
   13ed0:	str	r0, [fp, #-8]
   13ed4:	mrc	15, 0, r3, cr13, cr0, {3}
   13ed8:	ldr	r1, [pc, #20]	; 13ef4 <mmk_set_ctx@@Base+0x30>
   13edc:	ldr	r2, [fp, #-8]
   13ee0:	str	r2, [r3, r1]
   13ee4:	nop	{0}
   13ee8:	add	sp, fp, #0
   13eec:	pop	{fp}		; (ldr fp, [sp], #4)
   13ef0:	bx	lr
   13ef4:	andeq	r0, r0, r0, lsl r0

00013ef8 <create_trampoline@@Base>:
   13ef8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13efc:	ldr	r7, [pc, #172]	; 13fb0 <create_trampoline@@Base+0xb8>
   13f00:	ldr	r5, [pc, #172]	; 13fb4 <create_trampoline@@Base+0xbc>
   13f04:	sub	r5, r5, r7
   13f08:	cmp	r5, #4096	; 0x1000
   13f0c:	bcc	13f34 <create_trampoline@@Base+0x3c>
   13f10:	ldr	r3, [pc, #160]	; 13fb8 <create_trampoline@@Base+0xc0>
   13f14:	str	r3, [sp]
   13f18:	mov	r3, #45	; 0x2d
   13f1c:	ldr	r0, [pc, #152]	; 13fbc <create_trampoline@@Base+0xc4>
   13f20:	ldr	r2, [pc, #152]	; 13fc0 <create_trampoline@@Base+0xc8>
   13f24:	ldr	r1, [pc, #152]	; 13fc4 <create_trampoline@@Base+0xcc>
   13f28:	ldr	r0, [r0]
   13f2c:	bl	111fc <fprintf@plt>
   13f30:	bl	11238 <abort@plt>
   13f34:	mvn	r3, #0
   13f38:	mov	r8, r0
   13f3c:	mov	r0, #0
   13f40:	mov	r6, r1
   13f44:	mov	r2, #7
   13f48:	mov	r1, #4096	; 0x1000
   13f4c:	str	r3, [sp]
   13f50:	mov	r3, #34	; 0x22
   13f54:	str	r0, [sp, #4]
   13f58:	bl	111e4 <mmap@plt>
   13f5c:	cmn	r0, #1
   13f60:	mov	r4, r0
   13f64:	bne	13f78 <create_trampoline@@Base+0x80>
   13f68:	ldr	r3, [pc, #88]	; 13fc8 <create_trampoline@@Base+0xd0>
   13f6c:	str	r3, [sp]
   13f70:	mov	r3, #69	; 0x45
   13f74:	b	13f1c <create_trampoline@@Base+0x24>
   13f78:	mov	r2, r5
   13f7c:	mov	r1, r7
   13f80:	str	r8, [r0]
   13f84:	str	r6, [r0, #4]
   13f88:	add	r6, r0, #8
   13f8c:	mov	r0, r6
   13f90:	bl	11178 <memcpy@plt>
   13f94:	mov	r2, #5
   13f98:	mov	r1, #4096	; 0x1000
   13f9c:	mov	r0, r4
   13fa0:	bl	11160 <mprotect@plt>
   13fa4:	mov	r0, r6
   13fa8:	add	sp, sp, #8
   13fac:	pop	{r4, r5, r6, r7, r8, pc}
   13fb0:	andeq	r4, r1, r8, ror r7
   13fb4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fb8:	andeq	r4, r1, r8, lsr sp
   13fbc:	andeq	r5, r2, r0, ror r0
   13fc0:	ldrdeq	r4, [r1], -sp
   13fc4:	andeq	r4, r1, fp, lsl sp
   13fc8:	andeq	r4, r1, r2, asr sp

00013fcc <destroy_trampoline@@Base>:
   13fcc:	mov	r1, #4096	; 0x1000
   13fd0:	sub	r0, r0, #8
   13fd4:	b	11220 <munmap@plt>

00013fd8 <mmk_verify_set_times@@Base>:
   13fd8:	push	{fp}		; (str fp, [sp, #-4]!)
   13fdc:	add	fp, sp, #0
   13fe0:	sub	sp, sp, #12
   13fe4:	str	r0, [fp, #-8]
   13fe8:	mrc	15, 0, r3, cr13, cr0, {3}
   13fec:	ldr	r1, [pc, #20]	; 14008 <mmk_verify_set_times@@Base+0x30>
   13ff0:	ldr	r2, [fp, #-8]
   13ff4:	str	r2, [r3, r1]
   13ff8:	nop	{0}
   13ffc:	add	sp, fp, #0
   14000:	pop	{fp}		; (ldr fp, [sp], #4)
   14004:	bx	lr
   14008:	andeq	r0, r0, r4, lsl r0

0001400c <mmk_verify_times@@Base>:
   1400c:	str	fp, [sp, #-8]!
   14010:	str	lr, [sp, #4]
   14014:	add	fp, sp, #4
   14018:	sub	sp, sp, #16
   1401c:	str	r0, [fp, #-16]
   14020:	mrc	15, 0, r3, cr13, cr0, {3}
   14024:	ldr	r2, [pc, #252]	; 14128 <mmk_verify_times@@Base+0x11c>
   14028:	ldr	r3, [r3, r2]
   1402c:	str	r3, [fp, #-8]
   14030:	ldr	r3, [fp, #-16]
   14034:	ldr	r3, [r3, #4]
   14038:	cmp	r3, #0
   1403c:	beq	14058 <mmk_verify_times@@Base+0x4c>
   14040:	ldr	r3, [fp, #-8]
   14044:	cmp	r3, #0
   14048:	moveq	r3, #1
   1404c:	movne	r3, #0
   14050:	uxtb	r3, r3
   14054:	b	14114 <mmk_verify_times@@Base+0x108>
   14058:	ldr	r3, [fp, #-16]
   1405c:	ldr	r3, [r3, #8]
   14060:	cmp	r3, #0
   14064:	bne	14078 <mmk_verify_times@@Base+0x6c>
   14068:	ldr	r3, [fp, #-16]
   1406c:	ldr	r3, [r3, #12]
   14070:	cmp	r3, #0
   14074:	beq	140d0 <mmk_verify_times@@Base+0xc4>
   14078:	ldr	r3, [fp, #-16]
   1407c:	ldr	r3, [r3, #12]
   14080:	cmp	r3, #0
   14084:	beq	14094 <mmk_verify_times@@Base+0x88>
   14088:	ldr	r3, [fp, #-16]
   1408c:	ldr	r3, [r3, #12]
   14090:	b	14098 <mmk_verify_times@@Base+0x8c>
   14094:	ldr	r3, [fp, #-8]
   14098:	str	r3, [fp, #-12]
   1409c:	ldr	r3, [fp, #-16]
   140a0:	ldr	r3, [r3, #8]
   140a4:	ldr	r2, [fp, #-8]
   140a8:	cmp	r2, r3
   140ac:	bcc	140c8 <mmk_verify_times@@Base+0xbc>
   140b0:	ldr	r2, [fp, #-8]
   140b4:	ldr	r3, [fp, #-12]
   140b8:	cmp	r2, r3
   140bc:	bhi	140c8 <mmk_verify_times@@Base+0xbc>
   140c0:	mov	r3, #1
   140c4:	b	14114 <mmk_verify_times@@Base+0x108>
   140c8:	mov	r3, #0
   140cc:	b	14114 <mmk_verify_times@@Base+0x108>
   140d0:	ldr	r3, [fp, #-16]
   140d4:	ldr	r3, [r3, #20]
   140d8:	cmp	r3, #0
   140dc:	beq	140f8 <mmk_verify_times@@Base+0xec>
   140e0:	ldr	r3, [fp, #-16]
   140e4:	ldr	r3, [r3, #20]
   140e8:	ldr	r0, [fp, #-8]
   140ec:	blx	r3
   140f0:	mov	r3, r0
   140f4:	b	14114 <mmk_verify_times@@Base+0x108>
   140f8:	ldr	r3, [fp, #-16]
   140fc:	ldr	r3, [r3, #16]
   14100:	ldr	r2, [fp, #-8]
   14104:	cmp	r2, r3
   14108:	moveq	r3, #1
   1410c:	movne	r3, #0
   14110:	uxtb	r3, r3
   14114:	mov	r0, r3
   14118:	sub	sp, fp, #4
   1411c:	ldr	fp, [sp]
   14120:	add	sp, sp, #4
   14124:	pop	{pc}		; (ldr pc, [sp], #4)
   14128:	andeq	r0, r0, r4, lsl r0
   1412c:	str	fp, [sp, #-8]!
   14130:	str	lr, [sp, #4]
   14134:	add	fp, sp, #4
   14138:	sub	sp, sp, #32
   1413c:	str	r0, [fp, #-24]	; 0xffffffe8
   14140:	str	r1, [fp, #-28]	; 0xffffffe4
   14144:	str	r2, [fp, #-32]	; 0xffffffe0
   14148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1414c:	add	r3, r3, #4
   14150:	str	r3, [fp, #-28]	; 0xffffffe4
   14154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14158:	sub	r3, r3, #4
   1415c:	str	r3, [fp, #-32]	; 0xffffffe0
   14160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14164:	bl	134cc <mmk_mock_params_begin@@Base>
   14168:	str	r0, [fp, #-8]
   1416c:	b	141cc <mmk_verify_times@@Base+0x1c0>
   14170:	ldr	r3, [fp, #-8]
   14174:	add	r3, r3, #4
   14178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1417c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14180:	mov	r0, r3
   14184:	bl	1440c <mmk_memcmp@@Base>
   14188:	str	r0, [fp, #-12]
   1418c:	ldr	r3, [fp, #-12]
   14190:	cmp	r3, #0
   14194:	bne	141bc <mmk_verify_times@@Base+0x1b0>
   14198:	ldr	r3, [fp, #-8]
   1419c:	str	r3, [fp, #-16]
   141a0:	ldr	r3, [fp, #-16]
   141a4:	ldr	r3, [r3]
   141a8:	add	r2, r3, #1
   141ac:	ldr	r3, [fp, #-16]
   141b0:	str	r2, [r3]
   141b4:	mov	r3, #1
   141b8:	b	141dc <mmk_verify_times@@Base+0x1d0>
   141bc:	ldr	r1, [fp, #-8]
   141c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141c4:	bl	13520 <mmk_mock_params_next@@Base>
   141c8:	str	r0, [fp, #-8]
   141cc:	ldr	r3, [fp, #-8]
   141d0:	cmp	r3, #0
   141d4:	bne	14170 <mmk_verify_times@@Base+0x164>
   141d8:	mov	r3, #0
   141dc:	mov	r0, r3
   141e0:	sub	sp, fp, #4
   141e4:	ldr	fp, [sp]
   141e8:	add	sp, sp, #4
   141ec:	pop	{pc}		; (ldr pc, [sp], #4)

000141f0 <mmk_verify_register_call@@Base>:
   141f0:	str	fp, [sp, #-8]!
   141f4:	str	lr, [sp, #4]
   141f8:	add	fp, sp, #4
   141fc:	sub	sp, sp, #24
   14200:	str	r0, [fp, #-16]
   14204:	str	r1, [fp, #-20]	; 0xffffffec
   14208:	bl	13e9c <mmk_ctx@@Base>
   1420c:	mov	r3, r0
   14210:	mov	r0, r3
   14214:	bl	13a9c <mmk_stub_context@@Base>
   14218:	str	r0, [fp, #-8]
   1421c:	ldr	r3, [fp, #-8]
   14220:	ldr	r3, [r3, #8]
   14224:	cmp	r3, #0
   14228:	bne	14290 <mmk_verify_register_call@@Base+0xa0>
   1422c:	mov	r0, #4096	; 0x1000
   14230:	bl	145a0 <mmk_malloc@@Base>
   14234:	mov	r2, r0
   14238:	ldr	r3, [fp, #-8]
   1423c:	str	r2, [r3, #8]
   14240:	ldr	r3, [fp, #-8]
   14244:	ldr	r3, [r3, #8]
   14248:	cmp	r3, #0
   1424c:	bne	14284 <mmk_verify_register_call@@Base+0x94>
   14250:	movw	r3, #20592	; 0x5070
   14254:	movt	r3, #2
   14258:	ldr	r0, [r3]
   1425c:	movw	r3, #19904	; 0x4dc0
   14260:	movt	r3, #1
   14264:	str	r3, [sp]
   14268:	mov	r3, #79	; 0x4f
   1426c:	movw	r2, #19812	; 0x4d64
   14270:	movt	r2, #1
   14274:	movw	r1, #19872	; 0x4da0
   14278:	movt	r1, #1
   1427c:	bl	111fc <fprintf@plt>
   14280:	bl	11238 <abort@plt>
   14284:	ldr	r3, [fp, #-8]
   14288:	mov	r2, #4096	; 0x1000
   1428c:	str	r2, [r3, #16]
   14290:	ldr	r3, [fp, #-20]	; 0xffffffec
   14294:	mov	r2, r3
   14298:	ldr	r1, [fp, #-16]
   1429c:	ldr	r0, [fp, #-8]
   142a0:	bl	1412c <mmk_verify_times@@Base+0x120>
   142a4:	mov	r3, r0
   142a8:	cmp	r3, #0
   142ac:	bne	143f8 <mmk_verify_register_call@@Base+0x208>
   142b0:	ldr	r3, [fp, #-8]
   142b4:	ldr	r2, [r3, #12]
   142b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   142bc:	add	r3, r2, r3
   142c0:	add	r2, r3, #4
   142c4:	ldr	r3, [fp, #-8]
   142c8:	ldr	r3, [r3, #16]
   142cc:	cmp	r2, r3
   142d0:	bcc	1437c <mmk_verify_register_call@@Base+0x18c>
   142d4:	b	142ec <mmk_verify_register_call@@Base+0xfc>
   142d8:	ldr	r3, [fp, #-8]
   142dc:	ldr	r3, [r3, #16]
   142e0:	add	r2, r3, #4096	; 0x1000
   142e4:	ldr	r3, [fp, #-8]
   142e8:	str	r2, [r3, #16]
   142ec:	ldr	r3, [fp, #-8]
   142f0:	ldr	r2, [r3, #12]
   142f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   142f8:	add	r3, r2, r3
   142fc:	add	r2, r3, #4
   14300:	ldr	r3, [fp, #-8]
   14304:	ldr	r3, [r3, #16]
   14308:	cmp	r2, r3
   1430c:	bcs	142d8 <mmk_verify_register_call@@Base+0xe8>
   14310:	ldr	r3, [fp, #-8]
   14314:	ldr	r2, [r3, #8]
   14318:	ldr	r3, [fp, #-8]
   1431c:	ldr	r3, [r3, #16]
   14320:	mov	r1, r3
   14324:	mov	r0, r2
   14328:	bl	145b0 <mmk_realloc@@Base>
   1432c:	mov	r2, r0
   14330:	ldr	r3, [fp, #-8]
   14334:	str	r2, [r3, #8]
   14338:	ldr	r3, [fp, #-8]
   1433c:	ldr	r3, [r3, #8]
   14340:	cmp	r3, #0
   14344:	bne	1437c <mmk_verify_register_call@@Base+0x18c>
   14348:	movw	r3, #20592	; 0x5070
   1434c:	movt	r3, #2
   14350:	ldr	r0, [r3]
   14354:	movw	r3, #19904	; 0x4dc0
   14358:	movt	r3, #1
   1435c:	str	r3, [sp]
   14360:	mov	r3, #91	; 0x5b
   14364:	movw	r2, #19812	; 0x4d64
   14368:	movt	r2, #1
   1436c:	movw	r1, #19872	; 0x4da0
   14370:	movt	r1, #1
   14374:	bl	111fc <fprintf@plt>
   14378:	bl	11238 <abort@plt>
   1437c:	ldr	r3, [fp, #-8]
   14380:	ldr	r2, [r3, #8]
   14384:	ldr	r3, [fp, #-8]
   14388:	ldr	r3, [r3, #12]
   1438c:	add	r3, r2, r3
   14390:	sub	r1, fp, #20
   14394:	mov	r2, #4
   14398:	mov	r0, r3
   1439c:	bl	14460 <mmk_memcpy@@Base>
   143a0:	ldr	r3, [fp, #-8]
   143a4:	ldr	r2, [r3, #8]
   143a8:	ldr	r3, [fp, #-8]
   143ac:	ldr	r3, [r3, #12]
   143b0:	add	r3, r3, #4
   143b4:	add	r3, r2, r3
   143b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   143bc:	ldr	r1, [fp, #-16]
   143c0:	mov	r0, r3
   143c4:	bl	14460 <mmk_memcpy@@Base>
   143c8:	str	r0, [fp, #-12]
   143cc:	ldr	r3, [fp, #-12]
   143d0:	mov	r2, #1
   143d4:	str	r2, [r3]
   143d8:	ldr	r3, [fp, #-8]
   143dc:	ldr	r2, [r3, #12]
   143e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   143e4:	add	r3, r2, r3
   143e8:	add	r2, r3, #4
   143ec:	ldr	r3, [fp, #-8]
   143f0:	str	r2, [r3, #12]
   143f4:	b	143fc <mmk_verify_register_call@@Base+0x20c>
   143f8:	nop	{0}
   143fc:	sub	sp, fp, #4
   14400:	ldr	fp, [sp]
   14404:	add	sp, sp, #4
   14408:	pop	{pc}		; (ldr pc, [sp], #4)

0001440c <mmk_memcmp@@Base>:
   1440c:	mov	r3, #0
   14410:	sub	r1, r1, #1
   14414:	cmp	r2, r3
   14418:	bne	1443c <mmk_memcmp@@Base+0x30>
   1441c:	mov	r0, #0
   14420:	bx	lr
   14424:	cmp	r2, r3
   14428:	bne	14440 <mmk_memcmp@@Base+0x34>
   1442c:	mov	r0, #0
   14430:	pop	{pc}		; (ldr pc, [sp], #4)
   14434:	mvn	r0, #0
   14438:	pop	{pc}		; (ldr pc, [sp], #4)
   1443c:	push	{lr}		; (str lr, [sp, #-4]!)
   14440:	ldrb	lr, [r0, r3]
   14444:	add	r3, r3, #1
   14448:	ldrb	ip, [r1, r3]
   1444c:	cmp	lr, ip
   14450:	beq	14424 <mmk_memcmp@@Base+0x18>
   14454:	bcc	14434 <mmk_memcmp@@Base+0x28>
   14458:	mov	r0, #1
   1445c:	pop	{pc}		; (ldr pc, [sp], #4)

00014460 <mmk_memcpy@@Base>:
   14460:	sub	r1, r1, #1
   14464:	add	r2, r0, r2
   14468:	mov	r3, r0
   1446c:	cmp	r3, r2
   14470:	bxeq	lr
   14474:	ldrb	ip, [r1, #1]!
   14478:	strb	ip, [r3], #1
   1447c:	b	1446c <mmk_memcpy@@Base+0xc>

00014480 <mmk_strneq@@Base>:
   14480:	sub	r0, r0, #1
   14484:	push	{lr}		; (str lr, [sp, #-4]!)
   14488:	mov	lr, r1
   1448c:	ldrb	r3, [r0, #1]!
   14490:	cmp	r3, #0
   14494:	beq	144c4 <mmk_strneq@@Base+0x44>
   14498:	ldrb	ip, [r1], #1
   1449c:	cmp	ip, #0
   144a0:	beq	144c4 <mmk_strneq@@Base+0x44>
   144a4:	cmp	r2, #0
   144a8:	bne	144b4 <mmk_strneq@@Base+0x34>
   144ac:	mov	r0, #1
   144b0:	pop	{pc}		; (ldr pc, [sp], #4)
   144b4:	cmp	r3, ip
   144b8:	bne	144dc <mmk_strneq@@Base+0x5c>
   144bc:	sub	r2, r2, #1
   144c0:	b	14488 <mmk_strneq@@Base+0x8>
   144c4:	cmp	r2, #0
   144c8:	beq	144ac <mmk_strneq@@Base+0x2c>
   144cc:	ldrb	r0, [lr]
   144d0:	clz	r0, r0
   144d4:	lsr	r0, r0, #5
   144d8:	pop	{pc}		; (ldr pc, [sp], #4)
   144dc:	mov	r0, #0
   144e0:	pop	{pc}		; (ldr pc, [sp], #4)

000144e4 <mmk_strchr@@Base>:
   144e4:	ldrb	r2, [r0]
   144e8:	mov	r3, r0
   144ec:	add	r0, r0, #1
   144f0:	cmp	r2, #0
   144f4:	moveq	r3, r2
   144f8:	beq	14504 <mmk_strchr@@Base+0x20>
   144fc:	cmp	r2, r1
   14500:	bne	144e4 <mmk_strchr@@Base>
   14504:	mov	r0, r3
   14508:	bx	lr

0001450c <mmk_strcpy@@Base>:
   1450c:	sub	r1, r1, #1
   14510:	ldrb	r3, [r1, #1]!
   14514:	cmp	r3, #0
   14518:	bne	14524 <mmk_strcpy@@Base+0x18>
   1451c:	strb	r3, [r0]
   14520:	bx	lr
   14524:	strb	r3, [r0], #1
   14528:	b	14510 <mmk_strcpy@@Base+0x4>

0001452c <mmk_strncpy@@Base>:
   1452c:	sub	r1, r1, #1
   14530:	add	r2, r0, r2
   14534:	ldrb	r3, [r1, #1]!
   14538:	cmp	r0, r2
   1453c:	cmpne	r3, #0
   14540:	movne	ip, #1
   14544:	moveq	ip, #0
   14548:	bne	14554 <mmk_strncpy@@Base+0x28>
   1454c:	strb	ip, [r0]
   14550:	bx	lr
   14554:	strb	r3, [r0], #1
   14558:	b	14534 <mmk_strncpy@@Base+0x8>

0001455c <mmk_strlen@@Base>:
   1455c:	mov	r3, #0
   14560:	ldrb	r2, [r0, r3]
   14564:	cmp	r2, #0
   14568:	bne	14574 <mmk_strlen@@Base+0x18>
   1456c:	mov	r0, r3
   14570:	bx	lr
   14574:	add	r3, r3, #1
   14578:	b	14560 <mmk_strlen@@Base+0x4>

0001457c <mmk_isspace@@Base>:
   1457c:	sub	r0, r0, #9
   14580:	cmp	r0, #23
   14584:	ldrls	r3, [pc, #16]	; 1459c <mmk_isspace@@Base+0x20>
   14588:	mvnls	r0, r3, lsr r0
   1458c:	andls	r0, r0, #1
   14590:	eorls	r0, r0, #1
   14594:	movhi	r0, #0
   14598:	bx	lr
   1459c:	addeq	r0, r0, r3, lsl r0

000145a0 <mmk_malloc@@Base>:
   145a0:	ldr	r3, [pc, #4]	; 145ac <mmk_malloc@@Base+0xc>
   145a4:	ldr	r3, [r3]
   145a8:	bx	r3
   145ac:	andeq	r5, r2, r8, lsr #1

000145b0 <mmk_realloc@@Base>:
   145b0:	ldr	r3, [pc, #4]	; 145bc <mmk_realloc@@Base+0xc>
   145b4:	ldr	r3, [r3]
   145b8:	bx	r3
   145bc:	andeq	r5, r2, r0, lsr #1

000145c0 <mmk_free@@Base>:
   145c0:	ldr	r3, [pc, #4]	; 145cc <mmk_free@@Base+0xc>
   145c4:	ldr	r3, [r3]
   145c8:	bx	r3
   145cc:	andeq	r5, r2, r4, lsr #1

000145d0 <mmk_init_vital_functions@@Base>:
   145d0:	push	{r0, r1, r4, lr}
   145d4:	mov	r4, r0
   145d8:	mov	r0, #0
   145dc:	bl	111b4 <malloc@plt>
   145e0:	mov	r1, #0
   145e4:	bl	11190 <realloc@plt>
   145e8:	bl	1116c <free@plt>
   145ec:	ldr	r1, [pc, #152]	; 1468c <mmk_init_vital_functions@@Base+0xbc>
   145f0:	mov	r0, r4
   145f4:	bl	13a5c <plt_get_real_fn@@Base>
   145f8:	ldr	r3, [pc, #144]	; 14690 <mmk_init_vital_functions@@Base+0xc0>
   145fc:	cmp	r0, #0
   14600:	str	r0, [r3]
   14604:	bne	1462c <mmk_init_vital_functions@@Base+0x5c>
   14608:	ldr	r3, [pc, #132]	; 14694 <mmk_init_vital_functions@@Base+0xc4>
   1460c:	str	r3, [sp]
   14610:	mov	r3, #88	; 0x58
   14614:	ldr	r0, [pc, #124]	; 14698 <mmk_init_vital_functions@@Base+0xc8>
   14618:	ldr	r2, [pc, #124]	; 1469c <mmk_init_vital_functions@@Base+0xcc>
   1461c:	ldr	r1, [pc, #124]	; 146a0 <mmk_init_vital_functions@@Base+0xd0>
   14620:	ldr	r0, [r0]
   14624:	bl	111fc <fprintf@plt>
   14628:	bl	11238 <abort@plt>
   1462c:	ldr	r1, [pc, #112]	; 146a4 <mmk_init_vital_functions@@Base+0xd4>
   14630:	mov	r0, r4
   14634:	bl	13a5c <plt_get_real_fn@@Base>
   14638:	ldr	r3, [pc, #104]	; 146a8 <mmk_init_vital_functions@@Base+0xd8>
   1463c:	cmp	r0, #0
   14640:	str	r0, [r3]
   14644:	bne	14658 <mmk_init_vital_functions@@Base+0x88>
   14648:	ldr	r3, [pc, #92]	; 146ac <mmk_init_vital_functions@@Base+0xdc>
   1464c:	str	r3, [sp]
   14650:	mov	r3, #89	; 0x59
   14654:	b	14614 <mmk_init_vital_functions@@Base+0x44>
   14658:	ldr	r1, [pc, #80]	; 146b0 <mmk_init_vital_functions@@Base+0xe0>
   1465c:	mov	r0, r4
   14660:	bl	13a5c <plt_get_real_fn@@Base>
   14664:	ldr	r3, [pc, #72]	; 146b4 <mmk_init_vital_functions@@Base+0xe4>
   14668:	cmp	r0, #0
   1466c:	str	r0, [r3]
   14670:	bne	14684 <mmk_init_vital_functions@@Base+0xb4>
   14674:	ldr	r3, [pc, #60]	; 146b8 <mmk_init_vital_functions@@Base+0xe8>
   14678:	str	r3, [sp]
   1467c:	mov	r3, #90	; 0x5a
   14680:	b	14614 <mmk_init_vital_functions@@Base+0x44>
   14684:	add	sp, sp, #8
   14688:	pop	{r4, pc}
   1468c:	ldrdeq	r4, [r1], -r0
   14690:	andeq	r5, r2, r8, lsr #1
   14694:	andeq	r4, r1, r1, lsl lr
   14698:	andeq	r5, r2, r0, ror r0
   1469c:	ldrdeq	r4, [r1], -r7
   146a0:	andeq	r4, r1, fp, lsl sp
   146a4:	andeq	r4, r1, r7, asr #28
   146a8:	andeq	r5, r2, r0, lsr #1
   146ac:	andeq	r4, r1, pc, asr #28
   146b0:	andeq	r4, r1, r7, lsl #29
   146b4:	andeq	r5, r2, r4, lsr #1
   146b8:	andeq	r4, r1, ip, lsl #29

000146bc <mmk_when_init@@Base>:
   146bc:	push	{fp}		; (str fp, [sp, #-4]!)
   146c0:	add	fp, sp, #0
   146c4:	sub	sp, sp, #12
   146c8:	str	r0, [fp, #-8]
   146cc:	mrc	15, 0, r3, cr13, cr0, {3}
   146d0:	ldr	r1, [pc, #20]	; 146ec <mmk_when_init@@Base+0x30>
   146d4:	ldr	r2, [fp, #-8]
   146d8:	str	r2, [r3, r1]
   146dc:	nop	{0}
   146e0:	add	sp, fp, #0
   146e4:	pop	{fp}		; (ldr fp, [sp], #4)
   146e8:	bx	lr
   146ec:	andeq	r0, r0, r8, lsl r0

000146f0 <mmk_when_get_result@@Base>:
   146f0:	push	{fp}		; (str fp, [sp, #-4]!)
   146f4:	add	fp, sp, #0
   146f8:	mrc	15, 0, r3, cr13, cr0, {3}
   146fc:	ldr	r2, [pc, #16]	; 14714 <mmk_when_get_result@@Base+0x24>
   14700:	ldr	r3, [r3, r2]
   14704:	mov	r0, r3
   14708:	add	sp, fp, #0
   1470c:	pop	{fp}		; (ldr fp, [sp], #4)
   14710:	bx	lr
   14714:	andeq	r0, r0, r8, lsl r0

00014718 <mmk_when_impl@@Base>:
   14718:	str	fp, [sp, #-8]!
   1471c:	str	lr, [sp, #4]
   14720:	add	fp, sp, #4
   14724:	sub	sp, sp, #16
   14728:	str	r0, [fp, #-16]
   1472c:	str	r1, [fp, #-20]	; 0xffffffec
   14730:	ldr	r3, [fp, #-20]	; 0xffffffec
   14734:	str	r3, [fp, #-8]
   14738:	bl	13174 <mmk_matcher_ctx@@Base>
   1473c:	mov	r2, r0
   14740:	ldr	r3, [fp, #-8]
   14744:	str	r2, [r3]
   14748:	ldr	r3, [fp, #-16]
   1474c:	ldr	r2, [r3]
   14750:	ldr	r3, [fp, #-8]
   14754:	str	r2, [r3, #4]
   14758:	ldr	r3, [fp, #-16]
   1475c:	ldr	r2, [fp, #-8]
   14760:	str	r2, [r3]
   14764:	nop	{0}
   14768:	sub	sp, fp, #4
   1476c:	ldr	fp, [sp]
   14770:	add	sp, sp, #4
   14774:	pop	{pc}		; (ldr pc, [sp], #4)

00014778 <mmk_trampoline@@Base>:
   14778:	sub	ip, pc, #8
   1477c:	push	{r0, r1, r2, r3}
   14780:	push	{ip, lr}
   14784:	ldr	r0, [ip, #-8]
   14788:	ldr	ip, [r0, #4]
   1478c:	blx	ip
   14790:	pop	{ip, lr}
   14794:	push	{ip, lr}
   14798:	ldr	ip, [ip, #-8]
   1479c:	ldr	ip, [ip]
   147a0:	blx	ip
   147a4:	cmp	r0, #0
   147a8:	bne	147b8 <mmk_trampoline@@Base+0x40>
   147ac:	pop	{ip, lr}
   147b0:	pop	{r0, r1, r2, r3}
   147b4:	ldr	pc, [ip, #-4]
   147b8:	pop	{ip, lr}
   147bc:	pop	{r0, r1, r2, r3}
   147c0:	push	{ip, lr}
   147c4:	ldr	ip, [ip, #-8]
   147c8:	ldr	ip, [ip, #8]
   147cc:	blx	ip
   147d0:	pop	{ip, pc}

000147d4 <mmk_trampoline_end@@Base>:
   147d4:	nop			; (mov r0, r0)

000147d8 <__libc_csu_init@@Base>:
   147d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147dc:	mov	r7, r0
   147e0:	ldr	r6, [pc, #72]	; 14830 <__libc_csu_init@@Base+0x58>
   147e4:	ldr	r5, [pc, #72]	; 14834 <__libc_csu_init@@Base+0x5c>
   147e8:	add	r6, pc, r6
   147ec:	add	r5, pc, r5
   147f0:	sub	r6, r6, r5
   147f4:	mov	r8, r1
   147f8:	mov	r9, r2
   147fc:	bl	11128 <strstr@plt-0x20>
   14800:	asrs	r6, r6, #2
   14804:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14808:	mov	r4, #0
   1480c:	add	r4, r4, #1
   14810:	ldr	r3, [r5], #4
   14814:	mov	r2, r9
   14818:	mov	r1, r8
   1481c:	mov	r0, r7
   14820:	blx	r3
   14824:	cmp	r6, r4
   14828:	bne	1480c <__libc_csu_init@@Base+0x34>
   1482c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14830:	andeq	r0, r1, ip, lsl #14
   14834:	andeq	r0, r1, r4, lsl #14

00014838 <__libc_csu_fini@@Base>:
   14838:	bx	lr

Disassembly of section .fini:

0001483c <.fini>:
   1483c:	push	{r3, lr}
   14840:	pop	{r3, pc}
