
../repos/eddieantonio-ocreval-3ab279a/wordacc/wordacc:     file format elf32-littlearm


Disassembly of section .init:

00010954 <.init>:
   10954:	push	{r3, lr}
   10958:	bl	10b64 <__assert_fail@plt+0x4c>
   1095c:	pop	{r3, pc}

Disassembly of section .plt:

00010960 <calloc@plt-0x14>:
   10960:	push	{lr}		; (str lr, [sp, #-4]!)
   10964:	ldr	lr, [pc, #4]	; 10970 <calloc@plt-0x4>
   10968:	add	lr, pc, lr
   1096c:	ldr	pc, [lr, #8]!
   10970:	muleq	r1, r0, r6

00010974 <calloc@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #102400	; 0x19000
   1097c:	ldr	pc, [ip, #1680]!	; 0x690

00010980 <strcmp@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #102400	; 0x19000
   10988:	ldr	pc, [ip, #1672]!	; 0x688

0001098c <fopen@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #102400	; 0x19000
   10994:	ldr	pc, [ip, #1664]!	; 0x680

00010998 <free@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #102400	; 0x19000
   109a0:	ldr	pc, [ip, #1656]!	; 0x678

000109a4 <utf8proc_get_property@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #102400	; 0x19000
   109ac:	ldr	pc, [ip, #1648]!	; 0x670

000109b0 <fgets@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #102400	; 0x19000
   109b8:	ldr	pc, [ip, #1640]!	; 0x668

000109bc <utf8proc_encode_char@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #102400	; 0x19000
   109c4:	ldr	pc, [ip, #1632]!	; 0x660

000109c8 <strdup@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #102400	; 0x19000
   109d0:	ldr	pc, [ip, #1624]!	; 0x658

000109d4 <rewind@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #102400	; 0x19000
   109dc:	ldr	pc, [ip, #1616]!	; 0x650

000109e0 <unlink@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #102400	; 0x19000
   109e8:	ldr	pc, [ip, #1608]!	; 0x648

000109ec <utf8proc_tolower@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #102400	; 0x19000
   109f4:	ldr	pc, [ip, #1600]!	; 0x640

000109f8 <__xstat@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #102400	; 0x19000
   10a00:	ldr	pc, [ip, #1592]!	; 0x638

00010a04 <fwrite@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #102400	; 0x19000
   10a0c:	ldr	pc, [ip, #1584]!	; 0x630

00010a10 <fread@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #102400	; 0x19000
   10a18:	ldr	pc, [ip, #1576]!	; 0x628

00010a1c <utf8proc_iterate@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #102400	; 0x19000
   10a24:	ldr	pc, [ip, #1568]!	; 0x620

00010a28 <malloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #102400	; 0x19000
   10a30:	ldr	pc, [ip, #1560]!	; 0x618

00010a34 <__libc_start_main@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #102400	; 0x19000
   10a3c:	ldr	pc, [ip, #1552]!	; 0x610

00010a40 <__sysv_signal@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #102400	; 0x19000
   10a48:	ldr	pc, [ip, #1544]!	; 0x608

00010a4c <__gmon_start__@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #102400	; 0x19000
   10a54:	ldr	pc, [ip, #1536]!	; 0x600

00010a58 <getpid@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #102400	; 0x19000
   10a60:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a64 <exit@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #102400	; 0x19000
   10a6c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a70 <utf8proc_category@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #102400	; 0x19000
   10a78:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a7c <strlen@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #102400	; 0x19000
   10a84:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a88 <fprintf@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #102400	; 0x19000
   10a90:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a94 <__isoc99_sscanf@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #102400	; 0x19000
   10a9c:	ldr	pc, [ip, #1488]!	; 0x5d0

00010aa0 <fclose@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #102400	; 0x19000
   10aa8:	ldr	pc, [ip, #1480]!	; 0x5c8

00010aac <utf8proc_NFC@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #102400	; 0x19000
   10ab4:	ldr	pc, [ip, #1472]!	; 0x5c0

00010ab8 <fputc@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #102400	; 0x19000
   10ac0:	ldr	pc, [ip, #1464]!	; 0x5b8

00010ac4 <sprintf@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #102400	; 0x19000
   10acc:	ldr	pc, [ip, #1456]!	; 0x5b0

00010ad0 <atoi@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #102400	; 0x19000
   10ad8:	ldr	pc, [ip, #1448]!	; 0x5a8

00010adc <utf8proc_errmsg@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #102400	; 0x19000
   10ae4:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ae8 <fputs@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #102400	; 0x19000
   10af0:	ldr	pc, [ip, #1432]!	; 0x598

00010af4 <strncmp@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #102400	; 0x19000
   10afc:	ldr	pc, [ip, #1424]!	; 0x590

00010b00 <abort@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #102400	; 0x19000
   10b08:	ldr	pc, [ip, #1416]!	; 0x588

00010b0c <getc@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #102400	; 0x19000
   10b14:	ldr	pc, [ip, #1408]!	; 0x580

00010b18 <__assert_fail@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #102400	; 0x19000
   10b20:	ldr	pc, [ip, #1400]!	; 0x578

Disassembly of section .text:

00010b28 <error@@Base-0x273c>:
   10b28:	mov	fp, #0
   10b2c:	mov	lr, #0
   10b30:	pop	{r1}		; (ldr r1, [sp], #4)
   10b34:	mov	r2, sp
   10b38:	push	{r2}		; (str r2, [sp, #-4]!)
   10b3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b40:	ldr	ip, [pc, #16]	; 10b58 <__assert_fail@plt+0x40>
   10b44:	push	{ip}		; (str ip, [sp, #-4]!)
   10b48:	ldr	r0, [pc, #12]	; 10b5c <__assert_fail@plt+0x44>
   10b4c:	ldr	r3, [pc, #12]	; 10b60 <__assert_fail@plt+0x48>
   10b50:	bl	10a34 <__libc_start_main@plt>
   10b54:	bl	10b00 <abort@plt>
   10b58:	andeq	r5, r1, ip, asr fp
   10b5c:	muleq	r1, r4, r9
   10b60:	strdeq	r5, [r1], -ip
   10b64:	ldr	r3, [pc, #20]	; 10b80 <__assert_fail@plt+0x68>
   10b68:	ldr	r2, [pc, #20]	; 10b84 <__assert_fail@plt+0x6c>
   10b6c:	add	r3, pc, r3
   10b70:	ldr	r2, [r3, r2]
   10b74:	cmp	r2, #0
   10b78:	bxeq	lr
   10b7c:	b	10a4c <__gmon_start__@plt>
   10b80:	andeq	r9, r1, ip, lsl #9
   10b84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10b88:	ldr	r0, [pc, #24]	; 10ba8 <__assert_fail@plt+0x90>
   10b8c:	ldr	r3, [pc, #24]	; 10bac <__assert_fail@plt+0x94>
   10b90:	cmp	r3, r0
   10b94:	bxeq	lr
   10b98:	ldr	r3, [pc, #16]	; 10bb0 <__assert_fail@plt+0x98>
   10b9c:	cmp	r3, #0
   10ba0:	bxeq	lr
   10ba4:	bx	r3
   10ba8:	strdeq	sl, [r2], -ip
   10bac:	strdeq	sl, [r2], -ip
   10bb0:	andeq	r0, r0, r0
   10bb4:	ldr	r0, [pc, #36]	; 10be0 <__assert_fail@plt+0xc8>
   10bb8:	ldr	r1, [pc, #36]	; 10be4 <__assert_fail@plt+0xcc>
   10bbc:	sub	r1, r1, r0
   10bc0:	asr	r1, r1, #2
   10bc4:	add	r1, r1, r1, lsr #31
   10bc8:	asrs	r1, r1, #1
   10bcc:	bxeq	lr
   10bd0:	ldr	r3, [pc, #16]	; 10be8 <__assert_fail@plt+0xd0>
   10bd4:	cmp	r3, #0
   10bd8:	bxeq	lr
   10bdc:	bx	r3
   10be0:	strdeq	sl, [r2], -ip
   10be4:	strdeq	sl, [r2], -ip
   10be8:	andeq	r0, r0, r0
   10bec:	push	{r4, lr}
   10bf0:	ldr	r4, [pc, #24]	; 10c10 <__assert_fail@plt+0xf8>
   10bf4:	ldrb	r3, [r4]
   10bf8:	cmp	r3, #0
   10bfc:	popne	{r4, pc}
   10c00:	bl	10b88 <__assert_fail@plt+0x70>
   10c04:	mov	r3, #1
   10c08:	strb	r3, [r4]
   10c0c:	pop	{r4, pc}
   10c10:	strdeq	sl, [r2], -ip
   10c14:	b	10bb4 <__assert_fail@plt+0x9c>
   10c18:	str	r4, [sp, #-12]!
   10c1c:	str	fp, [sp, #4]
   10c20:	str	lr, [sp, #8]
   10c24:	add	fp, sp, #8
   10c28:	sub	sp, sp, #28
   10c2c:	str	r0, [fp, #-32]	; 0xffffffe0
   10c30:	str	r1, [fp, #-36]	; 0xffffffdc
   10c34:	ldr	r4, [pc, #264]	; 10d44 <__assert_fail@plt+0x22c>
   10c38:	add	r4, pc, r4
   10c3c:	mov	r3, #0
   10c40:	str	r3, [fp, #-20]	; 0xffffffec
   10c44:	ldr	r3, [pc, #252]	; 10d48 <__assert_fail@plt+0x230>
   10c48:	ldr	r2, [r4, r3]
   10c4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c50:	lsl	r3, r3, #4
   10c54:	add	r3, r2, r3
   10c58:	ldr	r3, [r3, #12]
   10c5c:	add	r3, r3, #1
   10c60:	mov	r1, #4
   10c64:	mov	r0, r3
   10c68:	bl	12644 <__assert_fail@plt+0x1b2c>
   10c6c:	str	r0, [fp, #-24]	; 0xffffffe8
   10c70:	mov	r3, #0
   10c74:	str	r3, [fp, #-16]
   10c78:	b	10cf8 <__assert_fail@plt+0x1e0>
   10c7c:	ldr	r3, [pc, #200]	; 10d4c <__assert_fail@plt+0x234>
   10c80:	ldr	r3, [r4, r3]
   10c84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10c88:	ldr	r2, [r3, r2, lsl #2]
   10c8c:	ldr	r3, [fp, #-16]
   10c90:	lsl	r3, r3, #3
   10c94:	add	r3, r2, r3
   10c98:	ldr	r2, [r3]
   10c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10ca0:	rsb	r3, r3, #1
   10ca4:	add	r3, r2, r3
   10ca8:	ldrb	r3, [r3, #12]
   10cac:	cmp	r3, #0
   10cb0:	beq	10cec <__assert_fail@plt+0x1d4>
   10cb4:	ldr	r3, [pc, #144]	; 10d4c <__assert_fail@plt+0x234>
   10cb8:	ldr	r3, [r4, r3]
   10cbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10cc0:	ldr	r1, [r3, r2, lsl #2]
   10cc4:	ldr	r3, [fp, #-16]
   10cc8:	lsl	r2, r3, #3
   10ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   10cd0:	add	r0, r3, #1
   10cd4:	str	r0, [fp, #-20]	; 0xffffffec
   10cd8:	lsl	r3, r3, #2
   10cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ce0:	add	r3, r0, r3
   10ce4:	add	r2, r1, r2
   10ce8:	str	r2, [r3]
   10cec:	ldr	r3, [fp, #-16]
   10cf0:	add	r3, r3, #1
   10cf4:	str	r3, [fp, #-16]
   10cf8:	ldr	r3, [pc, #72]	; 10d48 <__assert_fail@plt+0x230>
   10cfc:	ldr	r2, [r4, r3]
   10d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10d04:	lsl	r3, r3, #4
   10d08:	add	r3, r2, r3
   10d0c:	ldr	r3, [r3, #12]
   10d10:	ldr	r2, [fp, #-16]
   10d14:	cmp	r2, r3
   10d18:	blt	10c7c <__assert_fail@plt+0x164>
   10d1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10d20:	ldr	r2, [fp, #-20]	; 0xffffffec
   10d24:	str	r2, [r3]
   10d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d2c:	mov	r0, r3
   10d30:	sub	sp, fp, #8
   10d34:	ldr	r4, [sp]
   10d38:	ldr	fp, [sp, #4]
   10d3c:	add	sp, sp, #8
   10d40:	pop	{pc}		; (ldr pc, [sp], #4)
   10d44:	andeq	r9, r1, r0, asr #7
   10d48:	strheq	r0, [r0], -ip
   10d4c:	andeq	r0, r0, r0, lsl #2
   10d50:	str	r4, [sp, #-12]!
   10d54:	str	fp, [sp, #4]
   10d58:	str	lr, [sp, #8]
   10d5c:	add	fp, sp, #8
   10d60:	sub	sp, sp, #28
   10d64:	str	r0, [fp, #-32]	; 0xffffffe0
   10d68:	ldr	r4, [pc, #600]	; 10fc8 <__assert_fail@plt+0x4b0>
   10d6c:	add	r4, pc, r4
   10d70:	mov	r3, #0
   10d74:	str	r3, [fp, #-16]
   10d78:	b	10f38 <__assert_fail@plt+0x420>
   10d7c:	ldr	r3, [fp, #-16]
   10d80:	lsl	r3, r3, #4
   10d84:	ldr	r2, [pc, #576]	; 10fcc <__assert_fail@plt+0x4b4>
   10d88:	ldr	r2, [r4, r2]
   10d8c:	add	r0, r3, r2
   10d90:	ldr	r3, [fp, #-16]
   10d94:	lsl	r3, r3, #2
   10d98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10d9c:	add	r3, r2, r3
   10da0:	ldr	r1, [r3]
   10da4:	ldr	r3, [pc, #548]	; 10fd0 <__assert_fail@plt+0x4b8>
   10da8:	ldr	r3, [r4, r3]
   10dac:	mov	r2, r3
   10db0:	bl	151e0 <error@@Base+0x1f7c>
   10db4:	ldr	r3, [fp, #-16]
   10db8:	cmp	r3, #0
   10dbc:	bne	10de4 <__assert_fail@plt+0x2cc>
   10dc0:	ldr	r3, [pc, #520]	; 10fd0 <__assert_fail@plt+0x4b8>
   10dc4:	ldr	r3, [r4, r3]
   10dc8:	ldrb	r3, [r3, #11]
   10dcc:	cmp	r3, #0
   10dd0:	beq	10de4 <__assert_fail@plt+0x2cc>
   10dd4:	ldr	r3, [pc, #504]	; 10fd4 <__assert_fail@plt+0x4bc>
   10dd8:	add	r3, pc, r3
   10ddc:	mov	r0, r3
   10de0:	bl	13264 <error@@Base>
   10de4:	ldr	r3, [fp, #-16]
   10de8:	lsl	r3, r3, #4
   10dec:	ldr	r2, [pc, #484]	; 10fd8 <__assert_fail@plt+0x4c0>
   10df0:	ldr	r2, [r4, r2]
   10df4:	add	r0, r3, r2
   10df8:	ldr	r3, [fp, #-16]
   10dfc:	lsl	r3, r3, #4
   10e00:	ldr	r2, [pc, #452]	; 10fcc <__assert_fail@plt+0x4b4>
   10e04:	ldr	r2, [r4, r2]
   10e08:	add	r3, r3, r2
   10e0c:	mov	r1, r3
   10e10:	bl	14b74 <error@@Base+0x1910>
   10e14:	ldr	r3, [pc, #444]	; 10fd8 <__assert_fail@plt+0x4c0>
   10e18:	ldr	r2, [r4, r3]
   10e1c:	ldr	r3, [fp, #-16]
   10e20:	lsl	r3, r3, #4
   10e24:	add	r3, r2, r3
   10e28:	ldr	r3, [r3, #12]
   10e2c:	add	r3, r3, #1
   10e30:	mov	r1, #8
   10e34:	mov	r0, r3
   10e38:	bl	12644 <__assert_fail@plt+0x1b2c>
   10e3c:	mov	r1, r0
   10e40:	ldr	r3, [pc, #404]	; 10fdc <__assert_fail@plt+0x4c4>
   10e44:	ldr	r3, [r4, r3]
   10e48:	ldr	r2, [fp, #-16]
   10e4c:	str	r1, [r3, r2, lsl #2]
   10e50:	mov	r3, #0
   10e54:	str	r3, [fp, #-20]	; 0xffffffec
   10e58:	ldr	r3, [pc, #376]	; 10fd8 <__assert_fail@plt+0x4c0>
   10e5c:	ldr	r3, [r4, r3]
   10e60:	ldr	r2, [fp, #-16]
   10e64:	ldr	r3, [r3, r2, lsl #4]
   10e68:	str	r3, [fp, #-24]	; 0xffffffe8
   10e6c:	b	10f20 <__assert_fail@plt+0x408>
   10e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e74:	ldr	r3, [r3, #8]
   10e78:	mov	r1, r3
   10e7c:	ldr	r3, [pc, #348]	; 10fe0 <__assert_fail@plt+0x4c8>
   10e80:	ldr	r3, [r4, r3]
   10e84:	mov	r0, r3
   10e88:	bl	122cc <__assert_fail@plt+0x17b4>
   10e8c:	str	r0, [fp, #-28]	; 0xffffffe4
   10e90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e94:	cmp	r3, #0
   10e98:	bne	10ed0 <__assert_fail@plt+0x3b8>
   10e9c:	mov	r1, #16
   10ea0:	mov	r0, #1
   10ea4:	bl	12644 <__assert_fail@plt+0x1b2c>
   10ea8:	str	r0, [fp, #-28]	; 0xffffffe4
   10eac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10eb0:	ldr	r2, [r3, #8]
   10eb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10eb8:	str	r2, [r3, #8]
   10ebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10ec0:	ldr	r3, [pc, #280]	; 10fe0 <__assert_fail@plt+0x4c8>
   10ec4:	ldr	r3, [r4, r3]
   10ec8:	mov	r0, r3
   10ecc:	bl	123b8 <__assert_fail@plt+0x18a0>
   10ed0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10ed4:	ldr	r3, [fp, #-16]
   10ed8:	add	r3, r2, r3
   10edc:	add	r3, r3, #12
   10ee0:	mov	r2, #1
   10ee4:	strb	r2, [r3]
   10ee8:	ldr	r3, [pc, #236]	; 10fdc <__assert_fail@plt+0x4c4>
   10eec:	ldr	r3, [r4, r3]
   10ef0:	ldr	r2, [fp, #-16]
   10ef4:	ldr	r2, [r3, r2, lsl #2]
   10ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10efc:	add	r1, r3, #1
   10f00:	str	r1, [fp, #-20]	; 0xffffffec
   10f04:	lsl	r3, r3, #3
   10f08:	add	r3, r2, r3
   10f0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10f10:	str	r2, [r3]
   10f14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f18:	ldr	r3, [r3, #4]
   10f1c:	str	r3, [fp, #-24]	; 0xffffffe8
   10f20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f24:	cmp	r3, #0
   10f28:	bne	10e70 <__assert_fail@plt+0x358>
   10f2c:	ldr	r3, [fp, #-16]
   10f30:	add	r3, r3, #1
   10f34:	str	r3, [fp, #-16]
   10f38:	ldr	r3, [fp, #-16]
   10f3c:	cmp	r3, #1
   10f40:	ble	10d7c <__assert_fail@plt+0x264>
   10f44:	ldr	r3, [pc, #152]	; 10fe4 <__assert_fail@plt+0x4cc>
   10f48:	ldr	r3, [r4, r3]
   10f4c:	mov	r1, r3
   10f50:	mov	r0, #0
   10f54:	bl	10c18 <__assert_fail@plt+0x100>
   10f58:	mov	r2, r0
   10f5c:	ldr	r3, [pc, #132]	; 10fe8 <__assert_fail@plt+0x4d0>
   10f60:	ldr	r3, [r4, r3]
   10f64:	str	r2, [r3]
   10f68:	ldr	r3, [pc, #116]	; 10fe4 <__assert_fail@plt+0x4cc>
   10f6c:	ldr	r3, [r4, r3]
   10f70:	ldr	r3, [r3]
   10f74:	cmp	r3, #65536	; 0x10000
   10f78:	blt	10f8c <__assert_fail@plt+0x474>
   10f7c:	ldr	r3, [pc, #104]	; 10fec <__assert_fail@plt+0x4d4>
   10f80:	add	r3, pc, r3
   10f84:	mov	r0, r3
   10f88:	bl	13264 <error@@Base>
   10f8c:	ldr	r3, [pc, #92]	; 10ff0 <__assert_fail@plt+0x4d8>
   10f90:	ldr	r3, [r4, r3]
   10f94:	mov	r1, r3
   10f98:	mov	r0, #1
   10f9c:	bl	10c18 <__assert_fail@plt+0x100>
   10fa0:	mov	r2, r0
   10fa4:	ldr	r3, [pc, #72]	; 10ff4 <__assert_fail@plt+0x4dc>
   10fa8:	ldr	r3, [r4, r3]
   10fac:	str	r2, [r3]
   10fb0:	nop	{0}
   10fb4:	sub	sp, fp, #8
   10fb8:	ldr	r4, [sp]
   10fbc:	ldr	fp, [sp, #4]
   10fc0:	add	sp, sp, #8
   10fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   10fc8:	andeq	r9, r1, ip, lsl #5
   10fcc:	muleq	r0, ip, r0
   10fd0:	strheq	r0, [r0], -r8
   10fd4:	muleq	r0, ip, sp
   10fd8:	strheq	r0, [r0], -ip
   10fdc:	andeq	r0, r0, r0, lsl #2
   10fe0:	andeq	r0, r0, r8, asr #1
   10fe4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10fe8:	andeq	r0, r0, ip, ror #1
   10fec:	andeq	r4, r0, r0, lsl ip
   10ff0:	andeq	r0, r0, ip, lsr #1
   10ff4:	andeq	r0, r0, r8, lsr #1
   10ff8:	push	{fp}		; (str fp, [sp, #-4]!)
   10ffc:	add	fp, sp, #0
   11000:	sub	sp, sp, #28
   11004:	str	r0, [fp, #-16]
   11008:	str	r1, [fp, #-20]	; 0xffffffec
   1100c:	str	r2, [fp, #-24]	; 0xffffffe8
   11010:	mov	r3, #0
   11014:	str	r3, [fp, #-8]
   11018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1101c:	cmp	r3, #0
   11020:	beq	110ec <__assert_fail@plt+0x5d4>
   11024:	ldr	r3, [fp, #-20]	; 0xffffffec
   11028:	ldr	r3, [r3, #8]
   1102c:	rsb	r3, r3, #0
   11030:	ldr	r2, [fp, #-16]
   11034:	cmp	r2, r3
   11038:	ble	1107c <__assert_fail@plt+0x564>
   1103c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11040:	ldr	r2, [r3, #12]
   11044:	ldr	r3, [fp, #-16]
   11048:	sub	r1, r3, #1
   1104c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11050:	ldr	r3, [r3, #8]
   11054:	add	r3, r1, r3
   11058:	asr	r3, r3, #1
   1105c:	lsl	r3, r3, #1
   11060:	add	r3, r2, r3
   11064:	ldrh	r3, [r3]
   11068:	str	r3, [fp, #-8]
   1106c:	ldr	r3, [fp, #-16]
   11070:	sub	r2, r3, #1
   11074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11078:	str	r2, [r3]
   1107c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11080:	ldr	r3, [r3, #8]
   11084:	ldr	r2, [fp, #-16]
   11088:	cmp	r2, r3
   1108c:	bge	110ec <__assert_fail@plt+0x5d4>
   11090:	ldr	r3, [fp, #-20]	; 0xffffffec
   11094:	ldr	r2, [r3, #12]
   11098:	ldr	r3, [fp, #-16]
   1109c:	add	r1, r3, #1
   110a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   110a4:	ldr	r3, [r3, #8]
   110a8:	add	r3, r1, r3
   110ac:	asr	r3, r3, #1
   110b0:	lsl	r3, r3, #1
   110b4:	add	r3, r2, r3
   110b8:	ldrh	r3, [r3]
   110bc:	add	r3, r3, #1
   110c0:	str	r3, [fp, #-12]
   110c4:	ldr	r2, [fp, #-12]
   110c8:	ldr	r3, [fp, #-8]
   110cc:	cmp	r2, r3
   110d0:	blt	110ec <__assert_fail@plt+0x5d4>
   110d4:	ldr	r3, [fp, #-12]
   110d8:	str	r3, [fp, #-8]
   110dc:	ldr	r3, [fp, #-16]
   110e0:	add	r2, r3, #1
   110e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110e8:	str	r2, [r3]
   110ec:	ldr	r3, [fp, #-8]
   110f0:	mov	r0, r3
   110f4:	add	sp, fp, #0
   110f8:	pop	{fp}		; (ldr fp, [sp], #4)
   110fc:	bx	lr
   11100:	str	r4, [sp, #-12]!
   11104:	str	fp, [sp, #4]
   11108:	str	lr, [sp, #8]
   1110c:	add	fp, sp, #8
   11110:	sub	sp, sp, #28
   11114:	str	r0, [fp, #-32]	; 0xffffffe0
   11118:	str	r1, [fp, #-36]	; 0xffffffdc
   1111c:	ldr	r4, [pc, #352]	; 11284 <__assert_fail@plt+0x76c>
   11120:	add	r4, pc, r4
   11124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11128:	ldr	r3, [r3]
   1112c:	sub	r2, fp, #24
   11130:	mov	r1, r3
   11134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11138:	bl	10ff8 <__assert_fail@plt+0x4e0>
   1113c:	str	r0, [fp, #-16]
   11140:	ldr	r2, [fp, #-16]
   11144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11148:	add	r3, r2, r3
   1114c:	str	r3, [fp, #-20]	; 0xffffffec
   11150:	b	1116c <__assert_fail@plt+0x654>
   11154:	ldr	r3, [fp, #-16]
   11158:	add	r3, r3, #1
   1115c:	str	r3, [fp, #-16]
   11160:	ldr	r3, [fp, #-20]	; 0xffffffec
   11164:	add	r3, r3, #1
   11168:	str	r3, [fp, #-20]	; 0xffffffec
   1116c:	ldr	r3, [pc, #276]	; 11288 <__assert_fail@plt+0x770>
   11170:	ldr	r3, [r4, r3]
   11174:	ldr	r3, [r3]
   11178:	ldr	r2, [fp, #-16]
   1117c:	cmp	r2, r3
   11180:	bge	111e4 <__assert_fail@plt+0x6cc>
   11184:	ldr	r3, [pc, #256]	; 1128c <__assert_fail@plt+0x774>
   11188:	ldr	r3, [r4, r3]
   1118c:	ldr	r3, [r3]
   11190:	ldr	r2, [fp, #-20]	; 0xffffffec
   11194:	cmp	r2, r3
   11198:	bge	111e4 <__assert_fail@plt+0x6cc>
   1119c:	ldr	r3, [pc, #236]	; 11290 <__assert_fail@plt+0x778>
   111a0:	ldr	r3, [r4, r3]
   111a4:	ldr	r2, [r3]
   111a8:	ldr	r3, [fp, #-16]
   111ac:	lsl	r3, r3, #2
   111b0:	add	r3, r2, r3
   111b4:	ldr	r3, [r3]
   111b8:	ldr	r2, [r3]
   111bc:	ldr	r3, [pc, #208]	; 11294 <__assert_fail@plt+0x77c>
   111c0:	ldr	r3, [r4, r3]
   111c4:	ldr	r1, [r3]
   111c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   111cc:	lsl	r3, r3, #2
   111d0:	add	r3, r1, r3
   111d4:	ldr	r3, [r3]
   111d8:	ldr	r3, [r3]
   111dc:	cmp	r2, r3
   111e0:	beq	11154 <__assert_fail@plt+0x63c>
   111e4:	ldr	r3, [pc, #156]	; 11288 <__assert_fail@plt+0x770>
   111e8:	ldr	r3, [r4, r3]
   111ec:	ldr	r3, [r3]
   111f0:	ldr	r2, [fp, #-16]
   111f4:	cmp	r2, r3
   111f8:	bne	11210 <__assert_fail@plt+0x6f8>
   111fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11200:	add	r2, r3, #1
   11204:	ldr	r3, [pc, #140]	; 11298 <__assert_fail@plt+0x780>
   11208:	ldr	r3, [r4, r3]
   1120c:	str	r2, [r3]
   11210:	ldr	r3, [pc, #116]	; 1128c <__assert_fail@plt+0x774>
   11214:	ldr	r3, [r4, r3]
   11218:	ldr	r3, [r3]
   1121c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11220:	cmp	r2, r3
   11224:	bne	1123c <__assert_fail@plt+0x724>
   11228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1122c:	sub	r2, r3, #1
   11230:	ldr	r3, [pc, #100]	; 1129c <__assert_fail@plt+0x784>
   11234:	ldr	r3, [r4, r3]
   11238:	str	r2, [r3]
   1123c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11240:	ldr	r2, [r3, #12]
   11244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11248:	ldr	r1, [r3, #8]
   1124c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11250:	add	r3, r1, r3
   11254:	asr	r3, r3, #1
   11258:	lsl	r3, r3, #1
   1125c:	add	r3, r2, r3
   11260:	ldr	r2, [fp, #-16]
   11264:	uxth	r2, r2
   11268:	strh	r2, [r3]
   1126c:	nop	{0}
   11270:	sub	sp, fp, #8
   11274:	ldr	r4, [sp]
   11278:	ldr	fp, [sp, #4]
   1127c:	add	sp, sp, #8
   11280:	pop	{pc}		; (ldr pc, [sp], #4)
   11284:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11288:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1128c:	andeq	r0, r0, ip, lsr #1
   11290:	andeq	r0, r0, ip, ror #1
   11294:	andeq	r0, r0, r8, lsr #1
   11298:	strdeq	r0, [r0], -r8
   1129c:	andeq	r0, r0, r8, ror #1
   112a0:	str	r4, [sp, #-12]!
   112a4:	str	fp, [sp, #4]
   112a8:	str	lr, [sp, #8]
   112ac:	add	fp, sp, #8
   112b0:	sub	sp, sp, #20
   112b4:	ldr	r4, [pc, #332]	; 11408 <__assert_fail@plt+0x8f0>
   112b8:	add	r4, pc, r4
   112bc:	mvn	r3, #0
   112c0:	str	r3, [fp, #-16]
   112c4:	ldr	r3, [pc, #320]	; 1140c <__assert_fail@plt+0x8f4>
   112c8:	ldr	r3, [r4, r3]
   112cc:	ldr	r3, [r3]
   112d0:	rsb	r2, r3, #0
   112d4:	ldr	r3, [pc, #308]	; 11410 <__assert_fail@plt+0x8f8>
   112d8:	ldr	r3, [r4, r3]
   112dc:	str	r2, [r3]
   112e0:	ldr	r3, [pc, #300]	; 11414 <__assert_fail@plt+0x8fc>
   112e4:	ldr	r3, [r4, r3]
   112e8:	ldr	r2, [r3]
   112ec:	ldr	r3, [pc, #292]	; 11418 <__assert_fail@plt+0x900>
   112f0:	ldr	r3, [r4, r3]
   112f4:	str	r2, [r3]
   112f8:	b	113c0 <__assert_fail@plt+0x8a8>
   112fc:	mov	r1, #16
   11300:	mov	r0, #1
   11304:	bl	12644 <__assert_fail@plt+0x1b2c>
   11308:	str	r0, [fp, #-24]	; 0xffffffe8
   1130c:	ldr	r3, [fp, #-16]
   11310:	add	r3, r3, #1
   11314:	str	r3, [fp, #-16]
   11318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1131c:	ldr	r2, [fp, #-16]
   11320:	str	r2, [r3, #8]
   11324:	ldr	r3, [fp, #-16]
   11328:	add	r3, r3, #1
   1132c:	mov	r1, #2
   11330:	mov	r0, r3
   11334:	bl	12644 <__assert_fail@plt+0x1b2c>
   11338:	mov	r2, r0
   1133c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11340:	str	r2, [r3, #12]
   11344:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11348:	ldr	r3, [pc, #204]	; 1141c <__assert_fail@plt+0x904>
   1134c:	ldr	r3, [r4, r3]
   11350:	mov	r0, r3
   11354:	bl	11c14 <__assert_fail@plt+0x10fc>
   11358:	ldr	r3, [fp, #-16]
   1135c:	rsb	r3, r3, #0
   11360:	str	r3, [fp, #-20]	; 0xffffffec
   11364:	b	113b0 <__assert_fail@plt+0x898>
   11368:	ldr	r3, [pc, #160]	; 11410 <__assert_fail@plt+0x8f8>
   1136c:	ldr	r3, [r4, r3]
   11370:	ldr	r3, [r3]
   11374:	ldr	r2, [fp, #-20]	; 0xffffffec
   11378:	cmp	r2, r3
   1137c:	blt	113a4 <__assert_fail@plt+0x88c>
   11380:	ldr	r3, [pc, #144]	; 11418 <__assert_fail@plt+0x900>
   11384:	ldr	r3, [r4, r3]
   11388:	ldr	r3, [r3]
   1138c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11390:	cmp	r2, r3
   11394:	bgt	113a4 <__assert_fail@plt+0x88c>
   11398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1139c:	ldr	r0, [fp, #-20]	; 0xffffffec
   113a0:	bl	11100 <__assert_fail@plt+0x5e8>
   113a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   113a8:	add	r3, r3, #2
   113ac:	str	r3, [fp, #-20]	; 0xffffffec
   113b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   113b4:	ldr	r3, [fp, #-16]
   113b8:	cmp	r2, r3
   113bc:	ble	11368 <__assert_fail@plt+0x850>
   113c0:	ldr	r3, [pc, #76]	; 11414 <__assert_fail@plt+0x8fc>
   113c4:	ldr	r3, [r4, r3]
   113c8:	ldr	r2, [r3]
   113cc:	ldr	r3, [pc, #56]	; 1140c <__assert_fail@plt+0x8f4>
   113d0:	ldr	r3, [r4, r3]
   113d4:	ldr	r3, [r3]
   113d8:	sub	r2, r2, r3
   113dc:	ldr	r3, [pc, #44]	; 11410 <__assert_fail@plt+0x8f8>
   113e0:	ldr	r3, [r4, r3]
   113e4:	ldr	r3, [r3]
   113e8:	cmp	r2, r3
   113ec:	bge	112fc <__assert_fail@plt+0x7e4>
   113f0:	nop	{0}
   113f4:	sub	sp, fp, #8
   113f8:	ldr	r4, [sp]
   113fc:	ldr	fp, [sp, #4]
   11400:	add	sp, sp, #8
   11404:	pop	{pc}		; (ldr pc, [sp], #4)
   11408:	andeq	r8, r1, r0, asr #26
   1140c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11410:	strdeq	r0, [r0], -r8
   11414:	andeq	r0, r0, ip, lsr #1
   11418:	andeq	r0, r0, r8, ror #1
   1141c:	andeq	r0, r0, r4, asr #1
   11420:	str	r4, [sp, #-12]!
   11424:	str	fp, [sp, #4]
   11428:	str	lr, [sp, #8]
   1142c:	add	fp, sp, #8
   11430:	sub	sp, sp, #28
   11434:	ldr	r4, [pc, #248]	; 11534 <__assert_fail@plt+0xa1c>
   11438:	add	r4, pc, r4
   1143c:	ldr	r3, [pc, #244]	; 11538 <__assert_fail@plt+0xa20>
   11440:	ldr	r3, [r4, r3]
   11444:	ldr	r2, [r3]
   11448:	ldr	r3, [pc, #236]	; 1153c <__assert_fail@plt+0xa24>
   1144c:	ldr	r3, [r4, r3]
   11450:	ldr	r3, [r3]
   11454:	sub	r3, r2, r3
   11458:	str	r3, [fp, #-16]
   1145c:	ldr	r3, [pc, #220]	; 11540 <__assert_fail@plt+0xa28>
   11460:	ldr	r3, [r4, r3]
   11464:	ldr	r3, [r3, #4]
   11468:	str	r3, [fp, #-24]	; 0xffffffe8
   1146c:	b	11510 <__assert_fail@plt+0x9f8>
   11470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11474:	ldr	r2, [r3, #12]
   11478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1147c:	ldr	r1, [r3, #8]
   11480:	ldr	r3, [fp, #-16]
   11484:	add	r3, r1, r3
   11488:	asr	r3, r3, #1
   1148c:	lsl	r3, r3, #1
   11490:	add	r3, r2, r3
   11494:	ldrh	r3, [r3]
   11498:	str	r3, [fp, #-20]	; 0xffffffec
   1149c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114a0:	ldr	r3, [r3]
   114a4:	sub	r2, fp, #32
   114a8:	mov	r1, r3
   114ac:	ldr	r0, [fp, #-16]
   114b0:	bl	10ff8 <__assert_fail@plt+0x4e0>
   114b4:	str	r0, [fp, #-28]	; 0xffffffe4
   114b8:	b	114ec <__assert_fail@plt+0x9d4>
   114bc:	ldr	r3, [pc, #128]	; 11544 <__assert_fail@plt+0xa2c>
   114c0:	ldr	r3, [r4, r3]
   114c4:	ldr	r2, [r3]
   114c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   114cc:	sub	r3, r3, #1
   114d0:	str	r3, [fp, #-20]	; 0xffffffec
   114d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   114d8:	lsl	r3, r3, #2
   114dc:	add	r3, r2, r3
   114e0:	ldr	r3, [r3]
   114e4:	mov	r2, #1
   114e8:	strb	r2, [r3, #4]
   114ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   114f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   114f4:	cmp	r2, r3
   114f8:	bgt	114bc <__assert_fail@plt+0x9a4>
   114fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11500:	str	r3, [fp, #-16]
   11504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11508:	ldr	r3, [r3]
   1150c:	str	r3, [fp, #-24]	; 0xffffffe8
   11510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11514:	cmp	r3, #0
   11518:	bne	11470 <__assert_fail@plt+0x958>
   1151c:	nop	{0}
   11520:	sub	sp, fp, #8
   11524:	ldr	r4, [sp]
   11528:	ldr	fp, [sp, #4]
   1152c:	add	sp, sp, #8
   11530:	pop	{pc}		; (ldr pc, [sp], #4)
   11534:	andeq	r8, r1, r0, asr #23
   11538:	andeq	r0, r0, ip, lsr #1
   1153c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11540:	andeq	r0, r0, r4, asr #1
   11544:	andeq	r0, r0, ip, ror #1
   11548:	str	r4, [sp, #-12]!
   1154c:	str	fp, [sp, #4]
   11550:	str	lr, [sp, #8]
   11554:	add	fp, sp, #8
   11558:	sub	sp, sp, #36	; 0x24
   1155c:	str	r0, [fp, #-32]	; 0xffffffe0
   11560:	str	r1, [fp, #-36]	; 0xffffffdc
   11564:	str	r2, [fp, #-40]	; 0xffffffd8
   11568:	ldr	r4, [pc, #388]	; 116f4 <__assert_fail@plt+0xbdc>
   1156c:	add	r4, pc, r4
   11570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11574:	bl	124b0 <__assert_fail@plt+0x1998>
   11578:	mov	r3, #0
   1157c:	str	r3, [fp, #-16]
   11580:	b	116c4 <__assert_fail@plt+0xbac>
   11584:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11588:	add	r3, r3, #4096	; 0x1000
   1158c:	ldr	r2, [r3, #3952]	; 0xf70
   11590:	ldr	r3, [fp, #-16]
   11594:	lsl	r3, r3, #2
   11598:	add	r3, r2, r3
   1159c:	ldr	r3, [r3]
   115a0:	ldr	r3, [r3, #12]
   115a4:	str	r3, [fp, #-20]	; 0xffffffec
   115a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115ac:	add	r3, r3, #4096	; 0x1000
   115b0:	ldr	r2, [r3, #3952]	; 0xf70
   115b4:	ldr	r3, [fp, #-16]
   115b8:	lsl	r3, r3, #2
   115bc:	add	r3, r2, r3
   115c0:	ldr	r3, [r3]
   115c4:	ldr	r3, [r3, #16]
   115c8:	str	r3, [fp, #-24]	; 0xffffffe8
   115cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   115d4:	ldr	r3, [pc, #284]	; 116f8 <__assert_fail@plt+0xbe0>
   115d8:	ldr	r3, [r4, r3]
   115dc:	mov	r0, r3
   115e0:	bl	133c8 <error@@Base+0x164>
   115e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   115ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   115f0:	bl	133c8 <error@@Base+0x164>
   115f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115f8:	add	r3, r3, #4096	; 0x1000
   115fc:	ldr	r2, [r3, #3952]	; 0xf70
   11600:	ldr	r3, [fp, #-16]
   11604:	lsl	r3, r3, #2
   11608:	add	r3, r2, r3
   1160c:	ldr	r3, [r3]
   11610:	ldr	r3, [r3, #8]
   11614:	mov	r0, r3
   11618:	bl	10a7c <strlen@plt>
   1161c:	mov	r3, r0
   11620:	lsl	r3, r3, #3
   11624:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11628:	add	r3, r2, r3
   1162c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11630:	ldr	r1, [fp, #-20]	; 0xffffffec
   11634:	mov	r0, r3
   11638:	bl	133c8 <error@@Base+0x164>
   1163c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11640:	cmp	r3, #0
   11644:	beq	116b8 <__assert_fail@plt+0xba0>
   11648:	ldr	r2, [fp, #-20]	; 0xffffffec
   1164c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11650:	cmp	r2, r3
   11654:	moveq	r3, #1
   11658:	movne	r3, #0
   1165c:	uxtb	r3, r3
   11660:	mov	r2, r3
   11664:	mov	r1, #1
   11668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1166c:	bl	133c8 <error@@Base+0x164>
   11670:	ldr	r3, [fp, #-20]	; 0xffffffec
   11674:	cmp	r3, #10
   11678:	bgt	11688 <__assert_fail@plt+0xb70>
   1167c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11680:	lsl	r3, r3, #3
   11684:	b	1168c <__assert_fail@plt+0xb74>
   11688:	mov	r3, #88	; 0x58
   1168c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11690:	add	r0, r2, r3
   11694:	ldr	r2, [fp, #-20]	; 0xffffffec
   11698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1169c:	cmp	r2, r3
   116a0:	moveq	r3, #1
   116a4:	movne	r3, #0
   116a8:	uxtb	r3, r3
   116ac:	mov	r2, r3
   116b0:	mov	r1, #1
   116b4:	bl	133c8 <error@@Base+0x164>
   116b8:	ldr	r3, [fp, #-16]
   116bc:	add	r3, r3, #1
   116c0:	str	r3, [fp, #-16]
   116c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   116c8:	add	r3, r3, #4096	; 0x1000
   116cc:	ldr	r3, [r3, #3956]	; 0xf74
   116d0:	ldr	r2, [fp, #-16]
   116d4:	cmp	r2, r3
   116d8:	blt	11584 <__assert_fail@plt+0xa6c>
   116dc:	nop	{0}
   116e0:	sub	sp, fp, #8
   116e4:	ldr	r4, [sp]
   116e8:	ldr	fp, [sp, #4]
   116ec:	add	sp, sp, #8
   116f0:	pop	{pc}		; (ldr pc, [sp], #4)
   116f4:	andeq	r8, r1, ip, lsl #21
   116f8:	ldrdeq	r0, [r0], -r8
   116fc:	str	r4, [sp, #-12]!
   11700:	str	fp, [sp, #4]
   11704:	str	lr, [sp, #8]
   11708:	add	fp, sp, #8
   1170c:	sub	sp, sp, #20
   11710:	ldr	r4, [pc, #256]	; 11818 <__assert_fail@plt+0xd00>
   11714:	add	r4, pc, r4
   11718:	mov	r3, #0
   1171c:	str	r3, [fp, #-16]
   11720:	b	117e8 <__assert_fail@plt+0xcd0>
   11724:	mov	r3, #1
   11728:	strb	r3, [fp, #-21]	; 0xffffffeb
   1172c:	mov	r3, #0
   11730:	str	r3, [fp, #-20]	; 0xffffffec
   11734:	b	117b0 <__assert_fail@plt+0xc98>
   11738:	ldr	r3, [pc, #220]	; 1181c <__assert_fail@plt+0xd04>
   1173c:	ldr	r3, [r4, r3]
   11740:	ldr	r2, [r3]
   11744:	ldr	r1, [fp, #-16]
   11748:	ldr	r3, [fp, #-20]	; 0xffffffec
   1174c:	add	r3, r1, r3
   11750:	lsl	r3, r3, #3
   11754:	add	r3, r2, r3
   11758:	ldrb	r2, [r3, #4]
   1175c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11760:	and	r3, r3, r2
   11764:	strb	r3, [fp, #-21]	; 0xffffffeb
   11768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1176c:	add	r3, r3, #1
   11770:	add	r3, r3, #115	; 0x73
   11774:	lsl	r3, r3, #3
   11778:	ldr	r2, [pc, #160]	; 11820 <__assert_fail@plt+0xd08>
   1177c:	ldr	r2, [r4, r2]
   11780:	add	r0, r3, r2
   11784:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11788:	cmp	r3, #0
   1178c:	moveq	r3, #1
   11790:	movne	r3, #0
   11794:	uxtb	r3, r3
   11798:	mov	r2, r3
   1179c:	mov	r1, #1
   117a0:	bl	133c8 <error@@Base+0x164>
   117a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   117a8:	add	r3, r3, #1
   117ac:	str	r3, [fp, #-20]	; 0xffffffec
   117b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   117b4:	cmp	r3, #7
   117b8:	bgt	117dc <__assert_fail@plt+0xcc4>
   117bc:	ldr	r2, [fp, #-16]
   117c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   117c4:	add	r2, r2, r3
   117c8:	ldr	r3, [pc, #84]	; 11824 <__assert_fail@plt+0xd0c>
   117cc:	ldr	r3, [r4, r3]
   117d0:	ldr	r3, [r3, #12]
   117d4:	cmp	r2, r3
   117d8:	blt	11738 <__assert_fail@plt+0xc20>
   117dc:	ldr	r3, [fp, #-16]
   117e0:	add	r3, r3, #1
   117e4:	str	r3, [fp, #-16]
   117e8:	ldr	r3, [pc, #52]	; 11824 <__assert_fail@plt+0xd0c>
   117ec:	ldr	r3, [r4, r3]
   117f0:	ldr	r3, [r3, #12]
   117f4:	ldr	r2, [fp, #-16]
   117f8:	cmp	r2, r3
   117fc:	blt	11724 <__assert_fail@plt+0xc0c>
   11800:	nop	{0}
   11804:	sub	sp, fp, #8
   11808:	ldr	r4, [sp]
   1180c:	ldr	fp, [sp, #4]
   11810:	add	sp, sp, #8
   11814:	pop	{pc}		; (ldr pc, [sp], #4)
   11818:	andeq	r8, r1, r4, ror #17
   1181c:	andeq	r0, r0, r0, lsl #2
   11820:	ldrdeq	r0, [r0], -r8
   11824:	strheq	r0, [r0], -ip
   11828:	str	r4, [sp, #-12]!
   1182c:	str	fp, [sp, #4]
   11830:	str	lr, [sp, #8]
   11834:	add	fp, sp, #8
   11838:	sub	sp, sp, #12
   1183c:	ldr	r4, [pc, #320]	; 11984 <__assert_fail@plt+0xe6c>
   11840:	add	r4, pc, r4
   11844:	mov	r3, #0
   11848:	str	r3, [fp, #-16]
   1184c:	b	11904 <__assert_fail@plt+0xdec>
   11850:	ldr	r3, [pc, #304]	; 11988 <__assert_fail@plt+0xe70>
   11854:	ldr	r3, [r4, r3]
   11858:	ldr	r2, [r3]
   1185c:	ldr	r3, [fp, #-16]
   11860:	lsl	r3, r3, #3
   11864:	add	r3, r2, r3
   11868:	ldr	r3, [r3]
   1186c:	ldr	r3, [r3, #8]
   11870:	mov	r0, r3
   11874:	bl	12104 <__assert_fail@plt+0x15ec>
   11878:	mov	r3, r0
   1187c:	cmp	r3, #0
   11880:	beq	11894 <__assert_fail@plt+0xd7c>
   11884:	ldr	r3, [pc, #256]	; 1198c <__assert_fail@plt+0xe74>
   11888:	ldr	r3, [r4, r3]
   1188c:	add	r0, r3, #992	; 0x3e0
   11890:	b	118a4 <__assert_fail@plt+0xd8c>
   11894:	ldr	r3, [pc, #240]	; 1198c <__assert_fail@plt+0xe74>
   11898:	ldr	r3, [r4, r3]
   1189c:	movw	r2, #9048	; 0x2358
   118a0:	add	r0, r3, r2
   118a4:	ldr	r3, [pc, #220]	; 11988 <__assert_fail@plt+0xe70>
   118a8:	ldr	r3, [r4, r3]
   118ac:	ldr	r2, [r3]
   118b0:	ldr	r3, [fp, #-16]
   118b4:	lsl	r3, r3, #3
   118b8:	add	r3, r2, r3
   118bc:	ldr	r3, [r3]
   118c0:	ldr	r1, [r3, #8]
   118c4:	ldr	r3, [pc, #188]	; 11988 <__assert_fail@plt+0xe70>
   118c8:	ldr	r3, [r4, r3]
   118cc:	ldr	r2, [r3]
   118d0:	ldr	r3, [fp, #-16]
   118d4:	lsl	r3, r3, #3
   118d8:	add	r3, r2, r3
   118dc:	ldrb	r3, [r3, #4]
   118e0:	cmp	r3, #0
   118e4:	moveq	r3, #1
   118e8:	movne	r3, #0
   118ec:	uxtb	r3, r3
   118f0:	mov	r2, #1
   118f4:	bl	13420 <error@@Base+0x1bc>
   118f8:	ldr	r3, [fp, #-16]
   118fc:	add	r3, r3, #1
   11900:	str	r3, [fp, #-16]
   11904:	ldr	r3, [pc, #132]	; 11990 <__assert_fail@plt+0xe78>
   11908:	ldr	r3, [r4, r3]
   1190c:	ldr	r3, [r3, #12]
   11910:	ldr	r2, [fp, #-16]
   11914:	cmp	r2, r3
   11918:	blt	11850 <__assert_fail@plt+0xd38>
   1191c:	mov	r2, #0
   11920:	ldr	r3, [pc, #100]	; 1198c <__assert_fail@plt+0xe74>
   11924:	ldr	r3, [r4, r3]
   11928:	add	r1, r3, #8
   1192c:	ldr	r3, [pc, #88]	; 1198c <__assert_fail@plt+0xe74>
   11930:	ldr	r3, [r4, r3]
   11934:	add	r0, r3, #992	; 0x3e0
   11938:	bl	11548 <__assert_fail@plt+0xa30>
   1193c:	ldr	r3, [pc, #72]	; 1198c <__assert_fail@plt+0xe74>
   11940:	ldr	r3, [r4, r3]
   11944:	add	r2, r3, #824	; 0x338
   11948:	ldr	r3, [pc, #60]	; 1198c <__assert_fail@plt+0xe74>
   1194c:	ldr	r3, [r4, r3]
   11950:	add	r1, r3, #416	; 0x1a0
   11954:	ldr	r3, [pc, #48]	; 1198c <__assert_fail@plt+0xe74>
   11958:	ldr	r3, [r4, r3]
   1195c:	movw	r0, #9048	; 0x2358
   11960:	add	r0, r3, r0
   11964:	bl	11548 <__assert_fail@plt+0xa30>
   11968:	bl	116fc <__assert_fail@plt+0xbe4>
   1196c:	nop	{0}
   11970:	sub	sp, fp, #8
   11974:	ldr	r4, [sp]
   11978:	ldr	fp, [sp, #4]
   1197c:	add	sp, sp, #8
   11980:	pop	{pc}		; (ldr pc, [sp], #4)
   11984:			; <UNDEFINED> instruction: 0x000187b8
   11988:	andeq	r0, r0, r0, lsl #2
   1198c:	ldrdeq	r0, [r0], -r8
   11990:	strheq	r0, [r0], -ip
   11994:	str	r4, [sp, #-12]!
   11998:	str	fp, [sp, #4]
   1199c:	str	lr, [sp, #8]
   119a0:	add	fp, sp, #8
   119a4:	sub	sp, sp, #12
   119a8:	str	r0, [fp, #-16]
   119ac:	str	r1, [fp, #-20]	; 0xffffffec
   119b0:	ldr	r4, [pc, #160]	; 11a58 <__assert_fail@plt+0xf40>
   119b4:	add	r4, pc, r4
   119b8:	sub	r0, fp, #16
   119bc:	ldr	r3, [pc, #152]	; 11a5c <__assert_fail@plt+0xf44>
   119c0:	ldr	r3, [r4, r3]
   119c4:	ldr	r2, [pc, #148]	; 11a60 <__assert_fail@plt+0xf48>
   119c8:	add	r2, pc, r2
   119cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   119d0:	bl	13178 <__assert_fail@plt+0x2660>
   119d4:	ldr	r3, [fp, #-16]
   119d8:	cmp	r3, #1
   119dc:	ble	119ec <__assert_fail@plt+0xed4>
   119e0:	ldr	r3, [fp, #-16]
   119e4:	cmp	r3, #3
   119e8:	ble	119fc <__assert_fail@plt+0xee4>
   119ec:	ldr	r3, [pc, #112]	; 11a64 <__assert_fail@plt+0xf4c>
   119f0:	add	r3, pc, r3
   119f4:	mov	r0, r3
   119f8:	bl	13264 <error@@Base>
   119fc:	ldr	r3, [pc, #100]	; 11a68 <__assert_fail@plt+0xf50>
   11a00:	ldr	r3, [r4, r3]
   11a04:	ldr	r3, [r3]
   11a08:	mov	r0, r3
   11a0c:	bl	11f80 <__assert_fail@plt+0x1468>
   11a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a14:	bl	10d50 <__assert_fail@plt+0x238>
   11a18:	bl	112a0 <__assert_fail@plt+0x788>
   11a1c:	bl	11420 <__assert_fail@plt+0x908>
   11a20:	bl	11828 <__assert_fail@plt+0xd10>
   11a24:	ldr	r3, [fp, #-16]
   11a28:	cmp	r3, #3
   11a2c:	bne	11a3c <__assert_fail@plt+0xf24>
   11a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a34:	ldr	r3, [r3, #8]
   11a38:	b	11a40 <__assert_fail@plt+0xf28>
   11a3c:	mov	r3, #0
   11a40:	mov	r1, r3
   11a44:	ldr	r3, [pc, #32]	; 11a6c <__assert_fail@plt+0xf54>
   11a48:	ldr	r3, [r4, r3]
   11a4c:	mov	r0, r3
   11a50:	bl	13edc <error@@Base+0xc78>
   11a54:	bl	13250 <__assert_fail@plt+0x2738>
   11a58:	andeq	r8, r1, r4, asr #12
   11a5c:	andeq	r0, r0, ip, asr #1
   11a60:	andeq	r4, r0, r0, ror #3
   11a64:	strdeq	r4, [r0], -r8
   11a68:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a6c:	ldrdeq	r0, [r0], -r8
   11a70:	push	{fp}		; (str fp, [sp, #-4]!)
   11a74:	add	fp, sp, #0
   11a78:	sub	sp, sp, #12
   11a7c:	str	r0, [fp, #-8]
   11a80:	ldr	r3, [fp, #-8]
   11a84:	mov	r2, #0
   11a88:	str	r2, [r3, #4]
   11a8c:	ldr	r3, [fp, #-8]
   11a90:	ldr	r2, [r3, #4]
   11a94:	ldr	r3, [fp, #-8]
   11a98:	str	r2, [r3]
   11a9c:	ldr	r3, [fp, #-8]
   11aa0:	mov	r2, #0
   11aa4:	str	r2, [r3, #8]
   11aa8:	ldr	r3, [fp, #-8]
   11aac:	mov	r2, #0
   11ab0:	str	r2, [r3, #12]
   11ab4:	nop	{0}
   11ab8:	add	sp, fp, #0
   11abc:	pop	{fp}		; (ldr fp, [sp], #4)
   11ac0:	bx	lr
   11ac4:	str	fp, [sp, #-8]!
   11ac8:	str	lr, [sp, #4]
   11acc:	add	fp, sp, #4
   11ad0:	sub	sp, sp, #8
   11ad4:	str	r0, [fp, #-8]
   11ad8:	ldr	r3, [fp, #-8]
   11adc:	ldr	r3, [r3, #8]
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b04 <__assert_fail@plt+0xfec>
   11ae8:	ldr	r3, [fp, #-8]
   11aec:	ldr	r3, [r3, #8]
   11af0:	mov	r0, r3
   11af4:	bl	10998 <free@plt>
   11af8:	ldr	r3, [fp, #-8]
   11afc:	mov	r2, #0
   11b00:	str	r2, [r3, #8]
   11b04:	nop	{0}
   11b08:	sub	sp, fp, #4
   11b0c:	ldr	fp, [sp]
   11b10:	add	sp, sp, #4
   11b14:	pop	{pc}		; (ldr pc, [sp], #4)
   11b18:	str	fp, [sp, #-8]!
   11b1c:	str	lr, [sp, #4]
   11b20:	add	fp, sp, #4
   11b24:	sub	sp, sp, #16
   11b28:	str	r0, [fp, #-8]
   11b2c:	str	r1, [fp, #-12]
   11b30:	str	r2, [fp, #-16]
   11b34:	str	r3, [fp, #-20]	; 0xffffffec
   11b38:	ldr	r3, [fp, #-16]
   11b3c:	ldr	r2, [fp, #-12]
   11b40:	str	r2, [r3]
   11b44:	ldr	r3, [fp, #-16]
   11b48:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b4c:	str	r2, [r3, #4]
   11b50:	ldr	r3, [fp, #-12]
   11b54:	cmp	r3, #0
   11b58:	beq	11b6c <__assert_fail@plt+0x1054>
   11b5c:	ldr	r3, [fp, #-12]
   11b60:	ldr	r2, [fp, #-16]
   11b64:	str	r2, [r3, #4]
   11b68:	b	11b78 <__assert_fail@plt+0x1060>
   11b6c:	ldr	r3, [fp, #-8]
   11b70:	ldr	r2, [fp, #-16]
   11b74:	str	r2, [r3]
   11b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b7c:	cmp	r3, #0
   11b80:	beq	11b94 <__assert_fail@plt+0x107c>
   11b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b88:	ldr	r2, [fp, #-16]
   11b8c:	str	r2, [r3]
   11b90:	b	11ba0 <__assert_fail@plt+0x1088>
   11b94:	ldr	r3, [fp, #-8]
   11b98:	ldr	r2, [fp, #-16]
   11b9c:	str	r2, [r3, #4]
   11ba0:	ldr	r0, [fp, #-8]
   11ba4:	bl	11ac4 <__assert_fail@plt+0xfac>
   11ba8:	ldr	r3, [fp, #-8]
   11bac:	ldr	r3, [r3, #12]
   11bb0:	add	r2, r3, #1
   11bb4:	ldr	r3, [fp, #-8]
   11bb8:	str	r2, [r3, #12]
   11bbc:	nop	{0}
   11bc0:	sub	sp, fp, #4
   11bc4:	ldr	fp, [sp]
   11bc8:	add	sp, sp, #4
   11bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd0:	str	fp, [sp, #-8]!
   11bd4:	str	lr, [sp, #4]
   11bd8:	add	fp, sp, #4
   11bdc:	sub	sp, sp, #8
   11be0:	str	r0, [fp, #-8]
   11be4:	str	r1, [fp, #-12]
   11be8:	ldr	r3, [fp, #-8]
   11bec:	ldr	r3, [r3]
   11bf0:	ldr	r2, [fp, #-12]
   11bf4:	mov	r1, #0
   11bf8:	ldr	r0, [fp, #-8]
   11bfc:	bl	11b18 <__assert_fail@plt+0x1000>
   11c00:	nop	{0}
   11c04:	sub	sp, fp, #4
   11c08:	ldr	fp, [sp]
   11c0c:	add	sp, sp, #4
   11c10:	pop	{pc}		; (ldr pc, [sp], #4)
   11c14:	str	fp, [sp, #-8]!
   11c18:	str	lr, [sp, #4]
   11c1c:	add	fp, sp, #4
   11c20:	sub	sp, sp, #8
   11c24:	str	r0, [fp, #-8]
   11c28:	str	r1, [fp, #-12]
   11c2c:	ldr	r3, [fp, #-8]
   11c30:	ldr	r1, [r3, #4]
   11c34:	mov	r3, #0
   11c38:	ldr	r2, [fp, #-12]
   11c3c:	ldr	r0, [fp, #-8]
   11c40:	bl	11b18 <__assert_fail@plt+0x1000>
   11c44:	nop	{0}
   11c48:	sub	sp, fp, #4
   11c4c:	ldr	fp, [sp]
   11c50:	add	sp, sp, #4
   11c54:	pop	{pc}		; (ldr pc, [sp], #4)
   11c58:	str	fp, [sp, #-8]!
   11c5c:	str	lr, [sp, #4]
   11c60:	add	fp, sp, #4
   11c64:	sub	sp, sp, #16
   11c68:	str	r0, [fp, #-8]
   11c6c:	str	r1, [fp, #-12]
   11c70:	str	r2, [fp, #-16]
   11c74:	ldr	r3, [fp, #-16]
   11c78:	ldr	r1, [r3]
   11c7c:	ldr	r3, [fp, #-16]
   11c80:	ldr	r2, [fp, #-12]
   11c84:	ldr	r0, [fp, #-8]
   11c88:	bl	11b18 <__assert_fail@plt+0x1000>
   11c8c:	nop	{0}
   11c90:	sub	sp, fp, #4
   11c94:	ldr	fp, [sp]
   11c98:	add	sp, sp, #4
   11c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11ca0:	str	fp, [sp, #-8]!
   11ca4:	str	lr, [sp, #4]
   11ca8:	add	fp, sp, #4
   11cac:	sub	sp, sp, #16
   11cb0:	str	r0, [fp, #-8]
   11cb4:	str	r1, [fp, #-12]
   11cb8:	str	r2, [fp, #-16]
   11cbc:	ldr	r3, [fp, #-12]
   11cc0:	ldr	r3, [r3, #4]
   11cc4:	ldr	r2, [fp, #-16]
   11cc8:	ldr	r1, [fp, #-12]
   11ccc:	ldr	r0, [fp, #-8]
   11cd0:	bl	11b18 <__assert_fail@plt+0x1000>
   11cd4:	nop	{0}
   11cd8:	sub	sp, fp, #4
   11cdc:	ldr	fp, [sp]
   11ce0:	add	sp, sp, #4
   11ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce8:	str	fp, [sp, #-8]!
   11cec:	str	lr, [sp, #4]
   11cf0:	add	fp, sp, #4
   11cf4:	sub	sp, sp, #8
   11cf8:	str	r0, [fp, #-8]
   11cfc:	str	r1, [fp, #-12]
   11d00:	ldr	r3, [fp, #-12]
   11d04:	ldr	r3, [r3]
   11d08:	cmp	r3, #0
   11d0c:	beq	11d28 <__assert_fail@plt+0x1210>
   11d10:	ldr	r3, [fp, #-12]
   11d14:	ldr	r3, [r3]
   11d18:	ldr	r2, [fp, #-12]
   11d1c:	ldr	r2, [r2, #4]
   11d20:	str	r2, [r3, #4]
   11d24:	b	11d38 <__assert_fail@plt+0x1220>
   11d28:	ldr	r3, [fp, #-12]
   11d2c:	ldr	r2, [r3, #4]
   11d30:	ldr	r3, [fp, #-8]
   11d34:	str	r2, [r3]
   11d38:	ldr	r3, [fp, #-12]
   11d3c:	ldr	r3, [r3, #4]
   11d40:	cmp	r3, #0
   11d44:	beq	11d60 <__assert_fail@plt+0x1248>
   11d48:	ldr	r3, [fp, #-12]
   11d4c:	ldr	r3, [r3, #4]
   11d50:	ldr	r2, [fp, #-12]
   11d54:	ldr	r2, [r2]
   11d58:	str	r2, [r3]
   11d5c:	b	11d70 <__assert_fail@plt+0x1258>
   11d60:	ldr	r3, [fp, #-12]
   11d64:	ldr	r2, [r3]
   11d68:	ldr	r3, [fp, #-8]
   11d6c:	str	r2, [r3, #4]
   11d70:	ldr	r3, [fp, #-12]
   11d74:	mov	r2, #0
   11d78:	str	r2, [r3, #4]
   11d7c:	ldr	r3, [fp, #-12]
   11d80:	ldr	r2, [r3, #4]
   11d84:	ldr	r3, [fp, #-12]
   11d88:	str	r2, [r3]
   11d8c:	ldr	r0, [fp, #-8]
   11d90:	bl	11ac4 <__assert_fail@plt+0xfac>
   11d94:	ldr	r3, [fp, #-8]
   11d98:	ldr	r3, [r3, #12]
   11d9c:	sub	r2, r3, #1
   11da0:	ldr	r3, [fp, #-8]
   11da4:	str	r2, [r3, #12]
   11da8:	nop	{0}
   11dac:	sub	sp, fp, #4
   11db0:	ldr	fp, [sp]
   11db4:	add	sp, sp, #4
   11db8:	pop	{pc}		; (ldr pc, [sp], #4)
   11dbc:	str	fp, [sp, #-8]!
   11dc0:	str	lr, [sp, #4]
   11dc4:	add	fp, sp, #4
   11dc8:	sub	sp, sp, #16
   11dcc:	str	r0, [fp, #-16]
   11dd0:	mov	r3, #0
   11dd4:	str	r3, [fp, #-12]
   11dd8:	ldr	r3, [fp, #-16]
   11ddc:	ldr	r3, [r3, #8]
   11de0:	cmp	r3, #0
   11de4:	bne	11e68 <__assert_fail@plt+0x1350>
   11de8:	ldr	r3, [fp, #-16]
   11dec:	ldr	r3, [r3, #12]
   11df0:	cmp	r3, #0
   11df4:	beq	11e68 <__assert_fail@plt+0x1350>
   11df8:	ldr	r3, [fp, #-16]
   11dfc:	ldr	r3, [r3, #12]
   11e00:	mov	r1, #4
   11e04:	mov	r0, r3
   11e08:	bl	12644 <__assert_fail@plt+0x1b2c>
   11e0c:	mov	r2, r0
   11e10:	ldr	r3, [fp, #-16]
   11e14:	str	r2, [r3, #8]
   11e18:	ldr	r3, [fp, #-16]
   11e1c:	ldr	r3, [r3]
   11e20:	str	r3, [fp, #-8]
   11e24:	b	11e58 <__assert_fail@plt+0x1340>
   11e28:	ldr	r3, [fp, #-16]
   11e2c:	ldr	r2, [r3, #8]
   11e30:	ldr	r3, [fp, #-12]
   11e34:	add	r1, r3, #1
   11e38:	str	r1, [fp, #-12]
   11e3c:	lsl	r3, r3, #2
   11e40:	add	r3, r2, r3
   11e44:	ldr	r2, [fp, #-8]
   11e48:	str	r2, [r3]
   11e4c:	ldr	r3, [fp, #-8]
   11e50:	ldr	r3, [r3, #4]
   11e54:	str	r3, [fp, #-8]
   11e58:	ldr	r3, [fp, #-8]
   11e5c:	cmp	r3, #0
   11e60:	bne	11e28 <__assert_fail@plt+0x1310>
   11e64:	b	11e6c <__assert_fail@plt+0x1354>
   11e68:	nop	{0}
   11e6c:	sub	sp, fp, #4
   11e70:	ldr	fp, [sp]
   11e74:	add	sp, sp, #4
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)
   11e7c:	str	fp, [sp, #-8]!
   11e80:	str	lr, [sp, #4]
   11e84:	add	fp, sp, #4
   11e88:	sub	sp, sp, #16
   11e8c:	str	r0, [fp, #-16]
   11e90:	str	r1, [fp, #-20]	; 0xffffffec
   11e94:	b	11ebc <__assert_fail@plt+0x13a4>
   11e98:	ldr	r3, [fp, #-16]
   11e9c:	ldr	r3, [r3]
   11ea0:	str	r3, [fp, #-8]
   11ea4:	ldr	r1, [fp, #-8]
   11ea8:	ldr	r0, [fp, #-16]
   11eac:	bl	11ce8 <__assert_fail@plt+0x11d0>
   11eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11eb4:	ldr	r0, [fp, #-8]
   11eb8:	blx	r3
   11ebc:	ldr	r3, [fp, #-16]
   11ec0:	ldr	r3, [r3]
   11ec4:	cmp	r3, #0
   11ec8:	bne	11e98 <__assert_fail@plt+0x1380>
   11ecc:	nop	{0}
   11ed0:	sub	sp, fp, #4
   11ed4:	ldr	fp, [sp]
   11ed8:	add	sp, sp, #4
   11edc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee0:	str	fp, [sp, #-8]!
   11ee4:	str	lr, [sp, #4]
   11ee8:	add	fp, sp, #4
   11eec:	sub	sp, sp, #16
   11ef0:	str	r0, [fp, #-16]
   11ef4:	ldr	r1, [fp, #-16]
   11ef8:	ldr	r3, [pc, #116]	; 11f74 <__assert_fail@plt+0x145c>
   11efc:	add	r3, pc, r3
   11f00:	mov	r0, r3
   11f04:	bl	122cc <__assert_fail@plt+0x17b4>
   11f08:	str	r0, [fp, #-8]
   11f0c:	ldr	r3, [fp, #-8]
   11f10:	cmp	r3, #0
   11f14:	beq	11f30 <__assert_fail@plt+0x1418>
   11f18:	ldr	r1, [fp, #-16]
   11f1c:	ldr	r3, [pc, #84]	; 11f78 <__assert_fail@plt+0x1460>
   11f20:	add	r3, pc, r3
   11f24:	mov	r0, r3
   11f28:	bl	13350 <error@@Base+0xec>
   11f2c:	b	11f60 <__assert_fail@plt+0x1448>
   11f30:	mov	r1, #12
   11f34:	mov	r0, #1
   11f38:	bl	12644 <__assert_fail@plt+0x1b2c>
   11f3c:	str	r0, [fp, #-8]
   11f40:	ldr	r3, [fp, #-8]
   11f44:	ldr	r2, [fp, #-16]
   11f48:	str	r2, [r3, #8]
   11f4c:	ldr	r1, [fp, #-8]
   11f50:	ldr	r3, [pc, #36]	; 11f7c <__assert_fail@plt+0x1464>
   11f54:	add	r3, pc, r3
   11f58:	mov	r0, r3
   11f5c:	bl	123b8 <__assert_fail@plt+0x18a0>
   11f60:	nop	{0}
   11f64:	sub	sp, fp, #4
   11f68:	ldr	fp, [sp]
   11f6c:	add	sp, sp, #4
   11f70:	pop	{pc}		; (ldr pc, [sp], #4)
   11f74:	strdeq	r8, [r1], -ip
   11f78:	andeq	r3, r0, r8, ror #30
   11f7c:	andeq	r8, r1, r4, lsr #7
   11f80:	str	r4, [sp, #-12]!
   11f84:	str	fp, [sp, #4]
   11f88:	str	lr, [sp, #8]
   11f8c:	add	fp, sp, #8
   11f90:	sub	sp, sp, #20
   11f94:	str	r0, [fp, #-24]	; 0xffffffe8
   11f98:	ldr	r4, [pc, #308]	; 120d4 <__assert_fail@plt+0x15bc>
   11f9c:	add	r4, pc, r4
   11fa0:	ldr	r3, [pc, #304]	; 120d8 <__assert_fail@plt+0x15c0>
   11fa4:	add	r3, pc, r3
   11fa8:	ldrb	r3, [r3]
   11fac:	cmp	r3, #0
   11fb0:	beq	11fc4 <__assert_fail@plt+0x14ac>
   11fb4:	ldr	r3, [pc, #288]	; 120dc <__assert_fail@plt+0x15c4>
   11fb8:	add	r3, pc, r3
   11fbc:	mov	r0, r3
   11fc0:	bl	13264 <error@@Base>
   11fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fc8:	cmp	r3, #0
   11fcc:	beq	12068 <__assert_fail@plt+0x1550>
   11fd0:	ldr	r3, [pc, #264]	; 120e0 <__assert_fail@plt+0x15c8>
   11fd4:	add	r3, pc, r3
   11fd8:	mov	r2, r3
   11fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11fe0:	ldr	r3, [pc, #252]	; 120e4 <__assert_fail@plt+0x15cc>
   11fe4:	add	r3, pc, r3
   11fe8:	mov	r0, r3
   11fec:	bl	151e0 <error@@Base+0x1f7c>
   11ff0:	ldr	r3, [pc, #240]	; 120e8 <__assert_fail@plt+0x15d0>
   11ff4:	add	r3, pc, r3
   11ff8:	mov	r1, r3
   11ffc:	ldr	r3, [pc, #232]	; 120ec <__assert_fail@plt+0x15d4>
   12000:	add	r3, pc, r3
   12004:	mov	r0, r3
   12008:	bl	14b74 <error@@Base+0x1910>
   1200c:	ldr	r3, [pc, #220]	; 120f0 <__assert_fail@plt+0x15d8>
   12010:	ldr	r3, [r4, r3]
   12014:	mov	r1, r3
   12018:	ldr	r3, [pc, #212]	; 120f4 <__assert_fail@plt+0x15dc>
   1201c:	add	r3, pc, r3
   12020:	mov	r0, r3
   12024:	bl	11e7c <__assert_fail@plt+0x1364>
   12028:	ldr	r3, [pc, #200]	; 120f8 <__assert_fail@plt+0x15e0>
   1202c:	add	r3, pc, r3
   12030:	ldr	r3, [r3]
   12034:	str	r3, [fp, #-16]
   12038:	b	12058 <__assert_fail@plt+0x1540>
   1203c:	ldr	r3, [fp, #-16]
   12040:	ldr	r3, [r3, #8]
   12044:	mov	r0, r3
   12048:	bl	11ee0 <__assert_fail@plt+0x13c8>
   1204c:	ldr	r3, [fp, #-16]
   12050:	ldr	r3, [r3, #4]
   12054:	str	r3, [fp, #-16]
   12058:	ldr	r3, [fp, #-16]
   1205c:	cmp	r3, #0
   12060:	bne	1203c <__assert_fail@plt+0x1524>
   12064:	b	120ac <__assert_fail@plt+0x1594>
   12068:	mov	r3, #0
   1206c:	strh	r3, [fp, #-18]	; 0xffffffee
   12070:	b	120a0 <__assert_fail@plt+0x1588>
   12074:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   12078:	ldr	r3, [pc, #124]	; 120fc <__assert_fail@plt+0x15e4>
   1207c:	add	r3, pc, r3
   12080:	ldr	r3, [r3, r2, lsl #2]
   12084:	mov	r0, r3
   12088:	bl	11ee0 <__assert_fail@plt+0x13c8>
   1208c:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   12090:	uxth	r3, r3
   12094:	add	r3, r3, #1
   12098:	uxth	r3, r3
   1209c:	strh	r3, [fp, #-18]	; 0xffffffee
   120a0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   120a4:	cmp	r3, #109	; 0x6d
   120a8:	bls	12074 <__assert_fail@plt+0x155c>
   120ac:	ldr	r3, [pc, #76]	; 12100 <__assert_fail@plt+0x15e8>
   120b0:	add	r3, pc, r3
   120b4:	mov	r2, #1
   120b8:	strb	r2, [r3]
   120bc:	nop	{0}
   120c0:	sub	sp, fp, #8
   120c4:	ldr	r4, [sp]
   120c8:	ldr	fp, [sp, #4]
   120cc:	add	sp, sp, #8
   120d0:	pop	{pc}		; (ldr pc, [sp], #4)
   120d4:	andeq	r8, r1, ip, asr r0
   120d8:	andeq	sl, r1, ip, asr #5
   120dc:	andeq	r3, r0, r4, ror #29
   120e0:	andeq	r8, r1, r4, asr r1
   120e4:	muleq	r1, r0, r2
   120e8:	andeq	sl, r1, r0, lsl #5
   120ec:	andeq	sl, r1, r4, lsl #5
   120f0:	andeq	r0, r0, r4, lsr #1
   120f4:	andeq	sl, r1, r8, asr r2
   120f8:	andeq	sl, r1, r8, asr r2
   120fc:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   12100:	andeq	sl, r1, r0, asr #3
   12104:	str	fp, [sp, #-8]!
   12108:	str	lr, [sp, #4]
   1210c:	add	fp, sp, #4
   12110:	sub	sp, sp, #8
   12114:	str	r0, [fp, #-8]
   12118:	ldr	r3, [pc, #88]	; 12178 <__assert_fail@plt+0x1660>
   1211c:	add	r3, pc, r3
   12120:	ldrb	r3, [r3]
   12124:	cmp	r3, #0
   12128:	bne	1213c <__assert_fail@plt+0x1624>
   1212c:	ldr	r3, [pc, #72]	; 1217c <__assert_fail@plt+0x1664>
   12130:	add	r3, pc, r3
   12134:	mov	r0, r3
   12138:	bl	13264 <error@@Base>
   1213c:	ldr	r1, [fp, #-8]
   12140:	ldr	r3, [pc, #56]	; 12180 <__assert_fail@plt+0x1668>
   12144:	add	r3, pc, r3
   12148:	mov	r0, r3
   1214c:	bl	122cc <__assert_fail@plt+0x17b4>
   12150:	mov	r3, r0
   12154:	cmp	r3, #0
   12158:	movne	r3, #1
   1215c:	moveq	r3, #0
   12160:	uxtb	r3, r3
   12164:	mov	r0, r3
   12168:	sub	sp, fp, #4
   1216c:	ldr	fp, [sp]
   12170:	add	sp, sp, #4
   12174:	pop	{pc}		; (ldr pc, [sp], #4)
   12178:	andeq	sl, r1, r4, asr r1
   1217c:	andeq	r3, r0, ip, lsl #27
   12180:			; <UNDEFINED> instruction: 0x000181b4
   12184:	str	fp, [sp, #-8]!
   12188:	str	lr, [sp, #4]
   1218c:	add	fp, sp, #4
   12190:	sub	sp, sp, #16
   12194:	str	r0, [fp, #-16]
   12198:	mov	r3, #0
   1219c:	strh	r3, [fp, #-6]
   121a0:	b	121d0 <__assert_fail@plt+0x16b8>
   121a4:	ldrsh	r3, [fp, #-6]
   121a8:	lsl	r3, r3, #4
   121ac:	ldr	r2, [fp, #-16]
   121b0:	add	r3, r2, r3
   121b4:	mov	r0, r3
   121b8:	bl	11a70 <__assert_fail@plt+0xf58>
   121bc:	ldrsh	r3, [fp, #-6]
   121c0:	uxth	r3, r3
   121c4:	add	r3, r3, #1
   121c8:	uxth	r3, r3
   121cc:	strh	r3, [fp, #-6]
   121d0:	ldrsh	r3, [fp, #-6]
   121d4:	movw	r2, #502	; 0x1f6
   121d8:	cmp	r3, r2
   121dc:	ble	121a4 <__assert_fail@plt+0x168c>
   121e0:	ldr	r3, [fp, #-16]
   121e4:	add	r3, r3, #4096	; 0x1000
   121e8:	mov	r2, r3
   121ec:	mov	r3, #0
   121f0:	str	r3, [r2, #3952]	; 0xf70
   121f4:	ldr	r3, [fp, #-16]
   121f8:	add	r3, r3, #4096	; 0x1000
   121fc:	mov	r2, r3
   12200:	mov	r3, #0
   12204:	str	r3, [r2, #3956]	; 0xf74
   12208:	nop	{0}
   1220c:	sub	sp, fp, #4
   12210:	ldr	fp, [sp]
   12214:	add	sp, sp, #4
   12218:	pop	{pc}		; (ldr pc, [sp], #4)
   1221c:	push	{fp}		; (str fp, [sp, #-4]!)
   12220:	add	fp, sp, #0
   12224:	sub	sp, sp, #28
   12228:	str	r0, [fp, #-24]	; 0xffffffe8
   1222c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12230:	str	r3, [fp, #-16]
   12234:	mov	r3, #0
   12238:	str	r3, [fp, #-12]
   1223c:	mov	r3, #0
   12240:	str	r3, [fp, #-8]
   12244:	b	12274 <__assert_fail@plt+0x175c>
   12248:	ldr	r3, [fp, #-8]
   1224c:	ldr	r2, [fp, #-16]
   12250:	add	r3, r2, r3
   12254:	ldrb	r3, [r3]
   12258:	mov	r2, r3
   1225c:	ldr	r3, [fp, #-12]
   12260:	add	r3, r3, r2
   12264:	str	r3, [fp, #-12]
   12268:	ldr	r3, [fp, #-8]
   1226c:	add	r3, r3, #1
   12270:	str	r3, [fp, #-8]
   12274:	ldr	r3, [fp, #-8]
   12278:	ldr	r2, [fp, #-16]
   1227c:	add	r3, r2, r3
   12280:	ldrb	r3, [r3]
   12284:	cmp	r3, #0
   12288:	bne	12248 <__assert_fail@plt+0x1730>
   1228c:	ldr	r3, [fp, #-12]
   12290:	movw	r2, #20065	; 0x4e61
   12294:	movt	r2, #33354	; 0x824a
   12298:	smull	r1, r2, r2, r3
   1229c:	add	r2, r2, r3
   122a0:	asr	r1, r2, #8
   122a4:	asr	r2, r3, #31
   122a8:	sub	r2, r1, r2
   122ac:	movw	r1, #503	; 0x1f7
   122b0:	mul	r2, r1, r2
   122b4:	sub	r2, r3, r2
   122b8:	sxth	r3, r2
   122bc:	mov	r0, r3
   122c0:	add	sp, fp, #0
   122c4:	pop	{fp}		; (ldr fp, [sp], #4)
   122c8:	bx	lr
   122cc:	str	fp, [sp, #-8]!
   122d0:	str	lr, [sp, #4]
   122d4:	add	fp, sp, #4
   122d8:	sub	sp, sp, #16
   122dc:	str	r0, [fp, #-16]
   122e0:	str	r1, [fp, #-20]	; 0xffffffec
   122e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   122e8:	bl	1221c <__assert_fail@plt+0x1704>
   122ec:	mov	r3, r0
   122f0:	mov	r2, r3
   122f4:	ldr	r3, [fp, #-16]
   122f8:	ldr	r3, [r3, r2, lsl #4]
   122fc:	str	r3, [fp, #-8]
   12300:	b	12310 <__assert_fail@plt+0x17f8>
   12304:	ldr	r3, [fp, #-8]
   12308:	ldr	r3, [r3, #4]
   1230c:	str	r3, [fp, #-8]
   12310:	ldr	r3, [fp, #-8]
   12314:	cmp	r3, #0
   12318:	beq	1233c <__assert_fail@plt+0x1824>
   1231c:	ldr	r3, [fp, #-8]
   12320:	ldr	r3, [r3, #8]
   12324:	mov	r1, r3
   12328:	ldr	r0, [fp, #-20]	; 0xffffffec
   1232c:	bl	10980 <strcmp@plt>
   12330:	mov	r3, r0
   12334:	cmp	r3, #0
   12338:	bne	12304 <__assert_fail@plt+0x17ec>
   1233c:	ldr	r3, [fp, #-8]
   12340:	mov	r0, r3
   12344:	sub	sp, fp, #4
   12348:	ldr	fp, [sp]
   1234c:	add	sp, sp, #4
   12350:	pop	{pc}		; (ldr pc, [sp], #4)
   12354:	str	fp, [sp, #-8]!
   12358:	str	lr, [sp, #4]
   1235c:	add	fp, sp, #4
   12360:	sub	sp, sp, #8
   12364:	str	r0, [fp, #-8]
   12368:	ldr	r3, [fp, #-8]
   1236c:	add	r3, r3, #4096	; 0x1000
   12370:	ldr	r3, [r3, #3952]	; 0xf70
   12374:	cmp	r3, #0
   12378:	beq	123a4 <__assert_fail@plt+0x188c>
   1237c:	ldr	r3, [fp, #-8]
   12380:	add	r3, r3, #4096	; 0x1000
   12384:	ldr	r3, [r3, #3952]	; 0xf70
   12388:	mov	r0, r3
   1238c:	bl	10998 <free@plt>
   12390:	ldr	r3, [fp, #-8]
   12394:	add	r3, r3, #4096	; 0x1000
   12398:	mov	r2, r3
   1239c:	mov	r3, #0
   123a0:	str	r3, [r2, #3952]	; 0xf70
   123a4:	nop	{0}
   123a8:	sub	sp, fp, #4
   123ac:	ldr	fp, [sp]
   123b0:	add	sp, sp, #4
   123b4:	pop	{pc}		; (ldr pc, [sp], #4)
   123b8:	str	fp, [sp, #-8]!
   123bc:	str	lr, [sp, #4]
   123c0:	add	fp, sp, #4
   123c4:	sub	sp, sp, #8
   123c8:	str	r0, [fp, #-8]
   123cc:	str	r1, [fp, #-12]
   123d0:	ldr	r3, [fp, #-12]
   123d4:	ldr	r3, [r3, #8]
   123d8:	mov	r0, r3
   123dc:	bl	1221c <__assert_fail@plt+0x1704>
   123e0:	mov	r3, r0
   123e4:	lsl	r3, r3, #4
   123e8:	ldr	r2, [fp, #-8]
   123ec:	add	r3, r2, r3
   123f0:	ldr	r1, [fp, #-12]
   123f4:	mov	r0, r3
   123f8:	bl	11bd0 <__assert_fail@plt+0x10b8>
   123fc:	ldr	r0, [fp, #-8]
   12400:	bl	12354 <__assert_fail@plt+0x183c>
   12404:	ldr	r3, [fp, #-8]
   12408:	add	r3, r3, #4096	; 0x1000
   1240c:	ldr	r3, [r3, #3956]	; 0xf74
   12410:	add	r3, r3, #1
   12414:	ldr	r2, [fp, #-8]
   12418:	add	r2, r2, #4096	; 0x1000
   1241c:	str	r3, [r2, #3956]	; 0xf74
   12420:	nop	{0}
   12424:	sub	sp, fp, #4
   12428:	ldr	fp, [sp]
   1242c:	add	sp, sp, #4
   12430:	pop	{pc}		; (ldr pc, [sp], #4)
   12434:	str	fp, [sp, #-8]!
   12438:	str	lr, [sp, #4]
   1243c:	add	fp, sp, #4
   12440:	sub	sp, sp, #8
   12444:	str	r0, [fp, #-8]
   12448:	str	r1, [fp, #-12]
   1244c:	ldr	r3, [fp, #-12]
   12450:	ldr	r3, [r3, #8]
   12454:	mov	r0, r3
   12458:	bl	1221c <__assert_fail@plt+0x1704>
   1245c:	mov	r3, r0
   12460:	lsl	r3, r3, #4
   12464:	ldr	r2, [fp, #-8]
   12468:	add	r3, r2, r3
   1246c:	ldr	r1, [fp, #-12]
   12470:	mov	r0, r3
   12474:	bl	11ce8 <__assert_fail@plt+0x11d0>
   12478:	ldr	r0, [fp, #-8]
   1247c:	bl	12354 <__assert_fail@plt+0x183c>
   12480:	ldr	r3, [fp, #-8]
   12484:	add	r3, r3, #4096	; 0x1000
   12488:	ldr	r3, [r3, #3956]	; 0xf74
   1248c:	sub	r3, r3, #1
   12490:	ldr	r2, [fp, #-8]
   12494:	add	r2, r2, #4096	; 0x1000
   12498:	str	r3, [r2, #3956]	; 0xf74
   1249c:	nop	{0}
   124a0:	sub	sp, fp, #4
   124a4:	ldr	fp, [sp]
   124a8:	add	sp, sp, #4
   124ac:	pop	{pc}		; (ldr pc, [sp], #4)
   124b0:	str	fp, [sp, #-8]!
   124b4:	str	lr, [sp, #4]
   124b8:	add	fp, sp, #4
   124bc:	sub	sp, sp, #24
   124c0:	str	r0, [fp, #-24]	; 0xffffffe8
   124c4:	mov	r3, #0
   124c8:	str	r3, [fp, #-16]
   124cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124d0:	add	r3, r3, #4096	; 0x1000
   124d4:	ldr	r3, [r3, #3952]	; 0xf70
   124d8:	cmp	r3, #0
   124dc:	bne	1259c <__assert_fail@plt+0x1a84>
   124e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124e4:	add	r3, r3, #4096	; 0x1000
   124e8:	ldr	r3, [r3, #3956]	; 0xf74
   124ec:	cmp	r3, #0
   124f0:	beq	1259c <__assert_fail@plt+0x1a84>
   124f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124f8:	add	r3, r3, #4096	; 0x1000
   124fc:	ldr	r3, [r3, #3956]	; 0xf74
   12500:	mov	r1, #4
   12504:	mov	r0, r3
   12508:	bl	12644 <__assert_fail@plt+0x1b2c>
   1250c:	mov	r2, r0
   12510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12514:	add	r3, r3, #4096	; 0x1000
   12518:	str	r2, [r3, #3952]	; 0xf70
   1251c:	mov	r3, #0
   12520:	str	r3, [fp, #-12]
   12524:	b	12588 <__assert_fail@plt+0x1a70>
   12528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1252c:	ldr	r2, [fp, #-12]
   12530:	ldr	r3, [r3, r2, lsl #4]
   12534:	str	r3, [fp, #-8]
   12538:	b	12570 <__assert_fail@plt+0x1a58>
   1253c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12540:	add	r3, r3, #4096	; 0x1000
   12544:	ldr	r2, [r3, #3952]	; 0xf70
   12548:	ldr	r3, [fp, #-16]
   1254c:	add	r1, r3, #1
   12550:	str	r1, [fp, #-16]
   12554:	lsl	r3, r3, #2
   12558:	add	r3, r2, r3
   1255c:	ldr	r2, [fp, #-8]
   12560:	str	r2, [r3]
   12564:	ldr	r3, [fp, #-8]
   12568:	ldr	r3, [r3, #4]
   1256c:	str	r3, [fp, #-8]
   12570:	ldr	r3, [fp, #-8]
   12574:	cmp	r3, #0
   12578:	bne	1253c <__assert_fail@plt+0x1a24>
   1257c:	ldr	r3, [fp, #-12]
   12580:	add	r3, r3, #1
   12584:	str	r3, [fp, #-12]
   12588:	ldr	r3, [fp, #-12]
   1258c:	movw	r2, #502	; 0x1f6
   12590:	cmp	r3, r2
   12594:	ble	12528 <__assert_fail@plt+0x1a10>
   12598:	b	125a0 <__assert_fail@plt+0x1a88>
   1259c:	nop	{0}
   125a0:	sub	sp, fp, #4
   125a4:	ldr	fp, [sp]
   125a8:	add	sp, sp, #4
   125ac:	pop	{pc}		; (ldr pc, [sp], #4)
   125b0:	str	fp, [sp, #-8]!
   125b4:	str	lr, [sp, #4]
   125b8:	add	fp, sp, #4
   125bc:	sub	sp, sp, #16
   125c0:	str	r0, [fp, #-16]
   125c4:	str	r1, [fp, #-20]	; 0xffffffec
   125c8:	mov	r3, #0
   125cc:	strh	r3, [fp, #-6]
   125d0:	b	12604 <__assert_fail@plt+0x1aec>
   125d4:	ldrsh	r3, [fp, #-6]
   125d8:	lsl	r3, r3, #4
   125dc:	ldr	r2, [fp, #-16]
   125e0:	add	r3, r2, r3
   125e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   125e8:	mov	r0, r3
   125ec:	bl	11e7c <__assert_fail@plt+0x1364>
   125f0:	ldrsh	r3, [fp, #-6]
   125f4:	uxth	r3, r3
   125f8:	add	r3, r3, #1
   125fc:	uxth	r3, r3
   12600:	strh	r3, [fp, #-6]
   12604:	ldrsh	r3, [fp, #-6]
   12608:	movw	r2, #502	; 0x1f6
   1260c:	cmp	r3, r2
   12610:	ble	125d4 <__assert_fail@plt+0x1abc>
   12614:	ldr	r0, [fp, #-16]
   12618:	bl	12354 <__assert_fail@plt+0x183c>
   1261c:	ldr	r3, [fp, #-16]
   12620:	add	r3, r3, #4096	; 0x1000
   12624:	mov	r2, r3
   12628:	mov	r3, #0
   1262c:	str	r3, [r2, #3956]	; 0xf74
   12630:	nop	{0}
   12634:	sub	sp, fp, #4
   12638:	ldr	fp, [sp]
   1263c:	add	sp, sp, #4
   12640:	pop	{pc}		; (ldr pc, [sp], #4)
   12644:	str	fp, [sp, #-8]!
   12648:	str	lr, [sp, #4]
   1264c:	add	fp, sp, #4
   12650:	sub	sp, sp, #16
   12654:	str	r0, [fp, #-16]
   12658:	str	r1, [fp, #-20]	; 0xffffffec
   1265c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12660:	ldr	r0, [fp, #-16]
   12664:	bl	10974 <calloc@plt>
   12668:	mov	r3, r0
   1266c:	str	r3, [fp, #-8]
   12670:	ldr	r3, [fp, #-8]
   12674:	cmp	r3, #0
   12678:	bne	1268c <__assert_fail@plt+0x1b74>
   1267c:	ldr	r3, [pc, #32]	; 126a4 <__assert_fail@plt+0x1b8c>
   12680:	add	r3, pc, r3
   12684:	mov	r0, r3
   12688:	bl	13264 <error@@Base>
   1268c:	ldr	r3, [fp, #-8]
   12690:	mov	r0, r3
   12694:	sub	sp, fp, #4
   12698:	ldr	fp, [sp]
   1269c:	add	sp, sp, #4
   126a0:	pop	{pc}		; (ldr pc, [sp], #4)
   126a4:	andeq	r3, r0, r8, asr r8
   126a8:	push	{fp}		; (str fp, [sp, #-4]!)
   126ac:	add	fp, sp, #0
   126b0:	sub	sp, sp, #20
   126b4:	str	r0, [fp, #-16]
   126b8:	str	r1, [fp, #-20]	; 0xffffffec
   126bc:	mov	r3, #0
   126c0:	str	r3, [fp, #-8]
   126c4:	b	126d4 <__assert_fail@plt+0x1bbc>
   126c8:	ldr	r3, [fp, #-8]
   126cc:	add	r3, r3, #1
   126d0:	str	r3, [fp, #-8]
   126d4:	ldr	r3, [fp, #-8]
   126d8:	ldr	r2, [fp, #-16]
   126dc:	add	r3, r2, r3
   126e0:	ldrb	r3, [r3]
   126e4:	cmp	r3, #0
   126e8:	beq	12714 <__assert_fail@plt+0x1bfc>
   126ec:	ldr	r3, [fp, #-8]
   126f0:	ldr	r2, [fp, #-16]
   126f4:	add	r3, r2, r3
   126f8:	ldrb	r2, [r3]
   126fc:	ldr	r3, [fp, #-8]
   12700:	ldr	r1, [fp, #-20]	; 0xffffffec
   12704:	add	r3, r1, r3
   12708:	ldrb	r3, [r3]
   1270c:	cmp	r2, r3
   12710:	beq	126c8 <__assert_fail@plt+0x1bb0>
   12714:	ldr	r3, [fp, #-8]
   12718:	ldr	r2, [fp, #-16]
   1271c:	add	r3, r2, r3
   12720:	ldrb	r3, [r3]
   12724:	cmp	r3, #0
   12728:	bne	12744 <__assert_fail@plt+0x1c2c>
   1272c:	ldr	r3, [fp, #-8]
   12730:	ldr	r2, [fp, #-20]	; 0xffffffec
   12734:	add	r3, r2, r3
   12738:	ldrb	r3, [r3]
   1273c:	cmp	r3, #0
   12740:	beq	1277c <__assert_fail@plt+0x1c64>
   12744:	ldr	r3, [fp, #-8]
   12748:	ldr	r2, [fp, #-16]
   1274c:	add	r3, r2, r3
   12750:	ldrb	r2, [r3]
   12754:	ldr	r3, [fp, #-8]
   12758:	ldr	r1, [fp, #-20]	; 0xffffffec
   1275c:	add	r3, r1, r3
   12760:	ldrb	r3, [r3]
   12764:	cmp	r2, r3
   12768:	bcs	12774 <__assert_fail@plt+0x1c5c>
   1276c:	mvn	r3, #0
   12770:	b	12780 <__assert_fail@plt+0x1c68>
   12774:	mov	r3, #1
   12778:	b	12780 <__assert_fail@plt+0x1c68>
   1277c:	mov	r3, #0
   12780:	mov	r0, r3
   12784:	add	sp, fp, #0
   12788:	pop	{fp}		; (ldr fp, [sp], #4)
   1278c:	bx	lr
   12790:	str	fp, [sp, #-8]!
   12794:	str	lr, [sp, #4]
   12798:	add	fp, sp, #4
   1279c:	sub	sp, sp, #16
   127a0:	str	r0, [fp, #-16]
   127a4:	str	r1, [fp, #-20]	; 0xffffffec
   127a8:	ldr	r3, [pc, #172]	; 1285c <__assert_fail@plt+0x1d44>
   127ac:	add	r3, pc, r3
   127b0:	ldr	r2, [fp, #-16]
   127b4:	cmp	r2, #0
   127b8:	bne	127ec <__assert_fail@plt+0x1cd4>
   127bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   127c0:	ldrb	r2, [r2]
   127c4:	cmp	r2, #114	; 0x72
   127c8:	bne	127dc <__assert_fail@plt+0x1cc4>
   127cc:	ldr	r2, [pc, #140]	; 12860 <__assert_fail@plt+0x1d48>
   127d0:	ldr	r3, [r3, r2]
   127d4:	ldr	r3, [r3]
   127d8:	b	12848 <__assert_fail@plt+0x1d30>
   127dc:	ldr	r2, [pc, #128]	; 12864 <__assert_fail@plt+0x1d4c>
   127e0:	ldr	r3, [r3, r2]
   127e4:	ldr	r3, [r3]
   127e8:	b	12848 <__assert_fail@plt+0x1d30>
   127ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   127f0:	ldr	r0, [fp, #-16]
   127f4:	bl	1098c <fopen@plt>
   127f8:	str	r0, [fp, #-8]
   127fc:	ldr	r3, [fp, #-8]
   12800:	cmp	r3, #0
   12804:	beq	12810 <__assert_fail@plt+0x1cf8>
   12808:	ldr	r3, [fp, #-8]
   1280c:	b	12848 <__assert_fail@plt+0x1d30>
   12810:	ldr	r3, [fp, #-20]	; 0xffffffec
   12814:	ldrb	r3, [r3]
   12818:	cmp	r3, #119	; 0x77
   1281c:	bne	12834 <__assert_fail@plt+0x1d1c>
   12820:	ldr	r1, [fp, #-16]
   12824:	ldr	r3, [pc, #60]	; 12868 <__assert_fail@plt+0x1d50>
   12828:	add	r3, pc, r3
   1282c:	mov	r0, r3
   12830:	bl	132d4 <error@@Base+0x70>
   12834:	ldr	r1, [fp, #-16]
   12838:	ldr	r3, [pc, #44]	; 1286c <__assert_fail@plt+0x1d54>
   1283c:	add	r3, pc, r3
   12840:	mov	r0, r3
   12844:	bl	132d4 <error@@Base+0x70>
   12848:	mov	r0, r3
   1284c:	sub	sp, fp, #4
   12850:	ldr	fp, [sp]
   12854:	add	sp, sp, #4
   12858:	pop	{pc}		; (ldr pc, [sp], #4)
   1285c:	andeq	r7, r1, ip, asr #16
   12860:	andeq	r0, r0, r4, ror #1
   12864:	strdeq	r0, [r0], -r4
   12868:	andeq	r3, r0, ip, asr #13
   1286c:	ldrdeq	r3, [r0], -r0
   12870:	str	fp, [sp, #-8]!
   12874:	str	lr, [sp, #4]
   12878:	add	fp, sp, #4
   1287c:	sub	sp, sp, #8
   12880:	str	r0, [fp, #-8]
   12884:	ldr	r3, [pc, #76]	; 128d8 <__assert_fail@plt+0x1dc0>
   12888:	add	r3, pc, r3
   1288c:	ldr	r2, [pc, #72]	; 128dc <__assert_fail@plt+0x1dc4>
   12890:	ldr	r2, [r3, r2]
   12894:	ldr	r2, [r2]
   12898:	ldr	r1, [fp, #-8]
   1289c:	cmp	r1, r2
   128a0:	beq	128c4 <__assert_fail@plt+0x1dac>
   128a4:	ldr	r2, [pc, #52]	; 128e0 <__assert_fail@plt+0x1dc8>
   128a8:	ldr	r3, [r3, r2]
   128ac:	ldr	r3, [r3]
   128b0:	ldr	r2, [fp, #-8]
   128b4:	cmp	r2, r3
   128b8:	beq	128c4 <__assert_fail@plt+0x1dac>
   128bc:	ldr	r0, [fp, #-8]
   128c0:	bl	10aa0 <fclose@plt>
   128c4:	nop	{0}
   128c8:	sub	sp, fp, #4
   128cc:	ldr	fp, [sp]
   128d0:	add	sp, sp, #4
   128d4:	pop	{pc}		; (ldr pc, [sp], #4)
   128d8:	andeq	r7, r1, r0, ror r7
   128dc:	andeq	r0, r0, r4, ror #1
   128e0:	strdeq	r0, [r0], -r4
   128e4:	str	fp, [sp, #-8]!
   128e8:	str	lr, [sp, #4]
   128ec:	add	fp, sp, #4
   128f0:	sub	sp, sp, #96	; 0x60
   128f4:	str	r0, [fp, #-96]	; 0xffffffa0
   128f8:	sub	r3, fp, #92	; 0x5c
   128fc:	mov	r1, r3
   12900:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12904:	bl	15b60 <error@@Base+0x28fc>
   12908:	mov	r3, r0
   1290c:	cmp	r3, #0
   12910:	moveq	r3, #1
   12914:	movne	r3, #0
   12918:	uxtb	r3, r3
   1291c:	mov	r0, r3
   12920:	sub	sp, fp, #4
   12924:	ldr	fp, [sp]
   12928:	add	sp, sp, #4
   1292c:	pop	{pc}		; (ldr pc, [sp], #4)
   12930:	str	r4, [sp, #-12]!
   12934:	str	fp, [sp, #4]
   12938:	str	lr, [sp, #8]
   1293c:	add	fp, sp, #8
   12940:	sub	sp, sp, #124	; 0x7c
   12944:	mov	r3, r0
   12948:	strh	r3, [fp, #-120]	; 0xffffff88
   1294c:	ldr	r2, [pc, #92]	; 129b0 <__assert_fail@plt+0x1e98>
   12950:	add	r2, pc, r2
   12954:	ldr	r3, [pc, #88]	; 129b4 <__assert_fail@plt+0x1e9c>
   12958:	ldr	r3, [r2, r3]
   1295c:	ldr	r4, [r3]
   12960:	bl	10a58 <getpid@plt>
   12964:	mov	r2, r0
   12968:	ldrsh	r3, [fp, #-120]	; 0xffffff88
   1296c:	sub	r0, fp, #112	; 0x70
   12970:	str	r3, [sp]
   12974:	mov	r3, r2
   12978:	mov	r2, r4
   1297c:	ldr	r1, [pc, #52]	; 129b8 <__assert_fail@plt+0x1ea0>
   12980:	add	r1, pc, r1
   12984:	bl	10ac4 <sprintf@plt>
   12988:	sub	r3, fp, #112	; 0x70
   1298c:	mov	r0, r3
   12990:	bl	109c8 <strdup@plt>
   12994:	mov	r3, r0
   12998:	mov	r0, r3
   1299c:	sub	sp, fp, #8
   129a0:	ldr	r4, [sp]
   129a4:	ldr	fp, [sp, #4]
   129a8:	add	sp, sp, #8
   129ac:	pop	{pc}		; (ldr pc, [sp], #4)
   129b0:	andeq	r7, r1, r8, lsr #13
   129b4:	ldrdeq	r0, [r0], -r4
   129b8:	andeq	r3, r0, r0, lsr #11
   129bc:	str	fp, [sp, #-8]!
   129c0:	str	lr, [sp, #4]
   129c4:	add	fp, sp, #4
   129c8:	sub	sp, sp, #8
   129cc:	ldr	r3, [pc, #88]	; 12a2c <__assert_fail@plt+0x1f14>
   129d0:	add	r3, pc, r3
   129d4:	ldrsh	r3, [r3]
   129d8:	uxth	r3, r3
   129dc:	add	r3, r3, #1
   129e0:	uxth	r3, r3
   129e4:	sxth	r2, r3
   129e8:	ldr	r3, [pc, #64]	; 12a30 <__assert_fail@plt+0x1f18>
   129ec:	add	r3, pc, r3
   129f0:	strh	r2, [r3]
   129f4:	ldr	r3, [pc, #56]	; 12a34 <__assert_fail@plt+0x1f1c>
   129f8:	add	r3, pc, r3
   129fc:	ldrsh	r3, [r3]
   12a00:	mov	r0, r3
   12a04:	bl	12930 <__assert_fail@plt+0x1e18>
   12a08:	str	r0, [fp, #-8]
   12a0c:	ldr	r0, [fp, #-8]
   12a10:	bl	109e0 <unlink@plt>
   12a14:	ldr	r3, [fp, #-8]
   12a18:	mov	r0, r3
   12a1c:	sub	sp, fp, #4
   12a20:	ldr	fp, [sp]
   12a24:	add	sp, sp, #4
   12a28:	pop	{pc}		; (ldr pc, [sp], #4)
   12a2c:	andeq	r9, r1, r4, asr #17
   12a30:	andeq	r9, r1, r8, lsr #17
   12a34:	muleq	r1, ip, r8
   12a38:	str	fp, [sp, #-8]!
   12a3c:	str	lr, [sp, #4]
   12a40:	add	fp, sp, #4
   12a44:	sub	sp, sp, #8
   12a48:	mov	r3, #1
   12a4c:	strh	r3, [fp, #-6]
   12a50:	b	12a88 <__assert_fail@plt+0x1f70>
   12a54:	ldrsh	r3, [fp, #-6]
   12a58:	mov	r0, r3
   12a5c:	bl	12930 <__assert_fail@plt+0x1e18>
   12a60:	str	r0, [fp, #-12]
   12a64:	ldr	r0, [fp, #-12]
   12a68:	bl	109e0 <unlink@plt>
   12a6c:	ldr	r0, [fp, #-12]
   12a70:	bl	10998 <free@plt>
   12a74:	ldrsh	r3, [fp, #-6]
   12a78:	uxth	r3, r3
   12a7c:	add	r3, r3, #1
   12a80:	uxth	r3, r3
   12a84:	strh	r3, [fp, #-6]
   12a88:	ldr	r3, [pc, #36]	; 12ab4 <__assert_fail@plt+0x1f9c>
   12a8c:	add	r3, pc, r3
   12a90:	ldrsh	r3, [r3]
   12a94:	ldrsh	r2, [fp, #-6]
   12a98:	cmp	r2, r3
   12a9c:	ble	12a54 <__assert_fail@plt+0x1f3c>
   12aa0:	nop	{0}
   12aa4:	sub	sp, fp, #4
   12aa8:	ldr	fp, [sp]
   12aac:	add	sp, sp, #4
   12ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ab4:	andeq	r9, r1, r8, lsl #16
   12ab8:	str	fp, [sp, #-8]!
   12abc:	str	lr, [sp, #4]
   12ac0:	add	fp, sp, #4
   12ac4:	sub	sp, sp, #16
   12ac8:	str	r0, [fp, #-16]
   12acc:	mov	r3, #47	; 0x2f
   12ad0:	strb	r3, [fp, #-7]
   12ad4:	ldr	r0, [fp, #-16]
   12ad8:	bl	10a7c <strlen@plt>
   12adc:	mov	r3, r0
   12ae0:	uxth	r3, r3
   12ae4:	sub	r3, r3, #1
   12ae8:	uxth	r3, r3
   12aec:	strh	r3, [fp, #-6]
   12af0:	b	12b08 <__assert_fail@plt+0x1ff0>
   12af4:	ldrsh	r3, [fp, #-6]
   12af8:	uxth	r3, r3
   12afc:	sub	r3, r3, #1
   12b00:	uxth	r3, r3
   12b04:	strh	r3, [fp, #-6]
   12b08:	ldrsh	r3, [fp, #-6]
   12b0c:	cmp	r3, #0
   12b10:	blt	12b30 <__assert_fail@plt+0x2018>
   12b14:	ldrsh	r3, [fp, #-6]
   12b18:	ldr	r2, [fp, #-16]
   12b1c:	add	r3, r2, r3
   12b20:	ldrb	r3, [r3]
   12b24:	ldrb	r2, [fp, #-7]
   12b28:	cmp	r2, r3
   12b2c:	bne	12af4 <__assert_fail@plt+0x1fdc>
   12b30:	ldrsh	r3, [fp, #-6]
   12b34:	add	r3, r3, #1
   12b38:	ldr	r2, [fp, #-16]
   12b3c:	add	r3, r2, r3
   12b40:	mov	r0, r3
   12b44:	sub	sp, fp, #4
   12b48:	ldr	fp, [sp]
   12b4c:	add	sp, sp, #4
   12b50:	pop	{pc}		; (ldr pc, [sp], #4)
   12b54:	str	fp, [sp, #-8]!
   12b58:	str	lr, [sp, #4]
   12b5c:	add	fp, sp, #4
   12b60:	sub	sp, sp, #8
   12b64:	str	r0, [fp, #-8]
   12b68:	ldr	r3, [pc, #64]	; 12bb0 <__assert_fail@plt+0x2098>
   12b6c:	add	r3, pc, r3
   12b70:	ldrb	r3, [r3]
   12b74:	cmp	r3, #0
   12b78:	bne	12b9c <__assert_fail@plt+0x2084>
   12b7c:	ldr	r3, [pc, #48]	; 12bb4 <__assert_fail@plt+0x209c>
   12b80:	add	r3, pc, r3
   12b84:	mov	r2, #1
   12b88:	strb	r2, [r3]
   12b8c:	ldr	r3, [pc, #36]	; 12bb8 <__assert_fail@plt+0x20a0>
   12b90:	add	r3, pc, r3
   12b94:	mov	r0, r3
   12b98:	bl	13264 <error@@Base>
   12b9c:	nop	{0}
   12ba0:	sub	sp, fp, #4
   12ba4:	ldr	fp, [sp]
   12ba8:	add	sp, sp, #4
   12bac:	pop	{pc}		; (ldr pc, [sp], #4)
   12bb0:	andeq	r9, r1, sl, lsr #14
   12bb4:	andeq	r9, r1, r6, lsl r7
   12bb8:	andeq	r3, r0, r0, lsr #7
   12bbc:	str	fp, [sp, #-8]!
   12bc0:	str	lr, [sp, #4]
   12bc4:	add	fp, sp, #4
   12bc8:	ldr	r3, [pc, #52]	; 12c04 <__assert_fail@plt+0x20ec>
   12bcc:	add	r3, pc, r3
   12bd0:	mov	r1, r3
   12bd4:	mov	r0, #2
   12bd8:	bl	10a40 <__sysv_signal@plt>
   12bdc:	ldr	r3, [pc, #36]	; 12c08 <__assert_fail@plt+0x20f0>
   12be0:	add	r3, pc, r3
   12be4:	mov	r1, r3
   12be8:	mov	r0, #15
   12bec:	bl	10a40 <__sysv_signal@plt>
   12bf0:	nop	{0}
   12bf4:	sub	sp, fp, #4
   12bf8:	ldr	fp, [sp]
   12bfc:	add	sp, sp, #4
   12c00:	pop	{pc}		; (ldr pc, [sp], #4)
   12c04:			; <UNDEFINED> instruction: 0xffffff80
   12c08:			; <UNDEFINED> instruction: 0xffffff6c
   12c0c:	str	fp, [sp, #-8]!
   12c10:	str	lr, [sp, #4]
   12c14:	add	fp, sp, #4
   12c18:	sub	sp, sp, #8
   12c1c:	str	r0, [fp, #-8]
   12c20:	ldr	r3, [pc, #84]	; 12c7c <__assert_fail@plt+0x2164>
   12c24:	add	r3, pc, r3
   12c28:	ldr	r2, [pc, #80]	; 12c80 <__assert_fail@plt+0x2168>
   12c2c:	ldr	r2, [r3, r2]
   12c30:	ldr	r2, [r2]
   12c34:	cmp	r2, #0
   12c38:	beq	12c50 <__assert_fail@plt+0x2138>
   12c3c:	ldr	r2, [pc, #60]	; 12c80 <__assert_fail@plt+0x2168>
   12c40:	ldr	r3, [r3, r2]
   12c44:	ldr	r3, [r3]
   12c48:	blx	r3
   12c4c:	b	12c78 <__assert_fail@plt+0x2160>
   12c50:	ldr	r2, [pc, #44]	; 12c84 <__assert_fail@plt+0x216c>
   12c54:	ldr	r2, [r3, r2]
   12c58:	ldr	r0, [r2]
   12c5c:	ldr	r2, [pc, #36]	; 12c88 <__assert_fail@plt+0x2170>
   12c60:	ldr	r3, [r3, r2]
   12c64:	ldr	r2, [r3]
   12c68:	ldr	r3, [fp, #-8]
   12c6c:	ldr	r1, [pc, #24]	; 12c8c <__assert_fail@plt+0x2174>
   12c70:	add	r1, pc, r1
   12c74:	bl	10a88 <fprintf@plt>
   12c78:	bl	13250 <__assert_fail@plt+0x2738>
   12c7c:	ldrdeq	r7, [r1], -r4
   12c80:	strheq	r0, [r0], -r4
   12c84:	andeq	r0, r0, r0, asr #1
   12c88:	ldrdeq	r0, [r0], -r4
   12c8c:	ldrdeq	r3, [r0], -r0
   12c90:	str	fp, [sp, #-8]!
   12c94:	str	lr, [sp, #4]
   12c98:	add	fp, sp, #4
   12c9c:	sub	sp, sp, #24
   12ca0:	str	r0, [fp, #-16]
   12ca4:	str	r1, [fp, #-20]	; 0xffffffec
   12ca8:	str	r2, [fp, #-24]	; 0xffffffe8
   12cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cb0:	cmp	r3, #0
   12cb4:	beq	12ef4 <__assert_fail@plt+0x23dc>
   12cb8:	mov	r3, #0
   12cbc:	strh	r3, [fp, #-6]
   12cc0:	b	12cd8 <__assert_fail@plt+0x21c0>
   12cc4:	ldrsh	r3, [fp, #-6]
   12cc8:	uxth	r3, r3
   12ccc:	add	r3, r3, #1
   12cd0:	uxth	r3, r3
   12cd4:	strh	r3, [fp, #-6]
   12cd8:	ldrsh	r2, [fp, #-6]
   12cdc:	mov	r3, r2
   12ce0:	lsl	r3, r3, #1
   12ce4:	add	r3, r3, r2
   12ce8:	lsl	r3, r3, #2
   12cec:	mov	r2, r3
   12cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cf4:	add	r3, r3, r2
   12cf8:	ldrb	r3, [r3]
   12cfc:	cmp	r3, #0
   12d00:	beq	12d3c <__assert_fail@plt+0x2224>
   12d04:	ldr	r3, [fp, #-16]
   12d08:	add	r3, r3, #1
   12d0c:	ldrb	r1, [r3]
   12d10:	ldrsh	r2, [fp, #-6]
   12d14:	mov	r3, r2
   12d18:	lsl	r3, r3, #1
   12d1c:	add	r3, r3, r2
   12d20:	lsl	r3, r3, #2
   12d24:	mov	r2, r3
   12d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d2c:	add	r3, r3, r2
   12d30:	ldrb	r3, [r3]
   12d34:	cmp	r1, r3
   12d38:	bne	12cc4 <__assert_fail@plt+0x21ac>
   12d3c:	ldrsh	r2, [fp, #-6]
   12d40:	mov	r3, r2
   12d44:	lsl	r3, r3, #1
   12d48:	add	r3, r3, r2
   12d4c:	lsl	r3, r3, #2
   12d50:	mov	r2, r3
   12d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d58:	add	r3, r3, r2
   12d5c:	ldrb	r3, [r3]
   12d60:	cmp	r3, #0
   12d64:	beq	12efc <__assert_fail@plt+0x23e4>
   12d68:	ldrsh	r2, [fp, #-6]
   12d6c:	mov	r3, r2
   12d70:	lsl	r3, r3, #1
   12d74:	add	r3, r3, r2
   12d78:	lsl	r3, r3, #2
   12d7c:	mov	r2, r3
   12d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d84:	add	r3, r3, r2
   12d88:	ldr	r3, [r3, #4]
   12d8c:	cmp	r3, #0
   12d90:	beq	12e50 <__assert_fail@plt+0x2338>
   12d94:	ldr	r3, [fp, #-16]
   12d98:	add	r3, r3, #2
   12d9c:	ldrb	r3, [r3]
   12da0:	cmp	r3, #0
   12da4:	bne	12db4 <__assert_fail@plt+0x229c>
   12da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12dac:	cmp	r3, #0
   12db0:	beq	12e50 <__assert_fail@plt+0x2338>
   12db4:	ldrsh	r2, [fp, #-6]
   12db8:	mov	r3, r2
   12dbc:	lsl	r3, r3, #1
   12dc0:	add	r3, r3, r2
   12dc4:	lsl	r3, r3, #2
   12dc8:	mov	r2, r3
   12dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12dd0:	add	r3, r3, r2
   12dd4:	ldr	r3, [r3, #4]
   12dd8:	ldr	r3, [r3]
   12ddc:	cmp	r3, #0
   12de0:	bne	12f1c <__assert_fail@plt+0x2404>
   12de4:	ldr	r3, [fp, #-16]
   12de8:	add	r3, r3, #2
   12dec:	ldrb	r3, [r3]
   12df0:	cmp	r3, #0
   12df4:	beq	12e04 <__assert_fail@plt+0x22ec>
   12df8:	ldr	r3, [fp, #-16]
   12dfc:	add	r2, r3, #2
   12e00:	b	12e08 <__assert_fail@plt+0x22f0>
   12e04:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e08:	ldrsh	r1, [fp, #-6]
   12e0c:	mov	r3, r1
   12e10:	lsl	r3, r3, #1
   12e14:	add	r3, r3, r1
   12e18:	lsl	r3, r3, #2
   12e1c:	mov	r1, r3
   12e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e24:	add	r3, r3, r1
   12e28:	ldr	r3, [r3, #4]
   12e2c:	str	r2, [r3]
   12e30:	ldr	r3, [fp, #-16]
   12e34:	add	r3, r3, #2
   12e38:	ldrb	r3, [r3]
   12e3c:	cmp	r3, #0
   12e40:	moveq	r3, #1
   12e44:	movne	r3, #0
   12e48:	uxtb	r3, r3
   12e4c:	b	12f3c <__assert_fail@plt+0x2424>
   12e50:	ldrsh	r2, [fp, #-6]
   12e54:	mov	r3, r2
   12e58:	lsl	r3, r3, #1
   12e5c:	add	r3, r3, r2
   12e60:	lsl	r3, r3, #2
   12e64:	mov	r2, r3
   12e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e6c:	add	r3, r3, r2
   12e70:	ldr	r3, [r3, #8]
   12e74:	cmp	r3, #0
   12e78:	beq	12f04 <__assert_fail@plt+0x23ec>
   12e7c:	ldr	r3, [fp, #-16]
   12e80:	add	r3, r3, #2
   12e84:	ldrb	r3, [r3]
   12e88:	cmp	r3, #0
   12e8c:	bne	12f04 <__assert_fail@plt+0x23ec>
   12e90:	ldrsh	r2, [fp, #-6]
   12e94:	mov	r3, r2
   12e98:	lsl	r3, r3, #1
   12e9c:	add	r3, r3, r2
   12ea0:	lsl	r3, r3, #2
   12ea4:	mov	r2, r3
   12ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12eac:	add	r3, r3, r2
   12eb0:	ldr	r3, [r3, #8]
   12eb4:	ldrb	r3, [r3]
   12eb8:	cmp	r3, #0
   12ebc:	bne	12f24 <__assert_fail@plt+0x240c>
   12ec0:	ldrsh	r2, [fp, #-6]
   12ec4:	mov	r3, r2
   12ec8:	lsl	r3, r3, #1
   12ecc:	add	r3, r3, r2
   12ed0:	lsl	r3, r3, #2
   12ed4:	mov	r2, r3
   12ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12edc:	add	r3, r3, r2
   12ee0:	ldr	r3, [r3, #8]
   12ee4:	mov	r2, #1
   12ee8:	strb	r2, [r3]
   12eec:	mov	r3, #0
   12ef0:	b	12f3c <__assert_fail@plt+0x2424>
   12ef4:	nop	{0}
   12ef8:	b	12f08 <__assert_fail@plt+0x23f0>
   12efc:	nop	{0}
   12f00:	b	12f08 <__assert_fail@plt+0x23f0>
   12f04:	nop	{0}
   12f08:	ldr	r1, [fp, #-16]
   12f0c:	ldr	r3, [pc, #60]	; 12f50 <__assert_fail@plt+0x2438>
   12f10:	add	r3, pc, r3
   12f14:	mov	r0, r3
   12f18:	bl	132d4 <error@@Base+0x70>
   12f1c:	nop	{0}
   12f20:	b	12f28 <__assert_fail@plt+0x2410>
   12f24:	nop	{0}
   12f28:	ldr	r1, [fp, #-16]
   12f2c:	ldr	r3, [pc, #32]	; 12f54 <__assert_fail@plt+0x243c>
   12f30:	add	r3, pc, r3
   12f34:	mov	r0, r3
   12f38:	bl	132d4 <error@@Base+0x70>
   12f3c:	mov	r0, r3
   12f40:	sub	sp, fp, #4
   12f44:	ldr	fp, [sp]
   12f48:	add	sp, sp, #4
   12f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f50:	andeq	r3, r0, r0, asr #32
   12f54:	andeq	r3, r0, r0, lsr r0
   12f58:	str	r4, [sp, #-12]!
   12f5c:	str	fp, [sp, #4]
   12f60:	str	lr, [sp, #8]
   12f64:	add	fp, sp, #8
   12f68:	sub	sp, sp, #28
   12f6c:	str	r0, [fp, #-24]	; 0xffffffe8
   12f70:	str	r1, [fp, #-28]	; 0xffffffe4
   12f74:	str	r2, [fp, #-32]	; 0xffffffe0
   12f78:	str	r3, [fp, #-36]	; 0xffffffdc
   12f7c:	ldr	r2, [pc, #488]	; 1316c <__assert_fail@plt+0x2654>
   12f80:	add	r2, pc, r2
   12f84:	mov	r3, #0
   12f88:	strh	r3, [fp, #-16]
   12f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f90:	ldr	r3, [r3]
   12f94:	cmp	r3, #1
   12f98:	bne	12fb8 <__assert_fail@plt+0x24a0>
   12f9c:	ldr	r3, [pc, #460]	; 13170 <__assert_fail@plt+0x2658>
   12fa0:	ldr	r3, [r2, r3]
   12fa4:	ldrb	r3, [r3]
   12fa8:	cmp	r3, #0
   12fac:	beq	12fb8 <__assert_fail@plt+0x24a0>
   12fb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fb4:	bl	12c0c <__assert_fail@plt+0x20f4>
   12fb8:	mov	r3, #1
   12fbc:	strh	r3, [fp, #-14]
   12fc0:	b	13134 <__assert_fail@plt+0x261c>
   12fc4:	ldrsh	r3, [fp, #-14]
   12fc8:	lsl	r3, r3, #2
   12fcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12fd0:	add	r3, r2, r3
   12fd4:	ldr	r3, [r3]
   12fd8:	ldrb	r3, [r3]
   12fdc:	cmp	r3, #45	; 0x2d
   12fe0:	bne	130e4 <__assert_fail@plt+0x25cc>
   12fe4:	ldrsh	r3, [fp, #-14]
   12fe8:	lsl	r3, r3, #2
   12fec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ff0:	add	r3, r2, r3
   12ff4:	ldr	r3, [r3]
   12ff8:	add	r3, r3, #1
   12ffc:	ldrb	r3, [r3]
   13000:	cmp	r3, #0
   13004:	beq	130e4 <__assert_fail@plt+0x25cc>
   13008:	ldrsh	r3, [fp, #-14]
   1300c:	lsl	r3, r3, #2
   13010:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13014:	add	r3, r2, r3
   13018:	ldr	r4, [r3]
   1301c:	ldrsh	r3, [fp, #-14]
   13020:	lsl	r3, r3, #2
   13024:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13028:	add	r3, r2, r3
   1302c:	ldr	r3, [r3]
   13030:	mov	r0, r3
   13034:	bl	10a7c <strlen@plt>
   13038:	mov	r3, r0
   1303c:	mov	r2, r3
   13040:	mov	r1, r4
   13044:	ldr	r3, [pc, #296]	; 13174 <__assert_fail@plt+0x265c>
   13048:	add	r3, pc, r3
   1304c:	mov	r0, r3
   13050:	bl	10af4 <strncmp@plt>
   13054:	mov	r3, r0
   13058:	cmp	r3, #0
   1305c:	bne	13068 <__assert_fail@plt+0x2550>
   13060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13064:	bl	12c0c <__assert_fail@plt+0x20f4>
   13068:	ldrsh	r3, [fp, #-14]
   1306c:	lsl	r3, r3, #2
   13070:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13074:	add	r3, r2, r3
   13078:	ldr	r0, [r3]
   1307c:	ldrsh	r3, [fp, #-14]
   13080:	add	r2, r3, #1
   13084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13088:	ldr	r3, [r3]
   1308c:	cmp	r2, r3
   13090:	bge	130b0 <__assert_fail@plt+0x2598>
   13094:	ldrsh	r3, [fp, #-14]
   13098:	add	r3, r3, #1
   1309c:	lsl	r3, r3, #2
   130a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   130a4:	add	r3, r2, r3
   130a8:	ldr	r3, [r3]
   130ac:	b	130b4 <__assert_fail@plt+0x259c>
   130b0:	mov	r3, #0
   130b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   130b8:	mov	r1, r3
   130bc:	bl	12c90 <__assert_fail@plt+0x2178>
   130c0:	mov	r3, r0
   130c4:	cmp	r3, #0
   130c8:	beq	13120 <__assert_fail@plt+0x2608>
   130cc:	ldrsh	r3, [fp, #-14]
   130d0:	uxth	r3, r3
   130d4:	add	r3, r3, #1
   130d8:	uxth	r3, r3
   130dc:	strh	r3, [fp, #-14]
   130e0:	b	13120 <__assert_fail@plt+0x2608>
   130e4:	ldrsh	r3, [fp, #-14]
   130e8:	lsl	r3, r3, #2
   130ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   130f0:	add	r2, r2, r3
   130f4:	ldrsh	r1, [fp, #-16]
   130f8:	uxth	r3, r1
   130fc:	add	r3, r3, #1
   13100:	uxth	r3, r3
   13104:	strh	r3, [fp, #-16]
   13108:	mov	r3, r1
   1310c:	lsl	r3, r3, #2
   13110:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13114:	add	r3, r1, r3
   13118:	ldr	r2, [r2]
   1311c:	str	r2, [r3]
   13120:	ldrsh	r3, [fp, #-14]
   13124:	uxth	r3, r3
   13128:	add	r3, r3, #1
   1312c:	uxth	r3, r3
   13130:	strh	r3, [fp, #-14]
   13134:	ldrsh	r2, [fp, #-14]
   13138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1313c:	ldr	r3, [r3]
   13140:	cmp	r2, r3
   13144:	blt	12fc4 <__assert_fail@plt+0x24ac>
   13148:	ldrsh	r2, [fp, #-16]
   1314c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13150:	str	r2, [r3]
   13154:	nop	{0}
   13158:	sub	sp, fp, #8
   1315c:	ldr	r4, [sp]
   13160:	ldr	fp, [sp, #4]
   13164:	add	sp, sp, #8
   13168:	pop	{pc}		; (ldr pc, [sp], #4)
   1316c:	andeq	r7, r1, r8, ror r0
   13170:	andeq	r0, r0, r0, lsr #1
   13174:	andeq	r2, r0, ip, lsr #30
   13178:	str	r4, [sp, #-12]!
   1317c:	str	fp, [sp, #4]
   13180:	str	lr, [sp, #8]
   13184:	add	fp, sp, #8
   13188:	sub	sp, sp, #20
   1318c:	str	r0, [fp, #-16]
   13190:	str	r1, [fp, #-20]	; 0xffffffec
   13194:	str	r2, [fp, #-24]	; 0xffffffe8
   13198:	str	r3, [fp, #-28]	; 0xffffffe4
   1319c:	ldr	r4, [pc, #80]	; 131f4 <__assert_fail@plt+0x26dc>
   131a0:	add	r4, pc, r4
   131a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131a8:	ldr	r3, [r3]
   131ac:	mov	r0, r3
   131b0:	bl	12ab8 <__assert_fail@plt+0x1fa0>
   131b4:	mov	r2, r0
   131b8:	ldr	r3, [pc, #56]	; 131f8 <__assert_fail@plt+0x26e0>
   131bc:	ldr	r3, [r4, r3]
   131c0:	str	r2, [r3]
   131c4:	bl	12bbc <__assert_fail@plt+0x20a4>
   131c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   131cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   131d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   131d4:	ldr	r0, [fp, #-16]
   131d8:	bl	12f58 <__assert_fail@plt+0x2440>
   131dc:	nop	{0}
   131e0:	sub	sp, fp, #8
   131e4:	ldr	r4, [sp]
   131e8:	ldr	fp, [sp, #4]
   131ec:	add	sp, sp, #8
   131f0:	pop	{pc}		; (ldr pc, [sp], #4)
   131f4:	andeq	r6, r1, r8, asr lr
   131f8:	ldrdeq	r0, [r0], -r4
   131fc:	str	fp, [sp, #-8]!
   13200:	str	lr, [sp, #4]
   13204:	add	fp, sp, #4
   13208:	sub	sp, sp, #8
   1320c:	str	r0, [fp, #-8]
   13210:	ldr	r3, [pc, #48]	; 13248 <__assert_fail@plt+0x2730>
   13214:	add	r3, pc, r3
   13218:	ldr	r2, [pc, #44]	; 1324c <__assert_fail@plt+0x2734>
   1321c:	ldr	r2, [r3, r2]
   13220:	ldr	r2, [r2]
   13224:	cmp	r2, #0
   13228:	beq	1323c <__assert_fail@plt+0x2724>
   1322c:	ldr	r2, [pc, #24]	; 1324c <__assert_fail@plt+0x2734>
   13230:	ldr	r3, [r3, r2]
   13234:	ldr	r3, [r3]
   13238:	blx	r3
   1323c:	bl	12a38 <__assert_fail@plt+0x1f20>
   13240:	ldr	r0, [fp, #-8]
   13244:	bl	10a64 <exit@plt>
   13248:	andeq	r6, r1, r4, ror #27
   1324c:	ldrdeq	r0, [r0], -ip
   13250:	str	fp, [sp, #-8]!
   13254:	str	lr, [sp, #4]
   13258:	add	fp, sp, #4
   1325c:	mov	r0, #0
   13260:	bl	131fc <__assert_fail@plt+0x26e4>

00013264 <error@@Base>:
   13264:	str	r4, [sp, #-12]!
   13268:	str	fp, [sp, #4]
   1326c:	str	lr, [sp, #8]
   13270:	add	fp, sp, #8
   13274:	sub	sp, sp, #12
   13278:	str	r0, [fp, #-16]
   1327c:	ldr	r4, [pc, #60]	; 132c0 <error@@Base+0x5c>
   13280:	add	r4, pc, r4
   13284:	ldr	r3, [pc, #56]	; 132c4 <error@@Base+0x60>
   13288:	ldr	r3, [r4, r3]
   1328c:	ldr	r0, [r3]
   13290:	ldr	r3, [pc, #48]	; 132c8 <error@@Base+0x64>
   13294:	ldr	r3, [r4, r3]
   13298:	ldr	r2, [r3]
   1329c:	ldr	r3, [fp, #-16]
   132a0:	ldr	r1, [pc, #36]	; 132cc <error@@Base+0x68>
   132a4:	add	r1, pc, r1
   132a8:	bl	10a88 <fprintf@plt>
   132ac:	ldr	r3, [pc, #28]	; 132d0 <error@@Base+0x6c>
   132b0:	ldr	r3, [r4, r3]
   132b4:	ldr	r3, [r3]
   132b8:	mov	r0, r3
   132bc:	bl	131fc <__assert_fail@plt+0x26e4>
   132c0:	andeq	r6, r1, r8, ror sp
   132c4:	andeq	r0, r0, r0, asr #1
   132c8:	ldrdeq	r0, [r0], -r4
   132cc:	ldrdeq	r2, [r0], -r8
   132d0:	strdeq	r0, [r0], -ip
   132d4:	str	r4, [sp, #-12]!
   132d8:	str	fp, [sp, #4]
   132dc:	str	lr, [sp, #8]
   132e0:	add	fp, sp, #8
   132e4:	sub	sp, sp, #20
   132e8:	str	r0, [fp, #-16]
   132ec:	str	r1, [fp, #-20]	; 0xffffffec
   132f0:	ldr	r4, [pc, #68]	; 1333c <error@@Base+0xd8>
   132f4:	add	r4, pc, r4
   132f8:	ldr	r3, [pc, #64]	; 13340 <error@@Base+0xdc>
   132fc:	ldr	r3, [r4, r3]
   13300:	ldr	r0, [r3]
   13304:	ldr	r3, [pc, #56]	; 13344 <error@@Base+0xe0>
   13308:	ldr	r3, [r4, r3]
   1330c:	ldr	r2, [r3]
   13310:	ldr	r3, [fp, #-20]	; 0xffffffec
   13314:	str	r3, [sp]
   13318:	ldr	r3, [fp, #-16]
   1331c:	ldr	r1, [pc, #36]	; 13348 <error@@Base+0xe4>
   13320:	add	r1, pc, r1
   13324:	bl	10a88 <fprintf@plt>
   13328:	ldr	r3, [pc, #28]	; 1334c <error@@Base+0xe8>
   1332c:	ldr	r3, [r4, r3]
   13330:	ldr	r3, [r3]
   13334:	mov	r0, r3
   13338:	bl	131fc <__assert_fail@plt+0x26e4>
   1333c:	andeq	r6, r1, r4, lsl #26
   13340:	andeq	r0, r0, r0, asr #1
   13344:	ldrdeq	r0, [r0], -r4
   13348:	andeq	r2, r0, r4, ror #24
   1334c:	strdeq	r0, [r0], -ip
   13350:	str	fp, [sp, #-8]!
   13354:	str	lr, [sp, #4]
   13358:	add	fp, sp, #4
   1335c:	sub	sp, sp, #16
   13360:	str	r0, [fp, #-8]
   13364:	str	r1, [fp, #-12]
   13368:	ldr	r3, [pc, #68]	; 133b4 <error@@Base+0x150>
   1336c:	add	r3, pc, r3
   13370:	ldr	r2, [pc, #64]	; 133b8 <error@@Base+0x154>
   13374:	ldr	r2, [r3, r2]
   13378:	ldr	r0, [r2]
   1337c:	ldr	r2, [pc, #56]	; 133bc <error@@Base+0x158>
   13380:	ldr	r3, [r3, r2]
   13384:	ldr	r2, [r3]
   13388:	ldr	r3, [fp, #-12]
   1338c:	str	r3, [sp]
   13390:	ldr	r3, [fp, #-8]
   13394:	ldr	r1, [pc, #36]	; 133c0 <error@@Base+0x15c>
   13398:	add	r1, pc, r1
   1339c:	bl	10a88 <fprintf@plt>
   133a0:	nop	{0}
   133a4:	sub	sp, fp, #4
   133a8:	ldr	fp, [sp]
   133ac:	add	sp, sp, #4
   133b0:	pop	{pc}		; (ldr pc, [sp], #4)
   133b4:	andeq	r6, r1, ip, lsl #25
   133b8:	andeq	r0, r0, r0, asr #1
   133bc:	ldrdeq	r0, [r0], -r4
   133c0:	andeq	r2, r0, ip, ror #23
   133c4:	andeq	r0, r0, r0
   133c8:	push	{fp}		; (str fp, [sp, #-4]!)
   133cc:	add	fp, sp, #0
   133d0:	sub	sp, sp, #20
   133d4:	str	r0, [fp, #-8]
   133d8:	str	r1, [fp, #-12]
   133dc:	str	r2, [fp, #-16]
   133e0:	ldr	r3, [fp, #-8]
   133e4:	ldr	r2, [r3]
   133e8:	ldr	r3, [fp, #-12]
   133ec:	add	r2, r2, r3
   133f0:	ldr	r3, [fp, #-8]
   133f4:	str	r2, [r3]
   133f8:	ldr	r3, [fp, #-8]
   133fc:	ldr	r2, [r3, #4]
   13400:	ldr	r3, [fp, #-16]
   13404:	add	r2, r2, r3
   13408:	ldr	r3, [fp, #-8]
   1340c:	str	r2, [r3, #4]
   13410:	nop	{0}
   13414:	add	sp, fp, #0
   13418:	pop	{fp}		; (ldr fp, [sp], #4)
   1341c:	bx	lr
   13420:	str	fp, [sp, #-8]!
   13424:	str	lr, [sp, #4]
   13428:	add	fp, sp, #4
   1342c:	sub	sp, sp, #24
   13430:	str	r0, [fp, #-16]
   13434:	str	r1, [fp, #-20]	; 0xffffffec
   13438:	str	r2, [fp, #-24]	; 0xffffffe8
   1343c:	str	r3, [fp, #-28]	; 0xffffffe4
   13440:	ldr	r1, [fp, #-20]	; 0xffffffec
   13444:	ldr	r0, [fp, #-16]
   13448:	bl	122cc <__assert_fail@plt+0x17b4>
   1344c:	str	r0, [fp, #-8]
   13450:	ldr	r3, [fp, #-8]
   13454:	cmp	r3, #0
   13458:	bne	13490 <error@@Base+0x22c>
   1345c:	mov	r1, #20
   13460:	mov	r0, #1
   13464:	bl	12644 <__assert_fail@plt+0x1b2c>
   13468:	str	r0, [fp, #-8]
   1346c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13470:	bl	109c8 <strdup@plt>
   13474:	mov	r3, r0
   13478:	mov	r2, r3
   1347c:	ldr	r3, [fp, #-8]
   13480:	str	r2, [r3, #8]
   13484:	ldr	r1, [fp, #-8]
   13488:	ldr	r0, [fp, #-16]
   1348c:	bl	123b8 <__assert_fail@plt+0x18a0>
   13490:	ldr	r3, [fp, #-8]
   13494:	add	r3, r3, #12
   13498:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1349c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134a0:	mov	r0, r3
   134a4:	bl	133c8 <error@@Base+0x164>
   134a8:	nop	{0}
   134ac:	sub	sp, fp, #4
   134b0:	ldr	fp, [sp]
   134b4:	add	sp, sp, #4
   134b8:	pop	{pc}		; (ldr pc, [sp], #4)
   134bc:	str	fp, [sp, #-8]!
   134c0:	str	lr, [sp, #4]
   134c4:	add	fp, sp, #4
   134c8:	sub	sp, sp, #8
   134cc:	str	r0, [fp, #-8]
   134d0:	ldr	r2, [fp, #-8]
   134d4:	mov	r1, #99	; 0x63
   134d8:	ldr	r3, [pc, #48]	; 13510 <error@@Base+0x2ac>
   134dc:	add	r3, pc, r3
   134e0:	mov	r0, r3
   134e4:	bl	109b0 <fgets@plt>
   134e8:	mov	r3, r0
   134ec:	cmp	r3, #0
   134f0:	movne	r3, #1
   134f4:	moveq	r3, #0
   134f8:	uxtb	r3, r3
   134fc:	mov	r0, r3
   13500:	sub	sp, fp, #4
   13504:	ldr	fp, [sp]
   13508:	add	sp, sp, #4
   1350c:	pop	{pc}		; (ldr pc, [sp], #4)
   13510:			; <UNDEFINED> instruction: 0x00018dbc
   13514:	str	fp, [sp, #-8]!
   13518:	str	lr, [sp, #4]
   1351c:	add	fp, sp, #4
   13520:	sub	sp, sp, #8
   13524:	str	r0, [fp, #-8]
   13528:	str	r1, [fp, #-12]
   1352c:	ldr	r0, [fp, #-8]
   13530:	bl	134bc <error@@Base+0x258>
   13534:	mov	r3, r0
   13538:	cmp	r3, #0
   1353c:	beq	13574 <error@@Base+0x310>
   13540:	ldr	r2, [fp, #-12]
   13544:	ldr	r3, [pc, #68]	; 13590 <error@@Base+0x32c>
   13548:	add	r3, pc, r3
   1354c:	mov	r1, r3
   13550:	ldr	r3, [pc, #60]	; 13594 <error@@Base+0x330>
   13554:	add	r3, pc, r3
   13558:	mov	r0, r3
   1355c:	bl	10a94 <__isoc99_sscanf@plt>
   13560:	mov	r3, r0
   13564:	cmp	r3, #1
   13568:	bne	13574 <error@@Base+0x310>
   1356c:	mov	r3, #1
   13570:	b	13578 <error@@Base+0x314>
   13574:	mov	r3, #0
   13578:	uxtb	r3, r3
   1357c:	mov	r0, r3
   13580:	sub	sp, fp, #4
   13584:	ldr	fp, [sp]
   13588:	add	sp, sp, #4
   1358c:	pop	{pc}		; (ldr pc, [sp], #4)
   13590:	andeq	r2, r0, ip, asr #20
   13594:	andeq	r8, r1, r4, asr #26
   13598:	str	fp, [sp, #-8]!
   1359c:	str	lr, [sp, #4]
   135a0:	add	fp, sp, #4
   135a4:	sub	sp, sp, #16
   135a8:	str	r0, [fp, #-8]
   135ac:	str	r1, [fp, #-12]
   135b0:	str	r2, [fp, #-16]
   135b4:	ldr	r0, [fp, #-8]
   135b8:	bl	134bc <error@@Base+0x258>
   135bc:	mov	r3, r0
   135c0:	cmp	r3, #0
   135c4:	beq	135f8 <error@@Base+0x394>
   135c8:	ldr	r3, [fp, #-16]
   135cc:	ldr	r2, [fp, #-12]
   135d0:	ldr	r1, [pc, #60]	; 13614 <error@@Base+0x3b0>
   135d4:	add	r1, pc, r1
   135d8:	ldr	r0, [pc, #56]	; 13618 <error@@Base+0x3b4>
   135dc:	add	r0, pc, r0
   135e0:	bl	10a94 <__isoc99_sscanf@plt>
   135e4:	mov	r3, r0
   135e8:	cmp	r3, #2
   135ec:	bne	135f8 <error@@Base+0x394>
   135f0:	mov	r3, #1
   135f4:	b	135fc <error@@Base+0x398>
   135f8:	mov	r3, #0
   135fc:	uxtb	r3, r3
   13600:	mov	r0, r3
   13604:	sub	sp, fp, #4
   13608:	ldr	fp, [sp]
   1360c:	add	sp, sp, #4
   13610:	pop	{pc}		; (ldr pc, [sp], #4)
   13614:	andeq	r2, r0, r4, asr #19
   13618:			; <UNDEFINED> instruction: 0x00018cbc
   1361c:	str	fp, [sp, #-8]!
   13620:	str	lr, [sp, #4]
   13624:	add	fp, sp, #4
   13628:	sub	sp, sp, #24
   1362c:	str	r0, [fp, #-24]	; 0xffffffe8
   13630:	str	r1, [fp, #-28]	; 0xffffffe4
   13634:	mov	r3, #0
   13638:	str	r3, [fp, #-12]
   1363c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13640:	bl	134bc <error@@Base+0x258>
   13644:	mov	r3, r0
   13648:	cmp	r3, #0
   1364c:	beq	13704 <error@@Base+0x4a0>
   13650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13654:	bl	134bc <error@@Base+0x258>
   13658:	mov	r3, r0
   1365c:	cmp	r3, #0
   13660:	beq	13704 <error@@Base+0x4a0>
   13664:	b	136e4 <error@@Base+0x480>
   13668:	ldr	r3, [pc, #172]	; 1371c <error@@Base+0x4b8>
   1366c:	add	r3, pc, r3
   13670:	add	r0, r3, #29
   13674:	bl	10ad0 <atoi@plt>
   13678:	str	r0, [fp, #-8]
   1367c:	ldr	r3, [fp, #-8]
   13680:	cmp	r3, #0
   13684:	bne	136c4 <error@@Base+0x460>
   13688:	ldr	r3, [pc, #144]	; 13720 <error@@Base+0x4bc>
   1368c:	add	r3, pc, r3
   13690:	mov	r1, r3
   13694:	ldr	r3, [pc, #136]	; 13724 <error@@Base+0x4c0>
   13698:	add	r3, pc, r3
   1369c:	add	r0, r3, #29
   136a0:	bl	10980 <strcmp@plt>
   136a4:	mov	r3, r0
   136a8:	cmp	r3, #0
   136ac:	bne	136bc <error@@Base+0x458>
   136b0:	ldr	r3, [fp, #-16]
   136b4:	str	r3, [fp, #-12]
   136b8:	b	136c4 <error@@Base+0x460>
   136bc:	mov	r3, #11
   136c0:	str	r3, [fp, #-8]
   136c4:	ldr	r3, [fp, #-8]
   136c8:	lsl	r3, r3, #3
   136cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   136d0:	add	r3, r2, r3
   136d4:	ldr	r1, [fp, #-16]
   136d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   136dc:	mov	r0, r3
   136e0:	bl	133c8 <error@@Base+0x164>
   136e4:	sub	r2, fp, #20
   136e8:	sub	r3, fp, #16
   136ec:	mov	r1, r3
   136f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136f4:	bl	13598 <error@@Base+0x334>
   136f8:	mov	r3, r0
   136fc:	cmp	r3, #0
   13700:	bne	13668 <error@@Base+0x404>
   13704:	ldr	r3, [fp, #-12]
   13708:	mov	r0, r3
   1370c:	sub	sp, fp, #4
   13710:	ldr	fp, [sp]
   13714:	add	sp, sp, #4
   13718:	pop	{pc}		; (ldr pc, [sp], #4)
   1371c:	andeq	r8, r1, ip, lsr #24
   13720:	andeq	r2, r0, r4, lsl r9
   13724:	andeq	r8, r1, r0, lsl #24
   13728:	str	fp, [sp, #-8]!
   1372c:	str	lr, [sp, #4]
   13730:	add	fp, sp, #4
   13734:	sub	sp, sp, #16
   13738:	str	r0, [fp, #-16]
   1373c:	str	r1, [fp, #-20]	; 0xffffffec
   13740:	ldr	r0, [fp, #-16]
   13744:	bl	134bc <error@@Base+0x258>
   13748:	mov	r3, r0
   1374c:	cmp	r3, #0
   13750:	beq	137d0 <error@@Base+0x56c>
   13754:	ldr	r0, [fp, #-16]
   13758:	bl	134bc <error@@Base+0x258>
   1375c:	mov	r3, r0
   13760:	cmp	r3, #0
   13764:	beq	137d0 <error@@Base+0x56c>
   13768:	b	137b0 <error@@Base+0x54c>
   1376c:	ldr	r3, [pc, #112]	; 137e4 <error@@Base+0x580>
   13770:	add	r3, pc, r3
   13774:	mov	r0, r3
   13778:	bl	10a7c <strlen@plt>
   1377c:	mov	r3, r0
   13780:	sub	r3, r3, #1
   13784:	ldr	r2, [pc, #92]	; 137e8 <error@@Base+0x584>
   13788:	add	r2, pc, r2
   1378c:	mov	r1, #0
   13790:	strb	r1, [r2, r3]
   13794:	ldr	r2, [fp, #-8]
   13798:	ldr	r3, [fp, #-12]
   1379c:	ldr	r1, [pc, #72]	; 137ec <error@@Base+0x588>
   137a0:	add	r1, pc, r1
   137a4:	add	r1, r1, #29
   137a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137ac:	bl	13420 <error@@Base+0x1bc>
   137b0:	sub	r2, fp, #12
   137b4:	sub	r3, fp, #8
   137b8:	mov	r1, r3
   137bc:	ldr	r0, [fp, #-16]
   137c0:	bl	13598 <error@@Base+0x334>
   137c4:	mov	r3, r0
   137c8:	cmp	r3, #0
   137cc:	bne	1376c <error@@Base+0x508>
   137d0:	nop	{0}
   137d4:	sub	sp, fp, #4
   137d8:	ldr	fp, [sp]
   137dc:	add	sp, sp, #4
   137e0:	pop	{pc}		; (ldr pc, [sp], #4)
   137e4:	andeq	r8, r1, r8, lsr #22
   137e8:	andeq	r8, r1, r0, lsl fp
   137ec:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   137f0:	str	fp, [sp, #-8]!
   137f4:	str	lr, [sp, #4]
   137f8:	add	fp, sp, #4
   137fc:	sub	sp, sp, #32
   13800:	str	r0, [fp, #-32]	; 0xffffffe0
   13804:	str	r1, [fp, #-36]	; 0xffffffdc
   13808:	ldr	r3, [pc, #508]	; 13a0c <error@@Base+0x7a8>
   1380c:	add	r3, pc, r3
   13810:	mov	r1, r3
   13814:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13818:	bl	12790 <__assert_fail@plt+0x1c78>
   1381c:	str	r0, [fp, #-8]
   13820:	ldr	r0, [fp, #-8]
   13824:	bl	134bc <error@@Base+0x258>
   13828:	mov	r3, r0
   1382c:	cmp	r3, #0
   13830:	beq	139bc <error@@Base+0x758>
   13834:	mov	r2, #45	; 0x2d
   13838:	ldr	r3, [pc, #464]	; 13a10 <error@@Base+0x7ac>
   1383c:	add	r3, pc, r3
   13840:	mov	r1, r3
   13844:	ldr	r3, [pc, #456]	; 13a14 <error@@Base+0x7b0>
   13848:	add	r3, pc, r3
   1384c:	mov	r0, r3
   13850:	bl	10af4 <strncmp@plt>
   13854:	mov	r3, r0
   13858:	cmp	r3, #0
   1385c:	bne	139bc <error@@Base+0x758>
   13860:	ldr	r0, [fp, #-8]
   13864:	bl	134bc <error@@Base+0x258>
   13868:	mov	r3, r0
   1386c:	cmp	r3, #0
   13870:	beq	139bc <error@@Base+0x758>
   13874:	ldr	r3, [pc, #412]	; 13a18 <error@@Base+0x7b4>
   13878:	add	r3, pc, r3
   1387c:	mov	r1, r3
   13880:	ldr	r3, [pc, #404]	; 13a1c <error@@Base+0x7b8>
   13884:	add	r3, pc, r3
   13888:	mov	r0, r3
   1388c:	bl	10980 <strcmp@plt>
   13890:	mov	r3, r0
   13894:	cmp	r3, #0
   13898:	bne	139bc <error@@Base+0x758>
   1389c:	sub	r3, fp, #20
   138a0:	mov	r1, r3
   138a4:	ldr	r0, [fp, #-8]
   138a8:	bl	13514 <error@@Base+0x2b0>
   138ac:	mov	r3, r0
   138b0:	cmp	r3, #0
   138b4:	beq	139bc <error@@Base+0x758>
   138b8:	sub	r3, fp, #24
   138bc:	mov	r1, r3
   138c0:	ldr	r0, [fp, #-8]
   138c4:	bl	13514 <error@@Base+0x2b0>
   138c8:	mov	r3, r0
   138cc:	cmp	r3, #0
   138d0:	beq	139bc <error@@Base+0x758>
   138d4:	ldr	r0, [fp, #-8]
   138d8:	bl	134bc <error@@Base+0x258>
   138dc:	mov	r3, r0
   138e0:	cmp	r3, #0
   138e4:	beq	139bc <error@@Base+0x758>
   138e8:	ldr	r0, [fp, #-8]
   138ec:	bl	134bc <error@@Base+0x258>
   138f0:	mov	r3, r0
   138f4:	cmp	r3, #0
   138f8:	beq	139bc <error@@Base+0x758>
   138fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13900:	ldr	r1, [fp, #-20]	; 0xffffffec
   13904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13908:	mov	r0, r3
   1390c:	bl	133c8 <error@@Base+0x164>
   13910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13914:	add	r3, r3, #8
   13918:	mov	r1, r3
   1391c:	ldr	r0, [fp, #-8]
   13920:	bl	1361c <error@@Base+0x3b8>
   13924:	str	r0, [fp, #-12]
   13928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1392c:	add	r3, r3, #416	; 0x1a0
   13930:	mov	r1, r3
   13934:	ldr	r0, [fp, #-8]
   13938:	bl	1361c <error@@Base+0x3b8>
   1393c:	str	r0, [fp, #-16]
   13940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13944:	add	r3, r3, #824	; 0x338
   13948:	mov	r1, r3
   1394c:	ldr	r0, [fp, #-8]
   13950:	bl	1361c <error@@Base+0x3b8>
   13954:	ldr	r3, [fp, #-20]	; 0xffffffec
   13958:	cmp	r3, #0
   1395c:	ble	139ec <error@@Base+0x788>
   13960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13964:	add	r3, r3, #920	; 0x398
   13968:	mov	r1, r3
   1396c:	ldr	r0, [fp, #-8]
   13970:	bl	1361c <error@@Base+0x3b8>
   13974:	ldr	r3, [fp, #-12]
   13978:	cmp	r3, #0
   1397c:	ble	13994 <error@@Base+0x730>
   13980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13984:	add	r3, r3, #992	; 0x3e0
   13988:	mov	r1, r3
   1398c:	ldr	r0, [fp, #-8]
   13990:	bl	13728 <error@@Base+0x4c4>
   13994:	ldr	r3, [fp, #-16]
   13998:	cmp	r3, #0
   1399c:	ble	139ec <error@@Base+0x788>
   139a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   139a4:	add	r3, r3, #9024	; 0x2340
   139a8:	add	r3, r3, #24
   139ac:	mov	r1, r3
   139b0:	ldr	r0, [fp, #-8]
   139b4:	bl	13728 <error@@Base+0x4c4>
   139b8:	b	139ec <error@@Base+0x788>
   139bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   139c0:	cmp	r3, #0
   139c4:	beq	139d0 <error@@Base+0x76c>
   139c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   139cc:	b	139d8 <error@@Base+0x774>
   139d0:	ldr	r3, [pc, #72]	; 13a20 <error@@Base+0x7bc>
   139d4:	add	r3, pc, r3
   139d8:	mov	r1, r3
   139dc:	ldr	r3, [pc, #64]	; 13a24 <error@@Base+0x7c0>
   139e0:	add	r3, pc, r3
   139e4:	mov	r0, r3
   139e8:	bl	132d4 <error@@Base+0x70>
   139ec:	nop	{0}
   139f0:	ldr	r0, [fp, #-8]
   139f4:	bl	12870 <__assert_fail@plt+0x1d58>
   139f8:	nop	{0}
   139fc:	sub	sp, fp, #4
   13a00:	ldr	fp, [sp]
   13a04:	add	sp, sp, #4
   13a08:	pop	{pc}		; (ldr pc, [sp], #4)
   13a0c:	muleq	r0, ip, r7
   13a10:	andeq	r2, r0, r0, ror r7
   13a14:	andeq	r8, r1, r0, asr sl
   13a18:	andeq	r2, r0, r4, ror #14
   13a1c:	andeq	r8, r1, r4, lsl sl
   13a20:	andeq	r2, r0, r8, lsr r6
   13a24:	andeq	r2, r0, r4, lsr r6
   13a28:	str	fp, [sp, #-8]!
   13a2c:	str	lr, [sp, #4]
   13a30:	add	fp, sp, #4
   13a34:	sub	sp, sp, #8
   13a38:	str	r0, [fp, #-8]
   13a3c:	str	r1, [fp, #-12]
   13a40:	ldr	r3, [fp, #-12]
   13a44:	ldr	r3, [r3]
   13a48:	cmp	r3, #0
   13a4c:	bne	13a6c <error@@Base+0x808>
   13a50:	ldr	r3, [fp, #-8]
   13a54:	mov	r2, #8
   13a58:	mov	r1, #1
   13a5c:	ldr	r0, [pc, #116]	; 13ad8 <error@@Base+0x874>
   13a60:	add	r0, pc, r0
   13a64:	bl	10a04 <fwrite@plt>
   13a68:	b	13ab8 <error@@Base+0x854>
   13a6c:	ldr	r3, [fp, #-12]
   13a70:	ldr	r2, [r3]
   13a74:	ldr	r3, [fp, #-12]
   13a78:	ldr	r3, [r3, #4]
   13a7c:	sub	r3, r2, r3
   13a80:	vmov	s15, r3
   13a84:	vcvt.f64.s32	d7, s15
   13a88:	vldr	d6, [pc, #64]	; 13ad0 <error@@Base+0x86c>
   13a8c:	vmul.f64	d6, d7, d6
   13a90:	ldr	r3, [fp, #-12]
   13a94:	ldr	r3, [r3]
   13a98:	vmov	s15, r3
   13a9c:	vcvt.f64.s32	d7, s15
   13aa0:	vdiv.f64	d5, d6, d7
   13aa4:	vmov	r2, r3, d5
   13aa8:	ldr	r1, [pc, #44]	; 13adc <error@@Base+0x878>
   13aac:	add	r1, pc, r1
   13ab0:	ldr	r0, [fp, #-8]
   13ab4:	bl	10a88 <fprintf@plt>
   13ab8:	nop	{0}
   13abc:	sub	sp, fp, #4
   13ac0:	ldr	fp, [sp]
   13ac4:	add	sp, sp, #4
   13ac8:	pop	{pc}		; (ldr pc, [sp], #4)
   13acc:	nop	{0}
   13ad0:	andeq	r0, r0, r0
   13ad4:	subsmi	r0, r9, r0
   13ad8:	andeq	r2, r0, r8, asr #11
   13adc:	andeq	r2, r0, r8, lsl #11
   13ae0:	str	fp, [sp, #-8]!
   13ae4:	str	lr, [sp, #4]
   13ae8:	add	fp, sp, #4
   13aec:	sub	sp, sp, #8
   13af0:	str	r0, [fp, #-8]
   13af4:	str	r1, [fp, #-12]
   13af8:	ldr	r3, [fp, #-12]
   13afc:	cmp	r3, #0
   13b00:	beq	13b34 <error@@Base+0x8d0>
   13b04:	ldr	r3, [fp, #-12]
   13b08:	ldr	r2, [r3]
   13b0c:	ldr	r3, [fp, #-12]
   13b10:	ldr	r3, [r3, #4]
   13b14:	ldr	r1, [pc, #92]	; 13b78 <error@@Base+0x914>
   13b18:	add	r1, pc, r1
   13b1c:	ldr	r0, [fp, #-8]
   13b20:	bl	10a88 <fprintf@plt>
   13b24:	ldr	r1, [fp, #-12]
   13b28:	ldr	r0, [fp, #-8]
   13b2c:	bl	13a28 <error@@Base+0x7c4>
   13b30:	b	13b4c <error@@Base+0x8e8>
   13b34:	ldr	r3, [fp, #-8]
   13b38:	mov	r2, #26
   13b3c:	mov	r1, #1
   13b40:	ldr	r0, [pc, #52]	; 13b7c <error@@Base+0x918>
   13b44:	add	r0, pc, r0
   13b48:	bl	10a04 <fwrite@plt>
   13b4c:	ldr	r3, [fp, #-8]
   13b50:	mov	r2, #3
   13b54:	mov	r1, #1
   13b58:	ldr	r0, [pc, #32]	; 13b80 <error@@Base+0x91c>
   13b5c:	add	r0, pc, r0
   13b60:	bl	10a04 <fwrite@plt>
   13b64:	nop	{0}
   13b68:	sub	sp, fp, #4
   13b6c:	ldr	fp, [sp]
   13b70:	add	sp, sp, #4
   13b74:	pop	{pc}		; (ldr pc, [sp], #4)
   13b78:	andeq	r2, r0, r4, lsr #10
   13b7c:	andeq	r2, r0, r4, lsl #10
   13b80:	andeq	r2, r0, r8, lsl #10
   13b84:	str	fp, [sp, #-8]!
   13b88:	str	lr, [sp, #4]
   13b8c:	add	fp, sp, #4
   13b90:	sub	sp, sp, #32
   13b94:	str	r0, [fp, #-16]
   13b98:	str	r1, [fp, #-20]	; 0xffffffec
   13b9c:	mov	r1, r2
   13ba0:	str	r3, [fp, #-28]	; 0xffffffe4
   13ba4:	ldr	r2, [fp, #4]
   13ba8:	ldr	r3, [fp, #8]
   13bac:	strh	r1, [fp, #-24]	; 0xffffffe8
   13bb0:	strb	r2, [fp, #-32]	; 0xffffffe0
   13bb4:	strb	r3, [fp, #-36]	; 0xffffffdc
   13bb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13bbc:	ldr	r3, [pc, #384]	; 13d44 <error@@Base+0xae0>
   13bc0:	add	r3, pc, r3
   13bc4:	mov	r1, r3
   13bc8:	ldr	r0, [fp, #-16]
   13bcc:	bl	10a88 <fprintf@plt>
   13bd0:	mov	r1, #0
   13bd4:	ldr	r0, [fp, #-16]
   13bd8:	bl	13ae0 <error@@Base+0x87c>
   13bdc:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   13be0:	cmp	r3, #0
   13be4:	beq	13bf4 <error@@Base+0x990>
   13be8:	ldr	r3, [pc, #344]	; 13d48 <error@@Base+0xae4>
   13bec:	add	r3, pc, r3
   13bf0:	b	13bfc <error@@Base+0x998>
   13bf4:	ldr	r3, [pc, #336]	; 13d4c <error@@Base+0xae8>
   13bf8:	add	r3, pc, r3
   13bfc:	mov	r2, r3
   13c00:	ldr	r3, [pc, #328]	; 13d50 <error@@Base+0xaec>
   13c04:	add	r3, pc, r3
   13c08:	mov	r1, r3
   13c0c:	ldr	r0, [fp, #-16]
   13c10:	bl	10a88 <fprintf@plt>
   13c14:	mov	r3, #1
   13c18:	strh	r3, [fp, #-6]
   13c1c:	b	13c88 <error@@Base+0xa24>
   13c20:	ldrsh	r3, [fp, #-6]
   13c24:	lsl	r3, r3, #3
   13c28:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c2c:	add	r3, r2, r3
   13c30:	ldr	r3, [r3]
   13c34:	cmp	r3, #0
   13c38:	ble	13c74 <error@@Base+0xa10>
   13c3c:	ldrsh	r3, [fp, #-6]
   13c40:	lsl	r3, r3, #3
   13c44:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c48:	add	r3, r2, r3
   13c4c:	mov	r1, r3
   13c50:	ldr	r0, [fp, #-16]
   13c54:	bl	13ae0 <error@@Base+0x87c>
   13c58:	ldrsh	r3, [fp, #-6]
   13c5c:	mov	r2, r3
   13c60:	ldr	r3, [pc, #236]	; 13d54 <error@@Base+0xaf0>
   13c64:	add	r3, pc, r3
   13c68:	mov	r1, r3
   13c6c:	ldr	r0, [fp, #-16]
   13c70:	bl	10a88 <fprintf@plt>
   13c74:	ldrsh	r3, [fp, #-6]
   13c78:	uxth	r3, r3
   13c7c:	add	r3, r3, #1
   13c80:	uxth	r3, r3
   13c84:	strh	r3, [fp, #-6]
   13c88:	ldrsh	r2, [fp, #-6]
   13c8c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13c90:	cmp	r2, r3
   13c94:	ble	13c20 <error@@Base+0x9bc>
   13c98:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   13c9c:	cmp	r3, #0
   13ca0:	beq	13d00 <error@@Base+0xa9c>
   13ca4:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13ca8:	add	r3, r3, #1
   13cac:	lsl	r3, r3, #3
   13cb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cb4:	add	r3, r2, r3
   13cb8:	ldr	r3, [r3]
   13cbc:	cmp	r3, #0
   13cc0:	ble	13d00 <error@@Base+0xa9c>
   13cc4:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13cc8:	add	r3, r3, #1
   13ccc:	lsl	r3, r3, #3
   13cd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cd4:	add	r3, r2, r3
   13cd8:	mov	r1, r3
   13cdc:	ldr	r0, [fp, #-16]
   13ce0:	bl	13ae0 <error@@Base+0x87c>
   13ce4:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13ce8:	mov	r2, r3
   13cec:	ldr	r3, [pc, #100]	; 13d58 <error@@Base+0xaf4>
   13cf0:	add	r3, pc, r3
   13cf4:	mov	r1, r3
   13cf8:	ldr	r0, [fp, #-16]
   13cfc:	bl	10a88 <fprintf@plt>
   13d00:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   13d04:	cmp	r3, #0
   13d08:	beq	13d30 <error@@Base+0xacc>
   13d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d10:	ldr	r0, [fp, #-16]
   13d14:	bl	13ae0 <error@@Base+0x87c>
   13d18:	ldr	r3, [fp, #-16]
   13d1c:	mov	r2, #7
   13d20:	mov	r1, #1
   13d24:	ldr	r0, [pc, #48]	; 13d5c <error@@Base+0xaf8>
   13d28:	add	r0, pc, r0
   13d2c:	bl	10a04 <fwrite@plt>
   13d30:	nop	{0}
   13d34:	sub	sp, fp, #4
   13d38:	ldr	fp, [sp]
   13d3c:	add	sp, sp, #4
   13d40:	pop	{pc}		; (ldr pc, [sp], #4)
   13d44:	andeq	r2, r0, r8, lsr #9
   13d48:	andeq	r2, r0, r4, lsl #9
   13d4c:	andeq	r2, r0, r0, lsl #9
   13d50:	andeq	r2, r0, ip, ror r4
   13d54:	andeq	r2, r0, r0, lsr #8
   13d58:	andeq	r2, r0, r0, lsr #7
   13d5c:	andeq	r2, r0, r8, ror r2
   13d60:	str	fp, [sp, #-8]!
   13d64:	str	lr, [sp, #4]
   13d68:	add	fp, sp, #4
   13d6c:	sub	sp, sp, #8
   13d70:	str	r0, [fp, #-8]
   13d74:	str	r1, [fp, #-12]
   13d78:	ldr	r3, [fp, #-8]
   13d7c:	ldr	r2, [r3, #8]
   13d80:	ldr	r3, [fp, #-12]
   13d84:	ldr	r3, [r3, #8]
   13d88:	mov	r1, r3
   13d8c:	mov	r0, r2
   13d90:	bl	126a8 <__assert_fail@plt+0x1b90>
   13d94:	mov	r3, r0
   13d98:	mov	r0, r3
   13d9c:	sub	sp, fp, #4
   13da0:	ldr	fp, [sp]
   13da4:	add	sp, sp, #4
   13da8:	pop	{pc}		; (ldr pc, [sp], #4)
   13dac:	str	fp, [sp, #-8]!
   13db0:	str	lr, [sp, #4]
   13db4:	add	fp, sp, #4
   13db8:	sub	sp, sp, #24
   13dbc:	str	r0, [fp, #-16]
   13dc0:	str	r1, [fp, #-20]	; 0xffffffec
   13dc4:	str	r2, [fp, #-24]	; 0xffffffe8
   13dc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dcc:	bl	124b0 <__assert_fail@plt+0x1998>
   13dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13dd4:	add	r3, r3, #4096	; 0x1000
   13dd8:	ldr	r0, [r3, #3956]	; 0xf74
   13ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13de0:	add	r3, r3, #4096	; 0x1000
   13de4:	ldr	r3, [r3, #3952]	; 0xf70
   13de8:	ldr	r2, [pc, #224]	; 13ed0 <error@@Base+0xc6c>
   13dec:	add	r2, pc, r2
   13df0:	mov	r1, r3
   13df4:	bl	15a80 <error@@Base+0x281c>
   13df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13dfc:	ldr	r3, [pc, #208]	; 13ed4 <error@@Base+0xc70>
   13e00:	add	r3, pc, r3
   13e04:	mov	r1, r3
   13e08:	ldr	r0, [fp, #-16]
   13e0c:	bl	10a88 <fprintf@plt>
   13e10:	mov	r1, #0
   13e14:	ldr	r0, [fp, #-16]
   13e18:	bl	13ae0 <error@@Base+0x87c>
   13e1c:	ldr	r1, [fp, #-16]
   13e20:	mov	r0, #10
   13e24:	bl	10ab8 <fputc@plt>
   13e28:	mov	r3, #0
   13e2c:	str	r3, [fp, #-8]
   13e30:	b	13ea4 <error@@Base+0xc40>
   13e34:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e38:	add	r3, r3, #4096	; 0x1000
   13e3c:	ldr	r2, [r3, #3952]	; 0xf70
   13e40:	ldr	r3, [fp, #-8]
   13e44:	lsl	r3, r3, #2
   13e48:	add	r3, r2, r3
   13e4c:	ldr	r3, [r3]
   13e50:	add	r3, r3, #12
   13e54:	mov	r1, r3
   13e58:	ldr	r0, [fp, #-16]
   13e5c:	bl	13ae0 <error@@Base+0x87c>
   13e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e64:	add	r3, r3, #4096	; 0x1000
   13e68:	ldr	r2, [r3, #3952]	; 0xf70
   13e6c:	ldr	r3, [fp, #-8]
   13e70:	lsl	r3, r3, #2
   13e74:	add	r3, r2, r3
   13e78:	ldr	r3, [r3]
   13e7c:	ldr	r3, [r3, #8]
   13e80:	mov	r2, r3
   13e84:	ldr	r3, [pc, #76]	; 13ed8 <error@@Base+0xc74>
   13e88:	add	r3, pc, r3
   13e8c:	mov	r1, r3
   13e90:	ldr	r0, [fp, #-16]
   13e94:	bl	10a88 <fprintf@plt>
   13e98:	ldr	r3, [fp, #-8]
   13e9c:	add	r3, r3, #1
   13ea0:	str	r3, [fp, #-8]
   13ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ea8:	add	r3, r3, #4096	; 0x1000
   13eac:	ldr	r3, [r3, #3956]	; 0xf74
   13eb0:	ldr	r2, [fp, #-8]
   13eb4:	cmp	r2, r3
   13eb8:	blt	13e34 <error@@Base+0xbd0>
   13ebc:	nop	{0}
   13ec0:	sub	sp, fp, #4
   13ec4:	ldr	fp, [sp]
   13ec8:	add	sp, sp, #4
   13ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ed0:			; <UNDEFINED> instruction: 0xffffff6c
   13ed4:	andeq	r2, r0, r8, ror #4
   13ed8:	strdeq	r2, [r0], -r8
   13edc:	str	fp, [sp, #-8]!
   13ee0:	str	lr, [sp, #4]
   13ee4:	add	fp, sp, #4
   13ee8:	sub	sp, sp, #24
   13eec:	str	r0, [fp, #-16]
   13ef0:	str	r1, [fp, #-20]	; 0xffffffec
   13ef4:	ldr	r3, [pc, #464]	; 140cc <error@@Base+0xe68>
   13ef8:	add	r3, pc, r3
   13efc:	mov	r1, r3
   13f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f04:	bl	12790 <__assert_fail@plt+0x1c78>
   13f08:	str	r0, [fp, #-8]
   13f0c:	ldr	r3, [pc, #444]	; 140d0 <error@@Base+0xe6c>
   13f10:	add	r3, pc, r3
   13f14:	ldr	r2, [pc, #440]	; 140d4 <error@@Base+0xe70>
   13f18:	add	r2, pc, r2
   13f1c:	ldr	r1, [pc, #436]	; 140d8 <error@@Base+0xe74>
   13f20:	add	r1, pc, r1
   13f24:	ldr	r0, [fp, #-8]
   13f28:	bl	10a88 <fprintf@plt>
   13f2c:	ldr	r3, [fp, #-16]
   13f30:	ldr	r3, [r3]
   13f34:	mov	r2, r3
   13f38:	ldr	r3, [pc, #412]	; 140dc <error@@Base+0xe78>
   13f3c:	add	r3, pc, r3
   13f40:	mov	r1, r3
   13f44:	ldr	r0, [fp, #-8]
   13f48:	bl	10a88 <fprintf@plt>
   13f4c:	ldr	r3, [fp, #-16]
   13f50:	ldr	r3, [r3, #4]
   13f54:	mov	r2, r3
   13f58:	ldr	r3, [pc, #384]	; 140e0 <error@@Base+0xe7c>
   13f5c:	add	r3, pc, r3
   13f60:	mov	r1, r3
   13f64:	ldr	r0, [fp, #-8]
   13f68:	bl	10a88 <fprintf@plt>
   13f6c:	ldr	r3, [fp, #-16]
   13f70:	mov	r1, r3
   13f74:	ldr	r0, [fp, #-8]
   13f78:	bl	13a28 <error@@Base+0x7c4>
   13f7c:	ldr	r3, [fp, #-8]
   13f80:	mov	r2, #12
   13f84:	mov	r1, #1
   13f88:	ldr	r0, [pc, #340]	; 140e4 <error@@Base+0xe80>
   13f8c:	add	r0, pc, r0
   13f90:	bl	10a04 <fwrite@plt>
   13f94:	ldr	r3, [fp, #-16]
   13f98:	add	r1, r3, #8
   13f9c:	mov	r3, #1
   13fa0:	str	r3, [sp, #4]
   13fa4:	mov	r3, #0
   13fa8:	str	r3, [sp]
   13fac:	ldr	r3, [pc, #308]	; 140e8 <error@@Base+0xe84>
   13fb0:	add	r3, pc, r3
   13fb4:	mov	r2, #50	; 0x32
   13fb8:	ldr	r0, [fp, #-8]
   13fbc:	bl	13b84 <error@@Base+0x920>
   13fc0:	ldr	r3, [fp, #-16]
   13fc4:	add	r1, r3, #416	; 0x1a0
   13fc8:	mov	r3, #1
   13fcc:	str	r3, [sp, #4]
   13fd0:	mov	r3, #0
   13fd4:	str	r3, [sp]
   13fd8:	ldr	r3, [pc, #268]	; 140ec <error@@Base+0xe88>
   13fdc:	add	r3, pc, r3
   13fe0:	mov	r2, #50	; 0x32
   13fe4:	ldr	r0, [fp, #-8]
   13fe8:	bl	13b84 <error@@Base+0x920>
   13fec:	ldr	r3, [fp, #-16]
   13ff0:	add	r1, r3, #824	; 0x338
   13ff4:	mov	r3, #1
   13ff8:	str	r3, [sp, #4]
   13ffc:	mov	r3, #1
   14000:	str	r3, [sp]
   14004:	ldr	r3, [pc, #228]	; 140f0 <error@@Base+0xe8c>
   14008:	add	r3, pc, r3
   1400c:	mov	r2, #10
   14010:	ldr	r0, [fp, #-8]
   14014:	bl	13b84 <error@@Base+0x920>
   14018:	ldr	r3, [fp, #-16]
   1401c:	ldr	r3, [r3]
   14020:	cmp	r3, #0
   14024:	ble	140b0 <error@@Base+0xe4c>
   14028:	ldr	r3, [fp, #-16]
   1402c:	add	r1, r3, #920	; 0x398
   14030:	mov	r3, #0
   14034:	str	r3, [sp, #4]
   14038:	mov	r3, #0
   1403c:	str	r3, [sp]
   14040:	ldr	r3, [pc, #172]	; 140f4 <error@@Base+0xe90>
   14044:	add	r3, pc, r3
   14048:	mov	r2, #8
   1404c:	ldr	r0, [fp, #-8]
   14050:	bl	13b84 <error@@Base+0x920>
   14054:	ldr	r3, [fp, #-16]
   14058:	ldr	r3, [r3, #8]
   1405c:	cmp	r3, #0
   14060:	ble	14080 <error@@Base+0xe1c>
   14064:	ldr	r3, [fp, #-16]
   14068:	add	r3, r3, #992	; 0x3e0
   1406c:	ldr	r2, [pc, #132]	; 140f8 <error@@Base+0xe94>
   14070:	add	r2, pc, r2
   14074:	mov	r1, r3
   14078:	ldr	r0, [fp, #-8]
   1407c:	bl	13dac <error@@Base+0xb48>
   14080:	ldr	r3, [fp, #-16]
   14084:	ldr	r3, [r3, #416]	; 0x1a0
   14088:	cmp	r3, #0
   1408c:	ble	140b0 <error@@Base+0xe4c>
   14090:	ldr	r3, [fp, #-16]
   14094:	add	r3, r3, #9024	; 0x2340
   14098:	add	r3, r3, #24
   1409c:	ldr	r2, [pc, #88]	; 140fc <error@@Base+0xe98>
   140a0:	add	r2, pc, r2
   140a4:	mov	r1, r3
   140a8:	ldr	r0, [fp, #-8]
   140ac:	bl	13dac <error@@Base+0xb48>
   140b0:	ldr	r0, [fp, #-8]
   140b4:	bl	12870 <__assert_fail@plt+0x1d58>
   140b8:	nop	{0}
   140bc:	sub	sp, fp, #4
   140c0:	ldr	fp, [sp]
   140c4:	add	sp, sp, #4
   140c8:	pop	{pc}		; (ldr pc, [sp], #4)
   140cc:	andeq	r2, r0, r4, lsr #3
   140d0:	andeq	r2, r0, ip, asr #1
   140d4:	muleq	r0, r4, r0
   140d8:	andeq	r2, r0, r0, lsl #3
   140dc:	andeq	r2, r0, ip, ror #2
   140e0:	andeq	r2, r0, ip, asr r1
   140e4:	andeq	r2, r0, r4, asr #2
   140e8:	andeq	r2, r0, r0, lsr r1
   140ec:	andeq	r2, r0, r0, lsl r1
   140f0:	strdeq	r2, [r0], -r4
   140f4:	ldrdeq	r2, [r0], -r0
   140f8:	andeq	r2, r0, r0, ror r0
   140fc:	andeq	r2, r0, ip, asr #32
   14100:	str	fp, [sp, #-8]!
   14104:	str	lr, [sp, #4]
   14108:	add	fp, sp, #4
   1410c:	sub	sp, sp, #24
   14110:	str	r0, [fp, #-16]
   14114:	str	r1, [fp, #-20]	; 0xffffffec
   14118:	str	r2, [fp, #-24]	; 0xffffffe8
   1411c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14120:	ldr	r3, [fp, #-20]	; 0xffffffec
   14124:	cmp	r2, r3
   14128:	bcs	14134 <error@@Base+0xed0>
   1412c:	mov	r3, #0
   14130:	b	1422c <error@@Base+0xfc8>
   14134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1413c:	sub	r3, r2, r3
   14140:	lsr	r3, r3, #1
   14144:	ldr	r2, [fp, #-20]	; 0xffffffec
   14148:	add	r3, r2, r3
   1414c:	str	r3, [fp, #-8]
   14150:	ldr	r2, [fp, #-8]
   14154:	mov	r3, r2
   14158:	lsl	r3, r3, #1
   1415c:	add	r3, r3, r2
   14160:	lsl	r3, r3, #2
   14164:	ldr	r2, [pc, #212]	; 14240 <error@@Base+0xfdc>
   14168:	add	r2, pc, r2
   1416c:	add	r3, r3, r2
   14170:	str	r3, [fp, #-12]
   14174:	ldr	r3, [fp, #-12]
   14178:	ldr	r3, [r3]
   1417c:	ldr	r2, [fp, #-16]
   14180:	cmp	r2, r3
   14184:	bcs	141a8 <error@@Base+0xf44>
   14188:	ldr	r3, [fp, #-8]
   1418c:	sub	r3, r3, #1
   14190:	mov	r2, r3
   14194:	ldr	r1, [fp, #-20]	; 0xffffffec
   14198:	ldr	r0, [fp, #-16]
   1419c:	bl	14100 <error@@Base+0xe9c>
   141a0:	mov	r3, r0
   141a4:	b	1422c <error@@Base+0xfc8>
   141a8:	ldr	r3, [fp, #-12]
   141ac:	ldr	r3, [r3, #4]
   141b0:	ldr	r2, [fp, #-16]
   141b4:	cmp	r2, r3
   141b8:	bls	141dc <error@@Base+0xf78>
   141bc:	ldr	r3, [fp, #-8]
   141c0:	add	r3, r3, #1
   141c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   141c8:	mov	r1, r3
   141cc:	ldr	r0, [fp, #-16]
   141d0:	bl	14100 <error@@Base+0xe9c>
   141d4:	mov	r3, r0
   141d8:	b	1422c <error@@Base+0xfc8>
   141dc:	ldr	r3, [fp, #-12]
   141e0:	ldr	r3, [r3]
   141e4:	ldr	r2, [fp, #-16]
   141e8:	cmp	r2, r3
   141ec:	bcc	14204 <error@@Base+0xfa0>
   141f0:	ldr	r3, [fp, #-12]
   141f4:	ldr	r3, [r3, #4]
   141f8:	ldr	r2, [fp, #-16]
   141fc:	cmp	r2, r3
   14200:	bls	14224 <error@@Base+0xfc0>
   14204:	ldr	r3, [pc, #56]	; 14244 <error@@Base+0xfe0>
   14208:	add	r3, pc, r3
   1420c:	mov	r2, #63	; 0x3f
   14210:	ldr	r1, [pc, #48]	; 14248 <error@@Base+0xfe4>
   14214:	add	r1, pc, r1
   14218:	ldr	r0, [pc, #44]	; 1424c <error@@Base+0xfe8>
   1421c:	add	r0, pc, r0
   14220:	bl	10b18 <__assert_fail@plt>
   14224:	ldr	r3, [fp, #-12]
   14228:	ldr	r3, [r3, #8]
   1422c:	mov	r0, r3
   14230:	sub	sp, fp, #4
   14234:	ldr	fp, [sp]
   14238:	add	sp, sp, #4
   1423c:	pop	{pc}		; (ldr pc, [sp], #4)
   14240:			; <UNDEFINED> instruction: 0x00001fb4
   14244:			; <UNDEFINED> instruction: 0x000052b8
   14248:	andeq	r5, r0, r4, asr #4
   1424c:	andeq	r5, r0, r4, asr #4
   14250:	str	fp, [sp, #-8]!
   14254:	str	lr, [sp, #4]
   14258:	add	fp, sp, #4
   1425c:	sub	sp, sp, #16
   14260:	str	r0, [fp, #-16]
   14264:	movw	r3, #1093	; 0x445
   14268:	str	r3, [fp, #-8]
   1426c:	ldr	r3, [fp, #-8]
   14270:	sub	r3, r3, #1
   14274:	mov	r2, r3
   14278:	mov	r1, #0
   1427c:	ldr	r0, [fp, #-16]
   14280:	bl	14100 <error@@Base+0xe9c>
   14284:	mov	r3, r0
   14288:	mov	r0, r3
   1428c:	sub	sp, fp, #4
   14290:	ldr	fp, [sp]
   14294:	add	sp, sp, #4
   14298:	pop	{pc}		; (ldr pc, [sp], #4)
   1429c:	str	fp, [sp, #-8]!
   142a0:	str	lr, [sp, #4]
   142a4:	add	fp, sp, #4
   142a8:	sub	sp, sp, #8
   142ac:	str	r0, [fp, #-8]
   142b0:	ldr	r3, [fp, #-8]
   142b4:	cmp	r3, #0
   142b8:	bne	142c4 <error@@Base+0x1060>
   142bc:	mov	r3, #18
   142c0:	b	142d8 <error@@Base+0x1074>
   142c4:	ldr	r3, [fp, #-8]
   142c8:	ldr	r3, [r3, #12]
   142cc:	mov	r0, r3
   142d0:	bl	14250 <error@@Base+0xfec>
   142d4:	mov	r3, r0
   142d8:	mov	r0, r3
   142dc:	sub	sp, fp, #4
   142e0:	ldr	fp, [sp]
   142e4:	add	sp, sp, #4
   142e8:	pop	{pc}		; (ldr pc, [sp], #4)
   142ec:	str	fp, [sp, #-8]!
   142f0:	str	lr, [sp, #4]
   142f4:	add	fp, sp, #4
   142f8:	sub	sp, sp, #8
   142fc:	str	r0, [fp, #-8]
   14300:	ldr	r3, [fp, #-8]
   14304:	cmp	r3, #0
   14308:	bne	14314 <error@@Base+0x10b0>
   1430c:	mov	r3, #0
   14310:	b	14358 <error@@Base+0x10f4>
   14314:	ldr	r3, [fp, #-8]
   14318:	ldr	r3, [r3, #4]
   1431c:	str	r3, [fp, #-8]
   14320:	ldr	r3, [fp, #-8]
   14324:	cmp	r3, #0
   14328:	beq	14354 <error@@Base+0x10f0>
   1432c:	ldr	r0, [fp, #-8]
   14330:	bl	1429c <error@@Base+0x1038>
   14334:	mov	r3, r0
   14338:	cmp	r3, #4
   1433c:	beq	14314 <error@@Base+0x10b0>
   14340:	ldr	r0, [fp, #-8]
   14344:	bl	1429c <error@@Base+0x1038>
   14348:	mov	r3, r0
   1434c:	cmp	r3, #6
   14350:	beq	14314 <error@@Base+0x10b0>
   14354:	ldr	r3, [fp, #-8]
   14358:	mov	r0, r3
   1435c:	sub	sp, fp, #4
   14360:	ldr	fp, [sp]
   14364:	add	sp, sp, #4
   14368:	pop	{pc}		; (ldr pc, [sp], #4)
   1436c:	str	fp, [sp, #-8]!
   14370:	str	lr, [sp, #4]
   14374:	add	fp, sp, #4
   14378:	sub	sp, sp, #8
   1437c:	str	r0, [fp, #-8]
   14380:	ldr	r0, [fp, #-8]
   14384:	bl	142ec <error@@Base+0x1088>
   14388:	mov	r3, r0
   1438c:	mov	r0, r3
   14390:	bl	142ec <error@@Base+0x1088>
   14394:	mov	r3, r0
   14398:	mov	r0, r3
   1439c:	sub	sp, fp, #4
   143a0:	ldr	fp, [sp]
   143a4:	add	sp, sp, #4
   143a8:	pop	{pc}		; (ldr pc, [sp], #4)
   143ac:	str	fp, [sp, #-8]!
   143b0:	str	lr, [sp, #4]
   143b4:	add	fp, sp, #4
   143b8:	sub	sp, sp, #8
   143bc:	str	r0, [fp, #-8]
   143c0:	ldr	r3, [fp, #-8]
   143c4:	cmp	r3, #0
   143c8:	bne	143e0 <error@@Base+0x117c>
   143cc:	mov	r3, #0
   143d0:	b	1442c <error@@Base+0x11c8>
   143d4:	ldr	r3, [fp, #-8]
   143d8:	ldr	r3, [r3, #4]
   143dc:	str	r3, [fp, #-8]
   143e0:	ldr	r3, [fp, #-8]
   143e4:	ldr	r3, [r3, #4]
   143e8:	cmp	r3, #0
   143ec:	beq	14428 <error@@Base+0x11c4>
   143f0:	ldr	r3, [fp, #-8]
   143f4:	ldr	r3, [r3, #4]
   143f8:	mov	r0, r3
   143fc:	bl	1429c <error@@Base+0x1038>
   14400:	mov	r3, r0
   14404:	cmp	r3, #4
   14408:	beq	143d4 <error@@Base+0x1170>
   1440c:	ldr	r3, [fp, #-8]
   14410:	ldr	r3, [r3, #4]
   14414:	mov	r0, r3
   14418:	bl	1429c <error@@Base+0x1038>
   1441c:	mov	r3, r0
   14420:	cmp	r3, #6
   14424:	beq	143d4 <error@@Base+0x1170>
   14428:	ldr	r3, [fp, #-8]
   1442c:	mov	r0, r3
   14430:	sub	sp, fp, #4
   14434:	ldr	fp, [sp]
   14438:	add	sp, sp, #4
   1443c:	pop	{pc}		; (ldr pc, [sp], #4)
   14440:	str	fp, [sp, #-8]!
   14444:	str	lr, [sp, #4]
   14448:	add	fp, sp, #4
   1444c:	sub	sp, sp, #48	; 0x30
   14450:	str	r0, [fp, #-48]	; 0xffffffd0
   14454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14458:	str	r3, [fp, #-36]	; 0xffffffdc
   1445c:	sub	r3, fp, #40	; 0x28
   14460:	str	r3, [fp, #-8]
   14464:	mov	r3, #17
   14468:	str	r3, [fp, #-12]
   1446c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14470:	cmp	r3, #0
   14474:	bne	14840 <error@@Base+0x15dc>
   14478:	mov	r3, #0
   1447c:	b	14864 <error@@Base+0x1600>
   14480:	ldr	r0, [fp, #-8]
   14484:	bl	142ec <error@@Base+0x1088>
   14488:	str	r0, [fp, #-8]
   1448c:	ldr	r3, [fp, #-12]
   14490:	str	r3, [fp, #-16]
   14494:	ldr	r0, [fp, #-8]
   14498:	bl	1429c <error@@Base+0x1038>
   1449c:	str	r0, [fp, #-12]
   144a0:	ldr	r0, [fp, #-8]
   144a4:	bl	142ec <error@@Base+0x1088>
   144a8:	mov	r3, r0
   144ac:	mov	r0, r3
   144b0:	bl	1429c <error@@Base+0x1038>
   144b4:	str	r0, [fp, #-20]	; 0xffffffec
   144b8:	ldr	r0, [fp, #-8]
   144bc:	bl	1436c <error@@Base+0x1108>
   144c0:	mov	r3, r0
   144c4:	mov	r0, r3
   144c8:	bl	1429c <error@@Base+0x1038>
   144cc:	str	r0, [fp, #-24]	; 0xffffffe8
   144d0:	ldr	r3, [fp, #-12]
   144d4:	cmp	r3, #1
   144d8:	bne	144ec <error@@Base+0x1288>
   144dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   144e0:	cmp	r3, #2
   144e4:	bne	144ec <error@@Base+0x1288>
   144e8:	b	14840 <error@@Base+0x15dc>
   144ec:	ldr	r3, [fp, #-12]
   144f0:	cmp	r3, #3
   144f4:	beq	14858 <error@@Base+0x15f4>
   144f8:	ldr	r3, [fp, #-12]
   144fc:	cmp	r3, #1
   14500:	beq	14858 <error@@Base+0x15f4>
   14504:	ldr	r3, [fp, #-12]
   14508:	cmp	r3, #2
   1450c:	beq	14858 <error@@Base+0x15f4>
   14510:	ldr	r3, [fp, #-20]	; 0xffffffec
   14514:	cmp	r3, #3
   14518:	beq	14858 <error@@Base+0x15f4>
   1451c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14520:	cmp	r3, #1
   14524:	beq	14858 <error@@Base+0x15f4>
   14528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1452c:	cmp	r3, #2
   14530:	beq	14858 <error@@Base+0x15f4>
   14534:	ldr	r3, [fp, #-12]
   14538:	cmp	r3, #9
   1453c:	beq	1454c <error@@Base+0x12e8>
   14540:	ldr	r3, [fp, #-12]
   14544:	cmp	r3, #8
   14548:	bne	14568 <error@@Base+0x1304>
   1454c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14550:	cmp	r3, #9
   14554:	beq	14840 <error@@Base+0x15dc>
   14558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1455c:	cmp	r3, #8
   14560:	bne	14568 <error@@Base+0x1304>
   14564:	b	14840 <error@@Base+0x15dc>
   14568:	ldr	r3, [fp, #-12]
   1456c:	cmp	r3, #9
   14570:	beq	14580 <error@@Base+0x131c>
   14574:	ldr	r3, [fp, #-12]
   14578:	cmp	r3, #8
   1457c:	bne	145c0 <error@@Base+0x135c>
   14580:	ldr	r3, [fp, #-20]	; 0xffffffec
   14584:	cmp	r3, #13
   14588:	beq	145a4 <error@@Base+0x1340>
   1458c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14590:	cmp	r3, #12
   14594:	beq	145a4 <error@@Base+0x1340>
   14598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1459c:	cmp	r3, #10
   145a0:	bne	145c0 <error@@Base+0x135c>
   145a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145a8:	cmp	r3, #9
   145ac:	beq	14840 <error@@Base+0x15dc>
   145b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145b4:	cmp	r3, #8
   145b8:	bne	145c0 <error@@Base+0x135c>
   145bc:	b	14840 <error@@Base+0x15dc>
   145c0:	ldr	r3, [fp, #-16]
   145c4:	cmp	r3, #9
   145c8:	beq	145d8 <error@@Base+0x1374>
   145cc:	ldr	r3, [fp, #-16]
   145d0:	cmp	r3, #8
   145d4:	bne	14618 <error@@Base+0x13b4>
   145d8:	ldr	r3, [fp, #-12]
   145dc:	cmp	r3, #13
   145e0:	beq	145fc <error@@Base+0x1398>
   145e4:	ldr	r3, [fp, #-12]
   145e8:	cmp	r3, #12
   145ec:	beq	145fc <error@@Base+0x1398>
   145f0:	ldr	r3, [fp, #-12]
   145f4:	cmp	r3, #10
   145f8:	bne	14618 <error@@Base+0x13b4>
   145fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14600:	cmp	r3, #9
   14604:	beq	14840 <error@@Base+0x15dc>
   14608:	ldr	r3, [fp, #-20]	; 0xffffffec
   1460c:	cmp	r3, #8
   14610:	bne	14618 <error@@Base+0x13b4>
   14614:	b	14840 <error@@Base+0x15dc>
   14618:	ldr	r3, [fp, #-12]
   1461c:	cmp	r3, #8
   14620:	bne	14634 <error@@Base+0x13d0>
   14624:	ldr	r3, [fp, #-20]	; 0xffffffec
   14628:	cmp	r3, #10
   1462c:	bne	14634 <error@@Base+0x13d0>
   14630:	b	14840 <error@@Base+0x15dc>
   14634:	ldr	r3, [fp, #-12]
   14638:	cmp	r3, #8
   1463c:	bne	1465c <error@@Base+0x13f8>
   14640:	ldr	r3, [fp, #-20]	; 0xffffffec
   14644:	cmp	r3, #11
   14648:	bne	1465c <error@@Base+0x13f8>
   1464c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14650:	cmp	r3, #8
   14654:	bne	1465c <error@@Base+0x13f8>
   14658:	b	14840 <error@@Base+0x15dc>
   1465c:	ldr	r3, [fp, #-16]
   14660:	cmp	r3, #8
   14664:	bne	14684 <error@@Base+0x1420>
   14668:	ldr	r3, [fp, #-12]
   1466c:	cmp	r3, #11
   14670:	bne	14684 <error@@Base+0x1420>
   14674:	ldr	r3, [fp, #-20]	; 0xffffffec
   14678:	cmp	r3, #8
   1467c:	bne	14684 <error@@Base+0x1420>
   14680:	b	14840 <error@@Base+0x15dc>
   14684:	ldr	r3, [fp, #-12]
   14688:	cmp	r3, #15
   1468c:	bne	146a0 <error@@Base+0x143c>
   14690:	ldr	r3, [fp, #-20]	; 0xffffffec
   14694:	cmp	r3, #15
   14698:	bne	146a0 <error@@Base+0x143c>
   1469c:	b	14840 <error@@Base+0x15dc>
   146a0:	ldr	r3, [fp, #-12]
   146a4:	cmp	r3, #9
   146a8:	beq	146b8 <error@@Base+0x1454>
   146ac:	ldr	r3, [fp, #-12]
   146b0:	cmp	r3, #8
   146b4:	bne	146c8 <error@@Base+0x1464>
   146b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   146bc:	cmp	r3, #15
   146c0:	bne	146c8 <error@@Base+0x1464>
   146c4:	b	14840 <error@@Base+0x15dc>
   146c8:	ldr	r3, [fp, #-12]
   146cc:	cmp	r3, #15
   146d0:	bne	146f0 <error@@Base+0x148c>
   146d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   146d8:	cmp	r3, #9
   146dc:	beq	14840 <error@@Base+0x15dc>
   146e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   146e4:	cmp	r3, #8
   146e8:	bne	146f0 <error@@Base+0x148c>
   146ec:	b	14840 <error@@Base+0x15dc>
   146f0:	ldr	r3, [fp, #-16]
   146f4:	cmp	r3, #15
   146f8:	bne	14730 <error@@Base+0x14cc>
   146fc:	ldr	r3, [fp, #-12]
   14700:	cmp	r3, #14
   14704:	beq	14720 <error@@Base+0x14bc>
   14708:	ldr	r3, [fp, #-12]
   1470c:	cmp	r3, #12
   14710:	beq	14720 <error@@Base+0x14bc>
   14714:	ldr	r3, [fp, #-12]
   14718:	cmp	r3, #10
   1471c:	bne	14730 <error@@Base+0x14cc>
   14720:	ldr	r3, [fp, #-20]	; 0xffffffec
   14724:	cmp	r3, #15
   14728:	bne	14730 <error@@Base+0x14cc>
   1472c:	b	14840 <error@@Base+0x15dc>
   14730:	ldr	r3, [fp, #-12]
   14734:	cmp	r3, #15
   14738:	bne	14770 <error@@Base+0x150c>
   1473c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14740:	cmp	r3, #14
   14744:	beq	14760 <error@@Base+0x14fc>
   14748:	ldr	r3, [fp, #-20]	; 0xffffffec
   1474c:	cmp	r3, #12
   14750:	beq	14760 <error@@Base+0x14fc>
   14754:	ldr	r3, [fp, #-20]	; 0xffffffec
   14758:	cmp	r3, #10
   1475c:	bne	14770 <error@@Base+0x150c>
   14760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14764:	cmp	r3, #15
   14768:	bne	14770 <error@@Base+0x150c>
   1476c:	b	14840 <error@@Base+0x15dc>
   14770:	ldr	r3, [fp, #-12]
   14774:	cmp	r3, #7
   14778:	bne	1478c <error@@Base+0x1528>
   1477c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14780:	cmp	r3, #7
   14784:	bne	1478c <error@@Base+0x1528>
   14788:	b	14840 <error@@Base+0x15dc>
   1478c:	ldr	r3, [fp, #-12]
   14790:	cmp	r3, #9
   14794:	beq	147c8 <error@@Base+0x1564>
   14798:	ldr	r3, [fp, #-12]
   1479c:	cmp	r3, #8
   147a0:	beq	147c8 <error@@Base+0x1564>
   147a4:	ldr	r3, [fp, #-12]
   147a8:	cmp	r3, #15
   147ac:	beq	147c8 <error@@Base+0x1564>
   147b0:	ldr	r3, [fp, #-12]
   147b4:	cmp	r3, #7
   147b8:	beq	147c8 <error@@Base+0x1564>
   147bc:	ldr	r3, [fp, #-12]
   147c0:	cmp	r3, #16
   147c4:	bne	147d8 <error@@Base+0x1574>
   147c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   147cc:	cmp	r3, #16
   147d0:	bne	147d8 <error@@Base+0x1574>
   147d4:	b	14840 <error@@Base+0x15dc>
   147d8:	ldr	r3, [fp, #-12]
   147dc:	cmp	r3, #16
   147e0:	bne	14824 <error@@Base+0x15c0>
   147e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   147e8:	cmp	r3, #9
   147ec:	beq	14840 <error@@Base+0x15dc>
   147f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   147f4:	cmp	r3, #8
   147f8:	beq	14840 <error@@Base+0x15dc>
   147fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14800:	cmp	r3, #15
   14804:	beq	14840 <error@@Base+0x15dc>
   14808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1480c:	cmp	r3, #7
   14810:	beq	14840 <error@@Base+0x15dc>
   14814:	ldr	r3, [fp, #-20]	; 0xffffffec
   14818:	cmp	r3, #16
   1481c:	bne	14824 <error@@Base+0x15c0>
   14820:	b	14840 <error@@Base+0x15dc>
   14824:	ldr	r3, [fp, #-12]
   14828:	cmp	r3, #5
   1482c:	bne	14854 <error@@Base+0x15f0>
   14830:	ldr	r3, [fp, #-20]	; 0xffffffec
   14834:	cmp	r3, #5
   14838:	bne	14854 <error@@Base+0x15f0>
   1483c:	nop	{0}
   14840:	ldr	r3, [fp, #-8]
   14844:	ldr	r3, [r3, #4]
   14848:	cmp	r3, #0
   1484c:	bne	14480 <error@@Base+0x121c>
   14850:	b	14858 <error@@Base+0x15f4>
   14854:	nop	{0}
   14858:	ldr	r0, [fp, #-8]
   1485c:	bl	143ac <error@@Base+0x1148>
   14860:	mov	r3, r0
   14864:	mov	r0, r3
   14868:	sub	sp, fp, #4
   1486c:	ldr	fp, [sp]
   14870:	add	sp, sp, #4
   14874:	pop	{pc}		; (ldr pc, [sp], #4)
   14878:	str	fp, [sp, #-8]!
   1487c:	str	lr, [sp, #4]
   14880:	add	fp, sp, #4
   14884:	sub	sp, sp, #24
   14888:	str	r0, [fp, #-24]	; 0xffffffe8
   1488c:	str	r1, [fp, #-28]	; 0xffffffe4
   14890:	mov	r3, #0
   14894:	str	r3, [fp, #-12]
   14898:	mov	r3, #0
   1489c:	str	r3, [fp, #-16]
   148a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148a4:	str	r3, [fp, #-8]
   148a8:	b	14944 <error@@Base+0x16e0>
   148ac:	ldr	r3, [fp, #-8]
   148b0:	cmp	r3, #0
   148b4:	bne	148d8 <error@@Base+0x1674>
   148b8:	ldr	r3, [pc, #172]	; 1496c <error@@Base+0x1708>
   148bc:	add	r3, pc, r3
   148c0:	mov	r2, #249	; 0xf9
   148c4:	ldr	r1, [pc, #164]	; 14970 <error@@Base+0x170c>
   148c8:	add	r1, pc, r1
   148cc:	ldr	r0, [pc, #160]	; 14974 <error@@Base+0x1710>
   148d0:	add	r0, pc, r0
   148d4:	bl	10b18 <__assert_fail@plt>
   148d8:	ldr	r3, [fp, #-8]
   148dc:	ldr	r3, [r3, #12]
   148e0:	mov	r2, r3
   148e4:	sub	r3, fp, #20
   148e8:	mov	r1, r3
   148ec:	mov	r0, r2
   148f0:	bl	109bc <utf8proc_encode_char@plt>
   148f4:	mov	r3, r0
   148f8:	str	r3, [fp, #-16]
   148fc:	ldr	r3, [fp, #-16]
   14900:	cmp	r3, #0
   14904:	bne	14928 <error@@Base+0x16c4>
   14908:	ldr	r3, [pc, #104]	; 14978 <error@@Base+0x1714>
   1490c:	add	r3, pc, r3
   14910:	mov	r2, #253	; 0xfd
   14914:	ldr	r1, [pc, #96]	; 1497c <error@@Base+0x1718>
   14918:	add	r1, pc, r1
   1491c:	ldr	r0, [pc, #92]	; 14980 <error@@Base+0x171c>
   14920:	add	r0, pc, r0
   14924:	bl	10b18 <__assert_fail@plt>
   14928:	ldr	r2, [fp, #-12]
   1492c:	ldr	r3, [fp, #-16]
   14930:	add	r3, r2, r3
   14934:	str	r3, [fp, #-12]
   14938:	ldr	r3, [fp, #-8]
   1493c:	ldr	r3, [r3, #4]
   14940:	str	r3, [fp, #-8]
   14944:	ldr	r2, [fp, #-8]
   14948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1494c:	cmp	r2, r3
   14950:	bne	148ac <error@@Base+0x1648>
   14954:	ldr	r3, [fp, #-12]
   14958:	mov	r0, r3
   1495c:	sub	sp, fp, #4
   14960:	ldr	fp, [sp]
   14964:	add	sp, sp, #4
   14968:	pop	{pc}		; (ldr pc, [sp], #4)
   1496c:	andeq	r4, r0, r8, lsl ip
   14970:	muleq	r0, r0, fp
   14974:	andeq	r4, r0, ip, asr #23
   14978:	andeq	r4, r0, r8, asr #23
   1497c:	andeq	r4, r0, r0, asr #22
   14980:	andeq	r4, r0, ip, lsl #23
   14984:	str	fp, [sp, #-8]!
   14988:	str	lr, [sp, #4]
   1498c:	add	fp, sp, #4
   14990:	sub	sp, sp, #24
   14994:	str	r0, [fp, #-16]
   14998:	str	r1, [fp, #-20]	; 0xffffffec
   1499c:	str	r2, [fp, #-24]	; 0xffffffe8
   149a0:	mov	r3, #0
   149a4:	str	r3, [fp, #-12]
   149a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   149ac:	str	r3, [fp, #-8]
   149b0:	b	14a20 <error@@Base+0x17bc>
   149b4:	ldr	r3, [fp, #-8]
   149b8:	cmp	r3, #0
   149bc:	bne	149e0 <error@@Base+0x177c>
   149c0:	ldr	r3, [pc, #144]	; 14a58 <error@@Base+0x17f4>
   149c4:	add	r3, pc, r3
   149c8:	movw	r2, #269	; 0x10d
   149cc:	ldr	r1, [pc, #136]	; 14a5c <error@@Base+0x17f8>
   149d0:	add	r1, pc, r1
   149d4:	ldr	r0, [pc, #132]	; 14a60 <error@@Base+0x17fc>
   149d8:	add	r0, pc, r0
   149dc:	bl	10b18 <__assert_fail@plt>
   149e0:	ldr	r3, [fp, #-8]
   149e4:	ldr	r3, [r3, #12]
   149e8:	mov	r0, r3
   149ec:	ldr	r2, [fp, #-16]
   149f0:	ldr	r3, [fp, #-12]
   149f4:	add	r3, r2, r3
   149f8:	mov	r1, r3
   149fc:	bl	109bc <utf8proc_encode_char@plt>
   14a00:	mov	r3, r0
   14a04:	mov	r2, r3
   14a08:	ldr	r3, [fp, #-12]
   14a0c:	add	r3, r3, r2
   14a10:	str	r3, [fp, #-12]
   14a14:	ldr	r3, [fp, #-8]
   14a18:	ldr	r3, [r3, #4]
   14a1c:	str	r3, [fp, #-8]
   14a20:	ldr	r2, [fp, #-8]
   14a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a28:	cmp	r2, r3
   14a2c:	bne	149b4 <error@@Base+0x1750>
   14a30:	ldr	r2, [fp, #-16]
   14a34:	ldr	r3, [fp, #-12]
   14a38:	add	r3, r2, r3
   14a3c:	mov	r2, #0
   14a40:	strb	r2, [r3]
   14a44:	nop	{0}
   14a48:	sub	sp, fp, #4
   14a4c:	ldr	fp, [sp]
   14a50:	add	sp, sp, #4
   14a54:	pop	{pc}		; (ldr pc, [sp], #4)
   14a58:	andeq	r4, r0, r4, lsr #22
   14a5c:	andeq	r4, r0, r8, lsl #21
   14a60:	andeq	r4, r0, r4, asr #21
   14a64:	str	fp, [sp, #-8]!
   14a68:	str	lr, [sp, #4]
   14a6c:	add	fp, sp, #4
   14a70:	sub	sp, sp, #32
   14a74:	str	r0, [fp, #-24]	; 0xffffffe8
   14a78:	str	r1, [fp, #-28]	; 0xffffffe4
   14a7c:	str	r2, [fp, #-32]	; 0xffffffe0
   14a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14a84:	ldr	r3, [r3, #4]
   14a88:	str	r3, [fp, #-8]
   14a8c:	ldr	r1, [fp, #-8]
   14a90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a94:	bl	14878 <error@@Base+0x1614>
   14a98:	str	r0, [fp, #-12]
   14a9c:	ldr	r3, [fp, #-12]
   14aa0:	add	r3, r3, #1
   14aa4:	mov	r0, r3
   14aa8:	bl	10a28 <malloc@plt>
   14aac:	mov	r3, r0
   14ab0:	str	r3, [fp, #-16]
   14ab4:	ldr	r2, [fp, #-8]
   14ab8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14abc:	ldr	r0, [fp, #-16]
   14ac0:	bl	14984 <error@@Base+0x1720>
   14ac4:	mov	r1, #12
   14ac8:	mov	r0, #1
   14acc:	bl	12644 <__assert_fail@plt+0x1b2c>
   14ad0:	str	r0, [fp, #-20]	; 0xffffffec
   14ad4:	ldr	r0, [fp, #-16]
   14ad8:	bl	10aac <utf8proc_NFC@plt>
   14adc:	mov	r2, r0
   14ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ae4:	str	r2, [r3, #8]
   14ae8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14af0:	bl	11c14 <__assert_fail@plt+0x10fc>
   14af4:	ldr	r0, [fp, #-16]
   14af8:	bl	10998 <free@plt>
   14afc:	nop	{0}
   14b00:	sub	sp, fp, #4
   14b04:	ldr	fp, [sp]
   14b08:	add	sp, sp, #4
   14b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b10:	str	fp, [sp, #-8]!
   14b14:	str	lr, [sp, #4]
   14b18:	add	fp, sp, #4
   14b1c:	sub	sp, sp, #16
   14b20:	str	r0, [fp, #-16]
   14b24:	ldr	r3, [fp, #-16]
   14b28:	mov	r0, r3
   14b2c:	bl	109a4 <utf8proc_get_property@plt>
   14b30:	str	r0, [fp, #-8]
   14b34:	ldr	r3, [fp, #-8]
   14b38:	ldrsh	r3, [r3]
   14b3c:	cmp	r3, #0
   14b40:	ble	14b5c <error@@Base+0x18f8>
   14b44:	cmp	r3, #12
   14b48:	ble	14b54 <error@@Base+0x18f0>
   14b4c:	cmp	r3, #29
   14b50:	bne	14b5c <error@@Base+0x18f8>
   14b54:	mov	r3, #1
   14b58:	b	14b60 <error@@Base+0x18fc>
   14b5c:	mov	r3, #0
   14b60:	mov	r0, r3
   14b64:	sub	sp, fp, #4
   14b68:	ldr	fp, [sp]
   14b6c:	add	sp, sp, #4
   14b70:	pop	{pc}		; (ldr pc, [sp], #4)
   14b74:	str	fp, [sp, #-8]!
   14b78:	str	lr, [sp, #4]
   14b7c:	add	fp, sp, #4
   14b80:	sub	sp, sp, #16
   14b84:	str	r0, [fp, #-16]
   14b88:	str	r1, [fp, #-20]	; 0xffffffec
   14b8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b90:	ldr	r3, [r3]
   14b94:	str	r3, [fp, #-8]
   14b98:	b	14bd4 <error@@Base+0x1970>
   14b9c:	ldr	r3, [fp, #-8]
   14ba0:	ldr	r3, [r3, #12]
   14ba4:	mov	r0, r3
   14ba8:	bl	14b10 <error@@Base+0x18ac>
   14bac:	mov	r3, r0
   14bb0:	cmp	r3, #0
   14bb4:	beq	14bc8 <error@@Base+0x1964>
   14bb8:	ldr	r2, [fp, #-12]
   14bbc:	ldr	r1, [fp, #-8]
   14bc0:	ldr	r0, [fp, #-16]
   14bc4:	bl	14a64 <error@@Base+0x1800>
   14bc8:	ldr	r3, [fp, #-12]
   14bcc:	ldr	r3, [r3, #4]
   14bd0:	str	r3, [fp, #-8]
   14bd4:	ldr	r0, [fp, #-8]
   14bd8:	bl	14440 <error@@Base+0x11dc>
   14bdc:	str	r0, [fp, #-12]
   14be0:	ldr	r3, [fp, #-12]
   14be4:	cmp	r3, #0
   14be8:	bne	14b9c <error@@Base+0x1938>
   14bec:	nop	{0}
   14bf0:	sub	sp, fp, #4
   14bf4:	ldr	fp, [sp]
   14bf8:	add	sp, sp, #4
   14bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   14c00:	str	fp, [sp, #-8]!
   14c04:	str	lr, [sp, #4]
   14c08:	add	fp, sp, #4
   14c0c:	sub	sp, sp, #8
   14c10:	str	r0, [fp, #-8]
   14c14:	ldr	r3, [fp, #-8]
   14c18:	ldr	r3, [r3, #8]
   14c1c:	mov	r0, r3
   14c20:	bl	10998 <free@plt>
   14c24:	ldr	r0, [fp, #-8]
   14c28:	bl	10998 <free@plt>
   14c2c:	nop	{0}
   14c30:	sub	sp, fp, #4
   14c34:	ldr	fp, [sp]
   14c38:	add	sp, sp, #4
   14c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c40:	str	fp, [sp, #-8]!
   14c44:	str	lr, [sp, #4]
   14c48:	add	fp, sp, #4
   14c4c:	sub	sp, sp, #24
   14c50:	str	r0, [fp, #-16]
   14c54:	mov	r3, r1
   14c58:	str	r2, [fp, #-24]	; 0xffffffe8
   14c5c:	strb	r3, [fp, #-20]	; 0xffffffec
   14c60:	mov	r1, #16
   14c64:	mov	r0, #1
   14c68:	bl	12644 <__assert_fail@plt+0x1b2c>
   14c6c:	str	r0, [fp, #-8]
   14c70:	ldr	r3, [fp, #-8]
   14c74:	ldrb	r2, [fp, #-20]	; 0xffffffec
   14c78:	strb	r2, [r3, #8]
   14c7c:	ldr	r3, [fp, #-8]
   14c80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c84:	str	r2, [r3, #12]
   14c88:	ldr	r1, [fp, #-8]
   14c8c:	ldr	r0, [fp, #-16]
   14c90:	bl	11c14 <__assert_fail@plt+0x10fc>
   14c94:	nop	{0}
   14c98:	sub	sp, fp, #4
   14c9c:	ldr	fp, [sp]
   14ca0:	add	sp, sp, #4
   14ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ca8:	str	fp, [sp, #-8]!
   14cac:	str	lr, [sp, #4]
   14cb0:	add	fp, sp, #4
   14cb4:	sub	sp, sp, #112	; 0x70
   14cb8:	str	r0, [fp, #-112]	; 0xffffff90
   14cbc:	mov	r3, #0
   14cc0:	strh	r3, [fp, #-6]
   14cc4:	sub	r3, fp, #108	; 0x6c
   14cc8:	ldr	r2, [fp, #-112]	; 0xffffff90
   14ccc:	mov	r1, #99	; 0x63
   14cd0:	mov	r0, r3
   14cd4:	bl	109b0 <fgets@plt>
   14cd8:	mov	r3, r0
   14cdc:	cmp	r3, #0
   14ce0:	beq	14d78 <error@@Base+0x1b14>
   14ce4:	sub	r3, fp, #108	; 0x6c
   14ce8:	mov	r2, #51	; 0x33
   14cec:	ldr	r1, [pc, #164]	; 14d98 <error@@Base+0x1b34>
   14cf0:	add	r1, pc, r1
   14cf4:	mov	r0, r3
   14cf8:	bl	10af4 <strncmp@plt>
   14cfc:	mov	r3, r0
   14d00:	cmp	r3, #0
   14d04:	bne	14d78 <error@@Base+0x1b14>
   14d08:	b	14d44 <error@@Base+0x1ae0>
   14d0c:	sub	r3, fp, #108	; 0x6c
   14d10:	ldr	r2, [pc, #132]	; 14d9c <error@@Base+0x1b38>
   14d14:	add	r2, pc, r2
   14d18:	mov	r1, r2
   14d1c:	mov	r0, r3
   14d20:	bl	10980 <strcmp@plt>
   14d24:	mov	r3, r0
   14d28:	cmp	r3, #0
   14d2c:	bne	14d44 <error@@Base+0x1ae0>
   14d30:	ldrsh	r3, [fp, #-6]
   14d34:	uxth	r3, r3
   14d38:	add	r3, r3, #1
   14d3c:	uxth	r3, r3
   14d40:	strh	r3, [fp, #-6]
   14d44:	ldrsh	r3, [fp, #-6]
   14d48:	cmp	r3, #1
   14d4c:	bgt	14d70 <error@@Base+0x1b0c>
   14d50:	sub	r3, fp, #108	; 0x6c
   14d54:	ldr	r2, [fp, #-112]	; 0xffffff90
   14d58:	mov	r1, #99	; 0x63
   14d5c:	mov	r0, r3
   14d60:	bl	109b0 <fgets@plt>
   14d64:	mov	r3, r0
   14d68:	cmp	r3, #0
   14d6c:	bne	14d0c <error@@Base+0x1aa8>
   14d70:	mov	r3, #1
   14d74:	b	14d84 <error@@Base+0x1b20>
   14d78:	ldr	r0, [fp, #-112]	; 0xffffff90
   14d7c:	bl	109d4 <rewind@plt>
   14d80:	mov	r3, #0
   14d84:	mov	r0, r3
   14d88:	sub	sp, fp, #4
   14d8c:	ldr	fp, [sp]
   14d90:	add	sp, sp, #4
   14d94:	pop	{pc}		; (ldr pc, [sp], #4)
   14d98:	andeq	r4, r0, ip, lsl #16
   14d9c:	andeq	r4, r0, r0, lsr #16
   14da0:	str	r4, [sp, #-12]!
   14da4:	str	fp, [sp, #4]
   14da8:	str	lr, [sp, #8]
   14dac:	add	fp, sp, #8
   14db0:	sub	sp, sp, #52	; 0x34
   14db4:	str	r0, [fp, #-48]	; 0xffffffd0
   14db8:	str	r1, [fp, #-52]	; 0xffffffcc
   14dbc:	str	r3, [fp, #-60]	; 0xffffffc4
   14dc0:	mov	r3, r2
   14dc4:	strb	r3, [fp, #-56]	; 0xffffffc8
   14dc8:	ldr	r4, [pc, #352]	; 14f30 <error@@Base+0x1ccc>
   14dcc:	add	r4, pc, r4
   14dd0:	mov	r3, #0
   14dd4:	strb	r3, [fp, #-13]
   14dd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14ddc:	bl	10b0c <getc@plt>
   14de0:	str	r0, [fp, #-20]	; 0xffffffec
   14de4:	b	14f0c <error@@Base+0x1ca8>
   14de8:	ldr	r3, [pc, #324]	; 14f34 <error@@Base+0x1cd0>
   14dec:	ldr	r2, [r4, r3]
   14df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14df4:	add	r3, r2, r3
   14df8:	ldrsb	r3, [r3]
   14dfc:	str	r3, [fp, #-24]	; 0xffffffe8
   14e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e04:	cmp	r3, #0
   14e08:	bgt	14e1c <error@@Base+0x1bb8>
   14e0c:	ldr	r3, [pc, #292]	; 14f38 <error@@Base+0x1cd4>
   14e10:	add	r3, pc, r3
   14e14:	mov	r0, r3
   14e18:	bl	13264 <error@@Base>
   14e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e20:	uxtb	r3, r3
   14e24:	strb	r3, [fp, #-36]	; 0xffffffdc
   14e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e2c:	cmp	r3, #1
   14e30:	ble	14e80 <error@@Base+0x1c1c>
   14e34:	sub	r0, fp, #36	; 0x24
   14e38:	add	r0, r0, #1
   14e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e40:	sub	r3, r3, #1
   14e44:	mov	r2, r3
   14e48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e4c:	mov	r1, #1
   14e50:	bl	10a10 <fread@plt>
   14e54:	mov	r3, r0
   14e58:	str	r3, [fp, #-28]	; 0xffffffe4
   14e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e60:	sub	r3, r3, #1
   14e64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14e68:	cmp	r2, r3
   14e6c:	beq	14e80 <error@@Base+0x1c1c>
   14e70:	ldr	r3, [pc, #196]	; 14f3c <error@@Base+0x1cd8>
   14e74:	add	r3, pc, r3
   14e78:	mov	r0, r3
   14e7c:	bl	13264 <error@@Base>
   14e80:	sub	r2, fp, #40	; 0x28
   14e84:	sub	r3, fp, #36	; 0x24
   14e88:	mov	r1, #4
   14e8c:	mov	r0, r3
   14e90:	bl	10a1c <utf8proc_iterate@plt>
   14e94:	str	r0, [fp, #-32]	; 0xffffffe0
   14e98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ea0:	cmp	r2, r3
   14ea4:	beq	14ebc <error@@Base+0x1c58>
   14ea8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14eac:	bl	10adc <utf8proc_errmsg@plt>
   14eb0:	mov	r3, r0
   14eb4:	mov	r0, r3
   14eb8:	bl	13264 <error@@Base>
   14ebc:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   14ec0:	cmp	r3, #0
   14ec4:	beq	14ee4 <error@@Base+0x1c80>
   14ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ecc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14ed0:	cmp	r2, r3
   14ed4:	bne	14ee4 <error@@Base+0x1c80>
   14ed8:	mov	r3, #1
   14edc:	strb	r3, [fp, #-13]
   14ee0:	b	14f00 <error@@Base+0x1c9c>
   14ee4:	ldrb	r3, [fp, #-13]
   14ee8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14eec:	mov	r1, r3
   14ef0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14ef4:	bl	14c40 <error@@Base+0x19dc>
   14ef8:	mov	r3, #0
   14efc:	strb	r3, [fp, #-13]
   14f00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14f04:	bl	10b0c <getc@plt>
   14f08:	str	r0, [fp, #-20]	; 0xffffffec
   14f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f10:	cmn	r3, #1
   14f14:	bne	14de8 <error@@Base+0x1b84>
   14f18:	nop	{0}
   14f1c:	sub	sp, fp, #8
   14f20:	ldr	r4, [sp]
   14f24:	ldr	fp, [sp, #4]
   14f28:	add	sp, sp, #8
   14f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f30:	andeq	r5, r1, ip, lsr #4
   14f34:	andeq	r0, r0, r0, ror #1
   14f38:	andeq	r4, r0, ip, asr r7
   14f3c:	andeq	r4, r0, r0, lsl r7
   14f40:	str	fp, [sp, #-8]!
   14f44:	str	lr, [sp, #4]
   14f48:	add	fp, sp, #4
   14f4c:	sub	sp, sp, #16
   14f50:	str	r0, [fp, #-16]
   14f54:	ldr	r0, [fp, #-16]
   14f58:	bl	109a4 <utf8proc_get_property@plt>
   14f5c:	str	r0, [fp, #-8]
   14f60:	ldr	r3, [fp, #-16]
   14f64:	cmp	r3, #13
   14f68:	bgt	14f94 <error@@Base+0x1d30>
   14f6c:	ldr	r3, [fp, #-16]
   14f70:	cmp	r3, #11
   14f74:	bge	14fac <error@@Base+0x1d48>
   14f78:	ldr	r3, [fp, #-16]
   14f7c:	cmp	r3, #9
   14f80:	beq	14fac <error@@Base+0x1d48>
   14f84:	ldr	r3, [fp, #-16]
   14f88:	cmp	r3, #10
   14f8c:	beq	14fa4 <error@@Base+0x1d40>
   14f90:	b	14fb4 <error@@Base+0x1d50>
   14f94:	ldr	r3, [fp, #-16]
   14f98:	cmp	r3, #160	; 0xa0
   14f9c:	beq	14fac <error@@Base+0x1d48>
   14fa0:	b	14fb4 <error@@Base+0x1d50>
   14fa4:	mov	r3, #0
   14fa8:	b	14fd4 <error@@Base+0x1d70>
   14fac:	mov	r3, #1
   14fb0:	b	14fd4 <error@@Base+0x1d70>
   14fb4:	ldr	r3, [fp, #-8]
   14fb8:	ldrsh	r3, [r3]
   14fbc:	sub	r3, r3, #23
   14fc0:	cmp	r3, #2
   14fc4:	bhi	14fd0 <error@@Base+0x1d6c>
   14fc8:	mov	r3, #1
   14fcc:	b	14fd4 <error@@Base+0x1d70>
   14fd0:	mov	r3, #0
   14fd4:	mov	r0, r3
   14fd8:	sub	sp, fp, #4
   14fdc:	ldr	fp, [sp]
   14fe0:	add	sp, sp, #4
   14fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   14fe8:	str	fp, [sp, #-8]!
   14fec:	str	lr, [sp, #4]
   14ff0:	add	fp, sp, #4
   14ff4:	sub	sp, sp, #24
   14ff8:	str	r0, [fp, #-24]	; 0xffffffe8
   14ffc:	str	r1, [fp, #-28]	; 0xffffffe4
   15000:	mov	r3, #0
   15004:	strb	r3, [fp, #-5]
   15008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1500c:	str	r3, [fp, #-12]
   15010:	b	15048 <error@@Base+0x1de4>
   15014:	ldr	r3, [fp, #-12]
   15018:	ldr	r3, [r3, #12]
   1501c:	mov	r0, r3
   15020:	bl	14f40 <error@@Base+0x1cdc>
   15024:	mov	r3, r0
   15028:	cmp	r3, #0
   1502c:	beq	1503c <error@@Base+0x1dd8>
   15030:	ldr	r3, [fp, #-12]
   15034:	mov	r2, #32
   15038:	str	r2, [r3, #12]
   1503c:	ldr	r3, [fp, #-12]
   15040:	ldr	r3, [r3, #4]
   15044:	str	r3, [fp, #-12]
   15048:	ldr	r3, [fp, #-12]
   1504c:	cmp	r3, #0
   15050:	bne	15014 <error@@Base+0x1db0>
   15054:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15058:	str	r3, [fp, #-12]
   1505c:	b	15154 <error@@Base+0x1ef0>
   15060:	ldr	r3, [fp, #-12]
   15064:	ldr	r3, [r3, #4]
   15068:	str	r3, [fp, #-16]
   1506c:	ldr	r3, [fp, #-12]
   15070:	ldr	r3, [r3, #12]
   15074:	cmp	r3, #32
   15078:	bne	150b4 <error@@Base+0x1e50>
   1507c:	ldrb	r3, [fp, #-5]
   15080:	cmp	r3, #0
   15084:	beq	150d0 <error@@Base+0x1e6c>
   15088:	ldr	r3, [fp, #-16]
   1508c:	cmp	r3, #0
   15090:	beq	150d0 <error@@Base+0x1e6c>
   15094:	ldr	r3, [fp, #-16]
   15098:	ldr	r3, [r3, #12]
   1509c:	cmp	r3, #32
   150a0:	beq	150d0 <error@@Base+0x1e6c>
   150a4:	ldr	r3, [fp, #-16]
   150a8:	ldr	r3, [r3, #12]
   150ac:	cmp	r3, #10
   150b0:	beq	150d0 <error@@Base+0x1e6c>
   150b4:	ldr	r3, [fp, #-12]
   150b8:	ldr	r3, [r3, #12]
   150bc:	cmp	r3, #10
   150c0:	bne	15130 <error@@Base+0x1ecc>
   150c4:	ldrb	r3, [fp, #-5]
   150c8:	cmp	r3, #0
   150cc:	bne	15130 <error@@Base+0x1ecc>
   150d0:	ldrb	r3, [fp, #-5]
   150d4:	cmp	r3, #0
   150d8:	beq	15118 <error@@Base+0x1eb4>
   150dc:	ldr	r3, [fp, #-16]
   150e0:	cmp	r3, #0
   150e4:	beq	15118 <error@@Base+0x1eb4>
   150e8:	ldr	r3, [fp, #-16]
   150ec:	ldr	r3, [r3, #12]
   150f0:	cmp	r3, #32
   150f4:	bne	15118 <error@@Base+0x1eb4>
   150f8:	ldr	r3, [fp, #-16]
   150fc:	ldrb	r2, [r3, #8]
   15100:	ldr	r3, [fp, #-12]
   15104:	ldrb	r3, [r3, #8]
   15108:	orr	r3, r2, r3
   1510c:	uxtb	r2, r3
   15110:	ldr	r3, [fp, #-16]
   15114:	strb	r2, [r3, #8]
   15118:	ldr	r1, [fp, #-12]
   1511c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15120:	bl	11ce8 <__assert_fail@plt+0x11d0>
   15124:	ldr	r0, [fp, #-12]
   15128:	bl	10998 <free@plt>
   1512c:	b	1514c <error@@Base+0x1ee8>
   15130:	ldr	r3, [fp, #-12]
   15134:	ldr	r3, [r3, #12]
   15138:	cmp	r3, #10
   1513c:	movne	r3, #1
   15140:	moveq	r3, #0
   15144:	uxtb	r3, r3
   15148:	strb	r3, [fp, #-5]
   1514c:	ldr	r3, [fp, #-16]
   15150:	str	r3, [fp, #-12]
   15154:	ldr	r3, [fp, #-12]
   15158:	cmp	r3, #0
   1515c:	bne	15060 <error@@Base+0x1dfc>
   15160:	nop	{0}
   15164:	sub	sp, fp, #4
   15168:	ldr	fp, [sp]
   1516c:	add	sp, sp, #4
   15170:	pop	{pc}		; (ldr pc, [sp], #4)
   15174:	str	fp, [sp, #-8]!
   15178:	str	lr, [sp, #4]
   1517c:	add	fp, sp, #4
   15180:	sub	sp, sp, #16
   15184:	str	r0, [fp, #-16]
   15188:	ldr	r3, [fp, #-16]
   1518c:	str	r3, [fp, #-8]
   15190:	b	151c0 <error@@Base+0x1f5c>
   15194:	ldr	r3, [fp, #-8]
   15198:	ldr	r3, [r3, #12]
   1519c:	mov	r0, r3
   151a0:	bl	109ec <utf8proc_tolower@plt>
   151a4:	mov	r3, r0
   151a8:	mov	r2, r3
   151ac:	ldr	r3, [fp, #-8]
   151b0:	str	r2, [r3, #12]
   151b4:	ldr	r3, [fp, #-8]
   151b8:	ldr	r3, [r3, #4]
   151bc:	str	r3, [fp, #-8]
   151c0:	ldr	r3, [fp, #-8]
   151c4:	cmp	r3, #0
   151c8:	bne	15194 <error@@Base+0x1f30>
   151cc:	nop	{0}
   151d0:	sub	sp, fp, #4
   151d4:	ldr	fp, [sp]
   151d8:	add	sp, sp, #4
   151dc:	pop	{pc}		; (ldr pc, [sp], #4)
   151e0:	str	fp, [sp, #-8]!
   151e4:	str	lr, [sp, #4]
   151e8:	add	fp, sp, #4
   151ec:	sub	sp, sp, #24
   151f0:	str	r0, [fp, #-16]
   151f4:	str	r1, [fp, #-20]	; 0xffffffec
   151f8:	str	r2, [fp, #-24]	; 0xffffffe8
   151fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15200:	ldrb	r3, [r3]
   15204:	cmp	r3, #0
   15208:	beq	15234 <error@@Base+0x1fd0>
   1520c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15210:	cmp	r3, #0
   15214:	bne	15234 <error@@Base+0x1fd0>
   15218:	ldr	r3, [pc, #296]	; 15348 <error@@Base+0x20e4>
   1521c:	add	r3, pc, r3
   15220:	mov	r1, r3
   15224:	ldr	r3, [pc, #288]	; 1534c <error@@Base+0x20e8>
   15228:	add	r3, pc, r3
   1522c:	mov	r0, r3
   15230:	bl	132d4 <error@@Base+0x70>
   15234:	ldr	r3, [fp, #-16]
   15238:	ldr	r3, [r3, #4]
   1523c:	str	r3, [fp, #-8]
   15240:	ldr	r3, [pc, #264]	; 15350 <error@@Base+0x20ec>
   15244:	add	r3, pc, r3
   15248:	mov	r1, r3
   1524c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15250:	bl	12790 <__assert_fail@plt+0x1c78>
   15254:	str	r0, [fp, #-12]
   15258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1525c:	ldrb	r3, [r3]
   15260:	cmp	r3, #0
   15264:	beq	15280 <error@@Base+0x201c>
   15268:	ldr	r0, [fp, #-12]
   1526c:	bl	14ca8 <error@@Base+0x1a44>
   15270:	mov	r3, r0
   15274:	mov	r2, r3
   15278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1527c:	strb	r2, [r3, #11]
   15280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15284:	ldrb	r3, [r3, #1]
   15288:	mov	r2, r3
   1528c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15290:	ldr	r3, [r3, #4]
   15294:	cmp	r3, #0
   15298:	beq	152a8 <error@@Base+0x2044>
   1529c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152a0:	ldr	r3, [r3, #4]
   152a4:	b	152ac <error@@Base+0x2048>
   152a8:	mov	r3, #94	; 0x5e
   152ac:	ldr	r1, [fp, #-16]
   152b0:	ldr	r0, [fp, #-12]
   152b4:	bl	14da0 <error@@Base+0x1b3c>
   152b8:	ldr	r0, [fp, #-12]
   152bc:	bl	12870 <__assert_fail@plt+0x1d58>
   152c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152c4:	ldrb	r3, [r3, #9]
   152c8:	cmp	r3, #0
   152cc:	beq	152fc <error@@Base+0x2098>
   152d0:	ldr	r3, [fp, #-8]
   152d4:	cmp	r3, #0
   152d8:	beq	152e8 <error@@Base+0x2084>
   152dc:	ldr	r3, [fp, #-8]
   152e0:	ldr	r3, [r3, #4]
   152e4:	b	152f0 <error@@Base+0x208c>
   152e8:	ldr	r3, [fp, #-16]
   152ec:	ldr	r3, [r3]
   152f0:	mov	r1, r3
   152f4:	ldr	r0, [fp, #-16]
   152f8:	bl	14fe8 <error@@Base+0x1d84>
   152fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15300:	ldrb	r3, [r3, #10]
   15304:	cmp	r3, #0
   15308:	beq	15334 <error@@Base+0x20d0>
   1530c:	ldr	r3, [fp, #-8]
   15310:	cmp	r3, #0
   15314:	beq	15324 <error@@Base+0x20c0>
   15318:	ldr	r3, [fp, #-8]
   1531c:	ldr	r3, [r3, #4]
   15320:	b	1532c <error@@Base+0x20c8>
   15324:	ldr	r3, [fp, #-16]
   15328:	ldr	r3, [r3]
   1532c:	mov	r0, r3
   15330:	bl	15174 <error@@Base+0x1f10>
   15334:	nop	{0}
   15338:	sub	sp, fp, #4
   1533c:	ldr	fp, [sp]
   15340:	add	sp, sp, #4
   15344:	pop	{pc}		; (ldr pc, [sp], #4)
   15348:	andeq	r4, r0, r0, lsl #7
   1534c:	andeq	r4, r0, r0, lsl #7
   15350:	andeq	r4, r0, r4, ror r3
   15354:	str	fp, [sp, #-8]!
   15358:	str	lr, [sp, #4]
   1535c:	add	fp, sp, #4
   15360:	sub	sp, sp, #16
   15364:	str	r0, [fp, #-16]
   15368:	str	r1, [fp, #-20]	; 0xffffffec
   1536c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15370:	ldr	r0, [fp, #-16]
   15374:	bl	109bc <utf8proc_encode_char@plt>
   15378:	str	r0, [fp, #-8]
   1537c:	ldr	r3, [fp, #-8]
   15380:	cmp	r3, #0
   15384:	bgt	15398 <error@@Base+0x2134>
   15388:	ldr	r3, [pc, #36]	; 153b4 <error@@Base+0x2150>
   1538c:	add	r3, pc, r3
   15390:	mov	r0, r3
   15394:	bl	13264 <error@@Base>
   15398:	ldr	r3, [fp, #-8]
   1539c:	sxtb	r3, r3
   153a0:	mov	r0, r3
   153a4:	sub	sp, fp, #4
   153a8:	ldr	fp, [sp]
   153ac:	add	sp, sp, #4
   153b0:	pop	{pc}		; (ldr pc, [sp], #4)
   153b4:	andeq	r4, r0, r0, lsr r2
   153b8:	str	fp, [sp, #-8]!
   153bc:	str	lr, [sp, #4]
   153c0:	add	fp, sp, #4
   153c4:	sub	sp, sp, #16
   153c8:	str	r0, [fp, #-16]
   153cc:	ldr	r0, [fp, #-16]
   153d0:	bl	109a4 <utf8proc_get_property@plt>
   153d4:	str	r0, [fp, #-8]
   153d8:	ldr	r3, [fp, #-16]
   153dc:	cmp	r3, #32
   153e0:	bne	153ec <error@@Base+0x2188>
   153e4:	mov	r3, #1
   153e8:	b	15418 <error@@Base+0x21b4>
   153ec:	ldr	r3, [fp, #-8]
   153f0:	ldrsh	r3, [r3]
   153f4:	cmp	r3, #0
   153f8:	ble	15414 <error@@Base+0x21b0>
   153fc:	cmp	r3, #22
   15400:	ble	1540c <error@@Base+0x21a8>
   15404:	cmp	r3, #29
   15408:	bne	15414 <error@@Base+0x21b0>
   1540c:	mov	r3, #1
   15410:	b	15418 <error@@Base+0x21b4>
   15414:	mov	r3, #0
   15418:	mov	r0, r3
   1541c:	sub	sp, fp, #4
   15420:	ldr	fp, [sp]
   15424:	add	sp, sp, #4
   15428:	pop	{pc}		; (ldr pc, [sp], #4)
   1542c:	str	fp, [sp, #-8]!
   15430:	str	lr, [sp, #4]
   15434:	add	fp, sp, #4
   15438:	sub	sp, sp, #8
   1543c:	str	r0, [fp, #-8]
   15440:	ldr	r0, [fp, #-8]
   15444:	bl	10a70 <utf8proc_category@plt>
   15448:	mov	r3, r0
   1544c:	sub	r3, r3, #6
   15450:	cmp	r3, #2
   15454:	bhi	15460 <error@@Base+0x21fc>
   15458:	mov	r3, #1
   1545c:	b	15464 <error@@Base+0x2200>
   15460:	mov	r3, #0
   15464:	mov	r0, r3
   15468:	sub	sp, fp, #4
   1546c:	ldr	fp, [sp]
   15470:	add	sp, sp, #4
   15474:	pop	{pc}		; (ldr pc, [sp], #4)
   15478:	str	fp, [sp, #-8]!
   1547c:	str	lr, [sp, #4]
   15480:	add	fp, sp, #4
   15484:	sub	sp, sp, #24
   15488:	str	r1, [fp, #-20]	; 0xffffffec
   1548c:	str	r2, [fp, #-24]	; 0xffffffe8
   15490:	mov	r2, r3
   15494:	mov	r3, r0
   15498:	strb	r3, [fp, #-16]
   1549c:	mov	r3, r2
   154a0:	strb	r3, [fp, #-28]	; 0xffffffe4
   154a4:	mov	r3, #0
   154a8:	strh	r3, [fp, #-6]
   154ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154b0:	str	r3, [fp, #-12]
   154b4:	ldrb	r3, [fp, #-16]
   154b8:	cmp	r3, #0
   154bc:	beq	154e4 <error@@Base+0x2280>
   154c0:	ldr	r1, [fp, #-12]
   154c4:	mov	r0, #94	; 0x5e
   154c8:	bl	15354 <error@@Base+0x20f0>
   154cc:	mov	r3, r0
   154d0:	uxth	r2, r3
   154d4:	ldrh	r3, [fp, #-6]
   154d8:	add	r3, r2, r3
   154dc:	uxth	r3, r3
   154e0:	strh	r3, [fp, #-6]
   154e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   154e8:	cmp	r3, #10
   154ec:	bne	1552c <error@@Base+0x22c8>
   154f0:	ldrsh	r3, [fp, #-6]
   154f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   154f8:	add	r2, r2, r3
   154fc:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   15500:	cmp	r3, #0
   15504:	beq	15514 <error@@Base+0x22b0>
   15508:	ldr	r3, [pc, #304]	; 15640 <error@@Base+0x23dc>
   1550c:	add	r3, pc, r3
   15510:	b	1551c <error@@Base+0x22b8>
   15514:	ldr	r3, [pc, #296]	; 15644 <error@@Base+0x23e0>
   15518:	add	r3, pc, r3
   1551c:	mov	r1, r3
   15520:	mov	r0, r2
   15524:	bl	10ac4 <sprintf@plt>
   15528:	b	1562c <error@@Base+0x23c8>
   1552c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15530:	bl	153b8 <error@@Base+0x2154>
   15534:	mov	r3, r0
   15538:	cmp	r3, #0
   1553c:	beq	155dc <error@@Base+0x2378>
   15540:	ldr	r0, [fp, #-20]	; 0xffffffec
   15544:	bl	1542c <error@@Base+0x21c8>
   15548:	mov	r3, r0
   1554c:	cmp	r3, #0
   15550:	beq	15584 <error@@Base+0x2320>
   15554:	ldrsh	r3, [fp, #-6]
   15558:	ldr	r2, [fp, #-12]
   1555c:	add	r3, r2, r3
   15560:	mov	r1, r3
   15564:	movw	r0, #9676	; 0x25cc
   15568:	bl	15354 <error@@Base+0x20f0>
   1556c:	mov	r3, r0
   15570:	uxth	r2, r3
   15574:	ldrh	r3, [fp, #-6]
   15578:	add	r3, r2, r3
   1557c:	uxth	r3, r3
   15580:	strh	r3, [fp, #-6]
   15584:	ldrsh	r3, [fp, #-6]
   15588:	ldr	r2, [fp, #-12]
   1558c:	add	r3, r2, r3
   15590:	mov	r1, r3
   15594:	ldr	r0, [fp, #-20]	; 0xffffffec
   15598:	bl	15354 <error@@Base+0x20f0>
   1559c:	mov	r3, r0
   155a0:	uxth	r2, r3
   155a4:	ldrh	r3, [fp, #-6]
   155a8:	add	r3, r2, r3
   155ac:	uxth	r3, r3
   155b0:	strh	r3, [fp, #-6]
   155b4:	ldrsh	r2, [fp, #-6]
   155b8:	uxth	r3, r2
   155bc:	add	r3, r3, #1
   155c0:	uxth	r3, r3
   155c4:	strh	r3, [fp, #-6]
   155c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155cc:	add	r3, r3, r2
   155d0:	mov	r2, #0
   155d4:	strb	r2, [r3]
   155d8:	b	1562c <error@@Base+0x23c8>
   155dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e0:	cmp	r3, #255	; 0xff
   155e4:	bhi	1560c <error@@Base+0x23a8>
   155e8:	ldrsh	r3, [fp, #-6]
   155ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155f0:	add	r3, r2, r3
   155f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   155f8:	ldr	r1, [pc, #72]	; 15648 <error@@Base+0x23e4>
   155fc:	add	r1, pc, r1
   15600:	mov	r0, r3
   15604:	bl	10ac4 <sprintf@plt>
   15608:	b	1562c <error@@Base+0x23c8>
   1560c:	ldrsh	r3, [fp, #-6]
   15610:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15614:	add	r3, r2, r3
   15618:	ldr	r2, [fp, #-20]	; 0xffffffec
   1561c:	ldr	r1, [pc, #40]	; 1564c <error@@Base+0x23e8>
   15620:	add	r1, pc, r1
   15624:	mov	r0, r3
   15628:	bl	10ac4 <sprintf@plt>
   1562c:	nop	{0}
   15630:	sub	sp, fp, #4
   15634:	ldr	fp, [sp]
   15638:	add	sp, sp, #4
   1563c:	pop	{pc}		; (ldr pc, [sp], #4)
   15640:	andeq	r4, r0, r8, asr #1
   15644:	andeq	r4, r0, r4, asr #1
   15648:	andeq	r3, r0, r4, ror #31
   1564c:	andeq	r3, r0, r8, asr #31
   15650:	str	fp, [sp, #-8]!
   15654:	str	lr, [sp, #4]
   15658:	add	fp, sp, #4
   1565c:	sub	sp, sp, #40	; 0x28
   15660:	str	r0, [fp, #-32]	; 0xffffffe0
   15664:	str	r1, [fp, #-36]	; 0xffffffdc
   15668:	str	r2, [fp, #-40]	; 0xffffffd8
   1566c:	ldr	r3, [pc, #228]	; 15758 <error@@Base+0x24f4>
   15670:	add	r3, pc, r3
   15674:	mov	r1, r3
   15678:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1567c:	bl	12790 <__assert_fail@plt+0x1c78>
   15680:	str	r0, [fp, #-12]
   15684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15688:	cmp	r3, #0
   1568c:	beq	156e4 <error@@Base+0x2480>
   15690:	ldr	r3, [fp, #-12]
   15694:	mov	r2, #55	; 0x37
   15698:	mov	r1, #1
   1569c:	ldr	r0, [pc, #184]	; 1575c <error@@Base+0x24f8>
   156a0:	add	r0, pc, r0
   156a4:	bl	10a04 <fwrite@plt>
   156a8:	ldr	r3, [fp, #-12]
   156ac:	mov	r2, #55	; 0x37
   156b0:	mov	r1, #1
   156b4:	ldr	r0, [pc, #164]	; 15760 <error@@Base+0x24fc>
   156b8:	add	r0, pc, r0
   156bc:	bl	10a04 <fwrite@plt>
   156c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   156c4:	ldr	r0, [fp, #-12]
   156c8:	blx	r3
   156cc:	ldr	r3, [fp, #-12]
   156d0:	mov	r2, #55	; 0x37
   156d4:	mov	r1, #1
   156d8:	ldr	r0, [pc, #132]	; 15764 <error@@Base+0x2500>
   156dc:	add	r0, pc, r0
   156e0:	bl	10a04 <fwrite@plt>
   156e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   156e8:	ldr	r3, [r3]
   156ec:	str	r3, [fp, #-8]
   156f0:	b	15730 <error@@Base+0x24cc>
   156f4:	ldr	r3, [fp, #-8]
   156f8:	ldrb	r3, [r3, #8]
   156fc:	mov	r0, r3
   15700:	ldr	r3, [fp, #-8]
   15704:	ldr	r1, [r3, #12]
   15708:	sub	r2, fp, #24
   1570c:	mov	r3, #0
   15710:	bl	15478 <error@@Base+0x2214>
   15714:	sub	r3, fp, #24
   15718:	ldr	r1, [fp, #-12]
   1571c:	mov	r0, r3
   15720:	bl	10ae8 <fputs@plt>
   15724:	ldr	r3, [fp, #-8]
   15728:	ldr	r3, [r3, #4]
   1572c:	str	r3, [fp, #-8]
   15730:	ldr	r3, [fp, #-8]
   15734:	cmp	r3, #0
   15738:	bne	156f4 <error@@Base+0x2490>
   1573c:	ldr	r0, [fp, #-12]
   15740:	bl	12870 <__assert_fail@plt+0x1d58>
   15744:	nop	{0}
   15748:	sub	sp, fp, #4
   1574c:	ldr	fp, [sp]
   15750:	add	sp, sp, #4
   15754:	pop	{pc}		; (ldr pc, [sp], #4)
   15758:	andeq	r3, r0, r0, lsl #31
   1575c:	andeq	r3, r0, ip, asr lr
   15760:	andeq	r3, r0, ip, ror lr
   15764:	andeq	r3, r0, r8, asr lr
   15768:	str	fp, [sp, #-8]!
   1576c:	str	lr, [sp, #4]
   15770:	add	fp, sp, #4
   15774:	sub	sp, sp, #24
   15778:	str	r0, [fp, #-24]	; 0xffffffe8
   1577c:	str	r1, [fp, #-28]	; 0xffffffe4
   15780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15784:	str	r3, [fp, #-8]
   15788:	mov	r3, #0
   1578c:	str	r3, [fp, #-12]
   15790:	mov	r3, #0
   15794:	str	r3, [fp, #-16]
   15798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1579c:	str	r3, [fp, #-8]
   157a0:	b	157f4 <error@@Base+0x2590>
   157a4:	sub	r3, fp, #16
   157a8:	mov	r2, r3
   157ac:	mvn	r1, #0
   157b0:	ldr	r0, [fp, #-8]
   157b4:	bl	10a1c <utf8proc_iterate@plt>
   157b8:	str	r0, [fp, #-12]
   157bc:	ldr	r3, [fp, #-12]
   157c0:	cmp	r3, #0
   157c4:	bgt	157d0 <error@@Base+0x256c>
   157c8:	mov	r3, #0
   157cc:	b	15808 <error@@Base+0x25a4>
   157d0:	ldr	r3, [fp, #-16]
   157d4:	mov	r2, r3
   157d8:	mov	r1, #0
   157dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e0:	bl	14c40 <error@@Base+0x19dc>
   157e4:	ldr	r3, [fp, #-12]
   157e8:	ldr	r2, [fp, #-8]
   157ec:	add	r3, r2, r3
   157f0:	str	r3, [fp, #-8]
   157f4:	ldr	r3, [fp, #-8]
   157f8:	ldrb	r3, [r3]
   157fc:	cmp	r3, #0
   15800:	bne	157a4 <error@@Base+0x2540>
   15804:	mov	r3, #1
   15808:	mov	r0, r3
   1580c:	sub	sp, fp, #4
   15810:	ldr	fp, [sp]
   15814:	add	sp, sp, #4
   15818:	pop	{pc}		; (ldr pc, [sp], #4)
   1581c:	str	fp, [sp, #-8]!
   15820:	str	lr, [sp, #4]
   15824:	add	fp, sp, #4
   15828:	sub	sp, sp, #24
   1582c:	str	r0, [fp, #-24]	; 0xffffffe8
   15830:	str	r1, [fp, #-28]	; 0xffffffe4
   15834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15838:	str	r3, [fp, #-8]
   1583c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15840:	str	r3, [fp, #-12]
   15844:	ldr	r3, [pc, #524]	; 15a58 <error@@Base+0x27f4>
   15848:	add	r3, pc, r3
   1584c:	ldr	r2, [r3]
   15850:	ldr	r3, [fp, #-8]
   15854:	lsl	r3, r3, #2
   15858:	add	r3, r2, r3
   1585c:	ldr	r3, [r3]
   15860:	str	r3, [fp, #-16]
   15864:	b	159c4 <error@@Base+0x2760>
   15868:	ldr	r3, [fp, #-12]
   1586c:	sub	r3, r3, #1
   15870:	str	r3, [fp, #-12]
   15874:	ldr	r2, [fp, #-8]
   15878:	ldr	r3, [fp, #-12]
   1587c:	cmp	r2, r3
   15880:	bge	158c4 <error@@Base+0x2660>
   15884:	ldr	r3, [pc, #464]	; 15a5c <error@@Base+0x27f8>
   15888:	add	r3, pc, r3
   1588c:	ldr	r3, [r3]
   15890:	ldr	r2, [pc, #456]	; 15a60 <error@@Base+0x27fc>
   15894:	add	r2, pc, r2
   15898:	ldr	r1, [r2]
   1589c:	ldr	r2, [fp, #-12]
   158a0:	lsl	r2, r2, #2
   158a4:	add	r2, r1, r2
   158a8:	ldr	r2, [r2]
   158ac:	mov	r1, r2
   158b0:	ldr	r0, [fp, #-16]
   158b4:	blx	r3
   158b8:	mov	r3, r0
   158bc:	cmp	r3, #0
   158c0:	blt	15868 <error@@Base+0x2604>
   158c4:	ldr	r2, [fp, #-8]
   158c8:	ldr	r3, [fp, #-12]
   158cc:	cmp	r2, r3
   158d0:	beq	15924 <error@@Base+0x26c0>
   158d4:	ldr	r3, [pc, #392]	; 15a64 <error@@Base+0x2800>
   158d8:	add	r3, pc, r3
   158dc:	ldr	r2, [r3]
   158e0:	ldr	r3, [fp, #-12]
   158e4:	lsl	r3, r3, #2
   158e8:	add	r2, r2, r3
   158ec:	ldr	r3, [pc, #372]	; 15a68 <error@@Base+0x2804>
   158f0:	add	r3, pc, r3
   158f4:	ldr	r1, [r3]
   158f8:	ldr	r3, [fp, #-8]
   158fc:	add	r0, r3, #1
   15900:	str	r0, [fp, #-8]
   15904:	lsl	r3, r3, #2
   15908:	add	r3, r1, r3
   1590c:	ldr	r2, [r2]
   15910:	str	r2, [r3]
   15914:	b	15924 <error@@Base+0x26c0>
   15918:	ldr	r3, [fp, #-8]
   1591c:	add	r3, r3, #1
   15920:	str	r3, [fp, #-8]
   15924:	ldr	r2, [fp, #-8]
   15928:	ldr	r3, [fp, #-12]
   1592c:	cmp	r2, r3
   15930:	bge	15974 <error@@Base+0x2710>
   15934:	ldr	r3, [pc, #304]	; 15a6c <error@@Base+0x2808>
   15938:	add	r3, pc, r3
   1593c:	ldr	r3, [r3]
   15940:	ldr	r2, [pc, #296]	; 15a70 <error@@Base+0x280c>
   15944:	add	r2, pc, r2
   15948:	ldr	r1, [r2]
   1594c:	ldr	r2, [fp, #-8]
   15950:	lsl	r2, r2, #2
   15954:	add	r2, r1, r2
   15958:	ldr	r2, [r2]
   1595c:	mov	r1, r2
   15960:	ldr	r0, [fp, #-16]
   15964:	blx	r3
   15968:	mov	r3, r0
   1596c:	cmp	r3, #0
   15970:	bgt	15918 <error@@Base+0x26b4>
   15974:	ldr	r2, [fp, #-8]
   15978:	ldr	r3, [fp, #-12]
   1597c:	cmp	r2, r3
   15980:	beq	159c4 <error@@Base+0x2760>
   15984:	ldr	r3, [pc, #232]	; 15a74 <error@@Base+0x2810>
   15988:	add	r3, pc, r3
   1598c:	ldr	r2, [r3]
   15990:	ldr	r3, [fp, #-8]
   15994:	lsl	r3, r3, #2
   15998:	add	r2, r2, r3
   1599c:	ldr	r3, [pc, #212]	; 15a78 <error@@Base+0x2814>
   159a0:	add	r3, pc, r3
   159a4:	ldr	r1, [r3]
   159a8:	ldr	r3, [fp, #-12]
   159ac:	sub	r0, r3, #1
   159b0:	str	r0, [fp, #-12]
   159b4:	lsl	r3, r3, #2
   159b8:	add	r3, r1, r3
   159bc:	ldr	r2, [r2]
   159c0:	str	r2, [r3]
   159c4:	ldr	r2, [fp, #-8]
   159c8:	ldr	r3, [fp, #-12]
   159cc:	cmp	r2, r3
   159d0:	blt	15874 <error@@Base+0x2610>
   159d4:	ldr	r3, [pc, #160]	; 15a7c <error@@Base+0x2818>
   159d8:	add	r3, pc, r3
   159dc:	ldr	r2, [r3]
   159e0:	ldr	r3, [fp, #-12]
   159e4:	lsl	r3, r3, #2
   159e8:	add	r3, r2, r3
   159ec:	ldr	r2, [fp, #-16]
   159f0:	str	r2, [r3]
   159f4:	ldr	r3, [fp, #-12]
   159f8:	sub	r3, r3, #1
   159fc:	str	r3, [fp, #-12]
   15a00:	ldr	r2, [fp, #-12]
   15a04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a08:	cmp	r2, r3
   15a0c:	ble	15a1c <error@@Base+0x27b8>
   15a10:	ldr	r1, [fp, #-12]
   15a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a18:	bl	1581c <error@@Base+0x25b8>
   15a1c:	ldr	r3, [fp, #-8]
   15a20:	add	r3, r3, #1
   15a24:	str	r3, [fp, #-8]
   15a28:	ldr	r2, [fp, #-8]
   15a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a30:	cmp	r2, r3
   15a34:	bge	15a44 <error@@Base+0x27e0>
   15a38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a3c:	ldr	r0, [fp, #-8]
   15a40:	bl	1581c <error@@Base+0x25b8>
   15a44:	nop	{0}
   15a48:	sub	sp, fp, #4
   15a4c:	ldr	fp, [sp]
   15a50:	add	sp, sp, #4
   15a54:	pop	{pc}		; (ldr pc, [sp], #4)
   15a58:			; <UNDEFINED> instruction: 0x00016ab8
   15a5c:	andeq	r6, r1, ip, ror sl
   15a60:	andeq	r6, r1, ip, ror #20
   15a64:	andeq	r6, r1, r8, lsr #20
   15a68:	andeq	r6, r1, r0, lsl sl
   15a6c:	andeq	r6, r1, ip, asr #19
   15a70:			; <UNDEFINED> instruction: 0x000169bc
   15a74:	andeq	r6, r1, r8, ror r9
   15a78:	andeq	r6, r1, r0, ror #18
   15a7c:	andeq	r6, r1, r8, lsr #18
   15a80:	str	fp, [sp, #-8]!
   15a84:	str	lr, [sp, #4]
   15a88:	add	fp, sp, #4
   15a8c:	sub	sp, sp, #16
   15a90:	str	r0, [fp, #-8]
   15a94:	str	r1, [fp, #-12]
   15a98:	str	r2, [fp, #-16]
   15a9c:	ldr	r3, [fp, #-8]
   15aa0:	cmp	r3, #1
   15aa4:	ble	15ae0 <error@@Base+0x287c>
   15aa8:	ldr	r3, [pc, #68]	; 15af4 <error@@Base+0x2890>
   15aac:	add	r3, pc, r3
   15ab0:	ldr	r2, [fp, #-12]
   15ab4:	str	r2, [r3]
   15ab8:	ldr	r3, [pc, #56]	; 15af8 <error@@Base+0x2894>
   15abc:	add	r3, pc, r3
   15ac0:	ldr	r2, [fp, #-16]
   15ac4:	str	r2, [r3]
   15ac8:	ldr	r3, [fp, #-8]
   15acc:	sub	r3, r3, #1
   15ad0:	mov	r1, r3
   15ad4:	mov	r0, #0
   15ad8:	bl	1581c <error@@Base+0x25b8>
   15adc:	b	15ae4 <error@@Base+0x2880>
   15ae0:	nop	{0}
   15ae4:	sub	sp, fp, #4
   15ae8:	ldr	fp, [sp]
   15aec:	add	sp, sp, #4
   15af0:	pop	{pc}		; (ldr pc, [sp], #4)
   15af4:	andeq	r6, r1, r4, asr r8
   15af8:	andeq	r6, r1, r8, asr #16
   15afc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b00:	mov	r7, r0
   15b04:	ldr	r6, [pc, #72]	; 15b54 <error@@Base+0x28f0>
   15b08:	ldr	r5, [pc, #72]	; 15b58 <error@@Base+0x28f4>
   15b0c:	add	r6, pc, r6
   15b10:	add	r5, pc, r5
   15b14:	sub	r6, r6, r5
   15b18:	mov	r8, r1
   15b1c:	mov	r9, r2
   15b20:	bl	10954 <calloc@plt-0x20>
   15b24:	asrs	r6, r6, #2
   15b28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b2c:	mov	r4, #0
   15b30:	add	r4, r4, #1
   15b34:	ldr	r3, [r5], #4
   15b38:	mov	r2, r9
   15b3c:	mov	r1, r8
   15b40:	mov	r0, r7
   15b44:	blx	r3
   15b48:	cmp	r6, r4
   15b4c:	bne	15b30 <error@@Base+0x28cc>
   15b50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b54:	strdeq	r4, [r1], -r0
   15b58:	andeq	r4, r1, r8, ror #7
   15b5c:	bx	lr
   15b60:	mov	r2, r1
   15b64:	mov	r1, r0
   15b68:	mov	r0, #3
   15b6c:	b	109f8 <__xstat@plt>

Disassembly of section .fini:

00015b70 <.fini>:
   15b70:	push	{r3, lr}
   15b74:	pop	{r3, pc}
