
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010760 <.init>:
   10760:	push	{r3, lr}
   10764:	bl	10984 <abort@plt+0xe4>
   10768:	pop	{r3, pc}

Disassembly of section .plt:

0001076c <calloc@plt-0x14>:
   1076c:	push	{lr}		; (str lr, [sp, #-4]!)
   10770:	ldr	lr, [pc, #4]	; 1077c <calloc@plt-0x4>
   10774:	add	lr, pc, lr
   10778:	ldr	pc, [lr, #8]!
   1077c:	andeq	r2, r1, r4, lsl #17

00010780 <calloc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2180]!	; 0x884

0001078c <strcmp@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2172]!	; 0x87c

00010798 <strtol@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2164]!	; 0x874

000107a4 <printf@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2156]!	; 0x86c

000107b0 <fopen@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2148]!	; 0x864

000107bc <free@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2140]!	; 0x85c

000107c8 <fgets@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2132]!	; 0x854

000107d4 <strdup@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2124]!	; 0x84c

000107e0 <unlink@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2116]!	; 0x844

000107ec <__xstat@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2108]!	; 0x83c

000107f8 <fwrite@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2100]!	; 0x834

00010804 <__libc_start_main@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2092]!	; 0x82c

00010810 <__sysv_signal@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2084]!	; 0x824

0001081c <__gmon_start__@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2076]!	; 0x81c

00010828 <getpid@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2068]!	; 0x814

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2060]!	; 0x80c

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2052]!	; 0x804

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2044]!	; 0x7fc

00010858 <sqrt@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2036]!	; 0x7f4

00010864 <__isoc99_sscanf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010870 <fclose@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2020]!	; 0x7e4

0001087c <fputc@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #2012]!	; 0x7dc

00010888 <sprintf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #2004]!	; 0x7d4

00010894 <strncmp@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1996]!	; 0x7cc

000108a0 <abort@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1988]!	; 0x7c4

Disassembly of section .text:

000108b0 <error@@Base-0x151c>:
   108b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108b4:	sub	sp, sp, #8
   108b8:	add	ip, sp, #8
   108bc:	mov	r3, #0
   108c0:	str	r0, [ip, #-4]!
   108c4:	ldr	r2, [pc, #108]	; 10938 <abort@plt+0x98>
   108c8:	mov	r0, ip
   108cc:	mov	r6, r1
   108d0:	bl	11f04 <error@@Base+0x138>
   108d4:	ldr	r3, [sp, #4]
   108d8:	cmp	r3, #1
   108dc:	ble	10930 <abort@plt+0x90>
   108e0:	ldr	r4, [pc, #84]	; 1093c <abort@plt+0x9c>
   108e4:	ldr	r9, [pc, #84]	; 10940 <abort@plt+0xa0>
   108e8:	sub	r6, r6, #4
   108ec:	mov	r8, r4
   108f0:	mov	r5, #0
   108f4:	ldr	r1, [r6, #4]!
   108f8:	mov	r0, r8
   108fc:	ldm	r4, {r7, sl}
   10900:	bl	11500 <abort@plt+0xc60>
   10904:	ldm	r4, {r1, r2}
   10908:	mov	r0, r9
   1090c:	add	r5, r5, #1
   10910:	sub	r2, r2, sl
   10914:	sub	r1, r1, r7
   10918:	bl	10b68 <abort@plt+0x2c8>
   1091c:	ldr	r3, [sp, #4]
   10920:	cmp	r3, r5
   10924:	bgt	108f4 <abort@plt+0x54>
   10928:	bl	10aa8 <abort@plt+0x208>
   1092c:	bl	11d74 <abort@plt+0x14d4>
   10930:	ldr	r0, [pc, #12]	; 10944 <abort@plt+0xa4>
   10934:	bl	11dcc <error@@Base>
   10938:	andeq	r2, r1, ip, lsr #13
   1093c:	andeq	r3, r2, r0, lsl r1
   10940:	andeq	r7, r2, r0, ror #7
   10944:	ldrdeq	r2, [r1], -ip
   10948:	mov	fp, #0
   1094c:	mov	lr, #0
   10950:	pop	{r1}		; (ldr r1, [sp], #4)
   10954:	mov	r2, sp
   10958:	push	{r2}		; (str r2, [sp, #-4]!)
   1095c:	push	{r0}		; (str r0, [sp, #-4]!)
   10960:	ldr	ip, [pc, #16]	; 10978 <abort@plt+0xd8>
   10964:	push	{ip}		; (str ip, [sp, #-4]!)
   10968:	ldr	r0, [pc, #12]	; 1097c <abort@plt+0xdc>
   1096c:	ldr	r3, [pc, #12]	; 10980 <abort@plt+0xe0>
   10970:	bl	10804 <__libc_start_main@plt>
   10974:	bl	108a0 <abort@plt>
   10978:	strdeq	r2, [r1], -ip
   1097c:			; <UNDEFINED> instruction: 0x000108b0
   10980:	muleq	r1, ip, r5
   10984:	ldr	r3, [pc, #20]	; 109a0 <abort@plt+0x100>
   10988:	ldr	r2, [pc, #20]	; 109a4 <abort@plt+0x104>
   1098c:	add	r3, pc, r3
   10990:	ldr	r2, [r3, r2]
   10994:	cmp	r2, #0
   10998:	bxeq	lr
   1099c:	b	1081c <__gmon_start__@plt>
   109a0:	andeq	r2, r1, ip, ror #12
   109a4:	andeq	r0, r0, r0, ror r0
   109a8:	ldr	r3, [pc, #28]	; 109cc <abort@plt+0x12c>
   109ac:	ldr	r0, [pc, #28]	; 109d0 <abort@plt+0x130>
   109b0:	sub	r3, r3, r0
   109b4:	cmp	r3, #6
   109b8:	bxls	lr
   109bc:	ldr	r3, [pc, #16]	; 109d4 <abort@plt+0x134>
   109c0:	cmp	r3, #0
   109c4:	bxeq	lr
   109c8:	bx	r3
   109cc:	andeq	r3, r2, r7, lsl #1
   109d0:	andeq	r3, r2, r4, lsl #1
   109d4:	andeq	r0, r0, r0
   109d8:	ldr	r1, [pc, #36]	; 10a04 <abort@plt+0x164>
   109dc:	ldr	r0, [pc, #36]	; 10a08 <abort@plt+0x168>
   109e0:	sub	r1, r1, r0
   109e4:	asr	r1, r1, #2
   109e8:	add	r1, r1, r1, lsr #31
   109ec:	asrs	r1, r1, #1
   109f0:	bxeq	lr
   109f4:	ldr	r3, [pc, #16]	; 10a0c <abort@plt+0x16c>
   109f8:	cmp	r3, #0
   109fc:	bxeq	lr
   10a00:	bx	r3
   10a04:	andeq	r3, r2, r4, lsl #1
   10a08:	andeq	r3, r2, r4, lsl #1
   10a0c:	andeq	r0, r0, r0
   10a10:	push	{r4, lr}
   10a14:	ldr	r4, [pc, #24]	; 10a34 <abort@plt+0x194>
   10a18:	ldrb	r3, [r4]
   10a1c:	cmp	r3, #0
   10a20:	popne	{r4, pc}
   10a24:	bl	109a8 <abort@plt+0x108>
   10a28:	mov	r3, #1
   10a2c:	strb	r3, [r4]
   10a30:	pop	{r4, pc}
   10a34:	muleq	r2, r8, r0
   10a38:	ldr	r0, [pc, #40]	; 10a68 <abort@plt+0x1c8>
   10a3c:	ldr	r3, [r0]
   10a40:	cmp	r3, #0
   10a44:	bne	10a4c <abort@plt+0x1ac>
   10a48:	b	109d8 <abort@plt+0x138>
   10a4c:	ldr	r3, [pc, #24]	; 10a6c <abort@plt+0x1cc>
   10a50:	cmp	r3, #0
   10a54:	beq	10a48 <abort@plt+0x1a8>
   10a58:	push	{r4, lr}
   10a5c:	blx	r3
   10a60:	pop	{r4, lr}
   10a64:	b	109d8 <abort@plt+0x138>
   10a68:	andeq	r2, r2, r4, lsl #30
   10a6c:	andeq	r0, r0, r0
   10a70:	push	{r4, r5, r6, lr}
   10a74:	mov	r1, r0
   10a78:	ldr	r4, [pc, #32]	; 10aa0 <abort@plt+0x200>
   10a7c:	mov	r0, r4
   10a80:	ldm	r4, {r5, r6}
   10a84:	bl	11500 <abort@plt+0xc60>
   10a88:	ldm	r4, {r1, r2}
   10a8c:	ldr	r0, [pc, #16]	; 10aa4 <abort@plt+0x204>
   10a90:	sub	r2, r2, r6
   10a94:	sub	r1, r1, r5
   10a98:	pop	{r4, r5, r6, lr}
   10a9c:	b	10b68 <abort@plt+0x2c8>
   10aa0:	andeq	r3, r2, r0, lsl r1
   10aa4:	andeq	r7, r2, r0, ror #7
   10aa8:	push	{r4, r5, lr}
   10aac:	sub	sp, sp, #36	; 0x24
   10ab0:	ldr	r5, [pc, #144]	; 10b48 <abort@plt+0x2a8>
   10ab4:	ldr	r4, [pc, #144]	; 10b4c <abort@plt+0x2ac>
   10ab8:	add	r2, sp, #24
   10abc:	mov	r0, r5
   10ac0:	add	r1, sp, #16
   10ac4:	bl	10bb4 <abort@plt+0x314>
   10ac8:	ldr	r1, [r5, #12]
   10acc:	ldr	r0, [pc, #124]	; 10b50 <abort@plt+0x2b0>
   10ad0:	bl	107a4 <printf@plt>
   10ad4:	ldr	r1, [r4]
   10ad8:	ldr	r0, [pc, #116]	; 10b54 <abort@plt+0x2b4>
   10adc:	bl	107a4 <printf@plt>
   10ae0:	ldr	r1, [r4, #4]
   10ae4:	ldr	r0, [pc, #108]	; 10b58 <abort@plt+0x2b8>
   10ae8:	bl	107a4 <printf@plt>
   10aec:	ldm	r4, {r2, r3}
   10af0:	vldr	d5, [pc, #72]	; 10b40 <abort@plt+0x2a0>
   10af4:	ldr	r0, [pc, #96]	; 10b5c <abort@plt+0x2bc>
   10af8:	sub	r3, r2, r3
   10afc:	vmov	s15, r2
   10b00:	vmov	s14, r3
   10b04:	vcvt.f64.s32	d6, s15
   10b08:	vcvt.f64.s32	d7, s14
   10b0c:	vmul.f64	d7, d7, d5
   10b10:	vdiv.f64	d5, d7, d6
   10b14:	vmov	r2, r3, d5
   10b18:	bl	107a4 <printf@plt>
   10b1c:	ldrd	r4, [sp, #24]
   10b20:	ldr	r1, [pc, #56]	; 10b60 <abort@plt+0x2c0>
   10b24:	ldrd	r2, [sp, #16]
   10b28:	strd	r4, [sp]
   10b2c:	str	r1, [sp, #8]
   10b30:	ldr	r0, [pc, #44]	; 10b64 <abort@plt+0x2c4>
   10b34:	bl	107a4 <printf@plt>
   10b38:	add	sp, sp, #36	; 0x24
   10b3c:	pop	{r4, r5, pc}
   10b40:	andeq	r0, r0, r0
   10b44:	subsmi	r0, r9, r0
   10b48:	andeq	r7, r2, r0, ror #7
   10b4c:	andeq	r3, r2, r0, lsl r1
   10b50:	andeq	r2, r1, ip, lsl #12
   10b54:	andeq	r2, r1, r4, lsr #12
   10b58:	andeq	r2, r1, r4, lsr r6
   10b5c:	andeq	r2, r1, ip, asr #12
   10b60:	andeq	r2, r1, r8, ror r6
   10b64:	andeq	r2, r1, r0, ror #12
   10b68:	push	{r4, r5, r6, lr}
   10b6c:	mov	r4, r0
   10b70:	mov	r6, r1
   10b74:	mov	r0, #1
   10b78:	mov	r1, #32
   10b7c:	mov	r5, r2
   10b80:	bl	11e08 <error@@Base+0x3c>
   10b84:	str	r5, [r0, #12]
   10b88:	str	r6, [r0, #8]
   10b8c:	ldr	r3, [r4, #28]
   10b90:	mov	r1, r0
   10b94:	ldr	r0, [r4, #24]
   10b98:	add	r2, r3, r5
   10b9c:	add	r0, r0, r6
   10ba0:	str	r0, [r4, #24]
   10ba4:	str	r2, [r4, #28]
   10ba8:	mov	r0, r4
   10bac:	pop	{r4, r5, r6, lr}
   10bb0:	b	121e8 <error@@Base+0x41c>
   10bb4:	push	{r4, r5, r6, lr}
   10bb8:	sub	sp, sp, #24
   10bbc:	ldr	r4, [r0]
   10bc0:	cmp	r4, #0
   10bc4:	beq	10d68 <abort@plt+0x4c8>
   10bc8:	mov	r3, r4
   10bcc:	mov	ip, #0
   10bd0:	ldmib	r3, {r3, lr}
   10bd4:	cmp	lr, #0
   10bd8:	addgt	ip, ip, #1
   10bdc:	cmp	r3, #0
   10be0:	bne	10bd0 <abort@plt+0x330>
   10be4:	cmp	ip, #1
   10be8:	ble	10d68 <abort@plt+0x4c8>
   10bec:	ldr	r5, [r0, #24]
   10bf0:	ldr	r6, [r0, #28]
   10bf4:	vldr	d6, [pc, #372]	; 10d70 <abort@plt+0x4d0>
   10bf8:	sub	r3, r5, r6
   10bfc:	vmov	s15, r5
   10c00:	vmov	s14, r3
   10c04:	vldr	s7, [r0, #12]
   10c08:	vmov.f64	d0, d6
   10c0c:	vcvt.f64.s32	d5, s15
   10c10:	vcvt.f64.s32	d7, s14
   10c14:	vmov	r3, s7
   10c18:	vcvt.f64.s32	d2, s7
   10c1c:	vldr	d4, [pc, #340]	; 10d78 <abort@plt+0x4d8>
   10c20:	mov	ip, r4
   10c24:	sub	r3, r3, #1
   10c28:	vmov	s6, r3
   10c2c:	vmul.f64	d7, d7, d6
   10c30:	vcvt.f64.s32	d3, s6
   10c34:	vdiv.f64	d1, d7, d5
   10c38:	vstr	d1, [r0, #32]
   10c3c:	vmul.f64	d1, d1, d2
   10c40:	ldr	lr, [ip, #8]
   10c44:	ldr	r3, [ip, #12]
   10c48:	sub	lr, r5, lr
   10c4c:	sub	r3, r6, r3
   10c50:	sub	r3, lr, r3
   10c54:	vmov	s15, lr
   10c58:	vmov	s14, r3
   10c5c:	vcvt.f64.s32	d6, s15
   10c60:	vcvt.f64.s32	d7, s14
   10c64:	vmul.f64	d7, d7, d0
   10c68:	vdiv.f64	d5, d7, d6
   10c6c:	vmov.f64	d7, d1
   10c70:	vmls.f64	d7, d3, d5
   10c74:	vstr	d5, [ip, #16]
   10c78:	vadd.f64	d4, d4, d5
   10c7c:	vstr	d7, [ip, #24]
   10c80:	ldr	ip, [ip, #4]
   10c84:	cmp	ip, #0
   10c88:	bne	10c40 <abort@plt+0x3a0>
   10c8c:	vmul.f64	d4, d3, d4
   10c90:	vldr	d6, [pc, #224]	; 10d78 <abort@plt+0x4d8>
   10c94:	vdiv.f64	d7, d4, d2
   10c98:	vsub.f64	d1, d1, d7
   10c9c:	vstr	d1, [r0, #40]	; 0x28
   10ca0:	vldr	d7, [r4, #24]
   10ca4:	ldr	r4, [r4, #4]
   10ca8:	cmp	r4, #0
   10cac:	vsub.f64	d7, d7, d1
   10cb0:	vmla.f64	d6, d7, d7
   10cb4:	bne	10ca0 <abort@plt+0x400>
   10cb8:	vdiv.f64	d7, d6, d3
   10cbc:	vdiv.f64	d0, d7, d2
   10cc0:	vcmp.f64	d0, #0.0
   10cc4:	vsqrt.f64	d7, d0
   10cc8:	vmrs	APSR_nzcv, fpscr
   10ccc:	bmi	10d3c <abort@plt+0x49c>
   10cd0:	vldr	d5, [pc, #168]	; 10d80 <abort@plt+0x4e0>
   10cd4:	vldr	d6, [pc, #148]	; 10d70 <abort@plt+0x4d0>
   10cd8:	vmul.f64	d7, d7, d5
   10cdc:	vsub.f64	d1, d1, d7
   10ce0:	vcmpe.f64	d1, d6
   10ce4:	vmrs	APSR_nzcv, fpscr
   10ce8:	vmovgt.f64	d1, d6
   10cec:	bgt	10d00 <abort@plt+0x460>
   10cf0:	vldr	d6, [pc, #128]	; 10d78 <abort@plt+0x4d8>
   10cf4:	vcmp.f64	d1, d6
   10cf8:	vmrs	APSR_nzcv, fpscr
   10cfc:	vmovmi.f64	d1, d6
   10d00:	vstr	d1, [r1]
   10d04:	vldr	d6, [pc, #100]	; 10d70 <abort@plt+0x4d0>
   10d08:	vldr	d5, [r0, #40]	; 0x28
   10d0c:	vadd.f64	d7, d7, d5
   10d10:	vcmpe.f64	d7, d6
   10d14:	vmrs	APSR_nzcv, fpscr
   10d18:	vmovgt.f64	d7, d6
   10d1c:	bgt	10d30 <abort@plt+0x490>
   10d20:	vldr	d6, [pc, #80]	; 10d78 <abort@plt+0x4d8>
   10d24:	vcmp.f64	d7, d6
   10d28:	vmrs	APSR_nzcv, fpscr
   10d2c:	vmovmi.f64	d7, d6
   10d30:	vstr	d7, [r2]
   10d34:	add	sp, sp, #24
   10d38:	pop	{r4, r5, r6, pc}
   10d3c:	str	r2, [sp, #20]
   10d40:	str	r1, [sp, #16]
   10d44:	str	r0, [sp, #12]
   10d48:	vstr	d7, [sp]
   10d4c:	bl	10858 <sqrt@plt>
   10d50:	ldr	r0, [sp, #12]
   10d54:	ldr	r2, [sp, #20]
   10d58:	ldr	r1, [sp, #16]
   10d5c:	vldr	d1, [r0, #40]	; 0x28
   10d60:	vldr	d7, [sp]
   10d64:	b	10cd0 <abort@plt+0x430>
   10d68:	ldr	r0, [pc, #24]	; 10d88 <abort@plt+0x4e8>
   10d6c:	bl	11dcc <error@@Base>
   10d70:	andeq	r0, r0, r0
   10d74:	subsmi	r0, r9, r0
	...
   10d80:			; <UNDEFINED> instruction: 0xf5c28f5c
   10d84:	svccc	0x00ff5c28
   10d88:	strdeq	r2, [r1], -r4
   10d8c:	andeq	r0, r0, r0
   10d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d94:	mov	r2, r0
   10d98:	sub	sp, sp, #12
   10d9c:	mov	r7, r0
   10da0:	mov	r4, r1
   10da4:	ldr	r0, [pc, #248]	; 10ea4 <abort@plt+0x604>
   10da8:	mov	r1, #99	; 0x63
   10dac:	bl	107c8 <fgets@plt>
   10db0:	cmp	r0, #0
   10db4:	beq	10e94 <abort@plt+0x5f4>
   10db8:	mov	r2, r7
   10dbc:	mov	r1, #99	; 0x63
   10dc0:	ldr	r0, [pc, #220]	; 10ea4 <abort@plt+0x604>
   10dc4:	bl	107c8 <fgets@plt>
   10dc8:	cmp	r0, #0
   10dcc:	beq	10e94 <abort@plt+0x5f4>
   10dd0:	ldr	r5, [pc, #204]	; 10ea4 <abort@plt+0x604>
   10dd4:	ldr	r8, [pc, #204]	; 10ea8 <abort@plt+0x608>
   10dd8:	ldr	sl, [pc, #204]	; 10eac <abort@plt+0x60c>
   10ddc:	mov	fp, #0
   10de0:	add	r6, r5, #29
   10de4:	mov	r9, #99	; 0x63
   10de8:	mov	r2, r7
   10dec:	mov	r1, r9
   10df0:	mov	r0, r5
   10df4:	bl	107c8 <fgets@plt>
   10df8:	add	r3, sp, #4
   10dfc:	mov	r2, sp
   10e00:	mov	r1, r8
   10e04:	cmp	r0, #0
   10e08:	mov	r0, r5
   10e0c:	beq	10e1c <abort@plt+0x57c>
   10e10:	bl	10864 <__isoc99_sscanf@plt>
   10e14:	cmp	r0, #2
   10e18:	beq	10e28 <abort@plt+0x588>
   10e1c:	mov	r0, fp
   10e20:	add	sp, sp, #12
   10e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e28:	mov	r1, #0
   10e2c:	mov	r2, #10
   10e30:	mov	r0, r6
   10e34:	bl	10798 <strtol@plt>
   10e38:	mov	r1, sl
   10e3c:	subs	r3, r0, #0
   10e40:	mov	r0, r6
   10e44:	beq	10e74 <abort@plt+0x5d4>
   10e48:	lsl	r3, r3, #3
   10e4c:	ldr	ip, [sp]
   10e50:	add	r0, r4, r3
   10e54:	ldr	r1, [r4, r3]
   10e58:	ldr	r2, [r0, #4]
   10e5c:	ldr	lr, [sp, #4]
   10e60:	add	r1, r1, ip
   10e64:	add	r2, r2, lr
   10e68:	str	r1, [r4, r3]
   10e6c:	str	r2, [r0, #4]
   10e70:	b	10de8 <abort@plt+0x548>
   10e74:	bl	1078c <strcmp@plt>
   10e78:	mov	r3, #88	; 0x58
   10e7c:	cmp	r0, #0
   10e80:	bne	10e4c <abort@plt+0x5ac>
   10e84:	ldr	fp, [sp]
   10e88:	mov	r3, r0
   10e8c:	mov	ip, fp
   10e90:	b	10e50 <abort@plt+0x5b0>
   10e94:	mov	fp, #0
   10e98:	mov	r0, fp
   10e9c:	add	sp, sp, #12
   10ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ea4:	muleq	r2, ip, r0
   10ea8:	andeq	r2, r1, r4, lsl r7
   10eac:	andeq	r2, r1, ip, lsl #14
   10eb0:	ldr	r1, [r1, #8]
   10eb4:	ldr	r0, [r0, #8]
   10eb8:	b	11bdc <abort@plt+0x133c>
   10ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ec0:	mov	r2, r0
   10ec4:	ldr	r7, [pc, #252]	; 10fc8 <abort@plt+0x728>
   10ec8:	sub	sp, sp, #20
   10ecc:	mov	r8, r0
   10ed0:	mov	r9, r1
   10ed4:	mov	r0, r7
   10ed8:	mov	r1, #99	; 0x63
   10edc:	bl	107c8 <fgets@plt>
   10ee0:	cmp	r0, #0
   10ee4:	beq	10f40 <abort@plt+0x6a0>
   10ee8:	mov	r2, r8
   10eec:	mov	r1, #99	; 0x63
   10ef0:	mov	r0, r7
   10ef4:	bl	107c8 <fgets@plt>
   10ef8:	cmp	r0, #0
   10efc:	beq	10f40 <abort@plt+0x6a0>
   10f00:	ldr	fp, [pc, #196]	; 10fcc <abort@plt+0x72c>
   10f04:	mov	r4, r7
   10f08:	add	sl, r7, #29
   10f0c:	mov	r2, r8
   10f10:	mov	r1, #99	; 0x63
   10f14:	mov	r0, r4
   10f18:	bl	107c8 <fgets@plt>
   10f1c:	add	r3, sp, #12
   10f20:	add	r2, sp, #8
   10f24:	mov	r1, fp
   10f28:	cmp	r0, #0
   10f2c:	mov	r0, r4
   10f30:	beq	10f40 <abort@plt+0x6a0>
   10f34:	bl	10864 <__isoc99_sscanf@plt>
   10f38:	cmp	r0, #2
   10f3c:	beq	10f48 <abort@plt+0x6a8>
   10f40:	add	sp, sp, #20
   10f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f48:	mov	r0, r4
   10f4c:	bl	10840 <strlen@plt>
   10f50:	mov	r2, #0
   10f54:	mov	r1, sl
   10f58:	ldr	r5, [sp, #8]
   10f5c:	ldr	r6, [sp, #12]
   10f60:	add	r3, r7, r0
   10f64:	mov	r0, r9
   10f68:	strb	r2, [r3, #-1]
   10f6c:	bl	118e0 <abort@plt+0x1040>
   10f70:	subs	r3, r0, #0
   10f74:	beq	10f94 <abort@plt+0x6f4>
   10f78:	ldr	r1, [r3, #12]
   10f7c:	ldr	r2, [r3, #16]
   10f80:	add	r5, r1, r5
   10f84:	add	r6, r2, r6
   10f88:	str	r5, [r3, #12]
   10f8c:	str	r6, [r3, #16]
   10f90:	b	10f0c <abort@plt+0x66c>
   10f94:	mov	r1, #20
   10f98:	mov	r0, #1
   10f9c:	bl	11e08 <error@@Base+0x3c>
   10fa0:	str	r0, [sp, #4]
   10fa4:	mov	r0, sl
   10fa8:	bl	107d4 <strdup@plt>
   10fac:	ldr	r3, [sp, #4]
   10fb0:	mov	r1, r3
   10fb4:	str	r0, [r3, #8]
   10fb8:	mov	r0, r9
   10fbc:	bl	11964 <abort@plt+0x10c4>
   10fc0:	ldr	r3, [sp, #4]
   10fc4:	b	10f78 <abort@plt+0x6d8>
   10fc8:	muleq	r2, ip, r0
   10fcc:	andeq	r2, r1, r4, lsl r7
   10fd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd4:	add	r7, r1, #4096	; 0x1000
   10fd8:	vpush	{d8}
   10fdc:	mov	r6, r0
   10fe0:	mov	r0, r1
   10fe4:	mov	r4, r2
   10fe8:	bl	11a6c <abort@plt+0x11cc>
   10fec:	ldr	r1, [r7, #3952]	; 0xf70
   10ff0:	ldr	r0, [r7, #3956]	; 0xf74
   10ff4:	ldr	r2, [pc, #332]	; 11148 <abort@plt+0x8a8>
   10ff8:	bl	12574 <error@@Base+0x7a8>
   10ffc:	mov	r2, r4
   11000:	ldr	r1, [pc, #324]	; 1114c <abort@plt+0x8ac>
   11004:	mov	r0, r6
   11008:	bl	1084c <fprintf@plt>
   1100c:	mov	r3, r6
   11010:	mov	r2, #26
   11014:	mov	r1, #1
   11018:	ldr	r0, [pc, #304]	; 11150 <abort@plt+0x8b0>
   1101c:	bl	107f8 <fwrite@plt>
   11020:	mov	r3, r6
   11024:	mov	r2, #3
   11028:	mov	r1, #1
   1102c:	ldr	r0, [pc, #288]	; 11154 <abort@plt+0x8b4>
   11030:	bl	107f8 <fwrite@plt>
   11034:	mov	r1, r6
   11038:	mov	r0, #10
   1103c:	bl	1087c <fputc@plt>
   11040:	ldr	r3, [r7, #3956]	; 0xf74
   11044:	cmp	r3, #0
   11048:	ble	11134 <abort@plt+0x894>
   1104c:	vldr	d8, [pc, #236]	; 11140 <abort@plt+0x8a0>
   11050:	ldr	sl, [pc, #256]	; 11158 <abort@plt+0x8b8>
   11054:	ldr	fp, [pc, #256]	; 1115c <abort@plt+0x8bc>
   11058:	ldr	r9, [pc, #244]	; 11154 <abort@plt+0x8b4>
   1105c:	mov	r4, #0
   11060:	b	110c8 <abort@plt+0x828>
   11064:	ldr	r2, [r5, #16]
   11068:	vmov	s15, r3
   1106c:	sub	r3, r3, r2
   11070:	vmov	s14, r3
   11074:	vcvt.f64.s32	d6, s15
   11078:	vcvt.f64.s32	d7, s14
   1107c:	vmul.f64	d7, d7, d8
   11080:	vdiv.f64	d5, d7, d6
   11084:	vmov	r2, r3, d5
   11088:	bl	1084c <fprintf@plt>
   1108c:	mov	r3, r6
   11090:	mov	r2, #3
   11094:	mov	r1, #1
   11098:	mov	r0, r9
   1109c:	bl	107f8 <fwrite@plt>
   110a0:	ldr	r3, [r7, #3952]	; 0xf70
   110a4:	ldr	r1, [pc, #180]	; 11160 <abort@plt+0x8c0>
   110a8:	mov	r0, r6
   110ac:	ldr	r3, [r3, r8]
   110b0:	add	r4, r4, #1
   110b4:	ldr	r2, [r3, #8]
   110b8:	bl	1084c <fprintf@plt>
   110bc:	ldr	r3, [r7, #3956]	; 0xf74
   110c0:	cmp	r3, r4
   110c4:	ble	11134 <abort@plt+0x894>
   110c8:	ldr	r3, [r7, #3952]	; 0xf70
   110cc:	mov	r1, sl
   110d0:	mov	r0, r6
   110d4:	ldr	r5, [r3, r4, lsl #2]
   110d8:	lsl	r8, r4, #2
   110dc:	cmn	r5, #12
   110e0:	beq	1111c <abort@plt+0x87c>
   110e4:	ldr	r3, [r5, #16]
   110e8:	ldr	r2, [r5, #12]
   110ec:	bl	1084c <fprintf@plt>
   110f0:	ldr	r3, [r5, #12]
   110f4:	mov	r1, fp
   110f8:	cmp	r3, #0
   110fc:	mov	r0, r6
   11100:	bne	11064 <abort@plt+0x7c4>
   11104:	mov	r3, r6
   11108:	mov	r2, #8
   1110c:	mov	r1, #1
   11110:	ldr	r0, [pc, #76]	; 11164 <abort@plt+0x8c4>
   11114:	bl	107f8 <fwrite@plt>
   11118:	b	1108c <abort@plt+0x7ec>
   1111c:	mov	r3, r6
   11120:	mov	r2, #26
   11124:	mov	r1, #1
   11128:	ldr	r0, [pc, #32]	; 11150 <abort@plt+0x8b0>
   1112c:	bl	107f8 <fwrite@plt>
   11130:	b	1108c <abort@plt+0x7ec>
   11134:	vpop	{d8}
   11138:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1113c:	nop			; (mov r0, r0)
   11140:	andeq	r0, r0, r0
   11144:	subsmi	r0, r9, r0
   11148:			; <UNDEFINED> instruction: 0x00010eb0
   1114c:	andeq	r2, r1, ip, lsl r7
   11150:	andeq	r2, r1, r4, lsr #14
   11154:	andeq	r2, r1, r0, asr #14
   11158:	andeq	r2, r1, r4, asr #14
   1115c:	andeq	r2, r1, ip, asr r7
   11160:			; <UNDEFINED> instruction: 0x000128b0
   11164:	andeq	r2, r1, r0, asr r7
   11168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1116c:	vpush	{d8}
   11170:	mov	r8, r2
   11174:	mov	r2, r3
   11178:	mov	r5, r0
   1117c:	sub	sp, sp, #12
   11180:	mov	r6, r1
   11184:	ldrb	r3, [sp, #56]	; 0x38
   11188:	ldr	r1, [pc, #704]	; 11450 <abort@plt+0xbb0>
   1118c:	mov	r4, r3
   11190:	str	r3, [sp, #4]
   11194:	ldrb	r3, [sp, #60]	; 0x3c
   11198:	str	r3, [sp]
   1119c:	bl	1084c <fprintf@plt>
   111a0:	mov	r3, r5
   111a4:	mov	r2, #26
   111a8:	mov	r1, #1
   111ac:	ldr	r0, [pc, #672]	; 11454 <abort@plt+0xbb4>
   111b0:	bl	107f8 <fwrite@plt>
   111b4:	mov	r3, r5
   111b8:	mov	r2, #3
   111bc:	mov	r1, #1
   111c0:	ldr	r0, [pc, #656]	; 11458 <abort@plt+0xbb8>
   111c4:	bl	107f8 <fwrite@plt>
   111c8:	cmp	r4, #0
   111cc:	beq	11354 <abort@plt+0xab4>
   111d0:	ldr	r2, [pc, #644]	; 1145c <abort@plt+0xbbc>
   111d4:	ldr	r1, [pc, #644]	; 11460 <abort@plt+0xbc0>
   111d8:	mov	r0, r5
   111dc:	bl	1084c <fprintf@plt>
   111e0:	cmp	r8, #0
   111e4:	ble	112b4 <abort@plt+0xa14>
   111e8:	vldr	d8, [pc, #600]	; 11448 <abort@plt+0xba8>
   111ec:	ldr	r9, [pc, #624]	; 11464 <abort@plt+0xbc4>
   111f0:	ldr	fp, [pc, #608]	; 11458 <abort@plt+0xbb8>
   111f4:	ldr	sl, [pc, #620]	; 11468 <abort@plt+0xbc8>
   111f8:	mov	r4, #1
   111fc:	b	1125c <abort@plt+0x9bc>
   11200:	ldr	r2, [r7, #4]
   11204:	vmov	s15, r3
   11208:	sub	r3, r3, r2
   1120c:	vmov	s14, r3
   11210:	vcvt.f64.s32	d6, s15
   11214:	vcvt.f64.s32	d7, s14
   11218:	vmul.f64	d7, d7, d8
   1121c:	vdiv.f64	d5, d7, d6
   11220:	vmov	r2, r3, d5
   11224:	bl	1084c <fprintf@plt>
   11228:	mov	r2, #3
   1122c:	mov	r1, #1
   11230:	mov	r3, r5
   11234:	mov	r0, fp
   11238:	bl	107f8 <fwrite@plt>
   1123c:	mov	r2, r4
   11240:	mov	r1, sl
   11244:	mov	r0, r5
   11248:	bl	1084c <fprintf@plt>
   1124c:	add	r4, r4, #1
   11250:	sxth	r4, r4
   11254:	cmp	r8, r4
   11258:	blt	112a8 <abort@plt+0xa08>
   1125c:	ldr	r3, [r6, r4, lsl #3]
   11260:	mov	r1, r9
   11264:	subs	r2, r3, #0
   11268:	mov	r0, r5
   1126c:	add	r7, r6, r4, lsl #3
   11270:	ble	1124c <abort@plt+0x9ac>
   11274:	ldr	r3, [r7, #4]
   11278:	bl	1084c <fprintf@plt>
   1127c:	ldr	r3, [r6, r4, lsl #3]
   11280:	ldr	r1, [pc, #484]	; 1146c <abort@plt+0xbcc>
   11284:	cmp	r3, #0
   11288:	mov	r0, r5
   1128c:	bne	11200 <abort@plt+0x960>
   11290:	mov	r3, r5
   11294:	mov	r2, #8
   11298:	mov	r1, #1
   1129c:	ldr	r0, [pc, #460]	; 11470 <abort@plt+0xbd0>
   112a0:	bl	107f8 <fwrite@plt>
   112a4:	b	11228 <abort@plt+0x988>
   112a8:	ldr	r3, [sp, #4]
   112ac:	cmp	r3, #0
   112b0:	beq	1133c <abort@plt+0xa9c>
   112b4:	add	r4, r8, #1
   112b8:	ldr	r2, [r6, r4, lsl #3]
   112bc:	add	r7, r6, r4, lsl #3
   112c0:	cmp	r2, #0
   112c4:	ble	1133c <abort@plt+0xa9c>
   112c8:	ldr	r3, [r7, #4]
   112cc:	ldr	r1, [pc, #400]	; 11464 <abort@plt+0xbc4>
   112d0:	mov	r0, r5
   112d4:	bl	1084c <fprintf@plt>
   112d8:	ldr	r2, [r6, r4, lsl #3]
   112dc:	cmp	r2, #0
   112e0:	beq	11414 <abort@plt+0xb74>
   112e4:	ldr	r3, [r7, #4]
   112e8:	vmov	s15, r2
   112ec:	sub	r3, r2, r3
   112f0:	vldr	d5, [pc, #336]	; 11448 <abort@plt+0xba8>
   112f4:	vmov	s14, r3
   112f8:	vcvt.f64.s32	d6, s15
   112fc:	ldr	r1, [pc, #360]	; 1146c <abort@plt+0xbcc>
   11300:	mov	r0, r5
   11304:	vcvt.f64.s32	d7, s14
   11308:	vmul.f64	d7, d7, d5
   1130c:	vdiv.f64	d5, d7, d6
   11310:	vmov	r2, r3, d5
   11314:	bl	1084c <fprintf@plt>
   11318:	mov	r2, #3
   1131c:	mov	r1, #1
   11320:	mov	r3, r5
   11324:	ldr	r0, [pc, #300]	; 11458 <abort@plt+0xbb8>
   11328:	bl	107f8 <fwrite@plt>
   1132c:	mov	r2, r8
   11330:	ldr	r1, [pc, #316]	; 11474 <abort@plt+0xbd4>
   11334:	mov	r0, r5
   11338:	bl	1084c <fprintf@plt>
   1133c:	ldr	r3, [sp]
   11340:	cmp	r3, #0
   11344:	bne	11370 <abort@plt+0xad0>
   11348:	add	sp, sp, #12
   1134c:	vpop	{d8}
   11350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11354:	ldr	r2, [pc, #284]	; 11478 <abort@plt+0xbd8>
   11358:	ldr	r1, [pc, #256]	; 11460 <abort@plt+0xbc0>
   1135c:	mov	r0, r5
   11360:	bl	1084c <fprintf@plt>
   11364:	cmp	r8, #0
   11368:	bgt	111e8 <abort@plt+0x948>
   1136c:	b	1133c <abort@plt+0xa9c>
   11370:	cmp	r6, #0
   11374:	beq	1142c <abort@plt+0xb8c>
   11378:	ldm	r6, {r2, r3}
   1137c:	ldr	r1, [pc, #224]	; 11464 <abort@plt+0xbc4>
   11380:	mov	r0, r5
   11384:	bl	1084c <fprintf@plt>
   11388:	ldr	r2, [r6]
   1138c:	cmp	r2, #0
   11390:	beq	113fc <abort@plt+0xb5c>
   11394:	ldr	r3, [r6, #4]
   11398:	vmov	s15, r2
   1139c:	sub	r3, r2, r3
   113a0:	vldr	d5, [pc, #160]	; 11448 <abort@plt+0xba8>
   113a4:	vmov	s14, r3
   113a8:	vcvt.f64.s32	d6, s15
   113ac:	ldr	r1, [pc, #184]	; 1146c <abort@plt+0xbcc>
   113b0:	mov	r0, r5
   113b4:	vcvt.f64.s32	d7, s14
   113b8:	vmul.f64	d7, d7, d5
   113bc:	vdiv.f64	d5, d7, d6
   113c0:	vmov	r2, r3, d5
   113c4:	bl	1084c <fprintf@plt>
   113c8:	mov	r3, r5
   113cc:	mov	r2, #3
   113d0:	mov	r1, #1
   113d4:	ldr	r0, [pc, #124]	; 11458 <abort@plt+0xbb8>
   113d8:	bl	107f8 <fwrite@plt>
   113dc:	mov	r3, r5
   113e0:	mov	r2, #7
   113e4:	mov	r1, #1
   113e8:	ldr	r0, [pc, #140]	; 1147c <abort@plt+0xbdc>
   113ec:	add	sp, sp, #12
   113f0:	vpop	{d8}
   113f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113f8:	b	107f8 <fwrite@plt>
   113fc:	mov	r3, r5
   11400:	mov	r2, #8
   11404:	mov	r1, #1
   11408:	ldr	r0, [pc, #96]	; 11470 <abort@plt+0xbd0>
   1140c:	bl	107f8 <fwrite@plt>
   11410:	b	113c8 <abort@plt+0xb28>
   11414:	mov	r3, r5
   11418:	mov	r2, #8
   1141c:	mov	r1, #1
   11420:	ldr	r0, [pc, #72]	; 11470 <abort@plt+0xbd0>
   11424:	bl	107f8 <fwrite@plt>
   11428:	b	11318 <abort@plt+0xa78>
   1142c:	mov	r3, r5
   11430:	mov	r2, #26
   11434:	mov	r1, #1
   11438:	ldr	r0, [pc, #20]	; 11454 <abort@plt+0xbb4>
   1143c:	bl	107f8 <fwrite@plt>
   11440:	b	113c8 <abort@plt+0xb28>
   11444:	nop			; (mov r0, r0)
   11448:	andeq	r0, r0, r0
   1144c:	subsmi	r0, r9, r0
   11450:	andeq	r2, r1, ip, lsl r7
   11454:	andeq	r2, r1, r4, lsr #14
   11458:	andeq	r2, r1, r0, asr #14
   1145c:	andeq	r2, r1, r4, lsl #15
   11460:			; <UNDEFINED> instruction: 0x000128b0
   11464:	andeq	r2, r1, r4, asr #14
   11468:	andeq	r2, r1, r4, ror #14
   1146c:	andeq	r2, r1, ip, asr r7
   11470:	andeq	r2, r1, r0, asr r7
   11474:	andeq	r2, r1, r0, ror r7
   11478:	andeq	r2, r1, ip, ror r7
   1147c:	andeq	r2, r1, ip, lsl #14
   11480:	ldr	ip, [r0]
   11484:	ldr	r3, [r0, #4]
   11488:	add	r1, ip, r1
   1148c:	add	r2, r3, r2
   11490:	stm	r0, {r1, r2}
   11494:	bx	lr
   11498:	push	{r4, r5, r6, r7, r8, lr}
   1149c:	mov	r6, r2
   114a0:	mov	r5, r3
   114a4:	mov	r7, r0
   114a8:	mov	r8, r1
   114ac:	bl	118e0 <abort@plt+0x1040>
   114b0:	subs	r4, r0, #0
   114b4:	beq	114d4 <abort@plt+0xc34>
   114b8:	ldr	r0, [r4, #12]
   114bc:	ldr	r1, [r4, #16]
   114c0:	add	r2, r0, r6
   114c4:	add	r3, r1, r5
   114c8:	str	r2, [r4, #12]
   114cc:	str	r3, [r4, #16]
   114d0:	pop	{r4, r5, r6, r7, r8, pc}
   114d4:	mov	r1, #20
   114d8:	mov	r0, #1
   114dc:	bl	11e08 <error@@Base+0x3c>
   114e0:	mov	r4, r0
   114e4:	mov	r0, r8
   114e8:	bl	107d4 <strdup@plt>
   114ec:	mov	r1, r4
   114f0:	str	r0, [r4, #8]
   114f4:	mov	r0, r7
   114f8:	bl	11964 <abort@plt+0x10c4>
   114fc:	b	114b8 <abort@plt+0xc18>
   11500:	push	{r4, r5, r6, r7, lr}
   11504:	mov	r6, r1
   11508:	sub	sp, sp, #12
   1150c:	ldr	r1, [pc, #428]	; 116c0 <abort@plt+0xe20>
   11510:	mov	r5, r0
   11514:	mov	r0, r6
   11518:	bl	11e9c <error@@Base+0xd0>
   1151c:	mov	r1, #99	; 0x63
   11520:	mov	r2, r0
   11524:	mov	r4, r0
   11528:	ldr	r0, [pc, #404]	; 116c4 <abort@plt+0xe24>
   1152c:	bl	107c8 <fgets@plt>
   11530:	cmp	r0, #0
   11534:	beq	115ac <abort@plt+0xd0c>
   11538:	mov	r2, #45	; 0x2d
   1153c:	ldr	r1, [pc, #388]	; 116c8 <abort@plt+0xe28>
   11540:	ldr	r0, [pc, #380]	; 116c4 <abort@plt+0xe24>
   11544:	bl	10894 <strncmp@plt>
   11548:	cmp	r0, #0
   1154c:	bne	115ac <abort@plt+0xd0c>
   11550:	mov	r2, r4
   11554:	mov	r1, #99	; 0x63
   11558:	ldr	r0, [pc, #356]	; 116c4 <abort@plt+0xe24>
   1155c:	bl	107c8 <fgets@plt>
   11560:	cmp	r0, #0
   11564:	beq	115ac <abort@plt+0xd0c>
   11568:	ldr	r1, [pc, #348]	; 116cc <abort@plt+0xe2c>
   1156c:	ldr	r0, [pc, #336]	; 116c4 <abort@plt+0xe24>
   11570:	bl	1078c <strcmp@plt>
   11574:	cmp	r0, #0
   11578:	bne	115ac <abort@plt+0xd0c>
   1157c:	mov	r2, r4
   11580:	mov	r1, #99	; 0x63
   11584:	ldr	r0, [pc, #312]	; 116c4 <abort@plt+0xe24>
   11588:	bl	107c8 <fgets@plt>
   1158c:	cmp	r0, #0
   11590:	beq	115ac <abort@plt+0xd0c>
   11594:	mov	r2, sp
   11598:	ldr	r1, [pc, #304]	; 116d0 <abort@plt+0xe30>
   1159c:	ldr	r0, [pc, #288]	; 116c4 <abort@plt+0xe24>
   115a0:	bl	10864 <__isoc99_sscanf@plt>
   115a4:	cmp	r0, #1
   115a8:	beq	115c0 <abort@plt+0xd20>
   115ac:	cmp	r6, #0
   115b0:	ldr	r1, [pc, #284]	; 116d4 <abort@plt+0xe34>
   115b4:	ldr	r0, [pc, #284]	; 116d8 <abort@plt+0xe38>
   115b8:	movne	r1, r6
   115bc:	bl	11e54 <error@@Base+0x88>
   115c0:	mov	r2, r4
   115c4:	mov	r1, #99	; 0x63
   115c8:	ldr	r0, [pc, #244]	; 116c4 <abort@plt+0xe24>
   115cc:	bl	107c8 <fgets@plt>
   115d0:	cmp	r0, #0
   115d4:	beq	115ac <abort@plt+0xd0c>
   115d8:	add	r2, sp, #4
   115dc:	ldr	r1, [pc, #236]	; 116d0 <abort@plt+0xe30>
   115e0:	ldr	r0, [pc, #220]	; 116c4 <abort@plt+0xe24>
   115e4:	bl	10864 <__isoc99_sscanf@plt>
   115e8:	cmp	r0, #1
   115ec:	bne	115ac <abort@plt+0xd0c>
   115f0:	mov	r2, r4
   115f4:	mov	r1, #99	; 0x63
   115f8:	ldr	r0, [pc, #196]	; 116c4 <abort@plt+0xe24>
   115fc:	bl	107c8 <fgets@plt>
   11600:	cmp	r0, #0
   11604:	beq	115ac <abort@plt+0xd0c>
   11608:	mov	r2, r4
   1160c:	mov	r1, #99	; 0x63
   11610:	ldr	r0, [pc, #172]	; 116c4 <abort@plt+0xe24>
   11614:	bl	107c8 <fgets@plt>
   11618:	cmp	r0, #0
   1161c:	beq	115ac <abort@plt+0xd0c>
   11620:	ldr	r0, [sp, #4]
   11624:	ldr	r2, [r5, #4]
   11628:	ldr	r3, [r5]
   1162c:	ldr	r1, [sp]
   11630:	add	r2, r2, r0
   11634:	add	r3, r3, r1
   11638:	str	r3, [r5]
   1163c:	str	r2, [r5, #4]
   11640:	add	r1, r5, #8
   11644:	mov	r0, r4
   11648:	bl	10d90 <abort@plt+0x4f0>
   1164c:	add	r1, r5, #416	; 0x1a0
   11650:	mov	r7, r0
   11654:	mov	r0, r4
   11658:	bl	10d90 <abort@plt+0x4f0>
   1165c:	add	r1, r5, #824	; 0x338
   11660:	mov	r6, r0
   11664:	mov	r0, r4
   11668:	bl	10d90 <abort@plt+0x4f0>
   1166c:	ldr	r3, [sp]
   11670:	cmp	r3, #0
   11674:	ble	116b0 <abort@plt+0xe10>
   11678:	add	r1, r5, #920	; 0x398
   1167c:	mov	r0, r4
   11680:	bl	10d90 <abort@plt+0x4f0>
   11684:	cmp	r7, #0
   11688:	ble	11698 <abort@plt+0xdf8>
   1168c:	add	r1, r5, #992	; 0x3e0
   11690:	mov	r0, r4
   11694:	bl	10ebc <abort@plt+0x61c>
   11698:	cmp	r6, #0
   1169c:	ble	116b0 <abort@plt+0xe10>
   116a0:	add	r1, r5, #9024	; 0x2340
   116a4:	add	r1, r1, #24
   116a8:	mov	r0, r4
   116ac:	bl	10ebc <abort@plt+0x61c>
   116b0:	mov	r0, r4
   116b4:	bl	11c70 <abort@plt+0x13d0>
   116b8:	add	sp, sp, #12
   116bc:	pop	{r4, r5, r6, r7, pc}
   116c0:	muleq	r1, r4, r7
   116c4:	muleq	r2, ip, r0
   116c8:	muleq	r1, r8, r7
   116cc:	andeq	r2, r1, r8, asr #15
   116d0:	andeq	r2, r1, r8, lsl r7
   116d4:	andeq	r2, r1, ip, lsl #15
   116d8:	strdeq	r2, [r1], -r8
   116dc:	mov	r3, r1
   116e0:	push	{r4, r5, r6, r7, lr}
   116e4:	mov	r4, r0
   116e8:	sub	sp, sp, #12
   116ec:	ldr	r1, [pc, #380]	; 11870 <abort@plt+0xfd0>
   116f0:	mov	r0, r3
   116f4:	bl	11e9c <error@@Base+0xd0>
   116f8:	ldr	r3, [pc, #372]	; 11874 <abort@plt+0xfd4>
   116fc:	ldr	r2, [pc, #372]	; 11878 <abort@plt+0xfd8>
   11700:	ldr	r1, [pc, #372]	; 1187c <abort@plt+0xfdc>
   11704:	mov	r5, r0
   11708:	bl	1084c <fprintf@plt>
   1170c:	ldr	r2, [r4]
   11710:	ldr	r1, [pc, #360]	; 11880 <abort@plt+0xfe0>
   11714:	mov	r0, r5
   11718:	bl	1084c <fprintf@plt>
   1171c:	ldr	r2, [r4, #4]
   11720:	mov	r0, r5
   11724:	ldr	r1, [pc, #344]	; 11884 <abort@plt+0xfe4>
   11728:	bl	1084c <fprintf@plt>
   1172c:	ldr	r2, [r4]
   11730:	cmp	r2, #0
   11734:	beq	11850 <abort@plt+0xfb0>
   11738:	ldr	r3, [r4, #4]
   1173c:	vmov	s15, r2
   11740:	sub	r3, r2, r3
   11744:	vldr	d5, [pc, #284]	; 11868 <abort@plt+0xfc8>
   11748:	vmov	s14, r3
   1174c:	vcvt.f64.s32	d6, s15
   11750:	ldr	r1, [pc, #304]	; 11888 <abort@plt+0xfe8>
   11754:	mov	r0, r5
   11758:	vcvt.f64.s32	d7, s14
   1175c:	vmul.f64	d7, d7, d5
   11760:	vdiv.f64	d5, d7, d6
   11764:	vmov	r2, r3, d5
   11768:	bl	1084c <fprintf@plt>
   1176c:	mov	r1, #1
   11770:	mov	r6, r1
   11774:	mov	r7, #0
   11778:	mov	r3, r5
   1177c:	mov	r2, #12
   11780:	ldr	r0, [pc, #260]	; 1188c <abort@plt+0xfec>
   11784:	bl	107f8 <fwrite@plt>
   11788:	ldr	r3, [pc, #256]	; 11890 <abort@plt+0xff0>
   1178c:	mov	r2, #50	; 0x32
   11790:	add	r1, r4, #8
   11794:	mov	r0, r5
   11798:	str	r6, [sp, #4]
   1179c:	str	r7, [sp]
   117a0:	bl	11168 <abort@plt+0x8c8>
   117a4:	ldr	r3, [pc, #232]	; 11894 <abort@plt+0xff4>
   117a8:	mov	r2, #50	; 0x32
   117ac:	add	r1, r4, #416	; 0x1a0
   117b0:	mov	r0, r5
   117b4:	str	r6, [sp, #4]
   117b8:	str	r7, [sp]
   117bc:	bl	11168 <abort@plt+0x8c8>
   117c0:	ldr	r3, [pc, #208]	; 11898 <abort@plt+0xff8>
   117c4:	str	r6, [sp, #4]
   117c8:	str	r6, [sp]
   117cc:	mov	r2, #10
   117d0:	add	r1, r4, #824	; 0x338
   117d4:	mov	r0, r5
   117d8:	bl	11168 <abort@plt+0x8c8>
   117dc:	ldr	r3, [r4]
   117e0:	cmp	r3, r7
   117e4:	ble	11840 <abort@plt+0xfa0>
   117e8:	ldr	r3, [pc, #172]	; 1189c <abort@plt+0xffc>
   117ec:	str	r7, [sp, #4]
   117f0:	str	r7, [sp]
   117f4:	mov	r2, #8
   117f8:	add	r1, r4, #920	; 0x398
   117fc:	mov	r0, r5
   11800:	bl	11168 <abort@plt+0x8c8>
   11804:	ldr	r3, [r4, #8]
   11808:	cmp	r3, r7
   1180c:	ble	11820 <abort@plt+0xf80>
   11810:	ldr	r2, [pc, #120]	; 11890 <abort@plt+0xff0>
   11814:	add	r1, r4, #992	; 0x3e0
   11818:	mov	r0, r5
   1181c:	bl	10fd0 <abort@plt+0x730>
   11820:	ldr	r3, [r4, #416]	; 0x1a0
   11824:	cmp	r3, #0
   11828:	ble	11840 <abort@plt+0xfa0>
   1182c:	add	r1, r4, #9024	; 0x2340
   11830:	add	r1, r1, #24
   11834:	ldr	r2, [pc, #88]	; 11894 <abort@plt+0xff4>
   11838:	mov	r0, r5
   1183c:	bl	10fd0 <abort@plt+0x730>
   11840:	mov	r0, r5
   11844:	add	sp, sp, #12
   11848:	pop	{r4, r5, r6, r7, lr}
   1184c:	b	11c70 <abort@plt+0x13d0>
   11850:	mov	r3, r5
   11854:	mov	r2, #8
   11858:	mov	r1, #1
   1185c:	ldr	r0, [pc, #60]	; 118a0 <abort@plt+0x1000>
   11860:	bl	107f8 <fwrite@plt>
   11864:	b	1176c <abort@plt+0xecc>
   11868:	andeq	r0, r0, r0
   1186c:	subsmi	r0, r9, r0
   11870:	andeq	r2, r1, ip, lsl #16
   11874:	andeq	r2, r1, r8, asr #15
   11878:	muleq	r1, r8, r7
   1187c:	andeq	r2, r1, r0, lsl r8
   11880:	andeq	r2, r1, r8, lsl r8
   11884:	andeq	r2, r1, r8, lsr #16
   11888:	andeq	r2, r1, ip, asr r7
   1188c:	andeq	r2, r1, r0, asr #16
   11890:	andeq	r2, r1, r0, asr r8
   11894:	andeq	r2, r1, ip, asr r8
   11898:	andeq	r2, r1, ip, ror #16
   1189c:	andeq	r2, r1, r4, lsl #17
   118a0:	andeq	r2, r1, r0, asr r7
   118a4:	push	{r4, r5, r6, lr}
   118a8:	add	r5, r0, #8000	; 0x1f40
   118ac:	mov	r6, r0
   118b0:	add	r5, r5, #48	; 0x30
   118b4:	mov	r4, r0
   118b8:	mov	r0, r4
   118bc:	add	r4, r4, #16
   118c0:	bl	12184 <error@@Base+0x3b8>
   118c4:	cmp	r5, r4
   118c8:	bne	118b8 <abort@plt+0x1018>
   118cc:	add	r6, r6, #4096	; 0x1000
   118d0:	mov	r3, #0
   118d4:	str	r3, [r6, #3952]	; 0xf70
   118d8:	str	r3, [r6, #3956]	; 0xf74
   118dc:	pop	{r4, r5, r6, pc}
   118e0:	push	{r4, r5, r6, lr}
   118e4:	mov	r5, r1
   118e8:	ldrb	r3, [r1]
   118ec:	cmp	r3, #0
   118f0:	beq	11928 <abort@plt+0x1088>
   118f4:	mov	r2, #0
   118f8:	add	r2, r2, r3
   118fc:	ldrb	r3, [r1, #1]!
   11900:	cmp	r3, #0
   11904:	bne	118f8 <abort@plt+0x1058>
   11908:	ldr	r1, [pc, #80]	; 11960 <abort@plt+0x10c0>
   1190c:	asr	r3, r2, #31
   11910:	smull	ip, r1, r1, r2
   11914:	add	r1, r1, r2
   11918:	rsb	r3, r3, r1, asr #8
   1191c:	rsb	r1, r3, r3, lsl #6
   11920:	rsb	r3, r3, r1, lsl #3
   11924:	sub	r3, r2, r3
   11928:	ldr	r4, [r0, r3, lsl #4]
   1192c:	cmp	r4, #0
   11930:	bne	11944 <abort@plt+0x10a4>
   11934:	b	11958 <abort@plt+0x10b8>
   11938:	ldr	r4, [r4, #4]
   1193c:	cmp	r4, #0
   11940:	beq	11958 <abort@plt+0x10b8>
   11944:	ldr	r1, [r4, #8]
   11948:	mov	r0, r5
   1194c:	bl	1078c <strcmp@plt>
   11950:	cmp	r0, #0
   11954:	bne	11938 <abort@plt+0x1098>
   11958:	mov	r0, r4
   1195c:	pop	{r4, r5, r6, pc}
   11960:	subhi	r4, sl, #1552	; 0x610
   11964:	ldr	ip, [r1, #8]
   11968:	push	{r4, lr}
   1196c:	ldrb	r3, [ip]
   11970:	cmp	r3, #0
   11974:	beq	119b0 <abort@plt+0x1110>
   11978:	mov	r2, #0
   1197c:	add	r2, r2, r3
   11980:	ldrb	r3, [ip, #1]!
   11984:	cmp	r3, #0
   11988:	bne	1197c <abort@plt+0x10dc>
   1198c:	ldr	ip, [pc, #80]	; 119e4 <abort@plt+0x1144>
   11990:	asr	r3, r2, #31
   11994:	smull	lr, ip, ip, r2
   11998:	add	ip, ip, r2
   1199c:	rsb	r3, r3, ip, asr #8
   119a0:	rsb	ip, r3, r3, lsl #6
   119a4:	rsb	r3, r3, ip, lsl #3
   119a8:	sub	r3, r2, r3
   119ac:	lsl	r3, r3, #4
   119b0:	add	r4, r0, #4096	; 0x1000
   119b4:	add	r0, r0, r3
   119b8:	bl	1219c <error@@Base+0x3d0>
   119bc:	ldr	r0, [r4, #3952]	; 0xf70
   119c0:	cmp	r0, #0
   119c4:	beq	119d4 <abort@plt+0x1134>
   119c8:	bl	107bc <free@plt>
   119cc:	mov	r3, #0
   119d0:	str	r3, [r4, #3952]	; 0xf70
   119d4:	ldr	r3, [r4, #3956]	; 0xf74
   119d8:	add	r3, r3, #1
   119dc:	str	r3, [r4, #3956]	; 0xf74
   119e0:	pop	{r4, pc}
   119e4:	subhi	r4, sl, #1552	; 0x610
   119e8:	ldr	ip, [r1, #8]
   119ec:	push	{r4, lr}
   119f0:	ldrb	r3, [ip]
   119f4:	cmp	r3, #0
   119f8:	beq	11a34 <abort@plt+0x1194>
   119fc:	mov	r2, #0
   11a00:	add	r2, r2, r3
   11a04:	ldrb	r3, [ip, #1]!
   11a08:	cmp	r3, #0
   11a0c:	bne	11a00 <abort@plt+0x1160>
   11a10:	ldr	ip, [pc, #80]	; 11a68 <abort@plt+0x11c8>
   11a14:	asr	r3, r2, #31
   11a18:	smull	lr, ip, ip, r2
   11a1c:	add	ip, ip, r2
   11a20:	rsb	r3, r3, ip, asr #8
   11a24:	rsb	ip, r3, r3, lsl #6
   11a28:	rsb	r3, r3, ip, lsl #3
   11a2c:	sub	r3, r2, r3
   11a30:	lsl	r3, r3, #4
   11a34:	add	r4, r0, #4096	; 0x1000
   11a38:	add	r0, r0, r3
   11a3c:	bl	122cc <error@@Base+0x500>
   11a40:	ldr	r0, [r4, #3952]	; 0xf70
   11a44:	cmp	r0, #0
   11a48:	beq	11a58 <abort@plt+0x11b8>
   11a4c:	bl	107bc <free@plt>
   11a50:	mov	r3, #0
   11a54:	str	r3, [r4, #3952]	; 0xf70
   11a58:	ldr	r3, [r4, #3956]	; 0xf74
   11a5c:	sub	r3, r3, #1
   11a60:	str	r3, [r4, #3956]	; 0xf74
   11a64:	pop	{r4, pc}
   11a68:	subhi	r4, sl, #1552	; 0x610
   11a6c:	push	{r4, r5, r6, lr}
   11a70:	add	r6, r0, #4096	; 0x1000
   11a74:	ldr	r4, [r6, #3952]	; 0xf70
   11a78:	cmp	r4, #0
   11a7c:	popne	{r4, r5, r6, pc}
   11a80:	ldr	r3, [r6, #3956]	; 0xf74
   11a84:	cmp	r3, #0
   11a88:	popeq	{r4, r5, r6, pc}
   11a8c:	mov	r5, r0
   11a90:	mov	r1, #4
   11a94:	mov	r0, r3
   11a98:	bl	11e08 <error@@Base+0x3c>
   11a9c:	ldr	lr, [pc, #60]	; 11ae0 <abort@plt+0x1240>
   11aa0:	mov	r2, r4
   11aa4:	mov	ip, r4
   11aa8:	str	r0, [r6, #3952]	; 0xf70
   11aac:	ldr	r3, [r5, ip, lsl #4]
   11ab0:	cmp	r3, #0
   11ab4:	beq	11ad0 <abort@plt+0x1230>
   11ab8:	add	r1, r0, r2, lsl #2
   11abc:	str	r3, [r1], #4
   11ac0:	ldr	r3, [r3, #4]
   11ac4:	add	r2, r2, #1
   11ac8:	cmp	r3, #0
   11acc:	bne	11abc <abort@plt+0x121c>
   11ad0:	add	ip, ip, #1
   11ad4:	cmp	ip, lr
   11ad8:	bne	11aac <abort@plt+0x120c>
   11adc:	pop	{r4, r5, r6, pc}
   11ae0:	strdeq	r0, [r0], -r7
   11ae4:	push	{r4, r5, r6, r7, r8, lr}
   11ae8:	add	r5, r0, #8000	; 0x1f40
   11aec:	mov	r7, r0
   11af0:	mov	r6, r1
   11af4:	add	r5, r5, #48	; 0x30
   11af8:	mov	r4, r0
   11afc:	mov	r0, r4
   11b00:	mov	r1, r6
   11b04:	add	r4, r4, #16
   11b08:	bl	1237c <error@@Base+0x5b0>
   11b0c:	cmp	r5, r4
   11b10:	bne	11afc <abort@plt+0x125c>
   11b14:	add	r7, r7, #4096	; 0x1000
   11b18:	ldr	r0, [r7, #3952]	; 0xf70
   11b1c:	cmp	r0, #0
   11b20:	beq	11b30 <abort@plt+0x1290>
   11b24:	bl	107bc <free@plt>
   11b28:	mov	r3, #0
   11b2c:	str	r3, [r7, #3952]	; 0xf70
   11b30:	mov	r3, #0
   11b34:	str	r3, [r7, #3956]	; 0xf74
   11b38:	pop	{r4, r5, r6, r7, r8, pc}
   11b3c:	ldr	r3, [pc, #136]	; 11bcc <abort@plt+0x132c>
   11b40:	push	{r7, lr}
   11b44:	mov	r9, r0
   11b48:	ldr	r3, [r3]
   11b4c:	sub	sp, sp, #112	; 0x70
   11b50:	cmp	r3, #0
   11b54:	beq	11b5c <abort@plt+0x12bc>
   11b58:	blx	r3
   11b5c:	ldr	r6, [pc, #108]	; 11bd0 <abort@plt+0x1330>
   11b60:	ldrsh	r3, [r6]
   11b64:	cmp	r3, #0
   11b68:	ble	11bc4 <abort@plt+0x1324>
   11b6c:	ldr	r8, [pc, #96]	; 11bd4 <abort@plt+0x1334>
   11b70:	ldr	r7, [pc, #96]	; 11bd8 <abort@plt+0x1338>
   11b74:	mov	r4, #1
   11b78:	ldr	r5, [r8]
   11b7c:	bl	10828 <getpid@plt>
   11b80:	mov	r2, r5
   11b84:	mov	r1, r7
   11b88:	str	r4, [sp]
   11b8c:	add	r4, r4, #1
   11b90:	sxth	r4, r4
   11b94:	mov	r3, r0
   11b98:	add	r0, sp, #12
   11b9c:	bl	10888 <sprintf@plt>
   11ba0:	add	r0, sp, #12
   11ba4:	bl	107d4 <strdup@plt>
   11ba8:	mov	r5, r0
   11bac:	bl	107e0 <unlink@plt>
   11bb0:	mov	r0, r5
   11bb4:	bl	107bc <free@plt>
   11bb8:	ldrsh	r3, [r6]
   11bbc:	cmp	r3, r4
   11bc0:	bge	11b78 <abort@plt+0x12d8>
   11bc4:	mov	r0, r9
   11bc8:	bl	10834 <exit@plt>
   11bcc:	andeq	r7, r2, r8, lsl r4
   11bd0:	andeq	r3, r2, r0, lsl #2
   11bd4:	andeq	r7, r2, r4, lsl r4
   11bd8:	andeq	r2, r1, ip, lsl #17
   11bdc:	ldrb	r3, [r0]
   11be0:	cmp	r3, #0
   11be4:	beq	11c48 <abort@plt+0x13a8>
   11be8:	ldrb	ip, [r1]
   11bec:	cmp	ip, r3
   11bf0:	bne	11c58 <abort@plt+0x13b8>
   11bf4:	push	{lr}		; (str lr, [sp, #-4]!)
   11bf8:	mov	r2, #0
   11bfc:	mov	lr, r1
   11c00:	b	11c10 <abort@plt+0x1370>
   11c04:	ldrb	ip, [lr, #1]!
   11c08:	cmp	r3, ip
   11c0c:	bne	11c30 <abort@plt+0x1390>
   11c10:	ldrb	r3, [r0, #1]!
   11c14:	add	r2, r2, #1
   11c18:	cmp	r3, #0
   11c1c:	bne	11c04 <abort@plt+0x1364>
   11c20:	ldrb	ip, [r1, r2]
   11c24:	cmp	ip, #0
   11c28:	movne	r3, #0
   11c2c:	beq	11c40 <abort@plt+0x13a0>
   11c30:	cmp	r3, ip
   11c34:	movcs	r0, #1
   11c38:	mvncc	r0, #0
   11c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c40:	mov	r0, ip
   11c44:	pop	{pc}		; (ldr pc, [sp], #4)
   11c48:	ldrb	ip, [r1, r3]
   11c4c:	cmp	ip, #0
   11c50:	movne	r3, #0
   11c54:	beq	11c68 <abort@plt+0x13c8>
   11c58:	cmp	r3, ip
   11c5c:	movcs	r0, #1
   11c60:	mvncc	r0, #0
   11c64:	bx	lr
   11c68:	mov	r0, ip
   11c6c:	bx	lr
   11c70:	ldr	r2, [pc, #28]	; 11c94 <abort@plt+0x13f4>
   11c74:	ldr	r2, [r2]
   11c78:	cmp	r2, r0
   11c7c:	bxeq	lr
   11c80:	ldr	r2, [pc, #16]	; 11c98 <abort@plt+0x13f8>
   11c84:	ldr	r2, [r2]
   11c88:	cmp	r0, r2
   11c8c:	bxeq	lr
   11c90:	b	10870 <fclose@plt>
   11c94:	muleq	r2, r0, r0
   11c98:	muleq	r2, r4, r0
   11c9c:	push	{lr}		; (str lr, [sp, #-4]!)
   11ca0:	sub	sp, sp, #92	; 0x5c
   11ca4:	mov	r1, r0
   11ca8:	mov	r2, sp
   11cac:	mov	r0, #3
   11cb0:	bl	107ec <__xstat@plt>
   11cb4:	clz	r0, r0
   11cb8:	lsr	r0, r0, #5
   11cbc:	add	sp, sp, #92	; 0x5c
   11cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11cc4:	ldr	r3, [pc, #84]	; 11d20 <abort@plt+0x1480>
   11cc8:	push	{r4, r5, lr}
   11ccc:	sub	sp, sp, #116	; 0x74
   11cd0:	ldrh	r4, [r3]
   11cd4:	ldr	r2, [pc, #72]	; 11d24 <abort@plt+0x1484>
   11cd8:	add	r4, r4, #1
   11cdc:	ldr	r5, [r2]
   11ce0:	sxth	r4, r4
   11ce4:	strh	r4, [r3]
   11ce8:	bl	10828 <getpid@plt>
   11cec:	mov	r2, r5
   11cf0:	ldr	r1, [pc, #48]	; 11d28 <abort@plt+0x1488>
   11cf4:	str	r4, [sp]
   11cf8:	mov	r3, r0
   11cfc:	add	r0, sp, #12
   11d00:	bl	10888 <sprintf@plt>
   11d04:	add	r0, sp, #12
   11d08:	bl	107d4 <strdup@plt>
   11d0c:	mov	r4, r0
   11d10:	bl	107e0 <unlink@plt>
   11d14:	mov	r0, r4
   11d18:	add	sp, sp, #116	; 0x74
   11d1c:	pop	{r4, r5, pc}
   11d20:	andeq	r3, r2, r0, lsl #2
   11d24:	andeq	r7, r2, r4, lsl r4
   11d28:	andeq	r2, r1, ip, lsl #17
   11d2c:	push	{r4, lr}
   11d30:	mov	r4, r0
   11d34:	bl	10840 <strlen@plt>
   11d38:	sub	r0, r0, #1
   11d3c:	sxth	r0, r0
   11d40:	cmp	r0, #0
   11d44:	bge	11d5c <abort@plt+0x14bc>
   11d48:	b	11d68 <abort@plt+0x14c8>
   11d4c:	sub	r0, r0, #1
   11d50:	sxth	r0, r0
   11d54:	cmn	r0, #1
   11d58:	beq	11d68 <abort@plt+0x14c8>
   11d5c:	ldrb	r3, [r4, r0]
   11d60:	cmp	r3, #47	; 0x2f
   11d64:	bne	11d4c <abort@plt+0x14ac>
   11d68:	add	r0, r0, #1
   11d6c:	add	r0, r4, r0
   11d70:	pop	{r4, pc}
   11d74:	push	{r4, lr}
   11d78:	mov	r0, #0
   11d7c:	bl	11b3c <abort@plt+0x129c>
   11d80:	ldr	r2, [pc, #52]	; 11dbc <abort@plt+0x151c>
   11d84:	push	{r4, lr}
   11d88:	ldr	r2, [r2]
   11d8c:	cmp	r2, #0
   11d90:	beq	11d9c <abort@plt+0x14fc>
   11d94:	blx	r2
   11d98:	bl	11d74 <abort@plt+0x14d4>
   11d9c:	ldr	r1, [pc, #28]	; 11dc0 <abort@plt+0x1520>
   11da0:	ldr	r2, [pc, #28]	; 11dc4 <abort@plt+0x1524>
   11da4:	mov	r3, r0
   11da8:	ldr	r0, [r1]
   11dac:	ldr	r2, [r2]
   11db0:	ldr	r1, [pc, #16]	; 11dc8 <abort@plt+0x1528>
   11db4:	bl	1084c <fprintf@plt>
   11db8:	b	11d98 <abort@plt+0x14f8>
   11dbc:	andeq	r7, r2, r0, lsl r4
   11dc0:	andeq	r3, r2, r8, lsl #1
   11dc4:	andeq	r7, r2, r4, lsl r4
   11dc8:	muleq	r1, ip, r8

00011dcc <error@@Base>:
   11dcc:	ldr	r1, [pc, #36]	; 11df8 <error@@Base+0x2c>
   11dd0:	ldr	r2, [pc, #36]	; 11dfc <error@@Base+0x30>
   11dd4:	mov	r3, r0
   11dd8:	push	{r4, lr}
   11ddc:	ldr	r0, [r1]
   11de0:	ldr	r2, [r2]
   11de4:	ldr	r1, [pc, #20]	; 11e00 <error@@Base+0x34>
   11de8:	bl	1084c <fprintf@plt>
   11dec:	ldr	r3, [pc, #16]	; 11e04 <error@@Base+0x38>
   11df0:	ldr	r0, [r3]
   11df4:	bl	11b3c <abort@plt+0x129c>
   11df8:	andeq	r3, r2, r8, lsl #1
   11dfc:	andeq	r7, r2, r4, lsl r4
   11e00:	andeq	r2, r1, ip, lsr #17
   11e04:	andeq	r3, r2, ip, ror r0
   11e08:	push	{r4, lr}
   11e0c:	bl	10780 <calloc@plt>
   11e10:	cmp	r0, #0
   11e14:	popne	{r4, pc}
   11e18:	ldr	r0, [pc]	; 11e20 <error@@Base+0x54>
   11e1c:	bl	11dcc <error@@Base>
   11e20:			; <UNDEFINED> instruction: 0x000128b4
   11e24:	ldr	r3, [pc, #32]	; 11e4c <error@@Base+0x80>
   11e28:	ldrb	r2, [r3, #2]
   11e2c:	cmp	r2, #0
   11e30:	beq	11e38 <error@@Base+0x6c>
   11e34:	bx	lr
   11e38:	push	{r4, lr}
   11e3c:	mov	r2, #1
   11e40:	ldr	r0, [pc, #8]	; 11e50 <error@@Base+0x84>
   11e44:	strb	r2, [r3, #2]
   11e48:	bl	11dcc <error@@Base>
   11e4c:	andeq	r3, r2, r0, lsl #2
   11e50:	ldrdeq	r2, [r1], -r0
   11e54:	ldr	r3, [pc, #48]	; 11e8c <error@@Base+0xc0>
   11e58:	push	{lr}		; (str lr, [sp, #-4]!)
   11e5c:	sub	sp, sp, #12
   11e60:	ldr	r2, [pc, #40]	; 11e90 <error@@Base+0xc4>
   11e64:	str	r1, [sp]
   11e68:	ldr	r1, [r3]
   11e6c:	ldr	r2, [r2]
   11e70:	mov	r3, r0
   11e74:	mov	r0, r1
   11e78:	ldr	r1, [pc, #20]	; 11e94 <error@@Base+0xc8>
   11e7c:	bl	1084c <fprintf@plt>
   11e80:	ldr	r3, [pc, #16]	; 11e98 <error@@Base+0xcc>
   11e84:	ldr	r0, [r3]
   11e88:	bl	11b3c <abort@plt+0x129c>
   11e8c:	andeq	r3, r2, r8, lsl #1
   11e90:	andeq	r7, r2, r4, lsl r4
   11e94:	andeq	r2, r1, r0, ror #17
   11e98:	andeq	r3, r2, ip, ror r0
   11e9c:	subs	r2, r0, #0
   11ea0:	push	{r4, r5, r6, lr}
   11ea4:	mov	r4, r1
   11ea8:	beq	11ed4 <error@@Base+0x108>
   11eac:	mov	r5, r2
   11eb0:	bl	107b0 <fopen@plt>
   11eb4:	cmp	r0, #0
   11eb8:	popne	{r4, r5, r6, pc}
   11ebc:	ldrb	r3, [r4]
   11ec0:	mov	r1, r5
   11ec4:	cmp	r3, #119	; 0x77
   11ec8:	beq	11eec <error@@Base+0x120>
   11ecc:	ldr	r0, [pc, #32]	; 11ef4 <error@@Base+0x128>
   11ed0:	bl	11e54 <error@@Base+0x88>
   11ed4:	ldrb	r3, [r1]
   11ed8:	cmp	r3, #114	; 0x72
   11edc:	ldreq	r3, [pc, #20]	; 11ef8 <error@@Base+0x12c>
   11ee0:	ldrne	r3, [pc, #20]	; 11efc <error@@Base+0x130>
   11ee4:	ldr	r0, [r3]
   11ee8:	pop	{r4, r5, r6, pc}
   11eec:	ldr	r0, [pc, #12]	; 11f00 <error@@Base+0x134>
   11ef0:	bl	11e54 <error@@Base+0x88>
   11ef4:	andeq	r2, r1, r8, lsl #18
   11ef8:	muleq	r2, r0, r0
   11efc:	muleq	r2, r4, r0
   11f00:	strdeq	r2, [r1], -r0
   11f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f08:	sub	sp, sp, #20
   11f0c:	ldr	r4, [r1]
   11f10:	str	r0, [sp, #8]
   11f14:	mov	r0, r4
   11f18:	mov	r9, r1
   11f1c:	str	r2, [sp, #12]
   11f20:	mov	r6, r3
   11f24:	bl	10840 <strlen@plt>
   11f28:	sub	r0, r0, #1
   11f2c:	sxth	r0, r0
   11f30:	cmp	r0, #0
   11f34:	bge	11f4c <error@@Base+0x180>
   11f38:	b	11f58 <error@@Base+0x18c>
   11f3c:	sub	r0, r0, #1
   11f40:	sxth	r0, r0
   11f44:	cmn	r0, #1
   11f48:	beq	11f58 <error@@Base+0x18c>
   11f4c:	ldrb	r3, [r4, r0]
   11f50:	cmp	r3, #47	; 0x2f
   11f54:	bne	11f3c <error@@Base+0x170>
   11f58:	ldr	r3, [pc, #460]	; 1212c <error@@Base+0x360>
   11f5c:	add	r0, r0, #1
   11f60:	add	r4, r4, r0
   11f64:	ldr	r1, [pc, #452]	; 12130 <error@@Base+0x364>
   11f68:	mov	r0, #2
   11f6c:	str	r4, [r3]
   11f70:	bl	10810 <__sysv_signal@plt>
   11f74:	ldr	r1, [pc, #436]	; 12130 <error@@Base+0x364>
   11f78:	mov	r0, #15
   11f7c:	bl	10810 <__sysv_signal@plt>
   11f80:	ldr	r3, [sp, #8]
   11f84:	ldr	fp, [r3]
   11f88:	cmp	fp, #1
   11f8c:	beq	120c0 <error@@Base+0x2f4>
   11f90:	movgt	sl, #1
   11f94:	mov	r7, #0
   11f98:	movgt	r4, sl
   11f9c:	bgt	11fc4 <error@@Base+0x1f8>
   11fa0:	b	120d0 <error@@Base+0x304>
   11fa4:	add	r3, r7, #1
   11fa8:	str	r5, [r9, r7, lsl #2]
   11fac:	sxth	r7, r3
   11fb0:	add	r4, r4, #1
   11fb4:	sxth	r4, r4
   11fb8:	cmp	r4, fp
   11fbc:	mov	sl, r4
   11fc0:	bge	120d0 <error@@Base+0x304>
   11fc4:	ldr	r5, [r9, r4, lsl #2]
   11fc8:	lsl	r3, r4, #2
   11fcc:	ldrb	r2, [r5]
   11fd0:	cmp	r2, #45	; 0x2d
   11fd4:	bne	11fa4 <error@@Base+0x1d8>
   11fd8:	ldrb	r8, [r5, #1]
   11fdc:	str	r3, [sp, #4]
   11fe0:	cmp	r8, #0
   11fe4:	beq	11fa4 <error@@Base+0x1d8>
   11fe8:	mov	r0, r5
   11fec:	bl	10840 <strlen@plt>
   11ff0:	mov	r1, r5
   11ff4:	mov	r2, r0
   11ff8:	ldr	r0, [pc, #308]	; 12134 <error@@Base+0x368>
   11ffc:	bl	10894 <strncmp@plt>
   12000:	cmp	r0, #0
   12004:	beq	12118 <error@@Base+0x34c>
   12008:	add	sl, sl, #1
   1200c:	cmp	sl, fp
   12010:	movge	r0, #0
   12014:	ldrlt	r3, [sp, #4]
   12018:	addlt	r3, r9, r3
   1201c:	ldrlt	r0, [r3, #4]
   12020:	cmp	r6, #0
   12024:	beq	12068 <error@@Base+0x29c>
   12028:	ldrb	r3, [r6]
   1202c:	cmp	r3, #0
   12030:	beq	12068 <error@@Base+0x29c>
   12034:	cmp	r3, r8
   12038:	beq	12074 <error@@Base+0x2a8>
   1203c:	mov	r3, #0
   12040:	b	1204c <error@@Base+0x280>
   12044:	cmp	r8, r1
   12048:	beq	12078 <error@@Base+0x2ac>
   1204c:	add	r3, r3, #1
   12050:	sxth	r3, r3
   12054:	add	r2, r3, r3, lsl #1
   12058:	ldrb	r1, [r6, r2, lsl #2]
   1205c:	add	r2, r6, r2, lsl #2
   12060:	cmp	r1, #0
   12064:	bne	12044 <error@@Base+0x278>
   12068:	mov	r1, r5
   1206c:	ldr	r0, [pc, #196]	; 12138 <error@@Base+0x36c>
   12070:	bl	11e54 <error@@Base+0x88>
   12074:	mov	r2, r6
   12078:	ldr	r3, [r2, #4]
   1207c:	cmp	r3, #0
   12080:	beq	120e0 <error@@Base+0x314>
   12084:	ldrb	r1, [r5, #2]
   12088:	cmp	r0, #0
   1208c:	cmpeq	r1, #0
   12090:	beq	120e0 <error@@Base+0x314>
   12094:	ldr	r2, [r3]
   12098:	cmp	r2, #0
   1209c:	bne	12120 <error@@Base+0x354>
   120a0:	cmp	r1, #0
   120a4:	addne	r0, r5, #2
   120a8:	str	r0, [r3]
   120ac:	ldrb	r3, [r5, #2]
   120b0:	cmp	r3, #0
   120b4:	addeq	r4, r4, #1
   120b8:	sxtheq	r4, r4
   120bc:	b	11fb0 <error@@Base+0x1e4>
   120c0:	ldr	r3, [pc, #116]	; 1213c <error@@Base+0x370>
   120c4:	ldrb	r7, [r3, #4]
   120c8:	cmp	r7, #0
   120cc:	bne	12118 <error@@Base+0x34c>
   120d0:	ldr	r3, [sp, #8]
   120d4:	str	r7, [r3]
   120d8:	add	sp, sp, #20
   120dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120e0:	ldr	r3, [r2, #8]
   120e4:	cmp	r3, #0
   120e8:	beq	12068 <error@@Base+0x29c>
   120ec:	ldrb	r2, [r5, #2]
   120f0:	cmp	r2, #0
   120f4:	bne	12068 <error@@Base+0x29c>
   120f8:	ldrb	r2, [r3]
   120fc:	cmp	r2, #0
   12100:	bne	12120 <error@@Base+0x354>
   12104:	mov	r2, #1
   12108:	strb	r2, [r3]
   1210c:	ldr	r3, [sp, #8]
   12110:	ldr	fp, [r3]
   12114:	b	11fb0 <error@@Base+0x1e4>
   12118:	ldr	r0, [sp, #12]
   1211c:	bl	11d80 <abort@plt+0x14e0>
   12120:	mov	r1, r5
   12124:	ldr	r0, [pc, #20]	; 12140 <error@@Base+0x374>
   12128:	bl	11e54 <error@@Base+0x88>
   1212c:	andeq	r7, r2, r4, lsl r4
   12130:	andeq	r1, r1, r4, lsr #28
   12134:	andeq	r2, r1, ip, lsl r9
   12138:	andeq	r2, r1, r4, lsr #18
   1213c:	andeq	r3, r2, ip, ror r0
   12140:	andeq	r2, r1, r4, lsr r9
   12144:	ldr	r3, [pc, #44]	; 12178 <error@@Base+0x3ac>
   12148:	push	{lr}		; (str lr, [sp, #-4]!)
   1214c:	sub	sp, sp, #12
   12150:	ldr	r2, [pc, #36]	; 1217c <error@@Base+0x3b0>
   12154:	str	r1, [sp]
   12158:	ldr	r1, [r3]
   1215c:	ldr	r2, [r2]
   12160:	mov	r3, r0
   12164:	mov	r0, r1
   12168:	ldr	r1, [pc, #16]	; 12180 <error@@Base+0x3b4>
   1216c:	bl	1084c <fprintf@plt>
   12170:	add	sp, sp, #12
   12174:	pop	{pc}		; (ldr pc, [sp], #4)
   12178:	andeq	r3, r2, r8, lsl #1
   1217c:	andeq	r7, r2, r4, lsl r4
   12180:	andeq	r2, r1, r0, ror #17
   12184:	mov	r3, #0
   12188:	str	r3, [r0, #4]
   1218c:	str	r3, [r0]
   12190:	str	r3, [r0, #8]
   12194:	str	r3, [r0, #12]
   12198:	bx	lr
   1219c:	ldr	r3, [r0]
   121a0:	mov	r2, #0
   121a4:	cmp	r3, r2
   121a8:	push	{r4, lr}
   121ac:	mov	r4, r0
   121b0:	stm	r1, {r2, r3}
   121b4:	str	r1, [r0]
   121b8:	streq	r1, [r0, #4]
   121bc:	ldr	r0, [r0, #8]
   121c0:	strne	r1, [r3]
   121c4:	cmp	r0, #0
   121c8:	beq	121d8 <error@@Base+0x40c>
   121cc:	bl	107bc <free@plt>
   121d0:	mov	r3, #0
   121d4:	str	r3, [r4, #8]
   121d8:	ldr	r3, [r4, #12]
   121dc:	add	r3, r3, #1
   121e0:	str	r3, [r4, #12]
   121e4:	pop	{r4, pc}
   121e8:	ldr	r3, [r0, #4]
   121ec:	mov	r2, #0
   121f0:	cmp	r3, r2
   121f4:	push	{r4, lr}
   121f8:	mov	r4, r0
   121fc:	str	r3, [r1]
   12200:	str	r2, [r1, #4]
   12204:	streq	r1, [r0]
   12208:	ldr	r0, [r0, #8]
   1220c:	strne	r1, [r3, #4]
   12210:	cmp	r0, #0
   12214:	str	r1, [r4, #4]
   12218:	beq	12228 <error@@Base+0x45c>
   1221c:	bl	107bc <free@plt>
   12220:	mov	r3, #0
   12224:	str	r3, [r4, #8]
   12228:	ldr	r3, [r4, #12]
   1222c:	add	r3, r3, #1
   12230:	str	r3, [r4, #12]
   12234:	pop	{r4, pc}
   12238:	ldr	r3, [r2]
   1223c:	push	{r4, lr}
   12240:	cmp	r3, #0
   12244:	str	r3, [r1]
   12248:	str	r2, [r1, #4]
   1224c:	mov	r4, r0
   12250:	streq	r1, [r0]
   12254:	ldr	r0, [r0, #8]
   12258:	strne	r1, [r3, #4]
   1225c:	cmp	r0, #0
   12260:	str	r1, [r2]
   12264:	beq	12274 <error@@Base+0x4a8>
   12268:	bl	107bc <free@plt>
   1226c:	mov	r3, #0
   12270:	str	r3, [r4, #8]
   12274:	ldr	r3, [r4, #12]
   12278:	add	r3, r3, #1
   1227c:	str	r3, [r4, #12]
   12280:	pop	{r4, pc}
   12284:	ldr	r3, [r1, #4]
   12288:	push	{r4, lr}
   1228c:	cmp	r3, #0
   12290:	stm	r2, {r1, r3}
   12294:	mov	r4, r0
   12298:	str	r2, [r1, #4]
   1229c:	streq	r2, [r0, #4]
   122a0:	ldr	r0, [r0, #8]
   122a4:	strne	r2, [r3]
   122a8:	cmp	r0, #0
   122ac:	beq	122bc <error@@Base+0x4f0>
   122b0:	bl	107bc <free@plt>
   122b4:	mov	r3, #0
   122b8:	str	r3, [r4, #8]
   122bc:	ldr	r3, [r4, #12]
   122c0:	add	r3, r3, #1
   122c4:	str	r3, [r4, #12]
   122c8:	pop	{r4, pc}
   122cc:	ldr	r3, [r1]
   122d0:	ldr	r2, [r1, #4]
   122d4:	cmp	r3, #0
   122d8:	push	{r4, r5, r6, lr}
   122dc:	mov	r4, r0
   122e0:	strne	r2, [r3, #4]
   122e4:	ldrne	r2, [r1, #4]
   122e8:	streq	r2, [r0]
   122ec:	cmp	r2, #0
   122f0:	streq	r3, [r0, #4]
   122f4:	ldr	r0, [r0, #8]
   122f8:	mov	r5, #0
   122fc:	strne	r3, [r2]
   12300:	cmp	r0, r5
   12304:	str	r5, [r1, #4]
   12308:	str	r5, [r1]
   1230c:	beq	12318 <error@@Base+0x54c>
   12310:	bl	107bc <free@plt>
   12314:	str	r5, [r4, #8]
   12318:	ldr	r3, [r4, #12]
   1231c:	sub	r3, r3, #1
   12320:	str	r3, [r4, #12]
   12324:	pop	{r4, r5, r6, pc}
   12328:	ldr	r3, [r0, #8]
   1232c:	cmp	r3, #0
   12330:	bxne	lr
   12334:	ldr	r3, [r0, #12]
   12338:	cmp	r3, #0
   1233c:	bxeq	lr
   12340:	push	{r4, lr}
   12344:	mov	r1, #4
   12348:	mov	r4, r0
   1234c:	mov	r0, r3
   12350:	bl	11e08 <error@@Base+0x3c>
   12354:	ldr	r3, [r4]
   12358:	cmp	r3, #0
   1235c:	str	r0, [r4, #8]
   12360:	popeq	{r4, pc}
   12364:	sub	r0, r0, #4
   12368:	str	r3, [r0, #4]!
   1236c:	ldr	r3, [r3, #4]
   12370:	cmp	r3, #0
   12374:	bne	12368 <error@@Base+0x59c>
   12378:	pop	{r4, pc}
   1237c:	push	{r4, r5, r6, r7, r8, lr}
   12380:	ldr	r4, [r0]
   12384:	cmp	r4, #0
   12388:	popeq	{r4, r5, r6, r7, r8, pc}
   1238c:	mov	r6, r1
   12390:	mov	r5, r0
   12394:	mov	r7, #0
   12398:	ldr	r3, [r4]
   1239c:	ldr	r2, [r4, #4]
   123a0:	cmp	r3, #0
   123a4:	strne	r2, [r3, #4]
   123a8:	ldrne	r2, [r4, #4]
   123ac:	ldr	r0, [r5, #8]
   123b0:	streq	r2, [r5]
   123b4:	cmp	r2, #0
   123b8:	strne	r3, [r2]
   123bc:	streq	r3, [r5, #4]
   123c0:	cmp	r0, #0
   123c4:	str	r7, [r4, #4]
   123c8:	str	r7, [r4]
   123cc:	beq	123d8 <error@@Base+0x60c>
   123d0:	bl	107bc <free@plt>
   123d4:	str	r7, [r5, #8]
   123d8:	ldr	r3, [r5, #12]
   123dc:	mov	r0, r4
   123e0:	sub	r3, r3, #1
   123e4:	str	r3, [r5, #12]
   123e8:	blx	r6
   123ec:	ldr	r4, [r5]
   123f0:	cmp	r4, #0
   123f4:	bne	12398 <error@@Base+0x5cc>
   123f8:	pop	{r4, r5, r6, r7, r8, pc}
   123fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12400:	sub	sp, sp, #12
   12404:	lsl	r3, r1, #2
   12408:	str	r1, [sp]
   1240c:	str	r3, [sp, #4]
   12410:	ldr	r5, [pc, #344]	; 12570 <error@@Base+0x7a4>
   12414:	ldr	r3, [sp]
   12418:	mov	r9, r0
   1241c:	ldr	r1, [r5]
   12420:	cmp	r9, r3
   12424:	movlt	r4, r3
   12428:	ldr	r7, [r1, r9, lsl #2]
   1242c:	movlt	r8, r9
   12430:	bge	1255c <error@@Base+0x790>
   12434:	lsl	r6, r4, #2
   12438:	b	12440 <error@@Base+0x674>
   1243c:	ldr	r1, [r5]
   12440:	ldr	r1, [r1, r6]
   12444:	ldr	r3, [r5, #4]
   12448:	mov	r0, r7
   1244c:	blx	r3
   12450:	cmp	r0, #0
   12454:	bge	124a4 <error@@Base+0x6d8>
   12458:	sub	r4, r4, #1
   1245c:	cmp	r4, r8
   12460:	sub	r6, r6, #4
   12464:	bgt	1243c <error@@Base+0x670>
   12468:	bne	124a0 <error@@Base+0x6d4>
   1246c:	ldr	r1, [r5]
   12470:	mov	fp, r4
   12474:	add	r0, r1, fp, lsl #2
   12478:	sub	r1, fp, #1
   1247c:	cmp	r9, r1
   12480:	str	r7, [r0]
   12484:	blt	12540 <error@@Base+0x774>
   12488:	ldr	r3, [sp]
   1248c:	add	r9, r4, #1
   12490:	cmp	r9, r3
   12494:	blt	1241c <error@@Base+0x650>
   12498:	add	sp, sp, #12
   1249c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a0:	lsl	r6, r4, #2
   124a4:	ldr	r1, [r5]
   124a8:	add	fp, r8, #1
   124ac:	cmp	fp, r4
   124b0:	ldr	r2, [r1, r6]
   124b4:	add	r0, r1, r6
   124b8:	str	r2, [r1, r8, lsl #2]
   124bc:	lsl	r8, r8, #2
   124c0:	bge	1254c <error@@Base+0x780>
   124c4:	add	sl, r8, #4
   124c8:	b	124e0 <error@@Base+0x714>
   124cc:	add	fp, fp, #1
   124d0:	cmp	fp, r4
   124d4:	add	sl, sl, #4
   124d8:	beq	12524 <error@@Base+0x758>
   124dc:	ldr	r1, [r5]
   124e0:	ldr	r1, [r1, sl]
   124e4:	ldr	r8, [r5, #4]
   124e8:	mov	r0, r7
   124ec:	blx	r8
   124f0:	cmp	r0, #0
   124f4:	bgt	124cc <error@@Base+0x700>
   124f8:	ldr	r1, [r5]
   124fc:	mov	r8, fp
   12500:	add	r0, r1, r6
   12504:	sub	r4, r4, #1
   12508:	ldr	r2, [r1, sl]
   1250c:	cmp	r4, fp
   12510:	str	r2, [r0]
   12514:	bgt	12434 <error@@Base+0x668>
   12518:	mov	fp, r4
   1251c:	mov	r4, r8
   12520:	b	12474 <error@@Base+0x6a8>
   12524:	ldr	r0, [r5]
   12528:	add	r0, r0, r6
   1252c:	sub	r1, fp, #1
   12530:	cmp	r9, r1
   12534:	mov	r4, fp
   12538:	str	r7, [r0]
   1253c:	bge	12488 <error@@Base+0x6bc>
   12540:	mov	r0, r9
   12544:	bl	123fc <error@@Base+0x630>
   12548:	b	12488 <error@@Base+0x6bc>
   1254c:	beq	1252c <error@@Base+0x760>
   12550:	lsl	sl, fp, #2
   12554:	mov	r8, fp
   12558:	b	12504 <error@@Base+0x738>
   1255c:	mov	fp, r3
   12560:	ldr	r3, [sp, #4]
   12564:	mov	r4, r9
   12568:	add	r0, r1, r3
   1256c:	b	12478 <error@@Base+0x6ac>
   12570:	andeq	r3, r2, r4, lsl #2
   12574:	cmp	r0, #1
   12578:	mov	ip, r1
   1257c:	bxle	lr
   12580:	ldr	r3, [pc, #16]	; 12598 <error@@Base+0x7cc>
   12584:	sub	r1, r0, #1
   12588:	mov	r0, #0
   1258c:	str	ip, [r3]
   12590:	str	r2, [r3, #4]
   12594:	b	123fc <error@@Base+0x630>
   12598:	andeq	r3, r2, r4, lsl #2
   1259c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125a0:	mov	r7, r0
   125a4:	ldr	r6, [pc, #72]	; 125f4 <error@@Base+0x828>
   125a8:	ldr	r5, [pc, #72]	; 125f8 <error@@Base+0x82c>
   125ac:	add	r6, pc, r6
   125b0:	add	r5, pc, r5
   125b4:	sub	r6, r6, r5
   125b8:	mov	r8, r1
   125bc:	mov	r9, r2
   125c0:	bl	10760 <calloc@plt-0x20>
   125c4:	asrs	r6, r6, #2
   125c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125cc:	mov	r4, #0
   125d0:	add	r4, r4, #1
   125d4:	ldr	r3, [r5], #4
   125d8:	mov	r2, r9
   125dc:	mov	r1, r8
   125e0:	mov	r0, r7
   125e4:	blx	r3
   125e8:	cmp	r6, r4
   125ec:	bne	125d0 <error@@Base+0x804>
   125f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125f4:	andeq	r0, r1, ip, asr #18
   125f8:	andeq	r0, r1, r4, asr #18
   125fc:	bx	lr

Disassembly of section .fini:

00012600 <.fini>:
   12600:	push	{r3, lr}
   12604:	pop	{r3, pc}
