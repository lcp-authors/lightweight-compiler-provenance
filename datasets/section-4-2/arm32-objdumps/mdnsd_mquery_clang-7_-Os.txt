
../repos/mdnsd/src/.libs/mquery:     file format elf32-littlearm


Disassembly of section .init:

000107a8 <.init>:
   107a8:	push	{r3, lr}
   107ac:	bl	10d8c <close@plt+0x474>
   107b0:	pop	{r3, pc}

Disassembly of section .plt:

000107b4 <mdnsd_new@plt-0x14>:
   107b4:	push	{lr}		; (str lr, [sp, #-4]!)
   107b8:	ldr	lr, [pc, #4]	; 107c4 <mdnsd_new@plt-0x4>
   107bc:	add	lr, pc, lr
   107c0:	ldr	pc, [lr, #8]!
   107c4:	andeq	r1, r1, ip, lsr r8

000107c8 <mdnsd_new@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2108]!	; 0x83c

000107d4 <setsockopt@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2100]!	; 0x834

000107e0 <printf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2092]!	; 0x82c

000107ec <time@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2084]!	; 0x824

000107f8 <inet_ntoa@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2076]!	; 0x81c

00010804 <select@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2068]!	; 0x814

00010810 <recvfrom@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2060]!	; 0x80c

0001081c <puts@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2052]!	; 0x804

00010828 <__libc_start_main@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2044]!	; 0x7fc

00010834 <strerror@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2036]!	; 0x7f4

00010840 <__gmon_start__@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2028]!	; 0x7ec

0001084c <getopt@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2020]!	; 0x7e4

00010858 <message_packet@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2012]!	; 0x7dc

00010864 <message_parse@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2004]!	; 0x7d4

00010870 <__errno_location@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1996]!	; 0x7cc

0001087c <bind@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1988]!	; 0x7c4

00010888 <mdnsd_log@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1980]!	; 0x7bc

00010894 <memset@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1972]!	; 0x7b4

000108a0 <sendto@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #69632	; 0x11000
   108a8:	ldr	pc, [ip, #1964]!	; 0x7ac

000108ac <mdnsd_sleep@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #69632	; 0x11000
   108b4:	ldr	pc, [ip, #1956]!	; 0x7a4

000108b8 <message_packet_len@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #69632	; 0x11000
   108c0:	ldr	pc, [ip, #1948]!	; 0x79c

000108c4 <atoi@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #69632	; 0x11000
   108cc:	ldr	pc, [ip, #1940]!	; 0x794

000108d0 <mdnsd_in@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1932]!	; 0x78c

000108dc <mdnsd_out@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1924]!	; 0x784

000108e8 <socket@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1916]!	; 0x77c

000108f4 <mdnsd_query@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1908]!	; 0x774

00010900 <inet_addr@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1900]!	; 0x76c

0001090c <abort@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1892]!	; 0x764

00010918 <close@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1884]!	; 0x75c

Disassembly of section .text:

00010924 <.text>:
   10924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10928:	sub	sp, sp, #133120	; 0x20800
   1092c:	mov	r5, r0
   10930:	sub	sp, sp, #228	; 0xe4
   10934:	mov	r4, r1
   10938:	mov	sl, #12
   1093c:	ldr	r6, [pc, #976]	; 10d14 <close@plt+0x3fc>
   10940:	ldr	r7, [pc, #976]	; 10d18 <close@plt+0x400>
   10944:	mov	r2, r6
   10948:	mov	r1, r4
   1094c:	mov	r0, r5
   10950:	bl	1084c <getopt@plt>
   10954:	cmn	r0, #1
   10958:	bne	10b08 <close@plt+0x1f0>
   1095c:	ldr	r3, [pc, #952]	; 10d1c <close@plt+0x404>
   10960:	mov	r1, #1000	; 0x3e8
   10964:	mov	r0, #1
   10968:	mov	r8, #1
   1096c:	ldr	r3, [r3]
   10970:	cmp	r3, r5
   10974:	ldrlt	r9, [r4, r3, lsl #2]
   10978:	ldrge	r9, [pc, #928]	; 10d20 <close@plt+0x408>
   1097c:	bl	107c8 <mdnsd_new@plt>
   10980:	mov	r7, r0
   10984:	mov	r2, #0
   10988:	str	r8, [sp, #56]	; 0x38
   1098c:	movw	r1, #2050	; 0x802
   10990:	mov	r0, #2
   10994:	bl	108e8 <socket@plt>
   10998:	mov	r4, r0
   1099c:	bl	10870 <__errno_location@plt>
   109a0:	cmp	r4, #0
   109a4:	mov	r5, r0
   109a8:	bge	10b58 <close@plt+0x240>
   109ac:	mov	r4, #0
   109b0:	mov	r8, #0
   109b4:	mov	r1, sl
   109b8:	ldr	r0, [pc, #868]	; 10d24 <close@plt+0x40c>
   109bc:	mov	r2, r9
   109c0:	mov	r6, #1
   109c4:	bl	107e0 <printf@plt>
   109c8:	ldr	r3, [pc, #856]	; 10d28 <close@plt+0x410>
   109cc:	mov	r2, sl
   109d0:	mov	r1, r9
   109d4:	mov	r0, r7
   109d8:	str	r8, [sp]
   109dc:	asr	sl, r4, #5
   109e0:	bl	108f4 <mdnsd_query@plt>
   109e4:	and	r3, r4, #31
   109e8:	lsl	r6, r6, r3
   109ec:	mov	r0, r7
   109f0:	bl	108ac <mdnsd_sleep@plt>
   109f4:	add	r2, sp, #56	; 0x38
   109f8:	mov	r3, #0
   109fc:	add	r3, r3, #1
   10a00:	str	r8, [r2], #4
   10a04:	cmp	r3, #32
   10a08:	bne	109fc <close@plt+0xe4>
   10a0c:	add	r3, sp, #2272	; 0x8e0
   10a10:	add	r1, sp, #56	; 0x38
   10a14:	add	r9, r3, sl, lsl #2
   10a18:	ldr	r3, [r9, #-2216]	; 0xfffff758
   10a1c:	orr	r3, r3, r6
   10a20:	str	r3, [r9, #-2216]	; 0xfffff758
   10a24:	mov	r3, #0
   10a28:	mov	r2, r3
   10a2c:	str	r0, [sp]
   10a30:	add	r0, r4, #1
   10a34:	bl	10804 <select@plt>
   10a38:	ldr	r3, [r9, #-2216]	; 0xfffff758
   10a3c:	tst	r6, r3
   10a40:	movne	r3, #16
   10a44:	strne	r3, [sp, #20]
   10a48:	bne	10cb8 <close@plt+0x3a0>
   10a4c:	add	r1, sp, #65536	; 0x10000
   10a50:	add	r3, sp, #14
   10a54:	add	r2, sp, #16
   10a58:	add	r1, r1, #184	; 0xb8
   10a5c:	mov	r0, r7
   10a60:	bl	108dc <mdnsd_out@plt>
   10a64:	cmp	r0, #0
   10a68:	beq	109ec <close@plt+0xd4>
   10a6c:	mov	r3, #0
   10a70:	mov	r2, #0
   10a74:	add	r0, sp, #65536	; 0x10000
   10a78:	add	fp, sp, #40	; 0x28
   10a7c:	strd	r2, [sp, #48]	; 0x30
   10a80:	add	r3, sp, #48	; 0x30
   10a84:	mov	r2, #2
   10a88:	add	r0, r0, #184	; 0xb8
   10a8c:	strh	r2, [r3, #-8]
   10a90:	add	r2, sp, #16
   10a94:	ldrh	r2, [r2, #-2]
   10a98:	strh	r2, [r3, #-6]
   10a9c:	ldr	r3, [sp, #16]
   10aa0:	str	r3, [sp, #44]	; 0x2c
   10aa4:	bl	10858 <message_packet@plt>
   10aa8:	mov	r9, r0
   10aac:	add	r0, sp, #65536	; 0x10000
   10ab0:	add	r0, r0, #184	; 0xb8
   10ab4:	bl	108b8 <message_packet_len@plt>
   10ab8:	mov	r3, #16
   10abc:	mov	r2, r0
   10ac0:	str	fp, [sp]
   10ac4:	mov	r1, r9
   10ac8:	mov	r0, r4
   10acc:	str	r3, [sp, #4]
   10ad0:	mov	r3, #0
   10ad4:	bl	108a0 <sendto@plt>
   10ad8:	mov	r9, r0
   10adc:	add	r0, sp, #65536	; 0x10000
   10ae0:	add	r0, r0, #184	; 0xb8
   10ae4:	bl	108b8 <message_packet_len@plt>
   10ae8:	cmp	r9, r0
   10aec:	beq	10a4c <close@plt+0x134>
   10af0:	ldr	r0, [r5]
   10af4:	bl	10834 <strerror@plt>
   10af8:	mov	r1, r0
   10afc:	ldr	r0, [pc, #552]	; 10d2c <close@plt+0x414>
   10b00:	bl	107e0 <printf@plt>
   10b04:	b	10b50 <close@plt+0x238>
   10b08:	cmp	r0, #104	; 0x68
   10b0c:	beq	10b20 <close@plt+0x208>
   10b10:	cmp	r0, #116	; 0x74
   10b14:	beq	10b38 <close@plt+0x220>
   10b18:	cmp	r0, #63	; 0x3f
   10b1c:	bne	10b48 <close@plt+0x230>
   10b20:	ldr	r0, [pc, #520]	; 10d30 <close@plt+0x418>
   10b24:	bl	1081c <puts@plt>
   10b28:	mov	r0, #0
   10b2c:	add	sp, sp, #133120	; 0x20800
   10b30:	add	sp, sp, #228	; 0xe4
   10b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b38:	ldr	r0, [r7]
   10b3c:	bl	108c4 <atoi@plt>
   10b40:	mov	sl, r0
   10b44:	b	10944 <close@plt+0x2c>
   10b48:	ldr	r0, [pc, #480]	; 10d30 <close@plt+0x418>
   10b4c:	bl	1081c <puts@plt>
   10b50:	mov	r0, #1
   10b54:	b	10b2c <close@plt+0x214>
   10b58:	mov	r6, #4
   10b5c:	add	r3, sp, #56	; 0x38
   10b60:	mov	r2, #15
   10b64:	mov	r1, r8
   10b68:	mov	r0, r4
   10b6c:	str	r6, [sp]
   10b70:	bl	107d4 <setsockopt@plt>
   10b74:	cmp	r0, #0
   10b78:	beq	10b94 <close@plt+0x27c>
   10b7c:	ldr	r0, [r5]
   10b80:	bl	10834 <strerror@plt>
   10b84:	mov	r2, r0
   10b88:	ldr	r1, [pc, #420]	; 10d34 <close@plt+0x41c>
   10b8c:	mov	r0, r6
   10b90:	bl	10888 <mdnsd_log@plt>
   10b94:	mov	r6, #4
   10b98:	add	r3, sp, #56	; 0x38
   10b9c:	mov	r2, #2
   10ba0:	mov	r1, #1
   10ba4:	mov	r0, r4
   10ba8:	str	r6, [sp]
   10bac:	bl	107d4 <setsockopt@plt>
   10bb0:	cmp	r0, #0
   10bb4:	beq	10bd0 <close@plt+0x2b8>
   10bb8:	ldr	r0, [r5]
   10bbc:	bl	10834 <strerror@plt>
   10bc0:	mov	r2, r0
   10bc4:	ldr	r1, [pc, #364]	; 10d38 <close@plt+0x420>
   10bc8:	mov	r0, r6
   10bcc:	bl	10888 <mdnsd_log@plt>
   10bd0:	ldr	r2, [pc, #356]	; 10d3c <close@plt+0x424>
   10bd4:	add	r1, sp, #65536	; 0x10000
   10bd8:	add	r3, sp, #67584	; 0x10800
   10bdc:	add	r1, r1, #224	; 0xe0
   10be0:	mov	r6, #0
   10be4:	add	r3, r3, #224	; 0xe0
   10be8:	mov	r0, r4
   10bec:	str	r6, [r1, #-36]	; 0xffffffdc
   10bf0:	str	r6, [r1, #-32]	; 0xffffffe0
   10bf4:	str	r6, [r1, #-28]	; 0xffffffe4
   10bf8:	sub	r1, r1, #40	; 0x28
   10bfc:	str	r2, [r3, #-2088]	; 0xfffff7d8
   10c00:	mov	r2, #16
   10c04:	bl	1087c <bind@plt>
   10c08:	subs	r8, r0, #0
   10c0c:	beq	10c1c <close@plt+0x304>
   10c10:	mov	r0, r4
   10c14:	bl	10918 <close@plt>
   10c18:	b	109ac <close@plt+0x94>
   10c1c:	ldr	r0, [pc, #284]	; 10d40 <close@plt+0x428>
   10c20:	bl	10900 <inet_addr@plt>
   10c24:	mov	r3, #8
   10c28:	mov	r2, #35	; 0x23
   10c2c:	mov	r1, r8
   10c30:	str	r3, [sp]
   10c34:	add	r3, sp, #184	; 0xb8
   10c38:	str	r0, [sp, #184]	; 0xb8
   10c3c:	mov	r0, r4
   10c40:	str	r8, [sp, #188]	; 0xbc
   10c44:	bl	107d4 <setsockopt@plt>
   10c48:	cmp	r0, #0
   10c4c:	beq	109b0 <close@plt+0x98>
   10c50:	ldr	r0, [r5]
   10c54:	bl	10834 <strerror@plt>
   10c58:	mov	r2, r0
   10c5c:	ldr	r1, [pc, #224]	; 10d44 <close@plt+0x42c>
   10c60:	mov	r0, #4
   10c64:	bl	10888 <mdnsd_log@plt>
   10c68:	b	109b0 <close@plt+0x98>
   10c6c:	add	r0, sp, #65536	; 0x10000
   10c70:	mov	r2, r9
   10c74:	mov	r1, #0
   10c78:	add	r0, r0, #184	; 0xb8
   10c7c:	bl	10894 <memset@plt>
   10c80:	add	r0, sp, #65536	; 0x10000
   10c84:	add	r1, sp, #184	; 0xb8
   10c88:	add	r0, r0, #184	; 0xb8
   10c8c:	bl	10864 <message_parse@plt>
   10c90:	cmp	r0, #0
   10c94:	bne	10cbc <close@plt+0x3a4>
   10c98:	add	r3, sp, #32
   10c9c:	add	r1, sp, #65536	; 0x10000
   10ca0:	ldr	r2, [sp, #28]
   10ca4:	sub	r3, r3, #8
   10ca8:	add	r1, r1, #184	; 0xb8
   10cac:	ldrh	r3, [r3, #2]
   10cb0:	mov	r0, r7
   10cb4:	bl	108d0 <mdnsd_in@plt>
   10cb8:	ldr	r9, [pc, #136]	; 10d48 <close@plt+0x430>
   10cbc:	add	r3, sp, #24
   10cc0:	add	r2, sp, #20
   10cc4:	add	r1, sp, #184	; 0xb8
   10cc8:	mov	r0, r4
   10ccc:	str	r3, [sp]
   10cd0:	mov	r3, #0
   10cd4:	str	r2, [sp, #4]
   10cd8:	movw	r2, #65535	; 0xffff
   10cdc:	bl	10810 <recvfrom@plt>
   10ce0:	cmp	r0, #0
   10ce4:	bgt	10c6c <close@plt+0x354>
   10ce8:	beq	10a4c <close@plt+0x134>
   10cec:	ldr	r9, [r5]
   10cf0:	cmp	r9, #11
   10cf4:	beq	10a4c <close@plt+0x134>
   10cf8:	mov	r0, r9
   10cfc:	bl	10834 <strerror@plt>
   10d00:	mov	r2, r0
   10d04:	mov	r1, r9
   10d08:	ldr	r0, [pc, #60]	; 10d4c <close@plt+0x434>
   10d0c:	bl	107e0 <printf@plt>
   10d10:	b	10b50 <close@plt+0x238>
   10d14:	andeq	r1, r1, r4, lsr r0
   10d18:	muleq	r2, r8, r0
   10d1c:	muleq	r2, r0, r0
   10d20:	strdeq	r0, [r1], -r2
   10d24:	andeq	r1, r1, pc, lsr #1
   10d28:	andeq	r0, r1, r0, asr #28
   10d2c:	andeq	r1, r1, pc, ror #1
   10d30:	andeq	r1, r1, r0, lsl r0
   10d34:	andeq	r1, r1, r9, lsr r0
   10d38:	andeq	r1, r1, r9, asr r0
   10d3c:	ldmdb	r4, {r1}
   10d40:	andeq	r1, r1, r9, ror r0
   10d44:	andeq	r1, r1, r5, lsl #1
   10d48:	andeq	r0, r1, r8, lsr #16
   10d4c:	andeq	r1, r1, ip, asr #1
   10d50:	mov	fp, #0
   10d54:	mov	lr, #0
   10d58:	pop	{r1}		; (ldr r1, [sp], #4)
   10d5c:	mov	r2, sp
   10d60:	push	{r2}		; (str r2, [sp, #-4]!)
   10d64:	push	{r0}		; (str r0, [sp, #-4]!)
   10d68:	ldr	ip, [pc, #16]	; 10d80 <close@plt+0x468>
   10d6c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d70:	ldr	r0, [pc, #12]	; 10d84 <close@plt+0x46c>
   10d74:	ldr	r3, [pc, #12]	; 10d88 <close@plt+0x470>
   10d78:	bl	10828 <__libc_start_main@plt>
   10d7c:	bl	1090c <abort@plt>
   10d80:	andeq	r0, r1, r4, ror #30
   10d84:	andeq	r0, r1, r4, lsr #18
   10d88:	andeq	r0, r1, r4, lsl #30
   10d8c:	ldr	r3, [pc, #20]	; 10da8 <close@plt+0x490>
   10d90:	ldr	r2, [pc, #20]	; 10dac <close@plt+0x494>
   10d94:	add	r3, pc, r3
   10d98:	ldr	r2, [r3, r2]
   10d9c:	cmp	r2, #0
   10da0:	bxeq	lr
   10da4:	b	10840 <__gmon_start__@plt>
   10da8:	andeq	r1, r1, r4, ror #4
   10dac:	andeq	r0, r0, r0, lsl #1
   10db0:	ldr	r0, [pc, #24]	; 10dd0 <close@plt+0x4b8>
   10db4:	ldr	r3, [pc, #24]	; 10dd4 <close@plt+0x4bc>
   10db8:	cmp	r3, r0
   10dbc:	bxeq	lr
   10dc0:	ldr	r3, [pc, #16]	; 10dd8 <close@plt+0x4c0>
   10dc4:	cmp	r3, #0
   10dc8:	bxeq	lr
   10dcc:	bx	r3
   10dd0:	andeq	r2, r2, ip, lsl #1
   10dd4:	andeq	r2, r2, ip, lsl #1
   10dd8:	andeq	r0, r0, r0
   10ddc:	ldr	r0, [pc, #36]	; 10e08 <close@plt+0x4f0>
   10de0:	ldr	r1, [pc, #36]	; 10e0c <close@plt+0x4f4>
   10de4:	sub	r1, r1, r0
   10de8:	asr	r1, r1, #2
   10dec:	add	r1, r1, r1, lsr #31
   10df0:	asrs	r1, r1, #1
   10df4:	bxeq	lr
   10df8:	ldr	r3, [pc, #16]	; 10e10 <close@plt+0x4f8>
   10dfc:	cmp	r3, #0
   10e00:	bxeq	lr
   10e04:	bx	r3
   10e08:	andeq	r2, r2, ip, lsl #1
   10e0c:	andeq	r2, r2, ip, lsl #1
   10e10:	andeq	r0, r0, r0
   10e14:	push	{r4, lr}
   10e18:	ldr	r4, [pc, #24]	; 10e38 <close@plt+0x520>
   10e1c:	ldrb	r3, [r4]
   10e20:	cmp	r3, #0
   10e24:	popne	{r4, pc}
   10e28:	bl	10db0 <close@plt+0x498>
   10e2c:	mov	r3, #1
   10e30:	strb	r3, [r4]
   10e34:	pop	{r4, pc}
   10e38:	muleq	r2, ip, r0
   10e3c:	b	10ddc <close@plt+0x4c4>
   10e40:	push	{r0, r1, r4, r5, r6, lr}
   10e44:	mov	r5, r0
   10e48:	ldr	r4, [r0, #8]
   10e4c:	cmp	r4, #0
   10e50:	beq	10e60 <close@plt+0x548>
   10e54:	mov	r0, #0
   10e58:	bl	107ec <time@plt>
   10e5c:	sub	r4, r4, r0
   10e60:	ldrh	r1, [r5, #4]
   10e64:	ldr	r6, [r5]
   10e68:	cmp	r1, #12
   10e6c:	beq	10ea8 <close@plt+0x590>
   10e70:	cmp	r1, #33	; 0x21
   10e74:	beq	10ebc <close@plt+0x5a4>
   10e78:	cmp	r1, #1
   10e7c:	bne	10edc <close@plt+0x5c4>
   10e80:	ldr	r0, [r5, #20]
   10e84:	bl	107f8 <inet_ntoa@plt>
   10e88:	mov	r3, r0
   10e8c:	ldr	r0, [pc, #96]	; 10ef4 <close@plt+0x5dc>
   10e90:	mov	r2, r4
   10e94:	mov	r1, r6
   10e98:	bl	107e0 <printf@plt>
   10e9c:	mov	r0, #0
   10ea0:	add	sp, sp, #8
   10ea4:	pop	{r4, r5, r6, pc}
   10ea8:	mov	r2, r4
   10eac:	mov	r1, r6
   10eb0:	ldr	r0, [pc, #64]	; 10ef8 <close@plt+0x5e0>
   10eb4:	ldr	r3, [r5, #24]
   10eb8:	b	10e98 <close@plt+0x580>
   10ebc:	ldrh	r3, [r5, #32]
   10ec0:	mov	r2, r4
   10ec4:	mov	r1, r6
   10ec8:	ldr	r0, [pc, #44]	; 10efc <close@plt+0x5e4>
   10ecc:	str	r3, [sp]
   10ed0:	ldr	r3, [r5, #24]
   10ed4:	bl	107e0 <printf@plt>
   10ed8:	b	10e9c <close@plt+0x584>
   10edc:	ldrh	r3, [r5, #12]
   10ee0:	mov	r2, r6
   10ee4:	ldr	r0, [pc, #20]	; 10f00 <close@plt+0x5e8>
   10ee8:	str	r3, [sp]
   10eec:	mov	r3, r4
   10ef0:	b	10ed4 <close@plt+0x5bc>
   10ef4:	andeq	r0, r1, r4, ror pc
   10ef8:	muleq	r1, r2, pc	; <UNPREDICTABLE>
   10efc:	andeq	r0, r1, pc, lsr #31
   10f00:	andeq	r0, r1, pc, asr #31
   10f04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f08:	mov	r7, r0
   10f0c:	ldr	r6, [pc, #72]	; 10f5c <close@plt+0x644>
   10f10:	ldr	r5, [pc, #72]	; 10f60 <close@plt+0x648>
   10f14:	add	r6, pc, r6
   10f18:	add	r5, pc, r5
   10f1c:	sub	r6, r6, r5
   10f20:	mov	r8, r1
   10f24:	mov	r9, r2
   10f28:	bl	107a8 <mdnsd_new@plt-0x20>
   10f2c:	asrs	r6, r6, #2
   10f30:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f34:	mov	r4, #0
   10f38:	add	r4, r4, #1
   10f3c:	ldr	r3, [r5], #4
   10f40:	mov	r2, r9
   10f44:	mov	r1, r8
   10f48:	mov	r0, r7
   10f4c:	blx	r3
   10f50:	cmp	r6, r4
   10f54:	bne	10f38 <close@plt+0x620>
   10f58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f5c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10f60:	andeq	r0, r1, r8, ror #31
   10f64:	bx	lr

Disassembly of section .fini:

00010f68 <.fini>:
   10f68:	push	{r3, lr}
   10f6c:	pop	{r3, pc}
