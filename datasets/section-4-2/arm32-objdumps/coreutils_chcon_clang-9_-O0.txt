
../repos/coreutils/src/chcon:     file format elf32-littlearm


Disassembly of section .init:

0001147c <.init>:
   1147c:	push	{r3, lr}
   11480:	bl	118bc <__assert_fail@plt+0x48>
   11484:	pop	{r3, pc}

Disassembly of section .plt:

00011488 <fstatfs64@plt-0x14>:
   11488:	push	{lr}		; (str lr, [sp, #-4]!)
   1148c:	ldr	lr, [pc, #4]	; 11498 <fstatfs64@plt-0x4>
   11490:	add	lr, pc, lr
   11494:	ldr	pc, [lr, #8]!
   11498:	andeq	r3, r2, r8, ror #22

0001149c <fstatfs64@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #143360	; 0x23000
   114a4:	ldr	pc, [ip, #2920]!	; 0xb68

000114a8 <calloc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #143360	; 0x23000
   114b0:	ldr	pc, [ip, #2912]!	; 0xb60

000114b4 <fputs_unlocked@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #143360	; 0x23000
   114bc:	ldr	pc, [ip, #2904]!	; 0xb58

000114c0 <raise@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #143360	; 0x23000
   114c8:	ldr	pc, [ip, #2896]!	; 0xb50

000114cc <is_selinux_enabled@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #143360	; 0x23000
   114d4:	ldr	pc, [ip, #2888]!	; 0xb48

000114d8 <strcmp@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #143360	; 0x23000
   114e0:	ldr	pc, [ip, #2880]!	; 0xb40

000114e4 <printf@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #143360	; 0x23000
   114ec:	ldr	pc, [ip, #2872]!	; 0xb38

000114f0 <fflush@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #143360	; 0x23000
   114f8:	ldr	pc, [ip, #2864]!	; 0xb30

000114fc <lsetfilecon@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #143360	; 0x23000
   11504:	ldr	pc, [ip, #2856]!	; 0xb28

00011508 <memmove@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #143360	; 0x23000
   11510:	ldr	pc, [ip, #2848]!	; 0xb20

00011514 <free@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #143360	; 0x23000
   1151c:	ldr	pc, [ip, #2840]!	; 0xb18

00011520 <_exit@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #143360	; 0x23000
   11528:	ldr	pc, [ip, #2832]!	; 0xb10

0001152c <memcpy@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #143360	; 0x23000
   11534:	ldr	pc, [ip, #2824]!	; 0xb08

00011538 <mbsinit@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #143360	; 0x23000
   11540:	ldr	pc, [ip, #2816]!	; 0xb00

00011544 <context_new@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #143360	; 0x23000
   1154c:	ldr	pc, [ip, #2808]!	; 0xaf8

00011550 <memcmp@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #143360	; 0x23000
   11558:	ldr	pc, [ip, #2800]!	; 0xaf0

0001155c <context_role_set@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #143360	; 0x23000
   11564:	ldr	pc, [ip, #2792]!	; 0xae8

00011568 <context_type_set@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #143360	; 0x23000
   11570:	ldr	pc, [ip, #2784]!	; 0xae0

00011574 <realloc@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #143360	; 0x23000
   1157c:	ldr	pc, [ip, #2776]!	; 0xad8

00011580 <fgetfilecon@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #143360	; 0x23000
   11588:	ldr	pc, [ip, #2768]!	; 0xad0

0001158c <textdomain@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #143360	; 0x23000
   11594:	ldr	pc, [ip, #2760]!	; 0xac8

00011598 <chdir@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #143360	; 0x23000
   115a0:	ldr	pc, [ip, #2752]!	; 0xac0

000115a4 <__fxstatat64@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #143360	; 0x23000
   115ac:	ldr	pc, [ip, #2744]!	; 0xab8

000115b0 <iswprint@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #143360	; 0x23000
   115b8:	ldr	pc, [ip, #2736]!	; 0xab0

000115bc <__fxstat64@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #143360	; 0x23000
   115c4:	ldr	pc, [ip, #2728]!	; 0xaa8

000115c8 <lseek64@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #143360	; 0x23000
   115d0:	ldr	pc, [ip, #2720]!	; 0xaa0

000115d4 <__ctype_get_mb_cur_max@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #143360	; 0x23000
   115dc:	ldr	pc, [ip, #2712]!	; 0xa98

000115e0 <strcpy@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #143360	; 0x23000
   115e8:	ldr	pc, [ip, #2704]!	; 0xa90

000115ec <__fpending@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #143360	; 0x23000
   115f4:	ldr	pc, [ip, #2696]!	; 0xa88

000115f8 <ferror_unlocked@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #143360	; 0x23000
   11600:	ldr	pc, [ip, #2688]!	; 0xa80

00011604 <mbrtowc@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #143360	; 0x23000
   1160c:	ldr	pc, [ip, #2680]!	; 0xa78

00011610 <error@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #143360	; 0x23000
   11618:	ldr	pc, [ip, #2672]!	; 0xa70

0001161c <security_check_context@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #143360	; 0x23000
   11624:	ldr	pc, [ip, #2664]!	; 0xa68

00011628 <open64@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #143360	; 0x23000
   11630:	ldr	pc, [ip, #2656]!	; 0xa60

00011634 <lgetfilecon@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #143360	; 0x23000
   1163c:	ldr	pc, [ip, #2648]!	; 0xa58

00011640 <malloc@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #143360	; 0x23000
   11648:	ldr	pc, [ip, #2640]!	; 0xa50

0001164c <__libc_start_main@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #143360	; 0x23000
   11654:	ldr	pc, [ip, #2632]!	; 0xa48

00011658 <__freading@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #143360	; 0x23000
   11660:	ldr	pc, [ip, #2624]!	; 0xa40

00011664 <__gmon_start__@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #143360	; 0x23000
   1166c:	ldr	pc, [ip, #2616]!	; 0xa38

00011670 <context_free@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #143360	; 0x23000
   11678:	ldr	pc, [ip, #2608]!	; 0xa30

0001167c <getopt_long@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #143360	; 0x23000
   11684:	ldr	pc, [ip, #2600]!	; 0xa28

00011688 <__ctype_b_loc@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #143360	; 0x23000
   11690:	ldr	pc, [ip, #2592]!	; 0xa20

00011694 <getcwd@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #143360	; 0x23000
   1169c:	ldr	pc, [ip, #2584]!	; 0xa18

000116a0 <exit@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #143360	; 0x23000
   116a8:	ldr	pc, [ip, #2576]!	; 0xa10

000116ac <context_user_set@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #143360	; 0x23000
   116b4:	ldr	pc, [ip, #2568]!	; 0xa08

000116b8 <gettext@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #143360	; 0x23000
   116c0:	ldr	pc, [ip, #2560]!	; 0xa00

000116c4 <getfilecon@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #143360	; 0x23000
   116cc:	ldr	pc, [ip, #2552]!	; 0x9f8

000116d0 <strlen@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #143360	; 0x23000
   116d8:	ldr	pc, [ip, #2544]!	; 0x9f0

000116dc <openat64@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #143360	; 0x23000
   116e4:	ldr	pc, [ip, #2536]!	; 0x9e8

000116e8 <memrchr@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #143360	; 0x23000
   116f0:	ldr	pc, [ip, #2528]!	; 0x9e0

000116f4 <fprintf@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #143360	; 0x23000
   116fc:	ldr	pc, [ip, #2520]!	; 0x9d8

00011700 <__errno_location@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #143360	; 0x23000
   11708:	ldr	pc, [ip, #2512]!	; 0x9d0

0001170c <__cxa_atexit@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #143360	; 0x23000
   11714:	ldr	pc, [ip, #2504]!	; 0x9c8

00011718 <memset@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #143360	; 0x23000
   11720:	ldr	pc, [ip, #2496]!	; 0x9c0

00011724 <fileno@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #143360	; 0x23000
   1172c:	ldr	pc, [ip, #2488]!	; 0x9b8

00011730 <memchr@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #143360	; 0x23000
   11738:	ldr	pc, [ip, #2480]!	; 0x9b0

0001173c <setfilecon@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #143360	; 0x23000
   11744:	ldr	pc, [ip, #2472]!	; 0x9a8

00011748 <access@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #143360	; 0x23000
   11750:	ldr	pc, [ip, #2464]!	; 0x9a0

00011754 <fclose@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #143360	; 0x23000
   1175c:	ldr	pc, [ip, #2456]!	; 0x998

00011760 <fseeko64@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #143360	; 0x23000
   11768:	ldr	pc, [ip, #2448]!	; 0x990

0001176c <fcntl64@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #143360	; 0x23000
   11774:	ldr	pc, [ip, #2440]!	; 0x988

00011778 <setlocale@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #143360	; 0x23000
   11780:	ldr	pc, [ip, #2432]!	; 0x980

00011784 <strrchr@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #143360	; 0x23000
   1178c:	ldr	pc, [ip, #2424]!	; 0x978

00011790 <nl_langinfo@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #143360	; 0x23000
   11798:	ldr	pc, [ip, #2416]!	; 0x970

0001179c <sprintf@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #143360	; 0x23000
   117a4:	ldr	pc, [ip, #2408]!	; 0x968

000117a8 <readdir64@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #143360	; 0x23000
   117b0:	ldr	pc, [ip, #2400]!	; 0x960

000117b4 <fdopendir@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #143360	; 0x23000
   117bc:	ldr	pc, [ip, #2392]!	; 0x958

000117c0 <dirfd@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #143360	; 0x23000
   117c8:	ldr	pc, [ip, #2384]!	; 0x950

000117cc <fchdir@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #143360	; 0x23000
   117d4:	ldr	pc, [ip, #2376]!	; 0x948

000117d8 <qsort@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #143360	; 0x23000
   117e0:	ldr	pc, [ip, #2368]!	; 0x940

000117e4 <freecon@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #143360	; 0x23000
   117ec:	ldr	pc, [ip, #2360]!	; 0x938

000117f0 <bindtextdomain@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #143360	; 0x23000
   117f8:	ldr	pc, [ip, #2352]!	; 0x930

000117fc <context_range_set@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #143360	; 0x23000
   11804:	ldr	pc, [ip, #2344]!	; 0x928

00011808 <context_str@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #143360	; 0x23000
   11810:	ldr	pc, [ip, #2336]!	; 0x920

00011814 <__xstat64@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #143360	; 0x23000
   1181c:	ldr	pc, [ip, #2328]!	; 0x918

00011820 <fputs@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #143360	; 0x23000
   11828:	ldr	pc, [ip, #2320]!	; 0x910

0001182c <strncmp@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #143360	; 0x23000
   11834:	ldr	pc, [ip, #2312]!	; 0x908

00011838 <abort@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #143360	; 0x23000
   11840:	ldr	pc, [ip, #2304]!	; 0x900

00011844 <close@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #143360	; 0x23000
   1184c:	ldr	pc, [ip, #2296]!	; 0x8f8

00011850 <__lxstat64@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #143360	; 0x23000
   11858:	ldr	pc, [ip, #2288]!	; 0x8f0

0001185c <closedir@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #143360	; 0x23000
   11864:	ldr	pc, [ip, #2280]!	; 0x8e8

00011868 <strspn@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #143360	; 0x23000
   11870:	ldr	pc, [ip, #2272]!	; 0x8e0

00011874 <__assert_fail@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #143360	; 0x23000
   1187c:	ldr	pc, [ip, #2264]!	; 0x8d8

Disassembly of section .text:

00011880 <.text>:
   11880:	mov	fp, #0
   11884:	mov	lr, #0
   11888:	pop	{r1}		; (ldr r1, [sp], #4)
   1188c:	mov	r2, sp
   11890:	push	{r2}		; (str r2, [sp, #-4]!)
   11894:	push	{r0}		; (str r0, [sp, #-4]!)
   11898:	ldr	ip, [pc, #16]	; 118b0 <__assert_fail@plt+0x3c>
   1189c:	push	{ip}		; (str ip, [sp, #-4]!)
   118a0:	ldr	r0, [pc, #12]	; 118b4 <__assert_fail@plt+0x40>
   118a4:	ldr	r3, [pc, #12]	; 118b8 <__assert_fail@plt+0x44>
   118a8:	bl	1164c <__libc_start_main@plt>
   118ac:	bl	11838 <abort@plt>
   118b0:	andeq	r3, r2, r0, ror r1
   118b4:	andeq	r1, r1, r0, ror #26
   118b8:	andeq	r3, r2, r0, lsl r1
   118bc:	ldr	r3, [pc, #20]	; 118d8 <__assert_fail@plt+0x64>
   118c0:	ldr	r2, [pc, #20]	; 118dc <__assert_fail@plt+0x68>
   118c4:	add	r3, pc, r3
   118c8:	ldr	r2, [r3, r2]
   118cc:	cmp	r2, #0
   118d0:	bxeq	lr
   118d4:	b	11664 <__gmon_start__@plt>
   118d8:	andeq	r3, r2, r4, lsr r7
   118dc:	andeq	r0, r0, r8, asr r1
   118e0:	ldr	r0, [pc, #24]	; 11900 <__assert_fail@plt+0x8c>
   118e4:	ldr	r3, [pc, #24]	; 11904 <__assert_fail@plt+0x90>
   118e8:	cmp	r3, r0
   118ec:	bxeq	lr
   118f0:	ldr	r3, [pc, #16]	; 11908 <__assert_fail@plt+0x94>
   118f4:	cmp	r3, #0
   118f8:	bxeq	lr
   118fc:	bx	r3
   11900:	andeq	r5, r3, ip, lsr #3
   11904:	andeq	r5, r3, ip, lsr #3
   11908:	andeq	r0, r0, r0
   1190c:	ldr	r0, [pc, #36]	; 11938 <__assert_fail@plt+0xc4>
   11910:	ldr	r1, [pc, #36]	; 1193c <__assert_fail@plt+0xc8>
   11914:	sub	r1, r1, r0
   11918:	asr	r1, r1, #2
   1191c:	add	r1, r1, r1, lsr #31
   11920:	asrs	r1, r1, #1
   11924:	bxeq	lr
   11928:	ldr	r3, [pc, #16]	; 11940 <__assert_fail@plt+0xcc>
   1192c:	cmp	r3, #0
   11930:	bxeq	lr
   11934:	bx	r3
   11938:	andeq	r5, r3, ip, lsr #3
   1193c:	andeq	r5, r3, ip, lsr #3
   11940:	andeq	r0, r0, r0
   11944:	push	{r4, lr}
   11948:	ldr	r4, [pc, #24]	; 11968 <__assert_fail@plt+0xf4>
   1194c:	ldrb	r3, [r4]
   11950:	cmp	r3, #0
   11954:	popne	{r4, pc}
   11958:	bl	118e0 <__assert_fail@plt+0x6c>
   1195c:	mov	r3, #1
   11960:	strb	r3, [r4]
   11964:	pop	{r4, pc}
   11968:	andeq	r5, r3, ip, asr #3
   1196c:	b	1190c <__assert_fail@plt+0x98>
   11970:	push	{fp, lr}
   11974:	mov	fp, sp
   11978:	sub	sp, sp, #64	; 0x40
   1197c:	str	r0, [fp, #-4]
   11980:	ldr	r0, [fp, #-4]
   11984:	cmp	r0, #0
   11988:	beq	119d4 <__assert_fail@plt+0x160>
   1198c:	b	11990 <__assert_fail@plt+0x11c>
   11990:	movw	r0, #20928	; 0x51c0
   11994:	movt	r0, #3
   11998:	ldr	r0, [r0]
   1199c:	movw	r1, #12784	; 0x31f0
   119a0:	movt	r1, #2
   119a4:	str	r0, [fp, #-8]
   119a8:	mov	r0, r1
   119ac:	bl	116b8 <gettext@plt>
   119b0:	movw	r1, #21004	; 0x520c
   119b4:	movt	r1, #3
   119b8:	ldr	r2, [r1]
   119bc:	ldr	r1, [fp, #-8]
   119c0:	str	r0, [fp, #-12]
   119c4:	mov	r0, r1
   119c8:	ldr	r1, [fp, #-12]
   119cc:	bl	116f4 <fprintf@plt>
   119d0:	b	11b84 <__assert_fail@plt+0x310>
   119d4:	movw	r0, #12823	; 0x3217
   119d8:	movt	r0, #2
   119dc:	bl	116b8 <gettext@plt>
   119e0:	movw	r1, #21004	; 0x520c
   119e4:	movt	r1, #3
   119e8:	ldr	r2, [r1]
   119ec:	ldr	r3, [r1]
   119f0:	ldr	r1, [r1]
   119f4:	str	r1, [fp, #-16]
   119f8:	mov	r1, r2
   119fc:	mov	r2, r3
   11a00:	ldr	r3, [fp, #-16]
   11a04:	bl	114e4 <printf@plt>
   11a08:	movw	r1, #12981	; 0x32b5
   11a0c:	movt	r1, #2
   11a10:	str	r0, [fp, #-20]	; 0xffffffec
   11a14:	mov	r0, r1
   11a18:	bl	116b8 <gettext@plt>
   11a1c:	movw	r1, #20932	; 0x51c4
   11a20:	movt	r1, #3
   11a24:	ldr	r1, [r1]
   11a28:	bl	114b4 <fputs_unlocked@plt>
   11a2c:	str	r0, [fp, #-24]	; 0xffffffe8
   11a30:	bl	11b8c <__assert_fail@plt+0x318>
   11a34:	movw	r0, #13120	; 0x3340
   11a38:	movt	r0, #2
   11a3c:	bl	116b8 <gettext@plt>
   11a40:	movw	r1, #20932	; 0x51c4
   11a44:	movt	r1, #3
   11a48:	ldr	r1, [r1]
   11a4c:	bl	114b4 <fputs_unlocked@plt>
   11a50:	movw	r1, #13351	; 0x3427
   11a54:	movt	r1, #2
   11a58:	str	r0, [fp, #-28]	; 0xffffffe4
   11a5c:	mov	r0, r1
   11a60:	bl	116b8 <gettext@plt>
   11a64:	movw	r1, #20932	; 0x51c4
   11a68:	movt	r1, #3
   11a6c:	ldr	r1, [r1]
   11a70:	bl	114b4 <fputs_unlocked@plt>
   11a74:	movw	r1, #13634	; 0x3542
   11a78:	movt	r1, #2
   11a7c:	str	r0, [sp, #32]
   11a80:	mov	r0, r1
   11a84:	bl	116b8 <gettext@plt>
   11a88:	movw	r1, #20932	; 0x51c4
   11a8c:	movt	r1, #3
   11a90:	ldr	r1, [r1]
   11a94:	bl	114b4 <fputs_unlocked@plt>
   11a98:	movw	r1, #13762	; 0x35c2
   11a9c:	movt	r1, #2
   11aa0:	str	r0, [sp, #28]
   11aa4:	mov	r0, r1
   11aa8:	bl	116b8 <gettext@plt>
   11aac:	movw	r1, #20932	; 0x51c4
   11ab0:	movt	r1, #3
   11ab4:	ldr	r1, [r1]
   11ab8:	bl	114b4 <fputs_unlocked@plt>
   11abc:	movw	r1, #13881	; 0x3639
   11ac0:	movt	r1, #2
   11ac4:	str	r0, [sp, #24]
   11ac8:	mov	r0, r1
   11acc:	bl	116b8 <gettext@plt>
   11ad0:	movw	r1, #20932	; 0x51c4
   11ad4:	movt	r1, #3
   11ad8:	ldr	r1, [r1]
   11adc:	bl	114b4 <fputs_unlocked@plt>
   11ae0:	movw	r1, #13952	; 0x3680
   11ae4:	movt	r1, #2
   11ae8:	str	r0, [sp, #20]
   11aec:	mov	r0, r1
   11af0:	bl	116b8 <gettext@plt>
   11af4:	movw	r1, #20932	; 0x51c4
   11af8:	movt	r1, #3
   11afc:	ldr	r1, [r1]
   11b00:	bl	114b4 <fputs_unlocked@plt>
   11b04:	movw	r1, #14023	; 0x36c7
   11b08:	movt	r1, #2
   11b0c:	str	r0, [sp, #16]
   11b10:	mov	r0, r1
   11b14:	bl	116b8 <gettext@plt>
   11b18:	movw	r1, #20932	; 0x51c4
   11b1c:	movt	r1, #3
   11b20:	ldr	r1, [r1]
   11b24:	bl	114b4 <fputs_unlocked@plt>
   11b28:	movw	r1, #14488	; 0x3898
   11b2c:	movt	r1, #2
   11b30:	str	r0, [sp, #12]
   11b34:	mov	r0, r1
   11b38:	bl	116b8 <gettext@plt>
   11b3c:	movw	r1, #20932	; 0x51c4
   11b40:	movt	r1, #3
   11b44:	ldr	r1, [r1]
   11b48:	bl	114b4 <fputs_unlocked@plt>
   11b4c:	movw	r1, #14533	; 0x38c5
   11b50:	movt	r1, #2
   11b54:	str	r0, [sp, #8]
   11b58:	mov	r0, r1
   11b5c:	bl	116b8 <gettext@plt>
   11b60:	movw	r1, #20932	; 0x51c4
   11b64:	movt	r1, #3
   11b68:	ldr	r1, [r1]
   11b6c:	bl	114b4 <fputs_unlocked@plt>
   11b70:	movw	r1, #14587	; 0x38fb
   11b74:	movt	r1, #2
   11b78:	str	r0, [sp, #4]
   11b7c:	mov	r0, r1
   11b80:	bl	11bb4 <__assert_fail@plt+0x340>
   11b84:	ldr	r0, [fp, #-4]
   11b88:	bl	116a0 <exit@plt>
   11b8c:	push	{fp, lr}
   11b90:	mov	fp, sp
   11b94:	movw	r0, #14908	; 0x3a3c
   11b98:	movt	r0, #2
   11b9c:	bl	116b8 <gettext@plt>
   11ba0:	movw	r1, #20932	; 0x51c4
   11ba4:	movt	r1, #3
   11ba8:	ldr	r1, [r1]
   11bac:	bl	114b4 <fputs_unlocked@plt>
   11bb0:	pop	{fp, pc}
   11bb4:	push	{fp, lr}
   11bb8:	mov	fp, sp
   11bbc:	sub	sp, sp, #88	; 0x58
   11bc0:	add	r1, sp, #28
   11bc4:	movw	r2, #16224	; 0x3f60
   11bc8:	movt	r2, #2
   11bcc:	str	r0, [fp, #-4]
   11bd0:	mov	r0, r1
   11bd4:	str	r1, [sp, #12]
   11bd8:	mov	r1, r2
   11bdc:	movw	r2, #56	; 0x38
   11be0:	bl	1152c <memcpy@plt>
   11be4:	ldr	r0, [fp, #-4]
   11be8:	str	r0, [sp, #24]
   11bec:	ldr	r0, [sp, #12]
   11bf0:	str	r0, [sp, #20]
   11bf4:	ldr	r0, [sp, #20]
   11bf8:	ldr	r0, [r0]
   11bfc:	movw	r1, #0
   11c00:	cmp	r0, r1
   11c04:	movw	r0, #0
   11c08:	str	r0, [sp, #8]
   11c0c:	beq	11c38 <__assert_fail@plt+0x3c4>
   11c10:	ldr	r0, [fp, #-4]
   11c14:	ldr	r1, [sp, #20]
   11c18:	ldr	r1, [r1]
   11c1c:	bl	114d8 <strcmp@plt>
   11c20:	cmp	r0, #0
   11c24:	movw	r0, #0
   11c28:	moveq	r0, #1
   11c2c:	mvn	r1, #0
   11c30:	eor	r0, r0, r1
   11c34:	str	r0, [sp, #8]
   11c38:	ldr	r0, [sp, #8]
   11c3c:	tst	r0, #1
   11c40:	beq	11c54 <__assert_fail@plt+0x3e0>
   11c44:	ldr	r0, [sp, #20]
   11c48:	add	r0, r0, #8
   11c4c:	str	r0, [sp, #20]
   11c50:	b	11bf4 <__assert_fail@plt+0x380>
   11c54:	ldr	r0, [sp, #20]
   11c58:	ldr	r0, [r0, #4]
   11c5c:	movw	r1, #0
   11c60:	cmp	r0, r1
   11c64:	beq	11c74 <__assert_fail@plt+0x400>
   11c68:	ldr	r0, [sp, #20]
   11c6c:	ldr	r0, [r0, #4]
   11c70:	str	r0, [sp, #24]
   11c74:	movw	r0, #15078	; 0x3ae6
   11c78:	movt	r0, #2
   11c7c:	bl	116b8 <gettext@plt>
   11c80:	movw	r1, #14632	; 0x3928
   11c84:	movt	r1, #2
   11c88:	movw	r2, #15101	; 0x3afd
   11c8c:	movt	r2, #2
   11c90:	bl	114e4 <printf@plt>
   11c94:	movw	r1, #5
   11c98:	str	r0, [sp, #4]
   11c9c:	mov	r0, r1
   11ca0:	movw	r1, #0
   11ca4:	bl	11778 <setlocale@plt>
   11ca8:	str	r0, [sp, #16]
   11cac:	ldr	r0, [sp, #16]
   11cb0:	movw	r1, #0
   11cb4:	cmp	r0, r1
   11cb8:	beq	11cf4 <__assert_fail@plt+0x480>
   11cbc:	ldr	r0, [sp, #16]
   11cc0:	movw	r1, #15141	; 0x3b25
   11cc4:	movt	r1, #2
   11cc8:	movw	r2, #3
   11ccc:	bl	1182c <strncmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	beq	11cf4 <__assert_fail@plt+0x480>
   11cd8:	movw	r0, #15145	; 0x3b29
   11cdc:	movt	r0, #2
   11ce0:	bl	116b8 <gettext@plt>
   11ce4:	movw	r1, #20932	; 0x51c4
   11ce8:	movt	r1, #3
   11cec:	ldr	r1, [r1]
   11cf0:	bl	114b4 <fputs_unlocked@plt>
   11cf4:	movw	r0, #15216	; 0x3b70
   11cf8:	movt	r0, #2
   11cfc:	bl	116b8 <gettext@plt>
   11d00:	ldr	r2, [fp, #-4]
   11d04:	movw	r1, #15101	; 0x3afd
   11d08:	movt	r1, #2
   11d0c:	bl	114e4 <printf@plt>
   11d10:	movw	r1, #15243	; 0x3b8b
   11d14:	movt	r1, #2
   11d18:	str	r0, [sp]
   11d1c:	mov	r0, r1
   11d20:	bl	116b8 <gettext@plt>
   11d24:	ldr	r1, [sp, #24]
   11d28:	ldr	r2, [sp, #24]
   11d2c:	ldr	r3, [fp, #-4]
   11d30:	cmp	r2, r3
   11d34:	movw	r2, #0
   11d38:	moveq	r2, #1
   11d3c:	tst	r2, #1
   11d40:	movw	r2, #14487	; 0x3897
   11d44:	movt	r2, #2
   11d48:	movw	r3, #15011	; 0x3aa3
   11d4c:	movt	r3, #2
   11d50:	movne	r2, r3
   11d54:	bl	114e4 <printf@plt>
   11d58:	mov	sp, fp
   11d5c:	pop	{fp, pc}
   11d60:	push	{fp, lr}
   11d64:	mov	fp, sp
   11d68:	sub	sp, sp, #136	; 0x88
   11d6c:	movw	r2, #0
   11d70:	str	r2, [fp, #-4]
   11d74:	str	r0, [fp, #-8]
   11d78:	str	r1, [fp, #-12]
   11d7c:	movw	r0, #16
   11d80:	str	r0, [fp, #-16]
   11d84:	mvn	r0, #0
   11d88:	str	r0, [fp, #-20]	; 0xffffffec
   11d8c:	movw	r0, #0
   11d90:	strb	r0, [fp, #-22]	; 0xffffffea
   11d94:	strb	r0, [fp, #-23]	; 0xffffffe9
   11d98:	str	r2, [fp, #-28]	; 0xffffffe4
   11d9c:	ldr	r0, [fp, #-12]
   11da0:	ldr	r0, [r0]
   11da4:	bl	18dd0 <__assert_fail@plt+0x755c>
   11da8:	movw	r0, #6
   11dac:	movw	r1, #14487	; 0x3897
   11db0:	movt	r1, #2
   11db4:	bl	11778 <setlocale@plt>
   11db8:	movw	r1, #14636	; 0x392c
   11dbc:	movt	r1, #2
   11dc0:	str	r0, [fp, #-40]	; 0xffffffd8
   11dc4:	mov	r0, r1
   11dc8:	movw	r1, #14593	; 0x3901
   11dcc:	movt	r1, #2
   11dd0:	bl	117f0 <bindtextdomain@plt>
   11dd4:	movw	r1, #14636	; 0x392c
   11dd8:	movt	r1, #2
   11ddc:	str	r0, [fp, #-44]	; 0xffffffd4
   11de0:	mov	r0, r1
   11de4:	bl	1158c <textdomain@plt>
   11de8:	movw	r1, #13004	; 0x32cc
   11dec:	movt	r1, #1
   11df0:	str	r0, [fp, #-48]	; 0xffffffd0
   11df4:	mov	r0, r1
   11df8:	bl	23174 <__assert_fail@plt+0x11900>
   11dfc:	ldr	r0, [fp, #-8]
   11e00:	ldr	r1, [fp, #-12]
   11e04:	movw	r2, #14617	; 0x3919
   11e08:	movt	r2, #2
   11e0c:	movw	r3, #16000	; 0x3e80
   11e10:	movt	r3, #2
   11e14:	movw	ip, #0
   11e18:	str	ip, [sp]
   11e1c:	bl	1167c <getopt_long@plt>
   11e20:	str	r0, [fp, #-32]	; 0xffffffe0
   11e24:	cmn	r0, #1
   11e28:	beq	120d8 <__assert_fail@plt+0x864>
   11e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e30:	cmn	r0, #3
   11e34:	str	r0, [fp, #-52]	; 0xffffffcc
   11e38:	beq	12078 <__assert_fail@plt+0x804>
   11e3c:	b	11e40 <__assert_fail@plt+0x5cc>
   11e40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e44:	cmn	r0, #2
   11e48:	beq	12070 <__assert_fail@plt+0x7fc>
   11e4c:	b	11e50 <__assert_fail@plt+0x5dc>
   11e50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e54:	cmp	r0, #72	; 0x48
   11e58:	beq	11f4c <__assert_fail@plt+0x6d8>
   11e5c:	b	11e60 <__assert_fail@plt+0x5ec>
   11e60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e64:	cmp	r0, #76	; 0x4c
   11e68:	beq	11f58 <__assert_fail@plt+0x6e4>
   11e6c:	b	11e70 <__assert_fail@plt+0x5fc>
   11e70:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e74:	cmp	r0, #80	; 0x50
   11e78:	beq	11f64 <__assert_fail@plt+0x6f0>
   11e7c:	b	11e80 <__assert_fail@plt+0x60c>
   11e80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e84:	cmp	r0, #82	; 0x52
   11e88:	beq	11fb4 <__assert_fail@plt+0x740>
   11e8c:	b	11e90 <__assert_fail@plt+0x61c>
   11e90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e94:	cmp	r0, #102	; 0x66
   11e98:	beq	11fc8 <__assert_fail@plt+0x754>
   11e9c:	b	11ea0 <__assert_fail@plt+0x62c>
   11ea0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11ea4:	cmp	r0, #104	; 0x68
   11ea8:	beq	11f70 <__assert_fail@plt+0x6fc>
   11eac:	b	11eb0 <__assert_fail@plt+0x63c>
   11eb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11eb4:	cmp	r0, #108	; 0x6c
   11eb8:	beq	1204c <__assert_fail@plt+0x7d8>
   11ebc:	b	11ec0 <__assert_fail@plt+0x64c>
   11ec0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11ec4:	cmp	r0, #114	; 0x72
   11ec8:	beq	12004 <__assert_fail@plt+0x790>
   11ecc:	b	11ed0 <__assert_fail@plt+0x65c>
   11ed0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11ed4:	cmp	r0, #116	; 0x74
   11ed8:	beq	12028 <__assert_fail@plt+0x7b4>
   11edc:	b	11ee0 <__assert_fail@plt+0x66c>
   11ee0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11ee4:	cmp	r0, #117	; 0x75
   11ee8:	beq	11fe0 <__assert_fail@plt+0x76c>
   11eec:	b	11ef0 <__assert_fail@plt+0x67c>
   11ef0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11ef4:	cmp	r0, #118	; 0x76
   11ef8:	beq	11fcc <__assert_fail@plt+0x758>
   11efc:	b	11f00 <__assert_fail@plt+0x68c>
   11f00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f04:	cmp	r0, #256	; 0x100
   11f08:	beq	11f7c <__assert_fail@plt+0x708>
   11f0c:	b	11f10 <__assert_fail@plt+0x69c>
   11f10:	movw	r0, #257	; 0x101
   11f14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11f18:	cmp	r1, r0
   11f1c:	beq	11f88 <__assert_fail@plt+0x714>
   11f20:	b	11f24 <__assert_fail@plt+0x6b0>
   11f24:	movw	r0, #258	; 0x102
   11f28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11f2c:	cmp	r1, r0
   11f30:	beq	11f94 <__assert_fail@plt+0x720>
   11f34:	b	11f38 <__assert_fail@plt+0x6c4>
   11f38:	movw	r0, #259	; 0x103
   11f3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11f40:	cmp	r1, r0
   11f44:	beq	11fa0 <__assert_fail@plt+0x72c>
   11f48:	b	120cc <__assert_fail@plt+0x858>
   11f4c:	movw	r0, #17
   11f50:	str	r0, [fp, #-16]
   11f54:	b	120d4 <__assert_fail@plt+0x860>
   11f58:	movw	r0, #2
   11f5c:	str	r0, [fp, #-16]
   11f60:	b	120d4 <__assert_fail@plt+0x860>
   11f64:	movw	r0, #16
   11f68:	str	r0, [fp, #-16]
   11f6c:	b	120d4 <__assert_fail@plt+0x860>
   11f70:	movw	r0, #0
   11f74:	str	r0, [fp, #-20]	; 0xffffffec
   11f78:	b	120d4 <__assert_fail@plt+0x860>
   11f7c:	movw	r0, #1
   11f80:	str	r0, [fp, #-20]	; 0xffffffec
   11f84:	b	120d4 <__assert_fail@plt+0x860>
   11f88:	movw	r0, #0
   11f8c:	strb	r0, [fp, #-22]	; 0xffffffea
   11f90:	b	120d4 <__assert_fail@plt+0x860>
   11f94:	movw	r0, #1
   11f98:	strb	r0, [fp, #-22]	; 0xffffffea
   11f9c:	b	120d4 <__assert_fail@plt+0x860>
   11fa0:	movw	r0, #20936	; 0x51c8
   11fa4:	movt	r0, #3
   11fa8:	ldr	r0, [r0]
   11fac:	str	r0, [fp, #-28]	; 0xffffffe4
   11fb0:	b	120d4 <__assert_fail@plt+0x860>
   11fb4:	movw	r0, #20944	; 0x51d0
   11fb8:	movt	r0, #3
   11fbc:	movw	r1, #1
   11fc0:	strb	r1, [r0]
   11fc4:	b	120d4 <__assert_fail@plt+0x860>
   11fc8:	b	120d4 <__assert_fail@plt+0x860>
   11fcc:	movw	r0, #20945	; 0x51d1
   11fd0:	movt	r0, #3
   11fd4:	movw	r1, #1
   11fd8:	strb	r1, [r0]
   11fdc:	b	120d4 <__assert_fail@plt+0x860>
   11fe0:	movw	r0, #20936	; 0x51c8
   11fe4:	movt	r0, #3
   11fe8:	ldr	r0, [r0]
   11fec:	movw	r1, #20948	; 0x51d4
   11ff0:	movt	r1, #3
   11ff4:	str	r0, [r1]
   11ff8:	movw	r0, #1
   11ffc:	strb	r0, [fp, #-23]	; 0xffffffe9
   12000:	b	120d4 <__assert_fail@plt+0x860>
   12004:	movw	r0, #20936	; 0x51c8
   12008:	movt	r0, #3
   1200c:	ldr	r0, [r0]
   12010:	movw	r1, #20952	; 0x51d8
   12014:	movt	r1, #3
   12018:	str	r0, [r1]
   1201c:	movw	r0, #1
   12020:	strb	r0, [fp, #-23]	; 0xffffffe9
   12024:	b	120d4 <__assert_fail@plt+0x860>
   12028:	movw	r0, #20936	; 0x51c8
   1202c:	movt	r0, #3
   12030:	ldr	r0, [r0]
   12034:	movw	r1, #20956	; 0x51dc
   12038:	movt	r1, #3
   1203c:	str	r0, [r1]
   12040:	movw	r0, #1
   12044:	strb	r0, [fp, #-23]	; 0xffffffe9
   12048:	b	120d4 <__assert_fail@plt+0x860>
   1204c:	movw	r0, #20936	; 0x51c8
   12050:	movt	r0, #3
   12054:	ldr	r0, [r0]
   12058:	movw	r1, #20960	; 0x51e0
   1205c:	movt	r1, #3
   12060:	str	r0, [r1]
   12064:	movw	r0, #1
   12068:	strb	r0, [fp, #-23]	; 0xffffffe9
   1206c:	b	120d4 <__assert_fail@plt+0x860>
   12070:	movw	r0, #0
   12074:	bl	11970 <__assert_fail@plt+0xfc>
   12078:	movw	r0, #20932	; 0x51c4
   1207c:	movt	r0, #3
   12080:	ldr	r0, [r0]
   12084:	movw	r1, #20836	; 0x5164
   12088:	movt	r1, #3
   1208c:	ldr	r3, [r1]
   12090:	movw	r1, #14587	; 0x38fb
   12094:	movt	r1, #2
   12098:	movw	r2, #14632	; 0x3928
   1209c:	movt	r2, #2
   120a0:	movw	ip, #14646	; 0x3936
   120a4:	movt	ip, #2
   120a8:	str	ip, [sp]
   120ac:	movw	ip, #14660	; 0x3944
   120b0:	movt	ip, #2
   120b4:	str	ip, [sp, #4]
   120b8:	movw	ip, #0
   120bc:	str	ip, [sp, #8]
   120c0:	bl	1c85c <__assert_fail@plt+0xafe8>
   120c4:	movw	r0, #0
   120c8:	bl	116a0 <exit@plt>
   120cc:	movw	r0, #1
   120d0:	bl	11970 <__assert_fail@plt+0xfc>
   120d4:	b	11dfc <__assert_fail@plt+0x588>
   120d8:	movw	r0, #20944	; 0x51d0
   120dc:	movt	r0, #3
   120e0:	ldrb	r0, [r0]
   120e4:	tst	r0, #1
   120e8:	beq	12180 <__assert_fail@plt+0x90c>
   120ec:	ldr	r0, [fp, #-16]
   120f0:	cmp	r0, #16
   120f4:	bne	1213c <__assert_fail@plt+0x8c8>
   120f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   120fc:	cmp	r0, #1
   12100:	bne	12128 <__assert_fail@plt+0x8b4>
   12104:	movw	r0, #14673	; 0x3951
   12108:	movt	r0, #2
   1210c:	bl	116b8 <gettext@plt>
   12110:	movw	r1, #1
   12114:	str	r0, [fp, #-56]	; 0xffffffc8
   12118:	mov	r0, r1
   1211c:	movw	r1, #0
   12120:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12124:	bl	11610 <error@plt>
   12128:	movw	r0, #20964	; 0x51e4
   1212c:	movt	r0, #3
   12130:	movw	r1, #0
   12134:	strb	r1, [r0]
   12138:	b	1217c <__assert_fail@plt+0x908>
   1213c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12140:	cmp	r0, #0
   12144:	bne	1216c <__assert_fail@plt+0x8f8>
   12148:	movw	r0, #14715	; 0x397b
   1214c:	movt	r0, #2
   12150:	bl	116b8 <gettext@plt>
   12154:	movw	r1, #1
   12158:	str	r0, [fp, #-60]	; 0xffffffc4
   1215c:	mov	r0, r1
   12160:	movw	r1, #0
   12164:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12168:	bl	11610 <error@plt>
   1216c:	movw	r0, #20964	; 0x51e4
   12170:	movt	r0, #3
   12174:	movw	r1, #1
   12178:	strb	r1, [r0]
   1217c:	b	121a8 <__assert_fail@plt+0x934>
   12180:	movw	r0, #16
   12184:	str	r0, [fp, #-16]
   12188:	ldr	r0, [fp, #-20]	; 0xffffffec
   1218c:	cmp	r0, #0
   12190:	movw	r0, #0
   12194:	movne	r0, #1
   12198:	and	r0, r0, #1
   1219c:	movw	r1, #20964	; 0x51e4
   121a0:	movt	r1, #3
   121a4:	strb	r0, [r1]
   121a8:	ldr	r0, [fp, #-8]
   121ac:	movw	r1, #20920	; 0x51b8
   121b0:	movt	r1, #3
   121b4:	ldr	r1, [r1]
   121b8:	sub	r0, r0, r1
   121bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121c0:	movw	r2, #0
   121c4:	cmp	r1, r2
   121c8:	movw	r1, #1
   121cc:	str	r0, [fp, #-64]	; 0xffffffc0
   121d0:	str	r1, [sp, #68]	; 0x44
   121d4:	bne	121e0 <__assert_fail@plt+0x96c>
   121d8:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   121dc:	str	r0, [sp, #68]	; 0x44
   121e0:	ldr	r0, [sp, #68]	; 0x44
   121e4:	tst	r0, #1
   121e8:	movw	r0, #1
   121ec:	moveq	r0, #2
   121f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   121f4:	cmp	r1, r0
   121f8:	bge	12284 <__assert_fail@plt+0xa10>
   121fc:	ldr	r0, [fp, #-8]
   12200:	movw	r1, #20920	; 0x51b8
   12204:	movt	r1, #3
   12208:	ldr	r1, [r1]
   1220c:	cmp	r0, r1
   12210:	bgt	12238 <__assert_fail@plt+0x9c4>
   12214:	movw	r0, #14733	; 0x398d
   12218:	movt	r0, #2
   1221c:	bl	116b8 <gettext@plt>
   12220:	movw	r1, #0
   12224:	str	r0, [sp, #64]	; 0x40
   12228:	mov	r0, r1
   1222c:	ldr	r2, [sp, #64]	; 0x40
   12230:	bl	11610 <error@plt>
   12234:	b	1227c <__assert_fail@plt+0xa08>
   12238:	movw	r0, #14749	; 0x399d
   1223c:	movt	r0, #2
   12240:	bl	116b8 <gettext@plt>
   12244:	ldr	r1, [fp, #-12]
   12248:	ldr	r2, [fp, #-8]
   1224c:	sub	r2, r2, #1
   12250:	add	r1, r1, r2, lsl #2
   12254:	ldr	r1, [r1]
   12258:	str	r0, [sp, #60]	; 0x3c
   1225c:	mov	r0, r1
   12260:	bl	1b42c <__assert_fail@plt+0x9bb8>
   12264:	movw	r1, #0
   12268:	str	r0, [sp, #56]	; 0x38
   1226c:	mov	r0, r1
   12270:	ldr	r2, [sp, #60]	; 0x3c
   12274:	ldr	r3, [sp, #56]	; 0x38
   12278:	bl	11610 <error@plt>
   1227c:	movw	r0, #1
   12280:	bl	11970 <__assert_fail@plt+0xfc>
   12284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12288:	movw	r1, #0
   1228c:	cmp	r0, r1
   12290:	beq	1230c <__assert_fail@plt+0xa98>
   12294:	movw	r0, #0
   12298:	str	r0, [fp, #-36]	; 0xffffffdc
   1229c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   122a0:	sub	r1, fp, #36	; 0x24
   122a4:	bl	1bf54 <__assert_fail@plt+0xa6e0>
   122a8:	cmp	r0, #0
   122ac:	bge	122f8 <__assert_fail@plt+0xa84>
   122b0:	bl	11700 <__errno_location@plt>
   122b4:	ldr	r1, [r0]
   122b8:	movw	r0, #14774	; 0x39b6
   122bc:	movt	r0, #2
   122c0:	str	r1, [sp, #52]	; 0x34
   122c4:	bl	116b8 <gettext@plt>
   122c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122cc:	movw	r2, #4
   122d0:	str	r0, [sp, #48]	; 0x30
   122d4:	mov	r0, r2
   122d8:	bl	1b094 <__assert_fail@plt+0x9820>
   122dc:	movw	r1, #1
   122e0:	str	r0, [sp, #44]	; 0x2c
   122e4:	mov	r0, r1
   122e8:	ldr	r1, [sp, #52]	; 0x34
   122ec:	ldr	r2, [sp, #48]	; 0x30
   122f0:	ldr	r3, [sp, #44]	; 0x2c
   122f4:	bl	11610 <error@plt>
   122f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122fc:	movw	r1, #20968	; 0x51e8
   12300:	movt	r1, #3
   12304:	str	r0, [r1]
   12308:	b	123d4 <__assert_fail@plt+0xb60>
   1230c:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   12310:	tst	r0, #1
   12314:	beq	1232c <__assert_fail@plt+0xab8>
   12318:	movw	r0, #20968	; 0x51e8
   1231c:	movt	r0, #3
   12320:	movw	r1, #0
   12324:	str	r1, [r0]
   12328:	b	123d0 <__assert_fail@plt+0xb5c>
   1232c:	ldr	r0, [fp, #-12]
   12330:	movw	r1, #20920	; 0x51b8
   12334:	movt	r1, #3
   12338:	ldr	r2, [r1]
   1233c:	add	r3, r2, #1
   12340:	str	r3, [r1]
   12344:	add	r0, r0, r2, lsl #2
   12348:	ldr	r0, [r0]
   1234c:	movw	r1, #20968	; 0x51e8
   12350:	movt	r1, #3
   12354:	str	r0, [r1]
   12358:	bl	114cc <is_selinux_enabled@plt>
   1235c:	movw	r1, #0
   12360:	cmp	r1, r0
   12364:	bge	123cc <__assert_fail@plt+0xb58>
   12368:	movw	r0, #20968	; 0x51e8
   1236c:	movt	r0, #3
   12370:	ldr	r0, [r0]
   12374:	bl	1161c <security_check_context@plt>
   12378:	cmp	r0, #0
   1237c:	bge	123cc <__assert_fail@plt+0xb58>
   12380:	bl	11700 <__errno_location@plt>
   12384:	ldr	r1, [r0]
   12388:	movw	r0, #14811	; 0x39db
   1238c:	movt	r0, #2
   12390:	str	r1, [sp, #40]	; 0x28
   12394:	bl	116b8 <gettext@plt>
   12398:	movw	r1, #20968	; 0x51e8
   1239c:	movt	r1, #3
   123a0:	ldr	r1, [r1]
   123a4:	str	r0, [sp, #36]	; 0x24
   123a8:	mov	r0, r1
   123ac:	bl	1b42c <__assert_fail@plt+0x9bb8>
   123b0:	movw	r1, #1
   123b4:	str	r0, [sp, #32]
   123b8:	mov	r0, r1
   123bc:	ldr	r1, [sp, #40]	; 0x28
   123c0:	ldr	r2, [sp, #36]	; 0x24
   123c4:	ldr	r3, [sp, #32]
   123c8:	bl	11610 <error@plt>
   123cc:	b	123d0 <__assert_fail@plt+0xb5c>
   123d0:	b	123d4 <__assert_fail@plt+0xb60>
   123d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   123d8:	movw	r1, #0
   123dc:	cmp	r0, r1
   123e0:	beq	12418 <__assert_fail@plt+0xba4>
   123e4:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   123e8:	tst	r0, #1
   123ec:	beq	12418 <__assert_fail@plt+0xba4>
   123f0:	movw	r0, #14831	; 0x39ef
   123f4:	movt	r0, #2
   123f8:	bl	116b8 <gettext@plt>
   123fc:	movw	r1, #0
   12400:	str	r0, [sp, #28]
   12404:	mov	r0, r1
   12408:	ldr	r2, [sp, #28]
   1240c:	bl	11610 <error@plt>
   12410:	movw	r0, #1
   12414:	bl	11970 <__assert_fail@plt+0xfc>
   12418:	movw	r0, #20944	; 0x51d0
   1241c:	movt	r0, #3
   12420:	ldrb	r0, [r0]
   12424:	tst	r0, #1
   12428:	beq	124b0 <__assert_fail@plt+0xc3c>
   1242c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   12430:	tst	r0, #1
   12434:	beq	124b0 <__assert_fail@plt+0xc3c>
   12438:	movw	r0, #20976	; 0x51f0
   1243c:	movt	r0, #3
   12440:	bl	1b564 <__assert_fail@plt+0x9cf0>
   12444:	movw	r1, #20992	; 0x5200
   12448:	movt	r1, #3
   1244c:	str	r0, [r1]
   12450:	ldr	r0, [r1]
   12454:	movw	r1, #0
   12458:	cmp	r0, r1
   1245c:	bne	124ac <__assert_fail@plt+0xc38>
   12460:	bl	11700 <__errno_location@plt>
   12464:	ldr	r1, [r0]
   12468:	movw	r0, #14877	; 0x3a1d
   1246c:	movt	r0, #2
   12470:	str	r1, [sp, #24]
   12474:	bl	116b8 <gettext@plt>
   12478:	movw	r1, #4
   1247c:	str	r0, [sp, #20]
   12480:	mov	r0, r1
   12484:	movw	r1, #17677	; 0x450d
   12488:	movt	r1, #2
   1248c:	bl	1b094 <__assert_fail@plt+0x9820>
   12490:	movw	r1, #1
   12494:	str	r0, [sp, #16]
   12498:	mov	r0, r1
   1249c:	ldr	r1, [sp, #24]
   124a0:	ldr	r2, [sp, #20]
   124a4:	ldr	r3, [sp, #16]
   124a8:	bl	11610 <error@plt>
   124ac:	b	124c0 <__assert_fail@plt+0xc4c>
   124b0:	movw	r0, #20992	; 0x5200
   124b4:	movt	r0, #3
   124b8:	movw	r1, #0
   124bc:	str	r1, [r0]
   124c0:	ldr	r0, [fp, #-12]
   124c4:	movw	r1, #20920	; 0x51b8
   124c8:	movt	r1, #3
   124cc:	ldr	r1, [r1]
   124d0:	add	r0, r0, r1, lsl #2
   124d4:	ldr	r1, [fp, #-16]
   124d8:	orr	r1, r1, #8
   124dc:	bl	12500 <__assert_fail@plt+0xc8c>
   124e0:	and	r0, r0, #1
   124e4:	strb	r0, [fp, #-21]	; 0xffffffeb
   124e8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   124ec:	tst	r0, #1
   124f0:	movw	r0, #0
   124f4:	moveq	r0, #1
   124f8:	mov	sp, fp
   124fc:	pop	{fp, pc}
   12500:	push	{fp, lr}
   12504:	mov	fp, sp
   12508:	sub	sp, sp, #40	; 0x28
   1250c:	str	r0, [fp, #-4]
   12510:	str	r1, [fp, #-8]
   12514:	movw	r0, #1
   12518:	strb	r0, [fp, #-9]
   1251c:	ldr	r0, [fp, #-4]
   12520:	ldr	r1, [fp, #-8]
   12524:	movw	r2, #0
   12528:	bl	1f76c <__assert_fail@plt+0xdef8>
   1252c:	str	r0, [fp, #-16]
   12530:	ldr	r0, [fp, #-16]
   12534:	bl	144ec <__assert_fail@plt+0x2c78>
   12538:	str	r0, [sp, #20]
   1253c:	ldr	r0, [sp, #20]
   12540:	movw	r1, #0
   12544:	cmp	r0, r1
   12548:	bne	12598 <__assert_fail@plt+0xd24>
   1254c:	bl	11700 <__errno_location@plt>
   12550:	ldr	r0, [r0]
   12554:	cmp	r0, #0
   12558:	beq	12594 <__assert_fail@plt+0xd20>
   1255c:	bl	11700 <__errno_location@plt>
   12560:	ldr	r1, [r0]
   12564:	movw	r0, #15378	; 0x3c12
   12568:	movt	r0, #2
   1256c:	str	r1, [sp, #16]
   12570:	bl	116b8 <gettext@plt>
   12574:	movw	r1, #0
   12578:	str	r0, [sp, #12]
   1257c:	mov	r0, r1
   12580:	ldr	r1, [sp, #16]
   12584:	ldr	r2, [sp, #12]
   12588:	bl	11610 <error@plt>
   1258c:	movw	r0, #0
   12590:	strb	r0, [fp, #-9]
   12594:	b	125cc <__assert_fail@plt+0xd58>
   12598:	ldr	r0, [fp, #-16]
   1259c:	ldr	r1, [sp, #20]
   125a0:	bl	12624 <__assert_fail@plt+0xdb0>
   125a4:	and	r0, r0, #1
   125a8:	ldrb	r1, [fp, #-9]
   125ac:	and	r1, r1, #1
   125b0:	and	r0, r1, r0
   125b4:	cmp	r0, #0
   125b8:	movw	r0, #0
   125bc:	movne	r0, #1
   125c0:	and	r0, r0, #1
   125c4:	strb	r0, [fp, #-9]
   125c8:	b	12530 <__assert_fail@plt+0xcbc>
   125cc:	ldr	r0, [fp, #-16]
   125d0:	bl	1422c <__assert_fail@plt+0x29b8>
   125d4:	cmp	r0, #0
   125d8:	beq	12614 <__assert_fail@plt+0xda0>
   125dc:	bl	11700 <__errno_location@plt>
   125e0:	ldr	r1, [r0]
   125e4:	movw	r0, #15394	; 0x3c22
   125e8:	movt	r0, #2
   125ec:	str	r1, [sp, #8]
   125f0:	bl	116b8 <gettext@plt>
   125f4:	movw	r1, #0
   125f8:	str	r0, [sp, #4]
   125fc:	mov	r0, r1
   12600:	ldr	r1, [sp, #8]
   12604:	ldr	r2, [sp, #4]
   12608:	bl	11610 <error@plt>
   1260c:	movw	r0, #0
   12610:	strb	r0, [fp, #-9]
   12614:	ldrb	r0, [fp, #-9]
   12618:	and	r0, r0, #1
   1261c:	mov	sp, fp
   12620:	pop	{fp, pc}
   12624:	push	{fp, lr}
   12628:	mov	fp, sp
   1262c:	sub	sp, sp, #144	; 0x90
   12630:	str	r0, [fp, #-8]
   12634:	str	r1, [fp, #-12]
   12638:	ldr	r0, [fp, #-12]
   1263c:	ldr	r0, [r0, #28]
   12640:	str	r0, [fp, #-16]
   12644:	ldr	r0, [fp, #-12]
   12648:	ldr	r0, [r0, #24]
   1264c:	str	r0, [fp, #-20]	; 0xffffffec
   12650:	ldr	r0, [fp, #-12]
   12654:	add	r0, r0, #64	; 0x40
   12658:	str	r0, [fp, #-24]	; 0xffffffe8
   1265c:	mov	r0, #1
   12660:	strb	r0, [fp, #-25]	; 0xffffffe7
   12664:	ldr	r0, [fp, #-12]
   12668:	ldrh	r0, [r0, #56]	; 0x38
   1266c:	sub	r0, r0, #1
   12670:	cmp	r0, #9
   12674:	str	r0, [fp, #-32]	; 0xffffffe0
   12678:	bhi	12a44 <__assert_fail@plt+0x11d0>
   1267c:	add	r0, pc, #8
   12680:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12684:	ldr	r0, [r0, r1, lsl #2]
   12688:	mov	pc, r0
   1268c:			; <UNDEFINED> instruction: 0x000126b4
   12690:	ldrdeq	r2, [r1], -ip
   12694:	andeq	r2, r1, r4, asr #20
   12698:	andeq	r2, r1, r8, lsl #19
   1269c:	andeq	r2, r1, r4, asr #20
   126a0:	andeq	r2, r1, ip, ror #16
   126a4:	andeq	r2, r1, ip, lsr r9
   126a8:	andeq	r2, r1, r4, asr #20
   126ac:	andeq	r2, r1, r4, asr #20
   126b0:	muleq	r1, r4, r8
   126b4:	movw	r0, #20944	; 0x51d0
   126b8:	movt	r0, #3
   126bc:	ldrb	r0, [r0]
   126c0:	tst	r0, #1
   126c4:	beq	12868 <__assert_fail@plt+0xff4>
   126c8:	movw	r0, #20992	; 0x5200
   126cc:	movt	r0, #3
   126d0:	ldr	r0, [r0]
   126d4:	movw	r1, #0
   126d8:	cmp	r0, r1
   126dc:	beq	12858 <__assert_fail@plt+0xfe4>
   126e0:	ldr	r0, [fp, #-12]
   126e4:	ldr	r1, [r0, #160]	; 0xa0
   126e8:	ldr	r0, [r0, #164]	; 0xa4
   126ec:	movw	r2, #20992	; 0x5200
   126f0:	movt	r2, #3
   126f4:	ldr	r2, [r2]
   126f8:	ldr	r3, [r2]
   126fc:	ldr	r2, [r2, #4]
   12700:	eor	r0, r0, r2
   12704:	eor	r1, r1, r3
   12708:	orr	r0, r1, r0
   1270c:	cmp	r0, #0
   12710:	bne	12858 <__assert_fail@plt+0xfe4>
   12714:	b	12718 <__assert_fail@plt+0xea4>
   12718:	ldr	r0, [fp, #-12]
   1271c:	ldr	r1, [r0, #64]	; 0x40
   12720:	ldr	r0, [r0, #68]	; 0x44
   12724:	movw	r2, #20992	; 0x5200
   12728:	movt	r2, #3
   1272c:	ldr	r2, [r2]
   12730:	ldr	r3, [r2, #8]
   12734:	ldr	r2, [r2, #12]
   12738:	eor	r0, r0, r2
   1273c:	eor	r1, r1, r3
   12740:	orr	r0, r1, r0
   12744:	cmp	r0, #0
   12748:	bne	12858 <__assert_fail@plt+0xfe4>
   1274c:	b	12750 <__assert_fail@plt+0xedc>
   12750:	b	12754 <__assert_fail@plt+0xee0>
   12754:	ldr	r0, [fp, #-16]
   12758:	movw	r1, #17677	; 0x450d
   1275c:	movt	r1, #2
   12760:	bl	114d8 <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	bne	127a8 <__assert_fail@plt+0xf34>
   1276c:	movw	r0, #15411	; 0x3c33
   12770:	movt	r0, #2
   12774:	bl	116b8 <gettext@plt>
   12778:	ldr	r1, [fp, #-16]
   1277c:	movw	r2, #4
   12780:	str	r0, [fp, #-36]	; 0xffffffdc
   12784:	mov	r0, r2
   12788:	bl	1b094 <__assert_fail@plt+0x9820>
   1278c:	movw	r1, #0
   12790:	str	r0, [fp, #-40]	; 0xffffffd8
   12794:	mov	r0, r1
   12798:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1279c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   127a0:	bl	11610 <error@plt>
   127a4:	b	12808 <__assert_fail@plt+0xf94>
   127a8:	movw	r0, #15456	; 0x3c60
   127ac:	movt	r0, #2
   127b0:	bl	116b8 <gettext@plt>
   127b4:	ldr	r2, [fp, #-16]
   127b8:	movw	r1, #0
   127bc:	str	r0, [fp, #-44]	; 0xffffffd4
   127c0:	mov	r0, r1
   127c4:	movw	r1, #4
   127c8:	bl	1afc0 <__assert_fail@plt+0x974c>
   127cc:	movw	r1, #1
   127d0:	str	r0, [fp, #-48]	; 0xffffffd0
   127d4:	mov	r0, r1
   127d8:	movw	r1, #4
   127dc:	movw	r2, #17677	; 0x450d
   127e0:	movt	r2, #2
   127e4:	bl	1afc0 <__assert_fail@plt+0x974c>
   127e8:	movw	r1, #0
   127ec:	str	r0, [fp, #-52]	; 0xffffffcc
   127f0:	mov	r0, r1
   127f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   127f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   127fc:	ldr	ip, [fp, #-52]	; 0xffffffcc
   12800:	str	ip, [sp]
   12804:	bl	11610 <error@plt>
   12808:	movw	r0, #15514	; 0x3c9a
   1280c:	movt	r0, #2
   12810:	bl	116b8 <gettext@plt>
   12814:	movw	r1, #0
   12818:	str	r0, [fp, #-56]	; 0xffffffc8
   1281c:	mov	r0, r1
   12820:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12824:	bl	11610 <error@plt>
   12828:	ldr	r0, [fp, #-8]
   1282c:	ldr	r1, [fp, #-12]
   12830:	movw	r2, #4
   12834:	bl	16410 <__assert_fail@plt+0x4b9c>
   12838:	ldr	r1, [fp, #-8]
   1283c:	str	r0, [fp, #-60]	; 0xffffffc4
   12840:	mov	r0, r1
   12844:	bl	144ec <__assert_fail@plt+0x2c78>
   12848:	movw	r1, #0
   1284c:	and	r1, r1, #1
   12850:	strb	r1, [fp, #-1]
   12854:	b	12c74 <__assert_fail@plt+0x1400>
   12858:	movw	r0, #1
   1285c:	and	r0, r0, #1
   12860:	strb	r0, [fp, #-1]
   12864:	b	12c74 <__assert_fail@plt+0x1400>
   12868:	b	12a48 <__assert_fail@plt+0x11d4>
   1286c:	movw	r0, #20944	; 0x51d0
   12870:	movt	r0, #3
   12874:	ldrb	r0, [r0]
   12878:	tst	r0, #1
   1287c:	bne	12890 <__assert_fail@plt+0x101c>
   12880:	movw	r0, #1
   12884:	and	r0, r0, #1
   12888:	strb	r0, [fp, #-1]
   1288c:	b	12c74 <__assert_fail@plt+0x1400>
   12890:	b	12a48 <__assert_fail@plt+0x11d4>
   12894:	ldr	r0, [fp, #-12]
   12898:	ldr	r0, [r0, #48]	; 0x30
   1289c:	cmp	r0, #0
   128a0:	bne	128e8 <__assert_fail@plt+0x1074>
   128a4:	ldr	r0, [fp, #-12]
   128a8:	ldr	r0, [r0, #16]
   128ac:	cmp	r0, #0
   128b0:	bne	128e8 <__assert_fail@plt+0x1074>
   128b4:	ldr	r0, [fp, #-12]
   128b8:	movw	r1, #1
   128bc:	str	r1, [r0, #16]
   128c0:	ldr	r0, [fp, #-8]
   128c4:	ldr	r2, [fp, #-12]
   128c8:	str	r1, [fp, #-64]	; 0xffffffc0
   128cc:	mov	r1, r2
   128d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   128d4:	bl	16410 <__assert_fail@plt+0x4b9c>
   128d8:	movw	r1, #1
   128dc:	and	r1, r1, #1
   128e0:	strb	r1, [fp, #-1]
   128e4:	b	12c74 <__assert_fail@plt+0x1400>
   128e8:	ldr	r0, [fp, #-12]
   128ec:	ldr	r1, [r0, #32]
   128f0:	movw	r0, #15563	; 0x3ccb
   128f4:	movt	r0, #2
   128f8:	str	r1, [fp, #-68]	; 0xffffffbc
   128fc:	bl	116b8 <gettext@plt>
   12900:	ldr	r1, [fp, #-16]
   12904:	movw	r2, #4
   12908:	str	r0, [sp, #72]	; 0x48
   1290c:	mov	r0, r2
   12910:	bl	1b094 <__assert_fail@plt+0x9820>
   12914:	movw	r1, #0
   12918:	str	r0, [sp, #68]	; 0x44
   1291c:	mov	r0, r1
   12920:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12924:	ldr	r2, [sp, #72]	; 0x48
   12928:	ldr	r3, [sp, #68]	; 0x44
   1292c:	bl	11610 <error@plt>
   12930:	movw	r0, #0
   12934:	strb	r0, [fp, #-25]	; 0xffffffe7
   12938:	b	12a48 <__assert_fail@plt+0x11d4>
   1293c:	ldr	r0, [fp, #-12]
   12940:	ldr	r1, [r0, #32]
   12944:	ldr	r2, [fp, #-16]
   12948:	movw	r0, #0
   1294c:	movw	r3, #3
   12950:	str	r1, [sp, #64]	; 0x40
   12954:	mov	r1, r3
   12958:	bl	1b1e8 <__assert_fail@plt+0x9974>
   1295c:	movw	r1, #0
   12960:	str	r0, [sp, #60]	; 0x3c
   12964:	mov	r0, r1
   12968:	ldr	r1, [sp, #64]	; 0x40
   1296c:	movw	r2, #16311	; 0x3fb7
   12970:	movt	r2, #2
   12974:	ldr	r3, [sp, #60]	; 0x3c
   12978:	bl	11610 <error@plt>
   1297c:	movw	r0, #0
   12980:	strb	r0, [fp, #-25]	; 0xffffffe7
   12984:	b	12a48 <__assert_fail@plt+0x11d4>
   12988:	ldr	r0, [fp, #-12]
   1298c:	ldr	r1, [r0, #32]
   12990:	movw	r0, #15580	; 0x3cdc
   12994:	movt	r0, #2
   12998:	str	r1, [sp, #56]	; 0x38
   1299c:	bl	116b8 <gettext@plt>
   129a0:	ldr	r1, [fp, #-16]
   129a4:	movw	r2, #4
   129a8:	str	r0, [sp, #52]	; 0x34
   129ac:	mov	r0, r2
   129b0:	bl	1b094 <__assert_fail@plt+0x9820>
   129b4:	movw	r1, #0
   129b8:	str	r0, [sp, #48]	; 0x30
   129bc:	mov	r0, r1
   129c0:	ldr	r1, [sp, #56]	; 0x38
   129c4:	ldr	r2, [sp, #52]	; 0x34
   129c8:	ldr	r3, [sp, #48]	; 0x30
   129cc:	bl	11610 <error@plt>
   129d0:	movw	r0, #0
   129d4:	strb	r0, [fp, #-25]	; 0xffffffe7
   129d8:	b	12a48 <__assert_fail@plt+0x11d4>
   129dc:	ldr	r0, [fp, #-8]
   129e0:	ldr	r1, [fp, #-12]
   129e4:	bl	1f7f0 <__assert_fail@plt+0xdf7c>
   129e8:	tst	r0, #1
   129ec:	beq	12a40 <__assert_fail@plt+0x11cc>
   129f0:	b	129f4 <__assert_fail@plt+0x1180>
   129f4:	movw	r0, #15605	; 0x3cf5
   129f8:	movt	r0, #2
   129fc:	bl	116b8 <gettext@plt>
   12a00:	ldr	r2, [fp, #-16]
   12a04:	movw	r1, #0
   12a08:	str	r0, [sp, #44]	; 0x2c
   12a0c:	mov	r0, r1
   12a10:	movw	r1, #3
   12a14:	bl	1b1e8 <__assert_fail@plt+0x9974>
   12a18:	movw	r1, #0
   12a1c:	str	r0, [sp, #40]	; 0x28
   12a20:	mov	r0, r1
   12a24:	ldr	r2, [sp, #44]	; 0x2c
   12a28:	ldr	r3, [sp, #40]	; 0x28
   12a2c:	bl	11610 <error@plt>
   12a30:	movw	r0, #0
   12a34:	and	r0, r0, #1
   12a38:	strb	r0, [fp, #-1]
   12a3c:	b	12c74 <__assert_fail@plt+0x1400>
   12a40:	b	12a48 <__assert_fail@plt+0x11d4>
   12a44:	b	12a48 <__assert_fail@plt+0x11d4>
   12a48:	ldr	r0, [fp, #-12]
   12a4c:	ldrh	r0, [r0, #56]	; 0x38
   12a50:	cmp	r0, #6
   12a54:	bne	12bcc <__assert_fail@plt+0x1358>
   12a58:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12a5c:	tst	r0, #1
   12a60:	beq	12bcc <__assert_fail@plt+0x1358>
   12a64:	movw	r0, #20992	; 0x5200
   12a68:	movt	r0, #3
   12a6c:	ldr	r0, [r0]
   12a70:	movw	r1, #0
   12a74:	cmp	r0, r1
   12a78:	beq	12bcc <__assert_fail@plt+0x1358>
   12a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a80:	ldr	r1, [r0, #96]	; 0x60
   12a84:	ldr	r0, [r0, #100]	; 0x64
   12a88:	movw	r2, #20992	; 0x5200
   12a8c:	movt	r2, #3
   12a90:	ldr	r2, [r2]
   12a94:	ldr	r3, [r2]
   12a98:	ldr	r2, [r2, #4]
   12a9c:	eor	r0, r0, r2
   12aa0:	eor	r1, r1, r3
   12aa4:	orr	r0, r1, r0
   12aa8:	cmp	r0, #0
   12aac:	bne	12bcc <__assert_fail@plt+0x1358>
   12ab0:	b	12ab4 <__assert_fail@plt+0x1240>
   12ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ab8:	ldr	r1, [r0]
   12abc:	ldr	r0, [r0, #4]
   12ac0:	movw	r2, #20992	; 0x5200
   12ac4:	movt	r2, #3
   12ac8:	ldr	r2, [r2]
   12acc:	ldr	r3, [r2, #8]
   12ad0:	ldr	r2, [r2, #12]
   12ad4:	eor	r0, r0, r2
   12ad8:	eor	r1, r1, r3
   12adc:	orr	r0, r1, r0
   12ae0:	cmp	r0, #0
   12ae4:	bne	12bcc <__assert_fail@plt+0x1358>
   12ae8:	b	12aec <__assert_fail@plt+0x1278>
   12aec:	b	12af0 <__assert_fail@plt+0x127c>
   12af0:	ldr	r0, [fp, #-16]
   12af4:	movw	r1, #17677	; 0x450d
   12af8:	movt	r1, #2
   12afc:	bl	114d8 <strcmp@plt>
   12b00:	cmp	r0, #0
   12b04:	bne	12b44 <__assert_fail@plt+0x12d0>
   12b08:	movw	r0, #15411	; 0x3c33
   12b0c:	movt	r0, #2
   12b10:	bl	116b8 <gettext@plt>
   12b14:	ldr	r1, [fp, #-16]
   12b18:	movw	r2, #4
   12b1c:	str	r0, [sp, #36]	; 0x24
   12b20:	mov	r0, r2
   12b24:	bl	1b094 <__assert_fail@plt+0x9820>
   12b28:	movw	r1, #0
   12b2c:	str	r0, [sp, #32]
   12b30:	mov	r0, r1
   12b34:	ldr	r2, [sp, #36]	; 0x24
   12b38:	ldr	r3, [sp, #32]
   12b3c:	bl	11610 <error@plt>
   12b40:	b	12ba4 <__assert_fail@plt+0x1330>
   12b44:	movw	r0, #15456	; 0x3c60
   12b48:	movt	r0, #2
   12b4c:	bl	116b8 <gettext@plt>
   12b50:	ldr	r2, [fp, #-16]
   12b54:	movw	r1, #0
   12b58:	str	r0, [sp, #28]
   12b5c:	mov	r0, r1
   12b60:	movw	r1, #4
   12b64:	bl	1afc0 <__assert_fail@plt+0x974c>
   12b68:	movw	r1, #1
   12b6c:	str	r0, [sp, #24]
   12b70:	mov	r0, r1
   12b74:	movw	r1, #4
   12b78:	movw	r2, #17677	; 0x450d
   12b7c:	movt	r2, #2
   12b80:	bl	1afc0 <__assert_fail@plt+0x974c>
   12b84:	movw	r1, #0
   12b88:	str	r0, [sp, #20]
   12b8c:	mov	r0, r1
   12b90:	ldr	r2, [sp, #28]
   12b94:	ldr	r3, [sp, #24]
   12b98:	ldr	ip, [sp, #20]
   12b9c:	str	ip, [sp]
   12ba0:	bl	11610 <error@plt>
   12ba4:	movw	r0, #15514	; 0x3c9a
   12ba8:	movt	r0, #2
   12bac:	bl	116b8 <gettext@plt>
   12bb0:	movw	r1, #0
   12bb4:	str	r0, [sp, #16]
   12bb8:	mov	r0, r1
   12bbc:	ldr	r2, [sp, #16]
   12bc0:	bl	11610 <error@plt>
   12bc4:	movw	r0, #0
   12bc8:	strb	r0, [fp, #-25]	; 0xffffffe7
   12bcc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12bd0:	tst	r0, #1
   12bd4:	beq	12c44 <__assert_fail@plt+0x13d0>
   12bd8:	movw	r0, #20945	; 0x51d1
   12bdc:	movt	r0, #3
   12be0:	ldrb	r0, [r0]
   12be4:	tst	r0, #1
   12be8:	beq	12c20 <__assert_fail@plt+0x13ac>
   12bec:	movw	r0, #15791	; 0x3daf
   12bf0:	movt	r0, #2
   12bf4:	bl	116b8 <gettext@plt>
   12bf8:	ldr	r1, [fp, #-16]
   12bfc:	movw	r2, #4
   12c00:	str	r0, [sp, #12]
   12c04:	mov	r0, r2
   12c08:	bl	1b094 <__assert_fail@plt+0x9820>
   12c0c:	ldr	r1, [sp, #12]
   12c10:	str	r0, [sp, #8]
   12c14:	mov	r0, r1
   12c18:	ldr	r1, [sp, #8]
   12c1c:	bl	114e4 <printf@plt>
   12c20:	ldr	r0, [fp, #-8]
   12c24:	ldr	r0, [r0, #32]
   12c28:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c2c:	bl	12c84 <__assert_fail@plt+0x1410>
   12c30:	cmp	r0, #0
   12c34:	beq	12c40 <__assert_fail@plt+0x13cc>
   12c38:	movw	r0, #0
   12c3c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12c40:	b	12c44 <__assert_fail@plt+0x13d0>
   12c44:	movw	r0, #20944	; 0x51d0
   12c48:	movt	r0, #3
   12c4c:	ldrb	r0, [r0]
   12c50:	tst	r0, #1
   12c54:	bne	12c68 <__assert_fail@plt+0x13f4>
   12c58:	ldr	r0, [fp, #-8]
   12c5c:	ldr	r1, [fp, #-12]
   12c60:	movw	r2, #4
   12c64:	bl	16410 <__assert_fail@plt+0x4b9c>
   12c68:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12c6c:	and	r0, r0, #1
   12c70:	strb	r0, [fp, #-1]
   12c74:	ldrb	r0, [fp, #-1]
   12c78:	and	r0, r0, #1
   12c7c:	mov	sp, fp
   12c80:	pop	{fp, pc}
   12c84:	push	{fp, lr}
   12c88:	mov	fp, sp
   12c8c:	sub	sp, sp, #88	; 0x58
   12c90:	str	r0, [fp, #-8]
   12c94:	str	r1, [fp, #-12]
   12c98:	movw	r0, #0
   12c9c:	str	r0, [fp, #-16]
   12ca0:	str	r0, [fp, #-28]	; 0xffffffe4
   12ca4:	movw	r1, #20968	; 0x51e8
   12ca8:	movt	r1, #3
   12cac:	ldr	r1, [r1]
   12cb0:	cmp	r1, r0
   12cb4:	bne	12df4 <__assert_fail@plt+0x1580>
   12cb8:	movw	r0, #20964	; 0x51e4
   12cbc:	movt	r0, #3
   12cc0:	ldrb	r0, [r0]
   12cc4:	tst	r0, #1
   12cc8:	beq	12ce4 <__assert_fail@plt+0x1470>
   12ccc:	ldr	r0, [fp, #-8]
   12cd0:	ldr	r1, [fp, #-12]
   12cd4:	sub	r2, fp, #16
   12cd8:	bl	1b5d4 <__assert_fail@plt+0x9d60>
   12cdc:	str	r0, [fp, #-40]	; 0xffffffd8
   12ce0:	b	12cf8 <__assert_fail@plt+0x1484>
   12ce4:	ldr	r0, [fp, #-8]
   12ce8:	ldr	r1, [fp, #-12]
   12cec:	sub	r2, fp, #16
   12cf0:	bl	1b834 <__assert_fail@plt+0x9fc0>
   12cf4:	str	r0, [fp, #-40]	; 0xffffffd8
   12cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12cfc:	str	r0, [fp, #-32]	; 0xffffffe0
   12d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d04:	cmp	r0, #0
   12d08:	bge	12d70 <__assert_fail@plt+0x14fc>
   12d0c:	bl	11700 <__errno_location@plt>
   12d10:	ldr	r0, [r0]
   12d14:	cmp	r0, #61	; 0x3d
   12d18:	beq	12d70 <__assert_fail@plt+0x14fc>
   12d1c:	bl	11700 <__errno_location@plt>
   12d20:	ldr	r1, [r0]
   12d24:	movw	r0, #14774	; 0x39b6
   12d28:	movt	r0, #2
   12d2c:	str	r1, [sp, #44]	; 0x2c
   12d30:	bl	116b8 <gettext@plt>
   12d34:	ldr	r1, [fp, #-12]
   12d38:	movw	r2, #4
   12d3c:	str	r0, [sp, #40]	; 0x28
   12d40:	mov	r0, r2
   12d44:	bl	1b094 <__assert_fail@plt+0x9820>
   12d48:	movw	r1, #0
   12d4c:	str	r0, [sp, #36]	; 0x24
   12d50:	mov	r0, r1
   12d54:	ldr	r1, [sp, #44]	; 0x2c
   12d58:	ldr	r2, [sp, #40]	; 0x28
   12d5c:	ldr	r3, [sp, #36]	; 0x24
   12d60:	bl	11610 <error@plt>
   12d64:	movw	r0, #1
   12d68:	str	r0, [fp, #-4]
   12d6c:	b	12f20 <__assert_fail@plt+0x16ac>
   12d70:	ldr	r0, [fp, #-16]
   12d74:	movw	r1, #0
   12d78:	cmp	r0, r1
   12d7c:	bne	12dc4 <__assert_fail@plt+0x1550>
   12d80:	movw	r0, #15824	; 0x3dd0
   12d84:	movt	r0, #2
   12d88:	bl	116b8 <gettext@plt>
   12d8c:	ldr	r1, [fp, #-12]
   12d90:	movw	r2, #4
   12d94:	str	r0, [sp, #32]
   12d98:	mov	r0, r2
   12d9c:	bl	1b094 <__assert_fail@plt+0x9820>
   12da0:	movw	r1, #0
   12da4:	str	r0, [sp, #28]
   12da8:	mov	r0, r1
   12dac:	ldr	r2, [sp, #32]
   12db0:	ldr	r3, [sp, #28]
   12db4:	bl	11610 <error@plt>
   12db8:	movw	r0, #1
   12dbc:	str	r0, [fp, #-4]
   12dc0:	b	12f20 <__assert_fail@plt+0x16ac>
   12dc4:	ldr	r0, [fp, #-16]
   12dc8:	sub	r1, fp, #20
   12dcc:	bl	12f2c <__assert_fail@plt+0x16b8>
   12dd0:	cmp	r0, #0
   12dd4:	beq	12de4 <__assert_fail@plt+0x1570>
   12dd8:	movw	r0, #1
   12ddc:	str	r0, [fp, #-4]
   12de0:	b	12f20 <__assert_fail@plt+0x16ac>
   12de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12de8:	bl	11808 <context_str@plt>
   12dec:	str	r0, [fp, #-24]	; 0xffffffe8
   12df0:	b	12e04 <__assert_fail@plt+0x1590>
   12df4:	movw	r0, #20968	; 0x51e8
   12df8:	movt	r0, #3
   12dfc:	ldr	r0, [r0]
   12e00:	str	r0, [fp, #-24]	; 0xffffffe8
   12e04:	ldr	r0, [fp, #-16]
   12e08:	movw	r1, #0
   12e0c:	cmp	r0, r1
   12e10:	beq	12e28 <__assert_fail@plt+0x15b4>
   12e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e18:	ldr	r1, [fp, #-16]
   12e1c:	bl	114d8 <strcmp@plt>
   12e20:	cmp	r0, #0
   12e24:	beq	12ef0 <__assert_fail@plt+0x167c>
   12e28:	movw	r0, #20964	; 0x51e4
   12e2c:	movt	r0, #3
   12e30:	ldrb	r0, [r0]
   12e34:	tst	r0, #1
   12e38:	beq	12e54 <__assert_fail@plt+0x15e0>
   12e3c:	ldr	r0, [fp, #-8]
   12e40:	ldr	r1, [fp, #-12]
   12e44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e48:	bl	1ba94 <__assert_fail@plt+0xa220>
   12e4c:	str	r0, [sp, #24]
   12e50:	b	12e68 <__assert_fail@plt+0x15f4>
   12e54:	ldr	r0, [fp, #-8]
   12e58:	ldr	r1, [fp, #-12]
   12e5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e60:	bl	1bcf4 <__assert_fail@plt+0xa480>
   12e64:	str	r0, [sp, #24]
   12e68:	ldr	r0, [sp, #24]
   12e6c:	str	r0, [fp, #-36]	; 0xffffffdc
   12e70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e74:	cmp	r0, #0
   12e78:	beq	12eec <__assert_fail@plt+0x1678>
   12e7c:	movw	r0, #1
   12e80:	str	r0, [fp, #-28]	; 0xffffffe4
   12e84:	bl	11700 <__errno_location@plt>
   12e88:	ldr	r1, [r0]
   12e8c:	movw	r0, #15873	; 0x3e01
   12e90:	movt	r0, #2
   12e94:	str	r1, [sp, #20]
   12e98:	bl	116b8 <gettext@plt>
   12e9c:	ldr	r2, [fp, #-12]
   12ea0:	movw	r1, #0
   12ea4:	str	r0, [sp, #16]
   12ea8:	mov	r0, r1
   12eac:	movw	r1, #4
   12eb0:	bl	1afc0 <__assert_fail@plt+0x974c>
   12eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12eb8:	movw	r2, #1
   12ebc:	str	r0, [sp, #12]
   12ec0:	mov	r0, r2
   12ec4:	bl	1b400 <__assert_fail@plt+0x9b8c>
   12ec8:	movw	r1, #0
   12ecc:	str	r0, [sp, #8]
   12ed0:	mov	r0, r1
   12ed4:	ldr	r1, [sp, #20]
   12ed8:	ldr	r2, [sp, #16]
   12edc:	ldr	r3, [sp, #12]
   12ee0:	ldr	ip, [sp, #8]
   12ee4:	str	ip, [sp]
   12ee8:	bl	11610 <error@plt>
   12eec:	b	12ef0 <__assert_fail@plt+0x167c>
   12ef0:	movw	r0, #20968	; 0x51e8
   12ef4:	movt	r0, #3
   12ef8:	ldr	r0, [r0]
   12efc:	movw	r1, #0
   12f00:	cmp	r0, r1
   12f04:	bne	12f18 <__assert_fail@plt+0x16a4>
   12f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f0c:	bl	11670 <context_free@plt>
   12f10:	ldr	r0, [fp, #-16]
   12f14:	bl	117e4 <freecon@plt>
   12f18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f1c:	str	r0, [fp, #-4]
   12f20:	ldr	r0, [fp, #-4]
   12f24:	mov	sp, fp
   12f28:	pop	{fp, pc}
   12f2c:	push	{fp, lr}
   12f30:	mov	fp, sp
   12f34:	sub	sp, sp, #96	; 0x60
   12f38:	str	r0, [fp, #-8]
   12f3c:	str	r1, [fp, #-12]
   12f40:	movw	r0, #1
   12f44:	strb	r0, [fp, #-13]
   12f48:	ldr	r0, [fp, #-8]
   12f4c:	bl	11544 <context_new@plt>
   12f50:	str	r0, [fp, #-20]	; 0xffffffec
   12f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f58:	movw	r1, #0
   12f5c:	cmp	r0, r1
   12f60:	bne	12fb4 <__assert_fail@plt+0x1740>
   12f64:	bl	11700 <__errno_location@plt>
   12f68:	ldr	r1, [r0]
   12f6c:	movw	r0, #15910	; 0x3e26
   12f70:	movt	r0, #2
   12f74:	str	r1, [fp, #-28]	; 0xffffffe4
   12f78:	bl	116b8 <gettext@plt>
   12f7c:	ldr	r1, [fp, #-8]
   12f80:	str	r0, [fp, #-32]	; 0xffffffe0
   12f84:	mov	r0, r1
   12f88:	bl	1b42c <__assert_fail@plt+0x9bb8>
   12f8c:	movw	r1, #0
   12f90:	str	r0, [fp, #-36]	; 0xffffffdc
   12f94:	mov	r0, r1
   12f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12fa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12fa4:	bl	11610 <error@plt>
   12fa8:	movw	r0, #1
   12fac:	str	r0, [fp, #-4]
   12fb0:	b	13278 <__assert_fail@plt+0x1a04>
   12fb4:	b	12fb8 <__assert_fail@plt+0x1744>
   12fb8:	movw	r0, #20948	; 0x51d4
   12fbc:	movt	r0, #3
   12fc0:	ldr	r0, [r0]
   12fc4:	movw	r1, #0
   12fc8:	cmp	r0, r1
   12fcc:	beq	1304c <__assert_fail@plt+0x17d8>
   12fd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fd4:	movw	r1, #20948	; 0x51d4
   12fd8:	movt	r1, #3
   12fdc:	ldr	r1, [r1]
   12fe0:	bl	116ac <context_user_set@plt>
   12fe4:	cmp	r0, #0
   12fe8:	beq	1304c <__assert_fail@plt+0x17d8>
   12fec:	bl	11700 <__errno_location@plt>
   12ff0:	ldr	r1, [r0]
   12ff4:	movw	r0, #15948	; 0x3e4c
   12ff8:	movt	r0, #2
   12ffc:	str	r1, [fp, #-40]	; 0xffffffd8
   13000:	bl	116b8 <gettext@plt>
   13004:	movw	r1, #20948	; 0x51d4
   13008:	movt	r1, #3
   1300c:	ldr	r1, [r1]
   13010:	str	r0, [fp, #-44]	; 0xffffffd4
   13014:	mov	r0, r1
   13018:	bl	1b42c <__assert_fail@plt+0x9bb8>
   1301c:	movw	r1, #0
   13020:	str	r0, [sp, #48]	; 0x30
   13024:	mov	r0, r1
   13028:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1302c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13030:	movw	r3, #15336	; 0x3be8
   13034:	movt	r3, #2
   13038:	ldr	ip, [sp, #48]	; 0x30
   1303c:	str	ip, [sp]
   13040:	bl	11610 <error@plt>
   13044:	movw	r0, #0
   13048:	strb	r0, [fp, #-13]
   1304c:	b	13050 <__assert_fail@plt+0x17dc>
   13050:	b	13054 <__assert_fail@plt+0x17e0>
   13054:	movw	r0, #20960	; 0x51e0
   13058:	movt	r0, #3
   1305c:	ldr	r0, [r0]
   13060:	movw	r1, #0
   13064:	cmp	r0, r1
   13068:	beq	130e8 <__assert_fail@plt+0x1874>
   1306c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13070:	movw	r1, #20960	; 0x51e0
   13074:	movt	r1, #3
   13078:	ldr	r1, [r1]
   1307c:	bl	117fc <context_range_set@plt>
   13080:	cmp	r0, #0
   13084:	beq	130e8 <__assert_fail@plt+0x1874>
   13088:	bl	11700 <__errno_location@plt>
   1308c:	ldr	r1, [r0]
   13090:	movw	r0, #15948	; 0x3e4c
   13094:	movt	r0, #2
   13098:	str	r1, [sp, #44]	; 0x2c
   1309c:	bl	116b8 <gettext@plt>
   130a0:	movw	r1, #20960	; 0x51e0
   130a4:	movt	r1, #3
   130a8:	ldr	r1, [r1]
   130ac:	str	r0, [sp, #40]	; 0x28
   130b0:	mov	r0, r1
   130b4:	bl	1b42c <__assert_fail@plt+0x9bb8>
   130b8:	movw	r1, #0
   130bc:	str	r0, [sp, #36]	; 0x24
   130c0:	mov	r0, r1
   130c4:	ldr	r1, [sp, #44]	; 0x2c
   130c8:	ldr	r2, [sp, #40]	; 0x28
   130cc:	movw	r3, #15351	; 0x3bf7
   130d0:	movt	r3, #2
   130d4:	ldr	ip, [sp, #36]	; 0x24
   130d8:	str	ip, [sp]
   130dc:	bl	11610 <error@plt>
   130e0:	movw	r0, #0
   130e4:	strb	r0, [fp, #-13]
   130e8:	b	130ec <__assert_fail@plt+0x1878>
   130ec:	b	130f0 <__assert_fail@plt+0x187c>
   130f0:	movw	r0, #20952	; 0x51d8
   130f4:	movt	r0, #3
   130f8:	ldr	r0, [r0]
   130fc:	movw	r1, #0
   13100:	cmp	r0, r1
   13104:	beq	13184 <__assert_fail@plt+0x1910>
   13108:	ldr	r0, [fp, #-20]	; 0xffffffec
   1310c:	movw	r1, #20952	; 0x51d8
   13110:	movt	r1, #3
   13114:	ldr	r1, [r1]
   13118:	bl	1155c <context_role_set@plt>
   1311c:	cmp	r0, #0
   13120:	beq	13184 <__assert_fail@plt+0x1910>
   13124:	bl	11700 <__errno_location@plt>
   13128:	ldr	r1, [r0]
   1312c:	movw	r0, #15948	; 0x3e4c
   13130:	movt	r0, #2
   13134:	str	r1, [sp, #32]
   13138:	bl	116b8 <gettext@plt>
   1313c:	movw	r1, #20952	; 0x51d8
   13140:	movt	r1, #3
   13144:	ldr	r1, [r1]
   13148:	str	r0, [sp, #28]
   1314c:	mov	r0, r1
   13150:	bl	1b42c <__assert_fail@plt+0x9bb8>
   13154:	movw	r1, #0
   13158:	str	r0, [sp, #24]
   1315c:	mov	r0, r1
   13160:	ldr	r1, [sp, #32]
   13164:	ldr	r2, [sp, #28]
   13168:	movw	r3, #15341	; 0x3bed
   1316c:	movt	r3, #2
   13170:	ldr	ip, [sp, #24]
   13174:	str	ip, [sp]
   13178:	bl	11610 <error@plt>
   1317c:	movw	r0, #0
   13180:	strb	r0, [fp, #-13]
   13184:	b	13188 <__assert_fail@plt+0x1914>
   13188:	b	1318c <__assert_fail@plt+0x1918>
   1318c:	movw	r0, #20956	; 0x51dc
   13190:	movt	r0, #3
   13194:	ldr	r0, [r0]
   13198:	movw	r1, #0
   1319c:	cmp	r0, r1
   131a0:	beq	13220 <__assert_fail@plt+0x19ac>
   131a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   131a8:	movw	r1, #20956	; 0x51dc
   131ac:	movt	r1, #3
   131b0:	ldr	r1, [r1]
   131b4:	bl	11568 <context_type_set@plt>
   131b8:	cmp	r0, #0
   131bc:	beq	13220 <__assert_fail@plt+0x19ac>
   131c0:	bl	11700 <__errno_location@plt>
   131c4:	ldr	r1, [r0]
   131c8:	movw	r0, #15948	; 0x3e4c
   131cc:	movt	r0, #2
   131d0:	str	r1, [sp, #20]
   131d4:	bl	116b8 <gettext@plt>
   131d8:	movw	r1, #20956	; 0x51dc
   131dc:	movt	r1, #3
   131e0:	ldr	r1, [r1]
   131e4:	str	r0, [sp, #16]
   131e8:	mov	r0, r1
   131ec:	bl	1b42c <__assert_fail@plt+0x9bb8>
   131f0:	movw	r1, #0
   131f4:	str	r0, [sp, #12]
   131f8:	mov	r0, r1
   131fc:	ldr	r1, [sp, #20]
   13200:	ldr	r2, [sp, #16]
   13204:	movw	r3, #15346	; 0x3bf2
   13208:	movt	r3, #2
   1320c:	ldr	ip, [sp, #12]
   13210:	str	ip, [sp]
   13214:	bl	11610 <error@plt>
   13218:	movw	r0, #0
   1321c:	strb	r0, [fp, #-13]
   13220:	b	13224 <__assert_fail@plt+0x19b0>
   13224:	ldrb	r0, [fp, #-13]
   13228:	tst	r0, #1
   1322c:	bne	13264 <__assert_fail@plt+0x19f0>
   13230:	bl	11700 <__errno_location@plt>
   13234:	ldr	r0, [r0]
   13238:	str	r0, [fp, #-24]	; 0xffffffe8
   1323c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13240:	bl	11670 <context_free@plt>
   13244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13248:	str	r0, [sp, #8]
   1324c:	bl	11700 <__errno_location@plt>
   13250:	ldr	r1, [sp, #8]
   13254:	str	r1, [r0]
   13258:	movw	r0, #1
   1325c:	str	r0, [fp, #-4]
   13260:	b	13278 <__assert_fail@plt+0x1a04>
   13264:	ldr	r0, [fp, #-20]	; 0xffffffec
   13268:	ldr	r1, [fp, #-12]
   1326c:	str	r0, [r1]
   13270:	movw	r0, #0
   13274:	str	r0, [fp, #-4]
   13278:	ldr	r0, [fp, #-4]
   1327c:	mov	sp, fp
   13280:	pop	{fp, pc}
   13284:	sub	sp, sp, #4
   13288:	str	r0, [sp]
   1328c:	ldr	r0, [sp]
   13290:	movw	r1, #20996	; 0x5204
   13294:	movt	r1, #3
   13298:	str	r0, [r1]
   1329c:	add	sp, sp, #4
   132a0:	bx	lr
   132a4:	sub	sp, sp, #4
   132a8:	and	r0, r0, #1
   132ac:	strb	r0, [sp, #3]
   132b0:	ldrb	r0, [sp, #3]
   132b4:	and	r0, r0, #1
   132b8:	movw	r1, #21000	; 0x5208
   132bc:	movt	r1, #3
   132c0:	strb	r0, [r1]
   132c4:	add	sp, sp, #4
   132c8:	bx	lr
   132cc:	push	{fp, lr}
   132d0:	mov	fp, sp
   132d4:	sub	sp, sp, #24
   132d8:	movw	r0, #20932	; 0x51c4
   132dc:	movt	r0, #3
   132e0:	ldr	r0, [r0]
   132e4:	bl	1ff74 <__assert_fail@plt+0xe700>
   132e8:	cmp	r0, #0
   132ec:	beq	133bc <__assert_fail@plt+0x1b48>
   132f0:	movw	r0, #21000	; 0x5208
   132f4:	movt	r0, #3
   132f8:	ldrb	r0, [r0]
   132fc:	tst	r0, #1
   13300:	beq	13314 <__assert_fail@plt+0x1aa0>
   13304:	bl	11700 <__errno_location@plt>
   13308:	ldr	r0, [r0]
   1330c:	cmp	r0, #32
   13310:	beq	133bc <__assert_fail@plt+0x1b48>
   13314:	movw	r0, #16295	; 0x3fa7
   13318:	movt	r0, #2
   1331c:	bl	116b8 <gettext@plt>
   13320:	str	r0, [fp, #-4]
   13324:	movw	r0, #20996	; 0x5204
   13328:	movt	r0, #3
   1332c:	ldr	r0, [r0]
   13330:	movw	r1, #0
   13334:	cmp	r0, r1
   13338:	beq	13390 <__assert_fail@plt+0x1b1c>
   1333c:	bl	11700 <__errno_location@plt>
   13340:	ldr	r1, [r0]
   13344:	movw	r0, #20996	; 0x5204
   13348:	movt	r0, #3
   1334c:	ldr	r0, [r0]
   13350:	str	r1, [fp, #-8]
   13354:	bl	1b190 <__assert_fail@plt+0x991c>
   13358:	ldr	r1, [fp, #-4]
   1335c:	movw	r2, #0
   13360:	str	r0, [sp, #12]
   13364:	mov	r0, r2
   13368:	ldr	r2, [fp, #-8]
   1336c:	str	r1, [sp, #8]
   13370:	mov	r1, r2
   13374:	movw	r2, #16307	; 0x3fb3
   13378:	movt	r2, #2
   1337c:	ldr	r3, [sp, #12]
   13380:	ldr	ip, [sp, #8]
   13384:	str	ip, [sp]
   13388:	bl	11610 <error@plt>
   1338c:	b	133ac <__assert_fail@plt+0x1b38>
   13390:	bl	11700 <__errno_location@plt>
   13394:	ldr	r1, [r0]
   13398:	ldr	r3, [fp, #-4]
   1339c:	movw	r0, #0
   133a0:	movw	r2, #16311	; 0x3fb7
   133a4:	movt	r2, #2
   133a8:	bl	11610 <error@plt>
   133ac:	movw	r0, #20840	; 0x5168
   133b0:	movt	r0, #3
   133b4:	ldr	r0, [r0]
   133b8:	bl	11520 <_exit@plt>
   133bc:	movw	r0, #20928	; 0x51c0
   133c0:	movt	r0, #3
   133c4:	ldr	r0, [r0]
   133c8:	bl	1ff74 <__assert_fail@plt+0xe700>
   133cc:	cmp	r0, #0
   133d0:	beq	133e4 <__assert_fail@plt+0x1b70>
   133d4:	movw	r0, #20840	; 0x5168
   133d8:	movt	r0, #3
   133dc:	ldr	r0, [r0]
   133e0:	bl	11520 <_exit@plt>
   133e4:	mov	sp, fp
   133e8:	pop	{fp, pc}
   133ec:	push	{fp, lr}
   133f0:	mov	fp, sp
   133f4:	sub	sp, sp, #80	; 0x50
   133f8:	ldr	r3, [pc, #1452]	; 139ac <__assert_fail@plt+0x2138>
   133fc:	str	r0, [fp, #-8]
   13400:	str	r1, [fp, #-12]
   13404:	str	r2, [fp, #-16]
   13408:	movw	r0, #0
   1340c:	str	r0, [fp, #-36]	; 0xffffffdc
   13410:	str	r0, [sp, #40]	; 0x28
   13414:	ldr	r0, [fp, #-12]
   13418:	and	r0, r0, r3
   1341c:	cmp	r0, #0
   13420:	beq	1343c <__assert_fail@plt+0x1bc8>
   13424:	bl	11700 <__errno_location@plt>
   13428:	movw	r1, #22
   1342c:	str	r1, [r0]
   13430:	movw	r0, #0
   13434:	str	r0, [fp, #-4]
   13438:	b	139a0 <__assert_fail@plt+0x212c>
   1343c:	ldr	r0, [fp, #-12]
   13440:	and	r0, r0, #4
   13444:	cmp	r0, #0
   13448:	beq	13474 <__assert_fail@plt+0x1c00>
   1344c:	ldr	r0, [fp, #-12]
   13450:	and	r0, r0, #512	; 0x200
   13454:	cmp	r0, #0
   13458:	beq	13474 <__assert_fail@plt+0x1c00>
   1345c:	bl	11700 <__errno_location@plt>
   13460:	movw	r1, #22
   13464:	str	r1, [r0]
   13468:	movw	r0, #0
   1346c:	str	r0, [fp, #-4]
   13470:	b	139a0 <__assert_fail@plt+0x212c>
   13474:	ldr	r0, [fp, #-12]
   13478:	and	r0, r0, #18
   1347c:	cmp	r0, #0
   13480:	bne	1349c <__assert_fail@plt+0x1c28>
   13484:	bl	11700 <__errno_location@plt>
   13488:	movw	r1, #22
   1348c:	str	r1, [r0]
   13490:	movw	r0, #0
   13494:	str	r0, [fp, #-4]
   13498:	b	139a0 <__assert_fail@plt+0x212c>
   1349c:	movw	r0, #1
   134a0:	movw	r1, #96	; 0x60
   134a4:	bl	1f894 <__assert_fail@plt+0xe020>
   134a8:	str	r0, [fp, #-20]	; 0xffffffec
   134ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   134b0:	movw	r1, #0
   134b4:	cmp	r0, r1
   134b8:	bne	134c8 <__assert_fail@plt+0x1c54>
   134bc:	movw	r0, #0
   134c0:	str	r0, [fp, #-4]
   134c4:	b	139a0 <__assert_fail@plt+0x212c>
   134c8:	ldr	r0, [fp, #-16]
   134cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   134d0:	str	r0, [r1, #44]	; 0x2c
   134d4:	ldr	r0, [fp, #-12]
   134d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   134dc:	str	r0, [r1, #48]	; 0x30
   134e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   134e4:	ldr	r0, [r0, #48]	; 0x30
   134e8:	and	r0, r0, #2
   134ec:	cmp	r0, #0
   134f0:	beq	13518 <__assert_fail@plt+0x1ca4>
   134f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   134f8:	ldr	r1, [r0, #48]	; 0x30
   134fc:	orr	r1, r1, #4
   13500:	str	r1, [r0, #48]	; 0x30
   13504:	ldr	r0, [fp, #-20]	; 0xffffffec
   13508:	ldr	r1, [r0, #48]	; 0x30
   1350c:	mvn	r2, #512	; 0x200
   13510:	and	r1, r1, r2
   13514:	str	r1, [r0, #48]	; 0x30
   13518:	ldr	r0, [fp, #-20]	; 0xffffffec
   1351c:	mvn	r1, #99	; 0x63
   13520:	str	r1, [r0, #32]
   13524:	ldr	r0, [fp, #-20]	; 0xffffffec
   13528:	ldr	r0, [r0, #48]	; 0x30
   1352c:	and	r0, r0, #512	; 0x200
   13530:	cmp	r0, #0
   13534:	beq	1356c <__assert_fail@plt+0x1cf8>
   13538:	b	1356c <__assert_fail@plt+0x1cf8>
   1353c:	ldr	r1, [pc, #1132]	; 139b0 <__assert_fail@plt+0x213c>
   13540:	movw	r0, #16315	; 0x3fbb
   13544:	movt	r0, #2
   13548:	bl	20700 <__assert_fail@plt+0xee8c>
   1354c:	str	r0, [sp, #32]
   13550:	ldr	r0, [sp, #32]
   13554:	cmp	r0, #0
   13558:	bge	13560 <__assert_fail@plt+0x1cec>
   1355c:	b	13568 <__assert_fail@plt+0x1cf4>
   13560:	ldr	r0, [sp, #32]
   13564:	bl	11844 <close@plt>
   13568:	b	1356c <__assert_fail@plt+0x1cf8>
   1356c:	ldr	r0, [fp, #-8]
   13570:	bl	139b4 <__assert_fail@plt+0x2140>
   13574:	str	r0, [sp, #28]
   13578:	ldr	r0, [fp, #-20]	; 0xffffffec
   1357c:	ldr	r1, [sp, #28]
   13580:	cmp	r1, #4096	; 0x1000
   13584:	str	r0, [sp, #16]
   13588:	bls	13598 <__assert_fail@plt+0x1d24>
   1358c:	ldr	r0, [sp, #28]
   13590:	str	r0, [sp, #12]
   13594:	b	135a4 <__assert_fail@plt+0x1d30>
   13598:	movw	r0, #4096	; 0x1000
   1359c:	str	r0, [sp, #12]
   135a0:	b	135a4 <__assert_fail@plt+0x1d30>
   135a4:	ldr	r0, [sp, #12]
   135a8:	ldr	r1, [sp, #16]
   135ac:	str	r0, [sp, #8]
   135b0:	mov	r0, r1
   135b4:	ldr	r1, [sp, #8]
   135b8:	bl	13a28 <__assert_fail@plt+0x21b4>
   135bc:	tst	r0, #1
   135c0:	bne	135c8 <__assert_fail@plt+0x1d54>
   135c4:	b	13990 <__assert_fail@plt+0x211c>
   135c8:	ldr	r0, [fp, #-8]
   135cc:	ldr	r0, [r0]
   135d0:	movw	r1, #0
   135d4:	cmp	r0, r1
   135d8:	beq	13610 <__assert_fail@plt+0x1d9c>
   135dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   135e0:	movw	r1, #14487	; 0x3897
   135e4:	movt	r1, #2
   135e8:	movw	r2, #0
   135ec:	bl	13b20 <__assert_fail@plt+0x22ac>
   135f0:	str	r0, [fp, #-36]	; 0xffffffdc
   135f4:	movw	r1, #0
   135f8:	cmp	r0, r1
   135fc:	bne	13604 <__assert_fail@plt+0x1d90>
   13600:	b	13984 <__assert_fail@plt+0x2110>
   13604:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13608:	mvn	r1, #0
   1360c:	str	r1, [r0, #48]	; 0x30
   13610:	ldr	r0, [fp, #-16]
   13614:	movw	r1, #0
   13618:	cmp	r0, r1
   1361c:	movw	r0, #1
   13620:	str	r0, [sp, #4]
   13624:	beq	13644 <__assert_fail@plt+0x1dd0>
   13628:	ldr	r0, [fp, #-20]	; 0xffffffec
   1362c:	ldr	r0, [r0, #48]	; 0x30
   13630:	and	r0, r0, #1024	; 0x400
   13634:	cmp	r0, #0
   13638:	movw	r0, #0
   1363c:	movne	r0, #1
   13640:	str	r0, [sp, #4]
   13644:	ldr	r0, [sp, #4]
   13648:	and	r0, r0, #1
   1364c:	strb	r0, [sp, #39]	; 0x27
   13650:	movw	r0, #0
   13654:	str	r0, [fp, #-28]	; 0xffffffe4
   13658:	str	r0, [fp, #-32]	; 0xffffffe0
   1365c:	ldr	r0, [fp, #-8]
   13660:	ldr	r0, [r0]
   13664:	movw	r1, #0
   13668:	cmp	r0, r1
   1366c:	beq	13860 <__assert_fail@plt+0x1fec>
   13670:	ldr	r0, [fp, #-8]
   13674:	ldr	r0, [r0]
   13678:	bl	116d0 <strlen@plt>
   1367c:	str	r0, [sp, #24]
   13680:	ldr	r0, [fp, #-12]
   13684:	and	r0, r0, #2048	; 0x800
   13688:	cmp	r0, #0
   1368c:	bne	13730 <__assert_fail@plt+0x1ebc>
   13690:	ldr	r0, [fp, #-8]
   13694:	ldr	r0, [r0]
   13698:	str	r0, [sp, #20]
   1369c:	ldr	r0, [sp, #24]
   136a0:	movw	r1, #2
   136a4:	cmp	r1, r0
   136a8:	bcs	1372c <__assert_fail@plt+0x1eb8>
   136ac:	ldr	r0, [sp, #20]
   136b0:	ldr	r1, [sp, #24]
   136b4:	sub	r1, r1, #1
   136b8:	add	r0, r0, r1
   136bc:	ldrb	r0, [r0]
   136c0:	cmp	r0, #47	; 0x2f
   136c4:	bne	1372c <__assert_fail@plt+0x1eb8>
   136c8:	b	136cc <__assert_fail@plt+0x1e58>
   136cc:	ldr	r0, [sp, #24]
   136d0:	movw	r1, #1
   136d4:	cmp	r1, r0
   136d8:	movw	r0, #0
   136dc:	str	r0, [sp]
   136e0:	bcs	13708 <__assert_fail@plt+0x1e94>
   136e4:	ldr	r0, [sp, #20]
   136e8:	ldr	r1, [sp, #24]
   136ec:	sub	r1, r1, #2
   136f0:	add	r0, r0, r1
   136f4:	ldrb	r0, [r0]
   136f8:	cmp	r0, #47	; 0x2f
   136fc:	movw	r0, #0
   13700:	moveq	r0, #1
   13704:	str	r0, [sp]
   13708:	ldr	r0, [sp]
   1370c:	tst	r0, #1
   13710:	beq	13728 <__assert_fail@plt+0x1eb4>
   13714:	ldr	r0, [sp, #24]
   13718:	mvn	r1, #0
   1371c:	add	r0, r0, r1
   13720:	str	r0, [sp, #24]
   13724:	b	136cc <__assert_fail@plt+0x1e58>
   13728:	b	1372c <__assert_fail@plt+0x1eb8>
   1372c:	b	13730 <__assert_fail@plt+0x1ebc>
   13730:	ldr	r0, [fp, #-20]	; 0xffffffec
   13734:	ldr	r1, [fp, #-8]
   13738:	ldr	r1, [r1]
   1373c:	ldr	r2, [sp, #24]
   13740:	bl	13b20 <__assert_fail@plt+0x22ac>
   13744:	str	r0, [fp, #-24]	; 0xffffffe8
   13748:	movw	r1, #0
   1374c:	cmp	r0, r1
   13750:	bne	13758 <__assert_fail@plt+0x1ee4>
   13754:	b	13974 <__assert_fail@plt+0x2100>
   13758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1375c:	movw	r1, #0
   13760:	str	r1, [r0, #48]	; 0x30
   13764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1376c:	str	r0, [r1, #4]
   13770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13774:	add	r0, r0, #168	; 0xa8
   13778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1377c:	str	r0, [r1, #24]
   13780:	ldrb	r0, [sp, #39]	; 0x27
   13784:	tst	r0, #1
   13788:	beq	137bc <__assert_fail@plt+0x1f48>
   1378c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13790:	movw	r1, #0
   13794:	cmp	r0, r1
   13798:	beq	137bc <__assert_fail@plt+0x1f48>
   1379c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137a0:	movw	r1, #11
   137a4:	strh	r1, [r0, #56]	; 0x38
   137a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137ac:	movw	r1, #1
   137b0:	and	r1, r1, #1
   137b4:	bl	13c18 <__assert_fail@plt+0x23a4>
   137b8:	b	137d8 <__assert_fail@plt+0x1f64>
   137bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   137c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137c4:	movw	r2, #0
   137c8:	and	r2, r2, #1
   137cc:	bl	13c70 <__assert_fail@plt+0x23fc>
   137d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137d4:	strh	r0, [r1, #56]	; 0x38
   137d8:	ldr	r0, [fp, #-16]
   137dc:	movw	r1, #0
   137e0:	cmp	r0, r1
   137e4:	beq	13800 <__assert_fail@plt+0x1f8c>
   137e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137f0:	str	r0, [r1, #8]
   137f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137f8:	str	r0, [fp, #-28]	; 0xffffffe4
   137fc:	b	13840 <__assert_fail@plt+0x1fcc>
   13800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13804:	movw	r1, #0
   13808:	str	r1, [r0, #8]
   1380c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13810:	cmp	r0, r1
   13814:	bne	13828 <__assert_fail@plt+0x1fb4>
   13818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1381c:	str	r0, [fp, #-28]	; 0xffffffe4
   13820:	str	r0, [sp, #40]	; 0x28
   13824:	b	1383c <__assert_fail@plt+0x1fc8>
   13828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1382c:	ldr	r1, [sp, #40]	; 0x28
   13830:	str	r0, [r1, #8]
   13834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13838:	str	r0, [sp, #40]	; 0x28
   1383c:	b	13840 <__assert_fail@plt+0x1fcc>
   13840:	b	13844 <__assert_fail@plt+0x1fd0>
   13844:	ldr	r0, [fp, #-8]
   13848:	add	r0, r0, #4
   1384c:	str	r0, [fp, #-8]
   13850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13854:	add	r0, r0, #1
   13858:	str	r0, [fp, #-32]	; 0xffffffe0
   1385c:	b	1365c <__assert_fail@plt+0x1de8>
   13860:	ldr	r0, [fp, #-16]
   13864:	movw	r1, #0
   13868:	cmp	r0, r1
   1386c:	beq	13890 <__assert_fail@plt+0x201c>
   13870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13874:	cmp	r0, #1
   13878:	bls	13890 <__assert_fail@plt+0x201c>
   1387c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13880:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13884:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13888:	bl	13e88 <__assert_fail@plt+0x2614>
   1388c:	str	r0, [fp, #-28]	; 0xffffffe4
   13890:	ldr	r0, [fp, #-20]	; 0xffffffec
   13894:	movw	r1, #14487	; 0x3897
   13898:	movt	r1, #2
   1389c:	movw	r2, #0
   138a0:	bl	13b20 <__assert_fail@plt+0x22ac>
   138a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   138a8:	str	r0, [r1]
   138ac:	movw	r1, #0
   138b0:	cmp	r0, r1
   138b4:	bne	138bc <__assert_fail@plt+0x2048>
   138b8:	b	13974 <__assert_fail@plt+0x2100>
   138bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   138c4:	ldr	r1, [r1]
   138c8:	str	r0, [r1, #8]
   138cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   138d0:	ldr	r0, [r0]
   138d4:	movw	r1, #9
   138d8:	strh	r1, [r0, #56]	; 0x38
   138dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   138e0:	ldr	r0, [r0]
   138e4:	movw	r1, #1
   138e8:	str	r1, [r0, #48]	; 0x30
   138ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   138f0:	bl	14050 <__assert_fail@plt+0x27dc>
   138f4:	tst	r0, #1
   138f8:	bne	13900 <__assert_fail@plt+0x208c>
   138fc:	b	13974 <__assert_fail@plt+0x2100>
   13900:	ldr	r0, [fp, #-20]	; 0xffffffec
   13904:	ldr	r0, [r0, #48]	; 0x30
   13908:	and	r0, r0, #4
   1390c:	cmp	r0, #0
   13910:	bne	13958 <__assert_fail@plt+0x20e4>
   13914:	ldr	r0, [fp, #-20]	; 0xffffffec
   13918:	ldr	r0, [r0, #48]	; 0x30
   1391c:	and	r0, r0, #512	; 0x200
   13920:	cmp	r0, #0
   13924:	bne	13958 <__assert_fail@plt+0x20e4>
   13928:	ldr	r0, [fp, #-20]	; 0xffffffec
   1392c:	movw	r1, #16315	; 0x3fbb
   13930:	movt	r1, #2
   13934:	bl	1412c <__assert_fail@plt+0x28b8>
   13938:	ldr	r1, [fp, #-20]	; 0xffffffec
   1393c:	str	r0, [r1, #28]
   13940:	cmp	r0, #0
   13944:	bge	13958 <__assert_fail@plt+0x20e4>
   13948:	ldr	r0, [fp, #-20]	; 0xffffffec
   1394c:	ldr	r1, [r0, #48]	; 0x30
   13950:	orr	r1, r1, #4
   13954:	str	r1, [r0, #48]	; 0x30
   13958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1395c:	add	r0, r0, #60	; 0x3c
   13960:	mvn	r1, #0
   13964:	bl	18aa8 <__assert_fail@plt+0x7234>
   13968:	ldr	r0, [fp, #-20]	; 0xffffffec
   1396c:	str	r0, [fp, #-4]
   13970:	b	139a0 <__assert_fail@plt+0x212c>
   13974:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13978:	bl	141c8 <__assert_fail@plt+0x2954>
   1397c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13980:	bl	2082c <__assert_fail@plt+0xefb8>
   13984:	ldr	r0, [fp, #-20]	; 0xffffffec
   13988:	ldr	r0, [r0, #24]
   1398c:	bl	2082c <__assert_fail@plt+0xefb8>
   13990:	ldr	r0, [fp, #-20]	; 0xffffffec
   13994:	bl	2082c <__assert_fail@plt+0xefb8>
   13998:	movw	r0, #0
   1399c:	str	r0, [fp, #-4]
   139a0:	ldr	r0, [fp, #-4]
   139a4:	mov	sp, fp
   139a8:	pop	{fp, pc}
   139ac:			; <UNDEFINED> instruction: 0xfffff000
   139b0:	andeq	r0, r8, r0
   139b4:	push	{fp, lr}
   139b8:	mov	fp, sp
   139bc:	sub	sp, sp, #16
   139c0:	str	r0, [fp, #-4]
   139c4:	movw	r0, #0
   139c8:	str	r0, [sp, #4]
   139cc:	ldr	r0, [fp, #-4]
   139d0:	ldr	r0, [r0]
   139d4:	movw	r1, #0
   139d8:	cmp	r0, r1
   139dc:	beq	13a18 <__assert_fail@plt+0x21a4>
   139e0:	ldr	r0, [fp, #-4]
   139e4:	ldr	r0, [r0]
   139e8:	bl	116d0 <strlen@plt>
   139ec:	str	r0, [sp, #8]
   139f0:	ldr	r1, [sp, #4]
   139f4:	cmp	r0, r1
   139f8:	bls	13a04 <__assert_fail@plt+0x2190>
   139fc:	ldr	r0, [sp, #8]
   13a00:	str	r0, [sp, #4]
   13a04:	b	13a08 <__assert_fail@plt+0x2194>
   13a08:	ldr	r0, [fp, #-4]
   13a0c:	add	r0, r0, #4
   13a10:	str	r0, [fp, #-4]
   13a14:	b	139cc <__assert_fail@plt+0x2158>
   13a18:	ldr	r0, [sp, #4]
   13a1c:	add	r0, r0, #1
   13a20:	mov	sp, fp
   13a24:	pop	{fp, pc}
   13a28:	push	{fp, lr}
   13a2c:	mov	fp, sp
   13a30:	sub	sp, sp, #24
   13a34:	str	r0, [fp, #-8]
   13a38:	str	r1, [sp, #12]
   13a3c:	ldr	r0, [fp, #-8]
   13a40:	ldr	r0, [r0, #36]	; 0x24
   13a44:	ldr	r1, [sp, #12]
   13a48:	add	r0, r0, r1
   13a4c:	add	r0, r0, #256	; 0x100
   13a50:	str	r0, [sp, #4]
   13a54:	ldr	r0, [sp, #4]
   13a58:	ldr	r1, [fp, #-8]
   13a5c:	ldr	r1, [r1, #36]	; 0x24
   13a60:	cmp	r0, r1
   13a64:	bcs	13a9c <__assert_fail@plt+0x2228>
   13a68:	ldr	r0, [fp, #-8]
   13a6c:	ldr	r0, [r0, #24]
   13a70:	bl	2082c <__assert_fail@plt+0xefb8>
   13a74:	ldr	r0, [fp, #-8]
   13a78:	movw	r1, #0
   13a7c:	str	r1, [r0, #24]
   13a80:	bl	11700 <__errno_location@plt>
   13a84:	movw	r1, #36	; 0x24
   13a88:	str	r1, [r0]
   13a8c:	movw	r0, #0
   13a90:	and	r0, r0, #1
   13a94:	strb	r0, [fp, #-1]
   13a98:	b	13b10 <__assert_fail@plt+0x229c>
   13a9c:	ldr	r0, [sp, #4]
   13aa0:	ldr	r1, [fp, #-8]
   13aa4:	str	r0, [r1, #36]	; 0x24
   13aa8:	ldr	r0, [fp, #-8]
   13aac:	ldr	r0, [r0, #24]
   13ab0:	ldr	r1, [fp, #-8]
   13ab4:	ldr	r1, [r1, #36]	; 0x24
   13ab8:	bl	1f9a0 <__assert_fail@plt+0xe12c>
   13abc:	str	r0, [sp, #8]
   13ac0:	ldr	r0, [sp, #8]
   13ac4:	movw	r1, #0
   13ac8:	cmp	r0, r1
   13acc:	bne	13af8 <__assert_fail@plt+0x2284>
   13ad0:	ldr	r0, [fp, #-8]
   13ad4:	ldr	r0, [r0, #24]
   13ad8:	bl	2082c <__assert_fail@plt+0xefb8>
   13adc:	ldr	r0, [fp, #-8]
   13ae0:	movw	r1, #0
   13ae4:	str	r1, [r0, #24]
   13ae8:	movw	r0, #0
   13aec:	and	r0, r0, #1
   13af0:	strb	r0, [fp, #-1]
   13af4:	b	13b10 <__assert_fail@plt+0x229c>
   13af8:	ldr	r0, [sp, #8]
   13afc:	ldr	r1, [fp, #-8]
   13b00:	str	r0, [r1, #24]
   13b04:	movw	r0, #1
   13b08:	and	r0, r0, #1
   13b0c:	strb	r0, [fp, #-1]
   13b10:	ldrb	r0, [fp, #-1]
   13b14:	and	r0, r0, #1
   13b18:	mov	sp, fp
   13b1c:	pop	{fp, pc}
   13b20:	push	{fp, lr}
   13b24:	mov	fp, sp
   13b28:	sub	sp, sp, #24
   13b2c:	str	r0, [fp, #-8]
   13b30:	str	r1, [sp, #12]
   13b34:	str	r2, [sp, #8]
   13b38:	ldr	r0, [sp, #8]
   13b3c:	add	r0, r0, #1
   13b40:	add	r0, r0, #175	; 0xaf
   13b44:	mvn	r1, #7
   13b48:	and	r0, r0, r1
   13b4c:	str	r0, [sp]
   13b50:	ldr	r0, [sp]
   13b54:	bl	1f930 <__assert_fail@plt+0xe0bc>
   13b58:	str	r0, [sp, #4]
   13b5c:	movw	r1, #0
   13b60:	cmp	r0, r1
   13b64:	bne	13b74 <__assert_fail@plt+0x2300>
   13b68:	movw	r0, #0
   13b6c:	str	r0, [fp, #-4]
   13b70:	b	13c0c <__assert_fail@plt+0x2398>
   13b74:	ldr	r0, [sp, #4]
   13b78:	add	r0, r0, #168	; 0xa8
   13b7c:	ldr	r1, [sp, #12]
   13b80:	ldr	r2, [sp, #8]
   13b84:	bl	1152c <memcpy@plt>
   13b88:	ldr	r0, [sp, #4]
   13b8c:	add	r0, r0, #168	; 0xa8
   13b90:	ldr	r1, [sp, #8]
   13b94:	add	r0, r0, r1
   13b98:	movw	r1, #0
   13b9c:	strb	r1, [r0]
   13ba0:	ldr	r0, [sp, #8]
   13ba4:	ldr	r1, [sp, #4]
   13ba8:	str	r0, [r1, #52]	; 0x34
   13bac:	ldr	r0, [fp, #-8]
   13bb0:	ldr	r1, [sp, #4]
   13bb4:	str	r0, [r1, #44]	; 0x2c
   13bb8:	ldr	r0, [fp, #-8]
   13bbc:	ldr	r0, [r0, #24]
   13bc0:	ldr	r1, [sp, #4]
   13bc4:	str	r0, [r1, #28]
   13bc8:	ldr	r0, [sp, #4]
   13bcc:	movw	r1, #0
   13bd0:	str	r1, [r0, #32]
   13bd4:	ldr	r0, [sp, #4]
   13bd8:	str	r1, [r0, #12]
   13bdc:	ldr	r0, [sp, #4]
   13be0:	movw	r2, #0
   13be4:	strh	r2, [r0, #58]	; 0x3a
   13be8:	ldr	r0, [sp, #4]
   13bec:	movw	r2, #3
   13bf0:	strh	r2, [r0, #60]	; 0x3c
   13bf4:	ldr	r0, [sp, #4]
   13bf8:	str	r1, [r0, #16]
   13bfc:	ldr	r0, [sp, #4]
   13c00:	str	r1, [r0, #20]
   13c04:	ldr	r0, [sp, #4]
   13c08:	str	r0, [fp, #-4]
   13c0c:	ldr	r0, [fp, #-4]
   13c10:	mov	sp, fp
   13c14:	pop	{fp, pc}
   13c18:	push	{fp, lr}
   13c1c:	mov	fp, sp
   13c20:	sub	sp, sp, #8
   13c24:	str	r0, [sp, #4]
   13c28:	and	r0, r1, #1
   13c2c:	strb	r0, [sp, #3]
   13c30:	ldr	r0, [sp, #4]
   13c34:	ldrh	r0, [r0, #56]	; 0x38
   13c38:	cmp	r0, #11
   13c3c:	beq	13c44 <__assert_fail@plt+0x23d0>
   13c40:	bl	11838 <abort@plt>
   13c44:	b	13c48 <__assert_fail@plt+0x23d4>
   13c48:	ldrb	r0, [sp, #3]
   13c4c:	mov	r1, #1
   13c50:	tst	r0, #1
   13c54:	movwne	r1, #2
   13c58:	ldr	r0, [sp, #4]
   13c5c:	mov	r2, #0
   13c60:	str	r2, [r0, #116]	; 0x74
   13c64:	str	r1, [r0, #112]	; 0x70
   13c68:	mov	sp, fp
   13c6c:	pop	{fp, pc}
   13c70:	push	{fp, lr}
   13c74:	mov	fp, sp
   13c78:	sub	sp, sp, #24
   13c7c:	str	r0, [fp, #-8]
   13c80:	str	r1, [sp, #12]
   13c84:	and	r0, r2, #1
   13c88:	strb	r0, [sp, #11]
   13c8c:	ldr	r0, [sp, #12]
   13c90:	add	r0, r0, #64	; 0x40
   13c94:	str	r0, [sp, #4]
   13c98:	ldr	r0, [sp, #12]
   13c9c:	ldr	r0, [r0, #48]	; 0x30
   13ca0:	cmp	r0, #0
   13ca4:	bne	13cc4 <__assert_fail@plt+0x2450>
   13ca8:	ldr	r0, [fp, #-8]
   13cac:	ldr	r0, [r0, #48]	; 0x30
   13cb0:	and	r0, r0, #1
   13cb4:	cmp	r0, #0
   13cb8:	beq	13cc4 <__assert_fail@plt+0x2450>
   13cbc:	movw	r0, #1
   13cc0:	strb	r0, [sp, #11]
   13cc4:	ldr	r0, [fp, #-8]
   13cc8:	ldr	r0, [r0, #48]	; 0x30
   13ccc:	and	r0, r0, #2
   13cd0:	cmp	r0, #0
   13cd4:	bne	13ce4 <__assert_fail@plt+0x2470>
   13cd8:	ldrb	r0, [sp, #11]
   13cdc:	tst	r0, #1
   13ce0:	beq	13d54 <__assert_fail@plt+0x24e0>
   13ce4:	ldr	r0, [sp, #12]
   13ce8:	ldr	r0, [r0, #24]
   13cec:	ldr	r1, [sp, #4]
   13cf0:	bl	2318c <__assert_fail@plt+0x11918>
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d50 <__assert_fail@plt+0x24dc>
   13cfc:	bl	11700 <__errno_location@plt>
   13d00:	ldr	r0, [r0]
   13d04:	cmp	r0, #2
   13d08:	bne	13d3c <__assert_fail@plt+0x24c8>
   13d0c:	ldr	r0, [sp, #12]
   13d10:	ldr	r0, [r0, #24]
   13d14:	ldr	r1, [sp, #4]
   13d18:	bl	231ac <__assert_fail@plt+0x11938>
   13d1c:	cmp	r0, #0
   13d20:	bne	13d3c <__assert_fail@plt+0x24c8>
   13d24:	bl	11700 <__errno_location@plt>
   13d28:	movw	r1, #0
   13d2c:	str	r1, [r0]
   13d30:	movw	r0, #13
   13d34:	strh	r0, [fp, #-2]
   13d38:	b	13e7c <__assert_fail@plt+0x2608>
   13d3c:	bl	11700 <__errno_location@plt>
   13d40:	ldr	r0, [r0]
   13d44:	ldr	r1, [sp, #12]
   13d48:	str	r0, [r1, #32]
   13d4c:	b	13d88 <__assert_fail@plt+0x2514>
   13d50:	b	13dac <__assert_fail@plt+0x2538>
   13d54:	ldr	r0, [fp, #-8]
   13d58:	ldr	r0, [r0, #32]
   13d5c:	ldr	r1, [sp, #12]
   13d60:	ldr	r1, [r1, #24]
   13d64:	ldr	r2, [sp, #4]
   13d68:	movw	r3, #256	; 0x100
   13d6c:	bl	231bc <__assert_fail@plt+0x11948>
   13d70:	cmp	r0, #0
   13d74:	beq	13da8 <__assert_fail@plt+0x2534>
   13d78:	bl	11700 <__errno_location@plt>
   13d7c:	ldr	r0, [r0]
   13d80:	ldr	r1, [sp, #12]
   13d84:	str	r0, [r1, #32]
   13d88:	ldr	r0, [sp, #4]
   13d8c:	movw	r1, #0
   13d90:	and	r1, r1, #255	; 0xff
   13d94:	movw	r2, #104	; 0x68
   13d98:	bl	11718 <memset@plt>
   13d9c:	movw	r0, #10
   13da0:	strh	r0, [fp, #-2]
   13da4:	b	13e7c <__assert_fail@plt+0x2608>
   13da8:	b	13dac <__assert_fail@plt+0x2538>
   13dac:	ldr	r0, [sp, #4]
   13db0:	ldr	r0, [r0, #16]
   13db4:	and	r0, r0, #61440	; 0xf000
   13db8:	cmp	r0, #16384	; 0x4000
   13dbc:	bne	13e34 <__assert_fail@plt+0x25c0>
   13dc0:	ldr	r0, [sp, #12]
   13dc4:	ldrb	r0, [r0, #168]	; 0xa8
   13dc8:	cmp	r0, #46	; 0x2e
   13dcc:	bne	13e28 <__assert_fail@plt+0x25b4>
   13dd0:	ldr	r0, [sp, #12]
   13dd4:	ldrsb	r0, [r0, #169]	; 0xa9
   13dd8:	cmp	r0, #0
   13ddc:	beq	13e00 <__assert_fail@plt+0x258c>
   13de0:	ldr	r0, [sp, #12]
   13de4:	ldrb	r0, [r0, #169]	; 0xa9
   13de8:	cmp	r0, #46	; 0x2e
   13dec:	bne	13e28 <__assert_fail@plt+0x25b4>
   13df0:	ldr	r0, [sp, #12]
   13df4:	ldrsb	r0, [r0, #170]	; 0xaa
   13df8:	cmp	r0, #0
   13dfc:	bne	13e28 <__assert_fail@plt+0x25b4>
   13e00:	ldr	r0, [sp, #12]
   13e04:	ldr	r0, [r0, #48]	; 0x30
   13e08:	cmp	r0, #0
   13e0c:	movw	r0, #0
   13e10:	moveq	r0, #1
   13e14:	tst	r0, #1
   13e18:	movw	r0, #1
   13e1c:	moveq	r0, #5
   13e20:	strh	r0, [fp, #-2]
   13e24:	b	13e7c <__assert_fail@plt+0x2608>
   13e28:	movw	r0, #1
   13e2c:	strh	r0, [fp, #-2]
   13e30:	b	13e7c <__assert_fail@plt+0x2608>
   13e34:	ldr	r0, [sp, #4]
   13e38:	ldr	r0, [r0, #16]
   13e3c:	and	r0, r0, #61440	; 0xf000
   13e40:	cmp	r0, #40960	; 0xa000
   13e44:	bne	13e54 <__assert_fail@plt+0x25e0>
   13e48:	movw	r0, #12
   13e4c:	strh	r0, [fp, #-2]
   13e50:	b	13e7c <__assert_fail@plt+0x2608>
   13e54:	ldr	r0, [sp, #4]
   13e58:	ldr	r0, [r0, #16]
   13e5c:	and	r0, r0, #61440	; 0xf000
   13e60:	cmp	r0, #32768	; 0x8000
   13e64:	bne	13e74 <__assert_fail@plt+0x2600>
   13e68:	movw	r0, #8
   13e6c:	strh	r0, [fp, #-2]
   13e70:	b	13e7c <__assert_fail@plt+0x2608>
   13e74:	movw	r0, #3
   13e78:	strh	r0, [fp, #-2]
   13e7c:	ldrh	r0, [fp, #-2]
   13e80:	mov	sp, fp
   13e84:	pop	{fp, pc}
   13e88:	push	{fp, lr}
   13e8c:	mov	fp, sp
   13e90:	sub	sp, sp, #48	; 0x30
   13e94:	add	r3, sp, #20
   13e98:	str	r0, [fp, #-8]
   13e9c:	str	r1, [fp, #-12]
   13ea0:	str	r2, [fp, #-16]
   13ea4:	mov	r0, r3
   13ea8:	cmp	r3, r0
   13eac:	bne	13ec0 <__assert_fail@plt+0x264c>
   13eb0:	ldr	r0, [fp, #-8]
   13eb4:	ldr	r0, [r0, #44]	; 0x2c
   13eb8:	str	r0, [sp, #8]
   13ebc:	b	13ed0 <__assert_fail@plt+0x265c>
   13ec0:	movw	r0, #28140	; 0x6dec
   13ec4:	movt	r0, #1
   13ec8:	str	r0, [sp, #8]
   13ecc:	b	13ed0 <__assert_fail@plt+0x265c>
   13ed0:	ldr	r0, [sp, #8]
   13ed4:	str	r0, [sp, #16]
   13ed8:	ldr	r0, [fp, #-16]
   13edc:	ldr	r1, [fp, #-8]
   13ee0:	ldr	r1, [r1, #40]	; 0x28
   13ee4:	cmp	r0, r1
   13ee8:	bls	13f78 <__assert_fail@plt+0x2704>
   13eec:	ldr	r0, [pc, #344]	; 1404c <__assert_fail@plt+0x27d8>
   13ef0:	ldr	r1, [fp, #-16]
   13ef4:	add	r1, r1, #40	; 0x28
   13ef8:	ldr	r2, [fp, #-8]
   13efc:	str	r1, [r2, #40]	; 0x28
   13f00:	ldr	r1, [fp, #-8]
   13f04:	ldr	r1, [r1, #40]	; 0x28
   13f08:	cmp	r0, r1
   13f0c:	bcc	13f40 <__assert_fail@plt+0x26cc>
   13f10:	ldr	r0, [fp, #-8]
   13f14:	ldr	r1, [r0, #8]
   13f18:	ldr	r0, [r0, #40]	; 0x28
   13f1c:	lsl	r0, r0, #2
   13f20:	str	r0, [sp, #4]
   13f24:	mov	r0, r1
   13f28:	ldr	r1, [sp, #4]
   13f2c:	bl	1f9a0 <__assert_fail@plt+0xe12c>
   13f30:	str	r0, [sp, #12]
   13f34:	movw	r1, #0
   13f38:	cmp	r0, r1
   13f3c:	bne	13f6c <__assert_fail@plt+0x26f8>
   13f40:	ldr	r0, [fp, #-8]
   13f44:	ldr	r0, [r0, #8]
   13f48:	bl	2082c <__assert_fail@plt+0xefb8>
   13f4c:	ldr	r0, [fp, #-8]
   13f50:	movw	r1, #0
   13f54:	str	r1, [r0, #8]
   13f58:	ldr	r0, [fp, #-8]
   13f5c:	str	r1, [r0, #40]	; 0x28
   13f60:	ldr	r0, [fp, #-12]
   13f64:	str	r0, [fp, #-4]
   13f68:	b	14040 <__assert_fail@plt+0x27cc>
   13f6c:	ldr	r0, [sp, #12]
   13f70:	ldr	r1, [fp, #-8]
   13f74:	str	r0, [r1, #8]
   13f78:	ldr	r0, [fp, #-8]
   13f7c:	ldr	r0, [r0, #8]
   13f80:	str	r0, [fp, #-20]	; 0xffffffec
   13f84:	ldr	r0, [fp, #-12]
   13f88:	str	r0, [sp, #24]
   13f8c:	ldr	r0, [sp, #24]
   13f90:	movw	r1, #0
   13f94:	cmp	r0, r1
   13f98:	beq	13fc0 <__assert_fail@plt+0x274c>
   13f9c:	ldr	r0, [sp, #24]
   13fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13fa4:	add	r2, r1, #4
   13fa8:	str	r2, [fp, #-20]	; 0xffffffec
   13fac:	str	r0, [r1]
   13fb0:	ldr	r0, [sp, #24]
   13fb4:	ldr	r0, [r0, #8]
   13fb8:	str	r0, [sp, #24]
   13fbc:	b	13f8c <__assert_fail@plt+0x2718>
   13fc0:	ldr	r0, [fp, #-8]
   13fc4:	ldr	r0, [r0, #8]
   13fc8:	ldr	r1, [fp, #-16]
   13fcc:	ldr	r3, [sp, #16]
   13fd0:	movw	r2, #4
   13fd4:	bl	117d8 <qsort@plt>
   13fd8:	ldr	r0, [fp, #-8]
   13fdc:	ldr	r0, [r0, #8]
   13fe0:	str	r0, [fp, #-20]	; 0xffffffec
   13fe4:	ldr	r0, [r0]
   13fe8:	str	r0, [fp, #-12]
   13fec:	ldr	r0, [fp, #-16]
   13ff0:	mvn	r1, #0
   13ff4:	add	r0, r0, r1
   13ff8:	str	r0, [fp, #-16]
   13ffc:	cmp	r0, #0
   14000:	beq	14028 <__assert_fail@plt+0x27b4>
   14004:	ldr	r0, [fp, #-20]	; 0xffffffec
   14008:	ldr	r0, [r0, #4]
   1400c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14010:	ldr	r1, [r1]
   14014:	str	r0, [r1, #8]
   14018:	ldr	r0, [fp, #-20]	; 0xffffffec
   1401c:	add	r0, r0, #4
   14020:	str	r0, [fp, #-20]	; 0xffffffec
   14024:	b	13fec <__assert_fail@plt+0x2778>
   14028:	ldr	r0, [fp, #-20]	; 0xffffffec
   1402c:	ldr	r0, [r0]
   14030:	movw	r1, #0
   14034:	str	r1, [r0, #8]
   14038:	ldr	r0, [fp, #-12]
   1403c:	str	r0, [fp, #-4]
   14040:	ldr	r0, [fp, #-4]
   14044:	mov	sp, fp
   14048:	pop	{fp, pc}
   1404c:	svccc	0x00ffffff
   14050:	push	{fp, lr}
   14054:	mov	fp, sp
   14058:	sub	sp, sp, #16
   1405c:	str	r0, [sp, #8]
   14060:	ldr	r0, [sp, #8]
   14064:	ldr	r0, [r0, #48]	; 0x30
   14068:	movw	r1, #258	; 0x102
   1406c:	and	r0, r0, r1
   14070:	cmp	r0, #0
   14074:	beq	140d0 <__assert_fail@plt+0x285c>
   14078:	movw	r0, #31
   1407c:	movw	r1, #0
   14080:	movw	r2, #26320	; 0x66d0
   14084:	movt	r2, #1
   14088:	movw	r3, #26400	; 0x6720
   1408c:	movt	r3, #1
   14090:	movw	ip, #2092	; 0x82c
   14094:	movt	ip, #2
   14098:	str	ip, [sp]
   1409c:	bl	17654 <__assert_fail@plt+0x5de0>
   140a0:	ldr	r1, [sp, #8]
   140a4:	str	r0, [r1, #56]	; 0x38
   140a8:	ldr	r0, [sp, #8]
   140ac:	ldr	r0, [r0, #56]	; 0x38
   140b0:	movw	r1, #0
   140b4:	cmp	r0, r1
   140b8:	bne	140cc <__assert_fail@plt+0x2858>
   140bc:	movw	r0, #0
   140c0:	and	r0, r0, #1
   140c4:	strb	r0, [fp, #-1]
   140c8:	b	1411c <__assert_fail@plt+0x28a8>
   140cc:	b	14110 <__assert_fail@plt+0x289c>
   140d0:	movw	r0, #32
   140d4:	bl	1f930 <__assert_fail@plt+0xe0bc>
   140d8:	ldr	r1, [sp, #8]
   140dc:	str	r0, [r1, #56]	; 0x38
   140e0:	ldr	r0, [sp, #8]
   140e4:	ldr	r0, [r0, #56]	; 0x38
   140e8:	movw	r1, #0
   140ec:	cmp	r0, r1
   140f0:	bne	14104 <__assert_fail@plt+0x2890>
   140f4:	movw	r0, #0
   140f8:	and	r0, r0, #1
   140fc:	strb	r0, [fp, #-1]
   14100:	b	1411c <__assert_fail@plt+0x28a8>
   14104:	ldr	r0, [sp, #8]
   14108:	ldr	r0, [r0, #56]	; 0x38
   1410c:	bl	20044 <__assert_fail@plt+0xe7d0>
   14110:	movw	r0, #1
   14114:	and	r0, r0, #1
   14118:	strb	r0, [fp, #-1]
   1411c:	ldrb	r0, [fp, #-1]
   14120:	and	r0, r0, #1
   14124:	mov	sp, fp
   14128:	pop	{fp, pc}
   1412c:	push	{fp, lr}
   14130:	mov	fp, sp
   14134:	sub	sp, sp, #24
   14138:	ldr	r2, [pc, #132]	; 141c4 <__assert_fail@plt+0x2950>
   1413c:	str	r0, [fp, #-4]
   14140:	str	r1, [fp, #-8]
   14144:	ldr	r0, [fp, #-4]
   14148:	ldr	r0, [r0, #48]	; 0x30
   1414c:	and	r0, r0, #16
   14150:	cmp	r0, #0
   14154:	movw	r0, #0
   14158:	movne	r0, #1
   1415c:	tst	r0, #1
   14160:	movw	r0, #32768	; 0x8000
   14164:	moveq	r0, #0
   14168:	orr	r0, r0, r2
   1416c:	str	r0, [sp, #12]
   14170:	ldr	r0, [fp, #-4]
   14174:	ldr	r0, [r0, #48]	; 0x30
   14178:	and	r0, r0, #512	; 0x200
   1417c:	cmp	r0, #0
   14180:	beq	141a0 <__assert_fail@plt+0x292c>
   14184:	ldr	r0, [fp, #-4]
   14188:	ldr	r0, [r0, #32]
   1418c:	ldr	r1, [fp, #-8]
   14190:	ldr	r2, [sp, #12]
   14194:	bl	18c84 <__assert_fail@plt+0x7410>
   14198:	str	r0, [sp, #4]
   1419c:	b	141b0 <__assert_fail@plt+0x293c>
   141a0:	ldr	r0, [fp, #-8]
   141a4:	ldr	r1, [sp, #12]
   141a8:	bl	20700 <__assert_fail@plt+0xee8c>
   141ac:	str	r0, [sp, #4]
   141b0:	ldr	r0, [sp, #4]
   141b4:	str	r0, [sp, #8]
   141b8:	ldr	r0, [sp, #8]
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	andeq	r4, r8, r0, lsl #18
   141c8:	push	{fp, lr}
   141cc:	mov	fp, sp
   141d0:	sub	sp, sp, #8
   141d4:	str	r0, [sp, #4]
   141d8:	ldr	r0, [sp, #4]
   141dc:	str	r0, [sp]
   141e0:	movw	r1, #0
   141e4:	cmp	r0, r1
   141e8:	beq	14224 <__assert_fail@plt+0x29b0>
   141ec:	ldr	r0, [sp, #4]
   141f0:	ldr	r0, [r0, #8]
   141f4:	str	r0, [sp, #4]
   141f8:	ldr	r0, [sp]
   141fc:	ldr	r0, [r0, #12]
   14200:	movw	r1, #0
   14204:	cmp	r0, r1
   14208:	beq	14218 <__assert_fail@plt+0x29a4>
   1420c:	ldr	r0, [sp]
   14210:	ldr	r0, [r0, #12]
   14214:	bl	1185c <closedir@plt>
   14218:	ldr	r0, [sp]
   1421c:	bl	2082c <__assert_fail@plt+0xefb8>
   14220:	b	141d8 <__assert_fail@plt+0x2964>
   14224:	mov	sp, fp
   14228:	pop	{fp, pc}
   1422c:	push	{fp, lr}
   14230:	mov	fp, sp
   14234:	sub	sp, sp, #32
   14238:	str	r0, [fp, #-8]
   1423c:	movw	r0, #0
   14240:	str	r0, [sp, #12]
   14244:	ldr	r1, [fp, #-8]
   14248:	ldr	r1, [r1]
   1424c:	cmp	r1, r0
   14250:	beq	142c4 <__assert_fail@plt+0x2a50>
   14254:	ldr	r0, [fp, #-8]
   14258:	ldr	r0, [r0]
   1425c:	str	r0, [sp, #16]
   14260:	ldr	r0, [sp, #16]
   14264:	ldr	r0, [r0, #48]	; 0x30
   14268:	cmp	r0, #0
   1426c:	blt	142bc <__assert_fail@plt+0x2a48>
   14270:	ldr	r0, [sp, #16]
   14274:	str	r0, [fp, #-12]
   14278:	ldr	r0, [sp, #16]
   1427c:	ldr	r0, [r0, #8]
   14280:	movw	r1, #0
   14284:	cmp	r0, r1
   14288:	beq	1429c <__assert_fail@plt+0x2a28>
   1428c:	ldr	r0, [sp, #16]
   14290:	ldr	r0, [r0, #8]
   14294:	str	r0, [sp, #8]
   14298:	b	142a8 <__assert_fail@plt+0x2a34>
   1429c:	ldr	r0, [sp, #16]
   142a0:	ldr	r0, [r0, #4]
   142a4:	str	r0, [sp, #8]
   142a8:	ldr	r0, [sp, #8]
   142ac:	str	r0, [sp, #16]
   142b0:	ldr	r0, [fp, #-12]
   142b4:	bl	2082c <__assert_fail@plt+0xefb8>
   142b8:	b	14260 <__assert_fail@plt+0x29ec>
   142bc:	ldr	r0, [sp, #16]
   142c0:	bl	2082c <__assert_fail@plt+0xefb8>
   142c4:	ldr	r0, [fp, #-8]
   142c8:	ldr	r0, [r0, #4]
   142cc:	movw	r1, #0
   142d0:	cmp	r0, r1
   142d4:	beq	142e4 <__assert_fail@plt+0x2a70>
   142d8:	ldr	r0, [fp, #-8]
   142dc:	ldr	r0, [r0, #4]
   142e0:	bl	141c8 <__assert_fail@plt+0x2954>
   142e4:	ldr	r0, [fp, #-8]
   142e8:	ldr	r0, [r0, #8]
   142ec:	bl	2082c <__assert_fail@plt+0xefb8>
   142f0:	ldr	r0, [fp, #-8]
   142f4:	ldr	r0, [r0, #24]
   142f8:	bl	2082c <__assert_fail@plt+0xefb8>
   142fc:	ldr	r0, [fp, #-8]
   14300:	ldr	r0, [r0, #48]	; 0x30
   14304:	and	r0, r0, #512	; 0x200
   14308:	cmp	r0, #0
   1430c:	beq	1434c <__assert_fail@plt+0x2ad8>
   14310:	ldr	r0, [fp, #-8]
   14314:	ldr	r0, [r0, #32]
   14318:	movw	r1, #0
   1431c:	cmp	r1, r0
   14320:	bgt	14348 <__assert_fail@plt+0x2ad4>
   14324:	ldr	r0, [fp, #-8]
   14328:	ldr	r0, [r0, #32]
   1432c:	bl	11844 <close@plt>
   14330:	cmp	r0, #0
   14334:	beq	14344 <__assert_fail@plt+0x2ad0>
   14338:	bl	11700 <__errno_location@plt>
   1433c:	ldr	r0, [r0]
   14340:	str	r0, [sp, #12]
   14344:	b	14348 <__assert_fail@plt+0x2ad4>
   14348:	b	143b8 <__assert_fail@plt+0x2b44>
   1434c:	ldr	r0, [fp, #-8]
   14350:	ldr	r0, [r0, #48]	; 0x30
   14354:	and	r0, r0, #4
   14358:	cmp	r0, #0
   1435c:	bne	143b4 <__assert_fail@plt+0x2b40>
   14360:	ldr	r0, [fp, #-8]
   14364:	ldr	r0, [r0, #28]
   14368:	bl	117cc <fchdir@plt>
   1436c:	cmp	r0, #0
   14370:	beq	14380 <__assert_fail@plt+0x2b0c>
   14374:	bl	11700 <__errno_location@plt>
   14378:	ldr	r0, [r0]
   1437c:	str	r0, [sp, #12]
   14380:	ldr	r0, [fp, #-8]
   14384:	ldr	r0, [r0, #28]
   14388:	bl	11844 <close@plt>
   1438c:	cmp	r0, #0
   14390:	beq	143b0 <__assert_fail@plt+0x2b3c>
   14394:	ldr	r0, [sp, #12]
   14398:	cmp	r0, #0
   1439c:	bne	143ac <__assert_fail@plt+0x2b38>
   143a0:	bl	11700 <__errno_location@plt>
   143a4:	ldr	r0, [r0]
   143a8:	str	r0, [sp, #12]
   143ac:	b	143b0 <__assert_fail@plt+0x2b3c>
   143b0:	b	143b4 <__assert_fail@plt+0x2b40>
   143b4:	b	143b8 <__assert_fail@plt+0x2b44>
   143b8:	ldr	r0, [fp, #-8]
   143bc:	add	r0, r0, #60	; 0x3c
   143c0:	bl	14434 <__assert_fail@plt+0x2bc0>
   143c4:	ldr	r0, [fp, #-8]
   143c8:	ldr	r0, [r0, #52]	; 0x34
   143cc:	movw	r1, #0
   143d0:	cmp	r0, r1
   143d4:	beq	143e4 <__assert_fail@plt+0x2b70>
   143d8:	ldr	r0, [fp, #-8]
   143dc:	ldr	r0, [r0, #52]	; 0x34
   143e0:	bl	17ba4 <__assert_fail@plt+0x6330>
   143e4:	ldr	r0, [fp, #-8]
   143e8:	bl	1448c <__assert_fail@plt+0x2c18>
   143ec:	ldr	r0, [fp, #-8]
   143f0:	bl	2082c <__assert_fail@plt+0xefb8>
   143f4:	ldr	r0, [sp, #12]
   143f8:	cmp	r0, #0
   143fc:	beq	14420 <__assert_fail@plt+0x2bac>
   14400:	ldr	r0, [sp, #12]
   14404:	str	r0, [sp, #4]
   14408:	bl	11700 <__errno_location@plt>
   1440c:	ldr	r1, [sp, #4]
   14410:	str	r1, [r0]
   14414:	mvn	r0, #0
   14418:	str	r0, [fp, #-4]
   1441c:	b	14428 <__assert_fail@plt+0x2bb4>
   14420:	movw	r0, #0
   14424:	str	r0, [fp, #-4]
   14428:	ldr	r0, [fp, #-4]
   1442c:	mov	sp, fp
   14430:	pop	{fp, pc}
   14434:	push	{fp, lr}
   14438:	mov	fp, sp
   1443c:	sub	sp, sp, #8
   14440:	str	r0, [sp, #4]
   14444:	ldr	r0, [sp, #4]
   14448:	bl	18b1c <__assert_fail@plt+0x72a8>
   1444c:	mvn	r1, #0
   14450:	eor	r0, r0, r1
   14454:	tst	r0, #1
   14458:	beq	14484 <__assert_fail@plt+0x2c10>
   1445c:	ldr	r0, [sp, #4]
   14460:	bl	18bec <__assert_fail@plt+0x7378>
   14464:	str	r0, [sp]
   14468:	ldr	r0, [sp]
   1446c:	movw	r1, #0
   14470:	cmp	r1, r0
   14474:	bgt	14480 <__assert_fail@plt+0x2c0c>
   14478:	ldr	r0, [sp]
   1447c:	bl	11844 <close@plt>
   14480:	b	14444 <__assert_fail@plt+0x2bd0>
   14484:	mov	sp, fp
   14488:	pop	{fp, pc}
   1448c:	push	{fp, lr}
   14490:	mov	fp, sp
   14494:	sub	sp, sp, #8
   14498:	str	r0, [sp, #4]
   1449c:	ldr	r0, [sp, #4]
   144a0:	ldr	r0, [r0, #48]	; 0x30
   144a4:	movw	r1, #258	; 0x102
   144a8:	and	r0, r0, r1
   144ac:	cmp	r0, #0
   144b0:	beq	144d8 <__assert_fail@plt+0x2c64>
   144b4:	ldr	r0, [sp, #4]
   144b8:	ldr	r0, [r0, #56]	; 0x38
   144bc:	movw	r1, #0
   144c0:	cmp	r0, r1
   144c4:	beq	144d4 <__assert_fail@plt+0x2c60>
   144c8:	ldr	r0, [sp, #4]
   144cc:	ldr	r0, [r0, #56]	; 0x38
   144d0:	bl	17ba4 <__assert_fail@plt+0x6330>
   144d4:	b	144e4 <__assert_fail@plt+0x2c70>
   144d8:	ldr	r0, [sp, #4]
   144dc:	ldr	r0, [r0, #56]	; 0x38
   144e0:	bl	2082c <__assert_fail@plt+0xefb8>
   144e4:	mov	sp, fp
   144e8:	pop	{fp, pc}
   144ec:	push	{fp, lr}
   144f0:	mov	fp, sp
   144f4:	sub	sp, sp, #40	; 0x28
   144f8:	str	r0, [fp, #-8]
   144fc:	ldr	r0, [fp, #-8]
   14500:	ldr	r0, [r0]
   14504:	movw	r1, #0
   14508:	cmp	r0, r1
   1450c:	beq	14524 <__assert_fail@plt+0x2cb0>
   14510:	ldr	r0, [fp, #-8]
   14514:	ldr	r0, [r0, #48]	; 0x30
   14518:	and	r0, r0, #8192	; 0x2000
   1451c:	cmp	r0, #0
   14520:	beq	14530 <__assert_fail@plt+0x2cbc>
   14524:	movw	r0, #0
   14528:	str	r0, [fp, #-4]
   1452c:	b	14ec0 <__assert_fail@plt+0x364c>
   14530:	ldr	r0, [fp, #-8]
   14534:	ldr	r0, [r0]
   14538:	str	r0, [fp, #-12]
   1453c:	ldr	r0, [fp, #-12]
   14540:	ldrh	r0, [r0, #60]	; 0x3c
   14544:	strh	r0, [fp, #-18]	; 0xffffffee
   14548:	ldr	r0, [fp, #-12]
   1454c:	movw	r1, #3
   14550:	strh	r1, [r0, #60]	; 0x3c
   14554:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14558:	cmp	r0, #1
   1455c:	bne	14588 <__assert_fail@plt+0x2d14>
   14560:	ldr	r0, [fp, #-8]
   14564:	ldr	r1, [fp, #-12]
   14568:	movw	r2, #0
   1456c:	and	r2, r2, #1
   14570:	bl	13c70 <__assert_fail@plt+0x23fc>
   14574:	ldr	r1, [fp, #-12]
   14578:	strh	r0, [r1, #56]	; 0x38
   1457c:	ldr	r0, [fp, #-12]
   14580:	str	r0, [fp, #-4]
   14584:	b	14ec0 <__assert_fail@plt+0x364c>
   14588:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1458c:	cmp	r0, #2
   14590:	bne	1464c <__assert_fail@plt+0x2dd8>
   14594:	ldr	r0, [fp, #-12]
   14598:	ldrh	r0, [r0, #56]	; 0x38
   1459c:	cmp	r0, #12
   145a0:	beq	145b4 <__assert_fail@plt+0x2d40>
   145a4:	ldr	r0, [fp, #-12]
   145a8:	ldrh	r0, [r0, #56]	; 0x38
   145ac:	cmp	r0, #13
   145b0:	bne	1464c <__assert_fail@plt+0x2dd8>
   145b4:	ldr	r0, [fp, #-8]
   145b8:	ldr	r1, [fp, #-12]
   145bc:	movw	r2, #1
   145c0:	and	r2, r2, #1
   145c4:	bl	13c70 <__assert_fail@plt+0x23fc>
   145c8:	ldr	r1, [fp, #-12]
   145cc:	strh	r0, [r1, #56]	; 0x38
   145d0:	ldr	r0, [fp, #-12]
   145d4:	ldrh	r0, [r0, #56]	; 0x38
   145d8:	cmp	r0, #1
   145dc:	bne	14648 <__assert_fail@plt+0x2dd4>
   145e0:	ldr	r0, [fp, #-8]
   145e4:	ldr	r0, [r0, #48]	; 0x30
   145e8:	and	r0, r0, #4
   145ec:	cmp	r0, #0
   145f0:	bne	14648 <__assert_fail@plt+0x2dd4>
   145f4:	ldr	r0, [fp, #-8]
   145f8:	movw	r1, #16315	; 0x3fbb
   145fc:	movt	r1, #2
   14600:	bl	1412c <__assert_fail@plt+0x28b8>
   14604:	ldr	r1, [fp, #-12]
   14608:	str	r0, [r1, #36]	; 0x24
   1460c:	cmp	r0, #0
   14610:	bge	14634 <__assert_fail@plt+0x2dc0>
   14614:	bl	11700 <__errno_location@plt>
   14618:	ldr	r0, [r0]
   1461c:	ldr	r1, [fp, #-12]
   14620:	str	r0, [r1, #32]
   14624:	ldr	r0, [fp, #-12]
   14628:	movw	r1, #7
   1462c:	strh	r1, [r0, #56]	; 0x38
   14630:	b	14644 <__assert_fail@plt+0x2dd0>
   14634:	ldr	r0, [fp, #-12]
   14638:	ldrh	r1, [r0, #58]	; 0x3a
   1463c:	orr	r1, r1, #2
   14640:	strh	r1, [r0, #58]	; 0x3a
   14644:	b	14648 <__assert_fail@plt+0x2dd4>
   14648:	b	14b5c <__assert_fail@plt+0x32e8>
   1464c:	ldr	r0, [fp, #-12]
   14650:	ldrh	r0, [r0, #56]	; 0x38
   14654:	cmp	r0, #1
   14658:	bne	148b4 <__assert_fail@plt+0x3040>
   1465c:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14660:	cmp	r0, #4
   14664:	beq	146ac <__assert_fail@plt+0x2e38>
   14668:	ldr	r0, [fp, #-8]
   1466c:	ldr	r0, [r0, #48]	; 0x30
   14670:	and	r0, r0, #64	; 0x40
   14674:	cmp	r0, #0
   14678:	beq	1471c <__assert_fail@plt+0x2ea8>
   1467c:	ldr	r0, [fp, #-12]
   14680:	ldr	r1, [r0, #64]	; 0x40
   14684:	ldr	r0, [r0, #68]	; 0x44
   14688:	ldr	r2, [fp, #-8]
   1468c:	ldr	r3, [r2, #16]
   14690:	ldr	r2, [r2, #20]
   14694:	eor	r0, r0, r2
   14698:	eor	r1, r1, r3
   1469c:	orr	r0, r1, r0
   146a0:	cmp	r0, #0
   146a4:	beq	1471c <__assert_fail@plt+0x2ea8>
   146a8:	b	146ac <__assert_fail@plt+0x2e38>
   146ac:	ldr	r0, [fp, #-12]
   146b0:	ldrh	r0, [r0, #58]	; 0x3a
   146b4:	and	r0, r0, #2
   146b8:	cmp	r0, #0
   146bc:	beq	146cc <__assert_fail@plt+0x2e58>
   146c0:	ldr	r0, [fp, #-12]
   146c4:	ldr	r0, [r0, #36]	; 0x24
   146c8:	bl	11844 <close@plt>
   146cc:	ldr	r0, [fp, #-8]
   146d0:	ldr	r0, [r0, #4]
   146d4:	movw	r1, #0
   146d8:	cmp	r0, r1
   146dc:	beq	146f8 <__assert_fail@plt+0x2e84>
   146e0:	ldr	r0, [fp, #-8]
   146e4:	ldr	r0, [r0, #4]
   146e8:	bl	141c8 <__assert_fail@plt+0x2954>
   146ec:	ldr	r0, [fp, #-8]
   146f0:	movw	r1, #0
   146f4:	str	r1, [r0, #4]
   146f8:	ldr	r0, [fp, #-12]
   146fc:	movw	r1, #6
   14700:	strh	r1, [r0, #56]	; 0x38
   14704:	ldr	r0, [fp, #-8]
   14708:	ldr	r1, [fp, #-12]
   1470c:	bl	14ecc <__assert_fail@plt+0x3658>
   14710:	ldr	r0, [fp, #-12]
   14714:	str	r0, [fp, #-4]
   14718:	b	14ec0 <__assert_fail@plt+0x364c>
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldr	r0, [r0, #4]
   14724:	movw	r1, #0
   14728:	cmp	r0, r1
   1472c:	beq	14770 <__assert_fail@plt+0x2efc>
   14730:	ldr	r0, [fp, #-8]
   14734:	ldr	r0, [r0, #48]	; 0x30
   14738:	and	r0, r0, #4096	; 0x1000
   1473c:	cmp	r0, #0
   14740:	beq	14770 <__assert_fail@plt+0x2efc>
   14744:	ldr	r0, [fp, #-8]
   14748:	ldr	r1, [r0, #48]	; 0x30
   1474c:	mvn	r2, #4096	; 0x1000
   14750:	and	r1, r1, r2
   14754:	str	r1, [r0, #48]	; 0x30
   14758:	ldr	r0, [fp, #-8]
   1475c:	ldr	r0, [r0, #4]
   14760:	bl	141c8 <__assert_fail@plt+0x2954>
   14764:	ldr	r0, [fp, #-8]
   14768:	movw	r1, #0
   1476c:	str	r1, [r0, #4]
   14770:	ldr	r0, [fp, #-8]
   14774:	ldr	r0, [r0, #4]
   14778:	movw	r1, #0
   1477c:	cmp	r0, r1
   14780:	beq	1480c <__assert_fail@plt+0x2f98>
   14784:	ldr	r0, [fp, #-8]
   14788:	ldr	r1, [fp, #-12]
   1478c:	ldr	r2, [fp, #-12]
   14790:	ldr	r3, [r2, #24]
   14794:	mvn	r2, #0
   14798:	bl	1506c <__assert_fail@plt+0x37f8>
   1479c:	cmp	r0, #0
   147a0:	beq	14808 <__assert_fail@plt+0x2f94>
   147a4:	bl	11700 <__errno_location@plt>
   147a8:	ldr	r0, [r0]
   147ac:	ldr	r1, [fp, #-12]
   147b0:	str	r0, [r1, #32]
   147b4:	ldr	r0, [fp, #-12]
   147b8:	ldrh	r1, [r0, #58]	; 0x3a
   147bc:	orr	r1, r1, #1
   147c0:	strh	r1, [r0, #58]	; 0x3a
   147c4:	ldr	r0, [fp, #-8]
   147c8:	ldr	r0, [r0, #4]
   147cc:	str	r0, [fp, #-12]
   147d0:	ldr	r0, [fp, #-12]
   147d4:	movw	r1, #0
   147d8:	cmp	r0, r1
   147dc:	beq	14804 <__assert_fail@plt+0x2f90>
   147e0:	ldr	r0, [fp, #-12]
   147e4:	ldr	r0, [r0, #4]
   147e8:	ldr	r0, [r0, #24]
   147ec:	ldr	r1, [fp, #-12]
   147f0:	str	r0, [r1, #24]
   147f4:	ldr	r0, [fp, #-12]
   147f8:	ldr	r0, [r0, #8]
   147fc:	str	r0, [fp, #-12]
   14800:	b	147d0 <__assert_fail@plt+0x2f5c>
   14804:	b	14808 <__assert_fail@plt+0x2f94>
   14808:	b	14898 <__assert_fail@plt+0x3024>
   1480c:	ldr	r0, [fp, #-8]
   14810:	movw	r1, #3
   14814:	bl	1532c <__assert_fail@plt+0x3ab8>
   14818:	ldr	r1, [fp, #-8]
   1481c:	str	r0, [r1, #4]
   14820:	movw	r1, #0
   14824:	cmp	r0, r1
   14828:	bne	14894 <__assert_fail@plt+0x3020>
   1482c:	ldr	r0, [fp, #-8]
   14830:	ldr	r0, [r0, #48]	; 0x30
   14834:	and	r0, r0, #8192	; 0x2000
   14838:	cmp	r0, #0
   1483c:	beq	1484c <__assert_fail@plt+0x2fd8>
   14840:	movw	r0, #0
   14844:	str	r0, [fp, #-4]
   14848:	b	14ec0 <__assert_fail@plt+0x364c>
   1484c:	ldr	r0, [fp, #-12]
   14850:	ldr	r0, [r0, #32]
   14854:	cmp	r0, #0
   14858:	beq	14878 <__assert_fail@plt+0x3004>
   1485c:	ldr	r0, [fp, #-12]
   14860:	ldrh	r0, [r0, #56]	; 0x38
   14864:	cmp	r0, #4
   14868:	beq	14878 <__assert_fail@plt+0x3004>
   1486c:	ldr	r0, [fp, #-12]
   14870:	movw	r1, #7
   14874:	strh	r1, [r0, #56]	; 0x38
   14878:	b	1487c <__assert_fail@plt+0x3008>
   1487c:	ldr	r0, [fp, #-8]
   14880:	ldr	r1, [fp, #-12]
   14884:	bl	14ecc <__assert_fail@plt+0x3658>
   14888:	ldr	r0, [fp, #-12]
   1488c:	str	r0, [fp, #-4]
   14890:	b	14ec0 <__assert_fail@plt+0x364c>
   14894:	b	14898 <__assert_fail@plt+0x3024>
   14898:	ldr	r0, [fp, #-8]
   1489c:	ldr	r0, [r0, #4]
   148a0:	str	r0, [fp, #-12]
   148a4:	ldr	r0, [fp, #-8]
   148a8:	movw	r1, #0
   148ac:	str	r1, [r0, #4]
   148b0:	b	14abc <__assert_fail@plt+0x3248>
   148b4:	b	148b8 <__assert_fail@plt+0x3044>
   148b8:	ldr	r0, [fp, #-12]
   148bc:	str	r0, [fp, #-16]
   148c0:	ldr	r0, [fp, #-12]
   148c4:	ldr	r0, [r0, #8]
   148c8:	movw	r1, #0
   148cc:	cmp	r0, r1
   148d0:	bne	1496c <__assert_fail@plt+0x30f8>
   148d4:	ldr	r0, [fp, #-12]
   148d8:	ldr	r0, [r0, #4]
   148dc:	ldr	r0, [r0, #12]
   148e0:	movw	r1, #0
   148e4:	cmp	r0, r1
   148e8:	beq	1496c <__assert_fail@plt+0x30f8>
   148ec:	ldr	r0, [fp, #-16]
   148f0:	ldr	r0, [r0, #4]
   148f4:	str	r0, [fp, #-12]
   148f8:	ldr	r0, [fp, #-12]
   148fc:	ldr	r1, [fp, #-8]
   14900:	str	r0, [r1]
   14904:	ldr	r0, [fp, #-8]
   14908:	ldr	r0, [r0, #24]
   1490c:	ldr	r1, [fp, #-12]
   14910:	ldr	r1, [r1, #40]	; 0x28
   14914:	add	r0, r0, r1
   14918:	movw	r1, #0
   1491c:	strb	r1, [r0]
   14920:	ldr	r0, [fp, #-8]
   14924:	movw	r1, #3
   14928:	bl	1532c <__assert_fail@plt+0x3ab8>
   1492c:	str	r0, [fp, #-12]
   14930:	movw	r1, #0
   14934:	cmp	r0, r1
   14938:	bne	14960 <__assert_fail@plt+0x30ec>
   1493c:	ldr	r0, [fp, #-8]
   14940:	ldr	r0, [r0, #48]	; 0x30
   14944:	and	r0, r0, #8192	; 0x2000
   14948:	cmp	r0, #0
   1494c:	beq	1495c <__assert_fail@plt+0x30e8>
   14950:	movw	r0, #0
   14954:	str	r0, [fp, #-4]
   14958:	b	14ec0 <__assert_fail@plt+0x364c>
   1495c:	b	14c64 <__assert_fail@plt+0x33f0>
   14960:	ldr	r0, [fp, #-16]
   14964:	bl	2082c <__assert_fail@plt+0xefb8>
   14968:	b	14abc <__assert_fail@plt+0x3248>
   1496c:	ldr	r0, [fp, #-12]
   14970:	ldr	r0, [r0, #8]
   14974:	str	r0, [fp, #-12]
   14978:	movw	r1, #0
   1497c:	cmp	r0, r1
   14980:	beq	14c60 <__assert_fail@plt+0x33ec>
   14984:	ldr	r0, [fp, #-12]
   14988:	ldr	r1, [fp, #-8]
   1498c:	str	r0, [r1]
   14990:	ldr	r0, [fp, #-16]
   14994:	bl	2082c <__assert_fail@plt+0xefb8>
   14998:	ldr	r0, [fp, #-12]
   1499c:	ldr	r0, [r0, #48]	; 0x30
   149a0:	cmp	r0, #0
   149a4:	bne	149f4 <__assert_fail@plt+0x3180>
   149a8:	ldr	r0, [fp, #-8]
   149ac:	bl	15ff0 <__assert_fail@plt+0x477c>
   149b0:	cmp	r0, #0
   149b4:	beq	149d4 <__assert_fail@plt+0x3160>
   149b8:	ldr	r0, [fp, #-8]
   149bc:	ldr	r1, [r0, #48]	; 0x30
   149c0:	orr	r1, r1, #8192	; 0x2000
   149c4:	str	r1, [r0, #48]	; 0x30
   149c8:	movw	r0, #0
   149cc:	str	r0, [fp, #-4]
   149d0:	b	14ec0 <__assert_fail@plt+0x364c>
   149d4:	ldr	r0, [fp, #-8]
   149d8:	bl	1448c <__assert_fail@plt+0x2c18>
   149dc:	ldr	r0, [fp, #-8]
   149e0:	ldr	r1, [fp, #-12]
   149e4:	bl	16100 <__assert_fail@plt+0x488c>
   149e8:	ldr	r0, [fp, #-8]
   149ec:	bl	14050 <__assert_fail@plt+0x27dc>
   149f0:	b	14b5c <__assert_fail@plt+0x32e8>
   149f4:	ldr	r0, [fp, #-12]
   149f8:	ldrh	r0, [r0, #60]	; 0x3c
   149fc:	cmp	r0, #4
   14a00:	bne	14a08 <__assert_fail@plt+0x3194>
   14a04:	b	148b8 <__assert_fail@plt+0x3044>
   14a08:	ldr	r0, [fp, #-12]
   14a0c:	ldrh	r0, [r0, #60]	; 0x3c
   14a10:	cmp	r0, #2
   14a14:	bne	14ab8 <__assert_fail@plt+0x3244>
   14a18:	ldr	r0, [fp, #-8]
   14a1c:	ldr	r1, [fp, #-12]
   14a20:	movw	r2, #1
   14a24:	and	r2, r2, #1
   14a28:	bl	13c70 <__assert_fail@plt+0x23fc>
   14a2c:	ldr	r1, [fp, #-12]
   14a30:	strh	r0, [r1, #56]	; 0x38
   14a34:	ldr	r0, [fp, #-12]
   14a38:	ldrh	r0, [r0, #56]	; 0x38
   14a3c:	cmp	r0, #1
   14a40:	bne	14aac <__assert_fail@plt+0x3238>
   14a44:	ldr	r0, [fp, #-8]
   14a48:	ldr	r0, [r0, #48]	; 0x30
   14a4c:	and	r0, r0, #4
   14a50:	cmp	r0, #0
   14a54:	bne	14aac <__assert_fail@plt+0x3238>
   14a58:	ldr	r0, [fp, #-8]
   14a5c:	movw	r1, #16315	; 0x3fbb
   14a60:	movt	r1, #2
   14a64:	bl	1412c <__assert_fail@plt+0x28b8>
   14a68:	ldr	r1, [fp, #-12]
   14a6c:	str	r0, [r1, #36]	; 0x24
   14a70:	cmp	r0, #0
   14a74:	bge	14a98 <__assert_fail@plt+0x3224>
   14a78:	bl	11700 <__errno_location@plt>
   14a7c:	ldr	r0, [r0]
   14a80:	ldr	r1, [fp, #-12]
   14a84:	str	r0, [r1, #32]
   14a88:	ldr	r0, [fp, #-12]
   14a8c:	movw	r1, #7
   14a90:	strh	r1, [r0, #56]	; 0x38
   14a94:	b	14aa8 <__assert_fail@plt+0x3234>
   14a98:	ldr	r0, [fp, #-12]
   14a9c:	ldrh	r1, [r0, #58]	; 0x3a
   14aa0:	orr	r1, r1, #2
   14aa4:	strh	r1, [r0, #58]	; 0x3a
   14aa8:	b	14aac <__assert_fail@plt+0x3238>
   14aac:	ldr	r0, [fp, #-12]
   14ab0:	movw	r1, #3
   14ab4:	strh	r1, [r0, #60]	; 0x3c
   14ab8:	b	14abc <__assert_fail@plt+0x3248>
   14abc:	ldr	r0, [fp, #-8]
   14ac0:	ldr	r0, [r0, #24]
   14ac4:	ldr	r1, [fp, #-12]
   14ac8:	ldr	r1, [r1, #4]
   14acc:	ldr	r1, [r1, #28]
   14ad0:	ldr	r2, [fp, #-12]
   14ad4:	ldr	r2, [r2, #4]
   14ad8:	ldr	r2, [r2, #40]	; 0x28
   14adc:	sub	r2, r2, #1
   14ae0:	add	r1, r1, r2
   14ae4:	ldrb	r1, [r1]
   14ae8:	cmp	r1, #47	; 0x2f
   14aec:	str	r0, [sp, #12]
   14af0:	bne	14b0c <__assert_fail@plt+0x3298>
   14af4:	ldr	r0, [fp, #-12]
   14af8:	ldr	r0, [r0, #4]
   14afc:	ldr	r0, [r0, #40]	; 0x28
   14b00:	sub	r0, r0, #1
   14b04:	str	r0, [sp, #8]
   14b08:	b	14b1c <__assert_fail@plt+0x32a8>
   14b0c:	ldr	r0, [fp, #-12]
   14b10:	ldr	r0, [r0, #4]
   14b14:	ldr	r0, [r0, #40]	; 0x28
   14b18:	str	r0, [sp, #8]
   14b1c:	ldr	r0, [sp, #8]
   14b20:	ldr	r1, [sp, #12]
   14b24:	add	r0, r1, r0
   14b28:	str	r0, [sp, #16]
   14b2c:	ldr	r0, [sp, #16]
   14b30:	add	r2, r0, #1
   14b34:	str	r2, [sp, #16]
   14b38:	movw	r2, #47	; 0x2f
   14b3c:	strb	r2, [r0]
   14b40:	ldr	r0, [sp, #16]
   14b44:	ldr	r2, [fp, #-12]
   14b48:	add	r1, r2, #168	; 0xa8
   14b4c:	ldr	r2, [fp, #-12]
   14b50:	ldr	r2, [r2, #52]	; 0x34
   14b54:	add	r2, r2, #1
   14b58:	bl	11508 <memmove@plt>
   14b5c:	ldr	r0, [fp, #-12]
   14b60:	ldr	r1, [fp, #-8]
   14b64:	str	r0, [r1]
   14b68:	ldr	r0, [fp, #-12]
   14b6c:	ldrh	r0, [r0, #56]	; 0x38
   14b70:	cmp	r0, #11
   14b74:	bne	14bec <__assert_fail@plt+0x3378>
   14b78:	ldr	r0, [fp, #-12]
   14b7c:	ldr	r1, [r0, #112]	; 0x70
   14b80:	ldr	r0, [r0, #116]	; 0x74
   14b84:	eor	r1, r1, #2
   14b88:	orr	r0, r1, r0
   14b8c:	cmp	r0, #0
   14b90:	bne	14bb8 <__assert_fail@plt+0x3344>
   14b94:	b	14b98 <__assert_fail@plt+0x3324>
   14b98:	ldr	r0, [fp, #-8]
   14b9c:	ldr	r1, [fp, #-12]
   14ba0:	movw	r2, #0
   14ba4:	and	r2, r2, #1
   14ba8:	bl	13c70 <__assert_fail@plt+0x23fc>
   14bac:	ldr	r1, [fp, #-12]
   14bb0:	strh	r0, [r1, #56]	; 0x38
   14bb4:	b	14be8 <__assert_fail@plt+0x3374>
   14bb8:	b	14bbc <__assert_fail@plt+0x3348>
   14bbc:	ldr	r0, [fp, #-12]
   14bc0:	ldr	r1, [r0, #112]	; 0x70
   14bc4:	ldr	r0, [r0, #116]	; 0x74
   14bc8:	eor	r1, r1, #1
   14bcc:	orr	r0, r1, r0
   14bd0:	cmp	r0, #0
   14bd4:	beq	14be0 <__assert_fail@plt+0x336c>
   14bd8:	b	14bdc <__assert_fail@plt+0x3368>
   14bdc:	bl	11838 <abort@plt>
   14be0:	b	14be4 <__assert_fail@plt+0x3370>
   14be4:	b	14be8 <__assert_fail@plt+0x3374>
   14be8:	b	14bec <__assert_fail@plt+0x3378>
   14bec:	ldr	r0, [fp, #-12]
   14bf0:	ldrh	r0, [r0, #56]	; 0x38
   14bf4:	cmp	r0, #1
   14bf8:	bne	14c54 <__assert_fail@plt+0x33e0>
   14bfc:	ldr	r0, [fp, #-12]
   14c00:	ldr	r0, [r0, #48]	; 0x30
   14c04:	cmp	r0, #0
   14c08:	bne	14c24 <__assert_fail@plt+0x33b0>
   14c0c:	ldr	r0, [fp, #-12]
   14c10:	ldr	r1, [r0, #64]	; 0x40
   14c14:	ldr	r0, [r0, #68]	; 0x44
   14c18:	ldr	r2, [fp, #-8]
   14c1c:	str	r0, [r2, #20]
   14c20:	str	r1, [r2, #16]
   14c24:	ldr	r0, [fp, #-8]
   14c28:	ldr	r1, [fp, #-12]
   14c2c:	bl	161e0 <__assert_fail@plt+0x496c>
   14c30:	tst	r0, #1
   14c34:	bne	14c50 <__assert_fail@plt+0x33dc>
   14c38:	bl	11700 <__errno_location@plt>
   14c3c:	movw	r1, #12
   14c40:	str	r1, [r0]
   14c44:	movw	r0, #0
   14c48:	str	r0, [fp, #-4]
   14c4c:	b	14ec0 <__assert_fail@plt+0x364c>
   14c50:	b	14c54 <__assert_fail@plt+0x33e0>
   14c54:	ldr	r0, [fp, #-12]
   14c58:	str	r0, [fp, #-4]
   14c5c:	b	14ec0 <__assert_fail@plt+0x364c>
   14c60:	b	14c64 <__assert_fail@plt+0x33f0>
   14c64:	ldr	r0, [fp, #-16]
   14c68:	ldr	r0, [r0, #4]
   14c6c:	str	r0, [fp, #-12]
   14c70:	ldr	r0, [fp, #-12]
   14c74:	ldr	r1, [fp, #-8]
   14c78:	str	r0, [r1]
   14c7c:	ldr	r0, [fp, #-16]
   14c80:	bl	2082c <__assert_fail@plt+0xefb8>
   14c84:	ldr	r0, [fp, #-12]
   14c88:	ldr	r0, [r0, #48]	; 0x30
   14c8c:	cmn	r0, #1
   14c90:	bne	14cb8 <__assert_fail@plt+0x3444>
   14c94:	ldr	r0, [fp, #-12]
   14c98:	bl	2082c <__assert_fail@plt+0xefb8>
   14c9c:	bl	11700 <__errno_location@plt>
   14ca0:	movw	r1, #0
   14ca4:	str	r1, [r0]
   14ca8:	ldr	r0, [fp, #-8]
   14cac:	str	r1, [r0]
   14cb0:	str	r1, [fp, #-4]
   14cb4:	b	14ec0 <__assert_fail@plt+0x364c>
   14cb8:	b	14cbc <__assert_fail@plt+0x3448>
   14cbc:	ldr	r0, [fp, #-12]
   14cc0:	ldrh	r0, [r0, #56]	; 0x38
   14cc4:	cmp	r0, #11
   14cc8:	bne	14cd0 <__assert_fail@plt+0x345c>
   14ccc:	bl	11838 <abort@plt>
   14cd0:	b	14cd4 <__assert_fail@plt+0x3460>
   14cd4:	ldr	r0, [fp, #-8]
   14cd8:	ldr	r0, [r0, #24]
   14cdc:	ldr	r1, [fp, #-12]
   14ce0:	ldr	r1, [r1, #40]	; 0x28
   14ce4:	add	r0, r0, r1
   14ce8:	movw	r1, #0
   14cec:	strb	r1, [r0]
   14cf0:	ldr	r0, [fp, #-12]
   14cf4:	ldr	r0, [r0, #48]	; 0x30
   14cf8:	cmp	r0, #0
   14cfc:	bne	14d34 <__assert_fail@plt+0x34c0>
   14d00:	ldr	r0, [fp, #-8]
   14d04:	bl	15ff0 <__assert_fail@plt+0x477c>
   14d08:	cmp	r0, #0
   14d0c:	beq	14d30 <__assert_fail@plt+0x34bc>
   14d10:	bl	11700 <__errno_location@plt>
   14d14:	ldr	r0, [r0]
   14d18:	ldr	r1, [fp, #-12]
   14d1c:	str	r0, [r1, #32]
   14d20:	ldr	r0, [fp, #-8]
   14d24:	ldr	r1, [r0, #48]	; 0x30
   14d28:	orr	r1, r1, #8192	; 0x2000
   14d2c:	str	r1, [r0, #48]	; 0x30
   14d30:	b	14e30 <__assert_fail@plt+0x35bc>
   14d34:	ldr	r0, [fp, #-12]
   14d38:	ldrh	r0, [r0, #58]	; 0x3a
   14d3c:	and	r0, r0, #2
   14d40:	cmp	r0, #0
   14d44:	beq	14dd0 <__assert_fail@plt+0x355c>
   14d48:	ldr	r0, [fp, #-8]
   14d4c:	ldr	r0, [r0, #48]	; 0x30
   14d50:	and	r0, r0, #4
   14d54:	cmp	r0, #0
   14d58:	bne	14dc0 <__assert_fail@plt+0x354c>
   14d5c:	ldr	r0, [fp, #-8]
   14d60:	ldr	r0, [r0, #48]	; 0x30
   14d64:	and	r0, r0, #512	; 0x200
   14d68:	cmp	r0, #0
   14d6c:	beq	14d8c <__assert_fail@plt+0x3518>
   14d70:	ldr	r0, [fp, #-8]
   14d74:	ldr	r1, [fp, #-12]
   14d78:	ldr	r1, [r1, #36]	; 0x24
   14d7c:	movw	r2, #1
   14d80:	and	r2, r2, #1
   14d84:	bl	16340 <__assert_fail@plt+0x4acc>
   14d88:	b	14dc0 <__assert_fail@plt+0x354c>
   14d8c:	ldr	r0, [fp, #-12]
   14d90:	ldr	r0, [r0, #36]	; 0x24
   14d94:	bl	117cc <fchdir@plt>
   14d98:	cmp	r0, #0
   14d9c:	beq	14dc0 <__assert_fail@plt+0x354c>
   14da0:	bl	11700 <__errno_location@plt>
   14da4:	ldr	r0, [r0]
   14da8:	ldr	r1, [fp, #-12]
   14dac:	str	r0, [r1, #32]
   14db0:	ldr	r0, [fp, #-8]
   14db4:	ldr	r1, [r0, #48]	; 0x30
   14db8:	orr	r1, r1, #8192	; 0x2000
   14dbc:	str	r1, [r0, #48]	; 0x30
   14dc0:	ldr	r0, [fp, #-12]
   14dc4:	ldr	r0, [r0, #36]	; 0x24
   14dc8:	bl	11844 <close@plt>
   14dcc:	b	14e2c <__assert_fail@plt+0x35b8>
   14dd0:	ldr	r0, [fp, #-12]
   14dd4:	ldrh	r0, [r0, #58]	; 0x3a
   14dd8:	and	r0, r0, #1
   14ddc:	cmp	r0, #0
   14de0:	bne	14e28 <__assert_fail@plt+0x35b4>
   14de4:	ldr	r0, [fp, #-8]
   14de8:	ldr	r1, [fp, #-12]
   14dec:	ldr	r1, [r1, #4]
   14df0:	mvn	r2, #0
   14df4:	movw	r3, #16314	; 0x3fba
   14df8:	movt	r3, #2
   14dfc:	bl	1506c <__assert_fail@plt+0x37f8>
   14e00:	cmp	r0, #0
   14e04:	beq	14e28 <__assert_fail@plt+0x35b4>
   14e08:	bl	11700 <__errno_location@plt>
   14e0c:	ldr	r0, [r0]
   14e10:	ldr	r1, [fp, #-12]
   14e14:	str	r0, [r1, #32]
   14e18:	ldr	r0, [fp, #-8]
   14e1c:	ldr	r1, [r0, #48]	; 0x30
   14e20:	orr	r1, r1, #8192	; 0x2000
   14e24:	str	r1, [r0, #48]	; 0x30
   14e28:	b	14e2c <__assert_fail@plt+0x35b8>
   14e2c:	b	14e30 <__assert_fail@plt+0x35bc>
   14e30:	ldr	r0, [fp, #-12]
   14e34:	ldrh	r0, [r0, #56]	; 0x38
   14e38:	cmp	r0, #2
   14e3c:	beq	14e90 <__assert_fail@plt+0x361c>
   14e40:	ldr	r0, [fp, #-12]
   14e44:	ldr	r0, [r0, #32]
   14e48:	cmp	r0, #0
   14e4c:	movw	r0, #0
   14e50:	movne	r0, #1
   14e54:	tst	r0, #1
   14e58:	movw	r0, #7
   14e5c:	moveq	r0, #6
   14e60:	ldr	r1, [fp, #-12]
   14e64:	strh	r0, [r1, #56]	; 0x38
   14e68:	ldr	r0, [fp, #-12]
   14e6c:	ldr	r0, [r0, #32]
   14e70:	cmp	r0, #0
   14e74:	bne	14e8c <__assert_fail@plt+0x3618>
   14e78:	b	14e7c <__assert_fail@plt+0x3608>
   14e7c:	ldr	r0, [fp, #-8]
   14e80:	ldr	r1, [fp, #-12]
   14e84:	bl	14ecc <__assert_fail@plt+0x3658>
   14e88:	b	14e8c <__assert_fail@plt+0x3618>
   14e8c:	b	14e90 <__assert_fail@plt+0x361c>
   14e90:	ldr	r0, [fp, #-8]
   14e94:	ldr	r0, [r0, #48]	; 0x30
   14e98:	and	r0, r0, #8192	; 0x2000
   14e9c:	cmp	r0, #0
   14ea0:	beq	14eb0 <__assert_fail@plt+0x363c>
   14ea4:	movw	r0, #0
   14ea8:	str	r0, [sp, #4]
   14eac:	b	14eb8 <__assert_fail@plt+0x3644>
   14eb0:	ldr	r0, [fp, #-12]
   14eb4:	str	r0, [sp, #4]
   14eb8:	ldr	r0, [sp, #4]
   14ebc:	str	r0, [fp, #-4]
   14ec0:	ldr	r0, [fp, #-4]
   14ec4:	mov	sp, fp
   14ec8:	pop	{fp, pc}
   14ecc:	push	{fp, lr}
   14ed0:	mov	fp, sp
   14ed4:	sub	sp, sp, #48	; 0x30
   14ed8:	str	r0, [fp, #-4]
   14edc:	str	r1, [fp, #-8]
   14ee0:	ldr	r0, [fp, #-8]
   14ee4:	add	r0, r0, #64	; 0x40
   14ee8:	str	r0, [fp, #-12]
   14eec:	ldr	r0, [fp, #-4]
   14ef0:	ldr	r0, [r0, #48]	; 0x30
   14ef4:	movw	r1, #258	; 0x102
   14ef8:	and	r0, r0, r1
   14efc:	cmp	r0, #0
   14f00:	beq	14f60 <__assert_fail@plt+0x36ec>
   14f04:	ldr	r0, [fp, #-12]
   14f08:	ldr	r1, [r0]
   14f0c:	ldr	r0, [r0, #4]
   14f10:	str	r0, [sp, #12]
   14f14:	str	r1, [sp, #8]
   14f18:	ldr	r0, [fp, #-12]
   14f1c:	ldr	r1, [r0, #96]	; 0x60
   14f20:	ldr	r0, [r0, #100]	; 0x64
   14f24:	str	r0, [sp, #20]
   14f28:	str	r1, [sp, #16]
   14f2c:	ldr	r0, [fp, #-4]
   14f30:	ldr	r0, [r0, #56]	; 0x38
   14f34:	add	r1, sp, #8
   14f38:	bl	186ec <__assert_fail@plt+0x6e78>
   14f3c:	str	r0, [sp, #4]
   14f40:	ldr	r0, [sp, #4]
   14f44:	movw	r1, #0
   14f48:	cmp	r0, r1
   14f4c:	bne	14f54 <__assert_fail@plt+0x36e0>
   14f50:	bl	11838 <abort@plt>
   14f54:	ldr	r0, [sp, #4]
   14f58:	bl	2082c <__assert_fail@plt+0xefb8>
   14f5c:	b	15064 <__assert_fail@plt+0x37f0>
   14f60:	ldr	r0, [fp, #-8]
   14f64:	ldr	r0, [r0, #4]
   14f68:	str	r0, [sp]
   14f6c:	ldr	r0, [sp]
   14f70:	movw	r1, #0
   14f74:	cmp	r0, r1
   14f78:	beq	15060 <__assert_fail@plt+0x37ec>
   14f7c:	ldr	r0, [sp]
   14f80:	ldr	r0, [r0, #48]	; 0x30
   14f84:	movw	r1, #0
   14f88:	cmp	r1, r0
   14f8c:	bgt	15060 <__assert_fail@plt+0x37ec>
   14f90:	b	14f94 <__assert_fail@plt+0x3720>
   14f94:	ldr	r0, [fp, #-4]
   14f98:	ldr	r0, [r0, #56]	; 0x38
   14f9c:	ldr	r1, [r0, #16]
   14fa0:	ldr	r0, [r0, #20]
   14fa4:	orr	r0, r1, r0
   14fa8:	cmp	r0, #0
   14fac:	bne	14fb8 <__assert_fail@plt+0x3744>
   14fb0:	b	14fb4 <__assert_fail@plt+0x3740>
   14fb4:	bl	11838 <abort@plt>
   14fb8:	ldr	r0, [fp, #-4]
   14fbc:	ldr	r0, [r0, #56]	; 0x38
   14fc0:	ldr	r1, [r0]
   14fc4:	ldr	r0, [r0, #4]
   14fc8:	ldr	r2, [fp, #-12]
   14fcc:	ldr	r3, [r2, #96]	; 0x60
   14fd0:	ldr	r2, [r2, #100]	; 0x64
   14fd4:	eor	r0, r0, r2
   14fd8:	eor	r1, r1, r3
   14fdc:	orr	r0, r1, r0
   14fe0:	cmp	r0, #0
   14fe4:	bne	15058 <__assert_fail@plt+0x37e4>
   14fe8:	b	14fec <__assert_fail@plt+0x3778>
   14fec:	ldr	r0, [fp, #-4]
   14ff0:	ldr	r0, [r0, #56]	; 0x38
   14ff4:	ldr	r1, [r0, #8]
   14ff8:	ldr	r0, [r0, #12]
   14ffc:	ldr	r2, [fp, #-12]
   15000:	ldr	r3, [r2]
   15004:	ldr	r2, [r2, #4]
   15008:	eor	r0, r0, r2
   1500c:	eor	r1, r1, r3
   15010:	orr	r0, r1, r0
   15014:	cmp	r0, #0
   15018:	bne	15058 <__assert_fail@plt+0x37e4>
   1501c:	b	15020 <__assert_fail@plt+0x37ac>
   15020:	ldr	r0, [sp]
   15024:	ldr	r1, [r0, #64]	; 0x40
   15028:	ldr	r0, [r0, #68]	; 0x44
   1502c:	ldr	r2, [fp, #-4]
   15030:	ldr	r2, [r2, #56]	; 0x38
   15034:	str	r0, [r2, #12]
   15038:	str	r1, [r2, #8]
   1503c:	ldr	r0, [sp]
   15040:	ldr	r1, [r0, #160]	; 0xa0
   15044:	ldr	r0, [r0, #164]	; 0xa4
   15048:	ldr	r2, [fp, #-4]
   1504c:	ldr	r2, [r2, #56]	; 0x38
   15050:	str	r0, [r2, #4]
   15054:	str	r1, [r2]
   15058:	b	1505c <__assert_fail@plt+0x37e8>
   1505c:	b	15060 <__assert_fail@plt+0x37ec>
   15060:	b	15064 <__assert_fail@plt+0x37f0>
   15064:	mov	sp, fp
   15068:	pop	{fp, pc}
   1506c:	push	{fp, lr}
   15070:	mov	fp, sp
   15074:	sub	sp, sp, #160	; 0xa0
   15078:	str	r0, [fp, #-8]
   1507c:	str	r1, [fp, #-12]
   15080:	str	r2, [fp, #-16]
   15084:	str	r3, [fp, #-20]	; 0xffffffec
   15088:	ldr	r0, [fp, #-20]	; 0xffffffec
   1508c:	movw	r1, #0
   15090:	cmp	r0, r1
   15094:	movw	r0, #0
   15098:	str	r0, [sp, #8]
   1509c:	beq	150c0 <__assert_fail@plt+0x384c>
   150a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   150a4:	movw	r1, #16314	; 0x3fba
   150a8:	movt	r1, #2
   150ac:	bl	114d8 <strcmp@plt>
   150b0:	cmp	r0, #0
   150b4:	movw	r0, #0
   150b8:	moveq	r0, #1
   150bc:	str	r0, [sp, #8]
   150c0:	ldr	r0, [sp, #8]
   150c4:	and	r0, r0, #1
   150c8:	strb	r0, [fp, #-25]	; 0xffffffe7
   150cc:	ldr	r0, [fp, #-8]
   150d0:	ldr	r0, [r0, #48]	; 0x30
   150d4:	and	r0, r0, #4
   150d8:	cmp	r0, #0
   150dc:	beq	15118 <__assert_fail@plt+0x38a4>
   150e0:	ldr	r0, [fp, #-8]
   150e4:	ldr	r0, [r0, #48]	; 0x30
   150e8:	and	r0, r0, #512	; 0x200
   150ec:	cmp	r0, #0
   150f0:	beq	1510c <__assert_fail@plt+0x3898>
   150f4:	ldr	r0, [fp, #-16]
   150f8:	movw	r1, #0
   150fc:	cmp	r1, r0
   15100:	bgt	1510c <__assert_fail@plt+0x3898>
   15104:	ldr	r0, [fp, #-16]
   15108:	bl	11844 <close@plt>
   1510c:	movw	r0, #0
   15110:	str	r0, [fp, #-4]
   15114:	b	15320 <__assert_fail@plt+0x3aac>
   15118:	ldr	r0, [fp, #-16]
   1511c:	cmp	r0, #0
   15120:	bge	15190 <__assert_fail@plt+0x391c>
   15124:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15128:	tst	r0, #1
   1512c:	beq	15190 <__assert_fail@plt+0x391c>
   15130:	ldr	r0, [fp, #-8]
   15134:	ldr	r0, [r0, #48]	; 0x30
   15138:	and	r0, r0, #512	; 0x200
   1513c:	cmp	r0, #0
   15140:	beq	15190 <__assert_fail@plt+0x391c>
   15144:	ldr	r0, [fp, #-8]
   15148:	add	r0, r0, #60	; 0x3c
   1514c:	bl	18b1c <__assert_fail@plt+0x72a8>
   15150:	tst	r0, #1
   15154:	bne	1518c <__assert_fail@plt+0x3918>
   15158:	ldr	r0, [fp, #-8]
   1515c:	add	r0, r0, #60	; 0x3c
   15160:	bl	18bec <__assert_fail@plt+0x7378>
   15164:	str	r0, [fp, #-36]	; 0xffffffdc
   15168:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1516c:	movw	r1, #0
   15170:	cmp	r1, r0
   15174:	bgt	15188 <__assert_fail@plt+0x3914>
   15178:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1517c:	str	r0, [fp, #-16]
   15180:	movw	r0, #0
   15184:	str	r0, [fp, #-20]	; 0xffffffec
   15188:	b	1518c <__assert_fail@plt+0x3918>
   1518c:	b	15190 <__assert_fail@plt+0x391c>
   15190:	ldr	r0, [fp, #-16]
   15194:	str	r0, [fp, #-32]	; 0xffffffe0
   15198:	ldr	r0, [fp, #-16]
   1519c:	cmp	r0, #0
   151a0:	bge	151c8 <__assert_fail@plt+0x3954>
   151a4:	ldr	r0, [fp, #-8]
   151a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   151ac:	bl	1412c <__assert_fail@plt+0x28b8>
   151b0:	str	r0, [fp, #-32]	; 0xffffffe0
   151b4:	cmp	r0, #0
   151b8:	bge	151c8 <__assert_fail@plt+0x3954>
   151bc:	mvn	r0, #0
   151c0:	str	r0, [fp, #-4]
   151c4:	b	15320 <__assert_fail@plt+0x3aac>
   151c8:	ldr	r0, [fp, #-8]
   151cc:	ldr	r0, [r0, #48]	; 0x30
   151d0:	and	r0, r0, #2
   151d4:	cmp	r0, #0
   151d8:	bne	15204 <__assert_fail@plt+0x3990>
   151dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   151e0:	movw	r1, #0
   151e4:	cmp	r0, r1
   151e8:	beq	15298 <__assert_fail@plt+0x3a24>
   151ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   151f0:	movw	r1, #16314	; 0x3fba
   151f4:	movt	r1, #2
   151f8:	bl	114d8 <strcmp@plt>
   151fc:	cmp	r0, #0
   15200:	bne	15298 <__assert_fail@plt+0x3a24>
   15204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15208:	add	r1, sp, #16
   1520c:	bl	2319c <__assert_fail@plt+0x11928>
   15210:	cmp	r0, #0
   15214:	beq	15224 <__assert_fail@plt+0x39b0>
   15218:	mvn	r0, #0
   1521c:	str	r0, [fp, #-24]	; 0xffffffe8
   15220:	b	152e0 <__assert_fail@plt+0x3a6c>
   15224:	ldr	r0, [fp, #-12]
   15228:	ldr	r1, [r0, #64]	; 0x40
   1522c:	ldr	r0, [r0, #68]	; 0x44
   15230:	ldr	r2, [sp, #16]
   15234:	ldr	r3, [sp, #20]
   15238:	eor	r0, r0, r3
   1523c:	eor	r1, r1, r2
   15240:	orr	r0, r1, r0
   15244:	cmp	r0, #0
   15248:	bne	1527c <__assert_fail@plt+0x3a08>
   1524c:	b	15250 <__assert_fail@plt+0x39dc>
   15250:	ldr	r0, [fp, #-12]
   15254:	ldr	r1, [r0, #160]	; 0xa0
   15258:	ldr	r0, [r0, #164]	; 0xa4
   1525c:	ldr	r2, [sp, #112]	; 0x70
   15260:	ldr	r3, [sp, #116]	; 0x74
   15264:	eor	r0, r0, r3
   15268:	eor	r1, r1, r2
   1526c:	orr	r0, r1, r0
   15270:	cmp	r0, #0
   15274:	beq	15294 <__assert_fail@plt+0x3a20>
   15278:	b	1527c <__assert_fail@plt+0x3a08>
   1527c:	bl	11700 <__errno_location@plt>
   15280:	movw	r1, #2
   15284:	str	r1, [r0]
   15288:	mvn	r0, #0
   1528c:	str	r0, [fp, #-24]	; 0xffffffe8
   15290:	b	152e0 <__assert_fail@plt+0x3a6c>
   15294:	b	15298 <__assert_fail@plt+0x3a24>
   15298:	ldr	r0, [fp, #-8]
   1529c:	ldr	r0, [r0, #48]	; 0x30
   152a0:	and	r0, r0, #512	; 0x200
   152a4:	cmp	r0, #0
   152a8:	beq	152d4 <__assert_fail@plt+0x3a60>
   152ac:	ldr	r0, [fp, #-8]
   152b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   152b4:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   152b8:	mvn	r3, #0
   152bc:	eor	r2, r2, r3
   152c0:	and	r2, r2, #1
   152c4:	bl	16340 <__assert_fail@plt+0x4acc>
   152c8:	movw	r0, #0
   152cc:	str	r0, [fp, #-4]
   152d0:	b	15320 <__assert_fail@plt+0x3aac>
   152d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152d8:	bl	117cc <fchdir@plt>
   152dc:	str	r0, [fp, #-24]	; 0xffffffe8
   152e0:	ldr	r0, [fp, #-16]
   152e4:	cmp	r0, #0
   152e8:	bge	15318 <__assert_fail@plt+0x3aa4>
   152ec:	bl	11700 <__errno_location@plt>
   152f0:	ldr	r0, [r0]
   152f4:	str	r0, [sp, #12]
   152f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152fc:	bl	11844 <close@plt>
   15300:	ldr	r1, [sp, #12]
   15304:	str	r0, [sp, #4]
   15308:	str	r1, [sp]
   1530c:	bl	11700 <__errno_location@plt>
   15310:	ldr	r1, [sp]
   15314:	str	r1, [r0]
   15318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1531c:	str	r0, [fp, #-4]
   15320:	ldr	r0, [fp, #-4]
   15324:	mov	sp, fp
   15328:	pop	{fp, pc}
   1532c:	push	{fp, lr}
   15330:	mov	fp, sp
   15334:	sub	sp, sp, #152	; 0x98
   15338:	str	r0, [fp, #-8]
   1533c:	str	r1, [fp, #-12]
   15340:	ldr	r0, [fp, #-8]
   15344:	ldr	r0, [r0]
   15348:	str	r0, [fp, #-68]	; 0xffffffbc
   1534c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15350:	ldr	r0, [r0, #12]
   15354:	movw	r1, #0
   15358:	cmp	r0, r1
   1535c:	movw	r0, #0
   15360:	movne	r0, #1
   15364:	mvn	r1, #0
   15368:	eor	r0, r0, r1
   1536c:	eor	r0, r0, r1
   15370:	and	r0, r0, #1
   15374:	strb	r0, [fp, #-69]	; 0xffffffbb
   15378:	movw	r0, #0
   1537c:	strb	r0, [fp, #-70]	; 0xffffffba
   15380:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15384:	tst	r0, #1
   15388:	beq	15404 <__assert_fail@plt+0x3b90>
   1538c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15390:	ldr	r0, [r0, #12]
   15394:	str	r0, [sp, #72]	; 0x48
   15398:	ldr	r0, [sp, #72]	; 0x48
   1539c:	bl	117c0 <dirfd@plt>
   153a0:	str	r0, [fp, #-64]	; 0xffffffc0
   153a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   153a8:	cmp	r0, #0
   153ac:	bge	15400 <__assert_fail@plt+0x3b8c>
   153b0:	b	153b4 <__assert_fail@plt+0x3b40>
   153b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   153b8:	ldr	r0, [r0, #12]
   153bc:	bl	1185c <closedir@plt>
   153c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   153c4:	movw	r2, #0
   153c8:	str	r2, [r1, #12]
   153cc:	ldr	r0, [fp, #-12]
   153d0:	cmp	r0, #3
   153d4:	bne	153f4 <__assert_fail@plt+0x3b80>
   153d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   153dc:	movw	r1, #4
   153e0:	strh	r1, [r0, #56]	; 0x38
   153e4:	bl	11700 <__errno_location@plt>
   153e8:	ldr	r0, [r0]
   153ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   153f0:	str	r0, [r1, #32]
   153f4:	movw	r0, #0
   153f8:	str	r0, [fp, #-4]
   153fc:	b	15fe0 <__assert_fail@plt+0x476c>
   15400:	b	155dc <__assert_fail@plt+0x3d68>
   15404:	ldr	r0, [fp, #-8]
   15408:	ldr	r0, [r0, #48]	; 0x30
   1540c:	and	r0, r0, #4
   15410:	cmp	r0, #0
   15414:	bne	1543c <__assert_fail@plt+0x3bc8>
   15418:	ldr	r0, [fp, #-8]
   1541c:	ldr	r0, [r0, #48]	; 0x30
   15420:	and	r0, r0, #512	; 0x200
   15424:	cmp	r0, #0
   15428:	beq	1543c <__assert_fail@plt+0x3bc8>
   1542c:	ldr	r0, [fp, #-8]
   15430:	ldr	r0, [r0, #32]
   15434:	str	r0, [sp, #56]	; 0x38
   15438:	b	15448 <__assert_fail@plt+0x3bd4>
   1543c:	mvn	r0, #99	; 0x63
   15440:	str	r0, [sp, #56]	; 0x38
   15444:	b	15448 <__assert_fail@plt+0x3bd4>
   15448:	ldr	r0, [sp, #56]	; 0x38
   1544c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15450:	ldr	r1, [r1, #24]
   15454:	ldr	r2, [fp, #-8]
   15458:	ldr	r2, [r2, #48]	; 0x30
   1545c:	and	r2, r2, #16
   15460:	cmp	r2, #0
   15464:	movw	r2, #0
   15468:	str	r0, [sp, #52]	; 0x34
   1546c:	str	r1, [sp, #48]	; 0x30
   15470:	str	r2, [sp, #44]	; 0x2c
   15474:	beq	154bc <__assert_fail@plt+0x3c48>
   15478:	ldr	r0, [fp, #-8]
   1547c:	ldr	r0, [r0, #48]	; 0x30
   15480:	and	r0, r0, #1
   15484:	cmp	r0, #0
   15488:	movw	r0, #0
   1548c:	str	r0, [sp, #40]	; 0x28
   15490:	beq	154ac <__assert_fail@plt+0x3c38>
   15494:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15498:	ldr	r0, [r0, #48]	; 0x30
   1549c:	cmp	r0, #0
   154a0:	movw	r0, #0
   154a4:	moveq	r0, #1
   154a8:	str	r0, [sp, #40]	; 0x28
   154ac:	ldr	r0, [sp, #40]	; 0x28
   154b0:	mvn	r1, #0
   154b4:	eor	r0, r0, r1
   154b8:	str	r0, [sp, #44]	; 0x2c
   154bc:	ldr	r0, [sp, #44]	; 0x2c
   154c0:	tst	r0, #1
   154c4:	movw	r0, #32768	; 0x8000
   154c8:	moveq	r0, #0
   154cc:	ldr	r1, [sp, #52]	; 0x34
   154d0:	str	r0, [sp, #36]	; 0x24
   154d4:	mov	r0, r1
   154d8:	ldr	r1, [sp, #48]	; 0x30
   154dc:	ldr	r2, [sp, #36]	; 0x24
   154e0:	sub	r3, fp, #64	; 0x40
   154e4:	bl	18d08 <__assert_fail@plt+0x7494>
   154e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   154ec:	str	r0, [r1, #12]
   154f0:	movw	r1, #0
   154f4:	cmp	r0, r1
   154f8:	bne	15530 <__assert_fail@plt+0x3cbc>
   154fc:	ldr	r0, [fp, #-12]
   15500:	cmp	r0, #3
   15504:	bne	15524 <__assert_fail@plt+0x3cb0>
   15508:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1550c:	movw	r1, #4
   15510:	strh	r1, [r0, #56]	; 0x38
   15514:	bl	11700 <__errno_location@plt>
   15518:	ldr	r0, [r0]
   1551c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15520:	str	r0, [r1, #32]
   15524:	movw	r0, #0
   15528:	str	r0, [fp, #-4]
   1552c:	b	15fe0 <__assert_fail@plt+0x476c>
   15530:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15534:	ldrh	r0, [r0, #56]	; 0x38
   15538:	cmp	r0, #11
   1553c:	bne	15560 <__assert_fail@plt+0x3cec>
   15540:	ldr	r0, [fp, #-8]
   15544:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15548:	movw	r2, #0
   1554c:	and	r2, r2, #1
   15550:	bl	13c70 <__assert_fail@plt+0x23fc>
   15554:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15558:	strh	r0, [r1, #56]	; 0x38
   1555c:	b	155d8 <__assert_fail@plt+0x3d64>
   15560:	ldr	r0, [fp, #-8]
   15564:	ldr	r0, [r0, #48]	; 0x30
   15568:	and	r0, r0, #256	; 0x100
   1556c:	cmp	r0, #0
   15570:	beq	155d4 <__assert_fail@plt+0x3d60>
   15574:	b	15578 <__assert_fail@plt+0x3d04>
   15578:	ldr	r0, [fp, #-8]
   1557c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15580:	bl	14ecc <__assert_fail@plt+0x3658>
   15584:	ldr	r0, [fp, #-8]
   15588:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1558c:	movw	r2, #0
   15590:	and	r2, r2, #1
   15594:	bl	13c70 <__assert_fail@plt+0x23fc>
   15598:	ldr	r1, [fp, #-8]
   1559c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   155a0:	str	r0, [sp, #32]
   155a4:	mov	r0, r1
   155a8:	mov	r1, r2
   155ac:	bl	161e0 <__assert_fail@plt+0x496c>
   155b0:	tst	r0, #1
   155b4:	bne	155d0 <__assert_fail@plt+0x3d5c>
   155b8:	bl	11700 <__errno_location@plt>
   155bc:	movw	r1, #12
   155c0:	str	r1, [r0]
   155c4:	movw	r0, #0
   155c8:	str	r0, [fp, #-4]
   155cc:	b	15fe0 <__assert_fail@plt+0x476c>
   155d0:	b	155d4 <__assert_fail@plt+0x3d60>
   155d4:	b	155d8 <__assert_fail@plt+0x3d64>
   155d8:	b	155dc <__assert_fail@plt+0x3d68>
   155dc:	ldr	r0, [pc, #2568]	; 15fec <__assert_fail@plt+0x4778>
   155e0:	ldr	r1, [fp, #-8]
   155e4:	ldr	r1, [r1, #44]	; 0x2c
   155e8:	movw	r2, #0
   155ec:	cmp	r1, r2
   155f0:	movw	r1, #0
   155f4:	movne	r1, #1
   155f8:	tst	r1, #1
   155fc:	mvn	r1, #0
   15600:	movne	r0, r1
   15604:	str	r0, [sp, #76]	; 0x4c
   15608:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   1560c:	tst	r0, #1
   15610:	beq	15620 <__assert_fail@plt+0x3dac>
   15614:	movw	r0, #1
   15618:	strb	r0, [fp, #-37]	; 0xffffffdb
   1561c:	b	157e4 <__assert_fail@plt+0x3f70>
   15620:	ldr	r0, [fp, #-12]
   15624:	cmp	r0, #2
   15628:	movw	r0, #0
   1562c:	str	r0, [sp, #28]
   15630:	beq	156cc <__assert_fail@plt+0x3e58>
   15634:	ldr	r0, [fp, #-8]
   15638:	ldr	r0, [r0, #48]	; 0x30
   1563c:	and	r0, r0, #8
   15640:	cmp	r0, #0
   15644:	movw	r0, #0
   15648:	str	r0, [sp, #24]
   1564c:	beq	156bc <__assert_fail@plt+0x3e48>
   15650:	ldr	r0, [fp, #-8]
   15654:	ldr	r0, [r0, #48]	; 0x30
   15658:	and	r0, r0, #16
   1565c:	cmp	r0, #0
   15660:	movw	r0, #0
   15664:	str	r0, [sp, #24]
   15668:	beq	156bc <__assert_fail@plt+0x3e48>
   1566c:	ldr	r0, [fp, #-8]
   15670:	ldr	r0, [r0, #48]	; 0x30
   15674:	and	r0, r0, #32
   15678:	cmp	r0, #0
   1567c:	movw	r0, #0
   15680:	str	r0, [sp, #24]
   15684:	bne	156bc <__assert_fail@plt+0x3e48>
   15688:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1568c:	ldr	r0, [r0, #84]	; 0x54
   15690:	cmp	r0, #2
   15694:	movw	r0, #0
   15698:	str	r0, [sp, #24]
   1569c:	bne	156bc <__assert_fail@plt+0x3e48>
   156a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   156a4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   156a8:	bl	167b4 <__assert_fail@plt+0x4f40>
   156ac:	cmp	r0, #0
   156b0:	movw	r0, #0
   156b4:	movne	r0, #1
   156b8:	str	r0, [sp, #24]
   156bc:	ldr	r0, [sp, #24]
   156c0:	mvn	r1, #0
   156c4:	eor	r0, r0, r1
   156c8:	str	r0, [sp, #28]
   156cc:	ldr	r0, [sp, #28]
   156d0:	and	r0, r0, #1
   156d4:	strb	r0, [fp, #-37]	; 0xffffffdb
   156d8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   156dc:	tst	r0, #1
   156e0:	bne	156f0 <__assert_fail@plt+0x3e7c>
   156e4:	ldr	r0, [fp, #-12]
   156e8:	cmp	r0, #3
   156ec:	bne	157e0 <__assert_fail@plt+0x3f6c>
   156f0:	ldr	r0, [fp, #-8]
   156f4:	ldr	r0, [r0, #48]	; 0x30
   156f8:	and	r0, r0, #512	; 0x200
   156fc:	cmp	r0, #0
   15700:	beq	15718 <__assert_fail@plt+0x3ea4>
   15704:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15708:	movw	r1, #1030	; 0x406
   1570c:	movw	r2, #3
   15710:	bl	20320 <__assert_fail@plt+0xeaac>
   15714:	str	r0, [fp, #-64]	; 0xffffffc0
   15718:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1571c:	cmp	r0, #0
   15720:	blt	15740 <__assert_fail@plt+0x3ecc>
   15724:	ldr	r0, [fp, #-8]
   15728:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1572c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15730:	movw	r3, #0
   15734:	bl	1506c <__assert_fail@plt+0x37f8>
   15738:	cmp	r0, #0
   1573c:	beq	157d4 <__assert_fail@plt+0x3f60>
   15740:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15744:	tst	r0, #1
   15748:	beq	15768 <__assert_fail@plt+0x3ef4>
   1574c:	ldr	r0, [fp, #-12]
   15750:	cmp	r0, #3
   15754:	bne	15768 <__assert_fail@plt+0x3ef4>
   15758:	bl	11700 <__errno_location@plt>
   1575c:	ldr	r0, [r0]
   15760:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15764:	str	r0, [r1, #32]
   15768:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1576c:	ldrh	r1, [r0, #58]	; 0x3a
   15770:	orr	r1, r1, #1
   15774:	strh	r1, [r0, #58]	; 0x3a
   15778:	movw	r0, #0
   1577c:	strb	r0, [fp, #-37]	; 0xffffffdb
   15780:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15784:	ldr	r0, [r0, #12]
   15788:	bl	1185c <closedir@plt>
   1578c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15790:	movw	r2, #0
   15794:	str	r2, [r1, #12]
   15798:	ldr	r0, [fp, #-8]
   1579c:	ldr	r0, [r0, #48]	; 0x30
   157a0:	and	r0, r0, #512	; 0x200
   157a4:	cmp	r0, #0
   157a8:	beq	157c4 <__assert_fail@plt+0x3f50>
   157ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   157b0:	movw	r1, #0
   157b4:	cmp	r1, r0
   157b8:	bgt	157c4 <__assert_fail@plt+0x3f50>
   157bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   157c0:	bl	11844 <close@plt>
   157c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   157c8:	movw	r1, #0
   157cc:	str	r1, [r0, #12]
   157d0:	b	157dc <__assert_fail@plt+0x3f68>
   157d4:	movw	r0, #1
   157d8:	strb	r0, [fp, #-37]	; 0xffffffdb
   157dc:	b	157e0 <__assert_fail@plt+0x3f6c>
   157e0:	b	157e4 <__assert_fail@plt+0x3f70>
   157e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   157e8:	ldr	r0, [r0, #28]
   157ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   157f0:	ldr	r1, [r1, #40]	; 0x28
   157f4:	sub	r1, r1, #1
   157f8:	add	r0, r0, r1
   157fc:	ldrb	r0, [r0]
   15800:	cmp	r0, #47	; 0x2f
   15804:	bne	1581c <__assert_fail@plt+0x3fa8>
   15808:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1580c:	ldr	r0, [r0, #40]	; 0x28
   15810:	sub	r0, r0, #1
   15814:	str	r0, [sp, #20]
   15818:	b	15828 <__assert_fail@plt+0x3fb4>
   1581c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15820:	ldr	r0, [r0, #40]	; 0x28
   15824:	str	r0, [sp, #20]
   15828:	ldr	r0, [sp, #20]
   1582c:	str	r0, [fp, #-48]	; 0xffffffd0
   15830:	ldr	r0, [fp, #-8]
   15834:	ldr	r0, [r0, #48]	; 0x30
   15838:	and	r0, r0, #4
   1583c:	cmp	r0, #0
   15840:	beq	15870 <__assert_fail@plt+0x3ffc>
   15844:	ldr	r0, [fp, #-8]
   15848:	ldr	r0, [r0, #24]
   1584c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15850:	add	r0, r0, r1
   15854:	str	r0, [fp, #-60]	; 0xffffffc4
   15858:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1585c:	add	r1, r0, #1
   15860:	str	r1, [fp, #-60]	; 0xffffffc4
   15864:	movw	r1, #47	; 0x2f
   15868:	strb	r1, [r0]
   1586c:	b	15878 <__assert_fail@plt+0x4004>
   15870:	movw	r0, #0
   15874:	str	r0, [fp, #-60]	; 0xffffffc4
   15878:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1587c:	add	r0, r0, #1
   15880:	str	r0, [fp, #-48]	; 0xffffffd0
   15884:	ldr	r0, [fp, #-8]
   15888:	ldr	r0, [r0, #36]	; 0x24
   1588c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15890:	sub	r0, r0, r1
   15894:	str	r0, [fp, #-52]	; 0xffffffcc
   15898:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1589c:	ldr	r0, [r0, #48]	; 0x30
   158a0:	add	r0, r0, #1
   158a4:	str	r0, [fp, #-44]	; 0xffffffd4
   158a8:	movw	r0, #0
   158ac:	strb	r0, [fp, #-38]	; 0xffffffda
   158b0:	movw	r0, #0
   158b4:	str	r0, [fp, #-20]	; 0xffffffec
   158b8:	str	r0, [fp, #-28]	; 0xffffffe4
   158bc:	str	r0, [fp, #-24]	; 0xffffffe8
   158c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158c4:	ldr	r0, [r0, #12]
   158c8:	movw	r1, #0
   158cc:	cmp	r0, r1
   158d0:	beq	15dc8 <__assert_fail@plt+0x4554>
   158d4:	bl	11700 <__errno_location@plt>
   158d8:	movw	r1, #0
   158dc:	str	r1, [r0]
   158e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   158e4:	ldr	r0, [r0, #12]
   158e8:	bl	117a8 <readdir64@plt>
   158ec:	str	r0, [sp, #64]	; 0x40
   158f0:	ldr	r0, [sp, #64]	; 0x40
   158f4:	movw	r1, #0
   158f8:	cmp	r0, r1
   158fc:	bne	15964 <__assert_fail@plt+0x40f0>
   15900:	bl	11700 <__errno_location@plt>
   15904:	ldr	r0, [r0]
   15908:	cmp	r0, #0
   1590c:	beq	15960 <__assert_fail@plt+0x40ec>
   15910:	bl	11700 <__errno_location@plt>
   15914:	ldr	r0, [r0]
   15918:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1591c:	str	r0, [r1, #32]
   15920:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15924:	tst	r0, #1
   15928:	movw	r0, #1
   1592c:	str	r0, [sp, #16]
   15930:	bne	15948 <__assert_fail@plt+0x40d4>
   15934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15938:	cmp	r0, #0
   1593c:	movw	r0, #0
   15940:	movne	r0, #1
   15944:	str	r0, [sp, #16]
   15948:	ldr	r0, [sp, #16]
   1594c:	tst	r0, #1
   15950:	movw	r0, #7
   15954:	moveq	r0, #4
   15958:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1595c:	strh	r0, [r1, #56]	; 0x38
   15960:	b	15dc8 <__assert_fail@plt+0x4554>
   15964:	ldr	r0, [fp, #-8]
   15968:	ldr	r0, [r0, #48]	; 0x30
   1596c:	and	r0, r0, #32
   15970:	cmp	r0, #0
   15974:	bne	159bc <__assert_fail@plt+0x4148>
   15978:	ldr	r0, [sp, #64]	; 0x40
   1597c:	ldrb	r0, [r0, #19]
   15980:	cmp	r0, #46	; 0x2e
   15984:	bne	159bc <__assert_fail@plt+0x4148>
   15988:	ldr	r0, [sp, #64]	; 0x40
   1598c:	ldrsb	r0, [r0, #20]
   15990:	cmp	r0, #0
   15994:	beq	159b8 <__assert_fail@plt+0x4144>
   15998:	ldr	r0, [sp, #64]	; 0x40
   1599c:	ldrb	r0, [r0, #20]
   159a0:	cmp	r0, #46	; 0x2e
   159a4:	bne	159bc <__assert_fail@plt+0x4148>
   159a8:	ldr	r0, [sp, #64]	; 0x40
   159ac:	ldrsb	r0, [r0, #21]
   159b0:	cmp	r0, #0
   159b4:	bne	159bc <__assert_fail@plt+0x4148>
   159b8:	b	158c0 <__assert_fail@plt+0x404c>
   159bc:	ldr	r0, [sp, #64]	; 0x40
   159c0:	add	r0, r0, #19
   159c4:	bl	116d0 <strlen@plt>
   159c8:	str	r0, [sp, #68]	; 0x44
   159cc:	ldr	r0, [fp, #-8]
   159d0:	ldr	r1, [sp, #64]	; 0x40
   159d4:	add	r1, r1, #19
   159d8:	ldr	r2, [sp, #68]	; 0x44
   159dc:	bl	13b20 <__assert_fail@plt+0x22ac>
   159e0:	str	r0, [fp, #-16]
   159e4:	ldr	r0, [fp, #-16]
   159e8:	movw	r1, #0
   159ec:	cmp	r0, r1
   159f0:	bne	159f8 <__assert_fail@plt+0x4184>
   159f4:	b	15a38 <__assert_fail@plt+0x41c4>
   159f8:	ldr	r0, [sp, #68]	; 0x44
   159fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15a00:	cmp	r0, r1
   15a04:	bcc	15b04 <__assert_fail@plt+0x4290>
   15a08:	ldr	r0, [fp, #-8]
   15a0c:	ldr	r0, [r0, #24]
   15a10:	str	r0, [fp, #-32]	; 0xffffffe0
   15a14:	ldr	r0, [fp, #-8]
   15a18:	ldr	r1, [sp, #68]	; 0x44
   15a1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15a20:	add	r1, r1, r2
   15a24:	add	r1, r1, #1
   15a28:	bl	13a28 <__assert_fail@plt+0x21b4>
   15a2c:	tst	r0, #1
   15a30:	bne	15aa8 <__assert_fail@plt+0x4234>
   15a34:	b	15a38 <__assert_fail@plt+0x41c4>
   15a38:	bl	11700 <__errno_location@plt>
   15a3c:	ldr	r0, [r0]
   15a40:	str	r0, [fp, #-36]	; 0xffffffdc
   15a44:	ldr	r0, [fp, #-16]
   15a48:	bl	2082c <__assert_fail@plt+0xefb8>
   15a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15a50:	bl	141c8 <__assert_fail@plt+0x2954>
   15a54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a58:	ldr	r0, [r0, #12]
   15a5c:	bl	1185c <closedir@plt>
   15a60:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a64:	movw	r2, #0
   15a68:	str	r2, [r1, #12]
   15a6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a70:	movw	r1, #7
   15a74:	strh	r1, [r0, #56]	; 0x38
   15a78:	ldr	r0, [fp, #-8]
   15a7c:	ldr	r1, [r0, #48]	; 0x30
   15a80:	orr	r1, r1, #8192	; 0x2000
   15a84:	str	r1, [r0, #48]	; 0x30
   15a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15a8c:	str	r0, [sp, #12]
   15a90:	bl	11700 <__errno_location@plt>
   15a94:	ldr	r1, [sp, #12]
   15a98:	str	r1, [r0]
   15a9c:	movw	r0, #0
   15aa0:	str	r0, [fp, #-4]
   15aa4:	b	15fe0 <__assert_fail@plt+0x476c>
   15aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15aac:	ldr	r1, [fp, #-8]
   15ab0:	ldr	r1, [r1, #24]
   15ab4:	cmp	r0, r1
   15ab8:	beq	15af0 <__assert_fail@plt+0x427c>
   15abc:	movw	r0, #1
   15ac0:	strb	r0, [fp, #-38]	; 0xffffffda
   15ac4:	ldr	r0, [fp, #-8]
   15ac8:	ldr	r0, [r0, #48]	; 0x30
   15acc:	and	r0, r0, #4
   15ad0:	cmp	r0, #0
   15ad4:	beq	15aec <__assert_fail@plt+0x4278>
   15ad8:	ldr	r0, [fp, #-8]
   15adc:	ldr	r0, [r0, #24]
   15ae0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15ae4:	add	r0, r0, r1
   15ae8:	str	r0, [fp, #-60]	; 0xffffffc4
   15aec:	b	15af0 <__assert_fail@plt+0x427c>
   15af0:	ldr	r0, [fp, #-8]
   15af4:	ldr	r0, [r0, #36]	; 0x24
   15af8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15afc:	sub	r0, r0, r1
   15b00:	str	r0, [fp, #-52]	; 0xffffffcc
   15b04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b08:	ldr	r1, [sp, #68]	; 0x44
   15b0c:	add	r0, r0, r1
   15b10:	str	r0, [fp, #-56]	; 0xffffffc8
   15b14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b18:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15b1c:	cmp	r0, r1
   15b20:	bcs	15b80 <__assert_fail@plt+0x430c>
   15b24:	ldr	r0, [fp, #-16]
   15b28:	bl	2082c <__assert_fail@plt+0xefb8>
   15b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b30:	bl	141c8 <__assert_fail@plt+0x2954>
   15b34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b38:	ldr	r0, [r0, #12]
   15b3c:	bl	1185c <closedir@plt>
   15b40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b44:	movw	r2, #0
   15b48:	str	r2, [r1, #12]
   15b4c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b50:	movw	r1, #7
   15b54:	strh	r1, [r0, #56]	; 0x38
   15b58:	ldr	r0, [fp, #-8]
   15b5c:	ldr	r1, [r0, #48]	; 0x30
   15b60:	orr	r1, r1, #8192	; 0x2000
   15b64:	str	r1, [r0, #48]	; 0x30
   15b68:	bl	11700 <__errno_location@plt>
   15b6c:	movw	r1, #36	; 0x24
   15b70:	str	r1, [r0]
   15b74:	movw	r0, #0
   15b78:	str	r0, [fp, #-4]
   15b7c:	b	15fe0 <__assert_fail@plt+0x476c>
   15b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b84:	ldr	r1, [fp, #-16]
   15b88:	str	r0, [r1, #48]	; 0x30
   15b8c:	ldr	r0, [fp, #-8]
   15b90:	ldr	r0, [r0]
   15b94:	ldr	r1, [fp, #-16]
   15b98:	str	r0, [r1, #4]
   15b9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ba0:	ldr	r1, [fp, #-16]
   15ba4:	str	r0, [r1, #40]	; 0x28
   15ba8:	ldr	r0, [sp, #64]	; 0x40
   15bac:	ldr	r1, [r0]
   15bb0:	ldr	r0, [r0, #4]
   15bb4:	ldr	r2, [fp, #-16]
   15bb8:	str	r0, [r2, #164]	; 0xa4
   15bbc:	str	r1, [r2, #160]	; 0xa0
   15bc0:	ldr	r0, [fp, #-8]
   15bc4:	ldr	r0, [r0, #48]	; 0x30
   15bc8:	and	r0, r0, #4
   15bcc:	cmp	r0, #0
   15bd0:	beq	15c04 <__assert_fail@plt+0x4390>
   15bd4:	ldr	r0, [fp, #-16]
   15bd8:	ldr	r0, [r0, #28]
   15bdc:	ldr	r1, [fp, #-16]
   15be0:	str	r0, [r1, #24]
   15be4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15be8:	ldr	r1, [fp, #-16]
   15bec:	add	r1, r1, #168	; 0xa8
   15bf0:	ldr	r2, [fp, #-16]
   15bf4:	ldr	r2, [r2, #52]	; 0x34
   15bf8:	add	r2, r2, #1
   15bfc:	bl	11508 <memmove@plt>
   15c00:	b	15c14 <__assert_fail@plt+0x43a0>
   15c04:	ldr	r0, [fp, #-16]
   15c08:	add	r0, r0, #168	; 0xa8
   15c0c:	ldr	r1, [fp, #-16]
   15c10:	str	r0, [r1, #24]
   15c14:	ldr	r0, [fp, #-8]
   15c18:	ldr	r0, [r0, #44]	; 0x2c
   15c1c:	movw	r1, #0
   15c20:	cmp	r0, r1
   15c24:	beq	15c3c <__assert_fail@plt+0x43c8>
   15c28:	ldr	r0, [fp, #-8]
   15c2c:	ldr	r0, [r0, #48]	; 0x30
   15c30:	and	r0, r0, #1024	; 0x400
   15c34:	cmp	r0, #0
   15c38:	beq	15d14 <__assert_fail@plt+0x44a0>
   15c3c:	ldr	r0, [fp, #-8]
   15c40:	ldr	r0, [r0, #48]	; 0x30
   15c44:	and	r0, r0, #8
   15c48:	cmp	r0, #0
   15c4c:	movw	r0, #0
   15c50:	str	r0, [sp, #8]
   15c54:	beq	15ccc <__assert_fail@plt+0x4458>
   15c58:	ldr	r0, [sp, #64]	; 0x40
   15c5c:	ldrb	r0, [r0, #18]
   15c60:	cmp	r0, #0
   15c64:	movw	r0, #0
   15c68:	str	r0, [sp, #8]
   15c6c:	beq	15ccc <__assert_fail@plt+0x4458>
   15c70:	ldr	r0, [sp, #64]	; 0x40
   15c74:	ldrb	r0, [r0, #18]
   15c78:	cmp	r0, #4
   15c7c:	movw	r0, #0
   15c80:	str	r0, [sp, #8]
   15c84:	beq	15ccc <__assert_fail@plt+0x4458>
   15c88:	ldr	r0, [fp, #-8]
   15c8c:	ldr	r0, [r0, #48]	; 0x30
   15c90:	and	r0, r0, #16
   15c94:	cmp	r0, #0
   15c98:	movw	r0, #1
   15c9c:	str	r0, [sp, #4]
   15ca0:	bne	15cc4 <__assert_fail@plt+0x4450>
   15ca4:	ldr	r0, [sp, #64]	; 0x40
   15ca8:	ldrb	r0, [r0, #18]
   15cac:	cmp	r0, #10
   15cb0:	movw	r0, #0
   15cb4:	moveq	r0, #1
   15cb8:	mvn	r1, #0
   15cbc:	eor	r0, r0, r1
   15cc0:	str	r0, [sp, #4]
   15cc4:	ldr	r0, [sp, #4]
   15cc8:	str	r0, [sp, #8]
   15ccc:	ldr	r0, [sp, #8]
   15cd0:	and	r0, r0, #1
   15cd4:	strb	r0, [sp, #63]	; 0x3f
   15cd8:	ldr	r0, [fp, #-16]
   15cdc:	movw	r1, #11
   15ce0:	strh	r1, [r0, #56]	; 0x38
   15ce4:	ldr	r0, [fp, #-16]
   15ce8:	add	r0, r0, #64	; 0x40
   15cec:	ldr	r1, [sp, #64]	; 0x40
   15cf0:	ldrb	r1, [r1, #18]
   15cf4:	bl	16870 <__assert_fail@plt+0x4ffc>
   15cf8:	ldr	r0, [fp, #-16]
   15cfc:	ldrb	r1, [sp, #63]	; 0x3f
   15d00:	mvn	r2, #0
   15d04:	eor	r1, r1, r2
   15d08:	and	r1, r1, #1
   15d0c:	bl	13c18 <__assert_fail@plt+0x23a4>
   15d10:	b	15d30 <__assert_fail@plt+0x44bc>
   15d14:	ldr	r0, [fp, #-8]
   15d18:	ldr	r1, [fp, #-16]
   15d1c:	movw	r2, #0
   15d20:	and	r2, r2, #1
   15d24:	bl	13c70 <__assert_fail@plt+0x23fc>
   15d28:	ldr	r1, [fp, #-16]
   15d2c:	strh	r0, [r1, #56]	; 0x38
   15d30:	ldr	r0, [fp, #-16]
   15d34:	movw	r1, #0
   15d38:	str	r1, [r0, #8]
   15d3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d40:	cmp	r0, r1
   15d44:	bne	15d58 <__assert_fail@plt+0x44e4>
   15d48:	ldr	r0, [fp, #-16]
   15d4c:	str	r0, [fp, #-28]	; 0xffffffe4
   15d50:	str	r0, [fp, #-20]	; 0xffffffec
   15d54:	b	15d6c <__assert_fail@plt+0x44f8>
   15d58:	ldr	r0, [fp, #-16]
   15d5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d60:	str	r0, [r1, #8]
   15d64:	ldr	r0, [fp, #-16]
   15d68:	str	r0, [fp, #-28]	; 0xffffffe4
   15d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d70:	movw	r1, #10000	; 0x2710
   15d74:	cmp	r0, r1
   15d78:	bne	15da4 <__assert_fail@plt+0x4530>
   15d7c:	ldr	r0, [fp, #-8]
   15d80:	ldr	r0, [r0, #44]	; 0x2c
   15d84:	movw	r1, #0
   15d88:	cmp	r0, r1
   15d8c:	bne	15da4 <__assert_fail@plt+0x4530>
   15d90:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d94:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15d98:	bl	16940 <__assert_fail@plt+0x50cc>
   15d9c:	and	r0, r0, #1
   15da0:	strb	r0, [fp, #-70]	; 0xffffffba
   15da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15da8:	add	r0, r0, #1
   15dac:	str	r0, [fp, #-24]	; 0xffffffe8
   15db0:	ldr	r0, [sp, #76]	; 0x4c
   15db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15db8:	cmp	r0, r1
   15dbc:	bhi	15dc4 <__assert_fail@plt+0x4550>
   15dc0:	b	15e00 <__assert_fail@plt+0x458c>
   15dc4:	b	158c0 <__assert_fail@plt+0x404c>
   15dc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15dcc:	ldr	r0, [r0, #12]
   15dd0:	movw	r1, #0
   15dd4:	cmp	r0, r1
   15dd8:	beq	15dfc <__assert_fail@plt+0x4588>
   15ddc:	b	15de0 <__assert_fail@plt+0x456c>
   15de0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15de4:	ldr	r0, [r0, #12]
   15de8:	bl	1185c <closedir@plt>
   15dec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15df0:	movw	r2, #0
   15df4:	str	r2, [r1, #12]
   15df8:	b	15dfc <__assert_fail@plt+0x4588>
   15dfc:	b	15e00 <__assert_fail@plt+0x458c>
   15e00:	ldrb	r0, [fp, #-38]	; 0xffffffda
   15e04:	tst	r0, #1
   15e08:	beq	15e18 <__assert_fail@plt+0x45a4>
   15e0c:	ldr	r0, [fp, #-8]
   15e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e14:	bl	169d4 <__assert_fail@plt+0x5160>
   15e18:	ldr	r0, [fp, #-8]
   15e1c:	ldr	r0, [r0, #48]	; 0x30
   15e20:	and	r0, r0, #4
   15e24:	cmp	r0, #0
   15e28:	beq	15e68 <__assert_fail@plt+0x45f4>
   15e2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e30:	ldr	r1, [fp, #-8]
   15e34:	ldr	r1, [r1, #36]	; 0x24
   15e38:	cmp	r0, r1
   15e3c:	beq	15e4c <__assert_fail@plt+0x45d8>
   15e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e44:	cmp	r0, #0
   15e48:	bne	15e5c <__assert_fail@plt+0x45e8>
   15e4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15e50:	mvn	r1, #0
   15e54:	add	r0, r0, r1
   15e58:	str	r0, [fp, #-60]	; 0xffffffc4
   15e5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15e60:	movw	r1, #0
   15e64:	strb	r1, [r0]
   15e68:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15e6c:	tst	r0, #1
   15e70:	bne	15f10 <__assert_fail@plt+0x469c>
   15e74:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15e78:	tst	r0, #1
   15e7c:	beq	15f10 <__assert_fail@plt+0x469c>
   15e80:	ldr	r0, [fp, #-12]
   15e84:	cmp	r0, #1
   15e88:	beq	15e98 <__assert_fail@plt+0x4624>
   15e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e90:	cmp	r0, #0
   15e94:	bne	15f10 <__assert_fail@plt+0x469c>
   15e98:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e9c:	ldr	r0, [r0, #48]	; 0x30
   15ea0:	cmp	r0, #0
   15ea4:	bne	15ebc <__assert_fail@plt+0x4648>
   15ea8:	ldr	r0, [fp, #-8]
   15eac:	bl	15ff0 <__assert_fail@plt+0x477c>
   15eb0:	cmp	r0, #0
   15eb4:	bne	15ee0 <__assert_fail@plt+0x466c>
   15eb8:	b	15f10 <__assert_fail@plt+0x469c>
   15ebc:	ldr	r0, [fp, #-8]
   15ec0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ec4:	ldr	r1, [r1, #4]
   15ec8:	mvn	r2, #0
   15ecc:	movw	r3, #16314	; 0x3fba
   15ed0:	movt	r3, #2
   15ed4:	bl	1506c <__assert_fail@plt+0x37f8>
   15ed8:	cmp	r0, #0
   15edc:	beq	15f10 <__assert_fail@plt+0x469c>
   15ee0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ee4:	movw	r1, #7
   15ee8:	strh	r1, [r0, #56]	; 0x38
   15eec:	ldr	r0, [fp, #-8]
   15ef0:	ldr	r1, [r0, #48]	; 0x30
   15ef4:	orr	r1, r1, #8192	; 0x2000
   15ef8:	str	r1, [r0, #48]	; 0x30
   15efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f00:	bl	141c8 <__assert_fail@plt+0x2954>
   15f04:	movw	r0, #0
   15f08:	str	r0, [fp, #-4]
   15f0c:	b	15fe0 <__assert_fail@plt+0x476c>
   15f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f14:	cmp	r0, #0
   15f18:	bne	15f68 <__assert_fail@plt+0x46f4>
   15f1c:	ldr	r0, [fp, #-12]
   15f20:	cmp	r0, #3
   15f24:	bne	15f54 <__assert_fail@plt+0x46e0>
   15f28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f2c:	ldrh	r0, [r0, #56]	; 0x38
   15f30:	cmp	r0, #4
   15f34:	beq	15f54 <__assert_fail@plt+0x46e0>
   15f38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f3c:	ldrh	r0, [r0, #56]	; 0x38
   15f40:	cmp	r0, #7
   15f44:	beq	15f54 <__assert_fail@plt+0x46e0>
   15f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f4c:	movw	r1, #6
   15f50:	strh	r1, [r0, #56]	; 0x38
   15f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f58:	bl	141c8 <__assert_fail@plt+0x2954>
   15f5c:	movw	r0, #0
   15f60:	str	r0, [fp, #-4]
   15f64:	b	15fe0 <__assert_fail@plt+0x476c>
   15f68:	ldrb	r0, [fp, #-70]	; 0xffffffba
   15f6c:	tst	r0, #1
   15f70:	beq	15fa4 <__assert_fail@plt+0x4730>
   15f74:	ldr	r0, [fp, #-8]
   15f78:	movw	r1, #27408	; 0x6b10
   15f7c:	movt	r1, #1
   15f80:	str	r1, [r0, #44]	; 0x2c
   15f84:	ldr	r0, [fp, #-8]
   15f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f90:	bl	13e88 <__assert_fail@plt+0x2614>
   15f94:	str	r0, [fp, #-20]	; 0xffffffec
   15f98:	ldr	r0, [fp, #-8]
   15f9c:	movw	r1, #0
   15fa0:	str	r1, [r0, #44]	; 0x2c
   15fa4:	ldr	r0, [fp, #-8]
   15fa8:	ldr	r0, [r0, #44]	; 0x2c
   15fac:	movw	r1, #0
   15fb0:	cmp	r0, r1
   15fb4:	beq	15fd8 <__assert_fail@plt+0x4764>
   15fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fbc:	cmp	r0, #1
   15fc0:	bls	15fd8 <__assert_fail@plt+0x4764>
   15fc4:	ldr	r0, [fp, #-8]
   15fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15fd0:	bl	13e88 <__assert_fail@plt+0x2614>
   15fd4:	str	r0, [fp, #-20]	; 0xffffffec
   15fd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fdc:	str	r0, [fp, #-4]
   15fe0:	ldr	r0, [fp, #-4]
   15fe4:	mov	sp, fp
   15fe8:	pop	{fp, pc}
   15fec:	andeq	r8, r1, r0, lsr #13
   15ff0:	push	{fp, lr}
   15ff4:	mov	fp, sp
   15ff8:	sub	sp, sp, #32
   15ffc:	str	r0, [fp, #-4]
   16000:	ldr	r0, [fp, #-4]
   16004:	ldr	r0, [r0, #48]	; 0x30
   16008:	and	r0, r0, #4
   1600c:	cmp	r0, #0
   16010:	movw	r0, #0
   16014:	str	r0, [fp, #-12]
   16018:	bne	160dc <__assert_fail@plt+0x4868>
   1601c:	ldr	r0, [fp, #-4]
   16020:	ldr	r0, [r0, #48]	; 0x30
   16024:	and	r0, r0, #512	; 0x200
   16028:	cmp	r0, #0
   1602c:	beq	16090 <__assert_fail@plt+0x481c>
   16030:	ldr	r0, [fp, #-4]
   16034:	ldr	r1, [fp, #-4]
   16038:	ldr	r1, [r1, #48]	; 0x30
   1603c:	and	r1, r1, #512	; 0x200
   16040:	cmp	r1, #0
   16044:	str	r0, [sp, #16]
   16048:	beq	16058 <__assert_fail@plt+0x47e4>
   1604c:	mvn	r0, #99	; 0x63
   16050:	str	r0, [sp, #12]
   16054:	b	16064 <__assert_fail@plt+0x47f0>
   16058:	ldr	r0, [fp, #-4]
   1605c:	ldr	r0, [r0, #28]
   16060:	str	r0, [sp, #12]
   16064:	ldr	r0, [sp, #12]
   16068:	ldr	r1, [sp, #16]
   1606c:	str	r0, [sp, #8]
   16070:	mov	r0, r1
   16074:	ldr	r1, [sp, #8]
   16078:	movw	r2, #1
   1607c:	and	r2, r2, #1
   16080:	bl	16340 <__assert_fail@plt+0x4acc>
   16084:	movw	r0, #0
   16088:	str	r0, [sp, #4]
   1608c:	b	160c8 <__assert_fail@plt+0x4854>
   16090:	ldr	r0, [fp, #-4]
   16094:	ldr	r0, [r0, #48]	; 0x30
   16098:	and	r0, r0, #512	; 0x200
   1609c:	cmp	r0, #0
   160a0:	beq	160b0 <__assert_fail@plt+0x483c>
   160a4:	mvn	r0, #99	; 0x63
   160a8:	str	r0, [sp]
   160ac:	b	160bc <__assert_fail@plt+0x4848>
   160b0:	ldr	r0, [fp, #-4]
   160b4:	ldr	r0, [r0, #28]
   160b8:	str	r0, [sp]
   160bc:	ldr	r0, [sp]
   160c0:	bl	117cc <fchdir@plt>
   160c4:	str	r0, [sp, #4]
   160c8:	ldr	r0, [sp, #4]
   160cc:	cmp	r0, #0
   160d0:	movw	r0, #0
   160d4:	movne	r0, #1
   160d8:	str	r0, [fp, #-12]
   160dc:	ldr	r0, [fp, #-12]
   160e0:	and	r0, r0, #1
   160e4:	str	r0, [fp, #-8]
   160e8:	ldr	r0, [fp, #-4]
   160ec:	add	r0, r0, #60	; 0x3c
   160f0:	bl	14434 <__assert_fail@plt+0x2bc0>
   160f4:	ldr	r0, [fp, #-8]
   160f8:	mov	sp, fp
   160fc:	pop	{fp, pc}
   16100:	push	{fp, lr}
   16104:	mov	fp, sp
   16108:	sub	sp, sp, #16
   1610c:	str	r0, [fp, #-4]
   16110:	str	r1, [sp, #8]
   16114:	ldr	r0, [sp, #8]
   16118:	ldr	r0, [r0, #52]	; 0x34
   1611c:	ldr	r1, [sp, #8]
   16120:	str	r0, [r1, #40]	; 0x28
   16124:	str	r0, [sp, #4]
   16128:	ldr	r0, [fp, #-4]
   1612c:	ldr	r0, [r0, #24]
   16130:	ldr	r1, [sp, #8]
   16134:	add	r1, r1, #168	; 0xa8
   16138:	ldr	r2, [sp, #4]
   1613c:	add	r2, r2, #1
   16140:	bl	11508 <memmove@plt>
   16144:	ldr	r0, [sp, #8]
   16148:	add	r0, r0, #168	; 0xa8
   1614c:	movw	r1, #47	; 0x2f
   16150:	bl	11784 <strrchr@plt>
   16154:	str	r0, [sp]
   16158:	movw	r1, #0
   1615c:	cmp	r0, r1
   16160:	beq	161c0 <__assert_fail@plt+0x494c>
   16164:	ldr	r0, [sp]
   16168:	ldr	r1, [sp, #8]
   1616c:	add	r1, r1, #168	; 0xa8
   16170:	cmp	r0, r1
   16174:	bne	16188 <__assert_fail@plt+0x4914>
   16178:	ldr	r0, [sp]
   1617c:	ldrb	r0, [r0, #1]
   16180:	cmp	r0, #0
   16184:	beq	161c0 <__assert_fail@plt+0x494c>
   16188:	ldr	r0, [sp]
   1618c:	add	r0, r0, #1
   16190:	str	r0, [sp]
   16194:	bl	116d0 <strlen@plt>
   16198:	str	r0, [sp, #4]
   1619c:	ldr	r0, [sp, #8]
   161a0:	add	r0, r0, #168	; 0xa8
   161a4:	ldr	r1, [sp]
   161a8:	ldr	r2, [sp, #4]
   161ac:	add	r2, r2, #1
   161b0:	bl	11508 <memmove@plt>
   161b4:	ldr	r0, [sp, #4]
   161b8:	ldr	r1, [sp, #8]
   161bc:	str	r0, [r1, #52]	; 0x34
   161c0:	ldr	r0, [fp, #-4]
   161c4:	ldr	r0, [r0, #24]
   161c8:	ldr	r1, [sp, #8]
   161cc:	str	r0, [r1, #28]
   161d0:	ldr	r1, [sp, #8]
   161d4:	str	r0, [r1, #24]
   161d8:	mov	sp, fp
   161dc:	pop	{fp, pc}
   161e0:	push	{fp, lr}
   161e4:	mov	fp, sp
   161e8:	sub	sp, sp, #24
   161ec:	str	r0, [fp, #-8]
   161f0:	str	r1, [sp, #12]
   161f4:	ldr	r0, [fp, #-8]
   161f8:	ldr	r0, [r0, #48]	; 0x30
   161fc:	movw	r1, #258	; 0x102
   16200:	and	r0, r0, r1
   16204:	cmp	r0, #0
   16208:	beq	162ec <__assert_fail@plt+0x4a78>
   1620c:	ldr	r0, [sp, #12]
   16210:	add	r0, r0, #64	; 0x40
   16214:	str	r0, [sp, #8]
   16218:	movw	r0, #24
   1621c:	bl	1f930 <__assert_fail@plt+0xe0bc>
   16220:	str	r0, [sp, #4]
   16224:	ldr	r0, [sp, #4]
   16228:	movw	r1, #0
   1622c:	cmp	r0, r1
   16230:	bne	16244 <__assert_fail@plt+0x49d0>
   16234:	movw	r0, #0
   16238:	and	r0, r0, #1
   1623c:	strb	r0, [fp, #-1]
   16240:	b	16330 <__assert_fail@plt+0x4abc>
   16244:	ldr	r0, [sp, #8]
   16248:	ldr	r1, [r0]
   1624c:	ldr	r0, [r0, #4]
   16250:	ldr	r2, [sp, #4]
   16254:	str	r0, [r2, #4]
   16258:	str	r1, [r2]
   1625c:	ldr	r0, [sp, #8]
   16260:	ldr	r1, [r0, #96]	; 0x60
   16264:	ldr	r0, [r0, #100]	; 0x64
   16268:	ldr	r2, [sp, #4]
   1626c:	str	r0, [r2, #12]
   16270:	str	r1, [r2, #8]
   16274:	ldr	r0, [sp, #12]
   16278:	ldr	r1, [sp, #4]
   1627c:	str	r0, [r1, #16]
   16280:	ldr	r0, [fp, #-8]
   16284:	ldr	r0, [r0, #56]	; 0x38
   16288:	ldr	r1, [sp, #4]
   1628c:	bl	18678 <__assert_fail@plt+0x6e04>
   16290:	str	r0, [sp]
   16294:	ldr	r0, [sp]
   16298:	ldr	r1, [sp, #4]
   1629c:	cmp	r0, r1
   162a0:	beq	162e8 <__assert_fail@plt+0x4a74>
   162a4:	ldr	r0, [sp, #4]
   162a8:	bl	2082c <__assert_fail@plt+0xefb8>
   162ac:	ldr	r0, [sp]
   162b0:	movw	r1, #0
   162b4:	cmp	r0, r1
   162b8:	bne	162cc <__assert_fail@plt+0x4a58>
   162bc:	movw	r0, #0
   162c0:	and	r0, r0, #1
   162c4:	strb	r0, [fp, #-1]
   162c8:	b	16330 <__assert_fail@plt+0x4abc>
   162cc:	ldr	r0, [sp]
   162d0:	ldr	r0, [r0, #16]
   162d4:	ldr	r1, [sp, #12]
   162d8:	str	r0, [r1]
   162dc:	ldr	r0, [sp, #12]
   162e0:	movw	r1, #2
   162e4:	strh	r1, [r0, #56]	; 0x38
   162e8:	b	16324 <__assert_fail@plt+0x4ab0>
   162ec:	ldr	r0, [fp, #-8]
   162f0:	ldr	r0, [r0, #56]	; 0x38
   162f4:	ldr	r1, [sp, #12]
   162f8:	add	r1, r1, #64	; 0x40
   162fc:	bl	20074 <__assert_fail@plt+0xe800>
   16300:	tst	r0, #1
   16304:	beq	16320 <__assert_fail@plt+0x4aac>
   16308:	ldr	r0, [sp, #12]
   1630c:	ldr	r1, [sp, #12]
   16310:	str	r0, [r1]
   16314:	ldr	r0, [sp, #12]
   16318:	movw	r1, #2
   1631c:	strh	r1, [r0, #56]	; 0x38
   16320:	b	16324 <__assert_fail@plt+0x4ab0>
   16324:	movw	r0, #1
   16328:	and	r0, r0, #1
   1632c:	strb	r0, [fp, #-1]
   16330:	ldrb	r0, [fp, #-1]
   16334:	and	r0, r0, #1
   16338:	mov	sp, fp
   1633c:	pop	{fp, pc}
   16340:	push	{fp, lr}
   16344:	mov	fp, sp
   16348:	sub	sp, sp, #24
   1634c:	str	r0, [fp, #-4]
   16350:	str	r1, [fp, #-8]
   16354:	and	r0, r2, #1
   16358:	strb	r0, [fp, #-9]
   1635c:	ldr	r0, [fp, #-4]
   16360:	ldr	r0, [r0, #32]
   16364:	str	r0, [sp, #8]
   16368:	ldr	r0, [sp, #8]
   1636c:	ldr	r1, [fp, #-8]
   16370:	cmp	r0, r1
   16374:	bne	16388 <__assert_fail@plt+0x4b14>
   16378:	ldr	r0, [sp, #8]
   1637c:	cmn	r0, #100	; 0x64
   16380:	beq	16388 <__assert_fail@plt+0x4b14>
   16384:	bl	11838 <abort@plt>
   16388:	b	1638c <__assert_fail@plt+0x4b18>
   1638c:	ldrb	r0, [fp, #-9]
   16390:	tst	r0, #1
   16394:	beq	163c8 <__assert_fail@plt+0x4b54>
   16398:	ldr	r0, [fp, #-4]
   1639c:	add	r0, r0, #60	; 0x3c
   163a0:	ldr	r1, [sp, #8]
   163a4:	bl	18b38 <__assert_fail@plt+0x72c4>
   163a8:	str	r0, [sp, #4]
   163ac:	ldr	r0, [sp, #4]
   163b0:	movw	r1, #0
   163b4:	cmp	r1, r0
   163b8:	bgt	163c4 <__assert_fail@plt+0x4b50>
   163bc:	ldr	r0, [sp, #4]
   163c0:	bl	11844 <close@plt>
   163c4:	b	163fc <__assert_fail@plt+0x4b88>
   163c8:	ldr	r0, [fp, #-4]
   163cc:	ldr	r0, [r0, #48]	; 0x30
   163d0:	and	r0, r0, #4
   163d4:	cmp	r0, #0
   163d8:	bne	163f8 <__assert_fail@plt+0x4b84>
   163dc:	ldr	r0, [sp, #8]
   163e0:	movw	r1, #0
   163e4:	cmp	r1, r0
   163e8:	bgt	163f4 <__assert_fail@plt+0x4b80>
   163ec:	ldr	r0, [sp, #8]
   163f0:	bl	11844 <close@plt>
   163f4:	b	163f8 <__assert_fail@plt+0x4b84>
   163f8:	b	163fc <__assert_fail@plt+0x4b88>
   163fc:	ldr	r0, [fp, #-8]
   16400:	ldr	r1, [fp, #-4]
   16404:	str	r0, [r1, #32]
   16408:	mov	sp, fp
   1640c:	pop	{fp, pc}
   16410:	push	{fp, lr}
   16414:	mov	fp, sp
   16418:	sub	sp, sp, #16
   1641c:	str	r0, [sp, #8]
   16420:	str	r1, [sp, #4]
   16424:	str	r2, [sp]
   16428:	ldr	r0, [sp]
   1642c:	cmp	r0, #0
   16430:	beq	1647c <__assert_fail@plt+0x4c08>
   16434:	ldr	r0, [sp]
   16438:	cmp	r0, #1
   1643c:	beq	1647c <__assert_fail@plt+0x4c08>
   16440:	ldr	r0, [sp]
   16444:	cmp	r0, #2
   16448:	beq	1647c <__assert_fail@plt+0x4c08>
   1644c:	ldr	r0, [sp]
   16450:	cmp	r0, #3
   16454:	beq	1647c <__assert_fail@plt+0x4c08>
   16458:	ldr	r0, [sp]
   1645c:	cmp	r0, #4
   16460:	beq	1647c <__assert_fail@plt+0x4c08>
   16464:	bl	11700 <__errno_location@plt>
   16468:	movw	r1, #22
   1646c:	str	r1, [r0]
   16470:	movw	r0, #1
   16474:	str	r0, [fp, #-4]
   16478:	b	16490 <__assert_fail@plt+0x4c1c>
   1647c:	ldr	r0, [sp]
   16480:	ldr	r1, [sp, #4]
   16484:	strh	r0, [r1, #60]	; 0x3c
   16488:	movw	r0, #0
   1648c:	str	r0, [fp, #-4]
   16490:	ldr	r0, [fp, #-4]
   16494:	mov	sp, fp
   16498:	pop	{fp, pc}
   1649c:	push	{fp, lr}
   164a0:	mov	fp, sp
   164a4:	sub	sp, sp, #32
   164a8:	str	r0, [fp, #-8]
   164ac:	str	r1, [fp, #-12]
   164b0:	ldr	r0, [fp, #-12]
   164b4:	cmp	r0, #0
   164b8:	beq	164e0 <__assert_fail@plt+0x4c6c>
   164bc:	ldr	r0, [fp, #-12]
   164c0:	cmp	r0, #4096	; 0x1000
   164c4:	beq	164e0 <__assert_fail@plt+0x4c6c>
   164c8:	bl	11700 <__errno_location@plt>
   164cc:	movw	r1, #22
   164d0:	str	r1, [r0]
   164d4:	movw	r0, #0
   164d8:	str	r0, [fp, #-4]
   164dc:	b	166c4 <__assert_fail@plt+0x4e50>
   164e0:	ldr	r0, [fp, #-8]
   164e4:	ldr	r0, [r0]
   164e8:	str	r0, [sp, #16]
   164ec:	bl	11700 <__errno_location@plt>
   164f0:	movw	r1, #0
   164f4:	str	r1, [r0]
   164f8:	ldr	r0, [fp, #-8]
   164fc:	ldr	r0, [r0, #48]	; 0x30
   16500:	and	r0, r0, #8192	; 0x2000
   16504:	cmp	r0, #0
   16508:	beq	16518 <__assert_fail@plt+0x4ca4>
   1650c:	movw	r0, #0
   16510:	str	r0, [fp, #-4]
   16514:	b	166c4 <__assert_fail@plt+0x4e50>
   16518:	ldr	r0, [sp, #16]
   1651c:	ldrh	r0, [r0, #56]	; 0x38
   16520:	cmp	r0, #9
   16524:	bne	16538 <__assert_fail@plt+0x4cc4>
   16528:	ldr	r0, [sp, #16]
   1652c:	ldr	r0, [r0, #8]
   16530:	str	r0, [fp, #-4]
   16534:	b	166c4 <__assert_fail@plt+0x4e50>
   16538:	ldr	r0, [sp, #16]
   1653c:	ldrh	r0, [r0, #56]	; 0x38
   16540:	cmp	r0, #1
   16544:	beq	16554 <__assert_fail@plt+0x4ce0>
   16548:	movw	r0, #0
   1654c:	str	r0, [fp, #-4]
   16550:	b	166c4 <__assert_fail@plt+0x4e50>
   16554:	ldr	r0, [fp, #-8]
   16558:	ldr	r0, [r0, #4]
   1655c:	movw	r1, #0
   16560:	cmp	r0, r1
   16564:	beq	16574 <__assert_fail@plt+0x4d00>
   16568:	ldr	r0, [fp, #-8]
   1656c:	ldr	r0, [r0, #4]
   16570:	bl	141c8 <__assert_fail@plt+0x2954>
   16574:	ldr	r0, [fp, #-12]
   16578:	cmp	r0, #4096	; 0x1000
   1657c:	bne	1659c <__assert_fail@plt+0x4d28>
   16580:	ldr	r0, [fp, #-8]
   16584:	ldr	r1, [r0, #48]	; 0x30
   16588:	orr	r1, r1, #4096	; 0x1000
   1658c:	str	r1, [r0, #48]	; 0x30
   16590:	movw	r0, #2
   16594:	str	r0, [fp, #-12]
   16598:	b	165a4 <__assert_fail@plt+0x4d30>
   1659c:	movw	r0, #1
   165a0:	str	r0, [fp, #-12]
   165a4:	ldr	r0, [sp, #16]
   165a8:	ldr	r0, [r0, #48]	; 0x30
   165ac:	cmp	r0, #0
   165b0:	bne	165dc <__assert_fail@plt+0x4d68>
   165b4:	ldr	r0, [sp, #16]
   165b8:	ldr	r0, [r0, #24]
   165bc:	ldrb	r0, [r0]
   165c0:	cmp	r0, #47	; 0x2f
   165c4:	beq	165dc <__assert_fail@plt+0x4d68>
   165c8:	ldr	r0, [fp, #-8]
   165cc:	ldr	r0, [r0, #48]	; 0x30
   165d0:	and	r0, r0, #4
   165d4:	cmp	r0, #0
   165d8:	beq	165f8 <__assert_fail@plt+0x4d84>
   165dc:	ldr	r0, [fp, #-8]
   165e0:	ldr	r1, [fp, #-12]
   165e4:	bl	1532c <__assert_fail@plt+0x3ab8>
   165e8:	ldr	r1, [fp, #-8]
   165ec:	str	r0, [r1, #4]
   165f0:	str	r0, [fp, #-4]
   165f4:	b	166c4 <__assert_fail@plt+0x4e50>
   165f8:	ldr	r0, [fp, #-8]
   165fc:	movw	r1, #16315	; 0x3fbb
   16600:	movt	r1, #2
   16604:	bl	1412c <__assert_fail@plt+0x28b8>
   16608:	str	r0, [sp, #12]
   1660c:	cmp	r0, #0
   16610:	bge	16628 <__assert_fail@plt+0x4db4>
   16614:	ldr	r0, [fp, #-8]
   16618:	movw	r1, #0
   1661c:	str	r1, [r0, #4]
   16620:	str	r1, [fp, #-4]
   16624:	b	166c4 <__assert_fail@plt+0x4e50>
   16628:	ldr	r0, [fp, #-8]
   1662c:	ldr	r1, [fp, #-12]
   16630:	bl	1532c <__assert_fail@plt+0x3ab8>
   16634:	ldr	r1, [fp, #-8]
   16638:	str	r0, [r1, #4]
   1663c:	ldr	r0, [fp, #-8]
   16640:	ldr	r0, [r0, #48]	; 0x30
   16644:	and	r0, r0, #512	; 0x200
   16648:	cmp	r0, #0
   1664c:	beq	16668 <__assert_fail@plt+0x4df4>
   16650:	ldr	r0, [fp, #-8]
   16654:	ldr	r1, [sp, #12]
   16658:	movw	r2, #1
   1665c:	and	r2, r2, #1
   16660:	bl	16340 <__assert_fail@plt+0x4acc>
   16664:	b	166b8 <__assert_fail@plt+0x4e44>
   16668:	ldr	r0, [sp, #12]
   1666c:	bl	117cc <fchdir@plt>
   16670:	cmp	r0, #0
   16674:	beq	166b0 <__assert_fail@plt+0x4e3c>
   16678:	bl	11700 <__errno_location@plt>
   1667c:	ldr	r0, [r0]
   16680:	str	r0, [sp, #8]
   16684:	ldr	r0, [sp, #12]
   16688:	bl	11844 <close@plt>
   1668c:	ldr	r1, [sp, #8]
   16690:	str	r0, [sp, #4]
   16694:	str	r1, [sp]
   16698:	bl	11700 <__errno_location@plt>
   1669c:	ldr	r1, [sp]
   166a0:	str	r1, [r0]
   166a4:	movw	r0, #0
   166a8:	str	r0, [fp, #-4]
   166ac:	b	166c4 <__assert_fail@plt+0x4e50>
   166b0:	ldr	r0, [sp, #12]
   166b4:	bl	11844 <close@plt>
   166b8:	ldr	r0, [fp, #-8]
   166bc:	ldr	r0, [r0, #4]
   166c0:	str	r0, [fp, #-4]
   166c4:	ldr	r0, [fp, #-4]
   166c8:	mov	sp, fp
   166cc:	pop	{fp, pc}
   166d0:	push	{fp, lr}
   166d4:	mov	fp, sp
   166d8:	sub	sp, sp, #24
   166dc:	str	r0, [fp, #-4]
   166e0:	str	r1, [fp, #-8]
   166e4:	ldr	r0, [fp, #-4]
   166e8:	str	r0, [sp, #12]
   166ec:	ldr	r0, [sp, #12]
   166f0:	ldr	r1, [r0, #8]
   166f4:	ldr	r0, [r0, #12]
   166f8:	ldr	r2, [fp, #-8]
   166fc:	mov	r3, #0
   16700:	str	r0, [sp, #8]
   16704:	mov	r0, r1
   16708:	ldr	r1, [sp, #8]
   1670c:	bl	22f9c <__assert_fail@plt+0x11728>
   16710:	str	r0, [sp, #4]
   16714:	mov	r0, r2
   16718:	mov	sp, fp
   1671c:	pop	{fp, pc}
   16720:	sub	sp, sp, #20
   16724:	str	r0, [sp, #16]
   16728:	str	r1, [sp, #12]
   1672c:	ldr	r0, [sp, #16]
   16730:	str	r0, [sp, #8]
   16734:	ldr	r0, [sp, #12]
   16738:	str	r0, [sp, #4]
   1673c:	ldr	r0, [sp, #8]
   16740:	ldr	r1, [r0, #8]
   16744:	ldr	r0, [r0, #12]
   16748:	ldr	r2, [sp, #4]
   1674c:	ldr	r3, [r2, #8]
   16750:	ldr	r2, [r2, #12]
   16754:	eor	r0, r0, r2
   16758:	eor	r1, r1, r3
   1675c:	orr	r0, r1, r0
   16760:	mov	r1, #0
   16764:	cmp	r0, #0
   16768:	str	r1, [sp]
   1676c:	bne	167a4 <__assert_fail@plt+0x4f30>
   16770:	b	16774 <__assert_fail@plt+0x4f00>
   16774:	ldr	r0, [sp, #8]
   16778:	ldr	r1, [r0]
   1677c:	ldr	r0, [r0, #4]
   16780:	ldr	r2, [sp, #4]
   16784:	ldr	r3, [r2]
   16788:	ldr	r2, [r2, #4]
   1678c:	eor	r0, r0, r2
   16790:	eor	r1, r1, r3
   16794:	orr	r0, r1, r0
   16798:	clz	r0, r0
   1679c:	lsr	r0, r0, #5
   167a0:	str	r0, [sp]
   167a4:	ldr	r0, [sp]
   167a8:	and	r0, r0, #1
   167ac:	add	sp, sp, #20
   167b0:	bx	lr
   167b4:	push	{fp, lr}
   167b8:	mov	fp, sp
   167bc:	sub	sp, sp, #16
   167c0:	str	r0, [sp, #8]
   167c4:	str	r1, [sp, #4]
   167c8:	ldr	r0, [sp, #8]
   167cc:	ldr	r1, [sp, #4]
   167d0:	bl	16b7c <__assert_fail@plt+0x5308>
   167d4:	mov	r1, r0
   167d8:	movw	r2, #19778	; 0x4d42
   167dc:	movt	r2, #65363	; 0xff53
   167e0:	cmp	r0, r2
   167e4:	str	r1, [sp]
   167e8:	beq	16848 <__assert_fail@plt+0x4fd4>
   167ec:	b	167f0 <__assert_fail@plt+0x4f7c>
   167f0:	ldr	r0, [sp]
   167f4:	cmp	r0, #0
   167f8:	beq	16840 <__assert_fail@plt+0x4fcc>
   167fc:	b	16800 <__assert_fail@plt+0x4f8c>
   16800:	movw	r0, #26985	; 0x6969
   16804:	ldr	r1, [sp]
   16808:	cmp	r1, r0
   1680c:	beq	1684c <__assert_fail@plt+0x4fd8>
   16810:	b	16814 <__assert_fail@plt+0x4fa0>
   16814:	movw	r0, #40864	; 0x9fa0
   16818:	ldr	r1, [sp]
   1681c:	cmp	r1, r0
   16820:	beq	16850 <__assert_fail@plt+0x4fdc>
   16824:	b	16828 <__assert_fail@plt+0x4fb4>
   16828:	movw	r0, #16719	; 0x414f
   1682c:	movt	r0, #21318	; 0x5346
   16830:	ldr	r1, [sp]
   16834:	cmp	r1, r0
   16838:	beq	16844 <__assert_fail@plt+0x4fd0>
   1683c:	b	1685c <__assert_fail@plt+0x4fe8>
   16840:	b	16844 <__assert_fail@plt+0x4fd0>
   16844:	b	16848 <__assert_fail@plt+0x4fd4>
   16848:	b	1684c <__assert_fail@plt+0x4fd8>
   1684c:	b	16850 <__assert_fail@plt+0x4fdc>
   16850:	movw	r0, #0
   16854:	str	r0, [fp, #-4]
   16858:	b	16864 <__assert_fail@plt+0x4ff0>
   1685c:	movw	r0, #1
   16860:	str	r0, [fp, #-4]
   16864:	ldr	r0, [fp, #-4]
   16868:	mov	sp, fp
   1686c:	pop	{fp, pc}
   16870:	sub	sp, sp, #16
   16874:	str	r0, [sp, #12]
   16878:	str	r1, [sp, #8]
   1687c:	ldr	r0, [sp, #8]
   16880:	sub	r0, r0, #1
   16884:	cmp	r0, #11
   16888:	str	r0, [sp]
   1688c:	bhi	16924 <__assert_fail@plt+0x50b0>
   16890:	add	r0, pc, #8
   16894:	ldr	r1, [sp]
   16898:	ldr	r0, [r0, r1, lsl #2]
   1689c:	mov	pc, r0
   168a0:	strdeq	r6, [r1], -r4
   168a4:	ldrdeq	r6, [r1], -ip
   168a8:	andeq	r6, r1, r4, lsr #18
   168ac:	andeq	r6, r1, r8, ror #17
   168b0:	andeq	r6, r1, r4, lsr #18
   168b4:	ldrdeq	r6, [r1], -r0
   168b8:	andeq	r6, r1, r4, lsr #18
   168bc:	andeq	r6, r1, ip, lsl #18
   168c0:	andeq	r6, r1, r4, lsr #18
   168c4:	andeq	r6, r1, r0, lsl #18
   168c8:	andeq	r6, r1, r4, lsr #18
   168cc:	andeq	r6, r1, r8, lsl r9
   168d0:	movw	r0, #24576	; 0x6000
   168d4:	str	r0, [sp, #4]
   168d8:	b	1692c <__assert_fail@plt+0x50b8>
   168dc:	movw	r0, #8192	; 0x2000
   168e0:	str	r0, [sp, #4]
   168e4:	b	1692c <__assert_fail@plt+0x50b8>
   168e8:	movw	r0, #16384	; 0x4000
   168ec:	str	r0, [sp, #4]
   168f0:	b	1692c <__assert_fail@plt+0x50b8>
   168f4:	movw	r0, #4096	; 0x1000
   168f8:	str	r0, [sp, #4]
   168fc:	b	1692c <__assert_fail@plt+0x50b8>
   16900:	movw	r0, #40960	; 0xa000
   16904:	str	r0, [sp, #4]
   16908:	b	1692c <__assert_fail@plt+0x50b8>
   1690c:	movw	r0, #32768	; 0x8000
   16910:	str	r0, [sp, #4]
   16914:	b	1692c <__assert_fail@plt+0x50b8>
   16918:	movw	r0, #49152	; 0xc000
   1691c:	str	r0, [sp, #4]
   16920:	b	1692c <__assert_fail@plt+0x50b8>
   16924:	movw	r0, #0
   16928:	str	r0, [sp, #4]
   1692c:	ldr	r0, [sp, #4]
   16930:	ldr	r1, [sp, #12]
   16934:	str	r0, [r1, #16]
   16938:	add	sp, sp, #16
   1693c:	bx	lr
   16940:	push	{fp, lr}
   16944:	mov	fp, sp
   16948:	sub	sp, sp, #16
   1694c:	str	r0, [sp, #8]
   16950:	str	r1, [sp, #4]
   16954:	ldr	r0, [sp, #8]
   16958:	ldr	r1, [sp, #4]
   1695c:	bl	16b7c <__assert_fail@plt+0x5308>
   16960:	mov	r1, r0
   16964:	movw	r2, #19778	; 0x4d42
   16968:	movt	r2, #65363	; 0xff53
   1696c:	cmp	r0, r2
   16970:	str	r1, [sp]
   16974:	beq	169a8 <__assert_fail@plt+0x5134>
   16978:	b	1697c <__assert_fail@plt+0x5108>
   1697c:	movw	r0, #26985	; 0x6969
   16980:	ldr	r1, [sp]
   16984:	cmp	r1, r0
   16988:	beq	169a8 <__assert_fail@plt+0x5134>
   1698c:	b	16990 <__assert_fail@plt+0x511c>
   16990:	movw	r0, #6548	; 0x1994
   16994:	movt	r0, #258	; 0x102
   16998:	ldr	r1, [sp]
   1699c:	cmp	r1, r0
   169a0:	bne	169b8 <__assert_fail@plt+0x5144>
   169a4:	b	169a8 <__assert_fail@plt+0x5134>
   169a8:	movw	r0, #0
   169ac:	and	r0, r0, #1
   169b0:	strb	r0, [fp, #-1]
   169b4:	b	169c4 <__assert_fail@plt+0x5150>
   169b8:	movw	r0, #1
   169bc:	and	r0, r0, #1
   169c0:	strb	r0, [fp, #-1]
   169c4:	ldrb	r0, [fp, #-1]
   169c8:	and	r0, r0, #1
   169cc:	mov	sp, fp
   169d0:	pop	{fp, pc}
   169d4:	sub	sp, sp, #20
   169d8:	str	r0, [sp, #16]
   169dc:	str	r1, [sp, #12]
   169e0:	ldr	r0, [sp, #16]
   169e4:	ldr	r0, [r0, #24]
   169e8:	str	r0, [sp, #4]
   169ec:	ldr	r0, [sp, #16]
   169f0:	ldr	r0, [r0, #4]
   169f4:	str	r0, [sp, #8]
   169f8:	ldr	r0, [sp, #8]
   169fc:	movw	r1, #0
   16a00:	cmp	r0, r1
   16a04:	beq	16a68 <__assert_fail@plt+0x51f4>
   16a08:	b	16a0c <__assert_fail@plt+0x5198>
   16a0c:	ldr	r0, [sp, #8]
   16a10:	ldr	r0, [r0, #24]
   16a14:	ldr	r1, [sp, #8]
   16a18:	add	r1, r1, #168	; 0xa8
   16a1c:	cmp	r0, r1
   16a20:	beq	16a48 <__assert_fail@plt+0x51d4>
   16a24:	ldr	r0, [sp, #4]
   16a28:	ldr	r1, [sp, #8]
   16a2c:	ldr	r1, [r1, #24]
   16a30:	ldr	r2, [sp, #8]
   16a34:	ldr	r2, [r2, #28]
   16a38:	sub	r1, r1, r2
   16a3c:	add	r0, r0, r1
   16a40:	ldr	r1, [sp, #8]
   16a44:	str	r0, [r1, #24]
   16a48:	ldr	r0, [sp, #4]
   16a4c:	ldr	r1, [sp, #8]
   16a50:	str	r0, [r1, #28]
   16a54:	b	16a58 <__assert_fail@plt+0x51e4>
   16a58:	ldr	r0, [sp, #8]
   16a5c:	ldr	r0, [r0, #8]
   16a60:	str	r0, [sp, #8]
   16a64:	b	169f8 <__assert_fail@plt+0x5184>
   16a68:	ldr	r0, [sp, #12]
   16a6c:	str	r0, [sp, #8]
   16a70:	ldr	r0, [sp, #8]
   16a74:	ldr	r0, [r0, #48]	; 0x30
   16a78:	cmp	r0, #0
   16a7c:	blt	16b08 <__assert_fail@plt+0x5294>
   16a80:	b	16a84 <__assert_fail@plt+0x5210>
   16a84:	ldr	r0, [sp, #8]
   16a88:	ldr	r0, [r0, #24]
   16a8c:	ldr	r1, [sp, #8]
   16a90:	add	r1, r1, #168	; 0xa8
   16a94:	cmp	r0, r1
   16a98:	beq	16ac0 <__assert_fail@plt+0x524c>
   16a9c:	ldr	r0, [sp, #4]
   16aa0:	ldr	r1, [sp, #8]
   16aa4:	ldr	r1, [r1, #24]
   16aa8:	ldr	r2, [sp, #8]
   16aac:	ldr	r2, [r2, #28]
   16ab0:	sub	r1, r1, r2
   16ab4:	add	r0, r0, r1
   16ab8:	ldr	r1, [sp, #8]
   16abc:	str	r0, [r1, #24]
   16ac0:	ldr	r0, [sp, #4]
   16ac4:	ldr	r1, [sp, #8]
   16ac8:	str	r0, [r1, #28]
   16acc:	ldr	r0, [sp, #8]
   16ad0:	ldr	r0, [r0, #8]
   16ad4:	movw	r1, #0
   16ad8:	cmp	r0, r1
   16adc:	beq	16af0 <__assert_fail@plt+0x527c>
   16ae0:	ldr	r0, [sp, #8]
   16ae4:	ldr	r0, [r0, #8]
   16ae8:	str	r0, [sp]
   16aec:	b	16afc <__assert_fail@plt+0x5288>
   16af0:	ldr	r0, [sp, #8]
   16af4:	ldr	r0, [r0, #4]
   16af8:	str	r0, [sp]
   16afc:	ldr	r0, [sp]
   16b00:	str	r0, [sp, #8]
   16b04:	b	16a70 <__assert_fail@plt+0x51fc>
   16b08:	add	sp, sp, #20
   16b0c:	bx	lr
   16b10:	push	{r4, r5, fp, lr}
   16b14:	add	fp, sp, #8
   16b18:	sub	sp, sp, #12
   16b1c:	str	r0, [sp, #8]
   16b20:	str	r1, [sp, #4]
   16b24:	ldr	r0, [sp, #8]
   16b28:	ldr	r0, [r0]
   16b2c:	ldr	r1, [r0, #160]	; 0xa0
   16b30:	ldr	r0, [r0, #164]	; 0xa4
   16b34:	ldr	r2, [sp, #4]
   16b38:	ldr	r2, [r2]
   16b3c:	ldr	r3, [r2, #160]	; 0xa0
   16b40:	ldr	r2, [r2, #164]	; 0xa4
   16b44:	subs	ip, r3, r1
   16b48:	sbcs	lr, r2, r0
   16b4c:	mov	r4, #0
   16b50:	mov	r5, r4
   16b54:	movwcc	r5, #1
   16b58:	subs	r1, r1, r3
   16b5c:	sbcs	r0, r0, r2
   16b60:	movwcc	r4, #1
   16b64:	and	r2, r4, #1
   16b68:	sub	r2, r5, r2
   16b6c:	str	r0, [sp]
   16b70:	mov	r0, r2
   16b74:	sub	sp, fp, #8
   16b78:	pop	{r4, r5, fp, pc}
   16b7c:	push	{fp, lr}
   16b80:	mov	fp, sp
   16b84:	sub	sp, sp, #136	; 0x88
   16b88:	str	r0, [fp, #-8]
   16b8c:	str	r1, [fp, #-12]
   16b90:	ldr	r0, [fp, #-8]
   16b94:	ldr	r0, [r0, #44]	; 0x2c
   16b98:	str	r0, [fp, #-16]
   16b9c:	ldr	r0, [fp, #-16]
   16ba0:	ldr	r0, [r0, #52]	; 0x34
   16ba4:	str	r0, [fp, #-20]	; 0xffffffec
   16ba8:	ldr	r0, [fp, #-16]
   16bac:	ldr	r0, [r0, #48]	; 0x30
   16bb0:	and	r0, r0, #512	; 0x200
   16bb4:	cmp	r0, #0
   16bb8:	bne	16bc8 <__assert_fail@plt+0x5354>
   16bbc:	movw	r0, #0
   16bc0:	str	r0, [fp, #-4]
   16bc4:	b	16d38 <__assert_fail@plt+0x54c4>
   16bc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16bcc:	movw	r1, #0
   16bd0:	cmp	r0, r1
   16bd4:	bne	16c0c <__assert_fail@plt+0x5398>
   16bd8:	movw	r0, #13
   16bdc:	movw	r1, #0
   16be0:	movw	r2, #27972	; 0x6d44
   16be4:	movt	r2, #1
   16be8:	movw	r3, #28056	; 0x6d98
   16bec:	movt	r3, #1
   16bf0:	movw	ip, #2092	; 0x82c
   16bf4:	movt	ip, #2
   16bf8:	str	ip, [sp]
   16bfc:	bl	17654 <__assert_fail@plt+0x5de0>
   16c00:	ldr	r1, [fp, #-16]
   16c04:	str	r0, [r1, #52]	; 0x34
   16c08:	str	r0, [fp, #-20]	; 0xffffffec
   16c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c10:	movw	r1, #0
   16c14:	cmp	r0, r1
   16c18:	beq	16c64 <__assert_fail@plt+0x53f0>
   16c1c:	ldr	r0, [fp, #-8]
   16c20:	ldr	r1, [r0, #64]	; 0x40
   16c24:	ldr	r0, [r0, #68]	; 0x44
   16c28:	str	r0, [sp, #12]
   16c2c:	str	r1, [sp, #8]
   16c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c34:	add	r1, sp, #8
   16c38:	bl	17138 <__assert_fail@plt+0x58c4>
   16c3c:	str	r0, [fp, #-24]	; 0xffffffe8
   16c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c44:	movw	r1, #0
   16c48:	cmp	r0, r1
   16c4c:	beq	16c60 <__assert_fail@plt+0x53ec>
   16c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c54:	ldr	r0, [r0, #8]
   16c58:	str	r0, [fp, #-4]
   16c5c:	b	16d38 <__assert_fail@plt+0x54c4>
   16c60:	b	16c64 <__assert_fail@plt+0x53f0>
   16c64:	ldr	r0, [fp, #-12]
   16c68:	cmp	r0, #0
   16c6c:	blt	16c84 <__assert_fail@plt+0x5410>
   16c70:	ldr	r0, [fp, #-12]
   16c74:	add	r1, sp, #24
   16c78:	bl	1149c <fstatfs64@plt>
   16c7c:	cmp	r0, #0
   16c80:	beq	16c90 <__assert_fail@plt+0x541c>
   16c84:	movw	r0, #0
   16c88:	str	r0, [fp, #-4]
   16c8c:	b	16d38 <__assert_fail@plt+0x54c4>
   16c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c94:	movw	r1, #0
   16c98:	cmp	r0, r1
   16c9c:	beq	16d30 <__assert_fail@plt+0x54bc>
   16ca0:	movw	r0, #16
   16ca4:	bl	1f930 <__assert_fail@plt+0xe0bc>
   16ca8:	str	r0, [sp, #4]
   16cac:	ldr	r0, [sp, #4]
   16cb0:	movw	r1, #0
   16cb4:	cmp	r0, r1
   16cb8:	beq	16d2c <__assert_fail@plt+0x54b8>
   16cbc:	ldr	r0, [fp, #-8]
   16cc0:	ldr	r1, [r0, #64]	; 0x40
   16cc4:	ldr	r0, [r0, #68]	; 0x44
   16cc8:	ldr	r2, [sp, #4]
   16ccc:	str	r0, [r2, #4]
   16cd0:	str	r1, [r2]
   16cd4:	ldr	r0, [sp, #24]
   16cd8:	ldr	r1, [sp, #4]
   16cdc:	str	r0, [r1, #8]
   16ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ce4:	ldr	r1, [sp, #4]
   16ce8:	bl	18678 <__assert_fail@plt+0x6e04>
   16cec:	str	r0, [fp, #-24]	; 0xffffffe8
   16cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf4:	movw	r1, #0
   16cf8:	cmp	r0, r1
   16cfc:	beq	16d20 <__assert_fail@plt+0x54ac>
   16d00:	b	16d04 <__assert_fail@plt+0x5490>
   16d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d08:	ldr	r1, [sp, #4]
   16d0c:	cmp	r0, r1
   16d10:	beq	16d18 <__assert_fail@plt+0x54a4>
   16d14:	bl	11838 <abort@plt>
   16d18:	b	16d1c <__assert_fail@plt+0x54a8>
   16d1c:	b	16d28 <__assert_fail@plt+0x54b4>
   16d20:	ldr	r0, [sp, #4]
   16d24:	bl	2082c <__assert_fail@plt+0xefb8>
   16d28:	b	16d2c <__assert_fail@plt+0x54b8>
   16d2c:	b	16d30 <__assert_fail@plt+0x54bc>
   16d30:	ldr	r0, [sp, #24]
   16d34:	str	r0, [fp, #-4]
   16d38:	ldr	r0, [fp, #-4]
   16d3c:	mov	sp, fp
   16d40:	pop	{fp, pc}
   16d44:	push	{fp, lr}
   16d48:	mov	fp, sp
   16d4c:	sub	sp, sp, #32
   16d50:	str	r0, [fp, #-4]
   16d54:	str	r1, [fp, #-8]
   16d58:	ldr	r0, [fp, #-4]
   16d5c:	str	r0, [fp, #-12]
   16d60:	ldr	r0, [fp, #-12]
   16d64:	ldr	r1, [r0]
   16d68:	ldr	r0, [r0, #4]
   16d6c:	str	r0, [sp, #12]
   16d70:	str	r1, [sp, #8]
   16d74:	ldr	r0, [sp, #8]
   16d78:	ldr	r1, [sp, #12]
   16d7c:	ldr	r2, [fp, #-8]
   16d80:	mov	r3, #0
   16d84:	bl	22f9c <__assert_fail@plt+0x11728>
   16d88:	str	r0, [sp, #4]
   16d8c:	mov	r0, r2
   16d90:	mov	sp, fp
   16d94:	pop	{fp, pc}
   16d98:	sub	sp, sp, #16
   16d9c:	str	r0, [sp, #12]
   16da0:	str	r1, [sp, #8]
   16da4:	ldr	r0, [sp, #12]
   16da8:	str	r0, [sp, #4]
   16dac:	ldr	r0, [sp, #8]
   16db0:	str	r0, [sp]
   16db4:	ldr	r0, [sp, #4]
   16db8:	ldr	r1, [r0]
   16dbc:	ldr	r0, [r0, #4]
   16dc0:	ldr	r2, [sp]
   16dc4:	ldr	r3, [r2]
   16dc8:	ldr	r2, [r2, #4]
   16dcc:	eor	r0, r0, r2
   16dd0:	eor	r1, r1, r3
   16dd4:	orr	r0, r1, r0
   16dd8:	clz	r0, r0
   16ddc:	lsr	r0, r0, #5
   16de0:	and	r0, r0, #1
   16de4:	add	sp, sp, #16
   16de8:	bx	lr
   16dec:	push	{fp, lr}
   16df0:	mov	fp, sp
   16df4:	sub	sp, sp, #24
   16df8:	str	r0, [fp, #-4]
   16dfc:	str	r1, [fp, #-8]
   16e00:	ldr	r0, [fp, #-4]
   16e04:	str	r0, [sp, #12]
   16e08:	ldr	r0, [fp, #-8]
   16e0c:	str	r0, [sp, #8]
   16e10:	ldr	r0, [sp, #12]
   16e14:	ldr	r0, [r0]
   16e18:	ldr	r0, [r0, #44]	; 0x2c
   16e1c:	ldr	r0, [r0, #44]	; 0x2c
   16e20:	ldr	r1, [sp, #12]
   16e24:	ldr	r2, [sp, #8]
   16e28:	str	r0, [sp, #4]
   16e2c:	mov	r0, r1
   16e30:	mov	r1, r2
   16e34:	ldr	r2, [sp, #4]
   16e38:	blx	r2
   16e3c:	mov	sp, fp
   16e40:	pop	{fp, pc}
   16e44:	andeq	r0, r0, r0
   16e48:	sub	sp, sp, #4
   16e4c:	str	r0, [sp]
   16e50:	ldr	r0, [sp]
   16e54:	ldr	r0, [r0, #8]
   16e58:	add	sp, sp, #4
   16e5c:	bx	lr
   16e60:	sub	sp, sp, #4
   16e64:	str	r0, [sp]
   16e68:	ldr	r0, [sp]
   16e6c:	ldr	r0, [r0, #12]
   16e70:	add	sp, sp, #4
   16e74:	bx	lr
   16e78:	sub	sp, sp, #4
   16e7c:	str	r0, [sp]
   16e80:	ldr	r0, [sp]
   16e84:	ldr	r0, [r0, #16]
   16e88:	add	sp, sp, #4
   16e8c:	bx	lr
   16e90:	sub	sp, sp, #20
   16e94:	str	r0, [sp, #16]
   16e98:	movw	r0, #0
   16e9c:	str	r0, [sp, #8]
   16ea0:	ldr	r0, [sp, #16]
   16ea4:	ldr	r0, [r0]
   16ea8:	str	r0, [sp, #12]
   16eac:	ldr	r0, [sp, #12]
   16eb0:	ldr	r1, [sp, #16]
   16eb4:	ldr	r1, [r1, #4]
   16eb8:	cmp	r0, r1
   16ebc:	bcs	16f40 <__assert_fail@plt+0x56cc>
   16ec0:	ldr	r0, [sp, #12]
   16ec4:	ldr	r0, [r0]
   16ec8:	movw	r1, #0
   16ecc:	cmp	r0, r1
   16ed0:	beq	16f2c <__assert_fail@plt+0x56b8>
   16ed4:	ldr	r0, [sp, #12]
   16ed8:	str	r0, [sp, #4]
   16edc:	movw	r0, #1
   16ee0:	str	r0, [sp]
   16ee4:	ldr	r0, [sp, #4]
   16ee8:	ldr	r0, [r0, #4]
   16eec:	str	r0, [sp, #4]
   16ef0:	ldr	r0, [sp, #4]
   16ef4:	movw	r1, #0
   16ef8:	cmp	r0, r1
   16efc:	beq	16f10 <__assert_fail@plt+0x569c>
   16f00:	ldr	r0, [sp]
   16f04:	add	r0, r0, #1
   16f08:	str	r0, [sp]
   16f0c:	b	16ee4 <__assert_fail@plt+0x5670>
   16f10:	ldr	r0, [sp]
   16f14:	ldr	r1, [sp, #8]
   16f18:	cmp	r0, r1
   16f1c:	bls	16f28 <__assert_fail@plt+0x56b4>
   16f20:	ldr	r0, [sp]
   16f24:	str	r0, [sp, #8]
   16f28:	b	16f2c <__assert_fail@plt+0x56b8>
   16f2c:	b	16f30 <__assert_fail@plt+0x56bc>
   16f30:	ldr	r0, [sp, #12]
   16f34:	add	r0, r0, #8
   16f38:	str	r0, [sp, #12]
   16f3c:	b	16eac <__assert_fail@plt+0x5638>
   16f40:	ldr	r0, [sp, #8]
   16f44:	add	sp, sp, #20
   16f48:	bx	lr
   16f4c:	sub	sp, sp, #24
   16f50:	str	r0, [sp, #16]
   16f54:	movw	r0, #0
   16f58:	str	r0, [sp, #8]
   16f5c:	str	r0, [sp, #4]
   16f60:	ldr	r0, [sp, #16]
   16f64:	ldr	r0, [r0]
   16f68:	str	r0, [sp, #12]
   16f6c:	ldr	r0, [sp, #12]
   16f70:	ldr	r1, [sp, #16]
   16f74:	ldr	r1, [r1, #4]
   16f78:	cmp	r0, r1
   16f7c:	bcs	16ff8 <__assert_fail@plt+0x5784>
   16f80:	ldr	r0, [sp, #12]
   16f84:	ldr	r0, [r0]
   16f88:	movw	r1, #0
   16f8c:	cmp	r0, r1
   16f90:	beq	16fe4 <__assert_fail@plt+0x5770>
   16f94:	ldr	r0, [sp, #12]
   16f98:	str	r0, [sp]
   16f9c:	ldr	r0, [sp, #8]
   16fa0:	add	r0, r0, #1
   16fa4:	str	r0, [sp, #8]
   16fa8:	ldr	r0, [sp, #4]
   16fac:	add	r0, r0, #1
   16fb0:	str	r0, [sp, #4]
   16fb4:	ldr	r0, [sp]
   16fb8:	ldr	r0, [r0, #4]
   16fbc:	str	r0, [sp]
   16fc0:	ldr	r0, [sp]
   16fc4:	movw	r1, #0
   16fc8:	cmp	r0, r1
   16fcc:	beq	16fe0 <__assert_fail@plt+0x576c>
   16fd0:	ldr	r0, [sp, #4]
   16fd4:	add	r0, r0, #1
   16fd8:	str	r0, [sp, #4]
   16fdc:	b	16fb4 <__assert_fail@plt+0x5740>
   16fe0:	b	16fe4 <__assert_fail@plt+0x5770>
   16fe4:	b	16fe8 <__assert_fail@plt+0x5774>
   16fe8:	ldr	r0, [sp, #12]
   16fec:	add	r0, r0, #8
   16ff0:	str	r0, [sp, #12]
   16ff4:	b	16f6c <__assert_fail@plt+0x56f8>
   16ff8:	ldr	r0, [sp, #8]
   16ffc:	ldr	r1, [sp, #16]
   17000:	ldr	r1, [r1, #12]
   17004:	cmp	r0, r1
   17008:	bne	17030 <__assert_fail@plt+0x57bc>
   1700c:	ldr	r0, [sp, #4]
   17010:	ldr	r1, [sp, #16]
   17014:	ldr	r1, [r1, #16]
   17018:	cmp	r0, r1
   1701c:	bne	17030 <__assert_fail@plt+0x57bc>
   17020:	movw	r0, #1
   17024:	and	r0, r0, #1
   17028:	strb	r0, [sp, #23]
   1702c:	b	1703c <__assert_fail@plt+0x57c8>
   17030:	movw	r0, #0
   17034:	and	r0, r0, #1
   17038:	strb	r0, [sp, #23]
   1703c:	ldrb	r0, [sp, #23]
   17040:	and	r0, r0, #1
   17044:	add	sp, sp, #24
   17048:	bx	lr
   1704c:	nop	{0}
   17050:	push	{fp, lr}
   17054:	mov	fp, sp
   17058:	sub	sp, sp, #48	; 0x30
   1705c:	str	r0, [fp, #-4]
   17060:	str	r1, [fp, #-8]
   17064:	ldr	r0, [fp, #-4]
   17068:	bl	16e78 <__assert_fail@plt+0x5604>
   1706c:	str	r0, [fp, #-12]
   17070:	ldr	r0, [fp, #-4]
   17074:	bl	16e48 <__assert_fail@plt+0x55d4>
   17078:	str	r0, [fp, #-16]
   1707c:	ldr	r0, [fp, #-4]
   17080:	bl	16e60 <__assert_fail@plt+0x55ec>
   17084:	str	r0, [fp, #-20]	; 0xffffffec
   17088:	ldr	r0, [fp, #-4]
   1708c:	bl	16e90 <__assert_fail@plt+0x561c>
   17090:	str	r0, [sp, #24]
   17094:	ldr	r0, [fp, #-8]
   17098:	ldr	r2, [fp, #-12]
   1709c:	movw	r1, #16317	; 0x3fbd
   170a0:	movt	r1, #2
   170a4:	bl	116f4 <fprintf@plt>
   170a8:	ldr	r1, [fp, #-8]
   170ac:	ldr	r2, [fp, #-16]
   170b0:	str	r0, [sp, #20]
   170b4:	mov	r0, r1
   170b8:	movw	r1, #16341	; 0x3fd5
   170bc:	movt	r1, #2
   170c0:	bl	116f4 <fprintf@plt>
   170c4:	vldr	d16, [pc, #100]	; 17130 <__assert_fail@plt+0x58bc>
   170c8:	ldr	r1, [fp, #-8]
   170cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   170d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   170d4:	vmov	s0, r3
   170d8:	vcvt.f64.u32	d17, s0
   170dc:	vmul.f64	d16, d16, d17
   170e0:	ldr	r3, [fp, #-16]
   170e4:	vmov	s0, r3
   170e8:	vcvt.f64.u32	d17, s0
   170ec:	vdiv.f64	d16, d16, d17
   170f0:	str	r0, [sp, #16]
   170f4:	mov	r0, r1
   170f8:	movw	r1, #16365	; 0x3fed
   170fc:	movt	r1, #2
   17100:	vstr	d16, [sp]
   17104:	bl	116f4 <fprintf@plt>
   17108:	ldr	r1, [fp, #-8]
   1710c:	ldr	r2, [sp, #24]
   17110:	str	r0, [sp, #12]
   17114:	mov	r0, r1
   17118:	movw	r1, #16398	; 0x400e
   1711c:	movt	r1, #2
   17120:	bl	116f4 <fprintf@plt>
   17124:	mov	sp, fp
   17128:	pop	{fp, pc}
   1712c:	nop	{0}
   17130:	andeq	r0, r0, r0
   17134:	subsmi	r0, r9, r0
   17138:	push	{fp, lr}
   1713c:	mov	fp, sp
   17140:	sub	sp, sp, #24
   17144:	str	r0, [fp, #-8]
   17148:	str	r1, [sp, #12]
   1714c:	ldr	r0, [fp, #-8]
   17150:	ldr	r1, [sp, #12]
   17154:	bl	17210 <__assert_fail@plt+0x599c>
   17158:	str	r0, [sp, #8]
   1715c:	ldr	r0, [sp, #8]
   17160:	ldr	r0, [r0]
   17164:	movw	r1, #0
   17168:	cmp	r0, r1
   1716c:	bne	1717c <__assert_fail@plt+0x5908>
   17170:	movw	r0, #0
   17174:	str	r0, [fp, #-4]
   17178:	b	17204 <__assert_fail@plt+0x5990>
   1717c:	ldr	r0, [sp, #8]
   17180:	str	r0, [sp, #4]
   17184:	ldr	r0, [sp, #4]
   17188:	movw	r1, #0
   1718c:	cmp	r0, r1
   17190:	beq	171fc <__assert_fail@plt+0x5988>
   17194:	ldr	r0, [sp, #12]
   17198:	ldr	r1, [sp, #4]
   1719c:	ldr	r1, [r1]
   171a0:	cmp	r0, r1
   171a4:	beq	171d8 <__assert_fail@plt+0x5964>
   171a8:	ldr	r0, [fp, #-8]
   171ac:	ldr	r0, [r0, #28]
   171b0:	ldr	r1, [sp, #12]
   171b4:	ldr	r2, [sp, #4]
   171b8:	ldr	r2, [r2]
   171bc:	str	r0, [sp]
   171c0:	mov	r0, r1
   171c4:	mov	r1, r2
   171c8:	ldr	r2, [sp]
   171cc:	blx	r2
   171d0:	tst	r0, #1
   171d4:	beq	171e8 <__assert_fail@plt+0x5974>
   171d8:	ldr	r0, [sp, #4]
   171dc:	ldr	r0, [r0]
   171e0:	str	r0, [fp, #-4]
   171e4:	b	17204 <__assert_fail@plt+0x5990>
   171e8:	b	171ec <__assert_fail@plt+0x5978>
   171ec:	ldr	r0, [sp, #4]
   171f0:	ldr	r0, [r0, #4]
   171f4:	str	r0, [sp, #4]
   171f8:	b	17184 <__assert_fail@plt+0x5910>
   171fc:	movw	r0, #0
   17200:	str	r0, [fp, #-4]
   17204:	ldr	r0, [fp, #-4]
   17208:	mov	sp, fp
   1720c:	pop	{fp, pc}
   17210:	push	{fp, lr}
   17214:	mov	fp, sp
   17218:	sub	sp, sp, #16
   1721c:	str	r0, [fp, #-4]
   17220:	str	r1, [sp, #8]
   17224:	ldr	r0, [fp, #-4]
   17228:	ldr	r0, [r0, #24]
   1722c:	ldr	r1, [sp, #8]
   17230:	ldr	r2, [fp, #-4]
   17234:	ldr	r2, [r2, #8]
   17238:	str	r0, [sp]
   1723c:	mov	r0, r1
   17240:	mov	r1, r2
   17244:	ldr	r2, [sp]
   17248:	blx	r2
   1724c:	str	r0, [sp, #4]
   17250:	ldr	r0, [sp, #4]
   17254:	ldr	r1, [fp, #-4]
   17258:	ldr	r1, [r1, #8]
   1725c:	cmp	r0, r1
   17260:	bcc	17268 <__assert_fail@plt+0x59f4>
   17264:	bl	11838 <abort@plt>
   17268:	ldr	r0, [fp, #-4]
   1726c:	ldr	r0, [r0]
   17270:	ldr	r1, [sp, #4]
   17274:	add	r0, r0, r1, lsl #3
   17278:	mov	sp, fp
   1727c:	pop	{fp, pc}
   17280:	push	{fp, lr}
   17284:	mov	fp, sp
   17288:	sub	sp, sp, #16
   1728c:	str	r0, [sp, #8]
   17290:	ldr	r0, [sp, #8]
   17294:	ldr	r0, [r0, #16]
   17298:	cmp	r0, #0
   1729c:	bne	172ac <__assert_fail@plt+0x5a38>
   172a0:	movw	r0, #0
   172a4:	str	r0, [fp, #-4]
   172a8:	b	1730c <__assert_fail@plt+0x5a98>
   172ac:	ldr	r0, [sp, #8]
   172b0:	ldr	r0, [r0]
   172b4:	str	r0, [sp, #4]
   172b8:	ldr	r0, [sp, #4]
   172bc:	ldr	r1, [sp, #8]
   172c0:	ldr	r1, [r1, #4]
   172c4:	cmp	r0, r1
   172c8:	bcc	172d0 <__assert_fail@plt+0x5a5c>
   172cc:	bl	11838 <abort@plt>
   172d0:	ldr	r0, [sp, #4]
   172d4:	ldr	r0, [r0]
   172d8:	movw	r1, #0
   172dc:	cmp	r0, r1
   172e0:	beq	172f4 <__assert_fail@plt+0x5a80>
   172e4:	ldr	r0, [sp, #4]
   172e8:	ldr	r0, [r0]
   172ec:	str	r0, [fp, #-4]
   172f0:	b	1730c <__assert_fail@plt+0x5a98>
   172f4:	b	172f8 <__assert_fail@plt+0x5a84>
   172f8:	b	172fc <__assert_fail@plt+0x5a88>
   172fc:	ldr	r0, [sp, #4]
   17300:	add	r0, r0, #8
   17304:	str	r0, [sp, #4]
   17308:	b	172b8 <__assert_fail@plt+0x5a44>
   1730c:	ldr	r0, [fp, #-4]
   17310:	mov	sp, fp
   17314:	pop	{fp, pc}
   17318:	push	{fp, lr}
   1731c:	mov	fp, sp
   17320:	sub	sp, sp, #24
   17324:	str	r0, [fp, #-8]
   17328:	str	r1, [sp, #12]
   1732c:	ldr	r0, [fp, #-8]
   17330:	ldr	r1, [sp, #12]
   17334:	bl	17210 <__assert_fail@plt+0x599c>
   17338:	str	r0, [sp, #8]
   1733c:	ldr	r0, [sp, #8]
   17340:	str	r0, [sp, #4]
   17344:	ldr	r0, [sp, #4]
   17348:	ldr	r0, [r0]
   1734c:	ldr	r1, [sp, #12]
   17350:	cmp	r0, r1
   17354:	bne	17380 <__assert_fail@plt+0x5b0c>
   17358:	ldr	r0, [sp, #4]
   1735c:	ldr	r0, [r0, #4]
   17360:	movw	r1, #0
   17364:	cmp	r0, r1
   17368:	beq	17380 <__assert_fail@plt+0x5b0c>
   1736c:	ldr	r0, [sp, #4]
   17370:	ldr	r0, [r0, #4]
   17374:	ldr	r0, [r0]
   17378:	str	r0, [fp, #-4]
   1737c:	b	173ec <__assert_fail@plt+0x5b78>
   17380:	ldr	r0, [sp, #4]
   17384:	ldr	r0, [r0, #4]
   17388:	str	r0, [sp, #4]
   1738c:	ldr	r0, [sp, #4]
   17390:	movw	r1, #0
   17394:	cmp	r0, r1
   17398:	bne	17344 <__assert_fail@plt+0x5ad0>
   1739c:	b	173a0 <__assert_fail@plt+0x5b2c>
   173a0:	ldr	r0, [sp, #8]
   173a4:	add	r0, r0, #8
   173a8:	str	r0, [sp, #8]
   173ac:	ldr	r1, [fp, #-8]
   173b0:	ldr	r1, [r1, #4]
   173b4:	cmp	r0, r1
   173b8:	bcs	173e4 <__assert_fail@plt+0x5b70>
   173bc:	ldr	r0, [sp, #8]
   173c0:	ldr	r0, [r0]
   173c4:	movw	r1, #0
   173c8:	cmp	r0, r1
   173cc:	beq	173e0 <__assert_fail@plt+0x5b6c>
   173d0:	ldr	r0, [sp, #8]
   173d4:	ldr	r0, [r0]
   173d8:	str	r0, [fp, #-4]
   173dc:	b	173ec <__assert_fail@plt+0x5b78>
   173e0:	b	173a0 <__assert_fail@plt+0x5b2c>
   173e4:	movw	r0, #0
   173e8:	str	r0, [fp, #-4]
   173ec:	ldr	r0, [fp, #-4]
   173f0:	mov	sp, fp
   173f4:	pop	{fp, pc}
   173f8:	sub	sp, sp, #28
   173fc:	str	r0, [sp, #20]
   17400:	str	r1, [sp, #16]
   17404:	str	r2, [sp, #12]
   17408:	movw	r0, #0
   1740c:	str	r0, [sp, #8]
   17410:	ldr	r0, [sp, #20]
   17414:	ldr	r0, [r0]
   17418:	str	r0, [sp, #4]
   1741c:	ldr	r0, [sp, #4]
   17420:	ldr	r1, [sp, #20]
   17424:	ldr	r1, [r1, #4]
   17428:	cmp	r0, r1
   1742c:	bcs	174c0 <__assert_fail@plt+0x5c4c>
   17430:	ldr	r0, [sp, #4]
   17434:	ldr	r0, [r0]
   17438:	movw	r1, #0
   1743c:	cmp	r0, r1
   17440:	beq	174ac <__assert_fail@plt+0x5c38>
   17444:	ldr	r0, [sp, #4]
   17448:	str	r0, [sp]
   1744c:	ldr	r0, [sp]
   17450:	movw	r1, #0
   17454:	cmp	r0, r1
   17458:	beq	174a8 <__assert_fail@plt+0x5c34>
   1745c:	ldr	r0, [sp, #8]
   17460:	ldr	r1, [sp, #12]
   17464:	cmp	r0, r1
   17468:	bcc	17478 <__assert_fail@plt+0x5c04>
   1746c:	ldr	r0, [sp, #8]
   17470:	str	r0, [sp, #24]
   17474:	b	174c8 <__assert_fail@plt+0x5c54>
   17478:	ldr	r0, [sp]
   1747c:	ldr	r0, [r0]
   17480:	ldr	r1, [sp, #16]
   17484:	ldr	r2, [sp, #8]
   17488:	add	r3, r2, #1
   1748c:	str	r3, [sp, #8]
   17490:	add	r1, r1, r2, lsl #2
   17494:	str	r0, [r1]
   17498:	ldr	r0, [sp]
   1749c:	ldr	r0, [r0, #4]
   174a0:	str	r0, [sp]
   174a4:	b	1744c <__assert_fail@plt+0x5bd8>
   174a8:	b	174ac <__assert_fail@plt+0x5c38>
   174ac:	b	174b0 <__assert_fail@plt+0x5c3c>
   174b0:	ldr	r0, [sp, #4]
   174b4:	add	r0, r0, #8
   174b8:	str	r0, [sp, #4]
   174bc:	b	1741c <__assert_fail@plt+0x5ba8>
   174c0:	ldr	r0, [sp, #8]
   174c4:	str	r0, [sp, #24]
   174c8:	ldr	r0, [sp, #24]
   174cc:	add	sp, sp, #28
   174d0:	bx	lr
   174d4:	push	{fp, lr}
   174d8:	mov	fp, sp
   174dc:	sub	sp, sp, #32
   174e0:	str	r0, [fp, #-8]
   174e4:	str	r1, [fp, #-12]
   174e8:	str	r2, [sp, #16]
   174ec:	movw	r0, #0
   174f0:	str	r0, [sp, #12]
   174f4:	ldr	r0, [fp, #-8]
   174f8:	ldr	r0, [r0]
   174fc:	str	r0, [sp, #8]
   17500:	ldr	r0, [sp, #8]
   17504:	ldr	r1, [fp, #-8]
   17508:	ldr	r1, [r1, #4]
   1750c:	cmp	r0, r1
   17510:	bcs	175ac <__assert_fail@plt+0x5d38>
   17514:	ldr	r0, [sp, #8]
   17518:	ldr	r0, [r0]
   1751c:	movw	r1, #0
   17520:	cmp	r0, r1
   17524:	beq	17598 <__assert_fail@plt+0x5d24>
   17528:	ldr	r0, [sp, #8]
   1752c:	str	r0, [sp, #4]
   17530:	ldr	r0, [sp, #4]
   17534:	movw	r1, #0
   17538:	cmp	r0, r1
   1753c:	beq	17594 <__assert_fail@plt+0x5d20>
   17540:	ldr	r0, [fp, #-12]
   17544:	ldr	r1, [sp, #4]
   17548:	ldr	r1, [r1]
   1754c:	ldr	r2, [sp, #16]
   17550:	str	r0, [sp]
   17554:	mov	r0, r1
   17558:	mov	r1, r2
   1755c:	ldr	r2, [sp]
   17560:	blx	r2
   17564:	tst	r0, #1
   17568:	bne	17578 <__assert_fail@plt+0x5d04>
   1756c:	ldr	r0, [sp, #12]
   17570:	str	r0, [fp, #-4]
   17574:	b	175b4 <__assert_fail@plt+0x5d40>
   17578:	ldr	r0, [sp, #12]
   1757c:	add	r0, r0, #1
   17580:	str	r0, [sp, #12]
   17584:	ldr	r0, [sp, #4]
   17588:	ldr	r0, [r0, #4]
   1758c:	str	r0, [sp, #4]
   17590:	b	17530 <__assert_fail@plt+0x5cbc>
   17594:	b	17598 <__assert_fail@plt+0x5d24>
   17598:	b	1759c <__assert_fail@plt+0x5d28>
   1759c:	ldr	r0, [sp, #8]
   175a0:	add	r0, r0, #8
   175a4:	str	r0, [sp, #8]
   175a8:	b	17500 <__assert_fail@plt+0x5c8c>
   175ac:	ldr	r0, [sp, #12]
   175b0:	str	r0, [fp, #-4]
   175b4:	ldr	r0, [fp, #-4]
   175b8:	mov	sp, fp
   175bc:	pop	{fp, pc}
   175c0:	sub	sp, sp, #16
   175c4:	str	r0, [sp, #12]
   175c8:	str	r1, [sp, #8]
   175cc:	movw	r0, #0
   175d0:	str	r0, [sp, #4]
   175d4:	ldr	r0, [sp, #12]
   175d8:	ldrb	r0, [r0]
   175dc:	strb	r0, [sp, #3]
   175e0:	sxtb	r0, r0
   175e4:	cmp	r0, #0
   175e8:	beq	1761c <__assert_fail@plt+0x5da8>
   175ec:	ldr	r0, [sp, #4]
   175f0:	rsb	r0, r0, r0, lsl #5
   175f4:	ldrb	r1, [sp, #3]
   175f8:	add	r0, r0, r1
   175fc:	ldr	r1, [sp, #8]
   17600:	udiv	r2, r0, r1
   17604:	mls	r0, r2, r1, r0
   17608:	str	r0, [sp, #4]
   1760c:	ldr	r0, [sp, #12]
   17610:	add	r0, r0, #1
   17614:	str	r0, [sp, #12]
   17618:	b	175d4 <__assert_fail@plt+0x5d60>
   1761c:	ldr	r0, [sp, #4]
   17620:	add	sp, sp, #16
   17624:	bx	lr
   17628:	push	{fp, lr}
   1762c:	mov	fp, sp
   17630:	sub	sp, sp, #8
   17634:	movw	r1, #16424	; 0x4028
   17638:	movt	r1, #2
   1763c:	str	r0, [sp, #4]
   17640:	ldr	r0, [sp, #4]
   17644:	movw	r2, #20
   17648:	bl	1152c <memcpy@plt>
   1764c:	mov	sp, fp
   17650:	pop	{fp, pc}
   17654:	push	{fp, lr}
   17658:	mov	fp, sp
   1765c:	sub	sp, sp, #24
   17660:	ldr	ip, [fp, #8]
   17664:	str	r0, [fp, #-8]
   17668:	str	r1, [sp, #12]
   1766c:	str	r2, [sp, #8]
   17670:	str	r3, [sp, #4]
   17674:	ldr	r0, [sp, #8]
   17678:	movw	r1, #0
   1767c:	cmp	r0, r1
   17680:	bne	17690 <__assert_fail@plt+0x5e1c>
   17684:	movw	r0, #30696	; 0x77e8
   17688:	movt	r0, #1
   1768c:	str	r0, [sp, #8]
   17690:	ldr	r0, [sp, #4]
   17694:	movw	r1, #0
   17698:	cmp	r0, r1
   1769c:	bne	176ac <__assert_fail@plt+0x5e38>
   176a0:	movw	r0, #30756	; 0x7824
   176a4:	movt	r0, #1
   176a8:	str	r0, [sp, #4]
   176ac:	movw	r0, #40	; 0x28
   176b0:	bl	1f930 <__assert_fail@plt+0xe0bc>
   176b4:	str	r0, [sp]
   176b8:	ldr	r0, [sp]
   176bc:	movw	r1, #0
   176c0:	cmp	r0, r1
   176c4:	bne	176d4 <__assert_fail@plt+0x5e60>
   176c8:	movw	r0, #0
   176cc:	str	r0, [fp, #-4]
   176d0:	b	177dc <__assert_fail@plt+0x5f68>
   176d4:	ldr	r0, [sp, #12]
   176d8:	movw	r1, #0
   176dc:	cmp	r0, r1
   176e0:	bne	176f0 <__assert_fail@plt+0x5e7c>
   176e4:	movw	r0, #16424	; 0x4028
   176e8:	movt	r0, #2
   176ec:	str	r0, [sp, #12]
   176f0:	ldr	r0, [sp, #12]
   176f4:	ldr	r1, [sp]
   176f8:	str	r0, [r1, #20]
   176fc:	ldr	r0, [sp]
   17700:	bl	17850 <__assert_fail@plt+0x5fdc>
   17704:	tst	r0, #1
   17708:	bne	17710 <__assert_fail@plt+0x5e9c>
   1770c:	b	177cc <__assert_fail@plt+0x5f58>
   17710:	ldr	r0, [fp, #-8]
   17714:	ldr	r1, [sp, #12]
   17718:	bl	179a4 <__assert_fail@plt+0x6130>
   1771c:	ldr	r1, [sp]
   17720:	str	r0, [r1, #8]
   17724:	ldr	r0, [sp]
   17728:	ldr	r0, [r0, #8]
   1772c:	cmp	r0, #0
   17730:	bne	17738 <__assert_fail@plt+0x5ec4>
   17734:	b	177cc <__assert_fail@plt+0x5f58>
   17738:	ldr	r0, [sp]
   1773c:	ldr	r0, [r0, #8]
   17740:	movw	r1, #8
   17744:	bl	1f894 <__assert_fail@plt+0xe020>
   17748:	ldr	r1, [sp]
   1774c:	str	r0, [r1]
   17750:	ldr	r0, [sp]
   17754:	ldr	r0, [r0]
   17758:	movw	r1, #0
   1775c:	cmp	r0, r1
   17760:	bne	17768 <__assert_fail@plt+0x5ef4>
   17764:	b	177cc <__assert_fail@plt+0x5f58>
   17768:	ldr	r0, [sp]
   1776c:	ldr	r1, [r0]
   17770:	ldr	r0, [r0, #8]
   17774:	add	r0, r1, r0, lsl #3
   17778:	ldr	r1, [sp]
   1777c:	str	r0, [r1, #4]
   17780:	ldr	r0, [sp]
   17784:	movw	r1, #0
   17788:	str	r1, [r0, #12]
   1778c:	ldr	r0, [sp]
   17790:	str	r1, [r0, #16]
   17794:	ldr	r0, [sp, #8]
   17798:	ldr	r2, [sp]
   1779c:	str	r0, [r2, #24]
   177a0:	ldr	r0, [sp, #4]
   177a4:	ldr	r2, [sp]
   177a8:	str	r0, [r2, #28]
   177ac:	ldr	r0, [fp, #8]
   177b0:	ldr	r2, [sp]
   177b4:	str	r0, [r2, #32]
   177b8:	ldr	r0, [sp]
   177bc:	str	r1, [r0, #36]	; 0x24
   177c0:	ldr	r0, [sp]
   177c4:	str	r0, [fp, #-4]
   177c8:	b	177dc <__assert_fail@plt+0x5f68>
   177cc:	ldr	r0, [sp]
   177d0:	bl	2082c <__assert_fail@plt+0xefb8>
   177d4:	movw	r0, #0
   177d8:	str	r0, [fp, #-4]
   177dc:	ldr	r0, [fp, #-4]
   177e0:	mov	sp, fp
   177e4:	pop	{fp, pc}
   177e8:	push	{fp, lr}
   177ec:	mov	fp, sp
   177f0:	sub	sp, sp, #16
   177f4:	str	r0, [fp, #-4]
   177f8:	str	r1, [sp, #8]
   177fc:	ldr	r0, [fp, #-4]
   17800:	mov	r1, #3
   17804:	bl	1fd7c <__assert_fail@plt+0xe508>
   17808:	str	r0, [sp, #4]
   1780c:	ldr	r0, [sp, #4]
   17810:	ldr	r1, [sp, #8]
   17814:	udiv	r2, r0, r1
   17818:	mls	r0, r2, r1, r0
   1781c:	mov	sp, fp
   17820:	pop	{fp, pc}
   17824:	sub	sp, sp, #8
   17828:	str	r0, [sp, #4]
   1782c:	str	r1, [sp]
   17830:	ldr	r0, [sp, #4]
   17834:	ldr	r1, [sp]
   17838:	cmp	r0, r1
   1783c:	movw	r0, #0
   17840:	moveq	r0, #1
   17844:	and	r0, r0, #1
   17848:	add	sp, sp, #8
   1784c:	bx	lr
   17850:	sub	sp, sp, #16
   17854:	str	r0, [sp, #8]
   17858:	ldr	r0, [sp, #8]
   1785c:	ldr	r0, [r0, #20]
   17860:	str	r0, [sp, #4]
   17864:	ldr	r0, [sp, #4]
   17868:	movw	r1, #16424	; 0x4028
   1786c:	movt	r1, #2
   17870:	cmp	r0, r1
   17874:	bne	17888 <__assert_fail@plt+0x6014>
   17878:	movw	r0, #1
   1787c:	and	r0, r0, #1
   17880:	strb	r0, [sp, #15]
   17884:	b	1798c <__assert_fail@plt+0x6118>
   17888:	vldr	s0, [pc, #268]	; 1799c <__assert_fail@plt+0x6128>
   1788c:	vstr	s0, [sp]
   17890:	vldr	s0, [sp]
   17894:	ldr	r0, [sp, #4]
   17898:	vldr	s2, [r0, #8]
   1789c:	vcmpe.f32	s0, s2
   178a0:	vmrs	APSR_nzcv, fpscr
   178a4:	bpl	17970 <__assert_fail@plt+0x60fc>
   178a8:	ldr	r0, [sp, #4]
   178ac:	vldr	s0, [r0, #8]
   178b0:	vldr	s2, [sp]
   178b4:	vmov.f32	s4, #112	; 0x3f800000  1.0
   178b8:	vsub.f32	s2, s4, s2
   178bc:	vcmpe.f32	s0, s2
   178c0:	vmrs	APSR_nzcv, fpscr
   178c4:	bpl	17970 <__assert_fail@plt+0x60fc>
   178c8:	vldr	s0, [sp]
   178cc:	vmov.f32	s2, #112	; 0x3f800000  1.0
   178d0:	vadd.f32	s0, s2, s0
   178d4:	ldr	r0, [sp, #4]
   178d8:	vldr	s2, [r0, #12]
   178dc:	vcmpe.f32	s0, s2
   178e0:	vmrs	APSR_nzcv, fpscr
   178e4:	bpl	17970 <__assert_fail@plt+0x60fc>
   178e8:	vldr	s0, [pc, #176]	; 179a0 <__assert_fail@plt+0x612c>
   178ec:	ldr	r0, [sp, #4]
   178f0:	vldr	s2, [r0]
   178f4:	vcmpe.f32	s0, s2
   178f8:	vmrs	APSR_nzcv, fpscr
   178fc:	bhi	17970 <__assert_fail@plt+0x60fc>
   17900:	ldr	r0, [sp, #4]
   17904:	vldr	s0, [r0]
   17908:	vldr	s2, [sp]
   1790c:	vadd.f32	s0, s0, s2
   17910:	ldr	r0, [sp, #4]
   17914:	vldr	s2, [r0, #4]
   17918:	vcmpe.f32	s0, s2
   1791c:	vmrs	APSR_nzcv, fpscr
   17920:	bpl	17970 <__assert_fail@plt+0x60fc>
   17924:	ldr	r0, [sp, #4]
   17928:	vldr	s0, [r0, #4]
   1792c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17930:	vcmpe.f32	s0, s2
   17934:	vmrs	APSR_nzcv, fpscr
   17938:	bhi	17970 <__assert_fail@plt+0x60fc>
   1793c:	ldr	r0, [sp, #4]
   17940:	vldr	s0, [r0]
   17944:	vldr	s2, [sp]
   17948:	vadd.f32	s0, s0, s2
   1794c:	ldr	r0, [sp, #4]
   17950:	vldr	s2, [r0, #8]
   17954:	vcmpe.f32	s0, s2
   17958:	vmrs	APSR_nzcv, fpscr
   1795c:	bpl	17970 <__assert_fail@plt+0x60fc>
   17960:	movw	r0, #1
   17964:	and	r0, r0, #1
   17968:	strb	r0, [sp, #15]
   1796c:	b	1798c <__assert_fail@plt+0x6118>
   17970:	ldr	r0, [sp, #8]
   17974:	movw	r1, #16424	; 0x4028
   17978:	movt	r1, #2
   1797c:	str	r1, [r0, #20]
   17980:	movw	r0, #0
   17984:	and	r0, r0, #1
   17988:	strb	r0, [sp, #15]
   1798c:	ldrb	r0, [sp, #15]
   17990:	and	r0, r0, #1
   17994:	add	sp, sp, #16
   17998:	bx	lr
   1799c:	stclcc	12, cr12, [ip, #820]	; 0x334
   179a0:	andeq	r0, r0, r0
   179a4:	push	{fp, lr}
   179a8:	mov	fp, sp
   179ac:	sub	sp, sp, #16
   179b0:	str	r0, [sp, #8]
   179b4:	str	r1, [sp, #4]
   179b8:	ldr	r0, [sp, #4]
   179bc:	ldrb	r0, [r0, #16]
   179c0:	tst	r0, #1
   179c4:	bne	17a14 <__assert_fail@plt+0x61a0>
   179c8:	vldr	s0, [pc, #128]	; 17a50 <__assert_fail@plt+0x61dc>
   179cc:	ldr	r0, [sp, #8]
   179d0:	vmov	s2, r0
   179d4:	vcvt.f32.u32	s2, s2
   179d8:	ldr	r0, [sp, #4]
   179dc:	vldr	s4, [r0, #8]
   179e0:	vdiv.f32	s2, s2, s4
   179e4:	vstr	s2, [sp]
   179e8:	vldr	s2, [sp]
   179ec:	vcmpe.f32	s0, s2
   179f0:	vmrs	APSR_nzcv, fpscr
   179f4:	bhi	17a04 <__assert_fail@plt+0x6190>
   179f8:	movw	r0, #0
   179fc:	str	r0, [fp, #-4]
   17a00:	b	17a44 <__assert_fail@plt+0x61d0>
   17a04:	vldr	s0, [sp]
   17a08:	vcvt.u32.f32	s0, s0
   17a0c:	vmov	r0, s0
   17a10:	str	r0, [sp, #8]
   17a14:	ldr	r0, [sp, #8]
   17a18:	bl	18914 <__assert_fail@plt+0x70a0>
   17a1c:	ldr	r1, [pc, #48]	; 17a54 <__assert_fail@plt+0x61e0>
   17a20:	str	r0, [sp, #8]
   17a24:	ldr	r0, [sp, #8]
   17a28:	cmp	r1, r0
   17a2c:	bcs	17a3c <__assert_fail@plt+0x61c8>
   17a30:	movw	r0, #0
   17a34:	str	r0, [fp, #-4]
   17a38:	b	17a44 <__assert_fail@plt+0x61d0>
   17a3c:	ldr	r0, [sp, #8]
   17a40:	str	r0, [fp, #-4]
   17a44:	ldr	r0, [fp, #-4]
   17a48:	mov	sp, fp
   17a4c:	pop	{fp, pc}
   17a50:	svcmi	0x00800000
   17a54:	svcne	0x00ffffff
   17a58:	push	{fp, lr}
   17a5c:	mov	fp, sp
   17a60:	sub	sp, sp, #24
   17a64:	str	r0, [fp, #-4]
   17a68:	ldr	r0, [fp, #-4]
   17a6c:	ldr	r0, [r0]
   17a70:	str	r0, [fp, #-8]
   17a74:	ldr	r0, [fp, #-8]
   17a78:	ldr	r1, [fp, #-4]
   17a7c:	ldr	r1, [r1, #4]
   17a80:	cmp	r0, r1
   17a84:	bcs	17b88 <__assert_fail@plt+0x6314>
   17a88:	ldr	r0, [fp, #-8]
   17a8c:	ldr	r0, [r0]
   17a90:	movw	r1, #0
   17a94:	cmp	r0, r1
   17a98:	beq	17b74 <__assert_fail@plt+0x6300>
   17a9c:	ldr	r0, [fp, #-8]
   17aa0:	ldr	r0, [r0, #4]
   17aa4:	str	r0, [sp, #12]
   17aa8:	ldr	r0, [sp, #12]
   17aac:	movw	r1, #0
   17ab0:	cmp	r0, r1
   17ab4:	beq	17b2c <__assert_fail@plt+0x62b8>
   17ab8:	ldr	r0, [fp, #-4]
   17abc:	ldr	r0, [r0, #32]
   17ac0:	movw	r1, #0
   17ac4:	cmp	r0, r1
   17ac8:	beq	17aec <__assert_fail@plt+0x6278>
   17acc:	ldr	r0, [fp, #-4]
   17ad0:	ldr	r0, [r0, #32]
   17ad4:	ldr	r1, [sp, #12]
   17ad8:	ldr	r1, [r1]
   17adc:	str	r0, [sp, #4]
   17ae0:	mov	r0, r1
   17ae4:	ldr	r1, [sp, #4]
   17ae8:	blx	r1
   17aec:	ldr	r0, [sp, #12]
   17af0:	movw	r1, #0
   17af4:	str	r1, [r0]
   17af8:	ldr	r0, [sp, #12]
   17afc:	ldr	r0, [r0, #4]
   17b00:	str	r0, [sp, #8]
   17b04:	ldr	r0, [fp, #-4]
   17b08:	ldr	r0, [r0, #36]	; 0x24
   17b0c:	ldr	r1, [sp, #12]
   17b10:	str	r0, [r1, #4]
   17b14:	ldr	r0, [sp, #12]
   17b18:	ldr	r1, [fp, #-4]
   17b1c:	str	r0, [r1, #36]	; 0x24
   17b20:	ldr	r0, [sp, #8]
   17b24:	str	r0, [sp, #12]
   17b28:	b	17aa8 <__assert_fail@plt+0x6234>
   17b2c:	ldr	r0, [fp, #-4]
   17b30:	ldr	r0, [r0, #32]
   17b34:	movw	r1, #0
   17b38:	cmp	r0, r1
   17b3c:	beq	17b60 <__assert_fail@plt+0x62ec>
   17b40:	ldr	r0, [fp, #-4]
   17b44:	ldr	r0, [r0, #32]
   17b48:	ldr	r1, [fp, #-8]
   17b4c:	ldr	r1, [r1]
   17b50:	str	r0, [sp]
   17b54:	mov	r0, r1
   17b58:	ldr	r1, [sp]
   17b5c:	blx	r1
   17b60:	ldr	r0, [fp, #-8]
   17b64:	movw	r1, #0
   17b68:	str	r1, [r0]
   17b6c:	ldr	r0, [fp, #-8]
   17b70:	str	r1, [r0, #4]
   17b74:	b	17b78 <__assert_fail@plt+0x6304>
   17b78:	ldr	r0, [fp, #-8]
   17b7c:	add	r0, r0, #8
   17b80:	str	r0, [fp, #-8]
   17b84:	b	17a74 <__assert_fail@plt+0x6200>
   17b88:	ldr	r0, [fp, #-4]
   17b8c:	movw	r1, #0
   17b90:	str	r1, [r0, #12]
   17b94:	ldr	r0, [fp, #-4]
   17b98:	str	r1, [r0, #16]
   17b9c:	mov	sp, fp
   17ba0:	pop	{fp, pc}
   17ba4:	push	{fp, lr}
   17ba8:	mov	fp, sp
   17bac:	sub	sp, sp, #24
   17bb0:	str	r0, [fp, #-4]
   17bb4:	ldr	r0, [fp, #-4]
   17bb8:	ldr	r0, [r0, #32]
   17bbc:	movw	r1, #0
   17bc0:	cmp	r0, r1
   17bc4:	beq	17c70 <__assert_fail@plt+0x63fc>
   17bc8:	ldr	r0, [fp, #-4]
   17bcc:	ldr	r0, [r0, #16]
   17bd0:	cmp	r0, #0
   17bd4:	beq	17c70 <__assert_fail@plt+0x63fc>
   17bd8:	ldr	r0, [fp, #-4]
   17bdc:	ldr	r0, [r0]
   17be0:	str	r0, [fp, #-8]
   17be4:	ldr	r0, [fp, #-8]
   17be8:	ldr	r1, [fp, #-4]
   17bec:	ldr	r1, [r1, #4]
   17bf0:	cmp	r0, r1
   17bf4:	bcs	17c6c <__assert_fail@plt+0x63f8>
   17bf8:	ldr	r0, [fp, #-8]
   17bfc:	ldr	r0, [r0]
   17c00:	movw	r1, #0
   17c04:	cmp	r0, r1
   17c08:	beq	17c58 <__assert_fail@plt+0x63e4>
   17c0c:	ldr	r0, [fp, #-8]
   17c10:	str	r0, [sp, #12]
   17c14:	ldr	r0, [sp, #12]
   17c18:	movw	r1, #0
   17c1c:	cmp	r0, r1
   17c20:	beq	17c54 <__assert_fail@plt+0x63e0>
   17c24:	ldr	r0, [fp, #-4]
   17c28:	ldr	r0, [r0, #32]
   17c2c:	ldr	r1, [sp, #12]
   17c30:	ldr	r1, [r1]
   17c34:	str	r0, [sp, #4]
   17c38:	mov	r0, r1
   17c3c:	ldr	r1, [sp, #4]
   17c40:	blx	r1
   17c44:	ldr	r0, [sp, #12]
   17c48:	ldr	r0, [r0, #4]
   17c4c:	str	r0, [sp, #12]
   17c50:	b	17c14 <__assert_fail@plt+0x63a0>
   17c54:	b	17c58 <__assert_fail@plt+0x63e4>
   17c58:	b	17c5c <__assert_fail@plt+0x63e8>
   17c5c:	ldr	r0, [fp, #-8]
   17c60:	add	r0, r0, #8
   17c64:	str	r0, [fp, #-8]
   17c68:	b	17be4 <__assert_fail@plt+0x6370>
   17c6c:	b	17c70 <__assert_fail@plt+0x63fc>
   17c70:	ldr	r0, [fp, #-4]
   17c74:	ldr	r0, [r0]
   17c78:	str	r0, [fp, #-8]
   17c7c:	ldr	r0, [fp, #-8]
   17c80:	ldr	r1, [fp, #-4]
   17c84:	ldr	r1, [r1, #4]
   17c88:	cmp	r0, r1
   17c8c:	bcs	17ce0 <__assert_fail@plt+0x646c>
   17c90:	ldr	r0, [fp, #-8]
   17c94:	ldr	r0, [r0, #4]
   17c98:	str	r0, [sp, #12]
   17c9c:	ldr	r0, [sp, #12]
   17ca0:	movw	r1, #0
   17ca4:	cmp	r0, r1
   17ca8:	beq	17ccc <__assert_fail@plt+0x6458>
   17cac:	ldr	r0, [sp, #12]
   17cb0:	ldr	r0, [r0, #4]
   17cb4:	str	r0, [sp, #8]
   17cb8:	ldr	r0, [sp, #12]
   17cbc:	bl	2082c <__assert_fail@plt+0xefb8>
   17cc0:	ldr	r0, [sp, #8]
   17cc4:	str	r0, [sp, #12]
   17cc8:	b	17c9c <__assert_fail@plt+0x6428>
   17ccc:	b	17cd0 <__assert_fail@plt+0x645c>
   17cd0:	ldr	r0, [fp, #-8]
   17cd4:	add	r0, r0, #8
   17cd8:	str	r0, [fp, #-8]
   17cdc:	b	17c7c <__assert_fail@plt+0x6408>
   17ce0:	ldr	r0, [fp, #-4]
   17ce4:	ldr	r0, [r0, #36]	; 0x24
   17ce8:	str	r0, [sp, #12]
   17cec:	ldr	r0, [sp, #12]
   17cf0:	movw	r1, #0
   17cf4:	cmp	r0, r1
   17cf8:	beq	17d1c <__assert_fail@plt+0x64a8>
   17cfc:	ldr	r0, [sp, #12]
   17d00:	ldr	r0, [r0, #4]
   17d04:	str	r0, [sp, #8]
   17d08:	ldr	r0, [sp, #12]
   17d0c:	bl	2082c <__assert_fail@plt+0xefb8>
   17d10:	ldr	r0, [sp, #8]
   17d14:	str	r0, [sp, #12]
   17d18:	b	17cec <__assert_fail@plt+0x6478>
   17d1c:	ldr	r0, [fp, #-4]
   17d20:	ldr	r0, [r0]
   17d24:	bl	2082c <__assert_fail@plt+0xefb8>
   17d28:	ldr	r0, [fp, #-4]
   17d2c:	bl	2082c <__assert_fail@plt+0xefb8>
   17d30:	mov	sp, fp
   17d34:	pop	{fp, pc}
   17d38:	push	{fp, lr}
   17d3c:	mov	fp, sp
   17d40:	sub	sp, sp, #64	; 0x40
   17d44:	str	r0, [fp, #-8]
   17d48:	str	r1, [fp, #-12]
   17d4c:	ldr	r0, [fp, #-12]
   17d50:	ldr	r1, [fp, #-8]
   17d54:	ldr	r1, [r1, #20]
   17d58:	bl	179a4 <__assert_fail@plt+0x6130>
   17d5c:	str	r0, [sp, #4]
   17d60:	ldr	r0, [sp, #4]
   17d64:	cmp	r0, #0
   17d68:	bne	17d7c <__assert_fail@plt+0x6508>
   17d6c:	movw	r0, #0
   17d70:	and	r0, r0, #1
   17d74:	strb	r0, [fp, #-1]
   17d78:	b	17f54 <__assert_fail@plt+0x66e0>
   17d7c:	ldr	r0, [sp, #4]
   17d80:	ldr	r1, [fp, #-8]
   17d84:	ldr	r1, [r1, #8]
   17d88:	cmp	r0, r1
   17d8c:	bne	17da0 <__assert_fail@plt+0x652c>
   17d90:	movw	r0, #1
   17d94:	and	r0, r0, #1
   17d98:	strb	r0, [fp, #-1]
   17d9c:	b	17f54 <__assert_fail@plt+0x66e0>
   17da0:	add	r0, sp, #12
   17da4:	str	r0, [sp, #8]
   17da8:	ldr	r0, [sp, #4]
   17dac:	movw	r1, #8
   17db0:	bl	1f894 <__assert_fail@plt+0xe020>
   17db4:	ldr	r1, [sp, #8]
   17db8:	str	r0, [r1]
   17dbc:	ldr	r0, [sp, #8]
   17dc0:	ldr	r0, [r0]
   17dc4:	movw	r1, #0
   17dc8:	cmp	r0, r1
   17dcc:	bne	17de0 <__assert_fail@plt+0x656c>
   17dd0:	movw	r0, #0
   17dd4:	and	r0, r0, #1
   17dd8:	strb	r0, [fp, #-1]
   17ddc:	b	17f54 <__assert_fail@plt+0x66e0>
   17de0:	ldr	r0, [sp, #4]
   17de4:	ldr	r1, [sp, #8]
   17de8:	str	r0, [r1, #8]
   17dec:	ldr	r0, [sp, #8]
   17df0:	ldr	r0, [r0]
   17df4:	ldr	r1, [sp, #4]
   17df8:	add	r0, r0, r1, lsl #3
   17dfc:	ldr	r1, [sp, #8]
   17e00:	str	r0, [r1, #4]
   17e04:	ldr	r0, [sp, #8]
   17e08:	movw	r1, #0
   17e0c:	str	r1, [r0, #12]
   17e10:	ldr	r0, [sp, #8]
   17e14:	str	r1, [r0, #16]
   17e18:	ldr	r0, [fp, #-8]
   17e1c:	ldr	r0, [r0, #20]
   17e20:	ldr	r1, [sp, #8]
   17e24:	str	r0, [r1, #20]
   17e28:	ldr	r0, [fp, #-8]
   17e2c:	ldr	r0, [r0, #24]
   17e30:	ldr	r1, [sp, #8]
   17e34:	str	r0, [r1, #24]
   17e38:	ldr	r0, [fp, #-8]
   17e3c:	ldr	r0, [r0, #28]
   17e40:	ldr	r1, [sp, #8]
   17e44:	str	r0, [r1, #28]
   17e48:	ldr	r0, [fp, #-8]
   17e4c:	ldr	r0, [r0, #32]
   17e50:	ldr	r1, [sp, #8]
   17e54:	str	r0, [r1, #32]
   17e58:	ldr	r0, [fp, #-8]
   17e5c:	ldr	r0, [r0, #36]	; 0x24
   17e60:	ldr	r1, [sp, #8]
   17e64:	str	r0, [r1, #36]	; 0x24
   17e68:	ldr	r0, [sp, #8]
   17e6c:	ldr	r1, [fp, #-8]
   17e70:	movw	r2, #0
   17e74:	and	r2, r2, #1
   17e78:	bl	17f64 <__assert_fail@plt+0x66f0>
   17e7c:	tst	r0, #1
   17e80:	beq	17ef0 <__assert_fail@plt+0x667c>
   17e84:	ldr	r0, [fp, #-8]
   17e88:	ldr	r0, [r0]
   17e8c:	bl	2082c <__assert_fail@plt+0xefb8>
   17e90:	ldr	r0, [sp, #8]
   17e94:	ldr	r0, [r0]
   17e98:	ldr	r1, [fp, #-8]
   17e9c:	str	r0, [r1]
   17ea0:	ldr	r0, [sp, #8]
   17ea4:	ldr	r0, [r0, #4]
   17ea8:	ldr	r1, [fp, #-8]
   17eac:	str	r0, [r1, #4]
   17eb0:	ldr	r0, [sp, #8]
   17eb4:	ldr	r0, [r0, #8]
   17eb8:	ldr	r1, [fp, #-8]
   17ebc:	str	r0, [r1, #8]
   17ec0:	ldr	r0, [sp, #8]
   17ec4:	ldr	r0, [r0, #12]
   17ec8:	ldr	r1, [fp, #-8]
   17ecc:	str	r0, [r1, #12]
   17ed0:	ldr	r0, [sp, #8]
   17ed4:	ldr	r0, [r0, #36]	; 0x24
   17ed8:	ldr	r1, [fp, #-8]
   17edc:	str	r0, [r1, #36]	; 0x24
   17ee0:	movw	r0, #1
   17ee4:	and	r0, r0, #1
   17ee8:	strb	r0, [fp, #-1]
   17eec:	b	17f54 <__assert_fail@plt+0x66e0>
   17ef0:	ldr	r0, [sp, #8]
   17ef4:	ldr	r0, [r0, #36]	; 0x24
   17ef8:	ldr	r1, [fp, #-8]
   17efc:	str	r0, [r1, #36]	; 0x24
   17f00:	ldr	r0, [fp, #-8]
   17f04:	ldr	r1, [sp, #8]
   17f08:	movw	r2, #1
   17f0c:	and	r2, r2, #1
   17f10:	bl	17f64 <__assert_fail@plt+0x66f0>
   17f14:	tst	r0, #1
   17f18:	beq	17f38 <__assert_fail@plt+0x66c4>
   17f1c:	ldr	r0, [fp, #-8]
   17f20:	ldr	r1, [sp, #8]
   17f24:	movw	r2, #0
   17f28:	and	r2, r2, #1
   17f2c:	bl	17f64 <__assert_fail@plt+0x66f0>
   17f30:	tst	r0, #1
   17f34:	bne	17f3c <__assert_fail@plt+0x66c8>
   17f38:	bl	11838 <abort@plt>
   17f3c:	ldr	r0, [sp, #8]
   17f40:	ldr	r0, [r0]
   17f44:	bl	2082c <__assert_fail@plt+0xefb8>
   17f48:	movw	r0, #0
   17f4c:	and	r0, r0, #1
   17f50:	strb	r0, [fp, #-1]
   17f54:	ldrb	r0, [fp, #-1]
   17f58:	and	r0, r0, #1
   17f5c:	mov	sp, fp
   17f60:	pop	{fp, pc}
   17f64:	push	{fp, lr}
   17f68:	mov	fp, sp
   17f6c:	sub	sp, sp, #40	; 0x28
   17f70:	str	r0, [fp, #-8]
   17f74:	str	r1, [fp, #-12]
   17f78:	and	r0, r2, #1
   17f7c:	strb	r0, [fp, #-13]
   17f80:	ldr	r0, [fp, #-12]
   17f84:	ldr	r0, [r0]
   17f88:	str	r0, [sp, #20]
   17f8c:	ldr	r0, [sp, #20]
   17f90:	ldr	r1, [fp, #-12]
   17f94:	ldr	r1, [r1, #4]
   17f98:	cmp	r0, r1
   17f9c:	bcs	18158 <__assert_fail@plt+0x68e4>
   17fa0:	ldr	r0, [sp, #20]
   17fa4:	ldr	r0, [r0]
   17fa8:	movw	r1, #0
   17fac:	cmp	r0, r1
   17fb0:	beq	18144 <__assert_fail@plt+0x68d0>
   17fb4:	ldr	r0, [sp, #20]
   17fb8:	ldr	r0, [r0, #4]
   17fbc:	str	r0, [sp, #16]
   17fc0:	ldr	r0, [sp, #16]
   17fc4:	movw	r1, #0
   17fc8:	cmp	r0, r1
   17fcc:	beq	18064 <__assert_fail@plt+0x67f0>
   17fd0:	ldr	r0, [sp, #16]
   17fd4:	ldr	r0, [r0]
   17fd8:	str	r0, [sp, #8]
   17fdc:	ldr	r0, [fp, #-8]
   17fe0:	ldr	r1, [sp, #8]
   17fe4:	bl	17210 <__assert_fail@plt+0x599c>
   17fe8:	str	r0, [sp, #4]
   17fec:	ldr	r0, [sp, #16]
   17ff0:	ldr	r0, [r0, #4]
   17ff4:	str	r0, [sp, #12]
   17ff8:	ldr	r0, [sp, #4]
   17ffc:	ldr	r0, [r0]
   18000:	movw	r1, #0
   18004:	cmp	r0, r1
   18008:	beq	1802c <__assert_fail@plt+0x67b8>
   1800c:	ldr	r0, [sp, #4]
   18010:	ldr	r0, [r0, #4]
   18014:	ldr	r1, [sp, #16]
   18018:	str	r0, [r1, #4]
   1801c:	ldr	r0, [sp, #16]
   18020:	ldr	r1, [sp, #4]
   18024:	str	r0, [r1, #4]
   18028:	b	18054 <__assert_fail@plt+0x67e0>
   1802c:	ldr	r0, [sp, #8]
   18030:	ldr	r1, [sp, #4]
   18034:	str	r0, [r1]
   18038:	ldr	r0, [fp, #-8]
   1803c:	ldr	r1, [r0, #12]
   18040:	add	r1, r1, #1
   18044:	str	r1, [r0, #12]
   18048:	ldr	r0, [fp, #-8]
   1804c:	ldr	r1, [sp, #16]
   18050:	bl	18a6c <__assert_fail@plt+0x71f8>
   18054:	b	18058 <__assert_fail@plt+0x67e4>
   18058:	ldr	r0, [sp, #12]
   1805c:	str	r0, [sp, #16]
   18060:	b	17fc0 <__assert_fail@plt+0x674c>
   18064:	ldr	r0, [sp, #20]
   18068:	ldr	r0, [r0]
   1806c:	str	r0, [sp, #8]
   18070:	ldr	r0, [sp, #20]
   18074:	movw	r1, #0
   18078:	str	r1, [r0, #4]
   1807c:	ldrb	r0, [fp, #-13]
   18080:	tst	r0, #1
   18084:	beq	1808c <__assert_fail@plt+0x6818>
   18088:	b	18148 <__assert_fail@plt+0x68d4>
   1808c:	ldr	r0, [fp, #-8]
   18090:	ldr	r1, [sp, #8]
   18094:	bl	17210 <__assert_fail@plt+0x599c>
   18098:	str	r0, [sp, #4]
   1809c:	ldr	r0, [sp, #4]
   180a0:	ldr	r0, [r0]
   180a4:	movw	r1, #0
   180a8:	cmp	r0, r1
   180ac:	beq	18108 <__assert_fail@plt+0x6894>
   180b0:	ldr	r0, [fp, #-8]
   180b4:	bl	1861c <__assert_fail@plt+0x6da8>
   180b8:	str	r0, [sp]
   180bc:	ldr	r0, [sp]
   180c0:	movw	r1, #0
   180c4:	cmp	r0, r1
   180c8:	bne	180dc <__assert_fail@plt+0x6868>
   180cc:	movw	r0, #0
   180d0:	and	r0, r0, #1
   180d4:	strb	r0, [fp, #-1]
   180d8:	b	18164 <__assert_fail@plt+0x68f0>
   180dc:	ldr	r0, [sp, #8]
   180e0:	ldr	r1, [sp]
   180e4:	str	r0, [r1]
   180e8:	ldr	r0, [sp, #4]
   180ec:	ldr	r0, [r0, #4]
   180f0:	ldr	r1, [sp]
   180f4:	str	r0, [r1, #4]
   180f8:	ldr	r0, [sp]
   180fc:	ldr	r1, [sp, #4]
   18100:	str	r0, [r1, #4]
   18104:	b	18124 <__assert_fail@plt+0x68b0>
   18108:	ldr	r0, [sp, #8]
   1810c:	ldr	r1, [sp, #4]
   18110:	str	r0, [r1]
   18114:	ldr	r0, [fp, #-8]
   18118:	ldr	r1, [r0, #12]
   1811c:	add	r1, r1, #1
   18120:	str	r1, [r0, #12]
   18124:	ldr	r0, [sp, #20]
   18128:	movw	r1, #0
   1812c:	str	r1, [r0]
   18130:	ldr	r0, [fp, #-12]
   18134:	ldr	r1, [r0, #12]
   18138:	mvn	r2, #0
   1813c:	add	r1, r1, r2
   18140:	str	r1, [r0, #12]
   18144:	b	18148 <__assert_fail@plt+0x68d4>
   18148:	ldr	r0, [sp, #20]
   1814c:	add	r0, r0, #8
   18150:	str	r0, [sp, #20]
   18154:	b	17f8c <__assert_fail@plt+0x6718>
   18158:	movw	r0, #1
   1815c:	and	r0, r0, #1
   18160:	strb	r0, [fp, #-1]
   18164:	ldrb	r0, [fp, #-1]
   18168:	and	r0, r0, #1
   1816c:	mov	sp, fp
   18170:	pop	{fp, pc}
   18174:	push	{fp, lr}
   18178:	mov	fp, sp
   1817c:	sub	sp, sp, #40	; 0x28
   18180:	str	r0, [fp, #-8]
   18184:	str	r1, [fp, #-12]
   18188:	str	r2, [fp, #-16]
   1818c:	ldr	r0, [fp, #-12]
   18190:	movw	r1, #0
   18194:	cmp	r0, r1
   18198:	bne	181a0 <__assert_fail@plt+0x692c>
   1819c:	bl	11838 <abort@plt>
   181a0:	ldr	r0, [fp, #-8]
   181a4:	ldr	r1, [fp, #-12]
   181a8:	add	r2, sp, #16
   181ac:	movw	r3, #0
   181b0:	and	r3, r3, #1
   181b4:	bl	18420 <__assert_fail@plt+0x6bac>
   181b8:	str	r0, [sp, #20]
   181bc:	movw	r1, #0
   181c0:	cmp	r0, r1
   181c4:	beq	181f0 <__assert_fail@plt+0x697c>
   181c8:	ldr	r0, [fp, #-16]
   181cc:	movw	r1, #0
   181d0:	cmp	r0, r1
   181d4:	beq	181e4 <__assert_fail@plt+0x6970>
   181d8:	ldr	r0, [sp, #20]
   181dc:	ldr	r1, [fp, #-16]
   181e0:	str	r0, [r1]
   181e4:	movw	r0, #0
   181e8:	str	r0, [fp, #-4]
   181ec:	b	18410 <__assert_fail@plt+0x6b9c>
   181f0:	ldr	r0, [fp, #-8]
   181f4:	ldr	r0, [r0, #12]
   181f8:	vmov	s0, r0
   181fc:	vcvt.f32.u32	s0, s0
   18200:	ldr	r0, [fp, #-8]
   18204:	ldr	r0, [r0, #20]
   18208:	vldr	s2, [r0, #8]
   1820c:	ldr	r0, [fp, #-8]
   18210:	ldr	r0, [r0, #8]
   18214:	vmov	s4, r0
   18218:	vcvt.f32.u32	s4, s4
   1821c:	vmul.f32	s2, s2, s4
   18220:	vcmpe.f32	s0, s2
   18224:	vmrs	APSR_nzcv, fpscr
   18228:	ble	1835c <__assert_fail@plt+0x6ae8>
   1822c:	ldr	r0, [fp, #-8]
   18230:	bl	17850 <__assert_fail@plt+0x5fdc>
   18234:	ldr	r1, [fp, #-8]
   18238:	ldr	r1, [r1, #12]
   1823c:	vmov	s0, r1
   18240:	vcvt.f32.u32	s0, s0
   18244:	ldr	r1, [fp, #-8]
   18248:	ldr	r1, [r1, #20]
   1824c:	vldr	s2, [r1, #8]
   18250:	ldr	r1, [fp, #-8]
   18254:	ldr	r1, [r1, #8]
   18258:	vmov	s4, r1
   1825c:	vcvt.f32.u32	s4, s4
   18260:	vmul.f32	s2, s2, s4
   18264:	vcmpe.f32	s0, s2
   18268:	vmrs	APSR_nzcv, fpscr
   1826c:	ble	18358 <__assert_fail@plt+0x6ae4>
   18270:	ldr	r0, [fp, #-8]
   18274:	ldr	r0, [r0, #20]
   18278:	str	r0, [sp, #12]
   1827c:	ldr	r0, [sp, #12]
   18280:	ldrb	r0, [r0, #16]
   18284:	tst	r0, #1
   18288:	beq	182b0 <__assert_fail@plt+0x6a3c>
   1828c:	ldr	r0, [fp, #-8]
   18290:	ldr	r0, [r0, #8]
   18294:	vmov	s0, r0
   18298:	vcvt.f32.u32	s0, s0
   1829c:	ldr	r0, [sp, #12]
   182a0:	vldr	s2, [r0, #12]
   182a4:	vmul.f32	s0, s0, s2
   182a8:	vstr	s0, [sp]
   182ac:	b	182dc <__assert_fail@plt+0x6a68>
   182b0:	ldr	r0, [fp, #-8]
   182b4:	ldr	r0, [r0, #8]
   182b8:	vmov	s0, r0
   182bc:	vcvt.f32.u32	s0, s0
   182c0:	ldr	r0, [sp, #12]
   182c4:	vldr	s2, [r0, #12]
   182c8:	vmul.f32	s0, s0, s2
   182cc:	ldr	r0, [sp, #12]
   182d0:	vldr	s2, [r0, #8]
   182d4:	vmul.f32	s0, s0, s2
   182d8:	vstr	s0, [sp]
   182dc:	vldr	s0, [sp]
   182e0:	vldr	s2, [pc, #308]	; 1841c <__assert_fail@plt+0x6ba8>
   182e4:	vstr	s0, [sp, #8]
   182e8:	vldr	s0, [sp, #8]
   182ec:	vcmpe.f32	s2, s0
   182f0:	vmrs	APSR_nzcv, fpscr
   182f4:	bhi	18304 <__assert_fail@plt+0x6a90>
   182f8:	mvn	r0, #0
   182fc:	str	r0, [fp, #-4]
   18300:	b	18410 <__assert_fail@plt+0x6b9c>
   18304:	ldr	r0, [fp, #-8]
   18308:	vldr	s0, [sp, #8]
   1830c:	vcvt.u32.f32	s0, s0
   18310:	vmov	r1, s0
   18314:	bl	17d38 <__assert_fail@plt+0x64c4>
   18318:	tst	r0, #1
   1831c:	bne	1832c <__assert_fail@plt+0x6ab8>
   18320:	mvn	r0, #0
   18324:	str	r0, [fp, #-4]
   18328:	b	18410 <__assert_fail@plt+0x6b9c>
   1832c:	ldr	r0, [fp, #-8]
   18330:	ldr	r1, [fp, #-12]
   18334:	add	r2, sp, #16
   18338:	movw	r3, #0
   1833c:	and	r3, r3, #1
   18340:	bl	18420 <__assert_fail@plt+0x6bac>
   18344:	movw	r1, #0
   18348:	cmp	r0, r1
   1834c:	beq	18354 <__assert_fail@plt+0x6ae0>
   18350:	bl	11838 <abort@plt>
   18354:	b	18358 <__assert_fail@plt+0x6ae4>
   18358:	b	1835c <__assert_fail@plt+0x6ae8>
   1835c:	ldr	r0, [sp, #16]
   18360:	ldr	r0, [r0]
   18364:	movw	r1, #0
   18368:	cmp	r0, r1
   1836c:	beq	183dc <__assert_fail@plt+0x6b68>
   18370:	ldr	r0, [fp, #-8]
   18374:	bl	1861c <__assert_fail@plt+0x6da8>
   18378:	str	r0, [sp, #4]
   1837c:	ldr	r0, [sp, #4]
   18380:	movw	r1, #0
   18384:	cmp	r0, r1
   18388:	bne	18398 <__assert_fail@plt+0x6b24>
   1838c:	mvn	r0, #0
   18390:	str	r0, [fp, #-4]
   18394:	b	18410 <__assert_fail@plt+0x6b9c>
   18398:	ldr	r0, [fp, #-12]
   1839c:	ldr	r1, [sp, #4]
   183a0:	str	r0, [r1]
   183a4:	ldr	r0, [sp, #16]
   183a8:	ldr	r0, [r0, #4]
   183ac:	ldr	r1, [sp, #4]
   183b0:	str	r0, [r1, #4]
   183b4:	ldr	r0, [sp, #4]
   183b8:	ldr	r1, [sp, #16]
   183bc:	str	r0, [r1, #4]
   183c0:	ldr	r0, [fp, #-8]
   183c4:	ldr	r1, [r0, #16]
   183c8:	add	r1, r1, #1
   183cc:	str	r1, [r0, #16]
   183d0:	movw	r0, #1
   183d4:	str	r0, [fp, #-4]
   183d8:	b	18410 <__assert_fail@plt+0x6b9c>
   183dc:	ldr	r0, [fp, #-12]
   183e0:	ldr	r1, [sp, #16]
   183e4:	str	r0, [r1]
   183e8:	ldr	r0, [fp, #-8]
   183ec:	ldr	r1, [r0, #16]
   183f0:	add	r1, r1, #1
   183f4:	str	r1, [r0, #16]
   183f8:	ldr	r0, [fp, #-8]
   183fc:	ldr	r1, [r0, #12]
   18400:	add	r1, r1, #1
   18404:	str	r1, [r0, #12]
   18408:	movw	r0, #1
   1840c:	str	r0, [fp, #-4]
   18410:	ldr	r0, [fp, #-4]
   18414:	mov	sp, fp
   18418:	pop	{fp, pc}
   1841c:	svcmi	0x00800000
   18420:	push	{fp, lr}
   18424:	mov	fp, sp
   18428:	sub	sp, sp, #56	; 0x38
   1842c:	str	r0, [fp, #-8]
   18430:	str	r1, [fp, #-12]
   18434:	str	r2, [fp, #-16]
   18438:	and	r0, r3, #1
   1843c:	strb	r0, [fp, #-17]	; 0xffffffef
   18440:	ldr	r0, [fp, #-8]
   18444:	ldr	r1, [fp, #-12]
   18448:	bl	17210 <__assert_fail@plt+0x599c>
   1844c:	str	r0, [fp, #-24]	; 0xffffffe8
   18450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18454:	ldr	r1, [fp, #-16]
   18458:	str	r0, [r1]
   1845c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18460:	ldr	r0, [r0]
   18464:	movw	r1, #0
   18468:	cmp	r0, r1
   1846c:	bne	1847c <__assert_fail@plt+0x6c08>
   18470:	movw	r0, #0
   18474:	str	r0, [fp, #-4]
   18478:	b	18610 <__assert_fail@plt+0x6d9c>
   1847c:	ldr	r0, [fp, #-12]
   18480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18484:	ldr	r1, [r1]
   18488:	cmp	r0, r1
   1848c:	beq	184c0 <__assert_fail@plt+0x6c4c>
   18490:	ldr	r0, [fp, #-8]
   18494:	ldr	r0, [r0, #28]
   18498:	ldr	r1, [fp, #-12]
   1849c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184a0:	ldr	r2, [r2]
   184a4:	str	r0, [sp, #8]
   184a8:	mov	r0, r1
   184ac:	mov	r1, r2
   184b0:	ldr	r2, [sp, #8]
   184b4:	blx	r2
   184b8:	tst	r0, #1
   184bc:	beq	1853c <__assert_fail@plt+0x6cc8>
   184c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c4:	ldr	r0, [r0]
   184c8:	str	r0, [sp, #24]
   184cc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   184d0:	tst	r0, #1
   184d4:	beq	18530 <__assert_fail@plt+0x6cbc>
   184d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184dc:	ldr	r0, [r0, #4]
   184e0:	movw	r1, #0
   184e4:	cmp	r0, r1
   184e8:	beq	18520 <__assert_fail@plt+0x6cac>
   184ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184f0:	ldr	r0, [r0, #4]
   184f4:	str	r0, [sp, #20]
   184f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184fc:	ldr	r1, [sp, #20]
   18500:	ldr	r2, [r1]
   18504:	str	r2, [r0]
   18508:	ldr	r1, [r1, #4]
   1850c:	str	r1, [r0, #4]
   18510:	ldr	r0, [fp, #-8]
   18514:	ldr	r1, [sp, #20]
   18518:	bl	18a6c <__assert_fail@plt+0x71f8>
   1851c:	b	1852c <__assert_fail@plt+0x6cb8>
   18520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18524:	movw	r1, #0
   18528:	str	r1, [r0]
   1852c:	b	18530 <__assert_fail@plt+0x6cbc>
   18530:	ldr	r0, [sp, #24]
   18534:	str	r0, [fp, #-4]
   18538:	b	18610 <__assert_fail@plt+0x6d9c>
   1853c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18540:	str	r0, [sp, #28]
   18544:	ldr	r0, [sp, #28]
   18548:	ldr	r0, [r0, #4]
   1854c:	movw	r1, #0
   18550:	cmp	r0, r1
   18554:	beq	18608 <__assert_fail@plt+0x6d94>
   18558:	ldr	r0, [fp, #-12]
   1855c:	ldr	r1, [sp, #28]
   18560:	ldr	r1, [r1, #4]
   18564:	ldr	r1, [r1]
   18568:	cmp	r0, r1
   1856c:	beq	185a4 <__assert_fail@plt+0x6d30>
   18570:	ldr	r0, [fp, #-8]
   18574:	ldr	r0, [r0, #28]
   18578:	ldr	r1, [fp, #-12]
   1857c:	ldr	r2, [sp, #28]
   18580:	ldr	r2, [r2, #4]
   18584:	ldr	r2, [r2]
   18588:	str	r0, [sp, #4]
   1858c:	mov	r0, r1
   18590:	mov	r1, r2
   18594:	ldr	r2, [sp, #4]
   18598:	blx	r2
   1859c:	tst	r0, #1
   185a0:	beq	185f4 <__assert_fail@plt+0x6d80>
   185a4:	ldr	r0, [sp, #28]
   185a8:	ldr	r0, [r0, #4]
   185ac:	ldr	r0, [r0]
   185b0:	str	r0, [sp, #16]
   185b4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   185b8:	tst	r0, #1
   185bc:	beq	185e8 <__assert_fail@plt+0x6d74>
   185c0:	ldr	r0, [sp, #28]
   185c4:	ldr	r0, [r0, #4]
   185c8:	str	r0, [sp, #12]
   185cc:	ldr	r0, [sp, #12]
   185d0:	ldr	r0, [r0, #4]
   185d4:	ldr	r1, [sp, #28]
   185d8:	str	r0, [r1, #4]
   185dc:	ldr	r0, [fp, #-8]
   185e0:	ldr	r1, [sp, #12]
   185e4:	bl	18a6c <__assert_fail@plt+0x71f8>
   185e8:	ldr	r0, [sp, #16]
   185ec:	str	r0, [fp, #-4]
   185f0:	b	18610 <__assert_fail@plt+0x6d9c>
   185f4:	b	185f8 <__assert_fail@plt+0x6d84>
   185f8:	ldr	r0, [sp, #28]
   185fc:	ldr	r0, [r0, #4]
   18600:	str	r0, [sp, #28]
   18604:	b	18544 <__assert_fail@plt+0x6cd0>
   18608:	movw	r0, #0
   1860c:	str	r0, [fp, #-4]
   18610:	ldr	r0, [fp, #-4]
   18614:	mov	sp, fp
   18618:	pop	{fp, pc}
   1861c:	push	{fp, lr}
   18620:	mov	fp, sp
   18624:	sub	sp, sp, #8
   18628:	str	r0, [sp, #4]
   1862c:	ldr	r0, [sp, #4]
   18630:	ldr	r0, [r0, #36]	; 0x24
   18634:	movw	r1, #0
   18638:	cmp	r0, r1
   1863c:	beq	18660 <__assert_fail@plt+0x6dec>
   18640:	ldr	r0, [sp, #4]
   18644:	ldr	r0, [r0, #36]	; 0x24
   18648:	str	r0, [sp]
   1864c:	ldr	r0, [sp]
   18650:	ldr	r0, [r0, #4]
   18654:	ldr	r1, [sp, #4]
   18658:	str	r0, [r1, #36]	; 0x24
   1865c:	b	1866c <__assert_fail@plt+0x6df8>
   18660:	movw	r0, #8
   18664:	bl	1f930 <__assert_fail@plt+0xe0bc>
   18668:	str	r0, [sp]
   1866c:	ldr	r0, [sp]
   18670:	mov	sp, fp
   18674:	pop	{fp, pc}
   18678:	push	{fp, lr}
   1867c:	mov	fp, sp
   18680:	sub	sp, sp, #24
   18684:	str	r0, [fp, #-4]
   18688:	str	r1, [fp, #-8]
   1868c:	ldr	r0, [fp, #-4]
   18690:	ldr	r1, [fp, #-8]
   18694:	add	r2, sp, #12
   18698:	bl	18174 <__assert_fail@plt+0x6900>
   1869c:	str	r0, [sp, #8]
   186a0:	ldr	r0, [sp, #8]
   186a4:	cmn	r0, #1
   186a8:	bne	186b8 <__assert_fail@plt+0x6e44>
   186ac:	movw	r0, #0
   186b0:	str	r0, [sp, #4]
   186b4:	b	186e0 <__assert_fail@plt+0x6e6c>
   186b8:	ldr	r0, [sp, #8]
   186bc:	cmp	r0, #0
   186c0:	bne	186d0 <__assert_fail@plt+0x6e5c>
   186c4:	ldr	r0, [sp, #12]
   186c8:	str	r0, [sp]
   186cc:	b	186d8 <__assert_fail@plt+0x6e64>
   186d0:	ldr	r0, [fp, #-8]
   186d4:	str	r0, [sp]
   186d8:	ldr	r0, [sp]
   186dc:	str	r0, [sp, #4]
   186e0:	ldr	r0, [sp, #4]
   186e4:	mov	sp, fp
   186e8:	pop	{fp, pc}
   186ec:	push	{fp, lr}
   186f0:	mov	fp, sp
   186f4:	sub	sp, sp, #40	; 0x28
   186f8:	str	r0, [fp, #-8]
   186fc:	str	r1, [fp, #-12]
   18700:	ldr	r0, [fp, #-8]
   18704:	ldr	r1, [fp, #-12]
   18708:	add	r2, sp, #20
   1870c:	movw	r3, #1
   18710:	and	r3, r3, #1
   18714:	bl	18420 <__assert_fail@plt+0x6bac>
   18718:	str	r0, [fp, #-16]
   1871c:	ldr	r0, [fp, #-16]
   18720:	movw	r1, #0
   18724:	cmp	r0, r1
   18728:	bne	18738 <__assert_fail@plt+0x6ec4>
   1872c:	movw	r0, #0
   18730:	str	r0, [fp, #-4]
   18734:	b	188e0 <__assert_fail@plt+0x706c>
   18738:	ldr	r0, [fp, #-8]
   1873c:	ldr	r1, [r0, #16]
   18740:	mvn	r2, #0
   18744:	add	r1, r1, r2
   18748:	str	r1, [r0, #16]
   1874c:	ldr	r0, [sp, #20]
   18750:	ldr	r0, [r0]
   18754:	movw	r1, #0
   18758:	cmp	r0, r1
   1875c:	bne	188d8 <__assert_fail@plt+0x7064>
   18760:	ldr	r0, [fp, #-8]
   18764:	ldr	r1, [r0, #12]
   18768:	mvn	r2, #0
   1876c:	add	r1, r1, r2
   18770:	str	r1, [r0, #12]
   18774:	ldr	r0, [fp, #-8]
   18778:	ldr	r0, [r0, #12]
   1877c:	vmov	s0, r0
   18780:	vcvt.f32.u32	s0, s0
   18784:	ldr	r0, [fp, #-8]
   18788:	ldr	r0, [r0, #20]
   1878c:	vldr	s2, [r0]
   18790:	ldr	r0, [fp, #-8]
   18794:	ldr	r0, [r0, #8]
   18798:	vmov	s4, r0
   1879c:	vcvt.f32.u32	s4, s4
   187a0:	vmul.f32	s2, s2, s4
   187a4:	vcmpe.f32	s0, s2
   187a8:	vmrs	APSR_nzcv, fpscr
   187ac:	bpl	188d4 <__assert_fail@plt+0x7060>
   187b0:	ldr	r0, [fp, #-8]
   187b4:	bl	17850 <__assert_fail@plt+0x5fdc>
   187b8:	ldr	r1, [fp, #-8]
   187bc:	ldr	r1, [r1, #12]
   187c0:	vmov	s0, r1
   187c4:	vcvt.f32.u32	s0, s0
   187c8:	ldr	r1, [fp, #-8]
   187cc:	ldr	r1, [r1, #20]
   187d0:	vldr	s2, [r1]
   187d4:	ldr	r1, [fp, #-8]
   187d8:	ldr	r1, [r1, #8]
   187dc:	vmov	s4, r1
   187e0:	vcvt.f32.u32	s4, s4
   187e4:	vmul.f32	s2, s2, s4
   187e8:	vcmpe.f32	s0, s2
   187ec:	vmrs	APSR_nzcv, fpscr
   187f0:	bpl	188d0 <__assert_fail@plt+0x705c>
   187f4:	ldr	r0, [fp, #-8]
   187f8:	ldr	r0, [r0, #20]
   187fc:	str	r0, [sp, #16]
   18800:	ldr	r0, [sp, #16]
   18804:	ldrb	r0, [r0, #16]
   18808:	tst	r0, #1
   1880c:	beq	18834 <__assert_fail@plt+0x6fc0>
   18810:	ldr	r0, [fp, #-8]
   18814:	ldr	r0, [r0, #8]
   18818:	vmov	s0, r0
   1881c:	vcvt.f32.u32	s0, s0
   18820:	ldr	r0, [sp, #16]
   18824:	vldr	s2, [r0, #4]
   18828:	vmul.f32	s0, s0, s2
   1882c:	vstr	s0, [sp]
   18830:	b	18860 <__assert_fail@plt+0x6fec>
   18834:	ldr	r0, [fp, #-8]
   18838:	ldr	r0, [r0, #8]
   1883c:	vmov	s0, r0
   18840:	vcvt.f32.u32	s0, s0
   18844:	ldr	r0, [sp, #16]
   18848:	vldr	s2, [r0, #4]
   1884c:	vmul.f32	s0, s0, s2
   18850:	ldr	r0, [sp, #16]
   18854:	vldr	s2, [r0, #8]
   18858:	vmul.f32	s0, s0, s2
   1885c:	vstr	s0, [sp]
   18860:	vldr	s0, [sp]
   18864:	vcvt.u32.f32	s0, s0
   18868:	vmov	r0, s0
   1886c:	str	r0, [sp, #12]
   18870:	ldr	r0, [fp, #-8]
   18874:	ldr	r1, [sp, #12]
   18878:	bl	17d38 <__assert_fail@plt+0x64c4>
   1887c:	tst	r0, #1
   18880:	bne	188cc <__assert_fail@plt+0x7058>
   18884:	ldr	r0, [fp, #-8]
   18888:	ldr	r0, [r0, #36]	; 0x24
   1888c:	str	r0, [sp, #8]
   18890:	ldr	r0, [sp, #8]
   18894:	movw	r1, #0
   18898:	cmp	r0, r1
   1889c:	beq	188c0 <__assert_fail@plt+0x704c>
   188a0:	ldr	r0, [sp, #8]
   188a4:	ldr	r0, [r0, #4]
   188a8:	str	r0, [sp, #4]
   188ac:	ldr	r0, [sp, #8]
   188b0:	bl	2082c <__assert_fail@plt+0xefb8>
   188b4:	ldr	r0, [sp, #4]
   188b8:	str	r0, [sp, #8]
   188bc:	b	18890 <__assert_fail@plt+0x701c>
   188c0:	ldr	r0, [fp, #-8]
   188c4:	movw	r1, #0
   188c8:	str	r1, [r0, #36]	; 0x24
   188cc:	b	188d0 <__assert_fail@plt+0x705c>
   188d0:	b	188d4 <__assert_fail@plt+0x7060>
   188d4:	b	188d8 <__assert_fail@plt+0x7064>
   188d8:	ldr	r0, [fp, #-16]
   188dc:	str	r0, [fp, #-4]
   188e0:	ldr	r0, [fp, #-4]
   188e4:	mov	sp, fp
   188e8:	pop	{fp, pc}
   188ec:	push	{fp, lr}
   188f0:	mov	fp, sp
   188f4:	sub	sp, sp, #8
   188f8:	str	r0, [sp, #4]
   188fc:	str	r1, [sp]
   18900:	ldr	r0, [sp, #4]
   18904:	ldr	r1, [sp]
   18908:	bl	186ec <__assert_fail@plt+0x6e78>
   1890c:	mov	sp, fp
   18910:	pop	{fp, pc}
   18914:	push	{fp, lr}
   18918:	mov	fp, sp
   1891c:	sub	sp, sp, #8
   18920:	str	r0, [sp, #4]
   18924:	ldr	r0, [sp, #4]
   18928:	cmp	r0, #10
   1892c:	bcs	18938 <__assert_fail@plt+0x70c4>
   18930:	movw	r0, #10
   18934:	str	r0, [sp, #4]
   18938:	ldr	r0, [sp, #4]
   1893c:	orr	r0, r0, #1
   18940:	str	r0, [sp, #4]
   18944:	ldr	r0, [sp, #4]
   18948:	mvn	r1, #0
   1894c:	cmp	r1, r0
   18950:	movw	r0, #0
   18954:	str	r0, [sp]
   18958:	beq	18970 <__assert_fail@plt+0x70fc>
   1895c:	ldr	r0, [sp, #4]
   18960:	bl	18998 <__assert_fail@plt+0x7124>
   18964:	mvn	r1, #0
   18968:	eor	r0, r0, r1
   1896c:	str	r0, [sp]
   18970:	ldr	r0, [sp]
   18974:	tst	r0, #1
   18978:	beq	1898c <__assert_fail@plt+0x7118>
   1897c:	ldr	r0, [sp, #4]
   18980:	add	r0, r0, #2
   18984:	str	r0, [sp, #4]
   18988:	b	18944 <__assert_fail@plt+0x70d0>
   1898c:	ldr	r0, [sp, #4]
   18990:	mov	sp, fp
   18994:	pop	{fp, pc}
   18998:	sub	sp, sp, #16
   1899c:	str	r0, [sp, #12]
   189a0:	movw	r0, #3
   189a4:	str	r0, [sp, #8]
   189a8:	ldr	r0, [sp, #8]
   189ac:	ldr	r1, [sp, #8]
   189b0:	mul	r0, r0, r1
   189b4:	str	r0, [sp, #4]
   189b8:	ldr	r0, [sp, #4]
   189bc:	ldr	r1, [sp, #12]
   189c0:	cmp	r0, r1
   189c4:	movw	r0, #0
   189c8:	str	r0, [sp]
   189cc:	bcs	189f0 <__assert_fail@plt+0x717c>
   189d0:	ldr	r0, [sp, #12]
   189d4:	ldr	r1, [sp, #8]
   189d8:	udiv	r2, r0, r1
   189dc:	mls	r0, r2, r1, r0
   189e0:	cmp	r0, #0
   189e4:	movw	r0, #0
   189e8:	movne	r0, #1
   189ec:	str	r0, [sp]
   189f0:	ldr	r0, [sp]
   189f4:	tst	r0, #1
   189f8:	beq	18a2c <__assert_fail@plt+0x71b8>
   189fc:	ldr	r0, [sp, #8]
   18a00:	add	r0, r0, #1
   18a04:	str	r0, [sp, #8]
   18a08:	ldr	r0, [sp, #8]
   18a0c:	lsl	r0, r0, #2
   18a10:	ldr	r1, [sp, #4]
   18a14:	add	r0, r1, r0
   18a18:	str	r0, [sp, #4]
   18a1c:	ldr	r0, [sp, #8]
   18a20:	add	r0, r0, #1
   18a24:	str	r0, [sp, #8]
   18a28:	b	189b8 <__assert_fail@plt+0x7144>
   18a2c:	ldr	r0, [sp, #12]
   18a30:	ldr	r1, [sp, #8]
   18a34:	udiv	r2, r0, r1
   18a38:	mls	r0, r2, r1, r0
   18a3c:	cmp	r0, #0
   18a40:	movw	r0, #0
   18a44:	movne	r0, #1
   18a48:	tst	r0, #1
   18a4c:	movw	r0, #1
   18a50:	moveq	r0, #0
   18a54:	cmp	r0, #0
   18a58:	movw	r0, #0
   18a5c:	movne	r0, #1
   18a60:	and	r0, r0, #1
   18a64:	add	sp, sp, #16
   18a68:	bx	lr
   18a6c:	sub	sp, sp, #8
   18a70:	str	r0, [sp, #4]
   18a74:	str	r1, [sp]
   18a78:	ldr	r0, [sp]
   18a7c:	movw	r1, #0
   18a80:	str	r1, [r0]
   18a84:	ldr	r0, [sp, #4]
   18a88:	ldr	r0, [r0, #36]	; 0x24
   18a8c:	ldr	r1, [sp]
   18a90:	str	r0, [r1, #4]
   18a94:	ldr	r0, [sp]
   18a98:	ldr	r1, [sp, #4]
   18a9c:	str	r0, [r1, #36]	; 0x24
   18aa0:	add	sp, sp, #8
   18aa4:	bx	lr
   18aa8:	sub	sp, sp, #12
   18aac:	str	r0, [sp, #8]
   18ab0:	str	r1, [sp, #4]
   18ab4:	ldr	r0, [sp, #8]
   18ab8:	movw	r1, #1
   18abc:	strb	r1, [r0, #28]
   18ac0:	ldr	r0, [sp, #8]
   18ac4:	movw	r1, #0
   18ac8:	str	r1, [r0, #20]
   18acc:	ldr	r0, [sp, #8]
   18ad0:	str	r1, [r0, #24]
   18ad4:	str	r1, [sp]
   18ad8:	ldr	r0, [sp]
   18adc:	cmp	r0, #4
   18ae0:	bge	18b08 <__assert_fail@plt+0x7294>
   18ae4:	ldr	r0, [sp, #4]
   18ae8:	ldr	r1, [sp, #8]
   18aec:	ldr	r2, [sp]
   18af0:	add	r1, r1, r2, lsl #2
   18af4:	str	r0, [r1]
   18af8:	ldr	r0, [sp]
   18afc:	add	r0, r0, #1
   18b00:	str	r0, [sp]
   18b04:	b	18ad8 <__assert_fail@plt+0x7264>
   18b08:	ldr	r0, [sp, #4]
   18b0c:	ldr	r1, [sp, #8]
   18b10:	str	r0, [r1, #16]
   18b14:	add	sp, sp, #12
   18b18:	bx	lr
   18b1c:	sub	sp, sp, #4
   18b20:	str	r0, [sp]
   18b24:	ldr	r0, [sp]
   18b28:	ldrb	r0, [r0, #28]
   18b2c:	and	r0, r0, #1
   18b30:	add	sp, sp, #4
   18b34:	bx	lr
   18b38:	sub	sp, sp, #16
   18b3c:	str	r0, [sp, #12]
   18b40:	str	r1, [sp, #8]
   18b44:	ldr	r0, [sp, #12]
   18b48:	ldr	r1, [r0, #20]
   18b4c:	ldrb	r0, [r0, #28]
   18b50:	mov	r2, #1
   18b54:	bic	r0, r2, r0
   18b58:	add	r0, r1, r0
   18b5c:	and	r0, r0, #3
   18b60:	str	r0, [sp, #4]
   18b64:	ldr	r0, [sp, #12]
   18b68:	ldr	r1, [sp, #4]
   18b6c:	ldr	r0, [r0, r1, lsl #2]
   18b70:	str	r0, [sp]
   18b74:	ldr	r0, [sp, #8]
   18b78:	ldr	r1, [sp, #12]
   18b7c:	ldr	r2, [sp, #4]
   18b80:	add	r1, r1, r2, lsl #2
   18b84:	str	r0, [r1]
   18b88:	ldr	r0, [sp, #4]
   18b8c:	ldr	r1, [sp, #12]
   18b90:	str	r0, [r1, #20]
   18b94:	ldr	r0, [sp, #4]
   18b98:	ldr	r1, [sp, #12]
   18b9c:	ldr	r1, [r1, #24]
   18ba0:	cmp	r0, r1
   18ba4:	bne	18bd4 <__assert_fail@plt+0x7360>
   18ba8:	ldr	r0, [sp, #12]
   18bac:	ldr	r0, [r0, #24]
   18bb0:	ldr	r1, [sp, #12]
   18bb4:	ldrb	r1, [r1, #28]
   18bb8:	mvn	r2, #0
   18bbc:	eor	r1, r1, r2
   18bc0:	and	r1, r1, #1
   18bc4:	add	r0, r0, r1
   18bc8:	and	r0, r0, #3
   18bcc:	ldr	r1, [sp, #12]
   18bd0:	str	r0, [r1, #24]
   18bd4:	ldr	r0, [sp, #12]
   18bd8:	movw	r1, #0
   18bdc:	strb	r1, [r0, #28]
   18be0:	ldr	r0, [sp]
   18be4:	add	sp, sp, #16
   18be8:	bx	lr
   18bec:	push	{fp, lr}
   18bf0:	mov	fp, sp
   18bf4:	sub	sp, sp, #8
   18bf8:	str	r0, [sp, #4]
   18bfc:	ldr	r0, [sp, #4]
   18c00:	bl	18b1c <__assert_fail@plt+0x72a8>
   18c04:	tst	r0, #1
   18c08:	beq	18c10 <__assert_fail@plt+0x739c>
   18c0c:	bl	11838 <abort@plt>
   18c10:	ldr	r0, [sp, #4]
   18c14:	ldr	r1, [r0, #20]
   18c18:	ldr	r0, [r0, r1, lsl #2]
   18c1c:	str	r0, [sp]
   18c20:	ldr	r0, [sp, #4]
   18c24:	ldr	r1, [r0, #16]
   18c28:	ldr	r2, [r0, #20]
   18c2c:	add	r0, r0, r2, lsl #2
   18c30:	str	r1, [r0]
   18c34:	ldr	r0, [sp, #4]
   18c38:	ldr	r0, [r0, #20]
   18c3c:	ldr	r1, [sp, #4]
   18c40:	ldr	r1, [r1, #24]
   18c44:	cmp	r0, r1
   18c48:	bne	18c5c <__assert_fail@plt+0x73e8>
   18c4c:	ldr	r0, [sp, #4]
   18c50:	movw	r1, #1
   18c54:	strb	r1, [r0, #28]
   18c58:	b	18c78 <__assert_fail@plt+0x7404>
   18c5c:	ldr	r0, [sp, #4]
   18c60:	ldr	r0, [r0, #20]
   18c64:	add	r0, r0, #4
   18c68:	sub	r0, r0, #1
   18c6c:	and	r0, r0, #3
   18c70:	ldr	r1, [sp, #4]
   18c74:	str	r0, [r1, #20]
   18c78:	ldr	r0, [sp]
   18c7c:	mov	sp, fp
   18c80:	pop	{fp, pc}
   18c84:	sub	sp, sp, #4
   18c88:	push	{fp, lr}
   18c8c:	mov	fp, sp
   18c90:	sub	sp, sp, #20
   18c94:	str	r3, [fp, #8]
   18c98:	str	r0, [fp, #-4]
   18c9c:	str	r1, [fp, #-8]
   18ca0:	str	r2, [sp, #8]
   18ca4:	movw	r0, #0
   18ca8:	str	r0, [sp, #4]
   18cac:	ldr	r0, [sp, #8]
   18cb0:	and	r0, r0, #64	; 0x40
   18cb4:	cmp	r0, #0
   18cb8:	beq	18ce0 <__assert_fail@plt+0x746c>
   18cbc:	mov	r0, sp
   18cc0:	mov	r1, r0
   18cc4:	add	r2, fp, #8
   18cc8:	str	r2, [r1]
   18ccc:	ldr	r1, [sp]
   18cd0:	add	r2, r1, #4
   18cd4:	str	r2, [sp]
   18cd8:	ldr	r1, [r1]
   18cdc:	str	r1, [sp, #4]
   18ce0:	ldr	r0, [fp, #-4]
   18ce4:	ldr	r1, [fp, #-8]
   18ce8:	ldr	r2, [sp, #8]
   18cec:	ldr	r3, [sp, #4]
   18cf0:	bl	116dc <openat64@plt>
   18cf4:	bl	1c0a0 <__assert_fail@plt+0xa82c>
   18cf8:	mov	sp, fp
   18cfc:	pop	{fp, lr}
   18d00:	add	sp, sp, #4
   18d04:	bx	lr
   18d08:	push	{fp, lr}
   18d0c:	mov	fp, sp
   18d10:	sub	sp, sp, #48	; 0x30
   18d14:	ldr	ip, [pc, #176]	; 18dcc <__assert_fail@plt+0x7558>
   18d18:	str	r0, [fp, #-8]
   18d1c:	str	r1, [fp, #-12]
   18d20:	str	r2, [fp, #-16]
   18d24:	str	r3, [fp, #-20]	; 0xffffffec
   18d28:	ldr	r0, [fp, #-16]
   18d2c:	orr	r0, r0, ip
   18d30:	str	r0, [sp, #24]
   18d34:	ldr	r0, [fp, #-8]
   18d38:	ldr	r1, [fp, #-12]
   18d3c:	ldr	r2, [sp, #24]
   18d40:	bl	18c84 <__assert_fail@plt+0x7410>
   18d44:	str	r0, [sp, #20]
   18d48:	ldr	r0, [sp, #20]
   18d4c:	cmp	r0, #0
   18d50:	bge	18d60 <__assert_fail@plt+0x74ec>
   18d54:	movw	r0, #0
   18d58:	str	r0, [fp, #-4]
   18d5c:	b	18dc0 <__assert_fail@plt+0x754c>
   18d60:	ldr	r0, [sp, #20]
   18d64:	bl	117b4 <fdopendir@plt>
   18d68:	str	r0, [sp, #16]
   18d6c:	ldr	r0, [sp, #16]
   18d70:	movw	r1, #0
   18d74:	cmp	r0, r1
   18d78:	beq	18d8c <__assert_fail@plt+0x7518>
   18d7c:	ldr	r0, [sp, #20]
   18d80:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d84:	str	r0, [r1]
   18d88:	b	18db8 <__assert_fail@plt+0x7544>
   18d8c:	bl	11700 <__errno_location@plt>
   18d90:	ldr	r0, [r0]
   18d94:	str	r0, [sp, #12]
   18d98:	ldr	r0, [sp, #20]
   18d9c:	bl	11844 <close@plt>
   18da0:	ldr	r1, [sp, #12]
   18da4:	str	r0, [sp, #8]
   18da8:	str	r1, [sp, #4]
   18dac:	bl	11700 <__errno_location@plt>
   18db0:	ldr	r1, [sp, #4]
   18db4:	str	r1, [r0]
   18db8:	ldr	r0, [sp, #16]
   18dbc:	str	r0, [fp, #-4]
   18dc0:	ldr	r0, [fp, #-4]
   18dc4:	mov	sp, fp
   18dc8:	pop	{fp, pc}
   18dcc:	andeq	r4, r8, r0, lsl #18
   18dd0:	push	{fp, lr}
   18dd4:	mov	fp, sp
   18dd8:	sub	sp, sp, #24
   18ddc:	str	r0, [fp, #-4]
   18de0:	ldr	r0, [fp, #-4]
   18de4:	movw	r1, #0
   18de8:	cmp	r0, r1
   18dec:	bne	18e10 <__assert_fail@plt+0x759c>
   18df0:	movw	r0, #20928	; 0x51c0
   18df4:	movt	r0, #3
   18df8:	ldr	r1, [r0]
   18dfc:	movw	r0, #16444	; 0x403c
   18e00:	movt	r0, #2
   18e04:	bl	11820 <fputs@plt>
   18e08:	str	r0, [sp, #8]
   18e0c:	bl	11838 <abort@plt>
   18e10:	ldr	r0, [fp, #-4]
   18e14:	movw	r1, #47	; 0x2f
   18e18:	bl	11784 <strrchr@plt>
   18e1c:	str	r0, [fp, #-8]
   18e20:	ldr	r0, [fp, #-8]
   18e24:	movw	r1, #0
   18e28:	cmp	r0, r1
   18e2c:	beq	18e40 <__assert_fail@plt+0x75cc>
   18e30:	ldr	r0, [fp, #-8]
   18e34:	add	r0, r0, #1
   18e38:	str	r0, [sp, #4]
   18e3c:	b	18e48 <__assert_fail@plt+0x75d4>
   18e40:	ldr	r0, [fp, #-4]
   18e44:	str	r0, [sp, #4]
   18e48:	ldr	r0, [sp, #4]
   18e4c:	str	r0, [sp, #12]
   18e50:	ldr	r0, [sp, #12]
   18e54:	ldr	r1, [fp, #-4]
   18e58:	sub	r0, r0, r1
   18e5c:	cmp	r0, #7
   18e60:	blt	18ecc <__assert_fail@plt+0x7658>
   18e64:	ldr	r0, [sp, #12]
   18e68:	mvn	r1, #6
   18e6c:	add	r0, r0, r1
   18e70:	movw	r1, #16500	; 0x4074
   18e74:	movt	r1, #2
   18e78:	movw	r2, #7
   18e7c:	bl	1182c <strncmp@plt>
   18e80:	cmp	r0, #0
   18e84:	bne	18ecc <__assert_fail@plt+0x7658>
   18e88:	ldr	r0, [sp, #12]
   18e8c:	str	r0, [fp, #-4]
   18e90:	ldr	r0, [sp, #12]
   18e94:	movw	r1, #16508	; 0x407c
   18e98:	movt	r1, #2
   18e9c:	movw	r2, #3
   18ea0:	bl	1182c <strncmp@plt>
   18ea4:	cmp	r0, #0
   18ea8:	bne	18ec8 <__assert_fail@plt+0x7654>
   18eac:	ldr	r0, [sp, #12]
   18eb0:	add	r0, r0, #3
   18eb4:	str	r0, [fp, #-4]
   18eb8:	ldr	r0, [fp, #-4]
   18ebc:	movw	r1, #20912	; 0x51b0
   18ec0:	movt	r1, #3
   18ec4:	str	r0, [r1]
   18ec8:	b	18ecc <__assert_fail@plt+0x7658>
   18ecc:	ldr	r0, [fp, #-4]
   18ed0:	movw	r1, #21004	; 0x520c
   18ed4:	movt	r1, #3
   18ed8:	str	r0, [r1]
   18edc:	ldr	r0, [fp, #-4]
   18ee0:	movw	r1, #20916	; 0x51b4
   18ee4:	movt	r1, #3
   18ee8:	str	r0, [r1]
   18eec:	mov	sp, fp
   18ef0:	pop	{fp, pc}
   18ef4:	push	{fp, lr}
   18ef8:	mov	fp, sp
   18efc:	sub	sp, sp, #24
   18f00:	str	r0, [fp, #-4]
   18f04:	bl	11700 <__errno_location@plt>
   18f08:	ldr	r0, [r0]
   18f0c:	str	r0, [fp, #-8]
   18f10:	ldr	r0, [fp, #-4]
   18f14:	movw	r1, #0
   18f18:	cmp	r0, r1
   18f1c:	beq	18f2c <__assert_fail@plt+0x76b8>
   18f20:	ldr	r0, [fp, #-4]
   18f24:	str	r0, [sp, #8]
   18f28:	b	18f3c <__assert_fail@plt+0x76c8>
   18f2c:	movw	r0, #21008	; 0x5210
   18f30:	movt	r0, #3
   18f34:	str	r0, [sp, #8]
   18f38:	b	18f3c <__assert_fail@plt+0x76c8>
   18f3c:	ldr	r0, [sp, #8]
   18f40:	movw	r1, #48	; 0x30
   18f44:	bl	1f61c <__assert_fail@plt+0xdda8>
   18f48:	str	r0, [sp, #12]
   18f4c:	ldr	r0, [fp, #-8]
   18f50:	str	r0, [sp, #4]
   18f54:	bl	11700 <__errno_location@plt>
   18f58:	ldr	r1, [sp, #4]
   18f5c:	str	r1, [r0]
   18f60:	ldr	r0, [sp, #12]
   18f64:	mov	sp, fp
   18f68:	pop	{fp, pc}
   18f6c:	sub	sp, sp, #8
   18f70:	str	r0, [sp, #4]
   18f74:	ldr	r0, [sp, #4]
   18f78:	movw	r1, #0
   18f7c:	cmp	r0, r1
   18f80:	beq	18f90 <__assert_fail@plt+0x771c>
   18f84:	ldr	r0, [sp, #4]
   18f88:	str	r0, [sp]
   18f8c:	b	18fa0 <__assert_fail@plt+0x772c>
   18f90:	movw	r0, #21008	; 0x5210
   18f94:	movt	r0, #3
   18f98:	str	r0, [sp]
   18f9c:	b	18fa0 <__assert_fail@plt+0x772c>
   18fa0:	ldr	r0, [sp]
   18fa4:	ldr	r0, [r0]
   18fa8:	add	sp, sp, #8
   18fac:	bx	lr
   18fb0:	sub	sp, sp, #16
   18fb4:	str	r0, [sp, #12]
   18fb8:	str	r1, [sp, #8]
   18fbc:	ldr	r0, [sp, #8]
   18fc0:	ldr	r1, [sp, #12]
   18fc4:	movw	r2, #0
   18fc8:	cmp	r1, r2
   18fcc:	str	r0, [sp, #4]
   18fd0:	beq	18fe0 <__assert_fail@plt+0x776c>
   18fd4:	ldr	r0, [sp, #12]
   18fd8:	str	r0, [sp]
   18fdc:	b	18ff0 <__assert_fail@plt+0x777c>
   18fe0:	movw	r0, #21008	; 0x5210
   18fe4:	movt	r0, #3
   18fe8:	str	r0, [sp]
   18fec:	b	18ff0 <__assert_fail@plt+0x777c>
   18ff0:	ldr	r0, [sp]
   18ff4:	ldr	r1, [sp, #4]
   18ff8:	str	r1, [r0]
   18ffc:	add	sp, sp, #16
   19000:	bx	lr
   19004:	sub	sp, sp, #32
   19008:	str	r0, [sp, #28]
   1900c:	strb	r1, [sp, #27]
   19010:	str	r2, [sp, #20]
   19014:	ldrb	r0, [sp, #27]
   19018:	strb	r0, [sp, #19]
   1901c:	ldr	r0, [sp, #28]
   19020:	movw	r1, #0
   19024:	cmp	r0, r1
   19028:	beq	19038 <__assert_fail@plt+0x77c4>
   1902c:	ldr	r0, [sp, #28]
   19030:	str	r0, [sp]
   19034:	b	19048 <__assert_fail@plt+0x77d4>
   19038:	movw	r0, #21008	; 0x5210
   1903c:	movt	r0, #3
   19040:	str	r0, [sp]
   19044:	b	19048 <__assert_fail@plt+0x77d4>
   19048:	ldr	r0, [sp]
   1904c:	add	r0, r0, #8
   19050:	ldrb	r1, [sp, #19]
   19054:	lsr	r1, r1, #5
   19058:	add	r0, r0, r1, lsl #2
   1905c:	str	r0, [sp, #12]
   19060:	ldrb	r0, [sp, #19]
   19064:	and	r0, r0, #31
   19068:	str	r0, [sp, #8]
   1906c:	ldr	r0, [sp, #12]
   19070:	ldr	r0, [r0]
   19074:	ldr	r1, [sp, #8]
   19078:	lsr	r0, r0, r1
   1907c:	and	r0, r0, #1
   19080:	str	r0, [sp, #4]
   19084:	ldr	r0, [sp, #20]
   19088:	and	r0, r0, #1
   1908c:	ldr	r1, [sp, #4]
   19090:	eor	r0, r0, r1
   19094:	ldr	r1, [sp, #8]
   19098:	lsl	r0, r0, r1
   1909c:	ldr	r1, [sp, #12]
   190a0:	ldr	r2, [r1]
   190a4:	eor	r0, r2, r0
   190a8:	str	r0, [r1]
   190ac:	ldr	r0, [sp, #4]
   190b0:	add	sp, sp, #32
   190b4:	bx	lr
   190b8:	sub	sp, sp, #12
   190bc:	str	r0, [sp, #8]
   190c0:	str	r1, [sp, #4]
   190c4:	ldr	r0, [sp, #8]
   190c8:	movw	r1, #0
   190cc:	cmp	r0, r1
   190d0:	bne	190e0 <__assert_fail@plt+0x786c>
   190d4:	movw	r0, #21008	; 0x5210
   190d8:	movt	r0, #3
   190dc:	str	r0, [sp, #8]
   190e0:	ldr	r0, [sp, #8]
   190e4:	ldr	r0, [r0, #4]
   190e8:	str	r0, [sp]
   190ec:	ldr	r0, [sp, #4]
   190f0:	ldr	r1, [sp, #8]
   190f4:	str	r0, [r1, #4]
   190f8:	ldr	r0, [sp]
   190fc:	add	sp, sp, #12
   19100:	bx	lr
   19104:	push	{fp, lr}
   19108:	mov	fp, sp
   1910c:	sub	sp, sp, #16
   19110:	str	r0, [fp, #-4]
   19114:	str	r1, [sp, #8]
   19118:	str	r2, [sp, #4]
   1911c:	ldr	r0, [fp, #-4]
   19120:	movw	r1, #0
   19124:	cmp	r0, r1
   19128:	bne	19138 <__assert_fail@plt+0x78c4>
   1912c:	movw	r0, #21008	; 0x5210
   19130:	movt	r0, #3
   19134:	str	r0, [fp, #-4]
   19138:	ldr	r0, [fp, #-4]
   1913c:	movw	r1, #10
   19140:	str	r1, [r0]
   19144:	ldr	r0, [sp, #8]
   19148:	movw	r1, #0
   1914c:	cmp	r0, r1
   19150:	beq	19164 <__assert_fail@plt+0x78f0>
   19154:	ldr	r0, [sp, #4]
   19158:	movw	r1, #0
   1915c:	cmp	r0, r1
   19160:	bne	19168 <__assert_fail@plt+0x78f4>
   19164:	bl	11838 <abort@plt>
   19168:	ldr	r0, [sp, #8]
   1916c:	ldr	r1, [fp, #-4]
   19170:	str	r0, [r1, #40]	; 0x28
   19174:	ldr	r0, [sp, #4]
   19178:	ldr	r1, [fp, #-4]
   1917c:	str	r0, [r1, #44]	; 0x2c
   19180:	mov	sp, fp
   19184:	pop	{fp, pc}
   19188:	push	{r4, r5, r6, sl, fp, lr}
   1918c:	add	fp, sp, #16
   19190:	sub	sp, sp, #56	; 0x38
   19194:	ldr	ip, [fp, #8]
   19198:	str	r0, [fp, #-20]	; 0xffffffec
   1919c:	str	r1, [fp, #-24]	; 0xffffffe8
   191a0:	str	r2, [fp, #-28]	; 0xffffffe4
   191a4:	str	r3, [fp, #-32]	; 0xffffffe0
   191a8:	ldr	r0, [fp, #8]
   191ac:	movw	r1, #0
   191b0:	cmp	r0, r1
   191b4:	beq	191c4 <__assert_fail@plt+0x7950>
   191b8:	ldr	r0, [fp, #8]
   191bc:	str	r0, [sp, #24]
   191c0:	b	191d4 <__assert_fail@plt+0x7960>
   191c4:	movw	r0, #21008	; 0x5210
   191c8:	movt	r0, #3
   191cc:	str	r0, [sp, #24]
   191d0:	b	191d4 <__assert_fail@plt+0x7960>
   191d4:	ldr	r0, [sp, #24]
   191d8:	str	r0, [sp, #36]	; 0x24
   191dc:	bl	11700 <__errno_location@plt>
   191e0:	ldr	r0, [r0]
   191e4:	str	r0, [sp, #32]
   191e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   191ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   191f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191f8:	ldr	ip, [sp, #36]	; 0x24
   191fc:	ldr	ip, [ip]
   19200:	ldr	lr, [sp, #36]	; 0x24
   19204:	ldr	lr, [lr, #4]
   19208:	ldr	r4, [sp, #36]	; 0x24
   1920c:	add	r4, r4, #8
   19210:	ldr	r5, [sp, #36]	; 0x24
   19214:	ldr	r5, [r5, #40]	; 0x28
   19218:	ldr	r6, [sp, #36]	; 0x24
   1921c:	ldr	r6, [r6, #44]	; 0x2c
   19220:	str	ip, [sp]
   19224:	str	lr, [sp, #4]
   19228:	str	r4, [sp, #8]
   1922c:	str	r5, [sp, #12]
   19230:	str	r6, [sp, #16]
   19234:	bl	1925c <__assert_fail@plt+0x79e8>
   19238:	str	r0, [sp, #28]
   1923c:	ldr	r0, [sp, #32]
   19240:	str	r0, [sp, #20]
   19244:	bl	11700 <__errno_location@plt>
   19248:	ldr	r1, [sp, #20]
   1924c:	str	r1, [r0]
   19250:	ldr	r0, [sp, #28]
   19254:	sub	sp, fp, #16
   19258:	pop	{r4, r5, r6, sl, fp, pc}
   1925c:	push	{r4, r5, r6, sl, fp, lr}
   19260:	add	fp, sp, #16
   19264:	sub	sp, sp, #160	; 0xa0
   19268:	ldr	ip, [fp, #24]
   1926c:	ldr	lr, [fp, #20]
   19270:	ldr	r4, [fp, #16]
   19274:	ldr	r5, [fp, #12]
   19278:	ldr	r6, [fp, #8]
   1927c:	str	r0, [fp, #-24]	; 0xffffffe8
   19280:	str	r1, [fp, #-28]	; 0xffffffe4
   19284:	str	r2, [fp, #-32]	; 0xffffffe0
   19288:	str	r3, [fp, #-36]	; 0xffffffdc
   1928c:	movw	r0, #0
   19290:	str	r0, [fp, #-44]	; 0xffffffd4
   19294:	str	r0, [fp, #-48]	; 0xffffffd0
   19298:	str	r0, [fp, #-52]	; 0xffffffcc
   1929c:	str	r0, [fp, #-56]	; 0xffffffc8
   192a0:	movw	r0, #0
   192a4:	strb	r0, [fp, #-57]	; 0xffffffc7
   192a8:	str	ip, [sp, #72]	; 0x48
   192ac:	str	lr, [sp, #68]	; 0x44
   192b0:	str	r4, [sp, #64]	; 0x40
   192b4:	str	r5, [sp, #60]	; 0x3c
   192b8:	str	r6, [sp, #56]	; 0x38
   192bc:	bl	115d4 <__ctype_get_mb_cur_max@plt>
   192c0:	cmp	r0, #1
   192c4:	movw	r0, #0
   192c8:	moveq	r0, #1
   192cc:	and	r0, r0, #1
   192d0:	strb	r0, [fp, #-58]	; 0xffffffc6
   192d4:	ldr	r0, [fp, #12]
   192d8:	and	r0, r0, #2
   192dc:	cmp	r0, #0
   192e0:	movw	r0, #0
   192e4:	movne	r0, #1
   192e8:	and	r0, r0, #1
   192ec:	strb	r0, [fp, #-59]	; 0xffffffc5
   192f0:	movw	r0, #0
   192f4:	strb	r0, [fp, #-60]	; 0xffffffc4
   192f8:	strb	r0, [fp, #-61]	; 0xffffffc3
   192fc:	movw	r0, #1
   19300:	strb	r0, [fp, #-62]	; 0xffffffc2
   19304:	ldr	r0, [fp, #8]
   19308:	cmp	r0, #10
   1930c:	str	r0, [sp, #52]	; 0x34
   19310:	bhi	19538 <__assert_fail@plt+0x7cc4>
   19314:	add	r0, pc, #8
   19318:	ldr	r1, [sp, #52]	; 0x34
   1931c:	ldr	r0, [r0, r1, lsl #2]
   19320:	mov	pc, r0
   19324:	andeq	r9, r1, ip, lsr #10
   19328:	andeq	r9, r1, r8, lsr #9
   1932c:	andeq	r9, r1, r8, asr #9
   19330:	andeq	r9, r1, r0, lsr #9
   19334:			; <UNDEFINED> instruction: 0x000194b0
   19338:	andeq	r9, r1, r0, ror #6
   1933c:	andeq	r9, r1, r0, asr r3
   19340:	andeq	r9, r1, r4, asr #7
   19344:	ldrdeq	r9, [r1], -r8
   19348:	ldrdeq	r9, [r1], -r8
   1934c:	ldrdeq	r9, [r1], -r8
   19350:	movw	r0, #5
   19354:	str	r0, [fp, #8]
   19358:	movw	r0, #1
   1935c:	strb	r0, [fp, #-59]	; 0xffffffc5
   19360:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19364:	tst	r0, #1
   19368:	bne	193a4 <__assert_fail@plt+0x7b30>
   1936c:	b	19370 <__assert_fail@plt+0x7afc>
   19370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19374:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19378:	cmp	r0, r1
   1937c:	bcs	19394 <__assert_fail@plt+0x7b20>
   19380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19384:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19388:	add	r0, r0, r1
   1938c:	movw	r1, #34	; 0x22
   19390:	strb	r1, [r0]
   19394:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19398:	add	r0, r0, #1
   1939c:	str	r0, [fp, #-44]	; 0xffffffd4
   193a0:	b	193a4 <__assert_fail@plt+0x7b30>
   193a4:	movw	r0, #1
   193a8:	strb	r0, [fp, #-57]	; 0xffffffc7
   193ac:	movw	r0, #16588	; 0x40cc
   193b0:	movt	r0, #2
   193b4:	str	r0, [fp, #-52]	; 0xffffffcc
   193b8:	movw	r0, #1
   193bc:	str	r0, [fp, #-56]	; 0xffffffc8
   193c0:	b	1953c <__assert_fail@plt+0x7cc8>
   193c4:	movw	r0, #1
   193c8:	strb	r0, [fp, #-57]	; 0xffffffc7
   193cc:	movw	r0, #0
   193d0:	strb	r0, [fp, #-59]	; 0xffffffc5
   193d4:	b	1953c <__assert_fail@plt+0x7cc8>
   193d8:	ldr	r0, [fp, #8]
   193dc:	cmp	r0, #10
   193e0:	beq	1940c <__assert_fail@plt+0x7b98>
   193e4:	ldr	r1, [fp, #8]
   193e8:	movw	r0, #16590	; 0x40ce
   193ec:	movt	r0, #2
   193f0:	bl	1b450 <__assert_fail@plt+0x9bdc>
   193f4:	str	r0, [fp, #20]
   193f8:	ldr	r1, [fp, #8]
   193fc:	movw	r0, #17953	; 0x4621
   19400:	movt	r0, #2
   19404:	bl	1b450 <__assert_fail@plt+0x9bdc>
   19408:	str	r0, [fp, #24]
   1940c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19410:	tst	r0, #1
   19414:	bne	19480 <__assert_fail@plt+0x7c0c>
   19418:	ldr	r0, [fp, #20]
   1941c:	str	r0, [fp, #-52]	; 0xffffffcc
   19420:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19424:	ldrsb	r0, [r0]
   19428:	cmp	r0, #0
   1942c:	beq	1947c <__assert_fail@plt+0x7c08>
   19430:	b	19434 <__assert_fail@plt+0x7bc0>
   19434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1943c:	cmp	r0, r1
   19440:	bcs	1945c <__assert_fail@plt+0x7be8>
   19444:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19448:	ldrb	r0, [r0]
   1944c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19450:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19454:	add	r1, r1, r2
   19458:	strb	r0, [r1]
   1945c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19460:	add	r0, r0, #1
   19464:	str	r0, [fp, #-44]	; 0xffffffd4
   19468:	b	1946c <__assert_fail@plt+0x7bf8>
   1946c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19470:	add	r0, r0, #1
   19474:	str	r0, [fp, #-52]	; 0xffffffcc
   19478:	b	19420 <__assert_fail@plt+0x7bac>
   1947c:	b	19480 <__assert_fail@plt+0x7c0c>
   19480:	movw	r0, #1
   19484:	strb	r0, [fp, #-57]	; 0xffffffc7
   19488:	ldr	r0, [fp, #24]
   1948c:	str	r0, [fp, #-52]	; 0xffffffcc
   19490:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19494:	bl	116d0 <strlen@plt>
   19498:	str	r0, [fp, #-56]	; 0xffffffc8
   1949c:	b	1953c <__assert_fail@plt+0x7cc8>
   194a0:	movw	r0, #1
   194a4:	strb	r0, [fp, #-57]	; 0xffffffc7
   194a8:	movw	r0, #1
   194ac:	strb	r0, [fp, #-59]	; 0xffffffc5
   194b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   194b4:	tst	r0, #1
   194b8:	bne	194c4 <__assert_fail@plt+0x7c50>
   194bc:	movw	r0, #1
   194c0:	strb	r0, [fp, #-57]	; 0xffffffc7
   194c4:	b	194c8 <__assert_fail@plt+0x7c54>
   194c8:	movw	r0, #2
   194cc:	str	r0, [fp, #8]
   194d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   194d4:	tst	r0, #1
   194d8:	bne	19514 <__assert_fail@plt+0x7ca0>
   194dc:	b	194e0 <__assert_fail@plt+0x7c6c>
   194e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   194e8:	cmp	r0, r1
   194ec:	bcs	19504 <__assert_fail@plt+0x7c90>
   194f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   194f8:	add	r0, r0, r1
   194fc:	movw	r1, #39	; 0x27
   19500:	strb	r1, [r0]
   19504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19508:	add	r0, r0, #1
   1950c:	str	r0, [fp, #-44]	; 0xffffffd4
   19510:	b	19514 <__assert_fail@plt+0x7ca0>
   19514:	movw	r0, #17953	; 0x4621
   19518:	movt	r0, #2
   1951c:	str	r0, [fp, #-52]	; 0xffffffcc
   19520:	movw	r0, #1
   19524:	str	r0, [fp, #-56]	; 0xffffffc8
   19528:	b	1953c <__assert_fail@plt+0x7cc8>
   1952c:	movw	r0, #0
   19530:	strb	r0, [fp, #-59]	; 0xffffffc5
   19534:	b	1953c <__assert_fail@plt+0x7cc8>
   19538:	bl	11838 <abort@plt>
   1953c:	movw	r0, #0
   19540:	str	r0, [fp, #-40]	; 0xffffffd8
   19544:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19548:	cmn	r0, #1
   1954c:	bne	19578 <__assert_fail@plt+0x7d04>
   19550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19554:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19558:	add	r0, r0, r1
   1955c:	ldrb	r0, [r0]
   19560:	cmp	r0, #0
   19564:	movw	r0, #0
   19568:	moveq	r0, #1
   1956c:	and	r0, r0, #1
   19570:	str	r0, [sp, #48]	; 0x30
   19574:	b	19594 <__assert_fail@plt+0x7d20>
   19578:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1957c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19580:	cmp	r0, r1
   19584:	movw	r0, #0
   19588:	moveq	r0, #1
   1958c:	and	r0, r0, #1
   19590:	str	r0, [sp, #48]	; 0x30
   19594:	ldr	r0, [sp, #48]	; 0x30
   19598:	cmp	r0, #0
   1959c:	movw	r0, #0
   195a0:	movne	r0, #1
   195a4:	mvn	r1, #0
   195a8:	eor	r0, r0, r1
   195ac:	tst	r0, #1
   195b0:	beq	1a79c <__assert_fail@plt+0x8f28>
   195b4:	movw	r0, #0
   195b8:	strb	r0, [fp, #-65]	; 0xffffffbf
   195bc:	strb	r0, [fp, #-66]	; 0xffffffbe
   195c0:	strb	r0, [fp, #-67]	; 0xffffffbd
   195c4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   195c8:	tst	r0, #1
   195cc:	beq	19678 <__assert_fail@plt+0x7e04>
   195d0:	ldr	r0, [fp, #8]
   195d4:	cmp	r0, #2
   195d8:	beq	19678 <__assert_fail@plt+0x7e04>
   195dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   195e0:	cmp	r0, #0
   195e4:	beq	19678 <__assert_fail@plt+0x7e04>
   195e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   195f0:	add	r0, r0, r1
   195f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   195f8:	cmn	r1, #1
   195fc:	str	r0, [sp, #44]	; 0x2c
   19600:	bne	19628 <__assert_fail@plt+0x7db4>
   19604:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19608:	movw	r1, #1
   1960c:	cmp	r1, r0
   19610:	bcs	19628 <__assert_fail@plt+0x7db4>
   19614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19618:	bl	116d0 <strlen@plt>
   1961c:	str	r0, [fp, #-36]	; 0xffffffdc
   19620:	str	r0, [sp, #40]	; 0x28
   19624:	b	19630 <__assert_fail@plt+0x7dbc>
   19628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1962c:	str	r0, [sp, #40]	; 0x28
   19630:	ldr	r0, [sp, #40]	; 0x28
   19634:	ldr	r1, [sp, #44]	; 0x2c
   19638:	cmp	r1, r0
   1963c:	bhi	19678 <__assert_fail@plt+0x7e04>
   19640:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19644:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19648:	add	r0, r0, r1
   1964c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19650:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19654:	bl	11550 <memcmp@plt>
   19658:	cmp	r0, #0
   1965c:	bne	19678 <__assert_fail@plt+0x7e04>
   19660:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19664:	tst	r0, #1
   19668:	beq	19670 <__assert_fail@plt+0x7dfc>
   1966c:	b	1a91c <__assert_fail@plt+0x90a8>
   19670:	movw	r0, #1
   19674:	strb	r0, [fp, #-65]	; 0xffffffbf
   19678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1967c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19680:	ldrb	r0, [r0, r1]
   19684:	strb	r0, [fp, #-63]	; 0xffffffc1
   19688:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1968c:	mov	r1, r0
   19690:	cmp	r0, #126	; 0x7e
   19694:	str	r1, [sp, #36]	; 0x24
   19698:	bhi	19f08 <__assert_fail@plt+0x8694>
   1969c:	add	r0, pc, #8
   196a0:	ldr	r1, [sp, #36]	; 0x24
   196a4:	ldr	r0, [r0, r1, lsl #2]
   196a8:	mov	pc, r0
   196ac:	andeq	r9, r1, r8, lsr #17
   196b0:	andeq	r9, r1, r8, lsl #30
   196b4:	andeq	r9, r1, r8, lsl #30
   196b8:	andeq	r9, r1, r8, lsl #30
   196bc:	andeq	r9, r1, r8, lsl #30
   196c0:	andeq	r9, r1, r8, lsl #30
   196c4:	andeq	r9, r1, r8, lsl #30
   196c8:			; <UNDEFINED> instruction: 0x00019cb0
   196cc:			; <UNDEFINED> instruction: 0x00019cbc
   196d0:	andeq	r9, r1, ip, ror #25
   196d4:	ldrdeq	r9, [r1], -r4
   196d8:	strdeq	r9, [r1], -r8
   196dc:	andeq	r9, r1, r8, asr #25
   196e0:	andeq	r9, r1, r0, ror #25
   196e4:	andeq	r9, r1, r8, lsl #30
   196e8:	andeq	r9, r1, r8, lsl #30
   196ec:	andeq	r9, r1, r8, lsl #30
   196f0:	andeq	r9, r1, r8, lsl #30
   196f4:	andeq	r9, r1, r8, lsl #30
   196f8:	andeq	r9, r1, r8, lsl #30
   196fc:	andeq	r9, r1, r8, lsl #30
   19700:	andeq	r9, r1, r8, lsl #30
   19704:	andeq	r9, r1, r8, lsl #30
   19708:	andeq	r9, r1, r8, lsl #30
   1970c:	andeq	r9, r1, r8, lsl #30
   19710:	andeq	r9, r1, r8, lsl #30
   19714:	andeq	r9, r1, r8, lsl #30
   19718:	andeq	r9, r1, r8, lsl #30
   1971c:	andeq	r9, r1, r8, lsl #30
   19720:	andeq	r9, r1, r8, lsl #30
   19724:	andeq	r9, r1, r8, lsl #30
   19728:	andeq	r9, r1, r8, lsl #30
   1972c:	ldrdeq	r9, [r1], -ip
   19730:	andeq	r9, r1, r4, ror #27
   19734:	andeq	r9, r1, r4, ror #27
   19738:	andeq	r9, r1, r8, asr #27
   1973c:	andeq	r9, r1, r4, ror #27
   19740:	strdeq	r9, [r1], -ip
   19744:	andeq	r9, r1, r4, ror #27
   19748:	andeq	r9, r1, r4, lsl #28
   1974c:	andeq	r9, r1, r4, ror #27
   19750:	andeq	r9, r1, r4, ror #27
   19754:	andeq	r9, r1, r4, ror #27
   19758:	strdeq	r9, [r1], -ip
   1975c:	strdeq	r9, [r1], -ip
   19760:	strdeq	r9, [r1], -ip
   19764:	strdeq	r9, [r1], -ip
   19768:	strdeq	r9, [r1], -ip
   1976c:	strdeq	r9, [r1], -ip
   19770:	strdeq	r9, [r1], -ip
   19774:	strdeq	r9, [r1], -ip
   19778:	strdeq	r9, [r1], -ip
   1977c:	strdeq	r9, [r1], -ip
   19780:	strdeq	r9, [r1], -ip
   19784:	strdeq	r9, [r1], -ip
   19788:	strdeq	r9, [r1], -ip
   1978c:	strdeq	r9, [r1], -ip
   19790:	strdeq	r9, [r1], -ip
   19794:	strdeq	r9, [r1], -ip
   19798:	andeq	r9, r1, r4, ror #27
   1979c:	andeq	r9, r1, r4, ror #27
   197a0:	andeq	r9, r1, r4, ror #27
   197a4:	andeq	r9, r1, r4, ror #27
   197a8:			; <UNDEFINED> instruction: 0x00019ab4
   197ac:	andeq	r9, r1, r8, lsl #30
   197b0:	strdeq	r9, [r1], -ip
   197b4:	strdeq	r9, [r1], -ip
   197b8:	strdeq	r9, [r1], -ip
   197bc:	strdeq	r9, [r1], -ip
   197c0:	strdeq	r9, [r1], -ip
   197c4:	strdeq	r9, [r1], -ip
   197c8:	strdeq	r9, [r1], -ip
   197cc:	strdeq	r9, [r1], -ip
   197d0:	strdeq	r9, [r1], -ip
   197d4:	strdeq	r9, [r1], -ip
   197d8:	strdeq	r9, [r1], -ip
   197dc:	strdeq	r9, [r1], -ip
   197e0:	strdeq	r9, [r1], -ip
   197e4:	strdeq	r9, [r1], -ip
   197e8:	strdeq	r9, [r1], -ip
   197ec:	strdeq	r9, [r1], -ip
   197f0:	strdeq	r9, [r1], -ip
   197f4:	strdeq	r9, [r1], -ip
   197f8:	strdeq	r9, [r1], -ip
   197fc:	strdeq	r9, [r1], -ip
   19800:	strdeq	r9, [r1], -ip
   19804:	strdeq	r9, [r1], -ip
   19808:	strdeq	r9, [r1], -ip
   1980c:	strdeq	r9, [r1], -ip
   19810:	strdeq	r9, [r1], -ip
   19814:	strdeq	r9, [r1], -ip
   19818:	andeq	r9, r1, r4, ror #27
   1981c:	andeq	r9, r1, r4, lsl #26
   19820:	strdeq	r9, [r1], -ip
   19824:	andeq	r9, r1, r4, ror #27
   19828:	strdeq	r9, [r1], -ip
   1982c:	andeq	r9, r1, r4, ror #27
   19830:	strdeq	r9, [r1], -ip
   19834:	strdeq	r9, [r1], -ip
   19838:	strdeq	r9, [r1], -ip
   1983c:	strdeq	r9, [r1], -ip
   19840:	strdeq	r9, [r1], -ip
   19844:	strdeq	r9, [r1], -ip
   19848:	strdeq	r9, [r1], -ip
   1984c:	strdeq	r9, [r1], -ip
   19850:	strdeq	r9, [r1], -ip
   19854:	strdeq	r9, [r1], -ip
   19858:	strdeq	r9, [r1], -ip
   1985c:	strdeq	r9, [r1], -ip
   19860:	strdeq	r9, [r1], -ip
   19864:	strdeq	r9, [r1], -ip
   19868:	strdeq	r9, [r1], -ip
   1986c:	strdeq	r9, [r1], -ip
   19870:	strdeq	r9, [r1], -ip
   19874:	strdeq	r9, [r1], -ip
   19878:	strdeq	r9, [r1], -ip
   1987c:	strdeq	r9, [r1], -ip
   19880:	strdeq	r9, [r1], -ip
   19884:	strdeq	r9, [r1], -ip
   19888:	strdeq	r9, [r1], -ip
   1988c:	strdeq	r9, [r1], -ip
   19890:	strdeq	r9, [r1], -ip
   19894:	strdeq	r9, [r1], -ip
   19898:	muleq	r1, r4, sp
   1989c:	andeq	r9, r1, r4, ror #27
   198a0:	muleq	r1, r4, sp
   198a4:	andeq	r9, r1, r8, asr #27
   198a8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   198ac:	tst	r0, #1
   198b0:	beq	19a98 <__assert_fail@plt+0x8224>
   198b4:	b	198b8 <__assert_fail@plt+0x8044>
   198b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   198bc:	tst	r0, #1
   198c0:	beq	198c8 <__assert_fail@plt+0x8054>
   198c4:	b	1a91c <__assert_fail@plt+0x90a8>
   198c8:	movw	r0, #1
   198cc:	strb	r0, [fp, #-66]	; 0xffffffbe
   198d0:	ldr	r0, [fp, #8]
   198d4:	cmp	r0, #2
   198d8:	bne	1998c <__assert_fail@plt+0x8118>
   198dc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   198e0:	tst	r0, #1
   198e4:	bne	1998c <__assert_fail@plt+0x8118>
   198e8:	b	198ec <__assert_fail@plt+0x8078>
   198ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   198f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   198f4:	cmp	r0, r1
   198f8:	bcs	19910 <__assert_fail@plt+0x809c>
   198fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19900:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19904:	add	r0, r0, r1
   19908:	movw	r1, #39	; 0x27
   1990c:	strb	r1, [r0]
   19910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19914:	add	r0, r0, #1
   19918:	str	r0, [fp, #-44]	; 0xffffffd4
   1991c:	b	19920 <__assert_fail@plt+0x80ac>
   19920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19924:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19928:	cmp	r0, r1
   1992c:	bcs	19944 <__assert_fail@plt+0x80d0>
   19930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19934:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19938:	add	r0, r0, r1
   1993c:	movw	r1, #36	; 0x24
   19940:	strb	r1, [r0]
   19944:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19948:	add	r0, r0, #1
   1994c:	str	r0, [fp, #-44]	; 0xffffffd4
   19950:	b	19954 <__assert_fail@plt+0x80e0>
   19954:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19958:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1995c:	cmp	r0, r1
   19960:	bcs	19978 <__assert_fail@plt+0x8104>
   19964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19968:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1996c:	add	r0, r0, r1
   19970:	movw	r1, #39	; 0x27
   19974:	strb	r1, [r0]
   19978:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1997c:	add	r0, r0, #1
   19980:	str	r0, [fp, #-44]	; 0xffffffd4
   19984:	movw	r0, #1
   19988:	strb	r0, [fp, #-60]	; 0xffffffc4
   1998c:	b	19990 <__assert_fail@plt+0x811c>
   19990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19994:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19998:	cmp	r0, r1
   1999c:	bcs	199b4 <__assert_fail@plt+0x8140>
   199a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199a8:	add	r0, r0, r1
   199ac:	movw	r1, #92	; 0x5c
   199b0:	strb	r1, [r0]
   199b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199b8:	add	r0, r0, #1
   199bc:	str	r0, [fp, #-44]	; 0xffffffd4
   199c0:	b	199c4 <__assert_fail@plt+0x8150>
   199c4:	ldr	r0, [fp, #8]
   199c8:	cmp	r0, #2
   199cc:	beq	19a8c <__assert_fail@plt+0x8218>
   199d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199d4:	add	r0, r0, #1
   199d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199dc:	cmp	r0, r1
   199e0:	bcs	19a8c <__assert_fail@plt+0x8218>
   199e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   199ec:	add	r1, r1, #1
   199f0:	add	r0, r0, r1
   199f4:	ldrb	r0, [r0]
   199f8:	movw	r1, #48	; 0x30
   199fc:	cmp	r1, r0
   19a00:	bgt	19a8c <__assert_fail@plt+0x8218>
   19a04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a0c:	add	r1, r1, #1
   19a10:	add	r0, r0, r1
   19a14:	ldrb	r0, [r0]
   19a18:	cmp	r0, #57	; 0x39
   19a1c:	bgt	19a8c <__assert_fail@plt+0x8218>
   19a20:	b	19a24 <__assert_fail@plt+0x81b0>
   19a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a2c:	cmp	r0, r1
   19a30:	bcs	19a48 <__assert_fail@plt+0x81d4>
   19a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a3c:	add	r0, r0, r1
   19a40:	movw	r1, #48	; 0x30
   19a44:	strb	r1, [r0]
   19a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a4c:	add	r0, r0, #1
   19a50:	str	r0, [fp, #-44]	; 0xffffffd4
   19a54:	b	19a58 <__assert_fail@plt+0x81e4>
   19a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a60:	cmp	r0, r1
   19a64:	bcs	19a7c <__assert_fail@plt+0x8208>
   19a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a70:	add	r0, r0, r1
   19a74:	movw	r1, #48	; 0x30
   19a78:	strb	r1, [r0]
   19a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a80:	add	r0, r0, #1
   19a84:	str	r0, [fp, #-44]	; 0xffffffd4
   19a88:	b	19a8c <__assert_fail@plt+0x8218>
   19a8c:	movw	r0, #48	; 0x30
   19a90:	strb	r0, [fp, #-63]	; 0xffffffc1
   19a94:	b	19ab0 <__assert_fail@plt+0x823c>
   19a98:	ldr	r0, [fp, #12]
   19a9c:	and	r0, r0, #1
   19aa0:	cmp	r0, #0
   19aa4:	beq	19aac <__assert_fail@plt+0x8238>
   19aa8:	b	1a78c <__assert_fail@plt+0x8f18>
   19aac:	b	19ab0 <__assert_fail@plt+0x823c>
   19ab0:	b	1a528 <__assert_fail@plt+0x8cb4>
   19ab4:	ldr	r0, [fp, #8]
   19ab8:	cmp	r0, #2
   19abc:	str	r0, [sp, #32]
   19ac0:	beq	19ad8 <__assert_fail@plt+0x8264>
   19ac4:	b	19ac8 <__assert_fail@plt+0x8254>
   19ac8:	ldr	r0, [sp, #32]
   19acc:	cmp	r0, #5
   19ad0:	beq	19aec <__assert_fail@plt+0x8278>
   19ad4:	b	19ca8 <__assert_fail@plt+0x8434>
   19ad8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19adc:	tst	r0, #1
   19ae0:	beq	19ae8 <__assert_fail@plt+0x8274>
   19ae4:	b	1a91c <__assert_fail@plt+0x90a8>
   19ae8:	b	19cac <__assert_fail@plt+0x8438>
   19aec:	ldr	r0, [fp, #12]
   19af0:	and	r0, r0, #4
   19af4:	cmp	r0, #0
   19af8:	beq	19ca4 <__assert_fail@plt+0x8430>
   19afc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b00:	add	r0, r0, #2
   19b04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b08:	cmp	r0, r1
   19b0c:	bcs	19ca4 <__assert_fail@plt+0x8430>
   19b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b18:	add	r1, r1, #1
   19b1c:	add	r0, r0, r1
   19b20:	ldrb	r0, [r0]
   19b24:	cmp	r0, #63	; 0x3f
   19b28:	bne	19ca4 <__assert_fail@plt+0x8430>
   19b2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b34:	add	r0, r1, r0
   19b38:	ldrb	r0, [r0, #2]
   19b3c:	mov	r1, r0
   19b40:	cmp	r0, #33	; 0x21
   19b44:	str	r1, [sp, #28]
   19b48:	beq	19b98 <__assert_fail@plt+0x8324>
   19b4c:	b	19b50 <__assert_fail@plt+0x82dc>
   19b50:	ldr	r0, [sp, #28]
   19b54:	sub	r1, r0, #39	; 0x27
   19b58:	cmp	r1, #3
   19b5c:	bcc	19b98 <__assert_fail@plt+0x8324>
   19b60:	b	19b64 <__assert_fail@plt+0x82f0>
   19b64:	ldr	r0, [sp, #28]
   19b68:	cmp	r0, #45	; 0x2d
   19b6c:	beq	19b98 <__assert_fail@plt+0x8324>
   19b70:	b	19b74 <__assert_fail@plt+0x8300>
   19b74:	ldr	r0, [sp, #28]
   19b78:	cmp	r0, #47	; 0x2f
   19b7c:	beq	19b98 <__assert_fail@plt+0x8324>
   19b80:	b	19b84 <__assert_fail@plt+0x8310>
   19b84:	ldr	r0, [sp, #28]
   19b88:	sub	r1, r0, #60	; 0x3c
   19b8c:	cmp	r1, #2
   19b90:	bhi	19c9c <__assert_fail@plt+0x8428>
   19b94:	b	19b98 <__assert_fail@plt+0x8324>
   19b98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b9c:	tst	r0, #1
   19ba0:	beq	19ba8 <__assert_fail@plt+0x8334>
   19ba4:	b	1a91c <__assert_fail@plt+0x90a8>
   19ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bb0:	add	r1, r1, #2
   19bb4:	add	r0, r0, r1
   19bb8:	ldrb	r0, [r0]
   19bbc:	strb	r0, [fp, #-63]	; 0xffffffc1
   19bc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bc4:	add	r0, r0, #2
   19bc8:	str	r0, [fp, #-40]	; 0xffffffd8
   19bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bd4:	cmp	r0, r1
   19bd8:	bcs	19bf0 <__assert_fail@plt+0x837c>
   19bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19be0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19be4:	add	r0, r0, r1
   19be8:	movw	r1, #63	; 0x3f
   19bec:	strb	r1, [r0]
   19bf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bf4:	add	r0, r0, #1
   19bf8:	str	r0, [fp, #-44]	; 0xffffffd4
   19bfc:	b	19c00 <__assert_fail@plt+0x838c>
   19c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c08:	cmp	r0, r1
   19c0c:	bcs	19c24 <__assert_fail@plt+0x83b0>
   19c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c18:	add	r0, r0, r1
   19c1c:	movw	r1, #34	; 0x22
   19c20:	strb	r1, [r0]
   19c24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c28:	add	r0, r0, #1
   19c2c:	str	r0, [fp, #-44]	; 0xffffffd4
   19c30:	b	19c34 <__assert_fail@plt+0x83c0>
   19c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c3c:	cmp	r0, r1
   19c40:	bcs	19c58 <__assert_fail@plt+0x83e4>
   19c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c4c:	add	r0, r0, r1
   19c50:	movw	r1, #34	; 0x22
   19c54:	strb	r1, [r0]
   19c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c5c:	add	r0, r0, #1
   19c60:	str	r0, [fp, #-44]	; 0xffffffd4
   19c64:	b	19c68 <__assert_fail@plt+0x83f4>
   19c68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c70:	cmp	r0, r1
   19c74:	bcs	19c8c <__assert_fail@plt+0x8418>
   19c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c80:	add	r0, r0, r1
   19c84:	movw	r1, #63	; 0x3f
   19c88:	strb	r1, [r0]
   19c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c90:	add	r0, r0, #1
   19c94:	str	r0, [fp, #-44]	; 0xffffffd4
   19c98:	b	19ca0 <__assert_fail@plt+0x842c>
   19c9c:	b	19ca0 <__assert_fail@plt+0x842c>
   19ca0:	b	19ca4 <__assert_fail@plt+0x8430>
   19ca4:	b	19cac <__assert_fail@plt+0x8438>
   19ca8:	b	19cac <__assert_fail@plt+0x8438>
   19cac:	b	1a528 <__assert_fail@plt+0x8cb4>
   19cb0:	movw	r0, #97	; 0x61
   19cb4:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cb8:	b	19d78 <__assert_fail@plt+0x8504>
   19cbc:	movw	r0, #98	; 0x62
   19cc0:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cc4:	b	19d78 <__assert_fail@plt+0x8504>
   19cc8:	movw	r0, #102	; 0x66
   19ccc:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cd0:	b	19d78 <__assert_fail@plt+0x8504>
   19cd4:	movw	r0, #110	; 0x6e
   19cd8:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cdc:	b	19d58 <__assert_fail@plt+0x84e4>
   19ce0:	movw	r0, #114	; 0x72
   19ce4:	strb	r0, [fp, #-64]	; 0xffffffc0
   19ce8:	b	19d58 <__assert_fail@plt+0x84e4>
   19cec:	movw	r0, #116	; 0x74
   19cf0:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cf4:	b	19d58 <__assert_fail@plt+0x84e4>
   19cf8:	movw	r0, #118	; 0x76
   19cfc:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d00:	b	19d78 <__assert_fail@plt+0x8504>
   19d04:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19d08:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d0c:	ldr	r0, [fp, #8]
   19d10:	cmp	r0, #2
   19d14:	bne	19d2c <__assert_fail@plt+0x84b8>
   19d18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d1c:	tst	r0, #1
   19d20:	beq	19d28 <__assert_fail@plt+0x84b4>
   19d24:	b	1a91c <__assert_fail@plt+0x90a8>
   19d28:	b	1a6b0 <__assert_fail@plt+0x8e3c>
   19d2c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d30:	tst	r0, #1
   19d34:	beq	19d54 <__assert_fail@plt+0x84e0>
   19d38:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d3c:	tst	r0, #1
   19d40:	beq	19d54 <__assert_fail@plt+0x84e0>
   19d44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d48:	cmp	r0, #0
   19d4c:	beq	19d54 <__assert_fail@plt+0x84e0>
   19d50:	b	1a6b0 <__assert_fail@plt+0x8e3c>
   19d54:	b	19d58 <__assert_fail@plt+0x84e4>
   19d58:	ldr	r0, [fp, #8]
   19d5c:	cmp	r0, #2
   19d60:	bne	19d74 <__assert_fail@plt+0x8500>
   19d64:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d68:	tst	r0, #1
   19d6c:	beq	19d74 <__assert_fail@plt+0x8500>
   19d70:	b	1a91c <__assert_fail@plt+0x90a8>
   19d74:	b	19d78 <__assert_fail@plt+0x8504>
   19d78:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d7c:	tst	r0, #1
   19d80:	beq	19d90 <__assert_fail@plt+0x851c>
   19d84:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   19d88:	strb	r0, [fp, #-63]	; 0xffffffc1
   19d8c:	b	1a59c <__assert_fail@plt+0x8d28>
   19d90:	b	1a528 <__assert_fail@plt+0x8cb4>
   19d94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19d98:	cmn	r0, #1
   19d9c:	bne	19db4 <__assert_fail@plt+0x8540>
   19da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19da4:	ldrb	r0, [r0, #1]
   19da8:	cmp	r0, #0
   19dac:	beq	19dc4 <__assert_fail@plt+0x8550>
   19db0:	b	19dc0 <__assert_fail@plt+0x854c>
   19db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19db8:	cmp	r0, #1
   19dbc:	beq	19dc4 <__assert_fail@plt+0x8550>
   19dc0:	b	1a528 <__assert_fail@plt+0x8cb4>
   19dc4:	b	19dc8 <__assert_fail@plt+0x8554>
   19dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19dcc:	cmp	r0, #0
   19dd0:	beq	19dd8 <__assert_fail@plt+0x8564>
   19dd4:	b	1a528 <__assert_fail@plt+0x8cb4>
   19dd8:	b	19ddc <__assert_fail@plt+0x8568>
   19ddc:	movw	r0, #1
   19de0:	strb	r0, [fp, #-67]	; 0xffffffbd
   19de4:	ldr	r0, [fp, #8]
   19de8:	cmp	r0, #2
   19dec:	bne	19e00 <__assert_fail@plt+0x858c>
   19df0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19df4:	tst	r0, #1
   19df8:	beq	19e00 <__assert_fail@plt+0x858c>
   19dfc:	b	1a91c <__assert_fail@plt+0x90a8>
   19e00:	b	1a528 <__assert_fail@plt+0x8cb4>
   19e04:	movw	r0, #1
   19e08:	strb	r0, [fp, #-61]	; 0xffffffc3
   19e0c:	strb	r0, [fp, #-67]	; 0xffffffbd
   19e10:	ldr	r0, [fp, #8]
   19e14:	cmp	r0, #2
   19e18:	bne	19ef8 <__assert_fail@plt+0x8684>
   19e1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19e20:	tst	r0, #1
   19e24:	beq	19e2c <__assert_fail@plt+0x85b8>
   19e28:	b	1a91c <__assert_fail@plt+0x90a8>
   19e2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e30:	cmp	r0, #0
   19e34:	beq	19e54 <__assert_fail@plt+0x85e0>
   19e38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e3c:	cmp	r0, #0
   19e40:	bne	19e54 <__assert_fail@plt+0x85e0>
   19e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e48:	str	r0, [fp, #-48]	; 0xffffffd0
   19e4c:	movw	r0, #0
   19e50:	str	r0, [fp, #-28]	; 0xffffffe4
   19e54:	b	19e58 <__assert_fail@plt+0x85e4>
   19e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e60:	cmp	r0, r1
   19e64:	bcs	19e7c <__assert_fail@plt+0x8608>
   19e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19e70:	add	r0, r0, r1
   19e74:	movw	r1, #39	; 0x27
   19e78:	strb	r1, [r0]
   19e7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e80:	add	r0, r0, #1
   19e84:	str	r0, [fp, #-44]	; 0xffffffd4
   19e88:	b	19e8c <__assert_fail@plt+0x8618>
   19e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e94:	cmp	r0, r1
   19e98:	bcs	19eb0 <__assert_fail@plt+0x863c>
   19e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ea4:	add	r0, r0, r1
   19ea8:	movw	r1, #92	; 0x5c
   19eac:	strb	r1, [r0]
   19eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19eb4:	add	r0, r0, #1
   19eb8:	str	r0, [fp, #-44]	; 0xffffffd4
   19ebc:	b	19ec0 <__assert_fail@plt+0x864c>
   19ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ec8:	cmp	r0, r1
   19ecc:	bcs	19ee4 <__assert_fail@plt+0x8670>
   19ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ed8:	add	r0, r0, r1
   19edc:	movw	r1, #39	; 0x27
   19ee0:	strb	r1, [r0]
   19ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ee8:	add	r0, r0, #1
   19eec:	str	r0, [fp, #-44]	; 0xffffffd4
   19ef0:	movw	r0, #0
   19ef4:	strb	r0, [fp, #-60]	; 0xffffffc4
   19ef8:	b	1a528 <__assert_fail@plt+0x8cb4>
   19efc:	movw	r0, #1
   19f00:	strb	r0, [fp, #-67]	; 0xffffffbd
   19f04:	b	1a528 <__assert_fail@plt+0x8cb4>
   19f08:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   19f0c:	tst	r0, #1
   19f10:	beq	19f50 <__assert_fail@plt+0x86dc>
   19f14:	mov	r0, #1
   19f18:	str	r0, [fp, #-72]	; 0xffffffb8
   19f1c:	bl	11688 <__ctype_b_loc@plt>
   19f20:	ldr	r0, [r0]
   19f24:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19f28:	mov	r2, r1
   19f2c:	add	r0, r0, r1, lsl #1
   19f30:	ldrh	r0, [r0]
   19f34:	and	r0, r0, #16384	; 0x4000
   19f38:	cmp	r0, #0
   19f3c:	movw	r0, #0
   19f40:	movne	r0, #1
   19f44:	and	r0, r0, #1
   19f48:	strb	r0, [fp, #-73]	; 0xffffffb7
   19f4c:	b	1a1dc <__assert_fail@plt+0x8968>
   19f50:	sub	r0, fp, #84	; 0x54
   19f54:	movw	r1, #0
   19f58:	and	r1, r1, #255	; 0xff
   19f5c:	movw	r2, #8
   19f60:	bl	11718 <memset@plt>
   19f64:	movw	r0, #0
   19f68:	str	r0, [fp, #-72]	; 0xffffffb8
   19f6c:	movw	r0, #1
   19f70:	strb	r0, [fp, #-73]	; 0xffffffb7
   19f74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f78:	cmn	r0, #1
   19f7c:	bne	19f8c <__assert_fail@plt+0x8718>
   19f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f84:	bl	116d0 <strlen@plt>
   19f88:	str	r0, [fp, #-36]	; 0xffffffdc
   19f8c:	b	19f90 <__assert_fail@plt+0x871c>
   19f90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19f98:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19f9c:	add	r1, r1, r2
   19fa0:	add	r1, r0, r1
   19fa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19fa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19fb0:	add	r2, r2, r3
   19fb4:	sub	r2, r0, r2
   19fb8:	add	r0, sp, #88	; 0x58
   19fbc:	sub	r3, fp, #84	; 0x54
   19fc0:	bl	20ba4 <__assert_fail@plt+0xf330>
   19fc4:	str	r0, [sp, #84]	; 0x54
   19fc8:	ldr	r0, [sp, #84]	; 0x54
   19fcc:	cmp	r0, #0
   19fd0:	bne	19fd8 <__assert_fail@plt+0x8764>
   19fd4:	b	1a1d8 <__assert_fail@plt+0x8964>
   19fd8:	ldr	r0, [sp, #84]	; 0x54
   19fdc:	cmn	r0, #1
   19fe0:	bne	19ff0 <__assert_fail@plt+0x877c>
   19fe4:	movw	r0, #0
   19fe8:	strb	r0, [fp, #-73]	; 0xffffffb7
   19fec:	b	1a1d8 <__assert_fail@plt+0x8964>
   19ff0:	ldr	r0, [sp, #84]	; 0x54
   19ff4:	cmn	r0, #2
   19ff8:	bne	1a06c <__assert_fail@plt+0x87f8>
   19ffc:	movw	r0, #0
   1a000:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a004:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a008:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a00c:	add	r0, r0, r1
   1a010:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a014:	cmp	r0, r1
   1a018:	movw	r0, #0
   1a01c:	str	r0, [sp, #24]
   1a020:	bcs	1a04c <__assert_fail@plt+0x87d8>
   1a024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a028:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a02c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a030:	add	r1, r1, r2
   1a034:	add	r0, r0, r1
   1a038:	ldrb	r0, [r0]
   1a03c:	cmp	r0, #0
   1a040:	movw	r0, #0
   1a044:	movne	r0, #1
   1a048:	str	r0, [sp, #24]
   1a04c:	ldr	r0, [sp, #24]
   1a050:	tst	r0, #1
   1a054:	beq	1a068 <__assert_fail@plt+0x87f4>
   1a058:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a05c:	add	r0, r0, #1
   1a060:	str	r0, [fp, #-72]	; 0xffffffb8
   1a064:	b	1a004 <__assert_fail@plt+0x8790>
   1a068:	b	1a1d8 <__assert_fail@plt+0x8964>
   1a06c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a070:	tst	r0, #1
   1a074:	beq	1a180 <__assert_fail@plt+0x890c>
   1a078:	ldr	r0, [fp, #8]
   1a07c:	cmp	r0, #2
   1a080:	bne	1a180 <__assert_fail@plt+0x890c>
   1a084:	movw	r0, #1
   1a088:	str	r0, [sp, #80]	; 0x50
   1a08c:	ldr	r0, [sp, #80]	; 0x50
   1a090:	ldr	r1, [sp, #84]	; 0x54
   1a094:	cmp	r0, r1
   1a098:	bcs	1a17c <__assert_fail@plt+0x8908>
   1a09c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a0a8:	add	r1, r1, r2
   1a0ac:	ldr	r2, [sp, #80]	; 0x50
   1a0b0:	add	r1, r1, r2
   1a0b4:	ldrb	r0, [r0, r1]
   1a0b8:	sub	r0, r0, #91	; 0x5b
   1a0bc:	cmp	r0, #33	; 0x21
   1a0c0:	str	r0, [sp, #20]
   1a0c4:	bhi	1a164 <__assert_fail@plt+0x88f0>
   1a0c8:	add	r0, pc, #8
   1a0cc:	ldr	r1, [sp, #20]
   1a0d0:	ldr	r0, [r0, r1, lsl #2]
   1a0d4:	mov	pc, r0
   1a0d8:	andeq	sl, r1, r0, ror #2
   1a0dc:	andeq	sl, r1, r0, ror #2
   1a0e0:	andeq	sl, r1, r4, ror #2
   1a0e4:	andeq	sl, r1, r0, ror #2
   1a0e8:	andeq	sl, r1, r4, ror #2
   1a0ec:	andeq	sl, r1, r0, ror #2
   1a0f0:	andeq	sl, r1, r4, ror #2
   1a0f4:	andeq	sl, r1, r4, ror #2
   1a0f8:	andeq	sl, r1, r4, ror #2
   1a0fc:	andeq	sl, r1, r4, ror #2
   1a100:	andeq	sl, r1, r4, ror #2
   1a104:	andeq	sl, r1, r4, ror #2
   1a108:	andeq	sl, r1, r4, ror #2
   1a10c:	andeq	sl, r1, r4, ror #2
   1a110:	andeq	sl, r1, r4, ror #2
   1a114:	andeq	sl, r1, r4, ror #2
   1a118:	andeq	sl, r1, r4, ror #2
   1a11c:	andeq	sl, r1, r4, ror #2
   1a120:	andeq	sl, r1, r4, ror #2
   1a124:	andeq	sl, r1, r4, ror #2
   1a128:	andeq	sl, r1, r4, ror #2
   1a12c:	andeq	sl, r1, r4, ror #2
   1a130:	andeq	sl, r1, r4, ror #2
   1a134:	andeq	sl, r1, r4, ror #2
   1a138:	andeq	sl, r1, r4, ror #2
   1a13c:	andeq	sl, r1, r4, ror #2
   1a140:	andeq	sl, r1, r4, ror #2
   1a144:	andeq	sl, r1, r4, ror #2
   1a148:	andeq	sl, r1, r4, ror #2
   1a14c:	andeq	sl, r1, r4, ror #2
   1a150:	andeq	sl, r1, r4, ror #2
   1a154:	andeq	sl, r1, r4, ror #2
   1a158:	andeq	sl, r1, r4, ror #2
   1a15c:	andeq	sl, r1, r0, ror #2
   1a160:	b	1a91c <__assert_fail@plt+0x90a8>
   1a164:	b	1a168 <__assert_fail@plt+0x88f4>
   1a168:	b	1a16c <__assert_fail@plt+0x88f8>
   1a16c:	ldr	r0, [sp, #80]	; 0x50
   1a170:	add	r0, r0, #1
   1a174:	str	r0, [sp, #80]	; 0x50
   1a178:	b	1a08c <__assert_fail@plt+0x8818>
   1a17c:	b	1a180 <__assert_fail@plt+0x890c>
   1a180:	ldr	r0, [sp, #88]	; 0x58
   1a184:	bl	115b0 <iswprint@plt>
   1a188:	cmp	r0, #0
   1a18c:	bne	1a198 <__assert_fail@plt+0x8924>
   1a190:	movw	r0, #0
   1a194:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a198:	ldr	r0, [sp, #84]	; 0x54
   1a19c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a1a0:	add	r0, r1, r0
   1a1a4:	str	r0, [fp, #-72]	; 0xffffffb8
   1a1a8:	b	1a1ac <__assert_fail@plt+0x8938>
   1a1ac:	b	1a1b0 <__assert_fail@plt+0x893c>
   1a1b0:	b	1a1b4 <__assert_fail@plt+0x8940>
   1a1b4:	sub	r0, fp, #84	; 0x54
   1a1b8:	bl	11538 <mbsinit@plt>
   1a1bc:	cmp	r0, #0
   1a1c0:	movw	r0, #0
   1a1c4:	movne	r0, #1
   1a1c8:	mvn	r1, #0
   1a1cc:	eor	r0, r0, r1
   1a1d0:	tst	r0, #1
   1a1d4:	bne	19f90 <__assert_fail@plt+0x871c>
   1a1d8:	b	1a1dc <__assert_fail@plt+0x8968>
   1a1dc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a1e0:	and	r0, r0, #1
   1a1e4:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a1e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a1ec:	movw	r1, #1
   1a1f0:	cmp	r1, r0
   1a1f4:	bcc	1a210 <__assert_fail@plt+0x899c>
   1a1f8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a1fc:	tst	r0, #1
   1a200:	beq	1a524 <__assert_fail@plt+0x8cb0>
   1a204:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a208:	tst	r0, #1
   1a20c:	bne	1a524 <__assert_fail@plt+0x8cb0>
   1a210:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a214:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a218:	add	r0, r0, r1
   1a21c:	str	r0, [sp, #76]	; 0x4c
   1a220:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a224:	tst	r0, #1
   1a228:	beq	1a3d8 <__assert_fail@plt+0x8b64>
   1a22c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a230:	tst	r0, #1
   1a234:	bne	1a3d8 <__assert_fail@plt+0x8b64>
   1a238:	b	1a23c <__assert_fail@plt+0x89c8>
   1a23c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a240:	tst	r0, #1
   1a244:	beq	1a24c <__assert_fail@plt+0x89d8>
   1a248:	b	1a91c <__assert_fail@plt+0x90a8>
   1a24c:	movw	r0, #1
   1a250:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a254:	ldr	r0, [fp, #8]
   1a258:	cmp	r0, #2
   1a25c:	bne	1a310 <__assert_fail@plt+0x8a9c>
   1a260:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a264:	tst	r0, #1
   1a268:	bne	1a310 <__assert_fail@plt+0x8a9c>
   1a26c:	b	1a270 <__assert_fail@plt+0x89fc>
   1a270:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a278:	cmp	r0, r1
   1a27c:	bcs	1a294 <__assert_fail@plt+0x8a20>
   1a280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a284:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a288:	add	r0, r0, r1
   1a28c:	movw	r1, #39	; 0x27
   1a290:	strb	r1, [r0]
   1a294:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a298:	add	r0, r0, #1
   1a29c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2a0:	b	1a2a4 <__assert_fail@plt+0x8a30>
   1a2a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2ac:	cmp	r0, r1
   1a2b0:	bcs	1a2c8 <__assert_fail@plt+0x8a54>
   1a2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2bc:	add	r0, r0, r1
   1a2c0:	movw	r1, #36	; 0x24
   1a2c4:	strb	r1, [r0]
   1a2c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2cc:	add	r0, r0, #1
   1a2d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2d4:	b	1a2d8 <__assert_fail@plt+0x8a64>
   1a2d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2e0:	cmp	r0, r1
   1a2e4:	bcs	1a2fc <__assert_fail@plt+0x8a88>
   1a2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2f0:	add	r0, r0, r1
   1a2f4:	movw	r1, #39	; 0x27
   1a2f8:	strb	r1, [r0]
   1a2fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a300:	add	r0, r0, #1
   1a304:	str	r0, [fp, #-44]	; 0xffffffd4
   1a308:	movw	r0, #1
   1a30c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a310:	b	1a314 <__assert_fail@plt+0x8aa0>
   1a314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a31c:	cmp	r0, r1
   1a320:	bcs	1a338 <__assert_fail@plt+0x8ac4>
   1a324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a328:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a32c:	add	r0, r0, r1
   1a330:	movw	r1, #92	; 0x5c
   1a334:	strb	r1, [r0]
   1a338:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a33c:	add	r0, r0, #1
   1a340:	str	r0, [fp, #-44]	; 0xffffffd4
   1a344:	b	1a348 <__assert_fail@plt+0x8ad4>
   1a348:	b	1a34c <__assert_fail@plt+0x8ad8>
   1a34c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a350:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a354:	cmp	r0, r1
   1a358:	bcs	1a378 <__assert_fail@plt+0x8b04>
   1a35c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a360:	asr	r0, r0, #6
   1a364:	add	r0, r0, #48	; 0x30
   1a368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a36c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a370:	add	r1, r1, r2
   1a374:	strb	r0, [r1]
   1a378:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a37c:	add	r0, r0, #1
   1a380:	str	r0, [fp, #-44]	; 0xffffffd4
   1a384:	b	1a388 <__assert_fail@plt+0x8b14>
   1a388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a38c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a390:	cmp	r0, r1
   1a394:	bcs	1a3b8 <__assert_fail@plt+0x8b44>
   1a398:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a39c:	asr	r0, r0, #3
   1a3a0:	and	r0, r0, #7
   1a3a4:	add	r0, r0, #48	; 0x30
   1a3a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a3b0:	add	r1, r1, r2
   1a3b4:	strb	r0, [r1]
   1a3b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3bc:	add	r0, r0, #1
   1a3c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3c4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3c8:	and	r0, r0, #7
   1a3cc:	add	r0, r0, #48	; 0x30
   1a3d0:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a3d4:	b	1a424 <__assert_fail@plt+0x8bb0>
   1a3d8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a3dc:	tst	r0, #1
   1a3e0:	beq	1a420 <__assert_fail@plt+0x8bac>
   1a3e4:	b	1a3e8 <__assert_fail@plt+0x8b74>
   1a3e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3f0:	cmp	r0, r1
   1a3f4:	bcs	1a40c <__assert_fail@plt+0x8b98>
   1a3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a400:	add	r0, r0, r1
   1a404:	movw	r1, #92	; 0x5c
   1a408:	strb	r1, [r0]
   1a40c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a410:	add	r0, r0, #1
   1a414:	str	r0, [fp, #-44]	; 0xffffffd4
   1a418:	movw	r0, #0
   1a41c:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a420:	b	1a424 <__assert_fail@plt+0x8bb0>
   1a424:	ldr	r0, [sp, #76]	; 0x4c
   1a428:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a42c:	add	r1, r1, #1
   1a430:	cmp	r0, r1
   1a434:	bhi	1a43c <__assert_fail@plt+0x8bc8>
   1a438:	b	1a520 <__assert_fail@plt+0x8cac>
   1a43c:	b	1a440 <__assert_fail@plt+0x8bcc>
   1a440:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a444:	tst	r0, #1
   1a448:	beq	1a4c8 <__assert_fail@plt+0x8c54>
   1a44c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a450:	tst	r0, #1
   1a454:	bne	1a4c8 <__assert_fail@plt+0x8c54>
   1a458:	b	1a45c <__assert_fail@plt+0x8be8>
   1a45c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a460:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a464:	cmp	r0, r1
   1a468:	bcs	1a480 <__assert_fail@plt+0x8c0c>
   1a46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a474:	add	r0, r0, r1
   1a478:	movw	r1, #39	; 0x27
   1a47c:	strb	r1, [r0]
   1a480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a484:	add	r0, r0, #1
   1a488:	str	r0, [fp, #-44]	; 0xffffffd4
   1a48c:	b	1a490 <__assert_fail@plt+0x8c1c>
   1a490:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a494:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a498:	cmp	r0, r1
   1a49c:	bcs	1a4b4 <__assert_fail@plt+0x8c40>
   1a4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4a8:	add	r0, r0, r1
   1a4ac:	movw	r1, #39	; 0x27
   1a4b0:	strb	r1, [r0]
   1a4b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4b8:	add	r0, r0, #1
   1a4bc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4c0:	movw	r0, #0
   1a4c4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a4c8:	b	1a4cc <__assert_fail@plt+0x8c58>
   1a4cc:	b	1a4d0 <__assert_fail@plt+0x8c5c>
   1a4d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4d8:	cmp	r0, r1
   1a4dc:	bcs	1a4f4 <__assert_fail@plt+0x8c80>
   1a4e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a4e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a4ec:	add	r1, r1, r2
   1a4f0:	strb	r0, [r1]
   1a4f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4f8:	add	r0, r0, #1
   1a4fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a504:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a508:	add	r1, r1, #1
   1a50c:	str	r1, [fp, #-40]	; 0xffffffd8
   1a510:	add	r0, r0, r1
   1a514:	ldrb	r0, [r0]
   1a518:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a51c:	b	1a220 <__assert_fail@plt+0x89ac>
   1a520:	b	1a6b0 <__assert_fail@plt+0x8e3c>
   1a524:	b	1a528 <__assert_fail@plt+0x8cb4>
   1a528:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a52c:	tst	r0, #1
   1a530:	beq	1a540 <__assert_fail@plt+0x8ccc>
   1a534:	ldr	r0, [fp, #8]
   1a538:	cmp	r0, #2
   1a53c:	bne	1a54c <__assert_fail@plt+0x8cd8>
   1a540:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a544:	tst	r0, #1
   1a548:	beq	1a588 <__assert_fail@plt+0x8d14>
   1a54c:	ldr	r0, [fp, #16]
   1a550:	movw	r1, #0
   1a554:	cmp	r0, r1
   1a558:	beq	1a588 <__assert_fail@plt+0x8d14>
   1a55c:	ldr	r0, [fp, #16]
   1a560:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a564:	lsr	r1, r1, #5
   1a568:	add	r0, r0, r1, lsl #2
   1a56c:	ldr	r0, [r0]
   1a570:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a574:	and	r1, r1, #31
   1a578:	lsr	r0, r0, r1
   1a57c:	and	r0, r0, #1
   1a580:	cmp	r0, #0
   1a584:	bne	1a598 <__assert_fail@plt+0x8d24>
   1a588:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a58c:	tst	r0, #1
   1a590:	bne	1a598 <__assert_fail@plt+0x8d24>
   1a594:	b	1a6b0 <__assert_fail@plt+0x8e3c>
   1a598:	b	1a59c <__assert_fail@plt+0x8d28>
   1a59c:	b	1a5a0 <__assert_fail@plt+0x8d2c>
   1a5a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a5a4:	tst	r0, #1
   1a5a8:	beq	1a5b0 <__assert_fail@plt+0x8d3c>
   1a5ac:	b	1a91c <__assert_fail@plt+0x90a8>
   1a5b0:	movw	r0, #1
   1a5b4:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a5b8:	ldr	r0, [fp, #8]
   1a5bc:	cmp	r0, #2
   1a5c0:	bne	1a674 <__assert_fail@plt+0x8e00>
   1a5c4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a5c8:	tst	r0, #1
   1a5cc:	bne	1a674 <__assert_fail@plt+0x8e00>
   1a5d0:	b	1a5d4 <__assert_fail@plt+0x8d60>
   1a5d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a5dc:	cmp	r0, r1
   1a5e0:	bcs	1a5f8 <__assert_fail@plt+0x8d84>
   1a5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5ec:	add	r0, r0, r1
   1a5f0:	movw	r1, #39	; 0x27
   1a5f4:	strb	r1, [r0]
   1a5f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5fc:	add	r0, r0, #1
   1a600:	str	r0, [fp, #-44]	; 0xffffffd4
   1a604:	b	1a608 <__assert_fail@plt+0x8d94>
   1a608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a60c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a610:	cmp	r0, r1
   1a614:	bcs	1a62c <__assert_fail@plt+0x8db8>
   1a618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a61c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a620:	add	r0, r0, r1
   1a624:	movw	r1, #36	; 0x24
   1a628:	strb	r1, [r0]
   1a62c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a630:	add	r0, r0, #1
   1a634:	str	r0, [fp, #-44]	; 0xffffffd4
   1a638:	b	1a63c <__assert_fail@plt+0x8dc8>
   1a63c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a644:	cmp	r0, r1
   1a648:	bcs	1a660 <__assert_fail@plt+0x8dec>
   1a64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a650:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a654:	add	r0, r0, r1
   1a658:	movw	r1, #39	; 0x27
   1a65c:	strb	r1, [r0]
   1a660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a664:	add	r0, r0, #1
   1a668:	str	r0, [fp, #-44]	; 0xffffffd4
   1a66c:	movw	r0, #1
   1a670:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a674:	b	1a678 <__assert_fail@plt+0x8e04>
   1a678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a67c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a680:	cmp	r0, r1
   1a684:	bcs	1a69c <__assert_fail@plt+0x8e28>
   1a688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a68c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a690:	add	r0, r0, r1
   1a694:	movw	r1, #92	; 0x5c
   1a698:	strb	r1, [r0]
   1a69c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6a0:	add	r0, r0, #1
   1a6a4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6a8:	b	1a6ac <__assert_fail@plt+0x8e38>
   1a6ac:	b	1a6b0 <__assert_fail@plt+0x8e3c>
   1a6b0:	b	1a6b4 <__assert_fail@plt+0x8e40>
   1a6b4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a6b8:	tst	r0, #1
   1a6bc:	beq	1a73c <__assert_fail@plt+0x8ec8>
   1a6c0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a6c4:	tst	r0, #1
   1a6c8:	bne	1a73c <__assert_fail@plt+0x8ec8>
   1a6cc:	b	1a6d0 <__assert_fail@plt+0x8e5c>
   1a6d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6d8:	cmp	r0, r1
   1a6dc:	bcs	1a6f4 <__assert_fail@plt+0x8e80>
   1a6e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6e8:	add	r0, r0, r1
   1a6ec:	movw	r1, #39	; 0x27
   1a6f0:	strb	r1, [r0]
   1a6f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6f8:	add	r0, r0, #1
   1a6fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a700:	b	1a704 <__assert_fail@plt+0x8e90>
   1a704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a70c:	cmp	r0, r1
   1a710:	bcs	1a728 <__assert_fail@plt+0x8eb4>
   1a714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a718:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a71c:	add	r0, r0, r1
   1a720:	movw	r1, #39	; 0x27
   1a724:	strb	r1, [r0]
   1a728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a72c:	add	r0, r0, #1
   1a730:	str	r0, [fp, #-44]	; 0xffffffd4
   1a734:	movw	r0, #0
   1a738:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a73c:	b	1a740 <__assert_fail@plt+0x8ecc>
   1a740:	b	1a744 <__assert_fail@plt+0x8ed0>
   1a744:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a748:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a74c:	cmp	r0, r1
   1a750:	bcs	1a768 <__assert_fail@plt+0x8ef4>
   1a754:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a75c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a760:	add	r1, r1, r2
   1a764:	strb	r0, [r1]
   1a768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a76c:	add	r0, r0, #1
   1a770:	str	r0, [fp, #-44]	; 0xffffffd4
   1a774:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1a778:	tst	r0, #1
   1a77c:	bne	1a788 <__assert_fail@plt+0x8f14>
   1a780:	movw	r0, #0
   1a784:	strb	r0, [fp, #-62]	; 0xffffffc2
   1a788:	b	1a78c <__assert_fail@plt+0x8f18>
   1a78c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a790:	add	r0, r0, #1
   1a794:	str	r0, [fp, #-40]	; 0xffffffd8
   1a798:	b	19544 <__assert_fail@plt+0x7cd0>
   1a79c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7a0:	cmp	r0, #0
   1a7a4:	bne	1a7c4 <__assert_fail@plt+0x8f50>
   1a7a8:	ldr	r0, [fp, #8]
   1a7ac:	cmp	r0, #2
   1a7b0:	bne	1a7c4 <__assert_fail@plt+0x8f50>
   1a7b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a7b8:	tst	r0, #1
   1a7bc:	beq	1a7c4 <__assert_fail@plt+0x8f50>
   1a7c0:	b	1a91c <__assert_fail@plt+0x90a8>
   1a7c4:	ldr	r0, [fp, #8]
   1a7c8:	cmp	r0, #2
   1a7cc:	bne	1a86c <__assert_fail@plt+0x8ff8>
   1a7d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a7d4:	tst	r0, #1
   1a7d8:	bne	1a86c <__assert_fail@plt+0x8ff8>
   1a7dc:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1a7e0:	tst	r0, #1
   1a7e4:	beq	1a86c <__assert_fail@plt+0x8ff8>
   1a7e8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1a7ec:	tst	r0, #1
   1a7f0:	beq	1a838 <__assert_fail@plt+0x8fc4>
   1a7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a7fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a800:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a804:	ldr	ip, [fp, #12]
   1a808:	ldr	lr, [fp, #16]
   1a80c:	ldr	r4, [fp, #20]
   1a810:	ldr	r5, [fp, #24]
   1a814:	movw	r6, #5
   1a818:	str	r6, [sp]
   1a81c:	str	ip, [sp, #4]
   1a820:	str	lr, [sp, #8]
   1a824:	str	r4, [sp, #12]
   1a828:	str	r5, [sp, #16]
   1a82c:	bl	1925c <__assert_fail@plt+0x79e8>
   1a830:	str	r0, [fp, #-20]	; 0xffffffec
   1a834:	b	1a984 <__assert_fail@plt+0x9110>
   1a838:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a83c:	cmp	r0, #0
   1a840:	bne	1a864 <__assert_fail@plt+0x8ff0>
   1a844:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a848:	cmp	r0, #0
   1a84c:	beq	1a864 <__assert_fail@plt+0x8ff0>
   1a850:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a854:	str	r0, [fp, #-28]	; 0xffffffe4
   1a858:	movw	r0, #0
   1a85c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a860:	b	19304 <__assert_fail@plt+0x7a90>
   1a864:	b	1a868 <__assert_fail@plt+0x8ff4>
   1a868:	b	1a86c <__assert_fail@plt+0x8ff8>
   1a86c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a870:	movw	r1, #0
   1a874:	cmp	r0, r1
   1a878:	beq	1a8ec <__assert_fail@plt+0x9078>
   1a87c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a880:	tst	r0, #1
   1a884:	bne	1a8ec <__assert_fail@plt+0x9078>
   1a888:	b	1a88c <__assert_fail@plt+0x9018>
   1a88c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a890:	ldrsb	r0, [r0]
   1a894:	cmp	r0, #0
   1a898:	beq	1a8e8 <__assert_fail@plt+0x9074>
   1a89c:	b	1a8a0 <__assert_fail@plt+0x902c>
   1a8a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8a8:	cmp	r0, r1
   1a8ac:	bcs	1a8c8 <__assert_fail@plt+0x9054>
   1a8b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a8b4:	ldrb	r0, [r0]
   1a8b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a8bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a8c0:	add	r1, r1, r2
   1a8c4:	strb	r0, [r1]
   1a8c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8cc:	add	r0, r0, #1
   1a8d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8d4:	b	1a8d8 <__assert_fail@plt+0x9064>
   1a8d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a8dc:	add	r0, r0, #1
   1a8e0:	str	r0, [fp, #-52]	; 0xffffffcc
   1a8e4:	b	1a88c <__assert_fail@plt+0x9018>
   1a8e8:	b	1a8ec <__assert_fail@plt+0x9078>
   1a8ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8f4:	cmp	r0, r1
   1a8f8:	bcs	1a910 <__assert_fail@plt+0x909c>
   1a8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a900:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a904:	add	r0, r0, r1
   1a908:	movw	r1, #0
   1a90c:	strb	r1, [r0]
   1a910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a914:	str	r0, [fp, #-20]	; 0xffffffec
   1a918:	b	1a984 <__assert_fail@plt+0x9110>
   1a91c:	ldr	r0, [fp, #8]
   1a920:	cmp	r0, #2
   1a924:	bne	1a93c <__assert_fail@plt+0x90c8>
   1a928:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a92c:	tst	r0, #1
   1a930:	beq	1a93c <__assert_fail@plt+0x90c8>
   1a934:	movw	r0, #4
   1a938:	str	r0, [fp, #8]
   1a93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a940:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a944:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a94c:	ldr	ip, [fp, #8]
   1a950:	ldr	lr, [fp, #12]
   1a954:	mvn	r4, #2
   1a958:	and	lr, lr, r4
   1a95c:	ldr	r4, [fp, #20]
   1a960:	ldr	r5, [fp, #24]
   1a964:	str	ip, [sp]
   1a968:	str	lr, [sp, #4]
   1a96c:	movw	ip, #0
   1a970:	str	ip, [sp, #8]
   1a974:	str	r4, [sp, #12]
   1a978:	str	r5, [sp, #16]
   1a97c:	bl	1925c <__assert_fail@plt+0x79e8>
   1a980:	str	r0, [fp, #-20]	; 0xffffffec
   1a984:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a988:	sub	sp, fp, #16
   1a98c:	pop	{r4, r5, r6, sl, fp, pc}
   1a990:	push	{fp, lr}
   1a994:	mov	fp, sp
   1a998:	sub	sp, sp, #16
   1a99c:	str	r0, [fp, #-4]
   1a9a0:	str	r1, [sp, #8]
   1a9a4:	str	r2, [sp, #4]
   1a9a8:	ldr	r0, [fp, #-4]
   1a9ac:	ldr	r1, [sp, #8]
   1a9b0:	ldr	r3, [sp, #4]
   1a9b4:	movw	r2, #0
   1a9b8:	bl	1a9c4 <__assert_fail@plt+0x9150>
   1a9bc:	mov	sp, fp
   1a9c0:	pop	{fp, pc}
   1a9c4:	push	{r4, r5, r6, sl, fp, lr}
   1a9c8:	add	fp, sp, #16
   1a9cc:	sub	sp, sp, #80	; 0x50
   1a9d0:	str	r0, [fp, #-20]	; 0xffffffec
   1a9d4:	str	r1, [fp, #-24]	; 0xffffffe8
   1a9d8:	str	r2, [fp, #-28]	; 0xffffffe4
   1a9dc:	str	r3, [fp, #-32]	; 0xffffffe0
   1a9e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9e4:	movw	r1, #0
   1a9e8:	cmp	r0, r1
   1a9ec:	beq	1a9fc <__assert_fail@plt+0x9188>
   1a9f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9f4:	str	r0, [sp, #40]	; 0x28
   1a9f8:	b	1aa0c <__assert_fail@plt+0x9198>
   1a9fc:	movw	r0, #21008	; 0x5210
   1aa00:	movt	r0, #3
   1aa04:	str	r0, [sp, #40]	; 0x28
   1aa08:	b	1aa0c <__assert_fail@plt+0x9198>
   1aa0c:	ldr	r0, [sp, #40]	; 0x28
   1aa10:	str	r0, [fp, #-36]	; 0xffffffdc
   1aa14:	bl	11700 <__errno_location@plt>
   1aa18:	ldr	r0, [r0]
   1aa1c:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa24:	ldr	r0, [r0, #4]
   1aa28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa2c:	movw	r2, #0
   1aa30:	cmp	r1, r2
   1aa34:	movw	r1, #0
   1aa38:	movne	r1, #1
   1aa3c:	tst	r1, #1
   1aa40:	mov	r1, r2
   1aa44:	moveq	r1, #1
   1aa48:	orr	r0, r0, r1
   1aa4c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa50:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aa5c:	ldr	r1, [r1]
   1aa60:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1aa64:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1aa68:	add	lr, lr, #8
   1aa6c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1aa70:	ldr	r4, [r4, #40]	; 0x28
   1aa74:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1aa78:	ldr	r5, [r5, #44]	; 0x2c
   1aa7c:	str	r0, [sp, #36]	; 0x24
   1aa80:	mov	r0, r2
   1aa84:	str	r1, [sp, #32]
   1aa88:	mov	r1, r2
   1aa8c:	ldr	r2, [sp, #36]	; 0x24
   1aa90:	ldr	r6, [sp, #32]
   1aa94:	str	r6, [sp]
   1aa98:	str	ip, [sp, #4]
   1aa9c:	str	lr, [sp, #8]
   1aaa0:	str	r4, [sp, #12]
   1aaa4:	str	r5, [sp, #16]
   1aaa8:	bl	1925c <__assert_fail@plt+0x79e8>
   1aaac:	add	r0, r0, #1
   1aab0:	str	r0, [sp, #48]	; 0x30
   1aab4:	ldr	r0, [sp, #48]	; 0x30
   1aab8:	bl	1ca5c <__assert_fail@plt+0xb1e8>
   1aabc:	str	r0, [sp, #44]	; 0x2c
   1aac0:	ldr	r0, [sp, #44]	; 0x2c
   1aac4:	ldr	r1, [sp, #48]	; 0x30
   1aac8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aacc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aad0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1aad4:	ldr	ip, [ip]
   1aad8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1aadc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1aae0:	add	r4, r4, #8
   1aae4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1aae8:	ldr	r5, [r5, #40]	; 0x28
   1aaec:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1aaf0:	ldr	r6, [r6, #44]	; 0x2c
   1aaf4:	str	ip, [sp]
   1aaf8:	str	lr, [sp, #4]
   1aafc:	str	r4, [sp, #8]
   1ab00:	str	r5, [sp, #12]
   1ab04:	str	r6, [sp, #16]
   1ab08:	bl	1925c <__assert_fail@plt+0x79e8>
   1ab0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab10:	str	r0, [sp, #28]
   1ab14:	str	r1, [sp, #24]
   1ab18:	bl	11700 <__errno_location@plt>
   1ab1c:	ldr	r1, [sp, #24]
   1ab20:	str	r1, [r0]
   1ab24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab28:	movw	r2, #0
   1ab2c:	cmp	r0, r2
   1ab30:	beq	1ab44 <__assert_fail@plt+0x92d0>
   1ab34:	ldr	r0, [sp, #48]	; 0x30
   1ab38:	sub	r0, r0, #1
   1ab3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab40:	str	r0, [r1]
   1ab44:	ldr	r0, [sp, #44]	; 0x2c
   1ab48:	sub	sp, fp, #16
   1ab4c:	pop	{r4, r5, r6, sl, fp, pc}
   1ab50:	push	{fp, lr}
   1ab54:	mov	fp, sp
   1ab58:	sub	sp, sp, #8
   1ab5c:	movw	r0, #20844	; 0x516c
   1ab60:	movt	r0, #3
   1ab64:	ldr	r0, [r0]
   1ab68:	str	r0, [sp, #4]
   1ab6c:	movw	r0, #1
   1ab70:	str	r0, [sp]
   1ab74:	ldr	r0, [sp]
   1ab78:	movw	r1, #20848	; 0x5170
   1ab7c:	movt	r1, #3
   1ab80:	ldr	r1, [r1]
   1ab84:	cmp	r0, r1
   1ab88:	bge	1abb0 <__assert_fail@plt+0x933c>
   1ab8c:	ldr	r0, [sp, #4]
   1ab90:	ldr	r1, [sp]
   1ab94:	add	r0, r0, r1, lsl #3
   1ab98:	ldr	r0, [r0, #4]
   1ab9c:	bl	2082c <__assert_fail@plt+0xefb8>
   1aba0:	ldr	r0, [sp]
   1aba4:	add	r0, r0, #1
   1aba8:	str	r0, [sp]
   1abac:	b	1ab74 <__assert_fail@plt+0x9300>
   1abb0:	ldr	r0, [sp, #4]
   1abb4:	ldr	r0, [r0, #4]
   1abb8:	movw	r1, #21056	; 0x5240
   1abbc:	movt	r1, #3
   1abc0:	cmp	r0, r1
   1abc4:	beq	1abf0 <__assert_fail@plt+0x937c>
   1abc8:	ldr	r0, [sp, #4]
   1abcc:	ldr	r0, [r0, #4]
   1abd0:	bl	2082c <__assert_fail@plt+0xefb8>
   1abd4:	movw	r0, #256	; 0x100
   1abd8:	movw	r1, #20852	; 0x5174
   1abdc:	movt	r1, #3
   1abe0:	str	r0, [r1]
   1abe4:	movw	r0, #21056	; 0x5240
   1abe8:	movt	r0, #3
   1abec:	str	r0, [r1, #4]
   1abf0:	ldr	r0, [sp, #4]
   1abf4:	movw	r1, #20852	; 0x5174
   1abf8:	movt	r1, #3
   1abfc:	cmp	r0, r1
   1ac00:	beq	1ac20 <__assert_fail@plt+0x93ac>
   1ac04:	ldr	r0, [sp, #4]
   1ac08:	bl	2082c <__assert_fail@plt+0xefb8>
   1ac0c:	movw	r0, #20844	; 0x516c
   1ac10:	movt	r0, #3
   1ac14:	movw	r1, #20852	; 0x5174
   1ac18:	movt	r1, #3
   1ac1c:	str	r1, [r0]
   1ac20:	movw	r0, #20848	; 0x5170
   1ac24:	movt	r0, #3
   1ac28:	movw	r1, #1
   1ac2c:	str	r1, [r0]
   1ac30:	mov	sp, fp
   1ac34:	pop	{fp, pc}
   1ac38:	push	{fp, lr}
   1ac3c:	mov	fp, sp
   1ac40:	sub	sp, sp, #8
   1ac44:	str	r0, [sp, #4]
   1ac48:	str	r1, [sp]
   1ac4c:	ldr	r0, [sp, #4]
   1ac50:	ldr	r1, [sp]
   1ac54:	mvn	r2, #0
   1ac58:	movw	r3, #21008	; 0x5210
   1ac5c:	movt	r3, #3
   1ac60:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1ac64:	mov	sp, fp
   1ac68:	pop	{fp, pc}
   1ac6c:	push	{r4, r5, r6, sl, fp, lr}
   1ac70:	add	fp, sp, #16
   1ac74:	sub	sp, sp, #80	; 0x50
   1ac78:	str	r0, [fp, #-20]	; 0xffffffec
   1ac7c:	str	r1, [fp, #-24]	; 0xffffffe8
   1ac80:	str	r2, [fp, #-28]	; 0xffffffe4
   1ac84:	str	r3, [fp, #-32]	; 0xffffffe0
   1ac88:	bl	11700 <__errno_location@plt>
   1ac8c:	ldr	r1, [pc, #672]	; 1af34 <__assert_fail@plt+0x96c0>
   1ac90:	ldr	r0, [r0]
   1ac94:	str	r0, [fp, #-36]	; 0xffffffdc
   1ac98:	movw	r0, #20844	; 0x516c
   1ac9c:	movt	r0, #3
   1aca0:	ldr	r0, [r0]
   1aca4:	str	r0, [fp, #-40]	; 0xffffffd8
   1aca8:	str	r1, [fp, #-44]	; 0xffffffd4
   1acac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acb0:	movw	r1, #0
   1acb4:	cmp	r1, r0
   1acb8:	bgt	1accc <__assert_fail@plt+0x9458>
   1acbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1acc4:	cmp	r0, r1
   1acc8:	blt	1acd0 <__assert_fail@plt+0x945c>
   1accc:	bl	11838 <abort@plt>
   1acd0:	movw	r0, #20848	; 0x5170
   1acd4:	movt	r0, #3
   1acd8:	ldr	r0, [r0]
   1acdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ace0:	cmp	r0, r1
   1ace4:	bgt	1addc <__assert_fail@plt+0x9568>
   1ace8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1acec:	movw	r1, #20852	; 0x5174
   1acf0:	movt	r1, #3
   1acf4:	cmp	r0, r1
   1acf8:	movw	r0, #0
   1acfc:	moveq	r0, #1
   1ad00:	and	r0, r0, #1
   1ad04:	strb	r0, [fp, #-45]	; 0xffffffd3
   1ad08:	movw	r0, #20848	; 0x5170
   1ad0c:	movt	r0, #3
   1ad10:	ldr	r0, [r0]
   1ad14:	str	r0, [sp, #44]	; 0x2c
   1ad18:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ad1c:	tst	r0, #1
   1ad20:	beq	1ad30 <__assert_fail@plt+0x94bc>
   1ad24:	movw	r0, #0
   1ad28:	str	r0, [sp, #24]
   1ad2c:	b	1ad38 <__assert_fail@plt+0x94c4>
   1ad30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad34:	str	r0, [sp, #24]
   1ad38:	ldr	r0, [sp, #24]
   1ad3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad40:	movw	r2, #20848	; 0x5170
   1ad44:	movt	r2, #3
   1ad48:	ldr	r2, [r2]
   1ad4c:	sub	r1, r1, r2
   1ad50:	add	r2, r1, #1
   1ad54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ad58:	add	r1, sp, #44	; 0x2c
   1ad5c:	movw	ip, #8
   1ad60:	str	ip, [sp]
   1ad64:	bl	1cc98 <__assert_fail@plt+0xb424>
   1ad68:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad6c:	movw	r1, #20844	; 0x516c
   1ad70:	movt	r1, #3
   1ad74:	str	r0, [r1]
   1ad78:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ad7c:	tst	r0, #1
   1ad80:	beq	1ada0 <__assert_fail@plt+0x952c>
   1ad84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad88:	movw	r1, #20852	; 0x5174
   1ad8c:	movt	r1, #3
   1ad90:	ldr	r2, [r1]
   1ad94:	str	r2, [r0]
   1ad98:	ldr	r1, [r1, #4]
   1ad9c:	str	r1, [r0, #4]
   1ada0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ada4:	movw	r1, #20848	; 0x5170
   1ada8:	movt	r1, #3
   1adac:	ldr	r1, [r1]
   1adb0:	add	r0, r0, r1, lsl #3
   1adb4:	ldr	r2, [sp, #44]	; 0x2c
   1adb8:	sub	r1, r2, r1
   1adbc:	lsl	r2, r1, #3
   1adc0:	movw	r1, #0
   1adc4:	and	r1, r1, #255	; 0xff
   1adc8:	bl	11718 <memset@plt>
   1adcc:	ldr	r0, [sp, #44]	; 0x2c
   1add0:	movw	r1, #20848	; 0x5170
   1add4:	movt	r1, #3
   1add8:	str	r0, [r1]
   1addc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ade0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ade4:	ldr	r0, [r0, r1, lsl #3]
   1ade8:	str	r0, [sp, #40]	; 0x28
   1adec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1adf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1adf4:	add	r0, r0, r1, lsl #3
   1adf8:	ldr	r0, [r0, #4]
   1adfc:	str	r0, [sp, #36]	; 0x24
   1ae00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae04:	ldr	r0, [r0, #4]
   1ae08:	orr	r0, r0, #1
   1ae0c:	str	r0, [sp, #32]
   1ae10:	ldr	r0, [sp, #36]	; 0x24
   1ae14:	ldr	r1, [sp, #40]	; 0x28
   1ae18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae20:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1ae24:	ldr	ip, [ip]
   1ae28:	ldr	lr, [sp, #32]
   1ae2c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1ae30:	add	r4, r4, #8
   1ae34:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1ae38:	ldr	r5, [r5, #40]	; 0x28
   1ae3c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1ae40:	ldr	r6, [r6, #44]	; 0x2c
   1ae44:	str	ip, [sp]
   1ae48:	str	lr, [sp, #4]
   1ae4c:	str	r4, [sp, #8]
   1ae50:	str	r5, [sp, #12]
   1ae54:	str	r6, [sp, #16]
   1ae58:	bl	1925c <__assert_fail@plt+0x79e8>
   1ae5c:	str	r0, [sp, #28]
   1ae60:	ldr	r0, [sp, #40]	; 0x28
   1ae64:	ldr	r1, [sp, #28]
   1ae68:	cmp	r0, r1
   1ae6c:	bhi	1af14 <__assert_fail@plt+0x96a0>
   1ae70:	ldr	r0, [sp, #28]
   1ae74:	add	r0, r0, #1
   1ae78:	str	r0, [sp, #40]	; 0x28
   1ae7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ae80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae84:	add	r1, r1, r2, lsl #3
   1ae88:	str	r0, [r1]
   1ae8c:	ldr	r0, [sp, #36]	; 0x24
   1ae90:	movw	r1, #21056	; 0x5240
   1ae94:	movt	r1, #3
   1ae98:	cmp	r0, r1
   1ae9c:	beq	1aea8 <__assert_fail@plt+0x9634>
   1aea0:	ldr	r0, [sp, #36]	; 0x24
   1aea4:	bl	2082c <__assert_fail@plt+0xefb8>
   1aea8:	ldr	r0, [sp, #40]	; 0x28
   1aeac:	bl	1ca5c <__assert_fail@plt+0xb1e8>
   1aeb0:	mov	r1, r0
   1aeb4:	str	r0, [sp, #36]	; 0x24
   1aeb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aebc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aec0:	add	r0, r0, r2, lsl #3
   1aec4:	str	r1, [r0, #4]
   1aec8:	ldr	r0, [sp, #36]	; 0x24
   1aecc:	ldr	r1, [sp, #40]	; 0x28
   1aed0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aed8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1aedc:	ldr	ip, [ip]
   1aee0:	ldr	lr, [sp, #32]
   1aee4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1aee8:	add	r4, r4, #8
   1aeec:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1aef0:	ldr	r5, [r5, #40]	; 0x28
   1aef4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1aef8:	ldr	r6, [r6, #44]	; 0x2c
   1aefc:	str	ip, [sp]
   1af00:	str	lr, [sp, #4]
   1af04:	str	r4, [sp, #8]
   1af08:	str	r5, [sp, #12]
   1af0c:	str	r6, [sp, #16]
   1af10:	bl	1925c <__assert_fail@plt+0x79e8>
   1af14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af18:	str	r0, [sp, #20]
   1af1c:	bl	11700 <__errno_location@plt>
   1af20:	ldr	r1, [sp, #20]
   1af24:	str	r1, [r0]
   1af28:	ldr	r0, [sp, #36]	; 0x24
   1af2c:	sub	sp, fp, #16
   1af30:	pop	{r4, r5, r6, sl, fp, pc}
   1af34:	svcvc	0x00ffffff
   1af38:	push	{fp, lr}
   1af3c:	mov	fp, sp
   1af40:	sub	sp, sp, #16
   1af44:	str	r0, [fp, #-4]
   1af48:	str	r1, [sp, #8]
   1af4c:	str	r2, [sp, #4]
   1af50:	ldr	r0, [fp, #-4]
   1af54:	ldr	r1, [sp, #8]
   1af58:	ldr	r2, [sp, #4]
   1af5c:	movw	r3, #21008	; 0x5210
   1af60:	movt	r3, #3
   1af64:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1af68:	mov	sp, fp
   1af6c:	pop	{fp, pc}
   1af70:	push	{fp, lr}
   1af74:	mov	fp, sp
   1af78:	sub	sp, sp, #8
   1af7c:	str	r0, [sp, #4]
   1af80:	ldr	r1, [sp, #4]
   1af84:	movw	r0, #0
   1af88:	bl	1ac38 <__assert_fail@plt+0x93c4>
   1af8c:	mov	sp, fp
   1af90:	pop	{fp, pc}
   1af94:	push	{fp, lr}
   1af98:	mov	fp, sp
   1af9c:	sub	sp, sp, #8
   1afa0:	str	r0, [sp, #4]
   1afa4:	str	r1, [sp]
   1afa8:	ldr	r1, [sp, #4]
   1afac:	ldr	r2, [sp]
   1afb0:	movw	r0, #0
   1afb4:	bl	1af38 <__assert_fail@plt+0x96c4>
   1afb8:	mov	sp, fp
   1afbc:	pop	{fp, pc}
   1afc0:	push	{fp, lr}
   1afc4:	mov	fp, sp
   1afc8:	sub	sp, sp, #64	; 0x40
   1afcc:	str	r0, [fp, #-4]
   1afd0:	str	r1, [fp, #-8]
   1afd4:	str	r2, [fp, #-12]
   1afd8:	ldr	r1, [fp, #-8]
   1afdc:	add	r0, sp, #4
   1afe0:	bl	1b000 <__assert_fail@plt+0x978c>
   1afe4:	ldr	r0, [fp, #-4]
   1afe8:	ldr	r1, [fp, #-12]
   1afec:	mvn	r2, #0
   1aff0:	add	r3, sp, #4
   1aff4:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1aff8:	mov	sp, fp
   1affc:	pop	{fp, pc}
   1b000:	push	{fp, lr}
   1b004:	mov	fp, sp
   1b008:	sub	sp, sp, #8
   1b00c:	str	r1, [sp, #4]
   1b010:	mov	r1, r0
   1b014:	str	r0, [sp]
   1b018:	mov	r0, r1
   1b01c:	movw	r1, #0
   1b020:	and	r1, r1, #255	; 0xff
   1b024:	movw	r2, #48	; 0x30
   1b028:	bl	11718 <memset@plt>
   1b02c:	ldr	r0, [sp, #4]
   1b030:	cmp	r0, #10
   1b034:	bne	1b03c <__assert_fail@plt+0x97c8>
   1b038:	bl	11838 <abort@plt>
   1b03c:	ldr	r0, [sp, #4]
   1b040:	ldr	r1, [sp]
   1b044:	str	r0, [r1]
   1b048:	mov	sp, fp
   1b04c:	pop	{fp, pc}
   1b050:	push	{fp, lr}
   1b054:	mov	fp, sp
   1b058:	sub	sp, sp, #64	; 0x40
   1b05c:	str	r0, [fp, #-4]
   1b060:	str	r1, [fp, #-8]
   1b064:	str	r2, [fp, #-12]
   1b068:	str	r3, [fp, #-16]
   1b06c:	ldr	r1, [fp, #-8]
   1b070:	mov	r0, sp
   1b074:	bl	1b000 <__assert_fail@plt+0x978c>
   1b078:	ldr	r0, [fp, #-4]
   1b07c:	ldr	r1, [fp, #-12]
   1b080:	ldr	r2, [fp, #-16]
   1b084:	mov	r3, sp
   1b088:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1b08c:	mov	sp, fp
   1b090:	pop	{fp, pc}
   1b094:	push	{fp, lr}
   1b098:	mov	fp, sp
   1b09c:	sub	sp, sp, #8
   1b0a0:	str	r0, [sp, #4]
   1b0a4:	str	r1, [sp]
   1b0a8:	ldr	r1, [sp, #4]
   1b0ac:	ldr	r2, [sp]
   1b0b0:	movw	r0, #0
   1b0b4:	bl	1afc0 <__assert_fail@plt+0x974c>
   1b0b8:	mov	sp, fp
   1b0bc:	pop	{fp, pc}
   1b0c0:	push	{fp, lr}
   1b0c4:	mov	fp, sp
   1b0c8:	sub	sp, sp, #16
   1b0cc:	str	r0, [fp, #-4]
   1b0d0:	str	r1, [sp, #8]
   1b0d4:	str	r2, [sp, #4]
   1b0d8:	ldr	r1, [fp, #-4]
   1b0dc:	ldr	r2, [sp, #8]
   1b0e0:	ldr	r3, [sp, #4]
   1b0e4:	movw	r0, #0
   1b0e8:	bl	1b050 <__assert_fail@plt+0x97dc>
   1b0ec:	mov	sp, fp
   1b0f0:	pop	{fp, pc}
   1b0f4:	push	{fp, lr}
   1b0f8:	mov	fp, sp
   1b0fc:	sub	sp, sp, #72	; 0x48
   1b100:	movw	r3, #21008	; 0x5210
   1b104:	movt	r3, #3
   1b108:	str	r0, [fp, #-4]
   1b10c:	str	r1, [fp, #-8]
   1b110:	strb	r2, [fp, #-9]
   1b114:	add	r0, sp, #12
   1b118:	mov	r1, r0
   1b11c:	str	r0, [sp, #8]
   1b120:	mov	r0, r1
   1b124:	mov	r1, r3
   1b128:	movw	r2, #48	; 0x30
   1b12c:	bl	1152c <memcpy@plt>
   1b130:	ldr	r0, [sp, #8]
   1b134:	ldrb	r1, [fp, #-9]
   1b138:	movw	r2, #1
   1b13c:	bl	19004 <__assert_fail@plt+0x7790>
   1b140:	ldr	r1, [fp, #-4]
   1b144:	ldr	r2, [fp, #-8]
   1b148:	movw	r3, #0
   1b14c:	str	r0, [sp, #4]
   1b150:	mov	r0, r3
   1b154:	add	r3, sp, #12
   1b158:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1b15c:	mov	sp, fp
   1b160:	pop	{fp, pc}
   1b164:	push	{fp, lr}
   1b168:	mov	fp, sp
   1b16c:	sub	sp, sp, #8
   1b170:	str	r0, [sp, #4]
   1b174:	strb	r1, [sp, #3]
   1b178:	ldr	r0, [sp, #4]
   1b17c:	mvn	r1, #0
   1b180:	ldrb	r2, [sp, #3]
   1b184:	bl	1b0f4 <__assert_fail@plt+0x9880>
   1b188:	mov	sp, fp
   1b18c:	pop	{fp, pc}
   1b190:	push	{fp, lr}
   1b194:	mov	fp, sp
   1b198:	sub	sp, sp, #8
   1b19c:	str	r0, [sp, #4]
   1b1a0:	ldr	r0, [sp, #4]
   1b1a4:	movw	r1, #58	; 0x3a
   1b1a8:	and	r1, r1, #255	; 0xff
   1b1ac:	bl	1b164 <__assert_fail@plt+0x98f0>
   1b1b0:	mov	sp, fp
   1b1b4:	pop	{fp, pc}
   1b1b8:	push	{fp, lr}
   1b1bc:	mov	fp, sp
   1b1c0:	sub	sp, sp, #8
   1b1c4:	str	r0, [sp, #4]
   1b1c8:	str	r1, [sp]
   1b1cc:	ldr	r0, [sp, #4]
   1b1d0:	ldr	r1, [sp]
   1b1d4:	movw	r2, #58	; 0x3a
   1b1d8:	and	r2, r2, #255	; 0xff
   1b1dc:	bl	1b0f4 <__assert_fail@plt+0x9880>
   1b1e0:	mov	sp, fp
   1b1e4:	pop	{fp, pc}
   1b1e8:	push	{fp, lr}
   1b1ec:	mov	fp, sp
   1b1f0:	sub	sp, sp, #120	; 0x78
   1b1f4:	str	r0, [fp, #-4]
   1b1f8:	str	r1, [fp, #-8]
   1b1fc:	str	r2, [fp, #-12]
   1b200:	ldr	r1, [fp, #-8]
   1b204:	add	r0, sp, #12
   1b208:	bl	1b000 <__assert_fail@plt+0x978c>
   1b20c:	add	r0, sp, #60	; 0x3c
   1b210:	mov	r1, r0
   1b214:	add	r2, sp, #12
   1b218:	str	r0, [sp, #8]
   1b21c:	mov	r0, r1
   1b220:	mov	r1, r2
   1b224:	movw	r2, #48	; 0x30
   1b228:	bl	1152c <memcpy@plt>
   1b22c:	ldr	r0, [sp, #8]
   1b230:	movw	r1, #58	; 0x3a
   1b234:	and	r1, r1, #255	; 0xff
   1b238:	movw	r2, #1
   1b23c:	bl	19004 <__assert_fail@plt+0x7790>
   1b240:	ldr	r1, [fp, #-4]
   1b244:	ldr	r2, [fp, #-12]
   1b248:	str	r0, [sp, #4]
   1b24c:	mov	r0, r1
   1b250:	mov	r1, r2
   1b254:	mvn	r2, #0
   1b258:	add	r3, sp, #60	; 0x3c
   1b25c:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1b260:	mov	sp, fp
   1b264:	pop	{fp, pc}
   1b268:	push	{fp, lr}
   1b26c:	mov	fp, sp
   1b270:	sub	sp, sp, #24
   1b274:	str	r0, [fp, #-4]
   1b278:	str	r1, [fp, #-8]
   1b27c:	str	r2, [sp, #12]
   1b280:	str	r3, [sp, #8]
   1b284:	ldr	r0, [fp, #-4]
   1b288:	ldr	r1, [fp, #-8]
   1b28c:	ldr	r2, [sp, #12]
   1b290:	ldr	r3, [sp, #8]
   1b294:	mvn	ip, #0
   1b298:	str	ip, [sp]
   1b29c:	bl	1b2a8 <__assert_fail@plt+0x9a34>
   1b2a0:	mov	sp, fp
   1b2a4:	pop	{fp, pc}
   1b2a8:	push	{fp, lr}
   1b2ac:	mov	fp, sp
   1b2b0:	sub	sp, sp, #72	; 0x48
   1b2b4:	ldr	ip, [fp, #8]
   1b2b8:	movw	lr, #21008	; 0x5210
   1b2bc:	movt	lr, #3
   1b2c0:	str	r0, [fp, #-4]
   1b2c4:	str	r1, [fp, #-8]
   1b2c8:	str	r2, [fp, #-12]
   1b2cc:	str	r3, [fp, #-16]
   1b2d0:	add	r0, sp, #8
   1b2d4:	mov	r1, r0
   1b2d8:	str	r0, [sp, #4]
   1b2dc:	mov	r0, r1
   1b2e0:	mov	r1, lr
   1b2e4:	movw	r2, #48	; 0x30
   1b2e8:	str	ip, [sp]
   1b2ec:	bl	1152c <memcpy@plt>
   1b2f0:	ldr	r1, [fp, #-8]
   1b2f4:	ldr	r2, [fp, #-12]
   1b2f8:	ldr	r0, [sp, #4]
   1b2fc:	bl	19104 <__assert_fail@plt+0x7890>
   1b300:	ldr	r0, [fp, #-4]
   1b304:	ldr	r1, [fp, #-16]
   1b308:	ldr	r2, [fp, #8]
   1b30c:	add	r3, sp, #8
   1b310:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1b314:	mov	sp, fp
   1b318:	pop	{fp, pc}
   1b31c:	push	{fp, lr}
   1b320:	mov	fp, sp
   1b324:	sub	sp, sp, #16
   1b328:	str	r0, [fp, #-4]
   1b32c:	str	r1, [sp, #8]
   1b330:	str	r2, [sp, #4]
   1b334:	ldr	r1, [fp, #-4]
   1b338:	ldr	r2, [sp, #8]
   1b33c:	ldr	r3, [sp, #4]
   1b340:	movw	r0, #0
   1b344:	bl	1b268 <__assert_fail@plt+0x99f4>
   1b348:	mov	sp, fp
   1b34c:	pop	{fp, pc}
   1b350:	push	{fp, lr}
   1b354:	mov	fp, sp
   1b358:	sub	sp, sp, #24
   1b35c:	str	r0, [fp, #-4]
   1b360:	str	r1, [fp, #-8]
   1b364:	str	r2, [sp, #12]
   1b368:	str	r3, [sp, #8]
   1b36c:	ldr	r1, [fp, #-4]
   1b370:	ldr	r2, [fp, #-8]
   1b374:	ldr	r3, [sp, #12]
   1b378:	ldr	r0, [sp, #8]
   1b37c:	movw	ip, #0
   1b380:	str	r0, [sp, #4]
   1b384:	mov	r0, ip
   1b388:	ldr	ip, [sp, #4]
   1b38c:	str	ip, [sp]
   1b390:	bl	1b2a8 <__assert_fail@plt+0x9a34>
   1b394:	mov	sp, fp
   1b398:	pop	{fp, pc}
   1b39c:	push	{fp, lr}
   1b3a0:	mov	fp, sp
   1b3a4:	sub	sp, sp, #16
   1b3a8:	str	r0, [fp, #-4]
   1b3ac:	str	r1, [sp, #8]
   1b3b0:	str	r2, [sp, #4]
   1b3b4:	ldr	r0, [fp, #-4]
   1b3b8:	ldr	r1, [sp, #8]
   1b3bc:	ldr	r2, [sp, #4]
   1b3c0:	movw	r3, #20860	; 0x517c
   1b3c4:	movt	r3, #3
   1b3c8:	bl	1ac6c <__assert_fail@plt+0x93f8>
   1b3cc:	mov	sp, fp
   1b3d0:	pop	{fp, pc}
   1b3d4:	push	{fp, lr}
   1b3d8:	mov	fp, sp
   1b3dc:	sub	sp, sp, #8
   1b3e0:	str	r0, [sp, #4]
   1b3e4:	str	r1, [sp]
   1b3e8:	ldr	r1, [sp, #4]
   1b3ec:	ldr	r2, [sp]
   1b3f0:	movw	r0, #0
   1b3f4:	bl	1b39c <__assert_fail@plt+0x9b28>
   1b3f8:	mov	sp, fp
   1b3fc:	pop	{fp, pc}
   1b400:	push	{fp, lr}
   1b404:	mov	fp, sp
   1b408:	sub	sp, sp, #8
   1b40c:	str	r0, [sp, #4]
   1b410:	str	r1, [sp]
   1b414:	ldr	r0, [sp, #4]
   1b418:	ldr	r1, [sp]
   1b41c:	mvn	r2, #0
   1b420:	bl	1b39c <__assert_fail@plt+0x9b28>
   1b424:	mov	sp, fp
   1b428:	pop	{fp, pc}
   1b42c:	push	{fp, lr}
   1b430:	mov	fp, sp
   1b434:	sub	sp, sp, #8
   1b438:	str	r0, [sp, #4]
   1b43c:	ldr	r1, [sp, #4]
   1b440:	movw	r0, #0
   1b444:	bl	1b400 <__assert_fail@plt+0x9b8c>
   1b448:	mov	sp, fp
   1b44c:	pop	{fp, pc}
   1b450:	push	{fp, lr}
   1b454:	mov	fp, sp
   1b458:	sub	sp, sp, #24
   1b45c:	str	r0, [fp, #-8]
   1b460:	str	r1, [sp, #12]
   1b464:	ldr	r0, [fp, #-8]
   1b468:	bl	116b8 <gettext@plt>
   1b46c:	str	r0, [sp, #8]
   1b470:	ldr	r0, [sp, #8]
   1b474:	ldr	r1, [fp, #-8]
   1b478:	cmp	r0, r1
   1b47c:	beq	1b48c <__assert_fail@plt+0x9c18>
   1b480:	ldr	r0, [sp, #8]
   1b484:	str	r0, [fp, #-4]
   1b488:	b	1b558 <__assert_fail@plt+0x9ce4>
   1b48c:	bl	20b48 <__assert_fail@plt+0xf2d4>
   1b490:	str	r0, [sp, #4]
   1b494:	ldr	r0, [sp, #4]
   1b498:	movw	r1, #16592	; 0x40d0
   1b49c:	movt	r1, #2
   1b4a0:	bl	1febc <__assert_fail@plt+0xe648>
   1b4a4:	cmp	r0, #0
   1b4a8:	bne	1b4e0 <__assert_fail@plt+0x9c6c>
   1b4ac:	ldr	r0, [fp, #-8]
   1b4b0:	ldrb	r0, [r0]
   1b4b4:	cmp	r0, #96	; 0x60
   1b4b8:	movw	r0, #0
   1b4bc:	moveq	r0, #1
   1b4c0:	tst	r0, #1
   1b4c4:	movw	r0, #16602	; 0x40da
   1b4c8:	movt	r0, #2
   1b4cc:	movw	r1, #16598	; 0x40d6
   1b4d0:	movt	r1, #2
   1b4d4:	movne	r0, r1
   1b4d8:	str	r0, [fp, #-4]
   1b4dc:	b	1b558 <__assert_fail@plt+0x9ce4>
   1b4e0:	ldr	r0, [sp, #4]
   1b4e4:	movw	r1, #16606	; 0x40de
   1b4e8:	movt	r1, #2
   1b4ec:	bl	1febc <__assert_fail@plt+0xe648>
   1b4f0:	cmp	r0, #0
   1b4f4:	bne	1b52c <__assert_fail@plt+0x9cb8>
   1b4f8:	ldr	r0, [fp, #-8]
   1b4fc:	ldrb	r0, [r0]
   1b500:	cmp	r0, #96	; 0x60
   1b504:	movw	r0, #0
   1b508:	moveq	r0, #1
   1b50c:	tst	r0, #1
   1b510:	movw	r0, #16618	; 0x40ea
   1b514:	movt	r0, #2
   1b518:	movw	r1, #16614	; 0x40e6
   1b51c:	movt	r1, #2
   1b520:	movne	r0, r1
   1b524:	str	r0, [fp, #-4]
   1b528:	b	1b558 <__assert_fail@plt+0x9ce4>
   1b52c:	ldr	r0, [sp, #12]
   1b530:	cmp	r0, #9
   1b534:	movw	r0, #0
   1b538:	moveq	r0, #1
   1b53c:	tst	r0, #1
   1b540:	movw	r0, #17953	; 0x4621
   1b544:	movt	r0, #2
   1b548:	movw	r1, #16588	; 0x40cc
   1b54c:	movt	r1, #2
   1b550:	movne	r0, r1
   1b554:	str	r0, [fp, #-4]
   1b558:	ldr	r0, [fp, #-4]
   1b55c:	mov	sp, fp
   1b560:	pop	{fp, pc}
   1b564:	push	{fp, lr}
   1b568:	mov	fp, sp
   1b56c:	sub	sp, sp, #112	; 0x70
   1b570:	str	r0, [fp, #-8]
   1b574:	movw	r0, #17677	; 0x450d
   1b578:	movt	r0, #2
   1b57c:	mov	r1, sp
   1b580:	bl	231ac <__assert_fail@plt+0x11938>
   1b584:	cmp	r0, #0
   1b588:	beq	1b598 <__assert_fail@plt+0x9d24>
   1b58c:	movw	r0, #0
   1b590:	str	r0, [fp, #-4]
   1b594:	b	1b5c8 <__assert_fail@plt+0x9d54>
   1b598:	ldr	r0, [sp, #96]	; 0x60
   1b59c:	ldr	r1, [sp, #100]	; 0x64
   1b5a0:	ldr	r2, [fp, #-8]
   1b5a4:	str	r1, [r2, #4]
   1b5a8:	str	r0, [r2]
   1b5ac:	ldr	r0, [sp]
   1b5b0:	ldr	r1, [sp, #4]
   1b5b4:	ldr	r2, [fp, #-8]
   1b5b8:	str	r1, [r2, #12]
   1b5bc:	str	r0, [r2, #8]
   1b5c0:	ldr	r0, [fp, #-8]
   1b5c4:	str	r0, [fp, #-4]
   1b5c8:	ldr	r0, [fp, #-4]
   1b5cc:	mov	sp, fp
   1b5d0:	pop	{fp, pc}
   1b5d4:	push	{r4, r5, fp, lr}
   1b5d8:	add	fp, sp, #8
   1b5dc:	sub	sp, sp, #4096	; 0x1000
   1b5e0:	str	r0, [fp, #-16]
   1b5e4:	str	r1, [fp, #-20]	; 0xffffffec
   1b5e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1b5ec:	ldr	r0, [fp, #-16]
   1b5f0:	cmn	r0, #100	; 0x64
   1b5f4:	beq	1b608 <__assert_fail@plt+0x9d94>
   1b5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5fc:	ldrb	r0, [r0]
   1b600:	cmp	r0, #47	; 0x2f
   1b604:	bne	1b61c <__assert_fail@plt+0x9da8>
   1b608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b60c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b610:	bl	1bf54 <__assert_fail@plt+0xa6e0>
   1b614:	str	r0, [fp, #-12]
   1b618:	b	1b828 <__assert_fail@plt+0x9fb4>
   1b61c:	add	r0, sp, #32
   1b620:	ldr	r1, [fp, #-16]
   1b624:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b628:	bl	1fa44 <__assert_fail@plt+0xe1d0>
   1b62c:	str	r0, [sp, #28]
   1b630:	ldr	r0, [sp, #28]
   1b634:	movw	r1, #0
   1b638:	cmp	r0, r1
   1b63c:	beq	1b6fc <__assert_fail@plt+0x9e88>
   1b640:	ldr	r0, [sp, #28]
   1b644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b648:	bl	1bf54 <__assert_fail@plt+0xa6e0>
   1b64c:	str	r0, [sp, #24]
   1b650:	bl	11700 <__errno_location@plt>
   1b654:	add	r1, sp, #32
   1b658:	ldr	r0, [r0]
   1b65c:	str	r0, [sp, #20]
   1b660:	ldr	r0, [sp, #28]
   1b664:	cmp	r0, r1
   1b668:	beq	1b674 <__assert_fail@plt+0x9e00>
   1b66c:	ldr	r0, [sp, #28]
   1b670:	bl	2082c <__assert_fail@plt+0xefb8>
   1b674:	ldr	r0, [sp, #24]
   1b678:	mvn	r1, #0
   1b67c:	cmp	r1, r0
   1b680:	beq	1b690 <__assert_fail@plt+0x9e1c>
   1b684:	ldr	r0, [sp, #24]
   1b688:	str	r0, [fp, #-12]
   1b68c:	b	1b828 <__assert_fail@plt+0x9fb4>
   1b690:	ldr	r0, [sp, #20]
   1b694:	cmp	r0, #20
   1b698:	beq	1b6f8 <__assert_fail@plt+0x9e84>
   1b69c:	ldr	r0, [sp, #20]
   1b6a0:	cmp	r0, #2
   1b6a4:	beq	1b6f8 <__assert_fail@plt+0x9e84>
   1b6a8:	ldr	r0, [sp, #20]
   1b6ac:	cmp	r0, #1
   1b6b0:	beq	1b6f8 <__assert_fail@plt+0x9e84>
   1b6b4:	ldr	r0, [sp, #20]
   1b6b8:	cmp	r0, #13
   1b6bc:	beq	1b6f8 <__assert_fail@plt+0x9e84>
   1b6c0:	ldr	r0, [sp, #20]
   1b6c4:	cmp	r0, #38	; 0x26
   1b6c8:	beq	1b6f8 <__assert_fail@plt+0x9e84>
   1b6cc:	ldr	r0, [sp, #20]
   1b6d0:	cmp	r0, #95	; 0x5f
   1b6d4:	beq	1b6f8 <__assert_fail@plt+0x9e84>
   1b6d8:	ldr	r0, [sp, #20]
   1b6dc:	str	r0, [sp, #16]
   1b6e0:	bl	11700 <__errno_location@plt>
   1b6e4:	ldr	r1, [sp, #16]
   1b6e8:	str	r1, [r0]
   1b6ec:	ldr	r0, [sp, #24]
   1b6f0:	str	r0, [fp, #-12]
   1b6f4:	b	1b828 <__assert_fail@plt+0x9fb4>
   1b6f8:	b	1b6fc <__assert_fail@plt+0x9e88>
   1b6fc:	sub	r0, fp, #32
   1b700:	bl	2203c <__assert_fail@plt+0x107c8>
   1b704:	cmp	r0, #0
   1b708:	beq	1b718 <__assert_fail@plt+0x9ea4>
   1b70c:	bl	11700 <__errno_location@plt>
   1b710:	ldr	r0, [r0]
   1b714:	bl	20c54 <__assert_fail@plt+0xf3e0>
   1b718:	ldr	r0, [fp, #-16]
   1b71c:	movw	r1, #0
   1b720:	cmp	r1, r0
   1b724:	bgt	1b758 <__assert_fail@plt+0x9ee4>
   1b728:	ldr	r0, [fp, #-16]
   1b72c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b730:	cmp	r0, r1
   1b734:	bne	1b758 <__assert_fail@plt+0x9ee4>
   1b738:	sub	r0, fp, #32
   1b73c:	bl	2212c <__assert_fail@plt+0x108b8>
   1b740:	bl	11700 <__errno_location@plt>
   1b744:	movw	r1, #9
   1b748:	str	r1, [r0]
   1b74c:	mvn	r0, #0
   1b750:	str	r0, [fp, #-12]
   1b754:	b	1b828 <__assert_fail@plt+0x9fb4>
   1b758:	ldr	r0, [fp, #-16]
   1b75c:	bl	117cc <fchdir@plt>
   1b760:	cmp	r0, #0
   1b764:	beq	1b79c <__assert_fail@plt+0x9f28>
   1b768:	bl	11700 <__errno_location@plt>
   1b76c:	ldr	r0, [r0]
   1b770:	str	r0, [fp, #-36]	; 0xffffffdc
   1b774:	sub	r0, fp, #32
   1b778:	bl	2212c <__assert_fail@plt+0x108b8>
   1b77c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b780:	str	r0, [sp, #12]
   1b784:	bl	11700 <__errno_location@plt>
   1b788:	ldr	r1, [sp, #12]
   1b78c:	str	r1, [r0]
   1b790:	mvn	r0, #0
   1b794:	str	r0, [fp, #-12]
   1b798:	b	1b828 <__assert_fail@plt+0x9fb4>
   1b79c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b7a4:	bl	1bf54 <__assert_fail@plt+0xa6e0>
   1b7a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1b7ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b7b0:	cmn	r0, #1
   1b7b4:	bne	1b7c8 <__assert_fail@plt+0x9f54>
   1b7b8:	bl	11700 <__errno_location@plt>
   1b7bc:	ldr	r0, [r0]
   1b7c0:	str	r0, [sp, #8]
   1b7c4:	b	1b7d4 <__assert_fail@plt+0x9f60>
   1b7c8:	movw	r0, #0
   1b7cc:	str	r0, [sp, #8]
   1b7d0:	b	1b7d4 <__assert_fail@plt+0x9f60>
   1b7d4:	ldr	r0, [sp, #8]
   1b7d8:	str	r0, [fp, #-36]	; 0xffffffdc
   1b7dc:	sub	r0, fp, #32
   1b7e0:	bl	220d8 <__assert_fail@plt+0x10864>
   1b7e4:	cmp	r0, #0
   1b7e8:	beq	1b7f8 <__assert_fail@plt+0x9f84>
   1b7ec:	bl	11700 <__errno_location@plt>
   1b7f0:	ldr	r0, [r0]
   1b7f4:	bl	20ca8 <__assert_fail@plt+0xf434>
   1b7f8:	sub	r0, fp, #32
   1b7fc:	bl	2212c <__assert_fail@plt+0x108b8>
   1b800:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b804:	cmp	r0, #0
   1b808:	beq	1b820 <__assert_fail@plt+0x9fac>
   1b80c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b810:	str	r0, [sp, #4]
   1b814:	bl	11700 <__errno_location@plt>
   1b818:	ldr	r1, [sp, #4]
   1b81c:	str	r1, [r0]
   1b820:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b824:	str	r0, [fp, #-12]
   1b828:	ldr	r0, [fp, #-12]
   1b82c:	sub	sp, fp, #8
   1b830:	pop	{r4, r5, fp, pc}
   1b834:	push	{r4, r5, fp, lr}
   1b838:	add	fp, sp, #8
   1b83c:	sub	sp, sp, #4096	; 0x1000
   1b840:	str	r0, [fp, #-16]
   1b844:	str	r1, [fp, #-20]	; 0xffffffec
   1b848:	str	r2, [fp, #-24]	; 0xffffffe8
   1b84c:	ldr	r0, [fp, #-16]
   1b850:	cmn	r0, #100	; 0x64
   1b854:	beq	1b868 <__assert_fail@plt+0x9ff4>
   1b858:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b85c:	ldrb	r0, [r0]
   1b860:	cmp	r0, #47	; 0x2f
   1b864:	bne	1b87c <__assert_fail@plt+0xa008>
   1b868:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b86c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b870:	bl	1c030 <__assert_fail@plt+0xa7bc>
   1b874:	str	r0, [fp, #-12]
   1b878:	b	1ba88 <__assert_fail@plt+0xa214>
   1b87c:	add	r0, sp, #32
   1b880:	ldr	r1, [fp, #-16]
   1b884:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b888:	bl	1fa44 <__assert_fail@plt+0xe1d0>
   1b88c:	str	r0, [sp, #28]
   1b890:	ldr	r0, [sp, #28]
   1b894:	movw	r1, #0
   1b898:	cmp	r0, r1
   1b89c:	beq	1b95c <__assert_fail@plt+0xa0e8>
   1b8a0:	ldr	r0, [sp, #28]
   1b8a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b8a8:	bl	1c030 <__assert_fail@plt+0xa7bc>
   1b8ac:	str	r0, [sp, #24]
   1b8b0:	bl	11700 <__errno_location@plt>
   1b8b4:	add	r1, sp, #32
   1b8b8:	ldr	r0, [r0]
   1b8bc:	str	r0, [sp, #20]
   1b8c0:	ldr	r0, [sp, #28]
   1b8c4:	cmp	r0, r1
   1b8c8:	beq	1b8d4 <__assert_fail@plt+0xa060>
   1b8cc:	ldr	r0, [sp, #28]
   1b8d0:	bl	2082c <__assert_fail@plt+0xefb8>
   1b8d4:	ldr	r0, [sp, #24]
   1b8d8:	mvn	r1, #0
   1b8dc:	cmp	r1, r0
   1b8e0:	beq	1b8f0 <__assert_fail@plt+0xa07c>
   1b8e4:	ldr	r0, [sp, #24]
   1b8e8:	str	r0, [fp, #-12]
   1b8ec:	b	1ba88 <__assert_fail@plt+0xa214>
   1b8f0:	ldr	r0, [sp, #20]
   1b8f4:	cmp	r0, #20
   1b8f8:	beq	1b958 <__assert_fail@plt+0xa0e4>
   1b8fc:	ldr	r0, [sp, #20]
   1b900:	cmp	r0, #2
   1b904:	beq	1b958 <__assert_fail@plt+0xa0e4>
   1b908:	ldr	r0, [sp, #20]
   1b90c:	cmp	r0, #1
   1b910:	beq	1b958 <__assert_fail@plt+0xa0e4>
   1b914:	ldr	r0, [sp, #20]
   1b918:	cmp	r0, #13
   1b91c:	beq	1b958 <__assert_fail@plt+0xa0e4>
   1b920:	ldr	r0, [sp, #20]
   1b924:	cmp	r0, #38	; 0x26
   1b928:	beq	1b958 <__assert_fail@plt+0xa0e4>
   1b92c:	ldr	r0, [sp, #20]
   1b930:	cmp	r0, #95	; 0x5f
   1b934:	beq	1b958 <__assert_fail@plt+0xa0e4>
   1b938:	ldr	r0, [sp, #20]
   1b93c:	str	r0, [sp, #16]
   1b940:	bl	11700 <__errno_location@plt>
   1b944:	ldr	r1, [sp, #16]
   1b948:	str	r1, [r0]
   1b94c:	ldr	r0, [sp, #24]
   1b950:	str	r0, [fp, #-12]
   1b954:	b	1ba88 <__assert_fail@plt+0xa214>
   1b958:	b	1b95c <__assert_fail@plt+0xa0e8>
   1b95c:	sub	r0, fp, #32
   1b960:	bl	2203c <__assert_fail@plt+0x107c8>
   1b964:	cmp	r0, #0
   1b968:	beq	1b978 <__assert_fail@plt+0xa104>
   1b96c:	bl	11700 <__errno_location@plt>
   1b970:	ldr	r0, [r0]
   1b974:	bl	20c54 <__assert_fail@plt+0xf3e0>
   1b978:	ldr	r0, [fp, #-16]
   1b97c:	movw	r1, #0
   1b980:	cmp	r1, r0
   1b984:	bgt	1b9b8 <__assert_fail@plt+0xa144>
   1b988:	ldr	r0, [fp, #-16]
   1b98c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b990:	cmp	r0, r1
   1b994:	bne	1b9b8 <__assert_fail@plt+0xa144>
   1b998:	sub	r0, fp, #32
   1b99c:	bl	2212c <__assert_fail@plt+0x108b8>
   1b9a0:	bl	11700 <__errno_location@plt>
   1b9a4:	movw	r1, #9
   1b9a8:	str	r1, [r0]
   1b9ac:	mvn	r0, #0
   1b9b0:	str	r0, [fp, #-12]
   1b9b4:	b	1ba88 <__assert_fail@plt+0xa214>
   1b9b8:	ldr	r0, [fp, #-16]
   1b9bc:	bl	117cc <fchdir@plt>
   1b9c0:	cmp	r0, #0
   1b9c4:	beq	1b9fc <__assert_fail@plt+0xa188>
   1b9c8:	bl	11700 <__errno_location@plt>
   1b9cc:	ldr	r0, [r0]
   1b9d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b9d4:	sub	r0, fp, #32
   1b9d8:	bl	2212c <__assert_fail@plt+0x108b8>
   1b9dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9e0:	str	r0, [sp, #12]
   1b9e4:	bl	11700 <__errno_location@plt>
   1b9e8:	ldr	r1, [sp, #12]
   1b9ec:	str	r1, [r0]
   1b9f0:	mvn	r0, #0
   1b9f4:	str	r0, [fp, #-12]
   1b9f8:	b	1ba88 <__assert_fail@plt+0xa214>
   1b9fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba04:	bl	1c030 <__assert_fail@plt+0xa7bc>
   1ba08:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba10:	cmn	r0, #1
   1ba14:	bne	1ba28 <__assert_fail@plt+0xa1b4>
   1ba18:	bl	11700 <__errno_location@plt>
   1ba1c:	ldr	r0, [r0]
   1ba20:	str	r0, [sp, #8]
   1ba24:	b	1ba34 <__assert_fail@plt+0xa1c0>
   1ba28:	movw	r0, #0
   1ba2c:	str	r0, [sp, #8]
   1ba30:	b	1ba34 <__assert_fail@plt+0xa1c0>
   1ba34:	ldr	r0, [sp, #8]
   1ba38:	str	r0, [fp, #-36]	; 0xffffffdc
   1ba3c:	sub	r0, fp, #32
   1ba40:	bl	220d8 <__assert_fail@plt+0x10864>
   1ba44:	cmp	r0, #0
   1ba48:	beq	1ba58 <__assert_fail@plt+0xa1e4>
   1ba4c:	bl	11700 <__errno_location@plt>
   1ba50:	ldr	r0, [r0]
   1ba54:	bl	20ca8 <__assert_fail@plt+0xf434>
   1ba58:	sub	r0, fp, #32
   1ba5c:	bl	2212c <__assert_fail@plt+0x108b8>
   1ba60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba64:	cmp	r0, #0
   1ba68:	beq	1ba80 <__assert_fail@plt+0xa20c>
   1ba6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ba70:	str	r0, [sp, #4]
   1ba74:	bl	11700 <__errno_location@plt>
   1ba78:	ldr	r1, [sp, #4]
   1ba7c:	str	r1, [r0]
   1ba80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba84:	str	r0, [fp, #-12]
   1ba88:	ldr	r0, [fp, #-12]
   1ba8c:	sub	sp, fp, #8
   1ba90:	pop	{r4, r5, fp, pc}
   1ba94:	push	{r4, r5, fp, lr}
   1ba98:	add	fp, sp, #8
   1ba9c:	sub	sp, sp, #4096	; 0x1000
   1baa0:	str	r0, [fp, #-16]
   1baa4:	str	r1, [fp, #-20]	; 0xffffffec
   1baa8:	str	r2, [fp, #-24]	; 0xffffffe8
   1baac:	ldr	r0, [fp, #-16]
   1bab0:	cmn	r0, #100	; 0x64
   1bab4:	beq	1bac8 <__assert_fail@plt+0xa254>
   1bab8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1babc:	ldrb	r0, [r0]
   1bac0:	cmp	r0, #47	; 0x2f
   1bac4:	bne	1badc <__assert_fail@plt+0xa268>
   1bac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bacc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bad0:	bl	1173c <setfilecon@plt>
   1bad4:	str	r0, [fp, #-12]
   1bad8:	b	1bce8 <__assert_fail@plt+0xa474>
   1badc:	add	r0, sp, #32
   1bae0:	ldr	r1, [fp, #-16]
   1bae4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bae8:	bl	1fa44 <__assert_fail@plt+0xe1d0>
   1baec:	str	r0, [sp, #28]
   1baf0:	ldr	r0, [sp, #28]
   1baf4:	movw	r1, #0
   1baf8:	cmp	r0, r1
   1bafc:	beq	1bbbc <__assert_fail@plt+0xa348>
   1bb00:	ldr	r0, [sp, #28]
   1bb04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb08:	bl	1173c <setfilecon@plt>
   1bb0c:	str	r0, [sp, #24]
   1bb10:	bl	11700 <__errno_location@plt>
   1bb14:	add	r1, sp, #32
   1bb18:	ldr	r0, [r0]
   1bb1c:	str	r0, [sp, #20]
   1bb20:	ldr	r0, [sp, #28]
   1bb24:	cmp	r0, r1
   1bb28:	beq	1bb34 <__assert_fail@plt+0xa2c0>
   1bb2c:	ldr	r0, [sp, #28]
   1bb30:	bl	2082c <__assert_fail@plt+0xefb8>
   1bb34:	ldr	r0, [sp, #24]
   1bb38:	mvn	r1, #0
   1bb3c:	cmp	r1, r0
   1bb40:	beq	1bb50 <__assert_fail@plt+0xa2dc>
   1bb44:	ldr	r0, [sp, #24]
   1bb48:	str	r0, [fp, #-12]
   1bb4c:	b	1bce8 <__assert_fail@plt+0xa474>
   1bb50:	ldr	r0, [sp, #20]
   1bb54:	cmp	r0, #20
   1bb58:	beq	1bbb8 <__assert_fail@plt+0xa344>
   1bb5c:	ldr	r0, [sp, #20]
   1bb60:	cmp	r0, #2
   1bb64:	beq	1bbb8 <__assert_fail@plt+0xa344>
   1bb68:	ldr	r0, [sp, #20]
   1bb6c:	cmp	r0, #1
   1bb70:	beq	1bbb8 <__assert_fail@plt+0xa344>
   1bb74:	ldr	r0, [sp, #20]
   1bb78:	cmp	r0, #13
   1bb7c:	beq	1bbb8 <__assert_fail@plt+0xa344>
   1bb80:	ldr	r0, [sp, #20]
   1bb84:	cmp	r0, #38	; 0x26
   1bb88:	beq	1bbb8 <__assert_fail@plt+0xa344>
   1bb8c:	ldr	r0, [sp, #20]
   1bb90:	cmp	r0, #95	; 0x5f
   1bb94:	beq	1bbb8 <__assert_fail@plt+0xa344>
   1bb98:	ldr	r0, [sp, #20]
   1bb9c:	str	r0, [sp, #16]
   1bba0:	bl	11700 <__errno_location@plt>
   1bba4:	ldr	r1, [sp, #16]
   1bba8:	str	r1, [r0]
   1bbac:	ldr	r0, [sp, #24]
   1bbb0:	str	r0, [fp, #-12]
   1bbb4:	b	1bce8 <__assert_fail@plt+0xa474>
   1bbb8:	b	1bbbc <__assert_fail@plt+0xa348>
   1bbbc:	sub	r0, fp, #32
   1bbc0:	bl	2203c <__assert_fail@plt+0x107c8>
   1bbc4:	cmp	r0, #0
   1bbc8:	beq	1bbd8 <__assert_fail@plt+0xa364>
   1bbcc:	bl	11700 <__errno_location@plt>
   1bbd0:	ldr	r0, [r0]
   1bbd4:	bl	20c54 <__assert_fail@plt+0xf3e0>
   1bbd8:	ldr	r0, [fp, #-16]
   1bbdc:	movw	r1, #0
   1bbe0:	cmp	r1, r0
   1bbe4:	bgt	1bc18 <__assert_fail@plt+0xa3a4>
   1bbe8:	ldr	r0, [fp, #-16]
   1bbec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bbf0:	cmp	r0, r1
   1bbf4:	bne	1bc18 <__assert_fail@plt+0xa3a4>
   1bbf8:	sub	r0, fp, #32
   1bbfc:	bl	2212c <__assert_fail@plt+0x108b8>
   1bc00:	bl	11700 <__errno_location@plt>
   1bc04:	movw	r1, #9
   1bc08:	str	r1, [r0]
   1bc0c:	mvn	r0, #0
   1bc10:	str	r0, [fp, #-12]
   1bc14:	b	1bce8 <__assert_fail@plt+0xa474>
   1bc18:	ldr	r0, [fp, #-16]
   1bc1c:	bl	117cc <fchdir@plt>
   1bc20:	cmp	r0, #0
   1bc24:	beq	1bc5c <__assert_fail@plt+0xa3e8>
   1bc28:	bl	11700 <__errno_location@plt>
   1bc2c:	ldr	r0, [r0]
   1bc30:	str	r0, [fp, #-36]	; 0xffffffdc
   1bc34:	sub	r0, fp, #32
   1bc38:	bl	2212c <__assert_fail@plt+0x108b8>
   1bc3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc40:	str	r0, [sp, #12]
   1bc44:	bl	11700 <__errno_location@plt>
   1bc48:	ldr	r1, [sp, #12]
   1bc4c:	str	r1, [r0]
   1bc50:	mvn	r0, #0
   1bc54:	str	r0, [fp, #-12]
   1bc58:	b	1bce8 <__assert_fail@plt+0xa474>
   1bc5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bc64:	bl	1173c <setfilecon@plt>
   1bc68:	str	r0, [fp, #-40]	; 0xffffffd8
   1bc6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc70:	cmn	r0, #1
   1bc74:	bne	1bc88 <__assert_fail@plt+0xa414>
   1bc78:	bl	11700 <__errno_location@plt>
   1bc7c:	ldr	r0, [r0]
   1bc80:	str	r0, [sp, #8]
   1bc84:	b	1bc94 <__assert_fail@plt+0xa420>
   1bc88:	movw	r0, #0
   1bc8c:	str	r0, [sp, #8]
   1bc90:	b	1bc94 <__assert_fail@plt+0xa420>
   1bc94:	ldr	r0, [sp, #8]
   1bc98:	str	r0, [fp, #-36]	; 0xffffffdc
   1bc9c:	sub	r0, fp, #32
   1bca0:	bl	220d8 <__assert_fail@plt+0x10864>
   1bca4:	cmp	r0, #0
   1bca8:	beq	1bcb8 <__assert_fail@plt+0xa444>
   1bcac:	bl	11700 <__errno_location@plt>
   1bcb0:	ldr	r0, [r0]
   1bcb4:	bl	20ca8 <__assert_fail@plt+0xf434>
   1bcb8:	sub	r0, fp, #32
   1bcbc:	bl	2212c <__assert_fail@plt+0x108b8>
   1bcc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bcc4:	cmp	r0, #0
   1bcc8:	beq	1bce0 <__assert_fail@plt+0xa46c>
   1bccc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bcd0:	str	r0, [sp, #4]
   1bcd4:	bl	11700 <__errno_location@plt>
   1bcd8:	ldr	r1, [sp, #4]
   1bcdc:	str	r1, [r0]
   1bce0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bce4:	str	r0, [fp, #-12]
   1bce8:	ldr	r0, [fp, #-12]
   1bcec:	sub	sp, fp, #8
   1bcf0:	pop	{r4, r5, fp, pc}
   1bcf4:	push	{r4, r5, fp, lr}
   1bcf8:	add	fp, sp, #8
   1bcfc:	sub	sp, sp, #4096	; 0x1000
   1bd00:	str	r0, [fp, #-16]
   1bd04:	str	r1, [fp, #-20]	; 0xffffffec
   1bd08:	str	r2, [fp, #-24]	; 0xffffffe8
   1bd0c:	ldr	r0, [fp, #-16]
   1bd10:	cmn	r0, #100	; 0x64
   1bd14:	beq	1bd28 <__assert_fail@plt+0xa4b4>
   1bd18:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd1c:	ldrb	r0, [r0]
   1bd20:	cmp	r0, #47	; 0x2f
   1bd24:	bne	1bd3c <__assert_fail@plt+0xa4c8>
   1bd28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd30:	bl	114fc <lsetfilecon@plt>
   1bd34:	str	r0, [fp, #-12]
   1bd38:	b	1bf48 <__assert_fail@plt+0xa6d4>
   1bd3c:	add	r0, sp, #32
   1bd40:	ldr	r1, [fp, #-16]
   1bd44:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bd48:	bl	1fa44 <__assert_fail@plt+0xe1d0>
   1bd4c:	str	r0, [sp, #28]
   1bd50:	ldr	r0, [sp, #28]
   1bd54:	movw	r1, #0
   1bd58:	cmp	r0, r1
   1bd5c:	beq	1be1c <__assert_fail@plt+0xa5a8>
   1bd60:	ldr	r0, [sp, #28]
   1bd64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd68:	bl	114fc <lsetfilecon@plt>
   1bd6c:	str	r0, [sp, #24]
   1bd70:	bl	11700 <__errno_location@plt>
   1bd74:	add	r1, sp, #32
   1bd78:	ldr	r0, [r0]
   1bd7c:	str	r0, [sp, #20]
   1bd80:	ldr	r0, [sp, #28]
   1bd84:	cmp	r0, r1
   1bd88:	beq	1bd94 <__assert_fail@plt+0xa520>
   1bd8c:	ldr	r0, [sp, #28]
   1bd90:	bl	2082c <__assert_fail@plt+0xefb8>
   1bd94:	ldr	r0, [sp, #24]
   1bd98:	mvn	r1, #0
   1bd9c:	cmp	r1, r0
   1bda0:	beq	1bdb0 <__assert_fail@plt+0xa53c>
   1bda4:	ldr	r0, [sp, #24]
   1bda8:	str	r0, [fp, #-12]
   1bdac:	b	1bf48 <__assert_fail@plt+0xa6d4>
   1bdb0:	ldr	r0, [sp, #20]
   1bdb4:	cmp	r0, #20
   1bdb8:	beq	1be18 <__assert_fail@plt+0xa5a4>
   1bdbc:	ldr	r0, [sp, #20]
   1bdc0:	cmp	r0, #2
   1bdc4:	beq	1be18 <__assert_fail@plt+0xa5a4>
   1bdc8:	ldr	r0, [sp, #20]
   1bdcc:	cmp	r0, #1
   1bdd0:	beq	1be18 <__assert_fail@plt+0xa5a4>
   1bdd4:	ldr	r0, [sp, #20]
   1bdd8:	cmp	r0, #13
   1bddc:	beq	1be18 <__assert_fail@plt+0xa5a4>
   1bde0:	ldr	r0, [sp, #20]
   1bde4:	cmp	r0, #38	; 0x26
   1bde8:	beq	1be18 <__assert_fail@plt+0xa5a4>
   1bdec:	ldr	r0, [sp, #20]
   1bdf0:	cmp	r0, #95	; 0x5f
   1bdf4:	beq	1be18 <__assert_fail@plt+0xa5a4>
   1bdf8:	ldr	r0, [sp, #20]
   1bdfc:	str	r0, [sp, #16]
   1be00:	bl	11700 <__errno_location@plt>
   1be04:	ldr	r1, [sp, #16]
   1be08:	str	r1, [r0]
   1be0c:	ldr	r0, [sp, #24]
   1be10:	str	r0, [fp, #-12]
   1be14:	b	1bf48 <__assert_fail@plt+0xa6d4>
   1be18:	b	1be1c <__assert_fail@plt+0xa5a8>
   1be1c:	sub	r0, fp, #32
   1be20:	bl	2203c <__assert_fail@plt+0x107c8>
   1be24:	cmp	r0, #0
   1be28:	beq	1be38 <__assert_fail@plt+0xa5c4>
   1be2c:	bl	11700 <__errno_location@plt>
   1be30:	ldr	r0, [r0]
   1be34:	bl	20c54 <__assert_fail@plt+0xf3e0>
   1be38:	ldr	r0, [fp, #-16]
   1be3c:	movw	r1, #0
   1be40:	cmp	r1, r0
   1be44:	bgt	1be78 <__assert_fail@plt+0xa604>
   1be48:	ldr	r0, [fp, #-16]
   1be4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1be50:	cmp	r0, r1
   1be54:	bne	1be78 <__assert_fail@plt+0xa604>
   1be58:	sub	r0, fp, #32
   1be5c:	bl	2212c <__assert_fail@plt+0x108b8>
   1be60:	bl	11700 <__errno_location@plt>
   1be64:	movw	r1, #9
   1be68:	str	r1, [r0]
   1be6c:	mvn	r0, #0
   1be70:	str	r0, [fp, #-12]
   1be74:	b	1bf48 <__assert_fail@plt+0xa6d4>
   1be78:	ldr	r0, [fp, #-16]
   1be7c:	bl	117cc <fchdir@plt>
   1be80:	cmp	r0, #0
   1be84:	beq	1bebc <__assert_fail@plt+0xa648>
   1be88:	bl	11700 <__errno_location@plt>
   1be8c:	ldr	r0, [r0]
   1be90:	str	r0, [fp, #-36]	; 0xffffffdc
   1be94:	sub	r0, fp, #32
   1be98:	bl	2212c <__assert_fail@plt+0x108b8>
   1be9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bea0:	str	r0, [sp, #12]
   1bea4:	bl	11700 <__errno_location@plt>
   1bea8:	ldr	r1, [sp, #12]
   1beac:	str	r1, [r0]
   1beb0:	mvn	r0, #0
   1beb4:	str	r0, [fp, #-12]
   1beb8:	b	1bf48 <__assert_fail@plt+0xa6d4>
   1bebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bec4:	bl	114fc <lsetfilecon@plt>
   1bec8:	str	r0, [fp, #-40]	; 0xffffffd8
   1becc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bed0:	cmn	r0, #1
   1bed4:	bne	1bee8 <__assert_fail@plt+0xa674>
   1bed8:	bl	11700 <__errno_location@plt>
   1bedc:	ldr	r0, [r0]
   1bee0:	str	r0, [sp, #8]
   1bee4:	b	1bef4 <__assert_fail@plt+0xa680>
   1bee8:	movw	r0, #0
   1beec:	str	r0, [sp, #8]
   1bef0:	b	1bef4 <__assert_fail@plt+0xa680>
   1bef4:	ldr	r0, [sp, #8]
   1bef8:	str	r0, [fp, #-36]	; 0xffffffdc
   1befc:	sub	r0, fp, #32
   1bf00:	bl	220d8 <__assert_fail@plt+0x10864>
   1bf04:	cmp	r0, #0
   1bf08:	beq	1bf18 <__assert_fail@plt+0xa6a4>
   1bf0c:	bl	11700 <__errno_location@plt>
   1bf10:	ldr	r0, [r0]
   1bf14:	bl	20ca8 <__assert_fail@plt+0xf434>
   1bf18:	sub	r0, fp, #32
   1bf1c:	bl	2212c <__assert_fail@plt+0x108b8>
   1bf20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bf24:	cmp	r0, #0
   1bf28:	beq	1bf40 <__assert_fail@plt+0xa6cc>
   1bf2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bf30:	str	r0, [sp, #4]
   1bf34:	bl	11700 <__errno_location@plt>
   1bf38:	ldr	r1, [sp, #4]
   1bf3c:	str	r1, [r0]
   1bf40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bf44:	str	r0, [fp, #-12]
   1bf48:	ldr	r0, [fp, #-12]
   1bf4c:	sub	sp, fp, #8
   1bf50:	pop	{r4, r5, fp, pc}
   1bf54:	push	{fp, lr}
   1bf58:	mov	fp, sp
   1bf5c:	sub	sp, sp, #16
   1bf60:	str	r0, [fp, #-4]
   1bf64:	str	r1, [sp, #8]
   1bf68:	ldr	r0, [fp, #-4]
   1bf6c:	ldr	r1, [sp, #8]
   1bf70:	bl	116c4 <getfilecon@plt>
   1bf74:	str	r0, [sp, #4]
   1bf78:	ldr	r0, [sp, #4]
   1bf7c:	ldr	r1, [sp, #8]
   1bf80:	bl	1bf8c <__assert_fail@plt+0xa718>
   1bf84:	mov	sp, fp
   1bf88:	pop	{fp, pc}
   1bf8c:	push	{fp, lr}
   1bf90:	mov	fp, sp
   1bf94:	sub	sp, sp, #16
   1bf98:	str	r0, [sp, #8]
   1bf9c:	str	r1, [sp, #4]
   1bfa0:	ldr	r0, [sp, #8]
   1bfa4:	cmp	r0, #0
   1bfa8:	bne	1bfc4 <__assert_fail@plt+0xa750>
   1bfac:	bl	11700 <__errno_location@plt>
   1bfb0:	movw	r1, #95	; 0x5f
   1bfb4:	str	r1, [r0]
   1bfb8:	mvn	r0, #0
   1bfbc:	str	r0, [fp, #-4]
   1bfc0:	b	1c024 <__assert_fail@plt+0xa7b0>
   1bfc4:	ldr	r0, [sp, #8]
   1bfc8:	cmp	r0, #10
   1bfcc:	bne	1c01c <__assert_fail@plt+0xa7a8>
   1bfd0:	ldr	r0, [sp, #4]
   1bfd4:	ldr	r0, [r0]
   1bfd8:	movw	r1, #16708	; 0x4144
   1bfdc:	movt	r1, #2
   1bfe0:	bl	114d8 <strcmp@plt>
   1bfe4:	cmp	r0, #0
   1bfe8:	bne	1c01c <__assert_fail@plt+0xa7a8>
   1bfec:	ldr	r0, [sp, #4]
   1bff0:	ldr	r0, [r0]
   1bff4:	bl	117e4 <freecon@plt>
   1bff8:	ldr	r0, [sp, #4]
   1bffc:	movw	r1, #0
   1c000:	str	r1, [r0]
   1c004:	bl	11700 <__errno_location@plt>
   1c008:	movw	r1, #61	; 0x3d
   1c00c:	str	r1, [r0]
   1c010:	mvn	r0, #0
   1c014:	str	r0, [fp, #-4]
   1c018:	b	1c024 <__assert_fail@plt+0xa7b0>
   1c01c:	ldr	r0, [sp, #8]
   1c020:	str	r0, [fp, #-4]
   1c024:	ldr	r0, [fp, #-4]
   1c028:	mov	sp, fp
   1c02c:	pop	{fp, pc}
   1c030:	push	{fp, lr}
   1c034:	mov	fp, sp
   1c038:	sub	sp, sp, #16
   1c03c:	str	r0, [fp, #-4]
   1c040:	str	r1, [sp, #8]
   1c044:	ldr	r0, [fp, #-4]
   1c048:	ldr	r1, [sp, #8]
   1c04c:	bl	11634 <lgetfilecon@plt>
   1c050:	str	r0, [sp, #4]
   1c054:	ldr	r0, [sp, #4]
   1c058:	ldr	r1, [sp, #8]
   1c05c:	bl	1bf8c <__assert_fail@plt+0xa718>
   1c060:	mov	sp, fp
   1c064:	pop	{fp, pc}
   1c068:	push	{fp, lr}
   1c06c:	mov	fp, sp
   1c070:	sub	sp, sp, #16
   1c074:	str	r0, [fp, #-4]
   1c078:	str	r1, [sp, #8]
   1c07c:	ldr	r0, [fp, #-4]
   1c080:	ldr	r1, [sp, #8]
   1c084:	bl	11580 <fgetfilecon@plt>
   1c088:	str	r0, [sp, #4]
   1c08c:	ldr	r0, [sp, #4]
   1c090:	ldr	r1, [sp, #8]
   1c094:	bl	1bf8c <__assert_fail@plt+0xa718>
   1c098:	mov	sp, fp
   1c09c:	pop	{fp, pc}
   1c0a0:	push	{fp, lr}
   1c0a4:	mov	fp, sp
   1c0a8:	sub	sp, sp, #24
   1c0ac:	str	r0, [fp, #-4]
   1c0b0:	ldr	r0, [fp, #-4]
   1c0b4:	movw	r1, #0
   1c0b8:	cmp	r1, r0
   1c0bc:	bgt	1c10c <__assert_fail@plt+0xa898>
   1c0c0:	ldr	r0, [fp, #-4]
   1c0c4:	cmp	r0, #2
   1c0c8:	bgt	1c10c <__assert_fail@plt+0xa898>
   1c0cc:	ldr	r0, [fp, #-4]
   1c0d0:	bl	2216c <__assert_fail@plt+0x108f8>
   1c0d4:	str	r0, [fp, #-8]
   1c0d8:	bl	11700 <__errno_location@plt>
   1c0dc:	ldr	r0, [r0]
   1c0e0:	str	r0, [sp, #12]
   1c0e4:	ldr	r0, [fp, #-4]
   1c0e8:	bl	11844 <close@plt>
   1c0ec:	ldr	r1, [sp, #12]
   1c0f0:	str	r0, [sp, #8]
   1c0f4:	str	r1, [sp, #4]
   1c0f8:	bl	11700 <__errno_location@plt>
   1c0fc:	ldr	r1, [sp, #4]
   1c100:	str	r1, [r0]
   1c104:	ldr	r0, [fp, #-8]
   1c108:	str	r0, [fp, #-4]
   1c10c:	ldr	r0, [fp, #-4]
   1c110:	mov	sp, fp
   1c114:	pop	{fp, pc}
   1c118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c11c:	add	fp, sp, #28
   1c120:	sub	sp, sp, #196	; 0xc4
   1c124:	ldr	ip, [fp, #12]
   1c128:	ldr	lr, [fp, #8]
   1c12c:	str	r0, [fp, #-32]	; 0xffffffe0
   1c130:	str	r1, [fp, #-36]	; 0xffffffdc
   1c134:	str	r2, [fp, #-40]	; 0xffffffd8
   1c138:	str	r3, [fp, #-44]	; 0xffffffd4
   1c13c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c140:	movw	r1, #0
   1c144:	cmp	r0, r1
   1c148:	beq	1c17c <__assert_fail@plt+0xa908>
   1c14c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c150:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c154:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c158:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c15c:	movw	ip, #16718	; 0x414e
   1c160:	movt	ip, #2
   1c164:	str	r1, [fp, #-48]	; 0xffffffd0
   1c168:	mov	r1, ip
   1c16c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1c170:	str	ip, [sp]
   1c174:	bl	116f4 <fprintf@plt>
   1c178:	b	1c194 <__assert_fail@plt+0xa920>
   1c17c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c184:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c188:	movw	r1, #16730	; 0x415a
   1c18c:	movt	r1, #2
   1c190:	bl	116f4 <fprintf@plt>
   1c194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c198:	movw	r1, #16737	; 0x4161
   1c19c:	movt	r1, #2
   1c1a0:	str	r0, [fp, #-52]	; 0xffffffcc
   1c1a4:	mov	r0, r1
   1c1a8:	bl	116b8 <gettext@plt>
   1c1ac:	movw	r1, #17455	; 0x442f
   1c1b0:	movt	r1, #2
   1c1b4:	movw	r3, #2022	; 0x7e6
   1c1b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c1bc:	str	r0, [fp, #-56]	; 0xffffffc8
   1c1c0:	mov	r0, r2
   1c1c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c1c8:	bl	116f4 <fprintf@plt>
   1c1cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c1d0:	movw	r2, #14486	; 0x3896
   1c1d4:	movt	r2, #2
   1c1d8:	str	r0, [fp, #-60]	; 0xffffffc4
   1c1dc:	mov	r0, r2
   1c1e0:	str	r2, [fp, #-64]	; 0xffffffc0
   1c1e4:	bl	114b4 <fputs_unlocked@plt>
   1c1e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c1ec:	movw	r2, #16741	; 0x4165
   1c1f0:	movt	r2, #2
   1c1f4:	str	r0, [fp, #-68]	; 0xffffffbc
   1c1f8:	mov	r0, r2
   1c1fc:	str	r1, [fp, #-72]	; 0xffffffb8
   1c200:	bl	116b8 <gettext@plt>
   1c204:	movw	r2, #16912	; 0x4210
   1c208:	movt	r2, #2
   1c20c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1c210:	str	r0, [fp, #-76]	; 0xffffffb4
   1c214:	mov	r0, r1
   1c218:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c21c:	bl	116f4 <fprintf@plt>
   1c220:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c224:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c228:	str	r0, [fp, #-80]	; 0xffffffb0
   1c22c:	mov	r0, r2
   1c230:	bl	114b4 <fputs_unlocked@plt>
   1c234:	ldr	r1, [fp, #12]
   1c238:	cmp	r1, #9
   1c23c:	str	r1, [fp, #-84]	; 0xffffffac
   1c240:	bhi	1c65c <__assert_fail@plt+0xade8>
   1c244:	add	r0, pc, #8
   1c248:	ldr	r1, [fp, #-84]	; 0xffffffac
   1c24c:	ldr	r0, [r0, r1, lsl #2]
   1c250:	mov	pc, r0
   1c254:	andeq	ip, r1, ip, ror r2
   1c258:	andeq	ip, r1, r0, lsl #5
   1c25c:			; <UNDEFINED> instruction: 0x0001c2b8
   1c260:	strdeq	ip, [r1], -r8
   1c264:	andeq	ip, r1, r0, asr r3
   1c268:			; <UNDEFINED> instruction: 0x0001c3b4
   1c26c:	andeq	ip, r1, r4, lsr #8
   1c270:	andeq	ip, r1, r0, lsr #9
   1c274:	andeq	ip, r1, r8, lsr #10
   1c278:			; <UNDEFINED> instruction: 0x0001c5bc
   1c27c:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c284:	movw	r1, #16946	; 0x4232
   1c288:	movt	r1, #2
   1c28c:	str	r0, [fp, #-88]	; 0xffffffa8
   1c290:	mov	r0, r1
   1c294:	bl	116b8 <gettext@plt>
   1c298:	ldr	r1, [fp, #8]
   1c29c:	ldr	r2, [r1]
   1c2a0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c2a4:	str	r0, [fp, #-92]	; 0xffffffa4
   1c2a8:	mov	r0, r1
   1c2ac:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c2b0:	bl	116f4 <fprintf@plt>
   1c2b4:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c2b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c2bc:	movw	r1, #16962	; 0x4242
   1c2c0:	movt	r1, #2
   1c2c4:	str	r0, [fp, #-96]	; 0xffffffa0
   1c2c8:	mov	r0, r1
   1c2cc:	bl	116b8 <gettext@plt>
   1c2d0:	ldr	r1, [fp, #8]
   1c2d4:	ldr	r2, [r1]
   1c2d8:	ldr	r1, [fp, #8]
   1c2dc:	ldr	r3, [r1, #4]
   1c2e0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1c2e4:	str	r0, [fp, #-100]	; 0xffffff9c
   1c2e8:	mov	r0, r1
   1c2ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1c2f0:	bl	116f4 <fprintf@plt>
   1c2f4:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c2f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c2fc:	movw	r1, #16985	; 0x4259
   1c300:	movt	r1, #2
   1c304:	str	r0, [fp, #-104]	; 0xffffff98
   1c308:	mov	r0, r1
   1c30c:	bl	116b8 <gettext@plt>
   1c310:	ldr	r1, [fp, #8]
   1c314:	ldr	r2, [r1]
   1c318:	ldr	r1, [fp, #8]
   1c31c:	ldr	r3, [r1, #4]
   1c320:	ldr	r1, [fp, #8]
   1c324:	ldr	r1, [r1, #8]
   1c328:	ldr	ip, [fp, #-104]	; 0xffffff98
   1c32c:	str	r0, [fp, #-108]	; 0xffffff94
   1c330:	mov	r0, ip
   1c334:	ldr	lr, [fp, #-108]	; 0xffffff94
   1c338:	str	r1, [sp, #112]	; 0x70
   1c33c:	mov	r1, lr
   1c340:	ldr	r4, [sp, #112]	; 0x70
   1c344:	str	r4, [sp]
   1c348:	bl	116f4 <fprintf@plt>
   1c34c:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c354:	movw	r1, #17013	; 0x4275
   1c358:	movt	r1, #2
   1c35c:	str	r0, [sp, #108]	; 0x6c
   1c360:	mov	r0, r1
   1c364:	bl	116b8 <gettext@plt>
   1c368:	ldr	r1, [fp, #8]
   1c36c:	ldr	r2, [r1]
   1c370:	ldr	r1, [fp, #8]
   1c374:	ldr	r3, [r1, #4]
   1c378:	ldr	r1, [fp, #8]
   1c37c:	ldr	r1, [r1, #8]
   1c380:	ldr	ip, [fp, #8]
   1c384:	ldr	ip, [ip, #12]
   1c388:	ldr	lr, [sp, #108]	; 0x6c
   1c38c:	str	r0, [sp, #104]	; 0x68
   1c390:	mov	r0, lr
   1c394:	ldr	r4, [sp, #104]	; 0x68
   1c398:	str	r1, [sp, #100]	; 0x64
   1c39c:	mov	r1, r4
   1c3a0:	ldr	r5, [sp, #100]	; 0x64
   1c3a4:	str	r5, [sp]
   1c3a8:	str	ip, [sp, #4]
   1c3ac:	bl	116f4 <fprintf@plt>
   1c3b0:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c3b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3b8:	movw	r1, #17045	; 0x4295
   1c3bc:	movt	r1, #2
   1c3c0:	str	r0, [sp, #96]	; 0x60
   1c3c4:	mov	r0, r1
   1c3c8:	bl	116b8 <gettext@plt>
   1c3cc:	ldr	r1, [fp, #8]
   1c3d0:	ldr	r2, [r1]
   1c3d4:	ldr	r1, [fp, #8]
   1c3d8:	ldr	r3, [r1, #4]
   1c3dc:	ldr	r1, [fp, #8]
   1c3e0:	ldr	r1, [r1, #8]
   1c3e4:	ldr	ip, [fp, #8]
   1c3e8:	ldr	ip, [ip, #12]
   1c3ec:	ldr	lr, [fp, #8]
   1c3f0:	ldr	lr, [lr, #16]
   1c3f4:	ldr	r4, [sp, #96]	; 0x60
   1c3f8:	str	r0, [sp, #92]	; 0x5c
   1c3fc:	mov	r0, r4
   1c400:	ldr	r5, [sp, #92]	; 0x5c
   1c404:	str	r1, [sp, #88]	; 0x58
   1c408:	mov	r1, r5
   1c40c:	ldr	r6, [sp, #88]	; 0x58
   1c410:	str	r6, [sp]
   1c414:	str	ip, [sp, #4]
   1c418:	str	lr, [sp, #8]
   1c41c:	bl	116f4 <fprintf@plt>
   1c420:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c428:	movw	r1, #17081	; 0x42b9
   1c42c:	movt	r1, #2
   1c430:	str	r0, [sp, #84]	; 0x54
   1c434:	mov	r0, r1
   1c438:	bl	116b8 <gettext@plt>
   1c43c:	ldr	r1, [fp, #8]
   1c440:	ldr	r2, [r1]
   1c444:	ldr	r1, [fp, #8]
   1c448:	ldr	r3, [r1, #4]
   1c44c:	ldr	r1, [fp, #8]
   1c450:	ldr	r1, [r1, #8]
   1c454:	ldr	ip, [fp, #8]
   1c458:	ldr	ip, [ip, #12]
   1c45c:	ldr	lr, [fp, #8]
   1c460:	ldr	lr, [lr, #16]
   1c464:	ldr	r4, [fp, #8]
   1c468:	ldr	r4, [r4, #20]
   1c46c:	ldr	r5, [sp, #84]	; 0x54
   1c470:	str	r0, [sp, #80]	; 0x50
   1c474:	mov	r0, r5
   1c478:	ldr	r6, [sp, #80]	; 0x50
   1c47c:	str	r1, [sp, #76]	; 0x4c
   1c480:	mov	r1, r6
   1c484:	ldr	r7, [sp, #76]	; 0x4c
   1c488:	str	r7, [sp]
   1c48c:	str	ip, [sp, #4]
   1c490:	str	lr, [sp, #8]
   1c494:	str	r4, [sp, #12]
   1c498:	bl	116f4 <fprintf@plt>
   1c49c:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c4a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4a4:	movw	r1, #17121	; 0x42e1
   1c4a8:	movt	r1, #2
   1c4ac:	str	r0, [sp, #72]	; 0x48
   1c4b0:	mov	r0, r1
   1c4b4:	bl	116b8 <gettext@plt>
   1c4b8:	ldr	r1, [fp, #8]
   1c4bc:	ldr	r2, [r1]
   1c4c0:	ldr	r1, [fp, #8]
   1c4c4:	ldr	r3, [r1, #4]
   1c4c8:	ldr	r1, [fp, #8]
   1c4cc:	ldr	r1, [r1, #8]
   1c4d0:	ldr	ip, [fp, #8]
   1c4d4:	ldr	ip, [ip, #12]
   1c4d8:	ldr	lr, [fp, #8]
   1c4dc:	ldr	lr, [lr, #16]
   1c4e0:	ldr	r4, [fp, #8]
   1c4e4:	ldr	r4, [r4, #20]
   1c4e8:	ldr	r5, [fp, #8]
   1c4ec:	ldr	r5, [r5, #24]
   1c4f0:	ldr	r6, [sp, #72]	; 0x48
   1c4f4:	str	r0, [sp, #68]	; 0x44
   1c4f8:	mov	r0, r6
   1c4fc:	ldr	r7, [sp, #68]	; 0x44
   1c500:	str	r1, [sp, #64]	; 0x40
   1c504:	mov	r1, r7
   1c508:	ldr	r8, [sp, #64]	; 0x40
   1c50c:	str	r8, [sp]
   1c510:	str	ip, [sp, #4]
   1c514:	str	lr, [sp, #8]
   1c518:	str	r4, [sp, #12]
   1c51c:	str	r5, [sp, #16]
   1c520:	bl	116f4 <fprintf@plt>
   1c524:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c52c:	movw	r1, #17165	; 0x430d
   1c530:	movt	r1, #2
   1c534:	str	r0, [sp, #60]	; 0x3c
   1c538:	mov	r0, r1
   1c53c:	bl	116b8 <gettext@plt>
   1c540:	ldr	r1, [fp, #8]
   1c544:	ldr	r2, [r1]
   1c548:	ldr	r1, [fp, #8]
   1c54c:	ldr	r3, [r1, #4]
   1c550:	ldr	r1, [fp, #8]
   1c554:	ldr	r1, [r1, #8]
   1c558:	ldr	ip, [fp, #8]
   1c55c:	ldr	ip, [ip, #12]
   1c560:	ldr	lr, [fp, #8]
   1c564:	ldr	lr, [lr, #16]
   1c568:	ldr	r4, [fp, #8]
   1c56c:	ldr	r4, [r4, #20]
   1c570:	ldr	r5, [fp, #8]
   1c574:	ldr	r5, [r5, #24]
   1c578:	ldr	r6, [fp, #8]
   1c57c:	ldr	r6, [r6, #28]
   1c580:	ldr	r7, [sp, #60]	; 0x3c
   1c584:	str	r0, [sp, #56]	; 0x38
   1c588:	mov	r0, r7
   1c58c:	ldr	r8, [sp, #56]	; 0x38
   1c590:	str	r1, [sp, #52]	; 0x34
   1c594:	mov	r1, r8
   1c598:	ldr	r9, [sp, #52]	; 0x34
   1c59c:	str	r9, [sp]
   1c5a0:	str	ip, [sp, #4]
   1c5a4:	str	lr, [sp, #8]
   1c5a8:	str	r4, [sp, #12]
   1c5ac:	str	r5, [sp, #16]
   1c5b0:	str	r6, [sp, #20]
   1c5b4:	bl	116f4 <fprintf@plt>
   1c5b8:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c5bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5c0:	movw	r1, #17213	; 0x433d
   1c5c4:	movt	r1, #2
   1c5c8:	str	r0, [sp, #48]	; 0x30
   1c5cc:	mov	r0, r1
   1c5d0:	bl	116b8 <gettext@plt>
   1c5d4:	ldr	r1, [fp, #8]
   1c5d8:	ldr	r2, [r1]
   1c5dc:	ldr	r1, [fp, #8]
   1c5e0:	ldr	r3, [r1, #4]
   1c5e4:	ldr	r1, [fp, #8]
   1c5e8:	ldr	r1, [r1, #8]
   1c5ec:	ldr	ip, [fp, #8]
   1c5f0:	ldr	ip, [ip, #12]
   1c5f4:	ldr	lr, [fp, #8]
   1c5f8:	ldr	lr, [lr, #16]
   1c5fc:	ldr	r4, [fp, #8]
   1c600:	ldr	r4, [r4, #20]
   1c604:	ldr	r5, [fp, #8]
   1c608:	ldr	r5, [r5, #24]
   1c60c:	ldr	r6, [fp, #8]
   1c610:	ldr	r6, [r6, #28]
   1c614:	ldr	r7, [fp, #8]
   1c618:	ldr	r7, [r7, #32]
   1c61c:	ldr	r8, [sp, #48]	; 0x30
   1c620:	str	r0, [sp, #44]	; 0x2c
   1c624:	mov	r0, r8
   1c628:	ldr	r9, [sp, #44]	; 0x2c
   1c62c:	str	r1, [sp, #40]	; 0x28
   1c630:	mov	r1, r9
   1c634:	ldr	sl, [sp, #40]	; 0x28
   1c638:	str	sl, [sp]
   1c63c:	str	ip, [sp, #4]
   1c640:	str	lr, [sp, #8]
   1c644:	str	r4, [sp, #12]
   1c648:	str	r5, [sp, #16]
   1c64c:	str	r6, [sp, #20]
   1c650:	str	r7, [sp, #24]
   1c654:	bl	116f4 <fprintf@plt>
   1c658:	b	1c6f8 <__assert_fail@plt+0xae84>
   1c65c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c660:	movw	r1, #17265	; 0x4371
   1c664:	movt	r1, #2
   1c668:	str	r0, [sp, #36]	; 0x24
   1c66c:	mov	r0, r1
   1c670:	bl	116b8 <gettext@plt>
   1c674:	ldr	r1, [fp, #8]
   1c678:	ldr	r2, [r1]
   1c67c:	ldr	r1, [fp, #8]
   1c680:	ldr	r3, [r1, #4]
   1c684:	ldr	r1, [fp, #8]
   1c688:	ldr	r1, [r1, #8]
   1c68c:	ldr	ip, [fp, #8]
   1c690:	ldr	ip, [ip, #12]
   1c694:	ldr	lr, [fp, #8]
   1c698:	ldr	lr, [lr, #16]
   1c69c:	ldr	r4, [fp, #8]
   1c6a0:	ldr	r4, [r4, #20]
   1c6a4:	ldr	r5, [fp, #8]
   1c6a8:	ldr	r5, [r5, #24]
   1c6ac:	ldr	r6, [fp, #8]
   1c6b0:	ldr	r6, [r6, #28]
   1c6b4:	ldr	r7, [fp, #8]
   1c6b8:	ldr	r7, [r7, #32]
   1c6bc:	ldr	r8, [sp, #36]	; 0x24
   1c6c0:	str	r0, [sp, #32]
   1c6c4:	mov	r0, r8
   1c6c8:	ldr	r9, [sp, #32]
   1c6cc:	str	r1, [sp, #28]
   1c6d0:	mov	r1, r9
   1c6d4:	ldr	sl, [sp, #28]
   1c6d8:	str	sl, [sp]
   1c6dc:	str	ip, [sp, #4]
   1c6e0:	str	lr, [sp, #8]
   1c6e4:	str	r4, [sp, #12]
   1c6e8:	str	r5, [sp, #16]
   1c6ec:	str	r6, [sp, #20]
   1c6f0:	str	r7, [sp, #24]
   1c6f4:	bl	116f4 <fprintf@plt>
   1c6f8:	sub	sp, fp, #28
   1c6fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c700:	push	{fp, lr}
   1c704:	mov	fp, sp
   1c708:	sub	sp, sp, #32
   1c70c:	ldr	ip, [fp, #8]
   1c710:	str	r0, [fp, #-4]
   1c714:	str	r1, [fp, #-8]
   1c718:	str	r2, [fp, #-12]
   1c71c:	str	r3, [sp, #16]
   1c720:	movw	r0, #0
   1c724:	str	r0, [sp, #12]
   1c728:	ldr	r0, [fp, #8]
   1c72c:	ldr	r1, [sp, #12]
   1c730:	add	r0, r0, r1, lsl #2
   1c734:	ldr	r0, [r0]
   1c738:	movw	r1, #0
   1c73c:	cmp	r0, r1
   1c740:	beq	1c758 <__assert_fail@plt+0xaee4>
   1c744:	b	1c748 <__assert_fail@plt+0xaed4>
   1c748:	ldr	r0, [sp, #12]
   1c74c:	add	r0, r0, #1
   1c750:	str	r0, [sp, #12]
   1c754:	b	1c728 <__assert_fail@plt+0xaeb4>
   1c758:	ldr	r0, [fp, #-4]
   1c75c:	ldr	r1, [fp, #-8]
   1c760:	ldr	r2, [fp, #-12]
   1c764:	ldr	r3, [sp, #16]
   1c768:	ldr	ip, [fp, #8]
   1c76c:	ldr	lr, [sp, #12]
   1c770:	str	ip, [sp]
   1c774:	str	lr, [sp, #4]
   1c778:	bl	1c118 <__assert_fail@plt+0xa8a4>
   1c77c:	mov	sp, fp
   1c780:	pop	{fp, pc}
   1c784:	push	{fp, lr}
   1c788:	mov	fp, sp
   1c78c:	sub	sp, sp, #80	; 0x50
   1c790:	ldr	ip, [fp, #8]
   1c794:	str	ip, [fp, #-4]
   1c798:	str	r0, [fp, #-8]
   1c79c:	str	r1, [fp, #-12]
   1c7a0:	str	r2, [fp, #-16]
   1c7a4:	str	r3, [fp, #-20]	; 0xffffffec
   1c7a8:	movw	r0, #0
   1c7ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7b4:	cmp	r0, #10
   1c7b8:	movw	r0, #0
   1c7bc:	str	r0, [sp, #12]
   1c7c0:	bcs	1c7f8 <__assert_fail@plt+0xaf84>
   1c7c4:	ldr	r0, [fp, #-4]
   1c7c8:	add	r1, r0, #4
   1c7cc:	str	r1, [fp, #-4]
   1c7d0:	ldr	r0, [r0]
   1c7d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7d8:	add	r2, sp, #16
   1c7dc:	add	r1, r2, r1, lsl #2
   1c7e0:	str	r0, [r1]
   1c7e4:	movw	r1, #0
   1c7e8:	cmp	r0, r1
   1c7ec:	movw	r0, #0
   1c7f0:	movne	r0, #1
   1c7f4:	str	r0, [sp, #12]
   1c7f8:	ldr	r0, [sp, #12]
   1c7fc:	tst	r0, #1
   1c800:	beq	1c818 <__assert_fail@plt+0xafa4>
   1c804:	b	1c808 <__assert_fail@plt+0xaf94>
   1c808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c80c:	add	r0, r0, #1
   1c810:	str	r0, [fp, #-24]	; 0xffffffe8
   1c814:	b	1c7b0 <__assert_fail@plt+0xaf3c>
   1c818:	add	r0, sp, #16
   1c81c:	ldr	r1, [fp, #-8]
   1c820:	ldr	r2, [fp, #-12]
   1c824:	ldr	r3, [fp, #-16]
   1c828:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c82c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c830:	str	r0, [sp, #8]
   1c834:	mov	r0, r1
   1c838:	mov	r1, r2
   1c83c:	mov	r2, r3
   1c840:	mov	r3, ip
   1c844:	ldr	ip, [sp, #8]
   1c848:	str	ip, [sp]
   1c84c:	str	lr, [sp, #4]
   1c850:	bl	1c118 <__assert_fail@plt+0xa8a4>
   1c854:	mov	sp, fp
   1c858:	pop	{fp, pc}
   1c85c:	push	{fp, lr}
   1c860:	mov	fp, sp
   1c864:	sub	sp, sp, #24
   1c868:	str	r0, [fp, #-4]
   1c86c:	str	r1, [fp, #-8]
   1c870:	str	r2, [sp, #12]
   1c874:	str	r3, [sp, #8]
   1c878:	add	r0, fp, #8
   1c87c:	str	r0, [sp, #4]
   1c880:	ldr	r0, [fp, #-4]
   1c884:	ldr	r1, [fp, #-8]
   1c888:	ldr	r2, [sp, #12]
   1c88c:	ldr	r3, [sp, #8]
   1c890:	ldr	ip, [sp, #4]
   1c894:	mov	lr, sp
   1c898:	str	ip, [lr]
   1c89c:	bl	1c784 <__assert_fail@plt+0xaf10>
   1c8a0:	add	r0, sp, #4
   1c8a4:	mov	sp, fp
   1c8a8:	pop	{fp, pc}
   1c8ac:	push	{fp, lr}
   1c8b0:	mov	fp, sp
   1c8b4:	sub	sp, sp, #16
   1c8b8:	movw	r0, #20932	; 0x51c4
   1c8bc:	movt	r0, #3
   1c8c0:	ldr	r1, [r0]
   1c8c4:	movw	r0, #14486	; 0x3896
   1c8c8:	movt	r0, #2
   1c8cc:	bl	114b4 <fputs_unlocked@plt>
   1c8d0:	movw	r1, #17325	; 0x43ad
   1c8d4:	movt	r1, #2
   1c8d8:	str	r0, [fp, #-4]
   1c8dc:	mov	r0, r1
   1c8e0:	bl	116b8 <gettext@plt>
   1c8e4:	movw	r1, #17345	; 0x43c1
   1c8e8:	movt	r1, #2
   1c8ec:	bl	114e4 <printf@plt>
   1c8f0:	movw	r1, #17367	; 0x43d7
   1c8f4:	movt	r1, #2
   1c8f8:	str	r0, [sp, #8]
   1c8fc:	mov	r0, r1
   1c900:	bl	116b8 <gettext@plt>
   1c904:	movw	r1, #14632	; 0x3928
   1c908:	movt	r1, #2
   1c90c:	movw	r2, #15101	; 0x3afd
   1c910:	movt	r2, #2
   1c914:	bl	114e4 <printf@plt>
   1c918:	movw	r1, #17387	; 0x43eb
   1c91c:	movt	r1, #2
   1c920:	str	r0, [sp, #4]
   1c924:	mov	r0, r1
   1c928:	bl	116b8 <gettext@plt>
   1c92c:	movw	r1, #17426	; 0x4412
   1c930:	movt	r1, #2
   1c934:	bl	114e4 <printf@plt>
   1c938:	mov	sp, fp
   1c93c:	pop	{fp, pc}
   1c940:	push	{fp, lr}
   1c944:	mov	fp, sp
   1c948:	sub	sp, sp, #16
   1c94c:	str	r0, [fp, #-4]
   1c950:	str	r1, [sp, #8]
   1c954:	str	r2, [sp, #4]
   1c958:	ldr	r0, [fp, #-4]
   1c95c:	ldr	r1, [sp, #8]
   1c960:	ldr	r2, [sp, #4]
   1c964:	bl	1c970 <__assert_fail@plt+0xb0fc>
   1c968:	mov	sp, fp
   1c96c:	pop	{fp, pc}
   1c970:	push	{fp, lr}
   1c974:	mov	fp, sp
   1c978:	sub	sp, sp, #16
   1c97c:	str	r0, [fp, #-4]
   1c980:	str	r1, [sp, #8]
   1c984:	str	r2, [sp, #4]
   1c988:	ldr	r0, [fp, #-4]
   1c98c:	ldr	r1, [sp, #8]
   1c990:	ldr	r2, [sp, #4]
   1c994:	bl	20cfc <__assert_fail@plt+0xf488>
   1c998:	str	r0, [sp]
   1c99c:	ldr	r0, [sp]
   1c9a0:	movw	r1, #0
   1c9a4:	cmp	r0, r1
   1c9a8:	bne	1c9d8 <__assert_fail@plt+0xb164>
   1c9ac:	ldr	r0, [fp, #-4]
   1c9b0:	movw	r1, #0
   1c9b4:	cmp	r0, r1
   1c9b8:	beq	1c9d4 <__assert_fail@plt+0xb160>
   1c9bc:	ldr	r0, [sp, #8]
   1c9c0:	cmp	r0, #0
   1c9c4:	beq	1c9d8 <__assert_fail@plt+0xb164>
   1c9c8:	ldr	r0, [sp, #4]
   1c9cc:	cmp	r0, #0
   1c9d0:	beq	1c9d8 <__assert_fail@plt+0xb164>
   1c9d4:	bl	1f71c <__assert_fail@plt+0xdea8>
   1c9d8:	ldr	r0, [sp]
   1c9dc:	mov	sp, fp
   1c9e0:	pop	{fp, pc}
   1c9e4:	push	{fp, lr}
   1c9e8:	mov	fp, sp
   1c9ec:	sub	sp, sp, #8
   1c9f0:	str	r0, [sp, #4]
   1c9f4:	ldr	r0, [sp, #4]
   1c9f8:	bl	1f930 <__assert_fail@plt+0xe0bc>
   1c9fc:	bl	1ca08 <__assert_fail@plt+0xb194>
   1ca00:	mov	sp, fp
   1ca04:	pop	{fp, pc}
   1ca08:	push	{fp, lr}
   1ca0c:	mov	fp, sp
   1ca10:	sub	sp, sp, #8
   1ca14:	str	r0, [sp, #4]
   1ca18:	ldr	r0, [sp, #4]
   1ca1c:	movw	r1, #0
   1ca20:	cmp	r0, r1
   1ca24:	bne	1ca2c <__assert_fail@plt+0xb1b8>
   1ca28:	bl	1f71c <__assert_fail@plt+0xdea8>
   1ca2c:	ldr	r0, [sp, #4]
   1ca30:	mov	sp, fp
   1ca34:	pop	{fp, pc}
   1ca38:	push	{fp, lr}
   1ca3c:	mov	fp, sp
   1ca40:	sub	sp, sp, #8
   1ca44:	str	r0, [sp, #4]
   1ca48:	ldr	r0, [sp, #4]
   1ca4c:	bl	20990 <__assert_fail@plt+0xf11c>
   1ca50:	bl	1ca08 <__assert_fail@plt+0xb194>
   1ca54:	mov	sp, fp
   1ca58:	pop	{fp, pc}
   1ca5c:	push	{fp, lr}
   1ca60:	mov	fp, sp
   1ca64:	sub	sp, sp, #8
   1ca68:	str	r0, [sp, #4]
   1ca6c:	ldr	r0, [sp, #4]
   1ca70:	bl	1c9e4 <__assert_fail@plt+0xb170>
   1ca74:	mov	sp, fp
   1ca78:	pop	{fp, pc}
   1ca7c:	push	{fp, lr}
   1ca80:	mov	fp, sp
   1ca84:	sub	sp, sp, #16
   1ca88:	str	r0, [fp, #-4]
   1ca8c:	str	r1, [sp, #8]
   1ca90:	ldr	r0, [fp, #-4]
   1ca94:	ldr	r1, [sp, #8]
   1ca98:	bl	1f9a0 <__assert_fail@plt+0xe12c>
   1ca9c:	str	r0, [sp, #4]
   1caa0:	ldr	r0, [sp, #4]
   1caa4:	movw	r1, #0
   1caa8:	cmp	r0, r1
   1caac:	bne	1cad0 <__assert_fail@plt+0xb25c>
   1cab0:	ldr	r0, [fp, #-4]
   1cab4:	movw	r1, #0
   1cab8:	cmp	r0, r1
   1cabc:	beq	1cacc <__assert_fail@plt+0xb258>
   1cac0:	ldr	r0, [sp, #8]
   1cac4:	cmp	r0, #0
   1cac8:	beq	1cad0 <__assert_fail@plt+0xb25c>
   1cacc:	bl	1f71c <__assert_fail@plt+0xdea8>
   1cad0:	ldr	r0, [sp, #4]
   1cad4:	mov	sp, fp
   1cad8:	pop	{fp, pc}
   1cadc:	push	{fp, lr}
   1cae0:	mov	fp, sp
   1cae4:	sub	sp, sp, #8
   1cae8:	str	r0, [sp, #4]
   1caec:	str	r1, [sp]
   1caf0:	ldr	r0, [sp, #4]
   1caf4:	ldr	r1, [sp]
   1caf8:	bl	209d0 <__assert_fail@plt+0xf15c>
   1cafc:	bl	1ca08 <__assert_fail@plt+0xb194>
   1cb00:	mov	sp, fp
   1cb04:	pop	{fp, pc}
   1cb08:	push	{fp, lr}
   1cb0c:	mov	fp, sp
   1cb10:	sub	sp, sp, #16
   1cb14:	str	r0, [fp, #-4]
   1cb18:	str	r1, [sp, #8]
   1cb1c:	str	r2, [sp, #4]
   1cb20:	ldr	r0, [fp, #-4]
   1cb24:	ldr	r1, [sp, #8]
   1cb28:	ldr	r2, [sp, #4]
   1cb2c:	bl	20ac8 <__assert_fail@plt+0xf254>
   1cb30:	bl	1ca08 <__assert_fail@plt+0xb194>
   1cb34:	mov	sp, fp
   1cb38:	pop	{fp, pc}
   1cb3c:	push	{fp, lr}
   1cb40:	mov	fp, sp
   1cb44:	sub	sp, sp, #8
   1cb48:	str	r0, [sp, #4]
   1cb4c:	str	r1, [sp]
   1cb50:	ldr	r1, [sp, #4]
   1cb54:	ldr	r2, [sp]
   1cb58:	movw	r0, #0
   1cb5c:	bl	1c970 <__assert_fail@plt+0xb0fc>
   1cb60:	mov	sp, fp
   1cb64:	pop	{fp, pc}
   1cb68:	push	{fp, lr}
   1cb6c:	mov	fp, sp
   1cb70:	sub	sp, sp, #8
   1cb74:	str	r0, [sp, #4]
   1cb78:	str	r1, [sp]
   1cb7c:	ldr	r1, [sp, #4]
   1cb80:	ldr	r2, [sp]
   1cb84:	movw	r0, #0
   1cb88:	bl	1cb08 <__assert_fail@plt+0xb294>
   1cb8c:	mov	sp, fp
   1cb90:	pop	{fp, pc}
   1cb94:	push	{fp, lr}
   1cb98:	mov	fp, sp
   1cb9c:	sub	sp, sp, #8
   1cba0:	str	r0, [sp, #4]
   1cba4:	str	r1, [sp]
   1cba8:	ldr	r0, [sp, #4]
   1cbac:	ldr	r1, [sp]
   1cbb0:	movw	r2, #1
   1cbb4:	bl	1cbc0 <__assert_fail@plt+0xb34c>
   1cbb8:	mov	sp, fp
   1cbbc:	pop	{fp, pc}
   1cbc0:	push	{fp, lr}
   1cbc4:	mov	fp, sp
   1cbc8:	sub	sp, sp, #16
   1cbcc:	str	r0, [fp, #-4]
   1cbd0:	str	r1, [sp, #8]
   1cbd4:	str	r2, [sp, #4]
   1cbd8:	ldr	r0, [sp, #8]
   1cbdc:	ldr	r0, [r0]
   1cbe0:	str	r0, [sp]
   1cbe4:	ldr	r0, [fp, #-4]
   1cbe8:	movw	r1, #0
   1cbec:	cmp	r0, r1
   1cbf0:	bne	1cc3c <__assert_fail@plt+0xb3c8>
   1cbf4:	ldr	r0, [sp]
   1cbf8:	cmp	r0, #0
   1cbfc:	bne	1cc38 <__assert_fail@plt+0xb3c4>
   1cc00:	ldr	r0, [sp, #4]
   1cc04:	movw	r1, #64	; 0x40
   1cc08:	udiv	r0, r1, r0
   1cc0c:	str	r0, [sp]
   1cc10:	ldr	r0, [sp]
   1cc14:	cmp	r0, #0
   1cc18:	movw	r0, #0
   1cc1c:	movne	r0, #1
   1cc20:	mvn	r1, #0
   1cc24:	eor	r0, r0, r1
   1cc28:	and	r0, r0, #1
   1cc2c:	ldr	r1, [sp]
   1cc30:	add	r0, r1, r0
   1cc34:	str	r0, [sp]
   1cc38:	b	1cc6c <__assert_fail@plt+0xb3f8>
   1cc3c:	ldr	r0, [sp]
   1cc40:	ldr	r1, [sp]
   1cc44:	lsr	r1, r1, #1
   1cc48:	add	r1, r1, #1
   1cc4c:	adds	r0, r0, r1
   1cc50:	mov	r1, #0
   1cc54:	adc	r1, r1, #0
   1cc58:	str	r0, [sp]
   1cc5c:	tst	r1, #1
   1cc60:	beq	1cc68 <__assert_fail@plt+0xb3f4>
   1cc64:	bl	1f71c <__assert_fail@plt+0xdea8>
   1cc68:	b	1cc6c <__assert_fail@plt+0xb3f8>
   1cc6c:	ldr	r0, [fp, #-4]
   1cc70:	ldr	r1, [sp]
   1cc74:	ldr	r2, [sp, #4]
   1cc78:	bl	1c970 <__assert_fail@plt+0xb0fc>
   1cc7c:	str	r0, [fp, #-4]
   1cc80:	ldr	r0, [sp]
   1cc84:	ldr	r1, [sp, #8]
   1cc88:	str	r0, [r1]
   1cc8c:	ldr	r0, [fp, #-4]
   1cc90:	mov	sp, fp
   1cc94:	pop	{fp, pc}
   1cc98:	push	{fp, lr}
   1cc9c:	mov	fp, sp
   1cca0:	sub	sp, sp, #216	; 0xd8
   1cca4:	ldr	ip, [fp, #8]
   1cca8:	str	r0, [fp, #-4]
   1ccac:	str	r1, [fp, #-8]
   1ccb0:	str	r2, [fp, #-12]
   1ccb4:	str	r3, [fp, #-16]
   1ccb8:	ldr	r0, [fp, #-8]
   1ccbc:	ldr	r0, [r0]
   1ccc0:	str	r0, [fp, #-20]	; 0xffffffec
   1ccc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ccc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cccc:	asr	r1, r1, #1
   1ccd0:	add	r1, r0, r1
   1ccd4:	mov	r2, #1
   1ccd8:	cmp	r1, r0
   1ccdc:	movwvc	r2, #0
   1cce0:	str	r1, [fp, #-24]	; 0xffffffe8
   1cce4:	tst	r2, #1
   1cce8:	beq	1ccf4 <__assert_fail@plt+0xb480>
   1ccec:	ldr	r0, [pc, #4036]	; 1dcb8 <__assert_fail@plt+0xc444>
   1ccf0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccf4:	ldr	r0, [fp, #-16]
   1ccf8:	movw	r1, #0
   1ccfc:	cmp	r1, r0
   1cd00:	bgt	1cd1c <__assert_fail@plt+0xb4a8>
   1cd04:	ldr	r0, [fp, #-16]
   1cd08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd0c:	cmp	r0, r1
   1cd10:	bge	1cd1c <__assert_fail@plt+0xb4a8>
   1cd14:	ldr	r0, [fp, #-16]
   1cd18:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd1c:	b	1d0f4 <__assert_fail@plt+0xb880>
   1cd20:	b	1cd24 <__assert_fail@plt+0xb4b0>
   1cd24:	ldr	r0, [fp, #8]
   1cd28:	cmp	r0, #0
   1cd2c:	bge	1ce40 <__assert_fail@plt+0xb5cc>
   1cd30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd34:	cmp	r0, #0
   1cd38:	bge	1cdc4 <__assert_fail@plt+0xb550>
   1cd3c:	b	1cd40 <__assert_fail@plt+0xb4cc>
   1cd40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd44:	ldr	r1, [fp, #8]
   1cd48:	movw	r2, #127	; 0x7f
   1cd4c:	sdiv	r1, r2, r1
   1cd50:	cmp	r0, r1
   1cd54:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1cd58:	b	1cef8 <__assert_fail@plt+0xb684>
   1cd5c:	b	1cd60 <__assert_fail@plt+0xb4ec>
   1cd60:	ldr	r0, [pc, #4084]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1cd64:	ldr	r1, [fp, #8]
   1cd68:	cmp	r1, r0
   1cd6c:	blt	1cd84 <__assert_fail@plt+0xb510>
   1cd70:	b	1cd90 <__assert_fail@plt+0xb51c>
   1cd74:	ldr	r0, [fp, #8]
   1cd78:	movw	r1, #0
   1cd7c:	cmp	r1, r0
   1cd80:	bge	1cd90 <__assert_fail@plt+0xb51c>
   1cd84:	movw	r0, #0
   1cd88:	str	r0, [fp, #-36]	; 0xffffffdc
   1cd8c:	b	1cda8 <__assert_fail@plt+0xb534>
   1cd90:	ldr	r0, [fp, #8]
   1cd94:	movw	r1, #0
   1cd98:	sub	r0, r1, r0
   1cd9c:	movw	r1, #127	; 0x7f
   1cda0:	sdiv	r0, r1, r0
   1cda4:	str	r0, [fp, #-36]	; 0xffffffdc
   1cda8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cdac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdb0:	mvn	r2, #0
   1cdb4:	sub	r1, r2, r1
   1cdb8:	cmp	r0, r1
   1cdbc:	ble	1cee0 <__assert_fail@plt+0xb66c>
   1cdc0:	b	1cef8 <__assert_fail@plt+0xb684>
   1cdc4:	b	1cdc8 <__assert_fail@plt+0xb554>
   1cdc8:	b	1ce24 <__assert_fail@plt+0xb5b0>
   1cdcc:	b	1ce24 <__assert_fail@plt+0xb5b0>
   1cdd0:	ldr	r0, [fp, #8]
   1cdd4:	cmn	r0, #1
   1cdd8:	bne	1ce24 <__assert_fail@plt+0xb5b0>
   1cddc:	b	1cde0 <__assert_fail@plt+0xb56c>
   1cde0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cde4:	mvn	r1, #127	; 0x7f
   1cde8:	add	r0, r0, r1
   1cdec:	movw	r1, #0
   1cdf0:	cmp	r1, r0
   1cdf4:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1cdf8:	b	1cef8 <__assert_fail@plt+0xb684>
   1cdfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce00:	movw	r1, #0
   1ce04:	cmp	r1, r0
   1ce08:	bge	1cef8 <__assert_fail@plt+0xb684>
   1ce0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce10:	sub	r0, r0, #1
   1ce14:	movw	r1, #127	; 0x7f
   1ce18:	cmp	r1, r0
   1ce1c:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1ce20:	b	1cef8 <__assert_fail@plt+0xb684>
   1ce24:	ldr	r0, [fp, #8]
   1ce28:	mvn	r1, #127	; 0x7f
   1ce2c:	sdiv	r0, r1, r0
   1ce30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce34:	cmp	r0, r1
   1ce38:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1ce3c:	b	1cef8 <__assert_fail@plt+0xb684>
   1ce40:	ldr	r0, [fp, #8]
   1ce44:	cmp	r0, #0
   1ce48:	bne	1ce50 <__assert_fail@plt+0xb5dc>
   1ce4c:	b	1cef8 <__assert_fail@plt+0xb684>
   1ce50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce54:	cmp	r0, #0
   1ce58:	bge	1cec8 <__assert_fail@plt+0xb654>
   1ce5c:	b	1ce60 <__assert_fail@plt+0xb5ec>
   1ce60:	b	1ceac <__assert_fail@plt+0xb638>
   1ce64:	b	1ceac <__assert_fail@plt+0xb638>
   1ce68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce6c:	cmn	r0, #1
   1ce70:	bne	1ceac <__assert_fail@plt+0xb638>
   1ce74:	b	1ce78 <__assert_fail@plt+0xb604>
   1ce78:	ldr	r0, [fp, #8]
   1ce7c:	mvn	r1, #127	; 0x7f
   1ce80:	add	r0, r0, r1
   1ce84:	movw	r1, #0
   1ce88:	cmp	r1, r0
   1ce8c:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1ce90:	b	1cef8 <__assert_fail@plt+0xb684>
   1ce94:	ldr	r0, [fp, #8]
   1ce98:	sub	r0, r0, #1
   1ce9c:	movw	r1, #127	; 0x7f
   1cea0:	cmp	r1, r0
   1cea4:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1cea8:	b	1cef8 <__assert_fail@plt+0xb684>
   1ceac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceb0:	mvn	r1, #127	; 0x7f
   1ceb4:	sdiv	r0, r1, r0
   1ceb8:	ldr	r1, [fp, #8]
   1cebc:	cmp	r0, r1
   1cec0:	blt	1cee0 <__assert_fail@plt+0xb66c>
   1cec4:	b	1cef8 <__assert_fail@plt+0xb684>
   1cec8:	ldr	r0, [fp, #8]
   1cecc:	movw	r1, #127	; 0x7f
   1ced0:	sdiv	r0, r1, r0
   1ced4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ced8:	cmp	r0, r1
   1cedc:	bge	1cef8 <__assert_fail@plt+0xb684>
   1cee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cee4:	ldr	r1, [fp, #8]
   1cee8:	mul	r0, r0, r1
   1ceec:	sxtb	r0, r0
   1cef0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cef4:	b	1e0bc <__assert_fail@plt+0xc848>
   1cef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cefc:	ldr	r1, [fp, #8]
   1cf00:	mul	r0, r0, r1
   1cf04:	sxtb	r0, r0
   1cf08:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf0c:	b	1e0c8 <__assert_fail@plt+0xc854>
   1cf10:	ldr	r0, [fp, #8]
   1cf14:	cmp	r0, #0
   1cf18:	bge	1d028 <__assert_fail@plt+0xb7b4>
   1cf1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf20:	cmp	r0, #0
   1cf24:	bge	1cfb0 <__assert_fail@plt+0xb73c>
   1cf28:	b	1cf2c <__assert_fail@plt+0xb6b8>
   1cf2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf30:	ldr	r1, [fp, #8]
   1cf34:	movw	r2, #255	; 0xff
   1cf38:	sdiv	r1, r2, r1
   1cf3c:	cmp	r0, r1
   1cf40:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1cf44:	b	1d0dc <__assert_fail@plt+0xb868>
   1cf48:	b	1cf4c <__assert_fail@plt+0xb6d8>
   1cf4c:	ldr	r0, [pc, #3592]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1cf50:	ldr	r1, [fp, #8]
   1cf54:	cmp	r1, r0
   1cf58:	blt	1cf70 <__assert_fail@plt+0xb6fc>
   1cf5c:	b	1cf7c <__assert_fail@plt+0xb708>
   1cf60:	ldr	r0, [fp, #8]
   1cf64:	movw	r1, #0
   1cf68:	cmp	r1, r0
   1cf6c:	bge	1cf7c <__assert_fail@plt+0xb708>
   1cf70:	movw	r0, #0
   1cf74:	str	r0, [fp, #-40]	; 0xffffffd8
   1cf78:	b	1cf94 <__assert_fail@plt+0xb720>
   1cf7c:	ldr	r0, [fp, #8]
   1cf80:	movw	r1, #0
   1cf84:	sub	r0, r1, r0
   1cf88:	movw	r1, #255	; 0xff
   1cf8c:	sdiv	r0, r1, r0
   1cf90:	str	r0, [fp, #-40]	; 0xffffffd8
   1cf94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cf98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf9c:	mvn	r2, #0
   1cfa0:	sub	r1, r2, r1
   1cfa4:	cmp	r0, r1
   1cfa8:	ble	1d0c4 <__assert_fail@plt+0xb850>
   1cfac:	b	1d0dc <__assert_fail@plt+0xb868>
   1cfb0:	b	1cfb4 <__assert_fail@plt+0xb740>
   1cfb4:	b	1d00c <__assert_fail@plt+0xb798>
   1cfb8:	b	1d00c <__assert_fail@plt+0xb798>
   1cfbc:	ldr	r0, [fp, #8]
   1cfc0:	cmn	r0, #1
   1cfc4:	bne	1d00c <__assert_fail@plt+0xb798>
   1cfc8:	b	1cfcc <__assert_fail@plt+0xb758>
   1cfcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfd0:	add	r0, r0, #0
   1cfd4:	movw	r1, #0
   1cfd8:	cmp	r1, r0
   1cfdc:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1cfe0:	b	1d0dc <__assert_fail@plt+0xb868>
   1cfe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfe8:	movw	r1, #0
   1cfec:	cmp	r1, r0
   1cff0:	bge	1d0dc <__assert_fail@plt+0xb868>
   1cff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cff8:	sub	r0, r0, #1
   1cffc:	mvn	r1, #0
   1d000:	cmp	r1, r0
   1d004:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1d008:	b	1d0dc <__assert_fail@plt+0xb868>
   1d00c:	ldr	r0, [fp, #8]
   1d010:	movw	r1, #0
   1d014:	sdiv	r0, r1, r0
   1d018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d01c:	cmp	r0, r1
   1d020:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1d024:	b	1d0dc <__assert_fail@plt+0xb868>
   1d028:	ldr	r0, [fp, #8]
   1d02c:	cmp	r0, #0
   1d030:	bne	1d038 <__assert_fail@plt+0xb7c4>
   1d034:	b	1d0dc <__assert_fail@plt+0xb868>
   1d038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d03c:	cmp	r0, #0
   1d040:	bge	1d0ac <__assert_fail@plt+0xb838>
   1d044:	b	1d048 <__assert_fail@plt+0xb7d4>
   1d048:	b	1d090 <__assert_fail@plt+0xb81c>
   1d04c:	b	1d090 <__assert_fail@plt+0xb81c>
   1d050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d054:	cmn	r0, #1
   1d058:	bne	1d090 <__assert_fail@plt+0xb81c>
   1d05c:	b	1d060 <__assert_fail@plt+0xb7ec>
   1d060:	ldr	r0, [fp, #8]
   1d064:	add	r0, r0, #0
   1d068:	movw	r1, #0
   1d06c:	cmp	r1, r0
   1d070:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1d074:	b	1d0dc <__assert_fail@plt+0xb868>
   1d078:	ldr	r0, [fp, #8]
   1d07c:	sub	r0, r0, #1
   1d080:	mvn	r1, #0
   1d084:	cmp	r1, r0
   1d088:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1d08c:	b	1d0dc <__assert_fail@plt+0xb868>
   1d090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d094:	movw	r1, #0
   1d098:	sdiv	r0, r1, r0
   1d09c:	ldr	r1, [fp, #8]
   1d0a0:	cmp	r0, r1
   1d0a4:	blt	1d0c4 <__assert_fail@plt+0xb850>
   1d0a8:	b	1d0dc <__assert_fail@plt+0xb868>
   1d0ac:	ldr	r0, [fp, #8]
   1d0b0:	movw	r1, #255	; 0xff
   1d0b4:	sdiv	r0, r1, r0
   1d0b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0bc:	cmp	r0, r1
   1d0c0:	bge	1d0dc <__assert_fail@plt+0xb868>
   1d0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0c8:	ldr	r1, [fp, #8]
   1d0cc:	mul	r0, r0, r1
   1d0d0:	and	r0, r0, #255	; 0xff
   1d0d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0d8:	b	1e0bc <__assert_fail@plt+0xc848>
   1d0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e0:	ldr	r1, [fp, #8]
   1d0e4:	mul	r0, r0, r1
   1d0e8:	and	r0, r0, #255	; 0xff
   1d0ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0f0:	b	1e0c8 <__assert_fail@plt+0xc854>
   1d0f4:	b	1d4cc <__assert_fail@plt+0xbc58>
   1d0f8:	b	1d0fc <__assert_fail@plt+0xb888>
   1d0fc:	ldr	r0, [fp, #8]
   1d100:	cmp	r0, #0
   1d104:	bge	1d218 <__assert_fail@plt+0xb9a4>
   1d108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d10c:	cmp	r0, #0
   1d110:	bge	1d19c <__assert_fail@plt+0xb928>
   1d114:	b	1d118 <__assert_fail@plt+0xb8a4>
   1d118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d11c:	ldr	r1, [fp, #8]
   1d120:	movw	r2, #32767	; 0x7fff
   1d124:	sdiv	r1, r2, r1
   1d128:	cmp	r0, r1
   1d12c:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d130:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d134:	b	1d138 <__assert_fail@plt+0xb8c4>
   1d138:	ldr	r0, [pc, #3100]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1d13c:	ldr	r1, [fp, #8]
   1d140:	cmp	r1, r0
   1d144:	blt	1d15c <__assert_fail@plt+0xb8e8>
   1d148:	b	1d168 <__assert_fail@plt+0xb8f4>
   1d14c:	ldr	r0, [fp, #8]
   1d150:	movw	r1, #0
   1d154:	cmp	r1, r0
   1d158:	bge	1d168 <__assert_fail@plt+0xb8f4>
   1d15c:	movw	r0, #0
   1d160:	str	r0, [fp, #-44]	; 0xffffffd4
   1d164:	b	1d180 <__assert_fail@plt+0xb90c>
   1d168:	ldr	r0, [fp, #8]
   1d16c:	movw	r1, #0
   1d170:	sub	r0, r1, r0
   1d174:	movw	r1, #32767	; 0x7fff
   1d178:	sdiv	r0, r1, r0
   1d17c:	str	r0, [fp, #-44]	; 0xffffffd4
   1d180:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d188:	mvn	r2, #0
   1d18c:	sub	r1, r2, r1
   1d190:	cmp	r0, r1
   1d194:	ble	1d2b8 <__assert_fail@plt+0xba44>
   1d198:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d19c:	b	1d1a0 <__assert_fail@plt+0xb92c>
   1d1a0:	b	1d1fc <__assert_fail@plt+0xb988>
   1d1a4:	b	1d1fc <__assert_fail@plt+0xb988>
   1d1a8:	ldr	r0, [fp, #8]
   1d1ac:	cmn	r0, #1
   1d1b0:	bne	1d1fc <__assert_fail@plt+0xb988>
   1d1b4:	b	1d1b8 <__assert_fail@plt+0xb944>
   1d1b8:	ldr	r0, [pc, #4068]	; 1e1a4 <__assert_fail@plt+0xc930>
   1d1bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1c0:	add	r0, r1, r0
   1d1c4:	movw	r1, #0
   1d1c8:	cmp	r1, r0
   1d1cc:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d1d0:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1d8:	movw	r1, #0
   1d1dc:	cmp	r1, r0
   1d1e0:	bge	1d2d0 <__assert_fail@plt+0xba5c>
   1d1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1e8:	sub	r0, r0, #1
   1d1ec:	movw	r1, #32767	; 0x7fff
   1d1f0:	cmp	r1, r0
   1d1f4:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d1f8:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d1fc:	ldr	r0, [pc, #4000]	; 1e1a4 <__assert_fail@plt+0xc930>
   1d200:	ldr	r1, [fp, #8]
   1d204:	sdiv	r0, r0, r1
   1d208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d20c:	cmp	r0, r1
   1d210:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d214:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d218:	ldr	r0, [fp, #8]
   1d21c:	cmp	r0, #0
   1d220:	bne	1d228 <__assert_fail@plt+0xb9b4>
   1d224:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d22c:	cmp	r0, #0
   1d230:	bge	1d2a0 <__assert_fail@plt+0xba2c>
   1d234:	b	1d238 <__assert_fail@plt+0xb9c4>
   1d238:	b	1d284 <__assert_fail@plt+0xba10>
   1d23c:	b	1d284 <__assert_fail@plt+0xba10>
   1d240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d244:	cmn	r0, #1
   1d248:	bne	1d284 <__assert_fail@plt+0xba10>
   1d24c:	b	1d250 <__assert_fail@plt+0xb9dc>
   1d250:	ldr	r0, [pc, #3916]	; 1e1a4 <__assert_fail@plt+0xc930>
   1d254:	ldr	r1, [fp, #8]
   1d258:	add	r0, r1, r0
   1d25c:	movw	r1, #0
   1d260:	cmp	r1, r0
   1d264:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d268:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d26c:	ldr	r0, [fp, #8]
   1d270:	sub	r0, r0, #1
   1d274:	movw	r1, #32767	; 0x7fff
   1d278:	cmp	r1, r0
   1d27c:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d280:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d284:	ldr	r0, [pc, #3864]	; 1e1a4 <__assert_fail@plt+0xc930>
   1d288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d28c:	sdiv	r0, r0, r1
   1d290:	ldr	r1, [fp, #8]
   1d294:	cmp	r0, r1
   1d298:	blt	1d2b8 <__assert_fail@plt+0xba44>
   1d29c:	b	1d2d0 <__assert_fail@plt+0xba5c>
   1d2a0:	ldr	r0, [fp, #8]
   1d2a4:	movw	r1, #32767	; 0x7fff
   1d2a8:	sdiv	r0, r1, r0
   1d2ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2b0:	cmp	r0, r1
   1d2b4:	bge	1d2d0 <__assert_fail@plt+0xba5c>
   1d2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2bc:	ldr	r1, [fp, #8]
   1d2c0:	mul	r0, r0, r1
   1d2c4:	sxth	r0, r0
   1d2c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2cc:	b	1e0bc <__assert_fail@plt+0xc848>
   1d2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2d4:	ldr	r1, [fp, #8]
   1d2d8:	mul	r0, r0, r1
   1d2dc:	sxth	r0, r0
   1d2e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2e4:	b	1e0c8 <__assert_fail@plt+0xc854>
   1d2e8:	ldr	r0, [fp, #8]
   1d2ec:	cmp	r0, #0
   1d2f0:	bge	1d400 <__assert_fail@plt+0xbb8c>
   1d2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2f8:	cmp	r0, #0
   1d2fc:	bge	1d388 <__assert_fail@plt+0xbb14>
   1d300:	b	1d304 <__assert_fail@plt+0xba90>
   1d304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d308:	ldr	r1, [fp, #8]
   1d30c:	movw	r2, #65535	; 0xffff
   1d310:	sdiv	r1, r2, r1
   1d314:	cmp	r0, r1
   1d318:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d31c:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d320:	b	1d324 <__assert_fail@plt+0xbab0>
   1d324:	ldr	r0, [pc, #2608]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1d328:	ldr	r1, [fp, #8]
   1d32c:	cmp	r1, r0
   1d330:	blt	1d348 <__assert_fail@plt+0xbad4>
   1d334:	b	1d354 <__assert_fail@plt+0xbae0>
   1d338:	ldr	r0, [fp, #8]
   1d33c:	movw	r1, #0
   1d340:	cmp	r1, r0
   1d344:	bge	1d354 <__assert_fail@plt+0xbae0>
   1d348:	movw	r0, #0
   1d34c:	str	r0, [fp, #-48]	; 0xffffffd0
   1d350:	b	1d36c <__assert_fail@plt+0xbaf8>
   1d354:	ldr	r0, [fp, #8]
   1d358:	movw	r1, #0
   1d35c:	sub	r0, r1, r0
   1d360:	movw	r1, #65535	; 0xffff
   1d364:	sdiv	r0, r1, r0
   1d368:	str	r0, [fp, #-48]	; 0xffffffd0
   1d36c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d370:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d374:	mvn	r2, #0
   1d378:	sub	r1, r2, r1
   1d37c:	cmp	r0, r1
   1d380:	ble	1d49c <__assert_fail@plt+0xbc28>
   1d384:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d388:	b	1d38c <__assert_fail@plt+0xbb18>
   1d38c:	b	1d3e4 <__assert_fail@plt+0xbb70>
   1d390:	b	1d3e4 <__assert_fail@plt+0xbb70>
   1d394:	ldr	r0, [fp, #8]
   1d398:	cmn	r0, #1
   1d39c:	bne	1d3e4 <__assert_fail@plt+0xbb70>
   1d3a0:	b	1d3a4 <__assert_fail@plt+0xbb30>
   1d3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3a8:	add	r0, r0, #0
   1d3ac:	movw	r1, #0
   1d3b0:	cmp	r1, r0
   1d3b4:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d3b8:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3c0:	movw	r1, #0
   1d3c4:	cmp	r1, r0
   1d3c8:	bge	1d4b4 <__assert_fail@plt+0xbc40>
   1d3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3d0:	sub	r0, r0, #1
   1d3d4:	mvn	r1, #0
   1d3d8:	cmp	r1, r0
   1d3dc:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d3e0:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d3e4:	ldr	r0, [fp, #8]
   1d3e8:	movw	r1, #0
   1d3ec:	sdiv	r0, r1, r0
   1d3f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3f4:	cmp	r0, r1
   1d3f8:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d3fc:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d400:	ldr	r0, [fp, #8]
   1d404:	cmp	r0, #0
   1d408:	bne	1d410 <__assert_fail@plt+0xbb9c>
   1d40c:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d414:	cmp	r0, #0
   1d418:	bge	1d484 <__assert_fail@plt+0xbc10>
   1d41c:	b	1d420 <__assert_fail@plt+0xbbac>
   1d420:	b	1d468 <__assert_fail@plt+0xbbf4>
   1d424:	b	1d468 <__assert_fail@plt+0xbbf4>
   1d428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d42c:	cmn	r0, #1
   1d430:	bne	1d468 <__assert_fail@plt+0xbbf4>
   1d434:	b	1d438 <__assert_fail@plt+0xbbc4>
   1d438:	ldr	r0, [fp, #8]
   1d43c:	add	r0, r0, #0
   1d440:	movw	r1, #0
   1d444:	cmp	r1, r0
   1d448:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d44c:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d450:	ldr	r0, [fp, #8]
   1d454:	sub	r0, r0, #1
   1d458:	mvn	r1, #0
   1d45c:	cmp	r1, r0
   1d460:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d464:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d46c:	movw	r1, #0
   1d470:	sdiv	r0, r1, r0
   1d474:	ldr	r1, [fp, #8]
   1d478:	cmp	r0, r1
   1d47c:	blt	1d49c <__assert_fail@plt+0xbc28>
   1d480:	b	1d4b4 <__assert_fail@plt+0xbc40>
   1d484:	ldr	r0, [fp, #8]
   1d488:	movw	r1, #65535	; 0xffff
   1d48c:	sdiv	r0, r1, r0
   1d490:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d494:	cmp	r0, r1
   1d498:	bge	1d4b4 <__assert_fail@plt+0xbc40>
   1d49c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4a0:	ldr	r1, [fp, #8]
   1d4a4:	mul	r0, r0, r1
   1d4a8:	uxth	r0, r0
   1d4ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1d4b0:	b	1e0bc <__assert_fail@plt+0xc848>
   1d4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4b8:	ldr	r1, [fp, #8]
   1d4bc:	mul	r0, r0, r1
   1d4c0:	uxth	r0, r0
   1d4c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d4c8:	b	1e0c8 <__assert_fail@plt+0xc854>
   1d4cc:	b	1d4d0 <__assert_fail@plt+0xbc5c>
   1d4d0:	b	1d4d4 <__assert_fail@plt+0xbc60>
   1d4d4:	ldr	r0, [fp, #8]
   1d4d8:	cmp	r0, #0
   1d4dc:	bge	1d5e0 <__assert_fail@plt+0xbd6c>
   1d4e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4e4:	cmp	r0, #0
   1d4e8:	bge	1d574 <__assert_fail@plt+0xbd00>
   1d4ec:	b	1d4f0 <__assert_fail@plt+0xbc7c>
   1d4f0:	ldr	r0, [pc, #1984]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d4f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4f8:	ldr	r2, [fp, #8]
   1d4fc:	sdiv	r0, r0, r2
   1d500:	cmp	r1, r0
   1d504:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d508:	b	1d684 <__assert_fail@plt+0xbe10>
   1d50c:	b	1d510 <__assert_fail@plt+0xbc9c>
   1d510:	ldr	r0, [pc, #2116]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1d514:	ldr	r1, [fp, #8]
   1d518:	cmp	r1, r0
   1d51c:	blt	1d534 <__assert_fail@plt+0xbcc0>
   1d520:	b	1d540 <__assert_fail@plt+0xbccc>
   1d524:	ldr	r0, [fp, #8]
   1d528:	movw	r1, #0
   1d52c:	cmp	r1, r0
   1d530:	bge	1d540 <__assert_fail@plt+0xbccc>
   1d534:	movw	r0, #0
   1d538:	str	r0, [fp, #-52]	; 0xffffffcc
   1d53c:	b	1d558 <__assert_fail@plt+0xbce4>
   1d540:	ldr	r0, [pc, #1904]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d544:	ldr	r1, [fp, #8]
   1d548:	movw	r2, #0
   1d54c:	sub	r1, r2, r1
   1d550:	sdiv	r0, r0, r1
   1d554:	str	r0, [fp, #-52]	; 0xffffffcc
   1d558:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d55c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d560:	mvn	r2, #0
   1d564:	sub	r1, r2, r1
   1d568:	cmp	r0, r1
   1d56c:	ble	1d670 <__assert_fail@plt+0xbdfc>
   1d570:	b	1d684 <__assert_fail@plt+0xbe10>
   1d574:	ldr	r0, [fp, #8]
   1d578:	cmn	r0, #1
   1d57c:	bne	1d5c4 <__assert_fail@plt+0xbd50>
   1d580:	b	1d584 <__assert_fail@plt+0xbd10>
   1d584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d588:	add	r0, r0, #-2147483648	; 0x80000000
   1d58c:	movw	r1, #0
   1d590:	cmp	r1, r0
   1d594:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d598:	b	1d684 <__assert_fail@plt+0xbe10>
   1d59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5a0:	movw	r1, #0
   1d5a4:	cmp	r1, r0
   1d5a8:	bge	1d684 <__assert_fail@plt+0xbe10>
   1d5ac:	ldr	r0, [pc, #1796]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d5b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5b4:	sub	r1, r1, #1
   1d5b8:	cmp	r0, r1
   1d5bc:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d5c0:	b	1d684 <__assert_fail@plt+0xbe10>
   1d5c4:	ldr	r0, [pc, #4080]	; 1e5bc <__assert_fail@plt+0xcd48>
   1d5c8:	ldr	r1, [fp, #8]
   1d5cc:	sdiv	r0, r0, r1
   1d5d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5d4:	cmp	r0, r1
   1d5d8:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d5dc:	b	1d684 <__assert_fail@plt+0xbe10>
   1d5e0:	ldr	r0, [fp, #8]
   1d5e4:	cmp	r0, #0
   1d5e8:	bne	1d5f0 <__assert_fail@plt+0xbd7c>
   1d5ec:	b	1d684 <__assert_fail@plt+0xbe10>
   1d5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5f4:	cmp	r0, #0
   1d5f8:	bge	1d658 <__assert_fail@plt+0xbde4>
   1d5fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d600:	cmn	r0, #1
   1d604:	bne	1d63c <__assert_fail@plt+0xbdc8>
   1d608:	b	1d60c <__assert_fail@plt+0xbd98>
   1d60c:	ldr	r0, [fp, #8]
   1d610:	add	r0, r0, #-2147483648	; 0x80000000
   1d614:	movw	r1, #0
   1d618:	cmp	r1, r0
   1d61c:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d620:	b	1d684 <__assert_fail@plt+0xbe10>
   1d624:	ldr	r0, [pc, #1676]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d628:	ldr	r1, [fp, #8]
   1d62c:	sub	r1, r1, #1
   1d630:	cmp	r0, r1
   1d634:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d638:	b	1d684 <__assert_fail@plt+0xbe10>
   1d63c:	ldr	r0, [pc, #3960]	; 1e5bc <__assert_fail@plt+0xcd48>
   1d640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d644:	sdiv	r0, r0, r1
   1d648:	ldr	r1, [fp, #8]
   1d64c:	cmp	r0, r1
   1d650:	blt	1d670 <__assert_fail@plt+0xbdfc>
   1d654:	b	1d684 <__assert_fail@plt+0xbe10>
   1d658:	ldr	r0, [pc, #1624]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d65c:	ldr	r1, [fp, #8]
   1d660:	sdiv	r0, r0, r1
   1d664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d668:	cmp	r0, r1
   1d66c:	bge	1d684 <__assert_fail@plt+0xbe10>
   1d670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d674:	ldr	r1, [fp, #8]
   1d678:	mul	r0, r0, r1
   1d67c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d680:	b	1e0bc <__assert_fail@plt+0xc848>
   1d684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d688:	ldr	r1, [fp, #8]
   1d68c:	mul	r0, r0, r1
   1d690:	str	r0, [fp, #-28]	; 0xffffffe4
   1d694:	b	1e0c8 <__assert_fail@plt+0xc854>
   1d698:	ldr	r0, [fp, #8]
   1d69c:	cmp	r0, #0
   1d6a0:	bge	1d7b0 <__assert_fail@plt+0xbf3c>
   1d6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6a8:	cmp	r0, #0
   1d6ac:	bge	1d738 <__assert_fail@plt+0xbec4>
   1d6b0:	b	1d6d0 <__assert_fail@plt+0xbe5c>
   1d6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6b8:	ldr	r1, [fp, #8]
   1d6bc:	mvn	r2, #0
   1d6c0:	udiv	r1, r2, r1
   1d6c4:	cmp	r0, r1
   1d6c8:	bcc	1d84c <__assert_fail@plt+0xbfd8>
   1d6cc:	b	1d860 <__assert_fail@plt+0xbfec>
   1d6d0:	b	1d6d4 <__assert_fail@plt+0xbe60>
   1d6d4:	ldr	r0, [pc, #1664]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1d6d8:	ldr	r1, [fp, #8]
   1d6dc:	cmp	r1, r0
   1d6e0:	blt	1d6f8 <__assert_fail@plt+0xbe84>
   1d6e4:	b	1d704 <__assert_fail@plt+0xbe90>
   1d6e8:	ldr	r0, [fp, #8]
   1d6ec:	movw	r1, #0
   1d6f0:	cmp	r1, r0
   1d6f4:	bge	1d704 <__assert_fail@plt+0xbe90>
   1d6f8:	movw	r0, #1
   1d6fc:	str	r0, [fp, #-56]	; 0xffffffc8
   1d700:	b	1d71c <__assert_fail@plt+0xbea8>
   1d704:	ldr	r0, [fp, #8]
   1d708:	movw	r1, #0
   1d70c:	sub	r0, r1, r0
   1d710:	mvn	r1, #0
   1d714:	udiv	r0, r1, r0
   1d718:	str	r0, [fp, #-56]	; 0xffffffc8
   1d71c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d724:	mvn	r2, #0
   1d728:	sub	r1, r2, r1
   1d72c:	cmp	r0, r1
   1d730:	bls	1d84c <__assert_fail@plt+0xbfd8>
   1d734:	b	1d860 <__assert_fail@plt+0xbfec>
   1d738:	b	1d73c <__assert_fail@plt+0xbec8>
   1d73c:	b	1d794 <__assert_fail@plt+0xbf20>
   1d740:	b	1d794 <__assert_fail@plt+0xbf20>
   1d744:	ldr	r0, [fp, #8]
   1d748:	cmn	r0, #1
   1d74c:	bne	1d794 <__assert_fail@plt+0xbf20>
   1d750:	b	1d754 <__assert_fail@plt+0xbee0>
   1d754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d758:	add	r0, r0, #0
   1d75c:	movw	r1, #0
   1d760:	cmp	r1, r0
   1d764:	blt	1d84c <__assert_fail@plt+0xbfd8>
   1d768:	b	1d860 <__assert_fail@plt+0xbfec>
   1d76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d770:	movw	r1, #0
   1d774:	cmp	r1, r0
   1d778:	bge	1d860 <__assert_fail@plt+0xbfec>
   1d77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d780:	sub	r0, r0, #1
   1d784:	mvn	r1, #0
   1d788:	cmp	r1, r0
   1d78c:	blt	1d84c <__assert_fail@plt+0xbfd8>
   1d790:	b	1d860 <__assert_fail@plt+0xbfec>
   1d794:	ldr	r0, [fp, #8]
   1d798:	movw	r1, #0
   1d79c:	sdiv	r0, r1, r0
   1d7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d7a4:	cmp	r0, r1
   1d7a8:	blt	1d84c <__assert_fail@plt+0xbfd8>
   1d7ac:	b	1d860 <__assert_fail@plt+0xbfec>
   1d7b0:	ldr	r0, [fp, #8]
   1d7b4:	cmp	r0, #0
   1d7b8:	bne	1d7c0 <__assert_fail@plt+0xbf4c>
   1d7bc:	b	1d860 <__assert_fail@plt+0xbfec>
   1d7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7c4:	cmp	r0, #0
   1d7c8:	bge	1d834 <__assert_fail@plt+0xbfc0>
   1d7cc:	b	1d7d0 <__assert_fail@plt+0xbf5c>
   1d7d0:	b	1d818 <__assert_fail@plt+0xbfa4>
   1d7d4:	b	1d818 <__assert_fail@plt+0xbfa4>
   1d7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7dc:	cmn	r0, #1
   1d7e0:	bne	1d818 <__assert_fail@plt+0xbfa4>
   1d7e4:	b	1d7e8 <__assert_fail@plt+0xbf74>
   1d7e8:	ldr	r0, [fp, #8]
   1d7ec:	add	r0, r0, #0
   1d7f0:	movw	r1, #0
   1d7f4:	cmp	r1, r0
   1d7f8:	blt	1d84c <__assert_fail@plt+0xbfd8>
   1d7fc:	b	1d860 <__assert_fail@plt+0xbfec>
   1d800:	ldr	r0, [fp, #8]
   1d804:	sub	r0, r0, #1
   1d808:	mvn	r1, #0
   1d80c:	cmp	r1, r0
   1d810:	blt	1d84c <__assert_fail@plt+0xbfd8>
   1d814:	b	1d860 <__assert_fail@plt+0xbfec>
   1d818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d81c:	movw	r1, #0
   1d820:	sdiv	r0, r1, r0
   1d824:	ldr	r1, [fp, #8]
   1d828:	cmp	r0, r1
   1d82c:	blt	1d84c <__assert_fail@plt+0xbfd8>
   1d830:	b	1d860 <__assert_fail@plt+0xbfec>
   1d834:	ldr	r0, [fp, #8]
   1d838:	mvn	r1, #0
   1d83c:	udiv	r0, r1, r0
   1d840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d844:	cmp	r0, r1
   1d848:	bcs	1d860 <__assert_fail@plt+0xbfec>
   1d84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d850:	ldr	r1, [fp, #8]
   1d854:	mul	r0, r0, r1
   1d858:	str	r0, [fp, #-28]	; 0xffffffe4
   1d85c:	b	1e0bc <__assert_fail@plt+0xc848>
   1d860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d864:	ldr	r1, [fp, #8]
   1d868:	mul	r0, r0, r1
   1d86c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d870:	b	1e0c8 <__assert_fail@plt+0xc854>
   1d874:	b	1d878 <__assert_fail@plt+0xc004>
   1d878:	b	1d87c <__assert_fail@plt+0xc008>
   1d87c:	ldr	r0, [fp, #8]
   1d880:	cmp	r0, #0
   1d884:	bge	1d988 <__assert_fail@plt+0xc114>
   1d888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d88c:	cmp	r0, #0
   1d890:	bge	1d91c <__assert_fail@plt+0xc0a8>
   1d894:	b	1d898 <__assert_fail@plt+0xc024>
   1d898:	ldr	r0, [pc, #1048]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d89c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8a0:	ldr	r2, [fp, #8]
   1d8a4:	sdiv	r0, r0, r2
   1d8a8:	cmp	r1, r0
   1d8ac:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d8b0:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d8b4:	b	1d8b8 <__assert_fail@plt+0xc044>
   1d8b8:	ldr	r0, [pc, #1180]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1d8bc:	ldr	r1, [fp, #8]
   1d8c0:	cmp	r1, r0
   1d8c4:	blt	1d8dc <__assert_fail@plt+0xc068>
   1d8c8:	b	1d8e8 <__assert_fail@plt+0xc074>
   1d8cc:	ldr	r0, [fp, #8]
   1d8d0:	movw	r1, #0
   1d8d4:	cmp	r1, r0
   1d8d8:	bge	1d8e8 <__assert_fail@plt+0xc074>
   1d8dc:	movw	r0, #0
   1d8e0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d8e4:	b	1d900 <__assert_fail@plt+0xc08c>
   1d8e8:	ldr	r0, [pc, #968]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d8ec:	ldr	r1, [fp, #8]
   1d8f0:	movw	r2, #0
   1d8f4:	sub	r1, r2, r1
   1d8f8:	sdiv	r0, r0, r1
   1d8fc:	str	r0, [fp, #-60]	; 0xffffffc4
   1d900:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d908:	mvn	r2, #0
   1d90c:	sub	r1, r2, r1
   1d910:	cmp	r0, r1
   1d914:	ble	1da18 <__assert_fail@plt+0xc1a4>
   1d918:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d91c:	ldr	r0, [fp, #8]
   1d920:	cmn	r0, #1
   1d924:	bne	1d96c <__assert_fail@plt+0xc0f8>
   1d928:	b	1d92c <__assert_fail@plt+0xc0b8>
   1d92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d930:	add	r0, r0, #-2147483648	; 0x80000000
   1d934:	movw	r1, #0
   1d938:	cmp	r1, r0
   1d93c:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d940:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d948:	movw	r1, #0
   1d94c:	cmp	r1, r0
   1d950:	bge	1da2c <__assert_fail@plt+0xc1b8>
   1d954:	ldr	r0, [pc, #860]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d95c:	sub	r1, r1, #1
   1d960:	cmp	r0, r1
   1d964:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d968:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d96c:	ldr	r0, [pc, #3144]	; 1e5bc <__assert_fail@plt+0xcd48>
   1d970:	ldr	r1, [fp, #8]
   1d974:	sdiv	r0, r0, r1
   1d978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d97c:	cmp	r0, r1
   1d980:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d984:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d988:	ldr	r0, [fp, #8]
   1d98c:	cmp	r0, #0
   1d990:	bne	1d998 <__assert_fail@plt+0xc124>
   1d994:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d99c:	cmp	r0, #0
   1d9a0:	bge	1da00 <__assert_fail@plt+0xc18c>
   1d9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9a8:	cmn	r0, #1
   1d9ac:	bne	1d9e4 <__assert_fail@plt+0xc170>
   1d9b0:	b	1d9b4 <__assert_fail@plt+0xc140>
   1d9b4:	ldr	r0, [fp, #8]
   1d9b8:	add	r0, r0, #-2147483648	; 0x80000000
   1d9bc:	movw	r1, #0
   1d9c0:	cmp	r1, r0
   1d9c4:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d9c8:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d9cc:	ldr	r0, [pc, #740]	; 1dcb8 <__assert_fail@plt+0xc444>
   1d9d0:	ldr	r1, [fp, #8]
   1d9d4:	sub	r1, r1, #1
   1d9d8:	cmp	r0, r1
   1d9dc:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d9e0:	b	1da2c <__assert_fail@plt+0xc1b8>
   1d9e4:	ldr	r0, [pc, #3024]	; 1e5bc <__assert_fail@plt+0xcd48>
   1d9e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d9ec:	sdiv	r0, r0, r1
   1d9f0:	ldr	r1, [fp, #8]
   1d9f4:	cmp	r0, r1
   1d9f8:	blt	1da18 <__assert_fail@plt+0xc1a4>
   1d9fc:	b	1da2c <__assert_fail@plt+0xc1b8>
   1da00:	ldr	r0, [pc, #688]	; 1dcb8 <__assert_fail@plt+0xc444>
   1da04:	ldr	r1, [fp, #8]
   1da08:	sdiv	r0, r0, r1
   1da0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da10:	cmp	r0, r1
   1da14:	bge	1da2c <__assert_fail@plt+0xc1b8>
   1da18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da1c:	ldr	r1, [fp, #8]
   1da20:	mul	r0, r0, r1
   1da24:	str	r0, [fp, #-28]	; 0xffffffe4
   1da28:	b	1e0bc <__assert_fail@plt+0xc848>
   1da2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da30:	ldr	r1, [fp, #8]
   1da34:	mul	r0, r0, r1
   1da38:	str	r0, [fp, #-28]	; 0xffffffe4
   1da3c:	b	1e0c8 <__assert_fail@plt+0xc854>
   1da40:	ldr	r0, [fp, #8]
   1da44:	cmp	r0, #0
   1da48:	bge	1db58 <__assert_fail@plt+0xc2e4>
   1da4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da50:	cmp	r0, #0
   1da54:	bge	1dae0 <__assert_fail@plt+0xc26c>
   1da58:	b	1da78 <__assert_fail@plt+0xc204>
   1da5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da60:	ldr	r1, [fp, #8]
   1da64:	mvn	r2, #0
   1da68:	udiv	r1, r2, r1
   1da6c:	cmp	r0, r1
   1da70:	bcc	1dbf4 <__assert_fail@plt+0xc380>
   1da74:	b	1dc08 <__assert_fail@plt+0xc394>
   1da78:	b	1da7c <__assert_fail@plt+0xc208>
   1da7c:	ldr	r0, [pc, #728]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1da80:	ldr	r1, [fp, #8]
   1da84:	cmp	r1, r0
   1da88:	blt	1daa0 <__assert_fail@plt+0xc22c>
   1da8c:	b	1daac <__assert_fail@plt+0xc238>
   1da90:	ldr	r0, [fp, #8]
   1da94:	movw	r1, #0
   1da98:	cmp	r1, r0
   1da9c:	bge	1daac <__assert_fail@plt+0xc238>
   1daa0:	movw	r0, #1
   1daa4:	str	r0, [fp, #-64]	; 0xffffffc0
   1daa8:	b	1dac4 <__assert_fail@plt+0xc250>
   1daac:	ldr	r0, [fp, #8]
   1dab0:	movw	r1, #0
   1dab4:	sub	r0, r1, r0
   1dab8:	mvn	r1, #0
   1dabc:	udiv	r0, r1, r0
   1dac0:	str	r0, [fp, #-64]	; 0xffffffc0
   1dac4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1dac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dacc:	mvn	r2, #0
   1dad0:	sub	r1, r2, r1
   1dad4:	cmp	r0, r1
   1dad8:	bls	1dbf4 <__assert_fail@plt+0xc380>
   1dadc:	b	1dc08 <__assert_fail@plt+0xc394>
   1dae0:	b	1dae4 <__assert_fail@plt+0xc270>
   1dae4:	b	1db3c <__assert_fail@plt+0xc2c8>
   1dae8:	b	1db3c <__assert_fail@plt+0xc2c8>
   1daec:	ldr	r0, [fp, #8]
   1daf0:	cmn	r0, #1
   1daf4:	bne	1db3c <__assert_fail@plt+0xc2c8>
   1daf8:	b	1dafc <__assert_fail@plt+0xc288>
   1dafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db00:	add	r0, r0, #0
   1db04:	movw	r1, #0
   1db08:	cmp	r1, r0
   1db0c:	blt	1dbf4 <__assert_fail@plt+0xc380>
   1db10:	b	1dc08 <__assert_fail@plt+0xc394>
   1db14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db18:	movw	r1, #0
   1db1c:	cmp	r1, r0
   1db20:	bge	1dc08 <__assert_fail@plt+0xc394>
   1db24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db28:	sub	r0, r0, #1
   1db2c:	mvn	r1, #0
   1db30:	cmp	r1, r0
   1db34:	blt	1dbf4 <__assert_fail@plt+0xc380>
   1db38:	b	1dc08 <__assert_fail@plt+0xc394>
   1db3c:	ldr	r0, [fp, #8]
   1db40:	movw	r1, #0
   1db44:	sdiv	r0, r1, r0
   1db48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db4c:	cmp	r0, r1
   1db50:	blt	1dbf4 <__assert_fail@plt+0xc380>
   1db54:	b	1dc08 <__assert_fail@plt+0xc394>
   1db58:	ldr	r0, [fp, #8]
   1db5c:	cmp	r0, #0
   1db60:	bne	1db68 <__assert_fail@plt+0xc2f4>
   1db64:	b	1dc08 <__assert_fail@plt+0xc394>
   1db68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db6c:	cmp	r0, #0
   1db70:	bge	1dbdc <__assert_fail@plt+0xc368>
   1db74:	b	1db78 <__assert_fail@plt+0xc304>
   1db78:	b	1dbc0 <__assert_fail@plt+0xc34c>
   1db7c:	b	1dbc0 <__assert_fail@plt+0xc34c>
   1db80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db84:	cmn	r0, #1
   1db88:	bne	1dbc0 <__assert_fail@plt+0xc34c>
   1db8c:	b	1db90 <__assert_fail@plt+0xc31c>
   1db90:	ldr	r0, [fp, #8]
   1db94:	add	r0, r0, #0
   1db98:	movw	r1, #0
   1db9c:	cmp	r1, r0
   1dba0:	blt	1dbf4 <__assert_fail@plt+0xc380>
   1dba4:	b	1dc08 <__assert_fail@plt+0xc394>
   1dba8:	ldr	r0, [fp, #8]
   1dbac:	sub	r0, r0, #1
   1dbb0:	mvn	r1, #0
   1dbb4:	cmp	r1, r0
   1dbb8:	blt	1dbf4 <__assert_fail@plt+0xc380>
   1dbbc:	b	1dc08 <__assert_fail@plt+0xc394>
   1dbc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbc4:	movw	r1, #0
   1dbc8:	sdiv	r0, r1, r0
   1dbcc:	ldr	r1, [fp, #8]
   1dbd0:	cmp	r0, r1
   1dbd4:	blt	1dbf4 <__assert_fail@plt+0xc380>
   1dbd8:	b	1dc08 <__assert_fail@plt+0xc394>
   1dbdc:	ldr	r0, [fp, #8]
   1dbe0:	mvn	r1, #0
   1dbe4:	udiv	r0, r1, r0
   1dbe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbec:	cmp	r0, r1
   1dbf0:	bcs	1dc08 <__assert_fail@plt+0xc394>
   1dbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbf8:	ldr	r1, [fp, #8]
   1dbfc:	mul	r0, r0, r1
   1dc00:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc04:	b	1e0bc <__assert_fail@plt+0xc848>
   1dc08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc0c:	ldr	r1, [fp, #8]
   1dc10:	mul	r0, r0, r1
   1dc14:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc18:	b	1e0c8 <__assert_fail@plt+0xc854>
   1dc1c:	b	1dc20 <__assert_fail@plt+0xc3ac>
   1dc20:	ldr	r0, [fp, #8]
   1dc24:	cmp	r0, #0
   1dc28:	bge	1dd98 <__assert_fail@plt+0xc524>
   1dc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc30:	cmp	r0, #0
   1dc34:	bge	1dd10 <__assert_fail@plt+0xc49c>
   1dc38:	b	1dc3c <__assert_fail@plt+0xc3c8>
   1dc3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc40:	ldr	r1, [fp, #8]
   1dc44:	asr	r3, r1, #31
   1dc48:	mvn	r2, #0
   1dc4c:	mvn	ip, #-2147483648	; 0x80000000
   1dc50:	str	r0, [fp, #-68]	; 0xffffffbc
   1dc54:	mov	r0, r2
   1dc58:	str	r1, [fp, #-72]	; 0xffffffb8
   1dc5c:	mov	r1, ip
   1dc60:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1dc64:	bl	22ec8 <__assert_fail@plt+0x11654>
   1dc68:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1dc6c:	subs	r0, r2, r0
   1dc70:	rscs	r1, r1, r2, asr #31
   1dc74:	blt	1de60 <__assert_fail@plt+0xc5ec>
   1dc78:	b	1de74 <__assert_fail@plt+0xc600>
   1dc7c:	b	1dc80 <__assert_fail@plt+0xc40c>
   1dc80:	ldr	r0, [pc, #212]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1dc84:	ldr	r1, [fp, #8]
   1dc88:	cmp	r1, r0
   1dc8c:	blt	1dca4 <__assert_fail@plt+0xc430>
   1dc90:	b	1dcbc <__assert_fail@plt+0xc448>
   1dc94:	ldr	r0, [fp, #8]
   1dc98:	movw	r1, #0
   1dc9c:	cmp	r1, r0
   1dca0:	bge	1dcbc <__assert_fail@plt+0xc448>
   1dca4:	mov	r0, #0
   1dca8:	mvn	r1, #0
   1dcac:	str	r1, [fp, #-76]	; 0xffffffb4
   1dcb0:	str	r0, [fp, #-80]	; 0xffffffb0
   1dcb4:	b	1dcf0 <__assert_fail@plt+0xc47c>
   1dcb8:	svcvc	0x00ffffff
   1dcbc:	ldr	r0, [fp, #8]
   1dcc0:	rsb	r0, r0, #0
   1dcc4:	asr	r3, r0, #31
   1dcc8:	mvn	r1, #0
   1dccc:	mvn	r2, #-2147483648	; 0x80000000
   1dcd0:	str	r0, [fp, #-84]	; 0xffffffac
   1dcd4:	mov	r0, r1
   1dcd8:	mov	r1, r2
   1dcdc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1dce0:	bl	22ec8 <__assert_fail@plt+0x11654>
   1dce4:	str	r0, [fp, #-76]	; 0xffffffb4
   1dce8:	str	r1, [fp, #-80]	; 0xffffffb0
   1dcec:	b	1dcf0 <__assert_fail@plt+0xc47c>
   1dcf0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1dcf4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1dcf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dcfc:	mvn	r2, r2
   1dd00:	subs	r1, r2, r1
   1dd04:	rscs	r0, r0, r2, asr #31
   1dd08:	bge	1de60 <__assert_fail@plt+0xc5ec>
   1dd0c:	b	1de74 <__assert_fail@plt+0xc600>
   1dd10:	ldr	r0, [fp, #8]
   1dd14:	cmn	r0, #1
   1dd18:	bne	1dd60 <__assert_fail@plt+0xc4ec>
   1dd1c:	b	1dd20 <__assert_fail@plt+0xc4ac>
   1dd20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd24:	mov	r1, #-2147483648	; 0x80000000
   1dd28:	add	r1, r1, r0, asr #31
   1dd2c:	rsbs	r0, r0, #0
   1dd30:	rscs	r1, r1, #0
   1dd34:	blt	1de60 <__assert_fail@plt+0xc5ec>
   1dd38:	b	1de74 <__assert_fail@plt+0xc600>
   1dd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd40:	movw	r1, #0
   1dd44:	cmp	r1, r0
   1dd48:	bge	1de74 <__assert_fail@plt+0xc600>
   1dd4c:	mov	r0, #0
   1dd50:	cmp	r0, #0
   1dd54:	bne	1de60 <__assert_fail@plt+0xc5ec>
   1dd58:	b	1de74 <__assert_fail@plt+0xc600>
   1dd5c:	andhi	r0, r0, r1
   1dd60:	ldr	r0, [fp, #8]
   1dd64:	asr	r3, r0, #31
   1dd68:	mov	r1, #0
   1dd6c:	mov	r2, #-2147483648	; 0x80000000
   1dd70:	str	r0, [fp, #-88]	; 0xffffffa8
   1dd74:	mov	r0, r1
   1dd78:	mov	r1, r2
   1dd7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1dd80:	bl	22ec8 <__assert_fail@plt+0x11654>
   1dd84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dd88:	subs	r0, r0, r2
   1dd8c:	sbcs	r1, r1, r2, asr #31
   1dd90:	blt	1de60 <__assert_fail@plt+0xc5ec>
   1dd94:	b	1de74 <__assert_fail@plt+0xc600>
   1dd98:	ldr	r0, [fp, #8]
   1dd9c:	cmp	r0, #0
   1dda0:	bne	1dda8 <__assert_fail@plt+0xc534>
   1dda4:	b	1de74 <__assert_fail@plt+0xc600>
   1dda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddac:	cmp	r0, #0
   1ddb0:	bge	1de28 <__assert_fail@plt+0xc5b4>
   1ddb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddb8:	cmn	r0, #1
   1ddbc:	bne	1ddf0 <__assert_fail@plt+0xc57c>
   1ddc0:	b	1ddc4 <__assert_fail@plt+0xc550>
   1ddc4:	ldr	r0, [fp, #8]
   1ddc8:	mov	r1, #-2147483648	; 0x80000000
   1ddcc:	add	r1, r1, r0, asr #31
   1ddd0:	rsbs	r0, r0, #0
   1ddd4:	rscs	r1, r1, #0
   1ddd8:	blt	1de60 <__assert_fail@plt+0xc5ec>
   1dddc:	b	1de74 <__assert_fail@plt+0xc600>
   1dde0:	mov	r0, #0
   1dde4:	cmp	r0, #0
   1dde8:	bne	1de60 <__assert_fail@plt+0xc5ec>
   1ddec:	b	1de74 <__assert_fail@plt+0xc600>
   1ddf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddf4:	asr	r3, r0, #31
   1ddf8:	mov	r1, #0
   1ddfc:	mov	r2, #-2147483648	; 0x80000000
   1de00:	str	r0, [fp, #-92]	; 0xffffffa4
   1de04:	mov	r0, r1
   1de08:	mov	r1, r2
   1de0c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1de10:	bl	22ec8 <__assert_fail@plt+0x11654>
   1de14:	ldr	r2, [fp, #8]
   1de18:	subs	r0, r0, r2
   1de1c:	sbcs	r1, r1, r2, asr #31
   1de20:	blt	1de60 <__assert_fail@plt+0xc5ec>
   1de24:	b	1de74 <__assert_fail@plt+0xc600>
   1de28:	ldr	r0, [fp, #8]
   1de2c:	asr	r3, r0, #31
   1de30:	mvn	r1, #0
   1de34:	mvn	r2, #-2147483648	; 0x80000000
   1de38:	str	r0, [fp, #-96]	; 0xffffffa0
   1de3c:	mov	r0, r1
   1de40:	mov	r1, r2
   1de44:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1de48:	bl	22ec8 <__assert_fail@plt+0x11654>
   1de4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1de50:	subs	r0, r0, r2
   1de54:	sbcs	r1, r1, r2, asr #31
   1de58:	bge	1de74 <__assert_fail@plt+0xc600>
   1de5c:	b	1de60 <__assert_fail@plt+0xc5ec>
   1de60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de64:	ldr	r1, [fp, #8]
   1de68:	mul	r0, r0, r1
   1de6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1de70:	b	1e0bc <__assert_fail@plt+0xc848>
   1de74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de78:	ldr	r1, [fp, #8]
   1de7c:	mul	r0, r0, r1
   1de80:	str	r0, [fp, #-28]	; 0xffffffe4
   1de84:	b	1e0c8 <__assert_fail@plt+0xc854>
   1de88:	ldr	r0, [fp, #8]
   1de8c:	cmp	r0, #0
   1de90:	bge	1dfe0 <__assert_fail@plt+0xc76c>
   1de94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de98:	cmp	r0, #0
   1de9c:	bge	1df68 <__assert_fail@plt+0xc6f4>
   1dea0:	b	1dee0 <__assert_fail@plt+0xc66c>
   1dea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dea8:	ldr	r1, [fp, #8]
   1deac:	asr	r3, r1, #31
   1deb0:	mvn	r2, #0
   1deb4:	str	r0, [fp, #-100]	; 0xffffff9c
   1deb8:	mov	r0, r2
   1debc:	str	r1, [fp, #-104]	; 0xffffff98
   1dec0:	mov	r1, r2
   1dec4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1dec8:	bl	22f9c <__assert_fail@plt+0x11728>
   1decc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1ded0:	subs	r0, r2, r0
   1ded4:	rscs	r1, r1, r2, asr #31
   1ded8:	bcc	1e094 <__assert_fail@plt+0xc820>
   1dedc:	b	1e0a8 <__assert_fail@plt+0xc834>
   1dee0:	b	1dee4 <__assert_fail@plt+0xc670>
   1dee4:	ldr	r0, [pc, #-400]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1dee8:	ldr	r1, [fp, #8]
   1deec:	cmp	r1, r0
   1def0:	blt	1df08 <__assert_fail@plt+0xc694>
   1def4:	b	1df1c <__assert_fail@plt+0xc6a8>
   1def8:	ldr	r0, [fp, #8]
   1defc:	movw	r1, #0
   1df00:	cmp	r1, r0
   1df04:	bge	1df1c <__assert_fail@plt+0xc6a8>
   1df08:	mov	r0, #1
   1df0c:	mvn	r1, #0
   1df10:	str	r1, [sp, #108]	; 0x6c
   1df14:	str	r0, [sp, #104]	; 0x68
   1df18:	b	1df48 <__assert_fail@plt+0xc6d4>
   1df1c:	ldr	r0, [fp, #8]
   1df20:	rsb	r0, r0, #0
   1df24:	asr	r3, r0, #31
   1df28:	mvn	r1, #0
   1df2c:	str	r0, [sp, #100]	; 0x64
   1df30:	mov	r0, r1
   1df34:	ldr	r2, [sp, #100]	; 0x64
   1df38:	bl	22f9c <__assert_fail@plt+0x11728>
   1df3c:	str	r0, [sp, #108]	; 0x6c
   1df40:	str	r1, [sp, #104]	; 0x68
   1df44:	b	1df48 <__assert_fail@plt+0xc6d4>
   1df48:	ldr	r0, [sp, #104]	; 0x68
   1df4c:	ldr	r1, [sp, #108]	; 0x6c
   1df50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df54:	mvn	r2, r2
   1df58:	subs	r1, r2, r1
   1df5c:	rscs	r0, r0, r2, asr #31
   1df60:	bcs	1e094 <__assert_fail@plt+0xc820>
   1df64:	b	1e0a8 <__assert_fail@plt+0xc834>
   1df68:	b	1df6c <__assert_fail@plt+0xc6f8>
   1df6c:	b	1dfc4 <__assert_fail@plt+0xc750>
   1df70:	b	1dfc4 <__assert_fail@plt+0xc750>
   1df74:	ldr	r0, [fp, #8]
   1df78:	cmn	r0, #1
   1df7c:	bne	1dfc4 <__assert_fail@plt+0xc750>
   1df80:	b	1df84 <__assert_fail@plt+0xc710>
   1df84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df88:	add	r0, r0, #0
   1df8c:	movw	r1, #0
   1df90:	cmp	r1, r0
   1df94:	blt	1e094 <__assert_fail@plt+0xc820>
   1df98:	b	1e0a8 <__assert_fail@plt+0xc834>
   1df9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfa0:	movw	r1, #0
   1dfa4:	cmp	r1, r0
   1dfa8:	bge	1e0a8 <__assert_fail@plt+0xc834>
   1dfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfb0:	sub	r0, r0, #1
   1dfb4:	mvn	r1, #0
   1dfb8:	cmp	r1, r0
   1dfbc:	blt	1e094 <__assert_fail@plt+0xc820>
   1dfc0:	b	1e0a8 <__assert_fail@plt+0xc834>
   1dfc4:	ldr	r0, [fp, #8]
   1dfc8:	movw	r1, #0
   1dfcc:	sdiv	r0, r1, r0
   1dfd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dfd4:	cmp	r0, r1
   1dfd8:	blt	1e094 <__assert_fail@plt+0xc820>
   1dfdc:	b	1e0a8 <__assert_fail@plt+0xc834>
   1dfe0:	ldr	r0, [fp, #8]
   1dfe4:	cmp	r0, #0
   1dfe8:	bne	1dff0 <__assert_fail@plt+0xc77c>
   1dfec:	b	1e0a8 <__assert_fail@plt+0xc834>
   1dff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dff4:	cmp	r0, #0
   1dff8:	bge	1e064 <__assert_fail@plt+0xc7f0>
   1dffc:	b	1e000 <__assert_fail@plt+0xc78c>
   1e000:	b	1e048 <__assert_fail@plt+0xc7d4>
   1e004:	b	1e048 <__assert_fail@plt+0xc7d4>
   1e008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e00c:	cmn	r0, #1
   1e010:	bne	1e048 <__assert_fail@plt+0xc7d4>
   1e014:	b	1e018 <__assert_fail@plt+0xc7a4>
   1e018:	ldr	r0, [fp, #8]
   1e01c:	add	r0, r0, #0
   1e020:	movw	r1, #0
   1e024:	cmp	r1, r0
   1e028:	blt	1e094 <__assert_fail@plt+0xc820>
   1e02c:	b	1e0a8 <__assert_fail@plt+0xc834>
   1e030:	ldr	r0, [fp, #8]
   1e034:	sub	r0, r0, #1
   1e038:	mvn	r1, #0
   1e03c:	cmp	r1, r0
   1e040:	blt	1e094 <__assert_fail@plt+0xc820>
   1e044:	b	1e0a8 <__assert_fail@plt+0xc834>
   1e048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e04c:	movw	r1, #0
   1e050:	sdiv	r0, r1, r0
   1e054:	ldr	r1, [fp, #8]
   1e058:	cmp	r0, r1
   1e05c:	blt	1e094 <__assert_fail@plt+0xc820>
   1e060:	b	1e0a8 <__assert_fail@plt+0xc834>
   1e064:	ldr	r0, [fp, #8]
   1e068:	asr	r3, r0, #31
   1e06c:	mvn	r1, #0
   1e070:	str	r0, [sp, #96]	; 0x60
   1e074:	mov	r0, r1
   1e078:	ldr	r2, [sp, #96]	; 0x60
   1e07c:	bl	22f9c <__assert_fail@plt+0x11728>
   1e080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e084:	subs	r0, r0, r2
   1e088:	sbcs	r1, r1, r2, asr #31
   1e08c:	bcs	1e0a8 <__assert_fail@plt+0xc834>
   1e090:	b	1e094 <__assert_fail@plt+0xc820>
   1e094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e098:	ldr	r1, [fp, #8]
   1e09c:	mul	r0, r0, r1
   1e0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0a4:	b	1e0bc <__assert_fail@plt+0xc848>
   1e0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0ac:	ldr	r1, [fp, #8]
   1e0b0:	mul	r0, r0, r1
   1e0b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0b8:	b	1e0c8 <__assert_fail@plt+0xc854>
   1e0bc:	ldr	r0, [pc, #-1036]	; 1dcb8 <__assert_fail@plt+0xc444>
   1e0c0:	str	r0, [sp, #92]	; 0x5c
   1e0c4:	b	1e0e8 <__assert_fail@plt+0xc874>
   1e0c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e0cc:	cmp	r0, #64	; 0x40
   1e0d0:	movw	r0, #0
   1e0d4:	movlt	r0, #1
   1e0d8:	tst	r0, #1
   1e0dc:	movw	r0, #64	; 0x40
   1e0e0:	moveq	r0, #0
   1e0e4:	str	r0, [sp, #92]	; 0x5c
   1e0e8:	ldr	r0, [sp, #92]	; 0x5c
   1e0ec:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0f4:	cmp	r0, #0
   1e0f8:	beq	1e128 <__assert_fail@plt+0xc8b4>
   1e0fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e100:	ldr	r1, [fp, #8]
   1e104:	sdiv	r0, r0, r1
   1e108:	str	r0, [fp, #-24]	; 0xffffffe8
   1e10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e110:	mov	r1, r0
   1e114:	ldr	r2, [fp, #8]
   1e118:	sdiv	r3, r0, r2
   1e11c:	mls	r0, r3, r2, r0
   1e120:	sub	r0, r1, r0
   1e124:	str	r0, [fp, #-28]	; 0xffffffe4
   1e128:	ldr	r0, [fp, #-4]
   1e12c:	movw	r1, #0
   1e130:	cmp	r0, r1
   1e134:	bne	1e144 <__assert_fail@plt+0xc8d0>
   1e138:	ldr	r0, [fp, #-8]
   1e13c:	movw	r1, #0
   1e140:	str	r1, [r0]
   1e144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e148:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e14c:	sub	r0, r0, r1
   1e150:	ldr	r1, [fp, #-12]
   1e154:	cmp	r0, r1
   1e158:	bge	1f544 <__assert_fail@plt+0xdcd0>
   1e15c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e160:	ldr	r1, [fp, #-12]
   1e164:	add	r1, r0, r1
   1e168:	mov	r2, #1
   1e16c:	cmp	r1, r0
   1e170:	movwvc	r2, #0
   1e174:	str	r1, [fp, #-24]	; 0xffffffe8
   1e178:	tst	r2, #1
   1e17c:	bne	1f540 <__assert_fail@plt+0xdccc>
   1e180:	ldr	r0, [fp, #-16]
   1e184:	movw	r1, #0
   1e188:	cmp	r1, r0
   1e18c:	bgt	1e1a0 <__assert_fail@plt+0xc92c>
   1e190:	ldr	r0, [fp, #-16]
   1e194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e198:	cmp	r0, r1
   1e19c:	blt	1f540 <__assert_fail@plt+0xdccc>
   1e1a0:	b	1e57c <__assert_fail@plt+0xcd08>
   1e1a4:			; <UNDEFINED> instruction: 0xffff8000
   1e1a8:	b	1e1ac <__assert_fail@plt+0xc938>
   1e1ac:	ldr	r0, [fp, #8]
   1e1b0:	cmp	r0, #0
   1e1b4:	bge	1e2c8 <__assert_fail@plt+0xca54>
   1e1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1bc:	cmp	r0, #0
   1e1c0:	bge	1e24c <__assert_fail@plt+0xc9d8>
   1e1c4:	b	1e1c8 <__assert_fail@plt+0xc954>
   1e1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1cc:	ldr	r1, [fp, #8]
   1e1d0:	movw	r2, #127	; 0x7f
   1e1d4:	sdiv	r1, r2, r1
   1e1d8:	cmp	r0, r1
   1e1dc:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e1e0:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e1e4:	b	1e1e8 <__assert_fail@plt+0xc974>
   1e1e8:	ldr	r0, [pc, #-1172]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1e1ec:	ldr	r1, [fp, #8]
   1e1f0:	cmp	r1, r0
   1e1f4:	blt	1e20c <__assert_fail@plt+0xc998>
   1e1f8:	b	1e218 <__assert_fail@plt+0xc9a4>
   1e1fc:	ldr	r0, [fp, #8]
   1e200:	movw	r1, #0
   1e204:	cmp	r1, r0
   1e208:	bge	1e218 <__assert_fail@plt+0xc9a4>
   1e20c:	movw	r0, #0
   1e210:	str	r0, [sp, #88]	; 0x58
   1e214:	b	1e230 <__assert_fail@plt+0xc9bc>
   1e218:	ldr	r0, [fp, #8]
   1e21c:	movw	r1, #0
   1e220:	sub	r0, r1, r0
   1e224:	movw	r1, #127	; 0x7f
   1e228:	sdiv	r0, r1, r0
   1e22c:	str	r0, [sp, #88]	; 0x58
   1e230:	ldr	r0, [sp, #88]	; 0x58
   1e234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e238:	mvn	r2, #0
   1e23c:	sub	r1, r2, r1
   1e240:	cmp	r0, r1
   1e244:	ble	1e368 <__assert_fail@plt+0xcaf4>
   1e248:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e24c:	b	1e250 <__assert_fail@plt+0xc9dc>
   1e250:	b	1e2ac <__assert_fail@plt+0xca38>
   1e254:	b	1e2ac <__assert_fail@plt+0xca38>
   1e258:	ldr	r0, [fp, #8]
   1e25c:	cmn	r0, #1
   1e260:	bne	1e2ac <__assert_fail@plt+0xca38>
   1e264:	b	1e268 <__assert_fail@plt+0xc9f4>
   1e268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e26c:	mvn	r1, #127	; 0x7f
   1e270:	add	r0, r0, r1
   1e274:	movw	r1, #0
   1e278:	cmp	r1, r0
   1e27c:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e280:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e288:	movw	r1, #0
   1e28c:	cmp	r1, r0
   1e290:	bge	1e380 <__assert_fail@plt+0xcb0c>
   1e294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e298:	sub	r0, r0, #1
   1e29c:	movw	r1, #127	; 0x7f
   1e2a0:	cmp	r1, r0
   1e2a4:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e2a8:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e2ac:	ldr	r0, [fp, #8]
   1e2b0:	mvn	r1, #127	; 0x7f
   1e2b4:	sdiv	r0, r1, r0
   1e2b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2bc:	cmp	r0, r1
   1e2c0:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e2c4:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e2c8:	ldr	r0, [fp, #8]
   1e2cc:	cmp	r0, #0
   1e2d0:	bne	1e2d8 <__assert_fail@plt+0xca64>
   1e2d4:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e2d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2dc:	cmp	r0, #0
   1e2e0:	bge	1e350 <__assert_fail@plt+0xcadc>
   1e2e4:	b	1e2e8 <__assert_fail@plt+0xca74>
   1e2e8:	b	1e334 <__assert_fail@plt+0xcac0>
   1e2ec:	b	1e334 <__assert_fail@plt+0xcac0>
   1e2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2f4:	cmn	r0, #1
   1e2f8:	bne	1e334 <__assert_fail@plt+0xcac0>
   1e2fc:	b	1e300 <__assert_fail@plt+0xca8c>
   1e300:	ldr	r0, [fp, #8]
   1e304:	mvn	r1, #127	; 0x7f
   1e308:	add	r0, r0, r1
   1e30c:	movw	r1, #0
   1e310:	cmp	r1, r0
   1e314:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e318:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e31c:	ldr	r0, [fp, #8]
   1e320:	sub	r0, r0, #1
   1e324:	movw	r1, #127	; 0x7f
   1e328:	cmp	r1, r0
   1e32c:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e330:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e338:	mvn	r1, #127	; 0x7f
   1e33c:	sdiv	r0, r1, r0
   1e340:	ldr	r1, [fp, #8]
   1e344:	cmp	r0, r1
   1e348:	blt	1e368 <__assert_fail@plt+0xcaf4>
   1e34c:	b	1e380 <__assert_fail@plt+0xcb0c>
   1e350:	ldr	r0, [fp, #8]
   1e354:	movw	r1, #127	; 0x7f
   1e358:	sdiv	r0, r1, r0
   1e35c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e360:	cmp	r0, r1
   1e364:	bge	1e380 <__assert_fail@plt+0xcb0c>
   1e368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e36c:	ldr	r1, [fp, #8]
   1e370:	mul	r0, r0, r1
   1e374:	sxtb	r0, r0
   1e378:	str	r0, [fp, #-28]	; 0xffffffe4
   1e37c:	b	1f540 <__assert_fail@plt+0xdccc>
   1e380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e384:	ldr	r1, [fp, #8]
   1e388:	mul	r0, r0, r1
   1e38c:	sxtb	r0, r0
   1e390:	str	r0, [fp, #-28]	; 0xffffffe4
   1e394:	b	1f544 <__assert_fail@plt+0xdcd0>
   1e398:	ldr	r0, [fp, #8]
   1e39c:	cmp	r0, #0
   1e3a0:	bge	1e4b0 <__assert_fail@plt+0xcc3c>
   1e3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3a8:	cmp	r0, #0
   1e3ac:	bge	1e438 <__assert_fail@plt+0xcbc4>
   1e3b0:	b	1e3b4 <__assert_fail@plt+0xcb40>
   1e3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3b8:	ldr	r1, [fp, #8]
   1e3bc:	movw	r2, #255	; 0xff
   1e3c0:	sdiv	r1, r2, r1
   1e3c4:	cmp	r0, r1
   1e3c8:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e3cc:	b	1e564 <__assert_fail@plt+0xccf0>
   1e3d0:	b	1e3d4 <__assert_fail@plt+0xcb60>
   1e3d4:	ldr	r0, [pc, #-1664]	; 1dd5c <__assert_fail@plt+0xc4e8>
   1e3d8:	ldr	r1, [fp, #8]
   1e3dc:	cmp	r1, r0
   1e3e0:	blt	1e3f8 <__assert_fail@plt+0xcb84>
   1e3e4:	b	1e404 <__assert_fail@plt+0xcb90>
   1e3e8:	ldr	r0, [fp, #8]
   1e3ec:	movw	r1, #0
   1e3f0:	cmp	r1, r0
   1e3f4:	bge	1e404 <__assert_fail@plt+0xcb90>
   1e3f8:	movw	r0, #0
   1e3fc:	str	r0, [sp, #84]	; 0x54
   1e400:	b	1e41c <__assert_fail@plt+0xcba8>
   1e404:	ldr	r0, [fp, #8]
   1e408:	movw	r1, #0
   1e40c:	sub	r0, r1, r0
   1e410:	movw	r1, #255	; 0xff
   1e414:	sdiv	r0, r1, r0
   1e418:	str	r0, [sp, #84]	; 0x54
   1e41c:	ldr	r0, [sp, #84]	; 0x54
   1e420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e424:	mvn	r2, #0
   1e428:	sub	r1, r2, r1
   1e42c:	cmp	r0, r1
   1e430:	ble	1e54c <__assert_fail@plt+0xccd8>
   1e434:	b	1e564 <__assert_fail@plt+0xccf0>
   1e438:	b	1e43c <__assert_fail@plt+0xcbc8>
   1e43c:	b	1e494 <__assert_fail@plt+0xcc20>
   1e440:	b	1e494 <__assert_fail@plt+0xcc20>
   1e444:	ldr	r0, [fp, #8]
   1e448:	cmn	r0, #1
   1e44c:	bne	1e494 <__assert_fail@plt+0xcc20>
   1e450:	b	1e454 <__assert_fail@plt+0xcbe0>
   1e454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e458:	add	r0, r0, #0
   1e45c:	movw	r1, #0
   1e460:	cmp	r1, r0
   1e464:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e468:	b	1e564 <__assert_fail@plt+0xccf0>
   1e46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e470:	movw	r1, #0
   1e474:	cmp	r1, r0
   1e478:	bge	1e564 <__assert_fail@plt+0xccf0>
   1e47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e480:	sub	r0, r0, #1
   1e484:	mvn	r1, #0
   1e488:	cmp	r1, r0
   1e48c:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e490:	b	1e564 <__assert_fail@plt+0xccf0>
   1e494:	ldr	r0, [fp, #8]
   1e498:	movw	r1, #0
   1e49c:	sdiv	r0, r1, r0
   1e4a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4a4:	cmp	r0, r1
   1e4a8:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e4ac:	b	1e564 <__assert_fail@plt+0xccf0>
   1e4b0:	ldr	r0, [fp, #8]
   1e4b4:	cmp	r0, #0
   1e4b8:	bne	1e4c0 <__assert_fail@plt+0xcc4c>
   1e4bc:	b	1e564 <__assert_fail@plt+0xccf0>
   1e4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4c4:	cmp	r0, #0
   1e4c8:	bge	1e534 <__assert_fail@plt+0xccc0>
   1e4cc:	b	1e4d0 <__assert_fail@plt+0xcc5c>
   1e4d0:	b	1e518 <__assert_fail@plt+0xcca4>
   1e4d4:	b	1e518 <__assert_fail@plt+0xcca4>
   1e4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4dc:	cmn	r0, #1
   1e4e0:	bne	1e518 <__assert_fail@plt+0xcca4>
   1e4e4:	b	1e4e8 <__assert_fail@plt+0xcc74>
   1e4e8:	ldr	r0, [fp, #8]
   1e4ec:	add	r0, r0, #0
   1e4f0:	movw	r1, #0
   1e4f4:	cmp	r1, r0
   1e4f8:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e4fc:	b	1e564 <__assert_fail@plt+0xccf0>
   1e500:	ldr	r0, [fp, #8]
   1e504:	sub	r0, r0, #1
   1e508:	mvn	r1, #0
   1e50c:	cmp	r1, r0
   1e510:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e514:	b	1e564 <__assert_fail@plt+0xccf0>
   1e518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e51c:	movw	r1, #0
   1e520:	sdiv	r0, r1, r0
   1e524:	ldr	r1, [fp, #8]
   1e528:	cmp	r0, r1
   1e52c:	blt	1e54c <__assert_fail@plt+0xccd8>
   1e530:	b	1e564 <__assert_fail@plt+0xccf0>
   1e534:	ldr	r0, [fp, #8]
   1e538:	movw	r1, #255	; 0xff
   1e53c:	sdiv	r0, r1, r0
   1e540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e544:	cmp	r0, r1
   1e548:	bge	1e564 <__assert_fail@plt+0xccf0>
   1e54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e550:	ldr	r1, [fp, #8]
   1e554:	mul	r0, r0, r1
   1e558:	and	r0, r0, #255	; 0xff
   1e55c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e560:	b	1f540 <__assert_fail@plt+0xdccc>
   1e564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e568:	ldr	r1, [fp, #8]
   1e56c:	mul	r0, r0, r1
   1e570:	and	r0, r0, #255	; 0xff
   1e574:	str	r0, [fp, #-28]	; 0xffffffe4
   1e578:	b	1f544 <__assert_fail@plt+0xdcd0>
   1e57c:	b	1e958 <__assert_fail@plt+0xd0e4>
   1e580:	b	1e584 <__assert_fail@plt+0xcd10>
   1e584:	ldr	r0, [fp, #8]
   1e588:	cmp	r0, #0
   1e58c:	bge	1e6a4 <__assert_fail@plt+0xce30>
   1e590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e594:	cmp	r0, #0
   1e598:	bge	1e628 <__assert_fail@plt+0xcdb4>
   1e59c:	b	1e5a0 <__assert_fail@plt+0xcd2c>
   1e5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5a4:	ldr	r1, [fp, #8]
   1e5a8:	movw	r2, #32767	; 0x7fff
   1e5ac:	sdiv	r1, r2, r1
   1e5b0:	cmp	r0, r1
   1e5b4:	blt	1e744 <__assert_fail@plt+0xced0>
   1e5b8:	b	1e75c <__assert_fail@plt+0xcee8>
   1e5bc:	andhi	r0, r0, r0
   1e5c0:	b	1e5c4 <__assert_fail@plt+0xcd50>
   1e5c4:	ldr	r0, [pc, #4004]	; 1f570 <__assert_fail@plt+0xdcfc>
   1e5c8:	ldr	r1, [fp, #8]
   1e5cc:	cmp	r1, r0
   1e5d0:	blt	1e5e8 <__assert_fail@plt+0xcd74>
   1e5d4:	b	1e5f4 <__assert_fail@plt+0xcd80>
   1e5d8:	ldr	r0, [fp, #8]
   1e5dc:	movw	r1, #0
   1e5e0:	cmp	r1, r0
   1e5e4:	bge	1e5f4 <__assert_fail@plt+0xcd80>
   1e5e8:	movw	r0, #0
   1e5ec:	str	r0, [sp, #80]	; 0x50
   1e5f0:	b	1e60c <__assert_fail@plt+0xcd98>
   1e5f4:	ldr	r0, [fp, #8]
   1e5f8:	movw	r1, #0
   1e5fc:	sub	r0, r1, r0
   1e600:	movw	r1, #32767	; 0x7fff
   1e604:	sdiv	r0, r1, r0
   1e608:	str	r0, [sp, #80]	; 0x50
   1e60c:	ldr	r0, [sp, #80]	; 0x50
   1e610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e614:	mvn	r2, #0
   1e618:	sub	r1, r2, r1
   1e61c:	cmp	r0, r1
   1e620:	ble	1e744 <__assert_fail@plt+0xced0>
   1e624:	b	1e75c <__assert_fail@plt+0xcee8>
   1e628:	b	1e62c <__assert_fail@plt+0xcdb8>
   1e62c:	b	1e688 <__assert_fail@plt+0xce14>
   1e630:	b	1e688 <__assert_fail@plt+0xce14>
   1e634:	ldr	r0, [fp, #8]
   1e638:	cmn	r0, #1
   1e63c:	bne	1e688 <__assert_fail@plt+0xce14>
   1e640:	b	1e644 <__assert_fail@plt+0xcdd0>
   1e644:	ldr	r0, [pc, #3884]	; 1f578 <__assert_fail@plt+0xdd04>
   1e648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e64c:	add	r0, r1, r0
   1e650:	movw	r1, #0
   1e654:	cmp	r1, r0
   1e658:	blt	1e744 <__assert_fail@plt+0xced0>
   1e65c:	b	1e75c <__assert_fail@plt+0xcee8>
   1e660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e664:	movw	r1, #0
   1e668:	cmp	r1, r0
   1e66c:	bge	1e75c <__assert_fail@plt+0xcee8>
   1e670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e674:	sub	r0, r0, #1
   1e678:	movw	r1, #32767	; 0x7fff
   1e67c:	cmp	r1, r0
   1e680:	blt	1e744 <__assert_fail@plt+0xced0>
   1e684:	b	1e75c <__assert_fail@plt+0xcee8>
   1e688:	ldr	r0, [pc, #3816]	; 1f578 <__assert_fail@plt+0xdd04>
   1e68c:	ldr	r1, [fp, #8]
   1e690:	sdiv	r0, r0, r1
   1e694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e698:	cmp	r0, r1
   1e69c:	blt	1e744 <__assert_fail@plt+0xced0>
   1e6a0:	b	1e75c <__assert_fail@plt+0xcee8>
   1e6a4:	ldr	r0, [fp, #8]
   1e6a8:	cmp	r0, #0
   1e6ac:	bne	1e6b4 <__assert_fail@plt+0xce40>
   1e6b0:	b	1e75c <__assert_fail@plt+0xcee8>
   1e6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6b8:	cmp	r0, #0
   1e6bc:	bge	1e72c <__assert_fail@plt+0xceb8>
   1e6c0:	b	1e6c4 <__assert_fail@plt+0xce50>
   1e6c4:	b	1e710 <__assert_fail@plt+0xce9c>
   1e6c8:	b	1e710 <__assert_fail@plt+0xce9c>
   1e6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6d0:	cmn	r0, #1
   1e6d4:	bne	1e710 <__assert_fail@plt+0xce9c>
   1e6d8:	b	1e6dc <__assert_fail@plt+0xce68>
   1e6dc:	ldr	r0, [pc, #3732]	; 1f578 <__assert_fail@plt+0xdd04>
   1e6e0:	ldr	r1, [fp, #8]
   1e6e4:	add	r0, r1, r0
   1e6e8:	movw	r1, #0
   1e6ec:	cmp	r1, r0
   1e6f0:	blt	1e744 <__assert_fail@plt+0xced0>
   1e6f4:	b	1e75c <__assert_fail@plt+0xcee8>
   1e6f8:	ldr	r0, [fp, #8]
   1e6fc:	sub	r0, r0, #1
   1e700:	movw	r1, #32767	; 0x7fff
   1e704:	cmp	r1, r0
   1e708:	blt	1e744 <__assert_fail@plt+0xced0>
   1e70c:	b	1e75c <__assert_fail@plt+0xcee8>
   1e710:	ldr	r0, [pc, #3680]	; 1f578 <__assert_fail@plt+0xdd04>
   1e714:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e718:	sdiv	r0, r0, r1
   1e71c:	ldr	r1, [fp, #8]
   1e720:	cmp	r0, r1
   1e724:	blt	1e744 <__assert_fail@plt+0xced0>
   1e728:	b	1e75c <__assert_fail@plt+0xcee8>
   1e72c:	ldr	r0, [fp, #8]
   1e730:	movw	r1, #32767	; 0x7fff
   1e734:	sdiv	r0, r1, r0
   1e738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e73c:	cmp	r0, r1
   1e740:	bge	1e75c <__assert_fail@plt+0xcee8>
   1e744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e748:	ldr	r1, [fp, #8]
   1e74c:	mul	r0, r0, r1
   1e750:	sxth	r0, r0
   1e754:	str	r0, [fp, #-28]	; 0xffffffe4
   1e758:	b	1f540 <__assert_fail@plt+0xdccc>
   1e75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e760:	ldr	r1, [fp, #8]
   1e764:	mul	r0, r0, r1
   1e768:	sxth	r0, r0
   1e76c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e770:	b	1f544 <__assert_fail@plt+0xdcd0>
   1e774:	ldr	r0, [fp, #8]
   1e778:	cmp	r0, #0
   1e77c:	bge	1e88c <__assert_fail@plt+0xd018>
   1e780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e784:	cmp	r0, #0
   1e788:	bge	1e814 <__assert_fail@plt+0xcfa0>
   1e78c:	b	1e790 <__assert_fail@plt+0xcf1c>
   1e790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e794:	ldr	r1, [fp, #8]
   1e798:	movw	r2, #65535	; 0xffff
   1e79c:	sdiv	r1, r2, r1
   1e7a0:	cmp	r0, r1
   1e7a4:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e7a8:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e7ac:	b	1e7b0 <__assert_fail@plt+0xcf3c>
   1e7b0:	ldr	r0, [pc, #3512]	; 1f570 <__assert_fail@plt+0xdcfc>
   1e7b4:	ldr	r1, [fp, #8]
   1e7b8:	cmp	r1, r0
   1e7bc:	blt	1e7d4 <__assert_fail@plt+0xcf60>
   1e7c0:	b	1e7e0 <__assert_fail@plt+0xcf6c>
   1e7c4:	ldr	r0, [fp, #8]
   1e7c8:	movw	r1, #0
   1e7cc:	cmp	r1, r0
   1e7d0:	bge	1e7e0 <__assert_fail@plt+0xcf6c>
   1e7d4:	movw	r0, #0
   1e7d8:	str	r0, [sp, #76]	; 0x4c
   1e7dc:	b	1e7f8 <__assert_fail@plt+0xcf84>
   1e7e0:	ldr	r0, [fp, #8]
   1e7e4:	movw	r1, #0
   1e7e8:	sub	r0, r1, r0
   1e7ec:	movw	r1, #65535	; 0xffff
   1e7f0:	sdiv	r0, r1, r0
   1e7f4:	str	r0, [sp, #76]	; 0x4c
   1e7f8:	ldr	r0, [sp, #76]	; 0x4c
   1e7fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e800:	mvn	r2, #0
   1e804:	sub	r1, r2, r1
   1e808:	cmp	r0, r1
   1e80c:	ble	1e928 <__assert_fail@plt+0xd0b4>
   1e810:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e814:	b	1e818 <__assert_fail@plt+0xcfa4>
   1e818:	b	1e870 <__assert_fail@plt+0xcffc>
   1e81c:	b	1e870 <__assert_fail@plt+0xcffc>
   1e820:	ldr	r0, [fp, #8]
   1e824:	cmn	r0, #1
   1e828:	bne	1e870 <__assert_fail@plt+0xcffc>
   1e82c:	b	1e830 <__assert_fail@plt+0xcfbc>
   1e830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e834:	add	r0, r0, #0
   1e838:	movw	r1, #0
   1e83c:	cmp	r1, r0
   1e840:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e844:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e84c:	movw	r1, #0
   1e850:	cmp	r1, r0
   1e854:	bge	1e940 <__assert_fail@plt+0xd0cc>
   1e858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e85c:	sub	r0, r0, #1
   1e860:	mvn	r1, #0
   1e864:	cmp	r1, r0
   1e868:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e86c:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e870:	ldr	r0, [fp, #8]
   1e874:	movw	r1, #0
   1e878:	sdiv	r0, r1, r0
   1e87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e880:	cmp	r0, r1
   1e884:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e888:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e88c:	ldr	r0, [fp, #8]
   1e890:	cmp	r0, #0
   1e894:	bne	1e89c <__assert_fail@plt+0xd028>
   1e898:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8a0:	cmp	r0, #0
   1e8a4:	bge	1e910 <__assert_fail@plt+0xd09c>
   1e8a8:	b	1e8ac <__assert_fail@plt+0xd038>
   1e8ac:	b	1e8f4 <__assert_fail@plt+0xd080>
   1e8b0:	b	1e8f4 <__assert_fail@plt+0xd080>
   1e8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8b8:	cmn	r0, #1
   1e8bc:	bne	1e8f4 <__assert_fail@plt+0xd080>
   1e8c0:	b	1e8c4 <__assert_fail@plt+0xd050>
   1e8c4:	ldr	r0, [fp, #8]
   1e8c8:	add	r0, r0, #0
   1e8cc:	movw	r1, #0
   1e8d0:	cmp	r1, r0
   1e8d4:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e8d8:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e8dc:	ldr	r0, [fp, #8]
   1e8e0:	sub	r0, r0, #1
   1e8e4:	mvn	r1, #0
   1e8e8:	cmp	r1, r0
   1e8ec:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e8f0:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e8f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8f8:	movw	r1, #0
   1e8fc:	sdiv	r0, r1, r0
   1e900:	ldr	r1, [fp, #8]
   1e904:	cmp	r0, r1
   1e908:	blt	1e928 <__assert_fail@plt+0xd0b4>
   1e90c:	b	1e940 <__assert_fail@plt+0xd0cc>
   1e910:	ldr	r0, [fp, #8]
   1e914:	movw	r1, #65535	; 0xffff
   1e918:	sdiv	r0, r1, r0
   1e91c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e920:	cmp	r0, r1
   1e924:	bge	1e940 <__assert_fail@plt+0xd0cc>
   1e928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e92c:	ldr	r1, [fp, #8]
   1e930:	mul	r0, r0, r1
   1e934:	uxth	r0, r0
   1e938:	str	r0, [fp, #-28]	; 0xffffffe4
   1e93c:	b	1f540 <__assert_fail@plt+0xdccc>
   1e940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e944:	ldr	r1, [fp, #8]
   1e948:	mul	r0, r0, r1
   1e94c:	uxth	r0, r0
   1e950:	str	r0, [fp, #-28]	; 0xffffffe4
   1e954:	b	1f544 <__assert_fail@plt+0xdcd0>
   1e958:	b	1e95c <__assert_fail@plt+0xd0e8>
   1e95c:	b	1e960 <__assert_fail@plt+0xd0ec>
   1e960:	ldr	r0, [fp, #8]
   1e964:	cmp	r0, #0
   1e968:	bge	1ea6c <__assert_fail@plt+0xd1f8>
   1e96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e970:	cmp	r0, #0
   1e974:	bge	1ea00 <__assert_fail@plt+0xd18c>
   1e978:	b	1e97c <__assert_fail@plt+0xd108>
   1e97c:	ldr	r0, [pc, #3048]	; 1f56c <__assert_fail@plt+0xdcf8>
   1e980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e984:	ldr	r2, [fp, #8]
   1e988:	sdiv	r0, r0, r2
   1e98c:	cmp	r1, r0
   1e990:	blt	1eafc <__assert_fail@plt+0xd288>
   1e994:	b	1eb10 <__assert_fail@plt+0xd29c>
   1e998:	b	1e99c <__assert_fail@plt+0xd128>
   1e99c:	ldr	r0, [pc, #3020]	; 1f570 <__assert_fail@plt+0xdcfc>
   1e9a0:	ldr	r1, [fp, #8]
   1e9a4:	cmp	r1, r0
   1e9a8:	blt	1e9c0 <__assert_fail@plt+0xd14c>
   1e9ac:	b	1e9cc <__assert_fail@plt+0xd158>
   1e9b0:	ldr	r0, [fp, #8]
   1e9b4:	movw	r1, #0
   1e9b8:	cmp	r1, r0
   1e9bc:	bge	1e9cc <__assert_fail@plt+0xd158>
   1e9c0:	movw	r0, #0
   1e9c4:	str	r0, [sp, #72]	; 0x48
   1e9c8:	b	1e9e4 <__assert_fail@plt+0xd170>
   1e9cc:	ldr	r0, [pc, #2968]	; 1f56c <__assert_fail@plt+0xdcf8>
   1e9d0:	ldr	r1, [fp, #8]
   1e9d4:	movw	r2, #0
   1e9d8:	sub	r1, r2, r1
   1e9dc:	sdiv	r0, r0, r1
   1e9e0:	str	r0, [sp, #72]	; 0x48
   1e9e4:	ldr	r0, [sp, #72]	; 0x48
   1e9e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9ec:	mvn	r2, #0
   1e9f0:	sub	r1, r2, r1
   1e9f4:	cmp	r0, r1
   1e9f8:	ble	1eafc <__assert_fail@plt+0xd288>
   1e9fc:	b	1eb10 <__assert_fail@plt+0xd29c>
   1ea00:	ldr	r0, [fp, #8]
   1ea04:	cmn	r0, #1
   1ea08:	bne	1ea50 <__assert_fail@plt+0xd1dc>
   1ea0c:	b	1ea10 <__assert_fail@plt+0xd19c>
   1ea10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea14:	add	r0, r0, #-2147483648	; 0x80000000
   1ea18:	movw	r1, #0
   1ea1c:	cmp	r1, r0
   1ea20:	blt	1eafc <__assert_fail@plt+0xd288>
   1ea24:	b	1eb10 <__assert_fail@plt+0xd29c>
   1ea28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea2c:	movw	r1, #0
   1ea30:	cmp	r1, r0
   1ea34:	bge	1eb10 <__assert_fail@plt+0xd29c>
   1ea38:	ldr	r0, [pc, #2860]	; 1f56c <__assert_fail@plt+0xdcf8>
   1ea3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea40:	sub	r1, r1, #1
   1ea44:	cmp	r0, r1
   1ea48:	blt	1eafc <__assert_fail@plt+0xd288>
   1ea4c:	b	1eb10 <__assert_fail@plt+0xd29c>
   1ea50:	ldr	r0, [pc, #2844]	; 1f574 <__assert_fail@plt+0xdd00>
   1ea54:	ldr	r1, [fp, #8]
   1ea58:	sdiv	r0, r0, r1
   1ea5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea60:	cmp	r0, r1
   1ea64:	blt	1eafc <__assert_fail@plt+0xd288>
   1ea68:	b	1eb10 <__assert_fail@plt+0xd29c>
   1ea6c:	ldr	r0, [fp, #8]
   1ea70:	cmp	r0, #0
   1ea74:	bne	1ea7c <__assert_fail@plt+0xd208>
   1ea78:	b	1eb10 <__assert_fail@plt+0xd29c>
   1ea7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea80:	cmp	r0, #0
   1ea84:	bge	1eae4 <__assert_fail@plt+0xd270>
   1ea88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea8c:	cmn	r0, #1
   1ea90:	bne	1eac8 <__assert_fail@plt+0xd254>
   1ea94:	b	1ea98 <__assert_fail@plt+0xd224>
   1ea98:	ldr	r0, [fp, #8]
   1ea9c:	add	r0, r0, #-2147483648	; 0x80000000
   1eaa0:	movw	r1, #0
   1eaa4:	cmp	r1, r0
   1eaa8:	blt	1eafc <__assert_fail@plt+0xd288>
   1eaac:	b	1eb10 <__assert_fail@plt+0xd29c>
   1eab0:	ldr	r0, [pc, #2740]	; 1f56c <__assert_fail@plt+0xdcf8>
   1eab4:	ldr	r1, [fp, #8]
   1eab8:	sub	r1, r1, #1
   1eabc:	cmp	r0, r1
   1eac0:	blt	1eafc <__assert_fail@plt+0xd288>
   1eac4:	b	1eb10 <__assert_fail@plt+0xd29c>
   1eac8:	ldr	r0, [pc, #2724]	; 1f574 <__assert_fail@plt+0xdd00>
   1eacc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ead0:	sdiv	r0, r0, r1
   1ead4:	ldr	r1, [fp, #8]
   1ead8:	cmp	r0, r1
   1eadc:	blt	1eafc <__assert_fail@plt+0xd288>
   1eae0:	b	1eb10 <__assert_fail@plt+0xd29c>
   1eae4:	ldr	r0, [pc, #2688]	; 1f56c <__assert_fail@plt+0xdcf8>
   1eae8:	ldr	r1, [fp, #8]
   1eaec:	sdiv	r0, r0, r1
   1eaf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eaf4:	cmp	r0, r1
   1eaf8:	bge	1eb10 <__assert_fail@plt+0xd29c>
   1eafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb00:	ldr	r1, [fp, #8]
   1eb04:	mul	r0, r0, r1
   1eb08:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb0c:	b	1f540 <__assert_fail@plt+0xdccc>
   1eb10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb14:	ldr	r1, [fp, #8]
   1eb18:	mul	r0, r0, r1
   1eb1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb20:	b	1f544 <__assert_fail@plt+0xdcd0>
   1eb24:	ldr	r0, [fp, #8]
   1eb28:	cmp	r0, #0
   1eb2c:	bge	1ec3c <__assert_fail@plt+0xd3c8>
   1eb30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb34:	cmp	r0, #0
   1eb38:	bge	1ebc4 <__assert_fail@plt+0xd350>
   1eb3c:	b	1eb5c <__assert_fail@plt+0xd2e8>
   1eb40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb44:	ldr	r1, [fp, #8]
   1eb48:	mvn	r2, #0
   1eb4c:	udiv	r1, r2, r1
   1eb50:	cmp	r0, r1
   1eb54:	bcc	1ecd8 <__assert_fail@plt+0xd464>
   1eb58:	b	1ecec <__assert_fail@plt+0xd478>
   1eb5c:	b	1eb60 <__assert_fail@plt+0xd2ec>
   1eb60:	ldr	r0, [pc, #2568]	; 1f570 <__assert_fail@plt+0xdcfc>
   1eb64:	ldr	r1, [fp, #8]
   1eb68:	cmp	r1, r0
   1eb6c:	blt	1eb84 <__assert_fail@plt+0xd310>
   1eb70:	b	1eb90 <__assert_fail@plt+0xd31c>
   1eb74:	ldr	r0, [fp, #8]
   1eb78:	movw	r1, #0
   1eb7c:	cmp	r1, r0
   1eb80:	bge	1eb90 <__assert_fail@plt+0xd31c>
   1eb84:	movw	r0, #1
   1eb88:	str	r0, [sp, #68]	; 0x44
   1eb8c:	b	1eba8 <__assert_fail@plt+0xd334>
   1eb90:	ldr	r0, [fp, #8]
   1eb94:	movw	r1, #0
   1eb98:	sub	r0, r1, r0
   1eb9c:	mvn	r1, #0
   1eba0:	udiv	r0, r1, r0
   1eba4:	str	r0, [sp, #68]	; 0x44
   1eba8:	ldr	r0, [sp, #68]	; 0x44
   1ebac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebb0:	mvn	r2, #0
   1ebb4:	sub	r1, r2, r1
   1ebb8:	cmp	r0, r1
   1ebbc:	bls	1ecd8 <__assert_fail@plt+0xd464>
   1ebc0:	b	1ecec <__assert_fail@plt+0xd478>
   1ebc4:	b	1ebc8 <__assert_fail@plt+0xd354>
   1ebc8:	b	1ec20 <__assert_fail@plt+0xd3ac>
   1ebcc:	b	1ec20 <__assert_fail@plt+0xd3ac>
   1ebd0:	ldr	r0, [fp, #8]
   1ebd4:	cmn	r0, #1
   1ebd8:	bne	1ec20 <__assert_fail@plt+0xd3ac>
   1ebdc:	b	1ebe0 <__assert_fail@plt+0xd36c>
   1ebe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe4:	add	r0, r0, #0
   1ebe8:	movw	r1, #0
   1ebec:	cmp	r1, r0
   1ebf0:	blt	1ecd8 <__assert_fail@plt+0xd464>
   1ebf4:	b	1ecec <__assert_fail@plt+0xd478>
   1ebf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebfc:	movw	r1, #0
   1ec00:	cmp	r1, r0
   1ec04:	bge	1ecec <__assert_fail@plt+0xd478>
   1ec08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec0c:	sub	r0, r0, #1
   1ec10:	mvn	r1, #0
   1ec14:	cmp	r1, r0
   1ec18:	blt	1ecd8 <__assert_fail@plt+0xd464>
   1ec1c:	b	1ecec <__assert_fail@plt+0xd478>
   1ec20:	ldr	r0, [fp, #8]
   1ec24:	movw	r1, #0
   1ec28:	sdiv	r0, r1, r0
   1ec2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec30:	cmp	r0, r1
   1ec34:	blt	1ecd8 <__assert_fail@plt+0xd464>
   1ec38:	b	1ecec <__assert_fail@plt+0xd478>
   1ec3c:	ldr	r0, [fp, #8]
   1ec40:	cmp	r0, #0
   1ec44:	bne	1ec4c <__assert_fail@plt+0xd3d8>
   1ec48:	b	1ecec <__assert_fail@plt+0xd478>
   1ec4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec50:	cmp	r0, #0
   1ec54:	bge	1ecc0 <__assert_fail@plt+0xd44c>
   1ec58:	b	1ec5c <__assert_fail@plt+0xd3e8>
   1ec5c:	b	1eca4 <__assert_fail@plt+0xd430>
   1ec60:	b	1eca4 <__assert_fail@plt+0xd430>
   1ec64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec68:	cmn	r0, #1
   1ec6c:	bne	1eca4 <__assert_fail@plt+0xd430>
   1ec70:	b	1ec74 <__assert_fail@plt+0xd400>
   1ec74:	ldr	r0, [fp, #8]
   1ec78:	add	r0, r0, #0
   1ec7c:	movw	r1, #0
   1ec80:	cmp	r1, r0
   1ec84:	blt	1ecd8 <__assert_fail@plt+0xd464>
   1ec88:	b	1ecec <__assert_fail@plt+0xd478>
   1ec8c:	ldr	r0, [fp, #8]
   1ec90:	sub	r0, r0, #1
   1ec94:	mvn	r1, #0
   1ec98:	cmp	r1, r0
   1ec9c:	blt	1ecd8 <__assert_fail@plt+0xd464>
   1eca0:	b	1ecec <__assert_fail@plt+0xd478>
   1eca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eca8:	movw	r1, #0
   1ecac:	sdiv	r0, r1, r0
   1ecb0:	ldr	r1, [fp, #8]
   1ecb4:	cmp	r0, r1
   1ecb8:	blt	1ecd8 <__assert_fail@plt+0xd464>
   1ecbc:	b	1ecec <__assert_fail@plt+0xd478>
   1ecc0:	ldr	r0, [fp, #8]
   1ecc4:	mvn	r1, #0
   1ecc8:	udiv	r0, r1, r0
   1eccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecd0:	cmp	r0, r1
   1ecd4:	bcs	1ecec <__assert_fail@plt+0xd478>
   1ecd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecdc:	ldr	r1, [fp, #8]
   1ece0:	mul	r0, r0, r1
   1ece4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ece8:	b	1f540 <__assert_fail@plt+0xdccc>
   1ecec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecf0:	ldr	r1, [fp, #8]
   1ecf4:	mul	r0, r0, r1
   1ecf8:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecfc:	b	1f544 <__assert_fail@plt+0xdcd0>
   1ed00:	b	1ed04 <__assert_fail@plt+0xd490>
   1ed04:	b	1ed08 <__assert_fail@plt+0xd494>
   1ed08:	ldr	r0, [fp, #8]
   1ed0c:	cmp	r0, #0
   1ed10:	bge	1ee14 <__assert_fail@plt+0xd5a0>
   1ed14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed18:	cmp	r0, #0
   1ed1c:	bge	1eda8 <__assert_fail@plt+0xd534>
   1ed20:	b	1ed24 <__assert_fail@plt+0xd4b0>
   1ed24:	ldr	r0, [pc, #2112]	; 1f56c <__assert_fail@plt+0xdcf8>
   1ed28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed2c:	ldr	r2, [fp, #8]
   1ed30:	sdiv	r0, r0, r2
   1ed34:	cmp	r1, r0
   1ed38:	blt	1eea4 <__assert_fail@plt+0xd630>
   1ed3c:	b	1eeb8 <__assert_fail@plt+0xd644>
   1ed40:	b	1ed44 <__assert_fail@plt+0xd4d0>
   1ed44:	ldr	r0, [pc, #2084]	; 1f570 <__assert_fail@plt+0xdcfc>
   1ed48:	ldr	r1, [fp, #8]
   1ed4c:	cmp	r1, r0
   1ed50:	blt	1ed68 <__assert_fail@plt+0xd4f4>
   1ed54:	b	1ed74 <__assert_fail@plt+0xd500>
   1ed58:	ldr	r0, [fp, #8]
   1ed5c:	movw	r1, #0
   1ed60:	cmp	r1, r0
   1ed64:	bge	1ed74 <__assert_fail@plt+0xd500>
   1ed68:	movw	r0, #0
   1ed6c:	str	r0, [sp, #64]	; 0x40
   1ed70:	b	1ed8c <__assert_fail@plt+0xd518>
   1ed74:	ldr	r0, [pc, #2032]	; 1f56c <__assert_fail@plt+0xdcf8>
   1ed78:	ldr	r1, [fp, #8]
   1ed7c:	movw	r2, #0
   1ed80:	sub	r1, r2, r1
   1ed84:	sdiv	r0, r0, r1
   1ed88:	str	r0, [sp, #64]	; 0x40
   1ed8c:	ldr	r0, [sp, #64]	; 0x40
   1ed90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed94:	mvn	r2, #0
   1ed98:	sub	r1, r2, r1
   1ed9c:	cmp	r0, r1
   1eda0:	ble	1eea4 <__assert_fail@plt+0xd630>
   1eda4:	b	1eeb8 <__assert_fail@plt+0xd644>
   1eda8:	ldr	r0, [fp, #8]
   1edac:	cmn	r0, #1
   1edb0:	bne	1edf8 <__assert_fail@plt+0xd584>
   1edb4:	b	1edb8 <__assert_fail@plt+0xd544>
   1edb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edbc:	add	r0, r0, #-2147483648	; 0x80000000
   1edc0:	movw	r1, #0
   1edc4:	cmp	r1, r0
   1edc8:	blt	1eea4 <__assert_fail@plt+0xd630>
   1edcc:	b	1eeb8 <__assert_fail@plt+0xd644>
   1edd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edd4:	movw	r1, #0
   1edd8:	cmp	r1, r0
   1eddc:	bge	1eeb8 <__assert_fail@plt+0xd644>
   1ede0:	ldr	r0, [pc, #1924]	; 1f56c <__assert_fail@plt+0xdcf8>
   1ede4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ede8:	sub	r1, r1, #1
   1edec:	cmp	r0, r1
   1edf0:	blt	1eea4 <__assert_fail@plt+0xd630>
   1edf4:	b	1eeb8 <__assert_fail@plt+0xd644>
   1edf8:	ldr	r0, [pc, #1908]	; 1f574 <__assert_fail@plt+0xdd00>
   1edfc:	ldr	r1, [fp, #8]
   1ee00:	sdiv	r0, r0, r1
   1ee04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee08:	cmp	r0, r1
   1ee0c:	blt	1eea4 <__assert_fail@plt+0xd630>
   1ee10:	b	1eeb8 <__assert_fail@plt+0xd644>
   1ee14:	ldr	r0, [fp, #8]
   1ee18:	cmp	r0, #0
   1ee1c:	bne	1ee24 <__assert_fail@plt+0xd5b0>
   1ee20:	b	1eeb8 <__assert_fail@plt+0xd644>
   1ee24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee28:	cmp	r0, #0
   1ee2c:	bge	1ee8c <__assert_fail@plt+0xd618>
   1ee30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee34:	cmn	r0, #1
   1ee38:	bne	1ee70 <__assert_fail@plt+0xd5fc>
   1ee3c:	b	1ee40 <__assert_fail@plt+0xd5cc>
   1ee40:	ldr	r0, [fp, #8]
   1ee44:	add	r0, r0, #-2147483648	; 0x80000000
   1ee48:	movw	r1, #0
   1ee4c:	cmp	r1, r0
   1ee50:	blt	1eea4 <__assert_fail@plt+0xd630>
   1ee54:	b	1eeb8 <__assert_fail@plt+0xd644>
   1ee58:	ldr	r0, [pc, #1804]	; 1f56c <__assert_fail@plt+0xdcf8>
   1ee5c:	ldr	r1, [fp, #8]
   1ee60:	sub	r1, r1, #1
   1ee64:	cmp	r0, r1
   1ee68:	blt	1eea4 <__assert_fail@plt+0xd630>
   1ee6c:	b	1eeb8 <__assert_fail@plt+0xd644>
   1ee70:	ldr	r0, [pc, #1788]	; 1f574 <__assert_fail@plt+0xdd00>
   1ee74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee78:	sdiv	r0, r0, r1
   1ee7c:	ldr	r1, [fp, #8]
   1ee80:	cmp	r0, r1
   1ee84:	blt	1eea4 <__assert_fail@plt+0xd630>
   1ee88:	b	1eeb8 <__assert_fail@plt+0xd644>
   1ee8c:	ldr	r0, [pc, #1752]	; 1f56c <__assert_fail@plt+0xdcf8>
   1ee90:	ldr	r1, [fp, #8]
   1ee94:	sdiv	r0, r0, r1
   1ee98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee9c:	cmp	r0, r1
   1eea0:	bge	1eeb8 <__assert_fail@plt+0xd644>
   1eea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eea8:	ldr	r1, [fp, #8]
   1eeac:	mul	r0, r0, r1
   1eeb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1eeb4:	b	1f540 <__assert_fail@plt+0xdccc>
   1eeb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eebc:	ldr	r1, [fp, #8]
   1eec0:	mul	r0, r0, r1
   1eec4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eec8:	b	1f544 <__assert_fail@plt+0xdcd0>
   1eecc:	ldr	r0, [fp, #8]
   1eed0:	cmp	r0, #0
   1eed4:	bge	1efe4 <__assert_fail@plt+0xd770>
   1eed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eedc:	cmp	r0, #0
   1eee0:	bge	1ef6c <__assert_fail@plt+0xd6f8>
   1eee4:	b	1ef04 <__assert_fail@plt+0xd690>
   1eee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eeec:	ldr	r1, [fp, #8]
   1eef0:	mvn	r2, #0
   1eef4:	udiv	r1, r2, r1
   1eef8:	cmp	r0, r1
   1eefc:	bcc	1f080 <__assert_fail@plt+0xd80c>
   1ef00:	b	1f094 <__assert_fail@plt+0xd820>
   1ef04:	b	1ef08 <__assert_fail@plt+0xd694>
   1ef08:	ldr	r0, [pc, #1632]	; 1f570 <__assert_fail@plt+0xdcfc>
   1ef0c:	ldr	r1, [fp, #8]
   1ef10:	cmp	r1, r0
   1ef14:	blt	1ef2c <__assert_fail@plt+0xd6b8>
   1ef18:	b	1ef38 <__assert_fail@plt+0xd6c4>
   1ef1c:	ldr	r0, [fp, #8]
   1ef20:	movw	r1, #0
   1ef24:	cmp	r1, r0
   1ef28:	bge	1ef38 <__assert_fail@plt+0xd6c4>
   1ef2c:	movw	r0, #1
   1ef30:	str	r0, [sp, #60]	; 0x3c
   1ef34:	b	1ef50 <__assert_fail@plt+0xd6dc>
   1ef38:	ldr	r0, [fp, #8]
   1ef3c:	movw	r1, #0
   1ef40:	sub	r0, r1, r0
   1ef44:	mvn	r1, #0
   1ef48:	udiv	r0, r1, r0
   1ef4c:	str	r0, [sp, #60]	; 0x3c
   1ef50:	ldr	r0, [sp, #60]	; 0x3c
   1ef54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef58:	mvn	r2, #0
   1ef5c:	sub	r1, r2, r1
   1ef60:	cmp	r0, r1
   1ef64:	bls	1f080 <__assert_fail@plt+0xd80c>
   1ef68:	b	1f094 <__assert_fail@plt+0xd820>
   1ef6c:	b	1ef70 <__assert_fail@plt+0xd6fc>
   1ef70:	b	1efc8 <__assert_fail@plt+0xd754>
   1ef74:	b	1efc8 <__assert_fail@plt+0xd754>
   1ef78:	ldr	r0, [fp, #8]
   1ef7c:	cmn	r0, #1
   1ef80:	bne	1efc8 <__assert_fail@plt+0xd754>
   1ef84:	b	1ef88 <__assert_fail@plt+0xd714>
   1ef88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef8c:	add	r0, r0, #0
   1ef90:	movw	r1, #0
   1ef94:	cmp	r1, r0
   1ef98:	blt	1f080 <__assert_fail@plt+0xd80c>
   1ef9c:	b	1f094 <__assert_fail@plt+0xd820>
   1efa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efa4:	movw	r1, #0
   1efa8:	cmp	r1, r0
   1efac:	bge	1f094 <__assert_fail@plt+0xd820>
   1efb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efb4:	sub	r0, r0, #1
   1efb8:	mvn	r1, #0
   1efbc:	cmp	r1, r0
   1efc0:	blt	1f080 <__assert_fail@plt+0xd80c>
   1efc4:	b	1f094 <__assert_fail@plt+0xd820>
   1efc8:	ldr	r0, [fp, #8]
   1efcc:	movw	r1, #0
   1efd0:	sdiv	r0, r1, r0
   1efd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efd8:	cmp	r0, r1
   1efdc:	blt	1f080 <__assert_fail@plt+0xd80c>
   1efe0:	b	1f094 <__assert_fail@plt+0xd820>
   1efe4:	ldr	r0, [fp, #8]
   1efe8:	cmp	r0, #0
   1efec:	bne	1eff4 <__assert_fail@plt+0xd780>
   1eff0:	b	1f094 <__assert_fail@plt+0xd820>
   1eff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eff8:	cmp	r0, #0
   1effc:	bge	1f068 <__assert_fail@plt+0xd7f4>
   1f000:	b	1f004 <__assert_fail@plt+0xd790>
   1f004:	b	1f04c <__assert_fail@plt+0xd7d8>
   1f008:	b	1f04c <__assert_fail@plt+0xd7d8>
   1f00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f010:	cmn	r0, #1
   1f014:	bne	1f04c <__assert_fail@plt+0xd7d8>
   1f018:	b	1f01c <__assert_fail@plt+0xd7a8>
   1f01c:	ldr	r0, [fp, #8]
   1f020:	add	r0, r0, #0
   1f024:	movw	r1, #0
   1f028:	cmp	r1, r0
   1f02c:	blt	1f080 <__assert_fail@plt+0xd80c>
   1f030:	b	1f094 <__assert_fail@plt+0xd820>
   1f034:	ldr	r0, [fp, #8]
   1f038:	sub	r0, r0, #1
   1f03c:	mvn	r1, #0
   1f040:	cmp	r1, r0
   1f044:	blt	1f080 <__assert_fail@plt+0xd80c>
   1f048:	b	1f094 <__assert_fail@plt+0xd820>
   1f04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f050:	movw	r1, #0
   1f054:	sdiv	r0, r1, r0
   1f058:	ldr	r1, [fp, #8]
   1f05c:	cmp	r0, r1
   1f060:	blt	1f080 <__assert_fail@plt+0xd80c>
   1f064:	b	1f094 <__assert_fail@plt+0xd820>
   1f068:	ldr	r0, [fp, #8]
   1f06c:	mvn	r1, #0
   1f070:	udiv	r0, r1, r0
   1f074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f078:	cmp	r0, r1
   1f07c:	bcs	1f094 <__assert_fail@plt+0xd820>
   1f080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f084:	ldr	r1, [fp, #8]
   1f088:	mul	r0, r0, r1
   1f08c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f090:	b	1f540 <__assert_fail@plt+0xdccc>
   1f094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f098:	ldr	r1, [fp, #8]
   1f09c:	mul	r0, r0, r1
   1f0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f0a4:	b	1f544 <__assert_fail@plt+0xdcd0>
   1f0a8:	b	1f0ac <__assert_fail@plt+0xd838>
   1f0ac:	ldr	r0, [fp, #8]
   1f0b0:	cmp	r0, #0
   1f0b4:	bge	1f21c <__assert_fail@plt+0xd9a8>
   1f0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0bc:	cmp	r0, #0
   1f0c0:	bge	1f198 <__assert_fail@plt+0xd924>
   1f0c4:	b	1f0c8 <__assert_fail@plt+0xd854>
   1f0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0cc:	ldr	r1, [fp, #8]
   1f0d0:	asr	r3, r1, #31
   1f0d4:	mvn	r2, #0
   1f0d8:	mvn	ip, #-2147483648	; 0x80000000
   1f0dc:	str	r0, [sp, #56]	; 0x38
   1f0e0:	mov	r0, r2
   1f0e4:	str	r1, [sp, #52]	; 0x34
   1f0e8:	mov	r1, ip
   1f0ec:	ldr	r2, [sp, #52]	; 0x34
   1f0f0:	bl	22ec8 <__assert_fail@plt+0x11654>
   1f0f4:	ldr	r2, [sp, #56]	; 0x38
   1f0f8:	subs	r0, r2, r0
   1f0fc:	rscs	r1, r1, r2, asr #31
   1f100:	blt	1f2e4 <__assert_fail@plt+0xda70>
   1f104:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f108:	b	1f10c <__assert_fail@plt+0xd898>
   1f10c:	ldr	r0, [pc, #1116]	; 1f570 <__assert_fail@plt+0xdcfc>
   1f110:	ldr	r1, [fp, #8]
   1f114:	cmp	r1, r0
   1f118:	blt	1f130 <__assert_fail@plt+0xd8bc>
   1f11c:	b	1f144 <__assert_fail@plt+0xd8d0>
   1f120:	ldr	r0, [fp, #8]
   1f124:	movw	r1, #0
   1f128:	cmp	r1, r0
   1f12c:	bge	1f144 <__assert_fail@plt+0xd8d0>
   1f130:	mov	r0, #0
   1f134:	mvn	r1, #0
   1f138:	str	r1, [sp, #48]	; 0x30
   1f13c:	str	r0, [sp, #44]	; 0x2c
   1f140:	b	1f178 <__assert_fail@plt+0xd904>
   1f144:	ldr	r0, [fp, #8]
   1f148:	rsb	r0, r0, #0
   1f14c:	asr	r3, r0, #31
   1f150:	mvn	r1, #0
   1f154:	mvn	r2, #-2147483648	; 0x80000000
   1f158:	str	r0, [sp, #40]	; 0x28
   1f15c:	mov	r0, r1
   1f160:	mov	r1, r2
   1f164:	ldr	r2, [sp, #40]	; 0x28
   1f168:	bl	22ec8 <__assert_fail@plt+0x11654>
   1f16c:	str	r0, [sp, #48]	; 0x30
   1f170:	str	r1, [sp, #44]	; 0x2c
   1f174:	b	1f178 <__assert_fail@plt+0xd904>
   1f178:	ldr	r0, [sp, #44]	; 0x2c
   1f17c:	ldr	r1, [sp, #48]	; 0x30
   1f180:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f184:	mvn	r2, r2
   1f188:	subs	r1, r2, r1
   1f18c:	rscs	r0, r0, r2, asr #31
   1f190:	bge	1f2e4 <__assert_fail@plt+0xda70>
   1f194:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f198:	ldr	r0, [fp, #8]
   1f19c:	cmn	r0, #1
   1f1a0:	bne	1f1e4 <__assert_fail@plt+0xd970>
   1f1a4:	b	1f1a8 <__assert_fail@plt+0xd934>
   1f1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1ac:	mov	r1, #-2147483648	; 0x80000000
   1f1b0:	add	r1, r1, r0, asr #31
   1f1b4:	rsbs	r0, r0, #0
   1f1b8:	rscs	r1, r1, #0
   1f1bc:	blt	1f2e4 <__assert_fail@plt+0xda70>
   1f1c0:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1c8:	movw	r1, #0
   1f1cc:	cmp	r1, r0
   1f1d0:	bge	1f2f8 <__assert_fail@plt+0xda84>
   1f1d4:	mov	r0, #0
   1f1d8:	cmp	r0, #0
   1f1dc:	bne	1f2e4 <__assert_fail@plt+0xda70>
   1f1e0:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f1e4:	ldr	r0, [fp, #8]
   1f1e8:	asr	r3, r0, #31
   1f1ec:	mov	r1, #0
   1f1f0:	mov	r2, #-2147483648	; 0x80000000
   1f1f4:	str	r0, [sp, #36]	; 0x24
   1f1f8:	mov	r0, r1
   1f1fc:	mov	r1, r2
   1f200:	ldr	r2, [sp, #36]	; 0x24
   1f204:	bl	22ec8 <__assert_fail@plt+0x11654>
   1f208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f20c:	subs	r0, r0, r2
   1f210:	sbcs	r1, r1, r2, asr #31
   1f214:	blt	1f2e4 <__assert_fail@plt+0xda70>
   1f218:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f21c:	ldr	r0, [fp, #8]
   1f220:	cmp	r0, #0
   1f224:	bne	1f22c <__assert_fail@plt+0xd9b8>
   1f228:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f22c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f230:	cmp	r0, #0
   1f234:	bge	1f2ac <__assert_fail@plt+0xda38>
   1f238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f23c:	cmn	r0, #1
   1f240:	bne	1f274 <__assert_fail@plt+0xda00>
   1f244:	b	1f248 <__assert_fail@plt+0xd9d4>
   1f248:	ldr	r0, [fp, #8]
   1f24c:	mov	r1, #-2147483648	; 0x80000000
   1f250:	add	r1, r1, r0, asr #31
   1f254:	rsbs	r0, r0, #0
   1f258:	rscs	r1, r1, #0
   1f25c:	blt	1f2e4 <__assert_fail@plt+0xda70>
   1f260:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f264:	mov	r0, #0
   1f268:	cmp	r0, #0
   1f26c:	bne	1f2e4 <__assert_fail@plt+0xda70>
   1f270:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f278:	asr	r3, r0, #31
   1f27c:	mov	r1, #0
   1f280:	mov	r2, #-2147483648	; 0x80000000
   1f284:	str	r0, [sp, #32]
   1f288:	mov	r0, r1
   1f28c:	mov	r1, r2
   1f290:	ldr	r2, [sp, #32]
   1f294:	bl	22ec8 <__assert_fail@plt+0x11654>
   1f298:	ldr	r2, [fp, #8]
   1f29c:	subs	r0, r0, r2
   1f2a0:	sbcs	r1, r1, r2, asr #31
   1f2a4:	blt	1f2e4 <__assert_fail@plt+0xda70>
   1f2a8:	b	1f2f8 <__assert_fail@plt+0xda84>
   1f2ac:	ldr	r0, [fp, #8]
   1f2b0:	asr	r3, r0, #31
   1f2b4:	mvn	r1, #0
   1f2b8:	mvn	r2, #-2147483648	; 0x80000000
   1f2bc:	str	r0, [sp, #28]
   1f2c0:	mov	r0, r1
   1f2c4:	mov	r1, r2
   1f2c8:	ldr	r2, [sp, #28]
   1f2cc:	bl	22ec8 <__assert_fail@plt+0x11654>
   1f2d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f2d4:	subs	r0, r0, r2
   1f2d8:	sbcs	r1, r1, r2, asr #31
   1f2dc:	bge	1f2f8 <__assert_fail@plt+0xda84>
   1f2e0:	b	1f2e4 <__assert_fail@plt+0xda70>
   1f2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2e8:	ldr	r1, [fp, #8]
   1f2ec:	mul	r0, r0, r1
   1f2f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f2f4:	b	1f540 <__assert_fail@plt+0xdccc>
   1f2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2fc:	ldr	r1, [fp, #8]
   1f300:	mul	r0, r0, r1
   1f304:	str	r0, [fp, #-28]	; 0xffffffe4
   1f308:	b	1f544 <__assert_fail@plt+0xdcd0>
   1f30c:	ldr	r0, [fp, #8]
   1f310:	cmp	r0, #0
   1f314:	bge	1f464 <__assert_fail@plt+0xdbf0>
   1f318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f31c:	cmp	r0, #0
   1f320:	bge	1f3ec <__assert_fail@plt+0xdb78>
   1f324:	b	1f364 <__assert_fail@plt+0xdaf0>
   1f328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f32c:	ldr	r1, [fp, #8]
   1f330:	asr	r3, r1, #31
   1f334:	mvn	r2, #0
   1f338:	str	r0, [sp, #24]
   1f33c:	mov	r0, r2
   1f340:	str	r1, [sp, #20]
   1f344:	mov	r1, r2
   1f348:	ldr	r2, [sp, #20]
   1f34c:	bl	22f9c <__assert_fail@plt+0x11728>
   1f350:	ldr	r2, [sp, #24]
   1f354:	subs	r0, r2, r0
   1f358:	rscs	r1, r1, r2, asr #31
   1f35c:	bcc	1f518 <__assert_fail@plt+0xdca4>
   1f360:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f364:	b	1f368 <__assert_fail@plt+0xdaf4>
   1f368:	ldr	r0, [pc, #512]	; 1f570 <__assert_fail@plt+0xdcfc>
   1f36c:	ldr	r1, [fp, #8]
   1f370:	cmp	r1, r0
   1f374:	blt	1f38c <__assert_fail@plt+0xdb18>
   1f378:	b	1f3a0 <__assert_fail@plt+0xdb2c>
   1f37c:	ldr	r0, [fp, #8]
   1f380:	movw	r1, #0
   1f384:	cmp	r1, r0
   1f388:	bge	1f3a0 <__assert_fail@plt+0xdb2c>
   1f38c:	mov	r0, #1
   1f390:	mvn	r1, #0
   1f394:	str	r1, [sp, #16]
   1f398:	str	r0, [sp, #12]
   1f39c:	b	1f3cc <__assert_fail@plt+0xdb58>
   1f3a0:	ldr	r0, [fp, #8]
   1f3a4:	rsb	r0, r0, #0
   1f3a8:	asr	r3, r0, #31
   1f3ac:	mvn	r1, #0
   1f3b0:	str	r0, [sp, #8]
   1f3b4:	mov	r0, r1
   1f3b8:	ldr	r2, [sp, #8]
   1f3bc:	bl	22f9c <__assert_fail@plt+0x11728>
   1f3c0:	str	r0, [sp, #16]
   1f3c4:	str	r1, [sp, #12]
   1f3c8:	b	1f3cc <__assert_fail@plt+0xdb58>
   1f3cc:	ldr	r0, [sp, #12]
   1f3d0:	ldr	r1, [sp, #16]
   1f3d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3d8:	mvn	r2, r2
   1f3dc:	subs	r1, r2, r1
   1f3e0:	rscs	r0, r0, r2, asr #31
   1f3e4:	bcs	1f518 <__assert_fail@plt+0xdca4>
   1f3e8:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f3ec:	b	1f3f0 <__assert_fail@plt+0xdb7c>
   1f3f0:	b	1f448 <__assert_fail@plt+0xdbd4>
   1f3f4:	b	1f448 <__assert_fail@plt+0xdbd4>
   1f3f8:	ldr	r0, [fp, #8]
   1f3fc:	cmn	r0, #1
   1f400:	bne	1f448 <__assert_fail@plt+0xdbd4>
   1f404:	b	1f408 <__assert_fail@plt+0xdb94>
   1f408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f40c:	add	r0, r0, #0
   1f410:	movw	r1, #0
   1f414:	cmp	r1, r0
   1f418:	blt	1f518 <__assert_fail@plt+0xdca4>
   1f41c:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f424:	movw	r1, #0
   1f428:	cmp	r1, r0
   1f42c:	bge	1f52c <__assert_fail@plt+0xdcb8>
   1f430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f434:	sub	r0, r0, #1
   1f438:	mvn	r1, #0
   1f43c:	cmp	r1, r0
   1f440:	blt	1f518 <__assert_fail@plt+0xdca4>
   1f444:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f448:	ldr	r0, [fp, #8]
   1f44c:	movw	r1, #0
   1f450:	sdiv	r0, r1, r0
   1f454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f458:	cmp	r0, r1
   1f45c:	blt	1f518 <__assert_fail@plt+0xdca4>
   1f460:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f464:	ldr	r0, [fp, #8]
   1f468:	cmp	r0, #0
   1f46c:	bne	1f474 <__assert_fail@plt+0xdc00>
   1f470:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f478:	cmp	r0, #0
   1f47c:	bge	1f4e8 <__assert_fail@plt+0xdc74>
   1f480:	b	1f484 <__assert_fail@plt+0xdc10>
   1f484:	b	1f4cc <__assert_fail@plt+0xdc58>
   1f488:	b	1f4cc <__assert_fail@plt+0xdc58>
   1f48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f490:	cmn	r0, #1
   1f494:	bne	1f4cc <__assert_fail@plt+0xdc58>
   1f498:	b	1f49c <__assert_fail@plt+0xdc28>
   1f49c:	ldr	r0, [fp, #8]
   1f4a0:	add	r0, r0, #0
   1f4a4:	movw	r1, #0
   1f4a8:	cmp	r1, r0
   1f4ac:	blt	1f518 <__assert_fail@plt+0xdca4>
   1f4b0:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f4b4:	ldr	r0, [fp, #8]
   1f4b8:	sub	r0, r0, #1
   1f4bc:	mvn	r1, #0
   1f4c0:	cmp	r1, r0
   1f4c4:	blt	1f518 <__assert_fail@plt+0xdca4>
   1f4c8:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f4d0:	movw	r1, #0
   1f4d4:	sdiv	r0, r1, r0
   1f4d8:	ldr	r1, [fp, #8]
   1f4dc:	cmp	r0, r1
   1f4e0:	blt	1f518 <__assert_fail@plt+0xdca4>
   1f4e4:	b	1f52c <__assert_fail@plt+0xdcb8>
   1f4e8:	ldr	r0, [fp, #8]
   1f4ec:	asr	r3, r0, #31
   1f4f0:	mvn	r1, #0
   1f4f4:	str	r0, [sp, #4]
   1f4f8:	mov	r0, r1
   1f4fc:	ldr	r2, [sp, #4]
   1f500:	bl	22f9c <__assert_fail@plt+0x11728>
   1f504:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f508:	subs	r0, r0, r2
   1f50c:	sbcs	r1, r1, r2, asr #31
   1f510:	bcs	1f52c <__assert_fail@plt+0xdcb8>
   1f514:	b	1f518 <__assert_fail@plt+0xdca4>
   1f518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f51c:	ldr	r1, [fp, #8]
   1f520:	mul	r0, r0, r1
   1f524:	str	r0, [fp, #-28]	; 0xffffffe4
   1f528:	b	1f540 <__assert_fail@plt+0xdccc>
   1f52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f530:	ldr	r1, [fp, #8]
   1f534:	mul	r0, r0, r1
   1f538:	str	r0, [fp, #-28]	; 0xffffffe4
   1f53c:	b	1f544 <__assert_fail@plt+0xdcd0>
   1f540:	bl	1f71c <__assert_fail@plt+0xdea8>
   1f544:	ldr	r0, [fp, #-4]
   1f548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f54c:	bl	1ca7c <__assert_fail@plt+0xb208>
   1f550:	str	r0, [fp, #-4]
   1f554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f558:	ldr	r1, [fp, #-8]
   1f55c:	str	r0, [r1]
   1f560:	ldr	r0, [fp, #-4]
   1f564:	mov	sp, fp
   1f568:	pop	{fp, pc}
   1f56c:	svcvc	0x00ffffff
   1f570:	andhi	r0, r0, r1
   1f574:	andhi	r0, r0, r0
   1f578:			; <UNDEFINED> instruction: 0xffff8000
   1f57c:	push	{fp, lr}
   1f580:	mov	fp, sp
   1f584:	sub	sp, sp, #8
   1f588:	str	r0, [sp, #4]
   1f58c:	ldr	r0, [sp, #4]
   1f590:	movw	r1, #1
   1f594:	bl	1f5a0 <__assert_fail@plt+0xdd2c>
   1f598:	mov	sp, fp
   1f59c:	pop	{fp, pc}
   1f5a0:	push	{fp, lr}
   1f5a4:	mov	fp, sp
   1f5a8:	sub	sp, sp, #8
   1f5ac:	str	r0, [sp, #4]
   1f5b0:	str	r1, [sp]
   1f5b4:	ldr	r0, [sp, #4]
   1f5b8:	ldr	r1, [sp]
   1f5bc:	bl	1f894 <__assert_fail@plt+0xe020>
   1f5c0:	bl	1ca08 <__assert_fail@plt+0xb194>
   1f5c4:	mov	sp, fp
   1f5c8:	pop	{fp, pc}
   1f5cc:	push	{fp, lr}
   1f5d0:	mov	fp, sp
   1f5d4:	sub	sp, sp, #8
   1f5d8:	str	r0, [sp, #4]
   1f5dc:	ldr	r0, [sp, #4]
   1f5e0:	movw	r1, #1
   1f5e4:	bl	1f5f0 <__assert_fail@plt+0xdd7c>
   1f5e8:	mov	sp, fp
   1f5ec:	pop	{fp, pc}
   1f5f0:	push	{fp, lr}
   1f5f4:	mov	fp, sp
   1f5f8:	sub	sp, sp, #8
   1f5fc:	str	r0, [sp, #4]
   1f600:	str	r1, [sp]
   1f604:	ldr	r0, [sp, #4]
   1f608:	ldr	r1, [sp]
   1f60c:	bl	20a38 <__assert_fail@plt+0xf1c4>
   1f610:	bl	1ca08 <__assert_fail@plt+0xb194>
   1f614:	mov	sp, fp
   1f618:	pop	{fp, pc}
   1f61c:	push	{fp, lr}
   1f620:	mov	fp, sp
   1f624:	sub	sp, sp, #16
   1f628:	str	r0, [fp, #-4]
   1f62c:	str	r1, [sp, #8]
   1f630:	ldr	r0, [sp, #8]
   1f634:	bl	1c9e4 <__assert_fail@plt+0xb170>
   1f638:	ldr	r1, [fp, #-4]
   1f63c:	ldr	r2, [sp, #8]
   1f640:	str	r0, [sp, #4]
   1f644:	bl	1152c <memcpy@plt>
   1f648:	ldr	r0, [sp, #4]
   1f64c:	mov	sp, fp
   1f650:	pop	{fp, pc}
   1f654:	push	{fp, lr}
   1f658:	mov	fp, sp
   1f65c:	sub	sp, sp, #16
   1f660:	str	r0, [fp, #-4]
   1f664:	str	r1, [sp, #8]
   1f668:	ldr	r0, [sp, #8]
   1f66c:	bl	1ca38 <__assert_fail@plt+0xb1c4>
   1f670:	ldr	r1, [fp, #-4]
   1f674:	ldr	r2, [sp, #8]
   1f678:	str	r0, [sp, #4]
   1f67c:	bl	1152c <memcpy@plt>
   1f680:	ldr	r0, [sp, #4]
   1f684:	mov	sp, fp
   1f688:	pop	{fp, pc}
   1f68c:	push	{fp, lr}
   1f690:	mov	fp, sp
   1f694:	sub	sp, sp, #16
   1f698:	str	r0, [fp, #-4]
   1f69c:	str	r1, [sp, #8]
   1f6a0:	ldr	r0, [sp, #8]
   1f6a4:	add	r0, r0, #1
   1f6a8:	bl	1ca38 <__assert_fail@plt+0xb1c4>
   1f6ac:	str	r0, [sp, #4]
   1f6b0:	ldr	r0, [sp, #4]
   1f6b4:	ldr	r1, [sp, #8]
   1f6b8:	add	r0, r0, r1
   1f6bc:	movw	r1, #0
   1f6c0:	strb	r1, [r0]
   1f6c4:	ldr	r0, [sp, #4]
   1f6c8:	ldr	r1, [fp, #-4]
   1f6cc:	ldr	r2, [sp, #8]
   1f6d0:	str	r0, [sp]
   1f6d4:	bl	1152c <memcpy@plt>
   1f6d8:	ldr	r0, [sp]
   1f6dc:	mov	sp, fp
   1f6e0:	pop	{fp, pc}
   1f6e4:	push	{fp, lr}
   1f6e8:	mov	fp, sp
   1f6ec:	sub	sp, sp, #8
   1f6f0:	str	r0, [sp, #4]
   1f6f4:	ldr	r0, [sp, #4]
   1f6f8:	ldr	r1, [sp, #4]
   1f6fc:	str	r0, [sp]
   1f700:	mov	r0, r1
   1f704:	bl	116d0 <strlen@plt>
   1f708:	add	r1, r0, #1
   1f70c:	ldr	r0, [sp]
   1f710:	bl	1f61c <__assert_fail@plt+0xdda8>
   1f714:	mov	sp, fp
   1f718:	pop	{fp, pc}
   1f71c:	push	{fp, lr}
   1f720:	mov	fp, sp
   1f724:	sub	sp, sp, #8
   1f728:	movw	r0, #20840	; 0x5168
   1f72c:	movt	r0, #3
   1f730:	ldr	r0, [r0]
   1f734:	movw	r1, #17502	; 0x445e
   1f738:	movt	r1, #2
   1f73c:	str	r0, [sp, #4]
   1f740:	mov	r0, r1
   1f744:	bl	116b8 <gettext@plt>
   1f748:	ldr	r1, [sp, #4]
   1f74c:	str	r0, [sp]
   1f750:	mov	r0, r1
   1f754:	movw	r1, #0
   1f758:	movw	r2, #16311	; 0x3fb7
   1f75c:	movt	r2, #2
   1f760:	ldr	r3, [sp]
   1f764:	bl	11610 <error@plt>
   1f768:	bl	11838 <abort@plt>
   1f76c:	push	{fp, lr}
   1f770:	mov	fp, sp
   1f774:	sub	sp, sp, #16
   1f778:	str	r0, [fp, #-4]
   1f77c:	str	r1, [sp, #8]
   1f780:	str	r2, [sp, #4]
   1f784:	ldr	r0, [fp, #-4]
   1f788:	ldr	r1, [sp, #8]
   1f78c:	orr	r1, r1, #512	; 0x200
   1f790:	ldr	r2, [sp, #4]
   1f794:	bl	133ec <__assert_fail@plt+0x1b78>
   1f798:	str	r0, [sp]
   1f79c:	ldr	r0, [sp]
   1f7a0:	movw	r1, #0
   1f7a4:	cmp	r0, r1
   1f7a8:	bne	1f7e4 <__assert_fail@plt+0xdf70>
   1f7ac:	bl	11700 <__errno_location@plt>
   1f7b0:	ldr	r0, [r0]
   1f7b4:	cmp	r0, #22
   1f7b8:	beq	1f7c0 <__assert_fail@plt+0xdf4c>
   1f7bc:	b	1f7e0 <__assert_fail@plt+0xdf6c>
   1f7c0:	movw	r0, #17519	; 0x446f
   1f7c4:	movt	r0, #2
   1f7c8:	movw	r1, #17535	; 0x447f
   1f7cc:	movt	r1, #2
   1f7d0:	movw	r2, #41	; 0x29
   1f7d4:	movw	r3, #17546	; 0x448a
   1f7d8:	movt	r3, #2
   1f7dc:	bl	11874 <__assert_fail@plt>
   1f7e0:	bl	1f71c <__assert_fail@plt+0xdea8>
   1f7e4:	ldr	r0, [sp]
   1f7e8:	mov	sp, fp
   1f7ec:	pop	{fp, pc}
   1f7f0:	sub	sp, sp, #16
   1f7f4:	str	r0, [sp, #12]
   1f7f8:	str	r1, [sp, #8]
   1f7fc:	ldr	r0, [sp, #12]
   1f800:	ldr	r0, [r0, #48]	; 0x30
   1f804:	and	r0, r0, #16
   1f808:	cmp	r0, #0
   1f80c:	beq	1f82c <__assert_fail@plt+0xdfb8>
   1f810:	ldr	r0, [sp, #12]
   1f814:	ldr	r0, [r0, #48]	; 0x30
   1f818:	and	r0, r0, #1
   1f81c:	cmp	r0, #0
   1f820:	movw	r0, #1
   1f824:	str	r0, [sp, #4]
   1f828:	beq	1f884 <__assert_fail@plt+0xe010>
   1f82c:	ldr	r0, [sp, #12]
   1f830:	ldr	r0, [r0, #48]	; 0x30
   1f834:	and	r0, r0, #16
   1f838:	cmp	r0, #0
   1f83c:	movw	r0, #0
   1f840:	str	r0, [sp]
   1f844:	beq	1f87c <__assert_fail@plt+0xe008>
   1f848:	ldr	r0, [sp, #12]
   1f84c:	ldr	r0, [r0, #48]	; 0x30
   1f850:	and	r0, r0, #1
   1f854:	cmp	r0, #0
   1f858:	movw	r0, #0
   1f85c:	str	r0, [sp]
   1f860:	beq	1f87c <__assert_fail@plt+0xe008>
   1f864:	ldr	r0, [sp, #8]
   1f868:	ldr	r0, [r0, #48]	; 0x30
   1f86c:	cmp	r0, #0
   1f870:	movw	r0, #0
   1f874:	movne	r0, #1
   1f878:	str	r0, [sp]
   1f87c:	ldr	r0, [sp]
   1f880:	str	r0, [sp, #4]
   1f884:	ldr	r0, [sp, #4]
   1f888:	and	r0, r0, #1
   1f88c:	add	sp, sp, #16
   1f890:	bx	lr
   1f894:	push	{fp, lr}
   1f898:	mov	fp, sp
   1f89c:	sub	sp, sp, #16
   1f8a0:	str	r0, [sp, #8]
   1f8a4:	str	r1, [sp, #4]
   1f8a8:	ldr	r0, [sp, #8]
   1f8ac:	cmp	r0, #0
   1f8b0:	beq	1f8c0 <__assert_fail@plt+0xe04c>
   1f8b4:	ldr	r0, [sp, #4]
   1f8b8:	cmp	r0, #0
   1f8bc:	bne	1f8cc <__assert_fail@plt+0xe058>
   1f8c0:	movw	r0, #1
   1f8c4:	str	r0, [sp, #4]
   1f8c8:	str	r0, [sp, #8]
   1f8cc:	ldr	r0, [sp, #4]
   1f8d0:	cmp	r0, #0
   1f8d4:	beq	1f908 <__assert_fail@plt+0xe094>
   1f8d8:	ldr	r0, [pc, #76]	; 1f92c <__assert_fail@plt+0xe0b8>
   1f8dc:	ldr	r1, [sp, #4]
   1f8e0:	udiv	r0, r0, r1
   1f8e4:	ldr	r1, [sp, #8]
   1f8e8:	cmp	r0, r1
   1f8ec:	bcs	1f908 <__assert_fail@plt+0xe094>
   1f8f0:	bl	11700 <__errno_location@plt>
   1f8f4:	movw	r1, #12
   1f8f8:	str	r1, [r0]
   1f8fc:	movw	r0, #0
   1f900:	str	r0, [fp, #-4]
   1f904:	b	1f920 <__assert_fail@plt+0xe0ac>
   1f908:	ldr	r0, [sp, #8]
   1f90c:	ldr	r1, [sp, #4]
   1f910:	bl	114a8 <calloc@plt>
   1f914:	str	r0, [sp]
   1f918:	ldr	r0, [sp]
   1f91c:	str	r0, [fp, #-4]
   1f920:	ldr	r0, [fp, #-4]
   1f924:	mov	sp, fp
   1f928:	pop	{fp, pc}
   1f92c:	svcvc	0x00ffffff
   1f930:	push	{fp, lr}
   1f934:	mov	fp, sp
   1f938:	sub	sp, sp, #16
   1f93c:	str	r0, [sp, #8]
   1f940:	ldr	r0, [sp, #8]
   1f944:	cmp	r0, #0
   1f948:	bne	1f954 <__assert_fail@plt+0xe0e0>
   1f94c:	movw	r0, #1
   1f950:	str	r0, [sp, #8]
   1f954:	ldr	r0, [pc, #64]	; 1f99c <__assert_fail@plt+0xe128>
   1f958:	ldr	r1, [sp, #8]
   1f95c:	cmp	r0, r1
   1f960:	bcs	1f97c <__assert_fail@plt+0xe108>
   1f964:	bl	11700 <__errno_location@plt>
   1f968:	movw	r1, #12
   1f96c:	str	r1, [r0]
   1f970:	movw	r0, #0
   1f974:	str	r0, [fp, #-4]
   1f978:	b	1f990 <__assert_fail@plt+0xe11c>
   1f97c:	ldr	r0, [sp, #8]
   1f980:	bl	11640 <malloc@plt>
   1f984:	str	r0, [sp, #4]
   1f988:	ldr	r0, [sp, #4]
   1f98c:	str	r0, [fp, #-4]
   1f990:	ldr	r0, [fp, #-4]
   1f994:	mov	sp, fp
   1f998:	pop	{fp, pc}
   1f99c:	svcvc	0x00ffffff
   1f9a0:	push	{fp, lr}
   1f9a4:	mov	fp, sp
   1f9a8:	sub	sp, sp, #16
   1f9ac:	str	r0, [sp, #8]
   1f9b0:	str	r1, [sp, #4]
   1f9b4:	ldr	r0, [sp, #8]
   1f9b8:	movw	r1, #0
   1f9bc:	cmp	r0, r1
   1f9c0:	bne	1f9d4 <__assert_fail@plt+0xe160>
   1f9c4:	ldr	r0, [sp, #4]
   1f9c8:	bl	1f930 <__assert_fail@plt+0xe0bc>
   1f9cc:	str	r0, [fp, #-4]
   1f9d0:	b	1fa34 <__assert_fail@plt+0xe1c0>
   1f9d4:	ldr	r0, [sp, #4]
   1f9d8:	cmp	r0, #0
   1f9dc:	bne	1f9f4 <__assert_fail@plt+0xe180>
   1f9e0:	ldr	r0, [sp, #8]
   1f9e4:	bl	2082c <__assert_fail@plt+0xefb8>
   1f9e8:	movw	r0, #0
   1f9ec:	str	r0, [fp, #-4]
   1f9f0:	b	1fa34 <__assert_fail@plt+0xe1c0>
   1f9f4:	ldr	r0, [pc, #68]	; 1fa40 <__assert_fail@plt+0xe1cc>
   1f9f8:	ldr	r1, [sp, #4]
   1f9fc:	cmp	r0, r1
   1fa00:	bcs	1fa1c <__assert_fail@plt+0xe1a8>
   1fa04:	bl	11700 <__errno_location@plt>
   1fa08:	movw	r1, #12
   1fa0c:	str	r1, [r0]
   1fa10:	movw	r0, #0
   1fa14:	str	r0, [fp, #-4]
   1fa18:	b	1fa34 <__assert_fail@plt+0xe1c0>
   1fa1c:	ldr	r0, [sp, #8]
   1fa20:	ldr	r1, [sp, #4]
   1fa24:	bl	11574 <realloc@plt>
   1fa28:	str	r0, [sp]
   1fa2c:	ldr	r0, [sp]
   1fa30:	str	r0, [fp, #-4]
   1fa34:	ldr	r0, [fp, #-4]
   1fa38:	mov	sp, fp
   1fa3c:	pop	{fp, pc}
   1fa40:	svcvc	0x00ffffff
   1fa44:	push	{fp, lr}
   1fa48:	mov	fp, sp
   1fa4c:	sub	sp, sp, #72	; 0x48
   1fa50:	str	r0, [fp, #-8]
   1fa54:	str	r1, [fp, #-12]
   1fa58:	str	r2, [fp, #-16]
   1fa5c:	ldr	r0, [fp, #-8]
   1fa60:	str	r0, [fp, #-20]	; 0xffffffec
   1fa64:	ldr	r0, [fp, #-16]
   1fa68:	ldrsb	r0, [r0]
   1fa6c:	cmp	r0, #0
   1fa70:	bne	1fa8c <__assert_fail@plt+0xe218>
   1fa74:	ldr	r0, [fp, #-8]
   1fa78:	movw	r1, #0
   1fa7c:	strb	r1, [r0]
   1fa80:	ldr	r0, [fp, #-8]
   1fa84:	str	r0, [fp, #-4]
   1fa88:	b	1fbcc <__assert_fail@plt+0xe358>
   1fa8c:	movw	r0, #21312	; 0x5340
   1fa90:	movt	r0, #3
   1fa94:	ldr	r0, [r0]
   1fa98:	cmp	r0, #0
   1fa9c:	bne	1fb2c <__assert_fail@plt+0xe2b8>
   1faa0:	ldr	r1, [pc, #304]	; 1fbd8 <__assert_fail@plt+0xe364>
   1faa4:	movw	r0, #17624	; 0x44d8
   1faa8:	movt	r0, #2
   1faac:	bl	11628 <open64@plt>
   1fab0:	str	r0, [fp, #-28]	; 0xffffffe4
   1fab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fab8:	cmp	r0, #0
   1fabc:	bge	1fad4 <__assert_fail@plt+0xe260>
   1fac0:	movw	r0, #21312	; 0x5340
   1fac4:	movt	r0, #3
   1fac8:	mvn	r1, #0
   1facc:	str	r1, [r0]
   1fad0:	b	1fb28 <__assert_fail@plt+0xe2b4>
   1fad4:	add	r0, sp, #12
   1fad8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fadc:	movw	r1, #17638	; 0x44e6
   1fae0:	movt	r1, #2
   1fae4:	bl	1179c <sprintf@plt>
   1fae8:	add	r1, sp, #12
   1faec:	str	r0, [sp, #4]
   1faf0:	mov	r0, r1
   1faf4:	movw	r1, #0
   1faf8:	bl	11748 <access@plt>
   1fafc:	cmp	r0, #0
   1fb00:	movw	r0, #0
   1fb04:	movne	r0, #1
   1fb08:	tst	r0, #1
   1fb0c:	mvn	r0, #0
   1fb10:	moveq	r0, #1
   1fb14:	movw	r1, #21312	; 0x5340
   1fb18:	movt	r1, #3
   1fb1c:	str	r0, [r1]
   1fb20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fb24:	bl	11844 <close@plt>
   1fb28:	b	1fb2c <__assert_fail@plt+0xe2b8>
   1fb2c:	movw	r0, #21312	; 0x5340
   1fb30:	movt	r0, #3
   1fb34:	ldr	r0, [r0]
   1fb38:	cmp	r0, #0
   1fb3c:	bge	1fb4c <__assert_fail@plt+0xe2d8>
   1fb40:	movw	r0, #0
   1fb44:	str	r0, [fp, #-4]
   1fb48:	b	1fbcc <__assert_fail@plt+0xe358>
   1fb4c:	ldr	r0, [fp, #-16]
   1fb50:	bl	116d0 <strlen@plt>
   1fb54:	add	r0, r0, #27
   1fb58:	str	r0, [sp, #8]
   1fb5c:	ldr	r0, [sp, #8]
   1fb60:	movw	r1, #4032	; 0xfc0
   1fb64:	cmp	r1, r0
   1fb68:	bcs	1fb98 <__assert_fail@plt+0xe324>
   1fb6c:	ldr	r0, [sp, #8]
   1fb70:	bl	1f930 <__assert_fail@plt+0xe0bc>
   1fb74:	str	r0, [fp, #-20]	; 0xffffffec
   1fb78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb7c:	movw	r1, #0
   1fb80:	cmp	r0, r1
   1fb84:	bne	1fb94 <__assert_fail@plt+0xe320>
   1fb88:	movw	r0, #0
   1fb8c:	str	r0, [fp, #-4]
   1fb90:	b	1fbcc <__assert_fail@plt+0xe358>
   1fb94:	b	1fb98 <__assert_fail@plt+0xe324>
   1fb98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb9c:	ldr	r2, [fp, #-12]
   1fba0:	movw	r1, #17661	; 0x44fd
   1fba4:	movt	r1, #2
   1fba8:	bl	1179c <sprintf@plt>
   1fbac:	str	r0, [fp, #-24]	; 0xffffffe8
   1fbb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fbb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fbb8:	add	r0, r0, r1
   1fbbc:	ldr	r1, [fp, #-16]
   1fbc0:	bl	115e0 <strcpy@plt>
   1fbc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fbc8:	str	r1, [fp, #-4]
   1fbcc:	ldr	r0, [fp, #-4]
   1fbd0:	mov	sp, fp
   1fbd4:	pop	{fp, pc}
   1fbd8:	andeq	r4, r8, r0, lsl #18
   1fbdc:	push	{r4, sl, fp, lr}
   1fbe0:	add	fp, sp, #8
   1fbe4:	sub	sp, sp, #16
   1fbe8:	str	r0, [sp, #8]
   1fbec:	str	r1, [sp, #12]
   1fbf0:	str	r2, [sp, #4]
   1fbf4:	ldr	r0, [sp, #8]
   1fbf8:	ldr	r1, [sp, #12]
   1fbfc:	ldr	r2, [sp, #4]
   1fc00:	rsb	r3, r2, #32
   1fc04:	lsr	ip, r0, r3
   1fc08:	orr	ip, ip, r1, lsl r2
   1fc0c:	sub	lr, r2, #32
   1fc10:	cmp	lr, #0
   1fc14:	lslpl	ip, r0, lr
   1fc18:	lsl	r4, r0, r2
   1fc1c:	cmp	lr, #0
   1fc20:	movwpl	r4, #0
   1fc24:	rsb	r2, r2, #64	; 0x40
   1fc28:	lsr	lr, r1, r2
   1fc2c:	cmp	r3, #0
   1fc30:	movwpl	lr, #0
   1fc34:	lsr	r0, r0, r2
   1fc38:	rsb	r2, r2, #32
   1fc3c:	orr	r0, r0, r1, lsl r2
   1fc40:	cmp	r3, #0
   1fc44:	lsrpl	r0, r1, r3
   1fc48:	orr	r0, r4, r0
   1fc4c:	orr	r1, ip, lr
   1fc50:	sub	sp, fp, #8
   1fc54:	pop	{r4, sl, fp, pc}
   1fc58:	push	{r4, sl, fp, lr}
   1fc5c:	add	fp, sp, #8
   1fc60:	sub	sp, sp, #16
   1fc64:	str	r0, [sp, #8]
   1fc68:	str	r1, [sp, #12]
   1fc6c:	str	r2, [sp, #4]
   1fc70:	ldr	r0, [sp, #8]
   1fc74:	ldr	r1, [sp, #12]
   1fc78:	ldr	r2, [sp, #4]
   1fc7c:	lsr	r3, r1, r2
   1fc80:	sub	ip, r2, #32
   1fc84:	cmp	ip, #0
   1fc88:	movwpl	r3, #0
   1fc8c:	lsr	lr, r0, r2
   1fc90:	rsb	r4, r2, #32
   1fc94:	orr	lr, lr, r1, lsl r4
   1fc98:	cmp	ip, #0
   1fc9c:	lsrpl	lr, r1, ip
   1fca0:	rsb	r2, r2, #64	; 0x40
   1fca4:	rsb	ip, r2, #32
   1fca8:	lsr	ip, r0, ip
   1fcac:	orr	r1, ip, r1, lsl r2
   1fcb0:	cmp	r4, #0
   1fcb4:	lslpl	r1, r0, r4
   1fcb8:	lsl	r0, r0, r2
   1fcbc:	cmp	r4, #0
   1fcc0:	movwpl	r0, #0
   1fcc4:	orr	r0, lr, r0
   1fcc8:	orr	r1, r3, r1
   1fccc:	sub	sp, fp, #8
   1fcd0:	pop	{r4, sl, fp, pc}
   1fcd4:	sub	sp, sp, #8
   1fcd8:	str	r0, [sp, #4]
   1fcdc:	str	r1, [sp]
   1fce0:	ldr	r0, [sp, #4]
   1fce4:	ldr	r1, [sp]
   1fce8:	lsl	r0, r0, r1
   1fcec:	ldr	r1, [sp, #4]
   1fcf0:	ldr	r2, [sp]
   1fcf4:	movw	r3, #32
   1fcf8:	sub	r2, r3, r2
   1fcfc:	lsr	r1, r1, r2
   1fd00:	orr	r0, r0, r1
   1fd04:	add	sp, sp, #8
   1fd08:	bx	lr
   1fd0c:	sub	sp, sp, #8
   1fd10:	str	r0, [sp, #4]
   1fd14:	str	r1, [sp]
   1fd18:	ldr	r0, [sp, #4]
   1fd1c:	ldr	r1, [sp]
   1fd20:	lsr	r0, r0, r1
   1fd24:	ldr	r1, [sp, #4]
   1fd28:	ldr	r2, [sp]
   1fd2c:	movw	r3, #32
   1fd30:	sub	r2, r3, r2
   1fd34:	lsl	r1, r1, r2
   1fd38:	orr	r0, r0, r1
   1fd3c:	add	sp, sp, #8
   1fd40:	bx	lr
   1fd44:	sub	sp, sp, #8
   1fd48:	str	r0, [sp, #4]
   1fd4c:	str	r1, [sp]
   1fd50:	ldr	r0, [sp, #4]
   1fd54:	ldr	r1, [sp]
   1fd58:	lsl	r0, r0, r1
   1fd5c:	ldr	r1, [sp, #4]
   1fd60:	ldr	r2, [sp]
   1fd64:	movw	r3, #32
   1fd68:	sub	r2, r3, r2
   1fd6c:	lsr	r1, r1, r2
   1fd70:	orr	r0, r0, r1
   1fd74:	add	sp, sp, #8
   1fd78:	bx	lr
   1fd7c:	sub	sp, sp, #8
   1fd80:	str	r0, [sp, #4]
   1fd84:	str	r1, [sp]
   1fd88:	ldr	r0, [sp, #4]
   1fd8c:	ldr	r1, [sp]
   1fd90:	lsr	r0, r0, r1
   1fd94:	ldr	r1, [sp, #4]
   1fd98:	ldr	r2, [sp]
   1fd9c:	movw	r3, #32
   1fda0:	sub	r2, r3, r2
   1fda4:	lsl	r1, r1, r2
   1fda8:	orr	r0, r0, r1
   1fdac:	add	sp, sp, #8
   1fdb0:	bx	lr
   1fdb4:	sub	sp, sp, #8
   1fdb8:	strh	r0, [sp, #6]
   1fdbc:	str	r1, [sp]
   1fdc0:	ldrh	r0, [sp, #6]
   1fdc4:	ldr	r1, [sp]
   1fdc8:	lsl	r0, r0, r1
   1fdcc:	ldrh	r1, [sp, #6]
   1fdd0:	ldr	r2, [sp]
   1fdd4:	movw	r3, #16
   1fdd8:	sub	r2, r3, r2
   1fddc:	lsr	r1, r1, r2
   1fde0:	orr	r0, r0, r1
   1fde4:	movw	r1, #65535	; 0xffff
   1fde8:	and	r0, r0, r1
   1fdec:	uxth	r0, r0
   1fdf0:	add	sp, sp, #8
   1fdf4:	bx	lr
   1fdf8:	sub	sp, sp, #8
   1fdfc:	strh	r0, [sp, #6]
   1fe00:	str	r1, [sp]
   1fe04:	ldrh	r0, [sp, #6]
   1fe08:	ldr	r1, [sp]
   1fe0c:	lsr	r0, r0, r1
   1fe10:	ldrh	r1, [sp, #6]
   1fe14:	ldr	r2, [sp]
   1fe18:	movw	r3, #16
   1fe1c:	sub	r2, r3, r2
   1fe20:	lsl	r1, r1, r2
   1fe24:	orr	r0, r0, r1
   1fe28:	movw	r1, #65535	; 0xffff
   1fe2c:	and	r0, r0, r1
   1fe30:	uxth	r0, r0
   1fe34:	add	sp, sp, #8
   1fe38:	bx	lr
   1fe3c:	sub	sp, sp, #8
   1fe40:	strb	r0, [sp, #7]
   1fe44:	str	r1, [sp]
   1fe48:	ldrb	r0, [sp, #7]
   1fe4c:	ldr	r1, [sp]
   1fe50:	lsl	r0, r0, r1
   1fe54:	ldrb	r1, [sp, #7]
   1fe58:	ldr	r2, [sp]
   1fe5c:	movw	r3, #8
   1fe60:	sub	r2, r3, r2
   1fe64:	lsr	r1, r1, r2
   1fe68:	orr	r0, r0, r1
   1fe6c:	and	r0, r0, #255	; 0xff
   1fe70:	and	r0, r0, #255	; 0xff
   1fe74:	add	sp, sp, #8
   1fe78:	bx	lr
   1fe7c:	sub	sp, sp, #8
   1fe80:	strb	r0, [sp, #7]
   1fe84:	str	r1, [sp]
   1fe88:	ldrb	r0, [sp, #7]
   1fe8c:	ldr	r1, [sp]
   1fe90:	lsr	r0, r0, r1
   1fe94:	ldrb	r1, [sp, #7]
   1fe98:	ldr	r2, [sp]
   1fe9c:	movw	r3, #8
   1fea0:	sub	r2, r3, r2
   1fea4:	lsl	r1, r1, r2
   1fea8:	orr	r0, r0, r1
   1feac:	and	r0, r0, #255	; 0xff
   1feb0:	and	r0, r0, #255	; 0xff
   1feb4:	add	sp, sp, #8
   1feb8:	bx	lr
   1febc:	push	{fp, lr}
   1fec0:	mov	fp, sp
   1fec4:	sub	sp, sp, #24
   1fec8:	str	r0, [fp, #-8]
   1fecc:	str	r1, [sp, #12]
   1fed0:	ldr	r0, [fp, #-8]
   1fed4:	str	r0, [sp, #8]
   1fed8:	ldr	r0, [sp, #12]
   1fedc:	str	r0, [sp, #4]
   1fee0:	ldr	r0, [sp, #8]
   1fee4:	ldr	r1, [sp, #4]
   1fee8:	cmp	r0, r1
   1feec:	bne	1fefc <__assert_fail@plt+0xe688>
   1fef0:	movw	r0, #0
   1fef4:	str	r0, [fp, #-4]
   1fef8:	b	1ff68 <__assert_fail@plt+0xe6f4>
   1fefc:	b	1ff00 <__assert_fail@plt+0xe68c>
   1ff00:	ldr	r0, [sp, #8]
   1ff04:	ldrb	r0, [r0]
   1ff08:	bl	2274c <__assert_fail@plt+0x10ed8>
   1ff0c:	strb	r0, [sp, #3]
   1ff10:	ldr	r0, [sp, #4]
   1ff14:	ldrb	r0, [r0]
   1ff18:	bl	2274c <__assert_fail@plt+0x10ed8>
   1ff1c:	strb	r0, [sp, #2]
   1ff20:	ldrb	r0, [sp, #3]
   1ff24:	cmp	r0, #0
   1ff28:	bne	1ff30 <__assert_fail@plt+0xe6bc>
   1ff2c:	b	1ff58 <__assert_fail@plt+0xe6e4>
   1ff30:	ldr	r0, [sp, #8]
   1ff34:	add	r0, r0, #1
   1ff38:	str	r0, [sp, #8]
   1ff3c:	ldr	r0, [sp, #4]
   1ff40:	add	r0, r0, #1
   1ff44:	str	r0, [sp, #4]
   1ff48:	ldrb	r0, [sp, #3]
   1ff4c:	ldrb	r1, [sp, #2]
   1ff50:	cmp	r0, r1
   1ff54:	beq	1ff00 <__assert_fail@plt+0xe68c>
   1ff58:	ldrb	r0, [sp, #3]
   1ff5c:	ldrb	r1, [sp, #2]
   1ff60:	sub	r0, r0, r1
   1ff64:	str	r0, [fp, #-4]
   1ff68:	ldr	r0, [fp, #-4]
   1ff6c:	mov	sp, fp
   1ff70:	pop	{fp, pc}
   1ff74:	push	{fp, lr}
   1ff78:	mov	fp, sp
   1ff7c:	sub	sp, sp, #16
   1ff80:	str	r0, [sp, #8]
   1ff84:	ldr	r0, [sp, #8]
   1ff88:	bl	115ec <__fpending@plt>
   1ff8c:	cmp	r0, #0
   1ff90:	movw	r0, #0
   1ff94:	movne	r0, #1
   1ff98:	and	r0, r0, #1
   1ff9c:	strb	r0, [sp, #7]
   1ffa0:	ldr	r0, [sp, #8]
   1ffa4:	bl	115f8 <ferror_unlocked@plt>
   1ffa8:	cmp	r0, #0
   1ffac:	movw	r0, #0
   1ffb0:	movne	r0, #1
   1ffb4:	and	r0, r0, #1
   1ffb8:	strb	r0, [sp, #6]
   1ffbc:	ldr	r0, [sp, #8]
   1ffc0:	bl	20234 <__assert_fail@plt+0xe9c0>
   1ffc4:	cmp	r0, #0
   1ffc8:	movw	r0, #0
   1ffcc:	movne	r0, #1
   1ffd0:	and	r0, r0, #1
   1ffd4:	strb	r0, [sp, #5]
   1ffd8:	ldrb	r0, [sp, #6]
   1ffdc:	tst	r0, #1
   1ffe0:	bne	2000c <__assert_fail@plt+0xe798>
   1ffe4:	ldrb	r0, [sp, #5]
   1ffe8:	tst	r0, #1
   1ffec:	beq	20030 <__assert_fail@plt+0xe7bc>
   1fff0:	ldrb	r0, [sp, #7]
   1fff4:	tst	r0, #1
   1fff8:	bne	2000c <__assert_fail@plt+0xe798>
   1fffc:	bl	11700 <__errno_location@plt>
   20000:	ldr	r0, [r0]
   20004:	cmp	r0, #9
   20008:	beq	20030 <__assert_fail@plt+0xe7bc>
   2000c:	ldrb	r0, [sp, #5]
   20010:	tst	r0, #1
   20014:	bne	20024 <__assert_fail@plt+0xe7b0>
   20018:	bl	11700 <__errno_location@plt>
   2001c:	movw	r1, #0
   20020:	str	r1, [r0]
   20024:	mvn	r0, #0
   20028:	str	r0, [fp, #-4]
   2002c:	b	20038 <__assert_fail@plt+0xe7c4>
   20030:	movw	r0, #0
   20034:	str	r0, [fp, #-4]
   20038:	ldr	r0, [fp, #-4]
   2003c:	mov	sp, fp
   20040:	pop	{fp, pc}
   20044:	sub	sp, sp, #4
   20048:	ldr	r1, [pc, #32]	; 20070 <__assert_fail@plt+0xe7fc>
   2004c:	str	r0, [sp]
   20050:	ldr	r0, [sp]
   20054:	mov	r2, #0
   20058:	str	r2, [r0, #20]
   2005c:	str	r2, [r0, #16]
   20060:	ldr	r0, [sp]
   20064:	str	r1, [r0, #24]
   20068:	add	sp, sp, #4
   2006c:	bx	lr
   20070:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   20074:	push	{fp, lr}
   20078:	mov	fp, sp
   2007c:	sub	sp, sp, #16
   20080:	ldr	r2, [pc, #364]	; 201f4 <__assert_fail@plt+0xe980>
   20084:	str	r0, [sp, #8]
   20088:	str	r1, [sp, #4]
   2008c:	ldr	r0, [sp, #8]
   20090:	ldr	r0, [r0, #24]
   20094:	cmp	r0, r2
   20098:	bne	200a0 <__assert_fail@plt+0xe82c>
   2009c:	b	200c0 <__assert_fail@plt+0xe84c>
   200a0:	movw	r0, #17679	; 0x450f
   200a4:	movt	r0, #2
   200a8:	movw	r1, #17703	; 0x4527
   200ac:	movt	r1, #2
   200b0:	movw	r2, #60	; 0x3c
   200b4:	movw	r3, #17721	; 0x4539
   200b8:	movt	r3, #2
   200bc:	bl	11874 <__assert_fail@plt>
   200c0:	ldr	r0, [sp, #8]
   200c4:	ldr	r1, [r0, #16]
   200c8:	ldr	r0, [r0, #20]
   200cc:	orr	r0, r1, r0
   200d0:	cmp	r0, #0
   200d4:	beq	2014c <__assert_fail@plt+0xe8d8>
   200d8:	b	200dc <__assert_fail@plt+0xe868>
   200dc:	ldr	r0, [sp, #4]
   200e0:	ldr	r1, [r0, #96]	; 0x60
   200e4:	ldr	r0, [r0, #100]	; 0x64
   200e8:	ldr	r2, [sp, #8]
   200ec:	ldr	r3, [r2]
   200f0:	ldr	r2, [r2, #4]
   200f4:	eor	r0, r0, r2
   200f8:	eor	r1, r1, r3
   200fc:	orr	r0, r1, r0
   20100:	cmp	r0, #0
   20104:	bne	2014c <__assert_fail@plt+0xe8d8>
   20108:	b	2010c <__assert_fail@plt+0xe898>
   2010c:	ldr	r0, [sp, #4]
   20110:	ldr	r1, [r0]
   20114:	ldr	r0, [r0, #4]
   20118:	ldr	r2, [sp, #8]
   2011c:	ldr	r3, [r2, #8]
   20120:	ldr	r2, [r2, #12]
   20124:	eor	r0, r0, r2
   20128:	eor	r1, r1, r3
   2012c:	orr	r0, r1, r0
   20130:	cmp	r0, #0
   20134:	bne	2014c <__assert_fail@plt+0xe8d8>
   20138:	b	2013c <__assert_fail@plt+0xe8c8>
   2013c:	movw	r0, #1
   20140:	and	r0, r0, #1
   20144:	strb	r0, [fp, #-1]
   20148:	b	201e4 <__assert_fail@plt+0xe970>
   2014c:	ldr	r0, [sp, #8]
   20150:	ldr	r1, [r0, #16]
   20154:	ldr	r2, [r0, #20]
   20158:	adds	r1, r1, #1
   2015c:	adc	r2, r2, #0
   20160:	str	r1, [r0, #16]
   20164:	str	r2, [r0, #20]
   20168:	mov	r0, r1
   2016c:	mov	r1, r2
   20170:	bl	201f8 <__assert_fail@plt+0xe984>
   20174:	tst	r0, #1
   20178:	beq	201d8 <__assert_fail@plt+0xe964>
   2017c:	ldr	r0, [sp, #8]
   20180:	ldr	r1, [r0, #16]
   20184:	ldr	r0, [r0, #20]
   20188:	orr	r0, r1, r0
   2018c:	cmp	r0, #0
   20190:	bne	201a8 <__assert_fail@plt+0xe934>
   20194:	b	20198 <__assert_fail@plt+0xe924>
   20198:	movw	r0, #1
   2019c:	and	r0, r0, #1
   201a0:	strb	r0, [fp, #-1]
   201a4:	b	201e4 <__assert_fail@plt+0xe970>
   201a8:	ldr	r0, [sp, #4]
   201ac:	ldr	r1, [r0]
   201b0:	ldr	r0, [r0, #4]
   201b4:	ldr	r2, [sp, #8]
   201b8:	str	r0, [r2, #12]
   201bc:	str	r1, [r2, #8]
   201c0:	ldr	r0, [sp, #4]
   201c4:	ldr	r1, [r0, #96]	; 0x60
   201c8:	ldr	r0, [r0, #100]	; 0x64
   201cc:	ldr	r2, [sp, #8]
   201d0:	str	r0, [r2, #4]
   201d4:	str	r1, [r2]
   201d8:	movw	r0, #0
   201dc:	and	r0, r0, #1
   201e0:	strb	r0, [fp, #-1]
   201e4:	ldrb	r0, [fp, #-1]
   201e8:	and	r0, r0, #1
   201ec:	mov	sp, fp
   201f0:	pop	{fp, pc}
   201f4:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   201f8:	sub	sp, sp, #8
   201fc:	str	r0, [sp]
   20200:	str	r1, [sp, #4]
   20204:	ldr	r0, [sp]
   20208:	ldr	r1, [sp, #4]
   2020c:	subs	r2, r0, #1
   20210:	sbc	r3, r1, #0
   20214:	and	r0, r0, r2
   20218:	and	r1, r1, r3
   2021c:	orr	r0, r0, r1
   20220:	clz	r0, r0
   20224:	lsr	r0, r0, #5
   20228:	and	r0, r0, #1
   2022c:	add	sp, sp, #8
   20230:	bx	lr
   20234:	push	{fp, lr}
   20238:	mov	fp, sp
   2023c:	sub	sp, sp, #32
   20240:	str	r0, [fp, #-8]
   20244:	movw	r0, #0
   20248:	str	r0, [fp, #-12]
   2024c:	str	r0, [sp, #12]
   20250:	ldr	r0, [fp, #-8]
   20254:	bl	11724 <fileno@plt>
   20258:	str	r0, [sp, #16]
   2025c:	ldr	r0, [sp, #16]
   20260:	cmp	r0, #0
   20264:	bge	20278 <__assert_fail@plt+0xea04>
   20268:	ldr	r0, [fp, #-8]
   2026c:	bl	11754 <fclose@plt>
   20270:	str	r0, [fp, #-4]
   20274:	b	20314 <__assert_fail@plt+0xeaa0>
   20278:	ldr	r0, [fp, #-8]
   2027c:	bl	11658 <__freading@plt>
   20280:	cmp	r0, #0
   20284:	beq	202bc <__assert_fail@plt+0xea48>
   20288:	ldr	r0, [fp, #-8]
   2028c:	bl	11724 <fileno@plt>
   20290:	mov	r1, sp
   20294:	mov	r2, #1
   20298:	str	r2, [r1]
   2029c:	mov	r1, #0
   202a0:	mov	r2, r1
   202a4:	mov	r3, r1
   202a8:	bl	115c8 <lseek64@plt>
   202ac:	and	r0, r0, r1
   202b0:	cmn	r0, #1
   202b4:	beq	202d8 <__assert_fail@plt+0xea64>
   202b8:	b	202bc <__assert_fail@plt+0xea48>
   202bc:	ldr	r0, [fp, #-8]
   202c0:	bl	20780 <__assert_fail@plt+0xef0c>
   202c4:	cmp	r0, #0
   202c8:	beq	202d8 <__assert_fail@plt+0xea64>
   202cc:	bl	11700 <__errno_location@plt>
   202d0:	ldr	r0, [r0]
   202d4:	str	r0, [fp, #-12]
   202d8:	ldr	r0, [fp, #-8]
   202dc:	bl	11754 <fclose@plt>
   202e0:	str	r0, [sp, #12]
   202e4:	ldr	r0, [fp, #-12]
   202e8:	cmp	r0, #0
   202ec:	beq	2030c <__assert_fail@plt+0xea98>
   202f0:	ldr	r0, [fp, #-12]
   202f4:	str	r0, [sp, #8]
   202f8:	bl	11700 <__errno_location@plt>
   202fc:	ldr	r1, [sp, #8]
   20300:	str	r1, [r0]
   20304:	mvn	r0, #0
   20308:	str	r0, [sp, #12]
   2030c:	ldr	r0, [sp, #12]
   20310:	str	r0, [fp, #-4]
   20314:	ldr	r0, [fp, #-4]
   20318:	mov	sp, fp
   2031c:	pop	{fp, pc}
   20320:	sub	sp, sp, #8
   20324:	push	{fp, lr}
   20328:	mov	fp, sp
   2032c:	sub	sp, sp, #48	; 0x30
   20330:	str	r3, [fp, #12]
   20334:	str	r2, [fp, #8]
   20338:	str	r0, [fp, #-4]
   2033c:	str	r1, [fp, #-8]
   20340:	mvn	r0, #0
   20344:	str	r0, [fp, #-16]
   20348:	add	r0, fp, #8
   2034c:	str	r0, [fp, #-12]
   20350:	ldr	r0, [fp, #-8]
   20354:	cmp	r0, #0
   20358:	str	r0, [sp, #12]
   2035c:	beq	20378 <__assert_fail@plt+0xeb04>
   20360:	b	20364 <__assert_fail@plt+0xeaf0>
   20364:	movw	r0, #1030	; 0x406
   20368:	ldr	r1, [sp, #12]
   2036c:	cmp	r1, r0
   20370:	beq	203a0 <__assert_fail@plt+0xeb2c>
   20374:	b	203c8 <__assert_fail@plt+0xeb54>
   20378:	ldr	r0, [fp, #-12]
   2037c:	add	r1, r0, #4
   20380:	str	r1, [fp, #-12]
   20384:	ldr	r0, [r0]
   20388:	str	r0, [fp, #-20]	; 0xffffffec
   2038c:	ldr	r0, [fp, #-4]
   20390:	ldr	r1, [fp, #-20]	; 0xffffffec
   20394:	bl	20574 <__assert_fail@plt+0xed00>
   20398:	str	r0, [fp, #-16]
   2039c:	b	20554 <__assert_fail@plt+0xece0>
   203a0:	ldr	r0, [fp, #-12]
   203a4:	add	r1, r0, #4
   203a8:	str	r1, [fp, #-12]
   203ac:	ldr	r0, [r0]
   203b0:	str	r0, [sp, #24]
   203b4:	ldr	r0, [fp, #-4]
   203b8:	ldr	r1, [sp, #24]
   203bc:	bl	205a8 <__assert_fail@plt+0xed34>
   203c0:	str	r0, [fp, #-16]
   203c4:	b	20554 <__assert_fail@plt+0xece0>
   203c8:	ldr	r0, [fp, #-8]
   203cc:	cmp	r0, #0
   203d0:	str	r0, [sp, #8]
   203d4:	beq	204fc <__assert_fail@plt+0xec88>
   203d8:	b	203dc <__assert_fail@plt+0xeb68>
   203dc:	ldr	r0, [sp, #8]
   203e0:	cmp	r0, #1
   203e4:	beq	204e8 <__assert_fail@plt+0xec74>
   203e8:	b	203ec <__assert_fail@plt+0xeb78>
   203ec:	ldr	r0, [sp, #8]
   203f0:	cmp	r0, #2
   203f4:	beq	204fc <__assert_fail@plt+0xec88>
   203f8:	b	203fc <__assert_fail@plt+0xeb88>
   203fc:	ldr	r0, [sp, #8]
   20400:	cmp	r0, #3
   20404:	beq	204e8 <__assert_fail@plt+0xec74>
   20408:	b	2040c <__assert_fail@plt+0xeb98>
   2040c:	ldr	r0, [sp, #8]
   20410:	cmp	r0, #4
   20414:	beq	204fc <__assert_fail@plt+0xec88>
   20418:	b	2041c <__assert_fail@plt+0xeba8>
   2041c:	ldr	r0, [sp, #8]
   20420:	cmp	r0, #8
   20424:	beq	204fc <__assert_fail@plt+0xec88>
   20428:	b	2042c <__assert_fail@plt+0xebb8>
   2042c:	ldr	r0, [sp, #8]
   20430:	cmp	r0, #9
   20434:	beq	204e8 <__assert_fail@plt+0xec74>
   20438:	b	2043c <__assert_fail@plt+0xebc8>
   2043c:	ldr	r0, [sp, #8]
   20440:	cmp	r0, #10
   20444:	beq	204fc <__assert_fail@plt+0xec88>
   20448:	b	2044c <__assert_fail@plt+0xebd8>
   2044c:	ldr	r0, [sp, #8]
   20450:	cmp	r0, #11
   20454:	beq	204e8 <__assert_fail@plt+0xec74>
   20458:	b	2045c <__assert_fail@plt+0xebe8>
   2045c:	ldr	r0, [sp, #8]
   20460:	cmp	r0, #1024	; 0x400
   20464:	beq	204fc <__assert_fail@plt+0xec88>
   20468:	b	2046c <__assert_fail@plt+0xebf8>
   2046c:	movw	r0, #1025	; 0x401
   20470:	ldr	r1, [sp, #8]
   20474:	cmp	r1, r0
   20478:	beq	204e8 <__assert_fail@plt+0xec74>
   2047c:	b	20480 <__assert_fail@plt+0xec0c>
   20480:	movw	r0, #1026	; 0x402
   20484:	ldr	r1, [sp, #8]
   20488:	cmp	r1, r0
   2048c:	beq	204fc <__assert_fail@plt+0xec88>
   20490:	b	20494 <__assert_fail@plt+0xec20>
   20494:	movw	r0, #1030	; 0x406
   20498:	ldr	r1, [sp, #8]
   2049c:	sub	r0, r1, r0
   204a0:	cmp	r0, #2
   204a4:	bcc	204fc <__assert_fail@plt+0xec88>
   204a8:	b	204ac <__assert_fail@plt+0xec38>
   204ac:	movw	r0, #1032	; 0x408
   204b0:	ldr	r1, [sp, #8]
   204b4:	cmp	r1, r0
   204b8:	beq	204e8 <__assert_fail@plt+0xec74>
   204bc:	b	204c0 <__assert_fail@plt+0xec4c>
   204c0:	movw	r0, #1033	; 0x409
   204c4:	ldr	r1, [sp, #8]
   204c8:	cmp	r1, r0
   204cc:	beq	204fc <__assert_fail@plt+0xec88>
   204d0:	b	204d4 <__assert_fail@plt+0xec60>
   204d4:	movw	r0, #1034	; 0x40a
   204d8:	ldr	r1, [sp, #8]
   204dc:	cmp	r1, r0
   204e0:	bne	20528 <__assert_fail@plt+0xecb4>
   204e4:	b	204e8 <__assert_fail@plt+0xec74>
   204e8:	ldr	r0, [fp, #-4]
   204ec:	ldr	r1, [fp, #-8]
   204f0:	bl	1176c <fcntl64@plt>
   204f4:	str	r0, [fp, #-16]
   204f8:	b	20550 <__assert_fail@plt+0xecdc>
   204fc:	ldr	r0, [fp, #-12]
   20500:	add	r1, r0, #4
   20504:	str	r1, [fp, #-12]
   20508:	ldr	r0, [r0]
   2050c:	str	r0, [sp, #20]
   20510:	ldr	r0, [fp, #-4]
   20514:	ldr	r1, [fp, #-8]
   20518:	ldr	r2, [sp, #20]
   2051c:	bl	1176c <fcntl64@plt>
   20520:	str	r0, [fp, #-16]
   20524:	b	20550 <__assert_fail@plt+0xecdc>
   20528:	ldr	r0, [fp, #-12]
   2052c:	add	r1, r0, #4
   20530:	str	r1, [fp, #-12]
   20534:	ldr	r0, [r0]
   20538:	str	r0, [sp, #16]
   2053c:	ldr	r0, [fp, #-4]
   20540:	ldr	r1, [fp, #-8]
   20544:	ldr	r2, [sp, #16]
   20548:	bl	1176c <fcntl64@plt>
   2054c:	str	r0, [fp, #-16]
   20550:	b	20554 <__assert_fail@plt+0xece0>
   20554:	sub	r0, fp, #12
   20558:	ldr	r1, [fp, #-16]
   2055c:	str	r0, [sp, #4]
   20560:	mov	r0, r1
   20564:	mov	sp, fp
   20568:	pop	{fp, lr}
   2056c:	add	sp, sp, #8
   20570:	bx	lr
   20574:	push	{fp, lr}
   20578:	mov	fp, sp
   2057c:	sub	sp, sp, #16
   20580:	str	r0, [fp, #-4]
   20584:	str	r1, [sp, #8]
   20588:	ldr	r0, [fp, #-4]
   2058c:	ldr	r2, [sp, #8]
   20590:	movw	r1, #0
   20594:	bl	1176c <fcntl64@plt>
   20598:	str	r0, [sp, #4]
   2059c:	ldr	r0, [sp, #4]
   205a0:	mov	sp, fp
   205a4:	pop	{fp, pc}
   205a8:	push	{fp, lr}
   205ac:	mov	fp, sp
   205b0:	sub	sp, sp, #32
   205b4:	str	r0, [fp, #-4]
   205b8:	str	r1, [fp, #-8]
   205bc:	movw	r0, #21316	; 0x5344
   205c0:	movt	r0, #3
   205c4:	ldr	r0, [r0]
   205c8:	movw	r1, #0
   205cc:	cmp	r1, r0
   205d0:	bgt	20650 <__assert_fail@plt+0xeddc>
   205d4:	ldr	r0, [fp, #-4]
   205d8:	ldr	r2, [fp, #-8]
   205dc:	movw	r1, #1030	; 0x406
   205e0:	bl	1176c <fcntl64@plt>
   205e4:	str	r0, [fp, #-12]
   205e8:	ldr	r0, [fp, #-12]
   205ec:	movw	r1, #0
   205f0:	cmp	r1, r0
   205f4:	ble	20608 <__assert_fail@plt+0xed94>
   205f8:	bl	11700 <__errno_location@plt>
   205fc:	ldr	r0, [r0]
   20600:	cmp	r0, #22
   20604:	beq	2061c <__assert_fail@plt+0xeda8>
   20608:	movw	r0, #21316	; 0x5344
   2060c:	movt	r0, #3
   20610:	movw	r1, #1
   20614:	str	r1, [r0]
   20618:	b	2064c <__assert_fail@plt+0xedd8>
   2061c:	ldr	r0, [fp, #-4]
   20620:	ldr	r1, [fp, #-8]
   20624:	bl	20574 <__assert_fail@plt+0xed00>
   20628:	str	r0, [fp, #-12]
   2062c:	ldr	r0, [fp, #-12]
   20630:	cmp	r0, #0
   20634:	blt	20648 <__assert_fail@plt+0xedd4>
   20638:	movw	r0, #21316	; 0x5344
   2063c:	movt	r0, #3
   20640:	mvn	r1, #0
   20644:	str	r1, [r0]
   20648:	b	2064c <__assert_fail@plt+0xedd8>
   2064c:	b	20660 <__assert_fail@plt+0xedec>
   20650:	ldr	r0, [fp, #-4]
   20654:	ldr	r1, [fp, #-8]
   20658:	bl	20574 <__assert_fail@plt+0xed00>
   2065c:	str	r0, [fp, #-12]
   20660:	ldr	r0, [fp, #-12]
   20664:	movw	r1, #0
   20668:	cmp	r1, r0
   2066c:	bgt	206f4 <__assert_fail@plt+0xee80>
   20670:	movw	r0, #21316	; 0x5344
   20674:	movt	r0, #3
   20678:	ldr	r0, [r0]
   2067c:	cmn	r0, #1
   20680:	bne	206f4 <__assert_fail@plt+0xee80>
   20684:	ldr	r0, [fp, #-12]
   20688:	movw	r1, #1
   2068c:	bl	1176c <fcntl64@plt>
   20690:	str	r0, [sp, #16]
   20694:	ldr	r0, [sp, #16]
   20698:	cmp	r0, #0
   2069c:	blt	206bc <__assert_fail@plt+0xee48>
   206a0:	ldr	r0, [fp, #-12]
   206a4:	ldr	r1, [sp, #16]
   206a8:	orr	r2, r1, #1
   206ac:	movw	r1, #2
   206b0:	bl	1176c <fcntl64@plt>
   206b4:	cmn	r0, #1
   206b8:	bne	206f0 <__assert_fail@plt+0xee7c>
   206bc:	bl	11700 <__errno_location@plt>
   206c0:	ldr	r0, [r0]
   206c4:	str	r0, [sp, #12]
   206c8:	ldr	r0, [fp, #-12]
   206cc:	bl	11844 <close@plt>
   206d0:	ldr	r1, [sp, #12]
   206d4:	str	r0, [sp, #8]
   206d8:	str	r1, [sp, #4]
   206dc:	bl	11700 <__errno_location@plt>
   206e0:	ldr	r1, [sp, #4]
   206e4:	str	r1, [r0]
   206e8:	mvn	r0, #0
   206ec:	str	r0, [fp, #-12]
   206f0:	b	206f4 <__assert_fail@plt+0xee80>
   206f4:	ldr	r0, [fp, #-12]
   206f8:	mov	sp, fp
   206fc:	pop	{fp, pc}
   20700:	sub	sp, sp, #8
   20704:	push	{fp, lr}
   20708:	mov	fp, sp
   2070c:	sub	sp, sp, #16
   20710:	str	r3, [fp, #12]
   20714:	str	r2, [fp, #8]
   20718:	str	r0, [fp, #-4]
   2071c:	str	r1, [sp, #8]
   20720:	movw	r0, #0
   20724:	str	r0, [sp, #4]
   20728:	ldr	r0, [sp, #8]
   2072c:	and	r0, r0, #64	; 0x40
   20730:	cmp	r0, #0
   20734:	beq	2075c <__assert_fail@plt+0xeee8>
   20738:	mov	r0, sp
   2073c:	mov	r1, r0
   20740:	add	r2, fp, #8
   20744:	str	r2, [r1]
   20748:	ldr	r1, [sp]
   2074c:	add	r2, r1, #4
   20750:	str	r2, [sp]
   20754:	ldr	r1, [r1]
   20758:	str	r1, [sp, #4]
   2075c:	ldr	r0, [fp, #-4]
   20760:	ldr	r1, [sp, #8]
   20764:	ldr	r2, [sp, #4]
   20768:	bl	11628 <open64@plt>
   2076c:	bl	1c0a0 <__assert_fail@plt+0xa82c>
   20770:	mov	sp, fp
   20774:	pop	{fp, lr}
   20778:	add	sp, sp, #8
   2077c:	bx	lr
   20780:	push	{fp, lr}
   20784:	mov	fp, sp
   20788:	sub	sp, sp, #8
   2078c:	str	r0, [sp]
   20790:	ldr	r0, [sp]
   20794:	movw	r1, #0
   20798:	cmp	r0, r1
   2079c:	beq	207b0 <__assert_fail@plt+0xef3c>
   207a0:	ldr	r0, [sp]
   207a4:	bl	11658 <__freading@plt>
   207a8:	cmp	r0, #0
   207ac:	bne	207c0 <__assert_fail@plt+0xef4c>
   207b0:	ldr	r0, [sp]
   207b4:	bl	114f0 <fflush@plt>
   207b8:	str	r0, [sp, #4]
   207bc:	b	207d4 <__assert_fail@plt+0xef60>
   207c0:	ldr	r0, [sp]
   207c4:	bl	207e0 <__assert_fail@plt+0xef6c>
   207c8:	ldr	r0, [sp]
   207cc:	bl	114f0 <fflush@plt>
   207d0:	str	r0, [sp, #4]
   207d4:	ldr	r0, [sp, #4]
   207d8:	mov	sp, fp
   207dc:	pop	{fp, pc}
   207e0:	push	{fp, lr}
   207e4:	mov	fp, sp
   207e8:	sub	sp, sp, #8
   207ec:	str	r0, [sp, #4]
   207f0:	ldr	r0, [sp, #4]
   207f4:	ldr	r0, [r0]
   207f8:	and	r0, r0, #256	; 0x100
   207fc:	cmp	r0, #0
   20800:	beq	20824 <__assert_fail@plt+0xefb0>
   20804:	ldr	r0, [sp, #4]
   20808:	mov	r1, sp
   2080c:	mov	r2, #1
   20810:	str	r2, [r1]
   20814:	mov	r1, #0
   20818:	mov	r2, r1
   2081c:	mov	r3, r1
   20820:	bl	2086c <__assert_fail@plt+0xeff8>
   20824:	mov	sp, fp
   20828:	pop	{fp, pc}
   2082c:	push	{fp, lr}
   20830:	mov	fp, sp
   20834:	sub	sp, sp, #16
   20838:	str	r0, [fp, #-4]
   2083c:	bl	11700 <__errno_location@plt>
   20840:	ldr	r0, [r0]
   20844:	str	r0, [sp, #8]
   20848:	ldr	r0, [fp, #-4]
   2084c:	bl	11514 <free@plt>
   20850:	ldr	r0, [sp, #8]
   20854:	str	r0, [sp, #4]
   20858:	bl	11700 <__errno_location@plt>
   2085c:	ldr	r1, [sp, #4]
   20860:	str	r1, [r0]
   20864:	mov	sp, fp
   20868:	pop	{fp, pc}
   2086c:	push	{fp, lr}
   20870:	mov	fp, sp
   20874:	sub	sp, sp, #32
   20878:	ldr	r1, [fp, #8]
   2087c:	str	r0, [fp, #-8]
   20880:	str	r3, [sp, #20]
   20884:	str	r2, [sp, #16]
   20888:	ldr	r0, [fp, #-8]
   2088c:	ldr	r0, [r0, #8]
   20890:	ldr	r2, [fp, #-8]
   20894:	ldr	r2, [r2, #4]
   20898:	cmp	r0, r2
   2089c:	bne	20948 <__assert_fail@plt+0xf0d4>
   208a0:	ldr	r0, [fp, #-8]
   208a4:	ldr	r0, [r0, #20]
   208a8:	ldr	r1, [fp, #-8]
   208ac:	ldr	r1, [r1, #16]
   208b0:	cmp	r0, r1
   208b4:	bne	20948 <__assert_fail@plt+0xf0d4>
   208b8:	ldr	r0, [fp, #-8]
   208bc:	ldr	r0, [r0, #36]	; 0x24
   208c0:	movw	r1, #0
   208c4:	cmp	r0, r1
   208c8:	bne	20948 <__assert_fail@plt+0xf0d4>
   208cc:	ldr	r0, [fp, #-8]
   208d0:	bl	11724 <fileno@plt>
   208d4:	ldr	r2, [sp, #16]
   208d8:	ldr	r3, [sp, #20]
   208dc:	ldr	r1, [fp, #8]
   208e0:	mov	ip, sp
   208e4:	str	r1, [ip]
   208e8:	bl	115c8 <lseek64@plt>
   208ec:	str	r1, [sp, #12]
   208f0:	str	r0, [sp, #8]
   208f4:	ldr	r0, [sp, #8]
   208f8:	ldr	r1, [sp, #12]
   208fc:	and	r0, r0, r1
   20900:	cmn	r0, #1
   20904:	bne	20918 <__assert_fail@plt+0xf0a4>
   20908:	b	2090c <__assert_fail@plt+0xf098>
   2090c:	mvn	r0, #0
   20910:	str	r0, [fp, #-4]
   20914:	b	20968 <__assert_fail@plt+0xf0f4>
   20918:	ldr	r0, [fp, #-8]
   2091c:	ldr	r1, [r0]
   20920:	bic	r1, r1, #16
   20924:	str	r1, [r0]
   20928:	ldr	r0, [sp, #8]
   2092c:	ldr	r1, [sp, #12]
   20930:	ldr	r2, [fp, #-8]
   20934:	str	r1, [r2, #84]	; 0x54
   20938:	str	r0, [r2, #80]	; 0x50
   2093c:	movw	r0, #0
   20940:	str	r0, [fp, #-4]
   20944:	b	20968 <__assert_fail@plt+0xf0f4>
   20948:	ldr	r0, [fp, #-8]
   2094c:	ldr	r2, [sp, #16]
   20950:	ldr	r3, [sp, #20]
   20954:	ldr	r1, [fp, #8]
   20958:	mov	ip, sp
   2095c:	str	r1, [ip]
   20960:	bl	11760 <fseeko64@plt>
   20964:	str	r0, [fp, #-4]
   20968:	ldr	r0, [fp, #-4]
   2096c:	mov	sp, fp
   20970:	pop	{fp, pc}
   20974:	push	{fp, lr}
   20978:	mov	fp, sp
   2097c:	bl	11700 <__errno_location@plt>
   20980:	movw	r1, #12
   20984:	str	r1, [r0]
   20988:	movw	r0, #0
   2098c:	pop	{fp, pc}
   20990:	push	{fp, lr}
   20994:	mov	fp, sp
   20998:	sub	sp, sp, #8
   2099c:	str	r0, [sp, #4]
   209a0:	ldr	r0, [sp, #4]
   209a4:	cmn	r0, #1
   209a8:	bhi	209bc <__assert_fail@plt+0xf148>
   209ac:	ldr	r0, [sp, #4]
   209b0:	bl	1f930 <__assert_fail@plt+0xe0bc>
   209b4:	str	r0, [sp]
   209b8:	b	209c4 <__assert_fail@plt+0xf150>
   209bc:	bl	20974 <__assert_fail@plt+0xf100>
   209c0:	str	r0, [sp]
   209c4:	ldr	r0, [sp]
   209c8:	mov	sp, fp
   209cc:	pop	{fp, pc}
   209d0:	push	{fp, lr}
   209d4:	mov	fp, sp
   209d8:	sub	sp, sp, #16
   209dc:	str	r0, [fp, #-4]
   209e0:	str	r1, [sp, #8]
   209e4:	ldr	r0, [sp, #8]
   209e8:	cmn	r0, #1
   209ec:	bhi	20a24 <__assert_fail@plt+0xf1b0>
   209f0:	ldr	r0, [fp, #-4]
   209f4:	ldr	r1, [sp, #8]
   209f8:	ldr	r2, [sp, #8]
   209fc:	cmp	r2, #0
   20a00:	movw	r2, #0
   20a04:	movne	r2, #1
   20a08:	mvn	r3, #0
   20a0c:	eor	r2, r2, r3
   20a10:	and	r2, r2, #1
   20a14:	orr	r1, r1, r2
   20a18:	bl	1f9a0 <__assert_fail@plt+0xe12c>
   20a1c:	str	r0, [sp, #4]
   20a20:	b	20a2c <__assert_fail@plt+0xf1b8>
   20a24:	bl	20974 <__assert_fail@plt+0xf100>
   20a28:	str	r0, [sp, #4]
   20a2c:	ldr	r0, [sp, #4]
   20a30:	mov	sp, fp
   20a34:	pop	{fp, pc}
   20a38:	push	{fp, lr}
   20a3c:	mov	fp, sp
   20a40:	sub	sp, sp, #16
   20a44:	str	r0, [sp, #8]
   20a48:	str	r1, [sp, #4]
   20a4c:	ldr	r0, [sp, #8]
   20a50:	mvn	r1, #0
   20a54:	cmp	r1, r0
   20a58:	bcs	20a7c <__assert_fail@plt+0xf208>
   20a5c:	ldr	r0, [sp, #4]
   20a60:	cmp	r0, #0
   20a64:	beq	20a74 <__assert_fail@plt+0xf200>
   20a68:	bl	20974 <__assert_fail@plt+0xf100>
   20a6c:	str	r0, [fp, #-4]
   20a70:	b	20abc <__assert_fail@plt+0xf248>
   20a74:	movw	r0, #0
   20a78:	str	r0, [sp, #8]
   20a7c:	ldr	r0, [sp, #4]
   20a80:	mvn	r1, #0
   20a84:	cmp	r1, r0
   20a88:	bcs	20aac <__assert_fail@plt+0xf238>
   20a8c:	ldr	r0, [sp, #8]
   20a90:	cmp	r0, #0
   20a94:	beq	20aa4 <__assert_fail@plt+0xf230>
   20a98:	bl	20974 <__assert_fail@plt+0xf100>
   20a9c:	str	r0, [fp, #-4]
   20aa0:	b	20abc <__assert_fail@plt+0xf248>
   20aa4:	movw	r0, #0
   20aa8:	str	r0, [sp, #4]
   20aac:	ldr	r0, [sp, #8]
   20ab0:	ldr	r1, [sp, #4]
   20ab4:	bl	1f894 <__assert_fail@plt+0xe020>
   20ab8:	str	r0, [fp, #-4]
   20abc:	ldr	r0, [fp, #-4]
   20ac0:	mov	sp, fp
   20ac4:	pop	{fp, pc}
   20ac8:	push	{fp, lr}
   20acc:	mov	fp, sp
   20ad0:	sub	sp, sp, #16
   20ad4:	str	r0, [fp, #-4]
   20ad8:	str	r1, [sp, #8]
   20adc:	str	r2, [sp, #4]
   20ae0:	ldr	r0, [sp, #8]
   20ae4:	cmp	r0, #0
   20ae8:	beq	20af8 <__assert_fail@plt+0xf284>
   20aec:	ldr	r0, [sp, #4]
   20af0:	cmp	r0, #0
   20af4:	bne	20b04 <__assert_fail@plt+0xf290>
   20af8:	movw	r0, #1
   20afc:	str	r0, [sp, #4]
   20b00:	str	r0, [sp, #8]
   20b04:	ldr	r0, [sp, #8]
   20b08:	cmn	r0, #1
   20b0c:	bhi	20b34 <__assert_fail@plt+0xf2c0>
   20b10:	ldr	r0, [sp, #4]
   20b14:	cmn	r0, #1
   20b18:	bhi	20b34 <__assert_fail@plt+0xf2c0>
   20b1c:	ldr	r0, [fp, #-4]
   20b20:	ldr	r1, [sp, #8]
   20b24:	ldr	r2, [sp, #4]
   20b28:	bl	20cfc <__assert_fail@plt+0xf488>
   20b2c:	str	r0, [sp]
   20b30:	b	20b3c <__assert_fail@plt+0xf2c8>
   20b34:	bl	20974 <__assert_fail@plt+0xf100>
   20b38:	str	r0, [sp]
   20b3c:	ldr	r0, [sp]
   20b40:	mov	sp, fp
   20b44:	pop	{fp, pc}
   20b48:	push	{fp, lr}
   20b4c:	mov	fp, sp
   20b50:	sub	sp, sp, #8
   20b54:	movw	r0, #14
   20b58:	bl	11790 <nl_langinfo@plt>
   20b5c:	str	r0, [sp, #4]
   20b60:	ldr	r0, [sp, #4]
   20b64:	movw	r1, #0
   20b68:	cmp	r0, r1
   20b6c:	bne	20b7c <__assert_fail@plt+0xf308>
   20b70:	movw	r0, #14487	; 0x3897
   20b74:	movt	r0, #2
   20b78:	str	r0, [sp, #4]
   20b7c:	ldr	r0, [sp, #4]
   20b80:	ldrb	r0, [r0]
   20b84:	cmp	r0, #0
   20b88:	bne	20b98 <__assert_fail@plt+0xf324>
   20b8c:	movw	r0, #17788	; 0x457c
   20b90:	movt	r0, #2
   20b94:	str	r0, [sp, #4]
   20b98:	ldr	r0, [sp, #4]
   20b9c:	mov	sp, fp
   20ba0:	pop	{fp, pc}
   20ba4:	push	{fp, lr}
   20ba8:	mov	fp, sp
   20bac:	sub	sp, sp, #32
   20bb0:	str	r0, [fp, #-8]
   20bb4:	str	r1, [fp, #-12]
   20bb8:	str	r2, [sp, #16]
   20bbc:	str	r3, [sp, #12]
   20bc0:	ldr	r0, [fp, #-8]
   20bc4:	movw	r1, #0
   20bc8:	cmp	r0, r1
   20bcc:	bne	20bd8 <__assert_fail@plt+0xf364>
   20bd0:	add	r0, sp, #4
   20bd4:	str	r0, [fp, #-8]
   20bd8:	ldr	r0, [fp, #-8]
   20bdc:	ldr	r1, [fp, #-12]
   20be0:	ldr	r2, [sp, #16]
   20be4:	ldr	r3, [sp, #12]
   20be8:	bl	11604 <mbrtowc@plt>
   20bec:	str	r0, [sp, #8]
   20bf0:	ldr	r0, [sp, #8]
   20bf4:	mvn	r1, #1
   20bf8:	cmp	r1, r0
   20bfc:	bhi	20c40 <__assert_fail@plt+0xf3cc>
   20c00:	ldr	r0, [sp, #16]
   20c04:	cmp	r0, #0
   20c08:	beq	20c40 <__assert_fail@plt+0xf3cc>
   20c0c:	movw	r0, #0
   20c10:	bl	22cd0 <__assert_fail@plt+0x1145c>
   20c14:	tst	r0, #1
   20c18:	bne	20c40 <__assert_fail@plt+0xf3cc>
   20c1c:	ldr	r0, [fp, #-12]
   20c20:	ldrb	r0, [r0]
   20c24:	strb	r0, [sp, #3]
   20c28:	ldrb	r0, [sp, #3]
   20c2c:	ldr	r1, [fp, #-8]
   20c30:	str	r0, [r1]
   20c34:	movw	r0, #1
   20c38:	str	r0, [fp, #-4]
   20c3c:	b	20c48 <__assert_fail@plt+0xf3d4>
   20c40:	ldr	r0, [sp, #8]
   20c44:	str	r0, [fp, #-4]
   20c48:	ldr	r0, [fp, #-4]
   20c4c:	mov	sp, fp
   20c50:	pop	{fp, pc}
   20c54:	push	{fp, lr}
   20c58:	mov	fp, sp
   20c5c:	sub	sp, sp, #16
   20c60:	str	r0, [fp, #-4]
   20c64:	movw	r0, #20840	; 0x5168
   20c68:	movt	r0, #3
   20c6c:	ldr	r0, [r0]
   20c70:	ldr	r1, [fp, #-4]
   20c74:	movw	r2, #17794	; 0x4582
   20c78:	movt	r2, #2
   20c7c:	str	r0, [sp, #8]
   20c80:	mov	r0, r2
   20c84:	str	r1, [sp, #4]
   20c88:	bl	116b8 <gettext@plt>
   20c8c:	ldr	r1, [sp, #8]
   20c90:	str	r0, [sp]
   20c94:	mov	r0, r1
   20c98:	ldr	r1, [sp, #4]
   20c9c:	ldr	r2, [sp]
   20ca0:	bl	11610 <error@plt>
   20ca4:	bl	11838 <abort@plt>
   20ca8:	push	{fp, lr}
   20cac:	mov	fp, sp
   20cb0:	sub	sp, sp, #16
   20cb4:	str	r0, [fp, #-4]
   20cb8:	movw	r0, #20840	; 0x5168
   20cbc:	movt	r0, #3
   20cc0:	ldr	r0, [r0]
   20cc4:	ldr	r1, [fp, #-4]
   20cc8:	movw	r2, #17837	; 0x45ad
   20ccc:	movt	r2, #2
   20cd0:	str	r0, [sp, #8]
   20cd4:	mov	r0, r2
   20cd8:	str	r1, [sp, #4]
   20cdc:	bl	116b8 <gettext@plt>
   20ce0:	ldr	r1, [sp, #8]
   20ce4:	str	r0, [sp]
   20ce8:	mov	r0, r1
   20cec:	ldr	r1, [sp, #4]
   20cf0:	ldr	r2, [sp]
   20cf4:	bl	11610 <error@plt>
   20cf8:	bl	11838 <abort@plt>
   20cfc:	push	{fp, lr}
   20d00:	mov	fp, sp
   20d04:	sub	sp, sp, #96	; 0x60
   20d08:	str	r0, [fp, #-8]
   20d0c:	str	r1, [fp, #-12]
   20d10:	str	r2, [fp, #-16]
   20d14:	b	210cc <__assert_fail@plt+0xf858>
   20d18:	b	20eec <__assert_fail@plt+0xf678>
   20d1c:	ldr	r0, [fp, #-16]
   20d20:	cmp	r0, #0
   20d24:	bcs	20e28 <__assert_fail@plt+0xf5b4>
   20d28:	ldr	r0, [fp, #-12]
   20d2c:	cmp	r0, #0
   20d30:	bcs	20db8 <__assert_fail@plt+0xf544>
   20d34:	b	20d54 <__assert_fail@plt+0xf4e0>
   20d38:	ldr	r0, [fp, #-12]
   20d3c:	ldr	r1, [fp, #-16]
   20d40:	movw	r2, #127	; 0x7f
   20d44:	udiv	r1, r2, r1
   20d48:	cmp	r0, r1
   20d4c:	bcc	20ebc <__assert_fail@plt+0xf648>
   20d50:	b	20ed4 <__assert_fail@plt+0xf660>
   20d54:	b	20d68 <__assert_fail@plt+0xf4f4>
   20d58:	ldr	r0, [fp, #-16]
   20d5c:	cmp	r0, #1
   20d60:	bcc	20d78 <__assert_fail@plt+0xf504>
   20d64:	b	20d84 <__assert_fail@plt+0xf510>
   20d68:	ldr	r0, [fp, #-16]
   20d6c:	movw	r1, #0
   20d70:	cmp	r1, r0
   20d74:	bcs	20d84 <__assert_fail@plt+0xf510>
   20d78:	movw	r0, #0
   20d7c:	str	r0, [fp, #-24]	; 0xffffffe8
   20d80:	b	20d9c <__assert_fail@plt+0xf528>
   20d84:	ldr	r0, [fp, #-16]
   20d88:	movw	r1, #0
   20d8c:	sub	r0, r1, r0
   20d90:	movw	r1, #127	; 0x7f
   20d94:	udiv	r0, r1, r0
   20d98:	str	r0, [fp, #-24]	; 0xffffffe8
   20d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20da0:	ldr	r1, [fp, #-12]
   20da4:	mvn	r2, #0
   20da8:	sub	r1, r2, r1
   20dac:	cmp	r0, r1
   20db0:	bls	20ebc <__assert_fail@plt+0xf648>
   20db4:	b	20ed4 <__assert_fail@plt+0xf660>
   20db8:	ldr	r0, [fp, #-16]
   20dbc:	cmn	r0, #1
   20dc0:	bne	20e0c <__assert_fail@plt+0xf598>
   20dc4:	b	20de4 <__assert_fail@plt+0xf570>
   20dc8:	ldr	r0, [fp, #-12]
   20dcc:	mvn	r1, #127	; 0x7f
   20dd0:	add	r0, r0, r1
   20dd4:	movw	r1, #0
   20dd8:	cmp	r1, r0
   20ddc:	bcc	20ebc <__assert_fail@plt+0xf648>
   20de0:	b	20ed4 <__assert_fail@plt+0xf660>
   20de4:	ldr	r0, [fp, #-12]
   20de8:	movw	r1, #0
   20dec:	cmp	r1, r0
   20df0:	bcs	20ed4 <__assert_fail@plt+0xf660>
   20df4:	ldr	r0, [fp, #-12]
   20df8:	sub	r0, r0, #1
   20dfc:	movw	r1, #127	; 0x7f
   20e00:	cmp	r1, r0
   20e04:	bcc	20ebc <__assert_fail@plt+0xf648>
   20e08:	b	20ed4 <__assert_fail@plt+0xf660>
   20e0c:	ldr	r0, [fp, #-16]
   20e10:	mvn	r1, #127	; 0x7f
   20e14:	udiv	r0, r1, r0
   20e18:	ldr	r1, [fp, #-12]
   20e1c:	cmp	r0, r1
   20e20:	bcc	20ebc <__assert_fail@plt+0xf648>
   20e24:	b	20ed4 <__assert_fail@plt+0xf660>
   20e28:	ldr	r0, [fp, #-16]
   20e2c:	cmp	r0, #0
   20e30:	bne	20e38 <__assert_fail@plt+0xf5c4>
   20e34:	b	20ed4 <__assert_fail@plt+0xf660>
   20e38:	ldr	r0, [fp, #-12]
   20e3c:	cmp	r0, #0
   20e40:	bcs	20ea4 <__assert_fail@plt+0xf630>
   20e44:	ldr	r0, [fp, #-12]
   20e48:	cmn	r0, #1
   20e4c:	bne	20e88 <__assert_fail@plt+0xf614>
   20e50:	b	20e70 <__assert_fail@plt+0xf5fc>
   20e54:	ldr	r0, [fp, #-16]
   20e58:	mvn	r1, #127	; 0x7f
   20e5c:	add	r0, r0, r1
   20e60:	movw	r1, #0
   20e64:	cmp	r1, r0
   20e68:	bcc	20ebc <__assert_fail@plt+0xf648>
   20e6c:	b	20ed4 <__assert_fail@plt+0xf660>
   20e70:	ldr	r0, [fp, #-16]
   20e74:	sub	r0, r0, #1
   20e78:	movw	r1, #127	; 0x7f
   20e7c:	cmp	r1, r0
   20e80:	bcc	20ebc <__assert_fail@plt+0xf648>
   20e84:	b	20ed4 <__assert_fail@plt+0xf660>
   20e88:	ldr	r0, [fp, #-12]
   20e8c:	mvn	r1, #127	; 0x7f
   20e90:	udiv	r0, r1, r0
   20e94:	ldr	r1, [fp, #-16]
   20e98:	cmp	r0, r1
   20e9c:	bcc	20ebc <__assert_fail@plt+0xf648>
   20ea0:	b	20ed4 <__assert_fail@plt+0xf660>
   20ea4:	ldr	r0, [fp, #-16]
   20ea8:	movw	r1, #127	; 0x7f
   20eac:	udiv	r0, r1, r0
   20eb0:	ldr	r1, [fp, #-12]
   20eb4:	cmp	r0, r1
   20eb8:	bcs	20ed4 <__assert_fail@plt+0xf660>
   20ebc:	ldr	r0, [fp, #-12]
   20ec0:	ldr	r1, [fp, #-16]
   20ec4:	mul	r0, r0, r1
   20ec8:	sxtb	r0, r0
   20ecc:	str	r0, [fp, #-20]	; 0xffffffec
   20ed0:	b	21ffc <__assert_fail@plt+0x10788>
   20ed4:	ldr	r0, [fp, #-12]
   20ed8:	ldr	r1, [fp, #-16]
   20edc:	mul	r0, r0, r1
   20ee0:	sxtb	r0, r0
   20ee4:	str	r0, [fp, #-20]	; 0xffffffec
   20ee8:	b	22014 <__assert_fail@plt+0x107a0>
   20eec:	ldr	r0, [fp, #-16]
   20ef0:	cmp	r0, #0
   20ef4:	bcs	21000 <__assert_fail@plt+0xf78c>
   20ef8:	ldr	r0, [fp, #-12]
   20efc:	cmp	r0, #0
   20f00:	bcs	20f88 <__assert_fail@plt+0xf714>
   20f04:	b	20f24 <__assert_fail@plt+0xf6b0>
   20f08:	ldr	r0, [fp, #-12]
   20f0c:	ldr	r1, [fp, #-16]
   20f10:	movw	r2, #255	; 0xff
   20f14:	udiv	r1, r2, r1
   20f18:	cmp	r0, r1
   20f1c:	bcc	2109c <__assert_fail@plt+0xf828>
   20f20:	b	210b4 <__assert_fail@plt+0xf840>
   20f24:	b	20f38 <__assert_fail@plt+0xf6c4>
   20f28:	ldr	r0, [fp, #-16]
   20f2c:	cmp	r0, #1
   20f30:	bcc	20f48 <__assert_fail@plt+0xf6d4>
   20f34:	b	20f54 <__assert_fail@plt+0xf6e0>
   20f38:	ldr	r0, [fp, #-16]
   20f3c:	movw	r1, #0
   20f40:	cmp	r1, r0
   20f44:	bcs	20f54 <__assert_fail@plt+0xf6e0>
   20f48:	movw	r0, #0
   20f4c:	str	r0, [fp, #-28]	; 0xffffffe4
   20f50:	b	20f6c <__assert_fail@plt+0xf6f8>
   20f54:	ldr	r0, [fp, #-16]
   20f58:	movw	r1, #0
   20f5c:	sub	r0, r1, r0
   20f60:	movw	r1, #255	; 0xff
   20f64:	udiv	r0, r1, r0
   20f68:	str	r0, [fp, #-28]	; 0xffffffe4
   20f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f70:	ldr	r1, [fp, #-12]
   20f74:	mvn	r2, #0
   20f78:	sub	r1, r2, r1
   20f7c:	cmp	r0, r1
   20f80:	bls	2109c <__assert_fail@plt+0xf828>
   20f84:	b	210b4 <__assert_fail@plt+0xf840>
   20f88:	b	20f90 <__assert_fail@plt+0xf71c>
   20f8c:	b	20f94 <__assert_fail@plt+0xf720>
   20f90:	b	20fe4 <__assert_fail@plt+0xf770>
   20f94:	ldr	r0, [fp, #-16]
   20f98:	cmn	r0, #1
   20f9c:	bne	20fe4 <__assert_fail@plt+0xf770>
   20fa0:	b	20fbc <__assert_fail@plt+0xf748>
   20fa4:	ldr	r0, [fp, #-12]
   20fa8:	add	r0, r0, #0
   20fac:	movw	r1, #0
   20fb0:	cmp	r1, r0
   20fb4:	bcc	2109c <__assert_fail@plt+0xf828>
   20fb8:	b	210b4 <__assert_fail@plt+0xf840>
   20fbc:	ldr	r0, [fp, #-12]
   20fc0:	movw	r1, #0
   20fc4:	cmp	r1, r0
   20fc8:	bcs	210b4 <__assert_fail@plt+0xf840>
   20fcc:	ldr	r0, [fp, #-12]
   20fd0:	sub	r0, r0, #1
   20fd4:	mvn	r1, #0
   20fd8:	cmp	r1, r0
   20fdc:	bcc	2109c <__assert_fail@plt+0xf828>
   20fe0:	b	210b4 <__assert_fail@plt+0xf840>
   20fe4:	ldr	r0, [fp, #-16]
   20fe8:	movw	r1, #0
   20fec:	udiv	r0, r1, r0
   20ff0:	ldr	r1, [fp, #-12]
   20ff4:	cmp	r0, r1
   20ff8:	bcc	2109c <__assert_fail@plt+0xf828>
   20ffc:	b	210b4 <__assert_fail@plt+0xf840>
   21000:	ldr	r0, [fp, #-16]
   21004:	cmp	r0, #0
   21008:	bne	21010 <__assert_fail@plt+0xf79c>
   2100c:	b	210b4 <__assert_fail@plt+0xf840>
   21010:	ldr	r0, [fp, #-12]
   21014:	cmp	r0, #0
   21018:	bcs	21084 <__assert_fail@plt+0xf810>
   2101c:	b	21024 <__assert_fail@plt+0xf7b0>
   21020:	b	21028 <__assert_fail@plt+0xf7b4>
   21024:	b	21068 <__assert_fail@plt+0xf7f4>
   21028:	ldr	r0, [fp, #-12]
   2102c:	cmn	r0, #1
   21030:	bne	21068 <__assert_fail@plt+0xf7f4>
   21034:	b	21050 <__assert_fail@plt+0xf7dc>
   21038:	ldr	r0, [fp, #-16]
   2103c:	add	r0, r0, #0
   21040:	movw	r1, #0
   21044:	cmp	r1, r0
   21048:	bcc	2109c <__assert_fail@plt+0xf828>
   2104c:	b	210b4 <__assert_fail@plt+0xf840>
   21050:	ldr	r0, [fp, #-16]
   21054:	sub	r0, r0, #1
   21058:	mvn	r1, #0
   2105c:	cmp	r1, r0
   21060:	bcc	2109c <__assert_fail@plt+0xf828>
   21064:	b	210b4 <__assert_fail@plt+0xf840>
   21068:	ldr	r0, [fp, #-12]
   2106c:	movw	r1, #0
   21070:	udiv	r0, r1, r0
   21074:	ldr	r1, [fp, #-16]
   21078:	cmp	r0, r1
   2107c:	bcc	2109c <__assert_fail@plt+0xf828>
   21080:	b	210b4 <__assert_fail@plt+0xf840>
   21084:	ldr	r0, [fp, #-16]
   21088:	movw	r1, #255	; 0xff
   2108c:	udiv	r0, r1, r0
   21090:	ldr	r1, [fp, #-12]
   21094:	cmp	r0, r1
   21098:	bcs	210b4 <__assert_fail@plt+0xf840>
   2109c:	ldr	r0, [fp, #-12]
   210a0:	ldr	r1, [fp, #-16]
   210a4:	mul	r0, r0, r1
   210a8:	and	r0, r0, #255	; 0xff
   210ac:	str	r0, [fp, #-20]	; 0xffffffec
   210b0:	b	21ffc <__assert_fail@plt+0x10788>
   210b4:	ldr	r0, [fp, #-12]
   210b8:	ldr	r1, [fp, #-16]
   210bc:	mul	r0, r0, r1
   210c0:	and	r0, r0, #255	; 0xff
   210c4:	str	r0, [fp, #-20]	; 0xffffffec
   210c8:	b	22014 <__assert_fail@plt+0x107a0>
   210cc:	b	21484 <__assert_fail@plt+0xfc10>
   210d0:	b	212a4 <__assert_fail@plt+0xfa30>
   210d4:	ldr	r0, [fp, #-16]
   210d8:	cmp	r0, #0
   210dc:	bcs	211e0 <__assert_fail@plt+0xf96c>
   210e0:	ldr	r0, [fp, #-12]
   210e4:	cmp	r0, #0
   210e8:	bcs	21170 <__assert_fail@plt+0xf8fc>
   210ec:	b	2110c <__assert_fail@plt+0xf898>
   210f0:	ldr	r0, [fp, #-12]
   210f4:	ldr	r1, [fp, #-16]
   210f8:	movw	r2, #32767	; 0x7fff
   210fc:	udiv	r1, r2, r1
   21100:	cmp	r0, r1
   21104:	bcc	21274 <__assert_fail@plt+0xfa00>
   21108:	b	2128c <__assert_fail@plt+0xfa18>
   2110c:	b	21120 <__assert_fail@plt+0xf8ac>
   21110:	ldr	r0, [fp, #-16]
   21114:	cmp	r0, #1
   21118:	bcc	21130 <__assert_fail@plt+0xf8bc>
   2111c:	b	2113c <__assert_fail@plt+0xf8c8>
   21120:	ldr	r0, [fp, #-16]
   21124:	movw	r1, #0
   21128:	cmp	r1, r0
   2112c:	bcs	2113c <__assert_fail@plt+0xf8c8>
   21130:	movw	r0, #0
   21134:	str	r0, [fp, #-32]	; 0xffffffe0
   21138:	b	21154 <__assert_fail@plt+0xf8e0>
   2113c:	ldr	r0, [fp, #-16]
   21140:	movw	r1, #0
   21144:	sub	r0, r1, r0
   21148:	movw	r1, #32767	; 0x7fff
   2114c:	udiv	r0, r1, r0
   21150:	str	r0, [fp, #-32]	; 0xffffffe0
   21154:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21158:	ldr	r1, [fp, #-12]
   2115c:	mvn	r2, #0
   21160:	sub	r1, r2, r1
   21164:	cmp	r0, r1
   21168:	bls	21274 <__assert_fail@plt+0xfa00>
   2116c:	b	2128c <__assert_fail@plt+0xfa18>
   21170:	ldr	r0, [fp, #-16]
   21174:	cmn	r0, #1
   21178:	bne	211c4 <__assert_fail@plt+0xf950>
   2117c:	b	2119c <__assert_fail@plt+0xf928>
   21180:	ldr	r0, [pc, #3760]	; 22038 <__assert_fail@plt+0x107c4>
   21184:	ldr	r1, [fp, #-12]
   21188:	add	r0, r1, r0
   2118c:	movw	r1, #0
   21190:	cmp	r1, r0
   21194:	bcc	21274 <__assert_fail@plt+0xfa00>
   21198:	b	2128c <__assert_fail@plt+0xfa18>
   2119c:	ldr	r0, [fp, #-12]
   211a0:	movw	r1, #0
   211a4:	cmp	r1, r0
   211a8:	bcs	2128c <__assert_fail@plt+0xfa18>
   211ac:	ldr	r0, [fp, #-12]
   211b0:	sub	r0, r0, #1
   211b4:	movw	r1, #32767	; 0x7fff
   211b8:	cmp	r1, r0
   211bc:	bcc	21274 <__assert_fail@plt+0xfa00>
   211c0:	b	2128c <__assert_fail@plt+0xfa18>
   211c4:	ldr	r0, [pc, #3692]	; 22038 <__assert_fail@plt+0x107c4>
   211c8:	ldr	r1, [fp, #-16]
   211cc:	udiv	r0, r0, r1
   211d0:	ldr	r1, [fp, #-12]
   211d4:	cmp	r0, r1
   211d8:	bcc	21274 <__assert_fail@plt+0xfa00>
   211dc:	b	2128c <__assert_fail@plt+0xfa18>
   211e0:	ldr	r0, [fp, #-16]
   211e4:	cmp	r0, #0
   211e8:	bne	211f0 <__assert_fail@plt+0xf97c>
   211ec:	b	2128c <__assert_fail@plt+0xfa18>
   211f0:	ldr	r0, [fp, #-12]
   211f4:	cmp	r0, #0
   211f8:	bcs	2125c <__assert_fail@plt+0xf9e8>
   211fc:	ldr	r0, [fp, #-12]
   21200:	cmn	r0, #1
   21204:	bne	21240 <__assert_fail@plt+0xf9cc>
   21208:	b	21228 <__assert_fail@plt+0xf9b4>
   2120c:	ldr	r0, [pc, #3620]	; 22038 <__assert_fail@plt+0x107c4>
   21210:	ldr	r1, [fp, #-16]
   21214:	add	r0, r1, r0
   21218:	movw	r1, #0
   2121c:	cmp	r1, r0
   21220:	bcc	21274 <__assert_fail@plt+0xfa00>
   21224:	b	2128c <__assert_fail@plt+0xfa18>
   21228:	ldr	r0, [fp, #-16]
   2122c:	sub	r0, r0, #1
   21230:	movw	r1, #32767	; 0x7fff
   21234:	cmp	r1, r0
   21238:	bcc	21274 <__assert_fail@plt+0xfa00>
   2123c:	b	2128c <__assert_fail@plt+0xfa18>
   21240:	ldr	r0, [pc, #3568]	; 22038 <__assert_fail@plt+0x107c4>
   21244:	ldr	r1, [fp, #-12]
   21248:	udiv	r0, r0, r1
   2124c:	ldr	r1, [fp, #-16]
   21250:	cmp	r0, r1
   21254:	bcc	21274 <__assert_fail@plt+0xfa00>
   21258:	b	2128c <__assert_fail@plt+0xfa18>
   2125c:	ldr	r0, [fp, #-16]
   21260:	movw	r1, #32767	; 0x7fff
   21264:	udiv	r0, r1, r0
   21268:	ldr	r1, [fp, #-12]
   2126c:	cmp	r0, r1
   21270:	bcs	2128c <__assert_fail@plt+0xfa18>
   21274:	ldr	r0, [fp, #-12]
   21278:	ldr	r1, [fp, #-16]
   2127c:	mul	r0, r0, r1
   21280:	sxth	r0, r0
   21284:	str	r0, [fp, #-20]	; 0xffffffec
   21288:	b	21ffc <__assert_fail@plt+0x10788>
   2128c:	ldr	r0, [fp, #-12]
   21290:	ldr	r1, [fp, #-16]
   21294:	mul	r0, r0, r1
   21298:	sxth	r0, r0
   2129c:	str	r0, [fp, #-20]	; 0xffffffec
   212a0:	b	22014 <__assert_fail@plt+0x107a0>
   212a4:	ldr	r0, [fp, #-16]
   212a8:	cmp	r0, #0
   212ac:	bcs	213b8 <__assert_fail@plt+0xfb44>
   212b0:	ldr	r0, [fp, #-12]
   212b4:	cmp	r0, #0
   212b8:	bcs	21340 <__assert_fail@plt+0xfacc>
   212bc:	b	212dc <__assert_fail@plt+0xfa68>
   212c0:	ldr	r0, [fp, #-12]
   212c4:	ldr	r1, [fp, #-16]
   212c8:	movw	r2, #65535	; 0xffff
   212cc:	udiv	r1, r2, r1
   212d0:	cmp	r0, r1
   212d4:	bcc	21454 <__assert_fail@plt+0xfbe0>
   212d8:	b	2146c <__assert_fail@plt+0xfbf8>
   212dc:	b	212f0 <__assert_fail@plt+0xfa7c>
   212e0:	ldr	r0, [fp, #-16]
   212e4:	cmp	r0, #1
   212e8:	bcc	21300 <__assert_fail@plt+0xfa8c>
   212ec:	b	2130c <__assert_fail@plt+0xfa98>
   212f0:	ldr	r0, [fp, #-16]
   212f4:	movw	r1, #0
   212f8:	cmp	r1, r0
   212fc:	bcs	2130c <__assert_fail@plt+0xfa98>
   21300:	movw	r0, #0
   21304:	str	r0, [fp, #-36]	; 0xffffffdc
   21308:	b	21324 <__assert_fail@plt+0xfab0>
   2130c:	ldr	r0, [fp, #-16]
   21310:	movw	r1, #0
   21314:	sub	r0, r1, r0
   21318:	movw	r1, #65535	; 0xffff
   2131c:	udiv	r0, r1, r0
   21320:	str	r0, [fp, #-36]	; 0xffffffdc
   21324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21328:	ldr	r1, [fp, #-12]
   2132c:	mvn	r2, #0
   21330:	sub	r1, r2, r1
   21334:	cmp	r0, r1
   21338:	bls	21454 <__assert_fail@plt+0xfbe0>
   2133c:	b	2146c <__assert_fail@plt+0xfbf8>
   21340:	b	21348 <__assert_fail@plt+0xfad4>
   21344:	b	2134c <__assert_fail@plt+0xfad8>
   21348:	b	2139c <__assert_fail@plt+0xfb28>
   2134c:	ldr	r0, [fp, #-16]
   21350:	cmn	r0, #1
   21354:	bne	2139c <__assert_fail@plt+0xfb28>
   21358:	b	21374 <__assert_fail@plt+0xfb00>
   2135c:	ldr	r0, [fp, #-12]
   21360:	add	r0, r0, #0
   21364:	movw	r1, #0
   21368:	cmp	r1, r0
   2136c:	bcc	21454 <__assert_fail@plt+0xfbe0>
   21370:	b	2146c <__assert_fail@plt+0xfbf8>
   21374:	ldr	r0, [fp, #-12]
   21378:	movw	r1, #0
   2137c:	cmp	r1, r0
   21380:	bcs	2146c <__assert_fail@plt+0xfbf8>
   21384:	ldr	r0, [fp, #-12]
   21388:	sub	r0, r0, #1
   2138c:	mvn	r1, #0
   21390:	cmp	r1, r0
   21394:	bcc	21454 <__assert_fail@plt+0xfbe0>
   21398:	b	2146c <__assert_fail@plt+0xfbf8>
   2139c:	ldr	r0, [fp, #-16]
   213a0:	movw	r1, #0
   213a4:	udiv	r0, r1, r0
   213a8:	ldr	r1, [fp, #-12]
   213ac:	cmp	r0, r1
   213b0:	bcc	21454 <__assert_fail@plt+0xfbe0>
   213b4:	b	2146c <__assert_fail@plt+0xfbf8>
   213b8:	ldr	r0, [fp, #-16]
   213bc:	cmp	r0, #0
   213c0:	bne	213c8 <__assert_fail@plt+0xfb54>
   213c4:	b	2146c <__assert_fail@plt+0xfbf8>
   213c8:	ldr	r0, [fp, #-12]
   213cc:	cmp	r0, #0
   213d0:	bcs	2143c <__assert_fail@plt+0xfbc8>
   213d4:	b	213dc <__assert_fail@plt+0xfb68>
   213d8:	b	213e0 <__assert_fail@plt+0xfb6c>
   213dc:	b	21420 <__assert_fail@plt+0xfbac>
   213e0:	ldr	r0, [fp, #-12]
   213e4:	cmn	r0, #1
   213e8:	bne	21420 <__assert_fail@plt+0xfbac>
   213ec:	b	21408 <__assert_fail@plt+0xfb94>
   213f0:	ldr	r0, [fp, #-16]
   213f4:	add	r0, r0, #0
   213f8:	movw	r1, #0
   213fc:	cmp	r1, r0
   21400:	bcc	21454 <__assert_fail@plt+0xfbe0>
   21404:	b	2146c <__assert_fail@plt+0xfbf8>
   21408:	ldr	r0, [fp, #-16]
   2140c:	sub	r0, r0, #1
   21410:	mvn	r1, #0
   21414:	cmp	r1, r0
   21418:	bcc	21454 <__assert_fail@plt+0xfbe0>
   2141c:	b	2146c <__assert_fail@plt+0xfbf8>
   21420:	ldr	r0, [fp, #-12]
   21424:	movw	r1, #0
   21428:	udiv	r0, r1, r0
   2142c:	ldr	r1, [fp, #-16]
   21430:	cmp	r0, r1
   21434:	bcc	21454 <__assert_fail@plt+0xfbe0>
   21438:	b	2146c <__assert_fail@plt+0xfbf8>
   2143c:	ldr	r0, [fp, #-16]
   21440:	movw	r1, #65535	; 0xffff
   21444:	udiv	r0, r1, r0
   21448:	ldr	r1, [fp, #-12]
   2144c:	cmp	r0, r1
   21450:	bcs	2146c <__assert_fail@plt+0xfbf8>
   21454:	ldr	r0, [fp, #-12]
   21458:	ldr	r1, [fp, #-16]
   2145c:	mul	r0, r0, r1
   21460:	uxth	r0, r0
   21464:	str	r0, [fp, #-20]	; 0xffffffec
   21468:	b	21ffc <__assert_fail@plt+0x10788>
   2146c:	ldr	r0, [fp, #-12]
   21470:	ldr	r1, [fp, #-16]
   21474:	mul	r0, r0, r1
   21478:	uxth	r0, r0
   2147c:	str	r0, [fp, #-20]	; 0xffffffec
   21480:	b	22014 <__assert_fail@plt+0x107a0>
   21484:	b	21488 <__assert_fail@plt+0xfc14>
   21488:	b	2164c <__assert_fail@plt+0xfdd8>
   2148c:	ldr	r0, [fp, #-16]
   21490:	cmp	r0, #0
   21494:	bcs	21594 <__assert_fail@plt+0xfd20>
   21498:	ldr	r0, [fp, #-12]
   2149c:	cmp	r0, #0
   214a0:	bcs	21528 <__assert_fail@plt+0xfcb4>
   214a4:	b	214c4 <__assert_fail@plt+0xfc50>
   214a8:	ldr	r0, [pc, #2944]	; 22030 <__assert_fail@plt+0x107bc>
   214ac:	ldr	r1, [fp, #-12]
   214b0:	ldr	r2, [fp, #-16]
   214b4:	udiv	r0, r0, r2
   214b8:	cmp	r1, r0
   214bc:	bcc	21624 <__assert_fail@plt+0xfdb0>
   214c0:	b	21638 <__assert_fail@plt+0xfdc4>
   214c4:	b	214d8 <__assert_fail@plt+0xfc64>
   214c8:	ldr	r0, [fp, #-16]
   214cc:	cmp	r0, #1
   214d0:	bcc	214e8 <__assert_fail@plt+0xfc74>
   214d4:	b	214f4 <__assert_fail@plt+0xfc80>
   214d8:	ldr	r0, [fp, #-16]
   214dc:	movw	r1, #0
   214e0:	cmp	r1, r0
   214e4:	bcs	214f4 <__assert_fail@plt+0xfc80>
   214e8:	movw	r0, #0
   214ec:	str	r0, [fp, #-40]	; 0xffffffd8
   214f0:	b	2150c <__assert_fail@plt+0xfc98>
   214f4:	ldr	r0, [pc, #2868]	; 22030 <__assert_fail@plt+0x107bc>
   214f8:	ldr	r1, [fp, #-16]
   214fc:	movw	r2, #0
   21500:	sub	r1, r2, r1
   21504:	udiv	r0, r0, r1
   21508:	str	r0, [fp, #-40]	; 0xffffffd8
   2150c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21510:	ldr	r1, [fp, #-12]
   21514:	mvn	r2, #0
   21518:	sub	r1, r2, r1
   2151c:	cmp	r0, r1
   21520:	bls	21624 <__assert_fail@plt+0xfdb0>
   21524:	b	21638 <__assert_fail@plt+0xfdc4>
   21528:	ldr	r0, [fp, #-16]
   2152c:	cmn	r0, #1
   21530:	bne	21578 <__assert_fail@plt+0xfd04>
   21534:	b	21550 <__assert_fail@plt+0xfcdc>
   21538:	ldr	r0, [fp, #-12]
   2153c:	add	r0, r0, #-2147483648	; 0x80000000
   21540:	movw	r1, #0
   21544:	cmp	r1, r0
   21548:	bcc	21624 <__assert_fail@plt+0xfdb0>
   2154c:	b	21638 <__assert_fail@plt+0xfdc4>
   21550:	ldr	r0, [fp, #-12]
   21554:	movw	r1, #0
   21558:	cmp	r1, r0
   2155c:	bcs	21638 <__assert_fail@plt+0xfdc4>
   21560:	ldr	r0, [pc, #2760]	; 22030 <__assert_fail@plt+0x107bc>
   21564:	ldr	r1, [fp, #-12]
   21568:	sub	r1, r1, #1
   2156c:	cmp	r0, r1
   21570:	bcc	21624 <__assert_fail@plt+0xfdb0>
   21574:	b	21638 <__assert_fail@plt+0xfdc4>
   21578:	ldr	r0, [pc, #2740]	; 22034 <__assert_fail@plt+0x107c0>
   2157c:	ldr	r1, [fp, #-16]
   21580:	udiv	r0, r0, r1
   21584:	ldr	r1, [fp, #-12]
   21588:	cmp	r0, r1
   2158c:	bcc	21624 <__assert_fail@plt+0xfdb0>
   21590:	b	21638 <__assert_fail@plt+0xfdc4>
   21594:	ldr	r0, [fp, #-16]
   21598:	cmp	r0, #0
   2159c:	bne	215a4 <__assert_fail@plt+0xfd30>
   215a0:	b	21638 <__assert_fail@plt+0xfdc4>
   215a4:	ldr	r0, [fp, #-12]
   215a8:	cmp	r0, #0
   215ac:	bcs	2160c <__assert_fail@plt+0xfd98>
   215b0:	ldr	r0, [fp, #-12]
   215b4:	cmn	r0, #1
   215b8:	bne	215f0 <__assert_fail@plt+0xfd7c>
   215bc:	b	215d8 <__assert_fail@plt+0xfd64>
   215c0:	ldr	r0, [fp, #-16]
   215c4:	add	r0, r0, #-2147483648	; 0x80000000
   215c8:	movw	r1, #0
   215cc:	cmp	r1, r0
   215d0:	bcc	21624 <__assert_fail@plt+0xfdb0>
   215d4:	b	21638 <__assert_fail@plt+0xfdc4>
   215d8:	ldr	r0, [pc, #2640]	; 22030 <__assert_fail@plt+0x107bc>
   215dc:	ldr	r1, [fp, #-16]
   215e0:	sub	r1, r1, #1
   215e4:	cmp	r0, r1
   215e8:	bcc	21624 <__assert_fail@plt+0xfdb0>
   215ec:	b	21638 <__assert_fail@plt+0xfdc4>
   215f0:	ldr	r0, [pc, #2620]	; 22034 <__assert_fail@plt+0x107c0>
   215f4:	ldr	r1, [fp, #-12]
   215f8:	udiv	r0, r0, r1
   215fc:	ldr	r1, [fp, #-16]
   21600:	cmp	r0, r1
   21604:	bcc	21624 <__assert_fail@plt+0xfdb0>
   21608:	b	21638 <__assert_fail@plt+0xfdc4>
   2160c:	ldr	r0, [pc, #2588]	; 22030 <__assert_fail@plt+0x107bc>
   21610:	ldr	r1, [fp, #-16]
   21614:	udiv	r0, r0, r1
   21618:	ldr	r1, [fp, #-12]
   2161c:	cmp	r0, r1
   21620:	bcs	21638 <__assert_fail@plt+0xfdc4>
   21624:	ldr	r0, [fp, #-12]
   21628:	ldr	r1, [fp, #-16]
   2162c:	mul	r0, r0, r1
   21630:	str	r0, [fp, #-20]	; 0xffffffec
   21634:	b	21ffc <__assert_fail@plt+0x10788>
   21638:	ldr	r0, [fp, #-12]
   2163c:	ldr	r1, [fp, #-16]
   21640:	mul	r0, r0, r1
   21644:	str	r0, [fp, #-20]	; 0xffffffec
   21648:	b	22014 <__assert_fail@plt+0x107a0>
   2164c:	ldr	r0, [fp, #-16]
   21650:	cmp	r0, #0
   21654:	bcs	21760 <__assert_fail@plt+0xfeec>
   21658:	ldr	r0, [fp, #-12]
   2165c:	cmp	r0, #0
   21660:	bcs	216e8 <__assert_fail@plt+0xfe74>
   21664:	b	21684 <__assert_fail@plt+0xfe10>
   21668:	ldr	r0, [fp, #-12]
   2166c:	ldr	r1, [fp, #-16]
   21670:	mvn	r2, #0
   21674:	udiv	r1, r2, r1
   21678:	cmp	r0, r1
   2167c:	bcc	217fc <__assert_fail@plt+0xff88>
   21680:	b	21810 <__assert_fail@plt+0xff9c>
   21684:	b	21698 <__assert_fail@plt+0xfe24>
   21688:	ldr	r0, [fp, #-16]
   2168c:	cmp	r0, #1
   21690:	bcc	216a8 <__assert_fail@plt+0xfe34>
   21694:	b	216b4 <__assert_fail@plt+0xfe40>
   21698:	ldr	r0, [fp, #-16]
   2169c:	movw	r1, #0
   216a0:	cmp	r1, r0
   216a4:	bcs	216b4 <__assert_fail@plt+0xfe40>
   216a8:	movw	r0, #1
   216ac:	str	r0, [fp, #-44]	; 0xffffffd4
   216b0:	b	216cc <__assert_fail@plt+0xfe58>
   216b4:	ldr	r0, [fp, #-16]
   216b8:	movw	r1, #0
   216bc:	sub	r0, r1, r0
   216c0:	mvn	r1, #0
   216c4:	udiv	r0, r1, r0
   216c8:	str	r0, [fp, #-44]	; 0xffffffd4
   216cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   216d0:	ldr	r1, [fp, #-12]
   216d4:	mvn	r2, #0
   216d8:	sub	r1, r2, r1
   216dc:	cmp	r0, r1
   216e0:	bls	217fc <__assert_fail@plt+0xff88>
   216e4:	b	21810 <__assert_fail@plt+0xff9c>
   216e8:	b	216f0 <__assert_fail@plt+0xfe7c>
   216ec:	b	216f4 <__assert_fail@plt+0xfe80>
   216f0:	b	21744 <__assert_fail@plt+0xfed0>
   216f4:	ldr	r0, [fp, #-16]
   216f8:	cmn	r0, #1
   216fc:	bne	21744 <__assert_fail@plt+0xfed0>
   21700:	b	2171c <__assert_fail@plt+0xfea8>
   21704:	ldr	r0, [fp, #-12]
   21708:	add	r0, r0, #0
   2170c:	movw	r1, #0
   21710:	cmp	r1, r0
   21714:	bcc	217fc <__assert_fail@plt+0xff88>
   21718:	b	21810 <__assert_fail@plt+0xff9c>
   2171c:	ldr	r0, [fp, #-12]
   21720:	movw	r1, #0
   21724:	cmp	r1, r0
   21728:	bcs	21810 <__assert_fail@plt+0xff9c>
   2172c:	ldr	r0, [fp, #-12]
   21730:	sub	r0, r0, #1
   21734:	mvn	r1, #0
   21738:	cmp	r1, r0
   2173c:	bcc	217fc <__assert_fail@plt+0xff88>
   21740:	b	21810 <__assert_fail@plt+0xff9c>
   21744:	ldr	r0, [fp, #-16]
   21748:	movw	r1, #0
   2174c:	udiv	r0, r1, r0
   21750:	ldr	r1, [fp, #-12]
   21754:	cmp	r0, r1
   21758:	bcc	217fc <__assert_fail@plt+0xff88>
   2175c:	b	21810 <__assert_fail@plt+0xff9c>
   21760:	ldr	r0, [fp, #-16]
   21764:	cmp	r0, #0
   21768:	bne	21770 <__assert_fail@plt+0xfefc>
   2176c:	b	21810 <__assert_fail@plt+0xff9c>
   21770:	ldr	r0, [fp, #-12]
   21774:	cmp	r0, #0
   21778:	bcs	217e4 <__assert_fail@plt+0xff70>
   2177c:	b	21784 <__assert_fail@plt+0xff10>
   21780:	b	21788 <__assert_fail@plt+0xff14>
   21784:	b	217c8 <__assert_fail@plt+0xff54>
   21788:	ldr	r0, [fp, #-12]
   2178c:	cmn	r0, #1
   21790:	bne	217c8 <__assert_fail@plt+0xff54>
   21794:	b	217b0 <__assert_fail@plt+0xff3c>
   21798:	ldr	r0, [fp, #-16]
   2179c:	add	r0, r0, #0
   217a0:	movw	r1, #0
   217a4:	cmp	r1, r0
   217a8:	bcc	217fc <__assert_fail@plt+0xff88>
   217ac:	b	21810 <__assert_fail@plt+0xff9c>
   217b0:	ldr	r0, [fp, #-16]
   217b4:	sub	r0, r0, #1
   217b8:	mvn	r1, #0
   217bc:	cmp	r1, r0
   217c0:	bcc	217fc <__assert_fail@plt+0xff88>
   217c4:	b	21810 <__assert_fail@plt+0xff9c>
   217c8:	ldr	r0, [fp, #-12]
   217cc:	movw	r1, #0
   217d0:	udiv	r0, r1, r0
   217d4:	ldr	r1, [fp, #-16]
   217d8:	cmp	r0, r1
   217dc:	bcc	217fc <__assert_fail@plt+0xff88>
   217e0:	b	21810 <__assert_fail@plt+0xff9c>
   217e4:	ldr	r0, [fp, #-16]
   217e8:	mvn	r1, #0
   217ec:	udiv	r0, r1, r0
   217f0:	ldr	r1, [fp, #-12]
   217f4:	cmp	r0, r1
   217f8:	bcs	21810 <__assert_fail@plt+0xff9c>
   217fc:	ldr	r0, [fp, #-12]
   21800:	ldr	r1, [fp, #-16]
   21804:	mul	r0, r0, r1
   21808:	str	r0, [fp, #-20]	; 0xffffffec
   2180c:	b	21ffc <__assert_fail@plt+0x10788>
   21810:	ldr	r0, [fp, #-12]
   21814:	ldr	r1, [fp, #-16]
   21818:	mul	r0, r0, r1
   2181c:	str	r0, [fp, #-20]	; 0xffffffec
   21820:	b	22014 <__assert_fail@plt+0x107a0>
   21824:	b	21828 <__assert_fail@plt+0xffb4>
   21828:	b	219ec <__assert_fail@plt+0x10178>
   2182c:	ldr	r0, [fp, #-16]
   21830:	cmp	r0, #0
   21834:	bcs	21934 <__assert_fail@plt+0x100c0>
   21838:	ldr	r0, [fp, #-12]
   2183c:	cmp	r0, #0
   21840:	bcs	218c8 <__assert_fail@plt+0x10054>
   21844:	b	21864 <__assert_fail@plt+0xfff0>
   21848:	ldr	r0, [pc, #2016]	; 22030 <__assert_fail@plt+0x107bc>
   2184c:	ldr	r1, [fp, #-12]
   21850:	ldr	r2, [fp, #-16]
   21854:	udiv	r0, r0, r2
   21858:	cmp	r1, r0
   2185c:	bcc	219c4 <__assert_fail@plt+0x10150>
   21860:	b	219d8 <__assert_fail@plt+0x10164>
   21864:	b	21878 <__assert_fail@plt+0x10004>
   21868:	ldr	r0, [fp, #-16]
   2186c:	cmp	r0, #1
   21870:	bcc	21888 <__assert_fail@plt+0x10014>
   21874:	b	21894 <__assert_fail@plt+0x10020>
   21878:	ldr	r0, [fp, #-16]
   2187c:	movw	r1, #0
   21880:	cmp	r1, r0
   21884:	bcs	21894 <__assert_fail@plt+0x10020>
   21888:	movw	r0, #0
   2188c:	str	r0, [sp, #48]	; 0x30
   21890:	b	218ac <__assert_fail@plt+0x10038>
   21894:	ldr	r0, [pc, #1940]	; 22030 <__assert_fail@plt+0x107bc>
   21898:	ldr	r1, [fp, #-16]
   2189c:	movw	r2, #0
   218a0:	sub	r1, r2, r1
   218a4:	udiv	r0, r0, r1
   218a8:	str	r0, [sp, #48]	; 0x30
   218ac:	ldr	r0, [sp, #48]	; 0x30
   218b0:	ldr	r1, [fp, #-12]
   218b4:	mvn	r2, #0
   218b8:	sub	r1, r2, r1
   218bc:	cmp	r0, r1
   218c0:	bls	219c4 <__assert_fail@plt+0x10150>
   218c4:	b	219d8 <__assert_fail@plt+0x10164>
   218c8:	ldr	r0, [fp, #-16]
   218cc:	cmn	r0, #1
   218d0:	bne	21918 <__assert_fail@plt+0x100a4>
   218d4:	b	218f0 <__assert_fail@plt+0x1007c>
   218d8:	ldr	r0, [fp, #-12]
   218dc:	add	r0, r0, #-2147483648	; 0x80000000
   218e0:	movw	r1, #0
   218e4:	cmp	r1, r0
   218e8:	bcc	219c4 <__assert_fail@plt+0x10150>
   218ec:	b	219d8 <__assert_fail@plt+0x10164>
   218f0:	ldr	r0, [fp, #-12]
   218f4:	movw	r1, #0
   218f8:	cmp	r1, r0
   218fc:	bcs	219d8 <__assert_fail@plt+0x10164>
   21900:	ldr	r0, [pc, #1832]	; 22030 <__assert_fail@plt+0x107bc>
   21904:	ldr	r1, [fp, #-12]
   21908:	sub	r1, r1, #1
   2190c:	cmp	r0, r1
   21910:	bcc	219c4 <__assert_fail@plt+0x10150>
   21914:	b	219d8 <__assert_fail@plt+0x10164>
   21918:	ldr	r0, [pc, #1812]	; 22034 <__assert_fail@plt+0x107c0>
   2191c:	ldr	r1, [fp, #-16]
   21920:	udiv	r0, r0, r1
   21924:	ldr	r1, [fp, #-12]
   21928:	cmp	r0, r1
   2192c:	bcc	219c4 <__assert_fail@plt+0x10150>
   21930:	b	219d8 <__assert_fail@plt+0x10164>
   21934:	ldr	r0, [fp, #-16]
   21938:	cmp	r0, #0
   2193c:	bne	21944 <__assert_fail@plt+0x100d0>
   21940:	b	219d8 <__assert_fail@plt+0x10164>
   21944:	ldr	r0, [fp, #-12]
   21948:	cmp	r0, #0
   2194c:	bcs	219ac <__assert_fail@plt+0x10138>
   21950:	ldr	r0, [fp, #-12]
   21954:	cmn	r0, #1
   21958:	bne	21990 <__assert_fail@plt+0x1011c>
   2195c:	b	21978 <__assert_fail@plt+0x10104>
   21960:	ldr	r0, [fp, #-16]
   21964:	add	r0, r0, #-2147483648	; 0x80000000
   21968:	movw	r1, #0
   2196c:	cmp	r1, r0
   21970:	bcc	219c4 <__assert_fail@plt+0x10150>
   21974:	b	219d8 <__assert_fail@plt+0x10164>
   21978:	ldr	r0, [pc, #1712]	; 22030 <__assert_fail@plt+0x107bc>
   2197c:	ldr	r1, [fp, #-16]
   21980:	sub	r1, r1, #1
   21984:	cmp	r0, r1
   21988:	bcc	219c4 <__assert_fail@plt+0x10150>
   2198c:	b	219d8 <__assert_fail@plt+0x10164>
   21990:	ldr	r0, [pc, #1692]	; 22034 <__assert_fail@plt+0x107c0>
   21994:	ldr	r1, [fp, #-12]
   21998:	udiv	r0, r0, r1
   2199c:	ldr	r1, [fp, #-16]
   219a0:	cmp	r0, r1
   219a4:	bcc	219c4 <__assert_fail@plt+0x10150>
   219a8:	b	219d8 <__assert_fail@plt+0x10164>
   219ac:	ldr	r0, [pc, #1660]	; 22030 <__assert_fail@plt+0x107bc>
   219b0:	ldr	r1, [fp, #-16]
   219b4:	udiv	r0, r0, r1
   219b8:	ldr	r1, [fp, #-12]
   219bc:	cmp	r0, r1
   219c0:	bcs	219d8 <__assert_fail@plt+0x10164>
   219c4:	ldr	r0, [fp, #-12]
   219c8:	ldr	r1, [fp, #-16]
   219cc:	mul	r0, r0, r1
   219d0:	str	r0, [fp, #-20]	; 0xffffffec
   219d4:	b	21ffc <__assert_fail@plt+0x10788>
   219d8:	ldr	r0, [fp, #-12]
   219dc:	ldr	r1, [fp, #-16]
   219e0:	mul	r0, r0, r1
   219e4:	str	r0, [fp, #-20]	; 0xffffffec
   219e8:	b	22014 <__assert_fail@plt+0x107a0>
   219ec:	ldr	r0, [fp, #-16]
   219f0:	cmp	r0, #0
   219f4:	bcs	21b00 <__assert_fail@plt+0x1028c>
   219f8:	ldr	r0, [fp, #-12]
   219fc:	cmp	r0, #0
   21a00:	bcs	21a88 <__assert_fail@plt+0x10214>
   21a04:	b	21a24 <__assert_fail@plt+0x101b0>
   21a08:	ldr	r0, [fp, #-12]
   21a0c:	ldr	r1, [fp, #-16]
   21a10:	mvn	r2, #0
   21a14:	udiv	r1, r2, r1
   21a18:	cmp	r0, r1
   21a1c:	bcc	21b9c <__assert_fail@plt+0x10328>
   21a20:	b	21bb0 <__assert_fail@plt+0x1033c>
   21a24:	b	21a38 <__assert_fail@plt+0x101c4>
   21a28:	ldr	r0, [fp, #-16]
   21a2c:	cmp	r0, #1
   21a30:	bcc	21a48 <__assert_fail@plt+0x101d4>
   21a34:	b	21a54 <__assert_fail@plt+0x101e0>
   21a38:	ldr	r0, [fp, #-16]
   21a3c:	movw	r1, #0
   21a40:	cmp	r1, r0
   21a44:	bcs	21a54 <__assert_fail@plt+0x101e0>
   21a48:	movw	r0, #1
   21a4c:	str	r0, [sp, #44]	; 0x2c
   21a50:	b	21a6c <__assert_fail@plt+0x101f8>
   21a54:	ldr	r0, [fp, #-16]
   21a58:	movw	r1, #0
   21a5c:	sub	r0, r1, r0
   21a60:	mvn	r1, #0
   21a64:	udiv	r0, r1, r0
   21a68:	str	r0, [sp, #44]	; 0x2c
   21a6c:	ldr	r0, [sp, #44]	; 0x2c
   21a70:	ldr	r1, [fp, #-12]
   21a74:	mvn	r2, #0
   21a78:	sub	r1, r2, r1
   21a7c:	cmp	r0, r1
   21a80:	bls	21b9c <__assert_fail@plt+0x10328>
   21a84:	b	21bb0 <__assert_fail@plt+0x1033c>
   21a88:	b	21a90 <__assert_fail@plt+0x1021c>
   21a8c:	b	21a94 <__assert_fail@plt+0x10220>
   21a90:	b	21ae4 <__assert_fail@plt+0x10270>
   21a94:	ldr	r0, [fp, #-16]
   21a98:	cmn	r0, #1
   21a9c:	bne	21ae4 <__assert_fail@plt+0x10270>
   21aa0:	b	21abc <__assert_fail@plt+0x10248>
   21aa4:	ldr	r0, [fp, #-12]
   21aa8:	add	r0, r0, #0
   21aac:	movw	r1, #0
   21ab0:	cmp	r1, r0
   21ab4:	bcc	21b9c <__assert_fail@plt+0x10328>
   21ab8:	b	21bb0 <__assert_fail@plt+0x1033c>
   21abc:	ldr	r0, [fp, #-12]
   21ac0:	movw	r1, #0
   21ac4:	cmp	r1, r0
   21ac8:	bcs	21bb0 <__assert_fail@plt+0x1033c>
   21acc:	ldr	r0, [fp, #-12]
   21ad0:	sub	r0, r0, #1
   21ad4:	mvn	r1, #0
   21ad8:	cmp	r1, r0
   21adc:	bcc	21b9c <__assert_fail@plt+0x10328>
   21ae0:	b	21bb0 <__assert_fail@plt+0x1033c>
   21ae4:	ldr	r0, [fp, #-16]
   21ae8:	movw	r1, #0
   21aec:	udiv	r0, r1, r0
   21af0:	ldr	r1, [fp, #-12]
   21af4:	cmp	r0, r1
   21af8:	bcc	21b9c <__assert_fail@plt+0x10328>
   21afc:	b	21bb0 <__assert_fail@plt+0x1033c>
   21b00:	ldr	r0, [fp, #-16]
   21b04:	cmp	r0, #0
   21b08:	bne	21b10 <__assert_fail@plt+0x1029c>
   21b0c:	b	21bb0 <__assert_fail@plt+0x1033c>
   21b10:	ldr	r0, [fp, #-12]
   21b14:	cmp	r0, #0
   21b18:	bcs	21b84 <__assert_fail@plt+0x10310>
   21b1c:	b	21b24 <__assert_fail@plt+0x102b0>
   21b20:	b	21b28 <__assert_fail@plt+0x102b4>
   21b24:	b	21b68 <__assert_fail@plt+0x102f4>
   21b28:	ldr	r0, [fp, #-12]
   21b2c:	cmn	r0, #1
   21b30:	bne	21b68 <__assert_fail@plt+0x102f4>
   21b34:	b	21b50 <__assert_fail@plt+0x102dc>
   21b38:	ldr	r0, [fp, #-16]
   21b3c:	add	r0, r0, #0
   21b40:	movw	r1, #0
   21b44:	cmp	r1, r0
   21b48:	bcc	21b9c <__assert_fail@plt+0x10328>
   21b4c:	b	21bb0 <__assert_fail@plt+0x1033c>
   21b50:	ldr	r0, [fp, #-16]
   21b54:	sub	r0, r0, #1
   21b58:	mvn	r1, #0
   21b5c:	cmp	r1, r0
   21b60:	bcc	21b9c <__assert_fail@plt+0x10328>
   21b64:	b	21bb0 <__assert_fail@plt+0x1033c>
   21b68:	ldr	r0, [fp, #-12]
   21b6c:	movw	r1, #0
   21b70:	udiv	r0, r1, r0
   21b74:	ldr	r1, [fp, #-16]
   21b78:	cmp	r0, r1
   21b7c:	bcc	21b9c <__assert_fail@plt+0x10328>
   21b80:	b	21bb0 <__assert_fail@plt+0x1033c>
   21b84:	ldr	r0, [fp, #-16]
   21b88:	mvn	r1, #0
   21b8c:	udiv	r0, r1, r0
   21b90:	ldr	r1, [fp, #-12]
   21b94:	cmp	r0, r1
   21b98:	bcs	21bb0 <__assert_fail@plt+0x1033c>
   21b9c:	ldr	r0, [fp, #-12]
   21ba0:	ldr	r1, [fp, #-16]
   21ba4:	mul	r0, r0, r1
   21ba8:	str	r0, [fp, #-20]	; 0xffffffec
   21bac:	b	21ffc <__assert_fail@plt+0x10788>
   21bb0:	ldr	r0, [fp, #-12]
   21bb4:	ldr	r1, [fp, #-16]
   21bb8:	mul	r0, r0, r1
   21bbc:	str	r0, [fp, #-20]	; 0xffffffec
   21bc0:	b	22014 <__assert_fail@plt+0x107a0>
   21bc4:	b	21de0 <__assert_fail@plt+0x1056c>
   21bc8:	ldr	r0, [fp, #-16]
   21bcc:	cmp	r0, #0
   21bd0:	bcs	21d10 <__assert_fail@plt+0x1049c>
   21bd4:	ldr	r0, [fp, #-12]
   21bd8:	cmp	r0, #0
   21bdc:	bcs	21c9c <__assert_fail@plt+0x10428>
   21be0:	b	21be4 <__assert_fail@plt+0x10370>
   21be4:	ldr	r0, [fp, #-12]
   21be8:	ldr	r2, [fp, #-16]
   21bec:	mvn	r1, #0
   21bf0:	mvn	r3, #-2147483648	; 0x80000000
   21bf4:	mov	ip, #0
   21bf8:	str	r0, [sp, #40]	; 0x28
   21bfc:	mov	r0, r1
   21c00:	mov	r1, r3
   21c04:	mov	r3, ip
   21c08:	bl	22f9c <__assert_fail@plt+0x11728>
   21c0c:	ldr	r2, [sp, #40]	; 0x28
   21c10:	subs	r0, r2, r0
   21c14:	rscs	r1, r1, #0
   21c18:	blt	21db8 <__assert_fail@plt+0x10544>
   21c1c:	b	21dcc <__assert_fail@plt+0x10558>
   21c20:	b	21c34 <__assert_fail@plt+0x103c0>
   21c24:	ldr	r0, [fp, #-16]
   21c28:	cmp	r0, #1
   21c2c:	bcc	21c44 <__assert_fail@plt+0x103d0>
   21c30:	b	21c58 <__assert_fail@plt+0x103e4>
   21c34:	ldr	r0, [fp, #-16]
   21c38:	movw	r1, #0
   21c3c:	cmp	r1, r0
   21c40:	bcs	21c58 <__assert_fail@plt+0x103e4>
   21c44:	mov	r0, #0
   21c48:	mvn	r1, #0
   21c4c:	str	r1, [sp, #36]	; 0x24
   21c50:	str	r0, [sp, #32]
   21c54:	b	21c7c <__assert_fail@plt+0x10408>
   21c58:	ldr	r0, [fp, #-16]
   21c5c:	rsb	r2, r0, #0
   21c60:	mvn	r0, #0
   21c64:	mvn	r1, #-2147483648	; 0x80000000
   21c68:	mov	r3, #0
   21c6c:	bl	22f9c <__assert_fail@plt+0x11728>
   21c70:	str	r0, [sp, #36]	; 0x24
   21c74:	str	r1, [sp, #32]
   21c78:	b	21c7c <__assert_fail@plt+0x10408>
   21c7c:	ldr	r0, [sp, #32]
   21c80:	ldr	r1, [sp, #36]	; 0x24
   21c84:	ldr	r2, [fp, #-12]
   21c88:	mvn	r2, r2
   21c8c:	subs	r1, r2, r1
   21c90:	rscs	r0, r0, #0
   21c94:	bge	21db8 <__assert_fail@plt+0x10544>
   21c98:	b	21dcc <__assert_fail@plt+0x10558>
   21c9c:	ldr	r0, [fp, #-16]
   21ca0:	cmn	r0, #1
   21ca4:	bne	21ce4 <__assert_fail@plt+0x10470>
   21ca8:	b	21cc4 <__assert_fail@plt+0x10450>
   21cac:	ldr	r0, [fp, #-12]
   21cb0:	rsbs	r0, r0, #0
   21cb4:	mov	r1, #0
   21cb8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21cbc:	blt	21db8 <__assert_fail@plt+0x10544>
   21cc0:	b	21dcc <__assert_fail@plt+0x10558>
   21cc4:	ldr	r0, [fp, #-12]
   21cc8:	movw	r1, #0
   21ccc:	cmp	r1, r0
   21cd0:	bcs	21dcc <__assert_fail@plt+0x10558>
   21cd4:	mov	r0, #0
   21cd8:	cmp	r0, #0
   21cdc:	bne	21db8 <__assert_fail@plt+0x10544>
   21ce0:	b	21dcc <__assert_fail@plt+0x10558>
   21ce4:	ldr	r2, [fp, #-16]
   21ce8:	mov	r1, #-2147483648	; 0x80000000
   21cec:	mov	r0, #0
   21cf0:	str	r0, [sp, #28]
   21cf4:	ldr	r3, [sp, #28]
   21cf8:	bl	22ec8 <__assert_fail@plt+0x11654>
   21cfc:	ldr	r2, [fp, #-12]
   21d00:	subs	r0, r0, r2
   21d04:	sbcs	r1, r1, #0
   21d08:	blt	21db8 <__assert_fail@plt+0x10544>
   21d0c:	b	21dcc <__assert_fail@plt+0x10558>
   21d10:	ldr	r0, [fp, #-16]
   21d14:	cmp	r0, #0
   21d18:	bne	21d20 <__assert_fail@plt+0x104ac>
   21d1c:	b	21dcc <__assert_fail@plt+0x10558>
   21d20:	ldr	r0, [fp, #-12]
   21d24:	cmp	r0, #0
   21d28:	bcs	21d90 <__assert_fail@plt+0x1051c>
   21d2c:	ldr	r0, [fp, #-12]
   21d30:	cmn	r0, #1
   21d34:	bne	21d64 <__assert_fail@plt+0x104f0>
   21d38:	b	21d54 <__assert_fail@plt+0x104e0>
   21d3c:	ldr	r0, [fp, #-16]
   21d40:	rsbs	r0, r0, #0
   21d44:	mov	r1, #0
   21d48:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21d4c:	blt	21db8 <__assert_fail@plt+0x10544>
   21d50:	b	21dcc <__assert_fail@plt+0x10558>
   21d54:	mov	r0, #0
   21d58:	cmp	r0, #0
   21d5c:	bne	21db8 <__assert_fail@plt+0x10544>
   21d60:	b	21dcc <__assert_fail@plt+0x10558>
   21d64:	ldr	r2, [fp, #-12]
   21d68:	mov	r1, #-2147483648	; 0x80000000
   21d6c:	mov	r0, #0
   21d70:	str	r0, [sp, #24]
   21d74:	ldr	r3, [sp, #24]
   21d78:	bl	22ec8 <__assert_fail@plt+0x11654>
   21d7c:	ldr	r2, [fp, #-16]
   21d80:	subs	r0, r0, r2
   21d84:	sbcs	r1, r1, #0
   21d88:	blt	21db8 <__assert_fail@plt+0x10544>
   21d8c:	b	21dcc <__assert_fail@plt+0x10558>
   21d90:	ldr	r2, [fp, #-16]
   21d94:	mvn	r0, #0
   21d98:	mvn	r1, #-2147483648	; 0x80000000
   21d9c:	mov	r3, #0
   21da0:	bl	22f9c <__assert_fail@plt+0x11728>
   21da4:	ldr	r2, [fp, #-12]
   21da8:	subs	r0, r0, r2
   21dac:	sbcs	r1, r1, #0
   21db0:	bge	21dcc <__assert_fail@plt+0x10558>
   21db4:	b	21db8 <__assert_fail@plt+0x10544>
   21db8:	ldr	r0, [fp, #-12]
   21dbc:	ldr	r1, [fp, #-16]
   21dc0:	mul	r0, r0, r1
   21dc4:	str	r0, [fp, #-20]	; 0xffffffec
   21dc8:	b	21ffc <__assert_fail@plt+0x10788>
   21dcc:	ldr	r0, [fp, #-12]
   21dd0:	ldr	r1, [fp, #-16]
   21dd4:	mul	r0, r0, r1
   21dd8:	str	r0, [fp, #-20]	; 0xffffffec
   21ddc:	b	22014 <__assert_fail@plt+0x107a0>
   21de0:	ldr	r0, [fp, #-16]
   21de4:	cmp	r0, #0
   21de8:	bcs	21f24 <__assert_fail@plt+0x106b0>
   21dec:	ldr	r0, [fp, #-12]
   21df0:	cmp	r0, #0
   21df4:	bcs	21eac <__assert_fail@plt+0x10638>
   21df8:	b	21e2c <__assert_fail@plt+0x105b8>
   21dfc:	ldr	r0, [fp, #-12]
   21e00:	ldr	r2, [fp, #-16]
   21e04:	mvn	r1, #0
   21e08:	mov	r3, #0
   21e0c:	str	r0, [sp, #20]
   21e10:	mov	r0, r1
   21e14:	bl	22f9c <__assert_fail@plt+0x11728>
   21e18:	ldr	r2, [sp, #20]
   21e1c:	subs	r0, r2, r0
   21e20:	rscs	r1, r1, #0
   21e24:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21e28:	b	21fe8 <__assert_fail@plt+0x10774>
   21e2c:	b	21e40 <__assert_fail@plt+0x105cc>
   21e30:	ldr	r0, [fp, #-16]
   21e34:	cmp	r0, #1
   21e38:	bcc	21e50 <__assert_fail@plt+0x105dc>
   21e3c:	b	21e64 <__assert_fail@plt+0x105f0>
   21e40:	ldr	r0, [fp, #-16]
   21e44:	movw	r1, #0
   21e48:	cmp	r1, r0
   21e4c:	bcs	21e64 <__assert_fail@plt+0x105f0>
   21e50:	mov	r0, #1
   21e54:	mvn	r1, #0
   21e58:	str	r1, [sp, #16]
   21e5c:	str	r0, [sp, #12]
   21e60:	b	21e8c <__assert_fail@plt+0x10618>
   21e64:	ldr	r0, [fp, #-16]
   21e68:	rsb	r2, r0, #0
   21e6c:	mvn	r0, #0
   21e70:	mov	r3, #0
   21e74:	str	r0, [sp, #8]
   21e78:	ldr	r1, [sp, #8]
   21e7c:	bl	22f9c <__assert_fail@plt+0x11728>
   21e80:	str	r0, [sp, #16]
   21e84:	str	r1, [sp, #12]
   21e88:	b	21e8c <__assert_fail@plt+0x10618>
   21e8c:	ldr	r0, [sp, #12]
   21e90:	ldr	r1, [sp, #16]
   21e94:	ldr	r2, [fp, #-12]
   21e98:	mvn	r2, r2
   21e9c:	subs	r1, r2, r1
   21ea0:	rscs	r0, r0, #0
   21ea4:	bcs	21fd4 <__assert_fail@plt+0x10760>
   21ea8:	b	21fe8 <__assert_fail@plt+0x10774>
   21eac:	b	21eb4 <__assert_fail@plt+0x10640>
   21eb0:	b	21eb8 <__assert_fail@plt+0x10644>
   21eb4:	b	21f08 <__assert_fail@plt+0x10694>
   21eb8:	ldr	r0, [fp, #-16]
   21ebc:	cmn	r0, #1
   21ec0:	bne	21f08 <__assert_fail@plt+0x10694>
   21ec4:	b	21ee0 <__assert_fail@plt+0x1066c>
   21ec8:	ldr	r0, [fp, #-12]
   21ecc:	add	r0, r0, #0
   21ed0:	movw	r1, #0
   21ed4:	cmp	r1, r0
   21ed8:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21edc:	b	21fe8 <__assert_fail@plt+0x10774>
   21ee0:	ldr	r0, [fp, #-12]
   21ee4:	movw	r1, #0
   21ee8:	cmp	r1, r0
   21eec:	bcs	21fe8 <__assert_fail@plt+0x10774>
   21ef0:	ldr	r0, [fp, #-12]
   21ef4:	sub	r0, r0, #1
   21ef8:	mvn	r1, #0
   21efc:	cmp	r1, r0
   21f00:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21f04:	b	21fe8 <__assert_fail@plt+0x10774>
   21f08:	ldr	r0, [fp, #-16]
   21f0c:	movw	r1, #0
   21f10:	udiv	r0, r1, r0
   21f14:	ldr	r1, [fp, #-12]
   21f18:	cmp	r0, r1
   21f1c:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21f20:	b	21fe8 <__assert_fail@plt+0x10774>
   21f24:	ldr	r0, [fp, #-16]
   21f28:	cmp	r0, #0
   21f2c:	bne	21f34 <__assert_fail@plt+0x106c0>
   21f30:	b	21fe8 <__assert_fail@plt+0x10774>
   21f34:	ldr	r0, [fp, #-12]
   21f38:	cmp	r0, #0
   21f3c:	bcs	21fa8 <__assert_fail@plt+0x10734>
   21f40:	b	21f48 <__assert_fail@plt+0x106d4>
   21f44:	b	21f4c <__assert_fail@plt+0x106d8>
   21f48:	b	21f8c <__assert_fail@plt+0x10718>
   21f4c:	ldr	r0, [fp, #-12]
   21f50:	cmn	r0, #1
   21f54:	bne	21f8c <__assert_fail@plt+0x10718>
   21f58:	b	21f74 <__assert_fail@plt+0x10700>
   21f5c:	ldr	r0, [fp, #-16]
   21f60:	add	r0, r0, #0
   21f64:	movw	r1, #0
   21f68:	cmp	r1, r0
   21f6c:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21f70:	b	21fe8 <__assert_fail@plt+0x10774>
   21f74:	ldr	r0, [fp, #-16]
   21f78:	sub	r0, r0, #1
   21f7c:	mvn	r1, #0
   21f80:	cmp	r1, r0
   21f84:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21f88:	b	21fe8 <__assert_fail@plt+0x10774>
   21f8c:	ldr	r0, [fp, #-12]
   21f90:	movw	r1, #0
   21f94:	udiv	r0, r1, r0
   21f98:	ldr	r1, [fp, #-16]
   21f9c:	cmp	r0, r1
   21fa0:	bcc	21fd4 <__assert_fail@plt+0x10760>
   21fa4:	b	21fe8 <__assert_fail@plt+0x10774>
   21fa8:	ldr	r2, [fp, #-16]
   21fac:	mvn	r0, #0
   21fb0:	mov	r3, #0
   21fb4:	str	r0, [sp, #4]
   21fb8:	ldr	r1, [sp, #4]
   21fbc:	bl	22f9c <__assert_fail@plt+0x11728>
   21fc0:	ldr	r2, [fp, #-12]
   21fc4:	subs	r0, r0, r2
   21fc8:	sbcs	r1, r1, #0
   21fcc:	bcs	21fe8 <__assert_fail@plt+0x10774>
   21fd0:	b	21fd4 <__assert_fail@plt+0x10760>
   21fd4:	ldr	r0, [fp, #-12]
   21fd8:	ldr	r1, [fp, #-16]
   21fdc:	mul	r0, r0, r1
   21fe0:	str	r0, [fp, #-20]	; 0xffffffec
   21fe4:	b	21ffc <__assert_fail@plt+0x10788>
   21fe8:	ldr	r0, [fp, #-12]
   21fec:	ldr	r1, [fp, #-16]
   21ff0:	mul	r0, r0, r1
   21ff4:	str	r0, [fp, #-20]	; 0xffffffec
   21ff8:	b	22014 <__assert_fail@plt+0x107a0>
   21ffc:	bl	11700 <__errno_location@plt>
   22000:	movw	r1, #12
   22004:	str	r1, [r0]
   22008:	movw	r0, #0
   2200c:	str	r0, [fp, #-4]
   22010:	b	22024 <__assert_fail@plt+0x107b0>
   22014:	ldr	r0, [fp, #-8]
   22018:	ldr	r1, [fp, #-20]	; 0xffffffec
   2201c:	bl	1f9a0 <__assert_fail@plt+0xe12c>
   22020:	str	r0, [fp, #-4]
   22024:	ldr	r0, [fp, #-4]
   22028:	mov	sp, fp
   2202c:	pop	{fp, pc}
   22030:	svcvc	0x00ffffff
   22034:	andhi	r0, r0, r0
   22038:			; <UNDEFINED> instruction: 0xffff8000
   2203c:	push	{fp, lr}
   22040:	mov	fp, sp
   22044:	sub	sp, sp, #16
   22048:	ldr	r1, [pc, #132]	; 220d4 <__assert_fail@plt+0x10860>
   2204c:	str	r0, [sp, #8]
   22050:	ldr	r0, [sp, #8]
   22054:	movw	r2, #0
   22058:	str	r2, [r0, #4]
   2205c:	movw	r0, #16315	; 0x3fbb
   22060:	movt	r0, #2
   22064:	bl	20700 <__assert_fail@plt+0xee8c>
   22068:	ldr	r1, [sp, #8]
   2206c:	str	r0, [r1]
   22070:	ldr	r0, [sp, #8]
   22074:	ldr	r0, [r0]
   22078:	cmp	r0, #0
   2207c:	bge	220c0 <__assert_fail@plt+0x1084c>
   22080:	movw	r0, #0
   22084:	str	r0, [sp, #4]
   22088:	ldr	r1, [sp, #4]
   2208c:	bl	11694 <getcwd@plt>
   22090:	ldr	r1, [sp, #8]
   22094:	str	r0, [r1, #4]
   22098:	ldr	r0, [sp, #8]
   2209c:	ldr	r0, [r0, #4]
   220a0:	movw	r1, #0
   220a4:	cmp	r0, r1
   220a8:	movw	r0, #0
   220ac:	movne	r0, #1
   220b0:	tst	r0, #1
   220b4:	mvneq	r1, #0
   220b8:	str	r1, [fp, #-4]
   220bc:	b	220c8 <__assert_fail@plt+0x10854>
   220c0:	movw	r0, #0
   220c4:	str	r0, [fp, #-4]
   220c8:	ldr	r0, [fp, #-4]
   220cc:	mov	sp, fp
   220d0:	pop	{fp, pc}
   220d4:	andeq	r0, r8, r0
   220d8:	push	{fp, lr}
   220dc:	mov	fp, sp
   220e0:	sub	sp, sp, #8
   220e4:	str	r0, [sp]
   220e8:	ldr	r0, [sp]
   220ec:	ldr	r0, [r0]
   220f0:	movw	r1, #0
   220f4:	cmp	r1, r0
   220f8:	bgt	22110 <__assert_fail@plt+0x1089c>
   220fc:	ldr	r0, [sp]
   22100:	ldr	r0, [r0]
   22104:	bl	117cc <fchdir@plt>
   22108:	str	r0, [sp, #4]
   2210c:	b	22120 <__assert_fail@plt+0x108ac>
   22110:	ldr	r0, [sp]
   22114:	ldr	r0, [r0, #4]
   22118:	bl	227d4 <__assert_fail@plt+0x10f60>
   2211c:	str	r0, [sp, #4]
   22120:	ldr	r0, [sp, #4]
   22124:	mov	sp, fp
   22128:	pop	{fp, pc}
   2212c:	push	{fp, lr}
   22130:	mov	fp, sp
   22134:	sub	sp, sp, #8
   22138:	str	r0, [sp, #4]
   2213c:	ldr	r0, [sp, #4]
   22140:	ldr	r0, [r0]
   22144:	cmp	r0, #0
   22148:	blt	22158 <__assert_fail@plt+0x108e4>
   2214c:	ldr	r0, [sp, #4]
   22150:	ldr	r0, [r0]
   22154:	bl	11844 <close@plt>
   22158:	ldr	r0, [sp, #4]
   2215c:	ldr	r0, [r0, #4]
   22160:	bl	2082c <__assert_fail@plt+0xefb8>
   22164:	mov	sp, fp
   22168:	pop	{fp, pc}
   2216c:	push	{fp, lr}
   22170:	mov	fp, sp
   22174:	sub	sp, sp, #8
   22178:	str	r0, [sp, #4]
   2217c:	ldr	r0, [sp, #4]
   22180:	movw	r1, #0
   22184:	movw	r2, #3
   22188:	bl	20320 <__assert_fail@plt+0xeaac>
   2218c:	mov	sp, fp
   22190:	pop	{fp, pc}
   22194:	sub	sp, sp, #12
   22198:	str	r0, [sp, #4]
   2219c:	ldr	r0, [sp, #4]
   221a0:	sub	r1, r0, #48	; 0x30
   221a4:	cmp	r1, #10
   221a8:	str	r0, [sp]
   221ac:	bcc	221dc <__assert_fail@plt+0x10968>
   221b0:	b	221b4 <__assert_fail@plt+0x10940>
   221b4:	ldr	r0, [sp]
   221b8:	sub	r1, r0, #65	; 0x41
   221bc:	cmp	r1, #26
   221c0:	bcc	221dc <__assert_fail@plt+0x10968>
   221c4:	b	221c8 <__assert_fail@plt+0x10954>
   221c8:	ldr	r0, [sp]
   221cc:	sub	r1, r0, #97	; 0x61
   221d0:	cmp	r1, #25
   221d4:	bhi	221ec <__assert_fail@plt+0x10978>
   221d8:	b	221dc <__assert_fail@plt+0x10968>
   221dc:	movw	r0, #1
   221e0:	and	r0, r0, #1
   221e4:	strb	r0, [sp, #11]
   221e8:	b	221f8 <__assert_fail@plt+0x10984>
   221ec:	movw	r0, #0
   221f0:	and	r0, r0, #1
   221f4:	strb	r0, [sp, #11]
   221f8:	ldrb	r0, [sp, #11]
   221fc:	and	r0, r0, #1
   22200:	add	sp, sp, #12
   22204:	bx	lr
   22208:	sub	sp, sp, #12
   2220c:	str	r0, [sp, #4]
   22210:	ldr	r0, [sp, #4]
   22214:	sub	r1, r0, #65	; 0x41
   22218:	cmp	r1, #26
   2221c:	str	r0, [sp]
   22220:	bcc	2223c <__assert_fail@plt+0x109c8>
   22224:	b	22228 <__assert_fail@plt+0x109b4>
   22228:	ldr	r0, [sp]
   2222c:	sub	r1, r0, #97	; 0x61
   22230:	cmp	r1, #25
   22234:	bhi	2224c <__assert_fail@plt+0x109d8>
   22238:	b	2223c <__assert_fail@plt+0x109c8>
   2223c:	movw	r0, #1
   22240:	and	r0, r0, #1
   22244:	strb	r0, [sp, #11]
   22248:	b	22258 <__assert_fail@plt+0x109e4>
   2224c:	movw	r0, #0
   22250:	and	r0, r0, #1
   22254:	strb	r0, [sp, #11]
   22258:	ldrb	r0, [sp, #11]
   2225c:	and	r0, r0, #1
   22260:	add	sp, sp, #12
   22264:	bx	lr
   22268:	sub	sp, sp, #8
   2226c:	str	r0, [sp]
   22270:	ldr	r0, [sp]
   22274:	cmp	r0, #127	; 0x7f
   22278:	bhi	22290 <__assert_fail@plt+0x10a1c>
   2227c:	b	22280 <__assert_fail@plt+0x10a0c>
   22280:	movw	r0, #1
   22284:	and	r0, r0, #1
   22288:	strb	r0, [sp, #7]
   2228c:	b	2229c <__assert_fail@plt+0x10a28>
   22290:	movw	r0, #0
   22294:	and	r0, r0, #1
   22298:	strb	r0, [sp, #7]
   2229c:	ldrb	r0, [sp, #7]
   222a0:	and	r0, r0, #1
   222a4:	add	sp, sp, #8
   222a8:	bx	lr
   222ac:	sub	sp, sp, #8
   222b0:	str	r0, [sp, #4]
   222b4:	ldr	r0, [sp, #4]
   222b8:	cmp	r0, #32
   222bc:	movw	r0, #1
   222c0:	str	r0, [sp]
   222c4:	beq	222dc <__assert_fail@plt+0x10a68>
   222c8:	ldr	r0, [sp, #4]
   222cc:	cmp	r0, #9
   222d0:	movw	r0, #0
   222d4:	moveq	r0, #1
   222d8:	str	r0, [sp]
   222dc:	ldr	r0, [sp]
   222e0:	and	r0, r0, #1
   222e4:	add	sp, sp, #8
   222e8:	bx	lr
   222ec:	sub	sp, sp, #12
   222f0:	str	r0, [sp, #4]
   222f4:	ldr	r0, [sp, #4]
   222f8:	cmp	r0, #32
   222fc:	str	r0, [sp]
   22300:	bcc	22318 <__assert_fail@plt+0x10aa4>
   22304:	b	22308 <__assert_fail@plt+0x10a94>
   22308:	ldr	r0, [sp]
   2230c:	cmp	r0, #127	; 0x7f
   22310:	bne	22328 <__assert_fail@plt+0x10ab4>
   22314:	b	22318 <__assert_fail@plt+0x10aa4>
   22318:	movw	r0, #1
   2231c:	and	r0, r0, #1
   22320:	strb	r0, [sp, #11]
   22324:	b	22334 <__assert_fail@plt+0x10ac0>
   22328:	movw	r0, #0
   2232c:	and	r0, r0, #1
   22330:	strb	r0, [sp, #11]
   22334:	ldrb	r0, [sp, #11]
   22338:	and	r0, r0, #1
   2233c:	add	sp, sp, #12
   22340:	bx	lr
   22344:	sub	sp, sp, #8
   22348:	str	r0, [sp]
   2234c:	ldr	r0, [sp]
   22350:	sub	r0, r0, #48	; 0x30
   22354:	cmp	r0, #9
   22358:	bhi	22370 <__assert_fail@plt+0x10afc>
   2235c:	b	22360 <__assert_fail@plt+0x10aec>
   22360:	movw	r0, #1
   22364:	and	r0, r0, #1
   22368:	strb	r0, [sp, #7]
   2236c:	b	2237c <__assert_fail@plt+0x10b08>
   22370:	movw	r0, #0
   22374:	and	r0, r0, #1
   22378:	strb	r0, [sp, #7]
   2237c:	ldrb	r0, [sp, #7]
   22380:	and	r0, r0, #1
   22384:	add	sp, sp, #8
   22388:	bx	lr
   2238c:	sub	sp, sp, #8
   22390:	str	r0, [sp]
   22394:	ldr	r0, [sp]
   22398:	sub	r0, r0, #33	; 0x21
   2239c:	cmp	r0, #93	; 0x5d
   223a0:	bhi	223b8 <__assert_fail@plt+0x10b44>
   223a4:	b	223a8 <__assert_fail@plt+0x10b34>
   223a8:	movw	r0, #1
   223ac:	and	r0, r0, #1
   223b0:	strb	r0, [sp, #7]
   223b4:	b	223c4 <__assert_fail@plt+0x10b50>
   223b8:	movw	r0, #0
   223bc:	and	r0, r0, #1
   223c0:	strb	r0, [sp, #7]
   223c4:	ldrb	r0, [sp, #7]
   223c8:	and	r0, r0, #1
   223cc:	add	sp, sp, #8
   223d0:	bx	lr
   223d4:	sub	sp, sp, #8
   223d8:	str	r0, [sp]
   223dc:	ldr	r0, [sp]
   223e0:	sub	r0, r0, #97	; 0x61
   223e4:	cmp	r0, #25
   223e8:	bhi	22400 <__assert_fail@plt+0x10b8c>
   223ec:	b	223f0 <__assert_fail@plt+0x10b7c>
   223f0:	movw	r0, #1
   223f4:	and	r0, r0, #1
   223f8:	strb	r0, [sp, #7]
   223fc:	b	2240c <__assert_fail@plt+0x10b98>
   22400:	movw	r0, #0
   22404:	and	r0, r0, #1
   22408:	strb	r0, [sp, #7]
   2240c:	ldrb	r0, [sp, #7]
   22410:	and	r0, r0, #1
   22414:	add	sp, sp, #8
   22418:	bx	lr
   2241c:	sub	sp, sp, #8
   22420:	str	r0, [sp]
   22424:	ldr	r0, [sp]
   22428:	sub	r0, r0, #32
   2242c:	cmp	r0, #94	; 0x5e
   22430:	bhi	22448 <__assert_fail@plt+0x10bd4>
   22434:	b	22438 <__assert_fail@plt+0x10bc4>
   22438:	movw	r0, #1
   2243c:	and	r0, r0, #1
   22440:	strb	r0, [sp, #7]
   22444:	b	22454 <__assert_fail@plt+0x10be0>
   22448:	movw	r0, #0
   2244c:	and	r0, r0, #1
   22450:	strb	r0, [sp, #7]
   22454:	ldrb	r0, [sp, #7]
   22458:	and	r0, r0, #1
   2245c:	add	sp, sp, #8
   22460:	bx	lr
   22464:	sub	sp, sp, #12
   22468:	str	r0, [sp, #4]
   2246c:	ldr	r0, [sp, #4]
   22470:	sub	r0, r0, #33	; 0x21
   22474:	cmp	r0, #93	; 0x5d
   22478:	str	r0, [sp]
   2247c:	bhi	22618 <__assert_fail@plt+0x10da4>
   22480:	add	r0, pc, #8
   22484:	ldr	r1, [sp]
   22488:	ldr	r0, [r0, r1, lsl #2]
   2248c:	mov	pc, r0
   22490:	andeq	r2, r2, r8, lsl #12
   22494:	andeq	r2, r2, r8, lsl #12
   22498:	andeq	r2, r2, r8, lsl #12
   2249c:	andeq	r2, r2, r8, lsl #12
   224a0:	andeq	r2, r2, r8, lsl #12
   224a4:	andeq	r2, r2, r8, lsl #12
   224a8:	andeq	r2, r2, r8, lsl #12
   224ac:	andeq	r2, r2, r8, lsl #12
   224b0:	andeq	r2, r2, r8, lsl #12
   224b4:	andeq	r2, r2, r8, lsl #12
   224b8:	andeq	r2, r2, r8, lsl #12
   224bc:	andeq	r2, r2, r8, lsl #12
   224c0:	andeq	r2, r2, r8, lsl #12
   224c4:	andeq	r2, r2, r8, lsl #12
   224c8:	andeq	r2, r2, r8, lsl #12
   224cc:	andeq	r2, r2, r8, lsl r6
   224d0:	andeq	r2, r2, r8, lsl r6
   224d4:	andeq	r2, r2, r8, lsl r6
   224d8:	andeq	r2, r2, r8, lsl r6
   224dc:	andeq	r2, r2, r8, lsl r6
   224e0:	andeq	r2, r2, r8, lsl r6
   224e4:	andeq	r2, r2, r8, lsl r6
   224e8:	andeq	r2, r2, r8, lsl r6
   224ec:	andeq	r2, r2, r8, lsl r6
   224f0:	andeq	r2, r2, r8, lsl r6
   224f4:	andeq	r2, r2, r8, lsl #12
   224f8:	andeq	r2, r2, r8, lsl #12
   224fc:	andeq	r2, r2, r8, lsl #12
   22500:	andeq	r2, r2, r8, lsl #12
   22504:	andeq	r2, r2, r8, lsl #12
   22508:	andeq	r2, r2, r8, lsl #12
   2250c:	andeq	r2, r2, r8, lsl #12
   22510:	andeq	r2, r2, r8, lsl r6
   22514:	andeq	r2, r2, r8, lsl r6
   22518:	andeq	r2, r2, r8, lsl r6
   2251c:	andeq	r2, r2, r8, lsl r6
   22520:	andeq	r2, r2, r8, lsl r6
   22524:	andeq	r2, r2, r8, lsl r6
   22528:	andeq	r2, r2, r8, lsl r6
   2252c:	andeq	r2, r2, r8, lsl r6
   22530:	andeq	r2, r2, r8, lsl r6
   22534:	andeq	r2, r2, r8, lsl r6
   22538:	andeq	r2, r2, r8, lsl r6
   2253c:	andeq	r2, r2, r8, lsl r6
   22540:	andeq	r2, r2, r8, lsl r6
   22544:	andeq	r2, r2, r8, lsl r6
   22548:	andeq	r2, r2, r8, lsl r6
   2254c:	andeq	r2, r2, r8, lsl r6
   22550:	andeq	r2, r2, r8, lsl r6
   22554:	andeq	r2, r2, r8, lsl r6
   22558:	andeq	r2, r2, r8, lsl r6
   2255c:	andeq	r2, r2, r8, lsl r6
   22560:	andeq	r2, r2, r8, lsl r6
   22564:	andeq	r2, r2, r8, lsl r6
   22568:	andeq	r2, r2, r8, lsl r6
   2256c:	andeq	r2, r2, r8, lsl r6
   22570:	andeq	r2, r2, r8, lsl r6
   22574:	andeq	r2, r2, r8, lsl r6
   22578:	andeq	r2, r2, r8, lsl #12
   2257c:	andeq	r2, r2, r8, lsl #12
   22580:	andeq	r2, r2, r8, lsl #12
   22584:	andeq	r2, r2, r8, lsl #12
   22588:	andeq	r2, r2, r8, lsl #12
   2258c:	andeq	r2, r2, r8, lsl #12
   22590:	andeq	r2, r2, r8, lsl r6
   22594:	andeq	r2, r2, r8, lsl r6
   22598:	andeq	r2, r2, r8, lsl r6
   2259c:	andeq	r2, r2, r8, lsl r6
   225a0:	andeq	r2, r2, r8, lsl r6
   225a4:	andeq	r2, r2, r8, lsl r6
   225a8:	andeq	r2, r2, r8, lsl r6
   225ac:	andeq	r2, r2, r8, lsl r6
   225b0:	andeq	r2, r2, r8, lsl r6
   225b4:	andeq	r2, r2, r8, lsl r6
   225b8:	andeq	r2, r2, r8, lsl r6
   225bc:	andeq	r2, r2, r8, lsl r6
   225c0:	andeq	r2, r2, r8, lsl r6
   225c4:	andeq	r2, r2, r8, lsl r6
   225c8:	andeq	r2, r2, r8, lsl r6
   225cc:	andeq	r2, r2, r8, lsl r6
   225d0:	andeq	r2, r2, r8, lsl r6
   225d4:	andeq	r2, r2, r8, lsl r6
   225d8:	andeq	r2, r2, r8, lsl r6
   225dc:	andeq	r2, r2, r8, lsl r6
   225e0:	andeq	r2, r2, r8, lsl r6
   225e4:	andeq	r2, r2, r8, lsl r6
   225e8:	andeq	r2, r2, r8, lsl r6
   225ec:	andeq	r2, r2, r8, lsl r6
   225f0:	andeq	r2, r2, r8, lsl r6
   225f4:	andeq	r2, r2, r8, lsl r6
   225f8:	andeq	r2, r2, r8, lsl #12
   225fc:	andeq	r2, r2, r8, lsl #12
   22600:	andeq	r2, r2, r8, lsl #12
   22604:	andeq	r2, r2, r8, lsl #12
   22608:	movw	r0, #1
   2260c:	and	r0, r0, #1
   22610:	strb	r0, [sp, #11]
   22614:	b	22624 <__assert_fail@plt+0x10db0>
   22618:	movw	r0, #0
   2261c:	and	r0, r0, #1
   22620:	strb	r0, [sp, #11]
   22624:	ldrb	r0, [sp, #11]
   22628:	and	r0, r0, #1
   2262c:	add	sp, sp, #12
   22630:	bx	lr
   22634:	sub	sp, sp, #12
   22638:	str	r0, [sp, #4]
   2263c:	ldr	r0, [sp, #4]
   22640:	sub	r1, r0, #9
   22644:	cmp	r1, #5
   22648:	str	r0, [sp]
   2264c:	bcc	22664 <__assert_fail@plt+0x10df0>
   22650:	b	22654 <__assert_fail@plt+0x10de0>
   22654:	ldr	r0, [sp]
   22658:	cmp	r0, #32
   2265c:	bne	22674 <__assert_fail@plt+0x10e00>
   22660:	b	22664 <__assert_fail@plt+0x10df0>
   22664:	movw	r0, #1
   22668:	and	r0, r0, #1
   2266c:	strb	r0, [sp, #11]
   22670:	b	22680 <__assert_fail@plt+0x10e0c>
   22674:	movw	r0, #0
   22678:	and	r0, r0, #1
   2267c:	strb	r0, [sp, #11]
   22680:	ldrb	r0, [sp, #11]
   22684:	and	r0, r0, #1
   22688:	add	sp, sp, #12
   2268c:	bx	lr
   22690:	sub	sp, sp, #8
   22694:	str	r0, [sp]
   22698:	ldr	r0, [sp]
   2269c:	sub	r0, r0, #65	; 0x41
   226a0:	cmp	r0, #25
   226a4:	bhi	226bc <__assert_fail@plt+0x10e48>
   226a8:	b	226ac <__assert_fail@plt+0x10e38>
   226ac:	movw	r0, #1
   226b0:	and	r0, r0, #1
   226b4:	strb	r0, [sp, #7]
   226b8:	b	226c8 <__assert_fail@plt+0x10e54>
   226bc:	movw	r0, #0
   226c0:	and	r0, r0, #1
   226c4:	strb	r0, [sp, #7]
   226c8:	ldrb	r0, [sp, #7]
   226cc:	and	r0, r0, #1
   226d0:	add	sp, sp, #8
   226d4:	bx	lr
   226d8:	sub	sp, sp, #12
   226dc:	str	r0, [sp, #4]
   226e0:	ldr	r0, [sp, #4]
   226e4:	sub	r1, r0, #48	; 0x30
   226e8:	cmp	r1, #10
   226ec:	str	r0, [sp]
   226f0:	bcc	22720 <__assert_fail@plt+0x10eac>
   226f4:	b	226f8 <__assert_fail@plt+0x10e84>
   226f8:	ldr	r0, [sp]
   226fc:	sub	r1, r0, #65	; 0x41
   22700:	cmp	r1, #6
   22704:	bcc	22720 <__assert_fail@plt+0x10eac>
   22708:	b	2270c <__assert_fail@plt+0x10e98>
   2270c:	ldr	r0, [sp]
   22710:	sub	r1, r0, #97	; 0x61
   22714:	cmp	r1, #5
   22718:	bhi	22730 <__assert_fail@plt+0x10ebc>
   2271c:	b	22720 <__assert_fail@plt+0x10eac>
   22720:	movw	r0, #1
   22724:	and	r0, r0, #1
   22728:	strb	r0, [sp, #11]
   2272c:	b	2273c <__assert_fail@plt+0x10ec8>
   22730:	movw	r0, #0
   22734:	and	r0, r0, #1
   22738:	strb	r0, [sp, #11]
   2273c:	ldrb	r0, [sp, #11]
   22740:	and	r0, r0, #1
   22744:	add	sp, sp, #12
   22748:	bx	lr
   2274c:	sub	sp, sp, #8
   22750:	str	r0, [sp]
   22754:	ldr	r0, [sp]
   22758:	sub	r0, r0, #65	; 0x41
   2275c:	cmp	r0, #25
   22760:	bhi	2277c <__assert_fail@plt+0x10f08>
   22764:	b	22768 <__assert_fail@plt+0x10ef4>
   22768:	ldr	r0, [sp]
   2276c:	sub	r0, r0, #65	; 0x41
   22770:	add	r0, r0, #97	; 0x61
   22774:	str	r0, [sp, #4]
   22778:	b	22784 <__assert_fail@plt+0x10f10>
   2277c:	ldr	r0, [sp]
   22780:	str	r0, [sp, #4]
   22784:	ldr	r0, [sp, #4]
   22788:	add	sp, sp, #8
   2278c:	bx	lr
   22790:	sub	sp, sp, #8
   22794:	str	r0, [sp]
   22798:	ldr	r0, [sp]
   2279c:	sub	r0, r0, #97	; 0x61
   227a0:	cmp	r0, #25
   227a4:	bhi	227c0 <__assert_fail@plt+0x10f4c>
   227a8:	b	227ac <__assert_fail@plt+0x10f38>
   227ac:	ldr	r0, [sp]
   227b0:	sub	r0, r0, #97	; 0x61
   227b4:	add	r0, r0, #65	; 0x41
   227b8:	str	r0, [sp, #4]
   227bc:	b	227c8 <__assert_fail@plt+0x10f54>
   227c0:	ldr	r0, [sp]
   227c4:	str	r0, [sp, #4]
   227c8:	ldr	r0, [sp, #4]
   227cc:	add	sp, sp, #8
   227d0:	bx	lr
   227d4:	push	{fp, lr}
   227d8:	mov	fp, sp
   227dc:	sub	sp, sp, #56	; 0x38
   227e0:	str	r0, [fp, #-8]
   227e4:	ldr	r0, [fp, #-8]
   227e8:	bl	11598 <chdir@plt>
   227ec:	str	r0, [fp, #-12]
   227f0:	ldr	r0, [fp, #-12]
   227f4:	cmp	r0, #0
   227f8:	beq	2280c <__assert_fail@plt+0x10f98>
   227fc:	bl	11700 <__errno_location@plt>
   22800:	ldr	r0, [r0]
   22804:	cmp	r0, #36	; 0x24
   22808:	beq	22818 <__assert_fail@plt+0x10fa4>
   2280c:	ldr	r0, [fp, #-12]
   22810:	str	r0, [fp, #-4]
   22814:	b	22b60 <__assert_fail@plt+0x112ec>
   22818:	ldr	r0, [fp, #-8]
   2281c:	bl	116d0 <strlen@plt>
   22820:	str	r0, [fp, #-16]
   22824:	ldr	r0, [fp, #-8]
   22828:	ldr	r1, [fp, #-16]
   2282c:	add	r0, r0, r1
   22830:	str	r0, [fp, #-20]	; 0xffffffec
   22834:	sub	r0, fp, #24
   22838:	bl	22b6c <__assert_fail@plt+0x112f8>
   2283c:	ldr	r0, [fp, #-16]
   22840:	movw	r1, #0
   22844:	cmp	r1, r0
   22848:	bcs	22850 <__assert_fail@plt+0x10fdc>
   2284c:	b	22870 <__assert_fail@plt+0x10ffc>
   22850:	movw	r0, #17883	; 0x45db
   22854:	movt	r0, #2
   22858:	movw	r1, #17891	; 0x45e3
   2285c:	movt	r1, #2
   22860:	movw	r2, #126	; 0x7e
   22864:	movw	r3, #17908	; 0x45f4
   22868:	movt	r3, #2
   2286c:	bl	11874 <__assert_fail@plt>
   22870:	ldr	r0, [fp, #-16]
   22874:	movw	r1, #4096	; 0x1000
   22878:	cmp	r1, r0
   2287c:	bhi	22884 <__assert_fail@plt+0x11010>
   22880:	b	228a4 <__assert_fail@plt+0x11030>
   22884:	movw	r0, #17931	; 0x460b
   22888:	movt	r0, #2
   2288c:	movw	r1, #17891	; 0x45e3
   22890:	movt	r1, #2
   22894:	movw	r2, #127	; 0x7f
   22898:	movw	r3, #17908	; 0x45f4
   2289c:	movt	r3, #2
   228a0:	bl	11874 <__assert_fail@plt>
   228a4:	ldr	r0, [fp, #-8]
   228a8:	movw	r1, #17677	; 0x450d
   228ac:	movt	r1, #2
   228b0:	bl	11868 <strspn@plt>
   228b4:	str	r0, [sp, #28]
   228b8:	ldr	r0, [sp, #28]
   228bc:	cmp	r0, #2
   228c0:	bne	2295c <__assert_fail@plt+0x110e8>
   228c4:	ldr	r0, [fp, #-8]
   228c8:	add	r0, r0, #3
   228cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   228d0:	ldr	r2, [fp, #-8]
   228d4:	add	r2, r2, #3
   228d8:	sub	r2, r1, r2
   228dc:	mov	r1, #47	; 0x2f
   228e0:	bl	11730 <memchr@plt>
   228e4:	str	r0, [sp, #20]
   228e8:	ldr	r0, [sp, #20]
   228ec:	movw	r1, #0
   228f0:	cmp	r0, r1
   228f4:	bne	22910 <__assert_fail@plt+0x1109c>
   228f8:	bl	11700 <__errno_location@plt>
   228fc:	movw	r1, #36	; 0x24
   22900:	str	r1, [r0]
   22904:	mvn	r0, #0
   22908:	str	r0, [fp, #-4]
   2290c:	b	22b60 <__assert_fail@plt+0x112ec>
   22910:	ldr	r0, [sp, #20]
   22914:	movw	r1, #0
   22918:	strb	r1, [r0]
   2291c:	ldr	r1, [fp, #-8]
   22920:	sub	r0, fp, #24
   22924:	bl	22b88 <__assert_fail@plt+0x11314>
   22928:	str	r0, [sp, #24]
   2292c:	ldr	r0, [sp, #20]
   22930:	movw	r1, #47	; 0x2f
   22934:	strb	r1, [r0]
   22938:	ldr	r0, [sp, #24]
   2293c:	cmp	r0, #0
   22940:	beq	22948 <__assert_fail@plt+0x110d4>
   22944:	b	22b30 <__assert_fail@plt+0x112bc>
   22948:	ldr	r0, [sp, #20]
   2294c:	add	r0, r0, #1
   22950:	bl	22bf4 <__assert_fail@plt+0x11380>
   22954:	str	r0, [fp, #-8]
   22958:	b	22998 <__assert_fail@plt+0x11124>
   2295c:	ldr	r0, [sp, #28]
   22960:	cmp	r0, #0
   22964:	beq	22994 <__assert_fail@plt+0x11120>
   22968:	sub	r0, fp, #24
   2296c:	movw	r1, #17677	; 0x450d
   22970:	movt	r1, #2
   22974:	bl	22b88 <__assert_fail@plt+0x11314>
   22978:	cmp	r0, #0
   2297c:	beq	22984 <__assert_fail@plt+0x11110>
   22980:	b	22b30 <__assert_fail@plt+0x112bc>
   22984:	ldr	r0, [sp, #28]
   22988:	ldr	r1, [fp, #-8]
   2298c:	add	r0, r1, r0
   22990:	str	r0, [fp, #-8]
   22994:	b	22998 <__assert_fail@plt+0x11124>
   22998:	ldr	r0, [fp, #-8]
   2299c:	ldrb	r0, [r0]
   229a0:	cmp	r0, #47	; 0x2f
   229a4:	beq	229ac <__assert_fail@plt+0x11138>
   229a8:	b	229cc <__assert_fail@plt+0x11158>
   229ac:	movw	r0, #17943	; 0x4617
   229b0:	movt	r0, #2
   229b4:	movw	r1, #17891	; 0x45e3
   229b8:	movt	r1, #2
   229bc:	movw	r2, #162	; 0xa2
   229c0:	movw	r3, #17908	; 0x45f4
   229c4:	movt	r3, #2
   229c8:	bl	11874 <__assert_fail@plt>
   229cc:	ldr	r0, [fp, #-8]
   229d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   229d4:	cmp	r0, r1
   229d8:	bhi	229e0 <__assert_fail@plt+0x1116c>
   229dc:	b	22a00 <__assert_fail@plt+0x1118c>
   229e0:	movw	r0, #17955	; 0x4623
   229e4:	movt	r0, #2
   229e8:	movw	r1, #17891	; 0x45e3
   229ec:	movt	r1, #2
   229f0:	movw	r2, #163	; 0xa3
   229f4:	movw	r3, #17908	; 0x45f4
   229f8:	movt	r3, #2
   229fc:	bl	11874 <__assert_fail@plt>
   22a00:	b	22a04 <__assert_fail@plt+0x11190>
   22a04:	ldr	r0, [fp, #-20]	; 0xffffffec
   22a08:	ldr	r1, [fp, #-8]
   22a0c:	sub	r0, r0, r1
   22a10:	movw	r1, #4096	; 0x1000
   22a14:	cmp	r1, r0
   22a18:	bgt	22adc <__assert_fail@plt+0x11268>
   22a1c:	ldr	r0, [fp, #-8]
   22a20:	movw	r1, #47	; 0x2f
   22a24:	movw	r2, #4096	; 0x1000
   22a28:	bl	116e8 <memrchr@plt>
   22a2c:	str	r0, [sp, #12]
   22a30:	ldr	r0, [sp, #12]
   22a34:	movw	r1, #0
   22a38:	cmp	r0, r1
   22a3c:	bne	22a58 <__assert_fail@plt+0x111e4>
   22a40:	bl	11700 <__errno_location@plt>
   22a44:	movw	r1, #36	; 0x24
   22a48:	str	r1, [r0]
   22a4c:	mvn	r0, #0
   22a50:	str	r0, [fp, #-4]
   22a54:	b	22b60 <__assert_fail@plt+0x112ec>
   22a58:	ldr	r0, [sp, #12]
   22a5c:	movw	r1, #0
   22a60:	strb	r1, [r0]
   22a64:	ldr	r0, [sp, #12]
   22a68:	ldr	r1, [fp, #-8]
   22a6c:	sub	r0, r0, r1
   22a70:	cmp	r0, #4096	; 0x1000
   22a74:	bge	22a7c <__assert_fail@plt+0x11208>
   22a78:	b	22a9c <__assert_fail@plt+0x11228>
   22a7c:	movw	r0, #17970	; 0x4632
   22a80:	movt	r0, #2
   22a84:	movw	r1, #17891	; 0x45e3
   22a88:	movt	r1, #2
   22a8c:	movw	r2, #179	; 0xb3
   22a90:	movw	r3, #17908	; 0x45f4
   22a94:	movt	r3, #2
   22a98:	bl	11874 <__assert_fail@plt>
   22a9c:	ldr	r1, [fp, #-8]
   22aa0:	sub	r0, fp, #24
   22aa4:	bl	22b88 <__assert_fail@plt+0x11314>
   22aa8:	str	r0, [sp, #16]
   22aac:	ldr	r0, [sp, #12]
   22ab0:	movw	r1, #47	; 0x2f
   22ab4:	strb	r1, [r0]
   22ab8:	ldr	r0, [sp, #16]
   22abc:	cmp	r0, #0
   22ac0:	beq	22ac8 <__assert_fail@plt+0x11254>
   22ac4:	b	22b30 <__assert_fail@plt+0x112bc>
   22ac8:	ldr	r0, [sp, #12]
   22acc:	add	r0, r0, #1
   22ad0:	bl	22bf4 <__assert_fail@plt+0x11380>
   22ad4:	str	r0, [fp, #-8]
   22ad8:	b	22a04 <__assert_fail@plt+0x11190>
   22adc:	ldr	r0, [fp, #-8]
   22ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   22ae4:	cmp	r0, r1
   22ae8:	bcs	22b08 <__assert_fail@plt+0x11294>
   22aec:	ldr	r1, [fp, #-8]
   22af0:	sub	r0, fp, #24
   22af4:	bl	22b88 <__assert_fail@plt+0x11314>
   22af8:	cmp	r0, #0
   22afc:	beq	22b04 <__assert_fail@plt+0x11290>
   22b00:	b	22b30 <__assert_fail@plt+0x112bc>
   22b04:	b	22b08 <__assert_fail@plt+0x11294>
   22b08:	sub	r0, fp, #24
   22b0c:	bl	22c2c <__assert_fail@plt+0x113b8>
   22b10:	cmp	r0, #0
   22b14:	beq	22b1c <__assert_fail@plt+0x112a8>
   22b18:	b	22b30 <__assert_fail@plt+0x112bc>
   22b1c:	sub	r0, fp, #24
   22b20:	bl	22c50 <__assert_fail@plt+0x113dc>
   22b24:	movw	r0, #0
   22b28:	str	r0, [fp, #-4]
   22b2c:	b	22b60 <__assert_fail@plt+0x112ec>
   22b30:	bl	11700 <__errno_location@plt>
   22b34:	ldr	r0, [r0]
   22b38:	str	r0, [sp, #8]
   22b3c:	sub	r0, fp, #24
   22b40:	bl	22c50 <__assert_fail@plt+0x113dc>
   22b44:	ldr	r0, [sp, #8]
   22b48:	str	r0, [sp, #4]
   22b4c:	bl	11700 <__errno_location@plt>
   22b50:	ldr	r1, [sp, #4]
   22b54:	str	r1, [r0]
   22b58:	mvn	r0, #0
   22b5c:	str	r0, [fp, #-4]
   22b60:	ldr	r0, [fp, #-4]
   22b64:	mov	sp, fp
   22b68:	pop	{fp, pc}
   22b6c:	sub	sp, sp, #4
   22b70:	str	r0, [sp]
   22b74:	ldr	r0, [sp]
   22b78:	mvn	r1, #99	; 0x63
   22b7c:	str	r1, [r0]
   22b80:	add	sp, sp, #4
   22b84:	bx	lr
   22b88:	push	{fp, lr}
   22b8c:	mov	fp, sp
   22b90:	sub	sp, sp, #16
   22b94:	str	r0, [sp, #8]
   22b98:	str	r1, [sp, #4]
   22b9c:	ldr	r0, [sp, #8]
   22ba0:	ldr	r0, [r0]
   22ba4:	ldr	r1, [sp, #4]
   22ba8:	movw	r2, #18688	; 0x4900
   22bac:	bl	116dc <openat64@plt>
   22bb0:	str	r0, [sp]
   22bb4:	ldr	r0, [sp]
   22bb8:	cmp	r0, #0
   22bbc:	bge	22bcc <__assert_fail@plt+0x11358>
   22bc0:	mvn	r0, #0
   22bc4:	str	r0, [fp, #-4]
   22bc8:	b	22be8 <__assert_fail@plt+0x11374>
   22bcc:	ldr	r0, [sp, #8]
   22bd0:	bl	22c50 <__assert_fail@plt+0x113dc>
   22bd4:	ldr	r0, [sp]
   22bd8:	ldr	r1, [sp, #8]
   22bdc:	str	r0, [r1]
   22be0:	movw	r0, #0
   22be4:	str	r0, [fp, #-4]
   22be8:	ldr	r0, [fp, #-4]
   22bec:	mov	sp, fp
   22bf0:	pop	{fp, pc}
   22bf4:	push	{fp, lr}
   22bf8:	mov	fp, sp
   22bfc:	sub	sp, sp, #8
   22c00:	str	r0, [sp, #4]
   22c04:	ldr	r0, [sp, #4]
   22c08:	movw	r1, #17677	; 0x450d
   22c0c:	movt	r1, #2
   22c10:	bl	11868 <strspn@plt>
   22c14:	str	r0, [sp]
   22c18:	ldr	r0, [sp, #4]
   22c1c:	ldr	r1, [sp]
   22c20:	add	r0, r0, r1
   22c24:	mov	sp, fp
   22c28:	pop	{fp, pc}
   22c2c:	push	{fp, lr}
   22c30:	mov	fp, sp
   22c34:	sub	sp, sp, #8
   22c38:	str	r0, [sp, #4]
   22c3c:	ldr	r0, [sp, #4]
   22c40:	ldr	r0, [r0]
   22c44:	bl	117cc <fchdir@plt>
   22c48:	mov	sp, fp
   22c4c:	pop	{fp, pc}
   22c50:	push	{fp, lr}
   22c54:	mov	fp, sp
   22c58:	sub	sp, sp, #8
   22c5c:	str	r0, [sp, #4]
   22c60:	ldr	r0, [sp, #4]
   22c64:	ldr	r0, [r0]
   22c68:	movw	r1, #0
   22c6c:	cmp	r1, r0
   22c70:	bgt	22cc8 <__assert_fail@plt+0x11454>
   22c74:	ldr	r0, [sp, #4]
   22c78:	ldr	r0, [r0]
   22c7c:	bl	11844 <close@plt>
   22c80:	cmp	r0, #0
   22c84:	movw	r0, #0
   22c88:	movne	r0, #1
   22c8c:	and	r0, r0, #1
   22c90:	strb	r0, [sp, #3]
   22c94:	ldrb	r0, [sp, #3]
   22c98:	tst	r0, #1
   22c9c:	bne	22ca4 <__assert_fail@plt+0x11430>
   22ca0:	b	22cc4 <__assert_fail@plt+0x11450>
   22ca4:	movw	r0, #17989	; 0x4645
   22ca8:	movt	r0, #2
   22cac:	movw	r1, #17891	; 0x45e3
   22cb0:	movt	r1, #2
   22cb4:	movw	r2, #64	; 0x40
   22cb8:	movw	r3, #18002	; 0x4652
   22cbc:	movt	r3, #2
   22cc0:	bl	11874 <__assert_fail@plt>
   22cc4:	b	22cc8 <__assert_fail@plt+0x11454>
   22cc8:	mov	sp, fp
   22ccc:	pop	{fp, pc}
   22cd0:	push	{r4, r5, fp, lr}
   22cd4:	add	fp, sp, #8
   22cd8:	sub	sp, sp, #272	; 0x110
   22cdc:	add	r1, sp, #7
   22ce0:	str	r0, [fp, #-16]
   22ce4:	ldr	r0, [fp, #-16]
   22ce8:	movw	r2, #257	; 0x101
   22cec:	bl	22d6c <__assert_fail@plt+0x114f8>
   22cf0:	cmp	r0, #0
   22cf4:	beq	22d08 <__assert_fail@plt+0x11494>
   22cf8:	movw	r0, #0
   22cfc:	and	r0, r0, #1
   22d00:	strb	r0, [fp, #-9]
   22d04:	b	22d5c <__assert_fail@plt+0x114e8>
   22d08:	add	r0, sp, #7
   22d0c:	movw	r1, #18039	; 0x4677
   22d10:	movt	r1, #2
   22d14:	bl	114d8 <strcmp@plt>
   22d18:	cmp	r0, #0
   22d1c:	movw	r0, #1
   22d20:	str	r0, [sp]
   22d24:	beq	22d48 <__assert_fail@plt+0x114d4>
   22d28:	add	r0, sp, #7
   22d2c:	movw	r1, #18041	; 0x4679
   22d30:	movt	r1, #2
   22d34:	bl	114d8 <strcmp@plt>
   22d38:	cmp	r0, #0
   22d3c:	movw	r0, #0
   22d40:	moveq	r0, #1
   22d44:	str	r0, [sp]
   22d48:	ldr	r0, [sp]
   22d4c:	mvn	r1, #0
   22d50:	eor	r0, r0, r1
   22d54:	and	r0, r0, #1
   22d58:	strb	r0, [fp, #-9]
   22d5c:	ldrb	r0, [fp, #-9]
   22d60:	and	r0, r0, #1
   22d64:	sub	sp, fp, #8
   22d68:	pop	{r4, r5, fp, pc}
   22d6c:	push	{fp, lr}
   22d70:	mov	fp, sp
   22d74:	sub	sp, sp, #16
   22d78:	str	r0, [fp, #-4]
   22d7c:	str	r1, [sp, #8]
   22d80:	str	r2, [sp, #4]
   22d84:	ldr	r0, [fp, #-4]
   22d88:	ldr	r1, [sp, #8]
   22d8c:	ldr	r2, [sp, #4]
   22d90:	bl	22d9c <__assert_fail@plt+0x11528>
   22d94:	mov	sp, fp
   22d98:	pop	{fp, pc}
   22d9c:	push	{fp, lr}
   22da0:	mov	fp, sp
   22da4:	sub	sp, sp, #24
   22da8:	str	r0, [fp, #-8]
   22dac:	str	r1, [sp, #12]
   22db0:	str	r2, [sp, #8]
   22db4:	ldr	r0, [fp, #-8]
   22db8:	bl	22e9c <__assert_fail@plt+0x11628>
   22dbc:	str	r0, [sp, #4]
   22dc0:	ldr	r0, [sp, #4]
   22dc4:	movw	r1, #0
   22dc8:	cmp	r0, r1
   22dcc:	bne	22df4 <__assert_fail@plt+0x11580>
   22dd0:	ldr	r0, [sp, #8]
   22dd4:	cmp	r0, #0
   22dd8:	bls	22de8 <__assert_fail@plt+0x11574>
   22ddc:	ldr	r0, [sp, #12]
   22de0:	movw	r1, #0
   22de4:	strb	r1, [r0]
   22de8:	movw	r0, #22
   22dec:	str	r0, [fp, #-4]
   22df0:	b	22e70 <__assert_fail@plt+0x115fc>
   22df4:	ldr	r0, [sp, #4]
   22df8:	bl	116d0 <strlen@plt>
   22dfc:	str	r0, [sp]
   22e00:	ldr	r0, [sp]
   22e04:	ldr	r1, [sp, #8]
   22e08:	cmp	r0, r1
   22e0c:	bcs	22e30 <__assert_fail@plt+0x115bc>
   22e10:	ldr	r0, [sp, #12]
   22e14:	ldr	r1, [sp, #4]
   22e18:	ldr	r2, [sp]
   22e1c:	add	r2, r2, #1
   22e20:	bl	1152c <memcpy@plt>
   22e24:	movw	r0, #0
   22e28:	str	r0, [fp, #-4]
   22e2c:	b	22e70 <__assert_fail@plt+0x115fc>
   22e30:	ldr	r0, [sp, #8]
   22e34:	cmp	r0, #0
   22e38:	bls	22e68 <__assert_fail@plt+0x115f4>
   22e3c:	ldr	r0, [sp, #12]
   22e40:	ldr	r1, [sp, #4]
   22e44:	ldr	r2, [sp, #8]
   22e48:	sub	r2, r2, #1
   22e4c:	bl	1152c <memcpy@plt>
   22e50:	ldr	r0, [sp, #12]
   22e54:	ldr	r1, [sp, #8]
   22e58:	sub	r1, r1, #1
   22e5c:	add	r0, r0, r1
   22e60:	movw	r1, #0
   22e64:	strb	r1, [r0]
   22e68:	movw	r0, #34	; 0x22
   22e6c:	str	r0, [fp, #-4]
   22e70:	ldr	r0, [fp, #-4]
   22e74:	mov	sp, fp
   22e78:	pop	{fp, pc}
   22e7c:	push	{fp, lr}
   22e80:	mov	fp, sp
   22e84:	sub	sp, sp, #8
   22e88:	str	r0, [sp, #4]
   22e8c:	ldr	r0, [sp, #4]
   22e90:	bl	22e9c <__assert_fail@plt+0x11628>
   22e94:	mov	sp, fp
   22e98:	pop	{fp, pc}
   22e9c:	push	{fp, lr}
   22ea0:	mov	fp, sp
   22ea4:	sub	sp, sp, #8
   22ea8:	str	r0, [sp, #4]
   22eac:	ldr	r0, [sp, #4]
   22eb0:	movw	r1, #0
   22eb4:	bl	11778 <setlocale@plt>
   22eb8:	str	r0, [sp]
   22ebc:	ldr	r0, [sp]
   22ec0:	mov	sp, fp
   22ec4:	pop	{fp, pc}
   22ec8:	cmp	r3, #0
   22ecc:	cmpeq	r2, #0
   22ed0:	bne	22ef4 <__assert_fail@plt+0x11680>
   22ed4:	cmp	r1, #0
   22ed8:	movlt	r1, #-2147483648	; 0x80000000
   22edc:	movlt	r0, #0
   22ee0:	blt	22ef0 <__assert_fail@plt+0x1167c>
   22ee4:	cmpeq	r0, #0
   22ee8:	mvnne	r1, #-2147483648	; 0x80000000
   22eec:	mvnne	r0, #0
   22ef0:	b	22fd8 <__assert_fail@plt+0x11764>
   22ef4:	sub	sp, sp, #8
   22ef8:	push	{sp, lr}
   22efc:	cmp	r1, #0
   22f00:	blt	22f20 <__assert_fail@plt+0x116ac>
   22f04:	cmp	r3, #0
   22f08:	blt	22f54 <__assert_fail@plt+0x116e0>
   22f0c:	bl	22fe8 <__assert_fail@plt+0x11774>
   22f10:	ldr	lr, [sp, #4]
   22f14:	add	sp, sp, #8
   22f18:	pop	{r2, r3}
   22f1c:	bx	lr
   22f20:	rsbs	r0, r0, #0
   22f24:	sbc	r1, r1, r1, lsl #1
   22f28:	cmp	r3, #0
   22f2c:	blt	22f78 <__assert_fail@plt+0x11704>
   22f30:	bl	22fe8 <__assert_fail@plt+0x11774>
   22f34:	ldr	lr, [sp, #4]
   22f38:	add	sp, sp, #8
   22f3c:	pop	{r2, r3}
   22f40:	rsbs	r0, r0, #0
   22f44:	sbc	r1, r1, r1, lsl #1
   22f48:	rsbs	r2, r2, #0
   22f4c:	sbc	r3, r3, r3, lsl #1
   22f50:	bx	lr
   22f54:	rsbs	r2, r2, #0
   22f58:	sbc	r3, r3, r3, lsl #1
   22f5c:	bl	22fe8 <__assert_fail@plt+0x11774>
   22f60:	ldr	lr, [sp, #4]
   22f64:	add	sp, sp, #8
   22f68:	pop	{r2, r3}
   22f6c:	rsbs	r0, r0, #0
   22f70:	sbc	r1, r1, r1, lsl #1
   22f74:	bx	lr
   22f78:	rsbs	r2, r2, #0
   22f7c:	sbc	r3, r3, r3, lsl #1
   22f80:	bl	22fe8 <__assert_fail@plt+0x11774>
   22f84:	ldr	lr, [sp, #4]
   22f88:	add	sp, sp, #8
   22f8c:	pop	{r2, r3}
   22f90:	rsbs	r2, r2, #0
   22f94:	sbc	r3, r3, r3, lsl #1
   22f98:	bx	lr
   22f9c:	cmp	r3, #0
   22fa0:	cmpeq	r2, #0
   22fa4:	bne	22fbc <__assert_fail@plt+0x11748>
   22fa8:	cmp	r1, #0
   22fac:	cmpeq	r0, #0
   22fb0:	mvnne	r1, #0
   22fb4:	mvnne	r0, #0
   22fb8:	b	22fd8 <__assert_fail@plt+0x11764>
   22fbc:	sub	sp, sp, #8
   22fc0:	push	{sp, lr}
   22fc4:	bl	22fe8 <__assert_fail@plt+0x11774>
   22fc8:	ldr	lr, [sp, #4]
   22fcc:	add	sp, sp, #8
   22fd0:	pop	{r2, r3}
   22fd4:	bx	lr
   22fd8:	push	{r1, lr}
   22fdc:	mov	r0, #8
   22fe0:	bl	114c0 <raise@plt>
   22fe4:	pop	{r1, pc}
   22fe8:	cmp	r1, r3
   22fec:	cmpeq	r0, r2
   22ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ff4:	mov	r4, r0
   22ff8:	movcc	r0, #0
   22ffc:	mov	r5, r1
   23000:	ldr	lr, [sp, #36]	; 0x24
   23004:	movcc	r1, r0
   23008:	bcc	23104 <__assert_fail@plt+0x11890>
   2300c:	cmp	r3, #0
   23010:	clzeq	ip, r2
   23014:	clzne	ip, r3
   23018:	addeq	ip, ip, #32
   2301c:	cmp	r5, #0
   23020:	clzeq	r1, r4
   23024:	addeq	r1, r1, #32
   23028:	clzne	r1, r5
   2302c:	sub	ip, ip, r1
   23030:	sub	sl, ip, #32
   23034:	lsl	r9, r3, ip
   23038:	rsb	fp, ip, #32
   2303c:	orr	r9, r9, r2, lsl sl
   23040:	orr	r9, r9, r2, lsr fp
   23044:	lsl	r8, r2, ip
   23048:	cmp	r5, r9
   2304c:	cmpeq	r4, r8
   23050:	movcc	r0, #0
   23054:	movcc	r1, r0
   23058:	bcc	23074 <__assert_fail@plt+0x11800>
   2305c:	mov	r0, #1
   23060:	subs	r4, r4, r8
   23064:	lsl	r1, r0, sl
   23068:	orr	r1, r1, r0, lsr fp
   2306c:	lsl	r0, r0, ip
   23070:	sbc	r5, r5, r9
   23074:	cmp	ip, #0
   23078:	beq	23104 <__assert_fail@plt+0x11890>
   2307c:	lsr	r6, r8, #1
   23080:	orr	r6, r6, r9, lsl #31
   23084:	lsr	r7, r9, #1
   23088:	mov	r2, ip
   2308c:	b	230b0 <__assert_fail@plt+0x1183c>
   23090:	subs	r3, r4, r6
   23094:	sbc	r8, r5, r7
   23098:	adds	r3, r3, r3
   2309c:	adc	r8, r8, r8
   230a0:	adds	r4, r3, #1
   230a4:	adc	r5, r8, #0
   230a8:	subs	r2, r2, #1
   230ac:	beq	230cc <__assert_fail@plt+0x11858>
   230b0:	cmp	r5, r7
   230b4:	cmpeq	r4, r6
   230b8:	bcs	23090 <__assert_fail@plt+0x1181c>
   230bc:	adds	r4, r4, r4
   230c0:	adc	r5, r5, r5
   230c4:	subs	r2, r2, #1
   230c8:	bne	230b0 <__assert_fail@plt+0x1183c>
   230cc:	lsr	r3, r4, ip
   230d0:	orr	r3, r3, r5, lsl fp
   230d4:	lsr	r2, r5, ip
   230d8:	orr	r3, r3, r5, lsr sl
   230dc:	adds	r0, r0, r4
   230e0:	mov	r4, r3
   230e4:	lsl	r3, r2, ip
   230e8:	orr	r3, r3, r4, lsl sl
   230ec:	lsl	ip, r4, ip
   230f0:	orr	r3, r3, r4, lsr fp
   230f4:	adc	r1, r1, r5
   230f8:	subs	r0, r0, ip
   230fc:	mov	r5, r2
   23100:	sbc	r1, r1, r3
   23104:	cmp	lr, #0
   23108:	strdne	r4, [lr]
   2310c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23114:	mov	r7, r0
   23118:	ldr	r6, [pc, #72]	; 23168 <__assert_fail@plt+0x118f4>
   2311c:	ldr	r5, [pc, #72]	; 2316c <__assert_fail@plt+0x118f8>
   23120:	add	r6, pc, r6
   23124:	add	r5, pc, r5
   23128:	sub	r6, r6, r5
   2312c:	mov	r8, r1
   23130:	mov	r9, r2
   23134:	bl	1147c <fstatfs64@plt-0x20>
   23138:	asrs	r6, r6, #2
   2313c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23140:	mov	r4, #0
   23144:	add	r4, r4, #1
   23148:	ldr	r3, [r5], #4
   2314c:	mov	r2, r9
   23150:	mov	r1, r8
   23154:	mov	r0, r7
   23158:	blx	r3
   2315c:	cmp	r6, r4
   23160:	bne	23144 <__assert_fail@plt+0x118d0>
   23164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23168:	ldrdeq	r1, [r1], -ip
   2316c:	ldrdeq	r1, [r1], -r4
   23170:	bx	lr
   23174:	ldr	r3, [pc, #12]	; 23188 <__assert_fail@plt+0x11914>
   23178:	mov	r1, #0
   2317c:	add	r3, pc, r3
   23180:	ldr	r2, [r3]
   23184:	b	1170c <__cxa_atexit@plt>
   23188:	ldrdeq	r1, [r1], -ip
   2318c:	mov	r2, r1
   23190:	mov	r1, r0
   23194:	mov	r0, #3
   23198:	b	11814 <__xstat64@plt>
   2319c:	mov	r2, r1
   231a0:	mov	r1, r0
   231a4:	mov	r0, #3
   231a8:	b	115bc <__fxstat64@plt>
   231ac:	mov	r2, r1
   231b0:	mov	r1, r0
   231b4:	mov	r0, #3
   231b8:	b	11850 <__lxstat64@plt>
   231bc:	push	{lr}		; (str lr, [sp, #-4]!)
   231c0:	sub	sp, sp, #12
   231c4:	str	r3, [sp]
   231c8:	mov	r3, r2
   231cc:	mov	r2, r1
   231d0:	mov	r1, r0
   231d4:	mov	r0, #3
   231d8:	bl	115a4 <__fxstatat64@plt>
   231dc:	add	sp, sp, #12
   231e0:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000231e4 <.fini>:
   231e4:	push	{r3, lr}
   231e8:	pop	{r3, pc}
