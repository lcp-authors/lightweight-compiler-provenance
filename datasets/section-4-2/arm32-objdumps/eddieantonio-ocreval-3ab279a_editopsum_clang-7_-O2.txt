
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

00010758 <.init>:
   10758:	push	{r3, lr}
   1075c:	bl	108b0 <abort@plt+0x48>
   10760:	pop	{r3, pc}

Disassembly of section .plt:

00010764 <calloc@plt-0x14>:
   10764:	push	{lr}		; (str lr, [sp, #-4]!)
   10768:	ldr	lr, [pc, #4]	; 10774 <calloc@plt-0x4>
   1076c:	add	lr, pc, lr
   10770:	ldr	pc, [lr, #8]!
   10774:	andeq	r1, r1, ip, lsl #17

00010778 <calloc@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2188]!	; 0x88c

00010784 <strcmp@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2180]!	; 0x884

00010790 <fopen@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2172]!	; 0x87c

0001079c <free@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2164]!	; 0x874

000107a8 <fgets@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2156]!	; 0x86c

000107b4 <strdup@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2148]!	; 0x864

000107c0 <unlink@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2140]!	; 0x85c

000107cc <__xstat@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2132]!	; 0x854

000107d8 <fwrite@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2124]!	; 0x84c

000107e4 <__libc_start_main@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2116]!	; 0x844

000107f0 <__sysv_signal@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2108]!	; 0x83c

000107fc <__gmon_start__@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2100]!	; 0x834

00010808 <getpid@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2092]!	; 0x82c

00010814 <exit@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2084]!	; 0x824

00010820 <strlen@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2076]!	; 0x81c

0001082c <fprintf@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2068]!	; 0x814

00010838 <__isoc99_sscanf@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2060]!	; 0x80c

00010844 <fclose@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2052]!	; 0x804

00010850 <sprintf@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2044]!	; 0x7fc

0001085c <strncmp@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #2036]!	; 0x7f4

00010868 <abort@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #2028]!	; 0x7ec

Disassembly of section .text:

00010874 <error@@Base-0xa40>:
   10874:	mov	fp, #0
   10878:	mov	lr, #0
   1087c:	pop	{r1}		; (ldr r1, [sp], #4)
   10880:	mov	r2, sp
   10884:	push	{r2}		; (str r2, [sp, #-4]!)
   10888:	push	{r0}		; (str r0, [sp, #-4]!)
   1088c:	ldr	ip, [pc, #16]	; 108a4 <abort@plt+0x3c>
   10890:	push	{ip}		; (str ip, [sp, #-4]!)
   10894:	ldr	r0, [pc, #12]	; 108a8 <abort@plt+0x40>
   10898:	ldr	r3, [pc, #12]	; 108ac <abort@plt+0x44>
   1089c:	bl	107e4 <__libc_start_main@plt>
   108a0:	bl	10868 <abort@plt>
   108a4:	andeq	r1, r1, ip, lsr r5
   108a8:	andeq	r0, r1, r4, ror #18
   108ac:	ldrdeq	r1, [r1], -ip
   108b0:	ldr	r3, [pc, #20]	; 108cc <abort@plt+0x64>
   108b4:	ldr	r2, [pc, #20]	; 108d0 <abort@plt+0x68>
   108b8:	add	r3, pc, r3
   108bc:	ldr	r2, [r3, r2]
   108c0:	cmp	r2, #0
   108c4:	bxeq	lr
   108c8:	b	107fc <__gmon_start__@plt>
   108cc:	andeq	r1, r1, r0, asr #14
   108d0:	andeq	r0, r0, ip, rrx
   108d4:	ldr	r0, [pc, #24]	; 108f4 <abort@plt+0x8c>
   108d8:	ldr	r3, [pc, #24]	; 108f8 <abort@plt+0x90>
   108dc:	cmp	r3, r0
   108e0:	bxeq	lr
   108e4:	ldr	r3, [pc, #16]	; 108fc <abort@plt+0x94>
   108e8:	cmp	r3, #0
   108ec:	bxeq	lr
   108f0:	bx	r3
   108f4:	muleq	r2, r8, r0
   108f8:	muleq	r2, r8, r0
   108fc:	andeq	r0, r0, r0
   10900:	ldr	r0, [pc, #36]	; 1092c <abort@plt+0xc4>
   10904:	ldr	r1, [pc, #36]	; 10930 <abort@plt+0xc8>
   10908:	sub	r1, r1, r0
   1090c:	asr	r1, r1, #2
   10910:	add	r1, r1, r1, lsr #31
   10914:	asrs	r1, r1, #1
   10918:	bxeq	lr
   1091c:	ldr	r3, [pc, #16]	; 10934 <abort@plt+0xcc>
   10920:	cmp	r3, #0
   10924:	bxeq	lr
   10928:	bx	r3
   1092c:	muleq	r2, r8, r0
   10930:	muleq	r2, r8, r0
   10934:	andeq	r0, r0, r0
   10938:	push	{r4, lr}
   1093c:	ldr	r4, [pc, #24]	; 1095c <abort@plt+0xf4>
   10940:	ldrb	r3, [r4]
   10944:	cmp	r3, #0
   10948:	popne	{r4, pc}
   1094c:	bl	108d4 <abort@plt+0x6c>
   10950:	mov	r3, #1
   10954:	strb	r3, [r4]
   10958:	pop	{r4, pc}
   1095c:	muleq	r2, r8, r0
   10960:	b	10900 <abort@plt+0x98>
   10964:	push	{fp, lr}
   10968:	mov	fp, sp
   1096c:	sub	sp, sp, #8
   10970:	str	r0, [sp, #4]
   10974:	add	r0, sp, #4
   10978:	mov	r3, #0
   1097c:	mov	r4, r1
   10980:	mov	r6, #0
   10984:	ldr	r2, [pc, #84]	; 109e0 <abort@plt+0x178>
   10988:	add	r2, pc, r2
   1098c:	bl	1102c <abort@plt+0x7c4>
   10990:	ldr	r0, [sp, #4]
   10994:	cmp	r0, #2
   10998:	blt	109d4 <abort@plt+0x16c>
   1099c:	ldr	r5, [pc, #64]	; 109e4 <abort@plt+0x17c>
   109a0:	ldr	r5, [pc, r5]
   109a4:	ldr	r1, [r4, r6, lsl #2]
   109a8:	mov	r0, r5
   109ac:	bl	109f0 <abort@plt+0x188>
   109b0:	ldr	r0, [sp, #4]
   109b4:	add	r6, r6, #1
   109b8:	cmp	r6, r0
   109bc:	blt	109a4 <abort@plt+0x13c>
   109c0:	ldr	r0, [pc, #32]	; 109e8 <abort@plt+0x180>
   109c4:	mov	r1, #0
   109c8:	ldr	r0, [pc, r0]
   109cc:	bl	10cd8 <abort@plt+0x470>
   109d0:	bl	11270 <abort@plt+0xa08>
   109d4:	ldr	r0, [pc, #16]	; 109ec <abort@plt+0x184>
   109d8:	add	r0, pc, r0
   109dc:	bl	112b4 <error@@Base>
   109e0:			; <UNDEFINED> instruction: 0x00000bbc
   109e4:	ldrdeq	r1, [r1], -r4
   109e8:	andeq	r1, r1, ip, lsr #13
   109ec:	muleq	r0, sp, fp
   109f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   109f4:	add	fp, sp, #24
   109f8:	sub	sp, sp, #16
   109fc:	mov	r6, r1
   10a00:	ldr	r1, [pc, #624]	; 10c78 <abort@plt+0x410>
   10a04:	mov	r4, r0
   10a08:	mov	r0, r6
   10a0c:	add	r1, pc, r1
   10a10:	bl	10e94 <abort@plt+0x62c>
   10a14:	mov	r5, r0
   10a18:	ldr	r0, [pc, #604]	; 10c7c <abort@plt+0x414>
   10a1c:	mov	r1, #99	; 0x63
   10a20:	mov	r2, r5
   10a24:	add	r0, pc, r0
   10a28:	bl	107a8 <fgets@plt>
   10a2c:	cmp	r0, #0
   10a30:	beq	10c5c <abort@plt+0x3f4>
   10a34:	ldr	r0, [pc, #580]	; 10c80 <abort@plt+0x418>
   10a38:	ldr	r1, [pc, #580]	; 10c84 <abort@plt+0x41c>
   10a3c:	mov	r2, #42	; 0x2a
   10a40:	add	r0, pc, r0
   10a44:	add	r1, pc, r1
   10a48:	bl	1085c <strncmp@plt>
   10a4c:	cmp	r0, #0
   10a50:	bne	10c5c <abort@plt+0x3f4>
   10a54:	ldr	r0, [pc, #556]	; 10c88 <abort@plt+0x420>
   10a58:	mov	r1, #99	; 0x63
   10a5c:	mov	r2, r5
   10a60:	add	r0, pc, r0
   10a64:	bl	107a8 <fgets@plt>
   10a68:	cmp	r0, #0
   10a6c:	beq	10c5c <abort@plt+0x3f4>
   10a70:	ldr	r0, [pc, #532]	; 10c8c <abort@plt+0x424>
   10a74:	ldr	r1, [pc, #532]	; 10c90 <abort@plt+0x428>
   10a78:	add	r0, pc, r0
   10a7c:	add	r1, pc, r1
   10a80:	bl	10784 <strcmp@plt>
   10a84:	cmp	r0, #0
   10a88:	bne	10c5c <abort@plt+0x3f4>
   10a8c:	ldr	r0, [pc, #512]	; 10c94 <abort@plt+0x42c>
   10a90:	mov	r1, #99	; 0x63
   10a94:	mov	r2, r5
   10a98:	add	r0, pc, r0
   10a9c:	bl	107a8 <fgets@plt>
   10aa0:	cmp	r0, #0
   10aa4:	beq	10c5c <abort@plt+0x3f4>
   10aa8:	ldr	r0, [pc, #488]	; 10c98 <abort@plt+0x430>
   10aac:	ldr	r1, [pc, #488]	; 10c9c <abort@plt+0x434>
   10ab0:	add	r2, sp, #8
   10ab4:	add	r0, pc, r0
   10ab8:	add	r1, pc, r1
   10abc:	bl	10838 <__isoc99_sscanf@plt>
   10ac0:	cmp	r0, #1
   10ac4:	bne	10c5c <abort@plt+0x3f4>
   10ac8:	ldr	r0, [r4]
   10acc:	ldr	r1, [sp, #8]
   10ad0:	mov	r2, r5
   10ad4:	add	r0, r0, r1
   10ad8:	mov	r1, #99	; 0x63
   10adc:	str	r0, [r4]
   10ae0:	ldr	r0, [pc, #440]	; 10ca0 <abort@plt+0x438>
   10ae4:	add	r0, pc, r0
   10ae8:	bl	107a8 <fgets@plt>
   10aec:	cmp	r0, #0
   10af0:	beq	10c5c <abort@plt+0x3f4>
   10af4:	ldr	r0, [pc, #424]	; 10ca4 <abort@plt+0x43c>
   10af8:	ldr	r1, [pc, #424]	; 10ca8 <abort@plt+0x440>
   10afc:	add	r2, sp, #8
   10b00:	add	r0, pc, r0
   10b04:	add	r1, pc, r1
   10b08:	bl	10838 <__isoc99_sscanf@plt>
   10b0c:	cmp	r0, #1
   10b10:	bne	10c5c <abort@plt+0x3f4>
   10b14:	ldr	r0, [r4, #4]
   10b18:	ldr	r1, [sp, #8]
   10b1c:	mov	r2, r5
   10b20:	add	r0, r0, r1
   10b24:	mov	r1, #99	; 0x63
   10b28:	str	r0, [r4, #4]
   10b2c:	ldr	r0, [pc, #376]	; 10cac <abort@plt+0x444>
   10b30:	add	r0, pc, r0
   10b34:	bl	107a8 <fgets@plt>
   10b38:	cmp	r0, #0
   10b3c:	beq	10c5c <abort@plt+0x3f4>
   10b40:	ldr	r0, [pc, #360]	; 10cb0 <abort@plt+0x448>
   10b44:	ldr	r1, [pc, #360]	; 10cb4 <abort@plt+0x44c>
   10b48:	add	r2, sp, #12
   10b4c:	add	r0, pc, r0
   10b50:	add	r1, pc, r1
   10b54:	bl	10838 <__isoc99_sscanf@plt>
   10b58:	cmp	r0, #1
   10b5c:	bne	10c5c <abort@plt+0x3f4>
   10b60:	ldr	r1, [sp, #12]
   10b64:	ldr	r0, [r4, #8]
   10b68:	add	r0, r0, r1
   10b6c:	cmp	r1, #1
   10b70:	str	r0, [r4, #8]
   10b74:	blt	10c4c <abort@plt+0x3e4>
   10b78:	ldr	r0, [pc, #312]	; 10cb8 <abort@plt+0x450>
   10b7c:	mov	r1, #99	; 0x63
   10b80:	mov	r2, r5
   10b84:	add	r0, pc, r0
   10b88:	bl	107a8 <fgets@plt>
   10b8c:	cmp	r0, #0
   10b90:	beq	10c4c <abort@plt+0x3e4>
   10b94:	ldr	r0, [pc, #288]	; 10cbc <abort@plt+0x454>
   10b98:	mov	r1, #99	; 0x63
   10b9c:	mov	r2, r5
   10ba0:	add	r0, pc, r0
   10ba4:	bl	107a8 <fgets@plt>
   10ba8:	cmp	r0, #0
   10bac:	beq	10c4c <abort@plt+0x3e4>
   10bb0:	ldr	r0, [pc, #264]	; 10cc0 <abort@plt+0x458>
   10bb4:	mov	r1, #99	; 0x63
   10bb8:	mov	r2, r5
   10bbc:	add	r0, pc, r0
   10bc0:	bl	107a8 <fgets@plt>
   10bc4:	cmp	r0, #0
   10bc8:	beq	10c4c <abort@plt+0x3e4>
   10bcc:	ldr	r0, [pc, #240]	; 10cc4 <abort@plt+0x45c>
   10bd0:	mov	r1, #99	; 0x63
   10bd4:	mov	r2, r5
   10bd8:	add	r0, pc, r0
   10bdc:	bl	107a8 <fgets@plt>
   10be0:	cmp	r0, #0
   10be4:	beq	10c4c <abort@plt+0x3e4>
   10be8:	ldr	r6, [pc, #216]	; 10cc8 <abort@plt+0x460>
   10bec:	ldr	r8, [pc, #216]	; 10ccc <abort@plt+0x464>
   10bf0:	add	r9, sp, #8
   10bf4:	add	r7, sp, #4
   10bf8:	add	r6, pc, r6
   10bfc:	add	r8, pc, r8
   10c00:	mov	r0, r6
   10c04:	mov	r1, r8
   10c08:	mov	r2, r9
   10c0c:	mov	r3, r7
   10c10:	bl	10838 <__isoc99_sscanf@plt>
   10c14:	cmp	r0, #2
   10c18:	bne	10c4c <abort@plt+0x3e4>
   10c1c:	ldr	r0, [sp, #4]
   10c20:	ldr	r2, [sp, #8]
   10c24:	add	r0, r4, r0, lsl #2
   10c28:	ldr	r1, [r0, #12]
   10c2c:	add	r1, r1, r2
   10c30:	mov	r2, r5
   10c34:	str	r1, [r0, #12]
   10c38:	mov	r0, r6
   10c3c:	mov	r1, #99	; 0x63
   10c40:	bl	107a8 <fgets@plt>
   10c44:	cmp	r0, #0
   10c48:	bne	10c00 <abort@plt+0x398>
   10c4c:	mov	r0, r5
   10c50:	bl	10f1c <abort@plt+0x6b4>
   10c54:	sub	sp, fp, #24
   10c58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10c5c:	ldr	r1, [pc, #108]	; 10cd0 <abort@plt+0x468>
   10c60:	ldr	r0, [pc, #108]	; 10cd4 <abort@plt+0x46c>
   10c64:	cmp	r6, #0
   10c68:	add	r1, pc, r1
   10c6c:	add	r0, pc, r0
   10c70:	movne	r1, r6
   10c74:	bl	11304 <error@@Base+0x50>
   10c78:	andeq	r0, r0, r0, lsl #23
   10c7c:	andeq	r1, r1, sp, ror #12
   10c80:	andeq	r1, r1, r1, asr r6
   10c84:	andeq	r0, r0, sl, asr #22
   10c88:	andeq	r1, r1, r1, lsr r6
   10c8c:	andeq	r1, r1, r9, lsl r6
   10c90:	andeq	r0, r0, pc, lsr fp
   10c94:	strdeq	r1, [r1], -r9
   10c98:	ldrdeq	r1, [r1], -sp
   10c9c:	andeq	r0, r0, r8, lsl #23
   10ca0:	andeq	r1, r1, sp, lsr #11
   10ca4:	muleq	r1, r1, r5
   10ca8:	andeq	r0, r0, ip, lsr fp
   10cac:	andeq	r1, r1, r1, ror #10
   10cb0:	andeq	r1, r1, r5, asr #10
   10cb4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10cb8:	andeq	r1, r1, sp, lsl #10
   10cbc:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10cc0:	ldrdeq	r1, [r1], -r5
   10cc4:			; <UNDEFINED> instruction: 0x000114b9
   10cc8:	muleq	r1, r9, r4
   10ccc:	andeq	r0, r0, r0, asr #20
   10cd0:	muleq	r0, r2, r9
   10cd4:	andeq	r0, r0, ip, ror r9
   10cd8:	push	{r4, r5, r6, r7, fp, lr}
   10cdc:	add	fp, sp, #16
   10ce0:	mov	r2, r1
   10ce4:	ldr	r1, [pc, #224]	; 10dcc <abort@plt+0x564>
   10ce8:	mov	r4, r0
   10cec:	mov	r0, r2
   10cf0:	add	r1, pc, r1
   10cf4:	bl	10e94 <abort@plt+0x62c>
   10cf8:	ldr	r1, [pc, #208]	; 10dd0 <abort@plt+0x568>
   10cfc:	ldr	r2, [pc, #208]	; 10dd4 <abort@plt+0x56c>
   10d00:	ldr	r3, [pc, #208]	; 10dd8 <abort@plt+0x570>
   10d04:	mov	r5, r0
   10d08:	add	r1, pc, r1
   10d0c:	add	r2, pc, r2
   10d10:	add	r3, pc, r3
   10d14:	bl	1082c <fprintf@plt>
   10d18:	ldr	r2, [r4]
   10d1c:	ldr	r6, [pc, #184]	; 10ddc <abort@plt+0x574>
   10d20:	ldr	r3, [pc, #184]	; 10de0 <abort@plt+0x578>
   10d24:	mov	r0, r5
   10d28:	add	r6, pc, r6
   10d2c:	add	r3, pc, r3
   10d30:	mov	r1, r6
   10d34:	bl	1082c <fprintf@plt>
   10d38:	ldr	r2, [r4, #4]
   10d3c:	ldr	r3, [pc, #160]	; 10de4 <abort@plt+0x57c>
   10d40:	mov	r0, r5
   10d44:	mov	r1, r6
   10d48:	add	r3, pc, r3
   10d4c:	bl	1082c <fprintf@plt>
   10d50:	ldr	r2, [r4, #8]
   10d54:	ldr	r3, [pc, #140]	; 10de8 <abort@plt+0x580>
   10d58:	mov	r0, r5
   10d5c:	mov	r1, r6
   10d60:	add	r3, pc, r3
   10d64:	bl	1082c <fprintf@plt>
   10d68:	ldr	r0, [r4, #8]
   10d6c:	cmp	r0, #1
   10d70:	blt	10dc0 <abort@plt+0x558>
   10d74:	ldr	r0, [pc, #112]	; 10dec <abort@plt+0x584>
   10d78:	mov	r1, #25
   10d7c:	mov	r2, #1
   10d80:	mov	r3, r5
   10d84:	add	r0, pc, r0
   10d88:	bl	107d8 <fwrite@plt>
   10d8c:	ldr	r6, [pc, #92]	; 10df0 <abort@plt+0x588>
   10d90:	mov	r7, #4
   10d94:	add	r6, pc, r6
   10d98:	ldr	r2, [r4, r7, lsl #2]
   10d9c:	cmp	r2, #1
   10da0:	blt	10db4 <abort@plt+0x54c>
   10da4:	sub	r3, r7, #3
   10da8:	mov	r0, r5
   10dac:	mov	r1, r6
   10db0:	bl	1082c <fprintf@plt>
   10db4:	add	r7, r7, #1
   10db8:	cmp	r7, #104	; 0x68
   10dbc:	bne	10d98 <abort@plt+0x530>
   10dc0:	mov	r0, r5
   10dc4:	pop	{r4, r5, r6, r7, fp, lr}
   10dc8:	b	10f1c <abort@plt+0x6b4>
   10dcc:	andeq	r0, r0, r0, lsl r9
   10dd0:	strdeq	r0, [r0], -sl
   10dd4:	andeq	r0, r0, r2, lsl #17
   10dd8:	andeq	r0, r0, fp, lsr #17
   10ddc:	andeq	r0, r0, ip, lsl r9
   10de0:	ldrdeq	r0, [r0], -fp
   10de4:	andeq	r0, r0, sl, asr #17
   10de8:			; <UNDEFINED> instruction: 0x000008bc
   10dec:	muleq	r0, lr, r8
   10df0:			; <UNDEFINED> instruction: 0x000008bb
   10df4:	push	{fp, lr}
   10df8:	mov	fp, sp
   10dfc:	bl	10778 <calloc@plt>
   10e00:	cmp	r0, #0
   10e04:	popne	{fp, pc}
   10e08:	ldr	r0, [pc, #4]	; 10e14 <abort@plt+0x5ac>
   10e0c:	add	r0, pc, r0
   10e10:	bl	112b4 <error@@Base>
   10e14:	andeq	r0, r0, lr, asr #16
   10e18:	push	{r4, r5, r6, sl, fp, lr}
   10e1c:	add	fp, sp, #16
   10e20:	ldrb	r3, [r0]
   10e24:	ldrb	ip, [r1]
   10e28:	mov	r2, r0
   10e2c:	mov	r0, #0
   10e30:	cmp	r3, #0
   10e34:	beq	10e6c <abort@plt+0x604>
   10e38:	add	r6, r2, #1
   10e3c:	add	lr, r1, #1
   10e40:	mov	r2, #0
   10e44:	uxtb	r4, ip
   10e48:	uxtb	r5, r3
   10e4c:	cmp	r5, r4
   10e50:	bne	10e7c <abort@plt+0x614>
   10e54:	ldrb	r3, [r6, r2]
   10e58:	ldrb	ip, [lr, r2]
   10e5c:	add	r2, r2, #1
   10e60:	cmp	r3, #0
   10e64:	bne	10e44 <abort@plt+0x5dc>
   10e68:	b	10e70 <abort@plt+0x608>
   10e6c:	mov	r2, #0
   10e70:	cmp	ip, #0
   10e74:	popeq	{r4, r5, r6, sl, fp, pc}
   10e78:	mov	r3, #0
   10e7c:	ldrb	r1, [r1, r2]
   10e80:	uxtb	r2, r3
   10e84:	mov	r0, #1
   10e88:	cmp	r2, r1
   10e8c:	mvncc	r0, #0
   10e90:	pop	{r4, r5, r6, sl, fp, pc}
   10e94:	push	{r4, r5, fp, lr}
   10e98:	add	fp, sp, #8
   10e9c:	mov	r5, r1
   10ea0:	cmp	r0, #0
   10ea4:	beq	10ed8 <abort@plt+0x670>
   10ea8:	mov	r1, r5
   10eac:	mov	r4, r0
   10eb0:	bl	10790 <fopen@plt>
   10eb4:	cmp	r0, #0
   10eb8:	popne	{r4, r5, fp, pc}
   10ebc:	ldrb	r0, [r5]
   10ec0:	cmp	r0, #119	; 0x77
   10ec4:	bne	10efc <abort@plt+0x694>
   10ec8:	ldr	r0, [pc, #72]	; 10f18 <abort@plt+0x6b0>
   10ecc:	mov	r1, r4
   10ed0:	add	r0, pc, r0
   10ed4:	bl	11304 <error@@Base+0x50>
   10ed8:	ldrb	r0, [r5]
   10edc:	ldr	r1, [pc, #40]	; 10f0c <abort@plt+0x6a4>
   10ee0:	ldr	r1, [pc, r1]
   10ee4:	ldr	r2, [pc, #36]	; 10f10 <abort@plt+0x6a8>
   10ee8:	cmp	r0, #114	; 0x72
   10eec:	ldr	r2, [pc, r2]
   10ef0:	moveq	r2, r1
   10ef4:	ldr	r0, [r2]
   10ef8:	pop	{r4, r5, fp, pc}
   10efc:	ldr	r0, [pc, #16]	; 10f14 <abort@plt+0x6ac>
   10f00:	mov	r1, r4
   10f04:	add	r0, pc, r0
   10f08:	bl	11304 <error@@Base+0x50>
   10f0c:	muleq	r1, r0, r1
   10f10:	andeq	r1, r1, ip, lsl #3
   10f14:	andeq	r0, r0, r6, lsl #15
   10f18:	andeq	r0, r0, r4, lsr #15
   10f1c:	ldr	r1, [pc, #32]	; 10f44 <abort@plt+0x6dc>
   10f20:	ldr	r1, [pc, r1]
   10f24:	ldr	r1, [r1]
   10f28:	cmp	r1, r0
   10f2c:	ldrne	r1, [pc, #20]	; 10f48 <abort@plt+0x6e0>
   10f30:	ldrne	r1, [pc, r1]
   10f34:	ldrne	r1, [r1]
   10f38:	cmpne	r1, r0
   10f3c:	bxeq	lr
   10f40:	b	10844 <fclose@plt>
   10f44:	andeq	r1, r1, r0, asr r1
   10f48:	andeq	r1, r1, r8, asr #2
   10f4c:	push	{fp, lr}
   10f50:	mov	fp, sp
   10f54:	sub	sp, sp, #88	; 0x58
   10f58:	mov	r1, r0
   10f5c:	mov	r2, sp
   10f60:	mov	r0, #3
   10f64:	bl	107cc <__xstat@plt>
   10f68:	clz	r0, r0
   10f6c:	lsr	r0, r0, #5
   10f70:	mov	sp, fp
   10f74:	pop	{fp, pc}
   10f78:	push	{r4, r5, fp, lr}
   10f7c:	add	fp, sp, #8
   10f80:	sub	sp, sp, #104	; 0x68
   10f84:	ldr	r0, [pc, #92]	; 10fe8 <abort@plt+0x780>
   10f88:	add	r0, pc, r0
   10f8c:	ldrh	r1, [r0]
   10f90:	add	r5, r1, #1
   10f94:	strh	r5, [r0]
   10f98:	ldr	r0, [pc, #76]	; 10fec <abort@plt+0x784>
   10f9c:	ldr	r0, [pc, r0]
   10fa0:	ldr	r4, [r0]
   10fa4:	bl	10808 <getpid@plt>
   10fa8:	mov	r3, r0
   10fac:	sxth	r0, r5
   10fb0:	add	r5, sp, #4
   10fb4:	mov	r2, r4
   10fb8:	str	r0, [sp]
   10fbc:	mov	r0, r5
   10fc0:	ldr	r1, [pc, #40]	; 10ff0 <abort@plt+0x788>
   10fc4:	add	r1, pc, r1
   10fc8:	bl	10850 <sprintf@plt>
   10fcc:	mov	r0, r5
   10fd0:	bl	107b4 <strdup@plt>
   10fd4:	mov	r4, r0
   10fd8:	bl	107c0 <unlink@plt>
   10fdc:	mov	r0, r4
   10fe0:	sub	sp, fp, #8
   10fe4:	pop	{r4, r5, fp, pc}
   10fe8:	andeq	r1, r1, lr, ror #2
   10fec:	andeq	r1, r1, ip, asr #1
   10ff0:	andeq	r0, r0, pc, ror #13
   10ff4:	push	{r4, sl, fp, lr}
   10ff8:	add	fp, sp, #8
   10ffc:	mov	r4, r0
   11000:	bl	10820 <strlen@plt>
   11004:	sub	r0, r0, #1
   11008:	sxth	r0, r0
   1100c:	cmp	r0, #0
   11010:	blt	11020 <abort@plt+0x7b8>
   11014:	ldrb	r1, [r4, r0]
   11018:	cmp	r1, #47	; 0x2f
   1101c:	bne	11004 <abort@plt+0x79c>
   11020:	add	r0, r4, r0
   11024:	add	r0, r0, #1
   11028:	pop	{r4, sl, fp, pc}
   1102c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11030:	add	fp, sp, #28
   11034:	sub	sp, sp, #12
   11038:	str	r2, [sp]
   1103c:	stmib	sp, {r0, r1}
   11040:	mov	r6, r3
   11044:	ldr	r4, [r1]
   11048:	mov	r0, r4
   1104c:	bl	10820 <strlen@plt>
   11050:	sub	r0, r0, #1
   11054:	sxth	r0, r0
   11058:	cmp	r0, #0
   1105c:	blt	1106c <abort@plt+0x804>
   11060:	ldrb	r1, [r4, r0]
   11064:	cmp	r1, #47	; 0x2f
   11068:	bne	11050 <abort@plt+0x7e8>
   1106c:	ldr	r1, [pc, #484]	; 11258 <abort@plt+0x9f0>
   11070:	add	r0, r4, r0
   11074:	add	r0, r0, #1
   11078:	ldr	r1, [pc, r1]
   1107c:	str	r0, [r1]
   11080:	mov	r0, #2
   11084:	ldr	r4, [pc, #464]	; 1125c <abort@plt+0x9f4>
   11088:	add	r4, pc, r4
   1108c:	mov	r1, r4
   11090:	bl	107f0 <__sysv_signal@plt>
   11094:	mov	r0, #15
   11098:	mov	r1, r4
   1109c:	bl	107f0 <__sysv_signal@plt>
   110a0:	ldr	r0, [sp, #4]
   110a4:	ldr	r5, [r0]
   110a8:	cmp	r5, #1
   110ac:	bne	110c4 <abort@plt+0x85c>
   110b0:	ldr	r0, [pc, #424]	; 11260 <abort@plt+0x9f8>
   110b4:	ldr	r0, [pc, r0]
   110b8:	ldrb	r0, [r0]
   110bc:	cmp	r0, #0
   110c0:	bne	11240 <abort@plt+0x9d8>
   110c4:	ldr	ip, [sp, #8]
   110c8:	mov	r8, #0
   110cc:	cmp	r5, #2
   110d0:	blt	1121c <abort@plt+0x9b4>
   110d4:	mov	r8, #0
   110d8:	mov	r7, #1
   110dc:	mov	r9, #1
   110e0:	ldr	r4, [ip, r7, lsl #2]
   110e4:	ldrb	r0, [r4]
   110e8:	cmp	r0, #45	; 0x2d
   110ec:	bne	111c4 <abort@plt+0x95c>
   110f0:	ldrb	sl, [r4, #1]
   110f4:	cmp	sl, #0
   110f8:	beq	111c4 <abort@plt+0x95c>
   110fc:	mov	r0, r4
   11100:	bl	10820 <strlen@plt>
   11104:	mov	r2, r0
   11108:	ldr	r0, [pc, #340]	; 11264 <abort@plt+0x9fc>
   1110c:	mov	r1, r4
   11110:	add	r0, pc, r0
   11114:	bl	1085c <strncmp@plt>
   11118:	cmp	r0, #0
   1111c:	beq	11240 <abort@plt+0x9d8>
   11120:	ldr	ip, [sp, #8]
   11124:	add	r1, r7, #1
   11128:	mov	r0, #0
   1112c:	cmp	r1, r5
   11130:	ldrlt	r0, [ip, r1, lsl #2]
   11134:	cmp	r6, #0
   11138:	ldrbne	r2, [r6]
   1113c:	cmpne	r2, #0
   11140:	beq	11230 <abort@plt+0x9c8>
   11144:	mov	r1, #0
   11148:	cmp	sl, r2
   1114c:	beq	11174 <abort@plt+0x90c>
   11150:	mov	r2, #1
   11154:	sxth	r1, r2
   11158:	add	r3, r1, r1, lsl #1
   1115c:	ldrb	r3, [r6, r3, lsl #2]
   11160:	cmp	r3, #0
   11164:	beq	11230 <abort@plt+0x9c8>
   11168:	add	r2, r2, #1
   1116c:	cmp	sl, r3
   11170:	bne	11154 <abort@plt+0x8ec>
   11174:	add	r1, r1, r1, lsl #1
   11178:	add	r3, r6, r1, lsl #2
   1117c:	ldr	r1, [r3, #4]
   11180:	cmp	r1, #0
   11184:	beq	111e4 <abort@plt+0x97c>
   11188:	mov	r2, r4
   1118c:	cmp	r0, #0
   11190:	ldrb	r7, [r2, #2]!
   11194:	cmpeq	r7, #0
   11198:	beq	111e4 <abort@plt+0x97c>
   1119c:	ldr	r3, [r1]
   111a0:	cmp	r3, #0
   111a4:	bne	11248 <abort@plt+0x9e0>
   111a8:	cmp	r7, #0
   111ac:	movne	r0, r2
   111b0:	str	r0, [r1]
   111b4:	ldrb	r0, [r2]
   111b8:	cmp	r0, #0
   111bc:	addeq	r9, r9, #1
   111c0:	b	111d0 <abort@plt+0x968>
   111c4:	sxth	r0, r8
   111c8:	add	r8, r8, #1
   111cc:	str	r4, [ip, r0, lsl #2]
   111d0:	add	r9, r9, #1
   111d4:	sxth	r7, r9
   111d8:	cmp	r5, r7
   111dc:	bgt	110e0 <abort@plt+0x878>
   111e0:	b	1121c <abort@plt+0x9b4>
   111e4:	ldr	r0, [r3, #8]
   111e8:	cmp	r0, #0
   111ec:	beq	11230 <abort@plt+0x9c8>
   111f0:	ldrb	r1, [r4, #2]
   111f4:	cmp	r1, #0
   111f8:	bne	11230 <abort@plt+0x9c8>
   111fc:	ldrb	r1, [r0]
   11200:	cmp	r1, #0
   11204:	bne	11248 <abort@plt+0x9e0>
   11208:	mov	r1, #1
   1120c:	strb	r1, [r0]
   11210:	ldr	r0, [sp, #4]
   11214:	ldr	r5, [r0]
   11218:	b	111d0 <abort@plt+0x968>
   1121c:	ldr	r1, [sp, #4]
   11220:	sxth	r0, r8
   11224:	str	r0, [r1]
   11228:	sub	sp, fp, #28
   1122c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11230:	ldr	r0, [pc, #52]	; 1126c <abort@plt+0xa04>
   11234:	mov	r1, r4
   11238:	add	r0, pc, r0
   1123c:	bl	11304 <error@@Base+0x50>
   11240:	ldr	r0, [sp]
   11244:	bl	113e0 <error@@Base+0x12c>
   11248:	ldr	r0, [pc, #24]	; 11268 <abort@plt+0xa00>
   1124c:	mov	r1, r4
   11250:	add	r0, pc, r0
   11254:	bl	11304 <error@@Base+0x50>
   11258:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1125c:	andeq	r0, r0, r8, lsl r3
   11260:	andeq	r0, r1, r4, lsr #31
   11264:	andeq	r0, r0, r0, asr #11
   11268:	andeq	r0, r0, r4, lsr #9
   1126c:	andeq	r0, r0, sp, lsr #9
   11270:	push	{fp, lr}
   11274:	mov	fp, sp
   11278:	mov	r0, #0
   1127c:	bl	11280 <abort@plt+0xa18>
   11280:	push	{fp, lr}
   11284:	mov	fp, sp
   11288:	mov	r4, r0
   1128c:	ldr	r0, [pc, #28]	; 112b0 <abort@plt+0xa48>
   11290:	ldr	r0, [pc, r0]
   11294:	ldr	r0, [r0]
   11298:	cmp	r0, #0
   1129c:	beq	112a4 <abort@plt+0xa3c>
   112a0:	blx	r0
   112a4:	bl	11440 <error@@Base+0x18c>
   112a8:	mov	r0, r4
   112ac:	bl	10814 <exit@plt>
   112b0:	ldrdeq	r0, [r1], -ip

000112b4 <error@@Base>:
   112b4:	push	{fp, lr}
   112b8:	mov	fp, sp
   112bc:	mov	r3, r0
   112c0:	ldr	r0, [pc, #44]	; 112f4 <error@@Base+0x40>
   112c4:	ldr	r0, [pc, r0]
   112c8:	ldr	r2, [r0]
   112cc:	ldr	r0, [pc, #36]	; 112f8 <error@@Base+0x44>
   112d0:	ldr	r0, [pc, r0]
   112d4:	ldr	r0, [r0]
   112d8:	ldr	r1, [pc, #28]	; 112fc <error@@Base+0x48>
   112dc:	add	r1, pc, r1
   112e0:	bl	1082c <fprintf@plt>
   112e4:	ldr	r0, [pc, #20]	; 11300 <error@@Base+0x4c>
   112e8:	ldr	r0, [pc, r0]
   112ec:	ldr	r0, [r0]
   112f0:	bl	11280 <abort@plt+0xa18>
   112f4:	andeq	r0, r1, r4, lsr #27
   112f8:	muleq	r1, r0, sp
   112fc:	andeq	r0, r0, r2, asr #7
   11300:	muleq	r1, r4, sp
   11304:	push	{fp, lr}
   11308:	mov	fp, sp
   1130c:	sub	sp, sp, #8
   11310:	mov	r3, r0
   11314:	ldr	r0, [pc, #48]	; 1134c <error@@Base+0x98>
   11318:	ldr	r0, [pc, r0]
   1131c:	ldr	r2, [r0]
   11320:	ldr	r0, [pc, #40]	; 11350 <error@@Base+0x9c>
   11324:	ldr	r0, [pc, r0]
   11328:	str	r1, [sp]
   1132c:	ldr	r0, [r0]
   11330:	ldr	r1, [pc, #28]	; 11354 <error@@Base+0xa0>
   11334:	add	r1, pc, r1
   11338:	bl	1082c <fprintf@plt>
   1133c:	ldr	r0, [pc, #20]	; 11358 <error@@Base+0xa4>
   11340:	ldr	r0, [pc, r0]
   11344:	ldr	r0, [r0]
   11348:	bl	11280 <abort@plt+0xa18>
   1134c:	andeq	r0, r1, r0, asr sp
   11350:	andeq	r0, r1, ip, lsr sp
   11354:	andeq	r0, r0, r2, ror r3
   11358:	andeq	r0, r1, ip, lsr sp
   1135c:	push	{fp, lr}
   11360:	mov	fp, sp
   11364:	sub	sp, sp, #8
   11368:	mov	r3, r0
   1136c:	ldr	r0, [pc, #40]	; 1139c <error@@Base+0xe8>
   11370:	ldr	r0, [pc, r0]
   11374:	ldr	r2, [r0]
   11378:	ldr	r0, [pc, #32]	; 113a0 <error@@Base+0xec>
   1137c:	ldr	r0, [pc, r0]
   11380:	str	r1, [sp]
   11384:	ldr	r0, [r0]
   11388:	ldr	r1, [pc, #20]	; 113a4 <error@@Base+0xf0>
   1138c:	add	r1, pc, r1
   11390:	bl	1082c <fprintf@plt>
   11394:	mov	sp, fp
   11398:	pop	{fp, pc}
   1139c:	strdeq	r0, [r1], -r8
   113a0:	andeq	r0, r1, r4, ror #25
   113a4:	andeq	r0, r0, sl, lsl r3
   113a8:	ldr	r0, [pc, #40]	; 113d8 <error@@Base+0x124>
   113ac:	add	r0, pc, r0
   113b0:	ldrb	r1, [r0]
   113b4:	cmp	r1, #1
   113b8:	bxeq	lr
   113bc:	push	{fp, lr}
   113c0:	mov	fp, sp
   113c4:	mov	r1, #1
   113c8:	strb	r1, [r0]
   113cc:	ldr	r0, [pc, #8]	; 113dc <error@@Base+0x128>
   113d0:	add	r0, pc, r0
   113d4:	bl	112b4 <error@@Base>
   113d8:	andeq	r0, r1, ip, asr #26
   113dc:	strdeq	r0, [r0], -r1
   113e0:	push	{fp, lr}
   113e4:	mov	fp, sp
   113e8:	mov	r3, r0
   113ec:	ldr	r0, [pc, #60]	; 11430 <error@@Base+0x17c>
   113f0:	ldr	r0, [pc, r0]
   113f4:	ldr	r0, [r0]
   113f8:	cmp	r0, #0
   113fc:	bne	11428 <error@@Base+0x174>
   11400:	ldr	r0, [pc, #44]	; 11434 <error@@Base+0x180>
   11404:	ldr	r0, [pc, r0]
   11408:	ldr	r2, [r0]
   1140c:	ldr	r0, [pc, #36]	; 11438 <error@@Base+0x184>
   11410:	ldr	r0, [pc, r0]
   11414:	ldr	r0, [r0]
   11418:	ldr	r1, [pc, #28]	; 1143c <error@@Base+0x188>
   1141c:	add	r1, pc, r1
   11420:	bl	1082c <fprintf@plt>
   11424:	bl	11270 <abort@plt+0xa08>
   11428:	blx	r0
   1142c:	bl	11270 <abort@plt+0xa08>
   11430:	andeq	r0, r1, ip, ror #24
   11434:	andeq	r0, r1, r4, ror #24
   11438:	andeq	r0, r1, r0, asr ip
   1143c:			; <UNDEFINED> instruction: 0x000002ba
   11440:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11444:	add	fp, sp, #24
   11448:	sub	sp, sp, #104	; 0x68
   1144c:	ldr	r8, [pc, #124]	; 114d0 <error@@Base+0x21c>
   11450:	add	r8, pc, r8
   11454:	ldrsh	r0, [r8]
   11458:	cmp	r0, #1
   1145c:	blt	114c8 <error@@Base+0x214>
   11460:	ldr	r9, [pc, #108]	; 114d4 <error@@Base+0x220>
   11464:	mov	r7, #1
   11468:	add	r4, sp, #4
   1146c:	ldr	r9, [pc, r9]
   11470:	ldr	r5, [pc, #96]	; 114d8 <error@@Base+0x224>
   11474:	add	r5, pc, r5
   11478:	ldr	r6, [r9]
   1147c:	bl	10808 <getpid@plt>
   11480:	mov	r3, r0
   11484:	sxth	r0, r7
   11488:	mov	r1, r5
   1148c:	mov	r2, r6
   11490:	str	r0, [sp]
   11494:	mov	r0, r4
   11498:	bl	10850 <sprintf@plt>
   1149c:	mov	r0, r4
   114a0:	bl	107b4 <strdup@plt>
   114a4:	mov	r6, r0
   114a8:	bl	107c0 <unlink@plt>
   114ac:	mov	r0, r6
   114b0:	bl	1079c <free@plt>
   114b4:	add	r0, r7, #1
   114b8:	sxth	r7, r0
   114bc:	ldrsh	r0, [r8]
   114c0:	cmp	r7, r0
   114c4:	ble	11478 <error@@Base+0x1c4>
   114c8:	sub	sp, fp, #24
   114cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   114d0:	andeq	r0, r1, r6, lsr #25
   114d4:	strdeq	r0, [r1], -ip
   114d8:	andeq	r0, r0, pc, lsr r2
   114dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114e0:	mov	r7, r0
   114e4:	ldr	r6, [pc, #72]	; 11534 <error@@Base+0x280>
   114e8:	ldr	r5, [pc, #72]	; 11538 <error@@Base+0x284>
   114ec:	add	r6, pc, r6
   114f0:	add	r5, pc, r5
   114f4:	sub	r6, r6, r5
   114f8:	mov	r8, r1
   114fc:	mov	r9, r2
   11500:	bl	10758 <calloc@plt-0x20>
   11504:	asrs	r6, r6, #2
   11508:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1150c:	mov	r4, #0
   11510:	add	r4, r4, #1
   11514:	ldr	r3, [r5], #4
   11518:	mov	r2, r9
   1151c:	mov	r1, r8
   11520:	mov	r0, r7
   11524:	blx	r3
   11528:	cmp	r6, r4
   1152c:	bne	11510 <error@@Base+0x25c>
   11530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11534:	andeq	r0, r1, r8, lsl #20
   11538:	andeq	r0, r1, r0, lsl #20
   1153c:	bx	lr

Disassembly of section .fini:

00011540 <.fini>:
   11540:	push	{r3, lr}
   11544:	pop	{r3, pc}
