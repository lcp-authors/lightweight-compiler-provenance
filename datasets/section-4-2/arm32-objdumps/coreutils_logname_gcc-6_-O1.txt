
../repos/coreutils/src/logname:     file format elf32-littlearm


Disassembly of section .init:

00010b20 <.init>:
   10b20:	push	{r3, lr}
   10b24:	bl	10d98 <abort@plt+0x48>
   10b28:	pop	{r3, pc}

Disassembly of section .plt:

00010b2c <calloc@plt-0x14>:
   10b2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b30:	ldr	lr, [pc, #4]	; 10b3c <calloc@plt-0x4>
   10b34:	add	lr, pc, lr
   10b38:	ldr	pc, [lr, #8]!
   10b3c:	andeq	r4, r1, r4, asr #9

00010b40 <calloc@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b4c <fputs_unlocked@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b58 <raise@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b64 <strcmp@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b70 <getlogin@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b7c <fflush@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1180]!	; 0x49c

00010b88 <free@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #20, 20	; 0x14000
   10b90:	ldr	pc, [ip, #1172]!	; 0x494

00010b94 <_exit@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #20, 20	; 0x14000
   10b9c:	ldr	pc, [ip, #1164]!	; 0x48c

00010ba0 <memcpy@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #20, 20	; 0x14000
   10ba8:	ldr	pc, [ip, #1156]!	; 0x484

00010bac <mbsinit@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #20, 20	; 0x14000
   10bb4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb8 <memcmp@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #20, 20	; 0x14000
   10bc0:	ldr	pc, [ip, #1140]!	; 0x474

00010bc4 <fputc_unlocked@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #20, 20	; 0x14000
   10bcc:	ldr	pc, [ip, #1132]!	; 0x46c

00010bd0 <dcgettext@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #20, 20	; 0x14000
   10bd8:	ldr	pc, [ip, #1124]!	; 0x464

00010bdc <realloc@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #20, 20	; 0x14000
   10be4:	ldr	pc, [ip, #1116]!	; 0x45c

00010be8 <textdomain@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #20, 20	; 0x14000
   10bf0:	ldr	pc, [ip, #1108]!	; 0x454

00010bf4 <iswprint@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #20, 20	; 0x14000
   10bfc:	ldr	pc, [ip, #1100]!	; 0x44c

00010c00 <fwrite@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #20, 20	; 0x14000
   10c08:	ldr	pc, [ip, #1092]!	; 0x444

00010c0c <lseek64@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #20, 20	; 0x14000
   10c14:	ldr	pc, [ip, #1084]!	; 0x43c

00010c18 <__ctype_get_mb_cur_max@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #20, 20	; 0x14000
   10c20:	ldr	pc, [ip, #1076]!	; 0x434

00010c24 <__fpending@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #20, 20	; 0x14000
   10c2c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c30 <mbrtowc@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #20, 20	; 0x14000
   10c38:	ldr	pc, [ip, #1060]!	; 0x424

00010c3c <error@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #1052]!	; 0x41c

00010c48 <puts@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #1044]!	; 0x414

00010c54 <malloc@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c60 <__libc_start_main@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #1028]!	; 0x404

00010c6c <__freading@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c78 <__gmon_start__@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c84 <getopt_long@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c90 <__ctype_b_loc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #996]!	; 0x3e4

00010c9c <exit@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca8 <strlen@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb4 <__errno_location@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #972]!	; 0x3cc

00010cc0 <__cxa_atexit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #964]!	; 0x3c4

00010ccc <memset@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd8 <__printf_chk@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce4 <fileno@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #940]!	; 0x3ac

00010cf0 <__fprintf_chk@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cfc <fclose@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #924]!	; 0x39c

00010d08 <fseeko64@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #916]!	; 0x394

00010d14 <setlocale@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #908]!	; 0x38c

00010d20 <strrchr@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #900]!	; 0x384

00010d2c <nl_langinfo@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #892]!	; 0x37c

00010d38 <bindtextdomain@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #884]!	; 0x374

00010d44 <strncmp@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #876]!	; 0x36c

00010d50 <abort@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #868]!	; 0x364

Disassembly of section .text:

00010d5c <.text>:
   10d5c:	mov	fp, #0
   10d60:	mov	lr, #0
   10d64:	pop	{r1}		; (ldr r1, [sp], #4)
   10d68:	mov	r2, sp
   10d6c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d70:	push	{r0}		; (str r0, [sp, #-4]!)
   10d74:	ldr	ip, [pc, #16]	; 10d8c <abort@plt+0x3c>
   10d78:	push	{ip}		; (str ip, [sp, #-4]!)
   10d7c:	ldr	r0, [pc, #12]	; 10d90 <abort@plt+0x40>
   10d80:	ldr	r3, [pc, #12]	; 10d94 <abort@plt+0x44>
   10d84:	bl	10c60 <__libc_start_main@plt>
   10d88:	bl	10d50 <abort@plt>
   10d8c:	andeq	r4, r1, ip, lsr #12
   10d90:	muleq	r1, r0, r1
   10d94:	andeq	r4, r1, ip, asr #11
   10d98:	ldr	r3, [pc, #20]	; 10db4 <abort@plt+0x64>
   10d9c:	ldr	r2, [pc, #20]	; 10db8 <abort@plt+0x68>
   10da0:	add	r3, pc, r3
   10da4:	ldr	r2, [r3, r2]
   10da8:	cmp	r2, #0
   10dac:	bxeq	lr
   10db0:	b	10c78 <__gmon_start__@plt>
   10db4:	andeq	r4, r1, r8, asr r2
   10db8:	andeq	r0, r0, r0, asr #1
   10dbc:	ldr	r3, [pc, #28]	; 10de0 <abort@plt+0x90>
   10dc0:	ldr	r0, [pc, #28]	; 10de4 <abort@plt+0x94>
   10dc4:	sub	r3, r3, r0
   10dc8:	cmp	r3, #6
   10dcc:	bxls	lr
   10dd0:	ldr	r3, [pc, #16]	; 10de8 <abort@plt+0x98>
   10dd4:	cmp	r3, #0
   10dd8:	bxeq	lr
   10ddc:	bx	r3
   10de0:	andeq	r5, r2, r7, lsl r1
   10de4:	andeq	r5, r2, r4, lsl r1
   10de8:	andeq	r0, r0, r0
   10dec:	ldr	r1, [pc, #36]	; 10e18 <abort@plt+0xc8>
   10df0:	ldr	r0, [pc, #36]	; 10e1c <abort@plt+0xcc>
   10df4:	sub	r1, r1, r0
   10df8:	asr	r1, r1, #2
   10dfc:	add	r1, r1, r1, lsr #31
   10e00:	asrs	r1, r1, #1
   10e04:	bxeq	lr
   10e08:	ldr	r3, [pc, #16]	; 10e20 <abort@plt+0xd0>
   10e0c:	cmp	r3, #0
   10e10:	bxeq	lr
   10e14:	bx	r3
   10e18:	andeq	r5, r2, r4, lsl r1
   10e1c:	andeq	r5, r2, r4, lsl r1
   10e20:	andeq	r0, r0, r0
   10e24:	push	{r4, lr}
   10e28:	ldr	r4, [pc, #24]	; 10e48 <abort@plt+0xf8>
   10e2c:	ldrb	r3, [r4]
   10e30:	cmp	r3, #0
   10e34:	popne	{r4, pc}
   10e38:	bl	10dbc <abort@plt+0x6c>
   10e3c:	mov	r3, #1
   10e40:	strb	r3, [r4]
   10e44:	pop	{r4, pc}
   10e48:	andeq	r5, r2, r4, lsr r1
   10e4c:	ldr	r0, [pc, #40]	; 10e7c <abort@plt+0x12c>
   10e50:	ldr	r3, [r0]
   10e54:	cmp	r3, #0
   10e58:	bne	10e60 <abort@plt+0x110>
   10e5c:	b	10dec <abort@plt+0x9c>
   10e60:	ldr	r3, [pc, #24]	; 10e80 <abort@plt+0x130>
   10e64:	cmp	r3, #0
   10e68:	beq	10e5c <abort@plt+0x10c>
   10e6c:	push	{r4, lr}
   10e70:	blx	r3
   10e74:	pop	{r4, lr}
   10e78:	b	10dec <abort@plt+0x9c>
   10e7c:	andeq	r4, r2, r4, lsl pc
   10e80:	andeq	r0, r0, r0
   10e84:	push	{lr}		; (str lr, [sp, #-4]!)
   10e88:	sub	sp, sp, #60	; 0x3c
   10e8c:	subs	r6, r0, #0
   10e90:	beq	10ecc <abort@plt+0x17c>
   10e94:	ldr	r3, [pc, #680]	; 11144 <abort@plt+0x3f4>
   10e98:	ldr	r4, [r3]
   10e9c:	mov	r2, #5
   10ea0:	ldr	r1, [pc, #672]	; 11148 <abort@plt+0x3f8>
   10ea4:	mov	r0, #0
   10ea8:	bl	10bd0 <dcgettext@plt>
   10eac:	ldr	r3, [pc, #664]	; 1114c <abort@plt+0x3fc>
   10eb0:	ldr	r3, [r3]
   10eb4:	mov	r2, r0
   10eb8:	mov	r1, #1
   10ebc:	mov	r0, r4
   10ec0:	bl	10cf0 <__fprintf_chk@plt>
   10ec4:	mov	r0, r6
   10ec8:	bl	10c9c <exit@plt>
   10ecc:	mov	r2, #5
   10ed0:	ldr	r1, [pc, #632]	; 11150 <abort@plt+0x400>
   10ed4:	mov	r0, #0
   10ed8:	bl	10bd0 <dcgettext@plt>
   10edc:	ldr	r3, [pc, #616]	; 1114c <abort@plt+0x3fc>
   10ee0:	ldr	r2, [r3]
   10ee4:	mov	r1, r0
   10ee8:	mov	r0, #1
   10eec:	bl	10cd8 <__printf_chk@plt>
   10ef0:	mov	r2, #5
   10ef4:	ldr	r1, [pc, #600]	; 11154 <abort@plt+0x404>
   10ef8:	mov	r0, #0
   10efc:	bl	10bd0 <dcgettext@plt>
   10f00:	ldr	r4, [pc, #592]	; 11158 <abort@plt+0x408>
   10f04:	ldr	r1, [r4]
   10f08:	bl	10b4c <fputs_unlocked@plt>
   10f0c:	mov	r2, #5
   10f10:	ldr	r1, [pc, #580]	; 1115c <abort@plt+0x40c>
   10f14:	mov	r0, #0
   10f18:	bl	10bd0 <dcgettext@plt>
   10f1c:	ldr	r1, [r4]
   10f20:	bl	10b4c <fputs_unlocked@plt>
   10f24:	mov	r2, #5
   10f28:	ldr	r1, [pc, #560]	; 11160 <abort@plt+0x410>
   10f2c:	mov	r0, #0
   10f30:	bl	10bd0 <dcgettext@plt>
   10f34:	ldr	r1, [r4]
   10f38:	bl	10b4c <fputs_unlocked@plt>
   10f3c:	mov	ip, sp
   10f40:	ldr	lr, [pc, #540]	; 11164 <abort@plt+0x414>
   10f44:	ldm	lr!, {r0, r1, r2, r3}
   10f48:	stmia	ip!, {r0, r1, r2, r3}
   10f4c:	ldm	lr!, {r0, r1, r2, r3}
   10f50:	stmia	ip!, {r0, r1, r2, r3}
   10f54:	ldm	lr!, {r0, r1, r2, r3}
   10f58:	stmia	ip!, {r0, r1, r2, r3}
   10f5c:	ldm	lr, {r0, r1}
   10f60:	stm	ip, {r0, r1}
   10f64:	ldr	r1, [sp]
   10f68:	cmp	r1, #0
   10f6c:	moveq	r4, sp
   10f70:	beq	10f98 <abort@plt+0x248>
   10f74:	mov	r4, sp
   10f78:	ldr	r5, [pc, #488]	; 11168 <abort@plt+0x418>
   10f7c:	mov	r0, r5
   10f80:	bl	10b64 <strcmp@plt>
   10f84:	cmp	r0, #0
   10f88:	beq	10f98 <abort@plt+0x248>
   10f8c:	ldr	r1, [r4, #8]!
   10f90:	cmp	r1, #0
   10f94:	bne	10f7c <abort@plt+0x22c>
   10f98:	ldr	r4, [r4, #4]
   10f9c:	cmp	r4, #0
   10fa0:	beq	110b4 <abort@plt+0x364>
   10fa4:	mov	r2, #5
   10fa8:	ldr	r1, [pc, #444]	; 1116c <abort@plt+0x41c>
   10fac:	mov	r0, #0
   10fb0:	bl	10bd0 <dcgettext@plt>
   10fb4:	ldr	r3, [pc, #436]	; 11170 <abort@plt+0x420>
   10fb8:	ldr	r2, [pc, #436]	; 11174 <abort@plt+0x424>
   10fbc:	mov	r1, r0
   10fc0:	mov	r0, #1
   10fc4:	bl	10cd8 <__printf_chk@plt>
   10fc8:	mov	r1, #0
   10fcc:	mov	r0, #5
   10fd0:	bl	10d14 <setlocale@plt>
   10fd4:	cmp	r0, #0
   10fd8:	beq	10ff0 <abort@plt+0x2a0>
   10fdc:	mov	r2, #3
   10fe0:	ldr	r1, [pc, #400]	; 11178 <abort@plt+0x428>
   10fe4:	bl	10d44 <strncmp@plt>
   10fe8:	cmp	r0, #0
   10fec:	bne	11050 <abort@plt+0x300>
   10ff0:	mov	r2, #5
   10ff4:	ldr	r1, [pc, #384]	; 1117c <abort@plt+0x42c>
   10ff8:	mov	r0, #0
   10ffc:	bl	10bd0 <dcgettext@plt>
   11000:	ldr	r5, [pc, #352]	; 11168 <abort@plt+0x418>
   11004:	mov	r3, r5
   11008:	ldr	r2, [pc, #352]	; 11170 <abort@plt+0x420>
   1100c:	mov	r1, r0
   11010:	mov	r0, #1
   11014:	bl	10cd8 <__printf_chk@plt>
   11018:	mov	r2, #5
   1101c:	ldr	r1, [pc, #348]	; 11180 <abort@plt+0x430>
   11020:	mov	r0, #0
   11024:	bl	10bd0 <dcgettext@plt>
   11028:	mov	r1, r0
   1102c:	ldr	r2, [pc, #336]	; 11184 <abort@plt+0x434>
   11030:	ldr	r3, [pc, #336]	; 11188 <abort@plt+0x438>
   11034:	cmp	r4, r5
   11038:	movne	r3, r2
   1103c:	mov	r2, r4
   11040:	mov	r0, #1
   11044:	bl	10cd8 <__printf_chk@plt>
   11048:	b	10ec4 <abort@plt+0x174>
   1104c:	ldr	r4, [pc, #276]	; 11168 <abort@plt+0x418>
   11050:	mov	r2, #5
   11054:	ldr	r1, [pc, #304]	; 1118c <abort@plt+0x43c>
   11058:	mov	r0, #0
   1105c:	bl	10bd0 <dcgettext@plt>
   11060:	ldr	r3, [pc, #240]	; 11158 <abort@plt+0x408>
   11064:	ldr	r1, [r3]
   11068:	bl	10b4c <fputs_unlocked@plt>
   1106c:	b	10ff0 <abort@plt+0x2a0>
   11070:	mov	r2, #5
   11074:	ldr	r1, [pc, #256]	; 1117c <abort@plt+0x42c>
   11078:	mov	r0, #0
   1107c:	bl	10bd0 <dcgettext@plt>
   11080:	ldr	r4, [pc, #224]	; 11168 <abort@plt+0x418>
   11084:	mov	r3, r4
   11088:	ldr	r2, [pc, #224]	; 11170 <abort@plt+0x420>
   1108c:	mov	r1, r0
   11090:	mov	r0, #1
   11094:	bl	10cd8 <__printf_chk@plt>
   11098:	mov	r2, #5
   1109c:	ldr	r1, [pc, #220]	; 11180 <abort@plt+0x430>
   110a0:	mov	r0, #0
   110a4:	bl	10bd0 <dcgettext@plt>
   110a8:	mov	r1, r0
   110ac:	ldr	r3, [pc, #212]	; 11188 <abort@plt+0x438>
   110b0:	b	1103c <abort@plt+0x2ec>
   110b4:	mov	r2, #5
   110b8:	ldr	r1, [pc, #172]	; 1116c <abort@plt+0x41c>
   110bc:	mov	r0, #0
   110c0:	bl	10bd0 <dcgettext@plt>
   110c4:	ldr	r3, [pc, #164]	; 11170 <abort@plt+0x420>
   110c8:	ldr	r2, [pc, #164]	; 11174 <abort@plt+0x424>
   110cc:	mov	r1, r0
   110d0:	mov	r0, #1
   110d4:	bl	10cd8 <__printf_chk@plt>
   110d8:	mov	r1, #0
   110dc:	mov	r0, #5
   110e0:	bl	10d14 <setlocale@plt>
   110e4:	cmp	r0, #0
   110e8:	beq	11070 <abort@plt+0x320>
   110ec:	mov	r2, #3
   110f0:	ldr	r1, [pc, #128]	; 11178 <abort@plt+0x428>
   110f4:	bl	10d44 <strncmp@plt>
   110f8:	cmp	r0, #0
   110fc:	bne	1104c <abort@plt+0x2fc>
   11100:	mov	r2, #5
   11104:	ldr	r1, [pc, #112]	; 1117c <abort@plt+0x42c>
   11108:	mov	r0, #0
   1110c:	bl	10bd0 <dcgettext@plt>
   11110:	ldr	r4, [pc, #80]	; 11168 <abort@plt+0x418>
   11114:	mov	r3, r4
   11118:	ldr	r2, [pc, #80]	; 11170 <abort@plt+0x420>
   1111c:	mov	r1, r0
   11120:	mov	r0, #1
   11124:	bl	10cd8 <__printf_chk@plt>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #76]	; 11180 <abort@plt+0x430>
   11130:	mov	r0, #0
   11134:	bl	10bd0 <dcgettext@plt>
   11138:	mov	r1, r0
   1113c:	ldr	r3, [pc, #68]	; 11188 <abort@plt+0x438>
   11140:	b	1103c <abort@plt+0x2ec>
   11144:	andeq	r5, r2, r8, lsr #2
   11148:	muleq	r1, r4, r6
   1114c:	andeq	r5, r2, r0, asr #2
   11150:			; <UNDEFINED> instruction: 0x000146bc
   11154:	ldrdeq	r4, [r1], -r0
   11158:	andeq	r5, r2, ip, lsr #2
   1115c:	strdeq	r4, [r1], -r0
   11160:	andeq	r4, r1, r0, lsr #14
   11164:	andeq	r4, r1, r4, asr r6
   11168:	andeq	r4, r1, ip, lsl #13
   1116c:	andeq	r4, r1, r8, asr r7
   11170:	andeq	r4, r1, r0, ror r7
   11174:	muleq	r1, r8, r7
   11178:	andeq	r4, r1, r8, lsr #15
   1117c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11180:	andeq	r4, r1, r0, lsl r8
   11184:	andeq	r4, r1, ip, lsl r7
   11188:	muleq	r1, r8, r8
   1118c:	andeq	r4, r1, ip, lsr #15
   11190:	push	{r4, r5, r6, lr}
   11194:	sub	sp, sp, #24
   11198:	mov	r5, r0
   1119c:	mov	r4, r1
   111a0:	ldr	r0, [r1]
   111a4:	bl	11570 <abort@plt+0x820>
   111a8:	ldr	r1, [pc, #240]	; 112a0 <abort@plt+0x550>
   111ac:	mov	r0, #6
   111b0:	bl	10d14 <setlocale@plt>
   111b4:	ldr	r6, [pc, #232]	; 112a4 <abort@plt+0x554>
   111b8:	ldr	r1, [pc, #232]	; 112a8 <abort@plt+0x558>
   111bc:	mov	r0, r6
   111c0:	bl	10d38 <bindtextdomain@plt>
   111c4:	mov	r0, r6
   111c8:	bl	10be8 <textdomain@plt>
   111cc:	ldr	r0, [pc, #216]	; 112ac <abort@plt+0x55c>
   111d0:	bl	14630 <abort@plt+0x38e0>
   111d4:	mov	r3, #0
   111d8:	str	r3, [sp, #16]
   111dc:	ldr	r3, [pc, #204]	; 112b0 <abort@plt+0x560>
   111e0:	str	r3, [sp, #12]
   111e4:	ldr	r3, [pc, #200]	; 112b4 <abort@plt+0x564>
   111e8:	str	r3, [sp, #8]
   111ec:	mov	r3, #1
   111f0:	str	r3, [sp, #4]
   111f4:	ldr	r3, [pc, #188]	; 112b8 <abort@plt+0x568>
   111f8:	ldr	r3, [r3]
   111fc:	str	r3, [sp]
   11200:	ldr	r3, [pc, #180]	; 112bc <abort@plt+0x56c>
   11204:	ldr	r2, [pc, #180]	; 112c0 <abort@plt+0x570>
   11208:	mov	r1, r4
   1120c:	mov	r0, r5
   11210:	bl	114a0 <abort@plt+0x750>
   11214:	ldr	r3, [pc, #168]	; 112c4 <abort@plt+0x574>
   11218:	ldr	r3, [r3]
   1121c:	cmp	r5, r3
   11220:	bgt	11240 <abort@plt+0x4f0>
   11224:	bl	10b70 <getlogin@plt>
   11228:	cmp	r0, #0
   1122c:	beq	11280 <abort@plt+0x530>
   11230:	bl	10c48 <puts@plt>
   11234:	mov	r0, #0
   11238:	add	sp, sp, #24
   1123c:	pop	{r4, r5, r6, pc}
   11240:	mov	r2, #5
   11244:	ldr	r1, [pc, #124]	; 112c8 <abort@plt+0x578>
   11248:	mov	r0, #0
   1124c:	bl	10bd0 <dcgettext@plt>
   11250:	mov	r5, r0
   11254:	ldr	r3, [pc, #104]	; 112c4 <abort@plt+0x574>
   11258:	ldr	r3, [r3]
   1125c:	ldr	r0, [r4, r3, lsl #2]
   11260:	bl	130c0 <abort@plt+0x2370>
   11264:	mov	r3, r0
   11268:	mov	r2, r5
   1126c:	mov	r1, #0
   11270:	mov	r0, r1
   11274:	bl	10c3c <error@plt>
   11278:	mov	r0, #1
   1127c:	bl	10e84 <abort@plt+0x134>
   11280:	mov	r2, #5
   11284:	ldr	r1, [pc, #64]	; 112cc <abort@plt+0x57c>
   11288:	mov	r0, #0
   1128c:	bl	10bd0 <dcgettext@plt>
   11290:	mov	r2, r0
   11294:	mov	r1, #0
   11298:	mov	r0, #1
   1129c:	bl	10c3c <error@plt>
   112a0:	andeq	r4, r1, ip, lsl r7
   112a4:	muleq	r1, ip, r7
   112a8:	andeq	r4, r1, r4, asr #16
   112ac:	strdeq	r1, [r1], -r0
   112b0:	andeq	r4, r1, ip, asr r8
   112b4:	andeq	r0, r1, r4, lsl #29
   112b8:	andeq	r5, r2, ip, asr #1
   112bc:	muleq	r1, r8, r7
   112c0:	andeq	r4, r1, ip, lsl #13
   112c4:	andeq	r5, r2, r0, lsr #2
   112c8:	andeq	r4, r1, ip, ror #16
   112cc:	andeq	r4, r1, r0, lsl #17
   112d0:	ldr	r3, [pc, #4]	; 112dc <abort@plt+0x58c>
   112d4:	str	r0, [r3]
   112d8:	bx	lr
   112dc:	andeq	r5, r2, r8, lsr r1
   112e0:	ldr	r3, [pc, #4]	; 112ec <abort@plt+0x59c>
   112e4:	strb	r0, [r3, #4]
   112e8:	bx	lr
   112ec:	andeq	r5, r2, r8, lsr r1
   112f0:	push	{r4, r5, r6, lr}
   112f4:	sub	sp, sp, #8
   112f8:	ldr	r3, [pc, #200]	; 113c8 <abort@plt+0x678>
   112fc:	ldr	r0, [r3]
   11300:	bl	13d0c <abort@plt+0x2fbc>
   11304:	cmp	r0, #0
   11308:	beq	1132c <abort@plt+0x5dc>
   1130c:	ldr	r3, [pc, #184]	; 113cc <abort@plt+0x67c>
   11310:	ldrb	r3, [r3, #4]
   11314:	cmp	r3, #0
   11318:	beq	11348 <abort@plt+0x5f8>
   1131c:	bl	10cb4 <__errno_location@plt>
   11320:	ldr	r3, [r0]
   11324:	cmp	r3, #32
   11328:	bne	11348 <abort@plt+0x5f8>
   1132c:	ldr	r3, [pc, #156]	; 113d0 <abort@plt+0x680>
   11330:	ldr	r0, [r3]
   11334:	bl	13d0c <abort@plt+0x2fbc>
   11338:	cmp	r0, #0
   1133c:	bne	113bc <abort@plt+0x66c>
   11340:	add	sp, sp, #8
   11344:	pop	{r4, r5, r6, pc}
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #128]	; 113d4 <abort@plt+0x684>
   11350:	mov	r0, #0
   11354:	bl	10bd0 <dcgettext@plt>
   11358:	mov	r4, r0
   1135c:	ldr	r3, [pc, #104]	; 113cc <abort@plt+0x67c>
   11360:	ldr	r5, [r3]
   11364:	cmp	r5, #0
   11368:	beq	113a0 <abort@plt+0x650>
   1136c:	bl	10cb4 <__errno_location@plt>
   11370:	ldr	r6, [r0]
   11374:	mov	r0, r5
   11378:	bl	12f38 <abort@plt+0x21e8>
   1137c:	str	r4, [sp]
   11380:	mov	r3, r0
   11384:	ldr	r2, [pc, #76]	; 113d8 <abort@plt+0x688>
   11388:	mov	r1, r6
   1138c:	mov	r0, #0
   11390:	bl	10c3c <error@plt>
   11394:	ldr	r3, [pc, #64]	; 113dc <abort@plt+0x68c>
   11398:	ldr	r0, [r3]
   1139c:	bl	10b94 <_exit@plt>
   113a0:	bl	10cb4 <__errno_location@plt>
   113a4:	mov	r3, r4
   113a8:	ldr	r2, [pc, #48]	; 113e0 <abort@plt+0x690>
   113ac:	ldr	r1, [r0]
   113b0:	mov	r0, #0
   113b4:	bl	10c3c <error@plt>
   113b8:	b	11394 <abort@plt+0x644>
   113bc:	ldr	r3, [pc, #24]	; 113dc <abort@plt+0x68c>
   113c0:	ldr	r0, [r3]
   113c4:	bl	10b94 <_exit@plt>
   113c8:	andeq	r5, r2, ip, lsr #2
   113cc:	andeq	r5, r2, r8, lsr r1
   113d0:	andeq	r5, r2, r8, lsr #2
   113d4:	andeq	r4, r1, ip, lsl #18
   113d8:	andeq	r4, r1, r8, lsl r9
   113dc:	ldrdeq	r5, [r2], -r0
   113e0:	andeq	r4, r1, ip, lsl r9
   113e4:	push	{r4, r5, r6, lr}
   113e8:	sub	sp, sp, #16
   113ec:	ldr	ip, [pc, #152]	; 1148c <abort@plt+0x73c>
   113f0:	ldr	r4, [ip]
   113f4:	mov	lr, #0
   113f8:	str	lr, [ip]
   113fc:	cmp	r0, #2
   11400:	beq	11420 <abort@plt+0x6d0>
   11404:	ldr	r3, [pc, #128]	; 1148c <abort@plt+0x73c>
   11408:	str	r4, [r3]
   1140c:	mov	r2, #0
   11410:	ldr	r3, [pc, #120]	; 11490 <abort@plt+0x740>
   11414:	str	r2, [r3]
   11418:	add	sp, sp, #16
   1141c:	pop	{r4, r5, r6, pc}
   11420:	mov	r6, r3
   11424:	mov	r5, r2
   11428:	str	lr, [sp]
   1142c:	ldr	r3, [pc, #96]	; 11494 <abort@plt+0x744>
   11430:	ldr	r2, [pc, #96]	; 11498 <abort@plt+0x748>
   11434:	bl	10c84 <getopt_long@plt>
   11438:	cmn	r0, #1
   1143c:	beq	11404 <abort@plt+0x6b4>
   11440:	cmp	r0, #104	; 0x68
   11444:	beq	1147c <abort@plt+0x72c>
   11448:	cmp	r0, #118	; 0x76
   1144c:	bne	11404 <abort@plt+0x6b4>
   11450:	add	r3, sp, #40	; 0x28
   11454:	str	r3, [sp, #12]
   11458:	ldr	r2, [pc, #60]	; 1149c <abort@plt+0x74c>
   1145c:	ldr	r0, [r2]
   11460:	str	r3, [sp]
   11464:	ldr	r3, [sp, #32]
   11468:	mov	r2, r6
   1146c:	mov	r1, r5
   11470:	bl	13540 <abort@plt+0x27f0>
   11474:	mov	r0, #0
   11478:	bl	10c9c <exit@plt>
   1147c:	mov	r0, #0
   11480:	ldr	r3, [sp, #36]	; 0x24
   11484:	blx	r3
   11488:	b	11404 <abort@plt+0x6b4>
   1148c:	andeq	r5, r2, r0, lsr r1
   11490:	andeq	r5, r2, r0, lsr #2
   11494:	andeq	r4, r1, r0, lsr #18
   11498:	andeq	r4, r1, r0, asr r9
   1149c:	andeq	r5, r2, ip, lsr #2
   114a0:	push	{r4, r5, r6, lr}
   114a4:	sub	sp, sp, #16
   114a8:	mov	r5, r2
   114ac:	mov	r6, r3
   114b0:	ldr	r3, [pc, #160]	; 11558 <abort@plt+0x808>
   114b4:	ldr	r4, [r3]
   114b8:	mov	r2, #1
   114bc:	str	r2, [r3]
   114c0:	mov	r3, #0
   114c4:	str	r3, [sp]
   114c8:	ldr	r3, [pc, #140]	; 1155c <abort@plt+0x80c>
   114cc:	ldr	ip, [pc, #140]	; 11560 <abort@plt+0x810>
   114d0:	ldr	r2, [pc, #140]	; 11564 <abort@plt+0x814>
   114d4:	ldrb	lr, [sp, #36]	; 0x24
   114d8:	cmp	lr, #0
   114dc:	moveq	r2, ip
   114e0:	bl	10c84 <getopt_long@plt>
   114e4:	cmn	r0, #1
   114e8:	beq	1151c <abort@plt+0x7cc>
   114ec:	cmp	r0, #104	; 0x68
   114f0:	beq	11510 <abort@plt+0x7c0>
   114f4:	cmp	r0, #118	; 0x76
   114f8:	beq	1152c <abort@plt+0x7dc>
   114fc:	ldr	r3, [pc, #100]	; 11568 <abort@plt+0x818>
   11500:	ldr	r0, [r3]
   11504:	ldr	r3, [sp, #40]	; 0x28
   11508:	blx	r3
   1150c:	b	1151c <abort@plt+0x7cc>
   11510:	mov	r0, #0
   11514:	ldr	r3, [sp, #40]	; 0x28
   11518:	blx	r3
   1151c:	ldr	r3, [pc, #52]	; 11558 <abort@plt+0x808>
   11520:	str	r4, [r3]
   11524:	add	sp, sp, #16
   11528:	pop	{r4, r5, r6, pc}
   1152c:	add	r3, sp, #44	; 0x2c
   11530:	str	r3, [sp, #12]
   11534:	ldr	r2, [pc, #48]	; 1156c <abort@plt+0x81c>
   11538:	ldr	r0, [r2]
   1153c:	str	r3, [sp]
   11540:	ldr	r3, [sp, #32]
   11544:	mov	r2, r6
   11548:	mov	r1, r5
   1154c:	bl	13540 <abort@plt+0x27f0>
   11550:	mov	r0, #0
   11554:	bl	10c9c <exit@plt>
   11558:	andeq	r5, r2, r0, lsr r1
   1155c:	andeq	r4, r1, r0, lsr #18
   11560:	andeq	r4, r1, r0, asr r9
   11564:	andeq	r4, r1, ip, lsl r7
   11568:	ldrdeq	r5, [r2], -r0
   1156c:	andeq	r5, r2, ip, lsr #2
   11570:	push	{r4, r5, r6, lr}
   11574:	subs	r4, r0, #0
   11578:	beq	115f0 <abort@plt+0x8a0>
   1157c:	mov	r1, #47	; 0x2f
   11580:	mov	r0, r4
   11584:	bl	10d20 <strrchr@plt>
   11588:	cmp	r0, #0
   1158c:	addne	r5, r0, #1
   11590:	moveq	r5, r4
   11594:	sub	r3, r5, r4
   11598:	cmp	r3, #6
   1159c:	ble	115dc <abort@plt+0x88c>
   115a0:	mov	r2, #7
   115a4:	ldr	r1, [pc, #96]	; 1160c <abort@plt+0x8bc>
   115a8:	sub	r0, r5, #7
   115ac:	bl	10d44 <strncmp@plt>
   115b0:	cmp	r0, #0
   115b4:	bne	115dc <abort@plt+0x88c>
   115b8:	mov	r2, #3
   115bc:	ldr	r1, [pc, #76]	; 11610 <abort@plt+0x8c0>
   115c0:	mov	r0, r5
   115c4:	bl	10d44 <strncmp@plt>
   115c8:	cmp	r0, #0
   115cc:	addeq	r4, r5, #3
   115d0:	ldreq	r3, [pc, #60]	; 11614 <abort@plt+0x8c4>
   115d4:	streq	r4, [r3]
   115d8:	movne	r4, r5
   115dc:	ldr	r3, [pc, #52]	; 11618 <abort@plt+0x8c8>
   115e0:	str	r4, [r3]
   115e4:	ldr	r3, [pc, #48]	; 1161c <abort@plt+0x8cc>
   115e8:	str	r4, [r3]
   115ec:	pop	{r4, r5, r6, pc}
   115f0:	ldr	r3, [pc, #40]	; 11620 <abort@plt+0x8d0>
   115f4:	ldr	r3, [r3]
   115f8:	mov	r2, #55	; 0x37
   115fc:	mov	r1, #1
   11600:	ldr	r0, [pc, #28]	; 11624 <abort@plt+0x8d4>
   11604:	bl	10c00 <fwrite@plt>
   11608:	bl	10d50 <abort@plt>
   1160c:	muleq	r1, ip, r9
   11610:	andeq	r4, r1, r4, lsr #19
   11614:	andeq	r5, r2, r8, lsl r1
   11618:	andeq	r5, r2, r0, asr #2
   1161c:	andeq	r5, r2, ip, lsl r1
   11620:	andeq	r5, r2, r8, lsr #2
   11624:	andeq	r4, r1, r4, ror #18
   11628:	push	{r4, r5, r6, lr}
   1162c:	mov	r5, r0
   11630:	mov	r4, r1
   11634:	mov	r2, #48	; 0x30
   11638:	mov	r1, #0
   1163c:	bl	10ccc <memset@plt>
   11640:	cmp	r4, #10
   11644:	beq	11654 <abort@plt+0x904>
   11648:	str	r4, [r5]
   1164c:	mov	r0, r5
   11650:	pop	{r4, r5, r6, pc}
   11654:	bl	10d50 <abort@plt>
   11658:	push	{r4, r5, r6, lr}
   1165c:	mov	r4, r0
   11660:	mov	r5, r1
   11664:	mov	r2, #5
   11668:	mov	r1, r0
   1166c:	mov	r0, #0
   11670:	bl	10bd0 <dcgettext@plt>
   11674:	cmp	r4, r0
   11678:	popne	{r4, r5, r6, pc}
   1167c:	bl	13f90 <abort@plt+0x3240>
   11680:	ldrb	r3, [r0]
   11684:	bic	r3, r3, #32
   11688:	cmp	r3, #85	; 0x55
   1168c:	beq	11708 <abort@plt+0x9b8>
   11690:	cmp	r3, #71	; 0x47
   11694:	bne	11764 <abort@plt+0xa14>
   11698:	ldrb	r3, [r0, #1]
   1169c:	bic	r3, r3, #32
   116a0:	cmp	r3, #66	; 0x42
   116a4:	bne	11764 <abort@plt+0xa14>
   116a8:	ldrb	r3, [r0, #2]
   116ac:	cmp	r3, #49	; 0x31
   116b0:	bne	11764 <abort@plt+0xa14>
   116b4:	ldrb	r3, [r0, #3]
   116b8:	cmp	r3, #56	; 0x38
   116bc:	bne	11764 <abort@plt+0xa14>
   116c0:	ldrb	r3, [r0, #4]
   116c4:	cmp	r3, #48	; 0x30
   116c8:	bne	11764 <abort@plt+0xa14>
   116cc:	ldrb	r3, [r0, #5]
   116d0:	cmp	r3, #51	; 0x33
   116d4:	bne	11764 <abort@plt+0xa14>
   116d8:	ldrb	r3, [r0, #6]
   116dc:	cmp	r3, #48	; 0x30
   116e0:	bne	11764 <abort@plt+0xa14>
   116e4:	ldrb	r3, [r0, #7]
   116e8:	cmp	r3, #0
   116ec:	bne	11764 <abort@plt+0xa14>
   116f0:	ldrb	r2, [r4]
   116f4:	ldr	r3, [pc, #124]	; 11778 <abort@plt+0xa28>
   116f8:	ldr	r0, [pc, #124]	; 1177c <abort@plt+0xa2c>
   116fc:	cmp	r2, #96	; 0x60
   11700:	movne	r0, r3
   11704:	pop	{r4, r5, r6, pc}
   11708:	ldrb	r3, [r0, #1]
   1170c:	bic	r3, r3, #32
   11710:	cmp	r3, #84	; 0x54
   11714:	bne	11764 <abort@plt+0xa14>
   11718:	ldrb	r3, [r0, #2]
   1171c:	bic	r3, r3, #32
   11720:	cmp	r3, #70	; 0x46
   11724:	bne	11764 <abort@plt+0xa14>
   11728:	ldrb	r3, [r0, #3]
   1172c:	cmp	r3, #45	; 0x2d
   11730:	bne	11764 <abort@plt+0xa14>
   11734:	ldrb	r3, [r0, #4]
   11738:	cmp	r3, #56	; 0x38
   1173c:	bne	11764 <abort@plt+0xa14>
   11740:	ldrb	r3, [r0, #5]
   11744:	cmp	r3, #0
   11748:	bne	11764 <abort@plt+0xa14>
   1174c:	ldrb	r2, [r4]
   11750:	ldr	r3, [pc, #40]	; 11780 <abort@plt+0xa30>
   11754:	ldr	r0, [pc, #40]	; 11784 <abort@plt+0xa34>
   11758:	cmp	r2, #96	; 0x60
   1175c:	movne	r0, r3
   11760:	pop	{r4, r5, r6, pc}
   11764:	ldr	r3, [pc, #28]	; 11788 <abort@plt+0xa38>
   11768:	ldr	r0, [pc, #28]	; 1178c <abort@plt+0xa3c>
   1176c:	cmp	r5, #9
   11770:	movne	r0, r3
   11774:	pop	{r4, r5, r6, pc}
   11778:	andeq	r4, r1, r0, lsl #20
   1177c:	andeq	r4, r1, ip, lsl #20
   11780:	strdeq	r4, [r1], -ip
   11784:	andeq	r4, r1, r0, lsl sl
   11788:	andeq	r4, r1, r4, lsl #20
   1178c:	andeq	r4, r1, r8, lsl #20
   11790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11794:	sub	sp, sp, #116	; 0x74
   11798:	str	r0, [sp, #36]	; 0x24
   1179c:	mov	sl, r1
   117a0:	str	r2, [sp, #52]	; 0x34
   117a4:	str	r3, [sp, #28]
   117a8:	ldr	r8, [sp, #152]	; 0x98
   117ac:	bl	10c18 <__ctype_get_mb_cur_max@plt>
   117b0:	str	r0, [sp, #84]	; 0x54
   117b4:	ldr	r3, [sp, #156]	; 0x9c
   117b8:	lsr	r3, r3, #1
   117bc:	and	r3, r3, #1
   117c0:	str	r3, [sp, #32]
   117c4:	mov	r3, #1
   117c8:	str	r3, [sp, #40]	; 0x28
   117cc:	mov	r3, #0
   117d0:	str	r3, [sp, #80]	; 0x50
   117d4:	str	r3, [sp, #44]	; 0x2c
   117d8:	str	r3, [sp, #48]	; 0x30
   117dc:	str	r3, [sp, #60]	; 0x3c
   117e0:	str	r3, [sp, #72]	; 0x48
   117e4:	str	r3, [sp, #76]	; 0x4c
   117e8:	mov	r7, sl
   117ec:	mov	sl, r8
   117f0:	cmp	sl, #10
   117f4:	ldrls	pc, [pc, sl, lsl #2]
   117f8:	b	119b0 <abort@plt+0xc60>
   117fc:	andeq	r1, r1, r0, ror #16
   11800:	andeq	r1, r1, r0, lsr r8
   11804:	andeq	r1, r1, ip, lsl #19
   11808:	andeq	r1, r1, r8, lsr #16
   1180c:	andeq	r1, r1, r0, asr #18
   11810:	andeq	r1, r1, r0, ror r8
   11814:	ldrdeq	r2, [r1], -ip
   11818:			; <UNDEFINED> instruction: 0x000119b4
   1181c:	andeq	r1, r1, ip, lsr #17
   11820:	andeq	r1, r1, ip, lsr #17
   11824:	andeq	r1, r1, ip, lsr #17
   11828:	mov	r3, #1
   1182c:	str	r3, [sp, #48]	; 0x30
   11830:	mov	r3, #1
   11834:	str	r3, [sp, #32]
   11838:	str	r3, [sp, #60]	; 0x3c
   1183c:	ldr	r3, [pc, #4068]	; 12828 <abort@plt+0x1ad8>
   11840:	str	r3, [sp, #72]	; 0x48
   11844:	mov	fp, #0
   11848:	mov	sl, #2
   1184c:	mov	r6, #0
   11850:	ldr	r3, [sp, #48]	; 0x30
   11854:	eor	r3, r3, #1
   11858:	str	r3, [sp, #68]	; 0x44
   1185c:	b	12144 <abort@plt+0x13f4>
   11860:	mov	r3, #0
   11864:	str	r3, [sp, #32]
   11868:	mov	fp, r3
   1186c:	b	1184c <abort@plt+0xafc>
   11870:	ldr	r3, [sp, #32]
   11874:	cmp	r3, #0
   11878:	bne	119cc <abort@plt+0xc7c>
   1187c:	cmp	r7, #0
   11880:	beq	119ec <abort@plt+0xc9c>
   11884:	ldr	r3, [sp, #36]	; 0x24
   11888:	mov	r2, #34	; 0x22
   1188c:	strb	r2, [r3]
   11890:	mov	r3, #1
   11894:	str	r3, [sp, #48]	; 0x30
   11898:	str	r3, [sp, #60]	; 0x3c
   1189c:	ldr	r3, [pc, #3980]	; 12830 <abort@plt+0x1ae0>
   118a0:	str	r3, [sp, #72]	; 0x48
   118a4:	mov	fp, #1
   118a8:	b	1184c <abort@plt+0xafc>
   118ac:	cmp	sl, #10
   118b0:	beq	118d4 <abort@plt+0xb84>
   118b4:	mov	r1, sl
   118b8:	ldr	r0, [pc, #3948]	; 1282c <abort@plt+0x1adc>
   118bc:	bl	11658 <abort@plt+0x908>
   118c0:	str	r0, [sp, #164]	; 0xa4
   118c4:	mov	r1, sl
   118c8:	ldr	r0, [pc, #3928]	; 12828 <abort@plt+0x1ad8>
   118cc:	bl	11658 <abort@plt+0x908>
   118d0:	str	r0, [sp, #168]	; 0xa8
   118d4:	ldr	r3, [sp, #32]
   118d8:	cmp	r3, #0
   118dc:	movne	fp, #0
   118e0:	bne	11918 <abort@plt+0xbc8>
   118e4:	ldr	r3, [sp, #164]	; 0xa4
   118e8:	ldrb	r3, [r3]
   118ec:	cmp	r3, #0
   118f0:	beq	11938 <abort@plt+0xbe8>
   118f4:	ldr	r2, [sp, #164]	; 0xa4
   118f8:	mov	fp, #0
   118fc:	ldr	r1, [sp, #36]	; 0x24
   11900:	cmp	r7, fp
   11904:	strbhi	r3, [r1, fp]
   11908:	add	fp, fp, #1
   1190c:	ldrb	r3, [r2, #1]!
   11910:	cmp	r3, #0
   11914:	bne	11900 <abort@plt+0xbb0>
   11918:	ldr	r0, [sp, #168]	; 0xa8
   1191c:	bl	10ca8 <strlen@plt>
   11920:	str	r0, [sp, #60]	; 0x3c
   11924:	ldr	r3, [sp, #168]	; 0xa8
   11928:	str	r3, [sp, #72]	; 0x48
   1192c:	mov	r3, #1
   11930:	str	r3, [sp, #48]	; 0x30
   11934:	b	1184c <abort@plt+0xafc>
   11938:	mov	fp, #0
   1193c:	b	11918 <abort@plt+0xbc8>
   11940:	ldr	r3, [sp, #32]
   11944:	cmp	r3, #0
   11948:	bne	11a08 <abort@plt+0xcb8>
   1194c:	mov	r3, #1
   11950:	str	r3, [sp, #48]	; 0x30
   11954:	cmp	r7, #0
   11958:	beq	11a24 <abort@plt+0xcd4>
   1195c:	ldr	r3, [sp, #36]	; 0x24
   11960:	mov	r2, #39	; 0x27
   11964:	strb	r2, [r3]
   11968:	mov	r3, #0
   1196c:	str	r3, [sp, #32]
   11970:	mov	r3, #1
   11974:	str	r3, [sp, #60]	; 0x3c
   11978:	ldr	r3, [pc, #3752]	; 12828 <abort@plt+0x1ad8>
   1197c:	str	r3, [sp, #72]	; 0x48
   11980:	mov	fp, #1
   11984:	mov	sl, #2
   11988:	b	1184c <abort@plt+0xafc>
   1198c:	ldr	r3, [sp, #32]
   11990:	cmp	r3, #0
   11994:	beq	11954 <abort@plt+0xc04>
   11998:	mov	r3, #1
   1199c:	str	r3, [sp, #60]	; 0x3c
   119a0:	ldr	r3, [pc, #3712]	; 12828 <abort@plt+0x1ad8>
   119a4:	str	r3, [sp, #72]	; 0x48
   119a8:	mov	fp, #0
   119ac:	b	1184c <abort@plt+0xafc>
   119b0:	bl	10d50 <abort@plt>
   119b4:	mov	r3, #0
   119b8:	str	r3, [sp, #32]
   119bc:	mov	r3, #1
   119c0:	str	r3, [sp, #48]	; 0x30
   119c4:	mov	fp, #0
   119c8:	b	1184c <abort@plt+0xafc>
   119cc:	ldr	r3, [sp, #32]
   119d0:	str	r3, [sp, #48]	; 0x30
   119d4:	mov	r3, #1
   119d8:	str	r3, [sp, #60]	; 0x3c
   119dc:	ldr	r3, [pc, #3660]	; 12830 <abort@plt+0x1ae0>
   119e0:	str	r3, [sp, #72]	; 0x48
   119e4:	mov	fp, #0
   119e8:	b	1184c <abort@plt+0xafc>
   119ec:	mov	r3, #1
   119f0:	str	r3, [sp, #48]	; 0x30
   119f4:	str	r3, [sp, #60]	; 0x3c
   119f8:	ldr	r3, [pc, #3632]	; 12830 <abort@plt+0x1ae0>
   119fc:	str	r3, [sp, #72]	; 0x48
   11a00:	mov	fp, #1
   11a04:	b	1184c <abort@plt+0xafc>
   11a08:	mov	r3, #1
   11a0c:	str	r3, [sp, #60]	; 0x3c
   11a10:	ldr	r3, [pc, #3600]	; 12828 <abort@plt+0x1ad8>
   11a14:	str	r3, [sp, #72]	; 0x48
   11a18:	mov	fp, #0
   11a1c:	mov	sl, #2
   11a20:	b	1184c <abort@plt+0xafc>
   11a24:	mov	r3, #0
   11a28:	str	r3, [sp, #32]
   11a2c:	mov	r3, #1
   11a30:	str	r3, [sp, #60]	; 0x3c
   11a34:	ldr	r3, [pc, #3564]	; 12828 <abort@plt+0x1ad8>
   11a38:	str	r3, [sp, #72]	; 0x48
   11a3c:	mov	fp, #1
   11a40:	mov	sl, #2
   11a44:	b	1184c <abort@plt+0xafc>
   11a48:	mov	r3, #0
   11a4c:	str	r3, [sp, #56]	; 0x38
   11a50:	ldr	r3, [sp, #52]	; 0x34
   11a54:	add	r2, r3, r6
   11a58:	str	r2, [sp, #64]	; 0x40
   11a5c:	ldrb	r4, [r3, r6]
   11a60:	cmp	r4, #126	; 0x7e
   11a64:	ldrls	pc, [pc, r4, lsl #2]
   11a68:	b	122a4 <abort@plt+0x1554>
   11a6c:	andeq	r1, r1, r4, lsl #25
   11a70:	andeq	r2, r1, r4, lsr #5
   11a74:	andeq	r2, r1, r4, lsr #5
   11a78:	andeq	r2, r1, r4, lsr #5
   11a7c:	andeq	r2, r1, r4, lsr #5
   11a80:	andeq	r2, r1, r4, lsr #5
   11a84:	andeq	r2, r1, r4, lsr #5
   11a88:	andeq	r1, r1, r0, ror #31
   11a8c:	andeq	r1, r1, ip, ror ip
   11a90:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11a94:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11a98:	andeq	r1, r1, r0, lsl #30
   11a9c:	strdeq	r1, [r1], -r8
   11aa0:	andeq	r1, r1, r4, ror ip
   11aa4:	andeq	r2, r1, r4, lsr #5
   11aa8:	andeq	r2, r1, r4, lsr #5
   11aac:	andeq	r2, r1, r4, lsr #5
   11ab0:	andeq	r2, r1, r4, lsr #5
   11ab4:	andeq	r2, r1, r4, lsr #5
   11ab8:	andeq	r2, r1, r4, lsr #5
   11abc:	andeq	r2, r1, r4, lsr #5
   11ac0:	andeq	r2, r1, r4, lsr #5
   11ac4:	andeq	r2, r1, r4, lsr #5
   11ac8:	andeq	r2, r1, r4, lsr #5
   11acc:	andeq	r2, r1, r4, lsr #5
   11ad0:	andeq	r2, r1, r4, lsr #5
   11ad4:	andeq	r2, r1, r4, lsr #5
   11ad8:	andeq	r2, r1, r4, lsr #5
   11adc:	andeq	r2, r1, r4, lsr #5
   11ae0:	andeq	r2, r1, r4, lsr #5
   11ae4:	andeq	r2, r1, r4, lsr #5
   11ae8:	andeq	r2, r1, r4, lsr #5
   11aec:	andeq	r2, r1, r4, lsr r0
   11af0:	andeq	r2, r1, r0, lsr r0
   11af4:	andeq	r2, r1, r0, lsr r0
   11af8:	andeq	r2, r1, r8
   11afc:	andeq	r2, r1, r0, lsr r0
   11b00:	andeq	r2, r1, r8, ror r6
   11b04:	andeq	r2, r1, r0, lsr r0
   11b08:	andeq	r2, r1, r8, lsl #4
   11b0c:	andeq	r2, r1, r0, lsr r0
   11b10:	andeq	r2, r1, r0, lsr r0
   11b14:	andeq	r2, r1, r0, lsr r0
   11b18:	andeq	r2, r1, r8, ror r6
   11b1c:	andeq	r2, r1, r8, ror r6
   11b20:	andeq	r2, r1, r8, ror r6
   11b24:	andeq	r2, r1, r8, ror r6
   11b28:	andeq	r2, r1, r8, ror r6
   11b2c:	andeq	r2, r1, r8, ror r6
   11b30:	andeq	r2, r1, r8, ror r6
   11b34:	andeq	r2, r1, r8, ror r6
   11b38:	andeq	r2, r1, r8, ror r6
   11b3c:	andeq	r2, r1, r8, ror r6
   11b40:	andeq	r2, r1, r8, ror r6
   11b44:	andeq	r2, r1, r8, ror r6
   11b48:	andeq	r2, r1, r8, ror r6
   11b4c:	andeq	r2, r1, r8, ror r6
   11b50:	andeq	r2, r1, r8, ror r6
   11b54:	andeq	r2, r1, r8, ror r6
   11b58:	andeq	r2, r1, r0, lsr r0
   11b5c:	andeq	r2, r1, r0, lsr r0
   11b60:	andeq	r2, r1, r0, lsr r0
   11b64:	andeq	r2, r1, r0, lsr r0
   11b68:	andeq	r1, r1, ip, lsl #27
   11b6c:	andeq	r2, r1, r4, lsr #5
   11b70:	andeq	r2, r1, r8, ror r6
   11b74:	andeq	r2, r1, r8, ror r6
   11b78:	andeq	r2, r1, r8, ror r6
   11b7c:	andeq	r2, r1, r8, ror r6
   11b80:	andeq	r2, r1, r8, ror r6
   11b84:	andeq	r2, r1, r8, ror r6
   11b88:	andeq	r2, r1, r8, ror r6
   11b8c:	andeq	r2, r1, r8, ror r6
   11b90:	andeq	r2, r1, r8, ror r6
   11b94:	andeq	r2, r1, r8, ror r6
   11b98:	andeq	r2, r1, r8, ror r6
   11b9c:	andeq	r2, r1, r8, ror r6
   11ba0:	andeq	r2, r1, r8, ror r6
   11ba4:	andeq	r2, r1, r8, ror r6
   11ba8:	andeq	r2, r1, r8, ror r6
   11bac:	andeq	r2, r1, r8, ror r6
   11bb0:	andeq	r2, r1, r8, ror r6
   11bb4:	andeq	r2, r1, r8, ror r6
   11bb8:	andeq	r2, r1, r8, ror r6
   11bbc:	andeq	r2, r1, r8, ror r6
   11bc0:	andeq	r2, r1, r8, ror r6
   11bc4:	andeq	r2, r1, r8, ror r6
   11bc8:	andeq	r2, r1, r8, ror r6
   11bcc:	andeq	r2, r1, r8, ror r6
   11bd0:	andeq	r2, r1, r8, ror r6
   11bd4:	andeq	r2, r1, r8, ror r6
   11bd8:	andeq	r2, r1, r0, lsr r0
   11bdc:	andeq	r1, r1, r8, lsl #30
   11be0:	andeq	r2, r1, r8, ror r6
   11be4:	andeq	r2, r1, r0, lsr r0
   11be8:	andeq	r2, r1, r8, ror r6
   11bec:	andeq	r2, r1, r0, lsr r0
   11bf0:	andeq	r2, r1, r8, ror r6
   11bf4:	andeq	r2, r1, r8, ror r6
   11bf8:	andeq	r2, r1, r8, ror r6
   11bfc:	andeq	r2, r1, r8, ror r6
   11c00:	andeq	r2, r1, r8, ror r6
   11c04:	andeq	r2, r1, r8, ror r6
   11c08:	andeq	r2, r1, r8, ror r6
   11c0c:	andeq	r2, r1, r8, ror r6
   11c10:	andeq	r2, r1, r8, ror r6
   11c14:	andeq	r2, r1, r8, ror r6
   11c18:	andeq	r2, r1, r8, ror r6
   11c1c:	andeq	r2, r1, r8, ror r6
   11c20:	andeq	r2, r1, r8, ror r6
   11c24:	andeq	r2, r1, r8, ror r6
   11c28:	andeq	r2, r1, r8, ror r6
   11c2c:	andeq	r2, r1, r8, ror r6
   11c30:	andeq	r2, r1, r8, ror r6
   11c34:	andeq	r2, r1, r8, ror r6
   11c38:	andeq	r2, r1, r8, ror r6
   11c3c:	andeq	r2, r1, r8, ror r6
   11c40:	andeq	r2, r1, r8, ror r6
   11c44:	andeq	r2, r1, r8, ror r6
   11c48:	andeq	r2, r1, r8, ror r6
   11c4c:	andeq	r2, r1, r8, ror r6
   11c50:	andeq	r2, r1, r8, ror r6
   11c54:	andeq	r2, r1, r8, ror r6
   11c58:	andeq	r1, r1, r8, ror #31
   11c5c:	andeq	r2, r1, r0, lsr r0
   11c60:	andeq	r1, r1, r8, ror #31
   11c64:	andeq	r2, r1, r8
   11c68:	mov	r3, #0
   11c6c:	str	r3, [sp, #56]	; 0x38
   11c70:	b	11a50 <abort@plt+0xd00>
   11c74:	mov	r3, #114	; 0x72
   11c78:	b	11f9c <abort@plt+0x124c>
   11c7c:	mov	r3, #98	; 0x62
   11c80:	b	11fb4 <abort@plt+0x1264>
   11c84:	ldr	r3, [sp, #48]	; 0x30
   11c88:	cmp	r3, #0
   11c8c:	beq	11d74 <abort@plt+0x1024>
   11c90:	ldr	r3, [sp, #32]
   11c94:	cmp	r3, #0
   11c98:	bne	127fc <abort@plt+0x1aac>
   11c9c:	ldr	r3, [sp, #44]	; 0x2c
   11ca0:	eor	r3, r3, #1
   11ca4:	cmp	sl, #2
   11ca8:	movne	r3, #0
   11cac:	andeq	r3, r3, #1
   11cb0:	cmp	r3, #0
   11cb4:	moveq	r2, fp
   11cb8:	beq	11cfc <abort@plt+0xfac>
   11cbc:	cmp	r7, fp
   11cc0:	ldrhi	r2, [sp, #36]	; 0x24
   11cc4:	movhi	r1, #39	; 0x27
   11cc8:	strbhi	r1, [r2, fp]
   11ccc:	add	r2, fp, #1
   11cd0:	cmp	r7, r2
   11cd4:	ldrhi	r1, [sp, #36]	; 0x24
   11cd8:	movhi	r0, #36	; 0x24
   11cdc:	strbhi	r0, [r1, r2]
   11ce0:	add	r2, fp, #2
   11ce4:	cmp	r7, r2
   11ce8:	ldrhi	r1, [sp, #36]	; 0x24
   11cec:	movhi	r0, #39	; 0x27
   11cf0:	strbhi	r0, [r1, r2]
   11cf4:	add	r2, fp, #3
   11cf8:	str	r3, [sp, #44]	; 0x2c
   11cfc:	cmp	r7, r2
   11d00:	ldrhi	r3, [sp, #36]	; 0x24
   11d04:	movhi	r1, #92	; 0x5c
   11d08:	strbhi	r1, [r3, r2]
   11d0c:	add	fp, r2, #1
   11d10:	cmp	r5, #0
   11d14:	beq	12680 <abort@plt+0x1930>
   11d18:	add	r3, r6, #1
   11d1c:	ldr	r1, [sp, #28]
   11d20:	cmp	r1, r3
   11d24:	bls	12690 <abort@plt+0x1940>
   11d28:	ldr	r1, [sp, #52]	; 0x34
   11d2c:	ldrb	r3, [r1, r3]
   11d30:	sub	r3, r3, #48	; 0x30
   11d34:	uxtb	r3, r3
   11d38:	cmp	r3, #9
   11d3c:	bhi	1269c <abort@plt+0x194c>
   11d40:	cmp	r7, fp
   11d44:	movhi	r3, #48	; 0x30
   11d48:	ldrhi	r1, [sp, #36]	; 0x24
   11d4c:	strbhi	r3, [r1, fp]
   11d50:	add	r3, r2, #2
   11d54:	cmp	r7, r3
   11d58:	movhi	r1, #48	; 0x30
   11d5c:	ldrhi	r0, [sp, #36]	; 0x24
   11d60:	strbhi	r1, [r0, r3]
   11d64:	add	fp, r2, #3
   11d68:	ldr	r8, [sp, #32]
   11d6c:	mov	r4, #48	; 0x30
   11d70:	b	1204c <abort@plt+0x12fc>
   11d74:	ldr	r3, [sp, #156]	; 0x9c
   11d78:	tst	r3, #1
   11d7c:	bne	12140 <abort@plt+0x13f0>
   11d80:	ldr	r5, [sp, #48]	; 0x30
   11d84:	mov	r8, r5
   11d88:	b	1204c <abort@plt+0x12fc>
   11d8c:	cmp	sl, #2
   11d90:	beq	11da8 <abort@plt+0x1058>
   11d94:	cmp	sl, #5
   11d98:	beq	11dc0 <abort@plt+0x1070>
   11d9c:	mov	r8, #0
   11da0:	mov	r5, r8
   11da4:	b	1204c <abort@plt+0x12fc>
   11da8:	ldr	r3, [sp, #32]
   11dac:	cmp	r3, #0
   11db0:	bne	12810 <abort@plt+0x1ac0>
   11db4:	mov	r8, r3
   11db8:	mov	r5, r3
   11dbc:	b	1204c <abort@plt+0x12fc>
   11dc0:	ldr	r3, [sp, #156]	; 0x9c
   11dc4:	tst	r3, #4
   11dc8:	beq	126a8 <abort@plt+0x1958>
   11dcc:	add	r3, r6, #2
   11dd0:	ldr	r2, [sp, #28]
   11dd4:	cmp	r2, r3
   11dd8:	bls	126b4 <abort@plt+0x1964>
   11ddc:	ldr	r2, [sp, #52]	; 0x34
   11de0:	add	r2, r2, r6
   11de4:	ldrb	r2, [r2, #1]
   11de8:	cmp	r2, #63	; 0x3f
   11dec:	movne	r8, #0
   11df0:	movne	r5, r8
   11df4:	bne	1204c <abort@plt+0x12fc>
   11df8:	ldr	r2, [sp, #52]	; 0x34
   11dfc:	ldrb	r2, [r2, r3]
   11e00:	sub	r1, r2, #33	; 0x21
   11e04:	cmp	r1, #29
   11e08:	ldrls	pc, [pc, r1, lsl #2]
   11e0c:	b	126c0 <abort@plt+0x1970>
   11e10:	andeq	r1, r1, r8, lsl #29
   11e14:	andeq	r2, r1, r0, asr #13
   11e18:	andeq	r2, r1, r0, asr #13
   11e1c:	andeq	r2, r1, r0, asr #13
   11e20:	andeq	r2, r1, r0, asr #13
   11e24:	andeq	r2, r1, r0, asr #13
   11e28:	andeq	r1, r1, r8, lsl #29
   11e2c:	andeq	r1, r1, r8, lsl #29
   11e30:	andeq	r1, r1, r8, lsl #29
   11e34:	andeq	r2, r1, r0, asr #13
   11e38:	andeq	r2, r1, r0, asr #13
   11e3c:	andeq	r2, r1, r0, asr #13
   11e40:	andeq	r1, r1, r8, lsl #29
   11e44:	andeq	r2, r1, r0, asr #13
   11e48:	andeq	r1, r1, r8, lsl #29
   11e4c:	andeq	r2, r1, r0, asr #13
   11e50:	andeq	r2, r1, r0, asr #13
   11e54:	andeq	r2, r1, r0, asr #13
   11e58:	andeq	r2, r1, r0, asr #13
   11e5c:	andeq	r2, r1, r0, asr #13
   11e60:	andeq	r2, r1, r0, asr #13
   11e64:	andeq	r2, r1, r0, asr #13
   11e68:	andeq	r2, r1, r0, asr #13
   11e6c:	andeq	r2, r1, r0, asr #13
   11e70:	andeq	r2, r1, r0, asr #13
   11e74:	andeq	r2, r1, r0, asr #13
   11e78:	andeq	r2, r1, r0, asr #13
   11e7c:	andeq	r1, r1, r8, lsl #29
   11e80:	andeq	r1, r1, r8, lsl #29
   11e84:	andeq	r1, r1, r8, lsl #29
   11e88:	ldr	r1, [sp, #32]
   11e8c:	cmp	r1, #0
   11e90:	bne	128d0 <abort@plt+0x1b80>
   11e94:	cmp	r7, fp
   11e98:	movhi	r1, #63	; 0x3f
   11e9c:	ldrhi	r0, [sp, #36]	; 0x24
   11ea0:	strbhi	r1, [r0, fp]
   11ea4:	add	r1, fp, #1
   11ea8:	cmp	r7, r1
   11eac:	ldrhi	r0, [sp, #36]	; 0x24
   11eb0:	movhi	ip, #34	; 0x22
   11eb4:	strbhi	ip, [r0, r1]
   11eb8:	add	r1, fp, #2
   11ebc:	cmp	r7, r1
   11ec0:	ldrhi	r0, [sp, #36]	; 0x24
   11ec4:	movhi	ip, #34	; 0x22
   11ec8:	strbhi	ip, [r0, r1]
   11ecc:	add	r1, fp, #3
   11ed0:	cmp	r7, r1
   11ed4:	movhi	r0, #63	; 0x3f
   11ed8:	ldrhi	ip, [sp, #36]	; 0x24
   11edc:	strbhi	r0, [ip, r1]
   11ee0:	add	fp, fp, #4
   11ee4:	ldr	r5, [sp, #32]
   11ee8:	mov	r8, r5
   11eec:	mov	r4, r2
   11ef0:	mov	r6, r3
   11ef4:	b	1204c <abort@plt+0x12fc>
   11ef8:	mov	r3, #102	; 0x66
   11efc:	b	11fb4 <abort@plt+0x1264>
   11f00:	mov	r3, #118	; 0x76
   11f04:	b	11fb4 <abort@plt+0x1264>
   11f08:	cmp	sl, #2
   11f0c:	beq	11f78 <abort@plt+0x1228>
   11f10:	ldr	r3, [sp, #48]	; 0x30
   11f14:	ldr	r2, [sp, #32]
   11f18:	and	r3, r3, r2
   11f1c:	tst	r9, r3
   11f20:	moveq	r3, r4
   11f24:	beq	11fb4 <abort@plt+0x1264>
   11f28:	mov	r8, #0
   11f2c:	mov	r5, r8
   11f30:	eor	r5, r5, #1
   11f34:	ldr	r3, [sp, #44]	; 0x2c
   11f38:	and	r5, r5, r3
   11f3c:	tst	r5, #255	; 0xff
   11f40:	beq	12120 <abort@plt+0x13d0>
   11f44:	cmp	r7, fp
   11f48:	ldrhi	r3, [sp, #36]	; 0x24
   11f4c:	movhi	r2, #39	; 0x27
   11f50:	strbhi	r2, [r3, fp]
   11f54:	add	r3, fp, #1
   11f58:	cmp	r7, r3
   11f5c:	ldrhi	r2, [sp, #36]	; 0x24
   11f60:	movhi	r1, #39	; 0x27
   11f64:	strbhi	r1, [r2, r3]
   11f68:	add	fp, fp, #2
   11f6c:	mov	r3, #0
   11f70:	str	r3, [sp, #44]	; 0x2c
   11f74:	b	12120 <abort@plt+0x13d0>
   11f78:	ldr	r3, [sp, #32]
   11f7c:	cmp	r3, #0
   11f80:	bne	1281c <abort@plt+0x1acc>
   11f84:	mov	r8, r3
   11f88:	mov	r5, r3
   11f8c:	b	11f30 <abort@plt+0x11e0>
   11f90:	mov	r3, #110	; 0x6e
   11f94:	b	11f9c <abort@plt+0x124c>
   11f98:	mov	r3, #116	; 0x74
   11f9c:	ldr	r2, [sp, #32]
   11fa0:	cmp	sl, #2
   11fa4:	movne	r2, #0
   11fa8:	andeq	r2, r2, #1
   11fac:	cmp	r2, #0
   11fb0:	bne	11fd4 <abort@plt+0x1284>
   11fb4:	ldr	r2, [sp, #48]	; 0x30
   11fb8:	cmp	r2, #0
   11fbc:	moveq	r8, r2
   11fc0:	moveq	r5, r2
   11fc4:	beq	1204c <abort@plt+0x12fc>
   11fc8:	mov	r4, r3
   11fcc:	mov	r8, #0
   11fd0:	b	120a4 <abort@plt+0x1354>
   11fd4:	mov	r8, sl
   11fd8:	mov	sl, r7
   11fdc:	b	12848 <abort@plt+0x1af8>
   11fe0:	mov	r3, #97	; 0x61
   11fe4:	b	11fb4 <abort@plt+0x1264>
   11fe8:	ldr	r3, [sp, #28]
   11fec:	cmn	r3, #1
   11ff0:	beq	1201c <abort@plt+0x12cc>
   11ff4:	ldr	r3, [sp, #28]
   11ff8:	subs	r3, r3, #1
   11ffc:	movne	r3, #1
   12000:	cmp	r3, #0
   12004:	bne	126cc <abort@plt+0x197c>
   12008:	cmp	r6, #0
   1200c:	beq	12034 <abort@plt+0x12e4>
   12010:	mov	r8, #0
   12014:	mov	r5, r8
   12018:	b	1204c <abort@plt+0x12fc>
   1201c:	ldr	r3, [sp, #52]	; 0x34
   12020:	ldrb	r3, [r3, #1]
   12024:	adds	r3, r3, #0
   12028:	movne	r3, #1
   1202c:	b	12000 <abort@plt+0x12b0>
   12030:	mov	r8, #0
   12034:	ldr	r5, [sp, #32]
   12038:	cmp	sl, #2
   1203c:	movne	r5, #0
   12040:	andeq	r5, r5, #1
   12044:	cmp	r5, #0
   12048:	bne	121fc <abort@plt+0x14ac>
   1204c:	ldr	r3, [sp, #68]	; 0x44
   12050:	cmp	sl, #2
   12054:	orreq	r3, r3, #1
   12058:	eor	r3, r3, #1
   1205c:	ldr	r2, [sp, #32]
   12060:	orr	r3, r2, r3
   12064:	tst	r3, #255	; 0xff
   12068:	beq	12098 <abort@plt+0x1348>
   1206c:	ldr	r3, [sp, #160]	; 0xa0
   12070:	cmp	r3, #0
   12074:	beq	12098 <abort@plt+0x1348>
   12078:	lsr	r2, r4, #5
   1207c:	uxtb	r2, r2
   12080:	and	r3, r4, #31
   12084:	ldr	r1, [sp, #160]	; 0xa0
   12088:	ldr	r2, [r1, r2, lsl #2]
   1208c:	lsr	r3, r2, r3
   12090:	tst	r3, #1
   12094:	bne	120a4 <abort@plt+0x1354>
   12098:	ldr	r3, [sp, #56]	; 0x38
   1209c:	cmp	r3, #0
   120a0:	beq	11f30 <abort@plt+0x11e0>
   120a4:	ldr	r3, [sp, #32]
   120a8:	cmp	r3, #0
   120ac:	bne	128b8 <abort@plt+0x1b68>
   120b0:	ldr	r3, [sp, #44]	; 0x2c
   120b4:	eor	r3, r3, #1
   120b8:	cmp	sl, #2
   120bc:	movne	r3, #0
   120c0:	andeq	r3, r3, #1
   120c4:	cmp	r3, #0
   120c8:	beq	1210c <abort@plt+0x13bc>
   120cc:	cmp	r7, fp
   120d0:	ldrhi	r2, [sp, #36]	; 0x24
   120d4:	movhi	r1, #39	; 0x27
   120d8:	strbhi	r1, [r2, fp]
   120dc:	add	r2, fp, #1
   120e0:	cmp	r7, r2
   120e4:	ldrhi	r1, [sp, #36]	; 0x24
   120e8:	movhi	r0, #36	; 0x24
   120ec:	strbhi	r0, [r1, r2]
   120f0:	add	r2, fp, #2
   120f4:	cmp	r7, r2
   120f8:	ldrhi	r1, [sp, #36]	; 0x24
   120fc:	movhi	r0, #39	; 0x27
   12100:	strbhi	r0, [r1, r2]
   12104:	add	fp, fp, #3
   12108:	str	r3, [sp, #44]	; 0x2c
   1210c:	cmp	r7, fp
   12110:	ldrhi	r3, [sp, #36]	; 0x24
   12114:	movhi	r2, #92	; 0x5c
   12118:	strbhi	r2, [r3, fp]
   1211c:	add	fp, fp, #1
   12120:	cmp	fp, r7
   12124:	ldrcc	r3, [sp, #36]	; 0x24
   12128:	strbcc	r4, [r3, fp]
   1212c:	add	fp, fp, #1
   12130:	ldr	r3, [sp, #40]	; 0x28
   12134:	cmp	r8, #0
   12138:	moveq	r3, #0
   1213c:	str	r3, [sp, #40]	; 0x28
   12140:	add	r6, r6, #1
   12144:	ldr	r3, [sp, #28]
   12148:	cmn	r3, #1
   1214c:	beq	126d8 <abort@plt+0x1988>
   12150:	ldr	r3, [sp, #28]
   12154:	subs	r8, r3, r6
   12158:	movne	r8, #1
   1215c:	cmp	r8, #0
   12160:	beq	126ec <abort@plt+0x199c>
   12164:	ldr	r5, [sp, #48]	; 0x30
   12168:	cmp	sl, #2
   1216c:	moveq	r5, #0
   12170:	andne	r5, r5, #1
   12174:	ldr	r3, [sp, #60]	; 0x3c
   12178:	adds	r9, r3, #0
   1217c:	movne	r9, #1
   12180:	ands	r2, r5, r9
   12184:	str	r2, [sp, #56]	; 0x38
   12188:	beq	11a50 <abort@plt+0xd00>
   1218c:	add	r4, r6, r3
   12190:	ldr	r2, [sp, #28]
   12194:	cmp	r3, #1
   12198:	movls	r3, #0
   1219c:	movhi	r3, #1
   121a0:	cmn	r2, #1
   121a4:	movne	r3, #0
   121a8:	cmp	r3, #0
   121ac:	beq	121bc <abort@plt+0x146c>
   121b0:	ldr	r0, [sp, #52]	; 0x34
   121b4:	bl	10ca8 <strlen@plt>
   121b8:	str	r0, [sp, #28]
   121bc:	ldr	r3, [sp, #28]
   121c0:	cmp	r3, r4
   121c4:	bcc	11a48 <abort@plt+0xcf8>
   121c8:	ldr	r2, [sp, #60]	; 0x3c
   121cc:	ldr	r1, [sp, #72]	; 0x48
   121d0:	ldr	r3, [sp, #52]	; 0x34
   121d4:	add	r0, r3, r6
   121d8:	bl	10bb8 <memcmp@plt>
   121dc:	cmp	r0, #0
   121e0:	bne	11c68 <abort@plt+0xf18>
   121e4:	ldr	r3, [sp, #32]
   121e8:	cmp	r3, #0
   121ec:	beq	11a50 <abort@plt+0xd00>
   121f0:	mov	r8, sl
   121f4:	mov	sl, r7
   121f8:	b	12848 <abort@plt+0x1af8>
   121fc:	mov	r8, sl
   12200:	mov	sl, r7
   12204:	b	12848 <abort@plt+0x1af8>
   12208:	cmp	sl, #2
   1220c:	strne	r8, [sp, #80]	; 0x50
   12210:	movne	r5, #0
   12214:	bne	1204c <abort@plt+0x12fc>
   12218:	ldr	r3, [sp, #32]
   1221c:	cmp	r3, #0
   12220:	bne	12834 <abort@plt+0x1ae4>
   12224:	ldr	r2, [sp, #76]	; 0x4c
   12228:	adds	r3, r7, #0
   1222c:	movne	r3, #1
   12230:	cmp	r2, #0
   12234:	movne	r3, #0
   12238:	cmp	r3, #0
   1223c:	movne	r3, #0
   12240:	bne	12270 <abort@plt+0x1520>
   12244:	cmp	r7, fp
   12248:	ldrhi	r3, [sp, #36]	; 0x24
   1224c:	movhi	r2, #39	; 0x27
   12250:	strbhi	r2, [r3, fp]
   12254:	add	r3, fp, #1
   12258:	cmp	r7, r3
   1225c:	ldrhi	r2, [sp, #36]	; 0x24
   12260:	movhi	r1, #92	; 0x5c
   12264:	strbhi	r1, [r2, r3]
   12268:	mov	r3, r7
   1226c:	ldr	r7, [sp, #76]	; 0x4c
   12270:	add	r2, fp, #2
   12274:	cmp	r2, r3
   12278:	ldrcc	r1, [sp, #36]	; 0x24
   1227c:	movcc	r0, #39	; 0x27
   12280:	strbcc	r0, [r1, r2]
   12284:	add	fp, fp, #3
   12288:	ldr	r2, [sp, #32]
   1228c:	mov	r5, r2
   12290:	str	r8, [sp, #80]	; 0x50
   12294:	str	r2, [sp, #44]	; 0x2c
   12298:	str	r7, [sp, #76]	; 0x4c
   1229c:	mov	r7, r3
   122a0:	b	1204c <abort@plt+0x12fc>
   122a4:	ldr	r5, [sp, #84]	; 0x54
   122a8:	cmp	r5, #1
   122ac:	beq	122dc <abort@plt+0x158c>
   122b0:	mov	r3, #0
   122b4:	str	r3, [sp, #104]	; 0x68
   122b8:	str	r3, [sp, #108]	; 0x6c
   122bc:	ldr	r3, [sp, #28]
   122c0:	cmn	r3, #1
   122c4:	beq	12310 <abort@plt+0x15c0>
   122c8:	mov	r3, #0
   122cc:	str	r4, [sp, #88]	; 0x58
   122d0:	str	fp, [sp, #92]	; 0x5c
   122d4:	mov	fp, r3
   122d8:	b	12438 <abort@plt+0x16e8>
   122dc:	bl	10c90 <__ctype_b_loc@plt>
   122e0:	ldr	r2, [r0]
   122e4:	lsl	r3, r4, #1
   122e8:	ldrh	r8, [r2, r3]
   122ec:	lsr	r8, r8, #14
   122f0:	and	r8, r8, #1
   122f4:	mov	r2, r5
   122f8:	eor	r5, r8, #1
   122fc:	ldr	r3, [sp, #48]	; 0x30
   12300:	and	r5, r5, r3
   12304:	ands	r5, r5, #255	; 0xff
   12308:	beq	1204c <abort@plt+0x12fc>
   1230c:	b	124d0 <abort@plt+0x1780>
   12310:	ldr	r0, [sp, #52]	; 0x34
   12314:	bl	10ca8 <strlen@plt>
   12318:	str	r0, [sp, #28]
   1231c:	b	122c8 <abort@plt+0x1578>
   12320:	mov	r2, fp
   12324:	mov	r1, r4
   12328:	ldr	r4, [sp, #88]	; 0x58
   1232c:	ldr	fp, [sp, #92]	; 0x5c
   12330:	ldr	r0, [sp, #28]
   12334:	cmp	r0, r5
   12338:	bls	12504 <abort@plt+0x17b4>
   1233c:	ldrb	r3, [r1]
   12340:	cmp	r3, #0
   12344:	beq	1250c <abort@plt+0x17bc>
   12348:	mov	r3, r1
   1234c:	add	r2, r2, #1
   12350:	add	r1, r6, r2
   12354:	cmp	r0, r1
   12358:	bls	12514 <abort@plt+0x17c4>
   1235c:	ldrb	r1, [r3, #1]!
   12360:	cmp	r1, #0
   12364:	bne	1234c <abort@plt+0x15fc>
   12368:	mov	r8, #0
   1236c:	b	124c8 <abort@plt+0x1778>
   12370:	cmp	r4, r5
   12374:	beq	12414 <abort@plt+0x16c4>
   12378:	ldrb	r3, [r4, #1]!
   1237c:	sub	r3, r3, #91	; 0x5b
   12380:	cmp	r3, #33	; 0x21
   12384:	ldrls	pc, [pc, r3, lsl #2]
   12388:	b	12370 <abort@plt+0x1620>
   1238c:	andeq	r2, r1, r0, asr #16
   12390:	andeq	r2, r1, r0, asr #16
   12394:	andeq	r2, r1, r0, ror r3
   12398:	andeq	r2, r1, r0, asr #16
   1239c:	andeq	r2, r1, r0, ror r3
   123a0:	andeq	r2, r1, r0, asr #16
   123a4:	andeq	r2, r1, r0, ror r3
   123a8:	andeq	r2, r1, r0, ror r3
   123ac:	andeq	r2, r1, r0, ror r3
   123b0:	andeq	r2, r1, r0, ror r3
   123b4:	andeq	r2, r1, r0, ror r3
   123b8:	andeq	r2, r1, r0, ror r3
   123bc:	andeq	r2, r1, r0, ror r3
   123c0:	andeq	r2, r1, r0, ror r3
   123c4:	andeq	r2, r1, r0, ror r3
   123c8:	andeq	r2, r1, r0, ror r3
   123cc:	andeq	r2, r1, r0, ror r3
   123d0:	andeq	r2, r1, r0, ror r3
   123d4:	andeq	r2, r1, r0, ror r3
   123d8:	andeq	r2, r1, r0, ror r3
   123dc:	andeq	r2, r1, r0, ror r3
   123e0:	andeq	r2, r1, r0, ror r3
   123e4:	andeq	r2, r1, r0, ror r3
   123e8:	andeq	r2, r1, r0, ror r3
   123ec:	andeq	r2, r1, r0, ror r3
   123f0:	andeq	r2, r1, r0, ror r3
   123f4:	andeq	r2, r1, r0, ror r3
   123f8:	andeq	r2, r1, r0, ror r3
   123fc:	andeq	r2, r1, r0, ror r3
   12400:	andeq	r2, r1, r0, ror r3
   12404:	andeq	r2, r1, r0, ror r3
   12408:	andeq	r2, r1, r0, ror r3
   1240c:	andeq	r2, r1, r0, ror r3
   12410:	andeq	r2, r1, r0, asr #16
   12414:	ldr	r0, [sp, #100]	; 0x64
   12418:	bl	10bf4 <iswprint@plt>
   1241c:	cmp	r0, #0
   12420:	moveq	r8, #0
   12424:	add	fp, fp, r9
   12428:	add	r0, sp, #104	; 0x68
   1242c:	bl	10bac <mbsinit@plt>
   12430:	cmp	r0, #0
   12434:	bne	124a8 <abort@plt+0x1758>
   12438:	add	r5, r6, fp
   1243c:	ldr	r3, [sp, #52]	; 0x34
   12440:	add	r4, r3, r5
   12444:	add	r3, sp, #104	; 0x68
   12448:	ldr	r2, [sp, #28]
   1244c:	sub	r2, r2, r5
   12450:	mov	r1, r4
   12454:	add	r0, sp, #100	; 0x64
   12458:	bl	13fc4 <abort@plt+0x3274>
   1245c:	subs	r9, r0, #0
   12460:	beq	1251c <abort@plt+0x17cc>
   12464:	cmn	r9, #1
   12468:	beq	124b8 <abort@plt+0x1768>
   1246c:	cmn	r9, #2
   12470:	beq	12320 <abort@plt+0x15d0>
   12474:	ldr	r3, [sp, #32]
   12478:	cmp	sl, #2
   1247c:	movne	r3, #0
   12480:	andeq	r3, r3, #1
   12484:	cmp	r3, #0
   12488:	beq	12414 <abort@plt+0x16c4>
   1248c:	cmp	r9, #1
   12490:	bls	12414 <abort@plt+0x16c4>
   12494:	sub	r3, r9, #1
   12498:	add	r5, r3, r5
   1249c:	ldr	r3, [sp, #52]	; 0x34
   124a0:	add	r5, r3, r5
   124a4:	b	12378 <abort@plt+0x1628>
   124a8:	ldr	r4, [sp, #88]	; 0x58
   124ac:	mov	r2, fp
   124b0:	ldr	fp, [sp, #92]	; 0x5c
   124b4:	b	124c8 <abort@plt+0x1778>
   124b8:	ldr	r4, [sp, #88]	; 0x58
   124bc:	mov	r2, fp
   124c0:	ldr	fp, [sp, #92]	; 0x5c
   124c4:	mov	r8, #0
   124c8:	cmp	r2, #1
   124cc:	bls	122f8 <abort@plt+0x15a8>
   124d0:	add	r1, r6, r2
   124d4:	ldr	ip, [sp, #64]	; 0x40
   124d8:	mov	r5, #0
   124dc:	eor	r3, r8, #1
   124e0:	ldr	r2, [sp, #48]	; 0x30
   124e4:	and	r3, r3, r2
   124e8:	uxtb	r3, r3
   124ec:	ldr	r9, [sp, #32]
   124f0:	ldr	lr, [sp, #44]	; 0x2c
   124f4:	ldr	r2, [sp, #56]	; 0x38
   124f8:	str	r8, [sp, #56]	; 0x38
   124fc:	ldr	r0, [sp, #36]	; 0x24
   12500:	b	1259c <abort@plt+0x184c>
   12504:	mov	r8, #0
   12508:	b	124c8 <abort@plt+0x1778>
   1250c:	mov	r8, #0
   12510:	b	124c8 <abort@plt+0x1778>
   12514:	mov	r8, #0
   12518:	b	124c8 <abort@plt+0x1778>
   1251c:	ldr	r4, [sp, #88]	; 0x58
   12520:	mov	r2, fp
   12524:	ldr	fp, [sp, #92]	; 0x5c
   12528:	b	124c8 <abort@plt+0x1778>
   1252c:	cmp	r2, #0
   12530:	beq	12544 <abort@plt+0x17f4>
   12534:	cmp	r7, fp
   12538:	movhi	r2, #92	; 0x5c
   1253c:	strbhi	r2, [r0, fp]
   12540:	add	fp, fp, #1
   12544:	add	r8, r6, #1
   12548:	cmp	r1, r8
   1254c:	bls	12654 <abort@plt+0x1904>
   12550:	eor	r2, r5, #1
   12554:	and	r2, r2, lr
   12558:	ands	r2, r2, #255	; 0xff
   1255c:	beq	12670 <abort@plt+0x1920>
   12560:	cmp	r7, fp
   12564:	movhi	r2, #39	; 0x27
   12568:	strbhi	r2, [r0, fp]
   1256c:	add	r2, fp, #1
   12570:	cmp	r7, r2
   12574:	movhi	lr, #39	; 0x27
   12578:	strbhi	lr, [r0, r2]
   1257c:	add	fp, fp, #2
   12580:	mov	r6, r8
   12584:	mov	r2, r3
   12588:	mov	lr, r3
   1258c:	cmp	r7, fp
   12590:	strbhi	r4, [r0, fp]
   12594:	add	fp, fp, #1
   12598:	ldrb	r4, [ip, #1]!
   1259c:	cmp	r3, #0
   125a0:	beq	1252c <abort@plt+0x17dc>
   125a4:	cmp	r9, #0
   125a8:	bne	128ac <abort@plt+0x1b5c>
   125ac:	eor	r5, lr, #1
   125b0:	cmp	sl, #2
   125b4:	movne	r5, #0
   125b8:	andeq	r5, r5, #1
   125bc:	cmp	r5, #0
   125c0:	beq	125f8 <abort@plt+0x18a8>
   125c4:	cmp	r7, fp
   125c8:	movhi	lr, #39	; 0x27
   125cc:	strbhi	lr, [r0, fp]
   125d0:	add	lr, fp, #1
   125d4:	cmp	r7, lr
   125d8:	movhi	r8, #36	; 0x24
   125dc:	strbhi	r8, [r0, lr]
   125e0:	add	lr, fp, #2
   125e4:	cmp	r7, lr
   125e8:	movhi	r8, #39	; 0x27
   125ec:	strbhi	r8, [r0, lr]
   125f0:	add	fp, fp, #3
   125f4:	mov	lr, r5
   125f8:	cmp	r7, fp
   125fc:	movhi	r5, #92	; 0x5c
   12600:	strbhi	r5, [r0, fp]
   12604:	add	r5, fp, #1
   12608:	cmp	r7, r5
   1260c:	lsrhi	r8, r4, #6
   12610:	addhi	r8, r8, #48	; 0x30
   12614:	strbhi	r8, [r0, r5]
   12618:	add	r8, fp, #2
   1261c:	cmp	r7, r8
   12620:	lsrhi	r5, r4, #3
   12624:	andhi	r5, r5, #7
   12628:	addhi	r5, r5, #48	; 0x30
   1262c:	strbhi	r5, [r0, r8]
   12630:	add	fp, fp, #3
   12634:	and	r4, r4, #7
   12638:	add	r4, r4, #48	; 0x30
   1263c:	add	r5, r6, #1
   12640:	cmp	r1, r5
   12644:	bls	12660 <abort@plt+0x1910>
   12648:	mov	r6, r5
   1264c:	mov	r5, r3
   12650:	b	1258c <abort@plt+0x183c>
   12654:	str	lr, [sp, #44]	; 0x2c
   12658:	ldr	r8, [sp, #56]	; 0x38
   1265c:	b	11f30 <abort@plt+0x11e0>
   12660:	str	lr, [sp, #44]	; 0x2c
   12664:	ldr	r8, [sp, #56]	; 0x38
   12668:	mov	r5, r3
   1266c:	b	11f30 <abort@plt+0x11e0>
   12670:	mov	r6, r8
   12674:	b	1258c <abort@plt+0x183c>
   12678:	mov	r5, #0
   1267c:	b	1204c <abort@plt+0x12fc>
   12680:	mov	r8, r5
   12684:	ldr	r5, [sp, #48]	; 0x30
   12688:	mov	r4, #48	; 0x30
   1268c:	b	1204c <abort@plt+0x12fc>
   12690:	ldr	r8, [sp, #32]
   12694:	mov	r4, #48	; 0x30
   12698:	b	1204c <abort@plt+0x12fc>
   1269c:	ldr	r8, [sp, #32]
   126a0:	mov	r4, #48	; 0x30
   126a4:	b	1204c <abort@plt+0x12fc>
   126a8:	mov	r8, #0
   126ac:	mov	r5, r8
   126b0:	b	1204c <abort@plt+0x12fc>
   126b4:	mov	r8, #0
   126b8:	mov	r5, r8
   126bc:	b	1204c <abort@plt+0x12fc>
   126c0:	mov	r8, #0
   126c4:	mov	r5, r8
   126c8:	b	1204c <abort@plt+0x12fc>
   126cc:	mov	r8, #0
   126d0:	mov	r5, r8
   126d4:	b	1204c <abort@plt+0x12fc>
   126d8:	ldr	r3, [sp, #52]	; 0x34
   126dc:	ldrb	r8, [r3, r6]
   126e0:	adds	r8, r8, #0
   126e4:	movne	r8, #1
   126e8:	b	1215c <abort@plt+0x140c>
   126ec:	cmp	sl, #2
   126f0:	movne	r3, #0
   126f4:	moveq	r3, #1
   126f8:	ldr	r1, [sp, #32]
   126fc:	mov	r2, r1
   12700:	and	r2, r2, r3
   12704:	cmp	fp, #0
   12708:	movne	r2, #0
   1270c:	andeq	r2, r2, #1
   12710:	cmp	r2, #0
   12714:	bne	128c4 <abort@plt+0x1b74>
   12718:	eor	r2, r1, #1
   1271c:	and	r3, r3, r2
   12720:	ldr	r1, [sp, #80]	; 0x50
   12724:	tst	r1, r3
   12728:	beq	127a0 <abort@plt+0x1a50>
   1272c:	ldr	r3, [sp, #40]	; 0x28
   12730:	cmp	r3, #0
   12734:	bne	1275c <abort@plt+0x1a0c>
   12738:	ldr	r1, [sp, #76]	; 0x4c
   1273c:	clz	r3, r7
   12740:	lsr	r3, r3, #5
   12744:	cmp	r1, #0
   12748:	moveq	r3, #0
   1274c:	cmp	r3, #0
   12750:	beq	127a0 <abort@plt+0x1a50>
   12754:	ldr	r7, [sp, #76]	; 0x4c
   12758:	b	117f0 <abort@plt+0xaa0>
   1275c:	ldr	r3, [sp, #168]	; 0xa8
   12760:	str	r3, [sp, #16]
   12764:	ldr	r3, [sp, #164]	; 0xa4
   12768:	str	r3, [sp, #12]
   1276c:	ldr	r3, [sp, #160]	; 0xa0
   12770:	str	r3, [sp, #8]
   12774:	ldr	r3, [sp, #156]	; 0x9c
   12778:	str	r3, [sp, #4]
   1277c:	mov	r3, #5
   12780:	str	r3, [sp]
   12784:	ldr	r3, [sp, #28]
   12788:	ldr	r2, [sp, #52]	; 0x34
   1278c:	ldr	r1, [sp, #76]	; 0x4c
   12790:	ldr	r0, [sp, #36]	; 0x24
   12794:	bl	11790 <abort@plt+0xa40>
   12798:	mov	fp, r0
   1279c:	b	128a0 <abort@plt+0x1b50>
   127a0:	mov	sl, r7
   127a4:	ldr	r3, [sp, #72]	; 0x48
   127a8:	cmp	r3, #0
   127ac:	moveq	r2, #0
   127b0:	andne	r2, r2, #1
   127b4:	cmp	r2, #0
   127b8:	beq	127e8 <abort@plt+0x1a98>
   127bc:	mov	r2, r3
   127c0:	ldrb	r3, [r3]
   127c4:	cmp	r3, #0
   127c8:	beq	127e8 <abort@plt+0x1a98>
   127cc:	ldr	r1, [sp, #36]	; 0x24
   127d0:	cmp	sl, fp
   127d4:	strbhi	r3, [r1, fp]
   127d8:	add	fp, fp, #1
   127dc:	ldrb	r3, [r2, #1]!
   127e0:	cmp	r3, #0
   127e4:	bne	127d0 <abort@plt+0x1a80>
   127e8:	cmp	sl, fp
   127ec:	movhi	r3, #0
   127f0:	ldrhi	r2, [sp, #36]	; 0x24
   127f4:	strbhi	r3, [r2, fp]
   127f8:	b	128a0 <abort@plt+0x1b50>
   127fc:	mov	r8, sl
   12800:	mov	sl, r7
   12804:	ldr	r3, [sp, #32]
   12808:	str	r3, [sp, #48]	; 0x30
   1280c:	b	12848 <abort@plt+0x1af8>
   12810:	mov	r8, sl
   12814:	mov	sl, r7
   12818:	b	12848 <abort@plt+0x1af8>
   1281c:	mov	r8, sl
   12820:	mov	sl, r7
   12824:	b	12848 <abort@plt+0x1af8>
   12828:	andeq	r4, r1, r4, lsl #20
   1282c:	andeq	r4, r1, r4, lsl sl
   12830:	andeq	r4, r1, r8, lsl #20
   12834:	mov	r8, sl
   12838:	mov	sl, r7
   1283c:	b	12848 <abort@plt+0x1af8>
   12840:	mov	r8, sl
   12844:	mov	sl, r7
   12848:	ldr	r3, [sp, #48]	; 0x30
   1284c:	cmp	r8, #2
   12850:	movne	r3, #0
   12854:	andeq	r3, r3, #1
   12858:	cmp	r3, #0
   1285c:	movne	r8, #4
   12860:	ldr	r3, [sp, #168]	; 0xa8
   12864:	str	r3, [sp, #16]
   12868:	ldr	r3, [sp, #164]	; 0xa4
   1286c:	str	r3, [sp, #12]
   12870:	mov	r3, #0
   12874:	str	r3, [sp, #8]
   12878:	ldr	r3, [sp, #156]	; 0x9c
   1287c:	bic	r3, r3, #2
   12880:	str	r3, [sp, #4]
   12884:	str	r8, [sp]
   12888:	ldr	r3, [sp, #28]
   1288c:	ldr	r2, [sp, #52]	; 0x34
   12890:	mov	r1, sl
   12894:	ldr	r0, [sp, #36]	; 0x24
   12898:	bl	11790 <abort@plt+0xa40>
   1289c:	mov	fp, r0
   128a0:	mov	r0, fp
   128a4:	add	sp, sp, #116	; 0x74
   128a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128ac:	mov	r8, sl
   128b0:	mov	sl, r7
   128b4:	b	12848 <abort@plt+0x1af8>
   128b8:	mov	r8, sl
   128bc:	mov	sl, r7
   128c0:	b	12848 <abort@plt+0x1af8>
   128c4:	mov	r8, sl
   128c8:	mov	sl, r7
   128cc:	b	12848 <abort@plt+0x1af8>
   128d0:	mov	r8, sl
   128d4:	mov	sl, r7
   128d8:	b	12860 <abort@plt+0x1b10>
   128dc:	mov	r3, #1
   128e0:	str	r3, [sp, #32]
   128e4:	str	r3, [sp, #48]	; 0x30
   128e8:	str	r3, [sp, #60]	; 0x3c
   128ec:	ldr	r3, [pc, #-196]	; 12830 <abort@plt+0x1ae0>
   128f0:	str	r3, [sp, #72]	; 0x48
   128f4:	mov	fp, #0
   128f8:	mov	sl, #5
   128fc:	b	1184c <abort@plt+0xafc>
   12900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12904:	sub	sp, sp, #52	; 0x34
   12908:	mov	r5, r0
   1290c:	str	r1, [sp, #24]
   12910:	str	r2, [sp, #28]
   12914:	mov	r4, r3
   12918:	bl	10cb4 <__errno_location@plt>
   1291c:	str	r0, [sp, #32]
   12920:	ldr	r3, [r0]
   12924:	str	r3, [sp, #36]	; 0x24
   12928:	ldr	r3, [pc, #396]	; 12abc <abort@plt+0x1d6c>
   1292c:	ldr	r6, [r3]
   12930:	cmn	r5, #-2147483647	; 0x80000001
   12934:	movne	r3, #0
   12938:	moveq	r3, #1
   1293c:	orrs	r3, r3, r5, lsr #31
   12940:	bne	12a80 <abort@plt+0x1d30>
   12944:	ldr	r3, [pc, #368]	; 12abc <abort@plt+0x1d6c>
   12948:	ldr	r2, [r3, #4]
   1294c:	cmp	r5, r2
   12950:	blt	129b8 <abort@plt+0x1c68>
   12954:	str	r2, [sp, #44]	; 0x2c
   12958:	add	r3, r3, #8
   1295c:	cmp	r6, r3
   12960:	beq	12a84 <abort@plt+0x1d34>
   12964:	sub	r2, r5, r2
   12968:	mov	r3, #8
   1296c:	str	r3, [sp]
   12970:	mvn	r3, #-2147483648	; 0x80000000
   12974:	add	r2, r2, #1
   12978:	add	r1, sp, #44	; 0x2c
   1297c:	mov	r0, r6
   12980:	bl	13804 <abort@plt+0x2ab4>
   12984:	mov	r6, r0
   12988:	ldr	r3, [pc, #300]	; 12abc <abort@plt+0x1d6c>
   1298c:	str	r0, [r3]
   12990:	ldr	r7, [pc, #292]	; 12abc <abort@plt+0x1d6c>
   12994:	ldr	r0, [r7, #4]
   12998:	ldr	r2, [sp, #44]	; 0x2c
   1299c:	sub	r2, r2, r0
   129a0:	lsl	r2, r2, #3
   129a4:	mov	r1, #0
   129a8:	add	r0, r6, r0, lsl #3
   129ac:	bl	10ccc <memset@plt>
   129b0:	ldr	r3, [sp, #44]	; 0x2c
   129b4:	str	r3, [r7, #4]
   129b8:	add	fp, r6, r5, lsl #3
   129bc:	ldr	r8, [r6, r5, lsl #3]
   129c0:	ldr	r7, [fp, #4]
   129c4:	ldr	r9, [r4, #4]
   129c8:	orr	r9, r9, #1
   129cc:	add	sl, r4, #8
   129d0:	ldr	r3, [r4, #44]	; 0x2c
   129d4:	str	r3, [sp, #16]
   129d8:	ldr	r3, [r4, #40]	; 0x28
   129dc:	str	r3, [sp, #12]
   129e0:	str	sl, [sp, #8]
   129e4:	str	r9, [sp, #4]
   129e8:	ldr	r3, [r4]
   129ec:	str	r3, [sp]
   129f0:	ldr	r3, [sp, #28]
   129f4:	ldr	r2, [sp, #24]
   129f8:	mov	r1, r8
   129fc:	mov	r0, r7
   12a00:	bl	11790 <abort@plt+0xa40>
   12a04:	cmp	r8, r0
   12a08:	bhi	12a68 <abort@plt+0x1d18>
   12a0c:	add	r8, r0, #1
   12a10:	str	r8, [r6, r5, lsl #3]
   12a14:	ldr	r3, [pc, #164]	; 12ac0 <abort@plt+0x1d70>
   12a18:	cmp	r7, r3
   12a1c:	beq	12a28 <abort@plt+0x1cd8>
   12a20:	mov	r0, r7
   12a24:	bl	13e90 <abort@plt+0x3140>
   12a28:	mov	r0, r8
   12a2c:	bl	13680 <abort@plt+0x2930>
   12a30:	mov	r7, r0
   12a34:	str	r0, [fp, #4]
   12a38:	ldr	r3, [r4, #44]	; 0x2c
   12a3c:	str	r3, [sp, #16]
   12a40:	ldr	r3, [r4, #40]	; 0x28
   12a44:	str	r3, [sp, #12]
   12a48:	str	sl, [sp, #8]
   12a4c:	str	r9, [sp, #4]
   12a50:	ldr	r3, [r4]
   12a54:	str	r3, [sp]
   12a58:	ldr	r3, [sp, #28]
   12a5c:	ldr	r2, [sp, #24]
   12a60:	mov	r1, r8
   12a64:	bl	11790 <abort@plt+0xa40>
   12a68:	ldr	r3, [sp, #32]
   12a6c:	ldr	r2, [sp, #36]	; 0x24
   12a70:	str	r2, [r3]
   12a74:	mov	r0, r7
   12a78:	add	sp, sp, #52	; 0x34
   12a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a80:	bl	10d50 <abort@plt>
   12a84:	sub	r2, r5, r2
   12a88:	mov	r3, #8
   12a8c:	str	r3, [sp]
   12a90:	mvn	r3, #-2147483648	; 0x80000000
   12a94:	add	r2, r2, #1
   12a98:	add	r1, sp, #44	; 0x2c
   12a9c:	mov	r0, #0
   12aa0:	bl	13804 <abort@plt+0x2ab4>
   12aa4:	mov	r6, r0
   12aa8:	ldr	r3, [pc, #12]	; 12abc <abort@plt+0x1d6c>
   12aac:	str	r0, [r3], #8
   12ab0:	ldm	r3, {r0, r1}
   12ab4:	stm	r6, {r0, r1}
   12ab8:	b	12990 <abort@plt+0x1c40>
   12abc:	ldrdeq	r5, [r2], -r4
   12ac0:	andeq	r5, r2, r4, asr #2
   12ac4:	push	{r4, r5, r6, lr}
   12ac8:	mov	r4, r0
   12acc:	bl	10cb4 <__errno_location@plt>
   12ad0:	mov	r5, r0
   12ad4:	ldr	r6, [r0]
   12ad8:	cmp	r4, #0
   12adc:	ldr	r3, [pc, #20]	; 12af8 <abort@plt+0x1da8>
   12ae0:	moveq	r4, r3
   12ae4:	mov	r1, #48	; 0x30
   12ae8:	mov	r0, r4
   12aec:	bl	13b6c <abort@plt+0x2e1c>
   12af0:	str	r6, [r5]
   12af4:	pop	{r4, r5, r6, pc}
   12af8:	andeq	r5, r2, r4, asr #4
   12afc:	subs	r3, r0, #0
   12b00:	ldr	r2, [pc, #8]	; 12b10 <abort@plt+0x1dc0>
   12b04:	moveq	r3, r2
   12b08:	ldr	r0, [r3]
   12b0c:	bx	lr
   12b10:	andeq	r5, r2, r4, asr #4
   12b14:	subs	r3, r0, #0
   12b18:	ldr	r2, [pc, #8]	; 12b28 <abort@plt+0x1dd8>
   12b1c:	moveq	r3, r2
   12b20:	str	r1, [r3]
   12b24:	bx	lr
   12b28:	andeq	r5, r2, r4, asr #4
   12b2c:	push	{lr}		; (str lr, [sp, #-4]!)
   12b30:	subs	r3, r0, #0
   12b34:	ldr	r0, [pc, #44]	; 12b68 <abort@plt+0x1e18>
   12b38:	moveq	r3, r0
   12b3c:	add	r3, r3, #8
   12b40:	lsr	lr, r1, #5
   12b44:	and	r1, r1, #31
   12b48:	ldr	ip, [r3, lr, lsl #2]
   12b4c:	lsr	r0, ip, r1
   12b50:	eor	r2, r2, r0
   12b54:	and	r2, r2, #1
   12b58:	eor	r1, ip, r2, lsl r1
   12b5c:	str	r1, [r3, lr, lsl #2]
   12b60:	and	r0, r0, #1
   12b64:	pop	{pc}		; (ldr pc, [sp], #4)
   12b68:	andeq	r5, r2, r4, asr #4
   12b6c:	subs	r3, r0, #0
   12b70:	ldr	r2, [pc, #12]	; 12b84 <abort@plt+0x1e34>
   12b74:	moveq	r3, r2
   12b78:	ldr	r0, [r3, #4]
   12b7c:	str	r1, [r3, #4]
   12b80:	bx	lr
   12b84:	andeq	r5, r2, r4, asr #4
   12b88:	subs	r3, r0, #0
   12b8c:	ldr	r0, [pc, #40]	; 12bbc <abort@plt+0x1e6c>
   12b90:	moveq	r3, r0
   12b94:	mov	r0, #10
   12b98:	str	r0, [r3]
   12b9c:	cmp	r2, #0
   12ba0:	cmpne	r1, #0
   12ba4:	beq	12bb4 <abort@plt+0x1e64>
   12ba8:	str	r1, [r3, #40]	; 0x28
   12bac:	str	r2, [r3, #44]	; 0x2c
   12bb0:	bx	lr
   12bb4:	push	{r4, lr}
   12bb8:	bl	10d50 <abort@plt>
   12bbc:	andeq	r5, r2, r4, asr #4
   12bc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bc4:	sub	sp, sp, #24
   12bc8:	mov	r7, r0
   12bcc:	mov	r8, r1
   12bd0:	mov	r9, r2
   12bd4:	mov	sl, r3
   12bd8:	ldr	r4, [sp, #56]	; 0x38
   12bdc:	cmp	r4, #0
   12be0:	ldr	r3, [pc, #84]	; 12c3c <abort@plt+0x1eec>
   12be4:	moveq	r4, r3
   12be8:	bl	10cb4 <__errno_location@plt>
   12bec:	mov	r5, r0
   12bf0:	ldr	r6, [r0]
   12bf4:	ldr	r3, [r4, #44]	; 0x2c
   12bf8:	str	r3, [sp, #16]
   12bfc:	ldr	r3, [r4, #40]	; 0x28
   12c00:	str	r3, [sp, #12]
   12c04:	add	r3, r4, #8
   12c08:	str	r3, [sp, #8]
   12c0c:	ldr	r3, [r4, #4]
   12c10:	str	r3, [sp, #4]
   12c14:	ldr	r3, [r4]
   12c18:	str	r3, [sp]
   12c1c:	mov	r3, sl
   12c20:	mov	r2, r9
   12c24:	mov	r1, r8
   12c28:	mov	r0, r7
   12c2c:	bl	11790 <abort@plt+0xa40>
   12c30:	str	r6, [r5]
   12c34:	add	sp, sp, #24
   12c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c3c:	andeq	r5, r2, r4, asr #4
   12c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c44:	sub	sp, sp, #44	; 0x2c
   12c48:	str	r0, [sp, #28]
   12c4c:	str	r1, [sp, #32]
   12c50:	mov	r6, r2
   12c54:	subs	r4, r3, #0
   12c58:	ldr	r3, [pc, #172]	; 12d0c <abort@plt+0x1fbc>
   12c5c:	moveq	r4, r3
   12c60:	bl	10cb4 <__errno_location@plt>
   12c64:	mov	r7, r0
   12c68:	ldr	fp, [r0]
   12c6c:	ldr	r5, [r4, #4]
   12c70:	cmp	r6, #0
   12c74:	orreq	r5, r5, #1
   12c78:	add	r9, r4, #8
   12c7c:	ldr	r3, [r4, #44]	; 0x2c
   12c80:	str	r3, [sp, #16]
   12c84:	ldr	r3, [r4, #40]	; 0x28
   12c88:	str	r3, [sp, #12]
   12c8c:	str	r9, [sp, #8]
   12c90:	str	r5, [sp, #4]
   12c94:	ldr	r3, [r4]
   12c98:	str	r3, [sp]
   12c9c:	ldr	r3, [sp, #32]
   12ca0:	ldr	r2, [sp, #28]
   12ca4:	mov	r1, #0
   12ca8:	mov	r0, r1
   12cac:	bl	11790 <abort@plt+0xa40>
   12cb0:	mov	sl, r0
   12cb4:	add	r8, r0, #1
   12cb8:	mov	r0, r8
   12cbc:	bl	13680 <abort@plt+0x2930>
   12cc0:	str	r0, [sp, #36]	; 0x24
   12cc4:	ldr	r3, [r4, #44]	; 0x2c
   12cc8:	str	r3, [sp, #16]
   12ccc:	ldr	r3, [r4, #40]	; 0x28
   12cd0:	str	r3, [sp, #12]
   12cd4:	str	r9, [sp, #8]
   12cd8:	str	r5, [sp, #4]
   12cdc:	ldr	r3, [r4]
   12ce0:	str	r3, [sp]
   12ce4:	ldr	r3, [sp, #32]
   12ce8:	ldr	r2, [sp, #28]
   12cec:	mov	r1, r8
   12cf0:	bl	11790 <abort@plt+0xa40>
   12cf4:	str	fp, [r7]
   12cf8:	cmp	r6, #0
   12cfc:	strne	sl, [r6]
   12d00:	ldr	r0, [sp, #36]	; 0x24
   12d04:	add	sp, sp, #44	; 0x2c
   12d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d0c:	andeq	r5, r2, r4, asr #4
   12d10:	push	{r4, lr}
   12d14:	mov	r3, r2
   12d18:	mov	r2, #0
   12d1c:	bl	12c40 <abort@plt+0x1ef0>
   12d20:	pop	{r4, pc}
   12d24:	push	{r4, r5, r6, r7, r8, lr}
   12d28:	ldr	r3, [pc, #140]	; 12dbc <abort@plt+0x206c>
   12d2c:	ldr	r7, [r3]
   12d30:	ldr	r3, [r3, #4]
   12d34:	cmp	r3, #1
   12d38:	ble	12d64 <abort@plt+0x2014>
   12d3c:	mov	r5, r7
   12d40:	mov	r4, #1
   12d44:	ldr	r6, [pc, #112]	; 12dbc <abort@plt+0x206c>
   12d48:	ldr	r0, [r5, #12]
   12d4c:	bl	13e90 <abort@plt+0x3140>
   12d50:	add	r4, r4, #1
   12d54:	add	r5, r5, #8
   12d58:	ldr	r3, [r6, #4]
   12d5c:	cmp	r3, r4
   12d60:	bgt	12d48 <abort@plt+0x1ff8>
   12d64:	ldr	r0, [r7, #4]
   12d68:	ldr	r3, [pc, #80]	; 12dc0 <abort@plt+0x2070>
   12d6c:	cmp	r0, r3
   12d70:	beq	12d8c <abort@plt+0x203c>
   12d74:	bl	13e90 <abort@plt+0x3140>
   12d78:	ldr	r3, [pc, #60]	; 12dbc <abort@plt+0x206c>
   12d7c:	mov	r2, #256	; 0x100
   12d80:	str	r2, [r3, #8]
   12d84:	ldr	r2, [pc, #52]	; 12dc0 <abort@plt+0x2070>
   12d88:	str	r2, [r3, #12]
   12d8c:	ldr	r3, [pc, #48]	; 12dc4 <abort@plt+0x2074>
   12d90:	cmp	r7, r3
   12d94:	beq	12dac <abort@plt+0x205c>
   12d98:	mov	r0, r7
   12d9c:	bl	13e90 <abort@plt+0x3140>
   12da0:	ldr	r3, [pc, #20]	; 12dbc <abort@plt+0x206c>
   12da4:	add	r2, r3, #8
   12da8:	str	r2, [r3]
   12dac:	mov	r2, #1
   12db0:	ldr	r3, [pc, #4]	; 12dbc <abort@plt+0x206c>
   12db4:	str	r2, [r3, #4]
   12db8:	pop	{r4, r5, r6, r7, r8, pc}
   12dbc:	ldrdeq	r5, [r2], -r4
   12dc0:	andeq	r5, r2, r4, asr #2
   12dc4:	ldrdeq	r5, [r2], -ip
   12dc8:	push	{r4, lr}
   12dcc:	ldr	r3, [pc, #8]	; 12ddc <abort@plt+0x208c>
   12dd0:	mvn	r2, #0
   12dd4:	bl	12900 <abort@plt+0x1bb0>
   12dd8:	pop	{r4, pc}
   12ddc:	andeq	r5, r2, r4, asr #4
   12de0:	push	{r4, lr}
   12de4:	ldr	r3, [pc, #4]	; 12df0 <abort@plt+0x20a0>
   12de8:	bl	12900 <abort@plt+0x1bb0>
   12dec:	pop	{r4, pc}
   12df0:	andeq	r5, r2, r4, asr #4
   12df4:	push	{r4, lr}
   12df8:	mov	r1, r0
   12dfc:	mov	r0, #0
   12e00:	bl	12dc8 <abort@plt+0x2078>
   12e04:	pop	{r4, pc}
   12e08:	push	{r4, lr}
   12e0c:	mov	r2, r1
   12e10:	mov	r1, r0
   12e14:	mov	r0, #0
   12e18:	bl	12de0 <abort@plt+0x2090>
   12e1c:	pop	{r4, pc}
   12e20:	push	{r4, r5, lr}
   12e24:	sub	sp, sp, #52	; 0x34
   12e28:	mov	r4, r0
   12e2c:	mov	r5, r2
   12e30:	mov	r0, sp
   12e34:	bl	11628 <abort@plt+0x8d8>
   12e38:	mov	r3, sp
   12e3c:	mvn	r2, #0
   12e40:	mov	r1, r5
   12e44:	mov	r0, r4
   12e48:	bl	12900 <abort@plt+0x1bb0>
   12e4c:	add	sp, sp, #52	; 0x34
   12e50:	pop	{r4, r5, pc}
   12e54:	push	{r4, r5, r6, lr}
   12e58:	sub	sp, sp, #48	; 0x30
   12e5c:	mov	r4, r0
   12e60:	mov	r5, r2
   12e64:	mov	r6, r3
   12e68:	mov	r0, sp
   12e6c:	bl	11628 <abort@plt+0x8d8>
   12e70:	mov	r3, sp
   12e74:	mov	r2, r6
   12e78:	mov	r1, r5
   12e7c:	mov	r0, r4
   12e80:	bl	12900 <abort@plt+0x1bb0>
   12e84:	add	sp, sp, #48	; 0x30
   12e88:	pop	{r4, r5, r6, pc}
   12e8c:	push	{r4, lr}
   12e90:	mov	r2, r1
   12e94:	mov	r1, r0
   12e98:	mov	r0, #0
   12e9c:	bl	12e20 <abort@plt+0x20d0>
   12ea0:	pop	{r4, pc}
   12ea4:	push	{r4, lr}
   12ea8:	mov	r3, r2
   12eac:	mov	r2, r1
   12eb0:	mov	r1, r0
   12eb4:	mov	r0, #0
   12eb8:	bl	12e54 <abort@plt+0x2104>
   12ebc:	pop	{r4, pc}
   12ec0:	push	{r4, r5, r6, lr}
   12ec4:	sub	sp, sp, #48	; 0x30
   12ec8:	mov	r4, r0
   12ecc:	mov	r5, r1
   12ed0:	mov	r6, r2
   12ed4:	mov	ip, sp
   12ed8:	ldr	lr, [pc, #64]	; 12f20 <abort@plt+0x21d0>
   12edc:	ldm	lr!, {r0, r1, r2, r3}
   12ee0:	stmia	ip!, {r0, r1, r2, r3}
   12ee4:	ldm	lr!, {r0, r1, r2, r3}
   12ee8:	stmia	ip!, {r0, r1, r2, r3}
   12eec:	ldm	lr, {r0, r1, r2, r3}
   12ef0:	stm	ip, {r0, r1, r2, r3}
   12ef4:	mov	r2, #1
   12ef8:	mov	r1, r6
   12efc:	mov	r0, sp
   12f00:	bl	12b2c <abort@plt+0x1ddc>
   12f04:	mov	r3, sp
   12f08:	mov	r2, r5
   12f0c:	mov	r1, r4
   12f10:	mov	r0, #0
   12f14:	bl	12900 <abort@plt+0x1bb0>
   12f18:	add	sp, sp, #48	; 0x30
   12f1c:	pop	{r4, r5, r6, pc}
   12f20:	andeq	r5, r2, r4, asr #4
   12f24:	push	{r4, lr}
   12f28:	mov	r2, r1
   12f2c:	mvn	r1, #0
   12f30:	bl	12ec0 <abort@plt+0x2170>
   12f34:	pop	{r4, pc}
   12f38:	push	{r4, lr}
   12f3c:	mov	r1, #58	; 0x3a
   12f40:	bl	12f24 <abort@plt+0x21d4>
   12f44:	pop	{r4, pc}
   12f48:	push	{r4, lr}
   12f4c:	mov	r2, #58	; 0x3a
   12f50:	bl	12ec0 <abort@plt+0x2170>
   12f54:	pop	{r4, pc}
   12f58:	push	{r4, r5, lr}
   12f5c:	sub	sp, sp, #100	; 0x64
   12f60:	mov	r4, r0
   12f64:	mov	r5, r2
   12f68:	mov	r0, sp
   12f6c:	bl	11628 <abort@plt+0x8d8>
   12f70:	add	lr, sp, #48	; 0x30
   12f74:	mov	ip, sp
   12f78:	ldm	ip!, {r0, r1, r2, r3}
   12f7c:	stmia	lr!, {r0, r1, r2, r3}
   12f80:	ldm	ip!, {r0, r1, r2, r3}
   12f84:	stmia	lr!, {r0, r1, r2, r3}
   12f88:	ldm	ip, {r0, r1, r2, r3}
   12f8c:	stm	lr, {r0, r1, r2, r3}
   12f90:	mov	r2, #1
   12f94:	mov	r1, #58	; 0x3a
   12f98:	add	r0, sp, #48	; 0x30
   12f9c:	bl	12b2c <abort@plt+0x1ddc>
   12fa0:	add	r3, sp, #48	; 0x30
   12fa4:	mvn	r2, #0
   12fa8:	mov	r1, r5
   12fac:	mov	r0, r4
   12fb0:	bl	12900 <abort@plt+0x1bb0>
   12fb4:	add	sp, sp, #100	; 0x64
   12fb8:	pop	{r4, r5, pc}
   12fbc:	push	{r4, r5, r6, r7, lr}
   12fc0:	sub	sp, sp, #52	; 0x34
   12fc4:	mov	r4, r0
   12fc8:	mov	r6, r1
   12fcc:	mov	r7, r2
   12fd0:	mov	r5, r3
   12fd4:	mov	ip, sp
   12fd8:	ldr	lr, [pc, #64]	; 13020 <abort@plt+0x22d0>
   12fdc:	ldm	lr!, {r0, r1, r2, r3}
   12fe0:	stmia	ip!, {r0, r1, r2, r3}
   12fe4:	ldm	lr!, {r0, r1, r2, r3}
   12fe8:	stmia	ip!, {r0, r1, r2, r3}
   12fec:	ldm	lr, {r0, r1, r2, r3}
   12ff0:	stm	ip, {r0, r1, r2, r3}
   12ff4:	mov	r2, r7
   12ff8:	mov	r1, r6
   12ffc:	mov	r0, sp
   13000:	bl	12b88 <abort@plt+0x1e38>
   13004:	mov	r3, sp
   13008:	ldr	r2, [sp, #72]	; 0x48
   1300c:	mov	r1, r5
   13010:	mov	r0, r4
   13014:	bl	12900 <abort@plt+0x1bb0>
   13018:	add	sp, sp, #52	; 0x34
   1301c:	pop	{r4, r5, r6, r7, pc}
   13020:	andeq	r5, r2, r4, asr #4
   13024:	push	{lr}		; (str lr, [sp, #-4]!)
   13028:	sub	sp, sp, #12
   1302c:	mvn	ip, #0
   13030:	str	ip, [sp]
   13034:	bl	12fbc <abort@plt+0x226c>
   13038:	add	sp, sp, #12
   1303c:	pop	{pc}		; (ldr pc, [sp], #4)
   13040:	push	{r4, lr}
   13044:	mov	r3, r2
   13048:	mov	r2, r1
   1304c:	mov	r1, r0
   13050:	mov	r0, #0
   13054:	bl	13024 <abort@plt+0x22d4>
   13058:	pop	{r4, pc}
   1305c:	push	{lr}		; (str lr, [sp, #-4]!)
   13060:	sub	sp, sp, #12
   13064:	str	r3, [sp]
   13068:	mov	r3, r2
   1306c:	mov	r2, r1
   13070:	mov	r1, r0
   13074:	mov	r0, #0
   13078:	bl	12fbc <abort@plt+0x226c>
   1307c:	add	sp, sp, #12
   13080:	pop	{pc}		; (ldr pc, [sp], #4)
   13084:	push	{r4, lr}
   13088:	ldr	r3, [pc, #4]	; 13094 <abort@plt+0x2344>
   1308c:	bl	12900 <abort@plt+0x1bb0>
   13090:	pop	{r4, pc}
   13094:	andeq	r5, r2, r4, ror #1
   13098:	push	{r4, lr}
   1309c:	mov	r2, r1
   130a0:	mov	r1, r0
   130a4:	mov	r0, #0
   130a8:	bl	13084 <abort@plt+0x2334>
   130ac:	pop	{r4, pc}
   130b0:	push	{r4, lr}
   130b4:	mvn	r2, #0
   130b8:	bl	13084 <abort@plt+0x2334>
   130bc:	pop	{r4, pc}
   130c0:	push	{r4, lr}
   130c4:	mov	r1, r0
   130c8:	mov	r0, #0
   130cc:	bl	130b0 <abort@plt+0x2360>
   130d0:	pop	{r4, pc}
   130d4:	push	{r4, r5, r6, lr}
   130d8:	sub	sp, sp, #32
   130dc:	mov	r4, r0
   130e0:	ldr	r5, [sp, #48]	; 0x30
   130e4:	ldr	r6, [sp, #52]	; 0x34
   130e8:	cmp	r1, #0
   130ec:	beq	131a4 <abort@plt+0x2454>
   130f0:	str	r3, [sp, #4]
   130f4:	str	r2, [sp]
   130f8:	mov	r3, r1
   130fc:	ldr	r2, [pc, #940]	; 134b0 <abort@plt+0x2760>
   13100:	mov	r1, #1
   13104:	bl	10cf0 <__fprintf_chk@plt>
   13108:	mov	r2, #5
   1310c:	ldr	r1, [pc, #928]	; 134b4 <abort@plt+0x2764>
   13110:	mov	r0, #0
   13114:	bl	10bd0 <dcgettext@plt>
   13118:	ldr	r3, [pc, #920]	; 134b8 <abort@plt+0x2768>
   1311c:	str	r3, [sp]
   13120:	mov	r3, r0
   13124:	ldr	r2, [pc, #912]	; 134bc <abort@plt+0x276c>
   13128:	mov	r1, #1
   1312c:	mov	r0, r4
   13130:	bl	10cf0 <__fprintf_chk@plt>
   13134:	mov	r1, r4
   13138:	mov	r0, #10
   1313c:	bl	10bc4 <fputc_unlocked@plt>
   13140:	mov	r2, #5
   13144:	ldr	r1, [pc, #884]	; 134c0 <abort@plt+0x2770>
   13148:	mov	r0, #0
   1314c:	bl	10bd0 <dcgettext@plt>
   13150:	ldr	r3, [pc, #876]	; 134c4 <abort@plt+0x2774>
   13154:	mov	r2, r0
   13158:	mov	r1, #1
   1315c:	mov	r0, r4
   13160:	bl	10cf0 <__fprintf_chk@plt>
   13164:	mov	r1, r4
   13168:	mov	r0, #10
   1316c:	bl	10bc4 <fputc_unlocked@plt>
   13170:	cmp	r6, #9
   13174:	ldrls	pc, [pc, r6, lsl #2]
   13178:	b	13448 <abort@plt+0x26f8>
   1317c:	andeq	r3, r1, r0, ror #3
   13180:			; <UNDEFINED> instruction: 0x000131bc
   13184:	andeq	r3, r1, r8, ror #3
   13188:	andeq	r3, r1, r8, lsl r2
   1318c:	andeq	r3, r1, r0, asr r2
   13190:	muleq	r1, r0, r2
   13194:	ldrdeq	r3, [r1], -r8
   13198:	andeq	r3, r1, r8, lsr #6
   1319c:	andeq	r3, r1, r0, lsl #7
   131a0:	andeq	r3, r1, r0, ror #7
   131a4:	str	r3, [sp]
   131a8:	mov	r3, r2
   131ac:	ldr	r2, [pc, #788]	; 134c8 <abort@plt+0x2778>
   131b0:	mov	r1, #1
   131b4:	bl	10cf0 <__fprintf_chk@plt>
   131b8:	b	13108 <abort@plt+0x23b8>
   131bc:	mov	r2, #5
   131c0:	ldr	r1, [pc, #772]	; 134cc <abort@plt+0x277c>
   131c4:	mov	r0, #0
   131c8:	bl	10bd0 <dcgettext@plt>
   131cc:	ldr	r3, [r5]
   131d0:	mov	r2, r0
   131d4:	mov	r1, #1
   131d8:	mov	r0, r4
   131dc:	bl	10cf0 <__fprintf_chk@plt>
   131e0:	add	sp, sp, #32
   131e4:	pop	{r4, r5, r6, pc}
   131e8:	mov	r2, #5
   131ec:	ldr	r1, [pc, #732]	; 134d0 <abort@plt+0x2780>
   131f0:	mov	r0, #0
   131f4:	bl	10bd0 <dcgettext@plt>
   131f8:	ldr	r3, [r5]
   131fc:	ldr	r2, [r5, #4]
   13200:	str	r2, [sp]
   13204:	mov	r2, r0
   13208:	mov	r1, #1
   1320c:	mov	r0, r4
   13210:	bl	10cf0 <__fprintf_chk@plt>
   13214:	b	131e0 <abort@plt+0x2490>
   13218:	mov	r2, #5
   1321c:	ldr	r1, [pc, #688]	; 134d4 <abort@plt+0x2784>
   13220:	mov	r0, #0
   13224:	bl	10bd0 <dcgettext@plt>
   13228:	ldr	r3, [r5]
   1322c:	ldr	r2, [r5, #8]
   13230:	str	r2, [sp, #4]
   13234:	ldr	r2, [r5, #4]
   13238:	str	r2, [sp]
   1323c:	mov	r2, r0
   13240:	mov	r1, #1
   13244:	mov	r0, r4
   13248:	bl	10cf0 <__fprintf_chk@plt>
   1324c:	b	131e0 <abort@plt+0x2490>
   13250:	mov	r2, #5
   13254:	ldr	r1, [pc, #636]	; 134d8 <abort@plt+0x2788>
   13258:	mov	r0, #0
   1325c:	bl	10bd0 <dcgettext@plt>
   13260:	ldr	r3, [r5]
   13264:	ldr	r2, [r5, #12]
   13268:	str	r2, [sp, #8]
   1326c:	ldr	r2, [r5, #8]
   13270:	str	r2, [sp, #4]
   13274:	ldr	r2, [r5, #4]
   13278:	str	r2, [sp]
   1327c:	mov	r2, r0
   13280:	mov	r1, #1
   13284:	mov	r0, r4
   13288:	bl	10cf0 <__fprintf_chk@plt>
   1328c:	b	131e0 <abort@plt+0x2490>
   13290:	mov	r2, #5
   13294:	ldr	r1, [pc, #576]	; 134dc <abort@plt+0x278c>
   13298:	mov	r0, #0
   1329c:	bl	10bd0 <dcgettext@plt>
   132a0:	ldr	r3, [r5]
   132a4:	ldr	r2, [r5, #16]
   132a8:	str	r2, [sp, #12]
   132ac:	ldr	r2, [r5, #12]
   132b0:	str	r2, [sp, #8]
   132b4:	ldr	r2, [r5, #8]
   132b8:	str	r2, [sp, #4]
   132bc:	ldr	r2, [r5, #4]
   132c0:	str	r2, [sp]
   132c4:	mov	r2, r0
   132c8:	mov	r1, #1
   132cc:	mov	r0, r4
   132d0:	bl	10cf0 <__fprintf_chk@plt>
   132d4:	b	131e0 <abort@plt+0x2490>
   132d8:	mov	r2, #5
   132dc:	ldr	r1, [pc, #508]	; 134e0 <abort@plt+0x2790>
   132e0:	mov	r0, #0
   132e4:	bl	10bd0 <dcgettext@plt>
   132e8:	ldr	r3, [r5]
   132ec:	ldr	r2, [r5, #20]
   132f0:	str	r2, [sp, #16]
   132f4:	ldr	r2, [r5, #16]
   132f8:	str	r2, [sp, #12]
   132fc:	ldr	r2, [r5, #12]
   13300:	str	r2, [sp, #8]
   13304:	ldr	r2, [r5, #8]
   13308:	str	r2, [sp, #4]
   1330c:	ldr	r2, [r5, #4]
   13310:	str	r2, [sp]
   13314:	mov	r2, r0
   13318:	mov	r1, #1
   1331c:	mov	r0, r4
   13320:	bl	10cf0 <__fprintf_chk@plt>
   13324:	b	131e0 <abort@plt+0x2490>
   13328:	mov	r2, #5
   1332c:	ldr	r1, [pc, #432]	; 134e4 <abort@plt+0x2794>
   13330:	mov	r0, #0
   13334:	bl	10bd0 <dcgettext@plt>
   13338:	ldr	r3, [r5]
   1333c:	ldr	r2, [r5, #24]
   13340:	str	r2, [sp, #20]
   13344:	ldr	r2, [r5, #20]
   13348:	str	r2, [sp, #16]
   1334c:	ldr	r2, [r5, #16]
   13350:	str	r2, [sp, #12]
   13354:	ldr	r2, [r5, #12]
   13358:	str	r2, [sp, #8]
   1335c:	ldr	r2, [r5, #8]
   13360:	str	r2, [sp, #4]
   13364:	ldr	r2, [r5, #4]
   13368:	str	r2, [sp]
   1336c:	mov	r2, r0
   13370:	mov	r1, #1
   13374:	mov	r0, r4
   13378:	bl	10cf0 <__fprintf_chk@plt>
   1337c:	b	131e0 <abort@plt+0x2490>
   13380:	mov	r2, #5
   13384:	ldr	r1, [pc, #348]	; 134e8 <abort@plt+0x2798>
   13388:	mov	r0, #0
   1338c:	bl	10bd0 <dcgettext@plt>
   13390:	ldr	r3, [r5]
   13394:	ldr	r2, [r5, #28]
   13398:	str	r2, [sp, #24]
   1339c:	ldr	r2, [r5, #24]
   133a0:	str	r2, [sp, #20]
   133a4:	ldr	r2, [r5, #20]
   133a8:	str	r2, [sp, #16]
   133ac:	ldr	r2, [r5, #16]
   133b0:	str	r2, [sp, #12]
   133b4:	ldr	r2, [r5, #12]
   133b8:	str	r2, [sp, #8]
   133bc:	ldr	r2, [r5, #8]
   133c0:	str	r2, [sp, #4]
   133c4:	ldr	r2, [r5, #4]
   133c8:	str	r2, [sp]
   133cc:	mov	r2, r0
   133d0:	mov	r1, #1
   133d4:	mov	r0, r4
   133d8:	bl	10cf0 <__fprintf_chk@plt>
   133dc:	b	131e0 <abort@plt+0x2490>
   133e0:	mov	r2, #5
   133e4:	ldr	r1, [pc, #256]	; 134ec <abort@plt+0x279c>
   133e8:	mov	r0, #0
   133ec:	bl	10bd0 <dcgettext@plt>
   133f0:	ldr	r3, [r5]
   133f4:	ldr	r2, [r5, #32]
   133f8:	str	r2, [sp, #28]
   133fc:	ldr	r2, [r5, #28]
   13400:	str	r2, [sp, #24]
   13404:	ldr	r2, [r5, #24]
   13408:	str	r2, [sp, #20]
   1340c:	ldr	r2, [r5, #20]
   13410:	str	r2, [sp, #16]
   13414:	ldr	r2, [r5, #16]
   13418:	str	r2, [sp, #12]
   1341c:	ldr	r2, [r5, #12]
   13420:	str	r2, [sp, #8]
   13424:	ldr	r2, [r5, #8]
   13428:	str	r2, [sp, #4]
   1342c:	ldr	r2, [r5, #4]
   13430:	str	r2, [sp]
   13434:	mov	r2, r0
   13438:	mov	r1, #1
   1343c:	mov	r0, r4
   13440:	bl	10cf0 <__fprintf_chk@plt>
   13444:	b	131e0 <abort@plt+0x2490>
   13448:	mov	r2, #5
   1344c:	ldr	r1, [pc, #156]	; 134f0 <abort@plt+0x27a0>
   13450:	mov	r0, #0
   13454:	bl	10bd0 <dcgettext@plt>
   13458:	ldr	r3, [r5]
   1345c:	ldr	r2, [r5, #32]
   13460:	str	r2, [sp, #28]
   13464:	ldr	r2, [r5, #28]
   13468:	str	r2, [sp, #24]
   1346c:	ldr	r2, [r5, #24]
   13470:	str	r2, [sp, #20]
   13474:	ldr	r2, [r5, #20]
   13478:	str	r2, [sp, #16]
   1347c:	ldr	r2, [r5, #16]
   13480:	str	r2, [sp, #12]
   13484:	ldr	r2, [r5, #12]
   13488:	str	r2, [sp, #8]
   1348c:	ldr	r2, [r5, #8]
   13490:	str	r2, [sp, #4]
   13494:	ldr	r2, [r5, #4]
   13498:	str	r2, [sp]
   1349c:	mov	r2, r0
   134a0:	mov	r1, #1
   134a4:	mov	r0, r4
   134a8:	bl	10cf0 <__fprintf_chk@plt>
   134ac:	b	131e0 <abort@plt+0x2490>
   134b0:	andeq	r4, r1, r0, lsl #21
   134b4:	muleq	r1, r4, sl
   134b8:	andeq	r0, r0, r6, ror #15
   134bc:	andeq	r4, r1, ip, ror #26
   134c0:	muleq	r1, r8, sl
   134c4:	andeq	r4, r1, r4, asr #22
   134c8:	andeq	r4, r1, ip, lsl #21
   134cc:	andeq	r4, r1, r8, ror #22
   134d0:	andeq	r4, r1, r8, ror fp
   134d4:	muleq	r1, r0, fp
   134d8:	andeq	r4, r1, ip, lsr #23
   134dc:	andeq	r4, r1, ip, asr #23
   134e0:	strdeq	r4, [r1], -r0
   134e4:	andeq	r4, r1, r8, lsl ip
   134e8:	andeq	r4, r1, r4, asr #24
   134ec:	andeq	r4, r1, r4, ror ip
   134f0:	andeq	r4, r1, r8, lsr #25
   134f4:	push	{r4, r5, lr}
   134f8:	sub	sp, sp, #12
   134fc:	ldr	r5, [sp, #24]
   13500:	ldr	ip, [r5]
   13504:	cmp	ip, #0
   13508:	beq	13538 <abort@plt+0x27e8>
   1350c:	mov	lr, r5
   13510:	mov	ip, #0
   13514:	add	ip, ip, #1
   13518:	ldr	r4, [lr, #4]!
   1351c:	cmp	r4, #0
   13520:	bne	13514 <abort@plt+0x27c4>
   13524:	str	ip, [sp, #4]
   13528:	str	r5, [sp]
   1352c:	bl	130d4 <abort@plt+0x2384>
   13530:	add	sp, sp, #12
   13534:	pop	{r4, r5, pc}
   13538:	mov	ip, #0
   1353c:	b	13524 <abort@plt+0x27d4>
   13540:	push	{r4, r5, lr}
   13544:	sub	sp, sp, #52	; 0x34
   13548:	ldr	r4, [sp, #64]	; 0x40
   1354c:	sub	r4, r4, #4
   13550:	add	r5, sp, #4
   13554:	mov	ip, #0
   13558:	ldr	lr, [r4, #4]!
   1355c:	str	lr, [r5, #4]!
   13560:	cmp	lr, #0
   13564:	beq	13574 <abort@plt+0x2824>
   13568:	add	ip, ip, #1
   1356c:	cmp	ip, #10
   13570:	bne	13558 <abort@plt+0x2808>
   13574:	str	ip, [sp, #4]
   13578:	add	ip, sp, #8
   1357c:	str	ip, [sp]
   13580:	bl	130d4 <abort@plt+0x2384>
   13584:	add	sp, sp, #52	; 0x34
   13588:	pop	{r4, r5, pc}
   1358c:	push	{r3}		; (str r3, [sp, #-4]!)
   13590:	push	{lr}		; (str lr, [sp, #-4]!)
   13594:	sub	sp, sp, #16
   13598:	add	r3, sp, #24
   1359c:	str	r3, [sp, #12]
   135a0:	str	r3, [sp]
   135a4:	ldr	r3, [sp, #20]
   135a8:	bl	13540 <abort@plt+0x27f0>
   135ac:	add	sp, sp, #16
   135b0:	pop	{lr}		; (ldr lr, [sp], #4)
   135b4:	add	sp, sp, #4
   135b8:	bx	lr
   135bc:	push	{r4, lr}
   135c0:	ldr	r3, [pc, #112]	; 13638 <abort@plt+0x28e8>
   135c4:	ldr	r1, [r3]
   135c8:	mov	r0, #10
   135cc:	bl	10bc4 <fputc_unlocked@plt>
   135d0:	mov	r2, #5
   135d4:	ldr	r1, [pc, #96]	; 1363c <abort@plt+0x28ec>
   135d8:	mov	r0, #0
   135dc:	bl	10bd0 <dcgettext@plt>
   135e0:	ldr	r2, [pc, #88]	; 13640 <abort@plt+0x28f0>
   135e4:	mov	r1, r0
   135e8:	mov	r0, #1
   135ec:	bl	10cd8 <__printf_chk@plt>
   135f0:	mov	r2, #5
   135f4:	ldr	r1, [pc, #72]	; 13644 <abort@plt+0x28f4>
   135f8:	mov	r0, #0
   135fc:	bl	10bd0 <dcgettext@plt>
   13600:	ldr	r3, [pc, #64]	; 13648 <abort@plt+0x28f8>
   13604:	ldr	r2, [pc, #64]	; 1364c <abort@plt+0x28fc>
   13608:	mov	r1, r0
   1360c:	mov	r0, #1
   13610:	bl	10cd8 <__printf_chk@plt>
   13614:	mov	r2, #5
   13618:	ldr	r1, [pc, #48]	; 13650 <abort@plt+0x2900>
   1361c:	mov	r0, #0
   13620:	bl	10bd0 <dcgettext@plt>
   13624:	ldr	r2, [pc, #40]	; 13654 <abort@plt+0x2904>
   13628:	mov	r1, r0
   1362c:	mov	r0, #1
   13630:	bl	10cd8 <__printf_chk@plt>
   13634:	pop	{r4, pc}
   13638:	andeq	r5, r2, ip, lsr #2
   1363c:	andeq	r4, r1, r4, ror #25
   13640:	strdeq	r4, [r1], -r8
   13644:	andeq	r4, r1, r0, lsl sp
   13648:	andeq	r4, r1, r0, ror r7
   1364c:	muleq	r1, r8, r7
   13650:	andeq	r4, r1, r4, lsr #26
   13654:	andeq	r4, r1, ip, asr #26
   13658:	push	{r4, lr}
   1365c:	bl	13c8c <abort@plt+0x2f3c>
   13660:	cmp	r0, #0
   13664:	popne	{r4, pc}
   13668:	bl	13bfc <abort@plt+0x2eac>
   1366c:	push	{r4, lr}
   13670:	bl	13c8c <abort@plt+0x2f3c>
   13674:	cmp	r0, #0
   13678:	popne	{r4, pc}
   1367c:	bl	13bfc <abort@plt+0x2eac>
   13680:	push	{r4, lr}
   13684:	bl	13658 <abort@plt+0x2908>
   13688:	pop	{r4, pc}
   1368c:	push	{r4, r5, r6, lr}
   13690:	mov	r5, r0
   13694:	mov	r4, r1
   13698:	bl	13cbc <abort@plt+0x2f6c>
   1369c:	cmp	r0, #0
   136a0:	popne	{r4, r5, r6, pc}
   136a4:	adds	r4, r4, #0
   136a8:	movne	r4, #1
   136ac:	cmp	r5, #0
   136b0:	orreq	r4, r4, #1
   136b4:	cmp	r4, #0
   136b8:	popeq	{r4, r5, r6, pc}
   136bc:	bl	13bfc <abort@plt+0x2eac>
   136c0:	push	{r4, lr}
   136c4:	cmp	r1, #0
   136c8:	orreq	r1, r1, #1
   136cc:	bl	13cbc <abort@plt+0x2f6c>
   136d0:	cmp	r0, #0
   136d4:	popne	{r4, pc}
   136d8:	bl	13bfc <abort@plt+0x2eac>
   136dc:	push	{r4, r5, r6, lr}
   136e0:	mov	r6, r0
   136e4:	mov	r5, r1
   136e8:	mov	r4, r2
   136ec:	bl	1401c <abort@plt+0x32cc>
   136f0:	cmp	r0, #0
   136f4:	popne	{r4, r5, r6, pc}
   136f8:	cmp	r6, #0
   136fc:	beq	1370c <abort@plt+0x29bc>
   13700:	cmp	r5, #0
   13704:	cmpne	r4, #0
   13708:	popeq	{r4, r5, r6, pc}
   1370c:	bl	13bfc <abort@plt+0x2eac>
   13710:	push	{r4, lr}
   13714:	bl	136dc <abort@plt+0x298c>
   13718:	pop	{r4, pc}
   1371c:	push	{r4, lr}
   13720:	mov	ip, r1
   13724:	mov	r3, r2
   13728:	cmp	r2, #0
   1372c:	cmpne	r1, #0
   13730:	moveq	r3, #1
   13734:	moveq	ip, r3
   13738:	mov	r2, r3
   1373c:	mov	r1, ip
   13740:	bl	1401c <abort@plt+0x32cc>
   13744:	cmp	r0, #0
   13748:	popne	{r4, pc}
   1374c:	bl	13bfc <abort@plt+0x2eac>
   13750:	push	{r4, lr}
   13754:	mov	r2, r1
   13758:	mov	r1, r0
   1375c:	mov	r0, #0
   13760:	bl	136dc <abort@plt+0x298c>
   13764:	pop	{r4, pc}
   13768:	push	{r4, lr}
   1376c:	mov	r2, r1
   13770:	mov	r1, r0
   13774:	mov	r0, #0
   13778:	bl	1371c <abort@plt+0x29cc>
   1377c:	pop	{r4, pc}
   13780:	push	{r4, r5, r6, r7, r8, lr}
   13784:	mov	r5, r1
   13788:	mov	r6, r2
   1378c:	ldr	r4, [r1]
   13790:	subs	r7, r0, #0
   13794:	beq	137b0 <abort@plt+0x2a60>
   13798:	lsr	r2, r4, #1
   1379c:	add	r3, r2, #1
   137a0:	mvn	r3, r3
   137a4:	cmp	r4, r3
   137a8:	bls	137d4 <abort@plt+0x2a84>
   137ac:	bl	13bfc <abort@plt+0x2eac>
   137b0:	cmp	r4, #0
   137b4:	bne	137dc <abort@plt+0x2a8c>
   137b8:	mov	r1, r2
   137bc:	mov	r0, #64	; 0x40
   137c0:	bl	14170 <abort@plt+0x3420>
   137c4:	cmp	r0, #0
   137c8:	movne	r4, r0
   137cc:	addeq	r4, r0, #1
   137d0:	b	137dc <abort@plt+0x2a8c>
   137d4:	add	r4, r4, #1
   137d8:	add	r4, r4, r2
   137dc:	mov	r2, r6
   137e0:	mov	r1, r4
   137e4:	mov	r0, r7
   137e8:	bl	136dc <abort@plt+0x298c>
   137ec:	str	r4, [r5]
   137f0:	pop	{r4, r5, r6, r7, r8, pc}
   137f4:	push	{r4, lr}
   137f8:	mov	r2, #1
   137fc:	bl	13780 <abort@plt+0x2a30>
   13800:	pop	{r4, pc}
   13804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13808:	sub	sp, sp, #12
   1380c:	mov	fp, r0
   13810:	mov	sl, r1
   13814:	mov	r9, r2
   13818:	mov	r7, r3
   1381c:	ldr	r6, [sp, #48]	; 0x30
   13820:	ldr	r5, [r1]
   13824:	asrs	r4, r5, #1
   13828:	bmi	13984 <abort@plt+0x2c34>
   1382c:	cmp	r5, #0
   13830:	blt	13998 <abort@plt+0x2c48>
   13834:	mvn	r3, #-2147483648	; 0x80000000
   13838:	sub	r3, r3, r4
   1383c:	cmp	r5, r3
   13840:	movle	r3, #0
   13844:	movgt	r3, #1
   13848:	cmp	r3, #0
   1384c:	addeq	r4, r4, r5
   13850:	mvnne	r4, #-2147483648	; 0x80000000
   13854:	mvn	r8, r7
   13858:	lsr	r8, r8, #31
   1385c:	cmp	r7, r4
   13860:	movge	r3, #0
   13864:	andlt	r3, r8, #1
   13868:	cmp	r3, #0
   1386c:	movne	r4, r7
   13870:	cmp	r6, #0
   13874:	blt	139ac <abort@plt+0x2c5c>
   13878:	cmp	r6, #0
   1387c:	beq	13a58 <abort@plt+0x2d08>
   13880:	cmp	r4, #0
   13884:	blt	13a08 <abort@plt+0x2cb8>
   13888:	mov	r1, r6
   1388c:	mvn	r0, #-2147483648	; 0x80000000
   13890:	bl	1437c <abort@plt+0x362c>
   13894:	cmp	r0, r4
   13898:	movge	r0, #0
   1389c:	movlt	r0, #1
   138a0:	cmp	r0, #0
   138a4:	mvnne	r3, #-2147483648	; 0x80000000
   138a8:	strne	r3, [sp, #4]
   138ac:	beq	13a40 <abort@plt+0x2cf0>
   138b0:	mov	r1, r6
   138b4:	ldr	r0, [sp, #4]
   138b8:	bl	1437c <abort@plt+0x362c>
   138bc:	mov	r4, r0
   138c0:	mov	r1, r6
   138c4:	ldr	r0, [sp, #4]
   138c8:	bl	1459c <abort@plt+0x384c>
   138cc:	ldr	r3, [sp, #4]
   138d0:	sub	r1, r3, r1
   138d4:	cmp	fp, #0
   138d8:	moveq	r3, #0
   138dc:	streq	r3, [sl]
   138e0:	sub	r3, r4, r5
   138e4:	cmp	r3, r9
   138e8:	bge	13970 <abort@plt+0x2c20>
   138ec:	cmp	r9, #0
   138f0:	blt	13a64 <abort@plt+0x2d14>
   138f4:	cmp	r5, #0
   138f8:	blt	13a78 <abort@plt+0x2d28>
   138fc:	mvn	r3, #-2147483648	; 0x80000000
   13900:	sub	r3, r3, r9
   13904:	cmp	r5, r3
   13908:	movle	r3, #0
   1390c:	movgt	r3, #1
   13910:	cmp	r3, #0
   13914:	bne	13b20 <abort@plt+0x2dd0>
   13918:	add	r5, r5, r9
   1391c:	mov	r4, r5
   13920:	cmp	r7, r5
   13924:	movge	r7, #0
   13928:	andlt	r7, r8, #1
   1392c:	cmp	r7, #0
   13930:	bne	13b20 <abort@plt+0x2dd0>
   13934:	cmp	r6, #0
   13938:	blt	13a8c <abort@plt+0x2d3c>
   1393c:	cmp	r6, #0
   13940:	beq	1396c <abort@plt+0x2c1c>
   13944:	cmp	r5, #0
   13948:	blt	13ae8 <abort@plt+0x2d98>
   1394c:	mov	r1, r6
   13950:	mvn	r0, #-2147483648	; 0x80000000
   13954:	bl	1437c <abort@plt+0x362c>
   13958:	cmp	r5, r0
   1395c:	movle	r0, #0
   13960:	movgt	r0, #1
   13964:	cmp	r0, #0
   13968:	bne	13b20 <abort@plt+0x2dd0>
   1396c:	mul	r1, r5, r6
   13970:	mov	r0, fp
   13974:	bl	1368c <abort@plt+0x293c>
   13978:	str	r4, [sl]
   1397c:	add	sp, sp, #12
   13980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13984:	rsb	r3, r4, #-2147483648	; 0x80000000
   13988:	cmp	r5, r3
   1398c:	movge	r3, #0
   13990:	movlt	r3, #1
   13994:	b	13848 <abort@plt+0x2af8>
   13998:	rsb	r3, r5, #-2147483648	; 0x80000000
   1399c:	cmp	r4, r3
   139a0:	movge	r3, #0
   139a4:	movlt	r3, #1
   139a8:	b	13848 <abort@plt+0x2af8>
   139ac:	cmp	r4, #0
   139b0:	blt	139d8 <abort@plt+0x2c88>
   139b4:	cmn	r6, #1
   139b8:	beq	139f4 <abort@plt+0x2ca4>
   139bc:	mov	r1, r6
   139c0:	mov	r0, #-2147483648	; 0x80000000
   139c4:	bl	1437c <abort@plt+0x362c>
   139c8:	cmp	r0, r4
   139cc:	movge	r0, #0
   139d0:	movlt	r0, #1
   139d4:	b	138a0 <abort@plt+0x2b50>
   139d8:	mov	r1, r6
   139dc:	mvn	r0, #-2147483648	; 0x80000000
   139e0:	bl	1437c <abort@plt+0x362c>
   139e4:	cmp	r0, r4
   139e8:	movle	r0, #0
   139ec:	movgt	r0, #1
   139f0:	b	138a0 <abort@plt+0x2b50>
   139f4:	add	r0, r4, #-2147483648	; 0x80000000
   139f8:	cmp	r0, #0
   139fc:	movle	r0, #0
   13a00:	movgt	r0, #1
   13a04:	b	138a0 <abort@plt+0x2b50>
   13a08:	cmn	r4, #1
   13a0c:	beq	13a2c <abort@plt+0x2cdc>
   13a10:	mov	r1, r4
   13a14:	mov	r0, #-2147483648	; 0x80000000
   13a18:	bl	1437c <abort@plt+0x362c>
   13a1c:	cmp	r6, r0
   13a20:	movle	r0, #0
   13a24:	movgt	r0, #1
   13a28:	b	138a0 <abort@plt+0x2b50>
   13a2c:	add	r0, r6, #-2147483648	; 0x80000000
   13a30:	cmp	r0, #0
   13a34:	movle	r0, #0
   13a38:	movgt	r0, #1
   13a3c:	b	138a0 <abort@plt+0x2b50>
   13a40:	mul	r1, r6, r4
   13a44:	cmp	r1, #63	; 0x3f
   13a48:	movle	r3, #64	; 0x40
   13a4c:	strle	r3, [sp, #4]
   13a50:	bgt	138d4 <abort@plt+0x2b84>
   13a54:	b	138b0 <abort@plt+0x2b60>
   13a58:	mov	r3, #64	; 0x40
   13a5c:	str	r3, [sp, #4]
   13a60:	b	138b0 <abort@plt+0x2b60>
   13a64:	rsb	r3, r9, #-2147483648	; 0x80000000
   13a68:	cmp	r5, r3
   13a6c:	movge	r3, #0
   13a70:	movlt	r3, #1
   13a74:	b	13910 <abort@plt+0x2bc0>
   13a78:	rsb	r3, r5, #-2147483648	; 0x80000000
   13a7c:	cmp	r9, r3
   13a80:	movge	r3, #0
   13a84:	movlt	r3, #1
   13a88:	b	13910 <abort@plt+0x2bc0>
   13a8c:	cmp	r5, #0
   13a90:	blt	13ab8 <abort@plt+0x2d68>
   13a94:	cmn	r6, #1
   13a98:	beq	13ad4 <abort@plt+0x2d84>
   13a9c:	mov	r1, r6
   13aa0:	mov	r0, #-2147483648	; 0x80000000
   13aa4:	bl	1437c <abort@plt+0x362c>
   13aa8:	cmp	r5, r0
   13aac:	movle	r0, #0
   13ab0:	movgt	r0, #1
   13ab4:	b	13964 <abort@plt+0x2c14>
   13ab8:	mov	r1, r6
   13abc:	mvn	r0, #-2147483648	; 0x80000000
   13ac0:	bl	1437c <abort@plt+0x362c>
   13ac4:	cmp	r5, r0
   13ac8:	movge	r0, #0
   13acc:	movlt	r0, #1
   13ad0:	b	13964 <abort@plt+0x2c14>
   13ad4:	add	r0, r5, #-2147483648	; 0x80000000
   13ad8:	cmp	r0, #0
   13adc:	movle	r0, #0
   13ae0:	movgt	r0, #1
   13ae4:	b	13964 <abort@plt+0x2c14>
   13ae8:	cmn	r5, #1
   13aec:	beq	13b0c <abort@plt+0x2dbc>
   13af0:	mov	r1, r5
   13af4:	mov	r0, #-2147483648	; 0x80000000
   13af8:	bl	1437c <abort@plt+0x362c>
   13afc:	cmp	r6, r0
   13b00:	movle	r0, #0
   13b04:	movgt	r0, #1
   13b08:	b	13964 <abort@plt+0x2c14>
   13b0c:	add	r0, r6, #-2147483648	; 0x80000000
   13b10:	cmp	r0, #0
   13b14:	movle	r0, #0
   13b18:	movgt	r0, #1
   13b1c:	b	13964 <abort@plt+0x2c14>
   13b20:	bl	13bfc <abort@plt+0x2eac>
   13b24:	push	{r4, lr}
   13b28:	bl	13c3c <abort@plt+0x2eec>
   13b2c:	cmp	r0, #0
   13b30:	popne	{r4, pc}
   13b34:	bl	13bfc <abort@plt+0x2eac>
   13b38:	push	{r4, lr}
   13b3c:	mov	r1, #1
   13b40:	bl	13b24 <abort@plt+0x2dd4>
   13b44:	pop	{r4, pc}
   13b48:	push	{r4, lr}
   13b4c:	bl	13c3c <abort@plt+0x2eec>
   13b50:	cmp	r0, #0
   13b54:	popne	{r4, pc}
   13b58:	bl	13bfc <abort@plt+0x2eac>
   13b5c:	push	{r4, lr}
   13b60:	mov	r1, #1
   13b64:	bl	13b48 <abort@plt+0x2df8>
   13b68:	pop	{r4, pc}
   13b6c:	push	{r4, r5, r6, lr}
   13b70:	mov	r5, r0
   13b74:	mov	r4, r1
   13b78:	mov	r0, r1
   13b7c:	bl	13658 <abort@plt+0x2908>
   13b80:	mov	r2, r4
   13b84:	mov	r1, r5
   13b88:	bl	10ba0 <memcpy@plt>
   13b8c:	pop	{r4, r5, r6, pc}
   13b90:	push	{r4, r5, r6, lr}
   13b94:	mov	r5, r0
   13b98:	mov	r4, r1
   13b9c:	mov	r0, r1
   13ba0:	bl	1366c <abort@plt+0x291c>
   13ba4:	mov	r2, r4
   13ba8:	mov	r1, r5
   13bac:	bl	10ba0 <memcpy@plt>
   13bb0:	pop	{r4, r5, r6, pc}
   13bb4:	push	{r4, r5, r6, lr}
   13bb8:	mov	r5, r0
   13bbc:	mov	r4, r1
   13bc0:	add	r0, r1, #1
   13bc4:	bl	1366c <abort@plt+0x291c>
   13bc8:	mov	r2, #0
   13bcc:	strb	r2, [r0, r4]
   13bd0:	mov	r2, r4
   13bd4:	mov	r1, r5
   13bd8:	bl	10ba0 <memcpy@plt>
   13bdc:	pop	{r4, r5, r6, pc}
   13be0:	push	{r4, lr}
   13be4:	mov	r4, r0
   13be8:	bl	10ca8 <strlen@plt>
   13bec:	add	r1, r0, #1
   13bf0:	mov	r0, r4
   13bf4:	bl	13b6c <abort@plt+0x2e1c>
   13bf8:	pop	{r4, pc}
   13bfc:	push	{r4, lr}
   13c00:	ldr	r3, [pc, #40]	; 13c30 <abort@plt+0x2ee0>
   13c04:	ldr	r4, [r3]
   13c08:	mov	r2, #5
   13c0c:	ldr	r1, [pc, #32]	; 13c34 <abort@plt+0x2ee4>
   13c10:	mov	r0, #0
   13c14:	bl	10bd0 <dcgettext@plt>
   13c18:	mov	r3, r0
   13c1c:	ldr	r2, [pc, #20]	; 13c38 <abort@plt+0x2ee8>
   13c20:	mov	r1, #0
   13c24:	mov	r0, r4
   13c28:	bl	10c3c <error@plt>
   13c2c:	bl	10d50 <abort@plt>
   13c30:	ldrdeq	r5, [r2], -r0
   13c34:	muleq	r1, ip, sp
   13c38:	andeq	r4, r1, ip, lsl r9
   13c3c:	push	{r4, lr}
   13c40:	mov	r2, r0
   13c44:	mov	r3, r1
   13c48:	cmp	r1, #0
   13c4c:	cmpne	r0, #0
   13c50:	moveq	r3, #1
   13c54:	moveq	r2, r3
   13c58:	umull	r0, r1, r2, r3
   13c5c:	cmp	r0, #0
   13c60:	cmpge	r1, #0
   13c64:	bne	13c78 <abort@plt+0x2f28>
   13c68:	mov	r1, r3
   13c6c:	mov	r0, r2
   13c70:	bl	10b40 <calloc@plt>
   13c74:	pop	{r4, pc}
   13c78:	bl	10cb4 <__errno_location@plt>
   13c7c:	mov	r3, #12
   13c80:	str	r3, [r0]
   13c84:	mov	r0, #0
   13c88:	pop	{r4, pc}
   13c8c:	push	{r4, lr}
   13c90:	cmp	r0, #0
   13c94:	moveq	r0, #1
   13c98:	cmp	r0, #0
   13c9c:	blt	13ca8 <abort@plt+0x2f58>
   13ca0:	bl	10c54 <malloc@plt>
   13ca4:	pop	{r4, pc}
   13ca8:	bl	10cb4 <__errno_location@plt>
   13cac:	mov	r3, #12
   13cb0:	str	r3, [r0]
   13cb4:	mov	r0, #0
   13cb8:	pop	{r4, pc}
   13cbc:	push	{r4, lr}
   13cc0:	cmp	r0, #0
   13cc4:	beq	13ce0 <abort@plt+0x2f90>
   13cc8:	cmp	r1, #0
   13ccc:	beq	13cec <abort@plt+0x2f9c>
   13cd0:	cmp	r1, #0
   13cd4:	blt	13cf8 <abort@plt+0x2fa8>
   13cd8:	bl	10bdc <realloc@plt>
   13cdc:	pop	{r4, pc}
   13ce0:	mov	r0, r1
   13ce4:	bl	13c8c <abort@plt+0x2f3c>
   13ce8:	pop	{r4, pc}
   13cec:	bl	13e90 <abort@plt+0x3140>
   13cf0:	mov	r0, #0
   13cf4:	pop	{r4, pc}
   13cf8:	bl	10cb4 <__errno_location@plt>
   13cfc:	mov	r3, #12
   13d00:	str	r3, [r0]
   13d04:	mov	r0, #0
   13d08:	pop	{r4, pc}
   13d0c:	push	{r4, r5, r6, lr}
   13d10:	mov	r5, r0
   13d14:	bl	10c24 <__fpending@plt>
   13d18:	mov	r6, r0
   13d1c:	ldr	r4, [r5]
   13d20:	and	r4, r4, #32
   13d24:	mov	r0, r5
   13d28:	bl	13d84 <abort@plt+0x3034>
   13d2c:	cmp	r4, #0
   13d30:	bne	13d58 <abort@plt+0x3008>
   13d34:	cmp	r0, #0
   13d38:	popeq	{r4, r5, r6, pc}
   13d3c:	cmp	r6, #0
   13d40:	bne	13d74 <abort@plt+0x3024>
   13d44:	bl	10cb4 <__errno_location@plt>
   13d48:	ldr	r0, [r0]
   13d4c:	subs	r0, r0, #9
   13d50:	mvnne	r0, #0
   13d54:	pop	{r4, r5, r6, pc}
   13d58:	cmp	r0, #0
   13d5c:	bne	13d7c <abort@plt+0x302c>
   13d60:	bl	10cb4 <__errno_location@plt>
   13d64:	mov	r3, #0
   13d68:	str	r3, [r0]
   13d6c:	mvn	r0, #0
   13d70:	pop	{r4, r5, r6, pc}
   13d74:	mvn	r0, #0
   13d78:	pop	{r4, r5, r6, pc}
   13d7c:	mvn	r0, #0
   13d80:	pop	{r4, r5, r6, pc}
   13d84:	push	{r4, r5, r6, lr}
   13d88:	sub	sp, sp, #8
   13d8c:	mov	r4, r0
   13d90:	bl	10ce4 <fileno@plt>
   13d94:	cmp	r0, #0
   13d98:	blt	13e10 <abort@plt+0x30c0>
   13d9c:	mov	r0, r4
   13da0:	bl	10c6c <__freading@plt>
   13da4:	cmp	r0, #0
   13da8:	beq	13ddc <abort@plt+0x308c>
   13dac:	mov	r0, r4
   13db0:	bl	10ce4 <fileno@plt>
   13db4:	mov	r3, #1
   13db8:	str	r3, [sp]
   13dbc:	mov	r2, #0
   13dc0:	mov	r3, #0
   13dc4:	bl	10c0c <lseek64@plt>
   13dc8:	mvn	r2, #0
   13dcc:	mvn	r3, #0
   13dd0:	cmp	r1, r3
   13dd4:	cmpeq	r0, r2
   13dd8:	beq	13e1c <abort@plt+0x30cc>
   13ddc:	mov	r0, r4
   13de0:	bl	13e2c <abort@plt+0x30dc>
   13de4:	cmp	r0, #0
   13de8:	beq	13e1c <abort@plt+0x30cc>
   13dec:	bl	10cb4 <__errno_location@plt>
   13df0:	mov	r5, r0
   13df4:	ldr	r6, [r0]
   13df8:	mov	r0, r4
   13dfc:	bl	10cfc <fclose@plt>
   13e00:	cmp	r6, #0
   13e04:	strne	r6, [r5]
   13e08:	mvnne	r0, #0
   13e0c:	b	13e24 <abort@plt+0x30d4>
   13e10:	mov	r0, r4
   13e14:	bl	10cfc <fclose@plt>
   13e18:	b	13e24 <abort@plt+0x30d4>
   13e1c:	mov	r0, r4
   13e20:	bl	10cfc <fclose@plt>
   13e24:	add	sp, sp, #8
   13e28:	pop	{r4, r5, r6, pc}
   13e2c:	push	{r4, lr}
   13e30:	sub	sp, sp, #8
   13e34:	subs	r4, r0, #0
   13e38:	beq	13e4c <abort@plt+0x30fc>
   13e3c:	mov	r0, r4
   13e40:	bl	10c6c <__freading@plt>
   13e44:	cmp	r0, #0
   13e48:	bne	13e5c <abort@plt+0x310c>
   13e4c:	mov	r0, r4
   13e50:	bl	10b7c <fflush@plt>
   13e54:	add	sp, sp, #8
   13e58:	pop	{r4, pc}
   13e5c:	ldr	r3, [r4]
   13e60:	tst	r3, #256	; 0x100
   13e64:	bne	13e74 <abort@plt+0x3124>
   13e68:	mov	r0, r4
   13e6c:	bl	10b7c <fflush@plt>
   13e70:	b	13e54 <abort@plt+0x3104>
   13e74:	mov	r3, #1
   13e78:	str	r3, [sp]
   13e7c:	mov	r2, #0
   13e80:	mov	r3, #0
   13e84:	mov	r0, r4
   13e88:	bl	13ee8 <abort@plt+0x3198>
   13e8c:	b	13e68 <abort@plt+0x3118>
   13e90:	push	{r4, r5, lr}
   13e94:	sub	sp, sp, #12
   13e98:	mov	r5, r0
   13e9c:	bl	10cb4 <__errno_location@plt>
   13ea0:	mov	r4, r0
   13ea4:	ldr	r3, [r0]
   13ea8:	str	r3, [sp]
   13eac:	str	r3, [sp, #4]
   13eb0:	mov	r3, #0
   13eb4:	str	r3, [r0]
   13eb8:	mov	r0, r5
   13ebc:	bl	10b88 <free@plt>
   13ec0:	ldr	r3, [r4]
   13ec4:	cmp	r3, #0
   13ec8:	moveq	r3, #4
   13ecc:	movne	r3, #0
   13ed0:	add	r2, sp, #8
   13ed4:	add	r3, r2, r3
   13ed8:	ldr	r3, [r3, #-8]
   13edc:	str	r3, [r4]
   13ee0:	add	sp, sp, #12
   13ee4:	pop	{r4, r5, pc}
   13ee8:	push	{r4, r5, r6, r7, lr}
   13eec:	sub	sp, sp, #12
   13ef0:	mov	r4, r0
   13ef4:	mov	r6, r2
   13ef8:	mov	r7, r3
   13efc:	ldr	r5, [sp, #32]
   13f00:	ldr	r2, [r0, #8]
   13f04:	ldr	r3, [r0, #4]
   13f08:	cmp	r2, r3
   13f0c:	beq	13f2c <abort@plt+0x31dc>
   13f10:	str	r5, [sp]
   13f14:	mov	r2, r6
   13f18:	mov	r3, r7
   13f1c:	mov	r0, r4
   13f20:	bl	10d08 <fseeko64@plt>
   13f24:	add	sp, sp, #12
   13f28:	pop	{r4, r5, r6, r7, pc}
   13f2c:	ldr	r2, [r0, #20]
   13f30:	ldr	r3, [r0, #16]
   13f34:	cmp	r2, r3
   13f38:	bne	13f10 <abort@plt+0x31c0>
   13f3c:	ldr	r3, [r0, #36]	; 0x24
   13f40:	cmp	r3, #0
   13f44:	bne	13f10 <abort@plt+0x31c0>
   13f48:	bl	10ce4 <fileno@plt>
   13f4c:	str	r5, [sp]
   13f50:	mov	r2, r6
   13f54:	mov	r3, r7
   13f58:	bl	10c0c <lseek64@plt>
   13f5c:	mvn	r2, #0
   13f60:	mvn	r3, #0
   13f64:	cmp	r1, r3
   13f68:	cmpeq	r0, r2
   13f6c:	beq	13f88 <abort@plt+0x3238>
   13f70:	ldr	r3, [r4]
   13f74:	bic	r3, r3, #16
   13f78:	str	r3, [r4]
   13f7c:	strd	r0, [r4, #80]	; 0x50
   13f80:	mov	r0, #0
   13f84:	b	13f24 <abort@plt+0x31d4>
   13f88:	mvn	r0, #0
   13f8c:	b	13f24 <abort@plt+0x31d4>
   13f90:	push	{r4, lr}
   13f94:	mov	r0, #14
   13f98:	bl	10d2c <nl_langinfo@plt>
   13f9c:	cmp	r0, #0
   13fa0:	beq	13fb8 <abort@plt+0x3268>
   13fa4:	ldrb	r2, [r0]
   13fa8:	ldr	r3, [pc, #16]	; 13fc0 <abort@plt+0x3270>
   13fac:	cmp	r2, #0
   13fb0:	moveq	r0, r3
   13fb4:	pop	{r4, pc}
   13fb8:	ldr	r0, [pc]	; 13fc0 <abort@plt+0x3270>
   13fbc:	pop	{r4, pc}
   13fc0:			; <UNDEFINED> instruction: 0x00014db0
   13fc4:	push	{r4, r5, r6, r7, lr}
   13fc8:	sub	sp, sp, #12
   13fcc:	mov	r7, r1
   13fd0:	mov	r5, r2
   13fd4:	subs	r6, r0, #0
   13fd8:	addeq	r6, sp, #4
   13fdc:	mov	r0, r6
   13fe0:	bl	10c30 <mbrtowc@plt>
   13fe4:	mov	r4, r0
   13fe8:	cmp	r5, #0
   13fec:	cmnne	r0, #3
   13ff0:	bhi	14000 <abort@plt+0x32b0>
   13ff4:	mov	r0, r4
   13ff8:	add	sp, sp, #12
   13ffc:	pop	{r4, r5, r6, r7, pc}
   14000:	mov	r0, #0
   14004:	bl	14068 <abort@plt+0x3318>
   14008:	cmp	r0, #0
   1400c:	ldrbeq	r3, [r7]
   14010:	streq	r3, [r6]
   14014:	moveq	r4, #1
   14018:	b	13ff4 <abort@plt+0x32a4>
   1401c:	push	{r4, r5, r6, lr}
   14020:	mov	r6, r0
   14024:	mov	r5, r1
   14028:	subs	r4, r2, #0
   1402c:	beq	14058 <abort@plt+0x3308>
   14030:	mov	r1, r4
   14034:	mvn	r0, #0
   14038:	bl	14170 <abort@plt+0x3420>
   1403c:	cmp	r0, r5
   14040:	bcs	14058 <abort@plt+0x3308>
   14044:	bl	10cb4 <__errno_location@plt>
   14048:	mov	r3, #12
   1404c:	str	r3, [r0]
   14050:	mov	r0, #0
   14054:	pop	{r4, r5, r6, pc}
   14058:	mul	r1, r5, r4
   1405c:	mov	r0, r6
   14060:	bl	13cbc <abort@plt+0x2f6c>
   14064:	pop	{r4, r5, r6, pc}
   14068:	push	{lr}		; (str lr, [sp, #-4]!)
   1406c:	sub	sp, sp, #268	; 0x10c
   14070:	ldr	r2, [pc, #68]	; 140bc <abort@plt+0x336c>
   14074:	add	r1, sp, #4
   14078:	bl	140c8 <abort@plt+0x3378>
   1407c:	cmp	r0, #0
   14080:	movne	r0, #0
   14084:	bne	140b4 <abort@plt+0x3364>
   14088:	ldr	r1, [pc, #48]	; 140c0 <abort@plt+0x3370>
   1408c:	add	r0, sp, #4
   14090:	bl	10b64 <strcmp@plt>
   14094:	cmp	r0, #0
   14098:	moveq	r0, #0
   1409c:	beq	140b4 <abort@plt+0x3364>
   140a0:	ldr	r1, [pc, #28]	; 140c4 <abort@plt+0x3374>
   140a4:	add	r0, sp, #4
   140a8:	bl	10b64 <strcmp@plt>
   140ac:	adds	r0, r0, #0
   140b0:	movne	r0, #1
   140b4:	add	sp, sp, #268	; 0x10c
   140b8:	pop	{pc}		; (ldr pc, [sp], #4)
   140bc:	andeq	r0, r0, r1, lsl #2
   140c0:			; <UNDEFINED> instruction: 0x00014db8
   140c4:			; <UNDEFINED> instruction: 0x00014dbc
   140c8:	push	{r4, r5, r6, lr}
   140cc:	mov	r6, r1
   140d0:	mov	r4, r2
   140d4:	mov	r1, #0
   140d8:	bl	10d14 <setlocale@plt>
   140dc:	subs	r5, r0, #0
   140e0:	beq	14104 <abort@plt+0x33b4>
   140e4:	mov	r0, r5
   140e8:	bl	10ca8 <strlen@plt>
   140ec:	cmp	r4, r0
   140f0:	bhi	1411c <abort@plt+0x33cc>
   140f4:	cmp	r4, #0
   140f8:	bne	14134 <abort@plt+0x33e4>
   140fc:	mov	r0, #34	; 0x22
   14100:	pop	{r4, r5, r6, pc}
   14104:	cmp	r4, #0
   14108:	beq	14158 <abort@plt+0x3408>
   1410c:	mov	r3, #0
   14110:	strb	r3, [r6]
   14114:	mov	r0, #22
   14118:	pop	{r4, r5, r6, pc}
   1411c:	add	r2, r0, #1
   14120:	mov	r1, r5
   14124:	mov	r0, r6
   14128:	bl	10ba0 <memcpy@plt>
   1412c:	mov	r0, #0
   14130:	pop	{r4, r5, r6, pc}
   14134:	sub	r4, r4, #1
   14138:	mov	r2, r4
   1413c:	mov	r1, r5
   14140:	mov	r0, r6
   14144:	bl	10ba0 <memcpy@plt>
   14148:	mov	r3, #0
   1414c:	strb	r3, [r6, r4]
   14150:	mov	r0, #34	; 0x22
   14154:	pop	{r4, r5, r6, pc}
   14158:	mov	r0, #22
   1415c:	pop	{r4, r5, r6, pc}
   14160:	push	{r4, lr}
   14164:	mov	r1, #0
   14168:	bl	10d14 <setlocale@plt>
   1416c:	pop	{r4, pc}
   14170:	subs	r2, r1, #1
   14174:	bxeq	lr
   14178:	bcc	14350 <abort@plt+0x3600>
   1417c:	cmp	r0, r1
   14180:	bls	14334 <abort@plt+0x35e4>
   14184:	tst	r1, r2
   14188:	beq	14340 <abort@plt+0x35f0>
   1418c:	clz	r3, r0
   14190:	clz	r2, r1
   14194:	sub	r3, r2, r3
   14198:	rsbs	r3, r3, #31
   1419c:	addne	r3, r3, r3, lsl #1
   141a0:	mov	r2, #0
   141a4:	addne	pc, pc, r3, lsl #2
   141a8:	nop			; (mov r0, r0)
   141ac:	cmp	r0, r1, lsl #31
   141b0:	adc	r2, r2, r2
   141b4:	subcs	r0, r0, r1, lsl #31
   141b8:	cmp	r0, r1, lsl #30
   141bc:	adc	r2, r2, r2
   141c0:	subcs	r0, r0, r1, lsl #30
   141c4:	cmp	r0, r1, lsl #29
   141c8:	adc	r2, r2, r2
   141cc:	subcs	r0, r0, r1, lsl #29
   141d0:	cmp	r0, r1, lsl #28
   141d4:	adc	r2, r2, r2
   141d8:	subcs	r0, r0, r1, lsl #28
   141dc:	cmp	r0, r1, lsl #27
   141e0:	adc	r2, r2, r2
   141e4:	subcs	r0, r0, r1, lsl #27
   141e8:	cmp	r0, r1, lsl #26
   141ec:	adc	r2, r2, r2
   141f0:	subcs	r0, r0, r1, lsl #26
   141f4:	cmp	r0, r1, lsl #25
   141f8:	adc	r2, r2, r2
   141fc:	subcs	r0, r0, r1, lsl #25
   14200:	cmp	r0, r1, lsl #24
   14204:	adc	r2, r2, r2
   14208:	subcs	r0, r0, r1, lsl #24
   1420c:	cmp	r0, r1, lsl #23
   14210:	adc	r2, r2, r2
   14214:	subcs	r0, r0, r1, lsl #23
   14218:	cmp	r0, r1, lsl #22
   1421c:	adc	r2, r2, r2
   14220:	subcs	r0, r0, r1, lsl #22
   14224:	cmp	r0, r1, lsl #21
   14228:	adc	r2, r2, r2
   1422c:	subcs	r0, r0, r1, lsl #21
   14230:	cmp	r0, r1, lsl #20
   14234:	adc	r2, r2, r2
   14238:	subcs	r0, r0, r1, lsl #20
   1423c:	cmp	r0, r1, lsl #19
   14240:	adc	r2, r2, r2
   14244:	subcs	r0, r0, r1, lsl #19
   14248:	cmp	r0, r1, lsl #18
   1424c:	adc	r2, r2, r2
   14250:	subcs	r0, r0, r1, lsl #18
   14254:	cmp	r0, r1, lsl #17
   14258:	adc	r2, r2, r2
   1425c:	subcs	r0, r0, r1, lsl #17
   14260:	cmp	r0, r1, lsl #16
   14264:	adc	r2, r2, r2
   14268:	subcs	r0, r0, r1, lsl #16
   1426c:	cmp	r0, r1, lsl #15
   14270:	adc	r2, r2, r2
   14274:	subcs	r0, r0, r1, lsl #15
   14278:	cmp	r0, r1, lsl #14
   1427c:	adc	r2, r2, r2
   14280:	subcs	r0, r0, r1, lsl #14
   14284:	cmp	r0, r1, lsl #13
   14288:	adc	r2, r2, r2
   1428c:	subcs	r0, r0, r1, lsl #13
   14290:	cmp	r0, r1, lsl #12
   14294:	adc	r2, r2, r2
   14298:	subcs	r0, r0, r1, lsl #12
   1429c:	cmp	r0, r1, lsl #11
   142a0:	adc	r2, r2, r2
   142a4:	subcs	r0, r0, r1, lsl #11
   142a8:	cmp	r0, r1, lsl #10
   142ac:	adc	r2, r2, r2
   142b0:	subcs	r0, r0, r1, lsl #10
   142b4:	cmp	r0, r1, lsl #9
   142b8:	adc	r2, r2, r2
   142bc:	subcs	r0, r0, r1, lsl #9
   142c0:	cmp	r0, r1, lsl #8
   142c4:	adc	r2, r2, r2
   142c8:	subcs	r0, r0, r1, lsl #8
   142cc:	cmp	r0, r1, lsl #7
   142d0:	adc	r2, r2, r2
   142d4:	subcs	r0, r0, r1, lsl #7
   142d8:	cmp	r0, r1, lsl #6
   142dc:	adc	r2, r2, r2
   142e0:	subcs	r0, r0, r1, lsl #6
   142e4:	cmp	r0, r1, lsl #5
   142e8:	adc	r2, r2, r2
   142ec:	subcs	r0, r0, r1, lsl #5
   142f0:	cmp	r0, r1, lsl #4
   142f4:	adc	r2, r2, r2
   142f8:	subcs	r0, r0, r1, lsl #4
   142fc:	cmp	r0, r1, lsl #3
   14300:	adc	r2, r2, r2
   14304:	subcs	r0, r0, r1, lsl #3
   14308:	cmp	r0, r1, lsl #2
   1430c:	adc	r2, r2, r2
   14310:	subcs	r0, r0, r1, lsl #2
   14314:	cmp	r0, r1, lsl #1
   14318:	adc	r2, r2, r2
   1431c:	subcs	r0, r0, r1, lsl #1
   14320:	cmp	r0, r1
   14324:	adc	r2, r2, r2
   14328:	subcs	r0, r0, r1
   1432c:	mov	r0, r2
   14330:	bx	lr
   14334:	moveq	r0, #1
   14338:	movne	r0, #0
   1433c:	bx	lr
   14340:	clz	r2, r1
   14344:	rsb	r2, r2, #31
   14348:	lsr	r0, r0, r2
   1434c:	bx	lr
   14350:	cmp	r0, #0
   14354:	mvnne	r0, #0
   14358:	b	145bc <abort@plt+0x386c>
   1435c:	cmp	r1, #0
   14360:	beq	14350 <abort@plt+0x3600>
   14364:	push	{r0, r1, lr}
   14368:	bl	14170 <abort@plt+0x3420>
   1436c:	pop	{r1, r2, lr}
   14370:	mul	r3, r2, r0
   14374:	sub	r1, r1, r3
   14378:	bx	lr
   1437c:	cmp	r1, #0
   14380:	beq	1458c <abort@plt+0x383c>
   14384:	eor	ip, r0, r1
   14388:	rsbmi	r1, r1, #0
   1438c:	subs	r2, r1, #1
   14390:	beq	14558 <abort@plt+0x3808>
   14394:	movs	r3, r0
   14398:	rsbmi	r3, r0, #0
   1439c:	cmp	r3, r1
   143a0:	bls	14564 <abort@plt+0x3814>
   143a4:	tst	r1, r2
   143a8:	beq	14574 <abort@plt+0x3824>
   143ac:	clz	r2, r3
   143b0:	clz	r0, r1
   143b4:	sub	r2, r0, r2
   143b8:	rsbs	r2, r2, #31
   143bc:	addne	r2, r2, r2, lsl #1
   143c0:	mov	r0, #0
   143c4:	addne	pc, pc, r2, lsl #2
   143c8:	nop			; (mov r0, r0)
   143cc:	cmp	r3, r1, lsl #31
   143d0:	adc	r0, r0, r0
   143d4:	subcs	r3, r3, r1, lsl #31
   143d8:	cmp	r3, r1, lsl #30
   143dc:	adc	r0, r0, r0
   143e0:	subcs	r3, r3, r1, lsl #30
   143e4:	cmp	r3, r1, lsl #29
   143e8:	adc	r0, r0, r0
   143ec:	subcs	r3, r3, r1, lsl #29
   143f0:	cmp	r3, r1, lsl #28
   143f4:	adc	r0, r0, r0
   143f8:	subcs	r3, r3, r1, lsl #28
   143fc:	cmp	r3, r1, lsl #27
   14400:	adc	r0, r0, r0
   14404:	subcs	r3, r3, r1, lsl #27
   14408:	cmp	r3, r1, lsl #26
   1440c:	adc	r0, r0, r0
   14410:	subcs	r3, r3, r1, lsl #26
   14414:	cmp	r3, r1, lsl #25
   14418:	adc	r0, r0, r0
   1441c:	subcs	r3, r3, r1, lsl #25
   14420:	cmp	r3, r1, lsl #24
   14424:	adc	r0, r0, r0
   14428:	subcs	r3, r3, r1, lsl #24
   1442c:	cmp	r3, r1, lsl #23
   14430:	adc	r0, r0, r0
   14434:	subcs	r3, r3, r1, lsl #23
   14438:	cmp	r3, r1, lsl #22
   1443c:	adc	r0, r0, r0
   14440:	subcs	r3, r3, r1, lsl #22
   14444:	cmp	r3, r1, lsl #21
   14448:	adc	r0, r0, r0
   1444c:	subcs	r3, r3, r1, lsl #21
   14450:	cmp	r3, r1, lsl #20
   14454:	adc	r0, r0, r0
   14458:	subcs	r3, r3, r1, lsl #20
   1445c:	cmp	r3, r1, lsl #19
   14460:	adc	r0, r0, r0
   14464:	subcs	r3, r3, r1, lsl #19
   14468:	cmp	r3, r1, lsl #18
   1446c:	adc	r0, r0, r0
   14470:	subcs	r3, r3, r1, lsl #18
   14474:	cmp	r3, r1, lsl #17
   14478:	adc	r0, r0, r0
   1447c:	subcs	r3, r3, r1, lsl #17
   14480:	cmp	r3, r1, lsl #16
   14484:	adc	r0, r0, r0
   14488:	subcs	r3, r3, r1, lsl #16
   1448c:	cmp	r3, r1, lsl #15
   14490:	adc	r0, r0, r0
   14494:	subcs	r3, r3, r1, lsl #15
   14498:	cmp	r3, r1, lsl #14
   1449c:	adc	r0, r0, r0
   144a0:	subcs	r3, r3, r1, lsl #14
   144a4:	cmp	r3, r1, lsl #13
   144a8:	adc	r0, r0, r0
   144ac:	subcs	r3, r3, r1, lsl #13
   144b0:	cmp	r3, r1, lsl #12
   144b4:	adc	r0, r0, r0
   144b8:	subcs	r3, r3, r1, lsl #12
   144bc:	cmp	r3, r1, lsl #11
   144c0:	adc	r0, r0, r0
   144c4:	subcs	r3, r3, r1, lsl #11
   144c8:	cmp	r3, r1, lsl #10
   144cc:	adc	r0, r0, r0
   144d0:	subcs	r3, r3, r1, lsl #10
   144d4:	cmp	r3, r1, lsl #9
   144d8:	adc	r0, r0, r0
   144dc:	subcs	r3, r3, r1, lsl #9
   144e0:	cmp	r3, r1, lsl #8
   144e4:	adc	r0, r0, r0
   144e8:	subcs	r3, r3, r1, lsl #8
   144ec:	cmp	r3, r1, lsl #7
   144f0:	adc	r0, r0, r0
   144f4:	subcs	r3, r3, r1, lsl #7
   144f8:	cmp	r3, r1, lsl #6
   144fc:	adc	r0, r0, r0
   14500:	subcs	r3, r3, r1, lsl #6
   14504:	cmp	r3, r1, lsl #5
   14508:	adc	r0, r0, r0
   1450c:	subcs	r3, r3, r1, lsl #5
   14510:	cmp	r3, r1, lsl #4
   14514:	adc	r0, r0, r0
   14518:	subcs	r3, r3, r1, lsl #4
   1451c:	cmp	r3, r1, lsl #3
   14520:	adc	r0, r0, r0
   14524:	subcs	r3, r3, r1, lsl #3
   14528:	cmp	r3, r1, lsl #2
   1452c:	adc	r0, r0, r0
   14530:	subcs	r3, r3, r1, lsl #2
   14534:	cmp	r3, r1, lsl #1
   14538:	adc	r0, r0, r0
   1453c:	subcs	r3, r3, r1, lsl #1
   14540:	cmp	r3, r1
   14544:	adc	r0, r0, r0
   14548:	subcs	r3, r3, r1
   1454c:	cmp	ip, #0
   14550:	rsbmi	r0, r0, #0
   14554:	bx	lr
   14558:	teq	ip, r0
   1455c:	rsbmi	r0, r0, #0
   14560:	bx	lr
   14564:	movcc	r0, #0
   14568:	asreq	r0, ip, #31
   1456c:	orreq	r0, r0, #1
   14570:	bx	lr
   14574:	clz	r2, r1
   14578:	rsb	r2, r2, #31
   1457c:	cmp	ip, #0
   14580:	lsr	r0, r3, r2
   14584:	rsbmi	r0, r0, #0
   14588:	bx	lr
   1458c:	cmp	r0, #0
   14590:	mvngt	r0, #-2147483648	; 0x80000000
   14594:	movlt	r0, #-2147483648	; 0x80000000
   14598:	b	145bc <abort@plt+0x386c>
   1459c:	cmp	r1, #0
   145a0:	beq	1458c <abort@plt+0x383c>
   145a4:	push	{r0, r1, lr}
   145a8:	bl	14384 <abort@plt+0x3634>
   145ac:	pop	{r1, r2, lr}
   145b0:	mul	r3, r2, r0
   145b4:	sub	r1, r1, r3
   145b8:	bx	lr
   145bc:	push	{r1, lr}
   145c0:	mov	r0, #8
   145c4:	bl	10b58 <raise@plt>
   145c8:	pop	{r1, pc}
   145cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   145d0:	mov	r7, r0
   145d4:	ldr	r6, [pc, #72]	; 14624 <abort@plt+0x38d4>
   145d8:	ldr	r5, [pc, #72]	; 14628 <abort@plt+0x38d8>
   145dc:	add	r6, pc, r6
   145e0:	add	r5, pc, r5
   145e4:	sub	r6, r6, r5
   145e8:	mov	r8, r1
   145ec:	mov	r9, r2
   145f0:	bl	10b20 <calloc@plt-0x20>
   145f4:	asrs	r6, r6, #2
   145f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   145fc:	mov	r4, #0
   14600:	add	r4, r4, #1
   14604:	ldr	r3, [r5], #4
   14608:	mov	r2, r9
   1460c:	mov	r1, r8
   14610:	mov	r0, r7
   14614:	blx	r3
   14618:	cmp	r6, r4
   1461c:	bne	14600 <abort@plt+0x38b0>
   14620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14624:	andeq	r0, r1, ip, lsr #18
   14628:	andeq	r0, r1, r4, lsr #18
   1462c:	bx	lr
   14630:	ldr	r3, [pc, #12]	; 14644 <abort@plt+0x38f4>
   14634:	mov	r1, #0
   14638:	add	r3, pc, r3
   1463c:	ldr	r2, [r3]
   14640:	b	10cc0 <__cxa_atexit@plt>
   14644:	andeq	r0, r1, r8, lsl #21

Disassembly of section .fini:

00014648 <.fini>:
   14648:	push	{r3, lr}
   1464c:	pop	{r3, pc}
