
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013f5c <.init>:
   13f5c:	push	{r3, lr}
   13f60:	bl	14558 <_start@@Base+0x3c>
   13f64:	pop	{r3, pc}

Disassembly of section .plt:

00013f68 <calloc@plt-0x14>:
   13f68:	push	{lr}		; (str lr, [sp, #-4]!)
   13f6c:	ldr	lr, [pc, #4]	; 13f78 <calloc@plt-0x4>
   13f70:	add	lr, pc, lr
   13f74:	ldr	pc, [lr, #8]!
   13f78:	andeq	r8, r5, r8, lsl #1

00013f7c <calloc@plt>:
   13f7c:	add	ip, pc, #0, 12
   13f80:	add	ip, ip, #88, 20	; 0x58000
   13f84:	ldr	pc, [ip, #136]!	; 0x88

00013f88 <raise@plt>:
   13f88:	add	ip, pc, #0, 12
   13f8c:	add	ip, ip, #88, 20	; 0x58000
   13f90:	ldr	pc, [ip, #128]!	; 0x80

00013f94 <strcmp@plt>:
   13f94:	add	ip, pc, #0, 12
   13f98:	add	ip, ip, #88, 20	; 0x58000
   13f9c:	ldr	pc, [ip, #120]!	; 0x78

00013fa0 <fopen@plt>:
   13fa0:	add	ip, pc, #0, 12
   13fa4:	add	ip, ip, #88, 20	; 0x58000
   13fa8:	ldr	pc, [ip, #112]!	; 0x70

00013fac <free@plt>:
   13fac:	add	ip, pc, #0, 12
   13fb0:	add	ip, ip, #88, 20	; 0x58000
   13fb4:	ldr	pc, [ip, #104]!	; 0x68

00013fb8 <memcpy@plt>:
   13fb8:	add	ip, pc, #0, 12
   13fbc:	add	ip, ip, #88, 20	; 0x58000
   13fc0:	ldr	pc, [ip, #96]!	; 0x60

00013fc4 <ftell@plt>:
   13fc4:	add	ip, pc, #0, 12
   13fc8:	add	ip, ip, #88, 20	; 0x58000
   13fcc:	ldr	pc, [ip, #88]!	; 0x58

00013fd0 <memcmp@plt>:
   13fd0:	add	ip, pc, #0, 12
   13fd4:	add	ip, ip, #88, 20	; 0x58000
   13fd8:	ldr	pc, [ip, #80]!	; 0x50

00013fdc <rewind@plt>:
   13fdc:	add	ip, pc, #0, 12
   13fe0:	add	ip, ip, #88, 20	; 0x58000
   13fe4:	ldr	pc, [ip, #72]!	; 0x48

00013fe8 <realloc@plt>:
   13fe8:	add	ip, pc, #0, 12
   13fec:	add	ip, ip, #88, 20	; 0x58000
   13ff0:	ldr	pc, [ip, #64]!	; 0x40

00013ff4 <fwrite@plt>:
   13ff4:	add	ip, pc, #0, 12
   13ff8:	add	ip, ip, #88, 20	; 0x58000
   13ffc:	ldr	pc, [ip, #56]!	; 0x38

00014000 <fread@plt>:
   14000:	add	ip, pc, #0, 12
   14004:	add	ip, ip, #88, 20	; 0x58000
   14008:	ldr	pc, [ip, #48]!	; 0x30

0001400c <puts@plt>:
   1400c:	add	ip, pc, #0, 12
   14010:	add	ip, ip, #88, 20	; 0x58000
   14014:	ldr	pc, [ip, #40]!	; 0x28

00014018 <malloc@plt>:
   14018:	add	ip, pc, #0, 12
   1401c:	add	ip, ip, #88, 20	; 0x58000
   14020:	ldr	pc, [ip, #32]!

00014024 <__libc_start_main@plt>:
   14024:	add	ip, pc, #0, 12
   14028:	add	ip, ip, #88, 20	; 0x58000
   1402c:	ldr	pc, [ip, #24]!

00014030 <__ctype_toupper_loc@plt>:
   14030:	add	ip, pc, #0, 12
   14034:	add	ip, ip, #88, 20	; 0x58000
   14038:	ldr	pc, [ip, #16]!

0001403c <__gmon_start__@plt>:
   1403c:	add	ip, pc, #0, 12
   14040:	add	ip, ip, #88, 20	; 0x58000
   14044:	ldr	pc, [ip, #8]!

00014048 <exit@plt>:
   14048:	add	ip, pc, #0, 12
   1404c:	add	ip, ip, #88, 20	; 0x58000
   14050:	ldr	pc, [ip, #0]!

00014054 <strlen@plt>:
   14054:	add	ip, pc, #0, 12
   14058:	add	ip, ip, #356352	; 0x57000
   1405c:	ldr	pc, [ip, #4088]!	; 0xff8

00014060 <strchr@plt>:
   14060:	add	ip, pc, #0, 12
   14064:	add	ip, ip, #356352	; 0x57000
   14068:	ldr	pc, [ip, #4080]!	; 0xff0

0001406c <fprintf@plt>:
   1406c:	add	ip, pc, #0, 12
   14070:	add	ip, ip, #356352	; 0x57000
   14074:	ldr	pc, [ip, #4072]!	; 0xfe8

00014078 <posix_memalign@plt>:
   14078:	add	ip, pc, #0, 12
   1407c:	add	ip, ip, #356352	; 0x57000
   14080:	ldr	pc, [ip, #4064]!	; 0xfe0

00014084 <memset@plt>:
   14084:	add	ip, pc, #0, 12
   14088:	add	ip, ip, #356352	; 0x57000
   1408c:	ldr	pc, [ip, #4056]!	; 0xfd8

00014090 <strncpy@plt>:
   14090:	add	ip, pc, #0, 12
   14094:	add	ip, ip, #356352	; 0x57000
   14098:	ldr	pc, [ip, #4048]!	; 0xfd0

0001409c <strtod@plt>:
   1409c:	add	ip, pc, #0, 12
   140a0:	add	ip, ip, #356352	; 0x57000
   140a4:	ldr	pc, [ip, #4040]!	; 0xfc8

000140a8 <memchr@plt>:
   140a8:	add	ip, pc, #0, 12
   140ac:	add	ip, ip, #356352	; 0x57000
   140b0:	ldr	pc, [ip, #4032]!	; 0xfc0

000140b4 <fclose@plt>:
   140b4:	add	ip, pc, #0, 12
   140b8:	add	ip, ip, #356352	; 0x57000
   140bc:	ldr	pc, [ip, #4024]!	; 0xfb8

000140c0 <vfprintf@plt>:
   140c0:	add	ip, pc, #0, 12
   140c4:	add	ip, ip, #356352	; 0x57000
   140c8:	ldr	pc, [ip, #4016]!	; 0xfb0

000140cc <fputc@plt>:
   140cc:	add	ip, pc, #0, 12
   140d0:	add	ip, ip, #356352	; 0x57000
   140d4:	ldr	pc, [ip, #4008]!	; 0xfa8

000140d8 <sprintf@plt>:
   140d8:	add	ip, pc, #0, 12
   140dc:	add	ip, ip, #356352	; 0x57000
   140e0:	ldr	pc, [ip, #4000]!	; 0xfa0

000140e4 <vsnprintf@plt>:
   140e4:	add	ip, pc, #0, 12
   140e8:	add	ip, ip, #356352	; 0x57000
   140ec:	ldr	pc, [ip, #3992]!	; 0xf98

000140f0 <qsort@plt>:
   140f0:	add	ip, pc, #0, 12
   140f4:	add	ip, ip, #356352	; 0x57000
   140f8:	ldr	pc, [ip, #3984]!	; 0xf90

000140fc <fseek@plt>:
   140fc:	add	ip, pc, #0, 12
   14100:	add	ip, ip, #356352	; 0x57000
   14104:	ldr	pc, [ip, #3976]!	; 0xf88

00014108 <strncmp@plt>:
   14108:	add	ip, pc, #0, 12
   1410c:	add	ip, ip, #356352	; 0x57000
   14110:	ldr	pc, [ip, #3968]!	; 0xf80

00014114 <abort@plt>:
   14114:	add	ip, pc, #0, 12
   14118:	add	ip, ip, #356352	; 0x57000
   1411c:	ldr	pc, [ip, #3960]!	; 0xf78

00014120 <__assert_fail@plt>:
   14120:	add	ip, pc, #0, 12
   14124:	add	ip, ip, #356352	; 0x57000
   14128:	ldr	pc, [ip, #3952]!	; 0xf70

Disassembly of section .text:

00014130 <main@@Base>:
   14130:	cmp	r0, #1
   14134:	strd	r4, [sp, #-20]!	; 0xffffffec
   14138:	strd	r6, [sp, #8]
   1413c:	str	lr, [sp, #16]
   14140:	sub	sp, sp, #228	; 0xe4
   14144:	ble	14488 <main@@Base+0x358>
   14148:	lsl	r5, r0, #2
   1414c:	mov	r4, r0
   14150:	mov	r0, sp
   14154:	mov	r6, r1
   14158:	bl	152c8 <flatcc_init_options@@Base>
   1415c:	mov	r0, r5
   14160:	bl	14018 <malloc@plt>
   14164:	cmp	r0, #0
   14168:	str	r0, [sp, #200]	; 0xc8
   1416c:	beq	144d0 <main@@Base+0x3a0>
   14170:	mov	r0, r5
   14174:	bl	14018 <malloc@plt>
   14178:	cmp	r0, #0
   1417c:	str	r0, [sp, #204]	; 0xcc
   14180:	beq	144a0 <main@@Base+0x370>
   14184:	mov	r1, r6
   14188:	mov	r0, r4
   1418c:	mov	r2, sp
   14190:	bl	15150 <parse_opts@@Base>
   14194:	ldr	r3, [sp, #156]	; 0x9c
   14198:	cmp	r3, #0
   1419c:	bne	14240 <main@@Base+0x110>
   141a0:	ldr	r2, [sp, #212]	; 0xd4
   141a4:	str	r3, [sp, #148]	; 0x94
   141a8:	cmp	r2, #0
   141ac:	bne	143d4 <main@@Base+0x2a4>
   141b0:	ldr	r3, [sp, #144]	; 0x90
   141b4:	cmp	r3, #0
   141b8:	beq	14440 <main@@Base+0x310>
   141bc:	ldr	r3, [sp, #180]	; 0xb4
   141c0:	cmp	r3, #0
   141c4:	bne	14440 <main@@Base+0x310>
   141c8:	mov	r0, sp
   141cc:	mov	r2, r3
   141d0:	mov	r1, r3
   141d4:	bl	1538c <flatcc_create_context@@Base>
   141d8:	subs	r5, r0, #0
   141dc:	beq	14310 <main@@Base+0x1e0>
   141e0:	bl	15af8 <flatcc_generate_files@@Base>
   141e4:	subs	r4, r0, #0
   141e8:	beq	143c0 <main@@Base+0x290>
   141ec:	mov	r0, r5
   141f0:	movw	r4, #49320	; 0xc0a8
   141f4:	movt	r4, #6
   141f8:	bl	15c2c <flatcc_destroy_context@@Base>
   141fc:	movw	r0, #3316	; 0xcf4
   14200:	movt	r0, #4
   14204:	ldr	r3, [r4]
   14208:	mov	r2, #14
   1420c:	mov	r1, #1
   14210:	mvn	r4, #0
   14214:	bl	13ff4 <fwrite@plt>
   14218:	ldr	r0, [sp, #200]	; 0xc8
   1421c:	bl	13fac <free@plt>
   14220:	ldr	r0, [sp, #204]	; 0xcc
   14224:	bl	13fac <free@plt>
   14228:	mov	r0, r4
   1422c:	add	sp, sp, #228	; 0xe4
   14230:	ldrd	r4, [sp]
   14234:	ldrd	r6, [sp, #8]
   14238:	add	sp, sp, #16
   1423c:	pop	{pc}		; (ldr pc, [sp], #4)
   14240:	ldr	r1, [sp, #144]	; 0x90
   14244:	cmp	r1, #0
   14248:	beq	14334 <main@@Base+0x204>
   1424c:	ldr	r2, [sp, #212]	; 0xd4
   14250:	mov	r3, #1
   14254:	str	r3, [sp, #148]	; 0x94
   14258:	cmp	r2, #0
   1425c:	beq	141bc <main@@Base+0x8c>
   14260:	ldr	r3, [sp, #180]	; 0xb4
   14264:	cmp	r3, #0
   14268:	beq	14364 <main@@Base+0x234>
   1426c:	ldr	r3, [sp, #108]	; 0x6c
   14270:	cmp	r3, #0
   14274:	bne	144f8 <main@@Base+0x3c8>
   14278:	ldr	r3, [sp, #124]	; 0x7c
   1427c:	cmp	r3, #0
   14280:	bne	1441c <main@@Base+0x2ec>
   14284:	ldr	r3, [sp, #120]	; 0x78
   14288:	cmp	r3, #0
   1428c:	beq	1429c <main@@Base+0x16c>
   14290:	ldr	r3, [sp, #116]	; 0x74
   14294:	cmp	r3, #0
   14298:	beq	14464 <main@@Base+0x334>
   1429c:	ldr	r4, [sp, #204]	; 0xcc
   142a0:	cmp	r2, #0
   142a4:	movgt	r6, #0
   142a8:	movgt	r7, #1
   142ac:	subgt	r4, r4, #4
   142b0:	bgt	142f4 <main@@Base+0x1c4>
   142b4:	b	143cc <main@@Base+0x29c>
   142b8:	ldr	r1, [r4]
   142bc:	bl	154b4 <flatcc_parse_file@@Base>
   142c0:	cmp	r0, #0
   142c4:	bne	141ec <main@@Base+0xbc>
   142c8:	mov	r0, r5
   142cc:	bl	15af8 <flatcc_generate_files@@Base>
   142d0:	cmp	r0, #0
   142d4:	bne	141ec <main@@Base+0xbc>
   142d8:	mov	r0, r5
   142dc:	add	r6, r6, #1
   142e0:	bl	15c2c <flatcc_destroy_context@@Base>
   142e4:	ldr	r3, [sp, #212]	; 0xd4
   142e8:	str	r7, [sp, #128]	; 0x80
   142ec:	cmp	r3, r6
   142f0:	ble	143cc <main@@Base+0x29c>
   142f4:	mov	r3, #0
   142f8:	mov	r0, sp
   142fc:	ldr	r1, [r4, #4]!
   14300:	mov	r2, r3
   14304:	bl	1538c <flatcc_create_context@@Base>
   14308:	subs	r5, r0, #0
   1430c:	bne	142b8 <main@@Base+0x188>
   14310:	movw	r4, #49320	; 0xc0a8
   14314:	movt	r4, #6
   14318:	movw	r0, #3056	; 0xbf0
   1431c:	movt	r0, #4
   14320:	ldr	r3, [r4]
   14324:	mov	r2, #49	; 0x31
   14328:	mov	r1, #1
   1432c:	bl	13ff4 <fwrite@plt>
   14330:	b	141fc <main@@Base+0xcc>
   14334:	ldr	r2, [sp, #212]	; 0xd4
   14338:	str	r1, [sp, #148]	; 0x94
   1433c:	cmp	r2, #0
   14340:	beq	14440 <main@@Base+0x310>
   14344:	ldr	r1, [sp, #180]	; 0xb4
   14348:	cmp	r1, #0
   1434c:	bne	1426c <main@@Base+0x13c>
   14350:	cmp	r3, #0
   14354:	bne	14364 <main@@Base+0x234>
   14358:	ldr	r0, [sp, #160]	; 0xa0
   1435c:	cmp	r0, #0
   14360:	beq	1436c <main@@Base+0x23c>
   14364:	mov	r3, #1
   14368:	str	r3, [sp, #152]	; 0x98
   1436c:	ldr	r3, [sp, #120]	; 0x78
   14370:	cmp	r3, #0
   14374:	beq	14384 <main@@Base+0x254>
   14378:	ldr	r3, [sp, #116]	; 0x74
   1437c:	cmp	r3, #0
   14380:	beq	14464 <main@@Base+0x334>
   14384:	ldr	r3, [sp, #108]	; 0x6c
   14388:	cmp	r3, #0
   1438c:	beq	1429c <main@@Base+0x16c>
   14390:	ldr	r3, [sp, #124]	; 0x7c
   14394:	cmp	r3, #0
   14398:	beq	1429c <main@@Base+0x16c>
   1439c:	movw	r4, #49320	; 0xc0a8
   143a0:	movt	r4, #6
   143a4:	movw	r0, #3276	; 0xccc
   143a8:	movt	r0, #4
   143ac:	ldr	r3, [r4]
   143b0:	mov	r2, #38	; 0x26
   143b4:	mov	r1, #1
   143b8:	bl	13ff4 <fwrite@plt>
   143bc:	b	141fc <main@@Base+0xcc>
   143c0:	mov	r0, r5
   143c4:	bl	15c2c <flatcc_destroy_context@@Base>
   143c8:	b	14218 <main@@Base+0xe8>
   143cc:	mov	r4, #0
   143d0:	b	14218 <main@@Base+0xe8>
   143d4:	ldr	r0, [sp, #152]	; 0x98
   143d8:	ldr	r1, [sp, #180]	; 0xb4
   143dc:	cmp	r0, #0
   143e0:	bne	14348 <main@@Base+0x218>
   143e4:	ldr	r3, [sp, #144]	; 0x90
   143e8:	ldr	r0, [sp, #160]	; 0xa0
   143ec:	ldr	lr, [sp, #164]	; 0xa4
   143f0:	ldr	ip, [sp, #168]	; 0xa8
   143f4:	orr	r3, r0, r3
   143f8:	orr	r3, r3, lr
   143fc:	orrs	r3, r3, ip
   14400:	bne	14410 <main@@Base+0x2e0>
   14404:	cmp	r1, #0
   14408:	beq	14364 <main@@Base+0x234>
   1440c:	b	1436c <main@@Base+0x23c>
   14410:	cmp	r1, #0
   14414:	bne	1426c <main@@Base+0x13c>
   14418:	b	1435c <main@@Base+0x22c>
   1441c:	movw	r4, #49320	; 0xc0a8
   14420:	movt	r4, #6
   14424:	movw	r0, #3168	; 0xc60
   14428:	movt	r0, #4
   1442c:	ldr	r3, [r4]
   14430:	mov	r2, #58	; 0x3a
   14434:	mov	r1, #1
   14438:	bl	13ff4 <fwrite@plt>
   1443c:	b	141fc <main@@Base+0xcc>
   14440:	movw	r4, #49320	; 0xc0a8
   14444:	movt	r4, #6
   14448:	movw	r0, #3036	; 0xbdc
   1444c:	movt	r0, #4
   14450:	ldr	r3, [r4]
   14454:	mov	r2, #17
   14458:	mov	r1, #1
   1445c:	bl	13ff4 <fwrite@plt>
   14460:	b	141fc <main@@Base+0xcc>
   14464:	movw	r4, #49320	; 0xc0a8
   14468:	movt	r4, #6
   1446c:	movw	r0, #3228	; 0xc9c
   14470:	movt	r0, #4
   14474:	ldr	r3, [r4]
   14478:	mov	r2, #44	; 0x2c
   1447c:	mov	r1, #1
   14480:	bl	13ff4 <fwrite@plt>
   14484:	b	141fc <main@@Base+0xcc>
   14488:	movw	r3, #49320	; 0xc0a8
   1448c:	movt	r3, #6
   14490:	ldr	r0, [r3]
   14494:	bl	1460c <usage@@Base>
   14498:	mvn	r0, #0
   1449c:	bl	14048 <exit@plt>
   144a0:	movw	r3, #49320	; 0xc0a8
   144a4:	movt	r3, #6
   144a8:	mov	r2, #26
   144ac:	mov	r1, #1
   144b0:	ldr	r3, [r3]
   144b4:	movw	r0, #3008	; 0xbc0
   144b8:	movt	r0, #4
   144bc:	bl	13ff4 <fwrite@plt>
   144c0:	ldr	r0, [sp, #200]	; 0xc8
   144c4:	bl	13fac <free@plt>
   144c8:	mvn	r0, #0
   144cc:	bl	14048 <exit@plt>
   144d0:	movw	r3, #49320	; 0xc0a8
   144d4:	movt	r3, #6
   144d8:	movw	r0, #3008	; 0xbc0
   144dc:	movt	r0, #4
   144e0:	ldr	r3, [r3]
   144e4:	mov	r2, #26
   144e8:	mov	r1, #1
   144ec:	bl	13ff4 <fwrite@plt>
   144f0:	mvn	r0, #0
   144f4:	bl	14048 <exit@plt>
   144f8:	movw	r4, #49320	; 0xc0a8
   144fc:	movt	r4, #6
   14500:	movw	r0, #3108	; 0xc24
   14504:	movt	r0, #4
   14508:	ldr	r3, [r4]
   1450c:	mov	r2, #57	; 0x39
   14510:	mov	r1, #1
   14514:	bl	13ff4 <fwrite@plt>
   14518:	b	141fc <main@@Base+0xcc>

0001451c <_start@@Base>:
   1451c:	mov	fp, #0
   14520:	mov	lr, #0
   14524:	pop	{r1}		; (ldr r1, [sp], #4)
   14528:	mov	r2, sp
   1452c:	push	{r2}		; (str r2, [sp, #-4]!)
   14530:	push	{r0}		; (str r0, [sp, #-4]!)
   14534:	ldr	ip, [pc, #16]	; 1454c <_start@@Base+0x30>
   14538:	push	{ip}		; (str ip, [sp, #-4]!)
   1453c:	ldr	r0, [pc, #12]	; 14550 <_start@@Base+0x34>
   14540:	ldr	r3, [pc, #12]	; 14554 <_start@@Base+0x38>
   14544:	bl	14024 <__libc_start_main@plt>
   14548:	bl	14114 <abort@plt>
   1454c:	andeq	pc, r3, r0, asr #12
   14550:	andeq	r4, r1, r0, lsr r1
   14554:	andeq	pc, r3, r0, ror #11
   14558:	ldr	r3, [pc, #20]	; 14574 <_start@@Base+0x58>
   1455c:	ldr	r2, [pc, #20]	; 14578 <_start@@Base+0x5c>
   14560:	add	r3, pc, r3
   14564:	ldr	r2, [r3, r2]
   14568:	cmp	r2, #0
   1456c:	bxeq	lr
   14570:	b	1403c <__gmon_start__@plt>
   14574:	muleq	r5, r8, sl
   14578:	muleq	r0, ip, r0
   1457c:	ldr	r0, [pc, #24]	; 1459c <_start@@Base+0x80>
   14580:	ldr	r3, [pc, #24]	; 145a0 <_start@@Base+0x84>
   14584:	cmp	r3, r0
   14588:	bxeq	lr
   1458c:	ldr	r3, [pc, #16]	; 145a4 <_start@@Base+0x88>
   14590:	cmp	r3, #0
   14594:	bxeq	lr
   14598:	bx	r3
   1459c:	andeq	ip, r6, r8, lsr #1
   145a0:	andeq	ip, r6, r8, lsr #1
   145a4:	andeq	r0, r0, r0
   145a8:	ldr	r0, [pc, #36]	; 145d4 <_start@@Base+0xb8>
   145ac:	ldr	r1, [pc, #36]	; 145d8 <_start@@Base+0xbc>
   145b0:	sub	r1, r1, r0
   145b4:	asr	r1, r1, #2
   145b8:	add	r1, r1, r1, lsr #31
   145bc:	asrs	r1, r1, #1
   145c0:	bxeq	lr
   145c4:	ldr	r3, [pc, #16]	; 145dc <_start@@Base+0xc0>
   145c8:	cmp	r3, #0
   145cc:	bxeq	lr
   145d0:	bx	r3
   145d4:	andeq	ip, r6, r8, lsr #1
   145d8:	andeq	ip, r6, r8, lsr #1
   145dc:	andeq	r0, r0, r0
   145e0:	push	{r4, lr}
   145e4:	ldr	r4, [pc, #24]	; 14604 <_start@@Base+0xe8>
   145e8:	ldrb	r3, [r4]
   145ec:	cmp	r3, #0
   145f0:	popne	{r4, pc}
   145f4:	bl	1457c <_start@@Base+0x60>
   145f8:	mov	r3, #1
   145fc:	strb	r3, [r4]
   14600:	pop	{r4, pc}
   14604:	strheq	ip, [r6], -r0
   14608:	b	145a8 <_start@@Base+0x8c>

0001460c <usage@@Base>:
   1460c:	movw	r2, #63060	; 0xf654
   14610:	movt	r2, #3
   14614:	str	r4, [sp, #-8]!
   14618:	movw	r1, #3500	; 0xdac
   1461c:	movt	r1, #4
   14620:	str	lr, [sp, #4]
   14624:	mov	r4, r0
   14628:	bl	1406c <fprintf@plt>
   1462c:	mov	r0, r4
   14630:	movw	r2, #63116	; 0xf68c
   14634:	movt	r2, #3
   14638:	movw	r1, #63124	; 0xf694
   1463c:	movt	r1, #3
   14640:	bl	1406c <fprintf@plt>
   14644:	mov	r3, r4
   14648:	mov	r2, #35	; 0x23
   1464c:	mov	r1, #1
   14650:	movw	r0, #63140	; 0xf6a4
   14654:	movt	r0, #3
   14658:	bl	13ff4 <fwrite@plt>
   1465c:	mov	r3, r4
   14660:	movw	r0, #63176	; 0xf6c8
   14664:	movt	r0, #3
   14668:	movw	r2, #1409	; 0x581
   1466c:	ldr	r4, [sp]
   14670:	mov	r1, #1
   14674:	ldr	lr, [sp, #4]
   14678:	add	sp, sp, #8
   1467c:	b	13ff4 <fwrite@plt>

00014680 <help@@Base>:
   14680:	movw	r2, #63060	; 0xf654
   14684:	movt	r2, #3
   14688:	str	r4, [sp, #-8]!
   1468c:	movw	r1, #3500	; 0xdac
   14690:	movt	r1, #4
   14694:	str	lr, [sp, #4]
   14698:	mov	r4, r0
   1469c:	bl	1406c <fprintf@plt>
   146a0:	mov	r0, r4
   146a4:	movw	r2, #63116	; 0xf68c
   146a8:	movt	r2, #3
   146ac:	movw	r1, #63124	; 0xf694
   146b0:	movt	r1, #3
   146b4:	bl	1406c <fprintf@plt>
   146b8:	mov	r3, r4
   146bc:	mov	r2, #35	; 0x23
   146c0:	mov	r1, #1
   146c4:	movw	r0, #63140	; 0xf6a4
   146c8:	movt	r0, #3
   146cc:	bl	13ff4 <fwrite@plt>
   146d0:	mov	r3, r4
   146d4:	movw	r2, #1409	; 0x581
   146d8:	mov	r1, #1
   146dc:	movw	r0, #63176	; 0xf6c8
   146e0:	movt	r0, #3
   146e4:	bl	13ff4 <fwrite@plt>
   146e8:	mov	r3, r4
   146ec:	movw	r0, #64588	; 0xfc4c
   146f0:	movt	r0, #3
   146f4:	movw	r2, #3140	; 0xc44
   146f8:	ldr	r4, [sp]
   146fc:	mov	r1, #1
   14700:	ldr	lr, [sp, #4]
   14704:	add	sp, sp, #8
   14708:	b	13ff4 <fwrite@plt>

0001470c <parse_bool_arg@@Base>:
   1470c:	movw	r1, #41608	; 0xa288
   14710:	movt	r1, #4
   14714:	str	r4, [sp, #-8]!
   14718:	mov	r4, r0
   1471c:	str	lr, [sp, #4]
   14720:	bl	13f94 <strcmp@plt>
   14724:	cmp	r0, #0
   14728:	beq	14778 <parse_bool_arg@@Base+0x6c>
   1472c:	movw	r1, #2196	; 0x894
   14730:	movt	r1, #4
   14734:	mov	r0, r4
   14738:	bl	13f94 <strcmp@plt>
   1473c:	cmp	r0, #0
   14740:	beq	14778 <parse_bool_arg@@Base+0x6c>
   14744:	movw	r1, #63120	; 0xf690
   14748:	movt	r1, #3
   1474c:	mov	r0, r4
   14750:	bl	13f94 <strcmp@plt>
   14754:	cmp	r0, #0
   14758:	beq	14774 <parse_bool_arg@@Base+0x68>
   1475c:	movw	r1, #2200	; 0x898
   14760:	movt	r1, #4
   14764:	mov	r0, r4
   14768:	bl	13f94 <strcmp@plt>
   1476c:	cmp	r0, #0
   14770:	bne	14784 <parse_bool_arg@@Base+0x78>
   14774:	mov	r0, #1
   14778:	ldr	r4, [sp]
   1477c:	add	sp, sp, #4
   14780:	pop	{pc}		; (ldr pc, [sp], #4)
   14784:	movw	r3, #49320	; 0xc0a8
   14788:	movt	r3, #6
   1478c:	mov	r2, r4
   14790:	movw	r1, #2204	; 0x89c
   14794:	movt	r1, #4
   14798:	ldr	r0, [r3]
   1479c:	bl	1406c <fprintf@plt>
   147a0:	ldr	r4, [sp]
   147a4:	add	sp, sp, #4
   147a8:	mvn	r0, #0
   147ac:	pop	{pc}		; (ldr pc, [sp], #4)

000147b0 <match_long_arg@@Base>:
   147b0:	strd	r4, [sp, #-16]!
   147b4:	mov	r5, r0
   147b8:	mov	r4, r2
   147bc:	str	r6, [sp, #8]
   147c0:	str	lr, [sp, #12]
   147c4:	bl	14108 <strncmp@plt>
   147c8:	cmp	r0, #0
   147cc:	movne	r0, #0
   147d0:	bne	147e8 <match_long_arg@@Base+0x38>
   147d4:	mov	r0, r5
   147d8:	bl	14054 <strlen@plt>
   147dc:	sub	r0, r0, r4
   147e0:	clz	r0, r0
   147e4:	lsr	r0, r0, #5
   147e8:	ldrd	r4, [sp]
   147ec:	ldr	r6, [sp, #8]
   147f0:	add	sp, sp, #12
   147f4:	pop	{pc}		; (ldr pc, [sp], #4)

000147f8 <set_opt@@Base>:
   147f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   147fc:	mov	r4, r1
   14800:	strd	r6, [sp, #8]
   14804:	strd	r8, [sp, #16]
   14808:	mov	r9, r0
   1480c:	mov	r0, r1
   14810:	strd	sl, [sp, #24]
   14814:	mov	r8, r2
   14818:	str	lr, [sp, #32]
   1481c:	sub	sp, sp, #4
   14820:	bl	14054 <strlen@plt>
   14824:	mov	r7, r0
   14828:	mov	r1, #61	; 0x3d
   1482c:	mov	r0, r4
   14830:	bl	14060 <strchr@plt>
   14834:	ldrb	r6, [r4]
   14838:	subs	r5, r0, #0
   1483c:	addne	r8, r5, #1
   14840:	subne	r7, r5, r4
   14844:	cmp	r6, #104	; 0x68
   14848:	beq	14a58 <set_opt@@Base+0x260>
   1484c:	movw	r0, #2272	; 0x8e0
   14850:	movt	r0, #4
   14854:	mov	r1, r4
   14858:	bl	13f94 <strcmp@plt>
   1485c:	cmp	r0, #0
   14860:	beq	14a58 <set_opt@@Base+0x260>
   14864:	movw	r0, #2280	; 0x8e8
   14868:	movt	r0, #4
   1486c:	mov	r1, r4
   14870:	bl	13f94 <strcmp@plt>
   14874:	subs	sl, r0, #0
   14878:	beq	14ae4 <set_opt@@Base+0x2ec>
   1487c:	movw	r0, #2292	; 0x8f4
   14880:	movt	r0, #4
   14884:	mov	r1, r4
   14888:	bl	13f94 <strcmp@plt>
   1488c:	cmp	r0, #0
   14890:	moveq	r3, #1
   14894:	streq	r3, [r9, #108]	; 0x6c
   14898:	beq	14a3c <set_opt@@Base+0x244>
   1489c:	movw	r0, #2300	; 0x8fc
   148a0:	movt	r0, #4
   148a4:	mov	r1, r4
   148a8:	bl	13f94 <strcmp@plt>
   148ac:	cmp	r0, #0
   148b0:	moveq	r3, #1
   148b4:	streq	r3, [r9, #180]	; 0xb4
   148b8:	beq	14a3c <set_opt@@Base+0x244>
   148bc:	movw	r0, #2308	; 0x904
   148c0:	movt	r0, #4
   148c4:	mov	r1, r4
   148c8:	bl	13f94 <strcmp@plt>
   148cc:	cmp	r0, #0
   148d0:	moveq	r3, #1
   148d4:	streq	r3, [r9, #164]	; 0xa4
   148d8:	beq	14a3c <set_opt@@Base+0x244>
   148dc:	movw	r0, #2324	; 0x914
   148e0:	movt	r0, #4
   148e4:	mov	r1, r4
   148e8:	bl	13f94 <strcmp@plt>
   148ec:	cmp	r0, #0
   148f0:	moveq	r3, #1
   148f4:	streq	r3, [r9, #168]	; 0xa8
   148f8:	beq	14a3c <set_opt@@Base+0x244>
   148fc:	movw	r0, #2340	; 0x924
   14900:	movt	r0, #4
   14904:	mov	r1, r4
   14908:	bl	13f94 <strcmp@plt>
   1490c:	cmp	r0, #0
   14910:	moveq	r3, #1
   14914:	streq	r3, [r9, #164]	; 0xa4
   14918:	streq	r3, [r9, #168]	; 0xa8
   1491c:	beq	14a3c <set_opt@@Base+0x244>
   14920:	movw	r0, #2348	; 0x92c
   14924:	movt	r0, #4
   14928:	mov	r2, r7
   1492c:	mov	r1, r4
   14930:	bl	14108 <strncmp@plt>
   14934:	cmp	r0, #0
   14938:	cmpeq	r7, #17
   1493c:	beq	14bb8 <set_opt@@Base+0x3c0>
   14940:	movw	r0, #2484	; 0x9b4
   14944:	movt	r0, #4
   14948:	mov	r2, r7
   1494c:	mov	r1, r4
   14950:	bl	14108 <strncmp@plt>
   14954:	sub	sl, r7, #14
   14958:	cmp	r0, #0
   1495c:	cmpeq	r7, #14
   14960:	clz	sl, sl
   14964:	lsr	sl, sl, #5
   14968:	beq	14b24 <set_opt@@Base+0x32c>
   1496c:	movw	r0, #3264	; 0xcc0
   14970:	movt	r0, #4
   14974:	mov	r2, r7
   14978:	mov	r1, r4
   1497c:	bl	14108 <strncmp@plt>
   14980:	sub	fp, r7, #8
   14984:	cmp	r0, #0
   14988:	cmpeq	r7, #8
   1498c:	clz	fp, fp
   14990:	lsr	fp, fp, #5
   14994:	beq	14c64 <set_opt@@Base+0x46c>
   14998:	movw	r0, #2592	; 0xa20
   1499c:	movt	r0, #4
   149a0:	mov	r2, r7
   149a4:	mov	r1, r4
   149a8:	bl	14108 <strncmp@plt>
   149ac:	cmp	r7, #10
   149b0:	cmpeq	r0, #0
   149b4:	beq	14cc0 <set_opt@@Base+0x4c8>
   149b8:	movw	r0, #2640	; 0xa50
   149bc:	movt	r0, #4
   149c0:	mov	r2, r7
   149c4:	mov	r1, r4
   149c8:	bl	14108 <strncmp@plt>
   149cc:	cmp	r0, #0
   149d0:	moveq	r0, fp
   149d4:	movne	r0, #0
   149d8:	cmp	r0, #0
   149dc:	bne	14cd8 <set_opt@@Base+0x4e0>
   149e0:	movw	r0, #2692	; 0xa84
   149e4:	movt	r0, #4
   149e8:	mov	r2, r7
   149ec:	mov	r1, r4
   149f0:	bl	14108 <strncmp@plt>
   149f4:	cmp	r0, #0
   149f8:	moveq	r0, sl
   149fc:	movne	r0, #0
   14a00:	cmp	r0, #0
   14a04:	bne	14cf0 <set_opt@@Base+0x4f8>
   14a08:	mov	r2, r7
   14a0c:	movw	r0, #2744	; 0xab8
   14a10:	movt	r0, #4
   14a14:	mov	r1, r4
   14a18:	bl	147b0 <match_long_arg@@Base>
   14a1c:	cmp	r0, #0
   14a20:	beq	14d08 <set_opt@@Base+0x510>
   14a24:	cmp	r8, #0
   14a28:	beq	15050 <set_opt@@Base+0x858>
   14a2c:	cmp	r5, #0
   14a30:	str	r8, [r9, #192]	; 0xc0
   14a34:	beq	14c80 <set_opt@@Base+0x488>
   14a38:	mov	r0, #0
   14a3c:	add	sp, sp, #4
   14a40:	ldrd	r4, [sp]
   14a44:	ldrd	r6, [sp, #8]
   14a48:	ldrd	r8, [sp, #16]
   14a4c:	ldrd	sl, [sp, #24]
   14a50:	add	sp, sp, #32
   14a54:	pop	{pc}		; (ldr pc, [sp], #4)
   14a58:	movw	r3, #49324	; 0xc0ac
   14a5c:	movt	r3, #6
   14a60:	ldr	r4, [r3]
   14a64:	movw	r2, #63060	; 0xf654
   14a68:	movt	r2, #3
   14a6c:	movw	r1, #3500	; 0xdac
   14a70:	movt	r1, #4
   14a74:	mov	r0, r4
   14a78:	bl	1406c <fprintf@plt>
   14a7c:	mov	r0, r4
   14a80:	movw	r2, #63116	; 0xf68c
   14a84:	movt	r2, #3
   14a88:	movw	r1, #63124	; 0xf694
   14a8c:	movt	r1, #3
   14a90:	bl	1406c <fprintf@plt>
   14a94:	mov	r3, r4
   14a98:	mov	r2, #35	; 0x23
   14a9c:	mov	r1, #1
   14aa0:	movw	r0, #63140	; 0xf6a4
   14aa4:	movt	r0, #3
   14aa8:	bl	13ff4 <fwrite@plt>
   14aac:	mov	r3, r4
   14ab0:	movw	r2, #1409	; 0x581
   14ab4:	mov	r1, #1
   14ab8:	movw	r0, #63176	; 0xf6c8
   14abc:	movt	r0, #3
   14ac0:	bl	13ff4 <fwrite@plt>
   14ac4:	mov	r3, r4
   14ac8:	movw	r0, #64588	; 0xfc4c
   14acc:	movt	r0, #3
   14ad0:	movw	r2, #3140	; 0xc44
   14ad4:	mov	r1, #1
   14ad8:	bl	13ff4 <fwrite@plt>
   14adc:	mov	r0, #0
   14ae0:	bl	14048 <exit@plt>
   14ae4:	movw	r4, #49320	; 0xc0a8
   14ae8:	movt	r4, #6
   14aec:	movw	r2, #63060	; 0xf654
   14af0:	movt	r2, #3
   14af4:	ldr	r0, [r4]
   14af8:	movw	r1, #3500	; 0xdac
   14afc:	movt	r1, #4
   14b00:	bl	1406c <fprintf@plt>
   14b04:	movw	r2, #63116	; 0xf68c
   14b08:	movt	r2, #3
   14b0c:	ldr	r0, [r4]
   14b10:	movw	r1, #63124	; 0xf694
   14b14:	movt	r1, #3
   14b18:	bl	1406c <fprintf@plt>
   14b1c:	mov	r0, sl
   14b20:	bl	14048 <exit@plt>
   14b24:	cmp	r8, #0
   14b28:	beq	14fe0 <set_opt@@Base+0x7e8>
   14b2c:	movw	r1, #41608	; 0xa288
   14b30:	movt	r1, #4
   14b34:	mov	r0, r8
   14b38:	bl	13f94 <strcmp@plt>
   14b3c:	cmp	r0, #0
   14b40:	beq	14c88 <set_opt@@Base+0x490>
   14b44:	movw	r1, #2196	; 0x894
   14b48:	movt	r1, #4
   14b4c:	mov	r0, r8
   14b50:	bl	13f94 <strcmp@plt>
   14b54:	cmp	r0, #0
   14b58:	beq	14c88 <set_opt@@Base+0x490>
   14b5c:	movw	r1, #63120	; 0xf690
   14b60:	movt	r1, #3
   14b64:	mov	r0, r8
   14b68:	bl	13f94 <strcmp@plt>
   14b6c:	cmp	r0, #0
   14b70:	beq	14ca8 <set_opt@@Base+0x4b0>
   14b74:	movw	r1, #2200	; 0x898
   14b78:	movt	r1, #4
   14b7c:	mov	r0, r8
   14b80:	bl	13f94 <strcmp@plt>
   14b84:	cmp	r0, #0
   14b88:	beq	14ca8 <set_opt@@Base+0x4b0>
   14b8c:	movw	r3, #49320	; 0xc0a8
   14b90:	movt	r3, #6
   14b94:	mov	r2, r8
   14b98:	movw	r1, #2204	; 0x89c
   14b9c:	movt	r1, #4
   14ba0:	ldr	r0, [r3]
   14ba4:	bl	1406c <fprintf@plt>
   14ba8:	mvn	r3, #0
   14bac:	mov	r0, r3
   14bb0:	str	r3, [r9, #188]	; 0xbc
   14bb4:	bl	14048 <exit@plt>
   14bb8:	movw	r4, #49320	; 0xc0a8
   14bbc:	movt	r4, #6
   14bc0:	movw	r0, #2368	; 0x940
   14bc4:	movt	r0, #4
   14bc8:	ldr	r3, [r4]
   14bcc:	mov	r2, #112	; 0x70
   14bd0:	mov	r1, #1
   14bd4:	bl	13ff4 <fwrite@plt>
   14bd8:	cmp	r8, #0
   14bdc:	beq	15008 <set_opt@@Base+0x810>
   14be0:	movw	r1, #41608	; 0xa288
   14be4:	movt	r1, #4
   14be8:	mov	r0, r8
   14bec:	bl	13f94 <strcmp@plt>
   14bf0:	cmp	r0, #0
   14bf4:	beq	14c9c <set_opt@@Base+0x4a4>
   14bf8:	movw	r1, #2196	; 0x894
   14bfc:	movt	r1, #4
   14c00:	mov	r0, r8
   14c04:	bl	13f94 <strcmp@plt>
   14c08:	cmp	r0, #0
   14c0c:	beq	14c9c <set_opt@@Base+0x4a4>
   14c10:	movw	r1, #63120	; 0xf690
   14c14:	movt	r1, #3
   14c18:	mov	r0, r8
   14c1c:	bl	13f94 <strcmp@plt>
   14c20:	cmp	r0, #0
   14c24:	beq	14cb4 <set_opt@@Base+0x4bc>
   14c28:	movw	r1, #2200	; 0x898
   14c2c:	movt	r1, #4
   14c30:	mov	r0, r8
   14c34:	bl	13f94 <strcmp@plt>
   14c38:	cmp	r0, #0
   14c3c:	beq	14cb4 <set_opt@@Base+0x4bc>
   14c40:	mov	r2, r8
   14c44:	movw	r1, #2204	; 0x89c
   14c48:	movt	r1, #4
   14c4c:	ldr	r0, [r4]
   14c50:	bl	1406c <fprintf@plt>
   14c54:	mvn	r3, #0
   14c58:	mov	r0, r3
   14c5c:	str	r3, [r9, #184]	; 0xb8
   14c60:	bl	14048 <exit@plt>
   14c64:	cmp	r8, #0
   14c68:	beq	14e44 <set_opt@@Base+0x64c>
   14c6c:	mov	r3, #1
   14c70:	cmp	r5, #0
   14c74:	str	r3, [r9, #112]	; 0x70
   14c78:	str	r8, [r9, #116]	; 0x74
   14c7c:	bne	14a38 <set_opt@@Base+0x240>
   14c80:	mov	r0, #2
   14c84:	b	14a3c <set_opt@@Base+0x244>
   14c88:	mov	r3, #0
   14c8c:	str	r3, [r9, #188]	; 0xbc
   14c90:	cmp	r5, #0
   14c94:	bne	14a38 <set_opt@@Base+0x240>
   14c98:	b	14c80 <set_opt@@Base+0x488>
   14c9c:	mov	r3, #0
   14ca0:	str	r3, [r9, #184]	; 0xb8
   14ca4:	b	14c90 <set_opt@@Base+0x498>
   14ca8:	mov	r3, #1
   14cac:	str	r3, [r9, #188]	; 0xbc
   14cb0:	b	14c90 <set_opt@@Base+0x498>
   14cb4:	mov	r3, #1
   14cb8:	str	r3, [r9, #184]	; 0xb8
   14cbc:	b	14c90 <set_opt@@Base+0x498>
   14cc0:	cmp	r8, #0
   14cc4:	beq	15028 <set_opt@@Base+0x830>
   14cc8:	cmp	r5, #0
   14ccc:	str	r8, [r9, #120]	; 0x78
   14cd0:	bne	14a38 <set_opt@@Base+0x240>
   14cd4:	b	14c80 <set_opt@@Base+0x488>
   14cd8:	cmp	r8, #0
   14cdc:	beq	1503c <set_opt@@Base+0x844>
   14ce0:	cmp	r5, #0
   14ce4:	str	r8, [r9, #124]	; 0x7c
   14ce8:	bne	14a38 <set_opt@@Base+0x240>
   14cec:	b	14c80 <set_opt@@Base+0x488>
   14cf0:	cmp	r8, #0
   14cf4:	beq	15064 <set_opt@@Base+0x86c>
   14cf8:	cmp	r5, #0
   14cfc:	str	r8, [r9, #196]	; 0xc4
   14d00:	bne	14a38 <set_opt@@Base+0x240>
   14d04:	b	14c80 <set_opt@@Base+0x488>
   14d08:	sub	r3, r6, #45	; 0x2d
   14d0c:	cmp	r3, #74	; 0x4a
   14d10:	ldrls	pc, [pc, r3, lsl #2]
   14d14:	b	14fbc <set_opt@@Base+0x7c4>
   14d18:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14d1c:			; <UNDEFINED> instruction: 0x00014fbc
   14d20:			; <UNDEFINED> instruction: 0x00014fbc
   14d24:			; <UNDEFINED> instruction: 0x00014fbc
   14d28:			; <UNDEFINED> instruction: 0x00014fbc
   14d2c:			; <UNDEFINED> instruction: 0x00014fbc
   14d30:			; <UNDEFINED> instruction: 0x00014fbc
   14d34:			; <UNDEFINED> instruction: 0x00014fbc
   14d38:			; <UNDEFINED> instruction: 0x00014fbc
   14d3c:			; <UNDEFINED> instruction: 0x00014fbc
   14d40:			; <UNDEFINED> instruction: 0x00014fbc
   14d44:			; <UNDEFINED> instruction: 0x00014fbc
   14d48:			; <UNDEFINED> instruction: 0x00014fbc
   14d4c:			; <UNDEFINED> instruction: 0x00014fbc
   14d50:			; <UNDEFINED> instruction: 0x00014fbc
   14d54:			; <UNDEFINED> instruction: 0x00014fbc
   14d58:			; <UNDEFINED> instruction: 0x00014fbc
   14d5c:			; <UNDEFINED> instruction: 0x00014fbc
   14d60:			; <UNDEFINED> instruction: 0x00014fbc
   14d64:			; <UNDEFINED> instruction: 0x00014fbc
   14d68:			; <UNDEFINED> instruction: 0x00014fbc
   14d6c:			; <UNDEFINED> instruction: 0x00014fbc
   14d70:			; <UNDEFINED> instruction: 0x00014fbc
   14d74:			; <UNDEFINED> instruction: 0x00014fbc
   14d78:			; <UNDEFINED> instruction: 0x00014fbc
   14d7c:			; <UNDEFINED> instruction: 0x00014fbc
   14d80:			; <UNDEFINED> instruction: 0x00014fbc
   14d84:			; <UNDEFINED> instruction: 0x00014fbc
   14d88:	andeq	r4, r1, ip, asr #30
   14d8c:			; <UNDEFINED> instruction: 0x00014fbc
   14d90:			; <UNDEFINED> instruction: 0x00014fbc
   14d94:			; <UNDEFINED> instruction: 0x00014fbc
   14d98:			; <UNDEFINED> instruction: 0x00014fbc
   14d9c:			; <UNDEFINED> instruction: 0x00014fbc
   14da0:			; <UNDEFINED> instruction: 0x00014fbc
   14da4:			; <UNDEFINED> instruction: 0x00014fbc
   14da8:			; <UNDEFINED> instruction: 0x00014fbc
   14dac:			; <UNDEFINED> instruction: 0x00014fbc
   14db0:			; <UNDEFINED> instruction: 0x00014fbc
   14db4:			; <UNDEFINED> instruction: 0x00014fbc
   14db8:			; <UNDEFINED> instruction: 0x00014fbc
   14dbc:			; <UNDEFINED> instruction: 0x00014fbc
   14dc0:			; <UNDEFINED> instruction: 0x00014fbc
   14dc4:			; <UNDEFINED> instruction: 0x00014fbc
   14dc8:			; <UNDEFINED> instruction: 0x00014fbc
   14dcc:			; <UNDEFINED> instruction: 0x00014fbc
   14dd0:			; <UNDEFINED> instruction: 0x00014fbc
   14dd4:			; <UNDEFINED> instruction: 0x00014fbc
   14dd8:			; <UNDEFINED> instruction: 0x00014fbc
   14ddc:			; <UNDEFINED> instruction: 0x00014fbc
   14de0:			; <UNDEFINED> instruction: 0x00014fbc
   14de4:			; <UNDEFINED> instruction: 0x00014fbc
   14de8:	andeq	r4, r1, ip, lsr #30
   14dec:			; <UNDEFINED> instruction: 0x00014fbc
   14df0:	andeq	r4, r1, r0, lsr #30
   14df4:	andeq	r4, r1, r4, lsl pc
   14df8:			; <UNDEFINED> instruction: 0x00014fbc
   14dfc:			; <UNDEFINED> instruction: 0x00014fbc
   14e00:			; <UNDEFINED> instruction: 0x00014fbc
   14e04:			; <UNDEFINED> instruction: 0x00014fbc
   14e08:			; <UNDEFINED> instruction: 0x00014fbc
   14e0c:			; <UNDEFINED> instruction: 0x00014fbc
   14e10:			; <UNDEFINED> instruction: 0x00014fbc
   14e14:			; <UNDEFINED> instruction: 0x00014fbc
   14e18:			; <UNDEFINED> instruction: 0x00014fbc
   14e1c:			; <UNDEFINED> instruction: 0x00014fbc
   14e20:	muleq	r1, r0, lr
   14e24:			; <UNDEFINED> instruction: 0x00014fbc
   14e28:			; <UNDEFINED> instruction: 0x00014fbc
   14e2c:	andeq	r4, r1, r4, lsl #29
   14e30:			; <UNDEFINED> instruction: 0x00014fbc
   14e34:			; <UNDEFINED> instruction: 0x00014fbc
   14e38:			; <UNDEFINED> instruction: 0x00014fbc
   14e3c:	andeq	r4, r1, r8, ror lr
   14e40:	andeq	r4, r1, ip, ror #28
   14e44:	movw	r3, #49320	; 0xc0a8
   14e48:	movt	r3, #6
   14e4c:	movw	r0, #2604	; 0xa2c
   14e50:	movt	r0, #4
   14e54:	mov	r2, #35	; 0x23
   14e58:	mov	r1, #1
   14e5c:	ldr	r3, [r3]
   14e60:	bl	13ff4 <fwrite@plt>
   14e64:	mvn	r0, #0
   14e68:	bl	14048 <exit@plt>
   14e6c:	mov	r3, #1
   14e70:	str	r3, [r9, #156]	; 0x9c
   14e74:	b	14a3c <set_opt@@Base+0x244>
   14e78:	mov	r3, #1
   14e7c:	str	r3, [r9, #160]	; 0xa0
   14e80:	b	14a3c <set_opt@@Base+0x244>
   14e84:	mov	r3, #1
   14e88:	str	r3, [r9, #172]	; 0xac
   14e8c:	b	14a3c <set_opt@@Base+0x244>
   14e90:	ldr	r3, [r9, #216]	; 0xd8
   14e94:	cmp	r3, #0
   14e98:	bne	14ec4 <set_opt@@Base+0x6cc>
   14e9c:	ldrb	r3, [r4, #1]
   14ea0:	cmp	r3, #0
   14ea4:	addne	r8, r4, #1
   14ea8:	movne	r0, #1
   14eac:	bne	14ebc <set_opt@@Base+0x6c4>
   14eb0:	cmp	r8, #0
   14eb4:	movne	r0, #2
   14eb8:	beq	14eec <set_opt@@Base+0x6f4>
   14ebc:	str	r8, [r9, #216]	; 0xd8
   14ec0:	b	14a3c <set_opt@@Base+0x244>
   14ec4:	movw	r3, #49320	; 0xc0a8
   14ec8:	movt	r3, #6
   14ecc:	movw	r0, #2884	; 0xb44
   14ed0:	movt	r0, #4
   14ed4:	mov	r2, #37	; 0x25
   14ed8:	mov	r1, #1
   14edc:	ldr	r3, [r3]
   14ee0:	bl	13ff4 <fwrite@plt>
   14ee4:	mvn	r0, #0
   14ee8:	bl	14048 <exit@plt>
   14eec:	movw	r3, #49320	; 0xc0a8
   14ef0:	movt	r3, #6
   14ef4:	movw	r0, #2924	; 0xb6c
   14ef8:	movt	r0, #4
   14efc:	mov	r2, #28
   14f00:	mov	r1, #1
   14f04:	ldr	r3, [r3]
   14f08:	bl	13ff4 <fwrite@plt>
   14f0c:	mvn	r0, #0
   14f10:	bl	14048 <exit@plt>
   14f14:	mov	r3, #1
   14f18:	str	r3, [r9, #112]	; 0x70
   14f1c:	b	14a3c <set_opt@@Base+0x244>
   14f20:	mov	r3, #1
   14f24:	str	r3, [r9, #144]	; 0x90
   14f28:	b	14a3c <set_opt@@Base+0x244>
   14f2c:	mov	r3, #1
   14f30:	mov	r4, #1
   14f34:	mov	r5, #1
   14f38:	strd	r4, [r9, #144]	; 0x90
   14f3c:	strd	r4, [r9, #152]	; 0x98
   14f40:	str	r3, [r9, #160]	; 0xa0
   14f44:	str	r3, [r9, #172]	; 0xac
   14f48:	b	14a3c <set_opt@@Base+0x244>
   14f4c:	ldrb	r3, [r4, #1]
   14f50:	cmp	r3, #0
   14f54:	addne	r8, r4, #1
   14f58:	movne	r0, #1
   14f5c:	bne	14f6c <set_opt@@Base+0x774>
   14f60:	cmp	r8, #0
   14f64:	movne	r0, #2
   14f68:	beq	14f84 <set_opt@@Base+0x78c>
   14f6c:	ldr	r2, [r9, #200]	; 0xc8
   14f70:	ldr	r3, [r9, #208]	; 0xd0
   14f74:	add	r1, r3, #1
   14f78:	str	r1, [r9, #208]	; 0xd0
   14f7c:	str	r8, [r2, r3, lsl #2]
   14f80:	b	14a3c <set_opt@@Base+0x244>
   14f84:	movw	r3, #49320	; 0xc0a8
   14f88:	movt	r3, #6
   14f8c:	movw	r0, #2852	; 0xb24
   14f90:	movt	r0, #4
   14f94:	b	14efc <set_opt@@Base+0x704>
   14f98:	movw	r3, #49320	; 0xc0a8
   14f9c:	movt	r3, #6
   14fa0:	mov	r2, r4
   14fa4:	movw	r1, #2828	; 0xb0c
   14fa8:	movt	r1, #4
   14fac:	ldr	r0, [r3]
   14fb0:	bl	1406c <fprintf@plt>
   14fb4:	mvn	r0, #0
   14fb8:	bl	14048 <exit@plt>
   14fbc:	movw	r3, #49320	; 0xc0a8
   14fc0:	movt	r3, #6
   14fc4:	mov	r2, r6
   14fc8:	movw	r1, #2956	; 0xb8c
   14fcc:	movt	r1, #4
   14fd0:	ldr	r0, [r3]
   14fd4:	bl	1406c <fprintf@plt>
   14fd8:	mvn	r0, #0
   14fdc:	bl	14048 <exit@plt>
   14fe0:	movw	r3, #49320	; 0xc0a8
   14fe4:	movt	r3, #6
   14fe8:	movw	r0, #2548	; 0x9f4
   14fec:	movt	r0, #4
   14ff0:	mov	r2, #41	; 0x29
   14ff4:	mov	r1, #1
   14ff8:	ldr	r3, [r3]
   14ffc:	bl	13ff4 <fwrite@plt>
   15000:	mvn	r0, #0
   15004:	bl	14048 <exit@plt>
   15008:	movw	r0, #2500	; 0x9c4
   1500c:	movt	r0, #4
   15010:	ldr	r3, [r4]
   15014:	mov	r2, #44	; 0x2c
   15018:	mov	r1, #1
   1501c:	bl	13ff4 <fwrite@plt>
   15020:	mvn	r0, #0
   15024:	bl	14048 <exit@plt>
   15028:	movw	r3, #49320	; 0xc0a8
   1502c:	movt	r3, #6
   15030:	movw	r0, #2652	; 0xa5c
   15034:	movt	r0, #4
   15038:	b	14ed4 <set_opt@@Base+0x6dc>
   1503c:	movw	r3, #49320	; 0xc0a8
   15040:	movt	r3, #6
   15044:	movw	r0, #2708	; 0xa94
   15048:	movt	r0, #4
   1504c:	b	14e54 <set_opt@@Base+0x65c>
   15050:	movw	r3, #49320	; 0xc0a8
   15054:	movt	r3, #6
   15058:	movw	r0, #2796	; 0xaec
   1505c:	movt	r0, #4
   15060:	b	14efc <set_opt@@Base+0x704>
   15064:	movw	r3, #49320	; 0xc0a8
   15068:	movt	r3, #6
   1506c:	movw	r0, #2752	; 0xac0
   15070:	movt	r0, #4
   15074:	b	14ff0 <set_opt@@Base+0x7f8>

00015078 <get_opt@@Base>:
   15078:	strd	r4, [sp, #-16]!
   1507c:	mov	r4, r1
   15080:	str	r6, [sp, #8]
   15084:	str	lr, [sp, #12]
   15088:	ldrb	r3, [r4, #1]!
   1508c:	cmp	r3, #45	; 0x2d
   15090:	beq	15104 <get_opt@@Base+0x8c>
   15094:	cmp	r3, #0
   15098:	mov	r5, r0
   1509c:	mov	r6, r2
   150a0:	bne	150bc <get_opt@@Base+0x44>
   150a4:	b	15128 <get_opt@@Base+0xb0>
   150a8:	cmp	r0, #0
   150ac:	addeq	r4, r4, #1
   150b0:	ldrb	r0, [r4]
   150b4:	cmp	r0, #0
   150b8:	beq	150e0 <get_opt@@Base+0x68>
   150bc:	mov	r2, r6
   150c0:	mov	r1, r4
   150c4:	mov	r0, r5
   150c8:	bl	147f8 <set_opt@@Base>
   150cc:	cmp	r0, #1
   150d0:	beq	150f0 <get_opt@@Base+0x78>
   150d4:	cmp	r0, #2
   150d8:	bne	150a8 <get_opt@@Base+0x30>
   150dc:	mov	r0, #1
   150e0:	ldrd	r4, [sp]
   150e4:	ldr	r6, [sp, #8]
   150e8:	add	sp, sp, #12
   150ec:	pop	{pc}		; (ldr pc, [sp], #4)
   150f0:	ldrd	r4, [sp]
   150f4:	mov	r0, #0
   150f8:	ldr	r6, [sp, #8]
   150fc:	add	sp, sp, #12
   15100:	pop	{pc}		; (ldr pc, [sp], #4)
   15104:	mov	r1, r4
   15108:	bl	147f8 <set_opt@@Base>
   1510c:	sub	r0, r0, #2
   15110:	ldrd	r4, [sp]
   15114:	clz	r0, r0
   15118:	ldr	r6, [sp, #8]
   1511c:	add	sp, sp, #12
   15120:	lsr	r0, r0, #5
   15124:	pop	{pc}		; (ldr pc, [sp], #4)
   15128:	movw	r3, #49320	; 0xc0a8
   1512c:	movt	r3, #6
   15130:	movw	r0, #2980	; 0xba4
   15134:	movt	r0, #4
   15138:	ldr	r3, [r3]
   1513c:	mov	r2, #24
   15140:	mov	r1, #1
   15144:	bl	13ff4 <fwrite@plt>
   15148:	mvn	r0, #0
   1514c:	bl	14048 <exit@plt>

00015150 <parse_opts@@Base>:
   15150:	cmp	r0, #1
   15154:	bxle	lr
   15158:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1515c:	mov	r4, #1
   15160:	strd	r6, [sp, #8]
   15164:	mov	r6, r2
   15168:	strd	r8, [sp, #16]
   1516c:	mov	r8, r0
   15170:	str	sl, [sp, #24]
   15174:	mov	sl, r1
   15178:	str	lr, [sp, #28]
   1517c:	b	151a0 <parse_opts@@Base+0x50>
   15180:	ldr	r1, [r6, #204]	; 0xcc
   15184:	mov	r4, r7
   15188:	ldr	r2, [r6, #212]	; 0xd4
   1518c:	add	r0, r2, #1
   15190:	str	r0, [r6, #212]	; 0xd4
   15194:	str	r3, [r1, r2, lsl #2]
   15198:	cmp	r8, r4
   1519c:	ble	15224 <parse_opts@@Base+0xd4>
   151a0:	ldr	r3, [sl, r4, lsl #2]
   151a4:	lsl	r1, r4, #2
   151a8:	add	r7, r4, #1
   151ac:	ldrb	r2, [r3]
   151b0:	cmp	r2, #45	; 0x2d
   151b4:	bne	15180 <parse_opts@@Base+0x30>
   151b8:	mov	r5, r3
   151bc:	cmp	r8, r7
   151c0:	ldrb	r3, [r5, #1]!
   151c4:	addgt	r1, sl, r1
   151c8:	movle	r9, #0
   151cc:	ldrgt	r9, [r1, #4]
   151d0:	cmp	r3, #45	; 0x2d
   151d4:	beq	15244 <parse_opts@@Base+0xf4>
   151d8:	cmp	r3, #0
   151dc:	bne	151f8 <parse_opts@@Base+0xa8>
   151e0:	b	15264 <parse_opts@@Base+0x114>
   151e4:	cmp	r0, #0
   151e8:	addeq	r5, r5, #1
   151ec:	ldrb	r3, [r5]
   151f0:	cmp	r3, #0
   151f4:	beq	1523c <parse_opts@@Base+0xec>
   151f8:	mov	r2, r9
   151fc:	mov	r1, r5
   15200:	mov	r0, r6
   15204:	bl	147f8 <set_opt@@Base>
   15208:	cmp	r0, #1
   1520c:	beq	1523c <parse_opts@@Base+0xec>
   15210:	cmp	r0, #2
   15214:	bne	151e4 <parse_opts@@Base+0x94>
   15218:	add	r4, r4, #2
   1521c:	cmp	r8, r4
   15220:	bgt	151a0 <parse_opts@@Base+0x50>
   15224:	ldrd	r4, [sp]
   15228:	ldrd	r6, [sp, #8]
   1522c:	ldrd	r8, [sp, #16]
   15230:	ldr	sl, [sp, #24]
   15234:	add	sp, sp, #28
   15238:	pop	{pc}		; (ldr pc, [sp], #4)
   1523c:	mov	r4, r7
   15240:	b	15198 <parse_opts@@Base+0x48>
   15244:	mov	r2, r9
   15248:	mov	r1, r5
   1524c:	mov	r0, r6
   15250:	bl	147f8 <set_opt@@Base>
   15254:	cmp	r0, #2
   15258:	addeq	r4, r4, #1
   1525c:	add	r4, r4, #1
   15260:	b	15198 <parse_opts@@Base+0x48>
   15264:	movw	r3, #49320	; 0xc0a8
   15268:	movt	r3, #6
   1526c:	movw	r0, #2980	; 0xba4
   15270:	movt	r0, #4
   15274:	ldr	r3, [r3]
   15278:	mov	r2, #24
   1527c:	mov	r1, #1
   15280:	bl	13ff4 <fwrite@plt>
   15284:	mvn	r0, #0
   15288:	bl	14048 <exit@plt>
   1528c:	add	r0, r0, #172	; 0xac
   15290:	mov	r2, #1
   15294:	b	284f8 <ptr_set_insert_item@@Base>
   15298:	movw	r3, #49320	; 0xc0a8
   1529c:	movt	r3, #6
   152a0:	str	r4, [sp, #-8]!
   152a4:	movw	r0, #3360	; 0xd20
   152a8:	movt	r0, #4
   152ac:	ldr	r3, [r3]
   152b0:	mov	r2, #34	; 0x22
   152b4:	mov	r1, #1
   152b8:	str	lr, [sp, #4]
   152bc:	bl	13ff4 <fwrite@plt>
   152c0:	mov	r0, #1
   152c4:	bl	14048 <exit@plt>

000152c8 <flatcc_init_options@@Base>:
   152c8:	mov	r2, #212	; 0xd4
   152cc:	mov	r1, #0
   152d0:	str	r4, [sp, #-16]!
   152d4:	mov	r4, r0
   152d8:	add	r0, r0, #12
   152dc:	strd	r6, [sp, #4]
   152e0:	str	lr, [sp, #12]
   152e4:	movw	r6, #65534	; 0xfffe
   152e8:	mov	r7, #0
   152ec:	bl	14084 <memset@plt>
   152f0:	mov	r2, #65536	; 0x10000
   152f4:	mov	r3, #2
   152f8:	mov	ip, #100	; 0x64
   152fc:	movw	r0, #3396	; 0xd44
   15300:	movt	r0, #4
   15304:	movw	r1, #3404	; 0xd4c
   15308:	movt	r1, #4
   1530c:	stm	r4, {r2, ip}
   15310:	movw	r2, #3412	; 0xd54
   15314:	movt	r2, #4
   15318:	str	ip, [r4, #8]
   1531c:	str	r3, [r4, #68]	; 0x44
   15320:	mov	r3, #1
   15324:	strd	r6, [r4, #88]	; 0x58
   15328:	strd	r0, [r4, #96]	; 0x60
   1532c:	mov	r0, #4
   15330:	ldrd	r6, [sp, #4]
   15334:	str	r3, [r4, #16]
   15338:	str	r3, [r4, #20]
   1533c:	str	r3, [r4, #24]
   15340:	str	r3, [r4, #28]
   15344:	str	r3, [r4, #32]
   15348:	str	r3, [r4, #36]	; 0x24
   1534c:	str	r3, [r4, #40]	; 0x28
   15350:	str	r3, [r4, #44]	; 0x2c
   15354:	str	r3, [r4, #48]	; 0x30
   15358:	str	r3, [r4, #52]	; 0x34
   1535c:	str	r0, [r4, #64]	; 0x40
   15360:	str	r3, [r4, #72]	; 0x48
   15364:	str	r3, [r4, #76]	; 0x4c
   15368:	str	r3, [r4, #84]	; 0x54
   1536c:	str	r2, [r4, #104]	; 0x68
   15370:	str	r3, [r4, #136]	; 0x88
   15374:	str	r3, [r4, #140]	; 0x8c
   15378:	str	r0, [r4, #176]	; 0xb0
   1537c:	str	r3, [r4, #184]	; 0xb8
   15380:	ldr	r4, [sp]
   15384:	add	sp, sp, #12
   15388:	pop	{pc}		; (ldr pc, [sp], #4)

0001538c <flatcc_create_context@@Base>:
   1538c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15390:	mov	r5, r0
   15394:	mov	r0, #560	; 0x230
   15398:	strd	r6, [sp, #8]
   1539c:	mov	r6, r1
   153a0:	mov	r7, r3
   153a4:	strd	r8, [sp, #16]
   153a8:	mov	r8, r2
   153ac:	str	lr, [sp, #24]
   153b0:	sub	sp, sp, #12
   153b4:	bl	14018 <malloc@plt>
   153b8:	subs	r4, r0, #0
   153bc:	beq	153e0 <flatcc_create_context@@Base+0x54>
   153c0:	mov	r9, #0
   153c4:	mov	r3, r8
   153c8:	mov	r2, r6
   153cc:	mov	r1, r5
   153d0:	stm	sp, {r7, r9}
   153d4:	bl	2defc <__flatcc_fb_init_parser@@Base>
   153d8:	cmp	r0, r9
   153dc:	bne	153fc <flatcc_create_context@@Base+0x70>
   153e0:	mov	r0, r4
   153e4:	add	sp, sp, #12
   153e8:	ldrd	r4, [sp]
   153ec:	ldrd	r6, [sp, #8]
   153f0:	ldrd	r8, [sp, #16]
   153f4:	add	sp, sp, #24
   153f8:	pop	{pc}		; (ldr pc, [sp], #4)
   153fc:	mov	r0, r4
   15400:	mov	r4, r9
   15404:	bl	13fac <free@plt>
   15408:	b	153e0 <flatcc_create_context@@Base+0x54>

0001540c <flatcc_parse_buffer@@Base>:
   1540c:	ldr	r3, [r0, #128]	; 0x80
   15410:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15414:	strd	r6, [sp, #8]
   15418:	mov	r6, r2
   1541c:	mov	r2, #1
   15420:	str	r8, [sp, #16]
   15424:	str	lr, [sp, #20]
   15428:	cmp	r3, #0
   1542c:	cmpne	r3, r6
   15430:	str	r2, [r0, #140]	; 0x8c
   15434:	movcc	r4, #1
   15438:	movcs	r4, #0
   1543c:	bcc	154a0 <flatcc_parse_buffer@@Base+0x94>
   15440:	mov	r5, r0
   15444:	mov	r7, r1
   15448:	add	r1, r0, #352	; 0x160
   1544c:	add	r0, r0, #524	; 0x20c
   15450:	bl	284f8 <ptr_set_insert_item@@Base>
   15454:	mov	r3, r4
   15458:	mov	r2, r6
   1545c:	mov	r1, r7
   15460:	mov	r0, r5
   15464:	bl	2e1e0 <__flatcc_fb_parse@@Base>
   15468:	cmp	r0, #0
   1546c:	bne	15498 <flatcc_parse_buffer@@Base+0x8c>
   15470:	mov	r0, r5
   15474:	bl	342cc <__flatcc_fb_build_schema@@Base>
   15478:	adds	r0, r0, #0
   1547c:	movne	r0, #1
   15480:	rsb	r0, r0, #0
   15484:	ldrd	r4, [sp]
   15488:	ldrd	r6, [sp, #8]
   1548c:	ldr	r8, [sp, #16]
   15490:	add	sp, sp, #20
   15494:	pop	{pc}		; (ldr pc, [sp], #4)
   15498:	mvn	r0, #0
   1549c:	b	15484 <flatcc_parse_buffer@@Base+0x78>
   154a0:	movw	r1, #3420	; 0xd5c
   154a4:	movt	r1, #4
   154a8:	bl	2c48c <__flatcc_fb_print_error@@Base>
   154ac:	mvn	r0, #0
   154b0:	b	15484 <flatcc_parse_buffer@@Base+0x78>

000154b4 <flatcc_parse_file@@Base>:
   154b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   154b8:	mov	r4, r0
   154bc:	mov	r0, r1
   154c0:	strd	r6, [sp, #8]
   154c4:	mov	r6, r1
   154c8:	strd	r8, [sp, #16]
   154cc:	strd	sl, [sp, #24]
   154d0:	add	fp, r4, #352	; 0x160
   154d4:	str	lr, [sp, #32]
   154d8:	sub	sp, sp, #28
   154dc:	bl	14054 <strlen@plt>
   154e0:	mov	r9, r0
   154e4:	ldr	r0, [r4, #412]	; 0x19c
   154e8:	mov	r1, fp
   154ec:	mov	r2, #1
   154f0:	add	r0, r0, #32
   154f4:	bl	2b36c <fb_schema_table_insert_item@@Base>
   154f8:	cmp	r0, #0
   154fc:	beq	15524 <flatcc_parse_file@@Base+0x70>
   15500:	mov	sl, #0
   15504:	mov	r0, sl
   15508:	add	sp, sp, #28
   1550c:	ldrd	r4, [sp]
   15510:	ldrd	r6, [sp, #8]
   15514:	ldrd	r8, [sp, #16]
   15518:	ldrd	sl, [sp, #24]
   1551c:	add	sp, sp, #32
   15520:	pop	{pc}		; (ldr pc, [sp], #4)
   15524:	ldr	r3, [r4, #552]	; 0x228
   15528:	cmp	r3, #0
   1552c:	str	r3, [sp, #8]
   15530:	str	r3, [sp, #12]
   15534:	beq	158d8 <flatcc_parse_file@@Base+0x424>
   15538:	ldr	r3, [r4, #336]	; 0x150
   1553c:	cmp	r3, #0
   15540:	ble	159d8 <flatcc_parse_file@@Base+0x524>
   15544:	movw	r8, #45408	; 0xb160
   15548:	movt	r8, #4
   1554c:	mov	r5, #0
   15550:	mov	sl, #1
   15554:	ldr	r3, [r4, #328]	; 0x148
   15558:	ldr	r7, [r3, r5, lsl #2]
   1555c:	mov	r0, r7
   15560:	bl	14054 <strlen@plt>
   15564:	mov	r1, r0
   15568:	mov	r3, r9
   1556c:	stm	sp, {r8, sl}
   15570:	mov	r0, r7
   15574:	mov	r2, r6
   15578:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   1557c:	subs	r7, r0, #0
   15580:	beq	15a00 <flatcc_parse_file@@Base+0x54c>
   15584:	add	r2, sp, #20
   15588:	ldr	r1, [r4, #128]	; 0x80
   1558c:	bl	2c138 <__flatcc_fb_read_file@@Base>
   15590:	cmp	r0, #0
   15594:	beq	15814 <flatcc_parse_file@@Base+0x360>
   15598:	mov	r1, r0
   1559c:	ldr	lr, [r4, #412]	; 0x19c
   155a0:	mov	r3, #1
   155a4:	mov	r0, r4
   155a8:	ldr	r5, [sp, #20]
   155ac:	ldr	ip, [lr, #56]	; 0x38
   155b0:	mov	r2, r5
   155b4:	add	ip, ip, r5
   155b8:	str	ip, [lr, #56]	; 0x38
   155bc:	str	r7, [r4, #548]	; 0x224
   155c0:	bl	2e1e0 <__flatcc_fb_parse@@Base>
   155c4:	subs	sl, r0, #0
   155c8:	bne	15500 <flatcc_parse_file@@Base+0x4c>
   155cc:	ldr	r7, [r4, #352]	; 0x160
   155d0:	cmp	r7, #0
   155d4:	beq	156b0 <flatcc_parse_file@@Base+0x1fc>
   155d8:	add	r3, r4, #128	; 0x80
   155dc:	movw	r9, #21132	; 0x528c
   155e0:	movt	r9, #1
   155e4:	str	sl, [sp, #8]
   155e8:	mov	sl, r3
   155ec:	ldrd	r0, [r7, #8]
   155f0:	bl	2b9b4 <__flatcc_fb_copy_path_n@@Base>
   155f4:	subs	r8, r0, #0
   155f8:	beq	159bc <flatcc_parse_file@@Base+0x508>
   155fc:	ldr	r3, [r4, #132]	; 0x84
   15600:	ldr	r6, [r4, #412]	; 0x19c
   15604:	ldr	r2, [r6, #52]	; 0x34
   15608:	cmp	r2, r3
   1560c:	cmpge	r3, #0
   15610:	bgt	159e8 <flatcc_parse_file@@Base+0x534>
   15614:	ldr	r2, [r6, #48]	; 0x30
   15618:	ldr	r3, [r4, #136]	; 0x88
   1561c:	cmp	r2, r3
   15620:	cmpge	r3, #0
   15624:	bgt	159c0 <flatcc_parse_file@@Base+0x50c>
   15628:	mov	r0, #560	; 0x230
   1562c:	bl	14018 <malloc@plt>
   15630:	subs	r5, r0, #0
   15634:	beq	15984 <flatcc_parse_file@@Base+0x4d0>
   15638:	ldr	ip, [r4, #12]
   1563c:	mov	r2, r8
   15640:	mov	r1, sl
   15644:	str	r6, [sp, #4]
   15648:	ldr	r3, [r4, #8]
   1564c:	str	ip, [sp]
   15650:	bl	2defc <__flatcc_fb_init_parser@@Base>
   15654:	cmp	r0, #0
   15658:	bne	15994 <flatcc_parse_file@@Base+0x4e0>
   1565c:	add	r1, r5, #352	; 0x160
   15660:	add	r0, r6, #32
   15664:	bl	2b670 <fb_schema_table_find_item@@Base>
   15668:	cmp	r0, #0
   1566c:	beq	15938 <flatcc_parse_file@@Base+0x484>
   15670:	add	r0, r0, #172	; 0xac
   15674:	mov	r2, fp
   15678:	mov	r1, r9
   1567c:	bl	289d8 <ptr_set_visit@@Base>
   15680:	ldr	r6, [r5]
   15684:	mov	r0, r5
   15688:	bl	310ec <__flatcc_fb_clear_parser@@Base>
   1568c:	mov	r0, r5
   15690:	bl	13fac <free@plt>
   15694:	subs	r5, r6, #0
   15698:	bne	15680 <flatcc_parse_file@@Base+0x1cc>
   1569c:	mov	r0, r8
   156a0:	bl	13fac <free@plt>
   156a4:	ldr	r7, [r7]
   156a8:	cmp	r7, #0
   156ac:	bne	155ec <flatcc_parse_file@@Base+0x138>
   156b0:	mov	r1, fp
   156b4:	mov	r2, #1
   156b8:	add	r0, r4, #524	; 0x20c
   156bc:	bl	284f8 <ptr_set_insert_item@@Base>
   156c0:	mov	r0, r4
   156c4:	bl	342cc <__flatcc_fb_build_schema@@Base>
   156c8:	subs	sl, r0, #0
   156cc:	bne	15500 <flatcc_parse_file@@Base+0x4c>
   156d0:	ldr	r3, [sp, #12]
   156d4:	ldr	r2, [r4, #240]	; 0xf0
   156d8:	clz	r3, r3
   156dc:	lsr	r3, r3, #5
   156e0:	cmp	r2, #0
   156e4:	moveq	r3, #0
   156e8:	cmp	r3, #0
   156ec:	beq	15500 <flatcc_parse_file@@Base+0x4c>
   156f0:	ldr	r3, [r4, #552]	; 0x228
   156f4:	cmp	r3, #0
   156f8:	bne	15a8c <flatcc_parse_file@@Base+0x5d8>
   156fc:	ldr	r1, [r4, #244]	; 0xf4
   15700:	movw	r2, #45408	; 0xb160
   15704:	movt	r2, #4
   15708:	ldr	r5, [r4, #344]	; 0x158
   1570c:	ldr	r6, [r4, #248]	; 0xf8
   15710:	ldr	lr, [r4, #512]	; 0x200
   15714:	cmp	r5, #0
   15718:	moveq	r5, r2
   1571c:	cmp	r1, #0
   15720:	movne	r0, r2
   15724:	beq	15a78 <flatcc_parse_file@@Base+0x5c4>
   15728:	cmp	r6, #0
   1572c:	movwne	r5, #45408	; 0xb160
   15730:	movtne	r5, #4
   15734:	movne	r7, r5
   15738:	beq	15a50 <flatcc_parse_file@@Base+0x59c>
   1573c:	mov	r3, #1
   15740:	bl	2bc2c <__flatcc_fb_create_join_path@@Base>
   15744:	subs	r8, r0, #0
   15748:	beq	159bc <flatcc_parse_file@@Base+0x508>
   1574c:	mov	r0, r5
   15750:	mov	r2, r7
   15754:	mov	r1, r6
   15758:	mov	r3, #1
   1575c:	bl	2bc2c <__flatcc_fb_create_join_path@@Base>
   15760:	subs	r5, r0, #0
   15764:	beq	159bc <flatcc_parse_file@@Base+0x508>
   15768:	bl	2bfa0 <__flatcc_fb_create_make_path@@Base>
   1576c:	subs	r9, r0, #0
   15770:	beq	159bc <flatcc_parse_file@@Base+0x508>
   15774:	mov	r0, r5
   15778:	bl	13fac <free@plt>
   1577c:	movw	r1, #3664	; 0xe50
   15780:	movt	r1, #4
   15784:	mov	r0, r8
   15788:	bl	13fa0 <fopen@plt>
   1578c:	subs	r6, r0, #0
   15790:	beq	15a28 <flatcc_parse_file@@Base+0x574>
   15794:	movw	r1, #3716	; 0xe84
   15798:	movt	r1, #4
   1579c:	mov	r2, r9
   157a0:	bl	1406c <fprintf@plt>
   157a4:	ldr	r4, [r4]
   157a8:	cmp	r4, #0
   157ac:	beq	157ec <flatcc_parse_file@@Base+0x338>
   157b0:	movw	r7, #3720	; 0xe88
   157b4:	movt	r7, #4
   157b8:	ldr	r0, [r4, #548]	; 0x224
   157bc:	bl	2bfa0 <__flatcc_fb_create_make_path@@Base>
   157c0:	subs	r5, r0, #0
   157c4:	beq	159bc <flatcc_parse_file@@Base+0x508>
   157c8:	mov	r2, r5
   157cc:	mov	r1, r7
   157d0:	mov	r0, r6
   157d4:	bl	1406c <fprintf@plt>
   157d8:	ldr	r4, [r4]
   157dc:	mov	r0, r5
   157e0:	bl	13fac <free@plt>
   157e4:	cmp	r4, #0
   157e8:	bne	157b8 <flatcc_parse_file@@Base+0x304>
   157ec:	mov	r1, r6
   157f0:	mov	r0, #10
   157f4:	bl	140cc <fputc@plt>
   157f8:	mov	r0, r8
   157fc:	bl	13fac <free@plt>
   15800:	mov	r0, r9
   15804:	bl	13fac <free@plt>
   15808:	mov	r0, r6
   1580c:	bl	140b4 <fclose@plt>
   15810:	b	15504 <flatcc_parse_file@@Base+0x50>
   15814:	mov	r0, r7
   15818:	bl	13fac <free@plt>
   1581c:	ldr	r2, [sp, #20]
   15820:	ldr	r3, [r4, #128]	; 0x80
   15824:	cmp	r3, #0
   15828:	cmpne	r3, r2
   1582c:	bcc	158c0 <flatcc_parse_file@@Base+0x40c>
   15830:	ldr	r3, [r4, #336]	; 0x150
   15834:	add	r5, r5, #1
   15838:	cmp	r3, r5
   1583c:	bgt	15554 <flatcc_parse_file@@Base+0xa0>
   15840:	ldr	r3, [sp, #8]
   15844:	cmp	r3, #0
   15848:	beq	1591c <flatcc_parse_file@@Base+0x468>
   1584c:	ldr	r3, [r4, #552]	; 0x228
   15850:	mov	r5, r3
   15854:	str	r3, [sp, #8]
   15858:	mov	r0, r5
   1585c:	bl	14054 <strlen@plt>
   15860:	mov	r1, r0
   15864:	mov	r0, r5
   15868:	bl	2bfc8 <__flatcc_fb_find_basename@@Base>
   1586c:	mov	ip, #1
   15870:	mov	r1, r0
   15874:	mov	r3, r9
   15878:	mov	r0, r5
   1587c:	mov	r2, r6
   15880:	stm	sp, {r8, ip}
   15884:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   15888:	subs	r7, r0, #0
   1588c:	beq	159bc <flatcc_parse_file@@Base+0x508>
   15890:	add	r2, sp, #20
   15894:	ldr	r1, [r4, #128]	; 0x80
   15898:	bl	2c138 <__flatcc_fb_read_file@@Base>
   1589c:	subs	r1, r0, #0
   158a0:	bne	1559c <flatcc_parse_file@@Base+0xe8>
   158a4:	mov	r0, r7
   158a8:	bl	13fac <free@plt>
   158ac:	ldr	r2, [sp, #20]
   158b0:	ldr	r3, [r4, #128]	; 0x80
   158b4:	cmp	r3, #0
   158b8:	cmpne	r3, r2
   158bc:	bcs	1591c <flatcc_parse_file@@Base+0x468>
   158c0:	mov	r0, r4
   158c4:	movw	r1, #3420	; 0xd5c
   158c8:	movt	r1, #4
   158cc:	mvn	sl, #0
   158d0:	bl	2c48c <__flatcc_fb_print_error@@Base>
   158d4:	b	15504 <flatcc_parse_file@@Base+0x50>
   158d8:	add	r2, sp, #20
   158dc:	mov	r0, r6
   158e0:	ldr	r1, [r4, #128]	; 0x80
   158e4:	bl	2c138 <__flatcc_fb_read_file@@Base>
   158e8:	subs	r1, r0, #0
   158ec:	bne	159a4 <flatcc_parse_file@@Base+0x4f0>
   158f0:	ldr	r1, [sp, #20]
   158f4:	ldr	r3, [r4, #412]	; 0x19c
   158f8:	ldr	r2, [r4, #128]	; 0x80
   158fc:	ldr	r3, [r3, #56]	; 0x38
   15900:	add	r3, r3, r1
   15904:	cmp	r2, #0
   15908:	cmpne	r3, r2
   1590c:	bhi	158c0 <flatcc_parse_file@@Base+0x40c>
   15910:	ldr	r3, [r4, #336]	; 0x150
   15914:	cmp	r3, #0
   15918:	bgt	15544 <flatcc_parse_file@@Base+0x90>
   1591c:	mov	r2, r6
   15920:	mov	r0, r4
   15924:	movw	r1, #3464	; 0xd88
   15928:	movt	r1, #4
   1592c:	bl	2c48c <__flatcc_fb_print_error@@Base>
   15930:	mvn	sl, #0
   15934:	b	15504 <flatcc_parse_file@@Base+0x50>
   15938:	ldrd	r2, [r6, #48]	; 0x30
   1593c:	mov	r1, r8
   15940:	ldr	r0, [r4]
   15944:	str	r5, [r4]
   15948:	ldr	ip, [r4, #548]	; 0x224
   1594c:	add	r3, r3, #1
   15950:	add	r2, r2, #1
   15954:	str	r0, [r5]
   15958:	mov	r0, r5
   1595c:	str	ip, [r5, #552]	; 0x228
   15960:	strd	r2, [r6, #48]	; 0x30
   15964:	bl	154b4 <flatcc_parse_file@@Base>
   15968:	cmp	r0, #0
   1596c:	bne	15984 <flatcc_parse_file@@Base+0x4d0>
   15970:	add	r0, r5, #524	; 0x20c
   15974:	mov	r2, fp
   15978:	mov	r1, r9
   1597c:	bl	289d8 <ptr_set_visit@@Base>
   15980:	b	1569c <flatcc_parse_file@@Base+0x1e8>
   15984:	ldr	sl, [sp, #8]
   15988:	mov	r0, r8
   1598c:	bl	13fac <free@plt>
   15990:	b	15504 <flatcc_parse_file@@Base+0x50>
   15994:	mov	r0, r5
   15998:	ldr	sl, [sp, #8]
   1599c:	bl	13fac <free@plt>
   159a0:	b	15988 <flatcc_parse_file@@Base+0x4d4>
   159a4:	mov	r0, r6
   159a8:	str	r1, [sp, #8]
   159ac:	bl	2ba14 <__flatcc_fb_copy_path@@Base>
   159b0:	subs	r7, r0, #0
   159b4:	ldr	r1, [sp, #8]
   159b8:	bne	1559c <flatcc_parse_file@@Base+0xe8>
   159bc:	bl	15298 <parse_opts@@Base+0x148>
   159c0:	mov	r0, r4
   159c4:	movw	r1, #3536	; 0xdd0
   159c8:	movt	r1, #4
   159cc:	ldr	sl, [sp, #8]
   159d0:	bl	2c48c <__flatcc_fb_print_error@@Base>
   159d4:	b	15988 <flatcc_parse_file@@Base+0x4d4>
   159d8:	movw	r8, #45408	; 0xb160
   159dc:	movt	r8, #4
   159e0:	ldr	r5, [sp, #8]
   159e4:	b	15858 <flatcc_parse_file@@Base+0x3a4>
   159e8:	mov	r0, r4
   159ec:	movw	r1, #3504	; 0xdb0
   159f0:	movt	r1, #4
   159f4:	ldr	sl, [sp, #8]
   159f8:	bl	2c48c <__flatcc_fb_print_error@@Base>
   159fc:	b	15988 <flatcc_parse_file@@Base+0x4d4>
   15a00:	movw	r3, #49320	; 0xc0a8
   15a04:	movt	r3, #6
   15a08:	movw	r0, #3360	; 0xd20
   15a0c:	movt	r0, #4
   15a10:	ldr	r3, [r3]
   15a14:	mov	r2, #34	; 0x22
   15a18:	mov	r1, #1
   15a1c:	bl	13ff4 <fwrite@plt>
   15a20:	mov	r0, #1
   15a24:	bl	14048 <exit@plt>
   15a28:	mov	r2, r8
   15a2c:	mov	r0, r4
   15a30:	movw	r1, #3668	; 0xe54
   15a34:	movt	r1, #4
   15a38:	bl	2c48c <__flatcc_fb_print_error@@Base>
   15a3c:	mov	r0, r8
   15a40:	bl	13fac <free@plt>
   15a44:	mov	r0, r9
   15a48:	bl	13fac <free@plt>
   15a4c:	b	15504 <flatcc_parse_file@@Base+0x50>
   15a50:	ldr	r7, [r4, #308]	; 0x134
   15a54:	movw	ip, #3404	; 0xd4c
   15a58:	movt	ip, #4
   15a5c:	movw	r3, #31380	; 0x7a94
   15a60:	movt	r3, #5
   15a64:	mov	r6, lr
   15a68:	cmp	r7, #0
   15a6c:	movne	r7, ip
   15a70:	moveq	r7, r3
   15a74:	b	1573c <flatcc_parse_file@@Base+0x288>
   15a78:	movw	r2, #3456	; 0xd80
   15a7c:	movt	r2, #4
   15a80:	mov	r0, r5
   15a84:	mov	r1, lr
   15a88:	b	15728 <flatcc_parse_file@@Base+0x274>
   15a8c:	movw	r3, #3332	; 0xd04
   15a90:	movt	r3, #4
   15a94:	movw	r1, #3568	; 0xdf0
   15a98:	movt	r1, #4
   15a9c:	movw	r0, #3640	; 0xe38
   15aa0:	movt	r0, #4
   15aa4:	mov	r2, #220	; 0xdc
   15aa8:	bl	14120 <__assert_fail@plt>

00015aac <flatcc_generate_binary_schema_to_buffer@@Base>:
   15aac:	push	{lr}		; (str lr, [sp, #-4]!)
   15ab0:	sub	sp, sp, #12
   15ab4:	mov	ip, r0
   15ab8:	add	r3, sp, #4
   15abc:	add	r0, r0, #128	; 0x80
   15ac0:	str	r2, [sp, #4]
   15ac4:	mov	r2, r1
   15ac8:	add	r1, ip, #352	; 0x160
   15acc:	bl	2733c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   15ad0:	cmp	r0, #0
   15ad4:	ldrne	r0, [sp, #4]
   15ad8:	mvneq	r0, #0
   15adc:	add	sp, sp, #12
   15ae0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ae4 <flatcc_generate_binary_schema@@Base>:
   15ae4:	mov	r3, r0
   15ae8:	mov	r2, r1
   15aec:	add	r0, r0, #128	; 0x80
   15af0:	add	r1, r3, #352	; 0x160
   15af4:	b	273c4 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00015af8 <flatcc_generate_files@@Base>:
   15af8:	strd	r4, [sp, #-16]!
   15afc:	subs	r5, r0, #0
   15b00:	str	r6, [sp, #8]
   15b04:	str	lr, [sp, #12]
   15b08:	sub	sp, sp, #232	; 0xe8
   15b0c:	beq	15bfc <flatcc_generate_files@@Base+0x104>
   15b10:	ldr	r2, [r5, #108]	; 0x6c
   15b14:	cmp	r2, #0
   15b18:	bne	15bfc <flatcc_generate_files@@Base+0x104>
   15b1c:	mov	r4, r5
   15b20:	b	15b28 <flatcc_generate_files@@Base+0x30>
   15b24:	mov	r4, r3
   15b28:	ldr	r3, [r4]
   15b2c:	str	r2, [r4, #4]
   15b30:	mov	r2, r4
   15b34:	cmp	r3, #0
   15b38:	bne	15b24 <flatcc_generate_files@@Base+0x2c>
   15b3c:	ldr	r3, [r5, #308]	; 0x134
   15b40:	add	r6, r5, #128	; 0x80
   15b44:	cmp	r3, #0
   15b48:	bne	15be8 <flatcc_generate_files@@Base+0xf0>
   15b4c:	mov	r1, r6
   15b50:	mov	r0, sp
   15b54:	bl	15e24 <__flatcc_fb_init_output_c@@Base>
   15b58:	cmp	r0, #0
   15b5c:	bne	15bfc <flatcc_generate_files@@Base+0x104>
   15b60:	ldr	r3, [r5, #256]	; 0x100
   15b64:	cmp	r3, #0
   15b68:	beq	15c04 <flatcc_generate_files@@Base+0x10c>
   15b6c:	ldr	r6, [r5, #120]	; 0x78
   15b70:	cmp	r6, #0
   15b74:	beq	15b94 <flatcc_generate_files@@Base+0x9c>
   15b78:	ldr	r3, [r5, #300]	; 0x12c
   15b7c:	cmp	r3, #0
   15b80:	beq	15c18 <flatcc_generate_files@@Base+0x120>
   15b84:	ldr	r3, [r4, #108]	; 0x6c
   15b88:	cmp	r3, #0
   15b8c:	beq	15bb4 <flatcc_generate_files@@Base+0xbc>
   15b90:	mov	r6, #1
   15b94:	mov	r0, sp
   15b98:	bl	15de4 <__flatcc_fb_end_output_c@@Base>
   15b9c:	mov	r0, r6
   15ba0:	add	sp, sp, #232	; 0xe8
   15ba4:	ldrd	r4, [sp]
   15ba8:	ldr	r6, [sp, #8]
   15bac:	add	sp, sp, #12
   15bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   15bb4:	add	r1, r4, #352	; 0x160
   15bb8:	mov	r0, sp
   15bbc:	bl	16608 <__flatcc_fb_codegen_c@@Base>
   15bc0:	ldr	r4, [r4, #4]
   15bc4:	clz	r3, r0
   15bc8:	lsr	r3, r3, #5
   15bcc:	cmp	r4, #0
   15bd0:	moveq	r3, #0
   15bd4:	cmp	r3, #0
   15bd8:	bne	15b84 <flatcc_generate_files@@Base+0x8c>
   15bdc:	adds	r6, r0, #0
   15be0:	movne	r6, #1
   15be4:	b	15b94 <flatcc_generate_files@@Base+0x9c>
   15be8:	add	r1, r5, #352	; 0x160
   15bec:	mov	r0, r6
   15bf0:	bl	27440 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   15bf4:	cmp	r0, #0
   15bf8:	beq	15b4c <flatcc_generate_files@@Base+0x54>
   15bfc:	mvn	r6, #0
   15c00:	b	15b9c <flatcc_generate_files@@Base+0xa4>
   15c04:	mov	r0, sp
   15c08:	bl	163d0 <__flatcc_fb_codegen_common_c@@Base>
   15c0c:	subs	r6, r0, #0
   15c10:	beq	15b6c <flatcc_generate_files@@Base+0x74>
   15c14:	b	15b94 <flatcc_generate_files@@Base+0x9c>
   15c18:	add	r1, r5, #352	; 0x160
   15c1c:	mov	r0, sp
   15c20:	bl	16608 <__flatcc_fb_codegen_c@@Base>
   15c24:	mov	r6, r0
   15c28:	b	15b94 <flatcc_generate_files@@Base+0x9c>

00015c2c <flatcc_destroy_context@@Base>:
   15c2c:	strd	r4, [sp, #-16]!
   15c30:	subs	r4, r0, #0
   15c34:	str	r6, [sp, #8]
   15c38:	str	lr, [sp, #12]
   15c3c:	beq	15c5c <flatcc_destroy_context@@Base+0x30>
   15c40:	ldr	r5, [r4]
   15c44:	mov	r0, r4
   15c48:	bl	310ec <__flatcc_fb_clear_parser@@Base>
   15c4c:	mov	r0, r4
   15c50:	bl	13fac <free@plt>
   15c54:	subs	r4, r5, #0
   15c58:	bne	15c40 <flatcc_destroy_context@@Base+0x14>
   15c5c:	ldrd	r4, [sp]
   15c60:	ldr	r6, [sp, #8]
   15c64:	add	sp, sp, #12
   15c68:	pop	{pc}		; (ldr pc, [sp], #4)
   15c6c:	mov	r0, r1
   15c70:	b	13fac <free@plt>
   15c74:	movw	r3, #49320	; 0xc0a8
   15c78:	movt	r3, #6
   15c7c:	str	r4, [sp, #-8]!
   15c80:	movw	r0, #3360	; 0xd20
   15c84:	movt	r0, #4
   15c88:	ldr	r3, [r3]
   15c8c:	mov	r2, #34	; 0x22
   15c90:	mov	r1, #1
   15c94:	str	lr, [sp, #4]
   15c98:	bl	13ff4 <fwrite@plt>
   15c9c:	mov	r0, #1
   15ca0:	bl	14048 <exit@plt>

00015ca4 <__flatcc_fb_open_output_file@@Base>:
   15ca4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15ca8:	strd	r6, [sp, #8]
   15cac:	mov	r6, r0
   15cb0:	mov	r7, r1
   15cb4:	ldr	r0, [r0, #212]	; 0xd4
   15cb8:	strd	r8, [sp, #16]
   15cbc:	mov	r9, r2
   15cc0:	mov	r8, r3
   15cc4:	str	lr, [sp, #24]
   15cc8:	sub	sp, sp, #12
   15ccc:	ldr	r5, [r0, #216]	; 0xd8
   15cd0:	subs	r0, r5, #0
   15cd4:	beq	15d08 <__flatcc_fb_open_output_file@@Base+0x64>
   15cd8:	bl	14054 <strlen@plt>
   15cdc:	ldr	r4, [r6, #204]	; 0xcc
   15ce0:	cmp	r4, #0
   15ce4:	movne	r4, #0
   15ce8:	beq	15d20 <__flatcc_fb_open_output_file@@Base+0x7c>
   15cec:	mov	r0, r4
   15cf0:	add	sp, sp, #12
   15cf4:	ldrd	r4, [sp]
   15cf8:	ldrd	r6, [sp, #8]
   15cfc:	ldrd	r8, [sp, #16]
   15d00:	add	sp, sp, #24
   15d04:	pop	{pc}		; (ldr pc, [sp], #4)
   15d08:	ldr	r4, [r6, #204]	; 0xcc
   15d0c:	movw	r5, #45408	; 0xb160
   15d10:	movt	r5, #4
   15d14:	cmp	r4, #0
   15d18:	movne	r4, #0
   15d1c:	bne	15cec <__flatcc_fb_open_output_file@@Base+0x48>
   15d20:	mov	ip, #1
   15d24:	mov	r1, r0
   15d28:	mov	r3, r9
   15d2c:	mov	r0, r5
   15d30:	mov	r2, r7
   15d34:	stm	sp, {r8, ip}
   15d38:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   15d3c:	subs	r5, r0, #0
   15d40:	beq	15d8c <__flatcc_fb_open_output_file@@Base+0xe8>
   15d44:	movw	r1, #3664	; 0xe50
   15d48:	movt	r1, #4
   15d4c:	bl	13fa0 <fopen@plt>
   15d50:	cmp	r0, #0
   15d54:	str	r0, [r6, #204]	; 0xcc
   15d58:	beq	15d68 <__flatcc_fb_open_output_file@@Base+0xc4>
   15d5c:	mov	r0, r5
   15d60:	bl	13fac <free@plt>
   15d64:	b	15cec <__flatcc_fb_open_output_file@@Base+0x48>
   15d68:	movw	r3, #49320	; 0xc0a8
   15d6c:	movt	r3, #6
   15d70:	movw	r1, #3724	; 0xe8c
   15d74:	movt	r1, #4
   15d78:	ldr	r0, [r3]
   15d7c:	mov	r2, r5
   15d80:	mvn	r4, #0
   15d84:	bl	1406c <fprintf@plt>
   15d88:	b	15d5c <__flatcc_fb_open_output_file@@Base+0xb8>
   15d8c:	bl	15c74 <flatcc_destroy_context@@Base+0x48>

00015d90 <__flatcc_fb_close_output_file@@Base>:
   15d90:	ldr	r3, [r0, #212]	; 0xd4
   15d94:	ldr	r2, [r3, #124]	; 0x7c
   15d98:	cmp	r2, #0
   15d9c:	bxne	lr
   15da0:	strd	r4, [sp, #-16]!
   15da4:	ldr	r5, [r3, #108]	; 0x6c
   15da8:	str	r6, [sp, #8]
   15dac:	str	lr, [sp, #12]
   15db0:	cmp	r5, #0
   15db4:	bne	15dd4 <__flatcc_fb_close_output_file@@Base+0x44>
   15db8:	ldr	r3, [r0, #204]	; 0xcc
   15dbc:	cmp	r3, #0
   15dc0:	beq	15dd4 <__flatcc_fb_close_output_file@@Base+0x44>
   15dc4:	mov	r4, r0
   15dc8:	mov	r0, r3
   15dcc:	bl	140b4 <fclose@plt>
   15dd0:	str	r5, [r4, #204]	; 0xcc
   15dd4:	ldrd	r4, [sp]
   15dd8:	ldr	r6, [sp, #8]
   15ddc:	add	sp, sp, #12
   15de0:	pop	{pc}		; (ldr pc, [sp], #4)

00015de4 <__flatcc_fb_end_output_c@@Base>:
   15de4:	movw	r3, #49324	; 0xc0ac
   15de8:	movt	r3, #6
   15dec:	str	r4, [sp, #-8]!
   15df0:	mov	r4, r0
   15df4:	ldr	r3, [r3]
   15df8:	ldr	r0, [r0, #204]	; 0xcc
   15dfc:	str	lr, [sp, #4]
   15e00:	cmp	r3, r0
   15e04:	cmpne	r0, #0
   15e08:	beq	15e10 <__flatcc_fb_end_output_c@@Base+0x2c>
   15e0c:	bl	140b4 <fclose@plt>
   15e10:	mov	r3, #0
   15e14:	str	r3, [r4, #204]	; 0xcc
   15e18:	ldr	r4, [sp]
   15e1c:	add	sp, sp, #4
   15e20:	pop	{pc}		; (ldr pc, [sp], #4)

00015e24 <__flatcc_fb_init_output_c@@Base>:
   15e24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15e28:	mov	r5, r1
   15e2c:	movw	ip, #3664	; 0xe50
   15e30:	movt	ip, #4
   15e34:	movw	r3, #45408	; 0xb160
   15e38:	movt	r3, #4
   15e3c:	str	lr, [sp, #28]
   15e40:	mov	r2, #232	; 0xe8
   15e44:	ldr	lr, [r1, #128]	; 0x80
   15e48:	mov	r4, r0
   15e4c:	str	sl, [sp, #24]
   15e50:	ldr	sl, [r1, #216]	; 0xd8
   15e54:	mov	r1, #0
   15e58:	strd	r6, [sp, #8]
   15e5c:	strd	r8, [sp, #16]
   15e60:	movw	r8, #3760	; 0xeb0
   15e64:	movt	r8, #4
   15e68:	cmp	lr, r1
   15e6c:	moveq	r8, ip
   15e70:	cmp	sl, r1
   15e74:	moveq	sl, r3
   15e78:	bl	14084 <memset@plt>
   15e7c:	ldr	r7, [r5, #196]	; 0xc4
   15e80:	str	r5, [r4, #212]	; 0xd4
   15e84:	cmp	r7, #0
   15e88:	beq	15fa8 <__flatcc_fb_init_output_c@@Base+0x184>
   15e8c:	mov	r0, r7
   15e90:	bl	14054 <strlen@plt>
   15e94:	cmp	r0, #100	; 0x64
   15e98:	mov	r6, r0
   15e9c:	bhi	15ff0 <__flatcc_fb_init_output_c@@Base+0x1cc>
   15ea0:	mov	r1, r7
   15ea4:	mov	r2, #100	; 0x64
   15ea8:	mov	r0, r4
   15eac:	bl	14090 <strncpy@plt>
   15eb0:	mov	r3, #0
   15eb4:	cmp	r6, r3
   15eb8:	strb	r3, [r4, #100]	; 0x64
   15ebc:	bne	15f90 <__flatcc_fb_init_output_c@@Base+0x16c>
   15ec0:	mov	r7, r4
   15ec4:	ldrb	r9, [r7], #102	; 0x66
   15ec8:	cmp	r9, #0
   15ecc:	beq	15ef0 <__flatcc_fb_init_output_c@@Base+0xcc>
   15ed0:	bl	14030 <__ctype_toupper_loc@plt>
   15ed4:	mov	r3, r4
   15ed8:	ldr	r2, [r0]
   15edc:	ldr	r2, [r2, r9, lsl #2]
   15ee0:	strb	r2, [r7], #1
   15ee4:	ldrb	r9, [r3, #1]!
   15ee8:	cmp	r9, #0
   15eec:	bne	15ed8 <__flatcc_fb_init_output_c@@Base+0xb4>
   15ef0:	mov	r3, #0
   15ef4:	add	r6, r4, r6
   15ef8:	strb	r3, [r7]
   15efc:	strb	r3, [r6, #102]	; 0x66
   15f00:	ldr	r6, [r5, #108]	; 0x6c
   15f04:	ldr	r2, [r5, #176]	; 0xb0
   15f08:	cmp	r6, r3
   15f0c:	str	r2, [r4, #224]	; 0xe0
   15f10:	bne	15f78 <__flatcc_fb_init_output_c@@Base+0x154>
   15f14:	ldr	r3, [r4, #212]	; 0xd4
   15f18:	ldr	r1, [r3, #124]	; 0x7c
   15f1c:	cmp	r1, #0
   15f20:	beq	15f5c <__flatcc_fb_init_output_c@@Base+0x138>
   15f24:	mov	r0, sl
   15f28:	movw	r2, #45408	; 0xb160
   15f2c:	movt	r2, #4
   15f30:	mov	r3, #1
   15f34:	bl	2bc2c <__flatcc_fb_create_join_path@@Base>
   15f38:	subs	r5, r0, #0
   15f3c:	beq	16014 <__flatcc_fb_init_output_c@@Base+0x1f0>
   15f40:	mov	r1, r8
   15f44:	bl	13fa0 <fopen@plt>
   15f48:	cmp	r0, #0
   15f4c:	str	r0, [r4, #204]	; 0xcc
   15f50:	beq	15fcc <__flatcc_fb_init_output_c@@Base+0x1a8>
   15f54:	mov	r0, r5
   15f58:	bl	13fac <free@plt>
   15f5c:	mov	r0, r6
   15f60:	ldrd	r4, [sp]
   15f64:	ldrd	r6, [sp, #8]
   15f68:	ldrd	r8, [sp, #16]
   15f6c:	ldr	sl, [sp, #24]
   15f70:	add	sp, sp, #28
   15f74:	pop	{pc}		; (ldr pc, [sp], #4)
   15f78:	movw	r2, #49324	; 0xc0ac
   15f7c:	movt	r2, #6
   15f80:	ldr	r2, [r2]
   15f84:	mov	r6, r3
   15f88:	str	r2, [r4, #204]	; 0xcc
   15f8c:	b	15f5c <__flatcc_fb_init_output_c@@Base+0x138>
   15f90:	add	r1, r6, #1
   15f94:	mov	r2, #95	; 0x5f
   15f98:	mov	r3, #0
   15f9c:	strb	r2, [r4, r6]
   15fa0:	strb	r3, [r4, r1]
   15fa4:	b	15ec0 <__flatcc_fb_init_output_c@@Base+0x9c>
   15fa8:	movw	r1, #3820	; 0xeec
   15fac:	movt	r1, #4
   15fb0:	mov	r2, #100	; 0x64
   15fb4:	mov	r0, r4
   15fb8:	bl	14090 <strncpy@plt>
   15fbc:	mov	r6, #11
   15fc0:	mov	r1, #12
   15fc4:	strb	r7, [r4, #100]	; 0x64
   15fc8:	b	15f94 <__flatcc_fb_init_output_c@@Base+0x170>
   15fcc:	movw	r3, #49320	; 0xc0a8
   15fd0:	movt	r3, #6
   15fd4:	movw	r1, #3724	; 0xe8c
   15fd8:	movt	r1, #4
   15fdc:	ldr	r0, [r3]
   15fe0:	mov	r2, r5
   15fe4:	mvn	r6, #0
   15fe8:	bl	1406c <fprintf@plt>
   15fec:	b	15f54 <__flatcc_fb_init_output_c@@Base+0x130>
   15ff0:	movw	r3, #49320	; 0xc0a8
   15ff4:	movt	r3, #6
   15ff8:	movw	r1, #3764	; 0xeb4
   15ffc:	movt	r1, #4
   16000:	ldr	r0, [r3]
   16004:	mov	r2, #100	; 0x64
   16008:	mvn	r6, #0
   1600c:	bl	1406c <fprintf@plt>
   16010:	b	15f5c <__flatcc_fb_init_output_c@@Base+0x138>
   16014:	bl	15c74 <flatcc_destroy_context@@Base+0x48>

00016018 <__flatcc_fb_gen_c_includes@@Base>:
   16018:	ldr	r3, [r0, #208]	; 0xd0
   1601c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16020:	ldr	r5, [r3]
   16024:	strd	r6, [sp, #8]
   16028:	mov	r7, r0
   1602c:	mov	r0, #0
   16030:	strd	r8, [sp, #16]
   16034:	mov	r9, r1
   16038:	mov	r1, #0
   1603c:	strd	sl, [sp, #24]
   16040:	mov	sl, r2
   16044:	mov	r2, #0
   16048:	str	lr, [sp, #32]
   1604c:	sub	sp, sp, #28
   16050:	strd	r0, [sp, #8]
   16054:	ldr	r0, [r3, #164]	; 0xa4
   16058:	mov	r3, #0
   1605c:	strd	r2, [sp, #16]
   16060:	bl	2ba14 <__flatcc_fb_copy_path@@Base>
   16064:	mov	r1, r0
   16068:	mov	r2, #1
   1606c:	add	r0, sp, #8
   16070:	bl	27b38 <str_set_insert_item@@Base>
   16074:	cmp	r5, #0
   16078:	beq	16108 <__flatcc_fb_gen_c_includes@@Base+0xf0>
   1607c:	movw	r8, #3832	; 0xef8
   16080:	movt	r8, #4
   16084:	ldr	r3, [r7, #212]	; 0xd4
   16088:	ldrd	r0, [r5, #8]
   1608c:	ldr	r2, [r3, #96]	; 0x60
   16090:	bl	2c03c <__flatcc_fb_create_basename@@Base>
   16094:	subs	r6, r0, #0
   16098:	beq	1615c <__flatcc_fb_gen_c_includes@@Base+0x144>
   1609c:	ldr	r5, [r5]
   160a0:	bl	2ba14 <__flatcc_fb_copy_path@@Base>
   160a4:	subs	fp, r0, #0
   160a8:	beq	1615c <__flatcc_fb_gen_c_includes@@Base+0x144>
   160ac:	ldrb	r4, [fp]
   160b0:	cmp	r4, #0
   160b4:	beq	160d8 <__flatcc_fb_gen_c_includes@@Base+0xc0>
   160b8:	bl	14030 <__ctype_toupper_loc@plt>
   160bc:	mov	r3, fp
   160c0:	ldr	r2, [r0]
   160c4:	ldr	r2, [r2, r4, lsl #2]
   160c8:	strb	r2, [r3]
   160cc:	ldrb	r4, [r3, #1]!
   160d0:	cmp	r4, #0
   160d4:	bne	160c0 <__flatcc_fb_gen_c_includes@@Base+0xa8>
   160d8:	mov	r2, #1
   160dc:	mov	r1, fp
   160e0:	add	r0, sp, #8
   160e4:	bl	27b38 <str_set_insert_item@@Base>
   160e8:	cmp	r0, #0
   160ec:	beq	16138 <__flatcc_fb_gen_c_includes@@Base+0x120>
   160f0:	mov	r0, fp
   160f4:	bl	13fac <free@plt>
   160f8:	mov	r0, r6
   160fc:	bl	13fac <free@plt>
   16100:	cmp	r5, #0
   16104:	bne	16084 <__flatcc_fb_gen_c_includes@@Base+0x6c>
   16108:	add	r0, sp, #8
   1610c:	mov	r2, #0
   16110:	movw	r1, #23660	; 0x5c6c
   16114:	movt	r1, #1
   16118:	bl	27a04 <str_set_destroy@@Base>
   1611c:	add	sp, sp, #28
   16120:	ldrd	r4, [sp]
   16124:	ldrd	r6, [sp, #8]
   16128:	ldrd	r8, [sp, #16]
   1612c:	ldrd	sl, [sp, #24]
   16130:	add	sp, sp, #32
   16134:	pop	{pc}		; (ldr pc, [sp], #4)
   16138:	mov	r2, fp
   1613c:	mov	r3, sl
   16140:	stm	sp, {r6, r9}
   16144:	mov	r1, r8
   16148:	ldr	r0, [r7, #204]	; 0xcc
   1614c:	bl	1406c <fprintf@plt>
   16150:	mov	r0, r6
   16154:	bl	13fac <free@plt>
   16158:	b	16100 <__flatcc_fb_gen_c_includes@@Base+0xe8>
   1615c:	movw	r3, #49320	; 0xc0a8
   16160:	movt	r3, #6
   16164:	movw	r0, #3360	; 0xd20
   16168:	movt	r0, #4
   1616c:	ldr	r3, [r3]
   16170:	mov	r2, #34	; 0x22
   16174:	mov	r1, #1
   16178:	bl	13ff4 <fwrite@plt>
   1617c:	mov	r0, #1
   16180:	bl	14048 <exit@plt>

00016184 <__flatcc_fb_copy_scope@@Base>:
   16184:	ldr	r3, [r0]
   16188:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1618c:	ldr	r4, [r0, #24]
   16190:	strd	r6, [sp, #8]
   16194:	str	r8, [sp, #16]
   16198:	cmp	r3, #0
   1619c:	str	lr, [sp, #20]
   161a0:	mov	ip, r4
   161a4:	mov	r6, r4
   161a8:	beq	161c8 <__flatcc_fb_copy_scope@@Base+0x44>
   161ac:	ldr	r2, [r3, #4]
   161b0:	ldr	r3, [r3]
   161b4:	ldr	r2, [r2, #4]
   161b8:	cmp	r3, #0
   161bc:	add	r2, r2, #1
   161c0:	add	ip, ip, r2
   161c4:	bne	161ac <__flatcc_fb_copy_scope@@Base+0x28>
   161c8:	cmp	ip, #101	; 0x65
   161cc:	movhi	r3, #0
   161d0:	mvnhi	r4, #0
   161d4:	strbhi	r3, [r1]
   161d8:	bhi	1623c <__flatcc_fb_copy_scope@@Base+0xb8>
   161dc:	mov	r5, r0
   161e0:	mov	r7, r1
   161e4:	mov	r0, r1
   161e8:	mov	r2, r4
   161ec:	ldr	r1, [r5, #20]
   161f0:	bl	13fb8 <memcpy@plt>
   161f4:	ldr	r5, [r5]
   161f8:	cmp	r5, #0
   161fc:	beq	16234 <__flatcc_fb_copy_scope@@Base+0xb0>
   16200:	mov	r8, #95	; 0x5f
   16204:	ldr	r3, [r5, #4]
   16208:	add	r0, r7, r6
   1620c:	ldm	r3, {r1, r4}
   16210:	mov	r2, r4
   16214:	add	r4, r4, r6
   16218:	bl	13fb8 <memcpy@plt>
   1621c:	strb	r8, [r7, r4]
   16220:	add	r6, r4, #1
   16224:	ldr	r5, [r5]
   16228:	cmp	r5, #0
   1622c:	bne	16204 <__flatcc_fb_copy_scope@@Base+0x80>
   16230:	mov	r4, r6
   16234:	mov	r3, #0
   16238:	strb	r3, [r7, r6]
   1623c:	mov	r0, r4
   16240:	ldrd	r4, [sp]
   16244:	ldrd	r6, [sp, #8]
   16248:	ldr	r8, [sp, #16]
   1624c:	add	sp, sp, #20
   16250:	pop	{pc}		; (ldr pc, [sp], #4)

00016254 <__flatcc_fb_scoped_symbol_name@@Base>:
   16254:	ldr	r3, [r2, #204]	; 0xcc
   16258:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1625c:	mov	r4, r2
   16260:	strd	r6, [sp, #8]
   16264:	strd	r8, [sp, #16]
   16268:	str	sl, [sp, #24]
   1626c:	cmp	r3, r0
   16270:	str	lr, [sp, #28]
   16274:	ldr	r7, [r1, #4]
   16278:	beq	16394 <__flatcc_fb_scoped_symbol_name@@Base+0x140>
   1627c:	mov	r6, r0
   16280:	ldr	r3, [r0]
   16284:	ldr	r5, [r0, #24]
   16288:	cmp	r3, #0
   1628c:	mov	r1, r5
   16290:	mov	r8, r5
   16294:	beq	162b4 <__flatcc_fb_scoped_symbol_name@@Base+0x60>
   16298:	ldr	r2, [r3, #4]
   1629c:	ldr	r3, [r3]
   162a0:	ldr	r2, [r2, #4]
   162a4:	cmp	r3, #0
   162a8:	add	r2, r2, #1
   162ac:	add	r1, r1, r2
   162b0:	bne	16298 <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   162b4:	cmp	r1, #101	; 0x65
   162b8:	movhi	r3, #0
   162bc:	strbhi	r3, [r4]
   162c0:	bhi	1636c <__flatcc_fb_scoped_symbol_name@@Base+0x118>
   162c4:	mov	r2, r5
   162c8:	mov	r0, r4
   162cc:	ldr	r1, [r6, #20]
   162d0:	bl	13fb8 <memcpy@plt>
   162d4:	ldr	r6, [r6]
   162d8:	cmp	r6, #0
   162dc:	beq	16314 <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   162e0:	mov	r9, #95	; 0x5f
   162e4:	ldr	r3, [r6, #4]
   162e8:	add	r0, r4, r8
   162ec:	ldm	r3, {r1, r5}
   162f0:	mov	r2, r5
   162f4:	add	r5, r5, r8
   162f8:	bl	13fb8 <memcpy@plt>
   162fc:	strb	r9, [r4, r5]
   16300:	add	r8, r5, #1
   16304:	ldr	r6, [r6]
   16308:	cmp	r6, #0
   1630c:	bne	162e4 <__flatcc_fb_scoped_symbol_name@@Base+0x90>
   16310:	mov	r5, r8
   16314:	mov	r3, #0
   16318:	cmp	r5, r3
   1631c:	strb	r3, [r4, r8]
   16320:	str	r5, [r4, #208]	; 0xd0
   16324:	blt	1636c <__flatcc_fb_scoped_symbol_name@@Base+0x118>
   16328:	ldm	r7, {r1, r2}
   1632c:	add	r0, r2, r5
   16330:	str	r2, [r4, #212]	; 0xd4
   16334:	cmp	r0, #203	; 0xcb
   16338:	str	r0, [r4, #216]	; 0xd8
   1633c:	bgt	1639c <__flatcc_fb_scoped_symbol_name@@Base+0x148>
   16340:	add	r0, r4, r5
   16344:	bl	13fb8 <memcpy@plt>
   16348:	ldr	r3, [r4, #216]	; 0xd8
   1634c:	mov	r2, #0
   16350:	strb	r2, [r4, r3]
   16354:	ldrd	r4, [sp]
   16358:	ldrd	r6, [sp, #8]
   1635c:	ldrd	r8, [sp, #16]
   16360:	ldr	sl, [sp, #24]
   16364:	add	sp, sp, #28
   16368:	pop	{pc}		; (ldr pc, [sp], #4)
   1636c:	mov	r1, #0
   16370:	movw	r3, #49320	; 0xc0a8
   16374:	movt	r3, #6
   16378:	movw	r0, #3872	; 0xf20
   1637c:	movt	r0, #4
   16380:	mov	r2, #28
   16384:	str	r1, [r4, #208]	; 0xd0
   16388:	mov	r1, #1
   1638c:	ldr	r3, [r3]
   16390:	bl	13ff4 <fwrite@plt>
   16394:	ldr	r5, [r4, #208]	; 0xd0
   16398:	b	16328 <__flatcc_fb_scoped_symbol_name@@Base+0xd4>
   1639c:	movw	r0, #49320	; 0xc0a8
   163a0:	movt	r0, #6
   163a4:	mov	r3, r1
   163a8:	movw	r1, #3904	; 0xf40
   163ac:	movt	r1, #4
   163b0:	ldr	r0, [r0]
   163b4:	bl	1406c <fprintf@plt>
   163b8:	ldr	r5, [r4, #208]	; 0xd0
   163bc:	mov	r3, #203	; 0xcb
   163c0:	ldr	r1, [r7]
   163c4:	sub	r2, r3, r5
   163c8:	strd	r2, [r4, #212]	; 0xd4
   163cc:	b	16340 <__flatcc_fb_scoped_symbol_name@@Base+0xec>

000163d0 <__flatcc_fb_codegen_common_c@@Base>:
   163d0:	strd	r4, [sp, #-20]!	; 0xffffffec
   163d4:	mov	r4, r0
   163d8:	strd	r6, [sp, #8]
   163dc:	str	lr, [sp, #16]
   163e0:	sub	sp, sp, #12
   163e4:	bl	14054 <strlen@plt>
   163e8:	ldr	r3, [r4, #212]	; 0xd4
   163ec:	sub	r6, r0, #1
   163f0:	ldr	r2, [r3, #144]	; 0x90
   163f4:	cmp	r2, #0
   163f8:	bne	16424 <__flatcc_fb_codegen_common_c@@Base+0x54>
   163fc:	ldr	r2, [r3, #148]	; 0x94
   16400:	cmp	r2, #0
   16404:	bne	16474 <__flatcc_fb_codegen_common_c@@Base+0xa4>
   16408:	mov	r5, #0
   1640c:	mov	r0, r5
   16410:	add	sp, sp, #12
   16414:	ldrd	r4, [sp]
   16418:	ldrd	r6, [sp, #8]
   1641c:	add	sp, sp, #16
   16420:	pop	{pc}		; (ldr pc, [sp], #4)
   16424:	ldr	r5, [r3, #216]	; 0xd8
   16428:	subs	r0, r5, #0
   1642c:	beq	164d8 <__flatcc_fb_codegen_common_c@@Base+0x108>
   16430:	bl	14054 <strlen@plt>
   16434:	ldr	r3, [r4, #204]	; 0xcc
   16438:	cmp	r3, #0
   1643c:	beq	16508 <__flatcc_fb_codegen_common_c@@Base+0x138>
   16440:	mov	r0, r4
   16444:	bl	191dc <__flatcc_fb_gen_common_c_header@@Base>
   16448:	ldr	r3, [r4, #212]	; 0xd4
   1644c:	mov	r5, r0
   16450:	ldr	r2, [r3, #124]	; 0x7c
   16454:	cmp	r2, #0
   16458:	beq	164e4 <__flatcc_fb_codegen_common_c@@Base+0x114>
   1645c:	cmp	r5, #0
   16460:	bne	1640c <__flatcc_fb_codegen_common_c@@Base+0x3c>
   16464:	ldr	r3, [r4, #212]	; 0xd4
   16468:	ldr	r2, [r3, #148]	; 0x94
   1646c:	cmp	r2, #0
   16470:	beq	16408 <__flatcc_fb_codegen_common_c@@Base+0x38>
   16474:	ldr	r5, [r3, #216]	; 0xd8
   16478:	subs	r0, r5, #0
   1647c:	beq	164cc <__flatcc_fb_codegen_common_c@@Base+0xfc>
   16480:	bl	14054 <strlen@plt>
   16484:	ldr	r3, [r4, #204]	; 0xcc
   16488:	cmp	r3, #0
   1648c:	beq	1655c <__flatcc_fb_codegen_common_c@@Base+0x18c>
   16490:	mov	r0, r4
   16494:	bl	1cf08 <__flatcc_fb_gen_common_c_builder_header@@Base>
   16498:	ldr	r3, [r4, #212]	; 0xd4
   1649c:	ldr	r2, [r3, #124]	; 0x7c
   164a0:	cmp	r2, #0
   164a4:	bne	16408 <__flatcc_fb_codegen_common_c@@Base+0x38>
   164a8:	ldr	r5, [r3, #108]	; 0x6c
   164ac:	cmp	r5, #0
   164b0:	bne	16408 <__flatcc_fb_codegen_common_c@@Base+0x38>
   164b4:	ldr	r0, [r4, #204]	; 0xcc
   164b8:	cmp	r0, #0
   164bc:	beq	16408 <__flatcc_fb_codegen_common_c@@Base+0x38>
   164c0:	bl	140b4 <fclose@plt>
   164c4:	str	r5, [r4, #204]	; 0xcc
   164c8:	b	1640c <__flatcc_fb_codegen_common_c@@Base+0x3c>
   164cc:	movw	r5, #45408	; 0xb160
   164d0:	movt	r5, #4
   164d4:	b	16484 <__flatcc_fb_codegen_common_c@@Base+0xb4>
   164d8:	movw	r5, #45408	; 0xb160
   164dc:	movt	r5, #4
   164e0:	b	16434 <__flatcc_fb_codegen_common_c@@Base+0x64>
   164e4:	ldr	r7, [r3, #108]	; 0x6c
   164e8:	cmp	r7, #0
   164ec:	bne	1645c <__flatcc_fb_codegen_common_c@@Base+0x8c>
   164f0:	ldr	r0, [r4, #204]	; 0xcc
   164f4:	cmp	r0, #0
   164f8:	beq	1645c <__flatcc_fb_codegen_common_c@@Base+0x8c>
   164fc:	bl	140b4 <fclose@plt>
   16500:	str	r7, [r4, #204]	; 0xcc
   16504:	b	1645c <__flatcc_fb_codegen_common_c@@Base+0x8c>
   16508:	mov	r2, #1
   1650c:	movw	r3, #3944	; 0xf68
   16510:	movt	r3, #4
   16514:	mov	r1, r0
   16518:	mov	r0, r5
   1651c:	str	r3, [sp]
   16520:	mov	r3, r6
   16524:	str	r2, [sp, #4]
   16528:	mov	r2, r4
   1652c:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   16530:	subs	r7, r0, #0
   16534:	beq	16604 <__flatcc_fb_codegen_common_c@@Base+0x234>
   16538:	movw	r1, #3664	; 0xe50
   1653c:	movt	r1, #4
   16540:	bl	13fa0 <fopen@plt>
   16544:	cmp	r0, #0
   16548:	str	r0, [r4, #204]	; 0xcc
   1654c:	beq	165ac <__flatcc_fb_codegen_common_c@@Base+0x1dc>
   16550:	mov	r0, r7
   16554:	bl	13fac <free@plt>
   16558:	b	16440 <__flatcc_fb_codegen_common_c@@Base+0x70>
   1655c:	mov	ip, #1
   16560:	movw	r2, #3964	; 0xf7c
   16564:	movt	r2, #4
   16568:	mov	r3, r6
   1656c:	mov	r1, r0
   16570:	mov	r0, r5
   16574:	stm	sp, {r2, ip}
   16578:	mov	r2, r4
   1657c:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   16580:	subs	r6, r0, #0
   16584:	beq	16604 <__flatcc_fb_codegen_common_c@@Base+0x234>
   16588:	movw	r1, #3664	; 0xe50
   1658c:	movt	r1, #4
   16590:	bl	13fa0 <fopen@plt>
   16594:	cmp	r0, #0
   16598:	str	r0, [r4, #204]	; 0xcc
   1659c:	beq	165d8 <__flatcc_fb_codegen_common_c@@Base+0x208>
   165a0:	mov	r0, r6
   165a4:	bl	13fac <free@plt>
   165a8:	b	16490 <__flatcc_fb_codegen_common_c@@Base+0xc0>
   165ac:	movw	r3, #49320	; 0xc0a8
   165b0:	movt	r3, #6
   165b4:	mov	r2, r7
   165b8:	movw	r1, #3724	; 0xe8c
   165bc:	movt	r1, #4
   165c0:	ldr	r0, [r3]
   165c4:	mvn	r5, #0
   165c8:	bl	1406c <fprintf@plt>
   165cc:	mov	r0, r7
   165d0:	bl	13fac <free@plt>
   165d4:	b	1640c <__flatcc_fb_codegen_common_c@@Base+0x3c>
   165d8:	movw	r3, #49320	; 0xc0a8
   165dc:	movt	r3, #6
   165e0:	mov	r2, r6
   165e4:	movw	r1, #3724	; 0xe8c
   165e8:	movt	r1, #4
   165ec:	ldr	r0, [r3]
   165f0:	mvn	r5, #0
   165f4:	bl	1406c <fprintf@plt>
   165f8:	mov	r0, r6
   165fc:	bl	13fac <free@plt>
   16600:	b	1640c <__flatcc_fb_codegen_common_c@@Base+0x3c>
   16604:	bl	15c74 <flatcc_destroy_context@@Base+0x48>

00016608 <__flatcc_fb_codegen_c@@Base>:
   16608:	mov	r3, r1
   1660c:	strd	r4, [sp, #-20]!	; 0xffffffec
   16610:	mov	r4, r0
   16614:	mov	r2, #0
   16618:	ldr	r0, [r1, #60]	; 0x3c
   1661c:	mov	r1, r2
   16620:	strd	r6, [sp, #8]
   16624:	str	lr, [sp, #16]
   16628:	sub	sp, sp, #12
   1662c:	str	r3, [r4, #208]	; 0xd0
   16630:	bl	2a1ec <fb_scope_table_find@@Base>
   16634:	ldr	r3, [r4, #208]	; 0xd0
   16638:	ldr	r5, [r3, #160]	; 0xa0
   1663c:	str	r0, [r4, #216]	; 0xd8
   16640:	mov	r0, r5
   16644:	bl	14054 <strlen@plt>
   16648:	ldr	r3, [r4, #212]	; 0xd4
   1664c:	mov	r6, r0
   16650:	ldr	r2, [r3, #152]	; 0x98
   16654:	cmp	r2, #0
   16658:	bne	1676c <__flatcc_fb_codegen_c@@Base+0x164>
   1665c:	ldr	r2, [r3, #156]	; 0x9c
   16660:	cmp	r2, #0
   16664:	bne	167d0 <__flatcc_fb_codegen_c@@Base+0x1c8>
   16668:	ldr	r2, [r3, #160]	; 0xa0
   1666c:	cmp	r2, #0
   16670:	bne	16834 <__flatcc_fb_codegen_c@@Base+0x22c>
   16674:	ldr	r2, [r3, #164]	; 0xa4
   16678:	cmp	r2, #0
   1667c:	bne	166a8 <__flatcc_fb_codegen_c@@Base+0xa0>
   16680:	ldr	r2, [r3, #168]	; 0xa8
   16684:	cmp	r2, #0
   16688:	bne	1670c <__flatcc_fb_codegen_c@@Base+0x104>
   1668c:	mov	r5, #0
   16690:	mov	r0, r5
   16694:	add	sp, sp, #12
   16698:	ldrd	r4, [sp]
   1669c:	ldrd	r6, [sp, #8]
   166a0:	add	sp, sp, #16
   166a4:	pop	{pc}		; (ldr pc, [sp], #4)
   166a8:	ldr	r5, [r3, #216]	; 0xd8
   166ac:	subs	r0, r5, #0
   166b0:	beq	168a4 <__flatcc_fb_codegen_c@@Base+0x29c>
   166b4:	bl	14054 <strlen@plt>
   166b8:	ldr	r3, [r4, #204]	; 0xcc
   166bc:	cmp	r3, #0
   166c0:	beq	169cc <__flatcc_fb_codegen_c@@Base+0x3c4>
   166c4:	mov	r0, r4
   166c8:	bl	2290c <__flatcc_fb_gen_c_json_parser@@Base>
   166cc:	subs	r5, r0, #0
   166d0:	bne	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   166d4:	ldr	r3, [r4, #212]	; 0xd4
   166d8:	ldr	r2, [r3, #124]	; 0x7c
   166dc:	cmp	r2, #0
   166e0:	bne	16680 <__flatcc_fb_codegen_c@@Base+0x78>
   166e4:	ldr	r5, [r3, #108]	; 0x6c
   166e8:	cmp	r5, #0
   166ec:	bne	16680 <__flatcc_fb_codegen_c@@Base+0x78>
   166f0:	ldr	r0, [r4, #204]	; 0xcc
   166f4:	cmp	r0, #0
   166f8:	beq	16680 <__flatcc_fb_codegen_c@@Base+0x78>
   166fc:	bl	140b4 <fclose@plt>
   16700:	str	r5, [r4, #204]	; 0xcc
   16704:	ldr	r3, [r4, #212]	; 0xd4
   16708:	b	16680 <__flatcc_fb_codegen_c@@Base+0x78>
   1670c:	ldr	r5, [r3, #216]	; 0xd8
   16710:	subs	r0, r5, #0
   16714:	beq	168b0 <__flatcc_fb_codegen_c@@Base+0x2a8>
   16718:	bl	14054 <strlen@plt>
   1671c:	ldr	r3, [r4, #204]	; 0xcc
   16720:	cmp	r3, #0
   16724:	beq	16a20 <__flatcc_fb_codegen_c@@Base+0x418>
   16728:	mov	r0, r4
   1672c:	bl	2550c <__flatcc_fb_gen_c_json_printer@@Base>
   16730:	subs	r5, r0, #0
   16734:	bne	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   16738:	ldr	r3, [r4, #212]	; 0xd4
   1673c:	ldr	r2, [r3, #124]	; 0x7c
   16740:	cmp	r2, #0
   16744:	bne	1668c <__flatcc_fb_codegen_c@@Base+0x84>
   16748:	ldr	r5, [r3, #108]	; 0x6c
   1674c:	cmp	r5, #0
   16750:	bne	1668c <__flatcc_fb_codegen_c@@Base+0x84>
   16754:	ldr	r0, [r4, #204]	; 0xcc
   16758:	cmp	r0, #0
   1675c:	beq	1668c <__flatcc_fb_codegen_c@@Base+0x84>
   16760:	bl	140b4 <fclose@plt>
   16764:	str	r5, [r4, #204]	; 0xcc
   16768:	b	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   1676c:	ldr	r7, [r3, #216]	; 0xd8
   16770:	subs	r0, r7, #0
   16774:	beq	168bc <__flatcc_fb_codegen_c@@Base+0x2b4>
   16778:	bl	14054 <strlen@plt>
   1677c:	ldr	r3, [r4, #204]	; 0xcc
   16780:	cmp	r3, #0
   16784:	beq	168c8 <__flatcc_fb_codegen_c@@Base+0x2c0>
   16788:	mov	r0, r4
   1678c:	bl	19e4c <__flatcc_fb_gen_c_reader@@Base>
   16790:	subs	r5, r0, #0
   16794:	bne	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   16798:	ldr	r3, [r4, #212]	; 0xd4
   1679c:	ldr	r2, [r3, #124]	; 0x7c
   167a0:	cmp	r2, #0
   167a4:	bne	1665c <__flatcc_fb_codegen_c@@Base+0x54>
   167a8:	ldr	r5, [r3, #108]	; 0x6c
   167ac:	cmp	r5, #0
   167b0:	bne	1665c <__flatcc_fb_codegen_c@@Base+0x54>
   167b4:	ldr	r0, [r4, #204]	; 0xcc
   167b8:	cmp	r0, #0
   167bc:	beq	1665c <__flatcc_fb_codegen_c@@Base+0x54>
   167c0:	bl	140b4 <fclose@plt>
   167c4:	str	r5, [r4, #204]	; 0xcc
   167c8:	ldr	r3, [r4, #212]	; 0xd4
   167cc:	b	1665c <__flatcc_fb_codegen_c@@Base+0x54>
   167d0:	ldr	r5, [r3, #216]	; 0xd8
   167d4:	subs	r0, r5, #0
   167d8:	beq	16918 <__flatcc_fb_codegen_c@@Base+0x310>
   167dc:	bl	14054 <strlen@plt>
   167e0:	ldr	r3, [r4, #204]	; 0xcc
   167e4:	cmp	r3, #0
   167e8:	beq	16924 <__flatcc_fb_codegen_c@@Base+0x31c>
   167ec:	mov	r0, r4
   167f0:	bl	1d7d4 <__flatcc_fb_gen_c_builder@@Base>
   167f4:	subs	r5, r0, #0
   167f8:	bne	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   167fc:	ldr	r3, [r4, #212]	; 0xd4
   16800:	ldr	r2, [r3, #124]	; 0x7c
   16804:	cmp	r2, #0
   16808:	bne	16668 <__flatcc_fb_codegen_c@@Base+0x60>
   1680c:	ldr	r5, [r3, #108]	; 0x6c
   16810:	cmp	r5, #0
   16814:	bne	16668 <__flatcc_fb_codegen_c@@Base+0x60>
   16818:	ldr	r0, [r4, #204]	; 0xcc
   1681c:	cmp	r0, #0
   16820:	beq	16668 <__flatcc_fb_codegen_c@@Base+0x60>
   16824:	bl	140b4 <fclose@plt>
   16828:	str	r5, [r4, #204]	; 0xcc
   1682c:	ldr	r3, [r4, #212]	; 0xd4
   16830:	b	16668 <__flatcc_fb_codegen_c@@Base+0x60>
   16834:	ldr	r5, [r3, #216]	; 0xd8
   16838:	subs	r0, r5, #0
   1683c:	beq	16898 <__flatcc_fb_codegen_c@@Base+0x290>
   16840:	bl	14054 <strlen@plt>
   16844:	ldr	r3, [r4, #204]	; 0xcc
   16848:	cmp	r3, #0
   1684c:	beq	16978 <__flatcc_fb_codegen_c@@Base+0x370>
   16850:	mov	r0, r4
   16854:	bl	1e93c <__flatcc_fb_gen_c_verifier@@Base>
   16858:	subs	r5, r0, #0
   1685c:	bne	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   16860:	ldr	r3, [r4, #212]	; 0xd4
   16864:	ldr	r2, [r3, #124]	; 0x7c
   16868:	cmp	r2, #0
   1686c:	bne	16674 <__flatcc_fb_codegen_c@@Base+0x6c>
   16870:	ldr	r5, [r3, #108]	; 0x6c
   16874:	cmp	r5, #0
   16878:	bne	16674 <__flatcc_fb_codegen_c@@Base+0x6c>
   1687c:	ldr	r0, [r4, #204]	; 0xcc
   16880:	cmp	r0, #0
   16884:	beq	16674 <__flatcc_fb_codegen_c@@Base+0x6c>
   16888:	bl	140b4 <fclose@plt>
   1688c:	str	r5, [r4, #204]	; 0xcc
   16890:	ldr	r3, [r4, #212]	; 0xd4
   16894:	b	16674 <__flatcc_fb_codegen_c@@Base+0x6c>
   16898:	movw	r5, #45408	; 0xb160
   1689c:	movt	r5, #4
   168a0:	b	16844 <__flatcc_fb_codegen_c@@Base+0x23c>
   168a4:	movw	r5, #45408	; 0xb160
   168a8:	movt	r5, #4
   168ac:	b	166b8 <__flatcc_fb_codegen_c@@Base+0xb0>
   168b0:	movw	r5, #45408	; 0xb160
   168b4:	movt	r5, #4
   168b8:	b	1671c <__flatcc_fb_codegen_c@@Base+0x114>
   168bc:	movw	r7, #45408	; 0xb160
   168c0:	movt	r7, #4
   168c4:	b	1677c <__flatcc_fb_codegen_c@@Base+0x174>
   168c8:	mov	ip, #1
   168cc:	movw	r3, #31380	; 0x7a94
   168d0:	movt	r3, #5
   168d4:	mov	r1, r0
   168d8:	mov	r2, r5
   168dc:	mov	r0, r7
   168e0:	stm	sp, {r3, ip}
   168e4:	mov	r3, r6
   168e8:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   168ec:	subs	r7, r0, #0
   168f0:	beq	16acc <__flatcc_fb_codegen_c@@Base+0x4c4>
   168f4:	movw	r1, #3664	; 0xe50
   168f8:	movt	r1, #4
   168fc:	bl	13fa0 <fopen@plt>
   16900:	cmp	r0, #0
   16904:	str	r0, [r4, #204]	; 0xcc
   16908:	beq	16a74 <__flatcc_fb_codegen_c@@Base+0x46c>
   1690c:	mov	r0, r7
   16910:	bl	13fac <free@plt>
   16914:	b	16788 <__flatcc_fb_codegen_c@@Base+0x180>
   16918:	movw	r5, #45408	; 0xb160
   1691c:	movt	r5, #4
   16920:	b	167e0 <__flatcc_fb_codegen_c@@Base+0x1d8>
   16924:	ldr	r2, [r4, #208]	; 0xd0
   16928:	mov	lr, #1
   1692c:	movw	ip, #31140	; 0x79a4
   16930:	movt	ip, #5
   16934:	mov	r1, r0
   16938:	mov	r3, r6
   1693c:	mov	r0, r5
   16940:	ldr	r2, [r2, #160]	; 0xa0
   16944:	stm	sp, {ip, lr}
   16948:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   1694c:	subs	r7, r0, #0
   16950:	beq	16acc <__flatcc_fb_codegen_c@@Base+0x4c4>
   16954:	movw	r1, #3664	; 0xe50
   16958:	movt	r1, #4
   1695c:	bl	13fa0 <fopen@plt>
   16960:	cmp	r0, #0
   16964:	str	r0, [r4, #204]	; 0xcc
   16968:	beq	16a74 <__flatcc_fb_codegen_c@@Base+0x46c>
   1696c:	mov	r0, r7
   16970:	bl	13fac <free@plt>
   16974:	b	167ec <__flatcc_fb_codegen_c@@Base+0x1e4>
   16978:	ldr	r2, [r4, #208]	; 0xd0
   1697c:	mov	lr, #1
   16980:	movw	ip, #3984	; 0xf90
   16984:	movt	ip, #4
   16988:	mov	r1, r0
   1698c:	mov	r3, r6
   16990:	mov	r0, r5
   16994:	ldr	r2, [r2, #160]	; 0xa0
   16998:	stm	sp, {ip, lr}
   1699c:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   169a0:	subs	r7, r0, #0
   169a4:	beq	16acc <__flatcc_fb_codegen_c@@Base+0x4c4>
   169a8:	movw	r1, #3664	; 0xe50
   169ac:	movt	r1, #4
   169b0:	bl	13fa0 <fopen@plt>
   169b4:	cmp	r0, #0
   169b8:	str	r0, [r4, #204]	; 0xcc
   169bc:	beq	16a74 <__flatcc_fb_codegen_c@@Base+0x46c>
   169c0:	mov	r0, r7
   169c4:	bl	13fac <free@plt>
   169c8:	b	16850 <__flatcc_fb_codegen_c@@Base+0x248>
   169cc:	ldr	r2, [r4, #208]	; 0xd0
   169d0:	mov	lr, #1
   169d4:	movw	ip, #3996	; 0xf9c
   169d8:	movt	ip, #4
   169dc:	mov	r1, r0
   169e0:	mov	r3, r6
   169e4:	mov	r0, r5
   169e8:	ldr	r2, [r2, #160]	; 0xa0
   169ec:	stm	sp, {ip, lr}
   169f0:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   169f4:	subs	r7, r0, #0
   169f8:	beq	16acc <__flatcc_fb_codegen_c@@Base+0x4c4>
   169fc:	movw	r1, #3664	; 0xe50
   16a00:	movt	r1, #4
   16a04:	bl	13fa0 <fopen@plt>
   16a08:	cmp	r0, #0
   16a0c:	str	r0, [r4, #204]	; 0xcc
   16a10:	beq	16a74 <__flatcc_fb_codegen_c@@Base+0x46c>
   16a14:	mov	r0, r7
   16a18:	bl	13fac <free@plt>
   16a1c:	b	166c4 <__flatcc_fb_codegen_c@@Base+0xbc>
   16a20:	ldr	r2, [r4, #208]	; 0xd0
   16a24:	mov	lr, #1
   16a28:	movw	ip, #4012	; 0xfac
   16a2c:	movt	ip, #4
   16a30:	mov	r3, r6
   16a34:	mov	r1, r0
   16a38:	mov	r0, r5
   16a3c:	ldr	r2, [r2, #160]	; 0xa0
   16a40:	stm	sp, {ip, lr}
   16a44:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   16a48:	subs	r6, r0, #0
   16a4c:	beq	16acc <__flatcc_fb_codegen_c@@Base+0x4c4>
   16a50:	movw	r1, #3664	; 0xe50
   16a54:	movt	r1, #4
   16a58:	bl	13fa0 <fopen@plt>
   16a5c:	cmp	r0, #0
   16a60:	str	r0, [r4, #204]	; 0xcc
   16a64:	beq	16aa0 <__flatcc_fb_codegen_c@@Base+0x498>
   16a68:	mov	r0, r6
   16a6c:	bl	13fac <free@plt>
   16a70:	b	16728 <__flatcc_fb_codegen_c@@Base+0x120>
   16a74:	movw	r3, #49320	; 0xc0a8
   16a78:	movt	r3, #6
   16a7c:	mov	r2, r7
   16a80:	movw	r1, #3724	; 0xe8c
   16a84:	movt	r1, #4
   16a88:	ldr	r0, [r3]
   16a8c:	mvn	r5, #0
   16a90:	bl	1406c <fprintf@plt>
   16a94:	mov	r0, r7
   16a98:	bl	13fac <free@plt>
   16a9c:	b	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   16aa0:	movw	r3, #49320	; 0xc0a8
   16aa4:	movt	r3, #6
   16aa8:	mov	r2, r6
   16aac:	movw	r1, #3724	; 0xe8c
   16ab0:	movt	r1, #4
   16ab4:	ldr	r0, [r3]
   16ab8:	mvn	r5, #0
   16abc:	bl	1406c <fprintf@plt>
   16ac0:	mov	r0, r6
   16ac4:	bl	13fac <free@plt>
   16ac8:	b	16690 <__flatcc_fb_codegen_c@@Base+0x88>
   16acc:	bl	15c74 <flatcc_destroy_context@@Base+0x48>
   16ad0:	strd	r4, [sp, #-12]!
   16ad4:	mov	r2, #220	; 0xdc
   16ad8:	mov	r4, r1
   16adc:	str	lr, [sp, #8]
   16ae0:	sub	sp, sp, #228	; 0xe4
   16ae4:	mov	r5, r0
   16ae8:	mov	r1, #0
   16aec:	add	r0, sp, #4
   16af0:	bl	14084 <memset@plt>
   16af4:	ldrh	r3, [r4, #8]
   16af8:	cmp	r3, #1
   16afc:	bhi	16c1c <__flatcc_fb_codegen_c@@Base+0x614>
   16b00:	add	r2, sp, #4
   16b04:	mov	r1, r4
   16b08:	ldr	r0, [r4, #12]
   16b0c:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   16b10:	ldrh	r3, [r4, #8]
   16b14:	cmp	r3, #1
   16b18:	bne	16bc4 <__flatcc_fb_codegen_c@@Base+0x5bc>
   16b1c:	ldrd	r2, [r4, #112]	; 0x70
   16b20:	ldr	r0, [r5, #204]	; 0xcc
   16b24:	orrs	r3, r2, r3
   16b28:	beq	16bb0 <__flatcc_fb_codegen_c@@Base+0x5a8>
   16b2c:	add	r3, sp, #4
   16b30:	movw	r1, #4576	; 0x11e0
   16b34:	movt	r1, #4
   16b38:	mov	r2, r3
   16b3c:	bl	1406c <fprintf@plt>
   16b40:	add	r3, sp, #4
   16b44:	movw	r1, #4604	; 0x11fc
   16b48:	movt	r1, #4
   16b4c:	mov	r2, r3
   16b50:	ldr	r0, [r5, #204]	; 0xcc
   16b54:	bl	1406c <fprintf@plt>
   16b58:	add	r3, sp, #4
   16b5c:	movw	r1, #4640	; 0x1220
   16b60:	movt	r1, #4
   16b64:	mov	r2, r3
   16b68:	ldr	r0, [r5, #204]	; 0xcc
   16b6c:	bl	1406c <fprintf@plt>
   16b70:	add	r3, sp, #4
   16b74:	movw	r1, #4676	; 0x1244
   16b78:	movt	r1, #4
   16b7c:	mov	r2, r3
   16b80:	ldr	r0, [r5, #204]	; 0xcc
   16b84:	bl	1406c <fprintf@plt>
   16b88:	add	r3, sp, #4
   16b8c:	movw	r1, #4708	; 0x1264
   16b90:	movt	r1, #4
   16b94:	mov	r2, r3
   16b98:	ldr	r0, [r5, #204]	; 0xcc
   16b9c:	bl	1406c <fprintf@plt>
   16ba0:	add	sp, sp, #228	; 0xe4
   16ba4:	ldrd	r4, [sp]
   16ba8:	add	sp, sp, #8
   16bac:	pop	{pc}		; (ldr pc, [sp], #4)
   16bb0:	movw	r1, #4536	; 0x11b8
   16bb4:	movt	r1, #4
   16bb8:	add	r2, sp, #4
   16bbc:	bl	1406c <fprintf@plt>
   16bc0:	b	16b40 <__flatcc_fb_codegen_c@@Base+0x538>
   16bc4:	add	r3, sp, #4
   16bc8:	movw	r1, #4744	; 0x1288
   16bcc:	movt	r1, #4
   16bd0:	mov	r2, r3
   16bd4:	ldr	r0, [r5, #204]	; 0xcc
   16bd8:	bl	1406c <fprintf@plt>
   16bdc:	add	r3, sp, #4
   16be0:	mov	r2, r5
   16be4:	ldr	r0, [r5, #204]	; 0xcc
   16be8:	movw	r1, #4788	; 0x12b4
   16bec:	movt	r1, #4
   16bf0:	bl	1406c <fprintf@plt>
   16bf4:	add	r3, sp, #4
   16bf8:	mov	r2, r5
   16bfc:	ldr	r0, [r5, #204]	; 0xcc
   16c00:	movw	r1, #4828	; 0x12dc
   16c04:	movt	r1, #4
   16c08:	bl	1406c <fprintf@plt>
   16c0c:	add	sp, sp, #228	; 0xe4
   16c10:	ldrd	r4, [sp]
   16c14:	add	sp, sp, #8
   16c18:	pop	{pc}		; (ldr pc, [sp], #4)
   16c1c:	movw	r3, #4028	; 0xfbc
   16c20:	movt	r3, #4
   16c24:	movw	r1, #4388	; 0x1124
   16c28:	movt	r1, #4
   16c2c:	movw	r0, #4468	; 0x1174
   16c30:	movt	r0, #4
   16c34:	movw	r2, #863	; 0x35f
   16c38:	bl	14120 <__assert_fail@plt>
   16c3c:	movw	r3, #4956	; 0x135c
   16c40:	movt	r3, #4
   16c44:	push	{lr}		; (str lr, [sp, #-4]!)
   16c48:	sub	sp, sp, #12
   16c4c:	movw	r4, #4868	; 0x1304
   16c50:	movt	r4, #4
   16c54:	movw	r0, #49320	; 0xc0a8
   16c58:	movt	r0, #6
   16c5c:	mov	r2, r4
   16c60:	str	r3, [sp]
   16c64:	movw	r1, #4944	; 0x1350
   16c68:	movt	r1, #4
   16c6c:	ldr	r0, [r0]
   16c70:	mov	r3, #226	; 0xe2
   16c74:	bl	1406c <fprintf@plt>
   16c78:	movw	r0, #41608	; 0xa288
   16c7c:	movt	r0, #4
   16c80:	ldr	r3, [pc, #8]	; 16c90 <__flatcc_fb_codegen_c@@Base+0x688>
   16c84:	mov	r1, r4
   16c88:	mov	r2, #226	; 0xe2
   16c8c:	bl	14120 <__assert_fail@plt>
   16c90:	ldrdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   16c94:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16c98:	mov	r2, #220	; 0xdc
   16c9c:	mov	r4, r0
   16ca0:	strd	r6, [sp, #8]
   16ca4:	strd	r8, [sp, #16]
   16ca8:	mov	r9, r1
   16cac:	mov	r1, #0
   16cb0:	strd	sl, [sp, #24]
   16cb4:	str	lr, [sp, #32]
   16cb8:	sub	sp, sp, #372	; 0x174
   16cbc:	add	r6, sp, #148	; 0x94
   16cc0:	mov	r0, r6
   16cc4:	bl	14084 <memset@plt>
   16cc8:	ldrh	r3, [r9, #8]
   16ccc:	str	r3, [sp, #44]	; 0x2c
   16cd0:	sub	r3, r3, #3
   16cd4:	cmp	r3, #1
   16cd8:	bhi	1744c <__flatcc_fb_codegen_c@@Base+0xe44>
   16cdc:	ldrh	r3, [r9, #48]	; 0x30
   16ce0:	cmp	r3, #8
   16ce4:	bne	17430 <__flatcc_fb_codegen_c@@Base+0xe28>
   16ce8:	ldr	r3, [r9, #40]	; 0x28
   16cec:	cmp	r3, #5
   16cf0:	sub	r3, r3, #1
   16cf4:	beq	172b8 <__flatcc_fb_codegen_c@@Base+0xcb0>
   16cf8:	cmp	r3, #10
   16cfc:	bhi	173e4 <__flatcc_fb_codegen_c@@Base+0xddc>
   16d00:	movw	fp, #45408	; 0xb160
   16d04:	movt	fp, #4
   16d08:	movw	r1, #4028	; 0xfbc
   16d0c:	movt	r1, #4
   16d10:	ldr	r0, [r9, #12]
   16d14:	add	r3, r1, r3, lsl #2
   16d18:	ldr	r2, [r9, #112]	; 0x70
   16d1c:	str	r1, [sp, #40]	; 0x28
   16d20:	ldr	r3, [r3, #44]	; 0x2c
   16d24:	ldr	r1, [sp, #44]	; 0x2c
   16d28:	str	r3, [sp, #24]
   16d2c:	lsl	r3, r2, #3
   16d30:	cmp	r1, #3
   16d34:	str	r3, [sp, #20]
   16d38:	beq	17290 <__flatcc_fb_codegen_c@@Base+0xc88>
   16d3c:	mov	r2, r6
   16d40:	mov	r1, r9
   16d44:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   16d48:	ldr	r5, [r9, #32]
   16d4c:	cmp	r5, #0
   16d50:	beq	17204 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16d54:	movw	r3, #5020	; 0x139c
   16d58:	movt	r3, #4
   16d5c:	str	r3, [sp, #36]	; 0x24
   16d60:	movw	r7, #45408	; 0xb160
   16d64:	movt	r7, #4
   16d68:	movw	sl, #5136	; 0x1410
   16d6c:	movt	sl, #4
   16d70:	movw	r8, #5128	; 0x1408
   16d74:	movt	r8, #4
   16d78:	mov	ip, #1
   16d7c:	mov	r3, #0
   16d80:	ldr	r2, [r5, #4]
   16d84:	ldr	r0, [r4, #204]	; 0xcc
   16d88:	ldr	r1, [r2, #8]
   16d8c:	cmp	r1, r3
   16d90:	beq	16db0 <__flatcc_fb_codegen_c@@Base+0x7a8>
   16d94:	cmp	ip, #0
   16d98:	mov	r2, r7
   16d9c:	movne	r1, r8
   16da0:	moveq	r1, sl
   16da4:	bl	1406c <fprintf@plt>
   16da8:	ldr	r2, [r5, #4]
   16dac:	ldr	r0, [r4, #204]	; 0xcc
   16db0:	movw	r1, #41576	; 0xa268
   16db4:	movt	r1, #4
   16db8:	ldr	r3, [r2]
   16dbc:	ldr	r2, [r2, #4]
   16dc0:	bl	1406c <fprintf@plt>
   16dc4:	ldr	r3, [r5, #4]
   16dc8:	mov	ip, #0
   16dcc:	ldr	r5, [r5]
   16dd0:	ldr	r3, [r3, #8]
   16dd4:	cmp	r5, ip
   16dd8:	bne	16d80 <__flatcc_fb_codegen_c@@Base+0x778>
   16ddc:	mov	r2, #4
   16de0:	mov	r1, #1
   16de4:	ldr	r3, [r4, #204]	; 0xcc
   16de8:	movw	r0, #7676	; 0x1dfc
   16dec:	movt	r0, #4
   16df0:	bl	13ff4 <fwrite@plt>
   16df4:	mov	r2, fp
   16df8:	movw	r1, #5144	; 0x1418
   16dfc:	movt	r1, #4
   16e00:	ldr	r5, [sp, #36]	; 0x24
   16e04:	str	r6, [sp]
   16e08:	ldr	r3, [sp, #24]
   16e0c:	str	r5, [sp, #4]
   16e10:	ldr	r0, [r4, #204]	; 0xcc
   16e14:	bl	1406c <fprintf@plt>
   16e18:	ldr	r0, [sp, #20]
   16e1c:	mov	r3, r6
   16e20:	movw	r1, #5168	; 0x1430
   16e24:	movt	r1, #4
   16e28:	mov	r2, r4
   16e2c:	str	r6, [sp]
   16e30:	str	r5, [sp, #4]
   16e34:	str	r0, [sp, #8]
   16e38:	ldr	r0, [r4, #204]	; 0xcc
   16e3c:	bl	1406c <fprintf@plt>
   16e40:	ldr	r3, [sp, #44]	; 0x2c
   16e44:	cmp	r3, #3
   16e48:	bne	17258 <__flatcc_fb_codegen_c@@Base+0xc50>
   16e4c:	ldr	r5, [r9, #20]
   16e50:	cmp	r5, #0
   16e54:	beq	172c0 <__flatcc_fb_codegen_c@@Base+0xcb8>
   16e58:	movw	r3, #5136	; 0x1410
   16e5c:	movt	r3, #4
   16e60:	movw	r8, #45408	; 0xb160
   16e64:	movt	r8, #4
   16e68:	str	r3, [sp, #28]
   16e6c:	movw	r3, #5128	; 0x1408
   16e70:	movt	r3, #4
   16e74:	str	r3, [sp, #32]
   16e78:	ldr	r7, [r5, #68]	; 0x44
   16e7c:	cmp	r7, #0
   16e80:	beq	16f00 <__flatcc_fb_codegen_c@@Base+0x8f8>
   16e84:	mov	r1, #1
   16e88:	mov	r3, #0
   16e8c:	ldr	r2, [r7, #4]
   16e90:	ldr	r0, [r4, #204]	; 0xcc
   16e94:	ldr	ip, [r2, #8]
   16e98:	cmp	ip, r3
   16e9c:	beq	16ebc <__flatcc_fb_codegen_c@@Base+0x8b4>
   16ea0:	cmp	r1, #0
   16ea4:	mov	r2, r8
   16ea8:	ldrne	r1, [sp, #32]
   16eac:	ldreq	r1, [sp, #28]
   16eb0:	bl	1406c <fprintf@plt>
   16eb4:	ldr	r2, [r7, #4]
   16eb8:	ldr	r0, [r4, #204]	; 0xcc
   16ebc:	movw	r1, #41576	; 0xa268
   16ec0:	movt	r1, #4
   16ec4:	ldr	r3, [r2]
   16ec8:	ldr	r2, [r2, #4]
   16ecc:	bl	1406c <fprintf@plt>
   16ed0:	ldr	r3, [r7, #4]
   16ed4:	mov	r1, #0
   16ed8:	ldr	r7, [r7]
   16edc:	ldr	r3, [r3, #8]
   16ee0:	cmp	r7, r1
   16ee4:	bne	16e8c <__flatcc_fb_codegen_c@@Base+0x884>
   16ee8:	movw	r0, #7676	; 0x1dfc
   16eec:	movt	r0, #4
   16ef0:	ldr	r3, [r4, #204]	; 0xcc
   16ef4:	mov	r2, #4
   16ef8:	mov	r1, #1
   16efc:	bl	13ff4 <fwrite@plt>
   16f00:	ldr	r1, [r5, #4]
   16f04:	ldrh	r2, [r5, #56]	; 0x38
   16f08:	ldr	r3, [r9, #40]	; 0x28
   16f0c:	ldrd	r0, [r1]
   16f10:	sub	r2, r2, #3
   16f14:	strd	r0, [sp, #20]
   16f18:	cmp	r2, #3
   16f1c:	ldrls	pc, [pc, r2, lsl #2]
   16f20:	b	17468 <__flatcc_fb_codegen_c@@Base+0xe60>
   16f24:	andeq	r7, r1, r0, lsr #3
   16f28:	andeq	r7, r1, r8, ror #2
   16f2c:	andeq	r7, r1, r0, lsr r1
   16f30:	andeq	r6, r1, r4, lsr pc
   16f34:	sub	r3, r3, #1
   16f38:	cmp	r3, #8
   16f3c:	bhi	173e0 <__flatcc_fb_codegen_c@@Base+0xdd8>
   16f40:	ldr	r2, [sp, #40]	; 0x28
   16f44:	add	r7, sp, #48	; 0x30
   16f48:	movw	r1, #5264	; 0x1490
   16f4c:	movt	r1, #4
   16f50:	mov	r0, r7
   16f54:	add	r2, r2, r3, lsl #2
   16f58:	ldrb	r3, [r5, #48]	; 0x30
   16f5c:	ldr	r2, [r2, #108]	; 0x6c
   16f60:	bl	140d8 <sprintf@plt>
   16f64:	ldrd	r2, [sp, #20]
   16f68:	movw	r1, #5280	; 0x14a0
   16f6c:	movt	r1, #4
   16f70:	ldr	r0, [sp, #36]	; 0x24
   16f74:	stm	sp, {r2, r6}
   16f78:	mov	r2, r6
   16f7c:	str	r7, [sp, #12]
   16f80:	str	r0, [sp, #8]
   16f84:	ldr	r0, [r4, #204]	; 0xcc
   16f88:	bl	1406c <fprintf@plt>
   16f8c:	ldr	r5, [r5]
   16f90:	cmp	r5, #0
   16f94:	bne	16e78 <__flatcc_fb_codegen_c@@Base+0x870>
   16f98:	mov	r0, #10
   16f9c:	ldr	r1, [r4, #204]	; 0xcc
   16fa0:	bl	140cc <fputc@plt>
   16fa4:	ldr	r3, [sp, #44]	; 0x2c
   16fa8:	cmp	r3, #3
   16fac:	beq	172cc <__flatcc_fb_codegen_c@@Base+0xcc4>
   16fb0:	mov	r3, r6
   16fb4:	mov	r2, r6
   16fb8:	ldr	r0, [r4, #204]	; 0xcc
   16fbc:	movw	r1, #5312	; 0x14c0
   16fc0:	movt	r1, #4
   16fc4:	bl	1406c <fprintf@plt>
   16fc8:	movw	r0, #5376	; 0x1500
   16fcc:	movt	r0, #4
   16fd0:	ldr	r3, [r4, #204]	; 0xcc
   16fd4:	mov	r2, #20
   16fd8:	mov	r1, #1
   16fdc:	bl	13ff4 <fwrite@plt>
   16fe0:	ldr	r5, [r9, #20]
   16fe4:	cmp	r5, #0
   16fe8:	beq	17360 <__flatcc_fb_codegen_c@@Base+0xd58>
   16fec:	movw	r8, #5532	; 0x159c
   16ff0:	movt	r8, #4
   16ff4:	movw	r7, #5480	; 0x1568
   16ff8:	movt	r7, #4
   16ffc:	ldr	r3, [r5, #4]
   17000:	ldrh	r2, [r5, #10]
   17004:	ldr	r0, [r4, #204]	; 0xcc
   17008:	ldr	ip, [r3]
   1700c:	tst	r2, #4
   17010:	mov	r2, r6
   17014:	ldr	r1, [r3, #4]
   17018:	str	ip, [sp]
   1701c:	mov	r3, r1
   17020:	str	r1, [sp, #4]
   17024:	movne	r1, r7
   17028:	moveq	r1, r8
   1702c:	str	ip, [sp, #8]
   17030:	bl	1406c <fprintf@plt>
   17034:	ldr	r5, [r5]
   17038:	cmp	r5, #0
   1703c:	bne	16ffc <__flatcc_fb_codegen_c@@Base+0x9f4>
   17040:	mov	r2, #32
   17044:	mov	r1, #1
   17048:	ldr	r3, [r4, #204]	; 0xcc
   1704c:	movw	r0, #5568	; 0x15c0
   17050:	movt	r0, #4
   17054:	bl	13ff4 <fwrite@plt>
   17058:	mov	r0, #10
   1705c:	ldr	r1, [r4, #204]	; 0xcc
   17060:	bl	140cc <fputc@plt>
   17064:	ldr	r3, [sp, #44]	; 0x2c
   17068:	cmp	r3, #3
   1706c:	beq	1732c <__flatcc_fb_codegen_c@@Base+0xd24>
   17070:	mov	r3, r6
   17074:	mov	r2, r6
   17078:	ldr	r0, [r4, #204]	; 0xcc
   1707c:	movw	r1, #5604	; 0x15e4
   17080:	movt	r1, #4
   17084:	bl	1406c <fprintf@plt>
   17088:	movw	r0, #5376	; 0x1500
   1708c:	movt	r0, #4
   17090:	ldr	r3, [r4, #204]	; 0xcc
   17094:	mov	r2, #20
   17098:	mov	r1, #1
   1709c:	bl	13ff4 <fwrite@plt>
   170a0:	ldr	r5, [r9, #20]
   170a4:	cmp	r5, #0
   170a8:	beq	170f0 <__flatcc_fb_codegen_c@@Base+0xae8>
   170ac:	movw	r8, #5800	; 0x16a8
   170b0:	movt	r8, #4
   170b4:	movw	r7, #5752	; 0x1678
   170b8:	movt	r7, #4
   170bc:	ldrh	r2, [r5, #10]
   170c0:	ldr	r3, [r5, #4]
   170c4:	ldr	r0, [r4, #204]	; 0xcc
   170c8:	tst	r2, #4
   170cc:	ldrd	r2, [r3]
   170d0:	str	r2, [sp]
   170d4:	mov	r2, r6
   170d8:	beq	171c4 <__flatcc_fb_codegen_c@@Base+0xbbc>
   170dc:	mov	r1, r7
   170e0:	bl	1406c <fprintf@plt>
   170e4:	ldr	r5, [r5]
   170e8:	cmp	r5, #0
   170ec:	bne	170bc <__flatcc_fb_codegen_c@@Base+0xab4>
   170f0:	mov	r2, #31
   170f4:	mov	r1, #1
   170f8:	ldr	r3, [r4, #204]	; 0xcc
   170fc:	movw	r0, #5720	; 0x1658
   17100:	movt	r0, #4
   17104:	bl	13ff4 <fwrite@plt>
   17108:	ldr	r1, [r4, #204]	; 0xcc
   1710c:	mov	r0, #10
   17110:	bl	140cc <fputc@plt>
   17114:	add	sp, sp, #372	; 0x174
   17118:	ldrd	r4, [sp]
   1711c:	ldrd	r6, [sp, #8]
   17120:	ldrd	r8, [sp, #16]
   17124:	ldrd	sl, [sp, #24]
   17128:	add	sp, sp, #32
   1712c:	pop	{pc}		; (ldr pc, [sp], #4)
   17130:	sub	r3, r3, #1
   17134:	cmp	r3, #8
   17138:	bhi	173e0 <__flatcc_fb_codegen_c@@Base+0xdd8>
   1713c:	ldr	r2, [sp, #40]	; 0x28
   17140:	add	r7, sp, #48	; 0x30
   17144:	movw	r1, #5240	; 0x1478
   17148:	movt	r1, #4
   1714c:	mov	r0, r7
   17150:	ldrd	sl, [r5, #48]	; 0x30
   17154:	add	r3, r2, r3, lsl #2
   17158:	strd	sl, [sp]
   1715c:	ldr	r2, [r3, #108]	; 0x6c
   17160:	bl	140d8 <sprintf@plt>
   17164:	b	16f64 <__flatcc_fb_codegen_c@@Base+0x95c>
   17168:	sub	r3, r3, #1
   1716c:	cmp	r3, #8
   17170:	bhi	173e0 <__flatcc_fb_codegen_c@@Base+0xdd8>
   17174:	ldr	r2, [sp, #40]	; 0x28
   17178:	add	r7, sp, #48	; 0x30
   1717c:	movw	r1, #5252	; 0x1484
   17180:	movt	r1, #4
   17184:	mov	r0, r7
   17188:	ldrd	sl, [r5, #48]	; 0x30
   1718c:	add	r3, r2, r3, lsl #2
   17190:	strd	sl, [sp]
   17194:	ldr	r2, [r3, #108]	; 0x6c
   17198:	bl	140d8 <sprintf@plt>
   1719c:	b	16f64 <__flatcc_fb_codegen_c@@Base+0x95c>
   171a0:	cmp	r3, #11
   171a4:	beq	171dc <__flatcc_fb_codegen_c@@Base+0xbd4>
   171a8:	add	r7, sp, #48	; 0x30
   171ac:	movw	r1, #5276	; 0x149c
   171b0:	movt	r1, #4
   171b4:	mov	r0, r7
   171b8:	ldrd	r2, [r5, #48]	; 0x30
   171bc:	bl	140d8 <sprintf@plt>
   171c0:	b	16f64 <__flatcc_fb_codegen_c@@Base+0x95c>
   171c4:	mov	r1, r8
   171c8:	bl	1406c <fprintf@plt>
   171cc:	ldr	r5, [r5]
   171d0:	cmp	r5, #0
   171d4:	bne	170bc <__flatcc_fb_codegen_c@@Base+0xab4>
   171d8:	b	170f0 <__flatcc_fb_codegen_c@@Base+0xae8>
   171dc:	vldr	d7, [r5, #48]	; 0x30
   171e0:	add	r7, sp, #48	; 0x30
   171e4:	movw	r1, #5272	; 0x1498
   171e8:	movt	r1, #4
   171ec:	mov	r0, r7
   171f0:	vcvt.f32.f64	s14, d7
   171f4:	vcvt.f64.f32	d7, s14
   171f8:	vmov	r2, r3, d7
   171fc:	bl	140d8 <sprintf@plt>
   17200:	b	16f64 <__flatcc_fb_codegen_c@@Base+0x95c>
   17204:	movw	r5, #5020	; 0x139c
   17208:	movt	r5, #4
   1720c:	str	r6, [sp]
   17210:	mov	r2, fp
   17214:	movw	r1, #5144	; 0x1418
   17218:	movt	r1, #4
   1721c:	ldr	r3, [sp, #24]
   17220:	ldr	r0, [r4, #204]	; 0xcc
   17224:	str	r5, [sp, #4]
   17228:	bl	1406c <fprintf@plt>
   1722c:	ldr	r0, [sp, #20]
   17230:	movw	r1, #5168	; 0x1430
   17234:	movt	r1, #4
   17238:	mov	r3, r6
   1723c:	mov	r2, r4
   17240:	str	r6, [sp]
   17244:	str	r5, [sp, #4]
   17248:	str	r0, [sp, #8]
   1724c:	ldr	r0, [r4, #204]	; 0xcc
   17250:	str	r5, [sp, #36]	; 0x24
   17254:	bl	1406c <fprintf@plt>
   17258:	movw	r1, #5212	; 0x145c
   1725c:	movt	r1, #4
   17260:	str	r6, [sp]
   17264:	mov	r3, r4
   17268:	mov	r2, r4
   1726c:	ldr	r0, [r4, #204]	; 0xcc
   17270:	bl	1406c <fprintf@plt>
   17274:	ldr	r5, [r9, #20]
   17278:	cmp	r5, #0
   1727c:	bne	16e58 <__flatcc_fb_codegen_c@@Base+0x850>
   17280:	mov	r0, #10
   17284:	ldr	r1, [r4, #204]	; 0xcc
   17288:	bl	140cc <fputc@plt>
   1728c:	b	16fb0 <__flatcc_fb_codegen_c@@Base+0x9a8>
   17290:	mov	r2, r6
   17294:	mov	r1, r9
   17298:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1729c:	ldr	r5, [r9, #32]
   172a0:	cmp	r5, #0
   172a4:	beq	17388 <__flatcc_fb_codegen_c@@Base+0xd80>
   172a8:	movw	r3, #5012	; 0x1394
   172ac:	movt	r3, #4
   172b0:	str	r3, [sp, #36]	; 0x24
   172b4:	b	16d60 <__flatcc_fb_codegen_c@@Base+0x758>
   172b8:	mov	fp, r4
   172bc:	b	16d08 <__flatcc_fb_codegen_c@@Base+0x700>
   172c0:	mov	r0, #10
   172c4:	ldr	r1, [r4, #204]	; 0xcc
   172c8:	bl	140cc <fputc@plt>
   172cc:	mov	r3, r6
   172d0:	mov	r2, r6
   172d4:	ldr	r0, [r4, #204]	; 0xcc
   172d8:	movw	r1, #5400	; 0x1518
   172dc:	movt	r1, #4
   172e0:	bl	1406c <fprintf@plt>
   172e4:	movw	r0, #5456	; 0x1550
   172e8:	movt	r0, #4
   172ec:	ldr	r3, [r4, #204]	; 0xcc
   172f0:	mov	r2, #21
   172f4:	mov	r1, #1
   172f8:	bl	13ff4 <fwrite@plt>
   172fc:	ldr	r5, [r9, #20]
   17300:	cmp	r5, #0
   17304:	bne	16fec <__flatcc_fb_codegen_c@@Base+0x9e4>
   17308:	mov	r1, #1
   1730c:	movw	r0, #5568	; 0x15c0
   17310:	movt	r0, #4
   17314:	mov	r2, #32
   17318:	ldr	r3, [r4, #204]	; 0xcc
   1731c:	bl	13ff4 <fwrite@plt>
   17320:	mov	r0, #10
   17324:	ldr	r1, [r4, #204]	; 0xcc
   17328:	bl	140cc <fputc@plt>
   1732c:	mov	r3, r6
   17330:	mov	r2, r6
   17334:	ldr	r0, [r4, #204]	; 0xcc
   17338:	movw	r1, #5664	; 0x1620
   1733c:	movt	r1, #4
   17340:	bl	1406c <fprintf@plt>
   17344:	movw	r0, #5456	; 0x1550
   17348:	movt	r0, #4
   1734c:	ldr	r3, [r4, #204]	; 0xcc
   17350:	mov	r2, #21
   17354:	mov	r1, #1
   17358:	bl	13ff4 <fwrite@plt>
   1735c:	b	170a0 <__flatcc_fb_codegen_c@@Base+0xa98>
   17360:	mov	r2, #32
   17364:	mov	r1, #1
   17368:	ldr	r3, [r4, #204]	; 0xcc
   1736c:	movw	r0, #5568	; 0x15c0
   17370:	movt	r0, #4
   17374:	bl	13ff4 <fwrite@plt>
   17378:	mov	r0, #10
   1737c:	ldr	r1, [r4, #204]	; 0xcc
   17380:	bl	140cc <fputc@plt>
   17384:	b	17070 <__flatcc_fb_codegen_c@@Base+0xa68>
   17388:	movw	r5, #5012	; 0x1394
   1738c:	movt	r5, #4
   17390:	str	r6, [sp]
   17394:	mov	r2, fp
   17398:	movw	r1, #5144	; 0x1418
   1739c:	movt	r1, #4
   173a0:	ldr	r3, [sp, #24]
   173a4:	ldr	r0, [r4, #204]	; 0xcc
   173a8:	str	r5, [sp, #4]
   173ac:	bl	1406c <fprintf@plt>
   173b0:	ldr	r0, [sp, #20]
   173b4:	movw	r1, #5168	; 0x1430
   173b8:	movt	r1, #4
   173bc:	mov	r3, r6
   173c0:	mov	r2, r4
   173c4:	str	r6, [sp]
   173c8:	str	r5, [sp, #4]
   173cc:	str	r0, [sp, #8]
   173d0:	ldr	r0, [r4, #204]	; 0xcc
   173d4:	str	r5, [sp, #36]	; 0x24
   173d8:	bl	1406c <fprintf@plt>
   173dc:	b	16e4c <__flatcc_fb_codegen_c@@Base+0x844>
   173e0:	bl	16c3c <__flatcc_fb_codegen_c@@Base+0x634>
   173e4:	movw	r1, #4956	; 0x135c
   173e8:	movt	r1, #4
   173ec:	movw	r3, #49320	; 0xc0a8
   173f0:	movt	r3, #6
   173f4:	movw	r2, #4868	; 0x1304
   173f8:	movt	r2, #4
   173fc:	str	r1, [sp]
   17400:	movw	r1, #4944	; 0x1350
   17404:	movt	r1, #4
   17408:	ldr	r0, [r3]
   1740c:	mov	r3, #141	; 0x8d
   17410:	bl	1406c <fprintf@plt>
   17414:	movw	r1, #4868	; 0x1304
   17418:	movt	r1, #4
   1741c:	ldr	r3, [pc, #144]	; 174b4 <__flatcc_fb_codegen_c@@Base+0xeac>
   17420:	movw	r0, #41608	; 0xa288
   17424:	movt	r0, #4
   17428:	mov	r2, #141	; 0x8d
   1742c:	bl	14120 <__assert_fail@plt>
   17430:	movw	r1, #4388	; 0x1124
   17434:	movt	r1, #4
   17438:	ldr	r3, [pc, #120]	; 174b8 <__flatcc_fb_codegen_c@@Base+0xeb0>
   1743c:	movw	r0, #5096	; 0x13e8
   17440:	movt	r0, #4
   17444:	movw	r2, #1205	; 0x4b5
   17448:	bl	14120 <__assert_fail@plt>
   1744c:	movw	r1, #4388	; 0x1124
   17450:	movt	r1, #4
   17454:	ldr	r3, [pc, #92]	; 174b8 <__flatcc_fb_codegen_c@@Base+0xeb0>
   17458:	movw	r0, #5032	; 0x13a8
   1745c:	movt	r0, #4
   17460:	movw	r2, #1204	; 0x4b4
   17464:	bl	14120 <__assert_fail@plt>
   17468:	movw	r1, #4956	; 0x135c
   1746c:	movt	r1, #4
   17470:	movw	r3, #49320	; 0xc0a8
   17474:	movt	r3, #6
   17478:	movw	r2, #4868	; 0x1304
   1747c:	movt	r2, #4
   17480:	str	r1, [sp]
   17484:	movw	r1, #4944	; 0x1350
   17488:	movt	r1, #4
   1748c:	ldr	r0, [r3]
   17490:	mov	r3, #260	; 0x104
   17494:	bl	1406c <fprintf@plt>
   17498:	movw	r1, #4868	; 0x1304
   1749c:	movt	r1, #4
   174a0:	ldr	r3, [pc, #20]	; 174bc <__flatcc_fb_codegen_c@@Base+0xeb4>
   174a4:	movw	r0, #41608	; 0xa288
   174a8:	movt	r0, #4
   174ac:	mov	r2, #260	; 0x104
   174b0:	bl	14120 <__assert_fail@plt>
   174b4:	andeq	r1, r4, r4, lsl r0
   174b8:	ldrdeq	r0, [r4], -ip
   174bc:	andeq	r1, r4, ip, asr #32
   174c0:	ldr	r3, [r0, #212]	; 0xd4
   174c4:	mov	r2, #220	; 0xdc
   174c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   174cc:	mov	r5, r1
   174d0:	mov	r4, r0
   174d4:	strd	r6, [sp, #8]
   174d8:	strd	r8, [sp, #16]
   174dc:	strd	sl, [sp, #24]
   174e0:	str	lr, [sp, #32]
   174e4:	sub	sp, sp, #492	; 0x1ec
   174e8:	add	r0, sp, #48	; 0x30
   174ec:	ldr	sl, [r3, #132]	; 0x84
   174f0:	str	r1, [sp, #36]	; 0x24
   174f4:	mov	r1, #0
   174f8:	bl	14084 <memset@plt>
   174fc:	add	r0, sp, #268	; 0x10c
   17500:	mov	r2, #220	; 0xdc
   17504:	mov	r1, #0
   17508:	bl	14084 <memset@plt>
   1750c:	ldrh	r3, [r5, #8]
   17510:	cmp	r3, #1
   17514:	bne	17fac <__flatcc_fb_codegen_c@@Base+0x19a4>
   17518:	ldr	r2, [sp, #36]	; 0x24
   1751c:	ldrh	r3, [r2, #104]	; 0x68
   17520:	cmp	r3, #0
   17524:	beq	17a0c <__flatcc_fb_codegen_c@@Base+0x1404>
   17528:	mov	r1, r2
   1752c:	ldrd	r2, [r2, #112]	; 0x70
   17530:	orrs	r3, r2, r3
   17534:	bne	17544 <__flatcc_fb_codegen_c@@Base+0xf3c>
   17538:	ldrd	r2, [r1, #96]	; 0x60
   1753c:	orrs	r3, r2, r3
   17540:	bne	17fc8 <__flatcc_fb_codegen_c@@Base+0x19c0>
   17544:	ldr	r5, [sp, #36]	; 0x24
   17548:	add	r2, sp, #48	; 0x30
   1754c:	mov	r1, r5
   17550:	ldr	r0, [r5, #12]
   17554:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   17558:	ldr	r5, [r5, #32]
   1755c:	cmp	r5, #0
   17560:	beq	175f8 <__flatcc_fb_codegen_c@@Base+0xff0>
   17564:	movw	r6, #45408	; 0xb160
   17568:	movt	r6, #4
   1756c:	movw	r8, #5136	; 0x1410
   17570:	movt	r8, #4
   17574:	movw	r7, #5128	; 0x1408
   17578:	movt	r7, #4
   1757c:	mov	ip, #1
   17580:	mov	r3, #0
   17584:	ldr	r2, [r5, #4]
   17588:	ldr	r0, [r4, #204]	; 0xcc
   1758c:	ldr	r1, [r2, #8]
   17590:	cmp	r1, r3
   17594:	beq	175b4 <__flatcc_fb_codegen_c@@Base+0xfac>
   17598:	cmp	ip, #0
   1759c:	mov	r2, r6
   175a0:	movne	r1, r7
   175a4:	moveq	r1, r8
   175a8:	bl	1406c <fprintf@plt>
   175ac:	ldr	r2, [r5, #4]
   175b0:	ldr	r0, [r4, #204]	; 0xcc
   175b4:	movw	r1, #41576	; 0xa268
   175b8:	movt	r1, #4
   175bc:	ldr	r3, [r2]
   175c0:	ldr	r2, [r2, #4]
   175c4:	bl	1406c <fprintf@plt>
   175c8:	ldr	r3, [r5, #4]
   175cc:	mov	ip, #0
   175d0:	ldr	r5, [r5]
   175d4:	ldr	r3, [r3, #8]
   175d8:	cmp	r5, ip
   175dc:	bne	17584 <__flatcc_fb_codegen_c@@Base+0xf7c>
   175e0:	movw	r0, #7676	; 0x1dfc
   175e4:	movt	r0, #4
   175e8:	ldr	r3, [r4, #204]	; 0xcc
   175ec:	mov	r2, #4
   175f0:	mov	r1, #1
   175f4:	bl	13ff4 <fwrite@plt>
   175f8:	ldr	r3, [sp, #36]	; 0x24
   175fc:	ldr	r0, [r4, #204]	; 0xcc
   17600:	ldrd	r2, [r3, #112]	; 0x70
   17604:	orrs	r3, r2, r3
   17608:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x174c>
   1760c:	cmp	sl, #0
   17610:	bne	17e54 <__flatcc_fb_codegen_c@@Base+0x184c>
   17614:	movw	r1, #6288	; 0x1890
   17618:	movt	r1, #4
   1761c:	add	r2, sp, #48	; 0x30
   17620:	bl	1406c <fprintf@plt>
   17624:	ldr	r3, [sp, #36]	; 0x24
   17628:	ldr	r5, [r3, #20]
   1762c:	cmp	r5, #0
   17630:	beq	17d38 <__flatcc_fb_codegen_c@@Base+0x1730>
   17634:	movw	r3, #5136	; 0x1410
   17638:	movt	r3, #4
   1763c:	mov	r6, #0
   17640:	movw	r7, #6304	; 0x18a0
   17644:	movt	r7, #4
   17648:	str	r3, [sp, #28]
   1764c:	movw	r3, #5128	; 0x1408
   17650:	movt	r3, #4
   17654:	str	r3, [sp, #32]
   17658:	str	r6, [sp, #40]	; 0x28
   1765c:	str	r6, [sp, #44]	; 0x2c
   17660:	ldr	r8, [r5, #68]	; 0x44
   17664:	cmp	r8, #0
   17668:	beq	176e8 <__flatcc_fb_codegen_c@@Base+0x10e0>
   1766c:	mov	r1, #1
   17670:	mov	r3, #0
   17674:	ldr	r2, [r8, #4]
   17678:	ldr	r0, [r4, #204]	; 0xcc
   1767c:	ldr	ip, [r2, #8]
   17680:	cmp	ip, r3
   17684:	beq	176a4 <__flatcc_fb_codegen_c@@Base+0x109c>
   17688:	cmp	r1, #0
   1768c:	mov	r2, r7
   17690:	ldrne	r1, [sp, #32]
   17694:	ldreq	r1, [sp, #28]
   17698:	bl	1406c <fprintf@plt>
   1769c:	ldr	r2, [r8, #4]
   176a0:	ldr	r0, [r4, #204]	; 0xcc
   176a4:	movw	r1, #41576	; 0xa268
   176a8:	movt	r1, #4
   176ac:	ldr	r3, [r2]
   176b0:	ldr	r2, [r2, #4]
   176b4:	bl	1406c <fprintf@plt>
   176b8:	ldr	r3, [r8, #4]
   176bc:	mov	r1, #0
   176c0:	ldr	r8, [r8]
   176c4:	ldr	r3, [r3, #8]
   176c8:	cmp	r8, r1
   176cc:	bne	17674 <__flatcc_fb_codegen_c@@Base+0x106c>
   176d0:	movw	r0, #7676	; 0x1dfc
   176d4:	movt	r0, #4
   176d8:	ldr	r3, [r4, #204]	; 0xcc
   176dc:	mov	r2, #4
   176e0:	mov	r1, #1
   176e4:	bl	13ff4 <fwrite@plt>
   176e8:	ldr	r3, [r5, #4]
   176ec:	cmp	r6, #0
   176f0:	ldrhne	fp, [r5, #74]	; 0x4a
   176f4:	ldrd	r8, [r3]
   176f8:	ldreq	r3, [sp, #36]	; 0x24
   176fc:	ldrheq	fp, [r3, #104]	; 0x68
   17700:	cmp	sl, #0
   17704:	beq	17a98 <__flatcc_fb_codegen_c@@Base+0x1490>
   17708:	ldr	r3, [r5, #80]	; 0x50
   1770c:	subs	r3, r3, r6
   17710:	bne	17bd8 <__flatcc_fb_codegen_c@@Base+0x15d0>
   17714:	ldrh	r3, [r5, #72]	; 0x48
   17718:	tst	r3, #4
   1771c:	bne	17ba8 <__flatcc_fb_codegen_c@@Base+0x15a0>
   17720:	ldrh	r3, [r5, #24]
   17724:	cmp	r3, #8
   17728:	bne	17a34 <__flatcc_fb_codegen_c@@Base+0x142c>
   1772c:	ldr	r3, [r5, #16]
   17730:	cmp	r3, #5
   17734:	beq	17bfc <__flatcc_fb_codegen_c@@Base+0x15f4>
   17738:	sub	r1, r3, #1
   1773c:	cmp	r1, #10
   17740:	bhi	17f44 <__flatcc_fb_codegen_c@@Base+0x193c>
   17744:	movw	r2, #45408	; 0xb160
   17748:	movt	r2, #4
   1774c:	movw	r3, #4028	; 0xfbc
   17750:	movt	r3, #4
   17754:	ldr	r0, [r4, #204]	; 0xcc
   17758:	add	r3, r3, r1, lsl #2
   1775c:	cmp	sl, #0
   17760:	ldr	r1, [r3, #44]	; 0x2c
   17764:	beq	17b5c <__flatcc_fb_codegen_c@@Base+0x1554>
   17768:	mov	r3, r1
   1776c:	movw	r1, #6344	; 0x18c8
   17770:	movt	r1, #4
   17774:	bl	1406c <fprintf@plt>
   17778:	movw	r1, #6548	; 0x1994
   1777c:	movt	r1, #4
   17780:	ldr	r0, [r4, #204]	; 0xcc
   17784:	mov	r3, r8
   17788:	mov	r2, r9
   1778c:	bl	1406c <fprintf@plt>
   17790:	ldr	r6, [r5, #80]	; 0x50
   17794:	ldr	r3, [r5, #88]	; 0x58
   17798:	ldr	r5, [r5]
   1779c:	add	r6, r6, r3
   177a0:	cmp	r5, #0
   177a4:	bne	17660 <__flatcc_fb_codegen_c@@Base+0x1058>
   177a8:	cmp	sl, #0
   177ac:	beq	17d38 <__flatcc_fb_codegen_c@@Base+0x1730>
   177b0:	ldr	r3, [sp, #36]	; 0x24
   177b4:	ldr	r0, [r4, #204]	; 0xcc
   177b8:	ldr	r3, [r3, #112]	; 0x70
   177bc:	subs	r3, r3, r6
   177c0:	bne	17e9c <__flatcc_fb_codegen_c@@Base+0x1894>
   177c4:	mov	r3, r0
   177c8:	mov	r2, #3
   177cc:	mov	r1, #1
   177d0:	movw	r0, #40164	; 0x9ce4
   177d4:	movt	r0, #4
   177d8:	bl	13ff4 <fwrite@plt>
   177dc:	movw	r0, #7800	; 0x1e78
   177e0:	movt	r0, #4
   177e4:	ldr	r3, [r4, #204]	; 0xcc
   177e8:	mov	r2, #15
   177ec:	mov	r1, #1
   177f0:	bl	13ff4 <fwrite@plt>
   177f4:	ldr	r3, [sp, #36]	; 0x24
   177f8:	add	r2, sp, #48	; 0x30
   177fc:	movw	r1, #6556	; 0x199c
   17800:	movt	r1, #4
   17804:	ldr	r0, [r4, #204]	; 0xcc
   17808:	ldrd	r6, [r3, #112]	; 0x70
   1780c:	strd	r6, [sp]
   17810:	bl	1406c <fprintf@plt>
   17814:	add	r3, sp, #48	; 0x30
   17818:	movw	r1, #6620	; 0x19dc
   1781c:	movt	r1, #4
   17820:	mov	r2, r3
   17824:	str	r3, [sp]
   17828:	ldr	r0, [r4, #204]	; 0xcc
   1782c:	bl	1406c <fprintf@plt>
   17830:	add	r3, sp, #48	; 0x30
   17834:	movw	r1, #6708	; 0x1a34
   17838:	movt	r1, #4
   1783c:	mov	r2, r3
   17840:	str	r3, [sp]
   17844:	ldr	r0, [r4, #204]	; 0xcc
   17848:	bl	1406c <fprintf@plt>
   1784c:	add	r3, sp, #48	; 0x30
   17850:	movw	r1, #6780	; 0x1a7c
   17854:	movt	r1, #4
   17858:	mov	r2, r3
   1785c:	stm	sp, {r3, r4}
   17860:	ldr	r0, [r4, #204]	; 0xcc
   17864:	bl	1406c <fprintf@plt>
   17868:	ldr	r5, [sp, #36]	; 0x24
   1786c:	add	r2, sp, #48	; 0x30
   17870:	movw	r1, #6868	; 0x1ad4
   17874:	movt	r1, #4
   17878:	ldr	r0, [r4, #204]	; 0xcc
   1787c:	ldrd	r6, [r5, #112]	; 0x70
   17880:	strd	r6, [sp]
   17884:	bl	1406c <fprintf@plt>
   17888:	add	r3, sp, #48	; 0x30
   1788c:	movw	r1, #6920	; 0x1b08
   17890:	movt	r1, #4
   17894:	mov	r2, r3
   17898:	str	r4, [sp]
   1789c:	ldr	r0, [r4, #204]	; 0xcc
   178a0:	bl	1406c <fprintf@plt>
   178a4:	add	r3, sp, #48	; 0x30
   178a8:	mov	r2, r4
   178ac:	ldr	r0, [r4, #204]	; 0xcc
   178b0:	movw	r1, #6984	; 0x1b48
   178b4:	movt	r1, #4
   178b8:	bl	1406c <fprintf@plt>
   178bc:	mov	r0, #10
   178c0:	ldr	r1, [r4, #204]	; 0xcc
   178c4:	bl	140cc <fputc@plt>
   178c8:	ldr	r5, [r5, #20]
   178cc:	cmp	r5, #0
   178d0:	beq	179e4 <__flatcc_fb_codegen_c@@Base+0x13dc>
   178d4:	movw	r3, #7596	; 0x1dac
   178d8:	movt	r3, #4
   178dc:	mov	fp, #0
   178e0:	movw	sl, #4028	; 0xfbc
   178e4:	movt	sl, #4
   178e8:	movw	r9, #7008	; 0x1b60
   178ec:	movt	r9, #4
   178f0:	mov	r8, fp
   178f4:	str	r3, [sp, #28]
   178f8:	b	17988 <__flatcc_fb_codegen_c@@Base+0x1380>
   178fc:	ldr	r1, [r5, #16]
   17900:	add	r2, sp, #268	; 0x10c
   17904:	ldr	r0, [r1, #12]
   17908:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1790c:	ldr	r2, [r5, #16]
   17910:	ldrh	r3, [r2, #8]
   17914:	cmp	r3, #1
   17918:	beq	17b78 <__flatcc_fb_codegen_c@@Base+0x1570>
   1791c:	cmp	r3, #3
   17920:	bne	17ba0 <__flatcc_fb_codegen_c@@Base+0x1598>
   17924:	ldr	r3, [r2, #40]	; 0x28
   17928:	sub	r3, r3, #1
   1792c:	cmp	r3, #10
   17930:	bhi	17fe4 <__flatcc_fb_codegen_c@@Base+0x19dc>
   17934:	add	r0, sp, #268	; 0x10c
   17938:	add	r3, sp, #48	; 0x30
   1793c:	str	r7, [sp]
   17940:	movw	r1, #7064	; 0x1b98
   17944:	movt	r1, #4
   17948:	str	r6, [sp, #4]
   1794c:	mov	r2, r4
   17950:	str	r0, [sp, #8]
   17954:	str	r0, [sp, #12]
   17958:	ldr	r0, [r4, #204]	; 0xcc
   1795c:	bl	1406c <fprintf@plt>
   17960:	ldr	r3, [r4, #212]	; 0xd4
   17964:	ldr	r3, [r3, #32]
   17968:	cmp	r3, #0
   1796c:	bne	17c3c <__flatcc_fb_codegen_c@@Base+0x1634>
   17970:	ldrh	r3, [r5, #72]	; 0x48
   17974:	tst	r3, #128	; 0x80
   17978:	bne	17c14 <__flatcc_fb_codegen_c@@Base+0x160c>
   1797c:	ldr	r5, [r5]
   17980:	cmp	r5, #0
   17984:	beq	179e4 <__flatcc_fb_codegen_c@@Base+0x13dc>
   17988:	ldrh	r3, [r5, #72]	; 0x48
   1798c:	tst	r3, #4
   17990:	bne	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   17994:	ldrh	r2, [r5, #24]
   17998:	ldr	r1, [r5, #4]
   1799c:	cmp	r2, #8
   179a0:	ldrd	r6, [r1]
   179a4:	beq	17adc <__flatcc_fb_codegen_c@@Base+0x14d4>
   179a8:	cmp	r2, #14
   179ac:	beq	178fc <__flatcc_fb_codegen_c@@Base+0x12f4>
   179b0:	tst	r3, #128	; 0x80
   179b4:	beq	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   179b8:	cmp	r8, #0
   179bc:	bne	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   179c0:	mov	r1, #1
   179c4:	mov	r2, #84	; 0x54
   179c8:	ldr	r0, [sp, #28]
   179cc:	mov	fp, r1
   179d0:	ldr	r3, [r4, #204]	; 0xcc
   179d4:	bl	13ff4 <fwrite@plt>
   179d8:	ldr	r5, [r5]
   179dc:	cmp	r5, #0
   179e0:	bne	17988 <__flatcc_fb_codegen_c@@Base+0x1380>
   179e4:	ldr	r1, [r4, #204]	; 0xcc
   179e8:	mov	r0, #10
   179ec:	bl	140cc <fputc@plt>
   179f0:	add	sp, sp, #492	; 0x1ec
   179f4:	ldrd	r4, [sp]
   179f8:	ldrd	r6, [sp, #8]
   179fc:	ldrd	r8, [sp, #16]
   17a00:	ldrd	sl, [sp, #24]
   17a04:	add	sp, sp, #32
   17a08:	pop	{pc}		; (ldr pc, [sp], #4)
   17a0c:	ldrd	r2, [r2, #96]	; 0x60
   17a10:	orrs	r3, r2, r3
   17a14:	beq	17544 <__flatcc_fb_codegen_c@@Base+0xf3c>
   17a18:	movw	r1, #4388	; 0x1124
   17a1c:	movt	r1, #4
   17a20:	ldr	r3, [pc, #1544]	; 18030 <__flatcc_fb_codegen_c@@Base+0x1a28>
   17a24:	movw	r0, #5872	; 0x16f0
   17a28:	movt	r0, #4
   17a2c:	movw	r2, #937	; 0x3a9
   17a30:	bl	14120 <__assert_fail@plt>
   17a34:	cmp	r3, #14
   17a38:	bne	17ee0 <__flatcc_fb_codegen_c@@Base+0x18d8>
   17a3c:	ldr	r1, [r5, #16]
   17a40:	ldrh	r2, [r1, #8]
   17a44:	bic	r3, r2, #2
   17a48:	cmp	r3, #1
   17a4c:	bne	17f90 <__flatcc_fb_codegen_c@@Base+0x1988>
   17a50:	cmp	r2, #1
   17a54:	movw	r3, #5832	; 0x16c8
   17a58:	movt	r3, #4
   17a5c:	add	r2, sp, #268	; 0x10c
   17a60:	ldr	r0, [r1, #12]
   17a64:	movw	r6, #45408	; 0xb160
   17a68:	movt	r6, #4
   17a6c:	movne	r6, r3
   17a70:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   17a74:	cmp	sl, #0
   17a78:	beq	17b3c <__flatcc_fb_codegen_c@@Base+0x1534>
   17a7c:	mov	r3, r6
   17a80:	movw	r1, #6472	; 0x1948
   17a84:	movt	r1, #4
   17a88:	add	r2, sp, #268	; 0x10c
   17a8c:	ldr	r0, [r4, #204]	; 0xcc
   17a90:	bl	1406c <fprintf@plt>
   17a94:	b	17778 <__flatcc_fb_codegen_c@@Base+0x1170>
   17a98:	ldrh	r3, [r5, #72]	; 0x48
   17a9c:	tst	r3, #4
   17aa0:	beq	17720 <__flatcc_fb_codegen_c@@Base+0x1118>
   17aa4:	ldr	r0, [sp, #40]	; 0x28
   17aa8:	mov	r2, fp
   17aac:	movw	r1, #7736	; 0x1e38
   17ab0:	movt	r1, #4
   17ab4:	str	r9, [sp, #4]
   17ab8:	str	r8, [sp, #8]
   17abc:	ldr	ip, [r5, #88]	; 0x58
   17ac0:	mov	r3, r0
   17ac4:	add	r0, r0, #1
   17ac8:	str	r0, [sp, #40]	; 0x28
   17acc:	ldr	r0, [r4, #204]	; 0xcc
   17ad0:	str	ip, [sp]
   17ad4:	bl	1406c <fprintf@plt>
   17ad8:	b	17790 <__flatcc_fb_codegen_c@@Base+0x1188>
   17adc:	ldr	r0, [r5, #16]
   17ae0:	cmp	r0, #5
   17ae4:	beq	17c08 <__flatcc_fb_codegen_c@@Base+0x1600>
   17ae8:	sub	r0, r0, #1
   17aec:	cmp	r0, #10
   17af0:	bhi	17f44 <__flatcc_fb_codegen_c@@Base+0x193c>
   17af4:	movw	ip, #45408	; 0xb160
   17af8:	movt	ip, #4
   17afc:	add	r0, sl, r0, lsl #2
   17b00:	add	r3, sp, #48	; 0x30
   17b04:	mov	r2, r4
   17b08:	str	r6, [sp, #4]
   17b0c:	mov	r1, r9
   17b10:	ldr	r6, [r0, #44]	; 0x2c
   17b14:	str	r7, [sp]
   17b18:	ldr	lr, [r0, #172]	; 0xac
   17b1c:	str	r4, [sp, #8]
   17b20:	str	ip, [sp, #16]
   17b24:	str	r6, [sp, #20]
   17b28:	ldr	r0, [r4, #204]	; 0xcc
   17b2c:	str	lr, [sp, #12]
   17b30:	bl	1406c <fprintf@plt>
   17b34:	ldrh	r3, [r5, #72]	; 0x48
   17b38:	b	179b0 <__flatcc_fb_codegen_c@@Base+0x13a8>
   17b3c:	mov	r2, fp
   17b40:	movw	r1, #6484	; 0x1954
   17b44:	movt	r1, #4
   17b48:	add	r3, sp, #268	; 0x10c
   17b4c:	str	r6, [sp]
   17b50:	ldr	r0, [r4, #204]	; 0xcc
   17b54:	bl	1406c <fprintf@plt>
   17b58:	b	17778 <__flatcc_fb_codegen_c@@Base+0x1170>
   17b5c:	mov	r3, r2
   17b60:	mov	r2, fp
   17b64:	str	r1, [sp]
   17b68:	movw	r1, #6356	; 0x18d4
   17b6c:	movt	r1, #4
   17b70:	bl	1406c <fprintf@plt>
   17b74:	b	17778 <__flatcc_fb_codegen_c@@Base+0x1170>
   17b78:	add	r0, sp, #268	; 0x10c
   17b7c:	movw	r1, #7540	; 0x1d74
   17b80:	movt	r1, #4
   17b84:	add	r3, sp, #48	; 0x30
   17b88:	str	r7, [sp]
   17b8c:	mov	r2, r4
   17b90:	str	r6, [sp, #4]
   17b94:	str	r0, [sp, #8]
   17b98:	ldr	r0, [r4, #204]	; 0xcc
   17b9c:	bl	1406c <fprintf@plt>
   17ba0:	ldrh	r3, [r5, #72]	; 0x48
   17ba4:	b	179b0 <__flatcc_fb_codegen_c@@Base+0x13a8>
   17ba8:	ldr	r0, [sp, #40]	; 0x28
   17bac:	movw	r1, #7684	; 0x1e04
   17bb0:	movt	r1, #4
   17bb4:	ldr	r3, [r5, #88]	; 0x58
   17bb8:	str	r9, [sp]
   17bbc:	str	r8, [sp, #4]
   17bc0:	mov	r2, r0
   17bc4:	add	r0, r0, #1
   17bc8:	str	r0, [sp, #40]	; 0x28
   17bcc:	ldr	r0, [r4, #204]	; 0xcc
   17bd0:	bl	1406c <fprintf@plt>
   17bd4:	b	17790 <__flatcc_fb_codegen_c@@Base+0x1188>
   17bd8:	ldr	ip, [sp, #44]	; 0x2c
   17bdc:	movw	r1, #6312	; 0x18a8
   17be0:	movt	r1, #4
   17be4:	ldr	r0, [r4, #204]	; 0xcc
   17be8:	mov	r2, ip
   17bec:	add	ip, ip, #1
   17bf0:	str	ip, [sp, #44]	; 0x2c
   17bf4:	bl	1406c <fprintf@plt>
   17bf8:	b	17714 <__flatcc_fb_codegen_c@@Base+0x110c>
   17bfc:	mov	r2, r4
   17c00:	mov	r1, #4
   17c04:	b	1774c <__flatcc_fb_codegen_c@@Base+0x1144>
   17c08:	mov	ip, r4
   17c0c:	mov	r0, #4
   17c10:	b	17afc <__flatcc_fb_codegen_c@@Base+0x14f4>
   17c14:	add	r0, sp, #268	; 0x10c
   17c18:	movw	r1, #7124	; 0x1bd4
   17c1c:	movt	r1, #4
   17c20:	add	r3, sp, #48	; 0x30
   17c24:	str	r7, [sp]
   17c28:	mov	r2, r4
   17c2c:	str	r6, [sp, #4]
   17c30:	str	r0, [sp, #8]
   17c34:	ldr	r0, [r4, #204]	; 0xcc
   17c38:	bl	1406c <fprintf@plt>
   17c3c:	ldrh	r3, [r5, #72]	; 0x48
   17c40:	tst	r3, #128	; 0x80
   17c44:	beq	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   17c48:	cmp	fp, #0
   17c4c:	ldr	r3, [r4, #204]	; 0xcc
   17c50:	bne	17dbc <__flatcc_fb_codegen_c@@Base+0x17b4>
   17c54:	mov	r2, #61	; 0x3d
   17c58:	mov	r1, #1
   17c5c:	movw	r0, #7248	; 0x1c50
   17c60:	movt	r0, #4
   17c64:	bl	13ff4 <fwrite@plt>
   17c68:	add	r0, sp, #268	; 0x10c
   17c6c:	add	r3, sp, #48	; 0x30
   17c70:	str	r7, [sp]
   17c74:	movw	r1, #7312	; 0x1c90
   17c78:	movt	r1, #4
   17c7c:	str	r6, [sp, #4]
   17c80:	mov	r2, r4
   17c84:	str	r0, [sp, #8]
   17c88:	ldr	r0, [r4, #204]	; 0xcc
   17c8c:	bl	1406c <fprintf@plt>
   17c90:	ldr	r3, [r4, #212]	; 0xd4
   17c94:	ldr	r3, [r3, #136]	; 0x88
   17c98:	cmp	r3, #0
   17c9c:	beq	17ccc <__flatcc_fb_codegen_c@@Base+0x16c4>
   17ca0:	add	r0, sp, #268	; 0x10c
   17ca4:	add	r3, sp, #48	; 0x30
   17ca8:	str	r7, [sp]
   17cac:	movw	r1, #7816	; 0x1e88
   17cb0:	movt	r1, #4
   17cb4:	str	r6, [sp, #4]
   17cb8:	mov	r2, r4
   17cbc:	str	r0, [sp, #8]
   17cc0:	str	r3, [sp, #12]
   17cc4:	ldr	r0, [r4, #204]	; 0xcc
   17cc8:	bl	1406c <fprintf@plt>
   17ccc:	add	r0, sp, #268	; 0x10c
   17cd0:	add	r3, sp, #48	; 0x30
   17cd4:	str	r7, [sp]
   17cd8:	mov	r2, r4
   17cdc:	movw	r1, #7368	; 0x1cc8
   17ce0:	movt	r1, #4
   17ce4:	str	r6, [sp, #4]
   17ce8:	str	r0, [sp, #8]
   17cec:	ldr	r0, [r4, #204]	; 0xcc
   17cf0:	bl	1406c <fprintf@plt>
   17cf4:	add	r0, sp, #268	; 0x10c
   17cf8:	add	r3, sp, #48	; 0x30
   17cfc:	str	r7, [sp]
   17d00:	movw	r1, #7432	; 0x1d08
   17d04:	movt	r1, #4
   17d08:	str	r6, [sp, #4]
   17d0c:	mov	r2, r4
   17d10:	str	r0, [sp, #8]
   17d14:	ldr	r0, [r4, #204]	; 0xcc
   17d18:	bl	1406c <fprintf@plt>
   17d1c:	ldr	r3, [r4, #212]	; 0xd4
   17d20:	ldr	r3, [r3, #136]	; 0x88
   17d24:	cmp	r3, #0
   17d28:	bne	17eb4 <__flatcc_fb_codegen_c@@Base+0x18ac>
   17d2c:	mov	fp, #1
   17d30:	mov	r8, fp
   17d34:	b	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   17d38:	movw	r0, #40164	; 0x9ce4
   17d3c:	movt	r0, #4
   17d40:	ldr	r3, [r4, #204]	; 0xcc
   17d44:	mov	r2, #3
   17d48:	mov	r1, #1
   17d4c:	bl	13ff4 <fwrite@plt>
   17d50:	b	177f4 <__flatcc_fb_codegen_c@@Base+0x11ec>
   17d54:	add	r2, sp, #48	; 0x30
   17d58:	movw	r1, #5936	; 0x1730
   17d5c:	movt	r1, #4
   17d60:	bl	1406c <fprintf@plt>
   17d64:	add	r3, sp, #48	; 0x30
   17d68:	movw	r1, #6036	; 0x1794
   17d6c:	movt	r1, #4
   17d70:	mov	r2, r3
   17d74:	str	r3, [sp]
   17d78:	ldr	r0, [r4, #204]	; 0xcc
   17d7c:	bl	1406c <fprintf@plt>
   17d80:	add	r3, sp, #48	; 0x30
   17d84:	movw	r1, #6120	; 0x17e8
   17d88:	movt	r1, #4
   17d8c:	mov	r2, r3
   17d90:	str	r3, [sp]
   17d94:	ldr	r0, [r4, #204]	; 0xcc
   17d98:	bl	1406c <fprintf@plt>
   17d9c:	add	r3, sp, #48	; 0x30
   17da0:	movw	r1, #6188	; 0x182c
   17da4:	movt	r1, #4
   17da8:	mov	r2, r3
   17dac:	str	r3, [sp]
   17db0:	ldr	r0, [r4, #204]	; 0xcc
   17db4:	bl	1406c <fprintf@plt>
   17db8:	b	17868 <__flatcc_fb_codegen_c@@Base+0x1260>
   17dbc:	mov	r2, #66	; 0x42
   17dc0:	mov	r1, #1
   17dc4:	movw	r0, #7180	; 0x1c0c
   17dc8:	movt	r0, #4
   17dcc:	bl	13ff4 <fwrite@plt>
   17dd0:	mov	r2, #61	; 0x3d
   17dd4:	mov	r1, #1
   17dd8:	ldr	r3, [r4, #204]	; 0xcc
   17ddc:	movw	r0, #7248	; 0x1c50
   17de0:	movt	r0, #4
   17de4:	bl	13ff4 <fwrite@plt>
   17de8:	add	r0, sp, #268	; 0x10c
   17dec:	add	r3, sp, #48	; 0x30
   17df0:	str	r7, [sp]
   17df4:	movw	r1, #7312	; 0x1c90
   17df8:	movt	r1, #4
   17dfc:	str	r6, [sp, #4]
   17e00:	mov	r2, r4
   17e04:	str	r0, [sp, #8]
   17e08:	ldr	r0, [r4, #204]	; 0xcc
   17e0c:	bl	1406c <fprintf@plt>
   17e10:	ldr	r3, [r4, #212]	; 0xd4
   17e14:	ldr	r3, [r3, #136]	; 0x88
   17e18:	cmp	r3, #0
   17e1c:	beq	17d2c <__flatcc_fb_codegen_c@@Base+0x1724>
   17e20:	add	r0, sp, #268	; 0x10c
   17e24:	add	r3, sp, #48	; 0x30
   17e28:	str	r7, [sp]
   17e2c:	movw	r1, #7816	; 0x1e88
   17e30:	movt	r1, #4
   17e34:	str	r6, [sp, #4]
   17e38:	mov	r2, r4
   17e3c:	str	r0, [sp, #8]
   17e40:	mov	r8, fp
   17e44:	str	r3, [sp, #12]
   17e48:	ldr	r0, [r4, #204]	; 0xcc
   17e4c:	bl	1406c <fprintf@plt>
   17e50:	b	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   17e54:	mov	r3, r0
   17e58:	mov	r2, #16
   17e5c:	mov	r1, #1
   17e60:	movw	r0, #6268	; 0x187c
   17e64:	movt	r0, #4
   17e68:	bl	13ff4 <fwrite@plt>
   17e6c:	add	r2, sp, #48	; 0x30
   17e70:	movw	r1, #6288	; 0x1890
   17e74:	movt	r1, #4
   17e78:	ldr	r0, [r4, #204]	; 0xcc
   17e7c:	bl	1406c <fprintf@plt>
   17e80:	ldr	r3, [sp, #36]	; 0x24
   17e84:	ldr	r5, [r3, #20]
   17e88:	cmp	r5, #0
   17e8c:	bne	17634 <__flatcc_fb_codegen_c@@Base+0x102c>
   17e90:	mov	r6, r5
   17e94:	str	r5, [sp, #44]	; 0x2c
   17e98:	b	177b0 <__flatcc_fb_codegen_c@@Base+0x11a8>
   17e9c:	movw	r1, #6312	; 0x18a8
   17ea0:	movt	r1, #4
   17ea4:	ldr	r2, [sp, #44]	; 0x2c
   17ea8:	bl	1406c <fprintf@plt>
   17eac:	ldr	r0, [r4, #204]	; 0xcc
   17eb0:	b	177c4 <__flatcc_fb_codegen_c@@Base+0x11bc>
   17eb4:	add	r3, sp, #48	; 0x30
   17eb8:	mov	fp, #1
   17ebc:	str	r7, [sp]
   17ec0:	movw	r1, #7496	; 0x1d48
   17ec4:	movt	r1, #4
   17ec8:	str	r6, [sp, #4]
   17ecc:	mov	r2, r3
   17ed0:	ldr	r0, [r4, #204]	; 0xcc
   17ed4:	mov	r8, fp
   17ed8:	bl	1406c <fprintf@plt>
   17edc:	b	1797c <__flatcc_fb_codegen_c@@Base+0x1374>
   17ee0:	movw	r2, #6508	; 0x196c
   17ee4:	movt	r2, #4
   17ee8:	ldr	r0, [r4, #204]	; 0xcc
   17eec:	movw	r1, #6540	; 0x198c
   17ef0:	movt	r1, #4
   17ef4:	bl	1406c <fprintf@plt>
   17ef8:	movw	r1, #4956	; 0x135c
   17efc:	movt	r1, #4
   17f00:	movw	r3, #49320	; 0xc0a8
   17f04:	movt	r3, #6
   17f08:	movw	r2, #4388	; 0x1124
   17f0c:	movt	r2, #4
   17f10:	str	r1, [sp]
   17f14:	movw	r1, #4944	; 0x1350
   17f18:	movt	r1, #4
   17f1c:	ldr	r0, [r3]
   17f20:	movw	r3, #1029	; 0x405
   17f24:	bl	1406c <fprintf@plt>
   17f28:	movw	r1, #4388	; 0x1124
   17f2c:	movt	r1, #4
   17f30:	ldr	r3, [pc, #248]	; 18030 <__flatcc_fb_codegen_c@@Base+0x1a28>
   17f34:	movw	r0, #41608	; 0xa288
   17f38:	movt	r0, #4
   17f3c:	movw	r2, #1029	; 0x405
   17f40:	bl	14120 <__assert_fail@plt>
   17f44:	movw	r1, #4956	; 0x135c
   17f48:	movt	r1, #4
   17f4c:	movw	r3, #49320	; 0xc0a8
   17f50:	movt	r3, #6
   17f54:	movw	r2, #4868	; 0x1304
   17f58:	movt	r2, #4
   17f5c:	str	r1, [sp]
   17f60:	movw	r1, #4944	; 0x1350
   17f64:	movt	r1, #4
   17f68:	ldr	r0, [r3]
   17f6c:	mov	r3, #141	; 0x8d
   17f70:	bl	1406c <fprintf@plt>
   17f74:	movw	r1, #4868	; 0x1304
   17f78:	movt	r1, #4
   17f7c:	ldr	r3, [pc, #176]	; 18034 <__flatcc_fb_codegen_c@@Base+0x1a2c>
   17f80:	movw	r0, #41608	; 0xa288
   17f84:	movt	r0, #4
   17f88:	mov	r2, #141	; 0x8d
   17f8c:	bl	14120 <__assert_fail@plt>
   17f90:	movw	r1, #4388	; 0x1124
   17f94:	movt	r1, #4
   17f98:	ldr	r3, [pc, #144]	; 18030 <__flatcc_fb_codegen_c@@Base+0x1a28>
   17f9c:	movw	r0, #6380	; 0x18ec
   17fa0:	movt	r0, #4
   17fa4:	movw	r2, #1018	; 0x3fa
   17fa8:	bl	14120 <__assert_fail@plt>
   17fac:	movw	r1, #4388	; 0x1124
   17fb0:	movt	r1, #4
   17fb4:	ldr	r3, [pc, #116]	; 18030 <__flatcc_fb_codegen_c@@Base+0x1a28>
   17fb8:	movw	r0, #5840	; 0x16d0
   17fbc:	movt	r0, #4
   17fc0:	mov	r2, #936	; 0x3a8
   17fc4:	bl	14120 <__assert_fail@plt>
   17fc8:	movw	r1, #4388	; 0x1124
   17fcc:	movt	r1, #4
   17fd0:	ldr	r3, [pc, #88]	; 18030 <__flatcc_fb_codegen_c@@Base+0x1a28>
   17fd4:	movw	r0, #5904	; 0x1710
   17fd8:	movt	r0, #4
   17fdc:	movw	r2, #938	; 0x3aa
   17fe0:	bl	14120 <__assert_fail@plt>
   17fe4:	movw	r1, #4956	; 0x135c
   17fe8:	movt	r1, #4
   17fec:	movw	r3, #49320	; 0xc0a8
   17ff0:	movt	r3, #6
   17ff4:	movw	r2, #4868	; 0x1304
   17ff8:	movt	r2, #4
   17ffc:	str	r1, [sp]
   18000:	movw	r1, #4944	; 0x1350
   18004:	movt	r1, #4
   18008:	ldr	r0, [r3]
   1800c:	mov	r3, #96	; 0x60
   18010:	bl	1406c <fprintf@plt>
   18014:	movw	r1, #4868	; 0x1304
   18018:	movt	r1, #4
   1801c:	ldr	r3, [pc, #20]	; 18038 <__flatcc_fb_codegen_c@@Base+0x1a30>
   18020:	movw	r0, #41608	; 0xa288
   18024:	movt	r0, #4
   18028:	mov	r2, #96	; 0x60
   1802c:	bl	14120 <__assert_fail@plt>
   18030:	andeq	r1, r4, ip, asr r0
   18034:	andeq	r1, r4, r4, lsl r0
   18038:	muleq	r4, r4, r0
   1803c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18040:	strd	r6, [sp, #8]
   18044:	ldrh	r6, [r1, #8]
   18048:	strd	r8, [sp, #16]
   1804c:	strd	sl, [sp, #24]
   18050:	str	lr, [sp, #32]
   18054:	sub	sp, sp, #1056	; 0x420
   18058:	sub	sp, sp, #4
   1805c:	cmp	r6, #0
   18060:	str	r1, [sp, #68]	; 0x44
   18064:	bne	19160 <__flatcc_fb_codegen_c@@Base+0x2b58>
   18068:	add	fp, sp, #176	; 0xb0
   1806c:	mov	r5, r0
   18070:	mov	r2, #220	; 0xdc
   18074:	mov	r1, r6
   18078:	mov	r0, fp
   1807c:	bl	14084 <memset@plt>
   18080:	mov	r2, #220	; 0xdc
   18084:	mov	r1, r6
   18088:	add	r0, sp, #396	; 0x18c
   1808c:	bl	14084 <memset@plt>
   18090:	mov	r0, #10
   18094:	ldr	r1, [r5, #204]	; 0xcc
   18098:	bl	140cc <fputc@plt>
   1809c:	ldr	r4, [sp, #68]	; 0x44
   180a0:	mov	r2, fp
   180a4:	mov	r1, r4
   180a8:	ldr	r0, [r4, #12]
   180ac:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   180b0:	ldr	r4, [r4, #32]
   180b4:	cmp	r4, #0
   180b8:	beq	18150 <__flatcc_fb_codegen_c@@Base+0x1b48>
   180bc:	mov	r1, r6
   180c0:	movw	r8, #5136	; 0x1410
   180c4:	movt	r8, #4
   180c8:	movw	r6, #45408	; 0xb160
   180cc:	movt	r6, #4
   180d0:	movw	r7, #5128	; 0x1408
   180d4:	movt	r7, #4
   180d8:	mov	ip, #1
   180dc:	ldr	r2, [r4, #4]
   180e0:	ldr	r0, [r5, #204]	; 0xcc
   180e4:	ldr	r3, [r2, #8]
   180e8:	cmp	r3, r1
   180ec:	beq	1810c <__flatcc_fb_codegen_c@@Base+0x1b04>
   180f0:	cmp	ip, #0
   180f4:	mov	r2, r6
   180f8:	movne	r1, r7
   180fc:	moveq	r1, r8
   18100:	bl	1406c <fprintf@plt>
   18104:	ldr	r2, [r4, #4]
   18108:	ldr	r0, [r5, #204]	; 0xcc
   1810c:	movw	r1, #41576	; 0xa268
   18110:	movt	r1, #4
   18114:	ldr	r3, [r2]
   18118:	ldr	r2, [r2, #4]
   1811c:	bl	1406c <fprintf@plt>
   18120:	ldr	r3, [r4, #4]
   18124:	mov	ip, #0
   18128:	ldr	r4, [r4]
   1812c:	ldr	r1, [r3, #8]
   18130:	cmp	r4, ip
   18134:	bne	180dc <__flatcc_fb_codegen_c@@Base+0x1ad4>
   18138:	movw	r0, #7676	; 0x1dfc
   1813c:	movt	r0, #4
   18140:	ldr	r3, [r5, #204]	; 0xcc
   18144:	mov	r2, #4
   18148:	mov	r1, #1
   1814c:	bl	13ff4 <fwrite@plt>
   18150:	mov	r2, fp
   18154:	movw	r1, #7932	; 0x1efc
   18158:	movt	r1, #4
   1815c:	ldr	r0, [r5, #204]	; 0xcc
   18160:	bl	1406c <fprintf@plt>
   18164:	mov	r3, fp
   18168:	mov	r2, fp
   1816c:	str	r5, [sp]
   18170:	movw	r1, #6920	; 0x1b08
   18174:	movt	r1, #4
   18178:	ldr	r0, [r5, #204]	; 0xcc
   1817c:	bl	1406c <fprintf@plt>
   18180:	mov	r3, fp
   18184:	mov	r2, fp
   18188:	str	fp, [sp]
   1818c:	movw	r1, #7976	; 0x1f28
   18190:	movt	r1, #4
   18194:	stmib	sp, {r5, fp}
   18198:	ldr	r0, [r5, #204]	; 0xcc
   1819c:	bl	1406c <fprintf@plt>
   181a0:	mov	r3, fp
   181a4:	mov	r2, r5
   181a8:	ldr	r0, [r5, #204]	; 0xcc
   181ac:	movw	r1, #8080	; 0x1f90
   181b0:	movt	r1, #4
   181b4:	bl	1406c <fprintf@plt>
   181b8:	mov	r0, #10
   181bc:	ldr	r1, [r5, #204]	; 0xcc
   181c0:	bl	140cc <fputc@plt>
   181c4:	ldr	r3, [sp, #68]	; 0x44
   181c8:	ldr	r4, [r3, #20]
   181cc:	cmp	r4, #0
   181d0:	beq	183a4 <__flatcc_fb_codegen_c@@Base+0x1d9c>
   181d4:	movw	r3, #5136	; 0x1410
   181d8:	movt	r3, #4
   181dc:	movw	sl, #45408	; 0xb160
   181e0:	movt	sl, #4
   181e4:	str	r3, [sp, #44]	; 0x2c
   181e8:	movw	r3, #5128	; 0x1408
   181ec:	movt	r3, #4
   181f0:	str	r3, [sp, #48]	; 0x30
   181f4:	mov	r3, #0
   181f8:	str	r3, [sp, #52]	; 0x34
   181fc:	ldr	r6, [r4, #68]	; 0x44
   18200:	cmp	r6, #0
   18204:	beq	18284 <__flatcc_fb_codegen_c@@Base+0x1c7c>
   18208:	mov	r1, #1
   1820c:	mov	r3, #0
   18210:	ldr	r2, [r6, #4]
   18214:	ldr	r0, [r5, #204]	; 0xcc
   18218:	ldr	ip, [r2, #8]
   1821c:	cmp	ip, r3
   18220:	beq	18240 <__flatcc_fb_codegen_c@@Base+0x1c38>
   18224:	cmp	r1, #0
   18228:	mov	r2, sl
   1822c:	ldrne	r1, [sp, #48]	; 0x30
   18230:	ldreq	r1, [sp, #44]	; 0x2c
   18234:	bl	1406c <fprintf@plt>
   18238:	ldr	r2, [r6, #4]
   1823c:	ldr	r0, [r5, #204]	; 0xcc
   18240:	movw	r1, #41576	; 0xa268
   18244:	movt	r1, #4
   18248:	ldr	r3, [r2]
   1824c:	ldr	r2, [r2, #4]
   18250:	bl	1406c <fprintf@plt>
   18254:	ldr	r3, [r6, #4]
   18258:	mov	r1, #0
   1825c:	ldr	r6, [r6]
   18260:	ldr	r3, [r3, #8]
   18264:	cmp	r6, r1
   18268:	bne	18210 <__flatcc_fb_codegen_c@@Base+0x1c08>
   1826c:	movw	r0, #7676	; 0x1dfc
   18270:	movt	r0, #4
   18274:	ldr	r3, [r5, #204]	; 0xcc
   18278:	mov	r2, #4
   1827c:	mov	r1, #1
   18280:	bl	13ff4 <fwrite@plt>
   18284:	ldr	r3, [r4, #4]
   18288:	ldrh	r6, [r4, #72]	; 0x48
   1828c:	ldr	r7, [r3]
   18290:	ldr	r3, [r3, #4]
   18294:	tst	r6, #4
   18298:	str	r3, [sp, #40]	; 0x28
   1829c:	bne	1890c <__flatcc_fb_codegen_c@@Base+0x2304>
   182a0:	ldrh	r3, [r4, #24]
   182a4:	ubfx	r6, r6, #8, #1
   182a8:	sub	r3, r3, #7
   182ac:	cmp	r3, #8
   182b0:	ldrls	pc, [pc, r3, lsl #2]
   182b4:	b	18f78 <__flatcc_fb_codegen_c@@Base+0x2970>
   182b8:	andeq	r8, r1, r0, lsl #9
   182bc:	andeq	r8, r1, r4, lsr #8
   182c0:	andeq	r8, r1, r4, asr #7
   182c4:	andeq	r8, r1, ip, asr #6
   182c8:	andeq	r8, r1, r8, ror pc
   182cc:	andeq	r8, r1, r8, ror pc
   182d0:	andeq	r8, r1, r8, ror pc
   182d4:	andeq	r8, r1, r4, lsl r3
   182d8:	ldrdeq	r8, [r1], -ip
   182dc:	ldr	r1, [r4, #16]
   182e0:	add	r2, sp, #396	; 0x18c
   182e4:	ldr	r0, [r1, #12]
   182e8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   182ec:	ldr	r3, [r4, #16]
   182f0:	ldrh	r3, [r3, #8]
   182f4:	cmp	r3, #4
   182f8:	ldrls	pc, [pc, r3, lsl #2]
   182fc:	b	190a8 <__flatcc_fb_codegen_c@@Base+0x2aa0>
   18300:	muleq	r1, r4, r5
   18304:	muleq	r1, r4, r5
   18308:	andeq	r9, r1, r8, lsr #1
   1830c:	muleq	r1, r4, r5
   18310:	muleq	r1, r4, r5
   18314:	ldr	r1, [r4, #16]
   18318:	add	r2, sp, #396	; 0x18c
   1831c:	ldr	r0, [r1, #12]
   18320:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   18324:	ldr	r2, [r4, #16]
   18328:	ldrh	r3, [r2, #8]
   1832c:	cmp	r3, #4
   18330:	ldrls	pc, [pc, r3, lsl #2]
   18334:	b	1905c <__flatcc_fb_codegen_c@@Base+0x2a54>
   18338:	andeq	r8, r1, r8, asr r6
   1833c:	andeq	r8, r1, r0, lsr r6
   18340:	andeq	r9, r1, ip, asr r0
   18344:	andeq	r8, r1, r8, ror #12
   18348:	andeq	r8, r1, r4, ror #11
   1834c:	ldr	r3, [sp, #40]	; 0x28
   18350:	movw	r1, #8620	; 0x21ac
   18354:	movt	r1, #4
   18358:	str	fp, [sp, #8]
   1835c:	mov	r2, r5
   18360:	str	r3, [sp, #12]
   18364:	str	r7, [sp, #16]
   18368:	str	r6, [sp, #20]
   1836c:	ldrd	r8, [r4, #96]	; 0x60
   18370:	ldr	r0, [r5, #204]	; 0xcc
   18374:	strd	r8, [sp]
   18378:	bl	1406c <fprintf@plt>
   1837c:	ldr	r3, [r5, #212]	; 0xd4
   18380:	ldr	r3, [r3, #32]
   18384:	cmp	r3, #0
   18388:	bne	18948 <__flatcc_fb_codegen_c@@Base+0x2340>
   1838c:	ldrh	r3, [r4, #72]	; 0x48
   18390:	tst	r3, #128	; 0x80
   18394:	bne	18928 <__flatcc_fb_codegen_c@@Base+0x2320>
   18398:	ldr	r4, [r4]
   1839c:	cmp	r4, #0
   183a0:	bne	181fc <__flatcc_fb_codegen_c@@Base+0x1bf4>
   183a4:	add	sp, sp, #1056	; 0x420
   183a8:	add	sp, sp, #4
   183ac:	ldrd	r4, [sp]
   183b0:	ldrd	r6, [sp, #8]
   183b4:	ldrd	r8, [sp, #16]
   183b8:	ldrd	sl, [sp, #24]
   183bc:	add	sp, sp, #32
   183c0:	pop	{pc}		; (ldr pc, [sp], #4)
   183c4:	ldr	r3, [sp, #40]	; 0x28
   183c8:	movw	r1, #8860	; 0x229c
   183cc:	movt	r1, #4
   183d0:	mov	r2, r5
   183d4:	str	fp, [sp, #8]
   183d8:	str	r3, [sp, #12]
   183dc:	str	r7, [sp, #16]
   183e0:	str	r5, [sp, #20]
   183e4:	str	r6, [sp, #24]
   183e8:	ldrd	r6, [r4, #96]	; 0x60
   183ec:	ldr	r0, [r5, #204]	; 0xcc
   183f0:	strd	r6, [sp]
   183f4:	bl	1406c <fprintf@plt>
   183f8:	ldrh	r3, [r4, #72]	; 0x48
   183fc:	tst	r3, #128	; 0x80
   18400:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18404:	mov	r1, #1
   18408:	movw	r0, #7596	; 0x1dac
   1840c:	movt	r0, #4
   18410:	mov	r2, #84	; 0x54
   18414:	ldr	r3, [r5, #204]	; 0xcc
   18418:	str	r1, [sp, #52]	; 0x34
   1841c:	bl	13ff4 <fwrite@plt>
   18420:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18424:	ldr	r1, [r4, #16]
   18428:	cmp	r1, #5
   1842c:	beq	18a54 <__flatcc_fb_codegen_c@@Base+0x244c>
   18430:	sub	r0, r1, #1
   18434:	cmp	r0, #10
   18438:	bhi	19010 <__flatcc_fb_codegen_c@@Base+0x2a08>
   1843c:	lsl	r3, r0, #2
   18440:	movw	r8, #4028	; 0xfbc
   18444:	movt	r8, #4
   18448:	ldrh	r2, [r4, #56]	; 0x38
   1844c:	add	ip, r8, r3
   18450:	ldr	lr, [ip, #44]	; 0x2c
   18454:	ldr	ip, [ip, #172]	; 0xac
   18458:	sub	r2, r2, #3
   1845c:	str	lr, [sp, #56]	; 0x38
   18460:	str	ip, [sp, #64]	; 0x40
   18464:	cmp	r2, #3
   18468:	ldrls	pc, [pc, r2, lsl #2]
   1846c:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2b74>
   18470:	andeq	r8, r1, r8, lsr #17
   18474:	andeq	r8, r1, r4, ror r8
   18478:	muleq	r1, r0, r6
   1847c:	ldrdeq	r8, [r1], -ip
   18480:	ldr	r3, [r4, #16]
   18484:	sub	r3, r3, #1
   18488:	cmp	r3, #10
   1848c:	bhi	18fc4 <__flatcc_fb_codegen_c@@Base+0x29bc>
   18490:	movw	r8, #4028	; 0xfbc
   18494:	movt	r8, #4
   18498:	ldr	r2, [sp, #40]	; 0x28
   1849c:	add	r3, r8, r3, lsl #2
   184a0:	str	fp, [sp, #8]
   184a4:	movw	r1, #8436	; 0x20f4
   184a8:	movt	r1, #4
   184ac:	ldr	r3, [r3, #248]	; 0xf8
   184b0:	str	r2, [sp, #12]
   184b4:	mov	r2, r5
   184b8:	str	r7, [sp, #16]
   184bc:	str	r5, [sp, #20]
   184c0:	str	r6, [sp, #28]
   184c4:	ldr	r0, [r5, #204]	; 0xcc
   184c8:	str	r3, [sp, #24]
   184cc:	ldrd	r6, [r4, #96]	; 0x60
   184d0:	strd	r6, [sp]
   184d4:	bl	1406c <fprintf@plt>
   184d8:	ldr	r7, [r4, #104]	; 0x68
   184dc:	cmp	r7, #0
   184e0:	beq	18a44 <__flatcc_fb_codegen_c@@Base+0x243c>
   184e4:	mov	r2, #220	; 0xdc
   184e8:	mov	r1, #0
   184ec:	add	r0, sp, #616	; 0x268
   184f0:	bl	14084 <memset@plt>
   184f4:	add	r0, sp, #836	; 0x344
   184f8:	mov	r2, #220	; 0xdc
   184fc:	mov	r1, #0
   18500:	bl	14084 <memset@plt>
   18504:	ldrh	r3, [r7, #8]
   18508:	cmp	r3, #0
   1850c:	bne	18a30 <__flatcc_fb_codegen_c@@Base+0x2428>
   18510:	movw	r6, #7884	; 0x1ecc
   18514:	movt	r6, #4
   18518:	add	r2, sp, #616	; 0x268
   1851c:	mov	r1, r7
   18520:	ldr	r0, [r7, #12]
   18524:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   18528:	ldr	r3, [sp, #68]	; 0x44
   1852c:	ldrh	r3, [r3, #8]
   18530:	cmp	r3, #0
   18534:	bne	190f4 <__flatcc_fb_codegen_c@@Base+0x2aec>
   18538:	ldr	r3, [sp, #68]	; 0x44
   1853c:	add	r2, sp, #836	; 0x344
   18540:	mov	r1, r3
   18544:	ldr	r0, [r3, #12]
   18548:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1854c:	ldr	ip, [r4, #4]
   18550:	add	r2, sp, #616	; 0x268
   18554:	add	r3, sp, #836	; 0x344
   18558:	movw	r1, #8572	; 0x217c
   1855c:	movt	r1, #4
   18560:	str	r2, [sp, #8]
   18564:	mov	r2, r5
   18568:	str	r6, [sp, #12]
   1856c:	ldr	r0, [r5, #204]	; 0xcc
   18570:	ldr	lr, [ip]
   18574:	str	lr, [sp, #4]
   18578:	ldr	ip, [ip, #4]
   1857c:	str	ip, [sp]
   18580:	bl	1406c <fprintf@plt>
   18584:	ldrh	r3, [r4, #72]	; 0x48
   18588:	tst	r3, #128	; 0x80
   1858c:	bne	18404 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   18590:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18594:	cmp	r3, #4
   18598:	ldrd	r2, [r4, #96]	; 0x60
   1859c:	ldr	r0, [r5, #204]	; 0xcc
   185a0:	strd	r2, [sp]
   185a4:	beq	18a78 <__flatcc_fb_codegen_c@@Base+0x2470>
   185a8:	ldr	r3, [sp, #40]	; 0x28
   185ac:	movw	r1, #9368	; 0x2498
   185b0:	movt	r1, #4
   185b4:	mov	r2, r5
   185b8:	str	fp, [sp, #8]
   185bc:	str	r3, [sp, #12]
   185c0:	add	r3, sp, #396	; 0x18c
   185c4:	str	r7, [sp, #16]
   185c8:	str	r3, [sp, #20]
   185cc:	str	r6, [sp, #24]
   185d0:	bl	1406c <fprintf@plt>
   185d4:	ldrh	r3, [r4, #72]	; 0x48
   185d8:	tst	r3, #128	; 0x80
   185dc:	bne	18404 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   185e0:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   185e4:	ldr	r3, [sp, #40]	; 0x28
   185e8:	add	r0, sp, #396	; 0x18c
   185ec:	movw	r1, #9100	; 0x238c
   185f0:	movt	r1, #4
   185f4:	str	fp, [sp, #8]
   185f8:	mov	r2, r5
   185fc:	str	r3, [sp, #12]
   18600:	mov	r3, r5
   18604:	str	r7, [sp, #16]
   18608:	str	r0, [sp, #20]
   1860c:	str	r6, [sp, #24]
   18610:	ldrd	r6, [r4, #96]	; 0x60
   18614:	ldr	r0, [r5, #204]	; 0xcc
   18618:	strd	r6, [sp]
   1861c:	bl	1406c <fprintf@plt>
   18620:	ldrh	r3, [r4, #72]	; 0x48
   18624:	tst	r3, #128	; 0x80
   18628:	bne	18404 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   1862c:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18630:	movw	r1, #8924	; 0x22dc
   18634:	movt	r1, #4
   18638:	str	fp, [sp, #8]
   1863c:	ldr	r3, [sp, #40]	; 0x28
   18640:	mov	r2, r5
   18644:	str	r3, [sp, #12]
   18648:	add	r3, sp, #396	; 0x18c
   1864c:	str	r7, [sp, #16]
   18650:	str	r3, [sp, #20]
   18654:	b	183e4 <__flatcc_fb_codegen_c@@Base+0x1ddc>
   18658:	movw	r1, #8984	; 0x2318
   1865c:	movt	r1, #4
   18660:	str	fp, [sp, #8]
   18664:	b	1863c <__flatcc_fb_codegen_c@@Base+0x2034>
   18668:	ldrh	r1, [r4, #56]	; 0x38
   1866c:	ldr	r3, [r2, #40]	; 0x28
   18670:	sub	r2, r1, #3
   18674:	cmp	r2, #3
   18678:	ldrls	pc, [pc, r2, lsl #2]
   1867c:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2b74>
   18680:	muleq	r1, r8, lr
   18684:	andeq	r8, r1, r0, ror lr
   18688:	andeq	r8, r1, r4, lsr lr
   1868c:	andeq	r8, r1, ip, lsl #25
   18690:	cmp	r0, #8
   18694:	bhi	19110 <__flatcc_fb_codegen_c@@Base+0x2b08>
   18698:	str	sl, [sp, #60]	; 0x3c
   1869c:	add	r8, r8, r3
   186a0:	add	r6, sp, #76	; 0x4c
   186a4:	ldr	r2, [r8, #108]	; 0x6c
   186a8:	movw	r1, #5240	; 0x1478
   186ac:	movt	r1, #4
   186b0:	mov	r0, r6
   186b4:	ldrd	r8, [r4, #48]	; 0x30
   186b8:	strd	r8, [sp]
   186bc:	bl	140d8 <sprintf@plt>
   186c0:	ldr	r3, [sp, #40]	; 0x28
   186c4:	movw	r1, #8152	; 0x1fd8
   186c8:	movt	r1, #4
   186cc:	str	fp, [sp, #8]
   186d0:	mov	r2, r5
   186d4:	str	r3, [sp, #12]
   186d8:	ldr	r3, [sp, #64]	; 0x40
   186dc:	str	r7, [sp, #16]
   186e0:	str	r5, [sp, #20]
   186e4:	str	r6, [sp, #36]	; 0x24
   186e8:	str	r3, [sp, #24]
   186ec:	ldr	r3, [sp, #60]	; 0x3c
   186f0:	str	r3, [sp, #28]
   186f4:	ldr	r3, [sp, #56]	; 0x38
   186f8:	str	r3, [sp, #32]
   186fc:	ldrd	r8, [r4, #96]	; 0x60
   18700:	ldr	r0, [r5, #204]	; 0xcc
   18704:	strd	r8, [sp]
   18708:	bl	1406c <fprintf@plt>
   1870c:	ldr	r3, [r5, #212]	; 0xd4
   18710:	ldr	r3, [r3, #32]
   18714:	cmp	r3, #0
   18718:	bne	18758 <__flatcc_fb_codegen_c@@Base+0x2150>
   1871c:	ldrh	r3, [r4, #72]	; 0x48
   18720:	tst	r3, #128	; 0x80
   18724:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18728:	ldr	r3, [sp, #40]	; 0x28
   1872c:	movw	r1, #8212	; 0x2014
   18730:	movt	r1, #4
   18734:	mov	r2, r5
   18738:	ldr	r0, [sp, #60]	; 0x3c
   1873c:	stm	sp, {r3, r7}
   18740:	mov	r3, fp
   18744:	str	r0, [sp, #8]
   18748:	ldr	r0, [sp, #56]	; 0x38
   1874c:	str	r0, [sp, #12]
   18750:	ldr	r0, [r5, #204]	; 0xcc
   18754:	bl	1406c <fprintf@plt>
   18758:	ldrh	r3, [r4, #72]	; 0x48
   1875c:	tst	r3, #128	; 0x80
   18760:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18764:	ldr	r3, [sp, #52]	; 0x34
   18768:	cmp	r3, #0
   1876c:	ldr	r3, [r5, #204]	; 0xcc
   18770:	bne	18ab8 <__flatcc_fb_codegen_c@@Base+0x24b0>
   18774:	mov	r2, #61	; 0x3d
   18778:	mov	r1, #1
   1877c:	movw	r0, #7248	; 0x1c50
   18780:	movt	r0, #4
   18784:	bl	13ff4 <fwrite@plt>
   18788:	ldr	r3, [sp, #40]	; 0x28
   1878c:	movw	r1, #8264	; 0x2048
   18790:	movt	r1, #4
   18794:	mov	r2, r5
   18798:	ldr	r0, [sp, #60]	; 0x3c
   1879c:	stm	sp, {r3, r7}
   187a0:	mov	r3, fp
   187a4:	str	r0, [sp, #8]
   187a8:	ldr	r0, [sp, #56]	; 0x38
   187ac:	str	r0, [sp, #12]
   187b0:	ldr	r0, [r5, #204]	; 0xcc
   187b4:	bl	1406c <fprintf@plt>
   187b8:	ldr	r3, [r5, #212]	; 0xd4
   187bc:	ldr	r3, [r3, #136]	; 0x88
   187c0:	cmp	r3, #0
   187c4:	beq	187fc <__flatcc_fb_codegen_c@@Base+0x21f4>
   187c8:	ldr	r3, [sp, #40]	; 0x28
   187cc:	movw	r1, #9492	; 0x2514
   187d0:	movt	r1, #4
   187d4:	mov	r2, r5
   187d8:	ldr	r0, [sp, #60]	; 0x3c
   187dc:	stm	sp, {r3, r7}
   187e0:	mov	r3, fp
   187e4:	str	r0, [sp, #8]
   187e8:	ldr	r0, [sp, #56]	; 0x38
   187ec:	str	r5, [sp, #16]
   187f0:	str	r0, [sp, #12]
   187f4:	ldr	r0, [r5, #204]	; 0xcc
   187f8:	bl	1406c <fprintf@plt>
   187fc:	ldr	r9, [sp, #40]	; 0x28
   18800:	mov	r3, fp
   18804:	mov	r2, r5
   18808:	movw	r1, #8316	; 0x207c
   1880c:	movt	r1, #4
   18810:	ldr	r8, [sp, #56]	; 0x38
   18814:	ldr	r6, [sp, #60]	; 0x3c
   18818:	str	r9, [sp]
   1881c:	str	r7, [sp, #4]
   18820:	str	r6, [sp, #8]
   18824:	str	r8, [sp, #12]
   18828:	ldr	r0, [r5, #204]	; 0xcc
   1882c:	bl	1406c <fprintf@plt>
   18830:	mov	r3, fp
   18834:	movw	r1, #8376	; 0x20b8
   18838:	movt	r1, #4
   1883c:	mov	r2, r5
   18840:	str	r9, [sp]
   18844:	str	r7, [sp, #4]
   18848:	str	r6, [sp, #8]
   1884c:	str	r8, [sp, #12]
   18850:	ldr	r0, [r5, #204]	; 0xcc
   18854:	bl	1406c <fprintf@plt>
   18858:	ldr	r3, [r5, #212]	; 0xd4
   1885c:	ldr	r3, [r3, #136]	; 0x88
   18860:	cmp	r3, #0
   18864:	bne	18a04 <__flatcc_fb_codegen_c@@Base+0x23fc>
   18868:	mov	r3, #1
   1886c:	str	r3, [sp, #52]	; 0x34
   18870:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18874:	cmp	r0, #8
   18878:	str	sl, [sp, #60]	; 0x3c
   1887c:	bhi	19110 <__flatcc_fb_codegen_c@@Base+0x2b08>
   18880:	add	r8, r8, r3
   18884:	add	r6, sp, #76	; 0x4c
   18888:	ldr	r2, [r8, #108]	; 0x6c
   1888c:	mov	r0, r6
   18890:	movw	r1, #5252	; 0x1484
   18894:	movt	r1, #4
   18898:	ldrd	r8, [r4, #48]	; 0x30
   1889c:	strd	r8, [sp]
   188a0:	bl	140d8 <sprintf@plt>
   188a4:	b	186c0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   188a8:	cmp	r1, #11
   188ac:	bne	18c84 <__flatcc_fb_codegen_c@@Base+0x267c>
   188b0:	vldr	d7, [r4, #48]	; 0x30
   188b4:	add	r6, sp, #76	; 0x4c
   188b8:	movw	r1, #5272	; 0x1498
   188bc:	movt	r1, #4
   188c0:	mov	r0, r6
   188c4:	str	sl, [sp, #60]	; 0x3c
   188c8:	vcvt.f32.f64	s14, d7
   188cc:	vcvt.f64.f32	d7, s14
   188d0:	vmov	r2, r3, d7
   188d4:	bl	140d8 <sprintf@plt>
   188d8:	b	186c0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   188dc:	cmp	r0, #8
   188e0:	str	sl, [sp, #60]	; 0x3c
   188e4:	bhi	19110 <__flatcc_fb_codegen_c@@Base+0x2b08>
   188e8:	add	r8, r8, r3
   188ec:	add	r6, sp, #76	; 0x4c
   188f0:	ldrb	r3, [r4, #48]	; 0x30
   188f4:	mov	r0, r6
   188f8:	movw	r1, #5264	; 0x1490
   188fc:	movt	r1, #4
   18900:	ldr	r2, [r8, #108]	; 0x6c
   18904:	bl	140d8 <sprintf@plt>
   18908:	b	186c0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   1890c:	movw	r1, #8104	; 0x1fa8
   18910:	movt	r1, #4
   18914:	str	r7, [sp]
   18918:	mov	r2, fp
   1891c:	ldr	r0, [r5, #204]	; 0xcc
   18920:	bl	1406c <fprintf@plt>
   18924:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18928:	ldr	r3, [sp, #40]	; 0x28
   1892c:	movw	r1, #8668	; 0x21dc
   18930:	movt	r1, #4
   18934:	mov	r2, r5
   18938:	stm	sp, {r3, r7}
   1893c:	mov	r3, fp
   18940:	ldr	r0, [r5, #204]	; 0xcc
   18944:	bl	1406c <fprintf@plt>
   18948:	ldrh	r3, [r4, #72]	; 0x48
   1894c:	tst	r3, #128	; 0x80
   18950:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18954:	ldr	r3, [sp, #52]	; 0x34
   18958:	ldr	r0, [r5, #204]	; 0xcc
   1895c:	cmp	r3, #0
   18960:	bne	18b5c <__flatcc_fb_codegen_c@@Base+0x2554>
   18964:	ldr	r2, [sp, #40]	; 0x28
   18968:	mov	r3, fp
   1896c:	movw	r1, #8712	; 0x2208
   18970:	movt	r1, #4
   18974:	stm	sp, {r2, r7}
   18978:	mov	r2, r5
   1897c:	bl	1406c <fprintf@plt>
   18980:	ldr	r3, [r5, #212]	; 0xd4
   18984:	ldr	r3, [r3, #136]	; 0x88
   18988:	cmp	r3, #0
   1898c:	beq	189b0 <__flatcc_fb_codegen_c@@Base+0x23a8>
   18990:	ldr	r3, [sp, #40]	; 0x28
   18994:	movw	r1, #9556	; 0x2554
   18998:	movt	r1, #4
   1899c:	mov	r2, r5
   189a0:	stm	sp, {r3, r7}
   189a4:	mov	r3, fp
   189a8:	ldr	r0, [r5, #204]	; 0xcc
   189ac:	bl	1406c <fprintf@plt>
   189b0:	ldr	r6, [sp, #40]	; 0x28
   189b4:	mov	r2, r5
   189b8:	movw	r1, #8756	; 0x2234
   189bc:	movt	r1, #4
   189c0:	mov	r3, r6
   189c4:	stm	sp, {r3, r7}
   189c8:	mov	r3, fp
   189cc:	ldr	r0, [r5, #204]	; 0xcc
   189d0:	bl	1406c <fprintf@plt>
   189d4:	mov	r3, r6
   189d8:	movw	r1, #8808	; 0x2268
   189dc:	movt	r1, #4
   189e0:	mov	r2, r5
   189e4:	stm	sp, {r3, r7}
   189e8:	mov	r3, fp
   189ec:	ldr	r0, [r5, #204]	; 0xcc
   189f0:	bl	1406c <fprintf@plt>
   189f4:	ldr	r3, [r5, #212]	; 0xd4
   189f8:	ldr	r3, [r3, #136]	; 0x88
   189fc:	cmp	r3, #0
   18a00:	beq	18868 <__flatcc_fb_codegen_c@@Base+0x2260>
   18a04:	ldr	r3, [sp, #40]	; 0x28
   18a08:	mov	ip, #1
   18a0c:	movw	r1, #7496	; 0x1d48
   18a10:	movt	r1, #4
   18a14:	mov	r2, fp
   18a18:	stm	sp, {r3, r7}
   18a1c:	mov	r3, fp
   18a20:	ldr	r0, [r5, #204]	; 0xcc
   18a24:	str	ip, [sp, #52]	; 0x34
   18a28:	bl	1406c <fprintf@plt>
   18a2c:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18a30:	cmp	r3, #1
   18a34:	bne	19114 <__flatcc_fb_codegen_c@@Base+0x2b0c>
   18a38:	movw	r6, #7892	; 0x1ed4
   18a3c:	movt	r6, #4
   18a40:	b	18518 <__flatcc_fb_codegen_c@@Base+0x1f10>
   18a44:	ldrh	r3, [r4, #72]	; 0x48
   18a48:	tst	r3, #128	; 0x80
   18a4c:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18a50:	b	18404 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   18a54:	ldrh	r3, [r4, #56]	; 0x38
   18a58:	sub	r3, r3, #3
   18a5c:	cmp	r3, #3
   18a60:	ldrls	pc, [pc, r3, lsl #2]
   18a64:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2b74>
   18a68:	andeq	r8, r1, ip, asr #24
   18a6c:	andeq	r8, r1, r0, lsr #24
   18a70:	strdeq	r8, [r1], -r4
   18a74:	andeq	r8, r1, r8, asr #23
   18a78:	ldr	r2, [sp, #40]	; 0x28
   18a7c:	add	ip, sp, #396	; 0x18c
   18a80:	mov	r3, r5
   18a84:	movw	r1, #9308	; 0x245c
   18a88:	movt	r1, #4
   18a8c:	str	fp, [sp, #8]
   18a90:	str	r2, [sp, #12]
   18a94:	mov	r2, r5
   18a98:	str	r7, [sp, #16]
   18a9c:	str	ip, [sp, #20]
   18aa0:	str	r6, [sp, #24]
   18aa4:	bl	1406c <fprintf@plt>
   18aa8:	ldrh	r3, [r4, #72]	; 0x48
   18aac:	tst	r3, #128	; 0x80
   18ab0:	bne	18404 <__flatcc_fb_codegen_c@@Base+0x1dfc>
   18ab4:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18ab8:	mov	r2, #66	; 0x42
   18abc:	mov	r1, #1
   18ac0:	movw	r0, #7180	; 0x1c0c
   18ac4:	movt	r0, #4
   18ac8:	bl	13ff4 <fwrite@plt>
   18acc:	mov	r2, #61	; 0x3d
   18ad0:	mov	r1, #1
   18ad4:	ldr	r3, [r5, #204]	; 0xcc
   18ad8:	movw	r0, #7248	; 0x1c50
   18adc:	movt	r0, #4
   18ae0:	bl	13ff4 <fwrite@plt>
   18ae4:	ldr	r3, [sp, #40]	; 0x28
   18ae8:	movw	r1, #8264	; 0x2048
   18aec:	movt	r1, #4
   18af0:	mov	r2, r5
   18af4:	ldr	r0, [sp, #60]	; 0x3c
   18af8:	stm	sp, {r3, r7}
   18afc:	mov	r3, fp
   18b00:	str	r0, [sp, #8]
   18b04:	ldr	r0, [sp, #56]	; 0x38
   18b08:	str	r0, [sp, #12]
   18b0c:	ldr	r0, [r5, #204]	; 0xcc
   18b10:	bl	1406c <fprintf@plt>
   18b14:	ldr	r3, [r5, #212]	; 0xd4
   18b18:	ldr	r3, [r3, #136]	; 0x88
   18b1c:	cmp	r3, #0
   18b20:	beq	18868 <__flatcc_fb_codegen_c@@Base+0x2260>
   18b24:	ldr	r3, [sp, #40]	; 0x28
   18b28:	movw	r1, #9492	; 0x2514
   18b2c:	movt	r1, #4
   18b30:	mov	r2, r5
   18b34:	ldr	r0, [sp, #60]	; 0x3c
   18b38:	stm	sp, {r3, r7}
   18b3c:	mov	r3, fp
   18b40:	str	r0, [sp, #8]
   18b44:	ldr	r0, [sp, #56]	; 0x38
   18b48:	str	r5, [sp, #16]
   18b4c:	str	r0, [sp, #12]
   18b50:	ldr	r0, [r5, #204]	; 0xcc
   18b54:	bl	1406c <fprintf@plt>
   18b58:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18b5c:	mov	r3, r0
   18b60:	mov	r2, #66	; 0x42
   18b64:	mov	r1, #1
   18b68:	movw	r0, #7180	; 0x1c0c
   18b6c:	movt	r0, #4
   18b70:	bl	13ff4 <fwrite@plt>
   18b74:	ldr	r3, [sp, #40]	; 0x28
   18b78:	movw	r1, #8712	; 0x2208
   18b7c:	movt	r1, #4
   18b80:	mov	r2, r5
   18b84:	stm	sp, {r3, r7}
   18b88:	mov	r3, fp
   18b8c:	ldr	r0, [r5, #204]	; 0xcc
   18b90:	bl	1406c <fprintf@plt>
   18b94:	ldr	r3, [r5, #212]	; 0xd4
   18b98:	ldr	r3, [r3, #136]	; 0x88
   18b9c:	cmp	r3, #0
   18ba0:	beq	18868 <__flatcc_fb_codegen_c@@Base+0x2260>
   18ba4:	ldr	r3, [sp, #40]	; 0x28
   18ba8:	movw	r1, #9556	; 0x2554
   18bac:	movt	r1, #4
   18bb0:	mov	r2, r5
   18bb4:	stm	sp, {r3, r7}
   18bb8:	mov	r3, fp
   18bbc:	ldr	r0, [r5, #204]	; 0xcc
   18bc0:	bl	1406c <fprintf@plt>
   18bc4:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18bc8:	movw	r3, #7876	; 0x1ec4
   18bcc:	movt	r3, #4
   18bd0:	movw	r8, #4028	; 0xfbc
   18bd4:	movt	r8, #4
   18bd8:	str	r3, [sp, #56]	; 0x38
   18bdc:	movw	r3, #37168	; 0x9130
   18be0:	movt	r3, #5
   18be4:	str	r5, [sp, #60]	; 0x3c
   18be8:	str	r3, [sp, #64]	; 0x40
   18bec:	mov	r3, #16
   18bf0:	b	188e8 <__flatcc_fb_codegen_c@@Base+0x22e0>
   18bf4:	movw	r3, #37168	; 0x9130
   18bf8:	movt	r3, #5
   18bfc:	str	r5, [sp, #60]	; 0x3c
   18c00:	movw	r8, #4028	; 0xfbc
   18c04:	movt	r8, #4
   18c08:	str	r3, [sp, #64]	; 0x40
   18c0c:	movw	r3, #7876	; 0x1ec4
   18c10:	movt	r3, #4
   18c14:	str	r3, [sp, #56]	; 0x38
   18c18:	mov	r3, #16
   18c1c:	b	1869c <__flatcc_fb_codegen_c@@Base+0x2094>
   18c20:	movw	r3, #7876	; 0x1ec4
   18c24:	movt	r3, #4
   18c28:	movw	r8, #4028	; 0xfbc
   18c2c:	movt	r8, #4
   18c30:	str	r3, [sp, #56]	; 0x38
   18c34:	movw	r3, #37168	; 0x9130
   18c38:	movt	r3, #5
   18c3c:	str	r5, [sp, #60]	; 0x3c
   18c40:	str	r3, [sp, #64]	; 0x40
   18c44:	mov	r3, #16
   18c48:	b	18880 <__flatcc_fb_codegen_c@@Base+0x2278>
   18c4c:	movw	r3, #7876	; 0x1ec4
   18c50:	movt	r3, #4
   18c54:	str	r3, [sp, #56]	; 0x38
   18c58:	movw	r3, #37168	; 0x9130
   18c5c:	movt	r3, #5
   18c60:	str	r5, [sp, #60]	; 0x3c
   18c64:	str	r3, [sp, #64]	; 0x40
   18c68:	add	r6, sp, #76	; 0x4c
   18c6c:	movw	r1, #5276	; 0x149c
   18c70:	movt	r1, #4
   18c74:	mov	r0, r6
   18c78:	ldrd	r2, [r4, #48]	; 0x30
   18c7c:	bl	140d8 <sprintf@plt>
   18c80:	b	186c0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   18c84:	str	sl, [sp, #60]	; 0x3c
   18c88:	b	18c68 <__flatcc_fb_codegen_c@@Base+0x2660>
   18c8c:	sub	r2, r3, #1
   18c90:	cmp	r2, #8
   18c94:	bhi	19110 <__flatcc_fb_codegen_c@@Base+0x2b08>
   18c98:	movw	r8, #4028	; 0xfbc
   18c9c:	movt	r8, #4
   18ca0:	ldrb	r3, [r4, #48]	; 0x30
   18ca4:	add	r2, r8, r2, lsl #2
   18ca8:	add	r6, sp, #76	; 0x4c
   18cac:	movw	r1, #5264	; 0x1490
   18cb0:	movt	r1, #4
   18cb4:	mov	r0, r6
   18cb8:	ldr	r2, [r2, #108]	; 0x6c
   18cbc:	bl	140d8 <sprintf@plt>
   18cc0:	ldr	r3, [sp, #40]	; 0x28
   18cc4:	movw	r1, #9040	; 0x2350
   18cc8:	movt	r1, #4
   18ccc:	str	fp, [sp, #8]
   18cd0:	mov	r2, r5
   18cd4:	str	r3, [sp, #12]
   18cd8:	add	r3, sp, #396	; 0x18c
   18cdc:	str	r7, [sp, #16]
   18ce0:	str	r3, [sp, #20]
   18ce4:	str	r3, [sp, #24]
   18ce8:	str	r6, [sp, #28]
   18cec:	ldrd	r8, [r4, #96]	; 0x60
   18cf0:	ldr	r0, [r5, #204]	; 0xcc
   18cf4:	strd	r8, [sp]
   18cf8:	bl	1406c <fprintf@plt>
   18cfc:	ldr	r3, [r5, #212]	; 0xd4
   18d00:	ldr	r3, [r3, #32]
   18d04:	cmp	r3, #0
   18d08:	bne	18d40 <__flatcc_fb_codegen_c@@Base+0x2738>
   18d0c:	ldrh	r3, [r4, #72]	; 0x48
   18d10:	tst	r3, #128	; 0x80
   18d14:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18d18:	ldr	r3, [sp, #40]	; 0x28
   18d1c:	add	r0, sp, #396	; 0x18c
   18d20:	movw	r1, #7124	; 0x1bd4
   18d24:	movt	r1, #4
   18d28:	mov	r2, r5
   18d2c:	stm	sp, {r3, r7}
   18d30:	mov	r3, fp
   18d34:	str	r0, [sp, #8]
   18d38:	ldr	r0, [r5, #204]	; 0xcc
   18d3c:	bl	1406c <fprintf@plt>
   18d40:	ldrh	r3, [r4, #72]	; 0x48
   18d44:	tst	r3, #128	; 0x80
   18d48:	beq	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18d4c:	ldr	r3, [sp, #52]	; 0x34
   18d50:	cmp	r3, #0
   18d54:	ldr	r3, [r5, #204]	; 0xcc
   18d58:	bne	18ebc <__flatcc_fb_codegen_c@@Base+0x28b4>
   18d5c:	mov	r2, #61	; 0x3d
   18d60:	mov	r1, #1
   18d64:	movw	r0, #7248	; 0x1c50
   18d68:	movt	r0, #4
   18d6c:	bl	13ff4 <fwrite@plt>
   18d70:	ldr	r3, [sp, #40]	; 0x28
   18d74:	add	r0, sp, #396	; 0x18c
   18d78:	movw	r1, #7312	; 0x1c90
   18d7c:	movt	r1, #4
   18d80:	mov	r2, r5
   18d84:	stm	sp, {r3, r7}
   18d88:	mov	r3, fp
   18d8c:	str	r0, [sp, #8]
   18d90:	ldr	r0, [r5, #204]	; 0xcc
   18d94:	bl	1406c <fprintf@plt>
   18d98:	ldr	r3, [r5, #212]	; 0xd4
   18d9c:	ldr	r3, [r3, #136]	; 0x88
   18da0:	cmp	r3, #0
   18da4:	beq	18dd4 <__flatcc_fb_codegen_c@@Base+0x27cc>
   18da8:	ldr	r3, [sp, #40]	; 0x28
   18dac:	add	r0, sp, #396	; 0x18c
   18db0:	movw	r1, #9600	; 0x2580
   18db4:	movt	r1, #4
   18db8:	mov	r2, r5
   18dbc:	stm	sp, {r3, r7}
   18dc0:	mov	r3, fp
   18dc4:	str	r0, [sp, #8]
   18dc8:	str	r5, [sp, #12]
   18dcc:	ldr	r0, [r5, #204]	; 0xcc
   18dd0:	bl	1406c <fprintf@plt>
   18dd4:	ldr	r6, [sp, #40]	; 0x28
   18dd8:	add	r0, sp, #396	; 0x18c
   18ddc:	mov	r3, fp
   18de0:	mov	r2, r5
   18de4:	movw	r1, #7368	; 0x1cc8
   18de8:	movt	r1, #4
   18dec:	strd	r6, [sp]
   18df0:	str	r0, [sp, #8]
   18df4:	ldr	r0, [r5, #204]	; 0xcc
   18df8:	bl	1406c <fprintf@plt>
   18dfc:	add	r0, sp, #396	; 0x18c
   18e00:	mov	r3, fp
   18e04:	strd	r6, [sp]
   18e08:	movw	r1, #7432	; 0x1d08
   18e0c:	movt	r1, #4
   18e10:	mov	r2, r5
   18e14:	str	r0, [sp, #8]
   18e18:	ldr	r0, [r5, #204]	; 0xcc
   18e1c:	bl	1406c <fprintf@plt>
   18e20:	ldr	r3, [r5, #212]	; 0xd4
   18e24:	ldr	r3, [r3, #136]	; 0x88
   18e28:	cmp	r3, #0
   18e2c:	beq	18868 <__flatcc_fb_codegen_c@@Base+0x2260>
   18e30:	b	18a04 <__flatcc_fb_codegen_c@@Base+0x23fc>
   18e34:	sub	r3, r3, #1
   18e38:	cmp	r3, #8
   18e3c:	bhi	19110 <__flatcc_fb_codegen_c@@Base+0x2b08>
   18e40:	movw	r8, #4028	; 0xfbc
   18e44:	movt	r8, #4
   18e48:	add	r3, r8, r3, lsl #2
   18e4c:	movw	r1, #5240	; 0x1478
   18e50:	movt	r1, #4
   18e54:	add	r6, sp, #76	; 0x4c
   18e58:	ldrd	r8, [r4, #48]	; 0x30
   18e5c:	mov	r0, r6
   18e60:	ldr	r2, [r3, #108]	; 0x6c
   18e64:	strd	r8, [sp]
   18e68:	bl	140d8 <sprintf@plt>
   18e6c:	b	18cc0 <__flatcc_fb_codegen_c@@Base+0x26b8>
   18e70:	sub	r3, r3, #1
   18e74:	cmp	r3, #8
   18e78:	bhi	19110 <__flatcc_fb_codegen_c@@Base+0x2b08>
   18e7c:	movw	r8, #4028	; 0xfbc
   18e80:	movt	r8, #4
   18e84:	movw	r1, #5252	; 0x1484
   18e88:	movt	r1, #4
   18e8c:	add	r3, r8, r3, lsl #2
   18e90:	add	r6, sp, #76	; 0x4c
   18e94:	b	18e58 <__flatcc_fb_codegen_c@@Base+0x2850>
   18e98:	cmp	r3, #11
   18e9c:	beq	18f50 <__flatcc_fb_codegen_c@@Base+0x2948>
   18ea0:	add	r6, sp, #76	; 0x4c
   18ea4:	movw	r1, #5276	; 0x149c
   18ea8:	movt	r1, #4
   18eac:	mov	r0, r6
   18eb0:	ldrd	r2, [r4, #48]	; 0x30
   18eb4:	bl	140d8 <sprintf@plt>
   18eb8:	b	18cc0 <__flatcc_fb_codegen_c@@Base+0x26b8>
   18ebc:	mov	r2, #66	; 0x42
   18ec0:	mov	r1, #1
   18ec4:	movw	r0, #7180	; 0x1c0c
   18ec8:	movt	r0, #4
   18ecc:	bl	13ff4 <fwrite@plt>
   18ed0:	mov	r2, #61	; 0x3d
   18ed4:	mov	r1, #1
   18ed8:	ldr	r3, [r5, #204]	; 0xcc
   18edc:	movw	r0, #7248	; 0x1c50
   18ee0:	movt	r0, #4
   18ee4:	bl	13ff4 <fwrite@plt>
   18ee8:	ldr	r3, [sp, #40]	; 0x28
   18eec:	add	r0, sp, #396	; 0x18c
   18ef0:	movw	r1, #7312	; 0x1c90
   18ef4:	movt	r1, #4
   18ef8:	mov	r2, r5
   18efc:	stm	sp, {r3, r7}
   18f00:	mov	r3, fp
   18f04:	str	r0, [sp, #8]
   18f08:	ldr	r0, [r5, #204]	; 0xcc
   18f0c:	bl	1406c <fprintf@plt>
   18f10:	ldr	r3, [r5, #212]	; 0xd4
   18f14:	ldr	r3, [r3, #136]	; 0x88
   18f18:	cmp	r3, #0
   18f1c:	beq	18868 <__flatcc_fb_codegen_c@@Base+0x2260>
   18f20:	ldr	r3, [sp, #40]	; 0x28
   18f24:	add	r0, sp, #396	; 0x18c
   18f28:	movw	r1, #9600	; 0x2580
   18f2c:	movt	r1, #4
   18f30:	mov	r2, r5
   18f34:	stm	sp, {r3, r7}
   18f38:	mov	r3, fp
   18f3c:	str	r0, [sp, #8]
   18f40:	str	r5, [sp, #12]
   18f44:	ldr	r0, [r5, #204]	; 0xcc
   18f48:	bl	1406c <fprintf@plt>
   18f4c:	b	18398 <__flatcc_fb_codegen_c@@Base+0x1d90>
   18f50:	vldr	d7, [r4, #48]	; 0x30
   18f54:	add	r6, sp, #76	; 0x4c
   18f58:	movw	r1, #5272	; 0x1498
   18f5c:	movt	r1, #4
   18f60:	mov	r0, r6
   18f64:	vcvt.f32.f64	s14, d7
   18f68:	vcvt.f64.f32	d7, s14
   18f6c:	vmov	r2, r3, d7
   18f70:	bl	140d8 <sprintf@plt>
   18f74:	b	18cc0 <__flatcc_fb_codegen_c@@Base+0x26b8>
   18f78:	movw	r1, #9424	; 0x24d0
   18f7c:	movt	r1, #4
   18f80:	movw	r3, #49320	; 0xc0a8
   18f84:	movt	r3, #6
   18f88:	movw	r2, #4388	; 0x1124
   18f8c:	movt	r2, #4
   18f90:	str	r1, [sp]
   18f94:	movw	r1, #4944	; 0x1350
   18f98:	movt	r1, #4
   18f9c:	ldr	r0, [r3]
   18fa0:	movw	r3, #1599	; 0x63f
   18fa4:	bl	1406c <fprintf@plt>
   18fa8:	movw	r1, #4388	; 0x1124
   18fac:	movt	r1, #4
   18fb0:	ldr	r3, [pc, #528]	; 191c8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   18fb4:	movw	r0, #41608	; 0xa288
   18fb8:	movt	r0, #4
   18fbc:	movw	r2, #1599	; 0x63f
   18fc0:	bl	14120 <__assert_fail@plt>
   18fc4:	movw	r1, #4956	; 0x135c
   18fc8:	movt	r1, #4
   18fcc:	movw	r3, #49320	; 0xc0a8
   18fd0:	movt	r3, #6
   18fd4:	movw	r2, #4868	; 0x1304
   18fd8:	movt	r2, #4
   18fdc:	str	r1, [sp]
   18fe0:	movw	r1, #4944	; 0x1350
   18fe4:	movt	r1, #4
   18fe8:	ldr	r0, [r3]
   18fec:	mov	r3, #186	; 0xba
   18ff0:	bl	1406c <fprintf@plt>
   18ff4:	movw	r1, #4868	; 0x1304
   18ff8:	movt	r1, #4
   18ffc:	ldr	r3, [pc, #456]	; 191cc <__flatcc_fb_codegen_c@@Base+0x2bc4>
   19000:	movw	r0, #41608	; 0xa288
   19004:	movt	r0, #4
   19008:	mov	r2, #186	; 0xba
   1900c:	bl	14120 <__assert_fail@plt>
   19010:	movw	r1, #4956	; 0x135c
   19014:	movt	r1, #4
   19018:	movw	r3, #49320	; 0xc0a8
   1901c:	movt	r3, #6
   19020:	movw	r2, #4868	; 0x1304
   19024:	movt	r2, #4
   19028:	str	r1, [sp]
   1902c:	movw	r1, #4944	; 0x1350
   19030:	movt	r1, #4
   19034:	ldr	r0, [r3]
   19038:	mov	r3, #141	; 0x8d
   1903c:	bl	1406c <fprintf@plt>
   19040:	movw	r1, #4868	; 0x1304
   19044:	movt	r1, #4
   19048:	ldr	r3, [pc, #384]	; 191d0 <__flatcc_fb_codegen_c@@Base+0x2bc8>
   1904c:	movw	r0, #41608	; 0xa288
   19050:	movt	r0, #4
   19054:	mov	r2, #141	; 0x8d
   19058:	bl	14120 <__assert_fail@plt>
   1905c:	movw	r1, #9152	; 0x23c0
   19060:	movt	r1, #4
   19064:	movw	r3, #49320	; 0xc0a8
   19068:	movt	r3, #6
   1906c:	movw	r2, #4388	; 0x1124
   19070:	movt	r2, #4
   19074:	str	r1, [sp]
   19078:	movw	r1, #4944	; 0x1350
   1907c:	movt	r1, #4
   19080:	ldr	r0, [r3]
   19084:	mov	r3, #1568	; 0x620
   19088:	bl	1406c <fprintf@plt>
   1908c:	movw	r1, #4388	; 0x1124
   19090:	movt	r1, #4
   19094:	ldr	r3, [pc, #300]	; 191c8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   19098:	movw	r0, #41608	; 0xa288
   1909c:	movt	r0, #4
   190a0:	mov	r2, #1568	; 0x620
   190a4:	bl	14120 <__assert_fail@plt>
   190a8:	movw	r1, #9228	; 0x240c
   190ac:	movt	r1, #4
   190b0:	movw	r3, #49320	; 0xc0a8
   190b4:	movt	r3, #6
   190b8:	movw	r2, #4388	; 0x1124
   190bc:	movt	r2, #4
   190c0:	str	r1, [sp]
   190c4:	movw	r1, #4944	; 0x1350
   190c8:	movt	r1, #4
   190cc:	ldr	r0, [r3]
   190d0:	mov	r3, #1584	; 0x630
   190d4:	bl	1406c <fprintf@plt>
   190d8:	movw	r1, #4388	; 0x1124
   190dc:	movt	r1, #4
   190e0:	ldr	r3, [pc, #224]	; 191c8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   190e4:	movw	r0, #41608	; 0xa288
   190e8:	movt	r0, #4
   190ec:	mov	r2, #1584	; 0x630
   190f0:	bl	14120 <__assert_fail@plt>
   190f4:	movw	r1, #4388	; 0x1124
   190f8:	movt	r1, #4
   190fc:	ldr	r3, [pc, #208]	; 191d4 <__flatcc_fb_codegen_c@@Base+0x2bcc>
   19100:	movw	r0, #8540	; 0x215c
   19104:	movt	r0, #4
   19108:	movw	r2, #1343	; 0x53f
   1910c:	bl	14120 <__assert_fail@plt>
   19110:	bl	16c3c <__flatcc_fb_codegen_c@@Base+0x634>
   19114:	movw	r1, #8488	; 0x2128
   19118:	movt	r1, #4
   1911c:	movw	r3, #49320	; 0xc0a8
   19120:	movt	r3, #6
   19124:	movw	r2, #4388	; 0x1124
   19128:	movt	r2, #4
   1912c:	str	r1, [sp]
   19130:	movw	r1, #4944	; 0x1350
   19134:	movt	r1, #4
   19138:	ldr	r0, [r3]
   1913c:	movw	r3, #1339	; 0x53b
   19140:	bl	1406c <fprintf@plt>
   19144:	movw	r1, #4388	; 0x1124
   19148:	movt	r1, #4
   1914c:	movw	r0, #41608	; 0xa288
   19150:	movt	r0, #4
   19154:	add	r3, r8, #316	; 0x13c
   19158:	movw	r2, #1339	; 0x53b
   1915c:	bl	14120 <__assert_fail@plt>
   19160:	movw	r1, #4388	; 0x1124
   19164:	movt	r1, #4
   19168:	ldr	r3, [pc, #88]	; 191c8 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   1916c:	movw	r0, #7900	; 0x1edc
   19170:	movt	r0, #4
   19174:	movw	r2, #1362	; 0x552
   19178:	bl	14120 <__assert_fail@plt>
   1917c:	movw	r1, #4956	; 0x135c
   19180:	movt	r1, #4
   19184:	movw	r3, #49320	; 0xc0a8
   19188:	movt	r3, #6
   1918c:	movw	r2, #4868	; 0x1304
   19190:	movt	r2, #4
   19194:	str	r1, [sp]
   19198:	movw	r1, #4944	; 0x1350
   1919c:	movt	r1, #4
   191a0:	ldr	r0, [r3]
   191a4:	mov	r3, #260	; 0x104
   191a8:	bl	1406c <fprintf@plt>
   191ac:	movw	r1, #4868	; 0x1304
   191b0:	movt	r1, #4
   191b4:	ldr	r3, [pc, #28]	; 191d8 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   191b8:	movw	r0, #41608	; 0xa288
   191bc:	movt	r0, #4
   191c0:	mov	r2, #260	; 0x104
   191c4:	bl	14120 <__assert_fail@plt>
   191c8:	andeq	r1, r4, r8, lsr #1
   191cc:	andeq	r1, r4, r0, ror #1
   191d0:	andeq	r1, r4, r4, lsl r0
   191d4:	strdeq	r1, [r4], -r8
   191d8:	andeq	r1, r4, ip, asr #32

000191dc <__flatcc_fb_gen_common_c_header@@Base>:
   191dc:	strd	r4, [sp, #-12]!
   191e0:	add	r5, r0, #102	; 0x66
   191e4:	mov	r4, r0
   191e8:	mov	r3, r5
   191ec:	mov	r2, r5
   191f0:	ldr	r0, [r0, #204]	; 0xcc
   191f4:	movw	r1, #9668	; 0x25c4
   191f8:	movt	r1, #4
   191fc:	str	lr, [sp, #8]
   19200:	sub	sp, sp, #236	; 0xec
   19204:	bl	1406c <fprintf@plt>
   19208:	mov	r2, #81	; 0x51
   1920c:	mov	r1, #1
   19210:	ldr	r3, [r4, #204]	; 0xcc
   19214:	movw	r0, #9724	; 0x25fc
   19218:	movt	r0, #4
   1921c:	bl	13ff4 <fwrite@plt>
   19220:	mov	r2, #52	; 0x34
   19224:	movw	r0, #9808	; 0x2650
   19228:	movt	r0, #4
   1922c:	mov	r1, #1
   19230:	ldr	r3, [r4, #204]	; 0xcc
   19234:	bl	13ff4 <fwrite@plt>
   19238:	ldr	r3, [r4, #212]	; 0xd4
   1923c:	ldr	r2, [r3, #136]	; 0x88
   19240:	cmp	r2, #0
   19244:	beq	19e2c <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   19248:	ldr	r2, [r3, #140]	; 0x8c
   1924c:	ldr	r3, [r4, #204]	; 0xcc
   19250:	cmp	r2, #0
   19254:	bne	19e10 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   19258:	mov	r2, #41	; 0x29
   1925c:	mov	r1, #1
   19260:	movw	r0, #10040	; 0x2738
   19264:	movt	r0, #4
   19268:	bl	13ff4 <fwrite@plt>
   1926c:	movw	r1, #10084	; 0x2764
   19270:	movt	r1, #4
   19274:	mov	r0, r4
   19278:	bl	13f94 <strcmp@plt>
   1927c:	cmp	r0, #0
   19280:	bne	19d88 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   19284:	mov	r3, r4
   19288:	mov	r2, r4
   1928c:	ldr	r0, [r4, #204]	; 0xcc
   19290:	movw	r1, #11348	; 0x2c54
   19294:	movt	r1, #4
   19298:	bl	1406c <fprintf@plt>
   1929c:	mov	r3, r4
   192a0:	mov	r2, r4
   192a4:	str	r4, [sp]
   192a8:	movw	r1, #11492	; 0x2ce4
   192ac:	movt	r1, #4
   192b0:	str	r4, [sp, #4]
   192b4:	str	r4, [sp, #8]
   192b8:	str	r4, [sp, #12]
   192bc:	str	r4, [sp, #16]
   192c0:	ldr	r0, [r4, #204]	; 0xcc
   192c4:	bl	1406c <fprintf@plt>
   192c8:	mov	r3, r4
   192cc:	mov	r2, r4
   192d0:	ldr	r0, [r4, #204]	; 0xcc
   192d4:	movw	r1, #11864	; 0x2e58
   192d8:	movt	r1, #4
   192dc:	bl	1406c <fprintf@plt>
   192e0:	mov	r3, r4
   192e4:	movw	r1, #11952	; 0x2eb0
   192e8:	movt	r1, #4
   192ec:	mov	r2, r4
   192f0:	str	r4, [sp]
   192f4:	str	r4, [sp, #4]
   192f8:	ldr	r0, [r4, #204]	; 0xcc
   192fc:	bl	1406c <fprintf@plt>
   19300:	ldr	r3, [r4, #212]	; 0xd4
   19304:	ldr	r3, [r3, #32]
   19308:	cmp	r3, #0
   1930c:	beq	19d40 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   19310:	movw	r1, #12248	; 0x2fd8
   19314:	movt	r1, #4
   19318:	ldr	r0, [r4, #204]	; 0xcc
   1931c:	mov	r2, r4
   19320:	bl	1406c <fprintf@plt>
   19324:	mov	r3, r4
   19328:	mov	r2, r4
   1932c:	ldr	r0, [r4, #204]	; 0xcc
   19330:	movw	r1, #12296	; 0x3008
   19334:	movt	r1, #4
   19338:	bl	1406c <fprintf@plt>
   1933c:	mov	r3, r4
   19340:	mov	r2, r4
   19344:	str	r4, [sp]
   19348:	movw	r1, #12508	; 0x30dc
   1934c:	movt	r1, #4
   19350:	str	r4, [sp, #4]
   19354:	str	r4, [sp, #8]
   19358:	ldr	r0, [r4, #204]	; 0xcc
   1935c:	bl	1406c <fprintf@plt>
   19360:	mov	r3, r4
   19364:	mov	r2, r4
   19368:	str	r4, [sp]
   1936c:	movw	r1, #12936	; 0x3288
   19370:	movt	r1, #4
   19374:	str	r4, [sp, #4]
   19378:	str	r4, [sp, #8]
   1937c:	ldr	r0, [r4, #204]	; 0xcc
   19380:	bl	1406c <fprintf@plt>
   19384:	mov	r3, r4
   19388:	mov	r2, r4
   1938c:	str	r4, [sp]
   19390:	movw	r1, #13096	; 0x3328
   19394:	movt	r1, #4
   19398:	ldr	r0, [r4, #204]	; 0xcc
   1939c:	bl	1406c <fprintf@plt>
   193a0:	mov	r3, r4
   193a4:	mov	r2, r4
   193a8:	str	r4, [sp]
   193ac:	movw	r1, #13316	; 0x3404
   193b0:	movt	r1, #4
   193b4:	ldr	r0, [r4, #204]	; 0xcc
   193b8:	bl	1406c <fprintf@plt>
   193bc:	mov	r3, r4
   193c0:	mov	r2, r4
   193c4:	str	r4, [sp]
   193c8:	movw	r1, #13536	; 0x34e0
   193cc:	movt	r1, #4
   193d0:	ldr	r0, [r4, #204]	; 0xcc
   193d4:	bl	1406c <fprintf@plt>
   193d8:	mov	r3, r4
   193dc:	movw	r1, #13752	; 0x35b8
   193e0:	movt	r1, #4
   193e4:	mov	r2, r4
   193e8:	str	r4, [sp]
   193ec:	str	r4, [sp, #4]
   193f0:	str	r4, [sp, #8]
   193f4:	ldr	r0, [r4, #204]	; 0xcc
   193f8:	bl	1406c <fprintf@plt>
   193fc:	ldr	r3, [r4, #212]	; 0xd4
   19400:	ldr	r3, [r3, #32]
   19404:	cmp	r3, #0
   19408:	beq	19d04 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   1940c:	movw	r1, #13984	; 0x36a0
   19410:	movt	r1, #4
   19414:	ldr	r0, [r4, #204]	; 0xcc
   19418:	mov	r2, r4
   1941c:	bl	1406c <fprintf@plt>
   19420:	mov	r3, r4
   19424:	mov	r2, r4
   19428:	str	r4, [sp]
   1942c:	movw	r1, #14028	; 0x36cc
   19430:	movt	r1, #4
   19434:	str	r4, [sp, #4]
   19438:	ldr	r0, [r4, #204]	; 0xcc
   1943c:	bl	1406c <fprintf@plt>
   19440:	mov	r3, r4
   19444:	mov	r2, r4
   19448:	ldr	r0, [r4, #204]	; 0xcc
   1944c:	movw	r1, #14188	; 0x376c
   19450:	movt	r1, #4
   19454:	bl	1406c <fprintf@plt>
   19458:	mov	r3, r4
   1945c:	mov	r2, r4
   19460:	str	r4, [sp]
   19464:	movw	r1, #14256	; 0x37b0
   19468:	movt	r1, #4
   1946c:	ldr	r0, [r4, #204]	; 0xcc
   19470:	bl	1406c <fprintf@plt>
   19474:	mov	r3, r4
   19478:	mov	r2, r4
   1947c:	ldr	r0, [r4, #204]	; 0xcc
   19480:	movw	r1, #14396	; 0x383c
   19484:	movt	r1, #4
   19488:	bl	1406c <fprintf@plt>
   1948c:	mov	r3, r4
   19490:	mov	r2, r4
   19494:	str	r4, [sp]
   19498:	movw	r1, #14512	; 0x38b0
   1949c:	movt	r1, #4
   194a0:	str	r4, [sp, #4]
   194a4:	ldr	r0, [r4, #204]	; 0xcc
   194a8:	bl	1406c <fprintf@plt>
   194ac:	mov	r3, r4
   194b0:	mov	r2, r4
   194b4:	ldr	r0, [r4, #204]	; 0xcc
   194b8:	movw	r1, #14800	; 0x39d0
   194bc:	movt	r1, #4
   194c0:	bl	1406c <fprintf@plt>
   194c4:	mov	r3, r4
   194c8:	mov	r2, r4
   194cc:	ldr	r0, [r4, #204]	; 0xcc
   194d0:	movw	r1, #14920	; 0x3a48
   194d4:	movt	r1, #4
   194d8:	bl	1406c <fprintf@plt>
   194dc:	mov	r3, r4
   194e0:	mov	r2, r4
   194e4:	str	r4, [sp]
   194e8:	movw	r1, #15048	; 0x3ac8
   194ec:	movt	r1, #4
   194f0:	str	r4, [sp, #4]
   194f4:	ldr	r0, [r4, #204]	; 0xcc
   194f8:	bl	1406c <fprintf@plt>
   194fc:	mov	r3, r4
   19500:	mov	r2, r4
   19504:	str	r4, [sp]
   19508:	movw	r1, #15148	; 0x3b2c
   1950c:	movt	r1, #4
   19510:	str	r4, [sp, #4]
   19514:	str	r4, [sp, #8]
   19518:	str	r4, [sp, #12]
   1951c:	str	r4, [sp, #16]
   19520:	str	r4, [sp, #20]
   19524:	str	r4, [sp, #24]
   19528:	str	r4, [sp, #28]
   1952c:	str	r4, [sp, #32]
   19530:	str	r4, [sp, #36]	; 0x24
   19534:	ldr	r0, [r4, #204]	; 0xcc
   19538:	bl	1406c <fprintf@plt>
   1953c:	mov	r2, r4
   19540:	movw	r1, #15440	; 0x3c50
   19544:	movt	r1, #4
   19548:	ldr	r0, [r4, #204]	; 0xcc
   1954c:	bl	1406c <fprintf@plt>
   19550:	mov	r3, r4
   19554:	mov	r2, r4
   19558:	str	r4, [sp]
   1955c:	movw	r1, #15476	; 0x3c74
   19560:	movt	r1, #4
   19564:	str	r4, [sp, #4]
   19568:	ldr	r0, [r4, #204]	; 0xcc
   1956c:	bl	1406c <fprintf@plt>
   19570:	mov	r3, r4
   19574:	mov	r2, r4
   19578:	str	r4, [sp]
   1957c:	movw	r1, #15612	; 0x3cfc
   19580:	movt	r1, #4
   19584:	str	r4, [sp, #4]
   19588:	str	r4, [sp, #8]
   1958c:	str	r4, [sp, #12]
   19590:	str	r4, [sp, #16]
   19594:	str	r4, [sp, #20]
   19598:	str	r4, [sp, #24]
   1959c:	str	r4, [sp, #28]
   195a0:	str	r4, [sp, #32]
   195a4:	str	r4, [sp, #36]	; 0x24
   195a8:	str	r4, [sp, #40]	; 0x28
   195ac:	str	r4, [sp, #44]	; 0x2c
   195b0:	str	r4, [sp, #48]	; 0x30
   195b4:	str	r4, [sp, #52]	; 0x34
   195b8:	str	r4, [sp, #56]	; 0x38
   195bc:	ldr	r0, [r4, #204]	; 0xcc
   195c0:	bl	1406c <fprintf@plt>
   195c4:	mov	r3, r4
   195c8:	mov	r2, r4
   195cc:	str	r4, [sp]
   195d0:	movw	r1, #16044	; 0x3eac
   195d4:	movt	r1, #4
   195d8:	str	r4, [sp, #4]
   195dc:	str	r4, [sp, #8]
   195e0:	str	r4, [sp, #12]
   195e4:	str	r4, [sp, #16]
   195e8:	str	r4, [sp, #20]
   195ec:	ldr	r0, [r4, #204]	; 0xcc
   195f0:	bl	1406c <fprintf@plt>
   195f4:	mov	r3, r4
   195f8:	mov	r2, r4
   195fc:	str	r4, [sp]
   19600:	movw	r1, #16240	; 0x3f70
   19604:	movt	r1, #4
   19608:	str	r4, [sp, #4]
   1960c:	ldr	r0, [r4, #204]	; 0xcc
   19610:	bl	1406c <fprintf@plt>
   19614:	mov	r3, r4
   19618:	mov	r2, r4
   1961c:	str	r4, [sp]
   19620:	movw	r1, #16396	; 0x400c
   19624:	movt	r1, #4
   19628:	str	r4, [sp, #4]
   1962c:	ldr	r0, [r4, #204]	; 0xcc
   19630:	bl	1406c <fprintf@plt>
   19634:	mov	r2, r4
   19638:	movw	r1, #16516	; 0x4084
   1963c:	movt	r1, #4
   19640:	ldr	r0, [r4, #204]	; 0xcc
   19644:	bl	1406c <fprintf@plt>
   19648:	mov	r2, r4
   1964c:	movw	r1, #17240	; 0x4358
   19650:	movt	r1, #4
   19654:	ldr	r0, [r4, #204]	; 0xcc
   19658:	bl	1406c <fprintf@plt>
   1965c:	mov	r2, r4
   19660:	movw	r1, #17900	; 0x45ec
   19664:	movt	r1, #4
   19668:	ldr	r0, [r4, #204]	; 0xcc
   1966c:	bl	1406c <fprintf@plt>
   19670:	mov	r2, r4
   19674:	movw	r1, #18032	; 0x4670
   19678:	movt	r1, #4
   1967c:	ldr	r0, [r4, #204]	; 0xcc
   19680:	bl	1406c <fprintf@plt>
   19684:	mov	r2, r4
   19688:	movw	r1, #18144	; 0x46e0
   1968c:	movt	r1, #4
   19690:	ldr	r0, [r4, #204]	; 0xcc
   19694:	bl	1406c <fprintf@plt>
   19698:	mov	r3, r4
   1969c:	mov	r2, r4
   196a0:	str	r4, [sp]
   196a4:	movw	r1, #18628	; 0x48c4
   196a8:	movt	r1, #4
   196ac:	str	r4, [sp, #4]
   196b0:	ldr	r0, [r4, #204]	; 0xcc
   196b4:	bl	1406c <fprintf@plt>
   196b8:	mov	r3, r4
   196bc:	mov	r2, r4
   196c0:	str	r4, [sp]
   196c4:	movw	r1, #18800	; 0x4970
   196c8:	movt	r1, #4
   196cc:	str	r4, [sp, #4]
   196d0:	str	r4, [sp, #8]
   196d4:	str	r4, [sp, #12]
   196d8:	ldr	r0, [r4, #204]	; 0xcc
   196dc:	bl	1406c <fprintf@plt>
   196e0:	mov	r3, r4
   196e4:	mov	r2, r4
   196e8:	str	r4, [sp]
   196ec:	movw	r1, #19276	; 0x4b4c
   196f0:	movt	r1, #4
   196f4:	ldr	r0, [r4, #204]	; 0xcc
   196f8:	bl	1406c <fprintf@plt>
   196fc:	mov	r3, r4
   19700:	mov	r2, r4
   19704:	str	r4, [sp]
   19708:	movw	r1, #19816	; 0x4d68
   1970c:	movt	r1, #4
   19710:	str	r4, [sp, #4]
   19714:	str	r4, [sp, #8]
   19718:	str	r4, [sp, #12]
   1971c:	str	r4, [sp, #16]
   19720:	str	r4, [sp, #20]
   19724:	str	r4, [sp, #24]
   19728:	str	r4, [sp, #28]
   1972c:	str	r4, [sp, #32]
   19730:	ldr	r0, [r4, #204]	; 0xcc
   19734:	bl	1406c <fprintf@plt>
   19738:	mov	r3, r4
   1973c:	mov	r2, r4
   19740:	ldr	r0, [r4, #204]	; 0xcc
   19744:	movw	r1, #20160	; 0x4ec0
   19748:	movt	r1, #4
   1974c:	bl	1406c <fprintf@plt>
   19750:	mov	r3, r4
   19754:	mov	r2, r4
   19758:	str	r4, [sp]
   1975c:	movw	r1, #20368	; 0x4f90
   19760:	movt	r1, #4
   19764:	ldr	r0, [r4, #204]	; 0xcc
   19768:	bl	1406c <fprintf@plt>
   1976c:	mov	r3, r4
   19770:	mov	r2, r4
   19774:	str	r4, [sp]
   19778:	movw	r1, #20552	; 0x5048
   1977c:	movt	r1, #4
   19780:	ldr	r0, [r4, #204]	; 0xcc
   19784:	bl	1406c <fprintf@plt>
   19788:	mov	r2, r4
   1978c:	movw	r1, #20992	; 0x5200
   19790:	movt	r1, #4
   19794:	ldr	r0, [r4, #204]	; 0xcc
   19798:	bl	1406c <fprintf@plt>
   1979c:	mov	r2, r4
   197a0:	movw	r1, #21164	; 0x52ac
   197a4:	movt	r1, #4
   197a8:	ldr	r0, [r4, #204]	; 0xcc
   197ac:	bl	1406c <fprintf@plt>
   197b0:	mov	r3, r4
   197b4:	mov	r2, r4
   197b8:	ldr	r0, [r4, #204]	; 0xcc
   197bc:	movw	r1, #21468	; 0x53dc
   197c0:	movt	r1, #4
   197c4:	bl	1406c <fprintf@plt>
   197c8:	mov	r3, r4
   197cc:	mov	r2, r4
   197d0:	ldr	r0, [r4, #204]	; 0xcc
   197d4:	movw	r1, #21804	; 0x552c
   197d8:	movt	r1, #4
   197dc:	bl	1406c <fprintf@plt>
   197e0:	mov	r3, r4
   197e4:	mov	r2, r4
   197e8:	str	r4, [sp]
   197ec:	movw	r1, #22016	; 0x5600
   197f0:	movt	r1, #4
   197f4:	str	r4, [sp, #4]
   197f8:	str	r4, [sp, #8]
   197fc:	str	r4, [sp, #12]
   19800:	str	r4, [sp, #16]
   19804:	str	r4, [sp, #20]
   19808:	str	r4, [sp, #24]
   1980c:	str	r4, [sp, #28]
   19810:	str	r4, [sp, #32]
   19814:	ldr	r0, [r4, #204]	; 0xcc
   19818:	bl	1406c <fprintf@plt>
   1981c:	mov	r3, r4
   19820:	mov	r2, r4
   19824:	str	r4, [sp]
   19828:	movw	r1, #22396	; 0x577c
   1982c:	movt	r1, #4
   19830:	str	r4, [sp, #4]
   19834:	str	r4, [sp, #8]
   19838:	str	r4, [sp, #12]
   1983c:	str	r4, [sp, #16]
   19840:	str	r4, [sp, #20]
   19844:	str	r4, [sp, #24]
   19848:	str	r4, [sp, #28]
   1984c:	str	r4, [sp, #32]
   19850:	ldr	r0, [r4, #204]	; 0xcc
   19854:	bl	1406c <fprintf@plt>
   19858:	mov	r3, r4
   1985c:	mov	r2, r4
   19860:	str	r4, [sp]
   19864:	movw	r1, #22784	; 0x5900
   19868:	movt	r1, #4
   1986c:	str	r4, [sp, #4]
   19870:	str	r4, [sp, #8]
   19874:	str	r4, [sp, #12]
   19878:	str	r4, [sp, #16]
   1987c:	ldr	r0, [r4, #204]	; 0xcc
   19880:	bl	1406c <fprintf@plt>
   19884:	mov	r3, r4
   19888:	mov	r2, r4
   1988c:	str	r4, [sp]
   19890:	movw	r1, #23640	; 0x5c58
   19894:	movt	r1, #4
   19898:	str	r4, [sp, #4]
   1989c:	str	r4, [sp, #8]
   198a0:	str	r4, [sp, #12]
   198a4:	str	r4, [sp, #16]
   198a8:	str	r4, [sp, #20]
   198ac:	str	r4, [sp, #24]
   198b0:	str	r4, [sp, #28]
   198b4:	str	r4, [sp, #32]
   198b8:	ldr	r0, [r4, #204]	; 0xcc
   198bc:	bl	1406c <fprintf@plt>
   198c0:	mov	r3, r4
   198c4:	mov	r2, r4
   198c8:	str	r4, [sp]
   198cc:	movw	r1, #24440	; 0x5f78
   198d0:	movt	r1, #4
   198d4:	str	r4, [sp, #4]
   198d8:	str	r4, [sp, #8]
   198dc:	str	r4, [sp, #12]
   198e0:	str	r4, [sp, #16]
   198e4:	str	r4, [sp, #20]
   198e8:	str	r4, [sp, #24]
   198ec:	str	r4, [sp, #28]
   198f0:	str	r4, [sp, #32]
   198f4:	str	r4, [sp, #36]	; 0x24
   198f8:	str	r4, [sp, #40]	; 0x28
   198fc:	ldr	r0, [r4, #204]	; 0xcc
   19900:	bl	1406c <fprintf@plt>
   19904:	mov	r2, r4
   19908:	movw	r1, #26180	; 0x6644
   1990c:	movt	r1, #4
   19910:	ldr	r0, [r4, #204]	; 0xcc
   19914:	bl	1406c <fprintf@plt>
   19918:	mov	r2, r4
   1991c:	movw	r1, #26772	; 0x6894
   19920:	movt	r1, #4
   19924:	ldr	r0, [r4, #204]	; 0xcc
   19928:	bl	1406c <fprintf@plt>
   1992c:	ldr	r3, [r4, #212]	; 0xd4
   19930:	ldr	r3, [r3, #136]	; 0x88
   19934:	cmp	r3, #0
   19938:	beq	19d14 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   1993c:	mov	r0, r4
   19940:	bl	1a424 <__flatcc_gen_sort@@Base>
   19944:	mov	r3, r4
   19948:	movw	r1, #28016	; 0x6d70
   1994c:	movt	r1, #4
   19950:	mov	r2, r4
   19954:	str	r4, [sp]
   19958:	str	r4, [sp, #4]
   1995c:	str	r4, [sp, #8]
   19960:	ldr	r0, [r4, #204]	; 0xcc
   19964:	bl	1406c <fprintf@plt>
   19968:	ldr	r3, [r4, #212]	; 0xd4
   1996c:	ldr	r3, [r3, #136]	; 0x88
   19970:	cmp	r3, #0
   19974:	beq	19d30 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   19978:	movw	r1, #28244	; 0x6e54
   1997c:	movt	r1, #4
   19980:	ldr	r0, [r4, #204]	; 0xcc
   19984:	mov	r2, r4
   19988:	bl	1406c <fprintf@plt>
   1998c:	mov	r0, #10
   19990:	ldr	r1, [r4, #204]	; 0xcc
   19994:	bl	140cc <fputc@plt>
   19998:	mov	r3, r4
   1999c:	mov	r2, r4
   199a0:	str	r4, [sp]
   199a4:	movw	r1, #28276	; 0x6e74
   199a8:	movt	r1, #4
   199ac:	ldr	r0, [r4, #204]	; 0xcc
   199b0:	bl	1406c <fprintf@plt>
   199b4:	mov	r3, r4
   199b8:	mov	r2, r4
   199bc:	str	r4, [sp]
   199c0:	movw	r1, #28404	; 0x6ef4
   199c4:	movt	r1, #4
   199c8:	str	r4, [sp, #4]
   199cc:	str	r4, [sp, #8]
   199d0:	str	r4, [sp, #12]
   199d4:	str	r4, [sp, #16]
   199d8:	str	r4, [sp, #20]
   199dc:	str	r4, [sp, #24]
   199e0:	ldr	r0, [r4, #204]	; 0xcc
   199e4:	str	r4, [sp, #28]
   199e8:	str	r4, [sp, #32]
   199ec:	str	r4, [sp, #36]	; 0x24
   199f0:	str	r4, [sp, #40]	; 0x28
   199f4:	str	r4, [sp, #44]	; 0x2c
   199f8:	str	r4, [sp, #48]	; 0x30
   199fc:	str	r4, [sp, #52]	; 0x34
   19a00:	str	r4, [sp, #56]	; 0x38
   19a04:	str	r4, [sp, #60]	; 0x3c
   19a08:	str	r4, [sp, #64]	; 0x40
   19a0c:	str	r4, [sp, #68]	; 0x44
   19a10:	str	r4, [sp, #72]	; 0x48
   19a14:	str	r4, [sp, #76]	; 0x4c
   19a18:	str	r4, [sp, #80]	; 0x50
   19a1c:	str	r4, [sp, #84]	; 0x54
   19a20:	str	r4, [sp, #88]	; 0x58
   19a24:	str	r4, [sp, #92]	; 0x5c
   19a28:	bl	1406c <fprintf@plt>
   19a2c:	mov	r3, r4
   19a30:	mov	r2, r4
   19a34:	str	r4, [sp]
   19a38:	movw	r1, #28936	; 0x7108
   19a3c:	movt	r1, #4
   19a40:	str	r4, [sp, #4]
   19a44:	str	r4, [sp, #8]
   19a48:	str	r4, [sp, #12]
   19a4c:	str	r4, [sp, #16]
   19a50:	str	r4, [sp, #20]
   19a54:	str	r4, [sp, #24]
   19a58:	str	r4, [sp, #28]
   19a5c:	str	r4, [sp, #32]
   19a60:	str	r4, [sp, #36]	; 0x24
   19a64:	ldr	r0, [r4, #204]	; 0xcc
   19a68:	bl	1406c <fprintf@plt>
   19a6c:	mov	r3, r4
   19a70:	movw	r1, #29268	; 0x7254
   19a74:	movt	r1, #4
   19a78:	mov	r2, r4
   19a7c:	str	r4, [sp, #104]	; 0x68
   19a80:	str	r4, [sp, #108]	; 0x6c
   19a84:	str	r4, [sp, #112]	; 0x70
   19a88:	str	r4, [sp, #116]	; 0x74
   19a8c:	str	r4, [sp, #120]	; 0x78
   19a90:	str	r4, [sp, #124]	; 0x7c
   19a94:	str	r4, [sp, #128]	; 0x80
   19a98:	str	r4, [sp, #132]	; 0x84
   19a9c:	str	r4, [sp, #136]	; 0x88
   19aa0:	str	r4, [sp, #140]	; 0x8c
   19aa4:	str	r4, [sp, #144]	; 0x90
   19aa8:	str	r4, [sp, #148]	; 0x94
   19aac:	str	r4, [sp, #152]	; 0x98
   19ab0:	str	r4, [sp, #156]	; 0x9c
   19ab4:	str	r4, [sp, #160]	; 0xa0
   19ab8:	str	r4, [sp, #164]	; 0xa4
   19abc:	str	r4, [sp, #168]	; 0xa8
   19ac0:	str	r4, [sp, #172]	; 0xac
   19ac4:	str	r4, [sp, #176]	; 0xb0
   19ac8:	str	r4, [sp, #180]	; 0xb4
   19acc:	str	r4, [sp, #184]	; 0xb8
   19ad0:	str	r4, [sp, #188]	; 0xbc
   19ad4:	str	r4, [sp, #192]	; 0xc0
   19ad8:	str	r4, [sp, #196]	; 0xc4
   19adc:	str	r4, [sp, #200]	; 0xc8
   19ae0:	str	r4, [sp, #204]	; 0xcc
   19ae4:	str	r4, [sp, #208]	; 0xd0
   19ae8:	str	r4, [sp, #212]	; 0xd4
   19aec:	str	r4, [sp, #216]	; 0xd8
   19af0:	str	r4, [sp, #220]	; 0xdc
   19af4:	str	r4, [sp, #224]	; 0xe0
   19af8:	str	r4, [sp, #228]	; 0xe4
   19afc:	str	r4, [sp, #100]	; 0x64
   19b00:	str	r4, [sp]
   19b04:	str	r4, [sp, #4]
   19b08:	str	r4, [sp, #8]
   19b0c:	str	r4, [sp, #12]
   19b10:	str	r4, [sp, #16]
   19b14:	str	r4, [sp, #20]
   19b18:	ldr	r0, [r4, #204]	; 0xcc
   19b1c:	str	r4, [sp, #24]
   19b20:	str	r4, [sp, #28]
   19b24:	str	r4, [sp, #32]
   19b28:	str	r4, [sp, #36]	; 0x24
   19b2c:	str	r4, [sp, #40]	; 0x28
   19b30:	str	r4, [sp, #44]	; 0x2c
   19b34:	str	r4, [sp, #48]	; 0x30
   19b38:	str	r4, [sp, #52]	; 0x34
   19b3c:	str	r4, [sp, #56]	; 0x38
   19b40:	str	r4, [sp, #60]	; 0x3c
   19b44:	str	r4, [sp, #64]	; 0x40
   19b48:	str	r4, [sp, #68]	; 0x44
   19b4c:	str	r4, [sp, #72]	; 0x48
   19b50:	str	r4, [sp, #76]	; 0x4c
   19b54:	str	r4, [sp, #80]	; 0x50
   19b58:	str	r4, [sp, #84]	; 0x54
   19b5c:	str	r4, [sp, #88]	; 0x58
   19b60:	str	r4, [sp, #92]	; 0x5c
   19b64:	str	r4, [sp, #96]	; 0x60
   19b68:	bl	1406c <fprintf@plt>
   19b6c:	ldr	r3, [r4, #212]	; 0xd4
   19b70:	ldr	r3, [r3, #136]	; 0x88
   19b74:	cmp	r3, #0
   19b78:	bne	19d70 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   19b7c:	mov	r3, r4
   19b80:	movw	r1, #31020	; 0x792c
   19b84:	movt	r1, #4
   19b88:	mov	r2, r4
   19b8c:	ldr	r0, [r4, #204]	; 0xcc
   19b90:	bl	1406c <fprintf@plt>
   19b94:	ldr	r3, [r4, #212]	; 0xd4
   19b98:	ldr	r3, [r3, #32]
   19b9c:	cmp	r3, #0
   19ba0:	bne	19cec <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   19ba4:	mov	r0, #10
   19ba8:	ldr	r1, [r4, #204]	; 0xcc
   19bac:	bl	140cc <fputc@plt>
   19bb0:	mov	r2, r4
   19bb4:	movw	r1, #31176	; 0x79c8
   19bb8:	movt	r1, #4
   19bbc:	ldr	r0, [r4, #204]	; 0xcc
   19bc0:	bl	1406c <fprintf@plt>
   19bc4:	mov	r3, r4
   19bc8:	mov	r2, r4
   19bcc:	str	r4, [sp]
   19bd0:	movw	r1, #31304	; 0x7a48
   19bd4:	movt	r1, #4
   19bd8:	str	r4, [sp, #4]
   19bdc:	str	r4, [sp, #8]
   19be0:	str	r4, [sp, #12]
   19be4:	str	r4, [sp, #16]
   19be8:	str	r4, [sp, #20]
   19bec:	str	r4, [sp, #24]
   19bf0:	str	r4, [sp, #28]
   19bf4:	str	r4, [sp, #32]
   19bf8:	str	r4, [sp, #36]	; 0x24
   19bfc:	str	r4, [sp, #40]	; 0x28
   19c00:	str	r4, [sp, #44]	; 0x2c
   19c04:	ldr	r0, [r4, #204]	; 0xcc
   19c08:	bl	1406c <fprintf@plt>
   19c0c:	mov	r3, r4
   19c10:	mov	r2, r4
   19c14:	str	r4, [sp]
   19c18:	movw	r1, #32148	; 0x7d94
   19c1c:	movt	r1, #4
   19c20:	ldr	r0, [r4, #204]	; 0xcc
   19c24:	bl	1406c <fprintf@plt>
   19c28:	mov	r3, r4
   19c2c:	mov	r2, r4
   19c30:	str	r4, [sp]
   19c34:	movw	r1, #32332	; 0x7e4c
   19c38:	movt	r1, #4
   19c3c:	str	r4, [sp, #4]
   19c40:	str	r4, [sp, #8]
   19c44:	str	r4, [sp, #12]
   19c48:	ldr	r0, [r4, #204]	; 0xcc
   19c4c:	bl	1406c <fprintf@plt>
   19c50:	mov	r3, r4
   19c54:	mov	r2, r4
   19c58:	str	r4, [sp]
   19c5c:	movw	r1, #32788	; 0x8014
   19c60:	movt	r1, #4
   19c64:	str	r4, [sp, #4]
   19c68:	ldr	r0, [r4, #204]	; 0xcc
   19c6c:	bl	1406c <fprintf@plt>
   19c70:	mov	r3, r4
   19c74:	mov	r2, r4
   19c78:	str	r4, [sp]
   19c7c:	movw	r1, #33424	; 0x8290
   19c80:	movt	r1, #4
   19c84:	str	r4, [sp, #4]
   19c88:	str	r4, [sp, #8]
   19c8c:	str	r4, [sp, #12]
   19c90:	str	r4, [sp, #16]
   19c94:	str	r4, [sp, #20]
   19c98:	str	r4, [sp, #24]
   19c9c:	str	r4, [sp, #28]
   19ca0:	ldr	r0, [r4, #204]	; 0xcc
   19ca4:	bl	1406c <fprintf@plt>
   19ca8:	mov	r0, #10
   19cac:	ldr	r1, [r4, #204]	; 0xcc
   19cb0:	bl	140cc <fputc@plt>
   19cb4:	ldr	r0, [r4, #204]	; 0xcc
   19cb8:	ldr	r3, [r4, #212]	; 0xd4
   19cbc:	ldr	r3, [r3, #140]	; 0x8c
   19cc0:	cmp	r3, #0
   19cc4:	bne	19d50 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   19cc8:	mov	r2, r5
   19ccc:	movw	r1, #34204	; 0x859c
   19cd0:	movt	r1, #4
   19cd4:	bl	1406c <fprintf@plt>
   19cd8:	mov	r0, #0
   19cdc:	add	sp, sp, #236	; 0xec
   19ce0:	ldrd	r4, [sp]
   19ce4:	add	sp, sp, #8
   19ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   19cec:	movw	r1, #12248	; 0x2fd8
   19cf0:	movt	r1, #4
   19cf4:	ldr	r0, [r4, #204]	; 0xcc
   19cf8:	mov	r2, r4
   19cfc:	bl	1406c <fprintf@plt>
   19d00:	b	19bb0 <__flatcc_fb_gen_common_c_header@@Base+0x9d4>
   19d04:	mov	r0, #10
   19d08:	ldr	r1, [r4, #204]	; 0xcc
   19d0c:	bl	140cc <fputc@plt>
   19d10:	b	19420 <__flatcc_fb_gen_common_c_header@@Base+0x244>
   19d14:	movw	r0, #27992	; 0x6d58
   19d18:	movt	r0, #4
   19d1c:	ldr	r3, [r4, #204]	; 0xcc
   19d20:	mov	r2, #20
   19d24:	mov	r1, #1
   19d28:	bl	13ff4 <fwrite@plt>
   19d2c:	b	19944 <__flatcc_fb_gen_common_c_header@@Base+0x768>
   19d30:	mov	r0, #10
   19d34:	ldr	r1, [r4, #204]	; 0xcc
   19d38:	bl	140cc <fputc@plt>
   19d3c:	b	1998c <__flatcc_fb_gen_common_c_header@@Base+0x7b0>
   19d40:	mov	r0, #10
   19d44:	ldr	r1, [r4, #204]	; 0xcc
   19d48:	bl	140cc <fputc@plt>
   19d4c:	b	19324 <__flatcc_fb_gen_common_c_header@@Base+0x148>
   19d50:	mov	r3, r0
   19d54:	mov	r2, #36	; 0x24
   19d58:	movw	r0, #34164	; 0x8574
   19d5c:	movt	r0, #4
   19d60:	mov	r1, #1
   19d64:	bl	13ff4 <fwrite@plt>
   19d68:	ldr	r0, [r4, #204]	; 0xcc
   19d6c:	b	19cc8 <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   19d70:	movw	r1, #30992	; 0x7910
   19d74:	movt	r1, #4
   19d78:	ldr	r0, [r4, #204]	; 0xcc
   19d7c:	mov	r2, r4
   19d80:	bl	1406c <fprintf@plt>
   19d84:	b	19b7c <__flatcc_fb_gen_common_c_header@@Base+0x9a0>
   19d88:	mov	r3, r4
   19d8c:	mov	r2, r4
   19d90:	str	r4, [sp]
   19d94:	movw	r1, #10100	; 0x2774
   19d98:	movt	r1, #4
   19d9c:	str	r4, [sp, #4]
   19da0:	str	r4, [sp, #8]
   19da4:	ldr	r0, [r4, #204]	; 0xcc
   19da8:	bl	1406c <fprintf@plt>
   19dac:	mov	r3, r4
   19db0:	movw	r2, #10080	; 0x2760
   19db4:	movt	r2, #4
   19db8:	movw	r1, #10308	; 0x2844
   19dbc:	movt	r1, #4
   19dc0:	str	r4, [sp]
   19dc4:	str	r4, [sp, #4]
   19dc8:	ldr	r0, [r4, #204]	; 0xcc
   19dcc:	bl	1406c <fprintf@plt>
   19dd0:	mov	r3, r4
   19dd4:	mov	r2, r4
   19dd8:	str	r4, [sp]
   19ddc:	movw	r1, #10652	; 0x299c
   19de0:	movt	r1, #4
   19de4:	str	r4, [sp, #4]
   19de8:	str	r4, [sp, #8]
   19dec:	ldr	r0, [r4, #204]	; 0xcc
   19df0:	bl	1406c <fprintf@plt>
   19df4:	mov	r3, r5
   19df8:	mov	r2, r5
   19dfc:	ldr	r0, [r4, #204]	; 0xcc
   19e00:	movw	r1, #11268	; 0x2c04
   19e04:	movt	r1, #4
   19e08:	bl	1406c <fprintf@plt>
   19e0c:	b	19284 <__flatcc_fb_gen_common_c_header@@Base+0xa8>
   19e10:	movw	r0, #10000	; 0x2710
   19e14:	movt	r0, #4
   19e18:	mov	r2, #36	; 0x24
   19e1c:	mov	r1, #1
   19e20:	bl	13ff4 <fwrite@plt>
   19e24:	ldr	r3, [r4, #204]	; 0xcc
   19e28:	b	19258 <__flatcc_fb_gen_common_c_header@@Base+0x7c>
   19e2c:	movw	r0, #9864	; 0x2688
   19e30:	movt	r0, #4
   19e34:	ldr	r3, [r4, #204]	; 0xcc
   19e38:	mov	r2, #135	; 0x87
   19e3c:	mov	r1, #1
   19e40:	bl	13ff4 <fwrite@plt>
   19e44:	ldr	r3, [r4, #212]	; 0xd4
   19e48:	b	19248 <__flatcc_fb_gen_common_c_header@@Base+0x6c>

00019e4c <__flatcc_fb_gen_c_reader@@Base>:
   19e4c:	ldr	r3, [r0, #208]	; 0xd0
   19e50:	movw	r1, #34232	; 0x85b8
   19e54:	movt	r1, #4
   19e58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19e5c:	mov	r4, r0
   19e60:	ldr	r2, [r0, #212]	; 0xd4
   19e64:	ldr	r3, [r3, #164]	; 0xa4
   19e68:	ldr	r5, [r2, #132]	; 0x84
   19e6c:	strd	r6, [sp, #8]
   19e70:	add	r6, r0, #102	; 0x66
   19e74:	strd	r8, [sp, #16]
   19e78:	mov	r2, r3
   19e7c:	strd	sl, [sp, #24]
   19e80:	str	lr, [sp, #32]
   19e84:	sub	sp, sp, #268	; 0x10c
   19e88:	ldr	r0, [r0, #204]	; 0xcc
   19e8c:	bl	1406c <fprintf@plt>
   19e90:	movw	r0, #9724	; 0x25fc
   19e94:	movt	r0, #4
   19e98:	ldr	r3, [r4, #204]	; 0xcc
   19e9c:	mov	r2, #81	; 0x51
   19ea0:	mov	r1, #1
   19ea4:	bl	13ff4 <fwrite@plt>
   19ea8:	cmp	r5, #0
   19eac:	bne	1a350 <__flatcc_fb_gen_c_reader@@Base+0x504>
   19eb0:	mov	r3, r4
   19eb4:	mov	r2, r6
   19eb8:	ldr	r0, [r4, #204]	; 0xcc
   19ebc:	movw	r1, #34720	; 0x87a0
   19ec0:	movt	r1, #4
   19ec4:	bl	1406c <fprintf@plt>
   19ec8:	mov	r0, r4
   19ecc:	movw	r2, #34784	; 0x87e0
   19ed0:	movt	r2, #4
   19ed4:	movw	r1, #31380	; 0x7a94
   19ed8:	movt	r1, #5
   19edc:	bl	16018 <__flatcc_fb_gen_c_includes@@Base>
   19ee0:	mov	r2, #39	; 0x27
   19ee4:	mov	r1, #1
   19ee8:	ldr	r3, [r4, #204]	; 0xcc
   19eec:	movw	r0, #34796	; 0x87ec
   19ef0:	movt	r0, #4
   19ef4:	bl	13ff4 <fwrite@plt>
   19ef8:	movw	r0, #35264	; 0x89c0
   19efc:	movt	r0, #4
   19f00:	ldr	r3, [r4, #204]	; 0xcc
   19f04:	mov	r2, #58	; 0x3a
   19f08:	mov	r1, #1
   19f0c:	bl	13ff4 <fwrite@plt>
   19f10:	ldr	r0, [r4, #204]	; 0xcc
   19f14:	ldr	r3, [r4, #212]	; 0xd4
   19f18:	ldr	r3, [r3, #140]	; 0x8c
   19f1c:	cmp	r3, #0
   19f20:	bne	1a330 <__flatcc_fb_gen_c_reader@@Base+0x4e4>
   19f24:	ldr	ip, [r4, #208]	; 0xd0
   19f28:	ldrh	r3, [ip, #16]
   19f2c:	cmp	r3, #2
   19f30:	beq	1a2e0 <__flatcc_fb_gen_c_reader@@Base+0x494>
   19f34:	movw	r1, #34888	; 0x8848
   19f38:	movt	r1, #4
   19f3c:	mov	r3, r4
   19f40:	mov	r2, r4
   19f44:	bl	1406c <fprintf@plt>
   19f48:	ldr	r0, [r4, #204]	; 0xcc
   19f4c:	ldr	ip, [r4, #208]	; 0xd0
   19f50:	ldrh	r3, [ip, #32]
   19f54:	cmp	r3, #2
   19f58:	beq	1a308 <__flatcc_fb_gen_c_reader@@Base+0x4bc>
   19f5c:	ldr	ip, [r4, #212]	; 0xd4
   19f60:	movw	r1, #34988	; 0x88ac
   19f64:	movt	r1, #4
   19f68:	mov	r3, r4
   19f6c:	mov	r2, r4
   19f70:	ldr	ip, [ip, #104]	; 0x68
   19f74:	str	ip, [sp]
   19f78:	bl	1406c <fprintf@plt>
   19f7c:	mov	r0, #10
   19f80:	ldr	r1, [r4, #204]	; 0xcc
   19f84:	bl	140cc <fputc@plt>
   19f88:	ldr	r3, [r4, #208]	; 0xd0
   19f8c:	ldr	r5, [r3, #44]	; 0x2c
   19f90:	cmp	r5, #0
   19f94:	beq	19fb0 <__flatcc_fb_gen_c_reader@@Base+0x164>
   19f98:	mov	r1, r5
   19f9c:	mov	r0, r4
   19fa0:	bl	16ad0 <__flatcc_fb_codegen_c@@Base+0x4c8>
   19fa4:	ldr	r5, [r5, #120]	; 0x78
   19fa8:	cmp	r5, #0
   19fac:	bne	19f98 <__flatcc_fb_gen_c_reader@@Base+0x14c>
   19fb0:	mov	r0, #10
   19fb4:	ldr	r1, [r4, #204]	; 0xcc
   19fb8:	bl	140cc <fputc@plt>
   19fbc:	ldr	r3, [r4, #208]	; 0xd0
   19fc0:	ldr	r5, [r3, #40]	; 0x28
   19fc4:	cmp	r5, #0
   19fc8:	beq	1a184 <__flatcc_fb_gen_c_reader@@Base+0x338>
   19fcc:	ldrh	r3, [r5, #8]
   19fd0:	cmp	r3, #0
   19fd4:	beq	1a220 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   19fd8:	ldr	r5, [r5]
   19fdc:	cmp	r5, #0
   19fe0:	bne	19fcc <__flatcc_fb_gen_c_reader@@Base+0x180>
   19fe4:	ldr	r3, [r4, #208]	; 0xd0
   19fe8:	ldr	r5, [r3, #40]	; 0x28
   19fec:	cmp	r5, #0
   19ff0:	beq	1a184 <__flatcc_fb_gen_c_reader@@Base+0x338>
   19ff4:	movw	r3, #35044	; 0x88e4
   19ff8:	movt	r3, #4
   19ffc:	str	r3, [sp, #12]
   1a000:	movw	r3, #35112	; 0x8928
   1a004:	movt	r3, #4
   1a008:	str	r3, [sp, #16]
   1a00c:	movw	r3, #35156	; 0x8954
   1a010:	movt	r3, #4
   1a014:	str	r3, [sp, #20]
   1a018:	b	1a028 <__flatcc_fb_gen_c_reader@@Base+0x1dc>
   1a01c:	ldr	r5, [r5]
   1a020:	cmp	r5, #0
   1a024:	beq	1a184 <__flatcc_fb_gen_c_reader@@Base+0x338>
   1a028:	ldrh	r3, [r5, #8]
   1a02c:	cmp	r3, #1
   1a030:	bhi	1a01c <__flatcc_fb_gen_c_reader@@Base+0x1d0>
   1a034:	mov	r2, #220	; 0xdc
   1a038:	mov	r1, #0
   1a03c:	add	r0, sp, #44	; 0x2c
   1a040:	bl	14084 <memset@plt>
   1a044:	mov	r1, r5
   1a048:	add	r2, sp, #44	; 0x2c
   1a04c:	ldr	r0, [r5, #12]
   1a050:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1a054:	ldr	r6, [r5, #88]	; 0x58
   1a058:	add	r3, sp, #44	; 0x2c
   1a05c:	mov	r2, r3
   1a060:	str	r4, [sp]
   1a064:	ldr	r1, [sp, #12]
   1a068:	ldr	r0, [r4, #204]	; 0xcc
   1a06c:	bl	1406c <fprintf@plt>
   1a070:	and	fp, r6, #15
   1a074:	mov	r3, r4
   1a078:	ubfx	sl, r6, #4, #4
   1a07c:	add	r2, sp, #44	; 0x2c
   1a080:	ldr	r1, [sp, #16]
   1a084:	ubfx	r9, r6, #8, #4
   1a088:	ubfx	r8, r6, #12, #4
   1a08c:	ldr	r0, [r4, #204]	; 0xcc
   1a090:	ubfx	r7, r6, #16, #4
   1a094:	str	r6, [sp]
   1a098:	bl	1406c <fprintf@plt>
   1a09c:	cmp	fp, #9
   1a0a0:	ubfx	lr, r6, #20, #4
   1a0a4:	movw	r0, #30812	; 0x785c
   1a0a8:	movhi	r1, #87	; 0x57
   1a0ac:	movls	r1, #48	; 0x30
   1a0b0:	cmp	sl, #9
   1a0b4:	add	r1, fp, r1
   1a0b8:	ubfx	fp, r6, #24, #4
   1a0bc:	movhi	ip, #87	; 0x57
   1a0c0:	movls	ip, #48	; 0x30
   1a0c4:	lsr	r6, r6, #28
   1a0c8:	cmp	r9, #9
   1a0cc:	add	ip, sl, ip
   1a0d0:	strh	r0, [sp, #24]
   1a0d4:	movhi	r3, #87	; 0x57
   1a0d8:	movls	r3, #48	; 0x30
   1a0dc:	cmp	r8, #9
   1a0e0:	add	r3, r9, r3
   1a0e4:	strb	ip, [sp, #26]
   1a0e8:	movhi	r9, #87	; 0x57
   1a0ec:	movls	r9, #48	; 0x30
   1a0f0:	strb	r1, [sp, #27]
   1a0f4:	cmp	r7, #9
   1a0f8:	add	r8, r8, r9
   1a0fc:	strh	r0, [sp, #28]
   1a100:	movhi	r9, #87	; 0x57
   1a104:	movls	r9, #48	; 0x30
   1a108:	cmp	lr, #9
   1a10c:	add	r7, r7, r9
   1a110:	strb	r8, [sp, #30]
   1a114:	movhi	ip, #87	; 0x57
   1a118:	movls	ip, #48	; 0x30
   1a11c:	strb	r3, [sp, #31]
   1a120:	cmp	fp, #9
   1a124:	add	lr, lr, ip
   1a128:	strh	r0, [sp, #32]
   1a12c:	movhi	r1, #87	; 0x57
   1a130:	movls	r1, #48	; 0x30
   1a134:	cmp	r6, #9
   1a138:	add	fp, fp, r1
   1a13c:	strh	r0, [sp, #36]	; 0x24
   1a140:	movhi	r1, #87	; 0x57
   1a144:	movls	r1, #48	; 0x30
   1a148:	ldr	r0, [r4, #204]	; 0xcc
   1a14c:	add	r6, r6, r1
   1a150:	mov	ip, #0
   1a154:	strb	lr, [sp, #34]	; 0x22
   1a158:	add	r2, sp, #44	; 0x2c
   1a15c:	add	r3, sp, #24
   1a160:	ldr	r1, [sp, #20]
   1a164:	strb	r7, [sp, #35]	; 0x23
   1a168:	strb	r6, [sp, #38]	; 0x26
   1a16c:	strb	fp, [sp, #39]	; 0x27
   1a170:	strb	ip, [sp, #40]	; 0x28
   1a174:	bl	1406c <fprintf@plt>
   1a178:	ldr	r5, [r5]
   1a17c:	cmp	r5, #0
   1a180:	bne	1a028 <__flatcc_fb_gen_c_reader@@Base+0x1dc>
   1a184:	mov	r0, #10
   1a188:	ldr	r1, [r4, #204]	; 0xcc
   1a18c:	bl	140cc <fputc@plt>
   1a190:	ldr	r3, [r4, #208]	; 0xd0
   1a194:	ldr	r5, [r3, #40]	; 0x28
   1a198:	cmp	r5, #0
   1a19c:	beq	1a1b8 <__flatcc_fb_gen_c_reader@@Base+0x36c>
   1a1a0:	ldrh	r3, [r5, #8]
   1a1a4:	cmp	r3, #3
   1a1a8:	beq	1a2c4 <__flatcc_fb_gen_c_reader@@Base+0x478>
   1a1ac:	ldr	r5, [r5]
   1a1b0:	cmp	r5, #0
   1a1b4:	bne	1a1a0 <__flatcc_fb_gen_c_reader@@Base+0x354>
   1a1b8:	mov	r0, #10
   1a1bc:	ldr	r1, [r4, #204]	; 0xcc
   1a1c0:	bl	140cc <fputc@plt>
   1a1c4:	ldr	r3, [r4, #208]	; 0xd0
   1a1c8:	ldr	r5, [r3, #44]	; 0x2c
   1a1cc:	cmp	r5, #0
   1a1d0:	beq	1a1f0 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   1a1d4:	mov	r1, r5
   1a1d8:	mov	r0, r4
   1a1dc:	bl	174c0 <__flatcc_fb_codegen_c@@Base+0xeb8>
   1a1e0:	ldr	r5, [r5, #120]	; 0x78
   1a1e4:	cmp	r5, #0
   1a1e8:	bne	1a1d4 <__flatcc_fb_gen_c_reader@@Base+0x388>
   1a1ec:	ldr	r3, [r4, #208]	; 0xd0
   1a1f0:	ldr	r5, [r3, #40]	; 0x28
   1a1f4:	cmp	r5, #0
   1a1f8:	beq	1a254 <__flatcc_fb_gen_c_reader@@Base+0x408>
   1a1fc:	ldrh	r3, [r5, #8]
   1a200:	cmp	r3, #4
   1a204:	ldrls	pc, [pc, r3, lsl #2]
   1a208:	b	1a3d4 <__flatcc_fb_gen_c_reader@@Base+0x588>
   1a20c:	andeq	sl, r1, r8, lsr #5
   1a210:	andeq	sl, r1, r8, asr #4
   1a214:	andeq	sl, r1, r8, asr #4
   1a218:	andeq	sl, r1, r8, asr #4
   1a21c:	andeq	sl, r1, ip, lsr r2
   1a220:	mov	r1, r5
   1a224:	mov	r0, r4
   1a228:	bl	16ad0 <__flatcc_fb_codegen_c@@Base+0x4c8>
   1a22c:	ldr	r5, [r5]
   1a230:	cmp	r5, #0
   1a234:	bne	19fcc <__flatcc_fb_gen_c_reader@@Base+0x180>
   1a238:	b	19fe4 <__flatcc_fb_gen_c_reader@@Base+0x198>
   1a23c:	mov	r1, r5
   1a240:	mov	r0, r4
   1a244:	bl	16c94 <__flatcc_fb_codegen_c@@Base+0x68c>
   1a248:	ldr	r5, [r5]
   1a24c:	cmp	r5, #0
   1a250:	bne	1a1fc <__flatcc_fb_gen_c_reader@@Base+0x3b0>
   1a254:	mov	r0, #10
   1a258:	ldr	r1, [r4, #204]	; 0xcc
   1a25c:	bl	140cc <fputc@plt>
   1a260:	ldr	r0, [r4, #204]	; 0xcc
   1a264:	ldr	r3, [r4, #212]	; 0xd4
   1a268:	ldr	r3, [r3, #140]	; 0x8c
   1a26c:	cmp	r3, #0
   1a270:	bne	1a3b4 <__flatcc_fb_gen_c_reader@@Base+0x568>
   1a274:	ldr	r3, [r4, #208]	; 0xd0
   1a278:	movw	r1, #35236	; 0x89a4
   1a27c:	movt	r1, #4
   1a280:	ldr	r2, [r3, #164]	; 0xa4
   1a284:	bl	1406c <fprintf@plt>
   1a288:	mov	r0, #0
   1a28c:	add	sp, sp, #268	; 0x10c
   1a290:	ldrd	r4, [sp]
   1a294:	ldrd	r6, [sp, #8]
   1a298:	ldrd	r8, [sp, #16]
   1a29c:	ldrd	sl, [sp, #24]
   1a2a0:	add	sp, sp, #32
   1a2a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2a8:	mov	r1, r5
   1a2ac:	mov	r0, r4
   1a2b0:	bl	1803c <__flatcc_fb_codegen_c@@Base+0x1a34>
   1a2b4:	ldr	r5, [r5]
   1a2b8:	cmp	r5, #0
   1a2bc:	bne	1a1fc <__flatcc_fb_gen_c_reader@@Base+0x3b0>
   1a2c0:	b	1a254 <__flatcc_fb_gen_c_reader@@Base+0x408>
   1a2c4:	mov	r1, r5
   1a2c8:	mov	r0, r4
   1a2cc:	bl	16c94 <__flatcc_fb_codegen_c@@Base+0x68c>
   1a2d0:	ldr	r5, [r5]
   1a2d4:	cmp	r5, #0
   1a2d8:	bne	1a1a0 <__flatcc_fb_gen_c_reader@@Base+0x354>
   1a2dc:	b	1a1b8 <__flatcc_fb_gen_c_reader@@Base+0x36c>
   1a2e0:	ldr	lr, [ip, #8]
   1a2e4:	movw	r1, #34836	; 0x8814
   1a2e8:	movt	r1, #4
   1a2ec:	mov	r3, r4
   1a2f0:	mov	r2, r4
   1a2f4:	str	lr, [sp, #4]
   1a2f8:	ldr	ip, [ip, #12]
   1a2fc:	str	ip, [sp]
   1a300:	bl	1406c <fprintf@plt>
   1a304:	b	19f48 <__flatcc_fb_gen_c_reader@@Base+0xfc>
   1a308:	ldr	lr, [ip, #24]
   1a30c:	movw	r1, #34940	; 0x887c
   1a310:	movt	r1, #4
   1a314:	mov	r3, r4
   1a318:	mov	r2, r4
   1a31c:	str	lr, [sp, #4]
   1a320:	ldr	ip, [ip, #28]
   1a324:	str	ip, [sp]
   1a328:	bl	1406c <fprintf@plt>
   1a32c:	b	19f7c <__flatcc_fb_gen_c_reader@@Base+0x130>
   1a330:	mov	r3, r0
   1a334:	mov	r2, #36	; 0x24
   1a338:	movw	r0, #10000	; 0x2710
   1a33c:	movt	r0, #4
   1a340:	mov	r1, #1
   1a344:	bl	13ff4 <fwrite@plt>
   1a348:	ldr	r0, [r4, #204]	; 0xcc
   1a34c:	b	19f24 <__flatcc_fb_gen_c_reader@@Base+0xd8>
   1a350:	movw	r2, #443	; 0x1bb
   1a354:	mov	r1, #1
   1a358:	ldr	r3, [r4, #204]	; 0xcc
   1a35c:	movw	r0, #34276	; 0x85e4
   1a360:	movt	r0, #4
   1a364:	bl	13ff4 <fwrite@plt>
   1a368:	mov	r3, r4
   1a36c:	mov	r2, r6
   1a370:	ldr	r0, [r4, #204]	; 0xcc
   1a374:	movw	r1, #34720	; 0x87a0
   1a378:	movt	r1, #4
   1a37c:	bl	1406c <fprintf@plt>
   1a380:	mov	r0, r4
   1a384:	movw	r2, #34784	; 0x87e0
   1a388:	movt	r2, #4
   1a38c:	movw	r1, #31380	; 0x7a94
   1a390:	movt	r1, #5
   1a394:	bl	16018 <__flatcc_fb_gen_c_includes@@Base>
   1a398:	movw	r0, #34796	; 0x87ec
   1a39c:	movt	r0, #4
   1a3a0:	ldr	r3, [r4, #204]	; 0xcc
   1a3a4:	mov	r2, #39	; 0x27
   1a3a8:	mov	r1, #1
   1a3ac:	bl	13ff4 <fwrite@plt>
   1a3b0:	b	19f10 <__flatcc_fb_gen_c_reader@@Base+0xc4>
   1a3b4:	mov	r3, r0
   1a3b8:	mov	r2, #36	; 0x24
   1a3bc:	movw	r0, #34164	; 0x8574
   1a3c0:	movt	r0, #4
   1a3c4:	mov	r1, #1
   1a3c8:	bl	13ff4 <fwrite@plt>
   1a3cc:	ldr	r0, [r4, #204]	; 0xcc
   1a3d0:	b	1a274 <__flatcc_fb_gen_c_reader@@Base+0x428>
   1a3d4:	movw	r1, #35192	; 0x8978
   1a3d8:	movt	r1, #4
   1a3dc:	movw	r3, #49320	; 0xc0a8
   1a3e0:	movt	r3, #6
   1a3e4:	movw	r2, #4388	; 0x1124
   1a3e8:	movt	r2, #4
   1a3ec:	str	r1, [sp]
   1a3f0:	movw	r1, #4944	; 0x1350
   1a3f4:	movt	r1, #4
   1a3f8:	ldr	r0, [r3]
   1a3fc:	movw	r3, #1672	; 0x688
   1a400:	bl	1406c <fprintf@plt>
   1a404:	movw	r1, #4388	; 0x1124
   1a408:	movt	r1, #4
   1a40c:	ldr	r3, [pc, #12]	; 1a420 <__flatcc_fb_gen_c_reader@@Base+0x5d4>
   1a410:	movw	r0, #41608	; 0xa288
   1a414:	movt	r0, #4
   1a418:	movw	r2, #1672	; 0x688
   1a41c:	bl	14120 <__assert_fail@plt>
   1a420:	andeq	r1, r4, r8, lsl #2

0001a424 <__flatcc_gen_sort@@Base>:
   1a424:	mov	r2, r0
   1a428:	movw	r1, #35692	; 0x8b6c
   1a42c:	movt	r1, #4
   1a430:	str	r4, [sp, #-8]!
   1a434:	mov	r4, r0
   1a438:	ldr	r0, [r0, #204]	; 0xcc
   1a43c:	str	lr, [sp, #4]
   1a440:	sub	sp, sp, #24
   1a444:	bl	1406c <fprintf@plt>
   1a448:	mov	r3, r4
   1a44c:	mov	r2, r4
   1a450:	ldr	r0, [r4, #204]	; 0xcc
   1a454:	movw	r1, #36668	; 0x8f3c
   1a458:	movt	r1, #4
   1a45c:	bl	1406c <fprintf@plt>
   1a460:	mov	r3, r4
   1a464:	mov	r2, r4
   1a468:	str	r4, [sp]
   1a46c:	movw	r1, #36940	; 0x904c
   1a470:	movt	r1, #4
   1a474:	ldr	r0, [r4, #204]	; 0xcc
   1a478:	bl	1406c <fprintf@plt>
   1a47c:	mov	r3, r4
   1a480:	mov	r2, r4
   1a484:	str	r4, [sp]
   1a488:	movw	r1, #37152	; 0x9120
   1a48c:	movt	r1, #4
   1a490:	str	r4, [sp, #4]
   1a494:	ldr	r0, [r4, #204]	; 0xcc
   1a498:	bl	1406c <fprintf@plt>
   1a49c:	mov	r3, r4
   1a4a0:	mov	r2, r4
   1a4a4:	ldr	r0, [r4, #204]	; 0xcc
   1a4a8:	movw	r1, #37300	; 0x91b4
   1a4ac:	movt	r1, #4
   1a4b0:	bl	1406c <fprintf@plt>
   1a4b4:	mov	r3, r4
   1a4b8:	mov	r2, r4
   1a4bc:	str	r4, [sp]
   1a4c0:	movw	r1, #37708	; 0x934c
   1a4c4:	movt	r1, #4
   1a4c8:	str	r4, [sp, #4]
   1a4cc:	ldr	r0, [r4, #204]	; 0xcc
   1a4d0:	bl	1406c <fprintf@plt>
   1a4d4:	mov	r3, r4
   1a4d8:	mov	r2, r4
   1a4dc:	str	r4, [sp]
   1a4e0:	movw	r1, #37844	; 0x93d4
   1a4e4:	movt	r1, #4
   1a4e8:	str	r4, [sp, #4]
   1a4ec:	str	r4, [sp, #8]
   1a4f0:	str	r4, [sp, #12]
   1a4f4:	ldr	r0, [r4, #204]	; 0xcc
   1a4f8:	bl	1406c <fprintf@plt>
   1a4fc:	mov	r3, r4
   1a500:	mov	r2, r4
   1a504:	str	r4, [sp]
   1a508:	movw	r1, #37988	; 0x9464
   1a50c:	movt	r1, #4
   1a510:	str	r4, [sp, #4]
   1a514:	ldr	r0, [r4, #204]	; 0xcc
   1a518:	bl	1406c <fprintf@plt>
   1a51c:	mov	r3, r4
   1a520:	mov	r2, r4
   1a524:	str	r4, [sp]
   1a528:	movw	r1, #38088	; 0x94c8
   1a52c:	movt	r1, #4
   1a530:	str	r4, [sp, #4]
   1a534:	str	r4, [sp, #8]
   1a538:	str	r4, [sp, #12]
   1a53c:	str	r4, [sp, #16]
   1a540:	ldr	r0, [r4, #204]	; 0xcc
   1a544:	bl	1406c <fprintf@plt>
   1a548:	mov	r0, #0
   1a54c:	add	sp, sp, #24
   1a550:	ldr	r4, [sp]
   1a554:	add	sp, sp, #4
   1a558:	pop	{pc}		; (ldr pc, [sp], #4)
   1a55c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a560:	movw	ip, #38576	; 0x96b0
   1a564:	movt	ip, #4
   1a568:	strd	r6, [sp, #8]
   1a56c:	mov	r5, r0
   1a570:	strd	r8, [sp, #16]
   1a574:	strd	sl, [sp, #24]
   1a578:	mov	sl, r1
   1a57c:	mov	r1, #0
   1a580:	str	lr, [sp, #32]
   1a584:	sub	sp, sp, #500	; 0x1f4
   1a588:	movw	lr, #38560	; 0x96a0
   1a58c:	movt	lr, #4
   1a590:	ldr	r4, [sp, #536]	; 0x218
   1a594:	add	r8, sp, #56	; 0x38
   1a598:	mov	fp, r2
   1a59c:	mov	r0, r8
   1a5a0:	str	r3, [sp, #40]	; 0x28
   1a5a4:	ldr	r6, [sp, #540]	; 0x21c
   1a5a8:	mov	r2, #220	; 0xdc
   1a5ac:	add	r9, sp, #276	; 0x114
   1a5b0:	cmp	r6, r1
   1a5b4:	moveq	lr, ip
   1a5b8:	str	lr, [sp, #36]	; 0x24
   1a5bc:	bl	14084 <memset@plt>
   1a5c0:	mov	r2, #220	; 0xdc
   1a5c4:	mov	r1, #0
   1a5c8:	mov	r0, r9
   1a5cc:	bl	14084 <memset@plt>
   1a5d0:	mov	r1, r4
   1a5d4:	mov	r2, r8
   1a5d8:	ldr	r0, [r4, #12]
   1a5dc:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1a5e0:	ldr	r4, [r4, #20]
   1a5e4:	cmp	r4, #0
   1a5e8:	beq	1a71c <__flatcc_gen_sort@@Base+0x2f8>
   1a5ec:	movw	r3, #38844	; 0x97bc
   1a5f0:	movt	r3, #4
   1a5f4:	str	r3, [sp, #44]	; 0x2c
   1a5f8:	movw	r3, #38584	; 0x96b8
   1a5fc:	movt	r3, #4
   1a600:	str	r3, [sp, #48]	; 0x30
   1a604:	movw	r3, #38644	; 0x96f4
   1a608:	movt	r3, #4
   1a60c:	str	r3, [sp, #52]	; 0x34
   1a610:	b	1a674 <__flatcc_gen_sort@@Base+0x250>
   1a614:	ldr	r1, [r4, #16]
   1a618:	mov	r2, r9
   1a61c:	ldr	r0, [r1, #12]
   1a620:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1a624:	ldr	r3, [r4, #16]
   1a628:	ldrh	r3, [r3, #8]
   1a62c:	cmp	r3, #0
   1a630:	bne	1a73c <__flatcc_gen_sort@@Base+0x318>
   1a634:	ldr	r3, [sp, #36]	; 0x24
   1a638:	mov	r2, r5
   1a63c:	stm	sp, {r5, sl}
   1a640:	ldr	r1, [sp, #48]	; 0x30
   1a644:	str	fp, [sp, #8]
   1a648:	ldr	r0, [sp, #40]	; 0x28
   1a64c:	str	r0, [sp, #12]
   1a650:	str	r8, [sp, #16]
   1a654:	str	r7, [sp, #20]
   1a658:	str	r6, [sp, #24]
   1a65c:	str	r9, [sp, #28]
   1a660:	ldr	r0, [r5, #204]	; 0xcc
   1a664:	bl	1406c <fprintf@plt>
   1a668:	ldr	r4, [r4]
   1a66c:	cmp	r4, #0
   1a670:	beq	1a71c <__flatcc_gen_sort@@Base+0x2f8>
   1a674:	ldrh	r3, [r4, #24]
   1a678:	ldr	r2, [r4, #4]
   1a67c:	cmp	r3, #10
   1a680:	ldrd	r6, [r2]
   1a684:	beq	1a6e8 <__flatcc_gen_sort@@Base+0x2c4>
   1a688:	cmp	r3, #14
   1a68c:	beq	1a614 <__flatcc_gen_sort@@Base+0x1f0>
   1a690:	cmp	r3, #0
   1a694:	beq	1a668 <__flatcc_gen_sort@@Base+0x244>
   1a698:	movw	r1, #38900	; 0x97f4
   1a69c:	movt	r1, #4
   1a6a0:	movw	r3, #49320	; 0xc0a8
   1a6a4:	movt	r3, #6
   1a6a8:	movw	r2, #38704	; 0x9730
   1a6ac:	movt	r2, #4
   1a6b0:	str	r1, [sp]
   1a6b4:	movw	r1, #4944	; 0x1350
   1a6b8:	movt	r1, #4
   1a6bc:	ldr	r0, [r3]
   1a6c0:	movw	r3, #1368	; 0x558
   1a6c4:	bl	1406c <fprintf@plt>
   1a6c8:	movw	r3, #38208	; 0x9540
   1a6cc:	movt	r3, #4
   1a6d0:	movw	r1, #38704	; 0x9730
   1a6d4:	movt	r1, #4
   1a6d8:	movw	r0, #41608	; 0xa288
   1a6dc:	movt	r0, #4
   1a6e0:	movw	r2, #1368	; 0x558
   1a6e4:	bl	14120 <__assert_fail@plt>
   1a6e8:	mov	r2, r5
   1a6ec:	stm	sp, {r5, sl, fp}
   1a6f0:	ldrd	r0, [sp, #40]	; 0x28
   1a6f4:	ldr	r3, [sp, #36]	; 0x24
   1a6f8:	str	r0, [sp, #12]
   1a6fc:	str	r8, [sp, #16]
   1a700:	str	r7, [sp, #20]
   1a704:	str	r6, [sp, #24]
   1a708:	ldr	r0, [r5, #204]	; 0xcc
   1a70c:	bl	1406c <fprintf@plt>
   1a710:	ldr	r4, [r4]
   1a714:	cmp	r4, #0
   1a718:	bne	1a674 <__flatcc_gen_sort@@Base+0x250>
   1a71c:	mov	r0, #0
   1a720:	add	sp, sp, #500	; 0x1f4
   1a724:	ldrd	r4, [sp]
   1a728:	ldrd	r6, [sp, #8]
   1a72c:	ldrd	r8, [sp, #16]
   1a730:	ldrd	sl, [sp, #24]
   1a734:	add	sp, sp, #32
   1a738:	pop	{pc}		; (ldr pc, [sp], #4)
   1a73c:	cmp	r3, #1
   1a740:	bne	1a758 <__flatcc_gen_sort@@Base+0x334>
   1a744:	mov	r2, r5
   1a748:	stm	sp, {r5, sl}
   1a74c:	ldr	r3, [sp, #36]	; 0x24
   1a750:	ldr	r1, [sp, #52]	; 0x34
   1a754:	b	1a644 <__flatcc_gen_sort@@Base+0x220>
   1a758:	movw	r1, #38788	; 0x9784
   1a75c:	movt	r1, #4
   1a760:	movw	r3, #49320	; 0xc0a8
   1a764:	movt	r3, #6
   1a768:	movw	r2, #38704	; 0x9730
   1a76c:	movt	r2, #4
   1a770:	str	r1, [sp]
   1a774:	movw	r1, #4944	; 0x1350
   1a778:	movt	r1, #4
   1a77c:	ldr	r0, [r3]
   1a780:	movw	r3, #1358	; 0x54e
   1a784:	bl	1406c <fprintf@plt>
   1a788:	movw	r3, #38208	; 0x9540
   1a78c:	movt	r3, #4
   1a790:	movw	r1, #38704	; 0x9730
   1a794:	movt	r1, #4
   1a798:	movw	r0, #41608	; 0xa288
   1a79c:	movt	r0, #4
   1a7a0:	movw	r2, #1358	; 0x54e
   1a7a4:	bl	14120 <__assert_fail@plt>
   1a7a8:	strd	r4, [sp, #-16]!
   1a7ac:	subs	r4, r0, #0
   1a7b0:	moveq	r5, r4
   1a7b4:	str	r6, [sp, #8]
   1a7b8:	str	lr, [sp, #12]
   1a7bc:	beq	1a7ec <__flatcc_gen_sort@@Base+0x3c8>
   1a7c0:	mov	r5, #0
   1a7c4:	ldrh	r3, [r4, #72]	; 0x48
   1a7c8:	tst	r3, #4
   1a7cc:	bne	1a7e0 <__flatcc_gen_sort@@Base+0x3bc>
   1a7d0:	ldrh	r3, [r4, #24]
   1a7d4:	cmp	r3, #14
   1a7d8:	beq	1a800 <__flatcc_gen_sort@@Base+0x3dc>
   1a7dc:	add	r5, r5, #1
   1a7e0:	ldr	r4, [r4]
   1a7e4:	cmp	r4, #0
   1a7e8:	bne	1a7c4 <__flatcc_gen_sort@@Base+0x3a0>
   1a7ec:	mov	r0, r5
   1a7f0:	ldrd	r4, [sp]
   1a7f4:	ldr	r6, [sp, #8]
   1a7f8:	add	sp, sp, #12
   1a7fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a800:	ldr	r3, [r4, #16]
   1a804:	ldrh	r2, [r3, #8]
   1a808:	cmp	r2, #1
   1a80c:	bne	1a7dc <__flatcc_gen_sort@@Base+0x3b8>
   1a810:	ldr	r0, [r3, #20]
   1a814:	bl	1a7a8 <__flatcc_gen_sort@@Base+0x384>
   1a818:	add	r5, r5, r0
   1a81c:	b	1a7e0 <__flatcc_gen_sort@@Base+0x3bc>
   1a820:	movw	r3, #4956	; 0x135c
   1a824:	movt	r3, #4
   1a828:	push	{lr}		; (str lr, [sp, #-4]!)
   1a82c:	sub	sp, sp, #12
   1a830:	movw	r4, #4868	; 0x1304
   1a834:	movt	r4, #4
   1a838:	movw	r0, #49320	; 0xc0a8
   1a83c:	movt	r0, #6
   1a840:	mov	r2, r4
   1a844:	str	r3, [sp]
   1a848:	movw	r1, #4944	; 0x1350
   1a84c:	movt	r1, #4
   1a850:	ldr	r0, [r0]
   1a854:	mov	r3, #226	; 0xe2
   1a858:	bl	1406c <fprintf@plt>
   1a85c:	movw	r0, #41608	; 0xa288
   1a860:	movt	r0, #4
   1a864:	ldr	r3, [pc, #8]	; 1a874 <__flatcc_gen_sort@@Base+0x450>
   1a868:	mov	r1, r4
   1a86c:	mov	r2, #226	; 0xe2
   1a870:	bl	14120 <__assert_fail@plt>
   1a874:	andeq	r9, r4, r4, asr r5
   1a878:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a87c:	mov	r4, r1
   1a880:	mov	r5, r2
   1a884:	strd	r6, [sp, #8]
   1a888:	mov	r2, #220	; 0xdc
   1a88c:	mov	r1, #0
   1a890:	strd	r8, [sp, #16]
   1a894:	mov	r6, r0
   1a898:	mov	r7, r3
   1a89c:	strd	sl, [sp, #24]
   1a8a0:	str	lr, [sp, #32]
   1a8a4:	sub	sp, sp, #244	; 0xf4
   1a8a8:	add	r0, sp, #20
   1a8ac:	bl	14084 <memset@plt>
   1a8b0:	ldr	r4, [r4]
   1a8b4:	cmp	r4, #0
   1a8b8:	beq	1aa0c <__flatcc_gen_sort@@Base+0x5e8>
   1a8bc:	ldr	r1, [sp, #280]	; 0x118
   1a8c0:	movw	r3, #10080	; 0x2760
   1a8c4:	movt	r3, #4
   1a8c8:	movw	r2, #16040	; 0x3ea8
   1a8cc:	movt	r2, #4
   1a8d0:	movw	r9, #38208	; 0x9540
   1a8d4:	movt	r9, #4
   1a8d8:	movw	r8, #38976	; 0x9840
   1a8dc:	movt	r8, #4
   1a8e0:	movw	fp, #45408	; 0xb160
   1a8e4:	movt	fp, #4
   1a8e8:	cmp	r1, #0
   1a8ec:	moveq	r2, r3
   1a8f0:	str	r2, [sp, #12]
   1a8f4:	b	1a970 <__flatcc_gen_sort@@Base+0x54c>
   1a8f8:	cmp	r7, #0
   1a8fc:	beq	1a928 <__flatcc_gen_sort@@Base+0x504>
   1a900:	cmp	r5, #0
   1a904:	ldr	r3, [r6, #204]	; 0xcc
   1a908:	bne	1aa2c <__flatcc_gen_sort@@Base+0x608>
   1a90c:	cmp	r7, #4
   1a910:	ble	1aa40 <__flatcc_gen_sort@@Base+0x61c>
   1a914:	movw	r1, #38948	; 0x9824
   1a918:	movt	r1, #4
   1a91c:	ldr	r2, [sp, #12]
   1a920:	mov	r0, r3
   1a924:	bl	1406c <fprintf@plt>
   1a928:	ldr	r3, [r4, #16]
   1a92c:	cmp	r3, #5
   1a930:	sub	r3, r3, #1
   1a934:	beq	1aa64 <__flatcc_gen_sort@@Base+0x640>
   1a938:	cmp	r3, #10
   1a93c:	bhi	1ab0c <__flatcc_gen_sort@@Base+0x6e8>
   1a940:	mov	r2, fp
   1a944:	add	r3, r9, r3, lsl #2
   1a948:	add	r0, r5, #1
   1a94c:	mov	r1, r8
   1a950:	str	r5, [sp]
   1a954:	mov	r5, r0
   1a958:	ldr	r3, [r3, #32]
   1a95c:	ldr	r0, [r6, #204]	; 0xcc
   1a960:	bl	1406c <fprintf@plt>
   1a964:	ldr	r4, [r4]
   1a968:	cmp	r4, #0
   1a96c:	beq	1aa0c <__flatcc_gen_sort@@Base+0x5e8>
   1a970:	ldrh	r3, [r4, #72]	; 0x48
   1a974:	tst	r3, #4
   1a978:	bne	1a964 <__flatcc_gen_sort@@Base+0x540>
   1a97c:	ldrh	r3, [r4, #24]
   1a980:	cmp	r3, #8
   1a984:	beq	1a8f8 <__flatcc_gen_sort@@Base+0x4d4>
   1a988:	cmp	r3, #14
   1a98c:	bne	1aac0 <__flatcc_gen_sort@@Base+0x69c>
   1a990:	ldr	r1, [r4, #16]
   1a994:	ldrh	r3, [r1, #8]
   1a998:	cmp	r3, #1
   1a99c:	beq	1aa9c <__flatcc_gen_sort@@Base+0x678>
   1a9a0:	cmp	r7, #0
   1a9a4:	beq	1a9d4 <__flatcc_gen_sort@@Base+0x5b0>
   1a9a8:	cmp	r5, #0
   1a9ac:	ldr	r3, [r6, #204]	; 0xcc
   1a9b0:	bne	1aa6c <__flatcc_gen_sort@@Base+0x648>
   1a9b4:	cmp	r7, #4
   1a9b8:	ble	1aa80 <__flatcc_gen_sort@@Base+0x65c>
   1a9bc:	mov	r0, r3
   1a9c0:	movw	r1, #38948	; 0x9824
   1a9c4:	movt	r1, #4
   1a9c8:	ldr	r2, [sp, #12]
   1a9cc:	bl	1406c <fprintf@plt>
   1a9d0:	ldr	r1, [r4, #16]
   1a9d4:	add	r2, sp, #20
   1a9d8:	add	sl, r5, #1
   1a9dc:	ldr	r0, [r1, #12]
   1a9e0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1a9e4:	mov	r3, r5
   1a9e8:	movw	r1, #38960	; 0x9830
   1a9ec:	movt	r1, #4
   1a9f0:	add	r2, sp, #20
   1a9f4:	ldr	r0, [r6, #204]	; 0xcc
   1a9f8:	bl	1406c <fprintf@plt>
   1a9fc:	ldr	r4, [r4]
   1aa00:	mov	r5, sl
   1aa04:	cmp	r4, #0
   1aa08:	bne	1a970 <__flatcc_gen_sort@@Base+0x54c>
   1aa0c:	mov	r0, r5
   1aa10:	add	sp, sp, #244	; 0xf4
   1aa14:	ldrd	r4, [sp]
   1aa18:	ldrd	r6, [sp, #8]
   1aa1c:	ldrd	r8, [sp, #16]
   1aa20:	ldrd	sl, [sp, #24]
   1aa24:	add	sp, sp, #32
   1aa28:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa2c:	tst	r5, #3
   1aa30:	bne	1aa40 <__flatcc_gen_sort@@Base+0x61c>
   1aa34:	sub	r2, r7, r5
   1aa38:	cmp	r2, #2
   1aa3c:	bgt	1a914 <__flatcc_gen_sort@@Base+0x4f0>
   1aa40:	movw	r0, #38956	; 0x982c
   1aa44:	movt	r0, #4
   1aa48:	mov	r2, #2
   1aa4c:	mov	r1, #1
   1aa50:	bl	13ff4 <fwrite@plt>
   1aa54:	ldr	r3, [r4, #16]
   1aa58:	cmp	r3, #5
   1aa5c:	sub	r3, r3, #1
   1aa60:	bne	1a938 <__flatcc_gen_sort@@Base+0x514>
   1aa64:	mov	r2, r6
   1aa68:	b	1a944 <__flatcc_gen_sort@@Base+0x520>
   1aa6c:	tst	r5, #3
   1aa70:	bne	1aa80 <__flatcc_gen_sort@@Base+0x65c>
   1aa74:	sub	r2, r7, r5
   1aa78:	cmp	r2, #2
   1aa7c:	bgt	1a9bc <__flatcc_gen_sort@@Base+0x598>
   1aa80:	mov	r1, #1
   1aa84:	movw	r0, #38956	; 0x982c
   1aa88:	movt	r0, #4
   1aa8c:	mov	r2, #2
   1aa90:	bl	13ff4 <fwrite@plt>
   1aa94:	ldr	r1, [r4, #16]
   1aa98:	b	1a9d4 <__flatcc_gen_sort@@Base+0x5b0>
   1aa9c:	ldr	r3, [sp, #280]	; 0x118
   1aaa0:	mov	r2, r5
   1aaa4:	add	r1, r1, #20
   1aaa8:	mov	r0, r6
   1aaac:	str	r3, [sp]
   1aab0:	mov	r3, r7
   1aab4:	bl	1a878 <__flatcc_gen_sort@@Base+0x454>
   1aab8:	mov	r5, r0
   1aabc:	b	1a964 <__flatcc_gen_sort@@Base+0x540>
   1aac0:	movw	r1, #38988	; 0x984c
   1aac4:	movt	r1, #4
   1aac8:	movw	r3, #49320	; 0xc0a8
   1aacc:	movt	r3, #6
   1aad0:	movw	r2, #38704	; 0x9730
   1aad4:	movt	r2, #4
   1aad8:	str	r1, [sp]
   1aadc:	movw	r1, #4944	; 0x1350
   1aae0:	movt	r1, #4
   1aae4:	ldr	r0, [r3]
   1aae8:	movw	r3, #850	; 0x352
   1aaec:	bl	1406c <fprintf@plt>
   1aaf0:	movw	r1, #38704	; 0x9730
   1aaf4:	movt	r1, #4
   1aaf8:	ldr	r3, [pc, #88]	; 1ab58 <__flatcc_gen_sort@@Base+0x734>
   1aafc:	movw	r0, #41608	; 0xa288
   1ab00:	movt	r0, #4
   1ab04:	movw	r2, #850	; 0x352
   1ab08:	bl	14120 <__assert_fail@plt>
   1ab0c:	movw	r1, #4956	; 0x135c
   1ab10:	movt	r1, #4
   1ab14:	movw	r3, #49320	; 0xc0a8
   1ab18:	movt	r3, #6
   1ab1c:	movw	r2, #4868	; 0x1304
   1ab20:	movt	r2, #4
   1ab24:	str	r1, [sp]
   1ab28:	movw	r1, #4944	; 0x1350
   1ab2c:	movt	r1, #4
   1ab30:	ldr	r0, [r3]
   1ab34:	mov	r3, #141	; 0x8d
   1ab38:	bl	1406c <fprintf@plt>
   1ab3c:	movw	r1, #4868	; 0x1304
   1ab40:	movt	r1, #4
   1ab44:	ldr	r3, [pc, #16]	; 1ab5c <__flatcc_gen_sort@@Base+0x738>
   1ab48:	movw	r0, #41608	; 0xa288
   1ab4c:	movt	r0, #4
   1ab50:	mov	r2, #141	; 0x8d
   1ab54:	bl	14120 <__assert_fail@plt>
   1ab58:	andeq	r9, r4, r0, lsr #11
   1ab5c:	andeq	r9, r4, ip, lsl #11
   1ab60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ab64:	mov	r2, #220	; 0xdc
   1ab68:	mov	r4, r1
   1ab6c:	strd	r6, [sp, #8]
   1ab70:	mov	r1, #0
   1ab74:	mov	r5, r0
   1ab78:	strd	r8, [sp, #16]
   1ab7c:	strd	sl, [sp, #24]
   1ab80:	str	lr, [sp, #32]
   1ab84:	sub	sp, sp, #636	; 0x27c
   1ab88:	add	fp, sp, #192	; 0xc0
   1ab8c:	add	sl, sp, #412	; 0x19c
   1ab90:	mov	r0, fp
   1ab94:	bl	14084 <memset@plt>
   1ab98:	mov	r2, #220	; 0xdc
   1ab9c:	mov	r1, #0
   1aba0:	mov	r0, sl
   1aba4:	bl	14084 <memset@plt>
   1aba8:	mov	r1, r4
   1abac:	mov	r2, fp
   1abb0:	ldr	r0, [r4, #12]
   1abb4:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1abb8:	ldr	r4, [r4, #20]
   1abbc:	cmp	r4, #0
   1abc0:	beq	1acdc <__flatcc_gen_sort@@Base+0x8b8>
   1abc4:	movw	r3, #39964	; 0x9c1c
   1abc8:	movt	r3, #4
   1abcc:	str	r3, [sp, #76]	; 0x4c
   1abd0:	movw	r3, #39904	; 0x9be0
   1abd4:	movt	r3, #4
   1abd8:	str	r3, [sp, #80]	; 0x50
   1abdc:	movw	r3, #39848	; 0x9ba8
   1abe0:	movt	r3, #4
   1abe4:	str	r3, [sp, #84]	; 0x54
   1abe8:	ldrh	r2, [r4, #72]	; 0x48
   1abec:	ldr	r3, [r4, #4]
   1abf0:	tst	r2, #4
   1abf4:	ldrd	r6, [r3]
   1abf8:	bne	1b18c <__flatcc_gen_sort@@Base+0xd68>
   1abfc:	ldrh	r3, [r4, #24]
   1ac00:	sub	r3, r3, #7
   1ac04:	cmp	r3, #8
   1ac08:	ldrls	pc, [pc, r3, lsl #2]
   1ac0c:	b	1b498 <__flatcc_gen_sort@@Base+0x1074>
   1ac10:	andeq	sl, r1, r8, ror sp
   1ac14:	andeq	sl, r1, r8, lsl sp
   1ac18:	andeq	sl, r1, r8, lsl #26
   1ac1c:	andeq	sl, r1, r4, lsr #25
   1ac20:	muleq	r1, r8, r4
   1ac24:	muleq	r1, r8, r4
   1ac28:	muleq	r1, r8, r4
   1ac2c:	andeq	sl, r1, ip, ror #24
   1ac30:	andeq	sl, r1, r4, lsr ip
   1ac34:	ldr	r1, [r4, #16]
   1ac38:	mov	r2, sl
   1ac3c:	ldr	r0, [r1, #12]
   1ac40:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1ac44:	ldr	r2, [r4, #16]
   1ac48:	ldrh	r3, [r2, #8]
   1ac4c:	cmp	r3, #4
   1ac50:	ldrls	pc, [pc, r3, lsl #2]
   1ac54:	b	1b57c <__flatcc_gen_sort@@Base+0x1158>
   1ac58:	andeq	sl, r1, r8, ror #31
   1ac5c:	andeq	sl, r1, r4, lsr #31
   1ac60:	andeq	fp, r1, ip, ror r5
   1ac64:	muleq	r1, r8, lr
   1ac68:	andeq	sl, r1, r4, asr #28
   1ac6c:	ldr	r1, [r4, #16]
   1ac70:	mov	r2, sl
   1ac74:	ldr	r0, [r1, #12]
   1ac78:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1ac7c:	ldr	r2, [r4, #16]
   1ac80:	ldrh	r3, [r2, #8]
   1ac84:	cmp	r3, #4
   1ac88:	ldrls	pc, [pc, r3, lsl #2]
   1ac8c:	b	1b530 <__flatcc_gen_sort@@Base+0x110c>
   1ac90:	andeq	sl, r1, r0, ror pc
   1ac94:	andeq	sl, r1, ip, lsr #30
   1ac98:	andeq	fp, r1, r0, lsr r5
   1ac9c:	andeq	sl, r1, r4, lsl #30
   1aca0:	andeq	sl, r1, ip, asr #29
   1aca4:	movw	r1, #39432	; 0x9a08
   1aca8:	movt	r1, #4
   1acac:	str	r5, [sp, #8]
   1acb0:	str	fp, [sp, #12]
   1acb4:	mov	r2, r5
   1acb8:	str	r7, [sp, #16]
   1acbc:	str	r6, [sp, #20]
   1acc0:	ldrd	r6, [r4, #96]	; 0x60
   1acc4:	ldr	r0, [r5, #204]	; 0xcc
   1acc8:	strd	r6, [sp]
   1accc:	bl	1406c <fprintf@plt>
   1acd0:	ldr	r4, [r4]
   1acd4:	cmp	r4, #0
   1acd8:	bne	1abe8 <__flatcc_gen_sort@@Base+0x7c4>
   1acdc:	ldr	r1, [r5, #204]	; 0xcc
   1ace0:	mov	r0, #10
   1ace4:	bl	140cc <fputc@plt>
   1ace8:	mov	r0, #0
   1acec:	add	sp, sp, #636	; 0x27c
   1acf0:	ldrd	r4, [sp]
   1acf4:	ldrd	r6, [sp, #8]
   1acf8:	ldrd	r8, [sp, #16]
   1acfc:	ldrd	sl, [sp, #24]
   1ad00:	add	sp, sp, #32
   1ad04:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad08:	movw	r1, #39476	; 0x9a34
   1ad0c:	movt	r1, #4
   1ad10:	str	r5, [sp, #8]
   1ad14:	b	1acb0 <__flatcc_gen_sort@@Base+0x88c>
   1ad18:	ldr	r1, [r4, #16]
   1ad1c:	cmp	r1, #5
   1ad20:	beq	1b20c <__flatcc_gen_sort@@Base+0xde8>
   1ad24:	sub	r0, r1, #1
   1ad28:	cmp	r0, #10
   1ad2c:	bhi	1b4e4 <__flatcc_gen_sort@@Base+0x10c0>
   1ad30:	lsl	r3, r0, #2
   1ad34:	movw	ip, #38208	; 0x9540
   1ad38:	movt	ip, #4
   1ad3c:	ldrh	r2, [r4, #56]	; 0x38
   1ad40:	str	ip, [sp, #60]	; 0x3c
   1ad44:	add	ip, ip, r3
   1ad48:	ldr	lr, [ip, #32]
   1ad4c:	ldr	ip, [ip, #120]	; 0x78
   1ad50:	sub	r2, r2, #3
   1ad54:	str	lr, [sp, #64]	; 0x40
   1ad58:	str	ip, [sp, #68]	; 0x44
   1ad5c:	cmp	r2, #3
   1ad60:	ldrls	pc, [pc, r2, lsl #2]
   1ad64:	b	1b61c <__flatcc_gen_sort@@Base+0x11f8>
   1ad68:	andeq	fp, r1, ip, asr #2
   1ad6c:	andeq	fp, r1, r8, lsl #2
   1ad70:	andeq	fp, r1, r4, asr #1
   1ad74:	andeq	fp, r1, r4, lsr #32
   1ad78:	ldr	r3, [r4, #16]
   1ad7c:	cmp	r3, #5
   1ad80:	beq	1b200 <__flatcc_gen_sort@@Base+0xddc>
   1ad84:	sub	r3, r3, #1
   1ad88:	cmp	r3, #10
   1ad8c:	bhi	1b4e4 <__flatcc_gen_sort@@Base+0x10c0>
   1ad90:	movw	r0, #45408	; 0xb160
   1ad94:	movt	r0, #4
   1ad98:	movw	r2, #38208	; 0x9540
   1ad9c:	movt	r2, #4
   1ada0:	str	r5, [sp, #8]
   1ada4:	add	r3, r2, r3, lsl #2
   1ada8:	str	fp, [sp, #12]
   1adac:	movw	r1, #39164	; 0x98fc
   1adb0:	movt	r1, #4
   1adb4:	str	r7, [sp, #16]
   1adb8:	ldr	ip, [r3, #32]
   1adbc:	str	r6, [sp, #20]
   1adc0:	ldr	r3, [r3, #120]	; 0x78
   1adc4:	str	r5, [sp, #24]
   1adc8:	str	r2, [sp, #60]	; 0x3c
   1adcc:	mov	r2, r5
   1add0:	str	r3, [sp, #28]
   1add4:	str	r0, [sp, #32]
   1add8:	str	ip, [sp, #36]	; 0x24
   1addc:	ldrd	r8, [r4, #96]	; 0x60
   1ade0:	ldr	r0, [r5, #204]	; 0xcc
   1ade4:	strd	r8, [sp]
   1ade8:	bl	1406c <fprintf@plt>
   1adec:	ldr	r1, [r4, #104]	; 0x68
   1adf0:	cmp	r1, #0
   1adf4:	beq	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1adf8:	ldrh	r3, [r1, #8]
   1adfc:	cmp	r3, #0
   1ae00:	bne	1b1ac <__flatcc_gen_sort@@Base+0xd88>
   1ae04:	mov	r2, sl
   1ae08:	ldr	r0, [r1, #12]
   1ae0c:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1ae10:	movw	r1, #39220	; 0x9934
   1ae14:	movt	r1, #4
   1ae18:	str	fp, [sp]
   1ae1c:	mov	r3, r5
   1ae20:	mov	r2, r5
   1ae24:	str	r7, [sp, #4]
   1ae28:	str	r6, [sp, #8]
   1ae2c:	str	sl, [sp, #12]
   1ae30:	str	sl, [sp, #16]
   1ae34:	str	sl, [sp, #20]
   1ae38:	ldr	r0, [r5, #204]	; 0xcc
   1ae3c:	bl	1406c <fprintf@plt>
   1ae40:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1ae44:	str	r5, [sp, #8]
   1ae48:	mov	r2, r5
   1ae4c:	str	fp, [sp, #12]
   1ae50:	str	r7, [sp, #16]
   1ae54:	str	r6, [sp, #20]
   1ae58:	str	sl, [sp, #24]
   1ae5c:	ldrd	r8, [r4, #96]	; 0x60
   1ae60:	ldr	r1, [sp, #76]	; 0x4c
   1ae64:	ldr	r0, [r5, #204]	; 0xcc
   1ae68:	strd	r8, [sp]
   1ae6c:	bl	1406c <fprintf@plt>
   1ae70:	mov	r0, #1
   1ae74:	str	r0, [sp, #4]
   1ae78:	mov	r3, r6
   1ae7c:	mov	r2, r7
   1ae80:	ldr	ip, [r4, #16]
   1ae84:	mov	r1, fp
   1ae88:	mov	r0, r5
   1ae8c:	str	ip, [sp]
   1ae90:	bl	1a55c <__flatcc_gen_sort@@Base+0x138>
   1ae94:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1ae98:	str	r5, [sp, #8]
   1ae9c:	mov	r2, r5
   1aea0:	str	fp, [sp, #12]
   1aea4:	str	r7, [sp, #16]
   1aea8:	str	r6, [sp, #20]
   1aeac:	str	sl, [sp, #24]
   1aeb0:	str	sl, [sp, #28]
   1aeb4:	ldrd	r6, [r4, #96]	; 0x60
   1aeb8:	ldr	r1, [sp, #80]	; 0x50
   1aebc:	ldr	r0, [r5, #204]	; 0xcc
   1aec0:	strd	r6, [sp]
   1aec4:	bl	1406c <fprintf@plt>
   1aec8:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1aecc:	str	r5, [sp, #8]
   1aed0:	movw	r1, #39708	; 0x9b1c
   1aed4:	movt	r1, #4
   1aed8:	str	fp, [sp, #12]
   1aedc:	mov	r2, r5
   1aee0:	str	r7, [sp, #16]
   1aee4:	str	r6, [sp, #20]
   1aee8:	str	sl, [sp, #24]
   1aeec:	ldrd	r8, [r4, #96]	; 0x60
   1aef0:	ldr	r0, [r5, #204]	; 0xcc
   1aef4:	strd	r8, [sp]
   1aef8:	bl	1406c <fprintf@plt>
   1aefc:	mov	r0, #0
   1af00:	b	1ae74 <__flatcc_gen_sort@@Base+0xa50>
   1af04:	ldrh	r1, [r4, #56]	; 0x38
   1af08:	ldr	r3, [r2, #40]	; 0x28
   1af0c:	sub	r2, r1, #3
   1af10:	cmp	r2, #3
   1af14:	ldrls	pc, [pc, r2, lsl #2]
   1af18:	b	1b61c <__flatcc_gen_sort@@Base+0x11f8>
   1af1c:	andeq	fp, r1, r4, asr #8
   1af20:	andeq	fp, r1, r8, lsl r4
   1af24:	ldrdeq	fp, [r1], -r8
   1af28:	andeq	fp, r1, ip, asr #6
   1af2c:	ldrh	r3, [r4, #74]	; 0x4a
   1af30:	movw	r1, #39528	; 0x9a68
   1af34:	movt	r1, #4
   1af38:	mov	r2, r5
   1af3c:	ldr	r0, [r5, #204]	; 0xcc
   1af40:	str	r3, [sp, #40]	; 0x28
   1af44:	ldrd	r8, [r4, #88]	; 0x58
   1af48:	str	r5, [sp, #8]
   1af4c:	str	fp, [sp, #12]
   1af50:	str	r7, [sp, #16]
   1af54:	str	r6, [sp, #20]
   1af58:	str	sl, [sp, #24]
   1af5c:	strd	r8, [sp, #32]
   1af60:	ldrd	r6, [r4, #96]	; 0x60
   1af64:	strd	r6, [sp]
   1af68:	bl	1406c <fprintf@plt>
   1af6c:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1af70:	str	r5, [sp, #8]
   1af74:	movw	r1, #39588	; 0x9aa4
   1af78:	movt	r1, #4
   1af7c:	str	fp, [sp, #12]
   1af80:	mov	r2, r5
   1af84:	str	r7, [sp, #16]
   1af88:	str	r6, [sp, #20]
   1af8c:	str	sl, [sp, #24]
   1af90:	ldrd	r6, [r4, #96]	; 0x60
   1af94:	ldr	r0, [r5, #204]	; 0xcc
   1af98:	strd	r6, [sp]
   1af9c:	bl	1406c <fprintf@plt>
   1afa0:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1afa4:	ldrh	r3, [r2, #10]
   1afa8:	ldr	r0, [r5, #204]	; 0xcc
   1afac:	tst	r3, #8
   1afb0:	bne	1b31c <__flatcc_gen_sort@@Base+0xef8>
   1afb4:	str	r5, [sp, #8]
   1afb8:	movw	r1, #39792	; 0x9b70
   1afbc:	movt	r1, #4
   1afc0:	str	fp, [sp, #12]
   1afc4:	mov	r2, r5
   1afc8:	str	r7, [sp, #16]
   1afcc:	str	r6, [sp, #20]
   1afd0:	str	sl, [sp, #24]
   1afd4:	str	sl, [sp, #28]
   1afd8:	ldrd	r6, [r4, #96]	; 0x60
   1afdc:	strd	r6, [sp]
   1afe0:	bl	1406c <fprintf@plt>
   1afe4:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1afe8:	ldrh	r3, [r2, #10]
   1afec:	ldr	r0, [r5, #204]	; 0xcc
   1aff0:	tst	r3, #8
   1aff4:	bne	1b2fc <__flatcc_gen_sort@@Base+0xed8>
   1aff8:	str	r5, [sp, #8]
   1affc:	mov	r2, r5
   1b000:	str	fp, [sp, #12]
   1b004:	str	r7, [sp, #16]
   1b008:	str	r6, [sp, #20]
   1b00c:	str	sl, [sp, #24]
   1b010:	ldrd	r6, [r4, #96]	; 0x60
   1b014:	ldr	r1, [sp, #84]	; 0x54
   1b018:	strd	r6, [sp]
   1b01c:	bl	1406c <fprintf@plt>
   1b020:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1b024:	movw	r2, #45408	; 0xb160
   1b028:	movt	r2, #4
   1b02c:	cmp	r0, #8
   1b030:	str	r2, [sp, #72]	; 0x48
   1b034:	bhi	1b618 <__flatcc_gen_sort@@Base+0x11f4>
   1b038:	ldr	r2, [sp, #60]	; 0x3c
   1b03c:	movw	r1, #5264	; 0x1490
   1b040:	movt	r1, #4
   1b044:	add	r2, r2, r3
   1b048:	add	r3, sp, #92	; 0x5c
   1b04c:	mov	r0, r3
   1b050:	ldrb	r3, [r4, #48]	; 0x30
   1b054:	ldr	r2, [r2, #164]	; 0xa4
   1b058:	str	r0, [sp, #60]	; 0x3c
   1b05c:	bl	140d8 <sprintf@plt>
   1b060:	ldr	r3, [sp, #60]	; 0x3c
   1b064:	movw	r1, #39092	; 0x98b4
   1b068:	movt	r1, #4
   1b06c:	mov	r2, r5
   1b070:	str	r3, [sp, #52]	; 0x34
   1b074:	ldrh	r3, [r4, #74]	; 0x4a
   1b078:	ldr	r0, [r5, #204]	; 0xcc
   1b07c:	str	r3, [sp, #48]	; 0x30
   1b080:	ldr	r3, [sp, #68]	; 0x44
   1b084:	ldrd	r8, [r4, #88]	; 0x58
   1b088:	str	r5, [sp, #8]
   1b08c:	str	fp, [sp, #12]
   1b090:	str	r7, [sp, #16]
   1b094:	str	r3, [sp, #28]
   1b098:	ldr	r3, [sp, #72]	; 0x48
   1b09c:	str	r6, [sp, #20]
   1b0a0:	str	r5, [sp, #24]
   1b0a4:	str	r3, [sp, #32]
   1b0a8:	ldr	r3, [sp, #64]	; 0x40
   1b0ac:	strd	r8, [sp, #40]	; 0x28
   1b0b0:	str	r3, [sp, #36]	; 0x24
   1b0b4:	ldrd	r6, [r4, #96]	; 0x60
   1b0b8:	strd	r6, [sp]
   1b0bc:	bl	1406c <fprintf@plt>
   1b0c0:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1b0c4:	cmp	r0, #8
   1b0c8:	bhi	1b618 <__flatcc_gen_sort@@Base+0x11f4>
   1b0cc:	movw	r2, #45408	; 0xb160
   1b0d0:	movt	r2, #4
   1b0d4:	str	r2, [sp, #72]	; 0x48
   1b0d8:	ldr	r2, [sp, #60]	; 0x3c
   1b0dc:	movw	r1, #5240	; 0x1478
   1b0e0:	movt	r1, #4
   1b0e4:	ldrd	r8, [r4, #48]	; 0x30
   1b0e8:	add	r3, r2, r3
   1b0ec:	add	r2, sp, #92	; 0x5c
   1b0f0:	mov	r0, r2
   1b0f4:	strd	r8, [sp]
   1b0f8:	str	r2, [sp, #60]	; 0x3c
   1b0fc:	ldr	r2, [r3, #164]	; 0xa4
   1b100:	bl	140d8 <sprintf@plt>
   1b104:	b	1b060 <__flatcc_gen_sort@@Base+0xc3c>
   1b108:	movw	r2, #45408	; 0xb160
   1b10c:	movt	r2, #4
   1b110:	cmp	r0, #8
   1b114:	str	r2, [sp, #72]	; 0x48
   1b118:	bhi	1b618 <__flatcc_gen_sort@@Base+0x11f4>
   1b11c:	ldr	r2, [sp, #60]	; 0x3c
   1b120:	movw	r1, #5252	; 0x1484
   1b124:	movt	r1, #4
   1b128:	ldrd	r8, [r4, #48]	; 0x30
   1b12c:	add	r3, r2, r3
   1b130:	add	r2, sp, #92	; 0x5c
   1b134:	mov	r0, r2
   1b138:	strd	r8, [sp]
   1b13c:	str	r2, [sp, #60]	; 0x3c
   1b140:	ldr	r2, [r3, #164]	; 0xa4
   1b144:	bl	140d8 <sprintf@plt>
   1b148:	b	1b060 <__flatcc_gen_sort@@Base+0xc3c>
   1b14c:	cmp	r1, #11
   1b150:	bne	1b33c <__flatcc_gen_sort@@Base+0xf18>
   1b154:	vldr	d7, [r4, #48]	; 0x30
   1b158:	add	r3, sp, #92	; 0x5c
   1b15c:	movw	r1, #5272	; 0x1498
   1b160:	movt	r1, #4
   1b164:	mov	r0, r3
   1b168:	str	r3, [sp, #60]	; 0x3c
   1b16c:	movw	r3, #45408	; 0xb160
   1b170:	movt	r3, #4
   1b174:	str	r3, [sp, #72]	; 0x48
   1b178:	vcvt.f32.f64	s14, d7
   1b17c:	vcvt.f64.f32	d7, s14
   1b180:	vmov	r2, r3, d7
   1b184:	bl	140d8 <sprintf@plt>
   1b188:	b	1b060 <__flatcc_gen_sort@@Base+0xc3c>
   1b18c:	mov	r3, r7
   1b190:	movw	r1, #39036	; 0x987c
   1b194:	movt	r1, #4
   1b198:	mov	r2, fp
   1b19c:	str	r6, [sp]
   1b1a0:	ldr	r0, [r5, #204]	; 0xcc
   1b1a4:	bl	1406c <fprintf@plt>
   1b1a8:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1b1ac:	cmp	r3, #1
   1b1b0:	bne	1b5c8 <__flatcc_gen_sort@@Base+0x11a4>
   1b1b4:	mov	r2, sl
   1b1b8:	ldr	r0, [r1, #12]
   1b1bc:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1b1c0:	str	sl, [sp, #20]
   1b1c4:	movw	r1, #39304	; 0x9988
   1b1c8:	movt	r1, #4
   1b1cc:	str	sl, [sp, #24]
   1b1d0:	mov	r3, r5
   1b1d4:	mov	r2, r5
   1b1d8:	ldr	ip, [r4, #104]	; 0x68
   1b1dc:	ldr	r0, [r5, #204]	; 0xcc
   1b1e0:	ldrh	ip, [ip, #104]	; 0x68
   1b1e4:	str	fp, [sp]
   1b1e8:	str	r7, [sp, #4]
   1b1ec:	str	r6, [sp, #8]
   1b1f0:	str	sl, [sp, #12]
   1b1f4:	str	ip, [sp, #16]
   1b1f8:	bl	1406c <fprintf@plt>
   1b1fc:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1b200:	mov	r0, r5
   1b204:	mov	r3, #4
   1b208:	b	1ad98 <__flatcc_gen_sort@@Base+0x974>
   1b20c:	ldrh	r3, [r4, #56]	; 0x38
   1b210:	sub	r3, r3, #3
   1b214:	cmp	r3, #3
   1b218:	ldrls	pc, [pc, r3, lsl #2]
   1b21c:	b	1b61c <__flatcc_gen_sort@@Base+0x11f8>
   1b220:	andeq	fp, r1, r0, asr #5
   1b224:	muleq	r1, r0, r2
   1b228:	andeq	fp, r1, r0, ror #4
   1b22c:	andeq	fp, r1, r0, lsr r2
   1b230:	movw	r3, #7876	; 0x1ec4
   1b234:	movt	r3, #4
   1b238:	str	r3, [sp, #64]	; 0x40
   1b23c:	movw	r3, #37168	; 0x9130
   1b240:	movt	r3, #5
   1b244:	str	r5, [sp, #72]	; 0x48
   1b248:	str	r3, [sp, #68]	; 0x44
   1b24c:	movw	r3, #38208	; 0x9540
   1b250:	movt	r3, #4
   1b254:	str	r3, [sp, #60]	; 0x3c
   1b258:	mov	r3, #16
   1b25c:	b	1b038 <__flatcc_gen_sort@@Base+0xc14>
   1b260:	movw	r3, #37168	; 0x9130
   1b264:	movt	r3, #5
   1b268:	str	r3, [sp, #68]	; 0x44
   1b26c:	movw	r3, #7876	; 0x1ec4
   1b270:	movt	r3, #4
   1b274:	str	r5, [sp, #72]	; 0x48
   1b278:	str	r3, [sp, #64]	; 0x40
   1b27c:	movw	r3, #38208	; 0x9540
   1b280:	movt	r3, #4
   1b284:	str	r3, [sp, #60]	; 0x3c
   1b288:	mov	r3, #16
   1b28c:	b	1b0d8 <__flatcc_gen_sort@@Base+0xcb4>
   1b290:	movw	r3, #7876	; 0x1ec4
   1b294:	movt	r3, #4
   1b298:	str	r3, [sp, #64]	; 0x40
   1b29c:	movw	r3, #37168	; 0x9130
   1b2a0:	movt	r3, #5
   1b2a4:	str	r5, [sp, #72]	; 0x48
   1b2a8:	str	r3, [sp, #68]	; 0x44
   1b2ac:	movw	r3, #38208	; 0x9540
   1b2b0:	movt	r3, #4
   1b2b4:	str	r3, [sp, #60]	; 0x3c
   1b2b8:	mov	r3, #16
   1b2bc:	b	1b11c <__flatcc_gen_sort@@Base+0xcf8>
   1b2c0:	movw	r3, #7876	; 0x1ec4
   1b2c4:	movt	r3, #4
   1b2c8:	str	r3, [sp, #64]	; 0x40
   1b2cc:	movw	r3, #37168	; 0x9130
   1b2d0:	movt	r3, #5
   1b2d4:	str	r5, [sp, #72]	; 0x48
   1b2d8:	str	r3, [sp, #68]	; 0x44
   1b2dc:	add	r3, sp, #92	; 0x5c
   1b2e0:	movw	r1, #5276	; 0x149c
   1b2e4:	movt	r1, #4
   1b2e8:	mov	r0, r3
   1b2ec:	str	r3, [sp, #60]	; 0x3c
   1b2f0:	ldrd	r2, [r4, #48]	; 0x30
   1b2f4:	bl	140d8 <sprintf@plt>
   1b2f8:	b	1b060 <__flatcc_gen_sort@@Base+0xc3c>
   1b2fc:	mov	r3, r0
   1b300:	mov	r2, #32
   1b304:	movw	r0, #39756	; 0x9b4c
   1b308:	movt	r0, #4
   1b30c:	mov	r1, #1
   1b310:	bl	13ff4 <fwrite@plt>
   1b314:	ldr	r0, [r5, #204]	; 0xcc
   1b318:	b	1aff8 <__flatcc_gen_sort@@Base+0xbd4>
   1b31c:	mov	r3, r0
   1b320:	mov	r2, #32
   1b324:	movw	r0, #39756	; 0x9b4c
   1b328:	movt	r0, #4
   1b32c:	mov	r1, #1
   1b330:	bl	13ff4 <fwrite@plt>
   1b334:	ldr	r0, [r5, #204]	; 0xcc
   1b338:	b	1afb4 <__flatcc_gen_sort@@Base+0xb90>
   1b33c:	movw	r3, #45408	; 0xb160
   1b340:	movt	r3, #4
   1b344:	str	r3, [sp, #72]	; 0x48
   1b348:	b	1b2dc <__flatcc_gen_sort@@Base+0xeb8>
   1b34c:	sub	r2, r3, #1
   1b350:	cmp	r2, #8
   1b354:	bhi	1b618 <__flatcc_gen_sort@@Base+0x11f4>
   1b358:	movw	r3, #38208	; 0x9540
   1b35c:	movt	r3, #4
   1b360:	mov	r1, r3
   1b364:	ldrb	r3, [r4, #48]	; 0x30
   1b368:	add	r2, r1, r2, lsl #2
   1b36c:	add	r1, sp, #92	; 0x5c
   1b370:	mov	r0, r1
   1b374:	movw	r1, #5264	; 0x1490
   1b378:	movt	r1, #4
   1b37c:	ldr	r2, [r2, #164]	; 0xa4
   1b380:	str	r0, [sp, #60]	; 0x3c
   1b384:	bl	140d8 <sprintf@plt>
   1b388:	ldr	r3, [sp, #60]	; 0x3c
   1b38c:	movw	r1, #39636	; 0x9ad4
   1b390:	movt	r1, #4
   1b394:	mov	r2, r5
   1b398:	str	r3, [sp, #44]	; 0x2c
   1b39c:	ldrh	r3, [r4, #74]	; 0x4a
   1b3a0:	ldr	r0, [r5, #204]	; 0xcc
   1b3a4:	str	r3, [sp, #40]	; 0x28
   1b3a8:	ldrd	r8, [r4, #88]	; 0x58
   1b3ac:	str	r5, [sp, #8]
   1b3b0:	str	fp, [sp, #12]
   1b3b4:	str	r7, [sp, #16]
   1b3b8:	str	r6, [sp, #20]
   1b3bc:	str	sl, [sp, #24]
   1b3c0:	str	sl, [sp, #28]
   1b3c4:	strd	r8, [sp, #32]
   1b3c8:	ldrd	r6, [r4, #96]	; 0x60
   1b3cc:	strd	r6, [sp]
   1b3d0:	bl	1406c <fprintf@plt>
   1b3d4:	b	1acd0 <__flatcc_gen_sort@@Base+0x8ac>
   1b3d8:	sub	r3, r3, #1
   1b3dc:	cmp	r3, #8
   1b3e0:	bhi	1b618 <__flatcc_gen_sort@@Base+0x11f4>
   1b3e4:	movw	r2, #38208	; 0x9540
   1b3e8:	movt	r2, #4
   1b3ec:	add	r3, r2, r3, lsl #2
   1b3f0:	movw	r1, #5240	; 0x1478
   1b3f4:	movt	r1, #4
   1b3f8:	add	r2, sp, #92	; 0x5c
   1b3fc:	str	r2, [sp, #60]	; 0x3c
   1b400:	ldrd	r8, [r4, #48]	; 0x30
   1b404:	mov	r0, r2
   1b408:	ldr	r2, [r3, #164]	; 0xa4
   1b40c:	strd	r8, [sp]
   1b410:	bl	140d8 <sprintf@plt>
   1b414:	b	1b388 <__flatcc_gen_sort@@Base+0xf64>
   1b418:	sub	r3, r3, #1
   1b41c:	cmp	r3, #8
   1b420:	bhi	1b618 <__flatcc_gen_sort@@Base+0x11f4>
   1b424:	movw	r2, #38208	; 0x9540
   1b428:	movt	r2, #4
   1b42c:	add	r3, r2, r3, lsl #2
   1b430:	add	r2, sp, #92	; 0x5c
   1b434:	movw	r1, #5252	; 0x1484
   1b438:	movt	r1, #4
   1b43c:	str	r2, [sp, #60]	; 0x3c
   1b440:	b	1b400 <__flatcc_gen_sort@@Base+0xfdc>
   1b444:	cmp	r3, #11
   1b448:	beq	1b46c <__flatcc_gen_sort@@Base+0x1048>
   1b44c:	add	r3, sp, #92	; 0x5c
   1b450:	movw	r1, #5276	; 0x149c
   1b454:	movt	r1, #4
   1b458:	mov	r0, r3
   1b45c:	str	r3, [sp, #60]	; 0x3c
   1b460:	ldrd	r2, [r4, #48]	; 0x30
   1b464:	bl	140d8 <sprintf@plt>
   1b468:	b	1b388 <__flatcc_gen_sort@@Base+0xf64>
   1b46c:	vldr	d7, [r4, #48]	; 0x30
   1b470:	add	r3, sp, #92	; 0x5c
   1b474:	movw	r1, #5272	; 0x1498
   1b478:	movt	r1, #4
   1b47c:	mov	r0, r3
   1b480:	str	r3, [sp, #60]	; 0x3c
   1b484:	vcvt.f32.f64	s14, d7
   1b488:	vcvt.f64.f32	d7, s14
   1b48c:	vmov	r2, r3, d7
   1b490:	bl	140d8 <sprintf@plt>
   1b494:	b	1b388 <__flatcc_gen_sort@@Base+0xf64>
   1b498:	movw	r1, #9424	; 0x24d0
   1b49c:	movt	r1, #4
   1b4a0:	movw	r3, #49320	; 0xc0a8
   1b4a4:	movt	r3, #6
   1b4a8:	movw	r2, #38704	; 0x9730
   1b4ac:	movt	r2, #4
   1b4b0:	str	r1, [sp]
   1b4b4:	movw	r1, #4944	; 0x1350
   1b4b8:	movt	r1, #4
   1b4bc:	ldr	r0, [r3]
   1b4c0:	movw	r3, #1512	; 0x5e8
   1b4c4:	bl	1406c <fprintf@plt>
   1b4c8:	movw	r1, #38704	; 0x9730
   1b4cc:	movt	r1, #4
   1b4d0:	ldr	r3, [pc, #400]	; 1b668 <__flatcc_gen_sort@@Base+0x1244>
   1b4d4:	movw	r0, #41608	; 0xa288
   1b4d8:	movt	r0, #4
   1b4dc:	movw	r2, #1512	; 0x5e8
   1b4e0:	bl	14120 <__assert_fail@plt>
   1b4e4:	movw	r1, #4956	; 0x135c
   1b4e8:	movt	r1, #4
   1b4ec:	movw	r3, #49320	; 0xc0a8
   1b4f0:	movt	r3, #6
   1b4f4:	movw	r2, #4868	; 0x1304
   1b4f8:	movt	r2, #4
   1b4fc:	str	r1, [sp]
   1b500:	movw	r1, #4944	; 0x1350
   1b504:	movt	r1, #4
   1b508:	ldr	r0, [r3]
   1b50c:	mov	r3, #141	; 0x8d
   1b510:	bl	1406c <fprintf@plt>
   1b514:	movw	r1, #4868	; 0x1304
   1b518:	movt	r1, #4
   1b51c:	ldr	r3, [pc, #328]	; 1b66c <__flatcc_gen_sort@@Base+0x1248>
   1b520:	movw	r0, #41608	; 0xa288
   1b524:	movt	r0, #4
   1b528:	mov	r2, #141	; 0x8d
   1b52c:	bl	14120 <__assert_fail@plt>
   1b530:	movw	r1, #9152	; 0x23c0
   1b534:	movt	r1, #4
   1b538:	movw	r3, #49320	; 0xc0a8
   1b53c:	movt	r3, #6
   1b540:	movw	r2, #38704	; 0x9730
   1b544:	movt	r2, #4
   1b548:	str	r1, [sp]
   1b54c:	movw	r1, #4944	; 0x1350
   1b550:	movt	r1, #4
   1b554:	ldr	r0, [r3]
   1b558:	mov	r3, #1472	; 0x5c0
   1b55c:	bl	1406c <fprintf@plt>
   1b560:	movw	r1, #38704	; 0x9730
   1b564:	movt	r1, #4
   1b568:	ldr	r3, [pc, #248]	; 1b668 <__flatcc_gen_sort@@Base+0x1244>
   1b56c:	movw	r0, #41608	; 0xa288
   1b570:	movt	r0, #4
   1b574:	mov	r2, #1472	; 0x5c0
   1b578:	bl	14120 <__assert_fail@plt>
   1b57c:	movw	r1, #9228	; 0x240c
   1b580:	movt	r1, #4
   1b584:	movw	r3, #49320	; 0xc0a8
   1b588:	movt	r3, #6
   1b58c:	movw	r2, #38704	; 0x9730
   1b590:	movt	r2, #4
   1b594:	str	r1, [sp]
   1b598:	movw	r1, #4944	; 0x1350
   1b59c:	movt	r1, #4
   1b5a0:	ldr	r0, [r3]
   1b5a4:	movw	r3, #1507	; 0x5e3
   1b5a8:	bl	1406c <fprintf@plt>
   1b5ac:	movw	r1, #38704	; 0x9730
   1b5b0:	movt	r1, #4
   1b5b4:	ldr	r3, [pc, #172]	; 1b668 <__flatcc_gen_sort@@Base+0x1244>
   1b5b8:	movw	r0, #41608	; 0xa288
   1b5bc:	movt	r0, #4
   1b5c0:	movw	r2, #1507	; 0x5e3
   1b5c4:	bl	14120 <__assert_fail@plt>
   1b5c8:	ldr	r8, [sp, #60]	; 0x3c
   1b5cc:	movw	r1, #39392	; 0x99e0
   1b5d0:	movt	r1, #4
   1b5d4:	movw	r3, #49320	; 0xc0a8
   1b5d8:	movt	r3, #6
   1b5dc:	movw	r2, #38704	; 0x9730
   1b5e0:	movt	r2, #4
   1b5e4:	str	r1, [sp]
   1b5e8:	movw	r1, #4944	; 0x1350
   1b5ec:	movt	r1, #4
   1b5f0:	ldr	r0, [r3]
   1b5f4:	movw	r3, #1430	; 0x596
   1b5f8:	bl	1406c <fprintf@plt>
   1b5fc:	movw	r1, #38704	; 0x9730
   1b600:	movt	r1, #4
   1b604:	movw	r0, #41608	; 0xa288
   1b608:	movt	r0, #4
   1b60c:	add	r3, r8, #216	; 0xd8
   1b610:	movw	r2, #1430	; 0x596
   1b614:	bl	14120 <__assert_fail@plt>
   1b618:	bl	1a820 <__flatcc_gen_sort@@Base+0x3fc>
   1b61c:	movw	r1, #4956	; 0x135c
   1b620:	movt	r1, #4
   1b624:	movw	r3, #49320	; 0xc0a8
   1b628:	movt	r3, #6
   1b62c:	movw	r2, #4868	; 0x1304
   1b630:	movt	r2, #4
   1b634:	str	r1, [sp]
   1b638:	movw	r1, #4944	; 0x1350
   1b63c:	movt	r1, #4
   1b640:	ldr	r0, [r3]
   1b644:	mov	r3, #260	; 0x104
   1b648:	bl	1406c <fprintf@plt>
   1b64c:	movw	r1, #4868	; 0x1304
   1b650:	movt	r1, #4
   1b654:	ldr	r3, [pc, #20]	; 1b670 <__flatcc_gen_sort@@Base+0x124c>
   1b658:	movw	r0, #41608	; 0xa288
   1b65c:	movt	r0, #4
   1b660:	mov	r2, #260	; 0x104
   1b664:	bl	14120 <__assert_fail@plt>
   1b668:	andeq	r9, r4, r8, lsl r6
   1b66c:	andeq	r9, r4, ip, lsl #11
   1b670:	andeq	r9, r4, r8, lsl #12
   1b674:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b678:	mov	r2, #220	; 0xdc
   1b67c:	mov	r4, r0
   1b680:	strd	r6, [sp, #8]
   1b684:	mov	r1, #0
   1b688:	strd	r8, [sp, #16]
   1b68c:	strd	sl, [sp, #24]
   1b690:	str	lr, [sp, #32]
   1b694:	sub	sp, sp, #508	; 0x1fc
   1b698:	add	fp, sp, #284	; 0x11c
   1b69c:	mov	r0, fp
   1b6a0:	bl	14084 <memset@plt>
   1b6a4:	ldr	r3, [r4, #208]	; 0xd0
   1b6a8:	ldr	r5, [r3, #40]	; 0x28
   1b6ac:	cmp	r5, #0
   1b6b0:	beq	1c018 <__flatcc_gen_sort@@Base+0x1bf4>
   1b6b4:	movw	r6, #40020	; 0x9c54
   1b6b8:	movt	r6, #4
   1b6bc:	mov	r2, #0
   1b6c0:	ldrh	r3, [r5, #8]
   1b6c4:	cmp	r3, #4
   1b6c8:	beq	1c07c <__flatcc_gen_sort@@Base+0x1c58>
   1b6cc:	ldr	r5, [r5]
   1b6d0:	cmp	r5, #0
   1b6d4:	bne	1b6c0 <__flatcc_gen_sort@@Base+0x129c>
   1b6d8:	cmp	r2, #0
   1b6dc:	bne	1c368 <__flatcc_gen_sort@@Base+0x1f44>
   1b6e0:	ldr	r3, [r4, #208]	; 0xd0
   1b6e4:	ldr	r7, [r3, #40]	; 0x28
   1b6e8:	cmp	r7, #0
   1b6ec:	beq	1c018 <__flatcc_gen_sort@@Base+0x1bf4>
   1b6f0:	movw	r3, #40108	; 0x9cac
   1b6f4:	movt	r3, #4
   1b6f8:	str	r3, [sp, #40]	; 0x28
   1b6fc:	movw	r3, #40176	; 0x9cf0
   1b700:	movt	r3, #4
   1b704:	str	r3, [sp, #36]	; 0x24
   1b708:	movw	r3, #40168	; 0x9ce8
   1b70c:	movt	r3, #4
   1b710:	str	r3, [sp, #48]	; 0x30
   1b714:	mov	r3, #0
   1b718:	mov	r5, r3
   1b71c:	ldrh	r8, [r7, #8]
   1b720:	cmp	r8, #0
   1b724:	bne	1b89c <__flatcc_gen_sort@@Base+0x1478>
   1b728:	mov	r2, #220	; 0xdc
   1b72c:	mov	r1, r8
   1b730:	mov	r0, fp
   1b734:	bl	14084 <memset@plt>
   1b738:	ldr	r6, [r7, #20]
   1b73c:	cmp	r6, #0
   1b740:	beq	1c0b8 <__flatcc_gen_sort@@Base+0x1c94>
   1b744:	ldrh	r3, [r6, #72]	; 0x48
   1b748:	ldr	r6, [r6]
   1b74c:	tst	r3, #4
   1b750:	addeq	r8, r8, #1
   1b754:	cmp	r6, #0
   1b758:	bne	1b744 <__flatcc_gen_sort@@Base+0x1320>
   1b75c:	mov	r2, fp
   1b760:	mov	r1, r7
   1b764:	ldr	r0, [r7, #12]
   1b768:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1b76c:	mov	r3, fp
   1b770:	mov	r2, r4
   1b774:	ldr	r1, [sp, #40]	; 0x28
   1b778:	ldr	r0, [r4, #204]	; 0xcc
   1b77c:	bl	1406c <fprintf@plt>
   1b780:	ldr	r5, [r7, #20]
   1b784:	cmp	r5, #0
   1b788:	beq	1c0ec <__flatcc_gen_sort@@Base+0x1cc8>
   1b78c:	cmp	r8, #0
   1b790:	ldr	r3, [r4, #204]	; 0xcc
   1b794:	beq	1c104 <__flatcc_gen_sort@@Base+0x1ce0>
   1b798:	movw	r2, #38948	; 0x9824
   1b79c:	movt	r2, #4
   1b7a0:	movw	sl, #10080	; 0x2760
   1b7a4:	movt	sl, #4
   1b7a8:	movw	r9, #38956	; 0x982c
   1b7ac:	movt	r9, #4
   1b7b0:	str	r2, [sp, #44]	; 0x2c
   1b7b4:	mov	r1, r3
   1b7b8:	b	1b80c <__flatcc_gen_sort@@Base+0x13e8>
   1b7bc:	tst	r6, #3
   1b7c0:	bne	1b7d0 <__flatcc_gen_sort@@Base+0x13ac>
   1b7c4:	sub	r2, r8, r6
   1b7c8:	cmp	r2, #2
   1b7cc:	bgt	1c378 <__flatcc_gen_sort@@Base+0x1f54>
   1b7d0:	mov	r3, r1
   1b7d4:	mov	r2, #2
   1b7d8:	mov	r1, #1
   1b7dc:	mov	r0, r9
   1b7e0:	bl	13ff4 <fwrite@plt>
   1b7e4:	ldr	r0, [r4, #204]	; 0xcc
   1b7e8:	movw	r1, #40156	; 0x9cdc
   1b7ec:	movt	r1, #4
   1b7f0:	ldr	r2, [r5, #96]	; 0x60
   1b7f4:	add	r6, r6, #1
   1b7f8:	bl	1406c <fprintf@plt>
   1b7fc:	ldr	r1, [r4, #204]	; 0xcc
   1b800:	ldr	r5, [r5]
   1b804:	cmp	r5, #0
   1b808:	beq	1b838 <__flatcc_gen_sort@@Base+0x1414>
   1b80c:	ldrh	r2, [r5, #72]	; 0x48
   1b810:	tst	r2, #4
   1b814:	bne	1b800 <__flatcc_gen_sort@@Base+0x13dc>
   1b818:	tst	r2, #256	; 0x100
   1b81c:	beq	1b800 <__flatcc_gen_sort@@Base+0x13dc>
   1b820:	cmp	r6, #0
   1b824:	bne	1b7bc <__flatcc_gen_sort@@Base+0x1398>
   1b828:	mov	r0, #32
   1b82c:	bl	140cc <fputc@plt>
   1b830:	ldr	r0, [r4, #204]	; 0xcc
   1b834:	b	1b7e8 <__flatcc_gen_sort@@Base+0x13c4>
   1b838:	mov	r3, r1
   1b83c:	cmp	r6, #0
   1b840:	beq	1c0f0 <__flatcc_gen_sort@@Base+0x1ccc>
   1b844:	movw	r0, #40160	; 0x9ce0
   1b848:	movt	r0, #4
   1b84c:	mov	r2, #7
   1b850:	mov	r1, #1
   1b854:	bl	13ff4 <fwrite@plt>
   1b858:	mov	r2, #220	; 0xdc
   1b85c:	mov	r1, #0
   1b860:	mov	r0, fp
   1b864:	mov	r5, #1
   1b868:	bl	14084 <memset@plt>
   1b86c:	mov	r2, fp
   1b870:	mov	r1, r7
   1b874:	ldr	r0, [r7, #12]
   1b878:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1b87c:	ldrd	r8, [r7, #96]	; 0x60
   1b880:	mov	r3, r4
   1b884:	mov	r2, r4
   1b888:	str	fp, [sp]
   1b88c:	ldr	r1, [sp, #36]	; 0x24
   1b890:	ldr	r0, [r4, #204]	; 0xcc
   1b894:	strd	r8, [sp, #8]
   1b898:	bl	1406c <fprintf@plt>
   1b89c:	ldr	r7, [r7]
   1b8a0:	cmp	r7, #0
   1b8a4:	bne	1b71c <__flatcc_gen_sort@@Base+0x12f8>
   1b8a8:	ldr	r3, [r4, #208]	; 0xd0
   1b8ac:	str	r5, [sp, #60]	; 0x3c
   1b8b0:	ldr	r7, [r3, #40]	; 0x28
   1b8b4:	cmp	r7, #0
   1b8b8:	beq	1c390 <__flatcc_gen_sort@@Base+0x1f6c>
   1b8bc:	movw	r3, #40208	; 0x9d10
   1b8c0:	movt	r3, #4
   1b8c4:	str	r3, [sp, #52]	; 0x34
   1b8c8:	movw	r3, #38208	; 0x9540
   1b8cc:	movt	r3, #4
   1b8d0:	str	r3, [sp, #56]	; 0x38
   1b8d4:	ldrh	r6, [r7, #8]
   1b8d8:	cmp	r6, #0
   1b8dc:	bne	1bba4 <__flatcc_gen_sort@@Base+0x1780>
   1b8e0:	add	r3, sp, #64	; 0x40
   1b8e4:	mov	r2, #220	; 0xdc
   1b8e8:	mov	r5, r3
   1b8ec:	mov	r0, r3
   1b8f0:	mov	r1, r6
   1b8f4:	str	r3, [sp, #40]	; 0x28
   1b8f8:	bl	14084 <memset@plt>
   1b8fc:	mov	r2, r5
   1b900:	mov	r1, r7
   1b904:	ldr	r0, [r7, #12]
   1b908:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1b90c:	ldr	r3, [r7, #20]
   1b910:	cmp	r3, #0
   1b914:	beq	1c33c <__flatcc_gen_sort@@Base+0x1f18>
   1b918:	ldrh	r2, [r3, #72]	; 0x48
   1b91c:	ldr	r3, [r3]
   1b920:	tst	r2, #4
   1b924:	addeq	r6, r6, #1
   1b928:	cmp	r3, #0
   1b92c:	bne	1b918 <__flatcc_gen_sort@@Base+0x14f4>
   1b930:	ldr	r2, [sp, #40]	; 0x28
   1b934:	ldr	r1, [sp, #52]	; 0x34
   1b938:	ldr	r0, [r4, #204]	; 0xcc
   1b93c:	bl	1406c <fprintf@plt>
   1b940:	mov	r2, #220	; 0xdc
   1b944:	mov	r1, #0
   1b948:	mov	r0, fp
   1b94c:	bl	14084 <memset@plt>
   1b950:	ldr	r5, [r7, #20]
   1b954:	cmp	r5, #0
   1b958:	beq	1bab4 <__flatcc_gen_sort@@Base+0x1690>
   1b95c:	ldrh	r3, [r5, #72]	; 0x48
   1b960:	movw	r9, #40504	; 0x9e38
   1b964:	movt	r9, #4
   1b968:	movw	sl, #40528	; 0x9e50
   1b96c:	movt	sl, #4
   1b970:	mov	r2, #0
   1b974:	str	r9, [sp, #44]	; 0x2c
   1b978:	str	r7, [sp, #48]	; 0x30
   1b97c:	ldr	r7, [sp, #56]	; 0x38
   1b980:	tst	r3, #4
   1b984:	bne	1baa0 <__flatcc_gen_sort@@Base+0x167c>
   1b988:	add	r3, r2, #1
   1b98c:	cmp	r6, #0
   1b990:	str	r3, [sp, #36]	; 0x24
   1b994:	beq	1b9c4 <__flatcc_gen_sort@@Base+0x15a0>
   1b998:	cmp	r2, #0
   1b99c:	ldr	r3, [r4, #204]	; 0xcc
   1b9a0:	bne	1bdf8 <__flatcc_gen_sort@@Base+0x19d4>
   1b9a4:	cmp	r6, #4
   1b9a8:	ble	1be0c <__flatcc_gen_sort@@Base+0x19e8>
   1b9ac:	movw	r2, #16040	; 0x3ea8
   1b9b0:	movt	r2, #4
   1b9b4:	movw	r1, #38948	; 0x9824
   1b9b8:	movt	r1, #4
   1b9bc:	mov	r0, r3
   1b9c0:	bl	1406c <fprintf@plt>
   1b9c4:	ldrh	r3, [r5, #24]
   1b9c8:	sub	r3, r3, #7
   1b9cc:	cmp	r3, #8
   1b9d0:	ldrls	pc, [pc, r3, lsl #2]
   1b9d4:	b	1c3b0 <__flatcc_gen_sort@@Base+0x1f8c>
   1b9d8:	andeq	fp, r1, r0, lsr #26
   1b9dc:	andeq	fp, r1, r8, asr sp
   1b9e0:	andeq	fp, r1, r4, lsl #26
   1b9e4:	andeq	fp, r1, ip, ror #20
   1b9e8:			; <UNDEFINED> instruction: 0x0001c3b0
   1b9ec:			; <UNDEFINED> instruction: 0x0001c3b0
   1b9f0:			; <UNDEFINED> instruction: 0x0001c3b0
   1b9f4:	andeq	fp, r1, r4, lsr sl
   1b9f8:	strdeq	fp, [r1], -ip
   1b9fc:	ldr	r1, [r5, #16]
   1ba00:	mov	r2, fp
   1ba04:	ldr	r0, [r1, #12]
   1ba08:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1ba0c:	ldr	r3, [r5, #16]
   1ba10:	ldrh	r3, [r3, #8]
   1ba14:	cmp	r3, #4
   1ba18:	ldrls	pc, [pc, r3, lsl #2]
   1ba1c:	b	1c3fc <__flatcc_gen_sort@@Base+0x1fd8>
   1ba20:			; <UNDEFINED> instruction: 0x0001bdbc
   1ba24:			; <UNDEFINED> instruction: 0x0001bdbc
   1ba28:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ba2c:			; <UNDEFINED> instruction: 0x0001bdbc
   1ba30:	muleq	r1, ip, sp
   1ba34:	ldr	r1, [r5, #16]
   1ba38:	mov	r2, fp
   1ba3c:	ldr	r0, [r1, #12]
   1ba40:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1ba44:	ldr	r3, [r5, #16]
   1ba48:	ldrh	r3, [r3, #8]
   1ba4c:	cmp	r3, #4
   1ba50:	ldrls	pc, [pc, r3, lsl #2]
   1ba54:	b	1c448 <__flatcc_gen_sort@@Base+0x2024>
   1ba58:	ldrdeq	fp, [r1], -r4
   1ba5c:	andeq	fp, r1, r8, asr #27
   1ba60:	andeq	ip, r1, r8, asr #8
   1ba64:	andeq	fp, r1, ip, ror #27
   1ba68:	andeq	fp, r1, r0, ror #27
   1ba6c:	ldrd	r8, [r5, #96]	; 0x60
   1ba70:	mov	r2, r4
   1ba74:	ldr	r1, [sp, #44]	; 0x2c
   1ba78:	ldr	r0, [r4, #204]	; 0xcc
   1ba7c:	strd	r8, [sp]
   1ba80:	bl	1406c <fprintf@plt>
   1ba84:	ldr	r5, [r5]
   1ba88:	cmp	r5, #0
   1ba8c:	beq	1bab0 <__flatcc_gen_sort@@Base+0x168c>
   1ba90:	ldrh	r3, [r5, #72]	; 0x48
   1ba94:	ldr	r2, [sp, #36]	; 0x24
   1ba98:	tst	r3, #4
   1ba9c:	beq	1b988 <__flatcc_gen_sort@@Base+0x1564>
   1baa0:	ldr	r5, [r5]
   1baa4:	str	r2, [sp, #36]	; 0x24
   1baa8:	cmp	r5, #0
   1baac:	bne	1ba90 <__flatcc_gen_sort@@Base+0x166c>
   1bab0:	ldr	r7, [sp, #48]	; 0x30
   1bab4:	movw	r1, #40236	; 0x9d2c
   1bab8:	movt	r1, #4
   1babc:	ldr	r2, [sp, #40]	; 0x28
   1bac0:	ldr	r0, [r4, #204]	; 0xcc
   1bac4:	bl	1406c <fprintf@plt>
   1bac8:	ldr	r5, [r7, #20]
   1bacc:	cmp	r5, #0
   1bad0:	beq	1c344 <__flatcc_gen_sort@@Base+0x1f20>
   1bad4:	cmp	r6, #0
   1bad8:	ldr	r0, [r4, #204]	; 0xcc
   1badc:	movweq	r6, #40556	; 0x9e6c
   1bae0:	movteq	r6, #4
   1bae4:	beq	1c050 <__flatcc_gen_sort@@Base+0x1c2c>
   1bae8:	cmp	r6, #4
   1baec:	bgt	1c168 <__flatcc_gen_sort@@Base+0x1d44>
   1baf0:	movw	r3, #16040	; 0x3ea8
   1baf4:	movt	r3, #4
   1baf8:	movw	r9, #40556	; 0x9e6c
   1bafc:	movt	r9, #4
   1bb00:	movw	sl, #38956	; 0x982c
   1bb04:	movt	sl, #4
   1bb08:	str	r3, [sp, #36]	; 0x24
   1bb0c:	mov	r8, #0
   1bb10:	mov	r3, r0
   1bb14:	ldrh	r2, [r5, #72]	; 0x48
   1bb18:	tst	r2, #4
   1bb1c:	bne	1bb64 <__flatcc_gen_sort@@Base+0x1740>
   1bb20:	cmp	r8, #0
   1bb24:	beq	1bb3c <__flatcc_gen_sort@@Base+0x1718>
   1bb28:	tst	r8, #3
   1bb2c:	bne	1bb3c <__flatcc_gen_sort@@Base+0x1718>
   1bb30:	sub	r2, r6, r8
   1bb34:	cmp	r2, #3
   1bb38:	beq	1c34c <__flatcc_gen_sort@@Base+0x1f28>
   1bb3c:	mov	r2, #2
   1bb40:	mov	r1, #1
   1bb44:	mov	r0, sl
   1bb48:	bl	13ff4 <fwrite@plt>
   1bb4c:	ldr	r0, [r4, #204]	; 0xcc
   1bb50:	mov	r1, r9
   1bb54:	add	r8, r8, #1
   1bb58:	ldrd	r2, [r5, #96]	; 0x60
   1bb5c:	bl	1406c <fprintf@plt>
   1bb60:	ldr	r3, [r4, #204]	; 0xcc
   1bb64:	ldr	r5, [r5]
   1bb68:	cmp	r5, #0
   1bb6c:	bne	1bb14 <__flatcc_gen_sort@@Base+0x16f0>
   1bb70:	mov	r0, r3
   1bb74:	mov	r1, r0
   1bb78:	mov	r0, #10
   1bb7c:	bl	140cc <fputc@plt>
   1bb80:	ldr	r0, [sp, #40]	; 0x28
   1bb84:	movw	r1, #40564	; 0x9e74
   1bb88:	movt	r1, #4
   1bb8c:	str	r4, [sp]
   1bb90:	mov	r3, r0
   1bb94:	mov	r2, r0
   1bb98:	str	r0, [sp, #4]
   1bb9c:	ldr	r0, [r4, #204]	; 0xcc
   1bba0:	bl	1406c <fprintf@plt>
   1bba4:	ldr	r7, [r7]
   1bba8:	cmp	r7, #0
   1bbac:	bne	1b8d4 <__flatcc_gen_sort@@Base+0x14b0>
   1bbb0:	ldr	r3, [sp, #60]	; 0x3c
   1bbb4:	cmp	r3, #0
   1bbb8:	bne	1c398 <__flatcc_gen_sort@@Base+0x1f74>
   1bbbc:	ldr	r3, [r4, #208]	; 0xd0
   1bbc0:	ldr	r7, [r3, #40]	; 0x28
   1bbc4:	cmp	r7, #0
   1bbc8:	beq	1c018 <__flatcc_gen_sort@@Base+0x1bf4>
   1bbcc:	movw	sl, #40796	; 0x9f5c
   1bbd0:	movt	sl, #4
   1bbd4:	movw	r9, #40664	; 0x9ed8
   1bbd8:	movt	r9, #4
   1bbdc:	movw	r8, #40936	; 0x9fe8
   1bbe0:	movt	r8, #4
   1bbe4:	mov	r2, #0
   1bbe8:	b	1bbf8 <__flatcc_gen_sort@@Base+0x17d4>
   1bbec:	ldr	r7, [r7]
   1bbf0:	cmp	r7, #0
   1bbf4:	beq	1be98 <__flatcc_gen_sort@@Base+0x1a74>
   1bbf8:	ldrh	r3, [r7, #8]
   1bbfc:	cmp	r3, #4
   1bc00:	bne	1bbec <__flatcc_gen_sort@@Base+0x17c8>
   1bc04:	add	r5, sp, #64	; 0x40
   1bc08:	mov	r2, #220	; 0xdc
   1bc0c:	mov	r1, #0
   1bc10:	mov	r0, r5
   1bc14:	bl	14084 <memset@plt>
   1bc18:	mov	r2, #220	; 0xdc
   1bc1c:	mov	r1, #0
   1bc20:	mov	r0, fp
   1bc24:	bl	14084 <memset@plt>
   1bc28:	mov	r2, r5
   1bc2c:	mov	r1, r7
   1bc30:	ldr	r0, [r7, #12]
   1bc34:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1bc38:	ldr	r6, [r7, #20]
   1bc3c:	cmp	r6, #0
   1bc40:	bne	1bc9c <__flatcc_gen_sort@@Base+0x1878>
   1bc44:	b	1be6c <__flatcc_gen_sort@@Base+0x1a48>
   1bc48:	ldr	r1, [r6, #16]
   1bc4c:	mov	r2, fp
   1bc50:	ldr	r0, [r1, #12]
   1bc54:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1bc58:	ldr	lr, [r6, #4]
   1bc5c:	mov	r3, r5
   1bc60:	mov	r2, r5
   1bc64:	mov	r1, r9
   1bc68:	ldr	r0, [r4, #204]	; 0xcc
   1bc6c:	ldm	lr, {ip, lr}
   1bc70:	str	fp, [sp, #8]
   1bc74:	str	lr, [sp]
   1bc78:	str	ip, [sp, #4]
   1bc7c:	str	r5, [sp, #12]
   1bc80:	str	r5, [sp, #16]
   1bc84:	str	lr, [sp, #20]
   1bc88:	str	ip, [sp, #24]
   1bc8c:	bl	1406c <fprintf@plt>
   1bc90:	ldr	r6, [r6]
   1bc94:	cmp	r6, #0
   1bc98:	beq	1be6c <__flatcc_gen_sort@@Base+0x1a48>
   1bc9c:	ldrh	r3, [r6, #24]
   1bca0:	cmp	r3, #10
   1bca4:	beq	1be24 <__flatcc_gen_sort@@Base+0x1a00>
   1bca8:	cmp	r3, #14
   1bcac:	beq	1bc48 <__flatcc_gen_sort@@Base+0x1824>
   1bcb0:	cmp	r3, #0
   1bcb4:	beq	1be44 <__flatcc_gen_sort@@Base+0x1a20>
   1bcb8:	movw	r1, #41056	; 0xa060
   1bcbc:	movt	r1, #4
   1bcc0:	movw	r3, #49320	; 0xc0a8
   1bcc4:	movt	r3, #6
   1bcc8:	movw	r2, #38704	; 0x9730
   1bccc:	movt	r2, #4
   1bcd0:	str	r1, [sp]
   1bcd4:	movw	r1, #4944	; 0x1350
   1bcd8:	movt	r1, #4
   1bcdc:	ldr	r0, [r3]
   1bce0:	movw	r3, #1608	; 0x648
   1bce4:	bl	1406c <fprintf@plt>
   1bce8:	movw	r1, #38704	; 0x9730
   1bcec:	movt	r1, #4
   1bcf0:	ldr	r3, [pc, #2100]	; 1c52c <__flatcc_gen_sort@@Base+0x2108>
   1bcf4:	movw	r0, #41608	; 0xa288
   1bcf8:	movt	r0, #4
   1bcfc:	movw	r2, #1608	; 0x648
   1bd00:	bl	14120 <__assert_fail@plt>
   1bd04:	ldrd	r8, [r5, #96]	; 0x60
   1bd08:	mov	r2, r4
   1bd0c:	mov	r1, sl
   1bd10:	ldr	r0, [r4, #204]	; 0xcc
   1bd14:	strd	r8, [sp]
   1bd18:	bl	1406c <fprintf@plt>
   1bd1c:	b	1ba84 <__flatcc_gen_sort@@Base+0x1660>
   1bd20:	ldr	r3, [r5, #16]
   1bd24:	sub	r3, r3, #1
   1bd28:	cmp	r3, #10
   1bd2c:	bhi	1c494 <__flatcc_gen_sort@@Base+0x2070>
   1bd30:	ldrd	r8, [r5, #96]	; 0x60
   1bd34:	add	r3, r7, r3, lsl #2
   1bd38:	movw	r1, #40480	; 0x9e20
   1bd3c:	movt	r1, #4
   1bd40:	mov	r2, r4
   1bd44:	ldr	r3, [r3, #120]	; 0x78
   1bd48:	strd	r8, [sp]
   1bd4c:	ldr	r0, [r4, #204]	; 0xcc
   1bd50:	bl	1406c <fprintf@plt>
   1bd54:	b	1ba84 <__flatcc_gen_sort@@Base+0x1660>
   1bd58:	ldr	r3, [r5, #16]
   1bd5c:	cmp	r3, #5
   1bd60:	beq	1c038 <__flatcc_gen_sort@@Base+0x1c14>
   1bd64:	sub	r3, r3, #1
   1bd68:	cmp	r3, #10
   1bd6c:	bhi	1c4e0 <__flatcc_gen_sort@@Base+0x20bc>
   1bd70:	movw	r2, #45408	; 0xb160
   1bd74:	movt	r2, #4
   1bd78:	ldrd	r8, [r5, #96]	; 0x60
   1bd7c:	add	r3, r7, r3, lsl #2
   1bd80:	movw	r1, #40468	; 0x9e14
   1bd84:	movt	r1, #4
   1bd88:	ldr	r3, [r3, #32]
   1bd8c:	strd	r8, [sp]
   1bd90:	ldr	r0, [r4, #204]	; 0xcc
   1bd94:	bl	1406c <fprintf@plt>
   1bd98:	b	1ba84 <__flatcc_gen_sort@@Base+0x1660>
   1bd9c:	movw	r1, #40396	; 0x9dcc
   1bda0:	movt	r1, #4
   1bda4:	ldrd	r8, [r5, #96]	; 0x60
   1bda8:	mov	r2, fp
   1bdac:	ldr	r0, [r4, #204]	; 0xcc
   1bdb0:	strd	r8, [sp]
   1bdb4:	bl	1406c <fprintf@plt>
   1bdb8:	b	1ba84 <__flatcc_gen_sort@@Base+0x1660>
   1bdbc:	movw	r1, #40376	; 0x9db8
   1bdc0:	movt	r1, #4
   1bdc4:	b	1bda4 <__flatcc_gen_sort@@Base+0x1980>
   1bdc8:	movw	r1, #40264	; 0x9d48
   1bdcc:	movt	r1, #4
   1bdd0:	b	1bda4 <__flatcc_gen_sort@@Base+0x1980>
   1bdd4:	movw	r1, #40292	; 0x9d64
   1bdd8:	movt	r1, #4
   1bddc:	b	1bda4 <__flatcc_gen_sort@@Base+0x1980>
   1bde0:	movw	r1, #40308	; 0x9d74
   1bde4:	movt	r1, #4
   1bde8:	b	1bda4 <__flatcc_gen_sort@@Base+0x1980>
   1bdec:	movw	r1, #40276	; 0x9d54
   1bdf0:	movt	r1, #4
   1bdf4:	b	1bda4 <__flatcc_gen_sort@@Base+0x1980>
   1bdf8:	tst	r2, #3
   1bdfc:	bne	1be0c <__flatcc_gen_sort@@Base+0x19e8>
   1be00:	sub	r2, r6, r2
   1be04:	cmp	r2, #2
   1be08:	bgt	1b9ac <__flatcc_gen_sort@@Base+0x1588>
   1be0c:	movw	r0, #38956	; 0x982c
   1be10:	movt	r0, #4
   1be14:	mov	r2, #2
   1be18:	mov	r1, #1
   1be1c:	bl	13ff4 <fwrite@plt>
   1be20:	b	1b9c4 <__flatcc_gen_sort@@Base+0x15a0>
   1be24:	ldr	lr, [r6, #4]
   1be28:	mov	r3, r5
   1be2c:	mov	r2, r5
   1be30:	mov	r1, sl
   1be34:	ldr	r0, [r4, #204]	; 0xcc
   1be38:	ldm	lr, {ip, lr}
   1be3c:	str	r4, [sp, #8]
   1be40:	b	1bc74 <__flatcc_gen_sort@@Base+0x1850>
   1be44:	mov	r3, r5
   1be48:	mov	r2, r5
   1be4c:	str	r5, [sp]
   1be50:	mov	r1, r8
   1be54:	str	r5, [sp, #4]
   1be58:	ldr	r0, [r4, #204]	; 0xcc
   1be5c:	bl	1406c <fprintf@plt>
   1be60:	ldr	r6, [r6]
   1be64:	cmp	r6, #0
   1be68:	bne	1bc9c <__flatcc_gen_sort@@Base+0x1878>
   1be6c:	mov	r2, r4
   1be70:	movw	r1, #40632	; 0x9eb8
   1be74:	movt	r1, #4
   1be78:	mov	r3, r4
   1be7c:	str	r5, [sp]
   1be80:	ldr	r0, [r4, #204]	; 0xcc
   1be84:	bl	1406c <fprintf@plt>
   1be88:	ldr	r7, [r7]
   1be8c:	mov	r2, #1
   1be90:	cmp	r7, #0
   1be94:	bne	1bbf8 <__flatcc_gen_sort@@Base+0x17d4>
   1be98:	cmp	r2, #0
   1be9c:	beq	1beac <__flatcc_gen_sort@@Base+0x1a88>
   1bea0:	mov	r0, #10
   1bea4:	ldr	r1, [r4, #204]	; 0xcc
   1bea8:	bl	140cc <fputc@plt>
   1beac:	ldr	r3, [sp, #60]	; 0x3c
   1beb0:	cmp	r3, #0
   1beb4:	beq	1c018 <__flatcc_gen_sort@@Base+0x1bf4>
   1beb8:	ldr	r3, [r4, #208]	; 0xd0
   1bebc:	ldr	r6, [r3, #40]	; 0x28
   1bec0:	cmp	r6, #0
   1bec4:	beq	1c018 <__flatcc_gen_sort@@Base+0x1bf4>
   1bec8:	movw	r8, #41100	; 0xa08c
   1becc:	movt	r8, #4
   1bed0:	movw	r9, #41168	; 0xa0d0
   1bed4:	movt	r9, #4
   1bed8:	movw	sl, #41312	; 0xa160
   1bedc:	movt	sl, #4
   1bee0:	ldrh	r5, [r6, #8]
   1bee4:	cmp	r5, #0
   1bee8:	bne	1c00c <__flatcc_gen_sort@@Base+0x1be8>
   1beec:	mov	r1, r6
   1bef0:	mov	r0, r4
   1bef4:	bl	1ab60 <__flatcc_gen_sort@@Base+0x73c>
   1bef8:	mov	r1, r5
   1befc:	mov	r2, #220	; 0xdc
   1bf00:	ldrh	r7, [r6, #92]	; 0x5c
   1bf04:	mov	r0, fp
   1bf08:	bl	14084 <memset@plt>
   1bf0c:	mov	r2, fp
   1bf10:	mov	r1, r6
   1bf14:	ldr	r0, [r6, #12]
   1bf18:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1bf1c:	mov	r3, fp
   1bf20:	mov	r2, fp
   1bf24:	stm	sp, {r4, fp}
   1bf28:	mov	r1, r8
   1bf2c:	ldr	r0, [r4, #204]	; 0xcc
   1bf30:	and	r7, r7, #8
   1bf34:	bl	1406c <fprintf@plt>
   1bf38:	mov	r2, fp
   1bf3c:	mov	r1, r9
   1bf40:	ldr	r0, [r4, #204]	; 0xcc
   1bf44:	bl	1406c <fprintf@plt>
   1bf48:	ldr	r5, [r6, #24]
   1bf4c:	cmp	r5, #0
   1bf50:	beq	1c3a8 <__flatcc_gen_sort@@Base+0x1f84>
   1bf54:	cmp	r7, #0
   1bf58:	ldr	r0, [r4, #204]	; 0xcc
   1bf5c:	beq	1c204 <__flatcc_gen_sort@@Base+0x1de0>
   1bf60:	movw	r7, #41192	; 0xa0e8
   1bf64:	movt	r7, #4
   1bf68:	strd	r8, [sp, #36]	; 0x24
   1bf6c:	ldrh	r3, [r5, #72]	; 0x48
   1bf70:	tst	r3, #4
   1bf74:	bne	1bfa0 <__flatcc_gen_sort@@Base+0x1b7c>
   1bf78:	ldr	ip, [r5, #4]
   1bf7c:	mov	r2, fp
   1bf80:	mov	r1, r7
   1bf84:	ldrd	r8, [r5, #96]	; 0x60
   1bf88:	ldr	r3, [ip, #4]
   1bf8c:	strd	r8, [sp, #8]
   1bf90:	ldr	ip, [ip]
   1bf94:	str	ip, [sp]
   1bf98:	bl	1406c <fprintf@plt>
   1bf9c:	ldr	r0, [r4, #204]	; 0xcc
   1bfa0:	ldr	r5, [r5, #108]	; 0x6c
   1bfa4:	cmp	r5, #0
   1bfa8:	bne	1bf6c <__flatcc_gen_sort@@Base+0x1b48>
   1bfac:	ldrd	r8, [sp, #36]	; 0x24
   1bfb0:	mov	r2, fp
   1bfb4:	mov	r1, sl
   1bfb8:	bl	1406c <fprintf@plt>
   1bfbc:	mov	r2, #220	; 0xdc
   1bfc0:	mov	r1, #0
   1bfc4:	mov	r0, fp
   1bfc8:	bl	14084 <memset@plt>
   1bfcc:	mov	r2, fp
   1bfd0:	mov	r1, r6
   1bfd4:	ldr	r0, [r6, #12]
   1bfd8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1bfdc:	movw	r1, #41368	; 0xa198
   1bfe0:	movt	r1, #4
   1bfe4:	str	fp, [sp]
   1bfe8:	mov	r3, r4
   1bfec:	mov	r2, r4
   1bff0:	str	fp, [sp, #4]
   1bff4:	str	fp, [sp, #8]
   1bff8:	ldr	r0, [r4, #204]	; 0xcc
   1bffc:	bl	1406c <fprintf@plt>
   1c000:	mov	r0, #10
   1c004:	ldr	r1, [r4, #204]	; 0xcc
   1c008:	bl	140cc <fputc@plt>
   1c00c:	ldr	r6, [r6]
   1c010:	cmp	r6, #0
   1c014:	bne	1bee0 <__flatcc_gen_sort@@Base+0x1abc>
   1c018:	mov	r0, #0
   1c01c:	add	sp, sp, #508	; 0x1fc
   1c020:	ldrd	r4, [sp]
   1c024:	ldrd	r6, [sp, #8]
   1c028:	ldrd	r8, [sp, #16]
   1c02c:	ldrd	sl, [sp, #24]
   1c030:	add	sp, sp, #32
   1c034:	pop	{pc}		; (ldr pc, [sp], #4)
   1c038:	mov	r2, r4
   1c03c:	mov	r3, #4
   1c040:	b	1bd78 <__flatcc_gen_sort@@Base+0x1954>
   1c044:	ldr	r5, [r5]
   1c048:	cmp	r5, #0
   1c04c:	beq	1bb74 <__flatcc_gen_sort@@Base+0x1750>
   1c050:	ldrh	r3, [r5, #72]	; 0x48
   1c054:	tst	r3, #4
   1c058:	bne	1c044 <__flatcc_gen_sort@@Base+0x1c20>
   1c05c:	mov	r1, r6
   1c060:	ldrd	r2, [r5, #96]	; 0x60
   1c064:	bl	1406c <fprintf@plt>
   1c068:	ldr	r5, [r5]
   1c06c:	ldr	r0, [r4, #204]	; 0xcc
   1c070:	cmp	r5, #0
   1c074:	bne	1c050 <__flatcc_gen_sort@@Base+0x1c2c>
   1c078:	b	1bb74 <__flatcc_gen_sort@@Base+0x1750>
   1c07c:	mov	r1, r5
   1c080:	mov	r2, fp
   1c084:	ldr	r0, [r5, #12]
   1c088:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1c08c:	mov	r3, fp
   1c090:	mov	r2, r4
   1c094:	stm	sp, {r4, fp}
   1c098:	mov	r1, r6
   1c09c:	ldr	r0, [r4, #204]	; 0xcc
   1c0a0:	bl	1406c <fprintf@plt>
   1c0a4:	ldr	r5, [r5]
   1c0a8:	cmp	r5, #0
   1c0ac:	beq	1c368 <__flatcc_gen_sort@@Base+0x1f44>
   1c0b0:	mov	r2, #1
   1c0b4:	b	1b6c0 <__flatcc_gen_sort@@Base+0x129c>
   1c0b8:	mov	r2, fp
   1c0bc:	mov	r1, r7
   1c0c0:	ldr	r0, [r7, #12]
   1c0c4:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1c0c8:	mov	r3, fp
   1c0cc:	mov	r2, r4
   1c0d0:	ldr	r1, [sp, #40]	; 0x28
   1c0d4:	ldr	r0, [r4, #204]	; 0xcc
   1c0d8:	bl	1406c <fprintf@plt>
   1c0dc:	ldr	r5, [r7, #20]
   1c0e0:	cmp	r5, #0
   1c0e4:	ldrne	r3, [r4, #204]	; 0xcc
   1c0e8:	bne	1c104 <__flatcc_gen_sort@@Base+0x1ce0>
   1c0ec:	ldr	r3, [r4, #204]	; 0xcc
   1c0f0:	mov	r2, #6
   1c0f4:	mov	r1, #1
   1c0f8:	ldr	r0, [sp, #48]	; 0x30
   1c0fc:	bl	13ff4 <fwrite@plt>
   1c100:	b	1b858 <__flatcc_gen_sort@@Base+0x1434>
   1c104:	movw	r8, #40156	; 0x9cdc
   1c108:	movt	r8, #4
   1c10c:	mov	r6, #0
   1c110:	mov	r0, r3
   1c114:	ldrh	r2, [r5, #72]	; 0x48
   1c118:	tst	r2, #4
   1c11c:	bne	1c154 <__flatcc_gen_sort@@Base+0x1d30>
   1c120:	tst	r2, #256	; 0x100
   1c124:	beq	1c154 <__flatcc_gen_sort@@Base+0x1d30>
   1c128:	cmp	r6, #0
   1c12c:	bne	1c140 <__flatcc_gen_sort@@Base+0x1d1c>
   1c130:	mov	r1, r0
   1c134:	mov	r0, #32
   1c138:	bl	140cc <fputc@plt>
   1c13c:	ldr	r0, [r4, #204]	; 0xcc
   1c140:	mov	r1, r8
   1c144:	add	r6, r6, #1
   1c148:	ldr	r2, [r5, #96]	; 0x60
   1c14c:	bl	1406c <fprintf@plt>
   1c150:	ldr	r0, [r4, #204]	; 0xcc
   1c154:	ldr	r5, [r5]
   1c158:	cmp	r5, #0
   1c15c:	bne	1c114 <__flatcc_gen_sort@@Base+0x1cf0>
   1c160:	mov	r3, r0
   1c164:	b	1b83c <__flatcc_gen_sort@@Base+0x1418>
   1c168:	movw	r3, #38948	; 0x9824
   1c16c:	movt	r3, #4
   1c170:	movw	sl, #16040	; 0x3ea8
   1c174:	movt	sl, #4
   1c178:	movw	r9, #38956	; 0x982c
   1c17c:	movt	r9, #4
   1c180:	str	r3, [sp, #36]	; 0x24
   1c184:	mov	r8, #0
   1c188:	b	1c1c0 <__flatcc_gen_sort@@Base+0x1d9c>
   1c18c:	mov	r2, sl
   1c190:	ldr	r1, [sp, #36]	; 0x24
   1c194:	bl	1406c <fprintf@plt>
   1c198:	ldr	r0, [r4, #204]	; 0xcc
   1c19c:	movw	r1, #40556	; 0x9e6c
   1c1a0:	movt	r1, #4
   1c1a4:	ldrd	r2, [r5, #96]	; 0x60
   1c1a8:	add	r8, r8, #1
   1c1ac:	bl	1406c <fprintf@plt>
   1c1b0:	ldr	r0, [r4, #204]	; 0xcc
   1c1b4:	ldr	r5, [r5]
   1c1b8:	cmp	r5, #0
   1c1bc:	beq	1bb74 <__flatcc_gen_sort@@Base+0x1750>
   1c1c0:	ldrh	r2, [r5, #72]	; 0x48
   1c1c4:	tst	r2, #4
   1c1c8:	bne	1c1b4 <__flatcc_gen_sort@@Base+0x1d90>
   1c1cc:	cmp	r8, #0
   1c1d0:	beq	1c18c <__flatcc_gen_sort@@Base+0x1d68>
   1c1d4:	tst	r8, #3
   1c1d8:	bne	1c1e8 <__flatcc_gen_sort@@Base+0x1dc4>
   1c1dc:	sub	r3, r6, r8
   1c1e0:	cmp	r3, #2
   1c1e4:	bgt	1c18c <__flatcc_gen_sort@@Base+0x1d68>
   1c1e8:	mov	r3, r0
   1c1ec:	mov	r2, #2
   1c1f0:	mov	r1, #1
   1c1f4:	mov	r0, r9
   1c1f8:	bl	13ff4 <fwrite@plt>
   1c1fc:	ldr	r0, [r4, #204]	; 0xcc
   1c200:	b	1c19c <__flatcc_gen_sort@@Base+0x1d78>
   1c204:	movw	r3, #41228	; 0xa10c
   1c208:	movt	r3, #4
   1c20c:	str	r7, [sp, #36]	; 0x24
   1c210:	movw	r7, #41192	; 0xa0e8
   1c214:	movt	r7, #4
   1c218:	strd	r8, [sp, #40]	; 0x28
   1c21c:	str	r3, [sp, #48]	; 0x30
   1c220:	b	1c248 <__flatcc_gen_sort@@Base+0x1e24>
   1c224:	mov	r1, r7
   1c228:	str	r2, [sp]
   1c22c:	mov	r2, fp
   1c230:	strd	r8, [sp, #8]
   1c234:	bl	1406c <fprintf@plt>
   1c238:	ldr	r0, [r4, #204]	; 0xcc
   1c23c:	ldr	r5, [r5, #108]	; 0x6c
   1c240:	cmp	r5, #0
   1c244:	beq	1c2a0 <__flatcc_gen_sort@@Base+0x1e7c>
   1c248:	ldrh	r3, [r5, #72]	; 0x48
   1c24c:	tst	r3, #4
   1c250:	bne	1c23c <__flatcc_gen_sort@@Base+0x1e18>
   1c254:	ldrh	r2, [r5, #24]
   1c258:	ldr	r3, [r5, #4]
   1c25c:	ldrd	r8, [r5, #96]	; 0x60
   1c260:	cmp	r2, #14
   1c264:	ldrd	r2, [r3]
   1c268:	bne	1c224 <__flatcc_gen_sort@@Base+0x1e00>
   1c26c:	ldr	r1, [r5, #16]
   1c270:	ldrh	r1, [r1, #8]
   1c274:	cmp	r1, #4
   1c278:	bne	1c224 <__flatcc_gen_sort@@Base+0x1e00>
   1c27c:	str	r2, [sp]
   1c280:	mov	r2, fp
   1c284:	strd	r8, [sp, #8]
   1c288:	ldr	r1, [sp, #48]	; 0x30
   1c28c:	bl	1406c <fprintf@plt>
   1c290:	ldr	r3, [sp, #60]	; 0x3c
   1c294:	ldr	r0, [r4, #204]	; 0xcc
   1c298:	str	r3, [sp, #36]	; 0x24
   1c29c:	b	1c23c <__flatcc_gen_sort@@Base+0x1e18>
   1c2a0:	add	r3, sp, #36	; 0x24
   1c2a4:	ldm	r3, {r3, r8, r9}
   1c2a8:	tst	r3, #1
   1c2ac:	beq	1bfb0 <__flatcc_gen_sort@@Base+0x1b8c>
   1c2b0:	ldr	r5, [r6, #24]
   1c2b4:	cmp	r5, #0
   1c2b8:	beq	1bfb0 <__flatcc_gen_sort@@Base+0x1b8c>
   1c2bc:	movw	r7, #41268	; 0xa134
   1c2c0:	movt	r7, #4
   1c2c4:	strd	r6, [sp, #36]	; 0x24
   1c2c8:	b	1c2d8 <__flatcc_gen_sort@@Base+0x1eb4>
   1c2cc:	ldr	r5, [r5, #108]	; 0x6c
   1c2d0:	cmp	r5, #0
   1c2d4:	beq	1c334 <__flatcc_gen_sort@@Base+0x1f10>
   1c2d8:	ldrh	r3, [r5, #72]	; 0x48
   1c2dc:	tst	r3, #4
   1c2e0:	bne	1c2cc <__flatcc_gen_sort@@Base+0x1ea8>
   1c2e4:	ldrh	r3, [r5, #24]
   1c2e8:	cmp	r3, #14
   1c2ec:	bne	1c2cc <__flatcc_gen_sort@@Base+0x1ea8>
   1c2f0:	ldr	r3, [r5, #16]
   1c2f4:	ldrh	r3, [r3, #8]
   1c2f8:	cmp	r3, #4
   1c2fc:	bne	1c2cc <__flatcc_gen_sort@@Base+0x1ea8>
   1c300:	ldr	ip, [r5, #4]
   1c304:	mov	r2, fp
   1c308:	ldrd	r6, [r5, #96]	; 0x60
   1c30c:	ldr	r1, [sp, #40]	; 0x28
   1c310:	ldr	r3, [ip, #4]
   1c314:	strd	r6, [sp, #8]
   1c318:	ldr	ip, [ip]
   1c31c:	str	ip, [sp]
   1c320:	bl	1406c <fprintf@plt>
   1c324:	ldr	r5, [r5, #108]	; 0x6c
   1c328:	ldr	r0, [r4, #204]	; 0xcc
   1c32c:	cmp	r5, #0
   1c330:	bne	1c2d8 <__flatcc_gen_sort@@Base+0x1eb4>
   1c334:	ldr	r6, [sp, #36]	; 0x24
   1c338:	b	1bfb0 <__flatcc_gen_sort@@Base+0x1b8c>
   1c33c:	mov	r6, r3
   1c340:	b	1b930 <__flatcc_gen_sort@@Base+0x150c>
   1c344:	ldr	r0, [r4, #204]	; 0xcc
   1c348:	b	1bb74 <__flatcc_gen_sort@@Base+0x1750>
   1c34c:	mov	r0, r3
   1c350:	movw	r1, #38948	; 0x9824
   1c354:	movt	r1, #4
   1c358:	ldr	r2, [sp, #36]	; 0x24
   1c35c:	bl	1406c <fprintf@plt>
   1c360:	ldr	r0, [r4, #204]	; 0xcc
   1c364:	b	1bb50 <__flatcc_gen_sort@@Base+0x172c>
   1c368:	mov	r0, #10
   1c36c:	ldr	r1, [r4, #204]	; 0xcc
   1c370:	bl	140cc <fputc@plt>
   1c374:	b	1b6e0 <__flatcc_gen_sort@@Base+0x12bc>
   1c378:	mov	r0, r1
   1c37c:	mov	r2, sl
   1c380:	ldr	r1, [sp, #44]	; 0x2c
   1c384:	bl	1406c <fprintf@plt>
   1c388:	ldr	r0, [r4, #204]	; 0xcc
   1c38c:	b	1b7e8 <__flatcc_gen_sort@@Base+0x13c4>
   1c390:	cmp	r5, #0
   1c394:	beq	1c018 <__flatcc_gen_sort@@Base+0x1bf4>
   1c398:	mov	r0, #10
   1c39c:	ldr	r1, [r4, #204]	; 0xcc
   1c3a0:	bl	140cc <fputc@plt>
   1c3a4:	b	1bbbc <__flatcc_gen_sort@@Base+0x1798>
   1c3a8:	ldr	r0, [r4, #204]	; 0xcc
   1c3ac:	b	1bfb0 <__flatcc_gen_sort@@Base+0x1b8c>
   1c3b0:	movw	r1, #38988	; 0x984c
   1c3b4:	movt	r1, #4
   1c3b8:	movw	r3, #49320	; 0xc0a8
   1c3bc:	movt	r3, #6
   1c3c0:	movw	r2, #38704	; 0x9730
   1c3c4:	movt	r2, #4
   1c3c8:	str	r1, [sp]
   1c3cc:	movw	r1, #4944	; 0x1350
   1c3d0:	movt	r1, #4
   1c3d4:	ldr	r0, [r3]
   1c3d8:	movw	r3, #1209	; 0x4b9
   1c3dc:	bl	1406c <fprintf@plt>
   1c3e0:	movw	r1, #38704	; 0x9730
   1c3e4:	movt	r1, #4
   1c3e8:	ldr	r3, [pc, #320]	; 1c530 <__flatcc_gen_sort@@Base+0x210c>
   1c3ec:	movw	r0, #41608	; 0xa288
   1c3f0:	movt	r0, #4
   1c3f4:	movw	r2, #1209	; 0x4b9
   1c3f8:	bl	14120 <__assert_fail@plt>
   1c3fc:	movw	r1, #40424	; 0x9de8
   1c400:	movt	r1, #4
   1c404:	movw	r3, #49320	; 0xc0a8
   1c408:	movt	r3, #6
   1c40c:	movw	r2, #38704	; 0x9730
   1c410:	movt	r2, #4
   1c414:	str	r1, [sp]
   1c418:	movw	r1, #4944	; 0x1350
   1c41c:	movt	r1, #4
   1c420:	ldr	r0, [r3]
   1c424:	movw	r3, #1189	; 0x4a5
   1c428:	bl	1406c <fprintf@plt>
   1c42c:	movw	r1, #38704	; 0x9730
   1c430:	movt	r1, #4
   1c434:	ldr	r3, [pc, #244]	; 1c530 <__flatcc_gen_sort@@Base+0x210c>
   1c438:	movw	r0, #41608	; 0xa288
   1c43c:	movt	r0, #4
   1c440:	movw	r2, #1189	; 0x4a5
   1c444:	bl	14120 <__assert_fail@plt>
   1c448:	movw	r1, #40332	; 0x9d8c
   1c44c:	movt	r1, #4
   1c450:	movw	r3, #49320	; 0xc0a8
   1c454:	movt	r3, #6
   1c458:	movw	r2, #38704	; 0x9730
   1c45c:	movt	r2, #4
   1c460:	str	r1, [sp]
   1c464:	movw	r1, #4944	; 0x1350
   1c468:	movt	r1, #4
   1c46c:	ldr	r0, [r3]
   1c470:	movw	r3, #1173	; 0x495
   1c474:	bl	1406c <fprintf@plt>
   1c478:	movw	r1, #38704	; 0x9730
   1c47c:	movt	r1, #4
   1c480:	ldr	r3, [pc, #168]	; 1c530 <__flatcc_gen_sort@@Base+0x210c>
   1c484:	movw	r0, #41608	; 0xa288
   1c488:	movt	r0, #4
   1c48c:	movw	r2, #1173	; 0x495
   1c490:	bl	14120 <__assert_fail@plt>
   1c494:	movw	r1, #4956	; 0x135c
   1c498:	movt	r1, #4
   1c49c:	movw	r3, #49320	; 0xc0a8
   1c4a0:	movt	r3, #6
   1c4a4:	movw	r2, #4868	; 0x1304
   1c4a8:	movt	r2, #4
   1c4ac:	str	r1, [sp]
   1c4b0:	movw	r1, #4944	; 0x1350
   1c4b4:	movt	r1, #4
   1c4b8:	ldr	r0, [r3]
   1c4bc:	mov	r3, #96	; 0x60
   1c4c0:	bl	1406c <fprintf@plt>
   1c4c4:	movw	r1, #4868	; 0x1304
   1c4c8:	movt	r1, #4
   1c4cc:	ldr	r3, [pc, #96]	; 1c534 <__flatcc_gen_sort@@Base+0x2110>
   1c4d0:	movw	r0, #41608	; 0xa288
   1c4d4:	movt	r0, #4
   1c4d8:	mov	r2, #96	; 0x60
   1c4dc:	bl	14120 <__assert_fail@plt>
   1c4e0:	movw	r1, #4956	; 0x135c
   1c4e4:	movt	r1, #4
   1c4e8:	movw	r3, #49320	; 0xc0a8
   1c4ec:	movt	r3, #6
   1c4f0:	movw	r2, #4868	; 0x1304
   1c4f4:	movt	r2, #4
   1c4f8:	str	r1, [sp]
   1c4fc:	movw	r1, #4944	; 0x1350
   1c500:	movt	r1, #4
   1c504:	ldr	r0, [r3]
   1c508:	mov	r3, #141	; 0x8d
   1c50c:	bl	1406c <fprintf@plt>
   1c510:	movw	r1, #4868	; 0x1304
   1c514:	movt	r1, #4
   1c518:	ldr	r3, [pc, #24]	; 1c538 <__flatcc_gen_sort@@Base+0x2114>
   1c51c:	movw	r0, #41608	; 0xa288
   1c520:	movt	r0, #4
   1c524:	mov	r2, #141	; 0x8d
   1c528:	bl	14120 <__assert_fail@plt>
   1c52c:	andeq	r9, r4, r0, ror #12
   1c530:	andeq	r9, r4, r4, lsr r6
   1c534:	andeq	r9, r4, ip, asr #12
   1c538:	andeq	r9, r4, ip, lsl #11
   1c53c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c540:	mov	r4, r1
   1c544:	mov	r1, #0
   1c548:	strd	r6, [sp, #8]
   1c54c:	strd	r8, [sp, #16]
   1c550:	mov	r9, r0
   1c554:	strd	sl, [sp, #24]
   1c558:	mov	fp, r3
   1c55c:	str	lr, [sp, #32]
   1c560:	sub	sp, sp, #284	; 0x11c
   1c564:	add	r0, sp, #60	; 0x3c
   1c568:	str	r2, [sp, #32]
   1c56c:	mov	r2, #220	; 0xdc
   1c570:	bl	14084 <memset@plt>
   1c574:	cmp	fp, #1
   1c578:	beq	1cc28 <__flatcc_gen_sort@@Base+0x2804>
   1c57c:	movw	r3, #45408	; 0xb160
   1c580:	movt	r3, #4
   1c584:	cmp	fp, #2
   1c588:	movw	r2, #41436	; 0xa1dc
   1c58c:	movt	r2, #4
   1c590:	movne	r2, r3
   1c594:	str	r2, [sp, #36]	; 0x24
   1c598:	ldr	r4, [r4]
   1c59c:	cmp	r4, #0
   1c5a0:	moveq	r5, r4
   1c5a4:	beq	1c79c <__flatcc_gen_sort@@Base+0x2378>
   1c5a8:	ldr	r3, [r4, #4]
   1c5ac:	movw	r2, #41776	; 0xa330
   1c5b0:	movt	r2, #4
   1c5b4:	mov	r5, #0
   1c5b8:	str	r2, [sp, #24]
   1c5bc:	movw	r2, #41756	; 0xa31c
   1c5c0:	movt	r2, #4
   1c5c4:	mov	sl, r5
   1c5c8:	str	r2, [sp, #28]
   1c5cc:	movw	r2, #38208	; 0x9540
   1c5d0:	movt	r2, #4
   1c5d4:	ldr	r7, [r3]
   1c5d8:	str	r2, [sp, #20]
   1c5dc:	ldr	r6, [r3, #4]
   1c5e0:	ldrh	r3, [r4, #24]
   1c5e4:	cmp	r3, #8
   1c5e8:	bne	1c6b4 <__flatcc_gen_sort@@Base+0x2290>
   1c5ec:	ldr	r1, [r4, #16]
   1c5f0:	sub	r1, r1, #1
   1c5f4:	cmp	r1, #10
   1c5f8:	bhi	1ce54 <__flatcc_gen_sort@@Base+0x2a30>
   1c5fc:	ldrh	r3, [r4, #72]	; 0x48
   1c600:	add	r8, r5, #1
   1c604:	ldr	r0, [r9, #204]	; 0xcc
   1c608:	tst	r3, #4
   1c60c:	bne	1c778 <__flatcc_gen_sort@@Base+0x2354>
   1c610:	ldrd	r2, [r4, #88]	; 0x58
   1c614:	cmp	r3, #0
   1c618:	cmpeq	r2, #1
   1c61c:	beq	1c73c <__flatcc_gen_sort@@Base+0x2318>
   1c620:	ldr	r3, [sp, #20]
   1c624:	cmp	fp, #1
   1c628:	add	r1, r3, r1, lsl #2
   1c62c:	ldr	r3, [r1, #120]	; 0x78
   1c630:	beq	1c830 <__flatcc_gen_sort@@Base+0x240c>
   1c634:	cmp	fp, #2
   1c638:	bne	1c73c <__flatcc_gen_sort@@Base+0x2318>
   1c63c:	ldr	r2, [sp, #320]	; 0x140
   1c640:	str	r6, [sp]
   1c644:	cmp	r2, #0
   1c648:	beq	1caec <__flatcc_gen_sort@@Base+0x26c8>
   1c64c:	movw	r1, #41868	; 0xa38c
   1c650:	movt	r1, #4
   1c654:	str	r7, [sp, #4]
   1c658:	mov	r2, r9
   1c65c:	strd	r6, [sp, #8]
   1c660:	bl	1406c <fprintf@plt>
   1c664:	mov	r5, r8
   1c668:	ldr	r4, [r4]
   1c66c:	cmp	r4, #0
   1c670:	beq	1c79c <__flatcc_gen_sort@@Base+0x2378>
   1c674:	ldr	r3, [r4, #4]
   1c678:	cmp	r5, #0
   1c67c:	ldr	r7, [r3]
   1c680:	ldr	r6, [r3, #4]
   1c684:	ble	1c5e0 <__flatcc_gen_sort@@Base+0x21bc>
   1c688:	tst	r5, #3
   1c68c:	ldr	r3, [r9, #204]	; 0xcc
   1c690:	bne	1c760 <__flatcc_gen_sort@@Base+0x233c>
   1c694:	movw	r0, #41456	; 0xa1f0
   1c698:	movt	r0, #4
   1c69c:	mov	r2, #4
   1c6a0:	mov	r1, #1
   1c6a4:	bl	13ff4 <fwrite@plt>
   1c6a8:	ldrh	r3, [r4, #24]
   1c6ac:	cmp	r3, #8
   1c6b0:	beq	1c5ec <__flatcc_gen_sort@@Base+0x21c8>
   1c6b4:	cmp	r3, #14
   1c6b8:	bne	1cd58 <__flatcc_gen_sort@@Base+0x2934>
   1c6bc:	ldr	r1, [r4, #16]
   1c6c0:	add	r2, sp, #60	; 0x3c
   1c6c4:	ldr	r0, [r1, #12]
   1c6c8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1c6cc:	ldr	r3, [r4, #16]
   1c6d0:	ldrh	r3, [r3, #8]
   1c6d4:	cmp	r3, #1
   1c6d8:	ldrh	r3, [r4, #72]	; 0x48
   1c6dc:	beq	1c7f4 <__flatcc_gen_sort@@Base+0x23d0>
   1c6e0:	tst	r3, #4
   1c6e4:	add	r8, r5, #1
   1c6e8:	ldr	r0, [r9, #204]	; 0xcc
   1c6ec:	bne	1c778 <__flatcc_gen_sort@@Base+0x2354>
   1c6f0:	ldrd	r2, [r4, #88]	; 0x58
   1c6f4:	cmp	r3, #0
   1c6f8:	cmpeq	r2, #1
   1c6fc:	beq	1c73c <__flatcc_gen_sort@@Base+0x2318>
   1c700:	cmp	fp, #1
   1c704:	beq	1c9c4 <__flatcc_gen_sort@@Base+0x25a0>
   1c708:	cmp	fp, #2
   1c70c:	bne	1c73c <__flatcc_gen_sort@@Base+0x2318>
   1c710:	ldr	r3, [sp, #320]	; 0x140
   1c714:	str	r7, [sp]
   1c718:	cmp	r3, #0
   1c71c:	mov	r3, r6
   1c720:	beq	1cb3c <__flatcc_gen_sort@@Base+0x2718>
   1c724:	movw	r1, #41688	; 0xa2d8
   1c728:	movt	r1, #4
   1c72c:	strd	r6, [sp, #4]
   1c730:	add	r2, sp, #60	; 0x3c
   1c734:	bl	1406c <fprintf@plt>
   1c738:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1c73c:	ldr	r3, [sp, #320]	; 0x140
   1c740:	cmp	r3, #0
   1c744:	mov	r3, r7
   1c748:	beq	1c7e0 <__flatcc_gen_sort@@Base+0x23bc>
   1c74c:	mov	r2, r6
   1c750:	strd	r6, [sp]
   1c754:	ldr	r1, [sp, #28]
   1c758:	bl	1406c <fprintf@plt>
   1c75c:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1c760:	movw	r0, #41464	; 0xa1f8
   1c764:	movt	r0, #4
   1c768:	mov	r2, #2
   1c76c:	mov	r1, #1
   1c770:	bl	13ff4 <fwrite@plt>
   1c774:	b	1c5e0 <__flatcc_gen_sort@@Base+0x21bc>
   1c778:	mov	r2, sl
   1c77c:	movw	r1, #41588	; 0xa274
   1c780:	movt	r1, #4
   1c784:	add	sl, sl, #1
   1c788:	bl	1406c <fprintf@plt>
   1c78c:	ldr	r4, [r4]
   1c790:	mov	r5, r8
   1c794:	cmp	r4, #0
   1c798:	bne	1c674 <__flatcc_gen_sort@@Base+0x2250>
   1c79c:	ldr	r3, [sp, #32]
   1c7a0:	cmp	r3, #0
   1c7a4:	ble	1c7c0 <__flatcc_gen_sort@@Base+0x239c>
   1c7a8:	movw	r0, #41456	; 0xa1f0
   1c7ac:	movt	r0, #4
   1c7b0:	ldr	r3, [r9, #204]	; 0xcc
   1c7b4:	mov	r2, #4
   1c7b8:	mov	r1, #1
   1c7bc:	bl	13ff4 <fwrite@plt>
   1c7c0:	mov	r0, r5
   1c7c4:	add	sp, sp, #284	; 0x11c
   1c7c8:	ldrd	r4, [sp]
   1c7cc:	ldrd	r6, [sp, #8]
   1c7d0:	ldrd	r8, [sp, #16]
   1c7d4:	ldrd	sl, [sp, #24]
   1c7d8:	add	sp, sp, #32
   1c7dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7e0:	mov	r2, r6
   1c7e4:	str	r5, [sp]
   1c7e8:	ldr	r1, [sp, #24]
   1c7ec:	bl	1406c <fprintf@plt>
   1c7f0:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1c7f4:	tst	r3, #4
   1c7f8:	ldr	r0, [r9, #204]	; 0xcc
   1c7fc:	bne	1c968 <__flatcc_gen_sort@@Base+0x2544>
   1c800:	ldr	r3, [sp, #320]	; 0x140
   1c804:	cmp	r3, #0
   1c808:	beq	1c85c <__flatcc_gen_sort@@Base+0x2438>
   1c80c:	movw	r1, #41528	; 0xa238
   1c810:	movt	r1, #4
   1c814:	strd	r6, [sp]
   1c818:	add	r2, sp, #60	; 0x3c
   1c81c:	strd	r6, [sp, #8]
   1c820:	add	r5, r5, #1
   1c824:	ldr	r3, [sp, #36]	; 0x24
   1c828:	bl	1406c <fprintf@plt>
   1c82c:	b	1c668 <__flatcc_gen_sort@@Base+0x2244>
   1c830:	ldr	r2, [sp, #320]	; 0x140
   1c834:	str	r6, [sp]
   1c838:	cmp	r2, #0
   1c83c:	beq	1cb08 <__flatcc_gen_sort@@Base+0x26e4>
   1c840:	movw	r1, #41792	; 0xa340
   1c844:	movt	r1, #4
   1c848:	str	r7, [sp, #4]
   1c84c:	mov	r2, r9
   1c850:	strd	r6, [sp, #8]
   1c854:	bl	1406c <fprintf@plt>
   1c858:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1c85c:	movw	r1, #41560	; 0xa258
   1c860:	movt	r1, #4
   1c864:	strd	r6, [sp]
   1c868:	add	r2, sp, #60	; 0x3c
   1c86c:	ldr	r3, [sp, #36]	; 0x24
   1c870:	bl	1406c <fprintf@plt>
   1c874:	ldr	r3, [r4, #16]
   1c878:	ldr	r1, [r3, #20]
   1c87c:	cmp	r1, #0
   1c880:	beq	1c958 <__flatcc_gen_sort@@Base+0x2534>
   1c884:	ldr	r8, [sp, #320]	; 0x140
   1c888:	ldrh	r3, [r1, #72]	; 0x48
   1c88c:	ands	r3, r3, #4
   1c890:	bne	1c8a4 <__flatcc_gen_sort@@Base+0x2480>
   1c894:	ldrh	r2, [r1, #24]
   1c898:	cmp	r2, #14
   1c89c:	beq	1c9f0 <__flatcc_gen_sort@@Base+0x25cc>
   1c8a0:	add	r8, r8, #1
   1c8a4:	ldr	r1, [r1]
   1c8a8:	cmp	r1, #0
   1c8ac:	bne	1c888 <__flatcc_gen_sort@@Base+0x2464>
   1c8b0:	cmp	r8, #0
   1c8b4:	ble	1c958 <__flatcc_gen_sort@@Base+0x2534>
   1c8b8:	ldr	r3, [sp, #32]
   1c8bc:	cmp	r3, #0
   1c8c0:	beq	1cbec <__flatcc_gen_sort@@Base+0x27c8>
   1c8c4:	cmp	r3, #4
   1c8c8:	mov	r6, r1
   1c8cc:	bgt	1cb54 <__flatcc_gen_sort@@Base+0x2730>
   1c8d0:	movw	r2, #10080	; 0x2760
   1c8d4:	movt	r2, #4
   1c8d8:	str	r4, [sp, #40]	; 0x28
   1c8dc:	movw	r3, #38956	; 0x982c
   1c8e0:	movt	r3, #4
   1c8e4:	mov	r4, r3
   1c8e8:	str	r2, [sp, #44]	; 0x2c
   1c8ec:	movw	r2, #38948	; 0x9824
   1c8f0:	movt	r2, #4
   1c8f4:	str	r2, [sp, #48]	; 0x30
   1c8f8:	cmp	r6, #0
   1c8fc:	add	r7, r5, r6
   1c900:	ldr	r3, [r9, #204]	; 0xcc
   1c904:	beq	1c920 <__flatcc_gen_sort@@Base+0x24fc>
   1c908:	tst	r6, #3
   1c90c:	bne	1c920 <__flatcc_gen_sort@@Base+0x24fc>
   1c910:	ldr	r2, [sp, #32]
   1c914:	sub	r2, r2, r6
   1c918:	cmp	r2, #2
   1c91c:	bgt	1cc38 <__flatcc_gen_sort@@Base+0x2814>
   1c920:	mov	r2, #2
   1c924:	mov	r1, #1
   1c928:	mov	r0, r4
   1c92c:	bl	13ff4 <fwrite@plt>
   1c930:	ldr	r0, [r9, #204]	; 0xcc
   1c934:	mov	r2, r7
   1c938:	add	r6, r6, #1
   1c93c:	movw	r1, #41584	; 0xa270
   1c940:	movt	r1, #4
   1c944:	bl	1406c <fprintf@plt>
   1c948:	cmp	r8, r6
   1c94c:	bne	1c8f8 <__flatcc_gen_sort@@Base+0x24d4>
   1c950:	ldr	r4, [sp, #40]	; 0x28
   1c954:	add	r5, r8, r5
   1c958:	mov	r0, #41	; 0x29
   1c95c:	ldr	r1, [r9, #204]	; 0xcc
   1c960:	bl	140cc <fputc@plt>
   1c964:	b	1c668 <__flatcc_gen_sort@@Base+0x2244>
   1c968:	mov	r3, sl
   1c96c:	mov	r2, sl
   1c970:	movw	r1, #41468	; 0xa1fc
   1c974:	movt	r1, #4
   1c978:	bl	1406c <fprintf@plt>
   1c97c:	ldr	r3, [r4, #16]
   1c980:	add	sl, sl, #1
   1c984:	ldr	r1, [r3, #20]
   1c988:	cmp	r1, #0
   1c98c:	beq	1c668 <__flatcc_gen_sort@@Base+0x2244>
   1c990:	mov	r8, #0
   1c994:	ldrh	r3, [r1, #72]	; 0x48
   1c998:	ands	r3, r3, #4
   1c99c:	bne	1c9b0 <__flatcc_gen_sort@@Base+0x258c>
   1c9a0:	ldrh	r2, [r1, #24]
   1c9a4:	cmp	r2, #14
   1c9a8:	beq	1ca6c <__flatcc_gen_sort@@Base+0x2648>
   1c9ac:	add	r8, r8, #1
   1c9b0:	ldr	r1, [r1]
   1c9b4:	cmp	r1, #0
   1c9b8:	bne	1c994 <__flatcc_gen_sort@@Base+0x2570>
   1c9bc:	add	r5, r5, r8
   1c9c0:	b	1c668 <__flatcc_gen_sort@@Base+0x2244>
   1c9c4:	ldr	r3, [sp, #320]	; 0x140
   1c9c8:	str	r7, [sp]
   1c9cc:	cmp	r3, #0
   1c9d0:	mov	r3, r6
   1c9d4:	beq	1cb24 <__flatcc_gen_sort@@Base+0x2700>
   1c9d8:	movw	r1, #41612	; 0xa28c
   1c9dc:	movt	r1, #4
   1c9e0:	strd	r6, [sp, #4]
   1c9e4:	add	r2, sp, #60	; 0x3c
   1c9e8:	bl	1406c <fprintf@plt>
   1c9ec:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1c9f0:	ldr	r2, [r1, #16]
   1c9f4:	ldrh	r0, [r2, #8]
   1c9f8:	cmp	r0, #1
   1c9fc:	bne	1c8a0 <__flatcc_gen_sort@@Base+0x247c>
   1ca00:	ldr	r2, [r2, #20]
   1ca04:	cmp	r2, #0
   1ca08:	beq	1c8a4 <__flatcc_gen_sort@@Base+0x2480>
   1ca0c:	mov	r6, r2
   1ca10:	mov	r7, r3
   1ca14:	str	r9, [sp, #44]	; 0x2c
   1ca18:	mov	r2, fp
   1ca1c:	mov	r9, r1
   1ca20:	mov	fp, r5
   1ca24:	mov	r5, r4
   1ca28:	ldrh	r1, [r6, #72]	; 0x48
   1ca2c:	ands	r1, r1, #4
   1ca30:	bne	1ca44 <__flatcc_gen_sort@@Base+0x2620>
   1ca34:	ldrh	r0, [r6, #24]
   1ca38:	cmp	r0, #14
   1ca3c:	beq	1cc50 <__flatcc_gen_sort@@Base+0x282c>
   1ca40:	add	r7, r7, #1
   1ca44:	ldr	r6, [r6]
   1ca48:	cmp	r6, #0
   1ca4c:	bne	1ca28 <__flatcc_gen_sort@@Base+0x2604>
   1ca50:	mov	r4, r5
   1ca54:	mov	r1, r9
   1ca58:	ldr	r9, [sp, #44]	; 0x2c
   1ca5c:	mov	r5, fp
   1ca60:	add	r8, r8, r7
   1ca64:	mov	fp, r2
   1ca68:	b	1c8a4 <__flatcc_gen_sort@@Base+0x2480>
   1ca6c:	ldr	r2, [r1, #16]
   1ca70:	ldrh	r0, [r2, #8]
   1ca74:	cmp	r0, #1
   1ca78:	bne	1c9ac <__flatcc_gen_sort@@Base+0x2588>
   1ca7c:	ldr	r2, [r2, #20]
   1ca80:	cmp	r2, #0
   1ca84:	beq	1c9b0 <__flatcc_gen_sort@@Base+0x258c>
   1ca88:	mov	r6, r2
   1ca8c:	mov	r7, r3
   1ca90:	str	r9, [sp, #44]	; 0x2c
   1ca94:	mov	r2, fp
   1ca98:	mov	r9, r8
   1ca9c:	mov	fp, r5
   1caa0:	mov	r8, r4
   1caa4:	mov	r5, r1
   1caa8:	ldrh	r1, [r6, #72]	; 0x48
   1caac:	ands	r1, r1, #4
   1cab0:	bne	1cac4 <__flatcc_gen_sort@@Base+0x26a0>
   1cab4:	ldrh	r0, [r6, #24]
   1cab8:	cmp	r0, #14
   1cabc:	beq	1ccd4 <__flatcc_gen_sort@@Base+0x28b0>
   1cac0:	add	r7, r7, #1
   1cac4:	ldr	r6, [r6]
   1cac8:	cmp	r6, #0
   1cacc:	bne	1caa8 <__flatcc_gen_sort@@Base+0x2684>
   1cad0:	mov	r1, r5
   1cad4:	mov	r4, r8
   1cad8:	mov	r5, fp
   1cadc:	add	r8, r9, r7
   1cae0:	ldr	r9, [sp, #44]	; 0x2c
   1cae4:	mov	fp, r2
   1cae8:	b	1c9b0 <__flatcc_gen_sort@@Base+0x258c>
   1caec:	movw	r1, #41908	; 0xa3b4
   1caf0:	movt	r1, #4
   1caf4:	str	r7, [sp, #4]
   1caf8:	mov	r2, r9
   1cafc:	str	r5, [sp, #8]
   1cb00:	bl	1406c <fprintf@plt>
   1cb04:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1cb08:	movw	r1, #41832	; 0xa368
   1cb0c:	movt	r1, #4
   1cb10:	str	r7, [sp, #4]
   1cb14:	mov	r2, r9
   1cb18:	str	r5, [sp, #8]
   1cb1c:	bl	1406c <fprintf@plt>
   1cb20:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1cb24:	movw	r1, #41652	; 0xa2b4
   1cb28:	movt	r1, #4
   1cb2c:	str	r5, [sp, #4]
   1cb30:	add	r2, sp, #60	; 0x3c
   1cb34:	bl	1406c <fprintf@plt>
   1cb38:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1cb3c:	movw	r1, #41724	; 0xa2fc
   1cb40:	movt	r1, #4
   1cb44:	str	r5, [sp, #4]
   1cb48:	add	r2, sp, #60	; 0x3c
   1cb4c:	bl	1406c <fprintf@plt>
   1cb50:	b	1c664 <__flatcc_gen_sort@@Base+0x2240>
   1cb54:	movw	r3, #10080	; 0x2760
   1cb58:	movt	r3, #4
   1cb5c:	str	r3, [sp, #44]	; 0x2c
   1cb60:	movw	r3, #38948	; 0x9824
   1cb64:	movt	r3, #4
   1cb68:	str	r3, [sp, #48]	; 0x30
   1cb6c:	movw	r3, #38956	; 0x982c
   1cb70:	movt	r3, #4
   1cb74:	str	r3, [sp, #40]	; 0x28
   1cb78:	b	1cbac <__flatcc_gen_sort@@Base+0x2788>
   1cb7c:	mov	r0, r3
   1cb80:	ldr	r2, [sp, #44]	; 0x2c
   1cb84:	ldr	r1, [sp, #48]	; 0x30
   1cb88:	bl	1406c <fprintf@plt>
   1cb8c:	ldr	r0, [r9, #204]	; 0xcc
   1cb90:	mov	r2, r7
   1cb94:	add	r6, r6, #1
   1cb98:	movw	r1, #41584	; 0xa270
   1cb9c:	movt	r1, #4
   1cba0:	bl	1406c <fprintf@plt>
   1cba4:	cmp	r8, r6
   1cba8:	beq	1c954 <__flatcc_gen_sort@@Base+0x2530>
   1cbac:	cmp	r6, #0
   1cbb0:	add	r7, r6, r5
   1cbb4:	ldr	r3, [r9, #204]	; 0xcc
   1cbb8:	beq	1cb7c <__flatcc_gen_sort@@Base+0x2758>
   1cbbc:	tst	r6, #3
   1cbc0:	bne	1cbd4 <__flatcc_gen_sort@@Base+0x27b0>
   1cbc4:	ldr	r2, [sp, #32]
   1cbc8:	sub	r2, r2, r6
   1cbcc:	cmp	r2, #2
   1cbd0:	bgt	1cb7c <__flatcc_gen_sort@@Base+0x2758>
   1cbd4:	mov	r2, #2
   1cbd8:	mov	r1, #1
   1cbdc:	ldr	r0, [sp, #40]	; 0x28
   1cbe0:	bl	13ff4 <fwrite@plt>
   1cbe4:	ldr	r0, [r9, #204]	; 0xcc
   1cbe8:	b	1cb90 <__flatcc_gen_sort@@Base+0x276c>
   1cbec:	movw	r6, #41584	; 0xa270
   1cbf0:	movt	r6, #4
   1cbf4:	add	r8, r5, r8
   1cbf8:	mov	r2, r5
   1cbfc:	add	r5, r5, #1
   1cc00:	mov	r1, r6
   1cc04:	ldr	r0, [r9, #204]	; 0xcc
   1cc08:	bl	1406c <fprintf@plt>
   1cc0c:	cmp	r5, r8
   1cc10:	mov	r2, r5
   1cc14:	bne	1cbfc <__flatcc_gen_sort@@Base+0x27d8>
   1cc18:	mov	r0, #41	; 0x29
   1cc1c:	ldr	r1, [r9, #204]	; 0xcc
   1cc20:	bl	140cc <fputc@plt>
   1cc24:	b	1c668 <__flatcc_gen_sort@@Base+0x2244>
   1cc28:	movw	r3, #41444	; 0xa1e4
   1cc2c:	movt	r3, #4
   1cc30:	str	r3, [sp, #36]	; 0x24
   1cc34:	b	1c598 <__flatcc_gen_sort@@Base+0x2174>
   1cc38:	mov	r0, r3
   1cc3c:	ldr	r2, [sp, #44]	; 0x2c
   1cc40:	ldr	r1, [sp, #48]	; 0x30
   1cc44:	bl	1406c <fprintf@plt>
   1cc48:	ldr	r0, [r9, #204]	; 0xcc
   1cc4c:	b	1c934 <__flatcc_gen_sort@@Base+0x2510>
   1cc50:	ldr	r0, [r6, #16]
   1cc54:	ldrh	ip, [r0, #8]
   1cc58:	cmp	ip, #1
   1cc5c:	bne	1ca40 <__flatcc_gen_sort@@Base+0x261c>
   1cc60:	ldr	r3, [r0, #20]
   1cc64:	cmp	r3, #0
   1cc68:	beq	1ca44 <__flatcc_gen_sort@@Base+0x2620>
   1cc6c:	str	r1, [sp, #40]	; 0x28
   1cc70:	mov	r1, fp
   1cc74:	mov	fp, r7
   1cc78:	mov	r7, r6
   1cc7c:	mov	r6, r5
   1cc80:	mov	r5, r3
   1cc84:	mov	r3, r1
   1cc88:	ldrh	r1, [r5, #72]	; 0x48
   1cc8c:	ands	r1, r1, #4
   1cc90:	bne	1ccac <__flatcc_gen_sort@@Base+0x2888>
   1cc94:	ldrh	r0, [r5, #24]
   1cc98:	cmp	r0, #14
   1cc9c:	beq	1cda4 <__flatcc_gen_sort@@Base+0x2980>
   1cca0:	ldr	r1, [sp, #40]	; 0x28
   1cca4:	add	r1, r1, #1
   1cca8:	str	r1, [sp, #40]	; 0x28
   1ccac:	ldr	r5, [r5]
   1ccb0:	cmp	r5, #0
   1ccb4:	bne	1cc88 <__flatcc_gen_sort@@Base+0x2864>
   1ccb8:	mov	r5, r6
   1ccbc:	mov	r6, r7
   1ccc0:	mov	r7, fp
   1ccc4:	mov	fp, r3
   1ccc8:	ldr	r3, [sp, #40]	; 0x28
   1cccc:	add	r7, r7, r3
   1ccd0:	b	1ca44 <__flatcc_gen_sort@@Base+0x2620>
   1ccd4:	ldr	r0, [r6, #16]
   1ccd8:	ldrh	ip, [r0, #8]
   1ccdc:	cmp	ip, #1
   1cce0:	bne	1cac0 <__flatcc_gen_sort@@Base+0x269c>
   1cce4:	ldr	r3, [r0, #20]
   1cce8:	cmp	r3, #0
   1ccec:	beq	1cac4 <__flatcc_gen_sort@@Base+0x26a0>
   1ccf0:	str	r1, [sp, #40]	; 0x28
   1ccf4:	mov	r1, fp
   1ccf8:	mov	fp, r7
   1ccfc:	mov	r7, r6
   1cd00:	mov	r6, r5
   1cd04:	mov	r5, r3
   1cd08:	mov	r3, r1
   1cd0c:	ldrh	r1, [r5, #72]	; 0x48
   1cd10:	ands	r1, r1, #4
   1cd14:	bne	1cd30 <__flatcc_gen_sort@@Base+0x290c>
   1cd18:	ldrh	r0, [r5, #24]
   1cd1c:	cmp	r0, #14
   1cd20:	beq	1cdfc <__flatcc_gen_sort@@Base+0x29d8>
   1cd24:	ldr	r1, [sp, #40]	; 0x28
   1cd28:	add	r1, r1, #1
   1cd2c:	str	r1, [sp, #40]	; 0x28
   1cd30:	ldr	r5, [r5]
   1cd34:	cmp	r5, #0
   1cd38:	bne	1cd0c <__flatcc_gen_sort@@Base+0x28e8>
   1cd3c:	mov	r5, r6
   1cd40:	mov	r6, r7
   1cd44:	mov	r7, fp
   1cd48:	mov	fp, r3
   1cd4c:	ldr	r3, [sp, #40]	; 0x28
   1cd50:	add	r7, r7, r3
   1cd54:	b	1cac4 <__flatcc_gen_sort@@Base+0x26a0>
   1cd58:	movw	r1, #41944	; 0xa3d8
   1cd5c:	movt	r1, #4
   1cd60:	movw	r3, #49320	; 0xc0a8
   1cd64:	movt	r3, #6
   1cd68:	movw	r2, #38704	; 0x9730
   1cd6c:	movt	r2, #4
   1cd70:	str	r1, [sp]
   1cd74:	movw	r1, #4944	; 0x1350
   1cd78:	movt	r1, #4
   1cd7c:	ldr	r0, [r3]
   1cd80:	movw	r3, #993	; 0x3e1
   1cd84:	bl	1406c <fprintf@plt>
   1cd88:	movw	r1, #38704	; 0x9730
   1cd8c:	movt	r1, #4
   1cd90:	ldr	r3, [pc, #360]	; 1cf00 <__flatcc_gen_sort@@Base+0x2adc>
   1cd94:	movw	r0, #41608	; 0xa288
   1cd98:	movt	r0, #4
   1cd9c:	movw	r2, #993	; 0x3e1
   1cda0:	bl	14120 <__assert_fail@plt>
   1cda4:	ldr	r0, [r5, #16]
   1cda8:	ldrh	ip, [r0, #8]
   1cdac:	cmp	ip, #1
   1cdb0:	bne	1cca0 <__flatcc_gen_sort@@Base+0x287c>
   1cdb4:	ldr	r4, [r0, #20]
   1cdb8:	cmp	r4, #0
   1cdbc:	moveq	r1, r4
   1cdc0:	beq	1cdec <__flatcc_gen_sort@@Base+0x29c8>
   1cdc4:	ldrh	r0, [r4, #72]	; 0x48
   1cdc8:	tst	r0, #4
   1cdcc:	bne	1cde0 <__flatcc_gen_sort@@Base+0x29bc>
   1cdd0:	ldrh	r0, [r4, #24]
   1cdd4:	cmp	r0, #14
   1cdd8:	beq	1ced0 <__flatcc_gen_sort@@Base+0x2aac>
   1cddc:	add	r1, r1, #1
   1cde0:	ldr	r4, [r4]
   1cde4:	cmp	r4, #0
   1cde8:	bne	1cdc4 <__flatcc_gen_sort@@Base+0x29a0>
   1cdec:	ldr	r0, [sp, #40]	; 0x28
   1cdf0:	add	r1, r0, r1
   1cdf4:	str	r1, [sp, #40]	; 0x28
   1cdf8:	b	1ccac <__flatcc_gen_sort@@Base+0x2888>
   1cdfc:	ldr	r0, [r5, #16]
   1ce00:	ldrh	ip, [r0, #8]
   1ce04:	cmp	ip, #1
   1ce08:	bne	1cd24 <__flatcc_gen_sort@@Base+0x2900>
   1ce0c:	ldr	r4, [r0, #20]
   1ce10:	cmp	r4, #0
   1ce14:	moveq	r1, r4
   1ce18:	beq	1ce44 <__flatcc_gen_sort@@Base+0x2a20>
   1ce1c:	ldrh	r0, [r4, #72]	; 0x48
   1ce20:	tst	r0, #4
   1ce24:	bne	1ce38 <__flatcc_gen_sort@@Base+0x2a14>
   1ce28:	ldrh	r0, [r4, #24]
   1ce2c:	cmp	r0, #14
   1ce30:	beq	1cea0 <__flatcc_gen_sort@@Base+0x2a7c>
   1ce34:	add	r1, r1, #1
   1ce38:	ldr	r4, [r4]
   1ce3c:	cmp	r4, #0
   1ce40:	bne	1ce1c <__flatcc_gen_sort@@Base+0x29f8>
   1ce44:	ldr	r0, [sp, #40]	; 0x28
   1ce48:	add	r1, r0, r1
   1ce4c:	str	r1, [sp, #40]	; 0x28
   1ce50:	b	1cd30 <__flatcc_gen_sort@@Base+0x290c>
   1ce54:	movw	r1, #4956	; 0x135c
   1ce58:	movt	r1, #4
   1ce5c:	movw	r3, #49320	; 0xc0a8
   1ce60:	movt	r3, #6
   1ce64:	movw	r2, #4868	; 0x1304
   1ce68:	movt	r2, #4
   1ce6c:	str	r1, [sp]
   1ce70:	movw	r1, #4944	; 0x1350
   1ce74:	movt	r1, #4
   1ce78:	ldr	r0, [r3]
   1ce7c:	mov	r3, #96	; 0x60
   1ce80:	bl	1406c <fprintf@plt>
   1ce84:	movw	r1, #4868	; 0x1304
   1ce88:	movt	r1, #4
   1ce8c:	ldr	r3, [pc, #112]	; 1cf04 <__flatcc_gen_sort@@Base+0x2ae0>
   1ce90:	movw	r0, #41608	; 0xa288
   1ce94:	movt	r0, #4
   1ce98:	mov	r2, #96	; 0x60
   1ce9c:	bl	14120 <__assert_fail@plt>
   1cea0:	ldr	r0, [r4, #16]
   1cea4:	ldrh	ip, [r0, #8]
   1cea8:	cmp	ip, #1
   1ceac:	bne	1ce34 <__flatcc_gen_sort@@Base+0x2a10>
   1ceb0:	ldr	r0, [r0, #20]
   1ceb4:	str	r3, [sp, #48]	; 0x30
   1ceb8:	str	r2, [sp, #52]	; 0x34
   1cebc:	bl	1a7a8 <__flatcc_gen_sort@@Base+0x384>
   1cec0:	add	r1, r1, r0
   1cec4:	ldr	r3, [sp, #48]	; 0x30
   1cec8:	ldr	r2, [sp, #52]	; 0x34
   1cecc:	b	1ce38 <__flatcc_gen_sort@@Base+0x2a14>
   1ced0:	ldr	r0, [r4, #16]
   1ced4:	ldrh	ip, [r0, #8]
   1ced8:	cmp	ip, #1
   1cedc:	bne	1cddc <__flatcc_gen_sort@@Base+0x29b8>
   1cee0:	ldr	r0, [r0, #20]
   1cee4:	str	r3, [sp, #48]	; 0x30
   1cee8:	str	r2, [sp, #52]	; 0x34
   1ceec:	bl	1a7a8 <__flatcc_gen_sort@@Base+0x384>
   1cef0:	add	r1, r1, r0
   1cef4:	ldr	r3, [sp, #48]	; 0x30
   1cef8:	ldr	r2, [sp, #52]	; 0x34
   1cefc:	b	1cde0 <__flatcc_gen_sort@@Base+0x29bc>
   1cf00:	andeq	r9, r4, ip, ror #12
   1cf04:	andeq	r9, r4, ip, asr #12

0001cf08 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1cf08:	strd	r4, [sp, #-12]!
   1cf0c:	add	r5, r0, #102	; 0x66
   1cf10:	mov	r4, r0
   1cf14:	mov	r2, r5
   1cf18:	movw	r1, #41972	; 0xa3f4
   1cf1c:	movt	r1, #4
   1cf20:	ldr	r0, [r0, #204]	; 0xcc
   1cf24:	str	lr, [sp, #8]
   1cf28:	sub	sp, sp, #12
   1cf2c:	bl	1406c <fprintf@plt>
   1cf30:	mov	r2, r5
   1cf34:	movw	r1, #42004	; 0xa414
   1cf38:	movt	r1, #4
   1cf3c:	ldr	r0, [r4, #204]	; 0xcc
   1cf40:	bl	1406c <fprintf@plt>
   1cf44:	mov	r2, #81	; 0x51
   1cf48:	mov	r1, #1
   1cf4c:	ldr	r3, [r4, #204]	; 0xcc
   1cf50:	movw	r0, #9724	; 0x25fc
   1cf54:	movt	r0, #4
   1cf58:	bl	13ff4 <fwrite@plt>
   1cf5c:	mov	r2, #53	; 0x35
   1cf60:	movw	r0, #42036	; 0xa434
   1cf64:	movt	r0, #4
   1cf68:	mov	r1, #1
   1cf6c:	ldr	r3, [r4, #204]	; 0xcc
   1cf70:	bl	13ff4 <fwrite@plt>
   1cf74:	ldr	r3, [r4, #204]	; 0xcc
   1cf78:	ldr	r2, [r4, #212]	; 0xd4
   1cf7c:	ldr	r2, [r2, #140]	; 0x8c
   1cf80:	cmp	r2, #0
   1cf84:	bne	1d6f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1cf88:	mov	r2, #22
   1cf8c:	mov	r1, #1
   1cf90:	movw	r0, #42092	; 0xa46c
   1cf94:	movt	r0, #4
   1cf98:	bl	13ff4 <fwrite@plt>
   1cf9c:	mov	r2, #35	; 0x23
   1cfa0:	mov	r1, #1
   1cfa4:	ldr	r3, [r4, #204]	; 0xcc
   1cfa8:	movw	r0, #42116	; 0xa484
   1cfac:	movt	r0, #4
   1cfb0:	bl	13ff4 <fwrite@plt>
   1cfb4:	mov	r2, #7
   1cfb8:	mov	r1, #1
   1cfbc:	ldr	r3, [r4, #204]	; 0xcc
   1cfc0:	movw	r0, #34776	; 0x87d8
   1cfc4:	movt	r0, #4
   1cfc8:	bl	13ff4 <fwrite@plt>
   1cfcc:	movw	r1, #42152	; 0xa4a8
   1cfd0:	movt	r1, #4
   1cfd4:	mov	r0, r4
   1cfd8:	bl	13f94 <strcmp@plt>
   1cfdc:	cmp	r0, #0
   1cfe0:	bne	1d758 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1cfe4:	mov	r3, r4
   1cfe8:	mov	r2, r4
   1cfec:	ldr	r0, [r4, #204]	; 0xcc
   1cff0:	movw	r1, #42492	; 0xa5fc
   1cff4:	movt	r1, #4
   1cff8:	bl	1406c <fprintf@plt>
   1cffc:	mov	r3, r4
   1d000:	mov	r2, r4
   1d004:	ldr	r0, [r4, #204]	; 0xcc
   1d008:	movw	r1, #42520	; 0xa618
   1d00c:	movt	r1, #4
   1d010:	bl	1406c <fprintf@plt>
   1d014:	movw	r1, #10084	; 0x2764
   1d018:	movt	r1, #4
   1d01c:	mov	r0, r4
   1d020:	bl	13f94 <strcmp@plt>
   1d024:	cmp	r0, #0
   1d028:	bne	1d72c <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1d02c:	mov	r0, #10
   1d030:	ldr	r1, [r4, #204]	; 0xcc
   1d034:	bl	140cc <fputc@plt>
   1d038:	mov	r2, r4
   1d03c:	movw	r1, #42648	; 0xa698
   1d040:	movt	r1, #4
   1d044:	ldr	r0, [r4, #204]	; 0xcc
   1d048:	bl	1406c <fprintf@plt>
   1d04c:	mov	r2, r4
   1d050:	movw	r1, #43532	; 0xaa0c
   1d054:	movt	r1, #4
   1d058:	ldr	r0, [r4, #204]	; 0xcc
   1d05c:	bl	1406c <fprintf@plt>
   1d060:	mov	r3, r4
   1d064:	mov	r2, r4
   1d068:	str	r4, [sp]
   1d06c:	movw	r1, #45272	; 0xb0d8
   1d070:	movt	r1, #4
   1d074:	ldr	r0, [r4, #204]	; 0xcc
   1d078:	bl	1406c <fprintf@plt>
   1d07c:	mov	r2, r4
   1d080:	movw	r1, #45412	; 0xb164
   1d084:	movt	r1, #4
   1d088:	ldr	r0, [r4, #204]	; 0xcc
   1d08c:	bl	1406c <fprintf@plt>
   1d090:	mov	r2, r4
   1d094:	movw	r1, #48160	; 0xbc20
   1d098:	movt	r1, #4
   1d09c:	ldr	r0, [r4, #204]	; 0xcc
   1d0a0:	bl	1406c <fprintf@plt>
   1d0a4:	mov	r2, r4
   1d0a8:	movw	r1, #49148	; 0xbffc
   1d0ac:	movt	r1, #4
   1d0b0:	ldr	r0, [r4, #204]	; 0xcc
   1d0b4:	bl	1406c <fprintf@plt>
   1d0b8:	mov	r2, r4
   1d0bc:	movw	r1, #50740	; 0xc634
   1d0c0:	movt	r1, #4
   1d0c4:	ldr	r0, [r4, #204]	; 0xcc
   1d0c8:	bl	1406c <fprintf@plt>
   1d0cc:	mov	r3, r4
   1d0d0:	mov	r2, r4
   1d0d4:	ldr	r0, [r4, #204]	; 0xcc
   1d0d8:	movw	r1, #51888	; 0xcab0
   1d0dc:	movt	r1, #4
   1d0e0:	bl	1406c <fprintf@plt>
   1d0e4:	mov	r3, r4
   1d0e8:	mov	r2, r4
   1d0ec:	str	r4, [sp]
   1d0f0:	movw	r1, #53796	; 0xd224
   1d0f4:	movt	r1, #4
   1d0f8:	ldr	r0, [r4, #204]	; 0xcc
   1d0fc:	bl	1406c <fprintf@plt>
   1d100:	mov	r2, r4
   1d104:	movw	r1, #55148	; 0xd76c
   1d108:	movt	r1, #4
   1d10c:	ldr	r0, [r4, #204]	; 0xcc
   1d110:	bl	1406c <fprintf@plt>
   1d114:	mov	r2, r4
   1d118:	movw	r1, #56300	; 0xdbec
   1d11c:	movt	r1, #4
   1d120:	ldr	r0, [r4, #204]	; 0xcc
   1d124:	bl	1406c <fprintf@plt>
   1d128:	mov	r2, r4
   1d12c:	movw	r1, #56700	; 0xdd7c
   1d130:	movt	r1, #4
   1d134:	ldr	r0, [r4, #204]	; 0xcc
   1d138:	bl	1406c <fprintf@plt>
   1d13c:	mov	r3, r4
   1d140:	mov	r2, r4
   1d144:	ldr	r0, [r4, #204]	; 0xcc
   1d148:	movw	r1, #57560	; 0xe0d8
   1d14c:	movt	r1, #4
   1d150:	bl	1406c <fprintf@plt>
   1d154:	mov	r2, r4
   1d158:	movw	r1, #58080	; 0xe2e0
   1d15c:	movt	r1, #4
   1d160:	ldr	r0, [r4, #204]	; 0xcc
   1d164:	bl	1406c <fprintf@plt>
   1d168:	mov	r3, r4
   1d16c:	mov	r2, r4
   1d170:	str	r4, [sp]
   1d174:	movw	r1, #58956	; 0xe64c
   1d178:	movt	r1, #4
   1d17c:	ldr	r0, [r4, #204]	; 0xcc
   1d180:	bl	1406c <fprintf@plt>
   1d184:	mov	r3, r4
   1d188:	mov	r2, r4
   1d18c:	str	r4, [sp]
   1d190:	movw	r1, #60232	; 0xeb48
   1d194:	movt	r1, #4
   1d198:	str	r4, [sp, #4]
   1d19c:	ldr	r0, [r4, #204]	; 0xcc
   1d1a0:	bl	1406c <fprintf@plt>
   1d1a4:	mov	r3, r4
   1d1a8:	mov	r2, r4
   1d1ac:	ldr	r0, [r4, #204]	; 0xcc
   1d1b0:	movw	r1, #60500	; 0xec54
   1d1b4:	movt	r1, #4
   1d1b8:	bl	1406c <fprintf@plt>
   1d1bc:	mov	r3, r4
   1d1c0:	mov	r2, r4
   1d1c4:	str	r4, [sp]
   1d1c8:	movw	r1, #61372	; 0xefbc
   1d1cc:	movt	r1, #4
   1d1d0:	str	r4, [sp, #4]
   1d1d4:	ldr	r0, [r4, #204]	; 0xcc
   1d1d8:	bl	1406c <fprintf@plt>
   1d1dc:	mov	r3, r4
   1d1e0:	mov	r2, r4
   1d1e4:	ldr	r0, [r4, #204]	; 0xcc
   1d1e8:	movw	r1, #62908	; 0xf5bc
   1d1ec:	movt	r1, #4
   1d1f0:	bl	1406c <fprintf@plt>
   1d1f4:	mov	r2, r4
   1d1f8:	movw	r1, #63344	; 0xf770
   1d1fc:	movt	r1, #4
   1d200:	ldr	r0, [r4, #204]	; 0xcc
   1d204:	bl	1406c <fprintf@plt>
   1d208:	mov	r2, r4
   1d20c:	movw	r1, #63896	; 0xf998
   1d210:	movt	r1, #4
   1d214:	ldr	r0, [r4, #204]	; 0xcc
   1d218:	bl	1406c <fprintf@plt>
   1d21c:	mov	r2, r4
   1d220:	movw	r1, #64856	; 0xfd58
   1d224:	movt	r1, #4
   1d228:	ldr	r0, [r4, #204]	; 0xcc
   1d22c:	bl	1406c <fprintf@plt>
   1d230:	mov	r2, r4
   1d234:	movw	r1, #24
   1d238:	movt	r1, #5
   1d23c:	ldr	r0, [r4, #204]	; 0xcc
   1d240:	bl	1406c <fprintf@plt>
   1d244:	mov	r3, r4
   1d248:	mov	r2, r4
   1d24c:	ldr	r0, [r4, #204]	; 0xcc
   1d250:	movw	r1, #1068	; 0x42c
   1d254:	movt	r1, #5
   1d258:	bl	1406c <fprintf@plt>
   1d25c:	mov	r2, r4
   1d260:	movw	r1, #1304	; 0x518
   1d264:	movt	r1, #5
   1d268:	ldr	r0, [r4, #204]	; 0xcc
   1d26c:	bl	1406c <fprintf@plt>
   1d270:	mov	r2, r4
   1d274:	movw	r1, #1916	; 0x77c
   1d278:	movt	r1, #5
   1d27c:	ldr	r0, [r4, #204]	; 0xcc
   1d280:	bl	1406c <fprintf@plt>
   1d284:	mov	r3, r4
   1d288:	mov	r2, r4
   1d28c:	ldr	r0, [r4, #204]	; 0xcc
   1d290:	movw	r1, #2804	; 0xaf4
   1d294:	movt	r1, #5
   1d298:	bl	1406c <fprintf@plt>
   1d29c:	mov	r3, r4
   1d2a0:	mov	r2, r4
   1d2a4:	ldr	r0, [r4, #204]	; 0xcc
   1d2a8:	movw	r1, #3908	; 0xf44
   1d2ac:	movt	r1, #5
   1d2b0:	bl	1406c <fprintf@plt>
   1d2b4:	mov	r3, r4
   1d2b8:	mov	r2, r4
   1d2bc:	ldr	r0, [r4, #204]	; 0xcc
   1d2c0:	movw	r1, #4572	; 0x11dc
   1d2c4:	movt	r1, #5
   1d2c8:	bl	1406c <fprintf@plt>
   1d2cc:	mov	r3, r4
   1d2d0:	mov	r2, r4
   1d2d4:	ldr	r0, [r4, #204]	; 0xcc
   1d2d8:	movw	r1, #5592	; 0x15d8
   1d2dc:	movt	r1, #5
   1d2e0:	bl	1406c <fprintf@plt>
   1d2e4:	mov	r3, r4
   1d2e8:	mov	r2, r4
   1d2ec:	str	r4, [sp]
   1d2f0:	movw	r1, #5860	; 0x16e4
   1d2f4:	movt	r1, #5
   1d2f8:	ldr	r0, [r4, #204]	; 0xcc
   1d2fc:	bl	1406c <fprintf@plt>
   1d300:	mov	r3, r4
   1d304:	mov	r2, r4
   1d308:	ldr	r0, [r4, #204]	; 0xcc
   1d30c:	movw	r1, #6000	; 0x1770
   1d310:	movt	r1, #5
   1d314:	bl	1406c <fprintf@plt>
   1d318:	mov	r2, r4
   1d31c:	movw	r1, #6844	; 0x1abc
   1d320:	movt	r1, #5
   1d324:	ldr	r0, [r4, #204]	; 0xcc
   1d328:	bl	1406c <fprintf@plt>
   1d32c:	mov	r2, r4
   1d330:	movw	r1, #7492	; 0x1d44
   1d334:	movt	r1, #5
   1d338:	ldr	r0, [r4, #204]	; 0xcc
   1d33c:	bl	1406c <fprintf@plt>
   1d340:	mov	r2, r4
   1d344:	movw	r1, #8148	; 0x1fd4
   1d348:	movt	r1, #5
   1d34c:	ldr	r0, [r4, #204]	; 0xcc
   1d350:	bl	1406c <fprintf@plt>
   1d354:	mov	r3, r4
   1d358:	mov	r2, r4
   1d35c:	str	r4, [sp]
   1d360:	movw	r1, #9612	; 0x258c
   1d364:	movt	r1, #5
   1d368:	ldr	r0, [r4, #204]	; 0xcc
   1d36c:	bl	1406c <fprintf@plt>
   1d370:	mov	r2, r4
   1d374:	movw	r1, #9756	; 0x261c
   1d378:	movt	r1, #5
   1d37c:	ldr	r0, [r4, #204]	; 0xcc
   1d380:	bl	1406c <fprintf@plt>
   1d384:	mov	r2, r4
   1d388:	movw	r1, #9800	; 0x2648
   1d38c:	movt	r1, #5
   1d390:	ldr	r0, [r4, #204]	; 0xcc
   1d394:	bl	1406c <fprintf@plt>
   1d398:	mov	r2, r4
   1d39c:	movw	r1, #9836	; 0x266c
   1d3a0:	movt	r1, #5
   1d3a4:	ldr	r0, [r4, #204]	; 0xcc
   1d3a8:	bl	1406c <fprintf@plt>
   1d3ac:	mov	r2, r4
   1d3b0:	movw	r1, #9880	; 0x2698
   1d3b4:	movt	r1, #5
   1d3b8:	ldr	r0, [r4, #204]	; 0xcc
   1d3bc:	bl	1406c <fprintf@plt>
   1d3c0:	mov	r3, r4
   1d3c4:	mov	r2, r4
   1d3c8:	ldr	r0, [r4, #204]	; 0xcc
   1d3cc:	movw	r1, #9916	; 0x26bc
   1d3d0:	movt	r1, #5
   1d3d4:	bl	1406c <fprintf@plt>
   1d3d8:	mov	r2, r4
   1d3dc:	movw	r1, #9960	; 0x26e8
   1d3e0:	movt	r1, #5
   1d3e4:	ldr	r0, [r4, #204]	; 0xcc
   1d3e8:	bl	1406c <fprintf@plt>
   1d3ec:	mov	r2, r4
   1d3f0:	movw	r1, #9996	; 0x270c
   1d3f4:	movt	r1, #5
   1d3f8:	ldr	r0, [r4, #204]	; 0xcc
   1d3fc:	bl	1406c <fprintf@plt>
   1d400:	mov	r2, r4
   1d404:	movw	r1, #10044	; 0x273c
   1d408:	movt	r1, #5
   1d40c:	ldr	r0, [r4, #204]	; 0xcc
   1d410:	bl	1406c <fprintf@plt>
   1d414:	mov	r2, r4
   1d418:	movw	r1, #10080	; 0x2760
   1d41c:	movt	r1, #5
   1d420:	ldr	r0, [r4, #204]	; 0xcc
   1d424:	bl	1406c <fprintf@plt>
   1d428:	mov	r2, r4
   1d42c:	movw	r1, #10128	; 0x2790
   1d430:	movt	r1, #5
   1d434:	ldr	r0, [r4, #204]	; 0xcc
   1d438:	bl	1406c <fprintf@plt>
   1d43c:	mov	r2, r4
   1d440:	movw	r1, #10164	; 0x27b4
   1d444:	movt	r1, #5
   1d448:	ldr	r0, [r4, #204]	; 0xcc
   1d44c:	bl	1406c <fprintf@plt>
   1d450:	mov	r2, r4
   1d454:	movw	r1, #10212	; 0x27e4
   1d458:	movt	r1, #5
   1d45c:	ldr	r0, [r4, #204]	; 0xcc
   1d460:	bl	1406c <fprintf@plt>
   1d464:	mov	r2, r4
   1d468:	movw	r1, #10248	; 0x2808
   1d46c:	movt	r1, #5
   1d470:	ldr	r0, [r4, #204]	; 0xcc
   1d474:	bl	1406c <fprintf@plt>
   1d478:	mov	r2, r4
   1d47c:	movw	r1, #10292	; 0x2834
   1d480:	movt	r1, #5
   1d484:	ldr	r0, [r4, #204]	; 0xcc
   1d488:	bl	1406c <fprintf@plt>
   1d48c:	mov	r2, r4
   1d490:	movw	r1, #10328	; 0x2858
   1d494:	movt	r1, #5
   1d498:	ldr	r0, [r4, #204]	; 0xcc
   1d49c:	bl	1406c <fprintf@plt>
   1d4a0:	mov	r2, r4
   1d4a4:	movw	r1, #10372	; 0x2884
   1d4a8:	movt	r1, #5
   1d4ac:	ldr	r0, [r4, #204]	; 0xcc
   1d4b0:	bl	1406c <fprintf@plt>
   1d4b4:	mov	r2, r4
   1d4b8:	movw	r1, #10408	; 0x28a8
   1d4bc:	movt	r1, #5
   1d4c0:	ldr	r0, [r4, #204]	; 0xcc
   1d4c4:	bl	1406c <fprintf@plt>
   1d4c8:	mov	r2, r4
   1d4cc:	movw	r1, #10452	; 0x28d4
   1d4d0:	movt	r1, #5
   1d4d4:	ldr	r0, [r4, #204]	; 0xcc
   1d4d8:	bl	1406c <fprintf@plt>
   1d4dc:	mov	r2, r4
   1d4e0:	movw	r1, #10488	; 0x28f8
   1d4e4:	movt	r1, #5
   1d4e8:	ldr	r0, [r4, #204]	; 0xcc
   1d4ec:	bl	1406c <fprintf@plt>
   1d4f0:	mov	r2, r4
   1d4f4:	movw	r1, #10532	; 0x2924
   1d4f8:	movt	r1, #5
   1d4fc:	ldr	r0, [r4, #204]	; 0xcc
   1d500:	bl	1406c <fprintf@plt>
   1d504:	mov	r2, r4
   1d508:	movw	r1, #10568	; 0x2948
   1d50c:	movt	r1, #5
   1d510:	ldr	r0, [r4, #204]	; 0xcc
   1d514:	bl	1406c <fprintf@plt>
   1d518:	mov	r2, r4
   1d51c:	movw	r1, #10612	; 0x2974
   1d520:	movt	r1, #5
   1d524:	ldr	r0, [r4, #204]	; 0xcc
   1d528:	bl	1406c <fprintf@plt>
   1d52c:	mov	r0, #10
   1d530:	ldr	r1, [r4, #204]	; 0xcc
   1d534:	bl	140cc <fputc@plt>
   1d538:	mov	r3, r4
   1d53c:	mov	r2, r4
   1d540:	str	r4, [sp]
   1d544:	movw	r1, #10648	; 0x2998
   1d548:	movt	r1, #5
   1d54c:	ldr	r0, [r4, #204]	; 0xcc
   1d550:	bl	1406c <fprintf@plt>
   1d554:	mov	r3, r4
   1d558:	mov	r2, r4
   1d55c:	str	r4, [sp]
   1d560:	movw	r1, #10688	; 0x29c0
   1d564:	movt	r1, #5
   1d568:	ldr	r0, [r4, #204]	; 0xcc
   1d56c:	bl	1406c <fprintf@plt>
   1d570:	mov	r3, r4
   1d574:	mov	r2, r4
   1d578:	str	r4, [sp]
   1d57c:	movw	r1, #10728	; 0x29e8
   1d580:	movt	r1, #5
   1d584:	str	r4, [sp, #4]
   1d588:	ldr	r0, [r4, #204]	; 0xcc
   1d58c:	bl	1406c <fprintf@plt>
   1d590:	mov	r3, r4
   1d594:	mov	r2, r4
   1d598:	str	r4, [sp]
   1d59c:	movw	r1, #10768	; 0x2a10
   1d5a0:	movt	r1, #5
   1d5a4:	ldr	r0, [r4, #204]	; 0xcc
   1d5a8:	bl	1406c <fprintf@plt>
   1d5ac:	mov	r3, r4
   1d5b0:	mov	r2, r4
   1d5b4:	str	r4, [sp]
   1d5b8:	movw	r1, #10812	; 0x2a3c
   1d5bc:	movt	r1, #5
   1d5c0:	ldr	r0, [r4, #204]	; 0xcc
   1d5c4:	bl	1406c <fprintf@plt>
   1d5c8:	mov	r3, r4
   1d5cc:	mov	r2, r4
   1d5d0:	str	r4, [sp]
   1d5d4:	movw	r1, #10856	; 0x2a68
   1d5d8:	movt	r1, #5
   1d5dc:	ldr	r0, [r4, #204]	; 0xcc
   1d5e0:	bl	1406c <fprintf@plt>
   1d5e4:	mov	r3, r4
   1d5e8:	mov	r2, r4
   1d5ec:	str	r4, [sp]
   1d5f0:	movw	r1, #10900	; 0x2a94
   1d5f4:	movt	r1, #5
   1d5f8:	ldr	r0, [r4, #204]	; 0xcc
   1d5fc:	bl	1406c <fprintf@plt>
   1d600:	mov	r3, r4
   1d604:	mov	r2, r4
   1d608:	str	r4, [sp]
   1d60c:	movw	r1, #10940	; 0x2abc
   1d610:	movt	r1, #5
   1d614:	ldr	r0, [r4, #204]	; 0xcc
   1d618:	bl	1406c <fprintf@plt>
   1d61c:	mov	r3, r4
   1d620:	mov	r2, r4
   1d624:	str	r4, [sp]
   1d628:	movw	r1, #10980	; 0x2ae4
   1d62c:	movt	r1, #5
   1d630:	ldr	r0, [r4, #204]	; 0xcc
   1d634:	bl	1406c <fprintf@plt>
   1d638:	mov	r3, r4
   1d63c:	mov	r2, r4
   1d640:	str	r4, [sp]
   1d644:	movw	r1, #11020	; 0x2b0c
   1d648:	movt	r1, #5
   1d64c:	ldr	r0, [r4, #204]	; 0xcc
   1d650:	bl	1406c <fprintf@plt>
   1d654:	mov	r3, r4
   1d658:	mov	r2, r4
   1d65c:	str	r4, [sp]
   1d660:	movw	r1, #11060	; 0x2b34
   1d664:	movt	r1, #5
   1d668:	ldr	r0, [r4, #204]	; 0xcc
   1d66c:	bl	1406c <fprintf@plt>
   1d670:	mov	r0, #10
   1d674:	ldr	r1, [r4, #204]	; 0xcc
   1d678:	bl	140cc <fputc@plt>
   1d67c:	mov	r3, r4
   1d680:	mov	r2, r4
   1d684:	ldr	r0, [r4, #204]	; 0xcc
   1d688:	movw	r1, #11100	; 0x2b5c
   1d68c:	movt	r1, #5
   1d690:	bl	1406c <fprintf@plt>
   1d694:	mov	r0, #10
   1d698:	ldr	r1, [r4, #204]	; 0xcc
   1d69c:	bl	140cc <fputc@plt>
   1d6a0:	mov	r3, r4
   1d6a4:	mov	r2, r4
   1d6a8:	ldr	r0, [r4, #204]	; 0xcc
   1d6ac:	movw	r1, #11124	; 0x2b74
   1d6b0:	movt	r1, #5
   1d6b4:	bl	1406c <fprintf@plt>
   1d6b8:	ldr	r0, [r4, #204]	; 0xcc
   1d6bc:	ldr	r3, [r4, #212]	; 0xd4
   1d6c0:	ldr	r3, [r3, #140]	; 0x8c
   1d6c4:	cmp	r3, #0
   1d6c8:	bne	1d70c <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1d6cc:	mov	r2, r5
   1d6d0:	movw	r1, #11148	; 0x2b8c
   1d6d4:	movt	r1, #5
   1d6d8:	bl	1406c <fprintf@plt>
   1d6dc:	mov	r0, #0
   1d6e0:	add	sp, sp, #12
   1d6e4:	ldrd	r4, [sp]
   1d6e8:	add	sp, sp, #8
   1d6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6f0:	movw	r0, #10000	; 0x2710
   1d6f4:	movt	r0, #4
   1d6f8:	mov	r2, #36	; 0x24
   1d6fc:	mov	r1, #1
   1d700:	bl	13ff4 <fwrite@plt>
   1d704:	ldr	r3, [r4, #204]	; 0xcc
   1d708:	b	1cf88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80>
   1d70c:	mov	r3, r0
   1d710:	mov	r2, #36	; 0x24
   1d714:	movw	r0, #34164	; 0x8574
   1d718:	movt	r0, #4
   1d71c:	mov	r1, #1
   1d720:	bl	13ff4 <fwrite@plt>
   1d724:	ldr	r0, [r4, #204]	; 0xcc
   1d728:	b	1d6cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1d72c:	mov	r2, r4
   1d730:	movw	r1, #42560	; 0xa640
   1d734:	movt	r1, #4
   1d738:	ldr	r0, [r4, #204]	; 0xcc
   1d73c:	bl	1406c <fprintf@plt>
   1d740:	mov	r2, r4
   1d744:	movw	r1, #42612	; 0xa674
   1d748:	movt	r1, #4
   1d74c:	ldr	r0, [r4, #204]	; 0xcc
   1d750:	bl	1406c <fprintf@plt>
   1d754:	b	1d02c <__flatcc_fb_gen_common_c_builder_header@@Base+0x124>
   1d758:	mov	r2, r4
   1d75c:	movw	r1, #42168	; 0xa4b8
   1d760:	movt	r1, #4
   1d764:	ldr	r0, [r4, #204]	; 0xcc
   1d768:	bl	1406c <fprintf@plt>
   1d76c:	mov	r2, r4
   1d770:	movw	r1, #42208	; 0xa4e0
   1d774:	movt	r1, #4
   1d778:	ldr	r0, [r4, #204]	; 0xcc
   1d77c:	bl	1406c <fprintf@plt>
   1d780:	mov	r2, r4
   1d784:	movw	r1, #42248	; 0xa508
   1d788:	movt	r1, #4
   1d78c:	ldr	r0, [r4, #204]	; 0xcc
   1d790:	bl	1406c <fprintf@plt>
   1d794:	mov	r2, r4
   1d798:	movw	r1, #42292	; 0xa534
   1d79c:	movt	r1, #4
   1d7a0:	ldr	r0, [r4, #204]	; 0xcc
   1d7a4:	bl	1406c <fprintf@plt>
   1d7a8:	mov	r2, r4
   1d7ac:	movw	r1, #42344	; 0xa568
   1d7b0:	movt	r1, #4
   1d7b4:	ldr	r0, [r4, #204]	; 0xcc
   1d7b8:	bl	1406c <fprintf@plt>
   1d7bc:	mov	r2, r4
   1d7c0:	movw	r1, #42404	; 0xa5a4
   1d7c4:	movt	r1, #4
   1d7c8:	ldr	r0, [r4, #204]	; 0xcc
   1d7cc:	bl	1406c <fprintf@plt>
   1d7d0:	b	1cfe4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xdc>

0001d7d4 <__flatcc_fb_gen_c_builder@@Base>:
   1d7d4:	ldr	r3, [r0, #208]	; 0xd0
   1d7d8:	movw	r1, #11184	; 0x2bb0
   1d7dc:	movt	r1, #5
   1d7e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d7e4:	mov	r4, r0
   1d7e8:	ldr	r0, [r0, #204]	; 0xcc
   1d7ec:	ldr	r3, [r3, #164]	; 0xa4
   1d7f0:	strd	r6, [sp, #8]
   1d7f4:	strd	r8, [sp, #16]
   1d7f8:	strd	sl, [sp, #24]
   1d7fc:	str	lr, [sp, #32]
   1d800:	sub	sp, sp, #292	; 0x124
   1d804:	mov	r2, r3
   1d808:	bl	1406c <fprintf@plt>
   1d80c:	mov	r2, #81	; 0x51
   1d810:	mov	r1, #1
   1d814:	ldr	r3, [r4, #204]	; 0xcc
   1d818:	movw	r0, #9724	; 0x25fc
   1d81c:	movt	r0, #4
   1d820:	bl	13ff4 <fwrite@plt>
   1d824:	movw	r1, #11228	; 0x2bdc
   1d828:	movt	r1, #5
   1d82c:	ldr	r0, [r4, #204]	; 0xcc
   1d830:	ldr	r3, [r4, #208]	; 0xd0
   1d834:	ldr	r2, [r3, #164]	; 0xa4
   1d838:	bl	1406c <fprintf@plt>
   1d83c:	movw	r1, #11252	; 0x2bf4
   1d840:	movt	r1, #5
   1d844:	ldr	r0, [r4, #204]	; 0xcc
   1d848:	ldr	r3, [r4, #208]	; 0xd0
   1d84c:	ldr	r2, [r3, #160]	; 0xa0
   1d850:	bl	1406c <fprintf@plt>
   1d854:	mov	r2, #7
   1d858:	mov	r1, #1
   1d85c:	ldr	r3, [r4, #204]	; 0xcc
   1d860:	movw	r0, #34776	; 0x87d8
   1d864:	movt	r0, #4
   1d868:	bl	13ff4 <fwrite@plt>
   1d86c:	add	r2, r4, #102	; 0x66
   1d870:	movw	r1, #41972	; 0xa3f4
   1d874:	movt	r1, #4
   1d878:	ldr	r0, [r4, #204]	; 0xcc
   1d87c:	bl	1406c <fprintf@plt>
   1d880:	mov	r2, r4
   1d884:	movw	r1, #11276	; 0x2c0c
   1d888:	movt	r1, #5
   1d88c:	ldr	r0, [r4, #204]	; 0xcc
   1d890:	bl	1406c <fprintf@plt>
   1d894:	mov	r2, #7
   1d898:	mov	r1, #1
   1d89c:	ldr	r3, [r4, #204]	; 0xcc
   1d8a0:	movw	r0, #34776	; 0x87d8
   1d8a4:	movt	r0, #4
   1d8a8:	bl	13ff4 <fwrite@plt>
   1d8ac:	mov	r0, r4
   1d8b0:	movw	r2, #11308	; 0x2c2c
   1d8b4:	movt	r2, #5
   1d8b8:	movw	r1, #31140	; 0x79a4
   1d8bc:	movt	r1, #5
   1d8c0:	bl	16018 <__flatcc_fb_gen_c_includes@@Base>
   1d8c4:	ldr	r0, [r4, #204]	; 0xcc
   1d8c8:	ldr	r3, [r4, #212]	; 0xd4
   1d8cc:	ldr	r3, [r3, #140]	; 0x8c
   1d8d0:	cmp	r3, #0
   1d8d4:	bne	1e0c8 <__flatcc_fb_gen_c_builder@@Base+0x8f4>
   1d8d8:	ldr	ip, [r4, #208]	; 0xd0
   1d8dc:	ldrh	r3, [ip, #16]
   1d8e0:	cmp	r3, #2
   1d8e4:	beq	1e090 <__flatcc_fb_gen_c_builder@@Base+0x8bc>
   1d8e8:	movw	r1, #34888	; 0x8848
   1d8ec:	movt	r1, #4
   1d8f0:	mov	r3, r4
   1d8f4:	mov	r2, r4
   1d8f8:	bl	1406c <fprintf@plt>
   1d8fc:	ldr	r0, [r4, #204]	; 0xcc
   1d900:	ldr	ip, [r4, #208]	; 0xd0
   1d904:	ldrh	r3, [ip, #32]
   1d908:	cmp	r3, #2
   1d90c:	beq	1e068 <__flatcc_fb_gen_c_builder@@Base+0x894>
   1d910:	ldr	ip, [r4, #212]	; 0xd4
   1d914:	movw	r1, #34988	; 0x88ac
   1d918:	movt	r1, #4
   1d91c:	mov	r3, r4
   1d920:	mov	r2, r4
   1d924:	ldr	ip, [ip, #104]	; 0x68
   1d928:	str	ip, [sp]
   1d92c:	bl	1406c <fprintf@plt>
   1d930:	mov	r0, #10
   1d934:	add	sl, sp, #68	; 0x44
   1d938:	ldr	r1, [r4, #204]	; 0xcc
   1d93c:	bl	140cc <fputc@plt>
   1d940:	mov	r0, sl
   1d944:	mov	r2, #220	; 0xdc
   1d948:	mov	r1, #0
   1d94c:	bl	14084 <memset@plt>
   1d950:	ldr	r3, [r4, #208]	; 0xd0
   1d954:	ldr	r5, [r3, #40]	; 0x28
   1d958:	cmp	r5, #0
   1d95c:	beq	1d998 <__flatcc_fb_gen_c_builder@@Base+0x1c4>
   1d960:	movw	r7, #11320	; 0x2c38
   1d964:	movt	r7, #5
   1d968:	movw	r6, #11392	; 0x2c80
   1d96c:	movt	r6, #5
   1d970:	mov	r3, #0
   1d974:	ldrh	r2, [r5, #8]
   1d978:	cmp	r2, #3
   1d97c:	beq	1ded8 <__flatcc_fb_gen_c_builder@@Base+0x704>
   1d980:	ldr	r5, [r5]
   1d984:	cmp	r5, #0
   1d988:	bne	1d974 <__flatcc_fb_gen_c_builder@@Base+0x1a0>
   1d98c:	cmp	r3, #0
   1d990:	bne	1e0b8 <__flatcc_fb_gen_c_builder@@Base+0x8e4>
   1d994:	ldr	r3, [r4, #208]	; 0xd0
   1d998:	ldr	fp, [r3, #44]	; 0x2c
   1d99c:	cmp	fp, #0
   1d9a0:	beq	1de88 <__flatcc_fb_gen_c_builder@@Base+0x6b4>
   1d9a4:	movw	r3, #40208	; 0x9d10
   1d9a8:	movt	r3, #4
   1d9ac:	str	r3, [sp, #48]	; 0x30
   1d9b0:	movw	r3, #40236	; 0x9d2c
   1d9b4:	movt	r3, #4
   1d9b8:	str	r3, [sp, #52]	; 0x34
   1d9bc:	movw	r3, #41584	; 0xa270
   1d9c0:	movt	r3, #4
   1d9c4:	str	r3, [sp, #44]	; 0x2c
   1d9c8:	mov	r2, #220	; 0xdc
   1d9cc:	mov	r1, #0
   1d9d0:	mov	r0, sl
   1d9d4:	bl	14084 <memset@plt>
   1d9d8:	ldrh	r3, [fp, #8]
   1d9dc:	cmp	r3, #1
   1d9e0:	bne	1e208 <__flatcc_fb_gen_c_builder@@Base+0xa34>
   1d9e4:	mov	r1, fp
   1d9e8:	mov	r2, sl
   1d9ec:	ldr	r0, [fp, #12]
   1d9f0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1d9f4:	ldr	r1, [fp, #20]
   1d9f8:	cmp	r1, #0
   1d9fc:	moveq	r5, r1
   1da00:	beq	1da30 <__flatcc_fb_gen_c_builder@@Base+0x25c>
   1da04:	mov	r5, #0
   1da08:	ldrh	r6, [r1, #72]	; 0x48
   1da0c:	ands	r6, r6, #4
   1da10:	bne	1da24 <__flatcc_fb_gen_c_builder@@Base+0x250>
   1da14:	ldrh	r3, [r1, #24]
   1da18:	cmp	r3, #14
   1da1c:	beq	1df84 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
   1da20:	add	r5, r5, #1
   1da24:	ldr	r1, [r1]
   1da28:	cmp	r1, #0
   1da2c:	bne	1da08 <__flatcc_fb_gen_c_builder@@Base+0x234>
   1da30:	mov	r2, sl
   1da34:	ldr	r1, [sp, #48]	; 0x30
   1da38:	add	r7, fp, #20
   1da3c:	ldr	r0, [r4, #204]	; 0xcc
   1da40:	bl	1406c <fprintf@plt>
   1da44:	mov	r0, #1
   1da48:	mov	r3, r5
   1da4c:	mov	r1, r7
   1da50:	mov	r2, #0
   1da54:	str	r0, [sp]
   1da58:	mov	r0, r4
   1da5c:	bl	1a878 <__flatcc_gen_sort@@Base+0x454>
   1da60:	mov	r2, sl
   1da64:	ldr	r1, [sp, #52]	; 0x34
   1da68:	ldr	r0, [r4, #204]	; 0xcc
   1da6c:	bl	1406c <fprintf@plt>
   1da70:	ldr	r6, [fp, #20]
   1da74:	cmp	r6, #0
   1da78:	movne	r3, #0
   1da7c:	strne	r3, [sp, #36]	; 0x24
   1da80:	beq	1db7c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1da84:	ldrh	r1, [r6, #72]	; 0x48
   1da88:	ands	r1, r1, #4
   1da8c:	bne	1daa8 <__flatcc_fb_gen_c_builder@@Base+0x2d4>
   1da90:	ldrh	r3, [r6, #24]
   1da94:	cmp	r3, #14
   1da98:	beq	1df30 <__flatcc_fb_gen_c_builder@@Base+0x75c>
   1da9c:	ldr	r3, [sp, #36]	; 0x24
   1daa0:	add	r3, r3, #1
   1daa4:	str	r3, [sp, #36]	; 0x24
   1daa8:	ldr	r6, [r6]
   1daac:	cmp	r6, #0
   1dab0:	bne	1da84 <__flatcc_fb_gen_c_builder@@Base+0x2b0>
   1dab4:	ldr	r3, [sp, #36]	; 0x24
   1dab8:	cmp	r3, #0
   1dabc:	ble	1db7c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1dac0:	cmp	r5, #0
   1dac4:	beq	1db58 <__flatcc_fb_gen_c_builder@@Base+0x384>
   1dac8:	movw	r3, #16040	; 0x3ea8
   1dacc:	movt	r3, #4
   1dad0:	movw	r9, #38948	; 0x9824
   1dad4:	movt	r9, #4
   1dad8:	movw	r8, #38956	; 0x982c
   1dadc:	movt	r8, #4
   1dae0:	str	r3, [sp, #40]	; 0x28
   1dae4:	b	1db2c <__flatcc_fb_gen_c_builder@@Base+0x358>
   1dae8:	tst	r6, #3
   1daec:	bne	1dafc <__flatcc_fb_gen_c_builder@@Base+0x328>
   1daf0:	sub	r2, r5, r6
   1daf4:	cmp	r2, #2
   1daf8:	bgt	1db40 <__flatcc_fb_gen_c_builder@@Base+0x36c>
   1dafc:	mov	r2, #2
   1db00:	mov	r1, #1
   1db04:	mov	r0, r8
   1db08:	bl	13ff4 <fwrite@plt>
   1db0c:	ldr	r0, [r4, #204]	; 0xcc
   1db10:	mov	r2, r6
   1db14:	add	r6, r6, #1
   1db18:	ldr	r1, [sp, #44]	; 0x2c
   1db1c:	bl	1406c <fprintf@plt>
   1db20:	ldr	r3, [sp, #36]	; 0x24
   1db24:	cmp	r3, r6
   1db28:	beq	1db7c <__flatcc_fb_gen_c_builder@@Base+0x3a8>
   1db2c:	cmp	r6, #0
   1db30:	ldr	r3, [r4, #204]	; 0xcc
   1db34:	bne	1dae8 <__flatcc_fb_gen_c_builder@@Base+0x314>
   1db38:	cmp	r5, #4
   1db3c:	ble	1dafc <__flatcc_fb_gen_c_builder@@Base+0x328>
   1db40:	mov	r0, r3
   1db44:	mov	r1, r9
   1db48:	ldr	r2, [sp, #40]	; 0x28
   1db4c:	bl	1406c <fprintf@plt>
   1db50:	ldr	r0, [r4, #204]	; 0xcc
   1db54:	b	1db10 <__flatcc_fb_gen_c_builder@@Base+0x33c>
   1db58:	mov	r2, r5
   1db5c:	ldr	r1, [sp, #44]	; 0x2c
   1db60:	add	r6, r2, #1
   1db64:	ldr	r0, [r4, #204]	; 0xcc
   1db68:	bl	1406c <fprintf@plt>
   1db6c:	ldr	r3, [sp, #36]	; 0x24
   1db70:	mov	r2, r6
   1db74:	cmp	r6, r3
   1db78:	bne	1db5c <__flatcc_fb_gen_c_builder@@Base+0x388>
   1db7c:	mov	r8, #0
   1db80:	mov	r0, #10
   1db84:	ldr	r1, [r4, #204]	; 0xcc
   1db88:	bl	140cc <fputc@plt>
   1db8c:	mov	r3, sl
   1db90:	mov	r2, sl
   1db94:	str	sl, [sp]
   1db98:	movw	r1, #11432	; 0x2ca8
   1db9c:	movt	r1, #5
   1dba0:	ldr	r0, [r4, #204]	; 0xcc
   1dba4:	bl	1406c <fprintf@plt>
   1dba8:	mov	r1, r7
   1dbac:	mov	r2, r8
   1dbb0:	str	r8, [sp]
   1dbb4:	mov	r3, r5
   1dbb8:	mov	r0, r4
   1dbbc:	bl	1a878 <__flatcc_gen_sort@@Base+0x454>
   1dbc0:	mov	r2, #4
   1dbc4:	mov	r1, #1
   1dbc8:	ldr	r3, [r4, #204]	; 0xcc
   1dbcc:	movw	r0, #11472	; 0x2cd0
   1dbd0:	movt	r0, #5
   1dbd4:	bl	13ff4 <fwrite@plt>
   1dbd8:	mov	r1, r7
   1dbdc:	mov	r3, r8
   1dbe0:	str	r8, [sp]
   1dbe4:	mov	r2, r5
   1dbe8:	mov	r0, r4
   1dbec:	bl	1c53c <__flatcc_gen_sort@@Base+0x2118>
   1dbf0:	mov	r2, #12
   1dbf4:	mov	r1, #1
   1dbf8:	ldr	r3, [r4, #204]	; 0xcc
   1dbfc:	movw	r0, #11480	; 0x2cd8
   1dc00:	movt	r0, #5
   1dc04:	mov	r6, #1
   1dc08:	bl	13ff4 <fwrite@plt>
   1dc0c:	mov	r3, sl
   1dc10:	mov	r2, sl
   1dc14:	str	sl, [sp]
   1dc18:	movw	r1, #11496	; 0x2ce8
   1dc1c:	movt	r1, #5
   1dc20:	str	sl, [sp, #4]
   1dc24:	ldr	r0, [r4, #204]	; 0xcc
   1dc28:	bl	1406c <fprintf@plt>
   1dc2c:	mov	r1, r6
   1dc30:	mov	r2, #2
   1dc34:	ldr	r3, [r4, #204]	; 0xcc
   1dc38:	movw	r0, #11552	; 0x2d20
   1dc3c:	movt	r0, #5
   1dc40:	bl	13ff4 <fwrite@plt>
   1dc44:	mov	r1, r7
   1dc48:	mov	r3, r8
   1dc4c:	str	r6, [sp]
   1dc50:	mov	r2, r5
   1dc54:	mov	r0, r4
   1dc58:	bl	1c53c <__flatcc_gen_sort@@Base+0x2118>
   1dc5c:	mov	r1, r6
   1dc60:	mov	r2, #12
   1dc64:	ldr	r3, [r4, #204]	; 0xcc
   1dc68:	movw	r0, #11480	; 0x2cd8
   1dc6c:	movt	r0, #5
   1dc70:	bl	13ff4 <fwrite@plt>
   1dc74:	mov	r3, sl
   1dc78:	mov	r2, sl
   1dc7c:	str	sl, [sp]
   1dc80:	movw	r1, #11556	; 0x2d24
   1dc84:	movt	r1, #5
   1dc88:	ldr	r0, [r4, #204]	; 0xcc
   1dc8c:	bl	1406c <fprintf@plt>
   1dc90:	mov	r1, r7
   1dc94:	mov	r2, r8
   1dc98:	str	r8, [sp]
   1dc9c:	mov	r3, r5
   1dca0:	mov	r0, r4
   1dca4:	bl	1a878 <__flatcc_gen_sort@@Base+0x454>
   1dca8:	mov	r1, r6
   1dcac:	mov	r2, #4
   1dcb0:	ldr	r3, [r4, #204]	; 0xcc
   1dcb4:	movw	r0, #11472	; 0x2cd0
   1dcb8:	movt	r0, #5
   1dcbc:	bl	13ff4 <fwrite@plt>
   1dcc0:	mov	r1, r7
   1dcc4:	mov	r3, #2
   1dcc8:	str	r8, [sp]
   1dccc:	mov	r2, r5
   1dcd0:	mov	r0, r4
   1dcd4:	bl	1c53c <__flatcc_gen_sort@@Base+0x2118>
   1dcd8:	mov	r1, r6
   1dcdc:	mov	r2, #12
   1dce0:	ldr	r3, [r4, #204]	; 0xcc
   1dce4:	movw	r0, #11480	; 0x2cd8
   1dce8:	movt	r0, #5
   1dcec:	bl	13ff4 <fwrite@plt>
   1dcf0:	mov	r3, sl
   1dcf4:	mov	r2, sl
   1dcf8:	str	sl, [sp]
   1dcfc:	movw	r1, #11600	; 0x2d50
   1dd00:	movt	r1, #5
   1dd04:	str	sl, [sp, #4]
   1dd08:	ldr	r0, [r4, #204]	; 0xcc
   1dd0c:	bl	1406c <fprintf@plt>
   1dd10:	mov	r1, r6
   1dd14:	mov	r2, #2
   1dd18:	ldr	r3, [r4, #204]	; 0xcc
   1dd1c:	movw	r0, #11552	; 0x2d20
   1dd20:	movt	r0, #5
   1dd24:	bl	13ff4 <fwrite@plt>
   1dd28:	mov	r1, r7
   1dd2c:	mov	r3, #2
   1dd30:	str	r6, [sp]
   1dd34:	mov	r2, r5
   1dd38:	mov	r0, r4
   1dd3c:	bl	1c53c <__flatcc_gen_sort@@Base+0x2118>
   1dd40:	mov	r1, r6
   1dd44:	mov	r2, #12
   1dd48:	ldr	r3, [r4, #204]	; 0xcc
   1dd4c:	movw	r0, #11480	; 0x2cd8
   1dd50:	movt	r0, #5
   1dd54:	bl	13ff4 <fwrite@plt>
   1dd58:	mov	r3, sl
   1dd5c:	mov	r2, sl
   1dd60:	str	sl, [sp]
   1dd64:	movw	r1, #11660	; 0x2d8c
   1dd68:	movt	r1, #5
   1dd6c:	ldr	r0, [r4, #204]	; 0xcc
   1dd70:	bl	1406c <fprintf@plt>
   1dd74:	mov	r1, r7
   1dd78:	mov	r2, r8
   1dd7c:	str	r8, [sp]
   1dd80:	mov	r3, r5
   1dd84:	mov	r0, r4
   1dd88:	bl	1a878 <__flatcc_gen_sort@@Base+0x454>
   1dd8c:	mov	r1, r6
   1dd90:	mov	r2, #4
   1dd94:	ldr	r3, [r4, #204]	; 0xcc
   1dd98:	movw	r0, #11472	; 0x2cd0
   1dd9c:	movt	r0, #5
   1dda0:	bl	13ff4 <fwrite@plt>
   1dda4:	mov	r3, r6
   1dda8:	mov	r1, r7
   1ddac:	str	r8, [sp]
   1ddb0:	mov	r2, r5
   1ddb4:	mov	r0, r4
   1ddb8:	bl	1c53c <__flatcc_gen_sort@@Base+0x2118>
   1ddbc:	mov	r1, r6
   1ddc0:	mov	r2, #12
   1ddc4:	ldr	r3, [r4, #204]	; 0xcc
   1ddc8:	movw	r0, #11480	; 0x2cd8
   1ddcc:	movt	r0, #5
   1ddd0:	bl	13ff4 <fwrite@plt>
   1ddd4:	mov	r3, sl
   1ddd8:	mov	r2, sl
   1dddc:	str	sl, [sp]
   1dde0:	movw	r1, #11708	; 0x2dbc
   1dde4:	movt	r1, #5
   1dde8:	str	sl, [sp, #4]
   1ddec:	ldr	r0, [r4, #204]	; 0xcc
   1ddf0:	bl	1406c <fprintf@plt>
   1ddf4:	mov	r1, r6
   1ddf8:	mov	r2, #2
   1ddfc:	ldr	r3, [r4, #204]	; 0xcc
   1de00:	movw	r0, #11552	; 0x2d20
   1de04:	movt	r0, #5
   1de08:	bl	13ff4 <fwrite@plt>
   1de0c:	mov	r1, r7
   1de10:	mov	r3, r6
   1de14:	str	r6, [sp]
   1de18:	mov	r2, r5
   1de1c:	mov	r0, r4
   1de20:	bl	1c53c <__flatcc_gen_sort@@Base+0x2118>
   1de24:	mov	r1, r6
   1de28:	mov	r2, #12
   1de2c:	ldr	r3, [r4, #204]	; 0xcc
   1de30:	movw	r0, #11480	; 0x2cd8
   1de34:	movt	r0, #5
   1de38:	bl	13ff4 <fwrite@plt>
   1de3c:	str	sl, [sp, #20]
   1de40:	mov	r3, r4
   1de44:	mov	r2, r4
   1de48:	str	sl, [sp, #24]
   1de4c:	movw	r1, #11772	; 0x2dfc
   1de50:	movt	r1, #5
   1de54:	ldrh	ip, [fp, #104]	; 0x68
   1de58:	ldr	r0, [r4, #204]	; 0xcc
   1de5c:	str	ip, [sp, #16]
   1de60:	ldrd	r6, [fp, #112]	; 0x70
   1de64:	str	sl, [sp]
   1de68:	strd	r6, [sp, #8]
   1de6c:	bl	1406c <fprintf@plt>
   1de70:	mov	r0, #10
   1de74:	ldr	r1, [r4, #204]	; 0xcc
   1de78:	bl	140cc <fputc@plt>
   1de7c:	ldr	fp, [fp, #120]	; 0x78
   1de80:	cmp	fp, r8
   1de84:	bne	1d9c8 <__flatcc_fb_gen_c_builder@@Base+0x1f4>
   1de88:	mov	r0, r4
   1de8c:	bl	1b674 <__flatcc_gen_sort@@Base+0x1250>
   1de90:	ldr	r0, [r4, #204]	; 0xcc
   1de94:	ldr	r3, [r4, #212]	; 0xd4
   1de98:	ldr	r3, [r3, #140]	; 0x8c
   1de9c:	cmp	r3, #0
   1dea0:	bne	1e0e8 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1dea4:	ldr	r3, [r4, #208]	; 0xd0
   1dea8:	movw	r1, #11844	; 0x2e44
   1deac:	movt	r1, #5
   1deb0:	ldr	r2, [r3, #164]	; 0xa4
   1deb4:	bl	1406c <fprintf@plt>
   1deb8:	mov	r0, #0
   1debc:	add	sp, sp, #292	; 0x124
   1dec0:	ldrd	r4, [sp]
   1dec4:	ldrd	r6, [sp, #8]
   1dec8:	ldrd	r8, [sp, #16]
   1decc:	ldrd	sl, [sp, #24]
   1ded0:	add	sp, sp, #32
   1ded4:	pop	{pc}		; (ldr pc, [sp], #4)
   1ded8:	mov	r1, r5
   1dedc:	mov	r2, sl
   1dee0:	ldr	r0, [r5, #12]
   1dee4:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1dee8:	mov	r3, sl
   1deec:	mov	r2, sl
   1def0:	str	sl, [sp]
   1def4:	mov	r1, r7
   1def8:	ldr	r0, [r4, #204]	; 0xcc
   1defc:	bl	1406c <fprintf@plt>
   1df00:	mov	r3, r4
   1df04:	mov	r2, r4
   1df08:	str	sl, [sp]
   1df0c:	mov	r1, r6
   1df10:	str	sl, [sp, #4]
   1df14:	ldr	r0, [r4, #204]	; 0xcc
   1df18:	bl	1406c <fprintf@plt>
   1df1c:	ldr	r5, [r5]
   1df20:	cmp	r5, #0
   1df24:	beq	1e0b8 <__flatcc_fb_gen_c_builder@@Base+0x8e4>
   1df28:	mov	r3, #1
   1df2c:	b	1d974 <__flatcc_fb_gen_c_builder@@Base+0x1a0>
   1df30:	ldr	r3, [r6, #16]
   1df34:	ldrh	r2, [r3, #8]
   1df38:	cmp	r2, #1
   1df3c:	bne	1da9c <__flatcc_fb_gen_c_builder@@Base+0x2c8>
   1df40:	ldr	r8, [r3, #20]
   1df44:	cmp	r8, #0
   1df48:	beq	1daa8 <__flatcc_fb_gen_c_builder@@Base+0x2d4>
   1df4c:	ldrh	r3, [r8, #72]	; 0x48
   1df50:	ands	r3, r3, #4
   1df54:	bne	1df68 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1df58:	ldrh	r2, [r8, #24]
   1df5c:	cmp	r2, #14
   1df60:	beq	1dfd0 <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   1df64:	add	r1, r1, #1
   1df68:	ldr	r8, [r8]
   1df6c:	cmp	r8, #0
   1df70:	bne	1df4c <__flatcc_fb_gen_c_builder@@Base+0x778>
   1df74:	ldr	r3, [sp, #36]	; 0x24
   1df78:	add	r3, r3, r1
   1df7c:	str	r3, [sp, #36]	; 0x24
   1df80:	b	1daa8 <__flatcc_fb_gen_c_builder@@Base+0x2d4>
   1df84:	ldr	r3, [r1, #16]
   1df88:	ldrh	r2, [r3, #8]
   1df8c:	cmp	r2, #1
   1df90:	bne	1da20 <__flatcc_fb_gen_c_builder@@Base+0x24c>
   1df94:	ldr	r7, [r3, #20]
   1df98:	cmp	r7, #0
   1df9c:	beq	1da24 <__flatcc_fb_gen_c_builder@@Base+0x250>
   1dfa0:	ldrh	r3, [r7, #72]	; 0x48
   1dfa4:	ands	r3, r3, #4
   1dfa8:	bne	1dfbc <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1dfac:	ldrh	r2, [r7, #24]
   1dfb0:	cmp	r2, #14
   1dfb4:	beq	1e01c <__flatcc_fb_gen_c_builder@@Base+0x848>
   1dfb8:	add	r6, r6, #1
   1dfbc:	ldr	r7, [r7]
   1dfc0:	cmp	r7, #0
   1dfc4:	bne	1dfa0 <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   1dfc8:	add	r5, r5, r6
   1dfcc:	b	1da24 <__flatcc_fb_gen_c_builder@@Base+0x250>
   1dfd0:	ldr	r2, [r8, #16]
   1dfd4:	ldrh	r0, [r2, #8]
   1dfd8:	cmp	r0, #1
   1dfdc:	bne	1df64 <__flatcc_fb_gen_c_builder@@Base+0x790>
   1dfe0:	ldr	r9, [r2, #20]
   1dfe4:	cmp	r9, #0
   1dfe8:	beq	1df68 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1dfec:	ldrh	r2, [r9, #72]	; 0x48
   1dff0:	ands	r0, r2, #4
   1dff4:	bne	1e008 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1dff8:	ldrh	r2, [r9, #24]
   1dffc:	cmp	r2, #14
   1e000:	beq	1e154 <__flatcc_fb_gen_c_builder@@Base+0x980>
   1e004:	add	r3, r3, #1
   1e008:	ldr	r9, [r9]
   1e00c:	cmp	r9, #0
   1e010:	bne	1dfec <__flatcc_fb_gen_c_builder@@Base+0x818>
   1e014:	add	r1, r1, r3
   1e018:	b	1df68 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1e01c:	ldr	r2, [r7, #16]
   1e020:	ldrh	r0, [r2, #8]
   1e024:	cmp	r0, #1
   1e028:	bne	1dfb8 <__flatcc_fb_gen_c_builder@@Base+0x7e4>
   1e02c:	ldr	r8, [r2, #20]
   1e030:	cmp	r8, #0
   1e034:	beq	1dfbc <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1e038:	ldrh	r2, [r8, #72]	; 0x48
   1e03c:	ands	r2, r2, #4
   1e040:	bne	1e054 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1e044:	ldrh	r0, [r8, #24]
   1e048:	cmp	r0, #14
   1e04c:	beq	1e108 <__flatcc_fb_gen_c_builder@@Base+0x934>
   1e050:	add	r3, r3, #1
   1e054:	ldr	r8, [r8]
   1e058:	cmp	r8, #0
   1e05c:	bne	1e038 <__flatcc_fb_gen_c_builder@@Base+0x864>
   1e060:	add	r6, r6, r3
   1e064:	b	1dfbc <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1e068:	ldr	lr, [ip, #24]
   1e06c:	movw	r1, #34940	; 0x887c
   1e070:	movt	r1, #4
   1e074:	mov	r3, r4
   1e078:	mov	r2, r4
   1e07c:	str	lr, [sp, #4]
   1e080:	ldr	ip, [ip, #28]
   1e084:	str	ip, [sp]
   1e088:	bl	1406c <fprintf@plt>
   1e08c:	b	1d930 <__flatcc_fb_gen_c_builder@@Base+0x15c>
   1e090:	ldr	lr, [ip, #8]
   1e094:	movw	r1, #34836	; 0x8814
   1e098:	movt	r1, #4
   1e09c:	mov	r3, r4
   1e0a0:	mov	r2, r4
   1e0a4:	str	lr, [sp, #4]
   1e0a8:	ldr	ip, [ip, #12]
   1e0ac:	str	ip, [sp]
   1e0b0:	bl	1406c <fprintf@plt>
   1e0b4:	b	1d8fc <__flatcc_fb_gen_c_builder@@Base+0x128>
   1e0b8:	mov	r0, #10
   1e0bc:	ldr	r1, [r4, #204]	; 0xcc
   1e0c0:	bl	140cc <fputc@plt>
   1e0c4:	b	1d994 <__flatcc_fb_gen_c_builder@@Base+0x1c0>
   1e0c8:	mov	r3, r0
   1e0cc:	mov	r2, #36	; 0x24
   1e0d0:	movw	r0, #10000	; 0x2710
   1e0d4:	movt	r0, #4
   1e0d8:	mov	r1, #1
   1e0dc:	bl	13ff4 <fwrite@plt>
   1e0e0:	ldr	r0, [r4, #204]	; 0xcc
   1e0e4:	b	1d8d8 <__flatcc_fb_gen_c_builder@@Base+0x104>
   1e0e8:	mov	r3, r0
   1e0ec:	mov	r2, #36	; 0x24
   1e0f0:	movw	r0, #34164	; 0x8574
   1e0f4:	movt	r0, #4
   1e0f8:	mov	r1, #1
   1e0fc:	bl	13ff4 <fwrite@plt>
   1e100:	ldr	r0, [r4, #204]	; 0xcc
   1e104:	b	1dea4 <__flatcc_fb_gen_c_builder@@Base+0x6d0>
   1e108:	ldr	r0, [r8, #16]
   1e10c:	ldrh	ip, [r0, #8]
   1e110:	cmp	ip, #1
   1e114:	bne	1e050 <__flatcc_fb_gen_c_builder@@Base+0x87c>
   1e118:	ldr	r9, [r0, #20]
   1e11c:	cmp	r9, #0
   1e120:	beq	1e054 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1e124:	ldrh	r0, [r9, #72]	; 0x48
   1e128:	tst	r0, #4
   1e12c:	bne	1e140 <__flatcc_fb_gen_c_builder@@Base+0x96c>
   1e130:	ldrh	r0, [r9, #24]
   1e134:	cmp	r0, #14
   1e138:	beq	1e1d8 <__flatcc_fb_gen_c_builder@@Base+0xa04>
   1e13c:	add	r2, r2, #1
   1e140:	ldr	r9, [r9]
   1e144:	cmp	r9, #0
   1e148:	bne	1e124 <__flatcc_fb_gen_c_builder@@Base+0x950>
   1e14c:	add	r3, r3, r2
   1e150:	b	1e054 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1e154:	ldr	r2, [r9, #16]
   1e158:	ldrh	ip, [r2, #8]
   1e15c:	cmp	ip, #1
   1e160:	bne	1e004 <__flatcc_fb_gen_c_builder@@Base+0x830>
   1e164:	ldr	r2, [r2, #20]
   1e168:	cmp	r2, #0
   1e16c:	beq	1e008 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1e170:	str	r3, [sp, #40]	; 0x28
   1e174:	mov	r3, r0
   1e178:	ldrh	r0, [r2, #72]	; 0x48
   1e17c:	tst	r0, #4
   1e180:	bne	1e194 <__flatcc_fb_gen_c_builder@@Base+0x9c0>
   1e184:	ldrh	r0, [r2, #24]
   1e188:	cmp	r0, #14
   1e18c:	beq	1e1b0 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1e190:	add	r3, r3, #1
   1e194:	ldr	r2, [r2]
   1e198:	cmp	r2, #0
   1e19c:	bne	1e178 <__flatcc_fb_gen_c_builder@@Base+0x9a4>
   1e1a0:	mov	r2, r3
   1e1a4:	ldr	r3, [sp, #40]	; 0x28
   1e1a8:	add	r3, r3, r2
   1e1ac:	b	1e008 <__flatcc_fb_gen_c_builder@@Base+0x834>
   1e1b0:	ldr	r0, [r2, #16]
   1e1b4:	ldrh	ip, [r0, #8]
   1e1b8:	cmp	ip, #1
   1e1bc:	bne	1e190 <__flatcc_fb_gen_c_builder@@Base+0x9bc>
   1e1c0:	ldr	r0, [r0, #20]
   1e1c4:	strd	r2, [sp, #56]	; 0x38
   1e1c8:	bl	1a7a8 <__flatcc_gen_sort@@Base+0x384>
   1e1cc:	ldrd	r2, [sp, #56]	; 0x38
   1e1d0:	add	r3, r3, r0
   1e1d4:	b	1e194 <__flatcc_fb_gen_c_builder@@Base+0x9c0>
   1e1d8:	ldr	r0, [r9, #16]
   1e1dc:	ldrh	ip, [r0, #8]
   1e1e0:	cmp	ip, #1
   1e1e4:	bne	1e13c <__flatcc_fb_gen_c_builder@@Base+0x968>
   1e1e8:	ldr	r0, [r0, #20]
   1e1ec:	str	r3, [sp, #36]	; 0x24
   1e1f0:	str	r2, [sp, #40]	; 0x28
   1e1f4:	bl	1a7a8 <__flatcc_gen_sort@@Base+0x384>
   1e1f8:	ldr	r3, [sp, #36]	; 0x24
   1e1fc:	ldr	r2, [sp, #40]	; 0x28
   1e200:	add	r2, r2, r0
   1e204:	b	1e140 <__flatcc_fb_gen_c_builder@@Base+0x96c>
   1e208:	movw	r1, #38704	; 0x9730
   1e20c:	movt	r1, #4
   1e210:	ldr	r3, [pc, #12]	; 1e224 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1e214:	movw	r0, #5840	; 0x16d0
   1e218:	movt	r0, #4
   1e21c:	movw	r2, #1010	; 0x3f2
   1e220:	bl	14120 <__assert_fail@plt>
   1e224:	andeq	r9, r4, ip, lsl #13
   1e228:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e22c:	mov	r2, #220	; 0xdc
   1e230:	mov	r4, r1
   1e234:	strd	r6, [sp, #8]
   1e238:	mov	r1, #0
   1e23c:	strd	r8, [sp, #16]
   1e240:	mov	r9, r0
   1e244:	strd	sl, [sp, #24]
   1e248:	str	lr, [sp, #32]
   1e24c:	sub	sp, sp, #508	; 0x1fc
   1e250:	add	r8, sp, #64	; 0x40
   1e254:	add	sl, sp, #284	; 0x11c
   1e258:	mov	r0, r8
   1e25c:	bl	14084 <memset@plt>
   1e260:	mov	r2, #220	; 0xdc
   1e264:	mov	r1, #0
   1e268:	mov	r0, sl
   1e26c:	bl	14084 <memset@plt>
   1e270:	mov	r1, r4
   1e274:	mov	r2, r8
   1e278:	ldr	r0, [r4, #12]
   1e27c:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1e280:	mov	r2, r8
   1e284:	movw	r1, #11912	; 0x2e88
   1e288:	movt	r1, #5
   1e28c:	ldr	r0, [r9, #204]	; 0xcc
   1e290:	bl	1406c <fprintf@plt>
   1e294:	ldr	r4, [r4, #20]
   1e298:	ldr	r3, [r9, #204]	; 0xcc
   1e29c:	cmp	r4, #0
   1e2a0:	beq	1e3a0 <__flatcc_fb_gen_c_builder@@Base+0xbcc>
   1e2a4:	movw	r2, #12720	; 0x31b0
   1e2a8:	movt	r2, #5
   1e2ac:	movw	fp, #16608	; 0x40e0
   1e2b0:	movt	fp, #5
   1e2b4:	mov	r1, #1
   1e2b8:	str	r2, [sp, #60]	; 0x3c
   1e2bc:	movw	r2, #12228	; 0x2fc4
   1e2c0:	movt	r2, #5
   1e2c4:	str	r2, [sp, #32]
   1e2c8:	ldrh	r2, [r4, #72]	; 0x48
   1e2cc:	tst	r2, #4
   1e2d0:	bne	1e374 <__flatcc_fb_gen_c_builder@@Base+0xba0>
   1e2d4:	cmp	r1, #0
   1e2d8:	beq	1e624 <__flatcc_fb_gen_c_builder@@Base+0xe50>
   1e2dc:	movw	r0, #11984	; 0x2ed0
   1e2e0:	movt	r0, #5
   1e2e4:	mov	r2, #28
   1e2e8:	mov	r1, #1
   1e2ec:	bl	13ff4 <fwrite@plt>
   1e2f0:	ldrh	r3, [r4, #24]
   1e2f4:	ldrh	r5, [r4, #72]	; 0x48
   1e2f8:	sub	r3, r3, #7
   1e2fc:	ubfx	r5, r5, #8, #1
   1e300:	cmp	r3, #8
   1e304:	ldrls	pc, [pc, r3, lsl #2]
   1e308:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e30c:	muleq	r1, r0, r4
   1e310:	andeq	lr, r1, r0, lsr r3
   1e314:	andeq	lr, r1, r4, lsr r5
   1e318:	andeq	lr, r1, r0, ror #9
   1e31c:	andeq	lr, r1, r4, asr r3
   1e320:	andeq	lr, r1, r4, asr r3
   1e324:	andeq	lr, r1, r4, asr r3
   1e328:	strdeq	lr, [r1], -ip
   1e32c:	andeq	lr, r1, r8, asr r4
   1e330:	ldrh	r0, [r4, #74]	; 0x4a
   1e334:	movw	r1, #12048	; 0x2f10
   1e338:	movt	r1, #5
   1e33c:	ldrd	r2, [r4, #96]	; 0x60
   1e340:	str	r0, [sp, #8]
   1e344:	ldrd	r6, [r4, #88]	; 0x58
   1e348:	ldr	r0, [r9, #204]	; 0xcc
   1e34c:	strd	r6, [sp]
   1e350:	bl	1406c <fprintf@plt>
   1e354:	ldr	r2, [r4, #4]
   1e358:	mov	r1, fp
   1e35c:	ldr	r0, [r9, #204]	; 0xcc
   1e360:	ldr	r3, [r2]
   1e364:	ldr	r2, [r2, #4]
   1e368:	bl	1406c <fprintf@plt>
   1e36c:	ldr	r3, [r9, #204]	; 0xcc
   1e370:	mov	r1, #0
   1e374:	ldr	r4, [r4]
   1e378:	cmp	r4, #0
   1e37c:	bne	1e2c8 <__flatcc_fb_gen_c_builder@@Base+0xaf4>
   1e380:	cmp	r1, #0
   1e384:	bne	1e3a0 <__flatcc_fb_gen_c_builder@@Base+0xbcc>
   1e388:	movw	r0, #12856	; 0x3238
   1e38c:	movt	r0, #5
   1e390:	mov	r2, #15
   1e394:	mov	r1, #1
   1e398:	bl	13ff4 <fwrite@plt>
   1e39c:	ldr	r3, [r9, #204]	; 0xcc
   1e3a0:	mov	r2, #29
   1e3a4:	mov	r1, #1
   1e3a8:	movw	r0, #12872	; 0x3248
   1e3ac:	movt	r0, #5
   1e3b0:	bl	13ff4 <fwrite@plt>
   1e3b4:	mov	r2, #3
   1e3b8:	mov	r1, #1
   1e3bc:	ldr	r3, [r9, #204]	; 0xcc
   1e3c0:	movw	r0, #13060	; 0x3304
   1e3c4:	movt	r0, #5
   1e3c8:	bl	13ff4 <fwrite@plt>
   1e3cc:	mov	r3, r8
   1e3d0:	mov	r2, r8
   1e3d4:	str	r8, [sp]
   1e3d8:	movw	r1, #12904	; 0x3268
   1e3dc:	movt	r1, #5
   1e3e0:	ldr	r0, [r9, #204]	; 0xcc
   1e3e4:	bl	1406c <fprintf@plt>
   1e3e8:	mov	r3, r8
   1e3ec:	mov	r2, r8
   1e3f0:	str	r8, [sp]
   1e3f4:	movw	r1, #13064	; 0x3308
   1e3f8:	movt	r1, #5
   1e3fc:	ldr	r0, [r9, #204]	; 0xcc
   1e400:	bl	1406c <fprintf@plt>
   1e404:	mov	r3, r8
   1e408:	mov	r2, r8
   1e40c:	ldr	r0, [r9, #204]	; 0xcc
   1e410:	movw	r1, #13236	; 0x33b4
   1e414:	movt	r1, #5
   1e418:	bl	1406c <fprintf@plt>
   1e41c:	mov	r2, r8
   1e420:	mov	r3, r9
   1e424:	str	r8, [sp]
   1e428:	movw	r1, #13420	; 0x346c
   1e42c:	movt	r1, #5
   1e430:	ldr	r0, [r9, #204]	; 0xcc
   1e434:	bl	1406c <fprintf@plt>
   1e438:	mov	r0, #0
   1e43c:	add	sp, sp, #508	; 0x1fc
   1e440:	ldrd	r4, [sp]
   1e444:	ldrd	r6, [sp, #8]
   1e448:	ldrd	r8, [sp, #16]
   1e44c:	ldrd	sl, [sp, #24]
   1e450:	add	sp, sp, #32
   1e454:	pop	{pc}		; (ldr pc, [sp], #4)
   1e458:	ldr	r1, [r4, #16]
   1e45c:	mov	r2, sl
   1e460:	ldr	r0, [r1, #12]
   1e464:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1e468:	ldr	r3, [r4, #16]
   1e46c:	ldrh	r3, [r3, #8]
   1e470:	cmp	r3, #4
   1e474:	ldrls	pc, [pc, r3, lsl #2]
   1e478:	b	1e6c8 <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1e47c:			; <UNDEFINED> instruction: 0x0001e5b8
   1e480:	andeq	lr, r1, r0, asr r5
   1e484:	andeq	lr, r1, r8, asr #13
   1e488:	andeq	lr, r1, r0, asr r5
   1e48c:	ldrdeq	lr, [r1], -r4
   1e490:	ldr	r1, [r4, #104]	; 0x68
   1e494:	cmp	r1, #0
   1e498:	beq	1e550 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1e49c:	mov	r2, sl
   1e4a0:	ldr	r0, [r1, #12]
   1e4a4:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1e4a8:	ldr	r3, [r4, #104]	; 0x68
   1e4ac:	ldrh	r3, [r3, #8]
   1e4b0:	cmp	r3, #0
   1e4b4:	bne	1e64c <__flatcc_fb_gen_c_builder@@Base+0xe78>
   1e4b8:	ldrd	r2, [r4, #96]	; 0x60
   1e4bc:	movw	r1, #12088	; 0x2f38
   1e4c0:	movt	r1, #5
   1e4c4:	str	sl, [sp, #8]
   1e4c8:	ldrh	ip, [r4, #74]	; 0x4a
   1e4cc:	str	r5, [sp]
   1e4d0:	ldr	r0, [r9, #204]	; 0xcc
   1e4d4:	str	ip, [sp, #4]
   1e4d8:	bl	1406c <fprintf@plt>
   1e4dc:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e4e0:	movw	r1, #12296	; 0x3008
   1e4e4:	movt	r1, #5
   1e4e8:	ldrd	r2, [r4, #96]	; 0x60
   1e4ec:	str	r5, [sp]
   1e4f0:	ldr	r0, [r9, #204]	; 0xcc
   1e4f4:	bl	1406c <fprintf@plt>
   1e4f8:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e4fc:	ldr	r1, [r4, #16]
   1e500:	mov	r2, sl
   1e504:	ldr	r0, [r1, #12]
   1e508:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1e50c:	ldr	r3, [r4, #16]
   1e510:	ldrh	r3, [r3, #8]
   1e514:	cmp	r3, #4
   1e518:	ldrls	pc, [pc, r3, lsl #2]
   1e51c:	b	1e678 <__flatcc_fb_gen_c_builder@@Base+0xea4>
   1e520:	andeq	lr, r1, r8, lsl #12
   1e524:	andeq	lr, r1, r0, lsr r3
   1e528:	andeq	lr, r1, r8, ror r6
   1e52c:	andeq	lr, r1, r0, lsr r3
   1e530:	andeq	lr, r1, ip, ror #11
   1e534:	movw	r1, #12340	; 0x3034
   1e538:	movt	r1, #5
   1e53c:	ldrd	r2, [r4, #96]	; 0x60
   1e540:	str	r5, [sp]
   1e544:	ldr	r0, [r9, #204]	; 0xcc
   1e548:	bl	1406c <fprintf@plt>
   1e54c:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e550:	ldrh	r3, [r4, #74]	; 0x4a
   1e554:	ldrd	r6, [r4, #88]	; 0x58
   1e558:	str	r3, [sp, #56]	; 0x38
   1e55c:	ldrd	r2, [r4, #96]	; 0x60
   1e560:	strd	r2, [sp, #40]	; 0x28
   1e564:	orrs	r3, r6, r7
   1e568:	ldr	r3, [r9, #204]	; 0xcc
   1e56c:	str	r3, [sp, #36]	; 0x24
   1e570:	beq	1e63c <__flatcc_fb_gen_c_builder@@Base+0xe68>
   1e574:	mov	r2, r6
   1e578:	mov	r3, r7
   1e57c:	mvn	r0, #0
   1e580:	mov	r1, #0
   1e584:	bl	3f390 <fb_value_set_visit@@Base+0x694>
   1e588:	strd	r0, [sp, #48]	; 0x30
   1e58c:	str	r5, [sp]
   1e590:	strd	r6, [sp, #8]
   1e594:	ldr	ip, [sp, #56]	; 0x38
   1e598:	ldrd	r6, [sp, #48]	; 0x30
   1e59c:	ldr	r1, [sp, #32]
   1e5a0:	str	ip, [sp, #16]
   1e5a4:	ldr	r0, [sp, #36]	; 0x24
   1e5a8:	strd	r6, [sp, #24]
   1e5ac:	ldrd	r2, [sp, #40]	; 0x28
   1e5b0:	bl	1406c <fprintf@plt>
   1e5b4:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e5b8:	movw	r1, #12652	; 0x316c
   1e5bc:	movt	r1, #5
   1e5c0:	ldrd	r2, [r4, #96]	; 0x60
   1e5c4:	stm	sp, {r5, sl}
   1e5c8:	ldr	r0, [r9, #204]	; 0xcc
   1e5cc:	bl	1406c <fprintf@plt>
   1e5d0:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e5d4:	ldr	r1, [sp, #60]	; 0x3c
   1e5d8:	ldrd	r2, [r4, #96]	; 0x60
   1e5dc:	stm	sp, {r5, sl}
   1e5e0:	ldr	r0, [r9, #204]	; 0xcc
   1e5e4:	bl	1406c <fprintf@plt>
   1e5e8:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e5ec:	movw	r1, #12448	; 0x30a0
   1e5f0:	movt	r1, #5
   1e5f4:	ldrd	r2, [r4, #96]	; 0x60
   1e5f8:	stm	sp, {r5, sl}
   1e5fc:	ldr	r0, [r9, #204]	; 0xcc
   1e600:	bl	1406c <fprintf@plt>
   1e604:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e608:	movw	r1, #12388	; 0x3064
   1e60c:	movt	r1, #5
   1e610:	ldrd	r2, [r4, #96]	; 0x60
   1e614:	stm	sp, {r5, sl}
   1e618:	ldr	r0, [r9, #204]	; 0xcc
   1e61c:	bl	1406c <fprintf@plt>
   1e620:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e624:	movw	r0, #12016	; 0x2ef0
   1e628:	movt	r0, #5
   1e62c:	mov	r2, #30
   1e630:	mov	r1, #1
   1e634:	bl	13ff4 <fwrite@plt>
   1e638:	b	1e2f0 <__flatcc_fb_gen_c_builder@@Base+0xb1c>
   1e63c:	mvn	r2, #0
   1e640:	mov	r3, #0
   1e644:	strd	r2, [sp, #48]	; 0x30
   1e648:	b	1e58c <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   1e64c:	ldrh	r0, [r4, #74]	; 0x4a
   1e650:	movw	r1, #12164	; 0x2f84
   1e654:	movt	r1, #5
   1e658:	ldrd	r2, [r4, #96]	; 0x60
   1e65c:	str	r0, [sp, #16]
   1e660:	ldrd	r6, [r4, #88]	; 0x58
   1e664:	str	r5, [sp]
   1e668:	ldr	r0, [r9, #204]	; 0xcc
   1e66c:	strd	r6, [sp, #8]
   1e670:	bl	1406c <fprintf@plt>
   1e674:	b	1e354 <__flatcc_fb_gen_c_builder@@Base+0xb80>
   1e678:	movw	r1, #12592	; 0x3130
   1e67c:	movt	r1, #5
   1e680:	movw	r3, #49320	; 0xc0a8
   1e684:	movt	r3, #6
   1e688:	movw	r2, #12508	; 0x30dc
   1e68c:	movt	r2, #5
   1e690:	str	r1, [sp]
   1e694:	movw	r1, #4944	; 0x1350
   1e698:	movt	r1, #4
   1e69c:	ldr	r0, [r3]
   1e6a0:	mov	r3, #178	; 0xb2
   1e6a4:	bl	1406c <fprintf@plt>
   1e6a8:	movw	r3, #11872	; 0x2e60
   1e6ac:	movt	r3, #5
   1e6b0:	movw	r1, #12508	; 0x30dc
   1e6b4:	movt	r1, #5
   1e6b8:	movw	r0, #41608	; 0xa288
   1e6bc:	movt	r0, #4
   1e6c0:	mov	r2, #178	; 0xb2
   1e6c4:	bl	14120 <__assert_fail@plt>
   1e6c8:	movw	r1, #12788	; 0x31f4
   1e6cc:	movt	r1, #5
   1e6d0:	movw	r3, #49320	; 0xc0a8
   1e6d4:	movt	r3, #6
   1e6d8:	movw	r2, #12508	; 0x30dc
   1e6dc:	movt	r2, #5
   1e6e0:	str	r1, [sp]
   1e6e4:	movw	r1, #4944	; 0x1350
   1e6e8:	movt	r1, #4
   1e6ec:	ldr	r0, [r3]
   1e6f0:	mov	r3, #202	; 0xca
   1e6f4:	bl	1406c <fprintf@plt>
   1e6f8:	movw	r3, #11872	; 0x2e60
   1e6fc:	movt	r3, #5
   1e700:	movw	r1, #12508	; 0x30dc
   1e704:	movt	r1, #5
   1e708:	movw	r0, #41608	; 0xa288
   1e70c:	movt	r0, #4
   1e710:	mov	r2, #202	; 0xca
   1e714:	bl	14120 <__assert_fail@plt>
   1e718:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e71c:	mov	r2, #220	; 0xdc
   1e720:	mov	r4, r1
   1e724:	strd	r6, [sp, #8]
   1e728:	mov	r5, r0
   1e72c:	mov	r1, #0
   1e730:	strd	r8, [sp, #16]
   1e734:	str	sl, [sp, #24]
   1e738:	str	lr, [sp, #28]
   1e73c:	sub	sp, sp, #464	; 0x1d0
   1e740:	add	r0, sp, #24
   1e744:	bl	14084 <memset@plt>
   1e748:	mov	r2, #220	; 0xdc
   1e74c:	mov	r1, #0
   1e750:	add	r0, sp, #244	; 0xf4
   1e754:	bl	14084 <memset@plt>
   1e758:	mov	r1, r4
   1e75c:	add	r2, sp, #24
   1e760:	ldr	r0, [r4, #12]
   1e764:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1e768:	add	r2, sp, #24
   1e76c:	movw	r1, #13612	; 0x352c
   1e770:	movt	r1, #5
   1e774:	ldr	r0, [r5]
   1e778:	bl	1406c <fprintf@plt>
   1e77c:	ldr	r4, [r4, #20]
   1e780:	cmp	r4, #0
   1e784:	beq	1e880 <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   1e788:	movw	r8, #13924	; 0x3664
   1e78c:	movt	r8, #5
   1e790:	movw	sl, #13708	; 0x358c
   1e794:	movt	sl, #5
   1e798:	movw	r9, #13788	; 0x35dc
   1e79c:	movt	r9, #5
   1e7a0:	b	1e7ec <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1e7a4:	ldr	r1, [r4, #16]
   1e7a8:	add	r2, sp, #244	; 0xf4
   1e7ac:	ldr	r0, [r1, #12]
   1e7b0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1e7b4:	ldr	ip, [r4, #16]
   1e7b8:	ldrh	r3, [ip, #8]
   1e7bc:	cmp	r3, #0
   1e7c0:	bne	1e8b8 <__flatcc_fb_gen_c_builder@@Base+0x10e4>
   1e7c4:	add	r3, sp, #244	; 0xf4
   1e7c8:	mov	r1, sl
   1e7cc:	ldr	r2, [r4, #48]	; 0x30
   1e7d0:	str	r7, [sp]
   1e7d4:	str	r6, [sp, #4]
   1e7d8:	ldr	r0, [r5]
   1e7dc:	bl	1406c <fprintf@plt>
   1e7e0:	ldr	r4, [r4]
   1e7e4:	cmp	r4, #0
   1e7e8:	beq	1e880 <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   1e7ec:	ldrh	r3, [r4, #24]
   1e7f0:	ldr	r2, [r4, #4]
   1e7f4:	cmp	r3, #10
   1e7f8:	ldrd	r6, [r2]
   1e7fc:	beq	1e85c <__flatcc_fb_gen_c_builder@@Base+0x1088>
   1e800:	cmp	r3, #14
   1e804:	beq	1e7a4 <__flatcc_fb_gen_c_builder@@Base+0xfd0>
   1e808:	cmp	r3, #0
   1e80c:	beq	1e7e0 <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1e810:	movw	r1, #13988	; 0x36a4
   1e814:	movt	r1, #5
   1e818:	movw	r3, #49320	; 0xc0a8
   1e81c:	movt	r3, #6
   1e820:	movw	r2, #12508	; 0x30dc
   1e824:	movt	r2, #5
   1e828:	str	r1, [sp]
   1e82c:	movw	r1, #4944	; 0x1350
   1e830:	movt	r1, #4
   1e834:	ldr	r0, [r3]
   1e838:	mov	r3, #83	; 0x53
   1e83c:	bl	1406c <fprintf@plt>
   1e840:	movw	r1, #12508	; 0x30dc
   1e844:	movt	r1, #5
   1e848:	ldr	r3, [pc, #232]	; 1e938 <__flatcc_fb_gen_c_builder@@Base+0x1164>
   1e84c:	movw	r0, #41608	; 0xa288
   1e850:	movt	r0, #4
   1e854:	mov	r2, #83	; 0x53
   1e858:	bl	14120 <__assert_fail@plt>
   1e85c:	mov	r3, r7
   1e860:	mov	r1, r8
   1e864:	ldr	r2, [r4, #48]	; 0x30
   1e868:	str	r6, [sp]
   1e86c:	ldr	r0, [r5]
   1e870:	bl	1406c <fprintf@plt>
   1e874:	ldr	r4, [r4]
   1e878:	cmp	r4, #0
   1e87c:	bne	1e7ec <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1e880:	ldr	r3, [r5]
   1e884:	mov	r2, #47	; 0x2f
   1e888:	mov	r1, #1
   1e88c:	movw	r0, #14040	; 0x36d8
   1e890:	movt	r0, #5
   1e894:	bl	13ff4 <fwrite@plt>
   1e898:	mov	r0, #0
   1e89c:	add	sp, sp, #464	; 0x1d0
   1e8a0:	ldrd	r4, [sp]
   1e8a4:	ldrd	r6, [sp, #8]
   1e8a8:	ldrd	r8, [sp, #16]
   1e8ac:	ldr	sl, [sp, #24]
   1e8b0:	add	sp, sp, #28
   1e8b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e8b8:	cmp	r3, #1
   1e8bc:	bne	1e8ec <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1e8c0:	ldr	r2, [r4, #48]	; 0x30
   1e8c4:	mov	r1, r9
   1e8c8:	str	r7, [sp, #12]
   1e8cc:	str	r6, [sp, #16]
   1e8d0:	ldrh	r3, [ip, #104]	; 0x68
   1e8d4:	ldr	r0, [r5]
   1e8d8:	str	r3, [sp, #8]
   1e8dc:	ldrd	r6, [ip, #112]	; 0x70
   1e8e0:	strd	r6, [sp]
   1e8e4:	bl	1406c <fprintf@plt>
   1e8e8:	b	1e7e0 <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1e8ec:	movw	r1, #13864	; 0x3628
   1e8f0:	movt	r1, #5
   1e8f4:	movw	r3, #49320	; 0xc0a8
   1e8f8:	movt	r3, #6
   1e8fc:	movw	r2, #12508	; 0x30dc
   1e900:	movt	r2, #5
   1e904:	str	r1, [sp]
   1e908:	movw	r1, #4944	; 0x1350
   1e90c:	movt	r1, #4
   1e910:	ldr	r0, [r3]
   1e914:	mov	r3, #74	; 0x4a
   1e918:	bl	1406c <fprintf@plt>
   1e91c:	movw	r1, #12508	; 0x30dc
   1e920:	movt	r1, #5
   1e924:	ldr	r3, [pc, #12]	; 1e938 <__flatcc_fb_gen_c_builder@@Base+0x1164>
   1e928:	movw	r0, #41608	; 0xa288
   1e92c:	movt	r0, #4
   1e930:	mov	r2, #74	; 0x4a
   1e934:	bl	14120 <__assert_fail@plt>
   1e938:	andeq	r2, r5, r4, ror lr

0001e93c <__flatcc_fb_gen_c_verifier@@Base>:
   1e93c:	ldr	r3, [r0, #208]	; 0xd0
   1e940:	movw	r1, #14088	; 0x3708
   1e944:	movt	r1, #5
   1e948:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e94c:	mov	r4, r0
   1e950:	ldr	r0, [r0, #204]	; 0xcc
   1e954:	ldr	r3, [r3, #164]	; 0xa4
   1e958:	strd	r6, [sp, #8]
   1e95c:	strd	r8, [sp, #16]
   1e960:	str	sl, [sp, #24]
   1e964:	str	lr, [sp, #28]
   1e968:	sub	sp, sp, #240	; 0xf0
   1e96c:	mov	r2, r3
   1e970:	bl	1406c <fprintf@plt>
   1e974:	mov	r2, #81	; 0x51
   1e978:	mov	r1, #1
   1e97c:	ldr	r3, [r4, #204]	; 0xcc
   1e980:	movw	r0, #9724	; 0x25fc
   1e984:	movt	r0, #4
   1e988:	bl	13ff4 <fwrite@plt>
   1e98c:	movw	r1, #11228	; 0x2bdc
   1e990:	movt	r1, #5
   1e994:	ldr	r0, [r4, #204]	; 0xcc
   1e998:	ldr	r3, [r4, #208]	; 0xd0
   1e99c:	ldr	r2, [r3, #164]	; 0xa4
   1e9a0:	bl	1406c <fprintf@plt>
   1e9a4:	movw	r1, #11252	; 0x2bf4
   1e9a8:	movt	r1, #5
   1e9ac:	ldr	r0, [r4, #204]	; 0xcc
   1e9b0:	ldr	r3, [r4, #208]	; 0xd0
   1e9b4:	ldr	r2, [r3, #160]	; 0xa0
   1e9b8:	bl	1406c <fprintf@plt>
   1e9bc:	mov	r2, #7
   1e9c0:	mov	r1, #1
   1e9c4:	ldr	r3, [r4, #204]	; 0xcc
   1e9c8:	movw	r0, #34776	; 0x87d8
   1e9cc:	movt	r0, #4
   1e9d0:	bl	13ff4 <fwrite@plt>
   1e9d4:	mov	r2, #36	; 0x24
   1e9d8:	mov	r1, #1
   1e9dc:	ldr	r3, [r4, #204]	; 0xcc
   1e9e0:	movw	r0, #14136	; 0x3738
   1e9e4:	movt	r0, #5
   1e9e8:	bl	13ff4 <fwrite@plt>
   1e9ec:	mov	r0, r4
   1e9f0:	movw	r2, #14176	; 0x3760
   1e9f4:	movt	r2, #5
   1e9f8:	movw	r1, #3984	; 0xf90
   1e9fc:	movt	r1, #4
   1ea00:	bl	16018 <__flatcc_fb_gen_c_includes@@Base>
   1ea04:	ldr	r1, [r4, #204]	; 0xcc
   1ea08:	ldr	r3, [r4, #212]	; 0xd4
   1ea0c:	ldr	r3, [r3, #140]	; 0x8c
   1ea10:	cmp	r3, #0
   1ea14:	bne	1ec70 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   1ea18:	mov	r0, #10
   1ea1c:	bl	140cc <fputc@plt>
   1ea20:	add	r0, sp, #20
   1ea24:	mov	r2, #220	; 0xdc
   1ea28:	mov	r1, #0
   1ea2c:	bl	14084 <memset@plt>
   1ea30:	ldr	r3, [r4, #208]	; 0xd0
   1ea34:	ldr	r5, [r3, #40]	; 0x28
   1ea38:	cmp	r5, #0
   1ea3c:	beq	1ea60 <__flatcc_fb_gen_c_verifier@@Base+0x124>
   1ea40:	movw	r6, #14188	; 0x376c
   1ea44:	movt	r6, #5
   1ea48:	ldrh	r3, [r5, #8]
   1ea4c:	cmp	r3, #0
   1ea50:	beq	1eb64 <__flatcc_fb_gen_c_verifier@@Base+0x228>
   1ea54:	ldr	r5, [r5]
   1ea58:	cmp	r5, #0
   1ea5c:	bne	1ea48 <__flatcc_fb_gen_c_verifier@@Base+0x10c>
   1ea60:	mov	r0, #10
   1ea64:	ldr	r1, [r4, #204]	; 0xcc
   1ea68:	bl	140cc <fputc@plt>
   1ea6c:	ldr	r3, [r4, #208]	; 0xd0
   1ea70:	ldr	r5, [r3, #40]	; 0x28
   1ea74:	cmp	r5, #0
   1ea78:	beq	1eb00 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1ea7c:	add	r6, r4, #204	; 0xcc
   1ea80:	ldrh	r3, [r5, #8]
   1ea84:	cmp	r3, #4
   1ea88:	beq	1ec54 <__flatcc_fb_gen_c_verifier@@Base+0x318>
   1ea8c:	ldr	r5, [r5]
   1ea90:	cmp	r5, #0
   1ea94:	bne	1ea80 <__flatcc_fb_gen_c_verifier@@Base+0x144>
   1ea98:	ldr	r3, [r4, #208]	; 0xd0
   1ea9c:	ldr	r5, [r3, #40]	; 0x28
   1eaa0:	cmp	r5, #0
   1eaa4:	beq	1eb00 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1eaa8:	movw	sl, #14260	; 0x37b4
   1eaac:	movt	sl, #5
   1eab0:	movw	r9, #14416	; 0x3850
   1eab4:	movt	r9, #5
   1eab8:	movw	r8, #14580	; 0x38f4
   1eabc:	movt	r8, #5
   1eac0:	ldrh	r3, [r5, #8]
   1eac4:	cmp	r3, #1
   1eac8:	beq	1eb94 <__flatcc_fb_gen_c_verifier@@Base+0x258>
   1eacc:	ldr	r5, [r5]
   1ead0:	cmp	r5, #0
   1ead4:	bne	1eac0 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1ead8:	ldr	r3, [r4, #208]	; 0xd0
   1eadc:	ldr	r5, [r3, #40]	; 0x28
   1eae0:	cmp	r5, #0
   1eae4:	beq	1eb00 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1eae8:	ldrh	r3, [r5, #8]
   1eaec:	cmp	r3, #0
   1eaf0:	beq	1eb48 <__flatcc_fb_gen_c_verifier@@Base+0x20c>
   1eaf4:	ldr	r5, [r5]
   1eaf8:	cmp	r5, #0
   1eafc:	bne	1eae8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1eb00:	ldr	r0, [r4, #204]	; 0xcc
   1eb04:	ldr	r3, [r4, #212]	; 0xd4
   1eb08:	ldr	r3, [r3, #140]	; 0x8c
   1eb0c:	cmp	r3, #0
   1eb10:	bne	1ec90 <__flatcc_fb_gen_c_verifier@@Base+0x354>
   1eb14:	ldr	r3, [r4, #208]	; 0xd0
   1eb18:	movw	r1, #14940	; 0x3a5c
   1eb1c:	movt	r1, #5
   1eb20:	ldr	r2, [r3, #164]	; 0xa4
   1eb24:	bl	1406c <fprintf@plt>
   1eb28:	mov	r0, #0
   1eb2c:	add	sp, sp, #240	; 0xf0
   1eb30:	ldrd	r4, [sp]
   1eb34:	ldrd	r6, [sp, #8]
   1eb38:	ldrd	r8, [sp, #16]
   1eb3c:	ldr	sl, [sp, #24]
   1eb40:	add	sp, sp, #28
   1eb44:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb48:	mov	r1, r5
   1eb4c:	mov	r0, r4
   1eb50:	bl	1e228 <__flatcc_fb_gen_c_builder@@Base+0xa54>
   1eb54:	ldr	r5, [r5]
   1eb58:	cmp	r5, #0
   1eb5c:	bne	1eae8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1eb60:	b	1eb00 <__flatcc_fb_gen_c_verifier@@Base+0x1c4>
   1eb64:	mov	r1, r5
   1eb68:	add	r2, sp, #20
   1eb6c:	ldr	r0, [r5, #12]
   1eb70:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1eb74:	add	r2, sp, #20
   1eb78:	mov	r1, r6
   1eb7c:	ldr	r0, [r4, #204]	; 0xcc
   1eb80:	bl	1406c <fprintf@plt>
   1eb84:	ldr	r5, [r5]
   1eb88:	cmp	r5, #0
   1eb8c:	bne	1ea48 <__flatcc_fb_gen_c_verifier@@Base+0x10c>
   1eb90:	b	1ea60 <__flatcc_fb_gen_c_verifier@@Base+0x124>
   1eb94:	mov	r2, #220	; 0xdc
   1eb98:	mov	r1, #0
   1eb9c:	add	r0, sp, #20
   1eba0:	bl	14084 <memset@plt>
   1eba4:	mov	r1, r5
   1eba8:	add	r2, sp, #20
   1ebac:	ldr	r0, [r5, #12]
   1ebb0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   1ebb4:	ldrh	ip, [r5, #104]	; 0x68
   1ebb8:	add	r3, sp, #20
   1ebbc:	mov	r1, sl
   1ebc0:	mov	r2, r3
   1ebc4:	ldr	r0, [r4, #204]	; 0xcc
   1ebc8:	str	ip, [sp, #8]
   1ebcc:	ldrd	r6, [r5, #112]	; 0x70
   1ebd0:	strd	r6, [sp]
   1ebd4:	bl	1406c <fprintf@plt>
   1ebd8:	ldrh	ip, [r5, #104]	; 0x68
   1ebdc:	add	r3, sp, #20
   1ebe0:	mov	r1, r9
   1ebe4:	mov	r2, r3
   1ebe8:	ldr	r0, [r4, #204]	; 0xcc
   1ebec:	str	ip, [sp, #8]
   1ebf0:	ldrd	r6, [r5, #112]	; 0x70
   1ebf4:	strd	r6, [sp]
   1ebf8:	bl	1406c <fprintf@plt>
   1ebfc:	ldrh	ip, [r5, #104]	; 0x68
   1ec00:	mov	r3, r4
   1ec04:	add	r2, sp, #20
   1ec08:	mov	r1, r8
   1ec0c:	ldr	r0, [r4, #204]	; 0xcc
   1ec10:	str	ip, [sp, #8]
   1ec14:	ldrd	r6, [r5, #112]	; 0x70
   1ec18:	strd	r6, [sp]
   1ec1c:	bl	1406c <fprintf@plt>
   1ec20:	ldrh	r3, [r5, #104]	; 0x68
   1ec24:	movw	r1, #14764	; 0x39ac
   1ec28:	movt	r1, #5
   1ec2c:	add	r2, sp, #20
   1ec30:	ldr	r0, [r4, #204]	; 0xcc
   1ec34:	str	r3, [sp, #8]
   1ec38:	ldrd	r6, [r5, #112]	; 0x70
   1ec3c:	strd	r6, [sp]
   1ec40:	bl	1406c <fprintf@plt>
   1ec44:	ldr	r5, [r5]
   1ec48:	cmp	r5, #0
   1ec4c:	bne	1eac0 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1ec50:	b	1ead8 <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1ec54:	mov	r1, r5
   1ec58:	mov	r0, r6
   1ec5c:	bl	1e718 <__flatcc_fb_gen_c_builder@@Base+0xf44>
   1ec60:	ldr	r5, [r5]
   1ec64:	cmp	r5, #0
   1ec68:	bne	1ea80 <__flatcc_fb_gen_c_verifier@@Base+0x144>
   1ec6c:	b	1ea98 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1ec70:	mov	r3, r1
   1ec74:	movw	r0, #10000	; 0x2710
   1ec78:	movt	r0, #4
   1ec7c:	mov	r1, #1
   1ec80:	mov	r2, #36	; 0x24
   1ec84:	bl	13ff4 <fwrite@plt>
   1ec88:	ldr	r1, [r4, #204]	; 0xcc
   1ec8c:	b	1ea18 <__flatcc_fb_gen_c_verifier@@Base+0xdc>
   1ec90:	mov	r3, r0
   1ec94:	mov	r2, #36	; 0x24
   1ec98:	movw	r0, #34164	; 0x8574
   1ec9c:	movt	r0, #4
   1eca0:	mov	r1, #1
   1eca4:	bl	13ff4 <fwrite@plt>
   1eca8:	ldr	r0, [r4, #204]	; 0xcc
   1ecac:	b	1eb14 <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   1ecb0:	push	{r1, r2, r3}
   1ecb4:	movw	r3, #49332	; 0xc0b4
   1ecb8:	movt	r3, #6
   1ecbc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1ecc0:	mov	r5, r0
   1ecc4:	ldr	r2, [r0, #212]	; 0xd4
   1ecc8:	ldr	r4, [r0, #220]	; 0xdc
   1eccc:	strd	r6, [sp, #8]
   1ecd0:	strd	r8, [sp, #16]
   1ecd4:	str	lr, [sp, #24]
   1ecd8:	sub	sp, sp, #8
   1ecdc:	ldrb	r1, [r3]
   1ece0:	ldr	r9, [sp, #36]	; 0x24
   1ece4:	ldr	r6, [r2, #176]	; 0xb0
   1ece8:	cmp	r1, #0
   1ecec:	beq	1edac <__flatcc_fb_gen_c_verifier@@Base+0x470>
   1ecf0:	ldrb	r3, [r9]
   1ecf4:	cmp	r3, #0
   1ecf8:	beq	1ed80 <__flatcc_fb_gen_c_verifier@@Base+0x444>
   1ecfc:	mul	r6, r6, r4
   1ed00:	cmp	r6, #64	; 0x40
   1ed04:	ble	1ed4c <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1ed08:	movw	r8, #49332	; 0xc0b4
   1ed0c:	movt	r8, #6
   1ed10:	movw	r7, #41576	; 0xa268
   1ed14:	movt	r7, #4
   1ed18:	mov	r4, r6
   1ed1c:	sub	r4, r4, #64	; 0x40
   1ed20:	mov	r3, r8
   1ed24:	ldr	r0, [r5, #204]	; 0xcc
   1ed28:	mov	r2, #64	; 0x40
   1ed2c:	mov	r1, r7
   1ed30:	bl	1406c <fprintf@plt>
   1ed34:	cmp	r4, #64	; 0x40
   1ed38:	bgt	1ed1c <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
   1ed3c:	sub	r3, r6, #65	; 0x41
   1ed40:	sub	r6, r6, #64	; 0x40
   1ed44:	bic	r3, r3, #63	; 0x3f
   1ed48:	sub	r6, r6, r3
   1ed4c:	mov	r2, r6
   1ed50:	movw	r3, #49332	; 0xc0b4
   1ed54:	movt	r3, #6
   1ed58:	movw	r1, #41576	; 0xa268
   1ed5c:	movt	r1, #4
   1ed60:	ldr	r0, [r5, #204]	; 0xcc
   1ed64:	bl	1406c <fprintf@plt>
   1ed68:	add	r3, sp, #40	; 0x28
   1ed6c:	mov	r1, r9
   1ed70:	ldr	r0, [r5, #204]	; 0xcc
   1ed74:	mov	r2, r3
   1ed78:	str	r3, [sp, #4]
   1ed7c:	bl	140c0 <vfprintf@plt>
   1ed80:	ldr	r1, [r5, #204]	; 0xcc
   1ed84:	mov	r0, #10
   1ed88:	bl	140cc <fputc@plt>
   1ed8c:	add	sp, sp, #8
   1ed90:	ldrd	r4, [sp]
   1ed94:	ldrd	r6, [sp, #8]
   1ed98:	ldrd	r8, [sp, #16]
   1ed9c:	ldr	lr, [sp, #24]
   1eda0:	add	sp, sp, #28
   1eda4:	add	sp, sp, #12
   1eda8:	bx	lr
   1edac:	mov	r0, r3
   1edb0:	mov	r2, #64	; 0x40
   1edb4:	mov	r1, #32
   1edb8:	bl	14084 <memset@plt>
   1edbc:	b	1ecf0 <__flatcc_fb_gen_c_verifier@@Base+0x3b4>
   1edc0:	movw	r1, #15476	; 0x3c74
   1edc4:	movt	r1, #5
   1edc8:	b	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1edcc:	movw	r1, #15536	; 0x3cb0
   1edd0:	movt	r1, #5
   1edd4:	b	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1edd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1eddc:	mov	r4, r0
   1ede0:	strd	r6, [sp, #8]
   1ede4:	mov	r7, r1
   1ede8:	strd	r8, [sp, #16]
   1edec:	sub	r9, r3, r2
   1edf0:	mov	r8, r2
   1edf4:	add	r9, r9, #1
   1edf8:	strd	sl, [sp, #24]
   1edfc:	add	r9, r9, r9, lsr #31
   1ee00:	str	lr, [sp, #32]
   1ee04:	sub	sp, sp, #52	; 0x34
   1ee08:	add	r9, r2, r9, asr #1
   1ee0c:	ldr	r2, [sp, #88]	; 0x58
   1ee10:	str	r2, [sp, #16]
   1ee14:	ldr	r2, [sp, #92]	; 0x5c
   1ee18:	str	r3, [sp, #24]
   1ee1c:	ldr	r3, [r1]
   1ee20:	str	r2, [sp, #20]
   1ee24:	lsl	r2, r9, #4
   1ee28:	str	r2, [sp, #28]
   1ee2c:	add	r2, r3, r2
   1ee30:	ldr	ip, [r2, #4]
   1ee34:	ldr	r2, [sp, #16]
   1ee38:	cmp	r2, ip
   1ee3c:	bgt	1f258 <__flatcc_fb_gen_c_verifier@@Base+0x91c>
   1ee40:	sub	r2, ip, r2
   1ee44:	ldr	r3, [r3, r9, lsl #4]
   1ee48:	mov	lr, #1
   1ee4c:	cmp	r2, #8
   1ee50:	movlt	r5, r2
   1ee54:	movge	r5, #8
   1ee58:	str	r2, [sp, #40]	; 0x28
   1ee5c:	rsb	r0, r5, #8
   1ee60:	sub	r6, r5, #1
   1ee64:	lsl	r0, r0, #3
   1ee68:	mov	fp, r6
   1ee6c:	mov	sl, r3
   1ee70:	str	r3, [sp, #44]	; 0x2c
   1ee74:	sub	r6, r0, #32
   1ee78:	lsl	r2, lr, r0
   1ee7c:	lsl	r3, lr, r6
   1ee80:	rsb	r6, r0, #32
   1ee84:	mov	r1, r6
   1ee88:	mov	r6, sl
   1ee8c:	ldr	sl, [sp, #16]
   1ee90:	orr	r3, r3, lr, lsr r1
   1ee94:	rsbs	r2, r2, #0
   1ee98:	rsc	r3, r3, #0
   1ee9c:	cmp	sl, ip
   1eea0:	add	r6, r6, sl
   1eea4:	strd	r2, [sp, #32]
   1eea8:	beq	1f0f4 <__flatcc_fb_gen_c_verifier@@Base+0x7b8>
   1eeac:	ldrb	sl, [r6, fp]
   1eeb0:	rsb	r1, fp, #7
   1eeb4:	cmp	fp, #0
   1eeb8:	lsl	r1, r1, #3
   1eebc:	sub	ip, r5, #2
   1eec0:	sub	r0, r1, #32
   1eec4:	rsb	r3, r1, #32
   1eec8:	lsl	r0, sl, r0
   1eecc:	lsl	r1, sl, r1
   1eed0:	orr	r0, r0, sl, lsr r3
   1eed4:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1eed8:	ldrb	sl, [r6, ip]
   1eedc:	rsb	lr, ip, #7
   1eee0:	cmp	ip, #0
   1eee4:	lsl	r3, lr, #3
   1eee8:	sub	ip, r5, #3
   1eeec:	sub	lr, r3, #32
   1eef0:	lsl	lr, sl, lr
   1eef4:	orr	r1, r1, sl, lsl r3
   1eef8:	rsb	r3, r3, #32
   1eefc:	orr	lr, lr, sl, lsr r3
   1ef00:	orr	r0, lr, r0
   1ef04:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1ef08:	ldrb	sl, [r6, ip]
   1ef0c:	rsb	lr, ip, #7
   1ef10:	cmp	ip, #0
   1ef14:	lsl	r3, lr, #3
   1ef18:	sub	ip, r5, #4
   1ef1c:	sub	lr, r3, #32
   1ef20:	lsl	lr, sl, lr
   1ef24:	orr	r1, r1, sl, lsl r3
   1ef28:	rsb	r3, r3, #32
   1ef2c:	orr	lr, lr, sl, lsr r3
   1ef30:	orr	r0, lr, r0
   1ef34:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1ef38:	ldrb	sl, [r6, ip]
   1ef3c:	rsb	lr, ip, #7
   1ef40:	cmp	ip, #0
   1ef44:	lsl	r3, lr, #3
   1ef48:	sub	ip, r5, #5
   1ef4c:	sub	lr, r3, #32
   1ef50:	lsl	lr, sl, lr
   1ef54:	orr	r1, r1, sl, lsl r3
   1ef58:	rsb	r3, r3, #32
   1ef5c:	orr	lr, lr, sl, lsr r3
   1ef60:	orr	r0, lr, r0
   1ef64:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1ef68:	ldrb	sl, [r6, ip]
   1ef6c:	rsb	lr, ip, #7
   1ef70:	cmp	ip, #0
   1ef74:	lsl	r3, lr, #3
   1ef78:	sub	ip, r5, #6
   1ef7c:	sub	lr, r3, #32
   1ef80:	lsl	lr, sl, lr
   1ef84:	orr	r1, r1, sl, lsl r3
   1ef88:	rsb	r3, r3, #32
   1ef8c:	orr	lr, lr, sl, lsr r3
   1ef90:	orr	r0, lr, r0
   1ef94:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1ef98:	ldrb	sl, [r6, ip]
   1ef9c:	rsb	lr, ip, #7
   1efa0:	cmp	ip, #0
   1efa4:	lsl	r3, lr, #3
   1efa8:	sub	ip, r5, #7
   1efac:	sub	lr, r3, #32
   1efb0:	lsl	lr, sl, lr
   1efb4:	orr	r1, r1, sl, lsl r3
   1efb8:	rsb	r3, r3, #32
   1efbc:	orr	lr, lr, sl, lsr r3
   1efc0:	orr	r0, lr, r0
   1efc4:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1efc8:	ldrb	sl, [r6, ip]
   1efcc:	rsb	lr, ip, #7
   1efd0:	cmp	ip, #0
   1efd4:	lsl	lr, lr, #3
   1efd8:	sub	r3, lr, #32
   1efdc:	lsl	r3, sl, r3
   1efe0:	orr	r1, r1, sl, lsl lr
   1efe4:	rsb	lr, lr, #32
   1efe8:	orr	r3, r3, sl, lsr lr
   1efec:	orr	r0, r3, r0
   1eff0:	beq	1f004 <__flatcc_fb_gen_c_verifier@@Base+0x6c8>
   1eff4:	ldr	r2, [sp, #16]
   1eff8:	ldr	r3, [sp, #44]	; 0x2c
   1effc:	ldrb	r2, [r3, r2]
   1f000:	orr	r0, r0, r2, lsl #24
   1f004:	ldr	r3, [sp, #40]	; 0x28
   1f008:	cmp	r3, #7
   1f00c:	ble	1f0fc <__flatcc_fb_gen_c_verifier@@Base+0x7c0>
   1f010:	mov	r5, #8
   1f014:	mov	r3, r0
   1f018:	mov	r2, r1
   1f01c:	mov	r0, r4
   1f020:	movw	r1, #15556	; 0x3cc4
   1f024:	movt	r1, #5
   1f028:	stm	sp, {r5, r6}
   1f02c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f030:	ldr	r3, [r4, #220]	; 0xdc
   1f034:	cmp	r8, r9
   1f038:	add	r3, r3, #1
   1f03c:	str	r3, [r4, #220]	; 0xdc
   1f040:	bne	1f12c <__flatcc_fb_gen_c_verifier@@Base+0x7f0>
   1f044:	ldm	r7, {r2, r8}
   1f048:	mov	r0, r4
   1f04c:	ldr	r3, [sp, #28]
   1f050:	ldr	r1, [r7, #12]
   1f054:	add	r2, r2, r3
   1f058:	ldrd	r2, [r2, #8]
   1f05c:	str	r5, [sp]
   1f060:	blx	r8
   1f064:	ldr	r3, [sp, #20]
   1f068:	cmp	r3, #0
   1f06c:	bgt	1f278 <__flatcc_fb_gen_c_verifier@@Base+0x93c>
   1f070:	mov	r0, r4
   1f074:	ldr	r3, [r7, #8]
   1f078:	blx	r3
   1f07c:	ldr	r3, [r4, #220]	; 0xdc
   1f080:	cmp	r3, #0
   1f084:	beq	1f31c <__flatcc_fb_gen_c_verifier@@Base+0x9e0>
   1f088:	sub	r3, r3, #1
   1f08c:	movw	r1, #15748	; 0x3d84
   1f090:	movt	r1, #5
   1f094:	mov	r0, r4
   1f098:	str	r3, [r4, #220]	; 0xdc
   1f09c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f0a0:	ldr	r3, [r4, #220]	; 0xdc
   1f0a4:	cmp	r3, #0
   1f0a8:	beq	1f2fc <__flatcc_fb_gen_c_verifier@@Base+0x9c0>
   1f0ac:	sub	r0, r3, #1
   1f0b0:	mov	r2, r5
   1f0b4:	mov	r3, r6
   1f0b8:	movw	r1, #15752	; 0x3d88
   1f0bc:	movt	r1, #5
   1f0c0:	str	r0, [r4, #220]	; 0xdc
   1f0c4:	mov	r0, r4
   1f0c8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f0cc:	ldr	r3, [r4, #220]	; 0xdc
   1f0d0:	ldr	r2, [sp, #20]
   1f0d4:	add	r3, r3, #1
   1f0d8:	cmp	r2, #0
   1f0dc:	str	r3, [r4, #220]	; 0xdc
   1f0e0:	bgt	1f2a8 <__flatcc_fb_gen_c_verifier@@Base+0x96c>
   1f0e4:	mov	r0, r4
   1f0e8:	ldr	r3, [r7, #8]
   1f0ec:	blx	r3
   1f0f0:	b	1f210 <__flatcc_fb_gen_c_verifier@@Base+0x8d4>
   1f0f4:	mov	r1, #0
   1f0f8:	mov	r0, r1
   1f0fc:	str	r1, [sp]
   1f100:	movw	r1, #15588	; 0x3ce4
   1f104:	movt	r1, #5
   1f108:	stmib	sp, {r0, r5, r6}
   1f10c:	mov	r0, r4
   1f110:	ldrd	r2, [sp, #32]
   1f114:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f118:	ldr	r3, [r4, #220]	; 0xdc
   1f11c:	cmp	r8, r9
   1f120:	add	r3, r3, #1
   1f124:	str	r3, [r4, #220]	; 0xdc
   1f128:	beq	1f044 <__flatcc_fb_gen_c_verifier@@Base+0x708>
   1f12c:	ldr	r3, [sp, #24]
   1f130:	cmp	r3, r9
   1f134:	bne	1f198 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1f138:	ldm	r7, {r2, ip}
   1f13c:	mov	r0, r4
   1f140:	ldr	r3, [sp, #28]
   1f144:	ldr	r1, [r7, #12]
   1f148:	add	r2, r2, r3
   1f14c:	ldrd	r2, [r2, #8]
   1f150:	str	r5, [sp]
   1f154:	blx	ip
   1f158:	ldr	r3, [sp, #20]
   1f15c:	cmp	r3, #0
   1f160:	bgt	1f290 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1f164:	mov	r0, r4
   1f168:	ldr	r3, [r7, #8]
   1f16c:	blx	r3
   1f170:	ldr	r3, [r4, #220]	; 0xdc
   1f174:	cmp	r3, #0
   1f178:	beq	1f2dc <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   1f17c:	sub	r3, r3, #1
   1f180:	movw	r1, #15748	; 0x3d84
   1f184:	movt	r1, #5
   1f188:	mov	r0, r4
   1f18c:	str	r3, [r4, #220]	; 0xdc
   1f190:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f194:	b	1f1b4 <__flatcc_fb_gen_c_verifier@@Base+0x878>
   1f198:	ldr	r1, [sp, #16]
   1f19c:	mov	r2, r9
   1f1a0:	mov	r0, r4
   1f1a4:	ldr	ip, [sp, #20]
   1f1a8:	stm	sp, {r1, ip}
   1f1ac:	mov	r1, r7
   1f1b0:	bl	1edd8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1f1b4:	ldr	r3, [r4, #220]	; 0xdc
   1f1b8:	cmp	r3, #0
   1f1bc:	beq	1f33c <__flatcc_fb_gen_c_verifier@@Base+0xa00>
   1f1c0:	sub	r0, r3, #1
   1f1c4:	mov	r2, r5
   1f1c8:	mov	r3, r6
   1f1cc:	movw	r1, #15752	; 0x3d88
   1f1d0:	movt	r1, #5
   1f1d4:	str	r0, [r4, #220]	; 0xdc
   1f1d8:	mov	r0, r4
   1f1dc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f1e0:	ldr	lr, [sp, #16]
   1f1e4:	sub	r3, r9, #1
   1f1e8:	mov	r2, r8
   1f1ec:	mov	r1, r7
   1f1f0:	mov	r0, r4
   1f1f4:	ldr	ip, [r4, #220]	; 0xdc
   1f1f8:	str	lr, [sp]
   1f1fc:	ldr	lr, [sp, #20]
   1f200:	add	ip, ip, #1
   1f204:	str	lr, [sp, #4]
   1f208:	str	ip, [r4, #220]	; 0xdc
   1f20c:	bl	1edd8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1f210:	ldr	r3, [r4, #220]	; 0xdc
   1f214:	cmp	r3, #0
   1f218:	beq	1f2bc <__flatcc_fb_gen_c_verifier@@Base+0x980>
   1f21c:	sub	r1, r3, #1
   1f220:	mov	r2, r5
   1f224:	mov	r3, r6
   1f228:	mov	r0, r4
   1f22c:	str	r1, [r4, #220]	; 0xdc
   1f230:	movw	r1, #15776	; 0x3da0
   1f234:	movt	r1, #5
   1f238:	add	sp, sp, #52	; 0x34
   1f23c:	ldrd	r4, [sp]
   1f240:	ldrd	r6, [sp, #8]
   1f244:	ldrd	r8, [sp, #16]
   1f248:	ldrd	sl, [sp, #24]
   1f24c:	ldr	lr, [sp, #32]
   1f250:	add	sp, sp, #36	; 0x24
   1f254:	b	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f258:	mov	r2, #0
   1f25c:	mov	r3, #0
   1f260:	mov	r1, #0
   1f264:	mov	r0, r1
   1f268:	mov	r5, r1
   1f26c:	strd	r2, [sp, #32]
   1f270:	mov	r6, r1
   1f274:	b	1f0fc <__flatcc_fb_gen_c_verifier@@Base+0x7c0>
   1f278:	movw	r1, #15632	; 0x3d10
   1f27c:	movt	r1, #5
   1f280:	mov	r2, r3
   1f284:	mov	r0, r4
   1f288:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f28c:	b	1f07c <__flatcc_fb_gen_c_verifier@@Base+0x740>
   1f290:	movw	r1, #15632	; 0x3d10
   1f294:	movt	r1, #5
   1f298:	mov	r2, r3
   1f29c:	mov	r0, r4
   1f2a0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f2a4:	b	1f170 <__flatcc_fb_gen_c_verifier@@Base+0x834>
   1f2a8:	movw	r1, #15632	; 0x3d10
   1f2ac:	movt	r1, #5
   1f2b0:	mov	r0, r4
   1f2b4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1f2b8:	b	1f210 <__flatcc_fb_gen_c_verifier@@Base+0x8d4>
   1f2bc:	movw	r3, #14968	; 0x3a78
   1f2c0:	movt	r3, #5
   1f2c4:	movw	r1, #15648	; 0x3d20
   1f2c8:	movt	r1, #5
   1f2cc:	movw	r0, #15736	; 0x3d78
   1f2d0:	movt	r0, #5
   1f2d4:	movw	r2, #910	; 0x38e
   1f2d8:	bl	14120 <__assert_fail@plt>
   1f2dc:	movw	r3, #14968	; 0x3a78
   1f2e0:	movt	r3, #5
   1f2e4:	movw	r1, #15648	; 0x3d20
   1f2e8:	movt	r1, #5
   1f2ec:	movw	r0, #15736	; 0x3d78
   1f2f0:	movt	r0, #5
   1f2f4:	movw	r2, #903	; 0x387
   1f2f8:	bl	14120 <__assert_fail@plt>
   1f2fc:	movw	r3, #14968	; 0x3a78
   1f300:	movt	r3, #5
   1f304:	movw	r1, #15648	; 0x3d20
   1f308:	movt	r1, #5
   1f30c:	movw	r0, #15736	; 0x3d78
   1f310:	movt	r0, #5
   1f314:	movw	r2, #889	; 0x379
   1f318:	bl	14120 <__assert_fail@plt>
   1f31c:	movw	r3, #14968	; 0x3a78
   1f320:	movt	r3, #5
   1f324:	movw	r1, #15648	; 0x3d20
   1f328:	movt	r1, #5
   1f32c:	movw	r0, #15736	; 0x3d78
   1f330:	movt	r0, #5
   1f334:	mov	r2, #888	; 0x378
   1f338:	bl	14120 <__assert_fail@plt>
   1f33c:	movw	r3, #14968	; 0x3a78
   1f340:	movt	r3, #5
   1f344:	movw	r1, #15648	; 0x3d20
   1f348:	movt	r1, #5
   1f34c:	movw	r0, #15736	; 0x3d78
   1f350:	movt	r0, #5
   1f354:	movw	r2, #907	; 0x38b
   1f358:	bl	14120 <__assert_fail@plt>
   1f35c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f360:	strd	r6, [sp, #8]
   1f364:	strd	r8, [sp, #16]
   1f368:	strd	sl, [sp, #24]
   1f36c:	str	lr, [sp, #32]
   1f370:	sub	sp, sp, #100	; 0x64
   1f374:	ldr	r7, [sp, #136]	; 0x88
   1f378:	strd	r2, [sp, #68]	; 0x44
   1f37c:	ldr	r3, [r1]
   1f380:	strd	r0, [sp, #76]	; 0x4c
   1f384:	add	r1, r7, #7
   1f388:	str	r3, [sp, #84]	; 0x54
   1f38c:	add	r3, r3, r2, lsl #4
   1f390:	str	r1, [sp, #88]	; 0x58
   1f394:	str	r3, [sp, #92]	; 0x5c
   1f398:	ldr	r3, [r3, #4]
   1f39c:	cmp	r1, r3
   1f3a0:	bge	1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xebc>
   1f3a4:	sub	r3, r3, r7
   1f3a8:	cmp	r3, #8
   1f3ac:	beq	1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xebc>
   1f3b0:	ldrd	r2, [sp, #68]	; 0x44
   1f3b4:	sub	r3, r3, r2
   1f3b8:	add	r3, r3, r3, lsr #31
   1f3bc:	add	r3, r2, r3, asr #1
   1f3c0:	cmp	r2, r3
   1f3c4:	str	r3, [sp, #64]	; 0x40
   1f3c8:	bge	1f840 <__flatcc_fb_gen_c_verifier@@Base+0xf04>
   1f3cc:	ldr	r2, [sp, #84]	; 0x54
   1f3d0:	mov	r4, #0
   1f3d4:	mov	r5, #0
   1f3d8:	mov	lr, #0
   1f3dc:	str	r3, [sp, #52]	; 0x34
   1f3e0:	mov	r1, lr
   1f3e4:	mov	r6, lr
   1f3e8:	strd	r4, [sp, #56]	; 0x38
   1f3ec:	add	r8, r2, r3, lsl #4
   1f3f0:	mov	r2, lr
   1f3f4:	b	1f7c8 <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   1f3f8:	ldr	ip, [r8, #-16]
   1f3fc:	rsb	r6, r4, #7
   1f400:	cmp	r4, #0
   1f404:	lsl	r6, r6, #3
   1f408:	sub	r9, r3, #2
   1f40c:	sub	r2, r6, #32
   1f410:	rsb	r0, r6, #32
   1f414:	add	r4, ip, r4
   1f418:	ldrb	r4, [r4, r7]
   1f41c:	lsl	r2, r4, r2
   1f420:	lsl	r6, r4, r6
   1f424:	orr	r2, r2, r4, lsr r0
   1f428:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f42c:	add	r0, ip, r7
   1f430:	mov	r5, #0
   1f434:	ldrb	r4, [r0, r9]
   1f438:	rsb	sl, r9, #7
   1f43c:	cmp	r9, #0
   1f440:	lsl	sl, sl, #3
   1f444:	sub	r9, r3, #3
   1f448:	strd	r4, [sp, #16]
   1f44c:	sub	r5, sl, #32
   1f450:	ldr	fp, [sp, #16]
   1f454:	lsl	r5, fp, r5
   1f458:	orr	r6, r6, fp, lsl sl
   1f45c:	rsb	sl, sl, #32
   1f460:	orr	r5, r5, fp, lsr sl
   1f464:	orr	r2, r5, r2
   1f468:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f46c:	ldrb	r4, [r0, r9]
   1f470:	mov	r5, #0
   1f474:	rsb	sl, r9, #7
   1f478:	cmp	r9, #0
   1f47c:	sub	r9, r3, #4
   1f480:	strd	r4, [sp, #16]
   1f484:	lsl	r5, sl, #3
   1f488:	ldr	fp, [sp, #16]
   1f48c:	sub	sl, r5, #32
   1f490:	lsl	sl, fp, sl
   1f494:	orr	r6, r6, fp, lsl r5
   1f498:	rsb	r5, r5, #32
   1f49c:	orr	sl, sl, fp, lsr r5
   1f4a0:	orr	r2, sl, r2
   1f4a4:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f4a8:	ldrb	r4, [r0, r9]
   1f4ac:	mov	r5, #0
   1f4b0:	rsb	sl, r9, #7
   1f4b4:	cmp	r9, #0
   1f4b8:	sub	r9, r3, #5
   1f4bc:	strd	r4, [sp, #16]
   1f4c0:	lsl	r5, sl, #3
   1f4c4:	ldr	fp, [sp, #16]
   1f4c8:	sub	sl, r5, #32
   1f4cc:	lsl	sl, fp, sl
   1f4d0:	orr	r6, r6, fp, lsl r5
   1f4d4:	rsb	r5, r5, #32
   1f4d8:	orr	sl, sl, fp, lsr r5
   1f4dc:	orr	r2, sl, r2
   1f4e0:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f4e4:	ldrb	r4, [r0, r9]
   1f4e8:	mov	r5, #0
   1f4ec:	rsb	sl, r9, #7
   1f4f0:	cmp	r9, #0
   1f4f4:	sub	r9, r3, #6
   1f4f8:	strd	r4, [sp, #16]
   1f4fc:	lsl	r5, sl, #3
   1f500:	ldr	fp, [sp, #16]
   1f504:	sub	sl, r5, #32
   1f508:	lsl	sl, fp, sl
   1f50c:	orr	r6, r6, fp, lsl r5
   1f510:	rsb	r5, r5, #32
   1f514:	orr	sl, sl, fp, lsr r5
   1f518:	orr	r2, sl, r2
   1f51c:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f520:	ldrb	r4, [r0, r9]
   1f524:	mov	r5, #0
   1f528:	rsb	sl, r9, #7
   1f52c:	cmp	r9, #0
   1f530:	sub	r9, r3, #7
   1f534:	strd	r4, [sp, #16]
   1f538:	lsl	r5, sl, #3
   1f53c:	ldr	fp, [sp, #16]
   1f540:	sub	sl, r5, #32
   1f544:	lsl	sl, fp, sl
   1f548:	orr	r6, r6, fp, lsl r5
   1f54c:	rsb	r5, r5, #32
   1f550:	orr	sl, sl, fp, lsr r5
   1f554:	orr	r2, sl, r2
   1f558:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f55c:	ldrb	r4, [r0, r9]
   1f560:	rsb	sl, r9, #7
   1f564:	cmp	r9, #0
   1f568:	lsl	sl, sl, #3
   1f56c:	sub	r0, sl, #32
   1f570:	lsl	r0, r4, r0
   1f574:	orr	r6, r6, r4, lsl sl
   1f578:	rsb	sl, sl, #32
   1f57c:	orr	r0, r0, r4, lsr sl
   1f580:	orr	r2, r0, r2
   1f584:	beq	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f588:	ldrb	r4, [ip, r7]
   1f58c:	orr	r2, r2, r4, lsl #24
   1f590:	rsb	r3, r3, #8
   1f594:	mov	r4, #1
   1f598:	lsl	r3, r3, #3
   1f59c:	sub	ip, r3, #32
   1f5a0:	rsb	r0, r3, #32
   1f5a4:	lsl	r3, r4, r3
   1f5a8:	lsl	ip, r4, ip
   1f5ac:	orr	r0, ip, r4, lsr r0
   1f5b0:	str	r3, [sp, #8]
   1f5b4:	str	r0, [sp, #12]
   1f5b8:	ldrd	r4, [sp, #8]
   1f5bc:	rsbs	r4, r4, #0
   1f5c0:	rsc	r5, r5, #0
   1f5c4:	strd	r4, [sp, #56]	; 0x38
   1f5c8:	ldm	r8, {r9, ip}
   1f5cc:	cmp	r7, ip
   1f5d0:	bgt	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f5d4:	sub	r3, ip, r7
   1f5d8:	cmp	r3, #8
   1f5dc:	movge	r3, #8
   1f5e0:	cmp	r7, ip
   1f5e4:	sub	r1, r3, #1
   1f5e8:	beq	1fc8c <__flatcc_fb_gen_c_verifier@@Base+0x1350>
   1f5ec:	add	r0, r9, r7
   1f5f0:	mov	r5, #0
   1f5f4:	ldrb	r4, [r0, r1]
   1f5f8:	rsb	lr, r1, #7
   1f5fc:	cmp	r1, #0
   1f600:	lsl	lr, lr, #3
   1f604:	sub	sl, r3, #2
   1f608:	sub	r1, lr, #32
   1f60c:	strd	r4, [sp, #16]
   1f610:	rsb	r5, lr, #32
   1f614:	ldr	fp, [sp, #16]
   1f618:	lsl	r1, fp, r1
   1f61c:	lsl	lr, fp, lr
   1f620:	orr	r1, r1, fp, lsr r5
   1f624:	beq	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f628:	ldrb	r4, [r0, sl]
   1f62c:	mov	r5, #0
   1f630:	rsb	fp, sl, #7
   1f634:	cmp	sl, #0
   1f638:	sub	sl, r3, #3
   1f63c:	strd	r4, [sp, #16]
   1f640:	lsl	r5, fp, #3
   1f644:	ldr	r4, [sp, #16]
   1f648:	sub	fp, r5, #32
   1f64c:	lsl	fp, r4, fp
   1f650:	orr	lr, lr, r4, lsl r5
   1f654:	rsb	r5, r5, #32
   1f658:	orr	fp, fp, r4, lsr r5
   1f65c:	orr	r1, fp, r1
   1f660:	beq	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f664:	ldrb	r4, [r0, sl]
   1f668:	mov	r5, #0
   1f66c:	rsb	fp, sl, #7
   1f670:	cmp	sl, #0
   1f674:	sub	sl, r3, #4
   1f678:	strd	r4, [sp, #16]
   1f67c:	lsl	r5, fp, #3
   1f680:	ldr	r4, [sp, #16]
   1f684:	sub	fp, r5, #32
   1f688:	lsl	fp, r4, fp
   1f68c:	orr	lr, lr, r4, lsl r5
   1f690:	rsb	r5, r5, #32
   1f694:	orr	fp, fp, r4, lsr r5
   1f698:	orr	r1, fp, r1
   1f69c:	beq	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f6a0:	ldrb	r4, [r0, sl]
   1f6a4:	mov	r5, #0
   1f6a8:	rsb	fp, sl, #7
   1f6ac:	cmp	sl, #0
   1f6b0:	sub	sl, r3, #5
   1f6b4:	strd	r4, [sp, #16]
   1f6b8:	lsl	r5, fp, #3
   1f6bc:	ldr	r4, [sp, #16]
   1f6c0:	sub	fp, r5, #32
   1f6c4:	lsl	fp, r4, fp
   1f6c8:	orr	lr, lr, r4, lsl r5
   1f6cc:	rsb	r5, r5, #32
   1f6d0:	orr	fp, fp, r4, lsr r5
   1f6d4:	orr	r1, fp, r1
   1f6d8:	beq	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f6dc:	ldrb	r4, [r0, sl]
   1f6e0:	mov	r5, #0
   1f6e4:	rsb	fp, sl, #7
   1f6e8:	cmp	sl, #0
   1f6ec:	sub	sl, r3, #6
   1f6f0:	strd	r4, [sp, #16]
   1f6f4:	lsl	r5, fp, #3
   1f6f8:	ldr	r4, [sp, #16]
   1f6fc:	sub	fp, r5, #32
   1f700:	lsl	fp, r4, fp
   1f704:	orr	lr, lr, r4, lsl r5
   1f708:	rsb	r5, r5, #32
   1f70c:	orr	fp, fp, r4, lsr r5
   1f710:	orr	r1, fp, r1
   1f714:	beq	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f718:	ldrb	r4, [r0, sl]
   1f71c:	mov	r5, #0
   1f720:	rsb	fp, sl, #7
   1f724:	cmp	sl, #0
   1f728:	sub	r3, r3, #7
   1f72c:	strd	r4, [sp, #16]
   1f730:	lsl	r5, fp, #3
   1f734:	ldr	fp, [sp, #16]
   1f738:	sub	sl, r5, #32
   1f73c:	lsl	sl, fp, sl
   1f740:	orr	lr, lr, fp, lsl r5
   1f744:	rsb	r5, r5, #32
   1f748:	orr	sl, sl, fp, lsr r5
   1f74c:	orr	r1, sl, r1
   1f750:	beq	1f784 <__flatcc_fb_gen_c_verifier@@Base+0xe48>
   1f754:	ldrb	r4, [r0, r3]
   1f758:	rsb	sl, r3, #7
   1f75c:	cmp	r3, #0
   1f760:	lsl	sl, sl, #3
   1f764:	sub	r3, sl, #32
   1f768:	lsl	r3, r4, r3
   1f76c:	orr	lr, lr, r4, lsl sl
   1f770:	rsb	sl, sl, #32
   1f774:	orr	r3, r3, r4, lsr sl
   1f778:	ldrbne	r4, [r9, r7]
   1f77c:	orr	r1, r3, r1
   1f780:	orrne	r1, r1, r4, lsl #24
   1f784:	eor	r0, r6, lr
   1f788:	eor	r3, r2, r1
   1f78c:	ldrd	sl, [sp, #56]	; 0x38
   1f790:	and	r0, sl, r0
   1f794:	and	r3, fp, r3
   1f798:	str	r0, [sp, #32]
   1f79c:	str	r3, [sp, #36]	; 0x24
   1f7a0:	ldrd	sl, [sp, #32]
   1f7a4:	ldr	r0, [sp, #52]	; 0x34
   1f7a8:	orrs	r3, sl, fp
   1f7ac:	sub	r4, r0, #1
   1f7b0:	bne	1fe2c <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   1f7b4:	ldr	r0, [sp, #68]	; 0x44
   1f7b8:	sub	r8, r8, #16
   1f7bc:	str	r4, [sp, #52]	; 0x34
   1f7c0:	cmp	r0, r4
   1f7c4:	beq	1f840 <__flatcc_fb_gen_c_verifier@@Base+0xf04>
   1f7c8:	ldr	r0, [r8, #-12]
   1f7cc:	cmp	r7, r0
   1f7d0:	bgt	1f5c8 <__flatcc_fb_gen_c_verifier@@Base+0xc8c>
   1f7d4:	sub	r3, r0, r7
   1f7d8:	cmp	r3, #8
   1f7dc:	movge	r3, #8
   1f7e0:	cmp	r7, r0
   1f7e4:	sub	r4, r3, #1
   1f7e8:	bne	1f3f8 <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1f7ec:	mov	r6, #0
   1f7f0:	mov	r2, r6
   1f7f4:	b	1f590 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1f7f8:	ldr	r3, [sp, #68]	; 0x44
   1f7fc:	ldr	r2, [sp, #72]	; 0x48
   1f800:	cmp	r3, r2
   1f804:	beq	20068 <__flatcc_fb_gen_c_verifier@@Base+0x172c>
   1f808:	add	r3, r3, #1
   1f80c:	cmp	r3, r2
   1f810:	bne	1f3b0 <__flatcc_fb_gen_c_verifier@@Base+0xa74>
   1f814:	ldr	r3, [sp, #84]	; 0x54
   1f818:	add	r3, r3, r2, lsl #4
   1f81c:	ldr	r2, [sp, #88]	; 0x58
   1f820:	ldr	r3, [r3, #4]
   1f824:	cmp	r2, r3
   1f828:	bge	20068 <__flatcc_fb_gen_c_verifier@@Base+0x172c>
   1f82c:	sub	r3, r3, r7
   1f830:	cmp	r3, #8
   1f834:	beq	20068 <__flatcc_fb_gen_c_verifier@@Base+0x172c>
   1f838:	ldr	r3, [sp, #68]	; 0x44
   1f83c:	str	r3, [sp, #64]	; 0x40
   1f840:	ldr	r2, [sp, #64]	; 0x40
   1f844:	ldr	r3, [sp, #72]	; 0x48
   1f848:	cmp	r3, r2
   1f84c:	movle	r4, r2
   1f850:	ble	1fca0 <__flatcc_fb_gen_c_verifier@@Base+0x1364>
   1f854:	ldr	r3, [sp, #84]	; 0x54
   1f858:	mov	lr, #0
   1f85c:	mov	fp, #1
   1f860:	mov	ip, lr
   1f864:	mov	r6, lr
   1f868:	add	r8, r3, r2, lsl #4
   1f86c:	mov	r2, #0
   1f870:	mov	r3, #0
   1f874:	mov	sl, r8
   1f878:	mov	r8, lr
   1f87c:	strd	r2, [sp, #8]
   1f880:	mov	r2, lr
   1f884:	b	1fc5c <__flatcc_fb_gen_c_verifier@@Base+0x1320>
   1f888:	ldr	r4, [sl]
   1f88c:	rsb	r6, r1, #7
   1f890:	cmp	r1, #0
   1f894:	lsl	r6, r6, #3
   1f898:	sub	r5, r3, #2
   1f89c:	sub	r2, r6, #32
   1f8a0:	rsb	r9, r6, #32
   1f8a4:	add	lr, r4, r7
   1f8a8:	ldrb	r0, [lr, r1]
   1f8ac:	lsl	r2, r0, r2
   1f8b0:	lsl	r6, r0, r6
   1f8b4:	orr	r2, r2, r0, lsr r9
   1f8b8:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1f8bc:	ldrb	r0, [lr, r5]
   1f8c0:	mov	r1, #0
   1f8c4:	rsb	r9, r5, #7
   1f8c8:	cmp	r5, #0
   1f8cc:	strd	r0, [sp, #8]
   1f8d0:	lsl	r1, r9, #3
   1f8d4:	sub	r9, r3, #3
   1f8d8:	ldr	r0, [sp, #8]
   1f8dc:	sub	r5, r1, #32
   1f8e0:	lsl	r5, r0, r5
   1f8e4:	orr	r6, r6, r0, lsl r1
   1f8e8:	rsb	r1, r1, #32
   1f8ec:	orr	r5, r5, r0, lsr r1
   1f8f0:	orr	r2, r5, r2
   1f8f4:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1f8f8:	add	r1, r4, r9
   1f8fc:	rsb	r5, r9, #7
   1f900:	ldrb	r0, [r1, r7]
   1f904:	mov	r1, #0
   1f908:	lsl	r5, r5, #3
   1f90c:	cmp	r9, #0
   1f910:	sub	r9, r3, #4
   1f914:	strd	r0, [sp, #8]
   1f918:	sub	r1, r5, #32
   1f91c:	ldr	r0, [sp, #8]
   1f920:	lsl	r1, r0, r1
   1f924:	orr	r6, r6, r0, lsl r5
   1f928:	rsb	r5, r5, #32
   1f92c:	orr	r1, r1, r0, lsr r5
   1f930:	orr	r2, r1, r2
   1f934:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1f938:	add	r1, r4, r9
   1f93c:	rsb	r5, r9, #7
   1f940:	ldrb	r0, [r1, r7]
   1f944:	mov	r1, #0
   1f948:	lsl	r5, r5, #3
   1f94c:	cmp	r9, #0
   1f950:	sub	r9, r3, #5
   1f954:	strd	r0, [sp, #8]
   1f958:	sub	r1, r5, #32
   1f95c:	ldr	r0, [sp, #8]
   1f960:	lsl	r1, r0, r1
   1f964:	orr	r6, r6, r0, lsl r5
   1f968:	rsb	r5, r5, #32
   1f96c:	orr	r1, r1, r0, lsr r5
   1f970:	orr	r2, r1, r2
   1f974:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1f978:	add	r1, r4, r9
   1f97c:	rsb	r5, r9, #7
   1f980:	ldrb	r0, [r1, r7]
   1f984:	mov	r1, #0
   1f988:	lsl	r5, r5, #3
   1f98c:	cmp	r9, #0
   1f990:	sub	r9, r3, #6
   1f994:	strd	r0, [sp, #8]
   1f998:	sub	r1, r5, #32
   1f99c:	ldr	r0, [sp, #8]
   1f9a0:	lsl	r1, r0, r1
   1f9a4:	orr	r6, r6, r0, lsl r5
   1f9a8:	rsb	r5, r5, #32
   1f9ac:	orr	r1, r1, r0, lsr r5
   1f9b0:	orr	r2, r1, r2
   1f9b4:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1f9b8:	ldrb	r0, [lr, r9]
   1f9bc:	mov	r1, #0
   1f9c0:	rsb	r5, r9, #7
   1f9c4:	cmp	r9, #0
   1f9c8:	strd	r0, [sp, #8]
   1f9cc:	lsl	r1, r5, #3
   1f9d0:	sub	r5, r3, #7
   1f9d4:	ldr	r0, [sp, #8]
   1f9d8:	sub	r9, r1, #32
   1f9dc:	lsl	r9, r0, r9
   1f9e0:	orr	r6, r6, r0, lsl r1
   1f9e4:	rsb	r1, r1, #32
   1f9e8:	orr	r9, r9, r0, lsr r1
   1f9ec:	orr	r2, r9, r2
   1f9f0:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1f9f4:	ldrb	r0, [lr, r5]
   1f9f8:	mov	r1, #0
   1f9fc:	rsb	r9, r5, #7
   1fa00:	lsl	r9, r9, #3
   1fa04:	cmp	r5, #0
   1fa08:	strd	r0, [sp, #8]
   1fa0c:	sub	r1, r9, #32
   1fa10:	ldr	lr, [sp, #8]
   1fa14:	lsl	r1, lr, r1
   1fa18:	orr	r6, r6, lr, lsl r9
   1fa1c:	rsb	r9, r9, #32
   1fa20:	orr	r1, r1, lr, lsr r9
   1fa24:	orr	r2, r1, r2
   1fa28:	beq	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1fa2c:	ldrb	r0, [r4, r7]
   1fa30:	orr	r2, r2, r0, lsl #24
   1fa34:	rsb	r3, r3, #8
   1fa38:	lsl	r3, r3, #3
   1fa3c:	sub	r0, r3, #32
   1fa40:	rsb	r1, r3, #32
   1fa44:	lsl	r3, fp, r3
   1fa48:	lsl	r0, fp, r0
   1fa4c:	orr	r1, r0, fp, lsr r1
   1fa50:	str	r3, [sp, #24]
   1fa54:	str	r1, [sp, #28]
   1fa58:	ldrd	r0, [sp, #24]
   1fa5c:	rsbs	r0, r0, #0
   1fa60:	rsc	r1, r1, #0
   1fa64:	strd	r0, [sp, #8]
   1fa68:	ldr	r1, [sl, #20]
   1fa6c:	cmp	r7, r1
   1fa70:	bgt	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fa74:	sub	r3, r1, r7
   1fa78:	cmp	r3, #8
   1fa7c:	movge	r3, #8
   1fa80:	cmp	r7, r1
   1fa84:	sub	r1, r3, #1
   1fa88:	beq	20098 <__flatcc_fb_gen_c_verifier@@Base+0x175c>
   1fa8c:	ldr	r9, [sl, #16]
   1fa90:	rsb	r8, r1, #7
   1fa94:	cmp	r1, #0
   1fa98:	lsl	r8, r8, #3
   1fa9c:	sub	lr, r3, #2
   1faa0:	sub	ip, r8, #32
   1faa4:	rsb	r4, r8, #32
   1faa8:	add	r1, r9, r1
   1faac:	ldrb	r0, [r1, r7]
   1fab0:	lsl	ip, r0, ip
   1fab4:	lsl	r8, r0, r8
   1fab8:	orr	ip, ip, r0, lsr r4
   1fabc:	beq	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fac0:	add	r1, r9, r7
   1fac4:	mov	r5, #0
   1fac8:	ldrb	r4, [r1, lr]
   1facc:	rsb	r0, lr, #7
   1fad0:	cmp	lr, #0
   1fad4:	lsl	r0, r0, #3
   1fad8:	sub	lr, r3, #3
   1fadc:	strd	r4, [sp, #16]
   1fae0:	sub	r5, r0, #32
   1fae4:	ldr	r4, [sp, #16]
   1fae8:	lsl	r5, r4, r5
   1faec:	orr	r8, r8, r4, lsl r0
   1faf0:	rsb	r0, r0, #32
   1faf4:	orr	r5, r5, r4, lsr r0
   1faf8:	orr	ip, r5, ip
   1fafc:	beq	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fb00:	ldrb	r4, [r1, lr]
   1fb04:	mov	r5, #0
   1fb08:	rsb	r0, lr, #7
   1fb0c:	cmp	lr, #0
   1fb10:	strd	r4, [sp, #16]
   1fb14:	lsl	r5, r0, #3
   1fb18:	sub	r0, r3, #4
   1fb1c:	ldr	r4, [sp, #16]
   1fb20:	sub	lr, r5, #32
   1fb24:	lsl	lr, r4, lr
   1fb28:	orr	r8, r8, r4, lsl r5
   1fb2c:	rsb	r5, r5, #32
   1fb30:	orr	lr, lr, r4, lsr r5
   1fb34:	orr	ip, lr, ip
   1fb38:	beq	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fb3c:	ldrb	r4, [r1, r0]
   1fb40:	mov	r5, #0
   1fb44:	rsb	lr, r0, #7
   1fb48:	lsl	lr, lr, #3
   1fb4c:	cmp	r0, #0
   1fb50:	sub	r0, r3, #5
   1fb54:	strd	r4, [sp, #16]
   1fb58:	sub	r5, lr, #32
   1fb5c:	ldr	r4, [sp, #16]
   1fb60:	lsl	r5, r4, r5
   1fb64:	orr	r8, r8, r4, lsl lr
   1fb68:	rsb	lr, lr, #32
   1fb6c:	orr	r5, r5, r4, lsr lr
   1fb70:	orr	ip, r5, ip
   1fb74:	beq	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fb78:	ldrb	r4, [r1, r0]
   1fb7c:	mov	r5, #0
   1fb80:	rsb	lr, r0, #7
   1fb84:	lsl	lr, lr, #3
   1fb88:	cmp	r0, #0
   1fb8c:	sub	r0, r3, #6
   1fb90:	strd	r4, [sp, #16]
   1fb94:	sub	r5, lr, #32
   1fb98:	ldr	r4, [sp, #16]
   1fb9c:	lsl	r5, r4, r5
   1fba0:	orr	r8, r8, r4, lsl lr
   1fba4:	rsb	lr, lr, #32
   1fba8:	orr	r5, r5, r4, lsr lr
   1fbac:	orr	ip, r5, ip
   1fbb0:	beq	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fbb4:	ldrb	r4, [r1, r0]
   1fbb8:	rsb	lr, r0, #7
   1fbbc:	cmp	r0, #0
   1fbc0:	lsl	lr, lr, #3
   1fbc4:	sub	r3, r3, #7
   1fbc8:	sub	r0, lr, #32
   1fbcc:	lsl	r0, r4, r0
   1fbd0:	orr	r8, r8, r4, lsl lr
   1fbd4:	rsb	lr, lr, #32
   1fbd8:	orr	r0, r0, r4, lsr lr
   1fbdc:	orr	ip, r0, ip
   1fbe0:	beq	1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x12d8>
   1fbe4:	ldrb	r0, [r1, r3]
   1fbe8:	rsb	lr, r3, #7
   1fbec:	cmp	r3, #0
   1fbf0:	lsl	lr, lr, #3
   1fbf4:	sub	r3, lr, #32
   1fbf8:	lsl	r3, r0, r3
   1fbfc:	orr	r8, r8, r0, lsl lr
   1fc00:	rsb	lr, lr, #32
   1fc04:	orr	r3, r3, r0, lsr lr
   1fc08:	ldrbne	r0, [r9, r7]
   1fc0c:	orr	ip, r3, ip
   1fc10:	orrne	ip, ip, r0, lsl #24
   1fc14:	eor	r1, r6, r8
   1fc18:	eor	r3, r2, ip
   1fc1c:	ldr	r0, [sp, #8]
   1fc20:	and	r1, r0, r1
   1fc24:	str	r1, [sp, #40]	; 0x28
   1fc28:	ldr	r1, [sp, #64]	; 0x40
   1fc2c:	add	r4, r1, #1
   1fc30:	ldr	r1, [sp, #12]
   1fc34:	and	r3, r1, r3
   1fc38:	str	r3, [sp, #44]	; 0x2c
   1fc3c:	ldrd	r0, [sp, #40]	; 0x28
   1fc40:	orrs	r3, r0, r1
   1fc44:	bne	1fca8 <__flatcc_fb_gen_c_verifier@@Base+0x136c>
   1fc48:	ldr	r1, [sp, #72]	; 0x48
   1fc4c:	add	sl, sl, #16
   1fc50:	str	r4, [sp, #64]	; 0x40
   1fc54:	cmp	r1, r4
   1fc58:	beq	1fca0 <__flatcc_fb_gen_c_verifier@@Base+0x1364>
   1fc5c:	ldr	r1, [sl, #4]
   1fc60:	cmp	r7, r1
   1fc64:	bgt	1fa68 <__flatcc_fb_gen_c_verifier@@Base+0x112c>
   1fc68:	sub	r3, r1, r7
   1fc6c:	cmp	r3, #8
   1fc70:	movge	r3, #8
   1fc74:	cmp	r7, r1
   1fc78:	sub	r1, r3, #1
   1fc7c:	bne	1f888 <__flatcc_fb_gen_c_verifier@@Base+0xf4c>
   1fc80:	mov	r6, #0
   1fc84:	mov	r2, r6
   1fc88:	b	1fa34 <__flatcc_fb_gen_c_verifier@@Base+0x10f8>
   1fc8c:	mov	lr, #0
   1fc90:	mov	r0, r6
   1fc94:	mov	r1, lr
   1fc98:	mov	r3, r2
   1fc9c:	b	1f78c <__flatcc_fb_gen_c_verifier@@Base+0xe50>
   1fca0:	str	r4, [sp, #64]	; 0x40
   1fca4:	add	r4, r4, #1
   1fca8:	ldr	r5, [sp, #68]	; 0x44
   1fcac:	cmp	r5, r4
   1fcb0:	bge	20388 <__flatcc_fb_gen_c_verifier@@Base+0x1a4c>
   1fcb4:	ldr	r0, [sp, #88]	; 0x58
   1fcb8:	ldr	r3, [sp, #92]	; 0x5c
   1fcbc:	ldr	r2, [r3, #4]
   1fcc0:	cmp	r0, r2
   1fcc4:	bge	1fcd4 <__flatcc_fb_gen_c_verifier@@Base+0x1398>
   1fcc8:	sub	r1, r2, r7
   1fccc:	cmp	r1, #8
   1fcd0:	bgt	200ac <__flatcc_fb_gen_c_verifier@@Base+0x1770>
   1fcd4:	add	r5, r5, #1
   1fcd8:	add	r3, r3, #16
   1fcdc:	cmp	r5, r4
   1fce0:	bne	1fcbc <__flatcc_fb_gen_c_verifier@@Base+0x1380>
   1fce4:	ldr	r8, [sp, #68]	; 0x44
   1fce8:	movw	r6, #45408	; 0xb160
   1fcec:	movt	r6, #4
   1fcf0:	mov	r9, r5
   1fcf4:	ldr	r3, [sp, #72]	; 0x48
   1fcf8:	cmp	r8, r5
   1fcfc:	movlt	r8, #1
   1fd00:	movge	r8, #0
   1fd04:	cmp	r3, r5
   1fd08:	movlt	r8, #0
   1fd0c:	cmp	r8, #0
   1fd10:	movne	r8, #0
   1fd14:	beq	2044c <__flatcc_fb_gen_c_verifier@@Base+0x1b10>
   1fd18:	sub	r3, r9, #1
   1fd1c:	ldr	r2, [sp, #68]	; 0x44
   1fd20:	mov	sl, #0
   1fd24:	ldr	lr, [sp, #80]	; 0x50
   1fd28:	ldr	fp, [sp, #76]	; 0x4c
   1fd2c:	ldr	ip, [lr, #24]
   1fd30:	mov	r1, lr
   1fd34:	mov	r0, fp
   1fd38:	add	r9, ip, #1
   1fd3c:	stm	sp, {r7, r9}
   1fd40:	str	r9, [lr, #24]
   1fd44:	bl	1edd8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   1fd48:	mov	r2, r9
   1fd4c:	mov	r0, fp
   1fd50:	movw	r1, #16112	; 0x3ef0
   1fd54:	movt	r1, #5
   1fd58:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd5c:	ldr	r3, [fp, #220]	; 0xdc
   1fd60:	mov	r2, r9
   1fd64:	mov	r0, fp
   1fd68:	movw	r1, #16132	; 0x3f04
   1fd6c:	movt	r1, #5
   1fd70:	str	sl, [fp, #220]	; 0xdc
   1fd74:	str	r3, [fp, #228]	; 0xe4
   1fd78:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fd7c:	ldr	ip, [fp, #228]	; 0xe4
   1fd80:	mov	r0, fp
   1fd84:	mov	r2, r4
   1fd88:	str	r7, [sp]
   1fd8c:	ldr	r3, [sp, #72]	; 0x48
   1fd90:	ldr	r1, [sp, #80]	; 0x50
   1fd94:	str	ip, [fp, #220]	; 0xdc
   1fd98:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1fd9c:	ldr	r3, [fp, #220]	; 0xdc
   1fda0:	mov	r0, fp
   1fda4:	mov	r2, r9
   1fda8:	movw	r1, #16144	; 0x3f10
   1fdac:	movt	r1, #5
   1fdb0:	str	sl, [fp, #220]	; 0xdc
   1fdb4:	str	r3, [fp, #228]	; 0xe4
   1fdb8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fdbc:	ldr	r3, [fp, #228]	; 0xe4
   1fdc0:	movw	r1, #16160	; 0x3f20
   1fdc4:	movt	r1, #5
   1fdc8:	mov	r0, fp
   1fdcc:	str	r3, [fp, #220]	; 0xdc
   1fdd0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fdd4:	cmp	r4, r5
   1fdd8:	ble	2007c <__flatcc_fb_gen_c_verifier@@Base+0x1740>
   1fddc:	ldr	r3, [sp, #76]	; 0x4c
   1fde0:	ldr	r3, [r3, #220]	; 0xdc
   1fde4:	cmp	r3, #0
   1fde8:	beq	203a8 <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1fdec:	ldr	ip, [sp, #76]	; 0x4c
   1fdf0:	sub	r1, r3, #1
   1fdf4:	mov	r2, r8
   1fdf8:	mov	r3, r6
   1fdfc:	mov	r0, ip
   1fe00:	str	r1, [ip, #220]	; 0xdc
   1fe04:	movw	r1, #16172	; 0x3f2c
   1fe08:	movt	r1, #5
   1fe0c:	add	sp, sp, #100	; 0x64
   1fe10:	ldrd	r4, [sp]
   1fe14:	ldrd	r6, [sp, #8]
   1fe18:	ldrd	r8, [sp, #16]
   1fe1c:	ldrd	sl, [sp, #24]
   1fe20:	ldr	lr, [sp, #32]
   1fe24:	add	sp, sp, #36	; 0x24
   1fe28:	b	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1fe2c:	cmp	r7, ip
   1fe30:	bgt	20258 <__flatcc_fb_gen_c_verifier@@Base+0x191c>
   1fe34:	sub	r5, ip, r7
   1fe38:	add	r6, r9, r7
   1fe3c:	cmp	r5, #8
   1fe40:	movge	r5, #8
   1fe44:	cmp	r7, ip
   1fe48:	sub	r3, r5, #1
   1fe4c:	beq	20378 <__flatcc_fb_gen_c_verifier@@Base+0x1a3c>
   1fe50:	ldrb	sl, [r6, r3]
   1fe54:	rsb	r2, r3, #7
   1fe58:	cmp	r3, #0
   1fe5c:	lsl	r2, r2, #3
   1fe60:	sub	ip, r5, #2
   1fe64:	sub	r3, r2, #32
   1fe68:	rsb	r1, r2, #32
   1fe6c:	lsl	r3, sl, r3
   1fe70:	lsl	r2, sl, r2
   1fe74:	orr	r3, r3, sl, lsr r1
   1fe78:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1fe7c:	ldrb	sl, [r6, ip]
   1fe80:	rsb	lr, ip, #7
   1fe84:	cmp	ip, #0
   1fe88:	lsl	r1, lr, #3
   1fe8c:	sub	ip, r5, #3
   1fe90:	sub	lr, r1, #32
   1fe94:	lsl	lr, sl, lr
   1fe98:	orr	r2, r2, sl, lsl r1
   1fe9c:	rsb	r1, r1, #32
   1fea0:	orr	lr, lr, sl, lsr r1
   1fea4:	orr	r3, lr, r3
   1fea8:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1feac:	ldrb	sl, [r6, ip]
   1feb0:	rsb	lr, ip, #7
   1feb4:	cmp	ip, #0
   1feb8:	lsl	r1, lr, #3
   1febc:	sub	ip, r5, #4
   1fec0:	sub	lr, r1, #32
   1fec4:	lsl	lr, sl, lr
   1fec8:	orr	r2, r2, sl, lsl r1
   1fecc:	rsb	r1, r1, #32
   1fed0:	orr	lr, lr, sl, lsr r1
   1fed4:	orr	r3, lr, r3
   1fed8:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1fedc:	ldrb	sl, [r6, ip]
   1fee0:	rsb	lr, ip, #7
   1fee4:	cmp	ip, #0
   1fee8:	lsl	r1, lr, #3
   1feec:	sub	ip, r5, #5
   1fef0:	sub	lr, r1, #32
   1fef4:	lsl	lr, sl, lr
   1fef8:	orr	r2, r2, sl, lsl r1
   1fefc:	rsb	r1, r1, #32
   1ff00:	orr	lr, lr, sl, lsr r1
   1ff04:	orr	r3, lr, r3
   1ff08:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ff0c:	ldrb	sl, [r6, ip]
   1ff10:	rsb	lr, ip, #7
   1ff14:	cmp	ip, #0
   1ff18:	lsl	r1, lr, #3
   1ff1c:	sub	ip, r5, #6
   1ff20:	sub	lr, r1, #32
   1ff24:	lsl	lr, sl, lr
   1ff28:	orr	r2, r2, sl, lsl r1
   1ff2c:	rsb	r1, r1, #32
   1ff30:	orr	lr, lr, sl, lsr r1
   1ff34:	orr	r3, lr, r3
   1ff38:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ff3c:	ldrb	sl, [r6, ip]
   1ff40:	rsb	lr, ip, #7
   1ff44:	cmp	ip, #0
   1ff48:	lsl	r1, lr, #3
   1ff4c:	sub	ip, r5, #7
   1ff50:	sub	lr, r1, #32
   1ff54:	lsl	lr, sl, lr
   1ff58:	orr	r2, r2, sl, lsl r1
   1ff5c:	rsb	r1, r1, #32
   1ff60:	orr	lr, lr, sl, lsr r1
   1ff64:	orr	r3, lr, r3
   1ff68:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ff6c:	ldrb	sl, [r6, ip]
   1ff70:	rsb	lr, ip, #7
   1ff74:	cmp	ip, #0
   1ff78:	lsl	lr, lr, #3
   1ff7c:	sub	r1, lr, #32
   1ff80:	lsl	r1, sl, r1
   1ff84:	orr	ip, r2, sl, lsl lr
   1ff88:	rsb	lr, lr, #32
   1ff8c:	orr	r1, r1, sl, lsr lr
   1ff90:	mov	r2, ip
   1ff94:	orr	lr, r1, r3
   1ff98:	mov	r3, lr
   1ff9c:	beq	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1ffa0:	ldrb	r0, [r9, r7]
   1ffa4:	orr	r3, lr, r0, lsl #24
   1ffa8:	ldr	r8, [sp, #76]	; 0x4c
   1ffac:	movw	r1, #15792	; 0x3db0
   1ffb0:	movt	r1, #5
   1ffb4:	stm	sp, {r5, r6}
   1ffb8:	mov	r0, r8
   1ffbc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ffc0:	ldr	ip, [r8, #220]	; 0xdc
   1ffc4:	mov	r3, r4
   1ffc8:	mov	r0, r8
   1ffcc:	str	r7, [sp]
   1ffd0:	ldr	r2, [sp, #68]	; 0x44
   1ffd4:	ldr	r1, [sp, #80]	; 0x50
   1ffd8:	add	ip, ip, #1
   1ffdc:	str	ip, [r8, #220]	; 0xdc
   1ffe0:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1ffe4:	ldr	r3, [r8, #220]	; 0xdc
   1ffe8:	cmp	r3, #0
   1ffec:	beq	20414 <__flatcc_fb_gen_c_verifier@@Base+0x1ad8>
   1fff0:	ldr	r4, [sp, #76]	; 0x4c
   1fff4:	sub	r0, r3, #1
   1fff8:	mov	r2, r5
   1fffc:	mov	r3, r6
   20000:	movw	r1, #15832	; 0x3dd8
   20004:	movt	r1, #5
   20008:	str	r0, [r4, #220]	; 0xdc
   2000c:	mov	r0, r4
   20010:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20014:	ldr	ip, [r4, #220]	; 0xdc
   20018:	mov	r0, r4
   2001c:	str	r7, [sp]
   20020:	ldr	r2, [sp, #52]	; 0x34
   20024:	ldr	r3, [sp, #72]	; 0x48
   20028:	add	ip, ip, #1
   2002c:	ldr	r1, [sp, #80]	; 0x50
   20030:	str	ip, [r4, #220]	; 0xdc
   20034:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   20038:	ldr	r3, [r4, #220]	; 0xdc
   2003c:	cmp	r3, #0
   20040:	beq	20430 <__flatcc_fb_gen_c_verifier@@Base+0x1af4>
   20044:	ldr	ip, [sp, #76]	; 0x4c
   20048:	sub	r1, r3, #1
   2004c:	mov	r2, r5
   20050:	mov	r3, r6
   20054:	mov	r0, ip
   20058:	str	r1, [ip, #220]	; 0xdc
   2005c:	movw	r1, #15864	; 0x3df8
   20060:	movt	r1, #5
   20064:	b	1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x14d0>
   20068:	mov	ip, #0
   2006c:	ldrd	r2, [sp, #68]	; 0x44
   20070:	stm	sp, {r7, ip}
   20074:	ldrd	r0, [sp, #76]	; 0x4c
   20078:	bl	1edd8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   2007c:	add	sp, sp, #100	; 0x64
   20080:	ldrd	r4, [sp]
   20084:	ldrd	r6, [sp, #8]
   20088:	ldrd	r8, [sp, #16]
   2008c:	ldrd	sl, [sp, #24]
   20090:	add	sp, sp, #32
   20094:	pop	{pc}		; (ldr pc, [sp], #4)
   20098:	mov	r8, #0
   2009c:	mov	r1, r6
   200a0:	mov	ip, r8
   200a4:	mov	r3, r2
   200a8:	b	1fc1c <__flatcc_fb_gen_c_verifier@@Base+0x12e0>
   200ac:	ldr	r1, [sp, #68]	; 0x44
   200b0:	cmp	r5, r1
   200b4:	add	r1, r7, #8
   200b8:	str	r1, [sp, #8]
   200bc:	bgt	20214 <__flatcc_fb_gen_c_verifier@@Base+0x18d8>
   200c0:	cmp	r7, r2
   200c4:	movle	r9, #0
   200c8:	bgt	20338 <__flatcc_fb_gen_c_verifier@@Base+0x19fc>
   200cc:	ldr	r3, [r3]
   200d0:	mov	r8, #8
   200d4:	ldrb	r2, [r3, r7]
   200d8:	add	r6, r3, r7
   200dc:	mov	r3, #0
   200e0:	ldrb	sl, [r6, #2]
   200e4:	ldrb	ip, [r6, #3]
   200e8:	strd	r2, [sp, #8]
   200ec:	ldrb	r0, [r6, #6]
   200f0:	ldrb	r2, [r6, #7]
   200f4:	orr	r3, ip, sl, lsl r8
   200f8:	ldrb	sl, [r6, #5]
   200fc:	ldr	r1, [sp, #8]
   20100:	orr	r2, r2, r0, lsl r8
   20104:	ldrb	r0, [r6, #1]
   20108:	orr	r2, r2, sl, lsl #16
   2010c:	ldrb	sl, [r6, #4]
   20110:	orr	r3, r3, r0, lsl #16
   20114:	orr	r2, r2, sl, lsl #24
   20118:	orr	r3, r3, r1, lsl #24
   2011c:	ldr	sl, [sp, #76]	; 0x4c
   20120:	movw	r1, #15888	; 0x3e10
   20124:	movt	r1, #5
   20128:	str	r8, [sp]
   2012c:	str	r6, [sp, #4]
   20130:	mov	r0, sl
   20134:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20138:	ldr	r3, [sl, #220]	; 0xdc
   2013c:	cmp	r9, #0
   20140:	add	r3, r3, #1
   20144:	str	r3, [sl, #220]	; 0xdc
   20148:	bne	2026c <__flatcc_fb_gen_c_verifier@@Base+0x1930>
   2014c:	ldr	sl, [sp, #76]	; 0x4c
   20150:	movw	r1, #15988	; 0x3e74
   20154:	movt	r1, #5
   20158:	mov	r9, r5
   2015c:	mov	r0, sl
   20160:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20164:	mov	r0, sl
   20168:	movw	r1, #16000	; 0x3e80
   2016c:	movt	r1, #5
   20170:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20174:	add	r1, r7, #8
   20178:	mov	r2, r5
   2017c:	ldr	r3, [sp, #64]	; 0x40
   20180:	mov	r0, sl
   20184:	str	r1, [sp]
   20188:	ldr	r1, [sp, #80]	; 0x50
   2018c:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   20190:	ldr	r3, [sp, #76]	; 0x4c
   20194:	ldr	r3, [r3, #220]	; 0xdc
   20198:	cmp	r3, #0
   2019c:	beq	203f8 <__flatcc_fb_gen_c_verifier@@Base+0x1abc>
   201a0:	ldr	sl, [sp, #76]	; 0x4c
   201a4:	sub	r0, r3, #1
   201a8:	mov	r2, r8
   201ac:	mov	r3, r6
   201b0:	movw	r1, #16080	; 0x3ed0
   201b4:	movt	r1, #5
   201b8:	str	r0, [sl, #220]	; 0xdc
   201bc:	mov	r0, sl
   201c0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   201c4:	ldr	r3, [sl, #220]	; 0xdc
   201c8:	ldr	r0, [sp, #72]	; 0x48
   201cc:	ldr	ip, [sp, #68]	; 0x44
   201d0:	add	r3, r3, #1
   201d4:	cmp	r0, r4
   201d8:	str	r3, [sl, #220]	; 0xdc
   201dc:	movlt	r2, #0
   201e0:	movge	r2, #1
   201e4:	cmp	r0, r4
   201e8:	cmpge	r9, ip
   201ec:	bgt	1fd18 <__flatcc_fb_gen_c_verifier@@Base+0x13dc>
   201f0:	cmp	r9, ip
   201f4:	bgt	2044c <__flatcc_fb_gen_c_verifier@@Base+0x1b10>
   201f8:	cmp	r2, #0
   201fc:	bne	203c4 <__flatcc_fb_gen_c_verifier@@Base+0x1a88>
   20200:	ldr	r0, [sp, #76]	; 0x4c
   20204:	ldr	r3, [sp, #80]	; 0x50
   20208:	ldr	r3, [r3, #8]
   2020c:	blx	r3
   20210:	b	1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x1498>
   20214:	ldr	r1, [sp, #84]	; 0x54
   20218:	add	r0, r7, #8
   2021c:	add	r1, r1, r5, lsl #4
   20220:	ldr	r1, [r1, #-12]
   20224:	cmp	r1, r0
   20228:	bgt	200c0 <__flatcc_fb_gen_c_verifier@@Base+0x1784>
   2022c:	sub	r1, r1, r7
   20230:	cmp	r7, r2
   20234:	sub	r9, r1, #8
   20238:	clz	r9, r9
   2023c:	lsr	r9, r9, #5
   20240:	ble	200cc <__flatcc_fb_gen_c_verifier@@Base+0x1790>
   20244:	mov	r2, #0
   20248:	mov	r3, r2
   2024c:	mov	r6, r2
   20250:	mov	r8, r2
   20254:	b	2011c <__flatcc_fb_gen_c_verifier@@Base+0x17e0>
   20258:	mov	r2, #0
   2025c:	mov	r3, r2
   20260:	mov	r6, r2
   20264:	mov	r5, r2
   20268:	b	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   2026c:	mov	r3, r6
   20270:	mov	r2, r8
   20274:	mov	r0, sl
   20278:	movw	r1, #15928	; 0x3e38
   2027c:	movt	r1, #5
   20280:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20284:	ldr	fp, [sp, #80]	; 0x50
   20288:	sub	r2, r5, #-268435455	; 0xf0000001
   2028c:	mov	ip, #8
   20290:	mov	r0, sl
   20294:	ldm	fp, {r3, r9}
   20298:	ldr	r1, [fp, #12]
   2029c:	add	r2, r3, r2, lsl #4
   202a0:	ldrd	r2, [r2, #8]
   202a4:	str	ip, [sp]
   202a8:	blx	r9
   202ac:	mov	r3, r6
   202b0:	mov	r2, r8
   202b4:	mov	r0, sl
   202b8:	movw	r1, #15960	; 0x3e58
   202bc:	movt	r1, #5
   202c0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   202c4:	mov	r0, sl
   202c8:	movw	r1, #15988	; 0x3e74
   202cc:	movt	r1, #5
   202d0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   202d4:	mov	r0, sl
   202d8:	movw	r1, #16000	; 0x3e80
   202dc:	movt	r1, #5
   202e0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   202e4:	add	r1, r7, #8
   202e8:	mov	r2, r5
   202ec:	ldr	r3, [sp, #64]	; 0x40
   202f0:	mov	r0, sl
   202f4:	str	r1, [sp]
   202f8:	mov	r1, fp
   202fc:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   20300:	ldr	r3, [sl, #220]	; 0xdc
   20304:	cmp	r3, #0
   20308:	beq	203dc <__flatcc_fb_gen_c_verifier@@Base+0x1aa0>
   2030c:	ldr	ip, [sp, #76]	; 0x4c
   20310:	sub	r0, r3, #1
   20314:	movw	r1, #16048	; 0x3eb0
   20318:	movt	r1, #5
   2031c:	mov	r3, r6
   20320:	mov	r2, r8
   20324:	sub	r9, r5, #1
   20328:	str	r0, [ip, #220]	; 0xdc
   2032c:	mov	r0, ip
   20330:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20334:	b	20190 <__flatcc_fb_gen_c_verifier@@Base+0x1854>
   20338:	ldr	r9, [sp, #76]	; 0x4c
   2033c:	mov	ip, #0
   20340:	mov	r3, #0
   20344:	movw	r1, #15888	; 0x3e10
   20348:	movt	r1, #5
   2034c:	mov	r2, #0
   20350:	str	ip, [sp]
   20354:	mov	r8, ip
   20358:	str	ip, [sp, #4]
   2035c:	mov	r6, ip
   20360:	mov	r0, r9
   20364:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20368:	ldr	r3, [r9, #220]	; 0xdc
   2036c:	add	r3, r3, #1
   20370:	str	r3, [r9, #220]	; 0xdc
   20374:	b	2014c <__flatcc_fb_gen_c_verifier@@Base+0x1810>
   20378:	mov	r2, #0
   2037c:	mov	r3, r2
   20380:	mov	r5, r2
   20384:	b	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   20388:	ldr	r3, [sp, #72]	; 0x48
   2038c:	movw	r6, #45408	; 0xb160
   20390:	movt	r6, #4
   20394:	mov	r8, #0
   20398:	cmp	r3, r4
   2039c:	movlt	r2, #0
   203a0:	movge	r2, #1
   203a4:	b	201f8 <__flatcc_fb_gen_c_verifier@@Base+0x18bc>
   203a8:	movw	r1, #15648	; 0x3d20
   203ac:	movt	r1, #5
   203b0:	ldr	r3, [pc, #184]	; 20470 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   203b4:	movw	r0, #15736	; 0x3d78
   203b8:	movt	r0, #5
   203bc:	mov	r2, #1072	; 0x430
   203c0:	bl	14120 <__assert_fail@plt>
   203c4:	mov	r2, r4
   203c8:	str	r7, [sp]
   203cc:	ldr	r3, [sp, #72]	; 0x48
   203d0:	ldrd	r0, [sp, #76]	; 0x4c
   203d4:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   203d8:	b	1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x1498>
   203dc:	movw	r1, #15648	; 0x3d20
   203e0:	movt	r1, #5
   203e4:	ldr	r3, [pc, #132]	; 20470 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   203e8:	movw	r0, #15736	; 0x3d78
   203ec:	movt	r0, #5
   203f0:	mov	r2, #1040	; 0x410
   203f4:	bl	14120 <__assert_fail@plt>
   203f8:	movw	r1, #15648	; 0x3d20
   203fc:	movt	r1, #5
   20400:	ldr	r3, [pc, #104]	; 20470 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   20404:	movw	r0, #15736	; 0x3d78
   20408:	movt	r0, #5
   2040c:	movw	r2, #1044	; 0x414
   20410:	bl	14120 <__assert_fail@plt>
   20414:	movw	r1, #15648	; 0x3d20
   20418:	movt	r1, #5
   2041c:	ldr	r3, [pc, #76]	; 20470 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   20420:	movw	r0, #15736	; 0x3d78
   20424:	movt	r0, #5
   20428:	movw	r2, #973	; 0x3cd
   2042c:	bl	14120 <__assert_fail@plt>
   20430:	movw	r1, #15648	; 0x3d20
   20434:	movt	r1, #5
   20438:	ldr	r3, [pc, #48]	; 20470 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   2043c:	movw	r0, #15736	; 0x3d78
   20440:	movt	r0, #5
   20444:	movw	r2, #975	; 0x3cf
   20448:	bl	14120 <__assert_fail@plt>
   2044c:	mov	r0, #0
   20450:	sub	r3, r9, #1
   20454:	str	r7, [sp]
   20458:	ldr	r2, [sp, #68]	; 0x44
   2045c:	str	r0, [sp, #4]
   20460:	ldr	r0, [sp, #76]	; 0x4c
   20464:	ldr	r1, [sp, #80]	; 0x50
   20468:	bl	1edd8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   2046c:	b	1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x1498>
   20470:	andeq	r3, r5, r8, lsl #21
   20474:	str	r4, [sp, #-8]!
   20478:	mov	r4, r0
   2047c:	mov	r0, r1
   20480:	str	lr, [sp, #4]
   20484:	sub	sp, sp, #208	; 0xd0
   20488:	add	r1, sp, #4
   2048c:	bl	16184 <__flatcc_fb_copy_scope@@Base>
   20490:	ldr	r2, [r4, #208]	; 0xd0
   20494:	add	r3, sp, #4
   20498:	mov	r0, r4
   2049c:	movw	r1, #16196	; 0x3f44
   204a0:	movt	r1, #5
   204a4:	ldr	r2, [r2, #160]	; 0xa0
   204a8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   204ac:	mov	r0, r4
   204b0:	movw	r1, #16304	; 0x3fb0
   204b4:	movt	r1, #5
   204b8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   204bc:	add	sp, sp, #208	; 0xd0
   204c0:	ldr	r4, [sp]
   204c4:	add	sp, sp, #4
   204c8:	pop	{pc}		; (ldr pc, [sp], #4)
   204cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   204d0:	mov	r2, #220	; 0xdc
   204d4:	mov	r5, r0
   204d8:	strd	r6, [sp, #8]
   204dc:	mov	r4, r1
   204e0:	mov	r1, #0
   204e4:	strd	r8, [sp, #16]
   204e8:	str	sl, [sp, #24]
   204ec:	str	lr, [sp, #28]
   204f0:	sub	sp, sp, #448	; 0x1c0
   204f4:	add	r0, sp, #8
   204f8:	bl	14084 <memset@plt>
   204fc:	mov	r2, #220	; 0xdc
   20500:	mov	r1, #0
   20504:	add	r0, sp, #228	; 0xe4
   20508:	bl	14084 <memset@plt>
   2050c:	add	r2, sp, #8
   20510:	mov	r1, r4
   20514:	ldr	r0, [r4, #12]
   20518:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   2051c:	add	r2, sp, #8
   20520:	mov	r0, r5
   20524:	movw	r1, #16356	; 0x3fe4
   20528:	movt	r1, #5
   2052c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20530:	mov	r0, r5
   20534:	movw	r1, #27128	; 0x69f8
   20538:	movt	r1, #5
   2053c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20540:	ldr	r3, [r5, #220]	; 0xdc
   20544:	mov	r0, r5
   20548:	movw	r1, #45408	; 0xb160
   2054c:	movt	r1, #4
   20550:	add	r3, r3, #1
   20554:	str	r3, [r5, #220]	; 0xdc
   20558:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2055c:	mov	r0, r5
   20560:	movw	r1, #16500	; 0x4074
   20564:	movt	r1, #5
   20568:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2056c:	mov	r0, r5
   20570:	movw	r1, #16516	; 0x4084
   20574:	movt	r1, #5
   20578:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2057c:	mov	r0, r5
   20580:	movw	r1, #16532	; 0x4094
   20584:	movt	r1, #5
   20588:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2058c:	ldr	r3, [r5, #220]	; 0xdc
   20590:	mov	r0, r5
   20594:	movw	r1, #16552	; 0x40a8
   20598:	movt	r1, #5
   2059c:	add	r3, r3, #1
   205a0:	str	r3, [r5, #220]	; 0xdc
   205a4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   205a8:	ldr	r3, [r5, #220]	; 0xdc
   205ac:	cmp	r3, #0
   205b0:	beq	209ac <__flatcc_fb_gen_c_verifier@@Base+0x2070>
   205b4:	ldr	r4, [r4, #20]
   205b8:	sub	r3, r3, #1
   205bc:	str	r3, [r5, #220]	; 0xdc
   205c0:	cmp	r4, #0
   205c4:	beq	2075c <__flatcc_fb_gen_c_verifier@@Base+0x1e20>
   205c8:	movw	r8, #16600	; 0x40d8
   205cc:	movt	r8, #5
   205d0:	movw	r9, #16788	; 0x4194
   205d4:	movt	r9, #5
   205d8:	movw	r7, #16780	; 0x418c
   205dc:	movt	r7, #5
   205e0:	b	20668 <__flatcc_fb_gen_c_verifier@@Base+0x1d2c>
   205e4:	ldr	r1, [r4, #16]
   205e8:	add	r2, sp, #228	; 0xe4
   205ec:	ldr	r0, [r1, #12]
   205f0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   205f4:	mov	r3, sl
   205f8:	mov	r1, r8
   205fc:	ldr	r2, [r4, #48]	; 0x30
   20600:	mov	r0, r5
   20604:	str	r6, [sp]
   20608:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2060c:	ldr	r2, [r4, #16]
   20610:	ldr	r3, [r5, #220]	; 0xdc
   20614:	ldrh	r2, [r2, #8]
   20618:	add	r3, r3, #1
   2061c:	str	r3, [r5, #220]	; 0xdc
   20620:	cmp	r2, #0
   20624:	bne	2073c <__flatcc_fb_gen_c_verifier@@Base+0x1e00>
   20628:	movw	r1, #16620	; 0x40ec
   2062c:	movt	r1, #5
   20630:	add	r2, sp, #228	; 0xe4
   20634:	mov	r0, r5
   20638:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2063c:	mov	r1, r7
   20640:	mov	r0, r5
   20644:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20648:	ldr	r3, [r5, #220]	; 0xdc
   2064c:	cmp	r3, #0
   20650:	beq	2093c <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   20654:	sub	r3, r3, #1
   20658:	str	r3, [r5, #220]	; 0xdc
   2065c:	ldr	r4, [r4]
   20660:	cmp	r4, #0
   20664:	beq	2075c <__flatcc_fb_gen_c_verifier@@Base+0x1e20>
   20668:	ldrh	r2, [r4, #24]
   2066c:	ldr	r3, [r4, #4]
   20670:	cmp	r2, #10
   20674:	ldm	r3, {r6, sl}
   20678:	beq	206d8 <__flatcc_fb_gen_c_verifier@@Base+0x1d9c>
   2067c:	cmp	r2, #14
   20680:	beq	205e4 <__flatcc_fb_gen_c_verifier@@Base+0x1ca8>
   20684:	cmp	r2, #0
   20688:	beq	2065c <__flatcc_fb_gen_c_verifier@@Base+0x1d20>
   2068c:	movw	r1, #16852	; 0x41d4
   20690:	movt	r1, #5
   20694:	movw	r3, #49320	; 0xc0a8
   20698:	movt	r3, #6
   2069c:	movw	r2, #15648	; 0x3d20
   206a0:	movt	r2, #5
   206a4:	str	r1, [sp]
   206a8:	movw	r1, #4944	; 0x1350
   206ac:	movt	r1, #4
   206b0:	ldr	r0, [r3]
   206b4:	movw	r3, #1535	; 0x5ff
   206b8:	bl	1406c <fprintf@plt>
   206bc:	movw	r1, #15648	; 0x3d20
   206c0:	movt	r1, #5
   206c4:	ldr	r3, [pc, #820]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   206c8:	movw	r0, #41608	; 0xa288
   206cc:	movt	r0, #4
   206d0:	movw	r2, #1535	; 0x5ff
   206d4:	bl	14120 <__assert_fail@plt>
   206d8:	mov	r3, sl
   206dc:	mov	r1, r8
   206e0:	ldr	r2, [r4, #48]	; 0x30
   206e4:	mov	r0, r5
   206e8:	str	r6, [sp]
   206ec:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   206f0:	ldr	r3, [r5, #220]	; 0xdc
   206f4:	mov	r1, r9
   206f8:	mov	r0, r5
   206fc:	add	r3, r3, #1
   20700:	str	r3, [r5, #220]	; 0xdc
   20704:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20708:	mov	r1, r7
   2070c:	mov	r0, r5
   20710:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20714:	ldr	r3, [r5, #220]	; 0xdc
   20718:	cmp	r3, #0
   2071c:	bne	20654 <__flatcc_fb_gen_c_verifier@@Base+0x1d18>
   20720:	movw	r1, #15648	; 0x3d20
   20724:	movt	r1, #5
   20728:	ldr	r3, [pc, #720]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   2072c:	movw	r0, #15736	; 0x3d78
   20730:	movt	r0, #5
   20734:	movw	r2, #1532	; 0x5fc
   20738:	bl	14120 <__assert_fail@plt>
   2073c:	cmp	r2, #1
   20740:	bne	208f0 <__flatcc_fb_gen_c_verifier@@Base+0x1fb4>
   20744:	movw	r1, #16672	; 0x4120
   20748:	movt	r1, #5
   2074c:	add	r2, sp, #228	; 0xe4
   20750:	mov	r0, r5
   20754:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20758:	b	2063c <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   2075c:	mov	r0, r5
   20760:	movw	r1, #16900	; 0x4204
   20764:	movt	r1, #5
   20768:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2076c:	ldr	r3, [r5, #220]	; 0xdc
   20770:	mov	r0, r5
   20774:	movw	r1, #16912	; 0x4210
   20778:	movt	r1, #5
   2077c:	add	r3, r3, #1
   20780:	str	r3, [r5, #220]	; 0xdc
   20784:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20788:	ldr	r3, [r5, #220]	; 0xdc
   2078c:	movw	r1, #16972	; 0x424c
   20790:	movt	r1, #5
   20794:	mov	r0, r5
   20798:	add	r3, r3, #1
   2079c:	str	r3, [r5, #220]	; 0xdc
   207a0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   207a4:	ldr	r3, [r5, #220]	; 0xdc
   207a8:	cmp	r3, #0
   207ac:	beq	20990 <__flatcc_fb_gen_c_verifier@@Base+0x2054>
   207b0:	sub	r3, r3, #1
   207b4:	mov	r0, r5
   207b8:	movw	r1, #17064	; 0x42a8
   207bc:	movt	r1, #5
   207c0:	str	r3, [r5, #220]	; 0xdc
   207c4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   207c8:	ldr	r3, [r5, #220]	; 0xdc
   207cc:	movw	r1, #17076	; 0x42b4
   207d0:	movt	r1, #5
   207d4:	mov	r0, r5
   207d8:	add	r3, r3, #1
   207dc:	str	r3, [r5, #220]	; 0xdc
   207e0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   207e4:	ldr	r3, [r5, #220]	; 0xdc
   207e8:	cmp	r3, #0
   207ec:	beq	20974 <__flatcc_fb_gen_c_verifier@@Base+0x2038>
   207f0:	sub	r3, r3, #1
   207f4:	movw	r1, #15748	; 0x3d84
   207f8:	movt	r1, #5
   207fc:	mov	r0, r5
   20800:	str	r3, [r5, #220]	; 0xdc
   20804:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20808:	ldr	r3, [r5, #220]	; 0xdc
   2080c:	cmp	r3, #0
   20810:	beq	20958 <__flatcc_fb_gen_c_verifier@@Base+0x201c>
   20814:	sub	r3, r3, #1
   20818:	mov	r0, r5
   2081c:	movw	r1, #15748	; 0x3d84
   20820:	movt	r1, #5
   20824:	str	r3, [r5, #220]	; 0xdc
   20828:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2082c:	mov	r0, r5
   20830:	movw	r1, #17132	; 0x42ec
   20834:	movt	r1, #5
   20838:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2083c:	mov	r0, r5
   20840:	movw	r1, #17160	; 0x4308
   20844:	movt	r1, #5
   20848:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2084c:	ldr	r3, [r5, #220]	; 0xdc
   20850:	movw	r1, #17176	; 0x4318
   20854:	movt	r1, #5
   20858:	mov	r0, r5
   2085c:	add	r3, r3, #1
   20860:	str	r3, [r5, #220]	; 0xdc
   20864:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20868:	ldr	r3, [r5, #220]	; 0xdc
   2086c:	cmp	r3, #0
   20870:	beq	209e4 <__flatcc_fb_gen_c_verifier@@Base+0x20a8>
   20874:	sub	r3, r3, #1
   20878:	mov	r0, r5
   2087c:	movw	r1, #15748	; 0x3d84
   20880:	movt	r1, #5
   20884:	str	r3, [r5, #220]	; 0xdc
   20888:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2088c:	movw	r1, #17148	; 0x42fc
   20890:	movt	r1, #5
   20894:	mov	r0, r5
   20898:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2089c:	ldr	r3, [r5, #220]	; 0xdc
   208a0:	cmp	r3, #0
   208a4:	beq	209c8 <__flatcc_fb_gen_c_verifier@@Base+0x208c>
   208a8:	sub	r3, r3, #1
   208ac:	mov	r0, r5
   208b0:	movw	r1, #15748	; 0x3d84
   208b4:	movt	r1, #5
   208b8:	str	r3, [r5, #220]	; 0xdc
   208bc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   208c0:	mov	r0, r5
   208c4:	movw	r1, #45408	; 0xb160
   208c8:	movt	r1, #4
   208cc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   208d0:	mov	r0, #0
   208d4:	add	sp, sp, #448	; 0x1c0
   208d8:	ldrd	r4, [sp]
   208dc:	ldrd	r6, [sp, #8]
   208e0:	ldrd	r8, [sp, #16]
   208e4:	ldr	sl, [sp, #24]
   208e8:	add	sp, sp, #28
   208ec:	pop	{pc}		; (ldr pc, [sp], #4)
   208f0:	movw	r1, #16724	; 0x4154
   208f4:	movt	r1, #5
   208f8:	movw	r3, #49320	; 0xc0a8
   208fc:	movt	r3, #6
   20900:	movw	r2, #15648	; 0x3d20
   20904:	movt	r2, #5
   20908:	str	r1, [sp]
   2090c:	movw	r1, #4944	; 0x1350
   20910:	movt	r1, #4
   20914:	ldr	r0, [r3]
   20918:	movw	r3, #1522	; 0x5f2
   2091c:	bl	1406c <fprintf@plt>
   20920:	movw	r1, #15648	; 0x3d20
   20924:	movt	r1, #5
   20928:	ldr	r3, [pc, #208]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   2092c:	movw	r0, #41608	; 0xa288
   20930:	movt	r0, #4
   20934:	movw	r2, #1522	; 0x5f2
   20938:	bl	14120 <__assert_fail@plt>
   2093c:	movw	r1, #15648	; 0x3d20
   20940:	movt	r1, #5
   20944:	ldr	r3, [pc, #180]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   20948:	movw	r0, #15736	; 0x3d78
   2094c:	movt	r0, #5
   20950:	movw	r2, #1526	; 0x5f6
   20954:	bl	14120 <__assert_fail@plt>
   20958:	movw	r1, #15648	; 0x3d20
   2095c:	movt	r1, #5
   20960:	ldr	r3, [pc, #152]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   20964:	movw	r0, #15736	; 0x3d78
   20968:	movt	r0, #5
   2096c:	movw	r2, #1546	; 0x60a
   20970:	bl	14120 <__assert_fail@plt>
   20974:	movw	r1, #15648	; 0x3d20
   20978:	movt	r1, #5
   2097c:	ldr	r3, [pc, #124]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   20980:	movw	r0, #15736	; 0x3d78
   20984:	movt	r0, #5
   20988:	movw	r2, #1545	; 0x609
   2098c:	bl	14120 <__assert_fail@plt>
   20990:	movw	r1, #15648	; 0x3d20
   20994:	movt	r1, #5
   20998:	ldr	r3, [pc, #96]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   2099c:	movw	r0, #15736	; 0x3d78
   209a0:	movt	r0, #5
   209a4:	movw	r2, #1543	; 0x607
   209a8:	bl	14120 <__assert_fail@plt>
   209ac:	movw	r1, #15648	; 0x3d20
   209b0:	movt	r1, #5
   209b4:	ldr	r3, [pc, #68]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   209b8:	movw	r0, #15736	; 0x3d78
   209bc:	movt	r0, #5
   209c0:	movw	r2, #1503	; 0x5df
   209c4:	bl	14120 <__assert_fail@plt>
   209c8:	movw	r1, #15648	; 0x3d20
   209cc:	movt	r1, #5
   209d0:	ldr	r3, [pc, #40]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   209d4:	movw	r0, #15736	; 0x3d78
   209d8:	movt	r0, #5
   209dc:	mov	r2, #1552	; 0x610
   209e0:	bl	14120 <__assert_fail@plt>
   209e4:	movw	r1, #15648	; 0x3d20
   209e8:	movt	r1, #5
   209ec:	ldr	r3, [pc, #12]	; 20a00 <__flatcc_fb_gen_c_verifier@@Base+0x20c4>
   209f0:	movw	r0, #15736	; 0x3d78
   209f4:	movt	r0, #5
   209f8:	movw	r2, #1550	; 0x60e
   209fc:	bl	14120 <__assert_fail@plt>
   20a00:	muleq	r5, r4, sl
   20a04:	strd	r4, [sp, #-20]!	; 0xffffffec
   20a08:	mov	r2, #220	; 0xdc
   20a0c:	mov	r5, r0
   20a10:	strd	r6, [sp, #8]
   20a14:	mov	r4, r1
   20a18:	mov	r1, #0
   20a1c:	str	lr, [sp, #16]
   20a20:	sub	sp, sp, #452	; 0x1c4
   20a24:	add	r0, sp, #8
   20a28:	bl	14084 <memset@plt>
   20a2c:	mov	r2, #220	; 0xdc
   20a30:	mov	r1, #0
   20a34:	add	r0, sp, #228	; 0xe4
   20a38:	bl	14084 <memset@plt>
   20a3c:	mov	r1, r4
   20a40:	add	r2, sp, #8
   20a44:	ldr	r0, [r4, #12]
   20a48:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   20a4c:	add	r2, sp, #8
   20a50:	mov	r0, r5
   20a54:	movw	r1, #17264	; 0x4370
   20a58:	movt	r1, #5
   20a5c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20a60:	mov	r0, r5
   20a64:	movw	r1, #27128	; 0x69f8
   20a68:	movt	r1, #5
   20a6c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20a70:	ldr	r3, [r5, #220]	; 0xdc
   20a74:	mov	r0, r5
   20a78:	movw	r1, #16516	; 0x4084
   20a7c:	movt	r1, #5
   20a80:	add	r3, r3, #1
   20a84:	str	r3, [r5, #220]	; 0xdc
   20a88:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20a8c:	ldr	r4, [r4, #20]
   20a90:	cmp	r4, #0
   20a94:	beq	20ae0 <__flatcc_fb_gen_c_verifier@@Base+0x21a4>
   20a98:	movw	r6, #17348	; 0x43c4
   20a9c:	movt	r6, #5
   20aa0:	movw	r7, #17316	; 0x43a4
   20aa4:	movt	r7, #5
   20aa8:	ldrh	r3, [r4, #24]
   20aac:	cmp	r3, #0
   20ab0:	beq	20b64 <__flatcc_fb_gen_c_verifier@@Base+0x2228>
   20ab4:	ldr	r3, [r4, #4]
   20ab8:	mov	r1, r6
   20abc:	mov	r0, r5
   20ac0:	ldr	r2, [r4, #48]	; 0x30
   20ac4:	ldr	ip, [r3]
   20ac8:	ldr	r3, [r3, #4]
   20acc:	str	ip, [sp]
   20ad0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20ad4:	ldr	r4, [r4]
   20ad8:	cmp	r4, #0
   20adc:	bne	20aa8 <__flatcc_fb_gen_c_verifier@@Base+0x216c>
   20ae0:	movw	r1, #17380	; 0x43e4
   20ae4:	movt	r1, #5
   20ae8:	mov	r0, r5
   20aec:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20af0:	ldr	r3, [r5, #220]	; 0xdc
   20af4:	add	r2, r3, #1
   20af8:	cmp	r2, #0
   20afc:	str	r2, [r5, #220]	; 0xdc
   20b00:	beq	20b80 <__flatcc_fb_gen_c_verifier@@Base+0x2244>
   20b04:	movw	r1, #15748	; 0x3d84
   20b08:	movt	r1, #5
   20b0c:	str	r3, [r5, #220]	; 0xdc
   20b10:	mov	r0, r5
   20b14:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b18:	ldr	r3, [r5, #220]	; 0xdc
   20b1c:	cmp	r3, #0
   20b20:	beq	20b9c <__flatcc_fb_gen_c_verifier@@Base+0x2260>
   20b24:	sub	r3, r3, #1
   20b28:	mov	r0, r5
   20b2c:	movw	r1, #15748	; 0x3d84
   20b30:	movt	r1, #5
   20b34:	str	r3, [r5, #220]	; 0xdc
   20b38:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b3c:	mov	r0, r5
   20b40:	movw	r1, #45408	; 0xb160
   20b44:	movt	r1, #4
   20b48:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b4c:	mov	r0, #0
   20b50:	add	sp, sp, #452	; 0x1c4
   20b54:	ldrd	r4, [sp]
   20b58:	ldrd	r6, [sp, #8]
   20b5c:	add	sp, sp, #16
   20b60:	pop	{pc}		; (ldr pc, [sp], #4)
   20b64:	mov	r1, r7
   20b68:	mov	r0, r5
   20b6c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20b70:	ldr	r4, [r4]
   20b74:	cmp	r4, #0
   20b78:	bne	20aa8 <__flatcc_fb_gen_c_verifier@@Base+0x216c>
   20b7c:	b	20ae0 <__flatcc_fb_gen_c_verifier@@Base+0x21a4>
   20b80:	movw	r1, #15648	; 0x3d20
   20b84:	movt	r1, #5
   20b88:	ldr	r3, [pc, #40]	; 20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   20b8c:	movw	r0, #15736	; 0x3d78
   20b90:	movt	r0, #5
   20b94:	movw	r2, #1582	; 0x62e
   20b98:	bl	14120 <__assert_fail@plt>
   20b9c:	movw	r1, #15648	; 0x3d20
   20ba0:	movt	r1, #5
   20ba4:	ldr	r3, [pc, #12]	; 20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   20ba8:	movw	r0, #15736	; 0x3d78
   20bac:	movt	r0, #5
   20bb0:	movw	r2, #1583	; 0x62f
   20bb4:	bl	14120 <__assert_fail@plt>
   20bb8:	andeq	r3, r5, r8, lsr #21
   20bbc:	add	r3, r1, #4
   20bc0:	mov	r2, r0
   20bc4:	movw	r1, #8596	; 0x2194
   20bc8:	movt	r1, #2
   20bcc:	mov	r0, r3
   20bd0:	b	2962c <fb_symbol_table_visit@@Base>
   20bd4:	add	r3, r1, #4
   20bd8:	mov	r2, r0
   20bdc:	movw	r1, #10264	; 0x2818
   20be0:	movt	r1, #2
   20be4:	mov	r0, r3
   20be8:	b	2962c <fb_symbol_table_visit@@Base>
   20bec:	strd	r4, [sp, #-16]!
   20bf0:	ldm	r0, {r0, r5}
   20bf4:	ldm	r1, {r1, r4}
   20bf8:	str	r6, [sp, #8]
   20bfc:	str	lr, [sp, #12]
   20c00:	cmp	r5, r4
   20c04:	movlt	r2, r5
   20c08:	movge	r2, r4
   20c0c:	bl	13fd0 <memcmp@plt>
   20c10:	cmp	r0, #0
   20c14:	ldr	r6, [sp, #8]
   20c18:	subeq	r0, r5, r4
   20c1c:	ldrd	r4, [sp]
   20c20:	add	sp, sp, #12
   20c24:	pop	{pc}		; (ldr pc, [sp], #4)
   20c28:	strd	r4, [sp, #-20]!	; 0xffffffec
   20c2c:	mov	r5, #0
   20c30:	mov	r3, r1
   20c34:	strd	r6, [sp, #8]
   20c38:	mov	r4, r0
   20c3c:	mov	r0, r1
   20c40:	str	lr, [sp, #16]
   20c44:	sub	sp, sp, #260	; 0x104
   20c48:	add	r7, r3, #4
   20c4c:	add	r1, sp, #52	; 0x34
   20c50:	str	r5, [sp, #24]
   20c54:	str	r5, [sp, #28]
   20c58:	str	r5, [sp, #32]
   20c5c:	str	r5, [sp, #36]	; 0x24
   20c60:	str	r5, [sp, #40]	; 0x28
   20c64:	str	r5, [sp, #44]	; 0x2c
   20c68:	str	r5, [sp, #48]	; 0x30
   20c6c:	bl	16184 <__flatcc_fb_copy_scope@@Base>
   20c70:	ldr	r3, [r4, #208]	; 0xd0
   20c74:	mov	r0, r7
   20c78:	add	r2, sp, #12
   20c7c:	movw	r1, #10084	; 0x2764
   20c80:	movt	r1, #2
   20c84:	str	r5, [sp, #12]
   20c88:	str	r3, [sp, #16]
   20c8c:	str	r5, [sp, #20]
   20c90:	bl	2962c <fb_symbol_table_visit@@Base>
   20c94:	ldr	r5, [sp, #12]
   20c98:	cmp	r5, #0
   20c9c:	streq	r5, [sp, #24]
   20ca0:	beq	20ce8 <__flatcc_fb_gen_c_verifier@@Base+0x23ac>
   20ca4:	lsl	r0, r5, #4
   20ca8:	bl	14018 <malloc@plt>
   20cac:	subs	r6, r0, #0
   20cb0:	beq	20ea4 <__flatcc_fb_gen_c_verifier@@Base+0x2568>
   20cb4:	add	r2, sp, #12
   20cb8:	mov	r0, r7
   20cbc:	str	r6, [sp, #20]
   20cc0:	movw	r1, #10160	; 0x27b0
   20cc4:	movt	r1, #2
   20cc8:	bl	2962c <fb_symbol_table_visit@@Base>
   20ccc:	movw	r3, #3052	; 0xbec
   20cd0:	movt	r3, #2
   20cd4:	ldr	r1, [sp, #12]
   20cd8:	mov	r2, #16
   20cdc:	mov	r0, r6
   20ce0:	bl	140f0 <qsort@plt>
   20ce4:	str	r6, [sp, #24]
   20ce8:	ldr	lr, [r4, #208]	; 0xd0
   20cec:	movw	r3, #4276	; 0x10b4
   20cf0:	movt	r3, #2
   20cf4:	movw	r2, #10072	; 0x2758
   20cf8:	movt	r2, #2
   20cfc:	mov	ip, #3
   20d00:	mov	r6, #0
   20d04:	str	r3, [sp, #28]
   20d08:	mov	r0, r4
   20d0c:	add	r3, sp, #52	; 0x34
   20d10:	str	r2, [sp, #32]
   20d14:	movw	r1, #16196	; 0x3f44
   20d18:	movt	r1, #5
   20d1c:	str	r6, [sp, #36]	; 0x24
   20d20:	ldr	r2, [lr, #160]	; 0xa0
   20d24:	str	ip, [sp, #40]	; 0x28
   20d28:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20d2c:	ldr	r3, [r4, #220]	; 0xdc
   20d30:	movw	r1, #17460	; 0x4434
   20d34:	movt	r1, #5
   20d38:	mov	r0, r4
   20d3c:	add	r3, r3, #2
   20d40:	str	r3, [r4, #220]	; 0xdc
   20d44:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20d48:	ldr	r3, [r4, #220]	; 0xdc
   20d4c:	cmp	r3, r6
   20d50:	beq	20efc <__flatcc_fb_gen_c_verifier@@Base+0x25c0>
   20d54:	cmp	r3, #1
   20d58:	streq	r6, [r4, #220]	; 0xdc
   20d5c:	beq	20efc <__flatcc_fb_gen_c_verifier@@Base+0x25c0>
   20d60:	sub	r3, r3, #2
   20d64:	movw	r1, #27128	; 0x69f8
   20d68:	movt	r1, #5
   20d6c:	mov	r0, r4
   20d70:	str	r3, [r4, #220]	; 0xdc
   20d74:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20d78:	ldr	r3, [r4, #220]	; 0xdc
   20d7c:	cmp	r5, #0
   20d80:	add	r3, r3, #1
   20d84:	str	r3, [r4, #220]	; 0xdc
   20d88:	beq	20e5c <__flatcc_fb_gen_c_verifier@@Base+0x2520>
   20d8c:	mov	r0, r4
   20d90:	movw	r1, #17596	; 0x44bc
   20d94:	movt	r1, #5
   20d98:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20d9c:	mov	r0, r4
   20da0:	movw	r1, #17628	; 0x44dc
   20da4:	movt	r1, #5
   20da8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20dac:	mov	r0, r4
   20db0:	movw	r1, #17648	; 0x44f0
   20db4:	movt	r1, #5
   20db8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20dbc:	mov	r0, r4
   20dc0:	movw	r1, #45408	; 0xb160
   20dc4:	movt	r1, #4
   20dc8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20dcc:	mov	r0, r4
   20dd0:	movw	r1, #16000	; 0x3e80
   20dd4:	movt	r1, #5
   20dd8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20ddc:	sub	r3, r5, #1
   20de0:	mov	r2, r6
   20de4:	str	r6, [sp]
   20de8:	add	r1, sp, #24
   20dec:	mov	r0, r4
   20df0:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   20df4:	movw	r1, #17148	; 0x42fc
   20df8:	movt	r1, #5
   20dfc:	mov	r0, r4
   20e00:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20e04:	ldr	r3, [r4, #220]	; 0xdc
   20e08:	cmp	r3, #0
   20e0c:	beq	20f18 <__flatcc_fb_gen_c_verifier@@Base+0x25dc>
   20e10:	sub	r3, r3, #1
   20e14:	mov	r0, r4
   20e18:	movw	r1, #15748	; 0x3d84
   20e1c:	movt	r1, #5
   20e20:	str	r3, [r4, #220]	; 0xdc
   20e24:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20e28:	mov	r0, r4
   20e2c:	movw	r1, #45408	; 0xb160
   20e30:	movt	r1, #4
   20e34:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20e38:	ldr	r0, [sp, #24]
   20e3c:	cmp	r0, #0
   20e40:	beq	20e48 <__flatcc_fb_gen_c_verifier@@Base+0x250c>
   20e44:	bl	13fac <free@plt>
   20e48:	add	sp, sp, #260	; 0x104
   20e4c:	ldrd	r4, [sp]
   20e50:	ldrd	r6, [sp, #8]
   20e54:	add	sp, sp, #16
   20e58:	pop	{pc}		; (ldr pc, [sp], #4)
   20e5c:	mov	r0, r4
   20e60:	movw	r1, #17512	; 0x4468
   20e64:	movt	r1, #5
   20e68:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20e6c:	movw	r1, #17564	; 0x449c
   20e70:	movt	r1, #5
   20e74:	mov	r0, r4
   20e78:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20e7c:	ldr	r3, [r4, #220]	; 0xdc
   20e80:	cmp	r3, #0
   20e84:	bne	20e10 <__flatcc_fb_gen_c_verifier@@Base+0x24d4>
   20e88:	movw	r1, #15648	; 0x3d20
   20e8c:	movt	r1, #5
   20e90:	ldr	r3, [pc, #156]	; 20f34 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   20e94:	movw	r0, #15736	; 0x3d78
   20e98:	movt	r0, #5
   20e9c:	movw	r2, #1157	; 0x485
   20ea0:	bl	14120 <__assert_fail@plt>
   20ea4:	cmp	r5, #0
   20ea8:	str	r6, [sp, #24]
   20eac:	ble	20ce8 <__flatcc_fb_gen_c_verifier@@Base+0x23ac>
   20eb0:	movw	r1, #17400	; 0x43f8
   20eb4:	movt	r1, #5
   20eb8:	movw	r3, #49320	; 0xc0a8
   20ebc:	movt	r3, #6
   20ec0:	movw	r2, #15648	; 0x3d20
   20ec4:	movt	r2, #5
   20ec8:	str	r1, [sp]
   20ecc:	movw	r1, #4944	; 0x1350
   20ed0:	movt	r1, #4
   20ed4:	ldr	r0, [r3]
   20ed8:	movw	r3, #1140	; 0x474
   20edc:	bl	1406c <fprintf@plt>
   20ee0:	movw	r1, #15648	; 0x3d20
   20ee4:	movt	r1, #5
   20ee8:	ldr	r3, [pc, #68]	; 20f34 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   20eec:	movw	r0, #41608	; 0xa288
   20ef0:	movt	r0, #4
   20ef4:	movw	r2, #1140	; 0x474
   20ef8:	bl	14120 <__assert_fail@plt>
   20efc:	movw	r1, #15648	; 0x3d20
   20f00:	movt	r1, #5
   20f04:	ldr	r3, [pc, #40]	; 20f34 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   20f08:	movw	r0, #15736	; 0x3d78
   20f0c:	movt	r0, #5
   20f10:	mov	r2, #1152	; 0x480
   20f14:	bl	14120 <__assert_fail@plt>
   20f18:	movw	r1, #15648	; 0x3d20
   20f1c:	movt	r1, #5
   20f20:	ldr	r3, [pc, #12]	; 20f34 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   20f24:	movw	r0, #15736	; 0x3d78
   20f28:	movt	r0, #5
   20f2c:	movw	r2, #1166	; 0x48e
   20f30:	bl	14120 <__assert_fail@plt>
   20f34:	andeq	r3, r5, r0, asr #21
   20f38:	ldr	r0, [r0, #4]
   20f3c:	ldr	r1, [r1, #4]
   20f40:	b	13f94 <strcmp@plt>
   20f44:	strd	r4, [sp, #-16]!
   20f48:	mov	r4, r0
   20f4c:	mov	r5, r1
   20f50:	str	r6, [sp, #8]
   20f54:	movw	r1, #17660	; 0x44fc
   20f58:	movt	r1, #5
   20f5c:	str	lr, [sp, #12]
   20f60:	sub	sp, sp, #8
   20f64:	mov	r6, r2
   20f68:	ldr	r2, [sp, #24]
   20f6c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20f70:	mov	r0, r4
   20f74:	movw	r1, #17740	; 0x454c
   20f78:	movt	r1, #5
   20f7c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20f80:	ldr	r2, [r4, #220]	; 0xdc
   20f84:	ldr	r3, [r5, #40]	; 0x28
   20f88:	add	r2, r2, #1
   20f8c:	sub	r3, r3, #1
   20f90:	str	r2, [r4, #220]	; 0xdc
   20f94:	cmp	r3, #8
   20f98:	ldrls	pc, [pc, r3, lsl #2]
   20f9c:	b	21060 <__flatcc_fb_gen_c_verifier@@Base+0x2724>
   20fa0:	andeq	r1, r2, ip, lsr #32
   20fa4:	andeq	r1, r2, ip, lsr #32
   20fa8:	andeq	r1, r2, ip, lsr #32
   20fac:	andeq	r1, r2, ip, lsr #32
   20fb0:	andeq	r1, r2, ip, lsr #32
   20fb4:	andeq	r0, r2, r4, asr #31
   20fb8:	andeq	r0, r2, r4, asr #31
   20fbc:	andeq	r0, r2, r4, asr #31
   20fc0:	andeq	r0, r2, r4, asr #31
   20fc4:	ldrd	r2, [r6, #48]	; 0x30
   20fc8:	mov	r0, r4
   20fcc:	cmp	r2, #0
   20fd0:	sbcs	r1, r3, #0
   20fd4:	movwlt	r1, #17804	; 0x458c
   20fd8:	movwge	r1, #17760	; 0x4560
   20fdc:	movtlt	r1, #5
   20fe0:	movtge	r1, #5
   20fe4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   20fe8:	ldr	r3, [r4, #220]	; 0xdc
   20fec:	cmp	r3, #0
   20ff0:	beq	21044 <__flatcc_fb_gen_c_verifier@@Base+0x2708>
   20ff4:	sub	r3, r3, #1
   20ff8:	mov	r0, r4
   20ffc:	movw	r1, #17064	; 0x42a8
   21000:	movt	r1, #5
   21004:	str	r3, [r4, #220]	; 0xdc
   21008:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2100c:	ldr	r3, [r4, #220]	; 0xdc
   21010:	add	r3, r3, #1
   21014:	str	r3, [r4, #220]	; 0xdc
   21018:	add	sp, sp, #8
   2101c:	ldrd	r4, [sp]
   21020:	ldr	r6, [sp, #8]
   21024:	add	sp, sp, #12
   21028:	pop	{pc}		; (ldr pc, [sp], #4)
   2102c:	movw	r1, #17760	; 0x4560
   21030:	movt	r1, #5
   21034:	ldrd	r2, [r6, #48]	; 0x30
   21038:	mov	r0, r4
   2103c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21040:	b	20fe8 <__flatcc_fb_gen_c_verifier@@Base+0x26ac>
   21044:	movw	r1, #15648	; 0x3d20
   21048:	movt	r1, #5
   2104c:	ldr	r3, [pc, #88]	; 210ac <__flatcc_fb_gen_c_verifier@@Base+0x2770>
   21050:	movw	r0, #15736	; 0x3d78
   21054:	movt	r0, #5
   21058:	movw	r2, #719	; 0x2cf
   2105c:	bl	14120 <__assert_fail@plt>
   21060:	movw	r1, #17848	; 0x45b8
   21064:	movt	r1, #5
   21068:	movw	r3, #49320	; 0xc0a8
   2106c:	movt	r3, #6
   21070:	movw	r2, #15648	; 0x3d20
   21074:	movt	r2, #5
   21078:	str	r1, [sp]
   2107c:	movw	r1, #4944	; 0x1350
   21080:	movt	r1, #4
   21084:	ldr	r0, [r3]
   21088:	movw	r3, #710	; 0x2c6
   2108c:	bl	1406c <fprintf@plt>
   21090:	movw	r1, #15648	; 0x3d20
   21094:	movt	r1, #5
   21098:	ldr	r3, [pc, #16]	; 210b0 <__flatcc_fb_gen_c_verifier@@Base+0x2774>
   2109c:	movw	r0, #41608	; 0xa288
   210a0:	movt	r0, #4
   210a4:	movw	r2, #710	; 0x2c6
   210a8:	bl	14120 <__assert_fail@plt>
   210ac:	strdeq	r3, [r5], -r0
   210b0:	ldrdeq	r3, [r5], -r8
   210b4:	strd	r4, [sp, #-12]!
   210b8:	movw	r1, #17884	; 0x45dc
   210bc:	movt	r1, #5
   210c0:	str	lr, [sp, #8]
   210c4:	sub	sp, sp, #228	; 0xe4
   210c8:	mov	r4, r0
   210cc:	mov	r5, r2
   210d0:	ldr	r2, [sp, #240]	; 0xf0
   210d4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   210d8:	mov	r0, r4
   210dc:	movw	r1, #17740	; 0x454c
   210e0:	movt	r1, #5
   210e4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   210e8:	ldrh	r2, [r5, #8]
   210ec:	ldr	r3, [r4, #220]	; 0xdc
   210f0:	sub	r2, r2, #3
   210f4:	cmp	r2, #1
   210f8:	add	r3, r3, #1
   210fc:	str	r3, [r4, #220]	; 0xdc
   21100:	bhi	21178 <__flatcc_fb_gen_c_verifier@@Base+0x283c>
   21104:	mov	r2, #220	; 0xdc
   21108:	mov	r1, #0
   2110c:	add	r0, sp, #4
   21110:	bl	14084 <memset@plt>
   21114:	add	r2, sp, #4
   21118:	mov	r1, r5
   2111c:	ldr	r0, [r5, #12]
   21120:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   21124:	add	r2, sp, #4
   21128:	movw	r1, #17952	; 0x4620
   2112c:	movt	r1, #5
   21130:	mov	r0, r4
   21134:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21138:	ldr	r3, [r4, #220]	; 0xdc
   2113c:	cmp	r3, #0
   21140:	beq	21194 <__flatcc_fb_gen_c_verifier@@Base+0x2858>
   21144:	sub	r3, r3, #1
   21148:	mov	r0, r4
   2114c:	movw	r1, #17064	; 0x42a8
   21150:	movt	r1, #5
   21154:	str	r3, [r4, #220]	; 0xdc
   21158:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2115c:	ldr	r3, [r4, #220]	; 0xdc
   21160:	add	r3, r3, #1
   21164:	str	r3, [r4, #220]	; 0xdc
   21168:	add	sp, sp, #228	; 0xe4
   2116c:	ldrd	r4, [sp]
   21170:	add	sp, sp, #8
   21174:	pop	{pc}		; (ldr pc, [sp], #4)
   21178:	movw	r1, #15648	; 0x3d20
   2117c:	movt	r1, #5
   21180:	ldr	r3, [pc, #40]	; 211b0 <__flatcc_fb_gen_c_verifier@@Base+0x2874>
   21184:	movw	r0, #5032	; 0x13a8
   21188:	movt	r0, #4
   2118c:	movw	r2, #729	; 0x2d9
   21190:	bl	14120 <__assert_fail@plt>
   21194:	movw	r1, #15648	; 0x3d20
   21198:	movt	r1, #5
   2119c:	ldr	r3, [pc, #16]	; 211b4 <__flatcc_fb_gen_c_verifier@@Base+0x2878>
   211a0:	movw	r0, #15736	; 0x3d78
   211a4:	movt	r0, #5
   211a8:	movw	r2, #742	; 0x2e6
   211ac:	bl	14120 <__assert_fail@plt>
   211b0:	andeq	r3, r5, r0, lsl #22
   211b4:	andeq	r3, r5, r8, lsl fp
   211b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   211bc:	mov	r5, r1
   211c0:	mov	r4, r0
   211c4:	strd	r6, [sp, #8]
   211c8:	mov	r1, #0
   211cc:	mov	r6, r2
   211d0:	strd	r8, [sp, #16]
   211d4:	mov	r2, #220	; 0xdc
   211d8:	mov	r7, r3
   211dc:	strd	sl, [sp, #24]
   211e0:	str	lr, [sp, #32]
   211e4:	sub	sp, sp, #508	; 0x1fc
   211e8:	add	r0, sp, #284	; 0x11c
   211ec:	bl	14084 <memset@plt>
   211f0:	add	r1, sp, #80	; 0x50
   211f4:	ldr	r0, [r6]
   211f8:	bl	16184 <__flatcc_fb_copy_scope@@Base>
   211fc:	ldrh	r3, [r5]
   21200:	sub	r2, r3, #1
   21204:	str	r3, [sp, #24]
   21208:	ldrh	r3, [r7, #24]
   2120c:	clz	r2, r2
   21210:	lsr	r2, r2, #5
   21214:	str	r2, [sp, #56]	; 0x38
   21218:	cmp	r3, #9
   2121c:	beq	21264 <__flatcc_fb_gen_c_verifier@@Base+0x2928>
   21220:	cmp	r3, #15
   21224:	beq	21264 <__flatcc_fb_gen_c_verifier@@Base+0x2928>
   21228:	cmp	r3, #7
   2122c:	beq	21264 <__flatcc_fb_gen_c_verifier@@Base+0x2928>
   21230:	sub	r3, r3, #7
   21234:	cmp	r3, #8
   21238:	ldrls	pc, [pc, r3, lsl #2]
   2123c:	b	21e08 <__flatcc_fb_gen_c_verifier@@Base+0x34cc>
   21240:	andeq	r1, r2, ip, lsl sp
   21244:	andeq	r2, r2, ip, asr r0
   21248:	andeq	r1, r2, r8, lsl #28
   2124c:	andeq	r1, r2, ip, ror #25
   21250:	andeq	r1, r2, r8, lsl #28
   21254:	andeq	r1, r2, r8, lsl #28
   21258:	andeq	r1, r2, r8, lsl #28
   2125c:	andeq	r1, r2, r0, asr ip
   21260:	andeq	r1, r2, r0, asr ip
   21264:	sub	r3, r3, #7
   21268:	cmp	r3, #8
   2126c:	ldrls	pc, [pc, r3, lsl #2]
   21270:	b	21e3c <__flatcc_fb_gen_c_verifier@@Base+0x3500>
   21274:			; <UNDEFINED> instruction: 0x00021db0
   21278:	muleq	r2, r8, r2
   2127c:			; <UNDEFINED> instruction: 0x00021db8
   21280:			; <UNDEFINED> instruction: 0x00021db8
   21284:	andeq	r1, r2, ip, lsr lr
   21288:	andeq	r1, r2, ip, lsr lr
   2128c:	andeq	r1, r2, ip, lsr lr
   21290:	andeq	r1, r2, r4, lsr #27
   21294:	andeq	r1, r2, r4, lsr #27
   21298:	ldr	sl, [r7, #16]
   2129c:	mov	r3, #0
   212a0:	mov	r5, #1
   212a4:	str	r3, [sp, #16]
   212a8:	mov	r9, sl
   212ac:	mov	r3, #0
   212b0:	sub	r8, sl, #1
   212b4:	mov	fp, r3
   212b8:	mov	sl, r5
   212bc:	mov	r6, #1
   212c0:	str	r3, [sp, #28]
   212c4:	str	r3, [sp, #48]	; 0x30
   212c8:	str	r3, [sp, #52]	; 0x34
   212cc:	str	r3, [sp, #60]	; 0x3c
   212d0:	str	r3, [sp, #76]	; 0x4c
   212d4:	ldr	r3, [sp, #544]	; 0x220
   212d8:	cmp	r3, #0
   212dc:	beq	21b94 <__flatcc_fb_gen_c_verifier@@Base+0x3258>
   212e0:	cmp	sl, #0
   212e4:	beq	21fe8 <__flatcc_fb_gen_c_verifier@@Base+0x36ac>
   212e8:	mov	r3, #0
   212ec:	mov	r2, #1
   212f0:	mov	r6, r3
   212f4:	mov	r5, r3
   212f8:	str	r3, [sp, #32]
   212fc:	str	r3, [sp, #64]	; 0x40
   21300:	str	r3, [sp, #68]	; 0x44
   21304:	str	r2, [sp, #72]	; 0x48
   21308:	ldr	r3, [sp, #16]
   2130c:	cmp	r3, #1
   21310:	beq	21bc4 <__flatcc_fb_gen_c_verifier@@Base+0x3288>
   21314:	ldr	r3, [sp, #16]
   21318:	movw	r2, #18024	; 0x4668
   2131c:	movt	r2, #5
   21320:	str	r2, [sp, #20]
   21324:	cmp	r3, #2
   21328:	movw	r3, #14968	; 0x3a78
   2132c:	movt	r3, #5
   21330:	add	r2, r3, r8, lsl #2
   21334:	str	r3, [sp, #36]	; 0x24
   21338:	beq	21598 <__flatcc_fb_gen_c_verifier@@Base+0x2c5c>
   2133c:	ldr	r1, [sp, #544]	; 0x220
   21340:	orr	r3, r6, fp
   21344:	cmp	r6, #0
   21348:	orr	sl, r3, r1
   2134c:	beq	216f0 <__flatcc_fb_gen_c_verifier@@Base+0x2db4>
   21350:	cmp	r8, #10
   21354:	bhi	21e8c <__flatcc_fb_gen_c_verifier@@Base+0x3550>
   21358:	ldr	r3, [r2, #200]	; 0xc8
   2135c:	cmp	r9, #5
   21360:	str	r3, [sp, #20]
   21364:	bne	2191c <__flatcc_fb_gen_c_verifier@@Base+0x2fe0>
   21368:	movw	r3, #35652	; 0x8b44
   2136c:	movt	r3, #4
   21370:	str	r3, [sp, #36]	; 0x24
   21374:	cmp	r5, #0
   21378:	beq	213e0 <__flatcc_fb_gen_c_verifier@@Base+0x2aa4>
   2137c:	ldrd	r2, [r7, #88]	; 0x58
   21380:	ldrsh	r9, [r7, #74]	; 0x4a
   21384:	strd	r2, [sp, #40]	; 0x28
   21388:	orrs	r3, r2, r3
   2138c:	bne	219f4 <__flatcc_fb_gen_c_verifier@@Base+0x30b8>
   21390:	ldrd	r2, [sp, #40]	; 0x28
   21394:	movw	r1, #20504	; 0x5018
   21398:	movt	r1, #5
   2139c:	mvn	r8, #0
   213a0:	str	r9, [sp]
   213a4:	mov	r9, #0
   213a8:	strd	r8, [sp, #8]
   213ac:	mov	r0, r4
   213b0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   213b4:	mov	r0, r4
   213b8:	movw	r1, #18296	; 0x4778
   213bc:	movt	r1, #5
   213c0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   213c4:	movw	r1, #18356	; 0x47b4
   213c8:	movt	r1, #5
   213cc:	mov	r0, r4
   213d0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   213d4:	ldr	r3, [r4, #220]	; 0xdc
   213d8:	add	r3, r3, #1
   213dc:	str	r3, [r4, #220]	; 0xdc
   213e0:	mov	r0, r4
   213e4:	movw	r1, #18372	; 0x47c4
   213e8:	movt	r1, #5
   213ec:	ldr	r2, [sp, #36]	; 0x24
   213f0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   213f4:	movw	r1, #18384	; 0x47d0
   213f8:	movt	r1, #5
   213fc:	mov	r0, r4
   21400:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21404:	ldr	r3, [r4, #220]	; 0xdc
   21408:	ldr	r2, [sp, #52]	; 0x34
   2140c:	add	r3, r3, #2
   21410:	cmp	r2, #0
   21414:	str	r3, [r4, #220]	; 0xdc
   21418:	beq	21430 <__flatcc_fb_gen_c_verifier@@Base+0x2af4>
   2141c:	movw	r1, #18452	; 0x4814
   21420:	movt	r1, #5
   21424:	add	r2, sp, #284	; 0x11c
   21428:	mov	r0, r4
   2142c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21430:	ldr	r2, [r4, #208]	; 0xd0
   21434:	add	r3, sp, #80	; 0x50
   21438:	mov	r0, r4
   2143c:	movw	r1, #18472	; 0x4828
   21440:	movt	r1, #5
   21444:	ldr	r2, [r2, #160]	; 0xa0
   21448:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2144c:	ldr	r3, [r4, #208]	; 0xd0
   21450:	movw	r1, #18504	; 0x4848
   21454:	movt	r1, #5
   21458:	mov	r0, r4
   2145c:	ldr	r2, [r3, #160]	; 0xa0
   21460:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21464:	ldr	r3, [r4, #220]	; 0xdc
   21468:	cmp	r3, #0
   2146c:	beq	21e70 <__flatcc_fb_gen_c_verifier@@Base+0x3534>
   21470:	cmp	r3, #1
   21474:	beq	21e68 <__flatcc_fb_gen_c_verifier@@Base+0x352c>
   21478:	sub	r3, r3, #2
   2147c:	str	r3, [r4, #220]	; 0xdc
   21480:	cmp	sl, #0
   21484:	movne	r3, r5
   21488:	moveq	r3, #0
   2148c:	cmp	r3, #0
   21490:	beq	214a4 <__flatcc_fb_gen_c_verifier@@Base+0x2b68>
   21494:	movw	r1, #18540	; 0x486c
   21498:	movt	r1, #5
   2149c:	mov	r0, r4
   214a0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   214a4:	ldr	r3, [sp, #24]
   214a8:	cmp	r3, #1
   214ac:	beq	21620 <__flatcc_fb_gen_c_verifier@@Base+0x2ce4>
   214b0:	eor	r3, r5, #1
   214b4:	tst	r3, fp
   214b8:	bne	2184c <__flatcc_fb_gen_c_verifier@@Base+0x2f10>
   214bc:	cmp	r6, #0
   214c0:	bne	2163c <__flatcc_fb_gen_c_verifier@@Base+0x2d00>
   214c4:	cmp	fp, #0
   214c8:	bne	21878 <__flatcc_fb_gen_c_verifier@@Base+0x2f3c>
   214cc:	ldr	r3, [sp, #48]	; 0x30
   214d0:	cmp	r3, #0
   214d4:	bne	21928 <__flatcc_fb_gen_c_verifier@@Base+0x2fec>
   214d8:	ldr	r3, [sp, #32]
   214dc:	cmp	r3, #0
   214e0:	bne	2193c <__flatcc_fb_gen_c_verifier@@Base+0x3000>
   214e4:	ldr	r3, [sp, #28]
   214e8:	cmp	r3, #0
   214ec:	bne	21a7c <__flatcc_fb_gen_c_verifier@@Base+0x3140>
   214f0:	ldr	r3, [sp, #60]	; 0x3c
   214f4:	cmp	r3, #0
   214f8:	beq	21a1c <__flatcc_fb_gen_c_verifier@@Base+0x30e0>
   214fc:	ldr	r3, [sp, #64]	; 0x40
   21500:	ldrd	r8, [r7, #96]	; 0x60
   21504:	ldr	r2, [r7, #112]	; 0x70
   21508:	cmp	r3, #0
   2150c:	beq	21a94 <__flatcc_fb_gen_c_verifier@@Base+0x3158>
   21510:	add	ip, sp, #284	; 0x11c
   21514:	movw	r1, #19560	; 0x4c68
   21518:	movt	r1, #5
   2151c:	mov	r0, r4
   21520:	strd	r8, [sp]
   21524:	str	ip, [sp, #8]
   21528:	ldr	r3, [sp, #28]
   2152c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21530:	cmp	r5, #0
   21534:	beq	21584 <__flatcc_fb_gen_c_verifier@@Base+0x2c48>
   21538:	cmp	sl, #0
   2153c:	beq	218b4 <__flatcc_fb_gen_c_verifier@@Base+0x2f78>
   21540:	movw	r1, #20172	; 0x4ecc
   21544:	movt	r1, #5
   21548:	mov	r0, r4
   2154c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21550:	ldr	r3, [r4, #220]	; 0xdc
   21554:	cmp	r3, #0
   21558:	beq	219d8 <__flatcc_fb_gen_c_verifier@@Base+0x309c>
   2155c:	sub	r3, r3, #1
   21560:	mov	r0, r4
   21564:	movw	r1, #15748	; 0x3d84
   21568:	movt	r1, #5
   2156c:	str	r3, [r4, #220]	; 0xdc
   21570:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21574:	movw	r1, #20460	; 0x4fec
   21578:	movt	r1, #5
   2157c:	mov	r0, r4
   21580:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21584:	ldr	r3, [sp, #16]
   21588:	cmp	r3, #1
   2158c:	bne	217d8 <__flatcc_fb_gen_c_verifier@@Base+0x2e9c>
   21590:	mov	r3, #2
   21594:	str	r3, [sp, #16]
   21598:	ldr	r3, [r4, #220]	; 0xdc
   2159c:	cmp	r3, #0
   215a0:	beq	21f14 <__flatcc_fb_gen_c_verifier@@Base+0x35d8>
   215a4:	sub	r3, r3, #1
   215a8:	mov	r0, r4
   215ac:	movw	r1, #18140	; 0x46dc
   215b0:	movt	r1, #5
   215b4:	str	r3, [r4, #220]	; 0xdc
   215b8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   215bc:	ldr	r3, [r4, #220]	; 0xdc
   215c0:	add	r2, sp, #284	; 0x11c
   215c4:	ldr	r1, [r7, #104]	; 0x68
   215c8:	add	r3, r3, #1
   215cc:	ldr	r0, [r1, #12]
   215d0:	str	r3, [r4, #220]	; 0xdc
   215d4:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   215d8:	ldr	r3, [r7, #104]	; 0x68
   215dc:	movw	r1, #18164	; 0x46f4
   215e0:	movt	r1, #5
   215e4:	mov	r0, r4
   215e8:	ldrh	r3, [r3, #8]
   215ec:	cmp	r3, #0
   215f0:	ldr	r3, [sp, #28]
   215f4:	moveq	r3, #1
   215f8:	movne	fp, #1
   215fc:	str	r3, [sp, #28]
   21600:	ldr	r3, [sp, #544]	; 0x220
   21604:	orr	sl, r3, fp
   21608:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2160c:	ldr	r3, [sp, #24]
   21610:	mov	r5, #0
   21614:	mov	r6, r5
   21618:	cmp	r3, #1
   2161c:	bne	214b0 <__flatcc_fb_gen_c_verifier@@Base+0x2b74>
   21620:	movw	r1, #18612	; 0x48b4
   21624:	movt	r1, #5
   21628:	ldrd	r2, [r7, #80]	; 0x50
   2162c:	mov	r0, r4
   21630:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21634:	cmp	r6, #0
   21638:	beq	214c4 <__flatcc_fb_gen_c_verifier@@Base+0x2b88>
   2163c:	ldr	r6, [sp, #20]
   21640:	mov	r0, r4
   21644:	movw	r1, #18796	; 0x496c
   21648:	movt	r1, #5
   2164c:	mov	r2, r6
   21650:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21654:	mov	r0, r4
   21658:	movw	r1, #18856	; 0x49a8
   2165c:	movt	r1, #5
   21660:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21664:	ldr	r3, [r4, #220]	; 0xdc
   21668:	mov	r2, r6
   2166c:	mov	r0, r4
   21670:	movw	r1, #18876	; 0x49bc
   21674:	movt	r1, #5
   21678:	add	r3, r3, #1
   2167c:	str	r3, [r4, #220]	; 0xdc
   21680:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21684:	movw	r1, #18964	; 0x4a14
   21688:	movt	r1, #5
   2168c:	mov	r0, r4
   21690:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21694:	ldr	r3, [r4, #220]	; 0xdc
   21698:	cmp	r3, #0
   2169c:	beq	21edc <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
   216a0:	sub	r3, r3, #1
   216a4:	movw	r1, #15748	; 0x3d84
   216a8:	movt	r1, #5
   216ac:	mov	r0, r4
   216b0:	str	r3, [r4, #220]	; 0xdc
   216b4:	ldr	r3, [sp, #56]	; 0x38
   216b8:	orr	r6, r3, r5
   216bc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   216c0:	ldr	r3, [sp, #32]
   216c4:	orrs	r3, r6, r3
   216c8:	bne	21890 <__flatcc_fb_gen_c_verifier@@Base+0x2f54>
   216cc:	ldrh	r3, [r7, #56]	; 0x38
   216d0:	sub	r3, r3, #3
   216d4:	cmp	r3, #3
   216d8:	ldrls	pc, [pc, r3, lsl #2]
   216dc:	b	2207c <__flatcc_fb_gen_c_verifier@@Base+0x3740>
   216e0:	andeq	r1, r2, r8, lsr #16
   216e4:	andeq	r1, r2, ip, lsl r8
   216e8:	andeq	r1, r2, ip, asr #14
   216ec:	andeq	r1, r2, ip, asr #14
   216f0:	cmp	r5, #0
   216f4:	beq	2160c <__flatcc_fb_gen_c_verifier@@Base+0x2cd0>
   216f8:	cmp	sl, #0
   216fc:	bne	2195c <__flatcc_fb_gen_c_verifier@@Base+0x3020>
   21700:	mov	r0, r4
   21704:	movw	r1, #18232	; 0x4738
   21708:	movt	r1, #5
   2170c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21710:	mov	r0, r4
   21714:	movw	r1, #18296	; 0x4778
   21718:	movt	r1, #5
   2171c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21720:	movw	r1, #18356	; 0x47b4
   21724:	movt	r1, #5
   21728:	mov	r0, r4
   2172c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21730:	ldr	r3, [r4, #220]	; 0xdc
   21734:	ldr	r2, [sp, #24]
   21738:	add	r3, r3, #1
   2173c:	cmp	r2, #1
   21740:	str	r3, [r4, #220]	; 0xdc
   21744:	bne	214c4 <__flatcc_fb_gen_c_verifier@@Base+0x2b88>
   21748:	b	21620 <__flatcc_fb_gen_c_verifier@@Base+0x2ce4>
   2174c:	movw	r1, #19008	; 0x4a40
   21750:	movt	r1, #5
   21754:	mov	r0, r4
   21758:	ldrd	r2, [r7, #48]	; 0x30
   2175c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21760:	ldr	r3, [r4, #220]	; 0xdc
   21764:	add	r3, r3, #1
   21768:	str	r3, [r4, #220]	; 0xdc
   2176c:	ldrsh	r3, [r7, #74]	; 0x4a
   21770:	mov	r0, r4
   21774:	movw	r1, #19260	; 0x4b3c
   21778:	movt	r1, #5
   2177c:	ldrd	r8, [r7, #88]	; 0x58
   21780:	str	r3, [sp, #8]
   21784:	ldrd	r2, [r7, #96]	; 0x60
   21788:	strd	r8, [sp]
   2178c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21790:	movw	r1, #19340	; 0x4b8c
   21794:	movt	r1, #5
   21798:	ldr	r3, [sp, #20]
   2179c:	mov	r2, r4
   217a0:	mov	r0, r4
   217a4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   217a8:	ldr	r3, [r4, #220]	; 0xdc
   217ac:	cmp	r3, #0
   217b0:	beq	21ef8 <__flatcc_fb_gen_c_verifier@@Base+0x35bc>
   217b4:	sub	r3, r3, #1
   217b8:	movw	r1, #15748	; 0x3d84
   217bc:	movt	r1, #5
   217c0:	mov	r0, r4
   217c4:	str	r3, [r4, #220]	; 0xdc
   217c8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   217cc:	ldr	r3, [sp, #16]
   217d0:	cmp	r3, #1
   217d4:	beq	21590 <__flatcc_fb_gen_c_verifier@@Base+0x2c54>
   217d8:	cmp	r3, #2
   217dc:	beq	21be4 <__flatcc_fb_gen_c_verifier@@Base+0x32a8>
   217e0:	ldr	r3, [sp, #28]
   217e4:	ldr	r2, [sp, #76]	; 0x4c
   217e8:	orr	r3, r3, r5
   217ec:	orr	r3, r3, r2
   217f0:	ldr	r2, [sp, #16]
   217f4:	orrs	r3, r3, r2
   217f8:	bne	21c28 <__flatcc_fb_gen_c_verifier@@Base+0x32ec>
   217fc:	mov	r0, #0
   21800:	add	sp, sp, #508	; 0x1fc
   21804:	ldrd	r4, [sp]
   21808:	ldrd	r6, [sp, #8]
   2180c:	ldrd	r8, [sp, #16]
   21810:	ldrd	sl, [sp, #24]
   21814:	add	sp, sp, #32
   21818:	pop	{pc}		; (ldr pc, [sp], #4)
   2181c:	movw	r1, #19076	; 0x4a84
   21820:	movt	r1, #5
   21824:	b	21754 <__flatcc_fb_gen_c_verifier@@Base+0x2e18>
   21828:	movw	r1, #19144	; 0x4ac8
   2182c:	movt	r1, #5
   21830:	ldrd	r2, [r7, #48]	; 0x30
   21834:	mov	r0, r4
   21838:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2183c:	ldr	r3, [r4, #220]	; 0xdc
   21840:	add	r3, r3, #1
   21844:	str	r3, [r4, #220]	; 0xdc
   21848:	b	2176c <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
   2184c:	ldrh	r3, [r7, #74]	; 0x4a
   21850:	movw	r1, #18660	; 0x48e4
   21854:	movt	r1, #5
   21858:	mov	r0, r4
   2185c:	ldrd	r8, [r7, #88]	; 0x58
   21860:	str	r3, [sp, #8]
   21864:	ldrd	r2, [r7, #96]	; 0x60
   21868:	strd	r8, [sp]
   2186c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21870:	cmp	r6, #0
   21874:	bne	2163c <__flatcc_fb_gen_c_verifier@@Base+0x2d00>
   21878:	movw	r1, #18740	; 0x4934
   2187c:	movt	r1, #5
   21880:	add	r2, sp, #284	; 0x11c
   21884:	mov	r0, r4
   21888:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2188c:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   21890:	movw	r1, #19340	; 0x4b8c
   21894:	movt	r1, #5
   21898:	ldr	r3, [sp, #20]
   2189c:	mov	r2, r4
   218a0:	mov	r0, r4
   218a4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   218a8:	cmp	r6, #0
   218ac:	bne	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   218b0:	b	217a8 <__flatcc_fb_gen_c_verifier@@Base+0x2e6c>
   218b4:	mov	r0, r4
   218b8:	movw	r1, #20068	; 0x4e64
   218bc:	movt	r1, #5
   218c0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   218c4:	mov	r0, r4
   218c8:	movw	r1, #20156	; 0x4ebc
   218cc:	movt	r1, #5
   218d0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   218d4:	movw	r1, #20172	; 0x4ecc
   218d8:	movt	r1, #5
   218dc:	mov	r0, r4
   218e0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   218e4:	ldr	r3, [r4, #220]	; 0xdc
   218e8:	cmp	r3, #0
   218ec:	beq	219d8 <__flatcc_fb_gen_c_verifier@@Base+0x309c>
   218f0:	sub	r3, r3, #1
   218f4:	mov	r0, r4
   218f8:	movw	r1, #15748	; 0x3d84
   218fc:	movt	r1, #5
   21900:	str	r3, [r4, #220]	; 0xdc
   21904:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21908:	movw	r1, #20408	; 0x4fb8
   2190c:	movt	r1, #5
   21910:	mov	r0, r4
   21914:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21918:	b	21584 <__flatcc_fb_gen_c_verifier@@Base+0x2c48>
   2191c:	ldr	r3, [r2, #264]	; 0x108
   21920:	str	r3, [sp, #36]	; 0x24
   21924:	b	21374 <__flatcc_fb_gen_c_verifier@@Base+0x2a38>
   21928:	movw	r1, #19372	; 0x4bac
   2192c:	movt	r1, #5
   21930:	mov	r0, r4
   21934:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21938:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   2193c:	ldr	r3, [sp, #68]	; 0x44
   21940:	movw	r1, #19432	; 0x4be8
   21944:	movt	r1, #5
   21948:	mov	r0, r4
   2194c:	clz	r2, r3
   21950:	lsr	r2, r2, #5
   21954:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21958:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   2195c:	ldrsh	r3, [r7, #74]	; 0x4a
   21960:	ldrd	r8, [r7, #88]	; 0x58
   21964:	str	r3, [sp, #36]	; 0x24
   21968:	orrs	r3, r8, r9
   2196c:	beq	22000 <__flatcc_fb_gen_c_verifier@@Base+0x36c4>
   21970:	mov	r2, r8
   21974:	mov	r3, r9
   21978:	mvn	r0, #0
   2197c:	mov	r1, #0
   21980:	bl	3f390 <fb_value_set_visit@@Base+0x694>
   21984:	ldr	ip, [sp, #36]	; 0x24
   21988:	mov	r3, r9
   2198c:	mov	r2, r8
   21990:	str	ip, [sp]
   21994:	strd	r0, [sp, #8]
   21998:	mov	r0, r4
   2199c:	movw	r1, #20504	; 0x5018
   219a0:	movt	r1, #5
   219a4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   219a8:	mov	r0, r4
   219ac:	movw	r1, #18296	; 0x4778
   219b0:	movt	r1, #5
   219b4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   219b8:	movw	r1, #18356	; 0x47b4
   219bc:	movt	r1, #5
   219c0:	mov	r0, r4
   219c4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   219c8:	ldr	r3, [r4, #220]	; 0xdc
   219cc:	add	r3, r3, #1
   219d0:	str	r3, [r4, #220]	; 0xdc
   219d4:	b	21480 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   219d8:	movw	r1, #15648	; 0x3d20
   219dc:	movt	r1, #5
   219e0:	ldr	r3, [pc, #1760]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   219e4:	movw	r0, #15736	; 0x3d78
   219e8:	movt	r0, #5
   219ec:	movw	r2, #647	; 0x287
   219f0:	bl	14120 <__assert_fail@plt>
   219f4:	mvn	r0, #0
   219f8:	mov	r1, #0
   219fc:	ldrd	r2, [sp, #40]	; 0x28
   21a00:	bl	3f390 <fb_value_set_visit@@Base+0x694>
   21a04:	str	r9, [sp]
   21a08:	strd	r0, [sp, #8]
   21a0c:	movw	r1, #20504	; 0x5018
   21a10:	movt	r1, #5
   21a14:	ldrd	r2, [sp, #40]	; 0x28
   21a18:	b	213ac <__flatcc_fb_gen_c_verifier@@Base+0x2a70>
   21a1c:	ldr	r3, [sp, #544]	; 0x220
   21a20:	cmp	r3, #0
   21a24:	bne	21ab4 <__flatcc_fb_gen_c_verifier@@Base+0x3178>
   21a28:	cmp	r5, #0
   21a2c:	bne	21538 <__flatcc_fb_gen_c_verifier@@Base+0x2bfc>
   21a30:	movw	r1, #20016	; 0x4e30
   21a34:	movt	r1, #5
   21a38:	movw	r3, #49320	; 0xc0a8
   21a3c:	movt	r3, #6
   21a40:	movw	r2, #15648	; 0x3d20
   21a44:	movt	r2, #5
   21a48:	str	r1, [sp]
   21a4c:	movw	r1, #4944	; 0x1350
   21a50:	movt	r1, #4
   21a54:	ldr	r0, [r3]
   21a58:	mov	r3, #636	; 0x27c
   21a5c:	bl	1406c <fprintf@plt>
   21a60:	movw	r1, #15648	; 0x3d20
   21a64:	movt	r1, #5
   21a68:	ldr	r3, [pc, #1624]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21a6c:	movw	r0, #41608	; 0xa288
   21a70:	movt	r0, #4
   21a74:	mov	r2, #636	; 0x27c
   21a78:	bl	14120 <__assert_fail@plt>
   21a7c:	movw	r1, #19512	; 0x4c38
   21a80:	movt	r1, #5
   21a84:	add	r2, sp, #284	; 0x11c
   21a88:	mov	r0, r4
   21a8c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21a90:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   21a94:	add	ip, sp, #284	; 0x11c
   21a98:	movw	r1, #19660	; 0x4ccc
   21a9c:	movt	r1, #5
   21aa0:	mov	r0, r4
   21aa4:	strd	r8, [sp]
   21aa8:	str	ip, [sp, #8]
   21aac:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21ab0:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   21ab4:	mov	r0, r4
   21ab8:	movw	r1, #18384	; 0x47d0
   21abc:	movt	r1, #5
   21ac0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21ac4:	ldr	r3, [r4, #220]	; 0xdc
   21ac8:	add	r2, sp, #284	; 0x11c
   21acc:	mov	r0, r4
   21ad0:	movw	r1, #18452	; 0x4814
   21ad4:	movt	r1, #5
   21ad8:	add	r3, r3, #2
   21adc:	str	r3, [r4, #220]	; 0xdc
   21ae0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21ae4:	ldr	r2, [r4, #208]	; 0xd0
   21ae8:	add	r3, sp, #80	; 0x50
   21aec:	mov	r0, r4
   21af0:	movw	r1, #18472	; 0x4828
   21af4:	movt	r1, #5
   21af8:	ldr	r2, [r2, #160]	; 0xa0
   21afc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21b00:	ldr	r3, [r4, #208]	; 0xd0
   21b04:	movw	r1, #18504	; 0x4848
   21b08:	movt	r1, #5
   21b0c:	mov	r0, r4
   21b10:	ldr	r2, [r3, #160]	; 0xa0
   21b14:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21b18:	ldr	r3, [r4, #220]	; 0xdc
   21b1c:	cmp	r3, #0
   21b20:	beq	21fcc <__flatcc_fb_gen_c_verifier@@Base+0x3690>
   21b24:	cmp	r3, #1
   21b28:	beq	21fc4 <__flatcc_fb_gen_c_verifier@@Base+0x3688>
   21b2c:	ldr	r2, [sp, #72]	; 0x48
   21b30:	sub	r3, r3, #2
   21b34:	ldrd	r8, [r7, #96]	; 0x60
   21b38:	cmp	r2, #0
   21b3c:	ldr	r2, [r7, #112]	; 0x70
   21b40:	str	r3, [r4, #220]	; 0xdc
   21b44:	beq	21b70 <__flatcc_fb_gen_c_verifier@@Base+0x3234>
   21b48:	add	ip, sp, #284	; 0x11c
   21b4c:	movw	r1, #19752	; 0x4d28
   21b50:	movt	r1, #5
   21b54:	mov	r0, r4
   21b58:	strd	r8, [sp]
   21b5c:	str	ip, [sp, #8]
   21b60:	str	ip, [sp, #12]
   21b64:	ldr	r3, [sp, #60]	; 0x3c
   21b68:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21b6c:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   21b70:	add	ip, sp, #284	; 0x11c
   21b74:	movw	r1, #19900	; 0x4dbc
   21b78:	movt	r1, #5
   21b7c:	mov	r0, r4
   21b80:	strd	r8, [sp]
   21b84:	str	ip, [sp, #8]
   21b88:	ldr	r3, [sp, #72]	; 0x48
   21b8c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21b90:	b	21530 <__flatcc_fb_gen_c_verifier@@Base+0x2bf4>
   21b94:	ldr	r3, [sp, #60]	; 0x3c
   21b98:	ands	r3, r5, r3
   21b9c:	str	r3, [sp, #64]	; 0x40
   21ba0:	ldr	r3, [sp, #544]	; 0x220
   21ba4:	str	r3, [sp, #32]
   21ba8:	str	r3, [sp, #68]	; 0x44
   21bac:	str	r3, [sp, #72]	; 0x48
   21bb0:	beq	21308 <__flatcc_fb_gen_c_verifier@@Base+0x29cc>
   21bb4:	mov	r5, r3
   21bb8:	ldr	r3, [sp, #16]
   21bbc:	cmp	r3, #1
   21bc0:	bne	21314 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   21bc4:	movw	r1, #18088	; 0x46a8
   21bc8:	movt	r1, #5
   21bcc:	mov	r0, r4
   21bd0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21bd4:	ldr	r3, [r4, #220]	; 0xdc
   21bd8:	add	r3, r3, #1
   21bdc:	str	r3, [r4, #220]	; 0xdc
   21be0:	b	21314 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   21be4:	mov	r0, r4
   21be8:	movw	r1, #20232	; 0x4f08
   21bec:	movt	r1, #5
   21bf0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21bf4:	movw	r1, #20256	; 0x4f20
   21bf8:	movt	r1, #5
   21bfc:	mov	r0, r4
   21c00:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21c04:	ldr	r3, [r4, #220]	; 0xdc
   21c08:	cmp	r3, #0
   21c0c:	beq	21fa8 <__flatcc_fb_gen_c_verifier@@Base+0x366c>
   21c10:	sub	r3, r3, #1
   21c14:	movw	r1, #20304	; 0x4f50
   21c18:	movt	r1, #5
   21c1c:	mov	r0, r4
   21c20:	str	r3, [r4, #220]	; 0xdc
   21c24:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21c28:	mov	r0, r4
   21c2c:	movw	r1, #20324	; 0x4f64
   21c30:	movt	r1, #5
   21c34:	ldrd	r2, [r7, #96]	; 0x60
   21c38:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21c3c:	mov	r0, r4
   21c40:	movw	r1, #20156	; 0x4ebc
   21c44:	movt	r1, #5
   21c48:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21c4c:	b	217fc <__flatcc_fb_gen_c_verifier@@Base+0x2ec0>
   21c50:	mov	sl, #0
   21c54:	mov	r5, sl
   21c58:	ldr	r1, [r7, #16]
   21c5c:	add	r2, sp, #284	; 0x11c
   21c60:	ldr	r0, [r1, #12]
   21c64:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   21c68:	ldr	r1, [r7, #16]
   21c6c:	ldrh	r3, [r1, #8]
   21c70:	sub	r0, r3, #3
   21c74:	sub	r2, r3, #4
   21c78:	clz	r0, r0
   21c7c:	clz	r2, r2
   21c80:	lsr	r0, r0, #5
   21c84:	sub	fp, r3, #1
   21c88:	lsr	r2, r2, #5
   21c8c:	clz	fp, fp
   21c90:	lsr	fp, fp, #5
   21c94:	str	r0, [sp, #52]	; 0x34
   21c98:	ldr	r0, [sp, #544]	; 0x220
   21c9c:	cmp	r0, #0
   21ca0:	clz	r0, r3
   21ca4:	lsr	r0, r0, #5
   21ca8:	movne	r2, #0
   21cac:	cmp	r2, #0
   21cb0:	str	r0, [sp, #28]
   21cb4:	bne	21e48 <__flatcc_fb_gen_c_verifier@@Base+0x350c>
   21cb8:	cmp	r3, #3
   21cbc:	beq	21de8 <__flatcc_fb_gen_c_verifier@@Base+0x34ac>
   21cc0:	mov	r9, r2
   21cc4:	mvn	r8, #0
   21cc8:	str	r2, [sp, #48]	; 0x30
   21ccc:	mov	r6, r2
   21cd0:	mov	r3, r2
   21cd4:	str	r2, [sp, #52]	; 0x34
   21cd8:	str	r2, [sp, #60]	; 0x3c
   21cdc:	str	r3, [sp, #76]	; 0x4c
   21ce0:	mov	r3, #0
   21ce4:	str	r3, [sp, #16]
   21ce8:	b	212d4 <__flatcc_fb_gen_c_verifier@@Base+0x2998>
   21cec:	mov	sl, #0
   21cf0:	mov	r3, #1
   21cf4:	mvn	r8, #0
   21cf8:	mov	r5, sl
   21cfc:	mov	r9, sl
   21d00:	mov	fp, sl
   21d04:	str	sl, [sp, #28]
   21d08:	mov	r6, sl
   21d0c:	str	r3, [sp, #48]	; 0x30
   21d10:	str	sl, [sp, #52]	; 0x34
   21d14:	str	sl, [sp, #60]	; 0x3c
   21d18:	b	21cdc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   21d1c:	mov	r5, #0
   21d20:	ldrh	r8, [r7, #72]	; 0x48
   21d24:	ldr	r3, [r7, #104]	; 0x68
   21d28:	ldr	r9, [r7, #16]
   21d2c:	and	r2, r8, #1024	; 0x400
   21d30:	adds	r3, r3, #0
   21d34:	str	r2, [sp, #68]	; 0x44
   21d38:	movne	r3, #1
   21d3c:	mov	sl, r9
   21d40:	str	r3, [sp, #16]
   21d44:	ands	r3, r8, #3072	; 0xc00
   21d48:	str	r3, [sp, #32]
   21d4c:	beq	212ac <__flatcc_fb_gen_c_verifier@@Base+0x2970>
   21d50:	eor	r6, r5, #1
   21d54:	cmp	r9, #4
   21d58:	orrne	r6, r6, #1
   21d5c:	cmp	r6, #0
   21d60:	moveq	r8, #3
   21d64:	moveq	r9, #4
   21d68:	streq	r3, [sp, #76]	; 0x4c
   21d6c:	bne	21f5c <__flatcc_fb_gen_c_verifier@@Base+0x3620>
   21d70:	ldr	r3, [sp, #544]	; 0x220
   21d74:	cmp	r3, #0
   21d78:	bne	21f30 <__flatcc_fb_gen_c_verifier@@Base+0x35f4>
   21d7c:	mov	fp, r3
   21d80:	mov	r5, r3
   21d84:	str	r3, [sp, #16]
   21d88:	str	r3, [sp, #28]
   21d8c:	str	r3, [sp, #48]	; 0x30
   21d90:	str	r3, [sp, #52]	; 0x34
   21d94:	str	r3, [sp, #60]	; 0x3c
   21d98:	str	r3, [sp, #64]	; 0x40
   21d9c:	str	r3, [sp, #72]	; 0x48
   21da0:	b	21314 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   21da4:	mov	sl, #1
   21da8:	mov	r5, sl
   21dac:	b	21c58 <__flatcc_fb_gen_c_verifier@@Base+0x331c>
   21db0:	mov	r5, #1
   21db4:	b	21d20 <__flatcc_fb_gen_c_verifier@@Base+0x33e4>
   21db8:	mov	r9, #0
   21dbc:	mov	sl, #1
   21dc0:	mov	r5, sl
   21dc4:	mov	fp, r9
   21dc8:	mov	r6, r9
   21dcc:	mvn	r8, #0
   21dd0:	str	r9, [sp, #28]
   21dd4:	mov	r3, sl
   21dd8:	str	sl, [sp, #48]	; 0x30
   21ddc:	str	r9, [sp, #52]	; 0x34
   21de0:	str	r9, [sp, #60]	; 0x3c
   21de4:	b	21cdc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   21de8:	ldr	r9, [r1, #40]	; 0x28
   21dec:	mov	r6, #1
   21df0:	mov	r3, r2
   21df4:	str	r2, [sp, #48]	; 0x30
   21df8:	str	r6, [sp, #52]	; 0x34
   21dfc:	str	r2, [sp, #60]	; 0x3c
   21e00:	sub	r8, r9, #1
   21e04:	b	21cdc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   21e08:	mov	sl, #0
   21e0c:	mov	r5, sl
   21e10:	mov	r6, #0
   21e14:	mvn	r8, #0
   21e18:	mov	fp, r6
   21e1c:	mov	r9, r6
   21e20:	str	r6, [sp, #16]
   21e24:	str	r6, [sp, #28]
   21e28:	str	r6, [sp, #48]	; 0x30
   21e2c:	str	r6, [sp, #52]	; 0x34
   21e30:	str	r6, [sp, #60]	; 0x3c
   21e34:	str	r6, [sp, #76]	; 0x4c
   21e38:	b	212d4 <__flatcc_fb_gen_c_verifier@@Base+0x2998>
   21e3c:	mov	sl, #1
   21e40:	mov	r5, sl
   21e44:	b	21e10 <__flatcc_fb_gen_c_verifier@@Base+0x34d4>
   21e48:	mov	r9, #0
   21e4c:	mov	r3, #1
   21e50:	mvn	r8, #0
   21e54:	mov	r6, r9
   21e58:	str	r9, [sp, #48]	; 0x30
   21e5c:	str	r3, [sp, #60]	; 0x3c
   21e60:	mov	r3, r9
   21e64:	b	21cdc <__flatcc_fb_gen_c_verifier@@Base+0x33a0>
   21e68:	mov	r3, #0
   21e6c:	str	r3, [r4, #220]	; 0xdc
   21e70:	movw	r1, #15648	; 0x3d20
   21e74:	movt	r1, #5
   21e78:	ldr	r3, [pc, #584]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21e7c:	movw	r0, #15736	; 0x3d78
   21e80:	movt	r0, #5
   21e84:	movw	r2, #539	; 0x21b
   21e88:	bl	14120 <__assert_fail@plt>
   21e8c:	movw	r1, #4956	; 0x135c
   21e90:	movt	r1, #4
   21e94:	movw	r3, #49320	; 0xc0a8
   21e98:	movt	r3, #6
   21e9c:	movw	r2, #4868	; 0x1304
   21ea0:	movt	r2, #4
   21ea4:	str	r1, [sp]
   21ea8:	movw	r1, #4944	; 0x1350
   21eac:	movt	r1, #4
   21eb0:	ldr	r0, [r3]
   21eb4:	mov	r3, #96	; 0x60
   21eb8:	bl	1406c <fprintf@plt>
   21ebc:	ldr	r3, [sp, #36]	; 0x24
   21ec0:	movw	r1, #4868	; 0x1304
   21ec4:	movt	r1, #4
   21ec8:	movw	r0, #41608	; 0xa288
   21ecc:	movt	r0, #4
   21ed0:	mov	r2, #96	; 0x60
   21ed4:	add	r3, r3, #244	; 0xf4
   21ed8:	bl	14120 <__assert_fail@plt>
   21edc:	movw	r1, #15648	; 0x3d20
   21ee0:	movt	r1, #5
   21ee4:	ldr	r3, [pc, #476]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21ee8:	movw	r0, #15736	; 0x3d78
   21eec:	movt	r0, #5
   21ef0:	movw	r2, #559	; 0x22f
   21ef4:	bl	14120 <__assert_fail@plt>
   21ef8:	movw	r1, #15648	; 0x3d20
   21efc:	movt	r1, #5
   21f00:	ldr	r3, [pc, #448]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21f04:	movw	r0, #15736	; 0x3d78
   21f08:	movt	r0, #5
   21f0c:	movw	r2, #602	; 0x25a
   21f10:	bl	14120 <__assert_fail@plt>
   21f14:	movw	r1, #15648	; 0x3d20
   21f18:	movt	r1, #5
   21f1c:	ldr	r3, [pc, #420]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21f20:	movw	r0, #15736	; 0x3d78
   21f24:	movt	r0, #5
   21f28:	movw	r2, #490	; 0x1ea
   21f2c:	bl	14120 <__assert_fail@plt>
   21f30:	mov	r6, #0
   21f34:	mov	fp, r6
   21f38:	mov	r5, r6
   21f3c:	str	r6, [sp, #16]
   21f40:	str	r6, [sp, #28]
   21f44:	str	r6, [sp, #48]	; 0x30
   21f48:	str	r6, [sp, #52]	; 0x34
   21f4c:	str	r6, [sp, #60]	; 0x3c
   21f50:	str	r6, [sp, #64]	; 0x40
   21f54:	str	r6, [sp, #72]	; 0x48
   21f58:	b	21314 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   21f5c:	movw	r1, #18028	; 0x466c
   21f60:	movt	r1, #5
   21f64:	movw	r3, #49320	; 0xc0a8
   21f68:	movt	r3, #6
   21f6c:	movw	r2, #15648	; 0x3d20
   21f70:	movt	r2, #5
   21f74:	str	r1, [sp]
   21f78:	movw	r1, #4944	; 0x1350
   21f7c:	movt	r1, #4
   21f80:	ldr	r0, [r3]
   21f84:	movw	r3, #466	; 0x1d2
   21f88:	bl	1406c <fprintf@plt>
   21f8c:	movw	r1, #15648	; 0x3d20
   21f90:	movt	r1, #5
   21f94:	ldr	r3, [pc, #300]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21f98:	movw	r0, #41608	; 0xa288
   21f9c:	movt	r0, #4
   21fa0:	movw	r2, #466	; 0x1d2
   21fa4:	bl	14120 <__assert_fail@plt>
   21fa8:	movw	r1, #15648	; 0x3d20
   21fac:	movt	r1, #5
   21fb0:	ldr	r3, [pc, #272]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21fb4:	movw	r0, #15736	; 0x3d78
   21fb8:	movt	r0, #5
   21fbc:	movw	r2, #661	; 0x295
   21fc0:	bl	14120 <__assert_fail@plt>
   21fc4:	ldr	r3, [sp, #60]	; 0x3c
   21fc8:	str	r3, [r4, #220]	; 0xdc
   21fcc:	movw	r1, #15648	; 0x3d20
   21fd0:	movt	r1, #5
   21fd4:	ldr	r3, [pc, #236]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   21fd8:	movw	r0, #15736	; 0x3d78
   21fdc:	movt	r0, #5
   21fe0:	movw	r2, #627	; 0x273
   21fe4:	bl	14120 <__assert_fail@plt>
   21fe8:	mov	r6, sl
   21fec:	str	sl, [sp, #32]
   21ff0:	str	sl, [sp, #64]	; 0x40
   21ff4:	str	sl, [sp, #68]	; 0x44
   21ff8:	str	sl, [sp, #72]	; 0x48
   21ffc:	b	21308 <__flatcc_fb_gen_c_verifier@@Base+0x29cc>
   22000:	ldr	r1, [sp, #36]	; 0x24
   22004:	mov	r3, r9
   22008:	mov	r2, r8
   2200c:	mov	r9, #0
   22010:	mvn	r8, #0
   22014:	mov	r0, r4
   22018:	str	r1, [sp]
   2201c:	movw	r1, #20504	; 0x5018
   22020:	movt	r1, #5
   22024:	strd	r8, [sp, #8]
   22028:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2202c:	mov	r0, r4
   22030:	movw	r1, #18296	; 0x4778
   22034:	movt	r1, #5
   22038:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2203c:	movw	r1, #18356	; 0x47b4
   22040:	movt	r1, #5
   22044:	mov	r0, r4
   22048:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2204c:	ldr	r3, [r4, #220]	; 0xdc
   22050:	add	r3, r3, #1
   22054:	str	r3, [r4, #220]	; 0xdc
   22058:	b	21494 <__flatcc_fb_gen_c_verifier@@Base+0x2b58>
   2205c:	ldr	r9, [r7, #16]
   22060:	mov	r3, #0
   22064:	mov	r6, #1
   22068:	str	r3, [sp, #32]
   2206c:	str	r3, [sp, #68]	; 0x44
   22070:	str	r3, [sp, #76]	; 0x4c
   22074:	sub	r8, r9, #1
   22078:	b	21d70 <__flatcc_fb_gen_c_verifier@@Base+0x3434>
   2207c:	movw	r1, #19212	; 0x4b0c
   22080:	movt	r1, #5
   22084:	movw	r3, #49320	; 0xc0a8
   22088:	movt	r3, #6
   2208c:	movw	r2, #15648	; 0x3d20
   22090:	movt	r2, #5
   22094:	str	r1, [sp]
   22098:	movw	r1, #4944	; 0x1350
   2209c:	movt	r1, #4
   220a0:	ldr	r0, [r3]
   220a4:	movw	r3, #590	; 0x24e
   220a8:	bl	1406c <fprintf@plt>
   220ac:	movw	r1, #15648	; 0x3d20
   220b0:	movt	r1, #5
   220b4:	ldr	r3, [pc, #12]	; 220c8 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   220b8:	movw	r0, #41608	; 0xa288
   220bc:	movt	r0, #4
   220c0:	movw	r2, #590	; 0x24e
   220c4:	bl	14120 <__assert_fail@plt>
   220c8:	andeq	r3, r5, r8, lsr #22
   220cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   220d0:	mov	r4, r0
   220d4:	mov	r5, r1
   220d8:	strd	r6, [sp, #8]
   220dc:	movw	r1, #20588	; 0x506c
   220e0:	movt	r1, #5
   220e4:	str	lr, [sp, #16]
   220e8:	sub	sp, sp, #12
   220ec:	mov	r7, r2
   220f0:	ldr	r2, [sp, #32]
   220f4:	mov	r6, r3
   220f8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   220fc:	mov	r0, r4
   22100:	movw	r1, #20656	; 0x50b0
   22104:	movt	r1, #5
   22108:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2210c:	ldr	ip, [r4, #220]	; 0xdc
   22110:	mov	r3, r7
   22114:	add	r2, r5, #12
   22118:	add	r1, r5, #8
   2211c:	mov	r0, r4
   22120:	str	r6, [sp]
   22124:	add	ip, ip, #1
   22128:	str	ip, [r4, #220]	; 0xdc
   2212c:	bl	211b8 <__flatcc_fb_gen_c_verifier@@Base+0x287c>
   22130:	ldr	r3, [r4, #220]	; 0xdc
   22134:	cmp	r3, #0
   22138:	beq	22174 <__flatcc_fb_gen_c_verifier@@Base+0x3838>
   2213c:	sub	r3, r3, #1
   22140:	mov	r0, r4
   22144:	movw	r1, #17064	; 0x42a8
   22148:	movt	r1, #5
   2214c:	str	r3, [r4, #220]	; 0xdc
   22150:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22154:	ldr	r3, [r4, #220]	; 0xdc
   22158:	add	r3, r3, #1
   2215c:	str	r3, [r4, #220]	; 0xdc
   22160:	add	sp, sp, #12
   22164:	ldrd	r4, [sp]
   22168:	ldrd	r6, [sp, #8]
   2216c:	add	sp, sp, #16
   22170:	pop	{pc}		; (ldr pc, [sp], #4)
   22174:	movw	r1, #15648	; 0x3d20
   22178:	movt	r1, #5
   2217c:	ldr	r3, [pc, #12]	; 22190 <__flatcc_fb_gen_c_verifier@@Base+0x3854>
   22180:	movw	r0, #15736	; 0x3d78
   22184:	movt	r0, #5
   22188:	movw	r2, #675	; 0x2a3
   2218c:	bl	14120 <__assert_fail@plt>
   22190:	andeq	r3, r5, ip, lsr #23
   22194:	ldrh	r3, [r1, #8]
   22198:	cmp	r3, #4
   2219c:	bxhi	lr
   221a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   221a4:	strd	r6, [sp, #8]
   221a8:	mov	r7, r0
   221ac:	mov	r6, r1
   221b0:	ldr	r0, [r0, #40]	; 0x28
   221b4:	strd	r8, [sp, #16]
   221b8:	ldr	r1, [r1, #16]
   221bc:	str	sl, [sp, #24]
   221c0:	str	lr, [sp, #28]
   221c4:	add	r0, r0, #172	; 0xac
   221c8:	bl	287a4 <ptr_set_find_item@@Base>
   221cc:	cmp	r0, #0
   221d0:	beq	22280 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   221d4:	ldr	r3, [r7]
   221d8:	ldr	r9, [r7, #36]	; 0x24
   221dc:	cmp	r3, #0
   221e0:	moveq	r4, r9
   221e4:	beq	22224 <__flatcc_fb_gen_c_verifier@@Base+0x38e8>
   221e8:	ldr	r3, [r6, #12]
   221ec:	mov	r4, r9
   221f0:	ldr	r5, [r3]
   221f4:	cmp	r5, #0
   221f8:	beq	22224 <__flatcc_fb_gen_c_verifier@@Base+0x38e8>
   221fc:	mov	r8, #46	; 0x2e
   22200:	ldr	r3, [r5, #4]
   22204:	mov	r0, r4
   22208:	ldm	r3, {r1, r2}
   2220c:	add	r4, r4, r2
   22210:	bl	13fb8 <memcpy@plt>
   22214:	strb	r8, [r4], #1
   22218:	ldr	r5, [r5]
   2221c:	cmp	r5, #0
   22220:	bne	22200 <__flatcc_fb_gen_c_verifier@@Base+0x38c4>
   22224:	ldr	r3, [r6, #4]
   22228:	mov	r0, r4
   2222c:	ldm	r3, {r1, r5}
   22230:	mov	r2, r5
   22234:	bl	13fb8 <memcpy@plt>
   22238:	mov	r2, #0
   2223c:	add	r3, r4, r5
   22240:	add	r3, r3, #1
   22244:	strb	r2, [r4, r5]
   22248:	ldrh	r2, [r6, #8]
   2224c:	str	r3, [r7, #36]	; 0x24
   22250:	cmp	r2, #4
   22254:	ldrls	pc, [pc, r2, lsl #2]
   22258:	b	22280 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   2225c:	muleq	r2, r8, r2
   22260:	muleq	r2, r8, r2
   22264:	andeq	r2, r2, r0, lsl #5
   22268:	andeq	r2, r2, r0, ror r2
   2226c:	andeq	r2, r2, r0, ror r2
   22270:	ldr	r3, [r7, #32]
   22274:	add	r2, r3, #8
   22278:	stm	r3, {r6, r9}
   2227c:	str	r2, [r7, #32]
   22280:	ldrd	r4, [sp]
   22284:	ldrd	r6, [sp, #8]
   22288:	ldrd	r8, [sp, #16]
   2228c:	ldr	sl, [sp, #24]
   22290:	add	sp, sp, #28
   22294:	pop	{pc}		; (ldr pc, [sp], #4)
   22298:	ldr	r3, [r7, #28]
   2229c:	add	r2, r3, #8
   222a0:	stm	r3, {r6, r9}
   222a4:	str	r2, [r7, #28]
   222a8:	b	22280 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   222ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   222b0:	subs	r5, r0, #0
   222b4:	strd	r6, [sp, #8]
   222b8:	strd	r8, [sp, #16]
   222bc:	strd	sl, [sp, #24]
   222c0:	str	lr, [sp, #32]
   222c4:	sub	sp, sp, #4
   222c8:	beq	22450 <__flatcc_fb_gen_c_verifier@@Base+0x3b14>
   222cc:	mov	r0, #0
   222d0:	mov	r4, r5
   222d4:	mov	r7, r0
   222d8:	b	222ec <__flatcc_fb_gen_c_verifier@@Base+0x39b0>
   222dc:	mov	r7, r2
   222e0:	ldr	r4, [r4]
   222e4:	cmp	r4, #0
   222e8:	beq	22334 <__flatcc_fb_gen_c_verifier@@Base+0x39f8>
   222ec:	ldrh	r3, [r4, #72]	; 0x48
   222f0:	add	r2, r7, #1
   222f4:	tst	r3, #4
   222f8:	bne	222e0 <__flatcc_fb_gen_c_verifier@@Base+0x39a4>
   222fc:	ldrh	r3, [r4, #24]
   22300:	sub	r3, r3, #14
   22304:	cmp	r3, #1
   22308:	bhi	222dc <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   2230c:	ldr	r3, [r4, #16]
   22310:	ldrh	r3, [r3, #8]
   22314:	cmp	r3, #4
   22318:	bne	222dc <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   2231c:	ldr	r3, [r4, #4]
   22320:	add	r2, r7, #2
   22324:	ldr	r3, [r3, #4]
   22328:	add	r3, r3, #6
   2232c:	add	r0, r0, r3
   22330:	b	222dc <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   22334:	cmp	r7, #0
   22338:	str	r7, [r1]
   2233c:	beq	22448 <__flatcc_fb_gen_c_verifier@@Base+0x3b0c>
   22340:	lsl	r8, r7, #4
   22344:	add	r0, r0, r8
   22348:	bl	14018 <malloc@plt>
   2234c:	subs	r9, r0, #0
   22350:	beq	22448 <__flatcc_fb_gen_c_verifier@@Base+0x3b0c>
   22354:	movw	sl, #34764	; 0x87cc
   22358:	movt	sl, #5
   2235c:	add	r8, r9, r8
   22360:	mov	r6, r9
   22364:	mov	fp, #1
   22368:	b	2237c <__flatcc_fb_gen_c_verifier@@Base+0x3a40>
   2236c:	mov	r6, ip
   22370:	ldr	r5, [r5]
   22374:	cmp	r5, #0
   22378:	beq	22410 <__flatcc_fb_gen_c_verifier@@Base+0x3ad4>
   2237c:	ldrh	r3, [r5, #72]	; 0x48
   22380:	add	ip, r6, #16
   22384:	ands	r3, r3, #4
   22388:	bne	22370 <__flatcc_fb_gen_c_verifier@@Base+0x3a34>
   2238c:	ldr	r2, [r5, #4]
   22390:	ldrh	r0, [r5, #24]
   22394:	ldm	r2, {r1, r2}
   22398:	sub	r0, r0, #14
   2239c:	cmp	r0, #1
   223a0:	stm	r6, {r1, r2, r5}
   223a4:	str	r3, [r6, #12]
   223a8:	bhi	2236c <__flatcc_fb_gen_c_verifier@@Base+0x3a30>
   223ac:	ldr	r3, [r5, #16]
   223b0:	ldrh	r3, [r3, #8]
   223b4:	cmp	r3, #4
   223b8:	bne	2236c <__flatcc_fb_gen_c_verifier@@Base+0x3a30>
   223bc:	add	r3, r2, #5
   223c0:	mov	r0, r8
   223c4:	str	r4, [r5, #112]	; 0x70
   223c8:	str	r8, [r6, #16]
   223cc:	add	r4, r4, #1
   223d0:	add	r6, r6, #32
   223d4:	str	r3, [r6, #-12]
   223d8:	bl	13fb8 <memcpy@plt>
   223dc:	ldr	r2, [r5, #4]
   223e0:	ldrh	r3, [sl, #4]
   223e4:	ldr	r0, [sl]
   223e8:	ldr	r1, [r2, #4]
   223ec:	add	r2, r8, r1
   223f0:	str	r0, [r8, r1]
   223f4:	add	r8, r2, #6
   223f8:	strh	r3, [r2, #4]
   223fc:	str	r5, [r6, #-8]
   22400:	ldr	r5, [r5]
   22404:	str	fp, [r6, #-4]
   22408:	cmp	r5, #0
   2240c:	bne	2237c <__flatcc_fb_gen_c_verifier@@Base+0x3a40>
   22410:	movw	r3, #3052	; 0xbec
   22414:	movt	r3, #2
   22418:	mov	r1, r7
   2241c:	mov	r2, #16
   22420:	mov	r0, r9
   22424:	bl	140f0 <qsort@plt>
   22428:	mov	r0, r9
   2242c:	add	sp, sp, #4
   22430:	ldrd	r4, [sp]
   22434:	ldrd	r6, [sp, #8]
   22438:	ldrd	r8, [sp, #16]
   2243c:	ldrd	sl, [sp, #24]
   22440:	add	sp, sp, #32
   22444:	pop	{pc}		; (ldr pc, [sp], #4)
   22448:	mov	r9, #0
   2244c:	b	22428 <__flatcc_fb_gen_c_verifier@@Base+0x3aec>
   22450:	mov	r9, r5
   22454:	str	r5, [r1]
   22458:	b	22428 <__flatcc_fb_gen_c_verifier@@Base+0x3aec>
   2245c:	ldrh	r2, [r1, #8]
   22460:	mov	r3, #0
   22464:	strd	r4, [sp, #-12]!
   22468:	str	lr, [sp, #8]
   2246c:	sub	sp, sp, #268	; 0x10c
   22470:	str	r3, [sp, #12]
   22474:	sub	r2, r2, #3
   22478:	str	r3, [sp, #16]
   2247c:	cmp	r2, #1
   22480:	str	r3, [sp, #20]
   22484:	str	r3, [sp, #24]
   22488:	str	r3, [sp, #28]
   2248c:	str	r3, [sp, #32]
   22490:	str	r3, [sp, #36]	; 0x24
   22494:	str	r3, [sp, #40]	; 0x28
   22498:	bhi	2271c <__flatcc_fb_gen_c_verifier@@Base+0x3de0>
   2249c:	mov	r5, r1
   224a0:	mov	r4, r0
   224a4:	add	r1, sp, #12
   224a8:	ldr	r0, [r5, #20]
   224ac:	bl	222ac <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   224b0:	cmp	r0, #0
   224b4:	str	r0, [sp, #16]
   224b8:	beq	226a8 <__flatcc_fb_gen_c_verifier@@Base+0x3d6c>
   224bc:	movw	r2, #3908	; 0xf44
   224c0:	movt	r2, #2
   224c4:	str	r5, [sp, #28]
   224c8:	movw	r3, #60876	; 0xedcc
   224cc:	movt	r3, #1
   224d0:	mov	ip, #2
   224d4:	mov	r1, #0
   224d8:	add	r0, sp, #44	; 0x2c
   224dc:	strd	r2, [sp, #20]
   224e0:	mov	r2, #220	; 0xdc
   224e4:	str	ip, [sp, #32]
   224e8:	bl	14084 <memset@plt>
   224ec:	add	r2, sp, #44	; 0x2c
   224f0:	mov	r1, r5
   224f4:	ldr	r0, [r5, #12]
   224f8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   224fc:	add	r2, sp, #44	; 0x2c
   22500:	mov	r0, r4
   22504:	movw	r1, #20676	; 0x50c4
   22508:	movt	r1, #5
   2250c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22510:	ldr	r3, [r4, #220]	; 0xdc
   22514:	movw	r1, #20776	; 0x5128
   22518:	movt	r1, #5
   2251c:	mov	r0, r4
   22520:	add	r3, r3, #2
   22524:	str	r3, [r4, #220]	; 0xdc
   22528:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2252c:	ldr	r3, [r4, #220]	; 0xdc
   22530:	cmp	r3, #0
   22534:	beq	22700 <__flatcc_fb_gen_c_verifier@@Base+0x3dc4>
   22538:	cmp	r3, #1
   2253c:	moveq	r3, #0
   22540:	streq	r3, [r4, #220]	; 0xdc
   22544:	beq	22700 <__flatcc_fb_gen_c_verifier@@Base+0x3dc4>
   22548:	sub	r3, r3, #2
   2254c:	movw	r1, #27128	; 0x69f8
   22550:	movt	r1, #5
   22554:	mov	r0, r4
   22558:	str	r3, [r4, #220]	; 0xdc
   2255c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22560:	ldr	r3, [r4, #220]	; 0xdc
   22564:	ldr	r2, [sp, #12]
   22568:	add	r3, r3, #1
   2256c:	cmp	r2, #0
   22570:	str	r3, [r4, #220]	; 0xdc
   22574:	beq	22650 <__flatcc_fb_gen_c_verifier@@Base+0x3d14>
   22578:	mov	r0, r4
   2257c:	movw	r1, #17596	; 0x44bc
   22580:	movt	r1, #5
   22584:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22588:	mov	r0, r4
   2258c:	movw	r1, #17628	; 0x44dc
   22590:	movt	r1, #5
   22594:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22598:	mov	r0, r4
   2259c:	movw	r1, #17648	; 0x44f0
   225a0:	movt	r1, #5
   225a4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225a8:	mov	r0, r4
   225ac:	movw	r1, #45408	; 0xb160
   225b0:	movt	r1, #4
   225b4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225b8:	mov	r0, r4
   225bc:	movw	r1, #16000	; 0x3e80
   225c0:	movt	r1, #5
   225c4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225c8:	ldr	r3, [sp, #12]
   225cc:	mov	ip, #0
   225d0:	add	r1, sp, #16
   225d4:	mov	r2, ip
   225d8:	mov	r0, r4
   225dc:	str	ip, [sp]
   225e0:	sub	r3, r3, #1
   225e4:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   225e8:	movw	r1, #17148	; 0x42fc
   225ec:	movt	r1, #5
   225f0:	mov	r0, r4
   225f4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   225f8:	ldr	r3, [r4, #220]	; 0xdc
   225fc:	cmp	r3, #0
   22600:	beq	22738 <__flatcc_fb_gen_c_verifier@@Base+0x3dfc>
   22604:	sub	r3, r3, #1
   22608:	mov	r0, r4
   2260c:	movw	r1, #15748	; 0x3d84
   22610:	movt	r1, #5
   22614:	str	r3, [r4, #220]	; 0xdc
   22618:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2261c:	mov	r0, r4
   22620:	movw	r1, #45408	; 0xb160
   22624:	movt	r1, #4
   22628:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2262c:	ldr	r0, [sp, #16]
   22630:	cmp	r0, #0
   22634:	beq	2263c <__flatcc_fb_gen_c_verifier@@Base+0x3d00>
   22638:	bl	13fac <free@plt>
   2263c:	mov	r0, #0
   22640:	add	sp, sp, #268	; 0x10c
   22644:	ldrd	r4, [sp]
   22648:	add	sp, sp, #8
   2264c:	pop	{pc}		; (ldr pc, [sp], #4)
   22650:	mov	r0, r4
   22654:	movw	r1, #20828	; 0x515c
   22658:	movt	r1, #5
   2265c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22660:	mov	r0, r4
   22664:	movw	r1, #20856	; 0x5178
   22668:	movt	r1, #5
   2266c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22670:	movw	r1, #17564	; 0x449c
   22674:	movt	r1, #5
   22678:	mov	r0, r4
   2267c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22680:	ldr	r3, [r4, #220]	; 0xdc
   22684:	cmp	r3, #0
   22688:	bne	22604 <__flatcc_fb_gen_c_verifier@@Base+0x3cc8>
   2268c:	movw	r1, #15648	; 0x3d20
   22690:	movt	r1, #5
   22694:	ldr	r3, [pc, #184]	; 22754 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   22698:	movw	r0, #15736	; 0x3d78
   2269c:	movt	r0, #5
   226a0:	movw	r2, #1269	; 0x4f5
   226a4:	bl	14120 <__assert_fail@plt>
   226a8:	ldr	r3, [sp, #12]
   226ac:	cmp	r3, #0
   226b0:	ble	224bc <__flatcc_fb_gen_c_verifier@@Base+0x3b80>
   226b4:	movw	r1, #17400	; 0x43f8
   226b8:	movt	r1, #5
   226bc:	movw	r3, #49320	; 0xc0a8
   226c0:	movt	r3, #6
   226c4:	movw	r2, #15648	; 0x3d20
   226c8:	movt	r2, #5
   226cc:	str	r1, [sp]
   226d0:	movw	r1, #4944	; 0x1350
   226d4:	movt	r1, #4
   226d8:	ldr	r0, [r3]
   226dc:	movw	r3, #1249	; 0x4e1
   226e0:	bl	1406c <fprintf@plt>
   226e4:	movw	r1, #15648	; 0x3d20
   226e8:	movt	r1, #5
   226ec:	ldr	r3, [pc, #96]	; 22754 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   226f0:	movw	r0, #41608	; 0xa288
   226f4:	movt	r0, #4
   226f8:	movw	r2, #1249	; 0x4e1
   226fc:	bl	14120 <__assert_fail@plt>
   22700:	movw	r1, #15648	; 0x3d20
   22704:	movt	r1, #5
   22708:	ldr	r3, [pc, #68]	; 22754 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   2270c:	movw	r0, #15736	; 0x3d78
   22710:	movt	r0, #5
   22714:	movw	r2, #1263	; 0x4ef
   22718:	bl	14120 <__assert_fail@plt>
   2271c:	movw	r1, #15648	; 0x3d20
   22720:	movt	r1, #5
   22724:	ldr	r3, [pc, #40]	; 22754 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   22728:	movw	r0, #5032	; 0x13a8
   2272c:	movt	r0, #4
   22730:	movw	r2, #1246	; 0x4de
   22734:	bl	14120 <__assert_fail@plt>
   22738:	movw	r1, #15648	; 0x3d20
   2273c:	movt	r1, #5
   22740:	ldr	r3, [pc, #12]	; 22754 <__flatcc_fb_gen_c_verifier@@Base+0x3e18>
   22744:	movw	r0, #15736	; 0x3d78
   22748:	movt	r0, #5
   2274c:	movw	r2, #1278	; 0x4fe
   22750:	bl	14120 <__assert_fail@plt>
   22754:			; <UNDEFINED> instruction: 0x00053bbc
   22758:	movw	r1, #15536	; 0x3cb0
   2275c:	movt	r1, #5
   22760:	b	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22764:	ldrh	r3, [r1, #8]
   22768:	sub	r3, r3, #3
   2276c:	cmp	r3, #1
   22770:	bxhi	lr
   22774:	str	r4, [sp, #-8]!
   22778:	mov	r4, r0
   2277c:	ldr	r0, [r0, #4]
   22780:	ldr	r1, [r1, #16]
   22784:	str	lr, [sp, #4]
   22788:	add	r0, r0, #172	; 0xac
   2278c:	bl	287a4 <ptr_set_find_item@@Base>
   22790:	cmp	r0, #0
   22794:	beq	227a4 <__flatcc_fb_gen_c_verifier@@Base+0x3e68>
   22798:	ldr	r3, [r4]
   2279c:	add	r3, r3, #1
   227a0:	str	r3, [r4]
   227a4:	ldr	r4, [sp]
   227a8:	add	sp, sp, #4
   227ac:	pop	{pc}		; (ldr pc, [sp], #4)
   227b0:	ldrh	r3, [r1, #8]
   227b4:	sub	r3, r3, #3
   227b8:	cmp	r3, #1
   227bc:	bxhi	lr
   227c0:	strd	r4, [sp, #-16]!
   227c4:	mov	r5, r0
   227c8:	mov	r4, r1
   227cc:	ldr	r0, [r0, #4]
   227d0:	ldr	r1, [r1, #16]
   227d4:	str	r6, [sp, #8]
   227d8:	str	lr, [sp, #12]
   227dc:	add	r0, r0, #172	; 0xac
   227e0:	bl	287a4 <ptr_set_find_item@@Base>
   227e4:	cmp	r0, #0
   227e8:	beq	22808 <__flatcc_fb_gen_c_verifier@@Base+0x3ecc>
   227ec:	ldr	r2, [r4, #4]
   227f0:	ldr	r3, [r5, #8]
   227f4:	ldrd	r0, [r2]
   227f8:	add	r2, r3, #16
   227fc:	strd	r0, [r3]
   22800:	str	r4, [r3, #8]
   22804:	str	r2, [r5, #8]
   22808:	ldrd	r4, [sp]
   2280c:	ldr	r6, [sp, #8]
   22810:	add	sp, sp, #12
   22814:	pop	{pc}		; (ldr pc, [sp], #4)
   22818:	ldrh	r3, [r1, #8]
   2281c:	cmp	r3, #4
   22820:	bxhi	lr
   22824:	strd	r4, [sp, #-16]!
   22828:	mov	r4, r0
   2282c:	mov	r5, r1
   22830:	ldr	r0, [r0, #40]	; 0x28
   22834:	ldr	r1, [r1, #16]
   22838:	str	r6, [sp, #8]
   2283c:	str	lr, [sp, #12]
   22840:	add	r0, r0, #172	; 0xac
   22844:	bl	287a4 <ptr_set_find_item@@Base>
   22848:	cmp	r0, #0
   2284c:	beq	228d8 <__flatcc_fb_gen_c_verifier@@Base+0x3f9c>
   22850:	ldr	ip, [r4]
   22854:	cmp	ip, #0
   22858:	beq	2288c <__flatcc_fb_gen_c_verifier@@Base+0x3f50>
   2285c:	ldr	r3, [r5, #12]
   22860:	ldr	r3, [r3]
   22864:	cmp	r3, #0
   22868:	beq	22904 <__flatcc_fb_gen_c_verifier@@Base+0x3fc8>
   2286c:	mov	ip, #0
   22870:	ldr	r2, [r3, #4]
   22874:	ldr	r3, [r3]
   22878:	ldr	r2, [r2, #4]
   2287c:	cmp	r3, #0
   22880:	add	r2, r2, #1
   22884:	add	ip, ip, r2
   22888:	bne	22870 <__flatcc_fb_gen_c_verifier@@Base+0x3f34>
   2288c:	ldr	r3, [r5, #4]
   22890:	ldr	r1, [r4, #12]
   22894:	ldrh	r2, [r5, #8]
   22898:	ldr	r3, [r3, #4]
   2289c:	add	r3, r3, r1
   228a0:	add	r3, r3, #1
   228a4:	add	ip, r3, ip
   228a8:	str	ip, [r4, #12]
   228ac:	cmp	r2, #4
   228b0:	ldrls	pc, [pc, r2, lsl #2]
   228b4:	b	228d8 <__flatcc_fb_gen_c_verifier@@Base+0x3f9c>
   228b8:	andeq	r2, r2, r8, ror #17
   228bc:	andeq	r2, r2, r8, ror #17
   228c0:	ldrdeq	r2, [r2], -r8
   228c4:	andeq	r2, r2, ip, asr #17
   228c8:	andeq	r2, r2, ip, asr #17
   228cc:	ldr	r3, [r4, #8]
   228d0:	add	r3, r3, #1
   228d4:	str	r3, [r4, #8]
   228d8:	ldrd	r4, [sp]
   228dc:	ldr	r6, [sp, #8]
   228e0:	add	sp, sp, #12
   228e4:	pop	{pc}		; (ldr pc, [sp], #4)
   228e8:	ldr	r3, [r4, #4]
   228ec:	ldr	r6, [sp, #8]
   228f0:	add	r3, r3, #1
   228f4:	str	r3, [r4, #4]
   228f8:	ldrd	r4, [sp]
   228fc:	add	sp, sp, #12
   22900:	pop	{pc}		; (ldr pc, [sp], #4)
   22904:	mov	ip, r3
   22908:	b	2288c <__flatcc_fb_gen_c_verifier@@Base+0x3f50>

0002290c <__flatcc_fb_gen_c_json_parser@@Base>:
   2290c:	ldr	r3, [r0, #208]	; 0xd0
   22910:	movw	r1, #20872	; 0x5188
   22914:	movt	r1, #5
   22918:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2291c:	mov	r4, r0
   22920:	ldr	r2, [r3, #164]	; 0xa4
   22924:	strd	r6, [sp, #8]
   22928:	strd	r8, [sp, #16]
   2292c:	strd	sl, [sp, #24]
   22930:	str	lr, [sp, #32]
   22934:	sub	sp, sp, #276	; 0x114
   22938:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2293c:	ldr	r3, [r4, #208]	; 0xd0
   22940:	mov	r0, r4
   22944:	movw	r1, #20900	; 0x51a4
   22948:	movt	r1, #5
   2294c:	ldr	r2, [r3, #164]	; 0xa4
   22950:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22954:	mov	r0, r4
   22958:	movw	r1, #45408	; 0xb160
   2295c:	movt	r1, #4
   22960:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22964:	mov	r0, r4
   22968:	movw	r1, #20928	; 0x51c0
   2296c:	movt	r1, #5
   22970:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22974:	mov	r0, r4
   22978:	movw	r1, #45408	; 0xb160
   2297c:	movt	r1, #4
   22980:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22984:	mov	r0, r4
   22988:	movw	r1, #21008	; 0x5210
   2298c:	movt	r1, #5
   22990:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22994:	mov	r0, r4
   22998:	movw	r2, #21048	; 0x5238
   2299c:	movt	r2, #5
   229a0:	movw	r1, #3996	; 0xf9c
   229a4:	movt	r1, #4
   229a8:	bl	16018 <__flatcc_fb_gen_c_includes@@Base>
   229ac:	ldr	r3, [r4, #212]	; 0xd4
   229b0:	ldr	r3, [r3, #140]	; 0x8c
   229b4:	cmp	r3, #0
   229b8:	bne	23ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x15c4>
   229bc:	mov	r0, r4
   229c0:	movw	r1, #45408	; 0xb160
   229c4:	movt	r1, #4
   229c8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   229cc:	ldr	r6, [r4, #208]	; 0xd0
   229d0:	add	r0, sp, #52	; 0x34
   229d4:	mov	r2, #220	; 0xdc
   229d8:	mov	r1, #0
   229dc:	ldr	r5, [r6, #52]	; 0x34
   229e0:	bl	14084 <memset@plt>
   229e4:	cmp	r5, #0
   229e8:	beq	229f8 <__flatcc_fb_gen_c_json_parser@@Base+0xec>
   229ec:	ldrh	r3, [r5, #8]
   229f0:	cmp	r3, #1
   229f4:	bls	23f48 <__flatcc_fb_gen_c_json_parser@@Base+0x163c>
   229f8:	ldr	r5, [r6, #40]	; 0x28
   229fc:	cmp	r5, #0
   22a00:	beq	22acc <__flatcc_fb_gen_c_json_parser@@Base+0x1c0>
   22a04:	movw	r7, #20676	; 0x50c4
   22a08:	movt	r7, #5
   22a0c:	movw	r6, #16304	; 0x3fb0
   22a10:	movt	r6, #5
   22a14:	movw	r8, #22036	; 0x5614
   22a18:	movt	r8, #5
   22a1c:	ldrh	r3, [r5, #8]
   22a20:	cmp	r3, #4
   22a24:	ldrls	pc, [pc, r3, lsl #2]
   22a28:	b	22abc <__flatcc_fb_gen_c_json_parser@@Base+0x1b0>
   22a2c:	andeq	r2, r2, r4, asr ip
   22a30:	andeq	r2, r2, r4, lsr #23
   22a34:			; <UNDEFINED> instruction: 0x00022abc
   22a38:	andeq	r2, r2, r0, ror #23
   22a3c:	andeq	r2, r2, r0, asr #20
   22a40:	add	r2, sp, #52	; 0x34
   22a44:	mov	r1, r5
   22a48:	ldr	r0, [r5, #12]
   22a4c:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   22a50:	add	r2, sp, #52	; 0x34
   22a54:	mov	r0, r4
   22a58:	movw	r1, #21580	; 0x544c
   22a5c:	movt	r1, #5
   22a60:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a64:	add	r2, sp, #52	; 0x34
   22a68:	mov	r0, r4
   22a6c:	movw	r1, #21724	; 0x54dc
   22a70:	movt	r1, #5
   22a74:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a78:	add	r2, sp, #52	; 0x34
   22a7c:	mov	r1, r7
   22a80:	mov	r0, r4
   22a84:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22a88:	ldr	r3, [r4, #220]	; 0xdc
   22a8c:	mov	r1, r6
   22a90:	mov	r0, r4
   22a94:	add	r3, r3, #2
   22a98:	str	r3, [r4, #220]	; 0xdc
   22a9c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22aa0:	ldr	r3, [r4, #220]	; 0xdc
   22aa4:	cmp	r3, #0
   22aa8:	beq	24148 <__flatcc_fb_gen_c_json_parser@@Base+0x183c>
   22aac:	cmp	r3, #1
   22ab0:	beq	24140 <__flatcc_fb_gen_c_json_parser@@Base+0x1834>
   22ab4:	sub	r3, r3, #2
   22ab8:	str	r3, [r4, #220]	; 0xdc
   22abc:	ldr	r5, [r5]
   22ac0:	cmp	r5, #0
   22ac4:	bne	22a1c <__flatcc_fb_gen_c_json_parser@@Base+0x110>
   22ac8:	ldr	r6, [r4, #208]	; 0xd0
   22acc:	mov	r2, r4
   22ad0:	movw	r1, #1140	; 0x474
   22ad4:	movt	r1, #2
   22ad8:	ldr	r0, [r6, #60]	; 0x3c
   22adc:	bl	2ad08 <fb_scope_table_visit@@Base>
   22ae0:	ldr	r3, [r4, #208]	; 0xd0
   22ae4:	mov	r0, r4
   22ae8:	movw	r1, #22168	; 0x5698
   22aec:	movt	r1, #5
   22af0:	ldr	r2, [r3, #160]	; 0xa0
   22af4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22af8:	ldr	r3, [r4, #220]	; 0xdc
   22afc:	movw	r1, #16304	; 0x3fb0
   22b00:	movt	r1, #5
   22b04:	mov	r0, r4
   22b08:	add	r3, r3, #2
   22b0c:	str	r3, [r4, #220]	; 0xdc
   22b10:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22b14:	ldr	r3, [r4, #220]	; 0xdc
   22b18:	cmp	r3, #0
   22b1c:	beq	24198 <__flatcc_fb_gen_c_json_parser@@Base+0x188c>
   22b20:	cmp	r3, #1
   22b24:	moveq	r3, #0
   22b28:	streq	r3, [r4, #220]	; 0xdc
   22b2c:	beq	24198 <__flatcc_fb_gen_c_json_parser@@Base+0x188c>
   22b30:	sub	r3, r3, #2
   22b34:	movw	r1, #45408	; 0xb160
   22b38:	movt	r1, #4
   22b3c:	mov	r0, r4
   22b40:	str	r3, [r4, #220]	; 0xdc
   22b44:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22b48:	ldr	r3, [r4, #208]	; 0xd0
   22b4c:	ldr	r5, [r3, #40]	; 0x28
   22b50:	cmp	r5, #0
   22b54:	addeq	r6, sp, #24
   22b58:	beq	22cac <__flatcc_fb_gen_c_json_parser@@Base+0x3a0>
   22b5c:	movw	r3, #23204	; 0x5aa4
   22b60:	movt	r3, #5
   22b64:	movw	r7, #27128	; 0x69f8
   22b68:	movt	r7, #5
   22b6c:	movw	r9, #22404	; 0x5784
   22b70:	movt	r9, #5
   22b74:	add	r6, sp, #24
   22b78:	str	r9, [sp, #8]
   22b7c:	str	r3, [sp, #12]
   22b80:	ldrh	r3, [r5, #8]
   22b84:	cmp	r3, #4
   22b88:	ldrls	pc, [pc, r3, lsl #2]
   22b8c:	b	22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   22b90:	andeq	r3, r2, r4, ror r6
   22b94:	andeq	r3, r2, r8, ror #4
   22b98:	muleq	r2, ip, ip
   22b9c:	andeq	r3, r2, r4, ror #12
   22ba0:	andeq	r2, r2, r8, ror ip
   22ba4:	add	r2, sp, #52	; 0x34
   22ba8:	mov	r1, r5
   22bac:	ldr	r0, [r5, #12]
   22bb0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   22bb4:	add	r2, sp, #52	; 0x34
   22bb8:	mov	r0, r4
   22bbc:	movw	r1, #21776	; 0x5510
   22bc0:	movt	r1, #5
   22bc4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22bc8:	add	r2, sp, #52	; 0x34
   22bcc:	movw	r1, #21904	; 0x5590
   22bd0:	movt	r1, #5
   22bd4:	mov	r0, r4
   22bd8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22bdc:	b	22abc <__flatcc_fb_gen_c_json_parser@@Base+0x1b0>
   22be0:	add	r2, sp, #52	; 0x34
   22be4:	mov	r1, r5
   22be8:	ldr	r0, [r5, #12]
   22bec:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   22bf0:	add	r2, sp, #52	; 0x34
   22bf4:	mov	r1, r7
   22bf8:	mov	r0, r4
   22bfc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22c00:	ldr	r3, [r4, #220]	; 0xdc
   22c04:	add	r2, sp, #52	; 0x34
   22c08:	mov	r1, r6
   22c0c:	mov	r0, r4
   22c10:	add	r3, r3, #2
   22c14:	str	r3, [r4, #220]	; 0xdc
   22c18:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22c1c:	ldr	r3, [r4, #220]	; 0xdc
   22c20:	cmp	r3, #0
   22c24:	beq	22c38 <__flatcc_fb_gen_c_json_parser@@Base+0x32c>
   22c28:	cmp	r3, #1
   22c2c:	bne	22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8>
   22c30:	mov	r3, #0
   22c34:	str	r3, [r4, #220]	; 0xdc
   22c38:	movw	r1, #15648	; 0x3d20
   22c3c:	movt	r1, #5
   22c40:	ldr	r3, [pc, #4060]	; 23c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   22c44:	movw	r0, #15736	; 0x3d78
   22c48:	movt	r0, #5
   22c4c:	movw	r2, #1747	; 0x6d3
   22c50:	bl	14120 <__assert_fail@plt>
   22c54:	add	r2, sp, #52	; 0x34
   22c58:	mov	r1, r5
   22c5c:	ldr	r0, [r5, #12]
   22c60:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   22c64:	add	r2, sp, #52	; 0x34
   22c68:	mov	r1, r8
   22c6c:	mov	r0, r4
   22c70:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22c74:	b	22abc <__flatcc_fb_gen_c_json_parser@@Base+0x1b0>
   22c78:	mov	r1, r5
   22c7c:	mov	r0, r4
   22c80:	bl	204cc <__flatcc_fb_gen_c_verifier@@Base+0x1b90>
   22c84:	mov	r1, r5
   22c88:	mov	r0, r4
   22c8c:	bl	20a04 <__flatcc_fb_gen_c_verifier@@Base+0x20c8>
   22c90:	mov	r1, r5
   22c94:	mov	r0, r4
   22c98:	bl	2245c <__flatcc_fb_gen_c_verifier@@Base+0x3b20>
   22c9c:	ldr	r5, [r5]
   22ca0:	cmp	r5, #0
   22ca4:	bne	22b80 <__flatcc_fb_gen_c_json_parser@@Base+0x274>
   22ca8:	ldr	r3, [r4, #208]	; 0xd0
   22cac:	mov	r2, r4
   22cb0:	movw	r1, #3112	; 0xc28
   22cb4:	movt	r1, #2
   22cb8:	ldr	r0, [r3, #60]	; 0x3c
   22cbc:	bl	2ad08 <fb_scope_table_visit@@Base>
   22cc0:	ldr	r0, [r4, #208]	; 0xd0
   22cc4:	mov	r3, #0
   22cc8:	mov	ip, #1
   22ccc:	add	r2, sp, #52	; 0x34
   22cd0:	movw	r1, #3028	; 0xbd4
   22cd4:	movt	r1, #2
   22cd8:	str	r3, [sp, #24]
   22cdc:	str	r3, [r6, #4]
   22ce0:	str	r3, [r6, #8]
   22ce4:	str	r3, [r6, #12]
   22ce8:	str	r3, [r6, #16]
   22cec:	str	r3, [r6, #20]
   22cf0:	str	r3, [r6, #24]
   22cf4:	ldr	r9, [r0, #60]	; 0x3c
   22cf8:	str	ip, [sp, #52]	; 0x34
   22cfc:	str	r0, [sp, #92]	; 0x5c
   22d00:	str	r3, [sp, #56]	; 0x38
   22d04:	str	r3, [sp, #60]	; 0x3c
   22d08:	mov	r0, r9
   22d0c:	str	r3, [sp, #64]	; 0x40
   22d10:	str	r3, [sp, #68]	; 0x44
   22d14:	str	r3, [sp, #72]	; 0x48
   22d18:	str	r3, [sp, #76]	; 0x4c
   22d1c:	str	r3, [sp, #80]	; 0x50
   22d20:	str	r3, [sp, #84]	; 0x54
   22d24:	str	r3, [sp, #88]	; 0x58
   22d28:	bl	2ad08 <fb_scope_table_visit@@Base>
   22d2c:	ldr	r7, [sp, #56]	; 0x38
   22d30:	mov	r1, #8
   22d34:	mov	r0, r7
   22d38:	bl	13f7c <calloc@plt>
   22d3c:	ldr	r3, [sp, #60]	; 0x3c
   22d40:	mov	fp, r0
   22d44:	mov	r1, #8
   22d48:	mov	r0, r3
   22d4c:	str	r3, [sp, #8]
   22d50:	str	fp, [sp, #68]	; 0x44
   22d54:	bl	13f7c <calloc@plt>
   22d58:	ldr	r8, [sp, #64]	; 0x40
   22d5c:	mov	sl, r0
   22d60:	str	sl, [sp, #72]	; 0x48
   22d64:	mov	r0, r8
   22d68:	bl	14018 <malloc@plt>
   22d6c:	cmp	r7, #0
   22d70:	mov	r3, r0
   22d74:	str	r0, [sp, #76]	; 0x4c
   22d78:	movle	r5, #0
   22d7c:	movgt	r5, #1
   22d80:	str	fp, [sp, #80]	; 0x50
   22d84:	cmp	fp, #0
   22d88:	str	sl, [sp, #84]	; 0x54
   22d8c:	movne	r5, #0
   22d90:	str	r0, [sp, #88]	; 0x58
   22d94:	cmp	r5, #0
   22d98:	bne	24118 <__flatcc_fb_gen_c_json_parser@@Base+0x180c>
   22d9c:	ldr	r7, [sp, #8]
   22da0:	cmp	r7, #0
   22da4:	movle	r7, #0
   22da8:	movgt	r7, #1
   22dac:	cmp	sl, #0
   22db0:	movne	r7, #0
   22db4:	cmp	r7, #0
   22db8:	bne	24164 <__flatcc_fb_gen_c_json_parser@@Base+0x1858>
   22dbc:	adds	r8, r8, #0
   22dc0:	movne	r8, #1
   22dc4:	cmp	r0, #0
   22dc8:	movne	r8, #0
   22dcc:	cmp	r8, #0
   22dd0:	bne	24100 <__flatcc_fb_gen_c_json_parser@@Base+0x17f4>
   22dd4:	mov	r0, r9
   22dd8:	add	r2, sp, #52	; 0x34
   22ddc:	movw	r1, #3004	; 0xbbc
   22de0:	movt	r1, #2
   22de4:	bl	2ad08 <fb_scope_table_visit@@Base>
   22de8:	ldr	r5, [sp, #56]	; 0x38
   22dec:	movw	r3, #3896	; 0xf38
   22df0:	movt	r3, #2
   22df4:	mov	r2, #8
   22df8:	ldr	r7, [sp, #68]	; 0x44
   22dfc:	mov	r1, r5
   22e00:	mov	r0, r7
   22e04:	bl	140f0 <qsort@plt>
   22e08:	cmp	r5, #0
   22e0c:	movgt	r0, r8
   22e10:	ble	22e28 <__flatcc_fb_gen_c_json_parser@@Base+0x51c>
   22e14:	ldr	r3, [r7, r0, lsl #3]
   22e18:	str	r0, [r3, #124]	; 0x7c
   22e1c:	add	r0, r0, #1
   22e20:	cmp	r5, r0
   22e24:	bne	22e14 <__flatcc_fb_gen_c_json_parser@@Base+0x508>
   22e28:	ldr	r5, [sp, #60]	; 0x3c
   22e2c:	movw	r3, #3896	; 0xf38
   22e30:	movt	r3, #2
   22e34:	mov	r2, #8
   22e38:	ldr	r7, [sp, #72]	; 0x48
   22e3c:	mov	r1, r5
   22e40:	mov	r0, r7
   22e44:	bl	140f0 <qsort@plt>
   22e48:	cmp	r5, #0
   22e4c:	movgt	r3, #0
   22e50:	ble	22e68 <__flatcc_fb_gen_c_json_parser@@Base+0x55c>
   22e54:	ldr	r2, [r7, r3, lsl #3]
   22e58:	str	r3, [r2, #124]	; 0x7c
   22e5c:	add	r3, r3, #1
   22e60:	cmp	r5, r3
   22e64:	bne	22e54 <__flatcc_fb_gen_c_json_parser@@Base+0x548>
   22e68:	ldr	r8, [sp, #60]	; 0x3c
   22e6c:	cmp	r8, #0
   22e70:	beq	23f08 <__flatcc_fb_gen_c_json_parser@@Base+0x15fc>
   22e74:	lsl	r0, r8, #4
   22e78:	bl	14018 <malloc@plt>
   22e7c:	subs	r9, r0, #0
   22e80:	beq	24048 <__flatcc_fb_gen_c_json_parser@@Base+0x173c>
   22e84:	cmp	r8, #0
   22e88:	ble	22edc <__flatcc_fb_gen_c_json_parser@@Base+0x5d0>
   22e8c:	ldr	sl, [sp, #72]	; 0x48
   22e90:	mov	r7, #0
   22e94:	mov	r5, r9
   22e98:	mov	fp, r7
   22e9c:	add	r3, sl, #4
   22ea0:	str	r3, [sp, #8]
   22ea4:	mov	r3, r8
   22ea8:	mov	r8, sl
   22eac:	mov	sl, r3
   22eb0:	ldr	r3, [sp, #8]
   22eb4:	ldr	r0, [r3, r7, lsl #3]
   22eb8:	str	r0, [r5]
   22ebc:	bl	14054 <strlen@plt>
   22ec0:	ldr	r3, [r8, r7, lsl #3]
   22ec4:	add	r7, r7, #1
   22ec8:	cmp	sl, r7
   22ecc:	stmib	r5, {r0, r3, fp}
   22ed0:	add	r5, r5, #16
   22ed4:	bne	22eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x5a4>
   22ed8:	mov	r8, sl
   22edc:	mov	r1, r8
   22ee0:	movw	r3, #3052	; 0xbec
   22ee4:	movt	r3, #2
   22ee8:	mov	r2, #16
   22eec:	mov	r0, r9
   22ef0:	bl	140f0 <qsort@plt>
   22ef4:	ldr	r8, [sp, #60]	; 0x3c
   22ef8:	str	r9, [sp, #24]
   22efc:	ldr	lr, [r4, #208]	; 0xd0
   22f00:	movw	r2, #4276	; 0x10b4
   22f04:	movt	r2, #2
   22f08:	movw	r3, #10072	; 0x2758
   22f0c:	movt	r3, #2
   22f10:	mov	ip, #4
   22f14:	mov	r5, #0
   22f18:	mov	r0, r4
   22f1c:	movw	r1, #22168	; 0x5698
   22f20:	movt	r1, #5
   22f24:	strd	r2, [sp, #28]
   22f28:	ldr	r2, [lr, #160]	; 0xa0
   22f2c:	str	r5, [sp, #36]	; 0x24
   22f30:	str	ip, [sp, #40]	; 0x28
   22f34:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f38:	ldr	r3, [r4, #220]	; 0xdc
   22f3c:	movw	r1, #17460	; 0x4434
   22f40:	movt	r1, #5
   22f44:	mov	r0, r4
   22f48:	add	r3, r3, #2
   22f4c:	str	r3, [r4, #220]	; 0xdc
   22f50:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f54:	ldr	r3, [r4, #220]	; 0xdc
   22f58:	cmp	r3, r5
   22f5c:	beq	2417c <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
   22f60:	cmp	r3, #1
   22f64:	streq	r5, [r4, #220]	; 0xdc
   22f68:	beq	2417c <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
   22f6c:	sub	r3, r3, #2
   22f70:	movw	r1, #27128	; 0x69f8
   22f74:	movt	r1, #5
   22f78:	mov	r0, r4
   22f7c:	str	r3, [r4, #220]	; 0xdc
   22f80:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22f84:	ldr	r3, [r4, #220]	; 0xdc
   22f88:	cmp	r8, #0
   22f8c:	add	r3, r3, #1
   22f90:	str	r3, [r4, #220]	; 0xdc
   22f94:	beq	23c44 <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   22f98:	mov	r0, r4
   22f9c:	movw	r1, #17596	; 0x44bc
   22fa0:	movt	r1, #5
   22fa4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fa8:	mov	r0, r4
   22fac:	movw	r1, #17628	; 0x44dc
   22fb0:	movt	r1, #5
   22fb4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fb8:	mov	r0, r4
   22fbc:	movw	r1, #17648	; 0x44f0
   22fc0:	movt	r1, #5
   22fc4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fc8:	mov	r0, r4
   22fcc:	movw	r1, #45408	; 0xb160
   22fd0:	movt	r1, #4
   22fd4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fd8:	mov	r0, r4
   22fdc:	movw	r1, #16000	; 0x3e80
   22fe0:	movt	r1, #5
   22fe4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   22fe8:	sub	r3, r8, #1
   22fec:	mov	r2, r5
   22ff0:	str	r5, [sp]
   22ff4:	mov	r1, r6
   22ff8:	mov	r0, r4
   22ffc:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   23000:	movw	r1, #17148	; 0x42fc
   23004:	movt	r1, #5
   23008:	mov	r0, r4
   2300c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23010:	ldr	r3, [r4, #220]	; 0xdc
   23014:	cmp	r3, #0
   23018:	beq	24304 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   2301c:	sub	r3, r3, #1
   23020:	mov	r0, r4
   23024:	movw	r1, #15748	; 0x3d84
   23028:	movt	r1, #5
   2302c:	str	r3, [r4, #220]	; 0xdc
   23030:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23034:	mov	r0, r4
   23038:	movw	r1, #45408	; 0xb160
   2303c:	movt	r1, #4
   23040:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23044:	ldr	r0, [sp, #24]
   23048:	cmp	r0, #0
   2304c:	beq	23054 <__flatcc_fb_gen_c_json_parser@@Base+0x748>
   23050:	bl	13fac <free@plt>
   23054:	ldr	r0, [sp, #68]	; 0x44
   23058:	cmp	r0, #0
   2305c:	beq	23064 <__flatcc_fb_gen_c_json_parser@@Base+0x758>
   23060:	bl	13fac <free@plt>
   23064:	ldr	r0, [sp, #72]	; 0x48
   23068:	cmp	r0, #0
   2306c:	beq	23074 <__flatcc_fb_gen_c_json_parser@@Base+0x768>
   23070:	bl	13fac <free@plt>
   23074:	ldr	r0, [sp, #76]	; 0x4c
   23078:	cmp	r0, #0
   2307c:	beq	23084 <__flatcc_fb_gen_c_json_parser@@Base+0x778>
   23080:	bl	13fac <free@plt>
   23084:	ldr	r3, [r4, #208]	; 0xd0
   23088:	ldr	r5, [r3, #52]	; 0x34
   2308c:	cmp	r5, #0
   23090:	beq	23e54 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   23094:	ldrh	r6, [r5, #8]
   23098:	cmp	r6, #0
   2309c:	beq	23c8c <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   230a0:	cmp	r6, #1
   230a4:	bne	23e54 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   230a8:	mov	r2, #220	; 0xdc
   230ac:	mov	r1, #0
   230b0:	add	r0, sp, #52	; 0x34
   230b4:	bl	14084 <memset@plt>
   230b8:	add	r2, sp, #52	; 0x34
   230bc:	mov	r1, r5
   230c0:	ldr	r0, [r5, #12]
   230c4:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   230c8:	ldr	r3, [r4, #208]	; 0xd0
   230cc:	mov	r0, r4
   230d0:	movw	r1, #21460	; 0x53d4
   230d4:	movt	r1, #5
   230d8:	ldr	r2, [r3, #160]	; 0xa0
   230dc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   230e0:	ldr	r3, [r4, #220]	; 0xdc
   230e4:	movw	r1, #24168	; 0x5e68
   230e8:	movt	r1, #5
   230ec:	mov	r0, r4
   230f0:	add	r3, r3, #2
   230f4:	str	r3, [r4, #220]	; 0xdc
   230f8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   230fc:	ldr	r3, [r4, #220]	; 0xdc
   23100:	cmp	r3, #0
   23104:	beq	24320 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   23108:	cmp	r3, #1
   2310c:	moveq	r3, #0
   23110:	streq	r3, [r4, #220]	; 0xdc
   23114:	beq	24320 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   23118:	sub	r3, r3, #2
   2311c:	mov	r0, r4
   23120:	movw	r1, #27128	; 0x69f8
   23124:	movt	r1, #5
   23128:	str	r3, [r4, #220]	; 0xdc
   2312c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23130:	ldr	r3, [r4, #220]	; 0xdc
   23134:	mov	r0, r4
   23138:	movw	r1, #24656	; 0x6050
   2313c:	movt	r1, #5
   23140:	add	r3, r3, #1
   23144:	str	r3, [r4, #220]	; 0xdc
   23148:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2314c:	mov	r0, r4
   23150:	movw	r1, #24244	; 0x5eb4
   23154:	movt	r1, #5
   23158:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2315c:	mov	r0, r4
   23160:	movw	r1, #45408	; 0xb160
   23164:	movt	r1, #4
   23168:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2316c:	mov	r0, r4
   23170:	movw	r1, #24684	; 0x606c
   23174:	movt	r1, #5
   23178:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2317c:	movw	r1, #24300	; 0x5eec
   23180:	movt	r1, #5
   23184:	mov	r0, r4
   23188:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2318c:	ldr	r2, [r4, #208]	; 0xd0
   23190:	ldrh	r3, [r2, #16]
   23194:	cmp	r3, #2
   23198:	beq	23f10 <__flatcc_fb_gen_c_json_parser@@Base+0x1604>
   2319c:	movw	r1, #24424	; 0x5f68
   231a0:	movt	r1, #5
   231a4:	mov	r0, r4
   231a8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   231ac:	add	r2, sp, #52	; 0x34
   231b0:	mov	r0, r4
   231b4:	movw	r1, #24712	; 0x6088
   231b8:	movt	r1, #5
   231bc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   231c0:	mov	r0, r4
   231c4:	movw	r1, #24532	; 0x5fd4
   231c8:	movt	r1, #5
   231cc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   231d0:	ldr	r3, [r4, #220]	; 0xdc
   231d4:	movw	r1, #24552	; 0x5fe8
   231d8:	movt	r1, #5
   231dc:	mov	r0, r4
   231e0:	add	r3, r3, #1
   231e4:	str	r3, [r4, #220]	; 0xdc
   231e8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   231ec:	ldr	r3, [r4, #220]	; 0xdc
   231f0:	cmp	r3, #0
   231f4:	beq	243a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   231f8:	sub	r3, r3, #1
   231fc:	mov	r0, r4
   23200:	movw	r1, #15748	; 0x3d84
   23204:	movt	r1, #5
   23208:	str	r3, [r4, #220]	; 0xdc
   2320c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23210:	mov	r0, r4
   23214:	movw	r1, #24572	; 0x5ffc
   23218:	movt	r1, #5
   2321c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23220:	mov	r0, r4
   23224:	movw	r1, #24624	; 0x6030
   23228:	movt	r1, #5
   2322c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23230:	movw	r1, #24644	; 0x6044
   23234:	movt	r1, #5
   23238:	mov	r0, r4
   2323c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23240:	ldr	r3, [r4, #220]	; 0xdc
   23244:	cmp	r3, #0
   23248:	bne	23e2c <__flatcc_fb_gen_c_json_parser@@Base+0x1520>
   2324c:	movw	r1, #15648	; 0x3d20
   23250:	movt	r1, #5
   23254:	ldr	r3, [pc, #2524]	; 23c38 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   23258:	movw	r0, #15736	; 0x3d78
   2325c:	movt	r0, #5
   23260:	movw	r2, #1665	; 0x681
   23264:	bl	14120 <__assert_fail@plt>
   23268:	mov	r3, #0
   2326c:	str	r3, [r6]
   23270:	str	r3, [r6, #4]
   23274:	str	r3, [r6, #8]
   23278:	str	r3, [r6, #12]
   2327c:	str	r3, [r6, #16]
   23280:	str	r3, [r6, #20]
   23284:	str	r3, [r6, #24]
   23288:	ldrh	r3, [r5, #8]
   2328c:	cmp	r3, #1
   23290:	bne	242b0 <__flatcc_fb_gen_c_json_parser@@Base+0x19a4>
   23294:	add	r1, sp, #20
   23298:	ldr	r0, [r5, #20]
   2329c:	bl	222ac <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   232a0:	cmp	r0, #0
   232a4:	str	r0, [sp, #24]
   232a8:	beq	23b68 <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   232ac:	movw	r1, #8396	; 0x20cc
   232b0:	movt	r1, #2
   232b4:	mov	ip, #1
   232b8:	movw	r3, #60864	; 0xedc0
   232bc:	movt	r3, #1
   232c0:	mov	r2, #220	; 0xdc
   232c4:	str	r1, [sp, #28]
   232c8:	add	r0, sp, #52	; 0x34
   232cc:	mov	r1, #0
   232d0:	str	r3, [sp, #32]
   232d4:	str	r5, [sp, #36]	; 0x24
   232d8:	str	ip, [sp, #40]	; 0x28
   232dc:	bl	14084 <memset@plt>
   232e0:	add	r2, sp, #52	; 0x34
   232e4:	mov	r1, r5
   232e8:	ldr	r0, [r5, #12]
   232ec:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   232f0:	add	r2, sp, #52	; 0x34
   232f4:	mov	r0, r4
   232f8:	movw	r1, #22276	; 0x5704
   232fc:	movt	r1, #5
   23300:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23304:	mov	r1, r7
   23308:	mov	r0, r4
   2330c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23310:	ldr	r3, [r4, #220]	; 0xdc
   23314:	mov	r0, r4
   23318:	ldr	r1, [sp, #8]
   2331c:	add	r3, r3, #1
   23320:	str	r3, [r4, #220]	; 0xdc
   23324:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23328:	ldr	r3, [sp, #20]
   2332c:	cmp	r3, #0
   23330:	ble	23374 <__flatcc_fb_gen_c_json_parser@@Base+0xa68>
   23334:	mov	r0, r4
   23338:	movw	r1, #22416	; 0x5790
   2333c:	movt	r1, #5
   23340:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23344:	mov	r0, r4
   23348:	movw	r1, #22444	; 0x57ac
   2334c:	movt	r1, #5
   23350:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23354:	mov	r0, r4
   23358:	movw	r1, #17628	; 0x44dc
   2335c:	movt	r1, #5
   23360:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23364:	movw	r1, #17648	; 0x44f0
   23368:	movt	r1, #5
   2336c:	mov	r0, r4
   23370:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23374:	mov	r0, r4
   23378:	movw	r1, #45408	; 0xb160
   2337c:	movt	r1, #4
   23380:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23384:	mov	r0, r4
   23388:	movw	r1, #22456	; 0x57b8
   2338c:	movt	r1, #5
   23390:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23394:	movw	r1, #18356	; 0x47b4
   23398:	movt	r1, #5
   2339c:	mov	r0, r4
   233a0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   233a4:	ldr	r3, [r4, #220]	; 0xdc
   233a8:	ldr	r2, [sp, #20]
   233ac:	add	r3, r3, #1
   233b0:	cmp	r2, #0
   233b4:	str	r3, [r4, #220]	; 0xdc
   233b8:	bne	23b24 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   233bc:	mov	r0, r4
   233c0:	movw	r1, #22520	; 0x57f8
   233c4:	movt	r1, #5
   233c8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   233cc:	movw	r1, #15476	; 0x3c74
   233d0:	movt	r1, #5
   233d4:	mov	r0, r4
   233d8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   233dc:	movw	r1, #22596	; 0x5844
   233e0:	movt	r1, #5
   233e4:	mov	r0, r4
   233e8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   233ec:	ldr	r3, [r4, #220]	; 0xdc
   233f0:	cmp	r3, #0
   233f4:	beq	24294 <__flatcc_fb_gen_c_json_parser@@Base+0x1988>
   233f8:	sub	r3, r3, #1
   233fc:	mov	r0, r4
   23400:	movw	r1, #15748	; 0x3d84
   23404:	movt	r1, #5
   23408:	str	r3, [r4, #220]	; 0xdc
   2340c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23410:	movw	r1, #17148	; 0x42fc
   23414:	movt	r1, #5
   23418:	mov	r0, r4
   2341c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23420:	ldr	r3, [sp, #20]
   23424:	cmp	r3, #0
   23428:	ble	23464 <__flatcc_fb_gen_c_json_parser@@Base+0xb58>
   2342c:	ldr	r3, [r4, #220]	; 0xdc
   23430:	mov	r2, #0
   23434:	mov	r0, r4
   23438:	movw	r1, #22656	; 0x5880
   2343c:	movt	r1, #5
   23440:	str	r2, [r4, #220]	; 0xdc
   23444:	str	r3, [r4, #228]	; 0xe4
   23448:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2344c:	ldr	r3, [r4, #228]	; 0xe4
   23450:	movw	r1, #17176	; 0x4318
   23454:	movt	r1, #5
   23458:	mov	r0, r4
   2345c:	str	r3, [r4, #220]	; 0xdc
   23460:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23464:	ldr	r3, [r4, #220]	; 0xdc
   23468:	cmp	r3, #0
   2346c:	beq	24208 <__flatcc_fb_gen_c_json_parser@@Base+0x18fc>
   23470:	sub	r3, r3, #1
   23474:	mov	r0, r4
   23478:	movw	r1, #15748	; 0x3d84
   2347c:	movt	r1, #5
   23480:	str	r3, [r4, #220]	; 0xdc
   23484:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23488:	mov	r0, r4
   2348c:	movw	r1, #45408	; 0xb160
   23490:	movt	r1, #4
   23494:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23498:	ldr	r0, [sp, #24]
   2349c:	cmp	r0, #0
   234a0:	beq	234a8 <__flatcc_fb_gen_c_json_parser@@Base+0xb9c>
   234a4:	bl	13fac <free@plt>
   234a8:	ldrh	r3, [r5, #8]
   234ac:	cmp	r3, #1
   234b0:	bne	241ec <__flatcc_fb_gen_c_json_parser@@Base+0x18e0>
   234b4:	mov	r2, #220	; 0xdc
   234b8:	mov	r1, #0
   234bc:	add	r0, sp, #52	; 0x34
   234c0:	bl	14084 <memset@plt>
   234c4:	add	r2, sp, #52	; 0x34
   234c8:	mov	r1, r5
   234cc:	ldr	r0, [r5, #12]
   234d0:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   234d4:	add	r2, sp, #52	; 0x34
   234d8:	mov	r0, r4
   234dc:	movw	r1, #22664	; 0x5888
   234e0:	movt	r1, #5
   234e4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   234e8:	mov	r1, r7
   234ec:	mov	r0, r4
   234f0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   234f4:	ldr	r3, [r4, #220]	; 0xdc
   234f8:	mov	r0, r4
   234fc:	movw	r1, #22444	; 0x57ac
   23500:	movt	r1, #5
   23504:	add	r3, r3, #1
   23508:	str	r3, [r4, #220]	; 0xdc
   2350c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23510:	mov	r0, r4
   23514:	movw	r1, #45408	; 0xb160
   23518:	movt	r1, #4
   2351c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23520:	mov	r0, r4
   23524:	movw	r1, #16500	; 0x4074
   23528:	movt	r1, #5
   2352c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23530:	ldrh	ip, [r5, #104]	; 0x68
   23534:	mov	r0, r4
   23538:	movw	r1, #22796	; 0x590c
   2353c:	movt	r1, #5
   23540:	ldrd	r2, [r5, #112]	; 0x70
   23544:	str	ip, [sp]
   23548:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2354c:	add	r2, sp, #52	; 0x34
   23550:	mov	r0, r4
   23554:	movw	r1, #18740	; 0x4934
   23558:	movt	r1, #5
   2355c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23560:	mov	r0, r4
   23564:	movw	r1, #22872	; 0x5958
   23568:	movt	r1, #5
   2356c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23570:	mov	r0, r4
   23574:	movw	r1, #17148	; 0x42fc
   23578:	movt	r1, #5
   2357c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23580:	ldr	r3, [r4, #220]	; 0xdc
   23584:	mov	r2, #0
   23588:	mov	r0, r4
   2358c:	movw	r1, #22656	; 0x5880
   23590:	movt	r1, #5
   23594:	str	r2, [r4, #220]	; 0xdc
   23598:	str	r3, [r4, #228]	; 0xe4
   2359c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   235a0:	ldr	r3, [r4, #228]	; 0xe4
   235a4:	movw	r1, #17176	; 0x4318
   235a8:	movt	r1, #5
   235ac:	mov	r0, r4
   235b0:	str	r3, [r4, #220]	; 0xdc
   235b4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   235b8:	ldr	r3, [r4, #220]	; 0xdc
   235bc:	cmp	r3, #0
   235c0:	beq	24240 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   235c4:	sub	r3, r3, #1
   235c8:	mov	r0, r4
   235cc:	movw	r1, #15748	; 0x3d84
   235d0:	movt	r1, #5
   235d4:	str	r3, [r4, #220]	; 0xdc
   235d8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   235dc:	mov	r0, r4
   235e0:	movw	r1, #45408	; 0xb160
   235e4:	movt	r1, #4
   235e8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   235ec:	add	r2, sp, #52	; 0x34
   235f0:	mov	r0, r4
   235f4:	movw	r1, #22956	; 0x59ac
   235f8:	movt	r1, #5
   235fc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23600:	mov	r1, r7
   23604:	mov	r0, r4
   23608:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2360c:	ldr	r3, [r4, #220]	; 0xdc
   23610:	movw	r1, #23104	; 0x5a40
   23614:	movt	r1, #5
   23618:	add	r2, sp, #52	; 0x34
   2361c:	mov	r0, r4
   23620:	add	r3, r3, #1
   23624:	str	r3, [r4, #220]	; 0xdc
   23628:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2362c:	ldr	r3, [r4, #220]	; 0xdc
   23630:	cmp	r3, #0
   23634:	beq	24224 <__flatcc_fb_gen_c_json_parser@@Base+0x1918>
   23638:	sub	r3, r3, #1
   2363c:	mov	r0, r4
   23640:	movw	r1, #15748	; 0x3d84
   23644:	movt	r1, #5
   23648:	str	r3, [r4, #220]	; 0xdc
   2364c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23650:	movw	r1, #45408	; 0xb160
   23654:	movt	r1, #4
   23658:	mov	r0, r4
   2365c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23660:	b	22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   23664:	mov	r1, r5
   23668:	mov	r0, r4
   2366c:	bl	2245c <__flatcc_fb_gen_c_verifier@@Base+0x3b20>
   23670:	b	22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   23674:	mov	r3, #0
   23678:	str	r3, [r6]
   2367c:	str	r3, [r6, #4]
   23680:	str	r3, [r6, #8]
   23684:	str	r3, [r6, #12]
   23688:	str	r3, [r6, #16]
   2368c:	str	r3, [r6, #20]
   23690:	str	r3, [r6, #24]
   23694:	ldrh	r8, [r5, #8]
   23698:	cmp	r8, r3
   2369c:	bne	241d0 <__flatcc_fb_gen_c_json_parser@@Base+0x18c4>
   236a0:	add	r1, sp, #20
   236a4:	ldr	r0, [r5, #20]
   236a8:	bl	222ac <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   236ac:	cmp	r0, #0
   236b0:	str	r0, [sp, #24]
   236b4:	beq	23e9c <__flatcc_fb_gen_c_json_parser@@Base+0x1590>
   236b8:	ldr	r1, [sp, #20]
   236bc:	movw	lr, #8396	; 0x20cc
   236c0:	movt	lr, #2
   236c4:	movw	ip, #60864	; 0xedc0
   236c8:	movt	ip, #1
   236cc:	mov	r2, #0
   236d0:	mov	r3, #0
   236d4:	str	lr, [sp, #28]
   236d8:	str	ip, [sp, #32]
   236dc:	str	r5, [sp, #36]	; 0x24
   236e0:	cmp	r1, #0
   236e4:	strd	r2, [sp, #40]	; 0x28
   236e8:	ble	2370c <__flatcc_fb_gen_c_json_parser@@Base+0xe00>
   236ec:	add	r1, r0, r1, lsl #4
   236f0:	ldr	r3, [r0, #12]
   236f4:	add	r0, r0, #16
   236f8:	cmp	r3, #0
   236fc:	addne	r8, r8, #1
   23700:	cmp	r1, r0
   23704:	bne	236f0 <__flatcc_fb_gen_c_json_parser@@Base+0xde4>
   23708:	str	r8, [sp, #44]	; 0x2c
   2370c:	mov	r2, #220	; 0xdc
   23710:	mov	r1, #0
   23714:	add	r0, sp, #52	; 0x34
   23718:	bl	14084 <memset@plt>
   2371c:	add	r2, sp, #52	; 0x34
   23720:	mov	r1, r5
   23724:	ldr	r0, [r5, #12]
   23728:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   2372c:	add	r2, sp, #52	; 0x34
   23730:	mov	r0, r4
   23734:	ldr	r1, [sp, #12]
   23738:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2373c:	mov	r1, r7
   23740:	mov	r0, r4
   23744:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23748:	ldr	r3, [r4, #220]	; 0xdc
   2374c:	mov	r0, r4
   23750:	ldr	r1, [sp, #8]
   23754:	add	r3, r3, #1
   23758:	str	r3, [r4, #220]	; 0xdc
   2375c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23760:	ldr	r3, [sp, #20]
   23764:	cmp	r3, #0
   23768:	ble	237ac <__flatcc_fb_gen_c_json_parser@@Base+0xea0>
   2376c:	mov	r0, r4
   23770:	movw	r1, #22444	; 0x57ac
   23774:	movt	r1, #5
   23778:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2377c:	mov	r0, r4
   23780:	movw	r1, #23336	; 0x5b28
   23784:	movt	r1, #5
   23788:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2378c:	mov	r0, r4
   23790:	movw	r1, #17628	; 0x44dc
   23794:	movt	r1, #5
   23798:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2379c:	movw	r1, #17648	; 0x44f0
   237a0:	movt	r1, #5
   237a4:	mov	r0, r4
   237a8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   237ac:	ldr	r3, [sp, #44]	; 0x2c
   237b0:	cmp	r3, #0
   237b4:	bne	23bfc <__flatcc_fb_gen_c_json_parser@@Base+0x12f0>
   237b8:	mov	r0, r4
   237bc:	movw	r1, #45408	; 0xb160
   237c0:	movt	r1, #4
   237c4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   237c8:	mov	r0, r4
   237cc:	movw	r1, #16500	; 0x4074
   237d0:	movt	r1, #5
   237d4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   237d8:	movw	r1, #23392	; 0x5b60
   237dc:	movt	r1, #5
   237e0:	ldrd	r2, [r5, #96]	; 0x60
   237e4:	mov	r0, r4
   237e8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   237ec:	ldr	r2, [sp, #44]	; 0x2c
   237f0:	cmp	r2, #0
   237f4:	bne	23be4 <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   237f8:	mov	r0, r4
   237fc:	movw	r1, #22456	; 0x57b8
   23800:	movt	r1, #5
   23804:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23808:	mov	r0, r4
   2380c:	movw	r1, #18356	; 0x47b4
   23810:	movt	r1, #5
   23814:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23818:	ldr	r3, [r4, #220]	; 0xdc
   2381c:	movw	r1, #22540	; 0x580c
   23820:	movt	r1, #5
   23824:	mov	r0, r4
   23828:	add	r3, r3, #1
   2382c:	str	r3, [r4, #220]	; 0xdc
   23830:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23834:	ldr	r3, [sp, #20]
   23838:	cmp	r3, #0
   2383c:	ble	23bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x12b4>
   23840:	mov	r0, r4
   23844:	movw	r1, #16000	; 0x3e80
   23848:	movt	r1, #5
   2384c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23850:	ldr	r3, [sp, #20]
   23854:	mov	ip, #0
   23858:	mov	r1, r6
   2385c:	mov	r2, ip
   23860:	mov	r0, r4
   23864:	str	ip, [sp]
   23868:	sub	r3, r3, #1
   2386c:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   23870:	movw	r1, #23576	; 0x5c18
   23874:	movt	r1, #5
   23878:	mov	r0, r4
   2387c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23880:	ldr	r3, [r4, #220]	; 0xdc
   23884:	cmp	r3, #0
   23888:	beq	241b4 <__flatcc_fb_gen_c_json_parser@@Base+0x18a8>
   2388c:	sub	r3, r3, #1
   23890:	mov	r0, r4
   23894:	movw	r1, #15748	; 0x3d84
   23898:	movt	r1, #5
   2389c:	str	r3, [r4, #220]	; 0xdc
   238a0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   238a4:	movw	r1, #23636	; 0x5c54
   238a8:	movt	r1, #5
   238ac:	mov	r0, r4
   238b0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   238b4:	ldr	ip, [sp, #20]
   238b8:	cmp	ip, #0
   238bc:	ble	23a04 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   238c0:	movw	fp, #23728	; 0x5cb0
   238c4:	movt	fp, #5
   238c8:	movw	sl, #23668	; 0x5c74
   238cc:	movt	sl, #5
   238d0:	mov	r9, #1
   238d4:	mov	r8, #0
   238d8:	b	23908 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   238dc:	mov	r1, sl
   238e0:	mov	r0, r4
   238e4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   238e8:	ldr	r3, [r4, #220]	; 0xdc
   238ec:	mov	r9, #0
   238f0:	ldr	ip, [sp, #20]
   238f4:	add	r3, r3, #1
   238f8:	str	r3, [r4, #220]	; 0xdc
   238fc:	add	r8, r8, #1
   23900:	cmp	r8, ip
   23904:	bge	23988 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   23908:	ldr	r3, [sp, #24]
   2390c:	add	r3, r3, r8, lsl #4
   23910:	ldr	r0, [r3, #8]
   23914:	ldrh	r2, [r0, #72]	; 0x48
   23918:	ands	r3, r2, #4
   2391c:	bne	238fc <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   23920:	ldrh	r1, [r0, #24]
   23924:	sub	r1, r1, #14
   23928:	cmp	r1, #1
   2392c:	movhi	r1, #0
   23930:	movhi	lr, r1
   23934:	bhi	23950 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   23938:	ldr	r1, [r0, #16]
   2393c:	mov	lr, r3
   23940:	ldrh	r1, [r1, #8]
   23944:	sub	r1, r1, #4
   23948:	clz	r1, r1
   2394c:	lsr	r1, r1, #5
   23950:	tst	r2, #256	; 0x100
   23954:	beq	238fc <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   23958:	ldrd	r2, [r0, #96]	; 0x60
   2395c:	subs	r2, r2, r1
   23960:	sbc	r3, r3, lr
   23964:	cmp	r9, #0
   23968:	bne	238dc <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   2396c:	mov	r1, fp
   23970:	mov	r0, r4
   23974:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23978:	ldr	ip, [sp, #20]
   2397c:	add	r8, r8, #1
   23980:	cmp	r8, ip
   23984:	blt	23908 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   23988:	cmp	r9, #0
   2398c:	bne	23a04 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   23990:	ldr	r3, [r4, #220]	; 0xdc
   23994:	cmp	r3, #0
   23998:	beq	242e8 <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   2399c:	sub	r3, r3, #1
   239a0:	mov	r0, r4
   239a4:	movw	r1, #19140	; 0x4ac4
   239a8:	movt	r1, #5
   239ac:	str	r3, [r4, #220]	; 0xdc
   239b0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   239b4:	ldr	r3, [r4, #220]	; 0xdc
   239b8:	mov	r0, r4
   239bc:	movw	r1, #23788	; 0x5cec
   239c0:	movt	r1, #5
   239c4:	add	r3, r3, #1
   239c8:	str	r3, [r4, #220]	; 0xdc
   239cc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   239d0:	movw	r1, #20140	; 0x4eac
   239d4:	movt	r1, #5
   239d8:	mov	r0, r4
   239dc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   239e0:	ldr	r3, [r4, #220]	; 0xdc
   239e4:	cmp	r3, #0
   239e8:	beq	242cc <__flatcc_fb_gen_c_json_parser@@Base+0x19c0>
   239ec:	sub	r3, r3, #1
   239f0:	movw	r1, #15748	; 0x3d84
   239f4:	movt	r1, #5
   239f8:	mov	r0, r4
   239fc:	str	r3, [r4, #220]	; 0xdc
   23a00:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a04:	ldr	r3, [sp, #44]	; 0x2c
   23a08:	cmp	r3, #0
   23a0c:	bne	23c10 <__flatcc_fb_gen_c_json_parser@@Base+0x1304>
   23a10:	mov	r0, r4
   23a14:	movw	r1, #23944	; 0x5d88
   23a18:	movt	r1, #5
   23a1c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a20:	mov	r0, r4
   23a24:	movw	r1, #17148	; 0x42fc
   23a28:	movt	r1, #5
   23a2c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a30:	ldr	r3, [r4, #220]	; 0xdc
   23a34:	mov	r2, #0
   23a38:	mov	r0, r4
   23a3c:	movw	r1, #22656	; 0x5880
   23a40:	movt	r1, #5
   23a44:	str	r2, [r4, #220]	; 0xdc
   23a48:	str	r3, [r4, #228]	; 0xe4
   23a4c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a50:	ldr	r3, [r4, #228]	; 0xe4
   23a54:	movw	r1, #17176	; 0x4318
   23a58:	movt	r1, #5
   23a5c:	mov	r0, r4
   23a60:	str	r3, [r4, #220]	; 0xdc
   23a64:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a68:	ldr	r3, [r4, #220]	; 0xdc
   23a6c:	cmp	r3, #0
   23a70:	beq	24278 <__flatcc_fb_gen_c_json_parser@@Base+0x196c>
   23a74:	sub	r3, r3, #1
   23a78:	mov	r0, r4
   23a7c:	movw	r1, #15748	; 0x3d84
   23a80:	movt	r1, #5
   23a84:	str	r3, [r4, #220]	; 0xdc
   23a88:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a8c:	mov	r0, r4
   23a90:	movw	r1, #45408	; 0xb160
   23a94:	movt	r1, #4
   23a98:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23a9c:	add	r2, sp, #52	; 0x34
   23aa0:	mov	r0, r4
   23aa4:	movw	r1, #22956	; 0x59ac
   23aa8:	movt	r1, #5
   23aac:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23ab0:	mov	r1, r7
   23ab4:	mov	r0, r4
   23ab8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23abc:	ldr	r3, [r4, #220]	; 0xdc
   23ac0:	movw	r1, #24012	; 0x5dcc
   23ac4:	movt	r1, #5
   23ac8:	add	r2, sp, #52	; 0x34
   23acc:	mov	r0, r4
   23ad0:	add	r3, r3, #1
   23ad4:	str	r3, [r4, #220]	; 0xdc
   23ad8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23adc:	ldr	r3, [r4, #220]	; 0xdc
   23ae0:	cmp	r3, #0
   23ae4:	beq	2425c <__flatcc_fb_gen_c_json_parser@@Base+0x1950>
   23ae8:	sub	r3, r3, #1
   23aec:	mov	r0, r4
   23af0:	movw	r1, #15748	; 0x3d84
   23af4:	movt	r1, #5
   23af8:	str	r3, [r4, #220]	; 0xdc
   23afc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23b00:	mov	r0, r4
   23b04:	movw	r1, #45408	; 0xb160
   23b08:	movt	r1, #4
   23b0c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23b10:	ldr	r0, [sp, #24]
   23b14:	cmp	r0, #0
   23b18:	beq	22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   23b1c:	bl	13fac <free@plt>
   23b20:	b	22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   23b24:	mov	r0, r4
   23b28:	movw	r1, #22540	; 0x580c
   23b2c:	movt	r1, #5
   23b30:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23b34:	mov	r0, r4
   23b38:	movw	r1, #16000	; 0x3e80
   23b3c:	movt	r1, #5
   23b40:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23b44:	ldr	r3, [sp, #20]
   23b48:	mov	ip, #0
   23b4c:	mov	r1, r6
   23b50:	mov	r2, ip
   23b54:	mov	r0, r4
   23b58:	str	ip, [sp]
   23b5c:	sub	r3, r3, #1
   23b60:	bl	1f35c <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   23b64:	b	233dc <__flatcc_fb_gen_c_json_parser@@Base+0xad0>
   23b68:	ldr	r3, [sp, #20]
   23b6c:	cmp	r3, #0
   23b70:	ble	232ac <__flatcc_fb_gen_c_json_parser@@Base+0x9a0>
   23b74:	movw	r1, #17400	; 0x43f8
   23b78:	movt	r1, #5
   23b7c:	movw	r3, #49320	; 0xc0a8
   23b80:	movt	r3, #6
   23b84:	movw	r2, #15648	; 0x3d20
   23b88:	movt	r2, #5
   23b8c:	str	r1, [sp]
   23b90:	movw	r1, #4944	; 0x1350
   23b94:	movt	r1, #4
   23b98:	ldr	r0, [r3]
   23b9c:	movw	r3, #1303	; 0x517
   23ba0:	bl	1406c <fprintf@plt>
   23ba4:	movw	r1, #15648	; 0x3d20
   23ba8:	movt	r1, #5
   23bac:	ldr	r3, [pc, #120]	; 23c2c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   23bb0:	movw	r0, #41608	; 0xa288
   23bb4:	movt	r0, #4
   23bb8:	movw	r2, #1303	; 0x517
   23bbc:	bl	14120 <__assert_fail@plt>
   23bc0:	mov	r0, r4
   23bc4:	movw	r1, #23548	; 0x5bfc
   23bc8:	movt	r1, #5
   23bcc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23bd0:	movw	r1, #15476	; 0x3c74
   23bd4:	movt	r1, #5
   23bd8:	mov	r0, r4
   23bdc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23be0:	b	23870 <__flatcc_fb_gen_c_json_parser@@Base+0xf64>
   23be4:	movw	r1, #23456	; 0x5ba0
   23be8:	movt	r1, #5
   23bec:	asr	r3, r2, #31
   23bf0:	mov	r0, r4
   23bf4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23bf8:	b	237f8 <__flatcc_fb_gen_c_json_parser@@Base+0xeec>
   23bfc:	movw	r1, #23372	; 0x5b4c
   23c00:	movt	r1, #5
   23c04:	mov	r0, r4
   23c08:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23c0c:	b	237b8 <__flatcc_fb_gen_c_json_parser@@Base+0xeac>
   23c10:	movw	r1, #23876	; 0x5d44
   23c14:	movt	r1, #5
   23c18:	mov	r0, r4
   23c1c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23c20:	b	23a10 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   23c24:	andeq	r3, r5, ip, asr #23
   23c28:	andeq	r3, r5, r4, lsl #24
   23c2c:	andeq	r3, r5, r8, ror #23
   23c30:	andeq	r3, r5, ip, lsr #24
   23c34:	andeq	r3, r5, r8, lsl ip
   23c38:	andeq	r3, r5, ip, asr ip
   23c3c:	andeq	r3, r5, ip, asr #23
   23c40:	andeq	r3, r5, r4, asr #24
   23c44:	mov	r0, r4
   23c48:	movw	r1, #24108	; 0x5e2c
   23c4c:	movt	r1, #5
   23c50:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23c54:	movw	r1, #17564	; 0x449c
   23c58:	movt	r1, #5
   23c5c:	mov	r0, r4
   23c60:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23c64:	ldr	r3, [r4, #220]	; 0xdc
   23c68:	cmp	r3, #0
   23c6c:	bne	2301c <__flatcc_fb_gen_c_json_parser@@Base+0x710>
   23c70:	movw	r1, #15648	; 0x3d20
   23c74:	movt	r1, #5
   23c78:	ldr	r3, [pc, #-80]	; 23c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   23c7c:	movw	r0, #15736	; 0x3d78
   23c80:	movt	r0, #5
   23c84:	movw	r2, #1210	; 0x4ba
   23c88:	bl	14120 <__assert_fail@plt>
   23c8c:	mov	r2, #220	; 0xdc
   23c90:	mov	r1, r6
   23c94:	add	r0, sp, #52	; 0x34
   23c98:	bl	14084 <memset@plt>
   23c9c:	add	r2, sp, #52	; 0x34
   23ca0:	mov	r1, r5
   23ca4:	ldr	r0, [r5, #12]
   23ca8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   23cac:	ldr	r3, [r4, #208]	; 0xd0
   23cb0:	mov	r0, r4
   23cb4:	movw	r1, #21460	; 0x53d4
   23cb8:	movt	r1, #5
   23cbc:	ldr	r2, [r3, #160]	; 0xa0
   23cc0:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23cc4:	ldr	r3, [r4, #220]	; 0xdc
   23cc8:	movw	r1, #24168	; 0x5e68
   23ccc:	movt	r1, #5
   23cd0:	mov	r0, r4
   23cd4:	add	r3, r3, #2
   23cd8:	str	r3, [r4, #220]	; 0xdc
   23cdc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23ce0:	ldr	r3, [r4, #220]	; 0xdc
   23ce4:	cmp	r3, #0
   23ce8:	beq	2433c <__flatcc_fb_gen_c_json_parser@@Base+0x1a30>
   23cec:	cmp	r3, #1
   23cf0:	streq	r6, [r4, #220]	; 0xdc
   23cf4:	beq	2433c <__flatcc_fb_gen_c_json_parser@@Base+0x1a30>
   23cf8:	sub	r3, r3, #2
   23cfc:	mov	r0, r4
   23d00:	movw	r1, #27128	; 0x69f8
   23d04:	movt	r1, #5
   23d08:	str	r3, [r4, #220]	; 0xdc
   23d0c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d10:	ldr	r3, [r4, #220]	; 0xdc
   23d14:	mov	r0, r4
   23d18:	movw	r1, #24212	; 0x5e94
   23d1c:	movt	r1, #5
   23d20:	add	r3, r3, #1
   23d24:	str	r3, [r4, #220]	; 0xdc
   23d28:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d2c:	mov	r0, r4
   23d30:	movw	r1, #24244	; 0x5eb4
   23d34:	movt	r1, #5
   23d38:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d3c:	mov	r0, r4
   23d40:	movw	r1, #45408	; 0xb160
   23d44:	movt	r1, #4
   23d48:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d4c:	mov	r0, r4
   23d50:	movw	r1, #24272	; 0x5ed0
   23d54:	movt	r1, #5
   23d58:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d5c:	movw	r1, #24300	; 0x5eec
   23d60:	movt	r1, #5
   23d64:	mov	r0, r4
   23d68:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d6c:	ldr	r2, [r4, #208]	; 0xd0
   23d70:	ldrh	r3, [r2, #16]
   23d74:	cmp	r3, #2
   23d78:	beq	23f2c <__flatcc_fb_gen_c_json_parser@@Base+0x1620>
   23d7c:	movw	r1, #24424	; 0x5f68
   23d80:	movt	r1, #5
   23d84:	mov	r0, r4
   23d88:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23d8c:	add	r2, sp, #52	; 0x34
   23d90:	mov	r0, r4
   23d94:	movw	r1, #24480	; 0x5fa0
   23d98:	movt	r1, #5
   23d9c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23da0:	mov	r0, r4
   23da4:	movw	r1, #24532	; 0x5fd4
   23da8:	movt	r1, #5
   23dac:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23db0:	ldr	r3, [r4, #220]	; 0xdc
   23db4:	movw	r1, #24552	; 0x5fe8
   23db8:	movt	r1, #5
   23dbc:	mov	r0, r4
   23dc0:	add	r3, r3, #1
   23dc4:	str	r3, [r4, #220]	; 0xdc
   23dc8:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23dcc:	ldr	r3, [r4, #220]	; 0xdc
   23dd0:	cmp	r3, #0
   23dd4:	beq	243f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1aec>
   23dd8:	sub	r3, r3, #1
   23ddc:	mov	r0, r4
   23de0:	movw	r1, #15748	; 0x3d84
   23de4:	movt	r1, #5
   23de8:	str	r3, [r4, #220]	; 0xdc
   23dec:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23df0:	mov	r0, r4
   23df4:	movw	r1, #24572	; 0x5ffc
   23df8:	movt	r1, #5
   23dfc:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23e00:	mov	r0, r4
   23e04:	movw	r1, #24624	; 0x6030
   23e08:	movt	r1, #5
   23e0c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23e10:	movw	r1, #24644	; 0x6044
   23e14:	movt	r1, #5
   23e18:	mov	r0, r4
   23e1c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23e20:	ldr	r3, [r4, #220]	; 0xdc
   23e24:	cmp	r3, #0
   23e28:	beq	243dc <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   23e2c:	sub	r3, r3, #1
   23e30:	mov	r0, r4
   23e34:	movw	r1, #15748	; 0x3d84
   23e38:	movt	r1, #5
   23e3c:	str	r3, [r4, #220]	; 0xdc
   23e40:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23e44:	movw	r1, #45408	; 0xb160
   23e48:	movt	r1, #4
   23e4c:	mov	r0, r4
   23e50:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23e54:	ldr	r3, [r4, #212]	; 0xd4
   23e58:	ldr	r3, [r3, #140]	; 0x8c
   23e5c:	cmp	r3, #0
   23e60:	bne	23eec <__flatcc_fb_gen_c_json_parser@@Base+0x15e0>
   23e64:	ldr	r3, [r4, #208]	; 0xd0
   23e68:	mov	r0, r4
   23e6c:	movw	r1, #24772	; 0x60c4
   23e70:	movt	r1, #5
   23e74:	ldr	r2, [r3, #164]	; 0xa4
   23e78:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23e7c:	mov	r0, #0
   23e80:	add	sp, sp, #276	; 0x114
   23e84:	ldrd	r4, [sp]
   23e88:	ldrd	r6, [sp, #8]
   23e8c:	ldrd	r8, [sp, #16]
   23e90:	ldrd	sl, [sp, #24]
   23e94:	add	sp, sp, #32
   23e98:	pop	{pc}		; (ldr pc, [sp], #4)
   23e9c:	ldr	r3, [sp, #20]
   23ea0:	cmp	r3, #0
   23ea4:	bgt	24358 <__flatcc_fb_gen_c_json_parser@@Base+0x1a4c>
   23ea8:	movw	r2, #8396	; 0x20cc
   23eac:	movt	r2, #2
   23eb0:	str	r5, [sp, #36]	; 0x24
   23eb4:	movw	r3, #60864	; 0xedc0
   23eb8:	movt	r3, #1
   23ebc:	mov	r0, #0
   23ec0:	mov	r1, #0
   23ec4:	strd	r2, [sp, #28]
   23ec8:	strd	r0, [sp, #40]	; 0x28
   23ecc:	b	2370c <__flatcc_fb_gen_c_json_parser@@Base+0xe00>
   23ed0:	movw	r0, #10000	; 0x2710
   23ed4:	movt	r0, #4
   23ed8:	ldr	r3, [r4, #204]	; 0xcc
   23edc:	mov	r2, #36	; 0x24
   23ee0:	mov	r1, #1
   23ee4:	bl	13ff4 <fwrite@plt>
   23ee8:	b	229bc <__flatcc_fb_gen_c_json_parser@@Base+0xb0>
   23eec:	movw	r0, #34164	; 0x8574
   23ef0:	movt	r0, #4
   23ef4:	ldr	r3, [r4, #204]	; 0xcc
   23ef8:	mov	r2, #36	; 0x24
   23efc:	mov	r1, #1
   23f00:	bl	13ff4 <fwrite@plt>
   23f04:	b	23e64 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   23f08:	str	r8, [sp, #24]
   23f0c:	b	22efc <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   23f10:	movw	r1, #24360	; 0x5f28
   23f14:	movt	r1, #5
   23f18:	ldr	r3, [r2, #8]
   23f1c:	mov	r0, r4
   23f20:	ldr	r2, [r2, #12]
   23f24:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f28:	b	231ac <__flatcc_fb_gen_c_json_parser@@Base+0x8a0>
   23f2c:	movw	r1, #24360	; 0x5f28
   23f30:	movt	r1, #5
   23f34:	ldr	r3, [r2, #8]
   23f38:	mov	r0, r4
   23f3c:	ldr	r2, [r2, #12]
   23f40:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f44:	b	23d8c <__flatcc_fb_gen_c_json_parser@@Base+0x1480>
   23f48:	mov	r0, r4
   23f4c:	movw	r1, #21064	; 0x5248
   23f50:	movt	r1, #5
   23f54:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f58:	mov	r0, r4
   23f5c:	movw	r1, #21068	; 0x524c
   23f60:	movt	r1, #5
   23f64:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f68:	mov	r0, r4
   23f6c:	movw	r1, #21156	; 0x52a4
   23f70:	movt	r1, #5
   23f74:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f78:	mov	r0, r4
   23f7c:	movw	r1, #21160	; 0x52a8
   23f80:	movt	r1, #5
   23f84:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f88:	mov	r0, r4
   23f8c:	movw	r1, #21228	; 0x52ec
   23f90:	movt	r1, #5
   23f94:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23f98:	mov	r0, r4
   23f9c:	movw	r1, #21284	; 0x5324
   23fa0:	movt	r1, #5
   23fa4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23fa8:	mov	r0, r4
   23fac:	movw	r1, #21324	; 0x534c
   23fb0:	movt	r1, #5
   23fb4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23fb8:	mov	r0, r4
   23fbc:	movw	r1, #21396	; 0x5394
   23fc0:	movt	r1, #5
   23fc4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23fc8:	mov	r0, r4
   23fcc:	movw	r1, #15584	; 0x3ce0
   23fd0:	movt	r1, #5
   23fd4:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23fd8:	ldr	r3, [r4, #208]	; 0xd0
   23fdc:	mov	r0, r4
   23fe0:	movw	r1, #21460	; 0x53d4
   23fe4:	movt	r1, #5
   23fe8:	ldr	r2, [r3, #160]	; 0xa0
   23fec:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   23ff0:	ldr	r3, [r4, #220]	; 0xdc
   23ff4:	movw	r1, #21536	; 0x5420
   23ff8:	movt	r1, #5
   23ffc:	mov	r0, r4
   24000:	add	r3, r3, #2
   24004:	str	r3, [r4, #220]	; 0xdc
   24008:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   2400c:	ldr	r3, [r4, #220]	; 0xdc
   24010:	cmp	r3, #0
   24014:	beq	243c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ab4>
   24018:	cmp	r3, #1
   2401c:	moveq	r3, #0
   24020:	streq	r3, [r4, #220]	; 0xdc
   24024:	beq	243c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ab4>
   24028:	sub	r3, r3, #2
   2402c:	movw	r1, #45408	; 0xb160
   24030:	movt	r1, #4
   24034:	mov	r0, r4
   24038:	str	r3, [r4, #220]	; 0xdc
   2403c:	bl	1ecb0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   24040:	ldr	r6, [r4, #208]	; 0xd0
   24044:	b	229f8 <__flatcc_fb_gen_c_json_parser@@Base+0xec>
   24048:	cmp	r8, #0
   2404c:	str	r9, [sp, #24]
   24050:	ble	22efc <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   24054:	ldr	r0, [sp, #68]	; 0x44
   24058:	cmp	r0, #0
   2405c:	beq	24064 <__flatcc_fb_gen_c_json_parser@@Base+0x1758>
   24060:	bl	13fac <free@plt>
   24064:	ldr	r0, [sp, #72]	; 0x48
   24068:	cmp	r0, #0
   2406c:	beq	24074 <__flatcc_fb_gen_c_json_parser@@Base+0x1768>
   24070:	bl	13fac <free@plt>
   24074:	ldr	r0, [sp, #76]	; 0x4c
   24078:	cmp	r0, #0
   2407c:	beq	24084 <__flatcc_fb_gen_c_json_parser@@Base+0x1778>
   24080:	bl	13fac <free@plt>
   24084:	movw	r1, #17400	; 0x43f8
   24088:	movt	r1, #5
   2408c:	mov	ip, #0
   24090:	movw	r3, #49320	; 0xc0a8
   24094:	movt	r3, #6
   24098:	movw	r2, #15648	; 0x3d20
   2409c:	movt	r2, #5
   240a0:	str	r1, [sp]
   240a4:	movw	r1, #4944	; 0x1350
   240a8:	movt	r1, #4
   240ac:	ldr	r0, [r3]
   240b0:	movw	r3, #1194	; 0x4aa
   240b4:	str	ip, [sp, #52]	; 0x34
   240b8:	str	ip, [sp, #56]	; 0x38
   240bc:	str	ip, [sp, #60]	; 0x3c
   240c0:	str	ip, [sp, #64]	; 0x40
   240c4:	str	ip, [sp, #68]	; 0x44
   240c8:	str	ip, [sp, #72]	; 0x48
   240cc:	str	ip, [sp, #76]	; 0x4c
   240d0:	str	ip, [sp, #80]	; 0x50
   240d4:	str	ip, [sp, #84]	; 0x54
   240d8:	str	ip, [sp, #88]	; 0x58
   240dc:	str	ip, [sp, #92]	; 0x5c
   240e0:	bl	1406c <fprintf@plt>
   240e4:	movw	r1, #15648	; 0x3d20
   240e8:	movt	r1, #5
   240ec:	ldr	r3, [pc, #-1220]	; 23c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   240f0:	movw	r0, #41608	; 0xa288
   240f4:	movt	r0, #4
   240f8:	movw	r2, #1194	; 0x4aa
   240fc:	bl	14120 <__assert_fail@plt>
   24100:	cmp	fp, #0
   24104:	beq	24170 <__flatcc_fb_gen_c_json_parser@@Base+0x1864>
   24108:	mov	r0, fp
   2410c:	str	r3, [sp, #8]
   24110:	bl	13fac <free@plt>
   24114:	ldr	r3, [sp, #8]
   24118:	cmp	sl, #0
   2411c:	beq	24130 <__flatcc_fb_gen_c_json_parser@@Base+0x1824>
   24120:	mov	r0, sl
   24124:	str	r3, [sp, #8]
   24128:	bl	13fac <free@plt>
   2412c:	ldr	r3, [sp, #8]
   24130:	cmp	r3, #0
   24134:	beq	23084 <__flatcc_fb_gen_c_json_parser@@Base+0x778>
   24138:	mov	r0, r3
   2413c:	b	23080 <__flatcc_fb_gen_c_json_parser@@Base+0x774>
   24140:	mov	r3, #0
   24144:	str	r3, [r4, #220]	; 0xdc
   24148:	movw	r1, #15648	; 0x3d20
   2414c:	movt	r1, #5
   24150:	ldr	r3, [pc, #-1332]	; 23c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   24154:	movw	r0, #15736	; 0x3d78
   24158:	movt	r0, #5
   2415c:	movw	r2, #1731	; 0x6c3
   24160:	bl	14120 <__assert_fail@plt>
   24164:	cmp	fp, #0
   24168:	bne	24108 <__flatcc_fb_gen_c_json_parser@@Base+0x17fc>
   2416c:	b	24130 <__flatcc_fb_gen_c_json_parser@@Base+0x1824>
   24170:	cmp	sl, #0
   24174:	bne	24120 <__flatcc_fb_gen_c_json_parser@@Base+0x1814>
   24178:	b	23084 <__flatcc_fb_gen_c_json_parser@@Base+0x778>
   2417c:	movw	r1, #15648	; 0x3d20
   24180:	movt	r1, #5
   24184:	ldr	r3, [pc, #-1372]	; 23c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   24188:	movw	r0, #15736	; 0x3d78
   2418c:	movt	r0, #5
   24190:	movw	r2, #1205	; 0x4b5
   24194:	bl	14120 <__assert_fail@plt>
   24198:	movw	r1, #15648	; 0x3d20
   2419c:	movt	r1, #5
   241a0:	ldr	r3, [pc, #-1412]	; 23c24 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   241a4:	movw	r0, #15736	; 0x3d78
   241a8:	movt	r0, #5
   241ac:	movw	r2, #1755	; 0x6db
   241b0:	bl	14120 <__assert_fail@plt>
   241b4:	movw	r1, #15648	; 0x3d20
   241b8:	movt	r1, #5
   241bc:	ldr	r3, [pc, #-1424]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   241c0:	movw	r0, #15736	; 0x3d78
   241c4:	movt	r0, #5
   241c8:	movw	r2, #1438	; 0x59e
   241cc:	bl	14120 <__assert_fail@plt>
   241d0:	movw	r1, #15648	; 0x3d20
   241d4:	movt	r1, #5
   241d8:	ldr	r3, [pc, #-1452]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   241dc:	movw	r0, #7900	; 0x1edc
   241e0:	movt	r0, #4
   241e4:	movw	r2, #1390	; 0x56e
   241e8:	bl	14120 <__assert_fail@plt>
   241ec:	movw	r1, #15648	; 0x3d20
   241f0:	movt	r1, #5
   241f4:	ldr	r3, [pc, #-1492]	; 23c28 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   241f8:	movw	r0, #5840	; 0x16d0
   241fc:	movt	r0, #4
   24200:	movw	r2, #1353	; 0x549
   24204:	bl	14120 <__assert_fail@plt>
   24208:	movw	r1, #15648	; 0x3d20
   2420c:	movt	r1, #5
   24210:	ldr	r3, [pc, #-1516]	; 23c2c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   24214:	movw	r0, #15736	; 0x3d78
   24218:	movt	r0, #5
   2421c:	movw	r2, #1343	; 0x53f
   24220:	bl	14120 <__assert_fail@plt>
   24224:	movw	r1, #15648	; 0x3d20
   24228:	movt	r1, #5
   2422c:	ldr	r3, [pc, #-1548]	; 23c28 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   24230:	movw	r0, #15736	; 0x3d78
   24234:	movt	r0, #5
   24238:	mov	r2, #1376	; 0x560
   2423c:	bl	14120 <__assert_fail@plt>
   24240:	movw	r1, #15648	; 0x3d20
   24244:	movt	r1, #5
   24248:	ldr	r3, [pc, #-1576]	; 23c28 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   2424c:	movw	r0, #15736	; 0x3d78
   24250:	movt	r0, #5
   24254:	movw	r2, #1370	; 0x55a
   24258:	bl	14120 <__assert_fail@plt>
   2425c:	movw	r1, #15648	; 0x3d20
   24260:	movt	r1, #5
   24264:	ldr	r3, [pc, #-1592]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   24268:	movw	r0, #15736	; 0x3d78
   2426c:	movt	r0, #5
   24270:	movw	r2, #1479	; 0x5c7
   24274:	bl	14120 <__assert_fail@plt>
   24278:	movw	r1, #15648	; 0x3d20
   2427c:	movt	r1, #5
   24280:	ldr	r3, [pc, #-1620]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   24284:	movw	r0, #15736	; 0x3d78
   24288:	movt	r0, #5
   2428c:	movw	r2, #1473	; 0x5c1
   24290:	bl	14120 <__assert_fail@plt>
   24294:	movw	r1, #15648	; 0x3d20
   24298:	movt	r1, #5
   2429c:	ldr	r3, [pc, #-1656]	; 23c2c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   242a0:	movw	r0, #15736	; 0x3d78
   242a4:	movt	r0, #5
   242a8:	movw	r2, #1334	; 0x536
   242ac:	bl	14120 <__assert_fail@plt>
   242b0:	movw	r1, #15648	; 0x3d20
   242b4:	movt	r1, #5
   242b8:	ldr	r3, [pc, #-1684]	; 23c2c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   242bc:	movw	r0, #5840	; 0x16d0
   242c0:	movt	r0, #4
   242c4:	movw	r2, #1301	; 0x515
   242c8:	bl	14120 <__assert_fail@plt>
   242cc:	movw	r1, #15648	; 0x3d20
   242d0:	movt	r1, #5
   242d4:	ldr	r3, [pc, #-1704]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   242d8:	movw	r0, #15736	; 0x3d78
   242dc:	movt	r0, #5
   242e0:	movw	r2, #1461	; 0x5b5
   242e4:	bl	14120 <__assert_fail@plt>
   242e8:	movw	r1, #15648	; 0x3d20
   242ec:	movt	r1, #5
   242f0:	ldr	r3, [pc, #-1732]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   242f4:	movw	r0, #15736	; 0x3d78
   242f8:	movt	r0, #5
   242fc:	movw	r2, #1458	; 0x5b2
   24300:	bl	14120 <__assert_fail@plt>
   24304:	movw	r1, #15648	; 0x3d20
   24308:	movt	r1, #5
   2430c:	ldr	r3, [pc, #-1764]	; 23c30 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   24310:	movw	r0, #15736	; 0x3d78
   24314:	movt	r0, #5
   24318:	movw	r2, #1219	; 0x4c3
   2431c:	bl	14120 <__assert_fail@plt>
   24320:	movw	r1, #15648	; 0x3d20
   24324:	movt	r1, #5
   24328:	ldr	r3, [pc, #-1784]	; 23c38 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   2432c:	movw	r0, #15736	; 0x3d78
   24330:	movt	r0, #5
   24334:	movw	r2, #1645	; 0x66d
   24338:	bl	14120 <__assert_fail@plt>
   2433c:	movw	r1, #15648	; 0x3d20
   24340:	movt	r1, #5
   24344:	ldr	r3, [pc, #-1804]	; 23c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   24348:	movw	r0, #15736	; 0x3d78
   2434c:	movt	r0, #5
   24350:	movw	r2, #1610	; 0x64a
   24354:	bl	14120 <__assert_fail@plt>
   24358:	movw	r1, #17400	; 0x43f8
   2435c:	movt	r1, #5
   24360:	movw	r3, #49320	; 0xc0a8
   24364:	movt	r3, #6
   24368:	movw	r2, #15648	; 0x3d20
   2436c:	movt	r2, #5
   24370:	str	r1, [sp]
   24374:	movw	r1, #4944	; 0x1350
   24378:	movt	r1, #4
   2437c:	ldr	r0, [r3]
   24380:	mov	r3, #1392	; 0x570
   24384:	bl	1406c <fprintf@plt>
   24388:	movw	r1, #15648	; 0x3d20
   2438c:	movt	r1, #5
   24390:	ldr	r3, [pc, #-1892]	; 23c34 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   24394:	movw	r0, #41608	; 0xa288
   24398:	movt	r0, #4
   2439c:	mov	r2, #1392	; 0x570
   243a0:	bl	14120 <__assert_fail@plt>
   243a4:	movw	r1, #15648	; 0x3d20
   243a8:	movt	r1, #5
   243ac:	ldr	r3, [pc, #-1916]	; 23c38 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   243b0:	movw	r0, #15736	; 0x3d78
   243b4:	movt	r0, #5
   243b8:	movw	r2, #1661	; 0x67d
   243bc:	bl	14120 <__assert_fail@plt>
   243c0:	movw	r1, #15648	; 0x3d20
   243c4:	movt	r1, #5
   243c8:	ldr	r3, [pc, #-1940]	; 23c3c <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   243cc:	movw	r0, #15736	; 0x3d78
   243d0:	movt	r0, #5
   243d4:	movw	r2, #1716	; 0x6b4
   243d8:	bl	14120 <__assert_fail@plt>
   243dc:	movw	r1, #15648	; 0x3d20
   243e0:	movt	r1, #5
   243e4:	ldr	r3, [pc, #-1964]	; 23c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   243e8:	movw	r0, #15736	; 0x3d78
   243ec:	movt	r0, #5
   243f0:	movw	r2, #1630	; 0x65e
   243f4:	bl	14120 <__assert_fail@plt>
   243f8:	movw	r1, #15648	; 0x3d20
   243fc:	movt	r1, #5
   24400:	ldr	r3, [pc, #-1992]	; 23c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   24404:	movw	r0, #15736	; 0x3d78
   24408:	movt	r0, #5
   2440c:	movw	r2, #1626	; 0x65a
   24410:	bl	14120 <__assert_fail@plt>
   24414:	movw	r3, #4956	; 0x135c
   24418:	movt	r3, #4
   2441c:	push	{lr}		; (str lr, [sp, #-4]!)
   24420:	sub	sp, sp, #12
   24424:	movw	r4, #4868	; 0x1304
   24428:	movt	r4, #4
   2442c:	movw	r0, #49320	; 0xc0a8
   24430:	movt	r0, #6
   24434:	mov	r2, r4
   24438:	str	r3, [sp]
   2443c:	movw	r1, #4944	; 0x1350
   24440:	movt	r1, #4
   24444:	ldr	r0, [r0]
   24448:	mov	r3, #96	; 0x60
   2444c:	bl	1406c <fprintf@plt>
   24450:	movw	r3, #24808	; 0x60e8
   24454:	movt	r3, #5
   24458:	movw	r0, #41608	; 0xa288
   2445c:	movt	r0, #4
   24460:	mov	r1, r4
   24464:	mov	r2, #96	; 0x60
   24468:	bl	14120 <__assert_fail@plt>
   2446c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24470:	mov	r2, #220	; 0xdc
   24474:	mov	r4, r1
   24478:	strd	r6, [sp, #8]
   2447c:	mov	r1, #0
   24480:	mov	r5, r0
   24484:	strd	r8, [sp, #16]
   24488:	strd	sl, [sp, #24]
   2448c:	str	lr, [sp, #32]
   24490:	sub	sp, sp, #468	; 0x1d4
   24494:	add	r0, sp, #24
   24498:	bl	14084 <memset@plt>
   2449c:	mov	r2, #220	; 0xdc
   244a0:	mov	r1, #0
   244a4:	add	r0, sp, #244	; 0xf4
   244a8:	bl	14084 <memset@plt>
   244ac:	add	r2, sp, #24
   244b0:	mov	r1, r4
   244b4:	ldr	r0, [r4, #12]
   244b8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   244bc:	ldr	r0, [r4, #40]	; 0x28
   244c0:	sub	r2, r0, #1
   244c4:	cmp	r2, #10
   244c8:	bhi	248d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   244cc:	ldrh	lr, [r4, #92]	; 0x5c
   244d0:	movw	r1, #24808	; 0x60e8
   244d4:	movt	r1, #5
   244d8:	add	r2, r1, r2, lsl #2
   244dc:	cmp	r0, #5
   244e0:	movw	r3, #45408	; 0xb160
   244e4:	movt	r3, #4
   244e8:	moveq	r3, r5
   244ec:	ldr	ip, [r5, #204]	; 0xcc
   244f0:	ldr	r9, [r2, #20]
   244f4:	tst	lr, #32
   244f8:	ldr	r8, [r2, #64]	; 0x40
   244fc:	beq	246c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dbc>
   24500:	ldr	r2, [r4, #112]	; 0x70
   24504:	ldr	r0, [r4, #116]	; 0x74
   24508:	subs	r6, r2, #1
   2450c:	sbc	r7, r0, #0
   24510:	cmp	r7, #0
   24514:	cmpeq	r6, #3
   24518:	bhi	2489c <__flatcc_fb_gen_c_json_parser@@Base+0x1f90>
   2451c:	add	r2, r1, r6, lsl #3
   24520:	add	r1, r1, r6, lsl #2
   24524:	ldrd	r6, [r2, #112]	; 0x70
   24528:	ldr	sl, [r1, #144]	; 0x90
   2452c:	ldr	fp, [r1, #160]	; 0xa0
   24530:	ldr	r2, [r4, #20]
   24534:	cmp	r2, #0
   24538:	bne	24554 <__flatcc_fb_gen_c_json_parser@@Base+0x1c48>
   2453c:	b	2458c <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   24540:	cmp	r1, #4
   24544:	beq	247b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   24548:	ldr	r2, [r2]
   2454c:	cmp	r2, #0
   24550:	beq	2458c <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   24554:	ldrh	r1, [r2, #56]	; 0x38
   24558:	cmp	r1, #5
   2455c:	beq	247b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   24560:	cmp	r1, #6
   24564:	bne	24540 <__flatcc_fb_gen_c_json_parser@@Base+0x1c34>
   24568:	ldrb	r0, [r2, #48]	; 0x30
   2456c:	mov	r1, #0
   24570:	ldr	r2, [r2]
   24574:	strd	r0, [sp, #16]
   24578:	ldr	r0, [sp, #16]
   2457c:	cmp	r2, #0
   24580:	bic	r0, r6, r0
   24584:	mov	r6, r0
   24588:	bne	24554 <__flatcc_fb_gen_c_json_parser@@Base+0x1c48>
   2458c:	add	r2, sp, #24
   24590:	mov	r0, ip
   24594:	str	r8, [sp]
   24598:	movw	r1, #25812	; 0x64d4
   2459c:	movt	r1, #5
   245a0:	bl	1406c <fprintf@plt>
   245a4:	mov	r1, r8
   245a8:	mov	r0, fp
   245ac:	bl	13f94 <strcmp@plt>
   245b0:	cmp	r0, #0
   245b4:	beq	24884 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   245b8:	movw	r1, #25068	; 0x61ec
   245bc:	movt	r1, #5
   245c0:	ldr	r0, [r5, #204]	; 0xcc
   245c4:	mov	r3, fp
   245c8:	mov	r2, fp
   245cc:	bl	1406c <fprintf@plt>
   245d0:	mov	r2, #54	; 0x36
   245d4:	mov	r1, #1
   245d8:	ldr	r3, [r5, #204]	; 0xcc
   245dc:	movw	r0, #25104	; 0x6210
   245e0:	movt	r0, #5
   245e4:	bl	13ff4 <fwrite@plt>
   245e8:	mov	r0, #10
   245ec:	ldr	r1, [r5, #204]	; 0xcc
   245f0:	bl	140cc <fputc@plt>
   245f4:	orrs	r3, r6, r7
   245f8:	bne	248b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fac>
   245fc:	movw	r0, #25260	; 0x62ac
   24600:	movt	r0, #5
   24604:	ldr	r3, [r5, #204]	; 0xcc
   24608:	mov	r2, #59	; 0x3b
   2460c:	mov	r1, #1
   24610:	bl	13ff4 <fwrite@plt>
   24614:	ldr	r4, [r4, #20]
   24618:	cmp	r4, #0
   2461c:	beq	24834 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   24620:	movw	r6, #25320	; 0x62e8
   24624:	movt	r6, #5
   24628:	b	24660 <__flatcc_fb_gen_c_json_parser@@Base+0x1d54>
   2462c:	ldrb	r2, [r4, #48]	; 0x30
   24630:	mov	r3, #0
   24634:	mov	r1, r6
   24638:	ldr	lr, [r4, #4]
   2463c:	ldr	ip, [lr, #4]
   24640:	ldr	r0, [r5, #204]	; 0xcc
   24644:	str	ip, [sp, #12]
   24648:	ldr	lr, [lr]
   2464c:	stm	sp, {sl, ip, lr}
   24650:	bl	1406c <fprintf@plt>
   24654:	ldr	r4, [r4]
   24658:	cmp	r4, #0
   2465c:	beq	24834 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   24660:	ldrh	r3, [r4, #56]	; 0x38
   24664:	cmp	r3, #5
   24668:	beq	24824 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   2466c:	cmp	r3, #6
   24670:	beq	2462c <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
   24674:	cmp	r3, #4
   24678:	beq	24824 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   2467c:	movw	r1, #25488	; 0x6390
   24680:	movt	r1, #5
   24684:	movw	r3, #49320	; 0xc0a8
   24688:	movt	r3, #6
   2468c:	movw	r2, #25400	; 0x6338
   24690:	movt	r2, #5
   24694:	str	r1, [sp]
   24698:	movw	r1, #4944	; 0x1350
   2469c:	movt	r1, #4
   246a0:	ldr	r0, [r3]
   246a4:	mov	r3, #134	; 0x86
   246a8:	bl	1406c <fprintf@plt>
   246ac:	movw	r1, #25400	; 0x6338
   246b0:	movt	r1, #5
   246b4:	ldr	r3, [pc, #544]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x1fd0>
   246b8:	movw	r0, #41608	; 0xa288
   246bc:	movt	r0, #4
   246c0:	mov	r2, #134	; 0x86
   246c4:	bl	14120 <__assert_fail@plt>
   246c8:	add	r2, sp, #24
   246cc:	mov	r0, ip
   246d0:	str	r8, [sp]
   246d4:	movw	r1, #25812	; 0x64d4
   246d8:	movt	r1, #5
   246dc:	bl	1406c <fprintf@plt>
   246e0:	movw	r0, #25884	; 0x651c
   246e4:	movt	r0, #5
   246e8:	ldr	r3, [r5, #204]	; 0xcc
   246ec:	mov	r2, #18
   246f0:	mov	r1, #1
   246f4:	bl	13ff4 <fwrite@plt>
   246f8:	ldr	r4, [r4, #20]
   246fc:	cmp	r4, #0
   24700:	beq	24800 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   24704:	movw	r8, #25548	; 0x63cc
   24708:	movt	r8, #5
   2470c:	movw	r7, #25684	; 0x6454
   24710:	movt	r7, #5
   24714:	movw	r6, #25616	; 0x6410
   24718:	movt	r6, #5
   2471c:	b	24750 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   24720:	ldr	ip, [r4, #4]
   24724:	mov	r1, r7
   24728:	ldrb	r2, [r4, #48]	; 0x30
   2472c:	ldr	r0, [r5, #204]	; 0xcc
   24730:	ldr	r3, [ip, #4]
   24734:	str	r3, [sp, #4]
   24738:	ldr	ip, [ip]
   2473c:	str	ip, [sp]
   24740:	bl	1406c <fprintf@plt>
   24744:	ldr	r4, [r4]
   24748:	cmp	r4, #0
   2474c:	beq	24800 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   24750:	ldrh	r3, [r4, #56]	; 0x38
   24754:	cmp	r3, #5
   24758:	beq	247d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec4>
   2475c:	cmp	r3, #6
   24760:	beq	24720 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   24764:	cmp	r3, #4
   24768:	beq	24818 <__flatcc_fb_gen_c_json_parser@@Base+0x1f0c>
   2476c:	movw	r1, #25488	; 0x6390
   24770:	movt	r1, #5
   24774:	movw	r3, #49320	; 0xc0a8
   24778:	movt	r3, #6
   2477c:	movw	r2, #25400	; 0x6338
   24780:	movt	r2, #5
   24784:	str	r1, [sp]
   24788:	movw	r1, #4944	; 0x1350
   2478c:	movt	r1, #4
   24790:	ldr	r0, [r3]
   24794:	mov	r3, #157	; 0x9d
   24798:	bl	1406c <fprintf@plt>
   2479c:	movw	r1, #25400	; 0x6338
   247a0:	movt	r1, #5
   247a4:	ldr	r3, [pc, #304]	; 248dc <__flatcc_fb_gen_c_json_parser@@Base+0x1fd0>
   247a8:	movw	r0, #41608	; 0xa288
   247ac:	movt	r0, #4
   247b0:	mov	r2, #157	; 0x9d
   247b4:	bl	14120 <__assert_fail@plt>
   247b8:	ldrd	r0, [r2, #48]	; 0x30
   247bc:	bic	r0, r6, r0
   247c0:	bic	r1, r7, r1
   247c4:	mov	r6, r0
   247c8:	mov	r7, r1
   247cc:	b	24548 <__flatcc_fb_gen_c_json_parser@@Base+0x1c3c>
   247d0:	ldr	lr, [r4, #4]
   247d4:	mov	r1, r8
   247d8:	ldr	ip, [lr, #4]
   247dc:	ldrd	r2, [r4, #48]	; 0x30
   247e0:	ldr	r0, [r5, #204]	; 0xcc
   247e4:	str	ip, [sp, #8]
   247e8:	ldr	lr, [lr]
   247ec:	stm	sp, {ip, lr}
   247f0:	bl	1406c <fprintf@plt>
   247f4:	ldr	r4, [r4]
   247f8:	cmp	r4, #0
   247fc:	bne	24750 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   24800:	mov	r2, r9
   24804:	movw	r1, #25752	; 0x6498
   24808:	movt	r1, #5
   2480c:	ldr	r0, [r5, #204]	; 0xcc
   24810:	bl	1406c <fprintf@plt>
   24814:	b	2484c <__flatcc_fb_gen_c_json_parser@@Base+0x1f40>
   24818:	mov	r1, r6
   2481c:	ldr	lr, [r4, #4]
   24820:	b	247d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ecc>
   24824:	mov	r1, r6
   24828:	ldr	lr, [r4, #4]
   2482c:	ldrd	r2, [r4, #48]	; 0x30
   24830:	b	2463c <__flatcc_fb_gen_c_json_parser@@Base+0x1d30>
   24834:	movw	r0, #25260	; 0x62ac
   24838:	movt	r0, #5
   2483c:	ldr	r3, [r5, #204]	; 0xcc
   24840:	mov	r2, #59	; 0x3b
   24844:	mov	r1, #1
   24848:	bl	13ff4 <fwrite@plt>
   2484c:	ldr	r3, [r5, #204]	; 0xcc
   24850:	mov	r2, #3
   24854:	mov	r1, #1
   24858:	movw	r0, #13060	; 0x3304
   2485c:	movt	r0, #5
   24860:	bl	13ff4 <fwrite@plt>
   24864:	mov	r0, #0
   24868:	add	sp, sp, #468	; 0x1d4
   2486c:	ldrd	r4, [sp]
   24870:	ldrd	r6, [sp, #8]
   24874:	ldrd	r8, [sp, #16]
   24878:	ldrd	sl, [sp, #24]
   2487c:	add	sp, sp, #32
   24880:	pop	{pc}		; (ldr pc, [sp], #4)
   24884:	mov	r2, fp
   24888:	movw	r1, #25088	; 0x6200
   2488c:	movt	r1, #5
   24890:	ldr	r0, [r5, #204]	; 0xcc
   24894:	bl	1406c <fprintf@plt>
   24898:	b	245d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc4>
   2489c:	movw	fp, #35616	; 0x8b20
   248a0:	movt	fp, #4
   248a4:	movw	sl, #25064	; 0x61e8
   248a8:	movt	sl, #5
   248ac:	mvn	r6, #0
   248b0:	mvn	r7, #0
   248b4:	b	24530 <__flatcc_fb_gen_c_json_parser@@Base+0x1c24>
   248b8:	mov	r2, r6
   248bc:	mov	r3, r7
   248c0:	str	r9, [sp]
   248c4:	movw	r1, #25160	; 0x6248
   248c8:	movt	r1, #5
   248cc:	ldr	r0, [r5, #204]	; 0xcc
   248d0:	bl	1406c <fprintf@plt>
   248d4:	b	245fc <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   248d8:	bl	24414 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
   248dc:	muleq	r5, r8, r1
   248e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   248e4:	mov	r2, #220	; 0xdc
   248e8:	mov	r4, r1
   248ec:	strd	r6, [sp, #8]
   248f0:	mov	r5, r0
   248f4:	mov	r1, #0
   248f8:	str	r8, [sp, #16]
   248fc:	str	lr, [sp, #20]
   24900:	sub	sp, sp, #448	; 0x1c0
   24904:	add	r0, sp, #8
   24908:	bl	14084 <memset@plt>
   2490c:	mov	r2, #220	; 0xdc
   24910:	mov	r1, #0
   24914:	add	r0, sp, #228	; 0xe4
   24918:	bl	14084 <memset@plt>
   2491c:	mov	r1, r4
   24920:	add	r2, sp, #8
   24924:	ldr	r0, [r4, #12]
   24928:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   2492c:	add	r2, sp, #8
   24930:	movw	r1, #25904	; 0x6530
   24934:	movt	r1, #5
   24938:	ldr	r0, [r5]
   2493c:	bl	1406c <fprintf@plt>
   24940:	ldr	r4, [r4, #20]
   24944:	cmp	r4, #0
   24948:	beq	24a2c <__flatcc_fb_gen_c_json_parser@@Base+0x2120>
   2494c:	movw	r6, #26280	; 0x66a8
   24950:	movt	r6, #5
   24954:	movw	r8, #26036	; 0x65b4
   24958:	movt	r8, #5
   2495c:	movw	r7, #26136	; 0x6618
   24960:	movt	r7, #5
   24964:	b	249a8 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   24968:	ldr	r1, [r4, #16]
   2496c:	add	r2, sp, #228	; 0xe4
   24970:	ldr	r0, [r1, #12]
   24974:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   24978:	ldr	r3, [r4, #16]
   2497c:	ldrh	r3, [r3, #8]
   24980:	cmp	r3, #0
   24984:	bne	24a78 <__flatcc_fb_gen_c_json_parser@@Base+0x216c>
   24988:	add	r3, sp, #228	; 0xe4
   2498c:	mov	r1, r8
   24990:	ldr	r0, [r5]
   24994:	ldr	r2, [r4, #48]	; 0x30
   24998:	bl	1406c <fprintf@plt>
   2499c:	ldr	r4, [r4]
   249a0:	cmp	r4, #0
   249a4:	beq	24a2c <__flatcc_fb_gen_c_json_parser@@Base+0x2120>
   249a8:	ldrh	r3, [r4, #24]
   249ac:	cmp	r3, #10
   249b0:	beq	24a10 <__flatcc_fb_gen_c_json_parser@@Base+0x2104>
   249b4:	cmp	r3, #14
   249b8:	beq	24968 <__flatcc_fb_gen_c_json_parser@@Base+0x205c>
   249bc:	cmp	r3, #0
   249c0:	beq	2499c <__flatcc_fb_gen_c_json_parser@@Base+0x2090>
   249c4:	movw	r1, #26240	; 0x6680
   249c8:	movt	r1, #5
   249cc:	movw	r3, #49320	; 0xc0a8
   249d0:	movt	r3, #6
   249d4:	movw	r2, #25400	; 0x6338
   249d8:	movt	r2, #5
   249dc:	str	r1, [sp]
   249e0:	movw	r1, #4944	; 0x1350
   249e4:	movt	r1, #4
   249e8:	ldr	r0, [r3]
   249ec:	mov	r3, #251	; 0xfb
   249f0:	bl	1406c <fprintf@plt>
   249f4:	movw	r1, #25400	; 0x6338
   249f8:	movt	r1, #5
   249fc:	ldr	r3, [pc, #224]	; 24ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   24a00:	movw	r0, #41608	; 0xa288
   24a04:	movt	r0, #4
   24a08:	mov	r2, #251	; 0xfb
   24a0c:	bl	14120 <__assert_fail@plt>
   24a10:	mov	r1, r6
   24a14:	ldr	r0, [r5]
   24a18:	ldr	r2, [r4, #48]	; 0x30
   24a1c:	bl	1406c <fprintf@plt>
   24a20:	ldr	r4, [r4]
   24a24:	cmp	r4, #0
   24a28:	bne	249a8 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   24a2c:	mov	r2, #28
   24a30:	mov	r1, #1
   24a34:	ldr	r3, [r5]
   24a38:	movw	r0, #26360	; 0x66f8
   24a3c:	movt	r0, #5
   24a40:	bl	13ff4 <fwrite@plt>
   24a44:	ldr	r3, [r5]
   24a48:	mov	r2, #9
   24a4c:	mov	r1, #1
   24a50:	movw	r0, #26392	; 0x6718
   24a54:	movt	r0, #5
   24a58:	bl	13ff4 <fwrite@plt>
   24a5c:	mov	r0, #0
   24a60:	add	sp, sp, #448	; 0x1c0
   24a64:	ldrd	r4, [sp]
   24a68:	ldrd	r6, [sp, #8]
   24a6c:	ldr	r8, [sp, #16]
   24a70:	add	sp, sp, #20
   24a74:	pop	{pc}		; (ldr pc, [sp], #4)
   24a78:	cmp	r3, #1
   24a7c:	bne	24a98 <__flatcc_fb_gen_c_json_parser@@Base+0x218c>
   24a80:	add	r3, sp, #228	; 0xe4
   24a84:	mov	r1, r7
   24a88:	ldr	r0, [r5]
   24a8c:	ldr	r2, [r4, #48]	; 0x30
   24a90:	bl	1406c <fprintf@plt>
   24a94:	b	2499c <__flatcc_fb_gen_c_json_parser@@Base+0x2090>
   24a98:	movw	r1, #26240	; 0x6680
   24a9c:	movt	r1, #5
   24aa0:	movw	r3, #49320	; 0xc0a8
   24aa4:	movt	r3, #6
   24aa8:	movw	r2, #25400	; 0x6338
   24aac:	movt	r2, #5
   24ab0:	str	r1, [sp]
   24ab4:	movw	r1, #4944	; 0x1350
   24ab8:	movt	r1, #4
   24abc:	ldr	r0, [r3]
   24ac0:	mov	r3, #240	; 0xf0
   24ac4:	bl	1406c <fprintf@plt>
   24ac8:	movw	r1, #25400	; 0x6338
   24acc:	movt	r1, #5
   24ad0:	ldr	r3, [pc, #12]	; 24ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   24ad4:	movw	r0, #41608	; 0xa288
   24ad8:	movt	r0, #4
   24adc:	mov	r2, #240	; 0xf0
   24ae0:	bl	14120 <__assert_fail@plt>
   24ae4:			; <UNDEFINED> instruction: 0x000561b0
   24ae8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24aec:	mov	r2, #220	; 0xdc
   24af0:	mov	r4, r1
   24af4:	strd	r6, [sp, #8]
   24af8:	mov	r1, #0
   24afc:	mov	r6, r0
   24b00:	strd	r8, [sp, #16]
   24b04:	strd	sl, [sp, #24]
   24b08:	str	lr, [sp, #32]
   24b0c:	sub	sp, sp, #476	; 0x1dc
   24b10:	add	r0, sp, #32
   24b14:	add	r7, sp, #252	; 0xfc
   24b18:	bl	14084 <memset@plt>
   24b1c:	mov	r2, #220	; 0xdc
   24b20:	mov	r1, #0
   24b24:	mov	r0, r7
   24b28:	bl	14084 <memset@plt>
   24b2c:	mov	r1, r4
   24b30:	add	r2, sp, #32
   24b34:	ldr	r0, [r4, #12]
   24b38:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   24b3c:	add	r2, sp, #32
   24b40:	movw	r1, #26404	; 0x6724
   24b44:	movt	r1, #5
   24b48:	ldr	r0, [r6]
   24b4c:	bl	1406c <fprintf@plt>
   24b50:	ldr	r4, [r4, #20]
   24b54:	cmp	r4, #0
   24b58:	beq	24c80 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   24b5c:	movw	r3, #26660	; 0x6824
   24b60:	movt	r3, #5
   24b64:	movw	r8, #24808	; 0x60e8
   24b68:	movt	r8, #5
   24b6c:	movw	r9, #26484	; 0x6774
   24b70:	movt	r9, #5
   24b74:	str	r3, [sp, #28]
   24b78:	mov	r5, #0
   24b7c:	b	24c10 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   24b80:	cmp	r3, #14
   24b84:	bne	24c00 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   24b88:	ldr	r1, [r4, #16]
   24b8c:	mov	r2, r7
   24b90:	ldr	r0, [r1, #12]
   24b94:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   24b98:	ldr	r2, [r4, #16]
   24b9c:	ldrh	r3, [r2, #8]
   24ba0:	cmp	r3, #1
   24ba4:	beq	24cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   24ba8:	cmp	r3, #3
   24bac:	bne	24c00 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   24bb0:	ldr	r3, [r2, #40]	; 0x28
   24bb4:	sub	r3, r3, #1
   24bb8:	cmp	r3, #10
   24bbc:	bhi	24d58 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   24bc0:	ldr	ip, [r4, #4]
   24bc4:	add	r2, r8, r3, lsl #2
   24bc8:	movw	r1, #26560	; 0x67c0
   24bcc:	movt	r1, #5
   24bd0:	mov	r3, r5
   24bd4:	ldr	r2, [r2, #20]
   24bd8:	ldr	lr, [ip, #4]
   24bdc:	str	r7, [sp, #20]
   24be0:	ldr	r0, [r6]
   24be4:	str	lr, [sp, #16]
   24be8:	ldr	ip, [ip]
   24bec:	str	lr, [sp, #8]
   24bf0:	str	ip, [sp, #12]
   24bf4:	ldrd	sl, [r4, #80]	; 0x50
   24bf8:	strd	sl, [sp]
   24bfc:	bl	1406c <fprintf@plt>
   24c00:	ldr	r4, [r4]
   24c04:	add	r5, r5, #1
   24c08:	cmp	r4, #0
   24c0c:	beq	24c80 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   24c10:	ldrh	r3, [r4, #72]	; 0x48
   24c14:	tst	r3, #4
   24c18:	bne	24c00 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   24c1c:	ldrh	r3, [r4, #24]
   24c20:	cmp	r3, #8
   24c24:	bne	24b80 <__flatcc_fb_gen_c_json_parser@@Base+0x2274>
   24c28:	ldr	r3, [r4, #16]
   24c2c:	sub	r3, r3, #1
   24c30:	cmp	r3, #10
   24c34:	bhi	24d08 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   24c38:	ldr	ip, [r4, #4]
   24c3c:	add	r2, r8, r3, lsl #2
   24c40:	mov	r1, r9
   24c44:	mov	r3, r5
   24c48:	add	r5, r5, #1
   24c4c:	ldr	r0, [r6]
   24c50:	ldr	r2, [r2, #20]
   24c54:	ldr	lr, [ip, #4]
   24c58:	str	lr, [sp, #16]
   24c5c:	ldr	ip, [ip]
   24c60:	str	lr, [sp, #8]
   24c64:	str	ip, [sp, #12]
   24c68:	ldrd	sl, [r4, #80]	; 0x50
   24c6c:	strd	sl, [sp]
   24c70:	bl	1406c <fprintf@plt>
   24c74:	ldr	r4, [r4]
   24c78:	cmp	r4, #0
   24c7c:	bne	24c10 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   24c80:	mov	r2, #3
   24c84:	mov	r1, #1
   24c88:	ldr	r3, [r6]
   24c8c:	movw	r0, #13060	; 0x3304
   24c90:	movt	r0, #5
   24c94:	bl	13ff4 <fwrite@plt>
   24c98:	add	r3, sp, #32
   24c9c:	movw	r1, #26764	; 0x688c
   24ca0:	movt	r1, #5
   24ca4:	mov	r2, r3
   24ca8:	ldr	r0, [r6]
   24cac:	bl	1406c <fprintf@plt>
   24cb0:	mov	r0, #0
   24cb4:	add	sp, sp, #476	; 0x1dc
   24cb8:	ldrd	r4, [sp]
   24cbc:	ldrd	r6, [sp, #8]
   24cc0:	ldrd	r8, [sp, #16]
   24cc4:	ldrd	sl, [sp, #24]
   24cc8:	add	sp, sp, #32
   24ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   24cd0:	ldr	ip, [r4, #4]
   24cd4:	mov	r2, r5
   24cd8:	ldr	r0, [r6]
   24cdc:	ldr	r1, [sp, #28]
   24ce0:	ldr	r3, [ip, #4]
   24ce4:	str	r3, [sp, #16]
   24ce8:	str	r7, [sp, #20]
   24cec:	ldr	ip, [ip]
   24cf0:	str	r3, [sp, #8]
   24cf4:	str	ip, [sp, #12]
   24cf8:	ldrd	sl, [r4, #80]	; 0x50
   24cfc:	strd	sl, [sp]
   24d00:	bl	1406c <fprintf@plt>
   24d04:	b	24c00 <__flatcc_fb_gen_c_json_parser@@Base+0x22f4>
   24d08:	movw	r1, #4956	; 0x135c
   24d0c:	movt	r1, #4
   24d10:	movw	r3, #49320	; 0xc0a8
   24d14:	movt	r3, #6
   24d18:	movw	r2, #4868	; 0x1304
   24d1c:	movt	r2, #4
   24d20:	str	r1, [sp]
   24d24:	movw	r1, #4944	; 0x1350
   24d28:	movt	r1, #4
   24d2c:	ldr	r0, [r3]
   24d30:	mov	r3, #96	; 0x60
   24d34:	bl	1406c <fprintf@plt>
   24d38:	movw	r3, #24808	; 0x60e8
   24d3c:	movt	r3, #5
   24d40:	movw	r1, #4868	; 0x1304
   24d44:	movt	r1, #4
   24d48:	movw	r0, #41608	; 0xa288
   24d4c:	movt	r0, #4
   24d50:	mov	r2, #96	; 0x60
   24d54:	bl	14120 <__assert_fail@plt>
   24d58:	bl	24414 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
   24d5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24d60:	mov	r2, #220	; 0xdc
   24d64:	strd	r6, [sp, #8]
   24d68:	strd	r8, [sp, #16]
   24d6c:	mov	r9, r1
   24d70:	mov	r8, r0
   24d74:	strd	sl, [sp, #24]
   24d78:	mov	r1, #0
   24d7c:	str	lr, [sp, #32]
   24d80:	sub	sp, sp, #500	; 0x1f4
   24d84:	add	r0, sp, #56	; 0x38
   24d88:	bl	14084 <memset@plt>
   24d8c:	mov	r2, #220	; 0xdc
   24d90:	mov	r1, #0
   24d94:	add	r0, sp, #276	; 0x114
   24d98:	bl	14084 <memset@plt>
   24d9c:	add	r2, sp, #56	; 0x38
   24da0:	mov	r1, r9
   24da4:	ldr	r0, [r9, #12]
   24da8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   24dac:	ldrd	r4, [r9, #96]	; 0x60
   24db0:	mov	r1, #4
   24db4:	mov	r0, r4
   24db8:	bl	13f7c <calloc@plt>
   24dbc:	orrs	r3, r4, r5
   24dc0:	str	r0, [sp, #44]	; 0x2c
   24dc4:	movne	r3, #1
   24dc8:	moveq	r3, #0
   24dcc:	cmp	r0, #0
   24dd0:	movne	r3, #0
   24dd4:	cmp	r3, #0
   24dd8:	bne	25384 <__flatcc_fb_gen_c_json_parser@@Base+0x2a78>
   24ddc:	ldr	r3, [r9, #20]
   24de0:	cmp	r3, #0
   24de4:	movne	r2, r0
   24de8:	movne	r1, r2
   24dec:	beq	24e04 <__flatcc_fb_gen_c_json_parser@@Base+0x24f8>
   24df0:	ldr	r2, [r3, #96]	; 0x60
   24df4:	str	r3, [r1, r2, lsl #2]
   24df8:	ldr	r3, [r3]
   24dfc:	cmp	r3, #0
   24e00:	bne	24df0 <__flatcc_fb_gen_c_json_parser@@Base+0x24e4>
   24e04:	movw	r1, #27024	; 0x6990
   24e08:	movt	r1, #5
   24e0c:	ldr	r0, [r8]
   24e10:	add	r2, sp, #56	; 0x38
   24e14:	bl	1406c <fprintf@plt>
   24e18:	ldrd	r0, [r9, #96]	; 0x60
   24e1c:	orrs	r3, r0, r1
   24e20:	beq	25330 <__flatcc_fb_gen_c_json_parser@@Base+0x2a24>
   24e24:	movw	r2, #28676	; 0x7004
   24e28:	movt	r2, #5
   24e2c:	ldr	r3, [r8]
   24e30:	movw	sl, #27132	; 0x69fc
   24e34:	movt	sl, #5
   24e38:	mov	r4, #0
   24e3c:	mov	r5, #0
   24e40:	str	r2, [sp, #48]	; 0x30
   24e44:	movw	r2, #28576	; 0x6fa0
   24e48:	movt	r2, #5
   24e4c:	str	sl, [sp, #40]	; 0x28
   24e50:	str	r2, [sp, #52]	; 0x34
   24e54:	ldr	r2, [sp, #44]	; 0x2c
   24e58:	sub	r7, r2, #4
   24e5c:	ldr	r6, [r7, #4]!
   24e60:	cmp	r6, #0
   24e64:	beq	24f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24e68:	ldrh	r2, [r6, #72]	; 0x48
   24e6c:	tst	r2, #4
   24e70:	bne	24f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24e74:	mov	r2, #5
   24e78:	mov	r1, #1
   24e7c:	ldr	r0, [sp, #40]	; 0x28
   24e80:	bl	13ff4 <fwrite@plt>
   24e84:	ldrh	r3, [r6, #24]
   24e88:	sub	r3, r3, #7
   24e8c:	cmp	r3, #8
   24e90:	ldrls	pc, [pc, r3, lsl #2]
   24e94:	b	24f54 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   24e98:	andeq	r5, r2, r4, lsr #32
   24e9c:	andeq	r4, r2, r0, ror #31
   24ea0:	ldrdeq	r4, [r2], -r0
   24ea4:	andeq	r4, r2, ip, lsr #30
   24ea8:	andeq	r4, r2, r4, asr pc
   24eac:	andeq	r4, r2, r4, asr pc
   24eb0:	andeq	r4, r2, r4, asr pc
   24eb4:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24eb8:			; <UNDEFINED> instruction: 0x00024ebc
   24ebc:	ldr	r1, [r6, #16]
   24ec0:	add	r2, sp, #276	; 0x114
   24ec4:	ldr	r0, [r1, #12]
   24ec8:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   24ecc:	ldr	r3, [r6, #16]
   24ed0:	ldrh	r3, [r3, #8]
   24ed4:	cmp	r3, #4
   24ed8:	ldrls	pc, [pc, r3, lsl #2]
   24edc:	b	25338 <__flatcc_fb_gen_c_json_parser@@Base+0x2a2c>
   24ee0:	strdeq	r5, [r2], -r4
   24ee4:			; <UNDEFINED> instruction: 0x000251b8
   24ee8:	andeq	r5, r2, r8, lsr r3
   24eec:	andeq	r5, r2, r4, asr r1
   24ef0:	andeq	r5, r2, r0, lsr #2
   24ef4:	ldr	r1, [r6, #16]
   24ef8:	add	r2, sp, #276	; 0x114
   24efc:	ldr	r0, [r1, #12]
   24f00:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   24f04:	ldr	r2, [r6, #16]
   24f08:	ldrh	r3, [r2, #8]
   24f0c:	cmp	r3, #4
   24f10:	ldrls	pc, [pc, r3, lsl #2]
   24f14:	b	25470 <__flatcc_fb_gen_c_json_parser@@Base+0x2b64>
   24f18:	muleq	r2, r4, r2
   24f1c:	andeq	r5, r2, r4, lsl #5
   24f20:	andeq	r5, r2, r0, ror r4
   24f24:	andeq	r5, r2, r4, lsl r2
   24f28:	andeq	r5, r2, r4, lsl #4
   24f2c:	ldr	lr, [r6, #4]
   24f30:	movw	r1, #27672	; 0x6c18
   24f34:	movt	r1, #5
   24f38:	ldr	ip, [lr, #4]
   24f3c:	ldr	r0, [r8]
   24f40:	ldrd	r2, [r6, #96]	; 0x60
   24f44:	str	ip, [sp, #8]
   24f48:	ldr	lr, [lr]
   24f4c:	stm	sp, {ip, lr}
   24f50:	bl	1406c <fprintf@plt>
   24f54:	ldr	r3, [r8]
   24f58:	ldrd	r0, [r9, #96]	; 0x60
   24f5c:	adds	r4, r4, #1
   24f60:	adc	r5, r5, #0
   24f64:	cmp	r5, r1
   24f68:	cmpeq	r4, r0
   24f6c:	bcc	24e5c <__flatcc_fb_gen_c_json_parser@@Base+0x2550>
   24f70:	mov	r2, #4
   24f74:	mov	r1, #1
   24f78:	movw	r0, #29072	; 0x7190
   24f7c:	movt	r0, #5
   24f80:	bl	13ff4 <fwrite@plt>
   24f84:	add	r3, sp, #56	; 0x38
   24f88:	movw	r1, #28864	; 0x70c0
   24f8c:	movt	r1, #5
   24f90:	mov	r2, r3
   24f94:	ldr	r0, [r8]
   24f98:	bl	1406c <fprintf@plt>
   24f9c:	ldr	r3, [sp, #44]	; 0x2c
   24fa0:	cmp	r3, #0
   24fa4:	beq	24fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x26a4>
   24fa8:	mov	r0, r3
   24fac:	bl	13fac <free@plt>
   24fb0:	mov	r0, #0
   24fb4:	add	sp, sp, #500	; 0x1f4
   24fb8:	ldrd	r4, [sp]
   24fbc:	ldrd	r6, [sp, #8]
   24fc0:	ldrd	r8, [sp, #16]
   24fc4:	ldrd	sl, [sp, #24]
   24fc8:	add	sp, sp, #32
   24fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   24fd0:	movw	r1, #27736	; 0x6c58
   24fd4:	movt	r1, #5
   24fd8:	ldr	lr, [r6, #4]
   24fdc:	b	24f38 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   24fe0:	ldr	r3, [r6, #16]
   24fe4:	sub	r2, r3, #1
   24fe8:	cmp	r2, #10
   24fec:	bhi	25420 <__flatcc_fb_gen_c_json_parser@@Base+0x2b14>
   24ff0:	ldrh	r1, [r6, #56]	; 0x38
   24ff4:	movw	r3, #24808	; 0x60e8
   24ff8:	movt	r3, #5
   24ffc:	add	r3, r3, r2, lsl #2
   25000:	ldr	r2, [r3, #20]
   25004:	sub	r3, r1, #3
   25008:	cmp	r3, #3
   2500c:	ldrls	pc, [pc, r3, lsl #2]
   25010:	b	254bc <__flatcc_fb_gen_c_json_parser@@Base+0x2bb0>
   25014:	ldrdeq	r5, [r2], -ip
   25018:	andeq	r5, r2, ip, asr #1
   2501c:	muleq	r2, r0, r0
   25020:	muleq	r2, r0, r0
   25024:	ldrh	r3, [r6, #72]	; 0x48
   25028:	tst	r3, #3072	; 0xc00
   2502c:	bne	252a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2998>
   25030:	ldr	r1, [r6, #104]	; 0x68
   25034:	cmp	r1, #0
   25038:	beq	252c4 <__flatcc_fb_gen_c_json_parser@@Base+0x29b8>
   2503c:	add	r2, sp, #276	; 0x114
   25040:	ldr	r0, [r1, #12]
   25044:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   25048:	ldr	lr, [r6, #4]
   2504c:	ldr	r3, [r6, #104]	; 0x68
   25050:	ldrh	r3, [r3, #8]
   25054:	cmp	r3, #0
   25058:	movweq	r1, #27412	; 0x6b14
   2505c:	movwne	r1, #27508	; 0x6b74
   25060:	movteq	r1, #5
   25064:	movtne	r1, #5
   25068:	ldr	ip, [lr, #4]
   2506c:	add	r0, sp, #276	; 0x114
   25070:	ldrd	r2, [r6, #96]	; 0x60
   25074:	str	r0, [sp, #12]
   25078:	ldr	r0, [r8]
   2507c:	str	ip, [sp, #8]
   25080:	ldr	lr, [lr]
   25084:	stm	sp, {ip, lr}
   25088:	bl	1406c <fprintf@plt>
   2508c:	b	24f54 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   25090:	ldr	r3, [r6, #4]
   25094:	movw	r1, #27140	; 0x6a04
   25098:	movt	r1, #5
   2509c:	ldr	ip, [r3, #4]
   250a0:	ldrd	sl, [r6, #48]	; 0x30
   250a4:	strd	sl, [sp, #24]
   250a8:	ldr	r0, [r8]
   250ac:	str	ip, [sp, #16]
   250b0:	ldr	r3, [r3]
   250b4:	str	ip, [sp, #8]
   250b8:	str	r3, [sp, #12]
   250bc:	ldrd	sl, [r6, #96]	; 0x60
   250c0:	strd	sl, [sp]
   250c4:	bl	1406c <fprintf@plt>
   250c8:	b	24f54 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   250cc:	movw	r1, #27204	; 0x6a44
   250d0:	movt	r1, #5
   250d4:	ldr	r3, [r6, #4]
   250d8:	b	2509c <__flatcc_fb_gen_c_json_parser@@Base+0x2790>
   250dc:	ldr	ip, [r6, #4]
   250e0:	movw	r1, #27268	; 0x6a84
   250e4:	movt	r1, #5
   250e8:	vldr	d7, [r6, #48]	; 0x30
   250ec:	ldr	r3, [ip, #4]
   250f0:	vstr	d7, [sp, #24]
   250f4:	ldr	r0, [r8]
   250f8:	str	r3, [sp, #16]
   250fc:	ldr	ip, [ip]
   25100:	str	r3, [sp, #8]
   25104:	str	ip, [sp, #12]
   25108:	ldrd	sl, [r6, #96]	; 0x60
   2510c:	strd	sl, [sp]
   25110:	bl	1406c <fprintf@plt>
   25114:	ldr	r3, [r8]
   25118:	ldrd	r0, [r9, #96]	; 0x60
   2511c:	b	24f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   25120:	ldr	lr, [r6, #4]
   25124:	ldr	r1, [sp, #48]	; 0x30
   25128:	add	r0, sp, #276	; 0x114
   2512c:	ldr	ip, [lr, #4]
   25130:	ldrd	r2, [r6, #96]	; 0x60
   25134:	str	r0, [sp, #12]
   25138:	str	r0, [sp, #16]
   2513c:	ldr	r0, [r8]
   25140:	str	ip, [sp, #8]
   25144:	ldr	lr, [lr]
   25148:	stm	sp, {ip, lr}
   2514c:	bl	1406c <fprintf@plt>
   25150:	b	24f54 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   25154:	ldr	r3, [r6, #16]
   25158:	sub	r2, r3, #1
   2515c:	cmp	r2, #10
   25160:	bhi	2541c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   25164:	ldr	ip, [r6, #4]
   25168:	movw	r3, #24808	; 0x60e8
   2516c:	movt	r3, #5
   25170:	add	r3, r3, r2, lsl #2
   25174:	add	r0, sp, #276	; 0x114
   25178:	movw	r1, #28480	; 0x6f40
   2517c:	movt	r1, #5
   25180:	ldrd	sl, [r9, #112]	; 0x70
   25184:	ldr	r2, [r3, #20]
   25188:	ldr	r3, [ip, #4]
   2518c:	strd	sl, [sp, #24]
   25190:	str	r0, [sp, #32]
   25194:	ldr	r0, [r8]
   25198:	str	r3, [sp, #16]
   2519c:	ldr	ip, [ip]
   251a0:	str	r3, [sp, #8]
   251a4:	str	ip, [sp, #12]
   251a8:	ldrd	sl, [r6, #96]	; 0x60
   251ac:	strd	sl, [sp]
   251b0:	bl	1406c <fprintf@plt>
   251b4:	b	24f54 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   251b8:	ldr	ip, [r6, #4]
   251bc:	add	lr, sp, #276	; 0x114
   251c0:	ldrd	r2, [r6, #96]	; 0x60
   251c4:	ldr	r1, [sp, #52]	; 0x34
   251c8:	ldr	r0, [ip, #4]
   251cc:	str	lr, [sp, #24]
   251d0:	ldrd	sl, [r6, #88]	; 0x58
   251d4:	str	r0, [sp, #8]
   251d8:	strd	sl, [sp, #16]
   251dc:	ldr	ip, [ip]
   251e0:	str	r0, [sp]
   251e4:	ldr	r0, [r8]
   251e8:	str	ip, [sp, #4]
   251ec:	bl	1406c <fprintf@plt>
   251f0:	b	24f54 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   251f4:	movw	r1, #28388	; 0x6ee4
   251f8:	movt	r1, #5
   251fc:	ldr	lr, [r6, #4]
   25200:	b	25068 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   25204:	movw	r1, #28216	; 0x6e38
   25208:	movt	r1, #5
   2520c:	ldr	lr, [r6, #4]
   25210:	b	25128 <__flatcc_fb_gen_c_json_parser@@Base+0x281c>
   25214:	ldr	r3, [r2, #40]	; 0x28
   25218:	sub	r2, r3, #1
   2521c:	cmp	r2, #10
   25220:	bhi	2541c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   25224:	ldrh	r1, [r6, #56]	; 0x38
   25228:	movw	r3, #24808	; 0x60e8
   2522c:	movt	r3, #5
   25230:	add	r3, r3, r2, lsl #2
   25234:	ldr	r2, [r3, #20]
   25238:	cmp	r1, #4
   2523c:	beq	25320 <__flatcc_fb_gen_c_json_parser@@Base+0x2a14>
   25240:	bcc	253d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac4>
   25244:	cmp	r1, #6
   25248:	bhi	253d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac4>
   2524c:	ldr	r3, [r6, #4]
   25250:	movw	r1, #27808	; 0x6ca0
   25254:	movt	r1, #5
   25258:	add	lr, sp, #276	; 0x114
   2525c:	ldr	r0, [r8]
   25260:	ldr	ip, [r3, #4]
   25264:	str	lr, [sp, #32]
   25268:	ldrd	sl, [r6, #48]	; 0x30
   2526c:	str	ip, [sp, #16]
   25270:	strd	sl, [sp, #24]
   25274:	ldr	r3, [r3]
   25278:	str	ip, [sp, #8]
   2527c:	str	r3, [sp, #12]
   25280:	b	251a8 <__flatcc_fb_gen_c_json_parser@@Base+0x289c>
   25284:	movw	r1, #28048	; 0x6d90
   25288:	movt	r1, #5
   2528c:	ldr	lr, [r6, #4]
   25290:	b	25068 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   25294:	movw	r1, #28132	; 0x6de4
   25298:	movt	r1, #5
   2529c:	ldr	lr, [r6, #4]
   252a0:	b	25068 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   252a4:	ldr	lr, [r6, #4]
   252a8:	eor	r3, r3, #1024	; 0x400
   252ac:	movw	r1, #27332	; 0x6ac4
   252b0:	movt	r1, #5
   252b4:	ubfx	r0, r3, #10, #1
   252b8:	ldrd	r2, [r6, #96]	; 0x60
   252bc:	ldr	ip, [lr, #4]
   252c0:	b	25074 <__flatcc_fb_gen_c_json_parser@@Base+0x2768>
   252c4:	ldr	r3, [r6, #16]
   252c8:	sub	r2, r3, #1
   252cc:	cmp	r2, #10
   252d0:	bhi	2541c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   252d4:	ldr	ip, [r6, #4]
   252d8:	movw	r3, #24808	; 0x60e8
   252dc:	movt	r3, #5
   252e0:	add	r3, r3, r2, lsl #2
   252e4:	movw	r1, #27604	; 0x6bd4
   252e8:	movt	r1, #5
   252ec:	ldr	r0, [r8]
   252f0:	ldr	r2, [r3, #20]
   252f4:	ldr	r3, [ip, #4]
   252f8:	str	r3, [sp, #16]
   252fc:	ldr	ip, [ip]
   25300:	str	r3, [sp, #8]
   25304:	str	ip, [sp, #12]
   25308:	ldrd	sl, [r6, #96]	; 0x60
   2530c:	strd	sl, [sp]
   25310:	bl	1406c <fprintf@plt>
   25314:	ldr	r3, [r8]
   25318:	ldrd	r0, [r9, #96]	; 0x60
   2531c:	b	24f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   25320:	movw	r1, #27900	; 0x6cfc
   25324:	movt	r1, #5
   25328:	ldr	r3, [r6, #4]
   2532c:	b	25258 <__flatcc_fb_gen_c_json_parser@@Base+0x294c>
   25330:	ldr	r3, [r8]
   25334:	b	24f70 <__flatcc_fb_gen_c_json_parser@@Base+0x2664>
   25338:	movw	r1, #28792	; 0x7078
   2533c:	movt	r1, #5
   25340:	movw	r3, #49320	; 0xc0a8
   25344:	movt	r3, #6
   25348:	movw	r2, #25400	; 0x6338
   2534c:	movt	r2, #5
   25350:	str	r1, [sp]
   25354:	movw	r1, #4944	; 0x1350
   25358:	movt	r1, #4
   2535c:	ldr	r0, [r3]
   25360:	movw	r3, #543	; 0x21f
   25364:	bl	1406c <fprintf@plt>
   25368:	movw	r1, #25400	; 0x6338
   2536c:	movt	r1, #5
   25370:	ldr	r3, [pc, #400]	; 25508 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   25374:	movw	r0, #41608	; 0xa288
   25378:	movt	r0, #4
   2537c:	movw	r2, #543	; 0x21f
   25380:	bl	14120 <__assert_fail@plt>
   25384:	movw	r1, #26980	; 0x6964
   25388:	movt	r1, #5
   2538c:	movw	r3, #49320	; 0xc0a8
   25390:	movt	r3, #6
   25394:	movw	r2, #25400	; 0x6338
   25398:	movt	r2, #5
   2539c:	str	r1, [sp]
   253a0:	movw	r1, #4944	; 0x1350
   253a4:	movt	r1, #4
   253a8:	ldr	r0, [r3]
   253ac:	movw	r3, #361	; 0x169
   253b0:	bl	1406c <fprintf@plt>
   253b4:	movw	r1, #25400	; 0x6338
   253b8:	movt	r1, #5
   253bc:	ldr	r3, [pc, #324]	; 25508 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   253c0:	movw	r0, #41608	; 0xa288
   253c4:	movt	r0, #4
   253c8:	movw	r2, #361	; 0x169
   253cc:	bl	14120 <__assert_fail@plt>
   253d0:	movw	r1, #27992	; 0x6d58
   253d4:	movt	r1, #5
   253d8:	movw	r3, #49320	; 0xc0a8
   253dc:	movt	r3, #6
   253e0:	movw	r2, #25400	; 0x6338
   253e4:	movt	r2, #5
   253e8:	str	r1, [sp]
   253ec:	movw	r1, #4944	; 0x1350
   253f0:	movt	r1, #4
   253f4:	ldr	r0, [r3]
   253f8:	movw	r3, #483	; 0x1e3
   253fc:	bl	1406c <fprintf@plt>
   25400:	movw	r1, #25400	; 0x6338
   25404:	movt	r1, #5
   25408:	ldr	r3, [pc, #248]	; 25508 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   2540c:	movw	r0, #41608	; 0xa288
   25410:	movt	r0, #4
   25414:	movw	r2, #483	; 0x1e3
   25418:	bl	14120 <__assert_fail@plt>
   2541c:	bl	24414 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
   25420:	movw	r1, #4956	; 0x135c
   25424:	movt	r1, #4
   25428:	movw	r3, #49320	; 0xc0a8
   2542c:	movt	r3, #6
   25430:	movw	r2, #4868	; 0x1304
   25434:	movt	r2, #4
   25438:	str	r1, [sp]
   2543c:	movw	r1, #4944	; 0x1350
   25440:	movt	r1, #4
   25444:	ldr	r0, [r3]
   25448:	mov	r3, #96	; 0x60
   2544c:	bl	1406c <fprintf@plt>
   25450:	movw	r3, #24808	; 0x60e8
   25454:	movt	r3, #5
   25458:	movw	r1, #4868	; 0x1304
   2545c:	movt	r1, #4
   25460:	movw	r0, #41608	; 0xa288
   25464:	movt	r0, #4
   25468:	mov	r2, #96	; 0x60
   2546c:	bl	14120 <__assert_fail@plt>
   25470:	movw	r1, #28324	; 0x6ea4
   25474:	movt	r1, #5
   25478:	movw	r3, #49320	; 0xc0a8
   2547c:	movt	r3, #6
   25480:	movw	r2, #25400	; 0x6338
   25484:	movt	r2, #5
   25488:	str	r1, [sp]
   2548c:	movw	r1, #4944	; 0x1350
   25490:	movt	r1, #4
   25494:	ldr	r0, [r3]
   25498:	mov	r3, #504	; 0x1f8
   2549c:	bl	1406c <fprintf@plt>
   254a0:	movw	r1, #25400	; 0x6338
   254a4:	movt	r1, #5
   254a8:	ldr	r3, [pc, #88]	; 25508 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   254ac:	movw	r0, #41608	; 0xa288
   254b0:	movt	r0, #4
   254b4:	mov	r2, #504	; 0x1f8
   254b8:	bl	14120 <__assert_fail@plt>
   254bc:	movw	r1, #19212	; 0x4b0c
   254c0:	movt	r1, #5
   254c4:	movw	r3, #49320	; 0xc0a8
   254c8:	movt	r3, #6
   254cc:	movw	r2, #25400	; 0x6338
   254d0:	movt	r2, #5
   254d4:	str	r1, [sp]
   254d8:	movw	r1, #4944	; 0x1350
   254dc:	movt	r1, #4
   254e0:	ldr	r0, [r3]
   254e4:	movw	r3, #406	; 0x196
   254e8:	bl	1406c <fprintf@plt>
   254ec:	movw	r1, #25400	; 0x6338
   254f0:	movt	r1, #5
   254f4:	ldr	r3, [pc, #12]	; 25508 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   254f8:	movw	r0, #41608	; 0xa288
   254fc:	movt	r0, #4
   25500:	movw	r2, #406	; 0x196
   25504:	bl	14120 <__assert_fail@plt>
   25508:	ldrdeq	r6, [r5], -r0

0002550c <__flatcc_fb_gen_c_json_printer@@Base>:
   2550c:	ldr	r3, [r0, #208]	; 0xd0
   25510:	movw	r1, #29080	; 0x7198
   25514:	movt	r1, #5
   25518:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2551c:	mov	r4, r0
   25520:	ldr	r0, [r0, #204]	; 0xcc
   25524:	ldr	r3, [r3, #164]	; 0xa4
   25528:	strd	r6, [sp, #8]
   2552c:	strd	r8, [sp, #16]
   25530:	strd	sl, [sp, #24]
   25534:	str	lr, [sp, #32]
   25538:	sub	sp, sp, #236	; 0xec
   2553c:	mov	r2, r3
   25540:	bl	1406c <fprintf@plt>
   25544:	mov	r2, #81	; 0x51
   25548:	mov	r1, #1
   2554c:	ldr	r3, [r4, #204]	; 0xcc
   25550:	movw	r0, #9724	; 0x25fc
   25554:	movt	r0, #4
   25558:	bl	13ff4 <fwrite@plt>
   2555c:	mov	r2, #40	; 0x28
   25560:	mov	r1, #1
   25564:	ldr	r3, [r4, #204]	; 0xcc
   25568:	movw	r0, #29136	; 0x71d0
   2556c:	movt	r0, #5
   25570:	bl	13ff4 <fwrite@plt>
   25574:	mov	r0, r4
   25578:	movw	r2, #29180	; 0x71fc
   2557c:	movt	r2, #5
   25580:	movw	r1, #4012	; 0xfac
   25584:	movt	r1, #4
   25588:	bl	16018 <__flatcc_fb_gen_c_includes@@Base>
   2558c:	ldr	r1, [r4, #204]	; 0xcc
   25590:	ldr	r3, [r4, #212]	; 0xd4
   25594:	ldr	r3, [r3, #140]	; 0x8c
   25598:	cmp	r3, #0
   2559c:	bne	258ec <__flatcc_fb_gen_c_json_printer@@Base+0x3e0>
   255a0:	mov	r0, #10
   255a4:	bl	140cc <fputc@plt>
   255a8:	ldr	r5, [r4, #208]	; 0xd0
   255ac:	mov	r2, #220	; 0xdc
   255b0:	add	r0, sp, #12
   255b4:	mov	r1, #0
   255b8:	ldr	r6, [r5, #52]	; 0x34
   255bc:	bl	14084 <memset@plt>
   255c0:	cmp	r6, #0
   255c4:	beq	255d4 <__flatcc_fb_gen_c_json_printer@@Base+0xc8>
   255c8:	ldrh	r3, [r6, #8]
   255cc:	cmp	r3, #1
   255d0:	bls	2592c <__flatcc_fb_gen_c_json_printer@@Base+0x420>
   255d4:	ldr	r5, [r5, #40]	; 0x28
   255d8:	cmp	r5, #0
   255dc:	beq	2566c <__flatcc_fb_gen_c_json_printer@@Base+0x160>
   255e0:	movw	r8, #30076	; 0x757c
   255e4:	movt	r8, #5
   255e8:	movw	r7, #29968	; 0x7510
   255ec:	movt	r7, #5
   255f0:	movw	r6, #29768	; 0x7448
   255f4:	movt	r6, #5
   255f8:	b	2562c <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   255fc:	cmp	r3, #4
   25600:	bne	25620 <__flatcc_fb_gen_c_json_printer@@Base+0x114>
   25604:	ldr	r0, [r5, #12]
   25608:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   2560c:	add	r3, sp, #12
   25610:	mov	r1, r6
   25614:	ldr	r0, [r4, #204]	; 0xcc
   25618:	mov	r2, r3
   2561c:	bl	1406c <fprintf@plt>
   25620:	ldr	r5, [r5]
   25624:	cmp	r5, #0
   25628:	beq	2566c <__flatcc_fb_gen_c_json_printer@@Base+0x160>
   2562c:	ldrh	r3, [r5, #8]
   25630:	add	r2, sp, #12
   25634:	mov	r1, r5
   25638:	cmp	r3, #1
   2563c:	beq	25868 <__flatcc_fb_gen_c_json_printer@@Base+0x35c>
   25640:	cmp	r3, #0
   25644:	bne	255fc <__flatcc_fb_gen_c_json_printer@@Base+0xf0>
   25648:	ldr	r0, [r5, #12]
   2564c:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   25650:	add	r2, sp, #12
   25654:	mov	r1, r7
   25658:	ldr	r0, [r4, #204]	; 0xcc
   2565c:	bl	1406c <fprintf@plt>
   25660:	ldr	r5, [r5]
   25664:	cmp	r5, #0
   25668:	bne	2562c <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   2566c:	mov	r0, #10
   25670:	ldr	r1, [r4, #204]	; 0xcc
   25674:	bl	140cc <fputc@plt>
   25678:	ldr	r3, [r4, #208]	; 0xd0
   2567c:	ldr	r5, [r3, #40]	; 0x28
   25680:	cmp	r5, #0
   25684:	beq	25808 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   25688:	ldrh	r3, [r5, #8]
   2568c:	cmp	r3, #3
   25690:	beq	25884 <__flatcc_fb_gen_c_json_printer@@Base+0x378>
   25694:	ldr	r5, [r5]
   25698:	cmp	r5, #0
   2569c:	bne	25688 <__flatcc_fb_gen_c_json_printer@@Base+0x17c>
   256a0:	ldr	r3, [r4, #208]	; 0xd0
   256a4:	ldr	r6, [r3, #40]	; 0x28
   256a8:	cmp	r6, #0
   256ac:	beq	25808 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   256b0:	movw	sl, #30156	; 0x75cc
   256b4:	movt	sl, #5
   256b8:	movw	r9, #30356	; 0x7694
   256bc:	movt	r9, #5
   256c0:	movw	r8, #26392	; 0x6718
   256c4:	movt	r8, #5
   256c8:	b	256d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc>
   256cc:	ldr	r6, [r6]
   256d0:	cmp	r6, #0
   256d4:	beq	257ac <__flatcc_fb_gen_c_json_printer@@Base+0x2a0>
   256d8:	ldrh	r3, [r6, #8]
   256dc:	cmp	r3, #4
   256e0:	bne	256cc <__flatcc_fb_gen_c_json_printer@@Base+0x1c0>
   256e4:	mov	r2, #220	; 0xdc
   256e8:	mov	r1, #0
   256ec:	add	r0, sp, #12
   256f0:	add	fp, r4, #204	; 0xcc
   256f4:	bl	14084 <memset@plt>
   256f8:	add	r2, sp, #12
   256fc:	mov	r1, r6
   25700:	ldr	r0, [r6, #12]
   25704:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   25708:	add	r2, sp, #12
   2570c:	mov	r1, sl
   25710:	ldr	r0, [r4, #204]	; 0xcc
   25714:	bl	1406c <fprintf@plt>
   25718:	ldr	r5, [r6, #20]
   2571c:	ldr	r3, [r4, #204]	; 0xcc
   25720:	cmp	r5, #0
   25724:	beq	25770 <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   25728:	movw	r7, #30272	; 0x7640
   2572c:	movt	r7, #5
   25730:	ldrh	r2, [r5, #24]
   25734:	mov	r0, r3
   25738:	mov	r1, r7
   2573c:	cmp	r2, #0
   25740:	beq	258a0 <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   25744:	ldr	ip, [r5, #4]
   25748:	ldr	r2, [r5, #48]	; 0x30
   2574c:	ldr	r3, [ip, #4]
   25750:	str	r3, [sp, #4]
   25754:	ldr	ip, [ip]
   25758:	str	ip, [sp]
   2575c:	bl	1406c <fprintf@plt>
   25760:	ldr	r5, [r5]
   25764:	ldr	r3, [r4, #204]	; 0xcc
   25768:	cmp	r5, #0
   2576c:	bne	25730 <__flatcc_fb_gen_c_json_printer@@Base+0x224>
   25770:	mov	r2, #78	; 0x4e
   25774:	mov	r1, #1
   25778:	mov	r0, r9
   2577c:	bl	13ff4 <fwrite@plt>
   25780:	mov	r2, #9
   25784:	mov	r1, #1
   25788:	ldr	r3, [r4, #204]	; 0xcc
   2578c:	mov	r0, r8
   25790:	bl	13ff4 <fwrite@plt>
   25794:	mov	r1, r6
   25798:	mov	r0, fp
   2579c:	bl	248e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd4>
   257a0:	ldr	r6, [r6]
   257a4:	cmp	r6, #0
   257a8:	bne	256d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc>
   257ac:	ldr	r3, [r4, #208]	; 0xd0
   257b0:	ldr	r5, [r3, #40]	; 0x28
   257b4:	cmp	r5, #0
   257b8:	beq	25808 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   257bc:	add	r6, r4, #204	; 0xcc
   257c0:	ldrh	r3, [r5, #8]
   257c4:	cmp	r3, #1
   257c8:	beq	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   257cc:	ldr	r5, [r5]
   257d0:	cmp	r5, #0
   257d4:	bne	257c0 <__flatcc_fb_gen_c_json_printer@@Base+0x2b4>
   257d8:	ldr	r3, [r4, #208]	; 0xd0
   257dc:	ldr	r5, [r3, #40]	; 0x28
   257e0:	cmp	r5, #0
   257e4:	beq	25808 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   257e8:	add	r6, r4, #204	; 0xcc
   257ec:	ldrh	r3, [r5, #8]
   257f0:	cmp	r3, #0
   257f4:	beq	258b0 <__flatcc_fb_gen_c_json_printer@@Base+0x3a4>
   257f8:	ldr	r5, [r5]
   257fc:	cmp	r5, #0
   25800:	bne	257ec <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   25804:	ldr	r3, [r4, #208]	; 0xd0
   25808:	ldr	r5, [r3, #52]	; 0x34
   2580c:	cmp	r5, #0
   25810:	beq	25820 <__flatcc_fb_gen_c_json_printer@@Base+0x314>
   25814:	ldrh	r3, [r5, #8]
   25818:	cmp	r3, #1
   2581c:	bls	25964 <__flatcc_fb_gen_c_json_printer@@Base+0x458>
   25820:	ldr	r0, [r4, #204]	; 0xcc
   25824:	ldr	r3, [r4, #212]	; 0xd4
   25828:	ldr	r3, [r3, #140]	; 0x8c
   2582c:	cmp	r3, #0
   25830:	bne	2590c <__flatcc_fb_gen_c_json_printer@@Base+0x400>
   25834:	ldr	r3, [r4, #208]	; 0xd0
   25838:	movw	r1, #30724	; 0x7804
   2583c:	movt	r1, #5
   25840:	ldr	r2, [r3, #164]	; 0xa4
   25844:	bl	1406c <fprintf@plt>
   25848:	mov	r0, #0
   2584c:	add	sp, sp, #236	; 0xec
   25850:	ldrd	r4, [sp]
   25854:	ldrd	r6, [sp, #8]
   25858:	ldrd	r8, [sp, #16]
   2585c:	ldrd	sl, [sp, #24]
   25860:	add	sp, sp, #32
   25864:	pop	{pc}		; (ldr pc, [sp], #4)
   25868:	ldr	r0, [r5, #12]
   2586c:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   25870:	add	r2, sp, #12
   25874:	mov	r1, r8
   25878:	ldr	r0, [r4, #204]	; 0xcc
   2587c:	bl	1406c <fprintf@plt>
   25880:	b	25620 <__flatcc_fb_gen_c_json_printer@@Base+0x114>
   25884:	mov	r1, r5
   25888:	mov	r0, r4
   2588c:	bl	2446c <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   25890:	ldr	r5, [r5]
   25894:	cmp	r5, #0
   25898:	bne	25688 <__flatcc_fb_gen_c_json_printer@@Base+0x17c>
   2589c:	b	256a0 <__flatcc_fb_gen_c_json_printer@@Base+0x194>
   258a0:	ldr	r5, [r5]
   258a4:	cmp	r5, #0
   258a8:	bne	25730 <__flatcc_fb_gen_c_json_printer@@Base+0x224>
   258ac:	b	25770 <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   258b0:	mov	r1, r5
   258b4:	mov	r0, r6
   258b8:	bl	24d5c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   258bc:	ldr	r5, [r5]
   258c0:	cmp	r5, #0
   258c4:	bne	257ec <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   258c8:	ldr	r3, [r4, #208]	; 0xd0
   258cc:	b	25808 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   258d0:	mov	r1, r5
   258d4:	mov	r0, r6
   258d8:	bl	24ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x21dc>
   258dc:	ldr	r5, [r5]
   258e0:	cmp	r5, #0
   258e4:	bne	257c0 <__flatcc_fb_gen_c_json_printer@@Base+0x2b4>
   258e8:	b	257d8 <__flatcc_fb_gen_c_json_printer@@Base+0x2cc>
   258ec:	mov	r3, r1
   258f0:	movw	r0, #10000	; 0x2710
   258f4:	movt	r0, #4
   258f8:	mov	r1, #1
   258fc:	mov	r2, #36	; 0x24
   25900:	bl	13ff4 <fwrite@plt>
   25904:	ldr	r1, [r4, #204]	; 0xcc
   25908:	b	255a0 <__flatcc_fb_gen_c_json_printer@@Base+0x94>
   2590c:	mov	r3, r0
   25910:	mov	r2, #36	; 0x24
   25914:	movw	r0, #34164	; 0x8574
   25918:	movt	r0, #4
   2591c:	mov	r1, #1
   25920:	bl	13ff4 <fwrite@plt>
   25924:	ldr	r0, [r4, #204]	; 0xcc
   25928:	b	25834 <__flatcc_fb_gen_c_json_printer@@Base+0x328>
   2592c:	movw	r2, #482	; 0x1e2
   25930:	mov	r1, #1
   25934:	ldr	r3, [r4, #204]	; 0xcc
   25938:	movw	r0, #29196	; 0x720c
   2593c:	movt	r0, #5
   25940:	bl	13ff4 <fwrite@plt>
   25944:	movw	r1, #29680	; 0x73f0
   25948:	movt	r1, #5
   2594c:	ldr	r0, [r4, #204]	; 0xcc
   25950:	ldr	r3, [r4, #208]	; 0xd0
   25954:	ldr	r2, [r3, #160]	; 0xa0
   25958:	bl	1406c <fprintf@plt>
   2595c:	ldr	r5, [r4, #208]	; 0xd0
   25960:	b	255d4 <__flatcc_fb_gen_c_json_printer@@Base+0xc8>
   25964:	mov	r2, #220	; 0xdc
   25968:	mov	r1, #0
   2596c:	add	r0, sp, #12
   25970:	bl	14084 <memset@plt>
   25974:	add	r2, sp, #12
   25978:	mov	r1, r5
   2597c:	ldr	r0, [r5, #12]
   25980:	bl	16254 <__flatcc_fb_scoped_symbol_name@@Base>
   25984:	movw	r1, #30436	; 0x76e4
   25988:	movt	r1, #5
   2598c:	ldr	r0, [r4, #204]	; 0xcc
   25990:	ldr	r3, [r4, #208]	; 0xd0
   25994:	ldr	r2, [r3, #160]	; 0xa0
   25998:	bl	1406c <fprintf@plt>
   2599c:	add	r2, sp, #12
   259a0:	movw	r1, #30524	; 0x773c
   259a4:	movt	r1, #5
   259a8:	ldr	r0, [r4, #204]	; 0xcc
   259ac:	bl	1406c <fprintf@plt>
   259b0:	ldr	r2, [r4, #208]	; 0xd0
   259b4:	ldrh	r3, [r2, #16]
   259b8:	cmp	r3, #2
   259bc:	beq	259f4 <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   259c0:	movw	r0, #30720	; 0x7800
   259c4:	movt	r0, #5
   259c8:	ldr	r3, [r4, #204]	; 0xcc
   259cc:	mov	r2, #3
   259d0:	mov	r1, #1
   259d4:	bl	13ff4 <fwrite@plt>
   259d8:	movw	r0, #13060	; 0x3304
   259dc:	movt	r0, #5
   259e0:	ldr	r3, [r4, #204]	; 0xcc
   259e4:	mov	r2, #3
   259e8:	mov	r1, #1
   259ec:	bl	13ff4 <fwrite@plt>
   259f0:	b	25820 <__flatcc_fb_gen_c_json_printer@@Base+0x314>
   259f4:	movw	r1, #30708	; 0x77f4
   259f8:	movt	r1, #5
   259fc:	ldr	r3, [r2, #8]
   25a00:	ldr	r2, [r2, #12]
   25a04:	ldr	r0, [r4, #204]	; 0xcc
   25a08:	bl	1406c <fprintf@plt>
   25a0c:	b	259d8 <__flatcc_fb_gen_c_json_printer@@Base+0x4cc>
   25a10:	add	r3, r1, #4
   25a14:	mov	r2, r0
   25a18:	movw	r1, #23116	; 0x5a4c
   25a1c:	movt	r1, #2
   25a20:	mov	r0, r3
   25a24:	b	2962c <fb_symbol_table_visit@@Base>
   25a28:	add	r3, r1, #4
   25a2c:	mov	r2, r0
   25a30:	movw	r1, #24004	; 0x5dc4
   25a34:	movt	r1, #2
   25a38:	mov	r0, r3
   25a3c:	b	2962c <fb_symbol_table_visit@@Base>
   25a40:	ldr	r0, [r0, #4]
   25a44:	ldr	r1, [r1, #4]
   25a48:	b	13f94 <strcmp@plt>
   25a4c:	ldrh	r3, [r1, #8]
   25a50:	cmp	r3, #4
   25a54:	bxhi	lr
   25a58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   25a5c:	strd	r6, [sp, #8]
   25a60:	mov	r7, r0
   25a64:	mov	r6, r1
   25a68:	ldr	r0, [r0, #40]	; 0x28
   25a6c:	strd	r8, [sp, #16]
   25a70:	ldr	r1, [r1, #16]
   25a74:	str	sl, [sp, #24]
   25a78:	str	lr, [sp, #28]
   25a7c:	add	r0, r0, #172	; 0xac
   25a80:	bl	287a4 <ptr_set_find_item@@Base>
   25a84:	cmp	r0, #0
   25a88:	beq	25b38 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   25a8c:	ldr	r3, [r7]
   25a90:	ldr	r9, [r7, #36]	; 0x24
   25a94:	cmp	r3, #0
   25a98:	moveq	r4, r9
   25a9c:	beq	25adc <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
   25aa0:	ldr	r3, [r6, #12]
   25aa4:	mov	r4, r9
   25aa8:	ldr	r5, [r3]
   25aac:	cmp	r5, #0
   25ab0:	beq	25adc <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
   25ab4:	mov	r8, #46	; 0x2e
   25ab8:	ldr	r3, [r5, #4]
   25abc:	mov	r0, r4
   25ac0:	ldm	r3, {r1, r2}
   25ac4:	add	r4, r4, r2
   25ac8:	bl	13fb8 <memcpy@plt>
   25acc:	strb	r8, [r4], #1
   25ad0:	ldr	r5, [r5]
   25ad4:	cmp	r5, #0
   25ad8:	bne	25ab8 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   25adc:	ldr	r3, [r6, #4]
   25ae0:	mov	r0, r4
   25ae4:	ldm	r3, {r1, r5}
   25ae8:	mov	r2, r5
   25aec:	bl	13fb8 <memcpy@plt>
   25af0:	mov	r2, #0
   25af4:	add	r3, r4, r5
   25af8:	add	r3, r3, #1
   25afc:	strb	r2, [r4, r5]
   25b00:	ldrh	r2, [r6, #8]
   25b04:	str	r3, [r7, #36]	; 0x24
   25b08:	cmp	r2, #4
   25b0c:	ldrls	pc, [pc, r2, lsl #2]
   25b10:	b	25b38 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   25b14:	andeq	r5, r2, r0, asr fp
   25b18:	andeq	r5, r2, r0, asr fp
   25b1c:	andeq	r5, r2, r8, lsr fp
   25b20:	andeq	r5, r2, r8, lsr #22
   25b24:	andeq	r5, r2, r8, lsr #22
   25b28:	ldr	r3, [r7, #32]
   25b2c:	add	r2, r3, #8
   25b30:	stm	r3, {r6, r9}
   25b34:	str	r2, [r7, #32]
   25b38:	ldrd	r4, [sp]
   25b3c:	ldrd	r6, [sp, #8]
   25b40:	ldrd	r8, [sp, #16]
   25b44:	ldr	sl, [sp, #24]
   25b48:	add	sp, sp, #28
   25b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   25b50:	ldr	r3, [r7, #28]
   25b54:	add	r2, r3, #8
   25b58:	stm	r3, {r6, r9}
   25b5c:	str	r2, [r7, #28]
   25b60:	b	25b38 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   25b64:	sub	r2, r2, #2
   25b68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   25b6c:	mov	r4, r0
   25b70:	strd	r6, [sp, #8]
   25b74:	str	r8, [sp, #16]
   25b78:	str	lr, [sp, #20]
   25b7c:	cmp	r2, #13
   25b80:	ldrls	pc, [pc, r2, lsl #2]
   25b84:	b	25d24 <__flatcc_fb_gen_c_json_printer@@Base+0x818>
   25b88:	andeq	r5, r2, r0, lsr #25
   25b8c:	andeq	r5, r2, r4, lsr #26
   25b90:	andeq	r5, r2, r4, lsr #26
   25b94:	andeq	r5, r2, r4, lsr #26
   25b98:	andeq	r5, r2, r4, lsr #26
   25b9c:			; <UNDEFINED> instruction: 0x00025cb0
   25ba0:	andeq	r5, r2, r0, asr #23
   25ba4:	andeq	r5, r2, ip, asr sp
   25ba8:	andeq	r5, r2, r4, lsr #26
   25bac:	andeq	r5, r2, r4, lsr #26
   25bb0:	andeq	r5, r2, r4, lsr #26
   25bb4:	andeq	r5, r2, r4, lsr #26
   25bb8:	ldrdeq	r5, [r2], -ip
   25bbc:	andeq	r5, r2, r4, lsl #26
   25bc0:	mvn	r6, #0
   25bc4:	sub	r1, r1, #1
   25bc8:	cmp	r1, #10
   25bcc:	bhi	25d50 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   25bd0:	movw	r3, #30764	; 0x782c
   25bd4:	movt	r3, #5
   25bd8:	ldrsb	r7, [r3, r1]
   25bdc:	mov	r5, #0
   25be0:	mov	r1, #3
   25be4:	mov	r0, r4
   25be8:	bl	39324 <flatcc_builder_start_table@@Base>
   25bec:	cmp	r0, #0
   25bf0:	bne	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   25bf4:	cmn	r6, #1
   25bf8:	beq	25c1c <__flatcc_fb_gen_c_json_printer@@Base+0x710>
   25bfc:	mov	r3, #4
   25c00:	mov	r1, #2
   25c04:	mov	r2, r3
   25c08:	mov	r0, r4
   25c0c:	bl	3b69c <flatcc_builder_table_add@@Base>
   25c10:	cmp	r0, #0
   25c14:	beq	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   25c18:	str	r6, [r0]
   25c1c:	cmp	r7, #0
   25c20:	beq	25c44 <__flatcc_fb_gen_c_json_printer@@Base+0x738>
   25c24:	mov	r3, #1
   25c28:	mov	r1, #0
   25c2c:	mov	r2, r3
   25c30:	mov	r0, r4
   25c34:	bl	3b69c <flatcc_builder_table_add@@Base>
   25c38:	cmp	r0, #0
   25c3c:	beq	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   25c40:	strb	r7, [r0]
   25c44:	cmp	r5, #0
   25c48:	beq	25c6c <__flatcc_fb_gen_c_json_printer@@Base+0x760>
   25c4c:	mov	r3, #1
   25c50:	mov	r0, r4
   25c54:	mov	r2, r3
   25c58:	mov	r1, r3
   25c5c:	bl	3b69c <flatcc_builder_table_add@@Base>
   25c60:	cmp	r0, #0
   25c64:	beq	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   25c68:	strb	r5, [r0]
   25c6c:	mov	r2, #0
   25c70:	ldr	r1, [pc, #324]	; 25dbc <__flatcc_fb_gen_c_json_printer@@Base+0x8b0>
   25c74:	mov	r0, r4
   25c78:	bl	39c08 <flatcc_builder_check_required@@Base>
   25c7c:	cmp	r0, #0
   25c80:	beq	25da0 <__flatcc_fb_gen_c_json_printer@@Base+0x894>
   25c84:	mov	r0, r4
   25c88:	ldrd	r4, [sp]
   25c8c:	ldrd	r6, [sp, #8]
   25c90:	ldr	r8, [sp, #16]
   25c94:	ldr	lr, [sp, #20]
   25c98:	add	sp, sp, #24
   25c9c:	b	39ca4 <flatcc_builder_end_table@@Base>
   25ca0:	mvn	r6, #0
   25ca4:	mov	r7, #13
   25ca8:	mov	r5, #0
   25cac:	b	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   25cb0:	mvn	r6, #0
   25cb4:	sub	r1, r1, #1
   25cb8:	cmp	r1, #10
   25cbc:	movhi	r5, #0
   25cc0:	movhi	r7, #14
   25cc4:	bhi	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   25cc8:	movw	r3, #30764	; 0x782c
   25ccc:	movt	r3, #5
   25cd0:	ldrsb	r5, [r3, r1]
   25cd4:	mov	r7, #14
   25cd8:	b	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   25cdc:	ldrh	r3, [r1, #8]
   25ce0:	ldr	r6, [r1, #124]	; 0x7c
   25ce4:	cmp	r3, #4
   25ce8:	ldrls	pc, [pc, r3, lsl #2]
   25cec:	b	25d24 <__flatcc_fb_gen_c_json_printer@@Base+0x818>
   25cf0:	andeq	r5, r2, r0, lsl #27
   25cf4:	andeq	r5, r2, r0, lsl #27
   25cf8:	andeq	r5, r2, r4, lsr #26
   25cfc:	andeq	r5, r2, ip, lsl #27
   25d00:	andeq	r5, r2, r8, ror sp
   25d04:	ldrh	r3, [r1, #8]
   25d08:	ldr	r6, [r1, #124]	; 0x7c
   25d0c:	cmp	r3, #1
   25d10:	bls	25d94 <__flatcc_fb_gen_c_json_printer@@Base+0x888>
   25d14:	cmp	r3, #3
   25d18:	bne	25d50 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   25d1c:	ldr	r1, [r1, #40]	; 0x28
   25d20:	b	25cb4 <__flatcc_fb_gen_c_json_printer@@Base+0x7a8>
   25d24:	mov	r1, #3
   25d28:	mov	r0, r4
   25d2c:	bl	39324 <flatcc_builder_start_table@@Base>
   25d30:	cmp	r0, #0
   25d34:	beq	25c6c <__flatcc_fb_gen_c_json_printer@@Base+0x760>
   25d38:	ldrd	r4, [sp]
   25d3c:	mov	r0, #0
   25d40:	ldrd	r6, [sp, #8]
   25d44:	ldr	r8, [sp, #16]
   25d48:	add	sp, sp, #20
   25d4c:	pop	{pc}		; (ldr pc, [sp], #4)
   25d50:	mov	r5, #0
   25d54:	mov	r7, r5
   25d58:	b	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   25d5c:	mov	r1, #3
   25d60:	bl	39324 <flatcc_builder_start_table@@Base>
   25d64:	cmp	r0, #0
   25d68:	bne	25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x82c>
   25d6c:	mov	r5, #13
   25d70:	mov	r7, #14
   25d74:	b	25c24 <__flatcc_fb_gen_c_json_printer@@Base+0x718>
   25d78:	mov	r7, #16
   25d7c:	b	25ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x79c>
   25d80:	mov	r5, #0
   25d84:	mov	r7, #15
   25d88:	b	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   25d8c:	ldr	r1, [r1, #40]	; 0x28
   25d90:	b	25bc4 <__flatcc_fb_gen_c_json_printer@@Base+0x6b8>
   25d94:	mov	r5, #15
   25d98:	mov	r7, #14
   25d9c:	b	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0x6d4>
   25da0:	movw	r1, #31056	; 0x7950
   25da4:	movt	r1, #5
   25da8:	ldr	r3, [pc, #16]	; 25dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x8b4>
   25dac:	movw	r0, #31152	; 0x79b0
   25db0:	movt	r0, #5
   25db4:	mov	r2, #23
   25db8:	bl	14120 <__assert_fail@plt>
   25dbc:	andeq	r7, r5, r8, lsr r8
   25dc0:	andeq	r7, r5, ip, lsr r8
   25dc4:	ldrh	r3, [r1, #8]
   25dc8:	cmp	r3, #4
   25dcc:	bxhi	lr
   25dd0:	strd	r4, [sp, #-16]!
   25dd4:	mov	r4, r0
   25dd8:	mov	r5, r1
   25ddc:	ldr	r0, [r0, #40]	; 0x28
   25de0:	ldr	r1, [r1, #16]
   25de4:	str	r6, [sp, #8]
   25de8:	str	lr, [sp, #12]
   25dec:	add	r0, r0, #172	; 0xac
   25df0:	bl	287a4 <ptr_set_find_item@@Base>
   25df4:	cmp	r0, #0
   25df8:	beq	25e84 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   25dfc:	ldr	ip, [r4]
   25e00:	cmp	ip, #0
   25e04:	beq	25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   25e08:	ldr	r3, [r5, #12]
   25e0c:	ldr	r3, [r3]
   25e10:	cmp	r3, #0
   25e14:	beq	25eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x9a4>
   25e18:	mov	ip, #0
   25e1c:	ldr	r2, [r3, #4]
   25e20:	ldr	r3, [r3]
   25e24:	ldr	r2, [r2, #4]
   25e28:	cmp	r3, #0
   25e2c:	add	r2, r2, #1
   25e30:	add	ip, ip, r2
   25e34:	bne	25e1c <__flatcc_fb_gen_c_json_printer@@Base+0x910>
   25e38:	ldr	r3, [r5, #4]
   25e3c:	ldr	r1, [r4, #12]
   25e40:	ldrh	r2, [r5, #8]
   25e44:	ldr	r3, [r3, #4]
   25e48:	add	r3, r3, r1
   25e4c:	add	r3, r3, #1
   25e50:	add	ip, r3, ip
   25e54:	str	ip, [r4, #12]
   25e58:	cmp	r2, #4
   25e5c:	ldrls	pc, [pc, r2, lsl #2]
   25e60:	b	25e84 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   25e64:	muleq	r2, r4, lr
   25e68:	muleq	r2, r4, lr
   25e6c:	andeq	r5, r2, r4, lsl #29
   25e70:	andeq	r5, r2, r8, ror lr
   25e74:	andeq	r5, r2, r8, ror lr
   25e78:	ldr	r3, [r4, #8]
   25e7c:	add	r3, r3, #1
   25e80:	str	r3, [r4, #8]
   25e84:	ldrd	r4, [sp]
   25e88:	ldr	r6, [sp, #8]
   25e8c:	add	sp, sp, #12
   25e90:	pop	{pc}		; (ldr pc, [sp], #4)
   25e94:	ldr	r3, [r4, #4]
   25e98:	ldr	r6, [sp, #8]
   25e9c:	add	r3, r3, #1
   25ea0:	str	r3, [r4, #4]
   25ea4:	ldrd	r4, [sp]
   25ea8:	add	sp, sp, #12
   25eac:	pop	{pc}		; (ldr pc, [sp], #4)
   25eb0:	mov	ip, r3
   25eb4:	b	25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   25eb8:	cmp	r0, #0
   25ebc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   25ec0:	strd	r6, [sp, #8]
   25ec4:	strd	r8, [sp, #16]
   25ec8:	strd	sl, [sp, #24]
   25ecc:	str	lr, [sp, #32]
   25ed0:	sub	sp, sp, #36	; 0x24
   25ed4:	beq	25eec <__flatcc_fb_gen_c_json_printer@@Base+0x9e0>
   25ed8:	ldr	r2, [r0, #4]
   25edc:	movw	r3, #17986	; 0x4642
   25ee0:	movt	r3, #21314	; 0x5342
   25ee4:	cmp	r2, r3
   25ee8:	beq	25f08 <__flatcc_fb_gen_c_json_printer@@Base+0x9fc>
   25eec:	movw	r1, #31296	; 0x7a40
   25ef0:	movt	r1, #5
   25ef4:	ldr	r3, [pc, #1668]	; 26580 <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   25ef8:	movw	r0, #31392	; 0x7aa0
   25efc:	movt	r0, #5
   25f00:	mov	r2, #237	; 0xed
   25f04:	bl	14120 <__assert_fail@plt>
   25f08:	ldr	r2, [r0]
   25f0c:	adds	r3, r0, r2
   25f10:	beq	25eec <__flatcc_fb_gen_c_json_printer@@Base+0x9e0>
   25f14:	ldr	r2, [r0, r2]
   25f18:	sub	r2, r3, r2
   25f1c:	ldrh	r1, [r2]
   25f20:	cmp	r1, #5
   25f24:	bls	26564 <__flatcc_fb_gen_c_json_printer@@Base+0x1058>
   25f28:	ldrh	r1, [r2, #4]
   25f2c:	cmp	r1, #0
   25f30:	beq	26564 <__flatcc_fb_gen_c_json_printer@@Base+0x1058>
   25f34:	ldr	r2, [r3, r1]
   25f38:	add	r3, r3, r1
   25f3c:	add	r2, r2, #4
   25f40:	adds	r0, r3, r2
   25f44:	str	r0, [sp, #20]
   25f48:	beq	264f4 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   25f4c:	ldr	r1, [r0, #-4]
   25f50:	cmp	r1, #0
   25f54:	beq	264f4 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   25f58:	ldr	r3, [r3, r2]
   25f5c:	adds	r2, r0, r3
   25f60:	beq	26548 <__flatcc_fb_gen_c_json_printer@@Base+0x103c>
   25f64:	ldr	r3, [r0, r3]
   25f68:	sub	r3, r2, r3
   25f6c:	ldrh	r0, [r3]
   25f70:	cmp	r0, #7
   25f74:	bls	26480 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   25f78:	ldrh	r3, [r3, #6]
   25f7c:	cmp	r3, #0
   25f80:	movne	r0, #0
   25f84:	strne	r0, [sp, #24]
   25f88:	beq	26480 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   25f8c:	ldr	r0, [r2, r3]
   25f90:	add	r2, r2, r3
   25f94:	add	r3, r0, #4
   25f98:	adds	fp, r2, r3
   25f9c:	beq	26438 <__flatcc_fb_gen_c_json_printer@@Base+0xf2c>
   25fa0:	ldr	r3, [fp, #-4]
   25fa4:	cmp	r3, #0
   25fa8:	str	r3, [sp, #28]
   25fac:	beq	26438 <__flatcc_fb_gen_c_json_printer@@Base+0xf2c>
   25fb0:	lsr	r2, r3, #1
   25fb4:	sub	sl, r3, #1
   25fb8:	mov	r3, r2
   25fbc:	lsl	r2, r2, #1
   25fc0:	str	sl, [sp, #4]
   25fc4:	mov	sl, r3
   25fc8:	str	r2, [sp, #8]
   25fcc:	ldr	r3, [sp, #4]
   25fd0:	ldr	r2, [sp, #8]
   25fd4:	cmp	r3, r2
   25fd8:	movcs	r4, r2
   25fdc:	movcs	r7, sl
   25fe0:	strcs	sl, [sp, #16]
   25fe4:	bcs	26048 <__flatcc_fb_gen_c_json_printer@@Base+0xb3c>
   25fe8:	b	261d8 <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   25fec:	ldr	r8, [r0, #-4]
   25ff0:	str	r3, [sp, #12]
   25ff4:	cmp	r9, r8
   25ff8:	movcc	r2, r9
   25ffc:	movcs	r2, r8
   26000:	bl	14108 <strncmp@plt>
   26004:	cmp	r0, #0
   26008:	ldr	r3, [sp, #12]
   2600c:	beq	261cc <__flatcc_fb_gen_c_json_printer@@Base+0xcc0>
   26010:	bge	261d4 <__flatcc_fb_gen_c_json_printer@@Base+0xcc8>
   26014:	ldr	r0, [sp, #4]
   26018:	sub	r2, r7, r4
   2601c:	lsl	r1, r4, #1
   26020:	lsl	r2, r2, #2
   26024:	mov	r7, r4
   26028:	sub	r6, r6, r2
   2602c:	add	r5, r5, r2
   26030:	cmp	r0, r1
   26034:	str	r6, [fp, r3]
   26038:	str	r5, [fp, sl]
   2603c:	bcc	261d4 <__flatcc_fb_gen_c_json_printer@@Base+0xcc8>
   26040:	mov	r4, r1
   26044:	mov	r3, r0
   26048:	cmp	r3, r4
   2604c:	ldr	r6, [fp, #-4]
   26050:	bls	26120 <__flatcc_fb_gen_c_json_printer@@Base+0xc14>
   26054:	lsl	r3, r4, #2
   26058:	cmp	r6, r4
   2605c:	add	r0, fp, r3
   26060:	bls	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   26064:	ldr	r1, [fp, r4, lsl #2]
   26068:	adds	r2, r0, r1
   2606c:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   26070:	ldr	r1, [r0, r1]
   26074:	sub	r1, r2, r1
   26078:	ldrh	r0, [r1]
   2607c:	cmp	r0, #5
   26080:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26084:	ldrh	r1, [r1, #4]
   26088:	cmp	r1, #0
   2608c:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26090:	ldr	r0, [r2, r1]
   26094:	add	r8, r4, #1
   26098:	add	r3, r3, #4
   2609c:	add	r2, r2, r1
   260a0:	cmp	r8, r6
   260a4:	add	ip, fp, r3
   260a8:	add	r0, r0, #4
   260ac:	add	r0, r2, r0
   260b0:	bcs	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   260b4:	ldr	r3, [fp, r3]
   260b8:	adds	r1, ip, r3
   260bc:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   260c0:	ldr	r3, [ip, r3]
   260c4:	sub	r3, r1, r3
   260c8:	ldrh	r2, [r3]
   260cc:	cmp	r2, #5
   260d0:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   260d4:	ldrh	r2, [r3, #4]
   260d8:	cmp	r2, #0
   260dc:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   260e0:	ldr	r3, [r1, r2]
   260e4:	add	r1, r1, r2
   260e8:	add	r3, r3, #4
   260ec:	adds	r1, r1, r3
   260f0:	ldrne	r9, [r1, #-4]
   260f4:	moveq	r9, #0
   260f8:	cmp	r0, #0
   260fc:	beq	2649c <__flatcc_fb_gen_c_json_printer@@Base+0xf90>
   26100:	ldr	r5, [r0, #-4]
   26104:	cmp	r9, r5
   26108:	movcc	r2, r9
   2610c:	movcs	r2, r5
   26110:	bl	14108 <strncmp@plt>
   26114:	cmp	r0, #0
   26118:	beq	264a0 <__flatcc_fb_gen_c_json_printer@@Base+0xf94>
   2611c:	movlt	r4, r8
   26120:	lsl	r3, r7, #2
   26124:	cmp	r6, r7
   26128:	add	r1, fp, r3
   2612c:	bls	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   26130:	ldr	r5, [fp, r7, lsl #2]
   26134:	adds	r2, r1, r5
   26138:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   2613c:	ldr	r1, [r1, r5]
   26140:	sub	r1, r2, r1
   26144:	ldrh	r0, [r1]
   26148:	cmp	r0, #5
   2614c:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26150:	ldrh	r1, [r1, #4]
   26154:	cmp	r1, #0
   26158:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   2615c:	ldr	r0, [r2, r1]
   26160:	lsl	sl, r4, #2
   26164:	add	r2, r2, r1
   26168:	cmp	r4, r6
   2616c:	add	r1, fp, sl
   26170:	add	r0, r0, #4
   26174:	add	r0, r2, r0
   26178:	bcs	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   2617c:	ldr	r6, [fp, r4, lsl #2]
   26180:	adds	r2, r1, r6
   26184:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   26188:	ldr	r1, [r1, r6]
   2618c:	sub	r1, r2, r1
   26190:	ldrh	ip, [r1]
   26194:	cmp	ip, #5
   26198:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   2619c:	ldrh	ip, [r1, #4]
   261a0:	cmp	ip, #0
   261a4:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   261a8:	ldr	r1, [r2, ip]
   261ac:	add	r2, r2, ip
   261b0:	add	r1, r1, #4
   261b4:	adds	r1, r2, r1
   261b8:	ldrne	r9, [r1, #-4]
   261bc:	moveq	r9, r1
   261c0:	cmp	r0, #0
   261c4:	bne	25fec <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
   261c8:	mov	r8, r0
   261cc:	cmp	r9, r8
   261d0:	bhi	26014 <__flatcc_fb_gen_c_json_printer@@Base+0xb08>
   261d4:	ldr	sl, [sp, #16]
   261d8:	sub	sl, sl, #1
   261dc:	ldr	r3, [sp, #8]
   261e0:	cmn	sl, #1
   261e4:	sub	r3, r3, #2
   261e8:	str	r3, [sp, #8]
   261ec:	bne	25fcc <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
   261f0:	ldr	sl, [sp, #4]
   261f4:	cmp	sl, #0
   261f8:	beq	26430 <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   261fc:	ldr	r3, [sp, #28]
   26200:	add	r2, fp, #4
   26204:	str	r2, [sp, #16]
   26208:	add	r3, fp, r3, lsl #2
   2620c:	ldr	r2, [sp, #16]
   26210:	sub	lr, r3, #4
   26214:	mov	r7, #0
   26218:	sub	sl, sl, #1
   2621c:	mov	r4, r7
   26220:	ldr	r1, [r3, #-4]
   26224:	str	lr, [sp, #12]
   26228:	ldr	r0, [fp]
   2622c:	sub	ip, r3, r2
   26230:	sub	r2, r2, r3
   26234:	add	r1, r1, ip
   26238:	add	r2, r2, r0
   2623c:	str	r1, [fp]
   26240:	str	r2, [r3, #-4]
   26244:	b	262ac <__flatcc_fb_gen_c_json_printer@@Base+0xda0>
   26248:	cmp	r0, #0
   2624c:	ldr	r9, [r1, #-4]
   26250:	beq	264ac <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   26254:	ldr	r8, [r0, #-4]
   26258:	str	r3, [sp, #8]
   2625c:	cmp	r9, r8
   26260:	movcc	r2, r9
   26264:	movcs	r2, r8
   26268:	bl	14108 <strncmp@plt>
   2626c:	cmp	r0, #0
   26270:	ldr	r3, [sp, #8]
   26274:	beq	264b0 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   26278:	bge	26424 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   2627c:	sub	r2, r7, r4
   26280:	lsl	r1, r4, #1
   26284:	mov	r7, r4
   26288:	lsl	r2, r2, #2
   2628c:	cmp	sl, r1
   26290:	sub	r6, r6, r2
   26294:	add	r5, r5, r2
   26298:	ldr	r2, [sp, #4]
   2629c:	str	r6, [fp, r2]
   262a0:	str	r5, [fp, r3]
   262a4:	bcc	26424 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   262a8:	mov	r4, r1
   262ac:	cmp	sl, r4
   262b0:	ldr	r6, [fp, #-4]
   262b4:	bls	26384 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   262b8:	lsl	r2, r4, #2
   262bc:	cmp	r6, r4
   262c0:	add	ip, fp, r2
   262c4:	bls	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   262c8:	ldr	r0, [fp, r4, lsl #2]
   262cc:	adds	r1, ip, r0
   262d0:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   262d4:	ldr	r0, [ip, r0]
   262d8:	sub	r0, r1, r0
   262dc:	ldrh	ip, [r0]
   262e0:	cmp	ip, #5
   262e4:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   262e8:	ldrh	ip, [r0, #4]
   262ec:	cmp	ip, #0
   262f0:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   262f4:	ldr	r0, [r1, ip]
   262f8:	add	r8, r4, #1
   262fc:	add	r1, r1, ip
   26300:	add	r2, r2, #4
   26304:	cmp	r6, r8
   26308:	add	ip, fp, r2
   2630c:	add	r0, r0, #4
   26310:	add	r0, r1, r0
   26314:	bls	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   26318:	ldr	r2, [fp, r2]
   2631c:	adds	r1, ip, r2
   26320:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   26324:	ldr	r2, [ip, r2]
   26328:	sub	r2, r1, r2
   2632c:	ldrh	ip, [r2]
   26330:	cmp	ip, #5
   26334:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26338:	ldrh	ip, [r2, #4]
   2633c:	cmp	ip, #0
   26340:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26344:	ldr	r2, [r1, ip]
   26348:	add	r1, r1, ip
   2634c:	add	r2, r2, #4
   26350:	adds	r1, r1, r2
   26354:	beq	26384 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   26358:	cmp	r0, #0
   2635c:	ldr	r9, [r1, #-4]
   26360:	beq	264c8 <__flatcc_fb_gen_c_json_printer@@Base+0xfbc>
   26364:	ldr	r5, [r0, #-4]
   26368:	cmp	r9, r5
   2636c:	movcc	r2, r9
   26370:	movcs	r2, r5
   26374:	bl	14108 <strncmp@plt>
   26378:	cmp	r0, #0
   2637c:	beq	264cc <__flatcc_fb_gen_c_json_printer@@Base+0xfc0>
   26380:	movlt	r4, r8
   26384:	lsl	r3, r7, #2
   26388:	cmp	r6, r7
   2638c:	add	r2, fp, r3
   26390:	str	r3, [sp, #4]
   26394:	bls	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   26398:	ldr	r5, [fp, r7, lsl #2]
   2639c:	adds	r0, r2, r5
   263a0:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   263a4:	ldr	r2, [r2, r5]
   263a8:	sub	r2, r0, r2
   263ac:	ldrh	r1, [r2]
   263b0:	cmp	r1, #5
   263b4:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   263b8:	ldrh	r2, [r2, #4]
   263bc:	cmp	r2, #0
   263c0:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   263c4:	ldr	r1, [r0, r2]
   263c8:	lsl	r3, r4, #2
   263cc:	add	r0, r0, r2
   263d0:	cmp	r6, r4
   263d4:	add	r2, fp, r3
   263d8:	add	r1, r1, #4
   263dc:	add	r0, r0, r1
   263e0:	bls	2652c <__flatcc_fb_gen_c_json_printer@@Base+0x1020>
   263e4:	ldr	r6, [fp, r4, lsl #2]
   263e8:	adds	r1, r2, r6
   263ec:	beq	26510 <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   263f0:	ldr	r2, [r2, r6]
   263f4:	sub	r2, r1, r2
   263f8:	ldrh	ip, [r2]
   263fc:	cmp	ip, #5
   26400:	bls	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26404:	ldrh	ip, [r2, #4]
   26408:	cmp	ip, #0
   2640c:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0xfcc>
   26410:	ldr	r2, [r1, ip]
   26414:	add	r1, r1, ip
   26418:	add	r2, r2, #4
   2641c:	adds	r1, r1, r2
   26420:	bne	26248 <__flatcc_fb_gen_c_json_printer@@Base+0xd3c>
   26424:	cmp	sl, #0
   26428:	ldr	r3, [sp, #12]
   2642c:	bne	2620c <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   26430:	ldr	r3, [sp, #20]
   26434:	ldr	r1, [r3, #-4]
   26438:	ldr	r3, [sp, #24]
   2643c:	add	r2, r3, #1
   26440:	cmp	r2, r1
   26444:	str	r2, [sp, #24]
   26448:	bcs	264f4 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   2644c:	ldr	r0, [sp, #20]
   26450:	ldr	r3, [r0, r2, lsl #2]
   26454:	add	r0, r0, r2, lsl #2
   26458:	adds	r2, r0, r3
   2645c:	beq	26548 <__flatcc_fb_gen_c_json_printer@@Base+0x103c>
   26460:	ldr	r3, [r0, r3]
   26464:	sub	r3, r2, r3
   26468:	ldrh	r0, [r3]
   2646c:	cmp	r0, #7
   26470:	bls	26480 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   26474:	ldrh	r3, [r3, #6]
   26478:	cmp	r3, #0
   2647c:	bne	25f8c <__flatcc_fb_gen_c_json_printer@@Base+0xa80>
   26480:	movw	r1, #31296	; 0x7a40
   26484:	movt	r1, #5
   26488:	ldr	r3, [pc, #244]	; 26584 <__flatcc_fb_gen_c_json_printer@@Base+0x1078>
   2648c:	movw	r0, #31432	; 0x7ac8
   26490:	movt	r0, #5
   26494:	mov	r2, #224	; 0xe0
   26498:	bl	14120 <__assert_fail@plt>
   2649c:	mov	r5, r0
   264a0:	cmp	r9, r5
   264a4:	movhi	r4, r8
   264a8:	b	26120 <__flatcc_fb_gen_c_json_printer@@Base+0xc14>
   264ac:	mov	r8, #0
   264b0:	cmp	r9, r8
   264b4:	bhi	2627c <__flatcc_fb_gen_c_json_printer@@Base+0xd70>
   264b8:	cmp	sl, #0
   264bc:	ldr	r3, [sp, #12]
   264c0:	bne	2620c <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   264c4:	b	26430 <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   264c8:	mov	r5, r0
   264cc:	cmp	r9, r5
   264d0:	movhi	r4, r8
   264d4:	b	26384 <__flatcc_fb_gen_c_json_printer@@Base+0xe78>
   264d8:	movw	r1, #31296	; 0x7a40
   264dc:	movt	r1, #5
   264e0:	ldr	r3, [pc, #160]	; 26588 <__flatcc_fb_gen_c_json_printer@@Base+0x107c>
   264e4:	movw	r0, #31432	; 0x7ac8
   264e8:	movt	r0, #5
   264ec:	mov	r2, #195	; 0xc3
   264f0:	bl	14120 <__assert_fail@plt>
   264f4:	add	sp, sp, #36	; 0x24
   264f8:	ldrd	r4, [sp]
   264fc:	ldrd	r6, [sp, #8]
   26500:	ldrd	r8, [sp, #16]
   26504:	ldrd	sl, [sp, #24]
   26508:	add	sp, sp, #32
   2650c:	pop	{pc}		; (ldr pc, [sp], #4)
   26510:	movw	r1, #31296	; 0x7a40
   26514:	movt	r1, #5
   26518:	ldr	r3, [pc, #104]	; 26588 <__flatcc_fb_gen_c_json_printer@@Base+0x107c>
   2651c:	movw	r0, #31392	; 0x7aa0
   26520:	movt	r0, #5
   26524:	mov	r2, #195	; 0xc3
   26528:	bl	14120 <__assert_fail@plt>
   2652c:	movw	r1, #31296	; 0x7a40
   26530:	movt	r1, #5
   26534:	ldr	r3, [pc, #80]	; 2658c <__flatcc_fb_gen_c_json_printer@@Base+0x1080>
   26538:	movw	r0, #31468	; 0x7aec
   2653c:	movt	r0, #5
   26540:	mov	r2, #192	; 0xc0
   26544:	bl	14120 <__assert_fail@plt>
   26548:	movw	r1, #31296	; 0x7a40
   2654c:	movt	r1, #5
   26550:	ldr	r3, [pc, #44]	; 26584 <__flatcc_fb_gen_c_json_printer@@Base+0x1078>
   26554:	movw	r0, #31392	; 0x7aa0
   26558:	movt	r0, #5
   2655c:	mov	r2, #224	; 0xe0
   26560:	bl	14120 <__assert_fail@plt>
   26564:	movw	r1, #31296	; 0x7a40
   26568:	movt	r1, #5
   2656c:	ldr	r3, [pc, #12]	; 26580 <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   26570:	movw	r0, #31432	; 0x7ac8
   26574:	movt	r0, #5
   26578:	mov	r2, #237	; 0xed
   2657c:	bl	14120 <__assert_fail@plt>
   26580:	andeq	r7, r5, r0, asr r8
   26584:	andeq	r7, r5, ip, ror #16
   26588:	andeq	r7, r5, r0, lsr #17
   2658c:	andeq	r7, r5, r8, lsl #17
   26590:	strd	r4, [sp, #-36]!	; 0xffffffdc
   26594:	mov	r5, r2
   26598:	strd	r6, [sp, #8]
   2659c:	strd	r8, [sp, #16]
   265a0:	ldr	r8, [r3, #60]	; 0x3c
   265a4:	strd	sl, [sp, #24]
   265a8:	mov	fp, r0
   265ac:	str	lr, [sp, #32]
   265b0:	vpush	{d8}
   265b4:	sub	sp, sp, #100	; 0x64
   265b8:	add	r2, sp, #52	; 0x34
   265bc:	str	r3, [sp, #8]
   265c0:	mov	r0, r8
   265c4:	str	r1, [sp, #52]	; 0x34
   265c8:	mov	r1, r3
   265cc:	mov	r3, #0
   265d0:	str	r3, [sp, #56]	; 0x38
   265d4:	str	r1, [sp, #92]	; 0x5c
   265d8:	movw	r1, #23080	; 0x5a28
   265dc:	movt	r1, #2
   265e0:	str	r3, [sp, #60]	; 0x3c
   265e4:	str	r3, [sp, #64]	; 0x40
   265e8:	str	r3, [sp, #68]	; 0x44
   265ec:	str	r3, [sp, #72]	; 0x48
   265f0:	str	r3, [sp, #76]	; 0x4c
   265f4:	str	r3, [sp, #80]	; 0x50
   265f8:	str	r3, [sp, #84]	; 0x54
   265fc:	str	r3, [sp, #88]	; 0x58
   26600:	bl	2ad08 <fb_scope_table_visit@@Base>
   26604:	ldr	r6, [sp, #56]	; 0x38
   26608:	mov	r1, #8
   2660c:	mov	r0, r6
   26610:	bl	13f7c <calloc@plt>
   26614:	ldr	r7, [sp, #60]	; 0x3c
   26618:	mov	r9, r0
   2661c:	mov	r1, #8
   26620:	str	r0, [sp, #68]	; 0x44
   26624:	mov	r0, r7
   26628:	bl	13f7c <calloc@plt>
   2662c:	ldr	r4, [sp, #64]	; 0x40
   26630:	mov	sl, r0
   26634:	str	r0, [sp, #72]	; 0x48
   26638:	mov	r0, r4
   2663c:	bl	14018 <malloc@plt>
   26640:	cmp	r6, #0
   26644:	mov	r3, r0
   26648:	str	r0, [sp, #76]	; 0x4c
   2664c:	movle	r6, #0
   26650:	movgt	r6, #1
   26654:	str	r9, [sp, #80]	; 0x50
   26658:	cmp	r9, #0
   2665c:	str	sl, [sp, #84]	; 0x54
   26660:	movne	r6, #0
   26664:	str	r0, [sp, #88]	; 0x58
   26668:	cmp	r6, #0
   2666c:	bne	2725c <__flatcc_fb_gen_c_json_printer@@Base+0x1d50>
   26670:	cmp	r7, #0
   26674:	movle	r7, #0
   26678:	movgt	r7, #1
   2667c:	cmp	sl, #0
   26680:	movne	r7, #0
   26684:	cmp	r7, #0
   26688:	bne	27284 <__flatcc_fb_gen_c_json_printer@@Base+0x1d78>
   2668c:	adds	r4, r4, #0
   26690:	movne	r4, #1
   26694:	cmp	r0, #0
   26698:	movne	r4, #0
   2669c:	cmp	r4, #0
   266a0:	bne	27244 <__flatcc_fb_gen_c_json_printer@@Base+0x1d38>
   266a4:	mov	r0, r8
   266a8:	add	r2, sp, #52	; 0x34
   266ac:	movw	r1, #23056	; 0x5a10
   266b0:	movt	r1, #2
   266b4:	bl	2ad08 <fb_scope_table_visit@@Base>
   266b8:	ldr	r6, [sp, #56]	; 0x38
   266bc:	movw	r3, #23104	; 0x5a40
   266c0:	movt	r3, #2
   266c4:	mov	r2, #8
   266c8:	ldr	r7, [sp, #68]	; 0x44
   266cc:	mov	r1, r6
   266d0:	mov	r0, r7
   266d4:	bl	140f0 <qsort@plt>
   266d8:	cmp	r6, #0
   266dc:	movgt	r0, r4
   266e0:	ble	266f8 <__flatcc_fb_gen_c_json_printer@@Base+0x11ec>
   266e4:	ldr	r3, [r7, r0, lsl #3]
   266e8:	str	r0, [r3, #124]	; 0x7c
   266ec:	add	r0, r0, #1
   266f0:	cmp	r6, r0
   266f4:	bne	266e4 <__flatcc_fb_gen_c_json_printer@@Base+0x11d8>
   266f8:	ldr	r4, [sp, #60]	; 0x3c
   266fc:	movw	r3, #23104	; 0x5a40
   26700:	movt	r3, #2
   26704:	mov	r2, #8
   26708:	ldr	r6, [sp, #72]	; 0x48
   2670c:	mov	r1, r4
   26710:	mov	r0, r6
   26714:	bl	140f0 <qsort@plt>
   26718:	cmp	r4, #0
   2671c:	movgt	r3, #0
   26720:	ble	26738 <__flatcc_fb_gen_c_json_printer@@Base+0x122c>
   26724:	ldr	r2, [r6, r3, lsl #3]
   26728:	str	r3, [r2, #124]	; 0x7c
   2672c:	add	r3, r3, #1
   26730:	cmp	r4, r3
   26734:	bne	26724 <__flatcc_fb_gen_c_json_printer@@Base+0x1218>
   26738:	ldr	r0, [sp, #56]	; 0x38
   2673c:	cmp	r0, #0
   26740:	movle	r3, #0
   26744:	strle	r3, [sp, #4]
   26748:	bgt	27150 <__flatcc_fb_gen_c_json_printer@@Base+0x1c44>
   2674c:	ldr	r3, [r5]
   26750:	movw	r1, #31524	; 0x7b24
   26754:	movt	r1, #5
   26758:	mov	r2, #0
   2675c:	mov	r0, fp
   26760:	cmp	r3, #0
   26764:	movne	r3, #2
   26768:	bl	37838 <flatcc_builder_start_buffer@@Base>
   2676c:	cmp	r0, #0
   26770:	bne	26780 <__flatcc_fb_gen_c_json_printer@@Base+0x1274>
   26774:	mov	r1, #5
   26778:	mov	r0, fp
   2677c:	bl	39324 <flatcc_builder_start_table@@Base>
   26780:	ldr	r3, [sp, #8]
   26784:	ldrh	r4, [r3, #16]
   26788:	cmp	r4, #2
   2678c:	beq	2719c <__flatcc_fb_gen_c_json_printer@@Base+0x1c90>
   26790:	ldr	r3, [sp, #8]
   26794:	ldrh	r3, [r3, #32]
   26798:	cmp	r3, #2
   2679c:	beq	271d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
   267a0:	ldr	r3, [sp, #56]	; 0x38
   267a4:	ldr	r2, [sp, #68]	; 0x44
   267a8:	cmp	r3, #0
   267ac:	str	r3, [sp, #20]
   267b0:	str	r2, [sp, #28]
   267b4:	ble	26a30 <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   267b8:	ldr	r3, [sp, #4]
   267bc:	mov	sl, #0
   267c0:	str	sl, [sp, #16]
   267c4:	sub	r3, r3, #4
   267c8:	str	r3, [sp, #24]
   267cc:	ldr	r3, [sp, #28]
   267d0:	add	r3, r3, #4
   267d4:	str	r3, [sp, #44]	; 0x2c
   267d8:	ldr	r4, [sp, #16]
   267dc:	mov	r1, #5
   267e0:	mov	r0, fp
   267e4:	ldr	r3, [sp, #28]
   267e8:	ldr	sl, [r3, r4, lsl #3]
   267ec:	bl	39324 <flatcc_builder_start_table@@Base>
   267f0:	ldr	r3, [sp, #44]	; 0x2c
   267f4:	mov	r0, fp
   267f8:	ldr	r1, [r3, r4, lsl #3]
   267fc:	bl	3b2ac <flatcc_builder_create_string_str@@Base>
   26800:	subs	r4, r0, #0
   26804:	beq	2681c <__flatcc_fb_gen_c_json_printer@@Base+0x1310>
   26808:	mov	r1, #0
   2680c:	mov	r0, fp
   26810:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26814:	cmp	r0, #0
   26818:	strne	r4, [r0]
   2681c:	mov	r0, fp
   26820:	bl	38d04 <flatcc_builder_start_offset_vector@@Base>
   26824:	ldr	r9, [sl, #20]
   26828:	cmp	r9, #0
   2682c:	movwne	r3, #34764	; 0x87cc
   26830:	movne	r8, #0
   26834:	movtne	r3, #5
   26838:	strne	r3, [sp, #40]	; 0x28
   2683c:	beq	26990 <__flatcc_fb_gen_c_json_printer@@Base+0x1484>
   26840:	cmp	r8, #0
   26844:	ldrh	r7, [r9, #72]	; 0x48
   26848:	movne	r6, #0
   2684c:	strne	r6, [sp, #12]
   26850:	bne	26868 <__flatcc_fb_gen_c_json_printer@@Base+0x135c>
   26854:	tst	r7, #128	; 0x80
   26858:	movne	r6, #1
   2685c:	moveq	r6, r8
   26860:	streq	r8, [sp, #12]
   26864:	strne	r6, [sp, #12]
   26868:	ldrh	r3, [r9, #24]
   2686c:	and	r2, r7, #4
   26870:	str	r2, [sp, #32]
   26874:	ubfx	r2, r7, #2, #1
   26878:	cmp	r3, #14
   2687c:	str	r2, [sp, #36]	; 0x24
   26880:	beq	26fb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1aa4>
   26884:	mov	r1, #9
   26888:	mov	r0, fp
   2688c:	bl	39324 <flatcc_builder_start_table@@Base>
   26890:	ldr	r3, [r9, #4]
   26894:	mov	r0, fp
   26898:	ldm	r3, {r1, r2}
   2689c:	bl	3b1b4 <flatcc_builder_create_string@@Base>
   268a0:	subs	r4, r0, #0
   268a4:	beq	268bc <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   268a8:	mov	r1, #0
   268ac:	mov	r0, fp
   268b0:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   268b4:	cmp	r0, #0
   268b8:	strne	r4, [r0]
   268bc:	ldrh	r2, [r9, #24]
   268c0:	mov	r0, fp
   268c4:	ldr	r1, [r9, #16]
   268c8:	bl	25b64 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   268cc:	subs	r4, r0, #0
   268d0:	beq	268e8 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   268d4:	mov	r1, #1
   268d8:	mov	r0, fp
   268dc:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   268e0:	cmp	r0, #0
   268e4:	strne	r4, [r0]
   268e8:	ldrh	r3, [sl, #8]
   268ec:	cmp	r3, #0
   268f0:	beq	26e5c <__flatcc_fb_gen_c_json_printer@@Base+0x1950>
   268f4:	cmp	r3, #1
   268f8:	bne	26924 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   268fc:	ldrh	r4, [r9, #80]	; 0x50
   26900:	cmp	r4, #0
   26904:	beq	26924 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   26908:	mov	r3, #2
   2690c:	mov	r1, #3
   26910:	mov	r2, r3
   26914:	mov	r0, fp
   26918:	bl	3b69c <flatcc_builder_table_add@@Base>
   2691c:	cmp	r0, #0
   26920:	strhne	r4, [r0]
   26924:	ldr	r3, [sp, #32]
   26928:	cmp	r3, #0
   2692c:	beq	26950 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   26930:	mov	r3, #1
   26934:	mov	r1, #6
   26938:	mov	r2, r3
   2693c:	mov	r0, fp
   26940:	bl	3b69c <flatcc_builder_table_add@@Base>
   26944:	cmp	r0, #0
   26948:	ldrne	r3, [sp, #36]	; 0x24
   2694c:	strbne	r3, [r0]
   26950:	mov	r2, #2
   26954:	ldr	r1, [pc, #2480]	; 2730c <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
   26958:	mov	r0, fp
   2695c:	bl	39c08 <flatcc_builder_check_required@@Base>
   26960:	cmp	r0, #0
   26964:	beq	2720c <__flatcc_fb_gen_c_json_printer@@Base+0x1d00>
   26968:	mov	r0, fp
   2696c:	bl	39ca4 <flatcc_builder_end_table@@Base>
   26970:	subs	r1, r0, #0
   26974:	beq	26e48 <__flatcc_fb_gen_c_json_printer@@Base+0x193c>
   26978:	mov	r0, fp
   2697c:	orr	r8, r8, r6
   26980:	bl	3833c <flatcc_builder_offset_vector_push@@Base>
   26984:	ldr	r9, [r9]
   26988:	cmp	r9, #0
   2698c:	bne	26840 <__flatcc_fb_gen_c_json_printer@@Base+0x1334>
   26990:	mov	r0, fp
   26994:	bl	3a384 <flatcc_builder_end_offset_vector@@Base>
   26998:	subs	r4, r0, #0
   2699c:	beq	269b4 <__flatcc_fb_gen_c_json_printer@@Base+0x14a8>
   269a0:	mov	r1, #1
   269a4:	mov	r0, fp
   269a8:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   269ac:	cmp	r0, #0
   269b0:	strne	r4, [r0]
   269b4:	ldrh	r3, [sl, #8]
   269b8:	cmp	r3, #1
   269bc:	beq	26d68 <__flatcc_fb_gen_c_json_printer@@Base+0x185c>
   269c0:	ldrh	r4, [sl, #104]	; 0x68
   269c4:	cmp	r4, #0
   269c8:	beq	269e8 <__flatcc_fb_gen_c_json_printer@@Base+0x14dc>
   269cc:	mov	r3, #4
   269d0:	mov	r1, #3
   269d4:	mov	r2, r3
   269d8:	mov	r0, fp
   269dc:	bl	3b69c <flatcc_builder_table_add@@Base>
   269e0:	cmp	r0, #0
   269e4:	strne	r4, [r0]
   269e8:	mov	r2, #2
   269ec:	ldr	r1, [pc, #2332]	; 27310 <__flatcc_fb_gen_c_json_printer@@Base+0x1e04>
   269f0:	mov	r0, fp
   269f4:	bl	39c08 <flatcc_builder_check_required@@Base>
   269f8:	cmp	r0, #0
   269fc:	beq	27290 <__flatcc_fb_gen_c_json_printer@@Base+0x1d84>
   26a00:	ldr	r3, [sp, #16]
   26a04:	mov	r0, fp
   26a08:	add	r3, r3, #1
   26a0c:	mov	r4, r3
   26a10:	str	r3, [sp, #16]
   26a14:	bl	39ca4 <flatcc_builder_end_table@@Base>
   26a18:	ldr	r2, [sp, #20]
   26a1c:	ldr	r3, [sp, #24]
   26a20:	cmp	r2, r4
   26a24:	str	r0, [r3, #4]!
   26a28:	str	r3, [sp, #24]
   26a2c:	bne	267d8 <__flatcc_fb_gen_c_json_printer@@Base+0x12cc>
   26a30:	mov	r0, fp
   26a34:	ldr	r1, [sp, #4]
   26a38:	ldr	r2, [sp, #20]
   26a3c:	bl	38e5c <flatcc_builder_create_offset_vector@@Base>
   26a40:	subs	r4, r0, #0
   26a44:	beq	26a5c <__flatcc_fb_gen_c_json_printer@@Base+0x1550>
   26a48:	mov	r1, #0
   26a4c:	mov	r0, fp
   26a50:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26a54:	cmp	r0, #0
   26a58:	strne	r4, [r0]
   26a5c:	ldr	sl, [sp, #60]	; 0x3c
   26a60:	mov	r0, fp
   26a64:	ldr	r3, [sp, #72]	; 0x48
   26a68:	str	r3, [sp, #12]
   26a6c:	bl	38d04 <flatcc_builder_start_offset_vector@@Base>
   26a70:	cmp	sl, #0
   26a74:	ble	26c3c <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   26a78:	ldr	r3, [sp, #12]
   26a7c:	mov	r5, #0
   26a80:	add	r3, r3, #4
   26a84:	str	r3, [sp, #16]
   26a88:	ldr	r3, [sp, #12]
   26a8c:	mov	r1, #4
   26a90:	mov	r0, fp
   26a94:	ldr	r8, [r3, r5, lsl #3]
   26a98:	ldrh	r9, [r8, #8]
   26a9c:	bl	39324 <flatcc_builder_start_table@@Base>
   26aa0:	ldr	r3, [sp, #16]
   26aa4:	mov	r0, fp
   26aa8:	ldr	r1, [r3, r5, lsl #3]
   26aac:	bl	3b2ac <flatcc_builder_create_string_str@@Base>
   26ab0:	subs	r4, r0, #0
   26ab4:	beq	26acc <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   26ab8:	mov	r1, #0
   26abc:	mov	r0, fp
   26ac0:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26ac4:	cmp	r0, #0
   26ac8:	strne	r4, [r0]
   26acc:	mov	r0, fp
   26ad0:	bl	38d04 <flatcc_builder_start_offset_vector@@Base>
   26ad4:	ldr	r4, [r8, #20]
   26ad8:	cmp	r4, #0
   26adc:	beq	26b88 <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   26ae0:	cmp	r9, #4
   26ae4:	mov	r1, #3
   26ae8:	mov	r0, fp
   26aec:	beq	26dd0 <__flatcc_fb_gen_c_json_printer@@Base+0x18c4>
   26af0:	bl	39324 <flatcc_builder_start_table@@Base>
   26af4:	ldr	r3, [r4, #4]
   26af8:	mov	r0, fp
   26afc:	ldm	r3, {r1, r2}
   26b00:	bl	3b1b4 <flatcc_builder_create_string@@Base>
   26b04:	subs	r6, r0, #0
   26b08:	beq	26b24 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   26b0c:	mov	r1, #0
   26b10:	mov	r0, fp
   26b14:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26b18:	cmp	r0, #0
   26b1c:	beq	26b24 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   26b20:	str	r6, [r0]
   26b24:	ldrd	r6, [r4, #48]	; 0x30
   26b28:	orrs	r3, r6, r7
   26b2c:	beq	26b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1640>
   26b30:	mov	r3, #8
   26b34:	mov	r1, #1
   26b38:	mov	r2, r3
   26b3c:	mov	r0, fp
   26b40:	bl	3b69c <flatcc_builder_table_add@@Base>
   26b44:	cmp	r0, #0
   26b48:	strdne	r6, [r0]
   26b4c:	mov	r2, #1
   26b50:	ldr	r1, [pc, #1980]	; 27314 <__flatcc_fb_gen_c_json_printer@@Base+0x1e08>
   26b54:	mov	r0, fp
   26b58:	bl	39c08 <flatcc_builder_check_required@@Base>
   26b5c:	cmp	r0, #0
   26b60:	beq	27228 <__flatcc_fb_gen_c_json_printer@@Base+0x1d1c>
   26b64:	mov	r0, fp
   26b68:	bl	39ca4 <flatcc_builder_end_table@@Base>
   26b6c:	subs	r1, r0, #0
   26b70:	beq	26db4 <__flatcc_fb_gen_c_json_printer@@Base+0x18a8>
   26b74:	mov	r0, fp
   26b78:	bl	3833c <flatcc_builder_offset_vector_push@@Base>
   26b7c:	ldr	r4, [r4]
   26b80:	cmp	r4, #0
   26b84:	bne	26ae0 <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   26b88:	mov	r0, fp
   26b8c:	bl	3a384 <flatcc_builder_end_offset_vector@@Base>
   26b90:	subs	r4, r0, #0
   26b94:	beq	26bac <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   26b98:	mov	r1, #1
   26b9c:	mov	r0, fp
   26ba0:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26ba4:	cmp	r0, #0
   26ba8:	strne	r4, [r0]
   26bac:	cmp	r9, #4
   26bb0:	bne	26bd4 <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   26bb4:	mov	r3, #1
   26bb8:	mov	r1, #2
   26bbc:	mov	r2, r3
   26bc0:	mov	r0, fp
   26bc4:	bl	3b69c <flatcc_builder_table_add@@Base>
   26bc8:	cmp	r0, #0
   26bcc:	movne	r3, #1
   26bd0:	strbne	r3, [r0]
   26bd4:	ldrh	r2, [r8, #48]	; 0x30
   26bd8:	mov	r0, fp
   26bdc:	ldr	r1, [r8, #40]	; 0x28
   26be0:	bl	25b64 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   26be4:	subs	r4, r0, #0
   26be8:	beq	26c00 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   26bec:	mov	r1, #3
   26bf0:	mov	r0, fp
   26bf4:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26bf8:	cmp	r0, #0
   26bfc:	strne	r4, [r0]
   26c00:	mov	r2, #3
   26c04:	ldr	r1, [pc, #1804]	; 27318 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0c>
   26c08:	mov	r0, fp
   26c0c:	bl	39c08 <flatcc_builder_check_required@@Base>
   26c10:	cmp	r0, #0
   26c14:	beq	272ac <__flatcc_fb_gen_c_json_printer@@Base+0x1da0>
   26c18:	mov	r0, fp
   26c1c:	bl	39ca4 <flatcc_builder_end_table@@Base>
   26c20:	subs	r1, r0, #0
   26c24:	beq	26c30 <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   26c28:	mov	r0, fp
   26c2c:	bl	3833c <flatcc_builder_offset_vector_push@@Base>
   26c30:	add	r5, r5, #1
   26c34:	cmp	sl, r5
   26c38:	bne	26a88 <__flatcc_fb_gen_c_json_printer@@Base+0x157c>
   26c3c:	mov	r0, fp
   26c40:	bl	3a384 <flatcc_builder_end_offset_vector@@Base>
   26c44:	subs	r4, r0, #0
   26c48:	beq	26c60 <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
   26c4c:	mov	r1, #1
   26c50:	mov	r0, fp
   26c54:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26c58:	cmp	r0, #0
   26c5c:	strne	r4, [r0]
   26c60:	ldr	r3, [sp, #8]
   26c64:	ldr	r3, [r3, #52]	; 0x34
   26c68:	cmp	r3, #0
   26c6c:	beq	26ca4 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   26c70:	ldrh	r2, [r3, #8]
   26c74:	cmp	r2, #0
   26c78:	bne	26ca4 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   26c7c:	ldr	r2, [sp, #4]
   26c80:	ldr	r3, [r3, #124]	; 0x7c
   26c84:	ldr	r4, [r2, r3, lsl #2]
   26c88:	cmp	r4, #0
   26c8c:	beq	26ca4 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   26c90:	mov	r1, #4
   26c94:	mov	r0, fp
   26c98:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26c9c:	cmp	r0, #0
   26ca0:	strne	r4, [r0]
   26ca4:	mov	r2, #2
   26ca8:	ldr	r1, [pc, #1644]	; 2731c <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
   26cac:	mov	r0, fp
   26cb0:	bl	39c08 <flatcc_builder_check_required@@Base>
   26cb4:	cmp	r0, #0
   26cb8:	beq	272f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1de4>
   26cbc:	mov	r0, fp
   26cc0:	bl	39ca4 <flatcc_builder_end_table@@Base>
   26cc4:	mov	r1, r0
   26cc8:	mov	r0, fp
   26ccc:	bl	379e4 <flatcc_builder_end_buffer@@Base>
   26cd0:	ldr	r0, [sp, #68]	; 0x44
   26cd4:	cmp	r0, #0
   26cd8:	beq	26ce0 <__flatcc_fb_gen_c_json_printer@@Base+0x17d4>
   26cdc:	bl	13fac <free@plt>
   26ce0:	ldr	r0, [sp, #72]	; 0x48
   26ce4:	cmp	r0, #0
   26ce8:	beq	26cf0 <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   26cec:	bl	13fac <free@plt>
   26cf0:	ldr	r0, [sp, #76]	; 0x4c
   26cf4:	cmp	r0, #0
   26cf8:	beq	26d00 <__flatcc_fb_gen_c_json_printer@@Base+0x17f4>
   26cfc:	bl	13fac <free@plt>
   26d00:	ldr	r3, [sp, #4]
   26d04:	mov	r4, #0
   26d08:	str	r4, [sp, #52]	; 0x34
   26d0c:	str	r4, [sp, #56]	; 0x38
   26d10:	str	r4, [sp, #60]	; 0x3c
   26d14:	cmp	r3, r4
   26d18:	mov	r0, r3
   26d1c:	str	r4, [sp, #64]	; 0x40
   26d20:	str	r4, [sp, #68]	; 0x44
   26d24:	str	r4, [sp, #72]	; 0x48
   26d28:	str	r4, [sp, #76]	; 0x4c
   26d2c:	str	r4, [sp, #80]	; 0x50
   26d30:	str	r4, [sp, #84]	; 0x54
   26d34:	str	r4, [sp, #88]	; 0x58
   26d38:	str	r4, [sp, #92]	; 0x5c
   26d3c:	beq	26d48 <__flatcc_fb_gen_c_json_printer@@Base+0x183c>
   26d40:	bl	13fac <free@plt>
   26d44:	mov	r0, r4
   26d48:	add	sp, sp, #100	; 0x64
   26d4c:	vpop	{d8}
   26d50:	ldrd	r4, [sp]
   26d54:	ldrd	r6, [sp, #8]
   26d58:	ldrd	r8, [sp, #16]
   26d5c:	ldrd	sl, [sp, #24]
   26d60:	add	sp, sp, #32
   26d64:	pop	{pc}		; (ldr pc, [sp], #4)
   26d68:	ldr	r4, [sl, #112]	; 0x70
   26d6c:	cmp	r4, #0
   26d70:	beq	26d90 <__flatcc_fb_gen_c_json_printer@@Base+0x1884>
   26d74:	mov	r3, #4
   26d78:	mov	r0, fp
   26d7c:	mov	r2, r3
   26d80:	mov	r1, r3
   26d84:	bl	3b69c <flatcc_builder_table_add@@Base>
   26d88:	cmp	r0, #0
   26d8c:	strne	r4, [r0]
   26d90:	mov	r3, #1
   26d94:	mov	r1, #2
   26d98:	mov	r2, r3
   26d9c:	mov	r0, fp
   26da0:	bl	3b69c <flatcc_builder_table_add@@Base>
   26da4:	cmp	r0, #0
   26da8:	movne	r3, #1
   26dac:	strbne	r3, [r0]
   26db0:	b	269c0 <__flatcc_fb_gen_c_json_printer@@Base+0x14b4>
   26db4:	ldr	r4, [r4]
   26db8:	cmp	r4, #0
   26dbc:	beq	26b88 <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   26dc0:	cmp	r9, #4
   26dc4:	mov	r1, #3
   26dc8:	mov	r0, fp
   26dcc:	bne	26af0 <__flatcc_fb_gen_c_json_printer@@Base+0x15e4>
   26dd0:	bl	39324 <flatcc_builder_start_table@@Base>
   26dd4:	ldr	r3, [r4, #4]
   26dd8:	mov	r0, fp
   26ddc:	ldm	r3, {r1, r2}
   26de0:	bl	3b1b4 <flatcc_builder_create_string@@Base>
   26de4:	subs	r6, r0, #0
   26de8:	beq	26e00 <__flatcc_fb_gen_c_json_printer@@Base+0x18f4>
   26dec:	mov	r1, #0
   26df0:	mov	r0, fp
   26df4:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26df8:	cmp	r0, #0
   26dfc:	strne	r6, [r0]
   26e00:	ldr	r3, [sp, #4]
   26e04:	cmp	r3, #0
   26e08:	beq	26b24 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   26e0c:	ldrh	r3, [r4, #24]
   26e10:	cmp	r3, #14
   26e14:	bne	26b24 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   26e18:	ldr	r3, [r4, #16]
   26e1c:	ldr	r2, [sp, #4]
   26e20:	ldr	r3, [r3, #124]	; 0x7c
   26e24:	ldr	r6, [r2, r3, lsl #2]
   26e28:	cmp	r6, #0
   26e2c:	beq	26b24 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   26e30:	mov	r1, #2
   26e34:	mov	r0, fp
   26e38:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   26e3c:	cmp	r0, #0
   26e40:	bne	26b20 <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   26e44:	b	26b24 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
   26e48:	ldr	r9, [r9]
   26e4c:	orr	r8, r8, r6
   26e50:	cmp	r9, #0
   26e54:	bne	26840 <__flatcc_fb_gen_c_json_printer@@Base+0x1334>
   26e58:	b	26990 <__flatcc_fb_gen_c_json_printer@@Base+0x1484>
   26e5c:	ldrh	r3, [r9, #56]	; 0x38
   26e60:	sub	r3, r3, #3
   26e64:	cmp	r3, #3
   26e68:	ldrls	pc, [pc, r3, lsl #2]
   26e6c:	b	26eac <__flatcc_fb_gen_c_json_printer@@Base+0x19a0>
   26e70:	andeq	r6, r2, r4, asr pc
   26e74:	andeq	r6, r2, ip, asr #30
   26e78:	andeq	r6, r2, ip, asr #30
   26e7c:	andeq	r6, r2, r0, lsl #29
   26e80:	ldrb	r4, [r9, #48]	; 0x30
   26e84:	mov	r5, #0
   26e88:	orrs	r3, r4, r5
   26e8c:	beq	26eac <__flatcc_fb_gen_c_json_printer@@Base+0x19a0>
   26e90:	mov	r3, #8
   26e94:	mov	r1, #4
   26e98:	mov	r2, r3
   26e9c:	mov	r0, fp
   26ea0:	bl	3b69c <flatcc_builder_table_add@@Base>
   26ea4:	cmp	r0, #0
   26ea8:	strdne	r4, [r0]
   26eac:	ldrh	r4, [r9, #96]	; 0x60
   26eb0:	cmp	r4, #0
   26eb4:	moveq	r4, #4
   26eb8:	beq	26f90 <__flatcc_fb_gen_c_json_printer@@Base+0x1a84>
   26ebc:	mov	r3, #2
   26ec0:	mov	r0, fp
   26ec4:	mov	r2, r3
   26ec8:	mov	r1, r3
   26ecc:	bl	3b69c <flatcc_builder_table_add@@Base>
   26ed0:	cmp	r0, #0
   26ed4:	strhne	r4, [r0]
   26ed8:	ldrh	r4, [r9, #96]	; 0x60
   26edc:	add	r4, r4, #2
   26ee0:	lsl	r4, r4, #1
   26ee4:	uxth	r4, r4
   26ee8:	cmp	r4, #0
   26eec:	bne	26f90 <__flatcc_fb_gen_c_json_printer@@Base+0x1a84>
   26ef0:	ldr	r3, [sp, #12]
   26ef4:	cmp	r3, #0
   26ef8:	beq	26f1c <__flatcc_fb_gen_c_json_printer@@Base+0x1a10>
   26efc:	mov	r3, #1
   26f00:	mov	r1, #8
   26f04:	mov	r2, r3
   26f08:	mov	r0, fp
   26f0c:	bl	3b69c <flatcc_builder_table_add@@Base>
   26f10:	cmp	r0, #0
   26f14:	movne	r3, #1
   26f18:	strbne	r3, [r0]
   26f1c:	tst	r7, #256	; 0x100
   26f20:	beq	26924 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   26f24:	mov	r3, #1
   26f28:	mov	r1, #7
   26f2c:	mov	r2, r3
   26f30:	mov	r0, fp
   26f34:	bl	3b69c <flatcc_builder_table_add@@Base>
   26f38:	cmp	r0, #0
   26f3c:	beq	26924 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   26f40:	mov	r3, #1
   26f44:	strb	r3, [r0]
   26f48:	b	26924 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   26f4c:	ldrd	r4, [r9, #48]	; 0x30
   26f50:	b	26e88 <__flatcc_fb_gen_c_json_printer@@Base+0x197c>
   26f54:	vldr	d8, [r9, #48]	; 0x30
   26f58:	vcmp.f64	d8, #0.0
   26f5c:	vmrs	APSR_nzcv, fpscr
   26f60:	beq	26eac <__flatcc_fb_gen_c_json_printer@@Base+0x19a0>
   26f64:	mov	r3, #8
   26f68:	mov	r1, #5
   26f6c:	mov	r2, r3
   26f70:	mov	r0, fp
   26f74:	bl	3b69c <flatcc_builder_table_add@@Base>
   26f78:	ldrh	r4, [r9, #96]	; 0x60
   26f7c:	cmp	r0, #0
   26f80:	vstrne	d8, [r0]
   26f84:	cmp	r4, #0
   26f88:	moveq	r4, #4
   26f8c:	bne	26ebc <__flatcc_fb_gen_c_json_printer@@Base+0x19b0>
   26f90:	mov	r3, #2
   26f94:	mov	r1, #3
   26f98:	mov	r2, r3
   26f9c:	mov	r0, fp
   26fa0:	bl	3b69c <flatcc_builder_table_add@@Base>
   26fa4:	cmp	r0, #0
   26fa8:	strhne	r4, [r0]
   26fac:	b	26ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x19e4>
   26fb0:	ldr	r3, [r9, #16]
   26fb4:	ldrh	r3, [r3, #8]
   26fb8:	cmp	r3, #4
   26fbc:	bne	26884 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   26fc0:	mov	r1, #9
   26fc4:	mov	r0, fp
   26fc8:	bl	39324 <flatcc_builder_start_table@@Base>
   26fcc:	mov	r0, fp
   26fd0:	bl	390b4 <flatcc_builder_start_string@@Base>
   26fd4:	ldr	r3, [r9, #4]
   26fd8:	mov	r0, fp
   26fdc:	ldm	r3, {r1, r2}
   26fe0:	bl	38670 <flatcc_builder_append_string@@Base>
   26fe4:	mov	r2, #5
   26fe8:	mov	r0, fp
   26fec:	ldr	r1, [sp, #40]	; 0x28
   26ff0:	bl	38670 <flatcc_builder_append_string@@Base>
   26ff4:	mov	r0, fp
   26ff8:	bl	3b4c0 <flatcc_builder_end_string@@Base>
   26ffc:	subs	r4, r0, #0
   27000:	beq	27018 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   27004:	mov	r1, #0
   27008:	mov	r0, fp
   2700c:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   27010:	cmp	r0, #0
   27014:	strne	r4, [r0]
   27018:	mov	r1, #3
   2701c:	mov	r0, fp
   27020:	bl	39324 <flatcc_builder_start_table@@Base>
   27024:	subs	r5, r0, #0
   27028:	bne	2708c <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   2702c:	mov	r3, #1
   27030:	mov	r1, r5
   27034:	mov	r2, r3
   27038:	mov	r0, fp
   2703c:	bl	3b69c <flatcc_builder_table_add@@Base>
   27040:	subs	r3, r0, #0
   27044:	beq	2708c <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   27048:	mov	r4, #1
   2704c:	mov	r2, r5
   27050:	ldr	r1, [pc, #712]	; 27320 <__flatcc_fb_gen_c_json_printer@@Base+0x1e14>
   27054:	mov	r0, fp
   27058:	strb	r4, [r3]
   2705c:	bl	39c08 <flatcc_builder_check_required@@Base>
   27060:	cmp	r0, #0
   27064:	beq	272c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   27068:	mov	r0, fp
   2706c:	bl	39ca4 <flatcc_builder_end_table@@Base>
   27070:	subs	r5, r0, #0
   27074:	beq	2708c <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   27078:	mov	r1, r4
   2707c:	mov	r0, fp
   27080:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   27084:	cmp	r0, #0
   27088:	strne	r5, [r0]
   2708c:	ldrh	r4, [r9, #96]	; 0x60
   27090:	add	r5, r4, #1
   27094:	lsl	r5, r5, #1
   27098:	uxth	r5, r5
   2709c:	cmp	r5, #0
   270a0:	beq	270c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb8>
   270a4:	mov	r3, #2
   270a8:	mov	r1, #3
   270ac:	mov	r2, r3
   270b0:	mov	r0, fp
   270b4:	bl	3b69c <flatcc_builder_table_add@@Base>
   270b8:	cmp	r0, #0
   270bc:	ldrh	r4, [r9, #96]	; 0x60
   270c0:	strhne	r5, [r0]
   270c4:	sub	r4, r4, #1
   270c8:	uxth	r4, r4
   270cc:	cmp	r4, #0
   270d0:	beq	270f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be4>
   270d4:	mov	r3, #2
   270d8:	mov	r0, fp
   270dc:	mov	r2, r3
   270e0:	mov	r1, r3
   270e4:	bl	3b69c <flatcc_builder_table_add@@Base>
   270e8:	cmp	r0, #0
   270ec:	strhne	r4, [r0]
   270f0:	and	r3, r7, #4
   270f4:	cmp	r3, #0
   270f8:	beq	2711c <__flatcc_fb_gen_c_json_printer@@Base+0x1c10>
   270fc:	mov	r3, #1
   27100:	mov	r1, #6
   27104:	mov	r2, r3
   27108:	mov	r0, fp
   2710c:	bl	3b69c <flatcc_builder_table_add@@Base>
   27110:	cmp	r0, #0
   27114:	ubfxne	r3, r7, #2, #1
   27118:	strbne	r3, [r0]
   2711c:	mov	r2, #2
   27120:	ldr	r1, [pc, #484]	; 2730c <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
   27124:	mov	r0, fp
   27128:	bl	39c08 <flatcc_builder_check_required@@Base>
   2712c:	cmp	r0, #0
   27130:	beq	2720c <__flatcc_fb_gen_c_json_printer@@Base+0x1d00>
   27134:	mov	r0, fp
   27138:	bl	39ca4 <flatcc_builder_end_table@@Base>
   2713c:	subs	r1, r0, #0
   27140:	beq	26884 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   27144:	mov	r0, fp
   27148:	bl	3833c <flatcc_builder_offset_vector_push@@Base>
   2714c:	b	26884 <__flatcc_fb_gen_c_json_printer@@Base+0x1378>
   27150:	lsl	r0, r0, #2
   27154:	bl	14018 <malloc@plt>
   27158:	subs	r3, r0, #0
   2715c:	str	r3, [sp, #4]
   27160:	bne	2674c <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
   27164:	ldr	r0, [sp, #68]	; 0x44
   27168:	cmp	r0, #0
   2716c:	beq	27174 <__flatcc_fb_gen_c_json_printer@@Base+0x1c68>
   27170:	bl	13fac <free@plt>
   27174:	ldr	r0, [sp, #72]	; 0x48
   27178:	cmp	r0, #0
   2717c:	beq	27184 <__flatcc_fb_gen_c_json_printer@@Base+0x1c78>
   27180:	bl	13fac <free@plt>
   27184:	ldr	r0, [sp, #76]	; 0x4c
   27188:	cmp	r0, #0
   2718c:	beq	27194 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   27190:	bl	13fac <free@plt>
   27194:	mvn	r0, #0
   27198:	b	26d48 <__flatcc_fb_gen_c_json_printer@@Base+0x183c>
   2719c:	mov	r0, fp
   271a0:	ldr	r1, [r3, #8]
   271a4:	ldr	r2, [r3, #12]
   271a8:	bl	3b1b4 <flatcc_builder_create_string@@Base>
   271ac:	subs	r5, r0, #0
   271b0:	beq	26790 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
   271b4:	mov	r1, r4
   271b8:	mov	r0, fp
   271bc:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   271c0:	ldr	r3, [sp, #8]
   271c4:	cmp	r0, #0
   271c8:	strne	r5, [r0]
   271cc:	ldrh	r3, [r3, #32]
   271d0:	cmp	r3, #2
   271d4:	bne	267a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1294>
   271d8:	ldr	r3, [sp, #8]
   271dc:	mov	r0, fp
   271e0:	ldr	r1, [r3, #24]
   271e4:	ldr	r2, [r3, #28]
   271e8:	bl	3b1b4 <flatcc_builder_create_string@@Base>
   271ec:	subs	r4, r0, #0
   271f0:	beq	267a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1294>
   271f4:	mov	r1, #3
   271f8:	mov	r0, fp
   271fc:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   27200:	cmp	r0, #0
   27204:	strne	r4, [r0]
   27208:	b	267a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1294>
   2720c:	movw	r1, #31056	; 0x7950
   27210:	movt	r1, #5
   27214:	ldr	r3, [pc, #264]	; 27324 <__flatcc_fb_gen_c_json_printer@@Base+0x1e18>
   27218:	movw	r0, #31532	; 0x7b2c
   2721c:	movt	r0, #5
   27220:	mov	r2, #29
   27224:	bl	14120 <__assert_fail@plt>
   27228:	movw	r1, #31056	; 0x7950
   2722c:	movt	r1, #5
   27230:	ldr	r3, [pc, #240]	; 27328 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   27234:	movw	r0, #31824	; 0x7c50
   27238:	movt	r0, #5
   2723c:	mov	r2, #25
   27240:	bl	14120 <__assert_fail@plt>
   27244:	cmp	r9, #0
   27248:	beq	272e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1dd8>
   2724c:	mov	r0, r9
   27250:	str	r3, [sp, #4]
   27254:	bl	13fac <free@plt>
   27258:	ldr	r3, [sp, #4]
   2725c:	cmp	sl, #0
   27260:	beq	27274 <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   27264:	mov	r0, sl
   27268:	str	r3, [sp, #4]
   2726c:	bl	13fac <free@plt>
   27270:	ldr	r3, [sp, #4]
   27274:	cmp	r3, #0
   27278:	beq	27194 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   2727c:	mov	r0, r3
   27280:	b	27190 <__flatcc_fb_gen_c_json_printer@@Base+0x1c84>
   27284:	cmp	r9, #0
   27288:	bne	2724c <__flatcc_fb_gen_c_json_printer@@Base+0x1d40>
   2728c:	b	27274 <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   27290:	movw	r1, #31056	; 0x7950
   27294:	movt	r1, #5
   27298:	ldr	r3, [pc, #140]	; 2732c <__flatcc_fb_gen_c_json_printer@@Base+0x1e20>
   2729c:	movw	r0, #31676	; 0x7bbc
   272a0:	movt	r0, #5
   272a4:	mov	r2, #31
   272a8:	bl	14120 <__assert_fail@plt>
   272ac:	movw	r1, #31056	; 0x7950
   272b0:	movt	r1, #5
   272b4:	ldr	r3, [pc, #116]	; 27330 <__flatcc_fb_gen_c_json_printer@@Base+0x1e24>
   272b8:	movw	r0, #31976	; 0x7ce8
   272bc:	movt	r0, #5
   272c0:	mov	r2, #27
   272c4:	bl	14120 <__assert_fail@plt>
   272c8:	movw	r1, #31056	; 0x7950
   272cc:	movt	r1, #5
   272d0:	ldr	r3, [pc, #92]	; 27334 <__flatcc_fb_gen_c_json_printer@@Base+0x1e28>
   272d4:	movw	r0, #31152	; 0x79b0
   272d8:	movt	r0, #5
   272dc:	mov	r2, #23
   272e0:	bl	14120 <__assert_fail@plt>
   272e4:	cmp	sl, #0
   272e8:	bne	27264 <__flatcc_fb_gen_c_json_printer@@Base+0x1d58>
   272ec:	b	27194 <__flatcc_fb_gen_c_json_printer@@Base+0x1c88>
   272f0:	movw	r1, #31056	; 0x7950
   272f4:	movt	r1, #5
   272f8:	ldr	r3, [pc, #56]	; 27338 <__flatcc_fb_gen_c_json_printer@@Base+0x1e2c>
   272fc:	movw	r0, #32120	; 0x7d78
   27300:	movt	r0, #5
   27304:	mov	r2, #33	; 0x21
   27308:	bl	14120 <__assert_fail@plt>
   2730c:			; <UNDEFINED> instruction: 0x000578b8
   27310:	ldrdeq	r7, [r5], -r8
   27314:	strdeq	r7, [r5], -r8
   27318:	andeq	r7, r5, r4, lsl r9
   2731c:	andeq	r7, r5, r0, lsr r9
   27320:	andeq	r7, r5, r8, lsr r8
   27324:	andeq	r7, r5, r0, asr #17
   27328:	strdeq	r7, [r5], -ip
   2732c:	andeq	r7, r5, r0, ror #17
   27330:	andeq	r7, r5, ip, lsl r9
   27334:	andeq	r7, r5, ip, lsr r8
   27338:	andeq	r7, r5, r8, lsr r9

0002733c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2733c:	strd	r4, [sp, #-20]!	; 0xffffffec
   27340:	mov	r4, r2
   27344:	mov	r5, r3
   27348:	strd	r6, [sp, #8]
   2734c:	mov	r6, r0
   27350:	mov	r7, r1
   27354:	str	lr, [sp, #16]
   27358:	sub	sp, sp, #236	; 0xec
   2735c:	mov	r0, sp
   27360:	bl	36da0 <flatcc_builder_init@@Base>
   27364:	mov	r3, r7
   27368:	add	r2, r6, #188	; 0xbc
   2736c:	ldr	r1, [r6, #184]	; 0xb8
   27370:	mov	r0, sp
   27374:	bl	26590 <__flatcc_fb_gen_c_json_printer@@Base+0x1084>
   27378:	mov	r1, r4
   2737c:	mov	r0, sp
   27380:	ldr	r2, [r5]
   27384:	bl	3c0bc <flatcc_builder_copy_buffer@@Base>
   27388:	cmp	r0, #0
   2738c:	beq	27398 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5c>
   27390:	mov	r0, r4
   27394:	bl	25eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x9ac>
   27398:	mov	r0, sp
   2739c:	bl	3bff0 <flatcc_builder_get_buffer_size@@Base>
   273a0:	str	r0, [r5]
   273a4:	mov	r0, sp
   273a8:	bl	36f68 <flatcc_builder_clear@@Base>
   273ac:	mov	r0, r4
   273b0:	add	sp, sp, #236	; 0xec
   273b4:	ldrd	r4, [sp]
   273b8:	ldrd	r6, [sp, #8]
   273bc:	add	sp, sp, #16
   273c0:	pop	{pc}		; (ldr pc, [sp], #4)

000273c4 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   273c4:	strd	r4, [sp, #-16]!
   273c8:	mov	r4, r0
   273cc:	mov	r5, r1
   273d0:	str	r6, [sp, #8]
   273d4:	mov	r6, r2
   273d8:	str	lr, [sp, #12]
   273dc:	sub	sp, sp, #232	; 0xe8
   273e0:	mov	r0, sp
   273e4:	bl	36da0 <flatcc_builder_init@@Base>
   273e8:	add	r2, r4, #188	; 0xbc
   273ec:	mov	r3, r5
   273f0:	ldr	r1, [r4, #184]	; 0xb8
   273f4:	mov	r0, sp
   273f8:	bl	26590 <__flatcc_fb_gen_c_json_printer@@Base+0x1084>
   273fc:	cmp	r0, #0
   27400:	movne	r4, #0
   27404:	bne	27420 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x5c>
   27408:	mov	r1, r6
   2740c:	mov	r0, sp
   27410:	bl	3c0f8 <flatcc_builder_finalize_buffer@@Base>
   27414:	subs	r4, r0, #0
   27418:	beq	27420 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x5c>
   2741c:	bl	25eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x9ac>
   27420:	mov	r0, sp
   27424:	bl	36f68 <flatcc_builder_clear@@Base>
   27428:	mov	r0, r4
   2742c:	add	sp, sp, #232	; 0xe8
   27430:	ldrd	r4, [sp]
   27434:	ldr	r6, [sp, #8]
   27438:	add	sp, sp, #12
   2743c:	pop	{pc}		; (ldr pc, [sp], #4)

00027440 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   27440:	strd	r4, [sp, #-28]!	; 0xffffffe4
   27444:	mov	r4, r0
   27448:	ldr	r5, [r0, #216]	; 0xd8
   2744c:	strd	r6, [sp, #8]
   27450:	mov	r6, r1
   27454:	strd	r8, [sp, #16]
   27458:	str	lr, [sp, #24]
   2745c:	sub	sp, sp, #252	; 0xfc
   27460:	ldr	r7, [r0, #108]	; 0x6c
   27464:	cmp	r5, #0
   27468:	beq	275b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   2746c:	mov	r0, r5
   27470:	bl	14054 <strlen@plt>
   27474:	mov	r8, r0
   27478:	cmp	r7, #0
   2747c:	beq	27538 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf8>
   27480:	movw	r3, #49324	; 0xc0ac
   27484:	movt	r3, #6
   27488:	ldr	r5, [r3]
   2748c:	cmp	r5, #0
   27490:	beq	27608 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
   27494:	add	r0, sp, #16
   27498:	bl	36da0 <flatcc_builder_init@@Base>
   2749c:	add	r2, r4, #188	; 0xbc
   274a0:	mov	r3, r6
   274a4:	ldr	r1, [r4, #184]	; 0xb8
   274a8:	add	r0, sp, #16
   274ac:	bl	26590 <__flatcc_fb_gen_c_json_printer@@Base+0x1084>
   274b0:	subs	r4, r0, #0
   274b4:	bne	27594 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   274b8:	add	r1, sp, #12
   274bc:	add	r0, sp, #16
   274c0:	bl	3c0f8 <flatcc_builder_finalize_buffer@@Base>
   274c4:	subs	r6, r0, #0
   274c8:	beq	27594 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   274cc:	bl	25eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x9ac>
   274d0:	add	r0, sp, #16
   274d4:	bl	36f68 <flatcc_builder_clear@@Base>
   274d8:	mov	r3, r5
   274dc:	mov	r1, #1
   274e0:	ldr	r2, [sp, #12]
   274e4:	mov	r0, r6
   274e8:	bl	13ff4 <fwrite@plt>
   274ec:	ldr	r3, [sp, #12]
   274f0:	cmp	r0, r3
   274f4:	bne	275c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
   274f8:	mov	r0, r6
   274fc:	bl	13fac <free@plt>
   27500:	movw	r3, #49324	; 0xc0ac
   27504:	movt	r3, #6
   27508:	ldr	r3, [r3]
   2750c:	cmp	r3, r5
   27510:	beq	2751c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   27514:	mov	r0, r5
   27518:	bl	140b4 <fclose@plt>
   2751c:	mov	r0, r4
   27520:	add	sp, sp, #252	; 0xfc
   27524:	ldrd	r4, [sp]
   27528:	ldrd	r6, [sp, #8]
   2752c:	ldrd	r8, [sp, #16]
   27530:	add	sp, sp, #24
   27534:	pop	{pc}		; (ldr pc, [sp], #4)
   27538:	ldr	r7, [r6, #160]	; 0xa0
   2753c:	mov	r9, #1
   27540:	mov	r0, r7
   27544:	bl	14054 <strlen@plt>
   27548:	movw	ip, #3404	; 0xd4c
   2754c:	movt	ip, #4
   27550:	mov	r3, r0
   27554:	mov	r2, r7
   27558:	mov	r1, r8
   2755c:	mov	r0, r5
   27560:	str	ip, [sp]
   27564:	str	r9, [sp, #4]
   27568:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   2756c:	subs	r7, r0, #0
   27570:	beq	27610 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0>
   27574:	movw	r1, #3664	; 0xe50
   27578:	movt	r1, #4
   2757c:	bl	13fa0 <fopen@plt>
   27580:	subs	r5, r0, #0
   27584:	beq	275e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a8>
   27588:	mov	r0, r7
   2758c:	bl	13fac <free@plt>
   27590:	b	2748c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c>
   27594:	add	r0, sp, #16
   27598:	mvn	r4, #0
   2759c:	bl	36f68 <flatcc_builder_clear@@Base>
   275a0:	movw	r0, #32320	; 0x7e40
   275a4:	movt	r0, #5
   275a8:	bl	1400c <puts@plt>
   275ac:	b	27500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   275b0:	mov	r8, r5
   275b4:	movw	r5, #45408	; 0xb160
   275b8:	movt	r5, #4
   275bc:	b	27478 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x38>
   275c0:	movw	r3, #49320	; 0xc0a8
   275c4:	movt	r3, #6
   275c8:	movw	r0, #32356	; 0x7e64
   275cc:	movt	r0, #5
   275d0:	ldr	r3, [r3]
   275d4:	mov	r2, #38	; 0x26
   275d8:	mov	r1, #1
   275dc:	mvn	r4, #0
   275e0:	bl	13ff4 <fwrite@plt>
   275e4:	b	274f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8>
   275e8:	movw	r3, #49320	; 0xc0a8
   275ec:	movt	r3, #6
   275f0:	movw	r1, #32268	; 0x7e0c
   275f4:	movt	r1, #5
   275f8:	ldr	r0, [r3]
   275fc:	mov	r2, r7
   27600:	bl	1406c <fprintf@plt>
   27604:	b	27588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148>
   27608:	mvn	r4, #0
   2760c:	b	2751c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   27610:	movw	r3, #49320	; 0xc0a8
   27614:	movt	r3, #6
   27618:	movw	r0, #3360	; 0xd20
   2761c:	movt	r0, #4
   27620:	ldr	r3, [r3]
   27624:	mov	r2, #34	; 0x22
   27628:	mov	r1, r9
   2762c:	bl	13ff4 <fwrite@plt>
   27630:	mov	r0, r9
   27634:	bl	14048 <exit@plt>
   27638:	cmp	r3, #0
   2763c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27640:	strd	r6, [sp, #8]
   27644:	strd	r8, [sp, #16]
   27648:	strd	sl, [sp, #24]
   2764c:	str	lr, [sp, #32]
   27650:	sub	sp, sp, #28
   27654:	str	r3, [sp, #8]
   27658:	str	r0, [sp, #12]
   2765c:	beq	2786c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x42c>
   27660:	cmp	r3, #2
   27664:	beq	2784c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40c>
   27668:	cmp	r3, #1
   2766c:	beq	2782c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   27670:	ldr	r7, [r0, #12]
   27674:	mov	r9, r1
   27678:	mov	r3, #179	; 0xb3
   2767c:	mov	sl, r2
   27680:	mov	r4, r0
   27684:	ldr	r1, [r0, #8]
   27688:	mul	r3, r3, r7
   2768c:	cmp	r1, r3, lsr #8
   27690:	bcs	27780 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
   27694:	ldr	r3, [sp, #12]
   27698:	add	ip, sp, #16
   2769c:	movw	r1, #15186	; 0x3b52
   276a0:	movt	r1, #12137	; 0x2f69
   276a4:	mov	r2, sl
   276a8:	mov	r0, r9
   276ac:	sub	r7, r7, #1
   276b0:	ldr	r6, [r3]
   276b4:	mov	r3, #0
   276b8:	stm	sp, {r1, ip}
   276bc:	bl	3c8e4 <cmetrohash64_1@@Base>
   276c0:	ldr	r3, [sp, #16]
   276c4:	ldr	r2, [sp, #64]	; 0x40
   276c8:	sub	r2, r2, #2
   276cc:	cmp	r2, #1
   276d0:	and	r2, r7, r3
   276d4:	add	r4, r6, r2, lsl #2
   276d8:	bls	277b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x370>
   276dc:	ldr	r5, [r6, r2, lsl #2]
   276e0:	cmp	r5, #0
   276e4:	moveq	r8, r4
   276e8:	beq	27744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x304>
   276ec:	add	fp, r3, #1
   276f0:	mov	r8, #0
   276f4:	b	27728 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e8>
   276f8:	mov	r2, sl
   276fc:	mov	r1, r5
   27700:	mov	r0, r9
   27704:	bl	14108 <strncmp@plt>
   27708:	cmp	r0, #0
   2770c:	beq	27798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   27710:	and	r4, r7, fp
   27714:	add	fp, fp, #1
   27718:	ldr	r5, [r6, r4, lsl #2]
   2771c:	add	r4, r6, r4, lsl #2
   27720:	cmp	r5, #0
   27724:	beq	2773c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2fc>
   27728:	cmp	r5, #2
   2772c:	bne	276f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   27730:	cmp	r8, #0
   27734:	moveq	r8, r4
   27738:	b	27710 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   2773c:	cmp	r8, #0
   27740:	moveq	r8, r4
   27744:	ldr	r2, [sp, #12]
   27748:	mov	r5, #0
   2774c:	ldr	r3, [r2, #8]
   27750:	add	r3, r3, #1
   27754:	str	r3, [r2, #8]
   27758:	ldr	r3, [sp, #8]
   2775c:	str	r3, [r8]
   27760:	mov	r0, r5
   27764:	add	sp, sp, #28
   27768:	ldrd	r4, [sp]
   2776c:	ldrd	r6, [sp, #8]
   27770:	ldrd	r8, [sp, #16]
   27774:	ldrd	sl, [sp, #24]
   27778:	add	sp, sp, #32
   2777c:	pop	{pc}		; (ldr pc, [sp], #4)
   27780:	lsl	r1, r1, #1
   27784:	bl	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44c>
   27788:	cmp	r0, #0
   2778c:	bne	27804 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   27790:	ldr	r7, [r4, #12]
   27794:	b	27694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x254>
   27798:	ldr	r3, [sp, #64]	; 0x40
   2779c:	cmp	r3, #0
   277a0:	bne	27760 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   277a4:	ldr	r3, [sp, #8]
   277a8:	str	r3, [r4]
   277ac:	b	27760 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   277b0:	ldr	ip, [sp, #12]
   277b4:	ldr	r0, [r6, r2, lsl #2]
   277b8:	ldr	r1, [ip, #8]
   277bc:	cmp	r0, #2
   277c0:	cmpne	r0, #0
   277c4:	add	r2, r1, #1
   277c8:	str	r2, [ip, #8]
   277cc:	beq	277f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   277d0:	add	r3, r3, #1
   277d4:	and	r2, r7, r3
   277d8:	add	r3, r3, #1
   277dc:	ldr	r1, [r6, r2, lsl #2]
   277e0:	add	r2, r6, r2, lsl #2
   277e4:	cmp	r1, #0
   277e8:	cmpne	r1, #2
   277ec:	bne	277d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x394>
   277f0:	mov	r4, r2
   277f4:	ldr	r3, [sp, #8]
   277f8:	mov	r5, #0
   277fc:	str	r3, [r4]
   27800:	b	27760 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
   27804:	movw	r3, #49320	; 0xc0a8
   27808:	movt	r3, #6
   2780c:	movw	r2, #32572	; 0x7f3c
   27810:	movt	r2, #5
   27814:	ldr	r0, [r3]
   27818:	movw	r1, #32624	; 0x7f70
   2781c:	movt	r1, #5
   27820:	bl	1406c <fprintf@plt>
   27824:	mov	r0, #1
   27828:	bl	14048 <exit@plt>
   2782c:	movw	r3, #32396	; 0x7e8c
   27830:	movt	r3, #5
   27834:	movw	r1, #32420	; 0x7ea4
   27838:	movt	r1, #5
   2783c:	movw	r0, #32548	; 0x7f24
   27840:	movt	r0, #5
   27844:	mov	r2, #116	; 0x74
   27848:	bl	14120 <__assert_fail@plt>
   2784c:	movw	r3, #32396	; 0x7e8c
   27850:	movt	r3, #5
   27854:	movw	r1, #32420	; 0x7ea4
   27858:	movt	r1, #5
   2785c:	movw	r0, #32524	; 0x7f0c
   27860:	movt	r0, #5
   27864:	mov	r2, #115	; 0x73
   27868:	bl	14120 <__assert_fail@plt>
   2786c:	movw	r3, #32396	; 0x7e8c
   27870:	movt	r3, #5
   27874:	movw	r1, #32420	; 0x7ea4
   27878:	movt	r1, #5
   2787c:	movw	r0, #32500	; 0x7ef4
   27880:	movt	r0, #5
   27884:	mov	r2, #114	; 0x72
   27888:	bl	14120 <__assert_fail@plt>
   2788c:	ldr	r3, [r0, #8]
   27890:	strd	r4, [sp, #-28]!	; 0xffffffe4
   27894:	strd	r6, [sp, #8]
   27898:	mov	r7, r0
   2789c:	strd	r8, [sp, #16]
   278a0:	str	lr, [sp, #24]
   278a4:	sub	sp, sp, #28
   278a8:	cmp	r1, r3
   278ac:	ldr	r6, [r0]
   278b0:	movcc	r1, r3
   278b4:	cmp	r1, #2
   278b8:	bls	279b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x578>
   278bc:	mov	r3, #4
   278c0:	movw	r0, #358	; 0x166
   278c4:	mul	r2, r0, r3
   278c8:	lsl	r4, r3, #1
   278cc:	cmp	r1, r2, lsr #8
   278d0:	mov	r3, r4
   278d4:	bhi	278c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x484>
   278d8:	mov	r1, #4
   278dc:	mov	r0, r4
   278e0:	bl	13f7c <calloc@plt>
   278e4:	cmp	r0, #0
   278e8:	str	r0, [sp, #8]
   278ec:	beq	279c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   278f0:	ldr	r3, [r7, #12]
   278f4:	mov	r5, #0
   278f8:	str	r5, [sp, #12]
   278fc:	str	r5, [sp, #16]
   27900:	str	r4, [sp, #20]
   27904:	cmp	r3, r5
   27908:	addeq	r8, sp, #8
   2790c:	beq	2793c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
   27910:	sub	r6, r6, #4
   27914:	add	r8, sp, #8
   27918:	mov	r9, #3
   2791c:	ldr	r4, [r6, #4]!
   27920:	cmp	r4, #0
   27924:	cmpne	r4, #2
   27928:	bne	27984 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x544>
   2792c:	add	r5, r5, #1
   27930:	cmp	r5, r3
   27934:	bcc	2791c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
   27938:	ldr	r6, [r7]
   2793c:	cmp	r6, #0
   27940:	beq	2794c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   27944:	mov	r0, r6
   27948:	bl	13fac <free@plt>
   2794c:	ldr	r3, [sp, #8]
   27950:	mov	r0, #0
   27954:	ldmib	r8, {r1, r2}
   27958:	str	r3, [r7]
   2795c:	ldr	r3, [r8, #12]
   27960:	str	r1, [r7, #4]
   27964:	str	r2, [r7, #8]
   27968:	str	r3, [r7, #12]
   2796c:	add	sp, sp, #28
   27970:	ldrd	r4, [sp]
   27974:	ldrd	r6, [sp, #8]
   27978:	ldrd	r8, [sp, #16]
   2797c:	add	sp, sp, #24
   27980:	pop	{pc}		; (ldr pc, [sp], #4)
   27984:	mov	r0, r4
   27988:	add	r5, r5, #1
   2798c:	bl	14054 <strlen@plt>
   27990:	mov	r2, r0
   27994:	mov	r3, r4
   27998:	str	r9, [sp]
   2799c:	mov	r1, r4
   279a0:	mov	r0, r8
   279a4:	bl	27638 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   279a8:	ldr	r3, [r7, #12]
   279ac:	cmp	r5, r3
   279b0:	bcc	2791c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
   279b4:	b	27938 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f8>
   279b8:	mov	r4, #4
   279bc:	b	278d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x498>
   279c0:	mvn	r0, #0
   279c4:	b	2796c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x52c>

000279c8 <str_set_clear@@Base>:
   279c8:	str	r4, [sp, #-8]!
   279cc:	mov	r4, r0
   279d0:	ldr	r0, [r0]
   279d4:	str	lr, [sp, #4]
   279d8:	cmp	r0, #0
   279dc:	beq	279e4 <str_set_clear@@Base+0x1c>
   279e0:	bl	13fac <free@plt>
   279e4:	mov	r3, #0
   279e8:	str	r3, [r4]
   279ec:	str	r3, [r4, #4]
   279f0:	str	r3, [r4, #8]
   279f4:	str	r3, [r4, #12]
   279f8:	ldr	r4, [sp]
   279fc:	add	sp, sp, #4
   27a00:	pop	{pc}		; (ldr pc, [sp], #4)

00027a04 <str_set_destroy@@Base>:
   27a04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27a08:	strd	r6, [sp, #8]
   27a0c:	mov	r6, r0
   27a10:	str	r8, [sp, #16]
   27a14:	subs	r8, r1, #0
   27a18:	str	lr, [sp, #20]
   27a1c:	ldr	r0, [r0]
   27a20:	beq	27a6c <str_set_destroy@@Base+0x68>
   27a24:	ldr	ip, [r6, #12]
   27a28:	cmp	ip, #0
   27a2c:	beq	27a6c <str_set_destroy@@Base+0x68>
   27a30:	mov	r7, r2
   27a34:	sub	r5, r0, #4
   27a38:	mov	r4, #0
   27a3c:	ldr	r3, [r5, #4]!
   27a40:	mov	r0, r7
   27a44:	cmp	r3, #0
   27a48:	cmpne	r3, #2
   27a4c:	mov	r1, r3
   27a50:	beq	27aa0 <str_set_destroy@@Base+0x9c>
   27a54:	blx	r8
   27a58:	ldr	ip, [r6, #12]
   27a5c:	add	r4, r4, #1
   27a60:	cmp	r4, ip
   27a64:	bcc	27a3c <str_set_destroy@@Base+0x38>
   27a68:	ldr	r0, [r6]
   27a6c:	cmp	r0, #0
   27a70:	beq	27a78 <str_set_destroy@@Base+0x74>
   27a74:	bl	13fac <free@plt>
   27a78:	mov	r3, #0
   27a7c:	str	r3, [r6]
   27a80:	str	r3, [r6, #4]
   27a84:	str	r3, [r6, #8]
   27a88:	str	r3, [r6, #12]
   27a8c:	ldrd	r4, [sp]
   27a90:	ldrd	r6, [sp, #8]
   27a94:	ldr	r8, [sp, #16]
   27a98:	add	sp, sp, #20
   27a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   27aa0:	add	r4, r4, #1
   27aa4:	cmp	r4, ip
   27aa8:	bcc	27a3c <str_set_destroy@@Base+0x38>
   27aac:	b	27a68 <str_set_destroy@@Base+0x64>

00027ab0 <str_set_init@@Base>:
   27ab0:	cmp	r1, #2
   27ab4:	strd	r4, [sp, #-16]!
   27ab8:	mov	r4, r0
   27abc:	str	r6, [sp, #8]
   27ac0:	str	lr, [sp, #12]
   27ac4:	bls	27b20 <str_set_init@@Base+0x70>
   27ac8:	mov	r3, #4
   27acc:	movw	r0, #358	; 0x166
   27ad0:	mul	r2, r0, r3
   27ad4:	lsl	r5, r3, #1
   27ad8:	cmp	r1, r2, lsr #8
   27adc:	mov	r3, r5
   27ae0:	bhi	27ad0 <str_set_init@@Base+0x20>
   27ae4:	mov	r1, #4
   27ae8:	mov	r0, r5
   27aec:	bl	13f7c <calloc@plt>
   27af0:	cmp	r0, #0
   27af4:	str	r0, [r4]
   27af8:	beq	27b28 <str_set_init@@Base+0x78>
   27afc:	mov	r3, #0
   27b00:	mov	r0, r3
   27b04:	str	r3, [r4, #4]
   27b08:	str	r3, [r4, #8]
   27b0c:	str	r5, [r4, #12]
   27b10:	ldrd	r4, [sp]
   27b14:	ldr	r6, [sp, #8]
   27b18:	add	sp, sp, #12
   27b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   27b20:	mov	r5, #4
   27b24:	b	27ae4 <str_set_init@@Base+0x34>
   27b28:	mvn	r0, #0
   27b2c:	b	27b10 <str_set_init@@Base+0x60>

00027b30 <str_set_resize@@Base>:
   27b30:	b	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44c>

00027b34 <str_set_insert@@Base>:
   27b34:	b	27638 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>

00027b38 <str_set_insert_item@@Base>:
   27b38:	strd	r4, [sp, #-16]!
   27b3c:	mov	r5, r0
   27b40:	mov	r0, r1
   27b44:	str	r6, [sp, #8]
   27b48:	mov	r6, r2
   27b4c:	mov	r4, r1
   27b50:	str	lr, [sp, #12]
   27b54:	sub	sp, sp, #8
   27b58:	bl	14054 <strlen@plt>
   27b5c:	mov	r2, r0
   27b60:	mov	r3, r4
   27b64:	str	r6, [sp]
   27b68:	mov	r0, r5
   27b6c:	mov	r1, r4
   27b70:	bl	27638 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   27b74:	add	sp, sp, #8
   27b78:	ldrd	r4, [sp]
   27b7c:	ldr	r6, [sp, #8]
   27b80:	add	sp, sp, #12
   27b84:	pop	{pc}		; (ldr pc, [sp], #4)

00027b88 <str_set_find@@Base>:
   27b88:	strd	r4, [sp, #-28]!	; 0xffffffe4
   27b8c:	strd	r6, [sp, #8]
   27b90:	ldr	r7, [r0]
   27b94:	strd	r8, [sp, #16]
   27b98:	str	lr, [sp, #24]
   27b9c:	sub	sp, sp, #20
   27ba0:	cmp	r7, #0
   27ba4:	beq	27c20 <str_set_find@@Base+0x98>
   27ba8:	mov	r6, r1
   27bac:	add	ip, sp, #8
   27bb0:	ldr	r9, [r0, #12]
   27bb4:	movw	r1, #15186	; 0x3b52
   27bb8:	movt	r1, #12137	; 0x2f69
   27bbc:	mov	r3, #0
   27bc0:	mov	r0, r6
   27bc4:	stm	sp, {r1, ip}
   27bc8:	mov	r8, r2
   27bcc:	bl	3c8e4 <cmetrohash64_1@@Base>
   27bd0:	ldr	r5, [sp, #8]
   27bd4:	sub	r9, r9, #1
   27bd8:	and	r3, r9, r5
   27bdc:	ldr	r4, [r7, r3, lsl #2]
   27be0:	cmp	r4, #0
   27be4:	beq	27c20 <str_set_find@@Base+0x98>
   27be8:	add	r5, r5, #1
   27bec:	cmp	r4, #2
   27bf0:	mov	r1, r4
   27bf4:	mov	r2, r8
   27bf8:	mov	r0, r6
   27bfc:	beq	27c0c <str_set_find@@Base+0x84>
   27c00:	bl	14108 <strncmp@plt>
   27c04:	cmp	r0, #0
   27c08:	beq	27c24 <str_set_find@@Base+0x9c>
   27c0c:	and	r3, r9, r5
   27c10:	add	r5, r5, #1
   27c14:	ldr	r4, [r7, r3, lsl #2]
   27c18:	cmp	r4, #0
   27c1c:	bne	27bec <str_set_find@@Base+0x64>
   27c20:	mov	r4, #0
   27c24:	mov	r0, r4
   27c28:	add	sp, sp, #20
   27c2c:	ldrd	r4, [sp]
   27c30:	ldrd	r6, [sp, #8]
   27c34:	ldrd	r8, [sp, #16]
   27c38:	add	sp, sp, #24
   27c3c:	pop	{pc}		; (ldr pc, [sp], #4)

00027c40 <str_set_find_item@@Base>:
   27c40:	strd	r4, [sp, #-28]!	; 0xffffffe4
   27c44:	mov	r4, r0
   27c48:	mov	r0, r1
   27c4c:	strd	r6, [sp, #8]
   27c50:	strd	r8, [sp, #16]
   27c54:	mov	r8, r1
   27c58:	str	lr, [sp, #24]
   27c5c:	sub	sp, sp, #20
   27c60:	bl	14054 <strlen@plt>
   27c64:	ldr	r7, [r4]
   27c68:	cmp	r7, #0
   27c6c:	beq	27cec <str_set_find_item@@Base+0xac>
   27c70:	add	r1, sp, #8
   27c74:	movw	r3, #15186	; 0x3b52
   27c78:	movt	r3, #12137	; 0x2f69
   27c7c:	mov	r2, r0
   27c80:	ldr	r6, [r4, #12]
   27c84:	mov	r9, r0
   27c88:	mov	r0, r8
   27c8c:	str	r3, [sp]
   27c90:	mov	r3, #0
   27c94:	str	r1, [sp, #4]
   27c98:	bl	3c8e4 <cmetrohash64_1@@Base>
   27c9c:	ldr	r5, [sp, #8]
   27ca0:	sub	r6, r6, #1
   27ca4:	and	r3, r6, r5
   27ca8:	ldr	r4, [r7, r3, lsl #2]
   27cac:	cmp	r4, #0
   27cb0:	beq	27cec <str_set_find_item@@Base+0xac>
   27cb4:	add	r5, r5, #1
   27cb8:	cmp	r4, #2
   27cbc:	mov	r1, r4
   27cc0:	mov	r2, r9
   27cc4:	mov	r0, r8
   27cc8:	beq	27cd8 <str_set_find_item@@Base+0x98>
   27ccc:	bl	14108 <strncmp@plt>
   27cd0:	cmp	r0, #0
   27cd4:	beq	27cf0 <str_set_find_item@@Base+0xb0>
   27cd8:	and	r3, r6, r5
   27cdc:	add	r5, r5, #1
   27ce0:	ldr	r4, [r7, r3, lsl #2]
   27ce4:	cmp	r4, #0
   27ce8:	bne	27cb8 <str_set_find_item@@Base+0x78>
   27cec:	mov	r4, #0
   27cf0:	mov	r0, r4
   27cf4:	add	sp, sp, #20
   27cf8:	ldrd	r4, [sp]
   27cfc:	ldrd	r6, [sp, #8]
   27d00:	ldrd	r8, [sp, #16]
   27d04:	add	sp, sp, #24
   27d08:	pop	{pc}		; (ldr pc, [sp], #4)

00027d0c <str_set_remove@@Base>:
   27d0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27d10:	ldr	r4, [r0]
   27d14:	strd	r6, [sp, #8]
   27d18:	strd	r8, [sp, #16]
   27d1c:	strd	sl, [sp, #24]
   27d20:	str	lr, [sp, #32]
   27d24:	sub	sp, sp, #20
   27d28:	cmp	r4, #0
   27d2c:	beq	27db4 <str_set_remove@@Base+0xa8>
   27d30:	mov	r6, r1
   27d34:	add	ip, sp, #8
   27d38:	movw	r1, #15186	; 0x3b52
   27d3c:	movt	r1, #12137	; 0x2f69
   27d40:	mov	r5, r0
   27d44:	mov	r3, #0
   27d48:	mov	r0, r6
   27d4c:	ldr	r8, [r5, #12]
   27d50:	mov	r7, r2
   27d54:	stm	sp, {r1, ip}
   27d58:	bl	3c8e4 <cmetrohash64_1@@Base>
   27d5c:	ldr	sl, [sp, #8]
   27d60:	sub	r8, r8, #1
   27d64:	and	r3, r8, sl
   27d68:	ldr	r9, [r4, r3, lsl #2]
   27d6c:	add	fp, r4, r3, lsl #2
   27d70:	cmp	r9, #0
   27d74:	beq	27db4 <str_set_remove@@Base+0xa8>
   27d78:	add	sl, sl, #1
   27d7c:	cmp	r9, #2
   27d80:	mov	r1, r9
   27d84:	mov	r2, r7
   27d88:	mov	r0, r6
   27d8c:	beq	27d9c <str_set_remove@@Base+0x90>
   27d90:	bl	14108 <strncmp@plt>
   27d94:	cmp	r0, #0
   27d98:	beq	27dd8 <str_set_remove@@Base+0xcc>
   27d9c:	and	r3, r8, sl
   27da0:	add	sl, sl, #1
   27da4:	ldr	r9, [r4, r3, lsl #2]
   27da8:	add	fp, r4, r3, lsl #2
   27dac:	cmp	r9, #0
   27db0:	bne	27d7c <str_set_remove@@Base+0x70>
   27db4:	mov	r9, #0
   27db8:	mov	r0, r9
   27dbc:	add	sp, sp, #20
   27dc0:	ldrd	r4, [sp]
   27dc4:	ldrd	r6, [sp, #8]
   27dc8:	ldrd	r8, [sp, #16]
   27dcc:	ldrd	sl, [sp, #24]
   27dd0:	add	sp, sp, #32
   27dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   27dd8:	ldr	r3, [r5, #8]
   27ddc:	mov	r2, #2
   27de0:	str	r2, [fp]
   27de4:	sub	r3, r3, #1
   27de8:	str	r3, [r5, #8]
   27dec:	b	27db8 <str_set_remove@@Base+0xac>

00027df0 <str_set_remove_item@@Base>:
   27df0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27df4:	strd	r6, [sp, #8]
   27df8:	mov	r7, r0
   27dfc:	mov	r0, r1
   27e00:	strd	r8, [sp, #16]
   27e04:	mov	r6, r1
   27e08:	strd	sl, [sp, #24]
   27e0c:	str	lr, [sp, #32]
   27e10:	sub	sp, sp, #20
   27e14:	bl	14054 <strlen@plt>
   27e18:	ldr	r4, [r7]
   27e1c:	cmp	r4, #0
   27e20:	beq	27ea8 <str_set_remove_item@@Base+0xb8>
   27e24:	add	r1, sp, #8
   27e28:	movw	r3, #15186	; 0x3b52
   27e2c:	movt	r3, #12137	; 0x2f69
   27e30:	mov	r2, r0
   27e34:	ldr	r5, [r7, #12]
   27e38:	mov	r8, r0
   27e3c:	mov	r0, r6
   27e40:	str	r3, [sp]
   27e44:	mov	r3, #0
   27e48:	str	r1, [sp, #4]
   27e4c:	bl	3c8e4 <cmetrohash64_1@@Base>
   27e50:	ldr	sl, [sp, #8]
   27e54:	sub	r5, r5, #1
   27e58:	and	r3, r5, sl
   27e5c:	ldr	r9, [r4, r3, lsl #2]
   27e60:	add	fp, r4, r3, lsl #2
   27e64:	cmp	r9, #0
   27e68:	beq	27ea8 <str_set_remove_item@@Base+0xb8>
   27e6c:	add	sl, sl, #1
   27e70:	cmp	r9, #2
   27e74:	mov	r1, r9
   27e78:	mov	r2, r8
   27e7c:	mov	r0, r6
   27e80:	beq	27e90 <str_set_remove_item@@Base+0xa0>
   27e84:	bl	14108 <strncmp@plt>
   27e88:	cmp	r0, #0
   27e8c:	beq	27ecc <str_set_remove_item@@Base+0xdc>
   27e90:	and	r3, r5, sl
   27e94:	add	sl, sl, #1
   27e98:	ldr	r9, [r4, r3, lsl #2]
   27e9c:	add	fp, r4, r3, lsl #2
   27ea0:	cmp	r9, #0
   27ea4:	bne	27e70 <str_set_remove_item@@Base+0x80>
   27ea8:	mov	r9, #0
   27eac:	mov	r0, r9
   27eb0:	add	sp, sp, #20
   27eb4:	ldrd	r4, [sp]
   27eb8:	ldrd	r6, [sp, #8]
   27ebc:	ldrd	r8, [sp, #16]
   27ec0:	ldrd	sl, [sp, #24]
   27ec4:	add	sp, sp, #32
   27ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   27ecc:	ldr	r3, [r7, #8]
   27ed0:	mov	r2, #2
   27ed4:	str	r2, [fp]
   27ed8:	sub	r3, r3, #1
   27edc:	str	r3, [r7, #8]
   27ee0:	b	27eac <str_set_remove_item@@Base+0xbc>

00027ee4 <str_set_visit@@Base>:
   27ee4:	ldr	ip, [r0, #12]
   27ee8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27eec:	ldr	r5, [r0]
   27ef0:	strd	r6, [sp, #8]
   27ef4:	str	r8, [sp, #16]
   27ef8:	cmp	ip, #0
   27efc:	str	lr, [sp, #20]
   27f00:	beq	27f44 <str_set_visit@@Base+0x60>
   27f04:	mov	r6, r2
   27f08:	mov	r8, r1
   27f0c:	mov	r7, r0
   27f10:	sub	r5, r5, #4
   27f14:	mov	r4, #0
   27f18:	ldr	r3, [r5, #4]!
   27f1c:	mov	r0, r6
   27f20:	cmp	r3, #0
   27f24:	cmpne	r3, #2
   27f28:	mov	r1, r3
   27f2c:	beq	27f58 <str_set_visit@@Base+0x74>
   27f30:	blx	r8
   27f34:	ldr	ip, [r7, #12]
   27f38:	add	r4, r4, #1
   27f3c:	cmp	r4, ip
   27f40:	bcc	27f18 <str_set_visit@@Base+0x34>
   27f44:	ldrd	r4, [sp]
   27f48:	ldrd	r6, [sp, #8]
   27f4c:	ldr	r8, [sp, #16]
   27f50:	add	sp, sp, #20
   27f54:	pop	{pc}		; (ldr pc, [sp], #4)
   27f58:	add	r4, r4, #1
   27f5c:	cmp	r4, ip
   27f60:	bcc	27f18 <str_set_visit@@Base+0x34>
   27f64:	b	27f44 <str_set_visit@@Base+0x60>
   27f68:	ldr	r3, [r0, #8]
   27f6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27f70:	strd	r6, [sp, #8]
   27f74:	strd	r8, [sp, #16]
   27f78:	mov	r8, r0
   27f7c:	strd	sl, [sp, #24]
   27f80:	cmp	r1, r3
   27f84:	str	lr, [sp, #32]
   27f88:	sub	sp, sp, #44	; 0x2c
   27f8c:	movcc	r1, r3
   27f90:	ldr	r6, [r0]
   27f94:	cmp	r1, #2
   27f98:	bls	28128 <str_set_visit@@Base+0x244>
   27f9c:	mov	r3, #4
   27fa0:	movw	r0, #358	; 0x166
   27fa4:	mul	r2, r0, r3
   27fa8:	lsl	r4, r3, #1
   27fac:	cmp	r1, r2, lsr #8
   27fb0:	mov	r3, r4
   27fb4:	bhi	27fa4 <str_set_visit@@Base+0xc0>
   27fb8:	mov	r1, #4
   27fbc:	mov	r0, r4
   27fc0:	bl	13f7c <calloc@plt>
   27fc4:	cmp	r0, #0
   27fc8:	str	r0, [sp, #24]
   27fcc:	beq	28130 <str_set_visit@@Base+0x24c>
   27fd0:	ldr	r3, [r8, #12]
   27fd4:	mov	r5, #0
   27fd8:	str	r5, [sp, #28]
   27fdc:	str	r5, [sp, #32]
   27fe0:	str	r4, [sp, #36]	; 0x24
   27fe4:	cmp	r3, r5
   27fe8:	beq	280d8 <str_set_visit@@Base+0x1f4>
   27fec:	movw	r9, #15186	; 0x3b52
   27ff0:	movt	r9, #12137	; 0x2f69
   27ff4:	sub	r6, r6, #4
   27ff8:	mov	sl, #179	; 0xb3
   27ffc:	b	2800c <str_set_visit@@Base+0x128>
   28000:	add	r5, r5, #1
   28004:	cmp	r5, r3
   28008:	bcs	280d4 <str_set_visit@@Base+0x1f0>
   2800c:	ldr	r4, [r6, #4]!
   28010:	cmp	r4, #0
   28014:	cmpne	r4, #2
   28018:	beq	28000 <str_set_visit@@Base+0x11c>
   2801c:	cmp	r4, #1
   28020:	beq	28160 <str_set_visit@@Base+0x27c>
   28024:	ldr	r1, [sp, #32]
   28028:	ldr	r7, [sp, #36]	; 0x24
   2802c:	mul	r3, sl, r7
   28030:	cmp	r1, r3, lsr #8
   28034:	bcc	28050 <str_set_visit@@Base+0x16c>
   28038:	lsl	r1, r1, #1
   2803c:	add	r0, sp, #24
   28040:	bl	27f68 <str_set_visit@@Base+0x84>
   28044:	cmp	r0, #0
   28048:	bne	28138 <str_set_visit@@Base+0x254>
   2804c:	ldr	r7, [sp, #36]	; 0x24
   28050:	add	r1, sp, #16
   28054:	mov	r2, #4
   28058:	str	r9, [sp]
   2805c:	mov	r3, #0
   28060:	add	r0, sp, #12
   28064:	ldr	fp, [sp, #24]
   28068:	str	r1, [sp, #4]
   2806c:	sub	r7, r7, #1
   28070:	str	r4, [sp, #12]
   28074:	bl	3c8e4 <cmetrohash64_1@@Base>
   28078:	ldr	r3, [sp, #16]
   2807c:	ldr	r1, [sp, #32]
   28080:	and	r2, r7, r3
   28084:	ldr	r0, [fp, r2, lsl #2]
   28088:	add	r2, fp, r2, lsl #2
   2808c:	add	r1, r1, #1
   28090:	str	r1, [sp, #32]
   28094:	cmp	r0, #0
   28098:	cmpne	r0, #2
   2809c:	beq	280c0 <str_set_visit@@Base+0x1dc>
   280a0:	add	r3, r3, #1
   280a4:	and	r2, r7, r3
   280a8:	add	r3, r3, #1
   280ac:	ldr	r1, [fp, r2, lsl #2]
   280b0:	add	r2, fp, r2, lsl #2
   280b4:	cmp	r1, #0
   280b8:	cmpne	r1, #2
   280bc:	bne	280a4 <str_set_visit@@Base+0x1c0>
   280c0:	ldr	r3, [r8, #12]
   280c4:	add	r5, r5, #1
   280c8:	str	r4, [r2]
   280cc:	cmp	r5, r3
   280d0:	bcc	2800c <str_set_visit@@Base+0x128>
   280d4:	ldr	r6, [r8]
   280d8:	cmp	r6, #0
   280dc:	beq	280e8 <str_set_visit@@Base+0x204>
   280e0:	mov	r0, r6
   280e4:	bl	13fac <free@plt>
   280e8:	ldr	r3, [sp, #24]
   280ec:	mov	r0, #0
   280f0:	ldr	r1, [sp, #28]
   280f4:	ldr	r2, [sp, #32]
   280f8:	str	r3, [r8]
   280fc:	ldr	r3, [sp, #36]	; 0x24
   28100:	str	r1, [r8, #4]
   28104:	str	r2, [r8, #8]
   28108:	str	r3, [r8, #12]
   2810c:	add	sp, sp, #44	; 0x2c
   28110:	ldrd	r4, [sp]
   28114:	ldrd	r6, [sp, #8]
   28118:	ldrd	r8, [sp, #16]
   2811c:	ldrd	sl, [sp, #24]
   28120:	add	sp, sp, #32
   28124:	pop	{pc}		; (ldr pc, [sp], #4)
   28128:	mov	r4, #4
   2812c:	b	27fb8 <str_set_visit@@Base+0xd4>
   28130:	mvn	r0, #0
   28134:	b	2810c <str_set_visit@@Base+0x228>
   28138:	movw	r3, #49320	; 0xc0a8
   2813c:	movt	r3, #6
   28140:	movw	r2, #32572	; 0x7f3c
   28144:	movt	r2, #5
   28148:	ldr	r0, [r3]
   2814c:	movw	r1, #32624	; 0x7f70
   28150:	movt	r1, #5
   28154:	bl	1406c <fprintf@plt>
   28158:	mov	r0, #1
   2815c:	bl	14048 <exit@plt>
   28160:	movw	r3, #32648	; 0x7f88
   28164:	movt	r3, #5
   28168:	movw	r1, #32420	; 0x7ea4
   2816c:	movt	r1, #5
   28170:	movw	r0, #32548	; 0x7f24
   28174:	movt	r0, #5
   28178:	mov	r2, #116	; 0x74
   2817c:	bl	14120 <__assert_fail@plt>

00028180 <ptr_set_clear@@Base>:
   28180:	str	r4, [sp, #-8]!
   28184:	mov	r4, r0
   28188:	ldr	r0, [r0]
   2818c:	str	lr, [sp, #4]
   28190:	cmp	r0, #0
   28194:	beq	2819c <ptr_set_clear@@Base+0x1c>
   28198:	bl	13fac <free@plt>
   2819c:	mov	r3, #0
   281a0:	str	r3, [r4]
   281a4:	str	r3, [r4, #4]
   281a8:	str	r3, [r4, #8]
   281ac:	str	r3, [r4, #12]
   281b0:	ldr	r4, [sp]
   281b4:	add	sp, sp, #4
   281b8:	pop	{pc}		; (ldr pc, [sp], #4)

000281bc <ptr_set_destroy@@Base>:
   281bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   281c0:	strd	r6, [sp, #8]
   281c4:	mov	r6, r0
   281c8:	str	r8, [sp, #16]
   281cc:	subs	r8, r1, #0
   281d0:	str	lr, [sp, #20]
   281d4:	ldr	r0, [r0]
   281d8:	beq	28224 <ptr_set_destroy@@Base+0x68>
   281dc:	ldr	ip, [r6, #12]
   281e0:	cmp	ip, #0
   281e4:	beq	28224 <ptr_set_destroy@@Base+0x68>
   281e8:	mov	r7, r2
   281ec:	sub	r5, r0, #4
   281f0:	mov	r4, #0
   281f4:	ldr	r3, [r5, #4]!
   281f8:	mov	r0, r7
   281fc:	cmp	r3, #0
   28200:	cmpne	r3, #2
   28204:	mov	r1, r3
   28208:	beq	28258 <ptr_set_destroy@@Base+0x9c>
   2820c:	blx	r8
   28210:	ldr	ip, [r6, #12]
   28214:	add	r4, r4, #1
   28218:	cmp	r4, ip
   2821c:	bcc	281f4 <ptr_set_destroy@@Base+0x38>
   28220:	ldr	r0, [r6]
   28224:	cmp	r0, #0
   28228:	beq	28230 <ptr_set_destroy@@Base+0x74>
   2822c:	bl	13fac <free@plt>
   28230:	mov	r3, #0
   28234:	str	r3, [r6]
   28238:	str	r3, [r6, #4]
   2823c:	str	r3, [r6, #8]
   28240:	str	r3, [r6, #12]
   28244:	ldrd	r4, [sp]
   28248:	ldrd	r6, [sp, #8]
   2824c:	ldr	r8, [sp, #16]
   28250:	add	sp, sp, #20
   28254:	pop	{pc}		; (ldr pc, [sp], #4)
   28258:	add	r4, r4, #1
   2825c:	cmp	r4, ip
   28260:	bcc	281f4 <ptr_set_destroy@@Base+0x38>
   28264:	b	28220 <ptr_set_destroy@@Base+0x64>

00028268 <ptr_set_init@@Base>:
   28268:	cmp	r1, #2
   2826c:	strd	r4, [sp, #-16]!
   28270:	mov	r4, r0
   28274:	str	r6, [sp, #8]
   28278:	str	lr, [sp, #12]
   2827c:	bls	282d8 <ptr_set_init@@Base+0x70>
   28280:	mov	r3, #4
   28284:	movw	r0, #358	; 0x166
   28288:	mul	r2, r0, r3
   2828c:	lsl	r5, r3, #1
   28290:	cmp	r1, r2, lsr #8
   28294:	mov	r3, r5
   28298:	bhi	28288 <ptr_set_init@@Base+0x20>
   2829c:	mov	r1, #4
   282a0:	mov	r0, r5
   282a4:	bl	13f7c <calloc@plt>
   282a8:	cmp	r0, #0
   282ac:	str	r0, [r4]
   282b0:	beq	282e0 <ptr_set_init@@Base+0x78>
   282b4:	mov	r3, #0
   282b8:	mov	r0, r3
   282bc:	str	r3, [r4, #4]
   282c0:	str	r3, [r4, #8]
   282c4:	str	r5, [r4, #12]
   282c8:	ldrd	r4, [sp]
   282cc:	ldr	r6, [sp, #8]
   282d0:	add	sp, sp, #12
   282d4:	pop	{pc}		; (ldr pc, [sp], #4)
   282d8:	mov	r5, #4
   282dc:	b	2829c <ptr_set_init@@Base+0x34>
   282e0:	mvn	r0, #0
   282e4:	b	282c8 <ptr_set_init@@Base+0x60>

000282e8 <ptr_set_resize@@Base>:
   282e8:	b	27f68 <str_set_visit@@Base+0x84>

000282ec <ptr_set_insert@@Base>:
   282ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   282f0:	strd	r6, [sp, #8]
   282f4:	subs	r7, r3, #0
   282f8:	strd	r8, [sp, #16]
   282fc:	str	lr, [sp, #24]
   28300:	sub	sp, sp, #28
   28304:	ldr	r9, [sp, #56]	; 0x38
   28308:	beq	28490 <ptr_set_insert@@Base+0x1a4>
   2830c:	cmp	r7, #2
   28310:	beq	28470 <ptr_set_insert@@Base+0x184>
   28314:	cmp	r7, #1
   28318:	beq	284b0 <ptr_set_insert@@Base+0x1c4>
   2831c:	ldr	r4, [r0, #12]
   28320:	mov	r8, r1
   28324:	mov	r3, #179	; 0xb3
   28328:	mov	r6, r0
   2832c:	ldr	r1, [r0, #8]
   28330:	mul	r3, r3, r4
   28334:	cmp	r1, r3, lsr #8
   28338:	bcs	28404 <ptr_set_insert@@Base+0x118>
   2833c:	add	ip, sp, #16
   28340:	movw	r1, #15186	; 0x3b52
   28344:	movt	r1, #12137	; 0x2f69
   28348:	mov	r2, #4
   2834c:	ldr	r5, [r6]
   28350:	mov	r3, #0
   28354:	add	r0, sp, #12
   28358:	stm	sp, {r1, ip}
   2835c:	sub	r4, r4, #1
   28360:	str	r8, [sp, #12]
   28364:	bl	3c8e4 <cmetrohash64_1@@Base>
   28368:	ldr	r2, [sp, #16]
   2836c:	sub	r3, r9, #2
   28370:	cmp	r3, #1
   28374:	and	r1, r4, r2
   28378:	add	r3, r5, r1, lsl #2
   2837c:	bls	28428 <ptr_set_insert@@Base+0x13c>
   28380:	ldr	r0, [r5, r1, lsl #2]
   28384:	cmp	r0, #0
   28388:	moveq	r1, r3
   2838c:	beq	283d8 <ptr_set_insert@@Base+0xec>
   28390:	add	r2, r2, #1
   28394:	mov	r1, #0
   28398:	b	283bc <ptr_set_insert@@Base+0xd0>
   2839c:	cmp	r8, r0
   283a0:	beq	2841c <ptr_set_insert@@Base+0x130>
   283a4:	and	r3, r4, r2
   283a8:	add	r2, r2, #1
   283ac:	ldr	r0, [r5, r3, lsl #2]
   283b0:	add	r3, r5, r3, lsl #2
   283b4:	cmp	r0, #0
   283b8:	beq	283d0 <ptr_set_insert@@Base+0xe4>
   283bc:	cmp	r0, #2
   283c0:	bne	2839c <ptr_set_insert@@Base+0xb0>
   283c4:	cmp	r1, #0
   283c8:	moveq	r1, r3
   283cc:	b	283a4 <ptr_set_insert@@Base+0xb8>
   283d0:	cmp	r1, #0
   283d4:	moveq	r1, r3
   283d8:	ldr	r3, [r6, #8]
   283dc:	mov	r0, #0
   283e0:	add	r3, r3, #1
   283e4:	str	r3, [r6, #8]
   283e8:	str	r7, [r1]
   283ec:	add	sp, sp, #28
   283f0:	ldrd	r4, [sp]
   283f4:	ldrd	r6, [sp, #8]
   283f8:	ldrd	r8, [sp, #16]
   283fc:	add	sp, sp, #24
   28400:	pop	{pc}		; (ldr pc, [sp], #4)
   28404:	lsl	r1, r1, #1
   28408:	bl	27f68 <str_set_visit@@Base+0x84>
   2840c:	cmp	r0, #0
   28410:	bne	284d0 <ptr_set_insert@@Base+0x1e4>
   28414:	ldr	r4, [r6, #12]
   28418:	b	2833c <ptr_set_insert@@Base+0x50>
   2841c:	cmp	r9, #0
   28420:	streq	r7, [r3]
   28424:	b	283ec <ptr_set_insert@@Base+0x100>
   28428:	ldr	r0, [r6, #8]
   2842c:	ldr	ip, [r5, r1, lsl #2]
   28430:	add	r1, r0, #1
   28434:	cmp	ip, #0
   28438:	cmpne	ip, #2
   2843c:	str	r1, [r6, #8]
   28440:	beq	28464 <ptr_set_insert@@Base+0x178>
   28444:	add	r2, r2, #1
   28448:	and	r3, r4, r2
   2844c:	add	r2, r2, #1
   28450:	ldr	r1, [r5, r3, lsl #2]
   28454:	add	r3, r5, r3, lsl #2
   28458:	cmp	r1, #0
   2845c:	cmpne	r1, #2
   28460:	bne	28448 <ptr_set_insert@@Base+0x15c>
   28464:	mov	r0, #0
   28468:	str	r7, [r3]
   2846c:	b	283ec <ptr_set_insert@@Base+0x100>
   28470:	movw	r3, #32648	; 0x7f88
   28474:	movt	r3, #5
   28478:	movw	r1, #32420	; 0x7ea4
   2847c:	movt	r1, #5
   28480:	movw	r0, #32524	; 0x7f0c
   28484:	movt	r0, #5
   28488:	mov	r2, #115	; 0x73
   2848c:	bl	14120 <__assert_fail@plt>
   28490:	movw	r3, #32648	; 0x7f88
   28494:	movt	r3, #5
   28498:	movw	r1, #32420	; 0x7ea4
   2849c:	movt	r1, #5
   284a0:	movw	r0, #32500	; 0x7ef4
   284a4:	movt	r0, #5
   284a8:	mov	r2, #114	; 0x72
   284ac:	bl	14120 <__assert_fail@plt>
   284b0:	movw	r3, #32648	; 0x7f88
   284b4:	movt	r3, #5
   284b8:	movw	r1, #32420	; 0x7ea4
   284bc:	movt	r1, #5
   284c0:	movw	r0, #32548	; 0x7f24
   284c4:	movt	r0, #5
   284c8:	mov	r2, #116	; 0x74
   284cc:	bl	14120 <__assert_fail@plt>
   284d0:	movw	r3, #49320	; 0xc0a8
   284d4:	movt	r3, #6
   284d8:	movw	r2, #32572	; 0x7f3c
   284dc:	movt	r2, #5
   284e0:	ldr	r0, [r3]
   284e4:	movw	r1, #32624	; 0x7f70
   284e8:	movt	r1, #5
   284ec:	bl	1406c <fprintf@plt>
   284f0:	mov	r0, #1
   284f4:	bl	14048 <exit@plt>

000284f8 <ptr_set_insert_item@@Base>:
   284f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   284fc:	strd	r6, [sp, #8]
   28500:	subs	r7, r1, #0
   28504:	str	r8, [sp, #16]
   28508:	str	lr, [sp, #20]
   2850c:	sub	sp, sp, #24
   28510:	beq	28698 <ptr_set_insert_item@@Base+0x1a0>
   28514:	cmp	r7, #2
   28518:	beq	28678 <ptr_set_insert_item@@Base+0x180>
   2851c:	cmp	r7, #1
   28520:	beq	286b8 <ptr_set_insert_item@@Base+0x1c0>
   28524:	mov	r3, #179	; 0xb3
   28528:	ldr	r1, [r0, #8]
   2852c:	mov	r8, r2
   28530:	mov	r6, r0
   28534:	ldr	r4, [r0, #12]
   28538:	mul	r3, r3, r4
   2853c:	cmp	r1, r3, lsr #8
   28540:	bcs	2860c <ptr_set_insert_item@@Base+0x114>
   28544:	add	ip, sp, #16
   28548:	movw	r1, #15186	; 0x3b52
   2854c:	movt	r1, #12137	; 0x2f69
   28550:	mov	r2, #4
   28554:	ldr	r5, [r6]
   28558:	mov	r3, #0
   2855c:	add	r0, sp, #12
   28560:	stm	sp, {r1, ip}
   28564:	sub	r4, r4, #1
   28568:	str	r7, [sp, #12]
   2856c:	bl	3c8e4 <cmetrohash64_1@@Base>
   28570:	ldr	r2, [sp, #16]
   28574:	sub	r3, r8, #2
   28578:	cmp	r3, #1
   2857c:	and	r1, r4, r2
   28580:	add	r3, r5, r1, lsl #2
   28584:	bls	28630 <ptr_set_insert_item@@Base+0x138>
   28588:	ldr	r0, [r5, r1, lsl #2]
   2858c:	cmp	r0, #0
   28590:	moveq	r1, r3
   28594:	beq	285e0 <ptr_set_insert_item@@Base+0xe8>
   28598:	add	r2, r2, #1
   2859c:	mov	r1, #0
   285a0:	b	285c4 <ptr_set_insert_item@@Base+0xcc>
   285a4:	cmp	r7, r0
   285a8:	beq	28624 <ptr_set_insert_item@@Base+0x12c>
   285ac:	and	r3, r4, r2
   285b0:	add	r2, r2, #1
   285b4:	ldr	r0, [r5, r3, lsl #2]
   285b8:	add	r3, r5, r3, lsl #2
   285bc:	cmp	r0, #0
   285c0:	beq	285d8 <ptr_set_insert_item@@Base+0xe0>
   285c4:	cmp	r0, #2
   285c8:	bne	285a4 <ptr_set_insert_item@@Base+0xac>
   285cc:	cmp	r1, #0
   285d0:	moveq	r1, r3
   285d4:	b	285ac <ptr_set_insert_item@@Base+0xb4>
   285d8:	cmp	r1, #0
   285dc:	moveq	r1, r3
   285e0:	ldr	r3, [r6, #8]
   285e4:	mov	r0, #0
   285e8:	add	r3, r3, #1
   285ec:	str	r3, [r6, #8]
   285f0:	str	r7, [r1]
   285f4:	add	sp, sp, #24
   285f8:	ldrd	r4, [sp]
   285fc:	ldrd	r6, [sp, #8]
   28600:	ldr	r8, [sp, #16]
   28604:	add	sp, sp, #20
   28608:	pop	{pc}		; (ldr pc, [sp], #4)
   2860c:	lsl	r1, r1, #1
   28610:	bl	27f68 <str_set_visit@@Base+0x84>
   28614:	cmp	r0, #0
   28618:	bne	286d8 <ptr_set_insert_item@@Base+0x1e0>
   2861c:	ldr	r4, [r6, #12]
   28620:	b	28544 <ptr_set_insert_item@@Base+0x4c>
   28624:	cmp	r8, #0
   28628:	streq	r0, [r3]
   2862c:	b	285f4 <ptr_set_insert_item@@Base+0xfc>
   28630:	ldr	r0, [r6, #8]
   28634:	ldr	ip, [r5, r1, lsl #2]
   28638:	add	r1, r0, #1
   2863c:	cmp	ip, #0
   28640:	cmpne	ip, #2
   28644:	str	r1, [r6, #8]
   28648:	beq	2866c <ptr_set_insert_item@@Base+0x174>
   2864c:	add	r2, r2, #1
   28650:	and	r3, r4, r2
   28654:	add	r2, r2, #1
   28658:	ldr	r1, [r5, r3, lsl #2]
   2865c:	add	r3, r5, r3, lsl #2
   28660:	cmp	r1, #0
   28664:	cmpne	r1, #2
   28668:	bne	28650 <ptr_set_insert_item@@Base+0x158>
   2866c:	mov	r0, #0
   28670:	str	r7, [r3]
   28674:	b	285f4 <ptr_set_insert_item@@Base+0xfc>
   28678:	movw	r3, #32648	; 0x7f88
   2867c:	movt	r3, #5
   28680:	movw	r1, #32420	; 0x7ea4
   28684:	movt	r1, #5
   28688:	movw	r0, #32524	; 0x7f0c
   2868c:	movt	r0, #5
   28690:	mov	r2, #115	; 0x73
   28694:	bl	14120 <__assert_fail@plt>
   28698:	movw	r3, #32648	; 0x7f88
   2869c:	movt	r3, #5
   286a0:	movw	r1, #32420	; 0x7ea4
   286a4:	movt	r1, #5
   286a8:	movw	r0, #32500	; 0x7ef4
   286ac:	movt	r0, #5
   286b0:	mov	r2, #114	; 0x72
   286b4:	bl	14120 <__assert_fail@plt>
   286b8:	movw	r3, #32648	; 0x7f88
   286bc:	movt	r3, #5
   286c0:	movw	r1, #32420	; 0x7ea4
   286c4:	movt	r1, #5
   286c8:	movw	r0, #32548	; 0x7f24
   286cc:	movt	r0, #5
   286d0:	mov	r2, #116	; 0x74
   286d4:	bl	14120 <__assert_fail@plt>
   286d8:	movw	r3, #49320	; 0xc0a8
   286dc:	movt	r3, #6
   286e0:	movw	r2, #32572	; 0x7f3c
   286e4:	movt	r2, #5
   286e8:	ldr	r0, [r3]
   286ec:	movw	r1, #32624	; 0x7f70
   286f0:	movt	r1, #5
   286f4:	bl	1406c <fprintf@plt>
   286f8:	mov	r0, #1
   286fc:	bl	14048 <exit@plt>

00028700 <ptr_set_find@@Base>:
   28700:	strd	r4, [sp, #-16]!
   28704:	str	r6, [sp, #8]
   28708:	ldr	r6, [r0]
   2870c:	str	lr, [sp, #12]
   28710:	sub	sp, sp, #24
   28714:	cmp	r6, #0
   28718:	beq	2878c <ptr_set_find@@Base+0x8c>
   2871c:	mov	r4, r1
   28720:	movw	r3, #15186	; 0x3b52
   28724:	movt	r3, #12137	; 0x2f69
   28728:	add	r1, sp, #16
   2872c:	ldr	r5, [r0, #12]
   28730:	mov	r2, #4
   28734:	add	r0, sp, #12
   28738:	str	r3, [sp]
   2873c:	mov	r3, #0
   28740:	str	r1, [sp, #4]
   28744:	str	r4, [sp, #12]
   28748:	bl	3c8e4 <cmetrohash64_1@@Base>
   2874c:	ldr	r3, [sp, #16]
   28750:	sub	r5, r5, #1
   28754:	and	r2, r5, r3
   28758:	ldr	r0, [r6, r2, lsl #2]
   2875c:	cmp	r0, #0
   28760:	beq	2878c <ptr_set_find@@Base+0x8c>
   28764:	add	r3, r3, #1
   28768:	cmp	r0, #2
   2876c:	and	r2, r5, r3
   28770:	beq	2877c <ptr_set_find@@Base+0x7c>
   28774:	cmp	r4, r0
   28778:	beq	28790 <ptr_set_find@@Base+0x90>
   2877c:	ldr	r0, [r6, r2, lsl #2]
   28780:	add	r3, r3, #1
   28784:	cmp	r0, #0
   28788:	bne	28768 <ptr_set_find@@Base+0x68>
   2878c:	mov	r0, #0
   28790:	add	sp, sp, #24
   28794:	ldrd	r4, [sp]
   28798:	ldr	r6, [sp, #8]
   2879c:	add	sp, sp, #12
   287a0:	pop	{pc}		; (ldr pc, [sp], #4)

000287a4 <ptr_set_find_item@@Base>:
   287a4:	strd	r4, [sp, #-16]!
   287a8:	str	r6, [sp, #8]
   287ac:	ldr	r6, [r0]
   287b0:	str	lr, [sp, #12]
   287b4:	sub	sp, sp, #24
   287b8:	cmp	r6, #0
   287bc:	beq	28830 <ptr_set_find_item@@Base+0x8c>
   287c0:	mov	r4, r1
   287c4:	movw	r3, #15186	; 0x3b52
   287c8:	movt	r3, #12137	; 0x2f69
   287cc:	add	r1, sp, #16
   287d0:	ldr	r5, [r0, #12]
   287d4:	mov	r2, #4
   287d8:	add	r0, sp, #12
   287dc:	str	r3, [sp]
   287e0:	mov	r3, #0
   287e4:	str	r1, [sp, #4]
   287e8:	str	r4, [sp, #12]
   287ec:	bl	3c8e4 <cmetrohash64_1@@Base>
   287f0:	ldr	r3, [sp, #16]
   287f4:	sub	r5, r5, #1
   287f8:	and	r2, r5, r3
   287fc:	ldr	r0, [r6, r2, lsl #2]
   28800:	cmp	r0, #0
   28804:	beq	28830 <ptr_set_find_item@@Base+0x8c>
   28808:	add	r3, r3, #1
   2880c:	cmp	r0, #2
   28810:	and	r2, r5, r3
   28814:	beq	28820 <ptr_set_find_item@@Base+0x7c>
   28818:	cmp	r4, r0
   2881c:	beq	28834 <ptr_set_find_item@@Base+0x90>
   28820:	ldr	r0, [r6, r2, lsl #2]
   28824:	add	r3, r3, #1
   28828:	cmp	r0, #0
   2882c:	bne	2880c <ptr_set_find_item@@Base+0x68>
   28830:	mov	r0, #0
   28834:	add	sp, sp, #24
   28838:	ldrd	r4, [sp]
   2883c:	ldr	r6, [sp, #8]
   28840:	add	sp, sp, #12
   28844:	pop	{pc}		; (ldr pc, [sp], #4)

00028848 <ptr_set_remove@@Base>:
   28848:	strd	r4, [sp, #-20]!	; 0xffffffec
   2884c:	ldr	r4, [r0]
   28850:	strd	r6, [sp, #8]
   28854:	str	lr, [sp, #16]
   28858:	sub	sp, sp, #28
   2885c:	cmp	r4, #0
   28860:	beq	288e0 <ptr_set_remove@@Base+0x98>
   28864:	mov	r6, r1
   28868:	movw	r3, #15186	; 0x3b52
   2886c:	movt	r3, #12137	; 0x2f69
   28870:	add	r1, sp, #16
   28874:	mov	r5, r0
   28878:	mov	r2, #4
   2887c:	str	r6, [sp, #12]
   28880:	add	r0, sp, #12
   28884:	ldr	r7, [r5, #12]
   28888:	str	r3, [sp]
   2888c:	mov	r3, #0
   28890:	str	r1, [sp, #4]
   28894:	bl	3c8e4 <cmetrohash64_1@@Base>
   28898:	ldr	r3, [sp, #16]
   2889c:	sub	r7, r7, #1
   288a0:	and	r2, r7, r3
   288a4:	ldr	r0, [r4, r2, lsl #2]
   288a8:	add	r2, r4, r2, lsl #2
   288ac:	cmp	r0, #0
   288b0:	beq	288e0 <ptr_set_remove@@Base+0x98>
   288b4:	add	r3, r3, #1
   288b8:	cmp	r0, #2
   288bc:	and	r1, r7, r3
   288c0:	beq	288cc <ptr_set_remove@@Base+0x84>
   288c4:	cmp	r6, r0
   288c8:	beq	288f8 <ptr_set_remove@@Base+0xb0>
   288cc:	ldr	r0, [r4, r1, lsl #2]
   288d0:	add	r3, r3, #1
   288d4:	add	r2, r4, r1, lsl #2
   288d8:	cmp	r0, #0
   288dc:	bne	288b8 <ptr_set_remove@@Base+0x70>
   288e0:	mov	r0, #0
   288e4:	add	sp, sp, #28
   288e8:	ldrd	r4, [sp]
   288ec:	ldrd	r6, [sp, #8]
   288f0:	add	sp, sp, #16
   288f4:	pop	{pc}		; (ldr pc, [sp], #4)
   288f8:	ldr	r3, [r5, #8]
   288fc:	mov	r1, #2
   28900:	str	r1, [r2]
   28904:	sub	r3, r3, #1
   28908:	str	r3, [r5, #8]
   2890c:	b	288e4 <ptr_set_remove@@Base+0x9c>

00028910 <ptr_set_remove_item@@Base>:
   28910:	strd	r4, [sp, #-20]!	; 0xffffffec
   28914:	ldr	r4, [r0]
   28918:	strd	r6, [sp, #8]
   2891c:	str	lr, [sp, #16]
   28920:	sub	sp, sp, #28
   28924:	cmp	r4, #0
   28928:	beq	289a8 <ptr_set_remove_item@@Base+0x98>
   2892c:	mov	r6, r1
   28930:	movw	r3, #15186	; 0x3b52
   28934:	movt	r3, #12137	; 0x2f69
   28938:	add	r1, sp, #16
   2893c:	mov	r5, r0
   28940:	mov	r2, #4
   28944:	str	r6, [sp, #12]
   28948:	add	r0, sp, #12
   2894c:	ldr	r7, [r5, #12]
   28950:	str	r3, [sp]
   28954:	mov	r3, #0
   28958:	str	r1, [sp, #4]
   2895c:	bl	3c8e4 <cmetrohash64_1@@Base>
   28960:	ldr	r3, [sp, #16]
   28964:	sub	r7, r7, #1
   28968:	and	r2, r7, r3
   2896c:	ldr	r0, [r4, r2, lsl #2]
   28970:	add	r2, r4, r2, lsl #2
   28974:	cmp	r0, #0
   28978:	beq	289a8 <ptr_set_remove_item@@Base+0x98>
   2897c:	add	r3, r3, #1
   28980:	cmp	r0, #2
   28984:	and	r1, r7, r3
   28988:	beq	28994 <ptr_set_remove_item@@Base+0x84>
   2898c:	cmp	r6, r0
   28990:	beq	289c0 <ptr_set_remove_item@@Base+0xb0>
   28994:	ldr	r0, [r4, r1, lsl #2]
   28998:	add	r3, r3, #1
   2899c:	add	r2, r4, r1, lsl #2
   289a0:	cmp	r0, #0
   289a4:	bne	28980 <ptr_set_remove_item@@Base+0x70>
   289a8:	mov	r0, #0
   289ac:	add	sp, sp, #28
   289b0:	ldrd	r4, [sp]
   289b4:	ldrd	r6, [sp, #8]
   289b8:	add	sp, sp, #16
   289bc:	pop	{pc}		; (ldr pc, [sp], #4)
   289c0:	ldr	r3, [r5, #8]
   289c4:	mov	r1, #2
   289c8:	str	r1, [r2]
   289cc:	sub	r3, r3, #1
   289d0:	str	r3, [r5, #8]
   289d4:	b	289ac <ptr_set_remove_item@@Base+0x9c>

000289d8 <ptr_set_visit@@Base>:
   289d8:	ldr	ip, [r0, #12]
   289dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   289e0:	ldr	r5, [r0]
   289e4:	strd	r6, [sp, #8]
   289e8:	str	r8, [sp, #16]
   289ec:	cmp	ip, #0
   289f0:	str	lr, [sp, #20]
   289f4:	beq	28a38 <ptr_set_visit@@Base+0x60>
   289f8:	mov	r6, r2
   289fc:	mov	r8, r1
   28a00:	mov	r7, r0
   28a04:	sub	r5, r5, #4
   28a08:	mov	r4, #0
   28a0c:	ldr	r3, [r5, #4]!
   28a10:	mov	r0, r6
   28a14:	cmp	r3, #0
   28a18:	cmpne	r3, #2
   28a1c:	mov	r1, r3
   28a20:	beq	28a4c <ptr_set_visit@@Base+0x74>
   28a24:	blx	r8
   28a28:	ldr	ip, [r7, #12]
   28a2c:	add	r4, r4, #1
   28a30:	cmp	r4, ip
   28a34:	bcc	28a0c <ptr_set_visit@@Base+0x34>
   28a38:	ldrd	r4, [sp]
   28a3c:	ldrd	r6, [sp, #8]
   28a40:	ldr	r8, [sp, #16]
   28a44:	add	sp, sp, #20
   28a48:	pop	{pc}		; (ldr pc, [sp], #4)
   28a4c:	add	r4, r4, #1
   28a50:	cmp	r4, ip
   28a54:	bcc	28a0c <ptr_set_visit@@Base+0x34>
   28a58:	b	28a38 <ptr_set_visit@@Base+0x60>
   28a5c:	ldr	r3, [r0, #8]
   28a60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   28a64:	strd	r6, [sp, #8]
   28a68:	strd	r8, [sp, #16]
   28a6c:	mov	r8, r0
   28a70:	strd	sl, [sp, #24]
   28a74:	cmp	r1, r3
   28a78:	str	lr, [sp, #32]
   28a7c:	sub	sp, sp, #44	; 0x2c
   28a80:	movcc	r1, r3
   28a84:	ldr	r6, [r0]
   28a88:	cmp	r1, #2
   28a8c:	bls	28c28 <ptr_set_visit@@Base+0x250>
   28a90:	mov	r3, #4
   28a94:	movw	r0, #358	; 0x166
   28a98:	mul	r2, r0, r3
   28a9c:	lsl	r4, r3, #1
   28aa0:	cmp	r1, r2, lsr #8
   28aa4:	mov	r3, r4
   28aa8:	bhi	28a98 <ptr_set_visit@@Base+0xc0>
   28aac:	mov	r1, #4
   28ab0:	mov	r0, r4
   28ab4:	bl	13f7c <calloc@plt>
   28ab8:	cmp	r0, #0
   28abc:	str	r0, [sp, #24]
   28ac0:	beq	28c30 <ptr_set_visit@@Base+0x258>
   28ac4:	ldr	r3, [r8, #12]
   28ac8:	mov	r5, #0
   28acc:	str	r5, [sp, #28]
   28ad0:	str	r5, [sp, #32]
   28ad4:	str	r4, [sp, #36]	; 0x24
   28ad8:	cmp	r3, r5
   28adc:	beq	28bd8 <ptr_set_visit@@Base+0x200>
   28ae0:	movw	r9, #15186	; 0x3b52
   28ae4:	movt	r9, #12137	; 0x2f69
   28ae8:	sub	r6, r6, #4
   28aec:	mov	fp, #179	; 0xb3
   28af0:	b	28b00 <ptr_set_visit@@Base+0x128>
   28af4:	add	r5, r5, #1
   28af8:	cmp	r5, r3
   28afc:	bcs	28bd4 <ptr_set_visit@@Base+0x1fc>
   28b00:	ldr	r4, [r6, #4]!
   28b04:	cmp	r4, #0
   28b08:	cmpne	r4, #2
   28b0c:	beq	28af4 <ptr_set_visit@@Base+0x11c>
   28b10:	ldr	r2, [r4, #4]
   28b14:	cmp	r4, #1
   28b18:	ldr	sl, [r2]
   28b1c:	ldr	r2, [r2, #4]
   28b20:	beq	28c60 <ptr_set_visit@@Base+0x288>
   28b24:	ldr	r1, [sp, #32]
   28b28:	ldr	r7, [sp, #36]	; 0x24
   28b2c:	mul	r0, fp, r7
   28b30:	cmp	r1, r0, lsr #8
   28b34:	bcc	28b58 <ptr_set_visit@@Base+0x180>
   28b38:	lsl	r1, r1, #1
   28b3c:	add	r0, sp, #24
   28b40:	str	r2, [sp, #12]
   28b44:	bl	28a5c <ptr_set_visit@@Base+0x84>
   28b48:	cmp	r0, #0
   28b4c:	bne	28c38 <ptr_set_visit@@Base+0x260>
   28b50:	ldr	r2, [sp, #12]
   28b54:	ldr	r7, [sp, #36]	; 0x24
   28b58:	add	r1, sp, #16
   28b5c:	mov	r0, sl
   28b60:	str	r9, [sp]
   28b64:	mov	r3, #0
   28b68:	ldr	sl, [sp, #24]
   28b6c:	sub	r7, r7, #1
   28b70:	str	r1, [sp, #4]
   28b74:	bl	3c8e4 <cmetrohash64_1@@Base>
   28b78:	ldr	r3, [sp, #16]
   28b7c:	ldr	r0, [sp, #32]
   28b80:	and	r2, r7, r3
   28b84:	ldr	ip, [sl, r2, lsl #2]
   28b88:	add	r2, sl, r2, lsl #2
   28b8c:	add	r0, r0, #1
   28b90:	str	r0, [sp, #32]
   28b94:	cmp	ip, #2
   28b98:	cmpne	ip, #0
   28b9c:	beq	28bc0 <ptr_set_visit@@Base+0x1e8>
   28ba0:	add	r3, r3, #1
   28ba4:	and	r2, r7, r3
   28ba8:	add	r3, r3, #1
   28bac:	ldr	r0, [sl, r2, lsl #2]
   28bb0:	add	r2, sl, r2, lsl #2
   28bb4:	cmp	r0, #0
   28bb8:	cmpne	r0, #2
   28bbc:	bne	28ba4 <ptr_set_visit@@Base+0x1cc>
   28bc0:	ldr	r3, [r8, #12]
   28bc4:	add	r5, r5, #1
   28bc8:	str	r4, [r2]
   28bcc:	cmp	r5, r3
   28bd0:	bcc	28b00 <ptr_set_visit@@Base+0x128>
   28bd4:	ldr	r6, [r8]
   28bd8:	cmp	r6, #0
   28bdc:	beq	28be8 <ptr_set_visit@@Base+0x210>
   28be0:	mov	r0, r6
   28be4:	bl	13fac <free@plt>
   28be8:	ldr	r3, [sp, #24]
   28bec:	mov	r0, #0
   28bf0:	ldr	r1, [sp, #28]
   28bf4:	ldr	r2, [sp, #32]
   28bf8:	str	r3, [r8]
   28bfc:	ldr	r3, [sp, #36]	; 0x24
   28c00:	str	r1, [r8, #4]
   28c04:	str	r2, [r8, #8]
   28c08:	str	r3, [r8, #12]
   28c0c:	add	sp, sp, #44	; 0x2c
   28c10:	ldrd	r4, [sp]
   28c14:	ldrd	r6, [sp, #8]
   28c18:	ldrd	r8, [sp, #16]
   28c1c:	ldrd	sl, [sp, #24]
   28c20:	add	sp, sp, #32
   28c24:	pop	{pc}		; (ldr pc, [sp], #4)
   28c28:	mov	r4, #4
   28c2c:	b	28aac <ptr_set_visit@@Base+0xd4>
   28c30:	mvn	r0, #0
   28c34:	b	28c0c <ptr_set_visit@@Base+0x234>
   28c38:	movw	r3, #49320	; 0xc0a8
   28c3c:	movt	r3, #6
   28c40:	movw	r2, #32572	; 0x7f3c
   28c44:	movt	r2, #5
   28c48:	ldr	r0, [r3]
   28c4c:	movw	r1, #32624	; 0x7f70
   28c50:	movt	r1, #5
   28c54:	bl	1406c <fprintf@plt>
   28c58:	mov	r0, #1
   28c5c:	bl	14048 <exit@plt>
   28c60:	movw	r3, #32672	; 0x7fa0
   28c64:	movt	r3, #5
   28c68:	movw	r1, #32420	; 0x7ea4
   28c6c:	movt	r1, #5
   28c70:	movw	r0, #32548	; 0x7f24
   28c74:	movt	r0, #5
   28c78:	mov	r2, #116	; 0x74
   28c7c:	bl	14120 <__assert_fail@plt>

00028c80 <fb_symbol_table_clear@@Base>:
   28c80:	str	r4, [sp, #-8]!
   28c84:	mov	r4, r0
   28c88:	ldr	r0, [r0]
   28c8c:	str	lr, [sp, #4]
   28c90:	cmp	r0, #0
   28c94:	beq	28c9c <fb_symbol_table_clear@@Base+0x1c>
   28c98:	bl	13fac <free@plt>
   28c9c:	mov	r3, #0
   28ca0:	str	r3, [r4]
   28ca4:	str	r3, [r4, #4]
   28ca8:	str	r3, [r4, #8]
   28cac:	str	r3, [r4, #12]
   28cb0:	ldr	r4, [sp]
   28cb4:	add	sp, sp, #4
   28cb8:	pop	{pc}		; (ldr pc, [sp], #4)

00028cbc <fb_symbol_table_destroy@@Base>:
   28cbc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28cc0:	strd	r6, [sp, #8]
   28cc4:	mov	r6, r0
   28cc8:	str	r8, [sp, #16]
   28ccc:	subs	r8, r1, #0
   28cd0:	str	lr, [sp, #20]
   28cd4:	ldr	r0, [r0]
   28cd8:	beq	28d24 <fb_symbol_table_destroy@@Base+0x68>
   28cdc:	ldr	ip, [r6, #12]
   28ce0:	cmp	ip, #0
   28ce4:	beq	28d24 <fb_symbol_table_destroy@@Base+0x68>
   28ce8:	mov	r7, r2
   28cec:	sub	r5, r0, #4
   28cf0:	mov	r4, #0
   28cf4:	ldr	r3, [r5, #4]!
   28cf8:	mov	r0, r7
   28cfc:	cmp	r3, #0
   28d00:	cmpne	r3, #2
   28d04:	mov	r1, r3
   28d08:	beq	28d58 <fb_symbol_table_destroy@@Base+0x9c>
   28d0c:	blx	r8
   28d10:	ldr	ip, [r6, #12]
   28d14:	add	r4, r4, #1
   28d18:	cmp	r4, ip
   28d1c:	bcc	28cf4 <fb_symbol_table_destroy@@Base+0x38>
   28d20:	ldr	r0, [r6]
   28d24:	cmp	r0, #0
   28d28:	beq	28d30 <fb_symbol_table_destroy@@Base+0x74>
   28d2c:	bl	13fac <free@plt>
   28d30:	mov	r3, #0
   28d34:	str	r3, [r6]
   28d38:	str	r3, [r6, #4]
   28d3c:	str	r3, [r6, #8]
   28d40:	str	r3, [r6, #12]
   28d44:	ldrd	r4, [sp]
   28d48:	ldrd	r6, [sp, #8]
   28d4c:	ldr	r8, [sp, #16]
   28d50:	add	sp, sp, #20
   28d54:	pop	{pc}		; (ldr pc, [sp], #4)
   28d58:	add	r4, r4, #1
   28d5c:	cmp	r4, ip
   28d60:	bcc	28cf4 <fb_symbol_table_destroy@@Base+0x38>
   28d64:	b	28d20 <fb_symbol_table_destroy@@Base+0x64>

00028d68 <fb_symbol_table_init@@Base>:
   28d68:	cmp	r1, #2
   28d6c:	strd	r4, [sp, #-16]!
   28d70:	mov	r4, r0
   28d74:	str	r6, [sp, #8]
   28d78:	str	lr, [sp, #12]
   28d7c:	bls	28dd8 <fb_symbol_table_init@@Base+0x70>
   28d80:	mov	r3, #4
   28d84:	movw	r0, #358	; 0x166
   28d88:	mul	r2, r0, r3
   28d8c:	lsl	r5, r3, #1
   28d90:	cmp	r1, r2, lsr #8
   28d94:	mov	r3, r5
   28d98:	bhi	28d88 <fb_symbol_table_init@@Base+0x20>
   28d9c:	mov	r1, #4
   28da0:	mov	r0, r5
   28da4:	bl	13f7c <calloc@plt>
   28da8:	cmp	r0, #0
   28dac:	str	r0, [r4]
   28db0:	beq	28de0 <fb_symbol_table_init@@Base+0x78>
   28db4:	mov	r3, #0
   28db8:	mov	r0, r3
   28dbc:	str	r3, [r4, #4]
   28dc0:	str	r3, [r4, #8]
   28dc4:	str	r5, [r4, #12]
   28dc8:	ldrd	r4, [sp]
   28dcc:	ldr	r6, [sp, #8]
   28dd0:	add	sp, sp, #12
   28dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   28dd8:	mov	r5, #4
   28ddc:	b	28d9c <fb_symbol_table_init@@Base+0x34>
   28de0:	mvn	r0, #0
   28de4:	b	28dc8 <fb_symbol_table_init@@Base+0x60>

00028de8 <fb_symbol_table_resize@@Base>:
   28de8:	b	28a5c <ptr_set_visit@@Base+0x84>

00028dec <fb_symbol_table_insert@@Base>:
   28dec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   28df0:	strd	r6, [sp, #8]
   28df4:	strd	r8, [sp, #16]
   28df8:	strd	sl, [sp, #24]
   28dfc:	subs	fp, r3, #0
   28e00:	str	lr, [sp, #32]
   28e04:	sub	sp, sp, #28
   28e08:	str	r1, [sp, #8]
   28e0c:	beq	28fdc <fb_symbol_table_insert@@Base+0x1f0>
   28e10:	cmp	fp, #2
   28e14:	beq	28fbc <fb_symbol_table_insert@@Base+0x1d0>
   28e18:	cmp	fp, #1
   28e1c:	beq	28ffc <fb_symbol_table_insert@@Base+0x210>
   28e20:	mov	r3, #179	; 0xb3
   28e24:	ldr	r1, [r0, #8]
   28e28:	mov	sl, r2
   28e2c:	mov	r9, r0
   28e30:	ldr	r6, [r0, #12]
   28e34:	mul	r3, r3, r6
   28e38:	cmp	r1, r3, lsr #8
   28e3c:	bcs	28f34 <fb_symbol_table_insert@@Base+0x148>
   28e40:	add	ip, sp, #16
   28e44:	movw	r1, #15186	; 0x3b52
   28e48:	movt	r1, #12137	; 0x2f69
   28e4c:	mov	r3, #0
   28e50:	ldr	r8, [r9]
   28e54:	mov	r2, sl
   28e58:	sub	r6, r6, #1
   28e5c:	stm	sp, {r1, ip}
   28e60:	ldr	r0, [sp, #8]
   28e64:	bl	3c8e4 <cmetrohash64_1@@Base>
   28e68:	ldr	r5, [sp, #16]
   28e6c:	ldr	r3, [sp, #64]	; 0x40
   28e70:	sub	r3, r3, #2
   28e74:	cmp	r3, #1
   28e78:	and	r3, r6, r5
   28e7c:	add	r4, r8, r3, lsl #2
   28e80:	bls	28f74 <fb_symbol_table_insert@@Base+0x188>
   28e84:	ldr	r7, [r8, r3, lsl #2]
   28e88:	cmp	r7, #0
   28e8c:	moveq	r3, r4
   28e90:	beq	28f5c <fb_symbol_table_insert@@Base+0x170>
   28e94:	add	r5, r5, #1
   28e98:	mov	r3, #0
   28e9c:	str	r9, [sp, #12]
   28ea0:	mov	r9, sl
   28ea4:	mov	sl, r6
   28ea8:	mov	r6, r5
   28eac:	mov	r5, r3
   28eb0:	b	28edc <fb_symbol_table_insert@@Base+0xf0>
   28eb4:	ldr	r1, [r7, #4]
   28eb8:	ldr	r2, [r1, #4]
   28ebc:	cmp	r9, r2
   28ec0:	beq	28ef0 <fb_symbol_table_insert@@Base+0x104>
   28ec4:	and	r4, sl, r6
   28ec8:	add	r6, r6, #1
   28ecc:	ldr	r7, [r8, r4, lsl #2]
   28ed0:	add	r4, r8, r4, lsl #2
   28ed4:	cmp	r7, #0
   28ed8:	beq	28f4c <fb_symbol_table_insert@@Base+0x160>
   28edc:	cmp	r7, #2
   28ee0:	bne	28eb4 <fb_symbol_table_insert@@Base+0xc8>
   28ee4:	cmp	r5, #0
   28ee8:	moveq	r5, r4
   28eec:	b	28ec4 <fb_symbol_table_insert@@Base+0xd8>
   28ef0:	mov	r2, r9
   28ef4:	ldr	r1, [r1]
   28ef8:	ldr	r0, [sp, #8]
   28efc:	bl	13fd0 <memcmp@plt>
   28f00:	cmp	r0, #0
   28f04:	bne	28ec4 <fb_symbol_table_insert@@Base+0xd8>
   28f08:	ldr	r3, [sp, #64]	; 0x40
   28f0c:	cmp	r3, #0
   28f10:	streq	fp, [r4]
   28f14:	mov	r0, r7
   28f18:	add	sp, sp, #28
   28f1c:	ldrd	r4, [sp]
   28f20:	ldrd	r6, [sp, #8]
   28f24:	ldrd	r8, [sp, #16]
   28f28:	ldrd	sl, [sp, #24]
   28f2c:	add	sp, sp, #32
   28f30:	pop	{pc}		; (ldr pc, [sp], #4)
   28f34:	lsl	r1, r1, #1
   28f38:	bl	28a5c <ptr_set_visit@@Base+0x84>
   28f3c:	cmp	r0, #0
   28f40:	bne	2901c <fb_symbol_table_insert@@Base+0x230>
   28f44:	ldr	r6, [r9, #12]
   28f48:	b	28e40 <fb_symbol_table_insert@@Base+0x54>
   28f4c:	ldr	r9, [sp, #12]
   28f50:	cmp	r5, #0
   28f54:	mov	r3, r5
   28f58:	moveq	r3, r4
   28f5c:	ldr	r2, [r9, #8]
   28f60:	mov	r7, #0
   28f64:	add	r2, r2, #1
   28f68:	str	r2, [r9, #8]
   28f6c:	str	fp, [r3]
   28f70:	b	28f14 <fb_symbol_table_insert@@Base+0x128>
   28f74:	ldr	r2, [r9, #8]
   28f78:	ldr	r1, [r8, r3, lsl #2]
   28f7c:	add	r3, r2, #1
   28f80:	cmp	r1, #0
   28f84:	cmpne	r1, #2
   28f88:	str	r3, [r9, #8]
   28f8c:	beq	28fb0 <fb_symbol_table_insert@@Base+0x1c4>
   28f90:	add	r5, r5, #1
   28f94:	and	r4, r6, r5
   28f98:	add	r5, r5, #1
   28f9c:	ldr	r3, [r8, r4, lsl #2]
   28fa0:	add	r4, r8, r4, lsl #2
   28fa4:	cmp	r3, #0
   28fa8:	cmpne	r3, #2
   28fac:	bne	28f94 <fb_symbol_table_insert@@Base+0x1a8>
   28fb0:	mov	r7, #0
   28fb4:	str	fp, [r4]
   28fb8:	b	28f14 <fb_symbol_table_insert@@Base+0x128>
   28fbc:	movw	r3, #32672	; 0x7fa0
   28fc0:	movt	r3, #5
   28fc4:	movw	r1, #32420	; 0x7ea4
   28fc8:	movt	r1, #5
   28fcc:	movw	r0, #32524	; 0x7f0c
   28fd0:	movt	r0, #5
   28fd4:	mov	r2, #115	; 0x73
   28fd8:	bl	14120 <__assert_fail@plt>
   28fdc:	movw	r3, #32672	; 0x7fa0
   28fe0:	movt	r3, #5
   28fe4:	movw	r1, #32420	; 0x7ea4
   28fe8:	movt	r1, #5
   28fec:	movw	r0, #32500	; 0x7ef4
   28ff0:	movt	r0, #5
   28ff4:	mov	r2, #114	; 0x72
   28ff8:	bl	14120 <__assert_fail@plt>
   28ffc:	movw	r3, #32672	; 0x7fa0
   29000:	movt	r3, #5
   29004:	movw	r1, #32420	; 0x7ea4
   29008:	movt	r1, #5
   2900c:	movw	r0, #32548	; 0x7f24
   29010:	movt	r0, #5
   29014:	mov	r2, #116	; 0x74
   29018:	bl	14120 <__assert_fail@plt>
   2901c:	movw	r3, #49320	; 0xc0a8
   29020:	movt	r3, #6
   29024:	movw	r2, #32572	; 0x7f3c
   29028:	movt	r2, #5
   2902c:	ldr	r0, [r3]
   29030:	movw	r1, #32624	; 0x7f70
   29034:	movt	r1, #5
   29038:	bl	1406c <fprintf@plt>
   2903c:	mov	r0, #1
   29040:	bl	14048 <exit@plt>

00029044 <fb_symbol_table_insert_item@@Base>:
   29044:	ldr	r3, [r1, #4]
   29048:	cmp	r1, #2
   2904c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29050:	strd	r6, [sp, #8]
   29054:	strd	r8, [sp, #16]
   29058:	strd	sl, [sp, #24]
   2905c:	str	lr, [sp, #32]
   29060:	sub	sp, sp, #36	; 0x24
   29064:	ldr	fp, [r3, #4]
   29068:	str	r2, [sp, #16]
   2906c:	ldr	r2, [r3]
   29070:	str	r2, [sp, #12]
   29074:	beq	2923c <fb_symbol_table_insert_item@@Base+0x1f8>
   29078:	cmp	r1, #1
   2907c:	mov	sl, r1
   29080:	beq	2921c <fb_symbol_table_insert_item@@Base+0x1d8>
   29084:	mov	r3, #179	; 0xb3
   29088:	ldr	r1, [r0, #8]
   2908c:	mov	r9, r0
   29090:	ldr	r6, [r0, #12]
   29094:	mul	r3, r3, r6
   29098:	cmp	r1, r3, lsr #8
   2909c:	bcs	29194 <fb_symbol_table_insert_item@@Base+0x150>
   290a0:	add	ip, sp, #24
   290a4:	movw	r1, #15186	; 0x3b52
   290a8:	movt	r1, #12137	; 0x2f69
   290ac:	mov	r3, #0
   290b0:	ldr	r8, [r9]
   290b4:	mov	r2, fp
   290b8:	sub	r6, r6, #1
   290bc:	stm	sp, {r1, ip}
   290c0:	ldr	r0, [sp, #12]
   290c4:	bl	3c8e4 <cmetrohash64_1@@Base>
   290c8:	ldr	r3, [sp, #16]
   290cc:	ldr	r5, [sp, #24]
   290d0:	sub	r3, r3, #2
   290d4:	cmp	r3, #1
   290d8:	and	r3, r6, r5
   290dc:	add	r4, r8, r3, lsl #2
   290e0:	bls	291d4 <fb_symbol_table_insert_item@@Base+0x190>
   290e4:	ldr	r7, [r8, r3, lsl #2]
   290e8:	cmp	r7, #0
   290ec:	moveq	r3, r4
   290f0:	beq	291bc <fb_symbol_table_insert_item@@Base+0x178>
   290f4:	add	r5, r5, #1
   290f8:	mov	r3, #0
   290fc:	str	r9, [sp, #20]
   29100:	mov	r9, r8
   29104:	mov	r8, r6
   29108:	mov	r6, r5
   2910c:	mov	r5, r3
   29110:	b	2913c <fb_symbol_table_insert_item@@Base+0xf8>
   29114:	ldr	r1, [r7, #4]
   29118:	ldr	r2, [r1, #4]
   2911c:	cmp	fp, r2
   29120:	beq	29150 <fb_symbol_table_insert_item@@Base+0x10c>
   29124:	and	r4, r8, r6
   29128:	add	r6, r6, #1
   2912c:	ldr	r7, [r9, r4, lsl #2]
   29130:	add	r4, r9, r4, lsl #2
   29134:	cmp	r7, #0
   29138:	beq	291ac <fb_symbol_table_insert_item@@Base+0x168>
   2913c:	cmp	r7, #2
   29140:	bne	29114 <fb_symbol_table_insert_item@@Base+0xd0>
   29144:	cmp	r5, #0
   29148:	moveq	r5, r4
   2914c:	b	29124 <fb_symbol_table_insert_item@@Base+0xe0>
   29150:	mov	r2, fp
   29154:	ldr	r1, [r1]
   29158:	ldr	r0, [sp, #12]
   2915c:	bl	13fd0 <memcmp@plt>
   29160:	cmp	r0, #0
   29164:	bne	29124 <fb_symbol_table_insert_item@@Base+0xe0>
   29168:	ldr	r3, [sp, #16]
   2916c:	cmp	r3, #0
   29170:	streq	sl, [r4]
   29174:	mov	r0, r7
   29178:	add	sp, sp, #36	; 0x24
   2917c:	ldrd	r4, [sp]
   29180:	ldrd	r6, [sp, #8]
   29184:	ldrd	r8, [sp, #16]
   29188:	ldrd	sl, [sp, #24]
   2918c:	add	sp, sp, #32
   29190:	pop	{pc}		; (ldr pc, [sp], #4)
   29194:	lsl	r1, r1, #1
   29198:	bl	28a5c <ptr_set_visit@@Base+0x84>
   2919c:	cmp	r0, #0
   291a0:	bne	2925c <fb_symbol_table_insert_item@@Base+0x218>
   291a4:	ldr	r6, [r9, #12]
   291a8:	b	290a0 <fb_symbol_table_insert_item@@Base+0x5c>
   291ac:	ldr	r9, [sp, #20]
   291b0:	cmp	r5, #0
   291b4:	mov	r3, r5
   291b8:	moveq	r3, r4
   291bc:	ldr	r2, [r9, #8]
   291c0:	mov	r7, #0
   291c4:	add	r2, r2, #1
   291c8:	str	r2, [r9, #8]
   291cc:	str	sl, [r3]
   291d0:	b	29174 <fb_symbol_table_insert_item@@Base+0x130>
   291d4:	ldr	r2, [r9, #8]
   291d8:	ldr	r1, [r8, r3, lsl #2]
   291dc:	add	r3, r2, #1
   291e0:	cmp	r1, #0
   291e4:	cmpne	r1, #2
   291e8:	str	r3, [r9, #8]
   291ec:	beq	29210 <fb_symbol_table_insert_item@@Base+0x1cc>
   291f0:	add	r5, r5, #1
   291f4:	and	r4, r6, r5
   291f8:	add	r5, r5, #1
   291fc:	ldr	r3, [r8, r4, lsl #2]
   29200:	add	r4, r8, r4, lsl #2
   29204:	cmp	r3, #0
   29208:	cmpne	r3, #2
   2920c:	bne	291f4 <fb_symbol_table_insert_item@@Base+0x1b0>
   29210:	mov	r7, #0
   29214:	str	sl, [r4]
   29218:	b	29174 <fb_symbol_table_insert_item@@Base+0x130>
   2921c:	movw	r3, #32672	; 0x7fa0
   29220:	movt	r3, #5
   29224:	movw	r1, #32420	; 0x7ea4
   29228:	movt	r1, #5
   2922c:	movw	r0, #32548	; 0x7f24
   29230:	movt	r0, #5
   29234:	mov	r2, #116	; 0x74
   29238:	bl	14120 <__assert_fail@plt>
   2923c:	movw	r3, #32672	; 0x7fa0
   29240:	movt	r3, #5
   29244:	movw	r1, #32420	; 0x7ea4
   29248:	movt	r1, #5
   2924c:	movw	r0, #32524	; 0x7f0c
   29250:	movt	r0, #5
   29254:	mov	r2, #115	; 0x73
   29258:	bl	14120 <__assert_fail@plt>
   2925c:	movw	r3, #49320	; 0xc0a8
   29260:	movt	r3, #6
   29264:	movw	r2, #32572	; 0x7f3c
   29268:	movt	r2, #5
   2926c:	ldr	r0, [r3]
   29270:	movw	r1, #32624	; 0x7f70
   29274:	movt	r1, #5
   29278:	bl	1406c <fprintf@plt>
   2927c:	mov	r0, #1
   29280:	bl	14048 <exit@plt>

00029284 <fb_symbol_table_find@@Base>:
   29284:	strd	r4, [sp, #-28]!	; 0xffffffe4
   29288:	strd	r6, [sp, #8]
   2928c:	strd	r8, [sp, #16]
   29290:	ldr	r9, [r0]
   29294:	str	lr, [sp, #24]
   29298:	sub	sp, sp, #20
   2929c:	cmp	r9, #0
   292a0:	beq	2934c <fb_symbol_table_find@@Base+0xc8>
   292a4:	mov	r7, r1
   292a8:	add	ip, sp, #8
   292ac:	ldr	r8, [r0, #12]
   292b0:	movw	r1, #15186	; 0x3b52
   292b4:	movt	r1, #12137	; 0x2f69
   292b8:	mov	r3, #0
   292bc:	mov	r0, r7
   292c0:	stm	sp, {r1, ip}
   292c4:	mov	r6, r2
   292c8:	bl	3c8e4 <cmetrohash64_1@@Base>
   292cc:	ldr	r5, [sp, #8]
   292d0:	sub	r8, r8, #1
   292d4:	and	r3, r8, r5
   292d8:	ldr	r4, [r9, r3, lsl #2]
   292dc:	cmp	r4, #0
   292e0:	beq	2934c <fb_symbol_table_find@@Base+0xc8>
   292e4:	add	r5, r5, #1
   292e8:	b	29300 <fb_symbol_table_find@@Base+0x7c>
   292ec:	and	r3, r8, r5
   292f0:	add	r5, r5, #1
   292f4:	ldr	r4, [r9, r3, lsl #2]
   292f8:	cmp	r4, #0
   292fc:	beq	2934c <fb_symbol_table_find@@Base+0xc8>
   29300:	cmp	r4, #2
   29304:	beq	292ec <fb_symbol_table_find@@Base+0x68>
   29308:	ldr	r3, [r4, #4]
   2930c:	ldr	r2, [r3, #4]
   29310:	cmp	r6, r2
   29314:	bne	292ec <fb_symbol_table_find@@Base+0x68>
   29318:	mov	r2, r6
   2931c:	mov	r0, r7
   29320:	ldr	r1, [r3]
   29324:	bl	13fd0 <memcmp@plt>
   29328:	cmp	r0, #0
   2932c:	bne	292ec <fb_symbol_table_find@@Base+0x68>
   29330:	mov	r0, r4
   29334:	add	sp, sp, #20
   29338:	ldrd	r4, [sp]
   2933c:	ldrd	r6, [sp, #8]
   29340:	ldrd	r8, [sp, #16]
   29344:	add	sp, sp, #24
   29348:	pop	{pc}		; (ldr pc, [sp], #4)
   2934c:	mov	r4, #0
   29350:	b	29330 <fb_symbol_table_find@@Base+0xac>

00029354 <fb_symbol_table_find_item@@Base>:
   29354:	strd	r4, [sp, #-28]!	; 0xffffffe4
   29358:	ldr	r3, [r1, #4]
   2935c:	strd	r6, [sp, #8]
   29360:	ldr	r7, [r0]
   29364:	strd	r8, [sp, #16]
   29368:	str	lr, [sp, #24]
   2936c:	sub	sp, sp, #20
   29370:	ldr	r9, [r3]
   29374:	cmp	r7, #0
   29378:	ldr	r8, [r3, #4]
   2937c:	beq	29428 <fb_symbol_table_find_item@@Base+0xd4>
   29380:	add	r1, sp, #8
   29384:	movw	r3, #15186	; 0x3b52
   29388:	movt	r3, #12137	; 0x2f69
   2938c:	mov	r2, r8
   29390:	ldr	r6, [r0, #12]
   29394:	mov	r0, r9
   29398:	str	r3, [sp]
   2939c:	mov	r3, #0
   293a0:	str	r1, [sp, #4]
   293a4:	bl	3c8e4 <cmetrohash64_1@@Base>
   293a8:	ldr	r5, [sp, #8]
   293ac:	sub	r6, r6, #1
   293b0:	and	r3, r6, r5
   293b4:	ldr	r4, [r7, r3, lsl #2]
   293b8:	cmp	r4, #0
   293bc:	beq	29428 <fb_symbol_table_find_item@@Base+0xd4>
   293c0:	add	r5, r5, #1
   293c4:	b	293dc <fb_symbol_table_find_item@@Base+0x88>
   293c8:	and	r3, r6, r5
   293cc:	add	r5, r5, #1
   293d0:	ldr	r4, [r7, r3, lsl #2]
   293d4:	cmp	r4, #0
   293d8:	beq	29428 <fb_symbol_table_find_item@@Base+0xd4>
   293dc:	cmp	r4, #2
   293e0:	beq	293c8 <fb_symbol_table_find_item@@Base+0x74>
   293e4:	ldr	r3, [r4, #4]
   293e8:	ldr	r2, [r3, #4]
   293ec:	cmp	r8, r2
   293f0:	bne	293c8 <fb_symbol_table_find_item@@Base+0x74>
   293f4:	mov	r2, r8
   293f8:	mov	r0, r9
   293fc:	ldr	r1, [r3]
   29400:	bl	13fd0 <memcmp@plt>
   29404:	cmp	r0, #0
   29408:	bne	293c8 <fb_symbol_table_find_item@@Base+0x74>
   2940c:	mov	r0, r4
   29410:	add	sp, sp, #20
   29414:	ldrd	r4, [sp]
   29418:	ldrd	r6, [sp, #8]
   2941c:	ldrd	r8, [sp, #16]
   29420:	add	sp, sp, #24
   29424:	pop	{pc}		; (ldr pc, [sp], #4)
   29428:	mov	r4, #0
   2942c:	b	2940c <fb_symbol_table_find_item@@Base+0xb8>

00029430 <fb_symbol_table_remove@@Base>:
   29430:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29434:	ldr	r5, [r0]
   29438:	strd	r6, [sp, #8]
   2943c:	strd	r8, [sp, #16]
   29440:	strd	sl, [sp, #24]
   29444:	str	lr, [sp, #32]
   29448:	sub	sp, sp, #20
   2944c:	cmp	r5, #0
   29450:	beq	29520 <fb_symbol_table_remove@@Base+0xf0>
   29454:	mov	r8, r1
   29458:	add	ip, sp, #8
   2945c:	movw	r1, #15186	; 0x3b52
   29460:	movt	r1, #12137	; 0x2f69
   29464:	mov	r6, r0
   29468:	mov	r3, #0
   2946c:	mov	r0, r8
   29470:	ldr	r9, [r6, #12]
   29474:	mov	r7, r2
   29478:	stm	sp, {r1, ip}
   2947c:	bl	3c8e4 <cmetrohash64_1@@Base>
   29480:	ldr	sl, [sp, #8]
   29484:	sub	r9, r9, #1
   29488:	and	r3, r9, sl
   2948c:	ldr	r4, [r5, r3, lsl #2]
   29490:	add	fp, r5, r3, lsl #2
   29494:	cmp	r4, #0
   29498:	beq	29520 <fb_symbol_table_remove@@Base+0xf0>
   2949c:	add	sl, sl, #1
   294a0:	b	294bc <fb_symbol_table_remove@@Base+0x8c>
   294a4:	and	r3, r9, sl
   294a8:	add	sl, sl, #1
   294ac:	ldr	r4, [r5, r3, lsl #2]
   294b0:	add	fp, r5, r3, lsl #2
   294b4:	cmp	r4, #0
   294b8:	beq	29520 <fb_symbol_table_remove@@Base+0xf0>
   294bc:	cmp	r4, #2
   294c0:	beq	294a4 <fb_symbol_table_remove@@Base+0x74>
   294c4:	ldr	r1, [r4, #4]
   294c8:	ldr	r3, [r1, #4]
   294cc:	cmp	r7, r3
   294d0:	bne	294a4 <fb_symbol_table_remove@@Base+0x74>
   294d4:	mov	r2, r7
   294d8:	mov	r0, r8
   294dc:	ldr	r1, [r1]
   294e0:	bl	13fd0 <memcmp@plt>
   294e4:	cmp	r0, #0
   294e8:	bne	294a4 <fb_symbol_table_remove@@Base+0x74>
   294ec:	ldr	r3, [r6, #8]
   294f0:	mov	r2, #2
   294f4:	str	r2, [fp]
   294f8:	sub	r3, r3, #1
   294fc:	str	r3, [r6, #8]
   29500:	mov	r0, r4
   29504:	add	sp, sp, #20
   29508:	ldrd	r4, [sp]
   2950c:	ldrd	r6, [sp, #8]
   29510:	ldrd	r8, [sp, #16]
   29514:	ldrd	sl, [sp, #24]
   29518:	add	sp, sp, #32
   2951c:	pop	{pc}		; (ldr pc, [sp], #4)
   29520:	mov	r4, #0
   29524:	b	29500 <fb_symbol_table_remove@@Base+0xd0>

00029528 <fb_symbol_table_remove_item@@Base>:
   29528:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2952c:	ldr	r5, [r0]
   29530:	ldr	r3, [r1, #4]
   29534:	strd	r6, [sp, #8]
   29538:	strd	r8, [sp, #16]
   2953c:	cmp	r5, #0
   29540:	strd	sl, [sp, #24]
   29544:	str	lr, [sp, #32]
   29548:	sub	sp, sp, #20
   2954c:	ldr	r9, [r3]
   29550:	ldr	r8, [r3, #4]
   29554:	beq	29624 <fb_symbol_table_remove_item@@Base+0xfc>
   29558:	add	r1, sp, #8
   2955c:	movw	r3, #15186	; 0x3b52
   29560:	movt	r3, #12137	; 0x2f69
   29564:	mov	r6, r0
   29568:	mov	r2, r8
   2956c:	mov	r0, r9
   29570:	ldr	r7, [r6, #12]
   29574:	str	r3, [sp]
   29578:	mov	r3, #0
   2957c:	str	r1, [sp, #4]
   29580:	bl	3c8e4 <cmetrohash64_1@@Base>
   29584:	ldr	sl, [sp, #8]
   29588:	sub	r7, r7, #1
   2958c:	and	r3, r7, sl
   29590:	ldr	r4, [r5, r3, lsl #2]
   29594:	add	fp, r5, r3, lsl #2
   29598:	cmp	r4, #0
   2959c:	beq	29624 <fb_symbol_table_remove_item@@Base+0xfc>
   295a0:	add	sl, sl, #1
   295a4:	b	295c0 <fb_symbol_table_remove_item@@Base+0x98>
   295a8:	and	r3, r7, sl
   295ac:	add	sl, sl, #1
   295b0:	ldr	r4, [r5, r3, lsl #2]
   295b4:	add	fp, r5, r3, lsl #2
   295b8:	cmp	r4, #0
   295bc:	beq	29624 <fb_symbol_table_remove_item@@Base+0xfc>
   295c0:	cmp	r4, #2
   295c4:	beq	295a8 <fb_symbol_table_remove_item@@Base+0x80>
   295c8:	ldr	r1, [r4, #4]
   295cc:	ldr	r3, [r1, #4]
   295d0:	cmp	r8, r3
   295d4:	bne	295a8 <fb_symbol_table_remove_item@@Base+0x80>
   295d8:	mov	r2, r8
   295dc:	mov	r0, r9
   295e0:	ldr	r1, [r1]
   295e4:	bl	13fd0 <memcmp@plt>
   295e8:	cmp	r0, #0
   295ec:	bne	295a8 <fb_symbol_table_remove_item@@Base+0x80>
   295f0:	ldr	r3, [r6, #8]
   295f4:	mov	r2, #2
   295f8:	str	r2, [fp]
   295fc:	sub	r3, r3, #1
   29600:	str	r3, [r6, #8]
   29604:	mov	r0, r4
   29608:	add	sp, sp, #20
   2960c:	ldrd	r4, [sp]
   29610:	ldrd	r6, [sp, #8]
   29614:	ldrd	r8, [sp, #16]
   29618:	ldrd	sl, [sp, #24]
   2961c:	add	sp, sp, #32
   29620:	pop	{pc}		; (ldr pc, [sp], #4)
   29624:	mov	r4, #0
   29628:	b	29604 <fb_symbol_table_remove_item@@Base+0xdc>

0002962c <fb_symbol_table_visit@@Base>:
   2962c:	ldr	ip, [r0, #12]
   29630:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29634:	ldr	r5, [r0]
   29638:	strd	r6, [sp, #8]
   2963c:	str	r8, [sp, #16]
   29640:	cmp	ip, #0
   29644:	str	lr, [sp, #20]
   29648:	beq	2968c <fb_symbol_table_visit@@Base+0x60>
   2964c:	mov	r6, r2
   29650:	mov	r8, r1
   29654:	mov	r7, r0
   29658:	sub	r5, r5, #4
   2965c:	mov	r4, #0
   29660:	ldr	r3, [r5, #4]!
   29664:	mov	r0, r6
   29668:	cmp	r3, #0
   2966c:	cmpne	r3, #2
   29670:	mov	r1, r3
   29674:	beq	296a0 <fb_symbol_table_visit@@Base+0x74>
   29678:	blx	r8
   2967c:	ldr	ip, [r7, #12]
   29680:	add	r4, r4, #1
   29684:	cmp	r4, ip
   29688:	bcc	29660 <fb_symbol_table_visit@@Base+0x34>
   2968c:	ldrd	r4, [sp]
   29690:	ldrd	r6, [sp, #8]
   29694:	ldr	r8, [sp, #16]
   29698:	add	sp, sp, #20
   2969c:	pop	{pc}		; (ldr pc, [sp], #4)
   296a0:	add	r4, r4, #1
   296a4:	cmp	r4, ip
   296a8:	bcc	29660 <fb_symbol_table_visit@@Base+0x34>
   296ac:	b	2968c <fb_symbol_table_visit@@Base+0x60>
   296b0:	cmp	r2, #0
   296b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   296b8:	strd	r6, [sp, #8]
   296bc:	strd	r8, [sp, #16]
   296c0:	strd	sl, [sp, #24]
   296c4:	str	lr, [sp, #32]
   296c8:	sub	sp, sp, #20
   296cc:	str	r2, [sp, #4]
   296d0:	str	r0, [sp, #8]
   296d4:	str	r3, [sp, #12]
   296d8:	beq	299dc <fb_symbol_table_visit@@Base+0x3b0>
   296dc:	cmp	r2, #2
   296e0:	beq	299bc <fb_symbol_table_visit@@Base+0x390>
   296e4:	cmp	r2, #1
   296e8:	beq	2999c <fb_symbol_table_visit@@Base+0x370>
   296ec:	ldr	fp, [r0, #12]
   296f0:	mov	r9, r1
   296f4:	mov	r3, #179	; 0xb3
   296f8:	mov	r4, r0
   296fc:	ldr	r1, [r0, #8]
   29700:	mul	r3, r3, fp
   29704:	cmp	r1, r3, lsr #8
   29708:	bcs	298c8 <fb_symbol_table_visit@@Base+0x29c>
   2970c:	sub	r3, fp, #1
   29710:	cmp	r9, #0
   29714:	str	r3, [sp]
   29718:	ldr	r3, [sp, #8]
   2971c:	ldr	fp, [r3]
   29720:	beq	29968 <fb_symbol_table_visit@@Base+0x33c>
   29724:	movw	r8, #11863	; 0x2e57
   29728:	movt	r8, #12137	; 0x2f69
   2972c:	movw	r7, #15186	; 0x3b52
   29730:	movt	r7, #12137	; 0x2f69
   29734:	movw	r6, #31153	; 0x79b1
   29738:	movt	r6, #40503	; 0x9e37
   2973c:	mov	r5, r9
   29740:	mov	r1, #0
   29744:	ldr	r3, [r5, #4]
   29748:	ldr	ip, [r3]
   2974c:	ldr	r2, [r3, #4]
   29750:	subs	r3, r2, #1
   29754:	beq	298e0 <fb_symbol_table_visit@@Base+0x2b4>
   29758:	mov	r2, ip
   2975c:	ldrb	r0, [r2], #1
   29760:	cmp	r0, #0
   29764:	beq	298e0 <fb_symbol_table_visit@@Base+0x2b4>
   29768:	add	ip, ip, r3
   2976c:	mov	r3, r8
   29770:	b	29780 <fb_symbol_table_visit@@Base+0x154>
   29774:	ldrb	r0, [r2], #1
   29778:	cmp	r0, #0
   2977c:	beq	29790 <fb_symbol_table_visit@@Base+0x164>
   29780:	add	r3, r3, r3, lsl #5
   29784:	cmp	r2, ip
   29788:	eor	r3, r3, r0
   2978c:	bne	29774 <fb_symbol_table_visit@@Base+0x148>
   29790:	ldr	r5, [r5]
   29794:	eor	r3, r3, r1
   29798:	eor	r3, r3, r7
   2979c:	mul	r1, r6, r3
   297a0:	cmp	r5, #0
   297a4:	bne	29744 <fb_symbol_table_visit@@Base+0x118>
   297a8:	ldr	r3, [sp]
   297ac:	and	r5, r3, r1
   297b0:	add	r5, fp, r5, lsl #2
   297b4:	ldr	r3, [sp, #12]
   297b8:	ldr	r8, [r5]
   297bc:	sub	r2, r3, #2
   297c0:	cmp	r2, #1
   297c4:	bls	29914 <fb_symbol_table_visit@@Base+0x2e8>
   297c8:	cmp	r8, #0
   297cc:	moveq	sl, r5
   297d0:	beq	2988c <fb_symbol_table_visit@@Base+0x260>
   297d4:	add	r4, r1, #1
   297d8:	mov	sl, #0
   297dc:	cmp	r8, #2
   297e0:	beq	298e8 <fb_symbol_table_visit@@Base+0x2bc>
   297e4:	ldr	r6, [r8]
   297e8:	adds	r2, r9, #0
   297ec:	movne	r2, #1
   297f0:	adds	r1, r6, #0
   297f4:	movne	r1, #1
   297f8:	tst	r1, r2
   297fc:	beq	298f4 <fb_symbol_table_visit@@Base+0x2c8>
   29800:	ldr	r0, [r6, #4]
   29804:	ldr	r1, [r9, #4]
   29808:	ldr	r2, [r0, #4]
   2980c:	ldr	r3, [r1, #4]
   29810:	cmp	r2, r3
   29814:	bne	29868 <fb_symbol_table_visit@@Base+0x23c>
   29818:	mov	r7, r9
   2981c:	ldr	r0, [r0]
   29820:	ldr	r1, [r1]
   29824:	bl	14108 <strncmp@plt>
   29828:	cmp	r0, #0
   2982c:	bne	29868 <fb_symbol_table_visit@@Base+0x23c>
   29830:	ldr	r6, [r6]
   29834:	ldr	r7, [r7]
   29838:	adds	r1, r6, #0
   2983c:	movne	r1, #1
   29840:	adds	r2, r7, #0
   29844:	movne	r2, #1
   29848:	tst	r1, r2
   2984c:	beq	298f4 <fb_symbol_table_visit@@Base+0x2c8>
   29850:	ldr	r0, [r6, #4]
   29854:	ldr	r1, [r7, #4]
   29858:	ldr	r2, [r0, #4]
   2985c:	ldr	r3, [r1, #4]
   29860:	cmp	r2, r3
   29864:	beq	2981c <fb_symbol_table_visit@@Base+0x1f0>
   29868:	ldr	r3, [sp]
   2986c:	and	r5, r3, r4
   29870:	add	r4, r4, #1
   29874:	ldr	r8, [fp, r5, lsl #2]
   29878:	add	r5, fp, r5, lsl #2
   2987c:	cmp	r8, #0
   29880:	bne	297dc <fb_symbol_table_visit@@Base+0x1b0>
   29884:	cmp	sl, #0
   29888:	moveq	sl, r5
   2988c:	ldr	r2, [sp, #8]
   29890:	mov	r8, #0
   29894:	ldr	r3, [r2, #8]
   29898:	add	r3, r3, #1
   2989c:	str	r3, [r2, #8]
   298a0:	ldr	r3, [sp, #4]
   298a4:	str	r3, [sl]
   298a8:	mov	r0, r8
   298ac:	add	sp, sp, #20
   298b0:	ldrd	r4, [sp]
   298b4:	ldrd	r6, [sp, #8]
   298b8:	ldrd	r8, [sp, #16]
   298bc:	ldrd	sl, [sp, #24]
   298c0:	add	sp, sp, #32
   298c4:	pop	{pc}		; (ldr pc, [sp], #4)
   298c8:	lsl	r1, r1, #1
   298cc:	bl	299fc <fb_symbol_table_visit@@Base+0x3d0>
   298d0:	cmp	r0, #0
   298d4:	bne	29974 <fb_symbol_table_visit@@Base+0x348>
   298d8:	ldr	fp, [r4, #12]
   298dc:	b	2970c <fb_symbol_table_visit@@Base+0xe0>
   298e0:	mov	r3, r8
   298e4:	b	29790 <fb_symbol_table_visit@@Base+0x164>
   298e8:	cmp	sl, #0
   298ec:	moveq	sl, r5
   298f0:	b	29868 <fb_symbol_table_visit@@Base+0x23c>
   298f4:	orrs	r3, r1, r2
   298f8:	bne	29868 <fb_symbol_table_visit@@Base+0x23c>
   298fc:	ldr	r3, [sp, #12]
   29900:	cmp	r3, #0
   29904:	bne	298a8 <fb_symbol_table_visit@@Base+0x27c>
   29908:	ldr	r3, [sp, #4]
   2990c:	str	r3, [r5]
   29910:	b	298a8 <fb_symbol_table_visit@@Base+0x27c>
   29914:	ldr	r3, [sp, #8]
   29918:	cmp	r8, #0
   2991c:	cmpne	r8, #2
   29920:	ldr	r2, [r3, #8]
   29924:	add	r2, r2, #1
   29928:	str	r2, [r3, #8]
   2992c:	beq	29958 <fb_symbol_table_visit@@Base+0x32c>
   29930:	ldr	r0, [sp]
   29934:	add	r1, r1, #1
   29938:	and	r3, r0, r1
   2993c:	add	r1, r1, #1
   29940:	ldr	r2, [fp, r3, lsl #2]
   29944:	add	r3, fp, r3, lsl #2
   29948:	cmp	r2, #0
   2994c:	cmpne	r2, #2
   29950:	bne	29938 <fb_symbol_table_visit@@Base+0x30c>
   29954:	mov	r5, r3
   29958:	ldr	r3, [sp, #4]
   2995c:	mov	r8, #0
   29960:	str	r3, [r5]
   29964:	b	298a8 <fb_symbol_table_visit@@Base+0x27c>
   29968:	mov	r5, fp
   2996c:	mov	r1, r9
   29970:	b	297b4 <fb_symbol_table_visit@@Base+0x188>
   29974:	movw	r3, #49320	; 0xc0a8
   29978:	movt	r3, #6
   2997c:	movw	r2, #32572	; 0x7f3c
   29980:	movt	r2, #5
   29984:	ldr	r0, [r3]
   29988:	movw	r1, #32624	; 0x7f70
   2998c:	movt	r1, #5
   29990:	bl	1406c <fprintf@plt>
   29994:	mov	r0, #1
   29998:	bl	14048 <exit@plt>
   2999c:	movw	r3, #32696	; 0x7fb8
   299a0:	movt	r3, #5
   299a4:	movw	r1, #32420	; 0x7ea4
   299a8:	movt	r1, #5
   299ac:	movw	r0, #32548	; 0x7f24
   299b0:	movt	r0, #5
   299b4:	mov	r2, #116	; 0x74
   299b8:	bl	14120 <__assert_fail@plt>
   299bc:	movw	r3, #32696	; 0x7fb8
   299c0:	movt	r3, #5
   299c4:	movw	r1, #32420	; 0x7ea4
   299c8:	movt	r1, #5
   299cc:	movw	r0, #32524	; 0x7f0c
   299d0:	movt	r0, #5
   299d4:	mov	r2, #115	; 0x73
   299d8:	bl	14120 <__assert_fail@plt>
   299dc:	movw	r3, #32696	; 0x7fb8
   299e0:	movt	r3, #5
   299e4:	movw	r1, #32420	; 0x7ea4
   299e8:	movt	r1, #5
   299ec:	movw	r0, #32500	; 0x7ef4
   299f0:	movt	r0, #5
   299f4:	mov	r2, #114	; 0x72
   299f8:	bl	14120 <__assert_fail@plt>
   299fc:	ldr	r3, [r0, #8]
   29a00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29a04:	strd	r6, [sp, #8]
   29a08:	mov	r7, r0
   29a0c:	str	r8, [sp, #16]
   29a10:	str	lr, [sp, #20]
   29a14:	sub	sp, sp, #16
   29a18:	cmp	r1, r3
   29a1c:	ldr	r6, [r0]
   29a20:	movcc	r1, r3
   29a24:	cmp	r1, #2
   29a28:	bls	29b10 <fb_symbol_table_visit@@Base+0x4e4>
   29a2c:	mov	r3, #4
   29a30:	movw	r0, #358	; 0x166
   29a34:	mul	r2, r0, r3
   29a38:	lsl	r5, r3, #1
   29a3c:	cmp	r1, r2, lsr #8
   29a40:	mov	r3, r5
   29a44:	bhi	29a34 <fb_symbol_table_visit@@Base+0x408>
   29a48:	mov	r1, #4
   29a4c:	mov	r0, r5
   29a50:	bl	13f7c <calloc@plt>
   29a54:	cmp	r0, #0
   29a58:	str	r0, [sp]
   29a5c:	beq	29b18 <fb_symbol_table_visit@@Base+0x4ec>
   29a60:	ldr	r3, [r7, #12]
   29a64:	mov	r4, #0
   29a68:	str	r4, [sp, #4]
   29a6c:	strd	r4, [sp, #8]
   29a70:	cmp	r3, r4
   29a74:	moveq	r8, sp
   29a78:	beq	29aa4 <fb_symbol_table_visit@@Base+0x478>
   29a7c:	sub	r6, r6, #4
   29a80:	mov	r8, sp
   29a84:	ldr	r2, [r6, #4]!
   29a88:	cmp	r2, #0
   29a8c:	cmpne	r2, #2
   29a90:	bne	29aec <fb_symbol_table_visit@@Base+0x4c0>
   29a94:	add	r4, r4, #1
   29a98:	cmp	r4, r3
   29a9c:	bcc	29a84 <fb_symbol_table_visit@@Base+0x458>
   29aa0:	ldr	r6, [r7]
   29aa4:	cmp	r6, #0
   29aa8:	beq	29ab4 <fb_symbol_table_visit@@Base+0x488>
   29aac:	mov	r0, r6
   29ab0:	bl	13fac <free@plt>
   29ab4:	ldr	r3, [sp]
   29ab8:	mov	r0, #0
   29abc:	ldmib	r8, {r1, r2}
   29ac0:	str	r3, [r7]
   29ac4:	ldr	r3, [r8, #12]
   29ac8:	str	r1, [r7, #4]
   29acc:	str	r2, [r7, #8]
   29ad0:	str	r3, [r7, #12]
   29ad4:	add	sp, sp, #16
   29ad8:	ldrd	r4, [sp]
   29adc:	ldrd	r6, [sp, #8]
   29ae0:	ldr	r8, [sp, #16]
   29ae4:	add	sp, sp, #20
   29ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   29aec:	mov	r3, #3
   29af0:	mov	r0, r8
   29af4:	ldr	r1, [r2]
   29af8:	bl	296b0 <fb_symbol_table_visit@@Base+0x84>
   29afc:	ldr	r3, [r7, #12]
   29b00:	add	r4, r4, #1
   29b04:	cmp	r4, r3
   29b08:	bcc	29a84 <fb_symbol_table_visit@@Base+0x458>
   29b0c:	b	29aa0 <fb_symbol_table_visit@@Base+0x474>
   29b10:	mov	r5, #4
   29b14:	b	29a48 <fb_symbol_table_visit@@Base+0x41c>
   29b18:	mvn	r0, #0
   29b1c:	b	29ad4 <fb_symbol_table_visit@@Base+0x4a8>

00029b20 <fb_scope_table_clear@@Base>:
   29b20:	str	r4, [sp, #-8]!
   29b24:	mov	r4, r0
   29b28:	ldr	r0, [r0]
   29b2c:	str	lr, [sp, #4]
   29b30:	cmp	r0, #0
   29b34:	beq	29b3c <fb_scope_table_clear@@Base+0x1c>
   29b38:	bl	13fac <free@plt>
   29b3c:	mov	r3, #0
   29b40:	str	r3, [r4]
   29b44:	str	r3, [r4, #4]
   29b48:	str	r3, [r4, #8]
   29b4c:	str	r3, [r4, #12]
   29b50:	ldr	r4, [sp]
   29b54:	add	sp, sp, #4
   29b58:	pop	{pc}		; (ldr pc, [sp], #4)

00029b5c <fb_scope_table_destroy@@Base>:
   29b5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29b60:	strd	r6, [sp, #8]
   29b64:	mov	r6, r0
   29b68:	str	r8, [sp, #16]
   29b6c:	subs	r8, r1, #0
   29b70:	str	lr, [sp, #20]
   29b74:	ldr	r0, [r0]
   29b78:	beq	29bc4 <fb_scope_table_destroy@@Base+0x68>
   29b7c:	ldr	ip, [r6, #12]
   29b80:	cmp	ip, #0
   29b84:	beq	29bc4 <fb_scope_table_destroy@@Base+0x68>
   29b88:	mov	r7, r2
   29b8c:	sub	r5, r0, #4
   29b90:	mov	r4, #0
   29b94:	ldr	r3, [r5, #4]!
   29b98:	mov	r0, r7
   29b9c:	cmp	r3, #0
   29ba0:	cmpne	r3, #2
   29ba4:	mov	r1, r3
   29ba8:	beq	29bf8 <fb_scope_table_destroy@@Base+0x9c>
   29bac:	blx	r8
   29bb0:	ldr	ip, [r6, #12]
   29bb4:	add	r4, r4, #1
   29bb8:	cmp	r4, ip
   29bbc:	bcc	29b94 <fb_scope_table_destroy@@Base+0x38>
   29bc0:	ldr	r0, [r6]
   29bc4:	cmp	r0, #0
   29bc8:	beq	29bd0 <fb_scope_table_destroy@@Base+0x74>
   29bcc:	bl	13fac <free@plt>
   29bd0:	mov	r3, #0
   29bd4:	str	r3, [r6]
   29bd8:	str	r3, [r6, #4]
   29bdc:	str	r3, [r6, #8]
   29be0:	str	r3, [r6, #12]
   29be4:	ldrd	r4, [sp]
   29be8:	ldrd	r6, [sp, #8]
   29bec:	ldr	r8, [sp, #16]
   29bf0:	add	sp, sp, #20
   29bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   29bf8:	add	r4, r4, #1
   29bfc:	cmp	r4, ip
   29c00:	bcc	29b94 <fb_scope_table_destroy@@Base+0x38>
   29c04:	b	29bc0 <fb_scope_table_destroy@@Base+0x64>

00029c08 <fb_scope_table_init@@Base>:
   29c08:	cmp	r1, #2
   29c0c:	strd	r4, [sp, #-16]!
   29c10:	mov	r4, r0
   29c14:	str	r6, [sp, #8]
   29c18:	str	lr, [sp, #12]
   29c1c:	bls	29c78 <fb_scope_table_init@@Base+0x70>
   29c20:	mov	r3, #4
   29c24:	movw	r0, #358	; 0x166
   29c28:	mul	r2, r0, r3
   29c2c:	lsl	r5, r3, #1
   29c30:	cmp	r1, r2, lsr #8
   29c34:	mov	r3, r5
   29c38:	bhi	29c28 <fb_scope_table_init@@Base+0x20>
   29c3c:	mov	r1, #4
   29c40:	mov	r0, r5
   29c44:	bl	13f7c <calloc@plt>
   29c48:	cmp	r0, #0
   29c4c:	str	r0, [r4]
   29c50:	beq	29c80 <fb_scope_table_init@@Base+0x78>
   29c54:	mov	r3, #0
   29c58:	mov	r0, r3
   29c5c:	str	r3, [r4, #4]
   29c60:	str	r3, [r4, #8]
   29c64:	str	r5, [r4, #12]
   29c68:	ldrd	r4, [sp]
   29c6c:	ldr	r6, [sp, #8]
   29c70:	add	sp, sp, #12
   29c74:	pop	{pc}		; (ldr pc, [sp], #4)
   29c78:	mov	r5, #4
   29c7c:	b	29c3c <fb_scope_table_init@@Base+0x34>
   29c80:	mvn	r0, #0
   29c84:	b	29c68 <fb_scope_table_init@@Base+0x60>

00029c88 <fb_scope_table_resize@@Base>:
   29c88:	b	299fc <fb_symbol_table_visit@@Base+0x3d0>

00029c8c <fb_scope_table_insert@@Base>:
   29c8c:	cmp	r3, #0
   29c90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29c94:	strd	r6, [sp, #8]
   29c98:	strd	r8, [sp, #16]
   29c9c:	strd	sl, [sp, #24]
   29ca0:	str	lr, [sp, #32]
   29ca4:	sub	sp, sp, #28
   29ca8:	stm	sp, {r1, r3}
   29cac:	str	r0, [sp, #8]
   29cb0:	beq	2a194 <fb_scope_table_insert@@Base+0x508>
   29cb4:	cmp	r3, #2
   29cb8:	beq	2a174 <fb_scope_table_insert@@Base+0x4e8>
   29cbc:	cmp	r3, #1
   29cc0:	beq	2a154 <fb_scope_table_insert@@Base+0x4c8>
   29cc4:	mov	fp, r2
   29cc8:	mov	r3, #179	; 0xb3
   29ccc:	ldr	r1, [r0, #8]
   29cd0:	mov	r4, r0
   29cd4:	ldr	r2, [r0, #12]
   29cd8:	mul	r3, r3, r2
   29cdc:	cmp	r1, r3, lsr #8
   29ce0:	bcs	2a018 <fb_scope_table_insert@@Base+0x38c>
   29ce4:	sub	r3, r2, #1
   29ce8:	cmp	fp, #0
   29cec:	str	r3, [sp, #16]
   29cf0:	ldr	r3, [sp, #8]
   29cf4:	ldr	r3, [r3]
   29cf8:	str	r3, [sp, #12]
   29cfc:	ble	2a030 <fb_scope_table_insert@@Base+0x3a4>
   29d00:	ldr	r0, [sp]
   29d04:	mov	lr, fp
   29d08:	movw	r8, #11863	; 0x2e57
   29d0c:	movt	r8, #12137	; 0x2f69
   29d10:	cmp	lr, #0
   29d14:	movw	r7, #15186	; 0x3b52
   29d18:	movt	r7, #12137	; 0x2f69
   29d1c:	movw	r6, #31153	; 0x79b1
   29d20:	movt	r6, #40503	; 0x9e37
   29d24:	mov	r4, #0
   29d28:	movw	r9, #5381	; 0x1505
   29d2c:	ldrb	ip, [r0]
   29d30:	beq	29dd4 <fb_scope_table_insert@@Base+0x148>
   29d34:	cmp	ip, #46	; 0x2e
   29d38:	beq	2a0e4 <fb_scope_table_insert@@Base+0x458>
   29d3c:	mov	r3, r0
   29d40:	mov	r1, #0
   29d44:	b	29d58 <fb_scope_table_insert@@Base+0xcc>
   29d48:	ldrb	r5, [r3, #1]!
   29d4c:	cmp	r5, #46	; 0x2e
   29d50:	beq	29f5c <fb_scope_table_insert@@Base+0x2d0>
   29d54:	mov	r1, r2
   29d58:	add	r2, r1, #1
   29d5c:	cmp	r2, lr
   29d60:	bne	29d48 <fb_scope_table_insert@@Base+0xbc>
   29d64:	cmp	r1, #0
   29d68:	beq	29de8 <fb_scope_table_insert@@Base+0x15c>
   29d6c:	cmp	ip, #0
   29d70:	mov	r2, lr
   29d74:	add	r5, r0, #1
   29d78:	beq	29de8 <fb_scope_table_insert@@Base+0x15c>
   29d7c:	add	r1, r0, r1
   29d80:	mov	r3, r8
   29d84:	b	29d94 <fb_scope_table_insert@@Base+0x108>
   29d88:	ldrb	ip, [r5], #1
   29d8c:	cmp	ip, #0
   29d90:	beq	29da4 <fb_scope_table_insert@@Base+0x118>
   29d94:	add	r3, r3, r3, lsl #5
   29d98:	cmp	r5, r1
   29d9c:	eor	r3, r3, ip
   29da0:	bne	29d88 <fb_scope_table_insert@@Base+0xfc>
   29da4:	eor	r3, r3, r4
   29da8:	cmp	lr, r2
   29dac:	eor	r3, r3, r7
   29db0:	mul	r4, r6, r3
   29db4:	beq	29dfc <fb_scope_table_insert@@Base+0x170>
   29db8:	mvn	r3, r2
   29dbc:	add	r2, r2, #1
   29dc0:	add	lr, lr, r3
   29dc4:	add	r0, r0, r2
   29dc8:	cmp	lr, #0
   29dcc:	ldrb	ip, [r0]
   29dd0:	bne	29d34 <fb_scope_table_insert@@Base+0xa8>
   29dd4:	cmp	ip, #0
   29dd8:	mov	r2, lr
   29ddc:	mvn	r1, #0
   29de0:	add	r5, r0, #1
   29de4:	bne	29d7c <fb_scope_table_insert@@Base+0xf0>
   29de8:	eor	r4, r4, #5376	; 0x1500
   29dec:	movw	r3, #31153	; 0x79b1
   29df0:	movt	r3, #40503	; 0x9e37
   29df4:	eor	r4, r4, #5
   29df8:	mul	r4, r3, r4
   29dfc:	ldr	r3, [sp, #16]
   29e00:	and	r5, r3, r4
   29e04:	ldr	r3, [sp, #12]
   29e08:	add	r5, r3, r5, lsl #2
   29e0c:	ldr	r3, [sp, #64]	; 0x40
   29e10:	ldr	r7, [r5]
   29e14:	sub	r3, r3, #2
   29e18:	cmp	r3, #1
   29e1c:	bls	2a0f4 <fb_scope_table_insert@@Base+0x468>
   29e20:	cmp	r7, #0
   29e24:	moveq	r8, r5
   29e28:	beq	29f20 <fb_scope_table_insert@@Base+0x294>
   29e2c:	add	r4, r4, #1
   29e30:	mov	r8, #0
   29e34:	mov	sl, r4
   29e38:	cmp	r7, #2
   29e3c:	beq	29f7c <fb_scope_table_insert@@Base+0x2f0>
   29e40:	cmp	fp, #0
   29e44:	ldr	r4, [r7]
   29e48:	ble	29f88 <fb_scope_table_insert@@Base+0x2fc>
   29e4c:	cmp	r4, #0
   29e50:	beq	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29e54:	ldr	r2, [r4, #4]
   29e58:	ldm	r2, {r1, r3}
   29e5c:	cmp	fp, r3
   29e60:	bcc	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29e64:	ldr	r2, [sp]
   29e68:	mov	ip, fp
   29e6c:	str	r5, [sp, #20]
   29e70:	cmp	r3, #0
   29e74:	beq	2a0dc <fb_scope_table_insert@@Base+0x450>
   29e78:	ldrb	lr, [r1]
   29e7c:	ldrb	r0, [r2]
   29e80:	cmp	lr, r0
   29e84:	bne	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29e88:	sub	r0, r3, #1
   29e8c:	mov	lr, r2
   29e90:	add	r0, r0, r2
   29e94:	rsb	r5, r2, #1
   29e98:	b	29eac <fb_scope_table_insert@@Base+0x220>
   29e9c:	ldrb	r9, [r1, #1]!
   29ea0:	ldrb	r6, [lr, #1]!
   29ea4:	cmp	r9, r6
   29ea8:	bne	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29eac:	cmp	r0, lr
   29eb0:	add	r6, r5, lr
   29eb4:	bne	29e9c <fb_scope_table_insert@@Base+0x210>
   29eb8:	cmp	r3, ip
   29ebc:	beq	29ffc <fb_scope_table_insert@@Base+0x370>
   29ec0:	ldrb	r1, [r2, r6]
   29ec4:	cmp	r1, #46	; 0x2e
   29ec8:	bne	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29ecc:	ldr	r4, [r4]
   29ed0:	mvn	r1, r3
   29ed4:	add	r3, r3, #1
   29ed8:	add	ip, ip, r1
   29edc:	add	r2, r2, r3
   29ee0:	cmp	r4, #0
   29ee4:	beq	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29ee8:	ldr	r1, [r4, #4]
   29eec:	ldm	r1, {r1, r3}
   29ef0:	cmp	r3, ip
   29ef4:	bls	29e70 <fb_scope_table_insert@@Base+0x1e4>
   29ef8:	ldr	r3, [sp, #16]
   29efc:	and	r5, r3, sl
   29f00:	ldr	r3, [sp, #12]
   29f04:	add	sl, sl, #1
   29f08:	ldr	r7, [r3, r5, lsl #2]
   29f0c:	add	r5, r3, r5, lsl #2
   29f10:	cmp	r7, #0
   29f14:	bne	29e38 <fb_scope_table_insert@@Base+0x1ac>
   29f18:	cmp	r8, #0
   29f1c:	moveq	r8, r5
   29f20:	ldr	r2, [sp, #8]
   29f24:	mov	r7, #0
   29f28:	ldr	r3, [r2, #8]
   29f2c:	add	r3, r3, #1
   29f30:	str	r3, [r2, #8]
   29f34:	ldr	r3, [sp, #4]
   29f38:	str	r3, [r8]
   29f3c:	mov	r0, r7
   29f40:	add	sp, sp, #28
   29f44:	ldrd	r4, [sp]
   29f48:	ldrd	r6, [sp, #8]
   29f4c:	ldrd	r8, [sp, #16]
   29f50:	ldrd	sl, [sp, #24]
   29f54:	add	sp, sp, #32
   29f58:	pop	{pc}		; (ldr pc, [sp], #4)
   29f5c:	cmp	r1, #0
   29f60:	beq	29f70 <fb_scope_table_insert@@Base+0x2e4>
   29f64:	cmp	ip, #0
   29f68:	add	r5, r0, #1
   29f6c:	bne	29d7c <fb_scope_table_insert@@Base+0xf0>
   29f70:	eor	r3, r4, r9
   29f74:	mul	r4, r6, r3
   29f78:	b	29db8 <fb_scope_table_insert@@Base+0x12c>
   29f7c:	cmp	r8, #0
   29f80:	moveq	r8, r5
   29f84:	b	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29f88:	mov	r9, fp
   29f8c:	ldr	r6, [sp]
   29f90:	b	29fd0 <fb_scope_table_insert@@Base+0x344>
   29f94:	ldr	r3, [r4, #4]
   29f98:	ldr	r1, [r6, #4]
   29f9c:	ldr	r2, [r3, #4]
   29fa0:	ldr	r0, [r1, #4]
   29fa4:	cmp	r2, r0
   29fa8:	bne	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29fac:	ldr	r1, [r1]
   29fb0:	ldr	r0, [r3]
   29fb4:	bl	14108 <strncmp@plt>
   29fb8:	cmp	r0, #0
   29fbc:	bne	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29fc0:	adds	r9, r9, #1
   29fc4:	ldr	r4, [r4]
   29fc8:	ldr	r6, [r6]
   29fcc:	beq	2a004 <fb_scope_table_insert@@Base+0x378>
   29fd0:	cmp	r4, #0
   29fd4:	cmpne	r6, #0
   29fd8:	bne	29f94 <fb_scope_table_insert@@Base+0x308>
   29fdc:	orrs	r3, r4, r6
   29fe0:	bne	29ef8 <fb_scope_table_insert@@Base+0x26c>
   29fe4:	ldr	r3, [sp, #64]	; 0x40
   29fe8:	cmp	r3, #0
   29fec:	bne	29f3c <fb_scope_table_insert@@Base+0x2b0>
   29ff0:	ldr	r3, [sp, #4]
   29ff4:	str	r3, [r5]
   29ff8:	b	29f3c <fb_scope_table_insert@@Base+0x2b0>
   29ffc:	ldr	r4, [r4]
   2a000:	ldr	r5, [sp, #20]
   2a004:	clz	r4, r4
   2a008:	lsr	r4, r4, #5
   2a00c:	cmp	r4, #0
   2a010:	beq	29ef8 <fb_scope_table_insert@@Base+0x26c>
   2a014:	b	29fe4 <fb_scope_table_insert@@Base+0x358>
   2a018:	lsl	r1, r1, #1
   2a01c:	bl	299fc <fb_symbol_table_visit@@Base+0x3d0>
   2a020:	cmp	r0, #0
   2a024:	bne	2a1b4 <fb_scope_table_insert@@Base+0x528>
   2a028:	ldr	r2, [r4, #12]
   2a02c:	b	29ce4 <fb_scope_table_insert@@Base+0x58>
   2a030:	ldr	ip, [sp]
   2a034:	cmp	ip, #0
   2a038:	beq	2a148 <fb_scope_table_insert@@Base+0x4bc>
   2a03c:	ldr	r3, [ip, #4]
   2a040:	movw	r5, #11863	; 0x2e57
   2a044:	movt	r5, #12137	; 0x2f69
   2a048:	movw	r7, #15186	; 0x3b52
   2a04c:	movt	r7, #12137	; 0x2f69
   2a050:	movw	r6, #31153	; 0x79b1
   2a054:	movt	r6, #40503	; 0x9e37
   2a058:	mov	lr, fp
   2a05c:	mov	r4, #0
   2a060:	ldm	r3, {r1, r2}
   2a064:	subs	r0, r2, #1
   2a068:	beq	2a0d4 <fb_scope_table_insert@@Base+0x448>
   2a06c:	mov	r2, r1
   2a070:	ldrb	r8, [r2], #1
   2a074:	cmp	r8, #0
   2a078:	beq	2a0d4 <fb_scope_table_insert@@Base+0x448>
   2a07c:	add	r1, r1, r0
   2a080:	mov	r3, r5
   2a084:	b	2a094 <fb_scope_table_insert@@Base+0x408>
   2a088:	ldrb	r8, [r2], #1
   2a08c:	cmp	r8, #0
   2a090:	beq	2a0a4 <fb_scope_table_insert@@Base+0x418>
   2a094:	add	r3, r3, r3, lsl #5
   2a098:	cmp	r2, r1
   2a09c:	eor	r3, r3, r8
   2a0a0:	bne	2a088 <fb_scope_table_insert@@Base+0x3fc>
   2a0a4:	eor	r3, r3, r4
   2a0a8:	adds	lr, lr, #1
   2a0ac:	ldr	ip, [ip]
   2a0b0:	eor	r3, r3, r7
   2a0b4:	mul	r4, r6, r3
   2a0b8:	beq	29dfc <fb_scope_table_insert@@Base+0x170>
   2a0bc:	cmp	ip, #0
   2a0c0:	beq	29dfc <fb_scope_table_insert@@Base+0x170>
   2a0c4:	ldr	r3, [ip, #4]
   2a0c8:	ldm	r3, {r1, r2}
   2a0cc:	subs	r0, r2, #1
   2a0d0:	bne	2a06c <fb_scope_table_insert@@Base+0x3e0>
   2a0d4:	mov	r3, r5
   2a0d8:	b	2a0a4 <fb_scope_table_insert@@Base+0x418>
   2a0dc:	mov	r6, r3
   2a0e0:	b	29eb8 <fb_scope_table_insert@@Base+0x22c>
   2a0e4:	add	r5, r0, #1
   2a0e8:	mov	r2, #0
   2a0ec:	mvn	r1, #0
   2a0f0:	b	29d7c <fb_scope_table_insert@@Base+0xf0>
   2a0f4:	ldr	r2, [sp, #8]
   2a0f8:	cmp	r7, #0
   2a0fc:	cmpne	r7, #2
   2a100:	ldr	r3, [r2, #8]
   2a104:	add	r3, r3, #1
   2a108:	str	r3, [r2, #8]
   2a10c:	beq	2a138 <fb_scope_table_insert@@Base+0x4ac>
   2a110:	ldr	r2, [sp, #12]
   2a114:	add	r4, r4, #1
   2a118:	ldr	r1, [sp, #16]
   2a11c:	and	r5, r1, r4
   2a120:	add	r4, r4, #1
   2a124:	ldr	r3, [r2, r5, lsl #2]
   2a128:	add	r5, r2, r5, lsl #2
   2a12c:	cmp	r3, #0
   2a130:	cmpne	r3, #2
   2a134:	bne	2a11c <fb_scope_table_insert@@Base+0x490>
   2a138:	ldr	r3, [sp, #4]
   2a13c:	mov	r7, #0
   2a140:	str	r3, [r5]
   2a144:	b	29f3c <fb_scope_table_insert@@Base+0x2b0>
   2a148:	mov	r5, r3
   2a14c:	mov	r4, ip
   2a150:	b	29e0c <fb_scope_table_insert@@Base+0x180>
   2a154:	movw	r3, #32696	; 0x7fb8
   2a158:	movt	r3, #5
   2a15c:	movw	r1, #32420	; 0x7ea4
   2a160:	movt	r1, #5
   2a164:	movw	r0, #32548	; 0x7f24
   2a168:	movt	r0, #5
   2a16c:	mov	r2, #116	; 0x74
   2a170:	bl	14120 <__assert_fail@plt>
   2a174:	movw	r3, #32696	; 0x7fb8
   2a178:	movt	r3, #5
   2a17c:	movw	r1, #32420	; 0x7ea4
   2a180:	movt	r1, #5
   2a184:	movw	r0, #32524	; 0x7f0c
   2a188:	movt	r0, #5
   2a18c:	mov	r2, #115	; 0x73
   2a190:	bl	14120 <__assert_fail@plt>
   2a194:	movw	r3, #32696	; 0x7fb8
   2a198:	movt	r3, #5
   2a19c:	movw	r1, #32420	; 0x7ea4
   2a1a0:	movt	r1, #5
   2a1a4:	movw	r0, #32500	; 0x7ef4
   2a1a8:	movt	r0, #5
   2a1ac:	mov	r2, #114	; 0x72
   2a1b0:	bl	14120 <__assert_fail@plt>
   2a1b4:	movw	r3, #49320	; 0xc0a8
   2a1b8:	movt	r3, #6
   2a1bc:	movw	r2, #32572	; 0x7f3c
   2a1c0:	movt	r2, #5
   2a1c4:	ldr	r0, [r3]
   2a1c8:	movw	r1, #32624	; 0x7f70
   2a1cc:	movt	r1, #5
   2a1d0:	bl	1406c <fprintf@plt>
   2a1d4:	mov	r0, #1
   2a1d8:	bl	14048 <exit@plt>

0002a1dc <fb_scope_table_insert_item@@Base>:
   2a1dc:	mov	r3, r2
   2a1e0:	mov	r2, r1
   2a1e4:	ldr	r1, [r1]
   2a1e8:	b	296b0 <fb_symbol_table_visit@@Base+0x84>

0002a1ec <fb_scope_table_find@@Base>:
   2a1ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a1f0:	strd	r6, [sp, #8]
   2a1f4:	strd	sl, [sp, #24]
   2a1f8:	ldr	fp, [r0]
   2a1fc:	strd	r8, [sp, #16]
   2a200:	str	lr, [sp, #32]
   2a204:	sub	sp, sp, #12
   2a208:	cmp	fp, #0
   2a20c:	moveq	r7, fp
   2a210:	beq	2a420 <fb_scope_table_find@@Base+0x234>
   2a214:	ldr	r3, [r0, #12]
   2a218:	cmp	r2, #0
   2a21c:	sub	r3, r3, #1
   2a220:	str	r3, [sp]
   2a224:	ble	2a440 <fb_scope_table_find@@Base+0x254>
   2a228:	mov	r7, r2
   2a22c:	mov	lr, r1
   2a230:	cmp	r7, #0
   2a234:	movw	sl, #11863	; 0x2e57
   2a238:	movt	sl, #12137	; 0x2f69
   2a23c:	movw	r8, #15186	; 0x3b52
   2a240:	movt	r8, #12137	; 0x2f69
   2a244:	movw	r6, #31153	; 0x79b1
   2a248:	movt	r6, #40503	; 0x9e37
   2a24c:	mov	r4, #0
   2a250:	ldrb	r5, [lr]
   2a254:	beq	2a2f8 <fb_scope_table_find@@Base+0x10c>
   2a258:	cmp	r5, #46	; 0x2e
   2a25c:	beq	2a58c <fb_scope_table_find@@Base+0x3a0>
   2a260:	mov	r3, lr
   2a264:	mov	ip, #0
   2a268:	b	2a27c <fb_scope_table_find@@Base+0x90>
   2a26c:	ldrb	r9, [r3, #1]!
   2a270:	cmp	r9, #46	; 0x2e
   2a274:	beq	2a540 <fb_scope_table_find@@Base+0x354>
   2a278:	mov	ip, r0
   2a27c:	add	r0, ip, #1
   2a280:	cmp	r0, r7
   2a284:	bne	2a26c <fb_scope_table_find@@Base+0x80>
   2a288:	cmp	ip, #0
   2a28c:	beq	2a30c <fb_scope_table_find@@Base+0x120>
   2a290:	cmp	r5, #0
   2a294:	mov	r0, r7
   2a298:	add	r9, lr, #1
   2a29c:	beq	2a30c <fb_scope_table_find@@Base+0x120>
   2a2a0:	add	ip, lr, ip
   2a2a4:	mov	r3, sl
   2a2a8:	b	2a2b8 <fb_scope_table_find@@Base+0xcc>
   2a2ac:	ldrb	r5, [r9], #1
   2a2b0:	cmp	r5, #0
   2a2b4:	beq	2a2c8 <fb_scope_table_find@@Base+0xdc>
   2a2b8:	add	r3, r3, r3, lsl #5
   2a2bc:	cmp	r9, ip
   2a2c0:	eor	r3, r3, r5
   2a2c4:	bne	2a2ac <fb_scope_table_find@@Base+0xc0>
   2a2c8:	eor	r3, r3, r4
   2a2cc:	cmp	r7, r0
   2a2d0:	eor	r3, r3, r8
   2a2d4:	mul	r4, r6, r3
   2a2d8:	beq	2a320 <fb_scope_table_find@@Base+0x134>
   2a2dc:	mvn	r3, r0
   2a2e0:	add	r0, r0, #1
   2a2e4:	add	r7, r7, r3
   2a2e8:	add	lr, lr, r0
   2a2ec:	cmp	r7, #0
   2a2f0:	ldrb	r5, [lr]
   2a2f4:	bne	2a258 <fb_scope_table_find@@Base+0x6c>
   2a2f8:	cmp	r5, #0
   2a2fc:	mov	r0, r7
   2a300:	mvn	ip, #0
   2a304:	add	r9, lr, #1
   2a308:	bne	2a2a0 <fb_scope_table_find@@Base+0xb4>
   2a30c:	eor	r4, r4, #5376	; 0x1500
   2a310:	movw	r3, #31153	; 0x79b1
   2a314:	movt	r3, #40503	; 0x9e37
   2a318:	eor	r4, r4, #5
   2a31c:	mul	r4, r3, r4
   2a320:	ldr	r3, [sp]
   2a324:	and	r3, r3, r4
   2a328:	add	r3, fp, r3, lsl #2
   2a32c:	ldr	r7, [r3]
   2a330:	cmp	r7, #0
   2a334:	beq	2a420 <fb_scope_table_find@@Base+0x234>
   2a338:	mov	r6, r2
   2a33c:	mov	r8, r1
   2a340:	str	fp, [sp, #4]
   2a344:	add	r4, r4, #1
   2a348:	cmp	r7, #2
   2a34c:	beq	2a404 <fb_scope_table_find@@Base+0x218>
   2a350:	cmp	r6, #0
   2a354:	ldr	r5, [r7]
   2a358:	ble	2a4dc <fb_scope_table_find@@Base+0x2f0>
   2a35c:	cmp	r5, #0
   2a360:	beq	2a404 <fb_scope_table_find@@Base+0x218>
   2a364:	ldr	r2, [r5, #4]
   2a368:	ldm	r2, {r1, r3}
   2a36c:	cmp	r6, r3
   2a370:	bcc	2a404 <fb_scope_table_find@@Base+0x218>
   2a374:	mov	r2, r8
   2a378:	mov	ip, r6
   2a37c:	cmp	r3, #0
   2a380:	beq	2a584 <fb_scope_table_find@@Base+0x398>
   2a384:	ldrb	lr, [r2]
   2a388:	ldrb	r0, [r1]
   2a38c:	cmp	lr, r0
   2a390:	bne	2a404 <fb_scope_table_find@@Base+0x218>
   2a394:	sub	r0, r3, #1
   2a398:	mov	lr, r2
   2a39c:	add	r0, r0, r2
   2a3a0:	rsb	sl, r2, #1
   2a3a4:	b	2a3b8 <fb_scope_table_find@@Base+0x1cc>
   2a3a8:	ldrb	fp, [r1, #1]!
   2a3ac:	ldrb	r9, [lr, #1]!
   2a3b0:	cmp	fp, r9
   2a3b4:	bne	2a404 <fb_scope_table_find@@Base+0x218>
   2a3b8:	cmp	r0, lr
   2a3bc:	add	r9, sl, lr
   2a3c0:	bne	2a3a8 <fb_scope_table_find@@Base+0x1bc>
   2a3c4:	cmp	r3, ip
   2a3c8:	beq	2a564 <fb_scope_table_find@@Base+0x378>
   2a3cc:	ldrb	r1, [r2, r9]
   2a3d0:	cmp	r1, #46	; 0x2e
   2a3d4:	bne	2a404 <fb_scope_table_find@@Base+0x218>
   2a3d8:	ldr	r5, [r5]
   2a3dc:	mvn	r1, r3
   2a3e0:	add	r3, r3, #1
   2a3e4:	add	ip, ip, r1
   2a3e8:	add	r2, r2, r3
   2a3ec:	cmp	r5, #0
   2a3f0:	beq	2a404 <fb_scope_table_find@@Base+0x218>
   2a3f4:	ldr	r1, [r5, #4]
   2a3f8:	ldm	r1, {r1, r3}
   2a3fc:	cmp	r3, ip
   2a400:	bls	2a37c <fb_scope_table_find@@Base+0x190>
   2a404:	ldr	r3, [sp]
   2a408:	ldr	r2, [sp, #4]
   2a40c:	and	r3, r3, r4
   2a410:	add	r4, r4, #1
   2a414:	ldr	r7, [r2, r3, lsl #2]
   2a418:	cmp	r7, #0
   2a41c:	bne	2a348 <fb_scope_table_find@@Base+0x15c>
   2a420:	mov	r0, r7
   2a424:	add	sp, sp, #12
   2a428:	ldrd	r4, [sp]
   2a42c:	ldrd	r6, [sp, #8]
   2a430:	ldrd	r8, [sp, #16]
   2a434:	ldrd	sl, [sp, #24]
   2a438:	add	sp, sp, #32
   2a43c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a440:	cmp	r1, #0
   2a444:	beq	2a59c <fb_scope_table_find@@Base+0x3b0>
   2a448:	movw	r5, #11863	; 0x2e57
   2a44c:	movt	r5, #12137	; 0x2f69
   2a450:	movw	r7, #15186	; 0x3b52
   2a454:	movt	r7, #12137	; 0x2f69
   2a458:	movw	r6, #31153	; 0x79b1
   2a45c:	movt	r6, #40503	; 0x9e37
   2a460:	mov	lr, r2
   2a464:	mov	ip, r1
   2a468:	mov	r4, #0
   2a46c:	ldr	r0, [ip, #4]
   2a470:	ldr	r8, [r0]
   2a474:	ldr	r3, [r0, #4]
   2a478:	subs	r3, r3, #1
   2a47c:	beq	2a57c <fb_scope_table_find@@Base+0x390>
   2a480:	mov	r0, r8
   2a484:	ldrb	r9, [r0], #1
   2a488:	cmp	r9, #0
   2a48c:	beq	2a57c <fb_scope_table_find@@Base+0x390>
   2a490:	add	r8, r8, r3
   2a494:	mov	r3, r5
   2a498:	b	2a4a8 <fb_scope_table_find@@Base+0x2bc>
   2a49c:	ldrb	r9, [r0], #1
   2a4a0:	cmp	r9, #0
   2a4a4:	beq	2a4b8 <fb_scope_table_find@@Base+0x2cc>
   2a4a8:	add	r3, r3, r3, lsl #5
   2a4ac:	cmp	r0, r8
   2a4b0:	eor	r3, r3, r9
   2a4b4:	bne	2a49c <fb_scope_table_find@@Base+0x2b0>
   2a4b8:	eor	r3, r3, r4
   2a4bc:	adds	lr, lr, #1
   2a4c0:	ldr	ip, [ip]
   2a4c4:	eor	r3, r3, r7
   2a4c8:	mul	r4, r6, r3
   2a4cc:	beq	2a320 <fb_scope_table_find@@Base+0x134>
   2a4d0:	cmp	ip, #0
   2a4d4:	bne	2a46c <fb_scope_table_find@@Base+0x280>
   2a4d8:	b	2a320 <fb_scope_table_find@@Base+0x134>
   2a4dc:	mov	r9, r8
   2a4e0:	mov	sl, r6
   2a4e4:	b	2a528 <fb_scope_table_find@@Base+0x33c>
   2a4e8:	ldr	r3, [r5, #4]
   2a4ec:	ldr	r1, [r9, #4]
   2a4f0:	ldr	r0, [r3, #4]
   2a4f4:	ldr	ip, [r1, #4]
   2a4f8:	mov	r2, r0
   2a4fc:	cmp	r0, ip
   2a500:	bne	2a404 <fb_scope_table_find@@Base+0x218>
   2a504:	ldr	r1, [r1]
   2a508:	ldr	r0, [r3]
   2a50c:	bl	14108 <strncmp@plt>
   2a510:	cmp	r0, #0
   2a514:	bne	2a404 <fb_scope_table_find@@Base+0x218>
   2a518:	adds	sl, sl, #1
   2a51c:	ldr	r5, [r5]
   2a520:	ldr	r9, [r9]
   2a524:	beq	2a568 <fb_scope_table_find@@Base+0x37c>
   2a528:	cmp	r5, #0
   2a52c:	cmpne	r9, #0
   2a530:	bne	2a4e8 <fb_scope_table_find@@Base+0x2fc>
   2a534:	orrs	r3, r5, r9
   2a538:	bne	2a404 <fb_scope_table_find@@Base+0x218>
   2a53c:	b	2a420 <fb_scope_table_find@@Base+0x234>
   2a540:	cmp	ip, #0
   2a544:	beq	2a554 <fb_scope_table_find@@Base+0x368>
   2a548:	cmp	r5, #0
   2a54c:	add	r9, lr, #1
   2a550:	bne	2a2a0 <fb_scope_table_find@@Base+0xb4>
   2a554:	eor	r3, r4, #5376	; 0x1500
   2a558:	eor	r3, r3, #5
   2a55c:	mul	r4, r6, r3
   2a560:	b	2a2dc <fb_scope_table_find@@Base+0xf0>
   2a564:	ldr	r5, [r5]
   2a568:	clz	r5, r5
   2a56c:	lsr	r5, r5, #5
   2a570:	cmp	r5, #0
   2a574:	beq	2a404 <fb_scope_table_find@@Base+0x218>
   2a578:	b	2a420 <fb_scope_table_find@@Base+0x234>
   2a57c:	mov	r3, r5
   2a580:	b	2a4b8 <fb_scope_table_find@@Base+0x2cc>
   2a584:	mov	r9, r3
   2a588:	b	2a3c4 <fb_scope_table_find@@Base+0x1d8>
   2a58c:	add	r9, lr, #1
   2a590:	mov	r0, #0
   2a594:	mvn	ip, #0
   2a598:	b	2a2a0 <fb_scope_table_find@@Base+0xb4>
   2a59c:	mov	r3, fp
   2a5a0:	mov	r4, r1
   2a5a4:	b	2a32c <fb_scope_table_find@@Base+0x140>

0002a5a8 <fb_scope_table_find_item@@Base>:
   2a5a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2a5ac:	strd	r6, [sp, #8]
   2a5b0:	strd	r8, [sp, #16]
   2a5b4:	ldr	r8, [r0]
   2a5b8:	str	sl, [sp, #24]
   2a5bc:	str	lr, [sp, #28]
   2a5c0:	ldr	r6, [r1]
   2a5c4:	cmp	r8, #0
   2a5c8:	moveq	r9, r8
   2a5cc:	beq	2a718 <fb_scope_table_find_item@@Base+0x170>
   2a5d0:	ldr	r7, [r0, #12]
   2a5d4:	cmp	r6, #0
   2a5d8:	sub	r7, r7, #1
   2a5dc:	beq	2a748 <fb_scope_table_find_item@@Base+0x1a0>
   2a5e0:	movw	ip, #11863	; 0x2e57
   2a5e4:	movt	ip, #12137	; 0x2f69
   2a5e8:	movw	r5, #15186	; 0x3b52
   2a5ec:	movt	r5, #12137	; 0x2f69
   2a5f0:	movw	lr, #31153	; 0x79b1
   2a5f4:	movt	lr, #40503	; 0x9e37
   2a5f8:	mov	r0, r6
   2a5fc:	mov	r4, #0
   2a600:	ldr	r2, [r0, #4]
   2a604:	ldm	r2, {r1, r3}
   2a608:	subs	r3, r3, #1
   2a60c:	beq	2a734 <fb_scope_table_find_item@@Base+0x18c>
   2a610:	mov	r2, r1
   2a614:	ldrb	r9, [r2], #1
   2a618:	cmp	r9, #0
   2a61c:	beq	2a734 <fb_scope_table_find_item@@Base+0x18c>
   2a620:	add	r1, r1, r3
   2a624:	mov	r3, ip
   2a628:	b	2a638 <fb_scope_table_find_item@@Base+0x90>
   2a62c:	ldrb	r9, [r2], #1
   2a630:	cmp	r9, #0
   2a634:	beq	2a648 <fb_scope_table_find_item@@Base+0xa0>
   2a638:	add	r3, r3, r3, lsl #5
   2a63c:	cmp	r2, r1
   2a640:	eor	r3, r3, r9
   2a644:	bne	2a62c <fb_scope_table_find_item@@Base+0x84>
   2a648:	ldr	r0, [r0]
   2a64c:	eor	r3, r3, r4
   2a650:	eor	r3, r3, r5
   2a654:	mul	r4, lr, r3
   2a658:	cmp	r0, #0
   2a65c:	bne	2a600 <fb_scope_table_find_item@@Base+0x58>
   2a660:	and	r3, r7, r4
   2a664:	add	r3, r8, r3, lsl #2
   2a668:	ldr	r9, [r3]
   2a66c:	cmp	r9, #0
   2a670:	beq	2a718 <fb_scope_table_find_item@@Base+0x170>
   2a674:	add	r4, r4, #1
   2a678:	cmp	r9, #2
   2a67c:	beq	2a704 <fb_scope_table_find_item@@Base+0x15c>
   2a680:	ldr	r5, [r9]
   2a684:	adds	r2, r6, #0
   2a688:	movne	r2, #1
   2a68c:	adds	r3, r5, #0
   2a690:	movne	r3, #1
   2a694:	tst	r3, r2
   2a698:	beq	2a73c <fb_scope_table_find_item@@Base+0x194>
   2a69c:	ldr	r0, [r5, #4]
   2a6a0:	ldr	r3, [r6, #4]
   2a6a4:	ldr	r2, [r0, #4]
   2a6a8:	ldr	r1, [r3, #4]
   2a6ac:	cmp	r2, r1
   2a6b0:	bne	2a704 <fb_scope_table_find_item@@Base+0x15c>
   2a6b4:	mov	sl, r6
   2a6b8:	ldr	r0, [r0]
   2a6bc:	ldr	r1, [r3]
   2a6c0:	bl	14108 <strncmp@plt>
   2a6c4:	cmp	r0, #0
   2a6c8:	bne	2a704 <fb_scope_table_find_item@@Base+0x15c>
   2a6cc:	ldr	r5, [r5]
   2a6d0:	ldr	sl, [sl]
   2a6d4:	adds	r3, r5, #0
   2a6d8:	movne	r3, #1
   2a6dc:	adds	r2, sl, #0
   2a6e0:	movne	r2, #1
   2a6e4:	tst	r3, r2
   2a6e8:	beq	2a73c <fb_scope_table_find_item@@Base+0x194>
   2a6ec:	ldr	r0, [r5, #4]
   2a6f0:	ldr	r3, [sl, #4]
   2a6f4:	ldr	r2, [r0, #4]
   2a6f8:	ldr	r1, [r3, #4]
   2a6fc:	cmp	r2, r1
   2a700:	beq	2a6b8 <fb_scope_table_find_item@@Base+0x110>
   2a704:	and	r3, r7, r4
   2a708:	add	r4, r4, #1
   2a70c:	ldr	r9, [r8, r3, lsl #2]
   2a710:	cmp	r9, #0
   2a714:	bne	2a678 <fb_scope_table_find_item@@Base+0xd0>
   2a718:	mov	r0, r9
   2a71c:	ldrd	r4, [sp]
   2a720:	ldrd	r6, [sp, #8]
   2a724:	ldrd	r8, [sp, #16]
   2a728:	ldr	sl, [sp, #24]
   2a72c:	add	sp, sp, #28
   2a730:	pop	{pc}		; (ldr pc, [sp], #4)
   2a734:	mov	r3, ip
   2a738:	b	2a648 <fb_scope_table_find_item@@Base+0xa0>
   2a73c:	orrs	r3, r2, r3
   2a740:	beq	2a718 <fb_scope_table_find_item@@Base+0x170>
   2a744:	b	2a704 <fb_scope_table_find_item@@Base+0x15c>
   2a748:	mov	r3, r8
   2a74c:	mov	r4, r6
   2a750:	b	2a668 <fb_scope_table_find_item@@Base+0xc0>

0002a754 <fb_scope_table_remove@@Base>:
   2a754:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a758:	strd	r6, [sp, #8]
   2a75c:	strd	sl, [sp, #24]
   2a760:	ldr	fp, [r0]
   2a764:	strd	r8, [sp, #16]
   2a768:	str	lr, [sp, #32]
   2a76c:	sub	sp, sp, #20
   2a770:	str	r1, [sp]
   2a774:	cmp	fp, #0
   2a778:	moveq	r8, fp
   2a77c:	beq	2a990 <fb_scope_table_remove@@Base+0x23c>
   2a780:	ldr	r3, [r0, #12]
   2a784:	cmp	r2, #0
   2a788:	sub	r3, r3, #1
   2a78c:	str	r3, [sp, #4]
   2a790:	ble	2a9b0 <fb_scope_table_remove@@Base+0x25c>
   2a794:	mov	r6, r2
   2a798:	mov	lr, r1
   2a79c:	cmp	r6, #0
   2a7a0:	movw	sl, #11863	; 0x2e57
   2a7a4:	movt	sl, #12137	; 0x2f69
   2a7a8:	movw	r9, #15186	; 0x3b52
   2a7ac:	movt	r9, #12137	; 0x2f69
   2a7b0:	movw	r7, #31153	; 0x79b1
   2a7b4:	movt	r7, #40503	; 0x9e37
   2a7b8:	mov	r4, #0
   2a7bc:	ldrb	r5, [lr]
   2a7c0:	beq	2a864 <fb_scope_table_remove@@Base+0x110>
   2a7c4:	cmp	r5, #46	; 0x2e
   2a7c8:	beq	2ab18 <fb_scope_table_remove@@Base+0x3c4>
   2a7cc:	mov	r3, lr
   2a7d0:	mov	ip, #0
   2a7d4:	b	2a7e8 <fb_scope_table_remove@@Base+0x94>
   2a7d8:	ldrb	r8, [r3, #1]!
   2a7dc:	cmp	r8, #46	; 0x2e
   2a7e0:	beq	2aac8 <fb_scope_table_remove@@Base+0x374>
   2a7e4:	mov	ip, r1
   2a7e8:	add	r1, ip, #1
   2a7ec:	cmp	r1, r6
   2a7f0:	bne	2a7d8 <fb_scope_table_remove@@Base+0x84>
   2a7f4:	cmp	ip, #0
   2a7f8:	beq	2a878 <fb_scope_table_remove@@Base+0x124>
   2a7fc:	cmp	r5, #0
   2a800:	mov	r1, r6
   2a804:	add	r8, lr, #1
   2a808:	beq	2a878 <fb_scope_table_remove@@Base+0x124>
   2a80c:	add	ip, lr, ip
   2a810:	mov	r3, sl
   2a814:	b	2a824 <fb_scope_table_remove@@Base+0xd0>
   2a818:	ldrb	r5, [r8], #1
   2a81c:	cmp	r5, #0
   2a820:	beq	2a834 <fb_scope_table_remove@@Base+0xe0>
   2a824:	add	r3, r3, r3, lsl #5
   2a828:	cmp	r8, ip
   2a82c:	eor	r3, r3, r5
   2a830:	bne	2a818 <fb_scope_table_remove@@Base+0xc4>
   2a834:	eor	r3, r3, r4
   2a838:	cmp	r6, r1
   2a83c:	eor	r3, r3, r9
   2a840:	mul	r4, r7, r3
   2a844:	beq	2a88c <fb_scope_table_remove@@Base+0x138>
   2a848:	mvn	r3, r1
   2a84c:	add	r1, r1, #1
   2a850:	add	r6, r6, r3
   2a854:	add	lr, lr, r1
   2a858:	cmp	r6, #0
   2a85c:	ldrb	r5, [lr]
   2a860:	bne	2a7c4 <fb_scope_table_remove@@Base+0x70>
   2a864:	cmp	r5, #0
   2a868:	mov	r1, r6
   2a86c:	mvn	ip, #0
   2a870:	add	r8, lr, #1
   2a874:	bne	2a80c <fb_scope_table_remove@@Base+0xb8>
   2a878:	eor	r4, r4, #5376	; 0x1500
   2a87c:	movw	r3, #31153	; 0x79b1
   2a880:	movt	r3, #40503	; 0x9e37
   2a884:	eor	r4, r4, #5
   2a888:	mul	r4, r3, r4
   2a88c:	ldr	r3, [sp, #4]
   2a890:	and	r6, r3, r4
   2a894:	add	r6, fp, r6, lsl #2
   2a898:	ldr	r8, [r6]
   2a89c:	cmp	r8, #0
   2a8a0:	beq	2a990 <fb_scope_table_remove@@Base+0x23c>
   2a8a4:	mov	r7, r2
   2a8a8:	add	r4, r4, #1
   2a8ac:	str	r0, [sp, #8]
   2a8b0:	mov	sl, r6
   2a8b4:	cmp	r8, #2
   2a8b8:	beq	2a974 <fb_scope_table_remove@@Base+0x220>
   2a8bc:	cmp	r7, #0
   2a8c0:	ldr	r5, [r8]
   2a8c4:	ble	2aa4c <fb_scope_table_remove@@Base+0x2f8>
   2a8c8:	cmp	r5, #0
   2a8cc:	beq	2a974 <fb_scope_table_remove@@Base+0x220>
   2a8d0:	ldr	r2, [r5, #4]
   2a8d4:	ldm	r2, {r1, r3}
   2a8d8:	cmp	r7, r3
   2a8dc:	bcc	2a974 <fb_scope_table_remove@@Base+0x220>
   2a8e0:	ldr	r2, [sp]
   2a8e4:	mov	ip, r7
   2a8e8:	str	sl, [sp, #12]
   2a8ec:	cmp	r3, #0
   2a8f0:	beq	2ab10 <fb_scope_table_remove@@Base+0x3bc>
   2a8f4:	ldrb	lr, [r2]
   2a8f8:	ldrb	r0, [r1]
   2a8fc:	cmp	lr, r0
   2a900:	bne	2a974 <fb_scope_table_remove@@Base+0x220>
   2a904:	sub	r0, r3, #1
   2a908:	mov	lr, r2
   2a90c:	add	r0, r0, r2
   2a910:	rsb	r6, r2, #1
   2a914:	b	2a928 <fb_scope_table_remove@@Base+0x1d4>
   2a918:	ldrb	sl, [r1, #1]!
   2a91c:	ldrb	r9, [lr, #1]!
   2a920:	cmp	sl, r9
   2a924:	bne	2a974 <fb_scope_table_remove@@Base+0x220>
   2a928:	cmp	r0, lr
   2a92c:	add	r9, r6, lr
   2a930:	bne	2a918 <fb_scope_table_remove@@Base+0x1c4>
   2a934:	cmp	r3, ip
   2a938:	beq	2aaec <fb_scope_table_remove@@Base+0x398>
   2a93c:	ldrb	r1, [r2, r9]
   2a940:	cmp	r1, #46	; 0x2e
   2a944:	bne	2a974 <fb_scope_table_remove@@Base+0x220>
   2a948:	ldr	r5, [r5]
   2a94c:	mvn	r1, r3
   2a950:	add	r3, r3, #1
   2a954:	add	ip, ip, r1
   2a958:	add	r2, r2, r3
   2a95c:	cmp	r5, #0
   2a960:	beq	2a974 <fb_scope_table_remove@@Base+0x220>
   2a964:	ldr	r1, [r5, #4]
   2a968:	ldm	r1, {r1, r3}
   2a96c:	cmp	r3, ip
   2a970:	bls	2a8ec <fb_scope_table_remove@@Base+0x198>
   2a974:	ldr	r3, [sp, #4]
   2a978:	and	r3, r3, r4
   2a97c:	add	r4, r4, #1
   2a980:	ldr	r8, [fp, r3, lsl #2]
   2a984:	add	sl, fp, r3, lsl #2
   2a988:	cmp	r8, #0
   2a98c:	bne	2a8b4 <fb_scope_table_remove@@Base+0x160>
   2a990:	mov	r0, r8
   2a994:	add	sp, sp, #20
   2a998:	ldrd	r4, [sp]
   2a99c:	ldrd	r6, [sp, #8]
   2a9a0:	ldrd	r8, [sp, #16]
   2a9a4:	ldrd	sl, [sp, #24]
   2a9a8:	add	sp, sp, #32
   2a9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2a9b0:	cmp	r1, #0
   2a9b4:	beq	2ab28 <fb_scope_table_remove@@Base+0x3d4>
   2a9b8:	movw	r7, #11863	; 0x2e57
   2a9bc:	movt	r7, #12137	; 0x2f69
   2a9c0:	movw	r9, #15186	; 0x3b52
   2a9c4:	movt	r9, #12137	; 0x2f69
   2a9c8:	movw	r8, #31153	; 0x79b1
   2a9cc:	movt	r8, #40503	; 0x9e37
   2a9d0:	mov	r6, r2
   2a9d4:	mov	r5, r1
   2a9d8:	mov	r4, #0
   2a9dc:	ldr	r1, [r5, #4]
   2a9e0:	ldr	ip, [r1]
   2a9e4:	ldr	r3, [r1, #4]
   2a9e8:	subs	r3, r3, #1
   2a9ec:	beq	2ab08 <fb_scope_table_remove@@Base+0x3b4>
   2a9f0:	mov	r1, ip
   2a9f4:	ldrb	lr, [r1], #1
   2a9f8:	cmp	lr, #0
   2a9fc:	beq	2ab08 <fb_scope_table_remove@@Base+0x3b4>
   2aa00:	add	ip, ip, r3
   2aa04:	mov	r3, r7
   2aa08:	b	2aa18 <fb_scope_table_remove@@Base+0x2c4>
   2aa0c:	ldrb	lr, [r1], #1
   2aa10:	cmp	lr, #0
   2aa14:	beq	2aa28 <fb_scope_table_remove@@Base+0x2d4>
   2aa18:	add	r3, r3, r3, lsl #5
   2aa1c:	cmp	r1, ip
   2aa20:	eor	r3, r3, lr
   2aa24:	bne	2aa0c <fb_scope_table_remove@@Base+0x2b8>
   2aa28:	eor	r3, r3, r4
   2aa2c:	adds	r6, r6, #1
   2aa30:	ldr	r5, [r5]
   2aa34:	eor	r3, r3, r9
   2aa38:	mul	r4, r8, r3
   2aa3c:	beq	2a88c <fb_scope_table_remove@@Base+0x138>
   2aa40:	cmp	r5, #0
   2aa44:	bne	2a9dc <fb_scope_table_remove@@Base+0x288>
   2aa48:	b	2a88c <fb_scope_table_remove@@Base+0x138>
   2aa4c:	mov	r9, r7
   2aa50:	ldr	r6, [sp]
   2aa54:	b	2aa98 <fb_scope_table_remove@@Base+0x344>
   2aa58:	ldr	r3, [r5, #4]
   2aa5c:	ldr	r1, [r6, #4]
   2aa60:	ldr	r0, [r3, #4]
   2aa64:	ldr	ip, [r1, #4]
   2aa68:	mov	r2, r0
   2aa6c:	cmp	r0, ip
   2aa70:	bne	2a974 <fb_scope_table_remove@@Base+0x220>
   2aa74:	ldr	r1, [r1]
   2aa78:	ldr	r0, [r3]
   2aa7c:	bl	14108 <strncmp@plt>
   2aa80:	cmp	r0, #0
   2aa84:	bne	2a974 <fb_scope_table_remove@@Base+0x220>
   2aa88:	adds	r9, r9, #1
   2aa8c:	ldr	r5, [r5]
   2aa90:	ldr	r6, [r6]
   2aa94:	beq	2aaf4 <fb_scope_table_remove@@Base+0x3a0>
   2aa98:	cmp	r5, #0
   2aa9c:	cmpne	r6, #0
   2aaa0:	bne	2aa58 <fb_scope_table_remove@@Base+0x304>
   2aaa4:	orrs	r3, r5, r6
   2aaa8:	bne	2a974 <fb_scope_table_remove@@Base+0x220>
   2aaac:	ldr	r1, [sp, #8]
   2aab0:	mov	r2, #2
   2aab4:	ldr	r3, [r1, #8]
   2aab8:	str	r2, [sl]
   2aabc:	sub	r3, r3, #1
   2aac0:	str	r3, [r1, #8]
   2aac4:	b	2a990 <fb_scope_table_remove@@Base+0x23c>
   2aac8:	cmp	ip, #0
   2aacc:	beq	2aadc <fb_scope_table_remove@@Base+0x388>
   2aad0:	cmp	r5, #0
   2aad4:	add	r8, lr, #1
   2aad8:	bne	2a80c <fb_scope_table_remove@@Base+0xb8>
   2aadc:	eor	r3, r4, #5376	; 0x1500
   2aae0:	eor	r3, r3, #5
   2aae4:	mul	r4, r7, r3
   2aae8:	b	2a848 <fb_scope_table_remove@@Base+0xf4>
   2aaec:	ldr	r5, [r5]
   2aaf0:	ldr	sl, [sp, #12]
   2aaf4:	clz	r5, r5
   2aaf8:	lsr	r5, r5, #5
   2aafc:	cmp	r5, #0
   2ab00:	beq	2a974 <fb_scope_table_remove@@Base+0x220>
   2ab04:	b	2aaac <fb_scope_table_remove@@Base+0x358>
   2ab08:	mov	r3, r7
   2ab0c:	b	2aa28 <fb_scope_table_remove@@Base+0x2d4>
   2ab10:	mov	r9, r3
   2ab14:	b	2a934 <fb_scope_table_remove@@Base+0x1e0>
   2ab18:	add	r8, lr, #1
   2ab1c:	mov	r1, #0
   2ab20:	mvn	ip, #0
   2ab24:	b	2a80c <fb_scope_table_remove@@Base+0xb8>
   2ab28:	mov	r4, r1
   2ab2c:	mov	r6, fp
   2ab30:	b	2a898 <fb_scope_table_remove@@Base+0x144>

0002ab34 <fb_scope_table_remove_item@@Base>:
   2ab34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2ab38:	ldr	r5, [r0]
   2ab3c:	ldr	r4, [r1]
   2ab40:	strd	r6, [sp, #8]
   2ab44:	strd	r8, [sp, #16]
   2ab48:	cmp	r5, #0
   2ab4c:	strd	sl, [sp, #24]
   2ab50:	moveq	fp, r5
   2ab54:	str	lr, [sp, #32]
   2ab58:	sub	sp, sp, #12
   2ab5c:	beq	2acb0 <fb_scope_table_remove_item@@Base+0x17c>
   2ab60:	ldr	r6, [r0, #12]
   2ab64:	cmp	r4, #0
   2ab68:	sub	r6, r6, #1
   2ab6c:	beq	2acfc <fb_scope_table_remove_item@@Base+0x1c8>
   2ab70:	movw	ip, #11863	; 0x2e57
   2ab74:	movt	ip, #12137	; 0x2f69
   2ab78:	movw	r7, #15186	; 0x3b52
   2ab7c:	movt	r7, #12137	; 0x2f69
   2ab80:	movw	lr, #31153	; 0x79b1
   2ab84:	movt	lr, #40503	; 0x9e37
   2ab88:	mov	r1, r4
   2ab8c:	mov	r8, #0
   2ab90:	ldr	r3, [r1, #4]
   2ab94:	ldm	r3, {r3, sl}
   2ab98:	subs	sl, sl, #1
   2ab9c:	beq	2acd0 <fb_scope_table_remove_item@@Base+0x19c>
   2aba0:	mov	r2, r3
   2aba4:	ldrb	r9, [r2], #1
   2aba8:	cmp	r9, #0
   2abac:	beq	2acd0 <fb_scope_table_remove_item@@Base+0x19c>
   2abb0:	add	sl, r3, sl
   2abb4:	mov	r3, ip
   2abb8:	b	2abc8 <fb_scope_table_remove_item@@Base+0x94>
   2abbc:	ldrb	r9, [r2], #1
   2abc0:	cmp	r9, #0
   2abc4:	beq	2abd8 <fb_scope_table_remove_item@@Base+0xa4>
   2abc8:	add	r3, r3, r3, lsl #5
   2abcc:	cmp	r2, sl
   2abd0:	eor	r3, r3, r9
   2abd4:	bne	2abbc <fb_scope_table_remove_item@@Base+0x88>
   2abd8:	ldr	r1, [r1]
   2abdc:	eor	r3, r3, r8
   2abe0:	eor	r3, r3, r7
   2abe4:	mul	r8, lr, r3
   2abe8:	cmp	r1, #0
   2abec:	bne	2ab90 <fb_scope_table_remove_item@@Base+0x5c>
   2abf0:	and	r2, r6, r8
   2abf4:	add	r7, r5, r2, lsl #2
   2abf8:	ldr	fp, [r7]
   2abfc:	cmp	fp, #0
   2ac00:	beq	2acb0 <fb_scope_table_remove_item@@Base+0x17c>
   2ac04:	add	r8, r8, #1
   2ac08:	str	r0, [sp, #4]
   2ac0c:	cmp	fp, #2
   2ac10:	beq	2ac98 <fb_scope_table_remove_item@@Base+0x164>
   2ac14:	ldr	sl, [fp]
   2ac18:	adds	r1, r4, #0
   2ac1c:	movne	r1, #1
   2ac20:	adds	r2, sl, #0
   2ac24:	movne	r2, #1
   2ac28:	tst	r2, r1
   2ac2c:	beq	2acd8 <fb_scope_table_remove_item@@Base+0x1a4>
   2ac30:	ldr	r1, [r4, #4]
   2ac34:	ldr	r0, [sl, #4]
   2ac38:	ldr	r3, [r1, #4]
   2ac3c:	ldr	r2, [r0, #4]
   2ac40:	cmp	r2, r3
   2ac44:	bne	2ac98 <fb_scope_table_remove_item@@Base+0x164>
   2ac48:	mov	r9, r4
   2ac4c:	ldr	r0, [r0]
   2ac50:	ldr	r1, [r1]
   2ac54:	bl	14108 <strncmp@plt>
   2ac58:	cmp	r0, #0
   2ac5c:	bne	2ac98 <fb_scope_table_remove_item@@Base+0x164>
   2ac60:	ldr	sl, [sl]
   2ac64:	ldr	r9, [r9]
   2ac68:	adds	r2, sl, #0
   2ac6c:	movne	r2, #1
   2ac70:	adds	r1, r9, #0
   2ac74:	movne	r1, #1
   2ac78:	tst	r2, r1
   2ac7c:	beq	2acd8 <fb_scope_table_remove_item@@Base+0x1a4>
   2ac80:	ldr	r1, [r9, #4]
   2ac84:	ldr	r0, [sl, #4]
   2ac88:	ldr	ip, [r1, #4]
   2ac8c:	ldr	r2, [r0, #4]
   2ac90:	cmp	r2, ip
   2ac94:	beq	2ac4c <fb_scope_table_remove_item@@Base+0x118>
   2ac98:	and	r2, r6, r8
   2ac9c:	add	r8, r8, #1
   2aca0:	ldr	fp, [r5, r2, lsl #2]
   2aca4:	add	r7, r5, r2, lsl #2
   2aca8:	cmp	fp, #0
   2acac:	bne	2ac0c <fb_scope_table_remove_item@@Base+0xd8>
   2acb0:	mov	r0, fp
   2acb4:	add	sp, sp, #12
   2acb8:	ldrd	r4, [sp]
   2acbc:	ldrd	r6, [sp, #8]
   2acc0:	ldrd	r8, [sp, #16]
   2acc4:	ldrd	sl, [sp, #24]
   2acc8:	add	sp, sp, #32
   2accc:	pop	{pc}		; (ldr pc, [sp], #4)
   2acd0:	mov	r3, ip
   2acd4:	b	2abd8 <fb_scope_table_remove_item@@Base+0xa4>
   2acd8:	orrs	r3, r1, r2
   2acdc:	bne	2ac98 <fb_scope_table_remove_item@@Base+0x164>
   2ace0:	ldr	r1, [sp, #4]
   2ace4:	mov	r2, #2
   2ace8:	ldr	r3, [r1, #8]
   2acec:	str	r2, [r7]
   2acf0:	sub	r3, r3, #1
   2acf4:	str	r3, [r1, #8]
   2acf8:	b	2acb0 <fb_scope_table_remove_item@@Base+0x17c>
   2acfc:	mov	r7, r5
   2ad00:	mov	r8, r4
   2ad04:	b	2abf8 <fb_scope_table_remove_item@@Base+0xc4>

0002ad08 <fb_scope_table_visit@@Base>:
   2ad08:	ldr	ip, [r0, #12]
   2ad0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ad10:	ldr	r5, [r0]
   2ad14:	strd	r6, [sp, #8]
   2ad18:	str	r8, [sp, #16]
   2ad1c:	cmp	ip, #0
   2ad20:	str	lr, [sp, #20]
   2ad24:	beq	2ad68 <fb_scope_table_visit@@Base+0x60>
   2ad28:	mov	r6, r2
   2ad2c:	mov	r8, r1
   2ad30:	mov	r7, r0
   2ad34:	sub	r5, r5, #4
   2ad38:	mov	r4, #0
   2ad3c:	ldr	r3, [r5, #4]!
   2ad40:	mov	r0, r6
   2ad44:	cmp	r3, #0
   2ad48:	cmpne	r3, #2
   2ad4c:	mov	r1, r3
   2ad50:	beq	2ad7c <fb_scope_table_visit@@Base+0x74>
   2ad54:	blx	r8
   2ad58:	ldr	ip, [r7, #12]
   2ad5c:	add	r4, r4, #1
   2ad60:	cmp	r4, ip
   2ad64:	bcc	2ad3c <fb_scope_table_visit@@Base+0x34>
   2ad68:	ldrd	r4, [sp]
   2ad6c:	ldrd	r6, [sp, #8]
   2ad70:	ldr	r8, [sp, #16]
   2ad74:	add	sp, sp, #20
   2ad78:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad7c:	add	r4, r4, #1
   2ad80:	cmp	r4, ip
   2ad84:	bcc	2ad3c <fb_scope_table_visit@@Base+0x34>
   2ad88:	b	2ad68 <fb_scope_table_visit@@Base+0x60>
   2ad8c:	ldr	r3, [r0, #8]
   2ad90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2ad94:	strd	r6, [sp, #8]
   2ad98:	strd	r8, [sp, #16]
   2ad9c:	mov	r8, r0
   2ada0:	strd	sl, [sp, #24]
   2ada4:	cmp	r1, r3
   2ada8:	str	lr, [sp, #32]
   2adac:	sub	sp, sp, #44	; 0x2c
   2adb0:	movcc	r1, r3
   2adb4:	ldr	r6, [r0]
   2adb8:	cmp	r1, #2
   2adbc:	bls	2af54 <fb_scope_table_visit@@Base+0x24c>
   2adc0:	mov	r3, #4
   2adc4:	movw	r0, #358	; 0x166
   2adc8:	mul	r2, r0, r3
   2adcc:	lsl	r4, r3, #1
   2add0:	cmp	r1, r2, lsr #8
   2add4:	mov	r3, r4
   2add8:	bhi	2adc8 <fb_scope_table_visit@@Base+0xc0>
   2addc:	mov	r1, #4
   2ade0:	mov	r0, r4
   2ade4:	bl	13f7c <calloc@plt>
   2ade8:	cmp	r0, #0
   2adec:	str	r0, [sp, #24]
   2adf0:	beq	2af5c <fb_scope_table_visit@@Base+0x254>
   2adf4:	ldr	r3, [r8, #12]
   2adf8:	mov	r5, #0
   2adfc:	str	r5, [sp, #28]
   2ae00:	str	r5, [sp, #32]
   2ae04:	str	r4, [sp, #36]	; 0x24
   2ae08:	cmp	r3, r5
   2ae0c:	beq	2af04 <fb_scope_table_visit@@Base+0x1fc>
   2ae10:	movw	r9, #15186	; 0x3b52
   2ae14:	movt	r9, #12137	; 0x2f69
   2ae18:	sub	r6, r6, #4
   2ae1c:	mov	fp, #179	; 0xb3
   2ae20:	b	2ae30 <fb_scope_table_visit@@Base+0x128>
   2ae24:	add	r5, r5, #1
   2ae28:	cmp	r5, r3
   2ae2c:	bcs	2af00 <fb_scope_table_visit@@Base+0x1f8>
   2ae30:	ldr	r4, [r6, #4]!
   2ae34:	cmp	r4, #0
   2ae38:	cmpne	r4, #2
   2ae3c:	beq	2ae24 <fb_scope_table_visit@@Base+0x11c>
   2ae40:	cmp	r4, #1
   2ae44:	ldr	sl, [r4, #144]	; 0x90
   2ae48:	ldr	r2, [r4, #148]	; 0x94
   2ae4c:	beq	2af8c <fb_scope_table_visit@@Base+0x284>
   2ae50:	ldr	r1, [sp, #32]
   2ae54:	ldr	r7, [sp, #36]	; 0x24
   2ae58:	mul	r0, fp, r7
   2ae5c:	cmp	r1, r0, lsr #8
   2ae60:	bcc	2ae84 <fb_scope_table_visit@@Base+0x17c>
   2ae64:	lsl	r1, r1, #1
   2ae68:	add	r0, sp, #24
   2ae6c:	str	r2, [sp, #12]
   2ae70:	bl	2ad8c <fb_scope_table_visit@@Base+0x84>
   2ae74:	cmp	r0, #0
   2ae78:	bne	2af64 <fb_scope_table_visit@@Base+0x25c>
   2ae7c:	ldr	r2, [sp, #12]
   2ae80:	ldr	r7, [sp, #36]	; 0x24
   2ae84:	add	r1, sp, #16
   2ae88:	mov	r0, sl
   2ae8c:	str	r9, [sp]
   2ae90:	mov	r3, #0
   2ae94:	ldr	sl, [sp, #24]
   2ae98:	sub	r7, r7, #1
   2ae9c:	str	r1, [sp, #4]
   2aea0:	bl	3c8e4 <cmetrohash64_1@@Base>
   2aea4:	ldr	r3, [sp, #16]
   2aea8:	ldr	r0, [sp, #32]
   2aeac:	and	r2, r7, r3
   2aeb0:	ldr	ip, [sl, r2, lsl #2]
   2aeb4:	add	r2, sl, r2, lsl #2
   2aeb8:	add	r0, r0, #1
   2aebc:	str	r0, [sp, #32]
   2aec0:	cmp	ip, #0
   2aec4:	cmpne	ip, #2
   2aec8:	beq	2aeec <fb_scope_table_visit@@Base+0x1e4>
   2aecc:	add	r3, r3, #1
   2aed0:	and	r2, r7, r3
   2aed4:	add	r3, r3, #1
   2aed8:	ldr	r0, [sl, r2, lsl #2]
   2aedc:	add	r2, sl, r2, lsl #2
   2aee0:	cmp	r0, #0
   2aee4:	cmpne	r0, #2
   2aee8:	bne	2aed0 <fb_scope_table_visit@@Base+0x1c8>
   2aeec:	ldr	r3, [r8, #12]
   2aef0:	add	r5, r5, #1
   2aef4:	str	r4, [r2]
   2aef8:	cmp	r5, r3
   2aefc:	bcc	2ae30 <fb_scope_table_visit@@Base+0x128>
   2af00:	ldr	r6, [r8]
   2af04:	cmp	r6, #0
   2af08:	beq	2af14 <fb_scope_table_visit@@Base+0x20c>
   2af0c:	mov	r0, r6
   2af10:	bl	13fac <free@plt>
   2af14:	ldr	r3, [sp, #24]
   2af18:	mov	r0, #0
   2af1c:	ldr	r1, [sp, #28]
   2af20:	ldr	r2, [sp, #32]
   2af24:	str	r3, [r8]
   2af28:	ldr	r3, [sp, #36]	; 0x24
   2af2c:	str	r1, [r8, #4]
   2af30:	str	r2, [r8, #8]
   2af34:	str	r3, [r8, #12]
   2af38:	add	sp, sp, #44	; 0x2c
   2af3c:	ldrd	r4, [sp]
   2af40:	ldrd	r6, [sp, #8]
   2af44:	ldrd	r8, [sp, #16]
   2af48:	ldrd	sl, [sp, #24]
   2af4c:	add	sp, sp, #32
   2af50:	pop	{pc}		; (ldr pc, [sp], #4)
   2af54:	mov	r4, #4
   2af58:	b	2addc <fb_scope_table_visit@@Base+0xd4>
   2af5c:	mvn	r0, #0
   2af60:	b	2af38 <fb_scope_table_visit@@Base+0x230>
   2af64:	movw	r3, #49320	; 0xc0a8
   2af68:	movt	r3, #6
   2af6c:	movw	r2, #32572	; 0x7f3c
   2af70:	movt	r2, #5
   2af74:	ldr	r0, [r3]
   2af78:	movw	r1, #32624	; 0x7f70
   2af7c:	movt	r1, #5
   2af80:	bl	1406c <fprintf@plt>
   2af84:	mov	r0, #1
   2af88:	bl	14048 <exit@plt>
   2af8c:	movw	r3, #32720	; 0x7fd0
   2af90:	movt	r3, #5
   2af94:	movw	r1, #32420	; 0x7ea4
   2af98:	movt	r1, #5
   2af9c:	movw	r0, #32548	; 0x7f24
   2afa0:	movt	r0, #5
   2afa4:	mov	r2, #116	; 0x74
   2afa8:	bl	14120 <__assert_fail@plt>

0002afac <fb_schema_table_clear@@Base>:
   2afac:	str	r4, [sp, #-8]!
   2afb0:	mov	r4, r0
   2afb4:	ldr	r0, [r0]
   2afb8:	str	lr, [sp, #4]
   2afbc:	cmp	r0, #0
   2afc0:	beq	2afc8 <fb_schema_table_clear@@Base+0x1c>
   2afc4:	bl	13fac <free@plt>
   2afc8:	mov	r3, #0
   2afcc:	str	r3, [r4]
   2afd0:	str	r3, [r4, #4]
   2afd4:	str	r3, [r4, #8]
   2afd8:	str	r3, [r4, #12]
   2afdc:	ldr	r4, [sp]
   2afe0:	add	sp, sp, #4
   2afe4:	pop	{pc}		; (ldr pc, [sp], #4)

0002afe8 <fb_schema_table_destroy@@Base>:
   2afe8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2afec:	strd	r6, [sp, #8]
   2aff0:	mov	r6, r0
   2aff4:	str	r8, [sp, #16]
   2aff8:	subs	r8, r1, #0
   2affc:	str	lr, [sp, #20]
   2b000:	ldr	r0, [r0]
   2b004:	beq	2b050 <fb_schema_table_destroy@@Base+0x68>
   2b008:	ldr	ip, [r6, #12]
   2b00c:	cmp	ip, #0
   2b010:	beq	2b050 <fb_schema_table_destroy@@Base+0x68>
   2b014:	mov	r7, r2
   2b018:	sub	r5, r0, #4
   2b01c:	mov	r4, #0
   2b020:	ldr	r3, [r5, #4]!
   2b024:	mov	r0, r7
   2b028:	cmp	r3, #0
   2b02c:	cmpne	r3, #2
   2b030:	mov	r1, r3
   2b034:	beq	2b084 <fb_schema_table_destroy@@Base+0x9c>
   2b038:	blx	r8
   2b03c:	ldr	ip, [r6, #12]
   2b040:	add	r4, r4, #1
   2b044:	cmp	r4, ip
   2b048:	bcc	2b020 <fb_schema_table_destroy@@Base+0x38>
   2b04c:	ldr	r0, [r6]
   2b050:	cmp	r0, #0
   2b054:	beq	2b05c <fb_schema_table_destroy@@Base+0x74>
   2b058:	bl	13fac <free@plt>
   2b05c:	mov	r3, #0
   2b060:	str	r3, [r6]
   2b064:	str	r3, [r6, #4]
   2b068:	str	r3, [r6, #8]
   2b06c:	str	r3, [r6, #12]
   2b070:	ldrd	r4, [sp]
   2b074:	ldrd	r6, [sp, #8]
   2b078:	ldr	r8, [sp, #16]
   2b07c:	add	sp, sp, #20
   2b080:	pop	{pc}		; (ldr pc, [sp], #4)
   2b084:	add	r4, r4, #1
   2b088:	cmp	r4, ip
   2b08c:	bcc	2b020 <fb_schema_table_destroy@@Base+0x38>
   2b090:	b	2b04c <fb_schema_table_destroy@@Base+0x64>

0002b094 <fb_schema_table_init@@Base>:
   2b094:	cmp	r1, #2
   2b098:	strd	r4, [sp, #-16]!
   2b09c:	mov	r4, r0
   2b0a0:	str	r6, [sp, #8]
   2b0a4:	str	lr, [sp, #12]
   2b0a8:	bls	2b104 <fb_schema_table_init@@Base+0x70>
   2b0ac:	mov	r3, #4
   2b0b0:	movw	r0, #358	; 0x166
   2b0b4:	mul	r2, r0, r3
   2b0b8:	lsl	r5, r3, #1
   2b0bc:	cmp	r1, r2, lsr #8
   2b0c0:	mov	r3, r5
   2b0c4:	bhi	2b0b4 <fb_schema_table_init@@Base+0x20>
   2b0c8:	mov	r1, #4
   2b0cc:	mov	r0, r5
   2b0d0:	bl	13f7c <calloc@plt>
   2b0d4:	cmp	r0, #0
   2b0d8:	str	r0, [r4]
   2b0dc:	beq	2b10c <fb_schema_table_init@@Base+0x78>
   2b0e0:	mov	r3, #0
   2b0e4:	mov	r0, r3
   2b0e8:	str	r3, [r4, #4]
   2b0ec:	str	r3, [r4, #8]
   2b0f0:	str	r5, [r4, #12]
   2b0f4:	ldrd	r4, [sp]
   2b0f8:	ldr	r6, [sp, #8]
   2b0fc:	add	sp, sp, #12
   2b100:	pop	{pc}		; (ldr pc, [sp], #4)
   2b104:	mov	r5, #4
   2b108:	b	2b0c8 <fb_schema_table_init@@Base+0x34>
   2b10c:	mvn	r0, #0
   2b110:	b	2b0f4 <fb_schema_table_init@@Base+0x60>

0002b114 <fb_schema_table_resize@@Base>:
   2b114:	b	2ad8c <fb_scope_table_visit@@Base+0x84>

0002b118 <fb_schema_table_insert@@Base>:
   2b118:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b11c:	strd	r6, [sp, #8]
   2b120:	strd	r8, [sp, #16]
   2b124:	strd	sl, [sp, #24]
   2b128:	subs	fp, r3, #0
   2b12c:	str	lr, [sp, #32]
   2b130:	sub	sp, sp, #28
   2b134:	str	r1, [sp, #8]
   2b138:	beq	2b304 <fb_schema_table_insert@@Base+0x1ec>
   2b13c:	cmp	fp, #2
   2b140:	beq	2b2e4 <fb_schema_table_insert@@Base+0x1cc>
   2b144:	cmp	fp, #1
   2b148:	beq	2b324 <fb_schema_table_insert@@Base+0x20c>
   2b14c:	mov	r3, #179	; 0xb3
   2b150:	ldr	r1, [r0, #8]
   2b154:	mov	sl, r2
   2b158:	mov	r9, r0
   2b15c:	ldr	r7, [r0, #12]
   2b160:	mul	r3, r3, r7
   2b164:	cmp	r1, r3, lsr #8
   2b168:	bcs	2b25c <fb_schema_table_insert@@Base+0x144>
   2b16c:	add	ip, sp, #16
   2b170:	movw	r1, #15186	; 0x3b52
   2b174:	movt	r1, #12137	; 0x2f69
   2b178:	mov	r3, #0
   2b17c:	ldr	r8, [r9]
   2b180:	mov	r2, sl
   2b184:	sub	r7, r7, #1
   2b188:	stm	sp, {r1, ip}
   2b18c:	ldr	r0, [sp, #8]
   2b190:	bl	3c8e4 <cmetrohash64_1@@Base>
   2b194:	ldr	r5, [sp, #16]
   2b198:	ldr	r3, [sp, #64]	; 0x40
   2b19c:	sub	r3, r3, #2
   2b1a0:	cmp	r3, #1
   2b1a4:	and	r3, r7, r5
   2b1a8:	add	r4, r8, r3, lsl #2
   2b1ac:	bls	2b29c <fb_schema_table_insert@@Base+0x184>
   2b1b0:	ldr	r6, [r8, r3, lsl #2]
   2b1b4:	cmp	r6, #0
   2b1b8:	moveq	r3, r4
   2b1bc:	beq	2b284 <fb_schema_table_insert@@Base+0x16c>
   2b1c0:	add	r5, r5, #1
   2b1c4:	mov	r3, #0
   2b1c8:	str	r9, [sp, #12]
   2b1cc:	mov	r9, sl
   2b1d0:	mov	sl, r7
   2b1d4:	mov	r7, r5
   2b1d8:	mov	r5, r3
   2b1dc:	b	2b204 <fb_schema_table_insert@@Base+0xec>
   2b1e0:	ldr	r2, [r6, #148]	; 0x94
   2b1e4:	cmp	r9, r2
   2b1e8:	beq	2b218 <fb_schema_table_insert@@Base+0x100>
   2b1ec:	and	r4, sl, r7
   2b1f0:	add	r7, r7, #1
   2b1f4:	ldr	r6, [r8, r4, lsl #2]
   2b1f8:	add	r4, r8, r4, lsl #2
   2b1fc:	cmp	r6, #0
   2b200:	beq	2b274 <fb_schema_table_insert@@Base+0x15c>
   2b204:	cmp	r6, #2
   2b208:	bne	2b1e0 <fb_schema_table_insert@@Base+0xc8>
   2b20c:	cmp	r5, #0
   2b210:	moveq	r5, r4
   2b214:	b	2b1ec <fb_schema_table_insert@@Base+0xd4>
   2b218:	mov	r2, r9
   2b21c:	ldr	r0, [sp, #8]
   2b220:	ldr	r1, [r6, #144]	; 0x90
   2b224:	bl	13fd0 <memcmp@plt>
   2b228:	cmp	r0, #0
   2b22c:	bne	2b1ec <fb_schema_table_insert@@Base+0xd4>
   2b230:	ldr	r3, [sp, #64]	; 0x40
   2b234:	cmp	r3, #0
   2b238:	streq	fp, [r4]
   2b23c:	mov	r0, r6
   2b240:	add	sp, sp, #28
   2b244:	ldrd	r4, [sp]
   2b248:	ldrd	r6, [sp, #8]
   2b24c:	ldrd	r8, [sp, #16]
   2b250:	ldrd	sl, [sp, #24]
   2b254:	add	sp, sp, #32
   2b258:	pop	{pc}		; (ldr pc, [sp], #4)
   2b25c:	lsl	r1, r1, #1
   2b260:	bl	2ad8c <fb_scope_table_visit@@Base+0x84>
   2b264:	cmp	r0, #0
   2b268:	bne	2b344 <fb_schema_table_insert@@Base+0x22c>
   2b26c:	ldr	r7, [r9, #12]
   2b270:	b	2b16c <fb_schema_table_insert@@Base+0x54>
   2b274:	ldr	r9, [sp, #12]
   2b278:	cmp	r5, #0
   2b27c:	mov	r3, r5
   2b280:	moveq	r3, r4
   2b284:	ldr	r2, [r9, #8]
   2b288:	mov	r6, #0
   2b28c:	add	r2, r2, #1
   2b290:	str	r2, [r9, #8]
   2b294:	str	fp, [r3]
   2b298:	b	2b23c <fb_schema_table_insert@@Base+0x124>
   2b29c:	ldr	r2, [r9, #8]
   2b2a0:	ldr	r1, [r8, r3, lsl #2]
   2b2a4:	add	r3, r2, #1
   2b2a8:	cmp	r1, #0
   2b2ac:	cmpne	r1, #2
   2b2b0:	str	r3, [r9, #8]
   2b2b4:	beq	2b2d8 <fb_schema_table_insert@@Base+0x1c0>
   2b2b8:	add	r5, r5, #1
   2b2bc:	and	r4, r7, r5
   2b2c0:	add	r5, r5, #1
   2b2c4:	ldr	r3, [r8, r4, lsl #2]
   2b2c8:	add	r4, r8, r4, lsl #2
   2b2cc:	cmp	r3, #0
   2b2d0:	cmpne	r3, #2
   2b2d4:	bne	2b2bc <fb_schema_table_insert@@Base+0x1a4>
   2b2d8:	mov	r6, #0
   2b2dc:	str	fp, [r4]
   2b2e0:	b	2b23c <fb_schema_table_insert@@Base+0x124>
   2b2e4:	movw	r3, #32720	; 0x7fd0
   2b2e8:	movt	r3, #5
   2b2ec:	movw	r1, #32420	; 0x7ea4
   2b2f0:	movt	r1, #5
   2b2f4:	movw	r0, #32524	; 0x7f0c
   2b2f8:	movt	r0, #5
   2b2fc:	mov	r2, #115	; 0x73
   2b300:	bl	14120 <__assert_fail@plt>
   2b304:	movw	r3, #32720	; 0x7fd0
   2b308:	movt	r3, #5
   2b30c:	movw	r1, #32420	; 0x7ea4
   2b310:	movt	r1, #5
   2b314:	movw	r0, #32500	; 0x7ef4
   2b318:	movt	r0, #5
   2b31c:	mov	r2, #114	; 0x72
   2b320:	bl	14120 <__assert_fail@plt>
   2b324:	movw	r3, #32720	; 0x7fd0
   2b328:	movt	r3, #5
   2b32c:	movw	r1, #32420	; 0x7ea4
   2b330:	movt	r1, #5
   2b334:	movw	r0, #32548	; 0x7f24
   2b338:	movt	r0, #5
   2b33c:	mov	r2, #116	; 0x74
   2b340:	bl	14120 <__assert_fail@plt>
   2b344:	movw	r3, #49320	; 0xc0a8
   2b348:	movt	r3, #6
   2b34c:	movw	r2, #32572	; 0x7f3c
   2b350:	movt	r2, #5
   2b354:	ldr	r0, [r3]
   2b358:	movw	r1, #32624	; 0x7f70
   2b35c:	movt	r1, #5
   2b360:	bl	1406c <fprintf@plt>
   2b364:	mov	r0, #1
   2b368:	bl	14048 <exit@plt>

0002b36c <fb_schema_table_insert_item@@Base>:
   2b36c:	ldr	r3, [r1, #144]	; 0x90
   2b370:	cmp	r1, #2
   2b374:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b378:	strd	r6, [sp, #8]
   2b37c:	strd	r8, [sp, #16]
   2b380:	strd	sl, [sp, #24]
   2b384:	str	lr, [sp, #32]
   2b388:	sub	sp, sp, #36	; 0x24
   2b38c:	ldr	fp, [r1, #148]	; 0x94
   2b390:	str	r3, [sp, #12]
   2b394:	str	r2, [sp, #16]
   2b398:	beq	2b55c <fb_schema_table_insert_item@@Base+0x1f0>
   2b39c:	cmp	r1, #1
   2b3a0:	mov	r9, r1
   2b3a4:	beq	2b53c <fb_schema_table_insert_item@@Base+0x1d0>
   2b3a8:	mov	r3, #179	; 0xb3
   2b3ac:	ldr	r1, [r0, #8]
   2b3b0:	mov	sl, r0
   2b3b4:	ldr	r7, [r0, #12]
   2b3b8:	mul	r3, r3, r7
   2b3bc:	cmp	r1, r3, lsr #8
   2b3c0:	bcs	2b4b4 <fb_schema_table_insert_item@@Base+0x148>
   2b3c4:	add	ip, sp, #24
   2b3c8:	movw	r1, #15186	; 0x3b52
   2b3cc:	movt	r1, #12137	; 0x2f69
   2b3d0:	mov	r3, #0
   2b3d4:	ldr	r8, [sl]
   2b3d8:	mov	r2, fp
   2b3dc:	sub	r7, r7, #1
   2b3e0:	stm	sp, {r1, ip}
   2b3e4:	ldr	r0, [sp, #12]
   2b3e8:	bl	3c8e4 <cmetrohash64_1@@Base>
   2b3ec:	ldr	r3, [sp, #16]
   2b3f0:	ldr	r5, [sp, #24]
   2b3f4:	sub	r3, r3, #2
   2b3f8:	cmp	r3, #1
   2b3fc:	and	r3, r7, r5
   2b400:	add	r4, r8, r3, lsl #2
   2b404:	bls	2b4f4 <fb_schema_table_insert_item@@Base+0x188>
   2b408:	ldr	r6, [r8, r3, lsl #2]
   2b40c:	cmp	r6, #0
   2b410:	moveq	r3, r4
   2b414:	beq	2b4dc <fb_schema_table_insert_item@@Base+0x170>
   2b418:	add	r5, r5, #1
   2b41c:	mov	r3, #0
   2b420:	str	sl, [sp, #20]
   2b424:	mov	sl, r8
   2b428:	mov	r8, r7
   2b42c:	mov	r7, r5
   2b430:	mov	r5, r3
   2b434:	b	2b45c <fb_schema_table_insert_item@@Base+0xf0>
   2b438:	ldr	r2, [r6, #148]	; 0x94
   2b43c:	cmp	fp, r2
   2b440:	beq	2b470 <fb_schema_table_insert_item@@Base+0x104>
   2b444:	and	r4, r8, r7
   2b448:	add	r7, r7, #1
   2b44c:	ldr	r6, [sl, r4, lsl #2]
   2b450:	add	r4, sl, r4, lsl #2
   2b454:	cmp	r6, #0
   2b458:	beq	2b4cc <fb_schema_table_insert_item@@Base+0x160>
   2b45c:	cmp	r6, #2
   2b460:	bne	2b438 <fb_schema_table_insert_item@@Base+0xcc>
   2b464:	cmp	r5, #0
   2b468:	moveq	r5, r4
   2b46c:	b	2b444 <fb_schema_table_insert_item@@Base+0xd8>
   2b470:	mov	r2, fp
   2b474:	ldr	r0, [sp, #12]
   2b478:	ldr	r1, [r6, #144]	; 0x90
   2b47c:	bl	13fd0 <memcmp@plt>
   2b480:	cmp	r0, #0
   2b484:	bne	2b444 <fb_schema_table_insert_item@@Base+0xd8>
   2b488:	ldr	r3, [sp, #16]
   2b48c:	cmp	r3, #0
   2b490:	streq	r9, [r4]
   2b494:	mov	r0, r6
   2b498:	add	sp, sp, #36	; 0x24
   2b49c:	ldrd	r4, [sp]
   2b4a0:	ldrd	r6, [sp, #8]
   2b4a4:	ldrd	r8, [sp, #16]
   2b4a8:	ldrd	sl, [sp, #24]
   2b4ac:	add	sp, sp, #32
   2b4b0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b4b4:	lsl	r1, r1, #1
   2b4b8:	bl	2ad8c <fb_scope_table_visit@@Base+0x84>
   2b4bc:	cmp	r0, #0
   2b4c0:	bne	2b57c <fb_schema_table_insert_item@@Base+0x210>
   2b4c4:	ldr	r7, [sl, #12]
   2b4c8:	b	2b3c4 <fb_schema_table_insert_item@@Base+0x58>
   2b4cc:	ldr	sl, [sp, #20]
   2b4d0:	cmp	r5, #0
   2b4d4:	mov	r3, r5
   2b4d8:	moveq	r3, r4
   2b4dc:	ldr	r2, [sl, #8]
   2b4e0:	mov	r6, #0
   2b4e4:	add	r2, r2, #1
   2b4e8:	str	r2, [sl, #8]
   2b4ec:	str	r9, [r3]
   2b4f0:	b	2b494 <fb_schema_table_insert_item@@Base+0x128>
   2b4f4:	ldr	r2, [sl, #8]
   2b4f8:	ldr	r1, [r8, r3, lsl #2]
   2b4fc:	add	r3, r2, #1
   2b500:	cmp	r1, #0
   2b504:	cmpne	r1, #2
   2b508:	str	r3, [sl, #8]
   2b50c:	beq	2b530 <fb_schema_table_insert_item@@Base+0x1c4>
   2b510:	add	r5, r5, #1
   2b514:	and	r4, r7, r5
   2b518:	add	r5, r5, #1
   2b51c:	ldr	r3, [r8, r4, lsl #2]
   2b520:	add	r4, r8, r4, lsl #2
   2b524:	cmp	r3, #0
   2b528:	cmpne	r3, #2
   2b52c:	bne	2b514 <fb_schema_table_insert_item@@Base+0x1a8>
   2b530:	mov	r6, #0
   2b534:	str	r9, [r4]
   2b538:	b	2b494 <fb_schema_table_insert_item@@Base+0x128>
   2b53c:	movw	r3, #32720	; 0x7fd0
   2b540:	movt	r3, #5
   2b544:	movw	r1, #32420	; 0x7ea4
   2b548:	movt	r1, #5
   2b54c:	movw	r0, #32548	; 0x7f24
   2b550:	movt	r0, #5
   2b554:	mov	r2, #116	; 0x74
   2b558:	bl	14120 <__assert_fail@plt>
   2b55c:	movw	r3, #32720	; 0x7fd0
   2b560:	movt	r3, #5
   2b564:	movw	r1, #32420	; 0x7ea4
   2b568:	movt	r1, #5
   2b56c:	movw	r0, #32524	; 0x7f0c
   2b570:	movt	r0, #5
   2b574:	mov	r2, #115	; 0x73
   2b578:	bl	14120 <__assert_fail@plt>
   2b57c:	movw	r3, #49320	; 0xc0a8
   2b580:	movt	r3, #6
   2b584:	movw	r2, #32572	; 0x7f3c
   2b588:	movt	r2, #5
   2b58c:	ldr	r0, [r3]
   2b590:	movw	r1, #32624	; 0x7f70
   2b594:	movt	r1, #5
   2b598:	bl	1406c <fprintf@plt>
   2b59c:	mov	r0, #1
   2b5a0:	bl	14048 <exit@plt>

0002b5a4 <fb_schema_table_find@@Base>:
   2b5a4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2b5a8:	strd	r6, [sp, #8]
   2b5ac:	strd	r8, [sp, #16]
   2b5b0:	ldr	r8, [r0]
   2b5b4:	str	lr, [sp, #24]
   2b5b8:	sub	sp, sp, #20
   2b5bc:	cmp	r8, #0
   2b5c0:	beq	2b668 <fb_schema_table_find@@Base+0xc4>
   2b5c4:	mov	r7, r1
   2b5c8:	add	ip, sp, #8
   2b5cc:	ldr	r9, [r0, #12]
   2b5d0:	movw	r1, #15186	; 0x3b52
   2b5d4:	movt	r1, #12137	; 0x2f69
   2b5d8:	mov	r3, #0
   2b5dc:	mov	r0, r7
   2b5e0:	stm	sp, {r1, ip}
   2b5e4:	mov	r6, r2
   2b5e8:	bl	3c8e4 <cmetrohash64_1@@Base>
   2b5ec:	ldr	r5, [sp, #8]
   2b5f0:	sub	r9, r9, #1
   2b5f4:	and	r3, r9, r5
   2b5f8:	ldr	r4, [r8, r3, lsl #2]
   2b5fc:	cmp	r4, #0
   2b600:	beq	2b668 <fb_schema_table_find@@Base+0xc4>
   2b604:	add	r5, r5, #1
   2b608:	b	2b620 <fb_schema_table_find@@Base+0x7c>
   2b60c:	and	r3, r9, r5
   2b610:	add	r5, r5, #1
   2b614:	ldr	r4, [r8, r3, lsl #2]
   2b618:	cmp	r4, #0
   2b61c:	beq	2b668 <fb_schema_table_find@@Base+0xc4>
   2b620:	cmp	r4, #2
   2b624:	beq	2b60c <fb_schema_table_find@@Base+0x68>
   2b628:	ldr	r3, [r4, #148]	; 0x94
   2b62c:	cmp	r6, r3
   2b630:	bne	2b60c <fb_schema_table_find@@Base+0x68>
   2b634:	mov	r2, r6
   2b638:	mov	r0, r7
   2b63c:	ldr	r1, [r4, #144]	; 0x90
   2b640:	bl	13fd0 <memcmp@plt>
   2b644:	cmp	r0, #0
   2b648:	bne	2b60c <fb_schema_table_find@@Base+0x68>
   2b64c:	mov	r0, r4
   2b650:	add	sp, sp, #20
   2b654:	ldrd	r4, [sp]
   2b658:	ldrd	r6, [sp, #8]
   2b65c:	ldrd	r8, [sp, #16]
   2b660:	add	sp, sp, #24
   2b664:	pop	{pc}		; (ldr pc, [sp], #4)
   2b668:	mov	r4, #0
   2b66c:	b	2b64c <fb_schema_table_find@@Base+0xa8>

0002b670 <fb_schema_table_find_item@@Base>:
   2b670:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2b674:	strd	r6, [sp, #8]
   2b678:	ldr	r7, [r0]
   2b67c:	strd	r8, [sp, #16]
   2b680:	str	lr, [sp, #24]
   2b684:	sub	sp, sp, #20
   2b688:	ldr	r8, [r1, #144]	; 0x90
   2b68c:	cmp	r7, #0
   2b690:	ldr	r6, [r1, #148]	; 0x94
   2b694:	beq	2b73c <fb_schema_table_find_item@@Base+0xcc>
   2b698:	add	r1, sp, #8
   2b69c:	movw	r3, #15186	; 0x3b52
   2b6a0:	movt	r3, #12137	; 0x2f69
   2b6a4:	mov	r2, r6
   2b6a8:	ldr	r9, [r0, #12]
   2b6ac:	mov	r0, r8
   2b6b0:	str	r3, [sp]
   2b6b4:	mov	r3, #0
   2b6b8:	str	r1, [sp, #4]
   2b6bc:	bl	3c8e4 <cmetrohash64_1@@Base>
   2b6c0:	ldr	r5, [sp, #8]
   2b6c4:	sub	r9, r9, #1
   2b6c8:	and	r3, r9, r5
   2b6cc:	ldr	r4, [r7, r3, lsl #2]
   2b6d0:	cmp	r4, #0
   2b6d4:	beq	2b73c <fb_schema_table_find_item@@Base+0xcc>
   2b6d8:	add	r5, r5, #1
   2b6dc:	b	2b6f4 <fb_schema_table_find_item@@Base+0x84>
   2b6e0:	and	r3, r9, r5
   2b6e4:	add	r5, r5, #1
   2b6e8:	ldr	r4, [r7, r3, lsl #2]
   2b6ec:	cmp	r4, #0
   2b6f0:	beq	2b73c <fb_schema_table_find_item@@Base+0xcc>
   2b6f4:	cmp	r4, #2
   2b6f8:	beq	2b6e0 <fb_schema_table_find_item@@Base+0x70>
   2b6fc:	ldr	r3, [r4, #148]	; 0x94
   2b700:	cmp	r6, r3
   2b704:	bne	2b6e0 <fb_schema_table_find_item@@Base+0x70>
   2b708:	mov	r2, r6
   2b70c:	mov	r0, r8
   2b710:	ldr	r1, [r4, #144]	; 0x90
   2b714:	bl	13fd0 <memcmp@plt>
   2b718:	cmp	r0, #0
   2b71c:	bne	2b6e0 <fb_schema_table_find_item@@Base+0x70>
   2b720:	mov	r0, r4
   2b724:	add	sp, sp, #20
   2b728:	ldrd	r4, [sp]
   2b72c:	ldrd	r6, [sp, #8]
   2b730:	ldrd	r8, [sp, #16]
   2b734:	add	sp, sp, #24
   2b738:	pop	{pc}		; (ldr pc, [sp], #4)
   2b73c:	mov	r4, #0
   2b740:	b	2b720 <fb_schema_table_find_item@@Base+0xb0>

0002b744 <fb_schema_table_remove@@Base>:
   2b744:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b748:	ldr	r4, [r0]
   2b74c:	strd	r6, [sp, #8]
   2b750:	strd	r8, [sp, #16]
   2b754:	strd	sl, [sp, #24]
   2b758:	str	lr, [sp, #32]
   2b75c:	sub	sp, sp, #20
   2b760:	cmp	r4, #0
   2b764:	beq	2b830 <fb_schema_table_remove@@Base+0xec>
   2b768:	mov	r7, r1
   2b76c:	add	ip, sp, #8
   2b770:	movw	r1, #15186	; 0x3b52
   2b774:	movt	r1, #12137	; 0x2f69
   2b778:	mov	r5, r0
   2b77c:	mov	r3, #0
   2b780:	mov	r0, r7
   2b784:	ldr	r8, [r5, #12]
   2b788:	mov	r6, r2
   2b78c:	stm	sp, {r1, ip}
   2b790:	bl	3c8e4 <cmetrohash64_1@@Base>
   2b794:	ldr	sl, [sp, #8]
   2b798:	sub	r8, r8, #1
   2b79c:	and	r3, r8, sl
   2b7a0:	ldr	r9, [r4, r3, lsl #2]
   2b7a4:	add	fp, r4, r3, lsl #2
   2b7a8:	cmp	r9, #0
   2b7ac:	beq	2b830 <fb_schema_table_remove@@Base+0xec>
   2b7b0:	add	sl, sl, #1
   2b7b4:	b	2b7d0 <fb_schema_table_remove@@Base+0x8c>
   2b7b8:	and	r3, r8, sl
   2b7bc:	add	sl, sl, #1
   2b7c0:	ldr	r9, [r4, r3, lsl #2]
   2b7c4:	add	fp, r4, r3, lsl #2
   2b7c8:	cmp	r9, #0
   2b7cc:	beq	2b830 <fb_schema_table_remove@@Base+0xec>
   2b7d0:	cmp	r9, #2
   2b7d4:	beq	2b7b8 <fb_schema_table_remove@@Base+0x74>
   2b7d8:	ldr	r3, [r9, #148]	; 0x94
   2b7dc:	cmp	r6, r3
   2b7e0:	bne	2b7b8 <fb_schema_table_remove@@Base+0x74>
   2b7e4:	mov	r2, r6
   2b7e8:	mov	r0, r7
   2b7ec:	ldr	r1, [r9, #144]	; 0x90
   2b7f0:	bl	13fd0 <memcmp@plt>
   2b7f4:	cmp	r0, #0
   2b7f8:	bne	2b7b8 <fb_schema_table_remove@@Base+0x74>
   2b7fc:	ldr	r3, [r5, #8]
   2b800:	mov	r2, #2
   2b804:	str	r2, [fp]
   2b808:	sub	r3, r3, #1
   2b80c:	str	r3, [r5, #8]
   2b810:	mov	r0, r9
   2b814:	add	sp, sp, #20
   2b818:	ldrd	r4, [sp]
   2b81c:	ldrd	r6, [sp, #8]
   2b820:	ldrd	r8, [sp, #16]
   2b824:	ldrd	sl, [sp, #24]
   2b828:	add	sp, sp, #32
   2b82c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b830:	mov	r9, #0
   2b834:	b	2b810 <fb_schema_table_remove@@Base+0xcc>

0002b838 <fb_schema_table_remove_item@@Base>:
   2b838:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b83c:	ldr	r4, [r0]
   2b840:	strd	r6, [sp, #8]
   2b844:	strd	r8, [sp, #16]
   2b848:	strd	sl, [sp, #24]
   2b84c:	str	lr, [sp, #32]
   2b850:	sub	sp, sp, #20
   2b854:	cmp	r4, #0
   2b858:	ldrd	r6, [r1, #144]	; 0x90
   2b85c:	beq	2b928 <fb_schema_table_remove_item@@Base+0xf0>
   2b860:	add	r1, sp, #8
   2b864:	movw	r3, #15186	; 0x3b52
   2b868:	movt	r3, #12137	; 0x2f69
   2b86c:	mov	r5, r0
   2b870:	mov	r2, r7
   2b874:	mov	r0, r6
   2b878:	ldr	r8, [r5, #12]
   2b87c:	str	r3, [sp]
   2b880:	mov	r3, #0
   2b884:	str	r1, [sp, #4]
   2b888:	bl	3c8e4 <cmetrohash64_1@@Base>
   2b88c:	ldr	sl, [sp, #8]
   2b890:	sub	r8, r8, #1
   2b894:	and	r3, r8, sl
   2b898:	ldr	r9, [r4, r3, lsl #2]
   2b89c:	add	fp, r4, r3, lsl #2
   2b8a0:	cmp	r9, #0
   2b8a4:	beq	2b928 <fb_schema_table_remove_item@@Base+0xf0>
   2b8a8:	add	sl, sl, #1
   2b8ac:	b	2b8c8 <fb_schema_table_remove_item@@Base+0x90>
   2b8b0:	and	r3, r8, sl
   2b8b4:	add	sl, sl, #1
   2b8b8:	ldr	r9, [r4, r3, lsl #2]
   2b8bc:	add	fp, r4, r3, lsl #2
   2b8c0:	cmp	r9, #0
   2b8c4:	beq	2b928 <fb_schema_table_remove_item@@Base+0xf0>
   2b8c8:	cmp	r9, #2
   2b8cc:	beq	2b8b0 <fb_schema_table_remove_item@@Base+0x78>
   2b8d0:	ldr	r3, [r9, #148]	; 0x94
   2b8d4:	cmp	r7, r3
   2b8d8:	bne	2b8b0 <fb_schema_table_remove_item@@Base+0x78>
   2b8dc:	mov	r2, r7
   2b8e0:	mov	r0, r6
   2b8e4:	ldr	r1, [r9, #144]	; 0x90
   2b8e8:	bl	13fd0 <memcmp@plt>
   2b8ec:	cmp	r0, #0
   2b8f0:	bne	2b8b0 <fb_schema_table_remove_item@@Base+0x78>
   2b8f4:	ldr	r3, [r5, #8]
   2b8f8:	mov	r2, #2
   2b8fc:	str	r2, [fp]
   2b900:	sub	r3, r3, #1
   2b904:	str	r3, [r5, #8]
   2b908:	mov	r0, r9
   2b90c:	add	sp, sp, #20
   2b910:	ldrd	r4, [sp]
   2b914:	ldrd	r6, [sp, #8]
   2b918:	ldrd	r8, [sp, #16]
   2b91c:	ldrd	sl, [sp, #24]
   2b920:	add	sp, sp, #32
   2b924:	pop	{pc}		; (ldr pc, [sp], #4)
   2b928:	mov	r9, #0
   2b92c:	b	2b908 <fb_schema_table_remove_item@@Base+0xd0>

0002b930 <fb_schema_table_visit@@Base>:
   2b930:	ldr	ip, [r0, #12]
   2b934:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b938:	ldr	r5, [r0]
   2b93c:	strd	r6, [sp, #8]
   2b940:	str	r8, [sp, #16]
   2b944:	cmp	ip, #0
   2b948:	str	lr, [sp, #20]
   2b94c:	beq	2b990 <fb_schema_table_visit@@Base+0x60>
   2b950:	mov	r6, r2
   2b954:	mov	r8, r1
   2b958:	mov	r7, r0
   2b95c:	sub	r5, r5, #4
   2b960:	mov	r4, #0
   2b964:	ldr	r3, [r5, #4]!
   2b968:	mov	r0, r6
   2b96c:	cmp	r3, #0
   2b970:	cmpne	r3, #2
   2b974:	mov	r1, r3
   2b978:	beq	2b9a4 <fb_schema_table_visit@@Base+0x74>
   2b97c:	blx	r8
   2b980:	ldr	ip, [r7, #12]
   2b984:	add	r4, r4, #1
   2b988:	cmp	r4, ip
   2b98c:	bcc	2b964 <fb_schema_table_visit@@Base+0x34>
   2b990:	ldrd	r4, [sp]
   2b994:	ldrd	r6, [sp, #8]
   2b998:	ldr	r8, [sp, #16]
   2b99c:	add	sp, sp, #20
   2b9a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b9a4:	add	r4, r4, #1
   2b9a8:	cmp	r4, ip
   2b9ac:	bcc	2b964 <fb_schema_table_visit@@Base+0x34>
   2b9b0:	b	2b990 <fb_schema_table_visit@@Base+0x60>

0002b9b4 <__flatcc_fb_copy_path_n@@Base>:
   2b9b4:	strd	r4, [sp, #-16]!
   2b9b8:	mov	r4, r1
   2b9bc:	mov	r1, #0
   2b9c0:	mov	r2, r4
   2b9c4:	str	r6, [sp, #8]
   2b9c8:	mov	r6, r0
   2b9cc:	str	lr, [sp, #12]
   2b9d0:	bl	140a8 <memchr@plt>
   2b9d4:	cmp	r0, #0
   2b9d8:	subne	r4, r0, r6
   2b9dc:	add	r0, r4, #1
   2b9e0:	bl	14018 <malloc@plt>
   2b9e4:	subs	r5, r0, #0
   2b9e8:	beq	2ba00 <__flatcc_fb_copy_path_n@@Base+0x4c>
   2b9ec:	mov	r1, r6
   2b9f0:	mov	r2, r4
   2b9f4:	bl	13fb8 <memcpy@plt>
   2b9f8:	mov	r3, #0
   2b9fc:	strb	r3, [r5, r4]
   2ba00:	mov	r0, r5
   2ba04:	ldrd	r4, [sp]
   2ba08:	ldr	r6, [sp, #8]
   2ba0c:	add	sp, sp, #12
   2ba10:	pop	{pc}		; (ldr pc, [sp], #4)

0002ba14 <__flatcc_fb_copy_path@@Base>:
   2ba14:	strd	r4, [sp, #-16]!
   2ba18:	str	r6, [sp, #8]
   2ba1c:	mov	r6, r0
   2ba20:	str	lr, [sp, #12]
   2ba24:	bl	14054 <strlen@plt>
   2ba28:	mov	r4, r0
   2ba2c:	add	r0, r0, #1
   2ba30:	bl	14018 <malloc@plt>
   2ba34:	subs	r5, r0, #0
   2ba38:	beq	2ba50 <__flatcc_fb_copy_path@@Base+0x3c>
   2ba3c:	mov	r1, r6
   2ba40:	mov	r2, r4
   2ba44:	bl	13fb8 <memcpy@plt>
   2ba48:	mov	r3, #0
   2ba4c:	strb	r3, [r5, r4]
   2ba50:	mov	r0, r5
   2ba54:	ldrd	r4, [sp]
   2ba58:	ldr	r6, [sp, #8]
   2ba5c:	add	sp, sp, #12
   2ba60:	pop	{pc}		; (ldr pc, [sp], #4)

0002ba64 <__flatcc_fb_chomp@@Base>:
   2ba64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ba68:	subs	r5, r2, #0
   2ba6c:	mov	r4, r1
   2ba70:	strd	r6, [sp, #8]
   2ba74:	str	r8, [sp, #16]
   2ba78:	str	lr, [sp, #20]
   2ba7c:	beq	2bab0 <__flatcc_fb_chomp@@Base+0x4c>
   2ba80:	mov	r6, r0
   2ba84:	mov	r0, r5
   2ba88:	bl	14054 <strlen@plt>
   2ba8c:	cmp	r0, r4
   2ba90:	mov	r2, r0
   2ba94:	bcs	2bab0 <__flatcc_fb_chomp@@Base+0x4c>
   2ba98:	sub	r7, r4, r0
   2ba9c:	mov	r1, r5
   2baa0:	add	r0, r6, r7
   2baa4:	bl	14108 <strncmp@plt>
   2baa8:	cmp	r0, #0
   2baac:	moveq	r4, r7
   2bab0:	mov	r0, r4
   2bab4:	ldrd	r4, [sp]
   2bab8:	ldrd	r6, [sp, #8]
   2babc:	ldr	r8, [sp, #16]
   2bac0:	add	sp, sp, #20
   2bac4:	pop	{pc}		; (ldr pc, [sp], #4)

0002bac8 <__flatcc_fb_create_join_path_n@@Base>:
   2bac8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2bacc:	mov	r4, r1
   2bad0:	strd	r6, [sp, #8]
   2bad4:	mov	r7, r3
   2bad8:	strd	r8, [sp, #16]
   2badc:	mov	r9, r0
   2bae0:	ldr	r8, [sp, #32]
   2bae4:	str	sl, [sp, #24]
   2bae8:	mov	sl, r2
   2baec:	str	lr, [sp, #28]
   2baf0:	cmp	r8, #0
   2baf4:	moveq	r6, r8
   2baf8:	beq	2bb08 <__flatcc_fb_create_join_path_n@@Base+0x40>
   2bafc:	mov	r0, r8
   2bb00:	bl	14054 <strlen@plt>
   2bb04:	mov	r6, r0
   2bb08:	cmp	r9, #0
   2bb0c:	beq	2bb94 <__flatcc_fb_create_join_path_n@@Base+0xcc>
   2bb10:	cmp	r7, #0
   2bb14:	bne	2bb7c <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2bb18:	ldr	r3, [sp, #36]	; 0x24
   2bb1c:	cmp	r3, #0
   2bb20:	beq	2bb98 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2bb24:	cmp	r4, #0
   2bb28:	beq	2bb98 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2bb2c:	add	r3, r9, r4
   2bb30:	ldrb	r3, [r3, #-1]
   2bb34:	cmp	r3, #92	; 0x5c
   2bb38:	cmpne	r3, #47	; 0x2f
   2bb3c:	beq	2bb98 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2bb40:	ldr	r3, [sp, #36]	; 0x24
   2bb44:	add	r0, r3, r4
   2bb48:	add	r0, r0, #1
   2bb4c:	add	r0, r0, r7
   2bb50:	add	r0, r0, r6
   2bb54:	bl	14018 <malloc@plt>
   2bb58:	subs	r5, r0, #0
   2bb5c:	beq	2bbb0 <__flatcc_fb_create_join_path_n@@Base+0xe8>
   2bb60:	mov	r2, r4
   2bb64:	mov	r1, r9
   2bb68:	bl	13fb8 <memcpy@plt>
   2bb6c:	mov	r3, #47	; 0x2f
   2bb70:	strb	r3, [r5, r4]
   2bb74:	add	r4, r4, #1
   2bb78:	b	2bbf8 <__flatcc_fb_create_join_path_n@@Base+0x130>
   2bb7c:	ldrb	r3, [sl]
   2bb80:	cmp	r3, #92	; 0x5c
   2bb84:	cmpne	r3, #47	; 0x2f
   2bb88:	moveq	r3, #1
   2bb8c:	movne	r3, #0
   2bb90:	bne	2bbd0 <__flatcc_fb_create_join_path_n@@Base+0x108>
   2bb94:	mov	r4, #0
   2bb98:	add	r0, r7, #1
   2bb9c:	add	r0, r0, r6
   2bba0:	add	r0, r0, r4
   2bba4:	bl	14018 <malloc@plt>
   2bba8:	subs	r5, r0, #0
   2bbac:	bne	2bbec <__flatcc_fb_create_join_path_n@@Base+0x124>
   2bbb0:	mov	r5, #0
   2bbb4:	mov	r0, r5
   2bbb8:	ldrd	r4, [sp]
   2bbbc:	ldrd	r6, [sp, #8]
   2bbc0:	ldrd	r8, [sp, #16]
   2bbc4:	ldr	sl, [sp, #24]
   2bbc8:	add	sp, sp, #28
   2bbcc:	pop	{pc}		; (ldr pc, [sp], #4)
   2bbd0:	cmp	r7, #1
   2bbd4:	bls	2bb18 <__flatcc_fb_create_join_path_n@@Base+0x50>
   2bbd8:	ldrb	r2, [sl, #1]
   2bbdc:	cmp	r2, #58	; 0x3a
   2bbe0:	bne	2bb18 <__flatcc_fb_create_join_path_n@@Base+0x50>
   2bbe4:	mov	r4, r3
   2bbe8:	b	2bb98 <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2bbec:	mov	r1, r9
   2bbf0:	mov	r2, r4
   2bbf4:	bl	13fb8 <memcpy@plt>
   2bbf8:	mov	r2, r7
   2bbfc:	mov	r1, sl
   2bc00:	add	r7, r4, r7
   2bc04:	add	r0, r5, r4
   2bc08:	bl	13fb8 <memcpy@plt>
   2bc0c:	mov	r2, r6
   2bc10:	mov	r1, r8
   2bc14:	add	r0, r5, r7
   2bc18:	add	r6, r5, r6
   2bc1c:	bl	13fb8 <memcpy@plt>
   2bc20:	mov	r3, #0
   2bc24:	strb	r3, [r6, r7]
   2bc28:	b	2bbb4 <__flatcc_fb_create_join_path_n@@Base+0xec>

0002bc2c <__flatcc_fb_create_join_path@@Base>:
   2bc2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2bc30:	subs	r5, r0, #0
   2bc34:	mov	r4, r1
   2bc38:	strd	r6, [sp, #8]
   2bc3c:	mov	r6, r3
   2bc40:	moveq	r7, r5
   2bc44:	str	r8, [sp, #16]
   2bc48:	mov	r8, r2
   2bc4c:	str	lr, [sp, #20]
   2bc50:	sub	sp, sp, #8
   2bc54:	beq	2bc60 <__flatcc_fb_create_join_path@@Base+0x34>
   2bc58:	bl	14054 <strlen@plt>
   2bc5c:	mov	r7, r0
   2bc60:	cmp	r4, #0
   2bc64:	moveq	r3, r4
   2bc68:	beq	2bc78 <__flatcc_fb_create_join_path@@Base+0x4c>
   2bc6c:	mov	r0, r4
   2bc70:	bl	14054 <strlen@plt>
   2bc74:	mov	r3, r0
   2bc78:	mov	r2, r4
   2bc7c:	mov	r1, r7
   2bc80:	str	r8, [sp]
   2bc84:	mov	r0, r5
   2bc88:	str	r6, [sp, #4]
   2bc8c:	bl	2bac8 <__flatcc_fb_create_join_path_n@@Base>
   2bc90:	add	sp, sp, #8
   2bc94:	ldrd	r4, [sp]
   2bc98:	ldrd	r6, [sp, #8]
   2bc9c:	ldr	r8, [sp, #16]
   2bca0:	add	sp, sp, #20
   2bca4:	pop	{pc}		; (ldr pc, [sp], #4)

0002bca8 <__flatcc_fb_create_path_ext_n@@Base>:
   2bca8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2bcac:	mov	r5, r1
   2bcb0:	strd	r6, [sp, #8]
   2bcb4:	subs	r7, r2, #0
   2bcb8:	strd	r8, [sp, #16]
   2bcbc:	mov	r9, r0
   2bcc0:	str	sl, [sp, #24]
   2bcc4:	str	lr, [sp, #28]
   2bcc8:	beq	2bd2c <__flatcc_fb_create_path_ext_n@@Base+0x84>
   2bccc:	mov	r0, r7
   2bcd0:	bl	14054 <strlen@plt>
   2bcd4:	mov	r8, r0
   2bcd8:	add	r6, r5, r0
   2bcdc:	add	r0, r6, #1
   2bce0:	bl	14018 <malloc@plt>
   2bce4:	subs	r4, r0, #0
   2bce8:	beq	2bd10 <__flatcc_fb_create_path_ext_n@@Base+0x68>
   2bcec:	mov	r1, r9
   2bcf0:	mov	r2, r5
   2bcf4:	bl	13fb8 <memcpy@plt>
   2bcf8:	mov	r2, r8
   2bcfc:	mov	r1, r7
   2bd00:	add	r0, r4, r5
   2bd04:	bl	13fb8 <memcpy@plt>
   2bd08:	mov	r3, #0
   2bd0c:	strb	r3, [r4, r6]
   2bd10:	mov	r0, r4
   2bd14:	ldrd	r4, [sp]
   2bd18:	ldrd	r6, [sp, #8]
   2bd1c:	ldrd	r8, [sp, #16]
   2bd20:	ldr	sl, [sp, #24]
   2bd24:	add	sp, sp, #28
   2bd28:	pop	{pc}		; (ldr pc, [sp], #4)
   2bd2c:	mov	r6, r1
   2bd30:	mov	r8, r7
   2bd34:	b	2bcdc <__flatcc_fb_create_path_ext_n@@Base+0x34>

0002bd38 <__flatcc_fb_create_path_ext@@Base>:
   2bd38:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2bd3c:	mov	r4, r1
   2bd40:	strd	r6, [sp, #8]
   2bd44:	strd	r8, [sp, #16]
   2bd48:	subs	r9, r0, #0
   2bd4c:	moveq	r6, r9
   2bd50:	str	sl, [sp, #24]
   2bd54:	str	lr, [sp, #28]
   2bd58:	beq	2bd64 <__flatcc_fb_create_path_ext@@Base+0x2c>
   2bd5c:	bl	14054 <strlen@plt>
   2bd60:	mov	r6, r0
   2bd64:	cmp	r4, #0
   2bd68:	beq	2bdcc <__flatcc_fb_create_path_ext@@Base+0x94>
   2bd6c:	mov	r0, r4
   2bd70:	bl	14054 <strlen@plt>
   2bd74:	mov	r8, r0
   2bd78:	add	r7, r6, r0
   2bd7c:	add	r0, r7, #1
   2bd80:	bl	14018 <malloc@plt>
   2bd84:	subs	r5, r0, #0
   2bd88:	beq	2bdb0 <__flatcc_fb_create_path_ext@@Base+0x78>
   2bd8c:	mov	r1, r9
   2bd90:	mov	r2, r6
   2bd94:	bl	13fb8 <memcpy@plt>
   2bd98:	mov	r2, r8
   2bd9c:	mov	r1, r4
   2bda0:	add	r0, r5, r6
   2bda4:	bl	13fb8 <memcpy@plt>
   2bda8:	mov	r3, #0
   2bdac:	strb	r3, [r5, r7]
   2bdb0:	mov	r0, r5
   2bdb4:	ldrd	r4, [sp]
   2bdb8:	ldrd	r6, [sp, #8]
   2bdbc:	ldrd	r8, [sp, #16]
   2bdc0:	ldr	sl, [sp, #24]
   2bdc4:	add	sp, sp, #28
   2bdc8:	pop	{pc}		; (ldr pc, [sp], #4)
   2bdcc:	mov	r7, r6
   2bdd0:	mov	r8, r4
   2bdd4:	b	2bd7c <__flatcc_fb_create_path_ext@@Base+0x44>

0002bdd8 <__flatcc_fb_create_make_path_n@@Base>:
   2bdd8:	cmp	r1, #1
   2bddc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2bde0:	mov	r5, r0
   2bde4:	strd	r6, [sp, #8]
   2bde8:	mov	r6, r1
   2bdec:	str	r8, [sp, #16]
   2bdf0:	str	lr, [sp, #20]
   2bdf4:	beq	2bf50 <__flatcc_fb_create_make_path_n@@Base+0x178>
   2bdf8:	bls	2bf60 <__flatcc_fb_create_make_path_n@@Base+0x188>
   2bdfc:	ldrb	r4, [r0]
   2be00:	sub	r8, r0, #1
   2be04:	mov	r2, r0
   2be08:	add	r8, r8, r1
   2be0c:	mov	r3, r4
   2be10:	cmp	r3, #92	; 0x5c
   2be14:	ldrb	r0, [r2, #1]!
   2be18:	bne	2be24 <__flatcc_fb_create_make_path_n@@Base+0x4c>
   2be1c:	cmp	r0, #32
   2be20:	addeq	r6, r6, #1
   2be24:	cmp	r3, #32
   2be28:	addeq	r6, r6, #1
   2be2c:	cmp	r2, r8
   2be30:	mov	r3, r0
   2be34:	bne	2be10 <__flatcc_fb_create_make_path_n@@Base+0x38>
   2be38:	add	r6, r6, #1
   2be3c:	cmp	r0, #32
   2be40:	movne	r0, r6
   2be44:	addeq	r0, r6, #1
   2be48:	bl	14018 <malloc@plt>
   2be4c:	subs	r7, r0, #0
   2be50:	beq	2bef8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2be54:	mov	r3, #0
   2be58:	mov	r6, #92	; 0x5c
   2be5c:	b	2be94 <__flatcc_fb_create_make_path_n@@Base+0xbc>
   2be60:	cmp	r4, #32
   2be64:	add	r3, r3, #2
   2be68:	bne	2be80 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2be6c:	mov	lr, r2
   2be70:	mov	r2, r3
   2be74:	strb	r6, [r1]
   2be78:	mov	r1, ip
   2be7c:	add	ip, r7, r3
   2be80:	cmp	r8, r5
   2be84:	mov	r3, r2
   2be88:	strb	r4, [r1]
   2be8c:	mov	r4, r0
   2be90:	beq	2bf10 <__flatcc_fb_create_make_path_n@@Base+0x138>
   2be94:	add	r2, r3, #1
   2be98:	cmp	r4, #92	; 0x5c
   2be9c:	ldrb	r0, [r5, #1]!
   2bea0:	add	ip, r7, r2
   2bea4:	add	r1, r7, r3
   2bea8:	mov	lr, r3
   2beac:	bne	2be60 <__flatcc_fb_create_make_path_n@@Base+0x88>
   2beb0:	cmp	r0, #32
   2beb4:	bne	2be80 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2beb8:	add	r3, r3, #2
   2bebc:	mov	lr, r2
   2bec0:	strb	r4, [r1]
   2bec4:	mov	r2, r3
   2bec8:	mov	r1, ip
   2becc:	add	ip, r7, r3
   2bed0:	b	2be80 <__flatcc_fb_create_make_path_n@@Base+0xa8>
   2bed4:	mov	r0, #3
   2bed8:	bl	14018 <malloc@plt>
   2bedc:	subs	r7, r0, #0
   2bee0:	beq	2bef8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2bee4:	mov	r2, #92	; 0x5c
   2bee8:	mov	r3, #0
   2beec:	strb	r2, [r7]
   2bef0:	strb	r4, [r7, #1]
   2bef4:	strb	r3, [r7, #2]
   2bef8:	mov	r0, r7
   2befc:	ldrd	r4, [sp]
   2bf00:	ldrd	r6, [sp, #8]
   2bf04:	ldr	r8, [sp, #16]
   2bf08:	add	sp, sp, #20
   2bf0c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf10:	cmp	r0, #32
   2bf14:	addne	r2, r7, r2
   2bf18:	beq	2bf2c <__flatcc_fb_create_make_path_n@@Base+0x154>
   2bf1c:	mov	r3, #0
   2bf20:	strb	r0, [ip]
   2bf24:	strb	r3, [r2, #1]
   2bf28:	b	2bef8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2bf2c:	mov	r3, #92	; 0x5c
   2bf30:	add	r2, lr, #2
   2bf34:	strb	r3, [ip]
   2bf38:	add	ip, r7, r2
   2bf3c:	mov	r3, #0
   2bf40:	mov	r2, ip
   2bf44:	strb	r0, [ip]
   2bf48:	strb	r3, [r2, #1]
   2bf4c:	b	2bef8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2bf50:	ldrb	r4, [r0]
   2bf54:	cmp	r4, #92	; 0x5c
   2bf58:	cmpne	r4, #32
   2bf5c:	beq	2bed4 <__flatcc_fb_create_make_path_n@@Base+0xfc>
   2bf60:	mov	r2, r6
   2bf64:	mov	r1, #0
   2bf68:	mov	r0, r5
   2bf6c:	bl	140a8 <memchr@plt>
   2bf70:	cmp	r0, #0
   2bf74:	subne	r6, r0, r5
   2bf78:	add	r0, r6, #1
   2bf7c:	bl	14018 <malloc@plt>
   2bf80:	subs	r7, r0, #0
   2bf84:	beq	2bef8 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2bf88:	mov	r1, r5
   2bf8c:	mov	r2, r6
   2bf90:	bl	13fb8 <memcpy@plt>
   2bf94:	mov	r3, #0
   2bf98:	strb	r3, [r7, r6]
   2bf9c:	b	2bef8 <__flatcc_fb_create_make_path_n@@Base+0x120>

0002bfa0 <__flatcc_fb_create_make_path@@Base>:
   2bfa0:	str	r4, [sp, #-8]!
   2bfa4:	mov	r4, r0
   2bfa8:	str	lr, [sp, #4]
   2bfac:	bl	14054 <strlen@plt>
   2bfb0:	mov	r1, r0
   2bfb4:	mov	r0, r4
   2bfb8:	ldr	r4, [sp]
   2bfbc:	ldr	lr, [sp, #4]
   2bfc0:	add	sp, sp, #8
   2bfc4:	b	2bdd8 <__flatcc_fb_create_make_path_n@@Base>

0002bfc8 <__flatcc_fb_find_basename@@Base>:
   2bfc8:	add	r1, r0, r1
   2bfcc:	cmp	r0, r1
   2bfd0:	beq	2c028 <__flatcc_fb_find_basename@@Base+0x60>
   2bfd4:	ldrb	r3, [r1, #-1]
   2bfd8:	sub	r2, r1, #1
   2bfdc:	cmp	r3, #47	; 0x2f
   2bfe0:	cmpne	r3, #92	; 0x5c
   2bfe4:	beq	2c02c <__flatcc_fb_find_basename@@Base+0x64>
   2bfe8:	cmp	r0, r2
   2bfec:	beq	2c028 <__flatcc_fb_find_basename@@Base+0x60>
   2bff0:	ldrb	r3, [r1, #-2]
   2bff4:	sub	r1, r1, #2
   2bff8:	cmp	r3, #47	; 0x2f
   2bffc:	cmpne	r3, #92	; 0x5c
   2c000:	bne	2c01c <__flatcc_fb_find_basename@@Base+0x54>
   2c004:	b	2c034 <__flatcc_fb_find_basename@@Base+0x6c>
   2c008:	ldrb	r3, [r1, #-1]
   2c00c:	cmp	r3, #92	; 0x5c
   2c010:	cmpne	r3, #47	; 0x2f
   2c014:	beq	2c02c <__flatcc_fb_find_basename@@Base+0x64>
   2c018:	mov	r1, r2
   2c01c:	cmp	r0, r1
   2c020:	sub	r2, r1, #1
   2c024:	bne	2c008 <__flatcc_fb_find_basename@@Base+0x40>
   2c028:	mov	r1, r0
   2c02c:	sub	r0, r1, r0
   2c030:	bx	lr
   2c034:	mov	r1, r2
   2c038:	b	2c02c <__flatcc_fb_find_basename@@Base+0x64>

0002c03c <__flatcc_fb_create_basename@@Base>:
   2c03c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c040:	add	r4, r0, r1
   2c044:	cmp	r0, r4
   2c048:	strd	r6, [sp, #8]
   2c04c:	mov	r6, r2
   2c050:	str	r8, [sp, #16]
   2c054:	str	lr, [sp, #20]
   2c058:	beq	2c0b0 <__flatcc_fb_create_basename@@Base+0x74>
   2c05c:	ldrb	r3, [r4, #-1]
   2c060:	sub	r2, r4, #1
   2c064:	cmp	r3, #47	; 0x2f
   2c068:	cmpne	r3, #92	; 0x5c
   2c06c:	beq	2c0b4 <__flatcc_fb_create_basename@@Base+0x78>
   2c070:	cmp	r0, r2
   2c074:	beq	2c0b0 <__flatcc_fb_create_basename@@Base+0x74>
   2c078:	ldrb	r3, [r4, #-2]
   2c07c:	sub	r4, r4, #2
   2c080:	cmp	r3, #47	; 0x2f
   2c084:	cmpne	r3, #92	; 0x5c
   2c088:	bne	2c0a4 <__flatcc_fb_create_basename@@Base+0x68>
   2c08c:	b	2c130 <__flatcc_fb_create_basename@@Base+0xf4>
   2c090:	ldrb	r3, [r4, #-1]
   2c094:	cmp	r3, #92	; 0x5c
   2c098:	cmpne	r3, #47	; 0x2f
   2c09c:	beq	2c0b4 <__flatcc_fb_create_basename@@Base+0x78>
   2c0a0:	mov	r4, ip
   2c0a4:	cmp	r0, r4
   2c0a8:	sub	ip, r4, #1
   2c0ac:	bne	2c090 <__flatcc_fb_create_basename@@Base+0x54>
   2c0b0:	mov	r4, r0
   2c0b4:	sub	r0, r4, r0
   2c0b8:	cmp	r6, #0
   2c0bc:	sub	r5, r1, r0
   2c0c0:	beq	2c0d4 <__flatcc_fb_create_basename@@Base+0x98>
   2c0c4:	mov	r0, r6
   2c0c8:	bl	14054 <strlen@plt>
   2c0cc:	cmp	r5, r0
   2c0d0:	bhi	2c110 <__flatcc_fb_create_basename@@Base+0xd4>
   2c0d4:	add	r0, r5, #1
   2c0d8:	bl	14018 <malloc@plt>
   2c0dc:	subs	r6, r0, #0
   2c0e0:	beq	2c0f8 <__flatcc_fb_create_basename@@Base+0xbc>
   2c0e4:	mov	r1, r4
   2c0e8:	mov	r2, r5
   2c0ec:	bl	13fb8 <memcpy@plt>
   2c0f0:	mov	r3, #0
   2c0f4:	strb	r3, [r6, r5]
   2c0f8:	mov	r0, r6
   2c0fc:	ldrd	r4, [sp]
   2c100:	ldrd	r6, [sp, #8]
   2c104:	ldr	r8, [sp, #16]
   2c108:	add	sp, sp, #20
   2c10c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c110:	sub	r7, r5, r0
   2c114:	mov	r2, r0
   2c118:	mov	r1, r6
   2c11c:	add	r0, r4, r7
   2c120:	bl	14108 <strncmp@plt>
   2c124:	cmp	r0, #0
   2c128:	moveq	r5, r7
   2c12c:	b	2c0d4 <__flatcc_fb_create_basename@@Base+0x98>
   2c130:	mov	r4, r2
   2c134:	b	2c0b4 <__flatcc_fb_create_basename@@Base+0x78>

0002c138 <__flatcc_fb_read_file@@Base>:
   2c138:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c13c:	strd	r6, [sp, #8]
   2c140:	mov	r7, r1
   2c144:	movw	r1, #32744	; 0x7fe8
   2c148:	movt	r1, #5
   2c14c:	str	r8, [sp, #16]
   2c150:	subs	r8, r2, #0
   2c154:	str	lr, [sp, #20]
   2c158:	sub	sp, sp, #8
   2c15c:	addeq	r8, sp, #4
   2c160:	bl	13fa0 <fopen@plt>
   2c164:	subs	r6, r0, #0
   2c168:	beq	2c238 <__flatcc_fb_read_file@@Base+0x100>
   2c16c:	mov	r2, #2
   2c170:	mov	r1, #0
   2c174:	bl	140fc <fseek@plt>
   2c178:	mov	r0, r6
   2c17c:	bl	13fc4 <ftell@plt>
   2c180:	cmp	r0, r7
   2c184:	mov	r5, r0
   2c188:	movls	r4, #0
   2c18c:	movhi	r4, #1
   2c190:	cmp	r7, #0
   2c194:	mov	r0, r6
   2c198:	str	r5, [r8]
   2c19c:	moveq	r4, #0
   2c1a0:	cmp	r4, #0
   2c1a4:	bne	2c230 <__flatcc_fb_read_file@@Base+0xf8>
   2c1a8:	bl	13fdc <rewind@plt>
   2c1ac:	cmp	r5, #0
   2c1b0:	movne	r0, r5
   2c1b4:	moveq	r0, #1
   2c1b8:	bl	14018 <malloc@plt>
   2c1bc:	subs	r7, r0, #0
   2c1c0:	bne	2c1cc <__flatcc_fb_read_file@@Base+0x94>
   2c1c4:	b	2c240 <__flatcc_fb_read_file@@Base+0x108>
   2c1c8:	add	r4, r4, r0
   2c1cc:	mov	r3, r6
   2c1d0:	sub	r2, r5, r4
   2c1d4:	mov	r1, #1
   2c1d8:	add	r0, r7, r4
   2c1dc:	bl	14000 <fread@plt>
   2c1e0:	cmp	r0, #0
   2c1e4:	bne	2c1c8 <__flatcc_fb_read_file@@Base+0x90>
   2c1e8:	cmp	r4, r5
   2c1ec:	mov	r0, r6
   2c1f0:	bne	2c218 <__flatcc_fb_read_file@@Base+0xe0>
   2c1f4:	bl	140b4 <fclose@plt>
   2c1f8:	str	r4, [r8]
   2c1fc:	mov	r0, r7
   2c200:	add	sp, sp, #8
   2c204:	ldrd	r4, [sp]
   2c208:	ldrd	r6, [sp, #8]
   2c20c:	ldr	r8, [sp, #16]
   2c210:	add	sp, sp, #20
   2c214:	pop	{pc}		; (ldr pc, [sp], #4)
   2c218:	bl	140b4 <fclose@plt>
   2c21c:	mov	r0, r7
   2c220:	bl	13fac <free@plt>
   2c224:	mov	r7, #0
   2c228:	str	r5, [r8]
   2c22c:	b	2c1fc <__flatcc_fb_read_file@@Base+0xc4>
   2c230:	bl	140b4 <fclose@plt>
   2c234:	b	2c224 <__flatcc_fb_read_file@@Base+0xec>
   2c238:	mov	r5, r6
   2c23c:	b	2c224 <__flatcc_fb_read_file@@Base+0xec>
   2c240:	mov	r0, r6
   2c244:	bl	140b4 <fclose@plt>
   2c248:	b	2c224 <__flatcc_fb_read_file@@Base+0xec>

0002c24c <__flatcc_fb_default_error_out@@Base>:
   2c24c:	movw	r3, #49320	; 0xc0a8
   2c250:	movt	r3, #6
   2c254:	mov	r0, r1
   2c258:	mov	r1, #1
   2c25c:	ldr	r3, [r3]
   2c260:	b	13ff4 <fwrite@plt>
   2c264:	add	r0, r1, #4
   2c268:	b	28c80 <fb_symbol_table_clear@@Base>
   2c26c:	movw	r3, #49320	; 0xc0a8
   2c270:	movt	r3, #6
   2c274:	str	r4, [sp, #-8]!
   2c278:	movw	r0, #3360	; 0xd20
   2c27c:	movt	r0, #4
   2c280:	ldr	r3, [r3]
   2c284:	mov	r2, #34	; 0x22
   2c288:	mov	r1, #1
   2c28c:	str	lr, [sp, #4]
   2c290:	bl	13ff4 <fwrite@plt>
   2c294:	mov	r0, #1
   2c298:	bl	14048 <exit@plt>
   2c29c:	ldr	ip, [r0, #28]
   2c2a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c2a4:	mov	r4, r0
   2c2a8:	ldr	r0, [r0, #20]
   2c2ac:	strd	r6, [sp, #8]
   2c2b0:	mov	r7, r1
   2c2b4:	mov	r6, r2
   2c2b8:	ldr	r1, [r4, #40]	; 0x28
   2c2bc:	add	r5, ip, ip, lsl #2
   2c2c0:	str	r8, [sp, #16]
   2c2c4:	mov	r8, r3
   2c2c8:	str	lr, [sp, #20]
   2c2cc:	add	r5, r0, r5, lsl #2
   2c2d0:	cmp	r5, r1
   2c2d4:	str	r5, [r4, #24]
   2c2d8:	beq	2c31c <__flatcc_fb_default_error_out@@Base+0xd0>
   2c2dc:	ldr	r2, [r4, #60]	; 0x3c
   2c2e0:	sub	r8, r8, r6
   2c2e4:	add	r3, r1, #20
   2c2e8:	ldr	r0, [r4, #64]	; 0x40
   2c2ec:	stm	r1, {r6, r8}
   2c2f0:	ldr	r8, [sp, #16]
   2c2f4:	sub	r6, r6, r2
   2c2f8:	add	r6, r6, #1
   2c2fc:	str	r0, [r1, #8]
   2c300:	str	r6, [r1, #12]
   2c304:	str	r7, [r1, #16]
   2c308:	str	r3, [r4, #40]	; 0x28
   2c30c:	ldrd	r4, [sp]
   2c310:	ldrd	r6, [sp, #8]
   2c314:	add	sp, sp, #20
   2c318:	pop	{pc}		; (ldr pc, [sp], #4)
   2c31c:	cmp	ip, #0
   2c320:	sub	r5, r5, r0
   2c324:	moveq	r1, #20480	; 0x5000
   2c328:	moveq	r3, #1024	; 0x400
   2c32c:	bne	2c35c <__flatcc_fb_default_error_out@@Base+0x110>
   2c330:	str	r3, [r4, #28]
   2c334:	bl	13fe8 <realloc@plt>
   2c338:	cmp	r0, #0
   2c33c:	str	r0, [r4, #20]
   2c340:	beq	2c36c <__flatcc_fb_default_error_out@@Base+0x120>
   2c344:	ldr	r3, [r4, #28]
   2c348:	add	r1, r0, r5
   2c34c:	add	r3, r3, r3, lsl #2
   2c350:	add	r0, r0, r3, lsl #2
   2c354:	str	r0, [r4, #24]
   2c358:	b	2c2dc <__flatcc_fb_default_error_out@@Base+0x90>
   2c35c:	lsl	r3, ip, #1
   2c360:	add	r1, r3, ip, lsl #3
   2c364:	lsl	r1, r1, #2
   2c368:	b	2c330 <__flatcc_fb_default_error_out@@Base+0xe4>
   2c36c:	bl	2c26c <__flatcc_fb_default_error_out@@Base+0x20>
   2c370:	ldr	r3, [r0, #40]	; 0x28
   2c374:	strd	r4, [sp, #-16]!
   2c378:	mov	r4, r0
   2c37c:	str	r6, [sp, #8]
   2c380:	ldr	r6, [r0, #24]
   2c384:	str	lr, [sp, #12]
   2c388:	add	r5, r3, #20
   2c38c:	str	r5, [r0, #40]	; 0x28
   2c390:	cmp	r5, r6
   2c394:	beq	2c43c <__flatcc_fb_default_error_out@@Base+0x1f0>
   2c398:	ldr	r3, [r3, #36]	; 0x24
   2c39c:	cmn	r3, #964	; 0x3c4
   2c3a0:	bne	2c428 <__flatcc_fb_default_error_out@@Base+0x1dc>
   2c3a4:	ldr	ip, [r0, #44]	; 0x2c
   2c3a8:	ldr	r2, [r0, #52]	; 0x34
   2c3ac:	b	2c3e0 <__flatcc_fb_default_error_out@@Base+0x194>
   2c3b0:	ldr	r1, [r4, #36]	; 0x24
   2c3b4:	add	r0, r5, #20
   2c3b8:	cmp	r0, r6
   2c3bc:	str	r2, [r4, #52]	; 0x34
   2c3c0:	stm	r3, {r1, r5}
   2c3c4:	str	r3, [r4, #36]	; 0x24
   2c3c8:	str	r0, [r4, #40]	; 0x28
   2c3cc:	beq	2c440 <__flatcc_fb_default_error_out@@Base+0x1f4>
   2c3d0:	ldr	r3, [r0, #16]
   2c3d4:	cmn	r3, #964	; 0x3c4
   2c3d8:	bne	2c42c <__flatcc_fb_default_error_out@@Base+0x1e0>
   2c3dc:	mov	r5, r0
   2c3e0:	add	r1, r2, #16
   2c3e4:	cmp	r1, ip
   2c3e8:	movls	r3, r2
   2c3ec:	movls	r2, r1
   2c3f0:	bls	2c3b0 <__flatcc_fb_default_error_out@@Base+0x164>
   2c3f4:	mov	r1, #1
   2c3f8:	mov	r0, #65536	; 0x10000
   2c3fc:	bl	13f7c <calloc@plt>
   2c400:	cmp	r0, #0
   2c404:	beq	2c464 <__flatcc_fb_default_error_out@@Base+0x218>
   2c408:	ldr	r1, [r4, #48]	; 0x30
   2c40c:	add	ip, r0, #65536	; 0x10000
   2c410:	add	r3, r0, #16
   2c414:	add	r2, r0, #32
   2c418:	str	ip, [r4, #44]	; 0x2c
   2c41c:	str	r0, [r4, #48]	; 0x30
   2c420:	str	r1, [r0]
   2c424:	b	2c3b0 <__flatcc_fb_default_error_out@@Base+0x164>
   2c428:	mov	r0, r5
   2c42c:	ldrd	r4, [sp]
   2c430:	ldr	r6, [sp, #8]
   2c434:	add	sp, sp, #12
   2c438:	pop	{pc}		; (ldr pc, [sp], #4)
   2c43c:	mov	r5, r3
   2c440:	movw	r3, #32748	; 0x7fec
   2c444:	movt	r3, #5
   2c448:	str	r5, [r4, #40]	; 0x28
   2c44c:	movw	r1, #33044	; 0x8114
   2c450:	movt	r1, #5
   2c454:	movw	r0, #41608	; 0xa288
   2c458:	movt	r0, #4
   2c45c:	movw	r2, #341	; 0x155
   2c460:	bl	14120 <__assert_fail@plt>
   2c464:	movw	r3, #49320	; 0xc0a8
   2c468:	movt	r3, #6
   2c46c:	movw	r0, #3360	; 0xd20
   2c470:	movt	r0, #4
   2c474:	ldr	r3, [r3]
   2c478:	mov	r2, #34	; 0x22
   2c47c:	mov	r1, #1
   2c480:	bl	13ff4 <fwrite@plt>
   2c484:	mov	r0, #1
   2c488:	bl	14048 <exit@plt>

0002c48c <__flatcc_fb_print_error@@Base>:
   2c48c:	push	{r1, r2, r3}
   2c490:	mov	r1, #200	; 0xc8
   2c494:	strd	r4, [sp, #-12]!
   2c498:	mov	r5, r0
   2c49c:	str	lr, [sp, #8]
   2c4a0:	sub	sp, sp, #208	; 0xd0
   2c4a4:	add	ip, sp, #224	; 0xe0
   2c4a8:	add	r0, sp, #8
   2c4ac:	ldr	r2, [sp, #220]	; 0xdc
   2c4b0:	mov	r3, ip
   2c4b4:	str	ip, [sp, #4]
   2c4b8:	bl	140e4 <vsnprintf@plt>
   2c4bc:	cmp	r0, #199	; 0xc7
   2c4c0:	movle	r4, r0
   2c4c4:	bgt	2c4f8 <__flatcc_fb_print_error@@Base+0x6c>
   2c4c8:	ldr	r3, [r5, #8]
   2c4cc:	add	r1, sp, #8
   2c4d0:	mov	r2, r4
   2c4d4:	ldr	r0, [r5, #12]
   2c4d8:	blx	r3
   2c4dc:	mov	r0, r4
   2c4e0:	add	sp, sp, #208	; 0xd0
   2c4e4:	ldrd	r4, [sp]
   2c4e8:	ldr	lr, [sp, #8]
   2c4ec:	add	sp, sp, #12
   2c4f0:	add	sp, sp, #12
   2c4f4:	bx	lr
   2c4f8:	movw	r3, #33116	; 0x815c
   2c4fc:	movt	r3, #5
   2c500:	ldrb	r2, [r3, #4]
   2c504:	mov	r4, #199	; 0xc7
   2c508:	ldr	r3, [r3]
   2c50c:	str	r3, [sp, #203]	; 0xcb
   2c510:	strb	r2, [sp, #207]	; 0xcf
   2c514:	b	2c4c8 <__flatcc_fb_print_error@@Base+0x3c>

0002c518 <__flatcc_error_find_file_of_token@@Base>:
   2c518:	cmp	r0, #0
   2c51c:	beq	2c544 <__flatcc_error_find_file_of_token@@Base+0x2c>
   2c520:	ldr	r3, [r0, #20]
   2c524:	cmp	r3, r1
   2c528:	bhi	2c538 <__flatcc_error_find_file_of_token@@Base+0x20>
   2c52c:	ldr	r3, [r0, #24]
   2c530:	cmp	r3, r1
   2c534:	bhi	2c550 <__flatcc_error_find_file_of_token@@Base+0x38>
   2c538:	ldr	r0, [r0]
   2c53c:	cmp	r0, #0
   2c540:	bne	2c520 <__flatcc_error_find_file_of_token@@Base+0x8>
   2c544:	movw	r0, #45408	; 0xb160
   2c548:	movt	r0, #4
   2c54c:	bx	lr
   2c550:	ldr	r0, [r0, #520]	; 0x208
   2c554:	bx	lr

0002c558 <__flatcc_error_report@@Base>:
   2c558:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c55c:	mov	r4, r0
   2c560:	mov	r0, r3
   2c564:	strd	r6, [sp, #8]
   2c568:	adds	r6, r1, #0
   2c56c:	mov	ip, r1
   2c570:	str	r8, [sp, #16]
   2c574:	movne	r6, #1
   2c578:	mov	r5, r2
   2c57c:	str	lr, [sp, #20]
   2c580:	sub	sp, sp, #40	; 0x28
   2c584:	ldr	lr, [sp, #64]	; 0x40
   2c588:	ldr	r1, [sp, #68]	; 0x44
   2c58c:	cmp	lr, #0
   2c590:	moveq	r3, r6
   2c594:	movne	r3, #0
   2c598:	cmp	r3, #0
   2c59c:	movw	r3, #45408	; 0xb160
   2c5a0:	movt	r3, #4
   2c5a4:	ldrne	lr, [ip]
   2c5a8:	ldrne	r1, [ip, #4]
   2c5ac:	cmp	r2, #0
   2c5b0:	moveq	r5, r3
   2c5b4:	cmp	lr, #0
   2c5b8:	moveq	r1, lr
   2c5bc:	moveq	lr, r3
   2c5c0:	cmp	r0, #0
   2c5c4:	moveq	r3, r6
   2c5c8:	movne	r3, #0
   2c5cc:	cmp	r3, #0
   2c5d0:	beq	2c654 <__flatcc_error_report@@Base+0xfc>
   2c5d4:	cmp	r4, #0
   2c5d8:	beq	2c604 <__flatcc_error_report@@Base+0xac>
   2c5dc:	mov	r3, r4
   2c5e0:	ldr	r2, [r3, #20]
   2c5e4:	cmp	ip, r2
   2c5e8:	bcc	2c5f8 <__flatcc_error_report@@Base+0xa0>
   2c5ec:	ldr	r2, [r3, #24]
   2c5f0:	cmp	ip, r2
   2c5f4:	bcc	2c7b0 <__flatcc_error_report@@Base+0x258>
   2c5f8:	ldr	r3, [r3]
   2c5fc:	cmp	r3, #0
   2c600:	bne	2c5e0 <__flatcc_error_report@@Base+0x88>
   2c604:	movw	r2, #45408	; 0xb160
   2c608:	movt	r2, #4
   2c60c:	stmib	sp, {r1, lr}
   2c610:	mov	r0, r4
   2c614:	movw	r1, #33124	; 0x8164
   2c618:	movt	r1, #5
   2c61c:	str	r5, [sp, #12]
   2c620:	ldr	r3, [ip, #12]
   2c624:	str	r3, [sp]
   2c628:	ldr	r3, [ip, #8]
   2c62c:	bl	2c48c <__flatcc_fb_print_error@@Base>
   2c630:	ldr	r3, [r4, #108]	; 0x6c
   2c634:	add	r3, r3, #1
   2c638:	str	r3, [r4, #108]	; 0x6c
   2c63c:	add	sp, sp, #40	; 0x28
   2c640:	ldrd	r4, [sp]
   2c644:	ldrd	r6, [sp, #8]
   2c648:	ldr	r8, [sp, #16]
   2c64c:	add	sp, sp, #20
   2c650:	pop	{pc}		; (ldr pc, [sp], #4)
   2c654:	cmp	r0, #0
   2c658:	moveq	r6, #0
   2c65c:	cmp	r6, #0
   2c660:	beq	2c71c <__flatcc_error_report@@Base+0x1c4>
   2c664:	cmp	r4, #0
   2c668:	beq	2c7e4 <__flatcc_error_report@@Base+0x28c>
   2c66c:	mov	r3, r4
   2c670:	ldr	r2, [r3, #20]
   2c674:	cmp	ip, r2
   2c678:	bcc	2c688 <__flatcc_error_report@@Base+0x130>
   2c67c:	ldr	r2, [r3, #24]
   2c680:	cmp	ip, r2
   2c684:	bcc	2c7b8 <__flatcc_error_report@@Base+0x260>
   2c688:	ldr	r3, [r3]
   2c68c:	cmp	r3, #0
   2c690:	bne	2c670 <__flatcc_error_report@@Base+0x118>
   2c694:	movw	r2, #45408	; 0xb160
   2c698:	movt	r2, #4
   2c69c:	mov	r3, r4
   2c6a0:	ldr	r6, [r3, #20]
   2c6a4:	cmp	r0, r6
   2c6a8:	bcc	2c6b8 <__flatcc_error_report@@Base+0x160>
   2c6ac:	ldr	r6, [r3, #24]
   2c6b0:	cmp	r0, r6
   2c6b4:	bcc	2c7c0 <__flatcc_error_report@@Base+0x268>
   2c6b8:	ldr	r3, [r3]
   2c6bc:	cmp	r3, #0
   2c6c0:	bne	2c6a0 <__flatcc_error_report@@Base+0x148>
   2c6c4:	movw	r3, #45408	; 0xb160
   2c6c8:	movt	r3, #4
   2c6cc:	ldr	r6, [r0]
   2c6d0:	str	r1, [sp, #4]
   2c6d4:	movw	r1, #33156	; 0x8184
   2c6d8:	movt	r1, #5
   2c6dc:	ldr	r8, [r0, #4]
   2c6e0:	str	lr, [sp, #8]
   2c6e4:	ldr	r7, [r0, #8]
   2c6e8:	str	r5, [sp, #12]
   2c6ec:	ldr	lr, [r0, #12]
   2c6f0:	mov	r0, r4
   2c6f4:	str	r3, [sp, #16]
   2c6f8:	str	r7, [sp, #20]
   2c6fc:	str	r8, [sp, #28]
   2c700:	str	lr, [sp, #24]
   2c704:	str	r6, [sp, #32]
   2c708:	ldr	r3, [ip, #12]
   2c70c:	str	r3, [sp]
   2c710:	ldr	r3, [ip, #8]
   2c714:	bl	2c48c <__flatcc_fb_print_error@@Base>
   2c718:	b	2c630 <__flatcc_error_report@@Base+0xd8>
   2c71c:	orrs	r3, ip, r0
   2c720:	beq	2c798 <__flatcc_error_report@@Base+0x240>
   2c724:	cmp	r0, #0
   2c728:	beq	2c7d0 <__flatcc_error_report@@Base+0x278>
   2c72c:	cmp	r4, #0
   2c730:	beq	2c75c <__flatcc_error_report@@Base+0x204>
   2c734:	mov	r3, r4
   2c738:	ldr	r2, [r3, #20]
   2c73c:	cmp	r0, r2
   2c740:	bcc	2c750 <__flatcc_error_report@@Base+0x1f8>
   2c744:	ldr	r2, [r3, #24]
   2c748:	cmp	r0, r2
   2c74c:	bcc	2c7c8 <__flatcc_error_report@@Base+0x270>
   2c750:	ldr	r3, [r3]
   2c754:	cmp	r3, #0
   2c758:	bne	2c738 <__flatcc_error_report@@Base+0x1e0>
   2c75c:	movw	r3, #45408	; 0xb160
   2c760:	movt	r3, #4
   2c764:	ldr	ip, [r0]
   2c768:	mov	r2, r5
   2c76c:	movw	r1, #33220	; 0x81c4
   2c770:	movt	r1, #5
   2c774:	ldmib	r0, {r5, lr}
   2c778:	str	ip, [sp, #12]
   2c77c:	ldr	ip, [r0, #12]
   2c780:	mov	r0, r4
   2c784:	str	lr, [sp]
   2c788:	str	ip, [sp, #4]
   2c78c:	str	r5, [sp, #8]
   2c790:	bl	2c48c <__flatcc_fb_print_error@@Base>
   2c794:	b	2c630 <__flatcc_error_report@@Base+0xd8>
   2c798:	mov	r2, r5
   2c79c:	movw	r1, #33208	; 0x81b8
   2c7a0:	movt	r1, #5
   2c7a4:	mov	r0, r4
   2c7a8:	bl	2c48c <__flatcc_fb_print_error@@Base>
   2c7ac:	b	2c630 <__flatcc_error_report@@Base+0xd8>
   2c7b0:	ldr	r2, [r3, #520]	; 0x208
   2c7b4:	b	2c60c <__flatcc_error_report@@Base+0xb4>
   2c7b8:	ldr	r2, [r3, #520]	; 0x208
   2c7bc:	b	2c69c <__flatcc_error_report@@Base+0x144>
   2c7c0:	ldr	r3, [r3, #520]	; 0x208
   2c7c4:	b	2c6cc <__flatcc_error_report@@Base+0x174>
   2c7c8:	ldr	r3, [r3, #520]	; 0x208
   2c7cc:	b	2c764 <__flatcc_error_report@@Base+0x20c>
   2c7d0:	movw	r1, #33252	; 0x81e4
   2c7d4:	movt	r1, #5
   2c7d8:	mov	r0, r4
   2c7dc:	bl	2c48c <__flatcc_fb_print_error@@Base>
   2c7e0:	b	2c630 <__flatcc_error_report@@Base+0xd8>
   2c7e4:	movw	r2, #45408	; 0xb160
   2c7e8:	movt	r2, #4
   2c7ec:	mov	r3, r2
   2c7f0:	b	2c6cc <__flatcc_error_report@@Base+0x174>
   2c7f4:	ldr	r3, [r0, #52]	; 0x34
   2c7f8:	strd	r4, [sp, #-16]!
   2c7fc:	mov	r5, r1
   2c800:	mov	r4, r0
   2c804:	ldr	r1, [r0, #44]	; 0x2c
   2c808:	str	r6, [sp, #8]
   2c80c:	str	lr, [sp, #12]
   2c810:	sub	sp, sp, #8
   2c814:	add	r2, r3, #16
   2c818:	ldr	r6, [r0, #40]	; 0x28
   2c81c:	cmp	r2, r1
   2c820:	bhi	2c8b8 <__flatcc_error_report@@Base+0x360>
   2c824:	mov	r0, r4
   2c828:	str	r2, [r4, #52]	; 0x34
   2c82c:	str	r6, [r3, #4]
   2c830:	str	r3, [r5]
   2c834:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2c838:	ldr	r3, [r4, #40]	; 0x28
   2c83c:	ldr	r3, [r3, #16]
   2c840:	cmp	r3, #46	; 0x2e
   2c844:	beq	2c85c <__flatcc_error_report@@Base+0x304>
   2c848:	add	sp, sp, #8
   2c84c:	ldrd	r4, [sp]
   2c850:	ldr	r6, [sp, #8]
   2c854:	add	sp, sp, #12
   2c858:	pop	{pc}		; (ldr pc, [sp], #4)
   2c85c:	ldr	r6, [r5]
   2c860:	mov	r0, r4
   2c864:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2c868:	ldr	r5, [r4, #40]	; 0x28
   2c86c:	ldr	r3, [r5, #16]
   2c870:	cmp	r3, #9
   2c874:	bne	2c920 <__flatcc_error_report@@Base+0x3c8>
   2c878:	ldr	r1, [r4, #44]	; 0x2c
   2c87c:	ldr	r3, [r4, #52]	; 0x34
   2c880:	add	r2, r3, #16
   2c884:	cmp	r2, r1
   2c888:	bhi	2c8ec <__flatcc_error_report@@Base+0x394>
   2c88c:	mov	r0, r4
   2c890:	str	r2, [r4, #52]	; 0x34
   2c894:	str	r5, [r3, #4]
   2c898:	str	r3, [r6]
   2c89c:	mov	r6, r3
   2c8a0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2c8a4:	ldr	r3, [r4, #40]	; 0x28
   2c8a8:	ldr	r3, [r3, #16]
   2c8ac:	cmp	r3, #46	; 0x2e
   2c8b0:	bne	2c848 <__flatcc_error_report@@Base+0x2f0>
   2c8b4:	b	2c860 <__flatcc_error_report@@Base+0x308>
   2c8b8:	mov	r1, #1
   2c8bc:	mov	r0, #65536	; 0x10000
   2c8c0:	bl	13f7c <calloc@plt>
   2c8c4:	cmp	r0, #0
   2c8c8:	beq	2c948 <__flatcc_error_report@@Base+0x3f0>
   2c8cc:	ldr	r1, [r4, #48]	; 0x30
   2c8d0:	add	ip, r0, #65536	; 0x10000
   2c8d4:	add	r3, r0, #16
   2c8d8:	add	r2, r0, #32
   2c8dc:	str	ip, [r4, #44]	; 0x2c
   2c8e0:	str	r0, [r4, #48]	; 0x30
   2c8e4:	str	r1, [r0]
   2c8e8:	b	2c824 <__flatcc_error_report@@Base+0x2cc>
   2c8ec:	mov	r1, #1
   2c8f0:	mov	r0, #65536	; 0x10000
   2c8f4:	bl	13f7c <calloc@plt>
   2c8f8:	cmp	r0, #0
   2c8fc:	beq	2c948 <__flatcc_error_report@@Base+0x3f0>
   2c900:	ldr	r1, [r4, #48]	; 0x30
   2c904:	add	ip, r0, #65536	; 0x10000
   2c908:	add	r3, r0, #16
   2c90c:	add	r2, r0, #32
   2c910:	str	ip, [r4, #44]	; 0x2c
   2c914:	str	r0, [r4, #48]	; 0x30
   2c918:	str	r1, [r0]
   2c91c:	b	2c88c <__flatcc_error_report@@Base+0x334>
   2c920:	mov	ip, #0
   2c924:	mov	r1, r5
   2c928:	mov	r0, r4
   2c92c:	mov	r3, ip
   2c930:	movw	r2, #33288	; 0x8208
   2c934:	movt	r2, #5
   2c938:	str	ip, [sp]
   2c93c:	str	ip, [sp, #4]
   2c940:	bl	2c558 <__flatcc_error_report@@Base>
   2c944:	b	2c848 <__flatcc_error_report@@Base+0x2f0>
   2c948:	bl	2c26c <__flatcc_fb_default_error_out@@Base+0x20>
   2c94c:	strd	r4, [sp, #-20]!	; 0xffffffec
   2c950:	mov	r3, #1
   2c954:	mov	r4, r0
   2c958:	strd	r6, [sp, #8]
   2c95c:	mov	r7, r1
   2c960:	ldr	r6, [r0, #40]	; 0x28
   2c964:	str	lr, [sp, #16]
   2c968:	sub	sp, sp, #12
   2c96c:	strh	r3, [r1, #8]
   2c970:	ldr	r3, [r6, #16]
   2c974:	cmp	r3, #91	; 0x5b
   2c978:	beq	2cb44 <__flatcc_error_report@@Base+0x5ec>
   2c97c:	cmn	r3, #984	; 0x3d8
   2c980:	ble	2ca08 <__flatcc_error_report@@Base+0x4b0>
   2c984:	movw	r2, #64562	; 0xfc32
   2c988:	movt	r2, #65535	; 0xffff
   2c98c:	cmp	r3, r2
   2c990:	beq	2cc78 <__flatcc_error_report@@Base+0x720>
   2c994:	ble	2cb18 <__flatcc_error_report@@Base+0x5c0>
   2c998:	cmp	r3, #9
   2c99c:	beq	2cc64 <__flatcc_error_report@@Base+0x70c>
   2c9a0:	cmp	r3, #93	; 0x5d
   2c9a4:	moveq	r5, #0
   2c9a8:	beq	2cbc4 <__flatcc_error_report@@Base+0x66c>
   2c9ac:	cmn	r3, #972	; 0x3cc
   2c9b0:	beq	2ca34 <__flatcc_error_report@@Base+0x4dc>
   2c9b4:	mov	r5, #0
   2c9b8:	movw	r2, #33396	; 0x8274
   2c9bc:	movt	r2, #5
   2c9c0:	mov	ip, #0
   2c9c4:	mov	r3, ip
   2c9c8:	mov	r1, ip
   2c9cc:	str	ip, [sp]
   2c9d0:	mov	r0, r4
   2c9d4:	str	ip, [sp, #4]
   2c9d8:	bl	2c558 <__flatcc_error_report@@Base>
   2c9dc:	ldr	r3, [r4, #40]	; 0x28
   2c9e0:	ldr	r3, [r3, #16]
   2c9e4:	cmp	r3, #93	; 0x5d
   2c9e8:	beq	2ca5c <__flatcc_error_report@@Base+0x504>
   2c9ec:	cmp	r5, #0
   2c9f0:	bne	2ca70 <__flatcc_error_report@@Base+0x518>
   2c9f4:	add	sp, sp, #12
   2c9f8:	ldrd	r4, [sp]
   2c9fc:	ldrd	r6, [sp, #8]
   2ca00:	add	sp, sp, #16
   2ca04:	pop	{pc}		; (ldr pc, [sp], #4)
   2ca08:	mvn	r2, #984	; 0x3d8
   2ca0c:	cmp	r3, r2
   2ca10:	bge	2ca34 <__flatcc_error_report@@Base+0x4dc>
   2ca14:	cmn	r3, #988	; 0x3dc
   2ca18:	bge	2caf8 <__flatcc_error_report@@Base+0x5a0>
   2ca1c:	cmn	r3, #996	; 0x3e4
   2ca20:	bge	2ca34 <__flatcc_error_report@@Base+0x4dc>
   2ca24:	add	r3, r3, #996	; 0x3e4
   2ca28:	add	r3, r3, #3
   2ca2c:	cmp	r3, #1
   2ca30:	bhi	2c9b4 <__flatcc_error_report@@Base+0x45c>
   2ca34:	mov	r5, #0
   2ca38:	mov	r3, #8
   2ca3c:	str	r6, [r7]
   2ca40:	mov	r0, r4
   2ca44:	strh	r3, [r7, #8]
   2ca48:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ca4c:	ldr	r3, [r4, #40]	; 0x28
   2ca50:	ldr	r3, [r3, #16]
   2ca54:	cmp	r3, #93	; 0x5d
   2ca58:	bne	2c9ec <__flatcc_error_report@@Base+0x494>
   2ca5c:	sub	r5, r5, #1
   2ca60:	mov	r0, r4
   2ca64:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ca68:	cmn	r5, #1
   2ca6c:	bne	2c9dc <__flatcc_error_report@@Base+0x484>
   2ca70:	mov	r5, #0
   2ca74:	mov	r3, r6
   2ca78:	movw	r2, #33420	; 0x828c
   2ca7c:	movt	r2, #5
   2ca80:	mov	r1, r5
   2ca84:	mov	r0, r4
   2ca88:	str	r5, [sp]
   2ca8c:	str	r5, [sp, #4]
   2ca90:	bl	2c558 <__flatcc_error_report@@Base>
   2ca94:	ldr	r7, [r4, #40]	; 0x28
   2ca98:	ldr	r3, [r7, #16]
   2ca9c:	cmp	r3, #93	; 0x5d
   2caa0:	bne	2c9f4 <__flatcc_error_report@@Base+0x49c>
   2caa4:	mov	r0, r4
   2caa8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2caac:	mov	r3, r6
   2cab0:	mov	r1, r7
   2cab4:	str	r5, [sp]
   2cab8:	movw	r2, #33456	; 0x82b0
   2cabc:	movt	r2, #5
   2cac0:	str	r5, [sp, #4]
   2cac4:	mov	r0, r4
   2cac8:	bl	2c558 <__flatcc_error_report@@Base>
   2cacc:	ldr	r3, [r4, #40]	; 0x28
   2cad0:	ldr	r3, [r3, #16]
   2cad4:	cmp	r3, #93	; 0x5d
   2cad8:	bne	2c9f4 <__flatcc_error_report@@Base+0x49c>
   2cadc:	mov	r0, r4
   2cae0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2cae4:	ldr	r3, [r4, #40]	; 0x28
   2cae8:	ldr	r3, [r3, #16]
   2caec:	cmp	r3, #93	; 0x5d
   2caf0:	bne	2c9f4 <__flatcc_error_report@@Base+0x49c>
   2caf4:	b	2cadc <__flatcc_error_report@@Base+0x584>
   2caf8:	movw	r2, #64549	; 0xfc25
   2cafc:	movt	r2, #65535	; 0xffff
   2cb00:	cmp	r3, r2
   2cb04:	bne	2c9b4 <__flatcc_error_report@@Base+0x45c>
   2cb08:	mov	r5, #0
   2cb0c:	mov	r3, #8
   2cb10:	str	r6, [r7]
   2cb14:	b	2ca40 <__flatcc_error_report@@Base+0x4e8>
   2cb18:	movw	r2, #64554	; 0xfc2a
   2cb1c:	movt	r2, #65535	; 0xffff
   2cb20:	cmp	r3, r2
   2cb24:	blt	2c9b4 <__flatcc_error_report@@Base+0x45c>
   2cb28:	cmn	r3, #976	; 0x3d0
   2cb2c:	blt	2ca34 <__flatcc_error_report@@Base+0x4dc>
   2cb30:	movw	r2, #64561	; 0xfc31
   2cb34:	movt	r2, #65535	; 0xffff
   2cb38:	cmp	r3, r2
   2cb3c:	bne	2c9b4 <__flatcc_error_report@@Base+0x45c>
   2cb40:	b	2ca34 <__flatcc_error_report@@Base+0x4dc>
   2cb44:	mov	r5, #0
   2cb48:	mov	r0, r4
   2cb4c:	add	r5, r5, #1
   2cb50:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2cb54:	ldr	r2, [r4, #40]	; 0x28
   2cb58:	ldr	r3, [r2, #16]
   2cb5c:	cmp	r3, #91	; 0x5b
   2cb60:	beq	2cb48 <__flatcc_error_report@@Base+0x5f0>
   2cb64:	cmp	r5, #1
   2cb68:	beq	2ccb4 <__flatcc_error_report@@Base+0x75c>
   2cb6c:	mov	ip, #0
   2cb70:	movw	r2, #33328	; 0x8230
   2cb74:	movt	r2, #5
   2cb78:	mov	r3, ip
   2cb7c:	mov	r1, r6
   2cb80:	mov	r0, r4
   2cb84:	str	ip, [sp]
   2cb88:	str	ip, [sp, #4]
   2cb8c:	bl	2c558 <__flatcc_error_report@@Base>
   2cb90:	ldr	r2, [r4, #40]	; 0x28
   2cb94:	ldr	r3, [r2, #16]
   2cb98:	cmn	r3, #984	; 0x3d8
   2cb9c:	ble	2cbd4 <__flatcc_error_report@@Base+0x67c>
   2cba0:	movw	r1, #64562	; 0xfc32
   2cba4:	movt	r1, #65535	; 0xffff
   2cba8:	cmp	r3, r1
   2cbac:	beq	2cca8 <__flatcc_error_report@@Base+0x750>
   2cbb0:	ble	2cc10 <__flatcc_error_report@@Base+0x6b8>
   2cbb4:	cmp	r3, #9
   2cbb8:	beq	2cc94 <__flatcc_error_report@@Base+0x73c>
   2cbbc:	cmp	r3, #93	; 0x5d
   2cbc0:	bne	2cc04 <__flatcc_error_report@@Base+0x6ac>
   2cbc4:	movw	r2, #33368	; 0x8258
   2cbc8:	movt	r2, #5
   2cbcc:	mov	ip, #0
   2cbd0:	b	2c9c4 <__flatcc_error_report@@Base+0x46c>
   2cbd4:	mvn	r1, #984	; 0x3d8
   2cbd8:	cmp	r3, r1
   2cbdc:	bge	2cc38 <__flatcc_error_report@@Base+0x6e0>
   2cbe0:	cmn	r3, #988	; 0x3dc
   2cbe4:	bge	2cc50 <__flatcc_error_report@@Base+0x6f8>
   2cbe8:	cmn	r3, #996	; 0x3e4
   2cbec:	bge	2cc38 <__flatcc_error_report@@Base+0x6e0>
   2cbf0:	add	r3, r3, #996	; 0x3e4
   2cbf4:	add	r3, r3, #3
   2cbf8:	cmp	r3, #1
   2cbfc:	bhi	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cc00:	b	2cc38 <__flatcc_error_report@@Base+0x6e0>
   2cc04:	cmn	r3, #972	; 0x3cc
   2cc08:	bne	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cc0c:	b	2cc38 <__flatcc_error_report@@Base+0x6e0>
   2cc10:	movw	r1, #64554	; 0xfc2a
   2cc14:	movt	r1, #65535	; 0xffff
   2cc18:	cmp	r3, r1
   2cc1c:	blt	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cc20:	cmn	r3, #976	; 0x3d0
   2cc24:	blt	2cc38 <__flatcc_error_report@@Base+0x6e0>
   2cc28:	movw	r1, #64561	; 0xfc31
   2cc2c:	movt	r1, #65535	; 0xffff
   2cc30:	cmp	r3, r1
   2cc34:	bne	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cc38:	mov	r3, #7
   2cc3c:	mov	r0, r4
   2cc40:	str	r2, [r7]
   2cc44:	strh	r3, [r7, #8]
   2cc48:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2cc4c:	b	2ca4c <__flatcc_error_report@@Base+0x4f4>
   2cc50:	movw	r1, #64549	; 0xfc25
   2cc54:	movt	r1, #65535	; 0xffff
   2cc58:	cmp	r3, r1
   2cc5c:	bne	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cc60:	b	2cc38 <__flatcc_error_report@@Base+0x6e0>
   2cc64:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   2cc68:	mov	r5, #0
   2cc6c:	mov	r3, #12
   2cc70:	strh	r3, [r7, #8]
   2cc74:	b	2c9dc <__flatcc_error_report@@Base+0x484>
   2cc78:	mov	r3, #10
   2cc7c:	mov	r0, r4
   2cc80:	str	r6, [r1]
   2cc84:	mov	r5, #0
   2cc88:	strh	r3, [r7, #8]
   2cc8c:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2cc90:	b	2ca4c <__flatcc_error_report@@Base+0x4f4>
   2cc94:	mov	r1, r7
   2cc98:	mov	r0, r4
   2cc9c:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   2cca0:	mov	r3, #11
   2cca4:	b	2cc70 <__flatcc_error_report@@Base+0x718>
   2cca8:	mov	r3, #9
   2ccac:	str	r2, [r7]
   2ccb0:	b	2ca40 <__flatcc_error_report@@Base+0x4e8>
   2ccb4:	cmn	r3, #984	; 0x3d8
   2ccb8:	ble	2ccf4 <__flatcc_error_report@@Base+0x79c>
   2ccbc:	movw	r1, #64562	; 0xfc32
   2ccc0:	movt	r1, #65535	; 0xffff
   2ccc4:	cmp	r3, r1
   2ccc8:	beq	2cca8 <__flatcc_error_report@@Base+0x750>
   2cccc:	ble	2cd24 <__flatcc_error_report@@Base+0x7cc>
   2ccd0:	cmp	r3, #9
   2ccd4:	beq	2cc94 <__flatcc_error_report@@Base+0x73c>
   2ccd8:	cmp	r3, #93	; 0x5d
   2ccdc:	beq	2cbc4 <__flatcc_error_report@@Base+0x66c>
   2cce0:	cmn	r3, #972	; 0x3cc
   2cce4:	bne	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cce8:	mov	r3, #7
   2ccec:	str	r2, [r7]
   2ccf0:	b	2ca40 <__flatcc_error_report@@Base+0x4e8>
   2ccf4:	mvn	r1, #984	; 0x3d8
   2ccf8:	cmp	r3, r1
   2ccfc:	bge	2cce8 <__flatcc_error_report@@Base+0x790>
   2cd00:	cmn	r3, #988	; 0x3dc
   2cd04:	bge	2cd50 <__flatcc_error_report@@Base+0x7f8>
   2cd08:	cmn	r3, #996	; 0x3e4
   2cd0c:	bge	2cce8 <__flatcc_error_report@@Base+0x790>
   2cd10:	add	r3, r3, #996	; 0x3e4
   2cd14:	add	r3, r3, #3
   2cd18:	cmp	r3, #1
   2cd1c:	bhi	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cd20:	b	2cce8 <__flatcc_error_report@@Base+0x790>
   2cd24:	movw	r1, #64554	; 0xfc2a
   2cd28:	movt	r1, #65535	; 0xffff
   2cd2c:	cmp	r3, r1
   2cd30:	blt	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cd34:	cmn	r3, #976	; 0x3d0
   2cd38:	blt	2cce8 <__flatcc_error_report@@Base+0x790>
   2cd3c:	movw	r1, #64561	; 0xfc31
   2cd40:	movt	r1, #65535	; 0xffff
   2cd44:	cmp	r3, r1
   2cd48:	beq	2cce8 <__flatcc_error_report@@Base+0x790>
   2cd4c:	b	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cd50:	movw	r1, #64549	; 0xfc25
   2cd54:	movt	r1, #65535	; 0xffff
   2cd58:	cmp	r3, r1
   2cd5c:	bne	2c9b8 <__flatcc_error_report@@Base+0x460>
   2cd60:	b	2cce8 <__flatcc_error_report@@Base+0x790>
   2cd64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2cd68:	mov	r4, r0
   2cd6c:	mov	r5, r1
   2cd70:	strd	r6, [sp, #8]
   2cd74:	movw	r7, #33556	; 0x8314
   2cd78:	movt	r7, #5
   2cd7c:	movw	r6, #33512	; 0x82e8
   2cd80:	movt	r6, #5
   2cd84:	str	r8, [sp, #16]
   2cd88:	movw	r8, #33560	; 0x8318
   2cd8c:	movt	r8, #5
   2cd90:	str	lr, [sp, #20]
   2cd94:	sub	sp, sp, #8
   2cd98:	ldr	r1, [r4, #40]	; 0x28
   2cd9c:	ldr	r3, [r1, #16]
   2cda0:	sub	r3, r3, #6
   2cda4:	cmp	r3, #17
   2cda8:	ldrls	pc, [pc, r3, lsl #2]
   2cdac:	b	2cdf8 <__flatcc_error_report@@Base+0x8a0>
   2cdb0:	andeq	ip, r2, r0, ror #29
   2cdb4:	strdeq	ip, [r2], -r8
   2cdb8:	strdeq	ip, [r2], -r8
   2cdbc:	strdeq	ip, [r2], -r8
   2cdc0:	strdeq	ip, [r2], -r8
   2cdc4:	strdeq	ip, [r2], -r8
   2cdc8:	strdeq	ip, [r2], -r8
   2cdcc:	strdeq	ip, [r2], -r8
   2cdd0:	strdeq	ip, [r2], -r8
   2cdd4:	strdeq	ip, [r2], -r8
   2cdd8:	strdeq	ip, [r2], -r8
   2cddc:	strdeq	ip, [r2], -r8
   2cde0:			; <UNDEFINED> instruction: 0x0002ceb8
   2cde4:	strdeq	ip, [r2], -r8
   2cde8:	andeq	ip, r2, r0, lsr #29
   2cdec:	andeq	ip, r2, ip, ror #28
   2cdf0:	andeq	ip, r2, r4, lsr #28
   2cdf4:	andeq	ip, r2, r4, lsr #28
   2cdf8:	mov	ip, #0
   2cdfc:	movw	r2, #33592	; 0x8338
   2ce00:	movt	r2, #5
   2ce04:	mov	r3, ip
   2ce08:	mov	r0, r4
   2ce0c:	str	ip, [sp]
   2ce10:	str	ip, [sp, #4]
   2ce14:	bl	2c558 <__flatcc_error_report@@Base>
   2ce18:	mov	r3, #1
   2ce1c:	ldr	r1, [r4, #40]	; 0x28
   2ce20:	strh	r3, [r5, #8]
   2ce24:	ldr	r2, [r5]
   2ce28:	cmp	r2, #0
   2ce2c:	beq	2ce40 <__flatcc_error_report@@Base+0x8e8>
   2ce30:	ldr	r3, [r1]
   2ce34:	sub	r3, r3, r2
   2ce38:	str	r3, [r5, #4]
   2ce3c:	ldr	r1, [r4, #40]	; 0x28
   2ce40:	ldr	r3, [r1, #16]
   2ce44:	cmp	r3, #22
   2ce48:	bne	2cf00 <__flatcc_error_report@@Base+0x9a8>
   2ce4c:	mov	r0, r4
   2ce50:	add	sp, sp, #8
   2ce54:	ldrd	r4, [sp]
   2ce58:	ldrd	r6, [sp, #8]
   2ce5c:	ldr	r8, [sp, #16]
   2ce60:	ldr	lr, [sp, #20]
   2ce64:	add	sp, sp, #24
   2ce68:	b	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ce6c:	mov	r0, #0
   2ce70:	mov	ip, #1
   2ce74:	mov	r3, r0
   2ce78:	movw	r2, #33480	; 0x82c8
   2ce7c:	movt	r2, #5
   2ce80:	str	r0, [sp]
   2ce84:	str	r0, [sp, #4]
   2ce88:	mov	r0, r4
   2ce8c:	strh	ip, [r5, #8]
   2ce90:	bl	2c558 <__flatcc_error_report@@Base>
   2ce94:	mov	r0, r4
   2ce98:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ce9c:	b	2cd98 <__flatcc_error_report@@Base+0x840>
   2cea0:	ldr	r3, [r5]
   2cea4:	cmp	r3, #0
   2cea8:	bne	2ce94 <__flatcc_error_report@@Base+0x93c>
   2ceac:	ldr	r3, [r1]
   2ceb0:	str	r3, [r5]
   2ceb4:	b	2ce94 <__flatcc_error_report@@Base+0x93c>
   2ceb8:	mov	r0, #0
   2cebc:	mov	ip, #1
   2cec0:	mov	r3, r0
   2cec4:	mov	r2, r8
   2cec8:	str	r0, [sp]
   2cecc:	str	r0, [sp, #4]
   2ced0:	mov	r0, r4
   2ced4:	strh	ip, [r5, #8]
   2ced8:	bl	2c558 <__flatcc_error_report@@Base>
   2cedc:	b	2ce94 <__flatcc_error_report@@Base+0x93c>
   2cee0:	mov	ip, #1
   2cee4:	mov	r3, #0
   2cee8:	mov	r2, r6
   2ceec:	mov	r0, r4
   2cef0:	stm	sp, {r7, ip}
   2cef4:	strh	ip, [r5, #8]
   2cef8:	bl	2c558 <__flatcc_error_report@@Base>
   2cefc:	b	2ce94 <__flatcc_error_report@@Base+0x93c>
   2cf00:	mov	ip, #0
   2cf04:	mov	r0, r4
   2cf08:	mov	r3, ip
   2cf0c:	movw	r2, #33636	; 0x8364
   2cf10:	movt	r2, #5
   2cf14:	str	ip, [sp]
   2cf18:	str	ip, [sp, #4]
   2cf1c:	bl	2c558 <__flatcc_error_report@@Base>
   2cf20:	mov	r3, #1
   2cf24:	strh	r3, [r5, #8]
   2cf28:	add	sp, sp, #8
   2cf2c:	ldrd	r4, [sp]
   2cf30:	ldrd	r6, [sp, #8]
   2cf34:	ldr	r8, [sp, #16]
   2cf38:	add	sp, sp, #20
   2cf3c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cf40:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2cf44:	strd	r6, [sp, #8]
   2cf48:	mov	r7, r0
   2cf4c:	ldr	r6, [r0, #40]	; 0x28
   2cf50:	strd	r8, [sp, #16]
   2cf54:	mov	r8, r1
   2cf58:	strd	sl, [sp, #24]
   2cf5c:	mov	fp, r3
   2cf60:	mov	sl, r2
   2cf64:	str	lr, [sp, #32]
   2cf68:	sub	sp, sp, #68	; 0x44
   2cf6c:	ldr	r3, [r6, #16]
   2cf70:	cmp	r3, #45	; 0x2d
   2cf74:	beq	2d0b8 <__flatcc_error_report@@Base+0xb60>
   2cf78:	cmp	r3, #10
   2cf7c:	beq	2d304 <__flatcc_error_report@@Base+0xdac>
   2cf80:	ble	2d014 <__flatcc_error_report@@Base+0xabc>
   2cf84:	cmp	r3, #14
   2cf88:	beq	2d1b4 <__flatcc_error_report@@Base+0xc5c>
   2cf8c:	cmp	r3, #19
   2cf90:	beq	2d050 <__flatcc_error_report@@Base+0xaf8>
   2cf94:	cmp	r3, #11
   2cf98:	bne	2d0f4 <__flatcc_error_report@@Base+0xb9c>
   2cf9c:	mov	r4, #0
   2cfa0:	mov	r3, #3
   2cfa4:	add	r1, sp, #60	; 0x3c
   2cfa8:	ldr	r0, [r6]
   2cfac:	strh	r3, [r8, #8]
   2cfb0:	bl	1409c <strtod@plt>
   2cfb4:	ldrd	r2, [r6]
   2cfb8:	vstr	d0, [r8]
   2cfbc:	ldr	r1, [sp, #60]	; 0x3c
   2cfc0:	add	r3, r2, r3
   2cfc4:	cmp	r1, r3
   2cfc8:	beq	2d2cc <__flatcc_error_report@@Base+0xd74>
   2cfcc:	mov	r0, #0
   2cfd0:	movw	r2, #33708	; 0x83ac
   2cfd4:	movt	r2, #5
   2cfd8:	mov	ip, #1
   2cfdc:	mov	r3, r0
   2cfe0:	mov	r1, r6
   2cfe4:	str	r0, [sp]
   2cfe8:	str	r0, [sp, #4]
   2cfec:	mov	r0, r7
   2cff0:	strh	ip, [r8, #8]
   2cff4:	bl	2c558 <__flatcc_error_report@@Base>
   2cff8:	cmp	r4, #0
   2cffc:	beq	2d044 <__flatcc_error_report@@Base+0xaec>
   2d000:	ldrh	r3, [r8, #8]
   2d004:	cmp	r3, #6
   2d008:	bne	2d044 <__flatcc_error_report@@Base+0xaec>
   2d00c:	mov	r9, r6
   2d010:	b	2d4e4 <__flatcc_error_report@@Base+0xf8c>
   2d014:	movw	r2, #64550	; 0xfc26
   2d018:	movt	r2, #65535	; 0xffff
   2d01c:	cmp	r3, r2
   2d020:	beq	2d164 <__flatcc_error_report@@Base+0xc0c>
   2d024:	cmp	r3, #9
   2d028:	beq	2d154 <__flatcc_error_report@@Base+0xbfc>
   2d02c:	cmn	r3, #988	; 0x3dc
   2d030:	bne	2d0f4 <__flatcc_error_report@@Base+0xb9c>
   2d034:	mov	r2, #1
   2d038:	mov	r3, #6
   2d03c:	strb	r2, [r8]
   2d040:	strh	r3, [r8, #8]
   2d044:	mov	r0, r7
   2d048:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d04c:	b	2d114 <__flatcc_error_report@@Base+0xbbc>
   2d050:	mov	r4, #0
   2d054:	mov	r0, r7
   2d058:	mov	r5, #0
   2d05c:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d060:	mov	r3, #2
   2d064:	mov	r1, r8
   2d068:	str	r5, [r8]
   2d06c:	mov	r0, r7
   2d070:	str	r5, [r8, #4]
   2d074:	strh	r3, [r8, #8]
   2d078:	bl	2cd64 <__flatcc_error_report@@Base+0x80c>
   2d07c:	ands	r3, sl, #1
   2d080:	beq	2d4a0 <__flatcc_error_report@@Base+0xf48>
   2d084:	cmp	r4, #0
   2d088:	beq	2d114 <__flatcc_error_report@@Base+0xbbc>
   2d08c:	mov	r2, #1
   2d090:	mov	r1, r6
   2d094:	str	r5, [sp]
   2d098:	mov	r0, r7
   2d09c:	mov	r3, r5
   2d0a0:	str	r5, [sp, #4]
   2d0a4:	strh	r2, [r8, #8]
   2d0a8:	movw	r2, #33772	; 0x83ec
   2d0ac:	movt	r2, #5
   2d0b0:	bl	2c558 <__flatcc_error_report@@Base>
   2d0b4:	b	2d114 <__flatcc_error_report@@Base+0xbbc>
   2d0b8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d0bc:	ldr	r9, [r7, #40]	; 0x28
   2d0c0:	ldr	r3, [r9, #16]
   2d0c4:	cmp	r3, #10
   2d0c8:	beq	2d520 <__flatcc_error_report@@Base+0xfc8>
   2d0cc:	bgt	2d130 <__flatcc_error_report@@Base+0xbd8>
   2d0d0:	movw	r2, #64550	; 0xfc26
   2d0d4:	movt	r2, #65535	; 0xffff
   2d0d8:	cmp	r3, r2
   2d0dc:	beq	2d4dc <__flatcc_error_report@@Base+0xf84>
   2d0e0:	cmp	r3, #9
   2d0e4:	beq	2d178 <__flatcc_error_report@@Base+0xc20>
   2d0e8:	cmn	r3, #988	; 0x3dc
   2d0ec:	beq	2d514 <__flatcc_error_report@@Base+0xfbc>
   2d0f0:	mov	r6, r9
   2d0f4:	mov	ip, #0
   2d0f8:	mov	r2, fp
   2d0fc:	mov	r1, r6
   2d100:	mov	r0, r7
   2d104:	mov	r3, ip
   2d108:	str	ip, [sp]
   2d10c:	str	ip, [sp, #4]
   2d110:	bl	2c558 <__flatcc_error_report@@Base>
   2d114:	add	sp, sp, #68	; 0x44
   2d118:	ldrd	r4, [sp]
   2d11c:	ldrd	r6, [sp, #8]
   2d120:	ldrd	r8, [sp, #16]
   2d124:	ldrd	sl, [sp, #24]
   2d128:	add	sp, sp, #32
   2d12c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d130:	cmp	r3, #14
   2d134:	beq	2d2f8 <__flatcc_error_report@@Base+0xda0>
   2d138:	cmp	r3, #19
   2d13c:	beq	2d2ec <__flatcc_error_report@@Base+0xd94>
   2d140:	cmp	r3, #11
   2d144:	bne	2d0f0 <__flatcc_error_report@@Base+0xb98>
   2d148:	mov	r4, r6
   2d14c:	mov	r6, r9
   2d150:	b	2cfa0 <__flatcc_error_report@@Base+0xa48>
   2d154:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   2d158:	mov	r3, #13
   2d15c:	strh	r3, [r8, #8]
   2d160:	b	2d114 <__flatcc_error_report@@Base+0xbbc>
   2d164:	mov	r2, #0
   2d168:	mov	r3, #6
   2d16c:	strb	r2, [r8]
   2d170:	strh	r3, [r8, #8]
   2d174:	b	2d044 <__flatcc_error_report@@Base+0xaec>
   2d178:	mov	r1, r8
   2d17c:	mov	r0, r7
   2d180:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   2d184:	mov	r2, #0
   2d188:	mov	ip, #1
   2d18c:	mov	r3, r2
   2d190:	mov	r1, r9
   2d194:	mov	r0, r7
   2d198:	str	r2, [sp]
   2d19c:	str	r2, [sp, #4]
   2d1a0:	movw	r2, #33844	; 0x8434
   2d1a4:	movt	r2, #5
   2d1a8:	strh	ip, [r8, #8]
   2d1ac:	bl	2c558 <__flatcc_error_report@@Base>
   2d1b0:	b	2d114 <__flatcc_error_report@@Base+0xbbc>
   2d1b4:	mov	r4, #0
   2d1b8:	ldr	r3, [r6]
   2d1bc:	mov	r1, #5
   2d1c0:	ldr	r2, [r6, #4]
   2d1c4:	strh	r1, [r8, #8]
   2d1c8:	add	r0, r3, r2
   2d1cc:	cmp	r3, r0
   2d1d0:	str	r0, [sp, #20]
   2d1d4:	beq	2d468 <__flatcc_error_report@@Base+0xf10>
   2d1d8:	ldrb	r1, [r3]
   2d1dc:	cmp	r1, #45	; 0x2d
   2d1e0:	str	r1, [sp, #32]
   2d1e4:	movne	r1, #0
   2d1e8:	moveq	r1, #1
   2d1ec:	sub	r2, r2, r1
   2d1f0:	cmp	r2, #1
   2d1f4:	ble	2d468 <__flatcc_error_report@@Base+0xf10>
   2d1f8:	ldrb	r2, [r3, r1]
   2d1fc:	add	r3, r3, r1
   2d200:	cmp	r2, #48	; 0x30
   2d204:	bne	2d468 <__flatcc_error_report@@Base+0xf10>
   2d208:	ldrb	r2, [r3, #1]
   2d20c:	orr	r2, r2, #32
   2d210:	cmp	r2, #120	; 0x78
   2d214:	bne	2d468 <__flatcc_error_report@@Base+0xf10>
   2d218:	add	r2, r3, #2
   2d21c:	str	r2, [sp, #24]
   2d220:	sub	r2, r0, r2
   2d224:	cmp	r2, #16
   2d228:	ble	2d5a8 <__flatcc_error_report@@Base+0x1050>
   2d22c:	add	r3, r3, #18
   2d230:	mov	r2, r3
   2d234:	str	r3, [sp, #16]
   2d238:	ldr	r3, [sp, #24]
   2d23c:	cmp	r3, r2
   2d240:	beq	2d468 <__flatcc_error_report@@Base+0xf10>
   2d244:	mov	r1, r3
   2d248:	mov	r2, #0
   2d24c:	strd	r6, [sp, #36]	; 0x24
   2d250:	mov	r3, #0
   2d254:	str	r4, [sp, #48]	; 0x30
   2d258:	str	r8, [sp, #52]	; 0x34
   2d25c:	b	2d27c <__flatcc_error_report@@Base+0xd24>
   2d260:	subs	r4, r8, #48	; 0x30
   2d264:	sbc	r5, lr, #0
   2d268:	adds	r2, r4, r0
   2d26c:	adc	r3, r5, #0
   2d270:	ldr	r0, [sp, #16]
   2d274:	cmp	r0, r1
   2d278:	beq	2d57c <__flatcc_error_report@@Base+0x1024>
   2d27c:	mov	fp, r1
   2d280:	ldrb	r0, [r1], #1
   2d284:	lsl	lr, r3, #4
   2d288:	lsl	r8, r2, #4
   2d28c:	orr	lr, lr, r2, lsr #28
   2d290:	sub	r9, r0, #48	; 0x30
   2d294:	orr	r7, r0, #32
   2d298:	cmp	r9, #9
   2d29c:	sub	sl, r7, #97	; 0x61
   2d2a0:	bls	2d260 <__flatcc_error_report@@Base+0xd08>
   2d2a4:	cmp	sl, #5
   2d2a8:	bhi	2d5b4 <__flatcc_error_report@@Base+0x105c>
   2d2ac:	subs	r3, r8, #87	; 0x57
   2d2b0:	str	r3, [sp, #8]
   2d2b4:	sbc	r3, lr, #0
   2d2b8:	str	r3, [sp, #12]
   2d2bc:	ldrd	r2, [sp, #8]
   2d2c0:	adds	r2, r2, r7
   2d2c4:	adc	r3, r3, #0
   2d2c8:	b	2d270 <__flatcc_error_report@@Base+0xd18>
   2d2cc:	ldrb	r3, [r2]
   2d2d0:	cmp	r3, #46	; 0x2e
   2d2d4:	beq	2d4c4 <__flatcc_error_report@@Base+0xf6c>
   2d2d8:	cmp	r4, #0
   2d2dc:	vnegne.f64	d0, d0
   2d2e0:	vstrne	d0, [r8]
   2d2e4:	bne	2d000 <__flatcc_error_report@@Base+0xaa8>
   2d2e8:	b	2d044 <__flatcc_error_report@@Base+0xaec>
   2d2ec:	mov	r4, r6
   2d2f0:	mov	r6, r9
   2d2f4:	b	2d054 <__flatcc_error_report@@Base+0xafc>
   2d2f8:	mov	r4, r6
   2d2fc:	mov	r6, r9
   2d300:	b	2d1b8 <__flatcc_error_report@@Base+0xc60>
   2d304:	mov	r3, #0
   2d308:	str	r3, [sp, #8]
   2d30c:	ldr	ip, [r6]
   2d310:	mov	r3, #5
   2d314:	ldr	r0, [r6, #4]
   2d318:	strh	r3, [r8, #8]
   2d31c:	add	r0, ip, r0
   2d320:	cmp	ip, r0
   2d324:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d328:	ldrb	r3, [ip]
   2d32c:	cmp	r3, #45	; 0x2d
   2d330:	str	r3, [sp, #20]
   2d334:	movne	r3, #0
   2d338:	moveq	r3, #1
   2d33c:	add	fp, ip, r3
   2d340:	cmp	r0, fp
   2d344:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d348:	ldrb	r2, [ip, r3]
   2d34c:	sub	r3, r2, #48	; 0x30
   2d350:	cmp	r3, #9
   2d354:	bhi	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d358:	uxtb	r2, r2
   2d35c:	mov	r3, #0
   2d360:	str	fp, [sp, #16]
   2d364:	subs	r4, r2, #48	; 0x30
   2d368:	add	r1, fp, #1
   2d36c:	str	ip, [sp, #32]
   2d370:	sbc	r5, r3, #0
   2d374:	b	2d3ac <__flatcc_error_report@@Base+0xe54>
   2d378:	adds	r3, r3, r4
   2d37c:	adc	r2, r2, r5
   2d380:	adds	r3, r3, r3
   2d384:	adc	r2, r2, r2
   2d388:	subs	sl, r3, #48	; 0x30
   2d38c:	sbc	fp, r2, #0
   2d390:	adds	r2, sl, lr
   2d394:	adc	r3, fp, #0
   2d398:	cmp	r3, r5
   2d39c:	mov	r5, r3
   2d3a0:	cmpeq	r2, r4
   2d3a4:	mov	r4, r2
   2d3a8:	bcc	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d3ac:	cmp	r0, r1
   2d3b0:	lsl	r2, r5, #2
   2d3b4:	mov	ip, r1
   2d3b8:	lsl	r3, r4, #2
   2d3bc:	beq	2d52c <__flatcc_error_report@@Base+0xfd4>
   2d3c0:	ldrb	lr, [r1], #1
   2d3c4:	orr	r2, r2, r4, lsr #30
   2d3c8:	sub	r9, lr, #48	; 0x30
   2d3cc:	cmp	r9, #9
   2d3d0:	bls	2d378 <__flatcc_error_report@@Base+0xe20>
   2d3d4:	mov	sl, ip
   2d3d8:	ldr	fp, [sp, #16]
   2d3dc:	ldr	ip, [sp, #32]
   2d3e0:	cmp	ip, sl
   2d3e4:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d3e8:	cmp	fp, sl
   2d3ec:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d3f0:	cmp	lr, #80	; 0x50
   2d3f4:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d3f8:	bhi	2d568 <__flatcc_error_report@@Base+0x1010>
   2d3fc:	cmp	lr, #46	; 0x2e
   2d400:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d404:	cmp	lr, #69	; 0x45
   2d408:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d40c:	ldr	r3, [sp, #20]
   2d410:	strd	r4, [r8]
   2d414:	cmp	r3, #45	; 0x2d
   2d418:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d41c:	ldr	r3, [sp, #8]
   2d420:	cmp	r3, #0
   2d424:	beq	2d044 <__flatcc_error_report@@Base+0xaec>
   2d428:	ldrd	r2, [r8]
   2d42c:	mov	r1, #4
   2d430:	strh	r1, [r8, #8]
   2d434:	rsbs	r2, r2, #0
   2d438:	rsc	r3, r3, #0
   2d43c:	strd	r2, [r8]
   2d440:	b	2d044 <__flatcc_error_report@@Base+0xaec>
   2d444:	ldrb	r1, [r0]
   2d448:	sub	r0, r1, #48	; 0x30
   2d44c:	cmp	r0, #9
   2d450:	bls	2d468 <__flatcc_error_report@@Base+0xf10>
   2d454:	orr	r1, r1, #32
   2d458:	sub	r0, r1, #97	; 0x61
   2d45c:	uxtb	r0, r0
   2d460:	cmp	r0, #5
   2d464:	bhi	2d5e8 <__flatcc_error_report@@Base+0x1090>
   2d468:	mov	r0, #0
   2d46c:	mov	ip, #1
   2d470:	mov	r3, r0
   2d474:	movw	r2, #33656	; 0x8378
   2d478:	movt	r2, #5
   2d47c:	mov	r1, r6
   2d480:	str	r0, [sp]
   2d484:	str	r0, [sp, #4]
   2d488:	mov	r0, r7
   2d48c:	strh	ip, [r8, #8]
   2d490:	bl	2c558 <__flatcc_error_report@@Base>
   2d494:	cmp	r4, #0
   2d498:	beq	2d044 <__flatcc_error_report@@Base+0xaec>
   2d49c:	b	2d428 <__flatcc_error_report@@Base+0xed0>
   2d4a0:	mov	ip, #1
   2d4a4:	mov	r2, fp
   2d4a8:	str	r3, [sp]
   2d4ac:	mov	r1, r6
   2d4b0:	mov	r0, r7
   2d4b4:	str	r3, [sp, #4]
   2d4b8:	strh	ip, [r8, #8]
   2d4bc:	bl	2c558 <__flatcc_error_report@@Base>
   2d4c0:	b	2d114 <__flatcc_error_report@@Base+0xbbc>
   2d4c4:	mov	r0, #0
   2d4c8:	movw	r2, #33732	; 0x83c4
   2d4cc:	movt	r2, #5
   2d4d0:	mov	ip, #1
   2d4d4:	mov	r3, r0
   2d4d8:	b	2cfe0 <__flatcc_error_report@@Base+0xa88>
   2d4dc:	mov	r3, #0
   2d4e0:	strb	r3, [r8]
   2d4e4:	mov	r2, #0
   2d4e8:	mov	r0, #1
   2d4ec:	mov	r3, r2
   2d4f0:	mov	r1, r9
   2d4f4:	str	r2, [sp]
   2d4f8:	str	r2, [sp, #4]
   2d4fc:	movw	r2, #33808	; 0x8410
   2d500:	movt	r2, #5
   2d504:	strh	r0, [r8, #8]
   2d508:	mov	r0, r7
   2d50c:	bl	2c558 <__flatcc_error_report@@Base>
   2d510:	b	2d044 <__flatcc_error_report@@Base+0xaec>
   2d514:	mov	r3, #1
   2d518:	strb	r3, [r8]
   2d51c:	b	2d4e4 <__flatcc_error_report@@Base+0xf8c>
   2d520:	str	r6, [sp, #8]
   2d524:	mov	r6, r9
   2d528:	b	2d30c <__flatcc_error_report@@Base+0xdb4>
   2d52c:	ldr	fp, [sp, #16]
   2d530:	cmp	fp, r0
   2d534:	bne	2d40c <__flatcc_error_report@@Base+0xeb4>
   2d538:	mov	r0, #0
   2d53c:	mov	ip, #1
   2d540:	mov	r3, r0
   2d544:	mov	r1, r6
   2d548:	movw	r2, #33684	; 0x8394
   2d54c:	movt	r2, #5
   2d550:	str	r0, [sp]
   2d554:	str	r0, [sp, #4]
   2d558:	mov	r0, r7
   2d55c:	strh	ip, [r8, #8]
   2d560:	bl	2c558 <__flatcc_error_report@@Base>
   2d564:	b	2d41c <__flatcc_error_report@@Base+0xec4>
   2d568:	cmp	lr, #101	; 0x65
   2d56c:	beq	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d570:	cmp	lr, #112	; 0x70
   2d574:	bne	2d40c <__flatcc_error_report@@Base+0xeb4>
   2d578:	b	2d538 <__flatcc_error_report@@Base+0xfe0>
   2d57c:	ldr	r1, [sp, #20]
   2d580:	ldrd	r6, [sp, #36]	; 0x24
   2d584:	ldr	r4, [sp, #48]	; 0x30
   2d588:	cmp	r1, r0
   2d58c:	ldr	r8, [sp, #52]	; 0x34
   2d590:	bne	2d444 <__flatcc_error_report@@Base+0xeec>
   2d594:	strd	r2, [r8]
   2d598:	ldr	r1, [sp, #32]
   2d59c:	cmp	r1, #45	; 0x2d
   2d5a0:	bne	2d494 <__flatcc_error_report@@Base+0xf3c>
   2d5a4:	b	2d468 <__flatcc_error_report@@Base+0xf10>
   2d5a8:	mov	r2, r0
   2d5ac:	str	r0, [sp, #16]
   2d5b0:	b	2d238 <__flatcc_error_report@@Base+0xce0>
   2d5b4:	ldr	r1, [sp, #24]
   2d5b8:	ldrd	r6, [sp, #36]	; 0x24
   2d5bc:	ldr	r4, [sp, #48]	; 0x30
   2d5c0:	cmp	fp, r1
   2d5c4:	ldr	r8, [sp, #52]	; 0x34
   2d5c8:	beq	2d468 <__flatcc_error_report@@Base+0xf10>
   2d5cc:	ldr	r0, [sp, #20]
   2d5d0:	cmp	fp, r0
   2d5d4:	beq	2d594 <__flatcc_error_report@@Base+0x103c>
   2d5d8:	ldr	r0, [sp, #16]
   2d5dc:	ldrb	r1, [fp]
   2d5e0:	cmp	fp, r0
   2d5e4:	beq	2d448 <__flatcc_error_report@@Base+0xef0>
   2d5e8:	cmp	r1, #80	; 0x50
   2d5ec:	beq	2d468 <__flatcc_error_report@@Base+0xf10>
   2d5f0:	cmp	r1, #112	; 0x70
   2d5f4:	beq	2d468 <__flatcc_error_report@@Base+0xf10>
   2d5f8:	cmp	r1, #46	; 0x2e
   2d5fc:	bne	2d594 <__flatcc_error_report@@Base+0x103c>
   2d600:	b	2d468 <__flatcc_error_report@@Base+0xf10>
   2d604:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2d608:	strd	r6, [sp, #8]
   2d60c:	ldr	r6, [r0, #40]	; 0x28
   2d610:	strd	r8, [sp, #16]
   2d614:	str	sl, [sp, #24]
   2d618:	str	lr, [sp, #28]
   2d61c:	sub	sp, sp, #8
   2d620:	ldr	r3, [r6, #16]
   2d624:	cmp	r3, #40	; 0x28
   2d628:	beq	2d650 <__flatcc_error_report@@Base+0x10f8>
   2d62c:	mov	r4, #0
   2d630:	mov	r0, r4
   2d634:	add	sp, sp, #8
   2d638:	ldrd	r4, [sp]
   2d63c:	ldrd	r6, [sp, #8]
   2d640:	ldrd	r8, [sp, #16]
   2d644:	ldr	sl, [sp, #24]
   2d648:	add	sp, sp, #28
   2d64c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d650:	mov	r5, r0
   2d654:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d658:	ldr	r7, [r5, #40]	; 0x28
   2d65c:	ldr	r3, [r7, #16]
   2d660:	cmp	r3, #9
   2d664:	movne	r4, #0
   2d668:	beq	2d6d4 <__flatcc_error_report@@Base+0x117c>
   2d66c:	mov	r2, #0
   2d670:	cmp	r3, #41	; 0x29
   2d674:	str	r2, [r5, #36]	; 0x24
   2d678:	bne	2d6b0 <__flatcc_error_report@@Base+0x1158>
   2d67c:	mov	r0, r5
   2d680:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d684:	cmp	r4, #0
   2d688:	beq	2d62c <__flatcc_error_report@@Base+0x10d4>
   2d68c:	mov	r2, #0
   2d690:	b	2d698 <__flatcc_error_report@@Base+0x1140>
   2d694:	mov	r4, r3
   2d698:	ldr	r3, [r4]
   2d69c:	str	r2, [r4]
   2d6a0:	mov	r2, r4
   2d6a4:	cmp	r3, #0
   2d6a8:	bne	2d694 <__flatcc_error_report@@Base+0x113c>
   2d6ac:	b	2d630 <__flatcc_error_report@@Base+0x10d8>
   2d6b0:	mov	r3, r6
   2d6b4:	mov	r1, r7
   2d6b8:	str	r2, [sp]
   2d6bc:	mov	r0, r5
   2d6c0:	str	r2, [sp, #4]
   2d6c4:	movw	r2, #33956	; 0x84a4
   2d6c8:	movt	r2, #5
   2d6cc:	bl	2c558 <__flatcc_error_report@@Base>
   2d6d0:	b	2d684 <__flatcc_error_report@@Base+0x112c>
   2d6d4:	mov	r0, r5
   2d6d8:	movw	r9, #33876	; 0x8454
   2d6dc:	movt	r9, #5
   2d6e0:	mov	sl, #0
   2d6e4:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d6e8:	ldr	r2, [r5, #44]	; 0x2c
   2d6ec:	ldr	r8, [r5, #52]	; 0x34
   2d6f0:	add	r3, r8, #32
   2d6f4:	cmp	r3, r2
   2d6f8:	bhi	2d77c <__flatcc_error_report@@Base+0x1224>
   2d6fc:	ldr	r2, [r5, #40]	; 0x28
   2d700:	mov	r4, r8
   2d704:	str	r3, [r5, #52]	; 0x34
   2d708:	str	sl, [r8]
   2d70c:	str	r7, [r8, #4]
   2d710:	ldr	r3, [r2, #16]
   2d714:	cmp	r3, #58	; 0x3a
   2d718:	bne	2d738 <__flatcc_error_report@@Base+0x11e0>
   2d71c:	mov	r0, r5
   2d720:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d724:	mov	r3, r9
   2d728:	mov	r2, #1
   2d72c:	add	r1, r8, #8
   2d730:	mov	r0, r5
   2d734:	bl	2cf40 <__flatcc_error_report@@Base+0x9e8>
   2d738:	ldr	r3, [r5, #108]	; 0x6c
   2d73c:	cmp	r3, #9
   2d740:	bgt	2d630 <__flatcc_error_report@@Base+0x10d8>
   2d744:	ldr	r7, [r5, #40]	; 0x28
   2d748:	ldr	r3, [r7, #16]
   2d74c:	cmp	r3, #44	; 0x2c
   2d750:	bne	2d66c <__flatcc_error_report@@Base+0x1114>
   2d754:	mov	r0, r5
   2d758:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d75c:	ldr	r7, [r5, #40]	; 0x28
   2d760:	ldr	r3, [r7, #16]
   2d764:	cmp	r3, #9
   2d768:	bne	2d7b0 <__flatcc_error_report@@Base+0x1258>
   2d76c:	mov	r0, r5
   2d770:	mov	sl, r8
   2d774:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d778:	b	2d6e8 <__flatcc_error_report@@Base+0x1190>
   2d77c:	mov	r1, #1
   2d780:	mov	r0, #65536	; 0x10000
   2d784:	bl	13f7c <calloc@plt>
   2d788:	cmp	r0, #0
   2d78c:	beq	2d7e0 <__flatcc_error_report@@Base+0x1288>
   2d790:	ldr	r2, [r5, #48]	; 0x30
   2d794:	add	r1, r0, #65536	; 0x10000
   2d798:	add	r8, r0, #16
   2d79c:	add	r3, r0, #48	; 0x30
   2d7a0:	str	r1, [r5, #44]	; 0x2c
   2d7a4:	str	r0, [r5, #48]	; 0x30
   2d7a8:	str	r2, [r0]
   2d7ac:	b	2d6fc <__flatcc_error_report@@Base+0x11a4>
   2d7b0:	mov	ip, #0
   2d7b4:	mov	r1, r7
   2d7b8:	mov	r3, ip
   2d7bc:	movw	r2, #33908	; 0x8474
   2d7c0:	movt	r2, #5
   2d7c4:	mov	r0, r5
   2d7c8:	str	ip, [sp]
   2d7cc:	str	ip, [sp, #4]
   2d7d0:	bl	2c558 <__flatcc_error_report@@Base>
   2d7d4:	ldr	r7, [r5, #40]	; 0x28
   2d7d8:	ldr	r3, [r7, #16]
   2d7dc:	b	2d66c <__flatcc_error_report@@Base+0x1114>
   2d7e0:	bl	2c26c <__flatcc_fb_default_error_out@@Base+0x20>
   2d7e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2d7e8:	mov	r4, r0
   2d7ec:	ldr	r5, [r0, #40]	; 0x28
   2d7f0:	ldr	r3, [r5, #16]
   2d7f4:	strd	r6, [sp, #8]
   2d7f8:	strd	r8, [sp, #16]
   2d7fc:	strd	sl, [sp, #24]
   2d800:	str	lr, [sp, #32]
   2d804:	sub	sp, sp, #20
   2d808:	cmp	r3, #9
   2d80c:	bne	2dd48 <__flatcc_error_report@@Base+0x17f0>
   2d810:	mov	r7, r1
   2d814:	mov	r8, r2
   2d818:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d81c:	mov	r0, r4
   2d820:	str	r5, [r7, #4]
   2d824:	bl	2d604 <__flatcc_error_report@@Base+0x10ac>
   2d828:	ldr	r1, [r4, #40]	; 0x28
   2d82c:	ldr	r3, [r1, #16]
   2d830:	str	r0, [r7, #28]
   2d834:	cmp	r3, #123	; 0x7b
   2d838:	bne	2d9a8 <__flatcc_error_report@@Base+0x1450>
   2d83c:	mov	r0, r4
   2d840:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d844:	ldr	sl, [r4, #40]	; 0x28
   2d848:	ldr	fp, [sl, #16]
   2d84c:	cmp	fp, #125	; 0x7d
   2d850:	beq	2dd0c <__flatcc_error_report@@Base+0x17b4>
   2d854:	movw	r3, #34288	; 0x85f0
   2d858:	movt	r3, #5
   2d85c:	movw	r9, #64569	; 0xfc39
   2d860:	movt	r9, #65535	; 0xffff
   2d864:	str	r3, [sp, #8]
   2d868:	movw	r3, #34316	; 0x860c
   2d86c:	movt	r3, #5
   2d870:	str	r3, [sp, #12]
   2d874:	cmp	r8, r9
   2d878:	ldr	r0, [r4, #44]	; 0x2c
   2d87c:	ldr	r5, [r4, #52]	; 0x34
   2d880:	add	r1, r5, #128	; 0x80
   2d884:	beq	2da20 <__flatcc_error_report@@Base+0x14c8>
   2d888:	cmp	r0, r1
   2d88c:	bcc	2dc2c <__flatcc_error_report@@Base+0x16d4>
   2d890:	ldr	r0, [r7, #20]
   2d894:	mov	ip, #5
   2d898:	str	r1, [r4, #52]	; 0x34
   2d89c:	str	r0, [r5]
   2d8a0:	strh	ip, [r5, #8]
   2d8a4:	str	r5, [r7, #20]
   2d8a8:	ldr	r1, [r4, #36]	; 0x24
   2d8ac:	cmp	r1, #0
   2d8b0:	beq	2d8d4 <__flatcc_error_report@@Base+0x137c>
   2d8b4:	mov	ip, #0
   2d8b8:	b	2d8c0 <__flatcc_error_report@@Base+0x1368>
   2d8bc:	mov	r1, r0
   2d8c0:	ldr	r0, [r1]
   2d8c4:	str	ip, [r1]
   2d8c8:	mov	ip, r1
   2d8cc:	cmp	r0, #0
   2d8d0:	bne	2d8bc <__flatcc_error_report@@Base+0x1364>
   2d8d4:	mov	r6, #0
   2d8d8:	cmp	fp, #9
   2d8dc:	str	r1, [r5, #68]	; 0x44
   2d8e0:	str	r6, [r4, #36]	; 0x24
   2d8e4:	bne	2db58 <__flatcc_error_report@@Base+0x1600>
   2d8e8:	mov	r0, r4
   2d8ec:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d8f0:	ldr	r1, [r4, #40]	; 0x28
   2d8f4:	ldr	r3, [r1, #16]
   2d8f8:	str	sl, [r5, #4]
   2d8fc:	cmp	r3, #58	; 0x3a
   2d900:	bne	2dc60 <__flatcc_error_report@@Base+0x1708>
   2d904:	mov	r0, r4
   2d908:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d90c:	add	r1, r5, #16
   2d910:	mov	r0, r4
   2d914:	bl	2c94c <__flatcc_error_report@@Base+0x3f4>
   2d918:	ldr	r3, [r4, #40]	; 0x28
   2d91c:	ldr	r3, [r3, #16]
   2d920:	cmp	r3, #61	; 0x3d
   2d924:	bne	2d948 <__flatcc_error_report@@Base+0x13f0>
   2d928:	mov	r0, r4
   2d92c:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d930:	movw	r3, #34360	; 0x8638
   2d934:	movt	r3, #5
   2d938:	mov	r2, #2
   2d93c:	add	r1, r5, #48	; 0x30
   2d940:	mov	r0, r4
   2d944:	bl	2cf40 <__flatcc_error_report@@Base+0x9e8>
   2d948:	mov	r0, r4
   2d94c:	bl	2d604 <__flatcc_error_report@@Base+0x10ac>
   2d950:	ldr	r1, [r4, #40]	; 0x28
   2d954:	mov	ip, #0
   2d958:	ldr	r3, [r1, #16]
   2d95c:	str	r0, [r5, #64]	; 0x40
   2d960:	str	ip, [r4, #36]	; 0x24
   2d964:	cmp	r3, #59	; 0x3b
   2d968:	beq	2db44 <__flatcc_error_report@@Base+0x15ec>
   2d96c:	mov	r3, ip
   2d970:	movw	r2, #34396	; 0x865c
   2d974:	movt	r2, #5
   2d978:	mov	r0, r4
   2d97c:	str	ip, [sp]
   2d980:	str	ip, [sp, #4]
   2d984:	bl	2c558 <__flatcc_error_report@@Base>
   2d988:	ldr	sl, [r4, #40]	; 0x28
   2d98c:	ldr	fp, [sl, #16]
   2d990:	ldr	r1, [r4, #108]	; 0x6c
   2d994:	cmp	r1, #9
   2d998:	bgt	2d9d0 <__flatcc_error_report@@Base+0x1478>
   2d99c:	cmp	fp, #125	; 0x7d
   2d9a0:	bne	2d874 <__flatcc_error_report@@Base+0x131c>
   2d9a4:	b	2dd0c <__flatcc_error_report@@Base+0x17b4>
   2d9a8:	mov	ip, #0
   2d9ac:	movw	r2, #34024	; 0x84e8
   2d9b0:	movt	r2, #5
   2d9b4:	mov	r3, ip
   2d9b8:	mov	r0, r4
   2d9bc:	str	ip, [sp]
   2d9c0:	str	ip, [sp, #4]
   2d9c4:	bl	2c558 <__flatcc_error_report@@Base>
   2d9c8:	ldr	r3, [r4, #40]	; 0x28
   2d9cc:	ldr	fp, [r3, #16]
   2d9d0:	cmp	fp, #0
   2d9d4:	beq	2da04 <__flatcc_error_report@@Base+0x14ac>
   2d9d8:	cmp	fp, #125	; 0x7d
   2d9dc:	bne	2d9ec <__flatcc_error_report@@Base+0x1494>
   2d9e0:	b	2dcc4 <__flatcc_error_report@@Base+0x176c>
   2d9e4:	cmp	r3, #125	; 0x7d
   2d9e8:	beq	2dcc4 <__flatcc_error_report@@Base+0x176c>
   2d9ec:	mov	r0, r4
   2d9f0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2d9f4:	ldr	r3, [r4, #40]	; 0x28
   2d9f8:	ldr	r3, [r3, #16]
   2d9fc:	cmp	r3, #0
   2da00:	bne	2d9e4 <__flatcc_error_report@@Base+0x148c>
   2da04:	add	sp, sp, #20
   2da08:	ldrd	r4, [sp]
   2da0c:	ldrd	r6, [sp, #8]
   2da10:	ldrd	r8, [sp, #16]
   2da14:	ldrd	sl, [sp, #24]
   2da18:	add	sp, sp, #32
   2da1c:	pop	{pc}		; (ldr pc, [sp], #4)
   2da20:	cmp	r0, r1
   2da24:	bcc	2dc7c <__flatcc_error_report@@Base+0x1724>
   2da28:	ldr	r0, [r7, #20]
   2da2c:	mov	ip, #5
   2da30:	str	r1, [r4, #52]	; 0x34
   2da34:	str	r0, [r5]
   2da38:	strh	ip, [r5, #8]
   2da3c:	str	r5, [r7, #20]
   2da40:	ldr	r1, [r4, #36]	; 0x24
   2da44:	cmp	r1, #0
   2da48:	beq	2da6c <__flatcc_error_report@@Base+0x1514>
   2da4c:	mov	ip, #0
   2da50:	b	2da58 <__flatcc_error_report@@Base+0x1500>
   2da54:	mov	r1, r0
   2da58:	ldr	r0, [r1]
   2da5c:	str	ip, [r1]
   2da60:	mov	ip, r1
   2da64:	cmp	r0, #0
   2da68:	bne	2da54 <__flatcc_error_report@@Base+0x14fc>
   2da6c:	mov	r6, #0
   2da70:	cmp	fp, #9
   2da74:	str	r1, [r5, #68]	; 0x44
   2da78:	str	r6, [r4, #36]	; 0x24
   2da7c:	bne	2dbcc <__flatcc_error_report@@Base+0x1674>
   2da80:	mov	r0, r4
   2da84:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2da88:	ldr	r1, [r4, #40]	; 0x28
   2da8c:	ldr	r3, [r1, #16]
   2da90:	str	sl, [r5, #4]
   2da94:	cmp	r3, #40	; 0x28
   2da98:	bne	2dcd8 <__flatcc_error_report@@Base+0x1780>
   2da9c:	mov	r0, r4
   2daa0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2daa4:	add	r1, r5, #32
   2daa8:	mov	r0, r4
   2daac:	bl	2c94c <__flatcc_error_report@@Base+0x3f4>
   2dab0:	ldr	r1, [r4, #40]	; 0x28
   2dab4:	ldr	r3, [r1, #16]
   2dab8:	cmp	r3, #41	; 0x29
   2dabc:	bne	2dd74 <__flatcc_error_report@@Base+0x181c>
   2dac0:	mov	r0, r4
   2dac4:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2dac8:	ldr	r1, [r4, #40]	; 0x28
   2dacc:	ldr	r3, [r1, #16]
   2dad0:	cmp	r3, #58	; 0x3a
   2dad4:	bne	2dd94 <__flatcc_error_report@@Base+0x183c>
   2dad8:	mov	r0, r4
   2dadc:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2dae0:	add	r1, r5, #16
   2dae4:	mov	r0, r4
   2dae8:	bl	2c94c <__flatcc_error_report@@Base+0x3f4>
   2daec:	ldr	sl, [r4, #40]	; 0x28
   2daf0:	ldr	r3, [sl, #16]
   2daf4:	cmp	r3, #61	; 0x3d
   2daf8:	beq	2ddb4 <__flatcc_error_report@@Base+0x185c>
   2dafc:	mov	r0, r4
   2db00:	bl	2d604 <__flatcc_error_report@@Base+0x10ac>
   2db04:	ldr	r1, [r4, #40]	; 0x28
   2db08:	ldr	r3, [r1, #16]
   2db0c:	str	r0, [r5, #64]	; 0x40
   2db10:	str	r6, [r4, #36]	; 0x24
   2db14:	cmp	r3, #59	; 0x3b
   2db18:	beq	2db44 <__flatcc_error_report@@Base+0x15ec>
   2db1c:	mov	r3, r6
   2db20:	movw	r2, #34212	; 0x85a4
   2db24:	movt	r2, #5
   2db28:	mov	r0, r4
   2db2c:	str	r6, [sp]
   2db30:	str	r6, [sp, #4]
   2db34:	bl	2c558 <__flatcc_error_report@@Base>
   2db38:	ldr	sl, [r4, #40]	; 0x28
   2db3c:	ldr	fp, [sl, #16]
   2db40:	b	2d990 <__flatcc_error_report@@Base+0x1438>
   2db44:	mov	r0, r4
   2db48:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2db4c:	ldr	sl, [r4, #40]	; 0x28
   2db50:	ldr	fp, [sl, #16]
   2db54:	b	2d990 <__flatcc_error_report@@Base+0x1438>
   2db58:	mov	r3, r6
   2db5c:	mov	r1, sl
   2db60:	str	r6, [sp]
   2db64:	mov	r0, r4
   2db68:	str	r6, [sp, #4]
   2db6c:	ldr	r2, [sp, #8]
   2db70:	bl	2c558 <__flatcc_error_report@@Base>
   2db74:	ldr	sl, [r4, #40]	; 0x28
   2db78:	ldr	r3, [sl, #16]
   2db7c:	cmp	r3, #0
   2db80:	bne	2dba8 <__flatcc_error_report@@Base+0x1650>
   2db84:	b	2dc18 <__flatcc_error_report@@Base+0x16c0>
   2db88:	cmp	r3, #125	; 0x7d
   2db8c:	beq	2dcb0 <__flatcc_error_report@@Base+0x1758>
   2db90:	mov	r0, r4
   2db94:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2db98:	ldr	sl, [r4, #40]	; 0x28
   2db9c:	ldr	r3, [sl, #16]
   2dba0:	cmp	r3, #0
   2dba4:	beq	2dc18 <__flatcc_error_report@@Base+0x16c0>
   2dba8:	cmp	r3, #59	; 0x3b
   2dbac:	bne	2db88 <__flatcc_error_report@@Base+0x1630>
   2dbb0:	mov	r0, r4
   2dbb4:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2dbb8:	ldr	sl, [r4, #40]	; 0x28
   2dbbc:	mov	r3, #0
   2dbc0:	ldr	fp, [sl, #16]
   2dbc4:	str	r3, [r4, #36]	; 0x24
   2dbc8:	b	2d990 <__flatcc_error_report@@Base+0x1438>
   2dbcc:	mov	r3, r6
   2dbd0:	mov	r1, sl
   2dbd4:	str	r6, [sp]
   2dbd8:	movw	r2, #34052	; 0x8504
   2dbdc:	movt	r2, #5
   2dbe0:	str	r6, [sp, #4]
   2dbe4:	mov	r0, r4
   2dbe8:	bl	2c558 <__flatcc_error_report@@Base>
   2dbec:	b	2dc08 <__flatcc_error_report@@Base+0x16b0>
   2dbf0:	cmp	r3, #59	; 0x3b
   2dbf4:	beq	2dbb0 <__flatcc_error_report@@Base+0x1658>
   2dbf8:	cmp	r3, #125	; 0x7d
   2dbfc:	beq	2dcf8 <__flatcc_error_report@@Base+0x17a0>
   2dc00:	mov	r0, r4
   2dc04:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2dc08:	ldr	sl, [r4, #40]	; 0x28
   2dc0c:	ldr	r3, [sl, #16]
   2dc10:	cmp	r3, #0
   2dc14:	bne	2dbf0 <__flatcc_error_report@@Base+0x1698>
   2dc18:	ldr	r3, [r4, #108]	; 0x6c
   2dc1c:	cmp	r3, #9
   2dc20:	bgt	2da04 <__flatcc_error_report@@Base+0x14ac>
   2dc24:	mov	fp, #0
   2dc28:	b	2d874 <__flatcc_error_report@@Base+0x131c>
   2dc2c:	mov	r1, #1
   2dc30:	mov	r0, #65536	; 0x10000
   2dc34:	bl	13f7c <calloc@plt>
   2dc38:	cmp	r0, #0
   2dc3c:	beq	2dde0 <__flatcc_error_report@@Base+0x1888>
   2dc40:	ldr	ip, [r4, #48]	; 0x30
   2dc44:	add	lr, r0, #65536	; 0x10000
   2dc48:	add	r5, r0, #16
   2dc4c:	add	r1, r0, #144	; 0x90
   2dc50:	str	lr, [r4, #44]	; 0x2c
   2dc54:	str	r0, [r4, #48]	; 0x30
   2dc58:	str	ip, [r0]
   2dc5c:	b	2d890 <__flatcc_error_report@@Base+0x1338>
   2dc60:	mov	r3, r6
   2dc64:	mov	r0, r4
   2dc68:	str	r6, [sp]
   2dc6c:	str	r6, [sp, #4]
   2dc70:	ldr	r2, [sp, #12]
   2dc74:	bl	2c558 <__flatcc_error_report@@Base>
   2dc78:	b	2db74 <__flatcc_error_report@@Base+0x161c>
   2dc7c:	mov	r1, #1
   2dc80:	mov	r0, #65536	; 0x10000
   2dc84:	bl	13f7c <calloc@plt>
   2dc88:	cmp	r0, #0
   2dc8c:	beq	2dde0 <__flatcc_error_report@@Base+0x1888>
   2dc90:	ldr	ip, [r4, #48]	; 0x30
   2dc94:	add	lr, r0, #65536	; 0x10000
   2dc98:	add	r5, r0, #16
   2dc9c:	add	r1, r0, #144	; 0x90
   2dca0:	str	lr, [r4, #44]	; 0x2c
   2dca4:	str	r0, [r4, #48]	; 0x30
   2dca8:	str	ip, [r0]
   2dcac:	b	2da28 <__flatcc_error_report@@Base+0x14d0>
   2dcb0:	ldr	r3, [r4, #108]	; 0x6c
   2dcb4:	mov	r2, #0
   2dcb8:	str	r2, [r4, #36]	; 0x24
   2dcbc:	cmp	r3, #9
   2dcc0:	ble	2dd0c <__flatcc_error_report@@Base+0x17b4>
   2dcc4:	mov	r0, r4
   2dcc8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2dccc:	mov	r3, #0
   2dcd0:	str	r3, [r4, #36]	; 0x24
   2dcd4:	b	2da04 <__flatcc_error_report@@Base+0x14ac>
   2dcd8:	mov	r3, r6
   2dcdc:	movw	r2, #34080	; 0x8520
   2dce0:	movt	r2, #5
   2dce4:	mov	r0, r4
   2dce8:	str	r6, [sp]
   2dcec:	str	r6, [sp, #4]
   2dcf0:	bl	2c558 <__flatcc_error_report@@Base>
   2dcf4:	b	2dc08 <__flatcc_error_report@@Base+0x16b0>
   2dcf8:	ldr	r3, [r4, #108]	; 0x6c
   2dcfc:	mov	r2, #0
   2dd00:	str	r2, [r4, #36]	; 0x24
   2dd04:	cmp	r3, #9
   2dd08:	bgt	2dcc4 <__flatcc_error_report@@Base+0x176c>
   2dd0c:	mov	r0, r4
   2dd10:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2dd14:	ldr	r3, [r7, #20]
   2dd18:	cmp	r3, #0
   2dd1c:	beq	2dd40 <__flatcc_error_report@@Base+0x17e8>
   2dd20:	mov	r1, #0
   2dd24:	b	2dd2c <__flatcc_error_report@@Base+0x17d4>
   2dd28:	mov	r3, r2
   2dd2c:	ldr	r2, [r3]
   2dd30:	str	r1, [r3]
   2dd34:	mov	r1, r3
   2dd38:	cmp	r2, #0
   2dd3c:	bne	2dd28 <__flatcc_error_report@@Base+0x17d0>
   2dd40:	str	r3, [r7, #20]
   2dd44:	b	2da04 <__flatcc_error_report@@Base+0x14ac>
   2dd48:	mov	ip, #0
   2dd4c:	mov	r1, r5
   2dd50:	mov	r3, ip
   2dd54:	movw	r2, #33988	; 0x84c4
   2dd58:	movt	r2, #5
   2dd5c:	str	ip, [sp]
   2dd60:	str	ip, [sp, #4]
   2dd64:	bl	2c558 <__flatcc_error_report@@Base>
   2dd68:	ldr	r3, [r4, #40]	; 0x28
   2dd6c:	ldr	fp, [r3, #16]
   2dd70:	b	2d9d0 <__flatcc_error_report@@Base+0x1478>
   2dd74:	mov	r3, r6
   2dd78:	movw	r2, #34120	; 0x8548
   2dd7c:	movt	r2, #5
   2dd80:	mov	r0, r4
   2dd84:	str	r6, [sp]
   2dd88:	str	r6, [sp, #4]
   2dd8c:	bl	2c558 <__flatcc_error_report@@Base>
   2dd90:	b	2dc08 <__flatcc_error_report@@Base+0x16b0>
   2dd94:	mov	r3, r6
   2dd98:	movw	r2, #34160	; 0x8570
   2dd9c:	movt	r2, #5
   2dda0:	mov	r0, r4
   2dda4:	str	r6, [sp]
   2dda8:	str	r6, [sp, #4]
   2ddac:	bl	2c558 <__flatcc_error_report@@Base>
   2ddb0:	b	2dc08 <__flatcc_error_report@@Base+0x16b0>
   2ddb4:	mov	r0, r4
   2ddb8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ddbc:	mov	r3, r6
   2ddc0:	mov	r1, sl
   2ddc4:	str	r6, [sp]
   2ddc8:	movw	r2, #34248	; 0x85c8
   2ddcc:	movt	r2, #5
   2ddd0:	str	r6, [sp, #4]
   2ddd4:	mov	r0, r4
   2ddd8:	bl	2c558 <__flatcc_error_report@@Base>
   2dddc:	b	2dc08 <__flatcc_error_report@@Base+0x16b0>
   2dde0:	bl	2c26c <__flatcc_fb_default_error_out@@Base+0x20>

0002dde4 <error_ref_sym@@Base>:
   2dde4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2dde8:	strd	r6, [sp, #8]
   2ddec:	strd	r8, [sp, #16]
   2ddf0:	mov	r9, r3
   2ddf4:	strd	sl, [sp, #24]
   2ddf8:	subs	sl, r1, #0
   2ddfc:	str	lr, [sp, #32]
   2de00:	sub	sp, sp, #76	; 0x4c
   2de04:	str	r0, [sp, #8]
   2de08:	str	r2, [sp, #12]
   2de0c:	beq	2deec <error_ref_sym@@Base+0x108>
   2de10:	mov	r6, sl
   2de14:	mov	fp, #0
   2de18:	mov	r4, #50	; 0x32
   2de1c:	add	r7, sp, #20
   2de20:	mov	r8, #46	; 0x2e
   2de24:	ldr	r3, [r6, #4]
   2de28:	add	r0, r7, fp
   2de2c:	ldm	r3, {r1, r5}
   2de30:	cmp	r5, r4
   2de34:	movge	r5, r4
   2de38:	mov	r2, r5
   2de3c:	bl	13fb8 <memcpy@plt>
   2de40:	add	ip, r5, fp
   2de44:	add	r3, sp, #72	; 0x48
   2de48:	add	r3, r3, ip
   2de4c:	sub	r5, r4, r5
   2de50:	sub	r4, r5, #1
   2de54:	add	fp, ip, #1
   2de58:	strb	r8, [r3, #-52]	; 0xffffffcc
   2de5c:	cmp	r4, #0
   2de60:	ldr	r6, [r6]
   2de64:	movle	r2, #0
   2de68:	movgt	r2, #1
   2de6c:	cmp	r6, #0
   2de70:	moveq	r2, #0
   2de74:	cmp	r2, #0
   2de78:	bne	2de24 <error_ref_sym@@Base+0x40>
   2de7c:	add	r3, sp, #72	; 0x48
   2de80:	cmp	fp, #0
   2de84:	add	r1, r3, fp
   2de88:	movle	ip, fp
   2de8c:	cmp	r4, #0
   2de90:	strb	r2, [r1, #-52]	; 0xffffffcc
   2de94:	ble	2ded4 <error_ref_sym@@Base+0xf0>
   2de98:	cmp	r9, #0
   2de9c:	ldr	r1, [sl, #4]
   2dea0:	ldrne	r9, [r9, #4]
   2dea4:	stm	sp, {r7, ip}
   2dea8:	ldr	r0, [sp, #8]
   2deac:	ldr	r2, [sp, #12]
   2deb0:	mov	r3, r9
   2deb4:	bl	2c558 <__flatcc_error_report@@Base>
   2deb8:	add	sp, sp, #76	; 0x4c
   2debc:	ldrd	r4, [sp]
   2dec0:	ldrd	r6, [sp, #8]
   2dec4:	ldrd	r8, [sp, #16]
   2dec8:	ldrd	sl, [sp, #24]
   2decc:	add	sp, sp, #32
   2ded0:	pop	{pc}		; (ldr pc, [sp], #4)
   2ded4:	movw	r3, #32748	; 0x7fec
   2ded8:	movt	r3, #5
   2dedc:	ldr	r3, [r3, #8]
   2dee0:	mov	ip, #50	; 0x32
   2dee4:	str	r3, [sp, #67]	; 0x43
   2dee8:	b	2de98 <error_ref_sym@@Base+0xb4>
   2deec:	mov	ip, sl
   2def0:	add	r7, sp, #20
   2def4:	strb	sl, [sp, #20]
   2def8:	b	2de98 <error_ref_sym@@Base+0xb4>

0002defc <__flatcc_fb_init_parser@@Base>:
   2defc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2df00:	mov	r5, r3
   2df04:	mov	r4, r0
   2df08:	strd	r6, [sp, #8]
   2df0c:	mov	r6, r2
   2df10:	mov	r2, #560	; 0x230
   2df14:	strd	r8, [sp, #16]
   2df18:	mov	r9, r1
   2df1c:	mov	r1, #0
   2df20:	str	sl, [sp, #24]
   2df24:	str	lr, [sp, #28]
   2df28:	sub	sp, sp, #8
   2df2c:	ldr	r7, [sp, #44]	; 0x2c
   2df30:	bl	14084 <memset@plt>
   2df34:	cmp	r5, #0
   2df38:	add	r0, r4, #128	; 0x80
   2df3c:	ldrne	r3, [sp, #40]	; 0x28
   2df40:	movweq	r5, #49740	; 0xc24c
   2df44:	movteq	r5, #2
   2df48:	str	r5, [r4, #8]
   2df4c:	strne	r3, [r4, #12]
   2df50:	cmp	r9, #0
   2df54:	beq	2e14c <__flatcc_fb_init_parser@@Base+0x250>
   2df58:	mov	r2, #224	; 0xe0
   2df5c:	mov	r1, r9
   2df60:	bl	13fb8 <memcpy@plt>
   2df64:	ldr	r3, [r4, #192]	; 0xc0
   2df68:	cmp	r7, #0
   2df6c:	addeq	r7, r4, #416	; 0x1a0
   2df70:	str	r7, [r4, #412]	; 0x19c
   2df74:	cmp	r3, #4
   2df78:	beq	2dfd0 <__flatcc_fb_init_parser@@Base+0xd4>
   2df7c:	cmp	r3, #8
   2df80:	beq	2dfd0 <__flatcc_fb_init_parser@@Base+0xd4>
   2df84:	cmp	r3, #2
   2df88:	beq	2dfd0 <__flatcc_fb_init_parser@@Base+0xd4>
   2df8c:	mov	ip, #0
   2df90:	mov	r0, r4
   2df94:	mov	r3, ip
   2df98:	mov	r1, ip
   2df9c:	movw	r2, #34440	; 0x8688
   2dfa0:	movt	r2, #5
   2dfa4:	str	ip, [sp]
   2dfa8:	str	ip, [sp, #4]
   2dfac:	bl	2c558 <__flatcc_error_report@@Base>
   2dfb0:	mvn	r0, #0
   2dfb4:	add	sp, sp, #8
   2dfb8:	ldrd	r4, [sp]
   2dfbc:	ldrd	r6, [sp, #8]
   2dfc0:	ldrd	r8, [sp, #16]
   2dfc4:	ldr	sl, [sp, #24]
   2dfc8:	add	sp, sp, #28
   2dfcc:	pop	{pc}		; (ldr pc, [sp], #4)
   2dfd0:	ldr	r3, [r4, #196]	; 0xc4
   2dfd4:	cmp	r3, #4
   2dfd8:	beq	2e018 <__flatcc_fb_init_parser@@Base+0x11c>
   2dfdc:	cmp	r3, #8
   2dfe0:	beq	2e018 <__flatcc_fb_init_parser@@Base+0x11c>
   2dfe4:	cmp	r3, #2
   2dfe8:	beq	2e018 <__flatcc_fb_init_parser@@Base+0x11c>
   2dfec:	mov	ip, #0
   2dff0:	mov	r0, r4
   2dff4:	mov	r3, ip
   2dff8:	mov	r1, ip
   2dffc:	movw	r2, #34496	; 0x86c0
   2e000:	movt	r2, #5
   2e004:	str	ip, [sp]
   2e008:	str	ip, [sp, #4]
   2e00c:	bl	2c558 <__flatcc_error_report@@Base>
   2e010:	mvn	r0, #0
   2e014:	b	2dfb4 <__flatcc_fb_init_parser@@Base+0xb8>
   2e018:	cmp	r6, #0
   2e01c:	beq	2e154 <__flatcc_fb_init_parser@@Base+0x258>
   2e020:	mov	r0, r6
   2e024:	bl	14054 <strlen@plt>
   2e028:	mov	sl, r0
   2e02c:	mov	r1, sl
   2e030:	mov	r0, r6
   2e034:	ldr	r2, [r9, #96]	; 0x60
   2e038:	bl	2c03c <__flatcc_fb_create_basename@@Base>
   2e03c:	cmp	r0, #0
   2e040:	mov	r5, r0
   2e044:	str	r0, [r4, #512]	; 0x200
   2e048:	beq	2e1d8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2e04c:	bl	14054 <strlen@plt>
   2e050:	mov	r1, r0
   2e054:	mov	r8, r0
   2e058:	mov	r0, r5
   2e05c:	bl	2b9b4 <__flatcc_fb_copy_path_n@@Base>
   2e060:	subs	r5, r0, #0
   2e064:	beq	2e1d8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2e068:	cmp	r8, #0
   2e06c:	beq	2e0b0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2e070:	ldrb	r7, [r5]
   2e074:	cmp	r7, #0
   2e078:	beq	2e0b0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2e07c:	bl	14030 <__ctype_toupper_loc@plt>
   2e080:	sub	r2, r8, #1
   2e084:	mov	r3, r5
   2e088:	add	r2, r5, r2
   2e08c:	b	2e09c <__flatcc_fb_init_parser@@Base+0x1a0>
   2e090:	ldrb	r7, [r3, #1]!
   2e094:	cmp	r7, #0
   2e098:	beq	2e0b0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2e09c:	ldr	r1, [r0]
   2e0a0:	cmp	r3, r2
   2e0a4:	ldr	r1, [r1, r7, lsl #2]
   2e0a8:	strb	r1, [r3]
   2e0ac:	bne	2e090 <__flatcc_fb_init_parser@@Base+0x194>
   2e0b0:	mov	r1, sl
   2e0b4:	mov	r0, r6
   2e0b8:	str	r5, [r4, #496]	; 0x1f0
   2e0bc:	movw	r2, #45408	; 0xb160
   2e0c0:	movt	r2, #4
   2e0c4:	str	r8, [r4, #500]	; 0x1f4
   2e0c8:	str	r5, [r4, #516]	; 0x204
   2e0cc:	bl	2c03c <__flatcc_fb_create_basename@@Base>
   2e0d0:	cmp	r0, #0
   2e0d4:	str	r0, [r4, #520]	; 0x208
   2e0d8:	beq	2e1d8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2e0dc:	ldr	r3, [r9, #192]	; 0xc0
   2e0e0:	cmp	r3, #0
   2e0e4:	beq	2e0f8 <__flatcc_fb_init_parser@@Base+0x1fc>
   2e0e8:	mov	r0, r3
   2e0ec:	str	r3, [r4, #476]	; 0x1dc
   2e0f0:	bl	14054 <strlen@plt>
   2e0f4:	str	r0, [r4, #480]	; 0x1e0
   2e0f8:	mov	r2, #0
   2e0fc:	ldr	r0, [r4, #412]	; 0x19c
   2e100:	mov	r1, r2
   2e104:	bl	2a1ec <fb_scope_table_find@@Base>
   2e108:	subs	r5, r0, #0
   2e10c:	beq	2e164 <__flatcc_fb_init_parser@@Base+0x268>
   2e110:	mov	r2, #0
   2e114:	str	r5, [r4, #544]	; 0x220
   2e118:	mov	r1, r2
   2e11c:	ldr	r0, [r4, #412]	; 0x19c
   2e120:	bl	2a1ec <fb_scope_table_find@@Base>
   2e124:	cmp	r5, r0
   2e128:	moveq	r0, #0
   2e12c:	beq	2dfb4 <__flatcc_fb_init_parser@@Base+0xb8>
   2e130:	movw	r1, #33044	; 0x8114
   2e134:	movt	r1, #5
   2e138:	ldr	r3, [pc, #156]	; 2e1dc <__flatcc_fb_init_parser@@Base+0x2e0>
   2e13c:	movw	r0, #34556	; 0x86fc
   2e140:	movt	r0, #5
   2e144:	movw	r2, #1331	; 0x533
   2e148:	bl	14120 <__assert_fail@plt>
   2e14c:	bl	152c8 <flatcc_init_options@@Base>
   2e150:	b	2df64 <__flatcc_fb_init_parser@@Base+0x68>
   2e154:	movw	r6, #34432	; 0x8680
   2e158:	movt	r6, #5
   2e15c:	mov	sl, #4
   2e160:	b	2e02c <__flatcc_fb_init_parser@@Base+0x130>
   2e164:	ldr	r3, [r4, #44]	; 0x2c
   2e168:	ldr	r5, [r4, #52]	; 0x34
   2e16c:	add	r2, r5, #32
   2e170:	cmp	r2, r3
   2e174:	bhi	2e1a4 <__flatcc_fb_init_parser@@Base+0x2a8>
   2e178:	add	r3, r4, #476	; 0x1dc
   2e17c:	mov	r1, r5
   2e180:	ldr	r0, [r4, #412]	; 0x19c
   2e184:	ldrd	r6, [r3]
   2e188:	mov	r3, #0
   2e18c:	str	r2, [r4, #52]	; 0x34
   2e190:	mov	r2, #1
   2e194:	str	r3, [r5]
   2e198:	strd	r6, [r5, #20]
   2e19c:	bl	2a1dc <fb_scope_table_insert_item@@Base>
   2e1a0:	b	2e110 <__flatcc_fb_init_parser@@Base+0x214>
   2e1a4:	mov	r1, #1
   2e1a8:	mov	r0, #65536	; 0x10000
   2e1ac:	bl	13f7c <calloc@plt>
   2e1b0:	cmp	r0, #0
   2e1b4:	beq	2e1d8 <__flatcc_fb_init_parser@@Base+0x2dc>
   2e1b8:	ldr	r3, [r4, #48]	; 0x30
   2e1bc:	add	r1, r0, #65536	; 0x10000
   2e1c0:	add	r5, r0, #16
   2e1c4:	add	r2, r0, #48	; 0x30
   2e1c8:	str	r1, [r4, #44]	; 0x2c
   2e1cc:	str	r0, [r4, #48]	; 0x30
   2e1d0:	str	r3, [r0]
   2e1d4:	b	2e178 <__flatcc_fb_init_parser@@Base+0x27c>
   2e1d8:	bl	2c26c <__flatcc_fb_default_error_out@@Base+0x20>
   2e1dc:	strdeq	r7, [r5], -ip

0002e1e0 <__flatcc_fb_parse@@Base>:
   2e1e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2e1e4:	mov	r4, r0
   2e1e8:	mov	r5, r1
   2e1ec:	mov	r0, #1
   2e1f0:	movw	r1, #34640	; 0x8750
   2e1f4:	movt	r1, #5
   2e1f8:	strd	r6, [sp, #8]
   2e1fc:	mov	r6, #4
   2e200:	mov	r7, #0
   2e204:	strd	r8, [sp, #16]
   2e208:	cmp	r3, #0
   2e20c:	strd	sl, [sp, #24]
   2e210:	movw	r3, #34648	; 0x8758
   2e214:	movt	r3, #5
   2e218:	str	lr, [sp, #32]
   2e21c:	mov	r8, #0
   2e220:	mov	r9, #9
   2e224:	strne	r5, [r4, #16]
   2e228:	sub	sp, sp, #36	; 0x24
   2e22c:	strd	r0, [r4, #64]	; 0x40
   2e230:	movw	r1, #64554	; 0xfc2a
   2e234:	movt	r1, #65535	; 0xffff
   2e238:	mov	r0, #5
   2e23c:	strd	r6, [r4, #72]	; 0x48
   2e240:	add	r6, r5, r2
   2e244:	cmp	r5, r6
   2e248:	str	r5, [r4, #60]	; 0x3c
   2e24c:	str	r1, [r4, #104]	; 0x68
   2e250:	mov	r1, #0
   2e254:	strd	r8, [r4, #80]	; 0x50
   2e258:	str	r3, [r4, #88]	; 0x58
   2e25c:	str	r0, [r4, #92]	; 0x5c
   2e260:	str	r1, [r4, #96]	; 0x60
   2e264:	str	r1, [r4, #100]	; 0x64
   2e268:	beq	2e4d4 <__flatcc_fb_parse@@Base+0x2f4>
   2e26c:	movw	r9, #29243	; 0x723b
   2e270:	movt	r9, #25968	; 0x6570
   2e274:	movw	r8, #26174	; 0x663e
   2e278:	movt	r8, #28265	; 0x6e69
   2e27c:	movw	r3, #30004	; 0x7534
   2e280:	movt	r3, #29801	; 0x7469
   2e284:	movw	fp, #26931	; 0x6933
   2e288:	movt	fp, #29806	; 0x746e
   2e28c:	str	r3, [sp, #12]
   2e290:	str	r9, [sp, #16]
   2e294:	ldrb	r1, [r5]
   2e298:	movw	r7, #30006	; 0x7536
   2e29c:	movt	r7, #29811	; 0x7473
   2e2a0:	movw	sl, #29494	; 0x7336
   2e2a4:	movt	sl, #29812	; 0x7474
   2e2a8:	cmp	r1, #126	; 0x7e
   2e2ac:	ldrls	pc, [pc, r1, lsl #2]
   2e2b0:	b	2fb68 <__flatcc_fb_parse@@Base+0x1988>
   2e2b4:	ldrdeq	lr, [r2], -r4
   2e2b8:	andeq	pc, r2, r8, ror #22
   2e2bc:	andeq	pc, r2, r8, ror #22
   2e2c0:	andeq	pc, r2, r8, ror #22
   2e2c4:	andeq	pc, r2, r8, ror #22
   2e2c8:	andeq	pc, r2, r8, ror #22
   2e2cc:	andeq	pc, r2, r8, ror #22
   2e2d0:	andeq	pc, r2, r8, ror #22
   2e2d4:	andeq	pc, r2, r8, ror #22
   2e2d8:			; <UNDEFINED> instruction: 0x0002e4b0
   2e2dc:	andeq	pc, r2, r4, asr r7	; <UNPREDICTABLE>
   2e2e0:	andeq	pc, r2, r8, ror #22
   2e2e4:	andeq	pc, r2, r8, ror #22
   2e2e8:	andeq	pc, r2, r0, asr #15
   2e2ec:	andeq	pc, r2, r8, ror #22
   2e2f0:	andeq	pc, r2, r8, ror #22
   2e2f4:	andeq	pc, r2, r8, ror #22
   2e2f8:	andeq	pc, r2, r8, ror #22
   2e2fc:	andeq	pc, r2, r8, ror #22
   2e300:	andeq	pc, r2, r8, ror #22
   2e304:	andeq	pc, r2, r8, ror #22
   2e308:	andeq	pc, r2, r8, ror #22
   2e30c:	andeq	pc, r2, r8, ror #22
   2e310:	andeq	pc, r2, r8, ror #22
   2e314:	andeq	pc, r2, r8, ror #22
   2e318:	andeq	pc, r2, r8, ror #22
   2e31c:	andeq	pc, r2, r8, ror #22
   2e320:	andeq	pc, r2, r8, ror #22
   2e324:	andeq	pc, r2, r8, ror #22
   2e328:	andeq	pc, r2, r8, ror #22
   2e32c:	andeq	pc, r2, r8, ror #22
   2e330:	andeq	pc, r2, r8, ror #22
   2e334:			; <UNDEFINED> instruction: 0x0002e4b0
   2e338:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   2e33c:	andeq	lr, r2, r0, lsr #14
   2e340:	andeq	pc, r2, r8, ror #22
   2e344:	andeq	pc, r2, r8, ror #22
   2e348:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   2e34c:	andeq	pc, r2, r4, lsl #15
   2e350:	andeq	pc, r2, r8, ror #22
   2e354:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e358:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e35c:	strdeq	pc, [r2], -ip
   2e360:	andeq	pc, r2, ip, lsr r6	; <UNPREDICTABLE>
   2e364:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e368:	andeq	pc, r2, r8, ror r6	; <UNPREDICTABLE>
   2e36c:			; <UNDEFINED> instruction: 0x0002f6b8
   2e370:	andeq	pc, r2, r0, asr #8
   2e374:	andeq	pc, r2, r0, lsl #9
   2e378:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e37c:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e380:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e384:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e388:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e38c:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e390:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e394:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e398:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   2e39c:	strdeq	pc, [r2], -r8
   2e3a0:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e3a4:	andeq	pc, r2, r4, ror #17
   2e3a8:	andeq	pc, r2, r4, lsr r8	; <UNPREDICTABLE>
   2e3ac:	andeq	pc, r2, r0, ror r8	; <UNPREDICTABLE>
   2e3b0:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e3b4:	andeq	pc, r2, r8, ror #22
   2e3b8:	andeq	pc, r2, r8, ror #9
   2e3bc:	andeq	pc, r2, r8, ror #9
   2e3c0:	andeq	pc, r2, r8, ror #9
   2e3c4:	andeq	pc, r2, r8, ror #9
   2e3c8:	andeq	pc, r2, r8, ror #9
   2e3cc:	andeq	pc, r2, r8, ror #9
   2e3d0:	andeq	pc, r2, r8, ror #9
   2e3d4:	andeq	pc, r2, r8, ror #9
   2e3d8:	andeq	pc, r2, r8, ror #9
   2e3dc:	andeq	pc, r2, r8, ror #9
   2e3e0:	andeq	pc, r2, r8, ror #9
   2e3e4:	andeq	pc, r2, r8, ror #9
   2e3e8:	andeq	pc, r2, r8, ror #9
   2e3ec:	andeq	pc, r2, r8, ror #9
   2e3f0:	andeq	pc, r2, r8, ror #9
   2e3f4:	andeq	pc, r2, r8, ror #9
   2e3f8:	andeq	pc, r2, r8, ror #9
   2e3fc:	andeq	pc, r2, r8, ror #9
   2e400:	andeq	pc, r2, r8, ror #9
   2e404:	andeq	pc, r2, r8, ror #9
   2e408:	andeq	pc, r2, r8, ror #9
   2e40c:	andeq	pc, r2, r8, ror #9
   2e410:	andeq	pc, r2, r8, ror #9
   2e414:	andeq	pc, r2, r8, ror #9
   2e418:	andeq	pc, r2, r8, ror #9
   2e41c:	andeq	pc, r2, r8, ror #9
   2e420:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e424:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e428:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e42c:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   2e430:	andeq	pc, r2, r8, ror #9
   2e434:	andeq	pc, r2, r8, ror #22
   2e438:	andeq	pc, r2, r8, ror #9
   2e43c:	andeq	pc, r2, r8, ror #9
   2e440:	andeq	pc, r2, r8, ror #9
   2e444:	andeq	pc, r2, r8, ror #9
   2e448:	andeq	pc, r2, r8, ror #9
   2e44c:	andeq	pc, r2, r8, ror #9
   2e450:	andeq	pc, r2, r8, ror #9
   2e454:	andeq	pc, r2, r8, ror #9
   2e458:	andeq	pc, r2, r8, ror #9
   2e45c:	andeq	pc, r2, r8, ror #9
   2e460:	andeq	pc, r2, r8, ror #9
   2e464:	andeq	pc, r2, r8, ror #9
   2e468:	andeq	pc, r2, r8, ror #9
   2e46c:	andeq	pc, r2, r8, ror #9
   2e470:	andeq	pc, r2, r8, ror #9
   2e474:	andeq	pc, r2, r8, ror #9
   2e478:	andeq	pc, r2, r8, ror #9
   2e47c:	andeq	pc, r2, r8, ror #9
   2e480:	andeq	pc, r2, r8, ror #9
   2e484:	andeq	pc, r2, r8, ror #9
   2e488:	andeq	pc, r2, r8, ror #9
   2e48c:	andeq	pc, r2, r8, ror #9
   2e490:	andeq	pc, r2, r8, ror #9
   2e494:	andeq	pc, r2, r8, ror #9
   2e498:	andeq	pc, r2, r8, ror #9
   2e49c:	andeq	pc, r2, r8, ror #9
   2e4a0:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e4a4:	andeq	pc, r2, r0, ror #15
   2e4a8:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2e4ac:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   2e4b0:	add	r3, r5, #1
   2e4b4:	b	2e4c8 <__flatcc_fb_parse@@Base+0x2e8>
   2e4b8:	ldrb	r1, [r3], #1
   2e4bc:	cmp	r1, #9
   2e4c0:	cmpne	r1, #32
   2e4c4:	bne	2e2a8 <__flatcc_fb_parse@@Base+0xc8>
   2e4c8:	cmp	r3, r6
   2e4cc:	mov	r5, r3
   2e4d0:	bne	2e4b8 <__flatcc_fb_parse@@Base+0x2d8>
   2e4d4:	mov	r3, r5
   2e4d8:	mov	r2, r5
   2e4dc:	mov	r1, #0
   2e4e0:	mov	r0, r4
   2e4e4:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2e4e8:	ldr	r8, [r4, #20]
   2e4ec:	ldr	r3, [r4, #40]	; 0x28
   2e4f0:	ldr	r0, [r4, #216]	; 0xd8
   2e4f4:	str	r3, [r4, #24]
   2e4f8:	str	r8, [r4, #40]	; 0x28
   2e4fc:	bl	14018 <malloc@plt>
   2e500:	cmp	r0, #0
   2e504:	str	r0, [r4, #112]	; 0x70
   2e508:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2e50c:	ldr	r3, [r8, #16]
   2e510:	cmn	r3, #964	; 0x3c4
   2e514:	beq	30224 <__flatcc_fb_parse@@Base+0x2044>
   2e518:	movw	r2, #64565	; 0xfc35
   2e51c:	movt	r2, #65535	; 0xffff
   2e520:	cmp	r3, r2
   2e524:	beq	2fb90 <__flatcc_fb_parse@@Base+0x19b0>
   2e528:	cmp	r3, #0
   2e52c:	ldr	r0, [r4, #108]	; 0x6c
   2e530:	beq	2fc8c <__flatcc_fb_parse@@Base+0x1aac>
   2e534:	cmp	r0, #9
   2e538:	bgt	2e704 <__flatcc_fb_parse@@Base+0x524>
   2e53c:	movw	r2, #35284	; 0x89d4
   2e540:	movt	r2, #5
   2e544:	movw	fp, #35260	; 0x89bc
   2e548:	movt	fp, #5
   2e54c:	movw	sl, #36080	; 0x8cf0
   2e550:	movt	sl, #5
   2e554:	str	r2, [sp, #12]
   2e558:	mov	r6, r8
   2e55c:	mov	r1, r8
   2e560:	b	2e5e0 <__flatcc_fb_parse@@Base+0x400>
   2e564:	mvn	r2, #972	; 0x3cc
   2e568:	cmp	r3, r2
   2e56c:	beq	2ea18 <__flatcc_fb_parse@@Base+0x838>
   2e570:	cmn	r3, #972	; 0x3cc
   2e574:	bge	2e820 <__flatcc_fb_parse@@Base+0x640>
   2e578:	movw	r2, #64553	; 0xfc29
   2e57c:	movt	r2, #65535	; 0xffff
   2e580:	cmp	r3, r2
   2e584:	beq	2f0e4 <__flatcc_fb_parse@@Base+0xf04>
   2e588:	cmn	r3, #976	; 0x3d0
   2e58c:	beq	2ee40 <__flatcc_fb_parse@@Base+0xc60>
   2e590:	mvn	r2, #996	; 0x3e4
   2e594:	cmp	r3, r2
   2e598:	beq	2eaa0 <__flatcc_fb_parse@@Base+0x8c0>
   2e59c:	mov	ip, #0
   2e5a0:	mov	r2, sl
   2e5a4:	mov	r3, ip
   2e5a8:	mov	r0, r4
   2e5ac:	str	ip, [sp]
   2e5b0:	str	ip, [sp, #4]
   2e5b4:	bl	2c558 <__flatcc_error_report@@Base>
   2e5b8:	ldr	r1, [r4, #40]	; 0x28
   2e5bc:	cmp	r6, r1
   2e5c0:	ldr	r0, [r4, #108]	; 0x6c
   2e5c4:	beq	2e6d4 <__flatcc_fb_parse@@Base+0x4f4>
   2e5c8:	ldr	r3, [r1, #16]
   2e5cc:	cmp	r3, #0
   2e5d0:	beq	2fc8c <__flatcc_fb_parse@@Base+0x1aac>
   2e5d4:	cmp	r0, #9
   2e5d8:	mov	r6, r1
   2e5dc:	bgt	2e704 <__flatcc_fb_parse@@Base+0x524>
   2e5e0:	cmn	r3, #968	; 0x3c8
   2e5e4:	beq	2eca0 <__flatcc_fb_parse@@Base+0xac0>
   2e5e8:	ble	2e564 <__flatcc_fb_parse@@Base+0x384>
   2e5ec:	cmp	r3, #5
   2e5f0:	beq	2ea00 <__flatcc_fb_parse@@Base+0x820>
   2e5f4:	bgt	2e7d8 <__flatcc_fb_parse@@Base+0x5f8>
   2e5f8:	movw	r2, #64570	; 0xfc3a
   2e5fc:	movt	r2, #65535	; 0xffff
   2e600:	cmp	r3, r2
   2e604:	beq	2e97c <__flatcc_fb_parse@@Base+0x79c>
   2e608:	blt	2e8f0 <__flatcc_fb_parse@@Base+0x710>
   2e60c:	mvn	r2, #964	; 0x3c4
   2e610:	cmp	r3, r2
   2e614:	bne	2e59c <__flatcc_fb_parse@@Base+0x3bc>
   2e618:	mov	r0, r4
   2e61c:	add	r5, r4, #360	; 0x168
   2e620:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2e624:	ldrh	r3, [r5, #8]
   2e628:	cmp	r3, #0
   2e62c:	bne	2faac <__flatcc_fb_parse@@Base+0x18cc>
   2e630:	ldr	r1, [r4, #40]	; 0x28
   2e634:	ldr	r3, [r1, #16]
   2e638:	cmp	r3, #19
   2e63c:	bne	2f1dc <__flatcc_fb_parse@@Base+0xffc>
   2e640:	mov	r0, r4
   2e644:	mov	r7, #0
   2e648:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2e64c:	mov	r3, #2
   2e650:	mov	r1, r5
   2e654:	ldr	r8, [r4, #40]	; 0x28
   2e658:	mov	r0, r4
   2e65c:	strh	r3, [r5, #8]
   2e660:	str	r7, [r4, #360]	; 0x168
   2e664:	str	r7, [r4, #364]	; 0x16c
   2e668:	bl	2cd64 <__flatcc_error_report@@Base+0x80c>
   2e66c:	ldr	r3, [r4, #360]	; 0x168
   2e670:	cmp	r3, r7
   2e674:	beq	2e6ac <__flatcc_fb_parse@@Base+0x4cc>
   2e678:	ldr	r3, [r4, #364]	; 0x16c
   2e67c:	cmp	r3, #4
   2e680:	beq	2e6ac <__flatcc_fb_parse@@Base+0x4cc>
   2e684:	mov	r0, #1
   2e688:	movw	r2, #35188	; 0x8974
   2e68c:	movt	r2, #5
   2e690:	mov	r1, r8
   2e694:	str	r7, [sp]
   2e698:	mov	r3, r7
   2e69c:	str	r7, [sp, #4]
   2e6a0:	strh	r0, [r5, #8]
   2e6a4:	mov	r0, r4
   2e6a8:	bl	2c558 <__flatcc_error_report@@Base>
   2e6ac:	ldr	r1, [r4, #40]	; 0x28
   2e6b0:	ldr	r3, [r1, #16]
   2e6b4:	cmp	r3, #59	; 0x3b
   2e6b8:	bne	2f960 <__flatcc_fb_parse@@Base+0x1780>
   2e6bc:	mov	r0, r4
   2e6c0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2e6c4:	ldr	r1, [r4, #40]	; 0x28
   2e6c8:	ldr	r0, [r4, #108]	; 0x6c
   2e6cc:	cmp	r6, r1
   2e6d0:	bne	2e5c8 <__flatcc_fb_parse@@Base+0x3e8>
   2e6d4:	mov	r8, r1
   2e6d8:	cmp	r0, #0
   2e6dc:	bne	2e704 <__flatcc_fb_parse@@Base+0x524>
   2e6e0:	mov	r3, r0
   2e6e4:	mov	r1, r8
   2e6e8:	str	r0, [sp]
   2e6ec:	movw	r2, #36120	; 0x8d18
   2e6f0:	movt	r2, #5
   2e6f4:	str	r0, [sp, #4]
   2e6f8:	mov	r0, r4
   2e6fc:	bl	2c558 <__flatcc_error_report@@Base>
   2e700:	ldr	r0, [r4, #108]	; 0x6c
   2e704:	add	sp, sp, #36	; 0x24
   2e708:	ldrd	r4, [sp]
   2e70c:	ldrd	r6, [sp, #8]
   2e710:	ldrd	r8, [sp, #16]
   2e714:	ldrd	sl, [sp, #24]
   2e718:	add	sp, sp, #32
   2e71c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e720:	add	r7, r5, #1
   2e724:	mov	r2, r5
   2e728:	mov	r3, r7
   2e72c:	mov	r1, #19
   2e730:	mov	r0, r4
   2e734:	mov	r9, r7
   2e738:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2e73c:	sub	r7, r7, #1
   2e740:	b	2e754 <__flatcc_fb_parse@@Base+0x574>
   2e744:	cmp	r3, #127	; 0x7f
   2e748:	cmpne	r3, #31
   2e74c:	bls	2e770 <__flatcc_fb_parse@@Base+0x590>
   2e750:	mov	r7, r5
   2e754:	add	r5, r7, #1
   2e758:	cmp	r6, r5
   2e75c:	beq	2e770 <__flatcc_fb_parse@@Base+0x590>
   2e760:	ldrb	r3, [r7, #1]
   2e764:	cmp	r3, #34	; 0x22
   2e768:	cmpne	r3, #92	; 0x5c
   2e76c:	bne	2e744 <__flatcc_fb_parse@@Base+0x564>
   2e770:	cmp	r5, r9
   2e774:	beq	2e78c <__flatcc_fb_parse@@Base+0x5ac>
   2e778:	mov	r2, r9
   2e77c:	mov	r3, r5
   2e780:	mov	r1, #20
   2e784:	mov	r0, r4
   2e788:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2e78c:	ldrb	r3, [r5]
   2e790:	cmp	r3, #34	; 0x22
   2e794:	beq	304e4 <__flatcc_fb_parse@@Base+0x2304>
   2e798:	cmp	r3, #0
   2e79c:	cmpne	r6, r5
   2e7a0:	beq	2fc5c <__flatcc_fb_parse@@Base+0x1a7c>
   2e7a4:	cmp	r3, #92	; 0x5c
   2e7a8:	beq	2e858 <__flatcc_fb_parse@@Base+0x678>
   2e7ac:	cmp	r3, #13
   2e7b0:	cmpne	r3, #10
   2e7b4:	beq	2fc5c <__flatcc_fb_parse@@Base+0x1a7c>
   2e7b8:	add	r7, r5, #1
   2e7bc:	mov	r2, r5
   2e7c0:	mov	r3, r7
   2e7c4:	mov	r1, #6
   2e7c8:	mov	r0, r4
   2e7cc:	mov	r9, r7
   2e7d0:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2e7d4:	b	2e73c <__flatcc_fb_parse@@Base+0x55c>
   2e7d8:	cmp	r3, #27
   2e7dc:	beq	2f16c <__flatcc_fb_parse@@Base+0xf8c>
   2e7e0:	cmp	r3, #123	; 0x7b
   2e7e4:	beq	2f158 <__flatcc_fb_parse@@Base+0xf78>
   2e7e8:	cmp	r3, #7
   2e7ec:	bne	2e59c <__flatcc_fb_parse@@Base+0x3bc>
   2e7f0:	movw	r3, #33556	; 0x8314
   2e7f4:	movt	r3, #5
   2e7f8:	movw	r2, #36008	; 0x8ca8
   2e7fc:	movt	r2, #5
   2e800:	mov	r0, #1
   2e804:	str	r3, [sp]
   2e808:	mov	r3, #0
   2e80c:	str	r0, [sp, #4]
   2e810:	mov	r0, r4
   2e814:	bl	2c558 <__flatcc_error_report@@Base>
   2e818:	ldr	r1, [r4, #40]	; 0x28
   2e81c:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2e820:	movw	r2, #64566	; 0xfc36
   2e824:	movt	r2, #65535	; 0xffff
   2e828:	cmp	r3, r2
   2e82c:	beq	2edbc <__flatcc_fb_parse@@Base+0xbdc>
   2e830:	bgt	2ed28 <__flatcc_fb_parse@@Base+0xb48>
   2e834:	movw	r2, #64565	; 0xfc35
   2e838:	movt	r2, #65535	; 0xffff
   2e83c:	cmp	r3, r2
   2e840:	bne	2e59c <__flatcc_fb_parse@@Base+0x3bc>
   2e844:	mov	ip, #0
   2e848:	movw	r2, #35800	; 0x8bd8
   2e84c:	movt	r2, #5
   2e850:	mov	r3, ip
   2e854:	b	2e5a8 <__flatcc_fb_parse@@Base+0x3c8>
   2e858:	add	r9, r7, #2
   2e85c:	mov	r2, r5
   2e860:	mov	r3, r9
   2e864:	mov	r1, #21
   2e868:	mov	r0, r4
   2e86c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2e870:	cmp	r6, r9
   2e874:	beq	30b94 <__flatcc_fb_parse@@Base+0x29b4>
   2e878:	ldrb	r3, [r5, #1]
   2e87c:	cmp	r3, #0
   2e880:	beq	30b94 <__flatcc_fb_parse@@Base+0x29b4>
   2e884:	cmp	r3, #34	; 0x22
   2e888:	cmpne	r3, #92	; 0x5c
   2e88c:	addeq	r7, r5, #2
   2e890:	beq	2e73c <__flatcc_fb_parse@@Base+0x55c>
   2e894:	cmp	r3, #10
   2e898:	beq	30404 <__flatcc_fb_parse@@Base+0x2224>
   2e89c:	cmp	r3, #13
   2e8a0:	movne	r5, r9
   2e8a4:	bne	2e7b8 <__flatcc_fb_parse@@Base+0x5d8>
   2e8a8:	add	r7, r5, #2
   2e8ac:	cmp	r6, r7
   2e8b0:	beq	2e8c4 <__flatcc_fb_parse@@Base+0x6e4>
   2e8b4:	ldrb	r3, [r5, #2]
   2e8b8:	cmp	r3, #10
   2e8bc:	bne	2e8c4 <__flatcc_fb_parse@@Base+0x6e4>
   2e8c0:	add	r7, r5, #3
   2e8c4:	ldr	ip, [r4, #64]	; 0x40
   2e8c8:	mov	r2, r9
   2e8cc:	mov	r3, r7
   2e8d0:	mov	r1, #18
   2e8d4:	mov	r0, r4
   2e8d8:	str	r7, [r4, #60]	; 0x3c
   2e8dc:	mov	r9, r7
   2e8e0:	add	ip, ip, #1
   2e8e4:	str	ip, [r4, #64]	; 0x40
   2e8e8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2e8ec:	b	2e73c <__flatcc_fb_parse@@Base+0x55c>
   2e8f0:	mov	r0, r4
   2e8f4:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2e8f8:	ldr	r2, [r4, #44]	; 0x2c
   2e8fc:	ldr	r1, [r4, #52]	; 0x34
   2e900:	add	r3, r1, #128	; 0x80
   2e904:	cmp	r3, r2
   2e908:	bhi	2fa10 <__flatcc_fb_parse@@Base+0x1830>
   2e90c:	ldr	r0, [r4, #392]	; 0x188
   2e910:	mov	ip, #2
   2e914:	str	r3, [r4, #52]	; 0x34
   2e918:	ldr	r2, [r4, #544]	; 0x220
   2e91c:	str	r0, [r1]
   2e920:	ldr	r3, [r4, #36]	; 0x24
   2e924:	strh	ip, [r1, #8]
   2e928:	str	r1, [r4, #392]	; 0x188
   2e92c:	str	r2, [r1, #12]
   2e930:	cmp	r3, #0
   2e934:	beq	2e958 <__flatcc_fb_parse@@Base+0x778>
   2e938:	mov	r0, #0
   2e93c:	b	2e944 <__flatcc_fb_parse@@Base+0x764>
   2e940:	mov	r3, r2
   2e944:	ldr	r2, [r3]
   2e948:	str	r0, [r3]
   2e94c:	mov	r0, r3
   2e950:	cmp	r2, #0
   2e954:	bne	2e940 <__flatcc_fb_parse@@Base+0x760>
   2e958:	mov	r0, #0
   2e95c:	movw	r2, #64569	; 0xfc39
   2e960:	str	r3, [r1, #32]
   2e964:	movt	r2, #65535	; 0xffff
   2e968:	str	r0, [r4, #36]	; 0x24
   2e96c:	mov	r0, r4
   2e970:	bl	2d7e4 <__flatcc_error_report@@Base+0x128c>
   2e974:	ldr	r1, [r4, #40]	; 0x28
   2e978:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2e97c:	mov	r0, r4
   2e980:	add	r5, r4, #376	; 0x178
   2e984:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2e988:	ldrh	r3, [r5, #8]
   2e98c:	cmp	r3, #2
   2e990:	beq	30518 <__flatcc_fb_parse@@Base+0x2338>
   2e994:	ldr	r1, [r4, #40]	; 0x28
   2e998:	ldr	r3, [r1, #16]
   2e99c:	cmp	r3, #19
   2e9a0:	bne	2f184 <__flatcc_fb_parse@@Base+0xfa4>
   2e9a4:	mov	r0, r4
   2e9a8:	mov	r7, #0
   2e9ac:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2e9b0:	mov	r3, #2
   2e9b4:	mov	r1, r5
   2e9b8:	mov	r0, r4
   2e9bc:	strh	r3, [r5, #8]
   2e9c0:	str	r7, [r4, #376]	; 0x178
   2e9c4:	str	r7, [r4, #380]	; 0x17c
   2e9c8:	bl	2cd64 <__flatcc_error_report@@Base+0x80c>
   2e9cc:	ldr	r1, [r4, #40]	; 0x28
   2e9d0:	ldr	r3, [r1, #16]
   2e9d4:	cmp	r3, #59	; 0x3b
   2e9d8:	beq	2e6bc <__flatcc_fb_parse@@Base+0x4dc>
   2e9dc:	mov	r3, r7
   2e9e0:	movw	r2, #35092	; 0x8914
   2e9e4:	movt	r2, #5
   2e9e8:	mov	r0, r4
   2e9ec:	str	r7, [sp]
   2e9f0:	str	r7, [sp, #4]
   2e9f4:	bl	2c558 <__flatcc_error_report@@Base>
   2e9f8:	ldr	r1, [r4, #40]	; 0x28
   2e9fc:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2ea00:	movw	r3, #33556	; 0x8314
   2ea04:	movt	r3, #5
   2ea08:	movw	r2, #35956	; 0x8c74
   2ea0c:	movt	r2, #5
   2ea10:	mov	r0, #1
   2ea14:	b	2e804 <__flatcc_fb_parse@@Base+0x624>
   2ea18:	mov	r0, r4
   2ea1c:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ea20:	ldr	r2, [r4, #44]	; 0x2c
   2ea24:	ldr	r1, [r4, #52]	; 0x34
   2ea28:	add	r3, r1, #128	; 0x80
   2ea2c:	cmp	r3, r2
   2ea30:	bhi	2f974 <__flatcc_fb_parse@@Base+0x1794>
   2ea34:	ldr	r0, [r4, #392]	; 0x188
   2ea38:	mov	ip, #1
   2ea3c:	str	r3, [r4, #52]	; 0x34
   2ea40:	ldr	r2, [r4, #544]	; 0x220
   2ea44:	str	r0, [r1]
   2ea48:	ldr	r3, [r4, #36]	; 0x24
   2ea4c:	strh	ip, [r1, #8]
   2ea50:	str	r1, [r4, #392]	; 0x188
   2ea54:	str	r2, [r1, #12]
   2ea58:	cmp	r3, #0
   2ea5c:	beq	2ea80 <__flatcc_fb_parse@@Base+0x8a0>
   2ea60:	mov	r0, #0
   2ea64:	b	2ea6c <__flatcc_fb_parse@@Base+0x88c>
   2ea68:	mov	r3, r2
   2ea6c:	ldr	r2, [r3]
   2ea70:	str	r0, [r3]
   2ea74:	mov	r0, r3
   2ea78:	cmp	r2, #0
   2ea7c:	bne	2ea68 <__flatcc_fb_parse@@Base+0x888>
   2ea80:	mov	ip, #0
   2ea84:	mvn	r2, #972	; 0x3cc
   2ea88:	str	r3, [r1, #32]
   2ea8c:	mov	r0, r4
   2ea90:	str	ip, [r4, #36]	; 0x24
   2ea94:	bl	2d7e4 <__flatcc_error_report@@Base+0x128c>
   2ea98:	ldr	r1, [r4, #40]	; 0x28
   2ea9c:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2eaa0:	mov	r0, r4
   2eaa4:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eaa8:	ldr	r2, [r4, #44]	; 0x2c
   2eaac:	ldr	r5, [r4, #52]	; 0x34
   2eab0:	add	r3, r5, #128	; 0x80
   2eab4:	cmp	r3, r2
   2eab8:	bhi	2f9a8 <__flatcc_fb_parse@@Base+0x17c8>
   2eabc:	ldr	r1, [r4, #392]	; 0x188
   2eac0:	mov	r0, #3
   2eac4:	str	r3, [r4, #52]	; 0x34
   2eac8:	ldr	r2, [r4, #544]	; 0x220
   2eacc:	str	r1, [r5]
   2ead0:	ldr	r3, [r4, #36]	; 0x24
   2ead4:	strh	r0, [r5, #8]
   2ead8:	str	r5, [r4, #392]	; 0x188
   2eadc:	str	r2, [r5, #12]
   2eae0:	cmp	r3, #0
   2eae4:	beq	2eb08 <__flatcc_fb_parse@@Base+0x928>
   2eae8:	mov	r1, #0
   2eaec:	b	2eaf4 <__flatcc_fb_parse@@Base+0x914>
   2eaf0:	mov	r3, r2
   2eaf4:	ldr	r2, [r3]
   2eaf8:	str	r1, [r3]
   2eafc:	mov	r1, r3
   2eb00:	cmp	r2, #0
   2eb04:	bne	2eaf0 <__flatcc_fb_parse@@Base+0x910>
   2eb08:	ldr	r8, [r4, #40]	; 0x28
   2eb0c:	mov	r7, #0
   2eb10:	str	r3, [r5, #32]
   2eb14:	str	r7, [r4, #36]	; 0x24
   2eb18:	ldr	r3, [r8, #16]
   2eb1c:	cmp	r3, #9
   2eb20:	bne	2f28c <__flatcc_fb_parse@@Base+0x10ac>
   2eb24:	mov	r0, r4
   2eb28:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eb2c:	ldr	r3, [r4, #40]	; 0x28
   2eb30:	ldr	r3, [r3, #16]
   2eb34:	str	r8, [r5, #4]
   2eb38:	cmp	r3, #58	; 0x3a
   2eb3c:	beq	2fad8 <__flatcc_fb_parse@@Base+0x18f8>
   2eb40:	mov	r0, r4
   2eb44:	bl	2d604 <__flatcc_error_report@@Base+0x10ac>
   2eb48:	ldr	r8, [r4, #40]	; 0x28
   2eb4c:	ldr	r3, [r8, #16]
   2eb50:	str	r0, [r5, #28]
   2eb54:	cmp	r3, #123	; 0x7b
   2eb58:	bne	2f938 <__flatcc_fb_parse@@Base+0x1758>
   2eb5c:	mov	r0, r4
   2eb60:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eb64:	ldr	r9, [r4, #40]	; 0x28
   2eb68:	ldr	r2, [r9, #16]
   2eb6c:	cmp	r2, #9
   2eb70:	bne	2fd78 <__flatcc_fb_parse@@Base+0x1b98>
   2eb74:	movw	r3, #35540	; 0x8ad4
   2eb78:	movt	r3, #5
   2eb7c:	str	r3, [sp, #16]
   2eb80:	mov	r0, r4
   2eb84:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eb88:	ldr	r3, [r4, #108]	; 0x6c
   2eb8c:	cmp	r3, #9
   2eb90:	bgt	2f2b0 <__flatcc_fb_parse@@Base+0x10d0>
   2eb94:	ldr	r2, [r4, #44]	; 0x2c
   2eb98:	ldr	r7, [r4, #52]	; 0x34
   2eb9c:	add	r3, r7, #128	; 0x80
   2eba0:	cmp	r3, r2
   2eba4:	bhi	30290 <__flatcc_fb_parse@@Base+0x20b0>
   2eba8:	ldr	r2, [r5, #20]
   2ebac:	mov	r0, #5
   2ebb0:	str	r3, [r4, #52]	; 0x34
   2ebb4:	str	r2, [r7]
   2ebb8:	strh	r0, [r7, #8]
   2ebbc:	str	r7, [r5, #20]
   2ebc0:	ldr	r3, [r4, #36]	; 0x24
   2ebc4:	cmp	r3, #0
   2ebc8:	beq	2ebec <__flatcc_fb_parse@@Base+0xa0c>
   2ebcc:	mov	r0, #0
   2ebd0:	b	2ebd8 <__flatcc_fb_parse@@Base+0x9f8>
   2ebd4:	mov	r3, r2
   2ebd8:	ldr	r2, [r3]
   2ebdc:	str	r0, [r3]
   2ebe0:	mov	r0, r3
   2ebe4:	cmp	r2, #0
   2ebe8:	bne	2ebd4 <__flatcc_fb_parse@@Base+0x9f4>
   2ebec:	ldr	r0, [r4, #40]	; 0x28
   2ebf0:	mov	r2, #0
   2ebf4:	str	r3, [r7, #68]	; 0x44
   2ebf8:	str	r2, [r4, #36]	; 0x24
   2ebfc:	str	r9, [r7, #4]
   2ec00:	ldr	r3, [r0, #16]
   2ec04:	cmp	r3, #61	; 0x3d
   2ec08:	bne	2ec30 <__flatcc_fb_parse@@Base+0xa50>
   2ec0c:	mov	r0, r4
   2ec10:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ec14:	mov	r0, r4
   2ec18:	mov	r2, #0
   2ec1c:	ldr	r3, [sp, #16]
   2ec20:	add	r1, r7, #48	; 0x30
   2ec24:	bl	2cf40 <__flatcc_error_report@@Base+0x9e8>
   2ec28:	ldr	r0, [r4, #40]	; 0x28
   2ec2c:	ldr	r3, [r0, #16]
   2ec30:	cmp	r3, #44	; 0x2c
   2ec34:	beq	2fd50 <__flatcc_fb_parse@@Base+0x1b70>
   2ec38:	mov	r1, r0
   2ec3c:	mov	r0, #0
   2ec40:	cmp	r3, #125	; 0x7d
   2ec44:	str	r0, [r4, #36]	; 0x24
   2ec48:	beq	303cc <__flatcc_fb_parse@@Base+0x21ec>
   2ec4c:	movw	r2, #35568	; 0x8af0
   2ec50:	movt	r2, #5
   2ec54:	str	r0, [sp]
   2ec58:	mov	r3, r8
   2ec5c:	str	r0, [sp, #4]
   2ec60:	mov	r0, r4
   2ec64:	bl	2c558 <__flatcc_error_report@@Base>
   2ec68:	ldr	r3, [r5, #20]
   2ec6c:	cmp	r3, #0
   2ec70:	beq	2ec94 <__flatcc_fb_parse@@Base+0xab4>
   2ec74:	mov	r1, #0
   2ec78:	b	2ec80 <__flatcc_fb_parse@@Base+0xaa0>
   2ec7c:	mov	r3, r2
   2ec80:	ldr	r2, [r3]
   2ec84:	str	r1, [r3]
   2ec88:	mov	r1, r3
   2ec8c:	cmp	r2, #0
   2ec90:	bne	2ec7c <__flatcc_fb_parse@@Base+0xa9c>
   2ec94:	ldr	r1, [r4, #40]	; 0x28
   2ec98:	str	r3, [r5, #20]
   2ec9c:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2eca0:	mov	r0, r4
   2eca4:	add	r7, r4, #400	; 0x190
   2eca8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ecac:	ldr	r5, [r4, #40]	; 0x28
   2ecb0:	ldr	r3, [r4, #400]	; 0x190
   2ecb4:	cmp	r3, #0
   2ecb8:	beq	2ecdc <__flatcc_fb_parse@@Base+0xafc>
   2ecbc:	mov	ip, #0
   2ecc0:	mov	r2, fp
   2ecc4:	mov	r3, ip
   2ecc8:	mov	r1, r5
   2eccc:	mov	r0, r4
   2ecd0:	str	ip, [sp]
   2ecd4:	str	ip, [sp, #4]
   2ecd8:	bl	2c558 <__flatcc_error_report@@Base>
   2ecdc:	mov	r1, r7
   2ece0:	mov	r0, r4
   2ece4:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   2ece8:	ldr	r1, [r4, #40]	; 0x28
   2ecec:	mov	r0, #0
   2ecf0:	ldr	r2, [r4, #544]	; 0x220
   2ecf4:	ldr	r3, [r1, #16]
   2ecf8:	str	r0, [r4, #36]	; 0x24
   2ecfc:	str	r2, [r4, #408]	; 0x198
   2ed00:	cmp	r3, #59	; 0x3b
   2ed04:	beq	2e6bc <__flatcc_fb_parse@@Base+0x4dc>
   2ed08:	mov	r3, r5
   2ed0c:	str	r0, [sp]
   2ed10:	str	r0, [sp, #4]
   2ed14:	mov	r0, r4
   2ed18:	ldr	r2, [sp, #12]
   2ed1c:	bl	2c558 <__flatcc_error_report@@Base>
   2ed20:	ldr	r1, [r4, #40]	; 0x28
   2ed24:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2ed28:	mov	r0, r4
   2ed2c:	mov	r5, #0
   2ed30:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ed34:	ldr	r7, [r4, #40]	; 0x28
   2ed38:	str	r5, [sp, #24]
   2ed3c:	ldr	r3, [r7, #16]
   2ed40:	cmp	r3, #59	; 0x3b
   2ed44:	beq	2f924 <__flatcc_fb_parse@@Base+0x1744>
   2ed48:	cmp	r3, #9
   2ed4c:	beq	30360 <__flatcc_fb_parse@@Base+0x2180>
   2ed50:	mov	r3, r5
   2ed54:	mov	r1, r7
   2ed58:	str	r5, [sp]
   2ed5c:	movw	r2, #34952	; 0x8888
   2ed60:	movt	r2, #5
   2ed64:	str	r5, [sp, #4]
   2ed68:	mov	r0, r4
   2ed6c:	bl	2c558 <__flatcc_error_report@@Base>
   2ed70:	ldr	r1, [r4, #40]	; 0x28
   2ed74:	ldr	r3, [r1, #16]
   2ed78:	cmp	r3, #0
   2ed7c:	bne	2ed9c <__flatcc_fb_parse@@Base+0xbbc>
   2ed80:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2ed84:	mov	r0, r4
   2ed88:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ed8c:	ldr	r1, [r4, #40]	; 0x28
   2ed90:	ldr	r3, [r1, #16]
   2ed94:	cmp	r3, #0
   2ed98:	beq	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2ed9c:	cmp	r3, #59	; 0x3b
   2eda0:	bne	2ed84 <__flatcc_fb_parse@@Base+0xba4>
   2eda4:	mov	r0, r4
   2eda8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2edac:	mov	r3, #0
   2edb0:	ldr	r1, [r4, #40]	; 0x28
   2edb4:	str	r3, [r4, #36]	; 0x24
   2edb8:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2edbc:	mov	r0, r4
   2edc0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2edc4:	ldr	r2, [r4, #44]	; 0x2c
   2edc8:	ldr	r5, [r4, #52]	; 0x34
   2edcc:	add	r3, r5, #32
   2edd0:	cmp	r3, r2
   2edd4:	bhi	2f9dc <__flatcc_fb_parse@@Base+0x17fc>
   2edd8:	ldr	r7, [r4, #40]	; 0x28
   2eddc:	str	r3, [r4, #52]	; 0x34
   2ede0:	ldr	r2, [r4, #356]	; 0x164
   2ede4:	ldr	r3, [r7, #16]
   2ede8:	str	r2, [r5]
   2edec:	str	r5, [r4, #356]	; 0x164
   2edf0:	cmp	r3, #19
   2edf4:	beq	2f234 <__flatcc_fb_parse@@Base+0x1054>
   2edf8:	mov	ip, #0
   2edfc:	movw	r2, #35324	; 0x89fc
   2ee00:	movt	r2, #5
   2ee04:	mov	r1, r7
   2ee08:	mov	r3, ip
   2ee0c:	mov	r0, r4
   2ee10:	str	ip, [sp]
   2ee14:	str	ip, [sp, #4]
   2ee18:	bl	2c558 <__flatcc_error_report@@Base>
   2ee1c:	ldr	r1, [r4, #40]	; 0x28
   2ee20:	ldr	r3, [r1, #16]
   2ee24:	cmp	r3, #59	; 0x3b
   2ee28:	beq	2e6bc <__flatcc_fb_parse@@Base+0x4dc>
   2ee2c:	mov	ip, #0
   2ee30:	movw	r2, #35392	; 0x8a40
   2ee34:	movt	r2, #5
   2ee38:	mov	r3, ip
   2ee3c:	b	2e5a8 <__flatcc_fb_parse@@Base+0x3c8>
   2ee40:	mov	r0, r4
   2ee44:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2ee48:	ldr	r2, [r4, #44]	; 0x2c
   2ee4c:	ldr	r5, [r4, #52]	; 0x34
   2ee50:	add	r3, r5, #128	; 0x80
   2ee54:	cmp	r3, r2
   2ee58:	bhi	2fa78 <__flatcc_fb_parse@@Base+0x1898>
   2ee5c:	ldr	r1, [r4, #392]	; 0x188
   2ee60:	mov	r0, #4
   2ee64:	str	r3, [r4, #52]	; 0x34
   2ee68:	ldr	r2, [r4, #544]	; 0x220
   2ee6c:	str	r1, [r5]
   2ee70:	ldr	r3, [r4, #36]	; 0x24
   2ee74:	strh	r0, [r5, #8]
   2ee78:	str	r5, [r4, #392]	; 0x188
   2ee7c:	str	r2, [r5, #12]
   2ee80:	cmp	r3, #0
   2ee84:	beq	2eea8 <__flatcc_fb_parse@@Base+0xcc8>
   2ee88:	mov	r1, #0
   2ee8c:	b	2ee94 <__flatcc_fb_parse@@Base+0xcb4>
   2ee90:	mov	r3, r2
   2ee94:	ldr	r2, [r3]
   2ee98:	str	r1, [r3]
   2ee9c:	mov	r1, r3
   2eea0:	cmp	r2, #0
   2eea4:	bne	2ee90 <__flatcc_fb_parse@@Base+0xcb0>
   2eea8:	ldr	r8, [r4, #40]	; 0x28
   2eeac:	mov	r7, #0
   2eeb0:	str	r3, [r5, #32]
   2eeb4:	str	r7, [r4, #36]	; 0x24
   2eeb8:	ldr	r3, [r8, #16]
   2eebc:	cmp	r3, #9
   2eec0:	bne	2f2e8 <__flatcc_fb_parse@@Base+0x1108>
   2eec4:	mov	r0, r4
   2eec8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eecc:	mov	r0, r4
   2eed0:	str	r8, [r5, #4]
   2eed4:	bl	2d604 <__flatcc_error_report@@Base+0x10ac>
   2eed8:	ldr	r8, [r4, #40]	; 0x28
   2eedc:	ldr	r3, [r8, #16]
   2eee0:	str	r0, [r5, #28]
   2eee4:	cmp	r3, #123	; 0x7b
   2eee8:	bne	303d8 <__flatcc_fb_parse@@Base+0x21f8>
   2eeec:	mov	r0, r4
   2eef0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eef4:	ldr	r9, [r4, #40]	; 0x28
   2eef8:	ldr	r3, [r9, #16]
   2eefc:	cmp	r3, #9
   2ef00:	bne	30cf0 <__flatcc_fb_parse@@Base+0x2b10>
   2ef04:	ldr	r3, [r4, #108]	; 0x6c
   2ef08:	cmp	r3, #9
   2ef0c:	bgt	2f330 <__flatcc_fb_parse@@Base+0x1150>
   2ef10:	movw	r3, #35704	; 0x8b78
   2ef14:	movt	r3, #5
   2ef18:	str	r3, [sp, #20]
   2ef1c:	movw	r3, #35540	; 0x8ad4
   2ef20:	movt	r3, #5
   2ef24:	str	r3, [sp, #16]
   2ef28:	ldr	r2, [r4, #44]	; 0x2c
   2ef2c:	ldr	r7, [r4, #52]	; 0x34
   2ef30:	add	r3, r7, #128	; 0x80
   2ef34:	cmp	r3, r2
   2ef38:	bhi	30454 <__flatcc_fb_parse@@Base+0x2274>
   2ef3c:	ldr	r2, [r5, #20]
   2ef40:	mov	r1, #5
   2ef44:	str	r3, [r4, #52]	; 0x34
   2ef48:	str	r2, [r7]
   2ef4c:	strh	r1, [r7, #8]
   2ef50:	str	r7, [r5, #20]
   2ef54:	ldr	r3, [r4, #36]	; 0x24
   2ef58:	cmp	r3, #0
   2ef5c:	beq	2ef80 <__flatcc_fb_parse@@Base+0xda0>
   2ef60:	mov	r1, #0
   2ef64:	b	2ef6c <__flatcc_fb_parse@@Base+0xd8c>
   2ef68:	mov	r3, r2
   2ef6c:	ldr	r2, [r3]
   2ef70:	str	r1, [r3]
   2ef74:	mov	r1, r3
   2ef78:	cmp	r2, #0
   2ef7c:	bne	2ef68 <__flatcc_fb_parse@@Base+0xd88>
   2ef80:	mov	r2, #0
   2ef84:	add	r1, sp, #28
   2ef88:	str	r3, [r7, #68]	; 0x44
   2ef8c:	mov	r0, r4
   2ef90:	str	r2, [r4, #36]	; 0x24
   2ef94:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   2ef98:	ldr	r3, [sp, #28]
   2ef9c:	mov	r2, #12
   2efa0:	str	r3, [r7, #16]
   2efa4:	strh	r2, [r7, #24]
   2efa8:	ldr	r2, [r3]
   2efac:	cmp	r2, #0
   2efb0:	bne	2efbc <__flatcc_fb_parse@@Base+0xddc>
   2efb4:	b	30bb0 <__flatcc_fb_parse@@Base+0x29d0>
   2efb8:	mov	r2, r3
   2efbc:	ldr	r3, [r2]
   2efc0:	cmp	r3, #0
   2efc4:	bne	2efb8 <__flatcc_fb_parse@@Base+0xdd8>
   2efc8:	str	r2, [sp, #28]
   2efcc:	ldr	r1, [r4, #40]	; 0x28
   2efd0:	ldr	r2, [r2, #4]
   2efd4:	ldr	r3, [r1, #16]
   2efd8:	str	r2, [r7, #4]
   2efdc:	cmp	r3, #58	; 0x3a
   2efe0:	beq	30310 <__flatcc_fb_parse@@Base+0x2130>
   2efe4:	cmp	r3, #61	; 0x3d
   2efe8:	bne	2f010 <__flatcc_fb_parse@@Base+0xe30>
   2efec:	mov	r0, r4
   2eff0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2eff4:	add	r1, r7, #48	; 0x30
   2eff8:	mov	r2, #0
   2effc:	ldr	r3, [sp, #16]
   2f000:	mov	r0, r4
   2f004:	bl	2cf40 <__flatcc_error_report@@Base+0x9e8>
   2f008:	ldr	r1, [r4, #40]	; 0x28
   2f00c:	ldr	r3, [r1, #16]
   2f010:	cmp	r3, #44	; 0x2c
   2f014:	beq	302d8 <__flatcc_fb_parse@@Base+0x20f8>
   2f018:	mov	r0, #0
   2f01c:	cmp	r3, #125	; 0x7d
   2f020:	str	r0, [r4, #36]	; 0x24
   2f024:	beq	304d8 <__flatcc_fb_parse@@Base+0x22f8>
   2f028:	movw	r2, #35764	; 0x8bb4
   2f02c:	movt	r2, #5
   2f030:	str	r0, [sp]
   2f034:	mov	r3, r8
   2f038:	str	r0, [sp, #4]
   2f03c:	mov	r0, r4
   2f040:	bl	2c558 <__flatcc_error_report@@Base>
   2f044:	ldr	r3, [r5, #20]
   2f048:	cmp	r3, #0
   2f04c:	beq	2f070 <__flatcc_fb_parse@@Base+0xe90>
   2f050:	mov	r1, #0
   2f054:	b	2f05c <__flatcc_fb_parse@@Base+0xe7c>
   2f058:	mov	r3, r2
   2f05c:	ldr	r2, [r3]
   2f060:	str	r1, [r3]
   2f064:	mov	r1, r3
   2f068:	cmp	r2, #0
   2f06c:	bne	2f058 <__flatcc_fb_parse@@Base+0xe78>
   2f070:	ldr	r1, [r4, #44]	; 0x2c
   2f074:	ldr	ip, [r4, #52]	; 0x34
   2f078:	str	r3, [r5, #20]
   2f07c:	add	r2, ip, #128	; 0x80
   2f080:	cmp	r2, r1
   2f084:	bhi	305e0 <__flatcc_fb_parse@@Base+0x2400>
   2f088:	mov	r1, #5
   2f08c:	str	r2, [r4, #52]	; 0x34
   2f090:	str	r3, [ip]
   2f094:	strh	r1, [ip, #8]
   2f098:	str	ip, [r5, #20]
   2f09c:	ldr	r3, [r4, #36]	; 0x24
   2f0a0:	cmp	r3, #0
   2f0a4:	beq	2f0c8 <__flatcc_fb_parse@@Base+0xee8>
   2f0a8:	mov	r1, #0
   2f0ac:	b	2f0b4 <__flatcc_fb_parse@@Base+0xed4>
   2f0b0:	mov	r3, r2
   2f0b4:	ldr	r2, [r3]
   2f0b8:	str	r1, [r3]
   2f0bc:	mov	r1, r3
   2f0c0:	cmp	r2, #0
   2f0c4:	bne	2f0b0 <__flatcc_fb_parse@@Base+0xed0>
   2f0c8:	mov	r2, #0
   2f0cc:	ldr	r1, [r4, #40]	; 0x28
   2f0d0:	str	r3, [ip, #68]	; 0x44
   2f0d4:	add	r3, r4, #68	; 0x44
   2f0d8:	str	r2, [r4, #36]	; 0x24
   2f0dc:	str	r3, [ip, #4]
   2f0e0:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2f0e4:	mov	r0, r4
   2f0e8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f0ec:	ldr	r2, [r4, #44]	; 0x2c
   2f0f0:	ldr	r1, [r4, #52]	; 0x34
   2f0f4:	add	r3, r1, #128	; 0x80
   2f0f8:	cmp	r3, r2
   2f0fc:	bhi	2fa44 <__flatcc_fb_parse@@Base+0x1864>
   2f100:	ldr	ip, [r4, #392]	; 0x188
   2f104:	mov	r2, #0
   2f108:	str	r3, [r4, #52]	; 0x34
   2f10c:	ldr	r0, [r4, #544]	; 0x220
   2f110:	str	ip, [r1]
   2f114:	ldr	r3, [r4, #36]	; 0x24
   2f118:	strh	r2, [r1, #8]
   2f11c:	str	r1, [r4, #392]	; 0x188
   2f120:	str	r0, [r1, #12]
   2f124:	cmp	r3, r2
   2f128:	bne	2f134 <__flatcc_fb_parse@@Base+0xf54>
   2f12c:	b	2f148 <__flatcc_fb_parse@@Base+0xf68>
   2f130:	mov	r3, r0
   2f134:	ldr	r0, [r3]
   2f138:	str	r2, [r3]
   2f13c:	mov	r2, r3
   2f140:	cmp	r0, #0
   2f144:	bne	2f130 <__flatcc_fb_parse@@Base+0xf50>
   2f148:	mov	r0, #0
   2f14c:	movw	r2, #64553	; 0xfc29
   2f150:	str	r3, [r1, #32]
   2f154:	b	2e964 <__flatcc_fb_parse@@Base+0x784>
   2f158:	mov	ip, #0
   2f15c:	movw	r2, #35856	; 0x8c10
   2f160:	movt	r2, #5
   2f164:	mov	r3, ip
   2f168:	b	2e5a8 <__flatcc_fb_parse@@Base+0x3c8>
   2f16c:	movw	r3, #36072	; 0x8ce8
   2f170:	movt	r3, #5
   2f174:	movw	r2, #36048	; 0x8cd0
   2f178:	movt	r2, #5
   2f17c:	mov	r0, #5
   2f180:	b	2e804 <__flatcc_fb_parse@@Base+0x624>
   2f184:	mov	ip, #0
   2f188:	movw	r2, #35052	; 0x88ec
   2f18c:	movt	r2, #5
   2f190:	mov	r3, ip
   2f194:	mov	r0, r4
   2f198:	str	ip, [sp]
   2f19c:	str	ip, [sp, #4]
   2f1a0:	bl	2c558 <__flatcc_error_report@@Base>
   2f1a4:	ldr	r1, [r4, #40]	; 0x28
   2f1a8:	ldr	r3, [r1, #16]
   2f1ac:	cmp	r3, #0
   2f1b0:	bne	2f1d0 <__flatcc_fb_parse@@Base+0xff0>
   2f1b4:	b	2fc7c <__flatcc_fb_parse@@Base+0x1a9c>
   2f1b8:	mov	r0, r4
   2f1bc:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f1c0:	ldr	r1, [r4, #40]	; 0x28
   2f1c4:	ldr	r3, [r1, #16]
   2f1c8:	cmp	r3, #0
   2f1cc:	beq	2fc7c <__flatcc_fb_parse@@Base+0x1a9c>
   2f1d0:	cmp	r3, #59	; 0x3b
   2f1d4:	bne	2f1b8 <__flatcc_fb_parse@@Base+0xfd8>
   2f1d8:	b	2eda4 <__flatcc_fb_parse@@Base+0xbc4>
   2f1dc:	mov	ip, #0
   2f1e0:	movw	r2, #35148	; 0x894c
   2f1e4:	movt	r2, #5
   2f1e8:	mov	r3, ip
   2f1ec:	mov	r0, r4
   2f1f0:	str	ip, [sp]
   2f1f4:	str	ip, [sp, #4]
   2f1f8:	bl	2c558 <__flatcc_error_report@@Base>
   2f1fc:	ldr	r1, [r4, #40]	; 0x28
   2f200:	ldr	r3, [r1, #16]
   2f204:	cmp	r3, #0
   2f208:	bne	2f228 <__flatcc_fb_parse@@Base+0x1048>
   2f20c:	b	2fc7c <__flatcc_fb_parse@@Base+0x1a9c>
   2f210:	mov	r0, r4
   2f214:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f218:	ldr	r1, [r4, #40]	; 0x28
   2f21c:	ldr	r3, [r1, #16]
   2f220:	cmp	r3, #0
   2f224:	beq	2fc7c <__flatcc_fb_parse@@Base+0x1a9c>
   2f228:	cmp	r3, #59	; 0x3b
   2f22c:	bne	2f210 <__flatcc_fb_parse@@Base+0x1030>
   2f230:	b	2eda4 <__flatcc_fb_parse@@Base+0xbc4>
   2f234:	mov	r0, r4
   2f238:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f23c:	mov	r3, #0
   2f240:	mov	r2, #2
   2f244:	mov	r0, r4
   2f248:	add	r1, r5, #8
   2f24c:	str	r3, [r5, #8]
   2f250:	str	r3, [r5, #12]
   2f254:	strh	r2, [r5, #16]
   2f258:	bl	2cd64 <__flatcc_error_report@@Base+0x80c>
   2f25c:	ldr	r0, [r5, #12]
   2f260:	cmp	r0, #0
   2f264:	bne	2ee1c <__flatcc_fb_parse@@Base+0xc3c>
   2f268:	mov	r3, r0
   2f26c:	mov	r1, r7
   2f270:	str	r0, [sp]
   2f274:	movw	r2, #35360	; 0x8a20
   2f278:	movt	r2, #5
   2f27c:	str	r0, [sp, #4]
   2f280:	mov	r0, r4
   2f284:	bl	2c558 <__flatcc_error_report@@Base>
   2f288:	b	2ee1c <__flatcc_fb_parse@@Base+0xc3c>
   2f28c:	mov	r1, r8
   2f290:	movw	r2, #35416	; 0x8a58
   2f294:	movt	r2, #5
   2f298:	mov	r3, r7
   2f29c:	str	r7, [sp]
   2f2a0:	mov	r0, r4
   2f2a4:	str	r7, [sp, #4]
   2f2a8:	bl	2c558 <__flatcc_error_report@@Base>
   2f2ac:	str	r7, [r5, #4]
   2f2b0:	ldr	r1, [r4, #40]	; 0x28
   2f2b4:	ldr	r3, [r1, #16]
   2f2b8:	cmp	r3, #0
   2f2bc:	bne	2f2dc <__flatcc_fb_parse@@Base+0x10fc>
   2f2c0:	b	2fc7c <__flatcc_fb_parse@@Base+0x1a9c>
   2f2c4:	mov	r0, r4
   2f2c8:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f2cc:	ldr	r1, [r4, #40]	; 0x28
   2f2d0:	ldr	r3, [r1, #16]
   2f2d4:	cmp	r3, #0
   2f2d8:	beq	2fc7c <__flatcc_fb_parse@@Base+0x1a9c>
   2f2dc:	cmp	r3, #125	; 0x7d
   2f2e0:	bne	2f2c4 <__flatcc_fb_parse@@Base+0x10e4>
   2f2e4:	b	2eda4 <__flatcc_fb_parse@@Base+0xbc4>
   2f2e8:	mov	r1, r8
   2f2ec:	mov	r3, r7
   2f2f0:	str	r7, [sp]
   2f2f4:	movw	r2, #35604	; 0x8b14
   2f2f8:	movt	r2, #5
   2f2fc:	str	r7, [sp, #4]
   2f300:	mov	r0, r4
   2f304:	bl	2c558 <__flatcc_error_report@@Base>
   2f308:	ldr	r1, [r4, #40]	; 0x28
   2f30c:	ldr	r3, [r1, #16]
   2f310:	str	r7, [r5, #4]
   2f314:	cmp	r3, #0
   2f318:	bne	2f348 <__flatcc_fb_parse@@Base+0x1168>
   2f31c:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2f320:	cmp	r3, #125	; 0x7d
   2f324:	moveq	r3, #0
   2f328:	streq	r3, [r4, #36]	; 0x24
   2f32c:	beq	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2f330:	mov	r0, r4
   2f334:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f338:	ldr	r1, [r4, #40]	; 0x28
   2f33c:	ldr	r3, [r1, #16]
   2f340:	cmp	r3, #0
   2f344:	beq	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2f348:	cmp	r3, #59	; 0x3b
   2f34c:	bne	2f320 <__flatcc_fb_parse@@Base+0x1140>
   2f350:	b	2eda4 <__flatcc_fb_parse@@Base+0xbc4>
   2f354:	add	r2, r5, #1
   2f358:	subs	r3, r2, #0
   2f35c:	beq	310e4 <__flatcc_fb_parse@@Base+0x2f04>
   2f360:	ldrb	r1, [r2]
   2f364:	add	r2, r3, #1
   2f368:	sub	r0, r1, #48	; 0x30
   2f36c:	cmp	r0, #9
   2f370:	bls	2f358 <__flatcc_fb_parse@@Base+0x1178>
   2f374:	cmp	r1, #46	; 0x2e
   2f378:	beq	30c34 <__flatcc_fb_parse@@Base+0x2a54>
   2f37c:	cmp	r6, r3
   2f380:	beq	30500 <__flatcc_fb_parse@@Base+0x2320>
   2f384:	and	r1, r1, #223	; 0xdf
   2f388:	cmp	r1, #69	; 0x45
   2f38c:	moveq	r0, r3
   2f390:	bne	30500 <__flatcc_fb_parse@@Base+0x2320>
   2f394:	add	r2, r3, #1
   2f398:	cmp	r6, r2
   2f39c:	beq	2f3b0 <__flatcc_fb_parse@@Base+0x11d0>
   2f3a0:	ldrb	r1, [r3, #1]
   2f3a4:	sub	r1, r1, #43	; 0x2b
   2f3a8:	tst	r1, #253	; 0xfd
   2f3ac:	movne	r2, r3
   2f3b0:	add	r2, r2, #1
   2f3b4:	b	2f3cc <__flatcc_fb_parse@@Base+0x11ec>
   2f3b8:	ldrb	r1, [r2]
   2f3bc:	add	r2, r2, #1
   2f3c0:	sub	r1, r1, #48	; 0x30
   2f3c4:	cmp	r1, #9
   2f3c8:	bhi	2f3d8 <__flatcc_fb_parse@@Base+0x11f8>
   2f3cc:	cmp	r6, r2
   2f3d0:	mov	r3, r2
   2f3d4:	bne	2f3b8 <__flatcc_fb_parse@@Base+0x11d8>
   2f3d8:	cmp	r3, r0
   2f3dc:	beq	30500 <__flatcc_fb_parse@@Base+0x2320>
   2f3e0:	mov	r2, r5
   2f3e4:	mov	r1, #11
   2f3e8:	mov	r0, r4
   2f3ec:	mov	r5, r3
   2f3f0:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f3f4:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f3f8:	add	r3, r5, #1
   2f3fc:	cmp	r6, r3
   2f400:	beq	30648 <__flatcc_fb_parse@@Base+0x2468>
   2f404:	ldrb	r2, [r5, #1]
   2f408:	cmp	r2, #58	; 0x3a
   2f40c:	beq	30700 <__flatcc_fb_parse@@Base+0x2520>
   2f410:	cmp	r2, #61	; 0x3d
   2f414:	bne	30648 <__flatcc_fb_parse@@Base+0x2468>
   2f418:	add	r3, r5, #2
   2f41c:	mov	r2, r5
   2f420:	movw	r1, #15674	; 0x3d3a
   2f424:	mov	r0, r4
   2f428:	mov	r5, r3
   2f42c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f430:	cmp	r6, r5
   2f434:	beq	2e4d4 <__flatcc_fb_parse@@Base+0x2f4>
   2f438:	ldrb	r1, [r5]
   2f43c:	b	2e2a8 <__flatcc_fb_parse@@Base+0xc8>
   2f440:	add	r3, r5, #1
   2f444:	cmp	r6, r3
   2f448:	beq	2f468 <__flatcc_fb_parse@@Base+0x1288>
   2f44c:	ldrb	r2, [r5, #1]
   2f450:	cmp	r2, #47	; 0x2f
   2f454:	beq	30978 <__flatcc_fb_parse@@Base+0x2798>
   2f458:	cmp	r2, #61	; 0x3d
   2f45c:	beq	30ac0 <__flatcc_fb_parse@@Base+0x28e0>
   2f460:	cmp	r2, #42	; 0x2a
   2f464:	beq	30828 <__flatcc_fb_parse@@Base+0x2648>
   2f468:	mov	r2, r5
   2f46c:	mov	r1, #47	; 0x2f
   2f470:	mov	r0, r4
   2f474:	mov	r5, r3
   2f478:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f47c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f480:	add	r2, r5, #1
   2f484:	cmp	r6, r2
   2f488:	beq	2f358 <__flatcc_fb_parse@@Base+0x1178>
   2f48c:	ldrb	r3, [r5, #1]
   2f490:	cmp	r3, #88	; 0x58
   2f494:	beq	2f4a0 <__flatcc_fb_parse@@Base+0x12c0>
   2f498:	cmp	r3, #120	; 0x78
   2f49c:	bne	2f358 <__flatcc_fb_parse@@Base+0x1178>
   2f4a0:	add	r1, r5, #2
   2f4a4:	cmp	r6, r1
   2f4a8:	mov	r3, r1
   2f4ac:	beq	2f4d0 <__flatcc_fb_parse@@Base+0x12f0>
   2f4b0:	ldrb	r2, [r1], #1
   2f4b4:	sub	r0, r2, #48	; 0x30
   2f4b8:	cmp	r0, #9
   2f4bc:	bls	2f4a4 <__flatcc_fb_parse@@Base+0x12c4>
   2f4c0:	orr	r2, r2, #32
   2f4c4:	sub	r2, r2, #97	; 0x61
   2f4c8:	cmp	r2, #5
   2f4cc:	bls	2f4a4 <__flatcc_fb_parse@@Base+0x12c4>
   2f4d0:	mov	r2, r5
   2f4d4:	mov	r1, #14
   2f4d8:	mov	r0, r4
   2f4dc:	mov	r5, r3
   2f4e0:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f4e4:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f4e8:	add	r2, r5, #1
   2f4ec:	lsl	r3, r1, #8
   2f4f0:	cmp	r6, r2
   2f4f4:	mov	r9, r2
   2f4f8:	beq	2f520 <__flatcc_fb_parse@@Base+0x1340>
   2f4fc:	ldrb	ip, [r5, #1]
   2f500:	movw	r0, #32748	; 0x7fec
   2f504:	movt	r0, #5
   2f508:	add	lr, r0, ip
   2f50c:	ldrb	lr, [lr, #40]	; 0x28
   2f510:	cmp	lr, #0
   2f514:	orrne	r3, r3, ip, lsl #16
   2f518:	movne	ip, r2
   2f51c:	bne	2f5dc <__flatcc_fb_parse@@Base+0x13fc>
   2f520:	mov	r0, #49	; 0x31
   2f524:	orr	r3, r3, r0
   2f528:	orr	r1, r3, r1, lsl #24
   2f52c:	ldr	r3, [sp, #16]
   2f530:	cmp	r1, r3
   2f534:	beq	30d80 <__flatcc_fb_parse@@Base+0x2ba0>
   2f538:	bhi	2fdf4 <__flatcc_fb_parse@@Base+0x1c14>
   2f53c:	movw	r3, #30005	; 0x7535
   2f540:	movt	r3, #14441	; 0x3869
   2f544:	cmp	r1, r3
   2f548:	beq	30dd0 <__flatcc_fb_parse@@Base+0x2bf0>
   2f54c:	bhi	2fedc <__flatcc_fb_parse@@Base+0x1cfc>
   2f550:	movw	r3, #30006	; 0x7536
   2f554:	movt	r3, #13417	; 0x3469
   2f558:	cmp	r1, r3
   2f55c:	beq	30da8 <__flatcc_fb_parse@@Base+0x2bc8>
   2f560:	bls	2fe84 <__flatcc_fb_parse@@Base+0x1ca4>
   2f564:	movw	r3, #26933	; 0x6935
   2f568:	movt	r3, #13422	; 0x346e
   2f56c:	cmp	r1, r3
   2f570:	beq	30fbc <__flatcc_fb_parse@@Base+0x2ddc>
   2f574:	bls	2fe4c <__flatcc_fb_parse@@Base+0x1c6c>
   2f578:	movw	r3, #30006	; 0x7536
   2f57c:	movt	r3, #13929	; 0x3669
   2f580:	cmp	r1, r3
   2f584:	bne	2fdbc <__flatcc_fb_parse@@Base+0x1bdc>
   2f588:	mov	r1, r5
   2f58c:	movw	r0, #35552	; 0x8ae0
   2f590:	movt	r0, #4
   2f594:	mov	r2, #6
   2f598:	bl	13fd0 <memcmp@plt>
   2f59c:	cmp	r0, #0
   2f5a0:	movw	r1, #64556	; 0xfc2c
   2f5a4:	movt	r1, #65535	; 0xffff
   2f5a8:	movne	r1, #9
   2f5ac:	mov	r2, r5
   2f5b0:	mov	r3, r9
   2f5b4:	mov	r0, r4
   2f5b8:	mov	r5, r9
   2f5bc:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f5c0:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f5c4:	ldrb	r1, [r9]
   2f5c8:	add	r1, r0, r1
   2f5cc:	ldrb	r1, [r1, #40]	; 0x28
   2f5d0:	cmp	r1, #0
   2f5d4:	beq	30c3c <__flatcc_fb_parse@@Base+0x2a5c>
   2f5d8:	mov	ip, r9
   2f5dc:	add	r9, r9, #1
   2f5e0:	cmp	r6, r9
   2f5e4:	bne	2f5c4 <__flatcc_fb_parse@@Base+0x13e4>
   2f5e8:	sub	r0, r6, r5
   2f5ec:	ldrb	r1, [ip]
   2f5f0:	uxtb	r0, r0
   2f5f4:	add	r0, r0, #48	; 0x30
   2f5f8:	b	2f524 <__flatcc_fb_parse@@Base+0x1344>
   2f5fc:	add	r9, r5, #1
   2f600:	cmp	r6, r9
   2f604:	beq	30678 <__flatcc_fb_parse@@Base+0x2498>
   2f608:	ldrb	r3, [r5, #1]
   2f60c:	cmp	r3, #42	; 0x2a
   2f610:	beq	306c4 <__flatcc_fb_parse@@Base+0x24e4>
   2f614:	cmp	r3, #61	; 0x3d
   2f618:	bne	30678 <__flatcc_fb_parse@@Base+0x2498>
   2f61c:	mov	r2, r5
   2f620:	movw	r1, #15658	; 0x3d2a
   2f624:	mov	r3, r9
   2f628:	mov	r0, r4
   2f62c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f630:	ldrb	r1, [r5, #1]
   2f634:	mov	r5, r9
   2f638:	b	2e2a8 <__flatcc_fb_parse@@Base+0xc8>
   2f63c:	add	r3, r5, #1
   2f640:	cmp	r6, r3
   2f644:	beq	30630 <__flatcc_fb_parse@@Base+0x2450>
   2f648:	ldrb	r2, [r5, #1]
   2f64c:	cmp	r2, #43	; 0x2b
   2f650:	beq	3074c <__flatcc_fb_parse@@Base+0x256c>
   2f654:	cmp	r2, #61	; 0x3d
   2f658:	bne	30630 <__flatcc_fb_parse@@Base+0x2450>
   2f65c:	add	r3, r5, #2
   2f660:	mov	r2, r5
   2f664:	movw	r1, #15659	; 0x3d2b
   2f668:	mov	r0, r4
   2f66c:	mov	r5, r3
   2f670:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f674:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f678:	add	r3, r5, #1
   2f67c:	cmp	r6, r3
   2f680:	beq	2f6a0 <__flatcc_fb_parse@@Base+0x14c0>
   2f684:	ldrb	r2, [r5, #1]
   2f688:	cmp	r2, #61	; 0x3d
   2f68c:	beq	3080c <__flatcc_fb_parse@@Base+0x262c>
   2f690:	cmp	r2, #62	; 0x3e
   2f694:	beq	307f0 <__flatcc_fb_parse@@Base+0x2610>
   2f698:	cmp	r2, #45	; 0x2d
   2f69c:	beq	30b78 <__flatcc_fb_parse@@Base+0x2998>
   2f6a0:	mov	r2, r5
   2f6a4:	mov	r1, #45	; 0x2d
   2f6a8:	mov	r0, r4
   2f6ac:	mov	r5, r3
   2f6b0:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f6b4:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f6b8:	add	r3, r5, #1
   2f6bc:	cmp	r6, r3
   2f6c0:	beq	30618 <__flatcc_fb_parse@@Base+0x2438>
   2f6c4:	ldrb	r2, [r5, #1]
   2f6c8:	cmp	r2, #46	; 0x2e
   2f6cc:	beq	30694 <__flatcc_fb_parse@@Base+0x24b4>
   2f6d0:	bcc	30618 <__flatcc_fb_parse@@Base+0x2438>
   2f6d4:	sub	r2, r2, #48	; 0x30
   2f6d8:	cmp	r2, #9
   2f6dc:	movls	r0, r5
   2f6e0:	bhi	30618 <__flatcc_fb_parse@@Base+0x2438>
   2f6e4:	add	r2, r3, #1
   2f6e8:	b	2f700 <__flatcc_fb_parse@@Base+0x1520>
   2f6ec:	ldrb	r1, [r2]
   2f6f0:	add	r2, r2, #1
   2f6f4:	sub	ip, r1, #48	; 0x30
   2f6f8:	cmp	ip, #9
   2f6fc:	bhi	30768 <__flatcc_fb_parse@@Base+0x2588>
   2f700:	cmp	r6, r2
   2f704:	mov	r3, r2
   2f708:	bne	2f6ec <__flatcc_fb_parse@@Base+0x150c>
   2f70c:	b	2f3d8 <__flatcc_fb_parse@@Base+0x11f8>
   2f710:	add	r3, r5, #1
   2f714:	cmp	r6, r3
   2f718:	beq	2f728 <__flatcc_fb_parse@@Base+0x1548>
   2f71c:	ldrb	r2, [r5, #1]
   2f720:	cmp	r2, #61	; 0x3d
   2f724:	beq	30bf4 <__flatcc_fb_parse@@Base+0x2a14>
   2f728:	mov	r2, r5
   2f72c:	mov	r0, r4
   2f730:	mov	r5, r3
   2f734:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f738:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f73c:	add	r3, r5, #1
   2f740:	mov	r2, r5
   2f744:	mov	r0, r4
   2f748:	mov	r5, r3
   2f74c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f750:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f754:	add	r3, r5, #1
   2f758:	cmp	r6, r3
   2f75c:	beq	2f76c <__flatcc_fb_parse@@Base+0x158c>
   2f760:	ldrb	r2, [r5, #1]
   2f764:	cmp	r2, #13
   2f768:	beq	2f7d8 <__flatcc_fb_parse@@Base+0x15f8>
   2f76c:	ldr	r2, [r4, #64]	; 0x40
   2f770:	mov	r5, r3
   2f774:	str	r3, [r4, #60]	; 0x3c
   2f778:	add	r3, r2, #1
   2f77c:	str	r3, [r4, #64]	; 0x40
   2f780:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f784:	add	r9, r5, #1
   2f788:	cmp	r6, r9
   2f78c:	beq	30438 <__flatcc_fb_parse@@Base+0x2258>
   2f790:	ldrb	r3, [r5, #1]
   2f794:	cmp	r3, #38	; 0x26
   2f798:	beq	30420 <__flatcc_fb_parse@@Base+0x2240>
   2f79c:	cmp	r3, #61	; 0x3d
   2f7a0:	bne	30438 <__flatcc_fb_parse@@Base+0x2258>
   2f7a4:	add	r3, r5, #2
   2f7a8:	mov	r2, r5
   2f7ac:	movw	r1, #15654	; 0x3d26
   2f7b0:	mov	r0, r4
   2f7b4:	mov	r5, r3
   2f7b8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f7bc:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f7c0:	add	r3, r5, #1
   2f7c4:	cmp	r6, r3
   2f7c8:	beq	2f76c <__flatcc_fb_parse@@Base+0x158c>
   2f7cc:	ldrb	r2, [r5, #1]
   2f7d0:	cmp	r2, #10
   2f7d4:	bne	2f76c <__flatcc_fb_parse@@Base+0x158c>
   2f7d8:	add	r3, r5, #2
   2f7dc:	b	2f76c <__flatcc_fb_parse@@Base+0x158c>
   2f7e0:	add	r9, r5, #1
   2f7e4:	cmp	r6, r9
   2f7e8:	beq	2f818 <__flatcc_fb_parse@@Base+0x1638>
   2f7ec:	ldrb	r3, [r5, #1]
   2f7f0:	cmp	r3, #61	; 0x3d
   2f7f4:	beq	306e4 <__flatcc_fb_parse@@Base+0x2504>
   2f7f8:	cmp	r3, #124	; 0x7c
   2f7fc:	bne	2f818 <__flatcc_fb_parse@@Base+0x1638>
   2f800:	add	r9, r5, #2
   2f804:	mov	r2, r5
   2f808:	mov	r3, r9
   2f80c:	movw	r1, #31868	; 0x7c7c
   2f810:	mov	r0, r4
   2f814:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f818:	mov	r2, r5
   2f81c:	mov	r3, r9
   2f820:	mov	r1, #124	; 0x7c
   2f824:	mov	r0, r4
   2f828:	mov	r5, r9
   2f82c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f830:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f834:	add	r9, r5, #1
   2f838:	cmp	r6, r9
   2f83c:	beq	304b4 <__flatcc_fb_parse@@Base+0x22d4>
   2f840:	ldrb	r3, [r5, #1]
   2f844:	cmp	r3, #61	; 0x3d
   2f848:	beq	30488 <__flatcc_fb_parse@@Base+0x22a8>
   2f84c:	cmp	r3, #62	; 0x3e
   2f850:	bne	304b4 <__flatcc_fb_parse@@Base+0x22d4>
   2f854:	add	r3, r5, #2
   2f858:	mov	r2, r5
   2f85c:	movw	r1, #15933	; 0x3e3d
   2f860:	mov	r0, r4
   2f864:	mov	r5, r3
   2f868:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f86c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f870:	add	r3, r5, #1
   2f874:	cmp	r6, r3
   2f878:	beq	30660 <__flatcc_fb_parse@@Base+0x2480>
   2f87c:	ldrb	r2, [r5, #1]
   2f880:	cmp	r2, #61	; 0x3d
   2f884:	beq	30730 <__flatcc_fb_parse@@Base+0x2550>
   2f888:	cmp	r2, #62	; 0x3e
   2f88c:	bne	30660 <__flatcc_fb_parse@@Base+0x2480>
   2f890:	add	r3, r5, #2
   2f894:	cmp	r6, r3
   2f898:	beq	30594 <__flatcc_fb_parse@@Base+0x23b4>
   2f89c:	ldrb	r2, [r5, #2]
   2f8a0:	cmp	r2, #61	; 0x3d
   2f8a4:	beq	30c50 <__flatcc_fb_parse@@Base+0x2a70>
   2f8a8:	cmp	r2, #62	; 0x3e
   2f8ac:	bne	30594 <__flatcc_fb_parse@@Base+0x23b4>
   2f8b0:	add	r3, r5, #3
   2f8b4:	cmp	r6, r3
   2f8b8:	beq	2f8c8 <__flatcc_fb_parse@@Base+0x16e8>
   2f8bc:	ldrb	r2, [r5, #3]
   2f8c0:	cmp	r2, #61	; 0x3d
   2f8c4:	beq	310a0 <__flatcc_fb_parse@@Base+0x2ec0>
   2f8c8:	mov	r2, r5
   2f8cc:	movw	r1, #15934	; 0x3e3e
   2f8d0:	movt	r1, #62	; 0x3e
   2f8d4:	mov	r0, r4
   2f8d8:	mov	r5, r3
   2f8dc:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f8e0:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f8e4:	add	r3, r5, #1
   2f8e8:	cmp	r6, r3
   2f8ec:	beq	2f90c <__flatcc_fb_parse@@Base+0x172c>
   2f8f0:	ldrb	r2, [r5, #1]
   2f8f4:	cmp	r2, #60	; 0x3c
   2f8f8:	beq	307b0 <__flatcc_fb_parse@@Base+0x25d0>
   2f8fc:	cmp	r2, #61	; 0x3d
   2f900:	beq	30794 <__flatcc_fb_parse@@Base+0x25b4>
   2f904:	cmp	r2, #45	; 0x2d
   2f908:	beq	30778 <__flatcc_fb_parse@@Base+0x2598>
   2f90c:	mov	r2, r5
   2f910:	mov	r1, #60	; 0x3c
   2f914:	mov	r0, r4
   2f918:	mov	r5, r3
   2f91c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2f920:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2f924:	mov	r0, r4
   2f928:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2f92c:	str	r5, [r4, #544]	; 0x220
   2f930:	ldr	r1, [r4, #40]	; 0x28
   2f934:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   2f938:	mov	ip, #0
   2f93c:	mov	r1, r8
   2f940:	mov	r3, ip
   2f944:	movw	r2, #35480	; 0x8a98
   2f948:	movt	r2, #5
   2f94c:	mov	r0, r4
   2f950:	str	ip, [sp]
   2f954:	str	ip, [sp, #4]
   2f958:	bl	2c558 <__flatcc_error_report@@Base>
   2f95c:	b	2f2b0 <__flatcc_fb_parse@@Base+0x10d0>
   2f960:	mov	ip, #0
   2f964:	movw	r2, #35228	; 0x899c
   2f968:	movt	r2, #5
   2f96c:	mov	r3, ip
   2f970:	b	2e5a8 <__flatcc_fb_parse@@Base+0x3c8>
   2f974:	mov	r1, #1
   2f978:	mov	r0, #65536	; 0x10000
   2f97c:	bl	13f7c <calloc@plt>
   2f980:	cmp	r0, #0
   2f984:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2f988:	ldr	r2, [r4, #48]	; 0x30
   2f98c:	add	ip, r0, #65536	; 0x10000
   2f990:	add	r1, r0, #16
   2f994:	add	r3, r0, #144	; 0x90
   2f998:	str	ip, [r4, #44]	; 0x2c
   2f99c:	str	r0, [r4, #48]	; 0x30
   2f9a0:	str	r2, [r0]
   2f9a4:	b	2ea34 <__flatcc_fb_parse@@Base+0x854>
   2f9a8:	mov	r1, #1
   2f9ac:	mov	r0, #65536	; 0x10000
   2f9b0:	bl	13f7c <calloc@plt>
   2f9b4:	cmp	r0, #0
   2f9b8:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2f9bc:	ldr	r2, [r4, #48]	; 0x30
   2f9c0:	add	r1, r0, #65536	; 0x10000
   2f9c4:	add	r5, r0, #16
   2f9c8:	add	r3, r0, #144	; 0x90
   2f9cc:	str	r1, [r4, #44]	; 0x2c
   2f9d0:	str	r0, [r4, #48]	; 0x30
   2f9d4:	str	r2, [r0]
   2f9d8:	b	2eabc <__flatcc_fb_parse@@Base+0x8dc>
   2f9dc:	mov	r1, #1
   2f9e0:	mov	r0, #65536	; 0x10000
   2f9e4:	bl	13f7c <calloc@plt>
   2f9e8:	cmp	r0, #0
   2f9ec:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2f9f0:	ldr	r2, [r4, #48]	; 0x30
   2f9f4:	add	r3, r0, #65536	; 0x10000
   2f9f8:	add	r5, r0, #16
   2f9fc:	str	r3, [r4, #44]	; 0x2c
   2fa00:	add	r3, r0, #48	; 0x30
   2fa04:	str	r0, [r4, #48]	; 0x30
   2fa08:	str	r2, [r0]
   2fa0c:	b	2edd8 <__flatcc_fb_parse@@Base+0xbf8>
   2fa10:	mov	r1, #1
   2fa14:	mov	r0, #65536	; 0x10000
   2fa18:	bl	13f7c <calloc@plt>
   2fa1c:	cmp	r0, #0
   2fa20:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2fa24:	ldr	r2, [r4, #48]	; 0x30
   2fa28:	add	ip, r0, #65536	; 0x10000
   2fa2c:	add	r1, r0, #16
   2fa30:	add	r3, r0, #144	; 0x90
   2fa34:	str	ip, [r4, #44]	; 0x2c
   2fa38:	str	r0, [r4, #48]	; 0x30
   2fa3c:	str	r2, [r0]
   2fa40:	b	2e90c <__flatcc_fb_parse@@Base+0x72c>
   2fa44:	mov	r1, #1
   2fa48:	mov	r0, #65536	; 0x10000
   2fa4c:	bl	13f7c <calloc@plt>
   2fa50:	cmp	r0, #0
   2fa54:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2fa58:	ldr	r2, [r4, #48]	; 0x30
   2fa5c:	add	ip, r0, #65536	; 0x10000
   2fa60:	add	r1, r0, #16
   2fa64:	add	r3, r0, #144	; 0x90
   2fa68:	str	ip, [r4, #44]	; 0x2c
   2fa6c:	str	r0, [r4, #48]	; 0x30
   2fa70:	str	r2, [r0]
   2fa74:	b	2f100 <__flatcc_fb_parse@@Base+0xf20>
   2fa78:	mov	r1, #1
   2fa7c:	mov	r0, #65536	; 0x10000
   2fa80:	bl	13f7c <calloc@plt>
   2fa84:	cmp	r0, #0
   2fa88:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   2fa8c:	ldr	r2, [r4, #48]	; 0x30
   2fa90:	add	r1, r0, #65536	; 0x10000
   2fa94:	add	r5, r0, #16
   2fa98:	add	r3, r0, #144	; 0x90
   2fa9c:	str	r1, [r4, #44]	; 0x2c
   2faa0:	str	r0, [r4, #48]	; 0x30
   2faa4:	str	r2, [r0]
   2faa8:	b	2ee5c <__flatcc_fb_parse@@Base+0xc7c>
   2faac:	ldr	r1, [r4, #360]	; 0x168
   2fab0:	movw	r2, #35120	; 0x8930
   2fab4:	movt	r2, #5
   2fab8:	mov	r3, #0
   2fabc:	mov	r0, r4
   2fac0:	ldr	ip, [r4, #364]	; 0x16c
   2fac4:	str	r1, [sp]
   2fac8:	ldr	r1, [r4, #40]	; 0x28
   2facc:	str	ip, [sp, #4]
   2fad0:	bl	2c558 <__flatcc_error_report@@Base>
   2fad4:	b	2e630 <__flatcc_fb_parse@@Base+0x450>
   2fad8:	mov	r0, r4
   2fadc:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fae0:	add	r1, r5, #40	; 0x28
   2fae4:	mov	r0, r4
   2fae8:	bl	2c94c <__flatcc_error_report@@Base+0x3f4>
   2faec:	ldrh	r3, [r5, #48]	; 0x30
   2faf0:	ldr	r1, [r5, #40]	; 0x28
   2faf4:	cmp	r3, #8
   2faf8:	bne	30550 <__flatcc_fb_parse@@Base+0x2370>
   2fafc:	ldr	r3, [r1, #16]
   2fb00:	add	r3, r3, #996	; 0x3e4
   2fb04:	cmp	r3, #21
   2fb08:	ldrls	pc, [pc, r3, lsl #2]
   2fb0c:	b	2eb40 <__flatcc_fb_parse@@Base+0x960>
   2fb10:	andeq	r0, r3, r0, ror r5
   2fb14:	andeq	r0, r3, r0, ror r5
   2fb18:	andeq	lr, r2, r0, asr #22
   2fb1c:	andeq	lr, r2, r0, asr #22
   2fb20:	andeq	lr, r2, r0, asr #22
   2fb24:	andeq	lr, r2, r0, asr #22
   2fb28:	andeq	lr, r2, r0, asr #22
   2fb2c:	andeq	lr, r2, r0, asr #22
   2fb30:	andeq	lr, r2, r0, asr #22
   2fb34:	andeq	lr, r2, r0, asr #22
   2fb38:	andeq	lr, r2, r0, asr #22
   2fb3c:	andeq	r0, r3, r0, ror r5
   2fb40:	andeq	lr, r2, r0, asr #22
   2fb44:	andeq	lr, r2, r0, asr #22
   2fb48:	andeq	lr, r2, r0, asr #22
   2fb4c:	andeq	lr, r2, r0, asr #22
   2fb50:	andeq	lr, r2, r0, asr #22
   2fb54:	andeq	lr, r2, r0, asr #22
   2fb58:	andeq	lr, r2, r0, asr #22
   2fb5c:	andeq	lr, r2, r0, asr #22
   2fb60:	andeq	lr, r2, r0, asr #22
   2fb64:	andeq	r0, r3, r0, ror r5
   2fb68:	cmp	r1, #127	; 0x7f
   2fb6c:	cmpne	r1, #31
   2fb70:	mov	r2, r5
   2fb74:	add	r3, r5, #1
   2fb78:	bhi	302c4 <__flatcc_fb_parse@@Base+0x20e4>
   2fb7c:	mov	r1, #5
   2fb80:	mov	r0, r4
   2fb84:	mov	r5, r3
   2fb88:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2fb8c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   2fb90:	movw	r7, #34816	; 0x8800
   2fb94:	movt	r7, #5
   2fb98:	movw	r6, #34872	; 0x8838
   2fb9c:	movt	r6, #5
   2fba0:	movw	r5, #34920	; 0x8868
   2fba4:	movt	r5, #5
   2fba8:	mov	r0, r4
   2fbac:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fbb0:	ldr	r3, [r4, #140]	; 0x8c
   2fbb4:	cmp	r3, #0
   2fbb8:	bne	30238 <__flatcc_fb_parse@@Base+0x2058>
   2fbbc:	ldr	r1, [r4, #40]	; 0x28
   2fbc0:	ldr	r0, [r4, #108]	; 0x6c
   2fbc4:	ldr	r3, [r1, #16]
   2fbc8:	cmp	r0, #9
   2fbcc:	bgt	30c28 <__flatcc_fb_parse@@Base+0x2a48>
   2fbd0:	cmp	r3, #19
   2fbd4:	bne	2fcf0 <__flatcc_fb_parse@@Base+0x1b10>
   2fbd8:	mov	r0, r4
   2fbdc:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fbe0:	ldr	r1, [r4, #44]	; 0x2c
   2fbe4:	ldr	r3, [r4, #52]	; 0x34
   2fbe8:	add	r2, r3, #32
   2fbec:	cmp	r2, r1
   2fbf0:	bhi	3025c <__flatcc_fb_parse@@Base+0x207c>
   2fbf4:	ldr	lr, [r4, #352]	; 0x160
   2fbf8:	mov	ip, #2
   2fbfc:	mov	r9, #0
   2fc00:	add	r1, r3, #8
   2fc04:	mov	r0, r4
   2fc08:	str	r2, [r4, #52]	; 0x34
   2fc0c:	str	lr, [r3]
   2fc10:	str	r3, [r4, #352]	; 0x160
   2fc14:	str	r9, [r3, #8]
   2fc18:	str	r9, [r3, #12]
   2fc1c:	strh	ip, [r3, #16]
   2fc20:	bl	2cd64 <__flatcc_error_report@@Base+0x80c>
   2fc24:	ldr	r1, [r4, #40]	; 0x28
   2fc28:	ldr	r3, [r1, #16]
   2fc2c:	cmp	r3, #59	; 0x3b
   2fc30:	bne	2fda0 <__flatcc_fb_parse@@Base+0x1bc0>
   2fc34:	mov	r0, r4
   2fc38:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fc3c:	ldr	r1, [r4, #40]	; 0x28
   2fc40:	movw	r2, #64565	; 0xfc35
   2fc44:	movt	r2, #65535	; 0xffff
   2fc48:	ldr	r3, [r1, #16]
   2fc4c:	cmp	r3, r2
   2fc50:	beq	2fba8 <__flatcc_fb_parse@@Base+0x19c8>
   2fc54:	mov	r8, r1
   2fc58:	b	2e528 <__flatcc_fb_parse@@Base+0x348>
   2fc5c:	mov	r3, r5
   2fc60:	mov	r2, r5
   2fc64:	mov	r1, #23
   2fc68:	mov	r0, r4
   2fc6c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   2fc70:	cmp	r6, r5
   2fc74:	bne	2e294 <__flatcc_fb_parse@@Base+0xb4>
   2fc78:	b	2e4d4 <__flatcc_fb_parse@@Base+0x2f4>
   2fc7c:	cmp	r1, r6
   2fc80:	mov	r8, r1
   2fc84:	ldr	r0, [r4, #108]	; 0x6c
   2fc88:	beq	2e6d8 <__flatcc_fb_parse@@Base+0x4f8>
   2fc8c:	ldr	r2, [r4, #356]	; 0x164
   2fc90:	cmp	r2, #0
   2fc94:	beq	2fcb8 <__flatcc_fb_parse@@Base+0x1ad8>
   2fc98:	mov	r1, #0
   2fc9c:	b	2fca4 <__flatcc_fb_parse@@Base+0x1ac4>
   2fca0:	mov	r2, r3
   2fca4:	ldr	r3, [r2]
   2fca8:	str	r1, [r2]
   2fcac:	mov	r1, r2
   2fcb0:	cmp	r3, #0
   2fcb4:	bne	2fca0 <__flatcc_fb_parse@@Base+0x1ac0>
   2fcb8:	ldr	r3, [r4, #392]	; 0x188
   2fcbc:	str	r2, [r4, #356]	; 0x164
   2fcc0:	cmp	r3, #0
   2fcc4:	beq	2fce8 <__flatcc_fb_parse@@Base+0x1b08>
   2fcc8:	mov	r1, #0
   2fccc:	b	2fcd4 <__flatcc_fb_parse@@Base+0x1af4>
   2fcd0:	mov	r3, r2
   2fcd4:	ldr	r2, [r3]
   2fcd8:	str	r1, [r3]
   2fcdc:	mov	r1, r3
   2fce0:	cmp	r2, #0
   2fce4:	bne	2fcd0 <__flatcc_fb_parse@@Base+0x1af0>
   2fce8:	str	r3, [r4, #392]	; 0x188
   2fcec:	b	2e704 <__flatcc_fb_parse@@Base+0x524>
   2fcf0:	mov	ip, #0
   2fcf4:	mov	r2, r6
   2fcf8:	mov	r3, ip
   2fcfc:	mov	r0, r4
   2fd00:	str	ip, [sp]
   2fd04:	str	ip, [sp, #4]
   2fd08:	bl	2c558 <__flatcc_error_report@@Base>
   2fd0c:	ldr	r3, [r4, #40]	; 0x28
   2fd10:	ldr	r3, [r3, #16]
   2fd14:	cmp	r3, #0
   2fd18:	bne	2fd34 <__flatcc_fb_parse@@Base+0x1b54>
   2fd1c:	b	2fbe0 <__flatcc_fb_parse@@Base+0x1a00>
   2fd20:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fd24:	ldr	r3, [r4, #40]	; 0x28
   2fd28:	ldr	r3, [r3, #16]
   2fd2c:	cmp	r3, #0
   2fd30:	beq	2fbe0 <__flatcc_fb_parse@@Base+0x1a00>
   2fd34:	cmp	r3, #59	; 0x3b
   2fd38:	mov	r0, r4
   2fd3c:	bne	2fd20 <__flatcc_fb_parse@@Base+0x1b40>
   2fd40:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fd44:	mov	r3, #0
   2fd48:	str	r3, [r4, #36]	; 0x24
   2fd4c:	b	2fbe0 <__flatcc_fb_parse@@Base+0x1a00>
   2fd50:	mov	r0, r4
   2fd54:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   2fd58:	ldr	r9, [r4, #40]	; 0x28
   2fd5c:	ldr	r3, [r9, #16]
   2fd60:	cmp	r3, #125	; 0x7d
   2fd64:	beq	303c4 <__flatcc_fb_parse@@Base+0x21e4>
   2fd68:	mov	r2, #0
   2fd6c:	cmp	r3, #9
   2fd70:	str	r2, [r4, #36]	; 0x24
   2fd74:	beq	2eb80 <__flatcc_fb_parse@@Base+0x9a0>
   2fd78:	mov	ip, #0
   2fd7c:	mov	r1, r9
   2fd80:	mov	r3, ip
   2fd84:	movw	r2, #35512	; 0x8ab8
   2fd88:	movt	r2, #5
   2fd8c:	mov	r0, r4
   2fd90:	str	ip, [sp]
   2fd94:	str	ip, [sp, #4]
   2fd98:	bl	2c558 <__flatcc_error_report@@Base>
   2fd9c:	b	2f2b0 <__flatcc_fb_parse@@Base+0x10d0>
   2fda0:	mov	r3, r9
   2fda4:	mov	r2, r5
   2fda8:	str	r9, [sp]
   2fdac:	mov	r0, r4
   2fdb0:	str	r9, [sp, #4]
   2fdb4:	bl	2c558 <__flatcc_error_report@@Base>
   2fdb8:	b	2fc3c <__flatcc_fb_parse@@Base+0x1a5c>
   2fdbc:	movw	r3, #26933	; 0x6935
   2fdc0:	movt	r3, #13934	; 0x366e
   2fdc4:	cmp	r1, r3
   2fdc8:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2fdcc:	mov	r1, r5
   2fdd0:	movw	r0, #35584	; 0x8b00
   2fdd4:	movt	r0, #4
   2fdd8:	mov	r2, #5
   2fddc:	bl	13fd0 <memcmp@plt>
   2fde0:	cmp	r0, #0
   2fde4:	movw	r1, #64544	; 0xfc20
   2fde8:	movt	r1, #65535	; 0xffff
   2fdec:	movne	r1, #9
   2fdf0:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2fdf4:	cmp	r1, r8
   2fdf8:	beq	30ecc <__flatcc_fb_parse@@Base+0x2cec>
   2fdfc:	bhi	300d4 <__flatcc_fb_parse@@Base+0x1ef4>
   2fe00:	movw	r3, #30005	; 0x7535
   2fe04:	movt	r3, #26476	; 0x676c
   2fe08:	cmp	r1, r3
   2fe0c:	beq	30ea8 <__flatcc_fb_parse@@Base+0x2cc8>
   2fe10:	bls	30064 <__flatcc_fb_parse@@Base+0x1e84>
   2fe14:	movw	r3, #29494	; 0x7336
   2fe18:	movt	r3, #26484	; 0x6774
   2fe1c:	cmp	r1, r3
   2fe20:	beq	30e80 <__flatcc_fb_parse@@Base+0x2ca0>
   2fe24:	bls	30120 <__flatcc_fb_parse@@Base+0x1f40>
   2fe28:	movw	r3, #25140	; 0x6234
   2fe2c:	movt	r3, #27759	; 0x6c6f
   2fe30:	cmp	r1, r3
   2fe34:	bne	30018 <__flatcc_fb_parse@@Base+0x1e38>
   2fe38:	ldrb	r3, [r5]
   2fe3c:	cmp	r3, #98	; 0x62
   2fe40:	beq	305ac <__flatcc_fb_parse@@Base+0x23cc>
   2fe44:	mov	r1, #9
   2fe48:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2fe4c:	movw	r3, #26167	; 0x6637
   2fe50:	movt	r3, #13420	; 0x346c
   2fe54:	cmp	r1, r3
   2fe58:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2fe5c:	mov	r1, r5
   2fe60:	movw	r0, #34732	; 0x87ac
   2fe64:	movt	r0, #5
   2fe68:	mov	r2, #7
   2fe6c:	bl	13fd0 <memcmp@plt>
   2fe70:	cmp	r0, #0
   2fe74:	movw	r1, #64541	; 0xfc1d
   2fe78:	movt	r1, #65535	; 0xffff
   2fe7c:	movne	r1, #9
   2fe80:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2fe84:	movw	r3, #26167	; 0x6637
   2fe88:	movt	r3, #12908	; 0x326c
   2fe8c:	cmp	r1, r3
   2fe90:	beq	30f44 <__flatcc_fb_parse@@Base+0x2d64>
   2fe94:	movw	r3, #26933	; 0x6935
   2fe98:	movt	r3, #12910	; 0x326e
   2fe9c:	cmp	r1, r3
   2fea0:	beq	30e58 <__flatcc_fb_parse@@Base+0x2c78>
   2fea4:	movw	r3, #30006	; 0x7536
   2fea8:	movt	r3, #12905	; 0x3269
   2feac:	cmp	r1, r3
   2feb0:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2feb4:	mov	r1, r5
   2feb8:	movw	r0, #35544	; 0x8ad8
   2febc:	movt	r0, #4
   2fec0:	mov	r2, #6
   2fec4:	bl	13fd0 <memcmp@plt>
   2fec8:	cmp	r0, #0
   2fecc:	movw	r1, #64557	; 0xfc2d
   2fed0:	movt	r1, #65535	; 0xffff
   2fed4:	movne	r1, #9
   2fed8:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2fedc:	movw	r3, #29749	; 0x7435
   2fee0:	movt	r3, #25953	; 0x6561
   2fee4:	cmp	r1, r3
   2fee8:	beq	30f1c <__flatcc_fb_parse@@Base+0x2d3c>
   2feec:	bls	2ffac <__flatcc_fb_parse@@Base+0x1dcc>
   2fef0:	movw	r3, #26935	; 0x6937
   2fef4:	movt	r3, #25966	; 0x656e
   2fef8:	cmp	r1, r3
   2fefc:	beq	30ef4 <__flatcc_fb_parse@@Base+0x2d14>
   2ff00:	bls	2ff74 <__flatcc_fb_parse@@Base+0x1d94>
   2ff04:	movw	r3, #25654	; 0x6436
   2ff08:	movt	r3, #25967	; 0x656f
   2ff0c:	cmp	r1, r3
   2ff10:	bne	2ff3c <__flatcc_fb_parse@@Base+0x1d5c>
   2ff14:	mov	r1, r5
   2ff18:	movw	r0, #35600	; 0x8b10
   2ff1c:	movt	r0, #4
   2ff20:	mov	r2, #6
   2ff24:	bl	13fd0 <memcmp@plt>
   2ff28:	cmp	r0, #0
   2ff2c:	movw	r1, #64561	; 0xfc31
   2ff30:	movt	r1, #65535	; 0xffff
   2ff34:	movne	r1, #9
   2ff38:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2ff3c:	movw	r3, #29241	; 0x7239
   2ff40:	movt	r3, #25967	; 0x656f
   2ff44:	cmp	r1, r3
   2ff48:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2ff4c:	mov	r1, r5
   2ff50:	movw	r0, #34760	; 0x87c8
   2ff54:	movt	r0, #5
   2ff58:	mov	r2, #9
   2ff5c:	bl	13fd0 <memcmp@plt>
   2ff60:	cmp	r0, #0
   2ff64:	movw	r1, #64568	; 0xfc38
   2ff68:	movt	r1, #65535	; 0xffff
   2ff6c:	movne	r1, #9
   2ff70:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2ff74:	movw	r3, #30005	; 0x7535
   2ff78:	movt	r3, #25954	; 0x6562
   2ff7c:	cmp	r1, r3
   2ff80:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2ff84:	mov	r1, r5
   2ff88:	movw	r0, #34648	; 0x8758
   2ff8c:	movt	r0, #5
   2ff90:	mov	r2, #5
   2ff94:	bl	13fd0 <memcmp@plt>
   2ff98:	cmp	r0, #0
   2ff9c:	movw	r1, #64554	; 0xfc2a
   2ffa0:	movt	r1, #65535	; 0xffff
   2ffa4:	movne	r1, #9
   2ffa8:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   2ffac:	movw	r3, #26165	; 0x6635
   2ffb0:	movt	r3, #25953	; 0x6561
   2ffb4:	cmp	r1, r3
   2ffb8:	beq	30fe4 <__flatcc_fb_parse@@Base+0x2e04>
   2ffbc:	movw	r3, #28217	; 0x6e39
   2ffc0:	movt	r3, #25953	; 0x6561
   2ffc4:	cmp	r1, r3
   2ffc8:	beq	30df4 <__flatcc_fb_parse@@Base+0x2c14>
   2ffcc:	movw	r3, #26932	; 0x6934
   2ffd0:	movt	r3, #14446	; 0x386e
   2ffd4:	cmp	r1, r3
   2ffd8:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2ffdc:	ldrb	r3, [r5]
   2ffe0:	cmp	r3, #105	; 0x69
   2ffe4:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2ffe8:	ldrb	r3, [r2]
   2ffec:	cmp	r3, #110	; 0x6e
   2fff0:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   2fff4:	ldrb	r3, [r2, #1]
   2fff8:	add	r2, r2, #1
   2fffc:	cmp	r3, #116	; 0x74
   30000:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30004:	ldrb	r3, [r2, #1]
   30008:	cmp	r3, #56	; 0x38
   3000c:	mvneq	r1, #992	; 0x3e0
   30010:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30014:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30018:	movw	r3, #25908	; 0x6534
   3001c:	movt	r3, #28014	; 0x6d6e
   30020:	cmp	r1, r3
   30024:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30028:	ldrb	r3, [r5]
   3002c:	cmp	r3, #101	; 0x65
   30030:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30034:	ldrb	r3, [r2]
   30038:	cmp	r3, #110	; 0x6e
   3003c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30040:	ldrb	r3, [r2, #1]
   30044:	add	r2, r2, #1
   30048:	cmp	r3, #117	; 0x75
   3004c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30050:	ldrb	r3, [r2, #1]
   30054:	cmp	r3, #109	; 0x6d
   30058:	mvneq	r1, #996	; 0x3e4
   3005c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30060:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30064:	movw	r3, #24889	; 0x6139
   30068:	movt	r3, #25972	; 0x6574
   3006c:	cmp	r1, r3
   30070:	beq	30f94 <__flatcc_fb_parse@@Base+0x2db4>
   30074:	movw	r3, #25140	; 0x6234
   30078:	movt	r3, #25977	; 0x6579
   3007c:	cmp	r1, r3
   30080:	beq	30e18 <__flatcc_fb_parse@@Base+0x2c38>
   30084:	movw	r3, #29748	; 0x7434
   30088:	movt	r3, #25970	; 0x6572
   3008c:	cmp	r1, r3
   30090:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30094:	ldrb	r3, [r5]
   30098:	cmp	r3, #116	; 0x74
   3009c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   300a0:	ldrb	r3, [r2]
   300a4:	cmp	r3, #114	; 0x72
   300a8:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   300ac:	ldrb	r3, [r2, #1]
   300b0:	add	r2, r2, #1
   300b4:	cmp	r3, #117	; 0x75
   300b8:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   300bc:	ldrb	r3, [r2, #1]
   300c0:	cmp	r3, #101	; 0x65
   300c4:	movweq	r1, #64548	; 0xfc24
   300c8:	movteq	r1, #65535	; 0xffff
   300cc:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   300d0:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   300d4:	ldr	r3, [sp, #12]
   300d8:	cmp	r1, r3
   300dc:	beq	31060 <__flatcc_fb_parse@@Base+0x2e80>
   300e0:	bls	301cc <__flatcc_fb_parse@@Base+0x1fec>
   300e4:	cmp	r1, fp
   300e8:	beq	31030 <__flatcc_fb_parse@@Base+0x2e50>
   300ec:	bls	30198 <__flatcc_fb_parse@@Base+0x1fb8>
   300f0:	cmp	r1, r7
   300f4:	bne	3016c <__flatcc_fb_parse@@Base+0x1f8c>
   300f8:	mov	r1, r5
   300fc:	movw	r0, #34716	; 0x879c
   30100:	movt	r0, #5
   30104:	mov	r2, #6
   30108:	bl	13fd0 <memcmp@plt>
   3010c:	cmp	r0, #0
   30110:	movw	r1, #64564	; 0xfc34
   30114:	movt	r1, #65535	; 0xffff
   30118:	movne	r1, #9
   3011c:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30120:	movw	r3, #27700	; 0x6c34
   30124:	movt	r3, #26479	; 0x676f
   30128:	cmp	r1, r3
   3012c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30130:	ldrb	r3, [r5]
   30134:	cmp	r3, #108	; 0x6c
   30138:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   3013c:	ldrb	r3, [r2]
   30140:	cmp	r3, #111	; 0x6f
   30144:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30148:	ldrb	r3, [r2, #1]
   3014c:	add	r2, r2, #1
   30150:	cmp	r3, #110	; 0x6e
   30154:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30158:	ldrb	r3, [r2, #1]
   3015c:	cmp	r3, #103	; 0x67
   30160:	mvneq	r1, #988	; 0x3dc
   30164:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30168:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   3016c:	cmp	r1, sl
   30170:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30174:	mov	r1, r5
   30178:	movw	r0, #37836	; 0x93cc
   3017c:	movt	r0, #5
   30180:	mov	r2, #6
   30184:	bl	13fd0 <memcmp@plt>
   30188:	cmp	r0, #0
   3018c:	movne	r1, #9
   30190:	mvneq	r1, #972	; 0x3cc
   30194:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30198:	movw	r3, #26165	; 0x6635
   3019c:	movt	r3, #29804	; 0x746c
   301a0:	cmp	r1, r3
   301a4:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   301a8:	mov	r1, r5
   301ac:	movw	r0, #35608	; 0x8b18
   301b0:	movt	r0, #4
   301b4:	mov	r2, #5
   301b8:	bl	13fd0 <memcmp@plt>
   301bc:	cmp	r0, #0
   301c0:	movne	r1, #9
   301c4:	mvneq	r1, #984	; 0x3d8
   301c8:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   301cc:	movw	r3, #26175	; 0x663f
   301d0:	movt	r3, #29289	; 0x7269
   301d4:	cmp	r1, r3
   301d8:	beq	3100c <__flatcc_fb_parse@@Base+0x2e2c>
   301dc:	movw	r3, #29493	; 0x7335
   301e0:	movt	r3, #29800	; 0x7468
   301e4:	cmp	r1, r3
   301e8:	beq	30f6c <__flatcc_fb_parse@@Base+0x2d8c>
   301ec:	movw	r3, #30005	; 0x7535
   301f0:	movt	r3, #28270	; 0x6e6e
   301f4:	cmp	r1, r3
   301f8:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   301fc:	mov	r1, r5
   30200:	movw	r0, #34700	; 0x878c
   30204:	movt	r0, #5
   30208:	mov	r2, #5
   3020c:	bl	13fd0 <memcmp@plt>
   30210:	cmp	r0, #0
   30214:	movw	r1, #64560	; 0xfc30
   30218:	movt	r1, #65535	; 0xffff
   3021c:	movne	r1, #9
   30220:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30224:	mov	r0, r4
   30228:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   3022c:	ldr	r8, [r4, #40]	; 0x28
   30230:	ldr	r3, [r8, #16]
   30234:	b	2e518 <__flatcc_fb_parse@@Base+0x338>
   30238:	mov	ip, #0
   3023c:	mov	r2, r7
   30240:	mov	r3, ip
   30244:	mov	r1, r8
   30248:	mov	r0, r4
   3024c:	str	ip, [sp]
   30250:	str	ip, [sp, #4]
   30254:	bl	2c558 <__flatcc_error_report@@Base>
   30258:	b	2fbbc <__flatcc_fb_parse@@Base+0x19dc>
   3025c:	mov	r1, #1
   30260:	mov	r0, #65536	; 0x10000
   30264:	bl	13f7c <calloc@plt>
   30268:	cmp	r0, #0
   3026c:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   30270:	ldr	r1, [r4, #48]	; 0x30
   30274:	add	ip, r0, #65536	; 0x10000
   30278:	add	r3, r0, #16
   3027c:	add	r2, r0, #48	; 0x30
   30280:	str	ip, [r4, #44]	; 0x2c
   30284:	str	r0, [r4, #48]	; 0x30
   30288:	str	r1, [r0]
   3028c:	b	2fbf4 <__flatcc_fb_parse@@Base+0x1a14>
   30290:	mov	r1, #1
   30294:	mov	r0, #65536	; 0x10000
   30298:	bl	13f7c <calloc@plt>
   3029c:	cmp	r0, #0
   302a0:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   302a4:	ldr	r2, [r4, #48]	; 0x30
   302a8:	add	ip, r0, #65536	; 0x10000
   302ac:	add	r7, r0, #16
   302b0:	add	r3, r0, #144	; 0x90
   302b4:	str	ip, [r4, #44]	; 0x2c
   302b8:	str	r0, [r4, #48]	; 0x30
   302bc:	str	r2, [r0]
   302c0:	b	2eba8 <__flatcc_fb_parse@@Base+0x9c8>
   302c4:	mov	r1, #8
   302c8:	mov	r0, r4
   302cc:	mov	r5, r3
   302d0:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   302d4:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   302d8:	mov	r0, r4
   302dc:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   302e0:	ldr	r9, [r4, #40]	; 0x28
   302e4:	ldr	r3, [r9, #16]
   302e8:	cmp	r3, #125	; 0x7d
   302ec:	beq	304d0 <__flatcc_fb_parse@@Base+0x22f0>
   302f0:	mov	r2, #0
   302f4:	cmp	r3, #9
   302f8:	str	r2, [r4, #36]	; 0x24
   302fc:	bne	30cf0 <__flatcc_fb_parse@@Base+0x2b10>
   30300:	ldr	r3, [r4, #108]	; 0x6c
   30304:	cmp	r3, #9
   30308:	ble	2ef28 <__flatcc_fb_parse@@Base+0xd48>
   3030c:	b	2f330 <__flatcc_fb_parse@@Base+0x1150>
   30310:	mov	r0, r4
   30314:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   30318:	ldr	r3, [r7, #16]
   3031c:	ldr	r3, [r3]
   30320:	cmp	r3, #0
   30324:	beq	30348 <__flatcc_fb_parse@@Base+0x2168>
   30328:	mov	ip, #0
   3032c:	mov	r1, r9
   30330:	ldr	r2, [sp, #20]
   30334:	mov	r3, ip
   30338:	mov	r0, r4
   3033c:	str	ip, [sp]
   30340:	str	ip, [sp, #4]
   30344:	bl	2c558 <__flatcc_error_report@@Base>
   30348:	add	r1, r7, #16
   3034c:	mov	r0, r4
   30350:	bl	2c94c <__flatcc_error_report@@Base+0x3f4>
   30354:	ldr	r1, [r4, #40]	; 0x28
   30358:	ldr	r3, [r1, #16]
   3035c:	b	2efe4 <__flatcc_fb_parse@@Base+0xe04>
   30360:	add	r1, sp, #24
   30364:	mov	r0, r4
   30368:	bl	2c7f4 <__flatcc_error_report@@Base+0x29c>
   3036c:	ldr	r1, [r4, #40]	; 0x28
   30370:	ldr	r3, [r1, #16]
   30374:	str	r5, [r4, #36]	; 0x24
   30378:	cmp	r3, #59	; 0x3b
   3037c:	beq	30544 <__flatcc_fb_parse@@Base+0x2364>
   30380:	movw	r2, #34984	; 0x88a8
   30384:	movt	r2, #5
   30388:	str	r5, [sp]
   3038c:	mov	r3, r7
   30390:	mov	r0, r4
   30394:	str	r5, [sp, #4]
   30398:	bl	2c558 <__flatcc_error_report@@Base>
   3039c:	ldr	r7, [sp, #24]
   303a0:	mov	r2, #0
   303a4:	ldr	r0, [r4, #412]	; 0x19c
   303a8:	mov	r1, r7
   303ac:	bl	2a1ec <fb_scope_table_find@@Base>
   303b0:	subs	r5, r0, #0
   303b4:	beq	30bb8 <__flatcc_fb_parse@@Base+0x29d8>
   303b8:	str	r5, [r4, #544]	; 0x220
   303bc:	ldr	r1, [r4, #40]	; 0x28
   303c0:	b	2e5bc <__flatcc_fb_parse@@Base+0x3dc>
   303c4:	mov	r3, #0
   303c8:	str	r3, [r4, #36]	; 0x24
   303cc:	mov	r0, r4
   303d0:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   303d4:	b	2ec68 <__flatcc_fb_parse@@Base+0xa88>
   303d8:	mov	r3, r7
   303dc:	mov	r1, r8
   303e0:	str	r7, [sp]
   303e4:	movw	r2, #35644	; 0x8b3c
   303e8:	movt	r2, #5
   303ec:	str	r7, [sp, #4]
   303f0:	mov	r0, r4
   303f4:	bl	2c558 <__flatcc_error_report@@Base>
   303f8:	ldr	r1, [r4, #40]	; 0x28
   303fc:	ldr	r3, [r1, #16]
   30400:	b	2f314 <__flatcc_fb_parse@@Base+0x1134>
   30404:	add	r7, r5, #2
   30408:	cmp	r6, r7
   3040c:	beq	2e8c4 <__flatcc_fb_parse@@Base+0x6e4>
   30410:	ldrb	r3, [r5, #2]
   30414:	cmp	r3, #13
   30418:	bne	2e8c4 <__flatcc_fb_parse@@Base+0x6e4>
   3041c:	b	2e8c0 <__flatcc_fb_parse@@Base+0x6e0>
   30420:	add	r9, r5, #2
   30424:	mov	r2, r5
   30428:	mov	r3, r9
   3042c:	movw	r1, #9766	; 0x2626
   30430:	mov	r0, r4
   30434:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30438:	mov	r2, r5
   3043c:	mov	r3, r9
   30440:	mov	r1, #38	; 0x26
   30444:	mov	r0, r4
   30448:	mov	r5, r9
   3044c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30450:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30454:	mov	r1, #1
   30458:	mov	r0, #65536	; 0x10000
   3045c:	bl	13f7c <calloc@plt>
   30460:	cmp	r0, #0
   30464:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   30468:	ldr	r2, [r4, #48]	; 0x30
   3046c:	add	r1, r0, #65536	; 0x10000
   30470:	add	r7, r0, #16
   30474:	add	r3, r0, #144	; 0x90
   30478:	str	r1, [r4, #44]	; 0x2c
   3047c:	str	r0, [r4, #48]	; 0x30
   30480:	str	r2, [r0]
   30484:	b	2ef3c <__flatcc_fb_parse@@Base+0xd5c>
   30488:	add	r9, r5, #2
   3048c:	cmp	r6, r9
   30490:	beq	304a0 <__flatcc_fb_parse@@Base+0x22c0>
   30494:	ldrb	r3, [r5, #2]
   30498:	cmp	r3, #61	; 0x3d
   3049c:	beq	30d40 <__flatcc_fb_parse@@Base+0x2b60>
   304a0:	mov	r3, r9
   304a4:	mov	r2, r5
   304a8:	movw	r1, #15677	; 0x3d3d
   304ac:	mov	r0, r4
   304b0:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   304b4:	mov	r2, r5
   304b8:	mov	r3, r9
   304bc:	mov	r1, #61	; 0x3d
   304c0:	mov	r0, r4
   304c4:	mov	r5, r9
   304c8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   304cc:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   304d0:	mov	r3, #0
   304d4:	str	r3, [r4, #36]	; 0x24
   304d8:	mov	r0, r4
   304dc:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   304e0:	b	2f044 <__flatcc_fb_parse@@Base+0xe64>
   304e4:	add	r3, r7, #2
   304e8:	mov	r2, r5
   304ec:	mov	r1, #22
   304f0:	mov	r0, r4
   304f4:	mov	r5, r3
   304f8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   304fc:	b	2fc70 <__flatcc_fb_parse@@Base+0x1a90>
   30500:	mov	r2, r5
   30504:	mov	r1, #10
   30508:	mov	r0, r4
   3050c:	mov	r5, r3
   30510:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30514:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30518:	ldr	r1, [r4, #376]	; 0x178
   3051c:	movw	r2, #35024	; 0x88d0
   30520:	movt	r2, #5
   30524:	mov	r3, #0
   30528:	mov	r0, r4
   3052c:	ldr	ip, [r4, #380]	; 0x17c
   30530:	str	r1, [sp]
   30534:	ldr	r1, [r4, #40]	; 0x28
   30538:	str	ip, [sp, #4]
   3053c:	bl	2c558 <__flatcc_error_report@@Base>
   30540:	b	2e994 <__flatcc_fb_parse@@Base+0x7b4>
   30544:	mov	r0, r4
   30548:	bl	2c370 <__flatcc_fb_default_error_out@@Base+0x124>
   3054c:	b	3039c <__flatcc_fb_parse@@Base+0x21bc>
   30550:	mov	r3, r7
   30554:	movw	r2, #35456	; 0x8a80
   30558:	movt	r2, #5
   3055c:	mov	r0, r4
   30560:	str	r7, [sp]
   30564:	str	r7, [sp, #4]
   30568:	bl	2c558 <__flatcc_error_report@@Base>
   3056c:	b	2eb40 <__flatcc_fb_parse@@Base+0x960>
   30570:	mov	ip, #0
   30574:	movw	r2, #35456	; 0x8a80
   30578:	movt	r2, #5
   3057c:	mov	r3, ip
   30580:	mov	r0, r4
   30584:	str	ip, [sp]
   30588:	str	ip, [sp, #4]
   3058c:	bl	2c558 <__flatcc_error_report@@Base>
   30590:	b	2eb40 <__flatcc_fb_parse@@Base+0x960>
   30594:	mov	r2, r5
   30598:	movw	r1, #15934	; 0x3e3e
   3059c:	mov	r0, r4
   305a0:	mov	r5, r3
   305a4:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   305a8:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   305ac:	ldrb	r3, [r2]
   305b0:	cmp	r3, #111	; 0x6f
   305b4:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   305b8:	ldrb	r3, [r2, #1]
   305bc:	add	r2, r2, #1
   305c0:	cmp	r3, #111	; 0x6f
   305c4:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   305c8:	ldrb	r3, [r2, #1]
   305cc:	cmp	r3, #108	; 0x6c
   305d0:	movweq	r1, #64537	; 0xfc19
   305d4:	movteq	r1, #65535	; 0xffff
   305d8:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   305dc:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   305e0:	mov	r1, #1
   305e4:	mov	r0, #65536	; 0x10000
   305e8:	bl	13f7c <calloc@plt>
   305ec:	cmp	r0, #0
   305f0:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   305f4:	ldr	r3, [r4, #48]	; 0x30
   305f8:	add	r2, r0, #65536	; 0x10000
   305fc:	add	ip, r0, #16
   30600:	str	r2, [r4, #44]	; 0x2c
   30604:	add	r2, r0, #144	; 0x90
   30608:	str	r0, [r4, #48]	; 0x30
   3060c:	str	r3, [r0]
   30610:	ldr	r3, [r5, #20]
   30614:	b	2f088 <__flatcc_fb_parse@@Base+0xea8>
   30618:	mov	r2, r5
   3061c:	mov	r1, #46	; 0x2e
   30620:	mov	r0, r4
   30624:	mov	r5, r3
   30628:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   3062c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30630:	mov	r2, r5
   30634:	mov	r1, #43	; 0x2b
   30638:	mov	r0, r4
   3063c:	mov	r5, r3
   30640:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30644:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30648:	mov	r2, r5
   3064c:	mov	r1, #58	; 0x3a
   30650:	mov	r0, r4
   30654:	mov	r5, r3
   30658:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   3065c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30660:	mov	r2, r5
   30664:	mov	r1, #62	; 0x3e
   30668:	mov	r0, r4
   3066c:	mov	r5, r3
   30670:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30674:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30678:	mov	r2, r5
   3067c:	mov	r3, r9
   30680:	mov	r1, #42	; 0x2a
   30684:	mov	r0, r4
   30688:	mov	r5, r9
   3068c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30690:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30694:	add	r3, r5, #2
   30698:	cmp	r6, r3
   3069c:	beq	306ac <__flatcc_fb_parse@@Base+0x24cc>
   306a0:	ldrb	r2, [r5, #2]
   306a4:	cmp	r2, #46	; 0x2e
   306a8:	beq	30d20 <__flatcc_fb_parse@@Base+0x2b40>
   306ac:	mov	r2, r5
   306b0:	movw	r1, #11822	; 0x2e2e
   306b4:	mov	r0, r4
   306b8:	mov	r5, r3
   306bc:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   306c0:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   306c4:	mov	r2, r5
   306c8:	movw	r1, #10794	; 0x2a2a
   306cc:	mov	r3, r9
   306d0:	mov	r0, r4
   306d4:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   306d8:	ldrb	r1, [r5, #1]
   306dc:	mov	r5, r9
   306e0:	b	2e2a8 <__flatcc_fb_parse@@Base+0xc8>
   306e4:	add	r3, r5, #2
   306e8:	mov	r2, r5
   306ec:	movw	r1, #15740	; 0x3d7c
   306f0:	mov	r0, r4
   306f4:	mov	r5, r3
   306f8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   306fc:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30700:	add	r3, r5, #2
   30704:	cmp	r6, r3
   30708:	beq	30718 <__flatcc_fb_parse@@Base+0x2538>
   3070c:	ldrb	r2, [r5, #2]
   30710:	cmp	r2, #61	; 0x3d
   30714:	beq	30d60 <__flatcc_fb_parse@@Base+0x2b80>
   30718:	mov	r2, r5
   3071c:	movw	r1, #14906	; 0x3a3a
   30720:	mov	r0, r4
   30724:	mov	r5, r3
   30728:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   3072c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30730:	add	r3, r5, #2
   30734:	mov	r2, r5
   30738:	movw	r1, #15678	; 0x3d3e
   3073c:	mov	r0, r4
   30740:	mov	r5, r3
   30744:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30748:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   3074c:	add	r3, r5, #2
   30750:	mov	r2, r5
   30754:	movw	r1, #11051	; 0x2b2b
   30758:	mov	r0, r4
   3075c:	mov	r5, r3
   30760:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30764:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30768:	and	r1, r1, #223	; 0xdf
   3076c:	cmp	r1, #69	; 0x45
   30770:	bne	2f3d8 <__flatcc_fb_parse@@Base+0x11f8>
   30774:	b	2f394 <__flatcc_fb_parse@@Base+0x11b4>
   30778:	add	r3, r5, #2
   3077c:	mov	r2, r5
   30780:	movw	r1, #11580	; 0x2d3c
   30784:	mov	r0, r4
   30788:	mov	r5, r3
   3078c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30790:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30794:	add	r3, r5, #2
   30798:	mov	r2, r5
   3079c:	movw	r1, #15676	; 0x3d3c
   307a0:	mov	r0, r4
   307a4:	mov	r5, r3
   307a8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   307ac:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   307b0:	add	r3, r5, #2
   307b4:	cmp	r6, r3
   307b8:	beq	30c70 <__flatcc_fb_parse@@Base+0x2a90>
   307bc:	ldrb	r2, [r5, #2]
   307c0:	cmp	r2, #60	; 0x3c
   307c4:	beq	30cbc <__flatcc_fb_parse@@Base+0x2adc>
   307c8:	cmp	r2, #61	; 0x3d
   307cc:	bne	30c70 <__flatcc_fb_parse@@Base+0x2a90>
   307d0:	add	r3, r5, #3
   307d4:	mov	r2, r5
   307d8:	movw	r1, #15420	; 0x3c3c
   307dc:	movt	r1, #61	; 0x3d
   307e0:	mov	r0, r4
   307e4:	mov	r5, r3
   307e8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   307ec:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   307f0:	add	r3, r5, #2
   307f4:	mov	r2, r5
   307f8:	movw	r1, #15917	; 0x3e2d
   307fc:	mov	r0, r4
   30800:	mov	r5, r3
   30804:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30808:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   3080c:	add	r3, r5, #2
   30810:	mov	r2, r5
   30814:	movw	r1, #15661	; 0x3d2d
   30818:	mov	r0, r4
   3081c:	mov	r5, r3
   30820:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30824:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30828:	add	r7, r5, #2
   3082c:	cmp	r6, r7
   30830:	beq	30c1c <__flatcc_fb_parse@@Base+0x2a3c>
   30834:	ldrb	r3, [r5, #2]
   30838:	cmp	r3, #33	; 0x21
   3083c:	cmpne	r3, #42	; 0x2a
   30840:	bne	30c1c <__flatcc_fb_parse@@Base+0x2a3c>
   30844:	mov	r0, #1
   30848:	add	r7, r5, #3
   3084c:	movw	r1, #64572	; 0xfc3c
   30850:	movt	r1, #65535	; 0xffff
   30854:	mov	r3, r7
   30858:	mov	r2, r7
   3085c:	str	r0, [r4, #32]
   30860:	mov	r0, r4
   30864:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30868:	movw	r9, #64572	; 0xfc3c
   3086c:	movt	r9, #65535	; 0xffff
   30870:	sub	r2, r7, #1
   30874:	b	3087c <__flatcc_fb_parse@@Base+0x269c>
   30878:	mov	r2, r5
   3087c:	add	r5, r2, #1
   30880:	cmp	r6, r5
   30884:	beq	30934 <__flatcc_fb_parse@@Base+0x2754>
   30888:	ldrb	r3, [r2, #1]
   3088c:	cmp	r3, #127	; 0x7f
   30890:	cmpne	r3, #31
   30894:	bls	30960 <__flatcc_fb_parse@@Base+0x2780>
   30898:	cmp	r3, #47	; 0x2f
   3089c:	bne	30878 <__flatcc_fb_parse@@Base+0x2698>
   308a0:	ldrb	r3, [r5, #-1]
   308a4:	cmp	r3, #42	; 0x2a
   308a8:	bne	30878 <__flatcc_fb_parse@@Base+0x2698>
   308ac:	cmp	r7, r2
   308b0:	moveq	r5, r7
   308b4:	beq	308c8 <__flatcc_fb_parse@@Base+0x26e8>
   308b8:	ldr	r3, [r4, #32]
   308bc:	mov	r5, r2
   308c0:	cmp	r3, #0
   308c4:	bne	30948 <__flatcc_fb_parse@@Base+0x2768>
   308c8:	cmp	r6, r5
   308cc:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   308d0:	ldrb	r3, [r5]
   308d4:	cmp	r3, #0
   308d8:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   308dc:	cmp	r3, #10
   308e0:	beq	30a5c <__flatcc_fb_parse@@Base+0x287c>
   308e4:	cmp	r3, #13
   308e8:	beq	30a88 <__flatcc_fb_parse@@Base+0x28a8>
   308ec:	cmp	r3, #127	; 0x7f
   308f0:	cmpne	r3, #31
   308f4:	movls	r2, #1
   308f8:	movhi	r2, #0
   308fc:	bhi	30a50 <__flatcc_fb_parse@@Base+0x2870>
   30900:	cmp	r3, #9
   30904:	cmpne	r3, #32
   30908:	add	r7, r5, #1
   3090c:	bne	30aa8 <__flatcc_fb_parse@@Base+0x28c8>
   30910:	ldr	r3, [r4, #32]
   30914:	cmp	r3, #0
   30918:	beq	30870 <__flatcc_fb_parse@@Base+0x2690>
   3091c:	mov	r2, r5
   30920:	mov	r3, r7
   30924:	mov	r1, r9
   30928:	mov	r0, r4
   3092c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30930:	b	30870 <__flatcc_fb_parse@@Base+0x2690>
   30934:	cmp	r7, r6
   30938:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   3093c:	ldr	r3, [r4, #32]
   30940:	cmp	r3, #0
   30944:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   30948:	mov	r2, r7
   3094c:	mov	r3, r5
   30950:	mov	r1, r9
   30954:	mov	r0, r4
   30958:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   3095c:	b	308c8 <__flatcc_fb_parse@@Base+0x26e8>
   30960:	cmp	r7, r5
   30964:	beq	308d4 <__flatcc_fb_parse@@Base+0x26f4>
   30968:	ldr	r3, [r4, #32]
   3096c:	cmp	r3, #0
   30970:	beq	308d0 <__flatcc_fb_parse@@Base+0x26f0>
   30974:	b	30948 <__flatcc_fb_parse@@Base+0x2768>
   30978:	add	r7, r5, #2
   3097c:	cmp	r6, r7
   30980:	beq	30c10 <__flatcc_fb_parse@@Base+0x2a30>
   30984:	ldrb	r3, [r5, #2]
   30988:	cmp	r3, #33	; 0x21
   3098c:	cmpne	r3, #47	; 0x2f
   30990:	bne	30c10 <__flatcc_fb_parse@@Base+0x2a30>
   30994:	mov	r0, #1
   30998:	add	r7, r5, #3
   3099c:	movw	r1, #64572	; 0xfc3c
   309a0:	movt	r1, #65535	; 0xffff
   309a4:	mov	r3, r7
   309a8:	mov	r2, r7
   309ac:	str	r0, [r4, #32]
   309b0:	mov	r0, r4
   309b4:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   309b8:	movw	sl, #64572	; 0xfc3c
   309bc:	movt	sl, #65535	; 0xffff
   309c0:	sub	r9, r7, #1
   309c4:	b	309dc <__flatcc_fb_parse@@Base+0x27fc>
   309c8:	ldrb	r3, [r9, #1]
   309cc:	cmp	r3, #127	; 0x7f
   309d0:	cmpne	r3, #31
   309d4:	bls	30adc <__flatcc_fb_parse@@Base+0x28fc>
   309d8:	mov	r9, r5
   309dc:	add	r5, r9, #1
   309e0:	cmp	r6, r5
   309e4:	bne	309c8 <__flatcc_fb_parse@@Base+0x27e8>
   309e8:	cmp	r7, r6
   309ec:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   309f0:	ldr	r3, [r4, #32]
   309f4:	cmp	r3, #0
   309f8:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   309fc:	movw	r1, #64572	; 0xfc3c
   30a00:	movt	r1, #65535	; 0xffff
   30a04:	mov	r2, r7
   30a08:	mov	r3, r6
   30a0c:	mov	r0, r4
   30a10:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30a14:	mov	r3, r5
   30a18:	mov	r2, r5
   30a1c:	mov	r1, #27
   30a20:	mov	r0, r4
   30a24:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30a28:	cmp	r6, r5
   30a2c:	beq	2e4d4 <__flatcc_fb_parse@@Base+0x2f4>
   30a30:	ldrb	r1, [r5]
   30a34:	cmp	r1, #0
   30a38:	bne	2e4d4 <__flatcc_fb_parse@@Base+0x2f4>
   30a3c:	mov	r3, r5
   30a40:	mov	r2, r5
   30a44:	mov	r0, r4
   30a48:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30a4c:	b	2e4e8 <__flatcc_fb_parse@@Base+0x308>
   30a50:	add	r5, r5, #2
   30a54:	str	r2, [r4, #32]
   30a58:	b	2fc70 <__flatcc_fb_parse@@Base+0x1a90>
   30a5c:	add	r7, r5, #1
   30a60:	cmp	r6, r7
   30a64:	beq	30a74 <__flatcc_fb_parse@@Base+0x2894>
   30a68:	ldrb	r3, [r5, #1]
   30a6c:	cmp	r3, #13
   30a70:	beq	30aa0 <__flatcc_fb_parse@@Base+0x28c0>
   30a74:	ldr	r3, [r4, #64]	; 0x40
   30a78:	str	r7, [r4, #60]	; 0x3c
   30a7c:	add	r3, r3, #1
   30a80:	str	r3, [r4, #64]	; 0x40
   30a84:	b	30870 <__flatcc_fb_parse@@Base+0x2690>
   30a88:	add	r7, r5, #1
   30a8c:	cmp	r6, r7
   30a90:	beq	30a74 <__flatcc_fb_parse@@Base+0x2894>
   30a94:	ldrb	r3, [r5, #1]
   30a98:	cmp	r3, #10
   30a9c:	bne	30a74 <__flatcc_fb_parse@@Base+0x2894>
   30aa0:	add	r7, r5, #2
   30aa4:	b	30a74 <__flatcc_fb_parse@@Base+0x2894>
   30aa8:	mov	r2, r5
   30aac:	mov	r3, r7
   30ab0:	mov	r1, #7
   30ab4:	mov	r0, r4
   30ab8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30abc:	b	30870 <__flatcc_fb_parse@@Base+0x2690>
   30ac0:	add	r3, r5, #2
   30ac4:	mov	r2, r5
   30ac8:	movw	r1, #15663	; 0x3d2f
   30acc:	mov	r0, r4
   30ad0:	mov	r5, r3
   30ad4:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30ad8:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30adc:	cmp	r7, r5
   30ae0:	bne	30b48 <__flatcc_fb_parse@@Base+0x2968>
   30ae4:	ldrb	r3, [r5]
   30ae8:	cmp	r3, #0
   30aec:	beq	30a14 <__flatcc_fb_parse@@Base+0x2834>
   30af0:	cmp	r3, #13
   30af4:	cmpne	r3, #10
   30af8:	beq	30b6c <__flatcc_fb_parse@@Base+0x298c>
   30afc:	cmp	r3, #9
   30b00:	cmpne	r3, #32
   30b04:	add	r7, r9, #2
   30b08:	bne	30b30 <__flatcc_fb_parse@@Base+0x2950>
   30b0c:	ldr	r3, [r4, #32]
   30b10:	cmp	r3, #0
   30b14:	beq	309c0 <__flatcc_fb_parse@@Base+0x27e0>
   30b18:	mov	r2, r5
   30b1c:	mov	r3, r7
   30b20:	mov	r1, sl
   30b24:	mov	r0, r4
   30b28:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30b2c:	b	309c0 <__flatcc_fb_parse@@Base+0x27e0>
   30b30:	mov	r2, r5
   30b34:	mov	r3, r7
   30b38:	mov	r1, #7
   30b3c:	mov	r0, r4
   30b40:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30b44:	b	309c0 <__flatcc_fb_parse@@Base+0x27e0>
   30b48:	ldr	r3, [r4, #32]
   30b4c:	cmp	r3, #0
   30b50:	beq	30ae4 <__flatcc_fb_parse@@Base+0x2904>
   30b54:	mov	r2, r7
   30b58:	mov	r3, r5
   30b5c:	mov	r1, sl
   30b60:	mov	r0, r4
   30b64:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30b68:	b	30ae4 <__flatcc_fb_parse@@Base+0x2904>
   30b6c:	mov	r3, #0
   30b70:	str	r3, [r4, #32]
   30b74:	b	2fc70 <__flatcc_fb_parse@@Base+0x1a90>
   30b78:	add	r3, r5, #2
   30b7c:	mov	r2, r5
   30b80:	movw	r1, #11565	; 0x2d2d
   30b84:	mov	r0, r4
   30b88:	mov	r5, r3
   30b8c:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30b90:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30b94:	mov	r3, r9
   30b98:	mov	r2, r9
   30b9c:	mov	r1, #23
   30ba0:	mov	r0, r4
   30ba4:	mov	r5, r9
   30ba8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30bac:	b	2fc70 <__flatcc_fb_parse@@Base+0x1a90>
   30bb0:	mov	r2, r3
   30bb4:	b	2efcc <__flatcc_fb_parse@@Base+0xdec>
   30bb8:	ldr	r3, [r4, #44]	; 0x2c
   30bbc:	ldr	r5, [r4, #52]	; 0x34
   30bc0:	add	r2, r5, #32
   30bc4:	cmp	r2, r3
   30bc8:	bhi	30c88 <__flatcc_fb_parse@@Base+0x2aa8>
   30bcc:	add	r3, r4, #476	; 0x1dc
   30bd0:	mov	r1, r5
   30bd4:	ldr	r0, [r4, #412]	; 0x19c
   30bd8:	ldrd	r8, [r3]
   30bdc:	str	r2, [r4, #52]	; 0x34
   30be0:	mov	r2, #1
   30be4:	str	r7, [r5]
   30be8:	strd	r8, [r5, #20]
   30bec:	bl	2a1dc <fb_scope_table_insert_item@@Base>
   30bf0:	b	303b8 <__flatcc_fb_parse@@Base+0x21d8>
   30bf4:	add	r3, r5, #2
   30bf8:	mov	r2, r5
   30bfc:	orr	r1, r1, #15616	; 0x3d00
   30c00:	mov	r0, r4
   30c04:	mov	r5, r3
   30c08:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30c0c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30c10:	mov	r3, #0
   30c14:	str	r3, [r4, #32]
   30c18:	b	309b8 <__flatcc_fb_parse@@Base+0x27d8>
   30c1c:	mov	r3, #0
   30c20:	str	r3, [r4, #32]
   30c24:	b	30868 <__flatcc_fb_parse@@Base+0x2688>
   30c28:	cmp	r3, #0
   30c2c:	bne	2e704 <__flatcc_fb_parse@@Base+0x524>
   30c30:	b	2fc8c <__flatcc_fb_parse@@Base+0x1aac>
   30c34:	mov	r0, r3
   30c38:	b	2f6e4 <__flatcc_fb_parse@@Base+0x1504>
   30c3c:	sub	r0, r9, r5
   30c40:	ldrb	r1, [ip]
   30c44:	uxtb	r0, r0
   30c48:	add	r0, r0, #48	; 0x30
   30c4c:	b	2f524 <__flatcc_fb_parse@@Base+0x1344>
   30c50:	add	r3, r5, #3
   30c54:	mov	r2, r5
   30c58:	movw	r1, #15934	; 0x3e3e
   30c5c:	movt	r1, #61	; 0x3d
   30c60:	mov	r0, r4
   30c64:	mov	r5, r3
   30c68:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30c6c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30c70:	mov	r2, r5
   30c74:	movw	r1, #15420	; 0x3c3c
   30c78:	mov	r0, r4
   30c7c:	mov	r5, r3
   30c80:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30c84:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30c88:	mov	r1, #1
   30c8c:	mov	r0, #65536	; 0x10000
   30c90:	bl	13f7c <calloc@plt>
   30c94:	cmp	r0, #0
   30c98:	beq	310e0 <__flatcc_fb_parse@@Base+0x2f00>
   30c9c:	ldr	r3, [r4, #48]	; 0x30
   30ca0:	add	r1, r0, #65536	; 0x10000
   30ca4:	add	r5, r0, #16
   30ca8:	add	r2, r0, #48	; 0x30
   30cac:	str	r1, [r4, #44]	; 0x2c
   30cb0:	str	r0, [r4, #48]	; 0x30
   30cb4:	str	r3, [r0]
   30cb8:	b	30bcc <__flatcc_fb_parse@@Base+0x29ec>
   30cbc:	add	r3, r5, #3
   30cc0:	cmp	r6, r3
   30cc4:	beq	30cd4 <__flatcc_fb_parse@@Base+0x2af4>
   30cc8:	ldrb	r2, [r5, #3]
   30ccc:	cmp	r2, #61	; 0x3d
   30cd0:	beq	310c0 <__flatcc_fb_parse@@Base+0x2ee0>
   30cd4:	mov	r2, r5
   30cd8:	movw	r1, #15420	; 0x3c3c
   30cdc:	movt	r1, #60	; 0x3c
   30ce0:	mov	r0, r4
   30ce4:	mov	r5, r3
   30ce8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30cec:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30cf0:	mov	ip, #0
   30cf4:	mov	r1, r9
   30cf8:	mov	r3, ip
   30cfc:	movw	r2, #35676	; 0x8b5c
   30d00:	movt	r2, #5
   30d04:	mov	r0, r4
   30d08:	str	ip, [sp]
   30d0c:	str	ip, [sp, #4]
   30d10:	bl	2c558 <__flatcc_error_report@@Base>
   30d14:	ldr	r1, [r4, #40]	; 0x28
   30d18:	ldr	r3, [r1, #16]
   30d1c:	b	2f314 <__flatcc_fb_parse@@Base+0x1134>
   30d20:	add	r3, r5, #3
   30d24:	mov	r2, r5
   30d28:	movw	r1, #11822	; 0x2e2e
   30d2c:	movt	r1, #46	; 0x2e
   30d30:	mov	r0, r4
   30d34:	mov	r5, r3
   30d38:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30d3c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30d40:	add	r3, r5, #3
   30d44:	mov	r2, r5
   30d48:	movw	r1, #15677	; 0x3d3d
   30d4c:	movt	r1, #61	; 0x3d
   30d50:	mov	r0, r4
   30d54:	mov	r5, r3
   30d58:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30d5c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30d60:	add	r3, r5, #3
   30d64:	mov	r2, r5
   30d68:	movw	r1, #14906	; 0x3a3a
   30d6c:	movt	r1, #61	; 0x3d
   30d70:	mov	r0, r4
   30d74:	mov	r5, r3
   30d78:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   30d7c:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   30d80:	mov	r1, r5
   30d84:	movw	r0, #34772	; 0x87d4
   30d88:	movt	r0, #5
   30d8c:	mov	r2, #11
   30d90:	bl	13fd0 <memcmp@plt>
   30d94:	cmp	r0, #0
   30d98:	movw	r1, #64569	; 0xfc39
   30d9c:	movt	r1, #65535	; 0xffff
   30da0:	movne	r1, #9
   30da4:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30da8:	mov	r1, r5
   30dac:	movw	r0, #35536	; 0x8ad0
   30db0:	movt	r0, #4
   30db4:	mov	r2, #6
   30db8:	bl	13fd0 <memcmp@plt>
   30dbc:	cmp	r0, #0
   30dc0:	movw	r1, #64558	; 0xfc2e
   30dc4:	movt	r1, #65535	; 0xffff
   30dc8:	movne	r1, #9
   30dcc:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30dd0:	mov	r1, r5
   30dd4:	movw	r0, #35560	; 0x8ae8
   30dd8:	movt	r0, #4
   30ddc:	mov	r2, #5
   30de0:	bl	13fd0 <memcmp@plt>
   30de4:	cmp	r0, #0
   30de8:	movne	r1, #9
   30dec:	mvneq	r1, #980	; 0x3d4
   30df0:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30df4:	mov	r1, r5
   30df8:	movw	r0, #2356	; 0x934
   30dfc:	movt	r0, #4
   30e00:	mov	r2, #9
   30e04:	bl	13fd0 <memcmp@plt>
   30e08:	cmp	r0, #0
   30e0c:	movne	r1, #9
   30e10:	mvneq	r1, #968	; 0x3c8
   30e14:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30e18:	ldrb	r3, [r5]
   30e1c:	cmp	r3, #98	; 0x62
   30e20:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30e24:	ldrb	r3, [r2]
   30e28:	cmp	r3, #121	; 0x79
   30e2c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30e30:	ldrb	r3, [r2, #1]
   30e34:	add	r2, r2, #1
   30e38:	cmp	r3, #116	; 0x74
   30e3c:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30e40:	ldrb	r3, [r2, #1]
   30e44:	cmp	r3, #101	; 0x65
   30e48:	movweq	r1, #64538	; 0xfc1a
   30e4c:	movteq	r1, #65535	; 0xffff
   30e50:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   30e54:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30e58:	mov	r1, r5
   30e5c:	movw	r0, #35576	; 0x8af8
   30e60:	movt	r0, #4
   30e64:	mov	r2, #5
   30e68:	bl	13fd0 <memcmp@plt>
   30e6c:	cmp	r0, #0
   30e70:	movw	r1, #64545	; 0xfc21
   30e74:	movt	r1, #65535	; 0xffff
   30e78:	movne	r1, #9
   30e7c:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30e80:	mov	r1, r5
   30e84:	movw	r0, #33628	; 0x835c
   30e88:	movt	r0, #5
   30e8c:	mov	r2, #6
   30e90:	bl	13fd0 <memcmp@plt>
   30e94:	cmp	r0, #0
   30e98:	movw	r1, #64562	; 0xfc32
   30e9c:	movt	r1, #65535	; 0xffff
   30ea0:	movne	r1, #9
   30ea4:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30ea8:	mov	r1, r5
   30eac:	movw	r0, #34692	; 0x8784
   30eb0:	movt	r0, #5
   30eb4:	mov	r2, #5
   30eb8:	bl	13fd0 <memcmp@plt>
   30ebc:	cmp	r0, #0
   30ec0:	movne	r1, #9
   30ec4:	mvneq	r1, #976	; 0x3d0
   30ec8:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30ecc:	mov	r1, r5
   30ed0:	movw	r0, #34784	; 0x87e0
   30ed4:	movt	r0, #5
   30ed8:	mov	r2, #14
   30edc:	bl	13fd0 <memcmp@plt>
   30ee0:	cmp	r0, #0
   30ee4:	movw	r1, #64570	; 0xfc3a
   30ee8:	movt	r1, #65535	; 0xffff
   30eec:	movne	r1, #9
   30ef0:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30ef4:	mov	r1, r5
   30ef8:	movw	r0, #34740	; 0x87b4
   30efc:	movt	r0, #5
   30f00:	mov	r2, #7
   30f04:	bl	13fd0 <memcmp@plt>
   30f08:	cmp	r0, #0
   30f0c:	movw	r1, #64565	; 0xfc35
   30f10:	movt	r1, #65535	; 0xffff
   30f14:	movne	r1, #9
   30f18:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30f1c:	mov	r1, r5
   30f20:	movw	r0, #42012	; 0xa41c
   30f24:	movt	r0, #5
   30f28:	mov	r2, #5
   30f2c:	bl	13fd0 <memcmp@plt>
   30f30:	cmp	r0, #0
   30f34:	movw	r1, #64553	; 0xfc29
   30f38:	movt	r1, #65535	; 0xffff
   30f3c:	movne	r1, #9
   30f40:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30f44:	mov	r1, r5
   30f48:	movw	r0, #34724	; 0x87a4
   30f4c:	movt	r0, #5
   30f50:	mov	r2, #7
   30f54:	bl	13fd0 <memcmp@plt>
   30f58:	cmp	r0, #0
   30f5c:	movw	r1, #64540	; 0xfc1c
   30f60:	movt	r1, #65535	; 0xffff
   30f64:	movne	r1, #9
   30f68:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30f6c:	mov	r1, r5
   30f70:	movw	r0, #34708	; 0x8794
   30f74:	movt	r0, #5
   30f78:	mov	r2, #5
   30f7c:	bl	13fd0 <memcmp@plt>
   30f80:	cmp	r0, #0
   30f84:	movw	r1, #64552	; 0xfc28
   30f88:	movt	r1, #65535	; 0xffff
   30f8c:	movne	r1, #9
   30f90:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30f94:	mov	r1, r5
   30f98:	movw	r0, #34748	; 0x87bc
   30f9c:	movt	r0, #5
   30fa0:	mov	r2, #9
   30fa4:	bl	13fd0 <memcmp@plt>
   30fa8:	cmp	r0, #0
   30fac:	movw	r1, #64566	; 0xfc36
   30fb0:	movt	r1, #65535	; 0xffff
   30fb4:	movne	r1, #9
   30fb8:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30fbc:	mov	r1, r5
   30fc0:	movw	r0, #35568	; 0x8af0
   30fc4:	movt	r0, #4
   30fc8:	mov	r2, #5
   30fcc:	bl	13fd0 <memcmp@plt>
   30fd0:	cmp	r0, #0
   30fd4:	movw	r1, #64546	; 0xfc22
   30fd8:	movt	r1, #65535	; 0xffff
   30fdc:	movne	r1, #9
   30fe0:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   30fe4:	mov	r1, r5
   30fe8:	movw	r0, #34684	; 0x877c
   30fec:	movt	r0, #5
   30ff0:	mov	r2, #5
   30ff4:	bl	13fd0 <memcmp@plt>
   30ff8:	cmp	r0, #0
   30ffc:	movw	r1, #64550	; 0xfc26
   31000:	movt	r1, #65535	; 0xffff
   31004:	movne	r1, #9
   31008:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   3100c:	mov	r1, r5
   31010:	movw	r0, #34800	; 0x87f0
   31014:	movt	r0, #5
   31018:	mov	r2, #15
   3101c:	bl	13fd0 <memcmp@plt>
   31020:	cmp	r0, #0
   31024:	movne	r1, #9
   31028:	mvneq	r1, #964	; 0x3c4
   3102c:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   31030:	ldrb	r3, [r5]
   31034:	cmp	r3, #105	; 0x69
   31038:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   3103c:	ldrb	r3, [r2]
   31040:	cmp	r3, #110	; 0x6e
   31044:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   31048:	ldrb	r3, [r2, #1]
   3104c:	cmp	r3, #116	; 0x74
   31050:	movweq	r1, #64542	; 0xfc1e
   31054:	movteq	r1, #65535	; 0xffff
   31058:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   3105c:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   31060:	ldrb	r3, [r5]
   31064:	cmp	r3, #117	; 0x75
   31068:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   3106c:	ldrb	r3, [r2]
   31070:	cmp	r3, #105	; 0x69
   31074:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   31078:	ldrb	r3, [r2, #1]
   3107c:	add	r2, r2, #1
   31080:	cmp	r3, #110	; 0x6e
   31084:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   31088:	ldrb	r3, [r2, #1]
   3108c:	cmp	r3, #116	; 0x74
   31090:	movweq	r1, #64549	; 0xfc25
   31094:	movteq	r1, #65535	; 0xffff
   31098:	bne	2fe44 <__flatcc_fb_parse@@Base+0x1c64>
   3109c:	b	2f5ac <__flatcc_fb_parse@@Base+0x13cc>
   310a0:	add	r3, r5, #4
   310a4:	mov	r2, r5
   310a8:	movw	r1, #15934	; 0x3e3e
   310ac:	movt	r1, #15678	; 0x3d3e
   310b0:	mov	r0, r4
   310b4:	mov	r5, r3
   310b8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   310bc:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   310c0:	add	r3, r5, #4
   310c4:	mov	r2, r5
   310c8:	movw	r1, #15420	; 0x3c3c
   310cc:	movt	r1, #15676	; 0x3d3c
   310d0:	mov	r0, r4
   310d4:	mov	r5, r3
   310d8:	bl	2c29c <__flatcc_fb_default_error_out@@Base+0x50>
   310dc:	b	2f430 <__flatcc_fb_parse@@Base+0x1250>
   310e0:	bl	2c26c <__flatcc_fb_default_error_out@@Base+0x20>
   310e4:	ldrb	r3, [r2]
   310e8:	udf	#0

000310ec <__flatcc_fb_clear_parser@@Base>:
   310ec:	strd	r4, [sp, #-16]!
   310f0:	mov	r5, r0
   310f4:	ldr	r4, [r0, #392]	; 0x188
   310f8:	str	r6, [sp, #8]
   310fc:	str	lr, [sp, #12]
   31100:	cmp	r4, #0
   31104:	beq	31120 <__flatcc_fb_clear_parser@@Base+0x34>
   31108:	ldrh	r3, [r4, #8]
   3110c:	cmp	r3, #4
   31110:	bls	311f8 <__flatcc_fb_clear_parser@@Base+0x10c>
   31114:	ldr	r4, [r4]
   31118:	cmp	r4, #0
   3111c:	bne	31108 <__flatcc_fb_clear_parser@@Base+0x1c>
   31120:	add	r0, r5, #448	; 0x1c0
   31124:	bl	2afac <fb_schema_table_clear@@Base>
   31128:	add	r0, r5, #432	; 0x1b0
   3112c:	bl	3d758 <fb_name_table_clear@@Base>
   31130:	add	r0, r5, #524	; 0x20c
   31134:	bl	28180 <ptr_set_clear@@Base>
   31138:	ldr	r0, [r5, #112]	; 0x70
   3113c:	cmp	r0, #0
   31140:	beq	31148 <__flatcc_fb_clear_parser@@Base+0x5c>
   31144:	bl	13fac <free@plt>
   31148:	ldr	r0, [r5, #20]
   3114c:	cmp	r0, #0
   31150:	beq	31158 <__flatcc_fb_clear_parser@@Base+0x6c>
   31154:	bl	13fac <free@plt>
   31158:	ldr	r0, [r5, #512]	; 0x200
   3115c:	cmp	r0, #0
   31160:	beq	31168 <__flatcc_fb_clear_parser@@Base+0x7c>
   31164:	bl	13fac <free@plt>
   31168:	ldr	r0, [r5, #516]	; 0x204
   3116c:	cmp	r0, #0
   31170:	beq	31178 <__flatcc_fb_clear_parser@@Base+0x8c>
   31174:	bl	13fac <free@plt>
   31178:	ldr	r0, [r5, #520]	; 0x208
   3117c:	cmp	r0, #0
   31180:	beq	31188 <__flatcc_fb_clear_parser@@Base+0x9c>
   31184:	bl	13fac <free@plt>
   31188:	ldr	r0, [r5, #548]	; 0x224
   3118c:	cmp	r0, #0
   31190:	beq	31198 <__flatcc_fb_clear_parser@@Base+0xac>
   31194:	bl	13fac <free@plt>
   31198:	add	r0, r5, #416	; 0x1a0
   3119c:	movw	r1, #49764	; 0xc264
   311a0:	movt	r1, #2
   311a4:	mov	r2, #0
   311a8:	bl	29b5c <fb_scope_table_destroy@@Base>
   311ac:	ldr	r0, [r5, #48]	; 0x30
   311b0:	cmp	r0, #0
   311b4:	beq	311c8 <__flatcc_fb_clear_parser@@Base+0xdc>
   311b8:	ldr	r4, [r0]
   311bc:	bl	13fac <free@plt>
   311c0:	subs	r0, r4, #0
   311c4:	bne	311b8 <__flatcc_fb_clear_parser@@Base+0xcc>
   311c8:	ldr	r0, [r5, #16]
   311cc:	cmp	r0, #0
   311d0:	beq	311d8 <__flatcc_fb_clear_parser@@Base+0xec>
   311d4:	bl	13fac <free@plt>
   311d8:	mov	r0, r5
   311dc:	mov	r2, #560	; 0x230
   311e0:	ldrd	r4, [sp]
   311e4:	mov	r1, #0
   311e8:	ldr	r6, [sp, #8]
   311ec:	ldr	lr, [sp, #12]
   311f0:	add	sp, sp, #16
   311f4:	b	14084 <memset@plt>
   311f8:	add	r0, r4, #56	; 0x38
   311fc:	bl	28c80 <fb_symbol_table_clear@@Base>
   31200:	add	r0, r4, #72	; 0x48
   31204:	bl	3e690 <fb_value_set_clear@@Base>
   31208:	ldr	r4, [r4]
   3120c:	cmp	r4, #0
   31210:	bne	31108 <__flatcc_fb_clear_parser@@Base+0x1c>
   31214:	b	31120 <__flatcc_fb_clear_parser@@Base+0x34>
   31218:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3121c:	strd	r6, [sp, #8]
   31220:	strd	sl, [sp, #24]
   31224:	ldrh	sl, [r1, #8]
   31228:	strd	r8, [sp, #16]
   3122c:	str	lr, [sp, #32]
   31230:	sub	sp, sp, #44	; 0x2c
   31234:	cmp	sl, #1
   31238:	bne	3175c <__flatcc_fb_clear_parser@@Base+0x670>
   3123c:	ldrh	r3, [r1, #10]
   31240:	mov	r8, r0
   31244:	mov	r4, r1
   31248:	ands	r0, r3, #1
   3124c:	bne	3173c <__flatcc_fb_clear_parser@@Base+0x650>
   31250:	tst	r3, #2
   31254:	bne	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   31258:	ldr	r2, [r1, #120]	; 0x78
   3125c:	cmp	r2, #0
   31260:	bne	3177c <__flatcc_fb_clear_parser@@Base+0x690>
   31264:	ldr	r5, [r1, #20]
   31268:	orr	r3, r3, #1
   3126c:	strh	r3, [r1, #10]
   31270:	cmp	r5, #0
   31274:	beq	315a0 <__flatcc_fb_clear_parser@@Base+0x4b4>
   31278:	ldr	r2, [r8, #116]	; 0x74
   3127c:	cmp	r2, #99	; 0x63
   31280:	bgt	314f4 <__flatcc_fb_clear_parser@@Base+0x408>
   31284:	movw	fp, #36144	; 0x8d30
   31288:	movt	fp, #5
   3128c:	movw	r9, #36800	; 0x8fc0
   31290:	movt	r9, #5
   31294:	ldrh	r3, [r5, #24]
   31298:	cmp	r3, #8
   3129c:	beq	3136c <__flatcc_fb_clear_parser@@Base+0x280>
   312a0:	cmp	r3, #14
   312a4:	beq	312f4 <__flatcc_fb_clear_parser@@Base+0x208>
   312a8:	cmp	r3, #1
   312ac:	beq	312d4 <__flatcc_fb_clear_parser@@Base+0x1e8>
   312b0:	ldr	r1, [r5, #4]
   312b4:	mov	ip, #0
   312b8:	mov	r0, r8
   312bc:	mov	r3, ip
   312c0:	movw	r2, #36752	; 0x8f90
   312c4:	movt	r2, #5
   312c8:	str	ip, [sp]
   312cc:	str	ip, [sp, #4]
   312d0:	bl	2c558 <__flatcc_error_report@@Base>
   312d4:	mvn	r0, #0
   312d8:	add	sp, sp, #44	; 0x2c
   312dc:	ldrd	r4, [sp]
   312e0:	ldrd	r6, [sp, #8]
   312e4:	ldrd	r8, [sp, #16]
   312e8:	ldrd	sl, [sp, #24]
   312ec:	add	sp, sp, #32
   312f0:	pop	{pc}		; (ldr pc, [sp], #4)
   312f4:	ldr	r6, [r5, #16]
   312f8:	ldrh	r3, [r6, #8]
   312fc:	cmp	r3, #3
   31300:	beq	3154c <__flatcc_fb_clear_parser@@Base+0x460>
   31304:	cmp	r3, #1
   31308:	bne	31710 <__flatcc_fb_clear_parser@@Base+0x624>
   3130c:	ldrh	r3, [r6, #10]
   31310:	tst	r3, #1
   31314:	bne	316e4 <__flatcc_fb_clear_parser@@Base+0x5f8>
   31318:	ands	ip, r3, #2
   3131c:	bne	31354 <__flatcc_fb_clear_parser@@Base+0x268>
   31320:	ldr	r3, [r8, #188]	; 0xbc
   31324:	cmp	r3, #0
   31328:	bne	3157c <__flatcc_fb_clear_parser@@Base+0x490>
   3132c:	add	r2, r2, #1
   31330:	mov	r1, r6
   31334:	mov	r0, r8
   31338:	str	r2, [r8, #116]	; 0x74
   3133c:	bl	31218 <__flatcc_fb_clear_parser@@Base+0x12c>
   31340:	ldr	r3, [r8, #116]	; 0x74
   31344:	cmp	r0, #0
   31348:	sub	r3, r3, #1
   3134c:	str	r3, [r8, #116]	; 0x74
   31350:	bne	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   31354:	ldrh	ip, [r6, #104]	; 0x68
   31358:	ldrd	r2, [r6, #112]	; 0x70
   3135c:	strh	ip, [r5, #74]	; 0x4a
   31360:	strd	r2, [sp, #24]
   31364:	strd	r2, [r5, #88]	; 0x58
   31368:	b	313c0 <__flatcc_fb_clear_parser@@Base+0x2d4>
   3136c:	ldr	r3, [r5, #16]
   31370:	ldr	r2, [r3, #16]
   31374:	add	r2, r2, #996	; 0x3e4
   31378:	add	r2, r2, #3
   3137c:	cmp	r2, #27
   31380:	bhi	31564 <__flatcc_fb_clear_parser@@Base+0x478>
   31384:	add	r2, fp, r2, lsl #2
   31388:	ldr	r2, [r2, #16]
   3138c:	add	r1, fp, r2, lsl #2
   31390:	str	r2, [r5, #16]
   31394:	ldr	ip, [r1, #128]	; 0x80
   31398:	mov	r1, #0
   3139c:	mov	r0, ip
   313a0:	cmp	ip, #0
   313a4:	strd	r0, [sp, #24]
   313a8:	beq	3156c <__flatcc_fb_clear_parser@@Base+0x480>
   313ac:	mov	r2, ip
   313b0:	mov	r3, r1
   313b4:	uxth	ip, ip
   313b8:	strh	ip, [r5, #74]	; 0x4a
   313bc:	strd	r2, [r5, #88]	; 0x58
   313c0:	uxth	r0, ip
   313c4:	mov	r1, #0
   313c8:	subs	r3, r0, #1
   313cc:	str	r3, [sp, #8]
   313d0:	sbc	r3, r1, #0
   313d4:	str	r3, [sp, #12]
   313d8:	ldrd	r2, [sp, #8]
   313dc:	cmp	r3, #0
   313e0:	cmpeq	r2, #255	; 0xff
   313e4:	bhi	31434 <__flatcc_fb_clear_parser@@Base+0x348>
   313e8:	cmp	r1, #0
   313ec:	cmpeq	r0, #1
   313f0:	beq	31450 <__flatcc_fb_clear_parser@@Base+0x364>
   313f4:	cmp	r1, #0
   313f8:	cmpeq	r0, #2
   313fc:	beq	31450 <__flatcc_fb_clear_parser@@Base+0x364>
   31400:	cmp	r1, #0
   31404:	cmpeq	r0, #3
   31408:	beq	31434 <__flatcc_fb_clear_parser@@Base+0x348>
   3140c:	mov	r2, #4
   31410:	mov	r3, #0
   31414:	cmp	r1, r3
   31418:	cmpeq	r0, r2
   3141c:	beq	31450 <__flatcc_fb_clear_parser@@Base+0x364>
   31420:	adds	r2, r2, r2
   31424:	adc	r3, r3, r3
   31428:	cmp	r1, r3
   3142c:	cmpeq	r0, r2
   31430:	bcs	31414 <__flatcc_fb_clear_parser@@Base+0x328>
   31434:	movw	r1, #36548	; 0x8ec4
   31438:	movt	r1, #5
   3143c:	ldr	r3, [pc, #856]	; 3179c <__flatcc_fb_clear_parser@@Base+0x6b0>
   31440:	movw	r0, #36908	; 0x902c
   31444:	movt	r0, #5
   31448:	mov	r2, #108	; 0x6c
   3144c:	bl	14120 <__assert_fail@plt>
   31450:	ldrd	r2, [r4, #112]	; 0x70
   31454:	subs	lr, r2, #1
   31458:	sbc	r6, r3, #0
   3145c:	adds	lr, lr, r0
   31460:	adc	r6, r6, r1
   31464:	rsbs	r0, r0, #0
   31468:	rsc	r1, r1, #0
   3146c:	and	lr, lr, r0
   31470:	and	r1, r6, r1
   31474:	str	lr, [sp, #16]
   31478:	str	r1, [sp, #20]
   3147c:	ldrd	r0, [sp, #16]
   31480:	cmp	r3, r1
   31484:	strd	r0, [r5, #80]	; 0x50
   31488:	cmpeq	r2, r0
   3148c:	bhi	31688 <__flatcc_fb_clear_parser@@Base+0x59c>
   31490:	mov	r2, r0
   31494:	mov	r3, r1
   31498:	ldrd	r0, [sp, #24]
   3149c:	adds	r6, r2, r0
   314a0:	mov	r2, #0
   314a4:	adcs	r7, r3, r1
   314a8:	mov	r3, #0
   314ac:	movcs	r2, #1
   314b0:	movcs	r3, #0
   314b4:	orrs	r3, r2, r3
   314b8:	bne	31688 <__flatcc_fb_clear_parser@@Base+0x59c>
   314bc:	mov	r3, #0
   314c0:	movw	r2, #65535	; 0xffff
   314c4:	cmp	r7, r3
   314c8:	cmpeq	r6, r2
   314cc:	bhi	31520 <__flatcc_fb_clear_parser@@Base+0x434>
   314d0:	ldr	r5, [r5]
   314d4:	cmp	sl, ip
   314d8:	movcc	sl, ip
   314dc:	strd	r6, [r4, #112]	; 0x70
   314e0:	cmp	r5, #0
   314e4:	beq	315a0 <__flatcc_fb_clear_parser@@Base+0x4b4>
   314e8:	ldr	r2, [r8, #116]	; 0x74
   314ec:	cmp	r2, #99	; 0x63
   314f0:	ble	31294 <__flatcc_fb_clear_parser@@Base+0x1a8>
   314f4:	mov	ip, #0
   314f8:	mov	r0, r8
   314fc:	mov	r3, ip
   31500:	mov	r1, ip
   31504:	movw	r2, #36676	; 0x8f44
   31508:	movt	r2, #5
   3150c:	str	ip, [sp]
   31510:	str	ip, [sp, #4]
   31514:	bl	2c558 <__flatcc_error_report@@Base>
   31518:	mvn	r0, #0
   3151c:	b	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   31520:	mov	ip, #0
   31524:	movw	r2, #36956	; 0x905c
   31528:	movt	r2, #5
   3152c:	mov	r3, ip
   31530:	ldr	r1, [r5, #4]
   31534:	mov	r0, r8
   31538:	str	ip, [sp]
   3153c:	str	ip, [sp, #4]
   31540:	bl	2c558 <__flatcc_error_report@@Base>
   31544:	ldrh	ip, [r5, #74]	; 0x4a
   31548:	b	314d0 <__flatcc_fb_clear_parser@@Base+0x3e4>
   3154c:	ldrd	r2, [r6, #112]	; 0x70
   31550:	uxth	ip, r2
   31554:	strd	r2, [sp, #24]
   31558:	strh	ip, [r5, #74]	; 0x4a
   3155c:	strd	r2, [r5, #88]	; 0x58
   31560:	b	313c0 <__flatcc_fb_clear_parser@@Base+0x2d4>
   31564:	mov	r2, #0
   31568:	str	r2, [r5, #16]
   3156c:	mov	ip, #0
   31570:	mov	r0, r8
   31574:	ldr	r1, [r5, #4]
   31578:	b	312c0 <__flatcc_fb_clear_parser@@Base+0x1d4>
   3157c:	mov	r2, r9
   31580:	mov	r0, r8
   31584:	ldr	r1, [r5, #4]
   31588:	ldr	r3, [r6, #4]
   3158c:	str	ip, [sp]
   31590:	str	ip, [sp, #4]
   31594:	bl	2c558 <__flatcc_error_report@@Base>
   31598:	ldr	r2, [r8, #116]	; 0x74
   3159c:	b	3132c <__flatcc_fb_clear_parser@@Base+0x240>
   315a0:	ldrh	r2, [r4, #104]	; 0x68
   315a4:	cmp	r2, #0
   315a8:	moveq	r2, sl
   315ac:	strheq	sl, [r4, #104]	; 0x68
   315b0:	beq	315bc <__flatcc_fb_clear_parser@@Base+0x4d0>
   315b4:	cmp	r2, sl
   315b8:	bcc	316b4 <__flatcc_fb_clear_parser@@Base+0x5c8>
   315bc:	uxth	r2, r2
   315c0:	mov	r3, #0
   315c4:	subs	r1, r2, #1
   315c8:	str	r1, [sp, #32]
   315cc:	sbc	r1, r3, #0
   315d0:	str	r1, [sp, #36]	; 0x24
   315d4:	ldrd	r0, [sp, #32]
   315d8:	cmp	r1, #0
   315dc:	cmpeq	r0, #255	; 0xff
   315e0:	bhi	31434 <__flatcc_fb_clear_parser@@Base+0x348>
   315e4:	cmp	r3, #0
   315e8:	cmpeq	r2, #1
   315ec:	beq	31634 <__flatcc_fb_clear_parser@@Base+0x548>
   315f0:	cmp	r3, #0
   315f4:	cmpeq	r2, #2
   315f8:	beq	31634 <__flatcc_fb_clear_parser@@Base+0x548>
   315fc:	cmp	r3, #0
   31600:	cmpeq	r2, #3
   31604:	movne	r0, #4
   31608:	movne	r1, #0
   3160c:	beq	31434 <__flatcc_fb_clear_parser@@Base+0x348>
   31610:	cmp	r3, r1
   31614:	cmpeq	r2, r0
   31618:	beq	31634 <__flatcc_fb_clear_parser@@Base+0x548>
   3161c:	adds	r0, r0, r0
   31620:	adc	r1, r1, r1
   31624:	cmp	r3, r1
   31628:	cmpeq	r2, r0
   3162c:	bcs	31610 <__flatcc_fb_clear_parser@@Base+0x524>
   31630:	b	31434 <__flatcc_fb_clear_parser@@Base+0x348>
   31634:	ldr	r1, [r4, #112]	; 0x70
   31638:	mov	r0, #0
   3163c:	ldr	ip, [r4, #116]	; 0x74
   31640:	ldrh	r5, [r4, #10]
   31644:	subs	r1, r1, #1
   31648:	ldr	lr, [r8, #396]	; 0x18c
   3164c:	sbc	ip, ip, #0
   31650:	adds	r1, r1, r2
   31654:	adc	ip, ip, r3
   31658:	rsbs	r2, r2, #0
   3165c:	rsc	r3, r3, #0
   31660:	bic	r5, r5, #1
   31664:	and	ip, ip, r3
   31668:	and	r3, r1, r2
   3166c:	orr	r2, r5, #2
   31670:	strh	r2, [r4, #10]
   31674:	str	r3, [r4, #112]	; 0x70
   31678:	str	ip, [r4, #116]	; 0x74
   3167c:	str	lr, [r4, #120]	; 0x78
   31680:	str	r4, [r8, #396]	; 0x18c
   31684:	b	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   31688:	mov	ip, #0
   3168c:	mov	r0, r8
   31690:	ldr	r1, [r5, #4]
   31694:	mov	r3, ip
   31698:	movw	r2, #36932	; 0x9044
   3169c:	movt	r2, #5
   316a0:	str	ip, [sp]
   316a4:	str	ip, [sp, #4]
   316a8:	bl	2c558 <__flatcc_error_report@@Base>
   316ac:	mvn	r0, #0
   316b0:	b	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   316b4:	mov	ip, #0
   316b8:	movw	r2, #37008	; 0x9090
   316bc:	movt	r2, #5
   316c0:	mov	r3, ip
   316c4:	ldr	r1, [r4, #4]
   316c8:	mov	r0, r8
   316cc:	str	ip, [sp]
   316d0:	str	ip, [sp, #4]
   316d4:	bl	2c558 <__flatcc_error_report@@Base>
   316d8:	mov	r2, sl
   316dc:	strh	sl, [r4, #104]	; 0x68
   316e0:	b	315bc <__flatcc_fb_clear_parser@@Base+0x4d0>
   316e4:	mov	ip, #0
   316e8:	mov	r0, r8
   316ec:	ldr	r1, [r5, #4]
   316f0:	movw	r2, #36768	; 0x8fa0
   316f4:	movt	r2, #5
   316f8:	ldr	r3, [r6, #4]
   316fc:	str	ip, [sp]
   31700:	str	ip, [sp, #4]
   31704:	bl	2c558 <__flatcc_error_report@@Base>
   31708:	mvn	r0, #0
   3170c:	b	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   31710:	mov	ip, #0
   31714:	mov	r0, r8
   31718:	ldr	r1, [r5, #4]
   3171c:	mov	r3, ip
   31720:	movw	r2, #36872	; 0x9008
   31724:	movt	r2, #5
   31728:	str	ip, [sp]
   3172c:	str	ip, [sp, #4]
   31730:	bl	2c558 <__flatcc_error_report@@Base>
   31734:	mvn	r0, #0
   31738:	b	312d8 <__flatcc_fb_clear_parser@@Base+0x1ec>
   3173c:	movw	r3, #36144	; 0x8d30
   31740:	movt	r3, #5
   31744:	movw	r1, #36548	; 0x8ec4
   31748:	movt	r1, #5
   3174c:	movw	r0, #36624	; 0x8f10
   31750:	movt	r0, #5
   31754:	mov	r2, #504	; 0x1f8
   31758:	bl	14120 <__assert_fail@plt>
   3175c:	movw	r3, #36144	; 0x8d30
   31760:	movt	r3, #5
   31764:	movw	r1, #36548	; 0x8ec4
   31768:	movt	r1, #5
   3176c:	movw	r0, #5840	; 0x16d0
   31770:	movt	r0, #4
   31774:	movw	r2, #502	; 0x1f6
   31778:	bl	14120 <__assert_fail@plt>
   3177c:	movw	r3, #36144	; 0x8d30
   31780:	movt	r3, #5
   31784:	movw	r1, #36548	; 0x8ec4
   31788:	movt	r1, #5
   3178c:	movw	r0, #36664	; 0x8f38
   31790:	movt	r0, #5
   31794:	mov	r2, #508	; 0x1fc
   31798:	bl	14120 <__assert_fail@plt>
   3179c:	andeq	r8, r5, r0, ror #27
   317a0:	ldrh	r3, [r1, #8]
   317a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   317a8:	strd	r6, [sp, #8]
   317ac:	mov	r6, r0
   317b0:	strd	r8, [sp, #16]
   317b4:	strd	sl, [sp, #24]
   317b8:	mov	fp, r1
   317bc:	str	lr, [sp, #32]
   317c0:	sub	sp, sp, #132	; 0x84
   317c4:	cmp	r3, #4
   317c8:	str	r3, [sp, #16]
   317cc:	beq	320a4 <__flatcc_fb_clear_parser@@Base+0xfb8>
   317d0:	cmp	r3, #3
   317d4:	bne	324a8 <__flatcc_fb_clear_parser@@Base+0x13bc>
   317d8:	ldrh	r2, [r1, #48]	; 0x30
   317dc:	cmp	r2, #0
   317e0:	beq	32460 <__flatcc_fb_clear_parser@@Base+0x1374>
   317e4:	cmp	r2, #8
   317e8:	bne	3242c <__flatcc_fb_clear_parser@@Base+0x1340>
   317ec:	ldr	r3, [r1, #40]	; 0x28
   317f0:	ldr	r3, [r3, #16]
   317f4:	add	r3, r3, #996	; 0x3e4
   317f8:	add	r3, r3, #3
   317fc:	cmp	r3, #27
   31800:	bhi	31950 <__flatcc_fb_clear_parser@@Base+0x864>
   31804:	movw	r1, #36144	; 0x8d30
   31808:	movt	r1, #5
   3180c:	add	r3, r1, r3, lsl #2
   31810:	mov	r0, #0
   31814:	ldr	r2, [r3, #16]
   31818:	add	r1, r1, r2, lsl #2
   3181c:	ldr	r1, [r1, #128]	; 0x80
   31820:	uxth	r3, r1
   31824:	str	r2, [fp, #40]	; 0x28
   31828:	strh	r3, [fp, #104]	; 0x68
   3182c:	str	r1, [fp, #112]	; 0x70
   31830:	str	r0, [fp, #116]	; 0x74
   31834:	ldr	r4, [fp, #28]
   31838:	mov	r0, #0
   3183c:	mov	r1, #0
   31840:	add	r8, sp, #80	; 0x50
   31844:	strd	r0, [sp, #80]	; 0x50
   31848:	strd	r0, [r8, #8]
   3184c:	strd	r0, [r8, #16]
   31850:	cmp	r4, #0
   31854:	strd	r0, [r8, #24]
   31858:	strd	r0, [r8, #32]
   3185c:	strheq	r4, [fp, #92]	; 0x5c
   31860:	streq	r4, [sp, #20]
   31864:	strd	r0, [r8, #40]	; 0x28
   31868:	beq	31a30 <__flatcc_fb_clear_parser@@Base+0x944>
   3186c:	movw	r3, #37480	; 0x9268
   31870:	movt	r3, #5
   31874:	movw	r9, #36144	; 0x8d30
   31878:	movt	r9, #5
   3187c:	movw	sl, #37516	; 0x928c
   31880:	movt	sl, #5
   31884:	str	r3, [sp, #12]
   31888:	mov	r7, #100	; 0x64
   3188c:	mov	r5, #0
   31890:	b	318d4 <__flatcc_fb_clear_parser@@Base+0x7e8>
   31894:	add	r1, r9, r1
   31898:	str	r4, [r8, r2, lsl #2]
   3189c:	ldr	lr, [r1, #204]	; 0xcc
   318a0:	cmp	lr, #0
   318a4:	bne	31964 <__flatcc_fb_clear_parser@@Base+0x878>
   318a8:	ldrh	r3, [r4, #16]
   318ac:	cmp	r3, #0
   318b0:	bne	320dc <__flatcc_fb_clear_parser@@Base+0xff0>
   318b4:	ldr	r4, [r4]
   318b8:	subs	r7, r7, #1
   318bc:	movne	ip, #1
   318c0:	moveq	ip, #0
   318c4:	cmp	r4, #0
   318c8:	moveq	ip, #0
   318cc:	cmp	ip, #0
   318d0:	beq	319dc <__flatcc_fb_clear_parser@@Base+0x8f0>
   318d4:	ldr	r3, [r4, #4]
   318d8:	ldr	r0, [r6, #412]	; 0x19c
   318dc:	ldm	r3, {r1, r2}
   318e0:	add	r0, r0, #16
   318e4:	bl	3dd50 <fb_name_table_find@@Base>
   318e8:	subs	ip, r0, #0
   318ec:	beq	31e08 <__flatcc_fb_clear_parser@@Base+0xd1c>
   318f0:	ldr	r2, [ip, #24]
   318f4:	cmp	r2, #0
   318f8:	beq	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   318fc:	mov	r3, #32
   31900:	asr	r3, r3, r2
   31904:	ands	ip, r3, #1
   31908:	beq	31de4 <__flatcc_fb_clear_parser@@Base+0xcf8>
   3190c:	ldr	ip, [r8, r2, lsl #2]
   31910:	mov	r3, #1
   31914:	lsl	r1, r2, #2
   31918:	orr	r5, r5, r3, lsl r2
   3191c:	uxth	r5, r5
   31920:	cmp	ip, #0
   31924:	beq	31894 <__flatcc_fb_clear_parser@@Base+0x7a8>
   31928:	mov	ip, #0
   3192c:	movw	r2, #37320	; 0x91c8
   31930:	movt	r2, #5
   31934:	mov	r3, ip
   31938:	ldr	r1, [r4, #4]
   3193c:	mov	r0, r6
   31940:	str	ip, [sp]
   31944:	str	ip, [sp, #4]
   31948:	bl	2c558 <__flatcc_error_report@@Base>
   3194c:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31950:	mov	r3, #0
   31954:	mov	r1, r3
   31958:	mov	r0, r3
   3195c:	mov	r2, r3
   31960:	b	31824 <__flatcc_fb_clear_parser@@Base+0x738>
   31964:	cmp	lr, #2
   31968:	bne	3199c <__flatcc_fb_clear_parser@@Base+0x8b0>
   3196c:	ldrh	r3, [r4, #16]
   31970:	cmp	r3, #2
   31974:	beq	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31978:	mov	r3, ip
   3197c:	movw	r2, #37400	; 0x9218
   31980:	movt	r2, #5
   31984:	mov	r0, r6
   31988:	ldr	r1, [r4, #4]
   3198c:	str	ip, [sp]
   31990:	str	ip, [sp, #4]
   31994:	bl	2c558 <__flatcc_error_report@@Base>
   31998:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   3199c:	cmp	lr, #5
   319a0:	beq	31eac <__flatcc_fb_clear_parser@@Base+0xdc0>
   319a4:	cmp	lr, #4
   319a8:	bne	31edc <__flatcc_fb_clear_parser@@Base+0xdf0>
   319ac:	ldrh	r3, [r4, #16]
   319b0:	sub	r3, r3, #4
   319b4:	cmp	r3, #1
   319b8:	bls	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   319bc:	mov	r3, ip
   319c0:	mov	r0, r6
   319c4:	ldr	r1, [r4, #4]
   319c8:	str	ip, [sp]
   319cc:	str	ip, [sp, #4]
   319d0:	ldr	r2, [sp, #12]
   319d4:	bl	2c558 <__flatcc_error_report@@Base>
   319d8:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   319dc:	cmp	r4, #0
   319e0:	and	r7, r5, #32
   319e4:	beq	31a08 <__flatcc_fb_clear_parser@@Base+0x91c>
   319e8:	movw	r2, #37560	; 0x92b8
   319ec:	movt	r2, #5
   319f0:	ldr	r1, [r4, #4]
   319f4:	mov	r3, ip
   319f8:	mov	r0, r6
   319fc:	str	ip, [sp]
   31a00:	str	ip, [sp, #4]
   31a04:	bl	2c558 <__flatcc_error_report@@Base>
   31a08:	cmp	r7, #0
   31a0c:	strh	r5, [fp, #92]	; 0x5c
   31a10:	ldr	r2, [fp, #40]	; 0x28
   31a14:	streq	r7, [sp, #20]
   31a18:	beq	31a30 <__flatcc_fb_clear_parser@@Base+0x944>
   31a1c:	mov	r0, #0
   31a20:	mov	r1, #0
   31a24:	mov	r3, #1
   31a28:	str	r3, [sp, #20]
   31a2c:	strd	r0, [sp, #48]	; 0x30
   31a30:	cmp	r2, #5
   31a34:	bne	31f40 <__flatcc_fb_clear_parser@@Base+0xe54>
   31a38:	mov	r2, #0
   31a3c:	mov	r3, #6
   31a40:	add	r7, sp, #48	; 0x30
   31a44:	strb	r2, [sp, #48]	; 0x30
   31a48:	strh	r3, [sp, #56]	; 0x38
   31a4c:	ldr	r5, [fp, #20]
   31a50:	ldrd	r0, [r7, #8]
   31a54:	ldrd	r2, [sp, #48]	; 0x30
   31a58:	cmp	r5, #0
   31a5c:	strd	r2, [sp, #64]	; 0x40
   31a60:	strd	r0, [sp, #72]	; 0x48
   31a64:	beq	31cac <__flatcc_fb_clear_parser@@Base+0xbc0>
   31a68:	movw	r3, #38432	; 0x9620
   31a6c:	movt	r3, #5
   31a70:	str	fp, [sp, #12]
   31a74:	add	r8, fp, #56	; 0x38
   31a78:	mov	r4, #1
   31a7c:	str	r3, [sp, #28]
   31a80:	movw	r3, #36144	; 0x8d30
   31a84:	movt	r3, #5
   31a88:	str	r3, [sp, #24]
   31a8c:	movw	r3, #38024	; 0x9488
   31a90:	movt	r3, #5
   31a94:	str	r3, [sp, #44]	; 0x2c
   31a98:	add	r3, r6, #352	; 0x160
   31a9c:	str	r3, [sp, #32]
   31aa0:	b	31af4 <__flatcc_fb_clear_parser@@Base+0xa08>
   31aa4:	ldr	r3, [r0, #4]
   31aa8:	add	r2, r6, #68	; 0x44
   31aac:	mov	ip, #0
   31ab0:	mov	r0, r6
   31ab4:	ldr	r1, [r5, #4]
   31ab8:	str	ip, [sp]
   31abc:	str	ip, [sp, #4]
   31ac0:	cmp	r3, r2
   31ac4:	movweq	r2, #37644	; 0x930c
   31ac8:	movwne	r2, #37676	; 0x932c
   31acc:	moveq	r3, ip
   31ad0:	movteq	r2, #5
   31ad4:	movtne	r2, #5
   31ad8:	bl	2c558 <__flatcc_error_report@@Base>
   31adc:	mov	r3, #1
   31ae0:	strh	r3, [r5, #24]
   31ae4:	ldr	r5, [r5]
   31ae8:	mov	r4, #0
   31aec:	cmp	r5, r4
   31af0:	beq	31cac <__flatcc_fb_clear_parser@@Base+0xbc0>
   31af4:	mov	r2, #1
   31af8:	mov	r1, r5
   31afc:	mov	r0, r8
   31b00:	bl	29044 <fb_symbol_table_insert_item@@Base>
   31b04:	cmp	r0, #0
   31b08:	bne	31aa4 <__flatcc_fb_clear_parser@@Base+0x9b8>
   31b0c:	ldrh	r3, [r5, #8]
   31b10:	cmp	r3, #5
   31b14:	bne	32284 <__flatcc_fb_clear_parser@@Base+0x1198>
   31b18:	ldr	r0, [r5, #64]	; 0x40
   31b1c:	cmp	r0, #0
   31b20:	bne	3248c <__flatcc_fb_clear_parser@@Base+0x13a0>
   31b24:	ldr	r3, [sp, #16]
   31b28:	cmp	r3, #4
   31b2c:	beq	31cec <__flatcc_fb_clear_parser@@Base+0xc00>
   31b30:	ldrh	r3, [r5, #56]	; 0x38
   31b34:	eor	r9, r4, #1
   31b38:	cmp	r3, #0
   31b3c:	moveq	r2, r9
   31b40:	movne	r2, #0
   31b44:	cmp	r2, #0
   31b48:	bne	31d50 <__flatcc_fb_clear_parser@@Base+0xc64>
   31b4c:	ldr	r2, [sp, #20]
   31b50:	cmp	r2, #0
   31b54:	beq	31ccc <__flatcc_fb_clear_parser@@Base+0xbe0>
   31b58:	cmp	r3, #0
   31b5c:	beq	31da0 <__flatcc_fb_clear_parser@@Base+0xcb4>
   31b60:	cmp	r3, #5
   31b64:	bne	323ec <__flatcc_fb_clear_parser@@Base+0x1300>
   31b68:	ldr	r1, [sp, #12]
   31b6c:	ldrd	r2, [r5, #48]	; 0x30
   31b70:	ldr	lr, [r1, #40]	; 0x28
   31b74:	ldrd	r0, [r5, #56]	; 0x38
   31b78:	strd	r2, [r7]
   31b7c:	strd	r0, [r7, #8]
   31b80:	ldr	r3, [sp, #24]
   31b84:	ldrd	sl, [sp, #48]	; 0x30
   31b88:	add	r3, r3, lr, lsl #2
   31b8c:	ldr	r2, [r3, #128]	; 0x80
   31b90:	mov	r3, #0
   31b94:	cmp	fp, r3
   31b98:	lsl	r2, r2, #3
   31b9c:	cmpeq	sl, r2
   31ba0:	bcs	32394 <__flatcc_fb_clear_parser@@Base+0x12a8>
   31ba4:	mov	r3, #1
   31ba8:	sub	ip, sl, #32
   31bac:	lsl	ip, r3, ip
   31bb0:	rsb	r1, sl, #32
   31bb4:	mov	r2, lr
   31bb8:	lsl	lr, r3, sl
   31bbc:	mov	r0, #5
   31bc0:	add	r4, r5, #48	; 0x30
   31bc4:	orr	ip, ip, r3, lsr r1
   31bc8:	mov	r3, r4
   31bcc:	mov	r1, r5
   31bd0:	mov	sl, #0
   31bd4:	str	lr, [r5, #48]	; 0x30
   31bd8:	str	ip, [r5, #52]	; 0x34
   31bdc:	strh	r0, [r5, #56]	; 0x38
   31be0:	mov	r0, r6
   31be4:	bl	35fe4 <__flatcc_fb_coerce_scalar_type@@Base>
   31be8:	cmp	r0, sl
   31bec:	bne	3236c <__flatcc_fb_clear_parser@@Base+0x1280>
   31bf0:	cmp	r9, #0
   31bf4:	beq	31c2c <__flatcc_fb_clear_parser@@Base+0xb40>
   31bf8:	ldr	r3, [r6, #180]	; 0xb4
   31bfc:	cmp	r3, #0
   31c00:	beq	31c2c <__flatcc_fb_clear_parser@@Base+0xb40>
   31c04:	ldrh	r3, [sp, #56]	; 0x38
   31c08:	cmp	r3, #5
   31c0c:	beq	31e2c <__flatcc_fb_clear_parser@@Base+0xd40>
   31c10:	cmp	r3, #4
   31c14:	bne	31e78 <__flatcc_fb_clear_parser@@Base+0xd8c>
   31c18:	ldrd	r2, [sp, #48]	; 0x30
   31c1c:	ldrd	r0, [sp, #64]	; 0x40
   31c20:	cmp	r0, r2
   31c24:	sbcs	r3, r1, r3
   31c28:	bge	31e40 <__flatcc_fb_clear_parser@@Base+0xd54>
   31c2c:	ldrd	sl, [r7]
   31c30:	mov	r1, r4
   31c34:	mov	r2, #1
   31c38:	ldr	r3, [sp, #12]
   31c3c:	strd	sl, [sp, #64]	; 0x40
   31c40:	ldrd	sl, [r7, #8]
   31c44:	add	r0, r3, #72	; 0x48
   31c48:	strd	sl, [sp, #72]	; 0x48
   31c4c:	bl	3e808 <fb_value_set_insert_item@@Base>
   31c50:	cmp	r0, #0
   31c54:	beq	31c70 <__flatcc_fb_clear_parser@@Base+0xb84>
   31c58:	ldr	r3, [sp, #16]
   31c5c:	cmp	r3, #4
   31c60:	beq	32338 <__flatcc_fb_clear_parser@@Base+0x124c>
   31c64:	ldrh	r3, [r5, #10]
   31c68:	orr	r3, r3, #4
   31c6c:	strh	r3, [r5, #10]
   31c70:	ldr	r3, [r5, #64]	; 0x40
   31c74:	cmp	r3, #0
   31c78:	beq	31ae4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   31c7c:	mov	ip, #0
   31c80:	mov	r0, r6
   31c84:	ldr	r1, [r5, #4]
   31c88:	mov	r3, ip
   31c8c:	mov	r4, #0
   31c90:	str	ip, [sp]
   31c94:	str	ip, [sp, #4]
   31c98:	ldr	r2, [sp, #28]
   31c9c:	bl	2c558 <__flatcc_error_report@@Base>
   31ca0:	ldr	r5, [r5]
   31ca4:	cmp	r5, r4
   31ca8:	bne	31af4 <__flatcc_fb_clear_parser@@Base+0xa08>
   31cac:	mov	r0, #0
   31cb0:	add	sp, sp, #132	; 0x84
   31cb4:	ldrd	r4, [sp]
   31cb8:	ldrd	r6, [sp, #8]
   31cbc:	ldrd	r8, [sp, #16]
   31cc0:	ldrd	sl, [sp, #24]
   31cc4:	add	sp, sp, #32
   31cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   31ccc:	cmp	r3, #0
   31cd0:	add	r4, r5, #48	; 0x30
   31cd4:	bne	31dac <__flatcc_fb_clear_parser@@Base+0xcc0>
   31cd8:	ldrd	r2, [r7]
   31cdc:	ldrd	r0, [r7, #8]
   31ce0:	strd	r2, [r4]
   31ce4:	strd	r0, [r4, #8]
   31ce8:	b	31bf0 <__flatcc_fb_clear_parser@@Base+0xb04>
   31cec:	ldr	r1, [r5, #4]
   31cf0:	add	r3, r6, #68	; 0x44
   31cf4:	cmp	r1, r3
   31cf8:	strheq	r0, [r5, #24]
   31cfc:	beq	31b30 <__flatcc_fb_clear_parser@@Base+0xa44>
   31d00:	ldrh	r3, [r5, #24]
   31d04:	cmp	r3, #10
   31d08:	moveq	r2, #0
   31d0c:	moveq	r3, #0
   31d10:	strdeq	r2, [r5, #88]	; 0x58
   31d14:	beq	31b30 <__flatcc_fb_clear_parser@@Base+0xa44>
   31d18:	cmp	r3, #12
   31d1c:	beq	31f9c <__flatcc_fb_clear_parser@@Base+0xeb0>
   31d20:	cmp	r3, #1
   31d24:	beq	31ae4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   31d28:	mov	r3, r0
   31d2c:	movw	r2, #37772	; 0x938c
   31d30:	movt	r2, #5
   31d34:	str	r0, [sp]
   31d38:	str	r0, [sp, #4]
   31d3c:	mov	r0, r6
   31d40:	bl	2c558 <__flatcc_error_report@@Base>
   31d44:	mov	r3, #1
   31d48:	strh	r3, [r5, #24]
   31d4c:	b	31ae4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   31d50:	ldrh	r3, [sp, #56]	; 0x38
   31d54:	cmp	r3, #5
   31d58:	beq	31f14 <__flatcc_fb_clear_parser@@Base+0xe28>
   31d5c:	cmp	r3, #4
   31d60:	beq	32074 <__flatcc_fb_clear_parser@@Base+0xf88>
   31d64:	cmp	r3, #6
   31d68:	beq	31d80 <__flatcc_fb_clear_parser@@Base+0xc94>
   31d6c:	ldr	r3, [sp, #20]
   31d70:	cmp	r3, #0
   31d74:	bne	31da0 <__flatcc_fb_clear_parser@@Base+0xcb4>
   31d78:	add	r4, r5, #48	; 0x30
   31d7c:	b	31cd8 <__flatcc_fb_clear_parser@@Base+0xbec>
   31d80:	ldrb	r4, [sp, #48]	; 0x30
   31d84:	cmp	r4, #1
   31d88:	beq	323c0 <__flatcc_fb_clear_parser@@Base+0x12d4>
   31d8c:	ldr	r2, [sp, #20]
   31d90:	mov	r3, #1
   31d94:	strb	r3, [sp, #48]	; 0x30
   31d98:	cmp	r2, #0
   31d9c:	beq	31d78 <__flatcc_fb_clear_parser@@Base+0xc8c>
   31da0:	ldr	r3, [sp, #12]
   31da4:	ldr	lr, [r3, #40]	; 0x28
   31da8:	b	31b80 <__flatcc_fb_clear_parser@@Base+0xa94>
   31dac:	ldrd	sl, [r5, #48]	; 0x30
   31db0:	mov	r3, r7
   31db4:	mov	r1, r5
   31db8:	mov	r0, r6
   31dbc:	ldr	r2, [sp, #12]
   31dc0:	strd	sl, [r7]
   31dc4:	ldrd	sl, [r4, #8]
   31dc8:	ldr	r2, [r2, #40]	; 0x28
   31dcc:	strd	sl, [r7, #8]
   31dd0:	bl	35fe4 <__flatcc_fb_coerce_scalar_type@@Base>
   31dd4:	cmp	r0, #0
   31dd8:	beq	31cd8 <__flatcc_fb_clear_parser@@Base+0xbec>
   31ddc:	mvn	r0, #0
   31de0:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   31de4:	mov	r3, ip
   31de8:	movw	r2, #37272	; 0x9198
   31dec:	movt	r2, #5
   31df0:	mov	r0, r6
   31df4:	ldr	r1, [r4, #4]
   31df8:	str	ip, [sp]
   31dfc:	str	ip, [sp, #4]
   31e00:	bl	2c558 <__flatcc_error_report@@Base>
   31e04:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31e08:	mov	r3, ip
   31e0c:	movw	r2, #37240	; 0x9178
   31e10:	movt	r2, #5
   31e14:	mov	r0, r6
   31e18:	ldr	r1, [r4, #4]
   31e1c:	str	ip, [sp]
   31e20:	str	ip, [sp, #4]
   31e24:	bl	2c558 <__flatcc_error_report@@Base>
   31e28:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31e2c:	ldrd	r0, [sp, #48]	; 0x30
   31e30:	ldrd	r2, [sp, #64]	; 0x40
   31e34:	cmp	r1, r3
   31e38:	cmpeq	r0, r2
   31e3c:	bhi	31c2c <__flatcc_fb_clear_parser@@Base+0xb40>
   31e40:	ldr	r3, [sp, #16]
   31e44:	mov	ip, #0
   31e48:	mov	r0, r6
   31e4c:	ldr	r1, [r5, #4]
   31e50:	cmp	r3, #4
   31e54:	bne	31e64 <__flatcc_fb_clear_parser@@Base+0xd78>
   31e58:	ldrd	r2, [sp, #64]	; 0x40
   31e5c:	orrs	r3, r2, r3
   31e60:	beq	32418 <__flatcc_fb_clear_parser@@Base+0x132c>
   31e64:	movw	r2, #38252	; 0x956c
   31e68:	movt	r2, #5
   31e6c:	str	ip, [sp]
   31e70:	mov	r3, ip
   31e74:	b	32354 <__flatcc_fb_clear_parser@@Base+0x1268>
   31e78:	cmp	r3, #6
   31e7c:	bne	31c2c <__flatcc_fb_clear_parser@@Base+0xb40>
   31e80:	ldrb	r2, [sp, #48]	; 0x30
   31e84:	ldrb	r3, [sp, #64]	; 0x40
   31e88:	cmp	r2, r3
   31e8c:	bhi	31c2c <__flatcc_fb_clear_parser@@Base+0xb40>
   31e90:	mov	ip, #0
   31e94:	movw	r2, #38292	; 0x9594
   31e98:	movt	r2, #5
   31e9c:	mov	r0, r6
   31ea0:	ldr	r1, [r5, #4]
   31ea4:	mov	r3, ip
   31ea8:	b	32350 <__flatcc_fb_clear_parser@@Base+0x1264>
   31eac:	ldrh	r3, [r4, #16]
   31eb0:	cmp	r3, #5
   31eb4:	beq	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31eb8:	mov	r3, ip
   31ebc:	movw	r2, #37436	; 0x923c
   31ec0:	movt	r2, #5
   31ec4:	mov	r0, r6
   31ec8:	ldr	r1, [r4, #4]
   31ecc:	str	ip, [sp]
   31ed0:	str	ip, [sp, #4]
   31ed4:	bl	2c558 <__flatcc_error_report@@Base>
   31ed8:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31edc:	cmp	lr, #6
   31ee0:	bne	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31ee4:	ldrh	r3, [r4, #16]
   31ee8:	cmp	r3, #6
   31eec:	beq	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31ef0:	mov	ip, #0
   31ef4:	mov	r2, sl
   31ef8:	ldr	r1, [r4, #4]
   31efc:	mov	r3, ip
   31f00:	mov	r0, r6
   31f04:	str	ip, [sp]
   31f08:	str	ip, [sp, #4]
   31f0c:	bl	2c558 <__flatcc_error_report@@Base>
   31f10:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   31f14:	ldr	r3, [sp, #12]
   31f18:	ldr	lr, [r3, #40]	; 0x28
   31f1c:	cmp	lr, #6
   31f20:	beq	32238 <__flatcc_fb_clear_parser@@Base+0x114c>
   31f24:	ldrd	sl, [sp, #48]	; 0x30
   31f28:	mov	r3, #0
   31f2c:	adds	r0, sl, #1
   31f30:	adc	r2, fp, #0
   31f34:	str	r0, [sp, #48]	; 0x30
   31f38:	str	r2, [sp, #52]	; 0x34
   31f3c:	b	31b4c <__flatcc_fb_clear_parser@@Base+0xa60>
   31f40:	mov	r0, #0
   31f44:	mov	r1, #0
   31f48:	mov	ip, #4
   31f4c:	add	r7, sp, #48	; 0x30
   31f50:	mov	r3, r7
   31f54:	strd	r0, [sp, #48]	; 0x30
   31f58:	mov	r1, fp
   31f5c:	mov	r0, r6
   31f60:	strh	ip, [sp, #56]	; 0x38
   31f64:	bl	35fe4 <__flatcc_fb_coerce_scalar_type@@Base>
   31f68:	cmp	r0, #0
   31f6c:	beq	31a4c <__flatcc_fb_clear_parser@@Base+0x960>
   31f70:	mov	ip, #0
   31f74:	mov	r0, r6
   31f78:	mov	r3, ip
   31f7c:	mov	r1, ip
   31f80:	movw	r2, #37580	; 0x92cc
   31f84:	movt	r2, #5
   31f88:	str	ip, [sp]
   31f8c:	str	ip, [sp, #4]
   31f90:	bl	2c558 <__flatcc_error_report@@Base>
   31f94:	mvn	r0, #0
   31f98:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   31f9c:	ldr	lr, [r5, #16]
   31fa0:	ldr	fp, [sp, #12]
   31fa4:	cmp	lr, #0
   31fa8:	ldr	r9, [fp, #12]
   31fac:	beq	32178 <__flatcc_fb_clear_parser@@Base+0x108c>
   31fb0:	mov	r2, r0
   31fb4:	mov	r1, lr
   31fb8:	b	31fc4 <__flatcc_fb_clear_parser@@Base+0xed8>
   31fbc:	mov	r2, ip
   31fc0:	mov	r1, r3
   31fc4:	ldr	r3, [r1]
   31fc8:	add	ip, r2, #1
   31fcc:	cmp	r3, #0
   31fd0:	bne	31fbc <__flatcc_fb_clear_parser@@Base+0xed0>
   31fd4:	sub	r3, ip, #1
   31fd8:	cmp	r9, #0
   31fdc:	str	fp, [sp, #12]
   31fe0:	clz	r3, r3
   31fe4:	mov	sl, r1
   31fe8:	lsr	r3, r3, #5
   31fec:	moveq	r3, #0
   31ff0:	cmp	r3, #0
   31ff4:	beq	32100 <__flatcc_fb_clear_parser@@Base+0x1014>
   31ff8:	add	r3, r6, #524	; 0x20c
   31ffc:	str	r3, [sp, #36]	; 0x24
   32000:	str	r4, [sp, #40]	; 0x28
   32004:	ldr	r3, [sl, #4]
   32008:	add	r0, r9, #4
   3200c:	ldm	r3, {r1, r2}
   32010:	bl	29284 <fb_symbol_table_find@@Base>
   32014:	subs	r3, r0, #0
   32018:	beq	3219c <__flatcc_fb_clear_parser@@Base+0x10b0>
   3201c:	ldrh	r2, [r3, #8]
   32020:	cmp	r2, #4
   32024:	bhi	3219c <__flatcc_fb_clear_parser@@Base+0x10b0>
   32028:	ldr	r1, [r3, #16]
   3202c:	str	r3, [sp, #12]
   32030:	ldr	r0, [sp, #36]	; 0x24
   32034:	bl	287a4 <ptr_set_find_item@@Base>
   32038:	cmp	r0, #0
   3203c:	ldr	r3, [sp, #12]
   32040:	beq	3219c <__flatcc_fb_clear_parser@@Base+0x10b0>
   32044:	ldr	r4, [sp, #40]	; 0x28
   32048:	str	fp, [sp, #12]
   3204c:	ldrh	r2, [r3, #8]
   32050:	cmp	r2, #1
   32054:	bhi	32308 <__flatcc_fb_clear_parser@@Base+0x121c>
   32058:	mov	r2, #14
   3205c:	mov	r0, #0
   32060:	str	r3, [r5, #16]
   32064:	mov	r1, #0
   32068:	strh	r2, [r5, #24]
   3206c:	strd	r0, [r5, #88]	; 0x58
   32070:	b	31b30 <__flatcc_fb_clear_parser@@Base+0xa44>
   32074:	ldr	r3, [sp, #12]
   32078:	ldrd	r0, [sp, #48]	; 0x30
   3207c:	ldr	lr, [r3, #40]	; 0x28
   32080:	cmp	lr, #6
   32084:	beq	322b0 <__flatcc_fb_clear_parser@@Base+0x11c4>
   32088:	adds	r2, r0, #1
   3208c:	adc	r3, r1, #0
   32090:	ldr	r1, [sp, #20]
   32094:	strd	r2, [sp, #48]	; 0x30
   32098:	cmp	r1, #0
   3209c:	bne	31b80 <__flatcc_fb_clear_parser@@Base+0xa94>
   320a0:	b	31d78 <__flatcc_fb_clear_parser@@Base+0xc8c>
   320a4:	ldrh	r3, [r1, #48]	; 0x30
   320a8:	cmp	r3, #0
   320ac:	bne	32450 <__flatcc_fb_clear_parser@@Base+0x1364>
   320b0:	ldr	ip, [sp, #16]
   320b4:	mov	r2, #8
   320b8:	mov	r0, #1
   320bc:	mov	r1, #0
   320c0:	mov	r3, #1
   320c4:	str	ip, [fp, #40]	; 0x28
   320c8:	strh	r2, [fp, #48]	; 0x30
   320cc:	mov	r2, ip
   320d0:	strh	r3, [fp, #104]	; 0x68
   320d4:	strd	r0, [fp, #112]	; 0x70
   320d8:	b	31834 <__flatcc_fb_clear_parser@@Base+0x748>
   320dc:	mov	r3, lr
   320e0:	movw	r2, #37360	; 0x91f0
   320e4:	movt	r2, #5
   320e8:	mov	r0, r6
   320ec:	ldr	r1, [r4, #4]
   320f0:	str	lr, [sp]
   320f4:	str	lr, [sp, #4]
   320f8:	bl	2c558 <__flatcc_error_report@@Base>
   320fc:	b	318b4 <__flatcc_fb_clear_parser@@Base+0x7c8>
   32100:	cmp	ip, #1
   32104:	moveq	r1, r3
   32108:	ldr	r3, [sp, #32]
   3210c:	movne	r1, lr
   32110:	cmp	r3, #0
   32114:	beq	32178 <__flatcc_fb_clear_parser@@Base+0x108c>
   32118:	ldr	r0, [r6, #412]	; 0x19c
   3211c:	cmp	r0, #0
   32120:	beq	32178 <__flatcc_fb_clear_parser@@Base+0x108c>
   32124:	rsb	r2, r2, #0
   32128:	bl	2a1ec <fb_scope_table_find@@Base>
   3212c:	cmp	r0, #0
   32130:	beq	32174 <__flatcc_fb_clear_parser@@Base+0x1088>
   32134:	ldr	r3, [sl, #4]
   32138:	add	r0, r0, #4
   3213c:	ldm	r3, {r1, r2}
   32140:	bl	29284 <fb_symbol_table_find@@Base>
   32144:	subs	r3, r0, #0
   32148:	beq	32174 <__flatcc_fb_clear_parser@@Base+0x1088>
   3214c:	ldrh	r2, [r3, #8]
   32150:	cmp	r2, #4
   32154:	bhi	32174 <__flatcc_fb_clear_parser@@Base+0x1088>
   32158:	add	r0, r6, #524	; 0x20c
   3215c:	ldr	r1, [r3, #16]
   32160:	str	r3, [sp, #36]	; 0x24
   32164:	bl	287a4 <ptr_set_find_item@@Base>
   32168:	cmp	r0, #0
   3216c:	ldr	r3, [sp, #36]	; 0x24
   32170:	bne	3204c <__flatcc_fb_clear_parser@@Base+0xf60>
   32174:	ldr	lr, [r5, #16]
   32178:	mov	r3, r5
   3217c:	mov	r1, lr
   32180:	movw	r2, #37844	; 0x93d4
   32184:	movt	r2, #5
   32188:	mov	r0, r6
   3218c:	bl	2dde4 <error_ref_sym@@Base>
   32190:	mov	r3, #1
   32194:	strh	r3, [r5, #24]
   32198:	b	31ae4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   3219c:	ldr	r2, [r9]
   321a0:	cmp	r2, #0
   321a4:	beq	32224 <__flatcc_fb_clear_parser@@Base+0x1138>
   321a8:	mov	r3, #0
   321ac:	b	321b4 <__flatcc_fb_clear_parser@@Base+0x10c8>
   321b0:	mov	r3, r1
   321b4:	ldr	r2, [r2]
   321b8:	add	r1, r3, #1
   321bc:	cmp	r2, #0
   321c0:	bne	321b0 <__flatcc_fb_clear_parser@@Base+0x10c4>
   321c4:	ldr	r2, [sp, #32]
   321c8:	cmp	r2, #0
   321cc:	beq	32224 <__flatcc_fb_clear_parser@@Base+0x1138>
   321d0:	rsb	r4, r3, #0
   321d4:	ldr	r0, [r6, #412]	; 0x19c
   321d8:	b	32200 <__flatcc_fb_clear_parser@@Base+0x1114>
   321dc:	cmp	r0, #0
   321e0:	beq	321fc <__flatcc_fb_clear_parser@@Base+0x1110>
   321e4:	mov	r2, r4
   321e8:	ldr	r1, [r9]
   321ec:	bl	2a1ec <fb_scope_table_find@@Base>
   321f0:	cmp	r0, #0
   321f4:	bne	32230 <__flatcc_fb_clear_parser@@Base+0x1144>
   321f8:	ldr	r0, [r6, #412]	; 0x19c
   321fc:	add	r4, r4, #1
   32200:	cmp	r4, #0
   32204:	bne	321dc <__flatcc_fb_clear_parser@@Base+0x10f0>
   32208:	cmp	r0, #0
   3220c:	beq	32224 <__flatcc_fb_clear_parser@@Base+0x1138>
   32210:	mov	r2, r4
   32214:	mov	r1, r4
   32218:	bl	2a1ec <fb_scope_table_find@@Base>
   3221c:	subs	r9, r0, #0
   32220:	bne	32004 <__flatcc_fb_clear_parser@@Base+0xf18>
   32224:	str	fp, [sp, #12]
   32228:	ldr	lr, [r5, #16]
   3222c:	b	32178 <__flatcc_fb_clear_parser@@Base+0x108c>
   32230:	mov	r9, r0
   32234:	b	32004 <__flatcc_fb_clear_parser@@Base+0xf18>
   32238:	ldrd	sl, [sp, #48]	; 0x30
   3223c:	mvn	r3, #0
   32240:	mvn	r2, #0
   32244:	cmp	fp, r3
   32248:	cmpeq	sl, r2
   3224c:	movne	r3, #0
   32250:	bne	31f2c <__flatcc_fb_clear_parser@@Base+0xe40>
   32254:	mov	ip, #0
   32258:	movw	r2, #37964	; 0x944c
   3225c:	movt	r2, #5
   32260:	mov	r3, ip
   32264:	ldr	r1, [r5, #4]
   32268:	mov	r0, r6
   3226c:	str	ip, [sp]
   32270:	str	ip, [sp, #4]
   32274:	bl	2c558 <__flatcc_error_report@@Base>
   32278:	ldrh	r3, [r5, #56]	; 0x38
   3227c:	ldrd	sl, [sp, #48]	; 0x30
   32280:	b	31f2c <__flatcc_fb_clear_parser@@Base+0xe40>
   32284:	mov	ip, r0
   32288:	mov	r3, r0
   3228c:	ldr	r1, [r5, #4]
   32290:	mov	r0, r6
   32294:	movw	r2, #37704	; 0x9348
   32298:	movt	r2, #5
   3229c:	str	ip, [sp]
   322a0:	str	ip, [sp, #4]
   322a4:	bl	2c558 <__flatcc_error_report@@Base>
   322a8:	mvn	r0, #0
   322ac:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   322b0:	mvn	r3, #-2147483648	; 0x80000000
   322b4:	mvn	r2, #0
   322b8:	cmp	r1, r3
   322bc:	cmpeq	r0, r2
   322c0:	bne	32088 <__flatcc_fb_clear_parser@@Base+0xf9c>
   322c4:	mov	ip, #0
   322c8:	movw	r2, #37996	; 0x946c
   322cc:	movt	r2, #5
   322d0:	mov	r3, ip
   322d4:	ldr	r1, [r5, #4]
   322d8:	mov	r0, r6
   322dc:	str	ip, [sp]
   322e0:	str	ip, [sp, #4]
   322e4:	bl	2c558 <__flatcc_error_report@@Base>
   322e8:	ldr	r2, [sp, #48]	; 0x30
   322ec:	ldr	r1, [sp, #52]	; 0x34
   322f0:	ldrh	r3, [r5, #56]	; 0x38
   322f4:	adds	r2, r2, #1
   322f8:	adc	r1, r1, #0
   322fc:	str	r2, [sp, #48]	; 0x30
   32300:	str	r1, [sp, #52]	; 0x34
   32304:	b	31b4c <__flatcc_fb_clear_parser@@Base+0xa60>
   32308:	mov	ip, #0
   3230c:	movw	r2, #37892	; 0x9404
   32310:	movt	r2, #5
   32314:	mov	r0, r6
   32318:	ldr	r3, [r3, #4]
   3231c:	ldr	r1, [r5, #4]
   32320:	str	ip, [sp]
   32324:	str	ip, [sp, #4]
   32328:	bl	2c558 <__flatcc_error_report@@Base>
   3232c:	mov	r3, #1
   32330:	strh	r3, [r5, #24]
   32334:	b	31ae4 <__flatcc_fb_clear_parser@@Base+0x9f8>
   32338:	ldr	r1, [r5, #4]
   3233c:	mov	ip, #0
   32340:	movw	r2, #38356	; 0x95d4
   32344:	movt	r2, #5
   32348:	mov	r0, r6
   3234c:	mov	r3, ip
   32350:	str	ip, [sp]
   32354:	str	ip, [sp, #4]
   32358:	bl	2c558 <__flatcc_error_report@@Base>
   3235c:	mov	r3, #1
   32360:	mvn	r0, #0
   32364:	strh	r3, [r5, #56]	; 0x38
   32368:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   3236c:	mov	r0, r6
   32370:	mov	r3, sl
   32374:	ldr	r1, [r5, #4]
   32378:	movw	r2, #38132	; 0x94f4
   3237c:	movt	r2, #5
   32380:	str	sl, [sp]
   32384:	str	sl, [sp, #4]
   32388:	bl	2c558 <__flatcc_error_report@@Base>
   3238c:	mvn	r0, #0
   32390:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   32394:	mov	ip, #0
   32398:	mov	r0, r6
   3239c:	ldr	r1, [r5, #4]
   323a0:	mov	r3, ip
   323a4:	movw	r2, #38132	; 0x94f4
   323a8:	movt	r2, #5
   323ac:	str	ip, [sp]
   323b0:	str	ip, [sp, #4]
   323b4:	bl	2c558 <__flatcc_error_report@@Base>
   323b8:	mvn	r0, #0
   323bc:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   323c0:	mov	ip, #0
   323c4:	mov	r0, r6
   323c8:	ldr	r1, [r5, #4]
   323cc:	mov	r3, ip
   323d0:	str	ip, [sp]
   323d4:	str	ip, [sp, #4]
   323d8:	ldr	r2, [sp, #44]	; 0x2c
   323dc:	bl	2c558 <__flatcc_error_report@@Base>
   323e0:	ldrh	r3, [r5, #56]	; 0x38
   323e4:	strb	r4, [sp, #48]	; 0x30
   323e8:	b	31b4c <__flatcc_fb_clear_parser@@Base+0xa60>
   323ec:	mov	ip, #0
   323f0:	mov	r0, r6
   323f4:	ldr	r1, [r5, #4]
   323f8:	mov	r3, ip
   323fc:	movw	r2, #38072	; 0x94b8
   32400:	movt	r2, #5
   32404:	str	ip, [sp]
   32408:	str	ip, [sp, #4]
   3240c:	bl	2c558 <__flatcc_error_report@@Base>
   32410:	mvn	r0, #0
   32414:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   32418:	movw	r2, #38184	; 0x9528
   3241c:	movt	r2, #5
   32420:	str	ip, [sp]
   32424:	mov	r3, ip
   32428:	b	32354 <__flatcc_fb_clear_parser@@Base+0x1268>
   3242c:	movw	r2, #37124	; 0x9104
   32430:	movt	r2, #5
   32434:	mov	ip, #0
   32438:	mov	r3, ip
   3243c:	ldr	r1, [fp, #4]
   32440:	str	ip, [sp]
   32444:	str	ip, [sp, #4]
   32448:	bl	2c558 <__flatcc_error_report@@Base>
   3244c:	b	31ddc <__flatcc_fb_clear_parser@@Base+0xcf0>
   32450:	movw	r2, #37176	; 0x9138
   32454:	movt	r2, #5
   32458:	mov	ip, #0
   3245c:	b	32438 <__flatcc_fb_clear_parser@@Base+0x134c>
   32460:	mov	r1, #1
   32464:	str	r2, [sp]
   32468:	mov	r3, r2
   3246c:	str	r2, [sp, #4]
   32470:	movw	r2, #37100	; 0x90ec
   32474:	movt	r2, #5
   32478:	strh	r1, [fp, #48]	; 0x30
   3247c:	ldr	r1, [fp, #4]
   32480:	bl	2c558 <__flatcc_error_report@@Base>
   32484:	mvn	r0, #0
   32488:	b	31cb0 <__flatcc_fb_clear_parser@@Base+0xbc4>
   3248c:	movw	r1, #36548	; 0x8ec4
   32490:	movt	r1, #5
   32494:	ldr	r3, [pc, #40]	; 324c4 <__flatcc_fb_clear_parser@@Base+0x13d8>
   32498:	movw	r0, #37748	; 0x9374
   3249c:	movt	r0, #5
   324a0:	movw	r2, #1315	; 0x523
   324a4:	bl	14120 <__assert_fail@plt>
   324a8:	movw	r1, #36548	; 0x8ec4
   324ac:	movt	r1, #5
   324b0:	ldr	r3, [pc, #12]	; 324c4 <__flatcc_fb_clear_parser@@Base+0x13d8>
   324b4:	movw	r0, #37068	; 0x90cc
   324b8:	movt	r0, #5
   324bc:	movw	r2, #1229	; 0x4cd
   324c0:	bl	14120 <__assert_fail@plt>
   324c4:	andeq	r8, r5, ip, ror #27
   324c8:	ldrh	r3, [r1, #8]
   324cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   324d0:	strd	r6, [sp, #8]
   324d4:	strd	r8, [sp, #16]
   324d8:	strd	sl, [sp, #24]
   324dc:	str	lr, [sp, #32]
   324e0:	sub	sp, sp, #252	; 0xfc
   324e4:	cmp	r3, #0
   324e8:	str	r1, [sp, #40]	; 0x28
   324ec:	bne	34224 <__flatcc_fb_clear_parser@@Base+0x3138>
   324f0:	ldr	r3, [sp, #40]	; 0x28
   324f4:	ldrh	r5, [r3, #48]	; 0x30
   324f8:	cmp	r5, #0
   324fc:	bne	34240 <__flatcc_fb_clear_parser@@Base+0x3154>
   32500:	ldr	r4, [r3, #28]
   32504:	mov	r2, #0
   32508:	mov	r3, #0
   3250c:	add	r6, sp, #100	; 0x64
   32510:	mov	fp, r0
   32514:	strd	r2, [sp, #100]	; 0x64
   32518:	strd	r2, [r6, #8]
   3251c:	strd	r2, [r6, #16]
   32520:	cmp	r4, #0
   32524:	strd	r2, [r6, #24]
   32528:	strd	r2, [r6, #32]
   3252c:	strd	r2, [r6, #40]	; 0x28
   32530:	beq	33e88 <__flatcc_fb_clear_parser@@Base+0x2d9c>
   32534:	movw	r7, #36144	; 0x8d30
   32538:	movt	r7, #5
   3253c:	movw	r8, #37516	; 0x928c
   32540:	movt	r8, #5
   32544:	movw	r9, #37480	; 0x9268
   32548:	movt	r9, #5
   3254c:	mov	sl, #100	; 0x64
   32550:	b	32594 <__flatcc_fb_clear_parser@@Base+0x14a8>
   32554:	add	r1, r7, r1
   32558:	str	r4, [r6, r2, lsl #2]
   3255c:	ldr	lr, [r1, #204]	; 0xcc
   32560:	cmp	lr, #0
   32564:	bne	32610 <__flatcc_fb_clear_parser@@Base+0x1524>
   32568:	ldrh	r3, [r4, #16]
   3256c:	cmp	r3, #0
   32570:	bne	33a60 <__flatcc_fb_clear_parser@@Base+0x2974>
   32574:	ldr	r4, [r4]
   32578:	subs	sl, sl, #1
   3257c:	movne	ip, #1
   32580:	moveq	ip, #0
   32584:	cmp	r4, #0
   32588:	moveq	ip, #0
   3258c:	cmp	ip, #0
   32590:	beq	326ac <__flatcc_fb_clear_parser@@Base+0x15c0>
   32594:	ldr	r3, [r4, #4]
   32598:	ldr	r0, [fp, #412]	; 0x19c
   3259c:	ldm	r3, {r1, r2}
   325a0:	add	r0, r0, #16
   325a4:	bl	3dd50 <fb_name_table_find@@Base>
   325a8:	subs	ip, r0, #0
   325ac:	beq	33610 <__flatcc_fb_clear_parser@@Base+0x2524>
   325b0:	ldr	r2, [ip, #24]
   325b4:	cmp	r2, #0
   325b8:	beq	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   325bc:	mov	r3, #8
   325c0:	asr	r3, r3, r2
   325c4:	ands	ip, r3, #1
   325c8:	beq	32688 <__flatcc_fb_clear_parser@@Base+0x159c>
   325cc:	ldr	ip, [r6, r2, lsl #2]
   325d0:	mov	r3, #1
   325d4:	lsl	r1, r2, #2
   325d8:	orr	r5, r5, r3, lsl r2
   325dc:	uxth	r5, r5
   325e0:	cmp	ip, #0
   325e4:	beq	32554 <__flatcc_fb_clear_parser@@Base+0x1468>
   325e8:	mov	ip, #0
   325ec:	movw	r2, #37320	; 0x91c8
   325f0:	movt	r2, #5
   325f4:	mov	r3, ip
   325f8:	ldr	r1, [r4, #4]
   325fc:	mov	r0, fp
   32600:	str	ip, [sp]
   32604:	str	ip, [sp, #4]
   32608:	bl	2c558 <__flatcc_error_report@@Base>
   3260c:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   32610:	cmp	lr, #2
   32614:	bne	32648 <__flatcc_fb_clear_parser@@Base+0x155c>
   32618:	ldrh	r3, [r4, #16]
   3261c:	cmp	r3, #2
   32620:	beq	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   32624:	mov	r3, ip
   32628:	movw	r2, #37400	; 0x9218
   3262c:	movt	r2, #5
   32630:	mov	r0, fp
   32634:	ldr	r1, [r4, #4]
   32638:	str	ip, [sp]
   3263c:	str	ip, [sp, #4]
   32640:	bl	2c558 <__flatcc_error_report@@Base>
   32644:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   32648:	cmp	lr, #5
   3264c:	beq	33634 <__flatcc_fb_clear_parser@@Base+0x2548>
   32650:	cmp	lr, #4
   32654:	bne	33664 <__flatcc_fb_clear_parser@@Base+0x2578>
   32658:	ldrh	r3, [r4, #16]
   3265c:	sub	r3, r3, #4
   32660:	cmp	r3, #1
   32664:	bls	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   32668:	mov	r3, ip
   3266c:	mov	r2, r9
   32670:	ldr	r1, [r4, #4]
   32674:	mov	r0, fp
   32678:	str	ip, [sp]
   3267c:	str	ip, [sp, #4]
   32680:	bl	2c558 <__flatcc_error_report@@Base>
   32684:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   32688:	mov	r3, ip
   3268c:	movw	r2, #37272	; 0x9198
   32690:	movt	r2, #5
   32694:	mov	r0, fp
   32698:	ldr	r1, [r4, #4]
   3269c:	str	ip, [sp]
   326a0:	str	ip, [sp, #4]
   326a4:	bl	2c558 <__flatcc_error_report@@Base>
   326a8:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   326ac:	cmp	r4, #0
   326b0:	beq	326d4 <__flatcc_fb_clear_parser@@Base+0x15e8>
   326b4:	movw	r2, #37560	; 0x92b8
   326b8:	movt	r2, #5
   326bc:	ldr	r1, [r4, #4]
   326c0:	mov	r3, ip
   326c4:	mov	r0, fp
   326c8:	str	ip, [sp]
   326cc:	str	ip, [sp, #4]
   326d0:	bl	2c558 <__flatcc_error_report@@Base>
   326d4:	ldr	r3, [sp, #40]	; 0x28
   326d8:	ldr	sl, [r3, #20]
   326dc:	strh	r5, [r3, #92]	; 0x5c
   326e0:	cmp	sl, #0
   326e4:	beq	33f14 <__flatcc_fb_clear_parser@@Base+0x2e28>
   326e8:	mov	r3, #0
   326ec:	mov	r2, #0
   326f0:	mov	r1, #0
   326f4:	strd	r2, [sp, #16]
   326f8:	str	r1, [sp, #24]
   326fc:	str	r3, [sp, #56]	; 0x38
   32700:	strd	r2, [sp, #72]	; 0x48
   32704:	movw	r3, #36144	; 0x8d30
   32708:	movt	r3, #5
   3270c:	str	r3, [sp, #32]
   32710:	add	r3, fp, #352	; 0x160
   32714:	str	r1, [sp, #44]	; 0x2c
   32718:	str	r3, [sp, #12]
   3271c:	ldr	r3, [sp, #40]	; 0x28
   32720:	str	r2, [sp, #52]	; 0x34
   32724:	str	r1, [sp, #60]	; 0x3c
   32728:	str	r1, [sp, #64]	; 0x40
   3272c:	add	r3, r3, #56	; 0x38
   32730:	str	r3, [sp, #36]	; 0x24
   32734:	mov	r2, #1
   32738:	mov	r1, sl
   3273c:	ldr	r0, [sp, #36]	; 0x24
   32740:	bl	29044 <fb_symbol_table_insert_item@@Base>
   32744:	subs	r3, r0, #0
   32748:	str	r3, [sp, #8]
   3274c:	bne	332a8 <__flatcc_fb_clear_parser@@Base+0x21bc>
   32750:	ldrh	r3, [sl, #8]
   32754:	cmp	r3, #5
   32758:	bne	339b4 <__flatcc_fb_clear_parser@@Base+0x28c8>
   3275c:	ldrh	r3, [sl, #24]
   32760:	cmp	r3, #1
   32764:	beq	3299c <__flatcc_fb_clear_parser@@Base+0x18b0>
   32768:	sub	r3, r3, #7
   3276c:	cmp	r3, #1
   32770:	bhi	3279c <__flatcc_fb_clear_parser@@Base+0x16b0>
   32774:	ldr	r3, [sl, #16]
   32778:	ldr	r3, [r3, #16]
   3277c:	add	r3, r3, #996	; 0x3e4
   32780:	add	r3, r3, #3
   32784:	cmp	r3, #27
   32788:	ldrls	r2, [sp, #32]
   3278c:	ldrhi	r3, [sp, #8]
   32790:	addls	r3, r2, r3, lsl #2
   32794:	ldrls	r3, [r3, #16]
   32798:	str	r3, [sl, #16]
   3279c:	ldr	r4, [sl, #64]	; 0x40
   327a0:	ldr	r3, [sp, #52]	; 0x34
   327a4:	ldr	r2, [sp, #56]	; 0x38
   327a8:	cmp	r4, #0
   327ac:	moveq	r5, r4
   327b0:	strheq	r4, [sl, #72]	; 0x48
   327b4:	str	r3, [r6]
   327b8:	strd	r2, [r6, #4]
   327bc:	strd	r2, [r6, #12]
   327c0:	strd	r2, [r6, #20]
   327c4:	strd	r2, [r6, #28]
   327c8:	strd	r2, [r6, #36]	; 0x24
   327cc:	str	r2, [r6, #44]	; 0x2c
   327d0:	beq	32c5c <__flatcc_fb_clear_parser@@Base+0x1b70>
   327d4:	movw	r3, #37480	; 0x9268
   327d8:	movt	r3, #5
   327dc:	ldr	r9, [sp, #8]
   327e0:	movw	r8, #37516	; 0x928c
   327e4:	movt	r8, #5
   327e8:	mov	r5, #0
   327ec:	mov	r7, #100	; 0x64
   327f0:	str	r3, [sp, #28]
   327f4:	b	3283c <__flatcc_fb_clear_parser@@Base+0x1750>
   327f8:	ldr	r1, [sp, #32]
   327fc:	str	r4, [r6, r2, lsl #2]
   32800:	add	r3, r1, r3
   32804:	ldr	ip, [r3, #204]	; 0xcc
   32808:	cmp	ip, #0
   3280c:	bne	32a04 <__flatcc_fb_clear_parser@@Base+0x1918>
   32810:	ldrh	r3, [r4, #16]
   32814:	cmp	r3, #0
   32818:	bne	3356c <__flatcc_fb_clear_parser@@Base+0x2480>
   3281c:	ldr	r4, [r4]
   32820:	subs	r7, r7, #1
   32824:	movne	ip, #1
   32828:	moveq	ip, #0
   3282c:	cmp	r4, #0
   32830:	moveq	ip, #0
   32834:	cmp	ip, #0
   32838:	beq	32aa0 <__flatcc_fb_clear_parser@@Base+0x19b4>
   3283c:	ldr	r3, [r4, #4]
   32840:	ldr	r0, [fp, #412]	; 0x19c
   32844:	ldm	r3, {r1, r2}
   32848:	add	r0, r0, #16
   3284c:	bl	3dd50 <fb_name_table_find@@Base>
   32850:	subs	ip, r0, #0
   32854:	beq	33284 <__flatcc_fb_clear_parser@@Base+0x2198>
   32858:	ldr	r2, [ip, #24]
   3285c:	cmp	r2, #0
   32860:	beq	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   32864:	movw	r3, #4038	; 0xfc6
   32868:	asr	r3, r3, r2
   3286c:	ands	ip, r3, #1
   32870:	beq	32a7c <__flatcc_fb_clear_parser@@Base+0x1990>
   32874:	ldr	lr, [r6, r2, lsl #2]
   32878:	mov	r1, #1
   3287c:	lsl	r3, r2, #2
   32880:	orr	r5, r5, r1, lsl r2
   32884:	uxth	r5, r5
   32888:	cmp	lr, #0
   3288c:	beq	327f8 <__flatcc_fb_clear_parser@@Base+0x170c>
   32890:	mov	ip, #0
   32894:	movw	r2, #37320	; 0x91c8
   32898:	movt	r2, #5
   3289c:	mov	r3, ip
   328a0:	ldr	r1, [r4, #4]
   328a4:	mov	r0, fp
   328a8:	str	ip, [sp]
   328ac:	str	ip, [sp, #4]
   328b0:	bl	2c558 <__flatcc_error_report@@Base>
   328b4:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   328b8:	mov	r7, #0
   328bc:	ldr	lr, [sp, #8]
   328c0:	mov	ip, #14
   328c4:	ldr	r1, [sp, #24]
   328c8:	ldrd	r2, [lr, #112]	; 0x70
   328cc:	str	lr, [sl, #16]
   328d0:	ldrh	lr, [lr, #104]	; 0x68
   328d4:	eor	r1, r1, #1
   328d8:	cmp	r0, #4
   328dc:	movne	r1, #0
   328e0:	andeq	r1, r1, #1
   328e4:	strh	ip, [sl, #24]
   328e8:	cmp	r1, #0
   328ec:	strh	lr, [sl, #74]	; 0x4a
   328f0:	strd	r2, [sl, #88]	; 0x58
   328f4:	ldrh	r3, [sl, #56]	; 0x38
   328f8:	bne	33b84 <__flatcc_fb_clear_parser@@Base+0x2a98>
   328fc:	cmp	r3, #0
   32900:	bne	33b18 <__flatcc_fb_clear_parser@@Base+0x2a2c>
   32904:	cmp	r0, #3
   32908:	bne	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   3290c:	ldr	r0, [sp, #8]
   32910:	mov	r4, sl
   32914:	ldr	r3, [sp, #52]	; 0x34
   32918:	ldr	r1, [sp, #56]	; 0x38
   3291c:	ldr	r2, [r0, #40]	; 0x28
   32920:	mov	r8, r3
   32924:	mov	r3, #5
   32928:	mov	r9, r1
   3292c:	mov	r1, r0
   32930:	strh	r3, [sl, #56]	; 0x38
   32934:	mov	r0, fp
   32938:	strd	r8, [r4, #48]!	; 0x30
   3293c:	mov	r3, r4
   32940:	bl	35fe4 <__flatcc_fb_coerce_scalar_type@@Base>
   32944:	cmp	r0, #0
   32948:	bne	32f9c <__flatcc_fb_clear_parser@@Base+0x1eb0>
   3294c:	ldr	r3, [fp, #212]	; 0xd4
   32950:	cmp	r3, #0
   32954:	beq	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32958:	ldr	r0, [sl, #16]
   3295c:	mov	r1, r4
   32960:	add	r0, r0, #72	; 0x48
   32964:	bl	3e93c <fb_value_set_find_item@@Base>
   32968:	subs	r3, r0, #0
   3296c:	bne	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32970:	str	r3, [sp]
   32974:	movw	r2, #40044	; 0x9c6c
   32978:	movt	r2, #5
   3297c:	str	r3, [sp, #4]
   32980:	mov	r0, fp
   32984:	ldr	r3, [sp, #8]
   32988:	ldr	r1, [sl, #4]
   3298c:	ldr	r3, [r3, #4]
   32990:	bl	2c558 <__flatcc_error_report@@Base>
   32994:	mov	r3, #1
   32998:	strh	r3, [sl, #24]
   3299c:	ldr	sl, [sl]
   329a0:	cmp	sl, #0
   329a4:	bne	32734 <__flatcc_fb_clear_parser@@Base+0x1648>
   329a8:	ldr	r3, [sp, #24]
   329ac:	cmp	r3, #0
   329b0:	beq	337c0 <__flatcc_fb_clear_parser@@Base+0x26d4>
   329b4:	ldr	r3, [sp, #60]	; 0x3c
   329b8:	cmp	r3, #0
   329bc:	beq	329f8 <__flatcc_fb_clear_parser@@Base+0x190c>
   329c0:	ldr	r2, [sp, #40]	; 0x28
   329c4:	cmp	r3, #1
   329c8:	ldrh	r3, [r2, #10]
   329cc:	orr	r3, r3, #8
   329d0:	strh	r3, [r2, #10]
   329d4:	beq	329f8 <__flatcc_fb_clear_parser@@Base+0x190c>
   329d8:	ldr	r3, [fp, #156]	; 0x9c
   329dc:	cmp	r3, #0
   329e0:	movne	r3, #0
   329e4:	strne	r3, [sp, #60]	; 0x3c
   329e8:	beq	34278 <__flatcc_fb_clear_parser@@Base+0x318c>
   329ec:	ldr	r3, [sp, #24]
   329f0:	cmp	r3, #0
   329f4:	beq	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   329f8:	mvn	r3, #0
   329fc:	str	r3, [sp, #60]	; 0x3c
   32a00:	b	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   32a04:	cmp	ip, #2
   32a08:	bne	32a3c <__flatcc_fb_clear_parser@@Base+0x1950>
   32a0c:	ldrh	r3, [r4, #16]
   32a10:	cmp	r3, #2
   32a14:	beq	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   32a18:	mov	r3, lr
   32a1c:	movw	r2, #37400	; 0x9218
   32a20:	movt	r2, #5
   32a24:	mov	r0, fp
   32a28:	ldr	r1, [r4, #4]
   32a2c:	str	lr, [sp]
   32a30:	str	lr, [sp, #4]
   32a34:	bl	2c558 <__flatcc_error_report@@Base>
   32a38:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   32a3c:	cmp	ip, #5
   32a40:	beq	3344c <__flatcc_fb_clear_parser@@Base+0x2360>
   32a44:	cmp	ip, #4
   32a48:	bne	3347c <__flatcc_fb_clear_parser@@Base+0x2390>
   32a4c:	ldrh	r3, [r4, #16]
   32a50:	sub	r3, r3, #4
   32a54:	cmp	r3, #1
   32a58:	bls	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   32a5c:	mov	r3, lr
   32a60:	mov	r0, fp
   32a64:	ldr	r1, [r4, #4]
   32a68:	str	lr, [sp]
   32a6c:	str	lr, [sp, #4]
   32a70:	ldr	r2, [sp, #28]
   32a74:	bl	2c558 <__flatcc_error_report@@Base>
   32a78:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   32a7c:	mov	r3, ip
   32a80:	movw	r2, #37272	; 0x9198
   32a84:	movt	r2, #5
   32a88:	mov	r0, fp
   32a8c:	ldr	r1, [r4, #4]
   32a90:	str	ip, [sp]
   32a94:	str	ip, [sp, #4]
   32a98:	bl	2c558 <__flatcc_error_report@@Base>
   32a9c:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   32aa0:	cmp	r4, #0
   32aa4:	str	r9, [sp, #8]
   32aa8:	ldr	r7, [sp, #124]	; 0x7c
   32aac:	beq	32ad0 <__flatcc_fb_clear_parser@@Base+0x19e4>
   32ab0:	movw	r2, #37560	; 0x92b8
   32ab4:	movt	r2, #5
   32ab8:	mov	r3, ip
   32abc:	mov	r0, fp
   32ac0:	ldr	r1, [r4, #4]
   32ac4:	str	ip, [sp]
   32ac8:	str	ip, [sp, #4]
   32acc:	bl	2c558 <__flatcc_error_report@@Base>
   32ad0:	cmp	r7, #0
   32ad4:	strh	r5, [sl, #72]	; 0x48
   32ad8:	beq	32c00 <__flatcc_fb_clear_parser@@Base+0x1b14>
   32adc:	ldrh	r3, [sl, #24]
   32ae0:	ldr	r2, [sp, #40]	; 0x28
   32ae4:	cmp	r3, #7
   32ae8:	ldr	r4, [r2, #12]
   32aec:	bne	33e9c <__flatcc_fb_clear_parser@@Base+0x2db0>
   32af0:	ldr	r3, [sl, #16]
   32af4:	cmp	r3, #4
   32af8:	bne	33e9c <__flatcc_fb_clear_parser@@Base+0x2db0>
   32afc:	ldrh	r3, [r7, #16]
   32b00:	cmp	r3, #2
   32b04:	bne	33e90 <__flatcc_fb_clear_parser@@Base+0x2da4>
   32b08:	ldr	r1, [r7, #8]
   32b0c:	ldr	ip, [r7, #12]
   32b10:	cmp	ip, #0
   32b14:	ble	33e44 <__flatcc_fb_clear_parser@@Base+0x2d58>
   32b18:	sub	r5, ip, #1
   32b1c:	ldrb	r3, [r1, r5]
   32b20:	cmp	r3, #46	; 0x2e
   32b24:	beq	33e58 <__flatcc_fb_clear_parser@@Base+0x2d6c>
   32b28:	cmp	r5, #0
   32b2c:	beq	33e6c <__flatcc_fb_clear_parser@@Base+0x2d80>
   32b30:	sub	r2, ip, #2
   32b34:	ldrb	r3, [r1, r2]
   32b38:	cmp	r3, #46	; 0x2e
   32b3c:	beq	33e7c <__flatcc_fb_clear_parser@@Base+0x2d90>
   32b40:	add	r0, r1, r2
   32b44:	ldr	r9, [sp, #8]
   32b48:	b	32b60 <__flatcc_fb_clear_parser@@Base+0x1a74>
   32b4c:	ldrb	lr, [r0, #-1]!
   32b50:	sub	r3, r2, #1
   32b54:	cmp	lr, #46	; 0x2e
   32b58:	beq	335e0 <__flatcc_fb_clear_parser@@Base+0x24f4>
   32b5c:	mov	r2, r3
   32b60:	cmp	r2, #0
   32b64:	bne	32b4c <__flatcc_fb_clear_parser@@Base+0x1a60>
   32b68:	mov	r8, r1
   32b6c:	str	r9, [sp, #8]
   32b70:	str	ip, [sp, #28]
   32b74:	clz	r3, r2
   32b78:	cmp	r4, #0
   32b7c:	lsr	r3, r3, #5
   32b80:	moveq	r3, #0
   32b84:	cmp	r3, #0
   32b88:	beq	3351c <__flatcc_fb_clear_parser@@Base+0x2430>
   32b8c:	ldr	r9, [sp, #8]
   32b90:	add	r3, fp, #524	; 0x20c
   32b94:	str	r3, [sp, #48]	; 0x30
   32b98:	mov	r1, r8
   32b9c:	add	r0, r4, #4
   32ba0:	ldr	r2, [sp, #28]
   32ba4:	bl	29284 <fb_symbol_table_find@@Base>
   32ba8:	subs	r5, r0, #0
   32bac:	beq	331c0 <__flatcc_fb_clear_parser@@Base+0x20d4>
   32bb0:	ldrh	r3, [r5, #8]
   32bb4:	cmp	r3, #4
   32bb8:	bhi	331c0 <__flatcc_fb_clear_parser@@Base+0x20d4>
   32bbc:	ldr	r1, [r5, #16]
   32bc0:	ldr	r0, [sp, #48]	; 0x30
   32bc4:	bl	287a4 <ptr_set_find_item@@Base>
   32bc8:	cmp	r0, #0
   32bcc:	beq	331c0 <__flatcc_fb_clear_parser@@Base+0x20d4>
   32bd0:	mov	r3, r5
   32bd4:	str	r9, [sp, #8]
   32bd8:	ldrh	r2, [r3, #8]
   32bdc:	cmp	r2, #0
   32be0:	beq	32bf8 <__flatcc_fb_clear_parser@@Base+0x1b0c>
   32be4:	ldr	ip, [fp, #176]	; 0xb0
   32be8:	cmp	ip, #0
   32bec:	beq	341e0 <__flatcc_fb_clear_parser@@Base+0x30f4>
   32bf0:	cmp	r2, #1
   32bf4:	bne	341a4 <__flatcc_fb_clear_parser@@Base+0x30b8>
   32bf8:	ldrh	r5, [sl, #72]	; 0x48
   32bfc:	str	r3, [sl, #104]	; 0x68
   32c00:	tst	r5, #256	; 0x100
   32c04:	beq	32c14 <__flatcc_fb_clear_parser@@Base+0x1b28>
   32c08:	ldrh	r3, [sl, #24]
   32c0c:	cmp	r3, #8
   32c10:	beq	3369c <__flatcc_fb_clear_parser@@Base+0x25b0>
   32c14:	tst	r5, #1024	; 0x400
   32c18:	beq	32c5c <__flatcc_fb_clear_parser@@Base+0x1b70>
   32c1c:	ldrh	r3, [sl, #24]
   32c20:	cmp	r3, #7
   32c24:	bne	32c34 <__flatcc_fb_clear_parser@@Base+0x1b48>
   32c28:	ldr	r3, [sl, #16]
   32c2c:	cmp	r3, #4
   32c30:	beq	32c98 <__flatcc_fb_clear_parser@@Base+0x1bac>
   32c34:	mov	ip, #0
   32c38:	movw	r2, #39324	; 0x999c
   32c3c:	movt	r2, #5
   32c40:	mov	r3, ip
   32c44:	ldr	r1, [sl, #4]
   32c48:	mov	r0, fp
   32c4c:	str	ip, [sp]
   32c50:	str	ip, [sp, #4]
   32c54:	bl	2c558 <__flatcc_error_report@@Base>
   32c58:	ldrh	r5, [sl, #72]	; 0x48
   32c5c:	tst	r5, #2048	; 0x800
   32c60:	beq	32c98 <__flatcc_fb_clear_parser@@Base+0x1bac>
   32c64:	ldrh	r3, [sl, #24]
   32c68:	cmp	r3, #7
   32c6c:	beq	335a0 <__flatcc_fb_clear_parser@@Base+0x24b4>
   32c70:	mov	ip, #0
   32c74:	movw	r2, #39384	; 0x99d8
   32c78:	movt	r2, #5
   32c7c:	mov	r3, ip
   32c80:	ldr	r1, [sl, #4]
   32c84:	mov	r0, fp
   32c88:	str	ip, [sp]
   32c8c:	str	ip, [sp, #4]
   32c90:	bl	2c558 <__flatcc_error_report@@Base>
   32c94:	ldrh	r5, [sl, #72]	; 0x48
   32c98:	and	r5, r5, #3072	; 0xc00
   32c9c:	cmp	r5, #3072	; 0xc00
   32ca0:	beq	335b8 <__flatcc_fb_clear_parser@@Base+0x24cc>
   32ca4:	ldr	r3, [sp, #104]	; 0x68
   32ca8:	adds	r1, r3, #0
   32cac:	str	r3, [sp, #28]
   32cb0:	ldrd	r2, [sp, #16]
   32cb4:	movne	r1, #1
   32cb8:	str	r1, [sp, #48]	; 0x30
   32cbc:	mov	r0, r2
   32cc0:	orrs	r3, r0, r3
   32cc4:	moveq	r3, r1
   32cc8:	movne	r3, #0
   32ccc:	cmp	r3, #0
   32cd0:	bne	334b4 <__flatcc_fb_clear_parser@@Base+0x23c8>
   32cd4:	ldr	r3, [sp, #24]
   32cd8:	cmp	r3, #0
   32cdc:	bne	32d28 <__flatcc_fb_clear_parser@@Base+0x1c3c>
   32ce0:	ldrd	r0, [sp, #16]
   32ce4:	ldrd	r2, [fp, #216]	; 0xd8
   32ce8:	cmp	r3, r1
   32cec:	cmpeq	r2, r0
   32cf0:	bls	334ec <__flatcc_fb_clear_parser@@Base+0x2400>
   32cf4:	ldr	r2, [sp, #44]	; 0x2c
   32cf8:	cmp	r2, #0
   32cfc:	bne	32d10 <__flatcc_fb_clear_parser@@Base+0x1c24>
   32d00:	ldrh	r3, [sp, #16]
   32d04:	str	r2, [sp, #24]
   32d08:	str	r3, [sl, #96]	; 0x60
   32d0c:	str	r2, [sl, #100]	; 0x64
   32d10:	ldr	r3, [sp, #16]
   32d14:	adds	r3, r3, #1
   32d18:	str	r3, [sp, #16]
   32d1c:	ldr	r3, [sp, #20]
   32d20:	adc	r3, r3, #0
   32d24:	str	r3, [sp, #20]
   32d28:	ldrh	r3, [sl, #24]
   32d2c:	sub	r3, r3, #7
   32d30:	cmp	r3, #5
   32d34:	ldrls	pc, [pc, r3, lsl #2]
   32d38:	b	342b0 <__flatcc_fb_clear_parser@@Base+0x31c4>
   32d3c:	andeq	r3, r3, r4, lsr #32
   32d40:			; <UNDEFINED> instruction: 0x00032fb4
   32d44:	andeq	r2, r3, ip, ror #30
   32d48:	ldrdeq	r2, [r3], -r0
   32d4c:	andeq	r2, r3, r4, lsl lr
   32d50:	andeq	r2, r3, r4, asr sp
   32d54:	ldr	ip, [sl, #16]
   32d58:	ldr	r3, [sp, #40]	; 0x28
   32d5c:	cmp	ip, #0
   32d60:	ldr	r4, [r3, #12]
   32d64:	beq	33424 <__flatcc_fb_clear_parser@@Base+0x2338>
   32d68:	mov	r7, ip
   32d6c:	mov	r2, #0
   32d70:	b	32d7c <__flatcc_fb_clear_parser@@Base+0x1c90>
   32d74:	mov	r2, r3
   32d78:	mov	r7, r5
   32d7c:	ldr	r5, [r7]
   32d80:	add	r3, r2, #1
   32d84:	cmp	r5, #0
   32d88:	bne	32d74 <__flatcc_fb_clear_parser@@Base+0x1c88>
   32d8c:	sub	r1, r3, #1
   32d90:	cmp	r4, #0
   32d94:	clz	r1, r1
   32d98:	lsr	r1, r1, #5
   32d9c:	moveq	r1, #0
   32da0:	cmp	r1, #0
   32da4:	addne	r8, fp, #524	; 0x20c
   32da8:	beq	33740 <__flatcc_fb_clear_parser@@Base+0x2654>
   32dac:	ldr	r3, [r7, #4]
   32db0:	add	r0, r4, #4
   32db4:	ldm	r3, {r1, r2}
   32db8:	bl	29284 <fb_symbol_table_find@@Base>
   32dbc:	subs	r9, r0, #0
   32dc0:	beq	33398 <__flatcc_fb_clear_parser@@Base+0x22ac>
   32dc4:	ldrh	r3, [r9, #8]
   32dc8:	cmp	r3, #4
   32dcc:	bhi	33398 <__flatcc_fb_clear_parser@@Base+0x22ac>
   32dd0:	mov	r0, r8
   32dd4:	ldr	r1, [r9, #16]
   32dd8:	str	r8, [sp, #68]	; 0x44
   32ddc:	bl	287a4 <ptr_set_find_item@@Base>
   32de0:	cmp	r0, #0
   32de4:	beq	33398 <__flatcc_fb_clear_parser@@Base+0x22ac>
   32de8:	str	r9, [sp, #8]
   32dec:	ldr	r3, [sp, #8]
   32df0:	ldrh	r0, [r3, #8]
   32df4:	cmp	r0, #4
   32df8:	ldrls	pc, [pc, r0, lsl #2]
   32dfc:	b	34290 <__flatcc_fb_clear_parser@@Base+0x31a4>
   32e00:			; <UNDEFINED> instruction: 0x000328b8
   32e04:			; <UNDEFINED> instruction: 0x000328b8
   32e08:	andeq	r3, r3, r4, lsl #21
   32e0c:	andeq	r3, r3, r4, asr #21
   32e10:			; <UNDEFINED> instruction: 0x000328b8
   32e14:	ldr	ip, [sl, #16]
   32e18:	ldr	r3, [sp, #40]	; 0x28
   32e1c:	cmp	ip, #0
   32e20:	ldr	r4, [r3, #12]
   32e24:	beq	33368 <__flatcc_fb_clear_parser@@Base+0x227c>
   32e28:	mov	r5, ip
   32e2c:	mov	r2, #0
   32e30:	b	32e3c <__flatcc_fb_clear_parser@@Base+0x1d50>
   32e34:	mov	r2, r0
   32e38:	mov	r5, r3
   32e3c:	ldr	r3, [r5]
   32e40:	add	r0, r2, #1
   32e44:	cmp	r3, #0
   32e48:	bne	32e34 <__flatcc_fb_clear_parser@@Base+0x1d48>
   32e4c:	sub	r3, r0, #1
   32e50:	cmp	r4, #0
   32e54:	clz	r3, r3
   32e58:	lsr	r3, r3, #5
   32e5c:	moveq	r3, #0
   32e60:	cmp	r3, #0
   32e64:	addne	r7, fp, #524	; 0x20c
   32e68:	beq	336c8 <__flatcc_fb_clear_parser@@Base+0x25dc>
   32e6c:	ldr	r3, [r5, #4]
   32e70:	add	r0, r4, #4
   32e74:	ldm	r3, {r1, r2}
   32e78:	bl	29284 <fb_symbol_table_find@@Base>
   32e7c:	subs	r9, r0, #0
   32e80:	beq	332dc <__flatcc_fb_clear_parser@@Base+0x21f0>
   32e84:	ldrh	r3, [r9, #8]
   32e88:	cmp	r3, #4
   32e8c:	bhi	332dc <__flatcc_fb_clear_parser@@Base+0x21f0>
   32e90:	mov	r0, r7
   32e94:	ldr	r1, [r9, #16]
   32e98:	bl	287a4 <ptr_set_find_item@@Base>
   32e9c:	cmp	r0, #0
   32ea0:	beq	332dc <__flatcc_fb_clear_parser@@Base+0x21f0>
   32ea4:	str	r9, [sp, #8]
   32ea8:	ldr	r3, [sp, #8]
   32eac:	ldrh	r3, [r3, #8]
   32eb0:	cmp	r3, #4
   32eb4:	ldrls	pc, [pc, r3, lsl #2]
   32eb8:	b	33c14 <__flatcc_fb_clear_parser@@Base+0x2b28>
   32ebc:	andeq	r3, r3, r4, rrx
   32ec0:	andeq	r3, r3, r4, rrx
   32ec4:	andeq	r3, r3, r4, lsl ip
   32ec8:	andeq	r3, r3, r4, rrx
   32ecc:	andeq	r3, r3, r4, rrx
   32ed0:	ldrh	r3, [sl, #56]	; 0x38
   32ed4:	cmp	r3, #0
   32ed8:	bne	33e30 <__flatcc_fb_clear_parser@@Base+0x2d44>
   32edc:	ldr	r7, [fp, #164]	; 0xa4
   32ee0:	ldr	r3, [sp, #24]
   32ee4:	cmp	r3, #0
   32ee8:	bne	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   32eec:	ldr	r3, [sp, #44]	; 0x2c
   32ef0:	ldr	r2, [sp, #48]	; 0x30
   32ef4:	eor	r3, r3, #1
   32ef8:	ands	lr, r3, r2
   32efc:	ldr	r3, [sp, #28]
   32f00:	bne	33958 <__flatcc_fb_clear_parser@@Base+0x286c>
   32f04:	ldr	r2, [sp, #44]	; 0x2c
   32f08:	cmp	r3, #0
   32f0c:	movne	ip, #0
   32f10:	andeq	ip, r2, #1
   32f14:	cmp	ip, #0
   32f18:	bne	33a00 <__flatcc_fb_clear_parser@@Base+0x2914>
   32f1c:	cmp	r3, #0
   32f20:	beq	33118 <__flatcc_fb_clear_parser@@Base+0x202c>
   32f24:	ldrh	r3, [r3, #16]
   32f28:	cmp	r3, #5
   32f2c:	beq	330dc <__flatcc_fb_clear_parser@@Base+0x1ff0>
   32f30:	cmp	r3, #4
   32f34:	ldr	r3, [sp, #28]
   32f38:	mov	r0, fp
   32f3c:	movweq	r2, #40440	; 0x9df8
   32f40:	movwne	r2, #40472	; 0x9e18
   32f44:	movteq	r2, #5
   32f48:	movtne	r2, #5
   32f4c:	ldr	r1, [r3, #4]
   32f50:	mov	r3, ip
   32f54:	str	ip, [sp]
   32f58:	str	ip, [sp, #4]
   32f5c:	mov	ip, #1
   32f60:	str	ip, [sp, #24]
   32f64:	bl	2c558 <__flatcc_error_report@@Base>
   32f68:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   32f6c:	ldrh	r7, [sl, #56]	; 0x38
   32f70:	cmp	r7, #0
   32f74:	beq	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   32f78:	ldr	r1, [sl, #4]
   32f7c:	movw	r2, #39672	; 0x9af8
   32f80:	movt	r2, #5
   32f84:	mov	ip, #0
   32f88:	mov	r3, ip
   32f8c:	mov	r0, fp
   32f90:	str	ip, [sp]
   32f94:	str	ip, [sp, #4]
   32f98:	bl	2c558 <__flatcc_error_report@@Base>
   32f9c:	mov	r3, #1
   32fa0:	strh	r3, [sl, #24]
   32fa4:	ldr	sl, [sl]
   32fa8:	cmp	sl, #0
   32fac:	bne	32734 <__flatcc_fb_clear_parser@@Base+0x1648>
   32fb0:	b	329a8 <__flatcc_fb_clear_parser@@Base+0x18bc>
   32fb4:	ldrh	r2, [sl, #56]	; 0x38
   32fb8:	cmp	r2, #13
   32fbc:	addne	r1, sl, #48	; 0x30
   32fc0:	beq	33c30 <__flatcc_fb_clear_parser@@Base+0x2b44>
   32fc4:	cmp	r2, #0
   32fc8:	bne	32fe4 <__flatcc_fb_clear_parser@@Base+0x1ef8>
   32fcc:	ldr	r2, [sp, #52]	; 0x34
   32fd0:	mov	r3, #5
   32fd4:	str	r2, [sl, #48]	; 0x30
   32fd8:	ldr	r2, [sp, #56]	; 0x38
   32fdc:	strh	r3, [sl, #56]	; 0x38
   32fe0:	str	r2, [sl, #52]	; 0x34
   32fe4:	mov	r3, r1
   32fe8:	mov	r0, fp
   32fec:	ldr	r2, [sl, #16]
   32ff0:	mov	r1, sl
   32ff4:	bl	35fe4 <__flatcc_fb_coerce_scalar_type@@Base>
   32ff8:	cmp	r0, #0
   32ffc:	bne	32f9c <__flatcc_fb_clear_parser@@Base+0x1eb0>
   33000:	ldr	r3, [sl, #16]
   33004:	mov	r7, #1
   33008:	str	r0, [sl, #92]	; 0x5c
   3300c:	ldr	r2, [sp, #32]
   33010:	add	r3, r2, r3, lsl #2
   33014:	ldr	r3, [r3, #128]	; 0x80
   33018:	strh	r3, [sl, #74]	; 0x4a
   3301c:	str	r3, [sl, #88]	; 0x58
   33020:	b	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   33024:	ldr	r3, [sl, #16]
   33028:	mov	ip, #0
   3302c:	ldr	r2, [sp, #32]
   33030:	str	ip, [sl, #92]	; 0x5c
   33034:	ldrh	r7, [sl, #56]	; 0x38
   33038:	add	r3, r2, r3, lsl #2
   3303c:	ldr	r3, [r3, #128]	; 0x80
   33040:	cmp	r7, ip
   33044:	strh	r3, [sl, #74]	; 0x4a
   33048:	str	r3, [sl, #88]	; 0x58
   3304c:	beq	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   33050:	movw	r2, #39592	; 0x9aa8
   33054:	movt	r2, #5
   33058:	ldr	r1, [sl, #4]
   3305c:	mov	r3, ip
   33060:	b	32f8c <__flatcc_fb_clear_parser@@Base+0x1ea0>
   33064:	ldrh	r7, [sl, #56]	; 0x38
   33068:	cmp	r7, #0
   3306c:	bne	33bbc <__flatcc_fb_clear_parser@@Base+0x2ad0>
   33070:	ldr	r2, [sp, #8]
   33074:	cmp	r3, #4
   33078:	mov	r0, #15
   3307c:	ldrh	r1, [r2, #104]	; 0x68
   33080:	str	r2, [sl, #16]
   33084:	ldrd	r2, [r2, #112]	; 0x70
   33088:	strh	r0, [sl, #24]
   3308c:	strh	r1, [sl, #74]	; 0x4a
   33090:	strd	r2, [sl, #88]	; 0x58
   33094:	bne	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   33098:	ldr	r3, [sp, #24]
   3309c:	cmp	r3, #0
   330a0:	bne	33ec8 <__flatcc_fb_clear_parser@@Base+0x2ddc>
   330a4:	ldr	r2, [sp, #44]	; 0x2c
   330a8:	cmp	r2, #0
   330ac:	bne	330bc <__flatcc_fb_clear_parser@@Base+0x1fd0>
   330b0:	ldrh	r3, [sp, #16]
   330b4:	str	r3, [sl, #96]	; 0x60
   330b8:	str	r2, [sl, #100]	; 0x64
   330bc:	ldr	r3, [sp, #16]
   330c0:	mov	r7, #0
   330c4:	adds	r3, r3, #1
   330c8:	str	r3, [sp, #16]
   330cc:	ldr	r3, [sp, #20]
   330d0:	adc	r3, r3, r7
   330d4:	str	r3, [sp, #20]
   330d8:	b	32eec <__flatcc_fb_clear_parser@@Base+0x1e00>
   330dc:	ldr	r3, [sp, #28]
   330e0:	ldrd	r0, [r3, #8]
   330e4:	ldrd	r2, [fp, #216]	; 0xd8
   330e8:	cmp	r1, r3
   330ec:	cmpeq	r0, r2
   330f0:	bcs	33f2c <__flatcc_fb_clear_parser@@Base+0x2e40>
   330f4:	uxth	r3, r0
   330f8:	ldrd	r0, [sp, #72]	; 0x48
   330fc:	str	r3, [sp, #80]	; 0x50
   33100:	str	ip, [sp, #84]	; 0x54
   33104:	ldrd	r2, [sp, #80]	; 0x50
   33108:	cmp	r1, r3
   3310c:	strd	r2, [sl, #96]	; 0x60
   33110:	cmpeq	r0, r2
   33114:	strdcc	r2, [sp, #72]	; 0x48
   33118:	ldr	r3, [sp, #44]	; 0x2c
   3311c:	cmp	r3, #0
   33120:	beq	34284 <__flatcc_fb_clear_parser@@Base+0x3198>
   33124:	ldr	r1, [sp, #64]	; 0x40
   33128:	ldr	r3, [sl, #96]	; 0x60
   3312c:	ldrb	r2, [r1, r3]
   33130:	add	r3, r1, r3
   33134:	cmp	r2, #2
   33138:	beq	33a2c <__flatcc_fb_clear_parser@@Base+0x2940>
   3313c:	cmp	r2, #0
   33140:	moveq	r2, #1
   33144:	strbeq	r2, [r3]
   33148:	bne	33988 <__flatcc_fb_clear_parser@@Base+0x289c>
   3314c:	ldr	r3, [sp, #8]
   33150:	cmp	r3, #0
   33154:	beq	33168 <__flatcc_fb_clear_parser@@Base+0x207c>
   33158:	ldrh	r3, [r3, #8]
   3315c:	cmp	r3, #4
   33160:	movne	r3, #0
   33164:	beq	33904 <__flatcc_fb_clear_parser@@Base+0x2818>
   33168:	str	r3, [sp, #24]
   3316c:	ldrh	r3, [sl, #72]	; 0x48
   33170:	tst	r3, #128	; 0x80
   33174:	beq	3299c <__flatcc_fb_clear_parser@@Base+0x18b0>
   33178:	ldr	r3, [sp, #60]	; 0x3c
   3317c:	cmp	r7, #0
   33180:	add	r3, r3, #1
   33184:	str	r3, [sp, #60]	; 0x3c
   33188:	bne	3299c <__flatcc_fb_clear_parser@@Base+0x18b0>
   3318c:	mov	ip, #0
   33190:	movw	r2, #40604	; 0x9e9c
   33194:	movt	r2, #5
   33198:	mov	r3, ip
   3319c:	ldr	r1, [sl, #4]
   331a0:	mov	r0, fp
   331a4:	str	ip, [sp]
   331a8:	str	ip, [sp, #4]
   331ac:	bl	2c558 <__flatcc_error_report@@Base>
   331b0:	ldr	sl, [sl]
   331b4:	cmp	sl, #0
   331b8:	bne	32734 <__flatcc_fb_clear_parser@@Base+0x1648>
   331bc:	b	329a8 <__flatcc_fb_clear_parser@@Base+0x18bc>
   331c0:	ldr	r3, [r4]
   331c4:	cmp	r3, #0
   331c8:	beq	33248 <__flatcc_fb_clear_parser@@Base+0x215c>
   331cc:	mov	r5, #0
   331d0:	b	331d8 <__flatcc_fb_clear_parser@@Base+0x20ec>
   331d4:	mov	r5, r2
   331d8:	ldr	r3, [r3]
   331dc:	add	r2, r5, #1
   331e0:	cmp	r3, #0
   331e4:	bne	331d4 <__flatcc_fb_clear_parser@@Base+0x20e8>
   331e8:	ldr	r3, [sp, #12]
   331ec:	cmp	r3, #0
   331f0:	beq	33248 <__flatcc_fb_clear_parser@@Base+0x215c>
   331f4:	rsb	r5, r5, #0
   331f8:	ldr	r0, [fp, #412]	; 0x19c
   331fc:	b	33224 <__flatcc_fb_clear_parser@@Base+0x2138>
   33200:	cmp	r0, #0
   33204:	beq	33220 <__flatcc_fb_clear_parser@@Base+0x2134>
   33208:	mov	r2, r5
   3320c:	ldr	r1, [r4]
   33210:	bl	2a1ec <fb_scope_table_find@@Base>
   33214:	cmp	r0, #0
   33218:	bne	3327c <__flatcc_fb_clear_parser@@Base+0x2190>
   3321c:	ldr	r0, [fp, #412]	; 0x19c
   33220:	add	r5, r5, #1
   33224:	cmp	r5, #0
   33228:	bne	33200 <__flatcc_fb_clear_parser@@Base+0x2114>
   3322c:	cmp	r0, #0
   33230:	beq	33248 <__flatcc_fb_clear_parser@@Base+0x215c>
   33234:	mov	r2, r5
   33238:	mov	r1, r5
   3323c:	bl	2a1ec <fb_scope_table_find@@Base>
   33240:	subs	r4, r0, #0
   33244:	bne	32b98 <__flatcc_fb_clear_parser@@Base+0x1aac>
   33248:	ldr	r1, [r7, #8]
   3324c:	str	r9, [sp, #8]
   33250:	ldr	ip, [r7, #12]
   33254:	movw	r2, #39140	; 0x98e4
   33258:	movt	r2, #5
   3325c:	ldr	lr, [r7, #4]
   33260:	mov	r3, #0
   33264:	mov	r0, fp
   33268:	stm	sp, {r1, ip}
   3326c:	mov	r1, lr
   33270:	bl	2c558 <__flatcc_error_report@@Base>
   33274:	ldrh	r5, [sl, #72]	; 0x48
   33278:	b	32c00 <__flatcc_fb_clear_parser@@Base+0x1b14>
   3327c:	mov	r4, r0
   33280:	b	32b98 <__flatcc_fb_clear_parser@@Base+0x1aac>
   33284:	mov	r3, ip
   33288:	movw	r2, #37240	; 0x9178
   3328c:	movt	r2, #5
   33290:	mov	r0, fp
   33294:	ldr	r1, [r4, #4]
   33298:	str	ip, [sp]
   3329c:	str	ip, [sp, #4]
   332a0:	bl	2c558 <__flatcc_error_report@@Base>
   332a4:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   332a8:	mov	ip, #0
   332ac:	movw	r2, #39000	; 0x9858
   332b0:	movt	r2, #5
   332b4:	mov	r0, fp
   332b8:	ldr	r1, [sl, #4]
   332bc:	ldr	r3, [r3, #4]
   332c0:	str	ip, [sp]
   332c4:	str	ip, [sp, #4]
   332c8:	bl	2c558 <__flatcc_error_report@@Base>
   332cc:	ldr	sl, [sl]
   332d0:	cmp	sl, #0
   332d4:	bne	32734 <__flatcc_fb_clear_parser@@Base+0x1648>
   332d8:	b	329a8 <__flatcc_fb_clear_parser@@Base+0x18bc>
   332dc:	ldr	r3, [r4]
   332e0:	cmp	r3, #0
   332e4:	beq	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   332e8:	mov	r8, #0
   332ec:	b	332f4 <__flatcc_fb_clear_parser@@Base+0x2208>
   332f0:	mov	r8, r2
   332f4:	ldr	r3, [r3]
   332f8:	add	r2, r8, #1
   332fc:	cmp	r3, #0
   33300:	bne	332f0 <__flatcc_fb_clear_parser@@Base+0x2204>
   33304:	ldr	r3, [sp, #12]
   33308:	cmp	r3, #0
   3330c:	beq	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   33310:	rsb	r8, r8, #0
   33314:	ldr	r0, [fp, #412]	; 0x19c
   33318:	b	33340 <__flatcc_fb_clear_parser@@Base+0x2254>
   3331c:	cmp	r0, #0
   33320:	beq	3333c <__flatcc_fb_clear_parser@@Base+0x2250>
   33324:	mov	r2, r8
   33328:	ldr	r1, [r4]
   3332c:	bl	2a1ec <fb_scope_table_find@@Base>
   33330:	cmp	r0, #0
   33334:	bne	33598 <__flatcc_fb_clear_parser@@Base+0x24ac>
   33338:	ldr	r0, [fp, #412]	; 0x19c
   3333c:	add	r8, r8, #1
   33340:	cmp	r8, #0
   33344:	bne	3331c <__flatcc_fb_clear_parser@@Base+0x2230>
   33348:	cmp	r0, #0
   3334c:	beq	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   33350:	mov	r2, r8
   33354:	mov	r1, r8
   33358:	bl	2a1ec <fb_scope_table_find@@Base>
   3335c:	subs	r4, r0, #0
   33360:	bne	32e6c <__flatcc_fb_clear_parser@@Base+0x1d80>
   33364:	ldr	ip, [sl, #16]
   33368:	movw	r2, #40116	; 0x9cb4
   3336c:	movt	r2, #5
   33370:	mov	r1, ip
   33374:	mov	r3, sl
   33378:	mov	r0, fp
   3337c:	bl	2dde4 <error_ref_sym@@Base>
   33380:	mov	r3, #1
   33384:	strh	r3, [sl, #24]
   33388:	ldr	sl, [sl]
   3338c:	cmp	sl, #0
   33390:	bne	32734 <__flatcc_fb_clear_parser@@Base+0x1648>
   33394:	b	329a8 <__flatcc_fb_clear_parser@@Base+0x18bc>
   33398:	ldr	r3, [r4]
   3339c:	cmp	r3, #0
   333a0:	beq	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   333a4:	mov	r9, #0
   333a8:	b	333b0 <__flatcc_fb_clear_parser@@Base+0x22c4>
   333ac:	mov	r9, r2
   333b0:	ldr	r3, [r3]
   333b4:	add	r2, r9, #1
   333b8:	cmp	r3, #0
   333bc:	bne	333ac <__flatcc_fb_clear_parser@@Base+0x22c0>
   333c0:	ldr	r3, [sp, #12]
   333c4:	cmp	r3, #0
   333c8:	beq	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   333cc:	rsb	r9, r9, #0
   333d0:	ldr	r0, [fp, #412]	; 0x19c
   333d4:	b	333fc <__flatcc_fb_clear_parser@@Base+0x2310>
   333d8:	cmp	r0, #0
   333dc:	beq	333f8 <__flatcc_fb_clear_parser@@Base+0x230c>
   333e0:	mov	r2, r9
   333e4:	ldr	r1, [r4]
   333e8:	bl	2a1ec <fb_scope_table_find@@Base>
   333ec:	cmp	r0, #0
   333f0:	bne	33590 <__flatcc_fb_clear_parser@@Base+0x24a4>
   333f4:	ldr	r0, [fp, #412]	; 0x19c
   333f8:	add	r9, r9, #1
   333fc:	cmp	r9, #0
   33400:	bne	333d8 <__flatcc_fb_clear_parser@@Base+0x22ec>
   33404:	cmp	r0, #0
   33408:	beq	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   3340c:	mov	r2, r9
   33410:	mov	r1, r9
   33414:	bl	2a1ec <fb_scope_table_find@@Base>
   33418:	subs	r4, r0, #0
   3341c:	bne	32dac <__flatcc_fb_clear_parser@@Base+0x1cc0>
   33420:	ldr	ip, [sl, #16]
   33424:	mov	r3, sl
   33428:	mov	r1, ip
   3342c:	movw	r2, #39716	; 0x9b24
   33430:	movt	r2, #5
   33434:	mov	r0, fp
   33438:	bl	2dde4 <error_ref_sym@@Base>
   3343c:	mov	r3, #1
   33440:	strh	r3, [sl, #24]
   33444:	str	r3, [sp, #24]
   33448:	b	3299c <__flatcc_fb_clear_parser@@Base+0x18b0>
   3344c:	ldrh	r3, [r4, #16]
   33450:	cmp	r3, #5
   33454:	beq	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   33458:	mov	r3, lr
   3345c:	movw	r2, #37436	; 0x923c
   33460:	movt	r2, #5
   33464:	mov	r0, fp
   33468:	ldr	r1, [r4, #4]
   3346c:	str	lr, [sp]
   33470:	str	lr, [sp, #4]
   33474:	bl	2c558 <__flatcc_error_report@@Base>
   33478:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   3347c:	cmp	ip, #6
   33480:	bne	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   33484:	ldrh	r3, [r4, #16]
   33488:	cmp	r3, #6
   3348c:	beq	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   33490:	mov	ip, #0
   33494:	mov	r2, r8
   33498:	ldr	r1, [r4, #4]
   3349c:	mov	r3, ip
   334a0:	mov	r0, fp
   334a4:	str	ip, [sp]
   334a8:	str	ip, [sp, #4]
   334ac:	bl	2c558 <__flatcc_error_report@@Base>
   334b0:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   334b4:	ldr	r3, [fp, #112]	; 0x70
   334b8:	mov	r1, #0
   334bc:	ldr	r2, [fp, #216]	; 0xd8
   334c0:	mov	r0, r3
   334c4:	str	r3, [sp, #64]	; 0x40
   334c8:	bl	14084 <memset@plt>
   334cc:	ldr	r3, [sp, #24]
   334d0:	cmp	r3, #0
   334d4:	bne	335fc <__flatcc_fb_clear_parser@@Base+0x2510>
   334d8:	ldrd	r2, [fp, #216]	; 0xd8
   334dc:	orrs	r3, r2, r3
   334e0:	mov	r3, #1
   334e4:	str	r3, [sp, #44]	; 0x2c
   334e8:	bne	32d10 <__flatcc_fb_clear_parser@@Base+0x1c24>
   334ec:	mov	ip, #0
   334f0:	ldr	r1, [sl, #4]
   334f4:	movw	r2, #39504	; 0x9a50
   334f8:	movt	r2, #5
   334fc:	mov	r3, ip
   33500:	str	ip, [sp]
   33504:	mov	r0, fp
   33508:	str	ip, [sp, #4]
   3350c:	mov	ip, #1
   33510:	str	ip, [sp, #24]
   33514:	bl	2c558 <__flatcc_error_report@@Base>
   33518:	b	32d10 <__flatcc_fb_clear_parser@@Base+0x1c24>
   3351c:	ldr	r3, [sp, #12]
   33520:	cmp	r3, #0
   33524:	beq	33254 <__flatcc_fb_clear_parser@@Base+0x2168>
   33528:	ldr	r0, [fp, #412]	; 0x19c
   3352c:	cmp	r0, #0
   33530:	beq	33254 <__flatcc_fb_clear_parser@@Base+0x2168>
   33534:	cmp	r2, #0
   33538:	moveq	r1, #0
   3353c:	bl	2a1ec <fb_scope_table_find@@Base>
   33540:	cmp	r0, #0
   33544:	beq	33560 <__flatcc_fb_clear_parser@@Base+0x2474>
   33548:	mov	r1, r8
   3354c:	add	r0, r0, #4
   33550:	ldr	r2, [sp, #28]
   33554:	bl	29284 <fb_symbol_table_find@@Base>
   33558:	subs	r3, r0, #0
   3355c:	bne	32bd8 <__flatcc_fb_clear_parser@@Base+0x1aec>
   33560:	ldr	r1, [r7, #8]
   33564:	ldr	ip, [r7, #12]
   33568:	b	33254 <__flatcc_fb_clear_parser@@Base+0x2168>
   3356c:	mov	r3, ip
   33570:	movw	r2, #37360	; 0x91f0
   33574:	movt	r2, #5
   33578:	mov	r0, fp
   3357c:	ldr	r1, [r4, #4]
   33580:	str	ip, [sp]
   33584:	str	ip, [sp, #4]
   33588:	bl	2c558 <__flatcc_error_report@@Base>
   3358c:	b	3281c <__flatcc_fb_clear_parser@@Base+0x1730>
   33590:	mov	r4, r0
   33594:	b	32dac <__flatcc_fb_clear_parser@@Base+0x1cc0>
   33598:	mov	r4, r0
   3359c:	b	32e6c <__flatcc_fb_clear_parser@@Base+0x1d80>
   335a0:	ldr	r3, [sl, #16]
   335a4:	cmp	r3, #4
   335a8:	bne	32c70 <__flatcc_fb_clear_parser@@Base+0x1b84>
   335ac:	and	r5, r5, #3072	; 0xc00
   335b0:	cmp	r5, #3072	; 0xc00
   335b4:	bne	32ca4 <__flatcc_fb_clear_parser@@Base+0x1bb8>
   335b8:	mov	ip, #0
   335bc:	movw	r2, #39448	; 0x9a18
   335c0:	movt	r2, #5
   335c4:	mov	r3, ip
   335c8:	ldr	r1, [sl, #4]
   335cc:	mov	r0, fp
   335d0:	str	ip, [sp]
   335d4:	str	ip, [sp, #4]
   335d8:	bl	2c558 <__flatcc_error_report@@Base>
   335dc:	b	32ca4 <__flatcc_fb_clear_parser@@Base+0x1bb8>
   335e0:	str	r9, [sp, #8]
   335e4:	mov	r8, r2
   335e8:	sub	r2, r5, r3
   335ec:	str	r2, [sp, #28]
   335f0:	mov	r2, r3
   335f4:	add	r8, r1, r8
   335f8:	b	32b74 <__flatcc_fb_clear_parser@@Base+0x1a88>
   335fc:	mov	r2, #0
   33600:	str	r3, [sp, #44]	; 0x2c
   33604:	mov	r3, #0
   33608:	strd	r2, [sp, #16]
   3360c:	b	32d28 <__flatcc_fb_clear_parser@@Base+0x1c3c>
   33610:	mov	r3, ip
   33614:	movw	r2, #37240	; 0x9178
   33618:	movt	r2, #5
   3361c:	mov	r0, fp
   33620:	ldr	r1, [r4, #4]
   33624:	str	ip, [sp]
   33628:	str	ip, [sp, #4]
   3362c:	bl	2c558 <__flatcc_error_report@@Base>
   33630:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   33634:	ldrh	r3, [r4, #16]
   33638:	cmp	r3, #5
   3363c:	beq	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   33640:	mov	r3, ip
   33644:	movw	r2, #37436	; 0x923c
   33648:	movt	r2, #5
   3364c:	mov	r0, fp
   33650:	ldr	r1, [r4, #4]
   33654:	str	ip, [sp]
   33658:	str	ip, [sp, #4]
   3365c:	bl	2c558 <__flatcc_error_report@@Base>
   33660:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   33664:	cmp	lr, #6
   33668:	bne	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   3366c:	ldrh	r3, [r4, #16]
   33670:	cmp	r3, #6
   33674:	beq	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   33678:	mov	ip, #0
   3367c:	mov	r2, r8
   33680:	ldr	r1, [r4, #4]
   33684:	mov	r3, ip
   33688:	mov	r0, fp
   3368c:	str	ip, [sp]
   33690:	str	ip, [sp, #4]
   33694:	bl	2c558 <__flatcc_error_report@@Base>
   33698:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   3369c:	mov	ip, #0
   336a0:	movw	r2, #39268	; 0x9964
   336a4:	movt	r2, #5
   336a8:	mov	r3, ip
   336ac:	ldr	r1, [sl, #4]
   336b0:	mov	r0, fp
   336b4:	str	ip, [sp]
   336b8:	str	ip, [sp, #4]
   336bc:	bl	2c558 <__flatcc_error_report@@Base>
   336c0:	ldrh	r5, [sl, #72]	; 0x48
   336c4:	b	32c14 <__flatcc_fb_clear_parser@@Base+0x1b28>
   336c8:	cmp	r0, #1
   336cc:	moveq	r1, r3
   336d0:	ldr	r3, [sp, #12]
   336d4:	movne	r1, ip
   336d8:	cmp	r3, #0
   336dc:	beq	33368 <__flatcc_fb_clear_parser@@Base+0x227c>
   336e0:	ldr	r0, [fp, #412]	; 0x19c
   336e4:	cmp	r0, #0
   336e8:	beq	33368 <__flatcc_fb_clear_parser@@Base+0x227c>
   336ec:	rsb	r2, r2, #0
   336f0:	bl	2a1ec <fb_scope_table_find@@Base>
   336f4:	cmp	r0, #0
   336f8:	beq	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   336fc:	ldr	r3, [r5, #4]
   33700:	add	r0, r0, #4
   33704:	ldm	r3, {r1, r2}
   33708:	bl	29284 <fb_symbol_table_find@@Base>
   3370c:	subs	r3, r0, #0
   33710:	str	r3, [sp, #8]
   33714:	beq	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   33718:	ldrh	r3, [r3, #8]
   3371c:	cmp	r3, #4
   33720:	bhi	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   33724:	ldr	r3, [sp, #8]
   33728:	add	r0, fp, #524	; 0x20c
   3372c:	ldr	r1, [r3, #16]
   33730:	bl	287a4 <ptr_set_find_item@@Base>
   33734:	cmp	r0, #0
   33738:	bne	32ea8 <__flatcc_fb_clear_parser@@Base+0x1dbc>
   3373c:	b	33364 <__flatcc_fb_clear_parser@@Base+0x2278>
   33740:	cmp	r3, #1
   33744:	ldr	r3, [sp, #12]
   33748:	movne	r1, ip
   3374c:	moveq	r1, #0
   33750:	cmp	r3, #0
   33754:	beq	33424 <__flatcc_fb_clear_parser@@Base+0x2338>
   33758:	ldr	r0, [fp, #412]	; 0x19c
   3375c:	cmp	r0, #0
   33760:	beq	33424 <__flatcc_fb_clear_parser@@Base+0x2338>
   33764:	rsb	r2, r2, #0
   33768:	bl	2a1ec <fb_scope_table_find@@Base>
   3376c:	cmp	r0, #0
   33770:	beq	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   33774:	ldr	r3, [r7, #4]
   33778:	add	r0, r0, #4
   3377c:	ldm	r3, {r1, r2}
   33780:	bl	29284 <fb_symbol_table_find@@Base>
   33784:	subs	r3, r0, #0
   33788:	str	r3, [sp, #8]
   3378c:	beq	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   33790:	ldrh	r3, [r3, #8]
   33794:	cmp	r3, #4
   33798:	bhi	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   3379c:	ldr	r2, [sp, #8]
   337a0:	add	r3, fp, #524	; 0x20c
   337a4:	mov	r0, r3
   337a8:	str	r3, [sp, #68]	; 0x44
   337ac:	ldr	r1, [r2, #16]
   337b0:	bl	287a4 <ptr_set_find_item@@Base>
   337b4:	cmp	r0, #0
   337b8:	bne	32dec <__flatcc_fb_clear_parser@@Base+0x1d00>
   337bc:	b	33420 <__flatcc_fb_clear_parser@@Base+0x2334>
   337c0:	ldrd	r0, [sp, #16]
   337c4:	ldr	r3, [sp, #44]	; 0x2c
   337c8:	cmp	r3, #0
   337cc:	ldr	r3, [sp, #40]	; 0x28
   337d0:	strd	r0, [r3, #96]	; 0x60
   337d4:	beq	341f0 <__flatcc_fb_clear_parser@@Base+0x3104>
   337d8:	ldrd	r4, [sp, #72]	; 0x48
   337dc:	mov	r3, r0
   337e0:	orrs	r3, r3, r1
   337e4:	movne	r3, #1
   337e8:	moveq	r3, #0
   337ec:	cmp	r1, r5
   337f0:	cmpeq	r0, r4
   337f4:	movhi	r3, #0
   337f8:	andls	r3, r3, #1
   337fc:	cmp	r3, #0
   33800:	beq	33ad8 <__flatcc_fb_clear_parser@@Base+0x29ec>
   33804:	mov	r2, r4
   33808:	mov	r3, r5
   3380c:	orrs	r1, r2, r3
   33810:	beq	33898 <__flatcc_fb_clear_parser@@Base+0x27ac>
   33814:	ldr	r1, [sp, #64]	; 0x40
   33818:	mov	r5, #0
   3381c:	movw	sl, #40680	; 0x9ee8
   33820:	movt	sl, #5
   33824:	mov	r8, r5
   33828:	add	r6, r1, r2
   3382c:	sub	r4, r1, #1
   33830:	sub	r6, r6, #1
   33834:	mov	r1, #10
   33838:	ldrb	r7, [r4, #1]!
   3383c:	cmp	r7, #0
   33840:	bne	33888 <__flatcc_fb_clear_parser@@Base+0x279c>
   33844:	cmp	r1, #0
   33848:	sub	r9, r1, #1
   3384c:	beq	33f40 <__flatcc_fb_clear_parser@@Base+0x2e54>
   33850:	mov	r2, r5
   33854:	mov	r3, r8
   33858:	mov	r1, sl
   3385c:	add	r0, sp, #148	; 0x94
   33860:	bl	140d8 <sprintf@plt>
   33864:	ldr	r1, [sp, #40]	; 0x28
   33868:	mov	r3, r7
   3386c:	add	r2, sp, #148	; 0x94
   33870:	mov	r0, fp
   33874:	str	r7, [sp]
   33878:	str	r7, [sp, #4]
   3387c:	ldr	r1, [r1, #4]
   33880:	bl	2c558 <__flatcc_error_report@@Base>
   33884:	mov	r1, r9
   33888:	adds	r5, r5, #1
   3388c:	adc	r8, r8, #0
   33890:	cmp	r4, r6
   33894:	bne	33838 <__flatcc_fb_clear_parser@@Base+0x274c>
   33898:	ldr	r2, [sp, #60]	; 0x3c
   3389c:	cmp	r2, #0
   338a0:	beq	329f8 <__flatcc_fb_clear_parser@@Base+0x190c>
   338a4:	ldr	r1, [sp, #40]	; 0x28
   338a8:	cmp	r2, #1
   338ac:	ldrh	r3, [r1, #10]
   338b0:	orr	r3, r3, #8
   338b4:	strh	r3, [r1, #10]
   338b8:	beq	329f8 <__flatcc_fb_clear_parser@@Base+0x190c>
   338bc:	ldr	r3, [fp, #156]	; 0x9c
   338c0:	cmp	r3, #0
   338c4:	bne	329f8 <__flatcc_fb_clear_parser@@Base+0x190c>
   338c8:	ldr	r3, [sp, #40]	; 0x28
   338cc:	mov	ip, #0
   338d0:	mov	r0, fp
   338d4:	movw	r2, #40732	; 0x9f1c
   338d8:	movt	r2, #5
   338dc:	ldr	lr, [sp, #44]	; 0x2c
   338e0:	ldr	r1, [r3, #4]
   338e4:	mov	r3, ip
   338e8:	str	ip, [sp]
   338ec:	str	ip, [sp, #4]
   338f0:	mvn	ip, #0
   338f4:	str	lr, [sp, #24]
   338f8:	str	ip, [sp, #60]	; 0x3c
   338fc:	bl	2c558 <__flatcc_error_report@@Base>
   33900:	b	329ec <__flatcc_fb_clear_parser@@Base+0x1900>
   33904:	ldrd	r0, [sl, #96]	; 0x60
   33908:	ldrh	r3, [sl, #24]
   3390c:	cmp	r1, #0
   33910:	cmpeq	r0, #1
   33914:	bls	33bd0 <__flatcc_fb_clear_parser@@Base+0x2ae4>
   33918:	ldr	r1, [sp, #64]	; 0x40
   3391c:	sub	r0, r0, #1
   33920:	ldrb	r2, [r1, r0]
   33924:	add	r0, r1, r0
   33928:	cmp	r2, #2
   3392c:	beq	33f78 <__flatcc_fb_clear_parser@@Base+0x2e8c>
   33930:	cmp	r2, #0
   33934:	beq	33f68 <__flatcc_fb_clear_parser@@Base+0x2e7c>
   33938:	ldr	r2, [sp, #28]
   3393c:	movw	ip, #38816	; 0x97a0
   33940:	movt	ip, #5
   33944:	mov	r0, #0
   33948:	ldr	r1, [r2, #4]
   3394c:	movw	r2, #38904	; 0x97f8
   33950:	movt	r2, #5
   33954:	b	33bec <__flatcc_fb_clear_parser@@Base+0x2b00>
   33958:	mov	ip, #0
   3395c:	movw	r2, #40284	; 0x9d5c
   33960:	movt	r2, #5
   33964:	ldr	r1, [r3, #4]
   33968:	mov	r3, ip
   3396c:	str	ip, [sp]
   33970:	mov	r0, fp
   33974:	str	ip, [sp, #4]
   33978:	mov	ip, #1
   3397c:	str	ip, [sp, #24]
   33980:	bl	2c558 <__flatcc_error_report@@Base>
   33984:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   33988:	ldr	r3, [sp, #28]
   3398c:	mov	ip, #0
   33990:	movw	r2, #40556	; 0x9e6c
   33994:	movt	r2, #5
   33998:	mov	r0, fp
   3399c:	ldr	r1, [r3, #4]
   339a0:	mov	r3, ip
   339a4:	str	ip, [sp]
   339a8:	str	ip, [sp, #4]
   339ac:	bl	2c558 <__flatcc_error_report@@Base>
   339b0:	b	3314c <__flatcc_fb_clear_parser@@Base+0x2060>
   339b4:	ldr	r8, [sp, #8]
   339b8:	mvn	ip, #0
   339bc:	movw	r2, #39036	; 0x987c
   339c0:	movt	r2, #5
   339c4:	mov	r0, fp
   339c8:	ldr	r1, [sl, #4]
   339cc:	mov	r3, r8
   339d0:	str	r8, [sp]
   339d4:	str	r8, [sp, #4]
   339d8:	str	ip, [sp, #60]	; 0x3c
   339dc:	bl	2c558 <__flatcc_error_report@@Base>
   339e0:	ldr	r0, [sp, #60]	; 0x3c
   339e4:	add	sp, sp, #252	; 0xfc
   339e8:	ldrd	r4, [sp]
   339ec:	ldrd	r6, [sp, #8]
   339f0:	ldrd	r8, [sp, #16]
   339f4:	ldrd	sl, [sp, #24]
   339f8:	add	sp, sp, #32
   339fc:	pop	{pc}		; (ldr pc, [sp], #4)
   33a00:	mov	ip, #1
   33a04:	mov	r3, lr
   33a08:	ldr	r1, [sl, #4]
   33a0c:	movw	r2, #40348	; 0x9d9c
   33a10:	movt	r2, #5
   33a14:	str	lr, [sp]
   33a18:	mov	r0, fp
   33a1c:	str	lr, [sp, #4]
   33a20:	str	ip, [sp, #24]
   33a24:	bl	2c558 <__flatcc_error_report@@Base>
   33a28:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   33a2c:	ldr	r3, [sp, #28]
   33a30:	mov	ip, #0
   33a34:	movw	r2, #40500	; 0x9e34
   33a38:	movt	r2, #5
   33a3c:	mov	r0, fp
   33a40:	ldr	r1, [r3, #4]
   33a44:	mov	r3, ip
   33a48:	str	ip, [sp]
   33a4c:	str	ip, [sp, #4]
   33a50:	ldr	ip, [sp, #44]	; 0x2c
   33a54:	str	ip, [sp, #24]
   33a58:	bl	2c558 <__flatcc_error_report@@Base>
   33a5c:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   33a60:	mov	r3, lr
   33a64:	movw	r2, #37360	; 0x91f0
   33a68:	movt	r2, #5
   33a6c:	mov	r0, fp
   33a70:	ldr	r1, [r4, #4]
   33a74:	str	lr, [sp]
   33a78:	str	lr, [sp, #4]
   33a7c:	bl	2c558 <__flatcc_error_report@@Base>
   33a80:	b	32574 <__flatcc_fb_clear_parser@@Base+0x1488>
   33a84:	ldr	r3, [sp, #8]
   33a88:	movw	r2, #39820	; 0x9b8c
   33a8c:	movt	r2, #5
   33a90:	mov	ip, #0
   33a94:	mov	r0, fp
   33a98:	ldr	r1, [sl, #4]
   33a9c:	ldr	r3, [r3, #4]
   33aa0:	str	ip, [sp]
   33aa4:	str	ip, [sp, #4]
   33aa8:	bl	2c558 <__flatcc_error_report@@Base>
   33aac:	mov	r3, #1
   33ab0:	strh	r3, [sl, #24]
   33ab4:	ldr	sl, [sl]
   33ab8:	cmp	sl, #0
   33abc:	bne	32734 <__flatcc_fb_clear_parser@@Base+0x1648>
   33ac0:	b	329a8 <__flatcc_fb_clear_parser@@Base+0x18bc>
   33ac4:	ldrh	r3, [sl, #72]	; 0x48
   33ac8:	tst	r3, #256	; 0x100
   33acc:	bne	33ee4 <__flatcc_fb_clear_parser@@Base+0x2df8>
   33ad0:	ldr	r7, [fp, #148]	; 0x94
   33ad4:	b	328bc <__flatcc_fb_clear_parser@@Base+0x17d0>
   33ad8:	ldr	r2, [sp, #60]	; 0x3c
   33adc:	cmp	r2, #0
   33ae0:	beq	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   33ae4:	ldr	r1, [sp, #40]	; 0x28
   33ae8:	cmp	r2, #1
   33aec:	ldrh	r3, [r1, #10]
   33af0:	orr	r3, r3, #8
   33af4:	strh	r3, [r1, #10]
   33af8:	beq	33b0c <__flatcc_fb_clear_parser@@Base+0x2a20>
   33afc:	ldr	r3, [fp, #156]	; 0x9c
   33b00:	cmp	r3, #0
   33b04:	str	r3, [sp, #44]	; 0x2c
   33b08:	beq	338c8 <__flatcc_fb_clear_parser@@Base+0x27dc>
   33b0c:	ldr	r3, [sp, #24]
   33b10:	str	r3, [sp, #60]	; 0x3c
   33b14:	b	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   33b18:	cmp	r0, #3
   33b1c:	bne	33bbc <__flatcc_fb_clear_parser@@Base+0x2ad0>
   33b20:	cmp	r3, #13
   33b24:	beq	33f98 <__flatcc_fb_clear_parser@@Base+0x2eac>
   33b28:	ldr	r3, [sp, #8]
   33b2c:	add	r4, sl, #48	; 0x30
   33b30:	mov	r1, sl
   33b34:	mov	r0, fp
   33b38:	ldr	r2, [r3, #40]	; 0x28
   33b3c:	mov	r3, r4
   33b40:	bl	35fe4 <__flatcc_fb_coerce_scalar_type@@Base>
   33b44:	cmp	r0, #0
   33b48:	bne	32f9c <__flatcc_fb_clear_parser@@Base+0x1eb0>
   33b4c:	ldr	r3, [fp, #212]	; 0xd4
   33b50:	cmp	r3, #0
   33b54:	beq	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   33b58:	ldr	r0, [sl, #16]
   33b5c:	mov	r1, r4
   33b60:	add	r0, r0, #72	; 0x48
   33b64:	bl	3e93c <fb_value_set_find_item@@Base>
   33b68:	subs	ip, r0, #0
   33b6c:	bne	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   33b70:	movw	r2, #39996	; 0x9c3c
   33b74:	movt	r2, #5
   33b78:	ldr	r1, [sl, #4]
   33b7c:	mov	r3, ip
   33b80:	b	32f8c <__flatcc_fb_clear_parser@@Base+0x1ea0>
   33b84:	ldr	r1, [sp, #44]	; 0x2c
   33b88:	cmp	r1, #0
   33b8c:	bne	33b9c <__flatcc_fb_clear_parser@@Base+0x2ab0>
   33b90:	ldrh	r2, [sp, #16]
   33b94:	str	r2, [sl, #96]	; 0x60
   33b98:	str	r1, [sl, #100]	; 0x64
   33b9c:	ldr	r2, [sp, #16]
   33ba0:	adds	r2, r2, #1
   33ba4:	str	r2, [sp, #16]
   33ba8:	ldr	r2, [sp, #20]
   33bac:	adc	r2, r2, #0
   33bb0:	cmp	r3, #0
   33bb4:	str	r2, [sp, #20]
   33bb8:	beq	32eec <__flatcc_fb_clear_parser@@Base+0x1e00>
   33bbc:	movw	r2, #39904	; 0x9be0
   33bc0:	movt	r2, #5
   33bc4:	ldr	r1, [sl, #4]
   33bc8:	mov	ip, #0
   33bcc:	b	32f88 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   33bd0:	ldr	r2, [sp, #28]
   33bd4:	movw	ip, #38468	; 0x9644
   33bd8:	movt	ip, #5
   33bdc:	mov	r0, #0
   33be0:	ldr	r1, [r2, #4]
   33be4:	movw	r2, #38548	; 0x9694
   33be8:	movt	r2, #5
   33bec:	cmp	r3, #11
   33bf0:	mov	r3, r0
   33bf4:	str	r0, [sp]
   33bf8:	moveq	r2, ip
   33bfc:	ldr	ip, [sp, #44]	; 0x2c
   33c00:	str	r0, [sp, #4]
   33c04:	mov	r0, fp
   33c08:	str	ip, [sp, #24]
   33c0c:	bl	2c558 <__flatcc_error_report@@Base>
   33c10:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   33c14:	movw	r2, #40168	; 0x9ce8
   33c18:	movt	r2, #5
   33c1c:	ldr	r1, [sl, #4]
   33c20:	mov	ip, #0
   33c24:	mov	r0, fp
   33c28:	ldr	r3, [sl, #16]
   33c2c:	b	33aa0 <__flatcc_fb_clear_parser@@Base+0x29b4>
   33c30:	ldr	ip, [sl, #48]	; 0x30
   33c34:	ldr	r3, [sp, #40]	; 0x28
   33c38:	cmp	ip, #0
   33c3c:	ldr	r4, [r3, #12]
   33c40:	beq	3425c <__flatcc_fb_clear_parser@@Base+0x3170>
   33c44:	mov	r7, #0
   33c48:	mov	r5, ip
   33c4c:	mov	r2, r7
   33c50:	ldr	r9, [sp, #8]
   33c54:	b	33c64 <__flatcc_fb_clear_parser@@Base+0x2b78>
   33c58:	mov	r7, r5
   33c5c:	mov	r2, r1
   33c60:	mov	r5, r3
   33c64:	ldr	r3, [r5]
   33c68:	add	r1, r2, #1
   33c6c:	cmp	r3, #0
   33c70:	bne	33c58 <__flatcc_fb_clear_parser@@Base+0x2b6c>
   33c74:	cmp	r7, #0
   33c78:	str	r9, [sp, #8]
   33c7c:	beq	33d14 <__flatcc_fb_clear_parser@@Base+0x2c28>
   33c80:	sub	r3, r2, #1
   33c84:	cmp	r4, #0
   33c88:	clz	r3, r3
   33c8c:	lsr	r3, r3, #5
   33c90:	moveq	r3, #0
   33c94:	cmp	r3, #0
   33c98:	addne	r3, fp, #524	; 0x20c
   33c9c:	strne	r3, [sp, #8]
   33ca0:	bne	33d28 <__flatcc_fb_clear_parser@@Base+0x2c3c>
   33ca4:	cmp	r2, #1
   33ca8:	moveq	r1, r3
   33cac:	ldr	r3, [sp, #12]
   33cb0:	movne	r1, ip
   33cb4:	cmp	r3, #0
   33cb8:	beq	33d14 <__flatcc_fb_clear_parser@@Base+0x2c28>
   33cbc:	ldr	r0, [fp, #412]	; 0x19c
   33cc0:	cmp	r0, #0
   33cc4:	beq	33d14 <__flatcc_fb_clear_parser@@Base+0x2c28>
   33cc8:	rsb	r2, r2, #1
   33ccc:	bl	2a1ec <fb_scope_table_find@@Base>
   33cd0:	cmp	r0, #0
   33cd4:	beq	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33cd8:	ldr	r3, [r7, #4]
   33cdc:	add	r0, r0, #4
   33ce0:	ldm	r3, {r1, r2}
   33ce4:	bl	29284 <fb_symbol_table_find@@Base>
   33ce8:	subs	r8, r0, #0
   33cec:	beq	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33cf0:	ldrh	r2, [r8, #8]
   33cf4:	cmp	r2, #4
   33cf8:	bhi	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33cfc:	add	r0, fp, #524	; 0x20c
   33d00:	ldr	r1, [r8, #16]
   33d04:	bl	287a4 <ptr_set_find_item@@Base>
   33d08:	cmp	r0, #0
   33d0c:	bne	33d64 <__flatcc_fb_clear_parser@@Base+0x2c78>
   33d10:	ldr	ip, [sl, #48]	; 0x30
   33d14:	movw	r2, #39540	; 0x9a74
   33d18:	movt	r2, #5
   33d1c:	mov	r1, ip
   33d20:	b	33374 <__flatcc_fb_clear_parser@@Base+0x2288>
   33d24:	mov	r4, r0
   33d28:	ldr	r3, [r7, #4]
   33d2c:	add	r0, r4, #4
   33d30:	ldm	r3, {r1, r2}
   33d34:	bl	29284 <fb_symbol_table_find@@Base>
   33d38:	subs	r8, r0, #0
   33d3c:	beq	33da4 <__flatcc_fb_clear_parser@@Base+0x2cb8>
   33d40:	ldrh	r3, [r8, #8]
   33d44:	cmp	r3, #4
   33d48:	bhi	33da4 <__flatcc_fb_clear_parser@@Base+0x2cb8>
   33d4c:	ldr	r0, [sp, #8]
   33d50:	ldr	r1, [r8, #16]
   33d54:	bl	287a4 <ptr_set_find_item@@Base>
   33d58:	cmp	r0, #0
   33d5c:	beq	33da4 <__flatcc_fb_clear_parser@@Base+0x2cb8>
   33d60:	str	r9, [sp, #8]
   33d64:	ldrh	r2, [r8, #8]
   33d68:	cmp	r2, #3
   33d6c:	bne	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33d70:	ldr	r2, [r5, #4]
   33d74:	add	r0, r8, #56	; 0x38
   33d78:	ldm	r2, {r1, r2}
   33d7c:	bl	29284 <fb_symbol_table_find@@Base>
   33d80:	cmp	r0, #0
   33d84:	beq	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33d88:	ldrd	r2, [r0, #48]	; 0x30
   33d8c:	add	r1, sl, #48	; 0x30
   33d90:	strd	r2, [sl, #48]	; 0x30
   33d94:	ldrd	r2, [r0, #56]	; 0x38
   33d98:	strd	r2, [r1, #8]
   33d9c:	uxth	r2, r2
   33da0:	b	32fc4 <__flatcc_fb_clear_parser@@Base+0x1ed8>
   33da4:	ldr	r3, [r4]
   33da8:	cmp	r3, #0
   33dac:	beq	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33db0:	mov	r8, #0
   33db4:	b	33dbc <__flatcc_fb_clear_parser@@Base+0x2cd0>
   33db8:	mov	r8, r2
   33dbc:	ldr	r3, [r3]
   33dc0:	add	r2, r8, #1
   33dc4:	cmp	r3, #0
   33dc8:	bne	33db8 <__flatcc_fb_clear_parser@@Base+0x2ccc>
   33dcc:	ldr	r3, [sp, #12]
   33dd0:	cmp	r3, #0
   33dd4:	beq	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33dd8:	rsb	r8, r8, #0
   33ddc:	ldr	r0, [fp, #412]	; 0x19c
   33de0:	b	33e08 <__flatcc_fb_clear_parser@@Base+0x2d1c>
   33de4:	cmp	r0, #0
   33de8:	beq	33e04 <__flatcc_fb_clear_parser@@Base+0x2d18>
   33dec:	mov	r2, r8
   33df0:	ldr	r1, [r4]
   33df4:	bl	2a1ec <fb_scope_table_find@@Base>
   33df8:	cmp	r0, #0
   33dfc:	bne	33d24 <__flatcc_fb_clear_parser@@Base+0x2c38>
   33e00:	ldr	r0, [fp, #412]	; 0x19c
   33e04:	add	r8, r8, #1
   33e08:	cmp	r8, #0
   33e0c:	bne	33de4 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   33e10:	cmp	r0, #0
   33e14:	beq	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33e18:	mov	r2, r8
   33e1c:	mov	r1, r8
   33e20:	bl	2a1ec <fb_scope_table_find@@Base>
   33e24:	subs	r4, r0, #0
   33e28:	bne	33d28 <__flatcc_fb_clear_parser@@Base+0x2c3c>
   33e2c:	b	33d10 <__flatcc_fb_clear_parser@@Base+0x2c24>
   33e30:	movw	r2, #39636	; 0x9ad4
   33e34:	movt	r2, #5
   33e38:	ldr	r1, [sl, #4]
   33e3c:	mov	ip, #0
   33e40:	b	32f88 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   33e44:	mov	r3, #0
   33e48:	mov	r2, ip
   33e4c:	mov	r8, r1
   33e50:	str	r3, [sp, #28]
   33e54:	b	32b74 <__flatcc_fb_clear_parser@@Base+0x1a88>
   33e58:	mov	r3, #0
   33e5c:	mov	r2, r5
   33e60:	mov	r8, ip
   33e64:	str	r3, [sp, #28]
   33e68:	b	335f4 <__flatcc_fb_clear_parser@@Base+0x2508>
   33e6c:	mov	r2, r5
   33e70:	mov	r8, r1
   33e74:	str	ip, [sp, #28]
   33e78:	b	32b74 <__flatcc_fb_clear_parser@@Base+0x1a88>
   33e7c:	mov	r3, r2
   33e80:	mov	r2, r5
   33e84:	b	335e4 <__flatcc_fb_clear_parser@@Base+0x24f8>
   33e88:	mov	r5, r4
   33e8c:	b	326d4 <__flatcc_fb_clear_parser@@Base+0x15e8>
   33e90:	tst	r5, #1024	; 0x400
   33e94:	beq	32c5c <__flatcc_fb_clear_parser@@Base+0x1b70>
   33e98:	b	32c98 <__flatcc_fb_clear_parser@@Base+0x1bac>
   33e9c:	mov	ip, #0
   33ea0:	movw	r2, #39076	; 0x98a4
   33ea4:	movt	r2, #5
   33ea8:	mov	r3, ip
   33eac:	ldr	r1, [r7, #4]
   33eb0:	mov	r0, fp
   33eb4:	str	ip, [sp]
   33eb8:	str	ip, [sp, #4]
   33ebc:	bl	2c558 <__flatcc_error_report@@Base>
   33ec0:	ldrh	r5, [sl, #72]	; 0x48
   33ec4:	b	32c00 <__flatcc_fb_clear_parser@@Base+0x1b14>
   33ec8:	ldrh	r3, [sl, #72]	; 0x48
   33ecc:	tst	r3, #128	; 0x80
   33ed0:	beq	3299c <__flatcc_fb_clear_parser@@Base+0x18b0>
   33ed4:	ldr	r3, [sp, #60]	; 0x3c
   33ed8:	add	r3, r3, #1
   33edc:	str	r3, [sp, #60]	; 0x3c
   33ee0:	b	3318c <__flatcc_fb_clear_parser@@Base+0x20a0>
   33ee4:	mov	ip, #0
   33ee8:	mov	r0, fp
   33eec:	ldr	r1, [sl, #4]
   33ef0:	mov	r3, ip
   33ef4:	movw	r2, #39764	; 0x9b54
   33ef8:	movt	r2, #5
   33efc:	str	ip, [sp]
   33f00:	str	ip, [sp, #4]
   33f04:	bl	2c558 <__flatcc_error_report@@Base>
   33f08:	ldr	r3, [sp, #8]
   33f0c:	ldrh	r0, [r3, #8]
   33f10:	b	33ad0 <__flatcc_fb_clear_parser@@Base+0x29e4>
   33f14:	mov	r1, r3
   33f18:	mov	r2, #0
   33f1c:	str	sl, [sp, #60]	; 0x3c
   33f20:	mov	r3, #0
   33f24:	strd	r2, [r1, #96]	; 0x60
   33f28:	b	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   33f2c:	movw	r2, #40408	; 0x9dd8
   33f30:	movt	r2, #5
   33f34:	ldr	r1, [sl, #4]
   33f38:	mov	r3, ip
   33f3c:	b	3396c <__flatcc_fb_clear_parser@@Base+0x2880>
   33f40:	mov	r3, r1
   33f44:	str	r1, [sp]
   33f48:	movw	r2, #40656	; 0x9ed0
   33f4c:	movt	r2, #5
   33f50:	str	r1, [sp, #4]
   33f54:	mov	r0, fp
   33f58:	ldr	r1, [sp, #40]	; 0x28
   33f5c:	ldr	r1, [r1, #4]
   33f60:	bl	2c558 <__flatcc_error_report@@Base>
   33f64:	b	33898 <__flatcc_fb_clear_parser@@Base+0x27ac>
   33f68:	mov	r3, #2
   33f6c:	str	r2, [sp, #24]
   33f70:	strb	r3, [r0]
   33f74:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   33f78:	ldr	r2, [sp, #28]
   33f7c:	movw	ip, #38624	; 0x96e0
   33f80:	movt	ip, #5
   33f84:	mov	r0, #0
   33f88:	ldr	r1, [r2, #4]
   33f8c:	movw	r2, #38724	; 0x9744
   33f90:	movt	r2, #5
   33f94:	b	33bec <__flatcc_fb_clear_parser@@Base+0x2b00>
   33f98:	ldr	r3, [sl, #48]	; 0x30
   33f9c:	ldr	r2, [sp, #40]	; 0x28
   33fa0:	cmp	r3, #0
   33fa4:	str	r3, [sp, #88]	; 0x58
   33fa8:	ldr	r4, [r2, #12]
   33fac:	beq	3425c <__flatcc_fb_clear_parser@@Base+0x3170>
   33fb0:	mov	r2, r1
   33fb4:	mov	r1, r3
   33fb8:	ldr	r9, [sp, #8]
   33fbc:	b	33fcc <__flatcc_fb_clear_parser@@Base+0x2ee0>
   33fc0:	mov	r5, r1
   33fc4:	mov	r2, r0
   33fc8:	mov	r1, r3
   33fcc:	ldr	r3, [r1]
   33fd0:	add	r0, r2, #1
   33fd4:	cmp	r3, #0
   33fd8:	bne	33fc0 <__flatcc_fb_clear_parser@@Base+0x2ed4>
   33fdc:	cmp	r5, #0
   33fe0:	str	r9, [sp, #8]
   33fe4:	str	r1, [sp, #92]	; 0x5c
   33fe8:	beq	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   33fec:	sub	r3, r2, #1
   33ff0:	cmp	r4, #0
   33ff4:	clz	r3, r3
   33ff8:	lsr	r3, r3, #5
   33ffc:	moveq	r3, #0
   34000:	cmp	r3, #0
   34004:	bne	340d0 <__flatcc_fb_clear_parser@@Base+0x2fe4>
   34008:	cmp	r2, #1
   3400c:	ldr	r1, [sp, #88]	; 0x58
   34010:	moveq	r1, r3
   34014:	ldr	r3, [sp, #12]
   34018:	cmp	r3, #0
   3401c:	beq	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   34020:	ldr	r0, [fp, #412]	; 0x19c
   34024:	cmp	r0, #0
   34028:	beq	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   3402c:	rsb	r2, r2, #1
   34030:	bl	2a1ec <fb_scope_table_find@@Base>
   34034:	cmp	r0, #0
   34038:	beq	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   3403c:	ldr	r3, [r5, #4]
   34040:	add	r0, r0, #4
   34044:	ldm	r3, {r1, r2}
   34048:	bl	29284 <fb_symbol_table_find@@Base>
   3404c:	subs	r3, r0, #0
   34050:	beq	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   34054:	ldrh	r2, [r3, #8]
   34058:	cmp	r2, #4
   3405c:	bhi	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   34060:	ldr	r1, [r3, #16]
   34064:	ldr	r0, [sp, #68]	; 0x44
   34068:	str	r3, [sp, #68]	; 0x44
   3406c:	bl	287a4 <ptr_set_find_item@@Base>
   34070:	cmp	r0, #0
   34074:	ldr	r3, [sp, #68]	; 0x44
   34078:	beq	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   3407c:	ldrh	r2, [r3, #8]
   34080:	cmp	r2, #3
   34084:	beq	3409c <__flatcc_fb_clear_parser@@Base+0x2fb0>
   34088:	ldr	r3, [sp, #88]	; 0x58
   3408c:	ldr	r3, [r3]
   34090:	cmp	r3, #0
   34094:	bne	341d0 <__flatcc_fb_clear_parser@@Base+0x30e4>
   34098:	ldr	r3, [sp, #8]
   3409c:	add	r0, r3, #56	; 0x38
   340a0:	ldr	r2, [sp, #92]	; 0x5c
   340a4:	ldr	r2, [r2, #4]
   340a8:	ldm	r2, {r1, r2}
   340ac:	bl	29284 <fb_symbol_table_find@@Base>
   340b0:	cmp	r0, #0
   340b4:	beq	341d0 <__flatcc_fb_clear_parser@@Base+0x30e4>
   340b8:	ldrd	r2, [r0, #48]	; 0x30
   340bc:	strd	r2, [sl, #48]	; 0x30
   340c0:	ldrd	r2, [r0, #56]	; 0x38
   340c4:	strd	r2, [sl, #56]	; 0x38
   340c8:	b	32ee0 <__flatcc_fb_clear_parser@@Base+0x1df4>
   340cc:	mov	r4, r0
   340d0:	ldr	r3, [r5, #4]
   340d4:	add	r0, r4, #4
   340d8:	ldm	r3, {r1, r2}
   340dc:	bl	29284 <fb_symbol_table_find@@Base>
   340e0:	subs	r8, r0, #0
   340e4:	beq	34114 <__flatcc_fb_clear_parser@@Base+0x3028>
   340e8:	ldrh	r3, [r8, #8]
   340ec:	cmp	r3, #4
   340f0:	bhi	34114 <__flatcc_fb_clear_parser@@Base+0x3028>
   340f4:	ldr	r1, [r8, #16]
   340f8:	ldr	r0, [sp, #68]	; 0x44
   340fc:	bl	287a4 <ptr_set_find_item@@Base>
   34100:	cmp	r0, #0
   34104:	beq	34114 <__flatcc_fb_clear_parser@@Base+0x3028>
   34108:	mov	r3, r8
   3410c:	str	r9, [sp, #8]
   34110:	b	3407c <__flatcc_fb_clear_parser@@Base+0x2f90>
   34114:	ldr	r3, [r4]
   34118:	cmp	r3, #0
   3411c:	beq	3419c <__flatcc_fb_clear_parser@@Base+0x30b0>
   34120:	mov	r8, #0
   34124:	b	3412c <__flatcc_fb_clear_parser@@Base+0x3040>
   34128:	mov	r8, r2
   3412c:	ldr	r3, [r3]
   34130:	add	r2, r8, #1
   34134:	cmp	r3, #0
   34138:	bne	34128 <__flatcc_fb_clear_parser@@Base+0x303c>
   3413c:	ldr	r3, [sp, #12]
   34140:	cmp	r3, #0
   34144:	beq	3419c <__flatcc_fb_clear_parser@@Base+0x30b0>
   34148:	rsb	r8, r8, #0
   3414c:	ldr	r0, [fp, #412]	; 0x19c
   34150:	b	34178 <__flatcc_fb_clear_parser@@Base+0x308c>
   34154:	cmp	r0, #0
   34158:	beq	34174 <__flatcc_fb_clear_parser@@Base+0x3088>
   3415c:	mov	r2, r8
   34160:	ldr	r1, [r4]
   34164:	bl	2a1ec <fb_scope_table_find@@Base>
   34168:	cmp	r0, #0
   3416c:	bne	340cc <__flatcc_fb_clear_parser@@Base+0x2fe0>
   34170:	ldr	r0, [fp, #412]	; 0x19c
   34174:	add	r8, r8, #1
   34178:	cmp	r8, #0
   3417c:	bne	34154 <__flatcc_fb_clear_parser@@Base+0x3068>
   34180:	cmp	r0, #0
   34184:	beq	3419c <__flatcc_fb_clear_parser@@Base+0x30b0>
   34188:	mov	r2, r8
   3418c:	mov	r1, r8
   34190:	bl	2a1ec <fb_scope_table_find@@Base>
   34194:	subs	r4, r0, #0
   34198:	bne	340d0 <__flatcc_fb_clear_parser@@Base+0x2fe4>
   3419c:	str	r9, [sp, #8]
   341a0:	b	34088 <__flatcc_fb_clear_parser@@Base+0x2f9c>
   341a4:	ldr	r3, [r3, #4]
   341a8:	movw	r2, #39212	; 0x992c
   341ac:	movt	r2, #5
   341b0:	mov	ip, #0
   341b4:	mov	r0, fp
   341b8:	ldr	r1, [r7, #4]
   341bc:	str	ip, [sp]
   341c0:	str	ip, [sp, #4]
   341c4:	bl	2c558 <__flatcc_error_report@@Base>
   341c8:	ldrh	r5, [sl, #72]	; 0x48
   341cc:	b	32c00 <__flatcc_fb_clear_parser@@Base+0x1b14>
   341d0:	movw	r2, #39948	; 0x9c0c
   341d4:	movt	r2, #5
   341d8:	ldr	r1, [sl, #48]	; 0x30
   341dc:	b	33374 <__flatcc_fb_clear_parser@@Base+0x2288>
   341e0:	movw	r2, #39168	; 0x9900
   341e4:	movt	r2, #5
   341e8:	ldr	r3, [r3, #4]
   341ec:	b	341b4 <__flatcc_fb_clear_parser@@Base+0x30c8>
   341f0:	ldr	r3, [sp, #60]	; 0x3c
   341f4:	cmp	r3, #0
   341f8:	beq	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   341fc:	ldr	r2, [sp, #40]	; 0x28
   34200:	ldr	r1, [sp, #60]	; 0x3c
   34204:	ldrh	r3, [r2, #10]
   34208:	cmp	r1, #1
   3420c:	orr	r3, r3, #8
   34210:	strh	r3, [r2, #10]
   34214:	bne	329d8 <__flatcc_fb_clear_parser@@Base+0x18ec>
   34218:	ldr	r3, [sp, #44]	; 0x2c
   3421c:	str	r3, [sp, #60]	; 0x3c
   34220:	b	339e0 <__flatcc_fb_clear_parser@@Base+0x28f4>
   34224:	movw	r1, #36548	; 0x8ec4
   34228:	movt	r1, #5
   3422c:	ldr	r3, [pc, #144]	; 342c4 <__flatcc_fb_clear_parser@@Base+0x31d8>
   34230:	movw	r0, #7900	; 0x1edc
   34234:	movt	r0, #4
   34238:	movw	r2, #769	; 0x301
   3423c:	bl	14120 <__assert_fail@plt>
   34240:	movw	r1, #36548	; 0x8ec4
   34244:	movt	r1, #5
   34248:	ldr	r3, [pc, #116]	; 342c4 <__flatcc_fb_clear_parser@@Base+0x31d8>
   3424c:	movw	r0, #38984	; 0x9848
   34250:	movt	r0, #5
   34254:	movw	r2, #770	; 0x302
   34258:	bl	14120 <__assert_fail@plt>
   3425c:	movw	r1, #36548	; 0x8ec4
   34260:	movt	r1, #5
   34264:	ldr	r3, [pc, #92]	; 342c8 <__flatcc_fb_clear_parser@@Base+0x31dc>
   34268:	movw	r0, #39536	; 0x9a70
   3426c:	movt	r0, #5
   34270:	movw	r2, #347	; 0x15b
   34274:	bl	14120 <__assert_fail@plt>
   34278:	ldr	r3, [sp, #24]
   3427c:	str	r3, [sp, #44]	; 0x2c
   34280:	b	338c8 <__flatcc_fb_clear_parser@@Base+0x27dc>
   34284:	ldr	r3, [sp, #44]	; 0x2c
   34288:	str	r3, [sp, #24]
   3428c:	b	3316c <__flatcc_fb_clear_parser@@Base+0x2080>
   34290:	ldr	r3, [sp, #8]
   34294:	movw	r2, #39864	; 0x9bb8
   34298:	movt	r2, #5
   3429c:	mov	ip, #0
   342a0:	mov	r0, fp
   342a4:	ldr	r1, [sl, #4]
   342a8:	ldr	r3, [r3, #4]
   342ac:	b	33aa0 <__flatcc_fb_clear_parser@@Base+0x29b4>
   342b0:	movw	r2, #40244	; 0x9d34
   342b4:	movt	r2, #5
   342b8:	ldr	r1, [sl, #4]
   342bc:	mov	ip, #0
   342c0:	b	32f88 <__flatcc_fb_clear_parser@@Base+0x1e9c>
   342c4:	andeq	r8, r5, ip, lsr #28
   342c8:	andeq	r8, r5, ip, lsr lr

000342cc <__flatcc_fb_build_schema@@Base>:
   342cc:	add	r3, r0, #524	; 0x20c
   342d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   342d4:	strd	r6, [sp, #8]
   342d8:	strd	r8, [sp, #16]
   342dc:	strd	sl, [sp, #24]
   342e0:	add	sl, r0, #352	; 0x160
   342e4:	mov	fp, r0
   342e8:	str	lr, [sp, #32]
   342ec:	sub	sp, sp, #140	; 0x8c
   342f0:	mov	r1, sl
   342f4:	mov	r0, r3
   342f8:	str	r3, [sp, #24]
   342fc:	bl	287a4 <ptr_set_find_item@@Base>
   34300:	cmp	r0, #0
   34304:	beq	35f80 <__flatcc_fb_build_schema@@Base+0x1cb4>
   34308:	ldr	r4, [fp, #392]	; 0x188
   3430c:	cmp	r4, #0
   34310:	beq	343e8 <__flatcc_fb_build_schema@@Base+0x11c>
   34314:	movw	r5, #403	; 0x193
   34318:	movt	r5, #256	; 0x100
   3431c:	movw	r6, #40389	; 0x9dc5
   34320:	movt	r6, #33052	; 0x811c
   34324:	b	34334 <__flatcc_fb_build_schema@@Base+0x68>
   34328:	ldr	r4, [r4]
   3432c:	cmp	r4, #0
   34330:	beq	343e8 <__flatcc_fb_build_schema@@Base+0x11c>
   34334:	ldrh	r3, [r4, #8]
   34338:	cmp	r3, #4
   3433c:	bhi	34328 <__flatcc_fb_build_schema@@Base+0x5c>
   34340:	ldr	r3, [r4, #4]
   34344:	ldr	r0, [r4, #12]
   34348:	ldm	r3, {r1, r7}
   3434c:	cmp	r0, #0
   34350:	beq	34ccc <__flatcc_fb_build_schema@@Base+0xa00>
   34354:	ldr	lr, [r0]
   34358:	cmp	lr, #0
   3435c:	bne	351d8 <__flatcc_fb_build_schema@@Base+0xf0c>
   34360:	cmp	r7, #0
   34364:	beq	35230 <__flatcc_fb_build_schema@@Base+0xf64>
   34368:	movw	r3, #40389	; 0x9dc5
   3436c:	movt	r3, #33052	; 0x811c
   34370:	add	ip, r1, r7
   34374:	ldrb	r2, [r1], #1
   34378:	eor	r3, r3, r2
   3437c:	cmp	r1, ip
   34380:	mul	r3, r5, r3
   34384:	bne	34374 <__flatcc_fb_build_schema@@Base+0xa8>
   34388:	cmp	r3, #0
   3438c:	str	sl, [r4, #16]
   34390:	moveq	r3, r6
   34394:	cmp	r0, #0
   34398:	str	r3, [r4, #88]	; 0x58
   3439c:	beq	34328 <__flatcc_fb_build_schema@@Base+0x5c>
   343a0:	add	r0, r0, #4
   343a4:	mov	r2, #1
   343a8:	mov	r1, r4
   343ac:	bl	29044 <fb_symbol_table_insert_item@@Base>
   343b0:	cmp	r0, #0
   343b4:	beq	34328 <__flatcc_fb_build_schema@@Base+0x5c>
   343b8:	mov	ip, #0
   343bc:	movw	r2, #40848	; 0x9f90
   343c0:	movt	r2, #5
   343c4:	ldr	r3, [r0, #4]
   343c8:	mov	r0, fp
   343cc:	ldr	r1, [r4, #4]
   343d0:	str	ip, [sp]
   343d4:	str	ip, [sp, #4]
   343d8:	bl	2c558 <__flatcc_error_report@@Base>
   343dc:	ldr	r4, [r4]
   343e0:	cmp	r4, #0
   343e4:	bne	34334 <__flatcc_fb_build_schema@@Base+0x68>
   343e8:	ldr	r4, [fp, #356]	; 0x164
   343ec:	cmp	r4, #0
   343f0:	beq	34448 <__flatcc_fb_build_schema@@Base+0x17c>
   343f4:	movw	r5, #40876	; 0x9fac
   343f8:	movt	r5, #5
   343fc:	ldr	r0, [fp, #412]	; 0x19c
   34400:	mov	r2, #1
   34404:	mov	r1, r4
   34408:	add	r0, r0, #16
   3440c:	bl	3db18 <fb_name_table_insert_item@@Base>
   34410:	cmp	r0, #0
   34414:	beq	344f0 <__flatcc_fb_build_schema@@Base+0x224>
   34418:	ldr	ip, [r4, #12]
   3441c:	mov	r3, #0
   34420:	mov	r2, r5
   34424:	mov	r1, r3
   34428:	mov	r0, fp
   3442c:	str	ip, [sp, #4]
   34430:	ldr	ip, [r4, #8]
   34434:	str	ip, [sp]
   34438:	bl	2c558 <__flatcc_error_report@@Base>
   3443c:	ldr	r4, [r4]
   34440:	cmp	r4, #0
   34444:	bne	343fc <__flatcc_fb_build_schema@@Base+0x130>
   34448:	ldr	r5, [pc, #4064]	; 35430 <__flatcc_fb_build_schema@@Base+0x1164>
   3444c:	mov	r7, #0
   34450:	mov	r6, #2
   34454:	b	344a8 <__flatcc_fb_build_schema@@Base+0x1dc>
   34458:	ldr	r2, [r5], #4
   3445c:	str	r3, [fp, #52]	; 0x34
   34460:	mov	r0, r2
   34464:	str	r2, [r4, #8]
   34468:	str	r7, [r4, #24]
   3446c:	bl	14054 <strlen@plt>
   34470:	ldr	r3, [fp, #412]	; 0x19c
   34474:	mov	ip, #0
   34478:	mov	r1, r4
   3447c:	mov	r2, #1
   34480:	str	ip, [r4]
   34484:	str	r0, [r4, #12]
   34488:	strh	r6, [r4, #16]
   3448c:	add	r0, r3, #16
   34490:	bl	3db18 <fb_name_table_insert_item@@Base>
   34494:	cmp	r0, #0
   34498:	strne	r7, [r0, #24]
   3449c:	add	r7, r7, #1
   344a0:	cmp	r7, #12
   344a4:	beq	34500 <__flatcc_fb_build_schema@@Base+0x234>
   344a8:	ldr	r2, [fp, #44]	; 0x2c
   344ac:	ldr	r4, [fp, #52]	; 0x34
   344b0:	add	r3, r4, #32
   344b4:	cmp	r3, r2
   344b8:	bls	34458 <__flatcc_fb_build_schema@@Base+0x18c>
   344bc:	mov	r1, #1
   344c0:	mov	r0, #65536	; 0x10000
   344c4:	bl	13f7c <calloc@plt>
   344c8:	cmp	r0, #0
   344cc:	beq	35f3c <__flatcc_fb_build_schema@@Base+0x1c70>
   344d0:	ldr	r2, [fp, #48]	; 0x30
   344d4:	add	r1, r0, #65536	; 0x10000
   344d8:	add	r4, r0, #16
   344dc:	add	r3, r0, #48	; 0x30
   344e0:	str	r1, [fp, #44]	; 0x2c
   344e4:	str	r0, [fp, #48]	; 0x30
   344e8:	str	r2, [r0]
   344ec:	b	34458 <__flatcc_fb_build_schema@@Base+0x18c>
   344f0:	ldr	r4, [r4]
   344f4:	cmp	r4, #0
   344f8:	bne	343fc <__flatcc_fb_build_schema@@Base+0x130>
   344fc:	b	34448 <__flatcc_fb_build_schema@@Base+0x17c>
   34500:	ldr	r3, [fp, #184]	; 0xb8
   34504:	ldr	r9, [fp, #392]	; 0x188
   34508:	cmp	r3, #0
   3450c:	bne	3454c <__flatcc_fb_build_schema@@Base+0x280>
   34510:	cmp	r9, #0
   34514:	beq	35ec0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   34518:	mov	r4, #1
   3451c:	ldrh	r3, [r9, #8]
   34520:	cmp	r3, #3
   34524:	bne	3453c <__flatcc_fb_build_schema@@Base+0x270>
   34528:	mov	r1, r9
   3452c:	mov	r0, fp
   34530:	bl	317a0 <__flatcc_fb_clear_parser@@Base+0x6b4>
   34534:	cmp	r0, #0
   34538:	strhne	r4, [r9, #48]	; 0x30
   3453c:	ldr	r9, [r9]
   34540:	cmp	r9, #0
   34544:	bne	3451c <__flatcc_fb_build_schema@@Base+0x250>
   34548:	ldr	r9, [fp, #392]	; 0x188
   3454c:	cmp	r9, #0
   34550:	beq	35ec0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   34554:	movw	r3, #36144	; 0x8d30
   34558:	movt	r3, #5
   3455c:	str	sl, [sp, #16]
   34560:	mov	sl, r9
   34564:	str	r3, [sp, #12]
   34568:	ldrh	r3, [sl, #8]
   3456c:	cmp	r3, #4
   34570:	ldrls	pc, [pc, r3, lsl #2]
   34574:	b	35fb8 <__flatcc_fb_build_schema@@Base+0x1cec>
   34578:	ldrdeq	r4, [r3], -ip
   3457c:	andeq	r4, r3, ip, lsr fp
   34580:	ldrdeq	r4, [r3], -ip
   34584:	andeq	r4, r3, ip, lsl #22
   34588:	andeq	r4, r3, r8, lsl fp
   3458c:	cmp	r4, #0
   34590:	beq	345b4 <__flatcc_fb_build_schema@@Base+0x2e8>
   34594:	movw	r2, #37560	; 0x92b8
   34598:	movt	r2, #5
   3459c:	ldr	r1, [r4, #4]
   345a0:	mov	r3, ip
   345a4:	mov	r0, fp
   345a8:	str	ip, [sp]
   345ac:	str	ip, [sp, #4]
   345b0:	bl	2c558 <__flatcc_error_report@@Base>
   345b4:	ldrh	r3, [r7, #24]
   345b8:	strh	r5, [r7, #72]	; 0x48
   345bc:	cmp	r3, #8
   345c0:	beq	35260 <__flatcc_fb_build_schema@@Base+0xf94>
   345c4:	cmp	r3, #12
   345c8:	bne	35180 <__flatcc_fb_build_schema@@Base+0xeb4>
   345cc:	ldr	ip, [r7, #16]
   345d0:	ldr	r3, [sp, #28]
   345d4:	cmp	ip, #0
   345d8:	ldr	r4, [r3, #12]
   345dc:	beq	34658 <__flatcc_fb_build_schema@@Base+0x38c>
   345e0:	mov	r5, ip
   345e4:	mov	r2, #0
   345e8:	b	345f4 <__flatcc_fb_build_schema@@Base+0x328>
   345ec:	mov	r2, r0
   345f0:	mov	r5, r3
   345f4:	ldr	r3, [r5]
   345f8:	add	r0, r2, #1
   345fc:	cmp	r3, #0
   34600:	bne	345ec <__flatcc_fb_build_schema@@Base+0x320>
   34604:	sub	r3, r0, #1
   34608:	cmp	r4, #0
   3460c:	clz	r3, r3
   34610:	lsr	r3, r3, #5
   34614:	moveq	r3, #0
   34618:	cmp	r3, #0
   3461c:	bne	34f6c <__flatcc_fb_build_schema@@Base+0xca0>
   34620:	cmp	r0, #1
   34624:	moveq	r1, r3
   34628:	ldr	r3, [sp, #16]
   3462c:	movne	r1, ip
   34630:	cmp	r3, #0
   34634:	beq	34658 <__flatcc_fb_build_schema@@Base+0x38c>
   34638:	ldr	r0, [fp, #412]	; 0x19c
   3463c:	cmp	r0, #0
   34640:	beq	34658 <__flatcc_fb_build_schema@@Base+0x38c>
   34644:	rsb	r2, r2, #0
   34648:	bl	2a1ec <fb_scope_table_find@@Base>
   3464c:	cmp	r0, #0
   34650:	bne	35bcc <__flatcc_fb_build_schema@@Base+0x1900>
   34654:	ldr	ip, [r7, #16]
   34658:	mov	r3, r7
   3465c:	mov	r1, ip
   34660:	movw	r2, #41096	; 0xa088
   34664:	movt	r2, #5
   34668:	mov	r0, fp
   3466c:	bl	2dde4 <error_ref_sym@@Base>
   34670:	mov	r3, #1
   34674:	strh	r3, [r7, #24]
   34678:	ldr	r7, [r7]
   3467c:	cmp	r7, #0
   34680:	bne	34d80 <__flatcc_fb_build_schema@@Base+0xab4>
   34684:	ldr	sl, [sp, #28]
   34688:	ldr	r2, [sp, #36]	; 0x24
   3468c:	cmp	r2, #0
   34690:	beq	346dc <__flatcc_fb_build_schema@@Base+0x410>
   34694:	ldrh	r3, [sl, #10]
   34698:	cmp	r2, #1
   3469c:	orr	r3, r3, #8
   346a0:	strh	r3, [sl, #10]
   346a4:	beq	346dc <__flatcc_fb_build_schema@@Base+0x410>
   346a8:	ldr	r3, [fp, #156]	; 0x9c
   346ac:	cmp	r3, #0
   346b0:	bne	346dc <__flatcc_fb_build_schema@@Base+0x410>
   346b4:	movw	r2, #40732	; 0x9f1c
   346b8:	movt	r2, #5
   346bc:	str	r7, [sp]
   346c0:	mov	r3, r7
   346c4:	mov	r0, fp
   346c8:	str	r7, [sp, #4]
   346cc:	ldr	r1, [sl, #4]
   346d0:	bl	2c558 <__flatcc_error_report@@Base>
   346d4:	mov	r3, #1
   346d8:	strh	r3, [sl, #48]	; 0x30
   346dc:	ldr	sl, [sl]
   346e0:	cmp	sl, #0
   346e4:	bne	34568 <__flatcc_fb_build_schema@@Base+0x29c>
   346e8:	ldr	r4, [fp, #392]	; 0x188
   346ec:	ldr	sl, [sp, #16]
   346f0:	cmp	r4, #0
   346f4:	beq	35ec0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   346f8:	ldrh	r5, [r4, #8]
   346fc:	cmp	r5, #1
   34700:	bne	34724 <__flatcc_fb_build_schema@@Base+0x458>
   34704:	ldrh	r3, [r4, #48]	; 0x30
   34708:	cmp	r3, #1
   3470c:	beq	34724 <__flatcc_fb_build_schema@@Base+0x458>
   34710:	mov	r1, r4
   34714:	mov	r0, fp
   34718:	bl	31218 <__flatcc_fb_clear_parser@@Base+0x12c>
   3471c:	cmp	r0, #0
   34720:	strhne	r5, [r4, #48]	; 0x30
   34724:	ldr	r4, [r4]
   34728:	cmp	r4, #0
   3472c:	bne	346f8 <__flatcc_fb_build_schema@@Base+0x42c>
   34730:	ldr	r9, [fp, #392]	; 0x188
   34734:	cmp	r9, #0
   34738:	beq	35ec0 <__flatcc_fb_build_schema@@Base+0x1bf4>
   3473c:	movw	r3, #36144	; 0x8d30
   34740:	movt	r3, #5
   34744:	str	r3, [sp, #20]
   34748:	mov	r3, r9
   3474c:	mov	r9, sl
   34750:	mov	sl, r3
   34754:	ldrh	r3, [sl, #8]
   34758:	cmp	r3, #0
   3475c:	beq	35994 <__flatcc_fb_build_schema@@Base+0x16c8>
   34760:	cmp	r3, #2
   34764:	bne	349f4 <__flatcc_fb_build_schema@@Base+0x728>
   34768:	ldrh	ip, [sl, #48]	; 0x30
   3476c:	cmp	ip, #1
   34770:	beq	349f4 <__flatcc_fb_build_schema@@Base+0x728>
   34774:	cmp	ip, #0
   34778:	bne	35f9c <__flatcc_fb_build_schema@@Base+0x1cd0>
   3477c:	ldr	r3, [sl, #28]
   34780:	cmp	r3, #0
   34784:	beq	347a8 <__flatcc_fb_build_schema@@Base+0x4dc>
   34788:	movw	r2, #41488	; 0xa210
   3478c:	movt	r2, #5
   34790:	ldr	r1, [sl, #4]
   34794:	mov	r3, ip
   34798:	mov	r0, fp
   3479c:	str	ip, [sp]
   347a0:	str	ip, [sp, #4]
   347a4:	bl	2c558 <__flatcc_error_report@@Base>
   347a8:	ldr	r4, [sl, #20]
   347ac:	cmp	r4, #0
   347b0:	beq	349f4 <__flatcc_fb_build_schema@@Base+0x728>
   347b4:	movw	r3, #41684	; 0xa2d4
   347b8:	movt	r3, #5
   347bc:	str	sl, [sp, #16]
   347c0:	str	r3, [sp, #36]	; 0x24
   347c4:	add	r3, sl, #56	; 0x38
   347c8:	ldr	sl, [sp, #24]
   347cc:	str	r3, [sp, #12]
   347d0:	mov	r2, #1
   347d4:	mov	r1, r4
   347d8:	ldr	r0, [sp, #12]
   347dc:	bl	29044 <fb_symbol_table_insert_item@@Base>
   347e0:	subs	ip, r0, #0
   347e4:	bne	358c4 <__flatcc_fb_build_schema@@Base+0x15f8>
   347e8:	ldrh	r3, [r4, #8]
   347ec:	cmp	r3, #5
   347f0:	bne	35dc8 <__flatcc_fb_build_schema@@Base+0x1afc>
   347f4:	ldrh	r3, [r4, #56]	; 0x38
   347f8:	cmp	r3, #0
   347fc:	bne	35970 <__flatcc_fb_build_schema@@Base+0x16a4>
   34800:	ldrh	r3, [r4, #24]
   34804:	cmp	r3, #1
   34808:	beq	349e4 <__flatcc_fb_build_schema@@Base+0x718>
   3480c:	cmp	r3, #12
   34810:	beq	34838 <__flatcc_fb_build_schema@@Base+0x56c>
   34814:	mov	ip, #0
   34818:	movw	r2, #41620	; 0xa294
   3481c:	movt	r2, #5
   34820:	mov	r3, ip
   34824:	ldr	r1, [r4, #4]
   34828:	mov	r0, fp
   3482c:	str	ip, [sp]
   34830:	str	ip, [sp, #4]
   34834:	bl	2c558 <__flatcc_error_report@@Base>
   34838:	ldr	ip, [r4, #32]
   3483c:	ldr	r3, [sp, #16]
   34840:	cmp	ip, #0
   34844:	ldr	r5, [r3, #12]
   34848:	beq	35404 <__flatcc_fb_build_schema@@Base+0x1138>
   3484c:	mov	r6, ip
   34850:	mov	r2, #0
   34854:	b	34860 <__flatcc_fb_build_schema@@Base+0x594>
   34858:	mov	r2, r0
   3485c:	mov	r6, r3
   34860:	ldr	r3, [r6]
   34864:	add	r0, r2, #1
   34868:	cmp	r3, #0
   3486c:	bne	34858 <__flatcc_fb_build_schema@@Base+0x58c>
   34870:	sub	r3, r0, #1
   34874:	cmp	r5, #0
   34878:	clz	r3, r3
   3487c:	lsr	r3, r3, #5
   34880:	moveq	r3, #0
   34884:	cmp	r3, #0
   34888:	bne	35344 <__flatcc_fb_build_schema@@Base+0x1078>
   3488c:	cmp	r0, #1
   34890:	moveq	r1, r3
   34894:	movne	r1, ip
   34898:	cmp	r9, #0
   3489c:	beq	35404 <__flatcc_fb_build_schema@@Base+0x1138>
   348a0:	ldr	r0, [fp, #412]	; 0x19c
   348a4:	cmp	r0, #0
   348a8:	beq	35404 <__flatcc_fb_build_schema@@Base+0x1138>
   348ac:	rsb	r2, r2, #0
   348b0:	bl	2a1ec <fb_scope_table_find@@Base>
   348b4:	cmp	r0, #0
   348b8:	beq	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   348bc:	ldr	r3, [r6, #4]
   348c0:	add	r0, r0, #4
   348c4:	ldm	r3, {r1, r2}
   348c8:	bl	29284 <fb_symbol_table_find@@Base>
   348cc:	subs	r7, r0, #0
   348d0:	beq	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   348d4:	ldrh	r3, [r7, #8]
   348d8:	cmp	r3, #4
   348dc:	bhi	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   348e0:	mov	r0, sl
   348e4:	ldr	r1, [r7, #16]
   348e8:	bl	287a4 <ptr_set_find_item@@Base>
   348ec:	cmp	r0, #0
   348f0:	beq	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   348f4:	ldrh	r2, [r7, #8]
   348f8:	cmp	r2, #0
   348fc:	bne	35a2c <__flatcc_fb_build_schema@@Base+0x1760>
   34900:	mov	r3, #14
   34904:	ldr	ip, [r4, #16]
   34908:	str	r7, [r4, #32]
   3490c:	strh	r3, [r4, #40]	; 0x28
   34910:	ldr	r3, [sp, #16]
   34914:	cmp	ip, #0
   34918:	ldr	r5, [r3, #12]
   3491c:	beq	349c4 <__flatcc_fb_build_schema@@Base+0x6f8>
   34920:	mov	r6, ip
   34924:	b	34930 <__flatcc_fb_build_schema@@Base+0x664>
   34928:	mov	r2, r0
   3492c:	mov	r6, r3
   34930:	ldr	r3, [r6]
   34934:	add	r0, r2, #1
   34938:	cmp	r3, #0
   3493c:	bne	34928 <__flatcc_fb_build_schema@@Base+0x65c>
   34940:	sub	r1, r0, #1
   34944:	cmp	r5, #0
   34948:	clz	r1, r1
   3494c:	lsr	r1, r1, #5
   34950:	moveq	r1, #0
   34954:	cmp	r1, #0
   34958:	bne	35444 <__flatcc_fb_build_schema@@Base+0x1178>
   3495c:	cmp	r0, #1
   34960:	movne	r1, ip
   34964:	cmp	r9, #0
   34968:	beq	349c4 <__flatcc_fb_build_schema@@Base+0x6f8>
   3496c:	ldr	r0, [fp, #412]	; 0x19c
   34970:	cmp	r0, #0
   34974:	beq	349c4 <__flatcc_fb_build_schema@@Base+0x6f8>
   34978:	rsb	r2, r2, #0
   3497c:	bl	2a1ec <fb_scope_table_find@@Base>
   34980:	cmp	r0, #0
   34984:	beq	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   34988:	ldr	r3, [r6, #4]
   3498c:	add	r0, r0, #4
   34990:	ldm	r3, {r1, r2}
   34994:	bl	29284 <fb_symbol_table_find@@Base>
   34998:	subs	r7, r0, #0
   3499c:	beq	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   349a0:	ldrh	r3, [r7, #8]
   349a4:	cmp	r3, #4
   349a8:	bhi	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   349ac:	mov	r0, sl
   349b0:	ldr	r1, [r7, #16]
   349b4:	bl	287a4 <ptr_set_find_item@@Base>
   349b8:	cmp	r0, #0
   349bc:	bne	3547c <__flatcc_fb_build_schema@@Base+0x11b0>
   349c0:	ldr	ip, [r4, #16]
   349c4:	mov	r3, r4
   349c8:	mov	r1, ip
   349cc:	movw	r2, #41792	; 0xa340
   349d0:	movt	r2, #5
   349d4:	mov	r0, fp
   349d8:	bl	2dde4 <error_ref_sym@@Base>
   349dc:	mov	r3, #1
   349e0:	strh	r3, [r4, #24]
   349e4:	ldr	r4, [r4]
   349e8:	cmp	r4, #0
   349ec:	bne	347d0 <__flatcc_fb_build_schema@@Base+0x504>
   349f0:	ldr	sl, [sp, #16]
   349f4:	ldr	sl, [sl]
   349f8:	cmp	sl, #0
   349fc:	bne	34754 <__flatcc_fb_build_schema@@Base+0x488>
   34a00:	mov	sl, r9
   34a04:	ldr	r0, [fp, #392]	; 0x188
   34a08:	ldr	r3, [fp, #396]	; 0x18c
   34a0c:	cmp	r3, #0
   34a10:	beq	34a34 <__flatcc_fb_build_schema@@Base+0x768>
   34a14:	mov	r1, #0
   34a18:	b	34a20 <__flatcc_fb_build_schema@@Base+0x754>
   34a1c:	mov	r3, r2
   34a20:	ldr	r2, [r3, #120]	; 0x78
   34a24:	str	r1, [r3, #120]	; 0x78
   34a28:	mov	r1, r3
   34a2c:	cmp	r2, #0
   34a30:	bne	34a1c <__flatcc_fb_build_schema@@Base+0x750>
   34a34:	cmp	r0, #0
   34a38:	str	r3, [fp, #396]	; 0x18c
   34a3c:	beq	357fc <__flatcc_fb_build_schema@@Base+0x1530>
   34a40:	mov	ip, #0
   34a44:	mov	lr, ip
   34a48:	ldrh	r2, [r0, #8]
   34a4c:	cmp	r2, #0
   34a50:	bne	357f0 <__flatcc_fb_build_schema@@Base+0x1524>
   34a54:	ldrh	r3, [r0, #92]	; 0x5c
   34a58:	ldr	r1, [r0, #20]
   34a5c:	ands	r3, r3, #8
   34a60:	bne	35acc <__flatcc_fb_build_schema@@Base+0x1800>
   34a64:	cmp	r1, #0
   34a68:	str	r3, [sp, #52]	; 0x34
   34a6c:	movne	r4, r1
   34a70:	str	r3, [sp, #56]	; 0x38
   34a74:	str	r3, [sp, #60]	; 0x3c
   34a78:	str	r3, [sp, #64]	; 0x40
   34a7c:	str	r3, [sp, #68]	; 0x44
   34a80:	str	r3, [sp, #72]	; 0x48
   34a84:	str	r3, [sp, #76]	; 0x4c
   34a88:	str	r3, [sp, #80]	; 0x50
   34a8c:	str	r3, [sp, #84]	; 0x54
   34a90:	str	r3, [sp, #88]	; 0x58
   34a94:	str	r3, [sp, #92]	; 0x5c
   34a98:	str	r3, [sp, #96]	; 0x60
   34a9c:	str	r3, [sp, #100]	; 0x64
   34aa0:	str	r3, [sp, #104]	; 0x68
   34aa4:	str	r3, [sp, #108]	; 0x6c
   34aa8:	str	r3, [sp, #112]	; 0x70
   34aac:	str	r3, [sp, #116]	; 0x74
   34ab0:	str	r3, [sp, #120]	; 0x78
   34ab4:	beq	356ac <__flatcc_fb_build_schema@@Base+0x13e0>
   34ab8:	ldrh	r2, [r4, #24]
   34abc:	ldrh	r3, [r4, #74]	; 0x4a
   34ac0:	sub	r2, r2, #1
   34ac4:	cmp	r2, #14
   34ac8:	ldrls	pc, [pc, r2, lsl #2]
   34acc:	b	3564c <__flatcc_fb_build_schema@@Base+0x1380>
   34ad0:	andeq	r5, r3, r0, asr #15
   34ad4:	andeq	r5, r3, ip, asr #12
   34ad8:	andeq	r5, r3, ip, asr #12
   34adc:	andeq	r5, r3, ip, asr #12
   34ae0:	andeq	r5, r3, ip, asr #12
   34ae4:	andeq	r5, r3, ip, asr #12
   34ae8:	andeq	r5, r3, r8, asr #12
   34aec:	andeq	r5, r3, ip, asr #12
   34af0:	andeq	r5, r3, r8, asr #12
   34af4:	andeq	r5, r3, r8, asr #12
   34af8:	andeq	r5, r3, ip, asr #12
   34afc:	andeq	r5, r3, ip, asr #12
   34b00:	andeq	r5, r3, ip, asr #12
   34b04:	andeq	r5, r3, r0, lsr r6
   34b08:	andeq	r5, r3, r8, asr #12
   34b0c:	ldr	r3, [fp, #184]	; 0xb8
   34b10:	cmp	r3, #0
   34b14:	beq	346dc <__flatcc_fb_build_schema@@Base+0x410>
   34b18:	mov	r1, sl
   34b1c:	mov	r0, fp
   34b20:	bl	317a0 <__flatcc_fb_clear_parser@@Base+0x6b4>
   34b24:	cmp	r0, #0
   34b28:	bne	346d4 <__flatcc_fb_build_schema@@Base+0x408>
   34b2c:	ldr	sl, [sl]
   34b30:	cmp	sl, #0
   34b34:	bne	34568 <__flatcc_fb_build_schema@@Base+0x29c>
   34b38:	b	346e8 <__flatcc_fb_build_schema@@Base+0x41c>
   34b3c:	ldrh	r5, [sl, #48]	; 0x30
   34b40:	cmp	r5, #0
   34b44:	bne	35ed4 <__flatcc_fb_build_schema@@Base+0x1c08>
   34b48:	ldr	r4, [sl, #28]
   34b4c:	mov	r2, #0
   34b50:	mov	r3, #0
   34b54:	add	r9, sp, #88	; 0x58
   34b58:	strd	r2, [sp, #88]	; 0x58
   34b5c:	strd	r2, [r9, #8]
   34b60:	strd	r2, [r9, #16]
   34b64:	cmp	r4, #0
   34b68:	strd	r2, [r9, #24]
   34b6c:	strd	r2, [r9, #32]
   34b70:	strheq	r4, [sl, #92]	; 0x5c
   34b74:	strd	r2, [r9, #40]	; 0x28
   34b78:	beq	34d60 <__flatcc_fb_build_schema@@Base+0xa94>
   34b7c:	movw	r7, #37516	; 0x928c
   34b80:	movt	r7, #5
   34b84:	movw	r8, #37480	; 0x9268
   34b88:	movt	r8, #5
   34b8c:	mov	r6, #100	; 0x64
   34b90:	b	34bd8 <__flatcc_fb_build_schema@@Base+0x90c>
   34b94:	ldr	r3, [sp, #12]
   34b98:	str	r4, [r9, r2, lsl #2]
   34b9c:	add	r1, r3, r1
   34ba0:	ldr	lr, [r1, #204]	; 0xcc
   34ba4:	cmp	lr, #0
   34ba8:	bne	34c54 <__flatcc_fb_build_schema@@Base+0x988>
   34bac:	ldrh	r3, [r4, #16]
   34bb0:	cmp	r3, #0
   34bb4:	bne	35d78 <__flatcc_fb_build_schema@@Base+0x1aac>
   34bb8:	ldr	r4, [r4]
   34bbc:	subs	r6, r6, #1
   34bc0:	movne	ip, #1
   34bc4:	moveq	ip, #0
   34bc8:	cmp	r4, #0
   34bcc:	moveq	ip, #0
   34bd0:	cmp	ip, #0
   34bd4:	beq	34ce0 <__flatcc_fb_build_schema@@Base+0xa14>
   34bd8:	ldr	r3, [r4, #4]
   34bdc:	ldr	r0, [fp, #412]	; 0x19c
   34be0:	ldm	r3, {r1, r2}
   34be4:	add	r0, r0, #16
   34be8:	bl	3dd50 <fb_name_table_find@@Base>
   34bec:	subs	ip, r0, #0
   34bf0:	beq	3523c <__flatcc_fb_build_schema@@Base+0xf70>
   34bf4:	ldr	r2, [ip, #24]
   34bf8:	cmp	r2, #0
   34bfc:	beq	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34c00:	mov	r3, #16
   34c04:	asr	r3, r3, r2
   34c08:	ands	ip, r3, #1
   34c0c:	beq	351b4 <__flatcc_fb_build_schema@@Base+0xee8>
   34c10:	ldr	ip, [r9, r2, lsl #2]
   34c14:	mov	r3, #1
   34c18:	lsl	r1, r2, #2
   34c1c:	orr	r5, r5, r3, lsl r2
   34c20:	uxth	r5, r5
   34c24:	cmp	ip, #0
   34c28:	beq	34b94 <__flatcc_fb_build_schema@@Base+0x8c8>
   34c2c:	mov	ip, #0
   34c30:	movw	r2, #37320	; 0x91c8
   34c34:	movt	r2, #5
   34c38:	mov	r3, ip
   34c3c:	ldr	r1, [r4, #4]
   34c40:	mov	r0, fp
   34c44:	str	ip, [sp]
   34c48:	str	ip, [sp, #4]
   34c4c:	bl	2c558 <__flatcc_error_report@@Base>
   34c50:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34c54:	cmp	lr, #2
   34c58:	bne	34c8c <__flatcc_fb_build_schema@@Base+0x9c0>
   34c5c:	ldrh	r3, [r4, #16]
   34c60:	cmp	r3, #2
   34c64:	beq	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34c68:	mov	r3, ip
   34c6c:	movw	r2, #37400	; 0x9218
   34c70:	movt	r2, #5
   34c74:	mov	r0, fp
   34c78:	ldr	r1, [r4, #4]
   34c7c:	str	ip, [sp]
   34c80:	str	ip, [sp, #4]
   34c84:	bl	2c558 <__flatcc_error_report@@Base>
   34c88:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34c8c:	cmp	lr, #5
   34c90:	beq	35278 <__flatcc_fb_build_schema@@Base+0xfac>
   34c94:	cmp	lr, #4
   34c98:	bne	352a8 <__flatcc_fb_build_schema@@Base+0xfdc>
   34c9c:	ldrh	r3, [r4, #16]
   34ca0:	sub	r3, r3, #4
   34ca4:	cmp	r3, #1
   34ca8:	bls	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34cac:	mov	r3, ip
   34cb0:	mov	r2, r8
   34cb4:	ldr	r1, [r4, #4]
   34cb8:	mov	r0, fp
   34cbc:	str	ip, [sp]
   34cc0:	str	ip, [sp, #4]
   34cc4:	bl	2c558 <__flatcc_error_report@@Base>
   34cc8:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   34ccc:	cmp	r7, #0
   34cd0:	streq	sl, [r4, #16]
   34cd4:	streq	r6, [r4, #88]	; 0x58
   34cd8:	bne	34368 <__flatcc_fb_build_schema@@Base+0x9c>
   34cdc:	b	34328 <__flatcc_fb_build_schema@@Base+0x5c>
   34ce0:	cmp	r4, #0
   34ce4:	ldr	r6, [sp, #104]	; 0x68
   34ce8:	beq	34d0c <__flatcc_fb_build_schema@@Base+0xa40>
   34cec:	movw	r2, #37560	; 0x92b8
   34cf0:	movt	r2, #5
   34cf4:	ldr	r1, [r4, #4]
   34cf8:	mov	r3, ip
   34cfc:	mov	r0, fp
   34d00:	str	ip, [sp]
   34d04:	str	ip, [sp, #4]
   34d08:	bl	2c558 <__flatcc_error_report@@Base>
   34d0c:	cmp	r6, #0
   34d10:	strh	r5, [sl, #92]	; 0x5c
   34d14:	beq	34d60 <__flatcc_fb_build_schema@@Base+0xa94>
   34d18:	ldrd	r0, [r6, #8]
   34d1c:	subs	r3, r0, #1
   34d20:	str	r3, [sp, #40]	; 0x28
   34d24:	sbc	r3, r1, #0
   34d28:	str	r3, [sp, #44]	; 0x2c
   34d2c:	ldrd	r2, [sp, #40]	; 0x28
   34d30:	cmp	r3, #0
   34d34:	cmpeq	r2, #255	; 0xff
   34d38:	bls	352e0 <__flatcc_fb_build_schema@@Base+0x1014>
   34d3c:	mov	ip, #0
   34d40:	movw	r2, #40948	; 0x9ff4
   34d44:	movt	r2, #5
   34d48:	mov	r3, ip
   34d4c:	ldr	r1, [sl, #4]
   34d50:	mov	r0, fp
   34d54:	str	ip, [sp]
   34d58:	str	ip, [sp, #4]
   34d5c:	bl	2c558 <__flatcc_error_report@@Base>
   34d60:	ldr	r7, [sl, #20]
   34d64:	cmp	r7, #0
   34d68:	beq	346dc <__flatcc_fb_build_schema@@Base+0x410>
   34d6c:	add	r3, sl, #56	; 0x38
   34d70:	str	r3, [sp, #20]
   34d74:	mov	r3, #0
   34d78:	str	sl, [sp, #28]
   34d7c:	str	r3, [sp, #36]	; 0x24
   34d80:	mov	r2, #1
   34d84:	mov	r1, r7
   34d88:	ldr	r0, [sp, #20]
   34d8c:	bl	29044 <fb_symbol_table_insert_item@@Base>
   34d90:	cmp	r0, #0
   34d94:	bne	35114 <__flatcc_fb_build_schema@@Base+0xe48>
   34d98:	ldrh	r3, [r7, #8]
   34d9c:	cmp	r3, #5
   34da0:	bne	35e94 <__flatcc_fb_build_schema@@Base+0x1bc8>
   34da4:	ldr	r2, [fp, #168]	; 0xa8
   34da8:	mov	r0, #0
   34dac:	mov	r1, #0
   34db0:	ldr	r8, [fp, #172]	; 0xac
   34db4:	strd	r0, [r9]
   34db8:	ldr	r4, [r7, #64]	; 0x40
   34dbc:	strd	r0, [r9, #8]
   34dc0:	strd	r0, [r9, #16]
   34dc4:	cmp	r8, #0
   34dc8:	strd	r0, [r9, #24]
   34dcc:	movne	r8, #128	; 0x80
   34dd0:	movne	r3, #132	; 0x84
   34dd4:	strd	r0, [r9, #32]
   34dd8:	moveq	r3, #4
   34ddc:	cmp	r2, #0
   34de0:	strd	r0, [r9, #40]	; 0x28
   34de4:	movne	r8, r3
   34de8:	cmp	r4, #0
   34dec:	beq	35b7c <__flatcc_fb_build_schema@@Base+0x18b0>
   34df0:	movw	r3, #37480	; 0x9268
   34df4:	movt	r3, #5
   34df8:	movw	sl, #37516	; 0x928c
   34dfc:	movt	sl, #5
   34e00:	mov	r5, #0
   34e04:	mov	r6, #100	; 0x64
   34e08:	str	r3, [sp, #32]
   34e0c:	b	34e54 <__flatcc_fb_build_schema@@Base+0xb88>
   34e10:	ldr	r3, [sp, #12]
   34e14:	str	r4, [r9, r2, lsl #2]
   34e18:	add	r1, r3, r1
   34e1c:	ldr	lr, [r1, #204]	; 0xcc
   34e20:	cmp	lr, #0
   34e24:	bne	34ecc <__flatcc_fb_build_schema@@Base+0xc00>
   34e28:	ldrh	r3, [r4, #16]
   34e2c:	cmp	r3, #0
   34e30:	bne	35aa8 <__flatcc_fb_build_schema@@Base+0x17dc>
   34e34:	ldr	r4, [r4]
   34e38:	subs	r6, r6, #1
   34e3c:	movne	ip, #1
   34e40:	moveq	ip, #0
   34e44:	cmp	r4, #0
   34e48:	moveq	ip, #0
   34e4c:	cmp	ip, #0
   34e50:	beq	3458c <__flatcc_fb_build_schema@@Base+0x2c0>
   34e54:	ldr	r3, [r4, #4]
   34e58:	ldr	r0, [fp, #412]	; 0x19c
   34e5c:	ldm	r3, {r1, r2}
   34e60:	add	r0, r0, #16
   34e64:	bl	3dd50 <fb_name_table_find@@Base>
   34e68:	subs	ip, r0, #0
   34e6c:	beq	350c0 <__flatcc_fb_build_schema@@Base+0xdf4>
   34e70:	ldr	r2, [ip, #24]
   34e74:	cmp	r2, #0
   34e78:	beq	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34e7c:	asr	r3, r8, r2
   34e80:	ands	ip, r3, #1
   34e84:	beq	34f44 <__flatcc_fb_build_schema@@Base+0xc78>
   34e88:	ldr	ip, [r9, r2, lsl #2]
   34e8c:	mov	r3, #1
   34e90:	lsl	r1, r2, #2
   34e94:	orr	r5, r5, r3, lsl r2
   34e98:	uxth	r5, r5
   34e9c:	cmp	ip, #0
   34ea0:	beq	34e10 <__flatcc_fb_build_schema@@Base+0xb44>
   34ea4:	mov	ip, #0
   34ea8:	movw	r2, #37320	; 0x91c8
   34eac:	movt	r2, #5
   34eb0:	mov	r3, ip
   34eb4:	ldr	r1, [r4, #4]
   34eb8:	mov	r0, fp
   34ebc:	str	ip, [sp]
   34ec0:	str	ip, [sp, #4]
   34ec4:	bl	2c558 <__flatcc_error_report@@Base>
   34ec8:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34ecc:	cmp	lr, #2
   34ed0:	bne	34f04 <__flatcc_fb_build_schema@@Base+0xc38>
   34ed4:	ldrh	r3, [r4, #16]
   34ed8:	cmp	r3, #2
   34edc:	beq	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34ee0:	mov	r3, ip
   34ee4:	movw	r2, #37400	; 0x9218
   34ee8:	movt	r2, #5
   34eec:	mov	r0, fp
   34ef0:	ldr	r1, [r4, #4]
   34ef4:	str	ip, [sp]
   34ef8:	str	ip, [sp, #4]
   34efc:	bl	2c558 <__flatcc_error_report@@Base>
   34f00:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34f04:	cmp	lr, #5
   34f08:	beq	350e4 <__flatcc_fb_build_schema@@Base+0xe18>
   34f0c:	cmp	lr, #4
   34f10:	bne	35148 <__flatcc_fb_build_schema@@Base+0xe7c>
   34f14:	ldrh	r3, [r4, #16]
   34f18:	sub	r3, r3, #4
   34f1c:	cmp	r3, #1
   34f20:	bls	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34f24:	mov	r3, ip
   34f28:	mov	r0, fp
   34f2c:	ldr	r1, [r4, #4]
   34f30:	str	ip, [sp]
   34f34:	str	ip, [sp, #4]
   34f38:	ldr	r2, [sp, #32]
   34f3c:	bl	2c558 <__flatcc_error_report@@Base>
   34f40:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34f44:	mov	r3, ip
   34f48:	movw	r2, #37272	; 0x9198
   34f4c:	movt	r2, #5
   34f50:	mov	r0, fp
   34f54:	ldr	r1, [r4, #4]
   34f58:	str	ip, [sp]
   34f5c:	str	ip, [sp, #4]
   34f60:	bl	2c558 <__flatcc_error_report@@Base>
   34f64:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   34f68:	mov	r4, r0
   34f6c:	ldr	r3, [r5, #4]
   34f70:	add	r0, r4, #4
   34f74:	ldm	r3, {r1, r2}
   34f78:	bl	29284 <fb_symbol_table_find@@Base>
   34f7c:	subs	r6, r0, #0
   34f80:	beq	35034 <__flatcc_fb_build_schema@@Base+0xd68>
   34f84:	ldrh	r3, [r6, #8]
   34f88:	cmp	r3, #4
   34f8c:	bhi	35034 <__flatcc_fb_build_schema@@Base+0xd68>
   34f90:	ldr	r1, [r6, #16]
   34f94:	ldr	r0, [sp, #24]
   34f98:	bl	287a4 <ptr_set_find_item@@Base>
   34f9c:	cmp	r0, #0
   34fa0:	beq	35034 <__flatcc_fb_build_schema@@Base+0xd68>
   34fa4:	ldrh	r4, [r6, #8]
   34fa8:	mov	r3, #14
   34fac:	str	r6, [r7, #16]
   34fb0:	strh	r3, [r7, #24]
   34fb4:	cmp	r4, #1
   34fb8:	beq	35b90 <__flatcc_fb_build_schema@@Base+0x18c4>
   34fbc:	ldr	ip, [fp, #152]	; 0x98
   34fc0:	cmp	ip, #0
   34fc4:	beq	35ef4 <__flatcc_fb_build_schema@@Base+0x1c28>
   34fc8:	cmp	r4, #3
   34fcc:	bne	35f24 <__flatcc_fb_build_schema@@Base+0x1c58>
   34fd0:	ldrh	r3, [r7, #72]	; 0x48
   34fd4:	tst	r3, #128	; 0x80
   34fd8:	beq	34ff4 <__flatcc_fb_build_schema@@Base+0xd28>
   34fdc:	ldr	ip, [fp, #148]	; 0x94
   34fe0:	cmp	ip, #0
   34fe4:	beq	35e40 <__flatcc_fb_build_schema@@Base+0x1b74>
   34fe8:	ldr	r3, [sp, #36]	; 0x24
   34fec:	add	r3, r3, #1
   34ff0:	str	r3, [sp, #36]	; 0x24
   34ff4:	ldrh	r3, [r7, #56]	; 0x38
   34ff8:	cmp	r3, #0
   34ffc:	beq	34678 <__flatcc_fb_build_schema@@Base+0x3ac>
   35000:	mov	ip, #0
   35004:	movw	r2, #41384	; 0xa1a8
   35008:	movt	r2, #5
   3500c:	mov	r3, ip
   35010:	ldr	r1, [r7, #4]
   35014:	mov	r0, fp
   35018:	str	ip, [sp]
   3501c:	str	ip, [sp, #4]
   35020:	bl	2c558 <__flatcc_error_report@@Base>
   35024:	ldr	r7, [r7]
   35028:	cmp	r7, #0
   3502c:	bne	34d80 <__flatcc_fb_build_schema@@Base+0xab4>
   35030:	b	34684 <__flatcc_fb_build_schema@@Base+0x3b8>
   35034:	ldr	r3, [r4]
   35038:	cmp	r3, #0
   3503c:	beq	34654 <__flatcc_fb_build_schema@@Base+0x388>
   35040:	mov	r6, #0
   35044:	b	3504c <__flatcc_fb_build_schema@@Base+0xd80>
   35048:	mov	r6, r2
   3504c:	ldr	r3, [r3]
   35050:	add	r2, r6, #1
   35054:	cmp	r3, #0
   35058:	bne	35048 <__flatcc_fb_build_schema@@Base+0xd7c>
   3505c:	ldr	r3, [sp, #16]
   35060:	cmp	r3, #0
   35064:	beq	34654 <__flatcc_fb_build_schema@@Base+0x388>
   35068:	rsb	r6, r6, #0
   3506c:	ldr	r0, [fp, #412]	; 0x19c
   35070:	b	35098 <__flatcc_fb_build_schema@@Base+0xdcc>
   35074:	cmp	r0, #0
   35078:	beq	35094 <__flatcc_fb_build_schema@@Base+0xdc8>
   3507c:	mov	r2, r6
   35080:	ldr	r1, [r4]
   35084:	bl	2a1ec <fb_scope_table_find@@Base>
   35088:	cmp	r0, #0
   3508c:	bne	34f68 <__flatcc_fb_build_schema@@Base+0xc9c>
   35090:	ldr	r0, [fp, #412]	; 0x19c
   35094:	add	r6, r6, #1
   35098:	cmp	r6, #0
   3509c:	bne	35074 <__flatcc_fb_build_schema@@Base+0xda8>
   350a0:	cmp	r0, #0
   350a4:	beq	34654 <__flatcc_fb_build_schema@@Base+0x388>
   350a8:	mov	r2, r6
   350ac:	mov	r1, r6
   350b0:	bl	2a1ec <fb_scope_table_find@@Base>
   350b4:	subs	r4, r0, #0
   350b8:	bne	34f6c <__flatcc_fb_build_schema@@Base+0xca0>
   350bc:	b	34654 <__flatcc_fb_build_schema@@Base+0x388>
   350c0:	mov	r3, ip
   350c4:	movw	r2, #37240	; 0x9178
   350c8:	movt	r2, #5
   350cc:	mov	r0, fp
   350d0:	ldr	r1, [r4, #4]
   350d4:	str	ip, [sp]
   350d8:	str	ip, [sp, #4]
   350dc:	bl	2c558 <__flatcc_error_report@@Base>
   350e0:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   350e4:	ldrh	r3, [r4, #16]
   350e8:	cmp	r3, #5
   350ec:	beq	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   350f0:	mov	r3, ip
   350f4:	movw	r2, #37436	; 0x923c
   350f8:	movt	r2, #5
   350fc:	mov	r0, fp
   35100:	ldr	r1, [r4, #4]
   35104:	str	ip, [sp]
   35108:	str	ip, [sp, #4]
   3510c:	bl	2c558 <__flatcc_error_report@@Base>
   35110:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   35114:	mov	ip, #0
   35118:	movw	r2, #41024	; 0xa040
   3511c:	movt	r2, #5
   35120:	ldr	r3, [r0, #4]
   35124:	mov	r0, fp
   35128:	ldr	r1, [r7, #4]
   3512c:	str	ip, [sp]
   35130:	str	ip, [sp, #4]
   35134:	bl	2c558 <__flatcc_error_report@@Base>
   35138:	ldr	r7, [r7]
   3513c:	cmp	r7, #0
   35140:	bne	34d80 <__flatcc_fb_build_schema@@Base+0xab4>
   35144:	b	34684 <__flatcc_fb_build_schema@@Base+0x3b8>
   35148:	cmp	lr, #6
   3514c:	bne	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   35150:	ldrh	r3, [r4, #16]
   35154:	cmp	r3, #6
   35158:	beq	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   3515c:	mov	ip, #0
   35160:	mov	r2, sl
   35164:	ldr	r1, [r4, #4]
   35168:	mov	r3, ip
   3516c:	mov	r0, fp
   35170:	str	ip, [sp]
   35174:	str	ip, [sp, #4]
   35178:	bl	2c558 <__flatcc_error_report@@Base>
   3517c:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   35180:	ldr	r1, [r7, #4]
   35184:	movw	r2, #41324	; 0xa16c
   35188:	movt	r2, #5
   3518c:	mov	ip, #0
   35190:	ldr	sl, [sp, #28]
   35194:	mov	r3, ip
   35198:	mov	r0, fp
   3519c:	str	ip, [sp]
   351a0:	str	ip, [sp, #4]
   351a4:	bl	2c558 <__flatcc_error_report@@Base>
   351a8:	mov	r3, #1
   351ac:	strh	r3, [sl, #48]	; 0x30
   351b0:	b	346dc <__flatcc_fb_build_schema@@Base+0x410>
   351b4:	mov	r3, ip
   351b8:	movw	r2, #37272	; 0x9198
   351bc:	movt	r2, #5
   351c0:	mov	r0, fp
   351c4:	ldr	r1, [r4, #4]
   351c8:	str	ip, [sp]
   351cc:	str	ip, [sp, #4]
   351d0:	bl	2c558 <__flatcc_error_report@@Base>
   351d4:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   351d8:	movw	r3, #40389	; 0x9dc5
   351dc:	movt	r3, #33052	; 0x811c
   351e0:	ldr	r2, [lr, #4]
   351e4:	ldr	ip, [r2]
   351e8:	ldr	r8, [r2, #4]
   351ec:	cmp	r8, #0
   351f0:	beq	3520c <__flatcc_fb_build_schema@@Base+0xf40>
   351f4:	add	r8, ip, r8
   351f8:	ldrb	r2, [ip], #1
   351fc:	eor	r3, r3, r2
   35200:	cmp	ip, r8
   35204:	mul	r3, r5, r3
   35208:	bne	351f8 <__flatcc_fb_build_schema@@Base+0xf2c>
   3520c:	ldr	lr, [lr]
   35210:	eor	r3, r3, #46	; 0x2e
   35214:	mul	r3, r5, r3
   35218:	cmp	lr, #0
   3521c:	bne	351e0 <__flatcc_fb_build_schema@@Base+0xf14>
   35220:	cmp	r7, #0
   35224:	bne	34370 <__flatcc_fb_build_schema@@Base+0xa4>
   35228:	cmp	r3, #0
   3522c:	bne	35e18 <__flatcc_fb_build_schema@@Base+0x1b4c>
   35230:	str	sl, [r4, #16]
   35234:	str	r6, [r4, #88]	; 0x58
   35238:	b	343a0 <__flatcc_fb_build_schema@@Base+0xd4>
   3523c:	mov	r3, ip
   35240:	movw	r2, #37240	; 0x9178
   35244:	movt	r2, #5
   35248:	mov	r0, fp
   3524c:	ldr	r1, [r4, #4]
   35250:	str	ip, [sp]
   35254:	str	ip, [sp, #4]
   35258:	bl	2c558 <__flatcc_error_report@@Base>
   3525c:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   35260:	tst	r5, #128	; 0x80
   35264:	beq	34ff4 <__flatcc_fb_build_schema@@Base+0xd28>
   35268:	ldr	r3, [sp, #36]	; 0x24
   3526c:	add	r3, r3, #1
   35270:	str	r3, [sp, #36]	; 0x24
   35274:	b	34ff4 <__flatcc_fb_build_schema@@Base+0xd28>
   35278:	ldrh	r3, [r4, #16]
   3527c:	cmp	r3, #5
   35280:	beq	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   35284:	mov	r3, ip
   35288:	movw	r2, #37436	; 0x923c
   3528c:	movt	r2, #5
   35290:	mov	r0, fp
   35294:	ldr	r1, [r4, #4]
   35298:	str	ip, [sp]
   3529c:	str	ip, [sp, #4]
   352a0:	bl	2c558 <__flatcc_error_report@@Base>
   352a4:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   352a8:	cmp	lr, #6
   352ac:	bne	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   352b0:	ldrh	r3, [r4, #16]
   352b4:	cmp	r3, #6
   352b8:	beq	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   352bc:	mov	ip, #0
   352c0:	mov	r2, r7
   352c4:	ldr	r1, [r4, #4]
   352c8:	mov	r3, ip
   352cc:	mov	r0, fp
   352d0:	str	ip, [sp]
   352d4:	str	ip, [sp, #4]
   352d8:	bl	2c558 <__flatcc_error_report@@Base>
   352dc:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   352e0:	cmp	r1, #0
   352e4:	cmpeq	r0, #1
   352e8:	beq	35338 <__flatcc_fb_build_schema@@Base+0x106c>
   352ec:	cmp	r1, #0
   352f0:	cmpeq	r0, #2
   352f4:	beq	35338 <__flatcc_fb_build_schema@@Base+0x106c>
   352f8:	cmp	r1, #0
   352fc:	cmpeq	r0, #3
   35300:	movne	r2, #4
   35304:	movne	r3, #0
   35308:	beq	34d3c <__flatcc_fb_build_schema@@Base+0xa70>
   3530c:	cmp	r1, r3
   35310:	cmpeq	r0, r2
   35314:	beq	35338 <__flatcc_fb_build_schema@@Base+0x106c>
   35318:	adds	r2, r2, r2
   3531c:	adc	r3, r3, r3
   35320:	cmp	r1, r3
   35324:	cmpeq	r0, r2
   35328:	bcc	34d3c <__flatcc_fb_build_schema@@Base+0xa70>
   3532c:	cmp	r1, r3
   35330:	cmpeq	r0, r2
   35334:	bne	35318 <__flatcc_fb_build_schema@@Base+0x104c>
   35338:	strh	r0, [sl, #104]	; 0x68
   3533c:	b	34d60 <__flatcc_fb_build_schema@@Base+0xa94>
   35340:	mov	r5, r0
   35344:	ldr	r3, [r6, #4]
   35348:	add	r0, r5, #4
   3534c:	ldm	r3, {r1, r2}
   35350:	bl	29284 <fb_symbol_table_find@@Base>
   35354:	subs	r7, r0, #0
   35358:	beq	3537c <__flatcc_fb_build_schema@@Base+0x10b0>
   3535c:	ldrh	r3, [r7, #8]
   35360:	cmp	r3, #4
   35364:	bhi	3537c <__flatcc_fb_build_schema@@Base+0x10b0>
   35368:	mov	r0, sl
   3536c:	ldr	r1, [r7, #16]
   35370:	bl	287a4 <ptr_set_find_item@@Base>
   35374:	cmp	r0, #0
   35378:	bne	348f4 <__flatcc_fb_build_schema@@Base+0x628>
   3537c:	ldr	r3, [r5]
   35380:	cmp	r3, #0
   35384:	beq	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   35388:	mov	r7, #0
   3538c:	b	35394 <__flatcc_fb_build_schema@@Base+0x10c8>
   35390:	mov	r7, r2
   35394:	ldr	r3, [r3]
   35398:	add	r2, r7, #1
   3539c:	cmp	r3, #0
   353a0:	bne	35390 <__flatcc_fb_build_schema@@Base+0x10c4>
   353a4:	cmp	r9, #0
   353a8:	beq	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   353ac:	rsb	r7, r7, #0
   353b0:	ldr	r0, [fp, #412]	; 0x19c
   353b4:	b	353dc <__flatcc_fb_build_schema@@Base+0x1110>
   353b8:	cmp	r0, #0
   353bc:	beq	353d8 <__flatcc_fb_build_schema@@Base+0x110c>
   353c0:	mov	r2, r7
   353c4:	ldr	r1, [r5]
   353c8:	bl	2a1ec <fb_scope_table_find@@Base>
   353cc:	cmp	r0, #0
   353d0:	bne	35340 <__flatcc_fb_build_schema@@Base+0x1074>
   353d4:	ldr	r0, [fp, #412]	; 0x19c
   353d8:	add	r7, r7, #1
   353dc:	cmp	r7, #0
   353e0:	bne	353b8 <__flatcc_fb_build_schema@@Base+0x10ec>
   353e4:	cmp	r0, #0
   353e8:	beq	35400 <__flatcc_fb_build_schema@@Base+0x1134>
   353ec:	mov	r2, r7
   353f0:	mov	r1, r7
   353f4:	bl	2a1ec <fb_scope_table_find@@Base>
   353f8:	subs	r5, r0, #0
   353fc:	bne	35344 <__flatcc_fb_build_schema@@Base+0x1078>
   35400:	ldr	ip, [r4, #32]
   35404:	mov	r3, r4
   35408:	mov	r1, ip
   3540c:	mov	r0, fp
   35410:	ldr	r2, [sp, #36]	; 0x24
   35414:	bl	2dde4 <error_ref_sym@@Base>
   35418:	mov	r3, #1
   3541c:	strh	r3, [r4, #24]
   35420:	ldr	r4, [r4]
   35424:	cmp	r4, #0
   35428:	bne	347d0 <__flatcc_fb_build_schema@@Base+0x504>
   3542c:	b	349f0 <__flatcc_fb_build_schema@@Base+0x724>
   35430:	andeq	r8, r5, ip, ror #28
   35434:			; <UNDEFINED> instruction: 0x00058eb0
   35438:	andeq	r8, r5, r0, asr lr
   3543c:	muleq	r5, ip, lr
   35440:	mov	r5, r0
   35444:	ldr	r3, [r6, #4]
   35448:	add	r0, r5, #4
   3544c:	ldm	r3, {r1, r2}
   35450:	bl	29284 <fb_symbol_table_find@@Base>
   35454:	subs	r7, r0, #0
   35458:	beq	355a8 <__flatcc_fb_build_schema@@Base+0x12dc>
   3545c:	ldrh	r3, [r7, #8]
   35460:	cmp	r3, #4
   35464:	bhi	355a8 <__flatcc_fb_build_schema@@Base+0x12dc>
   35468:	mov	r0, sl
   3546c:	ldr	r1, [r7, #16]
   35470:	bl	287a4 <ptr_set_find_item@@Base>
   35474:	cmp	r0, #0
   35478:	beq	355a8 <__flatcc_fb_build_schema@@Base+0x12dc>
   3547c:	ldrh	r6, [r7, #8]
   35480:	cmp	r6, #0
   35484:	bne	35b68 <__flatcc_fb_build_schema@@Base+0x189c>
   35488:	ldr	r5, [r4, #64]	; 0x40
   3548c:	mov	r2, #0
   35490:	mov	r3, #0
   35494:	add	r8, sp, #88	; 0x58
   35498:	mov	r1, #14
   3549c:	str	r7, [r4, #16]
   354a0:	strd	r2, [sp, #88]	; 0x58
   354a4:	strd	r2, [r8, #8]
   354a8:	strd	r2, [r8, #16]
   354ac:	cmp	r5, #0
   354b0:	strh	r1, [r4, #24]
   354b4:	strd	r2, [r8, #24]
   354b8:	strd	r2, [r8, #32]
   354bc:	strd	r2, [r8, #40]	; 0x28
   354c0:	strd	r2, [r4, #88]	; 0x58
   354c4:	beq	359f4 <__flatcc_fb_build_schema@@Base+0x1728>
   354c8:	movw	r3, #37516	; 0x928c
   354cc:	movt	r3, #5
   354d0:	mov	r7, #100	; 0x64
   354d4:	str	r3, [sp, #28]
   354d8:	movw	r3, #37480	; 0x9268
   354dc:	movt	r3, #5
   354e0:	str	r3, [sp, #32]
   354e4:	b	3552c <__flatcc_fb_build_schema@@Base+0x1260>
   354e8:	ldr	r3, [sp, #20]
   354ec:	str	r5, [r8, r2, lsl #2]
   354f0:	add	r1, r3, r1
   354f4:	ldr	lr, [r1, #204]	; 0xcc
   354f8:	cmp	lr, #0
   354fc:	bne	358f8 <__flatcc_fb_build_schema@@Base+0x162c>
   35500:	ldrh	r3, [r5, #16]
   35504:	cmp	r3, #0
   35508:	bne	35da4 <__flatcc_fb_build_schema@@Base+0x1ad8>
   3550c:	ldr	r5, [r5]
   35510:	subs	r7, r7, #1
   35514:	movne	ip, #1
   35518:	moveq	ip, #0
   3551c:	cmp	r5, #0
   35520:	moveq	ip, #0
   35524:	cmp	ip, #0
   35528:	beq	359cc <__flatcc_fb_build_schema@@Base+0x1700>
   3552c:	ldr	r3, [r5, #4]
   35530:	ldr	r0, [fp, #412]	; 0x19c
   35534:	ldm	r3, {r1, r2}
   35538:	add	r0, r0, #16
   3553c:	bl	3dd50 <fb_name_table_find@@Base>
   35540:	subs	ip, r0, #0
   35544:	beq	35a68 <__flatcc_fb_build_schema@@Base+0x179c>
   35548:	ldr	r2, [ip, #24]
   3554c:	cmp	r2, #0
   35550:	beq	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35554:	mov	r3, #4
   35558:	asr	r3, r3, r2
   3555c:	ands	ip, r3, #1
   35560:	beq	35a08 <__flatcc_fb_build_schema@@Base+0x173c>
   35564:	ldr	ip, [r8, r2, lsl #2]
   35568:	mov	r3, #1
   3556c:	lsl	r1, r2, #2
   35570:	orr	r6, r6, r3, lsl r2
   35574:	uxth	r6, r6
   35578:	cmp	ip, #0
   3557c:	beq	354e8 <__flatcc_fb_build_schema@@Base+0x121c>
   35580:	mov	ip, #0
   35584:	movw	r2, #37320	; 0x91c8
   35588:	movt	r2, #5
   3558c:	mov	r3, ip
   35590:	ldr	r1, [r5, #4]
   35594:	mov	r0, fp
   35598:	str	ip, [sp]
   3559c:	str	ip, [sp, #4]
   355a0:	bl	2c558 <__flatcc_error_report@@Base>
   355a4:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   355a8:	ldr	r3, [r5]
   355ac:	cmp	r3, #0
   355b0:	beq	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   355b4:	mov	r7, #0
   355b8:	b	355c0 <__flatcc_fb_build_schema@@Base+0x12f4>
   355bc:	mov	r7, r2
   355c0:	ldr	r3, [r3]
   355c4:	add	r2, r7, #1
   355c8:	cmp	r3, #0
   355cc:	bne	355bc <__flatcc_fb_build_schema@@Base+0x12f0>
   355d0:	cmp	r9, #0
   355d4:	beq	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   355d8:	rsb	r7, r7, #0
   355dc:	ldr	r0, [fp, #412]	; 0x19c
   355e0:	b	35608 <__flatcc_fb_build_schema@@Base+0x133c>
   355e4:	cmp	r0, #0
   355e8:	beq	35604 <__flatcc_fb_build_schema@@Base+0x1338>
   355ec:	mov	r2, r7
   355f0:	ldr	r1, [r5]
   355f4:	bl	2a1ec <fb_scope_table_find@@Base>
   355f8:	cmp	r0, #0
   355fc:	bne	35440 <__flatcc_fb_build_schema@@Base+0x1174>
   35600:	ldr	r0, [fp, #412]	; 0x19c
   35604:	add	r7, r7, #1
   35608:	cmp	r7, #0
   3560c:	bne	355e4 <__flatcc_fb_build_schema@@Base+0x1318>
   35610:	cmp	r0, #0
   35614:	beq	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   35618:	mov	r2, r7
   3561c:	mov	r1, r7
   35620:	bl	2a1ec <fb_scope_table_find@@Base>
   35624:	subs	r5, r0, #0
   35628:	bne	35444 <__flatcc_fb_build_schema@@Base+0x1178>
   3562c:	b	349c0 <__flatcc_fb_build_schema@@Base+0x6f4>
   35630:	ldr	r2, [r4, #16]
   35634:	ldrh	r3, [r2, #8]
   35638:	cmp	r3, #1
   3563c:	beq	35ca4 <__flatcc_fb_build_schema@@Base+0x19d8>
   35640:	cmp	r3, #3
   35644:	beq	35ca4 <__flatcc_fb_build_schema@@Base+0x19d8>
   35648:	ldrh	r3, [fp, #192]	; 0xc0
   3564c:	cmp	r3, #0
   35650:	beq	35f64 <__flatcc_fb_build_schema@@Base+0x1c98>
   35654:	lsrs	r2, r3, #1
   35658:	moveq	r3, r2
   3565c:	beq	3567c <__flatcc_fb_build_schema@@Base+0x13b0>
   35660:	mov	r3, #0
   35664:	add	r3, r3, #1
   35668:	lsrs	r2, r2, #1
   3566c:	uxth	r3, r3
   35670:	bne	35664 <__flatcc_fb_build_schema@@Base+0x1398>
   35674:	cmp	r3, #7
   35678:	movcs	r3, #7
   3567c:	add	r2, sp, #136	; 0x88
   35680:	add	r3, r2, r3, lsl #2
   35684:	ldr	r2, [r3, #-84]	; 0xffffffac
   35688:	cmp	r2, #0
   3568c:	beq	35a8c <__flatcc_fb_build_schema@@Base+0x17c0>
   35690:	ldr	r2, [r3, #-48]	; 0xffffffd0
   35694:	add	r5, r4, #108	; 0x6c
   35698:	str	r5, [r3, #-48]	; 0xffffffd0
   3569c:	str	r4, [r2]
   356a0:	ldr	r4, [r4]
   356a4:	cmp	r4, #0
   356a8:	bne	34ab8 <__flatcc_fb_build_schema@@Base+0x7ec>
   356ac:	add	r4, sp, #84	; 0x54
   356b0:	mov	r1, #8
   356b4:	str	r4, [sp, #120]	; 0x78
   356b8:	sub	r3, r1, #1
   356bc:	add	r2, sp, #136	; 0x88
   356c0:	uxth	r3, r3
   356c4:	add	r2, r2, r3, lsl #2
   356c8:	ldr	r2, [r2, #-84]	; 0xffffffac
   356cc:	cmp	r2, #0
   356d0:	bne	35d58 <__flatcc_fb_build_schema@@Base+0x1a8c>
   356d4:	cmp	r3, #0
   356d8:	beq	35d9c <__flatcc_fb_build_schema@@Base+0x1ad0>
   356dc:	sub	r3, r1, #2
   356e0:	add	r2, sp, #136	; 0x88
   356e4:	uxth	r3, r3
   356e8:	add	r2, r2, r3, lsl #2
   356ec:	ldr	r2, [r2, #-84]	; 0xffffffac
   356f0:	cmp	r2, #0
   356f4:	bne	35d58 <__flatcc_fb_build_schema@@Base+0x1a8c>
   356f8:	cmp	r3, #0
   356fc:	beq	35d9c <__flatcc_fb_build_schema@@Base+0x1ad0>
   35700:	sub	r3, r1, #3
   35704:	add	r2, sp, #136	; 0x88
   35708:	uxth	r3, r3
   3570c:	add	r2, r2, r3, lsl #2
   35710:	ldr	r2, [r2, #-84]	; 0xffffffac
   35714:	cmp	r2, #0
   35718:	bne	35d58 <__flatcc_fb_build_schema@@Base+0x1a8c>
   3571c:	cmp	r3, #0
   35720:	beq	35d9c <__flatcc_fb_build_schema@@Base+0x1ad0>
   35724:	sub	r3, r1, #4
   35728:	add	r2, sp, #136	; 0x88
   3572c:	uxth	r3, r3
   35730:	add	r2, r2, r3, lsl #2
   35734:	ldr	r2, [r2, #-84]	; 0xffffffac
   35738:	cmp	r2, #0
   3573c:	bne	35d58 <__flatcc_fb_build_schema@@Base+0x1a8c>
   35740:	cmp	r3, #0
   35744:	beq	35d9c <__flatcc_fb_build_schema@@Base+0x1ad0>
   35748:	sub	r3, r1, #5
   3574c:	add	r2, sp, #136	; 0x88
   35750:	uxth	r3, r3
   35754:	add	r2, r2, r3, lsl #2
   35758:	ldr	r2, [r2, #-84]	; 0xffffffac
   3575c:	cmp	r2, #0
   35760:	bne	35d58 <__flatcc_fb_build_schema@@Base+0x1a8c>
   35764:	cmp	r3, #0
   35768:	beq	35d9c <__flatcc_fb_build_schema@@Base+0x1ad0>
   3576c:	sub	r3, r1, #6
   35770:	add	r2, sp, #136	; 0x88
   35774:	uxth	r3, r3
   35778:	add	r2, r2, r3, lsl #2
   3577c:	ldr	r2, [r2, #-84]	; 0xffffffac
   35780:	cmp	r2, #0
   35784:	bne	35d58 <__flatcc_fb_build_schema@@Base+0x1a8c>
   35788:	cmp	r3, #0
   3578c:	beq	35d9c <__flatcc_fb_build_schema@@Base+0x1ad0>
   35790:	sub	r1, r1, #7
   35794:	add	r3, sp, #136	; 0x88
   35798:	uxth	r1, r1
   3579c:	add	r2, r3, r1, lsl #2
   357a0:	mov	r3, r1
   357a4:	ldr	r2, [r2, #-84]	; 0xffffffac
   357a8:	cmp	r2, #0
   357ac:	bne	35d5c <__flatcc_fb_build_schema@@Base+0x1a90>
   357b0:	ldr	r3, [sp, #52]	; 0x34
   357b4:	str	r3, [r4]
   357b8:	ldr	r3, [sp, #84]	; 0x54
   357bc:	b	357ec <__flatcc_fb_build_schema@@Base+0x1520>
   357c0:	add	r3, sp, #48	; 0x30
   357c4:	str	lr, [sp, #48]	; 0x30
   357c8:	b	357d0 <__flatcc_fb_build_schema@@Base+0x1504>
   357cc:	mov	r1, r2
   357d0:	str	r1, [r3]
   357d4:	mov	r3, r1
   357d8:	ldr	r2, [r3], #108	; 0x6c
   357dc:	cmp	r2, #0
   357e0:	bne	357cc <__flatcc_fb_build_schema@@Base+0x1500>
   357e4:	ldr	r3, [sp, #48]	; 0x30
   357e8:	str	r2, [r1, #108]	; 0x6c
   357ec:	str	r3, [r0, #24]
   357f0:	ldr	r0, [r0]
   357f4:	cmp	r0, #0
   357f8:	bne	34a48 <__flatcc_fb_build_schema@@Base+0x77c>
   357fc:	ldr	ip, [fp, #400]	; 0x190
   35800:	cmp	ip, #0
   35804:	beq	35c6c <__flatcc_fb_build_schema@@Base+0x19a0>
   35808:	mov	r6, ip
   3580c:	mov	r2, #0
   35810:	ldr	r5, [fp, #408]	; 0x198
   35814:	b	35820 <__flatcc_fb_build_schema@@Base+0x1554>
   35818:	mov	r2, r1
   3581c:	mov	r6, r3
   35820:	ldr	r3, [r6]
   35824:	add	r1, r2, #1
   35828:	cmp	r3, #0
   3582c:	bne	35818 <__flatcc_fb_build_schema@@Base+0x154c>
   35830:	sub	r3, r1, #1
   35834:	cmp	r5, #0
   35838:	clz	r3, r3
   3583c:	lsr	r3, r3, #5
   35840:	moveq	r3, #0
   35844:	cmp	r3, #0
   35848:	bne	35c0c <__flatcc_fb_build_schema@@Base+0x1940>
   3584c:	cmp	r1, #1
   35850:	moveq	r1, r3
   35854:	movne	r1, ip
   35858:	cmp	sl, #0
   3585c:	streq	sl, [fp, #404]	; 0x194
   35860:	beq	35d3c <__flatcc_fb_build_schema@@Base+0x1a70>
   35864:	ldr	r0, [fp, #412]	; 0x19c
   35868:	cmp	r0, #0
   3586c:	beq	358bc <__flatcc_fb_build_schema@@Base+0x15f0>
   35870:	rsb	r2, r2, #0
   35874:	bl	2a1ec <fb_scope_table_find@@Base>
   35878:	cmp	r0, #0
   3587c:	beq	35ee8 <__flatcc_fb_build_schema@@Base+0x1c1c>
   35880:	ldr	r3, [r6, #4]
   35884:	add	r0, r0, #4
   35888:	ldm	r3, {r1, r2}
   3588c:	bl	29284 <fb_symbol_table_find@@Base>
   35890:	subs	r4, r0, #0
   35894:	beq	35d30 <__flatcc_fb_build_schema@@Base+0x1a64>
   35898:	ldrh	r3, [r4, #8]
   3589c:	cmp	r3, #4
   358a0:	bhi	35d30 <__flatcc_fb_build_schema@@Base+0x1a64>
   358a4:	ldr	r1, [r4, #16]
   358a8:	ldr	r0, [sp, #24]
   358ac:	bl	287a4 <ptr_set_find_item@@Base>
   358b0:	cmp	r0, #0
   358b4:	bne	35c44 <__flatcc_fb_build_schema@@Base+0x1978>
   358b8:	ldr	ip, [fp, #400]	; 0x190
   358bc:	str	r0, [fp, #404]	; 0x194
   358c0:	b	35d3c <__flatcc_fb_build_schema@@Base+0x1a70>
   358c4:	ldr	r3, [ip, #4]
   358c8:	mov	ip, #0
   358cc:	movw	r2, #41524	; 0xa234
   358d0:	movt	r2, #5
   358d4:	mov	r0, fp
   358d8:	ldr	r1, [r4, #4]
   358dc:	str	ip, [sp]
   358e0:	str	ip, [sp, #4]
   358e4:	bl	2c558 <__flatcc_error_report@@Base>
   358e8:	ldr	r4, [r4]
   358ec:	cmp	r4, #0
   358f0:	bne	347d0 <__flatcc_fb_build_schema@@Base+0x504>
   358f4:	b	349f0 <__flatcc_fb_build_schema@@Base+0x724>
   358f8:	cmp	lr, #2
   358fc:	bne	35930 <__flatcc_fb_build_schema@@Base+0x1664>
   35900:	ldrh	r3, [r5, #16]
   35904:	cmp	r3, #2
   35908:	beq	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   3590c:	mov	r3, ip
   35910:	movw	r2, #37400	; 0x9218
   35914:	movt	r2, #5
   35918:	mov	r0, fp
   3591c:	ldr	r1, [r5, #4]
   35920:	str	ip, [sp]
   35924:	str	ip, [sp, #4]
   35928:	bl	2c558 <__flatcc_error_report@@Base>
   3592c:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35930:	cmp	lr, #5
   35934:	beq	35b00 <__flatcc_fb_build_schema@@Base+0x1834>
   35938:	cmp	lr, #4
   3593c:	bne	35b30 <__flatcc_fb_build_schema@@Base+0x1864>
   35940:	ldrh	r3, [r5, #16]
   35944:	sub	r3, r3, #4
   35948:	cmp	r3, #1
   3594c:	bls	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35950:	mov	r3, ip
   35954:	mov	r0, fp
   35958:	ldr	r1, [r5, #4]
   3595c:	str	ip, [sp]
   35960:	str	ip, [sp, #4]
   35964:	ldr	r2, [sp, #32]
   35968:	bl	2c558 <__flatcc_error_report@@Base>
   3596c:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35970:	mov	r3, ip
   35974:	movw	r2, #41556	; 0xa254
   35978:	movt	r2, #5
   3597c:	mov	r0, fp
   35980:	ldr	r1, [r4, #4]
   35984:	str	ip, [sp]
   35988:	str	ip, [sp, #4]
   3598c:	bl	2c558 <__flatcc_error_report@@Base>
   35990:	b	34800 <__flatcc_fb_build_schema@@Base+0x534>
   35994:	ldrh	r3, [sl, #48]	; 0x30
   35998:	cmp	r3, #1
   3599c:	beq	349f4 <__flatcc_fb_build_schema@@Base+0x728>
   359a0:	mov	r1, sl
   359a4:	mov	r0, fp
   359a8:	bl	324c8 <__flatcc_fb_clear_parser@@Base+0x13dc>
   359ac:	cmp	r0, #0
   359b0:	beq	349f4 <__flatcc_fb_build_schema@@Base+0x728>
   359b4:	mov	r3, #1
   359b8:	strh	r3, [sl, #48]	; 0x30
   359bc:	ldr	sl, [sl]
   359c0:	cmp	sl, #0
   359c4:	bne	34754 <__flatcc_fb_build_schema@@Base+0x488>
   359c8:	b	34a00 <__flatcc_fb_build_schema@@Base+0x734>
   359cc:	cmp	r5, #0
   359d0:	beq	359f4 <__flatcc_fb_build_schema@@Base+0x1728>
   359d4:	movw	r2, #37560	; 0x92b8
   359d8:	movt	r2, #5
   359dc:	ldr	r1, [r5, #4]
   359e0:	mov	r3, ip
   359e4:	mov	r0, fp
   359e8:	str	ip, [sp]
   359ec:	str	ip, [sp, #4]
   359f0:	bl	2c558 <__flatcc_error_report@@Base>
   359f4:	strh	r6, [r4, #72]	; 0x48
   359f8:	ldr	r4, [r4]
   359fc:	cmp	r4, #0
   35a00:	bne	347d0 <__flatcc_fb_build_schema@@Base+0x504>
   35a04:	b	349f0 <__flatcc_fb_build_schema@@Base+0x724>
   35a08:	mov	r3, ip
   35a0c:	movw	r2, #37272	; 0x9198
   35a10:	movt	r2, #5
   35a14:	mov	r0, fp
   35a18:	ldr	r1, [r5, #4]
   35a1c:	str	ip, [sp]
   35a20:	str	ip, [sp, #4]
   35a24:	bl	2c558 <__flatcc_error_report@@Base>
   35a28:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35a2c:	ldr	r3, [r7, #4]
   35a30:	movw	r2, #41736	; 0xa308
   35a34:	movt	r2, #5
   35a38:	mov	ip, #0
   35a3c:	mov	r0, fp
   35a40:	ldr	r1, [r4, #4]
   35a44:	str	ip, [sp]
   35a48:	str	ip, [sp, #4]
   35a4c:	bl	2c558 <__flatcc_error_report@@Base>
   35a50:	mov	r3, #1
   35a54:	strh	r3, [r4, #24]
   35a58:	ldr	r4, [r4]
   35a5c:	cmp	r4, #0
   35a60:	bne	347d0 <__flatcc_fb_build_schema@@Base+0x504>
   35a64:	b	349f0 <__flatcc_fb_build_schema@@Base+0x724>
   35a68:	mov	r3, ip
   35a6c:	movw	r2, #37240	; 0x9178
   35a70:	movt	r2, #5
   35a74:	mov	r0, fp
   35a78:	ldr	r1, [r5, #4]
   35a7c:	str	ip, [sp]
   35a80:	str	ip, [sp, #4]
   35a84:	bl	2c558 <__flatcc_error_report@@Base>
   35a88:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35a8c:	add	r2, r4, #108	; 0x6c
   35a90:	str	r4, [r3, #-84]	; 0xffffffac
   35a94:	ldr	r4, [r4]
   35a98:	str	r2, [r3, #-48]	; 0xffffffd0
   35a9c:	cmp	r4, #0
   35aa0:	bne	34ab8 <__flatcc_fb_build_schema@@Base+0x7ec>
   35aa4:	b	356ac <__flatcc_fb_build_schema@@Base+0x13e0>
   35aa8:	mov	r3, lr
   35aac:	movw	r2, #37360	; 0x91f0
   35ab0:	movt	r2, #5
   35ab4:	mov	r0, fp
   35ab8:	ldr	r1, [r4, #4]
   35abc:	str	lr, [sp]
   35ac0:	str	lr, [sp, #4]
   35ac4:	bl	2c558 <__flatcc_error_report@@Base>
   35ac8:	b	34e34 <__flatcc_fb_build_schema@@Base+0xb68>
   35acc:	cmp	r1, #0
   35ad0:	add	r3, sp, #88	; 0x58
   35ad4:	str	r2, [sp, #88]	; 0x58
   35ad8:	beq	35af0 <__flatcc_fb_build_schema@@Base+0x1824>
   35adc:	str	r1, [r3]
   35ae0:	mov	r3, r1
   35ae4:	ldr	r1, [r3], #108	; 0x6c
   35ae8:	cmp	r1, #0
   35aec:	bne	35adc <__flatcc_fb_build_schema@@Base+0x1810>
   35af0:	str	ip, [r3]
   35af4:	ldr	r3, [sp, #88]	; 0x58
   35af8:	str	r3, [r0, #24]
   35afc:	b	357f0 <__flatcc_fb_build_schema@@Base+0x1524>
   35b00:	ldrh	r3, [r5, #16]
   35b04:	cmp	r3, #5
   35b08:	beq	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35b0c:	mov	r3, ip
   35b10:	movw	r2, #37436	; 0x923c
   35b14:	movt	r2, #5
   35b18:	mov	r0, fp
   35b1c:	ldr	r1, [r5, #4]
   35b20:	str	ip, [sp]
   35b24:	str	ip, [sp, #4]
   35b28:	bl	2c558 <__flatcc_error_report@@Base>
   35b2c:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35b30:	cmp	lr, #6
   35b34:	bne	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35b38:	ldrh	r3, [r5, #16]
   35b3c:	cmp	r3, #6
   35b40:	beq	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35b44:	mov	ip, #0
   35b48:	mov	r0, fp
   35b4c:	ldr	r1, [r5, #4]
   35b50:	mov	r3, ip
   35b54:	str	ip, [sp]
   35b58:	str	ip, [sp, #4]
   35b5c:	ldr	r2, [sp, #28]
   35b60:	bl	2c558 <__flatcc_error_report@@Base>
   35b64:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35b68:	movw	r2, #41844	; 0xa374
   35b6c:	movt	r2, #5
   35b70:	ldr	r3, [r7, #4]
   35b74:	mov	ip, #0
   35b78:	b	35a3c <__flatcc_fb_build_schema@@Base+0x1770>
   35b7c:	ldrh	r3, [r7, #24]
   35b80:	strh	r4, [r7, #72]	; 0x48
   35b84:	cmp	r3, #8
   35b88:	bne	345c4 <__flatcc_fb_build_schema@@Base+0x2f8>
   35b8c:	b	34ff4 <__flatcc_fb_build_schema@@Base+0xd28>
   35b90:	ldrh	r3, [r7, #72]	; 0x48
   35b94:	tst	r3, #128	; 0x80
   35b98:	beq	34ff4 <__flatcc_fb_build_schema@@Base+0xd28>
   35b9c:	mov	ip, #0
   35ba0:	movw	r2, #41212	; 0xa0fc
   35ba4:	movt	r2, #5
   35ba8:	mov	r3, ip
   35bac:	ldr	r1, [r7, #4]
   35bb0:	mov	r0, fp
   35bb4:	str	ip, [sp]
   35bb8:	str	ip, [sp, #4]
   35bbc:	ldr	sl, [sp, #28]
   35bc0:	bl	2c558 <__flatcc_error_report@@Base>
   35bc4:	strh	r4, [r7, #24]
   35bc8:	b	346d4 <__flatcc_fb_build_schema@@Base+0x408>
   35bcc:	ldr	r3, [r5, #4]
   35bd0:	add	r0, r0, #4
   35bd4:	ldm	r3, {r1, r2}
   35bd8:	bl	29284 <fb_symbol_table_find@@Base>
   35bdc:	subs	r6, r0, #0
   35be0:	beq	34654 <__flatcc_fb_build_schema@@Base+0x388>
   35be4:	ldrh	r3, [r6, #8]
   35be8:	cmp	r3, #4
   35bec:	bhi	34654 <__flatcc_fb_build_schema@@Base+0x388>
   35bf0:	ldr	r1, [r6, #16]
   35bf4:	ldr	r0, [sp, #24]
   35bf8:	bl	287a4 <ptr_set_find_item@@Base>
   35bfc:	cmp	r0, #0
   35c00:	bne	34fa4 <__flatcc_fb_build_schema@@Base+0xcd8>
   35c04:	b	34654 <__flatcc_fb_build_schema@@Base+0x388>
   35c08:	mov	r5, r0
   35c0c:	ldr	r3, [r6, #4]
   35c10:	add	r0, r5, #4
   35c14:	ldm	r3, {r1, r2}
   35c18:	bl	29284 <fb_symbol_table_find@@Base>
   35c1c:	subs	r4, r0, #0
   35c20:	beq	35cac <__flatcc_fb_build_schema@@Base+0x19e0>
   35c24:	ldrh	r3, [r4, #8]
   35c28:	cmp	r3, #4
   35c2c:	bhi	35cac <__flatcc_fb_build_schema@@Base+0x19e0>
   35c30:	ldr	r1, [r4, #16]
   35c34:	ldr	r0, [sp, #24]
   35c38:	bl	287a4 <ptr_set_find_item@@Base>
   35c3c:	cmp	r0, #0
   35c40:	beq	35cac <__flatcc_fb_build_schema@@Base+0x19e0>
   35c44:	ldr	r3, [fp, #176]	; 0xb0
   35c48:	ldrh	r2, [r4, #8]
   35c4c:	str	r4, [fp, #404]	; 0x194
   35c50:	cmp	r3, #0
   35c54:	beq	35df8 <__flatcc_fb_build_schema@@Base+0x1b2c>
   35c58:	cmp	r2, #1
   35c5c:	bhi	35e24 <__flatcc_fb_build_schema@@Base+0x1b58>
   35c60:	mov	r3, #0
   35c64:	str	r3, [fp, #400]	; 0x190
   35c68:	b	35c78 <__flatcc_fb_build_schema@@Base+0x19ac>
   35c6c:	ldr	r3, [fp, #208]	; 0xd0
   35c70:	cmp	r3, #0
   35c74:	bne	35e70 <__flatcc_fb_build_schema@@Base+0x1ba4>
   35c78:	ldr	r0, [fp, #108]	; 0x6c
   35c7c:	clz	r3, r0
   35c80:	lsr	r3, r3, #5
   35c84:	str	r3, [fp, #120]	; 0x78
   35c88:	add	sp, sp, #140	; 0x8c
   35c8c:	ldrd	r4, [sp]
   35c90:	ldrd	r6, [sp, #8]
   35c94:	ldrd	r8, [sp, #16]
   35c98:	ldrd	sl, [sp, #24]
   35c9c:	add	sp, sp, #32
   35ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   35ca4:	ldrh	r3, [r2, #104]	; 0x68
   35ca8:	b	3564c <__flatcc_fb_build_schema@@Base+0x1380>
   35cac:	ldr	r3, [r5]
   35cb0:	cmp	r3, #0
   35cb4:	beq	35d30 <__flatcc_fb_build_schema@@Base+0x1a64>
   35cb8:	mov	r4, #0
   35cbc:	b	35cc4 <__flatcc_fb_build_schema@@Base+0x19f8>
   35cc0:	mov	r4, r2
   35cc4:	ldr	r3, [r3]
   35cc8:	add	r2, r4, #1
   35ccc:	cmp	r3, #0
   35cd0:	bne	35cc0 <__flatcc_fb_build_schema@@Base+0x19f4>
   35cd4:	cmp	sl, #0
   35cd8:	beq	35d30 <__flatcc_fb_build_schema@@Base+0x1a64>
   35cdc:	rsb	r4, r4, #0
   35ce0:	ldr	r0, [fp, #412]	; 0x19c
   35ce4:	b	35d0c <__flatcc_fb_build_schema@@Base+0x1a40>
   35ce8:	cmp	r0, #0
   35cec:	beq	35d08 <__flatcc_fb_build_schema@@Base+0x1a3c>
   35cf0:	mov	r2, r4
   35cf4:	ldr	r1, [r5]
   35cf8:	bl	2a1ec <fb_scope_table_find@@Base>
   35cfc:	cmp	r0, #0
   35d00:	bne	35c08 <__flatcc_fb_build_schema@@Base+0x193c>
   35d04:	ldr	r0, [fp, #412]	; 0x19c
   35d08:	add	r4, r4, #1
   35d0c:	cmp	r4, #0
   35d10:	bne	35ce8 <__flatcc_fb_build_schema@@Base+0x1a1c>
   35d14:	cmp	r0, #0
   35d18:	beq	35d30 <__flatcc_fb_build_schema@@Base+0x1a64>
   35d1c:	mov	r2, r4
   35d20:	mov	r1, r4
   35d24:	bl	2a1ec <fb_scope_table_find@@Base>
   35d28:	subs	r5, r0, #0
   35d2c:	bne	35c0c <__flatcc_fb_build_schema@@Base+0x1940>
   35d30:	ldr	ip, [fp, #400]	; 0x190
   35d34:	mov	r3, #0
   35d38:	str	r3, [fp, #404]	; 0x194
   35d3c:	mov	r1, ip
   35d40:	movw	r2, #41932	; 0xa3cc
   35d44:	movt	r2, #5
   35d48:	mov	r3, #0
   35d4c:	mov	r0, fp
   35d50:	bl	2dde4 <error_ref_sym@@Base>
   35d54:	b	35c60 <__flatcc_fb_build_schema@@Base+0x1994>
   35d58:	mov	r1, r3
   35d5c:	cmp	r1, #0
   35d60:	str	r2, [r4]
   35d64:	beq	357b8 <__flatcc_fb_build_schema@@Base+0x14ec>
   35d68:	add	r2, sp, #136	; 0x88
   35d6c:	add	r3, r2, r3, lsl #2
   35d70:	ldr	r4, [r3, #-48]	; 0xffffffd0
   35d74:	b	356b8 <__flatcc_fb_build_schema@@Base+0x13ec>
   35d78:	mov	r3, lr
   35d7c:	movw	r2, #37360	; 0x91f0
   35d80:	movt	r2, #5
   35d84:	mov	r0, fp
   35d88:	ldr	r1, [r4, #4]
   35d8c:	str	lr, [sp]
   35d90:	str	lr, [sp, #4]
   35d94:	bl	2c558 <__flatcc_error_report@@Base>
   35d98:	b	34bb8 <__flatcc_fb_build_schema@@Base+0x8ec>
   35d9c:	ldr	r3, [sp, #52]	; 0x34
   35da0:	b	357b4 <__flatcc_fb_build_schema@@Base+0x14e8>
   35da4:	mov	r3, lr
   35da8:	movw	r2, #37360	; 0x91f0
   35dac:	movt	r2, #5
   35db0:	mov	r0, fp
   35db4:	ldr	r1, [r5, #4]
   35db8:	str	lr, [sp]
   35dbc:	str	lr, [sp, #4]
   35dc0:	bl	2c558 <__flatcc_error_report@@Base>
   35dc4:	b	3550c <__flatcc_fb_build_schema@@Base+0x1240>
   35dc8:	ldr	sl, [sp, #16]
   35dcc:	mov	r3, ip
   35dd0:	movw	r2, #39036	; 0x987c
   35dd4:	movt	r2, #5
   35dd8:	mov	r0, fp
   35ddc:	ldr	r1, [r4, #4]
   35de0:	str	ip, [sp]
   35de4:	str	ip, [sp, #4]
   35de8:	bl	2c558 <__flatcc_error_report@@Base>
   35dec:	mov	r3, #1
   35df0:	strh	r3, [sl, #48]	; 0x30
   35df4:	b	359bc <__flatcc_fb_build_schema@@Base+0x16f0>
   35df8:	cmp	r2, #0
   35dfc:	beq	35c60 <__flatcc_fb_build_schema@@Base+0x1994>
   35e00:	movw	r2, #41992	; 0xa408
   35e04:	movt	r2, #5
   35e08:	ldr	r1, [fp, #400]	; 0x190
   35e0c:	mov	r0, fp
   35e10:	bl	2dde4 <error_ref_sym@@Base>
   35e14:	b	35c60 <__flatcc_fb_build_schema@@Base+0x1994>
   35e18:	str	sl, [r4, #16]
   35e1c:	str	r3, [r4, #88]	; 0x58
   35e20:	b	343a0 <__flatcc_fb_build_schema@@Base+0xd4>
   35e24:	movw	r2, #41952	; 0xa3e0
   35e28:	movt	r2, #5
   35e2c:	ldr	r1, [fp, #400]	; 0x190
   35e30:	mov	r3, #0
   35e34:	mov	r0, fp
   35e38:	bl	2dde4 <error_ref_sym@@Base>
   35e3c:	b	35c60 <__flatcc_fb_build_schema@@Base+0x1994>
   35e40:	mov	r3, ip
   35e44:	movw	r2, #41212	; 0xa0fc
   35e48:	movt	r2, #5
   35e4c:	mov	r0, fp
   35e50:	ldr	r1, [r7, #4]
   35e54:	str	ip, [sp]
   35e58:	str	ip, [sp, #4]
   35e5c:	ldr	sl, [sp, #28]
   35e60:	bl	2c558 <__flatcc_error_report@@Base>
   35e64:	mov	r3, #1
   35e68:	strh	r3, [r7, #24]
   35e6c:	b	346d4 <__flatcc_fb_build_schema@@Base+0x408>
   35e70:	movw	r2, #41908	; 0xa3b4
   35e74:	movt	r2, #5
   35e78:	str	ip, [sp]
   35e7c:	mov	r3, ip
   35e80:	mov	r1, ip
   35e84:	str	ip, [sp, #4]
   35e88:	mov	r0, fp
   35e8c:	bl	2c558 <__flatcc_error_report@@Base>
   35e90:	b	35c78 <__flatcc_fb_build_schema@@Base+0x19ac>
   35e94:	mov	ip, r0
   35e98:	mov	r3, r0
   35e9c:	ldr	r1, [r7, #4]
   35ea0:	movw	r2, #41060	; 0xa064
   35ea4:	movt	r2, #5
   35ea8:	mov	r0, fp
   35eac:	str	ip, [sp]
   35eb0:	str	ip, [sp, #4]
   35eb4:	ldr	sl, [sp, #28]
   35eb8:	bl	2c558 <__flatcc_error_report@@Base>
   35ebc:	b	346d4 <__flatcc_fb_build_schema@@Base+0x408>
   35ec0:	ldr	r3, [fp, #396]	; 0x18c
   35ec4:	cmp	r3, #0
   35ec8:	movne	r0, #0
   35ecc:	bne	34a14 <__flatcc_fb_build_schema@@Base+0x748>
   35ed0:	b	357fc <__flatcc_fb_build_schema@@Base+0x1530>
   35ed4:	movw	r2, #40904	; 0x9fc8
   35ed8:	movt	r2, #5
   35edc:	ldr	r1, [sl, #4]
   35ee0:	mov	ip, #0
   35ee4:	b	35194 <__flatcc_fb_build_schema@@Base+0xec8>
   35ee8:	str	r0, [fp, #404]	; 0x194
   35eec:	ldr	ip, [fp, #400]	; 0x190
   35ef0:	b	35d3c <__flatcc_fb_build_schema@@Base+0x1a70>
   35ef4:	ldr	r3, [r6, #4]
   35ef8:	movw	r2, #41264	; 0xa130
   35efc:	movt	r2, #5
   35f00:	ldr	sl, [sp, #28]
   35f04:	mov	r0, fp
   35f08:	ldr	r1, [r7, #4]
   35f0c:	str	ip, [sp]
   35f10:	str	ip, [sp, #4]
   35f14:	bl	2c558 <__flatcc_error_report@@Base>
   35f18:	mov	r3, #1
   35f1c:	strh	r3, [r7, #24]
   35f20:	b	346d4 <__flatcc_fb_build_schema@@Base+0x408>
   35f24:	movw	r2, #41144	; 0xa0b8
   35f28:	movt	r2, #5
   35f2c:	ldr	r3, [r6, #4]
   35f30:	mov	ip, #0
   35f34:	ldr	sl, [sp, #28]
   35f38:	b	35f04 <__flatcc_fb_build_schema@@Base+0x1c38>
   35f3c:	movw	r3, #49320	; 0xc0a8
   35f40:	movt	r3, #6
   35f44:	movw	r0, #3360	; 0xd20
   35f48:	movt	r0, #4
   35f4c:	ldr	r3, [r3]
   35f50:	mov	r2, #34	; 0x22
   35f54:	mov	r1, #1
   35f58:	bl	13ff4 <fwrite@plt>
   35f5c:	mov	r0, #1
   35f60:	bl	14048 <exit@plt>
   35f64:	movw	r1, #36548	; 0x8ec4
   35f68:	movt	r1, #5
   35f6c:	ldr	r3, [pc, #-2880]	; 35434 <__flatcc_fb_build_schema@@Base+0x1168>
   35f70:	movw	r0, #41900	; 0xa3ac
   35f74:	movt	r0, #5
   35f78:	movw	r2, #1521	; 0x5f1
   35f7c:	bl	14120 <__assert_fail@plt>
   35f80:	movw	r1, #36548	; 0x8ec4
   35f84:	movt	r1, #5
   35f88:	ldr	r3, [pc, #-2904]	; 35438 <__flatcc_fb_build_schema@@Base+0x116c>
   35f8c:	movw	r0, #40792	; 0x9f58
   35f90:	movt	r0, #5
   35f94:	movw	r2, #1558	; 0x616
   35f98:	bl	14120 <__assert_fail@plt>
   35f9c:	movw	r1, #36548	; 0x8ec4
   35fa0:	movt	r1, #5
   35fa4:	ldr	r3, [pc, #-2928]	; 3543c <__flatcc_fb_build_schema@@Base+0x1170>
   35fa8:	movw	r0, #38984	; 0x9848
   35fac:	movt	r0, #5
   35fb0:	movw	r2, #1129	; 0x469
   35fb4:	bl	14120 <__assert_fail@plt>
   35fb8:	mov	ip, #0
   35fbc:	mov	r0, fp
   35fc0:	ldr	r1, [sl, #4]
   35fc4:	mov	r3, ip
   35fc8:	movw	r2, #41436	; 0xa1dc
   35fcc:	movt	r2, #5
   35fd0:	str	ip, [sp]
   35fd4:	str	ip, [sp, #4]
   35fd8:	bl	2c558 <__flatcc_error_report@@Base>
   35fdc:	mvn	r0, #0
   35fe0:	b	35c88 <__flatcc_fb_build_schema@@Base+0x19bc>

00035fe4 <__flatcc_fb_coerce_scalar_type@@Base>:
   35fe4:	ldrh	ip, [r3, #8]
   35fe8:	cmp	ip, #0
   35fec:	beq	36128 <__flatcc_fb_coerce_scalar_type@@Base+0x144>
   35ff0:	cmp	ip, #4
   35ff4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   35ff8:	mov	r5, r0
   35ffc:	mov	r4, r3
   36000:	str	r6, [sp, #8]
   36004:	mov	r6, r1
   36008:	strd	r8, [sp, #12]
   3600c:	strd	sl, [sp, #20]
   36010:	str	lr, [sp, #28]
   36014:	vpush	{d8}
   36018:	sub	sp, sp, #8
   3601c:	beq	360a0 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   36020:	cmp	ip, #1
   36024:	beq	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   36028:	cmp	ip, #6
   3602c:	bne	36130 <__flatcc_fb_coerce_scalar_type@@Base+0x14c>
   36030:	cmp	r2, #5
   36034:	beq	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   36038:	ldr	r3, [r0, #144]	; 0x90
   3603c:	cmp	r3, #0
   36040:	beq	361a8 <__flatcc_fb_coerce_scalar_type@@Base+0x1c4>
   36044:	ldrb	r0, [r4]
   36048:	mov	r1, #0
   3604c:	mov	r3, #5
   36050:	cmp	r1, #0
   36054:	cmpeq	r0, #1
   36058:	strd	r0, [r4]
   3605c:	strh	r3, [r4, #8]
   36060:	bhi	3672c <__flatcc_fb_coerce_scalar_type@@Base+0x748>
   36064:	sub	r2, r2, #1
   36068:	cmp	r2, #10
   3606c:	ldrls	pc, [pc, r2, lsl #2]
   36070:	b	36684 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   36074:	andeq	r6, r3, r4, lsl #2
   36078:	andeq	r6, r3, r4, lsl #2
   3607c:	ldrdeq	r6, [r3], -ip
   36080:	andeq	r6, r3, r4, lsr #5
   36084:	andeq	r6, r3, r4, lsl #13
   36088:	strdeq	r6, [r3], -r8
   3608c:	andeq	r6, r3, r4, lsl r4
   36090:	ldrdeq	r6, [r3], -r4
   36094:	muleq	r3, r4, r3
   36098:	andeq	r6, r3, r0, lsl #12
   3609c:	andeq	r6, r3, r4, asr #12
   360a0:	ldrd	r0, [r3]
   360a4:	cmp	r0, #0
   360a8:	sbcs	r3, r1, #0
   360ac:	blt	3616c <__flatcc_fb_coerce_scalar_type@@Base+0x188>
   360b0:	mov	r3, #5
   360b4:	sub	r2, r2, #1
   360b8:	strh	r3, [r4, #8]
   360bc:	cmp	r2, #10
   360c0:	ldrls	pc, [pc, r2, lsl #2]
   360c4:	b	36684 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   360c8:	andeq	r6, r3, r0, ror r2
   360cc:	andeq	r6, r3, r8, lsl r2
   360d0:	ldrdeq	r6, [r3], -r0
   360d4:	muleq	r3, r8, r2
   360d8:			; <UNDEFINED> instruction: 0x000366bc
   360dc:	andeq	r6, r3, r4, ror #3
   360e0:	andeq	r6, r3, r0, lsl #8
   360e4:	andeq	r6, r3, r0, asr #7
   360e8:	andeq	r6, r3, r0, lsl #7
   360ec:	andeq	r6, r3, r8, asr #6
   360f0:	andeq	r6, r3, r0, lsl r3
   360f4:	cmp	ip, #5
   360f8:	beq	366bc <__flatcc_fb_coerce_scalar_type@@Base+0x6d8>
   360fc:	cmp	ip, #6
   36100:	bne	366c8 <__flatcc_fb_coerce_scalar_type@@Base+0x6e4>
   36104:	mov	r0, #0
   36108:	add	sp, sp, #8
   3610c:	vpop	{d8}
   36110:	ldrd	r4, [sp]
   36114:	ldr	r6, [sp, #8]
   36118:	ldrd	r8, [sp, #12]
   3611c:	ldrd	sl, [sp, #20]
   36120:	add	sp, sp, #28
   36124:	pop	{pc}		; (ldr pc, [sp], #4)
   36128:	mov	r0, #0
   3612c:	bx	lr
   36130:	sub	r2, r2, #1
   36134:	cmp	r2, #10
   36138:	ldrls	pc, [pc, r2, lsl #2]
   3613c:	b	36684 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   36140:	andeq	r6, r3, r4, ror r2
   36144:	andeq	r6, r3, ip, lsl r2
   36148:	ldrdeq	r6, [r3], -r4
   3614c:	muleq	r3, ip, r2
   36150:	strdeq	r6, [r3], -r4
   36154:	andeq	r6, r3, r8, ror #3
   36158:	andeq	r6, r3, r4, lsl #8
   3615c:	andeq	r6, r3, r4, asr #7
   36160:	andeq	r6, r3, r4, lsl #7
   36164:	andeq	r6, r3, ip, asr #6
   36168:	andeq	r6, r3, r4, lsl r3
   3616c:	sub	r2, r2, #1
   36170:	cmp	r2, #10
   36174:	ldrls	pc, [pc, r2, lsl #2]
   36178:	b	36684 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   3617c:	andeq	r6, r3, ip, ror r2
   36180:	muleq	r3, r0, r5
   36184:	andeq	r6, r3, r8, asr r5
   36188:	andeq	r6, r3, r4, ror r5
   3618c:	andeq	r6, r3, r8, asr #13
   36190:	andeq	r6, r3, r4, lsl #2
   36194:	andeq	r6, r3, ip, lsr #9
   36198:	andeq	r6, r3, r4, ror r4
   3619c:	andeq	r6, r3, r0, asr #8
   361a0:	andeq	r6, r3, ip, lsl r5
   361a4:	andeq	r6, r3, r0, ror #9
   361a8:	sub	r2, r2, #1
   361ac:	cmp	r2, #10
   361b0:	ldrls	pc, [pc, r2, lsl #2]
   361b4:	b	36684 <__flatcc_fb_coerce_scalar_type@@Base+0x6a0>
   361b8:	andeq	r6, r3, ip, ror r2
   361bc:	muleq	r3, r0, r5
   361c0:	andeq	r6, r3, r8, asr r5
   361c4:	andeq	r6, r3, r4, ror r5
   361c8:	andeq	r6, r3, r4, lsl #13
   361cc:	andeq	r6, r3, r0, lsr #13
   361d0:	andeq	r6, r3, r4, ror #11
   361d4:	andeq	r6, r3, r8, asr #11
   361d8:	andeq	r6, r3, ip, lsr #11
   361dc:	andeq	r6, r3, r4, ror #6
   361e0:	andeq	r6, r3, ip, lsr #6
   361e4:	ldrh	ip, [r4, #8]
   361e8:	cmp	ip, #4
   361ec:	beq	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   361f0:	cmp	ip, #5
   361f4:	bne	366a0 <__flatcc_fb_coerce_scalar_type@@Base+0x6bc>
   361f8:	ldrd	r2, [r4]
   361fc:	cmp	r2, #0
   36200:	sbcs	r3, r3, #0
   36204:	blt	36710 <__flatcc_fb_coerce_scalar_type@@Base+0x72c>
   36208:	mov	r3, #4
   3620c:	mov	r0, #0
   36210:	strh	r3, [r4, #8]
   36214:	b	36108 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   36218:	ldrh	ip, [r4, #8]
   3621c:	cmp	ip, #5
   36220:	bne	36590 <__flatcc_fb_coerce_scalar_type@@Base+0x5ac>
   36224:	ldrd	r2, [r4]
   36228:	mov	r1, #0
   3622c:	mvn	r0, #0
   36230:	cmp	r3, r1
   36234:	cmpeq	r2, r0
   36238:	bls	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   3623c:	ldr	r1, [r6, #4]
   36240:	mov	ip, #0
   36244:	movw	r2, #42384	; 0xa590
   36248:	movt	r2, #5
   3624c:	mov	r0, r5
   36250:	mov	r3, ip
   36254:	str	ip, [sp]
   36258:	str	ip, [sp, #4]
   3625c:	bl	2c558 <__flatcc_error_report@@Base>
   36260:	mov	r3, #1
   36264:	mvn	r0, #0
   36268:	strh	r3, [r4, #8]
   3626c:	b	36108 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   36270:	ldrh	ip, [r4, #8]
   36274:	cmp	ip, #5
   36278:	beq	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   3627c:	mov	ip, #0
   36280:	movw	r2, #42276	; 0xa524
   36284:	movt	r2, #5
   36288:	mov	r0, r5
   3628c:	ldr	r1, [r6, #4]
   36290:	mov	r3, ip
   36294:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36298:	ldrh	ip, [r4, #8]
   3629c:	cmp	ip, #5
   362a0:	bne	36574 <__flatcc_fb_coerce_scalar_type@@Base+0x590>
   362a4:	ldrd	r2, [r4]
   362a8:	cmp	r3, #0
   362ac:	cmpeq	r2, #255	; 0xff
   362b0:	bls	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   362b4:	mov	ip, #0
   362b8:	movw	r2, #42564	; 0xa644
   362bc:	movt	r2, #5
   362c0:	mov	r0, r5
   362c4:	ldr	r1, [r6, #4]
   362c8:	mov	r3, ip
   362cc:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   362d0:	ldrh	ip, [r4, #8]
   362d4:	cmp	ip, #5
   362d8:	bne	36558 <__flatcc_fb_coerce_scalar_type@@Base+0x574>
   362dc:	ldrd	r2, [r4]
   362e0:	mov	r1, #0
   362e4:	movw	r0, #65535	; 0xffff
   362e8:	cmp	r3, r1
   362ec:	cmpeq	r2, r0
   362f0:	bls	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   362f4:	mov	ip, #0
   362f8:	movw	r2, #42476	; 0xa5ec
   362fc:	movt	r2, #5
   36300:	mov	r0, r5
   36304:	ldr	r1, [r6, #4]
   36308:	mov	r3, ip
   3630c:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36310:	ldrh	ip, [r4, #8]
   36314:	cmp	ip, #4
   36318:	beq	364e0 <__flatcc_fb_coerce_scalar_type@@Base+0x4fc>
   3631c:	cmp	ip, #5
   36320:	beq	36644 <__flatcc_fb_coerce_scalar_type@@Base+0x660>
   36324:	cmp	ip, #3
   36328:	beq	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   3632c:	mov	ip, #0
   36330:	movw	r2, #43268	; 0xa904
   36334:	movt	r2, #5
   36338:	mov	r0, r5
   3633c:	ldr	r1, [r6, #4]
   36340:	mov	r3, ip
   36344:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36348:	ldrh	ip, [r4, #8]
   3634c:	cmp	ip, #4
   36350:	beq	3651c <__flatcc_fb_coerce_scalar_type@@Base+0x538>
   36354:	cmp	ip, #5
   36358:	beq	36600 <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   3635c:	cmp	ip, #3
   36360:	beq	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   36364:	mov	ip, #0
   36368:	movw	r2, #43160	; 0xa898
   3636c:	movt	r2, #5
   36370:	mov	r0, r5
   36374:	ldr	r1, [r6, #4]
   36378:	mov	r3, ip
   3637c:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36380:	ldrh	ip, [r4, #8]
   36384:	cmp	ip, #4
   36388:	beq	36440 <__flatcc_fb_coerce_scalar_type@@Base+0x45c>
   3638c:	cmp	ip, #5
   36390:	bne	365ac <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   36394:	ldrd	r2, [r4]
   36398:	cmp	r2, #128	; 0x80
   3639c:	sbcs	r3, r3, #0
   363a0:	blt	36208 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   363a4:	mov	ip, #0
   363a8:	movw	r2, #42916	; 0xa7a4
   363ac:	movt	r2, #5
   363b0:	mov	r0, r5
   363b4:	ldr	r1, [r6, #4]
   363b8:	mov	r3, ip
   363bc:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   363c0:	ldrh	ip, [r4, #8]
   363c4:	cmp	ip, #4
   363c8:	beq	36474 <__flatcc_fb_coerce_scalar_type@@Base+0x490>
   363cc:	cmp	ip, #5
   363d0:	bne	365c8 <__flatcc_fb_coerce_scalar_type@@Base+0x5e4>
   363d4:	ldrd	r2, [r4]
   363d8:	cmp	r2, #32768	; 0x8000
   363dc:	sbcs	r3, r3, #0
   363e0:	blt	36208 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   363e4:	mov	ip, #0
   363e8:	movw	r2, #42808	; 0xa738
   363ec:	movt	r2, #5
   363f0:	mov	r0, r5
   363f4:	ldr	r1, [r6, #4]
   363f8:	mov	r3, ip
   363fc:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36400:	ldrh	ip, [r4, #8]
   36404:	cmp	ip, #4
   36408:	beq	364ac <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   3640c:	cmp	ip, #5
   36410:	bne	365e4 <__flatcc_fb_coerce_scalar_type@@Base+0x600>
   36414:	ldrd	r2, [r4]
   36418:	cmp	r2, #-2147483648	; 0x80000000
   3641c:	sbcs	r3, r3, #0
   36420:	blt	36208 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   36424:	mov	ip, #0
   36428:	movw	r2, #42700	; 0xa6cc
   3642c:	movt	r2, #5
   36430:	mov	r0, r5
   36434:	ldr	r1, [r6, #4]
   36438:	mov	r3, ip
   3643c:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36440:	ldrd	r2, [r4]
   36444:	mvn	r0, #127	; 0x7f
   36448:	mvn	r1, #0
   3644c:	cmp	r2, r0
   36450:	sbcs	r3, r3, r1
   36454:	bge	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   36458:	mov	ip, #0
   3645c:	movw	r2, #42888	; 0xa788
   36460:	movt	r2, #5
   36464:	mov	r0, r5
   36468:	ldr	r1, [r6, #4]
   3646c:	mov	r3, ip
   36470:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36474:	ldrd	r2, [r4]
   36478:	mov	r0, #32768	; 0x8000
   3647c:	movt	r0, #65535	; 0xffff
   36480:	mvn	r1, #0
   36484:	cmp	r2, r0
   36488:	sbcs	r3, r3, r1
   3648c:	bge	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   36490:	mov	ip, #0
   36494:	movw	r2, #42776	; 0xa718
   36498:	movt	r2, #5
   3649c:	mov	r0, r5
   364a0:	ldr	r1, [r6, #4]
   364a4:	mov	r3, ip
   364a8:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   364ac:	ldrd	r2, [r4]
   364b0:	mov	r0, #-2147483648	; 0x80000000
   364b4:	mvn	r1, #0
   364b8:	cmp	r2, r0
   364bc:	sbcs	r3, r3, r1
   364c0:	bge	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   364c4:	mov	ip, #0
   364c8:	movw	r2, #42672	; 0xa6b0
   364cc:	movt	r2, #5
   364d0:	mov	r0, r5
   364d4:	ldr	r1, [r6, #4]
   364d8:	mov	r3, ip
   364dc:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   364e0:	ldrd	r8, [r4]
   364e4:	mov	r1, r9
   364e8:	mov	r0, r8
   364ec:	bl	3f314 <fb_value_set_visit@@Base+0x618>
   364f0:	vmov	s16, r0
   364f4:	bl	3f3dc <fb_value_set_visit@@Base+0x6e0>
   364f8:	cmp	r9, r1
   364fc:	cmpeq	r8, r0
   36500:	bne	36668 <__flatcc_fb_coerce_scalar_type@@Base+0x684>
   36504:	vcvt.f64.f32	d8, s16
   36508:	mov	r3, #3
   3650c:	mov	r0, #0
   36510:	vstr	d8, [r4]
   36514:	strh	r3, [r4, #8]
   36518:	b	36108 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   3651c:	ldrd	r8, [r4]
   36520:	mov	r0, r8
   36524:	mov	r1, r9
   36528:	bl	3f0e0 <fb_value_set_visit@@Base+0x3e4>
   3652c:	mov	sl, r0
   36530:	mov	fp, r1
   36534:	bl	3f408 <fb_value_set_visit@@Base+0x70c>
   36538:	cmp	r9, r1
   3653c:	cmpeq	r8, r0
   36540:	bne	36628 <__flatcc_fb_coerce_scalar_type@@Base+0x644>
   36544:	mov	r3, #3
   36548:	mov	r0, #0
   3654c:	strd	sl, [r4]
   36550:	strh	r3, [r4, #8]
   36554:	b	36108 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   36558:	mov	ip, #0
   3655c:	movw	r2, #42416	; 0xa5b0
   36560:	movt	r2, #5
   36564:	mov	r0, r5
   36568:	ldr	r1, [r6, #4]
   3656c:	mov	r3, ip
   36570:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36574:	mov	ip, #0
   36578:	movw	r2, #42508	; 0xa60c
   3657c:	movt	r2, #5
   36580:	mov	r0, r5
   36584:	ldr	r1, [r6, #4]
   36588:	mov	r3, ip
   3658c:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36590:	mov	ip, #0
   36594:	movw	r2, #42328	; 0xa558
   36598:	movt	r2, #5
   3659c:	mov	r0, r5
   365a0:	ldr	r1, [r6, #4]
   365a4:	mov	r3, ip
   365a8:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   365ac:	mov	ip, #0
   365b0:	movw	r2, #42944	; 0xa7c0
   365b4:	movt	r2, #5
   365b8:	mov	r0, r5
   365bc:	ldr	r1, [r6, #4]
   365c0:	mov	r3, ip
   365c4:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   365c8:	mov	ip, #0
   365cc:	movw	r2, #42840	; 0xa758
   365d0:	movt	r2, #5
   365d4:	mov	r0, r5
   365d8:	ldr	r1, [r6, #4]
   365dc:	mov	r3, ip
   365e0:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   365e4:	mov	ip, #0
   365e8:	movw	r2, #42728	; 0xa6e8
   365ec:	movt	r2, #5
   365f0:	mov	r0, r5
   365f4:	ldr	r1, [r6, #4]
   365f8:	mov	r3, ip
   365fc:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36600:	ldrd	r8, [r4]
   36604:	mov	r0, r8
   36608:	mov	r1, r9
   3660c:	bl	3f0cc <fb_value_set_visit@@Base+0x3d0>
   36610:	mov	sl, r0
   36614:	mov	fp, r1
   36618:	bl	3f478 <fb_value_set_visit@@Base+0x77c>
   3661c:	cmp	r9, r1
   36620:	cmpeq	r8, r0
   36624:	beq	36544 <__flatcc_fb_coerce_scalar_type@@Base+0x560>
   36628:	mov	ip, #0
   3662c:	movw	r2, #43112	; 0xa868
   36630:	movt	r2, #5
   36634:	mov	r0, r5
   36638:	ldr	r1, [r6, #4]
   3663c:	mov	r3, ip
   36640:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36644:	ldrd	r8, [r4]
   36648:	mov	r1, r9
   3664c:	mov	r0, r8
   36650:	bl	3f304 <fb_value_set_visit@@Base+0x608>
   36654:	vmov	s16, r0
   36658:	bl	3f438 <fb_value_set_visit@@Base+0x73c>
   3665c:	cmp	r9, r1
   36660:	cmpeq	r8, r0
   36664:	beq	36504 <__flatcc_fb_coerce_scalar_type@@Base+0x520>
   36668:	mov	ip, #0
   3666c:	movw	r2, #43220	; 0xa8d4
   36670:	movt	r2, #5
   36674:	mov	r0, r5
   36678:	ldr	r1, [r6, #4]
   3667c:	mov	r3, ip
   36680:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36684:	mov	ip, #0
   36688:	movw	r2, #43324	; 0xa93c
   3668c:	movt	r2, #5
   36690:	mov	r0, r5
   36694:	ldr	r1, [r6, #4]
   36698:	mov	r3, ip
   3669c:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   366a0:	mov	ip, #0
   366a4:	movw	r2, #42628	; 0xa684
   366a8:	movt	r2, #5
   366ac:	mov	r0, r5
   366b0:	ldr	r1, [r6, #4]
   366b4:	mov	r3, ip
   366b8:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   366bc:	ldr	r3, [r5, #144]	; 0x90
   366c0:	cmp	r3, #0
   366c4:	bne	366e4 <__flatcc_fb_coerce_scalar_type@@Base+0x700>
   366c8:	mov	ip, #0
   366cc:	movw	r2, #43056	; 0xa830
   366d0:	movt	r2, #5
   366d4:	mov	r0, r5
   366d8:	ldr	r1, [r6, #4]
   366dc:	mov	r3, ip
   366e0:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   366e4:	ldrd	r2, [r4]
   366e8:	cmp	r3, #0
   366ec:	cmpeq	r2, #1
   366f0:	bls	36104 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   366f4:	mov	ip, #0
   366f8:	movw	r2, #42992	; 0xa7f0
   366fc:	movt	r2, #5
   36700:	mov	r0, r5
   36704:	ldr	r1, [r6, #4]
   36708:	mov	r3, ip
   3670c:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   36710:	mov	ip, #0
   36714:	movw	r2, #42596	; 0xa664
   36718:	movt	r2, #5
   3671c:	mov	r0, r5
   36720:	ldr	r1, [r6, #4]
   36724:	mov	r3, ip
   36728:	b	36254 <__flatcc_fb_coerce_scalar_type@@Base+0x270>
   3672c:	movw	r3, #42140	; 0xa49c
   36730:	movt	r3, #5
   36734:	movw	r1, #42172	; 0xa4bc
   36738:	movt	r1, #5
   3673c:	movw	r0, #42244	; 0xa504
   36740:	movt	r0, #5
   36744:	mov	r2, #52	; 0x34
   36748:	bl	14120 <__assert_fail@plt>

0003674c <flatcc_builder_default_alloc@@Base>:
   3674c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   36750:	subs	r5, r2, #0
   36754:	strd	r6, [sp, #8]
   36758:	mov	r6, r1
   3675c:	str	r8, [sp, #16]
   36760:	str	lr, [sp, #20]
   36764:	beq	3679c <flatcc_builder_default_alloc@@Base+0x50>
   36768:	mov	r7, r3
   3676c:	ldr	r3, [sp, #24]
   36770:	sub	r2, r3, #1
   36774:	cmp	r2, #6
   36778:	ldrls	pc, [pc, r2, lsl #2]
   3677c:	b	3684c <flatcc_builder_default_alloc@@Base+0x100>
   36780:	andeq	r6, r3, ip, asr #15
   36784:	andeq	r6, r3, ip, asr #16
   36788:	andeq	r6, r3, ip, asr #16
   3678c:	andeq	r6, r3, r4, asr #16
   36790:	andeq	r6, r3, r4, lsr r8
   36794:	andeq	r6, r3, ip, asr #16
   36798:	andeq	r6, r3, ip, lsr r8
   3679c:	ldr	r0, [r1]
   367a0:	cmp	r0, #0
   367a4:	beq	367b8 <flatcc_builder_default_alloc@@Base+0x6c>
   367a8:	bl	13fac <free@plt>
   367ac:	mov	r0, r5
   367b0:	str	r5, [r6]
   367b4:	str	r5, [r6, #4]
   367b8:	ldrd	r4, [sp]
   367bc:	ldrd	r6, [sp, #8]
   367c0:	ldr	r8, [sp, #16]
   367c4:	add	sp, sp, #20
   367c8:	pop	{pc}		; (ldr pc, [sp], #4)
   367cc:	mov	r4, #256	; 0x100
   367d0:	cmp	r4, r5
   367d4:	bcs	367e4 <flatcc_builder_default_alloc@@Base+0x98>
   367d8:	lsl	r4, r4, #1
   367dc:	cmp	r5, r4
   367e0:	bhi	367d8 <flatcc_builder_default_alloc@@Base+0x8c>
   367e4:	ldr	r2, [r6, #4]
   367e8:	cmp	r5, r2
   367ec:	bhi	367fc <flatcc_builder_default_alloc@@Base+0xb0>
   367f0:	cmp	r4, r2, lsr #1
   367f4:	movls	r0, #0
   367f8:	bls	367b8 <flatcc_builder_default_alloc@@Base+0x6c>
   367fc:	mov	r1, r4
   36800:	ldr	r0, [r6]
   36804:	bl	13fe8 <realloc@plt>
   36808:	subs	r5, r0, #0
   3680c:	beq	36868 <flatcc_builder_default_alloc@@Base+0x11c>
   36810:	cmp	r7, #0
   36814:	beq	36824 <flatcc_builder_default_alloc@@Base+0xd8>
   36818:	ldr	r0, [r6, #4]
   3681c:	cmp	r0, r4
   36820:	bcc	36854 <flatcc_builder_default_alloc@@Base+0x108>
   36824:	mov	r0, #0
   36828:	str	r5, [r6]
   3682c:	str	r4, [r6, #4]
   36830:	b	367b8 <flatcc_builder_default_alloc@@Base+0x6c>
   36834:	mov	r4, r5
   36838:	b	367e4 <flatcc_builder_default_alloc@@Base+0x98>
   3683c:	mov	r4, #64	; 0x40
   36840:	b	367d0 <flatcc_builder_default_alloc@@Base+0x84>
   36844:	mov	r4, #288	; 0x120
   36848:	b	367d0 <flatcc_builder_default_alloc@@Base+0x84>
   3684c:	mov	r4, #32
   36850:	b	367d0 <flatcc_builder_default_alloc@@Base+0x84>
   36854:	sub	r2, r4, r0
   36858:	mov	r1, #0
   3685c:	add	r0, r5, r0
   36860:	bl	14084 <memset@plt>
   36864:	b	36824 <flatcc_builder_default_alloc@@Base+0xd8>
   36868:	mvn	r0, #0
   3686c:	b	367b8 <flatcc_builder_default_alloc@@Base+0x6c>
   36870:	movw	r3, #43348	; 0xa954
   36874:	movt	r3, #5
   36878:	str	r4, [sp, #-8]!
   3687c:	movw	r1, #45220	; 0xb0a4
   36880:	movt	r1, #5
   36884:	str	lr, [sp, #4]
   36888:	movw	r0, #41608	; 0xa288
   3688c:	movt	r0, #4
   36890:	mov	r2, #308	; 0x134
   36894:	bl	14120 <__assert_fail@plt>
   36898:	movw	r1, #45220	; 0xb0a4
   3689c:	movt	r1, #5
   368a0:	ldr	r3, [pc, #20]	; 368bc <flatcc_builder_default_alloc@@Base+0x170>
   368a4:	movw	r0, #41608	; 0xa288
   368a8:	movt	r0, #4
   368ac:	str	r4, [sp, #-8]!
   368b0:	movw	r2, #677	; 0x2a5
   368b4:	str	lr, [sp, #4]
   368b8:	bl	14120 <__assert_fail@plt>
   368bc:	andeq	sl, r5, r4, ror #18
   368c0:	movw	r1, #45220	; 0xb0a4
   368c4:	movt	r1, #5
   368c8:	ldr	r3, [pc, #20]	; 368e4 <flatcc_builder_default_alloc@@Base+0x198>
   368cc:	movw	r0, #41608	; 0xa288
   368d0:	movt	r0, #4
   368d4:	str	r4, [sp, #-8]!
   368d8:	movw	r2, #702	; 0x2be
   368dc:	str	lr, [sp, #4]
   368e0:	bl	14120 <__assert_fail@plt>
   368e4:	andeq	sl, r5, r0, ror r9
   368e8:	movw	r1, #45220	; 0xb0a4
   368ec:	movt	r1, #5
   368f0:	ldr	r3, [pc, #20]	; 3690c <flatcc_builder_default_alloc@@Base+0x1c0>
   368f4:	movw	r0, #41608	; 0xa288
   368f8:	movt	r0, #4
   368fc:	str	r4, [sp, #-8]!
   36900:	movw	r2, #651	; 0x28b
   36904:	str	lr, [sp, #4]
   36908:	bl	14120 <__assert_fail@plt>
   3690c:	andeq	sl, r5, r0, lsl #19
   36910:	movw	r1, #45220	; 0xb0a4
   36914:	movt	r1, #5
   36918:	ldr	r3, [pc, #20]	; 36934 <flatcc_builder_default_alloc@@Base+0x1e8>
   3691c:	movw	r0, #45292	; 0xb0ec
   36920:	movt	r0, #5
   36924:	str	r4, [sp, #-8]!
   36928:	mov	r2, #892	; 0x37c
   3692c:	str	lr, [sp, #4]
   36930:	bl	14120 <__assert_fail@plt>
   36934:	andeq	sl, r5, ip, lsl #19
   36938:	movw	r1, #45220	; 0xb0a4
   3693c:	movt	r1, #5
   36940:	ldr	r3, [pc, #20]	; 3695c <flatcc_builder_default_alloc@@Base+0x210>
   36944:	movw	r0, #45320	; 0xb108
   36948:	movt	r0, #5
   3694c:	str	r4, [sp, #-8]!
   36950:	movw	r2, #542	; 0x21e
   36954:	str	lr, [sp, #4]
   36958:	bl	14120 <__assert_fail@plt>
   3695c:	andeq	sl, r5, r0, lsr #19
   36960:	movw	r1, #45220	; 0xb0a4
   36964:	movt	r1, #5
   36968:	ldr	r3, [pc, #20]	; 36984 <flatcc_builder_default_alloc@@Base+0x238>
   3696c:	movw	r0, #45348	; 0xb124
   36970:	movt	r0, #5
   36974:	str	r4, [sp, #-8]!
   36978:	movw	r2, #966	; 0x3c6
   3697c:	str	lr, [sp, #4]
   36980:	bl	14120 <__assert_fail@plt>
   36984:	andeq	sl, r5, r0, asr #19
   36988:	movw	r1, #45220	; 0xb0a4
   3698c:	movt	r1, #5
   36990:	ldr	r3, [pc, #20]	; 369ac <flatcc_builder_default_alloc@@Base+0x260>
   36994:	movw	r0, #45392	; 0xb150
   36998:	movt	r0, #5
   3699c:	str	r4, [sp, #-8]!
   369a0:	movw	r2, #1926	; 0x786
   369a4:	str	lr, [sp, #4]
   369a8:	bl	14120 <__assert_fail@plt>
   369ac:	andeq	sl, r5, r0, ror #19
   369b0:	ldrd	r2, [r0, #156]	; 0x9c
   369b4:	strd	r4, [sp, #-20]!	; 0xffffffec
   369b8:	mov	r5, r1
   369bc:	mov	r4, r0
   369c0:	strd	r6, [sp, #8]
   369c4:	str	lr, [sp, #16]
   369c8:	sub	sp, sp, #12
   369cc:	add	r1, r2, #1
   369d0:	cmp	r1, r3
   369d4:	str	r1, [r0, #156]	; 0x9c
   369d8:	ble	36ab8 <flatcc_builder_default_alloc@@Base+0x36c>
   369dc:	ldr	r3, [r0, #176]	; 0xb0
   369e0:	cmp	r1, r3
   369e4:	cmpgt	r3, #0
   369e8:	movgt	r3, #1
   369ec:	movle	r3, #0
   369f0:	bgt	36ac8 <flatcc_builder_default_alloc@@Base+0x37c>
   369f4:	add	r2, r2, r2, lsl #3
   369f8:	ldr	r1, [r0, #88]	; 0x58
   369fc:	lsl	r6, r2, #2
   36a00:	add	r2, r6, #36	; 0x24
   36a04:	cmp	r2, r1
   36a08:	bls	36a2c <flatcc_builder_default_alloc@@Base+0x2e0>
   36a0c:	mov	ip, #4
   36a10:	add	r1, r0, #84	; 0x54
   36a14:	ldr	r0, [r0, #40]	; 0x28
   36a18:	str	ip, [sp]
   36a1c:	ldr	r7, [r4, #48]	; 0x30
   36a20:	blx	r7
   36a24:	cmp	r0, #0
   36a28:	bne	36ad0 <flatcc_builder_default_alloc@@Base+0x384>
   36a2c:	ldr	r2, [r4, #84]	; 0x54
   36a30:	add	r2, r2, r6
   36a34:	cmp	r2, #0
   36a38:	str	r2, [r4, #32]
   36a3c:	beq	36ac8 <flatcc_builder_default_alloc@@Base+0x37c>
   36a40:	ldr	r3, [r4, #88]	; 0x58
   36a44:	movw	r0, #36409	; 0x8e39
   36a48:	movt	r0, #14563	; 0x38e3
   36a4c:	ldr	r1, [r4, #176]	; 0xb0
   36a50:	umull	r0, r3, r0, r3
   36a54:	lsr	r3, r3, #3
   36a58:	cmp	r3, r1
   36a5c:	cmpgt	r1, #0
   36a60:	movgt	r3, r1
   36a64:	str	r3, [r4, #160]	; 0xa0
   36a68:	ldr	r3, [r4, #20]
   36a6c:	mov	r1, #0
   36a70:	mvn	lr, #3
   36a74:	mov	r0, r1
   36a78:	ldr	ip, [r4, #28]
   36a7c:	ldrh	r6, [r4, #130]	; 0x82
   36a80:	str	r3, [r2, #8]
   36a84:	add	r3, r3, ip
   36a88:	add	r3, r3, #7
   36a8c:	bic	r3, r3, #7
   36a90:	strh	r6, [r2, #12]
   36a94:	strh	r5, [r4, #130]	; 0x82
   36a98:	stm	r2, {ip, lr}
   36a9c:	str	r1, [r4, #20]
   36aa0:	str	r3, [r4, #28]
   36aa4:	add	sp, sp, #12
   36aa8:	ldrd	r4, [sp]
   36aac:	ldrd	r6, [sp, #8]
   36ab0:	add	sp, sp, #16
   36ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   36ab8:	ldr	r2, [r0, #32]
   36abc:	add	r2, r2, #36	; 0x24
   36ac0:	str	r2, [r0, #32]
   36ac4:	b	36a68 <flatcc_builder_default_alloc@@Base+0x31c>
   36ac8:	mvn	r0, #0
   36acc:	b	36aa4 <flatcc_builder_default_alloc@@Base+0x358>
   36ad0:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>
   36ad4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   36ad8:	mov	r4, r0
   36adc:	ldrh	r0, [r0, #128]	; 0x80
   36ae0:	strd	r6, [sp, #8]
   36ae4:	mov	r6, #4
   36ae8:	ldr	r5, [r4, #136]	; 0x88
   36aec:	str	lr, [sp, #20]
   36af0:	mov	lr, r2
   36af4:	str	r8, [sp, #16]
   36af8:	sub	sp, sp, #88	; 0x58
   36afc:	cmp	r0, #3
   36b00:	add	r0, sp, #12
   36b04:	movls	r2, #4
   36b08:	str	lr, [sp, #12]
   36b0c:	str	r6, [sp, #16]
   36b10:	strhls	r2, [r4, #128]	; 0x80
   36b14:	mov	r2, #1
   36b18:	lsls	ip, lr, #2
   36b1c:	moveq	r7, #2
   36b20:	str	r2, [sp, #20]
   36b24:	str	r0, [sp, #24]
   36b28:	and	r0, r5, #3
   36b2c:	str	r6, [sp, #28]
   36b30:	beq	36b54 <flatcc_builder_default_alloc@@Base+0x408>
   36b34:	mov	r8, #2
   36b38:	add	r6, ip, r6
   36b3c:	mov	r2, r8
   36b40:	mov	r7, #3
   36b44:	str	r6, [sp, #16]
   36b48:	str	r8, [sp, #20]
   36b4c:	str	r1, [sp, #32]
   36b50:	str	ip, [sp, #36]	; 0x24
   36b54:	cmp	r0, #0
   36b58:	beq	36b80 <flatcc_builder_default_alloc@@Base+0x434>
   36b5c:	ldr	r8, [pc, #360]	; 36ccc <flatcc_builder_default_alloc@@Base+0x580>
   36b60:	add	r2, r2, #1
   36b64:	add	ip, sp, #88	; 0x58
   36b68:	add	ip, ip, r2, lsl #3
   36b6c:	add	r6, r6, r0
   36b70:	mov	r2, r7
   36b74:	strd	r6, [sp, #16]
   36b78:	str	r8, [ip, #-72]	; 0xffffffb8
   36b7c:	str	r0, [ip, #-68]	; 0xffffffbc
   36b80:	cmp	lr, #0
   36b84:	beq	36c14 <flatcc_builder_default_alloc@@Base+0x4c8>
   36b88:	cmp	r3, #0
   36b8c:	subne	r5, r1, r5
   36b90:	addne	lr, r3, lr
   36b94:	addne	r5, r5, r6
   36b98:	bne	36bc4 <flatcc_builder_default_alloc@@Base+0x478>
   36b9c:	b	36c7c <flatcc_builder_default_alloc@@Base+0x530>
   36ba0:	sub	ip, r5, r1
   36ba4:	add	r0, ip, r0
   36ba8:	str	r0, [r1, #-4]
   36bac:	ldrb	r0, [r3]
   36bb0:	cmp	r0, #0
   36bb4:	beq	36c60 <flatcc_builder_default_alloc@@Base+0x514>
   36bb8:	add	r3, r3, #1
   36bbc:	cmp	r3, lr
   36bc0:	beq	36c10 <flatcc_builder_default_alloc@@Base+0x4c4>
   36bc4:	ldr	r0, [r1], #4
   36bc8:	cmp	r0, #0
   36bcc:	bne	36ba0 <flatcc_builder_default_alloc@@Base+0x454>
   36bd0:	ldrb	r0, [r3]
   36bd4:	cmp	r0, #0
   36bd8:	beq	36bb8 <flatcc_builder_default_alloc@@Base+0x46c>
   36bdc:	movw	r1, #45220	; 0xb0a4
   36be0:	movt	r1, #5
   36be4:	ldr	r3, [pc, #228]	; 36cd0 <flatcc_builder_default_alloc@@Base+0x584>
   36be8:	movw	r0, #45416	; 0xb168
   36bec:	movt	r0, #5
   36bf0:	movw	r2, #1461	; 0x5b5
   36bf4:	bl	14120 <__assert_fail@plt>
   36bf8:	sub	r0, ip, r1
   36bfc:	add	r3, r3, #1
   36c00:	add	r0, r0, r5
   36c04:	cmp	lr, r3
   36c08:	str	r0, [r1, #-4]
   36c0c:	bne	36c84 <flatcc_builder_default_alloc@@Base+0x538>
   36c10:	ldr	r5, [r4, #136]	; 0x88
   36c14:	sub	r7, r5, r6
   36c18:	cmp	r7, r5
   36c1c:	bge	36cb0 <flatcc_builder_default_alloc@@Base+0x564>
   36c20:	mov	r3, r7
   36c24:	add	r1, sp, #24
   36c28:	str	r6, [sp]
   36c2c:	ldr	r0, [r4, #36]	; 0x24
   36c30:	ldr	r5, [r4, #44]	; 0x2c
   36c34:	blx	r5
   36c38:	cmp	r0, #0
   36c3c:	bne	36cac <flatcc_builder_default_alloc@@Base+0x560>
   36c40:	mov	r0, r7
   36c44:	str	r7, [r4, #136]	; 0x88
   36c48:	add	sp, sp, #88	; 0x58
   36c4c:	ldrd	r4, [sp]
   36c50:	ldrd	r6, [sp, #8]
   36c54:	ldr	r8, [sp, #16]
   36c58:	add	sp, sp, #20
   36c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   36c60:	movw	r1, #45220	; 0xb0a4
   36c64:	movt	r1, #5
   36c68:	ldr	r3, [pc, #96]	; 36cd0 <flatcc_builder_default_alloc@@Base+0x584>
   36c6c:	movw	r0, #45400	; 0xb158
   36c70:	movt	r0, #5
   36c74:	movw	r2, #1457	; 0x5b1
   36c78:	bl	14120 <__assert_fail@plt>
   36c7c:	sub	ip, r1, r5
   36c80:	add	ip, ip, r6
   36c84:	ldr	r5, [r1], #4
   36c88:	cmp	r5, #0
   36c8c:	bne	36bf8 <flatcc_builder_default_alloc@@Base+0x4ac>
   36c90:	movw	r1, #45220	; 0xb0a4
   36c94:	movt	r1, #5
   36c98:	ldr	r3, [pc, #48]	; 36cd0 <flatcc_builder_default_alloc@@Base+0x584>
   36c9c:	movw	r0, #41608	; 0xa288
   36ca0:	movt	r0, #4
   36ca4:	movw	r2, #1463	; 0x5b7
   36ca8:	bl	14120 <__assert_fail@plt>
   36cac:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   36cb0:	movw	r1, #45220	; 0xb0a4
   36cb4:	movt	r1, #5
   36cb8:	ldr	r3, [pc, #20]	; 36cd4 <flatcc_builder_default_alloc@@Base+0x588>
   36cbc:	movw	r0, #41608	; 0xa288
   36cc0:	movt	r0, #4
   36cc4:	movw	r2, #647	; 0x287
   36cc8:	bl	14120 <__assert_fail@plt>
   36ccc:	strdeq	sl, [r5], -ip
   36cd0:	strdeq	sl, [r5], -ip
   36cd4:	andeq	sl, r5, r0, lsl #19

00036cd8 <flatcc_builder_flush_vtable_cache@@Base>:
   36cd8:	ldr	r3, [r0, #116]	; 0x74
   36cdc:	cmp	r3, #0
   36ce0:	bxeq	lr
   36ce4:	str	r4, [sp, #-8]!
   36ce8:	mov	r4, r0
   36cec:	mov	r1, #0
   36cf0:	ldr	r0, [r0, #92]	; 0x5c
   36cf4:	ldr	r2, [r4, #96]	; 0x60
   36cf8:	str	lr, [sp, #4]
   36cfc:	bl	14084 <memset@plt>
   36d00:	mov	r3, #16
   36d04:	mov	r2, #0
   36d08:	strd	r2, [r4, #120]	; 0x78
   36d0c:	ldr	r4, [sp]
   36d10:	add	sp, sp, #4
   36d14:	pop	{pc}		; (ldr pc, [sp], #4)

00036d18 <flatcc_builder_custom_init@@Base>:
   36d18:	strd	r4, [sp, #-24]!	; 0xffffffe8
   36d1c:	mov	r5, r3
   36d20:	mov	r4, r0
   36d24:	strd	r6, [sp, #8]
   36d28:	mov	r6, r1
   36d2c:	mov	r7, r2
   36d30:	mov	r1, #0
   36d34:	mov	r2, #232	; 0xe8
   36d38:	str	r8, [sp, #16]
   36d3c:	str	lr, [sp, #20]
   36d40:	ldr	r8, [sp, #24]
   36d44:	bl	14084 <memset@plt>
   36d48:	cmp	r6, #0
   36d4c:	beq	36d88 <flatcc_builder_custom_init@@Base+0x70>
   36d50:	cmp	r5, #0
   36d54:	movw	r3, #26444	; 0x674c
   36d58:	movt	r3, #3
   36d5c:	str	r7, [r4, #36]	; 0x24
   36d60:	mov	r0, #0
   36d64:	moveq	r5, r3
   36d68:	str	r8, [r4, #40]	; 0x28
   36d6c:	str	r6, [r4, #44]	; 0x2c
   36d70:	str	r5, [r4, #48]	; 0x30
   36d74:	ldrd	r4, [sp]
   36d78:	ldrd	r6, [sp, #8]
   36d7c:	ldr	r8, [sp, #16]
   36d80:	add	sp, sp, #20
   36d84:	pop	{pc}		; (ldr pc, [sp], #4)
   36d88:	mov	r3, #1
   36d8c:	movw	r6, #50312	; 0xc488
   36d90:	movt	r6, #3
   36d94:	add	r7, r4, #188	; 0xbc
   36d98:	str	r3, [r4, #184]	; 0xb8
   36d9c:	b	36d50 <flatcc_builder_custom_init@@Base+0x38>

00036da0 <flatcc_builder_init@@Base>:
   36da0:	mov	r2, #232	; 0xe8
   36da4:	mov	r1, #0
   36da8:	str	r4, [sp, #-8]!
   36dac:	str	lr, [sp, #4]
   36db0:	bl	14084 <memset@plt>
   36db4:	mov	r3, r0
   36db8:	movw	r2, #26444	; 0x674c
   36dbc:	movt	r2, #3
   36dc0:	mov	r0, #1
   36dc4:	ldr	r4, [sp]
   36dc8:	add	ip, r3, #188	; 0xbc
   36dcc:	movw	r1, #50312	; 0xc488
   36dd0:	movt	r1, #3
   36dd4:	add	sp, sp, #4
   36dd8:	str	ip, [r3, #36]	; 0x24
   36ddc:	str	r1, [r3, #44]	; 0x2c
   36de0:	str	r2, [r3, #48]	; 0x30
   36de4:	str	r0, [r3, #184]	; 0xb8
   36de8:	mov	r0, #0
   36dec:	pop	{pc}		; (ldr pc, [sp], #4)

00036df0 <flatcc_builder_custom_reset@@Base>:
   36df0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   36df4:	mov	r5, #0
   36df8:	mov	r4, r0
   36dfc:	strd	r6, [sp, #8]
   36e00:	mov	r6, r0
   36e04:	strd	r8, [sp, #16]
   36e08:	mov	r8, r1
   36e0c:	mov	r9, r2
   36e10:	str	lr, [sp, #24]
   36e14:	sub	sp, sp, #12
   36e18:	b	36e68 <flatcc_builder_custom_reset@@Base+0x78>
   36e1c:	cmp	r5, #5
   36e20:	cmpne	r9, #0
   36e24:	beq	36e4c <flatcc_builder_custom_reset@@Base+0x5c>
   36e28:	mov	r3, #1
   36e2c:	str	r5, [sp]
   36e30:	mov	r2, r3
   36e34:	ldr	r0, [r6, #40]	; 0x28
   36e38:	ldr	r7, [r6, #48]	; 0x30
   36e3c:	blx	r7
   36e40:	cmp	r0, #0
   36e44:	bne	36f50 <flatcc_builder_custom_reset@@Base+0x160>
   36e48:	ldr	r0, [r4, #52]	; 0x34
   36e4c:	mov	r1, #0
   36e50:	ldr	r2, [r4, #56]	; 0x38
   36e54:	bl	14084 <memset@plt>
   36e58:	add	r5, r5, #1
   36e5c:	add	r4, r4, #8
   36e60:	cmp	r5, #8
   36e64:	beq	36ea0 <flatcc_builder_custom_reset@@Base+0xb0>
   36e68:	ldr	r0, [r4, #52]	; 0x34
   36e6c:	add	r1, r4, #52	; 0x34
   36e70:	cmp	r0, #0
   36e74:	bne	36e1c <flatcc_builder_custom_reset@@Base+0x2c>
   36e78:	ldr	r3, [r4, #56]	; 0x38
   36e7c:	cmp	r3, #0
   36e80:	beq	36e58 <flatcc_builder_custom_reset@@Base+0x68>
   36e84:	movw	r1, #45220	; 0xb0a4
   36e88:	movt	r1, #5
   36e8c:	ldr	r3, [pc, #196]	; 36f58 <flatcc_builder_custom_reset@@Base+0x168>
   36e90:	movw	r0, #45432	; 0xb178
   36e94:	movt	r0, #5
   36e98:	movw	r2, #434	; 0x1b2
   36e9c:	bl	14120 <__assert_fail@plt>
   36ea0:	mov	r2, #0
   36ea4:	ldr	r0, [r6, #52]	; 0x34
   36ea8:	ldr	r3, [r6, #124]	; 0x7c
   36eac:	ldr	r1, [r6, #60]	; 0x3c
   36eb0:	str	r0, [r6, #4]
   36eb4:	str	r2, [r6, #120]	; 0x78
   36eb8:	cmp	r3, r2
   36ebc:	ldr	r2, [r6, #76]	; 0x4c
   36ec0:	movne	r3, #16
   36ec4:	strne	r3, [r6, #124]	; 0x7c
   36ec8:	mov	r3, #0
   36ecc:	cmp	r8, r3
   36ed0:	str	r2, [r6]
   36ed4:	str	r1, [r6, #16]
   36ed8:	str	r3, [r6, #20]
   36edc:	str	r3, [r6, #24]
   36ee0:	str	r3, [r6, #32]
   36ee4:	strh	r3, [r6, #128]	; 0x80
   36ee8:	str	r3, [r6, #136]	; 0x88
   36eec:	str	r3, [r6, #140]	; 0x8c
   36ef0:	str	r3, [r6, #148]	; 0x94
   36ef4:	str	r3, [r6, #152]	; 0x98
   36ef8:	str	r3, [r6, #156]	; 0x9c
   36efc:	str	r3, [r6, #160]	; 0xa0
   36f00:	bne	36f28 <flatcc_builder_custom_reset@@Base+0x138>
   36f04:	ldr	r0, [r6, #184]	; 0xb8
   36f08:	cmp	r0, #0
   36f0c:	bne	36f40 <flatcc_builder_custom_reset@@Base+0x150>
   36f10:	add	sp, sp, #12
   36f14:	ldrd	r4, [sp]
   36f18:	ldrd	r6, [sp, #8]
   36f1c:	ldrd	r8, [sp, #16]
   36f20:	add	sp, sp, #24
   36f24:	pop	{pc}		; (ldr pc, [sp], #4)
   36f28:	ldr	r0, [r6, #184]	; 0xb8
   36f2c:	str	r3, [r6, #172]	; 0xac
   36f30:	str	r3, [r6, #176]	; 0xb0
   36f34:	str	r3, [r6, #180]	; 0xb4
   36f38:	cmp	r0, #0
   36f3c:	beq	36f10 <flatcc_builder_custom_reset@@Base+0x120>
   36f40:	add	r0, r6, #188	; 0xbc
   36f44:	bl	3c334 <flatcc_emitter_reset@@Base>
   36f48:	mov	r0, #0
   36f4c:	b	36f10 <flatcc_builder_custom_reset@@Base+0x120>
   36f50:	mvn	r0, #0
   36f54:	b	36f10 <flatcc_builder_custom_reset@@Base+0x120>
   36f58:	andeq	sl, r5, ip, lsl ip

00036f5c <flatcc_builder_reset@@Base>:
   36f5c:	mov	r2, #0
   36f60:	mov	r1, r2
   36f64:	b	36df0 <flatcc_builder_custom_reset@@Base>

00036f68 <flatcc_builder_clear@@Base>:
   36f68:	strd	r4, [sp, #-20]!	; 0xffffffec
   36f6c:	mov	r4, #0
   36f70:	add	r5, r0, #52	; 0x34
   36f74:	strd	r6, [sp, #8]
   36f78:	mov	r6, r0
   36f7c:	str	lr, [sp, #16]
   36f80:	sub	sp, sp, #12
   36f84:	mov	r3, #0
   36f88:	mov	r1, r5
   36f8c:	str	r4, [sp]
   36f90:	mov	r2, r3
   36f94:	add	r4, r4, #1
   36f98:	ldr	r0, [r6, #40]	; 0x28
   36f9c:	add	r5, r5, #8
   36fa0:	ldr	r7, [r6, #48]	; 0x30
   36fa4:	blx	r7
   36fa8:	cmp	r4, #8
   36fac:	bne	36f84 <flatcc_builder_clear@@Base+0x1c>
   36fb0:	ldr	r3, [r6, #184]	; 0xb8
   36fb4:	cmp	r3, #0
   36fb8:	bne	36fe0 <flatcc_builder_clear@@Base+0x78>
   36fbc:	mov	r0, r6
   36fc0:	mov	r2, #232	; 0xe8
   36fc4:	mov	r1, #0
   36fc8:	add	sp, sp, #12
   36fcc:	ldrd	r4, [sp]
   36fd0:	ldrd	r6, [sp, #8]
   36fd4:	ldr	lr, [sp, #16]
   36fd8:	add	sp, sp, #20
   36fdc:	b	14084 <memset@plt>
   36fe0:	add	r0, r6, #188	; 0xbc
   36fe4:	bl	3c408 <flatcc_emitter_clear@@Base>
   36fe8:	b	36fbc <flatcc_builder_clear@@Base+0x54>

00036fec <flatcc_builder_enter_user_frame_ptr@@Base>:
   36fec:	strd	r4, [sp, #-20]!	; 0xffffffec
   36ff0:	add	r4, r1, #3
   36ff4:	mov	r5, r0
   36ff8:	ldr	r3, [r0, #112]	; 0x70
   36ffc:	bic	r4, r4, #3
   37000:	strd	r6, [sp, #8]
   37004:	add	r4, r4, #4
   37008:	ldr	r6, [r0, #228]	; 0xe4
   3700c:	str	lr, [sp, #16]
   37010:	sub	sp, sp, #12
   37014:	add	r2, r6, r4
   37018:	cmp	r2, r3
   3701c:	bls	37044 <flatcc_builder_enter_user_frame_ptr@@Base+0x58>
   37020:	mov	ip, #7
   37024:	add	r1, r0, #108	; 0x6c
   37028:	ldr	r0, [r0, #40]	; 0x28
   3702c:	mov	r3, #0
   37030:	str	ip, [sp]
   37034:	ldr	r7, [r5, #48]	; 0x30
   37038:	blx	r7
   3703c:	cmp	r0, #0
   37040:	bne	37098 <flatcc_builder_enter_user_frame_ptr@@Base+0xac>
   37044:	ldr	r7, [r5, #108]	; 0x6c
   37048:	adds	r3, r7, r6
   3704c:	moveq	r0, r3
   37050:	beq	37084 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   37054:	mov	r2, r4
   37058:	mov	r0, r3
   3705c:	mov	r1, #0
   37060:	bl	14084 <memset@plt>
   37064:	ldr	r2, [r5, #224]	; 0xe0
   37068:	add	r0, r0, #4
   3706c:	str	r2, [r7, r6]
   37070:	ldr	r3, [r5, #228]	; 0xe4
   37074:	add	r4, r3, r4
   37078:	add	r3, r3, #4
   3707c:	str	r3, [r5, #224]	; 0xe0
   37080:	str	r4, [r5, #228]	; 0xe4
   37084:	add	sp, sp, #12
   37088:	ldrd	r4, [sp]
   3708c:	ldrd	r6, [sp, #8]
   37090:	add	sp, sp, #16
   37094:	pop	{pc}		; (ldr pc, [sp], #4)
   37098:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

0003709c <flatcc_builder_enter_user_frame@@Base>:
   3709c:	strd	r4, [sp, #-20]!	; 0xffffffec
   370a0:	add	r4, r1, #3
   370a4:	mov	r5, r0
   370a8:	ldr	r3, [r0, #112]	; 0x70
   370ac:	bic	r4, r4, #3
   370b0:	strd	r6, [sp, #8]
   370b4:	add	r4, r4, #4
   370b8:	ldr	r6, [r0, #228]	; 0xe4
   370bc:	str	lr, [sp, #16]
   370c0:	sub	sp, sp, #12
   370c4:	add	r2, r6, r4
   370c8:	cmp	r2, r3
   370cc:	bls	370f4 <flatcc_builder_enter_user_frame@@Base+0x58>
   370d0:	mov	ip, #7
   370d4:	add	r1, r0, #108	; 0x6c
   370d8:	ldr	r0, [r0, #40]	; 0x28
   370dc:	mov	r3, #0
   370e0:	str	ip, [sp]
   370e4:	ldr	r7, [r5, #48]	; 0x30
   370e8:	blx	r7
   370ec:	cmp	r0, #0
   370f0:	bne	3713c <flatcc_builder_enter_user_frame@@Base+0xa0>
   370f4:	ldr	r7, [r5, #108]	; 0x6c
   370f8:	adds	r0, r7, r6
   370fc:	beq	37128 <flatcc_builder_enter_user_frame@@Base+0x8c>
   37100:	mov	r2, r4
   37104:	mov	r1, #0
   37108:	bl	14084 <memset@plt>
   3710c:	ldr	r3, [r5, #224]	; 0xe0
   37110:	str	r3, [r7, r6]
   37114:	ldr	r0, [r5, #228]	; 0xe4
   37118:	add	r4, r0, r4
   3711c:	add	r0, r0, #4
   37120:	str	r0, [r5, #224]	; 0xe0
   37124:	str	r4, [r5, #228]	; 0xe4
   37128:	add	sp, sp, #12
   3712c:	ldrd	r4, [sp]
   37130:	ldrd	r6, [sp, #8]
   37134:	add	sp, sp, #16
   37138:	pop	{pc}		; (ldr pc, [sp], #4)
   3713c:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

00037140 <flatcc_builder_exit_user_frame@@Base>:
   37140:	ldr	r2, [r0, #224]	; 0xe0
   37144:	cmp	r2, #0
   37148:	beq	37170 <flatcc_builder_exit_user_frame@@Base+0x30>
   3714c:	mov	r3, r0
   37150:	sub	r0, r2, #4
   37154:	ldr	r1, [r3, #108]	; 0x6c
   37158:	str	r0, [r3, #228]	; 0xe4
   3715c:	add	r2, r1, r2
   37160:	ldr	r2, [r2, #-4]
   37164:	mov	r0, r2
   37168:	str	r2, [r3, #224]	; 0xe0
   3716c:	bx	lr
   37170:	str	r4, [sp, #-8]!
   37174:	str	lr, [sp, #4]
   37178:	bl	36938 <flatcc_builder_default_alloc@@Base+0x1ec>

0003717c <flatcc_builder_exit_user_frame_at@@Base>:
   3717c:	ldr	r2, [r0, #224]	; 0xe0
   37180:	str	r4, [sp, #-8]!
   37184:	str	lr, [sp, #4]
   37188:	cmp	r2, r1
   3718c:	bcc	371c8 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   37190:	cmp	r1, #0
   37194:	mov	r3, r0
   37198:	str	r1, [r0, #224]	; 0xe0
   3719c:	beq	371e4 <flatcc_builder_exit_user_frame_at@@Base+0x68>
   371a0:	ldr	r2, [r3, #108]	; 0x6c
   371a4:	sub	r0, r1, #4
   371a8:	ldr	r4, [sp]
   371ac:	add	sp, sp, #4
   371b0:	str	r0, [r3, #228]	; 0xe4
   371b4:	add	r1, r2, r1
   371b8:	ldr	r2, [r1, #-4]
   371bc:	mov	r0, r2
   371c0:	str	r2, [r3, #224]	; 0xe0
   371c4:	pop	{pc}		; (ldr pc, [sp], #4)
   371c8:	movw	r1, #45220	; 0xb0a4
   371cc:	movt	r1, #5
   371d0:	ldr	r3, [pc, #16]	; 371e8 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   371d4:	movw	r0, #45452	; 0xb18c
   371d8:	movt	r0, #5
   371dc:	movw	r2, #551	; 0x227
   371e0:	bl	14120 <__assert_fail@plt>
   371e4:	bl	36938 <flatcc_builder_default_alloc@@Base+0x1ec>
   371e8:	andeq	sl, r5, r8, lsr ip

000371ec <flatcc_builder_get_current_user_frame@@Base>:
   371ec:	ldr	r0, [r0, #224]	; 0xe0
   371f0:	bx	lr

000371f4 <flatcc_builder_get_user_frame_ptr@@Base>:
   371f4:	ldr	r0, [r0, #108]	; 0x6c
   371f8:	add	r0, r0, r1
   371fc:	bx	lr

00037200 <flatcc_builder_embed_buffer@@Base>:
   37200:	strd	r4, [sp, #-32]!	; 0xffffffe0
   37204:	mov	r5, r0
   37208:	ldr	r0, [r0, #152]	; 0x98
   3720c:	strd	r6, [sp, #8]
   37210:	mov	r7, r2
   37214:	mov	r6, r3
   37218:	strd	r8, [sp, #16]
   3721c:	str	sl, [sp, #24]
   37220:	str	lr, [sp, #28]
   37224:	sub	sp, sp, #88	; 0x58
   37228:	ldrh	r4, [sp, #120]	; 0x78
   3722c:	ldr	r8, [sp, #124]	; 0x7c
   37230:	cmp	r4, #4
   37234:	movcc	r4, #4
   37238:	cmp	r1, #0
   3723c:	and	r8, r8, #2
   37240:	bne	37250 <flatcc_builder_embed_buffer@@Base+0x50>
   37244:	ldrh	r1, [r5, #132]	; 0x84
   37248:	cmp	r1, #0
   3724c:	beq	37270 <flatcc_builder_embed_buffer@@Base+0x70>
   37250:	cmp	r1, r4
   37254:	movcs	r4, r1
   37258:	cmp	r0, #0
   3725c:	bne	37270 <flatcc_builder_embed_buffer@@Base+0x70>
   37260:	ldr	r9, [r5, #140]	; 0x8c
   37264:	sub	r1, r1, #1
   37268:	ands	r1, r1, r9
   3726c:	bne	37398 <flatcc_builder_embed_buffer@@Base+0x198>
   37270:	ldr	r1, [r5, #136]	; 0x88
   37274:	cmp	r8, #0
   37278:	sub	r4, r4, #1
   3727c:	movne	ip, #4
   37280:	moveq	ip, #0
   37284:	mov	r2, #0
   37288:	cmp	r0, r2
   3728c:	str	r2, [sp, #16]
   37290:	sub	r3, r1, r6
   37294:	str	r2, [sp, #20]
   37298:	sub	r3, r3, ip
   3729c:	and	r4, r4, r3
   372a0:	add	r3, r6, r4
   372a4:	str	r3, [sp, #12]
   372a8:	bne	37368 <flatcc_builder_embed_buffer@@Base+0x168>
   372ac:	mov	lr, #2
   372b0:	mov	r3, #1
   372b4:	mov	r2, r0
   372b8:	cmp	r6, #0
   372bc:	beq	372e8 <flatcc_builder_embed_buffer@@Base+0xe8>
   372c0:	add	r2, r2, #1
   372c4:	add	ip, sp, #88	; 0x58
   372c8:	add	ip, ip, r2, lsl #3
   372cc:	add	r0, r0, r6
   372d0:	mov	r2, r3
   372d4:	str	r0, [sp, #16]
   372d8:	str	r7, [ip, #-72]	; 0xffffffb8
   372dc:	str	r6, [ip, #-68]	; 0xffffffbc
   372e0:	str	r3, [sp, #20]
   372e4:	mov	r3, lr
   372e8:	cmp	r4, #0
   372ec:	beq	37318 <flatcc_builder_embed_buffer@@Base+0x118>
   372f0:	ldr	lr, [pc, #312]	; 37430 <flatcc_builder_embed_buffer@@Base+0x230>
   372f4:	add	r2, r2, #1
   372f8:	add	ip, sp, #88	; 0x58
   372fc:	add	ip, ip, r2, lsl #3
   37300:	add	r0, r0, r4
   37304:	mov	r2, r3
   37308:	str	r0, [sp, #16]
   3730c:	str	lr, [ip, #-72]	; 0xffffffb8
   37310:	str	r4, [ip, #-68]	; 0xffffffbc
   37314:	str	r3, [sp, #20]
   37318:	sub	r4, r1, r0
   3731c:	cmp	r1, r4
   37320:	ble	373f0 <flatcc_builder_embed_buffer@@Base+0x1f0>
   37324:	mov	r3, r4
   37328:	add	r1, sp, #24
   3732c:	str	r0, [sp]
   37330:	ldr	r0, [r5, #36]	; 0x24
   37334:	ldr	r6, [r5, #44]	; 0x2c
   37338:	blx	r6
   3733c:	cmp	r0, #0
   37340:	bne	373ec <flatcc_builder_embed_buffer@@Base+0x1ec>
   37344:	mov	r0, r4
   37348:	str	r4, [r5, #136]	; 0x88
   3734c:	add	sp, sp, #88	; 0x58
   37350:	ldrd	r4, [sp]
   37354:	ldrd	r6, [sp, #8]
   37358:	ldrd	r8, [sp, #16]
   3735c:	ldr	sl, [sp, #24]
   37360:	add	sp, sp, #28
   37364:	pop	{pc}		; (ldr pc, [sp], #4)
   37368:	mov	ip, #4
   3736c:	mov	r3, #1
   37370:	add	r8, sp, #12
   37374:	mov	r2, r3
   37378:	mov	r0, ip
   3737c:	mov	lr, #3
   37380:	str	ip, [sp, #16]
   37384:	str	r3, [sp, #20]
   37388:	mov	r3, #2
   3738c:	str	r8, [sp, #24]
   37390:	str	ip, [sp, #28]
   37394:	b	372b8 <flatcc_builder_embed_buffer@@Base+0xb8>
   37398:	ldr	r3, [pc, #144]	; 37430 <flatcc_builder_embed_buffer@@Base+0x230>
   3739c:	add	r0, r9, r1
   373a0:	mov	r2, #1
   373a4:	cmp	r9, r0
   373a8:	str	r1, [sp, #16]
   373ac:	str	r0, [r5, #140]	; 0x8c
   373b0:	strd	r2, [sp, #20]
   373b4:	str	r1, [sp, #28]
   373b8:	bgt	3740c <flatcc_builder_embed_buffer@@Base+0x20c>
   373bc:	mov	r3, r9
   373c0:	str	r1, [sp]
   373c4:	add	r1, sp, #24
   373c8:	ldr	r0, [r5, #36]	; 0x24
   373cc:	ldr	sl, [r5, #44]	; 0x2c
   373d0:	blx	sl
   373d4:	cmp	r0, #0
   373d8:	bne	3742c <flatcc_builder_embed_buffer@@Base+0x22c>
   373dc:	cmn	r9, #1
   373e0:	beq	37428 <flatcc_builder_embed_buffer@@Base+0x228>
   373e4:	ldr	r0, [r5, #152]	; 0x98
   373e8:	b	37270 <flatcc_builder_embed_buffer@@Base+0x70>
   373ec:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   373f0:	movw	r1, #45220	; 0xb0a4
   373f4:	movt	r1, #5
   373f8:	ldr	r3, [pc, #52]	; 37434 <flatcc_builder_embed_buffer@@Base+0x234>
   373fc:	movw	r0, #41608	; 0xa288
   37400:	movt	r0, #4
   37404:	movw	r2, #647	; 0x287
   37408:	bl	14120 <__assert_fail@plt>
   3740c:	movw	r1, #45220	; 0xb0a4
   37410:	movt	r1, #5
   37414:	movw	r0, #41608	; 0xa288
   37418:	movt	r0, #4
   3741c:	sub	r3, r3, #152	; 0x98
   37420:	movw	r2, #673	; 0x2a1
   37424:	bl	14120 <__assert_fail@plt>
   37428:	bl	368c0 <flatcc_builder_default_alloc@@Base+0x174>
   3742c:	bl	36898 <flatcc_builder_default_alloc@@Base+0x14c>
   37430:	strdeq	sl, [r5], -ip
   37434:	andeq	sl, r5, r0, lsl #19

00037438 <flatcc_builder_create_buffer@@Base>:
   37438:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3743c:	mov	ip, #0
   37440:	mov	r5, r0
   37444:	strd	r6, [sp, #8]
   37448:	mov	r7, r3
   3744c:	strd	r8, [sp, #16]
   37450:	mov	r9, r1
   37454:	strd	sl, [sp, #24]
   37458:	str	lr, [sp, #32]
   3745c:	sub	sp, sp, #100	; 0x64
   37460:	ldrh	r4, [sp, #136]	; 0x88
   37464:	str	ip, [sp, #20]
   37468:	ldr	r6, [sp, #140]	; 0x8c
   3746c:	cmp	r4, #4
   37470:	movcc	r4, #4
   37474:	cmp	r2, #0
   37478:	and	r8, r6, #1
   3747c:	bne	3748c <flatcc_builder_create_buffer@@Base+0x54>
   37480:	ldrh	r2, [r0, #132]	; 0x84
   37484:	cmp	r2, ip
   37488:	beq	374ac <flatcc_builder_create_buffer@@Base+0x74>
   3748c:	cmp	r2, r4
   37490:	movcs	r4, r2
   37494:	cmp	r8, #0
   37498:	bne	374ac <flatcc_builder_create_buffer@@Base+0x74>
   3749c:	ldr	sl, [r5, #140]	; 0x8c
   374a0:	sub	r2, r2, #1
   374a4:	ands	r1, r2, sl
   374a8:	bne	37640 <flatcc_builder_create_buffer@@Base+0x208>
   374ac:	ldrh	r3, [r5, #128]	; 0x80
   374b0:	ldr	r0, [r5, #136]	; 0x88
   374b4:	cmp	r3, r4
   374b8:	strhcc	r4, [r5, #128]	; 0x80
   374bc:	cmp	r9, #0
   374c0:	sub	r4, r4, #1
   374c4:	ldrne	r3, [r9]
   374c8:	ldreq	r1, [sp, #20]
   374cc:	movne	r1, r3
   374d0:	strne	r3, [sp, #20]
   374d4:	sub	r3, r0, #4
   374d8:	cmp	r1, #0
   374dc:	movne	r1, #4
   374e0:	tst	r6, #2
   374e4:	movne	r2, #4
   374e8:	moveq	r2, #0
   374ec:	sub	r3, r3, r1
   374f0:	ands	r6, r6, #3
   374f4:	sub	r3, r3, r2
   374f8:	and	r4, r4, r3
   374fc:	bne	37618 <flatcc_builder_create_buffer@@Base+0x1e0>
   37500:	mov	r3, r6
   37504:	mov	r9, #3
   37508:	mov	lr, #2
   3750c:	mov	r2, #1
   37510:	mov	ip, #4
   37514:	add	fp, sp, #96	; 0x60
   37518:	add	r3, r3, #1
   3751c:	str	ip, [sp, #24]
   37520:	add	r3, fp, r3, lsl #3
   37524:	add	sl, sp, #12
   37528:	mov	fp, #4
   3752c:	cmp	r1, #0
   37530:	strd	sl, [r3, #-72]	; 0xffffffb8
   37534:	str	r2, [sp, #28]
   37538:	beq	37568 <flatcc_builder_create_buffer@@Base+0x130>
   3753c:	add	r2, r2, #1
   37540:	add	r3, sp, #96	; 0x60
   37544:	add	r3, r3, r2, lsl #3
   37548:	add	ip, ip, r1
   3754c:	add	sl, sp, #20
   37550:	mov	r2, lr
   37554:	str	ip, [sp, #24]
   37558:	str	sl, [r3, #-72]	; 0xffffffb8
   3755c:	str	r1, [r3, #-68]	; 0xffffffbc
   37560:	str	lr, [sp, #28]
   37564:	mov	lr, r9
   37568:	cmp	r4, #0
   3756c:	beq	37598 <flatcc_builder_create_buffer@@Base+0x160>
   37570:	ldr	r1, [pc, #372]	; 376ec <flatcc_builder_create_buffer@@Base+0x2b4>
   37574:	add	r2, r2, #1
   37578:	add	r3, sp, #96	; 0x60
   3757c:	add	r3, r3, r2, lsl #3
   37580:	add	ip, ip, r4
   37584:	mov	r2, lr
   37588:	str	ip, [sp, #24]
   3758c:	str	r1, [r3, #-72]	; 0xffffffb8
   37590:	str	r4, [r3, #-68]	; 0xffffffbc
   37594:	str	lr, [sp, #28]
   37598:	sub	r4, r0, ip
   3759c:	cmp	r6, #0
   375a0:	mov	r1, r4
   375a4:	addne	r1, r4, #4
   375a8:	cmp	r8, #0
   375ac:	sub	r7, r7, r1
   375b0:	ldrne	r3, [r5, #144]	; 0x90
   375b4:	str	r7, [sp, #12]
   375b8:	ldreq	r3, [r5, #140]	; 0x8c
   375bc:	cmp	r0, r4
   375c0:	sub	r3, r3, r1
   375c4:	str	r3, [sp, #16]
   375c8:	ble	37690 <flatcc_builder_create_buffer@@Base+0x258>
   375cc:	mov	r3, r4
   375d0:	add	r1, sp, #32
   375d4:	str	ip, [sp]
   375d8:	ldr	r0, [r5, #36]	; 0x24
   375dc:	ldr	r6, [r5, #44]	; 0x2c
   375e0:	blx	r6
   375e4:	cmp	r0, #0
   375e8:	bne	376ac <flatcc_builder_create_buffer@@Base+0x274>
   375ec:	cmp	r4, #0
   375f0:	str	r4, [r5, #136]	; 0x88
   375f4:	beq	376b0 <flatcc_builder_create_buffer@@Base+0x278>
   375f8:	mov	r0, r4
   375fc:	add	sp, sp, #100	; 0x64
   37600:	ldrd	r4, [sp]
   37604:	ldrd	r6, [sp, #8]
   37608:	ldrd	r8, [sp, #16]
   3760c:	ldrd	sl, [sp, #24]
   37610:	add	sp, sp, #32
   37614:	pop	{pc}		; (ldr pc, [sp], #4)
   37618:	mov	ip, #4
   3761c:	add	r3, sp, #16
   37620:	mov	r9, ip
   37624:	mov	lr, #3
   37628:	mov	r2, #2
   3762c:	str	r3, [sp, #32]
   37630:	mov	r3, #1
   37634:	str	ip, [sp, #36]	; 0x24
   37638:	mov	ip, #8
   3763c:	b	37514 <flatcc_builder_create_buffer@@Base+0xdc>
   37640:	ldr	r3, [pc, #164]	; 376ec <flatcc_builder_create_buffer@@Base+0x2b4>
   37644:	add	r0, sl, r1
   37648:	mov	r2, #1
   3764c:	cmp	sl, r0
   37650:	str	r1, [sp, #24]
   37654:	str	r0, [r5, #140]	; 0x8c
   37658:	strd	r2, [sp, #28]
   3765c:	str	r1, [sp, #36]	; 0x24
   37660:	bgt	376d0 <flatcc_builder_create_buffer@@Base+0x298>
   37664:	mov	r3, sl
   37668:	str	r1, [sp]
   3766c:	add	r1, sp, #32
   37670:	ldr	r0, [r5, #36]	; 0x24
   37674:	ldr	fp, [r5, #44]	; 0x2c
   37678:	blx	fp
   3767c:	cmp	r0, #0
   37680:	bne	376cc <flatcc_builder_create_buffer@@Base+0x294>
   37684:	cmn	sl, #1
   37688:	bne	374ac <flatcc_builder_create_buffer@@Base+0x74>
   3768c:	bl	368c0 <flatcc_builder_default_alloc@@Base+0x174>
   37690:	movw	r1, #45220	; 0xb0a4
   37694:	movt	r1, #5
   37698:	ldr	r3, [pc, #80]	; 376f0 <flatcc_builder_create_buffer@@Base+0x2b8>
   3769c:	movw	r0, #41608	; 0xa288
   376a0:	movt	r0, #4
   376a4:	movw	r2, #647	; 0x287
   376a8:	bl	14120 <__assert_fail@plt>
   376ac:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   376b0:	movw	r1, #45220	; 0xb0a4
   376b4:	movt	r1, #5
   376b8:	ldr	r3, [pc, #52]	; 376f4 <flatcc_builder_create_buffer@@Base+0x2bc>
   376bc:	movw	r0, #41608	; 0xa288
   376c0:	movt	r0, #4
   376c4:	mov	r2, #772	; 0x304
   376c8:	bl	14120 <__assert_fail@plt>
   376cc:	bl	36898 <flatcc_builder_default_alloc@@Base+0x14c>
   376d0:	movw	r1, #45220	; 0xb0a4
   376d4:	movt	r1, #5
   376d8:	movw	r0, #41608	; 0xa288
   376dc:	movt	r0, #4
   376e0:	sub	r3, r3, #152	; 0x98
   376e4:	movw	r2, #673	; 0x2a1
   376e8:	bl	14120 <__assert_fail@plt>
   376ec:	strdeq	sl, [r5], -ip
   376f0:	andeq	sl, r5, r0, lsl #19
   376f4:	andeq	sl, r5, ip, asr ip

000376f8 <flatcc_builder_create_struct@@Base>:
   376f8:	cmp	r3, #0
   376fc:	strd	r4, [sp, #-16]!
   37700:	str	r6, [sp, #8]
   37704:	str	lr, [sp, #12]
   37708:	sub	sp, sp, #80	; 0x50
   3770c:	beq	37810 <flatcc_builder_create_struct@@Base+0x118>
   37710:	mov	r4, r0
   37714:	mov	r0, r2
   37718:	ldrh	r2, [r4, #128]	; 0x80
   3771c:	ldr	ip, [r4, #136]	; 0x88
   37720:	cmp	r2, r3
   37724:	mov	r2, #0
   37728:	strhcc	r3, [r4, #128]	; 0x80
   3772c:	sub	r5, ip, r0
   37730:	sub	r3, r3, #1
   37734:	cmp	r0, r2
   37738:	and	r3, r3, r5
   3773c:	str	r2, [sp, #8]
   37740:	str	r2, [sp, #12]
   37744:	bne	377c4 <flatcc_builder_create_struct@@Base+0xcc>
   37748:	cmp	r3, #0
   3774c:	movne	r1, r2
   37750:	movne	r0, r3
   37754:	movne	r2, #1
   37758:	beq	377f0 <flatcc_builder_create_struct@@Base+0xf8>
   3775c:	ldr	lr, [pc, #200]	; 3782c <flatcc_builder_create_struct@@Base+0x134>
   37760:	add	r5, sp, #80	; 0x50
   37764:	add	r1, r1, #1
   37768:	add	r1, r5, r1, lsl #3
   3776c:	sub	r5, ip, r0
   37770:	str	r0, [sp, #8]
   37774:	str	r2, [sp, #12]
   37778:	str	lr, [r1, #-72]	; 0xffffffb8
   3777c:	str	r3, [r1, #-68]	; 0xffffffbc
   37780:	cmp	ip, r5
   37784:	ble	377f0 <flatcc_builder_create_struct@@Base+0xf8>
   37788:	mov	r3, r5
   3778c:	add	r1, sp, #16
   37790:	str	r0, [sp]
   37794:	ldr	r0, [r4, #36]	; 0x24
   37798:	ldr	r6, [r4, #44]	; 0x2c
   3779c:	blx	r6
   377a0:	cmp	r0, #0
   377a4:	bne	3780c <flatcc_builder_create_struct@@Base+0x114>
   377a8:	mov	r0, r5
   377ac:	str	r5, [r4, #136]	; 0x88
   377b0:	add	sp, sp, #80	; 0x50
   377b4:	ldrd	r4, [sp]
   377b8:	ldr	r6, [sp, #8]
   377bc:	add	sp, sp, #12
   377c0:	pop	{pc}		; (ldr pc, [sp], #4)
   377c4:	mov	r2, #1
   377c8:	cmp	r3, #0
   377cc:	str	r0, [sp, #8]
   377d0:	str	r2, [sp, #12]
   377d4:	str	r1, [sp, #16]
   377d8:	movne	r1, r2
   377dc:	movne	r2, #2
   377e0:	str	r0, [sp, #20]
   377e4:	addne	r0, r0, r3
   377e8:	beq	37780 <flatcc_builder_create_struct@@Base+0x88>
   377ec:	b	3775c <flatcc_builder_create_struct@@Base+0x64>
   377f0:	movw	r1, #45220	; 0xb0a4
   377f4:	movt	r1, #5
   377f8:	ldr	r3, [pc, #48]	; 37830 <flatcc_builder_create_struct@@Base+0x138>
   377fc:	movw	r0, #41608	; 0xa288
   37800:	movt	r0, #4
   37804:	movw	r2, #647	; 0x287
   37808:	bl	14120 <__assert_fail@plt>
   3780c:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   37810:	movw	r1, #45220	; 0xb0a4
   37814:	movt	r1, #5
   37818:	ldr	r3, [pc, #20]	; 37834 <flatcc_builder_create_struct@@Base+0x13c>
   3781c:	movw	r0, #45484	; 0xb1ac
   37820:	movt	r0, #5
   37824:	movw	r2, #783	; 0x30f
   37828:	bl	14120 <__assert_fail@plt>
   3782c:	strdeq	sl, [r5], -ip
   37830:	andeq	sl, r5, r0, lsl #19
   37834:	andeq	sl, r5, ip, ror ip

00037838 <flatcc_builder_start_buffer@@Base>:
   37838:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3783c:	mov	r5, r1
   37840:	mov	r4, r0
   37844:	ldr	r1, [r0, #156]	; 0x9c
   37848:	strd	r6, [sp, #8]
   3784c:	mov	r6, r3
   37850:	mov	r7, r2
   37854:	ldr	r3, [r0, #160]	; 0xa0
   37858:	strd	r8, [sp, #16]
   3785c:	ldrh	r8, [r0, #128]	; 0x80
   37860:	add	r2, r1, #1
   37864:	strd	sl, [sp, #24]
   37868:	str	lr, [sp, #32]
   3786c:	sub	sp, sp, #12
   37870:	cmp	r2, r3
   37874:	str	r2, [r0, #156]	; 0x9c
   37878:	ble	379c4 <flatcc_builder_start_buffer@@Base+0x18c>
   3787c:	ldr	r3, [r0, #176]	; 0xb0
   37880:	cmp	r3, #0
   37884:	cmpgt	r2, r3
   37888:	movgt	r3, #1
   3788c:	movle	r3, #0
   37890:	bgt	379d4 <flatcc_builder_start_buffer@@Base+0x19c>
   37894:	add	r1, r1, r1, lsl #3
   37898:	ldr	r0, [r0, #88]	; 0x58
   3789c:	lsl	r9, r1, #2
   378a0:	add	r2, r9, #36	; 0x24
   378a4:	cmp	r2, r0
   378a8:	bls	378cc <flatcc_builder_start_buffer@@Base+0x94>
   378ac:	mov	ip, #4
   378b0:	add	r1, r4, #84	; 0x54
   378b4:	ldr	r0, [r4, #40]	; 0x28
   378b8:	str	ip, [sp]
   378bc:	ldr	sl, [r4, #48]	; 0x30
   378c0:	blx	sl
   378c4:	cmp	r0, #0
   378c8:	bne	379dc <flatcc_builder_start_buffer@@Base+0x1a4>
   378cc:	ldr	r3, [r4, #84]	; 0x54
   378d0:	add	r3, r3, r9
   378d4:	cmp	r3, #0
   378d8:	str	r3, [r4, #32]
   378dc:	beq	379d4 <flatcc_builder_start_buffer@@Base+0x19c>
   378e0:	ldr	r2, [r4, #88]	; 0x58
   378e4:	movw	r0, #36409	; 0x8e39
   378e8:	movt	r0, #14563	; 0x38e3
   378ec:	ldr	r1, [r4, #176]	; 0xb0
   378f0:	umull	r0, r2, r0, r2
   378f4:	lsr	r2, r2, #3
   378f8:	cmp	r1, #0
   378fc:	cmpgt	r2, r1
   37900:	movgt	r2, r1
   37904:	str	r2, [r4, #160]	; 0xa0
   37908:	ldr	sl, [pc, #208]	; 379e0 <flatcc_builder_start_buffer@@Base+0x1a8>
   3790c:	mov	r0, #0
   37910:	mvn	lr, #3
   37914:	cmp	r5, r0
   37918:	ldr	r2, [r4, #20]
   3791c:	ldr	ip, [r4, #28]
   37920:	moveq	r5, sl
   37924:	ldrh	r9, [r4, #130]	; 0x82
   37928:	ldrh	fp, [r4, #132]	; 0x84
   3792c:	ldr	r1, [r4, #148]	; 0x94
   37930:	ldr	sl, [r4, #152]	; 0x98
   37934:	str	r2, [r3, #8]
   37938:	add	r2, r2, ip
   3793c:	add	r2, r2, #7
   37940:	strh	r9, [r3, #12]
   37944:	bic	r2, r2, #7
   37948:	strh	r8, [r4, #130]	; 0x82
   3794c:	ldrh	r8, [r4, #164]	; 0xa4
   37950:	ldr	r9, [r4, #136]	; 0x88
   37954:	stm	r3, {ip, lr}
   37958:	mov	ip, #1
   3795c:	str	r0, [r4, #20]
   37960:	str	r2, [r4, #28]
   37964:	add	r2, r1, ip
   37968:	strh	ip, [r4, #128]	; 0x80
   3796c:	ldr	lr, [r4, #144]	; 0x90
   37970:	strh	fp, [r3, #34]	; 0x22
   37974:	strh	r7, [r4, #132]	; 0x84
   37978:	ldr	r7, [r4, #168]	; 0xa8
   3797c:	strh	r8, [r3, #32]
   37980:	strh	r6, [r4, #164]	; 0xa4
   37984:	str	lr, [r3, #20]
   37988:	str	sl, [r3, #28]
   3798c:	str	r9, [r4, #144]	; 0x90
   37990:	str	r2, [r4, #148]	; 0x94
   37994:	str	r1, [r4, #152]	; 0x98
   37998:	str	r7, [r3, #16]
   3799c:	ldr	r2, [r5]
   379a0:	str	r2, [r4, #168]	; 0xa8
   379a4:	strh	ip, [r3, #14]
   379a8:	add	sp, sp, #12
   379ac:	ldrd	r4, [sp]
   379b0:	ldrd	r6, [sp, #8]
   379b4:	ldrd	r8, [sp, #16]
   379b8:	ldrd	sl, [sp, #24]
   379bc:	add	sp, sp, #32
   379c0:	pop	{pc}		; (ldr pc, [sp], #4)
   379c4:	ldr	r3, [r0, #32]
   379c8:	add	r3, r3, #36	; 0x24
   379cc:	str	r3, [r0, #32]
   379d0:	b	37908 <flatcc_builder_start_buffer@@Base+0xd0>
   379d4:	mvn	r0, #0
   379d8:	b	379a8 <flatcc_builder_start_buffer@@Base+0x170>
   379dc:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>
   379e0:	strdeq	sl, [r5], -ip

000379e4 <flatcc_builder_end_buffer@@Base>:
   379e4:	ldr	ip, [r0, #32]
   379e8:	strd	r4, [sp, #-16]!
   379ec:	mov	r4, r0
   379f0:	ldrh	r2, [r0, #164]	; 0xa4
   379f4:	ldr	r0, [r0, #152]	; 0x98
   379f8:	ldrh	ip, [ip, #14]
   379fc:	and	r2, r2, #2
   37a00:	str	r6, [sp, #8]
   37a04:	str	lr, [sp, #12]
   37a08:	sub	sp, sp, #8
   37a0c:	cmp	r0, #0
   37a10:	moveq	r0, r2
   37a14:	orrne	r0, r2, #1
   37a18:	cmp	ip, #1
   37a1c:	bne	37b04 <flatcc_builder_end_buffer@@Base+0x120>
   37a20:	ldrh	r2, [r4, #132]	; 0x84
   37a24:	mov	r3, r1
   37a28:	add	r1, r4, #168	; 0xa8
   37a2c:	ldrh	ip, [r4, #128]	; 0x80
   37a30:	cmp	r2, ip
   37a34:	movhi	ip, r2
   37a38:	strhhi	r2, [r4, #128]	; 0x80
   37a3c:	str	ip, [sp]
   37a40:	str	r0, [sp, #4]
   37a44:	mov	r0, r4
   37a48:	bl	37438 <flatcc_builder_create_buffer@@Base>
   37a4c:	subs	r5, r0, #0
   37a50:	beq	37aec <flatcc_builder_end_buffer@@Base+0x108>
   37a54:	mov	r1, #0
   37a58:	ldr	r0, [r4, #16]
   37a5c:	ldr	r3, [r4, #32]
   37a60:	ldr	r2, [r4, #20]
   37a64:	ldrh	lr, [r3, #32]
   37a68:	ldr	ip, [r3, #16]
   37a6c:	ldr	r6, [r3, #20]
   37a70:	ldr	r3, [r3, #28]
   37a74:	str	r6, [r4, #144]	; 0x90
   37a78:	strh	lr, [r4, #164]	; 0xa4
   37a7c:	str	r3, [r4, #152]	; 0x98
   37a80:	str	ip, [r4, #168]	; 0xa8
   37a84:	bl	14084 <memset@plt>
   37a88:	ldr	r3, [r4, #32]
   37a8c:	ldr	r0, [r4, #60]	; 0x3c
   37a90:	ldr	r2, [r4, #64]	; 0x40
   37a94:	ldr	ip, [r3]
   37a98:	ldmib	r3, {r1, lr}
   37a9c:	add	r0, r0, ip
   37aa0:	sub	r2, r2, ip
   37aa4:	str	r0, [r4, #16]
   37aa8:	cmp	r2, r1
   37aac:	ldrh	r0, [r4, #128]	; 0x80
   37ab0:	movcs	r2, r1
   37ab4:	str	lr, [r4, #20]
   37ab8:	str	ip, [r4, #28]
   37abc:	ldrh	ip, [r4, #130]	; 0x82
   37ac0:	str	r2, [r4, #24]
   37ac4:	ldr	r2, [r4, #156]	; 0x9c
   37ac8:	str	r1, [r3, #4]
   37acc:	cmp	r0, ip
   37ad0:	sub	r0, r3, #36	; 0x24
   37ad4:	strhcc	ip, [r4, #128]	; 0x80
   37ad8:	ldrh	r1, [r3, #12]
   37adc:	sub	r3, r2, #1
   37ae0:	str	r0, [r4, #32]
   37ae4:	strh	r1, [r4, #130]	; 0x82
   37ae8:	str	r3, [r4, #156]	; 0x9c
   37aec:	mov	r0, r5
   37af0:	add	sp, sp, #8
   37af4:	ldrd	r4, [sp]
   37af8:	ldr	r6, [sp, #8]
   37afc:	add	sp, sp, #12
   37b00:	pop	{pc}		; (ldr pc, [sp], #4)
   37b04:	movw	r1, #45220	; 0xb0a4
   37b08:	movt	r1, #5
   37b0c:	ldr	r3, [pc, #12]	; 37b20 <flatcc_builder_end_buffer@@Base+0x13c>
   37b10:	movw	r0, #45496	; 0xb1b8
   37b14:	movt	r0, #5
   37b18:	movw	r2, #838	; 0x346
   37b1c:	bl	14120 <__assert_fail@plt>
   37b20:	muleq	r5, ip, ip

00037b24 <flatcc_builder_start_struct@@Base>:
   37b24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   37b28:	mov	r5, r1
   37b2c:	mov	r4, r0
   37b30:	ldr	r1, [r0, #156]	; 0x9c
   37b34:	ldr	r3, [r0, #160]	; 0xa0
   37b38:	strd	r6, [sp, #8]
   37b3c:	mov	r6, r2
   37b40:	str	r8, [sp, #16]
   37b44:	add	r2, r1, #1
   37b48:	str	lr, [sp, #20]
   37b4c:	sub	sp, sp, #8
   37b50:	cmp	r2, r3
   37b54:	str	r2, [r0, #156]	; 0x9c
   37b58:	ble	37c78 <flatcc_builder_start_struct@@Base+0x154>
   37b5c:	ldr	r3, [r0, #176]	; 0xb0
   37b60:	cmp	r3, #0
   37b64:	cmpgt	r2, r3
   37b68:	movgt	r3, #1
   37b6c:	movle	r3, #0
   37b70:	bgt	37ce4 <flatcc_builder_start_struct@@Base+0x1c0>
   37b74:	add	r1, r1, r1, lsl #3
   37b78:	ldr	r0, [r0, #88]	; 0x58
   37b7c:	lsl	r7, r1, #2
   37b80:	add	r2, r7, #36	; 0x24
   37b84:	cmp	r2, r0
   37b88:	bls	37bac <flatcc_builder_start_struct@@Base+0x88>
   37b8c:	mov	ip, #4
   37b90:	add	r1, r4, #84	; 0x54
   37b94:	ldr	r0, [r4, #40]	; 0x28
   37b98:	str	ip, [sp]
   37b9c:	ldr	r8, [r4, #48]	; 0x30
   37ba0:	blx	r8
   37ba4:	cmp	r0, #0
   37ba8:	bne	37cec <flatcc_builder_start_struct@@Base+0x1c8>
   37bac:	ldr	r1, [r4, #84]	; 0x54
   37bb0:	add	r1, r1, r7
   37bb4:	cmp	r1, #0
   37bb8:	str	r1, [r4, #32]
   37bbc:	beq	37ce4 <flatcc_builder_start_struct@@Base+0x1c0>
   37bc0:	ldr	r3, [r4, #88]	; 0x58
   37bc4:	movw	r0, #36409	; 0x8e39
   37bc8:	movt	r0, #14563	; 0x38e3
   37bcc:	ldr	r2, [r4, #176]	; 0xb0
   37bd0:	umull	r0, r3, r0, r3
   37bd4:	lsr	r3, r3, #3
   37bd8:	cmp	r2, #0
   37bdc:	cmpgt	r3, r2
   37be0:	movgt	r3, r2
   37be4:	str	r3, [r4, #160]	; 0xa0
   37be8:	ldr	r3, [r4, #20]
   37bec:	mvn	lr, #3
   37bf0:	ldr	ip, [r4, #28]
   37bf4:	ldrh	r7, [r4, #130]	; 0x82
   37bf8:	ldr	r2, [r4, #64]	; 0x40
   37bfc:	ldr	r0, [r4, #60]	; 0x3c
   37c00:	str	r3, [r1, #8]
   37c04:	add	r3, r3, ip
   37c08:	add	r3, r3, #7
   37c0c:	strh	r7, [r1, #12]
   37c10:	mov	r7, #0
   37c14:	bic	r3, r3, #7
   37c18:	strh	r6, [r4, #130]	; 0x82
   37c1c:	mvn	r6, #3
   37c20:	sub	r2, r2, r3
   37c24:	stm	r1, {ip, lr}
   37c28:	mov	ip, #2
   37c2c:	cmp	r2, lr
   37c30:	add	r0, r0, r3
   37c34:	str	r7, [r4, #20]
   37c38:	movhi	r2, lr
   37c3c:	str	r3, [r4, #28]
   37c40:	strh	ip, [r1, #14]
   37c44:	strls	r2, [r4, #24]
   37c48:	strhi	lr, [r4, #24]
   37c4c:	cmp	r5, r2
   37c50:	str	r0, [r4, #16]
   37c54:	str	r6, [r1, #4]
   37c58:	str	r5, [r4, #20]
   37c5c:	bcs	37c88 <flatcc_builder_start_struct@@Base+0x164>
   37c60:	add	sp, sp, #8
   37c64:	ldrd	r4, [sp]
   37c68:	ldrd	r6, [sp, #8]
   37c6c:	ldr	r8, [sp, #16]
   37c70:	add	sp, sp, #20
   37c74:	pop	{pc}		; (ldr pc, [sp], #4)
   37c78:	ldr	r1, [r0, #32]
   37c7c:	add	r1, r1, #36	; 0x24
   37c80:	str	r1, [r0, #32]
   37c84:	b	37be8 <flatcc_builder_start_struct@@Base+0xc4>
   37c88:	mov	ip, #1
   37c8c:	add	r1, r4, #60	; 0x3c
   37c90:	ldr	r0, [r4, #40]	; 0x28
   37c94:	add	r2, r5, ip
   37c98:	add	r2, r2, r3
   37c9c:	mov	r3, ip
   37ca0:	str	ip, [sp]
   37ca4:	ldr	r5, [r4, #48]	; 0x30
   37ca8:	blx	r5
   37cac:	cmp	r0, #0
   37cb0:	bne	37ce4 <flatcc_builder_start_struct@@Base+0x1c0>
   37cb4:	ldr	r0, [r4, #28]
   37cb8:	ldr	r2, [r4, #32]
   37cbc:	ldr	r3, [r4, #64]	; 0x40
   37cc0:	ldr	r1, [r4, #60]	; 0x3c
   37cc4:	sub	r3, r3, r0
   37cc8:	cmp	r3, r6
   37ccc:	movhi	r3, r6
   37cd0:	add	r0, r1, r0
   37cd4:	str	r0, [r4, #16]
   37cd8:	str	r3, [r4, #24]
   37cdc:	str	r6, [r2, #4]
   37ce0:	b	37c60 <flatcc_builder_start_struct@@Base+0x13c>
   37ce4:	mov	r0, #0
   37ce8:	b	37c60 <flatcc_builder_start_struct@@Base+0x13c>
   37cec:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

00037cf0 <flatcc_builder_struct_edit@@Base>:
   37cf0:	ldr	r0, [r0, #16]
   37cf4:	bx	lr

00037cf8 <flatcc_builder_end_struct@@Base>:
   37cf8:	ldr	r3, [r0, #32]
   37cfc:	strd	r4, [sp, #-16]!
   37d00:	ldrh	r3, [r3, #14]
   37d04:	str	r6, [sp, #8]
   37d08:	str	lr, [sp, #12]
   37d0c:	sub	sp, sp, #80	; 0x50
   37d10:	cmp	r3, #2
   37d14:	bne	37ebc <flatcc_builder_end_struct@@Base+0x1c4>
   37d18:	ldrh	r3, [r0, #130]	; 0x82
   37d1c:	mov	r4, r0
   37d20:	ldr	r1, [r0, #16]
   37d24:	ldr	r0, [r0, #20]
   37d28:	cmp	r3, #0
   37d2c:	beq	37ea0 <flatcc_builder_end_struct@@Base+0x1a8>
   37d30:	ldrh	r2, [r4, #128]	; 0x80
   37d34:	ldr	ip, [r4, #136]	; 0x88
   37d38:	cmp	r2, r3
   37d3c:	mov	r2, #0
   37d40:	strhcc	r3, [r4, #128]	; 0x80
   37d44:	sub	r5, ip, r0
   37d48:	sub	r3, r3, #1
   37d4c:	cmp	r0, r2
   37d50:	and	r3, r3, r5
   37d54:	str	r2, [sp, #8]
   37d58:	str	r2, [sp, #12]
   37d5c:	bne	37e54 <flatcc_builder_end_struct@@Base+0x15c>
   37d60:	cmp	r3, #0
   37d64:	movne	r1, r2
   37d68:	movne	r0, r3
   37d6c:	movne	r2, #1
   37d70:	beq	37e80 <flatcc_builder_end_struct@@Base+0x188>
   37d74:	ldr	lr, [pc, #348]	; 37ed8 <flatcc_builder_end_struct@@Base+0x1e0>
   37d78:	add	r5, sp, #80	; 0x50
   37d7c:	add	r1, r1, #1
   37d80:	add	r1, r5, r1, lsl #3
   37d84:	sub	r5, ip, r0
   37d88:	str	r0, [sp, #8]
   37d8c:	str	r2, [sp, #12]
   37d90:	str	lr, [r1, #-72]	; 0xffffffb8
   37d94:	str	r3, [r1, #-68]	; 0xffffffbc
   37d98:	cmp	ip, r5
   37d9c:	ble	37e80 <flatcc_builder_end_struct@@Base+0x188>
   37da0:	add	r1, sp, #16
   37da4:	mov	r3, r5
   37da8:	str	r0, [sp]
   37dac:	ldr	r0, [r4, #36]	; 0x24
   37db0:	ldr	r6, [r4, #44]	; 0x2c
   37db4:	blx	r6
   37db8:	subs	r1, r0, #0
   37dbc:	bne	37e9c <flatcc_builder_end_struct@@Base+0x1a4>
   37dc0:	cmp	r5, #0
   37dc4:	str	r5, [r4, #136]	; 0x88
   37dc8:	beq	37e3c <flatcc_builder_end_struct@@Base+0x144>
   37dcc:	ldr	r0, [r4, #16]
   37dd0:	ldr	r2, [r4, #20]
   37dd4:	bl	14084 <memset@plt>
   37dd8:	ldr	r3, [r4, #32]
   37ddc:	ldr	r0, [r4, #60]	; 0x3c
   37de0:	ldr	r2, [r4, #64]	; 0x40
   37de4:	ldr	ip, [r3]
   37de8:	ldmib	r3, {r1, lr}
   37dec:	add	r0, r0, ip
   37df0:	sub	r2, r2, ip
   37df4:	str	r0, [r4, #16]
   37df8:	cmp	r2, r1
   37dfc:	ldrh	r0, [r4, #128]	; 0x80
   37e00:	movcs	r2, r1
   37e04:	str	lr, [r4, #20]
   37e08:	str	ip, [r4, #28]
   37e0c:	ldrh	ip, [r4, #130]	; 0x82
   37e10:	str	r2, [r4, #24]
   37e14:	ldr	r2, [r4, #156]	; 0x9c
   37e18:	str	r1, [r3, #4]
   37e1c:	cmp	r0, ip
   37e20:	sub	r0, r3, #36	; 0x24
   37e24:	strhcc	ip, [r4, #128]	; 0x80
   37e28:	ldrh	r1, [r3, #12]
   37e2c:	sub	r3, r2, #1
   37e30:	str	r0, [r4, #32]
   37e34:	strh	r1, [r4, #130]	; 0x82
   37e38:	str	r3, [r4, #156]	; 0x9c
   37e3c:	mov	r0, r5
   37e40:	add	sp, sp, #80	; 0x50
   37e44:	ldrd	r4, [sp]
   37e48:	ldr	r6, [sp, #8]
   37e4c:	add	sp, sp, #12
   37e50:	pop	{pc}		; (ldr pc, [sp], #4)
   37e54:	mov	r2, #1
   37e58:	cmp	r3, #0
   37e5c:	str	r0, [sp, #8]
   37e60:	str	r2, [sp, #12]
   37e64:	str	r1, [sp, #16]
   37e68:	movne	r1, r2
   37e6c:	movne	r2, #2
   37e70:	str	r0, [sp, #20]
   37e74:	addne	r0, r0, r3
   37e78:	beq	37d98 <flatcc_builder_end_struct@@Base+0xa0>
   37e7c:	b	37d74 <flatcc_builder_end_struct@@Base+0x7c>
   37e80:	movw	r1, #45220	; 0xb0a4
   37e84:	movt	r1, #5
   37e88:	ldr	r3, [pc, #76]	; 37edc <flatcc_builder_end_struct@@Base+0x1e4>
   37e8c:	movw	r0, #41608	; 0xa288
   37e90:	movt	r0, #4
   37e94:	movw	r2, #647	; 0x287
   37e98:	bl	14120 <__assert_fail@plt>
   37e9c:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   37ea0:	movw	r1, #45220	; 0xb0a4
   37ea4:	movt	r1, #5
   37ea8:	ldr	r3, [pc, #48]	; 37ee0 <flatcc_builder_end_struct@@Base+0x1e8>
   37eac:	movw	r0, #45484	; 0xb1ac
   37eb0:	movt	r0, #5
   37eb4:	movw	r2, #783	; 0x30f
   37eb8:	bl	14120 <__assert_fail@plt>
   37ebc:	movw	r1, #45220	; 0xb0a4
   37ec0:	movt	r1, #5
   37ec4:	ldr	r3, [pc, #24]	; 37ee4 <flatcc_builder_end_struct@@Base+0x1ec>
   37ec8:	movw	r0, #45540	; 0xb1e4
   37ecc:	movt	r0, #5
   37ed0:	mov	r2, #872	; 0x368
   37ed4:	bl	14120 <__assert_fail@plt>
   37ed8:	strdeq	sl, [r5], -ip
   37edc:	andeq	sl, r5, r0, lsl #19
   37ee0:	andeq	sl, r5, ip, ror ip
   37ee4:			; <UNDEFINED> instruction: 0x0005acb8

00037ee8 <flatcc_builder_extend_vector@@Base>:
   37ee8:	ldr	ip, [r0, #32]
   37eec:	strd	r4, [sp, #-20]!	; 0xffffffec
   37ef0:	mov	r4, r0
   37ef4:	ldr	r3, [ip, #20]
   37ef8:	ldr	r0, [ip, #24]
   37efc:	strd	r6, [sp, #8]
   37f00:	str	lr, [sp, #16]
   37f04:	sub	sp, sp, #12
   37f08:	adds	r3, r1, r3
   37f0c:	movcs	r5, #1
   37f10:	movcc	r5, #0
   37f14:	cmp	r0, r3
   37f18:	orrcc	r5, r5, #1
   37f1c:	cmp	r5, #0
   37f20:	bne	37fcc <flatcc_builder_extend_vector@@Base+0xe4>
   37f24:	ldr	r2, [ip, #16]
   37f28:	ldr	r6, [r4, #20]
   37f2c:	str	r3, [ip, #20]
   37f30:	ldr	r3, [r4, #24]
   37f34:	mla	r2, r2, r1, r6
   37f38:	cmp	r2, r3
   37f3c:	str	r2, [r4, #20]
   37f40:	bcs	37f60 <flatcc_builder_extend_vector@@Base+0x78>
   37f44:	ldr	r0, [r4, #16]
   37f48:	add	r0, r0, r6
   37f4c:	add	sp, sp, #12
   37f50:	ldrd	r4, [sp]
   37f54:	ldrd	r6, [sp, #8]
   37f58:	add	sp, sp, #16
   37f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   37f60:	ldr	ip, [r4, #28]
   37f64:	mov	r0, #1
   37f68:	add	r1, r4, #60	; 0x3c
   37f6c:	mov	r3, r0
   37f70:	str	r0, [sp]
   37f74:	ldr	r7, [r4, #48]	; 0x30
   37f78:	add	ip, ip, r0
   37f7c:	ldr	r0, [r4, #40]	; 0x28
   37f80:	add	r2, ip, r2
   37f84:	blx	r7
   37f88:	cmp	r0, #0
   37f8c:	bne	37fc4 <flatcc_builder_extend_vector@@Base+0xdc>
   37f90:	ldr	r2, [r4, #28]
   37f94:	ldr	r0, [r4, #60]	; 0x3c
   37f98:	ldr	r3, [r4, #64]	; 0x40
   37f9c:	add	r0, r0, r2
   37fa0:	sub	r3, r3, r2
   37fa4:	mvn	r2, #3
   37fa8:	str	r0, [r4, #16]
   37fac:	cmn	r3, #4
   37fb0:	mvnhi	r3, #3
   37fb4:	str	r3, [r4, #24]
   37fb8:	ldr	r3, [r4, #32]
   37fbc:	str	r2, [r3, #4]
   37fc0:	b	37f48 <flatcc_builder_extend_vector@@Base+0x60>
   37fc4:	mov	r0, r5
   37fc8:	b	37f4c <flatcc_builder_extend_vector@@Base+0x64>
   37fcc:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>

00037fd0 <flatcc_builder_vector_push@@Base>:
   37fd0:	ldr	r3, [r0, #32]
   37fd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   37fd8:	ldrh	r2, [r3, #14]
   37fdc:	strd	r6, [sp, #8]
   37fe0:	str	r8, [sp, #16]
   37fe4:	str	lr, [sp, #20]
   37fe8:	sub	sp, sp, #8
   37fec:	cmp	r2, #4
   37ff0:	bne	380f4 <flatcc_builder_vector_push@@Base+0x124>
   37ff4:	mov	r6, r1
   37ff8:	ldr	r2, [r3, #20]
   37ffc:	ldr	r1, [r3, #24]
   38000:	cmp	r2, r1
   38004:	bhi	380d8 <flatcc_builder_vector_push@@Base+0x108>
   38008:	add	r2, r2, #1
   3800c:	ldr	r5, [r3, #16]
   38010:	mov	r4, r0
   38014:	ldr	r7, [r0, #20]
   38018:	str	r2, [r3, #20]
   3801c:	ldr	r3, [r0, #24]
   38020:	add	ip, r5, r7
   38024:	cmp	ip, r3
   38028:	str	ip, [r0, #20]
   3802c:	bcs	3806c <flatcc_builder_vector_push@@Base+0x9c>
   38030:	ldr	r3, [r0, #16]
   38034:	adds	r3, r3, r7
   38038:	beq	38050 <flatcc_builder_vector_push@@Base+0x80>
   3803c:	mov	r0, r3
   38040:	mov	r2, r5
   38044:	mov	r1, r6
   38048:	bl	13fb8 <memcpy@plt>
   3804c:	mov	r3, r0
   38050:	mov	r0, r3
   38054:	add	sp, sp, #8
   38058:	ldrd	r4, [sp]
   3805c:	ldrd	r6, [sp, #8]
   38060:	ldr	r8, [sp, #16]
   38064:	add	sp, sp, #20
   38068:	pop	{pc}		; (ldr pc, [sp], #4)
   3806c:	ldr	r2, [r4, #28]
   38070:	mov	r0, #1
   38074:	add	r1, r4, #60	; 0x3c
   38078:	mov	r3, r0
   3807c:	str	r0, [sp]
   38080:	ldr	r8, [r4, #48]	; 0x30
   38084:	add	r2, r2, r0
   38088:	ldr	r0, [r4, #40]	; 0x28
   3808c:	add	r2, r2, ip
   38090:	blx	r8
   38094:	cmp	r0, #0
   38098:	bne	380d0 <flatcc_builder_vector_push@@Base+0x100>
   3809c:	ldr	r1, [r4, #28]
   380a0:	ldr	r3, [r4, #60]	; 0x3c
   380a4:	ldr	r2, [r4, #64]	; 0x40
   380a8:	add	r3, r3, r1
   380ac:	sub	r2, r2, r1
   380b0:	mvn	r1, #3
   380b4:	str	r3, [r4, #16]
   380b8:	cmn	r2, #4
   380bc:	mvnhi	r2, #3
   380c0:	str	r2, [r4, #24]
   380c4:	ldr	r2, [r4, #32]
   380c8:	str	r1, [r2, #4]
   380cc:	b	38034 <flatcc_builder_vector_push@@Base+0x64>
   380d0:	mov	r3, #0
   380d4:	b	38050 <flatcc_builder_vector_push@@Base+0x80>
   380d8:	movw	r1, #45220	; 0xb0a4
   380dc:	movt	r1, #5
   380e0:	ldr	r3, [pc, #40]	; 38110 <flatcc_builder_vector_push@@Base+0x140>
   380e4:	movw	r0, #45628	; 0xb23c
   380e8:	movt	r0, #5
   380ec:	mov	r2, #908	; 0x38c
   380f0:	bl	14120 <__assert_fail@plt>
   380f4:	movw	r1, #45220	; 0xb0a4
   380f8:	movt	r1, #5
   380fc:	ldr	r3, [pc, #12]	; 38110 <flatcc_builder_vector_push@@Base+0x140>
   38100:	movw	r0, #45584	; 0xb210
   38104:	movt	r0, #5
   38108:	movw	r2, #907	; 0x38b
   3810c:	bl	14120 <__assert_fail@plt>
   38110:	ldrdeq	sl, [r5], -r4

00038114 <flatcc_builder_append_vector@@Base>:
   38114:	strd	r4, [sp, #-28]!	; 0xffffffe4
   38118:	mov	r5, r0
   3811c:	ldr	r0, [r0, #32]
   38120:	ldrh	r3, [r0, #14]
   38124:	strd	r6, [sp, #8]
   38128:	strd	r8, [sp, #16]
   3812c:	str	lr, [sp, #24]
   38130:	sub	sp, sp, #12
   38134:	cmp	r3, #4
   38138:	bne	38238 <flatcc_builder_append_vector@@Base+0x124>
   3813c:	mov	r6, r1
   38140:	ldr	r1, [r0, #20]
   38144:	ldr	r4, [r0, #24]
   38148:	adds	r1, r2, r1
   3814c:	movcs	r3, #1
   38150:	movcc	r3, #0
   38154:	cmp	r4, r1
   38158:	movcs	r4, r3
   3815c:	orrcc	r4, r3, #1
   38160:	cmp	r4, #0
   38164:	bne	38234 <flatcc_builder_append_vector@@Base+0x120>
   38168:	ldr	r7, [r0, #16]
   3816c:	ldr	r8, [r5, #20]
   38170:	ldr	r3, [r5, #24]
   38174:	mul	r7, r7, r2
   38178:	str	r1, [r0, #20]
   3817c:	add	ip, r7, r8
   38180:	cmp	ip, r3
   38184:	str	ip, [r5, #20]
   38188:	bcs	381c8 <flatcc_builder_append_vector@@Base+0xb4>
   3818c:	ldr	r3, [r5, #16]
   38190:	adds	r3, r3, r8
   38194:	beq	381ac <flatcc_builder_append_vector@@Base+0x98>
   38198:	mov	r0, r3
   3819c:	mov	r2, r7
   381a0:	mov	r1, r6
   381a4:	bl	13fb8 <memcpy@plt>
   381a8:	mov	r3, r0
   381ac:	mov	r0, r3
   381b0:	add	sp, sp, #12
   381b4:	ldrd	r4, [sp]
   381b8:	ldrd	r6, [sp, #8]
   381bc:	ldrd	r8, [sp, #16]
   381c0:	add	sp, sp, #24
   381c4:	pop	{pc}		; (ldr pc, [sp], #4)
   381c8:	ldr	r2, [r5, #28]
   381cc:	mov	r0, #1
   381d0:	add	r1, r5, #60	; 0x3c
   381d4:	mov	r3, r0
   381d8:	str	r0, [sp]
   381dc:	ldr	r9, [r5, #48]	; 0x30
   381e0:	add	r2, r2, r0
   381e4:	ldr	r0, [r5, #40]	; 0x28
   381e8:	add	r2, r2, ip
   381ec:	blx	r9
   381f0:	cmp	r0, #0
   381f4:	bne	3822c <flatcc_builder_append_vector@@Base+0x118>
   381f8:	ldr	r1, [r5, #28]
   381fc:	ldr	r3, [r5, #60]	; 0x3c
   38200:	ldr	r2, [r5, #64]	; 0x40
   38204:	add	r3, r3, r1
   38208:	sub	r2, r2, r1
   3820c:	mvn	r1, #3
   38210:	str	r3, [r5, #16]
   38214:	cmn	r2, #4
   38218:	mvnhi	r2, #3
   3821c:	str	r2, [r5, #24]
   38220:	ldr	r2, [r5, #32]
   38224:	str	r1, [r2, #4]
   38228:	b	38190 <flatcc_builder_append_vector@@Base+0x7c>
   3822c:	mov	r3, r4
   38230:	b	381ac <flatcc_builder_append_vector@@Base+0x98>
   38234:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   38238:	movw	r1, #45220	; 0xb0a4
   3823c:	movt	r1, #5
   38240:	ldr	r3, [pc, #12]	; 38254 <flatcc_builder_append_vector@@Base+0x140>
   38244:	movw	r0, #45584	; 0xb210
   38248:	movt	r0, #5
   3824c:	movw	r2, #915	; 0x393
   38250:	bl	14120 <__assert_fail@plt>
   38254:	strdeq	sl, [r5], -r0

00038258 <flatcc_builder_extend_offset_vector@@Base>:
   38258:	ldr	ip, [r0, #32]
   3825c:	strd	r4, [sp, #-20]!	; 0xffffffec
   38260:	mov	r4, r0
   38264:	ldr	r3, [ip, #20]
   38268:	strd	r6, [sp, #8]
   3826c:	str	lr, [sp, #16]
   38270:	sub	sp, sp, #12
   38274:	adds	r3, r1, r3
   38278:	movcs	r2, #1
   3827c:	movcc	r2, #0
   38280:	cmn	r3, #-1073741823	; 0xc0000001
   38284:	movls	r0, #0
   38288:	movhi	r0, #1
   3828c:	orrs	r5, r2, r0
   38290:	bne	38338 <flatcc_builder_extend_offset_vector@@Base+0xe0>
   38294:	ldr	r6, [r4, #20]
   38298:	str	r3, [ip, #20]
   3829c:	ldr	r3, [r4, #24]
   382a0:	add	r2, r6, r1, lsl #2
   382a4:	cmp	r2, r3
   382a8:	str	r2, [r4, #20]
   382ac:	bcs	382cc <flatcc_builder_extend_offset_vector@@Base+0x74>
   382b0:	ldr	r0, [r4, #16]
   382b4:	add	r0, r0, r6
   382b8:	add	sp, sp, #12
   382bc:	ldrd	r4, [sp]
   382c0:	ldrd	r6, [sp, #8]
   382c4:	add	sp, sp, #16
   382c8:	pop	{pc}		; (ldr pc, [sp], #4)
   382cc:	ldr	ip, [r4, #28]
   382d0:	mov	r0, #1
   382d4:	add	r1, r4, #60	; 0x3c
   382d8:	mov	r3, r0
   382dc:	str	r0, [sp]
   382e0:	ldr	r7, [r4, #48]	; 0x30
   382e4:	add	ip, ip, r0
   382e8:	ldr	r0, [r4, #40]	; 0x28
   382ec:	add	r2, ip, r2
   382f0:	blx	r7
   382f4:	cmp	r0, #0
   382f8:	bne	38330 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   382fc:	ldr	r2, [r4, #28]
   38300:	ldr	r0, [r4, #60]	; 0x3c
   38304:	ldr	r3, [r4, #64]	; 0x40
   38308:	add	r0, r0, r2
   3830c:	sub	r3, r3, r2
   38310:	mvn	r2, #3
   38314:	str	r0, [r4, #16]
   38318:	cmn	r3, #4
   3831c:	mvnhi	r3, #3
   38320:	str	r3, [r4, #24]
   38324:	ldr	r3, [r4, #32]
   38328:	str	r2, [r3, #4]
   3832c:	b	382b4 <flatcc_builder_extend_offset_vector@@Base+0x5c>
   38330:	mov	r0, r5
   38334:	b	382b8 <flatcc_builder_extend_offset_vector@@Base+0x60>
   38338:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>

0003833c <flatcc_builder_offset_vector_push@@Base>:
   3833c:	ldr	r2, [r0, #32]
   38340:	strd	r4, [sp, #-20]!	; 0xffffffec
   38344:	ldrh	r3, [r2, #14]
   38348:	strd	r6, [sp, #8]
   3834c:	str	lr, [sp, #16]
   38350:	sub	sp, sp, #12
   38354:	cmp	r3, #5
   38358:	bne	3841c <flatcc_builder_offset_vector_push@@Base+0xe0>
   3835c:	ldr	r3, [r2, #20]
   38360:	cmn	r3, #-1073741823	; 0xc0000001
   38364:	beq	38414 <flatcc_builder_offset_vector_push@@Base+0xd8>
   38368:	ldr	r5, [r0, #20]
   3836c:	mov	r6, r1
   38370:	add	r3, r3, #1
   38374:	mov	r4, r0
   38378:	ldr	r1, [r0, #24]
   3837c:	str	r3, [r2, #20]
   38380:	add	r3, r5, #4
   38384:	cmp	r3, r1
   38388:	str	r3, [r0, #20]
   3838c:	bcs	383b0 <flatcc_builder_offset_vector_push@@Base+0x74>
   38390:	ldr	r3, [r0, #16]
   38394:	adds	r0, r3, r5
   38398:	strne	r6, [r3, r5]
   3839c:	add	sp, sp, #12
   383a0:	ldrd	r4, [sp]
   383a4:	ldrd	r6, [sp, #8]
   383a8:	add	sp, sp, #16
   383ac:	pop	{pc}		; (ldr pc, [sp], #4)
   383b0:	ldr	r2, [r4, #28]
   383b4:	mov	r0, #1
   383b8:	add	r1, r4, #60	; 0x3c
   383bc:	mov	r3, r0
   383c0:	str	r0, [sp]
   383c4:	ldr	r0, [r4, #40]	; 0x28
   383c8:	add	r2, r5, r2
   383cc:	ldr	r7, [r4, #48]	; 0x30
   383d0:	add	r2, r2, #5
   383d4:	blx	r7
   383d8:	cmp	r0, #0
   383dc:	bne	38414 <flatcc_builder_offset_vector_push@@Base+0xd8>
   383e0:	ldr	r1, [r4, #28]
   383e4:	ldr	r3, [r4, #60]	; 0x3c
   383e8:	ldr	r2, [r4, #64]	; 0x40
   383ec:	add	r3, r3, r1
   383f0:	sub	r2, r2, r1
   383f4:	mvn	r1, #3
   383f8:	str	r3, [r4, #16]
   383fc:	cmn	r2, #4
   38400:	mvnhi	r2, #3
   38404:	str	r2, [r4, #24]
   38408:	ldr	r2, [r4, #32]
   3840c:	str	r1, [r2, #4]
   38410:	b	38394 <flatcc_builder_offset_vector_push@@Base+0x58>
   38414:	mov	r0, #0
   38418:	b	3839c <flatcc_builder_offset_vector_push@@Base+0x60>
   3841c:	movw	r1, #45220	; 0xb0a4
   38420:	movt	r1, #5
   38424:	ldr	r3, [pc, #12]	; 38438 <flatcc_builder_offset_vector_push@@Base+0xfc>
   38428:	movw	r0, #45692	; 0xb27c
   3842c:	movt	r0, #5
   38430:	movw	r2, #934	; 0x3a6
   38434:	bl	14120 <__assert_fail@plt>
   38438:	andeq	sl, r5, r0, lsl sp

0003843c <flatcc_builder_append_offset_vector@@Base>:
   3843c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   38440:	mov	r5, r0
   38444:	ldr	r0, [r0, #32]
   38448:	ldrh	r3, [r0, #14]
   3844c:	strd	r6, [sp, #8]
   38450:	strd	r8, [sp, #16]
   38454:	str	lr, [sp, #24]
   38458:	sub	sp, sp, #12
   3845c:	cmp	r3, #5
   38460:	bne	38558 <flatcc_builder_append_offset_vector@@Base+0x11c>
   38464:	ldr	r3, [r0, #20]
   38468:	mov	r7, r1
   3846c:	adds	r1, r2, r3
   38470:	movcs	r4, #1
   38474:	movcc	r4, #0
   38478:	cmn	r1, #-1073741823	; 0xc0000001
   3847c:	movls	r3, #0
   38480:	movhi	r3, #1
   38484:	orrs	r4, r4, r3
   38488:	bne	38554 <flatcc_builder_append_offset_vector@@Base+0x118>
   3848c:	ldr	r8, [r5, #20]
   38490:	lsl	r6, r2, #2
   38494:	ldr	r3, [r5, #24]
   38498:	str	r1, [r0, #20]
   3849c:	add	ip, r6, r8
   384a0:	cmp	ip, r3
   384a4:	str	ip, [r5, #20]
   384a8:	bcs	384e8 <flatcc_builder_append_offset_vector@@Base+0xac>
   384ac:	ldr	r3, [r5, #16]
   384b0:	adds	r3, r3, r8
   384b4:	beq	384cc <flatcc_builder_append_offset_vector@@Base+0x90>
   384b8:	mov	r0, r3
   384bc:	mov	r2, r6
   384c0:	mov	r1, r7
   384c4:	bl	13fb8 <memcpy@plt>
   384c8:	mov	r3, r0
   384cc:	mov	r0, r3
   384d0:	add	sp, sp, #12
   384d4:	ldrd	r4, [sp]
   384d8:	ldrd	r6, [sp, #8]
   384dc:	ldrd	r8, [sp, #16]
   384e0:	add	sp, sp, #24
   384e4:	pop	{pc}		; (ldr pc, [sp], #4)
   384e8:	ldr	r2, [r5, #28]
   384ec:	mov	r0, #1
   384f0:	add	r1, r5, #60	; 0x3c
   384f4:	mov	r3, r0
   384f8:	str	r0, [sp]
   384fc:	ldr	r9, [r5, #48]	; 0x30
   38500:	add	r2, r2, r0
   38504:	ldr	r0, [r5, #40]	; 0x28
   38508:	add	r2, r2, ip
   3850c:	blx	r9
   38510:	cmp	r0, #0
   38514:	bne	3854c <flatcc_builder_append_offset_vector@@Base+0x110>
   38518:	ldr	r1, [r5, #28]
   3851c:	ldr	r3, [r5, #60]	; 0x3c
   38520:	ldr	r2, [r5, #64]	; 0x40
   38524:	add	r3, r3, r1
   38528:	sub	r2, r2, r1
   3852c:	mvn	r1, #3
   38530:	str	r3, [r5, #16]
   38534:	cmn	r2, #4
   38538:	mvnhi	r2, #3
   3853c:	str	r2, [r5, #24]
   38540:	ldr	r2, [r5, #32]
   38544:	str	r1, [r2, #4]
   38548:	b	384b0 <flatcc_builder_append_offset_vector@@Base+0x74>
   3854c:	mov	r3, r4
   38550:	b	384cc <flatcc_builder_append_offset_vector@@Base+0x90>
   38554:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   38558:	movw	r1, #45220	; 0xb0a4
   3855c:	movt	r1, #5
   38560:	ldr	r3, [pc, #12]	; 38574 <flatcc_builder_append_offset_vector@@Base+0x138>
   38564:	movw	r0, #45692	; 0xb27c
   38568:	movt	r0, #5
   3856c:	mov	r2, #948	; 0x3b4
   38570:	bl	14120 <__assert_fail@plt>
   38574:	andeq	sl, r5, r4, lsr sp

00038578 <flatcc_builder_extend_string@@Base>:
   38578:	ldr	r2, [r0, #32]
   3857c:	strd	r4, [sp, #-16]!
   38580:	ldrh	r3, [r2, #14]
   38584:	str	r6, [sp, #8]
   38588:	str	lr, [sp, #12]
   3858c:	sub	sp, sp, #8
   38590:	cmp	r3, #6
   38594:	bne	38650 <flatcc_builder_extend_string@@Base+0xd8>
   38598:	ldr	r3, [r2, #20]
   3859c:	adds	r3, r1, r3
   385a0:	bcs	3864c <flatcc_builder_extend_string@@Base+0xd4>
   385a4:	ldr	r5, [r0, #20]
   385a8:	mov	r4, r0
   385ac:	str	r3, [r2, #20]
   385b0:	ldr	r3, [r0, #24]
   385b4:	add	r2, r1, r5
   385b8:	cmp	r2, r3
   385bc:	str	r2, [r0, #20]
   385c0:	bcs	385e0 <flatcc_builder_extend_string@@Base+0x68>
   385c4:	ldr	r0, [r0, #16]
   385c8:	add	r0, r0, r5
   385cc:	add	sp, sp, #8
   385d0:	ldrd	r4, [sp]
   385d4:	ldr	r6, [sp, #8]
   385d8:	add	sp, sp, #12
   385dc:	pop	{pc}		; (ldr pc, [sp], #4)
   385e0:	ldr	ip, [r4, #28]
   385e4:	mov	r0, #1
   385e8:	add	r1, r4, #60	; 0x3c
   385ec:	mov	r3, r0
   385f0:	str	r0, [sp]
   385f4:	ldr	r6, [r4, #48]	; 0x30
   385f8:	add	ip, ip, r0
   385fc:	ldr	r0, [r4, #40]	; 0x28
   38600:	add	r2, ip, r2
   38604:	blx	r6
   38608:	cmp	r0, #0
   3860c:	bne	38644 <flatcc_builder_extend_string@@Base+0xcc>
   38610:	ldr	r2, [r4, #28]
   38614:	ldr	r0, [r4, #60]	; 0x3c
   38618:	ldr	r3, [r4, #64]	; 0x40
   3861c:	add	r0, r0, r2
   38620:	sub	r3, r3, r2
   38624:	mvn	r2, #3
   38628:	str	r0, [r4, #16]
   3862c:	cmn	r3, #4
   38630:	mvnhi	r3, #3
   38634:	str	r3, [r4, #24]
   38638:	ldr	r3, [r4, #32]
   3863c:	str	r2, [r3, #4]
   38640:	b	385c8 <flatcc_builder_extend_string@@Base+0x50>
   38644:	mov	r0, #0
   38648:	b	385cc <flatcc_builder_extend_string@@Base+0x54>
   3864c:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   38650:	movw	r1, #45220	; 0xb0a4
   38654:	movt	r1, #5
   38658:	ldr	r3, [pc, #12]	; 3866c <flatcc_builder_extend_string@@Base+0xf4>
   3865c:	movw	r0, #45348	; 0xb124
   38660:	movt	r0, #5
   38664:	movw	r2, #957	; 0x3bd
   38668:	bl	14120 <__assert_fail@plt>
   3866c:	andeq	sl, r5, r8, asr sp

00038670 <flatcc_builder_append_string@@Base>:
   38670:	strd	r4, [sp, #-24]!	; 0xffffffe8
   38674:	strd	r6, [sp, #8]
   38678:	mov	r6, r1
   3867c:	ldr	r1, [r0, #32]
   38680:	str	r8, [sp, #16]
   38684:	str	lr, [sp, #20]
   38688:	sub	sp, sp, #8
   3868c:	ldrh	r3, [r1, #14]
   38690:	cmp	r3, #6
   38694:	bne	38774 <flatcc_builder_append_string@@Base+0x104>
   38698:	ldr	r3, [r1, #20]
   3869c:	mov	r5, r2
   386a0:	adds	r3, r2, r3
   386a4:	bcs	38770 <flatcc_builder_append_string@@Base+0x100>
   386a8:	ldr	r7, [r0, #20]
   386ac:	mov	r4, r0
   386b0:	str	r3, [r1, #20]
   386b4:	ldr	r3, [r0, #24]
   386b8:	add	ip, r2, r7
   386bc:	cmp	ip, r3
   386c0:	str	ip, [r0, #20]
   386c4:	bcs	38704 <flatcc_builder_append_string@@Base+0x94>
   386c8:	ldr	r3, [r0, #16]
   386cc:	adds	r3, r3, r7
   386d0:	beq	386e8 <flatcc_builder_append_string@@Base+0x78>
   386d4:	mov	r0, r3
   386d8:	mov	r2, r5
   386dc:	mov	r1, r6
   386e0:	bl	13fb8 <memcpy@plt>
   386e4:	mov	r3, r0
   386e8:	mov	r0, r3
   386ec:	add	sp, sp, #8
   386f0:	ldrd	r4, [sp]
   386f4:	ldrd	r6, [sp, #8]
   386f8:	ldr	r8, [sp, #16]
   386fc:	add	sp, sp, #20
   38700:	pop	{pc}		; (ldr pc, [sp], #4)
   38704:	ldr	r2, [r4, #28]
   38708:	mov	r0, #1
   3870c:	add	r1, r4, #60	; 0x3c
   38710:	mov	r3, r0
   38714:	str	r0, [sp]
   38718:	ldr	r8, [r4, #48]	; 0x30
   3871c:	add	r2, r2, r0
   38720:	ldr	r0, [r4, #40]	; 0x28
   38724:	add	r2, r2, ip
   38728:	blx	r8
   3872c:	cmp	r0, #0
   38730:	bne	38768 <flatcc_builder_append_string@@Base+0xf8>
   38734:	ldr	r1, [r4, #28]
   38738:	ldr	r3, [r4, #60]	; 0x3c
   3873c:	ldr	r2, [r4, #64]	; 0x40
   38740:	add	r3, r3, r1
   38744:	sub	r2, r2, r1
   38748:	mvn	r1, #3
   3874c:	str	r3, [r4, #16]
   38750:	cmn	r2, #4
   38754:	mvnhi	r2, #3
   38758:	str	r2, [r4, #24]
   3875c:	ldr	r2, [r4, #32]
   38760:	str	r1, [r2, #4]
   38764:	b	386cc <flatcc_builder_append_string@@Base+0x5c>
   38768:	mov	r3, #0
   3876c:	b	386e8 <flatcc_builder_append_string@@Base+0x78>
   38770:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   38774:	bl	36960 <flatcc_builder_default_alloc@@Base+0x214>

00038778 <flatcc_builder_append_string_str@@Base>:
   38778:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3877c:	mov	r4, r0
   38780:	mov	r0, r1
   38784:	strd	r6, [sp, #8]
   38788:	mov	r6, r1
   3878c:	str	r8, [sp, #16]
   38790:	str	lr, [sp, #20]
   38794:	sub	sp, sp, #8
   38798:	bl	14054 <strlen@plt>
   3879c:	ldr	r2, [r4, #32]
   387a0:	ldrh	r3, [r2, #14]
   387a4:	cmp	r3, #6
   387a8:	bne	38884 <flatcc_builder_append_string_str@@Base+0x10c>
   387ac:	ldr	r3, [r2, #20]
   387b0:	mov	r5, r0
   387b4:	adds	r3, r0, r3
   387b8:	bcs	38880 <flatcc_builder_append_string_str@@Base+0x108>
   387bc:	ldr	r7, [r4, #20]
   387c0:	str	r3, [r2, #20]
   387c4:	ldr	r3, [r4, #24]
   387c8:	add	ip, r0, r7
   387cc:	cmp	ip, r3
   387d0:	str	ip, [r4, #20]
   387d4:	bcs	38814 <flatcc_builder_append_string_str@@Base+0x9c>
   387d8:	ldr	r3, [r4, #16]
   387dc:	adds	r3, r3, r7
   387e0:	beq	387f8 <flatcc_builder_append_string_str@@Base+0x80>
   387e4:	mov	r0, r3
   387e8:	mov	r2, r5
   387ec:	mov	r1, r6
   387f0:	bl	13fb8 <memcpy@plt>
   387f4:	mov	r3, r0
   387f8:	mov	r0, r3
   387fc:	add	sp, sp, #8
   38800:	ldrd	r4, [sp]
   38804:	ldrd	r6, [sp, #8]
   38808:	ldr	r8, [sp, #16]
   3880c:	add	sp, sp, #20
   38810:	pop	{pc}		; (ldr pc, [sp], #4)
   38814:	ldr	r2, [r4, #28]
   38818:	mov	r0, #1
   3881c:	add	r1, r4, #60	; 0x3c
   38820:	mov	r3, r0
   38824:	str	r0, [sp]
   38828:	ldr	r8, [r4, #48]	; 0x30
   3882c:	add	r2, r2, r0
   38830:	ldr	r0, [r4, #40]	; 0x28
   38834:	add	r2, r2, ip
   38838:	blx	r8
   3883c:	cmp	r0, #0
   38840:	bne	38878 <flatcc_builder_append_string_str@@Base+0x100>
   38844:	ldr	r1, [r4, #28]
   38848:	ldr	r3, [r4, #60]	; 0x3c
   3884c:	ldr	r2, [r4, #64]	; 0x40
   38850:	add	r3, r3, r1
   38854:	sub	r2, r2, r1
   38858:	mvn	r1, #3
   3885c:	str	r3, [r4, #16]
   38860:	cmn	r2, #4
   38864:	mvnhi	r2, #3
   38868:	str	r2, [r4, #24]
   3886c:	ldr	r2, [r4, #32]
   38870:	str	r1, [r2, #4]
   38874:	b	387dc <flatcc_builder_append_string_str@@Base+0x64>
   38878:	mov	r3, #0
   3887c:	b	387f8 <flatcc_builder_append_string_str@@Base+0x80>
   38880:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   38884:	bl	36960 <flatcc_builder_default_alloc@@Base+0x214>

00038888 <flatcc_builder_append_string_strn@@Base>:
   38888:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3888c:	mov	r4, r0
   38890:	mov	r5, r2
   38894:	strd	r6, [sp, #8]
   38898:	mov	r6, r1
   3889c:	mov	r1, #0
   388a0:	mov	r0, r6
   388a4:	str	r8, [sp, #16]
   388a8:	str	lr, [sp, #20]
   388ac:	sub	sp, sp, #8
   388b0:	bl	140a8 <memchr@plt>
   388b4:	ldr	r2, [r4, #32]
   388b8:	cmp	r0, #0
   388bc:	subne	r5, r0, r6
   388c0:	ldrh	r3, [r2, #14]
   388c4:	cmp	r3, #6
   388c8:	bne	389a0 <flatcc_builder_append_string_strn@@Base+0x118>
   388cc:	ldr	r3, [r2, #20]
   388d0:	adds	r3, r5, r3
   388d4:	bcs	3899c <flatcc_builder_append_string_strn@@Base+0x114>
   388d8:	ldr	r7, [r4, #20]
   388dc:	str	r3, [r2, #20]
   388e0:	ldr	r3, [r4, #24]
   388e4:	add	ip, r5, r7
   388e8:	cmp	ip, r3
   388ec:	str	ip, [r4, #20]
   388f0:	bcs	38930 <flatcc_builder_append_string_strn@@Base+0xa8>
   388f4:	ldr	r3, [r4, #16]
   388f8:	adds	r3, r3, r7
   388fc:	beq	38914 <flatcc_builder_append_string_strn@@Base+0x8c>
   38900:	mov	r0, r3
   38904:	mov	r2, r5
   38908:	mov	r1, r6
   3890c:	bl	13fb8 <memcpy@plt>
   38910:	mov	r3, r0
   38914:	mov	r0, r3
   38918:	add	sp, sp, #8
   3891c:	ldrd	r4, [sp]
   38920:	ldrd	r6, [sp, #8]
   38924:	ldr	r8, [sp, #16]
   38928:	add	sp, sp, #20
   3892c:	pop	{pc}		; (ldr pc, [sp], #4)
   38930:	ldr	r2, [r4, #28]
   38934:	mov	r0, #1
   38938:	add	r1, r4, #60	; 0x3c
   3893c:	mov	r3, r0
   38940:	str	r0, [sp]
   38944:	ldr	r8, [r4, #48]	; 0x30
   38948:	add	r2, r2, r0
   3894c:	ldr	r0, [r4, #40]	; 0x28
   38950:	add	r2, r2, ip
   38954:	blx	r8
   38958:	cmp	r0, #0
   3895c:	bne	38994 <flatcc_builder_append_string_strn@@Base+0x10c>
   38960:	ldr	r1, [r4, #28]
   38964:	ldr	r3, [r4, #60]	; 0x3c
   38968:	ldr	r2, [r4, #64]	; 0x40
   3896c:	add	r3, r3, r1
   38970:	sub	r2, r2, r1
   38974:	mvn	r1, #3
   38978:	str	r3, [r4, #16]
   3897c:	cmn	r2, #4
   38980:	mvnhi	r2, #3
   38984:	str	r2, [r4, #24]
   38988:	ldr	r2, [r4, #32]
   3898c:	str	r1, [r2, #4]
   38990:	b	388f8 <flatcc_builder_append_string_strn@@Base+0x70>
   38994:	mov	r3, #0
   38998:	b	38914 <flatcc_builder_append_string_strn@@Base+0x8c>
   3899c:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   389a0:	bl	36960 <flatcc_builder_default_alloc@@Base+0x214>

000389a4 <flatcc_builder_truncate_vector@@Base>:
   389a4:	mov	r3, r0
   389a8:	ldr	r0, [r0, #32]
   389ac:	str	r4, [sp, #-8]!
   389b0:	ldrh	r2, [r0, #14]
   389b4:	str	lr, [sp, #4]
   389b8:	cmp	r2, #4
   389bc:	bne	38a0c <flatcc_builder_truncate_vector@@Base+0x68>
   389c0:	mov	lr, r1
   389c4:	ldr	r1, [r0, #20]
   389c8:	cmp	r1, lr
   389cc:	bcc	38a28 <flatcc_builder_truncate_vector@@Base+0x84>
   389d0:	ldr	r2, [r0, #16]
   389d4:	sub	ip, r1, lr
   389d8:	mov	r1, #0
   389dc:	str	ip, [r0, #20]
   389e0:	ldr	r0, [r3, #16]
   389e4:	ldr	ip, [r3, #20]
   389e8:	mul	r2, r2, lr
   389ec:	sub	ip, ip, r2
   389f0:	add	r0, r0, ip
   389f4:	str	ip, [r3, #20]
   389f8:	bl	14084 <memset@plt>
   389fc:	ldr	r4, [sp]
   38a00:	add	sp, sp, #4
   38a04:	mov	r0, #0
   38a08:	pop	{pc}		; (ldr pc, [sp], #4)
   38a0c:	movw	r1, #45220	; 0xb0a4
   38a10:	movt	r1, #5
   38a14:	ldr	r3, [pc, #40]	; 38a44 <flatcc_builder_truncate_vector@@Base+0xa0>
   38a18:	movw	r0, #45584	; 0xb210
   38a1c:	movt	r0, #5
   38a20:	movw	r2, #985	; 0x3d9
   38a24:	bl	14120 <__assert_fail@plt>
   38a28:	movw	r1, #45220	; 0xb0a4
   38a2c:	movt	r1, #5
   38a30:	ldr	r3, [pc, #12]	; 38a44 <flatcc_builder_truncate_vector@@Base+0xa0>
   38a34:	movw	r0, #45744	; 0xb2b0
   38a38:	movt	r0, #5
   38a3c:	movw	r2, #986	; 0x3da
   38a40:	bl	14120 <__assert_fail@plt>
   38a44:	andeq	sl, r5, r8, ror sp

00038a48 <flatcc_builder_truncate_offset_vector@@Base>:
   38a48:	mov	r3, r0
   38a4c:	ldr	r0, [r0, #32]
   38a50:	str	r4, [sp, #-8]!
   38a54:	ldrh	r2, [r0, #14]
   38a58:	str	lr, [sp, #4]
   38a5c:	cmp	r2, #5
   38a60:	bne	38ab0 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   38a64:	mov	lr, r1
   38a68:	ldr	r1, [r0, #20]
   38a6c:	cmp	r1, lr
   38a70:	bcc	38acc <flatcc_builder_truncate_offset_vector@@Base+0x84>
   38a74:	ldr	r2, [r0, #16]
   38a78:	sub	ip, r1, lr
   38a7c:	mov	r1, #0
   38a80:	str	ip, [r0, #20]
   38a84:	ldr	r0, [r3, #16]
   38a88:	ldr	ip, [r3, #20]
   38a8c:	mul	r2, r2, lr
   38a90:	sub	ip, ip, r2
   38a94:	add	r0, r0, ip
   38a98:	str	ip, [r3, #20]
   38a9c:	bl	14084 <memset@plt>
   38aa0:	ldr	r4, [sp]
   38aa4:	add	sp, sp, #4
   38aa8:	mov	r0, #0
   38aac:	pop	{pc}		; (ldr pc, [sp], #4)
   38ab0:	movw	r1, #45220	; 0xb0a4
   38ab4:	movt	r1, #5
   38ab8:	ldr	r3, [pc, #40]	; 38ae8 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   38abc:	movw	r0, #45692	; 0xb27c
   38ac0:	movt	r0, #5
   38ac4:	movw	r2, #994	; 0x3e2
   38ac8:	bl	14120 <__assert_fail@plt>
   38acc:	movw	r1, #45220	; 0xb0a4
   38ad0:	movt	r1, #5
   38ad4:	ldr	r3, [pc, #12]	; 38ae8 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   38ad8:	movw	r0, #45780	; 0xb2d4
   38adc:	movt	r0, #5
   38ae0:	movw	r2, #995	; 0x3e3
   38ae4:	bl	14120 <__assert_fail@plt>
   38ae8:	muleq	r5, r8, sp

00038aec <flatcc_builder_truncate_string@@Base>:
   38aec:	str	r4, [sp, #-8]!
   38af0:	str	lr, [sp, #4]
   38af4:	ldr	lr, [r0, #32]
   38af8:	ldrh	r2, [lr, #14]
   38afc:	cmp	r2, #6
   38b00:	bne	38b50 <flatcc_builder_truncate_string@@Base+0x64>
   38b04:	ldr	r2, [lr, #20]
   38b08:	mov	ip, r1
   38b0c:	cmp	r2, r1
   38b10:	bcc	38b6c <flatcc_builder_truncate_string@@Base+0x80>
   38b14:	sub	r1, r2, r1
   38b18:	mov	r3, r0
   38b1c:	ldr	r0, [r0, #16]
   38b20:	mov	r2, ip
   38b24:	str	r1, [lr, #20]
   38b28:	mov	r1, #0
   38b2c:	ldr	lr, [r3, #20]
   38b30:	sub	ip, lr, ip
   38b34:	add	r0, r0, ip
   38b38:	str	ip, [r3, #20]
   38b3c:	bl	14084 <memset@plt>
   38b40:	ldr	r4, [sp]
   38b44:	add	sp, sp, #4
   38b48:	mov	r0, #0
   38b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   38b50:	movw	r1, #45220	; 0xb0a4
   38b54:	movt	r1, #5
   38b58:	ldr	r3, [pc, #40]	; 38b88 <flatcc_builder_truncate_string@@Base+0x9c>
   38b5c:	movw	r0, #45348	; 0xb124
   38b60:	movt	r0, #5
   38b64:	movw	r2, #1003	; 0x3eb
   38b68:	bl	14120 <__assert_fail@plt>
   38b6c:	movw	r1, #45220	; 0xb0a4
   38b70:	movt	r1, #5
   38b74:	ldr	r3, [pc, #12]	; 38b88 <flatcc_builder_truncate_string@@Base+0x9c>
   38b78:	movw	r0, #45840	; 0xb310
   38b7c:	movt	r0, #5
   38b80:	mov	r2, #1004	; 0x3ec
   38b84:	bl	14120 <__assert_fail@plt>
   38b88:	andeq	sl, r5, r0, asr #27

00038b8c <flatcc_builder_start_vector@@Base>:
   38b8c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   38b90:	mov	r4, r0
   38b94:	mov	r5, r3
   38b98:	ldr	r0, [r0, #156]	; 0x9c
   38b9c:	cmp	r2, #4
   38ba0:	ldr	r3, [r4, #160]	; 0xa0
   38ba4:	strd	r6, [sp, #8]
   38ba8:	movcs	r7, r2
   38bac:	movcc	r7, #4
   38bb0:	mov	r6, r1
   38bb4:	strd	r8, [sp, #16]
   38bb8:	add	r2, r0, #1
   38bbc:	str	lr, [sp, #24]
   38bc0:	sub	sp, sp, #12
   38bc4:	cmp	r2, r3
   38bc8:	str	r2, [r4, #156]	; 0x9c
   38bcc:	ble	38ce8 <flatcc_builder_start_vector@@Base+0x15c>
   38bd0:	ldr	r3, [r4, #176]	; 0xb0
   38bd4:	cmp	r3, #0
   38bd8:	cmpgt	r2, r3
   38bdc:	movgt	r3, #1
   38be0:	movle	r3, #0
   38be4:	bgt	38cf8 <flatcc_builder_start_vector@@Base+0x16c>
   38be8:	add	r0, r0, r0, lsl #3
   38bec:	ldr	r1, [r4, #88]	; 0x58
   38bf0:	lsl	r8, r0, #2
   38bf4:	add	r2, r8, #36	; 0x24
   38bf8:	cmp	r2, r1
   38bfc:	bls	38c20 <flatcc_builder_start_vector@@Base+0x94>
   38c00:	mov	ip, #4
   38c04:	add	r1, r4, #84	; 0x54
   38c08:	ldr	r0, [r4, #40]	; 0x28
   38c0c:	str	ip, [sp]
   38c10:	ldr	r9, [r4, #48]	; 0x30
   38c14:	blx	r9
   38c18:	cmp	r0, #0
   38c1c:	bne	38d00 <flatcc_builder_start_vector@@Base+0x174>
   38c20:	ldr	r3, [r4, #84]	; 0x54
   38c24:	add	r3, r3, r8
   38c28:	cmp	r3, #0
   38c2c:	str	r3, [r4, #32]
   38c30:	beq	38cf8 <flatcc_builder_start_vector@@Base+0x16c>
   38c34:	ldr	r2, [r4, #88]	; 0x58
   38c38:	movw	r0, #36409	; 0x8e39
   38c3c:	movt	r0, #14563	; 0x38e3
   38c40:	ldr	r1, [r4, #176]	; 0xb0
   38c44:	umull	r0, r2, r0, r2
   38c48:	lsr	r2, r2, #3
   38c4c:	cmp	r1, #0
   38c50:	cmpgt	r2, r1
   38c54:	movgt	r2, r1
   38c58:	str	r2, [r4, #160]	; 0xa0
   38c5c:	ldr	r2, [r4, #20]
   38c60:	mvn	r9, #3
   38c64:	mov	ip, #0
   38c68:	ldr	r0, [r4, #28]
   38c6c:	ldrh	lr, [r4, #130]	; 0x82
   38c70:	ldr	r1, [r4, #64]	; 0x40
   38c74:	ldr	r8, [r4, #60]	; 0x3c
   38c78:	str	r2, [r3, #8]
   38c7c:	add	r2, r2, r0
   38c80:	add	r2, r2, #7
   38c84:	strh	lr, [r3, #12]
   38c88:	bic	r2, r2, #7
   38c8c:	strh	r7, [r4, #130]	; 0x82
   38c90:	mov	r7, #4
   38c94:	sub	r1, r1, r2
   38c98:	str	r0, [r3]
   38c9c:	mov	r0, ip
   38ca0:	cmp	r1, r9
   38ca4:	add	lr, r8, r2
   38ca8:	str	ip, [r4, #20]
   38cac:	movhi	r1, r9
   38cb0:	str	r2, [r4, #28]
   38cb4:	strh	r7, [r3, #14]
   38cb8:	str	r6, [r3, #16]
   38cbc:	str	ip, [r3, #20]
   38cc0:	str	r5, [r3, #24]
   38cc4:	str	lr, [r4, #16]
   38cc8:	str	r1, [r4, #24]
   38ccc:	str	r9, [r3, #4]
   38cd0:	add	sp, sp, #12
   38cd4:	ldrd	r4, [sp]
   38cd8:	ldrd	r6, [sp, #8]
   38cdc:	ldrd	r8, [sp, #16]
   38ce0:	add	sp, sp, #24
   38ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   38ce8:	ldr	r3, [r4, #32]
   38cec:	add	r3, r3, #36	; 0x24
   38cf0:	str	r3, [r4, #32]
   38cf4:	b	38c5c <flatcc_builder_start_vector@@Base+0xd0>
   38cf8:	mvn	r0, #0
   38cfc:	b	38cd0 <flatcc_builder_start_vector@@Base+0x144>
   38d00:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

00038d04 <flatcc_builder_start_offset_vector@@Base>:
   38d04:	ldrd	r2, [r0, #156]	; 0x9c
   38d08:	strd	r4, [sp, #-16]!
   38d0c:	mov	r4, r0
   38d10:	str	r6, [sp, #8]
   38d14:	str	lr, [sp, #12]
   38d18:	sub	sp, sp, #8
   38d1c:	add	r1, r2, #1
   38d20:	cmp	r1, r3
   38d24:	str	r1, [r0, #156]	; 0x9c
   38d28:	ble	38e40 <flatcc_builder_start_offset_vector@@Base+0x13c>
   38d2c:	ldr	r3, [r0, #176]	; 0xb0
   38d30:	cmp	r3, #0
   38d34:	cmpgt	r1, r3
   38d38:	movgt	r3, #1
   38d3c:	movle	r3, #0
   38d40:	bgt	38e50 <flatcc_builder_start_offset_vector@@Base+0x14c>
   38d44:	add	r2, r2, r2, lsl #3
   38d48:	ldr	r1, [r0, #88]	; 0x58
   38d4c:	lsl	r5, r2, #2
   38d50:	add	r2, r5, #36	; 0x24
   38d54:	cmp	r2, r1
   38d58:	bls	38d7c <flatcc_builder_start_offset_vector@@Base+0x78>
   38d5c:	mov	ip, #4
   38d60:	add	r1, r0, #84	; 0x54
   38d64:	ldr	r0, [r0, #40]	; 0x28
   38d68:	str	ip, [sp]
   38d6c:	ldr	r6, [r4, #48]	; 0x30
   38d70:	blx	r6
   38d74:	cmp	r0, #0
   38d78:	bne	38e58 <flatcc_builder_start_offset_vector@@Base+0x154>
   38d7c:	ldr	r3, [r4, #84]	; 0x54
   38d80:	add	r3, r3, r5
   38d84:	cmp	r3, #0
   38d88:	str	r3, [r4, #32]
   38d8c:	beq	38e50 <flatcc_builder_start_offset_vector@@Base+0x14c>
   38d90:	ldr	r2, [r4, #88]	; 0x58
   38d94:	movw	r0, #36409	; 0x8e39
   38d98:	movt	r0, #14563	; 0x38e3
   38d9c:	ldr	r1, [r4, #176]	; 0xb0
   38da0:	umull	r0, r2, r0, r2
   38da4:	lsr	r2, r2, #3
   38da8:	cmp	r1, #0
   38dac:	cmpgt	r2, r1
   38db0:	movgt	r2, r1
   38db4:	str	r2, [r4, #160]	; 0xa0
   38db8:	ldr	r2, [r4, #20]
   38dbc:	mvn	r5, #3
   38dc0:	mov	lr, #0
   38dc4:	ldr	r0, [r4, #28]
   38dc8:	ldrh	r6, [r4, #130]	; 0x82
   38dcc:	ldr	ip, [r4, #60]	; 0x3c
   38dd0:	ldr	r1, [r4, #64]	; 0x40
   38dd4:	str	r2, [r3, #8]
   38dd8:	add	r2, r2, r0
   38ddc:	add	r2, r2, #7
   38de0:	strh	r6, [r3, #12]
   38de4:	mov	r6, #4
   38de8:	bic	r2, r2, #7
   38dec:	add	ip, ip, r2
   38df0:	strh	r6, [r4, #130]	; 0x82
   38df4:	sub	r1, r1, r2
   38df8:	str	r0, [r3]
   38dfc:	mov	r0, lr
   38e00:	cmp	r1, r5
   38e04:	str	lr, [r4, #20]
   38e08:	movhi	r1, r5
   38e0c:	str	r2, [r4, #28]
   38e10:	mov	r2, #5
   38e14:	strh	r2, [r3, #14]
   38e18:	str	r6, [r3, #16]
   38e1c:	str	lr, [r3, #20]
   38e20:	str	ip, [r4, #16]
   38e24:	str	r1, [r4, #24]
   38e28:	str	r5, [r3, #4]
   38e2c:	add	sp, sp, #8
   38e30:	ldrd	r4, [sp]
   38e34:	ldr	r6, [sp, #8]
   38e38:	add	sp, sp, #12
   38e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   38e40:	ldr	r3, [r0, #32]
   38e44:	add	r3, r3, #36	; 0x24
   38e48:	str	r3, [r0, #32]
   38e4c:	b	38db8 <flatcc_builder_start_offset_vector@@Base+0xb4>
   38e50:	mvn	r0, #0
   38e54:	b	38e2c <flatcc_builder_start_offset_vector@@Base+0x128>
   38e58:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

00038e5c <flatcc_builder_create_offset_vector@@Base>:
   38e5c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   38e60:	mov	r5, r2
   38e64:	mov	r4, r0
   38e68:	ldr	r3, [r0, #160]	; 0xa0
   38e6c:	strd	r6, [sp, #8]
   38e70:	mov	r6, r1
   38e74:	ldr	r1, [r0, #156]	; 0x9c
   38e78:	strd	r8, [sp, #16]
   38e7c:	str	lr, [sp, #24]
   38e80:	sub	sp, sp, #12
   38e84:	add	r2, r1, #1
   38e88:	cmp	r2, r3
   38e8c:	str	r2, [r0, #156]	; 0x9c
   38e90:	ble	39008 <flatcc_builder_create_offset_vector@@Base+0x1ac>
   38e94:	ldr	r3, [r0, #176]	; 0xb0
   38e98:	cmp	r2, r3
   38e9c:	cmpgt	r3, #0
   38ea0:	movgt	r3, #1
   38ea4:	movle	r3, #0
   38ea8:	bgt	38fe8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   38eac:	add	r1, r1, r1, lsl #3
   38eb0:	ldr	r0, [r0, #88]	; 0x58
   38eb4:	lsl	r7, r1, #2
   38eb8:	add	r2, r7, #36	; 0x24
   38ebc:	cmp	r2, r0
   38ec0:	bls	38ee4 <flatcc_builder_create_offset_vector@@Base+0x88>
   38ec4:	mov	ip, #4
   38ec8:	add	r1, r4, #84	; 0x54
   38ecc:	ldr	r0, [r4, #40]	; 0x28
   38ed0:	str	ip, [sp]
   38ed4:	ldr	r8, [r4, #48]	; 0x30
   38ed8:	blx	r8
   38edc:	cmp	r0, #0
   38ee0:	bne	390ac <flatcc_builder_create_offset_vector@@Base+0x250>
   38ee4:	ldr	r3, [r4, #84]	; 0x54
   38ee8:	add	r3, r3, r7
   38eec:	cmp	r3, #0
   38ef0:	str	r3, [r4, #32]
   38ef4:	beq	38fe8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   38ef8:	ldr	r2, [r4, #88]	; 0x58
   38efc:	movw	r0, #36409	; 0x8e39
   38f00:	movt	r0, #14563	; 0x38e3
   38f04:	ldr	r1, [r4, #176]	; 0xb0
   38f08:	umull	r0, r2, r0, r2
   38f0c:	lsr	r2, r2, #3
   38f10:	cmp	r2, r1
   38f14:	cmpgt	r1, #0
   38f18:	movgt	r2, r1
   38f1c:	str	r2, [r4, #160]	; 0xa0
   38f20:	ldr	r2, [r4, #20]
   38f24:	mvn	lr, #3
   38f28:	mov	r0, #4
   38f2c:	ldr	r8, [r4, #28]
   38f30:	ldrh	r7, [r4, #130]	; 0x82
   38f34:	ldr	r1, [r4, #64]	; 0x40
   38f38:	ldr	r9, [r4, #60]	; 0x3c
   38f3c:	str	r2, [r3, #8]
   38f40:	add	r2, r2, r8
   38f44:	add	r2, r2, #7
   38f48:	strh	r7, [r3, #12]
   38f4c:	mov	r7, #0
   38f50:	bic	r2, r2, #7
   38f54:	strh	r0, [r4, #130]	; 0x82
   38f58:	sub	r1, r1, r2
   38f5c:	str	r8, [r3]
   38f60:	cmp	r1, lr
   38f64:	add	r9, r9, r2
   38f68:	str	r7, [r4, #20]
   38f6c:	movls	ip, r1
   38f70:	movhi	ip, lr
   38f74:	str	r2, [r4, #28]
   38f78:	mov	r1, #5
   38f7c:	strh	r1, [r3, #14]
   38f80:	mov	r1, r5
   38f84:	str	r0, [r3, #16]
   38f88:	mov	r0, r4
   38f8c:	str	r7, [r3, #20]
   38f90:	str	r9, [r4, #16]
   38f94:	str	ip, [r4, #24]
   38f98:	str	lr, [r3, #4]
   38f9c:	bl	38258 <flatcc_builder_extend_offset_vector@@Base>
   38fa0:	cmp	r0, r7
   38fa4:	beq	38fe8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   38fa8:	lsl	r2, r5, #2
   38fac:	mov	r1, r6
   38fb0:	bl	13fb8 <memcpy@plt>
   38fb4:	ldr	r3, [r4, #32]
   38fb8:	ldrh	r2, [r3, #14]
   38fbc:	cmp	r2, #5
   38fc0:	bne	39090 <flatcc_builder_create_offset_vector@@Base+0x234>
   38fc4:	ldr	r2, [r3, #20]
   38fc8:	cmn	r2, #-1073741823	; 0xc0000001
   38fcc:	bhi	38fe8 <flatcc_builder_create_offset_vector@@Base+0x18c>
   38fd0:	mov	r3, r7
   38fd4:	mov	r0, r4
   38fd8:	ldr	r1, [r4, #16]
   38fdc:	bl	36ad4 <flatcc_builder_default_alloc@@Base+0x388>
   38fe0:	subs	r5, r0, #0
   38fe4:	bne	39018 <flatcc_builder_create_offset_vector@@Base+0x1bc>
   38fe8:	mov	r5, #0
   38fec:	mov	r0, r5
   38ff0:	add	sp, sp, #12
   38ff4:	ldrd	r4, [sp]
   38ff8:	ldrd	r6, [sp, #8]
   38ffc:	ldrd	r8, [sp, #16]
   39000:	add	sp, sp, #24
   39004:	pop	{pc}		; (ldr pc, [sp], #4)
   39008:	ldr	r3, [r0, #32]
   3900c:	add	r3, r3, #36	; 0x24
   39010:	str	r3, [r0, #32]
   39014:	b	38f20 <flatcc_builder_create_offset_vector@@Base+0xc4>
   39018:	mov	r1, r7
   3901c:	ldr	r0, [r4, #16]
   39020:	ldr	r2, [r4, #20]
   39024:	bl	14084 <memset@plt>
   39028:	ldr	r3, [r4, #32]
   3902c:	ldr	r0, [r4, #60]	; 0x3c
   39030:	ldr	r2, [r4, #64]	; 0x40
   39034:	ldr	ip, [r3]
   39038:	ldmib	r3, {r1, lr}
   3903c:	add	r0, r0, ip
   39040:	sub	r2, r2, ip
   39044:	str	r0, [r4, #16]
   39048:	cmp	r2, r1
   3904c:	ldrh	r0, [r4, #128]	; 0x80
   39050:	movcs	r2, r1
   39054:	str	lr, [r4, #20]
   39058:	str	ip, [r4, #28]
   3905c:	ldrh	ip, [r4, #130]	; 0x82
   39060:	str	r2, [r4, #24]
   39064:	ldr	r2, [r4, #156]	; 0x9c
   39068:	str	r1, [r3, #4]
   3906c:	cmp	r0, ip
   39070:	sub	r0, r3, #36	; 0x24
   39074:	strhcc	ip, [r4, #128]	; 0x80
   39078:	ldrh	r1, [r3, #12]
   3907c:	sub	r3, r2, #1
   39080:	str	r0, [r4, #32]
   39084:	strh	r1, [r4, #130]	; 0x82
   39088:	str	r3, [r4, #156]	; 0x9c
   3908c:	b	38fec <flatcc_builder_create_offset_vector@@Base+0x190>
   39090:	movw	r1, #45220	; 0xb0a4
   39094:	movt	r1, #5
   39098:	ldr	r3, [pc, #16]	; 390b0 <flatcc_builder_create_offset_vector@@Base+0x254>
   3909c:	movw	r0, #45692	; 0xb27c
   390a0:	movt	r0, #5
   390a4:	movw	r2, #1480	; 0x5c8
   390a8:	bl	14120 <__assert_fail@plt>
   390ac:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>
   390b0:	andeq	sl, r5, r0, ror #27

000390b4 <flatcc_builder_start_string@@Base>:
   390b4:	ldrd	r2, [r0, #156]	; 0x9c
   390b8:	strd	r4, [sp, #-16]!
   390bc:	mov	r4, r0
   390c0:	str	r6, [sp, #8]
   390c4:	str	lr, [sp, #12]
   390c8:	sub	sp, sp, #8
   390cc:	add	r1, r2, #1
   390d0:	cmp	r1, r3
   390d4:	str	r1, [r0, #156]	; 0x9c
   390d8:	ble	391f0 <flatcc_builder_start_string@@Base+0x13c>
   390dc:	ldr	r3, [r0, #176]	; 0xb0
   390e0:	cmp	r3, #0
   390e4:	cmpgt	r1, r3
   390e8:	movgt	r3, #1
   390ec:	movle	r3, #0
   390f0:	bgt	39200 <flatcc_builder_start_string@@Base+0x14c>
   390f4:	add	r2, r2, r2, lsl #3
   390f8:	ldr	r1, [r0, #88]	; 0x58
   390fc:	lsl	r5, r2, #2
   39100:	add	r2, r5, #36	; 0x24
   39104:	cmp	r2, r1
   39108:	bls	3912c <flatcc_builder_start_string@@Base+0x78>
   3910c:	mov	ip, #4
   39110:	add	r1, r0, #84	; 0x54
   39114:	ldr	r0, [r0, #40]	; 0x28
   39118:	str	ip, [sp]
   3911c:	ldr	r6, [r4, #48]	; 0x30
   39120:	blx	r6
   39124:	cmp	r0, #0
   39128:	bne	39208 <flatcc_builder_start_string@@Base+0x154>
   3912c:	ldr	r3, [r4, #84]	; 0x54
   39130:	add	r3, r3, r5
   39134:	cmp	r3, #0
   39138:	str	r3, [r4, #32]
   3913c:	beq	39200 <flatcc_builder_start_string@@Base+0x14c>
   39140:	ldr	r2, [r4, #88]	; 0x58
   39144:	movw	r0, #36409	; 0x8e39
   39148:	movt	r0, #14563	; 0x38e3
   3914c:	ldr	r1, [r4, #176]	; 0xb0
   39150:	umull	r0, r2, r0, r2
   39154:	lsr	r2, r2, #3
   39158:	cmp	r1, #0
   3915c:	cmpgt	r2, r1
   39160:	movgt	r2, r1
   39164:	str	r2, [r4, #160]	; 0xa0
   39168:	ldr	r2, [r4, #20]
   3916c:	mvn	r5, #3
   39170:	mov	lr, #0
   39174:	ldr	r0, [r4, #28]
   39178:	ldrh	r6, [r4, #130]	; 0x82
   3917c:	ldr	ip, [r4, #60]	; 0x3c
   39180:	ldr	r1, [r4, #64]	; 0x40
   39184:	str	r2, [r3, #8]
   39188:	add	r2, r2, r0
   3918c:	add	r2, r2, #7
   39190:	strh	r6, [r3, #12]
   39194:	mov	r6, #1
   39198:	bic	r2, r2, #7
   3919c:	add	ip, ip, r2
   391a0:	strh	r6, [r4, #130]	; 0x82
   391a4:	sub	r1, r1, r2
   391a8:	str	r0, [r3]
   391ac:	mov	r0, lr
   391b0:	cmp	r1, r5
   391b4:	str	lr, [r4, #20]
   391b8:	movhi	r1, r5
   391bc:	str	r2, [r4, #28]
   391c0:	mov	r2, #6
   391c4:	strh	r2, [r3, #14]
   391c8:	str	r6, [r3, #16]
   391cc:	str	lr, [r3, #20]
   391d0:	str	ip, [r4, #16]
   391d4:	str	r1, [r4, #24]
   391d8:	str	r5, [r3, #4]
   391dc:	add	sp, sp, #8
   391e0:	ldrd	r4, [sp]
   391e4:	ldr	r6, [sp, #8]
   391e8:	add	sp, sp, #12
   391ec:	pop	{pc}		; (ldr pc, [sp], #4)
   391f0:	ldr	r3, [r0, #32]
   391f4:	add	r3, r3, #36	; 0x24
   391f8:	str	r3, [r0, #32]
   391fc:	b	39168 <flatcc_builder_start_string@@Base+0xb4>
   39200:	mvn	r0, #0
   39204:	b	391dc <flatcc_builder_start_string@@Base+0x128>
   39208:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

0003920c <flatcc_builder_reserve_table@@Base>:
   3920c:	cmp	r1, #0
   39210:	strd	r4, [sp, #-20]!	; 0xffffffec
   39214:	strd	r6, [sp, #8]
   39218:	str	lr, [sp, #16]
   3921c:	sub	sp, sp, #12
   39220:	blt	39304 <flatcc_builder_reserve_table@@Base+0xf8>
   39224:	ldr	r2, [r0, #32]
   39228:	add	r1, r1, #2
   3922c:	mov	r4, r0
   39230:	lsl	r5, r1, #1
   39234:	ldr	r1, [r0, #56]	; 0x38
   39238:	ldrh	r6, [r2, #28]
   3923c:	ldr	r3, [r2, #16]
   39240:	add	r6, r3, r6, lsl #1
   39244:	add	r2, r6, r5
   39248:	cmp	r2, r1
   3924c:	bhi	392b4 <flatcc_builder_reserve_table@@Base+0xa8>
   39250:	ldr	r3, [r4, #52]	; 0x34
   39254:	adds	r3, r3, r6
   39258:	mvneq	r0, #0
   3925c:	streq	r3, [r4, #4]
   39260:	beq	392a0 <flatcc_builder_reserve_table@@Base+0x94>
   39264:	ldr	r2, [r4, #32]
   39268:	add	r3, r3, #4
   3926c:	ldr	r1, [r4, #80]	; 0x50
   39270:	ldr	r6, [r2, #20]
   39274:	str	r3, [r4, #4]
   39278:	add	r2, r5, r6
   3927c:	sub	r2, r2, #3
   39280:	cmp	r2, r1
   39284:	bhi	392dc <flatcc_builder_reserve_table@@Base+0xd0>
   39288:	ldr	r3, [r4, #76]	; 0x4c
   3928c:	add	r3, r3, r6
   39290:	clz	r0, r3
   39294:	lsr	r0, r0, #5
   39298:	str	r3, [r4]
   3929c:	rsb	r0, r0, #0
   392a0:	add	sp, sp, #12
   392a4:	ldrd	r4, [sp]
   392a8:	ldrd	r6, [sp, #8]
   392ac:	add	sp, sp, #16
   392b0:	pop	{pc}		; (ldr pc, [sp], #4)
   392b4:	mov	ip, #0
   392b8:	add	r1, r0, #52	; 0x34
   392bc:	ldr	r0, [r0, #40]	; 0x28
   392c0:	mov	r3, #1
   392c4:	str	ip, [sp]
   392c8:	ldr	r7, [r4, #48]	; 0x30
   392cc:	blx	r7
   392d0:	cmp	r0, #0
   392d4:	beq	39250 <flatcc_builder_reserve_table@@Base+0x44>
   392d8:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>
   392dc:	mov	ip, #3
   392e0:	mov	r3, #0
   392e4:	ldr	r0, [r4, #40]	; 0x28
   392e8:	add	r1, r4, #76	; 0x4c
   392ec:	str	ip, [sp]
   392f0:	ldr	r5, [r4, #48]	; 0x30
   392f4:	blx	r5
   392f8:	cmp	r0, #0
   392fc:	beq	39288 <flatcc_builder_reserve_table@@Base+0x7c>
   39300:	b	392d8 <flatcc_builder_reserve_table@@Base+0xcc>
   39304:	movw	r1, #45220	; 0xb0a4
   39308:	movt	r1, #5
   3930c:	ldr	r3, [pc, #12]	; 39320 <flatcc_builder_reserve_table@@Base+0x114>
   39310:	movw	r0, #45876	; 0xb334
   39314:	movt	r0, #5
   39318:	movw	r2, #1065	; 0x429
   3931c:	bl	14120 <__assert_fail@plt>
   39320:	andeq	sl, r5, r4, lsl #28

00039324 <flatcc_builder_start_table@@Base>:
   39324:	strd	r4, [sp, #-32]!	; 0xffffffe0
   39328:	mov	r5, r1
   3932c:	mov	r1, #4
   39330:	strd	r6, [sp, #8]
   39334:	mov	r4, r0
   39338:	strd	r8, [sp, #16]
   3933c:	str	sl, [sp, #24]
   39340:	str	lr, [sp, #28]
   39344:	sub	sp, sp, #8
   39348:	bl	369b0 <flatcc_builder_default_alloc@@Base+0x264>
   3934c:	subs	r7, r0, #0
   39350:	bne	39498 <flatcc_builder_start_table@@Base+0x174>
   39354:	ldm	r4, {r0, r2}
   39358:	add	r5, r5, #2
   3935c:	movw	ip, #15186	; 0x3b52
   39360:	movt	ip, #12137	; 0x2f69
   39364:	lsl	r5, r5, #1
   39368:	mov	r8, #3
   3936c:	ldrh	lr, [r4, #8]
   39370:	ldr	r1, [r4, #52]	; 0x34
   39374:	ldr	sl, [r4, #76]	; 0x4c
   39378:	ldr	r3, [r4, #32]
   3937c:	sub	r2, r2, r1
   39380:	ldr	r9, [r4, #56]	; 0x38
   39384:	add	r6, r2, lr, lsl #1
   39388:	sub	r0, r0, sl
   3938c:	ldr	sl, [r4, #12]
   39390:	str	r2, [r3, #16]
   39394:	add	r2, r6, r5
   39398:	str	r0, [r3, #20]
   3939c:	cmp	r2, r9
   393a0:	str	sl, [r3, #24]
   393a4:	strh	lr, [r3, #28]
   393a8:	strh	r7, [r4, #8]
   393ac:	str	ip, [r4, #12]
   393b0:	strh	r8, [r3, #14]
   393b4:	bls	393dc <flatcc_builder_start_table@@Base+0xb8>
   393b8:	mov	r3, #1
   393bc:	add	r1, r4, #52	; 0x34
   393c0:	str	r7, [sp]
   393c4:	ldr	r0, [r4, #40]	; 0x28
   393c8:	ldr	r8, [r4, #48]	; 0x30
   393cc:	blx	r8
   393d0:	cmp	r0, #0
   393d4:	bne	39494 <flatcc_builder_start_table@@Base+0x170>
   393d8:	ldr	r1, [r4, #52]	; 0x34
   393dc:	adds	r6, r6, r1
   393e0:	streq	r6, [r4, #4]
   393e4:	beq	39498 <flatcc_builder_start_table@@Base+0x174>
   393e8:	ldr	r1, [r4, #32]
   393ec:	sub	r2, r5, #3
   393f0:	add	r6, r6, #4
   393f4:	ldr	r3, [r4, #80]	; 0x50
   393f8:	ldr	r5, [r1, #20]
   393fc:	str	r6, [r4, #4]
   39400:	add	r2, r2, r5
   39404:	cmp	r2, r3
   39408:	bhi	39470 <flatcc_builder_start_table@@Base+0x14c>
   3940c:	ldr	r3, [r4, #76]	; 0x4c
   39410:	add	r3, r3, r5
   39414:	cmp	r3, #0
   39418:	str	r3, [r4]
   3941c:	beq	39498 <flatcc_builder_start_table@@Base+0x174>
   39420:	ldr	r0, [r4, #28]
   39424:	movw	r2, #65532	; 0xfffc
   39428:	ldr	ip, [r4, #32]
   3942c:	ldr	r3, [r4, #64]	; 0x40
   39430:	ldr	r1, [r4, #60]	; 0x3c
   39434:	sub	r3, r3, r0
   39438:	cmp	r3, r2
   3943c:	add	r1, r1, r0
   39440:	movcs	r3, r2
   39444:	str	r1, [r4, #16]
   39448:	str	r3, [r4, #24]
   3944c:	str	r2, [ip, #4]
   39450:	mov	r0, r7
   39454:	add	sp, sp, #8
   39458:	ldrd	r4, [sp]
   3945c:	ldrd	r6, [sp, #8]
   39460:	ldrd	r8, [sp, #16]
   39464:	ldr	sl, [sp, #24]
   39468:	add	sp, sp, #28
   3946c:	pop	{pc}		; (ldr pc, [sp], #4)
   39470:	mov	ip, #3
   39474:	mov	r3, #0
   39478:	ldr	r0, [r4, #40]	; 0x28
   3947c:	add	r1, r4, #76	; 0x4c
   39480:	str	ip, [sp]
   39484:	ldr	r6, [r4, #48]	; 0x30
   39488:	blx	r6
   3948c:	cmp	r0, #0
   39490:	beq	3940c <flatcc_builder_start_table@@Base+0xe8>
   39494:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>
   39498:	mvn	r7, #0
   3949c:	b	39450 <flatcc_builder_start_table@@Base+0x12c>

000394a0 <flatcc_builder_create_vtable@@Base>:
   394a0:	strd	r4, [sp, #-16]!
   394a4:	mov	r5, r0
   394a8:	mov	r3, #0
   394ac:	ldr	ip, [r5, #152]	; 0x98
   394b0:	subs	r0, r2, #0
   394b4:	str	r6, [sp, #8]
   394b8:	str	lr, [sp, #12]
   394bc:	sub	sp, sp, #80	; 0x50
   394c0:	str	r3, [sp, #8]
   394c4:	str	r3, [sp, #12]
   394c8:	beq	39544 <flatcc_builder_create_vtable@@Base+0xa4>
   394cc:	mov	r2, #1
   394d0:	cmp	ip, r3
   394d4:	str	r0, [sp, #8]
   394d8:	str	r2, [sp, #12]
   394dc:	str	r1, [sp, #16]
   394e0:	str	r0, [sp, #20]
   394e4:	beq	39574 <flatcc_builder_create_vtable@@Base+0xd4>
   394e8:	ldr	r3, [r5, #136]	; 0x88
   394ec:	sub	r4, r3, r0
   394f0:	cmp	r3, r4
   394f4:	ble	39558 <flatcc_builder_create_vtable@@Base+0xb8>
   394f8:	mov	r3, r4
   394fc:	mov	r2, #1
   39500:	str	r0, [sp]
   39504:	add	r1, sp, #16
   39508:	ldr	r0, [r5, #36]	; 0x24
   3950c:	ldr	r6, [r5, #44]	; 0x2c
   39510:	blx	r6
   39514:	cmp	r0, #0
   39518:	bne	395bc <flatcc_builder_create_vtable@@Base+0x11c>
   3951c:	cmp	r4, #0
   39520:	str	r4, [r5, #136]	; 0x88
   39524:	beq	3952c <flatcc_builder_create_vtable@@Base+0x8c>
   39528:	add	r4, r4, #1
   3952c:	mov	r0, r4
   39530:	add	sp, sp, #80	; 0x50
   39534:	ldrd	r4, [sp]
   39538:	ldr	r6, [sp, #8]
   3953c:	add	sp, sp, #12
   39540:	pop	{pc}		; (ldr pc, [sp], #4)
   39544:	cmp	ip, #0
   39548:	bne	39558 <flatcc_builder_create_vtable@@Base+0xb8>
   3954c:	ldr	r2, [r5, #180]	; 0xb4
   39550:	cmp	r2, #0
   39554:	beq	395b4 <flatcc_builder_create_vtable@@Base+0x114>
   39558:	movw	r1, #45220	; 0xb0a4
   3955c:	movt	r1, #5
   39560:	ldr	r3, [pc, #88]	; 395c0 <flatcc_builder_create_vtable@@Base+0x120>
   39564:	movw	r0, #41608	; 0xa288
   39568:	movt	r0, #4
   3956c:	movw	r2, #647	; 0x287
   39570:	bl	14120 <__assert_fail@plt>
   39574:	ldr	r3, [r5, #180]	; 0xb4
   39578:	cmp	r3, #0
   3957c:	bne	394e8 <flatcc_builder_create_vtable@@Base+0x48>
   39580:	ldr	r4, [r5, #140]	; 0x8c
   39584:	mov	ip, r0
   39588:	add	r0, r4, r0
   3958c:	str	r0, [r5, #140]	; 0x8c
   39590:	mov	r3, r4
   39594:	add	r1, sp, #16
   39598:	str	ip, [sp]
   3959c:	ldr	r0, [r5, #36]	; 0x24
   395a0:	ldr	r5, [r5, #44]	; 0x2c
   395a4:	blx	r5
   395a8:	cmp	r0, #0
   395ac:	beq	39528 <flatcc_builder_create_vtable@@Base+0x88>
   395b0:	bl	36898 <flatcc_builder_default_alloc@@Base+0x14c>
   395b4:	ldr	r4, [r5, #140]	; 0x8c
   395b8:	b	39590 <flatcc_builder_create_vtable@@Base+0xf0>
   395bc:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   395c0:	andeq	sl, r5, r0, lsl #19

000395c4 <flatcc_builder_create_cached_vtable@@Base>:
   395c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   395c8:	strd	r6, [sp, #8]
   395cc:	mov	r6, r0
   395d0:	strd	r8, [sp, #16]
   395d4:	mov	r9, r2
   395d8:	mov	r8, r3
   395dc:	strd	sl, [sp, #24]
   395e0:	str	lr, [sp, #32]
   395e4:	sub	sp, sp, #28
   395e8:	str	r1, [sp, #8]
   395ec:	ldr	r1, [r0, #116]	; 0x74
   395f0:	cmp	r1, #0
   395f4:	rsbne	r1, r1, #32
   395f8:	beq	39780 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   395fc:	ldr	sl, [r6, #92]	; 0x5c
   39600:	lsr	r8, r8, r1
   39604:	adds	fp, sl, r8, lsl #2
   39608:	str	fp, [sp, #12]
   3960c:	beq	3981c <flatcc_builder_create_cached_vtable@@Base+0x258>
   39610:	ldr	r5, [sl, r8, lsl #2]
   39614:	cmp	r5, #0
   39618:	beq	39850 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   3961c:	mov	r3, #0
   39620:	str	r8, [sp, #16]
   39624:	mov	r8, fp
   39628:	mov	fp, r6
   3962c:	ldr	r7, [r6, #68]	; 0x44
   39630:	str	r3, [sp, #20]
   39634:	ldr	r3, [r6, #100]	; 0x64
   39638:	mov	r6, r3
   3963c:	add	r4, r6, r5
   39640:	ldr	r1, [r4, #8]
   39644:	ldrh	r2, [r7, r1]
   39648:	add	r1, r7, r1
   3964c:	cmp	r2, r9
   39650:	bne	3972c <flatcc_builder_create_cached_vtable@@Base+0x168>
   39654:	mov	r2, r9
   39658:	ldr	r0, [sp, #8]
   3965c:	bl	13fd0 <memcmp@plt>
   39660:	cmp	r0, #0
   39664:	bne	3972c <flatcc_builder_create_cached_vtable@@Base+0x168>
   39668:	ldr	r1, [r4, #4]
   3966c:	ldr	r2, [fp, #152]	; 0x98
   39670:	cmp	r1, r2
   39674:	beq	39738 <flatcc_builder_create_cached_vtable@@Base+0x174>
   39678:	ldr	r5, [r4, #12]
   3967c:	add	r8, r4, #12
   39680:	str	r4, [sp, #20]
   39684:	cmp	r5, #0
   39688:	bne	3963c <flatcc_builder_create_cached_vtable@@Base+0x78>
   3968c:	ldr	r8, [sp, #16]
   39690:	mov	r6, fp
   39694:	ldr	r3, [r6, #104]	; 0x68
   39698:	ldr	r4, [r6, #124]	; 0x7c
   3969c:	add	r2, r4, #16
   396a0:	cmp	r2, r3
   396a4:	bls	396cc <flatcc_builder_create_cached_vtable@@Base+0x108>
   396a8:	mov	ip, #6
   396ac:	mov	r3, #0
   396b0:	ldr	r0, [r6, #40]	; 0x28
   396b4:	add	r1, r6, #100	; 0x64
   396b8:	str	ip, [sp]
   396bc:	ldr	r5, [r6, #48]	; 0x30
   396c0:	blx	r5
   396c4:	cmp	r0, #0
   396c8:	bne	3984c <flatcc_builder_create_cached_vtable@@Base+0x288>
   396cc:	ldr	r5, [r6, #100]	; 0x64
   396d0:	adds	r7, r5, r4
   396d4:	beq	3981c <flatcc_builder_create_cached_vtable@@Base+0x258>
   396d8:	ldr	r3, [r6, #124]	; 0x7c
   396dc:	mov	r2, r9
   396e0:	ldr	r0, [r6, #152]	; 0x98
   396e4:	ldr	r1, [sp, #8]
   396e8:	add	ip, r3, #16
   396ec:	str	ip, [r6, #124]	; 0x7c
   396f0:	str	r0, [r7, #4]
   396f4:	mov	r0, r6
   396f8:	ldr	ip, [sl, r8, lsl #2]
   396fc:	str	ip, [r7, #12]
   39700:	str	r3, [sl, r8, lsl #2]
   39704:	bl	394a0 <flatcc_builder_create_vtable@@Base>
   39708:	cmp	r0, #0
   3970c:	str	r0, [r5, r4]
   39710:	beq	3981c <flatcc_builder_create_cached_vtable@@Base+0x258>
   39714:	ldr	r3, [sp, #20]
   39718:	cmp	r3, #0
   3971c:	beq	39860 <flatcc_builder_create_cached_vtable@@Base+0x29c>
   39720:	ldr	r3, [r3, #8]
   39724:	str	r3, [r7, #8]
   39728:	b	39764 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3972c:	add	r8, r4, #12
   39730:	ldr	r5, [r4, #12]
   39734:	b	39684 <flatcc_builder_create_cached_vtable@@Base+0xc0>
   39738:	ldr	r3, [sp, #12]
   3973c:	mov	fp, r8
   39740:	ldr	r8, [sp, #16]
   39744:	cmp	r3, fp
   39748:	beq	39760 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   3974c:	ldr	r3, [r4, #12]
   39750:	str	r3, [fp]
   39754:	ldr	r3, [sl, r8, lsl #2]
   39758:	str	r3, [r4, #12]
   3975c:	str	r5, [sl, r8, lsl #2]
   39760:	ldr	r0, [r4]
   39764:	add	sp, sp, #28
   39768:	ldrd	r4, [sp]
   3976c:	ldrd	r6, [sp, #8]
   39770:	ldrd	r8, [sp, #16]
   39774:	ldrd	sl, [sp, #24]
   39778:	add	sp, sp, #32
   3977c:	pop	{pc}		; (ldr pc, [sp], #4)
   39780:	ldr	r4, [r0, #124]	; 0x7c
   39784:	add	r5, r0, #92	; 0x5c
   39788:	cmp	r4, #0
   3978c:	bne	39910 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   39790:	ldr	r3, [r0, #104]	; 0x68
   39794:	cmp	r3, #15
   39798:	bls	39824 <flatcc_builder_create_cached_vtable@@Base+0x260>
   3979c:	ldr	r3, [r6, #100]	; 0x64
   397a0:	cmp	r3, #0
   397a4:	beq	3981c <flatcc_builder_create_cached_vtable@@Base+0x258>
   397a8:	mov	ip, #16
   397ac:	mov	r2, #5
   397b0:	ldr	r0, [r6, #40]	; 0x28
   397b4:	mov	r1, r5
   397b8:	mov	r3, #1
   397bc:	str	r2, [sp]
   397c0:	mov	r2, #256	; 0x100
   397c4:	str	ip, [r6, #124]	; 0x7c
   397c8:	ldr	r5, [r6, #48]	; 0x30
   397cc:	blx	r5
   397d0:	cmp	r0, #0
   397d4:	bne	3981c <flatcc_builder_create_cached_vtable@@Base+0x258>
   397d8:	mov	r3, #256	; 0x100
   397dc:	ldr	r1, [r6, #96]	; 0x60
   397e0:	b	397e8 <flatcc_builder_create_cached_vtable@@Base+0x224>
   397e4:	mov	r3, r2
   397e8:	lsl	r2, r3, #1
   397ec:	cmp	r2, r1
   397f0:	bls	397e4 <flatcc_builder_create_cached_vtable@@Base+0x220>
   397f4:	lsr	r3, r3, #2
   397f8:	cmp	r3, #1
   397fc:	bls	39858 <flatcc_builder_create_cached_vtable@@Base+0x294>
   39800:	mov	r2, #1
   39804:	add	r4, r4, #1
   39808:	cmp	r3, r2, lsl r4
   3980c:	bhi	39804 <flatcc_builder_create_cached_vtable@@Base+0x240>
   39810:	rsb	r1, r4, #32
   39814:	str	r4, [r6, #116]	; 0x74
   39818:	b	395fc <flatcc_builder_create_cached_vtable@@Base+0x38>
   3981c:	mov	r0, #0
   39820:	b	39764 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   39824:	mov	ip, #6
   39828:	add	r1, r0, #100	; 0x64
   3982c:	ldr	r0, [r0, #40]	; 0x28
   39830:	mov	r3, r4
   39834:	mov	r2, #16
   39838:	str	ip, [sp]
   3983c:	ldr	r7, [r6, #48]	; 0x30
   39840:	blx	r7
   39844:	cmp	r0, #0
   39848:	beq	3979c <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   3984c:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>
   39850:	str	r5, [sp, #20]
   39854:	b	39694 <flatcc_builder_create_cached_vtable@@Base+0xd0>
   39858:	mov	r1, #32
   3985c:	b	39814 <flatcc_builder_create_cached_vtable@@Base+0x250>
   39860:	ldr	r8, [r6, #120]	; 0x78
   39864:	ldr	r3, [r6, #172]	; 0xac
   39868:	add	r2, r9, r8
   3986c:	cmp	r3, #0
   39870:	beq	398b0 <flatcc_builder_create_cached_vtable@@Base+0x2ec>
   39874:	cmp	r3, r2
   39878:	bcs	398b0 <flatcc_builder_create_cached_vtable@@Base+0x2ec>
   3987c:	ldr	r3, [r6, #116]	; 0x74
   39880:	cmp	r3, #0
   39884:	beq	39764 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   39888:	ldr	r7, [sp, #20]
   3988c:	ldr	r0, [r6, #92]	; 0x5c
   39890:	ldr	r2, [r6, #96]	; 0x60
   39894:	mov	r1, r7
   39898:	bl	14084 <memset@plt>
   3989c:	mov	r3, #16
   398a0:	mov	r2, r7
   398a4:	ldr	r0, [r5, r4]
   398a8:	strd	r2, [r6, #120]	; 0x78
   398ac:	b	39764 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   398b0:	ldr	r3, [r6, #72]	; 0x48
   398b4:	cmp	r3, r2
   398b8:	bcs	398e0 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   398bc:	mov	ip, #2
   398c0:	mov	r3, #0
   398c4:	ldr	r0, [r6, #40]	; 0x28
   398c8:	add	r1, r6, #68	; 0x44
   398cc:	str	ip, [sp]
   398d0:	ldr	sl, [r6, #48]	; 0x30
   398d4:	blx	sl
   398d8:	cmp	r0, #0
   398dc:	bne	3984c <flatcc_builder_create_cached_vtable@@Base+0x288>
   398e0:	ldr	r3, [r6, #68]	; 0x44
   398e4:	adds	r0, r3, r8
   398e8:	beq	3992c <flatcc_builder_create_cached_vtable@@Base+0x368>
   398ec:	ldr	r3, [r6, #120]	; 0x78
   398f0:	mov	r2, r9
   398f4:	ldr	r1, [sp, #8]
   398f8:	add	r9, r3, r9
   398fc:	str	r3, [r7, #8]
   39900:	str	r9, [r6, #120]	; 0x78
   39904:	bl	13fb8 <memcpy@plt>
   39908:	ldr	r0, [r5, r4]
   3990c:	b	39764 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   39910:	movw	r1, #45220	; 0xb0a4
   39914:	movt	r1, #5
   39918:	ldr	r3, [pc, #20]	; 39934 <flatcc_builder_create_cached_vtable@@Base+0x370>
   3991c:	movw	r0, #45888	; 0xb340
   39920:	movt	r0, #5
   39924:	movw	r2, #342	; 0x156
   39928:	bl	14120 <__assert_fail@plt>
   3992c:	mvn	r0, #0
   39930:	b	39764 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   39934:	andeq	sl, r5, r4, lsr #28

00039938 <flatcc_builder_create_table@@Base>:
   39938:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3993c:	mov	r5, r0
   39940:	strd	r6, [sp, #8]
   39944:	str	r8, [sp, #16]
   39948:	str	lr, [sp, #20]
   3994c:	sub	sp, sp, #88	; 0x58
   39950:	ldr	r6, [sp, #116]	; 0x74
   39954:	ldr	r0, [sp, #120]	; 0x78
   39958:	cmp	r6, #0
   3995c:	blt	39ac4 <flatcc_builder_create_table@@Base+0x18c>
   39960:	ands	r7, r0, #1
   39964:	beq	39aa8 <flatcc_builder_create_table@@Base+0x170>
   39968:	ldrh	ip, [r5, #128]	; 0x80
   3996c:	cmp	r3, #4
   39970:	sub	r0, r0, #1
   39974:	movcc	r3, #4
   39978:	cmp	ip, r3
   3997c:	ldr	ip, [r5, #136]	; 0x88
   39980:	strhcc	r3, [r5, #128]	; 0x80
   39984:	sub	r3, r3, #1
   39988:	cmp	r6, #0
   3998c:	sub	r4, ip, r2
   39990:	mov	r8, r4
   39994:	sub	r4, r4, #4
   39998:	and	r8, r8, r3
   3999c:	sub	r0, r4, r0
   399a0:	sub	r0, r0, r8
   399a4:	str	r0, [sp, #12]
   399a8:	beq	399dc <flatcc_builder_create_table@@Base+0xa4>
   399ac:	ldr	ip, [sp, #112]	; 0x70
   399b0:	sub	r4, r8, r4
   399b4:	sub	r4, r4, #4
   399b8:	add	r6, ip, r6, lsl #1
   399bc:	ldrh	r3, [ip], #2
   399c0:	ldr	r0, [r1, r3]
   399c4:	sub	lr, r4, r3
   399c8:	cmp	r6, ip
   399cc:	add	r0, r0, lr
   399d0:	str	r0, [r1, r3]
   399d4:	bne	399bc <flatcc_builder_create_table@@Base+0x84>
   399d8:	ldr	ip, [r5, #136]	; 0x88
   399dc:	mov	r0, #4
   399e0:	add	r3, sp, #12
   399e4:	mov	lr, #1
   399e8:	cmp	r2, #0
   399ec:	moveq	r2, #2
   399f0:	str	r0, [sp, #16]
   399f4:	str	lr, [sp, #20]
   399f8:	str	r3, [sp, #24]
   399fc:	str	r0, [sp, #28]
   39a00:	beq	39a24 <flatcc_builder_create_table@@Base+0xec>
   39a04:	mov	r3, #2
   39a08:	add	r0, r2, r0
   39a0c:	mov	r7, r3
   39a10:	str	r0, [sp, #16]
   39a14:	str	r2, [sp, #36]	; 0x24
   39a18:	mov	r2, #3
   39a1c:	str	r3, [sp, #20]
   39a20:	str	r1, [sp, #32]
   39a24:	cmp	r8, #0
   39a28:	bne	39a7c <flatcc_builder_create_table@@Base+0x144>
   39a2c:	sub	r4, ip, r0
   39a30:	cmp	r4, ip
   39a34:	bge	39ae4 <flatcc_builder_create_table@@Base+0x1ac>
   39a38:	mov	r2, r7
   39a3c:	mov	r3, r4
   39a40:	str	r0, [sp]
   39a44:	add	r1, sp, #24
   39a48:	ldr	r0, [r5, #36]	; 0x24
   39a4c:	ldr	r6, [r5, #44]	; 0x2c
   39a50:	blx	r6
   39a54:	cmp	r0, #0
   39a58:	bne	39ae0 <flatcc_builder_create_table@@Base+0x1a8>
   39a5c:	mov	r0, r4
   39a60:	str	r4, [r5, #136]	; 0x88
   39a64:	add	sp, sp, #88	; 0x58
   39a68:	ldrd	r4, [sp]
   39a6c:	ldrd	r6, [sp, #8]
   39a70:	ldr	r8, [sp, #16]
   39a74:	add	sp, sp, #20
   39a78:	pop	{pc}		; (ldr pc, [sp], #4)
   39a7c:	ldr	r1, [pc, #124]	; 39b00 <flatcc_builder_create_table@@Base+0x1c8>
   39a80:	add	r7, r7, #1
   39a84:	add	r3, sp, #88	; 0x58
   39a88:	add	r3, r3, r7, lsl #3
   39a8c:	add	r0, r0, r8
   39a90:	mov	r7, r2
   39a94:	str	r0, [sp, #16]
   39a98:	str	r2, [sp, #20]
   39a9c:	str	r1, [r3, #-72]	; 0xffffffb8
   39aa0:	str	r8, [r3, #-68]	; 0xffffffbc
   39aa4:	b	39a2c <flatcc_builder_create_table@@Base+0xf4>
   39aa8:	movw	r1, #45220	; 0xb0a4
   39aac:	movt	r1, #5
   39ab0:	ldr	r3, [pc, #76]	; 39b04 <flatcc_builder_create_table@@Base+0x1cc>
   39ab4:	movw	r0, #45924	; 0xb364
   39ab8:	movt	r0, #5
   39abc:	movw	r2, #1243	; 0x4db
   39ac0:	bl	14120 <__assert_fail@plt>
   39ac4:	movw	r1, #45220	; 0xb0a4
   39ac8:	movt	r1, #5
   39acc:	ldr	r3, [pc, #48]	; 39b04 <flatcc_builder_create_table@@Base+0x1cc>
   39ad0:	movw	r0, #45904	; 0xb350
   39ad4:	movt	r0, #5
   39ad8:	movw	r2, #1237	; 0x4d5
   39adc:	bl	14120 <__assert_fail@plt>
   39ae0:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   39ae4:	movw	r1, #45220	; 0xb0a4
   39ae8:	movt	r1, #5
   39aec:	ldr	r3, [pc, #20]	; 39b08 <flatcc_builder_create_table@@Base+0x1d0>
   39af0:	movw	r0, #41608	; 0xa288
   39af4:	movt	r0, #4
   39af8:	movw	r2, #647	; 0x287
   39afc:	bl	14120 <__assert_fail@plt>
   39b00:	strdeq	sl, [r5], -ip
   39b04:	andeq	sl, r5, r0, lsr lr
   39b08:	andeq	sl, r5, r0, lsl #19

00039b0c <flatcc_builder_check_required_field@@Base>:
   39b0c:	ldr	r3, [r0, #32]
   39b10:	ldrh	r3, [r3, #14]
   39b14:	cmp	r3, #3
   39b18:	bne	39b48 <flatcc_builder_check_required_field@@Base+0x3c>
   39b1c:	ldrh	r3, [r0, #8]
   39b20:	cmp	r3, r1
   39b24:	bls	39b40 <flatcc_builder_check_required_field@@Base+0x34>
   39b28:	ldr	r3, [r0, #4]
   39b2c:	lsl	r1, r1, #1
   39b30:	ldrh	r0, [r3, r1]
   39b34:	adds	r0, r0, #0
   39b38:	movne	r0, #1
   39b3c:	bx	lr
   39b40:	mov	r0, #0
   39b44:	bx	lr
   39b48:	movw	r1, #45220	; 0xb0a4
   39b4c:	movt	r1, #5
   39b50:	ldr	r3, [pc, #20]	; 39b6c <flatcc_builder_check_required_field@@Base+0x60>
   39b54:	movw	r0, #45936	; 0xb370
   39b58:	movt	r0, #5
   39b5c:	str	r4, [sp, #-8]!
   39b60:	movw	r2, #1272	; 0x4f8
   39b64:	str	lr, [sp, #4]
   39b68:	bl	14120 <__assert_fail@plt>
   39b6c:	andeq	sl, r5, ip, asr #28

00039b70 <flatcc_builder_check_union_field@@Base>:
   39b70:	ldr	r3, [r0, #32]
   39b74:	ldrh	r3, [r3, #14]
   39b78:	cmp	r3, #3
   39b7c:	bne	39be0 <flatcc_builder_check_union_field@@Base+0x70>
   39b80:	cmp	r1, #0
   39b84:	beq	39bcc <flatcc_builder_check_union_field@@Base+0x5c>
   39b88:	ldrh	r3, [r0, #8]
   39b8c:	cmp	r3, r1
   39b90:	bls	39bcc <flatcc_builder_check_union_field@@Base+0x5c>
   39b94:	ldr	r3, [r0, #4]
   39b98:	sub	r1, r1, #-2147483647	; 0x80000001
   39b9c:	lsl	r1, r1, #1
   39ba0:	ldrh	r2, [r3, r1]!
   39ba4:	cmp	r2, #0
   39ba8:	ldrh	r1, [r3, #2]
   39bac:	beq	39bc0 <flatcc_builder_check_union_field@@Base+0x50>
   39bb0:	ldr	r3, [r0, #16]
   39bb4:	ldrb	r3, [r3, r2]
   39bb8:	cmp	r3, #0
   39bbc:	bne	39bd4 <flatcc_builder_check_union_field@@Base+0x64>
   39bc0:	clz	r0, r1
   39bc4:	lsr	r0, r0, #5
   39bc8:	bx	lr
   39bcc:	mov	r0, #0
   39bd0:	bx	lr
   39bd4:	adds	r0, r1, #0
   39bd8:	movne	r0, #1
   39bdc:	bx	lr
   39be0:	movw	r1, #45220	; 0xb0a4
   39be4:	movt	r1, #5
   39be8:	ldr	r3, [pc, #20]	; 39c04 <flatcc_builder_check_union_field@@Base+0x94>
   39bec:	movw	r0, #45936	; 0xb370
   39bf0:	movt	r0, #5
   39bf4:	str	r4, [sp, #-8]!
   39bf8:	movw	r2, #1279	; 0x4ff
   39bfc:	str	lr, [sp, #4]
   39c00:	bl	14120 <__assert_fail@plt>
   39c04:	andeq	sl, r5, r0, ror lr

00039c08 <flatcc_builder_check_required@@Base>:
   39c08:	ldr	r3, [r0, #32]
   39c0c:	ldrh	r3, [r3, #14]
   39c10:	cmp	r3, #3
   39c14:	bne	39c7c <flatcc_builder_check_required@@Base+0x74>
   39c18:	ldrh	r3, [r0, #8]
   39c1c:	cmp	r3, r2
   39c20:	blt	39c74 <flatcc_builder_check_required@@Base+0x6c>
   39c24:	cmp	r2, #0
   39c28:	ble	39c6c <flatcc_builder_check_required@@Base+0x64>
   39c2c:	ldrh	r3, [r1]
   39c30:	ldr	ip, [r0, #4]
   39c34:	lsl	r3, r3, #1
   39c38:	ldrh	r0, [ip, r3]
   39c3c:	cmp	r0, #0
   39c40:	bxeq	lr
   39c44:	add	r2, r1, r2, lsl #1
   39c48:	add	r1, r1, #2
   39c4c:	b	39c64 <flatcc_builder_check_required@@Base+0x5c>
   39c50:	ldrh	r3, [r1], #2
   39c54:	lsl	r3, r3, #1
   39c58:	ldrh	r0, [ip, r3]
   39c5c:	cmp	r0, #0
   39c60:	bxeq	lr
   39c64:	cmp	r1, r2
   39c68:	bne	39c50 <flatcc_builder_check_required@@Base+0x48>
   39c6c:	mov	r0, #1
   39c70:	bx	lr
   39c74:	mov	r0, #0
   39c78:	bx	lr
   39c7c:	movw	r1, #45220	; 0xb0a4
   39c80:	movt	r1, #5
   39c84:	ldr	r3, [pc, #20]	; 39ca0 <flatcc_builder_check_required@@Base+0x98>
   39c88:	movw	r0, #45936	; 0xb370
   39c8c:	movt	r0, #5
   39c90:	str	r4, [sp, #-8]!
   39c94:	movw	r2, #1297	; 0x511
   39c98:	str	lr, [sp, #4]
   39c9c:	bl	14120 <__assert_fail@plt>
   39ca0:	muleq	r5, r4, lr

00039ca4 <flatcc_builder_end_table@@Base>:
   39ca4:	ldr	r3, [r0, #32]
   39ca8:	strd	r4, [sp, #-20]!	; 0xffffffec
   39cac:	ldrh	r3, [r3, #14]
   39cb0:	strd	r6, [sp, #8]
   39cb4:	str	lr, [sp, #16]
   39cb8:	sub	sp, sp, #20
   39cbc:	cmp	r3, #3
   39cc0:	bne	39e44 <flatcc_builder_end_table@@Base+0x1a0>
   39cc4:	ldrh	r5, [r0, #8]
   39cc8:	movw	ip, #31153	; 0x79b1
   39ccc:	movt	ip, #40503	; 0x9e37
   39cd0:	mov	r4, r0
   39cd4:	ldr	r1, [r0, #4]
   39cd8:	ldr	r3, [r0, #12]
   39cdc:	add	r5, r5, #2
   39ce0:	lsl	r5, r5, #1
   39ce4:	ldr	lr, [r0, #20]
   39ce8:	sub	r6, r1, #4
   39cec:	uxth	r5, r5
   39cf0:	eor	r3, r3, r5
   39cf4:	mov	r2, r5
   39cf8:	strh	r5, [r1, #-4]
   39cfc:	mul	r3, ip, r3
   39d00:	add	lr, lr, #4
   39d04:	uxth	lr, lr
   39d08:	eor	r3, r3, lr
   39d0c:	strh	lr, [r1, #-2]
   39d10:	mov	r1, r6
   39d14:	mul	r3, ip, r3
   39d18:	str	r3, [r0, #12]
   39d1c:	bl	395c4 <flatcc_builder_create_cached_vtable@@Base>
   39d20:	subs	r7, r0, #0
   39d24:	bne	39d44 <flatcc_builder_end_table@@Base+0xa0>
   39d28:	mov	r5, #0
   39d2c:	mov	r0, r5
   39d30:	add	sp, sp, #20
   39d34:	ldrd	r4, [sp]
   39d38:	ldrd	r6, [sp, #8]
   39d3c:	add	sp, sp, #16
   39d40:	pop	{pc}		; (ldr pc, [sp], #4)
   39d44:	mov	r2, r5
   39d48:	mov	r1, #0
   39d4c:	mov	r0, r6
   39d50:	bl	14084 <memset@plt>
   39d54:	ldr	ip, [r4]
   39d58:	mov	r0, r4
   39d5c:	ldr	r3, [r4, #32]
   39d60:	ldr	r2, [r4, #76]	; 0x4c
   39d64:	ldr	r1, [r3, #20]
   39d68:	str	r7, [sp, #8]
   39d6c:	ldrh	r3, [r4, #130]	; 0x82
   39d70:	add	r2, r2, r1
   39d74:	ldr	r1, [r4, #16]
   39d78:	sub	ip, ip, r2
   39d7c:	asr	ip, ip, #1
   39d80:	str	r2, [sp]
   39d84:	ldr	r2, [r4, #20]
   39d88:	str	ip, [sp, #4]
   39d8c:	bl	39938 <flatcc_builder_create_table@@Base>
   39d90:	subs	r5, r0, #0
   39d94:	beq	39d28 <flatcc_builder_end_table@@Base+0x84>
   39d98:	ldr	r3, [r4, #32]
   39d9c:	mov	r1, #0
   39da0:	ldr	r0, [r4, #52]	; 0x34
   39da4:	ldr	r2, [r4, #76]	; 0x4c
   39da8:	ldr	ip, [r3, #16]
   39dac:	ldr	r6, [r3, #20]
   39db0:	ldrh	lr, [r3, #28]
   39db4:	add	r0, r0, ip
   39db8:	ldr	ip, [r3, #24]
   39dbc:	add	r3, r2, r6
   39dc0:	ldr	r2, [r4, #20]
   39dc4:	str	r3, [r4]
   39dc8:	str	r0, [r4, #4]
   39dcc:	strh	lr, [r4, #8]
   39dd0:	str	ip, [r4, #12]
   39dd4:	ldr	r0, [r4, #16]
   39dd8:	bl	14084 <memset@plt>
   39ddc:	ldr	r3, [r4, #32]
   39de0:	ldr	r0, [r4, #60]	; 0x3c
   39de4:	ldr	r2, [r4, #64]	; 0x40
   39de8:	ldr	ip, [r3]
   39dec:	ldmib	r3, {r1, lr}
   39df0:	add	r0, r0, ip
   39df4:	sub	r2, r2, ip
   39df8:	str	r0, [r4, #16]
   39dfc:	cmp	r2, r1
   39e00:	ldrh	r0, [r4, #128]	; 0x80
   39e04:	movcs	r2, r1
   39e08:	str	lr, [r4, #20]
   39e0c:	str	ip, [r4, #28]
   39e10:	ldrh	ip, [r4, #130]	; 0x82
   39e14:	str	r2, [r4, #24]
   39e18:	ldr	r2, [r4, #156]	; 0x9c
   39e1c:	str	r1, [r3, #4]
   39e20:	cmp	r0, ip
   39e24:	sub	r0, r3, #36	; 0x24
   39e28:	strhcc	ip, [r4, #128]	; 0x80
   39e2c:	ldrh	r1, [r3, #12]
   39e30:	sub	r3, r2, #1
   39e34:	str	r0, [r4, #32]
   39e38:	strh	r1, [r4, #130]	; 0x82
   39e3c:	str	r3, [r4, #156]	; 0x9c
   39e40:	b	39d2c <flatcc_builder_end_table@@Base+0x88>
   39e44:	movw	r1, #45220	; 0xb0a4
   39e48:	movt	r1, #5
   39e4c:	ldr	r3, [pc, #12]	; 39e60 <flatcc_builder_end_table@@Base+0x1bc>
   39e50:	movw	r0, #45936	; 0xb370
   39e54:	movt	r0, #5
   39e58:	movw	r2, #1317	; 0x525
   39e5c:	bl	14120 <__assert_fail@plt>
   39e60:			; <UNDEFINED> instruction: 0x0005aeb4

00039e64 <flatcc_builder_create_vector@@Base>:
   39e64:	strd	r4, [sp, #-16]!
   39e68:	mov	r4, r0
   39e6c:	str	r6, [sp, #8]
   39e70:	str	lr, [sp, #12]
   39e74:	sub	sp, sp, #88	; 0x58
   39e78:	ldr	ip, [sp, #108]	; 0x6c
   39e7c:	ldrh	r0, [sp, #104]	; 0x68
   39e80:	cmp	r2, ip
   39e84:	bhi	39f78 <flatcc_builder_create_vector@@Base+0x114>
   39e88:	ldrh	ip, [r4, #128]	; 0x80
   39e8c:	cmp	r0, #4
   39e90:	mul	r3, r3, r2
   39e94:	movcc	r0, #4
   39e98:	add	lr, sp, #12
   39e9c:	str	r2, [sp, #12]
   39ea0:	ldr	r6, [r4, #136]	; 0x88
   39ea4:	mov	r2, #1
   39ea8:	str	lr, [sp, #24]
   39eac:	cmp	ip, r0
   39eb0:	mov	ip, #4
   39eb4:	strhcc	r0, [r4, #128]	; 0x80
   39eb8:	sub	lr, r6, r3
   39ebc:	sub	r0, r0, #1
   39ec0:	cmp	r3, #0
   39ec4:	and	r0, r0, lr
   39ec8:	str	ip, [sp, #16]
   39ecc:	moveq	r3, #2
   39ed0:	str	r2, [sp, #20]
   39ed4:	str	ip, [sp, #28]
   39ed8:	beq	39efc <flatcc_builder_create_vector@@Base+0x98>
   39edc:	mov	lr, #2
   39ee0:	add	ip, r3, ip
   39ee4:	mov	r2, lr
   39ee8:	str	ip, [sp, #16]
   39eec:	str	r3, [sp, #36]	; 0x24
   39ef0:	mov	r3, #3
   39ef4:	str	lr, [sp, #20]
   39ef8:	str	r1, [sp, #32]
   39efc:	cmp	r0, #0
   39f00:	bne	39f4c <flatcc_builder_create_vector@@Base+0xe8>
   39f04:	sub	r5, r6, ip
   39f08:	cmp	r6, r5
   39f0c:	ble	39f98 <flatcc_builder_create_vector@@Base+0x134>
   39f10:	mov	r3, r5
   39f14:	add	r1, sp, #24
   39f18:	str	ip, [sp]
   39f1c:	ldr	r0, [r4, #36]	; 0x24
   39f20:	ldr	r6, [r4, #44]	; 0x2c
   39f24:	blx	r6
   39f28:	cmp	r0, #0
   39f2c:	bne	39f94 <flatcc_builder_create_vector@@Base+0x130>
   39f30:	mov	r0, r5
   39f34:	str	r5, [r4, #136]	; 0x88
   39f38:	add	sp, sp, #88	; 0x58
   39f3c:	ldrd	r4, [sp]
   39f40:	ldr	r6, [sp, #8]
   39f44:	add	sp, sp, #12
   39f48:	pop	{pc}		; (ldr pc, [sp], #4)
   39f4c:	ldr	lr, [pc, #96]	; 39fb4 <flatcc_builder_create_vector@@Base+0x150>
   39f50:	add	r2, r2, #1
   39f54:	add	r1, sp, #88	; 0x58
   39f58:	add	r1, r1, r2, lsl #3
   39f5c:	add	ip, ip, r0
   39f60:	mov	r2, r3
   39f64:	str	ip, [sp, #16]
   39f68:	str	r3, [sp, #20]
   39f6c:	str	lr, [r1, #-72]	; 0xffffffb8
   39f70:	str	r0, [r1, #-68]	; 0xffffffbc
   39f74:	b	39f04 <flatcc_builder_create_vector@@Base+0xa0>
   39f78:	movw	r1, #45220	; 0xb0a4
   39f7c:	movt	r1, #5
   39f80:	ldr	r3, [pc, #48]	; 39fb8 <flatcc_builder_create_vector@@Base+0x154>
   39f84:	movw	r0, #45980	; 0xb39c
   39f88:	movt	r0, #5
   39f8c:	movw	r2, #1365	; 0x555
   39f90:	bl	14120 <__assert_fail@plt>
   39f94:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   39f98:	movw	r1, #45220	; 0xb0a4
   39f9c:	movt	r1, #5
   39fa0:	ldr	r3, [pc, #20]	; 39fbc <flatcc_builder_create_vector@@Base+0x158>
   39fa4:	movw	r0, #41608	; 0xa288
   39fa8:	movt	r0, #4
   39fac:	movw	r2, #647	; 0x287
   39fb0:	bl	14120 <__assert_fail@plt>
   39fb4:	strdeq	sl, [r5], -ip
   39fb8:	ldrdeq	sl, [r5], -r0
   39fbc:	andeq	sl, r5, r0, lsl #19

00039fc0 <flatcc_builder_end_vector@@Base>:
   39fc0:	ldr	r2, [r0, #32]
   39fc4:	strd	r4, [sp, #-16]!
   39fc8:	ldrh	r3, [r2, #14]
   39fcc:	str	r6, [sp, #8]
   39fd0:	str	lr, [sp, #12]
   39fd4:	sub	sp, sp, #88	; 0x58
   39fd8:	cmp	r3, #4
   39fdc:	bne	3a1a4 <flatcc_builder_end_vector@@Base+0x1e4>
   39fe0:	ldr	ip, [r2, #20]
   39fe4:	mov	r4, r0
   39fe8:	ldr	r1, [r2, #24]
   39fec:	ldrh	r3, [r0, #130]	; 0x82
   39ff0:	ldr	r5, [r4, #16]
   39ff4:	cmp	ip, r1
   39ff8:	ldr	r0, [r2, #16]
   39ffc:	bhi	3a188 <flatcc_builder_end_vector@@Base+0x1c8>
   3a000:	cmp	r3, #4
   3a004:	mul	r0, r0, ip
   3a008:	mov	r1, #4
   3a00c:	ldrh	r2, [r4, #128]	; 0x80
   3a010:	movcc	r3, #4
   3a014:	add	r6, sp, #12
   3a018:	str	ip, [sp, #12]
   3a01c:	ldr	lr, [r4, #136]	; 0x88
   3a020:	str	r1, [sp, #16]
   3a024:	str	r6, [sp, #24]
   3a028:	cmp	r2, r3
   3a02c:	mov	r2, #1
   3a030:	strhcc	r3, [r4, #128]	; 0x80
   3a034:	sub	ip, lr, r0
   3a038:	sub	r3, r3, #1
   3a03c:	cmp	r0, #0
   3a040:	and	r3, r3, ip
   3a044:	str	r2, [sp, #20]
   3a048:	moveq	r0, #2
   3a04c:	str	r1, [sp, #28]
   3a050:	beq	3a074 <flatcc_builder_end_vector@@Base+0xb4>
   3a054:	mov	ip, #2
   3a058:	add	r1, r0, r1
   3a05c:	mov	r2, ip
   3a060:	str	r1, [sp, #16]
   3a064:	str	r0, [sp, #36]	; 0x24
   3a068:	mov	r0, #3
   3a06c:	str	ip, [sp, #20]
   3a070:	str	r5, [sp, #32]
   3a074:	cmp	r3, #0
   3a078:	bne	3a13c <flatcc_builder_end_vector@@Base+0x17c>
   3a07c:	sub	r5, lr, r1
   3a080:	cmp	lr, r5
   3a084:	ble	3a16c <flatcc_builder_end_vector@@Base+0x1ac>
   3a088:	mov	r3, r5
   3a08c:	str	r1, [sp]
   3a090:	add	r1, sp, #24
   3a094:	ldr	r0, [r4, #36]	; 0x24
   3a098:	ldr	r6, [r4, #44]	; 0x2c
   3a09c:	blx	r6
   3a0a0:	subs	r1, r0, #0
   3a0a4:	bne	3a168 <flatcc_builder_end_vector@@Base+0x1a8>
   3a0a8:	cmp	r5, #0
   3a0ac:	str	r5, [r4, #136]	; 0x88
   3a0b0:	beq	3a124 <flatcc_builder_end_vector@@Base+0x164>
   3a0b4:	ldr	r0, [r4, #16]
   3a0b8:	ldr	r2, [r4, #20]
   3a0bc:	bl	14084 <memset@plt>
   3a0c0:	ldr	r3, [r4, #32]
   3a0c4:	ldr	r0, [r4, #60]	; 0x3c
   3a0c8:	ldr	r2, [r4, #64]	; 0x40
   3a0cc:	ldr	ip, [r3]
   3a0d0:	ldmib	r3, {r1, lr}
   3a0d4:	add	r0, r0, ip
   3a0d8:	sub	r2, r2, ip
   3a0dc:	str	r0, [r4, #16]
   3a0e0:	cmp	r2, r1
   3a0e4:	ldrh	r0, [r4, #128]	; 0x80
   3a0e8:	movcs	r2, r1
   3a0ec:	str	lr, [r4, #20]
   3a0f0:	str	ip, [r4, #28]
   3a0f4:	ldrh	ip, [r4, #130]	; 0x82
   3a0f8:	str	r2, [r4, #24]
   3a0fc:	ldr	r2, [r4, #156]	; 0x9c
   3a100:	str	r1, [r3, #4]
   3a104:	cmp	r0, ip
   3a108:	sub	r0, r3, #36	; 0x24
   3a10c:	strhcc	ip, [r4, #128]	; 0x80
   3a110:	ldrh	r1, [r3, #12]
   3a114:	sub	r3, r2, #1
   3a118:	str	r0, [r4, #32]
   3a11c:	strh	r1, [r4, #130]	; 0x82
   3a120:	str	r3, [r4, #156]	; 0x9c
   3a124:	mov	r0, r5
   3a128:	add	sp, sp, #88	; 0x58
   3a12c:	ldrd	r4, [sp]
   3a130:	ldr	r6, [sp, #8]
   3a134:	add	sp, sp, #12
   3a138:	pop	{pc}		; (ldr pc, [sp], #4)
   3a13c:	ldr	r5, [pc, #124]	; 3a1c0 <flatcc_builder_end_vector@@Base+0x200>
   3a140:	add	r2, r2, #1
   3a144:	add	ip, sp, #88	; 0x58
   3a148:	add	ip, ip, r2, lsl #3
   3a14c:	add	r1, r1, r3
   3a150:	mov	r2, r0
   3a154:	str	r1, [sp, #16]
   3a158:	str	r0, [sp, #20]
   3a15c:	str	r5, [ip, #-72]	; 0xffffffb8
   3a160:	str	r3, [ip, #-68]	; 0xffffffbc
   3a164:	b	3a07c <flatcc_builder_end_vector@@Base+0xbc>
   3a168:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a16c:	movw	r1, #45220	; 0xb0a4
   3a170:	movt	r1, #5
   3a174:	ldr	r3, [pc, #72]	; 3a1c4 <flatcc_builder_end_vector@@Base+0x204>
   3a178:	movw	r0, #41608	; 0xa288
   3a17c:	movt	r0, #4
   3a180:	movw	r2, #647	; 0x287
   3a184:	bl	14120 <__assert_fail@plt>
   3a188:	movw	r1, #45220	; 0xb0a4
   3a18c:	movt	r1, #5
   3a190:	ldr	r3, [pc, #48]	; 3a1c8 <flatcc_builder_end_vector@@Base+0x208>
   3a194:	movw	r0, #45980	; 0xb39c
   3a198:	movt	r0, #5
   3a19c:	movw	r2, #1365	; 0x555
   3a1a0:	bl	14120 <__assert_fail@plt>
   3a1a4:	movw	r1, #45220	; 0xb0a4
   3a1a8:	movt	r1, #5
   3a1ac:	ldr	r3, [pc, #24]	; 3a1cc <flatcc_builder_end_vector@@Base+0x20c>
   3a1b0:	movw	r0, #45584	; 0xb210
   3a1b4:	movt	r0, #5
   3a1b8:	movw	r2, #1400	; 0x578
   3a1bc:	bl	14120 <__assert_fail@plt>
   3a1c0:	strdeq	sl, [r5], -ip
   3a1c4:	andeq	sl, r5, r0, lsl #19
   3a1c8:	ldrdeq	sl, [r5], -r0
   3a1cc:	strdeq	sl, [r5], -r0

0003a1d0 <flatcc_builder_vector_count@@Base>:
   3a1d0:	ldr	r3, [r0, #32]
   3a1d4:	ldr	r0, [r3, #20]
   3a1d8:	bx	lr

0003a1dc <flatcc_builder_vector_edit@@Base>:
   3a1dc:	ldr	r0, [r0, #16]
   3a1e0:	bx	lr

0003a1e4 <flatcc_builder_create_offset_vector_direct@@Base>:
   3a1e4:	cmn	r2, #-1073741823	; 0xc0000001
   3a1e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a1ec:	strd	r6, [sp, #8]
   3a1f0:	str	r8, [sp, #16]
   3a1f4:	str	lr, [sp, #20]
   3a1f8:	sub	sp, sp, #88	; 0x58
   3a1fc:	bhi	3a300 <flatcc_builder_create_offset_vector_direct@@Base+0x11c>
   3a200:	ldrh	r3, [r0, #128]	; 0x80
   3a204:	mov	r4, r0
   3a208:	mov	ip, #1
   3a20c:	str	r2, [sp, #12]
   3a210:	ldr	r5, [r4, #136]	; 0x88
   3a214:	str	ip, [sp, #20]
   3a218:	cmp	r3, #3
   3a21c:	movls	r3, #4
   3a220:	strhls	r3, [r0, #128]	; 0x80
   3a224:	mov	r0, #4
   3a228:	add	r3, sp, #12
   3a22c:	lsls	lr, r2, #2
   3a230:	str	r0, [sp, #16]
   3a234:	moveq	r7, #2
   3a238:	str	r3, [sp, #24]
   3a23c:	and	r3, r5, #3
   3a240:	str	r0, [sp, #28]
   3a244:	beq	3a268 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   3a248:	mov	r6, #2
   3a24c:	add	r0, lr, r0
   3a250:	mov	ip, r6
   3a254:	mov	r7, #3
   3a258:	str	r0, [sp, #16]
   3a25c:	str	r6, [sp, #20]
   3a260:	str	r1, [sp, #32]
   3a264:	str	lr, [sp, #36]	; 0x24
   3a268:	cmp	r3, #0
   3a26c:	bne	3a2d4 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   3a270:	cmp	r2, #0
   3a274:	beq	3a324 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   3a278:	ldr	r3, [r1]
   3a27c:	cmp	r3, #0
   3a280:	subne	lr, lr, #4
   3a284:	movne	r2, #0
   3a288:	beq	3a2b8 <flatcc_builder_create_offset_vector_direct@@Base+0xd4>
   3a28c:	sub	r3, r3, #4
   3a290:	cmp	r2, lr
   3a294:	sub	r3, r3, r5
   3a298:	add	r3, r3, r0
   3a29c:	sub	r3, r3, r2
   3a2a0:	str	r3, [r1]
   3a2a4:	beq	3a320 <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   3a2a8:	ldr	r3, [r1, #4]!
   3a2ac:	add	r2, r2, #4
   3a2b0:	cmp	r3, #0
   3a2b4:	bne	3a28c <flatcc_builder_create_offset_vector_direct@@Base+0xa8>
   3a2b8:	movw	r1, #45220	; 0xb0a4
   3a2bc:	movt	r1, #5
   3a2c0:	ldr	r3, [pc, #176]	; 3a378 <flatcc_builder_create_offset_vector_direct@@Base+0x194>
   3a2c4:	movw	r0, #41608	; 0xa288
   3a2c8:	movt	r0, #4
   3a2cc:	movw	r2, #1463	; 0x5b7
   3a2d0:	bl	14120 <__assert_fail@plt>
   3a2d4:	ldr	r8, [pc, #160]	; 3a37c <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   3a2d8:	add	ip, ip, #1
   3a2dc:	add	r6, sp, #88	; 0x58
   3a2e0:	add	r6, r6, ip, lsl #3
   3a2e4:	add	r0, r0, r3
   3a2e8:	mov	ip, r7
   3a2ec:	str	r0, [sp, #16]
   3a2f0:	str	r7, [sp, #20]
   3a2f4:	str	r8, [r6, #-72]	; 0xffffffb8
   3a2f8:	str	r3, [r6, #-68]	; 0xffffffbc
   3a2fc:	b	3a270 <flatcc_builder_create_offset_vector_direct@@Base+0x8c>
   3a300:	mov	r6, #0
   3a304:	mov	r0, r6
   3a308:	add	sp, sp, #88	; 0x58
   3a30c:	ldrd	r4, [sp]
   3a310:	ldrd	r6, [sp, #8]
   3a314:	ldr	r8, [sp, #16]
   3a318:	add	sp, sp, #20
   3a31c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a320:	ldr	r5, [r4, #136]	; 0x88
   3a324:	sub	r6, r5, r0
   3a328:	cmp	r6, r5
   3a32c:	bge	3a35c <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   3a330:	mov	r2, ip
   3a334:	mov	r3, r6
   3a338:	str	r0, [sp]
   3a33c:	add	r1, sp, #24
   3a340:	ldr	r0, [r4, #36]	; 0x24
   3a344:	ldr	r5, [r4, #44]	; 0x2c
   3a348:	blx	r5
   3a34c:	cmp	r0, #0
   3a350:	streq	r6, [r4, #136]	; 0x88
   3a354:	beq	3a304 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   3a358:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a35c:	movw	r1, #45220	; 0xb0a4
   3a360:	movt	r1, #5
   3a364:	ldr	r3, [pc, #20]	; 3a380 <flatcc_builder_create_offset_vector_direct@@Base+0x19c>
   3a368:	movw	r0, #41608	; 0xa288
   3a36c:	movt	r0, #4
   3a370:	movw	r2, #647	; 0x287
   3a374:	bl	14120 <__assert_fail@plt>
   3a378:	strdeq	sl, [r5], -ip
   3a37c:	strdeq	sl, [r5], -ip
   3a380:	andeq	sl, r5, r0, lsl #19

0003a384 <flatcc_builder_end_offset_vector@@Base>:
   3a384:	ldr	r3, [r0, #32]
   3a388:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a38c:	ldrh	r2, [r3, #14]
   3a390:	strd	r6, [sp, #8]
   3a394:	str	r8, [sp, #16]
   3a398:	str	lr, [sp, #20]
   3a39c:	sub	sp, sp, #88	; 0x58
   3a3a0:	cmp	r2, #5
   3a3a4:	bne	3a58c <flatcc_builder_end_offset_vector@@Base+0x208>
   3a3a8:	ldr	r3, [r3, #20]
   3a3ac:	cmn	r3, #-1073741823	; 0xc0000001
   3a3b0:	bhi	3a4b4 <flatcc_builder_end_offset_vector@@Base+0x130>
   3a3b4:	ldrh	r2, [r0, #128]	; 0x80
   3a3b8:	mov	r4, r0
   3a3bc:	add	r5, sp, #12
   3a3c0:	mov	r1, #1
   3a3c4:	str	r3, [sp, #12]
   3a3c8:	ldr	ip, [r4, #136]	; 0x88
   3a3cc:	str	r1, [sp, #20]
   3a3d0:	ldr	r0, [r0, #16]
   3a3d4:	cmp	r2, #3
   3a3d8:	str	r5, [sp, #24]
   3a3dc:	movls	r2, #4
   3a3e0:	and	r5, ip, #3
   3a3e4:	strhls	r2, [r4, #128]	; 0x80
   3a3e8:	mov	r2, #4
   3a3ec:	lsls	lr, r3, #2
   3a3f0:	moveq	r6, #2
   3a3f4:	str	r2, [sp, #16]
   3a3f8:	str	r2, [sp, #28]
   3a3fc:	beq	3a420 <flatcc_builder_end_offset_vector@@Base+0x9c>
   3a400:	mov	r7, #2
   3a404:	add	r2, lr, r2
   3a408:	mov	r1, r7
   3a40c:	mov	r6, #3
   3a410:	str	r2, [sp, #16]
   3a414:	str	r7, [sp, #20]
   3a418:	str	r0, [sp, #32]
   3a41c:	str	lr, [sp, #36]	; 0x24
   3a420:	cmp	r5, #0
   3a424:	bne	3a48c <flatcc_builder_end_offset_vector@@Base+0x108>
   3a428:	cmp	r3, #0
   3a42c:	beq	3a4dc <flatcc_builder_end_offset_vector@@Base+0x158>
   3a430:	ldr	r3, [r0]
   3a434:	cmp	r3, #0
   3a438:	subne	lr, lr, #4
   3a43c:	movne	r1, #0
   3a440:	beq	3a470 <flatcc_builder_end_offset_vector@@Base+0xec>
   3a444:	sub	r3, r3, #4
   3a448:	cmp	r1, lr
   3a44c:	sub	r3, r3, ip
   3a450:	add	r3, r3, r2
   3a454:	sub	r3, r3, r1
   3a458:	str	r3, [r0]
   3a45c:	beq	3a4d4 <flatcc_builder_end_offset_vector@@Base+0x150>
   3a460:	ldr	r3, [r0, #4]!
   3a464:	add	r1, r1, #4
   3a468:	cmp	r3, #0
   3a46c:	bne	3a444 <flatcc_builder_end_offset_vector@@Base+0xc0>
   3a470:	movw	r1, #45220	; 0xb0a4
   3a474:	movt	r1, #5
   3a478:	ldr	r3, [pc, #328]	; 3a5c8 <flatcc_builder_end_offset_vector@@Base+0x244>
   3a47c:	movw	r0, #41608	; 0xa288
   3a480:	movt	r0, #4
   3a484:	movw	r2, #1463	; 0x5b7
   3a488:	bl	14120 <__assert_fail@plt>
   3a48c:	ldr	r7, [pc, #312]	; 3a5cc <flatcc_builder_end_offset_vector@@Base+0x248>
   3a490:	add	r1, r1, #1
   3a494:	add	r8, sp, #88	; 0x58
   3a498:	add	r1, r8, r1, lsl #3
   3a49c:	add	r2, r2, r5
   3a4a0:	str	r2, [sp, #16]
   3a4a4:	str	r6, [sp, #20]
   3a4a8:	str	r7, [r1, #-72]	; 0xffffffb8
   3a4ac:	str	r5, [r1, #-68]	; 0xffffffbc
   3a4b0:	b	3a428 <flatcc_builder_end_offset_vector@@Base+0xa4>
   3a4b4:	mov	r5, #0
   3a4b8:	mov	r0, r5
   3a4bc:	add	sp, sp, #88	; 0x58
   3a4c0:	ldrd	r4, [sp]
   3a4c4:	ldrd	r6, [sp, #8]
   3a4c8:	ldr	r8, [sp, #16]
   3a4cc:	add	sp, sp, #20
   3a4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   3a4d4:	ldr	r2, [sp, #16]
   3a4d8:	ldr	ip, [r4, #136]	; 0x88
   3a4dc:	sub	r5, ip, r2
   3a4e0:	cmp	r5, ip
   3a4e4:	bge	3a5ac <flatcc_builder_end_offset_vector@@Base+0x228>
   3a4e8:	add	r1, sp, #24
   3a4ec:	mov	r3, r5
   3a4f0:	str	r2, [sp]
   3a4f4:	ldr	r2, [sp, #20]
   3a4f8:	ldr	r0, [r4, #36]	; 0x24
   3a4fc:	ldr	r6, [r4, #44]	; 0x2c
   3a500:	blx	r6
   3a504:	subs	r1, r0, #0
   3a508:	bne	3a5a8 <flatcc_builder_end_offset_vector@@Base+0x224>
   3a50c:	cmp	r5, #0
   3a510:	str	r5, [r4, #136]	; 0x88
   3a514:	beq	3a4b4 <flatcc_builder_end_offset_vector@@Base+0x130>
   3a518:	ldr	r0, [r4, #16]
   3a51c:	ldr	r2, [r4, #20]
   3a520:	bl	14084 <memset@plt>
   3a524:	ldr	r3, [r4, #32]
   3a528:	ldr	r0, [r4, #60]	; 0x3c
   3a52c:	ldr	r2, [r4, #64]	; 0x40
   3a530:	ldr	ip, [r3]
   3a534:	ldmib	r3, {r1, lr}
   3a538:	add	r0, r0, ip
   3a53c:	sub	r2, r2, ip
   3a540:	str	r0, [r4, #16]
   3a544:	cmp	r2, r1
   3a548:	ldrh	r0, [r4, #128]	; 0x80
   3a54c:	movcs	r2, r1
   3a550:	str	lr, [r4, #20]
   3a554:	str	ip, [r4, #28]
   3a558:	ldrh	ip, [r4, #130]	; 0x82
   3a55c:	str	r2, [r4, #24]
   3a560:	ldr	r2, [r4, #156]	; 0x9c
   3a564:	str	r1, [r3, #4]
   3a568:	cmp	r0, ip
   3a56c:	sub	r0, r3, #36	; 0x24
   3a570:	strhcc	ip, [r4, #128]	; 0x80
   3a574:	ldrh	r1, [r3, #12]
   3a578:	sub	r3, r2, #1
   3a57c:	str	r0, [r4, #32]
   3a580:	strh	r1, [r4, #130]	; 0x82
   3a584:	str	r3, [r4, #156]	; 0x9c
   3a588:	b	3a4b8 <flatcc_builder_end_offset_vector@@Base+0x134>
   3a58c:	movw	r1, #45220	; 0xb0a4
   3a590:	movt	r1, #5
   3a594:	ldr	r3, [pc, #52]	; 3a5d0 <flatcc_builder_end_offset_vector@@Base+0x24c>
   3a598:	movw	r0, #45692	; 0xb27c
   3a59c:	movt	r0, #5
   3a5a0:	movw	r2, #1480	; 0x5c8
   3a5a4:	bl	14120 <__assert_fail@plt>
   3a5a8:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3a5ac:	movw	r1, #45220	; 0xb0a4
   3a5b0:	movt	r1, #5
   3a5b4:	ldr	r3, [pc, #24]	; 3a5d4 <flatcc_builder_end_offset_vector@@Base+0x250>
   3a5b8:	movw	r0, #41608	; 0xa288
   3a5bc:	movt	r0, #4
   3a5c0:	movw	r2, #647	; 0x287
   3a5c4:	bl	14120 <__assert_fail@plt>
   3a5c8:	strdeq	sl, [r5], -ip
   3a5cc:	strdeq	sl, [r5], -ip
   3a5d0:	andeq	sl, r5, r0, ror #27
   3a5d4:	andeq	sl, r5, r0, lsl #19

0003a5d8 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3a5d8:	ldr	r2, [r0, #32]
   3a5dc:	strd	r4, [sp, #-16]!
   3a5e0:	ldrh	ip, [r2, #14]
   3a5e4:	str	r6, [sp, #8]
   3a5e8:	str	lr, [sp, #12]
   3a5ec:	cmp	ip, #5
   3a5f0:	bne	3a6a8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd0>
   3a5f4:	ldr	r2, [r2, #20]
   3a5f8:	cmn	r2, #-1073741823	; 0xc0000001
   3a5fc:	bhi	3a618 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
   3a600:	mov	r3, r1
   3a604:	ldr	r1, [r0, #16]
   3a608:	mov	r4, r0
   3a60c:	bl	36ad4 <flatcc_builder_default_alloc@@Base+0x388>
   3a610:	subs	r5, r0, #0
   3a614:	bne	3a630 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   3a618:	mov	r5, #0
   3a61c:	mov	r0, r5
   3a620:	ldrd	r4, [sp]
   3a624:	ldr	r6, [sp, #8]
   3a628:	add	sp, sp, #12
   3a62c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a630:	mov	r1, #0
   3a634:	ldr	r0, [r4, #16]
   3a638:	ldr	r2, [r4, #20]
   3a63c:	bl	14084 <memset@plt>
   3a640:	ldr	r3, [r4, #32]
   3a644:	ldr	r0, [r4, #60]	; 0x3c
   3a648:	ldr	r2, [r4, #64]	; 0x40
   3a64c:	ldr	ip, [r3]
   3a650:	ldmib	r3, {r1, lr}
   3a654:	add	r0, r0, ip
   3a658:	sub	r2, r2, ip
   3a65c:	str	r0, [r4, #16]
   3a660:	cmp	r2, r1
   3a664:	ldrh	r0, [r4, #128]	; 0x80
   3a668:	movcs	r2, r1
   3a66c:	str	lr, [r4, #20]
   3a670:	str	ip, [r4, #28]
   3a674:	ldrh	ip, [r4, #130]	; 0x82
   3a678:	str	r2, [r4, #24]
   3a67c:	ldr	r2, [r4, #156]	; 0x9c
   3a680:	str	r1, [r3, #4]
   3a684:	cmp	r0, ip
   3a688:	sub	r0, r3, #36	; 0x24
   3a68c:	strhcc	ip, [r4, #128]	; 0x80
   3a690:	ldrh	r1, [r3, #12]
   3a694:	sub	r3, r2, #1
   3a698:	str	r0, [r4, #32]
   3a69c:	strh	r1, [r4, #130]	; 0x82
   3a6a0:	str	r3, [r4, #156]	; 0x9c
   3a6a4:	b	3a61c <flatcc_builder_end_offset_vector_for_unions@@Base+0x44>
   3a6a8:	movw	r1, #45220	; 0xb0a4
   3a6ac:	movt	r1, #5
   3a6b0:	ldr	r3, [pc, #12]	; 3a6c4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xec>
   3a6b4:	movw	r0, #45692	; 0xb27c
   3a6b8:	movt	r0, #5
   3a6bc:	movw	r2, #1493	; 0x5d5
   3a6c0:	bl	14120 <__assert_fail@plt>
   3a6c4:	andeq	sl, r5, ip, lsl #30

0003a6c8 <flatcc_builder_offset_vector_edit@@Base>:
   3a6c8:	ldr	r0, [r0, #16]
   3a6cc:	bx	lr

0003a6d0 <flatcc_builder_offset_vector_count@@Base>:
   3a6d0:	ldr	r3, [r0, #32]
   3a6d4:	ldr	r0, [r3, #20]
   3a6d8:	bx	lr

0003a6dc <flatcc_builder_create_union_vector@@Base>:
   3a6dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3a6e0:	mov	r4, r1
   3a6e4:	mov	r1, #4
   3a6e8:	strd	r6, [sp, #8]
   3a6ec:	mov	r6, r0
   3a6f0:	mov	r0, r4
   3a6f4:	strd	r8, [sp, #16]
   3a6f8:	mov	r5, r2
   3a6fc:	mov	r7, r3
   3a700:	str	sl, [sp, #24]
   3a704:	str	lr, [sp, #28]
   3a708:	sub	sp, sp, #8
   3a70c:	bl	369b0 <flatcc_builder_default_alloc@@Base+0x264>
   3a710:	cmp	r0, #0
   3a714:	bne	3a880 <flatcc_builder_create_union_vector@@Base+0x1a4>
   3a718:	ldr	ip, [r4, #28]
   3a71c:	mov	lr, #4
   3a720:	mov	r8, #5
   3a724:	mvn	r9, #3
   3a728:	ldr	r3, [r4, #32]
   3a72c:	ldr	r2, [r4, #64]	; 0x40
   3a730:	ldr	r1, [r4, #60]	; 0x3c
   3a734:	strh	r8, [r3, #14]
   3a738:	str	lr, [r3, #16]
   3a73c:	sub	r2, r2, ip
   3a740:	str	r0, [r3, #20]
   3a744:	mov	r0, r4
   3a748:	cmn	r2, #4
   3a74c:	add	r1, r1, ip
   3a750:	mvnhi	r2, #3
   3a754:	str	r1, [r4, #16]
   3a758:	mov	r1, r7
   3a75c:	str	r2, [r4, #24]
   3a760:	str	r9, [r3, #4]
   3a764:	bl	38258 <flatcc_builder_extend_offset_vector@@Base>
   3a768:	cmp	r0, #0
   3a76c:	beq	3a880 <flatcc_builder_create_union_vector@@Base+0x1a4>
   3a770:	ldr	r8, [r4, #20]
   3a774:	ldr	r3, [r4, #24]
   3a778:	add	r2, r7, r8
   3a77c:	cmp	r2, r3
   3a780:	str	r2, [r4, #20]
   3a784:	bcs	3a8ac <flatcc_builder_create_union_vector@@Base+0x1d0>
   3a788:	ldr	r1, [r4, #16]
   3a78c:	adds	r8, r1, r8
   3a790:	beq	3a880 <flatcc_builder_create_union_vector@@Base+0x1a4>
   3a794:	cmp	r7, #0
   3a798:	beq	3a7c8 <flatcc_builder_create_union_vector@@Base+0xec>
   3a79c:	add	lr, r5, r7, lsl #3
   3a7a0:	mov	r2, r5
   3a7a4:	sub	r0, r8, #1
   3a7a8:	sub	r3, r1, #4
   3a7ac:	ldrb	ip, [r2]
   3a7b0:	add	r2, r2, #8
   3a7b4:	strb	ip, [r0, #1]!
   3a7b8:	ldr	ip, [r2, #-4]
   3a7bc:	cmp	lr, r2
   3a7c0:	str	ip, [r3, #4]!
   3a7c4:	bne	3a7ac <flatcc_builder_create_union_vector@@Base+0xd0>
   3a7c8:	mov	r3, r8
   3a7cc:	mov	r2, r7
   3a7d0:	mov	r0, r4
   3a7d4:	bl	36ad4 <flatcc_builder_default_alloc@@Base+0x388>
   3a7d8:	subs	r5, r0, #0
   3a7dc:	beq	3a90c <flatcc_builder_create_union_vector@@Base+0x230>
   3a7e0:	mvn	ip, #0
   3a7e4:	mov	r3, #1
   3a7e8:	mov	r2, r7
   3a7ec:	mov	r1, r8
   3a7f0:	mov	r0, r4
   3a7f4:	stm	sp, {r3, ip}
   3a7f8:	bl	39e64 <flatcc_builder_create_vector@@Base>
   3a7fc:	mov	r7, r0
   3a800:	mov	r1, #0
   3a804:	ldr	r0, [r4, #16]
   3a808:	ldr	r2, [r4, #20]
   3a80c:	bl	14084 <memset@plt>
   3a810:	ldr	r3, [r4, #32]
   3a814:	str	r7, [r6]
   3a818:	ldr	r0, [r4, #60]	; 0x3c
   3a81c:	str	r5, [r6, #4]
   3a820:	ldr	r2, [r4, #64]	; 0x40
   3a824:	ldr	ip, [r3]
   3a828:	ldmib	r3, {r1, lr}
   3a82c:	add	r0, r0, ip
   3a830:	sub	r2, r2, ip
   3a834:	str	r0, [r4, #16]
   3a838:	cmp	r2, r1
   3a83c:	ldrh	r0, [r4, #128]	; 0x80
   3a840:	movcs	r2, r1
   3a844:	str	lr, [r4, #20]
   3a848:	str	ip, [r4, #28]
   3a84c:	ldrh	ip, [r4, #130]	; 0x82
   3a850:	str	r2, [r4, #24]
   3a854:	ldr	r2, [r4, #156]	; 0x9c
   3a858:	str	r1, [r3, #4]
   3a85c:	cmp	r0, ip
   3a860:	sub	r0, r3, #36	; 0x24
   3a864:	strhcc	ip, [r4, #128]	; 0x80
   3a868:	ldrh	r1, [r3, #12]
   3a86c:	sub	r3, r2, #1
   3a870:	str	r0, [r4, #32]
   3a874:	strh	r1, [r4, #130]	; 0x82
   3a878:	str	r3, [r4, #156]	; 0x9c
   3a87c:	b	3a88c <flatcc_builder_create_union_vector@@Base+0x1b0>
   3a880:	mov	r3, #0
   3a884:	str	r3, [r6]
   3a888:	str	r3, [r6, #4]
   3a88c:	mov	r0, r6
   3a890:	add	sp, sp, #8
   3a894:	ldrd	r4, [sp]
   3a898:	ldrd	r6, [sp, #8]
   3a89c:	ldrd	r8, [sp, #16]
   3a8a0:	ldr	sl, [sp, #24]
   3a8a4:	add	sp, sp, #28
   3a8a8:	pop	{pc}		; (ldr pc, [sp], #4)
   3a8ac:	ldr	ip, [r4, #28]
   3a8b0:	mov	r0, #1
   3a8b4:	add	r1, r4, #60	; 0x3c
   3a8b8:	mov	r3, r0
   3a8bc:	str	r0, [sp]
   3a8c0:	ldr	sl, [r4, #48]	; 0x30
   3a8c4:	add	ip, ip, r0
   3a8c8:	ldr	r0, [r4, #40]	; 0x28
   3a8cc:	add	r2, ip, r2
   3a8d0:	blx	sl
   3a8d4:	cmp	r0, #0
   3a8d8:	bne	3a880 <flatcc_builder_create_union_vector@@Base+0x1a4>
   3a8dc:	ldr	r1, [r4, #28]
   3a8e0:	ldr	r2, [r4, #32]
   3a8e4:	ldr	r3, [r4, #64]	; 0x40
   3a8e8:	ldr	r0, [r4, #60]	; 0x3c
   3a8ec:	sub	r3, r3, r1
   3a8f0:	cmn	r3, #4
   3a8f4:	movhi	r3, r9
   3a8f8:	add	r1, r0, r1
   3a8fc:	str	r1, [r4, #16]
   3a900:	str	r3, [r4, #24]
   3a904:	str	r9, [r2, #4]
   3a908:	b	3a78c <flatcc_builder_create_union_vector@@Base+0xb0>
   3a90c:	mov	r7, r5
   3a910:	b	3a800 <flatcc_builder_create_union_vector@@Base+0x124>

0003a914 <flatcc_builder_create_union_vector_direct@@Base>:
   3a914:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a918:	strd	r6, [sp, #8]
   3a91c:	mov	r6, r0
   3a920:	str	r8, [sp, #16]
   3a924:	str	lr, [sp, #20]
   3a928:	sub	sp, sp, #88	; 0x58
   3a92c:	ldr	r4, [sp, #112]	; 0x70
   3a930:	cmn	r4, #-1073741823	; 0xc0000001
   3a934:	bhi	3aa08 <flatcc_builder_create_union_vector_direct@@Base+0xf4>
   3a938:	mov	r5, r1
   3a93c:	mov	r8, r2
   3a940:	mov	r1, r3
   3a944:	mov	r0, r5
   3a948:	mov	r3, r2
   3a94c:	mov	r2, r4
   3a950:	bl	36ad4 <flatcc_builder_default_alloc@@Base+0x388>
   3a954:	subs	r7, r0, #0
   3a958:	beq	3aa08 <flatcc_builder_create_union_vector_direct@@Base+0xf4>
   3a95c:	ldrh	r3, [r5, #128]	; 0x80
   3a960:	mov	r2, #1
   3a964:	mov	r1, #4
   3a968:	str	r4, [sp, #12]
   3a96c:	ldr	r0, [r5, #136]	; 0x88
   3a970:	str	r1, [sp, #16]
   3a974:	str	r1, [sp, #28]
   3a978:	cmp	r3, #3
   3a97c:	movls	r3, #4
   3a980:	strhls	r3, [r5, #128]	; 0x80
   3a984:	add	r3, sp, #12
   3a988:	cmp	r4, #0
   3a98c:	moveq	ip, #2
   3a990:	strd	r2, [sp, #20]
   3a994:	sub	r3, r0, r4
   3a998:	and	r3, r3, #3
   3a99c:	bne	3aa30 <flatcc_builder_create_union_vector_direct@@Base+0x11c>
   3a9a0:	cmp	r3, #0
   3a9a4:	beq	3a9d0 <flatcc_builder_create_union_vector_direct@@Base+0xbc>
   3a9a8:	ldr	r4, [pc, #196]	; 3aa74 <flatcc_builder_create_union_vector_direct@@Base+0x160>
   3a9ac:	add	r2, r2, #1
   3a9b0:	add	lr, sp, #88	; 0x58
   3a9b4:	add	lr, lr, r2, lsl #3
   3a9b8:	add	r1, r1, r3
   3a9bc:	mov	r2, ip
   3a9c0:	str	r1, [sp, #16]
   3a9c4:	str	ip, [sp, #20]
   3a9c8:	str	r4, [lr, #-72]	; 0xffffffb8
   3a9cc:	str	r3, [lr, #-68]	; 0xffffffbc
   3a9d0:	sub	r4, r0, r1
   3a9d4:	cmp	r0, r4
   3a9d8:	ble	3aa54 <flatcc_builder_create_union_vector_direct@@Base+0x140>
   3a9dc:	mov	r3, r4
   3a9e0:	str	r1, [sp]
   3a9e4:	add	r1, sp, #24
   3a9e8:	ldr	r0, [r5, #36]	; 0x24
   3a9ec:	ldr	r8, [r5, #44]	; 0x2c
   3a9f0:	blx	r8
   3a9f4:	cmp	r0, #0
   3a9f8:	bne	3aa70 <flatcc_builder_create_union_vector_direct@@Base+0x15c>
   3a9fc:	stm	r6, {r4, r7}
   3aa00:	str	r4, [r5, #136]	; 0x88
   3aa04:	b	3aa14 <flatcc_builder_create_union_vector_direct@@Base+0x100>
   3aa08:	mov	r3, #0
   3aa0c:	str	r3, [r6]
   3aa10:	str	r3, [r6, #4]
   3aa14:	mov	r0, r6
   3aa18:	add	sp, sp, #88	; 0x58
   3aa1c:	ldrd	r4, [sp]
   3aa20:	ldrd	r6, [sp, #8]
   3aa24:	ldr	r8, [sp, #16]
   3aa28:	add	sp, sp, #20
   3aa2c:	pop	{pc}		; (ldr pc, [sp], #4)
   3aa30:	mov	lr, #2
   3aa34:	add	r1, r4, r1
   3aa38:	mov	r2, lr
   3aa3c:	mov	ip, #3
   3aa40:	str	r1, [sp, #16]
   3aa44:	str	lr, [sp, #20]
   3aa48:	str	r8, [sp, #32]
   3aa4c:	str	r4, [sp, #36]	; 0x24
   3aa50:	b	3a9a0 <flatcc_builder_create_union_vector_direct@@Base+0x8c>
   3aa54:	movw	r1, #45220	; 0xb0a4
   3aa58:	movt	r1, #5
   3aa5c:	ldr	r3, [pc, #20]	; 3aa78 <flatcc_builder_create_union_vector_direct@@Base+0x164>
   3aa60:	movw	r0, #41608	; 0xa288
   3aa64:	movt	r0, #4
   3aa68:	movw	r2, #647	; 0x287
   3aa6c:	bl	14120 <__assert_fail@plt>
   3aa70:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3aa74:	strdeq	sl, [r5], -ip
   3aa78:	andeq	sl, r5, r0, lsl #19

0003aa7c <flatcc_builder_start_union_vector@@Base>:
   3aa7c:	ldrd	r2, [r0, #156]	; 0x9c
   3aa80:	strd	r4, [sp, #-16]!
   3aa84:	mov	r4, r0
   3aa88:	str	r6, [sp, #8]
   3aa8c:	str	lr, [sp, #12]
   3aa90:	sub	sp, sp, #8
   3aa94:	add	r1, r2, #1
   3aa98:	cmp	r1, r3
   3aa9c:	str	r1, [r0, #156]	; 0x9c
   3aaa0:	ble	3abbc <flatcc_builder_start_union_vector@@Base+0x140>
   3aaa4:	ldr	r3, [r0, #176]	; 0xb0
   3aaa8:	cmp	r3, #0
   3aaac:	cmpgt	r1, r3
   3aab0:	movgt	r3, #1
   3aab4:	movle	r3, #0
   3aab8:	bgt	3abcc <flatcc_builder_start_union_vector@@Base+0x150>
   3aabc:	add	r2, r2, r2, lsl #3
   3aac0:	ldr	r1, [r0, #88]	; 0x58
   3aac4:	lsl	r5, r2, #2
   3aac8:	add	r2, r5, #36	; 0x24
   3aacc:	cmp	r2, r1
   3aad0:	bls	3aaf4 <flatcc_builder_start_union_vector@@Base+0x78>
   3aad4:	mov	ip, #4
   3aad8:	add	r1, r0, #84	; 0x54
   3aadc:	ldr	r0, [r0, #40]	; 0x28
   3aae0:	str	ip, [sp]
   3aae4:	ldr	r6, [r4, #48]	; 0x30
   3aae8:	blx	r6
   3aaec:	cmp	r0, #0
   3aaf0:	bne	3abd4 <flatcc_builder_start_union_vector@@Base+0x158>
   3aaf4:	ldr	r3, [r4, #84]	; 0x54
   3aaf8:	add	r3, r3, r5
   3aafc:	cmp	r3, #0
   3ab00:	str	r3, [r4, #32]
   3ab04:	beq	3abcc <flatcc_builder_start_union_vector@@Base+0x150>
   3ab08:	ldr	r2, [r4, #88]	; 0x58
   3ab0c:	movw	r0, #36409	; 0x8e39
   3ab10:	movt	r0, #14563	; 0x38e3
   3ab14:	ldr	r1, [r4, #176]	; 0xb0
   3ab18:	umull	r0, r2, r0, r2
   3ab1c:	lsr	r2, r2, #3
   3ab20:	cmp	r1, #0
   3ab24:	cmpgt	r2, r1
   3ab28:	movgt	r2, r1
   3ab2c:	str	r2, [r4, #160]	; 0xa0
   3ab30:	ldr	r2, [r4, #20]
   3ab34:	mvn	r5, #3
   3ab38:	mov	lr, #0
   3ab3c:	ldr	r6, [r4, #28]
   3ab40:	ldrh	r0, [r4, #130]	; 0x82
   3ab44:	ldr	ip, [r4, #60]	; 0x3c
   3ab48:	ldr	r1, [r4, #64]	; 0x40
   3ab4c:	str	r2, [r3, #8]
   3ab50:	add	r2, r2, r6
   3ab54:	add	r2, r2, #7
   3ab58:	strh	r0, [r3, #12]
   3ab5c:	mov	r0, #4
   3ab60:	bic	r2, r2, #7
   3ab64:	add	ip, ip, r2
   3ab68:	strh	r0, [r4, #130]	; 0x82
   3ab6c:	mov	r0, lr
   3ab70:	sub	r1, r1, r2
   3ab74:	str	r6, [r3]
   3ab78:	mov	r6, #8
   3ab7c:	cmp	r1, r5
   3ab80:	str	lr, [r4, #20]
   3ab84:	movhi	r1, r5
   3ab88:	str	r2, [r4, #28]
   3ab8c:	mov	r2, #7
   3ab90:	strh	r2, [r3, #14]
   3ab94:	str	r6, [r3, #16]
   3ab98:	str	lr, [r3, #20]
   3ab9c:	str	ip, [r4, #16]
   3aba0:	str	r1, [r4, #24]
   3aba4:	str	r5, [r3, #4]
   3aba8:	add	sp, sp, #8
   3abac:	ldrd	r4, [sp]
   3abb0:	ldr	r6, [sp, #8]
   3abb4:	add	sp, sp, #12
   3abb8:	pop	{pc}		; (ldr pc, [sp], #4)
   3abbc:	ldr	r3, [r0, #32]
   3abc0:	add	r3, r3, #36	; 0x24
   3abc4:	str	r3, [r0, #32]
   3abc8:	b	3ab30 <flatcc_builder_start_union_vector@@Base+0xb4>
   3abcc:	mvn	r0, #0
   3abd0:	b	3aba8 <flatcc_builder_start_union_vector@@Base+0x12c>
   3abd4:	bl	36870 <flatcc_builder_default_alloc@@Base+0x124>

0003abd8 <flatcc_builder_end_union_vector@@Base>:
   3abd8:	ldr	r3, [r1, #32]
   3abdc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3abe0:	ldrh	r2, [r3, #14]
   3abe4:	strd	r6, [sp, #8]
   3abe8:	strd	r8, [sp, #16]
   3abec:	str	lr, [sp, #24]
   3abf0:	sub	sp, sp, #12
   3abf4:	cmp	r2, #7
   3abf8:	bne	3adb4 <flatcc_builder_end_union_vector@@Base+0x1dc>
   3abfc:	ldr	r5, [r3, #20]
   3ac00:	mov	r4, r1
   3ac04:	mov	r6, r0
   3ac08:	ldr	r8, [r1, #20]
   3ac0c:	ldr	r3, [r1, #24]
   3ac10:	lsl	r7, r5, #2
   3ac14:	add	r2, r7, r5
   3ac18:	add	r2, r2, r8
   3ac1c:	cmp	r2, r3
   3ac20:	str	r2, [r1, #20]
   3ac24:	bcs	3ad34 <flatcc_builder_end_union_vector@@Base+0x15c>
   3ac28:	ldr	r3, [r1, #16]
   3ac2c:	adds	r1, r3, r8
   3ac30:	beq	3ad9c <flatcc_builder_end_union_vector@@Base+0x1c4>
   3ac34:	cmp	r5, #0
   3ac38:	add	r7, r1, r7
   3ac3c:	subne	r0, r7, #1
   3ac40:	addne	lr, r3, r5, lsl #3
   3ac44:	subne	r2, r1, #4
   3ac48:	beq	3ac68 <flatcc_builder_end_union_vector@@Base+0x90>
   3ac4c:	ldrb	ip, [r3]
   3ac50:	add	r3, r3, #8
   3ac54:	strb	ip, [r0, #1]!
   3ac58:	ldr	ip, [r3, #-4]
   3ac5c:	cmp	lr, r3
   3ac60:	str	ip, [r2, #4]!
   3ac64:	bne	3ac4c <flatcc_builder_end_union_vector@@Base+0x74>
   3ac68:	mov	r3, r7
   3ac6c:	mov	r2, r5
   3ac70:	mov	r0, r4
   3ac74:	bl	36ad4 <flatcc_builder_default_alloc@@Base+0x388>
   3ac78:	subs	r8, r0, #0
   3ac7c:	beq	3adac <flatcc_builder_end_union_vector@@Base+0x1d4>
   3ac80:	mvn	ip, #0
   3ac84:	mov	r3, #1
   3ac88:	mov	r2, r5
   3ac8c:	mov	r1, r7
   3ac90:	mov	r0, r4
   3ac94:	stm	sp, {r3, ip}
   3ac98:	bl	39e64 <flatcc_builder_create_vector@@Base>
   3ac9c:	mov	r5, r0
   3aca0:	mov	r1, #0
   3aca4:	ldr	r0, [r4, #16]
   3aca8:	ldr	r2, [r4, #20]
   3acac:	bl	14084 <memset@plt>
   3acb0:	ldr	r3, [r4, #32]
   3acb4:	stm	r6, {r5, r8}
   3acb8:	ldr	r0, [r4, #60]	; 0x3c
   3acbc:	ldr	r2, [r4, #64]	; 0x40
   3acc0:	ldr	ip, [r3]
   3acc4:	ldmib	r3, {r1, lr}
   3acc8:	add	r0, r0, ip
   3accc:	sub	r2, r2, ip
   3acd0:	str	r0, [r4, #16]
   3acd4:	cmp	r2, r1
   3acd8:	ldrh	r0, [r4, #128]	; 0x80
   3acdc:	movcs	r2, r1
   3ace0:	str	lr, [r4, #20]
   3ace4:	str	ip, [r4, #28]
   3ace8:	ldrh	ip, [r4, #130]	; 0x82
   3acec:	str	r2, [r4, #24]
   3acf0:	ldr	r2, [r4, #156]	; 0x9c
   3acf4:	str	r1, [r3, #4]
   3acf8:	cmp	r0, ip
   3acfc:	sub	r0, r3, #36	; 0x24
   3ad00:	strhcc	ip, [r4, #128]	; 0x80
   3ad04:	ldrh	r1, [r3, #12]
   3ad08:	sub	r3, r2, #1
   3ad0c:	str	r0, [r4, #32]
   3ad10:	strh	r1, [r4, #130]	; 0x82
   3ad14:	str	r3, [r4, #156]	; 0x9c
   3ad18:	mov	r0, r6
   3ad1c:	add	sp, sp, #12
   3ad20:	ldrd	r4, [sp]
   3ad24:	ldrd	r6, [sp, #8]
   3ad28:	ldrd	r8, [sp, #16]
   3ad2c:	add	sp, sp, #24
   3ad30:	pop	{pc}		; (ldr pc, [sp], #4)
   3ad34:	ldr	ip, [r4, #28]
   3ad38:	mov	r0, #1
   3ad3c:	add	r1, r1, #60	; 0x3c
   3ad40:	mov	r3, r0
   3ad44:	str	r0, [sp]
   3ad48:	ldr	r9, [r4, #48]	; 0x30
   3ad4c:	add	ip, ip, r0
   3ad50:	ldr	r0, [r4, #40]	; 0x28
   3ad54:	add	r2, ip, r2
   3ad58:	blx	r9
   3ad5c:	cmp	r0, #0
   3ad60:	bne	3ad9c <flatcc_builder_end_union_vector@@Base+0x1c4>
   3ad64:	ldr	r1, [r4, #28]
   3ad68:	ldr	r3, [r4, #60]	; 0x3c
   3ad6c:	ldr	r2, [r4, #64]	; 0x40
   3ad70:	add	r3, r3, r1
   3ad74:	sub	r2, r2, r1
   3ad78:	mvn	r1, #3
   3ad7c:	str	r3, [r4, #16]
   3ad80:	cmn	r2, #4
   3ad84:	mvnhi	r2, #3
   3ad88:	str	r2, [r4, #24]
   3ad8c:	ldr	r2, [r4, #32]
   3ad90:	str	r1, [r2, #4]
   3ad94:	adds	r1, r3, r8
   3ad98:	bne	3ac34 <flatcc_builder_end_union_vector@@Base+0x5c>
   3ad9c:	mov	r3, #0
   3ada0:	str	r3, [r6]
   3ada4:	str	r3, [r6, #4]
   3ada8:	b	3ad18 <flatcc_builder_end_union_vector@@Base+0x140>
   3adac:	mov	r5, r8
   3adb0:	b	3aca0 <flatcc_builder_end_union_vector@@Base+0xc8>
   3adb4:	movw	r1, #45220	; 0xb0a4
   3adb8:	movt	r1, #5
   3adbc:	ldr	r3, [pc, #12]	; 3add0 <flatcc_builder_end_union_vector@@Base+0x1f8>
   3adc0:	movw	r0, #46000	; 0xb3b0
   3adc4:	movt	r0, #5
   3adc8:	movw	r2, #1617	; 0x651
   3adcc:	bl	14120 <__assert_fail@plt>
   3add0:	andeq	sl, r5, r8, lsr pc

0003add4 <flatcc_builder_union_vector_edit@@Base>:
   3add4:	ldr	r0, [r0, #16]
   3add8:	bx	lr

0003addc <flatcc_builder_union_vector_count@@Base>:
   3addc:	ldr	r3, [r0, #32]
   3ade0:	ldr	r0, [r3, #20]
   3ade4:	bx	lr

0003ade8 <flatcc_builder_extend_union_vector@@Base>:
   3ade8:	ldr	ip, [r0, #32]
   3adec:	strd	r4, [sp, #-20]!	; 0xffffffec
   3adf0:	mov	r4, r0
   3adf4:	ldr	r3, [ip, #20]
   3adf8:	strd	r6, [sp, #8]
   3adfc:	str	lr, [sp, #16]
   3ae00:	sub	sp, sp, #12
   3ae04:	adds	r3, r1, r3
   3ae08:	movcs	r2, #1
   3ae0c:	movcc	r2, #0
   3ae10:	cmn	r3, #-536870911	; 0xe0000001
   3ae14:	movls	r0, #0
   3ae18:	movhi	r0, #1
   3ae1c:	orrs	r5, r2, r0
   3ae20:	bne	3aec8 <flatcc_builder_extend_union_vector@@Base+0xe0>
   3ae24:	ldr	r6, [r4, #20]
   3ae28:	str	r3, [ip, #20]
   3ae2c:	ldr	r3, [r4, #24]
   3ae30:	add	r2, r6, r1, lsl #3
   3ae34:	cmp	r2, r3
   3ae38:	str	r2, [r4, #20]
   3ae3c:	bcs	3ae5c <flatcc_builder_extend_union_vector@@Base+0x74>
   3ae40:	ldr	r0, [r4, #16]
   3ae44:	add	r0, r0, r6
   3ae48:	add	sp, sp, #12
   3ae4c:	ldrd	r4, [sp]
   3ae50:	ldrd	r6, [sp, #8]
   3ae54:	add	sp, sp, #16
   3ae58:	pop	{pc}		; (ldr pc, [sp], #4)
   3ae5c:	ldr	ip, [r4, #28]
   3ae60:	mov	r0, #1
   3ae64:	add	r1, r4, #60	; 0x3c
   3ae68:	mov	r3, r0
   3ae6c:	str	r0, [sp]
   3ae70:	ldr	r7, [r4, #48]	; 0x30
   3ae74:	add	ip, ip, r0
   3ae78:	ldr	r0, [r4, #40]	; 0x28
   3ae7c:	add	r2, ip, r2
   3ae80:	blx	r7
   3ae84:	cmp	r0, #0
   3ae88:	bne	3aec0 <flatcc_builder_extend_union_vector@@Base+0xd8>
   3ae8c:	ldr	r2, [r4, #28]
   3ae90:	ldr	r0, [r4, #60]	; 0x3c
   3ae94:	ldr	r3, [r4, #64]	; 0x40
   3ae98:	add	r0, r0, r2
   3ae9c:	sub	r3, r3, r2
   3aea0:	mvn	r2, #3
   3aea4:	str	r0, [r4, #16]
   3aea8:	cmn	r3, #4
   3aeac:	mvnhi	r3, #3
   3aeb0:	str	r3, [r4, #24]
   3aeb4:	ldr	r3, [r4, #32]
   3aeb8:	str	r2, [r3, #4]
   3aebc:	b	3ae44 <flatcc_builder_extend_union_vector@@Base+0x5c>
   3aec0:	mov	r0, r5
   3aec4:	b	3ae48 <flatcc_builder_extend_union_vector@@Base+0x60>
   3aec8:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>

0003aecc <flatcc_builder_truncate_union_vector@@Base>:
   3aecc:	mov	r3, r0
   3aed0:	ldr	r0, [r0, #32]
   3aed4:	str	r4, [sp, #-8]!
   3aed8:	ldrh	r2, [r0, #14]
   3aedc:	str	lr, [sp, #4]
   3aee0:	cmp	r2, #7
   3aee4:	bne	3af34 <flatcc_builder_truncate_union_vector@@Base+0x68>
   3aee8:	mov	lr, r1
   3aeec:	ldr	r1, [r0, #20]
   3aef0:	cmp	r1, lr
   3aef4:	bcc	3af50 <flatcc_builder_truncate_union_vector@@Base+0x84>
   3aef8:	ldr	r2, [r0, #16]
   3aefc:	sub	ip, r1, lr
   3af00:	mov	r1, #0
   3af04:	str	ip, [r0, #20]
   3af08:	ldr	r0, [r3, #16]
   3af0c:	ldr	ip, [r3, #20]
   3af10:	mul	r2, r2, lr
   3af14:	sub	ip, ip, r2
   3af18:	add	r0, r0, ip
   3af1c:	str	ip, [r3, #20]
   3af20:	bl	14084 <memset@plt>
   3af24:	ldr	r4, [sp]
   3af28:	add	sp, sp, #4
   3af2c:	mov	r0, #0
   3af30:	pop	{pc}		; (ldr pc, [sp], #4)
   3af34:	movw	r1, #45220	; 0xb0a4
   3af38:	movt	r1, #5
   3af3c:	ldr	r3, [pc, #40]	; 3af6c <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3af40:	movw	r0, #46000	; 0xb3b0
   3af44:	movt	r0, #5
   3af48:	movw	r2, #1665	; 0x681
   3af4c:	bl	14120 <__assert_fail@plt>
   3af50:	movw	r1, #45220	; 0xb0a4
   3af54:	movt	r1, #5
   3af58:	ldr	r3, [pc, #12]	; 3af6c <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3af5c:	movw	r0, #45780	; 0xb2d4
   3af60:	movt	r0, #5
   3af64:	movw	r2, #1666	; 0x682
   3af68:	bl	14120 <__assert_fail@plt>
   3af6c:	andeq	sl, r5, r8, asr pc

0003af70 <flatcc_builder_union_vector_push@@Base>:
   3af70:	strd	r4, [sp, #-20]!	; 0xffffffec
   3af74:	strd	r6, [sp, #8]
   3af78:	str	lr, [sp, #16]
   3af7c:	sub	sp, sp, #20
   3af80:	add	r3, sp, #16
   3af84:	stmdb	r3, {r1, r2}
   3af88:	ldr	r2, [r0, #32]
   3af8c:	ldrh	r3, [r2, #14]
   3af90:	cmp	r3, #7
   3af94:	bne	3b058 <flatcc_builder_union_vector_push@@Base+0xe8>
   3af98:	ldr	r3, [r2, #20]
   3af9c:	cmn	r3, #-536870911	; 0xe0000001
   3afa0:	beq	3b050 <flatcc_builder_union_vector_push@@Base+0xe0>
   3afa4:	ldr	r5, [r0, #20]
   3afa8:	add	r3, r3, #1
   3afac:	mov	r4, r0
   3afb0:	ldr	r1, [r0, #24]
   3afb4:	str	r3, [r2, #20]
   3afb8:	add	r3, r5, #8
   3afbc:	cmp	r3, r1
   3afc0:	str	r3, [r0, #20]
   3afc4:	bcs	3afec <flatcc_builder_union_vector_push@@Base+0x7c>
   3afc8:	ldr	r3, [r0, #16]
   3afcc:	adds	r0, r3, r5
   3afd0:	ldrdne	r6, [sp, #8]
   3afd4:	strdne	r6, [r3, r5]
   3afd8:	add	sp, sp, #20
   3afdc:	ldrd	r4, [sp]
   3afe0:	ldrd	r6, [sp, #8]
   3afe4:	add	sp, sp, #16
   3afe8:	pop	{pc}		; (ldr pc, [sp], #4)
   3afec:	ldr	r2, [r4, #28]
   3aff0:	mov	r0, #1
   3aff4:	add	r1, r4, #60	; 0x3c
   3aff8:	mov	r3, r0
   3affc:	str	r0, [sp]
   3b000:	ldr	r0, [r4, #40]	; 0x28
   3b004:	add	r2, r5, r2
   3b008:	ldr	r6, [r4, #48]	; 0x30
   3b00c:	add	r2, r2, #9
   3b010:	blx	r6
   3b014:	cmp	r0, #0
   3b018:	bne	3b050 <flatcc_builder_union_vector_push@@Base+0xe0>
   3b01c:	ldr	r1, [r4, #28]
   3b020:	ldr	r3, [r4, #60]	; 0x3c
   3b024:	ldr	r2, [r4, #64]	; 0x40
   3b028:	add	r3, r3, r1
   3b02c:	sub	r2, r2, r1
   3b030:	mvn	r1, #3
   3b034:	str	r3, [r4, #16]
   3b038:	cmn	r2, #4
   3b03c:	mvnhi	r2, #3
   3b040:	str	r2, [r4, #24]
   3b044:	ldr	r2, [r4, #32]
   3b048:	str	r1, [r2, #4]
   3b04c:	b	3afcc <flatcc_builder_union_vector_push@@Base+0x5c>
   3b050:	mov	r0, #0
   3b054:	b	3afd8 <flatcc_builder_union_vector_push@@Base+0x68>
   3b058:	movw	r1, #45220	; 0xb0a4
   3b05c:	movt	r1, #5
   3b060:	ldr	r3, [pc, #12]	; 3b074 <flatcc_builder_union_vector_push@@Base+0x104>
   3b064:	movw	r0, #46000	; 0xb3b0
   3b068:	movt	r0, #5
   3b06c:	movw	r2, #1677	; 0x68d
   3b070:	bl	14120 <__assert_fail@plt>
   3b074:	andeq	sl, r5, r0, lsl #31

0003b078 <flatcc_builder_append_union_vector@@Base>:
   3b078:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3b07c:	mov	r5, r0
   3b080:	ldr	r0, [r0, #32]
   3b084:	ldrh	r3, [r0, #14]
   3b088:	strd	r6, [sp, #8]
   3b08c:	strd	r8, [sp, #16]
   3b090:	str	lr, [sp, #24]
   3b094:	sub	sp, sp, #12
   3b098:	cmp	r3, #7
   3b09c:	bne	3b194 <flatcc_builder_append_union_vector@@Base+0x11c>
   3b0a0:	ldr	r3, [r0, #20]
   3b0a4:	mov	r7, r1
   3b0a8:	adds	r1, r2, r3
   3b0ac:	movcs	r4, #1
   3b0b0:	movcc	r4, #0
   3b0b4:	cmn	r1, #-536870911	; 0xe0000001
   3b0b8:	movls	r3, #0
   3b0bc:	movhi	r3, #1
   3b0c0:	orrs	r4, r4, r3
   3b0c4:	bne	3b190 <flatcc_builder_append_union_vector@@Base+0x118>
   3b0c8:	ldr	r8, [r5, #20]
   3b0cc:	lsl	r6, r2, #3
   3b0d0:	ldr	r3, [r5, #24]
   3b0d4:	str	r1, [r0, #20]
   3b0d8:	add	ip, r6, r8
   3b0dc:	cmp	ip, r3
   3b0e0:	str	ip, [r5, #20]
   3b0e4:	bcs	3b124 <flatcc_builder_append_union_vector@@Base+0xac>
   3b0e8:	ldr	r3, [r5, #16]
   3b0ec:	adds	r3, r3, r8
   3b0f0:	beq	3b108 <flatcc_builder_append_union_vector@@Base+0x90>
   3b0f4:	mov	r0, r3
   3b0f8:	mov	r2, r6
   3b0fc:	mov	r1, r7
   3b100:	bl	13fb8 <memcpy@plt>
   3b104:	mov	r3, r0
   3b108:	mov	r0, r3
   3b10c:	add	sp, sp, #12
   3b110:	ldrd	r4, [sp]
   3b114:	ldrd	r6, [sp, #8]
   3b118:	ldrd	r8, [sp, #16]
   3b11c:	add	sp, sp, #24
   3b120:	pop	{pc}		; (ldr pc, [sp], #4)
   3b124:	ldr	r2, [r5, #28]
   3b128:	mov	r0, #1
   3b12c:	add	r1, r5, #60	; 0x3c
   3b130:	mov	r3, r0
   3b134:	str	r0, [sp]
   3b138:	ldr	r9, [r5, #48]	; 0x30
   3b13c:	add	r2, r2, r0
   3b140:	ldr	r0, [r5, #40]	; 0x28
   3b144:	add	r2, r2, ip
   3b148:	blx	r9
   3b14c:	cmp	r0, #0
   3b150:	bne	3b188 <flatcc_builder_append_union_vector@@Base+0x110>
   3b154:	ldr	r1, [r5, #28]
   3b158:	ldr	r3, [r5, #60]	; 0x3c
   3b15c:	ldr	r2, [r5, #64]	; 0x40
   3b160:	add	r3, r3, r1
   3b164:	sub	r2, r2, r1
   3b168:	mvn	r1, #3
   3b16c:	str	r3, [r5, #16]
   3b170:	cmn	r2, #4
   3b174:	mvnhi	r2, #3
   3b178:	str	r2, [r5, #24]
   3b17c:	ldr	r2, [r5, #32]
   3b180:	str	r1, [r2, #4]
   3b184:	b	3b0ec <flatcc_builder_append_union_vector@@Base+0x74>
   3b188:	mov	r3, r4
   3b18c:	b	3b108 <flatcc_builder_append_union_vector@@Base+0x90>
   3b190:	bl	36910 <flatcc_builder_default_alloc@@Base+0x1c4>
   3b194:	movw	r1, #45220	; 0xb0a4
   3b198:	movt	r1, #5
   3b19c:	ldr	r3, [pc, #12]	; 3b1b0 <flatcc_builder_append_union_vector@@Base+0x138>
   3b1a0:	movw	r0, #46000	; 0xb3b0
   3b1a4:	movt	r0, #5
   3b1a8:	movw	r2, #1692	; 0x69c
   3b1ac:	bl	14120 <__assert_fail@plt>
   3b1b0:	andeq	sl, r5, r4, lsr #31

0003b1b4 <flatcc_builder_create_string@@Base>:
   3b1b4:	strd	r4, [sp, #-16]!
   3b1b8:	mov	r4, r0
   3b1bc:	mov	ip, #4
   3b1c0:	str	r6, [sp, #8]
   3b1c4:	cmp	r2, #0
   3b1c8:	str	lr, [sp, #12]
   3b1cc:	sub	sp, sp, #88	; 0x58
   3b1d0:	moveq	r6, #2
   3b1d4:	ldr	lr, [r0, #136]	; 0x88
   3b1d8:	add	r3, sp, #12
   3b1dc:	str	r2, [sp, #12]
   3b1e0:	str	r3, [sp, #24]
   3b1e4:	mov	r3, #1
   3b1e8:	moveq	r1, r3
   3b1ec:	str	ip, [sp, #28]
   3b1f0:	sub	r0, lr, r2
   3b1f4:	sub	r0, r0, #1
   3b1f8:	and	r0, r0, #3
   3b1fc:	add	r0, r0, r3
   3b200:	beq	3b218 <flatcc_builder_create_string@@Base+0x64>
   3b204:	add	ip, r2, ip
   3b208:	mov	r6, #3
   3b20c:	str	r1, [sp, #32]
   3b210:	mov	r1, #2
   3b214:	str	r2, [sp, #36]	; 0x24
   3b218:	ldr	r3, [pc, #136]	; 3b2a8 <flatcc_builder_create_string@@Base+0xf4>
   3b21c:	add	r1, r1, #1
   3b220:	add	r2, sp, #88	; 0x58
   3b224:	add	ip, r0, ip
   3b228:	add	r1, r2, r1, lsl #3
   3b22c:	sub	r5, lr, ip
   3b230:	cmp	lr, r5
   3b234:	str	ip, [sp, #16]
   3b238:	str	r6, [sp, #20]
   3b23c:	str	r3, [r1, #-72]	; 0xffffffb8
   3b240:	str	r0, [r1, #-68]	; 0xffffffbc
   3b244:	ble	3b288 <flatcc_builder_create_string@@Base+0xd4>
   3b248:	mov	r2, r6
   3b24c:	mov	r3, r5
   3b250:	str	ip, [sp]
   3b254:	add	r1, sp, #24
   3b258:	ldr	r0, [r4, #36]	; 0x24
   3b25c:	ldr	r6, [r4, #44]	; 0x2c
   3b260:	blx	r6
   3b264:	cmp	r0, #0
   3b268:	bne	3b2a4 <flatcc_builder_create_string@@Base+0xf0>
   3b26c:	mov	r0, r5
   3b270:	str	r5, [r4, #136]	; 0x88
   3b274:	add	sp, sp, #88	; 0x58
   3b278:	ldrd	r4, [sp]
   3b27c:	ldr	r6, [sp, #8]
   3b280:	add	sp, sp, #12
   3b284:	pop	{pc}		; (ldr pc, [sp], #4)
   3b288:	movw	r1, #45220	; 0xb0a4
   3b28c:	movt	r1, #5
   3b290:	movw	r0, #41608	; 0xa288
   3b294:	movt	r0, #4
   3b298:	sub	r3, r3, #124	; 0x7c
   3b29c:	movw	r2, #647	; 0x287
   3b2a0:	bl	14120 <__assert_fail@plt>
   3b2a4:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3b2a8:	strdeq	sl, [r5], -ip

0003b2ac <flatcc_builder_create_string_str@@Base>:
   3b2ac:	strd	r4, [sp, #-16]!
   3b2b0:	mov	r4, r0
   3b2b4:	mov	r0, r1
   3b2b8:	str	r6, [sp, #8]
   3b2bc:	mov	r6, r1
   3b2c0:	str	lr, [sp, #12]
   3b2c4:	sub	sp, sp, #88	; 0x58
   3b2c8:	bl	14054 <strlen@plt>
   3b2cc:	ldr	r5, [r4, #136]	; 0x88
   3b2d0:	mov	r2, #4
   3b2d4:	add	r1, sp, #12
   3b2d8:	mov	r3, #1
   3b2dc:	cmp	r0, #0
   3b2e0:	str	r0, [sp, #12]
   3b2e4:	str	r1, [sp, #24]
   3b2e8:	str	r2, [sp, #28]
   3b2ec:	sub	ip, r5, #1
   3b2f0:	sub	ip, ip, r0
   3b2f4:	and	ip, ip, #3
   3b2f8:	add	ip, ip, r3
   3b2fc:	beq	3b380 <flatcc_builder_create_string_str@@Base+0xd4>
   3b300:	add	lr, r0, r2
   3b304:	mov	r1, #2
   3b308:	str	r6, [sp, #32]
   3b30c:	mov	r2, #3
   3b310:	str	r0, [sp, #36]	; 0x24
   3b314:	ldr	r3, [pc, #148]	; 3b3b0 <flatcc_builder_create_string_str@@Base+0x104>
   3b318:	add	r0, ip, lr
   3b31c:	add	r1, r1, #1
   3b320:	add	lr, sp, #88	; 0x58
   3b324:	sub	r6, r5, r0
   3b328:	add	r1, lr, r1, lsl #3
   3b32c:	cmp	r5, r6
   3b330:	str	r0, [sp, #16]
   3b334:	str	r2, [sp, #20]
   3b338:	str	r3, [r1, #-72]	; 0xffffffb8
   3b33c:	str	ip, [r1, #-68]	; 0xffffffbc
   3b340:	ble	3b390 <flatcc_builder_create_string_str@@Base+0xe4>
   3b344:	mov	r3, r6
   3b348:	add	r1, sp, #24
   3b34c:	str	r0, [sp]
   3b350:	ldr	r0, [r4, #36]	; 0x24
   3b354:	ldr	r5, [r4, #44]	; 0x2c
   3b358:	blx	r5
   3b35c:	cmp	r0, #0
   3b360:	bne	3b3ac <flatcc_builder_create_string_str@@Base+0x100>
   3b364:	mov	r0, r6
   3b368:	str	r6, [r4, #136]	; 0x88
   3b36c:	add	sp, sp, #88	; 0x58
   3b370:	ldrd	r4, [sp]
   3b374:	ldr	r6, [sp, #8]
   3b378:	add	sp, sp, #12
   3b37c:	pop	{pc}		; (ldr pc, [sp], #4)
   3b380:	mov	lr, r2
   3b384:	mov	r1, r3
   3b388:	mov	r2, #2
   3b38c:	b	3b314 <flatcc_builder_create_string_str@@Base+0x68>
   3b390:	movw	r1, #45220	; 0xb0a4
   3b394:	movt	r1, #5
   3b398:	movw	r0, #41608	; 0xa288
   3b39c:	movt	r0, #4
   3b3a0:	sub	r3, r3, #124	; 0x7c
   3b3a4:	movw	r2, #647	; 0x287
   3b3a8:	bl	14120 <__assert_fail@plt>
   3b3ac:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3b3b0:	strdeq	sl, [r5], -ip

0003b3b4 <flatcc_builder_create_string_strn@@Base>:
   3b3b4:	strd	r4, [sp, #-16]!
   3b3b8:	mov	r4, r0
   3b3bc:	mov	r5, r2
   3b3c0:	str	r6, [sp, #8]
   3b3c4:	mov	r6, r1
   3b3c8:	mov	r1, #0
   3b3cc:	mov	r0, r6
   3b3d0:	str	lr, [sp, #12]
   3b3d4:	sub	sp, sp, #88	; 0x58
   3b3d8:	bl	140a8 <memchr@plt>
   3b3dc:	ldr	lr, [r4, #136]	; 0x88
   3b3e0:	cmp	r0, #0
   3b3e4:	mov	ip, #4
   3b3e8:	subne	r5, r0, r6
   3b3ec:	add	r3, sp, #12
   3b3f0:	cmp	r5, #0
   3b3f4:	mov	r0, #1
   3b3f8:	moveq	r2, #2
   3b3fc:	str	r5, [sp, #12]
   3b400:	str	r3, [sp, #24]
   3b404:	sub	r1, lr, #1
   3b408:	str	ip, [sp, #28]
   3b40c:	sub	r1, r1, r5
   3b410:	and	r1, r1, #3
   3b414:	add	r1, r1, r0
   3b418:	beq	3b430 <flatcc_builder_create_string_strn@@Base+0x7c>
   3b41c:	add	ip, r5, ip
   3b420:	mov	r2, #3
   3b424:	str	r6, [sp, #32]
   3b428:	mov	r0, #2
   3b42c:	str	r5, [sp, #36]	; 0x24
   3b430:	ldr	r3, [pc, #132]	; 3b4bc <flatcc_builder_create_string_strn@@Base+0x108>
   3b434:	add	r5, sp, #88	; 0x58
   3b438:	add	r0, r0, #1
   3b43c:	add	r0, r5, r0, lsl #3
   3b440:	add	ip, r1, ip
   3b444:	sub	r5, lr, ip
   3b448:	cmp	lr, r5
   3b44c:	str	ip, [sp, #16]
   3b450:	str	r2, [sp, #20]
   3b454:	str	r3, [r0, #-72]	; 0xffffffb8
   3b458:	str	r1, [r0, #-68]	; 0xffffffbc
   3b45c:	ble	3b49c <flatcc_builder_create_string_strn@@Base+0xe8>
   3b460:	mov	r3, r5
   3b464:	add	r1, sp, #24
   3b468:	str	ip, [sp]
   3b46c:	ldr	r0, [r4, #36]	; 0x24
   3b470:	ldr	r6, [r4, #44]	; 0x2c
   3b474:	blx	r6
   3b478:	cmp	r0, #0
   3b47c:	bne	3b4b8 <flatcc_builder_create_string_strn@@Base+0x104>
   3b480:	mov	r0, r5
   3b484:	str	r5, [r4, #136]	; 0x88
   3b488:	add	sp, sp, #88	; 0x58
   3b48c:	ldrd	r4, [sp]
   3b490:	ldr	r6, [sp, #8]
   3b494:	add	sp, sp, #12
   3b498:	pop	{pc}		; (ldr pc, [sp], #4)
   3b49c:	movw	r1, #45220	; 0xb0a4
   3b4a0:	movt	r1, #5
   3b4a4:	movw	r0, #41608	; 0xa288
   3b4a8:	movt	r0, #4
   3b4ac:	sub	r3, r3, #124	; 0x7c
   3b4b0:	movw	r2, #647	; 0x287
   3b4b4:	bl	14120 <__assert_fail@plt>
   3b4b8:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3b4bc:	strdeq	sl, [r5], -ip

0003b4c0 <flatcc_builder_end_string@@Base>:
   3b4c0:	ldr	r3, [r0, #32]
   3b4c4:	strd	r4, [sp, #-16]!
   3b4c8:	ldrh	r2, [r3, #14]
   3b4cc:	str	r6, [sp, #8]
   3b4d0:	str	lr, [sp, #12]
   3b4d4:	sub	sp, sp, #88	; 0x58
   3b4d8:	cmp	r2, #6
   3b4dc:	bne	3b664 <flatcc_builder_end_string@@Base+0x1a4>
   3b4e0:	ldr	r3, [r3, #20]
   3b4e4:	mov	r4, r0
   3b4e8:	ldr	r2, [r0, #20]
   3b4ec:	cmp	r3, r2
   3b4f0:	bne	3b648 <flatcc_builder_end_string@@Base+0x188>
   3b4f4:	ldr	lr, [r4, #136]	; 0x88
   3b4f8:	add	r2, sp, #12
   3b4fc:	mov	ip, #4
   3b500:	cmp	r3, #0
   3b504:	mov	r0, #1
   3b508:	str	r3, [sp, #12]
   3b50c:	str	r2, [sp, #24]
   3b510:	str	ip, [sp, #28]
   3b514:	ldr	r2, [r4, #16]
   3b518:	moveq	r2, #2
   3b51c:	sub	r1, lr, r3
   3b520:	sub	r1, r1, #1
   3b524:	and	r1, r1, #3
   3b528:	add	r1, r1, r0
   3b52c:	bne	3b614 <flatcc_builder_end_string@@Base+0x154>
   3b530:	ldr	r3, [pc, #328]	; 3b680 <flatcc_builder_end_string@@Base+0x1c0>
   3b534:	add	r5, sp, #88	; 0x58
   3b538:	add	r0, r0, #1
   3b53c:	add	r0, r5, r0, lsl #3
   3b540:	add	ip, r1, ip
   3b544:	sub	r5, lr, ip
   3b548:	cmp	lr, r5
   3b54c:	str	ip, [sp, #16]
   3b550:	str	r2, [sp, #20]
   3b554:	str	r3, [r0, #-72]	; 0xffffffb8
   3b558:	str	r1, [r0, #-68]	; 0xffffffbc
   3b55c:	ble	3b62c <flatcc_builder_end_string@@Base+0x16c>
   3b560:	add	r1, sp, #24
   3b564:	mov	r3, r5
   3b568:	str	ip, [sp]
   3b56c:	ldr	r0, [r4, #36]	; 0x24
   3b570:	ldr	r6, [r4, #44]	; 0x2c
   3b574:	blx	r6
   3b578:	subs	r1, r0, #0
   3b57c:	bne	3b628 <flatcc_builder_end_string@@Base+0x168>
   3b580:	cmp	r5, #0
   3b584:	str	r5, [r4, #136]	; 0x88
   3b588:	beq	3b5fc <flatcc_builder_end_string@@Base+0x13c>
   3b58c:	ldr	r0, [r4, #16]
   3b590:	ldr	r2, [r4, #20]
   3b594:	bl	14084 <memset@plt>
   3b598:	ldr	r3, [r4, #32]
   3b59c:	ldr	r0, [r4, #60]	; 0x3c
   3b5a0:	ldr	r2, [r4, #64]	; 0x40
   3b5a4:	ldr	ip, [r3]
   3b5a8:	ldmib	r3, {r1, lr}
   3b5ac:	add	r0, r0, ip
   3b5b0:	sub	r2, r2, ip
   3b5b4:	str	r0, [r4, #16]
   3b5b8:	cmp	r2, r1
   3b5bc:	ldrh	r0, [r4, #128]	; 0x80
   3b5c0:	movcs	r2, r1
   3b5c4:	str	lr, [r4, #20]
   3b5c8:	str	ip, [r4, #28]
   3b5cc:	ldrh	ip, [r4, #130]	; 0x82
   3b5d0:	str	r2, [r4, #24]
   3b5d4:	ldr	r2, [r4, #156]	; 0x9c
   3b5d8:	str	r1, [r3, #4]
   3b5dc:	cmp	r0, ip
   3b5e0:	sub	r0, r3, #36	; 0x24
   3b5e4:	strhcc	ip, [r4, #128]	; 0x80
   3b5e8:	ldrh	r1, [r3, #12]
   3b5ec:	sub	r3, r2, #1
   3b5f0:	str	r0, [r4, #32]
   3b5f4:	strh	r1, [r4, #130]	; 0x82
   3b5f8:	str	r3, [r4, #156]	; 0x9c
   3b5fc:	mov	r0, r5
   3b600:	add	sp, sp, #88	; 0x58
   3b604:	ldrd	r4, [sp]
   3b608:	ldr	r6, [sp, #8]
   3b60c:	add	sp, sp, #12
   3b610:	pop	{pc}		; (ldr pc, [sp], #4)
   3b614:	add	ip, r3, ip
   3b618:	mov	r0, #2
   3b61c:	strd	r2, [sp, #32]
   3b620:	mov	r2, #3
   3b624:	b	3b530 <flatcc_builder_end_string@@Base+0x70>
   3b628:	bl	368e8 <flatcc_builder_default_alloc@@Base+0x19c>
   3b62c:	movw	r1, #45220	; 0xb0a4
   3b630:	movt	r1, #5
   3b634:	movw	r0, #41608	; 0xa288
   3b638:	movt	r0, #4
   3b63c:	sub	r3, r3, #124	; 0x7c
   3b640:	movw	r2, #647	; 0x287
   3b644:	bl	14120 <__assert_fail@plt>
   3b648:	movw	r1, #45220	; 0xb0a4
   3b64c:	movt	r1, #5
   3b650:	ldr	r3, [pc, #44]	; 3b684 <flatcc_builder_end_string@@Base+0x1c4>
   3b654:	movw	r0, #46052	; 0xb3e4
   3b658:	movt	r0, #5
   3b65c:	movw	r2, #1733	; 0x6c5
   3b660:	bl	14120 <__assert_fail@plt>
   3b664:	movw	r1, #45220	; 0xb0a4
   3b668:	movt	r1, #5
   3b66c:	ldr	r3, [pc, #16]	; 3b684 <flatcc_builder_end_string@@Base+0x1c4>
   3b670:	movw	r0, #45348	; 0xb124
   3b674:	movt	r0, #5
   3b678:	movw	r2, #1732	; 0x6c4
   3b67c:	bl	14120 <__assert_fail@plt>
   3b680:	strdeq	sl, [r5], -ip
   3b684:	andeq	sl, r5, r8, asr #31

0003b688 <flatcc_builder_string_edit@@Base>:
   3b688:	ldr	r0, [r0, #16]
   3b68c:	bx	lr

0003b690 <flatcc_builder_string_len@@Base>:
   3b690:	ldr	r3, [r0, #32]
   3b694:	ldr	r0, [r3, #20]
   3b698:	bx	lr

0003b69c <flatcc_builder_table_add@@Base>:
   3b69c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3b6a0:	mov	r4, r0
   3b6a4:	ldr	r0, [r0, #32]
   3b6a8:	ldrh	r0, [r0, #14]
   3b6ac:	strd	r6, [sp, #8]
   3b6b0:	strd	r8, [sp, #16]
   3b6b4:	str	lr, [sp, #24]
   3b6b8:	sub	sp, sp, #12
   3b6bc:	cmp	r0, #3
   3b6c0:	bne	3b824 <flatcc_builder_table_add@@Base+0x188>
   3b6c4:	movw	r0, #32764	; 0x7ffc
   3b6c8:	cmp	r1, r0
   3b6cc:	bhi	3b808 <flatcc_builder_table_add@@Base+0x16c>
   3b6d0:	ldrh	r0, [r4, #130]	; 0x82
   3b6d4:	lsl	r7, r1, #1
   3b6d8:	ldr	ip, [r4, #4]
   3b6dc:	cmp	r0, r3
   3b6e0:	strhcc	r3, [r4, #130]	; 0x82
   3b6e4:	ldrh	r5, [ip, r7]
   3b6e8:	add	ip, ip, r7
   3b6ec:	cmp	r5, #0
   3b6f0:	bne	3b7ec <flatcc_builder_table_add@@Base+0x150>
   3b6f4:	ldr	r9, [r4, #12]
   3b6f8:	movw	lr, #31153	; 0x79b1
   3b6fc:	movt	lr, #40503	; 0x9e37
   3b700:	uxth	r6, r1
   3b704:	sub	r8, r3, #1
   3b708:	ldr	r0, [r4, #20]
   3b70c:	rsb	r3, r3, #0
   3b710:	eor	r1, r1, r9
   3b714:	mul	r1, lr, r1
   3b718:	add	r8, r8, r0
   3b71c:	ldr	r0, [r4, #24]
   3b720:	and	r8, r8, r3
   3b724:	eor	r1, r1, r2
   3b728:	add	r2, r2, r8
   3b72c:	mul	r1, lr, r1
   3b730:	cmp	r2, r0
   3b734:	str	r1, [r4, #12]
   3b738:	str	r2, [r4, #20]
   3b73c:	bcs	3b778 <flatcc_builder_table_add@@Base+0xdc>
   3b740:	ldr	r0, [r4, #16]
   3b744:	add	r3, r8, #4
   3b748:	add	r0, r0, r8
   3b74c:	strh	r3, [ip]
   3b750:	ldrh	r3, [r4, #8]
   3b754:	cmp	r3, r6
   3b758:	addls	r6, r6, #1
   3b75c:	strhls	r6, [r4, #8]
   3b760:	add	sp, sp, #12
   3b764:	ldrd	r4, [sp]
   3b768:	ldrd	r6, [sp, #8]
   3b76c:	ldrd	r8, [sp, #16]
   3b770:	add	sp, sp, #24
   3b774:	pop	{pc}		; (ldr pc, [sp], #4)
   3b778:	ldr	ip, [r4, #28]
   3b77c:	mov	r0, #1
   3b780:	add	r1, r4, #60	; 0x3c
   3b784:	mov	r3, r0
   3b788:	str	r0, [sp]
   3b78c:	ldr	r9, [r4, #48]	; 0x30
   3b790:	add	ip, ip, r0
   3b794:	ldr	r0, [r4, #40]	; 0x28
   3b798:	add	r2, ip, r2
   3b79c:	blx	r9
   3b7a0:	cmp	r0, #0
   3b7a4:	bne	3b7e4 <flatcc_builder_table_add@@Base+0x148>
   3b7a8:	ldr	ip, [r4, #4]
   3b7ac:	movw	r2, #65532	; 0xfffc
   3b7b0:	ldr	r5, [r4, #28]
   3b7b4:	ldr	r3, [r4, #64]	; 0x40
   3b7b8:	add	ip, ip, r7
   3b7bc:	ldr	r0, [r4, #60]	; 0x3c
   3b7c0:	ldr	r1, [r4, #32]
   3b7c4:	sub	r3, r3, r5
   3b7c8:	cmp	r3, r2
   3b7cc:	add	r0, r0, r5
   3b7d0:	movcs	r3, r2
   3b7d4:	str	r0, [r4, #16]
   3b7d8:	str	r3, [r4, #24]
   3b7dc:	str	r2, [r1, #4]
   3b7e0:	b	3b744 <flatcc_builder_table_add@@Base+0xa8>
   3b7e4:	mov	r0, r5
   3b7e8:	b	3b760 <flatcc_builder_table_add@@Base+0xc4>
   3b7ec:	movw	r1, #45220	; 0xb0a4
   3b7f0:	movt	r1, #5
   3b7f4:	ldr	r3, [pc, #68]	; 3b840 <flatcc_builder_table_add@@Base+0x1a4>
   3b7f8:	movw	r0, #41608	; 0xa288
   3b7fc:	movt	r0, #4
   3b800:	movw	r2, #1784	; 0x6f8
   3b804:	bl	14120 <__assert_fail@plt>
   3b808:	movw	r1, #45220	; 0xb0a4
   3b80c:	movt	r1, #5
   3b810:	ldr	r3, [pc, #40]	; 3b840 <flatcc_builder_table_add@@Base+0x1a4>
   3b814:	movw	r0, #46088	; 0xb408
   3b818:	movt	r0, #5
   3b81c:	movw	r2, #1774	; 0x6ee
   3b820:	bl	14120 <__assert_fail@plt>
   3b824:	movw	r1, #45220	; 0xb0a4
   3b828:	movt	r1, #5
   3b82c:	ldr	r3, [pc, #12]	; 3b840 <flatcc_builder_table_add@@Base+0x1a4>
   3b830:	movw	r0, #45936	; 0xb370
   3b834:	movt	r0, #5
   3b838:	movw	r2, #1773	; 0x6ed
   3b83c:	bl	14120 <__assert_fail@plt>
   3b840:	andeq	sl, r5, r4, ror #31

0003b844 <flatcc_builder_table_edit@@Base>:
   3b844:	ldr	r2, [r0, #32]
   3b848:	ldrh	r2, [r2, #14]
   3b84c:	cmp	r2, #3
   3b850:	bne	3b868 <flatcc_builder_table_edit@@Base+0x24>
   3b854:	ldr	r3, [r0, #20]
   3b858:	ldr	r0, [r0, #16]
   3b85c:	sub	r3, r3, r1
   3b860:	add	r0, r0, r3
   3b864:	bx	lr
   3b868:	movw	r1, #45220	; 0xb0a4
   3b86c:	movt	r1, #5
   3b870:	ldr	r3, [pc, #20]	; 3b88c <flatcc_builder_table_edit@@Base+0x48>
   3b874:	movw	r0, #45936	; 0xb370
   3b878:	movt	r0, #5
   3b87c:	str	r4, [sp, #-8]!
   3b880:	movw	r2, #1794	; 0x702
   3b884:	str	lr, [sp, #4]
   3b888:	bl	14120 <__assert_fail@plt>
   3b88c:	andeq	fp, r5, r0

0003b890 <flatcc_builder_table_add_copy@@Base>:
   3b890:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3b894:	mov	r5, r3
   3b898:	ldr	r3, [r0, #32]
   3b89c:	ldrh	r3, [r3, #14]
   3b8a0:	strd	r6, [sp, #8]
   3b8a4:	strd	r8, [sp, #16]
   3b8a8:	strd	sl, [sp, #24]
   3b8ac:	str	lr, [sp, #32]
   3b8b0:	sub	sp, sp, #12
   3b8b4:	cmp	r3, #3
   3b8b8:	ldrh	ip, [sp, #48]	; 0x30
   3b8bc:	bne	3ba48 <flatcc_builder_table_add_copy@@Base+0x1b8>
   3b8c0:	movw	r3, #32764	; 0x7ffc
   3b8c4:	cmp	r1, r3
   3b8c8:	bhi	3ba2c <flatcc_builder_table_add_copy@@Base+0x19c>
   3b8cc:	ldrh	r3, [r0, #130]	; 0x82
   3b8d0:	mov	r7, r2
   3b8d4:	lsl	r8, r1, #1
   3b8d8:	mov	r4, r0
   3b8dc:	ldr	r2, [r0, #4]
   3b8e0:	cmp	r3, ip
   3b8e4:	strhcc	ip, [r0, #130]	; 0x82
   3b8e8:	ldrh	r9, [r2, r8]
   3b8ec:	add	r2, r2, r8
   3b8f0:	cmp	r9, #0
   3b8f4:	bne	3ba10 <flatcc_builder_table_add_copy@@Base+0x180>
   3b8f8:	ldr	lr, [r4, #12]
   3b8fc:	movw	r0, #31153	; 0x79b1
   3b900:	movt	r0, #40503	; 0x9e37
   3b904:	uxth	r6, r1
   3b908:	sub	r3, ip, #1
   3b90c:	ldr	sl, [r4, #20]
   3b910:	rsb	ip, ip, #0
   3b914:	eor	r1, r1, lr
   3b918:	ldr	lr, [r4, #24]
   3b91c:	mul	r1, r0, r1
   3b920:	add	r3, r3, sl
   3b924:	and	sl, r3, ip
   3b928:	add	ip, r5, sl
   3b92c:	eor	r1, r1, r5
   3b930:	cmp	ip, lr
   3b934:	str	ip, [r4, #20]
   3b938:	mul	r1, r0, r1
   3b93c:	str	r1, [r4, #12]
   3b940:	bcs	3b99c <flatcc_builder_table_add_copy@@Base+0x10c>
   3b944:	ldr	r3, [r4, #16]
   3b948:	add	r1, sl, #4
   3b94c:	strh	r1, [r2]
   3b950:	ldrh	r2, [r4, #8]
   3b954:	cmp	r2, r6
   3b958:	addls	r6, r6, #1
   3b95c:	strhls	r6, [r4, #8]
   3b960:	adds	r3, r3, sl
   3b964:	beq	3b97c <flatcc_builder_table_add_copy@@Base+0xec>
   3b968:	mov	r0, r3
   3b96c:	mov	r2, r5
   3b970:	mov	r1, r7
   3b974:	bl	13fb8 <memcpy@plt>
   3b978:	mov	r3, r0
   3b97c:	mov	r0, r3
   3b980:	add	sp, sp, #12
   3b984:	ldrd	r4, [sp]
   3b988:	ldrd	r6, [sp, #8]
   3b98c:	ldrd	r8, [sp, #16]
   3b990:	ldrd	sl, [sp, #24]
   3b994:	add	sp, sp, #32
   3b998:	pop	{pc}		; (ldr pc, [sp], #4)
   3b99c:	ldr	r2, [r4, #28]
   3b9a0:	mov	r0, #1
   3b9a4:	add	r1, r4, #60	; 0x3c
   3b9a8:	mov	r3, r0
   3b9ac:	str	r0, [sp]
   3b9b0:	ldr	fp, [r4, #48]	; 0x30
   3b9b4:	add	r2, r2, r0
   3b9b8:	ldr	r0, [r4, #40]	; 0x28
   3b9bc:	add	r2, r2, ip
   3b9c0:	blx	fp
   3b9c4:	cmp	r0, #0
   3b9c8:	bne	3ba08 <flatcc_builder_table_add_copy@@Base+0x178>
   3b9cc:	ldr	r2, [r4, #4]
   3b9d0:	movw	r0, #65532	; 0xfffc
   3b9d4:	ldr	r3, [r4, #28]
   3b9d8:	ldr	r1, [r4, #64]	; 0x40
   3b9dc:	add	r2, r2, r8
   3b9e0:	ldr	lr, [r4, #60]	; 0x3c
   3b9e4:	ldr	ip, [r4, #32]
   3b9e8:	sub	r1, r1, r3
   3b9ec:	cmp	r1, r0
   3b9f0:	add	r3, lr, r3
   3b9f4:	movcs	r1, r0
   3b9f8:	str	r3, [r4, #16]
   3b9fc:	str	r1, [r4, #24]
   3ba00:	str	r0, [ip, #4]
   3ba04:	b	3b948 <flatcc_builder_table_add_copy@@Base+0xb8>
   3ba08:	mov	r3, r9
   3ba0c:	b	3b97c <flatcc_builder_table_add_copy@@Base+0xec>
   3ba10:	movw	r1, #45220	; 0xb0a4
   3ba14:	movt	r1, #5
   3ba18:	ldr	r3, [pc, #68]	; 3ba64 <flatcc_builder_table_add_copy@@Base+0x1d4>
   3ba1c:	movw	r0, #41608	; 0xa288
   3ba20:	movt	r0, #4
   3ba24:	movw	r2, #1784	; 0x6f8
   3ba28:	bl	14120 <__assert_fail@plt>
   3ba2c:	movw	r1, #45220	; 0xb0a4
   3ba30:	movt	r1, #5
   3ba34:	ldr	r3, [pc, #40]	; 3ba64 <flatcc_builder_table_add_copy@@Base+0x1d4>
   3ba38:	movw	r0, #46088	; 0xb408
   3ba3c:	movt	r0, #5
   3ba40:	movw	r2, #1774	; 0x6ee
   3ba44:	bl	14120 <__assert_fail@plt>
   3ba48:	movw	r1, #45220	; 0xb0a4
   3ba4c:	movt	r1, #5
   3ba50:	ldr	r3, [pc, #12]	; 3ba64 <flatcc_builder_table_add_copy@@Base+0x1d4>
   3ba54:	movw	r0, #45936	; 0xb370
   3ba58:	movt	r0, #5
   3ba5c:	movw	r2, #1773	; 0x6ed
   3ba60:	bl	14120 <__assert_fail@plt>
   3ba64:	andeq	sl, r5, r4, ror #31

0003ba68 <flatcc_builder_table_add_offset@@Base>:
   3ba68:	ldr	r3, [r0, #32]
   3ba6c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3ba70:	ldrh	r3, [r3, #14]
   3ba74:	strd	r6, [sp, #8]
   3ba78:	strd	r8, [sp, #16]
   3ba7c:	str	lr, [sp, #24]
   3ba80:	sub	sp, sp, #12
   3ba84:	cmp	r3, #3
   3ba88:	bne	3bbe8 <flatcc_builder_table_add_offset@@Base+0x180>
   3ba8c:	movw	r3, #32764	; 0x7ffc
   3ba90:	cmp	r1, r3
   3ba94:	bhi	3bbcc <flatcc_builder_table_add_offset@@Base+0x164>
   3ba98:	ldr	ip, [r0, #4]
   3ba9c:	lsl	r7, r1, #1
   3baa0:	mov	r4, r0
   3baa4:	ldrh	r5, [ip, r7]
   3baa8:	add	ip, ip, r7
   3baac:	cmp	r5, #0
   3bab0:	bne	3bbb0 <flatcc_builder_table_add_offset@@Base+0x148>
   3bab4:	ldr	r2, [r0, #12]
   3bab8:	movw	r3, #31153	; 0x79b1
   3babc:	movt	r3, #40503	; 0x9e37
   3bac0:	uxth	r6, r1
   3bac4:	ldr	r8, [r0, #20]
   3bac8:	ldr	r0, [r0, #24]
   3bacc:	eor	r1, r1, r2
   3bad0:	mul	r1, r3, r1
   3bad4:	add	r8, r8, #3
   3bad8:	bic	r8, r8, #3
   3badc:	add	r2, r8, #4
   3bae0:	eor	r1, r1, #4
   3bae4:	cmp	r2, r0
   3bae8:	str	r2, [r4, #20]
   3baec:	mul	r1, r3, r1
   3baf0:	str	r1, [r4, #12]
   3baf4:	bhi	3bb44 <flatcc_builder_table_add_offset@@Base+0xdc>
   3baf8:	ldr	r0, [r4, #16]
   3bafc:	uxth	r2, r8
   3bb00:	add	r0, r0, r8
   3bb04:	add	r3, r2, #4
   3bb08:	strh	r3, [ip]
   3bb0c:	ldrh	r3, [r4, #8]
   3bb10:	cmp	r3, r6
   3bb14:	ldr	r3, [r4]
   3bb18:	addls	r6, r6, #1
   3bb1c:	strhls	r6, [r4, #8]
   3bb20:	add	r1, r3, #2
   3bb24:	str	r1, [r4]
   3bb28:	strh	r2, [r3]
   3bb2c:	add	sp, sp, #12
   3bb30:	ldrd	r4, [sp]
   3bb34:	ldrd	r6, [sp, #8]
   3bb38:	ldrd	r8, [sp, #16]
   3bb3c:	add	sp, sp, #24
   3bb40:	pop	{pc}		; (ldr pc, [sp], #4)
   3bb44:	ldr	ip, [r4, #28]
   3bb48:	mov	r0, #1
   3bb4c:	add	r1, r4, #60	; 0x3c
   3bb50:	mov	r3, r0
   3bb54:	str	r0, [sp]
   3bb58:	ldr	r0, [r4, #40]	; 0x28
   3bb5c:	add	r2, r2, ip
   3bb60:	ldr	r9, [r4, #48]	; 0x30
   3bb64:	blx	r9
   3bb68:	cmp	r0, #0
   3bb6c:	bne	3bba8 <flatcc_builder_table_add_offset@@Base+0x140>
   3bb70:	ldr	ip, [r4, #4]
   3bb74:	movw	r2, #65532	; 0xfffc
   3bb78:	ldrd	r0, [r4, #28]
   3bb7c:	ldr	r3, [r4, #64]	; 0x40
   3bb80:	add	ip, ip, r7
   3bb84:	ldr	r5, [r4, #60]	; 0x3c
   3bb88:	sub	r3, r3, r0
   3bb8c:	cmp	r3, r2
   3bb90:	add	r0, r5, r0
   3bb94:	movcs	r3, r2
   3bb98:	str	r0, [r4, #16]
   3bb9c:	str	r3, [r4, #24]
   3bba0:	str	r2, [r1, #4]
   3bba4:	b	3bafc <flatcc_builder_table_add_offset@@Base+0x94>
   3bba8:	mov	r0, r5
   3bbac:	b	3bb2c <flatcc_builder_table_add_offset@@Base+0xc4>
   3bbb0:	movw	r1, #45220	; 0xb0a4
   3bbb4:	movt	r1, #5
   3bbb8:	ldr	r3, [pc, #68]	; 3bc04 <flatcc_builder_table_add_offset@@Base+0x19c>
   3bbbc:	movw	r0, #41608	; 0xa288
   3bbc0:	movt	r0, #4
   3bbc4:	movw	r2, #1819	; 0x71b
   3bbc8:	bl	14120 <__assert_fail@plt>
   3bbcc:	movw	r1, #45220	; 0xb0a4
   3bbd0:	movt	r1, #5
   3bbd4:	ldr	r3, [pc, #40]	; 3bc04 <flatcc_builder_table_add_offset@@Base+0x19c>
   3bbd8:	movw	r0, #46088	; 0xb408
   3bbdc:	movt	r0, #5
   3bbe0:	movw	r2, #1812	; 0x714
   3bbe4:	bl	14120 <__assert_fail@plt>
   3bbe8:	movw	r1, #45220	; 0xb0a4
   3bbec:	movt	r1, #5
   3bbf0:	ldr	r3, [pc, #12]	; 3bc04 <flatcc_builder_table_add_offset@@Base+0x19c>
   3bbf4:	movw	r0, #45936	; 0xb370
   3bbf8:	movt	r0, #5
   3bbfc:	movw	r2, #1811	; 0x713
   3bc00:	bl	14120 <__assert_fail@plt>
   3bc04:	andeq	fp, r5, ip, lsl r0

0003bc08 <flatcc_builder_table_add_union@@Base>:
   3bc08:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3bc0c:	strd	r6, [sp, #8]
   3bc10:	strd	r8, [sp, #16]
   3bc14:	str	lr, [sp, #24]
   3bc18:	sub	sp, sp, #20
   3bc1c:	add	ip, sp, #16
   3bc20:	stmdb	ip, {r2, r3}
   3bc24:	ldr	r3, [r0, #32]
   3bc28:	ldrb	r7, [sp, #8]
   3bc2c:	ldr	r6, [sp, #12]
   3bc30:	ldrh	r3, [r3, #14]
   3bc34:	cmp	r3, #3
   3bc38:	bne	3bdf4 <flatcc_builder_table_add_union@@Base+0x1ec>
   3bc3c:	cmp	r7, #0
   3bc40:	mov	r4, r0
   3bc44:	mov	r5, r1
   3bc48:	beq	3bd2c <flatcc_builder_table_add_union@@Base+0x124>
   3bc4c:	cmp	r6, #0
   3bc50:	beq	3bc74 <flatcc_builder_table_add_union@@Base+0x6c>
   3bc54:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   3bc58:	cmp	r0, #0
   3bc5c:	beq	3be48 <flatcc_builder_table_add_union@@Base+0x240>
   3bc60:	ldr	r3, [r4, #32]
   3bc64:	ldrh	r3, [r3, #14]
   3bc68:	str	r6, [r0]
   3bc6c:	cmp	r3, #3
   3bc70:	bne	3be10 <flatcc_builder_table_add_union@@Base+0x208>
   3bc74:	sub	r1, r5, #1
   3bc78:	movw	r3, #32764	; 0x7ffc
   3bc7c:	cmp	r1, r3
   3bc80:	bhi	3be2c <flatcc_builder_table_add_union@@Base+0x224>
   3bc84:	ldrh	r3, [r4, #130]	; 0x82
   3bc88:	lsl	r8, r1, #1
   3bc8c:	cmp	r3, #0
   3bc90:	moveq	r3, #1
   3bc94:	strheq	r3, [r4, #130]	; 0x82
   3bc98:	ldr	r3, [r4, #4]
   3bc9c:	ldrh	r2, [r3, r8]
   3bca0:	add	r0, r3, r8
   3bca4:	cmp	r2, #0
   3bca8:	bne	3bdd8 <flatcc_builder_table_add_union@@Base+0x1d0>
   3bcac:	ldr	r2, [r4, #12]
   3bcb0:	movw	r3, #31153	; 0x79b1
   3bcb4:	movt	r3, #40503	; 0x9e37
   3bcb8:	uxth	r6, r1
   3bcbc:	ldr	r5, [r4, #20]
   3bcc0:	ldr	ip, [r4, #24]
   3bcc4:	eor	r1, r1, r2
   3bcc8:	mul	r1, r3, r1
   3bccc:	add	r2, r5, #1
   3bcd0:	cmp	r2, ip
   3bcd4:	str	r2, [r4, #20]
   3bcd8:	eor	r1, r1, #1
   3bcdc:	mul	r1, r3, r1
   3bce0:	str	r1, [r4, #12]
   3bce4:	bcs	3bd50 <flatcc_builder_table_add_union@@Base+0x148>
   3bce8:	ldr	r3, [r4, #16]
   3bcec:	add	r2, r5, #4
   3bcf0:	strh	r2, [r0]
   3bcf4:	ldrh	r2, [r4, #8]
   3bcf8:	cmp	r2, r6
   3bcfc:	addls	r6, r6, #1
   3bd00:	strhls	r6, [r4, #8]
   3bd04:	cmn	r3, r5
   3bd08:	beq	3bdbc <flatcc_builder_table_add_union@@Base+0x1b4>
   3bd0c:	mov	r0, #0
   3bd10:	strb	r7, [r3, r5]
   3bd14:	add	sp, sp, #20
   3bd18:	ldrd	r4, [sp]
   3bd1c:	ldrd	r6, [sp, #8]
   3bd20:	ldrd	r8, [sp, #16]
   3bd24:	add	sp, sp, #24
   3bd28:	pop	{pc}		; (ldr pc, [sp], #4)
   3bd2c:	cmp	r6, #0
   3bd30:	beq	3bc74 <flatcc_builder_table_add_union@@Base+0x6c>
   3bd34:	movw	r1, #45220	; 0xb0a4
   3bd38:	movt	r1, #5
   3bd3c:	ldr	r3, [pc, #288]	; 3be64 <flatcc_builder_table_add_union@@Base+0x25c>
   3bd40:	movw	r0, #46156	; 0xb44c
   3bd44:	movt	r0, #5
   3bd48:	movw	r2, #1519	; 0x5ef
   3bd4c:	bl	14120 <__assert_fail@plt>
   3bd50:	ldr	r2, [r4, #28]
   3bd54:	mov	r0, #1
   3bd58:	add	r1, r4, #60	; 0x3c
   3bd5c:	mov	r3, r0
   3bd60:	str	r0, [sp]
   3bd64:	ldr	r0, [r4, #40]	; 0x28
   3bd68:	add	r2, r5, r2
   3bd6c:	ldr	r9, [r4, #48]	; 0x30
   3bd70:	add	r2, r2, #2
   3bd74:	blx	r9
   3bd78:	cmp	r0, #0
   3bd7c:	bne	3bdbc <flatcc_builder_table_add_union@@Base+0x1b4>
   3bd80:	ldr	r0, [r4, #4]
   3bd84:	movw	r1, #65532	; 0xfffc
   3bd88:	ldr	ip, [r4, #28]
   3bd8c:	ldr	r2, [r4, #64]	; 0x40
   3bd90:	add	r0, r0, r8
   3bd94:	ldr	r3, [r4, #60]	; 0x3c
   3bd98:	ldr	lr, [r4, #32]
   3bd9c:	sub	r2, r2, ip
   3bda0:	cmp	r2, r1
   3bda4:	add	r3, r3, ip
   3bda8:	movcs	r2, r1
   3bdac:	str	r3, [r4, #16]
   3bdb0:	str	r2, [r4, #24]
   3bdb4:	str	r1, [lr, #4]
   3bdb8:	b	3bcec <flatcc_builder_table_add_union@@Base+0xe4>
   3bdbc:	movw	r1, #45220	; 0xb0a4
   3bdc0:	movt	r1, #5
   3bdc4:	ldr	r3, [pc, #152]	; 3be64 <flatcc_builder_table_add_union@@Base+0x25c>
   3bdc8:	movw	r0, #46204	; 0xb47c
   3bdcc:	movt	r0, #5
   3bdd0:	movw	r2, #1526	; 0x5f6
   3bdd4:	bl	14120 <__assert_fail@plt>
   3bdd8:	movw	r1, #45220	; 0xb0a4
   3bddc:	movt	r1, #5
   3bde0:	ldr	r3, [pc, #128]	; 3be68 <flatcc_builder_table_add_union@@Base+0x260>
   3bde4:	movw	r0, #41608	; 0xa288
   3bde8:	movt	r0, #4
   3bdec:	movw	r2, #1784	; 0x6f8
   3bdf0:	bl	14120 <__assert_fail@plt>
   3bdf4:	movw	r1, #45220	; 0xb0a4
   3bdf8:	movt	r1, #5
   3bdfc:	ldr	r3, [pc, #96]	; 3be64 <flatcc_builder_table_add_union@@Base+0x25c>
   3be00:	movw	r0, #45936	; 0xb370
   3be04:	movt	r0, #5
   3be08:	movw	r2, #1518	; 0x5ee
   3be0c:	bl	14120 <__assert_fail@plt>
   3be10:	movw	r1, #45220	; 0xb0a4
   3be14:	movt	r1, #5
   3be18:	ldr	r3, [pc, #72]	; 3be68 <flatcc_builder_table_add_union@@Base+0x260>
   3be1c:	movw	r0, #45936	; 0xb370
   3be20:	movt	r0, #5
   3be24:	movw	r2, #1773	; 0x6ed
   3be28:	bl	14120 <__assert_fail@plt>
   3be2c:	movw	r1, #45220	; 0xb0a4
   3be30:	movt	r1, #5
   3be34:	ldr	r3, [pc, #44]	; 3be68 <flatcc_builder_table_add_union@@Base+0x260>
   3be38:	movw	r0, #46088	; 0xb408
   3be3c:	movt	r0, #5
   3be40:	movw	r2, #1774	; 0x6ee
   3be44:	bl	14120 <__assert_fail@plt>
   3be48:	movw	r1, #45220	; 0xb0a4
   3be4c:	movt	r1, #5
   3be50:	ldr	r3, [pc, #12]	; 3be64 <flatcc_builder_table_add_union@@Base+0x25c>
   3be54:	movw	r0, #46192	; 0xb470
   3be58:	movt	r0, #5
   3be5c:	movw	r2, #1522	; 0x5f2
   3be60:	bl	14120 <__assert_fail@plt>
   3be64:	andeq	fp, r5, ip, lsr r0
   3be68:	andeq	sl, r5, r4, ror #31

0003be6c <flatcc_builder_table_add_union_vector@@Base>:
   3be6c:	strd	r4, [sp, #-20]!	; 0xffffffec
   3be70:	strd	r6, [sp, #8]
   3be74:	mov	r7, r1
   3be78:	str	lr, [sp, #16]
   3be7c:	sub	sp, sp, #12
   3be80:	add	r1, sp, #8
   3be84:	stmdb	r1, {r2, r3}
   3be88:	ldr	r3, [r0, #32]
   3be8c:	ldm	sp, {r4, r6}
   3be90:	ldrh	r3, [r3, #14]
   3be94:	cmp	r3, #3
   3be98:	bne	3bf38 <flatcc_builder_table_add_union_vector@@Base+0xcc>
   3be9c:	clz	r3, r6
   3bea0:	clz	r2, r4
   3bea4:	lsr	r3, r3, #5
   3bea8:	lsr	r2, r2, #5
   3beac:	cmp	r2, r3
   3beb0:	beq	3bee0 <flatcc_builder_table_add_union_vector@@Base+0x74>
   3beb4:	adds	r4, r4, #0
   3beb8:	movne	r4, #1
   3bebc:	cmp	r4, r3
   3bec0:	mvnne	r4, #0
   3bec4:	beq	3bf54 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   3bec8:	mov	r0, r4
   3becc:	add	sp, sp, #12
   3bed0:	ldrd	r4, [sp]
   3bed4:	ldrd	r6, [sp, #8]
   3bed8:	add	sp, sp, #16
   3bedc:	pop	{pc}		; (ldr pc, [sp], #4)
   3bee0:	cmp	r4, #0
   3bee4:	beq	3bec8 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3bee8:	sub	r1, r7, #1
   3beec:	mov	r5, r0
   3bef0:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   3bef4:	subs	r3, r0, #0
   3bef8:	beq	3bf70 <flatcc_builder_table_add_union_vector@@Base+0x104>
   3befc:	mov	r1, r7
   3bf00:	mov	r0, r5
   3bf04:	str	r4, [r3]
   3bf08:	bl	3ba68 <flatcc_builder_table_add_offset@@Base>
   3bf0c:	cmp	r0, #0
   3bf10:	movne	r4, #0
   3bf14:	strne	r6, [r0]
   3bf18:	bne	3bec8 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3bf1c:	movw	r1, #45220	; 0xb0a4
   3bf20:	movt	r1, #5
   3bf24:	ldr	r3, [pc, #96]	; 3bf8c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3bf28:	movw	r0, #46192	; 0xb470
   3bf2c:	movt	r0, #5
   3bf30:	movw	r2, #1544	; 0x608
   3bf34:	bl	14120 <__assert_fail@plt>
   3bf38:	movw	r1, #45220	; 0xb0a4
   3bf3c:	movt	r1, #5
   3bf40:	ldr	r3, [pc, #68]	; 3bf8c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3bf44:	movw	r0, #45936	; 0xb370
   3bf48:	movt	r0, #5
   3bf4c:	mov	r2, #1536	; 0x600
   3bf50:	bl	14120 <__assert_fail@plt>
   3bf54:	movw	r1, #45220	; 0xb0a4
   3bf58:	movt	r1, #5
   3bf5c:	ldr	r3, [pc, #40]	; 3bf8c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3bf60:	movw	r0, #46216	; 0xb488
   3bf64:	movt	r0, #5
   3bf68:	movw	r2, #1537	; 0x601
   3bf6c:	bl	14120 <__assert_fail@plt>
   3bf70:	movw	r1, #45220	; 0xb0a4
   3bf74:	movt	r1, #5
   3bf78:	ldr	r3, [pc, #12]	; 3bf8c <flatcc_builder_table_add_union_vector@@Base+0x120>
   3bf7c:	movw	r0, #46192	; 0xb470
   3bf80:	movt	r0, #5
   3bf84:	movw	r2, #1540	; 0x604
   3bf88:	bl	14120 <__assert_fail@plt>
   3bf8c:	andeq	fp, r5, ip, asr r0

0003bf90 <flatcc_builder_push_buffer_alignment@@Base>:
   3bf90:	mov	r3, r0
   3bf94:	mov	r2, #4
   3bf98:	ldrh	r0, [r0, #128]	; 0x80
   3bf9c:	strh	r2, [r3, #128]	; 0x80
   3bfa0:	bx	lr

0003bfa4 <flatcc_builder_pop_buffer_alignment@@Base>:
   3bfa4:	ldrh	r3, [r0, #128]	; 0x80
   3bfa8:	cmp	r3, r1
   3bfac:	strhcc	r1, [r0, #128]	; 0x80
   3bfb0:	bx	lr

0003bfb4 <flatcc_builder_get_buffer_alignment@@Base>:
   3bfb4:	ldrh	r0, [r0, #128]	; 0x80
   3bfb8:	bx	lr

0003bfbc <flatcc_builder_set_vtable_clustering@@Base>:
   3bfbc:	clz	r1, r1
   3bfc0:	lsr	r1, r1, #5
   3bfc4:	str	r1, [r0, #180]	; 0xb4
   3bfc8:	bx	lr

0003bfcc <flatcc_builder_set_block_align@@Base>:
   3bfcc:	strh	r1, [r0, #132]	; 0x84
   3bfd0:	bx	lr

0003bfd4 <flatcc_builder_get_level@@Base>:
   3bfd4:	ldr	r0, [r0, #156]	; 0x9c
   3bfd8:	bx	lr

0003bfdc <flatcc_builder_set_max_level@@Base>:
   3bfdc:	ldr	r3, [r0, #160]	; 0xa0
   3bfe0:	str	r1, [r0, #176]	; 0xb0
   3bfe4:	cmp	r3, r1
   3bfe8:	strlt	r1, [r0, #160]	; 0xa0
   3bfec:	bx	lr

0003bff0 <flatcc_builder_get_buffer_size@@Base>:
   3bff0:	ldr	r3, [r0, #136]	; 0x88
   3bff4:	ldr	r0, [r0, #140]	; 0x8c
   3bff8:	sub	r0, r0, r3
   3bffc:	bx	lr

0003c000 <flatcc_builder_get_buffer_start@@Base>:
   3c000:	ldr	r0, [r0, #136]	; 0x88
   3c004:	bx	lr

0003c008 <flatcc_builder_get_buffer_end@@Base>:
   3c008:	ldr	r0, [r0, #140]	; 0x8c
   3c00c:	bx	lr

0003c010 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3c010:	str	r1, [r0, #172]	; 0xac
   3c014:	bx	lr

0003c018 <flatcc_builder_set_identifier@@Base>:
   3c018:	ldr	r3, [pc, #16]	; 3c030 <flatcc_builder_set_identifier@@Base+0x18>
   3c01c:	cmp	r1, #0
   3c020:	moveq	r1, r3
   3c024:	ldr	r3, [r1]
   3c028:	str	r3, [r0, #168]	; 0xa8
   3c02c:	bx	lr
   3c030:	strdeq	sl, [r5], -ip

0003c034 <flatcc_builder_get_type@@Base>:
   3c034:	ldr	r0, [r0, #32]
   3c038:	cmp	r0, #0
   3c03c:	ldrhne	r0, [r0, #14]
   3c040:	bx	lr

0003c044 <flatcc_builder_get_type_at@@Base>:
   3c044:	cmp	r1, #0
   3c048:	ble	3c070 <flatcc_builder_get_type_at@@Base+0x2c>
   3c04c:	ldr	r3, [r0, #156]	; 0x9c
   3c050:	cmp	r3, r1
   3c054:	blt	3c070 <flatcc_builder_get_type_at@@Base+0x2c>
   3c058:	ldr	r2, [r0, #32]
   3c05c:	sub	r1, r1, r3
   3c060:	add	r1, r1, r1, lsl #3
   3c064:	add	r1, r2, r1, lsl #2
   3c068:	ldrh	r0, [r1, #14]
   3c06c:	bx	lr
   3c070:	mov	r0, #0
   3c074:	bx	lr

0003c078 <flatcc_builder_get_direct_buffer@@Base>:
   3c078:	ldr	r3, [r0, #184]	; 0xb8
   3c07c:	cmp	r3, #0
   3c080:	bne	3c09c <flatcc_builder_get_direct_buffer@@Base+0x24>
   3c084:	cmp	r1, #0
   3c088:	movne	r3, #0
   3c08c:	movne	r0, r3
   3c090:	moveq	r0, r1
   3c094:	strne	r3, [r1]
   3c098:	bx	lr
   3c09c:	ldrd	r2, [r0, #188]	; 0xbc
   3c0a0:	cmp	r2, r3
   3c0a4:	bne	3c084 <flatcc_builder_get_direct_buffer@@Base+0xc>
   3c0a8:	cmp	r1, #0
   3c0ac:	ldrne	r3, [r0, #212]	; 0xd4
   3c0b0:	ldr	r0, [r0, #196]	; 0xc4
   3c0b4:	strne	r3, [r1]
   3c0b8:	bx	lr

0003c0bc <flatcc_builder_copy_buffer@@Base>:
   3c0bc:	ldr	r3, [r0, #184]	; 0xb8
   3c0c0:	cmp	r3, #0
   3c0c4:	beq	3c0ec <flatcc_builder_copy_buffer@@Base+0x30>
   3c0c8:	add	r0, r0, #188	; 0xbc
   3c0cc:	str	r4, [sp, #-8]!
   3c0d0:	str	lr, [sp, #4]
   3c0d4:	bl	3c828 <flatcc_emitter_copy_buffer@@Base>
   3c0d8:	cmp	r0, #0
   3c0dc:	beq	3c0f4 <flatcc_builder_copy_buffer@@Base+0x38>
   3c0e0:	ldr	r4, [sp]
   3c0e4:	add	sp, sp, #4
   3c0e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3c0ec:	mov	r0, r3
   3c0f0:	bx	lr
   3c0f4:	bl	36988 <flatcc_builder_default_alloc@@Base+0x23c>

0003c0f8 <flatcc_builder_finalize_buffer@@Base>:
   3c0f8:	strd	r4, [sp, #-16]!
   3c0fc:	cmp	r1, #0
   3c100:	mov	r5, r0
   3c104:	ldr	r2, [r0, #136]	; 0x88
   3c108:	ldr	r4, [r0, #140]	; 0x8c
   3c10c:	str	r6, [sp, #8]
   3c110:	str	lr, [sp, #12]
   3c114:	sub	r4, r4, r2
   3c118:	mov	r0, r4
   3c11c:	strne	r4, [r1]
   3c120:	bl	14018 <malloc@plt>
   3c124:	subs	r6, r0, #0
   3c128:	beq	3c180 <flatcc_builder_finalize_buffer@@Base+0x88>
   3c12c:	ldr	r3, [r5, #184]	; 0xb8
   3c130:	cmp	r3, #0
   3c134:	beq	3c164 <flatcc_builder_finalize_buffer@@Base+0x6c>
   3c138:	mov	r2, r4
   3c13c:	add	r0, r5, #188	; 0xbc
   3c140:	mov	r1, r6
   3c144:	bl	3c828 <flatcc_emitter_copy_buffer@@Base>
   3c148:	cmp	r0, #0
   3c14c:	beq	3c19c <flatcc_builder_finalize_buffer@@Base+0xa4>
   3c150:	mov	r0, r6
   3c154:	ldrd	r4, [sp]
   3c158:	ldr	r6, [sp, #8]
   3c15c:	add	sp, sp, #12
   3c160:	pop	{pc}		; (ldr pc, [sp], #4)
   3c164:	movw	r1, #45220	; 0xb0a4
   3c168:	movt	r1, #5
   3c16c:	ldr	r3, [pc, #44]	; 3c1a0 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3c170:	movw	r0, #41608	; 0xa288
   3c174:	movt	r0, #4
   3c178:	movw	r2, #1948	; 0x79c
   3c17c:	bl	14120 <__assert_fail@plt>
   3c180:	movw	r1, #45220	; 0xb0a4
   3c184:	movt	r1, #5
   3c188:	ldr	r3, [pc, #16]	; 3c1a0 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3c18c:	movw	r0, #41608	; 0xa288
   3c190:	movt	r0, #4
   3c194:	movw	r2, #1944	; 0x798
   3c198:	bl	14120 <__assert_fail@plt>
   3c19c:	bl	36988 <flatcc_builder_default_alloc@@Base+0x23c>
   3c1a0:	andeq	fp, r5, r4, lsl #1

0003c1a4 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3c1a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   3c1a8:	mov	r2, #0
   3c1ac:	mov	r5, r0
   3c1b0:	ldr	r3, [r0, #136]	; 0x88
   3c1b4:	ldr	r4, [r0, #140]	; 0x8c
   3c1b8:	strd	r6, [sp, #8]
   3c1bc:	subs	r6, r1, #0
   3c1c0:	ldrh	r1, [r0, #128]	; 0x80
   3c1c4:	str	lr, [sp, #16]
   3c1c8:	sub	sp, sp, #12
   3c1cc:	add	r0, sp, #4
   3c1d0:	sub	r3, r4, r3
   3c1d4:	str	r2, [sp, #4]
   3c1d8:	sub	r4, r1, #1
   3c1dc:	rsb	r2, r1, #0
   3c1e0:	strne	r3, [r6]
   3c1e4:	add	r4, r4, r3
   3c1e8:	cmp	r1, #4
   3c1ec:	and	r4, r4, r2
   3c1f0:	movcc	r1, #4
   3c1f4:	mov	r2, r4
   3c1f8:	bl	14078 <posix_memalign@plt>
   3c1fc:	cmp	r0, #0
   3c200:	beq	3c240 <flatcc_builder_finalize_aligned_buffer@@Base+0x9c>
   3c204:	ldr	r0, [sp, #4]
   3c208:	cmp	r0, #0
   3c20c:	beq	3c214 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3c210:	bl	13fac <free@plt>
   3c214:	cmp	r6, #0
   3c218:	movne	r3, #0
   3c21c:	moveq	r7, r6
   3c220:	movne	r7, r3
   3c224:	strne	r3, [r6]
   3c228:	mov	r0, r7
   3c22c:	add	sp, sp, #12
   3c230:	ldrd	r4, [sp]
   3c234:	ldrd	r6, [sp, #8]
   3c238:	add	sp, sp, #16
   3c23c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c240:	ldr	r7, [sp, #4]
   3c244:	cmp	r7, #0
   3c248:	beq	3c214 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3c24c:	ldr	r3, [r5, #184]	; 0xb8
   3c250:	cmp	r3, #0
   3c254:	beq	3c274 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   3c258:	mov	r2, r4
   3c25c:	add	r0, r5, #188	; 0xbc
   3c260:	mov	r1, r7
   3c264:	bl	3c828 <flatcc_emitter_copy_buffer@@Base>
   3c268:	cmp	r0, #0
   3c26c:	bne	3c228 <flatcc_builder_finalize_aligned_buffer@@Base+0x84>
   3c270:	bl	36988 <flatcc_builder_default_alloc@@Base+0x23c>
   3c274:	mov	r0, r7
   3c278:	b	3c210 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>

0003c27c <flatcc_builder_aligned_alloc@@Base>:
   3c27c:	cmp	r0, #4
   3c280:	str	r4, [sp, #-8]!
   3c284:	mov	r4, #0
   3c288:	str	lr, [sp, #4]
   3c28c:	sub	sp, sp, #8
   3c290:	mov	r2, r1
   3c294:	movcs	r1, r0
   3c298:	movcc	r1, #4
   3c29c:	add	r0, sp, #4
   3c2a0:	str	r4, [sp, #4]
   3c2a4:	bl	14078 <posix_memalign@plt>
   3c2a8:	cmp	r0, r4
   3c2ac:	ldr	r0, [sp, #4]
   3c2b0:	beq	3c2c4 <flatcc_builder_aligned_alloc@@Base+0x48>
   3c2b4:	cmp	r0, #0
   3c2b8:	beq	3c2c4 <flatcc_builder_aligned_alloc@@Base+0x48>
   3c2bc:	bl	13fac <free@plt>
   3c2c0:	mov	r0, r4
   3c2c4:	add	sp, sp, #8
   3c2c8:	ldr	r4, [sp]
   3c2cc:	add	sp, sp, #4
   3c2d0:	pop	{pc}		; (ldr pc, [sp], #4)

0003c2d4 <flatcc_builder_aligned_free@@Base>:
   3c2d4:	b	13fac <free@plt>

0003c2d8 <flatcc_builder_get_emit_context@@Base>:
   3c2d8:	ldr	r0, [r0, #36]	; 0x24
   3c2dc:	bx	lr

0003c2e0 <flatcc_emitter_recycle_page@@Base>:
   3c2e0:	ldr	r3, [r0]
   3c2e4:	cmp	r3, r1
   3c2e8:	beq	3c32c <flatcc_emitter_recycle_page@@Base+0x4c>
   3c2ec:	ldr	r2, [r0, #4]
   3c2f0:	cmp	r2, r1
   3c2f4:	beq	3c32c <flatcc_emitter_recycle_page@@Base+0x4c>
   3c2f8:	push	{lr}		; (str lr, [sp, #-4]!)
   3c2fc:	mov	r0, #0
   3c300:	ldr	lr, [r1, #2944]	; 0xb80
   3c304:	ldr	ip, [r1, #2948]	; 0xb84
   3c308:	str	ip, [lr, #2948]	; 0xb84
   3c30c:	ldr	r2, [r3, #2948]	; 0xb84
   3c310:	str	lr, [ip, #2944]	; 0xb80
   3c314:	str	r3, [r1, #2944]	; 0xb80
   3c318:	str	r2, [r1, #2948]	; 0xb84
   3c31c:	str	r1, [r2, #2944]	; 0xb80
   3c320:	ldr	r3, [r1, #2944]	; 0xb80
   3c324:	str	r1, [r3, #2948]	; 0xb84
   3c328:	pop	{pc}		; (ldr pc, [sp], #4)
   3c32c:	mvn	r0, #0
   3c330:	bx	lr

0003c334 <flatcc_emitter_reset@@Base>:
   3c334:	ldr	r2, [r0]
   3c338:	cmp	r2, #0
   3c33c:	bxeq	lr
   3c340:	strd	r4, [sp, #-16]!
   3c344:	movw	ip, #64064	; 0xfa40
   3c348:	movt	ip, #65535	; 0xffff
   3c34c:	ldr	r1, [r0, #24]
   3c350:	add	r4, r2, #1472	; 0x5c0
   3c354:	ldr	r3, [r0, #32]
   3c358:	ldr	r5, [r0, #28]
   3c35c:	str	r6, [sp, #8]
   3c360:	str	lr, [sp, #12]
   3c364:	mov	lr, #1472	; 0x5c0
   3c368:	cmp	r3, #0
   3c36c:	stmib	r0, {r2, r4}
   3c370:	moveq	r3, r1
   3c374:	lsr	r1, r1, #2
   3c378:	str	lr, [r0, #12]
   3c37c:	add	r3, r3, r3, lsl #1
   3c380:	str	r4, [r0, #16]
   3c384:	str	lr, [r0, #20]
   3c388:	add	r3, r1, r3, lsr #2
   3c38c:	str	ip, [r2, #2952]	; 0xb88
   3c390:	mov	ip, #0
   3c394:	cmp	r5, r3, lsl #1
   3c398:	str	ip, [r0, #24]
   3c39c:	str	r3, [r0, #32]
   3c3a0:	bls	3c3f8 <flatcc_emitter_reset@@Base+0xc4>
   3c3a4:	ldr	r3, [r2, #2944]	; 0xb80
   3c3a8:	mov	r4, r0
   3c3ac:	cmp	r2, r3
   3c3b0:	bne	3c3c8 <flatcc_emitter_reset@@Base+0x94>
   3c3b4:	b	3c3f8 <flatcc_emitter_reset@@Base+0xc4>
   3c3b8:	ldm	r4, {r1, r2}
   3c3bc:	ldr	r3, [r2, #2944]	; 0xb80
   3c3c0:	cmp	r3, r1
   3c3c4:	beq	3c3f8 <flatcc_emitter_reset@@Base+0xc4>
   3c3c8:	ldr	r1, [r3, #2944]	; 0xb80
   3c3cc:	mov	r0, r3
   3c3d0:	str	r1, [r2, #2944]	; 0xb80
   3c3d4:	ldr	r3, [r3, #2944]	; 0xb80
   3c3d8:	str	r2, [r3, #2948]	; 0xb84
   3c3dc:	bl	13fac <free@plt>
   3c3e0:	ldr	r3, [r4, #28]
   3c3e4:	ldr	r2, [r4, #32]
   3c3e8:	sub	r3, r3, #2944	; 0xb80
   3c3ec:	cmp	r3, r2, lsl #1
   3c3f0:	str	r3, [r4, #28]
   3c3f4:	bhi	3c3b8 <flatcc_emitter_reset@@Base+0x84>
   3c3f8:	ldrd	r4, [sp]
   3c3fc:	ldr	r6, [sp, #8]
   3c400:	add	sp, sp, #12
   3c404:	pop	{pc}		; (ldr pc, [sp], #4)

0003c408 <flatcc_emitter_clear@@Base>:
   3c408:	ldr	r3, [r0]
   3c40c:	cmp	r3, #0
   3c410:	bxeq	lr
   3c414:	mov	r1, #0
   3c418:	strd	r4, [sp, #-16]!
   3c41c:	mov	r5, r0
   3c420:	ldr	r2, [r3, #2948]	; 0xb84
   3c424:	str	r6, [sp, #8]
   3c428:	str	lr, [sp, #12]
   3c42c:	str	r1, [r2, #2944]	; 0xb80
   3c430:	ldr	r4, [r3, #2944]	; 0xb80
   3c434:	cmp	r4, r1
   3c438:	bne	3c444 <flatcc_emitter_clear@@Base+0x3c>
   3c43c:	b	3c480 <flatcc_emitter_clear@@Base+0x78>
   3c440:	mov	r4, r3
   3c444:	ldr	r0, [r4, #2948]	; 0xb84
   3c448:	bl	13fac <free@plt>
   3c44c:	ldr	r3, [r4, #2944]	; 0xb80
   3c450:	cmp	r3, #0
   3c454:	bne	3c440 <flatcc_emitter_clear@@Base+0x38>
   3c458:	mov	r0, r4
   3c45c:	bl	13fac <free@plt>
   3c460:	mov	r0, r5
   3c464:	mov	r2, #36	; 0x24
   3c468:	ldrd	r4, [sp]
   3c46c:	mov	r1, #0
   3c470:	ldr	r6, [sp, #8]
   3c474:	ldr	lr, [sp, #12]
   3c478:	add	sp, sp, #16
   3c47c:	b	14084 <memset@plt>
   3c480:	mov	r4, r3
   3c484:	b	3c458 <flatcc_emitter_clear@@Base+0x50>

0003c488 <flatcc_emitter@@Base>:
   3c488:	cmp	r3, #0
   3c48c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3c490:	mov	r4, r0
   3c494:	ldr	r3, [r0, #24]
   3c498:	strd	r6, [sp, #8]
   3c49c:	strd	r8, [sp, #16]
   3c4a0:	sub	r8, r2, #1
   3c4a4:	strd	sl, [sp, #24]
   3c4a8:	str	lr, [sp, #32]
   3c4ac:	sub	sp, sp, #12
   3c4b0:	ldr	ip, [sp, #48]	; 0x30
   3c4b4:	add	r3, r3, ip
   3c4b8:	str	r3, [r0, #24]
   3c4bc:	blt	3c6a0 <flatcc_emitter@@Base+0x218>
   3c4c0:	ldr	r0, [r0, #20]
   3c4c4:	cmp	r0, ip
   3c4c8:	bcs	3c560 <flatcc_emitter@@Base+0xd8>
   3c4cc:	cmp	r2, #0
   3c4d0:	beq	3c5a4 <flatcc_emitter@@Base+0x11c>
   3c4d4:	movw	r3, #64064	; 0xfa40
   3c4d8:	movt	r3, #65535	; 0xffff
   3c4dc:	add	r5, r1, #8
   3c4e0:	mov	r8, r2
   3c4e4:	mov	r9, #1472	; 0x5c0
   3c4e8:	str	r3, [sp, #4]
   3c4ec:	ldr	r7, [r5, #-8]
   3c4f0:	ldr	r6, [r5, #-4]
   3c4f4:	cmp	r6, #0
   3c4f8:	beq	3c63c <flatcc_emitter@@Base+0x1b4>
   3c4fc:	mov	r3, r0
   3c500:	cmp	r6, r3
   3c504:	bls	3c558 <flatcc_emitter@@Base+0xd0>
   3c508:	cmp	r3, #0
   3c50c:	beq	3c5c4 <flatcc_emitter@@Base+0x13c>
   3c510:	sub	fp, r6, r3
   3c514:	mov	r6, r3
   3c518:	mov	r2, r6
   3c51c:	mov	r1, r7
   3c520:	ldr	r0, [r4, #16]
   3c524:	bl	13fb8 <memcpy@plt>
   3c528:	ldr	r2, [r4, #16]
   3c52c:	cmp	fp, #0
   3c530:	add	r7, r7, r6
   3c534:	ldr	r0, [r4, #20]
   3c538:	add	r2, r2, r6
   3c53c:	sub	r3, r0, r6
   3c540:	mov	r0, r3
   3c544:	strd	r2, [r4, #16]
   3c548:	beq	3c63c <flatcc_emitter@@Base+0x1b4>
   3c54c:	mov	r6, fp
   3c550:	cmp	r6, r3
   3c554:	bhi	3c508 <flatcc_emitter@@Base+0x80>
   3c558:	mov	fp, #0
   3c55c:	b	3c518 <flatcc_emitter@@Base+0x90>
   3c560:	ldr	r3, [r4, #16]
   3c564:	sub	r0, r0, ip
   3c568:	str	r0, [r4, #20]
   3c56c:	add	ip, r3, ip
   3c570:	str	ip, [r4, #16]
   3c574:	cmp	r2, #0
   3c578:	addne	r4, r1, #8
   3c57c:	beq	3c5a4 <flatcc_emitter@@Base+0x11c>
   3c580:	mov	r0, r3
   3c584:	ldmdb	r4, {r1, r2}
   3c588:	sub	r8, r8, #1
   3c58c:	bl	13fb8 <memcpy@plt>
   3c590:	ldr	r2, [r4, #-4]
   3c594:	cmn	r8, #1
   3c598:	add	r4, r4, #8
   3c59c:	add	r3, r0, r2
   3c5a0:	bne	3c580 <flatcc_emitter@@Base+0xf8>
   3c5a4:	mov	r0, #0
   3c5a8:	add	sp, sp, #12
   3c5ac:	ldrd	r4, [sp]
   3c5b0:	ldrd	r6, [sp, #8]
   3c5b4:	ldrd	r8, [sp, #16]
   3c5b8:	ldrd	sl, [sp, #24]
   3c5bc:	add	sp, sp, #32
   3c5c0:	pop	{pc}		; (ldr pc, [sp], #4)
   3c5c4:	ldr	fp, [r4, #4]
   3c5c8:	cmp	fp, #0
   3c5cc:	beq	3c64c <flatcc_emitter@@Base+0x1c4>
   3c5d0:	ldr	sl, [r4]
   3c5d4:	ldr	r0, [fp, #2944]	; 0xb80
   3c5d8:	cmp	r0, sl
   3c5dc:	beq	3c608 <flatcc_emitter@@Base+0x180>
   3c5e0:	str	r0, [r4, #4]
   3c5e4:	ldr	r1, [r0, #2948]	; 0xb84
   3c5e8:	mov	r2, #2944	; 0xb80
   3c5ec:	mov	r3, r2
   3c5f0:	str	r0, [r4, #16]
   3c5f4:	str	r2, [r4, #20]
   3c5f8:	ldr	r2, [r1, #2952]	; 0xb88
   3c5fc:	add	r2, r2, r3
   3c600:	str	r2, [r0, #2952]	; 0xb88
   3c604:	b	3c500 <flatcc_emitter@@Base+0x78>
   3c608:	movw	r0, #2956	; 0xb8c
   3c60c:	bl	14018 <malloc@plt>
   3c610:	cmp	r0, #0
   3c614:	beq	3c698 <flatcc_emitter@@Base+0x210>
   3c618:	ldr	r2, [r4, #28]
   3c61c:	str	sl, [r0, #2944]	; 0xb80
   3c620:	str	fp, [r0, #2948]	; 0xb84
   3c624:	add	r2, r2, #2944	; 0xb80
   3c628:	str	r2, [r4, #28]
   3c62c:	str	r0, [sl, #2948]	; 0xb84
   3c630:	str	r0, [fp, #2944]	; 0xb80
   3c634:	str	r0, [r4, #4]
   3c638:	b	3c5e4 <flatcc_emitter@@Base+0x15c>
   3c63c:	subs	r8, r8, #1
   3c640:	add	r5, r5, #8
   3c644:	bne	3c4ec <flatcc_emitter@@Base+0x64>
   3c648:	b	3c5a4 <flatcc_emitter@@Base+0x11c>
   3c64c:	movw	r0, #2956	; 0xb8c
   3c650:	bl	14018 <malloc@plt>
   3c654:	cmp	r0, #0
   3c658:	beq	3c698 <flatcc_emitter@@Base+0x210>
   3c65c:	ldr	r2, [r4, #28]
   3c660:	add	r1, r0, #1472	; 0x5c0
   3c664:	mov	r3, #1472	; 0x5c0
   3c668:	str	r0, [r4]
   3c66c:	strd	r0, [r4, #4]
   3c670:	str	r9, [r4, #12]
   3c674:	str	r1, [r4, #16]
   3c678:	add	r2, r2, #2944	; 0xb80
   3c67c:	str	r9, [r4, #20]
   3c680:	str	r0, [r0, #2944]	; 0xb80
   3c684:	str	r2, [r4, #28]
   3c688:	ldr	r2, [sp, #4]
   3c68c:	str	r0, [r0, #2948]	; 0xb84
   3c690:	str	r2, [r0, #2952]	; 0xb88
   3c694:	b	3c500 <flatcc_emitter@@Base+0x78>
   3c698:	mvn	r0, #0
   3c69c:	b	3c5a8 <flatcc_emitter@@Base+0x120>
   3c6a0:	ldr	r0, [r0, #12]
   3c6a4:	cmp	r0, ip
   3c6a8:	bcs	3c810 <flatcc_emitter@@Base+0x388>
   3c6ac:	add	r5, r1, r2, lsl #3
   3c6b0:	movw	r3, #64064	; 0xfa40
   3c6b4:	movt	r3, #65535	; 0xffff
   3c6b8:	str	r3, [sp, #4]
   3c6bc:	cmn	r8, #1
   3c6c0:	beq	3c5a4 <flatcc_emitter@@Base+0x11c>
   3c6c4:	ldr	r7, [r5, #-8]
   3c6c8:	ldr	r6, [r5, #-4]
   3c6cc:	cmp	r6, #0
   3c6d0:	add	r7, r7, r6
   3c6d4:	beq	3c724 <flatcc_emitter@@Base+0x29c>
   3c6d8:	mov	r9, #1472	; 0x5c0
   3c6dc:	ldr	r2, [r4, #12]
   3c6e0:	cmp	r2, r6
   3c6e4:	bcs	3c788 <flatcc_emitter@@Base+0x300>
   3c6e8:	cmp	r2, #0
   3c6ec:	beq	3c730 <flatcc_emitter@@Base+0x2a8>
   3c6f0:	sub	r6, r6, r2
   3c6f4:	mov	r1, #0
   3c6f8:	ldr	r3, [r4, #8]
   3c6fc:	rsb	r0, r2, #0
   3c700:	add	r7, r7, r0
   3c704:	str	r1, [r4, #12]
   3c708:	mov	r1, r7
   3c70c:	add	r3, r3, r0
   3c710:	mov	r0, r3
   3c714:	str	r3, [r4, #8]
   3c718:	bl	13fb8 <memcpy@plt>
   3c71c:	cmp	r6, #0
   3c720:	bne	3c6dc <flatcc_emitter@@Base+0x254>
   3c724:	sub	r5, r5, #8
   3c728:	sub	r8, r8, #1
   3c72c:	b	3c6bc <flatcc_emitter@@Base+0x234>
   3c730:	ldr	fp, [r4]
   3c734:	cmp	fp, #0
   3c738:	beq	3c7cc <flatcc_emitter@@Base+0x344>
   3c73c:	ldr	sl, [r4, #4]
   3c740:	ldr	r0, [fp, #2948]	; 0xb84
   3c744:	cmp	r0, sl
   3c748:	beq	3c798 <flatcc_emitter@@Base+0x310>
   3c74c:	ldr	r3, [fp, #2952]	; 0xb88
   3c750:	sub	r3, r3, #2944	; 0xb80
   3c754:	str	r3, [r0, #2952]	; 0xb88
   3c758:	str	r0, [r4]
   3c75c:	ldr	r3, [r0, #2944]	; 0xb80
   3c760:	mov	r2, #2944	; 0xb80
   3c764:	add	r1, r0, #2944	; 0xb80
   3c768:	ldr	r3, [r3, #2952]	; 0xb88
   3c76c:	str	r1, [r4, #8]
   3c770:	str	r2, [r4, #12]
   3c774:	sub	r3, r3, #2944	; 0xb80
   3c778:	str	r3, [r0, #2952]	; 0xb88
   3c77c:	ldr	r2, [r4, #12]
   3c780:	cmp	r2, r6
   3c784:	bcc	3c6e8 <flatcc_emitter@@Base+0x260>
   3c788:	sub	r1, r2, r6
   3c78c:	mov	r2, r6
   3c790:	mov	r6, #0
   3c794:	b	3c6f8 <flatcc_emitter@@Base+0x270>
   3c798:	movw	r0, #2956	; 0xb8c
   3c79c:	bl	14018 <malloc@plt>
   3c7a0:	cmp	r0, #0
   3c7a4:	beq	3c698 <flatcc_emitter@@Base+0x210>
   3c7a8:	ldr	r2, [r4, #28]
   3c7ac:	str	fp, [r0, #2944]	; 0xb80
   3c7b0:	str	sl, [r0, #2948]	; 0xb84
   3c7b4:	add	r2, r2, #2944	; 0xb80
   3c7b8:	str	r2, [r4, #28]
   3c7bc:	str	r0, [fp, #2948]	; 0xb84
   3c7c0:	str	r0, [sl, #2944]	; 0xb80
   3c7c4:	str	r0, [r4]
   3c7c8:	b	3c75c <flatcc_emitter@@Base+0x2d4>
   3c7cc:	movw	r0, #2956	; 0xb8c
   3c7d0:	bl	14018 <malloc@plt>
   3c7d4:	cmp	r0, #0
   3c7d8:	beq	3c698 <flatcc_emitter@@Base+0x210>
   3c7dc:	ldr	r3, [r4, #28]
   3c7e0:	add	r2, r0, #1472	; 0x5c0
   3c7e4:	str	r0, [r4]
   3c7e8:	stmib	r4, {r0, r2, r9}
   3c7ec:	add	r3, r3, #2944	; 0xb80
   3c7f0:	str	r2, [r4, #16]
   3c7f4:	str	r9, [r4, #20]
   3c7f8:	str	r3, [r4, #28]
   3c7fc:	ldr	r3, [sp, #4]
   3c800:	str	r0, [r0, #2944]	; 0xb80
   3c804:	str	r0, [r0, #2948]	; 0xb84
   3c808:	str	r3, [r0, #2952]	; 0xb88
   3c80c:	b	3c6dc <flatcc_emitter@@Base+0x254>
   3c810:	ldr	r3, [r4, #8]
   3c814:	sub	r0, r0, ip
   3c818:	str	r0, [r4, #12]
   3c81c:	sub	r3, r3, ip
   3c820:	str	r3, [r4, #8]
   3c824:	b	3c574 <flatcc_emitter@@Base+0xec>

0003c828 <flatcc_emitter_copy_buffer@@Base>:
   3c828:	ldr	r3, [r0, #24]
   3c82c:	strd	r4, [sp, #-16]!
   3c830:	str	r6, [sp, #8]
   3c834:	str	lr, [sp, #12]
   3c838:	cmp	r3, r2
   3c83c:	movhi	r5, #0
   3c840:	bhi	3c8c0 <flatcc_emitter_copy_buffer@@Base+0x98>
   3c844:	ldr	r5, [r0]
   3c848:	mov	r6, r0
   3c84c:	cmp	r5, #0
   3c850:	beq	3c8c0 <flatcc_emitter_copy_buffer@@Base+0x98>
   3c854:	ldr	r2, [r6, #4]
   3c858:	mov	r0, r1
   3c85c:	ldr	r1, [r6, #8]
   3c860:	cmp	r5, r2
   3c864:	beq	3c8d4 <flatcc_emitter_copy_buffer@@Base+0xac>
   3c868:	ldr	r2, [r6, #12]
   3c86c:	rsb	r2, r2, #2944	; 0xb80
   3c870:	add	r5, r0, r2
   3c874:	bl	13fb8 <memcpy@plt>
   3c878:	ldrd	r2, [r6]
   3c87c:	ldr	r4, [r2, #2944]	; 0xb80
   3c880:	cmp	r4, r3
   3c884:	beq	3c8ac <flatcc_emitter_copy_buffer@@Base+0x84>
   3c888:	mov	r2, #2944	; 0xb80
   3c88c:	mov	r1, r4
   3c890:	mov	r0, r5
   3c894:	add	r5, r5, r2
   3c898:	bl	13fb8 <memcpy@plt>
   3c89c:	ldr	r3, [r6, #4]
   3c8a0:	ldr	r4, [r4, #2944]	; 0xb80
   3c8a4:	cmp	r3, r4
   3c8a8:	bne	3c888 <flatcc_emitter_copy_buffer@@Base+0x60>
   3c8ac:	ldr	r2, [r6, #20]
   3c8b0:	mov	r1, r4
   3c8b4:	mov	r0, r5
   3c8b8:	rsb	r2, r2, #2944	; 0xb80
   3c8bc:	bl	13fb8 <memcpy@plt>
   3c8c0:	mov	r0, r5
   3c8c4:	ldrd	r4, [sp]
   3c8c8:	ldr	r6, [sp, #8]
   3c8cc:	add	sp, sp, #12
   3c8d0:	pop	{pc}		; (ldr pc, [sp], #4)
   3c8d4:	mov	r2, r3
   3c8d8:	mov	r5, r0
   3c8dc:	bl	13fb8 <memcpy@plt>
   3c8e0:	b	3c8c0 <flatcc_emitter_copy_buffer@@Base+0x98>

0003c8e4 <cmetrohash64_1@@Base>:
   3c8e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3c8e8:	movw	ip, #24283	; 0x5edb
   3c8ec:	movt	ip, #44806	; 0xaf06
   3c8f0:	strd	r6, [sp, #8]
   3c8f4:	adds	r4, r2, ip
   3c8f8:	movw	r6, #23867	; 0x5d3b
   3c8fc:	movt	r6, #24802	; 0x60e2
   3c900:	strd	r8, [sp, #16]
   3c904:	add	ip, r0, r2
   3c908:	strd	sl, [sp, #24]
   3c90c:	adc	r5, r3, r6
   3c910:	cmp	r3, #0
   3c914:	str	lr, [sp, #32]
   3c918:	sub	sp, sp, #68	; 0x44
   3c91c:	mov	r3, r5
   3c920:	ldr	lr, [sp, #104]	; 0x68
   3c924:	movw	r1, #37345	; 0x91e1
   3c928:	movt	r1, #51258	; 0xc83a
   3c92c:	cmpeq	r2, #31
   3c930:	mov	r2, r4
   3c934:	str	ip, [sp, #52]	; 0x34
   3c938:	umlal	r2, r3, r1, lr
   3c93c:	mov	r4, r2
   3c940:	mov	r5, r3
   3c944:	strd	r4, [sp, #8]
   3c948:	bls	3cbe0 <cmetrohash64_1@@Base+0x2fc>
   3c94c:	movw	lr, #49211	; 0xc03b
   3c950:	movt	lr, #31710	; 0x7bde
   3c954:	str	r4, [sp]
   3c958:	str	r1, [sp, #32]
   3c95c:	movw	r1, #56283	; 0xdbdb
   3c960:	movt	r1, #34376	; 0x8648
   3c964:	mov	fp, r3
   3c968:	mov	sl, r2
   3c96c:	str	r5, [sp, #28]
   3c970:	str	r1, [sp, #36]	; 0x24
   3c974:	movw	r1, #28837	; 0x70a5
   3c978:	movt	r1, #12120	; 0x2f58
   3c97c:	mov	r3, r2
   3c980:	str	r1, [sp, #44]	; 0x2c
   3c984:	sub	r1, ip, #32
   3c988:	mov	ip, r5
   3c98c:	str	r1, [sp, #40]	; 0x28
   3c990:	mov	r1, r5
   3c994:	str	lr, [sp, #48]	; 0x30
   3c998:	ldr	r4, [r0]
   3c99c:	add	r0, r0, #32
   3c9a0:	ldr	r7, [sp, #32]
   3c9a4:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3c9a8:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3c9ac:	umull	r4, r5, r4, r7
   3c9b0:	ldr	lr, [r0, #-20]	; 0xffffffec
   3c9b4:	mla	r5, r7, r6, r5
   3c9b8:	ldr	r7, [sp, #36]	; 0x24
   3c9bc:	adds	r3, r4, r3
   3c9c0:	ldr	r6, [r0, #-16]
   3c9c4:	adc	r4, r5, r1
   3c9c8:	lsr	r1, r4, #29
   3c9cc:	umull	r8, r9, r8, r7
   3c9d0:	orr	r5, r1, r3, lsl #3
   3c9d4:	mla	r9, r7, lr, r9
   3c9d8:	ldr	lr, [r0, #-12]
   3c9dc:	lsr	r7, r3, #29
   3c9e0:	orr	r3, r7, r4, lsl #3
   3c9e4:	ldr	r4, [r0, #-8]
   3c9e8:	adds	r3, r3, r2
   3c9ec:	adc	r1, r5, ip
   3c9f0:	adds	sl, r8, sl
   3c9f4:	lsr	r8, sl, #29
   3c9f8:	adc	r5, r9, fp
   3c9fc:	ldr	r9, [sp, #48]	; 0x30
   3ca00:	lsr	fp, r5, #29
   3ca04:	orr	r5, r8, r5, lsl #3
   3ca08:	ldr	r8, [sp]
   3ca0c:	orr	fp, fp, sl, lsl #3
   3ca10:	umull	r6, r7, r6, r9
   3ca14:	adds	sl, r5, r8
   3ca18:	ldr	r5, [sp, #44]	; 0x2c
   3ca1c:	mla	r7, r9, lr, r7
   3ca20:	ldr	r9, [sp, #28]
   3ca24:	ldr	lr, [r0, #-4]
   3ca28:	str	r5, [sp, #16]
   3ca2c:	umull	r4, r5, r4, r5
   3ca30:	adc	fp, fp, r9
   3ca34:	adds	r2, r6, r2
   3ca38:	strd	r4, [sp]
   3ca3c:	adc	ip, r7, ip
   3ca40:	lsr	r6, r2, #29
   3ca44:	ldr	r4, [sp, #4]
   3ca48:	lsr	r7, ip, #29
   3ca4c:	orr	ip, r6, ip, lsl #3
   3ca50:	ldr	r5, [sp, #16]
   3ca54:	orr	r7, r7, r2, lsl #3
   3ca58:	adds	r2, ip, r3
   3ca5c:	adc	ip, r7, r1
   3ca60:	mla	lr, r5, lr, r4
   3ca64:	str	lr, [sp, #4]
   3ca68:	ldrd	r6, [sp]
   3ca6c:	adds	r4, r6, r8
   3ca70:	lsr	lr, r4, #29
   3ca74:	adc	r6, r7, r9
   3ca78:	lsr	r5, r6, #29
   3ca7c:	orr	lr, lr, r6, lsl #3
   3ca80:	orr	r4, r5, r4, lsl #3
   3ca84:	adds	lr, lr, sl
   3ca88:	str	lr, [sp]
   3ca8c:	adc	lr, r4, fp
   3ca90:	str	lr, [sp, #28]
   3ca94:	ldr	lr, [sp, #40]	; 0x28
   3ca98:	cmp	r0, lr
   3ca9c:	bls	3c998 <cmetrohash64_1@@Base+0xb4>
   3caa0:	eor	r5, r3, sl
   3caa4:	ldr	lr, [sp]
   3caa8:	eor	r6, r1, fp
   3caac:	str	r5, [sp, #40]	; 0x28
   3cab0:	ldr	r5, [sp, #28]
   3cab4:	ldrd	r8, [sp, #32]
   3cab8:	adds	r4, r3, lr
   3cabc:	str	r6, [sp, #32]
   3cac0:	adc	lr, r1, r5
   3cac4:	umull	r4, r5, r4, r8
   3cac8:	mla	r5, r8, lr, r5
   3cacc:	adds	r6, r4, sl
   3cad0:	lsl	r4, r6, #31
   3cad4:	adc	lr, r5, fp
   3cad8:	orr	r4, r4, lr, lsr #1
   3cadc:	lsl	lr, lr, #31
   3cae0:	umull	r4, r5, r4, r9
   3cae4:	orr	lr, lr, r6, lsr #1
   3cae8:	eor	r6, r4, r2
   3caec:	mla	r5, r9, lr, r5
   3caf0:	adds	r4, sl, r6
   3caf4:	eor	r7, r5, ip
   3caf8:	umull	r4, r5, r4, r9
   3cafc:	adc	r2, fp, r7
   3cb00:	mla	r5, r9, r2, r5
   3cb04:	adds	lr, r4, r3
   3cb08:	lsl	r2, lr, #31
   3cb0c:	adc	ip, r5, r1
   3cb10:	adds	r4, r3, r6
   3cb14:	orr	r2, r2, ip, lsr #1
   3cb18:	adc	r1, r1, r7
   3cb1c:	lsl	ip, ip, #31
   3cb20:	umull	r4, r5, r4, r8
   3cb24:	umull	r2, r3, r2, r8
   3cb28:	orr	ip, ip, lr, lsr #1
   3cb2c:	mov	lr, r8
   3cb30:	mla	r5, r8, r1, r5
   3cb34:	strd	r2, [sp, #16]
   3cb38:	mla	r3, r8, ip, r3
   3cb3c:	ldr	r2, [sp, #16]
   3cb40:	mov	ip, r9
   3cb44:	str	r3, [sp, #20]
   3cb48:	ldr	r3, [sp]
   3cb4c:	ldr	r8, [sp, #20]
   3cb50:	eor	r2, r2, r3
   3cb54:	ldr	r3, [sp, #28]
   3cb58:	eor	r8, r8, r3
   3cb5c:	adds	r3, r4, r2
   3cb60:	adc	r1, r5, r8
   3cb64:	adds	sl, sl, r2
   3cb68:	lsl	r4, r3, #31
   3cb6c:	adc	r5, fp, r8
   3cb70:	lsl	r2, r1, #31
   3cb74:	umull	r8, r9, sl, r9
   3cb78:	mov	sl, ip
   3cb7c:	orr	r4, r4, r1, lsr #1
   3cb80:	orr	r3, r2, r3, lsr #1
   3cb84:	mla	r9, ip, r5, r9
   3cb88:	adds	r2, r8, r6
   3cb8c:	umull	r4, r5, r4, ip
   3cb90:	lsl	r1, r2, #31
   3cb94:	adc	ip, r9, r7
   3cb98:	lsl	r6, ip, #31
   3cb9c:	mla	r5, sl, r3, r5
   3cba0:	ldr	r3, [sp, #40]	; 0x28
   3cba4:	orr	ip, r1, ip, lsr #1
   3cba8:	ldr	r1, [sp, #8]
   3cbac:	orr	r6, r6, r2, lsr #1
   3cbb0:	umull	r8, r9, ip, lr
   3cbb4:	ldr	r2, [sp, #32]
   3cbb8:	eor	r3, r4, r3
   3cbbc:	eor	r3, r3, r8
   3cbc0:	mla	r9, lr, r6, r9
   3cbc4:	adds	r3, r1, r3
   3cbc8:	eor	r2, r5, r2
   3cbcc:	str	r3, [sp, #8]
   3cbd0:	eor	r2, r2, r9
   3cbd4:	ldr	r3, [sp, #12]
   3cbd8:	adc	r3, r3, r2
   3cbdc:	str	r3, [sp, #12]
   3cbe0:	ldr	r7, [sp, #52]	; 0x34
   3cbe4:	sub	r3, r7, r0
   3cbe8:	cmp	r3, #15
   3cbec:	ble	3cd48 <cmetrohash64_1@@Base+0x464>
   3cbf0:	ldr	r2, [r0]
   3cbf4:	movw	r3, #37345	; 0x91e1
   3cbf8:	movt	r3, #51258	; 0xc83a
   3cbfc:	movw	sl, #56283	; 0xdbdb
   3cc00:	movt	sl, #34376	; 0x8648
   3cc04:	ldr	r1, [r0, #4]
   3cc08:	movw	r5, #46599	; 0xb607
   3cc0c:	movt	r5, #13299	; 0x33f3
   3cc10:	add	r0, r0, #16
   3cc14:	movw	lr, #42186	; 0xa4ca
   3cc18:	movt	lr, #26887	; 0x6907
   3cc1c:	ldr	r4, [r0, #-8]
   3cc20:	movw	r6, #18043	; 0x467b
   3cc24:	movt	r6, #12846	; 0x322e
   3cc28:	umull	r8, r9, r2, r3
   3cc2c:	str	r5, [sp, #16]
   3cc30:	ldr	r2, [r0, #-4]
   3cc34:	movw	ip, #45150	; 0xb05e
   3cc38:	movt	ip, #5864	; 0x16e8
   3cc3c:	movw	fp, #49211	; 0xc03b
   3cc40:	movt	fp, #31710	; 0x7bde
   3cc44:	mla	r3, r3, r1, r9
   3cc48:	umull	r4, r5, r4, sl
   3cc4c:	mov	r9, r3
   3cc50:	sub	r3, r7, r0
   3cc54:	strd	r4, [sp]
   3cc58:	mov	r5, r9
   3cc5c:	ldmib	sp, {r1, r7}
   3cc60:	mla	r2, sl, r2, r1
   3cc64:	ldr	r1, [sp, #8]
   3cc68:	str	r2, [sp, #4]
   3cc6c:	mov	r2, r5
   3cc70:	ldrd	r4, [sp]
   3cc74:	adds	r9, r8, r1
   3cc78:	ldr	r1, [sp, #12]
   3cc7c:	lsl	r8, r9, #31
   3cc80:	adc	r1, r2, r1
   3cc84:	adds	r7, r4, r7
   3cc88:	mov	r2, r5
   3cc8c:	ldrd	r4, [sp, #12]
   3cc90:	orr	r8, r8, r1, lsr #1
   3cc94:	lsl	r1, r1, #31
   3cc98:	mul	lr, lr, r8
   3cc9c:	orr	r1, r1, r9, lsr #1
   3cca0:	adc	r2, r2, r4
   3cca4:	lsl	r4, r7, #31
   3cca8:	orr	r4, r4, r2, lsr #1
   3ccac:	lsl	r2, r2, #31
   3ccb0:	mla	lr, r6, r1, lr
   3ccb4:	orr	r2, r2, r7, lsr #1
   3ccb8:	umull	r6, r7, r8, r6
   3ccbc:	umull	r8, r9, r8, sl
   3ccc0:	mul	ip, ip, r4
   3ccc4:	add	r7, lr, r7
   3ccc8:	strd	r8, [sp]
   3cccc:	umull	r8, r9, r4, fp
   3ccd0:	ldr	lr, [sp, #4]
   3ccd4:	mla	ip, r5, r2, ip
   3ccd8:	umull	r4, r5, r4, r5
   3ccdc:	mla	r9, fp, r2, r9
   3cce0:	lsl	r2, r7, #29
   3cce4:	add	r5, ip, r5
   3cce8:	lsl	ip, r4, #29
   3ccec:	mla	r1, sl, r1, lr
   3ccf0:	orr	ip, ip, r5, lsr #3
   3ccf4:	lsl	lr, r5, #29
   3ccf8:	str	r1, [sp, #4]
   3ccfc:	lsl	r1, r6, #29
   3cd00:	ldrd	sl, [sp]
   3cd04:	orr	r6, r2, r6, lsr #3
   3cd08:	orr	r1, r1, r7, lsr #3
   3cd0c:	ldr	r2, [sp, #8]
   3cd10:	orr	r4, lr, r4, lsr #3
   3cd14:	adds	r1, r1, r8
   3cd18:	adc	r6, r6, r9
   3cd1c:	eor	r1, r1, sl
   3cd20:	eor	r6, r6, fp
   3cd24:	adds	r1, r1, ip
   3cd28:	eor	r1, r1, r8
   3cd2c:	adc	r4, r6, r4
   3cd30:	adds	r2, r2, r1
   3cd34:	eor	r4, r4, r9
   3cd38:	str	r2, [sp, #8]
   3cd3c:	ldr	r2, [sp, #12]
   3cd40:	adc	r2, r2, r4
   3cd44:	str	r2, [sp, #12]
   3cd48:	cmp	r3, #7
   3cd4c:	ble	3cdb0 <cmetrohash64_1@@Base+0x4cc>
   3cd50:	ldr	r6, [r0]
   3cd54:	movw	r2, #28837	; 0x70a5
   3cd58:	movt	r2, #12120	; 0x2f58
   3cd5c:	movw	lr, #56283	; 0xdbdb
   3cd60:	movt	lr, #34376	; 0x8648
   3cd64:	ldr	r1, [r0, #4]
   3cd68:	add	r0, r0, #8
   3cd6c:	ldrd	r8, [sp, #8]
   3cd70:	umull	r6, r7, r6, r2
   3cd74:	ldr	r3, [sp, #52]	; 0x34
   3cd78:	mla	r7, r2, r1, r7
   3cd7c:	adds	r1, r6, r8
   3cd80:	lsl	r4, r1, #31
   3cd84:	adc	r2, r7, r9
   3cd88:	sub	r3, r3, r0
   3cd8c:	orr	r4, r4, r2, lsr #1
   3cd90:	lsl	ip, r2, #31
   3cd94:	umull	r4, r5, r4, lr
   3cd98:	orr	ip, ip, r1, lsr #1
   3cd9c:	eor	r1, r4, r1
   3cda0:	mla	r5, lr, ip, r5
   3cda4:	str	r1, [sp, #8]
   3cda8:	eor	r2, r5, r2
   3cdac:	str	r2, [sp, #12]
   3cdb0:	cmp	r3, #3
   3cdb4:	ble	3ce04 <cmetrohash64_1@@Base+0x520>
   3cdb8:	ldr	r2, [r0], #4
   3cdbc:	movw	r3, #28837	; 0x70a5
   3cdc0:	movt	r3, #12120	; 0x2f58
   3cdc4:	movw	r1, #56283	; 0xdbdb
   3cdc8:	movt	r1, #34376	; 0x8648
   3cdcc:	ldrd	r6, [sp, #8]
   3cdd0:	umlal	r6, r7, r3, r2
   3cdd4:	ldr	r3, [sp, #52]	; 0x34
   3cdd8:	lsr	r4, r6, #15
   3cddc:	lsr	r2, r7, #15
   3cde0:	orr	r4, r4, r7, lsl #17
   3cde4:	sub	r3, r3, r0
   3cde8:	orr	r2, r2, r6, lsl #17
   3cdec:	umull	r4, r5, r4, r1
   3cdf0:	mla	r5, r1, r2, r5
   3cdf4:	eor	r2, r4, r6
   3cdf8:	str	r2, [sp, #8]
   3cdfc:	eor	r2, r5, r7
   3ce00:	str	r2, [sp, #12]
   3ce04:	cmp	r3, #1
   3ce08:	ble	3ce58 <cmetrohash64_1@@Base+0x574>
   3ce0c:	ldrh	r2, [r0], #2
   3ce10:	movw	r3, #28837	; 0x70a5
   3ce14:	movt	r3, #12120	; 0x2f58
   3ce18:	movw	r1, #56283	; 0xdbdb
   3ce1c:	movt	r1, #34376	; 0x8648
   3ce20:	ldrd	r4, [sp, #8]
   3ce24:	umlal	r4, r5, r3, r2
   3ce28:	ldr	r3, [sp, #52]	; 0x34
   3ce2c:	lsr	r6, r4, #13
   3ce30:	lsr	r2, r5, #13
   3ce34:	orr	r6, r6, r5, lsl #19
   3ce38:	sub	r3, r3, r0
   3ce3c:	orr	r2, r2, r4, lsl #19
   3ce40:	umull	r6, r7, r6, r1
   3ce44:	mla	r7, r1, r2, r7
   3ce48:	eor	r2, r6, r4
   3ce4c:	str	r2, [sp, #8]
   3ce50:	eor	r2, r7, r5
   3ce54:	str	r2, [sp, #12]
   3ce58:	cmp	r3, #0
   3ce5c:	ble	3ceac <cmetrohash64_1@@Base+0x5c8>
   3ce60:	ldrb	r0, [r0]
   3ce64:	movw	r3, #28837	; 0x70a5
   3ce68:	movt	r3, #12120	; 0x2f58
   3ce6c:	movw	lr, #56283	; 0xdbdb
   3ce70:	movt	lr, #34376	; 0x8648
   3ce74:	ldrd	r4, [sp, #8]
   3ce78:	umull	r0, r1, r0, r3
   3ce7c:	adds	r6, r0, r4
   3ce80:	lsr	r2, r6, #25
   3ce84:	adc	r1, r1, r5
   3ce88:	lsr	ip, r1, #25
   3ce8c:	orr	r2, r2, r1, lsl #7
   3ce90:	orr	ip, ip, r6, lsl #7
   3ce94:	umull	r2, r3, r2, lr
   3ce98:	mla	r3, lr, ip, r3
   3ce9c:	eor	r0, r2, r6
   3cea0:	str	r0, [sp, #8]
   3cea4:	eor	r3, r3, r1
   3cea8:	str	r3, [sp, #12]
   3ceac:	ldrd	r4, [sp, #8]
   3ceb0:	movw	r0, #37345	; 0x91e1
   3ceb4:	movt	r0, #51258	; 0xc83a
   3ceb8:	lsl	r2, r4, #31
   3cebc:	lsl	r1, r5, #31
   3cec0:	orr	r2, r2, r5, lsr #1
   3cec4:	orr	r1, r1, r4, lsr #1
   3cec8:	eor	r2, r2, r4
   3cecc:	eor	r1, r1, r5
   3ced0:	umull	r4, r5, r2, r0
   3ced4:	mla	r5, r0, r1, r5
   3ced8:	lsl	r1, r4, #31
   3cedc:	orr	r1, r1, r5, lsr #1
   3cee0:	lsl	r0, r5, #31
   3cee4:	eor	r2, r4, r1
   3cee8:	ldr	r1, [sp, #108]	; 0x6c
   3ceec:	orr	r0, r0, r4, lsr #1
   3cef0:	eor	r3, r5, r0
   3cef4:	str	r2, [r1]
   3cef8:	str	r3, [r1, #4]
   3cefc:	add	sp, sp, #68	; 0x44
   3cf00:	ldrd	r4, [sp]
   3cf04:	ldrd	r6, [sp, #8]
   3cf08:	ldrd	r8, [sp, #16]
   3cf0c:	ldrd	sl, [sp, #24]
   3cf10:	add	sp, sp, #32
   3cf14:	pop	{pc}		; (ldr pc, [sp], #4)

0003cf18 <cmetrohash64_2@@Base>:
   3cf18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3cf1c:	movw	ip, #52149	; 0xcbb5
   3cf20:	movt	ip, #56292	; 0xdbe4
   3cf24:	strd	r6, [sp, #8]
   3cf28:	adds	r4, r2, ip
   3cf2c:	movw	r6, #13310	; 0x33fe
   3cf30:	movt	r6, #21180	; 0x52bc
   3cf34:	strd	r8, [sp, #16]
   3cf38:	add	ip, r0, r2
   3cf3c:	strd	sl, [sp, #24]
   3cf40:	adc	r5, r3, r6
   3cf44:	cmp	r3, #0
   3cf48:	str	lr, [sp, #32]
   3cf4c:	sub	sp, sp, #68	; 0x44
   3cf50:	mov	r3, r5
   3cf54:	ldr	lr, [sp, #104]	; 0x68
   3cf58:	movw	r1, #6389	; 0x18f5
   3cf5c:	movt	r1, #54992	; 0xd6d0
   3cf60:	cmpeq	r2, #31
   3cf64:	mov	r2, r4
   3cf68:	str	ip, [sp, #52]	; 0x34
   3cf6c:	umlal	r2, r3, r1, lr
   3cf70:	mov	r4, r2
   3cf74:	mov	r5, r3
   3cf78:	strd	r4, [sp, #8]
   3cf7c:	bls	3d214 <cmetrohash64_2@@Base+0x2fc>
   3cf80:	movw	lr, #12225	; 0x2fc1
   3cf84:	movt	lr, #25241	; 0x6299
   3cf88:	str	r4, [sp]
   3cf8c:	str	r1, [sp, #32]
   3cf90:	movw	r1, #827	; 0x33b
   3cf94:	movt	r1, #41642	; 0xa2aa
   3cf98:	mov	fp, r3
   3cf9c:	mov	sl, r2
   3cfa0:	str	r5, [sp, #28]
   3cfa4:	str	r1, [sp, #36]	; 0x24
   3cfa8:	movw	r1, #23337	; 0x5b29
   3cfac:	movt	r1, #12476	; 0x30bc
   3cfb0:	mov	r3, r2
   3cfb4:	str	r1, [sp, #44]	; 0x2c
   3cfb8:	sub	r1, ip, #32
   3cfbc:	mov	ip, r5
   3cfc0:	str	r1, [sp, #40]	; 0x28
   3cfc4:	mov	r1, r5
   3cfc8:	str	lr, [sp, #48]	; 0x30
   3cfcc:	ldr	r4, [r0]
   3cfd0:	add	r0, r0, #32
   3cfd4:	ldr	r7, [sp, #32]
   3cfd8:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3cfdc:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3cfe0:	umull	r4, r5, r4, r7
   3cfe4:	ldr	lr, [r0, #-20]	; 0xffffffec
   3cfe8:	mla	r5, r7, r6, r5
   3cfec:	ldr	r7, [sp, #36]	; 0x24
   3cff0:	adds	r3, r4, r3
   3cff4:	ldr	r6, [r0, #-16]
   3cff8:	adc	r4, r5, r1
   3cffc:	lsr	r1, r4, #29
   3d000:	umull	r8, r9, r8, r7
   3d004:	orr	r5, r1, r3, lsl #3
   3d008:	mla	r9, r7, lr, r9
   3d00c:	ldr	lr, [r0, #-12]
   3d010:	lsr	r7, r3, #29
   3d014:	orr	r3, r7, r4, lsl #3
   3d018:	ldr	r4, [r0, #-8]
   3d01c:	adds	r3, r3, r2
   3d020:	adc	r1, r5, ip
   3d024:	adds	sl, r8, sl
   3d028:	lsr	r8, sl, #29
   3d02c:	adc	r5, r9, fp
   3d030:	ldr	r9, [sp, #48]	; 0x30
   3d034:	lsr	fp, r5, #29
   3d038:	orr	r5, r8, r5, lsl #3
   3d03c:	ldr	r8, [sp]
   3d040:	orr	fp, fp, sl, lsl #3
   3d044:	umull	r6, r7, r6, r9
   3d048:	adds	sl, r5, r8
   3d04c:	ldr	r5, [sp, #44]	; 0x2c
   3d050:	mla	r7, r9, lr, r7
   3d054:	ldr	r9, [sp, #28]
   3d058:	ldr	lr, [r0, #-4]
   3d05c:	str	r5, [sp, #16]
   3d060:	umull	r4, r5, r4, r5
   3d064:	adc	fp, fp, r9
   3d068:	adds	r2, r6, r2
   3d06c:	strd	r4, [sp]
   3d070:	adc	ip, r7, ip
   3d074:	lsr	r6, r2, #29
   3d078:	ldr	r4, [sp, #4]
   3d07c:	lsr	r7, ip, #29
   3d080:	orr	ip, r6, ip, lsl #3
   3d084:	ldr	r5, [sp, #16]
   3d088:	orr	r7, r7, r2, lsl #3
   3d08c:	adds	r2, ip, r3
   3d090:	adc	ip, r7, r1
   3d094:	mla	lr, r5, lr, r4
   3d098:	str	lr, [sp, #4]
   3d09c:	ldrd	r6, [sp]
   3d0a0:	adds	r4, r6, r8
   3d0a4:	lsr	lr, r4, #29
   3d0a8:	adc	r6, r7, r9
   3d0ac:	lsr	r5, r6, #29
   3d0b0:	orr	lr, lr, r6, lsl #3
   3d0b4:	orr	r4, r5, r4, lsl #3
   3d0b8:	adds	lr, lr, sl
   3d0bc:	str	lr, [sp]
   3d0c0:	adc	lr, r4, fp
   3d0c4:	str	lr, [sp, #28]
   3d0c8:	ldr	lr, [sp, #40]	; 0x28
   3d0cc:	cmp	r0, lr
   3d0d0:	bls	3cfcc <cmetrohash64_2@@Base+0xb4>
   3d0d4:	eor	r5, r3, sl
   3d0d8:	ldr	lr, [sp]
   3d0dc:	eor	r6, r1, fp
   3d0e0:	str	r5, [sp, #40]	; 0x28
   3d0e4:	ldr	r5, [sp, #28]
   3d0e8:	ldrd	r8, [sp, #32]
   3d0ec:	adds	r4, r3, lr
   3d0f0:	str	r6, [sp, #32]
   3d0f4:	adc	lr, r1, r5
   3d0f8:	umull	r4, r5, r4, r8
   3d0fc:	mla	r5, r8, lr, r5
   3d100:	adds	r6, r4, sl
   3d104:	lsr	r4, r6, #30
   3d108:	adc	lr, r5, fp
   3d10c:	orr	r4, r4, lr, lsl #2
   3d110:	lsr	lr, lr, #30
   3d114:	umull	r4, r5, r4, r9
   3d118:	orr	lr, lr, r6, lsl #2
   3d11c:	eor	r6, r4, r2
   3d120:	mla	r5, r9, lr, r5
   3d124:	adds	r4, sl, r6
   3d128:	eor	r7, r5, ip
   3d12c:	umull	r4, r5, r4, r9
   3d130:	adc	r2, fp, r7
   3d134:	mla	r5, r9, r2, r5
   3d138:	adds	lr, r4, r3
   3d13c:	lsr	r2, lr, #30
   3d140:	adc	ip, r5, r1
   3d144:	adds	r4, r3, r6
   3d148:	orr	r2, r2, ip, lsl #2
   3d14c:	adc	r1, r1, r7
   3d150:	lsr	ip, ip, #30
   3d154:	umull	r4, r5, r4, r8
   3d158:	umull	r2, r3, r2, r8
   3d15c:	orr	ip, ip, lr, lsl #2
   3d160:	mov	lr, r8
   3d164:	mla	r5, r8, r1, r5
   3d168:	strd	r2, [sp, #16]
   3d16c:	mla	r3, r8, ip, r3
   3d170:	ldr	r2, [sp, #16]
   3d174:	mov	ip, r9
   3d178:	str	r3, [sp, #20]
   3d17c:	ldr	r3, [sp]
   3d180:	ldr	r8, [sp, #20]
   3d184:	eor	r2, r2, r3
   3d188:	ldr	r3, [sp, #28]
   3d18c:	eor	r8, r8, r3
   3d190:	adds	r3, r4, r2
   3d194:	adc	r1, r5, r8
   3d198:	adds	sl, sl, r2
   3d19c:	lsr	r4, r3, #30
   3d1a0:	adc	r5, fp, r8
   3d1a4:	lsr	r2, r1, #30
   3d1a8:	umull	r8, r9, sl, r9
   3d1ac:	mov	sl, ip
   3d1b0:	orr	r4, r4, r1, lsl #2
   3d1b4:	orr	r3, r2, r3, lsl #2
   3d1b8:	mla	r9, ip, r5, r9
   3d1bc:	adds	r2, r8, r6
   3d1c0:	umull	r4, r5, r4, ip
   3d1c4:	lsr	r1, r2, #30
   3d1c8:	adc	ip, r9, r7
   3d1cc:	lsr	r6, ip, #30
   3d1d0:	mla	r5, sl, r3, r5
   3d1d4:	ldr	r3, [sp, #40]	; 0x28
   3d1d8:	orr	ip, r1, ip, lsl #2
   3d1dc:	ldr	r1, [sp, #8]
   3d1e0:	orr	r6, r6, r2, lsl #2
   3d1e4:	umull	r8, r9, ip, lr
   3d1e8:	ldr	r2, [sp, #32]
   3d1ec:	eor	r3, r4, r3
   3d1f0:	eor	r3, r3, r8
   3d1f4:	mla	r9, lr, r6, r9
   3d1f8:	adds	r3, r1, r3
   3d1fc:	eor	r2, r5, r2
   3d200:	str	r3, [sp, #8]
   3d204:	eor	r2, r2, r9
   3d208:	ldr	r3, [sp, #12]
   3d20c:	adc	r3, r3, r2
   3d210:	str	r3, [sp, #12]
   3d214:	ldr	fp, [sp, #52]	; 0x34
   3d218:	sub	r3, fp, r0
   3d21c:	cmp	r3, #15
   3d220:	ble	3d368 <cmetrohash64_2@@Base+0x450>
   3d224:	ldr	r4, [r0]
   3d228:	movw	r2, #12225	; 0x2fc1
   3d22c:	movt	r2, #25241	; 0x6299
   3d230:	add	r0, r0, #16
   3d234:	movw	ip, #11461	; 0x2cc5
   3d238:	movt	ip, #2375	; 0x947
   3d23c:	ldr	sl, [r0, #-8]
   3d240:	movw	r1, #23337	; 0x5b29
   3d244:	movt	r1, #12476	; 0x30bc
   3d248:	movw	r7, #11409	; 0x2c91
   3d24c:	movt	r7, #25774	; 0x64ae
   3d250:	ldr	r9, [r0, #-12]
   3d254:	movw	lr, #4606	; 0x11fe
   3d258:	movt	lr, #10469	; 0x28e5
   3d25c:	umull	r4, r5, r4, r2
   3d260:	movw	r8, #5693	; 0x163d
   3d264:	movt	r8, #42015	; 0xa41f
   3d268:	ldr	r6, [r0, #-4]
   3d26c:	sub	r3, fp, r0
   3d270:	strd	r4, [sp]
   3d274:	umull	r4, r5, sl, r2
   3d278:	ldr	sl, [sp, #4]
   3d27c:	strd	r4, [sp, #16]
   3d280:	ldr	r4, [sp]
   3d284:	mla	r9, r2, r9, sl
   3d288:	ldrd	sl, [sp, #8]
   3d28c:	mla	r2, r2, r6, r5
   3d290:	ldr	r5, [sp, #16]
   3d294:	str	r9, [sp, #4]
   3d298:	str	r2, [sp, #20]
   3d29c:	adds	r9, r4, sl
   3d2a0:	ldr	r4, [sp, #4]
   3d2a4:	lsr	r6, r9, #29
   3d2a8:	adc	r2, r4, fp
   3d2ac:	adds	r5, r5, sl
   3d2b0:	ldr	r4, [sp, #20]
   3d2b4:	orr	r6, r6, r2, lsl #3
   3d2b8:	lsr	sl, r2, #29
   3d2bc:	ldr	r2, [sp, #12]
   3d2c0:	orr	r9, sl, r9, lsl #3
   3d2c4:	mul	lr, lr, r6
   3d2c8:	adc	r2, r4, r2
   3d2cc:	lsr	r4, r5, #29
   3d2d0:	str	r9, [sp]
   3d2d4:	mla	lr, r8, r9, lr
   3d2d8:	orr	r4, r4, r2, lsl #3
   3d2dc:	lsr	r2, r2, #29
   3d2e0:	umull	r8, r9, r6, r8
   3d2e4:	orr	r2, r2, r5, lsl #3
   3d2e8:	mul	ip, ip, r4
   3d2ec:	umull	sl, fp, r4, r1
   3d2f0:	add	r9, lr, r9
   3d2f4:	umull	r4, r5, r4, r7
   3d2f8:	mla	ip, r7, r2, ip
   3d2fc:	umull	r6, r7, r6, r1
   3d300:	mla	fp, r1, r2, fp
   3d304:	add	r5, ip, r5
   3d308:	ldr	ip, [sp]
   3d30c:	lsl	r2, r8, #30
   3d310:	lsl	lr, r5, #30
   3d314:	orr	r2, r2, r9, lsr #2
   3d318:	adds	r2, r2, sl
   3d31c:	mla	r7, r1, ip, r7
   3d320:	eor	r2, r2, r6
   3d324:	lsl	r1, r9, #30
   3d328:	lsl	ip, r4, #30
   3d32c:	orr	r8, r1, r8, lsr #2
   3d330:	ldr	r1, [sp, #8]
   3d334:	orr	ip, ip, r5, lsr #2
   3d338:	adc	r8, r8, fp
   3d33c:	orr	r4, lr, r4, lsr #2
   3d340:	adds	r2, r2, ip
   3d344:	eor	r8, r8, r7
   3d348:	eor	r2, r2, sl
   3d34c:	adc	r4, r8, r4
   3d350:	adds	r2, r1, r2
   3d354:	eor	r4, r4, fp
   3d358:	str	r2, [sp, #8]
   3d35c:	ldr	r2, [sp, #12]
   3d360:	adc	r2, r2, r4
   3d364:	str	r2, [sp, #12]
   3d368:	cmp	r3, #7
   3d36c:	ble	3d3d0 <cmetrohash64_2@@Base+0x4b8>
   3d370:	ldr	r6, [r0]
   3d374:	movw	r2, #23337	; 0x5b29
   3d378:	movt	r2, #12476	; 0x30bc
   3d37c:	movw	lr, #827	; 0x33b
   3d380:	movt	lr, #41642	; 0xa2aa
   3d384:	ldr	r1, [r0, #4]
   3d388:	add	r0, r0, #8
   3d38c:	ldrd	r8, [sp, #8]
   3d390:	umull	r6, r7, r6, r2
   3d394:	ldr	r3, [sp, #52]	; 0x34
   3d398:	mla	r7, r2, r1, r7
   3d39c:	adds	r1, r6, r8
   3d3a0:	lsl	r4, r1, #28
   3d3a4:	adc	r2, r7, r9
   3d3a8:	sub	r3, r3, r0
   3d3ac:	orr	r4, r4, r2, lsr #4
   3d3b0:	lsl	ip, r2, #28
   3d3b4:	umull	r4, r5, r4, lr
   3d3b8:	orr	ip, ip, r1, lsr #4
   3d3bc:	eor	r1, r4, r1
   3d3c0:	mla	r5, lr, ip, r5
   3d3c4:	str	r1, [sp, #8]
   3d3c8:	eor	r2, r5, r2
   3d3cc:	str	r2, [sp, #12]
   3d3d0:	cmp	r3, #3
   3d3d4:	ble	3d424 <cmetrohash64_2@@Base+0x50c>
   3d3d8:	ldr	r2, [r0], #4
   3d3dc:	movw	r3, #23337	; 0x5b29
   3d3e0:	movt	r3, #12476	; 0x30bc
   3d3e4:	movw	r1, #827	; 0x33b
   3d3e8:	movt	r1, #41642	; 0xa2aa
   3d3ec:	ldrd	r6, [sp, #8]
   3d3f0:	umlal	r6, r7, r3, r2
   3d3f4:	ldr	r3, [sp, #52]	; 0x34
   3d3f8:	lsr	r4, r6, #15
   3d3fc:	lsr	r2, r7, #15
   3d400:	orr	r4, r4, r7, lsl #17
   3d404:	sub	r3, r3, r0
   3d408:	orr	r2, r2, r6, lsl #17
   3d40c:	umull	r4, r5, r4, r1
   3d410:	mla	r5, r1, r2, r5
   3d414:	eor	r2, r4, r6
   3d418:	str	r2, [sp, #8]
   3d41c:	eor	r2, r5, r7
   3d420:	str	r2, [sp, #12]
   3d424:	cmp	r3, #1
   3d428:	ble	3d478 <cmetrohash64_2@@Base+0x560>
   3d42c:	ldrh	r2, [r0], #2
   3d430:	movw	r3, #23337	; 0x5b29
   3d434:	movt	r3, #12476	; 0x30bc
   3d438:	movw	r1, #827	; 0x33b
   3d43c:	movt	r1, #41642	; 0xa2aa
   3d440:	ldrd	r4, [sp, #8]
   3d444:	umlal	r4, r5, r3, r2
   3d448:	ldr	r3, [sp, #52]	; 0x34
   3d44c:	lsr	r6, r4, #15
   3d450:	lsr	r2, r5, #15
   3d454:	orr	r6, r6, r5, lsl #17
   3d458:	sub	r3, r3, r0
   3d45c:	orr	r2, r2, r4, lsl #17
   3d460:	umull	r6, r7, r6, r1
   3d464:	mla	r7, r1, r2, r7
   3d468:	eor	r2, r6, r4
   3d46c:	str	r2, [sp, #8]
   3d470:	eor	r2, r7, r5
   3d474:	str	r2, [sp, #12]
   3d478:	cmp	r3, #0
   3d47c:	ble	3d4cc <cmetrohash64_2@@Base+0x5b4>
   3d480:	ldrb	r0, [r0]
   3d484:	movw	r3, #23337	; 0x5b29
   3d488:	movt	r3, #12476	; 0x30bc
   3d48c:	movw	lr, #827	; 0x33b
   3d490:	movt	lr, #41642	; 0xa2aa
   3d494:	ldrd	r4, [sp, #8]
   3d498:	umull	r0, r1, r0, r3
   3d49c:	adds	r6, r0, r4
   3d4a0:	lsr	r2, r6, #23
   3d4a4:	adc	r1, r1, r5
   3d4a8:	lsr	ip, r1, #23
   3d4ac:	orr	r2, r2, r1, lsl #9
   3d4b0:	orr	ip, ip, r6, lsl #9
   3d4b4:	umull	r2, r3, r2, lr
   3d4b8:	mla	r3, lr, ip, r3
   3d4bc:	eor	r0, r2, r6
   3d4c0:	str	r0, [sp, #8]
   3d4c4:	eor	r3, r3, r1
   3d4c8:	str	r3, [sp, #12]
   3d4cc:	ldrd	r4, [sp, #8]
   3d4d0:	movw	r0, #6389	; 0x18f5
   3d4d4:	movt	r0, #54992	; 0xd6d0
   3d4d8:	lsr	r2, r4, #28
   3d4dc:	lsr	r1, r5, #28
   3d4e0:	orr	r2, r2, r5, lsl #4
   3d4e4:	orr	r1, r1, r4, lsl #4
   3d4e8:	eor	r2, r2, r4
   3d4ec:	eor	r1, r1, r5
   3d4f0:	umull	r4, r5, r2, r0
   3d4f4:	mla	r5, r0, r1, r5
   3d4f8:	lsr	r0, r4, #29
   3d4fc:	lsr	r1, r5, #29
   3d500:	orr	r0, r0, r5, lsl #3
   3d504:	orr	r1, r1, r4, lsl #3
   3d508:	eor	r2, r4, r0
   3d50c:	eor	r3, r5, r1
   3d510:	ldr	r1, [sp, #108]	; 0x6c
   3d514:	str	r2, [r1]
   3d518:	str	r3, [r1, #4]
   3d51c:	add	sp, sp, #68	; 0x44
   3d520:	ldrd	r4, [sp]
   3d524:	ldrd	r6, [sp, #8]
   3d528:	ldrd	r8, [sp, #16]
   3d52c:	ldrd	sl, [sp, #24]
   3d530:	add	sp, sp, #32
   3d534:	pop	{pc}		; (ldr pc, [sp], #4)
   3d538:	ldr	r3, [r0, #8]
   3d53c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3d540:	strd	r6, [sp, #8]
   3d544:	strd	r8, [sp, #16]
   3d548:	mov	r8, r0
   3d54c:	strd	sl, [sp, #24]
   3d550:	cmp	r1, r3
   3d554:	str	lr, [sp, #32]
   3d558:	sub	sp, sp, #44	; 0x2c
   3d55c:	movcc	r1, r3
   3d560:	ldr	r6, [r0]
   3d564:	cmp	r1, #2
   3d568:	bls	3d700 <cmetrohash64_2@@Base+0x7e8>
   3d56c:	mov	r3, #4
   3d570:	movw	r0, #358	; 0x166
   3d574:	mul	r2, r0, r3
   3d578:	lsl	r4, r3, #1
   3d57c:	cmp	r1, r2, lsr #8
   3d580:	mov	r3, r4
   3d584:	bhi	3d574 <cmetrohash64_2@@Base+0x65c>
   3d588:	mov	r1, #4
   3d58c:	mov	r0, r4
   3d590:	bl	13f7c <calloc@plt>
   3d594:	cmp	r0, #0
   3d598:	str	r0, [sp, #24]
   3d59c:	beq	3d708 <cmetrohash64_2@@Base+0x7f0>
   3d5a0:	ldr	r3, [r8, #12]
   3d5a4:	mov	r5, #0
   3d5a8:	str	r5, [sp, #28]
   3d5ac:	str	r5, [sp, #32]
   3d5b0:	str	r4, [sp, #36]	; 0x24
   3d5b4:	cmp	r3, r5
   3d5b8:	beq	3d6b0 <cmetrohash64_2@@Base+0x798>
   3d5bc:	movw	r9, #15186	; 0x3b52
   3d5c0:	movt	r9, #12137	; 0x2f69
   3d5c4:	sub	r6, r6, #4
   3d5c8:	mov	fp, #179	; 0xb3
   3d5cc:	b	3d5dc <cmetrohash64_2@@Base+0x6c4>
   3d5d0:	add	r5, r5, #1
   3d5d4:	cmp	r5, r3
   3d5d8:	bcs	3d6ac <cmetrohash64_2@@Base+0x794>
   3d5dc:	ldr	r4, [r6, #4]!
   3d5e0:	cmp	r4, #0
   3d5e4:	cmpne	r4, #2
   3d5e8:	beq	3d5d0 <cmetrohash64_2@@Base+0x6b8>
   3d5ec:	cmp	r4, #1
   3d5f0:	ldr	sl, [r4, #8]
   3d5f4:	ldr	r2, [r4, #12]
   3d5f8:	beq	3d738 <cmetrohash64_2@@Base+0x820>
   3d5fc:	ldr	r1, [sp, #32]
   3d600:	ldr	r7, [sp, #36]	; 0x24
   3d604:	mul	r0, fp, r7
   3d608:	cmp	r1, r0, lsr #8
   3d60c:	bcc	3d630 <cmetrohash64_2@@Base+0x718>
   3d610:	lsl	r1, r1, #1
   3d614:	add	r0, sp, #24
   3d618:	str	r2, [sp, #12]
   3d61c:	bl	3d538 <cmetrohash64_2@@Base+0x620>
   3d620:	cmp	r0, #0
   3d624:	bne	3d710 <cmetrohash64_2@@Base+0x7f8>
   3d628:	ldr	r2, [sp, #12]
   3d62c:	ldr	r7, [sp, #36]	; 0x24
   3d630:	add	r1, sp, #16
   3d634:	mov	r0, sl
   3d638:	str	r9, [sp]
   3d63c:	mov	r3, #0
   3d640:	ldr	sl, [sp, #24]
   3d644:	sub	r7, r7, #1
   3d648:	str	r1, [sp, #4]
   3d64c:	bl	3c8e4 <cmetrohash64_1@@Base>
   3d650:	ldr	r3, [sp, #16]
   3d654:	ldr	r0, [sp, #32]
   3d658:	and	r2, r7, r3
   3d65c:	ldr	ip, [sl, r2, lsl #2]
   3d660:	add	r2, sl, r2, lsl #2
   3d664:	add	r0, r0, #1
   3d668:	str	r0, [sp, #32]
   3d66c:	cmp	ip, #0
   3d670:	cmpne	ip, #2
   3d674:	beq	3d698 <cmetrohash64_2@@Base+0x780>
   3d678:	add	r3, r3, #1
   3d67c:	and	r2, r7, r3
   3d680:	add	r3, r3, #1
   3d684:	ldr	r0, [sl, r2, lsl #2]
   3d688:	add	r2, sl, r2, lsl #2
   3d68c:	cmp	r0, #0
   3d690:	cmpne	r0, #2
   3d694:	bne	3d67c <cmetrohash64_2@@Base+0x764>
   3d698:	ldr	r3, [r8, #12]
   3d69c:	add	r5, r5, #1
   3d6a0:	str	r4, [r2]
   3d6a4:	cmp	r5, r3
   3d6a8:	bcc	3d5dc <cmetrohash64_2@@Base+0x6c4>
   3d6ac:	ldr	r6, [r8]
   3d6b0:	cmp	r6, #0
   3d6b4:	beq	3d6c0 <cmetrohash64_2@@Base+0x7a8>
   3d6b8:	mov	r0, r6
   3d6bc:	bl	13fac <free@plt>
   3d6c0:	ldr	r3, [sp, #24]
   3d6c4:	mov	r0, #0
   3d6c8:	ldr	r1, [sp, #28]
   3d6cc:	ldr	r2, [sp, #32]
   3d6d0:	str	r3, [r8]
   3d6d4:	ldr	r3, [sp, #36]	; 0x24
   3d6d8:	str	r1, [r8, #4]
   3d6dc:	str	r2, [r8, #8]
   3d6e0:	str	r3, [r8, #12]
   3d6e4:	add	sp, sp, #44	; 0x2c
   3d6e8:	ldrd	r4, [sp]
   3d6ec:	ldrd	r6, [sp, #8]
   3d6f0:	ldrd	r8, [sp, #16]
   3d6f4:	ldrd	sl, [sp, #24]
   3d6f8:	add	sp, sp, #32
   3d6fc:	pop	{pc}		; (ldr pc, [sp], #4)
   3d700:	mov	r4, #4
   3d704:	b	3d588 <cmetrohash64_2@@Base+0x670>
   3d708:	mvn	r0, #0
   3d70c:	b	3d6e4 <cmetrohash64_2@@Base+0x7cc>
   3d710:	movw	r3, #49320	; 0xc0a8
   3d714:	movt	r3, #6
   3d718:	movw	r2, #32572	; 0x7f3c
   3d71c:	movt	r2, #5
   3d720:	ldr	r0, [r3]
   3d724:	movw	r1, #32624	; 0x7f70
   3d728:	movt	r1, #5
   3d72c:	bl	1406c <fprintf@plt>
   3d730:	mov	r0, #1
   3d734:	bl	14048 <exit@plt>
   3d738:	movw	r3, #46256	; 0xb4b0
   3d73c:	movt	r3, #5
   3d740:	movw	r1, #32420	; 0x7ea4
   3d744:	movt	r1, #5
   3d748:	movw	r0, #32548	; 0x7f24
   3d74c:	movt	r0, #5
   3d750:	mov	r2, #116	; 0x74
   3d754:	bl	14120 <__assert_fail@plt>

0003d758 <fb_name_table_clear@@Base>:
   3d758:	str	r4, [sp, #-8]!
   3d75c:	mov	r4, r0
   3d760:	ldr	r0, [r0]
   3d764:	str	lr, [sp, #4]
   3d768:	cmp	r0, #0
   3d76c:	beq	3d774 <fb_name_table_clear@@Base+0x1c>
   3d770:	bl	13fac <free@plt>
   3d774:	mov	r3, #0
   3d778:	str	r3, [r4]
   3d77c:	str	r3, [r4, #4]
   3d780:	str	r3, [r4, #8]
   3d784:	str	r3, [r4, #12]
   3d788:	ldr	r4, [sp]
   3d78c:	add	sp, sp, #4
   3d790:	pop	{pc}		; (ldr pc, [sp], #4)

0003d794 <fb_name_table_destroy@@Base>:
   3d794:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3d798:	strd	r6, [sp, #8]
   3d79c:	mov	r6, r0
   3d7a0:	str	r8, [sp, #16]
   3d7a4:	subs	r8, r1, #0
   3d7a8:	str	lr, [sp, #20]
   3d7ac:	ldr	r0, [r0]
   3d7b0:	beq	3d7fc <fb_name_table_destroy@@Base+0x68>
   3d7b4:	ldr	ip, [r6, #12]
   3d7b8:	cmp	ip, #0
   3d7bc:	beq	3d7fc <fb_name_table_destroy@@Base+0x68>
   3d7c0:	mov	r7, r2
   3d7c4:	sub	r5, r0, #4
   3d7c8:	mov	r4, #0
   3d7cc:	ldr	r3, [r5, #4]!
   3d7d0:	mov	r0, r7
   3d7d4:	cmp	r3, #0
   3d7d8:	cmpne	r3, #2
   3d7dc:	mov	r1, r3
   3d7e0:	beq	3d830 <fb_name_table_destroy@@Base+0x9c>
   3d7e4:	blx	r8
   3d7e8:	ldr	ip, [r6, #12]
   3d7ec:	add	r4, r4, #1
   3d7f0:	cmp	r4, ip
   3d7f4:	bcc	3d7cc <fb_name_table_destroy@@Base+0x38>
   3d7f8:	ldr	r0, [r6]
   3d7fc:	cmp	r0, #0
   3d800:	beq	3d808 <fb_name_table_destroy@@Base+0x74>
   3d804:	bl	13fac <free@plt>
   3d808:	mov	r3, #0
   3d80c:	str	r3, [r6]
   3d810:	str	r3, [r6, #4]
   3d814:	str	r3, [r6, #8]
   3d818:	str	r3, [r6, #12]
   3d81c:	ldrd	r4, [sp]
   3d820:	ldrd	r6, [sp, #8]
   3d824:	ldr	r8, [sp, #16]
   3d828:	add	sp, sp, #20
   3d82c:	pop	{pc}		; (ldr pc, [sp], #4)
   3d830:	add	r4, r4, #1
   3d834:	cmp	r4, ip
   3d838:	bcc	3d7cc <fb_name_table_destroy@@Base+0x38>
   3d83c:	b	3d7f8 <fb_name_table_destroy@@Base+0x64>

0003d840 <fb_name_table_init@@Base>:
   3d840:	cmp	r1, #2
   3d844:	strd	r4, [sp, #-16]!
   3d848:	mov	r4, r0
   3d84c:	str	r6, [sp, #8]
   3d850:	str	lr, [sp, #12]
   3d854:	bls	3d8b0 <fb_name_table_init@@Base+0x70>
   3d858:	mov	r3, #4
   3d85c:	movw	r0, #358	; 0x166
   3d860:	mul	r2, r0, r3
   3d864:	lsl	r5, r3, #1
   3d868:	cmp	r1, r2, lsr #8
   3d86c:	mov	r3, r5
   3d870:	bhi	3d860 <fb_name_table_init@@Base+0x20>
   3d874:	mov	r1, #4
   3d878:	mov	r0, r5
   3d87c:	bl	13f7c <calloc@plt>
   3d880:	cmp	r0, #0
   3d884:	str	r0, [r4]
   3d888:	beq	3d8b8 <fb_name_table_init@@Base+0x78>
   3d88c:	mov	r3, #0
   3d890:	mov	r0, r3
   3d894:	str	r3, [r4, #4]
   3d898:	str	r3, [r4, #8]
   3d89c:	str	r5, [r4, #12]
   3d8a0:	ldrd	r4, [sp]
   3d8a4:	ldr	r6, [sp, #8]
   3d8a8:	add	sp, sp, #12
   3d8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   3d8b0:	mov	r5, #4
   3d8b4:	b	3d874 <fb_name_table_init@@Base+0x34>
   3d8b8:	mvn	r0, #0
   3d8bc:	b	3d8a0 <fb_name_table_init@@Base+0x60>

0003d8c0 <fb_name_table_resize@@Base>:
   3d8c0:	b	3d538 <cmetrohash64_2@@Base+0x620>

0003d8c4 <fb_name_table_insert@@Base>:
   3d8c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3d8c8:	strd	r6, [sp, #8]
   3d8cc:	strd	r8, [sp, #16]
   3d8d0:	strd	sl, [sp, #24]
   3d8d4:	subs	fp, r3, #0
   3d8d8:	str	lr, [sp, #32]
   3d8dc:	sub	sp, sp, #28
   3d8e0:	str	r1, [sp, #8]
   3d8e4:	beq	3dab0 <fb_name_table_insert@@Base+0x1ec>
   3d8e8:	cmp	fp, #2
   3d8ec:	beq	3da90 <fb_name_table_insert@@Base+0x1cc>
   3d8f0:	cmp	fp, #1
   3d8f4:	beq	3dad0 <fb_name_table_insert@@Base+0x20c>
   3d8f8:	mov	r3, #179	; 0xb3
   3d8fc:	ldr	r1, [r0, #8]
   3d900:	mov	sl, r2
   3d904:	mov	r9, r0
   3d908:	ldr	r7, [r0, #12]
   3d90c:	mul	r3, r3, r7
   3d910:	cmp	r1, r3, lsr #8
   3d914:	bcs	3da08 <fb_name_table_insert@@Base+0x144>
   3d918:	add	ip, sp, #16
   3d91c:	movw	r1, #15186	; 0x3b52
   3d920:	movt	r1, #12137	; 0x2f69
   3d924:	mov	r3, #0
   3d928:	ldr	r8, [r9]
   3d92c:	mov	r2, sl
   3d930:	sub	r7, r7, #1
   3d934:	stm	sp, {r1, ip}
   3d938:	ldr	r0, [sp, #8]
   3d93c:	bl	3c8e4 <cmetrohash64_1@@Base>
   3d940:	ldr	r5, [sp, #16]
   3d944:	ldr	r3, [sp, #64]	; 0x40
   3d948:	sub	r3, r3, #2
   3d94c:	cmp	r3, #1
   3d950:	and	r3, r7, r5
   3d954:	add	r4, r8, r3, lsl #2
   3d958:	bls	3da48 <fb_name_table_insert@@Base+0x184>
   3d95c:	ldr	r6, [r8, r3, lsl #2]
   3d960:	cmp	r6, #0
   3d964:	moveq	r3, r4
   3d968:	beq	3da30 <fb_name_table_insert@@Base+0x16c>
   3d96c:	add	r5, r5, #1
   3d970:	mov	r3, #0
   3d974:	str	r9, [sp, #12]
   3d978:	mov	r9, sl
   3d97c:	mov	sl, r7
   3d980:	mov	r7, r5
   3d984:	mov	r5, r3
   3d988:	b	3d9b0 <fb_name_table_insert@@Base+0xec>
   3d98c:	ldr	r2, [r6, #12]
   3d990:	cmp	r9, r2
   3d994:	beq	3d9c4 <fb_name_table_insert@@Base+0x100>
   3d998:	and	r4, sl, r7
   3d99c:	add	r7, r7, #1
   3d9a0:	ldr	r6, [r8, r4, lsl #2]
   3d9a4:	add	r4, r8, r4, lsl #2
   3d9a8:	cmp	r6, #0
   3d9ac:	beq	3da20 <fb_name_table_insert@@Base+0x15c>
   3d9b0:	cmp	r6, #2
   3d9b4:	bne	3d98c <fb_name_table_insert@@Base+0xc8>
   3d9b8:	cmp	r5, #0
   3d9bc:	moveq	r5, r4
   3d9c0:	b	3d998 <fb_name_table_insert@@Base+0xd4>
   3d9c4:	mov	r2, r9
   3d9c8:	ldr	r1, [r6, #8]
   3d9cc:	ldr	r0, [sp, #8]
   3d9d0:	bl	13fd0 <memcmp@plt>
   3d9d4:	cmp	r0, #0
   3d9d8:	bne	3d998 <fb_name_table_insert@@Base+0xd4>
   3d9dc:	ldr	r3, [sp, #64]	; 0x40
   3d9e0:	cmp	r3, #0
   3d9e4:	streq	fp, [r4]
   3d9e8:	mov	r0, r6
   3d9ec:	add	sp, sp, #28
   3d9f0:	ldrd	r4, [sp]
   3d9f4:	ldrd	r6, [sp, #8]
   3d9f8:	ldrd	r8, [sp, #16]
   3d9fc:	ldrd	sl, [sp, #24]
   3da00:	add	sp, sp, #32
   3da04:	pop	{pc}		; (ldr pc, [sp], #4)
   3da08:	lsl	r1, r1, #1
   3da0c:	bl	3d538 <cmetrohash64_2@@Base+0x620>
   3da10:	cmp	r0, #0
   3da14:	bne	3daf0 <fb_name_table_insert@@Base+0x22c>
   3da18:	ldr	r7, [r9, #12]
   3da1c:	b	3d918 <fb_name_table_insert@@Base+0x54>
   3da20:	ldr	r9, [sp, #12]
   3da24:	cmp	r5, #0
   3da28:	mov	r3, r5
   3da2c:	moveq	r3, r4
   3da30:	ldr	r2, [r9, #8]
   3da34:	mov	r6, #0
   3da38:	add	r2, r2, #1
   3da3c:	str	r2, [r9, #8]
   3da40:	str	fp, [r3]
   3da44:	b	3d9e8 <fb_name_table_insert@@Base+0x124>
   3da48:	ldr	r2, [r9, #8]
   3da4c:	ldr	r1, [r8, r3, lsl #2]
   3da50:	add	r3, r2, #1
   3da54:	cmp	r1, #0
   3da58:	cmpne	r1, #2
   3da5c:	str	r3, [r9, #8]
   3da60:	beq	3da84 <fb_name_table_insert@@Base+0x1c0>
   3da64:	add	r5, r5, #1
   3da68:	and	r4, r7, r5
   3da6c:	add	r5, r5, #1
   3da70:	ldr	r3, [r8, r4, lsl #2]
   3da74:	add	r4, r8, r4, lsl #2
   3da78:	cmp	r3, #0
   3da7c:	cmpne	r3, #2
   3da80:	bne	3da68 <fb_name_table_insert@@Base+0x1a4>
   3da84:	mov	r6, #0
   3da88:	str	fp, [r4]
   3da8c:	b	3d9e8 <fb_name_table_insert@@Base+0x124>
   3da90:	movw	r3, #46256	; 0xb4b0
   3da94:	movt	r3, #5
   3da98:	movw	r1, #32420	; 0x7ea4
   3da9c:	movt	r1, #5
   3daa0:	movw	r0, #32524	; 0x7f0c
   3daa4:	movt	r0, #5
   3daa8:	mov	r2, #115	; 0x73
   3daac:	bl	14120 <__assert_fail@plt>
   3dab0:	movw	r3, #46256	; 0xb4b0
   3dab4:	movt	r3, #5
   3dab8:	movw	r1, #32420	; 0x7ea4
   3dabc:	movt	r1, #5
   3dac0:	movw	r0, #32500	; 0x7ef4
   3dac4:	movt	r0, #5
   3dac8:	mov	r2, #114	; 0x72
   3dacc:	bl	14120 <__assert_fail@plt>
   3dad0:	movw	r3, #46256	; 0xb4b0
   3dad4:	movt	r3, #5
   3dad8:	movw	r1, #32420	; 0x7ea4
   3dadc:	movt	r1, #5
   3dae0:	movw	r0, #32548	; 0x7f24
   3dae4:	movt	r0, #5
   3dae8:	mov	r2, #116	; 0x74
   3daec:	bl	14120 <__assert_fail@plt>
   3daf0:	movw	r3, #49320	; 0xc0a8
   3daf4:	movt	r3, #6
   3daf8:	movw	r2, #32572	; 0x7f3c
   3dafc:	movt	r2, #5
   3db00:	ldr	r0, [r3]
   3db04:	movw	r1, #32624	; 0x7f70
   3db08:	movt	r1, #5
   3db0c:	bl	1406c <fprintf@plt>
   3db10:	mov	r0, #1
   3db14:	bl	14048 <exit@plt>

0003db18 <fb_name_table_insert_item@@Base>:
   3db18:	ldr	r3, [r1, #8]
   3db1c:	cmp	r1, #2
   3db20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3db24:	strd	r6, [sp, #8]
   3db28:	strd	r8, [sp, #16]
   3db2c:	strd	sl, [sp, #24]
   3db30:	str	lr, [sp, #32]
   3db34:	sub	sp, sp, #36	; 0x24
   3db38:	ldr	fp, [r1, #12]
   3db3c:	str	r3, [sp, #12]
   3db40:	str	r2, [sp, #16]
   3db44:	beq	3dd08 <fb_name_table_insert_item@@Base+0x1f0>
   3db48:	cmp	r1, #1
   3db4c:	mov	r9, r1
   3db50:	beq	3dce8 <fb_name_table_insert_item@@Base+0x1d0>
   3db54:	mov	r3, #179	; 0xb3
   3db58:	ldr	r1, [r0, #8]
   3db5c:	mov	sl, r0
   3db60:	ldr	r7, [r0, #12]
   3db64:	mul	r3, r3, r7
   3db68:	cmp	r1, r3, lsr #8
   3db6c:	bcs	3dc60 <fb_name_table_insert_item@@Base+0x148>
   3db70:	add	ip, sp, #24
   3db74:	movw	r1, #15186	; 0x3b52
   3db78:	movt	r1, #12137	; 0x2f69
   3db7c:	mov	r3, #0
   3db80:	ldr	r8, [sl]
   3db84:	mov	r2, fp
   3db88:	sub	r7, r7, #1
   3db8c:	stm	sp, {r1, ip}
   3db90:	ldr	r0, [sp, #12]
   3db94:	bl	3c8e4 <cmetrohash64_1@@Base>
   3db98:	ldr	r3, [sp, #16]
   3db9c:	ldr	r5, [sp, #24]
   3dba0:	sub	r3, r3, #2
   3dba4:	cmp	r3, #1
   3dba8:	and	r3, r7, r5
   3dbac:	add	r4, r8, r3, lsl #2
   3dbb0:	bls	3dca0 <fb_name_table_insert_item@@Base+0x188>
   3dbb4:	ldr	r6, [r8, r3, lsl #2]
   3dbb8:	cmp	r6, #0
   3dbbc:	moveq	r3, r4
   3dbc0:	beq	3dc88 <fb_name_table_insert_item@@Base+0x170>
   3dbc4:	add	r5, r5, #1
   3dbc8:	mov	r3, #0
   3dbcc:	str	sl, [sp, #20]
   3dbd0:	mov	sl, r8
   3dbd4:	mov	r8, r7
   3dbd8:	mov	r7, r5
   3dbdc:	mov	r5, r3
   3dbe0:	b	3dc08 <fb_name_table_insert_item@@Base+0xf0>
   3dbe4:	ldr	r2, [r6, #12]
   3dbe8:	cmp	fp, r2
   3dbec:	beq	3dc1c <fb_name_table_insert_item@@Base+0x104>
   3dbf0:	and	r4, r8, r7
   3dbf4:	add	r7, r7, #1
   3dbf8:	ldr	r6, [sl, r4, lsl #2]
   3dbfc:	add	r4, sl, r4, lsl #2
   3dc00:	cmp	r6, #0
   3dc04:	beq	3dc78 <fb_name_table_insert_item@@Base+0x160>
   3dc08:	cmp	r6, #2
   3dc0c:	bne	3dbe4 <fb_name_table_insert_item@@Base+0xcc>
   3dc10:	cmp	r5, #0
   3dc14:	moveq	r5, r4
   3dc18:	b	3dbf0 <fb_name_table_insert_item@@Base+0xd8>
   3dc1c:	mov	r2, fp
   3dc20:	ldr	r1, [r6, #8]
   3dc24:	ldr	r0, [sp, #12]
   3dc28:	bl	13fd0 <memcmp@plt>
   3dc2c:	cmp	r0, #0
   3dc30:	bne	3dbf0 <fb_name_table_insert_item@@Base+0xd8>
   3dc34:	ldr	r3, [sp, #16]
   3dc38:	cmp	r3, #0
   3dc3c:	streq	r9, [r4]
   3dc40:	mov	r0, r6
   3dc44:	add	sp, sp, #36	; 0x24
   3dc48:	ldrd	r4, [sp]
   3dc4c:	ldrd	r6, [sp, #8]
   3dc50:	ldrd	r8, [sp, #16]
   3dc54:	ldrd	sl, [sp, #24]
   3dc58:	add	sp, sp, #32
   3dc5c:	pop	{pc}		; (ldr pc, [sp], #4)
   3dc60:	lsl	r1, r1, #1
   3dc64:	bl	3d538 <cmetrohash64_2@@Base+0x620>
   3dc68:	cmp	r0, #0
   3dc6c:	bne	3dd28 <fb_name_table_insert_item@@Base+0x210>
   3dc70:	ldr	r7, [sl, #12]
   3dc74:	b	3db70 <fb_name_table_insert_item@@Base+0x58>
   3dc78:	ldr	sl, [sp, #20]
   3dc7c:	cmp	r5, #0
   3dc80:	mov	r3, r5
   3dc84:	moveq	r3, r4
   3dc88:	ldr	r2, [sl, #8]
   3dc8c:	mov	r6, #0
   3dc90:	add	r2, r2, #1
   3dc94:	str	r2, [sl, #8]
   3dc98:	str	r9, [r3]
   3dc9c:	b	3dc40 <fb_name_table_insert_item@@Base+0x128>
   3dca0:	ldr	r2, [sl, #8]
   3dca4:	ldr	r1, [r8, r3, lsl #2]
   3dca8:	add	r3, r2, #1
   3dcac:	cmp	r1, #0
   3dcb0:	cmpne	r1, #2
   3dcb4:	str	r3, [sl, #8]
   3dcb8:	beq	3dcdc <fb_name_table_insert_item@@Base+0x1c4>
   3dcbc:	add	r5, r5, #1
   3dcc0:	and	r4, r7, r5
   3dcc4:	add	r5, r5, #1
   3dcc8:	ldr	r3, [r8, r4, lsl #2]
   3dccc:	add	r4, r8, r4, lsl #2
   3dcd0:	cmp	r3, #0
   3dcd4:	cmpne	r3, #2
   3dcd8:	bne	3dcc0 <fb_name_table_insert_item@@Base+0x1a8>
   3dcdc:	mov	r6, #0
   3dce0:	str	r9, [r4]
   3dce4:	b	3dc40 <fb_name_table_insert_item@@Base+0x128>
   3dce8:	movw	r3, #46256	; 0xb4b0
   3dcec:	movt	r3, #5
   3dcf0:	movw	r1, #32420	; 0x7ea4
   3dcf4:	movt	r1, #5
   3dcf8:	movw	r0, #32548	; 0x7f24
   3dcfc:	movt	r0, #5
   3dd00:	mov	r2, #116	; 0x74
   3dd04:	bl	14120 <__assert_fail@plt>
   3dd08:	movw	r3, #46256	; 0xb4b0
   3dd0c:	movt	r3, #5
   3dd10:	movw	r1, #32420	; 0x7ea4
   3dd14:	movt	r1, #5
   3dd18:	movw	r0, #32524	; 0x7f0c
   3dd1c:	movt	r0, #5
   3dd20:	mov	r2, #115	; 0x73
   3dd24:	bl	14120 <__assert_fail@plt>
   3dd28:	movw	r3, #49320	; 0xc0a8
   3dd2c:	movt	r3, #6
   3dd30:	movw	r2, #32572	; 0x7f3c
   3dd34:	movt	r2, #5
   3dd38:	ldr	r0, [r3]
   3dd3c:	movw	r1, #32624	; 0x7f70
   3dd40:	movt	r1, #5
   3dd44:	bl	1406c <fprintf@plt>
   3dd48:	mov	r0, #1
   3dd4c:	bl	14048 <exit@plt>

0003dd50 <fb_name_table_find@@Base>:
   3dd50:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3dd54:	strd	r6, [sp, #8]
   3dd58:	strd	r8, [sp, #16]
   3dd5c:	ldr	r8, [r0]
   3dd60:	str	lr, [sp, #24]
   3dd64:	sub	sp, sp, #20
   3dd68:	cmp	r8, #0
   3dd6c:	beq	3de14 <fb_name_table_find@@Base+0xc4>
   3dd70:	mov	r7, r1
   3dd74:	add	ip, sp, #8
   3dd78:	ldr	r9, [r0, #12]
   3dd7c:	movw	r1, #15186	; 0x3b52
   3dd80:	movt	r1, #12137	; 0x2f69
   3dd84:	mov	r3, #0
   3dd88:	mov	r0, r7
   3dd8c:	stm	sp, {r1, ip}
   3dd90:	mov	r6, r2
   3dd94:	bl	3c8e4 <cmetrohash64_1@@Base>
   3dd98:	ldr	r5, [sp, #8]
   3dd9c:	sub	r9, r9, #1
   3dda0:	and	r3, r9, r5
   3dda4:	ldr	r4, [r8, r3, lsl #2]
   3dda8:	cmp	r4, #0
   3ddac:	beq	3de14 <fb_name_table_find@@Base+0xc4>
   3ddb0:	add	r5, r5, #1
   3ddb4:	b	3ddcc <fb_name_table_find@@Base+0x7c>
   3ddb8:	and	r3, r9, r5
   3ddbc:	add	r5, r5, #1
   3ddc0:	ldr	r4, [r8, r3, lsl #2]
   3ddc4:	cmp	r4, #0
   3ddc8:	beq	3de14 <fb_name_table_find@@Base+0xc4>
   3ddcc:	cmp	r4, #2
   3ddd0:	beq	3ddb8 <fb_name_table_find@@Base+0x68>
   3ddd4:	ldr	r3, [r4, #12]
   3ddd8:	cmp	r6, r3
   3dddc:	bne	3ddb8 <fb_name_table_find@@Base+0x68>
   3dde0:	mov	r2, r6
   3dde4:	mov	r0, r7
   3dde8:	ldr	r1, [r4, #8]
   3ddec:	bl	13fd0 <memcmp@plt>
   3ddf0:	cmp	r0, #0
   3ddf4:	bne	3ddb8 <fb_name_table_find@@Base+0x68>
   3ddf8:	mov	r0, r4
   3ddfc:	add	sp, sp, #20
   3de00:	ldrd	r4, [sp]
   3de04:	ldrd	r6, [sp, #8]
   3de08:	ldrd	r8, [sp, #16]
   3de0c:	add	sp, sp, #24
   3de10:	pop	{pc}		; (ldr pc, [sp], #4)
   3de14:	mov	r4, #0
   3de18:	b	3ddf8 <fb_name_table_find@@Base+0xa8>

0003de1c <fb_name_table_find_item@@Base>:
   3de1c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3de20:	strd	r6, [sp, #8]
   3de24:	ldr	r7, [r0]
   3de28:	strd	r8, [sp, #16]
   3de2c:	str	lr, [sp, #24]
   3de30:	sub	sp, sp, #20
   3de34:	ldr	r8, [r1, #8]
   3de38:	cmp	r7, #0
   3de3c:	ldr	r6, [r1, #12]
   3de40:	beq	3dee8 <fb_name_table_find_item@@Base+0xcc>
   3de44:	add	r1, sp, #8
   3de48:	movw	r3, #15186	; 0x3b52
   3de4c:	movt	r3, #12137	; 0x2f69
   3de50:	mov	r2, r6
   3de54:	ldr	r9, [r0, #12]
   3de58:	mov	r0, r8
   3de5c:	str	r3, [sp]
   3de60:	mov	r3, #0
   3de64:	str	r1, [sp, #4]
   3de68:	bl	3c8e4 <cmetrohash64_1@@Base>
   3de6c:	ldr	r5, [sp, #8]
   3de70:	sub	r9, r9, #1
   3de74:	and	r3, r9, r5
   3de78:	ldr	r4, [r7, r3, lsl #2]
   3de7c:	cmp	r4, #0
   3de80:	beq	3dee8 <fb_name_table_find_item@@Base+0xcc>
   3de84:	add	r5, r5, #1
   3de88:	b	3dea0 <fb_name_table_find_item@@Base+0x84>
   3de8c:	and	r3, r9, r5
   3de90:	add	r5, r5, #1
   3de94:	ldr	r4, [r7, r3, lsl #2]
   3de98:	cmp	r4, #0
   3de9c:	beq	3dee8 <fb_name_table_find_item@@Base+0xcc>
   3dea0:	cmp	r4, #2
   3dea4:	beq	3de8c <fb_name_table_find_item@@Base+0x70>
   3dea8:	ldr	r3, [r4, #12]
   3deac:	cmp	r6, r3
   3deb0:	bne	3de8c <fb_name_table_find_item@@Base+0x70>
   3deb4:	mov	r2, r6
   3deb8:	mov	r0, r8
   3debc:	ldr	r1, [r4, #8]
   3dec0:	bl	13fd0 <memcmp@plt>
   3dec4:	cmp	r0, #0
   3dec8:	bne	3de8c <fb_name_table_find_item@@Base+0x70>
   3decc:	mov	r0, r4
   3ded0:	add	sp, sp, #20
   3ded4:	ldrd	r4, [sp]
   3ded8:	ldrd	r6, [sp, #8]
   3dedc:	ldrd	r8, [sp, #16]
   3dee0:	add	sp, sp, #24
   3dee4:	pop	{pc}		; (ldr pc, [sp], #4)
   3dee8:	mov	r4, #0
   3deec:	b	3decc <fb_name_table_find_item@@Base+0xb0>

0003def0 <fb_name_table_remove@@Base>:
   3def0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3def4:	ldr	r4, [r0]
   3def8:	strd	r6, [sp, #8]
   3defc:	strd	r8, [sp, #16]
   3df00:	strd	sl, [sp, #24]
   3df04:	str	lr, [sp, #32]
   3df08:	sub	sp, sp, #20
   3df0c:	cmp	r4, #0
   3df10:	beq	3dfdc <fb_name_table_remove@@Base+0xec>
   3df14:	mov	r7, r1
   3df18:	add	ip, sp, #8
   3df1c:	movw	r1, #15186	; 0x3b52
   3df20:	movt	r1, #12137	; 0x2f69
   3df24:	mov	r5, r0
   3df28:	mov	r3, #0
   3df2c:	mov	r0, r7
   3df30:	ldr	r8, [r5, #12]
   3df34:	mov	r6, r2
   3df38:	stm	sp, {r1, ip}
   3df3c:	bl	3c8e4 <cmetrohash64_1@@Base>
   3df40:	ldr	sl, [sp, #8]
   3df44:	sub	r8, r8, #1
   3df48:	and	r3, r8, sl
   3df4c:	ldr	r9, [r4, r3, lsl #2]
   3df50:	add	fp, r4, r3, lsl #2
   3df54:	cmp	r9, #0
   3df58:	beq	3dfdc <fb_name_table_remove@@Base+0xec>
   3df5c:	add	sl, sl, #1
   3df60:	b	3df7c <fb_name_table_remove@@Base+0x8c>
   3df64:	and	r3, r8, sl
   3df68:	add	sl, sl, #1
   3df6c:	ldr	r9, [r4, r3, lsl #2]
   3df70:	add	fp, r4, r3, lsl #2
   3df74:	cmp	r9, #0
   3df78:	beq	3dfdc <fb_name_table_remove@@Base+0xec>
   3df7c:	cmp	r9, #2
   3df80:	beq	3df64 <fb_name_table_remove@@Base+0x74>
   3df84:	ldr	r3, [r9, #12]
   3df88:	cmp	r6, r3
   3df8c:	bne	3df64 <fb_name_table_remove@@Base+0x74>
   3df90:	mov	r2, r6
   3df94:	mov	r0, r7
   3df98:	ldr	r1, [r9, #8]
   3df9c:	bl	13fd0 <memcmp@plt>
   3dfa0:	cmp	r0, #0
   3dfa4:	bne	3df64 <fb_name_table_remove@@Base+0x74>
   3dfa8:	ldr	r3, [r5, #8]
   3dfac:	mov	r2, #2
   3dfb0:	str	r2, [fp]
   3dfb4:	sub	r3, r3, #1
   3dfb8:	str	r3, [r5, #8]
   3dfbc:	mov	r0, r9
   3dfc0:	add	sp, sp, #20
   3dfc4:	ldrd	r4, [sp]
   3dfc8:	ldrd	r6, [sp, #8]
   3dfcc:	ldrd	r8, [sp, #16]
   3dfd0:	ldrd	sl, [sp, #24]
   3dfd4:	add	sp, sp, #32
   3dfd8:	pop	{pc}		; (ldr pc, [sp], #4)
   3dfdc:	mov	r9, #0
   3dfe0:	b	3dfbc <fb_name_table_remove@@Base+0xcc>

0003dfe4 <fb_name_table_remove_item@@Base>:
   3dfe4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3dfe8:	ldr	r4, [r0]
   3dfec:	strd	r6, [sp, #8]
   3dff0:	strd	r8, [sp, #16]
   3dff4:	strd	sl, [sp, #24]
   3dff8:	str	lr, [sp, #32]
   3dffc:	sub	sp, sp, #20
   3e000:	cmp	r4, #0
   3e004:	ldrd	r6, [r1, #8]
   3e008:	beq	3e0d4 <fb_name_table_remove_item@@Base+0xf0>
   3e00c:	add	r1, sp, #8
   3e010:	movw	r3, #15186	; 0x3b52
   3e014:	movt	r3, #12137	; 0x2f69
   3e018:	mov	r5, r0
   3e01c:	mov	r2, r7
   3e020:	mov	r0, r6
   3e024:	ldr	r8, [r5, #12]
   3e028:	str	r3, [sp]
   3e02c:	mov	r3, #0
   3e030:	str	r1, [sp, #4]
   3e034:	bl	3c8e4 <cmetrohash64_1@@Base>
   3e038:	ldr	sl, [sp, #8]
   3e03c:	sub	r8, r8, #1
   3e040:	and	r3, r8, sl
   3e044:	ldr	r9, [r4, r3, lsl #2]
   3e048:	add	fp, r4, r3, lsl #2
   3e04c:	cmp	r9, #0
   3e050:	beq	3e0d4 <fb_name_table_remove_item@@Base+0xf0>
   3e054:	add	sl, sl, #1
   3e058:	b	3e074 <fb_name_table_remove_item@@Base+0x90>
   3e05c:	and	r3, r8, sl
   3e060:	add	sl, sl, #1
   3e064:	ldr	r9, [r4, r3, lsl #2]
   3e068:	add	fp, r4, r3, lsl #2
   3e06c:	cmp	r9, #0
   3e070:	beq	3e0d4 <fb_name_table_remove_item@@Base+0xf0>
   3e074:	cmp	r9, #2
   3e078:	beq	3e05c <fb_name_table_remove_item@@Base+0x78>
   3e07c:	ldr	r3, [r9, #12]
   3e080:	cmp	r7, r3
   3e084:	bne	3e05c <fb_name_table_remove_item@@Base+0x78>
   3e088:	mov	r2, r7
   3e08c:	mov	r0, r6
   3e090:	ldr	r1, [r9, #8]
   3e094:	bl	13fd0 <memcmp@plt>
   3e098:	cmp	r0, #0
   3e09c:	bne	3e05c <fb_name_table_remove_item@@Base+0x78>
   3e0a0:	ldr	r3, [r5, #8]
   3e0a4:	mov	r2, #2
   3e0a8:	str	r2, [fp]
   3e0ac:	sub	r3, r3, #1
   3e0b0:	str	r3, [r5, #8]
   3e0b4:	mov	r0, r9
   3e0b8:	add	sp, sp, #20
   3e0bc:	ldrd	r4, [sp]
   3e0c0:	ldrd	r6, [sp, #8]
   3e0c4:	ldrd	r8, [sp, #16]
   3e0c8:	ldrd	sl, [sp, #24]
   3e0cc:	add	sp, sp, #32
   3e0d0:	pop	{pc}		; (ldr pc, [sp], #4)
   3e0d4:	mov	r9, #0
   3e0d8:	b	3e0b4 <fb_name_table_remove_item@@Base+0xd0>

0003e0dc <fb_name_table_visit@@Base>:
   3e0dc:	ldr	ip, [r0, #12]
   3e0e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e0e4:	ldr	r5, [r0]
   3e0e8:	strd	r6, [sp, #8]
   3e0ec:	str	r8, [sp, #16]
   3e0f0:	cmp	ip, #0
   3e0f4:	str	lr, [sp, #20]
   3e0f8:	beq	3e13c <fb_name_table_visit@@Base+0x60>
   3e0fc:	mov	r6, r2
   3e100:	mov	r8, r1
   3e104:	mov	r7, r0
   3e108:	sub	r5, r5, #4
   3e10c:	mov	r4, #0
   3e110:	ldr	r3, [r5, #4]!
   3e114:	mov	r0, r6
   3e118:	cmp	r3, #0
   3e11c:	cmpne	r3, #2
   3e120:	mov	r1, r3
   3e124:	beq	3e150 <fb_name_table_visit@@Base+0x74>
   3e128:	blx	r8
   3e12c:	ldr	ip, [r7, #12]
   3e130:	add	r4, r4, #1
   3e134:	cmp	r4, ip
   3e138:	bcc	3e110 <fb_name_table_visit@@Base+0x34>
   3e13c:	ldrd	r4, [sp]
   3e140:	ldrd	r6, [sp, #8]
   3e144:	ldr	r8, [sp, #16]
   3e148:	add	sp, sp, #20
   3e14c:	pop	{pc}		; (ldr pc, [sp], #4)
   3e150:	add	r4, r4, #1
   3e154:	cmp	r4, ip
   3e158:	bcc	3e110 <fb_name_table_visit@@Base+0x34>
   3e15c:	b	3e13c <fb_name_table_visit@@Base+0x60>
   3e160:	ldr	r3, [r0, #8]
   3e164:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3e168:	strd	r6, [sp, #8]
   3e16c:	mov	r7, r0
   3e170:	strd	r8, [sp, #16]
   3e174:	strd	sl, [sp, #24]
   3e178:	cmp	r1, r3
   3e17c:	str	lr, [sp, #32]
   3e180:	sub	sp, sp, #20
   3e184:	movcc	r1, r3
   3e188:	ldr	r6, [r0]
   3e18c:	cmp	r1, #2
   3e190:	bls	3e378 <fb_name_table_visit@@Base+0x29c>
   3e194:	mov	r3, #4
   3e198:	movw	r0, #358	; 0x166
   3e19c:	mul	r2, r0, r3
   3e1a0:	lsl	r4, r3, #1
   3e1a4:	cmp	r1, r2, lsr #8
   3e1a8:	mov	r3, r4
   3e1ac:	bhi	3e19c <fb_name_table_visit@@Base+0xc0>
   3e1b0:	mov	r1, #4
   3e1b4:	mov	r0, r4
   3e1b8:	bl	13f7c <calloc@plt>
   3e1bc:	cmp	r0, #0
   3e1c0:	str	r0, [sp]
   3e1c4:	beq	3e380 <fb_name_table_visit@@Base+0x2a4>
   3e1c8:	ldr	lr, [r7, #12]
   3e1cc:	mov	r5, #0
   3e1d0:	str	r5, [sp, #4]
   3e1d4:	str	r5, [sp, #8]
   3e1d8:	str	r4, [sp, #12]
   3e1dc:	cmp	lr, r5
   3e1e0:	beq	3e2b8 <fb_name_table_visit@@Base+0x1dc>
   3e1e4:	movw	sl, #15191	; 0x3b57
   3e1e8:	movt	sl, #12137	; 0x2f69
   3e1ec:	movw	r8, #31153	; 0x79b1
   3e1f0:	movt	r8, #40503	; 0x9e37
   3e1f4:	movw	r9, #15186	; 0x3b52
   3e1f8:	movt	r9, #12137	; 0x2f69
   3e1fc:	sub	r6, r6, #4
   3e200:	b	3e210 <fb_name_table_visit@@Base+0x134>
   3e204:	add	r5, r5, #1
   3e208:	cmp	r5, lr
   3e20c:	bcs	3e2b4 <fb_name_table_visit@@Base+0x1d8>
   3e210:	ldr	r4, [r6, #4]!
   3e214:	cmp	r4, #0
   3e218:	cmpne	r4, #2
   3e21c:	beq	3e204 <fb_name_table_visit@@Base+0x128>
   3e220:	cmp	r4, #1
   3e224:	beq	3e388 <fb_name_table_visit@@Base+0x2ac>
   3e228:	mov	r3, #179	; 0xb3
   3e22c:	ldr	r1, [sp, #8]
   3e230:	ldr	r0, [sp, #12]
   3e234:	mul	r3, r3, r0
   3e238:	cmp	r1, r3, lsr #8
   3e23c:	bcs	3e304 <fb_name_table_visit@@Base+0x228>
   3e240:	ldrh	r3, [r4, #8]
   3e244:	sub	r0, r0, #1
   3e248:	ldr	ip, [sp]
   3e24c:	cmp	r3, #5
   3e250:	beq	3e328 <fb_name_table_visit@@Base+0x24c>
   3e254:	cmp	r3, #6
   3e258:	beq	3e35c <fb_name_table_visit@@Base+0x280>
   3e25c:	cmp	r3, #4
   3e260:	movne	r3, ip
   3e264:	movne	r2, #0
   3e268:	beq	3e340 <fb_name_table_visit@@Base+0x264>
   3e26c:	ldr	fp, [r3]
   3e270:	add	r1, r1, #1
   3e274:	str	r1, [sp, #8]
   3e278:	cmp	fp, #2
   3e27c:	cmpne	fp, #0
   3e280:	beq	3e2a4 <fb_name_table_visit@@Base+0x1c8>
   3e284:	add	r2, r2, #1
   3e288:	and	r3, r0, r2
   3e28c:	add	r2, r2, #1
   3e290:	ldr	r1, [ip, r3, lsl #2]
   3e294:	add	r3, ip, r3, lsl #2
   3e298:	cmp	r1, #0
   3e29c:	cmpne	r1, #2
   3e2a0:	bne	3e288 <fb_name_table_visit@@Base+0x1ac>
   3e2a4:	add	r5, r5, #1
   3e2a8:	str	r4, [r3]
   3e2ac:	cmp	r5, lr
   3e2b0:	bcc	3e210 <fb_name_table_visit@@Base+0x134>
   3e2b4:	ldr	r6, [r7]
   3e2b8:	cmp	r6, #0
   3e2bc:	beq	3e2c8 <fb_name_table_visit@@Base+0x1ec>
   3e2c0:	mov	r0, r6
   3e2c4:	bl	13fac <free@plt>
   3e2c8:	ldr	r3, [sp]
   3e2cc:	mov	r0, #0
   3e2d0:	ldmib	sp, {r1, r2}
   3e2d4:	str	r3, [r7]
   3e2d8:	ldr	r3, [sp, #12]
   3e2dc:	str	r1, [r7, #4]
   3e2e0:	str	r2, [r7, #8]
   3e2e4:	str	r3, [r7, #12]
   3e2e8:	add	sp, sp, #20
   3e2ec:	ldrd	r4, [sp]
   3e2f0:	ldrd	r6, [sp, #8]
   3e2f4:	ldrd	r8, [sp, #16]
   3e2f8:	ldrd	sl, [sp, #24]
   3e2fc:	add	sp, sp, #32
   3e300:	pop	{pc}		; (ldr pc, [sp], #4)
   3e304:	lsl	r1, r1, #1
   3e308:	mov	r0, sp
   3e30c:	bl	3e160 <fb_name_table_visit@@Base+0x84>
   3e310:	cmp	r0, #0
   3e314:	bne	3e3a8 <fb_name_table_visit@@Base+0x2cc>
   3e318:	ldr	r1, [sp, #8]
   3e31c:	ldr	lr, [r7, #12]
   3e320:	ldr	r0, [sp, #12]
   3e324:	b	3e240 <fb_name_table_visit@@Base+0x164>
   3e328:	ldr	r2, [r4]
   3e32c:	eor	r2, r2, sl
   3e330:	mul	r2, r8, r2
   3e334:	and	r3, r0, r2
   3e338:	add	r3, ip, r3, lsl #2
   3e33c:	b	3e26c <fb_name_table_visit@@Base+0x190>
   3e340:	ldr	r2, [r4]
   3e344:	eor	r2, r2, #4
   3e348:	eor	r2, r2, r9
   3e34c:	mul	r2, r8, r2
   3e350:	and	r3, r0, r2
   3e354:	add	r3, ip, r3, lsl #2
   3e358:	b	3e26c <fb_name_table_visit@@Base+0x190>
   3e35c:	ldrb	r2, [r4]
   3e360:	eor	r2, r2, #6
   3e364:	eor	r2, r2, r9
   3e368:	mul	r2, r8, r2
   3e36c:	and	r3, r0, r2
   3e370:	add	r3, ip, r3, lsl #2
   3e374:	b	3e26c <fb_name_table_visit@@Base+0x190>
   3e378:	mov	r4, #4
   3e37c:	b	3e1b0 <fb_name_table_visit@@Base+0xd4>
   3e380:	mvn	r0, #0
   3e384:	b	3e2e8 <fb_name_table_visit@@Base+0x20c>
   3e388:	movw	r3, #46280	; 0xb4c8
   3e38c:	movt	r3, #5
   3e390:	movw	r1, #32420	; 0x7ea4
   3e394:	movt	r1, #5
   3e398:	movw	r0, #32548	; 0x7f24
   3e39c:	movt	r0, #5
   3e3a0:	mov	r2, #116	; 0x74
   3e3a4:	bl	14120 <__assert_fail@plt>
   3e3a8:	movw	r3, #49320	; 0xc0a8
   3e3ac:	movt	r3, #6
   3e3b0:	movw	r2, #32572	; 0x7f3c
   3e3b4:	movt	r2, #5
   3e3b8:	ldr	r0, [r3]
   3e3bc:	movw	r1, #32624	; 0x7f70
   3e3c0:	movt	r1, #5
   3e3c4:	bl	1406c <fprintf@plt>
   3e3c8:	mov	r0, #1
   3e3cc:	bl	14048 <exit@plt>
   3e3d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3e3d4:	strd	r6, [sp, #8]
   3e3d8:	strd	sl, [sp, #24]
   3e3dc:	subs	fp, r2, #0
   3e3e0:	strd	r8, [sp, #16]
   3e3e4:	str	lr, [sp, #32]
   3e3e8:	sub	sp, sp, #12
   3e3ec:	beq	3e670 <fb_name_table_visit@@Base+0x594>
   3e3f0:	cmp	fp, #2
   3e3f4:	beq	3e650 <fb_name_table_visit@@Base+0x574>
   3e3f8:	cmp	fp, #1
   3e3fc:	beq	3e630 <fb_name_table_visit@@Base+0x554>
   3e400:	ldr	lr, [r0, #12]
   3e404:	mov	r9, r1
   3e408:	mov	r6, r3
   3e40c:	mov	r3, #179	; 0xb3
   3e410:	mov	sl, r0
   3e414:	ldr	r1, [r0, #8]
   3e418:	mul	r3, r3, lr
   3e41c:	cmp	r1, r3, lsr #8
   3e420:	bcs	3e560 <fb_name_table_visit@@Base+0x484>
   3e424:	ldrh	ip, [r9, #8]
   3e428:	sub	lr, lr, #1
   3e42c:	ldr	r1, [sl]
   3e430:	cmp	ip, #5
   3e434:	beq	3e5fc <fb_name_table_visit@@Base+0x520>
   3e438:	cmp	ip, #6
   3e43c:	beq	3e5f0 <fb_name_table_visit@@Base+0x514>
   3e440:	cmp	ip, #4
   3e444:	movne	r3, r1
   3e448:	movne	r2, #0
   3e44c:	beq	3e578 <fb_name_table_visit@@Base+0x49c>
   3e450:	sub	r4, r6, #2
   3e454:	ldr	r0, [r3]
   3e458:	cmp	r4, #1
   3e45c:	bls	3e5ac <fb_name_table_visit@@Base+0x4d0>
   3e460:	cmp	r0, #0
   3e464:	moveq	r8, r3
   3e468:	beq	3e530 <fb_name_table_visit@@Base+0x454>
   3e46c:	mov	r4, r6
   3e470:	add	r2, r2, #1
   3e474:	mov	r8, #0
   3e478:	mov	r7, fp
   3e47c:	mov	r6, sl
   3e480:	str	r4, [sp, #4]
   3e484:	b	3e4c4 <fb_name_table_visit@@Base+0x3e8>
   3e488:	ldrh	r4, [r0, #8]
   3e48c:	cmp	r4, ip
   3e490:	bne	3e4ac <fb_name_table_visit@@Base+0x3d0>
   3e494:	cmp	ip, #5
   3e498:	beq	3e4d8 <fb_name_table_visit@@Base+0x3fc>
   3e49c:	cmp	ip, #6
   3e4a0:	beq	3e508 <fb_name_table_visit@@Base+0x42c>
   3e4a4:	cmp	ip, #4
   3e4a8:	beq	3e4d8 <fb_name_table_visit@@Base+0x3fc>
   3e4ac:	and	r3, lr, r2
   3e4b0:	add	r2, r2, #1
   3e4b4:	ldr	r0, [r1, r3, lsl #2]
   3e4b8:	add	r3, r1, r3, lsl #2
   3e4bc:	cmp	r0, #0
   3e4c0:	beq	3e520 <fb_name_table_visit@@Base+0x444>
   3e4c4:	cmp	r0, #2
   3e4c8:	bne	3e488 <fb_name_table_visit@@Base+0x3ac>
   3e4cc:	cmp	r8, #0
   3e4d0:	moveq	r8, r3
   3e4d4:	b	3e4ac <fb_name_table_visit@@Base+0x3d0>
   3e4d8:	ldrd	r4, [r0]
   3e4dc:	ldrd	sl, [r9]
   3e4e0:	cmp	fp, r5
   3e4e4:	cmpeq	sl, r4
   3e4e8:	moveq	r4, #1
   3e4ec:	movne	r4, #0
   3e4f0:	cmp	r4, #0
   3e4f4:	beq	3e4ac <fb_name_table_visit@@Base+0x3d0>
   3e4f8:	ldr	r6, [sp, #4]
   3e4fc:	cmp	r6, #0
   3e500:	streq	r7, [r3]
   3e504:	b	3e544 <fb_name_table_visit@@Base+0x468>
   3e508:	ldrb	r4, [r9]
   3e50c:	ldrb	r5, [r0]
   3e510:	sub	r4, r4, r5
   3e514:	clz	r4, r4
   3e518:	lsr	r4, r4, #5
   3e51c:	b	3e4f0 <fb_name_table_visit@@Base+0x414>
   3e520:	cmp	r8, #0
   3e524:	mov	sl, r6
   3e528:	mov	fp, r7
   3e52c:	moveq	r8, r3
   3e530:	ldr	r3, [sl, #8]
   3e534:	mov	r0, #0
   3e538:	add	r3, r3, #1
   3e53c:	str	r3, [sl, #8]
   3e540:	str	fp, [r8]
   3e544:	add	sp, sp, #12
   3e548:	ldrd	r4, [sp]
   3e54c:	ldrd	r6, [sp, #8]
   3e550:	ldrd	r8, [sp, #16]
   3e554:	ldrd	sl, [sp, #24]
   3e558:	add	sp, sp, #32
   3e55c:	pop	{pc}		; (ldr pc, [sp], #4)
   3e560:	lsl	r1, r1, #1
   3e564:	bl	3e160 <fb_name_table_visit@@Base+0x84>
   3e568:	cmp	r0, #0
   3e56c:	bne	3e608 <fb_name_table_visit@@Base+0x52c>
   3e570:	ldr	lr, [sl, #12]
   3e574:	b	3e424 <fb_name_table_visit@@Base+0x348>
   3e578:	ldr	r0, [r9]
   3e57c:	movw	r3, #15190	; 0x3b56
   3e580:	movt	r3, #12137	; 0x2f69
   3e584:	movw	r2, #31153	; 0x79b1
   3e588:	movt	r2, #40503	; 0x9e37
   3e58c:	eor	r3, r3, r0
   3e590:	sub	r4, r6, #2
   3e594:	mul	r2, r2, r3
   3e598:	cmp	r4, #1
   3e59c:	and	r3, lr, r2
   3e5a0:	add	r3, r1, r3, lsl #2
   3e5a4:	ldr	r0, [r3]
   3e5a8:	bhi	3e460 <fb_name_table_visit@@Base+0x384>
   3e5ac:	cmp	r0, #0
   3e5b0:	cmpne	r0, #2
   3e5b4:	ldr	ip, [sl, #8]
   3e5b8:	add	ip, ip, #1
   3e5bc:	str	ip, [sl, #8]
   3e5c0:	beq	3e5e4 <fb_name_table_visit@@Base+0x508>
   3e5c4:	add	r2, r2, #1
   3e5c8:	and	r3, lr, r2
   3e5cc:	add	r2, r2, #1
   3e5d0:	ldr	r0, [r1, r3, lsl #2]
   3e5d4:	add	r3, r1, r3, lsl #2
   3e5d8:	cmp	r0, #0
   3e5dc:	cmpne	r0, #2
   3e5e0:	bne	3e5c8 <fb_name_table_visit@@Base+0x4ec>
   3e5e4:	mov	r0, #0
   3e5e8:	str	fp, [r3]
   3e5ec:	b	3e544 <fb_name_table_visit@@Base+0x468>
   3e5f0:	ldrb	r0, [r9]
   3e5f4:	movw	r3, #15188	; 0x3b54
   3e5f8:	b	3e580 <fb_name_table_visit@@Base+0x4a4>
   3e5fc:	movw	r3, #15191	; 0x3b57
   3e600:	ldr	r0, [r9]
   3e604:	b	3e580 <fb_name_table_visit@@Base+0x4a4>
   3e608:	movw	r3, #49320	; 0xc0a8
   3e60c:	movt	r3, #6
   3e610:	movw	r2, #32572	; 0x7f3c
   3e614:	movt	r2, #5
   3e618:	ldr	r0, [r3]
   3e61c:	movw	r1, #32624	; 0x7f70
   3e620:	movt	r1, #5
   3e624:	bl	1406c <fprintf@plt>
   3e628:	mov	r0, #1
   3e62c:	bl	14048 <exit@plt>
   3e630:	movw	r3, #46280	; 0xb4c8
   3e634:	movt	r3, #5
   3e638:	movw	r1, #32420	; 0x7ea4
   3e63c:	movt	r1, #5
   3e640:	movw	r0, #32548	; 0x7f24
   3e644:	movt	r0, #5
   3e648:	mov	r2, #116	; 0x74
   3e64c:	bl	14120 <__assert_fail@plt>
   3e650:	movw	r3, #46280	; 0xb4c8
   3e654:	movt	r3, #5
   3e658:	movw	r1, #32420	; 0x7ea4
   3e65c:	movt	r1, #5
   3e660:	movw	r0, #32524	; 0x7f0c
   3e664:	movt	r0, #5
   3e668:	mov	r2, #115	; 0x73
   3e66c:	bl	14120 <__assert_fail@plt>
   3e670:	movw	r3, #46280	; 0xb4c8
   3e674:	movt	r3, #5
   3e678:	movw	r1, #32420	; 0x7ea4
   3e67c:	movt	r1, #5
   3e680:	movw	r0, #32500	; 0x7ef4
   3e684:	movt	r0, #5
   3e688:	mov	r2, #114	; 0x72
   3e68c:	bl	14120 <__assert_fail@plt>

0003e690 <fb_value_set_clear@@Base>:
   3e690:	str	r4, [sp, #-8]!
   3e694:	mov	r4, r0
   3e698:	ldr	r0, [r0]
   3e69c:	str	lr, [sp, #4]
   3e6a0:	cmp	r0, #0
   3e6a4:	beq	3e6ac <fb_value_set_clear@@Base+0x1c>
   3e6a8:	bl	13fac <free@plt>
   3e6ac:	mov	r3, #0
   3e6b0:	str	r3, [r4]
   3e6b4:	str	r3, [r4, #4]
   3e6b8:	str	r3, [r4, #8]
   3e6bc:	str	r3, [r4, #12]
   3e6c0:	ldr	r4, [sp]
   3e6c4:	add	sp, sp, #4
   3e6c8:	pop	{pc}		; (ldr pc, [sp], #4)

0003e6cc <fb_value_set_destroy@@Base>:
   3e6cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3e6d0:	strd	r6, [sp, #8]
   3e6d4:	mov	r6, r0
   3e6d8:	str	r8, [sp, #16]
   3e6dc:	subs	r8, r1, #0
   3e6e0:	str	lr, [sp, #20]
   3e6e4:	ldr	r0, [r0]
   3e6e8:	beq	3e734 <fb_value_set_destroy@@Base+0x68>
   3e6ec:	ldr	ip, [r6, #12]
   3e6f0:	cmp	ip, #0
   3e6f4:	beq	3e734 <fb_value_set_destroy@@Base+0x68>
   3e6f8:	mov	r7, r2
   3e6fc:	sub	r5, r0, #4
   3e700:	mov	r4, #0
   3e704:	ldr	r3, [r5, #4]!
   3e708:	mov	r0, r7
   3e70c:	cmp	r3, #0
   3e710:	cmpne	r3, #2
   3e714:	mov	r1, r3
   3e718:	beq	3e768 <fb_value_set_destroy@@Base+0x9c>
   3e71c:	blx	r8
   3e720:	ldr	ip, [r6, #12]
   3e724:	add	r4, r4, #1
   3e728:	cmp	r4, ip
   3e72c:	bcc	3e704 <fb_value_set_destroy@@Base+0x38>
   3e730:	ldr	r0, [r6]
   3e734:	cmp	r0, #0
   3e738:	beq	3e740 <fb_value_set_destroy@@Base+0x74>
   3e73c:	bl	13fac <free@plt>
   3e740:	mov	r3, #0
   3e744:	str	r3, [r6]
   3e748:	str	r3, [r6, #4]
   3e74c:	str	r3, [r6, #8]
   3e750:	str	r3, [r6, #12]
   3e754:	ldrd	r4, [sp]
   3e758:	ldrd	r6, [sp, #8]
   3e75c:	ldr	r8, [sp, #16]
   3e760:	add	sp, sp, #20
   3e764:	pop	{pc}		; (ldr pc, [sp], #4)
   3e768:	add	r4, r4, #1
   3e76c:	cmp	r4, ip
   3e770:	bcc	3e704 <fb_value_set_destroy@@Base+0x38>
   3e774:	b	3e730 <fb_value_set_destroy@@Base+0x64>

0003e778 <fb_value_set_init@@Base>:
   3e778:	cmp	r1, #2
   3e77c:	strd	r4, [sp, #-16]!
   3e780:	mov	r4, r0
   3e784:	str	r6, [sp, #8]
   3e788:	str	lr, [sp, #12]
   3e78c:	bls	3e7e8 <fb_value_set_init@@Base+0x70>
   3e790:	mov	r3, #4
   3e794:	movw	r0, #358	; 0x166
   3e798:	mul	r2, r0, r3
   3e79c:	lsl	r5, r3, #1
   3e7a0:	cmp	r1, r2, lsr #8
   3e7a4:	mov	r3, r5
   3e7a8:	bhi	3e798 <fb_value_set_init@@Base+0x20>
   3e7ac:	mov	r1, #4
   3e7b0:	mov	r0, r5
   3e7b4:	bl	13f7c <calloc@plt>
   3e7b8:	cmp	r0, #0
   3e7bc:	str	r0, [r4]
   3e7c0:	beq	3e7f0 <fb_value_set_init@@Base+0x78>
   3e7c4:	mov	r3, #0
   3e7c8:	mov	r0, r3
   3e7cc:	str	r3, [r4, #4]
   3e7d0:	str	r3, [r4, #8]
   3e7d4:	str	r5, [r4, #12]
   3e7d8:	ldrd	r4, [sp]
   3e7dc:	ldr	r6, [sp, #8]
   3e7e0:	add	sp, sp, #12
   3e7e4:	pop	{pc}		; (ldr pc, [sp], #4)
   3e7e8:	mov	r5, #4
   3e7ec:	b	3e7ac <fb_value_set_init@@Base+0x34>
   3e7f0:	mvn	r0, #0
   3e7f4:	b	3e7d8 <fb_value_set_init@@Base+0x60>

0003e7f8 <fb_value_set_resize@@Base>:
   3e7f8:	b	3e160 <fb_name_table_visit@@Base+0x84>

0003e7fc <fb_value_set_insert@@Base>:
   3e7fc:	mov	r2, r3
   3e800:	ldr	r3, [sp]
   3e804:	b	3e3d0 <fb_name_table_visit@@Base+0x2f4>

0003e808 <fb_value_set_insert_item@@Base>:
   3e808:	mov	r3, r2
   3e80c:	mov	r2, r1
   3e810:	b	3e3d0 <fb_name_table_visit@@Base+0x2f4>

0003e814 <fb_value_set_find@@Base>:
   3e814:	strd	r4, [sp, #-20]!	; 0xffffffec
   3e818:	strd	r6, [sp, #8]
   3e81c:	ldr	r7, [r0]
   3e820:	str	lr, [sp, #16]
   3e824:	cmp	r7, #0
   3e828:	beq	3e934 <fb_value_set_find@@Base+0x120>
   3e82c:	ldrh	lr, [r1, #8]
   3e830:	ldr	r6, [r0, #12]
   3e834:	cmp	lr, #5
   3e838:	sub	r6, r6, #1
   3e83c:	beq	3e8f4 <fb_value_set_find@@Base+0xe0>
   3e840:	cmp	lr, #6
   3e844:	beq	3e928 <fb_value_set_find@@Base+0x114>
   3e848:	cmp	lr, #4
   3e84c:	movne	r3, r7
   3e850:	movne	ip, #0
   3e854:	beq	3e91c <fb_value_set_find@@Base+0x108>
   3e858:	ldr	r0, [r3]
   3e85c:	cmp	r0, #0
   3e860:	beq	3e8c8 <fb_value_set_find@@Base+0xb4>
   3e864:	add	ip, ip, #1
   3e868:	b	3e888 <fb_value_set_find@@Base+0x74>
   3e86c:	cmp	lr, #4
   3e870:	beq	3e8d8 <fb_value_set_find@@Base+0xc4>
   3e874:	and	r3, r6, ip
   3e878:	add	ip, ip, #1
   3e87c:	ldr	r0, [r7, r3, lsl #2]
   3e880:	cmp	r0, #0
   3e884:	beq	3e8c8 <fb_value_set_find@@Base+0xb4>
   3e888:	cmp	r0, #2
   3e88c:	beq	3e874 <fb_value_set_find@@Base+0x60>
   3e890:	ldrh	r3, [r0, #8]
   3e894:	cmp	r3, lr
   3e898:	bne	3e874 <fb_value_set_find@@Base+0x60>
   3e89c:	cmp	lr, #5
   3e8a0:	beq	3e8d8 <fb_value_set_find@@Base+0xc4>
   3e8a4:	cmp	lr, #6
   3e8a8:	bne	3e86c <fb_value_set_find@@Base+0x58>
   3e8ac:	ldrb	r3, [r1]
   3e8b0:	ldrb	r2, [r0]
   3e8b4:	sub	r3, r3, r2
   3e8b8:	clz	r3, r3
   3e8bc:	lsr	r3, r3, #5
   3e8c0:	cmp	r3, #0
   3e8c4:	beq	3e874 <fb_value_set_find@@Base+0x60>
   3e8c8:	ldrd	r4, [sp]
   3e8cc:	ldrd	r6, [sp, #8]
   3e8d0:	add	sp, sp, #16
   3e8d4:	pop	{pc}		; (ldr pc, [sp], #4)
   3e8d8:	ldrd	r2, [r0]
   3e8dc:	ldrd	r4, [r1]
   3e8e0:	cmp	r5, r3
   3e8e4:	cmpeq	r4, r2
   3e8e8:	moveq	r3, #1
   3e8ec:	movne	r3, #0
   3e8f0:	b	3e8c0 <fb_value_set_find@@Base+0xac>
   3e8f4:	ldr	r2, [r1]
   3e8f8:	movw	r3, #15191	; 0x3b57
   3e8fc:	movt	r3, #12137	; 0x2f69
   3e900:	movw	ip, #31153	; 0x79b1
   3e904:	movt	ip, #40503	; 0x9e37
   3e908:	eor	r3, r3, r2
   3e90c:	mul	ip, ip, r3
   3e910:	and	r3, r6, ip
   3e914:	add	r3, r7, r3, lsl #2
   3e918:	b	3e858 <fb_value_set_find@@Base+0x44>
   3e91c:	movw	r3, #15190	; 0x3b56
   3e920:	ldr	r2, [r1]
   3e924:	b	3e8fc <fb_value_set_find@@Base+0xe8>
   3e928:	ldrb	r2, [r1]
   3e92c:	movw	r3, #15188	; 0x3b54
   3e930:	b	3e8fc <fb_value_set_find@@Base+0xe8>
   3e934:	mov	r0, r7
   3e938:	b	3e8c8 <fb_value_set_find@@Base+0xb4>

0003e93c <fb_value_set_find_item@@Base>:
   3e93c:	strd	r4, [sp, #-20]!	; 0xffffffec
   3e940:	strd	r6, [sp, #8]
   3e944:	ldr	r7, [r0]
   3e948:	str	lr, [sp, #16]
   3e94c:	cmp	r7, #0
   3e950:	beq	3ea5c <fb_value_set_find_item@@Base+0x120>
   3e954:	ldrh	lr, [r1, #8]
   3e958:	ldr	r6, [r0, #12]
   3e95c:	cmp	lr, #5
   3e960:	sub	r6, r6, #1
   3e964:	beq	3ea1c <fb_value_set_find_item@@Base+0xe0>
   3e968:	cmp	lr, #6
   3e96c:	beq	3ea50 <fb_value_set_find_item@@Base+0x114>
   3e970:	cmp	lr, #4
   3e974:	movne	r3, r7
   3e978:	movne	ip, #0
   3e97c:	beq	3ea44 <fb_value_set_find_item@@Base+0x108>
   3e980:	ldr	r0, [r3]
   3e984:	cmp	r0, #0
   3e988:	beq	3e9f0 <fb_value_set_find_item@@Base+0xb4>
   3e98c:	add	ip, ip, #1
   3e990:	b	3e9b0 <fb_value_set_find_item@@Base+0x74>
   3e994:	cmp	lr, #4
   3e998:	beq	3ea00 <fb_value_set_find_item@@Base+0xc4>
   3e99c:	and	r3, r6, ip
   3e9a0:	add	ip, ip, #1
   3e9a4:	ldr	r0, [r7, r3, lsl #2]
   3e9a8:	cmp	r0, #0
   3e9ac:	beq	3e9f0 <fb_value_set_find_item@@Base+0xb4>
   3e9b0:	cmp	r0, #2
   3e9b4:	beq	3e99c <fb_value_set_find_item@@Base+0x60>
   3e9b8:	ldrh	r3, [r0, #8]
   3e9bc:	cmp	r3, lr
   3e9c0:	bne	3e99c <fb_value_set_find_item@@Base+0x60>
   3e9c4:	cmp	lr, #5
   3e9c8:	beq	3ea00 <fb_value_set_find_item@@Base+0xc4>
   3e9cc:	cmp	lr, #6
   3e9d0:	bne	3e994 <fb_value_set_find_item@@Base+0x58>
   3e9d4:	ldrb	r3, [r1]
   3e9d8:	ldrb	r2, [r0]
   3e9dc:	sub	r3, r3, r2
   3e9e0:	clz	r3, r3
   3e9e4:	lsr	r3, r3, #5
   3e9e8:	cmp	r3, #0
   3e9ec:	beq	3e99c <fb_value_set_find_item@@Base+0x60>
   3e9f0:	ldrd	r4, [sp]
   3e9f4:	ldrd	r6, [sp, #8]
   3e9f8:	add	sp, sp, #16
   3e9fc:	pop	{pc}		; (ldr pc, [sp], #4)
   3ea00:	ldrd	r2, [r0]
   3ea04:	ldrd	r4, [r1]
   3ea08:	cmp	r5, r3
   3ea0c:	cmpeq	r4, r2
   3ea10:	moveq	r3, #1
   3ea14:	movne	r3, #0
   3ea18:	b	3e9e8 <fb_value_set_find_item@@Base+0xac>
   3ea1c:	ldr	r2, [r1]
   3ea20:	movw	r3, #15191	; 0x3b57
   3ea24:	movt	r3, #12137	; 0x2f69
   3ea28:	movw	ip, #31153	; 0x79b1
   3ea2c:	movt	ip, #40503	; 0x9e37
   3ea30:	eor	r3, r3, r2
   3ea34:	mul	ip, ip, r3
   3ea38:	and	r3, r6, ip
   3ea3c:	add	r3, r7, r3, lsl #2
   3ea40:	b	3e980 <fb_value_set_find_item@@Base+0x44>
   3ea44:	movw	r3, #15190	; 0x3b56
   3ea48:	ldr	r2, [r1]
   3ea4c:	b	3ea24 <fb_value_set_find_item@@Base+0xe8>
   3ea50:	ldrb	r2, [r1]
   3ea54:	movw	r3, #15188	; 0x3b54
   3ea58:	b	3ea24 <fb_value_set_find_item@@Base+0xe8>
   3ea5c:	mov	r0, r7
   3ea60:	b	3e9f0 <fb_value_set_find_item@@Base+0xb4>

0003ea64 <fb_value_set_remove@@Base>:
   3ea64:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3ea68:	strd	r6, [sp, #8]
   3ea6c:	strd	r8, [sp, #16]
   3ea70:	ldr	r8, [r0]
   3ea74:	str	lr, [sp, #24]
   3ea78:	cmp	r8, #0
   3ea7c:	beq	3eba8 <fb_value_set_remove@@Base+0x144>
   3ea80:	ldrh	lr, [r1, #8]
   3ea84:	ldr	r9, [r0, #12]
   3ea88:	cmp	lr, #5
   3ea8c:	sub	r9, r9, #1
   3ea90:	beq	3eb9c <fb_value_set_remove@@Base+0x138>
   3ea94:	cmp	lr, #6
   3ea98:	beq	3eb90 <fb_value_set_remove@@Base+0x12c>
   3ea9c:	cmp	lr, #4
   3eaa0:	movne	r3, r8
   3eaa4:	movne	ip, #0
   3eaa8:	beq	3eb68 <fb_value_set_remove@@Base+0x104>
   3eaac:	ldr	r2, [r3]
   3eab0:	cmp	r2, #0
   3eab4:	beq	3eb34 <fb_value_set_remove@@Base+0xd0>
   3eab8:	add	ip, ip, #1
   3eabc:	b	3eae0 <fb_value_set_remove@@Base+0x7c>
   3eac0:	cmp	lr, #4
   3eac4:	beq	3eb4c <fb_value_set_remove@@Base+0xe8>
   3eac8:	and	r3, r9, ip
   3eacc:	add	ip, ip, #1
   3ead0:	ldr	r2, [r8, r3, lsl #2]
   3ead4:	add	r3, r8, r3, lsl #2
   3ead8:	cmp	r2, #0
   3eadc:	beq	3eb34 <fb_value_set_remove@@Base+0xd0>
   3eae0:	cmp	r2, #2
   3eae4:	beq	3eac8 <fb_value_set_remove@@Base+0x64>
   3eae8:	ldrh	r4, [r2, #8]
   3eaec:	cmp	r4, lr
   3eaf0:	bne	3eac8 <fb_value_set_remove@@Base+0x64>
   3eaf4:	cmp	lr, #5
   3eaf8:	beq	3eb4c <fb_value_set_remove@@Base+0xe8>
   3eafc:	cmp	lr, #6
   3eb00:	bne	3eac0 <fb_value_set_remove@@Base+0x5c>
   3eb04:	ldrb	r4, [r1]
   3eb08:	ldrb	r5, [r2]
   3eb0c:	sub	r4, r4, r5
   3eb10:	clz	r4, r4
   3eb14:	lsr	r4, r4, #5
   3eb18:	cmp	r4, #0
   3eb1c:	beq	3eac8 <fb_value_set_remove@@Base+0x64>
   3eb20:	ldr	r1, [r0, #8]
   3eb24:	mov	ip, #2
   3eb28:	str	ip, [r3]
   3eb2c:	sub	r3, r1, #1
   3eb30:	str	r3, [r0, #8]
   3eb34:	ldrd	r4, [sp]
   3eb38:	mov	r0, r2
   3eb3c:	ldrd	r6, [sp, #8]
   3eb40:	ldrd	r8, [sp, #16]
   3eb44:	add	sp, sp, #24
   3eb48:	pop	{pc}		; (ldr pc, [sp], #4)
   3eb4c:	ldrd	r4, [r2]
   3eb50:	ldrd	r6, [r1]
   3eb54:	cmp	r7, r5
   3eb58:	cmpeq	r6, r4
   3eb5c:	moveq	r4, #1
   3eb60:	movne	r4, #0
   3eb64:	b	3eb18 <fb_value_set_remove@@Base+0xb4>
   3eb68:	ldr	r2, [r1]
   3eb6c:	movw	r3, #15190	; 0x3b56
   3eb70:	movt	r3, #12137	; 0x2f69
   3eb74:	movw	ip, #31153	; 0x79b1
   3eb78:	movt	ip, #40503	; 0x9e37
   3eb7c:	eor	r3, r3, r2
   3eb80:	mul	ip, ip, r3
   3eb84:	and	r3, r9, ip
   3eb88:	add	r3, r8, r3, lsl #2
   3eb8c:	b	3eaac <fb_value_set_remove@@Base+0x48>
   3eb90:	ldrb	r2, [r1]
   3eb94:	movw	r3, #15188	; 0x3b54
   3eb98:	b	3eb70 <fb_value_set_remove@@Base+0x10c>
   3eb9c:	movw	r3, #15191	; 0x3b57
   3eba0:	ldr	r2, [r1]
   3eba4:	b	3eb70 <fb_value_set_remove@@Base+0x10c>
   3eba8:	mov	r2, r8
   3ebac:	b	3eb34 <fb_value_set_remove@@Base+0xd0>

0003ebb0 <fb_value_set_remove_item@@Base>:
   3ebb0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3ebb4:	strd	r6, [sp, #8]
   3ebb8:	strd	r8, [sp, #16]
   3ebbc:	ldr	r8, [r0]
   3ebc0:	str	lr, [sp, #24]
   3ebc4:	cmp	r8, #0
   3ebc8:	beq	3ecf4 <fb_value_set_remove_item@@Base+0x144>
   3ebcc:	ldrh	lr, [r1, #8]
   3ebd0:	ldr	r9, [r0, #12]
   3ebd4:	cmp	lr, #5
   3ebd8:	sub	r9, r9, #1
   3ebdc:	beq	3ece8 <fb_value_set_remove_item@@Base+0x138>
   3ebe0:	cmp	lr, #6
   3ebe4:	beq	3ecdc <fb_value_set_remove_item@@Base+0x12c>
   3ebe8:	cmp	lr, #4
   3ebec:	movne	r3, r8
   3ebf0:	movne	ip, #0
   3ebf4:	beq	3ecb4 <fb_value_set_remove_item@@Base+0x104>
   3ebf8:	ldr	r2, [r3]
   3ebfc:	cmp	r2, #0
   3ec00:	beq	3ec80 <fb_value_set_remove_item@@Base+0xd0>
   3ec04:	add	ip, ip, #1
   3ec08:	b	3ec2c <fb_value_set_remove_item@@Base+0x7c>
   3ec0c:	cmp	lr, #4
   3ec10:	beq	3ec98 <fb_value_set_remove_item@@Base+0xe8>
   3ec14:	and	r3, r9, ip
   3ec18:	add	ip, ip, #1
   3ec1c:	ldr	r2, [r8, r3, lsl #2]
   3ec20:	add	r3, r8, r3, lsl #2
   3ec24:	cmp	r2, #0
   3ec28:	beq	3ec80 <fb_value_set_remove_item@@Base+0xd0>
   3ec2c:	cmp	r2, #2
   3ec30:	beq	3ec14 <fb_value_set_remove_item@@Base+0x64>
   3ec34:	ldrh	r4, [r2, #8]
   3ec38:	cmp	r4, lr
   3ec3c:	bne	3ec14 <fb_value_set_remove_item@@Base+0x64>
   3ec40:	cmp	lr, #5
   3ec44:	beq	3ec98 <fb_value_set_remove_item@@Base+0xe8>
   3ec48:	cmp	lr, #6
   3ec4c:	bne	3ec0c <fb_value_set_remove_item@@Base+0x5c>
   3ec50:	ldrb	r4, [r1]
   3ec54:	ldrb	r5, [r2]
   3ec58:	sub	r4, r4, r5
   3ec5c:	clz	r4, r4
   3ec60:	lsr	r4, r4, #5
   3ec64:	cmp	r4, #0
   3ec68:	beq	3ec14 <fb_value_set_remove_item@@Base+0x64>
   3ec6c:	ldr	r1, [r0, #8]
   3ec70:	mov	ip, #2
   3ec74:	str	ip, [r3]
   3ec78:	sub	r3, r1, #1
   3ec7c:	str	r3, [r0, #8]
   3ec80:	ldrd	r4, [sp]
   3ec84:	mov	r0, r2
   3ec88:	ldrd	r6, [sp, #8]
   3ec8c:	ldrd	r8, [sp, #16]
   3ec90:	add	sp, sp, #24
   3ec94:	pop	{pc}		; (ldr pc, [sp], #4)
   3ec98:	ldrd	r4, [r2]
   3ec9c:	ldrd	r6, [r1]
   3eca0:	cmp	r7, r5
   3eca4:	cmpeq	r6, r4
   3eca8:	moveq	r4, #1
   3ecac:	movne	r4, #0
   3ecb0:	b	3ec64 <fb_value_set_remove_item@@Base+0xb4>
   3ecb4:	ldr	r2, [r1]
   3ecb8:	movw	r3, #15190	; 0x3b56
   3ecbc:	movt	r3, #12137	; 0x2f69
   3ecc0:	movw	ip, #31153	; 0x79b1
   3ecc4:	movt	ip, #40503	; 0x9e37
   3ecc8:	eor	r3, r3, r2
   3eccc:	mul	ip, ip, r3
   3ecd0:	and	r3, r9, ip
   3ecd4:	add	r3, r8, r3, lsl #2
   3ecd8:	b	3ebf8 <fb_value_set_remove_item@@Base+0x48>
   3ecdc:	ldrb	r2, [r1]
   3ece0:	movw	r3, #15188	; 0x3b54
   3ece4:	b	3ecbc <fb_value_set_remove_item@@Base+0x10c>
   3ece8:	movw	r3, #15191	; 0x3b57
   3ecec:	ldr	r2, [r1]
   3ecf0:	b	3ecbc <fb_value_set_remove_item@@Base+0x10c>
   3ecf4:	mov	r2, r8
   3ecf8:	b	3ec80 <fb_value_set_remove_item@@Base+0xd0>

0003ecfc <fb_value_set_visit@@Base>:
   3ecfc:	ldr	ip, [r0, #12]
   3ed00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3ed04:	ldr	r5, [r0]
   3ed08:	strd	r6, [sp, #8]
   3ed0c:	str	r8, [sp, #16]
   3ed10:	cmp	ip, #0
   3ed14:	str	lr, [sp, #20]
   3ed18:	beq	3ed5c <fb_value_set_visit@@Base+0x60>
   3ed1c:	mov	r6, r2
   3ed20:	mov	r8, r1
   3ed24:	mov	r7, r0
   3ed28:	sub	r5, r5, #4
   3ed2c:	mov	r4, #0
   3ed30:	ldr	r3, [r5, #4]!
   3ed34:	mov	r0, r6
   3ed38:	cmp	r3, #0
   3ed3c:	cmpne	r3, #2
   3ed40:	mov	r1, r3
   3ed44:	beq	3ed70 <fb_value_set_visit@@Base+0x74>
   3ed48:	blx	r8
   3ed4c:	ldr	ip, [r7, #12]
   3ed50:	add	r4, r4, #1
   3ed54:	cmp	r4, ip
   3ed58:	bcc	3ed30 <fb_value_set_visit@@Base+0x34>
   3ed5c:	ldrd	r4, [sp]
   3ed60:	ldrd	r6, [sp, #8]
   3ed64:	ldr	r8, [sp, #16]
   3ed68:	add	sp, sp, #20
   3ed6c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ed70:	add	r4, r4, #1
   3ed74:	cmp	r4, ip
   3ed78:	bcc	3ed30 <fb_value_set_visit@@Base+0x34>
   3ed7c:	b	3ed5c <fb_value_set_visit@@Base+0x60>
   3ed80:	eor	r1, r1, #-2147483648	; 0x80000000
   3ed84:	b	3ed8c <fb_value_set_visit@@Base+0x90>
   3ed88:	eor	r3, r3, #-2147483648	; 0x80000000
   3ed8c:	push	{r4, r5, lr}
   3ed90:	lsl	r4, r1, #1
   3ed94:	lsl	r5, r3, #1
   3ed98:	teq	r4, r5
   3ed9c:	teqeq	r0, r2
   3eda0:	orrsne	ip, r4, r0
   3eda4:	orrsne	ip, r5, r2
   3eda8:	mvnsne	ip, r4, asr #21
   3edac:	mvnsne	ip, r5, asr #21
   3edb0:	beq	3ef9c <fb_value_set_visit@@Base+0x2a0>
   3edb4:	lsr	r4, r4, #21
   3edb8:	rsbs	r5, r4, r5, lsr #21
   3edbc:	rsblt	r5, r5, #0
   3edc0:	ble	3ede0 <fb_value_set_visit@@Base+0xe4>
   3edc4:	add	r4, r4, r5
   3edc8:	eor	r2, r0, r2
   3edcc:	eor	r3, r1, r3
   3edd0:	eor	r0, r2, r0
   3edd4:	eor	r1, r3, r1
   3edd8:	eor	r2, r0, r2
   3eddc:	eor	r3, r1, r3
   3ede0:	cmp	r5, #54	; 0x36
   3ede4:	pophi	{r4, r5, pc}
   3ede8:	tst	r1, #-2147483648	; 0x80000000
   3edec:	lsl	r1, r1, #12
   3edf0:	mov	ip, #1048576	; 0x100000
   3edf4:	orr	r1, ip, r1, lsr #12
   3edf8:	beq	3ee04 <fb_value_set_visit@@Base+0x108>
   3edfc:	rsbs	r0, r0, #0
   3ee00:	rsc	r1, r1, #0
   3ee04:	tst	r3, #-2147483648	; 0x80000000
   3ee08:	lsl	r3, r3, #12
   3ee0c:	orr	r3, ip, r3, lsr #12
   3ee10:	beq	3ee1c <fb_value_set_visit@@Base+0x120>
   3ee14:	rsbs	r2, r2, #0
   3ee18:	rsc	r3, r3, #0
   3ee1c:	teq	r4, r5
   3ee20:	beq	3ef84 <fb_value_set_visit@@Base+0x288>
   3ee24:	sub	r4, r4, #1
   3ee28:	rsbs	lr, r5, #32
   3ee2c:	blt	3ee48 <fb_value_set_visit@@Base+0x14c>
   3ee30:	lsl	ip, r2, lr
   3ee34:	adds	r0, r0, r2, lsr r5
   3ee38:	adc	r1, r1, #0
   3ee3c:	adds	r0, r0, r3, lsl lr
   3ee40:	adcs	r1, r1, r3, asr r5
   3ee44:	b	3ee64 <fb_value_set_visit@@Base+0x168>
   3ee48:	sub	r5, r5, #32
   3ee4c:	add	lr, lr, #32
   3ee50:	cmp	r2, #1
   3ee54:	lsl	ip, r3, lr
   3ee58:	orrcs	ip, ip, #2
   3ee5c:	adds	r0, r0, r3, asr r5
   3ee60:	adcs	r1, r1, r3, asr #31
   3ee64:	and	r5, r1, #-2147483648	; 0x80000000
   3ee68:	bpl	3ee78 <fb_value_set_visit@@Base+0x17c>
   3ee6c:	rsbs	ip, ip, #0
   3ee70:	rscs	r0, r0, #0
   3ee74:	rsc	r1, r1, #0
   3ee78:	cmp	r1, #1048576	; 0x100000
   3ee7c:	bcc	3eebc <fb_value_set_visit@@Base+0x1c0>
   3ee80:	cmp	r1, #2097152	; 0x200000
   3ee84:	bcc	3eea4 <fb_value_set_visit@@Base+0x1a8>
   3ee88:	lsrs	r1, r1, #1
   3ee8c:	rrxs	r0, r0
   3ee90:	rrx	ip, ip
   3ee94:	add	r4, r4, #1
   3ee98:	lsl	r2, r4, #21
   3ee9c:	cmn	r2, #4194304	; 0x400000
   3eea0:	bcs	3effc <fb_value_set_visit@@Base+0x300>
   3eea4:	cmp	ip, #-2147483648	; 0x80000000
   3eea8:	lsrseq	ip, r0, #1
   3eeac:	adcs	r0, r0, #0
   3eeb0:	adc	r1, r1, r4, lsl #20
   3eeb4:	orr	r1, r1, r5
   3eeb8:	pop	{r4, r5, pc}
   3eebc:	lsls	ip, ip, #1
   3eec0:	adcs	r0, r0, r0
   3eec4:	adc	r1, r1, r1
   3eec8:	tst	r1, #1048576	; 0x100000
   3eecc:	sub	r4, r4, #1
   3eed0:	bne	3eea4 <fb_value_set_visit@@Base+0x1a8>
   3eed4:	teq	r1, #0
   3eed8:	moveq	r1, r0
   3eedc:	moveq	r0, #0
   3eee0:	clz	r3, r1
   3eee4:	addeq	r3, r3, #32
   3eee8:	sub	r3, r3, #11
   3eeec:	subs	r2, r3, #32
   3eef0:	bge	3ef14 <fb_value_set_visit@@Base+0x218>
   3eef4:	adds	r2, r2, #12
   3eef8:	ble	3ef10 <fb_value_set_visit@@Base+0x214>
   3eefc:	add	ip, r2, #20
   3ef00:	rsb	r2, r2, #12
   3ef04:	lsl	r0, r1, ip
   3ef08:	lsr	r1, r1, r2
   3ef0c:	b	3ef24 <fb_value_set_visit@@Base+0x228>
   3ef10:	add	r2, r2, #20
   3ef14:	rsble	ip, r2, #32
   3ef18:	lsl	r1, r1, r2
   3ef1c:	orrle	r1, r1, r0, lsr ip
   3ef20:	lslle	r0, r0, r2
   3ef24:	subs	r4, r4, r3
   3ef28:	addge	r1, r1, r4, lsl #20
   3ef2c:	orrge	r1, r1, r5
   3ef30:	popge	{r4, r5, pc}
   3ef34:	mvn	r4, r4
   3ef38:	subs	r4, r4, #31
   3ef3c:	bge	3ef78 <fb_value_set_visit@@Base+0x27c>
   3ef40:	adds	r4, r4, #12
   3ef44:	bgt	3ef60 <fb_value_set_visit@@Base+0x264>
   3ef48:	add	r4, r4, #20
   3ef4c:	rsb	r2, r4, #32
   3ef50:	lsr	r0, r0, r4
   3ef54:	orr	r0, r0, r1, lsl r2
   3ef58:	orr	r1, r5, r1, lsr r4
   3ef5c:	pop	{r4, r5, pc}
   3ef60:	rsb	r4, r4, #12
   3ef64:	rsb	r2, r4, #32
   3ef68:	lsr	r0, r0, r2
   3ef6c:	orr	r0, r0, r1, lsl r4
   3ef70:	mov	r1, r5
   3ef74:	pop	{r4, r5, pc}
   3ef78:	lsr	r0, r1, r4
   3ef7c:	mov	r1, r5
   3ef80:	pop	{r4, r5, pc}
   3ef84:	teq	r4, #0
   3ef88:	eor	r3, r3, #1048576	; 0x100000
   3ef8c:	eoreq	r1, r1, #1048576	; 0x100000
   3ef90:	addeq	r4, r4, #1
   3ef94:	subne	r5, r5, #1
   3ef98:	b	3ee24 <fb_value_set_visit@@Base+0x128>
   3ef9c:	mvns	ip, r4, asr #21
   3efa0:	mvnsne	ip, r5, asr #21
   3efa4:	beq	3f00c <fb_value_set_visit@@Base+0x310>
   3efa8:	teq	r4, r5
   3efac:	teqeq	r0, r2
   3efb0:	beq	3efc4 <fb_value_set_visit@@Base+0x2c8>
   3efb4:	orrs	ip, r4, r0
   3efb8:	moveq	r1, r3
   3efbc:	moveq	r0, r2
   3efc0:	pop	{r4, r5, pc}
   3efc4:	teq	r1, r3
   3efc8:	movne	r1, #0
   3efcc:	movne	r0, #0
   3efd0:	popne	{r4, r5, pc}
   3efd4:	lsrs	ip, r4, #21
   3efd8:	bne	3efec <fb_value_set_visit@@Base+0x2f0>
   3efdc:	lsls	r0, r0, #1
   3efe0:	adcs	r1, r1, r1
   3efe4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3efe8:	pop	{r4, r5, pc}
   3efec:	adds	r4, r4, #4194304	; 0x400000
   3eff0:	addcc	r1, r1, #1048576	; 0x100000
   3eff4:	popcc	{r4, r5, pc}
   3eff8:	and	r5, r1, #-2147483648	; 0x80000000
   3effc:	orr	r1, r5, #2130706432	; 0x7f000000
   3f000:	orr	r1, r1, #15728640	; 0xf00000
   3f004:	mov	r0, #0
   3f008:	pop	{r4, r5, pc}
   3f00c:	mvns	ip, r4, asr #21
   3f010:	movne	r1, r3
   3f014:	movne	r0, r2
   3f018:	mvnseq	ip, r5, asr #21
   3f01c:	movne	r3, r1
   3f020:	movne	r2, r0
   3f024:	orrs	r4, r0, r1, lsl #12
   3f028:	orrseq	r5, r2, r3, lsl #12
   3f02c:	teqeq	r1, r3
   3f030:	orrne	r1, r1, #524288	; 0x80000
   3f034:	pop	{r4, r5, pc}
   3f038:	teq	r0, #0
   3f03c:	moveq	r1, #0
   3f040:	bxeq	lr
   3f044:	push	{r4, r5, lr}
   3f048:	mov	r4, #1024	; 0x400
   3f04c:	add	r4, r4, #50	; 0x32
   3f050:	mov	r5, #0
   3f054:	mov	r1, #0
   3f058:	b	3eed4 <fb_value_set_visit@@Base+0x1d8>
   3f05c:	teq	r0, #0
   3f060:	moveq	r1, #0
   3f064:	bxeq	lr
   3f068:	push	{r4, r5, lr}
   3f06c:	mov	r4, #1024	; 0x400
   3f070:	add	r4, r4, #50	; 0x32
   3f074:	ands	r5, r0, #-2147483648	; 0x80000000
   3f078:	rsbmi	r0, r0, #0
   3f07c:	mov	r1, #0
   3f080:	b	3eed4 <fb_value_set_visit@@Base+0x1d8>
   3f084:	lsls	r2, r0, #1
   3f088:	asr	r1, r2, #3
   3f08c:	rrx	r1, r1
   3f090:	lsl	r0, r2, #28
   3f094:	andsne	r3, r2, #-16777216	; 0xff000000
   3f098:	teqne	r3, #-16777216	; 0xff000000
   3f09c:	eorne	r1, r1, #939524096	; 0x38000000
   3f0a0:	bxne	lr
   3f0a4:	bics	r2, r2, #-16777216	; 0xff000000
   3f0a8:	bxeq	lr
   3f0ac:	teq	r3, #-16777216	; 0xff000000
   3f0b0:	orreq	r1, r1, #524288	; 0x80000
   3f0b4:	bxeq	lr
   3f0b8:	push	{r4, r5, lr}
   3f0bc:	mov	r4, #896	; 0x380
   3f0c0:	and	r5, r1, #-2147483648	; 0x80000000
   3f0c4:	bic	r1, r1, #-2147483648	; 0x80000000
   3f0c8:	b	3eed4 <fb_value_set_visit@@Base+0x1d8>
   3f0cc:	orrs	r2, r0, r1
   3f0d0:	bxeq	lr
   3f0d4:	push	{r4, r5, lr}
   3f0d8:	mov	r5, #0
   3f0dc:	b	3f0fc <fb_value_set_visit@@Base+0x400>
   3f0e0:	orrs	r2, r0, r1
   3f0e4:	bxeq	lr
   3f0e8:	push	{r4, r5, lr}
   3f0ec:	ands	r5, r1, #-2147483648	; 0x80000000
   3f0f0:	bpl	3f0fc <fb_value_set_visit@@Base+0x400>
   3f0f4:	rsbs	r0, r0, #0
   3f0f8:	rsc	r1, r1, #0
   3f0fc:	mov	r4, #1024	; 0x400
   3f100:	add	r4, r4, #50	; 0x32
   3f104:	lsrs	ip, r1, #22
   3f108:	beq	3ee78 <fb_value_set_visit@@Base+0x17c>
   3f10c:	mov	r2, #3
   3f110:	lsrs	ip, ip, #3
   3f114:	addne	r2, r2, #3
   3f118:	lsrs	ip, ip, #3
   3f11c:	addne	r2, r2, #3
   3f120:	add	r2, r2, ip, lsr #3
   3f124:	rsb	r3, r2, #32
   3f128:	lsl	ip, r0, r3
   3f12c:	lsr	r0, r0, r2
   3f130:	orr	r0, r0, r1, lsl r3
   3f134:	lsr	r1, r1, r2
   3f138:	add	r4, r4, r2
   3f13c:	b	3ee78 <fb_value_set_visit@@Base+0x17c>
   3f140:	eor	r0, r0, #-2147483648	; 0x80000000
   3f144:	b	3f14c <fb_value_set_visit@@Base+0x450>
   3f148:	eor	r1, r1, #-2147483648	; 0x80000000
   3f14c:	lsls	r2, r0, #1
   3f150:	lslsne	r3, r1, #1
   3f154:	teqne	r2, r3
   3f158:	mvnsne	ip, r2, asr #24
   3f15c:	mvnsne	ip, r3, asr #24
   3f160:	beq	3f258 <fb_value_set_visit@@Base+0x55c>
   3f164:	lsr	r2, r2, #24
   3f168:	rsbs	r3, r2, r3, lsr #24
   3f16c:	addgt	r2, r2, r3
   3f170:	eorgt	r1, r0, r1
   3f174:	eorgt	r0, r1, r0
   3f178:	eorgt	r1, r0, r1
   3f17c:	rsblt	r3, r3, #0
   3f180:	cmp	r3, #25
   3f184:	bxhi	lr
   3f188:	tst	r0, #-2147483648	; 0x80000000
   3f18c:	orr	r0, r0, #8388608	; 0x800000
   3f190:	bic	r0, r0, #-16777216	; 0xff000000
   3f194:	rsbne	r0, r0, #0
   3f198:	tst	r1, #-2147483648	; 0x80000000
   3f19c:	orr	r1, r1, #8388608	; 0x800000
   3f1a0:	bic	r1, r1, #-16777216	; 0xff000000
   3f1a4:	rsbne	r1, r1, #0
   3f1a8:	teq	r2, r3
   3f1ac:	beq	3f240 <fb_value_set_visit@@Base+0x544>
   3f1b0:	sub	r2, r2, #1
   3f1b4:	adds	r0, r0, r1, asr r3
   3f1b8:	rsb	r3, r3, #32
   3f1bc:	lsl	r1, r1, r3
   3f1c0:	and	r3, r0, #-2147483648	; 0x80000000
   3f1c4:	bpl	3f1d0 <fb_value_set_visit@@Base+0x4d4>
   3f1c8:	rsbs	r1, r1, #0
   3f1cc:	rsc	r0, r0, #0
   3f1d0:	cmp	r0, #8388608	; 0x800000
   3f1d4:	bcc	3f208 <fb_value_set_visit@@Base+0x50c>
   3f1d8:	cmp	r0, #16777216	; 0x1000000
   3f1dc:	bcc	3f1f4 <fb_value_set_visit@@Base+0x4f8>
   3f1e0:	lsrs	r0, r0, #1
   3f1e4:	rrx	r1, r1
   3f1e8:	add	r2, r2, #1
   3f1ec:	cmp	r2, #254	; 0xfe
   3f1f0:	bcs	3f2ac <fb_value_set_visit@@Base+0x5b0>
   3f1f4:	cmp	r1, #-2147483648	; 0x80000000
   3f1f8:	adc	r0, r0, r2, lsl #23
   3f1fc:	biceq	r0, r0, #1
   3f200:	orr	r0, r0, r3
   3f204:	bx	lr
   3f208:	lsls	r1, r1, #1
   3f20c:	adc	r0, r0, r0
   3f210:	tst	r0, #8388608	; 0x800000
   3f214:	sub	r2, r2, #1
   3f218:	bne	3f1f4 <fb_value_set_visit@@Base+0x4f8>
   3f21c:	clz	ip, r0
   3f220:	sub	ip, ip, #8
   3f224:	subs	r2, r2, ip
   3f228:	lsl	r0, r0, ip
   3f22c:	addge	r0, r0, r2, lsl #23
   3f230:	rsblt	r2, r2, #0
   3f234:	orrge	r0, r0, r3
   3f238:	orrlt	r0, r3, r0, lsr r2
   3f23c:	bx	lr
   3f240:	teq	r2, #0
   3f244:	eor	r1, r1, #8388608	; 0x800000
   3f248:	eoreq	r0, r0, #8388608	; 0x800000
   3f24c:	addeq	r2, r2, #1
   3f250:	subne	r3, r3, #1
   3f254:	b	3f1b0 <fb_value_set_visit@@Base+0x4b4>
   3f258:	lsl	r3, r1, #1
   3f25c:	mvns	ip, r2, asr #24
   3f260:	mvnsne	ip, r3, asr #24
   3f264:	beq	3f2b8 <fb_value_set_visit@@Base+0x5bc>
   3f268:	teq	r2, r3
   3f26c:	beq	3f27c <fb_value_set_visit@@Base+0x580>
   3f270:	teq	r2, #0
   3f274:	moveq	r0, r1
   3f278:	bx	lr
   3f27c:	teq	r0, r1
   3f280:	movne	r0, #0
   3f284:	bxne	lr
   3f288:	tst	r2, #-16777216	; 0xff000000
   3f28c:	bne	3f29c <fb_value_set_visit@@Base+0x5a0>
   3f290:	lsls	r0, r0, #1
   3f294:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3f298:	bx	lr
   3f29c:	adds	r2, r2, #33554432	; 0x2000000
   3f2a0:	addcc	r0, r0, #8388608	; 0x800000
   3f2a4:	bxcc	lr
   3f2a8:	and	r3, r0, #-2147483648	; 0x80000000
   3f2ac:	orr	r0, r3, #2130706432	; 0x7f000000
   3f2b0:	orr	r0, r0, #8388608	; 0x800000
   3f2b4:	bx	lr
   3f2b8:	mvns	r2, r2, asr #24
   3f2bc:	movne	r0, r1
   3f2c0:	mvnseq	r3, r3, asr #24
   3f2c4:	movne	r1, r0
   3f2c8:	lsls	r2, r0, #9
   3f2cc:	lslseq	r3, r1, #9
   3f2d0:	teqeq	r0, r1
   3f2d4:	orrne	r0, r0, #4194304	; 0x400000
   3f2d8:	bx	lr
   3f2dc:	mov	r3, #0
   3f2e0:	b	3f2ec <fb_value_set_visit@@Base+0x5f0>
   3f2e4:	ands	r3, r0, #-2147483648	; 0x80000000
   3f2e8:	rsbmi	r0, r0, #0
   3f2ec:	movs	ip, r0
   3f2f0:	bxeq	lr
   3f2f4:	orr	r3, r3, #1258291200	; 0x4b000000
   3f2f8:	mov	r1, r0
   3f2fc:	mov	r0, #0
   3f300:	b	3f344 <fb_value_set_visit@@Base+0x648>
   3f304:	orrs	r2, r0, r1
   3f308:	bxeq	lr
   3f30c:	mov	r3, #0
   3f310:	b	3f32c <fb_value_set_visit@@Base+0x630>
   3f314:	orrs	r2, r0, r1
   3f318:	bxeq	lr
   3f31c:	ands	r3, r1, #-2147483648	; 0x80000000
   3f320:	bpl	3f32c <fb_value_set_visit@@Base+0x630>
   3f324:	rsbs	r0, r0, #0
   3f328:	rsc	r1, r1, #0
   3f32c:	movs	ip, r1
   3f330:	moveq	ip, r0
   3f334:	moveq	r1, r0
   3f338:	moveq	r0, #0
   3f33c:	orr	r3, r3, #1526726656	; 0x5b000000
   3f340:	subeq	r3, r3, #268435456	; 0x10000000
   3f344:	sub	r3, r3, #8388608	; 0x800000
   3f348:	clz	r2, ip
   3f34c:	subs	r2, r2, #8
   3f350:	sub	r3, r3, r2, lsl #23
   3f354:	blt	3f374 <fb_value_set_visit@@Base+0x678>
   3f358:	add	r3, r3, r1, lsl r2
   3f35c:	lsl	ip, r0, r2
   3f360:	rsb	r2, r2, #32
   3f364:	cmp	ip, #-2147483648	; 0x80000000
   3f368:	adc	r0, r3, r0, lsr r2
   3f36c:	biceq	r0, r0, #1
   3f370:	bx	lr
   3f374:	add	r2, r2, #32
   3f378:	lsl	ip, r1, r2
   3f37c:	rsb	r2, r2, #32
   3f380:	orrs	r0, r0, ip, lsl #1
   3f384:	adc	r0, r3, r1, lsr r2
   3f388:	biceq	r0, r0, ip, lsr #31
   3f38c:	bx	lr
   3f390:	cmp	r3, #0
   3f394:	cmpeq	r2, #0
   3f398:	bne	3f3b0 <fb_value_set_visit@@Base+0x6b4>
   3f39c:	cmp	r1, #0
   3f3a0:	cmpeq	r0, #0
   3f3a4:	mvnne	r1, #0
   3f3a8:	mvnne	r0, #0
   3f3ac:	b	3f3cc <fb_value_set_visit@@Base+0x6d0>
   3f3b0:	sub	sp, sp, #8
   3f3b4:	push	{sp, lr}
   3f3b8:	bl	3f4b8 <fb_value_set_visit@@Base+0x7bc>
   3f3bc:	ldr	lr, [sp, #4]
   3f3c0:	add	sp, sp, #8
   3f3c4:	pop	{r2, r3}
   3f3c8:	bx	lr
   3f3cc:	push	{r1, lr}
   3f3d0:	mov	r0, #8
   3f3d4:	bl	13f88 <raise@plt>
   3f3d8:	pop	{r1, pc}
   3f3dc:	vmov	s15, r0
   3f3e0:	vcmpe.f32	s15, #0.0
   3f3e4:	vmrs	APSR_nzcv, fpscr
   3f3e8:	bmi	3f3f0 <fb_value_set_visit@@Base+0x6f4>
   3f3ec:	b	3f438 <fb_value_set_visit@@Base+0x73c>
   3f3f0:	push	{r4, lr}
   3f3f4:	eor	r0, r0, #-2147483648	; 0x80000000
   3f3f8:	bl	3f438 <fb_value_set_visit@@Base+0x73c>
   3f3fc:	rsbs	r0, r0, #0
   3f400:	rsc	r1, r1, #0
   3f404:	pop	{r4, pc}
   3f408:	vmov	d7, r0, r1
   3f40c:	vcmpe.f64	d7, #0.0
   3f410:	vmrs	APSR_nzcv, fpscr
   3f414:	bmi	3f41c <fb_value_set_visit@@Base+0x720>
   3f418:	b	3f478 <fb_value_set_visit@@Base+0x77c>
   3f41c:	push	{r4, lr}
   3f420:	eor	r1, r1, #-2147483648	; 0x80000000
   3f424:	bl	3f478 <fb_value_set_visit@@Base+0x77c>
   3f428:	rsbs	r0, r0, #0
   3f42c:	rsc	r1, r1, #0
   3f430:	pop	{r4, pc}
   3f434:	andeq	r0, r0, r0
   3f438:	vmov	s15, r0
   3f43c:	vldr	d5, [pc, #36]	; 3f468 <fb_value_set_visit@@Base+0x76c>
   3f440:	vcvt.f64.f32	d6, s15
   3f444:	vldr	d7, [pc, #36]	; 3f470 <fb_value_set_visit@@Base+0x774>
   3f448:	vmul.f64	d7, d6, d7
   3f44c:	vcvt.u32.f64	s14, d7
   3f450:	vcvt.f64.u32	d4, s14
   3f454:	vmov	r1, s14
   3f458:	vmls.f64	d6, d4, d5
   3f45c:	vcvt.u32.f64	s15, d6
   3f460:	vmov	r0, s15
   3f464:	bx	lr
   3f468:	andeq	r0, r0, r0
   3f46c:	mvnsmi	r0, r0
   3f470:	andeq	r0, r0, r0
   3f474:	ldclcc	0, cr0, [r0]
   3f478:	vmov	d6, r0, r1
   3f47c:	vldr	d7, [pc, #36]	; 3f4a8 <fb_value_set_visit@@Base+0x7ac>
   3f480:	vldr	d5, [pc, #40]	; 3f4b0 <fb_value_set_visit@@Base+0x7b4>
   3f484:	vmul.f64	d7, d6, d7
   3f488:	vcvt.u32.f64	s14, d7
   3f48c:	vcvt.f64.u32	d4, s14
   3f490:	vmov	r1, s14
   3f494:	vmls.f64	d6, d4, d5
   3f498:	vcvt.u32.f64	s15, d6
   3f49c:	vmov	r0, s15
   3f4a0:	bx	lr
   3f4a4:	nop			; (mov r0, r0)
   3f4a8:	andeq	r0, r0, r0
   3f4ac:	ldclcc	0, cr0, [r0]
   3f4b0:	andeq	r0, r0, r0
   3f4b4:	mvnsmi	r0, r0
   3f4b8:	cmp	r1, r3
   3f4bc:	cmpeq	r0, r2
   3f4c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f4c4:	mov	r4, r0
   3f4c8:	movcc	r0, #0
   3f4cc:	mov	r5, r1
   3f4d0:	ldr	lr, [sp, #36]	; 0x24
   3f4d4:	movcc	r1, r0
   3f4d8:	bcc	3f5d4 <fb_value_set_visit@@Base+0x8d8>
   3f4dc:	cmp	r3, #0
   3f4e0:	clzeq	ip, r2
   3f4e4:	clzne	ip, r3
   3f4e8:	addeq	ip, ip, #32
   3f4ec:	cmp	r5, #0
   3f4f0:	clzeq	r1, r4
   3f4f4:	addeq	r1, r1, #32
   3f4f8:	clzne	r1, r5
   3f4fc:	sub	ip, ip, r1
   3f500:	sub	sl, ip, #32
   3f504:	lsl	r9, r3, ip
   3f508:	rsb	fp, ip, #32
   3f50c:	orr	r9, r9, r2, lsl sl
   3f510:	orr	r9, r9, r2, lsr fp
   3f514:	lsl	r8, r2, ip
   3f518:	cmp	r5, r9
   3f51c:	cmpeq	r4, r8
   3f520:	movcc	r0, #0
   3f524:	movcc	r1, r0
   3f528:	bcc	3f544 <fb_value_set_visit@@Base+0x848>
   3f52c:	mov	r0, #1
   3f530:	subs	r4, r4, r8
   3f534:	lsl	r1, r0, sl
   3f538:	orr	r1, r1, r0, lsr fp
   3f53c:	lsl	r0, r0, ip
   3f540:	sbc	r5, r5, r9
   3f544:	cmp	ip, #0
   3f548:	beq	3f5d4 <fb_value_set_visit@@Base+0x8d8>
   3f54c:	lsr	r6, r8, #1
   3f550:	orr	r6, r6, r9, lsl #31
   3f554:	lsr	r7, r9, #1
   3f558:	mov	r2, ip
   3f55c:	b	3f580 <fb_value_set_visit@@Base+0x884>
   3f560:	subs	r3, r4, r6
   3f564:	sbc	r8, r5, r7
   3f568:	adds	r3, r3, r3
   3f56c:	adc	r8, r8, r8
   3f570:	adds	r4, r3, #1
   3f574:	adc	r5, r8, #0
   3f578:	subs	r2, r2, #1
   3f57c:	beq	3f59c <fb_value_set_visit@@Base+0x8a0>
   3f580:	cmp	r5, r7
   3f584:	cmpeq	r4, r6
   3f588:	bcs	3f560 <fb_value_set_visit@@Base+0x864>
   3f58c:	adds	r4, r4, r4
   3f590:	adc	r5, r5, r5
   3f594:	subs	r2, r2, #1
   3f598:	bne	3f580 <fb_value_set_visit@@Base+0x884>
   3f59c:	lsr	r3, r4, ip
   3f5a0:	orr	r3, r3, r5, lsl fp
   3f5a4:	lsr	r2, r5, ip
   3f5a8:	orr	r3, r3, r5, lsr sl
   3f5ac:	adds	r0, r0, r4
   3f5b0:	mov	r4, r3
   3f5b4:	lsl	r3, r2, ip
   3f5b8:	orr	r3, r3, r4, lsl sl
   3f5bc:	lsl	ip, r4, ip
   3f5c0:	orr	r3, r3, r4, lsr fp
   3f5c4:	adc	r1, r1, r5
   3f5c8:	subs	r0, r0, ip
   3f5cc:	mov	r5, r2
   3f5d0:	sbc	r1, r1, r3
   3f5d4:	cmp	lr, #0
   3f5d8:	strdne	r4, [lr]
   3f5dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f5e0 <__libc_csu_init@@Base>:
   3f5e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3f5e4:	mov	r7, r0
   3f5e8:	ldr	r6, [pc, #72]	; 3f638 <__libc_csu_init@@Base+0x58>
   3f5ec:	ldr	r5, [pc, #72]	; 3f63c <__libc_csu_init@@Base+0x5c>
   3f5f0:	add	r6, pc, r6
   3f5f4:	add	r5, pc, r5
   3f5f8:	sub	r6, r6, r5
   3f5fc:	mov	r8, r1
   3f600:	mov	r9, r2
   3f604:	bl	13f5c <calloc@plt-0x20>
   3f608:	asrs	r6, r6, #2
   3f60c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f610:	mov	r4, #0
   3f614:	add	r4, r4, #1
   3f618:	ldr	r3, [r5], #4
   3f61c:	mov	r2, r9
   3f620:	mov	r1, r8
   3f624:	mov	r0, r7
   3f628:	blx	r3
   3f62c:	cmp	r6, r4
   3f630:	bne	3f614 <__libc_csu_init@@Base+0x34>
   3f634:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f638:	andeq	ip, r2, ip, lsl r9
   3f63c:	andeq	ip, r2, r4, lsl r9

0003f640 <__libc_csu_fini@@Base>:
   3f640:	bx	lr

Disassembly of section .fini:

0003f644 <.fini>:
   3f644:	push	{r3, lr}
   3f648:	pop	{r3, pc}
