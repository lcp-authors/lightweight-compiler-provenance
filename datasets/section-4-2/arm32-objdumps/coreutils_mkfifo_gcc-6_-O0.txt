
../repos/coreutils/src/mkfifo:     file format elf32-littlearm


Disassembly of section .init:

00011400 <.init>:
   11400:	push	{r3, lr}
   11404:	bl	11894 <__assert_fail@plt+0x48>
   11408:	pop	{r3, pc}

Disassembly of section .plt:

0001140c <fstatfs64@plt-0x14>:
   1140c:	push	{lr}		; (str lr, [sp, #-4]!)
   11410:	ldr	lr, [pc, #4]	; 1141c <fstatfs64@plt-0x4>
   11414:	add	lr, pc, lr
   11418:	ldr	pc, [lr, #8]!
   1141c:	andeq	pc, r1, r4, ror #23

00011420 <fstatfs64@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #126976	; 0x1f000
   11428:	ldr	pc, [ip, #3044]!	; 0xbe4

0001142c <selabel_lookup@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #126976	; 0x1f000
   11434:	ldr	pc, [ip, #3036]!	; 0xbdc

00011438 <calloc@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #126976	; 0x1f000
   11440:	ldr	pc, [ip, #3028]!	; 0xbd4

00011444 <fputs_unlocked@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #126976	; 0x1f000
   1144c:	ldr	pc, [ip, #3020]!	; 0xbcc

00011450 <raise@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #126976	; 0x1f000
   11458:	ldr	pc, [ip, #3012]!	; 0xbc4

0001145c <is_selinux_enabled@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #126976	; 0x1f000
   11464:	ldr	pc, [ip, #3004]!	; 0xbbc

00011468 <strcmp@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #126976	; 0x1f000
   11470:	ldr	pc, [ip, #2996]!	; 0xbb4

00011474 <printf@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #126976	; 0x1f000
   1147c:	ldr	pc, [ip, #2988]!	; 0xbac

00011480 <context_type_get@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #126976	; 0x1f000
   11488:	ldr	pc, [ip, #2980]!	; 0xba4

0001148c <fflush@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #126976	; 0x1f000
   11494:	ldr	pc, [ip, #2972]!	; 0xb9c

00011498 <lsetfilecon@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #126976	; 0x1f000
   114a0:	ldr	pc, [ip, #2964]!	; 0xb94

000114a4 <memmove@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #126976	; 0x1f000
   114ac:	ldr	pc, [ip, #2956]!	; 0xb8c

000114b0 <free@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #126976	; 0x1f000
   114b8:	ldr	pc, [ip, #2948]!	; 0xb84

000114bc <faccessat@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #126976	; 0x1f000
   114c4:	ldr	pc, [ip, #2940]!	; 0xb7c

000114c8 <_exit@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #126976	; 0x1f000
   114d0:	ldr	pc, [ip, #2932]!	; 0xb74

000114d4 <memcpy@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #126976	; 0x1f000
   114dc:	ldr	pc, [ip, #2924]!	; 0xb6c

000114e0 <mbsinit@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #126976	; 0x1f000
   114e8:	ldr	pc, [ip, #2916]!	; 0xb64

000114ec <context_new@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #126976	; 0x1f000
   114f4:	ldr	pc, [ip, #2908]!	; 0xb5c

000114f8 <memcmp@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #126976	; 0x1f000
   11500:	ldr	pc, [ip, #2900]!	; 0xb54

00011504 <fputc_unlocked@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #126976	; 0x1f000
   1150c:	ldr	pc, [ip, #2892]!	; 0xb4c

00011510 <context_type_set@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #126976	; 0x1f000
   11518:	ldr	pc, [ip, #2884]!	; 0xb44

0001151c <realloc@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #126976	; 0x1f000
   11524:	ldr	pc, [ip, #2876]!	; 0xb3c

00011528 <fgetfilecon@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #126976	; 0x1f000
   11530:	ldr	pc, [ip, #2868]!	; 0xb34

00011534 <textdomain@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #126976	; 0x1f000
   1153c:	ldr	pc, [ip, #2860]!	; 0xb2c

00011540 <rawmemchr@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #126976	; 0x1f000
   11548:	ldr	pc, [ip, #2852]!	; 0xb24

0001154c <__fxstatat64@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #126976	; 0x1f000
   11554:	ldr	pc, [ip, #2844]!	; 0xb1c

00011558 <iswprint@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #126976	; 0x1f000
   11560:	ldr	pc, [ip, #2836]!	; 0xb14

00011564 <__fxstat64@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #126976	; 0x1f000
   1156c:	ldr	pc, [ip, #2828]!	; 0xb0c

00011570 <readlink@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #126976	; 0x1f000
   11578:	ldr	pc, [ip, #2820]!	; 0xb04

0001157c <fwrite@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #126976	; 0x1f000
   11584:	ldr	pc, [ip, #2812]!	; 0xafc

00011588 <lseek64@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #126976	; 0x1f000
   11590:	ldr	pc, [ip, #2804]!	; 0xaf4

00011594 <__ctype_get_mb_cur_max@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #126976	; 0x1f000
   1159c:	ldr	pc, [ip, #2796]!	; 0xaec

000115a0 <getcon@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #126976	; 0x1f000
   115a8:	ldr	pc, [ip, #2788]!	; 0xae4

000115ac <__fpending@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #126976	; 0x1f000
   115b4:	ldr	pc, [ip, #2780]!	; 0xadc

000115b8 <ferror_unlocked@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #126976	; 0x1f000
   115c0:	ldr	pc, [ip, #2772]!	; 0xad4

000115c4 <mbrtowc@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #126976	; 0x1f000
   115cc:	ldr	pc, [ip, #2764]!	; 0xacc

000115d0 <error@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #126976	; 0x1f000
   115d8:	ldr	pc, [ip, #2756]!	; 0xac4

000115dc <open64@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #126976	; 0x1f000
   115e4:	ldr	pc, [ip, #2748]!	; 0xabc

000115e8 <lgetfilecon@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #126976	; 0x1f000
   115f0:	ldr	pc, [ip, #2740]!	; 0xab4

000115f4 <malloc@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #126976	; 0x1f000
   115fc:	ldr	pc, [ip, #2732]!	; 0xaac

00011600 <__libc_start_main@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #126976	; 0x1f000
   11608:	ldr	pc, [ip, #2724]!	; 0xaa4

0001160c <__freading@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #126976	; 0x1f000
   11614:	ldr	pc, [ip, #2716]!	; 0xa9c

00011618 <__gmon_start__@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #126976	; 0x1f000
   11620:	ldr	pc, [ip, #2708]!	; 0xa94

00011624 <context_free@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #126976	; 0x1f000
   1162c:	ldr	pc, [ip, #2700]!	; 0xa8c

00011630 <mempcpy@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #126976	; 0x1f000
   11638:	ldr	pc, [ip, #2692]!	; 0xa84

0001163c <getopt_long@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #126976	; 0x1f000
   11644:	ldr	pc, [ip, #2684]!	; 0xa7c

00011648 <__ctype_b_loc@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #126976	; 0x1f000
   11650:	ldr	pc, [ip, #2676]!	; 0xa74

00011654 <getcwd@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #126976	; 0x1f000
   1165c:	ldr	pc, [ip, #2668]!	; 0xa6c

00011660 <exit@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #126976	; 0x1f000
   11668:	ldr	pc, [ip, #2660]!	; 0xa64

0001166c <gettext@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #126976	; 0x1f000
   11674:	ldr	pc, [ip, #2652]!	; 0xa5c

00011678 <getfilecon@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #126976	; 0x1f000
   11680:	ldr	pc, [ip, #2644]!	; 0xa54

00011684 <strlen@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #126976	; 0x1f000
   1168c:	ldr	pc, [ip, #2636]!	; 0xa4c

00011690 <selabel_open@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #126976	; 0x1f000
   11698:	ldr	pc, [ip, #2628]!	; 0xa44

0001169c <openat64@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #126976	; 0x1f000
   116a4:	ldr	pc, [ip, #2620]!	; 0xa3c

000116a8 <setfscreatecon@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #126976	; 0x1f000
   116b0:	ldr	pc, [ip, #2612]!	; 0xa34

000116b4 <fprintf@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #126976	; 0x1f000
   116bc:	ldr	pc, [ip, #2604]!	; 0xa2c

000116c0 <__errno_location@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #126976	; 0x1f000
   116c8:	ldr	pc, [ip, #2596]!	; 0xa24

000116cc <__cxa_atexit@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #126976	; 0x1f000
   116d4:	ldr	pc, [ip, #2588]!	; 0xa1c

000116d8 <memset@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #126976	; 0x1f000
   116e0:	ldr	pc, [ip, #2580]!	; 0xa14

000116e4 <fileno@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #126976	; 0x1f000
   116ec:	ldr	pc, [ip, #2572]!	; 0xa0c

000116f0 <fclose@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #126976	; 0x1f000
   116f8:	ldr	pc, [ip, #2564]!	; 0xa04

000116fc <fseeko64@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #126976	; 0x1f000
   11704:	ldr	pc, [ip, #2556]!	; 0x9fc

00011708 <fcntl64@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #126976	; 0x1f000
   11710:	ldr	pc, [ip, #2548]!	; 0x9f4

00011714 <setlocale@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #126976	; 0x1f000
   1171c:	ldr	pc, [ip, #2540]!	; 0x9ec

00011720 <fsetfilecon@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #126976	; 0x1f000
   11728:	ldr	pc, [ip, #2532]!	; 0x9e4

0001172c <strrchr@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #126976	; 0x1f000
   11734:	ldr	pc, [ip, #2524]!	; 0x9dc

00011738 <nl_langinfo@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #126976	; 0x1f000
   11740:	ldr	pc, [ip, #2516]!	; 0x9d4

00011744 <sprintf@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #126976	; 0x1f000
   1174c:	ldr	pc, [ip, #2508]!	; 0x9cc

00011750 <readdir64@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #126976	; 0x1f000
   11758:	ldr	pc, [ip, #2500]!	; 0x9c4

0001175c <fdopendir@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #126976	; 0x1f000
   11764:	ldr	pc, [ip, #2492]!	; 0x9bc

00011768 <security_compute_create@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #126976	; 0x1f000
   11770:	ldr	pc, [ip, #2484]!	; 0x9b4

00011774 <dirfd@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #126976	; 0x1f000
   1177c:	ldr	pc, [ip, #2476]!	; 0x9ac

00011780 <fchdir@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #126976	; 0x1f000
   11788:	ldr	pc, [ip, #2468]!	; 0x9a4

0001178c <qsort@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #126976	; 0x1f000
   11794:	ldr	pc, [ip, #2460]!	; 0x99c

00011798 <freecon@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #126976	; 0x1f000
   117a0:	ldr	pc, [ip, #2452]!	; 0x994

000117a4 <bindtextdomain@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #126976	; 0x1f000
   117ac:	ldr	pc, [ip, #2444]!	; 0x98c

000117b0 <getfscreatecon@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #126976	; 0x1f000
   117b8:	ldr	pc, [ip, #2436]!	; 0x984

000117bc <umask@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #126976	; 0x1f000
   117c4:	ldr	pc, [ip, #2428]!	; 0x97c

000117c8 <context_str@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #126976	; 0x1f000
   117d0:	ldr	pc, [ip, #2420]!	; 0x974

000117d4 <chmod@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #126976	; 0x1f000
   117dc:	ldr	pc, [ip, #2412]!	; 0x96c

000117e0 <__xstat64@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #126976	; 0x1f000
   117e8:	ldr	pc, [ip, #2404]!	; 0x964

000117ec <strncmp@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #126976	; 0x1f000
   117f4:	ldr	pc, [ip, #2396]!	; 0x95c

000117f8 <abort@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #126976	; 0x1f000
   11800:	ldr	pc, [ip, #2388]!	; 0x954

00011804 <close@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #126976	; 0x1f000
   1180c:	ldr	pc, [ip, #2380]!	; 0x94c

00011810 <__lxstat64@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #126976	; 0x1f000
   11818:	ldr	pc, [ip, #2372]!	; 0x944

0001181c <mkfifo@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #126976	; 0x1f000
   11824:	ldr	pc, [ip, #2364]!	; 0x93c

00011828 <mode_to_security_class@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #126976	; 0x1f000
   11830:	ldr	pc, [ip, #2356]!	; 0x934

00011834 <closedir@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #126976	; 0x1f000
   1183c:	ldr	pc, [ip, #2348]!	; 0x92c

00011840 <strspn@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #126976	; 0x1f000
   11848:	ldr	pc, [ip, #2340]!	; 0x924

0001184c <__assert_fail@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #126976	; 0x1f000
   11854:	ldr	pc, [ip, #2332]!	; 0x91c

Disassembly of section .text:

00011858 <lchmod@@Base-0x754c>:
   11858:	mov	fp, #0
   1185c:	mov	lr, #0
   11860:	pop	{r1}		; (ldr r1, [sp], #4)
   11864:	mov	r2, sp
   11868:	push	{r2}		; (str r2, [sp, #-4]!)
   1186c:	push	{r0}		; (str r0, [sp, #-4]!)
   11870:	ldr	ip, [pc, #16]	; 11888 <__assert_fail@plt+0x3c>
   11874:	push	{ip}		; (str ip, [sp, #-4]!)
   11878:	ldr	r0, [pc, #12]	; 1188c <__assert_fail@plt+0x40>
   1187c:	ldr	r3, [pc, #12]	; 11890 <__assert_fail@plt+0x44>
   11880:	bl	11600 <__libc_start_main@plt>
   11884:	bl	117f8 <abort@plt>
   11888:	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1188c:	andeq	r1, r1, r0, ror #25
   11890:	andeq	pc, r1, r4, lsl fp	; <UNPREDICTABLE>
   11894:	ldr	r3, [pc, #20]	; 118b0 <__assert_fail@plt+0x64>
   11898:	ldr	r2, [pc, #20]	; 118b4 <__assert_fail@plt+0x68>
   1189c:	add	r3, pc, r3
   118a0:	ldr	r2, [r3, r2]
   118a4:	cmp	r2, #0
   118a8:	bxeq	lr
   118ac:	b	11618 <__gmon_start__@plt>
   118b0:	andeq	pc, r1, ip, asr r7	; <UNPREDICTABLE>
   118b4:	andeq	r0, r0, r4, ror r1
   118b8:	ldr	r3, [pc, #28]	; 118dc <__assert_fail@plt+0x90>
   118bc:	ldr	r0, [pc, #28]	; 118e0 <__assert_fail@plt+0x94>
   118c0:	sub	r3, r3, r0
   118c4:	cmp	r3, #6
   118c8:	bxls	lr
   118cc:	ldr	r3, [pc, #16]	; 118e4 <__assert_fail@plt+0x98>
   118d0:	cmp	r3, #0
   118d4:	bxeq	lr
   118d8:	bx	r3
   118dc:	andeq	r1, r3, fp, asr #3
   118e0:	andeq	r1, r3, r8, asr #3
   118e4:	andeq	r0, r0, r0
   118e8:	ldr	r1, [pc, #36]	; 11914 <__assert_fail@plt+0xc8>
   118ec:	ldr	r0, [pc, #36]	; 11918 <__assert_fail@plt+0xcc>
   118f0:	sub	r1, r1, r0
   118f4:	asr	r1, r1, #2
   118f8:	add	r1, r1, r1, lsr #31
   118fc:	asrs	r1, r1, #1
   11900:	bxeq	lr
   11904:	ldr	r3, [pc, #16]	; 1191c <__assert_fail@plt+0xd0>
   11908:	cmp	r3, #0
   1190c:	bxeq	lr
   11910:	bx	r3
   11914:	andeq	r1, r3, r8, asr #3
   11918:	andeq	r1, r3, r8, asr #3
   1191c:	andeq	r0, r0, r0
   11920:	push	{r4, lr}
   11924:	ldr	r4, [pc, #24]	; 11944 <__assert_fail@plt+0xf8>
   11928:	ldrb	r3, [r4]
   1192c:	cmp	r3, #0
   11930:	popne	{r4, pc}
   11934:	bl	118b8 <__assert_fail@plt+0x6c>
   11938:	mov	r3, #1
   1193c:	strb	r3, [r4]
   11940:	pop	{r4, pc}
   11944:	andeq	r1, r3, r4, ror #3
   11948:	ldr	r0, [pc, #40]	; 11978 <__assert_fail@plt+0x12c>
   1194c:	ldr	r3, [r0]
   11950:	cmp	r3, #0
   11954:	bne	1195c <__assert_fail@plt+0x110>
   11958:	b	118e8 <__assert_fail@plt+0x9c>
   1195c:	ldr	r3, [pc, #24]	; 1197c <__assert_fail@plt+0x130>
   11960:	cmp	r3, #0
   11964:	beq	11958 <__assert_fail@plt+0x10c>
   11968:	push	{r4, lr}
   1196c:	blx	r3
   11970:	pop	{r4, lr}
   11974:	b	118e8 <__assert_fail@plt+0x9c>
   11978:	andeq	r0, r3, ip, lsl #30
   1197c:	andeq	r0, r0, r0
   11980:	push	{fp, lr}
   11984:	add	fp, sp, #4
   11988:	ldr	r0, [pc, #32]	; 119b0 <__assert_fail@plt+0x164>
   1198c:	bl	1166c <gettext@plt>
   11990:	mov	r2, r0
   11994:	ldr	r3, [pc, #24]	; 119b4 <__assert_fail@plt+0x168>
   11998:	ldr	r3, [r3]
   1199c:	mov	r1, r3
   119a0:	mov	r0, r2
   119a4:	bl	11444 <fputs_unlocked@plt>
   119a8:	nop			; (mov r0, r0)
   119ac:	pop	{fp, pc}
   119b0:	strdeq	pc, [r1], -r4
   119b4:	ldrdeq	r1, [r3], -ip
   119b8:	push	{fp, lr}
   119bc:	add	fp, sp, #4
   119c0:	sub	sp, sp, #80	; 0x50
   119c4:	str	r0, [fp, #-80]	; 0xffffffb0
   119c8:	ldr	r3, [pc, #348]	; 11b2c <__assert_fail@plt+0x2e0>
   119cc:	sub	ip, fp, #72	; 0x48
   119d0:	mov	lr, r3
   119d4:	ldm	lr!, {r0, r1, r2, r3}
   119d8:	stmia	ip!, {r0, r1, r2, r3}
   119dc:	ldm	lr!, {r0, r1, r2, r3}
   119e0:	stmia	ip!, {r0, r1, r2, r3}
   119e4:	ldm	lr!, {r0, r1, r2, r3}
   119e8:	stmia	ip!, {r0, r1, r2, r3}
   119ec:	ldm	lr, {r0, r1}
   119f0:	stm	ip, {r0, r1}
   119f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   119f8:	str	r3, [fp, #-8]
   119fc:	sub	r3, fp, #72	; 0x48
   11a00:	str	r3, [fp, #-12]
   11a04:	b	11a14 <__assert_fail@plt+0x1c8>
   11a08:	ldr	r3, [fp, #-12]
   11a0c:	add	r3, r3, #8
   11a10:	str	r3, [fp, #-12]
   11a14:	ldr	r3, [fp, #-12]
   11a18:	ldr	r3, [r3]
   11a1c:	cmp	r3, #0
   11a20:	beq	11a44 <__assert_fail@plt+0x1f8>
   11a24:	ldr	r3, [fp, #-12]
   11a28:	ldr	r3, [r3]
   11a2c:	mov	r1, r3
   11a30:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11a34:	bl	11468 <strcmp@plt>
   11a38:	mov	r3, r0
   11a3c:	cmp	r3, #0
   11a40:	bne	11a08 <__assert_fail@plt+0x1bc>
   11a44:	ldr	r3, [fp, #-12]
   11a48:	ldr	r3, [r3, #4]
   11a4c:	cmp	r3, #0
   11a50:	beq	11a60 <__assert_fail@plt+0x214>
   11a54:	ldr	r3, [fp, #-12]
   11a58:	ldr	r3, [r3, #4]
   11a5c:	str	r3, [fp, #-8]
   11a60:	ldr	r0, [pc, #200]	; 11b30 <__assert_fail@plt+0x2e4>
   11a64:	bl	1166c <gettext@plt>
   11a68:	mov	r3, r0
   11a6c:	ldr	r2, [pc, #192]	; 11b34 <__assert_fail@plt+0x2e8>
   11a70:	ldr	r1, [pc, #192]	; 11b38 <__assert_fail@plt+0x2ec>
   11a74:	mov	r0, r3
   11a78:	bl	11474 <printf@plt>
   11a7c:	mov	r1, #0
   11a80:	mov	r0, #5
   11a84:	bl	11714 <setlocale@plt>
   11a88:	str	r0, [fp, #-16]
   11a8c:	ldr	r3, [fp, #-16]
   11a90:	cmp	r3, #0
   11a94:	beq	11ad4 <__assert_fail@plt+0x288>
   11a98:	mov	r2, #3
   11a9c:	ldr	r1, [pc, #152]	; 11b3c <__assert_fail@plt+0x2f0>
   11aa0:	ldr	r0, [fp, #-16]
   11aa4:	bl	117ec <strncmp@plt>
   11aa8:	mov	r3, r0
   11aac:	cmp	r3, #0
   11ab0:	beq	11ad4 <__assert_fail@plt+0x288>
   11ab4:	ldr	r0, [pc, #132]	; 11b40 <__assert_fail@plt+0x2f4>
   11ab8:	bl	1166c <gettext@plt>
   11abc:	mov	r2, r0
   11ac0:	ldr	r3, [pc, #124]	; 11b44 <__assert_fail@plt+0x2f8>
   11ac4:	ldr	r3, [r3]
   11ac8:	mov	r1, r3
   11acc:	mov	r0, r2
   11ad0:	bl	11444 <fputs_unlocked@plt>
   11ad4:	ldr	r0, [pc, #108]	; 11b48 <__assert_fail@plt+0x2fc>
   11ad8:	bl	1166c <gettext@plt>
   11adc:	mov	r3, r0
   11ae0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11ae4:	ldr	r1, [pc, #72]	; 11b34 <__assert_fail@plt+0x2e8>
   11ae8:	mov	r0, r3
   11aec:	bl	11474 <printf@plt>
   11af0:	ldr	r0, [pc, #84]	; 11b4c <__assert_fail@plt+0x300>
   11af4:	bl	1166c <gettext@plt>
   11af8:	ldr	r2, [fp, #-8]
   11afc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11b00:	cmp	r2, r3
   11b04:	bne	11b10 <__assert_fail@plt+0x2c4>
   11b08:	ldr	r3, [pc, #64]	; 11b50 <__assert_fail@plt+0x304>
   11b0c:	b	11b14 <__assert_fail@plt+0x2c8>
   11b10:	ldr	r3, [pc, #60]	; 11b54 <__assert_fail@plt+0x308>
   11b14:	mov	r2, r3
   11b18:	ldr	r1, [fp, #-8]
   11b1c:	bl	11474 <printf@plt>
   11b20:	nop			; (mov r0, r0)
   11b24:	sub	sp, fp, #4
   11b28:	pop	{fp, pc}
   11b2c:			; <UNDEFINED> instruction: 0x0001fdb4
   11b30:	andeq	pc, r1, r0, asr #24
   11b34:	andeq	pc, r1, r8, asr ip	; <UNPREDICTABLE>
   11b38:	andeq	pc, r1, r0, lsl #25
   11b3c:	muleq	r1, r0, ip
   11b40:	muleq	r1, r4, ip
   11b44:	ldrdeq	r1, [r3], -ip
   11b48:	ldrdeq	pc, [r1], -ip
   11b4c:	strdeq	pc, [r1], -r8
   11b50:	andeq	pc, r1, ip, lsr #26
   11b54:	andeq	pc, r1, r8, lsr sp	; <UNPREDICTABLE>
   11b58:	push	{fp}		; (str fp, [sp, #-4]!)
   11b5c:	add	fp, sp, #0
   11b60:	sub	sp, sp, #12
   11b64:	str	r0, [fp, #-8]
   11b68:	mvn	r3, #0
   11b6c:	mov	r0, r3
   11b70:	add	sp, fp, #0
   11b74:	pop	{fp}		; (ldr fp, [sp], #4)
   11b78:	bx	lr
   11b7c:	push	{fp}		; (str fp, [sp, #-4]!)
   11b80:	add	fp, sp, #0
   11b84:	mov	r3, #0
   11b88:	mov	r0, r3
   11b8c:	add	sp, fp, #0
   11b90:	pop	{fp}		; (ldr fp, [sp], #4)
   11b94:	bx	lr
   11b98:	push	{r4, fp, lr}
   11b9c:	add	fp, sp, #8
   11ba0:	sub	sp, sp, #12
   11ba4:	str	r0, [fp, #-16]
   11ba8:	ldr	r3, [fp, #-16]
   11bac:	cmp	r3, #0
   11bb0:	beq	11be0 <__assert_fail@plt+0x394>
   11bb4:	ldr	r3, [pc, #248]	; 11cb4 <__assert_fail@plt+0x468>
   11bb8:	ldr	r4, [r3]
   11bbc:	ldr	r0, [pc, #244]	; 11cb8 <__assert_fail@plt+0x46c>
   11bc0:	bl	1166c <gettext@plt>
   11bc4:	mov	r1, r0
   11bc8:	ldr	r3, [pc, #236]	; 11cbc <__assert_fail@plt+0x470>
   11bcc:	ldr	r3, [r3]
   11bd0:	mov	r2, r3
   11bd4:	mov	r0, r4
   11bd8:	bl	116b4 <fprintf@plt>
   11bdc:	b	11cac <__assert_fail@plt+0x460>
   11be0:	ldr	r0, [pc, #216]	; 11cc0 <__assert_fail@plt+0x474>
   11be4:	bl	1166c <gettext@plt>
   11be8:	mov	r2, r0
   11bec:	ldr	r3, [pc, #200]	; 11cbc <__assert_fail@plt+0x470>
   11bf0:	ldr	r3, [r3]
   11bf4:	mov	r1, r3
   11bf8:	mov	r0, r2
   11bfc:	bl	11474 <printf@plt>
   11c00:	ldr	r0, [pc, #188]	; 11cc4 <__assert_fail@plt+0x478>
   11c04:	bl	1166c <gettext@plt>
   11c08:	mov	r2, r0
   11c0c:	ldr	r3, [pc, #180]	; 11cc8 <__assert_fail@plt+0x47c>
   11c10:	ldr	r3, [r3]
   11c14:	mov	r1, r3
   11c18:	mov	r0, r2
   11c1c:	bl	11444 <fputs_unlocked@plt>
   11c20:	bl	11980 <__assert_fail@plt+0x134>
   11c24:	ldr	r0, [pc, #160]	; 11ccc <__assert_fail@plt+0x480>
   11c28:	bl	1166c <gettext@plt>
   11c2c:	mov	r2, r0
   11c30:	ldr	r3, [pc, #144]	; 11cc8 <__assert_fail@plt+0x47c>
   11c34:	ldr	r3, [r3]
   11c38:	mov	r1, r3
   11c3c:	mov	r0, r2
   11c40:	bl	11444 <fputs_unlocked@plt>
   11c44:	ldr	r0, [pc, #132]	; 11cd0 <__assert_fail@plt+0x484>
   11c48:	bl	1166c <gettext@plt>
   11c4c:	mov	r2, r0
   11c50:	ldr	r3, [pc, #112]	; 11cc8 <__assert_fail@plt+0x47c>
   11c54:	ldr	r3, [r3]
   11c58:	mov	r1, r3
   11c5c:	mov	r0, r2
   11c60:	bl	11444 <fputs_unlocked@plt>
   11c64:	ldr	r0, [pc, #104]	; 11cd4 <__assert_fail@plt+0x488>
   11c68:	bl	1166c <gettext@plt>
   11c6c:	mov	r2, r0
   11c70:	ldr	r3, [pc, #80]	; 11cc8 <__assert_fail@plt+0x47c>
   11c74:	ldr	r3, [r3]
   11c78:	mov	r1, r3
   11c7c:	mov	r0, r2
   11c80:	bl	11444 <fputs_unlocked@plt>
   11c84:	ldr	r0, [pc, #76]	; 11cd8 <__assert_fail@plt+0x48c>
   11c88:	bl	1166c <gettext@plt>
   11c8c:	mov	r2, r0
   11c90:	ldr	r3, [pc, #48]	; 11cc8 <__assert_fail@plt+0x47c>
   11c94:	ldr	r3, [r3]
   11c98:	mov	r1, r3
   11c9c:	mov	r0, r2
   11ca0:	bl	11444 <fputs_unlocked@plt>
   11ca4:	ldr	r0, [pc, #48]	; 11cdc <__assert_fail@plt+0x490>
   11ca8:	bl	119b8 <__assert_fail@plt+0x16c>
   11cac:	ldr	r0, [fp, #-16]
   11cb0:	bl	11660 <exit@plt>
   11cb4:	ldrdeq	r1, [r3], -r8
   11cb8:	andeq	pc, r1, ip, asr lr	; <UNPREDICTABLE>
   11cbc:	strdeq	r1, [r3], -r0
   11cc0:	andeq	pc, r1, r4, lsl #29
   11cc4:	andeq	pc, r1, r4, lsr #29
   11cc8:	ldrdeq	r1, [r3], -ip
   11ccc:	ldrdeq	pc, [r1], -r8
   11cd0:	andeq	pc, r1, r4, lsr #30
   11cd4:	strdeq	pc, [r1], -r4
   11cd8:	andeq	r0, r2, r4, lsr #32
   11cdc:	andeq	r0, r2, ip, asr r0
   11ce0:	push	{r4, r5, fp, lr}
   11ce4:	add	fp, sp, #12
   11ce8:	sub	sp, sp, #56	; 0x38
   11cec:	str	r0, [fp, #-56]	; 0xffffffc8
   11cf0:	str	r1, [fp, #-60]	; 0xffffffc4
   11cf4:	mov	r3, #0
   11cf8:	str	r3, [fp, #-20]	; 0xffffffec
   11cfc:	mov	r3, #0
   11d00:	str	r3, [fp, #-24]	; 0xffffffe8
   11d04:	mov	r3, #0
   11d08:	str	r3, [fp, #-28]	; 0xffffffe4
   11d0c:	mov	r3, #0
   11d10:	str	r3, [fp, #-32]	; 0xffffffe0
   11d14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d18:	ldr	r3, [r3]
   11d1c:	mov	r0, r3
   11d20:	bl	199b0 <lchmod@@Base+0xc0c>
   11d24:	ldr	r1, [pc, #1184]	; 121cc <__assert_fail@plt+0x980>
   11d28:	mov	r0, #6
   11d2c:	bl	11714 <setlocale@plt>
   11d30:	ldr	r1, [pc, #1176]	; 121d0 <__assert_fail@plt+0x984>
   11d34:	ldr	r0, [pc, #1176]	; 121d4 <__assert_fail@plt+0x988>
   11d38:	bl	117a4 <bindtextdomain@plt>
   11d3c:	ldr	r0, [pc, #1168]	; 121d4 <__assert_fail@plt+0x988>
   11d40:	bl	11534 <textdomain@plt>
   11d44:	ldr	r0, [pc, #1164]	; 121d8 <__assert_fail@plt+0x98c>
   11d48:	bl	1fb78 <lchmod@@Base+0x6dd4>
   11d4c:	b	11ea4 <__assert_fail@plt+0x658>
   11d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11d54:	cmn	r3, #2
   11d58:	beq	11e5c <__assert_fail@plt+0x610>
   11d5c:	cmn	r3, #2
   11d60:	bgt	11d70 <__assert_fail@plt+0x524>
   11d64:	cmn	r3, #3
   11d68:	beq	11e64 <__assert_fail@plt+0x618>
   11d6c:	b	11e9c <__assert_fail@plt+0x650>
   11d70:	cmp	r3, #90	; 0x5a
   11d74:	beq	11d90 <__assert_fail@plt+0x544>
   11d78:	cmp	r3, #109	; 0x6d
   11d7c:	bne	11e9c <__assert_fail@plt+0x650>
   11d80:	ldr	r3, [pc, #1108]	; 121dc <__assert_fail@plt+0x990>
   11d84:	ldr	r3, [r3]
   11d88:	str	r3, [fp, #-20]	; 0xffffffec
   11d8c:	b	11ea4 <__assert_fail@plt+0x658>
   11d90:	bl	11b7c <__assert_fail@plt+0x330>
   11d94:	mov	r3, r0
   11d98:	cmp	r3, #0
   11d9c:	beq	11db0 <__assert_fail@plt+0x564>
   11da0:	ldr	r3, [pc, #1076]	; 121dc <__assert_fail@plt+0x990>
   11da4:	ldr	r3, [r3]
   11da8:	str	r3, [fp, #-28]	; 0xffffffe4
   11dac:	b	11ea4 <__assert_fail@plt+0x658>
   11db0:	bl	1145c <is_selinux_enabled@plt>
   11db4:	mov	r3, r0
   11db8:	cmp	r3, #0
   11dbc:	ble	11e2c <__assert_fail@plt+0x5e0>
   11dc0:	ldr	r3, [pc, #1044]	; 121dc <__assert_fail@plt+0x990>
   11dc4:	ldr	r3, [r3]
   11dc8:	cmp	r3, #0
   11dcc:	beq	11de0 <__assert_fail@plt+0x594>
   11dd0:	ldr	r3, [pc, #1028]	; 121dc <__assert_fail@plt+0x990>
   11dd4:	ldr	r3, [r3]
   11dd8:	str	r3, [fp, #-28]	; 0xffffffe4
   11ddc:	b	11ea4 <__assert_fail@plt+0x658>
   11de0:	mov	r2, #0
   11de4:	mov	r1, #0
   11de8:	mov	r0, #0
   11dec:	bl	11690 <selabel_open@plt>
   11df0:	str	r0, [fp, #-32]	; 0xffffffe0
   11df4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11df8:	cmp	r3, #0
   11dfc:	bne	11ea4 <__assert_fail@plt+0x658>
   11e00:	bl	116c0 <__errno_location@plt>
   11e04:	mov	r3, r0
   11e08:	ldr	r4, [r3]
   11e0c:	ldr	r0, [pc, #972]	; 121e0 <__assert_fail@plt+0x994>
   11e10:	bl	1166c <gettext@plt>
   11e14:	mov	r3, r0
   11e18:	mov	r2, r3
   11e1c:	mov	r1, r4
   11e20:	mov	r0, #0
   11e24:	bl	115d0 <error@plt>
   11e28:	b	11ea4 <__assert_fail@plt+0x658>
   11e2c:	ldr	r3, [pc, #936]	; 121dc <__assert_fail@plt+0x990>
   11e30:	ldr	r3, [r3]
   11e34:	cmp	r3, #0
   11e38:	beq	11ea4 <__assert_fail@plt+0x658>
   11e3c:	ldr	r0, [pc, #928]	; 121e4 <__assert_fail@plt+0x998>
   11e40:	bl	1166c <gettext@plt>
   11e44:	mov	r3, r0
   11e48:	mov	r2, r3
   11e4c:	mov	r1, #0
   11e50:	mov	r0, #0
   11e54:	bl	115d0 <error@plt>
   11e58:	b	11ea4 <__assert_fail@plt+0x658>
   11e5c:	mov	r0, #0
   11e60:	bl	11b98 <__assert_fail@plt+0x34c>
   11e64:	ldr	r3, [pc, #892]	; 121e8 <__assert_fail@plt+0x99c>
   11e68:	ldr	r0, [r3]
   11e6c:	ldr	r3, [pc, #888]	; 121ec <__assert_fail@plt+0x9a0>
   11e70:	ldr	r2, [r3]
   11e74:	mov	r3, #0
   11e78:	str	r3, [sp, #4]
   11e7c:	ldr	r3, [pc, #876]	; 121f0 <__assert_fail@plt+0x9a4>
   11e80:	str	r3, [sp]
   11e84:	mov	r3, r2
   11e88:	ldr	r2, [pc, #868]	; 121f4 <__assert_fail@plt+0x9a8>
   11e8c:	ldr	r1, [pc, #868]	; 121f8 <__assert_fail@plt+0x9ac>
   11e90:	bl	1ccf0 <lchmod@@Base+0x3f4c>
   11e94:	mov	r0, #0
   11e98:	bl	11660 <exit@plt>
   11e9c:	mov	r0, #1
   11ea0:	bl	11b98 <__assert_fail@plt+0x34c>
   11ea4:	mov	r3, #0
   11ea8:	str	r3, [sp]
   11eac:	ldr	r3, [pc, #840]	; 121fc <__assert_fail@plt+0x9b0>
   11eb0:	ldr	r2, [pc, #840]	; 12200 <__assert_fail@plt+0x9b4>
   11eb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11eb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ebc:	bl	1163c <getopt_long@plt>
   11ec0:	str	r0, [fp, #-40]	; 0xffffffd8
   11ec4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ec8:	cmn	r3, #1
   11ecc:	bne	11d50 <__assert_fail@plt+0x504>
   11ed0:	ldr	r3, [pc, #812]	; 12204 <__assert_fail@plt+0x9b8>
   11ed4:	ldr	r2, [r3]
   11ed8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11edc:	cmp	r2, r3
   11ee0:	bne	11f08 <__assert_fail@plt+0x6bc>
   11ee4:	ldr	r0, [pc, #796]	; 12208 <__assert_fail@plt+0x9bc>
   11ee8:	bl	1166c <gettext@plt>
   11eec:	mov	r3, r0
   11ef0:	mov	r2, r3
   11ef4:	mov	r1, #0
   11ef8:	mov	r0, #0
   11efc:	bl	115d0 <error@plt>
   11f00:	mov	r0, #1
   11f04:	bl	11b98 <__assert_fail@plt+0x34c>
   11f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f0c:	cmp	r3, #0
   11f10:	beq	11f88 <__assert_fail@plt+0x73c>
   11f14:	mov	r3, #0
   11f18:	str	r3, [fp, #-36]	; 0xffffffdc
   11f1c:	bl	11b7c <__assert_fail@plt+0x330>
   11f20:	mov	r3, r0
   11f24:	cmp	r3, #0
   11f28:	beq	11f3c <__assert_fail@plt+0x6f0>
   11f2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f30:	bl	11b58 <__assert_fail@plt+0x30c>
   11f34:	str	r0, [fp, #-36]	; 0xffffffdc
   11f38:	b	11f48 <__assert_fail@plt+0x6fc>
   11f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f40:	bl	116a8 <setfscreatecon@plt>
   11f44:	str	r0, [fp, #-36]	; 0xffffffdc
   11f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f4c:	cmp	r3, #0
   11f50:	bge	11f88 <__assert_fail@plt+0x73c>
   11f54:	bl	116c0 <__errno_location@plt>
   11f58:	mov	r3, r0
   11f5c:	ldr	r4, [r3]
   11f60:	ldr	r0, [pc, #676]	; 1220c <__assert_fail@plt+0x9c0>
   11f64:	bl	1166c <gettext@plt>
   11f68:	mov	r5, r0
   11f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f70:	bl	1c0e0 <lchmod@@Base+0x333c>
   11f74:	mov	r3, r0
   11f78:	mov	r2, r5
   11f7c:	mov	r1, r4
   11f80:	mov	r0, #1
   11f84:	bl	115d0 <error@plt>
   11f88:	ldr	r3, [pc, #640]	; 12210 <__assert_fail@plt+0x9c4>
   11f8c:	str	r3, [fp, #-16]
   11f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f94:	cmp	r3, #0
   11f98:	beq	121a8 <__assert_fail@plt+0x95c>
   11f9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fa0:	bl	18fa0 <lchmod@@Base+0x1fc>
   11fa4:	mov	r3, r0
   11fa8:	str	r3, [fp, #-44]	; 0xffffffd4
   11fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11fb0:	cmp	r3, #0
   11fb4:	bne	11fd4 <__assert_fail@plt+0x788>
   11fb8:	ldr	r0, [pc, #596]	; 12214 <__assert_fail@plt+0x9c8>
   11fbc:	bl	1166c <gettext@plt>
   11fc0:	mov	r3, r0
   11fc4:	mov	r2, r3
   11fc8:	mov	r1, #0
   11fcc:	mov	r0, #1
   11fd0:	bl	115d0 <error@plt>
   11fd4:	mov	r0, #0
   11fd8:	bl	117bc <umask@plt>
   11fdc:	str	r0, [fp, #-48]	; 0xffffffd0
   11fe0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11fe4:	bl	117bc <umask@plt>
   11fe8:	mov	r3, #0
   11fec:	str	r3, [sp]
   11ff0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ff4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11ff8:	mov	r1, #0
   11ffc:	ldr	r0, [fp, #-16]
   12000:	bl	195e4 <lchmod@@Base+0x840>
   12004:	str	r0, [fp, #-16]
   12008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1200c:	bl	13c50 <__assert_fail@plt+0x2404>
   12010:	ldr	r3, [fp, #-16]
   12014:	bic	r3, r3, #508	; 0x1fc
   12018:	bic	r3, r3, #3
   1201c:	cmp	r3, #0
   12020:	beq	121a8 <__assert_fail@plt+0x95c>
   12024:	ldr	r0, [pc, #492]	; 12218 <__assert_fail@plt+0x9cc>
   12028:	bl	1166c <gettext@plt>
   1202c:	mov	r3, r0
   12030:	mov	r2, r3
   12034:	mov	r1, #0
   12038:	mov	r0, #1
   1203c:	bl	115d0 <error@plt>
   12040:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12044:	cmp	r3, #0
   12048:	beq	12074 <__assert_fail@plt+0x828>
   1204c:	ldr	r3, [pc, #432]	; 12204 <__assert_fail@plt+0x9b8>
   12050:	ldr	r3, [r3]
   12054:	lsl	r3, r3, #2
   12058:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1205c:	add	r3, r2, r3
   12060:	ldr	r3, [r3]
   12064:	mov	r2, #4096	; 0x1000
   12068:	mov	r1, r3
   1206c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12070:	bl	12348 <__assert_fail@plt+0xafc>
   12074:	ldr	r3, [pc, #392]	; 12204 <__assert_fail@plt+0x9b8>
   12078:	ldr	r3, [r3]
   1207c:	lsl	r3, r3, #2
   12080:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12084:	add	r3, r2, r3
   12088:	ldr	r3, [r3]
   1208c:	ldr	r1, [fp, #-16]
   12090:	mov	r0, r3
   12094:	bl	1181c <mkfifo@plt>
   12098:	mov	r3, r0
   1209c:	cmp	r3, #0
   120a0:	beq	12100 <__assert_fail@plt+0x8b4>
   120a4:	bl	116c0 <__errno_location@plt>
   120a8:	mov	r3, r0
   120ac:	ldr	r4, [r3]
   120b0:	ldr	r0, [pc, #356]	; 1221c <__assert_fail@plt+0x9d0>
   120b4:	bl	1166c <gettext@plt>
   120b8:	mov	r5, r0
   120bc:	ldr	r3, [pc, #320]	; 12204 <__assert_fail@plt+0x9b8>
   120c0:	ldr	r3, [r3]
   120c4:	lsl	r3, r3, #2
   120c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   120cc:	add	r3, r2, r3
   120d0:	ldr	r3, [r3]
   120d4:	mov	r1, r3
   120d8:	mov	r0, #4
   120dc:	bl	1bce8 <lchmod@@Base+0x2f44>
   120e0:	mov	r3, r0
   120e4:	mov	r2, r5
   120e8:	mov	r1, r4
   120ec:	mov	r0, #0
   120f0:	bl	115d0 <error@plt>
   120f4:	mov	r3, #1
   120f8:	str	r3, [fp, #-24]	; 0xffffffe8
   120fc:	b	12194 <__assert_fail@plt+0x948>
   12100:	ldr	r3, [fp, #-20]	; 0xffffffec
   12104:	cmp	r3, #0
   12108:	beq	12194 <__assert_fail@plt+0x948>
   1210c:	ldr	r3, [pc, #240]	; 12204 <__assert_fail@plt+0x9b8>
   12110:	ldr	r3, [r3]
   12114:	lsl	r3, r3, #2
   12118:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1211c:	add	r3, r2, r3
   12120:	ldr	r3, [r3]
   12124:	ldr	r1, [fp, #-16]
   12128:	mov	r0, r3
   1212c:	bl	18da4 <lchmod@@Base>
   12130:	mov	r3, r0
   12134:	cmp	r3, #0
   12138:	beq	12194 <__assert_fail@plt+0x948>
   1213c:	bl	116c0 <__errno_location@plt>
   12140:	mov	r3, r0
   12144:	ldr	r4, [r3]
   12148:	ldr	r0, [pc, #208]	; 12220 <__assert_fail@plt+0x9d4>
   1214c:	bl	1166c <gettext@plt>
   12150:	mov	r5, r0
   12154:	ldr	r3, [pc, #168]	; 12204 <__assert_fail@plt+0x9b8>
   12158:	ldr	r3, [r3]
   1215c:	lsl	r3, r3, #2
   12160:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12164:	add	r3, r2, r3
   12168:	ldr	r3, [r3]
   1216c:	mov	r1, r3
   12170:	mov	r0, #4
   12174:	bl	1bce8 <lchmod@@Base+0x2f44>
   12178:	mov	r3, r0
   1217c:	mov	r2, r5
   12180:	mov	r1, r4
   12184:	mov	r0, #0
   12188:	bl	115d0 <error@plt>
   1218c:	mov	r3, #1
   12190:	str	r3, [fp, #-24]	; 0xffffffe8
   12194:	ldr	r3, [pc, #104]	; 12204 <__assert_fail@plt+0x9b8>
   12198:	ldr	r3, [r3]
   1219c:	add	r3, r3, #1
   121a0:	ldr	r2, [pc, #92]	; 12204 <__assert_fail@plt+0x9b8>
   121a4:	str	r3, [r2]
   121a8:	ldr	r3, [pc, #84]	; 12204 <__assert_fail@plt+0x9b8>
   121ac:	ldr	r2, [r3]
   121b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   121b4:	cmp	r2, r3
   121b8:	blt	12040 <__assert_fail@plt+0x7f4>
   121bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121c0:	mov	r0, r3
   121c4:	sub	sp, fp, #12
   121c8:	pop	{r4, r5, fp, pc}
   121cc:	andeq	pc, r1, r8, lsr sp	; <UNPREDICTABLE>
   121d0:	andeq	r0, r2, r4, rrx
   121d4:	andeq	pc, r1, r0, asr sp	; <UNPREDICTABLE>
   121d8:	andeq	r3, r1, r8, lsr #16
   121dc:	andeq	r1, r3, r0, ror #3
   121e0:	andeq	r0, r2, ip, ror r0
   121e4:	muleq	r2, r8, r0
   121e8:	ldrdeq	r1, [r3], -ip
   121ec:	andeq	r1, r3, r0, lsl #3
   121f0:	andeq	r0, r2, r4, ror #1
   121f4:	andeq	pc, r1, r0, lsl #25
   121f8:	andeq	r0, r2, ip, asr r0
   121fc:	andeq	pc, r1, ip, lsl #28
   12200:	strdeq	r0, [r2], -r4
   12204:	ldrdeq	r1, [r3], -r0
   12208:	strdeq	r0, [r2], -r8
   1220c:	andeq	r0, r2, r8, lsl #2
   12210:			; <UNDEFINED> instruction: 0x000001b6
   12214:	andeq	r0, r2, ip, lsr r1
   12218:	andeq	r0, r2, ip, asr #2
   1221c:	andeq	r0, r2, r8, ror r1
   12220:	muleq	r2, r0, r1
   12224:	push	{fp, lr}
   12228:	add	fp, sp, #4
   1222c:	sub	sp, sp, #40	; 0x28
   12230:	str	r0, [fp, #-32]	; 0xffffffe0
   12234:	str	r1, [fp, #-36]	; 0xffffffdc
   12238:	str	r2, [fp, #-40]	; 0xffffffd8
   1223c:	mov	r3, #0
   12240:	str	r3, [fp, #-24]	; 0xffffffe8
   12244:	mov	r3, #0
   12248:	str	r3, [fp, #-28]	; 0xffffffe4
   1224c:	mvn	r3, #0
   12250:	str	r3, [fp, #-8]
   12254:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12258:	bl	1395c <__assert_fail@plt+0x2110>
   1225c:	mov	r3, r0
   12260:	str	r3, [fp, #-12]
   12264:	ldr	r3, [fp, #-12]
   12268:	cmp	r3, #0
   1226c:	beq	122dc <__assert_fail@plt+0xa90>
   12270:	sub	r3, fp, #24
   12274:	mov	r0, r3
   12278:	bl	115a0 <getcon@plt>
   1227c:	mov	r3, r0
   12280:	cmp	r3, #0
   12284:	blt	122e4 <__assert_fail@plt+0xa98>
   12288:	sub	r3, fp, #28
   1228c:	mov	r1, r3
   12290:	ldr	r0, [fp, #-12]
   12294:	bl	1c51c <lchmod@@Base+0x3778>
   12298:	mov	r3, r0
   1229c:	cmp	r3, #0
   122a0:	blt	122ec <__assert_fail@plt+0xaa0>
   122a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122a8:	bl	11828 <mode_to_security_class@plt>
   122ac:	mov	r3, r0
   122b0:	strh	r3, [fp, #-14]
   122b4:	ldrh	r3, [fp, #-14]
   122b8:	cmp	r3, #0
   122bc:	beq	122f4 <__assert_fail@plt+0xaa8>
   122c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122c8:	ldrh	r2, [fp, #-14]
   122cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   122d0:	bl	11768 <security_compute_create@plt>
   122d4:	str	r0, [fp, #-8]
   122d8:	b	122f8 <__assert_fail@plt+0xaac>
   122dc:	nop			; (mov r0, r0)
   122e0:	b	122f8 <__assert_fail@plt+0xaac>
   122e4:	nop			; (mov r0, r0)
   122e8:	b	122f8 <__assert_fail@plt+0xaac>
   122ec:	nop			; (mov r0, r0)
   122f0:	b	122f8 <__assert_fail@plt+0xaac>
   122f4:	nop			; (mov r0, r0)
   122f8:	bl	116c0 <__errno_location@plt>
   122fc:	mov	r3, r0
   12300:	ldr	r3, [r3]
   12304:	str	r3, [fp, #-20]	; 0xffffffec
   12308:	ldr	r0, [fp, #-12]
   1230c:	bl	13c50 <__assert_fail@plt+0x2404>
   12310:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12314:	mov	r0, r3
   12318:	bl	11798 <freecon@plt>
   1231c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12320:	mov	r0, r3
   12324:	bl	11798 <freecon@plt>
   12328:	bl	116c0 <__errno_location@plt>
   1232c:	mov	r2, r0
   12330:	ldr	r3, [fp, #-20]	; 0xffffffec
   12334:	str	r3, [r2]
   12338:	ldr	r3, [fp, #-8]
   1233c:	mov	r0, r3
   12340:	sub	sp, fp, #4
   12344:	pop	{fp, pc}
   12348:	push	{fp, lr}
   1234c:	add	fp, sp, #4
   12350:	sub	sp, sp, #56	; 0x38
   12354:	str	r0, [fp, #-48]	; 0xffffffd0
   12358:	str	r1, [fp, #-52]	; 0xffffffcc
   1235c:	str	r2, [fp, #-56]	; 0xffffffc8
   12360:	mvn	r3, #0
   12364:	str	r3, [fp, #-8]
   12368:	mov	r3, #0
   1236c:	str	r3, [fp, #-36]	; 0xffffffdc
   12370:	mov	r3, #0
   12374:	str	r3, [fp, #-40]	; 0xffffffd8
   12378:	mov	r3, #0
   1237c:	str	r3, [fp, #-12]
   12380:	mov	r3, #0
   12384:	str	r3, [fp, #-16]
   12388:	mov	r3, #0
   1238c:	str	r3, [fp, #-20]	; 0xffffffec
   12390:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12394:	ldrb	r3, [r3]
   12398:	cmp	r3, #47	; 0x2f
   1239c:	beq	123c8 <__assert_fail@plt+0xb7c>
   123a0:	mov	r1, #2
   123a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   123a8:	bl	13784 <__assert_fail@plt+0x1f38>
   123ac:	mov	r3, r0
   123b0:	str	r3, [fp, #-20]	; 0xffffffec
   123b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   123b8:	cmp	r3, #0
   123bc:	beq	124c0 <__assert_fail@plt+0xc74>
   123c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   123c4:	str	r3, [fp, #-52]	; 0xffffffcc
   123c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   123cc:	sub	r1, fp, #36	; 0x24
   123d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   123d8:	bl	1142c <selabel_lookup@plt>
   123dc:	mov	r3, r0
   123e0:	cmp	r3, #0
   123e4:	bge	12410 <__assert_fail@plt+0xbc4>
   123e8:	bl	116c0 <__errno_location@plt>
   123ec:	mov	r3, r0
   123f0:	ldr	r3, [r3]
   123f4:	cmp	r3, #2
   123f8:	bne	124c8 <__assert_fail@plt+0xc7c>
   123fc:	bl	116c0 <__errno_location@plt>
   12400:	mov	r2, r0
   12404:	mov	r3, #61	; 0x3d
   12408:	str	r3, [r2]
   1240c:	b	124c8 <__assert_fail@plt+0xc7c>
   12410:	sub	r3, fp, #40	; 0x28
   12414:	mov	r2, r3
   12418:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1241c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12420:	bl	12224 <__assert_fail@plt+0x9d8>
   12424:	mov	r3, r0
   12428:	cmp	r3, #0
   1242c:	blt	124d0 <__assert_fail@plt+0xc84>
   12430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12434:	mov	r0, r3
   12438:	bl	114ec <context_new@plt>
   1243c:	str	r0, [fp, #-12]
   12440:	ldr	r3, [fp, #-12]
   12444:	cmp	r3, #0
   12448:	beq	124d8 <__assert_fail@plt+0xc8c>
   1244c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12450:	mov	r0, r3
   12454:	bl	114ec <context_new@plt>
   12458:	str	r0, [fp, #-16]
   1245c:	ldr	r3, [fp, #-16]
   12460:	cmp	r3, #0
   12464:	beq	124e0 <__assert_fail@plt+0xc94>
   12468:	ldr	r0, [fp, #-12]
   1246c:	bl	11480 <context_type_get@plt>
   12470:	str	r0, [fp, #-24]	; 0xffffffe8
   12474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12478:	cmp	r3, #0
   1247c:	beq	124e8 <__assert_fail@plt+0xc9c>
   12480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12484:	ldr	r0, [fp, #-16]
   12488:	bl	11510 <context_type_set@plt>
   1248c:	mov	r3, r0
   12490:	cmp	r3, #0
   12494:	bne	124f0 <__assert_fail@plt+0xca4>
   12498:	ldr	r0, [fp, #-16]
   1249c:	bl	117c8 <context_str@plt>
   124a0:	str	r0, [fp, #-28]	; 0xffffffe4
   124a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124a8:	cmp	r3, #0
   124ac:	beq	124f8 <__assert_fail@plt+0xcac>
   124b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124b4:	bl	116a8 <setfscreatecon@plt>
   124b8:	str	r0, [fp, #-8]
   124bc:	b	124fc <__assert_fail@plt+0xcb0>
   124c0:	nop			; (mov r0, r0)
   124c4:	b	124fc <__assert_fail@plt+0xcb0>
   124c8:	nop			; (mov r0, r0)
   124cc:	b	124fc <__assert_fail@plt+0xcb0>
   124d0:	nop			; (mov r0, r0)
   124d4:	b	124fc <__assert_fail@plt+0xcb0>
   124d8:	nop			; (mov r0, r0)
   124dc:	b	124fc <__assert_fail@plt+0xcb0>
   124e0:	nop			; (mov r0, r0)
   124e4:	b	124fc <__assert_fail@plt+0xcb0>
   124e8:	nop			; (mov r0, r0)
   124ec:	b	124fc <__assert_fail@plt+0xcb0>
   124f0:	nop			; (mov r0, r0)
   124f4:	b	124fc <__assert_fail@plt+0xcb0>
   124f8:	nop			; (mov r0, r0)
   124fc:	bl	116c0 <__errno_location@plt>
   12500:	mov	r3, r0
   12504:	ldr	r3, [r3]
   12508:	str	r3, [fp, #-32]	; 0xffffffe0
   1250c:	ldr	r0, [fp, #-12]
   12510:	bl	11624 <context_free@plt>
   12514:	ldr	r0, [fp, #-16]
   12518:	bl	11624 <context_free@plt>
   1251c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12520:	mov	r0, r3
   12524:	bl	11798 <freecon@plt>
   12528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1252c:	mov	r0, r3
   12530:	bl	11798 <freecon@plt>
   12534:	ldr	r0, [fp, #-20]	; 0xffffffec
   12538:	bl	13c50 <__assert_fail@plt+0x2404>
   1253c:	bl	116c0 <__errno_location@plt>
   12540:	mov	r2, r0
   12544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12548:	str	r3, [r2]
   1254c:	ldr	r3, [fp, #-8]
   12550:	mov	r0, r3
   12554:	sub	sp, fp, #4
   12558:	pop	{fp, pc}
   1255c:	push	{fp, lr}
   12560:	add	fp, sp, #4
   12564:	sub	sp, sp, #152	; 0x98
   12568:	str	r0, [fp, #-152]	; 0xffffff68
   1256c:	str	r1, [fp, #-156]	; 0xffffff64
   12570:	mvn	r3, #0
   12574:	str	r3, [fp, #-8]
   12578:	mov	r3, #0
   1257c:	str	r3, [fp, #-144]	; 0xffffff70
   12580:	mov	r3, #0
   12584:	str	r3, [fp, #-148]	; 0xffffff6c
   12588:	mov	r3, #0
   1258c:	str	r3, [fp, #-12]
   12590:	mov	r3, #0
   12594:	str	r3, [fp, #-16]
   12598:	ldr	r3, [fp, #-152]	; 0xffffff68
   1259c:	cmp	r3, #0
   125a0:	bne	12630 <__assert_fail@plt+0xde4>
   125a4:	sub	r3, fp, #148	; 0x94
   125a8:	mov	r0, r3
   125ac:	bl	117b0 <getfscreatecon@plt>
   125b0:	mov	r3, r0
   125b4:	cmp	r3, #0
   125b8:	bge	125c4 <__assert_fail@plt+0xd78>
   125bc:	ldr	r3, [fp, #-8]
   125c0:	b	12890 <__assert_fail@plt+0x1044>
   125c4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   125c8:	cmp	r3, #0
   125cc:	bne	125e8 <__assert_fail@plt+0xd9c>
   125d0:	bl	116c0 <__errno_location@plt>
   125d4:	mov	r2, r0
   125d8:	mov	r3, #61	; 0x3d
   125dc:	str	r3, [r2]
   125e0:	ldr	r3, [fp, #-8]
   125e4:	b	12890 <__assert_fail@plt+0x1044>
   125e8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   125ec:	mov	r1, r3
   125f0:	ldr	r0, [fp, #-156]	; 0xffffff64
   125f4:	bl	11498 <lsetfilecon@plt>
   125f8:	str	r0, [fp, #-8]
   125fc:	bl	116c0 <__errno_location@plt>
   12600:	mov	r3, r0
   12604:	ldr	r3, [r3]
   12608:	str	r3, [fp, #-20]	; 0xffffffec
   1260c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   12610:	mov	r0, r3
   12614:	bl	11798 <freecon@plt>
   12618:	bl	116c0 <__errno_location@plt>
   1261c:	mov	r2, r0
   12620:	ldr	r3, [fp, #-20]	; 0xffffffec
   12624:	str	r3, [r2]
   12628:	ldr	r3, [fp, #-8]
   1262c:	b	12890 <__assert_fail@plt+0x1044>
   12630:	mov	r1, #32768	; 0x8000
   12634:	ldr	r0, [fp, #-156]	; 0xffffff64
   12638:	bl	115dc <open64@plt>
   1263c:	str	r0, [fp, #-24]	; 0xffffffe8
   12640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12644:	cmn	r3, #1
   12648:	bne	12660 <__assert_fail@plt+0xe14>
   1264c:	bl	116c0 <__errno_location@plt>
   12650:	mov	r3, r0
   12654:	ldr	r3, [r3]
   12658:	cmp	r3, #40	; 0x28
   1265c:	bne	127ec <__assert_fail@plt+0xfa0>
   12660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12664:	cmn	r3, #1
   12668:	beq	1268c <__assert_fail@plt+0xe40>
   1266c:	sub	r3, fp, #140	; 0x8c
   12670:	mov	r1, r3
   12674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12678:	bl	1fba0 <lchmod@@Base+0x6dfc>
   1267c:	mov	r3, r0
   12680:	cmp	r3, #0
   12684:	bge	126a8 <__assert_fail@plt+0xe5c>
   12688:	b	12830 <__assert_fail@plt+0xfe4>
   1268c:	sub	r3, fp, #140	; 0x8c
   12690:	mov	r1, r3
   12694:	ldr	r0, [fp, #-156]	; 0xffffff64
   12698:	bl	1fbb0 <lchmod@@Base+0x6e0c>
   1269c:	mov	r3, r0
   126a0:	cmp	r3, #0
   126a4:	blt	127f4 <__assert_fail@plt+0xfa8>
   126a8:	ldr	r3, [fp, #-124]	; 0xffffff84
   126ac:	sub	r1, fp, #144	; 0x90
   126b0:	ldr	r2, [fp, #-156]	; 0xffffff64
   126b4:	ldr	r0, [fp, #-152]	; 0xffffff68
   126b8:	bl	1142c <selabel_lookup@plt>
   126bc:	mov	r3, r0
   126c0:	cmp	r3, #0
   126c4:	bge	126f0 <__assert_fail@plt+0xea4>
   126c8:	bl	116c0 <__errno_location@plt>
   126cc:	mov	r3, r0
   126d0:	ldr	r3, [r3]
   126d4:	cmp	r3, #2
   126d8:	bne	127fc <__assert_fail@plt+0xfb0>
   126dc:	bl	116c0 <__errno_location@plt>
   126e0:	mov	r2, r0
   126e4:	mov	r3, #61	; 0x3d
   126e8:	str	r3, [r2]
   126ec:	b	127fc <__assert_fail@plt+0xfb0>
   126f0:	ldr	r3, [fp, #-144]	; 0xffffff70
   126f4:	mov	r0, r3
   126f8:	bl	114ec <context_new@plt>
   126fc:	str	r0, [fp, #-12]
   12700:	ldr	r3, [fp, #-12]
   12704:	cmp	r3, #0
   12708:	beq	12804 <__assert_fail@plt+0xfb8>
   1270c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12710:	cmn	r3, #1
   12714:	beq	12738 <__assert_fail@plt+0xeec>
   12718:	sub	r3, fp, #148	; 0x94
   1271c:	mov	r1, r3
   12720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12724:	bl	1c59c <lchmod@@Base+0x37f8>
   12728:	mov	r3, r0
   1272c:	cmp	r3, #0
   12730:	bge	12754 <__assert_fail@plt+0xf08>
   12734:	b	12830 <__assert_fail@plt+0xfe4>
   12738:	sub	r3, fp, #148	; 0x94
   1273c:	mov	r1, r3
   12740:	ldr	r0, [fp, #-156]	; 0xffffff64
   12744:	bl	1c55c <lchmod@@Base+0x37b8>
   12748:	mov	r3, r0
   1274c:	cmp	r3, #0
   12750:	blt	1280c <__assert_fail@plt+0xfc0>
   12754:	ldr	r3, [fp, #-148]	; 0xffffff6c
   12758:	mov	r0, r3
   1275c:	bl	114ec <context_new@plt>
   12760:	str	r0, [fp, #-16]
   12764:	ldr	r3, [fp, #-16]
   12768:	cmp	r3, #0
   1276c:	beq	12814 <__assert_fail@plt+0xfc8>
   12770:	ldr	r0, [fp, #-12]
   12774:	bl	11480 <context_type_get@plt>
   12778:	str	r0, [fp, #-28]	; 0xffffffe4
   1277c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12780:	cmp	r3, #0
   12784:	beq	1281c <__assert_fail@plt+0xfd0>
   12788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1278c:	ldr	r0, [fp, #-16]
   12790:	bl	11510 <context_type_set@plt>
   12794:	mov	r3, r0
   12798:	cmp	r3, #0
   1279c:	bne	12824 <__assert_fail@plt+0xfd8>
   127a0:	ldr	r0, [fp, #-16]
   127a4:	bl	117c8 <context_str@plt>
   127a8:	str	r0, [fp, #-32]	; 0xffffffe0
   127ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   127b0:	cmp	r3, #0
   127b4:	beq	1282c <__assert_fail@plt+0xfe0>
   127b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127bc:	cmn	r3, #1
   127c0:	beq	127d8 <__assert_fail@plt+0xf8c>
   127c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   127c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127cc:	bl	11720 <fsetfilecon@plt>
   127d0:	str	r0, [fp, #-8]
   127d4:	b	12830 <__assert_fail@plt+0xfe4>
   127d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   127dc:	ldr	r0, [fp, #-156]	; 0xffffff64
   127e0:	bl	11498 <lsetfilecon@plt>
   127e4:	str	r0, [fp, #-8]
   127e8:	b	12830 <__assert_fail@plt+0xfe4>
   127ec:	nop			; (mov r0, r0)
   127f0:	b	12830 <__assert_fail@plt+0xfe4>
   127f4:	nop			; (mov r0, r0)
   127f8:	b	12830 <__assert_fail@plt+0xfe4>
   127fc:	nop			; (mov r0, r0)
   12800:	b	12830 <__assert_fail@plt+0xfe4>
   12804:	nop			; (mov r0, r0)
   12808:	b	12830 <__assert_fail@plt+0xfe4>
   1280c:	nop			; (mov r0, r0)
   12810:	b	12830 <__assert_fail@plt+0xfe4>
   12814:	nop			; (mov r0, r0)
   12818:	b	12830 <__assert_fail@plt+0xfe4>
   1281c:	nop			; (mov r0, r0)
   12820:	b	12830 <__assert_fail@plt+0xfe4>
   12824:	nop			; (mov r0, r0)
   12828:	b	12830 <__assert_fail@plt+0xfe4>
   1282c:	nop			; (mov r0, r0)
   12830:	bl	116c0 <__errno_location@plt>
   12834:	mov	r3, r0
   12838:	ldr	r3, [r3]
   1283c:	str	r3, [fp, #-36]	; 0xffffffdc
   12840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12844:	cmn	r3, #1
   12848:	beq	12854 <__assert_fail@plt+0x1008>
   1284c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12850:	bl	11804 <close@plt>
   12854:	ldr	r0, [fp, #-12]
   12858:	bl	11624 <context_free@plt>
   1285c:	ldr	r0, [fp, #-16]
   12860:	bl	11624 <context_free@plt>
   12864:	ldr	r3, [fp, #-144]	; 0xffffff70
   12868:	mov	r0, r3
   1286c:	bl	11798 <freecon@plt>
   12870:	ldr	r3, [fp, #-148]	; 0xffffff6c
   12874:	mov	r0, r3
   12878:	bl	11798 <freecon@plt>
   1287c:	bl	116c0 <__errno_location@plt>
   12880:	mov	r2, r0
   12884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12888:	str	r3, [r2]
   1288c:	ldr	r3, [fp, #-8]
   12890:	mov	r0, r3
   12894:	sub	sp, fp, #4
   12898:	pop	{fp, pc}
   1289c:	push	{fp, lr}
   128a0:	add	fp, sp, #4
   128a4:	sub	sp, sp, #48	; 0x30
   128a8:	str	r0, [fp, #-40]	; 0xffffffd8
   128ac:	str	r1, [fp, #-44]	; 0xffffffd4
   128b0:	mov	r3, r2
   128b4:	strb	r3, [fp, #-45]	; 0xffffffd3
   128b8:	mov	r3, #0
   128bc:	str	r3, [fp, #-8]
   128c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   128c4:	ldrb	r3, [r3]
   128c8:	cmp	r3, #47	; 0x2f
   128cc:	beq	12900 <__assert_fail@plt+0x10b4>
   128d0:	mov	r1, #2
   128d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   128d8:	bl	13784 <__assert_fail@plt+0x1f38>
   128dc:	mov	r3, r0
   128e0:	str	r3, [fp, #-8]
   128e4:	ldr	r3, [fp, #-8]
   128e8:	cmp	r3, #0
   128ec:	bne	128f8 <__assert_fail@plt+0x10ac>
   128f0:	mov	r3, #0
   128f4:	b	12a48 <__assert_fail@plt+0x11fc>
   128f8:	ldr	r3, [fp, #-8]
   128fc:	str	r3, [fp, #-44]	; 0xffffffd4
   12900:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12904:	eor	r3, r3, #1
   12908:	uxtb	r3, r3
   1290c:	cmp	r3, #0
   12910:	beq	12964 <__assert_fail@plt+0x1118>
   12914:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12918:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1291c:	bl	1255c <__assert_fail@plt+0xd10>
   12920:	mov	r3, r0
   12924:	cmn	r3, #1
   12928:	movne	r3, #1
   1292c:	moveq	r3, #0
   12930:	strb	r3, [fp, #-13]
   12934:	bl	116c0 <__errno_location@plt>
   12938:	mov	r3, r0
   1293c:	ldr	r3, [r3]
   12940:	str	r3, [fp, #-20]	; 0xffffffec
   12944:	ldr	r0, [fp, #-8]
   12948:	bl	13c50 <__assert_fail@plt+0x2404>
   1294c:	bl	116c0 <__errno_location@plt>
   12950:	mov	r2, r0
   12954:	ldr	r3, [fp, #-20]	; 0xffffffec
   12958:	str	r3, [r2]
   1295c:	ldrb	r3, [fp, #-13]
   12960:	b	12a48 <__assert_fail@plt+0x11fc>
   12964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12968:	str	r3, [fp, #-36]	; 0xffffffdc
   1296c:	mov	r3, #0
   12970:	str	r3, [fp, #-32]	; 0xffffffe0
   12974:	sub	r3, fp, #36	; 0x24
   12978:	mov	r2, #0
   1297c:	mov	r1, #16
   12980:	mov	r0, r3
   12984:	bl	1d994 <lchmod@@Base+0x4bf0>
   12988:	mov	r3, r0
   1298c:	str	r3, [fp, #-24]	; 0xffffffe8
   12990:	mov	r3, #0
   12994:	str	r3, [fp, #-12]
   12998:	b	129cc <__assert_fail@plt+0x1180>
   1299c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129a0:	ldr	r3, [r3, #24]
   129a4:	mov	r1, r3
   129a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   129ac:	bl	1255c <__assert_fail@plt+0xd10>
   129b0:	mov	r3, r0
   129b4:	cmp	r3, #0
   129b8:	bge	129cc <__assert_fail@plt+0x1180>
   129bc:	bl	116c0 <__errno_location@plt>
   129c0:	mov	r3, r0
   129c4:	ldr	r3, [r3]
   129c8:	str	r3, [fp, #-12]
   129cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129d0:	bl	14ea4 <__assert_fail@plt+0x3658>
   129d4:	str	r0, [fp, #-28]	; 0xffffffe4
   129d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129dc:	cmp	r3, #0
   129e0:	bne	1299c <__assert_fail@plt+0x1150>
   129e4:	bl	116c0 <__errno_location@plt>
   129e8:	mov	r3, r0
   129ec:	ldr	r3, [r3]
   129f0:	cmp	r3, #0
   129f4:	beq	12a08 <__assert_fail@plt+0x11bc>
   129f8:	bl	116c0 <__errno_location@plt>
   129fc:	mov	r3, r0
   12a00:	ldr	r3, [r3]
   12a04:	str	r3, [fp, #-12]
   12a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a0c:	bl	14978 <__assert_fail@plt+0x312c>
   12a10:	mov	r3, r0
   12a14:	cmp	r3, #0
   12a18:	beq	12a2c <__assert_fail@plt+0x11e0>
   12a1c:	bl	116c0 <__errno_location@plt>
   12a20:	mov	r3, r0
   12a24:	ldr	r3, [r3]
   12a28:	str	r3, [fp, #-12]
   12a2c:	ldr	r0, [fp, #-8]
   12a30:	bl	13c50 <__assert_fail@plt+0x2404>
   12a34:	ldr	r3, [fp, #-12]
   12a38:	cmp	r3, #0
   12a3c:	moveq	r3, #1
   12a40:	movne	r3, #0
   12a44:	uxtb	r3, r3
   12a48:	mov	r0, r3
   12a4c:	sub	sp, fp, #4
   12a50:	pop	{fp, pc}
   12a54:	push	{fp}		; (str fp, [sp, #-4]!)
   12a58:	add	fp, sp, #0
   12a5c:	sub	sp, sp, #12
   12a60:	str	r0, [fp, #-8]
   12a64:	ldr	r3, [fp, #-8]
   12a68:	add	r2, r3, #8
   12a6c:	ldr	r3, [fp, #-8]
   12a70:	str	r2, [r3]
   12a74:	ldr	r3, [fp, #-8]
   12a78:	mov	r2, #1024	; 0x400
   12a7c:	str	r2, [r3, #4]
   12a80:	nop			; (mov r0, r0)
   12a84:	add	sp, fp, #0
   12a88:	pop	{fp}		; (ldr fp, [sp], #4)
   12a8c:	bx	lr
   12a90:	push	{fp, lr}
   12a94:	add	fp, sp, #4
   12a98:	sub	sp, sp, #8
   12a9c:	str	r0, [fp, #-8]
   12aa0:	ldr	r3, [fp, #-8]
   12aa4:	ldr	r2, [r3]
   12aa8:	ldr	r3, [fp, #-8]
   12aac:	add	r3, r3, #8
   12ab0:	cmp	r2, r3
   12ab4:	beq	12ac8 <__assert_fail@plt+0x127c>
   12ab8:	ldr	r3, [fp, #-8]
   12abc:	ldr	r3, [r3]
   12ac0:	mov	r0, r3
   12ac4:	bl	13c50 <__assert_fail@plt+0x2404>
   12ac8:	nop			; (mov r0, r0)
   12acc:	sub	sp, fp, #4
   12ad0:	pop	{fp, pc}
   12ad4:	push	{fp, lr}
   12ad8:	add	fp, sp, #4
   12adc:	sub	sp, sp, #8
   12ae0:	str	r0, [fp, #-8]
   12ae4:	mov	r3, #512	; 0x200
   12ae8:	mov	r2, #0
   12aec:	ldr	r1, [fp, #-8]
   12af0:	mvn	r0, #99	; 0x63
   12af4:	bl	114bc <faccessat@plt>
   12af8:	mov	r3, r0
   12afc:	cmp	r3, #0
   12b00:	moveq	r3, #1
   12b04:	movne	r3, #0
   12b08:	uxtb	r3, r3
   12b0c:	mov	r0, r3
   12b10:	sub	sp, fp, #4
   12b14:	pop	{fp, pc}
   12b18:	push	{fp}		; (str fp, [sp, #-4]!)
   12b1c:	add	fp, sp, #0
   12b20:	sub	sp, sp, #12
   12b24:	str	r0, [fp, #-8]
   12b28:	b	12bcc <__assert_fail@plt+0x1380>
   12b2c:	ldr	r3, [fp, #-8]
   12b30:	add	r3, r3, #1
   12b34:	str	r3, [fp, #-8]
   12b38:	ldr	r3, [fp, #-8]
   12b3c:	ldrb	r3, [r3]
   12b40:	cmp	r3, #47	; 0x2f
   12b44:	beq	12b2c <__assert_fail@plt+0x12e0>
   12b48:	ldr	r3, [fp, #-8]
   12b4c:	add	r2, r3, #1
   12b50:	str	r2, [fp, #-8]
   12b54:	ldrb	r3, [r3]
   12b58:	cmp	r3, #0
   12b5c:	beq	12b70 <__assert_fail@plt+0x1324>
   12b60:	cmp	r3, #46	; 0x2e
   12b64:	beq	12b78 <__assert_fail@plt+0x132c>
   12b68:	mov	r3, #0
   12b6c:	b	12be0 <__assert_fail@plt+0x1394>
   12b70:	mov	r3, #1
   12b74:	b	12be0 <__assert_fail@plt+0x1394>
   12b78:	nop			; (mov r0, r0)
   12b7c:	ldr	r3, [fp, #-8]
   12b80:	ldrb	r3, [r3]
   12b84:	cmp	r3, #0
   12b88:	beq	12bc4 <__assert_fail@plt+0x1378>
   12b8c:	ldr	r3, [fp, #-8]
   12b90:	ldrb	r3, [r3]
   12b94:	cmp	r3, #46	; 0x2e
   12b98:	bne	12bcc <__assert_fail@plt+0x1380>
   12b9c:	ldr	r3, [fp, #-8]
   12ba0:	add	r3, r3, #1
   12ba4:	ldrb	r3, [r3]
   12ba8:	cmp	r3, #0
   12bac:	beq	12bc4 <__assert_fail@plt+0x1378>
   12bb0:	ldr	r3, [fp, #-8]
   12bb4:	add	r3, r3, #1
   12bb8:	ldrb	r3, [r3]
   12bbc:	cmp	r3, #47	; 0x2f
   12bc0:	bne	12bcc <__assert_fail@plt+0x1380>
   12bc4:	mov	r3, #1
   12bc8:	b	12be0 <__assert_fail@plt+0x1394>
   12bcc:	ldr	r3, [fp, #-8]
   12bd0:	ldrb	r3, [r3]
   12bd4:	cmp	r3, #47	; 0x2f
   12bd8:	beq	12b2c <__assert_fail@plt+0x12e0>
   12bdc:	mov	r3, #0
   12be0:	mov	r0, r3
   12be4:	add	sp, fp, #0
   12be8:	pop	{fp}		; (ldr fp, [sp], #4)
   12bec:	bx	lr
   12bf0:	push	{fp, lr}
   12bf4:	add	fp, sp, #4
   12bf8:	sub	sp, sp, #8
   12bfc:	str	r0, [fp, #-8]
   12c00:	str	r1, [fp, #-12]
   12c04:	ldr	r3, [fp, #-12]
   12c08:	ldr	r1, [pc, #36]	; 12c34 <__assert_fail@plt+0x13e8>
   12c0c:	mov	r2, r3
   12c10:	mov	r3, r1
   12c14:	ldrh	r3, [r3]
   12c18:	strh	r3, [r2]
   12c1c:	ldr	r0, [fp, #-8]
   12c20:	bl	12ad4 <__assert_fail@plt+0x1288>
   12c24:	mov	r3, r0
   12c28:	mov	r0, r3
   12c2c:	sub	sp, fp, #4
   12c30:	pop	{fp, pc}
   12c34:	andeq	r0, r2, r0, asr #3
   12c38:	push	{fp}		; (str fp, [sp, #-4]!)
   12c3c:	add	fp, sp, #0
   12c40:	sub	sp, sp, #12
   12c44:	str	r0, [fp, #-8]
   12c48:	ldr	r3, [fp, #-8]
   12c4c:	sub	r2, r3, #1
   12c50:	ldr	r3, [fp, #-8]
   12c54:	and	r3, r3, r2
   12c58:	cmp	r3, #0
   12c5c:	movne	r3, #1
   12c60:	moveq	r3, #0
   12c64:	uxtb	r3, r3
   12c68:	mov	r0, r3
   12c6c:	add	sp, fp, #0
   12c70:	pop	{fp}		; (ldr fp, [sp], #4)
   12c74:	bx	lr
   12c78:	push	{fp, lr}
   12c7c:	add	fp, sp, #4
   12c80:	sub	sp, sp, #32
   12c84:	str	r0, [fp, #-16]
   12c88:	str	r1, [fp, #-20]	; 0xffffffec
   12c8c:	str	r2, [fp, #-24]	; 0xffffffe8
   12c90:	ldr	r3, [fp, #-16]
   12c94:	ldr	r3, [r3]
   12c98:	cmp	r3, #0
   12c9c:	bne	12ce8 <__assert_fail@plt+0x149c>
   12ca0:	mov	r3, #7
   12ca4:	str	r3, [fp, #-8]
   12ca8:	ldr	r0, [fp, #-8]
   12cac:	ldr	r3, [pc, #136]	; 12d3c <__assert_fail@plt+0x14f0>
   12cb0:	str	r3, [sp]
   12cb4:	ldr	r3, [pc, #132]	; 12d40 <__assert_fail@plt+0x14f4>
   12cb8:	ldr	r2, [pc, #132]	; 12d44 <__assert_fail@plt+0x14f8>
   12cbc:	mov	r1, #0
   12cc0:	bl	17a88 <__assert_fail@plt+0x623c>
   12cc4:	mov	r3, r0
   12cc8:	mov	r2, r3
   12ccc:	ldr	r3, [fp, #-16]
   12cd0:	str	r2, [r3]
   12cd4:	ldr	r3, [fp, #-16]
   12cd8:	ldr	r3, [r3]
   12cdc:	cmp	r3, #0
   12ce0:	bne	12ce8 <__assert_fail@plt+0x149c>
   12ce4:	bl	1d958 <lchmod@@Base+0x4bb4>
   12ce8:	ldr	r3, [fp, #-16]
   12cec:	ldr	r3, [r3]
   12cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12cf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12cf8:	mov	r0, r3
   12cfc:	bl	13bd4 <__assert_fail@plt+0x2388>
   12d00:	mov	r3, r0
   12d04:	cmp	r3, #0
   12d08:	beq	12d14 <__assert_fail@plt+0x14c8>
   12d0c:	mov	r3, #1
   12d10:	b	12d30 <__assert_fail@plt+0x14e4>
   12d14:	ldr	r3, [fp, #-16]
   12d18:	ldr	r3, [r3]
   12d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d20:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d24:	mov	r0, r3
   12d28:	bl	13b20 <__assert_fail@plt+0x22d4>
   12d2c:	mov	r3, #0
   12d30:	mov	r0, r3
   12d34:	sub	sp, fp, #4
   12d38:	pop	{fp, pc}
   12d3c:	andeq	r8, r1, r4, asr fp
   12d40:			; <UNDEFINED> instruction: 0x00018ab0
   12d44:	andeq	r8, r1, r0, asr #20
   12d48:	push	{fp, lr}
   12d4c:	add	fp, sp, #4
   12d50:	sub	sp, sp, #2288	; 0x8f0
   12d54:	sub	sp, sp, #8
   12d58:	str	r0, [fp, #-2288]	; 0xfffff710
   12d5c:	str	r1, [fp, #-2292]	; 0xfffff70c
   12d60:	str	r2, [fp, #-2296]	; 0xfffff708
   12d64:	mov	r3, #0
   12d68:	str	r3, [fp, #-116]	; 0xffffff8c
   12d6c:	ldr	r3, [fp, #-2292]	; 0xfffff70c
   12d70:	and	r3, r3, #4
   12d74:	cmp	r3, #0
   12d78:	movne	r3, #1
   12d7c:	moveq	r3, #0
   12d80:	strb	r3, [fp, #-49]	; 0xffffffcf
   12d84:	mov	r3, #0
   12d88:	str	r3, [fp, #-20]	; 0xffffffec
   12d8c:	ldr	r3, [fp, #-2292]	; 0xfffff70c
   12d90:	and	r3, r3, #3
   12d94:	str	r3, [fp, #-56]	; 0xffffffc8
   12d98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12d9c:	bl	12c38 <__assert_fail@plt+0x13ec>
   12da0:	mov	r3, r0
   12da4:	cmp	r3, #0
   12da8:	beq	12dc4 <__assert_fail@plt+0x1578>
   12dac:	bl	116c0 <__errno_location@plt>
   12db0:	mov	r2, r0
   12db4:	mov	r3, #22
   12db8:	str	r3, [r2]
   12dbc:	mov	r3, #0
   12dc0:	b	13770 <__assert_fail@plt+0x1f24>
   12dc4:	ldr	r3, [fp, #-2288]	; 0xfffff710
   12dc8:	cmp	r3, #0
   12dcc:	bne	12de8 <__assert_fail@plt+0x159c>
   12dd0:	bl	116c0 <__errno_location@plt>
   12dd4:	mov	r2, r0
   12dd8:	mov	r3, #22
   12ddc:	str	r3, [r2]
   12de0:	mov	r3, #0
   12de4:	b	13770 <__assert_fail@plt+0x1f24>
   12de8:	ldr	r3, [fp, #-2288]	; 0xfffff710
   12dec:	ldrb	r3, [r3]
   12df0:	cmp	r3, #0
   12df4:	bne	12e10 <__assert_fail@plt+0x15c4>
   12df8:	bl	116c0 <__errno_location@plt>
   12dfc:	mov	r2, r0
   12e00:	mov	r3, #2
   12e04:	str	r3, [r2]
   12e08:	mov	r3, #0
   12e0c:	b	13770 <__assert_fail@plt+0x1f24>
   12e10:	sub	r3, fp, #1136	; 0x470
   12e14:	sub	r3, r3, #4
   12e18:	sub	r3, r3, #8
   12e1c:	mov	r0, r3
   12e20:	bl	12a54 <__assert_fail@plt+0x1208>
   12e24:	sub	r3, fp, #2176	; 0x880
   12e28:	sub	r3, r3, #4
   12e2c:	mov	r0, r3
   12e30:	bl	12a54 <__assert_fail@plt+0x1208>
   12e34:	ldr	r0, [fp, #-2296]	; 0xfffff708
   12e38:	bl	12a54 <__assert_fail@plt+0x1208>
   12e3c:	ldr	r3, [fp, #-2296]	; 0xfffff708
   12e40:	ldr	r3, [r3]
   12e44:	str	r3, [fp, #-60]	; 0xffffffc4
   12e48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12e4c:	str	r3, [fp, #-24]	; 0xffffffe8
   12e50:	mov	r3, #0
   12e54:	strb	r3, [fp, #-25]	; 0xffffffe7
   12e58:	mov	r3, #1
   12e5c:	strb	r3, [fp, #-26]	; 0xffffffe6
   12e60:	mov	r3, #0
   12e64:	str	r3, [fp, #-32]	; 0xffffffe0
   12e68:	ldr	r3, [fp, #-2288]	; 0xfffff710
   12e6c:	ldrb	r3, [r3]
   12e70:	cmp	r3, #47	; 0x2f
   12e74:	beq	12f28 <__assert_fail@plt+0x16dc>
   12e78:	b	12ee4 <__assert_fail@plt+0x1698>
   12e7c:	bl	116c0 <__errno_location@plt>
   12e80:	mov	r3, r0
   12e84:	ldr	r3, [r3]
   12e88:	cmp	r3, #12
   12e8c:	beq	12ec4 <__assert_fail@plt+0x1678>
   12e90:	cmp	r3, #34	; 0x22
   12e94:	bne	12ec8 <__assert_fail@plt+0x167c>
   12e98:	ldr	r3, [fp, #-2296]	; 0xfffff708
   12e9c:	str	r3, [fp, #-88]	; 0xffffffa8
   12ea0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12ea4:	bl	1c230 <lchmod@@Base+0x348c>
   12ea8:	mov	r3, r0
   12eac:	cmp	r3, #0
   12eb0:	movne	r3, #1
   12eb4:	moveq	r3, #0
   12eb8:	uxtb	r3, r3
   12ebc:	cmp	r3, #0
   12ec0:	bne	12ed4 <__assert_fail@plt+0x1688>
   12ec4:	bl	1d958 <lchmod@@Base+0x4bb4>
   12ec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ecc:	str	r3, [fp, #-8]
   12ed0:	b	13698 <__assert_fail@plt+0x1e4c>
   12ed4:	nop			; (mov r0, r0)
   12ed8:	ldr	r3, [fp, #-2296]	; 0xfffff708
   12edc:	ldr	r3, [r3]
   12ee0:	str	r3, [fp, #-24]	; 0xffffffe8
   12ee4:	ldr	r3, [fp, #-2296]	; 0xfffff708
   12ee8:	ldr	r3, [r3, #4]
   12eec:	mov	r1, r3
   12ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ef4:	bl	11654 <getcwd@plt>
   12ef8:	mov	r3, r0
   12efc:	cmp	r3, #0
   12f00:	beq	12e7c <__assert_fail@plt+0x1630>
   12f04:	mov	r1, #0
   12f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f0c:	bl	11540 <rawmemchr@plt>
   12f10:	str	r0, [fp, #-8]
   12f14:	ldr	r3, [fp, #-2288]	; 0xfffff710
   12f18:	str	r3, [fp, #-12]
   12f1c:	mov	r3, #0
   12f20:	str	r3, [fp, #-32]	; 0xffffffe0
   12f24:	b	13634 <__assert_fail@plt+0x1de8>
   12f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12f2c:	mov	r2, r3
   12f30:	ldr	r1, [fp, #-2288]	; 0xfffff710
   12f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f38:	bl	11630 <mempcpy@plt>
   12f3c:	str	r0, [fp, #-8]
   12f40:	ldr	r3, [fp, #-8]
   12f44:	add	r2, r3, #1
   12f48:	str	r2, [fp, #-8]
   12f4c:	mov	r2, #47	; 0x2f
   12f50:	strb	r2, [r3]
   12f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12f58:	ldr	r2, [fp, #-2288]	; 0xfffff710
   12f5c:	add	r3, r2, r3
   12f60:	str	r3, [fp, #-12]
   12f64:	b	13634 <__assert_fail@plt+0x1de8>
   12f68:	ldr	r3, [fp, #-12]
   12f6c:	add	r3, r3, #1
   12f70:	str	r3, [fp, #-12]
   12f74:	ldr	r3, [fp, #-12]
   12f78:	ldrb	r3, [r3]
   12f7c:	cmp	r3, #47	; 0x2f
   12f80:	beq	12f68 <__assert_fail@plt+0x171c>
   12f84:	ldr	r3, [fp, #-12]
   12f88:	str	r3, [fp, #-16]
   12f8c:	b	12f9c <__assert_fail@plt+0x1750>
   12f90:	ldr	r3, [fp, #-16]
   12f94:	add	r3, r3, #1
   12f98:	str	r3, [fp, #-16]
   12f9c:	ldr	r3, [fp, #-16]
   12fa0:	ldrb	r3, [r3]
   12fa4:	cmp	r3, #0
   12fa8:	beq	12fbc <__assert_fail@plt+0x1770>
   12fac:	ldr	r3, [fp, #-16]
   12fb0:	ldrb	r3, [r3]
   12fb4:	cmp	r3, #47	; 0x2f
   12fb8:	bne	12f90 <__assert_fail@plt+0x1744>
   12fbc:	ldr	r2, [fp, #-16]
   12fc0:	ldr	r3, [fp, #-12]
   12fc4:	sub	r3, r2, r3
   12fc8:	str	r3, [fp, #-64]	; 0xffffffc0
   12fcc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12fd0:	cmp	r3, #0
   12fd4:	beq	13648 <__assert_fail@plt+0x1dfc>
   12fd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12fdc:	cmp	r3, #1
   12fe0:	bne	12ff4 <__assert_fail@plt+0x17a8>
   12fe4:	ldr	r3, [fp, #-12]
   12fe8:	ldrb	r3, [r3]
   12fec:	cmp	r3, #46	; 0x2e
   12ff0:	beq	1362c <__assert_fail@plt+0x1de0>
   12ff4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12ff8:	cmp	r3, #2
   12ffc:	bne	13084 <__assert_fail@plt+0x1838>
   13000:	ldr	r3, [fp, #-12]
   13004:	ldrb	r3, [r3]
   13008:	cmp	r3, #46	; 0x2e
   1300c:	bne	13084 <__assert_fail@plt+0x1838>
   13010:	ldr	r3, [fp, #-12]
   13014:	add	r3, r3, #1
   13018:	ldrb	r3, [r3]
   1301c:	cmp	r3, #46	; 0x2e
   13020:	bne	13084 <__assert_fail@plt+0x1838>
   13024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13028:	add	r3, r3, #1
   1302c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13030:	add	r2, r2, r3
   13034:	ldr	r3, [fp, #-8]
   13038:	cmp	r2, r3
   1303c:	bcs	13620 <__assert_fail@plt+0x1dd4>
   13040:	ldr	r3, [fp, #-8]
   13044:	sub	r3, r3, #1
   13048:	str	r3, [fp, #-8]
   1304c:	b	1305c <__assert_fail@plt+0x1810>
   13050:	ldr	r3, [fp, #-8]
   13054:	sub	r3, r3, #1
   13058:	str	r3, [fp, #-8]
   1305c:	ldr	r2, [fp, #-8]
   13060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13064:	cmp	r2, r3
   13068:	bls	13620 <__assert_fail@plt+0x1dd4>
   1306c:	ldr	r3, [fp, #-8]
   13070:	sub	r3, r3, #1
   13074:	ldrb	r3, [r3]
   13078:	cmp	r3, #47	; 0x2f
   1307c:	bne	13050 <__assert_fail@plt+0x1804>
   13080:	b	13620 <__assert_fail@plt+0x1dd4>
   13084:	ldr	r3, [fp, #-8]
   13088:	sub	r3, r3, #1
   1308c:	ldrb	r3, [r3]
   13090:	cmp	r3, #47	; 0x2f
   13094:	beq	13114 <__assert_fail@plt+0x18c8>
   13098:	ldr	r3, [fp, #-8]
   1309c:	add	r2, r3, #1
   130a0:	str	r2, [fp, #-8]
   130a4:	mov	r2, #47	; 0x2f
   130a8:	strb	r2, [r3]
   130ac:	b	13114 <__assert_fail@plt+0x18c8>
   130b0:	ldr	r2, [fp, #-8]
   130b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130b8:	sub	r3, r2, r3
   130bc:	str	r3, [fp, #-68]	; 0xffffffbc
   130c0:	ldr	r3, [fp, #-2296]	; 0xfffff708
   130c4:	str	r3, [fp, #-92]	; 0xffffffa4
   130c8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   130cc:	bl	1c338 <lchmod@@Base+0x3594>
   130d0:	mov	r3, r0
   130d4:	cmp	r3, #0
   130d8:	movne	r3, #1
   130dc:	moveq	r3, #0
   130e0:	uxtb	r3, r3
   130e4:	eor	r3, r3, #1
   130e8:	uxtb	r3, r3
   130ec:	cmp	r3, #0
   130f0:	beq	130f8 <__assert_fail@plt+0x18ac>
   130f4:	bl	1d958 <lchmod@@Base+0x4bb4>
   130f8:	ldr	r3, [fp, #-2296]	; 0xfffff708
   130fc:	ldr	r3, [r3]
   13100:	str	r3, [fp, #-24]	; 0xffffffe8
   13104:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1310c:	add	r3, r2, r3
   13110:	str	r3, [fp, #-8]
   13114:	ldr	r3, [fp, #-2296]	; 0xfffff708
   13118:	ldr	r3, [r3, #4]
   1311c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13120:	add	r3, r2, r3
   13124:	mov	r2, r3
   13128:	ldr	r3, [fp, #-8]
   1312c:	sub	r3, r2, r3
   13130:	mov	r2, r3
   13134:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13138:	add	r3, r3, #2
   1313c:	cmp	r2, r3
   13140:	bcc	130b0 <__assert_fail@plt+0x1864>
   13144:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13148:	mov	r2, r3
   1314c:	ldr	r1, [fp, #-12]
   13150:	ldr	r0, [fp, #-8]
   13154:	bl	11630 <mempcpy@plt>
   13158:	str	r0, [fp, #-8]
   1315c:	ldr	r3, [fp, #-8]
   13160:	mov	r2, #0
   13164:	strb	r2, [r3]
   13168:	mvn	r3, #0
   1316c:	str	r3, [fp, #-40]	; 0xffffffd8
   13170:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   13174:	eor	r3, r3, #1
   13178:	uxtb	r3, r3
   1317c:	cmp	r3, #0
   13180:	beq	13204 <__assert_fail@plt+0x19b8>
   13184:	ldr	r3, [fp, #-2180]	; 0xfffff77c
   13188:	str	r3, [fp, #-36]	; 0xffffffdc
   1318c:	ldr	r3, [fp, #-2176]	; 0xfffff780
   13190:	str	r3, [fp, #-72]	; 0xffffffb8
   13194:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13198:	sub	r3, r3, #1
   1319c:	mov	r2, r3
   131a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   131a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131a8:	bl	11570 <readlink@plt>
   131ac:	str	r0, [fp, #-40]	; 0xffffffd8
   131b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   131b4:	sub	r2, r3, #1
   131b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   131bc:	cmp	r2, r3
   131c0:	bgt	13200 <__assert_fail@plt+0x19b4>
   131c4:	sub	r3, fp, #2176	; 0x880
   131c8:	sub	r3, r3, #4
   131cc:	str	r3, [fp, #-96]	; 0xffffffa0
   131d0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   131d4:	bl	1c230 <lchmod@@Base+0x348c>
   131d8:	mov	r3, r0
   131dc:	cmp	r3, #0
   131e0:	movne	r3, #1
   131e4:	moveq	r3, #0
   131e8:	uxtb	r3, r3
   131ec:	eor	r3, r3, #1
   131f0:	uxtb	r3, r3
   131f4:	cmp	r3, #0
   131f8:	beq	13184 <__assert_fail@plt+0x1938>
   131fc:	bl	1d958 <lchmod@@Base+0x4bb4>
   13200:	nop			; (mov r0, r0)
   13204:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13208:	cmp	r3, #0
   1320c:	blt	13520 <__assert_fail@plt+0x1cd4>
   13210:	ldr	r3, [fp, #-20]	; 0xffffffec
   13214:	cmp	r3, #19
   13218:	bgt	1322c <__assert_fail@plt+0x19e0>
   1321c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13220:	add	r3, r3, #1
   13224:	str	r3, [fp, #-20]	; 0xffffffec
   13228:	b	13304 <__assert_fail@plt+0x1ab8>
   1322c:	ldr	r3, [fp, #-12]
   13230:	ldrb	r3, [r3]
   13234:	cmp	r3, #0
   13238:	beq	13304 <__assert_fail@plt+0x1ab8>
   1323c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13240:	rsb	r3, r3, #0
   13244:	mov	r2, r3
   13248:	ldr	r3, [fp, #-8]
   1324c:	add	r3, r3, r2
   13250:	mov	r2, #0
   13254:	strb	r2, [r3]
   13258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1325c:	ldrb	r3, [r3]
   13260:	cmp	r3, #0
   13264:	beq	13270 <__assert_fail@plt+0x1a24>
   13268:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1326c:	b	13274 <__assert_fail@plt+0x1a28>
   13270:	ldr	r2, [pc, #1284]	; 1377c <__assert_fail@plt+0x1f30>
   13274:	sub	r3, fp, #2272	; 0x8e0
   13278:	sub	r3, r3, #4
   1327c:	sub	r3, r3, #8
   13280:	mov	r1, r3
   13284:	mov	r0, r2
   13288:	bl	1fb90 <lchmod@@Base+0x6dec>
   1328c:	mov	r3, r0
   13290:	cmp	r3, #0
   13294:	bne	13694 <__assert_fail@plt+0x1e48>
   13298:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1329c:	rsb	r3, r3, #0
   132a0:	mov	r2, r3
   132a4:	ldr	r3, [fp, #-8]
   132a8:	add	r3, r3, r2
   132ac:	ldr	r2, [fp, #-12]
   132b0:	ldrb	r2, [r2]
   132b4:	strb	r2, [r3]
   132b8:	sub	r3, fp, #2272	; 0x8e0
   132bc:	sub	r3, r3, #4
   132c0:	sub	r3, r3, #8
   132c4:	sub	r0, fp, #116	; 0x74
   132c8:	mov	r2, r3
   132cc:	ldr	r1, [fp, #-12]
   132d0:	bl	12c78 <__assert_fail@plt+0x142c>
   132d4:	mov	r3, r0
   132d8:	cmp	r3, #0
   132dc:	beq	13304 <__assert_fail@plt+0x1ab8>
   132e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   132e4:	cmp	r3, #2
   132e8:	beq	13628 <__assert_fail@plt+0x1ddc>
   132ec:	bl	116c0 <__errno_location@plt>
   132f0:	mov	r2, r0
   132f4:	mov	r3, #40	; 0x28
   132f8:	str	r3, [r2]
   132fc:	nop			; (mov r0, r0)
   13300:	b	13698 <__assert_fail@plt+0x1e4c>
   13304:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13308:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1330c:	add	r3, r2, r3
   13310:	mov	r2, #0
   13314:	strb	r2, [r3]
   13318:	ldr	r3, [fp, #-1148]	; 0xfffffb84
   1331c:	str	r3, [fp, #-44]	; 0xffffffd4
   13320:	mov	r3, #0
   13324:	str	r3, [fp, #-48]	; 0xffffffd0
   13328:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1332c:	cmp	r3, #0
   13330:	beq	13344 <__assert_fail@plt+0x1af8>
   13334:	ldr	r2, [fp, #-16]
   13338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1333c:	sub	r3, r2, r3
   13340:	str	r3, [fp, #-48]	; 0xffffffd0
   13344:	ldr	r0, [fp, #-16]
   13348:	bl	11684 <strlen@plt>
   1334c:	str	r0, [fp, #-76]	; 0xffffffb4
   13350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13354:	cmp	r3, #0
   13358:	bge	13380 <__assert_fail@plt+0x1b34>
   1335c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13360:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13364:	add	r2, r2, r3
   13368:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1336c:	cmp	r2, r3
   13370:	movcs	r3, #1
   13374:	movcc	r3, #0
   13378:	uxtb	r3, r3
   1337c:	b	133a0 <__assert_fail@plt+0x1b54>
   13380:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13384:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13388:	add	r2, r2, r3
   1338c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13390:	cmp	r2, r3
   13394:	movcc	r3, #1
   13398:	movcs	r3, #0
   1339c:	uxtb	r3, r3
   133a0:	cmp	r3, #0
   133a4:	beq	133f4 <__assert_fail@plt+0x1ba8>
   133a8:	bl	1d958 <lchmod@@Base+0x4bb4>
   133ac:	sub	r3, fp, #1136	; 0x470
   133b0:	sub	r3, r3, #4
   133b4:	sub	r3, r3, #8
   133b8:	str	r3, [fp, #-100]	; 0xffffff9c
   133bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   133c0:	bl	1c338 <lchmod@@Base+0x3594>
   133c4:	mov	r3, r0
   133c8:	cmp	r3, #0
   133cc:	movne	r3, #1
   133d0:	moveq	r3, #0
   133d4:	uxtb	r3, r3
   133d8:	eor	r3, r3, #1
   133dc:	uxtb	r3, r3
   133e0:	cmp	r3, #0
   133e4:	beq	133ec <__assert_fail@plt+0x1ba0>
   133e8:	bl	1d958 <lchmod@@Base+0x4bb4>
   133ec:	ldr	r3, [fp, #-1148]	; 0xfffffb84
   133f0:	str	r3, [fp, #-44]	; 0xffffffd4
   133f4:	ldr	r2, [fp, #-1144]	; 0xfffffb88
   133f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13400:	add	r3, r1, r3
   13404:	cmp	r2, r3
   13408:	bls	133ac <__assert_fail@plt+0x1b60>
   1340c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13410:	cmp	r3, #0
   13414:	beq	13428 <__assert_fail@plt+0x1bdc>
   13418:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1341c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13420:	add	r3, r2, r3
   13424:	str	r3, [fp, #-16]
   13428:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1342c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13430:	add	r0, r2, r3
   13434:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13438:	add	r3, r3, #1
   1343c:	mov	r2, r3
   13440:	ldr	r1, [fp, #-16]
   13444:	bl	114a4 <memmove@plt>
   13448:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1344c:	mov	r2, r3
   13450:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13458:	bl	114d4 <memcpy@plt>
   1345c:	str	r0, [fp, #-16]
   13460:	ldr	r3, [fp, #-16]
   13464:	str	r3, [fp, #-2288]	; 0xfffff710
   13468:	mov	r3, #1
   1346c:	strb	r3, [fp, #-25]	; 0xffffffe7
   13470:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13474:	ldrb	r3, [r3]
   13478:	cmp	r3, #47	; 0x2f
   1347c:	bne	134c0 <__assert_fail@plt+0x1c74>
   13480:	mov	r3, #0
   13484:	str	r3, [fp, #-80]	; 0xffffffb0
   13488:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1348c:	mov	r2, r3
   13490:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13498:	bl	11630 <mempcpy@plt>
   1349c:	str	r0, [fp, #-8]
   134a0:	ldr	r3, [fp, #-8]
   134a4:	add	r2, r3, #1
   134a8:	str	r2, [fp, #-8]
   134ac:	mov	r2, #47	; 0x2f
   134b0:	strb	r2, [r3]
   134b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   134b8:	str	r3, [fp, #-32]	; 0xffffffe0
   134bc:	b	1362c <__assert_fail@plt+0x1de0>
   134c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134c4:	add	r3, r3, #1
   134c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   134cc:	add	r2, r2, r3
   134d0:	ldr	r3, [fp, #-8]
   134d4:	cmp	r2, r3
   134d8:	bcs	1362c <__assert_fail@plt+0x1de0>
   134dc:	ldr	r3, [fp, #-8]
   134e0:	sub	r3, r3, #1
   134e4:	str	r3, [fp, #-8]
   134e8:	b	134f8 <__assert_fail@plt+0x1cac>
   134ec:	ldr	r3, [fp, #-8]
   134f0:	sub	r3, r3, #1
   134f4:	str	r3, [fp, #-8]
   134f8:	ldr	r2, [fp, #-8]
   134fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13500:	cmp	r2, r3
   13504:	bls	1362c <__assert_fail@plt+0x1de0>
   13508:	ldr	r3, [fp, #-8]
   1350c:	sub	r3, r3, #1
   13510:	ldrb	r3, [r3]
   13514:	cmp	r3, #47	; 0x2f
   13518:	bne	134ec <__assert_fail@plt+0x1ca0>
   1351c:	b	1362c <__assert_fail@plt+0x1de0>
   13520:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13524:	cmp	r3, #2
   13528:	beq	1362c <__assert_fail@plt+0x1de0>
   1352c:	ldr	r0, [fp, #-16]
   13530:	bl	12b18 <__assert_fail@plt+0x12cc>
   13534:	mov	r3, r0
   13538:	cmp	r3, #0
   1353c:	beq	1355c <__assert_fail@plt+0x1d10>
   13540:	ldr	r1, [fp, #-8]
   13544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13548:	bl	12bf0 <__assert_fail@plt+0x13a4>
   1354c:	mov	r3, r0
   13550:	eor	r3, r3, #1
   13554:	uxtb	r3, r3
   13558:	b	135d0 <__assert_fail@plt+0x1d84>
   1355c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   13560:	eor	r3, r3, #1
   13564:	uxtb	r3, r3
   13568:	cmp	r3, #0
   1356c:	beq	13590 <__assert_fail@plt+0x1d44>
   13570:	bl	116c0 <__errno_location@plt>
   13574:	mov	r3, r0
   13578:	ldr	r3, [r3]
   1357c:	cmp	r3, #22
   13580:	movne	r3, #1
   13584:	moveq	r3, #0
   13588:	uxtb	r3, r3
   1358c:	b	135d0 <__assert_fail@plt+0x1d84>
   13590:	ldr	r3, [fp, #-16]
   13594:	ldrb	r3, [r3]
   13598:	cmp	r3, #0
   1359c:	bne	135c4 <__assert_fail@plt+0x1d78>
   135a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135a4:	bl	12ad4 <__assert_fail@plt+0x1288>
   135a8:	mov	r3, r0
   135ac:	eor	r3, r3, #1
   135b0:	uxtb	r3, r3
   135b4:	cmp	r3, #0
   135b8:	beq	135c4 <__assert_fail@plt+0x1d78>
   135bc:	mov	r3, #1
   135c0:	b	135c8 <__assert_fail@plt+0x1d7c>
   135c4:	mov	r3, #0
   135c8:	and	r3, r3, #1
   135cc:	uxtb	r3, r3
   135d0:	cmp	r3, #0
   135d4:	beq	1362c <__assert_fail@plt+0x1de0>
   135d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   135dc:	cmp	r3, #1
   135e0:	bne	13698 <__assert_fail@plt+0x1e4c>
   135e4:	bl	116c0 <__errno_location@plt>
   135e8:	mov	r3, r0
   135ec:	ldr	r3, [r3]
   135f0:	cmp	r3, #2
   135f4:	bne	13698 <__assert_fail@plt+0x1e4c>
   135f8:	ldr	r1, [pc, #384]	; 13780 <__assert_fail@plt+0x1f34>
   135fc:	ldr	r0, [fp, #-16]
   13600:	bl	11840 <strspn@plt>
   13604:	mov	r2, r0
   13608:	ldr	r3, [fp, #-16]
   1360c:	add	r3, r3, r2
   13610:	ldrb	r3, [r3]
   13614:	cmp	r3, #0
   13618:	bne	13698 <__assert_fail@plt+0x1e4c>
   1361c:	b	1362c <__assert_fail@plt+0x1de0>
   13620:	nop			; (mov r0, r0)
   13624:	b	1362c <__assert_fail@plt+0x1de0>
   13628:	nop			; (mov r0, r0)
   1362c:	ldr	r3, [fp, #-16]
   13630:	str	r3, [fp, #-12]
   13634:	ldr	r3, [fp, #-12]
   13638:	ldrb	r3, [r3]
   1363c:	cmp	r3, #0
   13640:	bne	12f74 <__assert_fail@plt+0x1728>
   13644:	b	1364c <__assert_fail@plt+0x1e00>
   13648:	nop			; (mov r0, r0)
   1364c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13650:	add	r3, r3, #1
   13654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13658:	add	r2, r2, r3
   1365c:	ldr	r3, [fp, #-8]
   13660:	cmp	r2, r3
   13664:	bcs	13688 <__assert_fail@plt+0x1e3c>
   13668:	ldr	r3, [fp, #-8]
   1366c:	sub	r3, r3, #1
   13670:	ldrb	r3, [r3]
   13674:	cmp	r3, #47	; 0x2f
   13678:	bne	13688 <__assert_fail@plt+0x1e3c>
   1367c:	ldr	r3, [fp, #-8]
   13680:	sub	r3, r3, #1
   13684:	str	r3, [fp, #-8]
   13688:	mov	r3, #0
   1368c:	strb	r3, [fp, #-26]	; 0xffffffe6
   13690:	b	13698 <__assert_fail@plt+0x1e4c>
   13694:	nop			; (mov r0, r0)
   13698:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1369c:	cmp	r3, #0
   136a0:	beq	136b0 <__assert_fail@plt+0x1e64>
   136a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   136a8:	mov	r0, r3
   136ac:	bl	17d64 <__assert_fail@plt+0x6518>
   136b0:	sub	r3, fp, #1136	; 0x470
   136b4:	sub	r3, r3, #4
   136b8:	sub	r3, r3, #8
   136bc:	mov	r0, r3
   136c0:	bl	12a90 <__assert_fail@plt+0x1244>
   136c4:	sub	r3, fp, #2176	; 0x880
   136c8:	sub	r3, r3, #4
   136cc:	mov	r0, r3
   136d0:	bl	12a90 <__assert_fail@plt+0x1244>
   136d4:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   136d8:	cmp	r3, #0
   136dc:	beq	136f0 <__assert_fail@plt+0x1ea4>
   136e0:	ldr	r0, [fp, #-2296]	; 0xfffff708
   136e4:	bl	12a90 <__assert_fail@plt+0x1244>
   136e8:	mov	r3, #0
   136ec:	b	13770 <__assert_fail@plt+0x1f24>
   136f0:	ldr	r3, [fp, #-8]
   136f4:	add	r2, r3, #1
   136f8:	str	r2, [fp, #-8]
   136fc:	mov	r2, #0
   13700:	strb	r2, [r3]
   13704:	ldr	r2, [fp, #-8]
   13708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1370c:	sub	r3, r2, r3
   13710:	mov	r2, r3
   13714:	ldr	r3, [fp, #-2296]	; 0xfffff708
   13718:	str	r3, [fp, #-104]	; 0xffffff98
   1371c:	str	r2, [fp, #-108]	; 0xffffff94
   13720:	ldr	r1, [fp, #-108]	; 0xffffff94
   13724:	ldr	r0, [fp, #-104]	; 0xffffff98
   13728:	bl	1c10c <lchmod@@Base+0x3368>
   1372c:	str	r0, [fp, #-112]	; 0xffffff90
   13730:	ldr	r3, [fp, #-112]	; 0xffffff90
   13734:	cmp	r3, #0
   13738:	movne	r3, #1
   1373c:	moveq	r3, #0
   13740:	uxtb	r3, r3
   13744:	cmp	r3, #0
   13748:	beq	13754 <__assert_fail@plt+0x1f08>
   1374c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13750:	b	13758 <__assert_fail@plt+0x1f0c>
   13754:	mov	r3, #0
   13758:	str	r3, [fp, #-84]	; 0xffffffac
   1375c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13760:	cmp	r3, #0
   13764:	bne	1376c <__assert_fail@plt+0x1f20>
   13768:	bl	1d958 <lchmod@@Base+0x4bb4>
   1376c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13770:	mov	r0, r3
   13774:	sub	sp, fp, #4
   13778:	pop	{fp, pc}
   1377c:	andeq	r0, r2, r4, asr #3
   13780:	andeq	r0, r2, r8, asr #3
   13784:	push	{fp, lr}
   13788:	add	fp, sp, #4
   1378c:	sub	sp, sp, #1040	; 0x410
   13790:	str	r0, [fp, #-1040]	; 0xfffffbf0
   13794:	str	r1, [fp, #-1044]	; 0xfffffbec
   13798:	sub	r3, fp, #1024	; 0x400
   1379c:	sub	r3, r3, #4
   137a0:	sub	r3, r3, #8
   137a4:	mov	r2, r3
   137a8:	ldr	r1, [fp, #-1044]	; 0xfffffbec
   137ac:	ldr	r0, [fp, #-1040]	; 0xfffffbf0
   137b0:	bl	12d48 <__assert_fail@plt+0x14fc>
   137b4:	mov	r3, r0
   137b8:	mov	r0, r3
   137bc:	sub	sp, fp, #4
   137c0:	pop	{fp, pc}
   137c4:	push	{fp}		; (str fp, [sp, #-4]!)
   137c8:	add	fp, sp, #0
   137cc:	sub	sp, sp, #12
   137d0:	str	r0, [fp, #-8]
   137d4:	ldr	r2, [pc, #20]	; 137f0 <__assert_fail@plt+0x1fa4>
   137d8:	ldr	r3, [fp, #-8]
   137dc:	str	r3, [r2]
   137e0:	nop			; (mov r0, r0)
   137e4:	add	sp, fp, #0
   137e8:	pop	{fp}		; (ldr fp, [sp], #4)
   137ec:	bx	lr
   137f0:	andeq	r1, r3, r8, ror #3
   137f4:	push	{fp}		; (str fp, [sp, #-4]!)
   137f8:	add	fp, sp, #0
   137fc:	sub	sp, sp, #12
   13800:	mov	r3, r0
   13804:	strb	r3, [fp, #-5]
   13808:	ldr	r2, [pc, #20]	; 13824 <__assert_fail@plt+0x1fd8>
   1380c:	ldrb	r3, [fp, #-5]
   13810:	strb	r3, [r2]
   13814:	nop			; (mov r0, r0)
   13818:	add	sp, fp, #0
   1381c:	pop	{fp}		; (ldr fp, [sp], #4)
   13820:	bx	lr
   13824:	andeq	r1, r3, ip, ror #3
   13828:	push	{r4, fp, lr}
   1382c:	add	fp, sp, #8
   13830:	sub	sp, sp, #20
   13834:	ldr	r3, [pc, #256]	; 1393c <__assert_fail@plt+0x20f0>
   13838:	ldr	r3, [r3]
   1383c:	mov	r0, r3
   13840:	bl	1e1b8 <lchmod@@Base+0x5414>
   13844:	mov	r3, r0
   13848:	cmp	r3, #0
   1384c:	beq	13904 <__assert_fail@plt+0x20b8>
   13850:	ldr	r3, [pc, #232]	; 13940 <__assert_fail@plt+0x20f4>
   13854:	ldrb	r3, [r3]
   13858:	eor	r3, r3, #1
   1385c:	uxtb	r3, r3
   13860:	cmp	r3, #0
   13864:	bne	1387c <__assert_fail@plt+0x2030>
   13868:	bl	116c0 <__errno_location@plt>
   1386c:	mov	r3, r0
   13870:	ldr	r3, [r3]
   13874:	cmp	r3, #32
   13878:	beq	13904 <__assert_fail@plt+0x20b8>
   1387c:	ldr	r0, [pc, #192]	; 13944 <__assert_fail@plt+0x20f8>
   13880:	bl	1166c <gettext@plt>
   13884:	str	r0, [fp, #-16]
   13888:	ldr	r3, [pc, #184]	; 13948 <__assert_fail@plt+0x20fc>
   1388c:	ldr	r3, [r3]
   13890:	cmp	r3, #0
   13894:	beq	138d8 <__assert_fail@plt+0x208c>
   13898:	bl	116c0 <__errno_location@plt>
   1389c:	mov	r3, r0
   138a0:	ldr	r4, [r3]
   138a4:	ldr	r3, [pc, #156]	; 13948 <__assert_fail@plt+0x20fc>
   138a8:	ldr	r3, [r3]
   138ac:	mov	r0, r3
   138b0:	bl	1be10 <lchmod@@Base+0x306c>
   138b4:	mov	r2, r0
   138b8:	ldr	r3, [fp, #-16]
   138bc:	str	r3, [sp]
   138c0:	mov	r3, r2
   138c4:	ldr	r2, [pc, #128]	; 1394c <__assert_fail@plt+0x2100>
   138c8:	mov	r1, r4
   138cc:	mov	r0, #0
   138d0:	bl	115d0 <error@plt>
   138d4:	b	138f4 <__assert_fail@plt+0x20a8>
   138d8:	bl	116c0 <__errno_location@plt>
   138dc:	mov	r3, r0
   138e0:	ldr	r1, [r3]
   138e4:	ldr	r3, [fp, #-16]
   138e8:	ldr	r2, [pc, #96]	; 13950 <__assert_fail@plt+0x2104>
   138ec:	mov	r0, #0
   138f0:	bl	115d0 <error@plt>
   138f4:	ldr	r3, [pc, #88]	; 13954 <__assert_fail@plt+0x2108>
   138f8:	ldr	r3, [r3]
   138fc:	mov	r0, r3
   13900:	bl	114c8 <_exit@plt>
   13904:	ldr	r3, [pc, #76]	; 13958 <__assert_fail@plt+0x210c>
   13908:	ldr	r3, [r3]
   1390c:	mov	r0, r3
   13910:	bl	1e1b8 <lchmod@@Base+0x5414>
   13914:	mov	r3, r0
   13918:	cmp	r3, #0
   1391c:	beq	13930 <__assert_fail@plt+0x20e4>
   13920:	ldr	r3, [pc, #44]	; 13954 <__assert_fail@plt+0x2108>
   13924:	ldr	r3, [r3]
   13928:	mov	r0, r3
   1392c:	bl	114c8 <_exit@plt>
   13930:	nop			; (mov r0, r0)
   13934:	sub	sp, fp, #8
   13938:	pop	{r4, fp, pc}
   1393c:	ldrdeq	r1, [r3], -ip
   13940:	andeq	r1, r3, ip, ror #3
   13944:	andeq	r0, r2, ip, asr #3
   13948:	andeq	r1, r3, r8, ror #3
   1394c:	ldrdeq	r0, [r2], -r8
   13950:	andeq	r0, r2, r0, ror #3
   13954:	andeq	r1, r3, r4, lsl #3
   13958:	ldrdeq	r1, [r3], -r8
   1395c:	push	{fp, lr}
   13960:	add	fp, sp, #4
   13964:	sub	sp, sp, #16
   13968:	str	r0, [fp, #-16]
   1396c:	ldr	r0, [fp, #-16]
   13970:	bl	13a60 <__assert_fail@plt+0x2214>
   13974:	mov	r3, r0
   13978:	str	r3, [fp, #-8]
   1397c:	ldr	r3, [fp, #-8]
   13980:	cmp	r3, #0
   13984:	bne	1398c <__assert_fail@plt+0x2140>
   13988:	bl	1d958 <lchmod@@Base+0x4bb4>
   1398c:	ldr	r3, [fp, #-8]
   13990:	mov	r0, r3
   13994:	sub	sp, fp, #4
   13998:	pop	{fp, pc}
   1399c:	push	{fp, lr}
   139a0:	add	fp, sp, #4
   139a4:	sub	sp, sp, #16
   139a8:	str	r0, [fp, #-16]
   139ac:	mov	r3, #0
   139b0:	str	r3, [fp, #-12]
   139b4:	ldr	r3, [fp, #-12]
   139b8:	cmp	r3, #0
   139bc:	bne	139e0 <__assert_fail@plt+0x2194>
   139c0:	ldr	r3, [fp, #-16]
   139c4:	ldrb	r3, [r3]
   139c8:	cmp	r3, #47	; 0x2f
   139cc:	bne	139d8 <__assert_fail@plt+0x218c>
   139d0:	mov	r3, #1
   139d4:	b	139e4 <__assert_fail@plt+0x2198>
   139d8:	mov	r3, #0
   139dc:	b	139e4 <__assert_fail@plt+0x2198>
   139e0:	mov	r3, #0
   139e4:	ldr	r2, [fp, #-12]
   139e8:	add	r3, r2, r3
   139ec:	str	r3, [fp, #-12]
   139f0:	ldr	r0, [fp, #-16]
   139f4:	bl	1dcf0 <lchmod@@Base+0x4f4c>
   139f8:	mov	r3, r0
   139fc:	mov	r2, r3
   13a00:	ldr	r3, [fp, #-16]
   13a04:	sub	r3, r2, r3
   13a08:	str	r3, [fp, #-8]
   13a0c:	b	13a38 <__assert_fail@plt+0x21ec>
   13a10:	ldr	r3, [fp, #-8]
   13a14:	sub	r3, r3, #1
   13a18:	ldr	r2, [fp, #-16]
   13a1c:	add	r3, r2, r3
   13a20:	ldrb	r3, [r3]
   13a24:	cmp	r3, #47	; 0x2f
   13a28:	bne	13a4c <__assert_fail@plt+0x2200>
   13a2c:	ldr	r3, [fp, #-8]
   13a30:	sub	r3, r3, #1
   13a34:	str	r3, [fp, #-8]
   13a38:	ldr	r2, [fp, #-12]
   13a3c:	ldr	r3, [fp, #-8]
   13a40:	cmp	r2, r3
   13a44:	bcc	13a10 <__assert_fail@plt+0x21c4>
   13a48:	b	13a50 <__assert_fail@plt+0x2204>
   13a4c:	nop			; (mov r0, r0)
   13a50:	ldr	r3, [fp, #-8]
   13a54:	mov	r0, r3
   13a58:	sub	sp, fp, #4
   13a5c:	pop	{fp, pc}
   13a60:	push	{fp, lr}
   13a64:	add	fp, sp, #4
   13a68:	sub	sp, sp, #24
   13a6c:	str	r0, [fp, #-24]	; 0xffffffe8
   13a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a74:	bl	1399c <__assert_fail@plt+0x2150>
   13a78:	str	r0, [fp, #-8]
   13a7c:	ldr	r3, [fp, #-8]
   13a80:	cmp	r3, #0
   13a84:	moveq	r3, #1
   13a88:	movne	r3, #0
   13a8c:	strb	r3, [fp, #-9]
   13a90:	ldrb	r2, [fp, #-9]
   13a94:	ldr	r3, [fp, #-8]
   13a98:	add	r3, r2, r3
   13a9c:	add	r3, r3, #1
   13aa0:	mov	r0, r3
   13aa4:	bl	1db78 <lchmod@@Base+0x4dd4>
   13aa8:	mov	r3, r0
   13aac:	str	r3, [fp, #-16]
   13ab0:	ldr	r3, [fp, #-16]
   13ab4:	cmp	r3, #0
   13ab8:	bne	13ac4 <__assert_fail@plt+0x2278>
   13abc:	mov	r3, #0
   13ac0:	b	13b14 <__assert_fail@plt+0x22c8>
   13ac4:	ldr	r2, [fp, #-8]
   13ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13acc:	ldr	r0, [fp, #-16]
   13ad0:	bl	114d4 <memcpy@plt>
   13ad4:	ldrb	r3, [fp, #-9]
   13ad8:	cmp	r3, #0
   13adc:	beq	13afc <__assert_fail@plt+0x22b0>
   13ae0:	ldr	r3, [fp, #-8]
   13ae4:	add	r2, r3, #1
   13ae8:	str	r2, [fp, #-8]
   13aec:	ldr	r2, [fp, #-16]
   13af0:	add	r3, r2, r3
   13af4:	mov	r2, #46	; 0x2e
   13af8:	strb	r2, [r3]
   13afc:	ldr	r2, [fp, #-16]
   13b00:	ldr	r3, [fp, #-8]
   13b04:	add	r3, r2, r3
   13b08:	mov	r2, #0
   13b0c:	strb	r2, [r3]
   13b10:	ldr	r3, [fp, #-16]
   13b14:	mov	r0, r3
   13b18:	sub	sp, fp, #4
   13b1c:	pop	{fp, pc}
   13b20:	push	{fp, lr}
   13b24:	add	fp, sp, #4
   13b28:	sub	sp, sp, #24
   13b2c:	str	r0, [fp, #-16]
   13b30:	str	r1, [fp, #-20]	; 0xffffffec
   13b34:	str	r2, [fp, #-24]	; 0xffffffe8
   13b38:	ldr	r3, [fp, #-16]
   13b3c:	cmp	r3, #0
   13b40:	beq	13bc8 <__assert_fail@plt+0x237c>
   13b44:	mov	r0, #24
   13b48:	bl	1ce3c <lchmod@@Base+0x4098>
   13b4c:	mov	r3, r0
   13b50:	str	r3, [fp, #-8]
   13b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b58:	bl	1d91c <lchmod@@Base+0x4b78>
   13b5c:	mov	r3, r0
   13b60:	mov	r2, r3
   13b64:	ldr	r3, [fp, #-8]
   13b68:	str	r2, [r3]
   13b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b70:	ldrd	r2, [r3, #96]	; 0x60
   13b74:	ldr	r1, [fp, #-8]
   13b78:	strd	r2, [r1, #8]
   13b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b80:	ldrd	r2, [r3]
   13b84:	ldr	r1, [fp, #-8]
   13b88:	strd	r2, [r1, #16]
   13b8c:	ldr	r1, [fp, #-8]
   13b90:	ldr	r0, [fp, #-16]
   13b94:	bl	187d0 <__assert_fail@plt+0x6f84>
   13b98:	str	r0, [fp, #-12]
   13b9c:	ldr	r3, [fp, #-12]
   13ba0:	cmp	r3, #0
   13ba4:	bne	13bac <__assert_fail@plt+0x2360>
   13ba8:	bl	1d958 <lchmod@@Base+0x4bb4>
   13bac:	ldr	r2, [fp, #-12]
   13bb0:	ldr	r3, [fp, #-8]
   13bb4:	cmp	r2, r3
   13bb8:	beq	13bcc <__assert_fail@plt+0x2380>
   13bbc:	ldr	r0, [fp, #-8]
   13bc0:	bl	18b54 <__assert_fail@plt+0x7308>
   13bc4:	b	13bcc <__assert_fail@plt+0x2380>
   13bc8:	nop			; (mov r0, r0)
   13bcc:	sub	sp, fp, #4
   13bd0:	pop	{fp, pc}
   13bd4:	push	{fp, lr}
   13bd8:	add	fp, sp, #4
   13bdc:	sub	sp, sp, #40	; 0x28
   13be0:	str	r0, [fp, #-32]	; 0xffffffe0
   13be4:	str	r1, [fp, #-36]	; 0xffffffdc
   13be8:	str	r2, [fp, #-40]	; 0xffffffd8
   13bec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bf0:	cmp	r3, #0
   13bf4:	bne	13c00 <__assert_fail@plt+0x23b4>
   13bf8:	mov	r3, #0
   13bfc:	b	13c44 <__assert_fail@plt+0x23f8>
   13c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13c04:	str	r3, [fp, #-28]	; 0xffffffe4
   13c08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13c0c:	ldrd	r2, [r3, #96]	; 0x60
   13c10:	strd	r2, [fp, #-20]	; 0xffffffec
   13c14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13c18:	ldrd	r2, [r3]
   13c1c:	strd	r2, [fp, #-12]
   13c20:	sub	r3, fp, #28
   13c24:	mov	r1, r3
   13c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c2c:	bl	1723c <__assert_fail@plt+0x59f0>
   13c30:	mov	r3, r0
   13c34:	cmp	r3, #0
   13c38:	movne	r3, #1
   13c3c:	moveq	r3, #0
   13c40:	uxtb	r3, r3
   13c44:	mov	r0, r3
   13c48:	sub	sp, fp, #4
   13c4c:	pop	{fp, pc}
   13c50:	push	{r4, fp, lr}
   13c54:	add	fp, sp, #8
   13c58:	sub	sp, sp, #20
   13c5c:	str	r0, [fp, #-24]	; 0xffffffe8
   13c60:	bl	116c0 <__errno_location@plt>
   13c64:	mov	r3, r0
   13c68:	ldr	r3, [r3]
   13c6c:	str	r3, [fp, #-20]	; 0xffffffec
   13c70:	bl	116c0 <__errno_location@plt>
   13c74:	mov	r3, r0
   13c78:	ldr	r3, [r3]
   13c7c:	str	r3, [fp, #-16]
   13c80:	bl	116c0 <__errno_location@plt>
   13c84:	mov	r2, r0
   13c88:	mov	r3, #0
   13c8c:	str	r3, [r2]
   13c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c94:	bl	114b0 <free@plt>
   13c98:	bl	116c0 <__errno_location@plt>
   13c9c:	mov	r4, r0
   13ca0:	bl	116c0 <__errno_location@plt>
   13ca4:	mov	r3, r0
   13ca8:	ldr	r3, [r3]
   13cac:	cmp	r3, #0
   13cb0:	moveq	r3, #1
   13cb4:	movne	r3, #0
   13cb8:	uxtb	r3, r3
   13cbc:	lsl	r3, r3, #2
   13cc0:	sub	r2, fp, #12
   13cc4:	add	r3, r2, r3
   13cc8:	ldr	r3, [r3, #-8]
   13ccc:	str	r3, [r4]
   13cd0:	nop			; (mov r0, r0)
   13cd4:	sub	sp, fp, #8
   13cd8:	pop	{r4, fp, pc}
   13cdc:	push	{fp}		; (str fp, [sp, #-4]!)
   13ce0:	add	fp, sp, #0
   13ce4:	sub	sp, sp, #20
   13ce8:	str	r0, [fp, #-16]
   13cec:	str	r1, [fp, #-20]	; 0xffffffec
   13cf0:	ldr	r3, [fp, #-16]
   13cf4:	str	r3, [fp, #-8]
   13cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cfc:	str	r3, [fp, #-12]
   13d00:	ldr	r3, [fp, #-8]
   13d04:	ldrd	r0, [r3, #8]
   13d08:	ldr	r3, [fp, #-12]
   13d0c:	ldrd	r2, [r3, #8]
   13d10:	cmp	r1, r3
   13d14:	cmpeq	r0, r2
   13d18:	bne	13d40 <__assert_fail@plt+0x24f4>
   13d1c:	ldr	r3, [fp, #-8]
   13d20:	ldrd	r0, [r3]
   13d24:	ldr	r3, [fp, #-12]
   13d28:	ldrd	r2, [r3]
   13d2c:	cmp	r1, r3
   13d30:	cmpeq	r0, r2
   13d34:	bne	13d40 <__assert_fail@plt+0x24f4>
   13d38:	mov	r3, #1
   13d3c:	b	13d44 <__assert_fail@plt+0x24f8>
   13d40:	mov	r3, #0
   13d44:	and	r3, r3, #1
   13d48:	uxtb	r3, r3
   13d4c:	mov	r0, r3
   13d50:	add	sp, fp, #0
   13d54:	pop	{fp}		; (ldr fp, [sp], #4)
   13d58:	bx	lr
   13d5c:	push	{fp, lr}
   13d60:	add	fp, sp, #4
   13d64:	sub	sp, sp, #16
   13d68:	str	r0, [fp, #-16]
   13d6c:	str	r1, [fp, #-20]	; 0xffffffec
   13d70:	ldr	r3, [fp, #-16]
   13d74:	str	r3, [fp, #-8]
   13d78:	ldr	r3, [fp, #-8]
   13d7c:	ldrd	r0, [r3, #8]
   13d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d84:	mov	r2, r3
   13d88:	mov	r3, #0
   13d8c:	bl	1f9a0 <lchmod@@Base+0x6bfc>
   13d90:	mov	r3, r2
   13d94:	mov	r0, r3
   13d98:	sub	sp, fp, #4
   13d9c:	pop	{fp, pc}
   13da0:	push	{fp, lr}
   13da4:	add	fp, sp, #4
   13da8:	sub	sp, sp, #16
   13dac:	str	r0, [fp, #-8]
   13db0:	ldr	r3, [fp, #-8]
   13db4:	ldr	r2, [r3, #48]	; 0x30
   13db8:	ldr	r3, [pc, #156]	; 13e5c <__assert_fail@plt+0x2610>
   13dbc:	and	r3, r3, r2
   13dc0:	cmp	r3, #0
   13dc4:	beq	13e0c <__assert_fail@plt+0x25c0>
   13dc8:	ldr	r3, [pc, #144]	; 13e60 <__assert_fail@plt+0x2614>
   13dcc:	str	r3, [sp]
   13dd0:	ldr	r3, [pc, #140]	; 13e64 <__assert_fail@plt+0x2618>
   13dd4:	ldr	r2, [pc, #140]	; 13e68 <__assert_fail@plt+0x261c>
   13dd8:	mov	r1, #0
   13ddc:	mov	r0, #31
   13de0:	bl	17a88 <__assert_fail@plt+0x623c>
   13de4:	mov	r3, r0
   13de8:	mov	r2, r3
   13dec:	ldr	r3, [fp, #-8]
   13df0:	str	r2, [r3, #56]	; 0x38
   13df4:	ldr	r3, [fp, #-8]
   13df8:	ldr	r3, [r3, #56]	; 0x38
   13dfc:	cmp	r3, #0
   13e00:	bne	13e4c <__assert_fail@plt+0x2600>
   13e04:	mov	r3, #0
   13e08:	b	13e50 <__assert_fail@plt+0x2604>
   13e0c:	mov	r0, #32
   13e10:	bl	1db78 <lchmod@@Base+0x4dd4>
   13e14:	mov	r3, r0
   13e18:	mov	r2, r3
   13e1c:	ldr	r3, [fp, #-8]
   13e20:	str	r2, [r3, #56]	; 0x38
   13e24:	ldr	r3, [fp, #-8]
   13e28:	ldr	r3, [r3, #56]	; 0x38
   13e2c:	cmp	r3, #0
   13e30:	bne	13e3c <__assert_fail@plt+0x25f0>
   13e34:	mov	r3, #0
   13e38:	b	13e50 <__assert_fail@plt+0x2604>
   13e3c:	ldr	r3, [fp, #-8]
   13e40:	ldr	r3, [r3, #56]	; 0x38
   13e44:	mov	r0, r3
   13e48:	bl	1e2dc <lchmod@@Base+0x5538>
   13e4c:	mov	r3, #1
   13e50:	mov	r0, r3
   13e54:	sub	sp, fp, #4
   13e58:	pop	{fp, pc}
   13e5c:	andeq	r0, r0, r2, lsl #2
   13e60:	andeq	r3, r1, r0, asr ip
   13e64:	ldrdeq	r3, [r1], -ip
   13e68:	andeq	r3, r1, ip, asr sp
   13e6c:	push	{fp, lr}
   13e70:	add	fp, sp, #4
   13e74:	sub	sp, sp, #24
   13e78:	str	r0, [fp, #-24]	; 0xffffffe8
   13e7c:	str	r1, [fp, #-28]	; 0xffffffe4
   13e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e84:	ldr	r2, [r3, #48]	; 0x30
   13e88:	ldr	r3, [pc, #280]	; 13fa8 <__assert_fail@plt+0x275c>
   13e8c:	and	r3, r3, r2
   13e90:	cmp	r3, #0
   13e94:	beq	13f58 <__assert_fail@plt+0x270c>
   13e98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e9c:	add	r3, r3, #64	; 0x40
   13ea0:	str	r3, [fp, #-8]
   13ea4:	mov	r0, #24
   13ea8:	bl	1db78 <lchmod@@Base+0x4dd4>
   13eac:	mov	r3, r0
   13eb0:	str	r3, [fp, #-12]
   13eb4:	ldr	r3, [fp, #-12]
   13eb8:	cmp	r3, #0
   13ebc:	bne	13ec8 <__assert_fail@plt+0x267c>
   13ec0:	mov	r3, #0
   13ec4:	b	13f9c <__assert_fail@plt+0x2750>
   13ec8:	ldr	r3, [fp, #-8]
   13ecc:	ldrd	r2, [r3]
   13ed0:	ldr	r1, [fp, #-12]
   13ed4:	strd	r2, [r1]
   13ed8:	ldr	r3, [fp, #-8]
   13edc:	ldrd	r2, [r3, #96]	; 0x60
   13ee0:	ldr	r1, [fp, #-12]
   13ee4:	strd	r2, [r1, #8]
   13ee8:	ldr	r3, [fp, #-12]
   13eec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ef0:	str	r2, [r3, #16]
   13ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ef8:	ldr	r3, [r3, #56]	; 0x38
   13efc:	ldr	r1, [fp, #-12]
   13f00:	mov	r0, r3
   13f04:	bl	187d0 <__assert_fail@plt+0x6f84>
   13f08:	str	r0, [fp, #-16]
   13f0c:	ldr	r2, [fp, #-16]
   13f10:	ldr	r3, [fp, #-12]
   13f14:	cmp	r2, r3
   13f18:	beq	13f98 <__assert_fail@plt+0x274c>
   13f1c:	ldr	r0, [fp, #-12]
   13f20:	bl	13c50 <__assert_fail@plt+0x2404>
   13f24:	ldr	r3, [fp, #-16]
   13f28:	cmp	r3, #0
   13f2c:	bne	13f38 <__assert_fail@plt+0x26ec>
   13f30:	mov	r3, #0
   13f34:	b	13f9c <__assert_fail@plt+0x2750>
   13f38:	ldr	r3, [fp, #-16]
   13f3c:	ldr	r2, [r3, #16]
   13f40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f44:	str	r2, [r3]
   13f48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f4c:	mov	r2, #2
   13f50:	strh	r2, [r3, #56]	; 0x38
   13f54:	b	13f98 <__assert_fail@plt+0x274c>
   13f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f5c:	ldr	r2, [r3, #56]	; 0x38
   13f60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f64:	add	r3, r3, #64	; 0x40
   13f68:	mov	r1, r3
   13f6c:	mov	r0, r2
   13f70:	bl	1e31c <lchmod@@Base+0x5578>
   13f74:	mov	r3, r0
   13f78:	cmp	r3, #0
   13f7c:	beq	13f98 <__assert_fail@plt+0x274c>
   13f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f88:	str	r2, [r3]
   13f8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f90:	mov	r2, #2
   13f94:	strh	r2, [r3, #56]	; 0x38
   13f98:	mov	r3, #1
   13f9c:	mov	r0, r3
   13fa0:	sub	sp, fp, #4
   13fa4:	pop	{fp, pc}
   13fa8:	andeq	r0, r0, r2, lsl #2
   13fac:	push	{fp, lr}
   13fb0:	add	fp, sp, #4
   13fb4:	sub	sp, sp, #48	; 0x30
   13fb8:	str	r0, [fp, #-48]	; 0xffffffd0
   13fbc:	str	r1, [fp, #-52]	; 0xffffffcc
   13fc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13fc4:	add	r3, r3, #64	; 0x40
   13fc8:	str	r3, [fp, #-8]
   13fcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13fd0:	ldr	r2, [r3, #48]	; 0x30
   13fd4:	ldr	r3, [pc, #268]	; 140e8 <__assert_fail@plt+0x289c>
   13fd8:	and	r3, r3, r2
   13fdc:	cmp	r3, #0
   13fe0:	beq	14034 <__assert_fail@plt+0x27e8>
   13fe4:	ldr	r3, [fp, #-8]
   13fe8:	ldrd	r2, [r3]
   13fec:	strd	r2, [fp, #-44]	; 0xffffffd4
   13ff0:	ldr	r3, [fp, #-8]
   13ff4:	ldrd	r2, [r3, #96]	; 0x60
   13ff8:	strd	r2, [fp, #-36]	; 0xffffffdc
   13ffc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14000:	ldr	r3, [r3, #56]	; 0x38
   14004:	sub	r2, fp, #44	; 0x2c
   14008:	mov	r1, r2
   1400c:	mov	r0, r3
   14010:	bl	18834 <__assert_fail@plt+0x6fe8>
   14014:	str	r0, [fp, #-12]
   14018:	ldr	r3, [fp, #-12]
   1401c:	cmp	r3, #0
   14020:	bne	14028 <__assert_fail@plt+0x27dc>
   14024:	bl	117f8 <abort@plt>
   14028:	ldr	r0, [fp, #-12]
   1402c:	bl	13c50 <__assert_fail@plt+0x2404>
   14030:	b	140dc <__assert_fail@plt+0x2890>
   14034:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14038:	ldr	r3, [r3, #4]
   1403c:	str	r3, [fp, #-16]
   14040:	ldr	r3, [fp, #-16]
   14044:	cmp	r3, #0
   14048:	beq	140dc <__assert_fail@plt+0x2890>
   1404c:	ldr	r3, [fp, #-16]
   14050:	ldr	r3, [r3, #48]	; 0x30
   14054:	cmp	r3, #0
   14058:	blt	140dc <__assert_fail@plt+0x2890>
   1405c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14060:	ldr	r3, [r3, #56]	; 0x38
   14064:	ldrd	r2, [r3, #16]
   14068:	orrs	r3, r2, r3
   1406c:	bne	14074 <__assert_fail@plt+0x2828>
   14070:	bl	117f8 <abort@plt>
   14074:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14078:	ldr	r3, [r3, #56]	; 0x38
   1407c:	ldrd	r0, [r3]
   14080:	ldr	r3, [fp, #-8]
   14084:	ldrd	r2, [r3, #96]	; 0x60
   14088:	cmp	r1, r3
   1408c:	cmpeq	r0, r2
   14090:	bne	140dc <__assert_fail@plt+0x2890>
   14094:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14098:	ldr	r3, [r3, #56]	; 0x38
   1409c:	ldrd	r0, [r3, #8]
   140a0:	ldr	r3, [fp, #-8]
   140a4:	ldrd	r2, [r3]
   140a8:	cmp	r1, r3
   140ac:	cmpeq	r0, r2
   140b0:	bne	140dc <__assert_fail@plt+0x2890>
   140b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   140b8:	ldr	r1, [r3, #56]	; 0x38
   140bc:	ldr	r3, [fp, #-16]
   140c0:	ldrd	r2, [r3, #64]	; 0x40
   140c4:	strd	r2, [r1, #8]
   140c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   140cc:	ldr	r1, [r3, #56]	; 0x38
   140d0:	ldr	r3, [fp, #-16]
   140d4:	ldrd	r2, [r3, #160]	; 0xa0
   140d8:	strd	r2, [r1]
   140dc:	nop			; (mov r0, r0)
   140e0:	sub	sp, fp, #4
   140e4:	pop	{fp, pc}
   140e8:	andeq	r0, r0, r2, lsl #2
   140ec:	push	{fp, lr}
   140f0:	add	fp, sp, #4
   140f4:	sub	sp, sp, #8
   140f8:	str	r0, [fp, #-8]
   140fc:	ldr	r3, [fp, #-8]
   14100:	ldr	r2, [r3, #48]	; 0x30
   14104:	ldr	r3, [pc, #72]	; 14154 <__assert_fail@plt+0x2908>
   14108:	and	r3, r3, r2
   1410c:	cmp	r3, #0
   14110:	beq	14138 <__assert_fail@plt+0x28ec>
   14114:	ldr	r3, [fp, #-8]
   14118:	ldr	r3, [r3, #56]	; 0x38
   1411c:	cmp	r3, #0
   14120:	beq	14148 <__assert_fail@plt+0x28fc>
   14124:	ldr	r3, [fp, #-8]
   14128:	ldr	r3, [r3, #56]	; 0x38
   1412c:	mov	r0, r3
   14130:	bl	17d64 <__assert_fail@plt+0x6518>
   14134:	b	14148 <__assert_fail@plt+0x28fc>
   14138:	ldr	r3, [fp, #-8]
   1413c:	ldr	r3, [r3, #56]	; 0x38
   14140:	mov	r0, r3
   14144:	bl	13c50 <__assert_fail@plt+0x2404>
   14148:	nop			; (mov r0, r0)
   1414c:	sub	sp, fp, #4
   14150:	pop	{fp, pc}
   14154:	andeq	r0, r0, r2, lsl #2
   14158:	push	{fp, lr}
   1415c:	add	fp, sp, #4
   14160:	sub	sp, sp, #16
   14164:	str	r0, [fp, #-16]
   14168:	b	1418c <__assert_fail@plt+0x2940>
   1416c:	ldr	r0, [fp, #-16]
   14170:	bl	18d00 <__assert_fail@plt+0x74b4>
   14174:	str	r0, [fp, #-8]
   14178:	ldr	r3, [fp, #-8]
   1417c:	cmp	r3, #0
   14180:	blt	1418c <__assert_fail@plt+0x2940>
   14184:	ldr	r0, [fp, #-8]
   14188:	bl	11804 <close@plt>
   1418c:	ldr	r0, [fp, #-16]
   14190:	bl	18c18 <__assert_fail@plt+0x73cc>
   14194:	mov	r3, r0
   14198:	eor	r3, r3, #1
   1419c:	uxtb	r3, r3
   141a0:	cmp	r3, #0
   141a4:	bne	1416c <__assert_fail@plt+0x2920>
   141a8:	nop			; (mov r0, r0)
   141ac:	sub	sp, fp, #4
   141b0:	pop	{fp, pc}
   141b4:	push	{fp, lr}
   141b8:	add	fp, sp, #4
   141bc:	sub	sp, sp, #8
   141c0:	str	r0, [fp, #-8]
   141c4:	mov	r3, r1
   141c8:	strb	r3, [fp, #-9]
   141cc:	ldr	r3, [fp, #-8]
   141d0:	ldrh	r3, [r3, #56]	; 0x38
   141d4:	cmp	r3, #11
   141d8:	beq	141e0 <__assert_fail@plt+0x2994>
   141dc:	bl	117f8 <abort@plt>
   141e0:	ldrb	r3, [fp, #-9]
   141e4:	cmp	r3, #0
   141e8:	beq	141f8 <__assert_fail@plt+0x29ac>
   141ec:	mov	r2, #2
   141f0:	mov	r3, #0
   141f4:	b	14200 <__assert_fail@plt+0x29b4>
   141f8:	mov	r2, #1
   141fc:	mov	r3, #0
   14200:	ldr	r1, [fp, #-8]
   14204:	strd	r2, [r1, #112]	; 0x70
   14208:	nop			; (mov r0, r0)
   1420c:	sub	sp, fp, #4
   14210:	pop	{fp, pc}
   14214:	push	{fp, lr}
   14218:	add	fp, sp, #4
   1421c:	sub	sp, sp, #24
   14220:	str	r0, [fp, #-16]
   14224:	str	r1, [fp, #-20]	; 0xffffffec
   14228:	mov	r3, r2
   1422c:	strb	r3, [fp, #-21]	; 0xffffffeb
   14230:	ldr	r3, [fp, #-16]
   14234:	ldr	r3, [r3, #32]
   14238:	str	r3, [fp, #-8]
   1423c:	ldr	r2, [fp, #-8]
   14240:	ldr	r3, [fp, #-20]	; 0xffffffec
   14244:	cmp	r2, r3
   14248:	bne	1425c <__assert_fail@plt+0x2a10>
   1424c:	ldr	r3, [fp, #-8]
   14250:	cmn	r3, #100	; 0x64
   14254:	beq	1425c <__assert_fail@plt+0x2a10>
   14258:	bl	117f8 <abort@plt>
   1425c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   14260:	cmp	r3, #0
   14264:	beq	14298 <__assert_fail@plt+0x2a4c>
   14268:	ldr	r3, [fp, #-16]
   1426c:	add	r3, r3, #60	; 0x3c
   14270:	ldr	r1, [fp, #-8]
   14274:	mov	r0, r3
   14278:	bl	18c40 <__assert_fail@plt+0x73f4>
   1427c:	str	r0, [fp, #-12]
   14280:	ldr	r3, [fp, #-12]
   14284:	cmp	r3, #0
   14288:	blt	142c0 <__assert_fail@plt+0x2a74>
   1428c:	ldr	r0, [fp, #-12]
   14290:	bl	11804 <close@plt>
   14294:	b	142c0 <__assert_fail@plt+0x2a74>
   14298:	ldr	r3, [fp, #-16]
   1429c:	ldr	r3, [r3, #48]	; 0x30
   142a0:	and	r3, r3, #4
   142a4:	cmp	r3, #0
   142a8:	bne	142c0 <__assert_fail@plt+0x2a74>
   142ac:	ldr	r3, [fp, #-8]
   142b0:	cmp	r3, #0
   142b4:	blt	142c0 <__assert_fail@plt+0x2a74>
   142b8:	ldr	r0, [fp, #-8]
   142bc:	bl	11804 <close@plt>
   142c0:	ldr	r3, [fp, #-16]
   142c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   142c8:	str	r2, [r3, #32]
   142cc:	nop			; (mov r0, r0)
   142d0:	sub	sp, fp, #4
   142d4:	pop	{fp, pc}
   142d8:	push	{fp, lr}
   142dc:	add	fp, sp, #4
   142e0:	sub	sp, sp, #16
   142e4:	str	r0, [fp, #-16]
   142e8:	ldr	r3, [fp, #-16]
   142ec:	ldr	r3, [r3, #48]	; 0x30
   142f0:	and	r3, r3, #4
   142f4:	cmp	r3, #0
   142f8:	bne	14388 <__assert_fail@plt+0x2b3c>
   142fc:	ldr	r3, [fp, #-16]
   14300:	ldr	r3, [r3, #48]	; 0x30
   14304:	and	r3, r3, #512	; 0x200
   14308:	cmp	r3, #0
   1430c:	beq	14348 <__assert_fail@plt+0x2afc>
   14310:	ldr	r3, [fp, #-16]
   14314:	ldr	r3, [r3, #48]	; 0x30
   14318:	and	r3, r3, #512	; 0x200
   1431c:	cmp	r3, #0
   14320:	bne	14330 <__assert_fail@plt+0x2ae4>
   14324:	ldr	r3, [fp, #-16]
   14328:	ldr	r3, [r3, #28]
   1432c:	b	14334 <__assert_fail@plt+0x2ae8>
   14330:	mvn	r3, #99	; 0x63
   14334:	mov	r2, #1
   14338:	mov	r1, r3
   1433c:	ldr	r0, [fp, #-16]
   14340:	bl	14214 <__assert_fail@plt+0x29c8>
   14344:	b	14388 <__assert_fail@plt+0x2b3c>
   14348:	ldr	r3, [fp, #-16]
   1434c:	ldr	r3, [r3, #48]	; 0x30
   14350:	and	r3, r3, #512	; 0x200
   14354:	cmp	r3, #0
   14358:	bne	14368 <__assert_fail@plt+0x2b1c>
   1435c:	ldr	r3, [fp, #-16]
   14360:	ldr	r3, [r3, #28]
   14364:	b	1436c <__assert_fail@plt+0x2b20>
   14368:	mvn	r3, #99	; 0x63
   1436c:	mov	r0, r3
   14370:	bl	11780 <fchdir@plt>
   14374:	mov	r3, r0
   14378:	cmp	r3, #0
   1437c:	beq	14388 <__assert_fail@plt+0x2b3c>
   14380:	mov	r3, #1
   14384:	b	1438c <__assert_fail@plt+0x2b40>
   14388:	mov	r3, #0
   1438c:	str	r3, [fp, #-8]
   14390:	ldr	r3, [fp, #-16]
   14394:	add	r3, r3, #60	; 0x3c
   14398:	mov	r0, r3
   1439c:	bl	14158 <__assert_fail@plt+0x290c>
   143a0:	ldr	r3, [fp, #-8]
   143a4:	mov	r0, r3
   143a8:	sub	sp, fp, #4
   143ac:	pop	{fp, pc}
   143b0:	push	{fp, lr}
   143b4:	add	fp, sp, #4
   143b8:	sub	sp, sp, #16
   143bc:	str	r0, [fp, #-16]
   143c0:	str	r1, [fp, #-20]	; 0xffffffec
   143c4:	ldr	r3, [fp, #-16]
   143c8:	ldr	r3, [r3, #48]	; 0x30
   143cc:	and	r3, r3, #16
   143d0:	cmp	r3, #0
   143d4:	beq	143e0 <__assert_fail@plt+0x2b94>
   143d8:	ldr	r3, [pc, #96]	; 14440 <__assert_fail@plt+0x2bf4>
   143dc:	b	143e4 <__assert_fail@plt+0x2b98>
   143e0:	ldr	r3, [pc, #92]	; 14444 <__assert_fail@plt+0x2bf8>
   143e4:	str	r3, [fp, #-8]
   143e8:	ldr	r3, [fp, #-16]
   143ec:	ldr	r3, [r3, #48]	; 0x30
   143f0:	and	r3, r3, #512	; 0x200
   143f4:	cmp	r3, #0
   143f8:	beq	1441c <__assert_fail@plt+0x2bd0>
   143fc:	ldr	r3, [fp, #-16]
   14400:	ldr	r3, [r3, #32]
   14404:	ldr	r2, [fp, #-8]
   14408:	ldr	r1, [fp, #-20]	; 0xffffffec
   1440c:	mov	r0, r3
   14410:	bl	19878 <lchmod@@Base+0xad4>
   14414:	mov	r3, r0
   14418:	b	1442c <__assert_fail@plt+0x2be0>
   1441c:	ldr	r1, [fp, #-8]
   14420:	ldr	r0, [fp, #-20]	; 0xffffffec
   14424:	bl	1e8b0 <lchmod@@Base+0x5b0c>
   14428:	mov	r3, r0
   1442c:	str	r3, [fp, #-12]
   14430:	ldr	r3, [fp, #-12]
   14434:	mov	r0, r3
   14438:	sub	sp, fp, #4
   1443c:	pop	{fp, pc}
   14440:	andeq	ip, r8, r0, lsl #18
   14444:	andeq	r4, r8, r0, lsl #18
   14448:	push	{r4, r5, r6, r7, r8, fp, lr}
   1444c:	add	fp, sp, #24
   14450:	sub	sp, sp, #36	; 0x24
   14454:	str	r0, [fp, #-56]	; 0xffffffc8
   14458:	mov	r7, r1
   1445c:	str	r2, [fp, #-60]	; 0xffffffc4
   14460:	mov	r3, #0
   14464:	str	r3, [fp, #-32]	; 0xffffffe0
   14468:	mov	r3, #0
   1446c:	str	r3, [fp, #-36]	; 0xffffffdc
   14470:	bic	r3, r7, #4080	; 0xff0
   14474:	bic	r3, r3, #15
   14478:	cmp	r3, #0
   1447c:	beq	14498 <__assert_fail@plt+0x2c4c>
   14480:	bl	116c0 <__errno_location@plt>
   14484:	mov	r2, r0
   14488:	mov	r3, #22
   1448c:	str	r3, [r2]
   14490:	mov	r3, #0
   14494:	b	148ac <__assert_fail@plt+0x3060>
   14498:	and	r3, r7, #4
   1449c:	cmp	r3, #0
   144a0:	beq	144c8 <__assert_fail@plt+0x2c7c>
   144a4:	and	r3, r7, #512	; 0x200
   144a8:	cmp	r3, #0
   144ac:	beq	144c8 <__assert_fail@plt+0x2c7c>
   144b0:	bl	116c0 <__errno_location@plt>
   144b4:	mov	r2, r0
   144b8:	mov	r3, #22
   144bc:	str	r3, [r2]
   144c0:	mov	r3, #0
   144c4:	b	148ac <__assert_fail@plt+0x3060>
   144c8:	and	r3, r7, #18
   144cc:	cmp	r3, #0
   144d0:	bne	144ec <__assert_fail@plt+0x2ca0>
   144d4:	bl	116c0 <__errno_location@plt>
   144d8:	mov	r2, r0
   144dc:	mov	r3, #22
   144e0:	str	r3, [r2]
   144e4:	mov	r3, #0
   144e8:	b	148ac <__assert_fail@plt+0x3060>
   144ec:	mov	r1, #96	; 0x60
   144f0:	mov	r0, #1
   144f4:	bl	1dab4 <lchmod@@Base+0x4d10>
   144f8:	mov	r3, r0
   144fc:	mov	r4, r3
   14500:	cmp	r4, #0
   14504:	bne	14510 <__assert_fail@plt+0x2cc4>
   14508:	mov	r3, #0
   1450c:	b	148ac <__assert_fail@plt+0x3060>
   14510:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14514:	str	r3, [r4, #44]	; 0x2c
   14518:	str	r7, [r4, #48]	; 0x30
   1451c:	ldr	r3, [r4, #48]	; 0x30
   14520:	and	r3, r3, #2
   14524:	cmp	r3, #0
   14528:	beq	14544 <__assert_fail@plt+0x2cf8>
   1452c:	ldr	r3, [r4, #48]	; 0x30
   14530:	orr	r3, r3, #4
   14534:	str	r3, [r4, #48]	; 0x30
   14538:	ldr	r3, [r4, #48]	; 0x30
   1453c:	bic	r3, r3, #512	; 0x200
   14540:	str	r3, [r4, #48]	; 0x30
   14544:	mvn	r3, #99	; 0x63
   14548:	str	r3, [r4, #32]
   1454c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14550:	bl	16bbc <__assert_fail@plt+0x5370>
   14554:	str	r0, [fp, #-44]	; 0xffffffd4
   14558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1455c:	cmp	r3, #4096	; 0x1000
   14560:	movcs	r3, r3
   14564:	movcc	r3, #4096	; 0x1000
   14568:	mov	r1, r3
   1456c:	mov	r0, r4
   14570:	bl	16994 <__assert_fail@plt+0x5148>
   14574:	mov	r3, r0
   14578:	eor	r3, r3, #1
   1457c:	uxtb	r3, r3
   14580:	cmp	r3, #0
   14584:	bne	1489c <__assert_fail@plt+0x3050>
   14588:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1458c:	ldr	r3, [r3]
   14590:	cmp	r3, #0
   14594:	beq	145c4 <__assert_fail@plt+0x2d78>
   14598:	mov	r2, #0
   1459c:	ldr	r1, [pc, #788]	; 148b8 <__assert_fail@plt+0x306c>
   145a0:	mov	r0, r4
   145a4:	bl	16890 <__assert_fail@plt+0x5044>
   145a8:	str	r0, [fp, #-32]	; 0xffffffe0
   145ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145b0:	cmp	r3, #0
   145b4:	beq	14888 <__assert_fail@plt+0x303c>
   145b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145bc:	mvn	r2, #0
   145c0:	str	r2, [r3, #48]	; 0x30
   145c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   145c8:	cmp	r3, #0
   145cc:	beq	145e0 <__assert_fail@plt+0x2d94>
   145d0:	ldr	r3, [r4, #48]	; 0x30
   145d4:	and	r3, r3, #1024	; 0x400
   145d8:	cmp	r3, #0
   145dc:	beq	145e8 <__assert_fail@plt+0x2d9c>
   145e0:	mov	r3, #1
   145e4:	b	145ec <__assert_fail@plt+0x2da0>
   145e8:	mov	r3, #0
   145ec:	strb	r3, [fp, #-45]	; 0xffffffd3
   145f0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   145f4:	and	r3, r3, #1
   145f8:	strb	r3, [fp, #-45]	; 0xffffffd3
   145fc:	mov	r6, #0
   14600:	mov	r8, #0
   14604:	b	14764 <__assert_fail@plt+0x2f18>
   14608:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1460c:	ldr	r3, [r3]
   14610:	mov	r0, r3
   14614:	bl	11684 <strlen@plt>
   14618:	str	r0, [fp, #-40]	; 0xffffffd8
   1461c:	and	r3, r7, #2048	; 0x800
   14620:	cmp	r3, #0
   14624:	bne	14694 <__assert_fail@plt+0x2e48>
   14628:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1462c:	ldr	r3, [r3]
   14630:	str	r3, [fp, #-52]	; 0xffffffcc
   14634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14638:	cmp	r3, #2
   1463c:	bls	14694 <__assert_fail@plt+0x2e48>
   14640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14644:	sub	r3, r3, #1
   14648:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1464c:	add	r3, r2, r3
   14650:	ldrb	r3, [r3]
   14654:	cmp	r3, #47	; 0x2f
   14658:	bne	14694 <__assert_fail@plt+0x2e48>
   1465c:	b	1466c <__assert_fail@plt+0x2e20>
   14660:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14664:	sub	r3, r3, #1
   14668:	str	r3, [fp, #-40]	; 0xffffffd8
   1466c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14670:	cmp	r3, #1
   14674:	bls	14694 <__assert_fail@plt+0x2e48>
   14678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1467c:	sub	r3, r3, #2
   14680:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14684:	add	r3, r2, r3
   14688:	ldrb	r3, [r3]
   1468c:	cmp	r3, #47	; 0x2f
   14690:	beq	14660 <__assert_fail@plt+0x2e14>
   14694:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14698:	ldr	r3, [r3]
   1469c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146a0:	mov	r1, r3
   146a4:	mov	r0, r4
   146a8:	bl	16890 <__assert_fail@plt+0x5044>
   146ac:	mov	r5, r0
   146b0:	cmp	r5, #0
   146b4:	beq	14860 <__assert_fail@plt+0x3014>
   146b8:	mov	r3, #0
   146bc:	str	r3, [r5, #48]	; 0x30
   146c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146c4:	str	r3, [r5, #4]
   146c8:	add	r3, r5, #168	; 0xa8
   146cc:	str	r3, [r5, #24]
   146d0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   146d4:	cmp	r3, #0
   146d8:	beq	146fc <__assert_fail@plt+0x2eb0>
   146dc:	cmp	r6, #0
   146e0:	beq	146fc <__assert_fail@plt+0x2eb0>
   146e4:	mov	r3, #11
   146e8:	strh	r3, [r5, #56]	; 0x38
   146ec:	mov	r1, #1
   146f0:	mov	r0, r5
   146f4:	bl	141b4 <__assert_fail@plt+0x2968>
   146f8:	b	14714 <__assert_fail@plt+0x2ec8>
   146fc:	mov	r2, #0
   14700:	mov	r1, r5
   14704:	mov	r0, r4
   14708:	bl	16518 <__assert_fail@plt+0x4ccc>
   1470c:	mov	r3, r0
   14710:	strh	r3, [r5, #56]	; 0x38
   14714:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14718:	cmp	r3, #0
   1471c:	beq	1472c <__assert_fail@plt+0x2ee0>
   14720:	str	r6, [r5, #8]
   14724:	mov	r6, r5
   14728:	b	14754 <__assert_fail@plt+0x2f08>
   1472c:	mov	r3, #0
   14730:	str	r3, [r5, #8]
   14734:	cmp	r6, #0
   14738:	bne	14748 <__assert_fail@plt+0x2efc>
   1473c:	mov	r6, r5
   14740:	str	r6, [fp, #-36]	; 0xffffffdc
   14744:	b	14754 <__assert_fail@plt+0x2f08>
   14748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1474c:	str	r5, [r3, #8]
   14750:	str	r5, [fp, #-36]	; 0xffffffdc
   14754:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14758:	add	r3, r3, #4
   1475c:	str	r3, [fp, #-56]	; 0xffffffc8
   14760:	add	r8, r8, #1
   14764:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14768:	ldr	r3, [r3]
   1476c:	cmp	r3, #0
   14770:	bne	14608 <__assert_fail@plt+0x2dbc>
   14774:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14778:	cmp	r3, #0
   1477c:	beq	1479c <__assert_fail@plt+0x2f50>
   14780:	cmp	r8, #1
   14784:	bls	1479c <__assert_fail@plt+0x2f50>
   14788:	mov	r2, r8
   1478c:	mov	r1, r6
   14790:	mov	r0, r4
   14794:	bl	16748 <__assert_fail@plt+0x4efc>
   14798:	mov	r6, r0
   1479c:	mov	r2, #0
   147a0:	ldr	r1, [pc, #272]	; 148b8 <__assert_fail@plt+0x306c>
   147a4:	mov	r0, r4
   147a8:	bl	16890 <__assert_fail@plt+0x5044>
   147ac:	mov	r3, r0
   147b0:	str	r3, [r4]
   147b4:	ldr	r3, [r4]
   147b8:	cmp	r3, #0
   147bc:	beq	14868 <__assert_fail@plt+0x301c>
   147c0:	ldr	r3, [r4]
   147c4:	str	r6, [r3, #8]
   147c8:	ldr	r3, [r4]
   147cc:	mov	r2, #9
   147d0:	strh	r2, [r3, #56]	; 0x38
   147d4:	ldr	r3, [r4]
   147d8:	mov	r2, #1
   147dc:	str	r2, [r3, #48]	; 0x30
   147e0:	mov	r0, r4
   147e4:	bl	13da0 <__assert_fail@plt+0x2554>
   147e8:	mov	r3, r0
   147ec:	eor	r3, r3, #1
   147f0:	uxtb	r3, r3
   147f4:	cmp	r3, #0
   147f8:	bne	14870 <__assert_fail@plt+0x3024>
   147fc:	ldr	r3, [r4, #48]	; 0x30
   14800:	and	r3, r3, #4
   14804:	cmp	r3, #0
   14808:	bne	14848 <__assert_fail@plt+0x2ffc>
   1480c:	ldr	r3, [r4, #48]	; 0x30
   14810:	and	r3, r3, #512	; 0x200
   14814:	cmp	r3, #0
   14818:	bne	14848 <__assert_fail@plt+0x2ffc>
   1481c:	ldr	r1, [pc, #152]	; 148bc <__assert_fail@plt+0x3070>
   14820:	mov	r0, r4
   14824:	bl	143b0 <__assert_fail@plt+0x2b64>
   14828:	mov	r3, r0
   1482c:	str	r3, [r4, #28]
   14830:	ldr	r3, [r4, #28]
   14834:	cmp	r3, #0
   14838:	bge	14848 <__assert_fail@plt+0x2ffc>
   1483c:	ldr	r3, [r4, #48]	; 0x30
   14840:	orr	r3, r3, #4
   14844:	str	r3, [r4, #48]	; 0x30
   14848:	add	r3, r4, #60	; 0x3c
   1484c:	mvn	r1, #0
   14850:	mov	r0, r3
   14854:	bl	18b90 <__assert_fail@plt+0x7344>
   14858:	mov	r3, r4
   1485c:	b	148ac <__assert_fail@plt+0x3060>
   14860:	nop			; (mov r0, r0)
   14864:	b	14874 <__assert_fail@plt+0x3028>
   14868:	nop			; (mov r0, r0)
   1486c:	b	14874 <__assert_fail@plt+0x3028>
   14870:	nop			; (mov r0, r0)
   14874:	mov	r0, r6
   14878:	bl	1694c <__assert_fail@plt+0x5100>
   1487c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14880:	bl	13c50 <__assert_fail@plt+0x2404>
   14884:	b	1488c <__assert_fail@plt+0x3040>
   14888:	nop			; (mov r0, r0)
   1488c:	ldr	r3, [r4, #24]
   14890:	mov	r0, r3
   14894:	bl	13c50 <__assert_fail@plt+0x2404>
   14898:	b	148a0 <__assert_fail@plt+0x3054>
   1489c:	nop			; (mov r0, r0)
   148a0:	mov	r0, r4
   148a4:	bl	13c50 <__assert_fail@plt+0x2404>
   148a8:	mov	r3, #0
   148ac:	mov	r0, r3
   148b0:	sub	sp, fp, #24
   148b4:	pop	{r4, r5, r6, r7, r8, fp, pc}
   148b8:	andeq	r0, r2, r4, ror #3
   148bc:	andeq	r0, r2, r8, ror #3
   148c0:	push	{r4, r5, r6, fp, lr}
   148c4:	add	fp, sp, #16
   148c8:	sub	sp, sp, #12
   148cc:	str	r0, [fp, #-24]	; 0xffffffe8
   148d0:	mov	r4, r1
   148d4:	ldr	r3, [r4, #52]	; 0x34
   148d8:	str	r3, [r4, #40]	; 0x28
   148dc:	ldr	r6, [r4, #40]	; 0x28
   148e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148e4:	ldr	r3, [r3, #24]
   148e8:	add	r1, r4, #168	; 0xa8
   148ec:	add	r2, r6, #1
   148f0:	mov	r0, r3
   148f4:	bl	114a4 <memmove@plt>
   148f8:	add	r3, r4, #168	; 0xa8
   148fc:	mov	r1, #47	; 0x2f
   14900:	mov	r0, r3
   14904:	bl	1172c <strrchr@plt>
   14908:	mov	r5, r0
   1490c:	cmp	r5, #0
   14910:	beq	14958 <__assert_fail@plt+0x310c>
   14914:	add	r3, r4, #168	; 0xa8
   14918:	cmp	r3, r5
   1491c:	bne	14930 <__assert_fail@plt+0x30e4>
   14920:	add	r3, r5, #1
   14924:	ldrb	r3, [r3]
   14928:	cmp	r3, #0
   1492c:	beq	14958 <__assert_fail@plt+0x310c>
   14930:	add	r5, r5, #1
   14934:	mov	r0, r5
   14938:	bl	11684 <strlen@plt>
   1493c:	mov	r6, r0
   14940:	add	r3, r4, #168	; 0xa8
   14944:	add	r2, r6, #1
   14948:	mov	r1, r5
   1494c:	mov	r0, r3
   14950:	bl	114a4 <memmove@plt>
   14954:	str	r6, [r4, #52]	; 0x34
   14958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1495c:	ldr	r3, [r3, #24]
   14960:	str	r3, [r4, #28]
   14964:	ldr	r3, [r4, #28]
   14968:	str	r3, [r4, #24]
   1496c:	nop			; (mov r0, r0)
   14970:	sub	sp, fp, #16
   14974:	pop	{r4, r5, r6, fp, pc}
   14978:	push	{r4, r5, fp, lr}
   1497c:	add	fp, sp, #12
   14980:	sub	sp, sp, #16
   14984:	str	r0, [fp, #-24]	; 0xffffffe8
   14988:	mov	r3, #0
   1498c:	str	r3, [fp, #-16]
   14990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14994:	ldr	r3, [r3]
   14998:	cmp	r3, #0
   1499c:	beq	149e8 <__assert_fail@plt+0x319c>
   149a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149a4:	ldr	r4, [r3]
   149a8:	b	149d4 <__assert_fail@plt+0x3188>
   149ac:	mov	r5, r4
   149b0:	ldr	r3, [r4, #8]
   149b4:	cmp	r3, #0
   149b8:	beq	149c4 <__assert_fail@plt+0x3178>
   149bc:	ldr	r3, [r4, #8]
   149c0:	b	149c8 <__assert_fail@plt+0x317c>
   149c4:	ldr	r3, [r4, #4]
   149c8:	mov	r4, r3
   149cc:	mov	r0, r5
   149d0:	bl	13c50 <__assert_fail@plt+0x2404>
   149d4:	ldr	r3, [r4, #48]	; 0x30
   149d8:	cmp	r3, #0
   149dc:	bge	149ac <__assert_fail@plt+0x3160>
   149e0:	mov	r0, r4
   149e4:	bl	13c50 <__assert_fail@plt+0x2404>
   149e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149ec:	ldr	r3, [r3, #4]
   149f0:	cmp	r3, #0
   149f4:	beq	14a08 <__assert_fail@plt+0x31bc>
   149f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149fc:	ldr	r3, [r3, #4]
   14a00:	mov	r0, r3
   14a04:	bl	1694c <__assert_fail@plt+0x5100>
   14a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a0c:	ldr	r3, [r3, #8]
   14a10:	mov	r0, r3
   14a14:	bl	13c50 <__assert_fail@plt+0x2404>
   14a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a1c:	ldr	r3, [r3, #24]
   14a20:	mov	r0, r3
   14a24:	bl	13c50 <__assert_fail@plt+0x2404>
   14a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a2c:	ldr	r3, [r3, #48]	; 0x30
   14a30:	and	r3, r3, #512	; 0x200
   14a34:	cmp	r3, #0
   14a38:	beq	14a7c <__assert_fail@plt+0x3230>
   14a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a40:	ldr	r3, [r3, #32]
   14a44:	cmp	r3, #0
   14a48:	blt	14af4 <__assert_fail@plt+0x32a8>
   14a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a50:	ldr	r3, [r3, #32]
   14a54:	mov	r0, r3
   14a58:	bl	11804 <close@plt>
   14a5c:	mov	r3, r0
   14a60:	cmp	r3, #0
   14a64:	beq	14af4 <__assert_fail@plt+0x32a8>
   14a68:	bl	116c0 <__errno_location@plt>
   14a6c:	mov	r3, r0
   14a70:	ldr	r3, [r3]
   14a74:	str	r3, [fp, #-16]
   14a78:	b	14af4 <__assert_fail@plt+0x32a8>
   14a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a80:	ldr	r3, [r3, #48]	; 0x30
   14a84:	and	r3, r3, #4
   14a88:	cmp	r3, #0
   14a8c:	bne	14af4 <__assert_fail@plt+0x32a8>
   14a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a94:	ldr	r3, [r3, #28]
   14a98:	mov	r0, r3
   14a9c:	bl	11780 <fchdir@plt>
   14aa0:	mov	r3, r0
   14aa4:	cmp	r3, #0
   14aa8:	beq	14abc <__assert_fail@plt+0x3270>
   14aac:	bl	116c0 <__errno_location@plt>
   14ab0:	mov	r3, r0
   14ab4:	ldr	r3, [r3]
   14ab8:	str	r3, [fp, #-16]
   14abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ac0:	ldr	r3, [r3, #28]
   14ac4:	mov	r0, r3
   14ac8:	bl	11804 <close@plt>
   14acc:	mov	r3, r0
   14ad0:	cmp	r3, #0
   14ad4:	beq	14af4 <__assert_fail@plt+0x32a8>
   14ad8:	ldr	r3, [fp, #-16]
   14adc:	cmp	r3, #0
   14ae0:	bne	14af4 <__assert_fail@plt+0x32a8>
   14ae4:	bl	116c0 <__errno_location@plt>
   14ae8:	mov	r3, r0
   14aec:	ldr	r3, [r3]
   14af0:	str	r3, [fp, #-16]
   14af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14af8:	add	r3, r3, #60	; 0x3c
   14afc:	mov	r0, r3
   14b00:	bl	14158 <__assert_fail@plt+0x290c>
   14b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b08:	ldr	r3, [r3, #52]	; 0x34
   14b0c:	cmp	r3, #0
   14b10:	beq	14b24 <__assert_fail@plt+0x32d8>
   14b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b18:	ldr	r3, [r3, #52]	; 0x34
   14b1c:	mov	r0, r3
   14b20:	bl	17d64 <__assert_fail@plt+0x6518>
   14b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b28:	bl	140ec <__assert_fail@plt+0x28a0>
   14b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b30:	bl	13c50 <__assert_fail@plt+0x2404>
   14b34:	ldr	r3, [fp, #-16]
   14b38:	cmp	r3, #0
   14b3c:	beq	14b58 <__assert_fail@plt+0x330c>
   14b40:	bl	116c0 <__errno_location@plt>
   14b44:	mov	r2, r0
   14b48:	ldr	r3, [fp, #-16]
   14b4c:	str	r3, [r2]
   14b50:	mvn	r3, #0
   14b54:	b	14b5c <__assert_fail@plt+0x3310>
   14b58:	mov	r3, #0
   14b5c:	mov	r0, r3
   14b60:	sub	sp, fp, #12
   14b64:	pop	{r4, r5, fp, pc}
   14b68:	push	{fp, lr}
   14b6c:	add	fp, sp, #4
   14b70:	sub	sp, sp, #24
   14b74:	str	r0, [fp, #-24]	; 0xffffffe8
   14b78:	str	r1, [fp, #-28]	; 0xffffffe4
   14b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b80:	str	r3, [fp, #-8]
   14b84:	ldr	r3, [fp, #-8]
   14b88:	ldrd	r2, [r3]
   14b8c:	strd	r2, [fp, #-20]	; 0xffffffec
   14b90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b94:	mov	r2, r3
   14b98:	mov	r3, #0
   14b9c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14ba0:	bl	1f9a0 <lchmod@@Base+0x6bfc>
   14ba4:	mov	r3, r2
   14ba8:	mov	r0, r3
   14bac:	sub	sp, fp, #4
   14bb0:	pop	{fp, pc}
   14bb4:	push	{fp}		; (str fp, [sp, #-4]!)
   14bb8:	add	fp, sp, #0
   14bbc:	sub	sp, sp, #20
   14bc0:	str	r0, [fp, #-16]
   14bc4:	str	r1, [fp, #-20]	; 0xffffffec
   14bc8:	ldr	r3, [fp, #-16]
   14bcc:	str	r3, [fp, #-8]
   14bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bd4:	str	r3, [fp, #-12]
   14bd8:	ldr	r3, [fp, #-8]
   14bdc:	ldrd	r0, [r3]
   14be0:	ldr	r3, [fp, #-12]
   14be4:	ldrd	r2, [r3]
   14be8:	cmp	r1, r3
   14bec:	cmpeq	r0, r2
   14bf0:	moveq	r3, #1
   14bf4:	movne	r3, #0
   14bf8:	uxtb	r3, r3
   14bfc:	mov	r0, r3
   14c00:	add	sp, fp, #0
   14c04:	pop	{fp}		; (ldr fp, [sp], #4)
   14c08:	bx	lr
   14c0c:	push	{fp, lr}
   14c10:	add	fp, sp, #4
   14c14:	sub	sp, sp, #136	; 0x88
   14c18:	str	r0, [fp, #-128]	; 0xffffff80
   14c1c:	str	r1, [fp, #-132]	; 0xffffff7c
   14c20:	ldr	r3, [fp, #-128]	; 0xffffff80
   14c24:	ldr	r3, [r3, #44]	; 0x2c
   14c28:	str	r3, [fp, #-12]
   14c2c:	ldr	r3, [fp, #-12]
   14c30:	ldr	r3, [r3, #52]	; 0x34
   14c34:	str	r3, [fp, #-8]
   14c38:	ldr	r3, [fp, #-12]
   14c3c:	ldr	r3, [r3, #48]	; 0x30
   14c40:	and	r3, r3, #512	; 0x200
   14c44:	cmp	r3, #0
   14c48:	bne	14c54 <__assert_fail@plt+0x3408>
   14c4c:	mov	r3, #0
   14c50:	b	14d8c <__assert_fail@plt+0x3540>
   14c54:	ldr	r3, [fp, #-8]
   14c58:	cmp	r3, #0
   14c5c:	bne	14c98 <__assert_fail@plt+0x344c>
   14c60:	ldr	r3, [pc, #304]	; 14d98 <__assert_fail@plt+0x354c>
   14c64:	str	r3, [sp]
   14c68:	ldr	r3, [pc, #300]	; 14d9c <__assert_fail@plt+0x3550>
   14c6c:	ldr	r2, [pc, #300]	; 14da0 <__assert_fail@plt+0x3554>
   14c70:	mov	r1, #0
   14c74:	mov	r0, #13
   14c78:	bl	17a88 <__assert_fail@plt+0x623c>
   14c7c:	mov	r3, r0
   14c80:	mov	r2, r3
   14c84:	ldr	r3, [fp, #-12]
   14c88:	str	r2, [r3, #52]	; 0x34
   14c8c:	ldr	r3, [fp, #-12]
   14c90:	ldr	r3, [r3, #52]	; 0x34
   14c94:	str	r3, [fp, #-8]
   14c98:	ldr	r3, [fp, #-8]
   14c9c:	cmp	r3, #0
   14ca0:	beq	14cdc <__assert_fail@plt+0x3490>
   14ca4:	ldr	r3, [fp, #-128]	; 0xffffff80
   14ca8:	ldrd	r2, [r3, #64]	; 0x40
   14cac:	strd	r2, [fp, #-124]	; 0xffffff84
   14cb0:	sub	r3, fp, #124	; 0x7c
   14cb4:	mov	r1, r3
   14cb8:	ldr	r0, [fp, #-8]
   14cbc:	bl	1723c <__assert_fail@plt+0x59f0>
   14cc0:	str	r0, [fp, #-16]
   14cc4:	ldr	r3, [fp, #-16]
   14cc8:	cmp	r3, #0
   14ccc:	beq	14cdc <__assert_fail@plt+0x3490>
   14cd0:	ldr	r3, [fp, #-16]
   14cd4:	ldr	r3, [r3, #8]
   14cd8:	b	14d8c <__assert_fail@plt+0x3540>
   14cdc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   14ce0:	cmp	r3, #0
   14ce4:	blt	14d04 <__assert_fail@plt+0x34b8>
   14ce8:	sub	r3, fp, #108	; 0x6c
   14cec:	mov	r1, r3
   14cf0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14cf4:	bl	11420 <fstatfs64@plt>
   14cf8:	mov	r3, r0
   14cfc:	cmp	r3, #0
   14d00:	beq	14d0c <__assert_fail@plt+0x34c0>
   14d04:	mov	r3, #0
   14d08:	b	14d8c <__assert_fail@plt+0x3540>
   14d0c:	ldr	r3, [fp, #-8]
   14d10:	cmp	r3, #0
   14d14:	beq	14d88 <__assert_fail@plt+0x353c>
   14d18:	mov	r0, #16
   14d1c:	bl	1db78 <lchmod@@Base+0x4dd4>
   14d20:	mov	r3, r0
   14d24:	str	r3, [fp, #-20]	; 0xffffffec
   14d28:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d2c:	cmp	r3, #0
   14d30:	beq	14d88 <__assert_fail@plt+0x353c>
   14d34:	ldr	r3, [fp, #-128]	; 0xffffff80
   14d38:	ldrd	r2, [r3, #64]	; 0x40
   14d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d40:	strd	r2, [r1]
   14d44:	ldr	r2, [fp, #-108]	; 0xffffff94
   14d48:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d4c:	str	r2, [r3, #8]
   14d50:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d54:	ldr	r0, [fp, #-8]
   14d58:	bl	187d0 <__assert_fail@plt+0x6f84>
   14d5c:	str	r0, [fp, #-16]
   14d60:	ldr	r3, [fp, #-16]
   14d64:	cmp	r3, #0
   14d68:	beq	14d80 <__assert_fail@plt+0x3534>
   14d6c:	ldr	r2, [fp, #-16]
   14d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d74:	cmp	r2, r3
   14d78:	beq	14d88 <__assert_fail@plt+0x353c>
   14d7c:	bl	117f8 <abort@plt>
   14d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d84:	bl	13c50 <__assert_fail@plt+0x2404>
   14d88:	ldr	r3, [fp, #-108]	; 0xffffff94
   14d8c:	mov	r0, r3
   14d90:	sub	sp, fp, #4
   14d94:	pop	{fp, pc}
   14d98:	andeq	r3, r1, r0, asr ip
   14d9c:			; <UNDEFINED> instruction: 0x00014bb4
   14da0:	andeq	r4, r1, r8, ror #22
   14da4:	push	{fp, lr}
   14da8:	add	fp, sp, #4
   14dac:	sub	sp, sp, #8
   14db0:	str	r0, [fp, #-8]
   14db4:	str	r1, [fp, #-12]
   14db8:	ldr	r1, [fp, #-12]
   14dbc:	ldr	r0, [fp, #-8]
   14dc0:	bl	14c0c <__assert_fail@plt+0x33c0>
   14dc4:	mov	r3, r0
   14dc8:	ldr	r2, [pc, #52]	; 14e04 <__assert_fail@plt+0x35b8>
   14dcc:	cmp	r3, r2
   14dd0:	beq	14dec <__assert_fail@plt+0x35a0>
   14dd4:	ldr	r2, [pc, #44]	; 14e08 <__assert_fail@plt+0x35bc>
   14dd8:	cmp	r3, r2
   14ddc:	beq	14dec <__assert_fail@plt+0x35a0>
   14de0:	ldr	r2, [pc, #36]	; 14e0c <__assert_fail@plt+0x35c0>
   14de4:	cmp	r3, r2
   14de8:	bne	14df4 <__assert_fail@plt+0x35a8>
   14dec:	mov	r3, #0
   14df0:	b	14df8 <__assert_fail@plt+0x35ac>
   14df4:	mov	r3, #1
   14df8:	mov	r0, r3
   14dfc:	sub	sp, fp, #4
   14e00:	pop	{fp, pc}
   14e04:	andeq	r6, r0, r9, ror #18
   14e08:			; <UNDEFINED> instruction: 0x01021994
   14e0c:			; <UNDEFINED> instruction: 0xff534d42
   14e10:	push	{fp, lr}
   14e14:	add	fp, sp, #4
   14e18:	sub	sp, sp, #8
   14e1c:	str	r0, [fp, #-8]
   14e20:	str	r1, [fp, #-12]
   14e24:	ldr	r1, [fp, #-12]
   14e28:	ldr	r0, [fp, #-8]
   14e2c:	bl	14c0c <__assert_fail@plt+0x33c0>
   14e30:	mov	r3, r0
   14e34:	ldr	r2, [pc, #88]	; 14e94 <__assert_fail@plt+0x3648>
   14e38:	cmp	r3, r2
   14e3c:	beq	14e7c <__assert_fail@plt+0x3630>
   14e40:	ldr	r2, [pc, #76]	; 14e94 <__assert_fail@plt+0x3648>
   14e44:	cmp	r3, r2
   14e48:	bgt	14e64 <__assert_fail@plt+0x3618>
   14e4c:	ldr	r2, [pc, #68]	; 14e98 <__assert_fail@plt+0x364c>
   14e50:	cmp	r3, r2
   14e54:	beq	14e7c <__assert_fail@plt+0x3630>
   14e58:	cmp	r3, #0
   14e5c:	beq	14e7c <__assert_fail@plt+0x3630>
   14e60:	b	14e84 <__assert_fail@plt+0x3638>
   14e64:	ldr	r2, [pc, #48]	; 14e9c <__assert_fail@plt+0x3650>
   14e68:	cmp	r3, r2
   14e6c:	beq	14e7c <__assert_fail@plt+0x3630>
   14e70:	ldr	r2, [pc, #40]	; 14ea0 <__assert_fail@plt+0x3654>
   14e74:	cmp	r3, r2
   14e78:	bne	14e84 <__assert_fail@plt+0x3638>
   14e7c:	mov	r3, #0
   14e80:	b	14e88 <__assert_fail@plt+0x363c>
   14e84:	mov	r3, #1
   14e88:	mov	r0, r3
   14e8c:	sub	sp, fp, #4
   14e90:	pop	{fp, pc}
   14e94:	andeq	r6, r0, r9, ror #18
   14e98:			; <UNDEFINED> instruction: 0xff534d42
   14e9c:	andeq	r9, r0, r0, lsr #31
   14ea0:	movtpl	r4, #24911	; 0x614f
   14ea4:	push	{r4, r5, r6, r7, fp, lr}
   14ea8:	add	fp, sp, #20
   14eac:	mov	r5, r0
   14eb0:	ldr	r3, [r5]
   14eb4:	cmp	r3, #0
   14eb8:	beq	14ecc <__assert_fail@plt+0x3680>
   14ebc:	ldr	r3, [r5, #48]	; 0x30
   14ec0:	and	r3, r3, #8192	; 0x2000
   14ec4:	cmp	r3, #0
   14ec8:	beq	14ed4 <__assert_fail@plt+0x3688>
   14ecc:	mov	r3, #0
   14ed0:	b	15608 <__assert_fail@plt+0x3dbc>
   14ed4:	ldr	r4, [r5]
   14ed8:	ldrh	r6, [r4, #60]	; 0x3c
   14edc:	mov	r3, #3
   14ee0:	strh	r3, [r4, #60]	; 0x3c
   14ee4:	cmp	r6, #1
   14ee8:	bne	14f0c <__assert_fail@plt+0x36c0>
   14eec:	mov	r2, #0
   14ef0:	mov	r1, r4
   14ef4:	mov	r0, r5
   14ef8:	bl	16518 <__assert_fail@plt+0x4ccc>
   14efc:	mov	r3, r0
   14f00:	strh	r3, [r4, #56]	; 0x38
   14f04:	mov	r3, r4
   14f08:	b	15608 <__assert_fail@plt+0x3dbc>
   14f0c:	cmp	r6, #2
   14f10:	bne	14fb0 <__assert_fail@plt+0x3764>
   14f14:	ldrh	r3, [r4, #56]	; 0x38
   14f18:	cmp	r3, #12
   14f1c:	beq	14f2c <__assert_fail@plt+0x36e0>
   14f20:	ldrh	r3, [r4, #56]	; 0x38
   14f24:	cmp	r3, #13
   14f28:	bne	14fb0 <__assert_fail@plt+0x3764>
   14f2c:	mov	r2, #1
   14f30:	mov	r1, r4
   14f34:	mov	r0, r5
   14f38:	bl	16518 <__assert_fail@plt+0x4ccc>
   14f3c:	mov	r3, r0
   14f40:	strh	r3, [r4, #56]	; 0x38
   14f44:	ldrh	r3, [r4, #56]	; 0x38
   14f48:	cmp	r3, #1
   14f4c:	bne	15360 <__assert_fail@plt+0x3b14>
   14f50:	ldr	r3, [r5, #48]	; 0x30
   14f54:	and	r3, r3, #4
   14f58:	cmp	r3, #0
   14f5c:	bne	15360 <__assert_fail@plt+0x3b14>
   14f60:	ldr	r1, [pc, #1704]	; 15610 <__assert_fail@plt+0x3dc4>
   14f64:	mov	r0, r5
   14f68:	bl	143b0 <__assert_fail@plt+0x2b64>
   14f6c:	mov	r3, r0
   14f70:	str	r3, [r4, #36]	; 0x24
   14f74:	ldr	r3, [r4, #36]	; 0x24
   14f78:	cmp	r3, #0
   14f7c:	bge	14f9c <__assert_fail@plt+0x3750>
   14f80:	bl	116c0 <__errno_location@plt>
   14f84:	mov	r3, r0
   14f88:	ldr	r3, [r3]
   14f8c:	str	r3, [r4, #32]
   14f90:	mov	r3, #7
   14f94:	strh	r3, [r4, #56]	; 0x38
   14f98:	b	15360 <__assert_fail@plt+0x3b14>
   14f9c:	ldrh	r3, [r4, #58]	; 0x3a
   14fa0:	orr	r3, r3, #2
   14fa4:	uxth	r3, r3
   14fa8:	strh	r3, [r4, #58]	; 0x3a
   14fac:	b	15360 <__assert_fail@plt+0x3b14>
   14fb0:	ldrh	r3, [r4, #56]	; 0x38
   14fb4:	cmp	r3, #1
   14fb8:	bne	15168 <__assert_fail@plt+0x391c>
   14fbc:	cmp	r6, #4
   14fc0:	beq	14fe8 <__assert_fail@plt+0x379c>
   14fc4:	ldr	r3, [r5, #48]	; 0x30
   14fc8:	and	r3, r3, #64	; 0x40
   14fcc:	cmp	r3, #0
   14fd0:	beq	15040 <__assert_fail@plt+0x37f4>
   14fd4:	ldrd	r0, [r4, #64]	; 0x40
   14fd8:	ldrd	r2, [r5, #16]
   14fdc:	cmp	r1, r3
   14fe0:	cmpeq	r0, r2
   14fe4:	beq	15040 <__assert_fail@plt+0x37f4>
   14fe8:	ldrh	r3, [r4, #58]	; 0x3a
   14fec:	and	r3, r3, #2
   14ff0:	cmp	r3, #0
   14ff4:	beq	15004 <__assert_fail@plt+0x37b8>
   14ff8:	ldr	r3, [r4, #36]	; 0x24
   14ffc:	mov	r0, r3
   15000:	bl	11804 <close@plt>
   15004:	ldr	r3, [r5, #4]
   15008:	cmp	r3, #0
   1500c:	beq	15024 <__assert_fail@plt+0x37d8>
   15010:	ldr	r3, [r5, #4]
   15014:	mov	r0, r3
   15018:	bl	1694c <__assert_fail@plt+0x5100>
   1501c:	mov	r3, #0
   15020:	str	r3, [r5, #4]
   15024:	mov	r3, #6
   15028:	strh	r3, [r4, #56]	; 0x38
   1502c:	mov	r1, r4
   15030:	mov	r0, r5
   15034:	bl	13fac <__assert_fail@plt+0x2760>
   15038:	mov	r3, r4
   1503c:	b	15608 <__assert_fail@plt+0x3dbc>
   15040:	ldr	r3, [r5, #4]
   15044:	cmp	r3, #0
   15048:	beq	1507c <__assert_fail@plt+0x3830>
   1504c:	ldr	r3, [r5, #48]	; 0x30
   15050:	and	r3, r3, #4096	; 0x1000
   15054:	cmp	r3, #0
   15058:	beq	1507c <__assert_fail@plt+0x3830>
   1505c:	ldr	r3, [r5, #48]	; 0x30
   15060:	bic	r3, r3, #4096	; 0x1000
   15064:	str	r3, [r5, #48]	; 0x30
   15068:	ldr	r3, [r5, #4]
   1506c:	mov	r0, r3
   15070:	bl	1694c <__assert_fail@plt+0x5100>
   15074:	mov	r3, #0
   15078:	str	r3, [r5, #4]
   1507c:	ldr	r3, [r5, #4]
   15080:	cmp	r3, #0
   15084:	beq	150ec <__assert_fail@plt+0x38a0>
   15088:	ldr	r3, [r4, #24]
   1508c:	mvn	r2, #0
   15090:	mov	r1, r4
   15094:	mov	r0, r5
   15098:	bl	16c34 <__assert_fail@plt+0x53e8>
   1509c:	mov	r3, r0
   150a0:	cmp	r3, #0
   150a4:	beq	15158 <__assert_fail@plt+0x390c>
   150a8:	bl	116c0 <__errno_location@plt>
   150ac:	mov	r3, r0
   150b0:	ldr	r3, [r3]
   150b4:	str	r3, [r4, #32]
   150b8:	ldrh	r3, [r4, #58]	; 0x3a
   150bc:	orr	r3, r3, #1
   150c0:	uxth	r3, r3
   150c4:	strh	r3, [r4, #58]	; 0x3a
   150c8:	ldr	r4, [r5, #4]
   150cc:	b	150e0 <__assert_fail@plt+0x3894>
   150d0:	ldr	r3, [r4, #4]
   150d4:	ldr	r3, [r3, #24]
   150d8:	str	r3, [r4, #24]
   150dc:	ldr	r4, [r4, #8]
   150e0:	cmp	r4, #0
   150e4:	bne	150d0 <__assert_fail@plt+0x3884>
   150e8:	b	15158 <__assert_fail@plt+0x390c>
   150ec:	mov	r1, #3
   150f0:	mov	r0, r5
   150f4:	bl	159e0 <__assert_fail@plt+0x4194>
   150f8:	mov	r3, r0
   150fc:	str	r3, [r5, #4]
   15100:	ldr	r3, [r5, #4]
   15104:	cmp	r3, #0
   15108:	bne	15158 <__assert_fail@plt+0x390c>
   1510c:	ldr	r3, [r5, #48]	; 0x30
   15110:	and	r3, r3, #8192	; 0x2000
   15114:	cmp	r3, #0
   15118:	beq	15124 <__assert_fail@plt+0x38d8>
   1511c:	mov	r3, #0
   15120:	b	15608 <__assert_fail@plt+0x3dbc>
   15124:	ldr	r3, [r4, #32]
   15128:	cmp	r3, #0
   1512c:	beq	15144 <__assert_fail@plt+0x38f8>
   15130:	ldrh	r3, [r4, #56]	; 0x38
   15134:	cmp	r3, #4
   15138:	beq	15144 <__assert_fail@plt+0x38f8>
   1513c:	mov	r3, #7
   15140:	strh	r3, [r4, #56]	; 0x38
   15144:	mov	r1, r4
   15148:	mov	r0, r5
   1514c:	bl	13fac <__assert_fail@plt+0x2760>
   15150:	mov	r3, r4
   15154:	b	15608 <__assert_fail@plt+0x3dbc>
   15158:	ldr	r4, [r5, #4]
   1515c:	mov	r3, #0
   15160:	str	r3, [r5, #4]
   15164:	b	152f0 <__assert_fail@plt+0x3aa4>
   15168:	mov	r6, r4
   1516c:	ldr	r3, [r4, #8]
   15170:	cmp	r3, #0
   15174:	bne	151e0 <__assert_fail@plt+0x3994>
   15178:	ldr	r3, [r4, #4]
   1517c:	ldr	r3, [r3, #12]
   15180:	cmp	r3, #0
   15184:	beq	151e0 <__assert_fail@plt+0x3994>
   15188:	ldr	r4, [r6, #4]
   1518c:	str	r4, [r5]
   15190:	ldr	r2, [r5, #24]
   15194:	ldr	r3, [r4, #40]	; 0x28
   15198:	add	r3, r2, r3
   1519c:	mov	r2, #0
   151a0:	strb	r2, [r3]
   151a4:	mov	r1, #3
   151a8:	mov	r0, r5
   151ac:	bl	159e0 <__assert_fail@plt+0x4194>
   151b0:	mov	r4, r0
   151b4:	cmp	r4, #0
   151b8:	bne	151d4 <__assert_fail@plt+0x3988>
   151bc:	ldr	r3, [r5, #48]	; 0x30
   151c0:	and	r3, r3, #8192	; 0x2000
   151c4:	cmp	r3, #0
   151c8:	beq	15414 <__assert_fail@plt+0x3bc8>
   151cc:	mov	r3, #0
   151d0:	b	15608 <__assert_fail@plt+0x3dbc>
   151d4:	mov	r0, r6
   151d8:	bl	13c50 <__assert_fail@plt+0x2404>
   151dc:	b	152f0 <__assert_fail@plt+0x3aa4>
   151e0:	ldr	r4, [r4, #8]
   151e4:	cmp	r4, #0
   151e8:	beq	15418 <__assert_fail@plt+0x3bcc>
   151ec:	str	r4, [r5]
   151f0:	mov	r0, r6
   151f4:	bl	13c50 <__assert_fail@plt+0x2404>
   151f8:	ldr	r3, [r4, #48]	; 0x30
   151fc:	cmp	r3, #0
   15200:	bne	1524c <__assert_fail@plt+0x3a00>
   15204:	mov	r0, r5
   15208:	bl	142d8 <__assert_fail@plt+0x2a8c>
   1520c:	mov	r3, r0
   15210:	cmp	r3, #0
   15214:	beq	1522c <__assert_fail@plt+0x39e0>
   15218:	ldr	r3, [r5, #48]	; 0x30
   1521c:	orr	r3, r3, #8192	; 0x2000
   15220:	str	r3, [r5, #48]	; 0x30
   15224:	mov	r3, #0
   15228:	b	15608 <__assert_fail@plt+0x3dbc>
   1522c:	mov	r0, r5
   15230:	bl	140ec <__assert_fail@plt+0x28a0>
   15234:	mov	r1, r4
   15238:	mov	r0, r5
   1523c:	bl	148c0 <__assert_fail@plt+0x3074>
   15240:	mov	r0, r5
   15244:	bl	13da0 <__assert_fail@plt+0x2554>
   15248:	b	15364 <__assert_fail@plt+0x3b18>
   1524c:	ldrh	r3, [r4, #60]	; 0x3c
   15250:	cmp	r3, #4
   15254:	bne	1525c <__assert_fail@plt+0x3a10>
   15258:	b	15168 <__assert_fail@plt+0x391c>
   1525c:	ldrh	r3, [r4, #60]	; 0x3c
   15260:	cmp	r3, #2
   15264:	bne	152f0 <__assert_fail@plt+0x3aa4>
   15268:	mov	r2, #1
   1526c:	mov	r1, r4
   15270:	mov	r0, r5
   15274:	bl	16518 <__assert_fail@plt+0x4ccc>
   15278:	mov	r3, r0
   1527c:	strh	r3, [r4, #56]	; 0x38
   15280:	ldrh	r3, [r4, #56]	; 0x38
   15284:	cmp	r3, #1
   15288:	bne	152e8 <__assert_fail@plt+0x3a9c>
   1528c:	ldr	r3, [r5, #48]	; 0x30
   15290:	and	r3, r3, #4
   15294:	cmp	r3, #0
   15298:	bne	152e8 <__assert_fail@plt+0x3a9c>
   1529c:	ldr	r1, [pc, #876]	; 15610 <__assert_fail@plt+0x3dc4>
   152a0:	mov	r0, r5
   152a4:	bl	143b0 <__assert_fail@plt+0x2b64>
   152a8:	mov	r3, r0
   152ac:	str	r3, [r4, #36]	; 0x24
   152b0:	ldr	r3, [r4, #36]	; 0x24
   152b4:	cmp	r3, #0
   152b8:	bge	152d8 <__assert_fail@plt+0x3a8c>
   152bc:	bl	116c0 <__errno_location@plt>
   152c0:	mov	r3, r0
   152c4:	ldr	r3, [r3]
   152c8:	str	r3, [r4, #32]
   152cc:	mov	r3, #7
   152d0:	strh	r3, [r4, #56]	; 0x38
   152d4:	b	152e8 <__assert_fail@plt+0x3a9c>
   152d8:	ldrh	r3, [r4, #58]	; 0x3a
   152dc:	orr	r3, r3, #2
   152e0:	uxth	r3, r3
   152e4:	strh	r3, [r4, #58]	; 0x3a
   152e8:	mov	r3, #3
   152ec:	strh	r3, [r4, #60]	; 0x3c
   152f0:	ldr	r2, [r5, #24]
   152f4:	ldr	r3, [r4, #4]
   152f8:	ldr	r1, [r3, #28]
   152fc:	ldr	r3, [r4, #4]
   15300:	ldr	r3, [r3, #40]	; 0x28
   15304:	sub	r3, r3, #1
   15308:	add	r3, r1, r3
   1530c:	ldrb	r3, [r3]
   15310:	cmp	r3, #47	; 0x2f
   15314:	bne	15328 <__assert_fail@plt+0x3adc>
   15318:	ldr	r3, [r4, #4]
   1531c:	ldr	r3, [r3, #40]	; 0x28
   15320:	sub	r3, r3, #1
   15324:	b	15330 <__assert_fail@plt+0x3ae4>
   15328:	ldr	r3, [r4, #4]
   1532c:	ldr	r3, [r3, #40]	; 0x28
   15330:	add	r6, r2, r3
   15334:	mov	r3, r6
   15338:	add	r6, r3, #1
   1533c:	mov	r2, #47	; 0x2f
   15340:	strb	r2, [r3]
   15344:	add	r1, r4, #168	; 0xa8
   15348:	ldr	r3, [r4, #52]	; 0x34
   1534c:	add	r3, r3, #1
   15350:	mov	r2, r3
   15354:	mov	r0, r6
   15358:	bl	114a4 <memmove@plt>
   1535c:	b	15364 <__assert_fail@plt+0x3b18>
   15360:	nop			; (mov r0, r0)
   15364:	str	r4, [r5]
   15368:	ldrh	r3, [r4, #56]	; 0x38
   1536c:	cmp	r3, #11
   15370:	bne	153b4 <__assert_fail@plt+0x3b68>
   15374:	ldrd	r2, [r4, #112]	; 0x70
   15378:	cmp	r3, #0
   1537c:	cmpeq	r2, #2
   15380:	bne	153a0 <__assert_fail@plt+0x3b54>
   15384:	mov	r2, #0
   15388:	mov	r1, r4
   1538c:	mov	r0, r5
   15390:	bl	16518 <__assert_fail@plt+0x4ccc>
   15394:	mov	r3, r0
   15398:	strh	r3, [r4, #56]	; 0x38
   1539c:	b	153b4 <__assert_fail@plt+0x3b68>
   153a0:	ldrd	r2, [r4, #112]	; 0x70
   153a4:	cmp	r3, #0
   153a8:	cmpeq	r2, #1
   153ac:	beq	153b4 <__assert_fail@plt+0x3b68>
   153b0:	bl	117f8 <abort@plt>
   153b4:	ldrh	r3, [r4, #56]	; 0x38
   153b8:	cmp	r3, #1
   153bc:	bne	1540c <__assert_fail@plt+0x3bc0>
   153c0:	ldr	r3, [r4, #48]	; 0x30
   153c4:	cmp	r3, #0
   153c8:	bne	153d4 <__assert_fail@plt+0x3b88>
   153cc:	ldrd	r2, [r4, #64]	; 0x40
   153d0:	strd	r2, [r5, #16]
   153d4:	mov	r1, r4
   153d8:	mov	r0, r5
   153dc:	bl	13e6c <__assert_fail@plt+0x2620>
   153e0:	mov	r3, r0
   153e4:	eor	r3, r3, #1
   153e8:	uxtb	r3, r3
   153ec:	cmp	r3, #0
   153f0:	beq	1540c <__assert_fail@plt+0x3bc0>
   153f4:	bl	116c0 <__errno_location@plt>
   153f8:	mov	r2, r0
   153fc:	mov	r3, #12
   15400:	str	r3, [r2]
   15404:	mov	r3, #0
   15408:	b	15608 <__assert_fail@plt+0x3dbc>
   1540c:	mov	r3, r4
   15410:	b	15608 <__assert_fail@plt+0x3dbc>
   15414:	nop			; (mov r0, r0)
   15418:	ldr	r4, [r6, #4]
   1541c:	str	r4, [r5]
   15420:	mov	r0, r6
   15424:	bl	13c50 <__assert_fail@plt+0x2404>
   15428:	ldr	r3, [r4, #48]	; 0x30
   1542c:	cmn	r3, #1
   15430:	bne	1545c <__assert_fail@plt+0x3c10>
   15434:	mov	r0, r4
   15438:	bl	13c50 <__assert_fail@plt+0x2404>
   1543c:	bl	116c0 <__errno_location@plt>
   15440:	mov	r2, r0
   15444:	mov	r3, #0
   15448:	str	r3, [r2]
   1544c:	mov	r3, #0
   15450:	str	r3, [r5]
   15454:	mov	r3, #0
   15458:	b	15608 <__assert_fail@plt+0x3dbc>
   1545c:	ldrh	r3, [r4, #56]	; 0x38
   15460:	cmp	r3, #11
   15464:	bne	1546c <__assert_fail@plt+0x3c20>
   15468:	bl	117f8 <abort@plt>
   1546c:	ldr	r2, [r5, #24]
   15470:	ldr	r3, [r4, #40]	; 0x28
   15474:	add	r3, r2, r3
   15478:	mov	r2, #0
   1547c:	strb	r2, [r3]
   15480:	ldr	r3, [r4, #48]	; 0x30
   15484:	cmp	r3, #0
   15488:	bne	154c0 <__assert_fail@plt+0x3c74>
   1548c:	mov	r0, r5
   15490:	bl	142d8 <__assert_fail@plt+0x2a8c>
   15494:	mov	r3, r0
   15498:	cmp	r3, #0
   1549c:	beq	155ac <__assert_fail@plt+0x3d60>
   154a0:	bl	116c0 <__errno_location@plt>
   154a4:	mov	r3, r0
   154a8:	ldr	r3, [r3]
   154ac:	str	r3, [r4, #32]
   154b0:	ldr	r3, [r5, #48]	; 0x30
   154b4:	orr	r3, r3, #8192	; 0x2000
   154b8:	str	r3, [r5, #48]	; 0x30
   154bc:	b	155ac <__assert_fail@plt+0x3d60>
   154c0:	ldrh	r3, [r4, #58]	; 0x3a
   154c4:	and	r3, r3, #2
   154c8:	cmp	r3, #0
   154cc:	beq	15560 <__assert_fail@plt+0x3d14>
   154d0:	ldr	r3, [r5, #48]	; 0x30
   154d4:	and	r3, r3, #4
   154d8:	cmp	r3, #0
   154dc:	bne	15550 <__assert_fail@plt+0x3d04>
   154e0:	ldr	r3, [r5, #48]	; 0x30
   154e4:	and	r3, r3, #512	; 0x200
   154e8:	cmp	r3, #0
   154ec:	beq	1550c <__assert_fail@plt+0x3cc0>
   154f0:	ldr	r3, [r4, #36]	; 0x24
   154f4:	mov	r2, #1
   154f8:	mov	r1, r3
   154fc:	mov	r0, r5
   15500:	bl	14214 <__assert_fail@plt+0x29c8>
   15504:	mov	r3, #0
   15508:	b	1552c <__assert_fail@plt+0x3ce0>
   1550c:	ldr	r3, [r4, #36]	; 0x24
   15510:	mov	r0, r3
   15514:	bl	11780 <fchdir@plt>
   15518:	mov	r3, r0
   1551c:	cmp	r3, #0
   15520:	movne	r3, #1
   15524:	moveq	r3, #0
   15528:	uxtb	r3, r3
   1552c:	cmp	r3, #0
   15530:	beq	15550 <__assert_fail@plt+0x3d04>
   15534:	bl	116c0 <__errno_location@plt>
   15538:	mov	r3, r0
   1553c:	ldr	r3, [r3]
   15540:	str	r3, [r4, #32]
   15544:	ldr	r3, [r5, #48]	; 0x30
   15548:	orr	r3, r3, #8192	; 0x2000
   1554c:	str	r3, [r5, #48]	; 0x30
   15550:	ldr	r3, [r4, #36]	; 0x24
   15554:	mov	r0, r3
   15558:	bl	11804 <close@plt>
   1555c:	b	155ac <__assert_fail@plt+0x3d60>
   15560:	ldrh	r3, [r4, #58]	; 0x3a
   15564:	and	r3, r3, #1
   15568:	cmp	r3, #0
   1556c:	bne	155ac <__assert_fail@plt+0x3d60>
   15570:	ldr	r1, [r4, #4]
   15574:	ldr	r3, [pc, #152]	; 15614 <__assert_fail@plt+0x3dc8>
   15578:	mvn	r2, #0
   1557c:	mov	r0, r5
   15580:	bl	16c34 <__assert_fail@plt+0x53e8>
   15584:	mov	r3, r0
   15588:	cmp	r3, #0
   1558c:	beq	155ac <__assert_fail@plt+0x3d60>
   15590:	bl	116c0 <__errno_location@plt>
   15594:	mov	r3, r0
   15598:	ldr	r3, [r3]
   1559c:	str	r3, [r4, #32]
   155a0:	ldr	r3, [r5, #48]	; 0x30
   155a4:	orr	r3, r3, #8192	; 0x2000
   155a8:	str	r3, [r5, #48]	; 0x30
   155ac:	ldrh	r3, [r4, #56]	; 0x38
   155b0:	cmp	r3, #2
   155b4:	beq	155ec <__assert_fail@plt+0x3da0>
   155b8:	ldr	r3, [r4, #32]
   155bc:	cmp	r3, #0
   155c0:	beq	155cc <__assert_fail@plt+0x3d80>
   155c4:	mov	r3, #7
   155c8:	b	155d0 <__assert_fail@plt+0x3d84>
   155cc:	mov	r3, #6
   155d0:	strh	r3, [r4, #56]	; 0x38
   155d4:	ldr	r3, [r4, #32]
   155d8:	cmp	r3, #0
   155dc:	bne	155ec <__assert_fail@plt+0x3da0>
   155e0:	mov	r1, r4
   155e4:	mov	r0, r5
   155e8:	bl	13fac <__assert_fail@plt+0x2760>
   155ec:	ldr	r3, [r5, #48]	; 0x30
   155f0:	and	r3, r3, #8192	; 0x2000
   155f4:	cmp	r3, #0
   155f8:	bne	15604 <__assert_fail@plt+0x3db8>
   155fc:	mov	r3, r4
   15600:	b	15608 <__assert_fail@plt+0x3dbc>
   15604:	mov	r3, #0
   15608:	mov	r0, r3
   1560c:	pop	{r4, r5, r6, r7, fp, pc}
   15610:	andeq	r0, r2, r8, ror #3
   15614:	andeq	r0, r2, ip, ror #3
   15618:	push	{fp, lr}
   1561c:	add	fp, sp, #4
   15620:	sub	sp, sp, #16
   15624:	str	r0, [fp, #-8]
   15628:	str	r1, [fp, #-12]
   1562c:	str	r2, [fp, #-16]
   15630:	ldr	r3, [fp, #-16]
   15634:	cmp	r3, #0
   15638:	beq	15684 <__assert_fail@plt+0x3e38>
   1563c:	ldr	r3, [fp, #-16]
   15640:	cmp	r3, #1
   15644:	beq	15684 <__assert_fail@plt+0x3e38>
   15648:	ldr	r3, [fp, #-16]
   1564c:	cmp	r3, #2
   15650:	beq	15684 <__assert_fail@plt+0x3e38>
   15654:	ldr	r3, [fp, #-16]
   15658:	cmp	r3, #3
   1565c:	beq	15684 <__assert_fail@plt+0x3e38>
   15660:	ldr	r3, [fp, #-16]
   15664:	cmp	r3, #4
   15668:	beq	15684 <__assert_fail@plt+0x3e38>
   1566c:	bl	116c0 <__errno_location@plt>
   15670:	mov	r2, r0
   15674:	mov	r3, #22
   15678:	str	r3, [r2]
   1567c:	mov	r3, #1
   15680:	b	15698 <__assert_fail@plt+0x3e4c>
   15684:	ldr	r3, [fp, #-16]
   15688:	uxth	r2, r3
   1568c:	ldr	r3, [fp, #-12]
   15690:	strh	r2, [r3, #60]	; 0x3c
   15694:	mov	r3, #0
   15698:	mov	r0, r3
   1569c:	sub	sp, fp, #4
   156a0:	pop	{fp, pc}
   156a4:	push	{r4, r5, fp, lr}
   156a8:	add	fp, sp, #12
   156ac:	sub	sp, sp, #16
   156b0:	mov	r4, r0
   156b4:	str	r1, [fp, #-24]	; 0xffffffe8
   156b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156bc:	cmp	r3, #0
   156c0:	beq	156e8 <__assert_fail@plt+0x3e9c>
   156c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156c8:	cmp	r3, #4096	; 0x1000
   156cc:	beq	156e8 <__assert_fail@plt+0x3e9c>
   156d0:	bl	116c0 <__errno_location@plt>
   156d4:	mov	r2, r0
   156d8:	mov	r3, #22
   156dc:	str	r3, [r2]
   156e0:	mov	r3, #0
   156e4:	b	1587c <__assert_fail@plt+0x4030>
   156e8:	ldr	r5, [r4]
   156ec:	bl	116c0 <__errno_location@plt>
   156f0:	mov	r2, r0
   156f4:	mov	r3, #0
   156f8:	str	r3, [r2]
   156fc:	ldr	r3, [r4, #48]	; 0x30
   15700:	and	r3, r3, #8192	; 0x2000
   15704:	cmp	r3, #0
   15708:	beq	15714 <__assert_fail@plt+0x3ec8>
   1570c:	mov	r3, #0
   15710:	b	1587c <__assert_fail@plt+0x4030>
   15714:	ldrh	r3, [r5, #56]	; 0x38
   15718:	cmp	r3, #9
   1571c:	bne	15728 <__assert_fail@plt+0x3edc>
   15720:	ldr	r3, [r5, #8]
   15724:	b	1587c <__assert_fail@plt+0x4030>
   15728:	ldrh	r3, [r5, #56]	; 0x38
   1572c:	cmp	r3, #1
   15730:	beq	1573c <__assert_fail@plt+0x3ef0>
   15734:	mov	r3, #0
   15738:	b	1587c <__assert_fail@plt+0x4030>
   1573c:	ldr	r3, [r4, #4]
   15740:	cmp	r3, #0
   15744:	beq	15754 <__assert_fail@plt+0x3f08>
   15748:	ldr	r3, [r4, #4]
   1574c:	mov	r0, r3
   15750:	bl	1694c <__assert_fail@plt+0x5100>
   15754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15758:	cmp	r3, #4096	; 0x1000
   1575c:	bne	15778 <__assert_fail@plt+0x3f2c>
   15760:	ldr	r3, [r4, #48]	; 0x30
   15764:	orr	r3, r3, #4096	; 0x1000
   15768:	str	r3, [r4, #48]	; 0x30
   1576c:	mov	r3, #2
   15770:	str	r3, [fp, #-24]	; 0xffffffe8
   15774:	b	15780 <__assert_fail@plt+0x3f34>
   15778:	mov	r3, #1
   1577c:	str	r3, [fp, #-24]	; 0xffffffe8
   15780:	ldr	r3, [r5, #48]	; 0x30
   15784:	cmp	r3, #0
   15788:	bne	157ac <__assert_fail@plt+0x3f60>
   1578c:	ldr	r3, [r5, #24]
   15790:	ldrb	r3, [r3]
   15794:	cmp	r3, #47	; 0x2f
   15798:	beq	157ac <__assert_fail@plt+0x3f60>
   1579c:	ldr	r3, [r4, #48]	; 0x30
   157a0:	and	r3, r3, #4
   157a4:	cmp	r3, #0
   157a8:	beq	157c8 <__assert_fail@plt+0x3f7c>
   157ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157b0:	mov	r0, r4
   157b4:	bl	159e0 <__assert_fail@plt+0x4194>
   157b8:	mov	r3, r0
   157bc:	str	r3, [r4, #4]
   157c0:	ldr	r3, [r4, #4]
   157c4:	b	1587c <__assert_fail@plt+0x4030>
   157c8:	ldr	r1, [pc, #184]	; 15888 <__assert_fail@plt+0x403c>
   157cc:	mov	r0, r4
   157d0:	bl	143b0 <__assert_fail@plt+0x2b64>
   157d4:	str	r0, [fp, #-16]
   157d8:	ldr	r3, [fp, #-16]
   157dc:	cmp	r3, #0
   157e0:	bge	157f4 <__assert_fail@plt+0x3fa8>
   157e4:	mov	r3, #0
   157e8:	str	r3, [r4, #4]
   157ec:	mov	r3, #0
   157f0:	b	1587c <__assert_fail@plt+0x4030>
   157f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157f8:	mov	r0, r4
   157fc:	bl	159e0 <__assert_fail@plt+0x4194>
   15800:	mov	r3, r0
   15804:	str	r3, [r4, #4]
   15808:	ldr	r3, [r4, #48]	; 0x30
   1580c:	and	r3, r3, #512	; 0x200
   15810:	cmp	r3, #0
   15814:	beq	1582c <__assert_fail@plt+0x3fe0>
   15818:	mov	r2, #1
   1581c:	ldr	r1, [fp, #-16]
   15820:	mov	r0, r4
   15824:	bl	14214 <__assert_fail@plt+0x29c8>
   15828:	b	15878 <__assert_fail@plt+0x402c>
   1582c:	ldr	r0, [fp, #-16]
   15830:	bl	11780 <fchdir@plt>
   15834:	mov	r3, r0
   15838:	cmp	r3, #0
   1583c:	beq	15870 <__assert_fail@plt+0x4024>
   15840:	bl	116c0 <__errno_location@plt>
   15844:	mov	r3, r0
   15848:	ldr	r3, [r3]
   1584c:	str	r3, [fp, #-20]	; 0xffffffec
   15850:	ldr	r0, [fp, #-16]
   15854:	bl	11804 <close@plt>
   15858:	bl	116c0 <__errno_location@plt>
   1585c:	mov	r2, r0
   15860:	ldr	r3, [fp, #-20]	; 0xffffffec
   15864:	str	r3, [r2]
   15868:	mov	r3, #0
   1586c:	b	1587c <__assert_fail@plt+0x4030>
   15870:	ldr	r0, [fp, #-16]
   15874:	bl	11804 <close@plt>
   15878:	ldr	r3, [r4, #4]
   1587c:	mov	r0, r3
   15880:	sub	sp, fp, #12
   15884:	pop	{r4, r5, fp, pc}
   15888:	andeq	r0, r2, r8, ror #3
   1588c:	push	{fp}		; (str fp, [sp, #-4]!)
   15890:	add	fp, sp, #0
   15894:	sub	sp, sp, #12
   15898:	str	r0, [fp, #-8]
   1589c:	str	r1, [fp, #-12]
   158a0:	ldr	r3, [fp, #-8]
   158a4:	ldr	r3, [r3]
   158a8:	ldrd	r0, [r3, #160]	; 0xa0
   158ac:	ldr	r3, [fp, #-12]
   158b0:	ldr	r3, [r3]
   158b4:	ldrd	r2, [r3, #160]	; 0xa0
   158b8:	cmp	r1, r3
   158bc:	cmpeq	r0, r2
   158c0:	movhi	r3, #1
   158c4:	movls	r3, #0
   158c8:	uxtb	r3, r3
   158cc:	mov	ip, r3
   158d0:	ldr	r3, [fp, #-8]
   158d4:	ldr	r3, [r3]
   158d8:	ldrd	r0, [r3, #160]	; 0xa0
   158dc:	ldr	r3, [fp, #-12]
   158e0:	ldr	r3, [r3]
   158e4:	ldrd	r2, [r3, #160]	; 0xa0
   158e8:	cmp	r1, r3
   158ec:	cmpeq	r0, r2
   158f0:	movcc	r3, #1
   158f4:	movcs	r3, #0
   158f8:	uxtb	r3, r3
   158fc:	sub	r3, ip, r3
   15900:	mov	r0, r3
   15904:	add	sp, fp, #0
   15908:	pop	{fp}		; (ldr fp, [sp], #4)
   1590c:	bx	lr
   15910:	push	{fp}		; (str fp, [sp, #-4]!)
   15914:	add	fp, sp, #0
   15918:	sub	sp, sp, #20
   1591c:	str	r0, [fp, #-16]
   15920:	str	r1, [fp, #-20]	; 0xffffffec
   15924:	ldr	r3, [fp, #-20]	; 0xffffffec
   15928:	sub	r3, r3, #1
   1592c:	cmp	r3, #11
   15930:	ldrls	pc, [pc, r3, lsl #2]
   15934:	b	159bc <__assert_fail@plt+0x4170>
   15938:	andeq	r5, r1, ip, lsl #19
   1593c:	andeq	r5, r1, r4, ror r9
   15940:			; <UNDEFINED> instruction: 0x000159bc
   15944:	andeq	r5, r1, r0, lsl #19
   15948:			; <UNDEFINED> instruction: 0x000159bc
   1594c:	andeq	r5, r1, r8, ror #18
   15950:			; <UNDEFINED> instruction: 0x000159bc
   15954:	andeq	r5, r1, r4, lsr #19
   15958:			; <UNDEFINED> instruction: 0x000159bc
   1595c:	muleq	r1, r8, r9
   15960:			; <UNDEFINED> instruction: 0x000159bc
   15964:			; <UNDEFINED> instruction: 0x000159b0
   15968:	mov	r3, #24576	; 0x6000
   1596c:	str	r3, [fp, #-8]
   15970:	b	159c4 <__assert_fail@plt+0x4178>
   15974:	mov	r3, #8192	; 0x2000
   15978:	str	r3, [fp, #-8]
   1597c:	b	159c4 <__assert_fail@plt+0x4178>
   15980:	mov	r3, #16384	; 0x4000
   15984:	str	r3, [fp, #-8]
   15988:	b	159c4 <__assert_fail@plt+0x4178>
   1598c:	mov	r3, #4096	; 0x1000
   15990:	str	r3, [fp, #-8]
   15994:	b	159c4 <__assert_fail@plt+0x4178>
   15998:	mov	r3, #40960	; 0xa000
   1599c:	str	r3, [fp, #-8]
   159a0:	b	159c4 <__assert_fail@plt+0x4178>
   159a4:	mov	r3, #32768	; 0x8000
   159a8:	str	r3, [fp, #-8]
   159ac:	b	159c4 <__assert_fail@plt+0x4178>
   159b0:	mov	r3, #49152	; 0xc000
   159b4:	str	r3, [fp, #-8]
   159b8:	b	159c4 <__assert_fail@plt+0x4178>
   159bc:	mov	r3, #0
   159c0:	str	r3, [fp, #-8]
   159c4:	ldr	r3, [fp, #-16]
   159c8:	ldr	r2, [fp, #-8]
   159cc:	str	r2, [r3, #16]
   159d0:	nop			; (mov r0, r0)
   159d4:	add	sp, fp, #0
   159d8:	pop	{fp}		; (ldr fp, [sp], #4)
   159dc:	bx	lr
   159e0:	push	{r4, r5, r6, r7, fp, lr}
   159e4:	add	fp, sp, #20
   159e8:	sub	sp, sp, #80	; 0x50
   159ec:	mov	r4, r0
   159f0:	str	r1, [fp, #-96]	; 0xffffffa0
   159f4:	ldr	r3, [r4]
   159f8:	str	r3, [fp, #-44]	; 0xffffffd4
   159fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a00:	ldr	r3, [r3, #12]
   15a04:	cmp	r3, #0
   15a08:	movne	r3, #1
   15a0c:	moveq	r3, #0
   15a10:	strb	r3, [fp, #-45]	; 0xffffffd3
   15a14:	mov	r3, #0
   15a18:	strb	r3, [fp, #-37]	; 0xffffffdb
   15a1c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15a20:	cmp	r3, #0
   15a24:	beq	15aa0 <__assert_fail@plt+0x4254>
   15a28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a2c:	ldr	r3, [r3, #12]
   15a30:	str	r3, [fp, #-52]	; 0xffffffcc
   15a34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15a38:	bl	11774 <dirfd@plt>
   15a3c:	mov	r3, r0
   15a40:	str	r3, [fp, #-92]	; 0xffffffa4
   15a44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a48:	cmp	r3, #0
   15a4c:	bge	15c04 <__assert_fail@plt+0x43b8>
   15a50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a54:	ldr	r3, [r3, #12]
   15a58:	mov	r0, r3
   15a5c:	bl	11834 <closedir@plt>
   15a60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a64:	mov	r2, #0
   15a68:	str	r2, [r3, #12]
   15a6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a70:	cmp	r3, #3
   15a74:	bne	15a98 <__assert_fail@plt+0x424c>
   15a78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a7c:	mov	r2, #4
   15a80:	strh	r2, [r3, #56]	; 0x38
   15a84:	bl	116c0 <__errno_location@plt>
   15a88:	mov	r3, r0
   15a8c:	ldr	r2, [r3]
   15a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a94:	str	r2, [r3, #32]
   15a98:	mov	r3, #0
   15a9c:	b	164f8 <__assert_fail@plt+0x4cac>
   15aa0:	ldr	r3, [r4, #48]	; 0x30
   15aa4:	and	r3, r3, #4
   15aa8:	cmp	r3, #0
   15aac:	bne	15ac8 <__assert_fail@plt+0x427c>
   15ab0:	ldr	r3, [r4, #48]	; 0x30
   15ab4:	and	r3, r3, #512	; 0x200
   15ab8:	cmp	r3, #0
   15abc:	beq	15ac8 <__assert_fail@plt+0x427c>
   15ac0:	ldr	r0, [r4, #32]
   15ac4:	b	15acc <__assert_fail@plt+0x4280>
   15ac8:	mvn	r0, #99	; 0x63
   15acc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ad0:	ldr	r1, [r3, #24]
   15ad4:	ldr	r3, [r4, #48]	; 0x30
   15ad8:	and	r3, r3, #16
   15adc:	cmp	r3, #0
   15ae0:	beq	15b0c <__assert_fail@plt+0x42c0>
   15ae4:	ldr	r3, [r4, #48]	; 0x30
   15ae8:	and	r3, r3, #1
   15aec:	cmp	r3, #0
   15af0:	beq	15b04 <__assert_fail@plt+0x42b8>
   15af4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15af8:	ldr	r3, [r3, #48]	; 0x30
   15afc:	cmp	r3, #0
   15b00:	beq	15b0c <__assert_fail@plt+0x42c0>
   15b04:	mov	r2, #32768	; 0x8000
   15b08:	b	15b10 <__assert_fail@plt+0x42c4>
   15b0c:	mov	r2, #0
   15b10:	sub	r3, fp, #92	; 0x5c
   15b14:	bl	198fc <lchmod@@Base+0xb58>
   15b18:	mov	r3, r0
   15b1c:	mov	r2, r3
   15b20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b24:	str	r2, [r3, #12]
   15b28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b2c:	ldr	r3, [r3, #12]
   15b30:	cmp	r3, #0
   15b34:	bne	15b6c <__assert_fail@plt+0x4320>
   15b38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15b3c:	cmp	r3, #3
   15b40:	bne	15b64 <__assert_fail@plt+0x4318>
   15b44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b48:	mov	r2, #4
   15b4c:	strh	r2, [r3, #56]	; 0x38
   15b50:	bl	116c0 <__errno_location@plt>
   15b54:	mov	r3, r0
   15b58:	ldr	r2, [r3]
   15b5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b60:	str	r2, [r3, #32]
   15b64:	mov	r3, #0
   15b68:	b	164f8 <__assert_fail@plt+0x4cac>
   15b6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b70:	ldrh	r3, [r3, #56]	; 0x38
   15b74:	cmp	r3, #11
   15b78:	bne	15ba0 <__assert_fail@plt+0x4354>
   15b7c:	mov	r2, #0
   15b80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b84:	mov	r0, r4
   15b88:	bl	16518 <__assert_fail@plt+0x4ccc>
   15b8c:	mov	r3, r0
   15b90:	mov	r2, r3
   15b94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b98:	strh	r2, [r3, #56]	; 0x38
   15b9c:	b	15c04 <__assert_fail@plt+0x43b8>
   15ba0:	ldr	r3, [r4, #48]	; 0x30
   15ba4:	and	r3, r3, #256	; 0x100
   15ba8:	cmp	r3, #0
   15bac:	beq	15c04 <__assert_fail@plt+0x43b8>
   15bb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bb4:	mov	r0, r4
   15bb8:	bl	13fac <__assert_fail@plt+0x2760>
   15bbc:	mov	r2, #0
   15bc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bc4:	mov	r0, r4
   15bc8:	bl	16518 <__assert_fail@plt+0x4ccc>
   15bcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bd0:	mov	r0, r4
   15bd4:	bl	13e6c <__assert_fail@plt+0x2620>
   15bd8:	mov	r3, r0
   15bdc:	eor	r3, r3, #1
   15be0:	uxtb	r3, r3
   15be4:	cmp	r3, #0
   15be8:	beq	15c04 <__assert_fail@plt+0x43b8>
   15bec:	bl	116c0 <__errno_location@plt>
   15bf0:	mov	r2, r0
   15bf4:	mov	r3, #12
   15bf8:	str	r3, [r2]
   15bfc:	mov	r3, #0
   15c00:	b	164f8 <__assert_fail@plt+0x4cac>
   15c04:	ldr	r3, [r4, #44]	; 0x2c
   15c08:	cmp	r3, #0
   15c0c:	beq	15c18 <__assert_fail@plt+0x43cc>
   15c10:	mvn	r3, #0
   15c14:	b	15c1c <__assert_fail@plt+0x43d0>
   15c18:	ldr	r3, [pc, #2276]	; 16504 <__assert_fail@plt+0x4cb8>
   15c1c:	str	r3, [fp, #-56]	; 0xffffffc8
   15c20:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15c24:	cmp	r3, #0
   15c28:	beq	15c38 <__assert_fail@plt+0x43ec>
   15c2c:	mov	r3, #1
   15c30:	strb	r3, [fp, #-25]	; 0xffffffe7
   15c34:	b	15dd4 <__assert_fail@plt+0x4588>
   15c38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c3c:	cmp	r3, #2
   15c40:	beq	15ca8 <__assert_fail@plt+0x445c>
   15c44:	ldr	r3, [r4, #48]	; 0x30
   15c48:	and	r3, r3, #8
   15c4c:	cmp	r3, #0
   15c50:	beq	15ca0 <__assert_fail@plt+0x4454>
   15c54:	ldr	r3, [r4, #48]	; 0x30
   15c58:	and	r3, r3, #16
   15c5c:	cmp	r3, #0
   15c60:	beq	15ca0 <__assert_fail@plt+0x4454>
   15c64:	ldr	r3, [r4, #48]	; 0x30
   15c68:	and	r3, r3, #32
   15c6c:	cmp	r3, #0
   15c70:	bne	15ca0 <__assert_fail@plt+0x4454>
   15c74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c78:	ldr	r3, [r3, #84]	; 0x54
   15c7c:	cmp	r3, #2
   15c80:	bne	15ca0 <__assert_fail@plt+0x4454>
   15c84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15c88:	mov	r1, r3
   15c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c90:	bl	14e10 <__assert_fail@plt+0x35c4>
   15c94:	mov	r3, r0
   15c98:	cmp	r3, #0
   15c9c:	bne	15ca8 <__assert_fail@plt+0x445c>
   15ca0:	mov	r3, #1
   15ca4:	b	15cac <__assert_fail@plt+0x4460>
   15ca8:	mov	r3, #0
   15cac:	strb	r3, [fp, #-25]	; 0xffffffe7
   15cb0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15cb4:	and	r3, r3, #1
   15cb8:	strb	r3, [fp, #-25]	; 0xffffffe7
   15cbc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15cc0:	cmp	r3, #0
   15cc4:	bne	15cd4 <__assert_fail@plt+0x4488>
   15cc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ccc:	cmp	r3, #3
   15cd0:	bne	15dd4 <__assert_fail@plt+0x4588>
   15cd4:	ldr	r3, [r4, #48]	; 0x30
   15cd8:	and	r3, r3, #512	; 0x200
   15cdc:	cmp	r3, #0
   15ce0:	beq	15d00 <__assert_fail@plt+0x44b4>
   15ce4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ce8:	mov	r2, #3
   15cec:	ldr	r1, [pc, #2068]	; 16508 <__assert_fail@plt+0x4cbc>
   15cf0:	mov	r0, r3
   15cf4:	bl	1e530 <lchmod@@Base+0x578c>
   15cf8:	mov	r3, r0
   15cfc:	str	r3, [fp, #-92]	; 0xffffffa4
   15d00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d04:	cmp	r3, #0
   15d08:	blt	15d2c <__assert_fail@plt+0x44e0>
   15d0c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15d10:	mov	r3, #0
   15d14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d18:	mov	r0, r4
   15d1c:	bl	16c34 <__assert_fail@plt+0x53e8>
   15d20:	mov	r3, r0
   15d24:	cmp	r3, #0
   15d28:	beq	15dcc <__assert_fail@plt+0x4580>
   15d2c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15d30:	cmp	r3, #0
   15d34:	beq	15d58 <__assert_fail@plt+0x450c>
   15d38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15d3c:	cmp	r3, #3
   15d40:	bne	15d58 <__assert_fail@plt+0x450c>
   15d44:	bl	116c0 <__errno_location@plt>
   15d48:	mov	r3, r0
   15d4c:	ldr	r2, [r3]
   15d50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d54:	str	r2, [r3, #32]
   15d58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d5c:	ldrh	r3, [r3, #58]	; 0x3a
   15d60:	orr	r3, r3, #1
   15d64:	uxth	r2, r3
   15d68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d6c:	strh	r2, [r3, #58]	; 0x3a
   15d70:	mov	r3, #0
   15d74:	strb	r3, [fp, #-25]	; 0xffffffe7
   15d78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d7c:	ldr	r3, [r3, #12]
   15d80:	mov	r0, r3
   15d84:	bl	11834 <closedir@plt>
   15d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d8c:	mov	r2, #0
   15d90:	str	r2, [r3, #12]
   15d94:	ldr	r3, [r4, #48]	; 0x30
   15d98:	and	r3, r3, #512	; 0x200
   15d9c:	cmp	r3, #0
   15da0:	beq	15dbc <__assert_fail@plt+0x4570>
   15da4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15da8:	cmp	r3, #0
   15dac:	blt	15dbc <__assert_fail@plt+0x4570>
   15db0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15db4:	mov	r0, r3
   15db8:	bl	11804 <close@plt>
   15dbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dc0:	mov	r2, #0
   15dc4:	str	r2, [r3, #12]
   15dc8:	b	15dd4 <__assert_fail@plt+0x4588>
   15dcc:	mov	r3, #1
   15dd0:	strb	r3, [fp, #-25]	; 0xffffffe7
   15dd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dd8:	ldr	r2, [r3, #28]
   15ddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15de0:	ldr	r3, [r3, #40]	; 0x28
   15de4:	sub	r3, r3, #1
   15de8:	add	r3, r2, r3
   15dec:	ldrb	r3, [r3]
   15df0:	cmp	r3, #47	; 0x2f
   15df4:	bne	15e08 <__assert_fail@plt+0x45bc>
   15df8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dfc:	ldr	r3, [r3, #40]	; 0x28
   15e00:	sub	r3, r3, #1
   15e04:	b	15e10 <__assert_fail@plt+0x45c4>
   15e08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e0c:	ldr	r3, [r3, #40]	; 0x28
   15e10:	str	r3, [fp, #-60]	; 0xffffffc4
   15e14:	ldr	r3, [r4, #48]	; 0x30
   15e18:	and	r3, r3, #4
   15e1c:	cmp	r3, #0
   15e20:	beq	15e4c <__assert_fail@plt+0x4600>
   15e24:	ldr	r2, [r4, #24]
   15e28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15e2c:	add	r3, r2, r3
   15e30:	str	r3, [fp, #-36]	; 0xffffffdc
   15e34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e38:	add	r2, r3, #1
   15e3c:	str	r2, [fp, #-36]	; 0xffffffdc
   15e40:	mov	r2, #47	; 0x2f
   15e44:	strb	r2, [r3]
   15e48:	b	15e54 <__assert_fail@plt+0x4608>
   15e4c:	mov	r3, #0
   15e50:	str	r3, [fp, #-36]	; 0xffffffdc
   15e54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15e58:	add	r3, r3, #1
   15e5c:	str	r3, [fp, #-60]	; 0xffffffc4
   15e60:	ldr	r2, [r4, #36]	; 0x24
   15e64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15e68:	sub	r3, r2, r3
   15e6c:	str	r3, [fp, #-32]	; 0xffffffe0
   15e70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e74:	ldr	r3, [r3, #48]	; 0x30
   15e78:	add	r3, r3, #1
   15e7c:	str	r3, [fp, #-64]	; 0xffffffc0
   15e80:	mov	r3, #0
   15e84:	strb	r3, [fp, #-26]	; 0xffffffe6
   15e88:	mov	r7, #0
   15e8c:	mov	r3, #0
   15e90:	str	r3, [fp, #-24]	; 0xffffffe8
   15e94:	mov	r6, #0
   15e98:	b	162e8 <__assert_fail@plt+0x4a9c>
   15e9c:	bl	116c0 <__errno_location@plt>
   15ea0:	mov	r2, r0
   15ea4:	mov	r3, #0
   15ea8:	str	r3, [r2]
   15eac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15eb0:	ldr	r3, [r3, #12]
   15eb4:	mov	r0, r3
   15eb8:	bl	11750 <readdir64@plt>
   15ebc:	str	r0, [fp, #-68]	; 0xffffffbc
   15ec0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15ec4:	cmp	r3, #0
   15ec8:	bne	15f20 <__assert_fail@plt+0x46d4>
   15ecc:	bl	116c0 <__errno_location@plt>
   15ed0:	mov	r3, r0
   15ed4:	ldr	r3, [r3]
   15ed8:	cmp	r3, #0
   15edc:	beq	162fc <__assert_fail@plt+0x4ab0>
   15ee0:	bl	116c0 <__errno_location@plt>
   15ee4:	mov	r3, r0
   15ee8:	ldr	r2, [r3]
   15eec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ef0:	str	r2, [r3, #32]
   15ef4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15ef8:	cmp	r3, #0
   15efc:	bne	15f08 <__assert_fail@plt+0x46bc>
   15f00:	cmp	r6, #0
   15f04:	beq	15f10 <__assert_fail@plt+0x46c4>
   15f08:	mov	r2, #7
   15f0c:	b	15f14 <__assert_fail@plt+0x46c8>
   15f10:	mov	r2, #4
   15f14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f18:	strh	r2, [r3, #56]	; 0x38
   15f1c:	b	162fc <__assert_fail@plt+0x4ab0>
   15f20:	ldr	r3, [r4, #48]	; 0x30
   15f24:	and	r3, r3, #32
   15f28:	cmp	r3, #0
   15f2c:	bne	15f74 <__assert_fail@plt+0x4728>
   15f30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15f34:	ldrb	r3, [r3, #19]
   15f38:	cmp	r3, #46	; 0x2e
   15f3c:	bne	15f74 <__assert_fail@plt+0x4728>
   15f40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15f44:	ldrb	r3, [r3, #20]
   15f48:	cmp	r3, #0
   15f4c:	beq	162e8 <__assert_fail@plt+0x4a9c>
   15f50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15f54:	ldrb	r3, [r3, #20]
   15f58:	cmp	r3, #46	; 0x2e
   15f5c:	bne	15f74 <__assert_fail@plt+0x4728>
   15f60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15f64:	ldrb	r3, [r3, #21]
   15f68:	cmp	r3, #0
   15f6c:	bne	15f74 <__assert_fail@plt+0x4728>
   15f70:	b	162e8 <__assert_fail@plt+0x4a9c>
   15f74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15f78:	add	r3, r3, #19
   15f7c:	mov	r0, r3
   15f80:	bl	11684 <strlen@plt>
   15f84:	str	r0, [fp, #-72]	; 0xffffffb8
   15f88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15f8c:	add	r3, r3, #19
   15f90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15f94:	mov	r1, r3
   15f98:	mov	r0, r4
   15f9c:	bl	16890 <__assert_fail@plt+0x5044>
   15fa0:	mov	r5, r0
   15fa4:	cmp	r5, #0
   15fa8:	beq	15ff8 <__assert_fail@plt+0x47ac>
   15fac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15fb4:	cmp	r2, r3
   15fb8:	bcc	160b0 <__assert_fail@plt+0x4864>
   15fbc:	ldr	r3, [r4, #24]
   15fc0:	str	r3, [fp, #-76]	; 0xffffffb4
   15fc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15fc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15fcc:	add	r3, r2, r3
   15fd0:	add	r3, r3, #1
   15fd4:	mov	r1, r3
   15fd8:	mov	r0, r4
   15fdc:	bl	16994 <__assert_fail@plt+0x5148>
   15fe0:	mov	r3, r0
   15fe4:	eor	r3, r3, #1
   15fe8:	uxtb	r3, r3
   15fec:	cmp	r3, #0
   15ff0:	beq	16068 <__assert_fail@plt+0x481c>
   15ff4:	b	15ffc <__assert_fail@plt+0x47b0>
   15ff8:	nop			; (mov r0, r0)
   15ffc:	bl	116c0 <__errno_location@plt>
   16000:	mov	r3, r0
   16004:	ldr	r3, [r3]
   16008:	str	r3, [fp, #-88]	; 0xffffffa8
   1600c:	mov	r0, r5
   16010:	bl	13c50 <__assert_fail@plt+0x2404>
   16014:	mov	r0, r7
   16018:	bl	1694c <__assert_fail@plt+0x5100>
   1601c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16020:	ldr	r3, [r3, #12]
   16024:	mov	r0, r3
   16028:	bl	11834 <closedir@plt>
   1602c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16030:	mov	r2, #0
   16034:	str	r2, [r3, #12]
   16038:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1603c:	mov	r2, #7
   16040:	strh	r2, [r3, #56]	; 0x38
   16044:	ldr	r3, [r4, #48]	; 0x30
   16048:	orr	r3, r3, #8192	; 0x2000
   1604c:	str	r3, [r4, #48]	; 0x30
   16050:	bl	116c0 <__errno_location@plt>
   16054:	mov	r2, r0
   16058:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1605c:	str	r3, [r2]
   16060:	mov	r3, #0
   16064:	b	164f8 <__assert_fail@plt+0x4cac>
   16068:	ldr	r2, [r4, #24]
   1606c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16070:	cmp	r2, r3
   16074:	beq	160a0 <__assert_fail@plt+0x4854>
   16078:	mov	r3, #1
   1607c:	strb	r3, [fp, #-26]	; 0xffffffe6
   16080:	ldr	r3, [r4, #48]	; 0x30
   16084:	and	r3, r3, #4
   16088:	cmp	r3, #0
   1608c:	beq	160a0 <__assert_fail@plt+0x4854>
   16090:	ldr	r2, [r4, #24]
   16094:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16098:	add	r3, r2, r3
   1609c:	str	r3, [fp, #-36]	; 0xffffffdc
   160a0:	ldr	r2, [r4, #36]	; 0x24
   160a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   160a8:	sub	r3, r2, r3
   160ac:	str	r3, [fp, #-32]	; 0xffffffe0
   160b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   160b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   160b8:	add	r3, r2, r3
   160bc:	str	r3, [fp, #-80]	; 0xffffffb0
   160c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   160c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   160c8:	cmp	r2, r3
   160cc:	bcs	1612c <__assert_fail@plt+0x48e0>
   160d0:	mov	r0, r5
   160d4:	bl	13c50 <__assert_fail@plt+0x2404>
   160d8:	mov	r0, r7
   160dc:	bl	1694c <__assert_fail@plt+0x5100>
   160e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   160e4:	ldr	r3, [r3, #12]
   160e8:	mov	r0, r3
   160ec:	bl	11834 <closedir@plt>
   160f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   160f4:	mov	r2, #0
   160f8:	str	r2, [r3, #12]
   160fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16100:	mov	r2, #7
   16104:	strh	r2, [r3, #56]	; 0x38
   16108:	ldr	r3, [r4, #48]	; 0x30
   1610c:	orr	r3, r3, #8192	; 0x2000
   16110:	str	r3, [r4, #48]	; 0x30
   16114:	bl	116c0 <__errno_location@plt>
   16118:	mov	r2, r0
   1611c:	mov	r3, #36	; 0x24
   16120:	str	r3, [r2]
   16124:	mov	r3, #0
   16128:	b	164f8 <__assert_fail@plt+0x4cac>
   1612c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16130:	str	r3, [r5, #48]	; 0x30
   16134:	ldr	r3, [r4]
   16138:	str	r3, [r5, #4]
   1613c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16140:	str	r3, [r5, #40]	; 0x28
   16144:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16148:	ldrd	r2, [r3]
   1614c:	strd	r2, [r5, #160]	; 0xa0
   16150:	ldr	r3, [r4, #48]	; 0x30
   16154:	and	r3, r3, #4
   16158:	cmp	r3, #0
   1615c:	beq	16184 <__assert_fail@plt+0x4938>
   16160:	ldr	r3, [r5, #28]
   16164:	str	r3, [r5, #24]
   16168:	add	r1, r5, #168	; 0xa8
   1616c:	ldr	r3, [r5, #52]	; 0x34
   16170:	add	r3, r3, #1
   16174:	mov	r2, r3
   16178:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1617c:	bl	114a4 <memmove@plt>
   16180:	b	1618c <__assert_fail@plt+0x4940>
   16184:	add	r3, r5, #168	; 0xa8
   16188:	str	r3, [r5, #24]
   1618c:	ldr	r3, [r4, #44]	; 0x2c
   16190:	cmp	r3, #0
   16194:	beq	161a8 <__assert_fail@plt+0x495c>
   16198:	ldr	r3, [r4, #48]	; 0x30
   1619c:	and	r3, r3, #1024	; 0x400
   161a0:	cmp	r3, #0
   161a4:	beq	16268 <__assert_fail@plt+0x4a1c>
   161a8:	ldr	r3, [r4, #48]	; 0x30
   161ac:	and	r3, r3, #8
   161b0:	cmp	r3, #0
   161b4:	beq	16200 <__assert_fail@plt+0x49b4>
   161b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   161bc:	ldrb	r3, [r3, #18]
   161c0:	cmp	r3, #0
   161c4:	beq	16200 <__assert_fail@plt+0x49b4>
   161c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   161cc:	ldrb	r3, [r3, #18]
   161d0:	cmp	r3, #4
   161d4:	beq	16200 <__assert_fail@plt+0x49b4>
   161d8:	ldr	r3, [r4, #48]	; 0x30
   161dc:	and	r3, r3, #16
   161e0:	cmp	r3, #0
   161e4:	bne	161f8 <__assert_fail@plt+0x49ac>
   161e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   161ec:	ldrb	r3, [r3, #18]
   161f0:	cmp	r3, #10
   161f4:	beq	16200 <__assert_fail@plt+0x49b4>
   161f8:	mov	r3, #1
   161fc:	b	16204 <__assert_fail@plt+0x49b8>
   16200:	mov	r3, #0
   16204:	strb	r3, [fp, #-81]	; 0xffffffaf
   16208:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   1620c:	and	r3, r3, #1
   16210:	strb	r3, [fp, #-81]	; 0xffffffaf
   16214:	mov	r3, #11
   16218:	strh	r3, [r5, #56]	; 0x38
   1621c:	add	r2, r5, #64	; 0x40
   16220:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16224:	ldrb	r3, [r3, #18]
   16228:	mov	r1, r3
   1622c:	mov	r0, r2
   16230:	bl	15910 <__assert_fail@plt+0x40c4>
   16234:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   16238:	cmp	r3, #0
   1623c:	movne	r3, #1
   16240:	moveq	r3, #0
   16244:	uxtb	r3, r3
   16248:	eor	r3, r3, #1
   1624c:	uxtb	r3, r3
   16250:	and	r3, r3, #1
   16254:	uxtb	r3, r3
   16258:	mov	r1, r3
   1625c:	mov	r0, r5
   16260:	bl	141b4 <__assert_fail@plt+0x2968>
   16264:	b	16280 <__assert_fail@plt+0x4a34>
   16268:	mov	r2, #0
   1626c:	mov	r1, r5
   16270:	mov	r0, r4
   16274:	bl	16518 <__assert_fail@plt+0x4ccc>
   16278:	mov	r3, r0
   1627c:	strh	r3, [r5, #56]	; 0x38
   16280:	mov	r3, #0
   16284:	str	r3, [r5, #8]
   16288:	cmp	r7, #0
   1628c:	bne	1629c <__assert_fail@plt+0x4a50>
   16290:	str	r5, [fp, #-24]	; 0xffffffe8
   16294:	ldr	r7, [fp, #-24]	; 0xffffffe8
   16298:	b	162a8 <__assert_fail@plt+0x4a5c>
   1629c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162a0:	str	r5, [r3, #8]
   162a4:	str	r5, [fp, #-24]	; 0xffffffe8
   162a8:	ldr	r3, [pc, #604]	; 1650c <__assert_fail@plt+0x4cc0>
   162ac:	cmp	r6, r3
   162b0:	bne	162d8 <__assert_fail@plt+0x4a8c>
   162b4:	ldr	r3, [r4, #44]	; 0x2c
   162b8:	cmp	r3, #0
   162bc:	bne	162d8 <__assert_fail@plt+0x4a8c>
   162c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   162c4:	mov	r1, r3
   162c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162cc:	bl	14da4 <__assert_fail@plt+0x3558>
   162d0:	mov	r3, r0
   162d4:	strb	r3, [fp, #-37]	; 0xffffffdb
   162d8:	add	r6, r6, #1
   162dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   162e0:	cmp	r3, r6
   162e4:	bls	16330 <__assert_fail@plt+0x4ae4>
   162e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162ec:	ldr	r3, [r3, #12]
   162f0:	cmp	r3, #0
   162f4:	bne	15e9c <__assert_fail@plt+0x4650>
   162f8:	b	16300 <__assert_fail@plt+0x4ab4>
   162fc:	nop			; (mov r0, r0)
   16300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16304:	ldr	r3, [r3, #12]
   16308:	cmp	r3, #0
   1630c:	beq	16334 <__assert_fail@plt+0x4ae8>
   16310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16314:	ldr	r3, [r3, #12]
   16318:	mov	r0, r3
   1631c:	bl	11834 <closedir@plt>
   16320:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16324:	mov	r2, #0
   16328:	str	r2, [r3, #12]
   1632c:	b	16334 <__assert_fail@plt+0x4ae8>
   16330:	nop			; (mov r0, r0)
   16334:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   16338:	cmp	r3, #0
   1633c:	beq	1634c <__assert_fail@plt+0x4b00>
   16340:	mov	r1, r7
   16344:	mov	r0, r4
   16348:	bl	16a80 <__assert_fail@plt+0x5234>
   1634c:	ldr	r3, [r4, #48]	; 0x30
   16350:	and	r3, r3, #4
   16354:	cmp	r3, #0
   16358:	beq	1638c <__assert_fail@plt+0x4b40>
   1635c:	ldr	r2, [r4, #36]	; 0x24
   16360:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16364:	cmp	r2, r3
   16368:	beq	16374 <__assert_fail@plt+0x4b28>
   1636c:	cmp	r6, #0
   16370:	bne	16380 <__assert_fail@plt+0x4b34>
   16374:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16378:	sub	r3, r3, #1
   1637c:	str	r3, [fp, #-36]	; 0xffffffdc
   16380:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16384:	mov	r2, #0
   16388:	strb	r2, [r3]
   1638c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   16390:	eor	r3, r3, #1
   16394:	uxtb	r3, r3
   16398:	cmp	r3, #0
   1639c:	beq	1644c <__assert_fail@plt+0x4c00>
   163a0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   163a4:	cmp	r3, #0
   163a8:	beq	1644c <__assert_fail@plt+0x4c00>
   163ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   163b0:	cmp	r3, #1
   163b4:	beq	163c0 <__assert_fail@plt+0x4b74>
   163b8:	cmp	r6, #0
   163bc:	bne	1644c <__assert_fail@plt+0x4c00>
   163c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   163c4:	ldr	r3, [r3, #48]	; 0x30
   163c8:	cmp	r3, #0
   163cc:	bne	163f0 <__assert_fail@plt+0x4ba4>
   163d0:	mov	r0, r4
   163d4:	bl	142d8 <__assert_fail@plt+0x2a8c>
   163d8:	mov	r3, r0
   163dc:	cmp	r3, #0
   163e0:	movne	r3, #1
   163e4:	moveq	r3, #0
   163e8:	uxtb	r3, r3
   163ec:	b	1641c <__assert_fail@plt+0x4bd0>
   163f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   163f4:	ldr	r1, [r3, #4]
   163f8:	ldr	r3, [pc, #272]	; 16510 <__assert_fail@plt+0x4cc4>
   163fc:	mvn	r2, #0
   16400:	mov	r0, r4
   16404:	bl	16c34 <__assert_fail@plt+0x53e8>
   16408:	mov	r3, r0
   1640c:	cmp	r3, #0
   16410:	movne	r3, #1
   16414:	moveq	r3, #0
   16418:	uxtb	r3, r3
   1641c:	cmp	r3, #0
   16420:	beq	1644c <__assert_fail@plt+0x4c00>
   16424:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16428:	mov	r2, #7
   1642c:	strh	r2, [r3, #56]	; 0x38
   16430:	ldr	r3, [r4, #48]	; 0x30
   16434:	orr	r3, r3, #8192	; 0x2000
   16438:	str	r3, [r4, #48]	; 0x30
   1643c:	mov	r0, r7
   16440:	bl	1694c <__assert_fail@plt+0x5100>
   16444:	mov	r3, #0
   16448:	b	164f8 <__assert_fail@plt+0x4cac>
   1644c:	cmp	r6, #0
   16450:	bne	1649c <__assert_fail@plt+0x4c50>
   16454:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16458:	cmp	r3, #3
   1645c:	bne	1648c <__assert_fail@plt+0x4c40>
   16460:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16464:	ldrh	r3, [r3, #56]	; 0x38
   16468:	cmp	r3, #4
   1646c:	beq	1648c <__assert_fail@plt+0x4c40>
   16470:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16474:	ldrh	r3, [r3, #56]	; 0x38
   16478:	cmp	r3, #7
   1647c:	beq	1648c <__assert_fail@plt+0x4c40>
   16480:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16484:	mov	r2, #6
   16488:	strh	r2, [r3, #56]	; 0x38
   1648c:	mov	r0, r7
   16490:	bl	1694c <__assert_fail@plt+0x5100>
   16494:	mov	r3, #0
   16498:	b	164f8 <__assert_fail@plt+0x4cac>
   1649c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   164a0:	cmp	r3, #0
   164a4:	beq	164cc <__assert_fail@plt+0x4c80>
   164a8:	ldr	r3, [pc, #100]	; 16514 <__assert_fail@plt+0x4cc8>
   164ac:	str	r3, [r4, #44]	; 0x2c
   164b0:	mov	r2, r6
   164b4:	mov	r1, r7
   164b8:	mov	r0, r4
   164bc:	bl	16748 <__assert_fail@plt+0x4efc>
   164c0:	mov	r7, r0
   164c4:	mov	r3, #0
   164c8:	str	r3, [r4, #44]	; 0x2c
   164cc:	ldr	r3, [r4, #44]	; 0x2c
   164d0:	cmp	r3, #0
   164d4:	beq	164f4 <__assert_fail@plt+0x4ca8>
   164d8:	cmp	r6, #1
   164dc:	bls	164f4 <__assert_fail@plt+0x4ca8>
   164e0:	mov	r2, r6
   164e4:	mov	r1, r7
   164e8:	mov	r0, r4
   164ec:	bl	16748 <__assert_fail@plt+0x4efc>
   164f0:	mov	r7, r0
   164f4:	mov	r3, r7
   164f8:	mov	r0, r3
   164fc:	sub	sp, fp, #20
   16500:	pop	{r4, r5, r6, r7, fp, pc}
   16504:	andeq	r8, r1, r0, lsr #13
   16508:	andeq	r0, r0, r6, lsl #8
   1650c:	andeq	r2, r0, r0, lsl r7
   16510:	andeq	r0, r2, ip, ror #3
   16514:	andeq	r5, r1, ip, lsl #17
   16518:	push	{r4, fp, lr}
   1651c:	add	fp, sp, #8
   16520:	sub	sp, sp, #20
   16524:	str	r0, [fp, #-24]	; 0xffffffe8
   16528:	mov	r4, r1
   1652c:	mov	r3, r2
   16530:	strb	r3, [fp, #-25]	; 0xffffffe7
   16534:	add	r3, r4, #64	; 0x40
   16538:	str	r3, [fp, #-16]
   1653c:	ldr	r3, [r4, #48]	; 0x30
   16540:	cmp	r3, #0
   16544:	bne	16564 <__assert_fail@plt+0x4d18>
   16548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1654c:	ldr	r3, [r3, #48]	; 0x30
   16550:	and	r3, r3, #1
   16554:	cmp	r3, #0
   16558:	beq	16564 <__assert_fail@plt+0x4d18>
   1655c:	mov	r3, #1
   16560:	strb	r3, [fp, #-25]	; 0xffffffe7
   16564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16568:	ldr	r3, [r3, #48]	; 0x30
   1656c:	and	r3, r3, #2
   16570:	cmp	r3, #0
   16574:	bne	16584 <__assert_fail@plt+0x4d38>
   16578:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1657c:	cmp	r3, #0
   16580:	beq	165fc <__assert_fail@plt+0x4db0>
   16584:	ldr	r3, [r4, #24]
   16588:	ldr	r1, [fp, #-16]
   1658c:	mov	r0, r3
   16590:	bl	1fb90 <lchmod@@Base+0x6dec>
   16594:	mov	r3, r0
   16598:	cmp	r3, #0
   1659c:	beq	16648 <__assert_fail@plt+0x4dfc>
   165a0:	bl	116c0 <__errno_location@plt>
   165a4:	mov	r3, r0
   165a8:	ldr	r3, [r3]
   165ac:	cmp	r3, #2
   165b0:	bne	165e8 <__assert_fail@plt+0x4d9c>
   165b4:	ldr	r3, [r4, #24]
   165b8:	ldr	r1, [fp, #-16]
   165bc:	mov	r0, r3
   165c0:	bl	1fbb0 <lchmod@@Base+0x6e0c>
   165c4:	mov	r3, r0
   165c8:	cmp	r3, #0
   165cc:	bne	165e8 <__assert_fail@plt+0x4d9c>
   165d0:	bl	116c0 <__errno_location@plt>
   165d4:	mov	r2, r0
   165d8:	mov	r3, #0
   165dc:	str	r3, [r2]
   165e0:	mov	r3, #13
   165e4:	b	166ec <__assert_fail@plt+0x4ea0>
   165e8:	bl	116c0 <__errno_location@plt>
   165ec:	mov	r3, r0
   165f0:	ldr	r3, [r3]
   165f4:	str	r3, [r4, #32]
   165f8:	b	16630 <__assert_fail@plt+0x4de4>
   165fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16600:	ldr	r0, [r3, #32]
   16604:	ldr	r1, [r4, #24]
   16608:	mov	r3, #256	; 0x100
   1660c:	ldr	r2, [fp, #-16]
   16610:	bl	1fbc0 <lchmod@@Base+0x6e1c>
   16614:	mov	r3, r0
   16618:	cmp	r3, #0
   1661c:	beq	16648 <__assert_fail@plt+0x4dfc>
   16620:	bl	116c0 <__errno_location@plt>
   16624:	mov	r3, r0
   16628:	ldr	r3, [r3]
   1662c:	str	r3, [r4, #32]
   16630:	mov	r2, #104	; 0x68
   16634:	mov	r1, #0
   16638:	ldr	r0, [fp, #-16]
   1663c:	bl	116d8 <memset@plt>
   16640:	mov	r3, #10
   16644:	b	166ec <__assert_fail@plt+0x4ea0>
   16648:	ldr	r3, [fp, #-16]
   1664c:	ldr	r3, [r3, #16]
   16650:	and	r3, r3, #61440	; 0xf000
   16654:	cmp	r3, #16384	; 0x4000
   16658:	bne	166b0 <__assert_fail@plt+0x4e64>
   1665c:	ldrb	r3, [r4, #168]	; 0xa8
   16660:	cmp	r3, #46	; 0x2e
   16664:	bne	166a8 <__assert_fail@plt+0x4e5c>
   16668:	ldrb	r3, [r4, #169]	; 0xa9
   1666c:	cmp	r3, #0
   16670:	beq	1668c <__assert_fail@plt+0x4e40>
   16674:	ldrb	r3, [r4, #169]	; 0xa9
   16678:	cmp	r3, #46	; 0x2e
   1667c:	bne	166a8 <__assert_fail@plt+0x4e5c>
   16680:	ldrb	r3, [r4, #170]	; 0xaa
   16684:	cmp	r3, #0
   16688:	bne	166a8 <__assert_fail@plt+0x4e5c>
   1668c:	ldr	r3, [r4, #48]	; 0x30
   16690:	cmp	r3, #0
   16694:	bne	166a0 <__assert_fail@plt+0x4e54>
   16698:	mov	r3, #1
   1669c:	b	166ec <__assert_fail@plt+0x4ea0>
   166a0:	mov	r3, #5
   166a4:	b	166ec <__assert_fail@plt+0x4ea0>
   166a8:	mov	r3, #1
   166ac:	b	166ec <__assert_fail@plt+0x4ea0>
   166b0:	ldr	r3, [fp, #-16]
   166b4:	ldr	r3, [r3, #16]
   166b8:	and	r3, r3, #61440	; 0xf000
   166bc:	cmp	r3, #40960	; 0xa000
   166c0:	bne	166cc <__assert_fail@plt+0x4e80>
   166c4:	mov	r3, #12
   166c8:	b	166ec <__assert_fail@plt+0x4ea0>
   166cc:	ldr	r3, [fp, #-16]
   166d0:	ldr	r3, [r3, #16]
   166d4:	and	r3, r3, #61440	; 0xf000
   166d8:	cmp	r3, #32768	; 0x8000
   166dc:	bne	166e8 <__assert_fail@plt+0x4e9c>
   166e0:	mov	r3, #8
   166e4:	b	166ec <__assert_fail@plt+0x4ea0>
   166e8:	mov	r3, #3
   166ec:	mov	r0, r3
   166f0:	sub	sp, fp, #8
   166f4:	pop	{r4, fp, pc}
   166f8:	push	{fp, lr}
   166fc:	add	fp, sp, #4
   16700:	sub	sp, sp, #16
   16704:	str	r0, [fp, #-16]
   16708:	str	r1, [fp, #-20]	; 0xffffffec
   1670c:	ldr	r3, [fp, #-16]
   16710:	str	r3, [fp, #-8]
   16714:	ldr	r3, [fp, #-20]	; 0xffffffec
   16718:	str	r3, [fp, #-12]
   1671c:	ldr	r3, [fp, #-8]
   16720:	ldr	r3, [r3]
   16724:	ldr	r3, [r3, #44]	; 0x2c
   16728:	ldr	r3, [r3, #44]	; 0x2c
   1672c:	ldr	r1, [fp, #-12]
   16730:	ldr	r0, [fp, #-8]
   16734:	blx	r3
   16738:	mov	r3, r0
   1673c:	mov	r0, r3
   16740:	sub	sp, fp, #4
   16744:	pop	{fp, pc}
   16748:	push	{r4, r5, r6, fp, lr}
   1674c:	add	fp, sp, #16
   16750:	sub	sp, sp, #28
   16754:	str	r0, [fp, #-40]	; 0xffffffd8
   16758:	str	r1, [fp, #-44]	; 0xffffffd4
   1675c:	mov	r5, r2
   16760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16764:	ldr	r3, [r3, #44]	; 0x2c
   16768:	str	r3, [fp, #-24]	; 0xffffffe8
   1676c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16770:	ldr	r3, [r3, #40]	; 0x28
   16774:	cmp	r3, r5
   16778:	bcs	16804 <__assert_fail@plt+0x4fb8>
   1677c:	add	r2, r5, #40	; 0x28
   16780:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16784:	str	r2, [r3, #40]	; 0x28
   16788:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1678c:	ldr	r3, [r3, #40]	; 0x28
   16790:	cmn	r3, #-1073741823	; 0xc0000001
   16794:	bhi	167c8 <__assert_fail@plt+0x4f7c>
   16798:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1679c:	ldr	r2, [r3, #8]
   167a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167a4:	ldr	r3, [r3, #40]	; 0x28
   167a8:	lsl	r3, r3, #2
   167ac:	mov	r1, r3
   167b0:	mov	r0, r2
   167b4:	bl	1dc20 <lchmod@@Base+0x4e7c>
   167b8:	str	r0, [fp, #-28]	; 0xffffffe4
   167bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167c0:	cmp	r3, #0
   167c4:	bne	167f8 <__assert_fail@plt+0x4fac>
   167c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167cc:	ldr	r3, [r3, #8]
   167d0:	mov	r0, r3
   167d4:	bl	13c50 <__assert_fail@plt+0x2404>
   167d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167dc:	mov	r2, #0
   167e0:	str	r2, [r3, #8]
   167e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167e8:	mov	r2, #0
   167ec:	str	r2, [r3, #40]	; 0x28
   167f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   167f4:	b	16884 <__assert_fail@plt+0x5038>
   167f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16800:	str	r2, [r3, #8]
   16804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16808:	ldr	r4, [r3, #8]
   1680c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16810:	b	16824 <__assert_fail@plt+0x4fd8>
   16814:	mov	r3, r4
   16818:	add	r4, r3, #4
   1681c:	str	r6, [r3]
   16820:	ldr	r6, [r6, #8]
   16824:	cmp	r6, #0
   16828:	bne	16814 <__assert_fail@plt+0x4fc8>
   1682c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16830:	ldr	r0, [r3, #8]
   16834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16838:	mov	r2, #4
   1683c:	mov	r1, r5
   16840:	bl	1178c <qsort@plt>
   16844:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16848:	ldr	r4, [r3, #8]
   1684c:	ldr	r3, [r4]
   16850:	str	r3, [fp, #-44]	; 0xffffffd4
   16854:	b	16868 <__assert_fail@plt+0x501c>
   16858:	ldr	r3, [r4]
   1685c:	ldr	r2, [r4, #4]
   16860:	str	r2, [r3, #8]
   16864:	add	r4, r4, #4
   16868:	sub	r5, r5, #1
   1686c:	cmp	r5, #0
   16870:	bne	16858 <__assert_fail@plt+0x500c>
   16874:	ldr	r3, [r4]
   16878:	mov	r2, #0
   1687c:	str	r2, [r3, #8]
   16880:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16884:	mov	r0, r3
   16888:	sub	sp, fp, #16
   1688c:	pop	{r4, r5, r6, fp, pc}
   16890:	push	{r4, r5, fp, lr}
   16894:	add	fp, sp, #12
   16898:	sub	sp, sp, #16
   1689c:	str	r0, [fp, #-24]	; 0xffffffe8
   168a0:	str	r1, [fp, #-28]	; 0xffffffe4
   168a4:	mov	r5, r2
   168a8:	add	r3, r5, #176	; 0xb0
   168ac:	bic	r3, r3, #7
   168b0:	str	r3, [fp, #-16]
   168b4:	ldr	r0, [fp, #-16]
   168b8:	bl	1db78 <lchmod@@Base+0x4dd4>
   168bc:	mov	r3, r0
   168c0:	mov	r4, r3
   168c4:	cmp	r4, #0
   168c8:	bne	168d4 <__assert_fail@plt+0x5088>
   168cc:	mov	r3, #0
   168d0:	b	16940 <__assert_fail@plt+0x50f4>
   168d4:	add	r3, r4, #168	; 0xa8
   168d8:	mov	r2, r5
   168dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   168e0:	mov	r0, r3
   168e4:	bl	114d4 <memcpy@plt>
   168e8:	add	r3, r4, r5
   168ec:	mov	r2, #0
   168f0:	strb	r2, [r3, #168]	; 0xa8
   168f4:	str	r5, [r4, #52]	; 0x34
   168f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168fc:	str	r3, [r4, #44]	; 0x2c
   16900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16904:	ldr	r3, [r3, #24]
   16908:	str	r3, [r4, #28]
   1690c:	mov	r3, #0
   16910:	str	r3, [r4, #32]
   16914:	mov	r3, #0
   16918:	str	r3, [r4, #12]
   1691c:	mov	r3, #0
   16920:	strh	r3, [r4, #58]	; 0x3a
   16924:	mov	r3, #3
   16928:	strh	r3, [r4, #60]	; 0x3c
   1692c:	mov	r3, #0
   16930:	str	r3, [r4, #16]
   16934:	mov	r3, #0
   16938:	str	r3, [r4, #20]
   1693c:	mov	r3, r4
   16940:	mov	r0, r3
   16944:	sub	sp, fp, #12
   16948:	pop	{r4, r5, fp, pc}
   1694c:	push	{r4, r5, fp, lr}
   16950:	add	fp, sp, #12
   16954:	mov	r5, r0
   16958:	b	16980 <__assert_fail@plt+0x5134>
   1695c:	ldr	r5, [r5, #8]
   16960:	ldr	r3, [r4, #12]
   16964:	cmp	r3, #0
   16968:	beq	16978 <__assert_fail@plt+0x512c>
   1696c:	ldr	r3, [r4, #12]
   16970:	mov	r0, r3
   16974:	bl	11834 <closedir@plt>
   16978:	mov	r0, r4
   1697c:	bl	13c50 <__assert_fail@plt+0x2404>
   16980:	mov	r4, r5
   16984:	cmp	r4, #0
   16988:	bne	1695c <__assert_fail@plt+0x5110>
   1698c:	nop			; (mov r0, r0)
   16990:	pop	{r4, r5, fp, pc}
   16994:	push	{fp, lr}
   16998:	add	fp, sp, #4
   1699c:	sub	sp, sp, #16
   169a0:	str	r0, [fp, #-16]
   169a4:	str	r1, [fp, #-20]	; 0xffffffec
   169a8:	ldr	r3, [fp, #-16]
   169ac:	ldr	r2, [r3, #36]	; 0x24
   169b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169b4:	add	r3, r2, r3
   169b8:	add	r3, r3, #256	; 0x100
   169bc:	str	r3, [fp, #-8]
   169c0:	ldr	r3, [fp, #-16]
   169c4:	ldr	r2, [r3, #36]	; 0x24
   169c8:	ldr	r3, [fp, #-8]
   169cc:	cmp	r2, r3
   169d0:	bls	16a08 <__assert_fail@plt+0x51bc>
   169d4:	ldr	r3, [fp, #-16]
   169d8:	ldr	r3, [r3, #24]
   169dc:	mov	r0, r3
   169e0:	bl	13c50 <__assert_fail@plt+0x2404>
   169e4:	ldr	r3, [fp, #-16]
   169e8:	mov	r2, #0
   169ec:	str	r2, [r3, #24]
   169f0:	bl	116c0 <__errno_location@plt>
   169f4:	mov	r2, r0
   169f8:	mov	r3, #36	; 0x24
   169fc:	str	r3, [r2]
   16a00:	mov	r3, #0
   16a04:	b	16a74 <__assert_fail@plt+0x5228>
   16a08:	ldr	r3, [fp, #-16]
   16a0c:	ldr	r2, [fp, #-8]
   16a10:	str	r2, [r3, #36]	; 0x24
   16a14:	ldr	r3, [fp, #-16]
   16a18:	ldr	r2, [r3, #24]
   16a1c:	ldr	r3, [fp, #-16]
   16a20:	ldr	r3, [r3, #36]	; 0x24
   16a24:	mov	r1, r3
   16a28:	mov	r0, r2
   16a2c:	bl	1dc20 <lchmod@@Base+0x4e7c>
   16a30:	str	r0, [fp, #-12]
   16a34:	ldr	r3, [fp, #-12]
   16a38:	cmp	r3, #0
   16a3c:	bne	16a64 <__assert_fail@plt+0x5218>
   16a40:	ldr	r3, [fp, #-16]
   16a44:	ldr	r3, [r3, #24]
   16a48:	mov	r0, r3
   16a4c:	bl	13c50 <__assert_fail@plt+0x2404>
   16a50:	ldr	r3, [fp, #-16]
   16a54:	mov	r2, #0
   16a58:	str	r2, [r3, #24]
   16a5c:	mov	r3, #0
   16a60:	b	16a74 <__assert_fail@plt+0x5228>
   16a64:	ldr	r3, [fp, #-16]
   16a68:	ldr	r2, [fp, #-12]
   16a6c:	str	r2, [r3, #24]
   16a70:	mov	r3, #1
   16a74:	mov	r0, r3
   16a78:	sub	sp, fp, #4
   16a7c:	pop	{fp, pc}
   16a80:	push	{fp}		; (str fp, [sp, #-4]!)
   16a84:	add	fp, sp, #0
   16a88:	sub	sp, sp, #20
   16a8c:	str	r0, [fp, #-16]
   16a90:	str	r1, [fp, #-20]	; 0xffffffec
   16a94:	ldr	r3, [fp, #-16]
   16a98:	ldr	r3, [r3, #24]
   16a9c:	str	r3, [fp, #-12]
   16aa0:	ldr	r3, [fp, #-16]
   16aa4:	ldr	r3, [r3, #4]
   16aa8:	str	r3, [fp, #-8]
   16aac:	b	16b0c <__assert_fail@plt+0x52c0>
   16ab0:	ldr	r3, [fp, #-8]
   16ab4:	ldr	r2, [r3, #24]
   16ab8:	ldr	r3, [fp, #-8]
   16abc:	add	r3, r3, #168	; 0xa8
   16ac0:	cmp	r2, r3
   16ac4:	beq	16af4 <__assert_fail@plt+0x52a8>
   16ac8:	ldr	r3, [fp, #-8]
   16acc:	ldr	r3, [r3, #24]
   16ad0:	mov	r2, r3
   16ad4:	ldr	r3, [fp, #-8]
   16ad8:	ldr	r3, [r3, #28]
   16adc:	sub	r3, r2, r3
   16ae0:	mov	r2, r3
   16ae4:	ldr	r3, [fp, #-12]
   16ae8:	add	r2, r3, r2
   16aec:	ldr	r3, [fp, #-8]
   16af0:	str	r2, [r3, #24]
   16af4:	ldr	r3, [fp, #-8]
   16af8:	ldr	r2, [fp, #-12]
   16afc:	str	r2, [r3, #28]
   16b00:	ldr	r3, [fp, #-8]
   16b04:	ldr	r3, [r3, #8]
   16b08:	str	r3, [fp, #-8]
   16b0c:	ldr	r3, [fp, #-8]
   16b10:	cmp	r3, #0
   16b14:	bne	16ab0 <__assert_fail@plt+0x5264>
   16b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b1c:	str	r3, [fp, #-8]
   16b20:	b	16b9c <__assert_fail@plt+0x5350>
   16b24:	ldr	r3, [fp, #-8]
   16b28:	ldr	r2, [r3, #24]
   16b2c:	ldr	r3, [fp, #-8]
   16b30:	add	r3, r3, #168	; 0xa8
   16b34:	cmp	r2, r3
   16b38:	beq	16b68 <__assert_fail@plt+0x531c>
   16b3c:	ldr	r3, [fp, #-8]
   16b40:	ldr	r3, [r3, #24]
   16b44:	mov	r2, r3
   16b48:	ldr	r3, [fp, #-8]
   16b4c:	ldr	r3, [r3, #28]
   16b50:	sub	r3, r2, r3
   16b54:	mov	r2, r3
   16b58:	ldr	r3, [fp, #-12]
   16b5c:	add	r2, r3, r2
   16b60:	ldr	r3, [fp, #-8]
   16b64:	str	r2, [r3, #24]
   16b68:	ldr	r3, [fp, #-8]
   16b6c:	ldr	r2, [fp, #-12]
   16b70:	str	r2, [r3, #28]
   16b74:	ldr	r3, [fp, #-8]
   16b78:	ldr	r3, [r3, #8]
   16b7c:	cmp	r3, #0
   16b80:	beq	16b90 <__assert_fail@plt+0x5344>
   16b84:	ldr	r3, [fp, #-8]
   16b88:	ldr	r3, [r3, #8]
   16b8c:	b	16b98 <__assert_fail@plt+0x534c>
   16b90:	ldr	r3, [fp, #-8]
   16b94:	ldr	r3, [r3, #4]
   16b98:	str	r3, [fp, #-8]
   16b9c:	ldr	r3, [fp, #-8]
   16ba0:	ldr	r3, [r3, #48]	; 0x30
   16ba4:	cmp	r3, #0
   16ba8:	bge	16b24 <__assert_fail@plt+0x52d8>
   16bac:	nop			; (mov r0, r0)
   16bb0:	add	sp, fp, #0
   16bb4:	pop	{fp}		; (ldr fp, [sp], #4)
   16bb8:	bx	lr
   16bbc:	push	{fp, lr}
   16bc0:	add	fp, sp, #4
   16bc4:	sub	sp, sp, #16
   16bc8:	str	r0, [fp, #-16]
   16bcc:	mov	r3, #0
   16bd0:	str	r3, [fp, #-8]
   16bd4:	b	16c10 <__assert_fail@plt+0x53c4>
   16bd8:	ldr	r3, [fp, #-16]
   16bdc:	ldr	r3, [r3]
   16be0:	mov	r0, r3
   16be4:	bl	11684 <strlen@plt>
   16be8:	str	r0, [fp, #-12]
   16bec:	ldr	r2, [fp, #-12]
   16bf0:	ldr	r3, [fp, #-8]
   16bf4:	cmp	r2, r3
   16bf8:	bls	16c04 <__assert_fail@plt+0x53b8>
   16bfc:	ldr	r3, [fp, #-12]
   16c00:	str	r3, [fp, #-8]
   16c04:	ldr	r3, [fp, #-16]
   16c08:	add	r3, r3, #4
   16c0c:	str	r3, [fp, #-16]
   16c10:	ldr	r3, [fp, #-16]
   16c14:	ldr	r3, [r3]
   16c18:	cmp	r3, #0
   16c1c:	bne	16bd8 <__assert_fail@plt+0x538c>
   16c20:	ldr	r3, [fp, #-8]
   16c24:	add	r3, r3, #1
   16c28:	mov	r0, r3
   16c2c:	sub	sp, fp, #4
   16c30:	pop	{fp, pc}
   16c34:	push	{fp, lr}
   16c38:	add	fp, sp, #4
   16c3c:	sub	sp, sp, #144	; 0x90
   16c40:	str	r0, [fp, #-136]	; 0xffffff78
   16c44:	str	r1, [fp, #-140]	; 0xffffff74
   16c48:	str	r2, [fp, #-144]	; 0xffffff70
   16c4c:	str	r3, [fp, #-148]	; 0xffffff6c
   16c50:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16c54:	cmp	r3, #0
   16c58:	beq	16c7c <__assert_fail@plt+0x5430>
   16c5c:	ldr	r1, [pc, #632]	; 16edc <__assert_fail@plt+0x5690>
   16c60:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16c64:	bl	11468 <strcmp@plt>
   16c68:	mov	r3, r0
   16c6c:	cmp	r3, #0
   16c70:	bne	16c7c <__assert_fail@plt+0x5430>
   16c74:	mov	r3, #1
   16c78:	b	16c80 <__assert_fail@plt+0x5434>
   16c7c:	mov	r3, #0
   16c80:	strb	r3, [fp, #-13]
   16c84:	ldrb	r3, [fp, #-13]
   16c88:	and	r3, r3, #1
   16c8c:	strb	r3, [fp, #-13]
   16c90:	ldr	r3, [fp, #-136]	; 0xffffff78
   16c94:	ldr	r3, [r3, #48]	; 0x30
   16c98:	and	r3, r3, #4
   16c9c:	cmp	r3, #0
   16ca0:	beq	16cd4 <__assert_fail@plt+0x5488>
   16ca4:	ldr	r3, [fp, #-136]	; 0xffffff78
   16ca8:	ldr	r3, [r3, #48]	; 0x30
   16cac:	and	r3, r3, #512	; 0x200
   16cb0:	cmp	r3, #0
   16cb4:	beq	16ccc <__assert_fail@plt+0x5480>
   16cb8:	ldr	r3, [fp, #-144]	; 0xffffff70
   16cbc:	cmp	r3, #0
   16cc0:	blt	16ccc <__assert_fail@plt+0x5480>
   16cc4:	ldr	r0, [fp, #-144]	; 0xffffff70
   16cc8:	bl	11804 <close@plt>
   16ccc:	mov	r3, #0
   16cd0:	b	16ed0 <__assert_fail@plt+0x5684>
   16cd4:	ldr	r3, [fp, #-144]	; 0xffffff70
   16cd8:	cmp	r3, #0
   16cdc:	bge	16d54 <__assert_fail@plt+0x5508>
   16ce0:	ldrb	r3, [fp, #-13]
   16ce4:	cmp	r3, #0
   16ce8:	beq	16d54 <__assert_fail@plt+0x5508>
   16cec:	ldr	r3, [fp, #-136]	; 0xffffff78
   16cf0:	ldr	r3, [r3, #48]	; 0x30
   16cf4:	and	r3, r3, #512	; 0x200
   16cf8:	cmp	r3, #0
   16cfc:	beq	16d54 <__assert_fail@plt+0x5508>
   16d00:	ldr	r3, [fp, #-136]	; 0xffffff78
   16d04:	add	r3, r3, #60	; 0x3c
   16d08:	mov	r0, r3
   16d0c:	bl	18c18 <__assert_fail@plt+0x73cc>
   16d10:	mov	r3, r0
   16d14:	eor	r3, r3, #1
   16d18:	uxtb	r3, r3
   16d1c:	cmp	r3, #0
   16d20:	beq	16d54 <__assert_fail@plt+0x5508>
   16d24:	ldr	r3, [fp, #-136]	; 0xffffff78
   16d28:	add	r3, r3, #60	; 0x3c
   16d2c:	mov	r0, r3
   16d30:	bl	18d00 <__assert_fail@plt+0x74b4>
   16d34:	str	r0, [fp, #-20]	; 0xffffffec
   16d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d3c:	cmp	r3, #0
   16d40:	blt	16d54 <__assert_fail@plt+0x5508>
   16d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d48:	str	r3, [fp, #-144]	; 0xffffff70
   16d4c:	mov	r3, #0
   16d50:	str	r3, [fp, #-148]	; 0xffffff6c
   16d54:	ldr	r3, [fp, #-144]	; 0xffffff70
   16d58:	str	r3, [fp, #-12]
   16d5c:	ldr	r3, [fp, #-144]	; 0xffffff70
   16d60:	cmp	r3, #0
   16d64:	bge	16d8c <__assert_fail@plt+0x5540>
   16d68:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16d6c:	ldr	r0, [fp, #-136]	; 0xffffff78
   16d70:	bl	143b0 <__assert_fail@plt+0x2b64>
   16d74:	str	r0, [fp, #-12]
   16d78:	ldr	r3, [fp, #-12]
   16d7c:	cmp	r3, #0
   16d80:	bge	16d8c <__assert_fail@plt+0x5540>
   16d84:	mvn	r3, #0
   16d88:	b	16ed0 <__assert_fail@plt+0x5684>
   16d8c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16d90:	ldr	r3, [r3, #48]	; 0x30
   16d94:	and	r3, r3, #2
   16d98:	cmp	r3, #0
   16d9c:	bne	16dc4 <__assert_fail@plt+0x5578>
   16da0:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16da4:	cmp	r3, #0
   16da8:	beq	16e3c <__assert_fail@plt+0x55f0>
   16dac:	ldr	r1, [pc, #296]	; 16edc <__assert_fail@plt+0x5690>
   16db0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16db4:	bl	11468 <strcmp@plt>
   16db8:	mov	r3, r0
   16dbc:	cmp	r3, #0
   16dc0:	bne	16e3c <__assert_fail@plt+0x55f0>
   16dc4:	sub	r3, fp, #132	; 0x84
   16dc8:	mov	r1, r3
   16dcc:	ldr	r0, [fp, #-12]
   16dd0:	bl	1fba0 <lchmod@@Base+0x6dfc>
   16dd4:	mov	r3, r0
   16dd8:	cmp	r3, #0
   16ddc:	beq	16dec <__assert_fail@plt+0x55a0>
   16de0:	mvn	r3, #0
   16de4:	str	r3, [fp, #-8]
   16de8:	b	16e98 <__assert_fail@plt+0x564c>
   16dec:	ldr	r3, [fp, #-140]	; 0xffffff74
   16df0:	ldrd	r0, [r3, #64]	; 0x40
   16df4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   16df8:	cmp	r1, r3
   16dfc:	cmpeq	r0, r2
   16e00:	bne	16e1c <__assert_fail@plt+0x55d0>
   16e04:	ldr	r3, [fp, #-140]	; 0xffffff74
   16e08:	ldrd	r0, [r3, #160]	; 0xa0
   16e0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16e10:	cmp	r1, r3
   16e14:	cmpeq	r0, r2
   16e18:	beq	16e3c <__assert_fail@plt+0x55f0>
   16e1c:	bl	116c0 <__errno_location@plt>
   16e20:	mov	r2, r0
   16e24:	mov	r3, #2
   16e28:	str	r3, [r2]
   16e2c:	mvn	r3, #0
   16e30:	str	r3, [fp, #-8]
   16e34:	nop			; (mov r0, r0)
   16e38:	b	16e98 <__assert_fail@plt+0x564c>
   16e3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16e40:	ldr	r3, [r3, #48]	; 0x30
   16e44:	and	r3, r3, #512	; 0x200
   16e48:	cmp	r3, #0
   16e4c:	beq	16e8c <__assert_fail@plt+0x5640>
   16e50:	ldrb	r3, [fp, #-13]
   16e54:	cmp	r3, #0
   16e58:	movne	r3, #1
   16e5c:	moveq	r3, #0
   16e60:	uxtb	r3, r3
   16e64:	eor	r3, r3, #1
   16e68:	uxtb	r3, r3
   16e6c:	and	r3, r3, #1
   16e70:	uxtb	r3, r3
   16e74:	mov	r2, r3
   16e78:	ldr	r1, [fp, #-12]
   16e7c:	ldr	r0, [fp, #-136]	; 0xffffff78
   16e80:	bl	14214 <__assert_fail@plt+0x29c8>
   16e84:	mov	r3, #0
   16e88:	b	16ed0 <__assert_fail@plt+0x5684>
   16e8c:	ldr	r0, [fp, #-12]
   16e90:	bl	11780 <fchdir@plt>
   16e94:	str	r0, [fp, #-8]
   16e98:	ldr	r3, [fp, #-144]	; 0xffffff70
   16e9c:	cmp	r3, #0
   16ea0:	bge	16ecc <__assert_fail@plt+0x5680>
   16ea4:	bl	116c0 <__errno_location@plt>
   16ea8:	mov	r3, r0
   16eac:	ldr	r3, [r3]
   16eb0:	str	r3, [fp, #-24]	; 0xffffffe8
   16eb4:	ldr	r0, [fp, #-12]
   16eb8:	bl	11804 <close@plt>
   16ebc:	bl	116c0 <__errno_location@plt>
   16ec0:	mov	r2, r0
   16ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ec8:	str	r3, [r2]
   16ecc:	ldr	r3, [fp, #-8]
   16ed0:	mov	r0, r3
   16ed4:	sub	sp, fp, #4
   16ed8:	pop	{fp, pc}
   16edc:	andeq	r0, r2, ip, ror #3
   16ee0:	push	{fp}		; (str fp, [sp, #-4]!)
   16ee4:	add	fp, sp, #0
   16ee8:	sub	sp, sp, #12
   16eec:	str	r0, [fp, #-8]
   16ef0:	ldr	r3, [fp, #-8]
   16ef4:	ldr	r3, [r3, #8]
   16ef8:	mov	r0, r3
   16efc:	add	sp, fp, #0
   16f00:	pop	{fp}		; (ldr fp, [sp], #4)
   16f04:	bx	lr
   16f08:	push	{fp}		; (str fp, [sp, #-4]!)
   16f0c:	add	fp, sp, #0
   16f10:	sub	sp, sp, #12
   16f14:	str	r0, [fp, #-8]
   16f18:	ldr	r3, [fp, #-8]
   16f1c:	ldr	r3, [r3, #12]
   16f20:	mov	r0, r3
   16f24:	add	sp, fp, #0
   16f28:	pop	{fp}		; (ldr fp, [sp], #4)
   16f2c:	bx	lr
   16f30:	push	{fp}		; (str fp, [sp, #-4]!)
   16f34:	add	fp, sp, #0
   16f38:	sub	sp, sp, #12
   16f3c:	str	r0, [fp, #-8]
   16f40:	ldr	r3, [fp, #-8]
   16f44:	ldr	r3, [r3, #16]
   16f48:	mov	r0, r3
   16f4c:	add	sp, fp, #0
   16f50:	pop	{fp}		; (ldr fp, [sp], #4)
   16f54:	bx	lr
   16f58:	push	{fp}		; (str fp, [sp, #-4]!)
   16f5c:	add	fp, sp, #0
   16f60:	sub	sp, sp, #28
   16f64:	str	r0, [fp, #-24]	; 0xffffffe8
   16f68:	mov	r3, #0
   16f6c:	str	r3, [fp, #-12]
   16f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f74:	ldr	r3, [r3]
   16f78:	str	r3, [fp, #-8]
   16f7c:	b	16fec <__assert_fail@plt+0x57a0>
   16f80:	ldr	r3, [fp, #-8]
   16f84:	ldr	r3, [r3]
   16f88:	cmp	r3, #0
   16f8c:	beq	16fe0 <__assert_fail@plt+0x5794>
   16f90:	ldr	r3, [fp, #-8]
   16f94:	str	r3, [fp, #-16]
   16f98:	mov	r3, #1
   16f9c:	str	r3, [fp, #-20]	; 0xffffffec
   16fa0:	b	16fb0 <__assert_fail@plt+0x5764>
   16fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fa8:	add	r3, r3, #1
   16fac:	str	r3, [fp, #-20]	; 0xffffffec
   16fb0:	ldr	r3, [fp, #-16]
   16fb4:	ldr	r3, [r3, #4]
   16fb8:	str	r3, [fp, #-16]
   16fbc:	ldr	r3, [fp, #-16]
   16fc0:	cmp	r3, #0
   16fc4:	bne	16fa4 <__assert_fail@plt+0x5758>
   16fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   16fcc:	ldr	r3, [fp, #-12]
   16fd0:	cmp	r2, r3
   16fd4:	bls	16fe0 <__assert_fail@plt+0x5794>
   16fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fdc:	str	r3, [fp, #-12]
   16fe0:	ldr	r3, [fp, #-8]
   16fe4:	add	r3, r3, #8
   16fe8:	str	r3, [fp, #-8]
   16fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ff0:	ldr	r2, [r3, #4]
   16ff4:	ldr	r3, [fp, #-8]
   16ff8:	cmp	r2, r3
   16ffc:	bhi	16f80 <__assert_fail@plt+0x5734>
   17000:	ldr	r3, [fp, #-12]
   17004:	mov	r0, r3
   17008:	add	sp, fp, #0
   1700c:	pop	{fp}		; (ldr fp, [sp], #4)
   17010:	bx	lr
   17014:	push	{fp}		; (str fp, [sp, #-4]!)
   17018:	add	fp, sp, #0
   1701c:	sub	sp, sp, #28
   17020:	str	r0, [fp, #-24]	; 0xffffffe8
   17024:	mov	r3, #0
   17028:	str	r3, [fp, #-12]
   1702c:	mov	r3, #0
   17030:	str	r3, [fp, #-16]
   17034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17038:	ldr	r3, [r3]
   1703c:	str	r3, [fp, #-8]
   17040:	b	170a8 <__assert_fail@plt+0x585c>
   17044:	ldr	r3, [fp, #-8]
   17048:	ldr	r3, [r3]
   1704c:	cmp	r3, #0
   17050:	beq	1709c <__assert_fail@plt+0x5850>
   17054:	ldr	r3, [fp, #-8]
   17058:	str	r3, [fp, #-20]	; 0xffffffec
   1705c:	ldr	r3, [fp, #-12]
   17060:	add	r3, r3, #1
   17064:	str	r3, [fp, #-12]
   17068:	ldr	r3, [fp, #-16]
   1706c:	add	r3, r3, #1
   17070:	str	r3, [fp, #-16]
   17074:	b	17084 <__assert_fail@plt+0x5838>
   17078:	ldr	r3, [fp, #-16]
   1707c:	add	r3, r3, #1
   17080:	str	r3, [fp, #-16]
   17084:	ldr	r3, [fp, #-20]	; 0xffffffec
   17088:	ldr	r3, [r3, #4]
   1708c:	str	r3, [fp, #-20]	; 0xffffffec
   17090:	ldr	r3, [fp, #-20]	; 0xffffffec
   17094:	cmp	r3, #0
   17098:	bne	17078 <__assert_fail@plt+0x582c>
   1709c:	ldr	r3, [fp, #-8]
   170a0:	add	r3, r3, #8
   170a4:	str	r3, [fp, #-8]
   170a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170ac:	ldr	r2, [r3, #4]
   170b0:	ldr	r3, [fp, #-8]
   170b4:	cmp	r2, r3
   170b8:	bhi	17044 <__assert_fail@plt+0x57f8>
   170bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170c0:	ldr	r2, [r3, #12]
   170c4:	ldr	r3, [fp, #-12]
   170c8:	cmp	r2, r3
   170cc:	bne	170ec <__assert_fail@plt+0x58a0>
   170d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170d4:	ldr	r2, [r3, #16]
   170d8:	ldr	r3, [fp, #-16]
   170dc:	cmp	r2, r3
   170e0:	bne	170ec <__assert_fail@plt+0x58a0>
   170e4:	mov	r3, #1
   170e8:	b	170f0 <__assert_fail@plt+0x58a4>
   170ec:	mov	r3, #0
   170f0:	mov	r0, r3
   170f4:	add	sp, fp, #0
   170f8:	pop	{fp}		; (ldr fp, [sp], #4)
   170fc:	bx	lr
   17100:	push	{fp, lr}
   17104:	add	fp, sp, #4
   17108:	sub	sp, sp, #32
   1710c:	str	r0, [fp, #-24]	; 0xffffffe8
   17110:	str	r1, [fp, #-28]	; 0xffffffe4
   17114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17118:	bl	16f30 <__assert_fail@plt+0x56e4>
   1711c:	str	r0, [fp, #-8]
   17120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17124:	bl	16ee0 <__assert_fail@plt+0x5694>
   17128:	str	r0, [fp, #-12]
   1712c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17130:	bl	16f08 <__assert_fail@plt+0x56bc>
   17134:	str	r0, [fp, #-16]
   17138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1713c:	bl	16f58 <__assert_fail@plt+0x570c>
   17140:	str	r0, [fp, #-20]	; 0xffffffec
   17144:	ldr	r2, [fp, #-8]
   17148:	ldr	r1, [pc, #112]	; 171c0 <__assert_fail@plt+0x5974>
   1714c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17150:	bl	116b4 <fprintf@plt>
   17154:	ldr	r2, [fp, #-12]
   17158:	ldr	r1, [pc, #100]	; 171c4 <__assert_fail@plt+0x5978>
   1715c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17160:	bl	116b4 <fprintf@plt>
   17164:	ldr	r3, [fp, #-16]
   17168:	vmov	s15, r3
   1716c:	vcvt.f64.u32	d7, s15
   17170:	vldr	d6, [pc, #64]	; 171b8 <__assert_fail@plt+0x596c>
   17174:	vmul.f64	d5, d7, d6
   17178:	ldr	r3, [fp, #-12]
   1717c:	vmov	s15, r3
   17180:	vcvt.f64.u32	d6, s15
   17184:	vdiv.f64	d7, d5, d6
   17188:	vstr	d7, [sp]
   1718c:	ldr	r2, [fp, #-16]
   17190:	ldr	r1, [pc, #48]	; 171c8 <__assert_fail@plt+0x597c>
   17194:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17198:	bl	116b4 <fprintf@plt>
   1719c:	ldr	r2, [fp, #-20]	; 0xffffffec
   171a0:	ldr	r1, [pc, #36]	; 171cc <__assert_fail@plt+0x5980>
   171a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   171a8:	bl	116b4 <fprintf@plt>
   171ac:	nop			; (mov r0, r0)
   171b0:	sub	sp, fp, #4
   171b4:	pop	{fp, pc}
   171b8:	andeq	r0, r0, r0
   171bc:	subsmi	r0, r9, r0
   171c0:	andeq	r0, r2, r4, lsl #4
   171c4:	andeq	r0, r2, ip, lsl r2
   171c8:	andeq	r0, r2, r4, lsr r2
   171cc:	andeq	r0, r2, r8, asr r2
   171d0:	push	{fp, lr}
   171d4:	add	fp, sp, #4
   171d8:	sub	sp, sp, #16
   171dc:	str	r0, [fp, #-16]
   171e0:	str	r1, [fp, #-20]	; 0xffffffec
   171e4:	ldr	r3, [fp, #-16]
   171e8:	ldr	r3, [r3, #24]
   171ec:	ldr	r2, [fp, #-16]
   171f0:	ldr	r2, [r2, #8]
   171f4:	mov	r1, r2
   171f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   171fc:	blx	r3
   17200:	str	r0, [fp, #-8]
   17204:	ldr	r3, [fp, #-16]
   17208:	ldr	r2, [r3, #8]
   1720c:	ldr	r3, [fp, #-8]
   17210:	cmp	r2, r3
   17214:	bhi	1721c <__assert_fail@plt+0x59d0>
   17218:	bl	117f8 <abort@plt>
   1721c:	ldr	r3, [fp, #-16]
   17220:	ldr	r2, [r3]
   17224:	ldr	r3, [fp, #-8]
   17228:	lsl	r3, r3, #3
   1722c:	add	r3, r2, r3
   17230:	mov	r0, r3
   17234:	sub	sp, fp, #4
   17238:	pop	{fp, pc}
   1723c:	push	{fp, lr}
   17240:	add	fp, sp, #4
   17244:	sub	sp, sp, #16
   17248:	str	r0, [fp, #-16]
   1724c:	str	r1, [fp, #-20]	; 0xffffffec
   17250:	ldr	r1, [fp, #-20]	; 0xffffffec
   17254:	ldr	r0, [fp, #-16]
   17258:	bl	171d0 <__assert_fail@plt+0x5984>
   1725c:	str	r0, [fp, #-12]
   17260:	ldr	r3, [fp, #-12]
   17264:	ldr	r3, [r3]
   17268:	cmp	r3, #0
   1726c:	bne	17278 <__assert_fail@plt+0x5a2c>
   17270:	mov	r3, #0
   17274:	b	172e8 <__assert_fail@plt+0x5a9c>
   17278:	ldr	r3, [fp, #-12]
   1727c:	str	r3, [fp, #-8]
   17280:	b	172d8 <__assert_fail@plt+0x5a8c>
   17284:	ldr	r3, [fp, #-8]
   17288:	ldr	r2, [r3]
   1728c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17290:	cmp	r2, r3
   17294:	beq	172c0 <__assert_fail@plt+0x5a74>
   17298:	ldr	r3, [fp, #-16]
   1729c:	ldr	r3, [r3, #28]
   172a0:	ldr	r2, [fp, #-8]
   172a4:	ldr	r2, [r2]
   172a8:	mov	r1, r2
   172ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   172b0:	blx	r3
   172b4:	mov	r3, r0
   172b8:	cmp	r3, #0
   172bc:	beq	172cc <__assert_fail@plt+0x5a80>
   172c0:	ldr	r3, [fp, #-8]
   172c4:	ldr	r3, [r3]
   172c8:	b	172e8 <__assert_fail@plt+0x5a9c>
   172cc:	ldr	r3, [fp, #-8]
   172d0:	ldr	r3, [r3, #4]
   172d4:	str	r3, [fp, #-8]
   172d8:	ldr	r3, [fp, #-8]
   172dc:	cmp	r3, #0
   172e0:	bne	17284 <__assert_fail@plt+0x5a38>
   172e4:	mov	r3, #0
   172e8:	mov	r0, r3
   172ec:	sub	sp, fp, #4
   172f0:	pop	{fp, pc}
   172f4:	push	{fp, lr}
   172f8:	add	fp, sp, #4
   172fc:	sub	sp, sp, #16
   17300:	str	r0, [fp, #-16]
   17304:	ldr	r3, [fp, #-16]
   17308:	ldr	r3, [r3, #16]
   1730c:	cmp	r3, #0
   17310:	bne	1731c <__assert_fail@plt+0x5ad0>
   17314:	mov	r3, #0
   17318:	b	1736c <__assert_fail@plt+0x5b20>
   1731c:	ldr	r3, [fp, #-16]
   17320:	ldr	r3, [r3]
   17324:	str	r3, [fp, #-8]
   17328:	ldr	r3, [fp, #-16]
   1732c:	ldr	r2, [r3, #4]
   17330:	ldr	r3, [fp, #-8]
   17334:	cmp	r2, r3
   17338:	bhi	17340 <__assert_fail@plt+0x5af4>
   1733c:	bl	117f8 <abort@plt>
   17340:	ldr	r3, [fp, #-8]
   17344:	ldr	r3, [r3]
   17348:	cmp	r3, #0
   1734c:	beq	1735c <__assert_fail@plt+0x5b10>
   17350:	ldr	r3, [fp, #-8]
   17354:	ldr	r3, [r3]
   17358:	b	1736c <__assert_fail@plt+0x5b20>
   1735c:	ldr	r3, [fp, #-8]
   17360:	add	r3, r3, #8
   17364:	str	r3, [fp, #-8]
   17368:	b	17328 <__assert_fail@plt+0x5adc>
   1736c:	mov	r0, r3
   17370:	sub	sp, fp, #4
   17374:	pop	{fp, pc}
   17378:	push	{fp, lr}
   1737c:	add	fp, sp, #4
   17380:	sub	sp, sp, #16
   17384:	str	r0, [fp, #-16]
   17388:	str	r1, [fp, #-20]	; 0xffffffec
   1738c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17390:	ldr	r0, [fp, #-16]
   17394:	bl	171d0 <__assert_fail@plt+0x5984>
   17398:	str	r0, [fp, #-8]
   1739c:	ldr	r3, [fp, #-8]
   173a0:	str	r3, [fp, #-12]
   173a4:	ldr	r3, [fp, #-12]
   173a8:	ldr	r2, [r3]
   173ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   173b0:	cmp	r2, r3
   173b4:	bne	173d8 <__assert_fail@plt+0x5b8c>
   173b8:	ldr	r3, [fp, #-12]
   173bc:	ldr	r3, [r3, #4]
   173c0:	cmp	r3, #0
   173c4:	beq	173d8 <__assert_fail@plt+0x5b8c>
   173c8:	ldr	r3, [fp, #-12]
   173cc:	ldr	r3, [r3, #4]
   173d0:	ldr	r3, [r3]
   173d4:	b	17434 <__assert_fail@plt+0x5be8>
   173d8:	ldr	r3, [fp, #-12]
   173dc:	ldr	r3, [r3, #4]
   173e0:	str	r3, [fp, #-12]
   173e4:	ldr	r3, [fp, #-12]
   173e8:	cmp	r3, #0
   173ec:	bne	173a4 <__assert_fail@plt+0x5b58>
   173f0:	b	17410 <__assert_fail@plt+0x5bc4>
   173f4:	ldr	r3, [fp, #-8]
   173f8:	ldr	r3, [r3]
   173fc:	cmp	r3, #0
   17400:	beq	17410 <__assert_fail@plt+0x5bc4>
   17404:	ldr	r3, [fp, #-8]
   17408:	ldr	r3, [r3]
   1740c:	b	17434 <__assert_fail@plt+0x5be8>
   17410:	ldr	r3, [fp, #-8]
   17414:	add	r3, r3, #8
   17418:	str	r3, [fp, #-8]
   1741c:	ldr	r3, [fp, #-16]
   17420:	ldr	r3, [r3, #4]
   17424:	ldr	r2, [fp, #-8]
   17428:	cmp	r2, r3
   1742c:	bcc	173f4 <__assert_fail@plt+0x5ba8>
   17430:	mov	r3, #0
   17434:	mov	r0, r3
   17438:	sub	sp, fp, #4
   1743c:	pop	{fp, pc}
   17440:	push	{fp}		; (str fp, [sp, #-4]!)
   17444:	add	fp, sp, #0
   17448:	sub	sp, sp, #36	; 0x24
   1744c:	str	r0, [fp, #-24]	; 0xffffffe8
   17450:	str	r1, [fp, #-28]	; 0xffffffe4
   17454:	str	r2, [fp, #-32]	; 0xffffffe0
   17458:	mov	r3, #0
   1745c:	str	r3, [fp, #-8]
   17460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17464:	ldr	r3, [r3]
   17468:	str	r3, [fp, #-12]
   1746c:	b	174ec <__assert_fail@plt+0x5ca0>
   17470:	ldr	r3, [fp, #-12]
   17474:	ldr	r3, [r3]
   17478:	cmp	r3, #0
   1747c:	beq	174e0 <__assert_fail@plt+0x5c94>
   17480:	ldr	r3, [fp, #-12]
   17484:	str	r3, [fp, #-16]
   17488:	b	174d4 <__assert_fail@plt+0x5c88>
   1748c:	ldr	r2, [fp, #-8]
   17490:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17494:	cmp	r2, r3
   17498:	bcc	174a4 <__assert_fail@plt+0x5c58>
   1749c:	ldr	r3, [fp, #-8]
   174a0:	b	17504 <__assert_fail@plt+0x5cb8>
   174a4:	ldr	r3, [fp, #-8]
   174a8:	add	r2, r3, #1
   174ac:	str	r2, [fp, #-8]
   174b0:	lsl	r3, r3, #2
   174b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   174b8:	add	r3, r2, r3
   174bc:	ldr	r2, [fp, #-16]
   174c0:	ldr	r2, [r2]
   174c4:	str	r2, [r3]
   174c8:	ldr	r3, [fp, #-16]
   174cc:	ldr	r3, [r3, #4]
   174d0:	str	r3, [fp, #-16]
   174d4:	ldr	r3, [fp, #-16]
   174d8:	cmp	r3, #0
   174dc:	bne	1748c <__assert_fail@plt+0x5c40>
   174e0:	ldr	r3, [fp, #-12]
   174e4:	add	r3, r3, #8
   174e8:	str	r3, [fp, #-12]
   174ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174f0:	ldr	r2, [r3, #4]
   174f4:	ldr	r3, [fp, #-12]
   174f8:	cmp	r2, r3
   174fc:	bhi	17470 <__assert_fail@plt+0x5c24>
   17500:	ldr	r3, [fp, #-8]
   17504:	mov	r0, r3
   17508:	add	sp, fp, #0
   1750c:	pop	{fp}		; (ldr fp, [sp], #4)
   17510:	bx	lr
   17514:	push	{fp, lr}
   17518:	add	fp, sp, #4
   1751c:	sub	sp, sp, #32
   17520:	str	r0, [fp, #-24]	; 0xffffffe8
   17524:	str	r1, [fp, #-28]	; 0xffffffe4
   17528:	str	r2, [fp, #-32]	; 0xffffffe0
   1752c:	mov	r3, #0
   17530:	str	r3, [fp, #-8]
   17534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17538:	ldr	r3, [r3]
   1753c:	str	r3, [fp, #-12]
   17540:	b	175c4 <__assert_fail@plt+0x5d78>
   17544:	ldr	r3, [fp, #-12]
   17548:	ldr	r3, [r3]
   1754c:	cmp	r3, #0
   17550:	beq	175b8 <__assert_fail@plt+0x5d6c>
   17554:	ldr	r3, [fp, #-12]
   17558:	str	r3, [fp, #-16]
   1755c:	b	175ac <__assert_fail@plt+0x5d60>
   17560:	ldr	r3, [fp, #-16]
   17564:	ldr	r2, [r3]
   17568:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1756c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17570:	mov	r0, r2
   17574:	blx	r3
   17578:	mov	r3, r0
   1757c:	eor	r3, r3, #1
   17580:	uxtb	r3, r3
   17584:	cmp	r3, #0
   17588:	beq	17594 <__assert_fail@plt+0x5d48>
   1758c:	ldr	r3, [fp, #-8]
   17590:	b	175dc <__assert_fail@plt+0x5d90>
   17594:	ldr	r3, [fp, #-8]
   17598:	add	r3, r3, #1
   1759c:	str	r3, [fp, #-8]
   175a0:	ldr	r3, [fp, #-16]
   175a4:	ldr	r3, [r3, #4]
   175a8:	str	r3, [fp, #-16]
   175ac:	ldr	r3, [fp, #-16]
   175b0:	cmp	r3, #0
   175b4:	bne	17560 <__assert_fail@plt+0x5d14>
   175b8:	ldr	r3, [fp, #-12]
   175bc:	add	r3, r3, #8
   175c0:	str	r3, [fp, #-12]
   175c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   175c8:	ldr	r2, [r3, #4]
   175cc:	ldr	r3, [fp, #-12]
   175d0:	cmp	r2, r3
   175d4:	bhi	17544 <__assert_fail@plt+0x5cf8>
   175d8:	ldr	r3, [fp, #-8]
   175dc:	mov	r0, r3
   175e0:	sub	sp, fp, #4
   175e4:	pop	{fp, pc}
   175e8:	push	{fp, lr}
   175ec:	add	fp, sp, #4
   175f0:	sub	sp, sp, #16
   175f4:	str	r0, [fp, #-16]
   175f8:	str	r1, [fp, #-20]	; 0xffffffec
   175fc:	mov	r3, #0
   17600:	str	r3, [fp, #-8]
   17604:	b	17640 <__assert_fail@plt+0x5df4>
   17608:	ldr	r2, [fp, #-8]
   1760c:	mov	r3, r2
   17610:	lsl	r3, r3, #5
   17614:	sub	r2, r3, r2
   17618:	ldrb	r3, [fp, #-9]
   1761c:	add	r3, r2, r3
   17620:	ldr	r1, [fp, #-20]	; 0xffffffec
   17624:	mov	r0, r3
   17628:	bl	1f740 <lchmod@@Base+0x699c>
   1762c:	mov	r3, r1
   17630:	str	r3, [fp, #-8]
   17634:	ldr	r3, [fp, #-16]
   17638:	add	r3, r3, #1
   1763c:	str	r3, [fp, #-16]
   17640:	ldr	r3, [fp, #-16]
   17644:	ldrb	r3, [r3]
   17648:	strb	r3, [fp, #-9]
   1764c:	ldrb	r3, [fp, #-9]
   17650:	cmp	r3, #0
   17654:	bne	17608 <__assert_fail@plt+0x5dbc>
   17658:	ldr	r3, [fp, #-8]
   1765c:	mov	r0, r3
   17660:	sub	sp, fp, #4
   17664:	pop	{fp, pc}
   17668:	push	{fp, lr}
   1766c:	add	fp, sp, #4
   17670:	sub	sp, sp, #16
   17674:	str	r0, [fp, #-16]
   17678:	mov	r3, #3
   1767c:	str	r3, [fp, #-8]
   17680:	ldr	r3, [fp, #-8]
   17684:	ldr	r2, [fp, #-8]
   17688:	mul	r3, r2, r3
   1768c:	str	r3, [fp, #-12]
   17690:	b	176c0 <__assert_fail@plt+0x5e74>
   17694:	ldr	r3, [fp, #-8]
   17698:	add	r3, r3, #1
   1769c:	str	r3, [fp, #-8]
   176a0:	ldr	r3, [fp, #-8]
   176a4:	lsl	r3, r3, #2
   176a8:	ldr	r2, [fp, #-12]
   176ac:	add	r3, r2, r3
   176b0:	str	r3, [fp, #-12]
   176b4:	ldr	r3, [fp, #-8]
   176b8:	add	r3, r3, #1
   176bc:	str	r3, [fp, #-8]
   176c0:	ldr	r2, [fp, #-12]
   176c4:	ldr	r3, [fp, #-16]
   176c8:	cmp	r2, r3
   176cc:	bcs	176ec <__assert_fail@plt+0x5ea0>
   176d0:	ldr	r3, [fp, #-16]
   176d4:	ldr	r1, [fp, #-8]
   176d8:	mov	r0, r3
   176dc:	bl	1f740 <lchmod@@Base+0x699c>
   176e0:	mov	r3, r1
   176e4:	cmp	r3, #0
   176e8:	bne	17694 <__assert_fail@plt+0x5e48>
   176ec:	ldr	r3, [fp, #-16]
   176f0:	ldr	r1, [fp, #-8]
   176f4:	mov	r0, r3
   176f8:	bl	1f740 <lchmod@@Base+0x699c>
   176fc:	mov	r3, r1
   17700:	cmp	r3, #0
   17704:	movne	r3, #1
   17708:	moveq	r3, #0
   1770c:	uxtb	r3, r3
   17710:	mov	r0, r3
   17714:	sub	sp, fp, #4
   17718:	pop	{fp, pc}
   1771c:	push	{fp, lr}
   17720:	add	fp, sp, #4
   17724:	sub	sp, sp, #8
   17728:	str	r0, [fp, #-8]
   1772c:	ldr	r3, [fp, #-8]
   17730:	cmp	r3, #9
   17734:	bhi	17740 <__assert_fail@plt+0x5ef4>
   17738:	mov	r3, #10
   1773c:	str	r3, [fp, #-8]
   17740:	ldr	r3, [fp, #-8]
   17744:	orr	r3, r3, #1
   17748:	str	r3, [fp, #-8]
   1774c:	b	1775c <__assert_fail@plt+0x5f10>
   17750:	ldr	r3, [fp, #-8]
   17754:	add	r3, r3, #2
   17758:	str	r3, [fp, #-8]
   1775c:	ldr	r3, [fp, #-8]
   17760:	cmn	r3, #1
   17764:	beq	17784 <__assert_fail@plt+0x5f38>
   17768:	ldr	r0, [fp, #-8]
   1776c:	bl	17668 <__assert_fail@plt+0x5e1c>
   17770:	mov	r3, r0
   17774:	eor	r3, r3, #1
   17778:	uxtb	r3, r3
   1777c:	cmp	r3, #0
   17780:	bne	17750 <__assert_fail@plt+0x5f04>
   17784:	ldr	r3, [fp, #-8]
   17788:	mov	r0, r3
   1778c:	sub	sp, fp, #4
   17790:	pop	{fp, pc}
   17794:	push	{fp, lr}
   17798:	add	fp, sp, #4
   1779c:	sub	sp, sp, #8
   177a0:	str	r0, [fp, #-8]
   177a4:	ldr	r3, [fp, #-8]
   177a8:	ldr	r2, [pc, #32]	; 177d0 <__assert_fail@plt+0x5f84>
   177ac:	mov	ip, r3
   177b0:	mov	lr, r2
   177b4:	ldm	lr!, {r0, r1, r2, r3}
   177b8:	stmia	ip!, {r0, r1, r2, r3}
   177bc:	ldr	r3, [lr]
   177c0:	str	r3, [ip]
   177c4:	nop			; (mov r0, r0)
   177c8:	sub	sp, fp, #4
   177cc:	pop	{fp, pc}
   177d0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   177d4:	push	{fp, lr}
   177d8:	add	fp, sp, #4
   177dc:	sub	sp, sp, #16
   177e0:	str	r0, [fp, #-16]
   177e4:	str	r1, [fp, #-20]	; 0xffffffec
   177e8:	ldr	r3, [fp, #-16]
   177ec:	mov	r1, #3
   177f0:	mov	r0, r3
   177f4:	bl	1dfa0 <lchmod@@Base+0x51fc>
   177f8:	str	r0, [fp, #-8]
   177fc:	ldr	r3, [fp, #-8]
   17800:	ldr	r1, [fp, #-20]	; 0xffffffec
   17804:	mov	r0, r3
   17808:	bl	1f740 <lchmod@@Base+0x699c>
   1780c:	mov	r3, r1
   17810:	mov	r0, r3
   17814:	sub	sp, fp, #4
   17818:	pop	{fp, pc}
   1781c:	push	{fp}		; (str fp, [sp, #-4]!)
   17820:	add	fp, sp, #0
   17824:	sub	sp, sp, #12
   17828:	str	r0, [fp, #-8]
   1782c:	str	r1, [fp, #-12]
   17830:	ldr	r2, [fp, #-8]
   17834:	ldr	r3, [fp, #-12]
   17838:	cmp	r2, r3
   1783c:	moveq	r3, #1
   17840:	movne	r3, #0
   17844:	uxtb	r3, r3
   17848:	mov	r0, r3
   1784c:	add	sp, fp, #0
   17850:	pop	{fp}		; (ldr fp, [sp], #4)
   17854:	bx	lr
   17858:	push	{fp}		; (str fp, [sp, #-4]!)
   1785c:	add	fp, sp, #0
   17860:	sub	sp, sp, #20
   17864:	str	r0, [fp, #-16]
   17868:	ldr	r3, [fp, #-16]
   1786c:	ldr	r3, [r3, #20]
   17870:	str	r3, [fp, #-8]
   17874:	ldr	r3, [fp, #-8]
   17878:	ldr	r2, [pc, #268]	; 1798c <__assert_fail@plt+0x6140>
   1787c:	cmp	r3, r2
   17880:	bne	1788c <__assert_fail@plt+0x6040>
   17884:	mov	r3, #1
   17888:	b	17978 <__assert_fail@plt+0x612c>
   1788c:	ldr	r3, [pc, #252]	; 17990 <__assert_fail@plt+0x6144>
   17890:	str	r3, [fp, #-12]
   17894:	ldr	r3, [fp, #-8]
   17898:	vldr	s14, [r3, #8]
   1789c:	vldr	s15, [fp, #-12]
   178a0:	vcmpe.f32	s14, s15
   178a4:	vmrs	APSR_nzcv, fpscr
   178a8:	ble	17968 <__assert_fail@plt+0x611c>
   178ac:	ldr	r3, [fp, #-8]
   178b0:	vldr	s14, [r3, #8]
   178b4:	vldr	s13, [pc, #204]	; 17988 <__assert_fail@plt+0x613c>
   178b8:	vldr	s15, [fp, #-12]
   178bc:	vsub.f32	s15, s13, s15
   178c0:	vcmpe.f32	s14, s15
   178c4:	vmrs	APSR_nzcv, fpscr
   178c8:	bpl	17968 <__assert_fail@plt+0x611c>
   178cc:	vldr	s15, [fp, #-12]
   178d0:	vldr	s14, [pc, #176]	; 17988 <__assert_fail@plt+0x613c>
   178d4:	vadd.f32	s14, s15, s14
   178d8:	ldr	r3, [fp, #-8]
   178dc:	vldr	s15, [r3, #12]
   178e0:	vcmpe.f32	s14, s15
   178e4:	vmrs	APSR_nzcv, fpscr
   178e8:	bpl	17968 <__assert_fail@plt+0x611c>
   178ec:	ldr	r3, [fp, #-8]
   178f0:	vldr	s15, [r3]
   178f4:	vcmpe.f32	s15, #0.0
   178f8:	vmrs	APSR_nzcv, fpscr
   178fc:	blt	17968 <__assert_fail@plt+0x611c>
   17900:	ldr	r3, [fp, #-8]
   17904:	vldr	s14, [r3]
   17908:	vldr	s15, [fp, #-12]
   1790c:	vadd.f32	s14, s14, s15
   17910:	ldr	r3, [fp, #-8]
   17914:	vldr	s15, [r3, #4]
   17918:	vcmpe.f32	s14, s15
   1791c:	vmrs	APSR_nzcv, fpscr
   17920:	bpl	17968 <__assert_fail@plt+0x611c>
   17924:	ldr	r3, [fp, #-8]
   17928:	vldr	s15, [r3, #4]
   1792c:	vldr	s14, [pc, #84]	; 17988 <__assert_fail@plt+0x613c>
   17930:	vcmpe.f32	s15, s14
   17934:	vmrs	APSR_nzcv, fpscr
   17938:	bhi	17968 <__assert_fail@plt+0x611c>
   1793c:	ldr	r3, [fp, #-8]
   17940:	vldr	s14, [r3]
   17944:	vldr	s15, [fp, #-12]
   17948:	vadd.f32	s14, s14, s15
   1794c:	ldr	r3, [fp, #-8]
   17950:	vldr	s15, [r3, #8]
   17954:	vcmpe.f32	s14, s15
   17958:	vmrs	APSR_nzcv, fpscr
   1795c:	bpl	17968 <__assert_fail@plt+0x611c>
   17960:	mov	r3, #1
   17964:	b	17978 <__assert_fail@plt+0x612c>
   17968:	ldr	r3, [fp, #-16]
   1796c:	ldr	r2, [pc, #24]	; 1798c <__assert_fail@plt+0x6140>
   17970:	str	r2, [r3, #20]
   17974:	mov	r3, #0
   17978:	mov	r0, r3
   1797c:	add	sp, fp, #0
   17980:	pop	{fp}		; (ldr fp, [sp], #4)
   17984:	bx	lr
   17988:	svccc	0x00800000
   1798c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   17990:	stclcc	12, cr12, [ip, #820]	; 0x334
   17994:	push	{r4, r5, r6, r7, fp, lr}
   17998:	add	fp, sp, #20
   1799c:	sub	sp, sp, #16
   179a0:	str	r0, [fp, #-32]	; 0xffffffe0
   179a4:	str	r1, [fp, #-36]	; 0xffffffdc
   179a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179ac:	ldrb	r3, [r3, #16]
   179b0:	eor	r3, r3, #1
   179b4:	uxtb	r3, r3
   179b8:	cmp	r3, #0
   179bc:	beq	17a08 <__assert_fail@plt+0x61bc>
   179c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179c4:	vmov	s15, r3
   179c8:	vcvt.f32.u32	s13, s15
   179cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179d0:	vldr	s14, [r3, #8]
   179d4:	vdiv.f32	s15, s13, s14
   179d8:	vstr	s15, [fp, #-24]	; 0xffffffe8
   179dc:	vldr	s15, [fp, #-24]	; 0xffffffe8
   179e0:	vldr	s14, [pc, #156]	; 17a84 <__assert_fail@plt+0x6238>
   179e4:	vcmpe.f32	s15, s14
   179e8:	vmrs	APSR_nzcv, fpscr
   179ec:	blt	179f8 <__assert_fail@plt+0x61ac>
   179f0:	mov	r3, #0
   179f4:	b	17a78 <__assert_fail@plt+0x622c>
   179f8:	vldr	s15, [fp, #-24]	; 0xffffffe8
   179fc:	vcvt.u32.f32	s15, s15
   17a00:	vmov	r3, s15
   17a04:	str	r3, [fp, #-32]	; 0xffffffe0
   17a08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a0c:	bl	1771c <__assert_fail@plt+0x5ed0>
   17a10:	str	r0, [fp, #-32]	; 0xffffffe0
   17a14:	mov	r1, #0
   17a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a1c:	mov	r2, r3
   17a20:	mov	r3, #0
   17a24:	lsl	r5, r3, #2
   17a28:	orr	r5, r5, r2, lsr #30
   17a2c:	lsl	r4, r2, #2
   17a30:	mov	r6, r5
   17a34:	mov	r7, #0
   17a38:	cmp	r6, #0
   17a3c:	beq	17a44 <__assert_fail@plt+0x61f8>
   17a40:	mov	r1, #1
   17a44:	cmp	r4, #0
   17a48:	bge	17a50 <__assert_fail@plt+0x6204>
   17a4c:	mov	r1, #1
   17a50:	mov	r3, r4
   17a54:	str	r3, [fp, #-28]	; 0xffffffe4
   17a58:	mov	r3, r1
   17a5c:	and	r3, r3, #1
   17a60:	uxtb	r3, r3
   17a64:	cmp	r3, #0
   17a68:	beq	17a74 <__assert_fail@plt+0x6228>
   17a6c:	mov	r3, #0
   17a70:	b	17a78 <__assert_fail@plt+0x622c>
   17a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a78:	mov	r0, r3
   17a7c:	sub	sp, fp, #20
   17a80:	pop	{r4, r5, r6, r7, fp, pc}
   17a84:	svcmi	0x00800000
   17a88:	push	{fp, lr}
   17a8c:	add	fp, sp, #4
   17a90:	sub	sp, sp, #24
   17a94:	str	r0, [fp, #-16]
   17a98:	str	r1, [fp, #-20]	; 0xffffffec
   17a9c:	str	r2, [fp, #-24]	; 0xffffffe8
   17aa0:	str	r3, [fp, #-28]	; 0xffffffe4
   17aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17aa8:	cmp	r3, #0
   17aac:	bne	17ab8 <__assert_fail@plt+0x626c>
   17ab0:	ldr	r3, [pc, #364]	; 17c24 <__assert_fail@plt+0x63d8>
   17ab4:	str	r3, [fp, #-24]	; 0xffffffe8
   17ab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17abc:	cmp	r3, #0
   17ac0:	bne	17acc <__assert_fail@plt+0x6280>
   17ac4:	ldr	r3, [pc, #348]	; 17c28 <__assert_fail@plt+0x63dc>
   17ac8:	str	r3, [fp, #-28]	; 0xffffffe4
   17acc:	mov	r0, #40	; 0x28
   17ad0:	bl	1db78 <lchmod@@Base+0x4dd4>
   17ad4:	mov	r3, r0
   17ad8:	str	r3, [fp, #-8]
   17adc:	ldr	r3, [fp, #-8]
   17ae0:	cmp	r3, #0
   17ae4:	bne	17af0 <__assert_fail@plt+0x62a4>
   17ae8:	mov	r3, #0
   17aec:	b	17c18 <__assert_fail@plt+0x63cc>
   17af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17af4:	cmp	r3, #0
   17af8:	bne	17b04 <__assert_fail@plt+0x62b8>
   17afc:	ldr	r3, [pc, #296]	; 17c2c <__assert_fail@plt+0x63e0>
   17b00:	str	r3, [fp, #-20]	; 0xffffffec
   17b04:	ldr	r3, [fp, #-8]
   17b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   17b0c:	str	r2, [r3, #20]
   17b10:	ldr	r0, [fp, #-8]
   17b14:	bl	17858 <__assert_fail@plt+0x600c>
   17b18:	mov	r3, r0
   17b1c:	eor	r3, r3, #1
   17b20:	uxtb	r3, r3
   17b24:	cmp	r3, #0
   17b28:	bne	17bf8 <__assert_fail@plt+0x63ac>
   17b2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b30:	ldr	r0, [fp, #-16]
   17b34:	bl	17994 <__assert_fail@plt+0x6148>
   17b38:	mov	r2, r0
   17b3c:	ldr	r3, [fp, #-8]
   17b40:	str	r2, [r3, #8]
   17b44:	ldr	r3, [fp, #-8]
   17b48:	ldr	r3, [r3, #8]
   17b4c:	cmp	r3, #0
   17b50:	beq	17c00 <__assert_fail@plt+0x63b4>
   17b54:	ldr	r3, [fp, #-8]
   17b58:	ldr	r3, [r3, #8]
   17b5c:	mov	r1, #8
   17b60:	mov	r0, r3
   17b64:	bl	1dab4 <lchmod@@Base+0x4d10>
   17b68:	mov	r3, r0
   17b6c:	mov	r2, r3
   17b70:	ldr	r3, [fp, #-8]
   17b74:	str	r2, [r3]
   17b78:	ldr	r3, [fp, #-8]
   17b7c:	ldr	r3, [r3]
   17b80:	cmp	r3, #0
   17b84:	beq	17c08 <__assert_fail@plt+0x63bc>
   17b88:	ldr	r3, [fp, #-8]
   17b8c:	ldr	r2, [r3]
   17b90:	ldr	r3, [fp, #-8]
   17b94:	ldr	r3, [r3, #8]
   17b98:	lsl	r3, r3, #3
   17b9c:	add	r2, r2, r3
   17ba0:	ldr	r3, [fp, #-8]
   17ba4:	str	r2, [r3, #4]
   17ba8:	ldr	r3, [fp, #-8]
   17bac:	mov	r2, #0
   17bb0:	str	r2, [r3, #12]
   17bb4:	ldr	r3, [fp, #-8]
   17bb8:	mov	r2, #0
   17bbc:	str	r2, [r3, #16]
   17bc0:	ldr	r3, [fp, #-8]
   17bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bc8:	str	r2, [r3, #24]
   17bcc:	ldr	r3, [fp, #-8]
   17bd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17bd4:	str	r2, [r3, #28]
   17bd8:	ldr	r3, [fp, #-8]
   17bdc:	ldr	r2, [fp, #4]
   17be0:	str	r2, [r3, #32]
   17be4:	ldr	r3, [fp, #-8]
   17be8:	mov	r2, #0
   17bec:	str	r2, [r3, #36]	; 0x24
   17bf0:	ldr	r3, [fp, #-8]
   17bf4:	b	17c18 <__assert_fail@plt+0x63cc>
   17bf8:	nop			; (mov r0, r0)
   17bfc:	b	17c0c <__assert_fail@plt+0x63c0>
   17c00:	nop			; (mov r0, r0)
   17c04:	b	17c0c <__assert_fail@plt+0x63c0>
   17c08:	nop			; (mov r0, r0)
   17c0c:	ldr	r0, [fp, #-8]
   17c10:	bl	13c50 <__assert_fail@plt+0x2404>
   17c14:	mov	r3, #0
   17c18:	mov	r0, r3
   17c1c:	sub	sp, fp, #4
   17c20:	pop	{fp, pc}
   17c24:	ldrdeq	r7, [r1], -r4
   17c28:	andeq	r7, r1, ip, lsl r8
   17c2c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   17c30:	push	{fp, lr}
   17c34:	add	fp, sp, #4
   17c38:	sub	sp, sp, #24
   17c3c:	str	r0, [fp, #-24]	; 0xffffffe8
   17c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c44:	ldr	r3, [r3]
   17c48:	str	r3, [fp, #-8]
   17c4c:	b	17d2c <__assert_fail@plt+0x64e0>
   17c50:	ldr	r3, [fp, #-8]
   17c54:	ldr	r3, [r3]
   17c58:	cmp	r3, #0
   17c5c:	beq	17d20 <__assert_fail@plt+0x64d4>
   17c60:	ldr	r3, [fp, #-8]
   17c64:	ldr	r3, [r3, #4]
   17c68:	str	r3, [fp, #-12]
   17c6c:	b	17cd4 <__assert_fail@plt+0x6488>
   17c70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c74:	ldr	r3, [r3, #32]
   17c78:	cmp	r3, #0
   17c7c:	beq	17c98 <__assert_fail@plt+0x644c>
   17c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c84:	ldr	r3, [r3, #32]
   17c88:	ldr	r2, [fp, #-12]
   17c8c:	ldr	r2, [r2]
   17c90:	mov	r0, r2
   17c94:	blx	r3
   17c98:	ldr	r3, [fp, #-12]
   17c9c:	mov	r2, #0
   17ca0:	str	r2, [r3]
   17ca4:	ldr	r3, [fp, #-12]
   17ca8:	ldr	r3, [r3, #4]
   17cac:	str	r3, [fp, #-16]
   17cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cb4:	ldr	r2, [r3, #36]	; 0x24
   17cb8:	ldr	r3, [fp, #-12]
   17cbc:	str	r2, [r3, #4]
   17cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cc4:	ldr	r2, [fp, #-12]
   17cc8:	str	r2, [r3, #36]	; 0x24
   17ccc:	ldr	r3, [fp, #-16]
   17cd0:	str	r3, [fp, #-12]
   17cd4:	ldr	r3, [fp, #-12]
   17cd8:	cmp	r3, #0
   17cdc:	bne	17c70 <__assert_fail@plt+0x6424>
   17ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ce4:	ldr	r3, [r3, #32]
   17ce8:	cmp	r3, #0
   17cec:	beq	17d08 <__assert_fail@plt+0x64bc>
   17cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cf4:	ldr	r3, [r3, #32]
   17cf8:	ldr	r2, [fp, #-8]
   17cfc:	ldr	r2, [r2]
   17d00:	mov	r0, r2
   17d04:	blx	r3
   17d08:	ldr	r3, [fp, #-8]
   17d0c:	mov	r2, #0
   17d10:	str	r2, [r3]
   17d14:	ldr	r3, [fp, #-8]
   17d18:	mov	r2, #0
   17d1c:	str	r2, [r3, #4]
   17d20:	ldr	r3, [fp, #-8]
   17d24:	add	r3, r3, #8
   17d28:	str	r3, [fp, #-8]
   17d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d30:	ldr	r2, [r3, #4]
   17d34:	ldr	r3, [fp, #-8]
   17d38:	cmp	r2, r3
   17d3c:	bhi	17c50 <__assert_fail@plt+0x6404>
   17d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d44:	mov	r2, #0
   17d48:	str	r2, [r3, #12]
   17d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d50:	mov	r2, #0
   17d54:	str	r2, [r3, #16]
   17d58:	nop			; (mov r0, r0)
   17d5c:	sub	sp, fp, #4
   17d60:	pop	{fp, pc}
   17d64:	push	{fp, lr}
   17d68:	add	fp, sp, #4
   17d6c:	sub	sp, sp, #24
   17d70:	str	r0, [fp, #-24]	; 0xffffffe8
   17d74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d78:	ldr	r3, [r3, #32]
   17d7c:	cmp	r3, #0
   17d80:	beq	17e10 <__assert_fail@plt+0x65c4>
   17d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d88:	ldr	r3, [r3, #16]
   17d8c:	cmp	r3, #0
   17d90:	beq	17e10 <__assert_fail@plt+0x65c4>
   17d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d98:	ldr	r3, [r3]
   17d9c:	str	r3, [fp, #-8]
   17da0:	b	17dfc <__assert_fail@plt+0x65b0>
   17da4:	ldr	r3, [fp, #-8]
   17da8:	ldr	r3, [r3]
   17dac:	cmp	r3, #0
   17db0:	beq	17df0 <__assert_fail@plt+0x65a4>
   17db4:	ldr	r3, [fp, #-8]
   17db8:	str	r3, [fp, #-12]
   17dbc:	b	17de4 <__assert_fail@plt+0x6598>
   17dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17dc4:	ldr	r3, [r3, #32]
   17dc8:	ldr	r2, [fp, #-12]
   17dcc:	ldr	r2, [r2]
   17dd0:	mov	r0, r2
   17dd4:	blx	r3
   17dd8:	ldr	r3, [fp, #-12]
   17ddc:	ldr	r3, [r3, #4]
   17de0:	str	r3, [fp, #-12]
   17de4:	ldr	r3, [fp, #-12]
   17de8:	cmp	r3, #0
   17dec:	bne	17dc0 <__assert_fail@plt+0x6574>
   17df0:	ldr	r3, [fp, #-8]
   17df4:	add	r3, r3, #8
   17df8:	str	r3, [fp, #-8]
   17dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e00:	ldr	r2, [r3, #4]
   17e04:	ldr	r3, [fp, #-8]
   17e08:	cmp	r2, r3
   17e0c:	bhi	17da4 <__assert_fail@plt+0x6558>
   17e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e14:	ldr	r3, [r3]
   17e18:	str	r3, [fp, #-8]
   17e1c:	b	17e64 <__assert_fail@plt+0x6618>
   17e20:	ldr	r3, [fp, #-8]
   17e24:	ldr	r3, [r3, #4]
   17e28:	str	r3, [fp, #-12]
   17e2c:	b	17e4c <__assert_fail@plt+0x6600>
   17e30:	ldr	r3, [fp, #-12]
   17e34:	ldr	r3, [r3, #4]
   17e38:	str	r3, [fp, #-16]
   17e3c:	ldr	r0, [fp, #-12]
   17e40:	bl	13c50 <__assert_fail@plt+0x2404>
   17e44:	ldr	r3, [fp, #-16]
   17e48:	str	r3, [fp, #-12]
   17e4c:	ldr	r3, [fp, #-12]
   17e50:	cmp	r3, #0
   17e54:	bne	17e30 <__assert_fail@plt+0x65e4>
   17e58:	ldr	r3, [fp, #-8]
   17e5c:	add	r3, r3, #8
   17e60:	str	r3, [fp, #-8]
   17e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e68:	ldr	r2, [r3, #4]
   17e6c:	ldr	r3, [fp, #-8]
   17e70:	cmp	r2, r3
   17e74:	bhi	17e20 <__assert_fail@plt+0x65d4>
   17e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e7c:	ldr	r3, [r3, #36]	; 0x24
   17e80:	str	r3, [fp, #-12]
   17e84:	b	17ea4 <__assert_fail@plt+0x6658>
   17e88:	ldr	r3, [fp, #-12]
   17e8c:	ldr	r3, [r3, #4]
   17e90:	str	r3, [fp, #-16]
   17e94:	ldr	r0, [fp, #-12]
   17e98:	bl	13c50 <__assert_fail@plt+0x2404>
   17e9c:	ldr	r3, [fp, #-16]
   17ea0:	str	r3, [fp, #-12]
   17ea4:	ldr	r3, [fp, #-12]
   17ea8:	cmp	r3, #0
   17eac:	bne	17e88 <__assert_fail@plt+0x663c>
   17eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17eb4:	ldr	r3, [r3]
   17eb8:	mov	r0, r3
   17ebc:	bl	13c50 <__assert_fail@plt+0x2404>
   17ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ec4:	bl	13c50 <__assert_fail@plt+0x2404>
   17ec8:	nop			; (mov r0, r0)
   17ecc:	sub	sp, fp, #4
   17ed0:	pop	{fp, pc}
   17ed4:	push	{fp, lr}
   17ed8:	add	fp, sp, #4
   17edc:	sub	sp, sp, #16
   17ee0:	str	r0, [fp, #-16]
   17ee4:	ldr	r3, [fp, #-16]
   17ee8:	ldr	r3, [r3, #36]	; 0x24
   17eec:	cmp	r3, #0
   17ef0:	beq	17f14 <__assert_fail@plt+0x66c8>
   17ef4:	ldr	r3, [fp, #-16]
   17ef8:	ldr	r3, [r3, #36]	; 0x24
   17efc:	str	r3, [fp, #-8]
   17f00:	ldr	r3, [fp, #-8]
   17f04:	ldr	r2, [r3, #4]
   17f08:	ldr	r3, [fp, #-16]
   17f0c:	str	r2, [r3, #36]	; 0x24
   17f10:	b	17f24 <__assert_fail@plt+0x66d8>
   17f14:	mov	r0, #8
   17f18:	bl	1db78 <lchmod@@Base+0x4dd4>
   17f1c:	mov	r3, r0
   17f20:	str	r3, [fp, #-8]
   17f24:	ldr	r3, [fp, #-8]
   17f28:	mov	r0, r3
   17f2c:	sub	sp, fp, #4
   17f30:	pop	{fp, pc}
   17f34:	push	{fp}		; (str fp, [sp, #-4]!)
   17f38:	add	fp, sp, #0
   17f3c:	sub	sp, sp, #12
   17f40:	str	r0, [fp, #-8]
   17f44:	str	r1, [fp, #-12]
   17f48:	ldr	r3, [fp, #-12]
   17f4c:	mov	r2, #0
   17f50:	str	r2, [r3]
   17f54:	ldr	r3, [fp, #-8]
   17f58:	ldr	r2, [r3, #36]	; 0x24
   17f5c:	ldr	r3, [fp, #-12]
   17f60:	str	r2, [r3, #4]
   17f64:	ldr	r3, [fp, #-8]
   17f68:	ldr	r2, [fp, #-12]
   17f6c:	str	r2, [r3, #36]	; 0x24
   17f70:	nop			; (mov r0, r0)
   17f74:	add	sp, fp, #0
   17f78:	pop	{fp}		; (ldr fp, [sp], #4)
   17f7c:	bx	lr
   17f80:	push	{fp, lr}
   17f84:	add	fp, sp, #4
   17f88:	sub	sp, sp, #40	; 0x28
   17f8c:	str	r0, [fp, #-32]	; 0xffffffe0
   17f90:	str	r1, [fp, #-36]	; 0xffffffdc
   17f94:	str	r2, [fp, #-40]	; 0xffffffd8
   17f98:	strb	r3, [fp, #-41]	; 0xffffffd7
   17f9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fa4:	bl	171d0 <__assert_fail@plt+0x5984>
   17fa8:	str	r0, [fp, #-12]
   17fac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17fb0:	ldr	r2, [fp, #-12]
   17fb4:	str	r2, [r3]
   17fb8:	ldr	r3, [fp, #-12]
   17fbc:	ldr	r3, [r3]
   17fc0:	cmp	r3, #0
   17fc4:	bne	17fd0 <__assert_fail@plt+0x6784>
   17fc8:	mov	r3, #0
   17fcc:	b	18130 <__assert_fail@plt+0x68e4>
   17fd0:	ldr	r3, [fp, #-12]
   17fd4:	ldr	r2, [r3]
   17fd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17fdc:	cmp	r2, r3
   17fe0:	beq	1800c <__assert_fail@plt+0x67c0>
   17fe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fe8:	ldr	r3, [r3, #28]
   17fec:	ldr	r2, [fp, #-12]
   17ff0:	ldr	r2, [r2]
   17ff4:	mov	r1, r2
   17ff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17ffc:	blx	r3
   18000:	mov	r3, r0
   18004:	cmp	r3, #0
   18008:	beq	18074 <__assert_fail@plt+0x6828>
   1800c:	ldr	r3, [fp, #-12]
   18010:	ldr	r3, [r3]
   18014:	str	r3, [fp, #-24]	; 0xffffffe8
   18018:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1801c:	cmp	r3, #0
   18020:	beq	1806c <__assert_fail@plt+0x6820>
   18024:	ldr	r3, [fp, #-12]
   18028:	ldr	r3, [r3, #4]
   1802c:	cmp	r3, #0
   18030:	beq	18060 <__assert_fail@plt+0x6814>
   18034:	ldr	r3, [fp, #-12]
   18038:	ldr	r3, [r3, #4]
   1803c:	str	r3, [fp, #-28]	; 0xffffffe4
   18040:	ldr	r3, [fp, #-12]
   18044:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18048:	ldm	r2, {r0, r1}
   1804c:	stm	r3, {r0, r1}
   18050:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18058:	bl	17f34 <__assert_fail@plt+0x66e8>
   1805c:	b	1806c <__assert_fail@plt+0x6820>
   18060:	ldr	r3, [fp, #-12]
   18064:	mov	r2, #0
   18068:	str	r2, [r3]
   1806c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18070:	b	18130 <__assert_fail@plt+0x68e4>
   18074:	ldr	r3, [fp, #-12]
   18078:	str	r3, [fp, #-8]
   1807c:	b	1811c <__assert_fail@plt+0x68d0>
   18080:	ldr	r3, [fp, #-8]
   18084:	ldr	r3, [r3, #4]
   18088:	ldr	r2, [r3]
   1808c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18090:	cmp	r2, r3
   18094:	beq	180c4 <__assert_fail@plt+0x6878>
   18098:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1809c:	ldr	r3, [r3, #28]
   180a0:	ldr	r2, [fp, #-8]
   180a4:	ldr	r2, [r2, #4]
   180a8:	ldr	r2, [r2]
   180ac:	mov	r1, r2
   180b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   180b4:	blx	r3
   180b8:	mov	r3, r0
   180bc:	cmp	r3, #0
   180c0:	beq	18110 <__assert_fail@plt+0x68c4>
   180c4:	ldr	r3, [fp, #-8]
   180c8:	ldr	r3, [r3, #4]
   180cc:	ldr	r3, [r3]
   180d0:	str	r3, [fp, #-16]
   180d4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   180d8:	cmp	r3, #0
   180dc:	beq	18108 <__assert_fail@plt+0x68bc>
   180e0:	ldr	r3, [fp, #-8]
   180e4:	ldr	r3, [r3, #4]
   180e8:	str	r3, [fp, #-20]	; 0xffffffec
   180ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   180f0:	ldr	r2, [r3, #4]
   180f4:	ldr	r3, [fp, #-8]
   180f8:	str	r2, [r3, #4]
   180fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18104:	bl	17f34 <__assert_fail@plt+0x66e8>
   18108:	ldr	r3, [fp, #-16]
   1810c:	b	18130 <__assert_fail@plt+0x68e4>
   18110:	ldr	r3, [fp, #-8]
   18114:	ldr	r3, [r3, #4]
   18118:	str	r3, [fp, #-8]
   1811c:	ldr	r3, [fp, #-8]
   18120:	ldr	r3, [r3, #4]
   18124:	cmp	r3, #0
   18128:	bne	18080 <__assert_fail@plt+0x6834>
   1812c:	mov	r3, #0
   18130:	mov	r0, r3
   18134:	sub	sp, fp, #4
   18138:	pop	{fp, pc}
   1813c:	push	{fp, lr}
   18140:	add	fp, sp, #4
   18144:	sub	sp, sp, #40	; 0x28
   18148:	str	r0, [fp, #-32]	; 0xffffffe0
   1814c:	str	r1, [fp, #-36]	; 0xffffffdc
   18150:	mov	r3, r2
   18154:	strb	r3, [fp, #-37]	; 0xffffffdb
   18158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1815c:	ldr	r3, [r3]
   18160:	str	r3, [fp, #-8]
   18164:	b	18304 <__assert_fail@plt+0x6ab8>
   18168:	ldr	r3, [fp, #-8]
   1816c:	ldr	r3, [r3]
   18170:	cmp	r3, #0
   18174:	beq	182f8 <__assert_fail@plt+0x6aac>
   18178:	ldr	r3, [fp, #-8]
   1817c:	ldr	r3, [r3, #4]
   18180:	str	r3, [fp, #-12]
   18184:	b	18214 <__assert_fail@plt+0x69c8>
   18188:	ldr	r3, [fp, #-12]
   1818c:	ldr	r3, [r3]
   18190:	str	r3, [fp, #-16]
   18194:	ldr	r1, [fp, #-16]
   18198:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1819c:	bl	171d0 <__assert_fail@plt+0x5984>
   181a0:	str	r0, [fp, #-20]	; 0xffffffec
   181a4:	ldr	r3, [fp, #-12]
   181a8:	ldr	r3, [r3, #4]
   181ac:	str	r3, [fp, #-24]	; 0xffffffe8
   181b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   181b4:	ldr	r3, [r3]
   181b8:	cmp	r3, #0
   181bc:	beq	181e0 <__assert_fail@plt+0x6994>
   181c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   181c4:	ldr	r2, [r3, #4]
   181c8:	ldr	r3, [fp, #-12]
   181cc:	str	r2, [r3, #4]
   181d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   181d4:	ldr	r2, [fp, #-12]
   181d8:	str	r2, [r3, #4]
   181dc:	b	1820c <__assert_fail@plt+0x69c0>
   181e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   181e4:	ldr	r2, [fp, #-16]
   181e8:	str	r2, [r3]
   181ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   181f0:	ldr	r3, [r3, #12]
   181f4:	add	r2, r3, #1
   181f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   181fc:	str	r2, [r3, #12]
   18200:	ldr	r1, [fp, #-12]
   18204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18208:	bl	17f34 <__assert_fail@plt+0x66e8>
   1820c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18210:	str	r3, [fp, #-12]
   18214:	ldr	r3, [fp, #-12]
   18218:	cmp	r3, #0
   1821c:	bne	18188 <__assert_fail@plt+0x693c>
   18220:	ldr	r3, [fp, #-8]
   18224:	ldr	r3, [r3]
   18228:	str	r3, [fp, #-16]
   1822c:	ldr	r3, [fp, #-8]
   18230:	mov	r2, #0
   18234:	str	r2, [r3, #4]
   18238:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1823c:	cmp	r3, #0
   18240:	bne	182f4 <__assert_fail@plt+0x6aa8>
   18244:	ldr	r1, [fp, #-16]
   18248:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1824c:	bl	171d0 <__assert_fail@plt+0x5984>
   18250:	str	r0, [fp, #-20]	; 0xffffffec
   18254:	ldr	r3, [fp, #-20]	; 0xffffffec
   18258:	ldr	r3, [r3]
   1825c:	cmp	r3, #0
   18260:	beq	182b0 <__assert_fail@plt+0x6a64>
   18264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18268:	bl	17ed4 <__assert_fail@plt+0x6688>
   1826c:	str	r0, [fp, #-28]	; 0xffffffe4
   18270:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18274:	cmp	r3, #0
   18278:	bne	18284 <__assert_fail@plt+0x6a38>
   1827c:	mov	r3, #0
   18280:	b	1831c <__assert_fail@plt+0x6ad0>
   18284:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18288:	ldr	r2, [fp, #-16]
   1828c:	str	r2, [r3]
   18290:	ldr	r3, [fp, #-20]	; 0xffffffec
   18294:	ldr	r2, [r3, #4]
   18298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1829c:	str	r2, [r3, #4]
   182a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   182a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   182a8:	str	r2, [r3, #4]
   182ac:	b	182d0 <__assert_fail@plt+0x6a84>
   182b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   182b4:	ldr	r2, [fp, #-16]
   182b8:	str	r2, [r3]
   182bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182c0:	ldr	r3, [r3, #12]
   182c4:	add	r2, r3, #1
   182c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182cc:	str	r2, [r3, #12]
   182d0:	ldr	r3, [fp, #-8]
   182d4:	mov	r2, #0
   182d8:	str	r2, [r3]
   182dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182e0:	ldr	r3, [r3, #12]
   182e4:	sub	r2, r3, #1
   182e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182ec:	str	r2, [r3, #12]
   182f0:	b	182f8 <__assert_fail@plt+0x6aac>
   182f4:	nop			; (mov r0, r0)
   182f8:	ldr	r3, [fp, #-8]
   182fc:	add	r3, r3, #8
   18300:	str	r3, [fp, #-8]
   18304:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18308:	ldr	r2, [r3, #4]
   1830c:	ldr	r3, [fp, #-8]
   18310:	cmp	r2, r3
   18314:	bhi	18168 <__assert_fail@plt+0x691c>
   18318:	mov	r3, #1
   1831c:	mov	r0, r3
   18320:	sub	sp, fp, #4
   18324:	pop	{fp, pc}
   18328:	push	{fp, lr}
   1832c:	add	fp, sp, #4
   18330:	sub	sp, sp, #56	; 0x38
   18334:	str	r0, [fp, #-56]	; 0xffffffc8
   18338:	str	r1, [fp, #-60]	; 0xffffffc4
   1833c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18340:	ldr	r3, [r3, #20]
   18344:	mov	r1, r3
   18348:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1834c:	bl	17994 <__assert_fail@plt+0x6148>
   18350:	str	r0, [fp, #-8]
   18354:	ldr	r3, [fp, #-8]
   18358:	cmp	r3, #0
   1835c:	bne	18368 <__assert_fail@plt+0x6b1c>
   18360:	mov	r3, #0
   18364:	b	18544 <__assert_fail@plt+0x6cf8>
   18368:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1836c:	ldr	r2, [r3, #8]
   18370:	ldr	r3, [fp, #-8]
   18374:	cmp	r2, r3
   18378:	bne	18384 <__assert_fail@plt+0x6b38>
   1837c:	mov	r3, #1
   18380:	b	18544 <__assert_fail@plt+0x6cf8>
   18384:	sub	r3, fp, #52	; 0x34
   18388:	str	r3, [fp, #-12]
   1838c:	mov	r1, #8
   18390:	ldr	r0, [fp, #-8]
   18394:	bl	1dab4 <lchmod@@Base+0x4d10>
   18398:	mov	r3, r0
   1839c:	mov	r2, r3
   183a0:	ldr	r3, [fp, #-12]
   183a4:	str	r2, [r3]
   183a8:	ldr	r3, [fp, #-12]
   183ac:	ldr	r3, [r3]
   183b0:	cmp	r3, #0
   183b4:	bne	183c0 <__assert_fail@plt+0x6b74>
   183b8:	mov	r3, #0
   183bc:	b	18544 <__assert_fail@plt+0x6cf8>
   183c0:	ldr	r3, [fp, #-12]
   183c4:	ldr	r2, [fp, #-8]
   183c8:	str	r2, [r3, #8]
   183cc:	ldr	r3, [fp, #-12]
   183d0:	ldr	r2, [r3]
   183d4:	ldr	r3, [fp, #-8]
   183d8:	lsl	r3, r3, #3
   183dc:	add	r2, r2, r3
   183e0:	ldr	r3, [fp, #-12]
   183e4:	str	r2, [r3, #4]
   183e8:	ldr	r3, [fp, #-12]
   183ec:	mov	r2, #0
   183f0:	str	r2, [r3, #12]
   183f4:	ldr	r3, [fp, #-12]
   183f8:	mov	r2, #0
   183fc:	str	r2, [r3, #16]
   18400:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18404:	ldr	r2, [r3, #20]
   18408:	ldr	r3, [fp, #-12]
   1840c:	str	r2, [r3, #20]
   18410:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18414:	ldr	r2, [r3, #24]
   18418:	ldr	r3, [fp, #-12]
   1841c:	str	r2, [r3, #24]
   18420:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18424:	ldr	r2, [r3, #28]
   18428:	ldr	r3, [fp, #-12]
   1842c:	str	r2, [r3, #28]
   18430:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18434:	ldr	r2, [r3, #32]
   18438:	ldr	r3, [fp, #-12]
   1843c:	str	r2, [r3, #32]
   18440:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18444:	ldr	r2, [r3, #36]	; 0x24
   18448:	ldr	r3, [fp, #-12]
   1844c:	str	r2, [r3, #36]	; 0x24
   18450:	mov	r2, #0
   18454:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18458:	ldr	r0, [fp, #-12]
   1845c:	bl	1813c <__assert_fail@plt+0x68f0>
   18460:	mov	r3, r0
   18464:	cmp	r3, #0
   18468:	beq	184d4 <__assert_fail@plt+0x6c88>
   1846c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18470:	ldr	r3, [r3]
   18474:	mov	r0, r3
   18478:	bl	13c50 <__assert_fail@plt+0x2404>
   1847c:	ldr	r3, [fp, #-12]
   18480:	ldr	r2, [r3]
   18484:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18488:	str	r2, [r3]
   1848c:	ldr	r3, [fp, #-12]
   18490:	ldr	r2, [r3, #4]
   18494:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18498:	str	r2, [r3, #4]
   1849c:	ldr	r3, [fp, #-12]
   184a0:	ldr	r2, [r3, #8]
   184a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   184a8:	str	r2, [r3, #8]
   184ac:	ldr	r3, [fp, #-12]
   184b0:	ldr	r2, [r3, #12]
   184b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   184b8:	str	r2, [r3, #12]
   184bc:	ldr	r3, [fp, #-12]
   184c0:	ldr	r2, [r3, #36]	; 0x24
   184c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   184c8:	str	r2, [r3, #36]	; 0x24
   184cc:	mov	r3, #1
   184d0:	b	18544 <__assert_fail@plt+0x6cf8>
   184d4:	ldr	r3, [fp, #-12]
   184d8:	ldr	r2, [r3, #36]	; 0x24
   184dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   184e0:	str	r2, [r3, #36]	; 0x24
   184e4:	mov	r2, #1
   184e8:	ldr	r1, [fp, #-12]
   184ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   184f0:	bl	1813c <__assert_fail@plt+0x68f0>
   184f4:	mov	r3, r0
   184f8:	eor	r3, r3, #1
   184fc:	uxtb	r3, r3
   18500:	cmp	r3, #0
   18504:	bne	1852c <__assert_fail@plt+0x6ce0>
   18508:	mov	r2, #0
   1850c:	ldr	r1, [fp, #-12]
   18510:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18514:	bl	1813c <__assert_fail@plt+0x68f0>
   18518:	mov	r3, r0
   1851c:	eor	r3, r3, #1
   18520:	uxtb	r3, r3
   18524:	cmp	r3, #0
   18528:	beq	18530 <__assert_fail@plt+0x6ce4>
   1852c:	bl	117f8 <abort@plt>
   18530:	ldr	r3, [fp, #-12]
   18534:	ldr	r3, [r3]
   18538:	mov	r0, r3
   1853c:	bl	13c50 <__assert_fail@plt+0x2404>
   18540:	mov	r3, #0
   18544:	mov	r0, r3
   18548:	sub	sp, fp, #4
   1854c:	pop	{fp, pc}
   18550:	push	{fp, lr}
   18554:	add	fp, sp, #4
   18558:	sub	sp, sp, #40	; 0x28
   1855c:	str	r0, [fp, #-32]	; 0xffffffe0
   18560:	str	r1, [fp, #-36]	; 0xffffffdc
   18564:	str	r2, [fp, #-40]	; 0xffffffd8
   18568:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1856c:	cmp	r3, #0
   18570:	bne	18578 <__assert_fail@plt+0x6d2c>
   18574:	bl	117f8 <abort@plt>
   18578:	sub	r2, fp, #24
   1857c:	mov	r3, #0
   18580:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18588:	bl	17f80 <__assert_fail@plt+0x6734>
   1858c:	str	r0, [fp, #-8]
   18590:	ldr	r3, [fp, #-8]
   18594:	cmp	r3, #0
   18598:	beq	185bc <__assert_fail@plt+0x6d70>
   1859c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   185a0:	cmp	r3, #0
   185a4:	beq	185b4 <__assert_fail@plt+0x6d68>
   185a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   185ac:	ldr	r2, [fp, #-8]
   185b0:	str	r2, [r3]
   185b4:	mov	r3, #0
   185b8:	b	187c0 <__assert_fail@plt+0x6f74>
   185bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185c0:	ldr	r3, [r3, #12]
   185c4:	vmov	s15, r3
   185c8:	vcvt.f32.u32	s14, s15
   185cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185d0:	ldr	r3, [r3, #20]
   185d4:	vldr	s13, [r3, #8]
   185d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185dc:	ldr	r3, [r3, #8]
   185e0:	vmov	s15, r3
   185e4:	vcvt.f32.u32	s15, s15
   185e8:	vmul.f32	s15, s13, s15
   185ec:	vcmpe.f32	s14, s15
   185f0:	vmrs	APSR_nzcv, fpscr
   185f4:	ble	18714 <__assert_fail@plt+0x6ec8>
   185f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185fc:	bl	17858 <__assert_fail@plt+0x600c>
   18600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18604:	ldr	r3, [r3, #12]
   18608:	vmov	s15, r3
   1860c:	vcvt.f32.u32	s14, s15
   18610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18614:	ldr	r3, [r3, #20]
   18618:	vldr	s13, [r3, #8]
   1861c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18620:	ldr	r3, [r3, #8]
   18624:	vmov	s15, r3
   18628:	vcvt.f32.u32	s15, s15
   1862c:	vmul.f32	s15, s13, s15
   18630:	vcmpe.f32	s14, s15
   18634:	vmrs	APSR_nzcv, fpscr
   18638:	ble	18714 <__assert_fail@plt+0x6ec8>
   1863c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18640:	ldr	r3, [r3, #20]
   18644:	str	r3, [fp, #-12]
   18648:	ldr	r3, [fp, #-12]
   1864c:	ldrb	r3, [r3, #16]
   18650:	cmp	r3, #0
   18654:	beq	18678 <__assert_fail@plt+0x6e2c>
   18658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1865c:	ldr	r3, [r3, #8]
   18660:	vmov	s15, r3
   18664:	vcvt.f32.u32	s14, s15
   18668:	ldr	r3, [fp, #-12]
   1866c:	vldr	s15, [r3, #12]
   18670:	vmul.f32	s15, s14, s15
   18674:	b	186a0 <__assert_fail@plt+0x6e54>
   18678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1867c:	ldr	r3, [r3, #8]
   18680:	vmov	s15, r3
   18684:	vcvt.f32.u32	s14, s15
   18688:	ldr	r3, [fp, #-12]
   1868c:	vldr	s15, [r3, #12]
   18690:	vmul.f32	s14, s14, s15
   18694:	ldr	r3, [fp, #-12]
   18698:	vldr	s15, [r3, #8]
   1869c:	vmul.f32	s15, s14, s15
   186a0:	vstr	s15, [fp, #-16]
   186a4:	vldr	s15, [fp, #-16]
   186a8:	vldr	s14, [pc, #284]	; 187cc <__assert_fail@plt+0x6f80>
   186ac:	vcmpe.f32	s15, s14
   186b0:	vmrs	APSR_nzcv, fpscr
   186b4:	blt	186c0 <__assert_fail@plt+0x6e74>
   186b8:	mvn	r3, #0
   186bc:	b	187c0 <__assert_fail@plt+0x6f74>
   186c0:	vldr	s15, [fp, #-16]
   186c4:	vcvt.u32.f32	s15, s15
   186c8:	vmov	r1, s15
   186cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186d0:	bl	18328 <__assert_fail@plt+0x6adc>
   186d4:	mov	r3, r0
   186d8:	eor	r3, r3, #1
   186dc:	uxtb	r3, r3
   186e0:	cmp	r3, #0
   186e4:	beq	186f0 <__assert_fail@plt+0x6ea4>
   186e8:	mvn	r3, #0
   186ec:	b	187c0 <__assert_fail@plt+0x6f74>
   186f0:	sub	r2, fp, #24
   186f4:	mov	r3, #0
   186f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18700:	bl	17f80 <__assert_fail@plt+0x6734>
   18704:	mov	r3, r0
   18708:	cmp	r3, #0
   1870c:	beq	18714 <__assert_fail@plt+0x6ec8>
   18710:	bl	117f8 <abort@plt>
   18714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18718:	ldr	r3, [r3]
   1871c:	cmp	r3, #0
   18720:	beq	18788 <__assert_fail@plt+0x6f3c>
   18724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18728:	bl	17ed4 <__assert_fail@plt+0x6688>
   1872c:	str	r0, [fp, #-20]	; 0xffffffec
   18730:	ldr	r3, [fp, #-20]	; 0xffffffec
   18734:	cmp	r3, #0
   18738:	bne	18744 <__assert_fail@plt+0x6ef8>
   1873c:	mvn	r3, #0
   18740:	b	187c0 <__assert_fail@plt+0x6f74>
   18744:	ldr	r3, [fp, #-20]	; 0xffffffec
   18748:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1874c:	str	r2, [r3]
   18750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18754:	ldr	r2, [r3, #4]
   18758:	ldr	r3, [fp, #-20]	; 0xffffffec
   1875c:	str	r2, [r3, #4]
   18760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18764:	ldr	r2, [fp, #-20]	; 0xffffffec
   18768:	str	r2, [r3, #4]
   1876c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18770:	ldr	r3, [r3, #16]
   18774:	add	r2, r3, #1
   18778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1877c:	str	r2, [r3, #16]
   18780:	mov	r3, #1
   18784:	b	187c0 <__assert_fail@plt+0x6f74>
   18788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1878c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18790:	str	r2, [r3]
   18794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18798:	ldr	r3, [r3, #16]
   1879c:	add	r2, r3, #1
   187a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   187a4:	str	r2, [r3, #16]
   187a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   187ac:	ldr	r3, [r3, #12]
   187b0:	add	r2, r3, #1
   187b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   187b8:	str	r2, [r3, #12]
   187bc:	mov	r3, #1
   187c0:	mov	r0, r3
   187c4:	sub	sp, fp, #4
   187c8:	pop	{fp, pc}
   187cc:	svcmi	0x00800000
   187d0:	push	{fp, lr}
   187d4:	add	fp, sp, #4
   187d8:	sub	sp, sp, #16
   187dc:	str	r0, [fp, #-16]
   187e0:	str	r1, [fp, #-20]	; 0xffffffec
   187e4:	sub	r3, fp, #12
   187e8:	mov	r2, r3
   187ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   187f0:	ldr	r0, [fp, #-16]
   187f4:	bl	18550 <__assert_fail@plt+0x6d04>
   187f8:	str	r0, [fp, #-8]
   187fc:	ldr	r3, [fp, #-8]
   18800:	cmn	r3, #1
   18804:	beq	18824 <__assert_fail@plt+0x6fd8>
   18808:	ldr	r3, [fp, #-8]
   1880c:	cmp	r3, #0
   18810:	bne	1881c <__assert_fail@plt+0x6fd0>
   18814:	ldr	r3, [fp, #-12]
   18818:	b	18828 <__assert_fail@plt+0x6fdc>
   1881c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18820:	b	18828 <__assert_fail@plt+0x6fdc>
   18824:	mov	r3, #0
   18828:	mov	r0, r3
   1882c:	sub	sp, fp, #4
   18830:	pop	{fp, pc}
   18834:	push	{fp, lr}
   18838:	add	fp, sp, #4
   1883c:	sub	sp, sp, #32
   18840:	str	r0, [fp, #-32]	; 0xffffffe0
   18844:	str	r1, [fp, #-36]	; 0xffffffdc
   18848:	sub	r2, fp, #28
   1884c:	mov	r3, #1
   18850:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18858:	bl	17f80 <__assert_fail@plt+0x6734>
   1885c:	str	r0, [fp, #-12]
   18860:	ldr	r3, [fp, #-12]
   18864:	cmp	r3, #0
   18868:	bne	18874 <__assert_fail@plt+0x7028>
   1886c:	mov	r3, #0
   18870:	b	18a04 <__assert_fail@plt+0x71b8>
   18874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18878:	ldr	r3, [r3, #16]
   1887c:	sub	r2, r3, #1
   18880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18884:	str	r2, [r3, #16]
   18888:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1888c:	ldr	r3, [r3]
   18890:	cmp	r3, #0
   18894:	bne	18a00 <__assert_fail@plt+0x71b4>
   18898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1889c:	ldr	r3, [r3, #12]
   188a0:	sub	r2, r3, #1
   188a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188a8:	str	r2, [r3, #12]
   188ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188b0:	ldr	r3, [r3, #12]
   188b4:	vmov	s15, r3
   188b8:	vcvt.f32.u32	s14, s15
   188bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188c0:	ldr	r3, [r3, #20]
   188c4:	vldr	s13, [r3]
   188c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188cc:	ldr	r3, [r3, #8]
   188d0:	vmov	s15, r3
   188d4:	vcvt.f32.u32	s15, s15
   188d8:	vmul.f32	s15, s13, s15
   188dc:	vcmpe.f32	s14, s15
   188e0:	vmrs	APSR_nzcv, fpscr
   188e4:	bpl	18a00 <__assert_fail@plt+0x71b4>
   188e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188ec:	bl	17858 <__assert_fail@plt+0x600c>
   188f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   188f4:	ldr	r3, [r3, #12]
   188f8:	vmov	s15, r3
   188fc:	vcvt.f32.u32	s14, s15
   18900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18904:	ldr	r3, [r3, #20]
   18908:	vldr	s13, [r3]
   1890c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18910:	ldr	r3, [r3, #8]
   18914:	vmov	s15, r3
   18918:	vcvt.f32.u32	s15, s15
   1891c:	vmul.f32	s15, s13, s15
   18920:	vcmpe.f32	s14, s15
   18924:	vmrs	APSR_nzcv, fpscr
   18928:	bpl	18a00 <__assert_fail@plt+0x71b4>
   1892c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18930:	ldr	r3, [r3, #20]
   18934:	str	r3, [fp, #-16]
   18938:	ldr	r3, [fp, #-16]
   1893c:	ldrb	r3, [r3, #16]
   18940:	cmp	r3, #0
   18944:	beq	1896c <__assert_fail@plt+0x7120>
   18948:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1894c:	ldr	r3, [r3, #8]
   18950:	vmov	s15, r3
   18954:	vcvt.f32.u32	s14, s15
   18958:	ldr	r3, [fp, #-16]
   1895c:	vldr	s15, [r3, #4]
   18960:	vmul.f32	s15, s14, s15
   18964:	vcvt.u32.f32	s15, s15
   18968:	b	18998 <__assert_fail@plt+0x714c>
   1896c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18970:	ldr	r3, [r3, #8]
   18974:	vmov	s15, r3
   18978:	vcvt.f32.u32	s14, s15
   1897c:	ldr	r3, [fp, #-16]
   18980:	vldr	s15, [r3, #4]
   18984:	vmul.f32	s14, s14, s15
   18988:	ldr	r3, [fp, #-16]
   1898c:	vldr	s15, [r3, #8]
   18990:	vmul.f32	s15, s14, s15
   18994:	vcvt.u32.f32	s15, s15
   18998:	vstr	s15, [fp, #-20]	; 0xffffffec
   1899c:	ldr	r1, [fp, #-20]	; 0xffffffec
   189a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189a4:	bl	18328 <__assert_fail@plt+0x6adc>
   189a8:	mov	r3, r0
   189ac:	eor	r3, r3, #1
   189b0:	uxtb	r3, r3
   189b4:	cmp	r3, #0
   189b8:	beq	18a00 <__assert_fail@plt+0x71b4>
   189bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189c0:	ldr	r3, [r3, #36]	; 0x24
   189c4:	str	r3, [fp, #-8]
   189c8:	b	189e8 <__assert_fail@plt+0x719c>
   189cc:	ldr	r3, [fp, #-8]
   189d0:	ldr	r3, [r3, #4]
   189d4:	str	r3, [fp, #-24]	; 0xffffffe8
   189d8:	ldr	r0, [fp, #-8]
   189dc:	bl	13c50 <__assert_fail@plt+0x2404>
   189e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189e4:	str	r3, [fp, #-8]
   189e8:	ldr	r3, [fp, #-8]
   189ec:	cmp	r3, #0
   189f0:	bne	189cc <__assert_fail@plt+0x7180>
   189f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   189f8:	mov	r2, #0
   189fc:	str	r2, [r3, #36]	; 0x24
   18a00:	ldr	r3, [fp, #-12]
   18a04:	mov	r0, r3
   18a08:	sub	sp, fp, #4
   18a0c:	pop	{fp, pc}
   18a10:	push	{fp, lr}
   18a14:	add	fp, sp, #4
   18a18:	sub	sp, sp, #8
   18a1c:	str	r0, [fp, #-8]
   18a20:	str	r1, [fp, #-12]
   18a24:	ldr	r1, [fp, #-12]
   18a28:	ldr	r0, [fp, #-8]
   18a2c:	bl	18834 <__assert_fail@plt+0x6fe8>
   18a30:	mov	r3, r0
   18a34:	mov	r0, r3
   18a38:	sub	sp, fp, #4
   18a3c:	pop	{fp, pc}
   18a40:	push	{fp, lr}
   18a44:	add	fp, sp, #4
   18a48:	sub	sp, sp, #16
   18a4c:	str	r0, [fp, #-16]
   18a50:	str	r1, [fp, #-20]	; 0xffffffec
   18a54:	ldr	r3, [fp, #-16]
   18a58:	str	r3, [fp, #-8]
   18a5c:	ldr	r3, [fp, #-8]
   18a60:	ldr	r3, [r3]
   18a64:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a68:	mov	r0, r3
   18a6c:	bl	1eab8 <lchmod@@Base+0x5d14>
   18a70:	str	r0, [fp, #-12]
   18a74:	ldr	r3, [fp, #-12]
   18a78:	mov	r0, r3
   18a7c:	mov	r1, #0
   18a80:	ldr	r3, [fp, #-8]
   18a84:	ldrd	r2, [r3, #8]
   18a88:	eor	r0, r0, r2
   18a8c:	eor	r1, r1, r3
   18a90:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a94:	mov	r2, r3
   18a98:	mov	r3, #0
   18a9c:	bl	1f9a0 <lchmod@@Base+0x6bfc>
   18aa0:	mov	r3, r2
   18aa4:	mov	r0, r3
   18aa8:	sub	sp, fp, #4
   18aac:	pop	{fp, pc}
   18ab0:	push	{fp, lr}
   18ab4:	add	fp, sp, #4
   18ab8:	sub	sp, sp, #16
   18abc:	str	r0, [fp, #-16]
   18ac0:	str	r1, [fp, #-20]	; 0xffffffec
   18ac4:	ldr	r3, [fp, #-16]
   18ac8:	str	r3, [fp, #-8]
   18acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ad0:	str	r3, [fp, #-12]
   18ad4:	ldr	r3, [fp, #-8]
   18ad8:	ldrd	r0, [r3, #8]
   18adc:	ldr	r3, [fp, #-12]
   18ae0:	ldrd	r2, [r3, #8]
   18ae4:	cmp	r1, r3
   18ae8:	cmpeq	r0, r2
   18aec:	bne	18b3c <__assert_fail@plt+0x72f0>
   18af0:	ldr	r3, [fp, #-8]
   18af4:	ldrd	r0, [r3, #16]
   18af8:	ldr	r3, [fp, #-12]
   18afc:	ldrd	r2, [r3, #16]
   18b00:	cmp	r1, r3
   18b04:	cmpeq	r0, r2
   18b08:	bne	18b3c <__assert_fail@plt+0x72f0>
   18b0c:	ldr	r3, [fp, #-8]
   18b10:	ldr	r2, [r3]
   18b14:	ldr	r3, [fp, #-12]
   18b18:	ldr	r3, [r3]
   18b1c:	mov	r1, r3
   18b20:	mov	r0, r2
   18b24:	bl	11468 <strcmp@plt>
   18b28:	mov	r3, r0
   18b2c:	cmp	r3, #0
   18b30:	bne	18b3c <__assert_fail@plt+0x72f0>
   18b34:	mov	r3, #1
   18b38:	b	18b40 <__assert_fail@plt+0x72f4>
   18b3c:	mov	r3, #0
   18b40:	and	r3, r3, #1
   18b44:	uxtb	r3, r3
   18b48:	mov	r0, r3
   18b4c:	sub	sp, fp, #4
   18b50:	pop	{fp, pc}
   18b54:	push	{fp, lr}
   18b58:	add	fp, sp, #4
   18b5c:	sub	sp, sp, #16
   18b60:	str	r0, [fp, #-16]
   18b64:	ldr	r3, [fp, #-16]
   18b68:	str	r3, [fp, #-8]
   18b6c:	ldr	r3, [fp, #-8]
   18b70:	ldr	r3, [r3]
   18b74:	mov	r0, r3
   18b78:	bl	13c50 <__assert_fail@plt+0x2404>
   18b7c:	ldr	r0, [fp, #-8]
   18b80:	bl	13c50 <__assert_fail@plt+0x2404>
   18b84:	nop			; (mov r0, r0)
   18b88:	sub	sp, fp, #4
   18b8c:	pop	{fp, pc}
   18b90:	push	{fp}		; (str fp, [sp, #-4]!)
   18b94:	add	fp, sp, #0
   18b98:	sub	sp, sp, #20
   18b9c:	str	r0, [fp, #-16]
   18ba0:	str	r1, [fp, #-20]	; 0xffffffec
   18ba4:	ldr	r3, [fp, #-16]
   18ba8:	mov	r2, #1
   18bac:	strb	r2, [r3, #28]
   18bb0:	ldr	r3, [fp, #-16]
   18bb4:	mov	r2, #0
   18bb8:	str	r2, [r3, #20]
   18bbc:	ldr	r3, [fp, #-16]
   18bc0:	mov	r2, #0
   18bc4:	str	r2, [r3, #24]
   18bc8:	mov	r3, #0
   18bcc:	str	r3, [fp, #-8]
   18bd0:	b	18bf0 <__assert_fail@plt+0x73a4>
   18bd4:	ldr	r3, [fp, #-16]
   18bd8:	ldr	r2, [fp, #-8]
   18bdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18be0:	str	r1, [r3, r2, lsl #2]
   18be4:	ldr	r3, [fp, #-8]
   18be8:	add	r3, r3, #1
   18bec:	str	r3, [fp, #-8]
   18bf0:	ldr	r3, [fp, #-8]
   18bf4:	cmp	r3, #3
   18bf8:	ble	18bd4 <__assert_fail@plt+0x7388>
   18bfc:	ldr	r3, [fp, #-16]
   18c00:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c04:	str	r2, [r3, #16]
   18c08:	nop			; (mov r0, r0)
   18c0c:	add	sp, fp, #0
   18c10:	pop	{fp}		; (ldr fp, [sp], #4)
   18c14:	bx	lr
   18c18:	push	{fp}		; (str fp, [sp, #-4]!)
   18c1c:	add	fp, sp, #0
   18c20:	sub	sp, sp, #12
   18c24:	str	r0, [fp, #-8]
   18c28:	ldr	r3, [fp, #-8]
   18c2c:	ldrb	r3, [r3, #28]
   18c30:	mov	r0, r3
   18c34:	add	sp, fp, #0
   18c38:	pop	{fp}		; (ldr fp, [sp], #4)
   18c3c:	bx	lr
   18c40:	push	{fp}		; (str fp, [sp, #-4]!)
   18c44:	add	fp, sp, #0
   18c48:	sub	sp, sp, #20
   18c4c:	str	r0, [fp, #-16]
   18c50:	str	r1, [fp, #-20]	; 0xffffffec
   18c54:	ldr	r3, [fp, #-16]
   18c58:	ldr	r3, [r3, #20]
   18c5c:	ldr	r2, [fp, #-16]
   18c60:	ldrb	r2, [r2, #28]
   18c64:	eor	r2, r2, #1
   18c68:	uxtb	r2, r2
   18c6c:	add	r3, r3, r2
   18c70:	and	r3, r3, #3
   18c74:	str	r3, [fp, #-8]
   18c78:	ldr	r3, [fp, #-16]
   18c7c:	ldr	r2, [fp, #-8]
   18c80:	ldr	r3, [r3, r2, lsl #2]
   18c84:	str	r3, [fp, #-12]
   18c88:	ldr	r3, [fp, #-16]
   18c8c:	ldr	r2, [fp, #-8]
   18c90:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c94:	str	r1, [r3, r2, lsl #2]
   18c98:	ldr	r3, [fp, #-16]
   18c9c:	ldr	r2, [fp, #-8]
   18ca0:	str	r2, [r3, #20]
   18ca4:	ldr	r3, [fp, #-16]
   18ca8:	ldr	r2, [r3, #24]
   18cac:	ldr	r3, [fp, #-8]
   18cb0:	cmp	r2, r3
   18cb4:	bne	18ce0 <__assert_fail@plt+0x7494>
   18cb8:	ldr	r3, [fp, #-16]
   18cbc:	ldr	r3, [r3, #24]
   18cc0:	ldr	r2, [fp, #-16]
   18cc4:	ldrb	r2, [r2, #28]
   18cc8:	eor	r2, r2, #1
   18ccc:	uxtb	r2, r2
   18cd0:	add	r3, r3, r2
   18cd4:	and	r2, r3, #3
   18cd8:	ldr	r3, [fp, #-16]
   18cdc:	str	r2, [r3, #24]
   18ce0:	ldr	r3, [fp, #-16]
   18ce4:	mov	r2, #0
   18ce8:	strb	r2, [r3, #28]
   18cec:	ldr	r3, [fp, #-12]
   18cf0:	mov	r0, r3
   18cf4:	add	sp, fp, #0
   18cf8:	pop	{fp}		; (ldr fp, [sp], #4)
   18cfc:	bx	lr
   18d00:	push	{fp, lr}
   18d04:	add	fp, sp, #4
   18d08:	sub	sp, sp, #16
   18d0c:	str	r0, [fp, #-16]
   18d10:	ldr	r0, [fp, #-16]
   18d14:	bl	18c18 <__assert_fail@plt+0x73cc>
   18d18:	mov	r3, r0
   18d1c:	cmp	r3, #0
   18d20:	beq	18d28 <__assert_fail@plt+0x74dc>
   18d24:	bl	117f8 <abort@plt>
   18d28:	ldr	r3, [fp, #-16]
   18d2c:	ldr	r2, [r3, #20]
   18d30:	ldr	r3, [fp, #-16]
   18d34:	ldr	r3, [r3, r2, lsl #2]
   18d38:	str	r3, [fp, #-8]
   18d3c:	ldr	r3, [fp, #-16]
   18d40:	ldr	r2, [r3, #20]
   18d44:	ldr	r3, [fp, #-16]
   18d48:	ldr	r1, [r3, #16]
   18d4c:	ldr	r3, [fp, #-16]
   18d50:	str	r1, [r3, r2, lsl #2]
   18d54:	ldr	r3, [fp, #-16]
   18d58:	ldr	r2, [r3, #20]
   18d5c:	ldr	r3, [fp, #-16]
   18d60:	ldr	r3, [r3, #24]
   18d64:	cmp	r2, r3
   18d68:	bne	18d7c <__assert_fail@plt+0x7530>
   18d6c:	ldr	r3, [fp, #-16]
   18d70:	mov	r2, #1
   18d74:	strb	r2, [r3, #28]
   18d78:	b	18d94 <__assert_fail@plt+0x7548>
   18d7c:	ldr	r3, [fp, #-16]
   18d80:	ldr	r3, [r3, #20]
   18d84:	add	r3, r3, #3
   18d88:	and	r2, r3, #3
   18d8c:	ldr	r3, [fp, #-16]
   18d90:	str	r2, [r3, #20]
   18d94:	ldr	r3, [fp, #-8]
   18d98:	mov	r0, r3
   18d9c:	sub	sp, fp, #4
   18da0:	pop	{fp, pc}

00018da4 <lchmod@@Base>:
   18da4:	push	{fp, lr}
   18da8:	add	fp, sp, #4
   18dac:	sub	sp, sp, #160	; 0xa0
   18db0:	str	r0, [fp, #-160]	; 0xffffff60
   18db4:	str	r1, [fp, #-164]	; 0xffffff5c
   18db8:	mov	r1, #2654208	; 0x288000
   18dbc:	ldr	r0, [fp, #-160]	; 0xffffff60
   18dc0:	bl	115dc <open64@plt>
   18dc4:	str	r0, [fp, #-8]
   18dc8:	ldr	r3, [fp, #-8]
   18dcc:	cmp	r3, #0
   18dd0:	bge	18ddc <lchmod@@Base+0x38>
   18dd4:	ldr	r3, [fp, #-8]
   18dd8:	b	18ee4 <lchmod@@Base+0x140>
   18ddc:	sub	r2, fp, #124	; 0x7c
   18de0:	mov	r3, #4096	; 0x1000
   18de4:	ldr	r1, [pc, #260]	; 18ef0 <lchmod@@Base+0x14c>
   18de8:	ldr	r0, [fp, #-8]
   18dec:	bl	1fbc0 <lchmod@@Base+0x6e1c>
   18df0:	mov	r3, r0
   18df4:	cmp	r3, #0
   18df8:	beq	18e2c <lchmod@@Base+0x88>
   18dfc:	bl	116c0 <__errno_location@plt>
   18e00:	mov	r3, r0
   18e04:	ldr	r3, [r3]
   18e08:	str	r3, [fp, #-12]
   18e0c:	ldr	r0, [fp, #-8]
   18e10:	bl	11804 <close@plt>
   18e14:	bl	116c0 <__errno_location@plt>
   18e18:	mov	r2, r0
   18e1c:	ldr	r3, [fp, #-12]
   18e20:	str	r3, [r2]
   18e24:	mvn	r3, #0
   18e28:	b	18ee4 <lchmod@@Base+0x140>
   18e2c:	ldr	r3, [fp, #-108]	; 0xffffff94
   18e30:	and	r3, r3, #61440	; 0xf000
   18e34:	cmp	r3, #40960	; 0xa000
   18e38:	bne	18e5c <lchmod@@Base+0xb8>
   18e3c:	ldr	r0, [fp, #-8]
   18e40:	bl	11804 <close@plt>
   18e44:	bl	116c0 <__errno_location@plt>
   18e48:	mov	r2, r0
   18e4c:	mov	r3, #95	; 0x5f
   18e50:	str	r3, [r2]
   18e54:	mvn	r3, #0
   18e58:	b	18ee4 <lchmod@@Base+0x140>
   18e5c:	sub	r3, fp, #152	; 0x98
   18e60:	ldr	r2, [fp, #-8]
   18e64:	ldr	r1, [pc, #136]	; 18ef4 <lchmod@@Base+0x150>
   18e68:	mov	r0, r3
   18e6c:	bl	11744 <sprintf@plt>
   18e70:	sub	r3, fp, #152	; 0x98
   18e74:	ldr	r1, [fp, #-164]	; 0xffffff5c
   18e78:	mov	r0, r3
   18e7c:	bl	117d4 <chmod@plt>
   18e80:	str	r0, [fp, #-16]
   18e84:	bl	116c0 <__errno_location@plt>
   18e88:	mov	r3, r0
   18e8c:	ldr	r3, [r3]
   18e90:	str	r3, [fp, #-20]	; 0xffffffec
   18e94:	ldr	r0, [fp, #-8]
   18e98:	bl	11804 <close@plt>
   18e9c:	ldr	r3, [fp, #-16]
   18ea0:	cmp	r3, #0
   18ea4:	bne	18eb0 <lchmod@@Base+0x10c>
   18ea8:	ldr	r3, [fp, #-16]
   18eac:	b	18ee4 <lchmod@@Base+0x140>
   18eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18eb4:	cmp	r3, #2
   18eb8:	beq	18ed4 <lchmod@@Base+0x130>
   18ebc:	bl	116c0 <__errno_location@plt>
   18ec0:	mov	r2, r0
   18ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ec8:	str	r3, [r2]
   18ecc:	ldr	r3, [fp, #-16]
   18ed0:	b	18ee4 <lchmod@@Base+0x140>
   18ed4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   18ed8:	ldr	r0, [fp, #-160]	; 0xffffff60
   18edc:	bl	117d4 <chmod@plt>
   18ee0:	mov	r3, r0
   18ee4:	mov	r0, r3
   18ee8:	sub	sp, fp, #4
   18eec:	pop	{fp, pc}
   18ef0:	andeq	r0, r2, r0, ror r2
   18ef4:	andeq	r0, r2, r4, ror r2
   18ef8:	push	{fp}		; (str fp, [sp, #-4]!)
   18efc:	add	fp, sp, #0
   18f00:	sub	sp, sp, #12
   18f04:	str	r0, [fp, #-8]
   18f08:	ldr	r3, [fp, #-8]
   18f0c:	mov	r0, r3
   18f10:	add	sp, fp, #0
   18f14:	pop	{fp}		; (ldr fp, [sp], #4)
   18f18:	bx	lr
   18f1c:	push	{fp, lr}
   18f20:	add	fp, sp, #4
   18f24:	sub	sp, sp, #16
   18f28:	str	r0, [fp, #-16]
   18f2c:	str	r1, [fp, #-20]	; 0xffffffec
   18f30:	mov	r0, #32
   18f34:	bl	1ce3c <lchmod@@Base+0x4098>
   18f38:	mov	r3, r0
   18f3c:	str	r3, [fp, #-8]
   18f40:	ldr	r3, [fp, #-8]
   18f44:	mov	r2, #61	; 0x3d
   18f48:	strb	r2, [r3]
   18f4c:	ldr	r3, [fp, #-8]
   18f50:	mov	r2, #1
   18f54:	strb	r2, [r3, #1]
   18f58:	ldr	r3, [fp, #-8]
   18f5c:	ldr	r2, [pc, #56]	; 18f9c <lchmod@@Base+0x1f8>
   18f60:	str	r2, [r3, #4]
   18f64:	ldr	r3, [fp, #-8]
   18f68:	ldr	r2, [fp, #-16]
   18f6c:	str	r2, [r3, #8]
   18f70:	ldr	r3, [fp, #-8]
   18f74:	ldr	r2, [fp, #-20]	; 0xffffffec
   18f78:	str	r2, [r3, #12]
   18f7c:	ldr	r3, [fp, #-8]
   18f80:	add	r3, r3, #16
   18f84:	mov	r2, #0
   18f88:	strb	r2, [r3, #1]
   18f8c:	ldr	r3, [fp, #-8]
   18f90:	mov	r0, r3
   18f94:	sub	sp, fp, #4
   18f98:	pop	{fp, pc}
   18f9c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   18fa0:	push	{fp, lr}
   18fa4:	add	fp, sp, #4
   18fa8:	sub	sp, sp, #64	; 0x40
   18fac:	str	r0, [fp, #-64]	; 0xffffffc0
   18fb0:	mov	r3, #0
   18fb4:	str	r3, [fp, #-8]
   18fb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18fbc:	ldrb	r3, [r3]
   18fc0:	cmp	r3, #47	; 0x2f
   18fc4:	bls	190a8 <lchmod@@Base+0x304>
   18fc8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18fcc:	ldrb	r3, [r3]
   18fd0:	cmp	r3, #55	; 0x37
   18fd4:	bhi	190a8 <lchmod@@Base+0x304>
   18fd8:	mov	r3, #0
   18fdc:	str	r3, [fp, #-16]
   18fe0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18fe4:	str	r3, [fp, #-12]
   18fe8:	ldr	r3, [fp, #-16]
   18fec:	lsl	r2, r3, #3
   18ff0:	ldr	r3, [fp, #-12]
   18ff4:	add	r1, r3, #1
   18ff8:	str	r1, [fp, #-12]
   18ffc:	ldrb	r3, [r3]
   19000:	add	r3, r2, r3
   19004:	sub	r3, r3, #48	; 0x30
   19008:	str	r3, [fp, #-16]
   1900c:	ldr	r3, [fp, #-16]
   19010:	cmp	r3, #4096	; 0x1000
   19014:	bcc	19020 <lchmod@@Base+0x27c>
   19018:	mov	r3, #0
   1901c:	b	1957c <lchmod@@Base+0x7d8>
   19020:	ldr	r3, [fp, #-12]
   19024:	ldrb	r3, [r3]
   19028:	cmp	r3, #47	; 0x2f
   1902c:	bls	19040 <lchmod@@Base+0x29c>
   19030:	ldr	r3, [fp, #-12]
   19034:	ldrb	r3, [r3]
   19038:	cmp	r3, #55	; 0x37
   1903c:	bls	18fe8 <lchmod@@Base+0x244>
   19040:	ldr	r3, [fp, #-12]
   19044:	ldrb	r3, [r3]
   19048:	cmp	r3, #0
   1904c:	beq	19058 <lchmod@@Base+0x2b4>
   19050:	mov	r3, #0
   19054:	b	1957c <lchmod@@Base+0x7d8>
   19058:	ldr	r0, [fp, #-16]
   1905c:	bl	18ef8 <lchmod@@Base+0x154>
   19060:	str	r0, [fp, #-44]	; 0xffffffd4
   19064:	ldr	r2, [fp, #-12]
   19068:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1906c:	sub	r3, r2, r3
   19070:	cmp	r3, #4
   19074:	bgt	1908c <lchmod@@Base+0x2e8>
   19078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1907c:	and	r3, r3, #3072	; 0xc00
   19080:	mvn	r3, r3, lsr #10
   19084:	mvn	r3, r3, lsl #10
   19088:	b	19090 <lchmod@@Base+0x2ec>
   1908c:	ldr	r3, [pc, #1268]	; 19588 <lchmod@@Base+0x7e4>
   19090:	str	r3, [fp, #-48]	; 0xffffffd0
   19094:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19098:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1909c:	bl	18f1c <lchmod@@Base+0x178>
   190a0:	mov	r3, r0
   190a4:	b	1957c <lchmod@@Base+0x7d8>
   190a8:	mov	r3, #1
   190ac:	str	r3, [fp, #-20]	; 0xffffffec
   190b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   190b4:	str	r3, [fp, #-12]
   190b8:	b	19114 <lchmod@@Base+0x370>
   190bc:	ldr	r3, [fp, #-12]
   190c0:	ldrb	r3, [r3]
   190c4:	cmp	r3, #61	; 0x3d
   190c8:	beq	190ec <lchmod@@Base+0x348>
   190cc:	ldr	r3, [fp, #-12]
   190d0:	ldrb	r3, [r3]
   190d4:	cmp	r3, #43	; 0x2b
   190d8:	beq	190ec <lchmod@@Base+0x348>
   190dc:	ldr	r3, [fp, #-12]
   190e0:	ldrb	r3, [r3]
   190e4:	cmp	r3, #45	; 0x2d
   190e8:	bne	190f4 <lchmod@@Base+0x350>
   190ec:	mov	r3, #1
   190f0:	b	190f8 <lchmod@@Base+0x354>
   190f4:	mov	r3, #0
   190f8:	mov	r2, r3
   190fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19100:	add	r3, r3, r2
   19104:	str	r3, [fp, #-20]	; 0xffffffec
   19108:	ldr	r3, [fp, #-12]
   1910c:	add	r3, r3, #1
   19110:	str	r3, [fp, #-12]
   19114:	ldr	r3, [fp, #-12]
   19118:	ldrb	r3, [r3]
   1911c:	cmp	r3, #0
   19120:	bne	190bc <lchmod@@Base+0x318>
   19124:	mov	r1, #16
   19128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1912c:	bl	1d018 <lchmod@@Base+0x4274>
   19130:	mov	r3, r0
   19134:	str	r3, [fp, #-52]	; 0xffffffcc
   19138:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1913c:	str	r3, [fp, #-12]
   19140:	mov	r3, #0
   19144:	str	r3, [fp, #-24]	; 0xffffffe8
   19148:	ldr	r3, [fp, #-12]
   1914c:	ldrb	r3, [r3]
   19150:	cmp	r3, #97	; 0x61
   19154:	beq	191d0 <lchmod@@Base+0x42c>
   19158:	cmp	r3, #97	; 0x61
   1915c:	bgt	1917c <lchmod@@Base+0x3d8>
   19160:	cmp	r3, #45	; 0x2d
   19164:	beq	191f0 <lchmod@@Base+0x44c>
   19168:	cmp	r3, #61	; 0x3d
   1916c:	beq	191f0 <lchmod@@Base+0x44c>
   19170:	cmp	r3, #43	; 0x2b
   19174:	beq	191f0 <lchmod@@Base+0x44c>
   19178:	b	19570 <lchmod@@Base+0x7cc>
   1917c:	cmp	r3, #111	; 0x6f
   19180:	beq	191bc <lchmod@@Base+0x418>
   19184:	cmp	r3, #117	; 0x75
   19188:	beq	19198 <lchmod@@Base+0x3f4>
   1918c:	cmp	r3, #103	; 0x67
   19190:	beq	191a8 <lchmod@@Base+0x404>
   19194:	b	19570 <lchmod@@Base+0x7cc>
   19198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1919c:	orr	r3, r3, #2496	; 0x9c0
   191a0:	str	r3, [fp, #-24]	; 0xffffffe8
   191a4:	b	191e0 <lchmod@@Base+0x43c>
   191a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191ac:	orr	r3, r3, #1072	; 0x430
   191b0:	orr	r3, r3, #8
   191b4:	str	r3, [fp, #-24]	; 0xffffffe8
   191b8:	b	191e0 <lchmod@@Base+0x43c>
   191bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191c0:	orr	r3, r3, #516	; 0x204
   191c4:	orr	r3, r3, #3
   191c8:	str	r3, [fp, #-24]	; 0xffffffe8
   191cc:	b	191e0 <lchmod@@Base+0x43c>
   191d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191d4:	mvn	r3, r3, lsr #12
   191d8:	mvn	r3, r3, lsl #12
   191dc:	str	r3, [fp, #-24]	; 0xffffffe8
   191e0:	ldr	r3, [fp, #-12]
   191e4:	add	r3, r3, #1
   191e8:	str	r3, [fp, #-12]
   191ec:	b	19148 <lchmod@@Base+0x3a4>
   191f0:	ldr	r3, [fp, #-12]
   191f4:	add	r2, r3, #1
   191f8:	str	r2, [fp, #-12]
   191fc:	ldrb	r3, [r3]
   19200:	strb	r3, [fp, #-53]	; 0xffffffcb
   19204:	mov	r3, #0
   19208:	str	r3, [fp, #-32]	; 0xffffffe0
   1920c:	mov	r3, #3
   19210:	strb	r3, [fp, #-33]	; 0xffffffdf
   19214:	ldr	r3, [fp, #-12]
   19218:	ldrb	r3, [r3]
   1921c:	cmp	r3, #103	; 0x67
   19220:	beq	19314 <lchmod@@Base+0x570>
   19224:	cmp	r3, #103	; 0x67
   19228:	bgt	1923c <lchmod@@Base+0x498>
   1922c:	sub	r3, r3, #48	; 0x30
   19230:	cmp	r3, #7
   19234:	bhi	19344 <lchmod@@Base+0x5a0>
   19238:	b	19250 <lchmod@@Base+0x4ac>
   1923c:	cmp	r3, #111	; 0x6f
   19240:	beq	1932c <lchmod@@Base+0x588>
   19244:	cmp	r3, #117	; 0x75
   19248:	beq	192fc <lchmod@@Base+0x558>
   1924c:	b	19344 <lchmod@@Base+0x5a0>
   19250:	mov	r3, #0
   19254:	str	r3, [fp, #-40]	; 0xffffffd8
   19258:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1925c:	lsl	r2, r3, #3
   19260:	ldr	r3, [fp, #-12]
   19264:	add	r1, r3, #1
   19268:	str	r1, [fp, #-12]
   1926c:	ldrb	r3, [r3]
   19270:	add	r3, r2, r3
   19274:	sub	r3, r3, #48	; 0x30
   19278:	str	r3, [fp, #-40]	; 0xffffffd8
   1927c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19280:	cmp	r3, #4096	; 0x1000
   19284:	bcs	1956c <lchmod@@Base+0x7c8>
   19288:	ldr	r3, [fp, #-12]
   1928c:	ldrb	r3, [r3]
   19290:	cmp	r3, #47	; 0x2f
   19294:	bls	192a8 <lchmod@@Base+0x504>
   19298:	ldr	r3, [fp, #-12]
   1929c:	ldrb	r3, [r3]
   192a0:	cmp	r3, #55	; 0x37
   192a4:	bls	19258 <lchmod@@Base+0x4b4>
   192a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192ac:	cmp	r3, #0
   192b0:	bne	19570 <lchmod@@Base+0x7cc>
   192b4:	ldr	r3, [fp, #-12]
   192b8:	ldrb	r3, [r3]
   192bc:	cmp	r3, #0
   192c0:	beq	192d4 <lchmod@@Base+0x530>
   192c4:	ldr	r3, [fp, #-12]
   192c8:	ldrb	r3, [r3]
   192cc:	cmp	r3, #44	; 0x2c
   192d0:	bne	19570 <lchmod@@Base+0x7cc>
   192d4:	ldr	r3, [pc, #684]	; 19588 <lchmod@@Base+0x7e4>
   192d8:	str	r3, [fp, #-32]	; 0xffffffe0
   192dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192e0:	str	r3, [fp, #-24]	; 0xffffffe8
   192e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   192e8:	bl	18ef8 <lchmod@@Base+0x154>
   192ec:	str	r0, [fp, #-28]	; 0xffffffe4
   192f0:	mov	r3, #1
   192f4:	strb	r3, [fp, #-33]	; 0xffffffdf
   192f8:	b	19460 <lchmod@@Base+0x6bc>
   192fc:	mov	r3, #448	; 0x1c0
   19300:	str	r3, [fp, #-28]	; 0xffffffe4
   19304:	ldr	r3, [fp, #-12]
   19308:	add	r3, r3, #1
   1930c:	str	r3, [fp, #-12]
   19310:	b	19460 <lchmod@@Base+0x6bc>
   19314:	mov	r3, #56	; 0x38
   19318:	str	r3, [fp, #-28]	; 0xffffffe4
   1931c:	ldr	r3, [fp, #-12]
   19320:	add	r3, r3, #1
   19324:	str	r3, [fp, #-12]
   19328:	b	19460 <lchmod@@Base+0x6bc>
   1932c:	mov	r3, #7
   19330:	str	r3, [fp, #-28]	; 0xffffffe4
   19334:	ldr	r3, [fp, #-12]
   19338:	add	r3, r3, #1
   1933c:	str	r3, [fp, #-12]
   19340:	b	19460 <lchmod@@Base+0x6bc>
   19344:	mov	r3, #0
   19348:	str	r3, [fp, #-28]	; 0xffffffe4
   1934c:	mov	r3, #1
   19350:	strb	r3, [fp, #-33]	; 0xffffffdf
   19354:	ldr	r3, [fp, #-12]
   19358:	ldrb	r3, [r3]
   1935c:	sub	r3, r3, #88	; 0x58
   19360:	cmp	r3, #32
   19364:	ldrls	pc, [pc, r3, lsl #2]
   19368:	b	1945c <lchmod@@Base+0x6b8>
   1936c:	andeq	r9, r1, r0, lsr #8
   19370:	andeq	r9, r1, ip, asr r4
   19374:	andeq	r9, r1, ip, asr r4
   19378:	andeq	r9, r1, ip, asr r4
   1937c:	andeq	r9, r1, ip, asr r4
   19380:	andeq	r9, r1, ip, asr r4
   19384:	andeq	r9, r1, ip, asr r4
   19388:	andeq	r9, r1, ip, asr r4
   1938c:	andeq	r9, r1, ip, asr r4
   19390:	andeq	r9, r1, ip, asr r4
   19394:	andeq	r9, r1, ip, asr r4
   19398:	andeq	r9, r1, ip, asr r4
   1939c:	andeq	r9, r1, ip, asr r4
   193a0:	andeq	r9, r1, ip, asr r4
   193a4:	andeq	r9, r1, ip, asr r4
   193a8:	andeq	r9, r1, ip, asr r4
   193ac:	andeq	r9, r1, ip, asr r4
   193b0:	andeq	r9, r1, ip, asr r4
   193b4:	andeq	r9, r1, ip, asr r4
   193b8:	andeq	r9, r1, ip, asr r4
   193bc:	andeq	r9, r1, ip, asr r4
   193c0:	andeq	r9, r1, ip, asr r4
   193c4:	andeq	r9, r1, ip, asr r4
   193c8:	andeq	r9, r1, ip, asr r4
   193cc:	andeq	r9, r1, ip, asr r4
   193d0:	andeq	r9, r1, ip, asr r4
   193d4:	strdeq	r9, [r1], -r0
   193d8:	andeq	r9, r1, ip, lsr #8
   193dc:	andeq	r9, r1, ip, lsr r4
   193e0:	andeq	r9, r1, ip, asr r4
   193e4:	andeq	r9, r1, ip, asr r4
   193e8:	andeq	r9, r1, r0, lsl #8
   193ec:	andeq	r9, r1, r0, lsl r4
   193f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193f4:	orr	r3, r3, #292	; 0x124
   193f8:	str	r3, [fp, #-28]	; 0xffffffe4
   193fc:	b	1944c <lchmod@@Base+0x6a8>
   19400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19404:	orr	r3, r3, #146	; 0x92
   19408:	str	r3, [fp, #-28]	; 0xffffffe4
   1940c:	b	1944c <lchmod@@Base+0x6a8>
   19410:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19414:	orr	r3, r3, #73	; 0x49
   19418:	str	r3, [fp, #-28]	; 0xffffffe4
   1941c:	b	1944c <lchmod@@Base+0x6a8>
   19420:	mov	r3, #2
   19424:	strb	r3, [fp, #-33]	; 0xffffffdf
   19428:	b	1944c <lchmod@@Base+0x6a8>
   1942c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19430:	orr	r3, r3, #3072	; 0xc00
   19434:	str	r3, [fp, #-28]	; 0xffffffe4
   19438:	b	1944c <lchmod@@Base+0x6a8>
   1943c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19440:	orr	r3, r3, #512	; 0x200
   19444:	str	r3, [fp, #-28]	; 0xffffffe4
   19448:	nop			; (mov r0, r0)
   1944c:	ldr	r3, [fp, #-12]
   19450:	add	r3, r3, #1
   19454:	str	r3, [fp, #-12]
   19458:	b	19354 <lchmod@@Base+0x5b0>
   1945c:	nop			; (mov r0, r0)
   19460:	ldr	r3, [fp, #-8]
   19464:	add	r2, r3, #1
   19468:	str	r2, [fp, #-8]
   1946c:	lsl	r3, r3, #4
   19470:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19474:	add	r3, r2, r3
   19478:	str	r3, [fp, #-60]	; 0xffffffc4
   1947c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19480:	ldrb	r2, [fp, #-53]	; 0xffffffcb
   19484:	strb	r2, [r3]
   19488:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1948c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   19490:	strb	r2, [r3, #1]
   19494:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19498:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1949c:	str	r2, [r3, #4]
   194a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   194a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   194a8:	str	r2, [r3, #8]
   194ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194b0:	cmp	r3, #0
   194b4:	bne	194dc <lchmod@@Base+0x738>
   194b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194bc:	cmp	r3, #0
   194c0:	beq	194d4 <lchmod@@Base+0x730>
   194c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   194c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194cc:	and	r3, r3, r2
   194d0:	b	194e0 <lchmod@@Base+0x73c>
   194d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194d8:	b	194e0 <lchmod@@Base+0x73c>
   194dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   194e4:	str	r3, [r2, #12]
   194e8:	ldr	r3, [fp, #-12]
   194ec:	ldrb	r3, [r3]
   194f0:	cmp	r3, #61	; 0x3d
   194f4:	beq	191f0 <lchmod@@Base+0x44c>
   194f8:	ldr	r3, [fp, #-12]
   194fc:	ldrb	r3, [r3]
   19500:	cmp	r3, #43	; 0x2b
   19504:	beq	191f0 <lchmod@@Base+0x44c>
   19508:	ldr	r3, [fp, #-12]
   1950c:	ldrb	r3, [r3]
   19510:	cmp	r3, #45	; 0x2d
   19514:	beq	191f0 <lchmod@@Base+0x44c>
   19518:	ldr	r3, [fp, #-12]
   1951c:	ldrb	r3, [r3]
   19520:	cmp	r3, #44	; 0x2c
   19524:	bne	19538 <lchmod@@Base+0x794>
   19528:	ldr	r3, [fp, #-12]
   1952c:	add	r3, r3, #1
   19530:	str	r3, [fp, #-12]
   19534:	b	19140 <lchmod@@Base+0x39c>
   19538:	nop			; (mov r0, r0)
   1953c:	ldr	r3, [fp, #-12]
   19540:	ldrb	r3, [r3]
   19544:	cmp	r3, #0
   19548:	bne	19570 <lchmod@@Base+0x7cc>
   1954c:	ldr	r3, [fp, #-8]
   19550:	lsl	r3, r3, #4
   19554:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19558:	add	r3, r2, r3
   1955c:	mov	r2, #0
   19560:	strb	r2, [r3, #1]
   19564:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19568:	b	1957c <lchmod@@Base+0x7d8>
   1956c:	nop			; (mov r0, r0)
   19570:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19574:	bl	13c50 <__assert_fail@plt+0x2404>
   19578:	mov	r3, #0
   1957c:	mov	r0, r3
   19580:	sub	sp, fp, #4
   19584:	pop	{fp, pc}
   19588:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1958c:	push	{fp, lr}
   19590:	add	fp, sp, #4
   19594:	sub	sp, sp, #112	; 0x70
   19598:	str	r0, [fp, #-112]	; 0xffffff90
   1959c:	sub	r3, fp, #108	; 0x6c
   195a0:	mov	r1, r3
   195a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   195a8:	bl	1fb90 <lchmod@@Base+0x6dec>
   195ac:	mov	r3, r0
   195b0:	cmp	r3, #0
   195b4:	beq	195c0 <lchmod@@Base+0x81c>
   195b8:	mov	r3, #0
   195bc:	b	195d4 <lchmod@@Base+0x830>
   195c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   195c4:	ldr	r1, [pc, #20]	; 195e0 <lchmod@@Base+0x83c>
   195c8:	mov	r0, r3
   195cc:	bl	18f1c <lchmod@@Base+0x178>
   195d0:	mov	r3, r0
   195d4:	mov	r0, r3
   195d8:	sub	sp, fp, #4
   195dc:	pop	{fp, pc}
   195e0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   195e4:	push	{fp}		; (str fp, [sp, #-4]!)
   195e8:	add	fp, sp, #0
   195ec:	sub	sp, sp, #44	; 0x2c
   195f0:	str	r0, [fp, #-32]	; 0xffffffe0
   195f4:	str	r2, [fp, #-40]	; 0xffffffd8
   195f8:	str	r3, [fp, #-44]	; 0xffffffd4
   195fc:	mov	r3, r1
   19600:	strb	r3, [fp, #-33]	; 0xffffffdf
   19604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19608:	lsl	r3, r3, #20
   1960c:	lsr	r3, r3, #20
   19610:	str	r3, [fp, #-8]
   19614:	mov	r3, #0
   19618:	str	r3, [fp, #-12]
   1961c:	b	1983c <lchmod@@Base+0xa98>
   19620:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19624:	ldr	r3, [r3, #4]
   19628:	str	r3, [fp, #-20]	; 0xffffffec
   1962c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19630:	cmp	r3, #0
   19634:	beq	19640 <lchmod@@Base+0x89c>
   19638:	mov	r2, #3072	; 0xc00
   1963c:	b	19644 <lchmod@@Base+0x8a0>
   19640:	mov	r2, #0
   19644:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19648:	ldr	r3, [r3, #12]
   1964c:	mvn	r3, r3
   19650:	and	r3, r3, r2
   19654:	str	r3, [fp, #-24]	; 0xffffffe8
   19658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1965c:	ldr	r3, [r3, #8]
   19660:	str	r3, [fp, #-16]
   19664:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19668:	ldrb	r3, [r3, #1]
   1966c:	cmp	r3, #2
   19670:	beq	19704 <lchmod@@Base+0x960>
   19674:	cmp	r3, #3
   19678:	beq	19684 <lchmod@@Base+0x8e0>
   1967c:	cmp	r3, #1
   19680:	b	1972c <lchmod@@Base+0x988>
   19684:	ldr	r2, [fp, #-16]
   19688:	ldr	r3, [fp, #-8]
   1968c:	and	r3, r3, r2
   19690:	str	r3, [fp, #-16]
   19694:	ldr	r3, [fp, #-16]
   19698:	and	r3, r3, #292	; 0x124
   1969c:	cmp	r3, #0
   196a0:	beq	196ac <lchmod@@Base+0x908>
   196a4:	mov	r2, #292	; 0x124
   196a8:	b	196b0 <lchmod@@Base+0x90c>
   196ac:	mov	r2, #0
   196b0:	ldr	r3, [fp, #-16]
   196b4:	and	r3, r3, #146	; 0x92
   196b8:	cmp	r3, #0
   196bc:	beq	196c8 <lchmod@@Base+0x924>
   196c0:	mov	r3, #146	; 0x92
   196c4:	b	196cc <lchmod@@Base+0x928>
   196c8:	mov	r3, #0
   196cc:	orr	r2, r2, r3
   196d0:	ldr	r3, [fp, #-16]
   196d4:	and	r3, r3, #73	; 0x49
   196d8:	cmp	r3, #0
   196dc:	beq	196e8 <lchmod@@Base+0x944>
   196e0:	mov	r3, #73	; 0x49
   196e4:	b	196ec <lchmod@@Base+0x948>
   196e8:	mov	r3, #0
   196ec:	orr	r3, r2, r3
   196f0:	mov	r2, r3
   196f4:	ldr	r3, [fp, #-16]
   196f8:	orr	r3, r3, r2
   196fc:	str	r3, [fp, #-16]
   19700:	b	1972c <lchmod@@Base+0x988>
   19704:	ldr	r3, [fp, #-8]
   19708:	and	r2, r3, #73	; 0x49
   1970c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19710:	orr	r3, r2, r3
   19714:	cmp	r3, #0
   19718:	beq	19728 <lchmod@@Base+0x984>
   1971c:	ldr	r3, [fp, #-16]
   19720:	orr	r3, r3, #73	; 0x49
   19724:	str	r3, [fp, #-16]
   19728:	nop			; (mov r0, r0)
   1972c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19730:	cmp	r3, #0
   19734:	bne	19744 <lchmod@@Base+0x9a0>
   19738:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1973c:	mvn	r3, r3
   19740:	b	19748 <lchmod@@Base+0x9a4>
   19744:	ldr	r3, [fp, #-20]	; 0xffffffec
   19748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1974c:	mvn	r2, r2
   19750:	and	r3, r3, r2
   19754:	ldr	r2, [fp, #-16]
   19758:	and	r3, r3, r2
   1975c:	str	r3, [fp, #-16]
   19760:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19764:	ldrb	r3, [r3]
   19768:	cmp	r3, #45	; 0x2d
   1976c:	beq	19808 <lchmod@@Base+0xa64>
   19770:	cmp	r3, #61	; 0x3d
   19774:	beq	19784 <lchmod@@Base+0x9e0>
   19778:	cmp	r3, #43	; 0x2b
   1977c:	beq	197e4 <lchmod@@Base+0xa40>
   19780:	b	19830 <lchmod@@Base+0xa8c>
   19784:	ldr	r3, [fp, #-20]	; 0xffffffec
   19788:	cmp	r3, #0
   1978c:	beq	1979c <lchmod@@Base+0x9f8>
   19790:	ldr	r3, [fp, #-20]	; 0xffffffec
   19794:	mvn	r3, r3
   19798:	b	197a0 <lchmod@@Base+0x9fc>
   1979c:	mov	r3, #0
   197a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   197a4:	orr	r3, r3, r2
   197a8:	str	r3, [fp, #-28]	; 0xffffffe4
   197ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197b0:	mvn	r3, r3
   197b4:	lsl	r3, r3, #20
   197b8:	lsr	r3, r3, #20
   197bc:	ldr	r2, [fp, #-12]
   197c0:	orr	r3, r2, r3
   197c4:	str	r3, [fp, #-12]
   197c8:	ldr	r2, [fp, #-8]
   197cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197d0:	and	r2, r2, r3
   197d4:	ldr	r3, [fp, #-16]
   197d8:	orr	r3, r2, r3
   197dc:	str	r3, [fp, #-8]
   197e0:	b	19830 <lchmod@@Base+0xa8c>
   197e4:	ldr	r2, [fp, #-12]
   197e8:	ldr	r3, [fp, #-16]
   197ec:	orr	r3, r2, r3
   197f0:	str	r3, [fp, #-12]
   197f4:	ldr	r2, [fp, #-8]
   197f8:	ldr	r3, [fp, #-16]
   197fc:	orr	r3, r2, r3
   19800:	str	r3, [fp, #-8]
   19804:	b	19830 <lchmod@@Base+0xa8c>
   19808:	ldr	r2, [fp, #-12]
   1980c:	ldr	r3, [fp, #-16]
   19810:	orr	r3, r2, r3
   19814:	str	r3, [fp, #-12]
   19818:	ldr	r3, [fp, #-16]
   1981c:	mvn	r3, r3
   19820:	ldr	r2, [fp, #-8]
   19824:	and	r3, r3, r2
   19828:	str	r3, [fp, #-8]
   1982c:	nop			; (mov r0, r0)
   19830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19834:	add	r3, r3, #16
   19838:	str	r3, [fp, #-44]	; 0xffffffd4
   1983c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19840:	ldrb	r3, [r3, #1]
   19844:	cmp	r3, #0
   19848:	bne	19620 <lchmod@@Base+0x87c>
   1984c:	ldr	r3, [fp, #4]
   19850:	cmp	r3, #0
   19854:	beq	19864 <lchmod@@Base+0xac0>
   19858:	ldr	r3, [fp, #4]
   1985c:	ldr	r2, [fp, #-12]
   19860:	str	r2, [r3]
   19864:	ldr	r3, [fp, #-8]
   19868:	mov	r0, r3
   1986c:	add	sp, fp, #0
   19870:	pop	{fp}		; (ldr fp, [sp], #4)
   19874:	bx	lr
   19878:	push	{r2, r3}
   1987c:	push	{fp, lr}
   19880:	add	fp, sp, #4
   19884:	sub	sp, sp, #16
   19888:	str	r0, [fp, #-16]
   1988c:	str	r1, [fp, #-20]	; 0xffffffec
   19890:	mov	r3, #0
   19894:	str	r3, [fp, #-8]
   19898:	ldr	r3, [fp, #4]
   1989c:	and	r3, r3, #64	; 0x40
   198a0:	cmp	r3, #0
   198a4:	beq	198c4 <lchmod@@Base+0xb20>
   198a8:	add	r3, fp, #8
   198ac:	str	r3, [fp, #-12]
   198b0:	ldr	r3, [fp, #-12]
   198b4:	add	r2, r3, #4
   198b8:	str	r2, [fp, #-12]
   198bc:	ldr	r3, [r3]
   198c0:	str	r3, [fp, #-8]
   198c4:	ldr	r3, [fp, #-8]
   198c8:	ldr	r2, [fp, #4]
   198cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   198d0:	ldr	r0, [fp, #-16]
   198d4:	bl	1169c <openat64@plt>
   198d8:	mov	r3, r0
   198dc:	mov	r0, r3
   198e0:	bl	1c5dc <lchmod@@Base+0x3838>
   198e4:	mov	r3, r0
   198e8:	mov	r0, r3
   198ec:	sub	sp, fp, #4
   198f0:	pop	{fp, lr}
   198f4:	add	sp, sp, #8
   198f8:	bx	lr
   198fc:	push	{fp, lr}
   19900:	add	fp, sp, #4
   19904:	sub	sp, sp, #32
   19908:	str	r0, [fp, #-24]	; 0xffffffe8
   1990c:	str	r1, [fp, #-28]	; 0xffffffe4
   19910:	str	r2, [fp, #-32]	; 0xffffffe0
   19914:	str	r3, [fp, #-36]	; 0xffffffdc
   19918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1991c:	orr	r3, r3, #540672	; 0x84000
   19920:	orr	r3, r3, #2304	; 0x900
   19924:	str	r3, [fp, #-8]
   19928:	ldr	r2, [fp, #-8]
   1992c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19934:	bl	19878 <lchmod@@Base+0xad4>
   19938:	str	r0, [fp, #-12]
   1993c:	ldr	r3, [fp, #-12]
   19940:	cmp	r3, #0
   19944:	bge	19950 <lchmod@@Base+0xbac>
   19948:	mov	r3, #0
   1994c:	b	199a4 <lchmod@@Base+0xc00>
   19950:	ldr	r0, [fp, #-12]
   19954:	bl	1175c <fdopendir@plt>
   19958:	str	r0, [fp, #-16]
   1995c:	ldr	r3, [fp, #-16]
   19960:	cmp	r3, #0
   19964:	beq	19978 <lchmod@@Base+0xbd4>
   19968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1996c:	ldr	r2, [fp, #-12]
   19970:	str	r2, [r3]
   19974:	b	199a0 <lchmod@@Base+0xbfc>
   19978:	bl	116c0 <__errno_location@plt>
   1997c:	mov	r3, r0
   19980:	ldr	r3, [r3]
   19984:	str	r3, [fp, #-20]	; 0xffffffec
   19988:	ldr	r0, [fp, #-12]
   1998c:	bl	11804 <close@plt>
   19990:	bl	116c0 <__errno_location@plt>
   19994:	mov	r2, r0
   19998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1999c:	str	r3, [r2]
   199a0:	ldr	r3, [fp, #-16]
   199a4:	mov	r0, r3
   199a8:	sub	sp, fp, #4
   199ac:	pop	{fp, pc}
   199b0:	push	{fp, lr}
   199b4:	add	fp, sp, #4
   199b8:	sub	sp, sp, #16
   199bc:	str	r0, [fp, #-16]
   199c0:	ldr	r3, [fp, #-16]
   199c4:	cmp	r3, #0
   199c8:	bne	199e8 <lchmod@@Base+0xc44>
   199cc:	ldr	r3, [pc, #220]	; 19ab0 <lchmod@@Base+0xd0c>
   199d0:	ldr	r3, [r3]
   199d4:	mov	r2, #55	; 0x37
   199d8:	mov	r1, #1
   199dc:	ldr	r0, [pc, #208]	; 19ab4 <lchmod@@Base+0xd10>
   199e0:	bl	1157c <fwrite@plt>
   199e4:	bl	117f8 <abort@plt>
   199e8:	mov	r1, #47	; 0x2f
   199ec:	ldr	r0, [fp, #-16]
   199f0:	bl	1172c <strrchr@plt>
   199f4:	str	r0, [fp, #-8]
   199f8:	ldr	r3, [fp, #-8]
   199fc:	cmp	r3, #0
   19a00:	beq	19a10 <lchmod@@Base+0xc6c>
   19a04:	ldr	r3, [fp, #-8]
   19a08:	add	r3, r3, #1
   19a0c:	b	19a14 <lchmod@@Base+0xc70>
   19a10:	ldr	r3, [fp, #-16]
   19a14:	str	r3, [fp, #-12]
   19a18:	ldr	r2, [fp, #-12]
   19a1c:	ldr	r3, [fp, #-16]
   19a20:	sub	r3, r2, r3
   19a24:	cmp	r3, #6
   19a28:	ble	19a8c <lchmod@@Base+0xce8>
   19a2c:	ldr	r3, [fp, #-12]
   19a30:	sub	r3, r3, #7
   19a34:	mov	r2, #7
   19a38:	ldr	r1, [pc, #120]	; 19ab8 <lchmod@@Base+0xd14>
   19a3c:	mov	r0, r3
   19a40:	bl	117ec <strncmp@plt>
   19a44:	mov	r3, r0
   19a48:	cmp	r3, #0
   19a4c:	bne	19a8c <lchmod@@Base+0xce8>
   19a50:	ldr	r3, [fp, #-12]
   19a54:	str	r3, [fp, #-16]
   19a58:	mov	r2, #3
   19a5c:	ldr	r1, [pc, #88]	; 19abc <lchmod@@Base+0xd18>
   19a60:	ldr	r0, [fp, #-12]
   19a64:	bl	117ec <strncmp@plt>
   19a68:	mov	r3, r0
   19a6c:	cmp	r3, #0
   19a70:	bne	19a8c <lchmod@@Base+0xce8>
   19a74:	ldr	r3, [fp, #-12]
   19a78:	add	r3, r3, #3
   19a7c:	str	r3, [fp, #-16]
   19a80:	ldr	r2, [pc, #56]	; 19ac0 <lchmod@@Base+0xd1c>
   19a84:	ldr	r3, [fp, #-16]
   19a88:	str	r3, [r2]
   19a8c:	ldr	r2, [pc, #48]	; 19ac4 <lchmod@@Base+0xd20>
   19a90:	ldr	r3, [fp, #-16]
   19a94:	str	r3, [r2]
   19a98:	ldr	r2, [pc, #40]	; 19ac8 <lchmod@@Base+0xd24>
   19a9c:	ldr	r3, [fp, #-16]
   19aa0:	str	r3, [r2]
   19aa4:	nop			; (mov r0, r0)
   19aa8:	sub	sp, fp, #4
   19aac:	pop	{fp, pc}
   19ab0:	ldrdeq	r1, [r3], -r8
   19ab4:	andeq	r0, r2, r8, lsl #5
   19ab8:	andeq	r0, r2, r0, asr #5
   19abc:	andeq	r0, r2, r8, asr #5
   19ac0:	andeq	r1, r3, r8, asr #3
   19ac4:	strdeq	r1, [r3], -r0
   19ac8:	andeq	r1, r3, ip, asr #3
   19acc:	push	{fp, lr}
   19ad0:	add	fp, sp, #4
   19ad4:	sub	sp, sp, #16
   19ad8:	str	r0, [fp, #-16]
   19adc:	bl	116c0 <__errno_location@plt>
   19ae0:	mov	r3, r0
   19ae4:	ldr	r3, [r3]
   19ae8:	str	r3, [fp, #-8]
   19aec:	ldr	r3, [fp, #-16]
   19af0:	cmp	r3, #0
   19af4:	beq	19b00 <lchmod@@Base+0xd5c>
   19af8:	ldr	r3, [fp, #-16]
   19afc:	b	19b04 <lchmod@@Base+0xd60>
   19b00:	ldr	r3, [pc, #48]	; 19b38 <lchmod@@Base+0xd94>
   19b04:	mov	r1, #48	; 0x30
   19b08:	mov	r0, r3
   19b0c:	bl	1d834 <lchmod@@Base+0x4a90>
   19b10:	mov	r3, r0
   19b14:	str	r3, [fp, #-12]
   19b18:	bl	116c0 <__errno_location@plt>
   19b1c:	mov	r2, r0
   19b20:	ldr	r3, [fp, #-8]
   19b24:	str	r3, [r2]
   19b28:	ldr	r3, [fp, #-12]
   19b2c:	mov	r0, r3
   19b30:	sub	sp, fp, #4
   19b34:	pop	{fp, pc}
   19b38:	strdeq	r1, [r3], -r4
   19b3c:	push	{fp}		; (str fp, [sp, #-4]!)
   19b40:	add	fp, sp, #0
   19b44:	sub	sp, sp, #12
   19b48:	str	r0, [fp, #-8]
   19b4c:	ldr	r3, [fp, #-8]
   19b50:	cmp	r3, #0
   19b54:	beq	19b60 <lchmod@@Base+0xdbc>
   19b58:	ldr	r3, [fp, #-8]
   19b5c:	b	19b64 <lchmod@@Base+0xdc0>
   19b60:	ldr	r3, [pc, #16]	; 19b78 <lchmod@@Base+0xdd4>
   19b64:	ldr	r3, [r3]
   19b68:	mov	r0, r3
   19b6c:	add	sp, fp, #0
   19b70:	pop	{fp}		; (ldr fp, [sp], #4)
   19b74:	bx	lr
   19b78:	strdeq	r1, [r3], -r4
   19b7c:	push	{fp}		; (str fp, [sp, #-4]!)
   19b80:	add	fp, sp, #0
   19b84:	sub	sp, sp, #12
   19b88:	str	r0, [fp, #-8]
   19b8c:	str	r1, [fp, #-12]
   19b90:	ldr	r3, [fp, #-8]
   19b94:	cmp	r3, #0
   19b98:	beq	19ba4 <lchmod@@Base+0xe00>
   19b9c:	ldr	r3, [fp, #-8]
   19ba0:	b	19ba8 <lchmod@@Base+0xe04>
   19ba4:	ldr	r3, [pc, #20]	; 19bc0 <lchmod@@Base+0xe1c>
   19ba8:	ldr	r2, [fp, #-12]
   19bac:	str	r2, [r3]
   19bb0:	nop			; (mov r0, r0)
   19bb4:	add	sp, fp, #0
   19bb8:	pop	{fp}		; (ldr fp, [sp], #4)
   19bbc:	bx	lr
   19bc0:	strdeq	r1, [r3], -r4
   19bc4:	push	{fp}		; (str fp, [sp, #-4]!)
   19bc8:	add	fp, sp, #0
   19bcc:	sub	sp, sp, #36	; 0x24
   19bd0:	str	r0, [fp, #-24]	; 0xffffffe8
   19bd4:	mov	r3, r1
   19bd8:	str	r2, [fp, #-32]	; 0xffffffe0
   19bdc:	strb	r3, [fp, #-25]	; 0xffffffe7
   19be0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   19be4:	strb	r3, [fp, #-5]
   19be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bec:	cmp	r3, #0
   19bf0:	beq	19bfc <lchmod@@Base+0xe58>
   19bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bf8:	b	19c00 <lchmod@@Base+0xe5c>
   19bfc:	ldr	r3, [pc, #124]	; 19c80 <lchmod@@Base+0xedc>
   19c00:	add	r2, r3, #8
   19c04:	ldrb	r3, [fp, #-5]
   19c08:	lsr	r3, r3, #5
   19c0c:	uxtb	r3, r3
   19c10:	lsl	r3, r3, #2
   19c14:	add	r3, r2, r3
   19c18:	str	r3, [fp, #-12]
   19c1c:	ldrb	r3, [fp, #-5]
   19c20:	and	r3, r3, #31
   19c24:	str	r3, [fp, #-16]
   19c28:	ldr	r3, [fp, #-12]
   19c2c:	ldr	r2, [r3]
   19c30:	ldr	r3, [fp, #-16]
   19c34:	lsr	r3, r2, r3
   19c38:	and	r3, r3, #1
   19c3c:	str	r3, [fp, #-20]	; 0xffffffec
   19c40:	ldr	r3, [fp, #-12]
   19c44:	ldr	r3, [r3]
   19c48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19c4c:	and	r1, r2, #1
   19c50:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c54:	eor	r1, r1, r2
   19c58:	ldr	r2, [fp, #-16]
   19c5c:	lsl	r2, r1, r2
   19c60:	eor	r2, r2, r3
   19c64:	ldr	r3, [fp, #-12]
   19c68:	str	r2, [r3]
   19c6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c70:	mov	r0, r3
   19c74:	add	sp, fp, #0
   19c78:	pop	{fp}		; (ldr fp, [sp], #4)
   19c7c:	bx	lr
   19c80:	strdeq	r1, [r3], -r4
   19c84:	push	{fp}		; (str fp, [sp, #-4]!)
   19c88:	add	fp, sp, #0
   19c8c:	sub	sp, sp, #20
   19c90:	str	r0, [fp, #-16]
   19c94:	str	r1, [fp, #-20]	; 0xffffffec
   19c98:	ldr	r3, [fp, #-16]
   19c9c:	cmp	r3, #0
   19ca0:	bne	19cac <lchmod@@Base+0xf08>
   19ca4:	ldr	r3, [pc, #44]	; 19cd8 <lchmod@@Base+0xf34>
   19ca8:	str	r3, [fp, #-16]
   19cac:	ldr	r3, [fp, #-16]
   19cb0:	ldr	r3, [r3, #4]
   19cb4:	str	r3, [fp, #-8]
   19cb8:	ldr	r3, [fp, #-16]
   19cbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19cc0:	str	r2, [r3, #4]
   19cc4:	ldr	r3, [fp, #-8]
   19cc8:	mov	r0, r3
   19ccc:	add	sp, fp, #0
   19cd0:	pop	{fp}		; (ldr fp, [sp], #4)
   19cd4:	bx	lr
   19cd8:	strdeq	r1, [r3], -r4
   19cdc:	push	{fp, lr}
   19ce0:	add	fp, sp, #4
   19ce4:	sub	sp, sp, #16
   19ce8:	str	r0, [fp, #-8]
   19cec:	str	r1, [fp, #-12]
   19cf0:	str	r2, [fp, #-16]
   19cf4:	ldr	r3, [fp, #-8]
   19cf8:	cmp	r3, #0
   19cfc:	bne	19d08 <lchmod@@Base+0xf64>
   19d00:	ldr	r3, [pc, #76]	; 19d54 <lchmod@@Base+0xfb0>
   19d04:	str	r3, [fp, #-8]
   19d08:	ldr	r3, [fp, #-8]
   19d0c:	mov	r2, #10
   19d10:	str	r2, [r3]
   19d14:	ldr	r3, [fp, #-12]
   19d18:	cmp	r3, #0
   19d1c:	beq	19d2c <lchmod@@Base+0xf88>
   19d20:	ldr	r3, [fp, #-16]
   19d24:	cmp	r3, #0
   19d28:	bne	19d30 <lchmod@@Base+0xf8c>
   19d2c:	bl	117f8 <abort@plt>
   19d30:	ldr	r3, [fp, #-8]
   19d34:	ldr	r2, [fp, #-12]
   19d38:	str	r2, [r3, #40]	; 0x28
   19d3c:	ldr	r3, [fp, #-8]
   19d40:	ldr	r2, [fp, #-16]
   19d44:	str	r2, [r3, #44]	; 0x2c
   19d48:	nop			; (mov r0, r0)
   19d4c:	sub	sp, fp, #4
   19d50:	pop	{fp, pc}
   19d54:	strdeq	r1, [r3], -r4
   19d58:	push	{fp, lr}
   19d5c:	add	fp, sp, #4
   19d60:	sub	sp, sp, #56	; 0x38
   19d64:	str	r0, [fp, #-56]	; 0xffffffc8
   19d68:	str	r1, [fp, #-60]	; 0xffffffc4
   19d6c:	sub	r3, fp, #52	; 0x34
   19d70:	mov	r2, #48	; 0x30
   19d74:	mov	r1, #0
   19d78:	mov	r0, r3
   19d7c:	bl	116d8 <memset@plt>
   19d80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d84:	cmp	r3, #10
   19d88:	bne	19d90 <lchmod@@Base+0xfec>
   19d8c:	bl	117f8 <abort@plt>
   19d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d94:	str	r3, [fp, #-52]	; 0xffffffcc
   19d98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19d9c:	mov	lr, r3
   19da0:	sub	ip, fp, #52	; 0x34
   19da4:	ldm	ip!, {r0, r1, r2, r3}
   19da8:	stmia	lr!, {r0, r1, r2, r3}
   19dac:	ldm	ip!, {r0, r1, r2, r3}
   19db0:	stmia	lr!, {r0, r1, r2, r3}
   19db4:	ldm	ip, {r0, r1, r2, r3}
   19db8:	stm	lr, {r0, r1, r2, r3}
   19dbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19dc0:	sub	sp, fp, #4
   19dc4:	pop	{fp, pc}
   19dc8:	push	{fp, lr}
   19dcc:	add	fp, sp, #4
   19dd0:	sub	sp, sp, #16
   19dd4:	str	r0, [fp, #-16]
   19dd8:	str	r1, [fp, #-20]	; 0xffffffec
   19ddc:	ldr	r0, [fp, #-16]
   19de0:	bl	1166c <gettext@plt>
   19de4:	str	r0, [fp, #-8]
   19de8:	ldr	r2, [fp, #-8]
   19dec:	ldr	r3, [fp, #-16]
   19df0:	cmp	r2, r3
   19df4:	beq	19e00 <lchmod@@Base+0x105c>
   19df8:	ldr	r3, [fp, #-8]
   19dfc:	b	19e90 <lchmod@@Base+0x10ec>
   19e00:	bl	1ec74 <lchmod@@Base+0x5ed0>
   19e04:	str	r0, [fp, #-12]
   19e08:	ldr	r1, [pc, #140]	; 19e9c <lchmod@@Base+0x10f8>
   19e0c:	ldr	r0, [fp, #-12]
   19e10:	bl	1e120 <lchmod@@Base+0x537c>
   19e14:	mov	r3, r0
   19e18:	cmp	r3, #0
   19e1c:	bne	19e40 <lchmod@@Base+0x109c>
   19e20:	ldr	r3, [fp, #-16]
   19e24:	ldrb	r3, [r3]
   19e28:	cmp	r3, #96	; 0x60
   19e2c:	bne	19e38 <lchmod@@Base+0x1094>
   19e30:	ldr	r3, [pc, #104]	; 19ea0 <lchmod@@Base+0x10fc>
   19e34:	b	19e90 <lchmod@@Base+0x10ec>
   19e38:	ldr	r3, [pc, #100]	; 19ea4 <lchmod@@Base+0x1100>
   19e3c:	b	19e90 <lchmod@@Base+0x10ec>
   19e40:	ldr	r1, [pc, #96]	; 19ea8 <lchmod@@Base+0x1104>
   19e44:	ldr	r0, [fp, #-12]
   19e48:	bl	1e120 <lchmod@@Base+0x537c>
   19e4c:	mov	r3, r0
   19e50:	cmp	r3, #0
   19e54:	bne	19e78 <lchmod@@Base+0x10d4>
   19e58:	ldr	r3, [fp, #-16]
   19e5c:	ldrb	r3, [r3]
   19e60:	cmp	r3, #96	; 0x60
   19e64:	bne	19e70 <lchmod@@Base+0x10cc>
   19e68:	ldr	r3, [pc, #60]	; 19eac <lchmod@@Base+0x1108>
   19e6c:	b	19e90 <lchmod@@Base+0x10ec>
   19e70:	ldr	r3, [pc, #56]	; 19eb0 <lchmod@@Base+0x110c>
   19e74:	b	19e90 <lchmod@@Base+0x10ec>
   19e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e7c:	cmp	r3, #9
   19e80:	bne	19e8c <lchmod@@Base+0x10e8>
   19e84:	ldr	r3, [pc, #40]	; 19eb4 <lchmod@@Base+0x1110>
   19e88:	b	19e90 <lchmod@@Base+0x10ec>
   19e8c:	ldr	r3, [pc, #36]	; 19eb8 <lchmod@@Base+0x1114>
   19e90:	mov	r0, r3
   19e94:	sub	sp, fp, #4
   19e98:	pop	{fp, pc}
   19e9c:	andeq	r0, r2, r8, lsl #7
   19ea0:	muleq	r2, r0, r3
   19ea4:	muleq	r2, r4, r3
   19ea8:	muleq	r2, r8, r3
   19eac:	andeq	r0, r2, r0, lsr #7
   19eb0:	andeq	r0, r2, r4, lsr #7
   19eb4:	andeq	r0, r2, r8, lsr #7
   19eb8:	andeq	r0, r2, ip, lsr #7
   19ebc:	push	{r4, fp, lr}
   19ec0:	add	fp, sp, #8
   19ec4:	sub	sp, sp, #116	; 0x74
   19ec8:	str	r0, [fp, #-88]	; 0xffffffa8
   19ecc:	str	r1, [fp, #-92]	; 0xffffffa4
   19ed0:	str	r2, [fp, #-96]	; 0xffffffa0
   19ed4:	str	r3, [fp, #-100]	; 0xffffff9c
   19ed8:	mov	r3, #0
   19edc:	str	r3, [fp, #-20]	; 0xffffffec
   19ee0:	mov	r3, #0
   19ee4:	str	r3, [fp, #-24]	; 0xffffffe8
   19ee8:	mov	r3, #0
   19eec:	str	r3, [fp, #-28]	; 0xffffffe4
   19ef0:	mov	r3, #0
   19ef4:	str	r3, [fp, #-32]	; 0xffffffe0
   19ef8:	mov	r3, #0
   19efc:	strb	r3, [fp, #-33]	; 0xffffffdf
   19f00:	bl	11594 <__ctype_get_mb_cur_max@plt>
   19f04:	mov	r3, r0
   19f08:	cmp	r3, #1
   19f0c:	moveq	r3, #1
   19f10:	movne	r3, #0
   19f14:	strb	r3, [fp, #-57]	; 0xffffffc7
   19f18:	ldr	r3, [fp, #8]
   19f1c:	and	r3, r3, #2
   19f20:	cmp	r3, #0
   19f24:	movne	r3, #1
   19f28:	moveq	r3, #0
   19f2c:	strb	r3, [fp, #-34]	; 0xffffffde
   19f30:	mov	r3, #0
   19f34:	strb	r3, [fp, #-35]	; 0xffffffdd
   19f38:	mov	r3, #0
   19f3c:	strb	r3, [fp, #-36]	; 0xffffffdc
   19f40:	mov	r3, #1
   19f44:	strb	r3, [fp, #-37]	; 0xffffffdb
   19f48:	ldr	r3, [fp, #4]
   19f4c:	cmp	r3, #10
   19f50:	ldrls	pc, [pc, r3, lsl #2]
   19f54:	b	1a15c <lchmod@@Base+0x13b8>
   19f58:	andeq	sl, r1, r0, asr r1
   19f5c:	andeq	sl, r1, ip, asr #1
   19f60:	strdeq	sl, [r1], -r0
   19f64:	andeq	sl, r1, r4, asr #1
   19f68:	ldrdeq	sl, [r1], -r4
   19f6c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   19f70:	andeq	r9, r1, r4, lsl #31
   19f74:	strdeq	r9, [r1], -r4
   19f78:	andeq	sl, r1, r8
   19f7c:	andeq	sl, r1, r8
   19f80:	andeq	sl, r1, r8
   19f84:	mov	r3, #5
   19f88:	str	r3, [fp, #4]
   19f8c:	mov	r3, #1
   19f90:	strb	r3, [fp, #-34]	; 0xffffffde
   19f94:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19f98:	eor	r3, r3, #1
   19f9c:	uxtb	r3, r3
   19fa0:	cmp	r3, #0
   19fa4:	beq	19fd8 <lchmod@@Base+0x1234>
   19fa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19fb0:	cmp	r2, r3
   19fb4:	bcs	19fcc <lchmod@@Base+0x1228>
   19fb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fc0:	add	r3, r2, r3
   19fc4:	mov	r2, #34	; 0x22
   19fc8:	strb	r2, [r3]
   19fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fd0:	add	r3, r3, #1
   19fd4:	str	r3, [fp, #-20]	; 0xffffffec
   19fd8:	mov	r3, #1
   19fdc:	strb	r3, [fp, #-33]	; 0xffffffdf
   19fe0:	ldr	r3, [pc, #3872]	; 1af08 <lchmod@@Base+0x2164>
   19fe4:	str	r3, [fp, #-28]	; 0xffffffe4
   19fe8:	mov	r3, #1
   19fec:	str	r3, [fp, #-32]	; 0xffffffe0
   19ff0:	b	1a160 <lchmod@@Base+0x13bc>
   19ff4:	mov	r3, #1
   19ff8:	strb	r3, [fp, #-33]	; 0xffffffdf
   19ffc:	mov	r3, #0
   1a000:	strb	r3, [fp, #-34]	; 0xffffffde
   1a004:	b	1a160 <lchmod@@Base+0x13bc>
   1a008:	ldr	r3, [fp, #4]
   1a00c:	cmp	r3, #10
   1a010:	beq	1a034 <lchmod@@Base+0x1290>
   1a014:	ldr	r1, [fp, #4]
   1a018:	ldr	r0, [pc, #3820]	; 1af0c <lchmod@@Base+0x2168>
   1a01c:	bl	19dc8 <lchmod@@Base+0x1024>
   1a020:	str	r0, [fp, #16]
   1a024:	ldr	r1, [fp, #4]
   1a028:	ldr	r0, [pc, #3808]	; 1af10 <lchmod@@Base+0x216c>
   1a02c:	bl	19dc8 <lchmod@@Base+0x1024>
   1a030:	str	r0, [fp, #20]
   1a034:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a038:	eor	r3, r3, #1
   1a03c:	uxtb	r3, r3
   1a040:	cmp	r3, #0
   1a044:	beq	1a0a4 <lchmod@@Base+0x1300>
   1a048:	ldr	r3, [fp, #16]
   1a04c:	str	r3, [fp, #-28]	; 0xffffffe4
   1a050:	b	1a094 <lchmod@@Base+0x12f0>
   1a054:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a058:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a05c:	cmp	r2, r3
   1a060:	bcs	1a07c <lchmod@@Base+0x12d8>
   1a064:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a068:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a06c:	add	r3, r2, r3
   1a070:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a074:	ldrb	r2, [r2]
   1a078:	strb	r2, [r3]
   1a07c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a080:	add	r3, r3, #1
   1a084:	str	r3, [fp, #-20]	; 0xffffffec
   1a088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a08c:	add	r3, r3, #1
   1a090:	str	r3, [fp, #-28]	; 0xffffffe4
   1a094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a098:	ldrb	r3, [r3]
   1a09c:	cmp	r3, #0
   1a0a0:	bne	1a054 <lchmod@@Base+0x12b0>
   1a0a4:	mov	r3, #1
   1a0a8:	strb	r3, [fp, #-33]	; 0xffffffdf
   1a0ac:	ldr	r3, [fp, #20]
   1a0b0:	str	r3, [fp, #-28]	; 0xffffffe4
   1a0b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a0b8:	bl	11684 <strlen@plt>
   1a0bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1a0c0:	b	1a160 <lchmod@@Base+0x13bc>
   1a0c4:	mov	r3, #1
   1a0c8:	strb	r3, [fp, #-33]	; 0xffffffdf
   1a0cc:	mov	r3, #1
   1a0d0:	strb	r3, [fp, #-34]	; 0xffffffde
   1a0d4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a0d8:	eor	r3, r3, #1
   1a0dc:	uxtb	r3, r3
   1a0e0:	cmp	r3, #0
   1a0e4:	beq	1a0f0 <lchmod@@Base+0x134c>
   1a0e8:	mov	r3, #1
   1a0ec:	strb	r3, [fp, #-33]	; 0xffffffdf
   1a0f0:	mov	r3, #2
   1a0f4:	str	r3, [fp, #4]
   1a0f8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a0fc:	eor	r3, r3, #1
   1a100:	uxtb	r3, r3
   1a104:	cmp	r3, #0
   1a108:	beq	1a13c <lchmod@@Base+0x1398>
   1a10c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a110:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a114:	cmp	r2, r3
   1a118:	bcs	1a130 <lchmod@@Base+0x138c>
   1a11c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a120:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a124:	add	r3, r2, r3
   1a128:	mov	r2, #39	; 0x27
   1a12c:	strb	r2, [r3]
   1a130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a134:	add	r3, r3, #1
   1a138:	str	r3, [fp, #-20]	; 0xffffffec
   1a13c:	ldr	r3, [pc, #3532]	; 1af10 <lchmod@@Base+0x216c>
   1a140:	str	r3, [fp, #-28]	; 0xffffffe4
   1a144:	mov	r3, #1
   1a148:	str	r3, [fp, #-32]	; 0xffffffe0
   1a14c:	b	1a160 <lchmod@@Base+0x13bc>
   1a150:	mov	r3, #0
   1a154:	strb	r3, [fp, #-34]	; 0xffffffde
   1a158:	b	1a160 <lchmod@@Base+0x13bc>
   1a15c:	bl	117f8 <abort@plt>
   1a160:	mov	r3, #0
   1a164:	str	r3, [fp, #-16]
   1a168:	b	1b2f8 <lchmod@@Base+0x2554>
   1a16c:	mov	r3, #0
   1a170:	strb	r3, [fp, #-40]	; 0xffffffd8
   1a174:	mov	r3, #0
   1a178:	strb	r3, [fp, #-41]	; 0xffffffd7
   1a17c:	mov	r3, #0
   1a180:	strb	r3, [fp, #-42]	; 0xffffffd6
   1a184:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a188:	cmp	r3, #0
   1a18c:	beq	1a228 <lchmod@@Base+0x1484>
   1a190:	ldr	r3, [fp, #4]
   1a194:	cmp	r3, #2
   1a198:	beq	1a228 <lchmod@@Base+0x1484>
   1a19c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1a0:	cmp	r3, #0
   1a1a4:	beq	1a228 <lchmod@@Base+0x1484>
   1a1a8:	ldr	r2, [fp, #-16]
   1a1ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1b0:	add	r4, r2, r3
   1a1b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a1b8:	cmn	r3, #1
   1a1bc:	bne	1a1e0 <lchmod@@Base+0x143c>
   1a1c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1c4:	cmp	r3, #1
   1a1c8:	bls	1a1e0 <lchmod@@Base+0x143c>
   1a1cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a1d0:	bl	11684 <strlen@plt>
   1a1d4:	str	r0, [fp, #-100]	; 0xffffff9c
   1a1d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a1dc:	b	1a1e4 <lchmod@@Base+0x1440>
   1a1e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a1e4:	cmp	r4, r3
   1a1e8:	bhi	1a228 <lchmod@@Base+0x1484>
   1a1ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a1f0:	ldr	r3, [fp, #-16]
   1a1f4:	add	r3, r2, r3
   1a1f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a1fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a200:	mov	r0, r3
   1a204:	bl	114f8 <memcmp@plt>
   1a208:	mov	r3, r0
   1a20c:	cmp	r3, #0
   1a210:	bne	1a228 <lchmod@@Base+0x1484>
   1a214:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a218:	cmp	r3, #0
   1a21c:	bne	1b4b4 <lchmod@@Base+0x2710>
   1a220:	mov	r3, #1
   1a224:	strb	r3, [fp, #-40]	; 0xffffffd8
   1a228:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a22c:	ldr	r3, [fp, #-16]
   1a230:	add	r3, r2, r3
   1a234:	ldrb	r3, [r3]
   1a238:	strb	r3, [fp, #-38]	; 0xffffffda
   1a23c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a240:	cmp	r3, #126	; 0x7e
   1a244:	ldrls	pc, [pc, r3, lsl #2]
   1a248:	b	1aa74 <lchmod@@Base+0x1cd0>
   1a24c:	andeq	sl, r1, r8, asr #8
   1a250:	andeq	sl, r1, r4, ror sl
   1a254:	andeq	sl, r1, r4, ror sl
   1a258:	andeq	sl, r1, r4, ror sl
   1a25c:	andeq	sl, r1, r4, ror sl
   1a260:	andeq	sl, r1, r4, ror sl
   1a264:	andeq	sl, r1, r4, ror sl
   1a268:	andeq	sl, r1, r8, lsr r8
   1a26c:	andeq	sl, r1, r4, asr #16
   1a270:	andeq	sl, r1, r4, ror r8
   1a274:	andeq	sl, r1, ip, asr r8
   1a278:	andeq	sl, r1, r0, lsl #17
   1a27c:	andeq	sl, r1, r0, asr r8
   1a280:	andeq	sl, r1, r8, ror #16
   1a284:	andeq	sl, r1, r4, ror sl
   1a288:	andeq	sl, r1, r4, ror sl
   1a28c:	andeq	sl, r1, r4, ror sl
   1a290:	andeq	sl, r1, r4, ror sl
   1a294:	andeq	sl, r1, r4, ror sl
   1a298:	andeq	sl, r1, r4, ror sl
   1a29c:	andeq	sl, r1, r4, ror sl
   1a2a0:	andeq	sl, r1, r4, ror sl
   1a2a4:	andeq	sl, r1, r4, ror sl
   1a2a8:	andeq	sl, r1, r4, ror sl
   1a2ac:	andeq	sl, r1, r4, ror sl
   1a2b0:	andeq	sl, r1, r4, ror sl
   1a2b4:	andeq	sl, r1, r4, ror sl
   1a2b8:	andeq	sl, r1, r4, ror sl
   1a2bc:	andeq	sl, r1, r4, ror sl
   1a2c0:	andeq	sl, r1, r4, ror sl
   1a2c4:	andeq	sl, r1, r4, ror sl
   1a2c8:	andeq	sl, r1, r4, ror sl
   1a2cc:	andeq	sl, r1, r8, asr r9
   1a2d0:	andeq	sl, r1, r0, ror #18
   1a2d4:	andeq	sl, r1, r0, ror #18
   1a2d8:	andeq	sl, r1, ip, asr #18
   1a2dc:	andeq	sl, r1, r0, ror #18
   1a2e0:	andeq	sl, r1, r8, ror #20
   1a2e4:	andeq	sl, r1, r0, ror #18
   1a2e8:	andeq	sl, r1, ip, ror r9
   1a2ec:	andeq	sl, r1, r0, ror #18
   1a2f0:	andeq	sl, r1, r0, ror #18
   1a2f4:	andeq	sl, r1, r0, ror #18
   1a2f8:	andeq	sl, r1, r8, ror #20
   1a2fc:	andeq	sl, r1, r8, ror #20
   1a300:	andeq	sl, r1, r8, ror #20
   1a304:	andeq	sl, r1, r8, ror #20
   1a308:	andeq	sl, r1, r8, ror #20
   1a30c:	andeq	sl, r1, r8, ror #20
   1a310:	andeq	sl, r1, r8, ror #20
   1a314:	andeq	sl, r1, r8, ror #20
   1a318:	andeq	sl, r1, r8, ror #20
   1a31c:	andeq	sl, r1, r8, ror #20
   1a320:	andeq	sl, r1, r8, ror #20
   1a324:	andeq	sl, r1, r8, ror #20
   1a328:	andeq	sl, r1, r8, ror #20
   1a32c:	andeq	sl, r1, r8, ror #20
   1a330:	andeq	sl, r1, r8, ror #20
   1a334:	andeq	sl, r1, r8, ror #20
   1a338:	andeq	sl, r1, r0, ror #18
   1a33c:	andeq	sl, r1, r0, ror #18
   1a340:	andeq	sl, r1, r0, ror #18
   1a344:	andeq	sl, r1, r0, ror #18
   1a348:	andeq	sl, r1, r8, lsr #12
   1a34c:	andeq	sl, r1, r4, ror sl
   1a350:	andeq	sl, r1, r8, ror #20
   1a354:	andeq	sl, r1, r8, ror #20
   1a358:	andeq	sl, r1, r8, ror #20
   1a35c:	andeq	sl, r1, r8, ror #20
   1a360:	andeq	sl, r1, r8, ror #20
   1a364:	andeq	sl, r1, r8, ror #20
   1a368:	andeq	sl, r1, r8, ror #20
   1a36c:	andeq	sl, r1, r8, ror #20
   1a370:	andeq	sl, r1, r8, ror #20
   1a374:	andeq	sl, r1, r8, ror #20
   1a378:	andeq	sl, r1, r8, ror #20
   1a37c:	andeq	sl, r1, r8, ror #20
   1a380:	andeq	sl, r1, r8, ror #20
   1a384:	andeq	sl, r1, r8, ror #20
   1a388:	andeq	sl, r1, r8, ror #20
   1a38c:	andeq	sl, r1, r8, ror #20
   1a390:	andeq	sl, r1, r8, ror #20
   1a394:	andeq	sl, r1, r8, ror #20
   1a398:	andeq	sl, r1, r8, ror #20
   1a39c:	andeq	sl, r1, r8, ror #20
   1a3a0:	andeq	sl, r1, r8, ror #20
   1a3a4:	andeq	sl, r1, r8, ror #20
   1a3a8:	andeq	sl, r1, r8, ror #20
   1a3ac:	andeq	sl, r1, r8, ror #20
   1a3b0:	andeq	sl, r1, r8, ror #20
   1a3b4:	andeq	sl, r1, r8, ror #20
   1a3b8:	andeq	sl, r1, r0, ror #18
   1a3bc:	andeq	sl, r1, ip, lsl #17
   1a3c0:	andeq	sl, r1, r8, ror #20
   1a3c4:	andeq	sl, r1, r0, ror #18
   1a3c8:	andeq	sl, r1, r8, ror #20
   1a3cc:	andeq	sl, r1, r0, ror #18
   1a3d0:	andeq	sl, r1, r8, ror #20
   1a3d4:	andeq	sl, r1, r8, ror #20
   1a3d8:	andeq	sl, r1, r8, ror #20
   1a3dc:	andeq	sl, r1, r8, ror #20
   1a3e0:	andeq	sl, r1, r8, ror #20
   1a3e4:	andeq	sl, r1, r8, ror #20
   1a3e8:	andeq	sl, r1, r8, ror #20
   1a3ec:	andeq	sl, r1, r8, ror #20
   1a3f0:	andeq	sl, r1, r8, ror #20
   1a3f4:	andeq	sl, r1, r8, ror #20
   1a3f8:	andeq	sl, r1, r8, ror #20
   1a3fc:	andeq	sl, r1, r8, ror #20
   1a400:	andeq	sl, r1, r8, ror #20
   1a404:	andeq	sl, r1, r8, ror #20
   1a408:	andeq	sl, r1, r8, ror #20
   1a40c:	andeq	sl, r1, r8, ror #20
   1a410:	andeq	sl, r1, r8, ror #20
   1a414:	andeq	sl, r1, r8, ror #20
   1a418:	andeq	sl, r1, r8, ror #20
   1a41c:	andeq	sl, r1, r8, ror #20
   1a420:	andeq	sl, r1, r8, ror #20
   1a424:	andeq	sl, r1, r8, ror #20
   1a428:	andeq	sl, r1, r8, ror #20
   1a42c:	andeq	sl, r1, r8, ror #20
   1a430:	andeq	sl, r1, r8, ror #20
   1a434:	andeq	sl, r1, r8, ror #20
   1a438:	andeq	sl, r1, r4, lsl #18
   1a43c:	andeq	sl, r1, r0, ror #18
   1a440:	andeq	sl, r1, r4, lsl #18
   1a444:	andeq	sl, r1, ip, asr #18
   1a448:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a44c:	cmp	r3, #0
   1a450:	beq	1a614 <lchmod@@Base+0x1870>
   1a454:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a458:	cmp	r3, #0
   1a45c:	bne	1b4bc <lchmod@@Base+0x2718>
   1a460:	mov	r3, #1
   1a464:	strb	r3, [fp, #-41]	; 0xffffffd7
   1a468:	ldr	r3, [fp, #4]
   1a46c:	cmp	r3, #2
   1a470:	bne	1a520 <lchmod@@Base+0x177c>
   1a474:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a478:	eor	r3, r3, #1
   1a47c:	uxtb	r3, r3
   1a480:	cmp	r3, #0
   1a484:	beq	1a520 <lchmod@@Base+0x177c>
   1a488:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a48c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a490:	cmp	r2, r3
   1a494:	bcs	1a4ac <lchmod@@Base+0x1708>
   1a498:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a49c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4a0:	add	r3, r2, r3
   1a4a4:	mov	r2, #39	; 0x27
   1a4a8:	strb	r2, [r3]
   1a4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4b0:	add	r3, r3, #1
   1a4b4:	str	r3, [fp, #-20]	; 0xffffffec
   1a4b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a4bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a4c0:	cmp	r2, r3
   1a4c4:	bcs	1a4dc <lchmod@@Base+0x1738>
   1a4c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a4cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4d0:	add	r3, r2, r3
   1a4d4:	mov	r2, #36	; 0x24
   1a4d8:	strb	r2, [r3]
   1a4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4e0:	add	r3, r3, #1
   1a4e4:	str	r3, [fp, #-20]	; 0xffffffec
   1a4e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a4ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a4f0:	cmp	r2, r3
   1a4f4:	bcs	1a50c <lchmod@@Base+0x1768>
   1a4f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a4fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a500:	add	r3, r2, r3
   1a504:	mov	r2, #39	; 0x27
   1a508:	strb	r2, [r3]
   1a50c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a510:	add	r3, r3, #1
   1a514:	str	r3, [fp, #-20]	; 0xffffffec
   1a518:	mov	r3, #1
   1a51c:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a520:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a524:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a528:	cmp	r2, r3
   1a52c:	bcs	1a544 <lchmod@@Base+0x17a0>
   1a530:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a534:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a538:	add	r3, r2, r3
   1a53c:	mov	r2, #92	; 0x5c
   1a540:	strb	r2, [r3]
   1a544:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a548:	add	r3, r3, #1
   1a54c:	str	r3, [fp, #-20]	; 0xffffffec
   1a550:	ldr	r3, [fp, #4]
   1a554:	cmp	r3, #2
   1a558:	beq	1a608 <lchmod@@Base+0x1864>
   1a55c:	ldr	r3, [fp, #-16]
   1a560:	add	r2, r3, #1
   1a564:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a568:	cmp	r2, r3
   1a56c:	bcs	1a608 <lchmod@@Base+0x1864>
   1a570:	ldr	r3, [fp, #-16]
   1a574:	add	r3, r3, #1
   1a578:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a57c:	add	r3, r2, r3
   1a580:	ldrb	r3, [r3]
   1a584:	cmp	r3, #47	; 0x2f
   1a588:	bls	1a608 <lchmod@@Base+0x1864>
   1a58c:	ldr	r3, [fp, #-16]
   1a590:	add	r3, r3, #1
   1a594:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a598:	add	r3, r2, r3
   1a59c:	ldrb	r3, [r3]
   1a5a0:	cmp	r3, #57	; 0x39
   1a5a4:	bhi	1a608 <lchmod@@Base+0x1864>
   1a5a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a5ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a5b0:	cmp	r2, r3
   1a5b4:	bcs	1a5cc <lchmod@@Base+0x1828>
   1a5b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a5bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5c0:	add	r3, r2, r3
   1a5c4:	mov	r2, #48	; 0x30
   1a5c8:	strb	r2, [r3]
   1a5cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5d0:	add	r3, r3, #1
   1a5d4:	str	r3, [fp, #-20]	; 0xffffffec
   1a5d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a5dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a5e0:	cmp	r2, r3
   1a5e4:	bcs	1a5fc <lchmod@@Base+0x1858>
   1a5e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5f0:	add	r3, r2, r3
   1a5f4:	mov	r2, #48	; 0x30
   1a5f8:	strb	r2, [r3]
   1a5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a600:	add	r3, r3, #1
   1a604:	str	r3, [fp, #-20]	; 0xffffffec
   1a608:	mov	r3, #48	; 0x30
   1a60c:	strb	r3, [fp, #-38]	; 0xffffffda
   1a610:	b	1b050 <lchmod@@Base+0x22ac>
   1a614:	ldr	r3, [fp, #8]
   1a618:	and	r3, r3, #1
   1a61c:	cmp	r3, #0
   1a620:	beq	1b050 <lchmod@@Base+0x22ac>
   1a624:	b	1b2ec <lchmod@@Base+0x2548>
   1a628:	ldr	r3, [fp, #4]
   1a62c:	cmp	r3, #2
   1a630:	beq	1a640 <lchmod@@Base+0x189c>
   1a634:	cmp	r3, #5
   1a638:	beq	1a650 <lchmod@@Base+0x18ac>
   1a63c:	b	1a834 <lchmod@@Base+0x1a90>
   1a640:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a644:	cmp	r3, #0
   1a648:	beq	1a828 <lchmod@@Base+0x1a84>
   1a64c:	b	1b4f8 <lchmod@@Base+0x2754>
   1a650:	ldr	r3, [fp, #8]
   1a654:	and	r3, r3, #4
   1a658:	cmp	r3, #0
   1a65c:	beq	1a830 <lchmod@@Base+0x1a8c>
   1a660:	ldr	r3, [fp, #-16]
   1a664:	add	r2, r3, #2
   1a668:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a66c:	cmp	r2, r3
   1a670:	bcs	1a830 <lchmod@@Base+0x1a8c>
   1a674:	ldr	r3, [fp, #-16]
   1a678:	add	r3, r3, #1
   1a67c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a680:	add	r3, r2, r3
   1a684:	ldrb	r3, [r3]
   1a688:	cmp	r3, #63	; 0x3f
   1a68c:	bne	1a830 <lchmod@@Base+0x1a8c>
   1a690:	ldr	r3, [fp, #-16]
   1a694:	add	r3, r3, #2
   1a698:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a69c:	add	r3, r2, r3
   1a6a0:	ldrb	r3, [r3]
   1a6a4:	sub	r3, r3, #33	; 0x21
   1a6a8:	cmp	r3, #29
   1a6ac:	ldrls	pc, [pc, r3, lsl #2]
   1a6b0:	b	1a820 <lchmod@@Base+0x1a7c>
   1a6b4:	andeq	sl, r1, ip, lsr #14
   1a6b8:	andeq	sl, r1, r0, lsr #16
   1a6bc:	andeq	sl, r1, r0, lsr #16
   1a6c0:	andeq	sl, r1, r0, lsr #16
   1a6c4:	andeq	sl, r1, r0, lsr #16
   1a6c8:	andeq	sl, r1, r0, lsr #16
   1a6cc:	andeq	sl, r1, ip, lsr #14
   1a6d0:	andeq	sl, r1, ip, lsr #14
   1a6d4:	andeq	sl, r1, ip, lsr #14
   1a6d8:	andeq	sl, r1, r0, lsr #16
   1a6dc:	andeq	sl, r1, r0, lsr #16
   1a6e0:	andeq	sl, r1, r0, lsr #16
   1a6e4:	andeq	sl, r1, ip, lsr #14
   1a6e8:	andeq	sl, r1, r0, lsr #16
   1a6ec:	andeq	sl, r1, ip, lsr #14
   1a6f0:	andeq	sl, r1, r0, lsr #16
   1a6f4:	andeq	sl, r1, r0, lsr #16
   1a6f8:	andeq	sl, r1, r0, lsr #16
   1a6fc:	andeq	sl, r1, r0, lsr #16
   1a700:	andeq	sl, r1, r0, lsr #16
   1a704:	andeq	sl, r1, r0, lsr #16
   1a708:	andeq	sl, r1, r0, lsr #16
   1a70c:	andeq	sl, r1, r0, lsr #16
   1a710:	andeq	sl, r1, r0, lsr #16
   1a714:	andeq	sl, r1, r0, lsr #16
   1a718:	andeq	sl, r1, r0, lsr #16
   1a71c:	andeq	sl, r1, r0, lsr #16
   1a720:	andeq	sl, r1, ip, lsr #14
   1a724:	andeq	sl, r1, ip, lsr #14
   1a728:	andeq	sl, r1, ip, lsr #14
   1a72c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a730:	cmp	r3, #0
   1a734:	bne	1b4c4 <lchmod@@Base+0x2720>
   1a738:	ldr	r3, [fp, #-16]
   1a73c:	add	r3, r3, #2
   1a740:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a744:	add	r3, r2, r3
   1a748:	ldrb	r3, [r3]
   1a74c:	strb	r3, [fp, #-38]	; 0xffffffda
   1a750:	ldr	r3, [fp, #-16]
   1a754:	add	r3, r3, #2
   1a758:	str	r3, [fp, #-16]
   1a75c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a760:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a764:	cmp	r2, r3
   1a768:	bcs	1a780 <lchmod@@Base+0x19dc>
   1a76c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a770:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a774:	add	r3, r2, r3
   1a778:	mov	r2, #63	; 0x3f
   1a77c:	strb	r2, [r3]
   1a780:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a784:	add	r3, r3, #1
   1a788:	str	r3, [fp, #-20]	; 0xffffffec
   1a78c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a790:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a794:	cmp	r2, r3
   1a798:	bcs	1a7b0 <lchmod@@Base+0x1a0c>
   1a79c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a7a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7a4:	add	r3, r2, r3
   1a7a8:	mov	r2, #34	; 0x22
   1a7ac:	strb	r2, [r3]
   1a7b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7b4:	add	r3, r3, #1
   1a7b8:	str	r3, [fp, #-20]	; 0xffffffec
   1a7bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a7c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a7c4:	cmp	r2, r3
   1a7c8:	bcs	1a7e0 <lchmod@@Base+0x1a3c>
   1a7cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a7d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7d4:	add	r3, r2, r3
   1a7d8:	mov	r2, #34	; 0x22
   1a7dc:	strb	r2, [r3]
   1a7e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7e4:	add	r3, r3, #1
   1a7e8:	str	r3, [fp, #-20]	; 0xffffffec
   1a7ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a7f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a7f4:	cmp	r2, r3
   1a7f8:	bcs	1a810 <lchmod@@Base+0x1a6c>
   1a7fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a800:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a804:	add	r3, r2, r3
   1a808:	mov	r2, #63	; 0x3f
   1a80c:	strb	r2, [r3]
   1a810:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a814:	add	r3, r3, #1
   1a818:	str	r3, [fp, #-20]	; 0xffffffec
   1a81c:	b	1a824 <lchmod@@Base+0x1a80>
   1a820:	nop			; (mov r0, r0)
   1a824:	b	1a830 <lchmod@@Base+0x1a8c>
   1a828:	nop			; (mov r0, r0)
   1a82c:	b	1b07c <lchmod@@Base+0x22d8>
   1a830:	nop			; (mov r0, r0)
   1a834:	b	1b07c <lchmod@@Base+0x22d8>
   1a838:	mov	r3, #97	; 0x61
   1a83c:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a840:	b	1a8ec <lchmod@@Base+0x1b48>
   1a844:	mov	r3, #98	; 0x62
   1a848:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a84c:	b	1a8ec <lchmod@@Base+0x1b48>
   1a850:	mov	r3, #102	; 0x66
   1a854:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a858:	b	1a8ec <lchmod@@Base+0x1b48>
   1a85c:	mov	r3, #110	; 0x6e
   1a860:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a864:	b	1a8d4 <lchmod@@Base+0x1b30>
   1a868:	mov	r3, #114	; 0x72
   1a86c:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a870:	b	1a8d4 <lchmod@@Base+0x1b30>
   1a874:	mov	r3, #116	; 0x74
   1a878:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a87c:	b	1a8d4 <lchmod@@Base+0x1b30>
   1a880:	mov	r3, #118	; 0x76
   1a884:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a888:	b	1a8ec <lchmod@@Base+0x1b48>
   1a88c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a890:	strb	r3, [fp, #-39]	; 0xffffffd9
   1a894:	ldr	r3, [fp, #4]
   1a898:	cmp	r3, #2
   1a89c:	bne	1a8b0 <lchmod@@Base+0x1b0c>
   1a8a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a8a4:	cmp	r3, #0
   1a8a8:	beq	1b204 <lchmod@@Base+0x2460>
   1a8ac:	b	1b4f8 <lchmod@@Base+0x2754>
   1a8b0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a8b4:	cmp	r3, #0
   1a8b8:	beq	1a8d4 <lchmod@@Base+0x1b30>
   1a8bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a8c0:	cmp	r3, #0
   1a8c4:	beq	1a8d4 <lchmod@@Base+0x1b30>
   1a8c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a8cc:	cmp	r3, #0
   1a8d0:	bne	1b20c <lchmod@@Base+0x2468>
   1a8d4:	ldr	r3, [fp, #4]
   1a8d8:	cmp	r3, #2
   1a8dc:	bne	1a8ec <lchmod@@Base+0x1b48>
   1a8e0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a8e4:	cmp	r3, #0
   1a8e8:	bne	1b4cc <lchmod@@Base+0x2728>
   1a8ec:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a8f0:	cmp	r3, #0
   1a8f4:	beq	1b058 <lchmod@@Base+0x22b4>
   1a8f8:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   1a8fc:	strb	r3, [fp, #-38]	; 0xffffffda
   1a900:	b	1b104 <lchmod@@Base+0x2360>
   1a904:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a908:	cmn	r3, #1
   1a90c:	bne	1a930 <lchmod@@Base+0x1b8c>
   1a910:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a914:	add	r3, r3, #1
   1a918:	ldrb	r3, [r3]
   1a91c:	cmp	r3, #0
   1a920:	movne	r3, #1
   1a924:	moveq	r3, #0
   1a928:	uxtb	r3, r3
   1a92c:	b	1a944 <lchmod@@Base+0x1ba0>
   1a930:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a934:	cmp	r3, #1
   1a938:	movne	r3, #1
   1a93c:	moveq	r3, #0
   1a940:	uxtb	r3, r3
   1a944:	cmp	r3, #0
   1a948:	bne	1b060 <lchmod@@Base+0x22bc>
   1a94c:	ldr	r3, [fp, #-16]
   1a950:	cmp	r3, #0
   1a954:	bne	1b068 <lchmod@@Base+0x22c4>
   1a958:	mov	r3, #1
   1a95c:	strb	r3, [fp, #-42]	; 0xffffffd6
   1a960:	ldr	r3, [fp, #4]
   1a964:	cmp	r3, #2
   1a968:	bne	1b070 <lchmod@@Base+0x22cc>
   1a96c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a970:	cmp	r3, #0
   1a974:	beq	1b070 <lchmod@@Base+0x22cc>
   1a978:	b	1b4f8 <lchmod@@Base+0x2754>
   1a97c:	mov	r3, #1
   1a980:	strb	r3, [fp, #-36]	; 0xffffffdc
   1a984:	mov	r3, #1
   1a988:	strb	r3, [fp, #-42]	; 0xffffffd6
   1a98c:	ldr	r3, [fp, #4]
   1a990:	cmp	r3, #2
   1a994:	bne	1b078 <lchmod@@Base+0x22d4>
   1a998:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a99c:	cmp	r3, #0
   1a9a0:	bne	1b4d4 <lchmod@@Base+0x2730>
   1a9a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a9a8:	cmp	r3, #0
   1a9ac:	beq	1a9cc <lchmod@@Base+0x1c28>
   1a9b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9b4:	cmp	r3, #0
   1a9b8:	bne	1a9cc <lchmod@@Base+0x1c28>
   1a9bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a9c0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a9c4:	mov	r3, #0
   1a9c8:	str	r3, [fp, #-92]	; 0xffffffa4
   1a9cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a9d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a9d4:	cmp	r2, r3
   1a9d8:	bcs	1a9f0 <lchmod@@Base+0x1c4c>
   1a9dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a9e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a9e4:	add	r3, r2, r3
   1a9e8:	mov	r2, #39	; 0x27
   1a9ec:	strb	r2, [r3]
   1a9f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a9f4:	add	r3, r3, #1
   1a9f8:	str	r3, [fp, #-20]	; 0xffffffec
   1a9fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aa00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aa04:	cmp	r2, r3
   1aa08:	bcs	1aa20 <lchmod@@Base+0x1c7c>
   1aa0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aa10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa14:	add	r3, r2, r3
   1aa18:	mov	r2, #92	; 0x5c
   1aa1c:	strb	r2, [r3]
   1aa20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa24:	add	r3, r3, #1
   1aa28:	str	r3, [fp, #-20]	; 0xffffffec
   1aa2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aa30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aa34:	cmp	r2, r3
   1aa38:	bcs	1aa50 <lchmod@@Base+0x1cac>
   1aa3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aa40:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa44:	add	r3, r2, r3
   1aa48:	mov	r2, #39	; 0x27
   1aa4c:	strb	r2, [r3]
   1aa50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa54:	add	r3, r3, #1
   1aa58:	str	r3, [fp, #-20]	; 0xffffffec
   1aa5c:	mov	r3, #0
   1aa60:	strb	r3, [fp, #-35]	; 0xffffffdd
   1aa64:	b	1b078 <lchmod@@Base+0x22d4>
   1aa68:	mov	r3, #1
   1aa6c:	strb	r3, [fp, #-42]	; 0xffffffd6
   1aa70:	b	1b07c <lchmod@@Base+0x22d8>
   1aa74:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1aa78:	cmp	r3, #0
   1aa7c:	beq	1aabc <lchmod@@Base+0x1d18>
   1aa80:	mov	r3, #1
   1aa84:	str	r3, [fp, #-48]	; 0xffffffd0
   1aa88:	bl	11648 <__ctype_b_loc@plt>
   1aa8c:	mov	r3, r0
   1aa90:	ldr	r2, [r3]
   1aa94:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1aa98:	lsl	r3, r3, #1
   1aa9c:	add	r3, r2, r3
   1aaa0:	ldrh	r3, [r3]
   1aaa4:	and	r3, r3, #16384	; 0x4000
   1aaa8:	cmp	r3, #0
   1aaac:	movne	r3, #1
   1aab0:	moveq	r3, #0
   1aab4:	strb	r3, [fp, #-49]	; 0xffffffcf
   1aab8:	b	1ad08 <lchmod@@Base+0x1f64>
   1aabc:	sub	r3, fp, #76	; 0x4c
   1aac0:	mov	r2, #8
   1aac4:	mov	r1, #0
   1aac8:	mov	r0, r3
   1aacc:	bl	116d8 <memset@plt>
   1aad0:	mov	r3, #0
   1aad4:	str	r3, [fp, #-48]	; 0xffffffd0
   1aad8:	mov	r3, #1
   1aadc:	strb	r3, [fp, #-49]	; 0xffffffcf
   1aae0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1aae4:	cmn	r3, #1
   1aae8:	bne	1aaf8 <lchmod@@Base+0x1d54>
   1aaec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1aaf0:	bl	11684 <strlen@plt>
   1aaf4:	str	r0, [fp, #-100]	; 0xffffff9c
   1aaf8:	ldr	r2, [fp, #-16]
   1aafc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab00:	add	r3, r2, r3
   1ab04:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ab08:	add	r1, r2, r3
   1ab0c:	ldr	r2, [fp, #-16]
   1ab10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab14:	add	r3, r2, r3
   1ab18:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1ab1c:	sub	r2, r2, r3
   1ab20:	sub	r3, fp, #76	; 0x4c
   1ab24:	sub	r0, fp, #80	; 0x50
   1ab28:	bl	1ecd0 <lchmod@@Base+0x5f2c>
   1ab2c:	str	r0, [fp, #-64]	; 0xffffffc0
   1ab30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab34:	cmp	r3, #0
   1ab38:	beq	1acfc <lchmod@@Base+0x1f58>
   1ab3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab40:	cmn	r3, #1
   1ab44:	bne	1ab54 <lchmod@@Base+0x1db0>
   1ab48:	mov	r3, #0
   1ab4c:	strb	r3, [fp, #-49]	; 0xffffffcf
   1ab50:	b	1ad08 <lchmod@@Base+0x1f64>
   1ab54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab58:	cmn	r3, #2
   1ab5c:	bne	1abb4 <lchmod@@Base+0x1e10>
   1ab60:	mov	r3, #0
   1ab64:	strb	r3, [fp, #-49]	; 0xffffffcf
   1ab68:	b	1ab78 <lchmod@@Base+0x1dd4>
   1ab6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab70:	add	r3, r3, #1
   1ab74:	str	r3, [fp, #-48]	; 0xffffffd0
   1ab78:	ldr	r2, [fp, #-16]
   1ab7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab80:	add	r2, r2, r3
   1ab84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ab88:	cmp	r2, r3
   1ab8c:	bcs	1ad04 <lchmod@@Base+0x1f60>
   1ab90:	ldr	r2, [fp, #-16]
   1ab94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab98:	add	r3, r2, r3
   1ab9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1aba0:	add	r3, r2, r3
   1aba4:	ldrb	r3, [r3]
   1aba8:	cmp	r3, #0
   1abac:	bne	1ab6c <lchmod@@Base+0x1dc8>
   1abb0:	b	1ad04 <lchmod@@Base+0x1f60>
   1abb4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1abb8:	cmp	r3, #0
   1abbc:	beq	1acb0 <lchmod@@Base+0x1f0c>
   1abc0:	ldr	r3, [fp, #4]
   1abc4:	cmp	r3, #2
   1abc8:	bne	1acb0 <lchmod@@Base+0x1f0c>
   1abcc:	mov	r3, #1
   1abd0:	str	r3, [fp, #-56]	; 0xffffffc8
   1abd4:	b	1aca0 <lchmod@@Base+0x1efc>
   1abd8:	ldr	r2, [fp, #-16]
   1abdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1abe0:	add	r2, r2, r3
   1abe4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1abe8:	add	r3, r2, r3
   1abec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1abf0:	add	r3, r2, r3
   1abf4:	ldrb	r3, [r3]
   1abf8:	sub	r3, r3, #91	; 0x5b
   1abfc:	cmp	r3, #33	; 0x21
   1ac00:	ldrls	pc, [pc, r3, lsl #2]
   1ac04:	b	1ac90 <lchmod@@Base+0x1eec>
   1ac08:	ldrdeq	fp, [r1], -ip
   1ac0c:	ldrdeq	fp, [r1], -ip
   1ac10:	muleq	r1, r0, ip
   1ac14:	ldrdeq	fp, [r1], -ip
   1ac18:	muleq	r1, r0, ip
   1ac1c:	ldrdeq	fp, [r1], -ip
   1ac20:	muleq	r1, r0, ip
   1ac24:	muleq	r1, r0, ip
   1ac28:	muleq	r1, r0, ip
   1ac2c:	muleq	r1, r0, ip
   1ac30:	muleq	r1, r0, ip
   1ac34:	muleq	r1, r0, ip
   1ac38:	muleq	r1, r0, ip
   1ac3c:	muleq	r1, r0, ip
   1ac40:	muleq	r1, r0, ip
   1ac44:	muleq	r1, r0, ip
   1ac48:	muleq	r1, r0, ip
   1ac4c:	muleq	r1, r0, ip
   1ac50:	muleq	r1, r0, ip
   1ac54:	muleq	r1, r0, ip
   1ac58:	muleq	r1, r0, ip
   1ac5c:	muleq	r1, r0, ip
   1ac60:	muleq	r1, r0, ip
   1ac64:	muleq	r1, r0, ip
   1ac68:	muleq	r1, r0, ip
   1ac6c:	muleq	r1, r0, ip
   1ac70:	muleq	r1, r0, ip
   1ac74:	muleq	r1, r0, ip
   1ac78:	muleq	r1, r0, ip
   1ac7c:	muleq	r1, r0, ip
   1ac80:	muleq	r1, r0, ip
   1ac84:	muleq	r1, r0, ip
   1ac88:	muleq	r1, r0, ip
   1ac8c:	ldrdeq	fp, [r1], -ip
   1ac90:	nop			; (mov r0, r0)
   1ac94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ac98:	add	r3, r3, #1
   1ac9c:	str	r3, [fp, #-56]	; 0xffffffc8
   1aca0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aca4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1aca8:	cmp	r2, r3
   1acac:	bcc	1abd8 <lchmod@@Base+0x1e34>
   1acb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1acb4:	mov	r0, r3
   1acb8:	bl	11558 <iswprint@plt>
   1acbc:	mov	r3, r0
   1acc0:	cmp	r3, #0
   1acc4:	bne	1acd0 <lchmod@@Base+0x1f2c>
   1acc8:	mov	r3, #0
   1accc:	strb	r3, [fp, #-49]	; 0xffffffcf
   1acd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1acd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1acd8:	add	r3, r2, r3
   1acdc:	str	r3, [fp, #-48]	; 0xffffffd0
   1ace0:	sub	r3, fp, #76	; 0x4c
   1ace4:	mov	r0, r3
   1ace8:	bl	114e0 <mbsinit@plt>
   1acec:	mov	r3, r0
   1acf0:	cmp	r3, #0
   1acf4:	beq	1aaf8 <lchmod@@Base+0x1d54>
   1acf8:	b	1ad08 <lchmod@@Base+0x1f64>
   1acfc:	nop			; (mov r0, r0)
   1ad00:	b	1ad08 <lchmod@@Base+0x1f64>
   1ad04:	nop			; (mov r0, r0)
   1ad08:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1ad0c:	strb	r3, [fp, #-42]	; 0xffffffd6
   1ad10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad14:	cmp	r3, #1
   1ad18:	bhi	1ad3c <lchmod@@Base+0x1f98>
   1ad1c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1ad20:	cmp	r3, #0
   1ad24:	beq	1b07c <lchmod@@Base+0x22d8>
   1ad28:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1ad2c:	eor	r3, r3, #1
   1ad30:	uxtb	r3, r3
   1ad34:	cmp	r3, #0
   1ad38:	beq	1b07c <lchmod@@Base+0x22d8>
   1ad3c:	ldr	r2, [fp, #-16]
   1ad40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad44:	add	r3, r2, r3
   1ad48:	str	r3, [fp, #-68]	; 0xffffffbc
   1ad4c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1ad50:	cmp	r3, #0
   1ad54:	beq	1af14 <lchmod@@Base+0x2170>
   1ad58:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1ad5c:	eor	r3, r3, #1
   1ad60:	uxtb	r3, r3
   1ad64:	cmp	r3, #0
   1ad68:	beq	1af14 <lchmod@@Base+0x2170>
   1ad6c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1ad70:	cmp	r3, #0
   1ad74:	bne	1b4e4 <lchmod@@Base+0x2740>
   1ad78:	mov	r3, #1
   1ad7c:	strb	r3, [fp, #-41]	; 0xffffffd7
   1ad80:	ldr	r3, [fp, #4]
   1ad84:	cmp	r3, #2
   1ad88:	bne	1ae38 <lchmod@@Base+0x2094>
   1ad8c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1ad90:	eor	r3, r3, #1
   1ad94:	uxtb	r3, r3
   1ad98:	cmp	r3, #0
   1ad9c:	beq	1ae38 <lchmod@@Base+0x2094>
   1ada0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ada4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ada8:	cmp	r2, r3
   1adac:	bcs	1adc4 <lchmod@@Base+0x2020>
   1adb0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1adb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adb8:	add	r3, r2, r3
   1adbc:	mov	r2, #39	; 0x27
   1adc0:	strb	r2, [r3]
   1adc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adc8:	add	r3, r3, #1
   1adcc:	str	r3, [fp, #-20]	; 0xffffffec
   1add0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1add4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1add8:	cmp	r2, r3
   1addc:	bcs	1adf4 <lchmod@@Base+0x2050>
   1ade0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ade4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ade8:	add	r3, r2, r3
   1adec:	mov	r2, #36	; 0x24
   1adf0:	strb	r2, [r3]
   1adf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adf8:	add	r3, r3, #1
   1adfc:	str	r3, [fp, #-20]	; 0xffffffec
   1ae00:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae04:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ae08:	cmp	r2, r3
   1ae0c:	bcs	1ae24 <lchmod@@Base+0x2080>
   1ae10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ae14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae18:	add	r3, r2, r3
   1ae1c:	mov	r2, #39	; 0x27
   1ae20:	strb	r2, [r3]
   1ae24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae28:	add	r3, r3, #1
   1ae2c:	str	r3, [fp, #-20]	; 0xffffffec
   1ae30:	mov	r3, #1
   1ae34:	strb	r3, [fp, #-35]	; 0xffffffdd
   1ae38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ae40:	cmp	r2, r3
   1ae44:	bcs	1ae5c <lchmod@@Base+0x20b8>
   1ae48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ae4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae50:	add	r3, r2, r3
   1ae54:	mov	r2, #92	; 0x5c
   1ae58:	strb	r2, [r3]
   1ae5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae60:	add	r3, r3, #1
   1ae64:	str	r3, [fp, #-20]	; 0xffffffec
   1ae68:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae6c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ae70:	cmp	r2, r3
   1ae74:	bcs	1ae9c <lchmod@@Base+0x20f8>
   1ae78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ae7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae80:	add	r3, r2, r3
   1ae84:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1ae88:	lsr	r2, r2, #6
   1ae8c:	uxtb	r2, r2
   1ae90:	add	r2, r2, #48	; 0x30
   1ae94:	uxtb	r2, r2
   1ae98:	strb	r2, [r3]
   1ae9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aea0:	add	r3, r3, #1
   1aea4:	str	r3, [fp, #-20]	; 0xffffffec
   1aea8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aeac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aeb0:	cmp	r2, r3
   1aeb4:	bcs	1aee4 <lchmod@@Base+0x2140>
   1aeb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1aebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aec0:	add	r3, r2, r3
   1aec4:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1aec8:	lsr	r2, r2, #3
   1aecc:	uxtb	r2, r2
   1aed0:	and	r2, r2, #7
   1aed4:	uxtb	r2, r2
   1aed8:	add	r2, r2, #48	; 0x30
   1aedc:	uxtb	r2, r2
   1aee0:	strb	r2, [r3]
   1aee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aee8:	add	r3, r3, #1
   1aeec:	str	r3, [fp, #-20]	; 0xffffffec
   1aef0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1aef4:	and	r3, r3, #7
   1aef8:	uxtb	r3, r3
   1aefc:	add	r3, r3, #48	; 0x30
   1af00:	strb	r3, [fp, #-38]	; 0xffffffda
   1af04:	b	1af58 <lchmod@@Base+0x21b4>
   1af08:	andeq	r0, r2, r8, lsr #7
   1af0c:			; <UNDEFINED> instruction: 0x000203b0
   1af10:	andeq	r0, r2, ip, lsr #7
   1af14:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1af18:	cmp	r3, #0
   1af1c:	beq	1af58 <lchmod@@Base+0x21b4>
   1af20:	ldr	r2, [fp, #-20]	; 0xffffffec
   1af24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1af28:	cmp	r2, r3
   1af2c:	bcs	1af44 <lchmod@@Base+0x21a0>
   1af30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1af34:	ldr	r3, [fp, #-20]	; 0xffffffec
   1af38:	add	r3, r2, r3
   1af3c:	mov	r2, #92	; 0x5c
   1af40:	strb	r2, [r3]
   1af44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1af48:	add	r3, r3, #1
   1af4c:	str	r3, [fp, #-20]	; 0xffffffec
   1af50:	mov	r3, #0
   1af54:	strb	r3, [fp, #-40]	; 0xffffffd8
   1af58:	ldr	r3, [fp, #-16]
   1af5c:	add	r2, r3, #1
   1af60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1af64:	cmp	r2, r3
   1af68:	bcs	1b048 <lchmod@@Base+0x22a4>
   1af6c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1af70:	cmp	r3, #0
   1af74:	beq	1aff4 <lchmod@@Base+0x2250>
   1af78:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1af7c:	eor	r3, r3, #1
   1af80:	uxtb	r3, r3
   1af84:	cmp	r3, #0
   1af88:	beq	1aff4 <lchmod@@Base+0x2250>
   1af8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1af90:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1af94:	cmp	r2, r3
   1af98:	bcs	1afb0 <lchmod@@Base+0x220c>
   1af9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1afa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afa4:	add	r3, r2, r3
   1afa8:	mov	r2, #39	; 0x27
   1afac:	strb	r2, [r3]
   1afb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afb4:	add	r3, r3, #1
   1afb8:	str	r3, [fp, #-20]	; 0xffffffec
   1afbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1afc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1afc4:	cmp	r2, r3
   1afc8:	bcs	1afe0 <lchmod@@Base+0x223c>
   1afcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1afd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afd4:	add	r3, r2, r3
   1afd8:	mov	r2, #39	; 0x27
   1afdc:	strb	r2, [r3]
   1afe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afe4:	add	r3, r3, #1
   1afe8:	str	r3, [fp, #-20]	; 0xffffffec
   1afec:	mov	r3, #0
   1aff0:	strb	r3, [fp, #-35]	; 0xffffffdd
   1aff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aff8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1affc:	cmp	r2, r3
   1b000:	bcs	1b018 <lchmod@@Base+0x2274>
   1b004:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b00c:	add	r3, r2, r3
   1b010:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1b014:	strb	r2, [r3]
   1b018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b01c:	add	r3, r3, #1
   1b020:	str	r3, [fp, #-20]	; 0xffffffec
   1b024:	ldr	r3, [fp, #-16]
   1b028:	add	r3, r3, #1
   1b02c:	str	r3, [fp, #-16]
   1b030:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b034:	ldr	r3, [fp, #-16]
   1b038:	add	r3, r2, r3
   1b03c:	ldrb	r3, [r3]
   1b040:	strb	r3, [fp, #-38]	; 0xffffffda
   1b044:	b	1ad4c <lchmod@@Base+0x1fa8>
   1b048:	nop			; (mov r0, r0)
   1b04c:	b	1b218 <lchmod@@Base+0x2474>
   1b050:	nop			; (mov r0, r0)
   1b054:	b	1b07c <lchmod@@Base+0x22d8>
   1b058:	nop			; (mov r0, r0)
   1b05c:	b	1b07c <lchmod@@Base+0x22d8>
   1b060:	nop			; (mov r0, r0)
   1b064:	b	1b07c <lchmod@@Base+0x22d8>
   1b068:	nop			; (mov r0, r0)
   1b06c:	b	1b07c <lchmod@@Base+0x22d8>
   1b070:	nop			; (mov r0, r0)
   1b074:	b	1b07c <lchmod@@Base+0x22d8>
   1b078:	nop			; (mov r0, r0)
   1b07c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b080:	eor	r3, r3, #1
   1b084:	uxtb	r3, r3
   1b088:	cmp	r3, #0
   1b08c:	bne	1b09c <lchmod@@Base+0x22f8>
   1b090:	ldr	r3, [fp, #4]
   1b094:	cmp	r3, #2
   1b098:	bne	1b0b0 <lchmod@@Base+0x230c>
   1b09c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b0a0:	eor	r3, r3, #1
   1b0a4:	uxtb	r3, r3
   1b0a8:	cmp	r3, #0
   1b0ac:	bne	1b0f0 <lchmod@@Base+0x234c>
   1b0b0:	ldr	r3, [fp, #12]
   1b0b4:	cmp	r3, #0
   1b0b8:	beq	1b0f0 <lchmod@@Base+0x234c>
   1b0bc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1b0c0:	lsr	r3, r3, #5
   1b0c4:	uxtb	r3, r3
   1b0c8:	lsl	r3, r3, #2
   1b0cc:	ldr	r2, [fp, #12]
   1b0d0:	add	r3, r2, r3
   1b0d4:	ldr	r2, [r3]
   1b0d8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1b0dc:	and	r3, r3, #31
   1b0e0:	lsr	r3, r2, r3
   1b0e4:	and	r3, r3, #1
   1b0e8:	cmp	r3, #0
   1b0ec:	bne	1b104 <lchmod@@Base+0x2360>
   1b0f0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1b0f4:	eor	r3, r3, #1
   1b0f8:	uxtb	r3, r3
   1b0fc:	cmp	r3, #0
   1b100:	bne	1b214 <lchmod@@Base+0x2470>
   1b104:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b108:	cmp	r3, #0
   1b10c:	bne	1b4ec <lchmod@@Base+0x2748>
   1b110:	mov	r3, #1
   1b114:	strb	r3, [fp, #-41]	; 0xffffffd7
   1b118:	ldr	r3, [fp, #4]
   1b11c:	cmp	r3, #2
   1b120:	bne	1b1d0 <lchmod@@Base+0x242c>
   1b124:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1b128:	eor	r3, r3, #1
   1b12c:	uxtb	r3, r3
   1b130:	cmp	r3, #0
   1b134:	beq	1b1d0 <lchmod@@Base+0x242c>
   1b138:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b13c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b140:	cmp	r2, r3
   1b144:	bcs	1b15c <lchmod@@Base+0x23b8>
   1b148:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b14c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b150:	add	r3, r2, r3
   1b154:	mov	r2, #39	; 0x27
   1b158:	strb	r2, [r3]
   1b15c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b160:	add	r3, r3, #1
   1b164:	str	r3, [fp, #-20]	; 0xffffffec
   1b168:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b16c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b170:	cmp	r2, r3
   1b174:	bcs	1b18c <lchmod@@Base+0x23e8>
   1b178:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b17c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b180:	add	r3, r2, r3
   1b184:	mov	r2, #36	; 0x24
   1b188:	strb	r2, [r3]
   1b18c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b190:	add	r3, r3, #1
   1b194:	str	r3, [fp, #-20]	; 0xffffffec
   1b198:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b19c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b1a0:	cmp	r2, r3
   1b1a4:	bcs	1b1bc <lchmod@@Base+0x2418>
   1b1a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1b0:	add	r3, r2, r3
   1b1b4:	mov	r2, #39	; 0x27
   1b1b8:	strb	r2, [r3]
   1b1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1c0:	add	r3, r3, #1
   1b1c4:	str	r3, [fp, #-20]	; 0xffffffec
   1b1c8:	mov	r3, #1
   1b1cc:	strb	r3, [fp, #-35]	; 0xffffffdd
   1b1d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b1d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b1d8:	cmp	r2, r3
   1b1dc:	bcs	1b1f4 <lchmod@@Base+0x2450>
   1b1e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b1e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1e8:	add	r3, r2, r3
   1b1ec:	mov	r2, #92	; 0x5c
   1b1f0:	strb	r2, [r3]
   1b1f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1f8:	add	r3, r3, #1
   1b1fc:	str	r3, [fp, #-20]	; 0xffffffec
   1b200:	b	1b218 <lchmod@@Base+0x2474>
   1b204:	nop			; (mov r0, r0)
   1b208:	b	1b218 <lchmod@@Base+0x2474>
   1b20c:	nop			; (mov r0, r0)
   1b210:	b	1b218 <lchmod@@Base+0x2474>
   1b214:	nop			; (mov r0, r0)
   1b218:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1b21c:	cmp	r3, #0
   1b220:	beq	1b2a0 <lchmod@@Base+0x24fc>
   1b224:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1b228:	eor	r3, r3, #1
   1b22c:	uxtb	r3, r3
   1b230:	cmp	r3, #0
   1b234:	beq	1b2a0 <lchmod@@Base+0x24fc>
   1b238:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b23c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b240:	cmp	r2, r3
   1b244:	bcs	1b25c <lchmod@@Base+0x24b8>
   1b248:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b24c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b250:	add	r3, r2, r3
   1b254:	mov	r2, #39	; 0x27
   1b258:	strb	r2, [r3]
   1b25c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b260:	add	r3, r3, #1
   1b264:	str	r3, [fp, #-20]	; 0xffffffec
   1b268:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b26c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b270:	cmp	r2, r3
   1b274:	bcs	1b28c <lchmod@@Base+0x24e8>
   1b278:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b27c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b280:	add	r3, r2, r3
   1b284:	mov	r2, #39	; 0x27
   1b288:	strb	r2, [r3]
   1b28c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b290:	add	r3, r3, #1
   1b294:	str	r3, [fp, #-20]	; 0xffffffec
   1b298:	mov	r3, #0
   1b29c:	strb	r3, [fp, #-35]	; 0xffffffdd
   1b2a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b2a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b2a8:	cmp	r2, r3
   1b2ac:	bcs	1b2c4 <lchmod@@Base+0x2520>
   1b2b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b2b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b2b8:	add	r3, r2, r3
   1b2bc:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1b2c0:	strb	r2, [r3]
   1b2c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b2c8:	add	r3, r3, #1
   1b2cc:	str	r3, [fp, #-20]	; 0xffffffec
   1b2d0:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   1b2d4:	eor	r3, r3, #1
   1b2d8:	uxtb	r3, r3
   1b2dc:	cmp	r3, #0
   1b2e0:	beq	1b2ec <lchmod@@Base+0x2548>
   1b2e4:	mov	r3, #0
   1b2e8:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b2ec:	ldr	r3, [fp, #-16]
   1b2f0:	add	r3, r3, #1
   1b2f4:	str	r3, [fp, #-16]
   1b2f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b2fc:	cmn	r3, #1
   1b300:	bne	1b328 <lchmod@@Base+0x2584>
   1b304:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b308:	ldr	r3, [fp, #-16]
   1b30c:	add	r3, r2, r3
   1b310:	ldrb	r3, [r3]
   1b314:	cmp	r3, #0
   1b318:	movne	r3, #1
   1b31c:	moveq	r3, #0
   1b320:	uxtb	r3, r3
   1b324:	b	1b340 <lchmod@@Base+0x259c>
   1b328:	ldr	r2, [fp, #-16]
   1b32c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b330:	cmp	r2, r3
   1b334:	movne	r3, #1
   1b338:	moveq	r3, #0
   1b33c:	uxtb	r3, r3
   1b340:	cmp	r3, #0
   1b344:	bne	1a16c <lchmod@@Base+0x13c8>
   1b348:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b34c:	cmp	r3, #0
   1b350:	bne	1b36c <lchmod@@Base+0x25c8>
   1b354:	ldr	r3, [fp, #4]
   1b358:	cmp	r3, #2
   1b35c:	bne	1b36c <lchmod@@Base+0x25c8>
   1b360:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b364:	cmp	r3, #0
   1b368:	bne	1b4f4 <lchmod@@Base+0x2750>
   1b36c:	ldr	r3, [fp, #4]
   1b370:	cmp	r3, #2
   1b374:	bne	1b414 <lchmod@@Base+0x2670>
   1b378:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b37c:	eor	r3, r3, #1
   1b380:	uxtb	r3, r3
   1b384:	cmp	r3, #0
   1b388:	beq	1b414 <lchmod@@Base+0x2670>
   1b38c:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   1b390:	cmp	r3, #0
   1b394:	beq	1b414 <lchmod@@Base+0x2670>
   1b398:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b39c:	cmp	r3, #0
   1b3a0:	beq	1b3e8 <lchmod@@Base+0x2644>
   1b3a4:	ldr	r3, [fp, #20]
   1b3a8:	str	r3, [sp, #16]
   1b3ac:	ldr	r3, [fp, #16]
   1b3b0:	str	r3, [sp, #12]
   1b3b4:	ldr	r3, [fp, #12]
   1b3b8:	str	r3, [sp, #8]
   1b3bc:	ldr	r3, [fp, #8]
   1b3c0:	str	r3, [sp, #4]
   1b3c4:	mov	r3, #5
   1b3c8:	str	r3, [sp]
   1b3cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b3d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b3d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b3d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1b3dc:	bl	19ebc <lchmod@@Base+0x1118>
   1b3e0:	mov	r3, r0
   1b3e4:	b	1b55c <lchmod@@Base+0x27b8>
   1b3e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b3ec:	cmp	r3, #0
   1b3f0:	bne	1b414 <lchmod@@Base+0x2670>
   1b3f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b3f8:	cmp	r3, #0
   1b3fc:	beq	1b414 <lchmod@@Base+0x2670>
   1b400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b404:	str	r3, [fp, #-92]	; 0xffffffa4
   1b408:	mov	r3, #0
   1b40c:	str	r3, [fp, #-20]	; 0xffffffec
   1b410:	b	19f48 <lchmod@@Base+0x11a4>
   1b414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b418:	cmp	r3, #0
   1b41c:	beq	1b488 <lchmod@@Base+0x26e4>
   1b420:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1b424:	eor	r3, r3, #1
   1b428:	uxtb	r3, r3
   1b42c:	cmp	r3, #0
   1b430:	beq	1b488 <lchmod@@Base+0x26e4>
   1b434:	b	1b478 <lchmod@@Base+0x26d4>
   1b438:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b43c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b440:	cmp	r2, r3
   1b444:	bcs	1b460 <lchmod@@Base+0x26bc>
   1b448:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b44c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b450:	add	r3, r2, r3
   1b454:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b458:	ldrb	r2, [r2]
   1b45c:	strb	r2, [r3]
   1b460:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b464:	add	r3, r3, #1
   1b468:	str	r3, [fp, #-20]	; 0xffffffec
   1b46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b470:	add	r3, r3, #1
   1b474:	str	r3, [fp, #-28]	; 0xffffffe4
   1b478:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b47c:	ldrb	r3, [r3]
   1b480:	cmp	r3, #0
   1b484:	bne	1b438 <lchmod@@Base+0x2694>
   1b488:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b48c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b490:	cmp	r2, r3
   1b494:	bcs	1b4ac <lchmod@@Base+0x2708>
   1b498:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b49c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4a0:	add	r3, r2, r3
   1b4a4:	mov	r2, #0
   1b4a8:	strb	r2, [r3]
   1b4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4b0:	b	1b55c <lchmod@@Base+0x27b8>
   1b4b4:	nop			; (mov r0, r0)
   1b4b8:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4bc:	nop			; (mov r0, r0)
   1b4c0:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4c4:	nop			; (mov r0, r0)
   1b4c8:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4cc:	nop			; (mov r0, r0)
   1b4d0:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4d4:	nop			; (mov r0, r0)
   1b4d8:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4dc:	nop			; (mov r0, r0)
   1b4e0:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4e4:	nop			; (mov r0, r0)
   1b4e8:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4ec:	nop			; (mov r0, r0)
   1b4f0:	b	1b4f8 <lchmod@@Base+0x2754>
   1b4f4:	nop			; (mov r0, r0)
   1b4f8:	ldr	r3, [fp, #4]
   1b4fc:	cmp	r3, #2
   1b500:	bne	1b518 <lchmod@@Base+0x2774>
   1b504:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1b508:	cmp	r3, #0
   1b50c:	beq	1b518 <lchmod@@Base+0x2774>
   1b510:	mov	r3, #4
   1b514:	str	r3, [fp, #4]
   1b518:	ldr	r3, [fp, #8]
   1b51c:	bic	r3, r3, #2
   1b520:	ldr	r2, [fp, #20]
   1b524:	str	r2, [sp, #16]
   1b528:	ldr	r2, [fp, #16]
   1b52c:	str	r2, [sp, #12]
   1b530:	mov	r2, #0
   1b534:	str	r2, [sp, #8]
   1b538:	str	r3, [sp, #4]
   1b53c:	ldr	r3, [fp, #4]
   1b540:	str	r3, [sp]
   1b544:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b548:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b54c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1b550:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1b554:	bl	19ebc <lchmod@@Base+0x1118>
   1b558:	mov	r3, r0
   1b55c:	mov	r0, r3
   1b560:	sub	sp, fp, #8
   1b564:	pop	{r4, fp, pc}
   1b568:	push	{fp, lr}
   1b56c:	add	fp, sp, #4
   1b570:	sub	sp, sp, #56	; 0x38
   1b574:	str	r0, [fp, #-24]	; 0xffffffe8
   1b578:	str	r1, [fp, #-28]	; 0xffffffe4
   1b57c:	str	r2, [fp, #-32]	; 0xffffffe0
   1b580:	str	r3, [fp, #-36]	; 0xffffffdc
   1b584:	ldr	r3, [fp, #4]
   1b588:	cmp	r3, #0
   1b58c:	beq	1b598 <lchmod@@Base+0x27f4>
   1b590:	ldr	r3, [fp, #4]
   1b594:	b	1b59c <lchmod@@Base+0x27f8>
   1b598:	ldr	r3, [pc, #132]	; 1b624 <lchmod@@Base+0x2880>
   1b59c:	str	r3, [fp, #-8]
   1b5a0:	bl	116c0 <__errno_location@plt>
   1b5a4:	mov	r3, r0
   1b5a8:	ldr	r3, [r3]
   1b5ac:	str	r3, [fp, #-12]
   1b5b0:	ldr	r3, [fp, #-8]
   1b5b4:	ldr	r3, [r3]
   1b5b8:	ldr	r2, [fp, #-8]
   1b5bc:	ldr	r2, [r2, #4]
   1b5c0:	ldr	r1, [fp, #-8]
   1b5c4:	add	r1, r1, #8
   1b5c8:	ldr	r0, [fp, #-8]
   1b5cc:	ldr	r0, [r0, #40]	; 0x28
   1b5d0:	ldr	ip, [fp, #-8]
   1b5d4:	ldr	ip, [ip, #44]	; 0x2c
   1b5d8:	str	ip, [sp, #16]
   1b5dc:	str	r0, [sp, #12]
   1b5e0:	str	r1, [sp, #8]
   1b5e4:	str	r2, [sp, #4]
   1b5e8:	str	r3, [sp]
   1b5ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b5f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b5f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5fc:	bl	19ebc <lchmod@@Base+0x1118>
   1b600:	str	r0, [fp, #-16]
   1b604:	bl	116c0 <__errno_location@plt>
   1b608:	mov	r2, r0
   1b60c:	ldr	r3, [fp, #-12]
   1b610:	str	r3, [r2]
   1b614:	ldr	r3, [fp, #-16]
   1b618:	mov	r0, r3
   1b61c:	sub	sp, fp, #4
   1b620:	pop	{fp, pc}
   1b624:	strdeq	r1, [r3], -r4
   1b628:	push	{fp, lr}
   1b62c:	add	fp, sp, #4
   1b630:	sub	sp, sp, #16
   1b634:	str	r0, [fp, #-8]
   1b638:	str	r1, [fp, #-12]
   1b63c:	str	r2, [fp, #-16]
   1b640:	ldr	r3, [fp, #-16]
   1b644:	mov	r2, #0
   1b648:	ldr	r1, [fp, #-12]
   1b64c:	ldr	r0, [fp, #-8]
   1b650:	bl	1b664 <lchmod@@Base+0x28c0>
   1b654:	mov	r3, r0
   1b658:	mov	r0, r3
   1b65c:	sub	sp, fp, #4
   1b660:	pop	{fp, pc}
   1b664:	push	{fp, lr}
   1b668:	add	fp, sp, #4
   1b66c:	sub	sp, sp, #64	; 0x40
   1b670:	str	r0, [fp, #-32]	; 0xffffffe0
   1b674:	str	r1, [fp, #-36]	; 0xffffffdc
   1b678:	str	r2, [fp, #-40]	; 0xffffffd8
   1b67c:	str	r3, [fp, #-44]	; 0xffffffd4
   1b680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b684:	cmp	r3, #0
   1b688:	beq	1b694 <lchmod@@Base+0x28f0>
   1b68c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b690:	b	1b698 <lchmod@@Base+0x28f4>
   1b694:	ldr	r3, [pc, #292]	; 1b7c0 <lchmod@@Base+0x2a1c>
   1b698:	str	r3, [fp, #-8]
   1b69c:	bl	116c0 <__errno_location@plt>
   1b6a0:	mov	r3, r0
   1b6a4:	ldr	r3, [r3]
   1b6a8:	str	r3, [fp, #-12]
   1b6ac:	ldr	r3, [fp, #-8]
   1b6b0:	ldr	r3, [r3, #4]
   1b6b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6b8:	cmp	r2, #0
   1b6bc:	moveq	r2, #1
   1b6c0:	movne	r2, #0
   1b6c4:	uxtb	r2, r2
   1b6c8:	orr	r3, r3, r2
   1b6cc:	str	r3, [fp, #-16]
   1b6d0:	ldr	r3, [fp, #-8]
   1b6d4:	ldr	r3, [r3]
   1b6d8:	ldr	r2, [fp, #-8]
   1b6dc:	add	r2, r2, #8
   1b6e0:	ldr	r1, [fp, #-8]
   1b6e4:	ldr	r1, [r1, #40]	; 0x28
   1b6e8:	ldr	r0, [fp, #-8]
   1b6ec:	ldr	r0, [r0, #44]	; 0x2c
   1b6f0:	str	r0, [sp, #16]
   1b6f4:	str	r1, [sp, #12]
   1b6f8:	str	r2, [sp, #8]
   1b6fc:	ldr	r2, [fp, #-16]
   1b700:	str	r2, [sp, #4]
   1b704:	str	r3, [sp]
   1b708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b70c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b710:	mov	r1, #0
   1b714:	mov	r0, #0
   1b718:	bl	19ebc <lchmod@@Base+0x1118>
   1b71c:	mov	r3, r0
   1b720:	add	r3, r3, #1
   1b724:	str	r3, [fp, #-20]	; 0xffffffec
   1b728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b72c:	bl	1cea4 <lchmod@@Base+0x4100>
   1b730:	mov	r3, r0
   1b734:	str	r3, [fp, #-24]	; 0xffffffe8
   1b738:	ldr	r3, [fp, #-8]
   1b73c:	ldr	r3, [r3]
   1b740:	ldr	r2, [fp, #-8]
   1b744:	add	r2, r2, #8
   1b748:	ldr	r1, [fp, #-8]
   1b74c:	ldr	r1, [r1, #40]	; 0x28
   1b750:	ldr	r0, [fp, #-8]
   1b754:	ldr	r0, [r0, #44]	; 0x2c
   1b758:	str	r0, [sp, #16]
   1b75c:	str	r1, [sp, #12]
   1b760:	str	r2, [sp, #8]
   1b764:	ldr	r2, [fp, #-16]
   1b768:	str	r2, [sp, #4]
   1b76c:	str	r3, [sp]
   1b770:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b774:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b778:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b780:	bl	19ebc <lchmod@@Base+0x1118>
   1b784:	bl	116c0 <__errno_location@plt>
   1b788:	mov	r2, r0
   1b78c:	ldr	r3, [fp, #-12]
   1b790:	str	r3, [r2]
   1b794:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b798:	cmp	r3, #0
   1b79c:	beq	1b7b0 <lchmod@@Base+0x2a0c>
   1b7a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b7a4:	sub	r2, r3, #1
   1b7a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b7ac:	str	r2, [r3]
   1b7b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7b4:	mov	r0, r3
   1b7b8:	sub	sp, fp, #4
   1b7bc:	pop	{fp, pc}
   1b7c0:	strdeq	r1, [r3], -r4
   1b7c4:	push	{fp, lr}
   1b7c8:	add	fp, sp, #4
   1b7cc:	sub	sp, sp, #8
   1b7d0:	ldr	r3, [pc, #196]	; 1b89c <lchmod@@Base+0x2af8>
   1b7d4:	ldr	r3, [r3]
   1b7d8:	str	r3, [fp, #-12]
   1b7dc:	mov	r3, #1
   1b7e0:	str	r3, [fp, #-8]
   1b7e4:	b	1b810 <lchmod@@Base+0x2a6c>
   1b7e8:	ldr	r3, [fp, #-8]
   1b7ec:	lsl	r3, r3, #3
   1b7f0:	ldr	r2, [fp, #-12]
   1b7f4:	add	r3, r2, r3
   1b7f8:	ldr	r3, [r3, #4]
   1b7fc:	mov	r0, r3
   1b800:	bl	13c50 <__assert_fail@plt+0x2404>
   1b804:	ldr	r3, [fp, #-8]
   1b808:	add	r3, r3, #1
   1b80c:	str	r3, [fp, #-8]
   1b810:	ldr	r3, [pc, #136]	; 1b8a0 <lchmod@@Base+0x2afc>
   1b814:	ldr	r3, [r3]
   1b818:	ldr	r2, [fp, #-8]
   1b81c:	cmp	r2, r3
   1b820:	blt	1b7e8 <lchmod@@Base+0x2a44>
   1b824:	ldr	r3, [fp, #-12]
   1b828:	ldr	r3, [r3, #4]
   1b82c:	ldr	r2, [pc, #112]	; 1b8a4 <lchmod@@Base+0x2b00>
   1b830:	cmp	r3, r2
   1b834:	beq	1b860 <lchmod@@Base+0x2abc>
   1b838:	ldr	r3, [fp, #-12]
   1b83c:	ldr	r3, [r3, #4]
   1b840:	mov	r0, r3
   1b844:	bl	13c50 <__assert_fail@plt+0x2404>
   1b848:	ldr	r3, [pc, #88]	; 1b8a8 <lchmod@@Base+0x2b04>
   1b84c:	mov	r2, #256	; 0x100
   1b850:	str	r2, [r3]
   1b854:	ldr	r3, [pc, #76]	; 1b8a8 <lchmod@@Base+0x2b04>
   1b858:	ldr	r2, [pc, #68]	; 1b8a4 <lchmod@@Base+0x2b00>
   1b85c:	str	r2, [r3, #4]
   1b860:	ldr	r3, [fp, #-12]
   1b864:	ldr	r2, [pc, #60]	; 1b8a8 <lchmod@@Base+0x2b04>
   1b868:	cmp	r3, r2
   1b86c:	beq	1b884 <lchmod@@Base+0x2ae0>
   1b870:	ldr	r0, [fp, #-12]
   1b874:	bl	13c50 <__assert_fail@plt+0x2404>
   1b878:	ldr	r3, [pc, #28]	; 1b89c <lchmod@@Base+0x2af8>
   1b87c:	ldr	r2, [pc, #36]	; 1b8a8 <lchmod@@Base+0x2b04>
   1b880:	str	r2, [r3]
   1b884:	ldr	r3, [pc, #20]	; 1b8a0 <lchmod@@Base+0x2afc>
   1b888:	mov	r2, #1
   1b88c:	str	r2, [r3]
   1b890:	nop			; (mov r0, r0)
   1b894:	sub	sp, fp, #4
   1b898:	pop	{fp, pc}
   1b89c:	muleq	r3, r4, r1
   1b8a0:	andeq	r1, r3, r8, lsl #3
   1b8a4:	andeq	r1, r3, r4, lsr #4
   1b8a8:	andeq	r1, r3, ip, lsl #3
   1b8ac:	push	{r4, fp, lr}
   1b8b0:	add	fp, sp, #8
   1b8b4:	sub	sp, sp, #84	; 0x54
   1b8b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b8bc:	str	r1, [fp, #-60]	; 0xffffffc4
   1b8c0:	str	r2, [fp, #-64]	; 0xffffffc0
   1b8c4:	str	r3, [fp, #-68]	; 0xffffffbc
   1b8c8:	bl	116c0 <__errno_location@plt>
   1b8cc:	mov	r3, r0
   1b8d0:	ldr	r3, [r3]
   1b8d4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b8d8:	ldr	r3, [pc, #640]	; 1bb60 <lchmod@@Base+0x2dbc>
   1b8dc:	ldr	r3, [r3]
   1b8e0:	str	r3, [fp, #-16]
   1b8e4:	mvn	r3, #-2147483648	; 0x80000000
   1b8e8:	str	r3, [fp, #-28]	; 0xffffffe4
   1b8ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b8f0:	cmp	r3, #0
   1b8f4:	blt	1b908 <lchmod@@Base+0x2b64>
   1b8f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b8fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b900:	cmp	r2, r3
   1b904:	blt	1b90c <lchmod@@Base+0x2b68>
   1b908:	bl	117f8 <abort@plt>
   1b90c:	ldr	r3, [pc, #592]	; 1bb64 <lchmod@@Base+0x2dc0>
   1b910:	ldr	r2, [r3]
   1b914:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b918:	cmp	r2, r3
   1b91c:	bgt	1b9f0 <lchmod@@Base+0x2c4c>
   1b920:	ldr	r3, [fp, #-16]
   1b924:	ldr	r2, [pc, #572]	; 1bb68 <lchmod@@Base+0x2dc4>
   1b928:	cmp	r3, r2
   1b92c:	moveq	r3, #1
   1b930:	movne	r3, #0
   1b934:	strb	r3, [fp, #-29]	; 0xffffffe3
   1b938:	ldr	r3, [pc, #548]	; 1bb64 <lchmod@@Base+0x2dc0>
   1b93c:	ldr	r3, [r3]
   1b940:	str	r3, [fp, #-48]	; 0xffffffd0
   1b944:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1b948:	cmp	r3, #0
   1b94c:	beq	1b958 <lchmod@@Base+0x2bb4>
   1b950:	mov	r0, #0
   1b954:	b	1b95c <lchmod@@Base+0x2bb8>
   1b958:	ldr	r0, [fp, #-16]
   1b95c:	ldr	r3, [pc, #512]	; 1bb64 <lchmod@@Base+0x2dc0>
   1b960:	ldr	r3, [r3]
   1b964:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b968:	sub	r3, r2, r3
   1b96c:	add	r2, r3, #1
   1b970:	sub	r1, fp, #48	; 0x30
   1b974:	mov	r3, #8
   1b978:	str	r3, [sp]
   1b97c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b980:	bl	1d1c4 <lchmod@@Base+0x4420>
   1b984:	str	r0, [fp, #-16]
   1b988:	ldr	r2, [pc, #464]	; 1bb60 <lchmod@@Base+0x2dbc>
   1b98c:	ldr	r3, [fp, #-16]
   1b990:	str	r3, [r2]
   1b994:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1b998:	cmp	r3, #0
   1b99c:	beq	1b9b0 <lchmod@@Base+0x2c0c>
   1b9a0:	ldr	r3, [fp, #-16]
   1b9a4:	ldr	r2, [pc, #444]	; 1bb68 <lchmod@@Base+0x2dc4>
   1b9a8:	ldm	r2, {r0, r1}
   1b9ac:	stm	r3, {r0, r1}
   1b9b0:	ldr	r3, [pc, #428]	; 1bb64 <lchmod@@Base+0x2dc0>
   1b9b4:	ldr	r3, [r3]
   1b9b8:	lsl	r3, r3, #3
   1b9bc:	ldr	r2, [fp, #-16]
   1b9c0:	add	r0, r2, r3
   1b9c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b9c8:	ldr	r3, [pc, #404]	; 1bb64 <lchmod@@Base+0x2dc0>
   1b9cc:	ldr	r3, [r3]
   1b9d0:	sub	r3, r2, r3
   1b9d4:	lsl	r3, r3, #3
   1b9d8:	mov	r2, r3
   1b9dc:	mov	r1, #0
   1b9e0:	bl	116d8 <memset@plt>
   1b9e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b9e8:	ldr	r2, [pc, #372]	; 1bb64 <lchmod@@Base+0x2dc0>
   1b9ec:	str	r3, [r2]
   1b9f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b9f4:	lsl	r3, r3, #3
   1b9f8:	ldr	r2, [fp, #-16]
   1b9fc:	add	r3, r2, r3
   1ba00:	ldr	r3, [r3]
   1ba04:	str	r3, [fp, #-36]	; 0xffffffdc
   1ba08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ba0c:	lsl	r3, r3, #3
   1ba10:	ldr	r2, [fp, #-16]
   1ba14:	add	r3, r2, r3
   1ba18:	ldr	r3, [r3, #4]
   1ba1c:	str	r3, [fp, #-20]	; 0xffffffec
   1ba20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ba24:	ldr	r3, [r3, #4]
   1ba28:	orr	r3, r3, #1
   1ba2c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ba30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ba34:	ldr	r3, [r3]
   1ba38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ba3c:	add	r2, r2, #8
   1ba40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ba44:	ldr	r1, [r1, #40]	; 0x28
   1ba48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ba4c:	ldr	r0, [r0, #44]	; 0x2c
   1ba50:	str	r0, [sp, #16]
   1ba54:	str	r1, [sp, #12]
   1ba58:	str	r2, [sp, #8]
   1ba5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ba60:	str	r2, [sp, #4]
   1ba64:	str	r3, [sp]
   1ba68:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ba6c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ba70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ba74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba78:	bl	19ebc <lchmod@@Base+0x1118>
   1ba7c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba88:	cmp	r2, r3
   1ba8c:	bhi	1bb40 <lchmod@@Base+0x2d9c>
   1ba90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ba94:	lsl	r3, r3, #3
   1ba98:	ldr	r2, [fp, #-16]
   1ba9c:	add	r3, r2, r3
   1baa0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1baa4:	add	r2, r2, #1
   1baa8:	str	r2, [fp, #-36]	; 0xffffffdc
   1baac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bab0:	str	r2, [r3]
   1bab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bab8:	ldr	r2, [pc, #172]	; 1bb6c <lchmod@@Base+0x2dc8>
   1babc:	cmp	r3, r2
   1bac0:	beq	1bacc <lchmod@@Base+0x2d28>
   1bac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bac8:	bl	13c50 <__assert_fail@plt+0x2404>
   1bacc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bad0:	lsl	r3, r3, #3
   1bad4:	ldr	r2, [fp, #-16]
   1bad8:	add	r4, r2, r3
   1badc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bae0:	bl	1cea4 <lchmod@@Base+0x4100>
   1bae4:	mov	r3, r0
   1bae8:	str	r3, [fp, #-20]	; 0xffffffec
   1baec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1baf0:	str	r3, [r4, #4]
   1baf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1baf8:	ldr	r3, [r3]
   1bafc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1bb00:	add	r2, r2, #8
   1bb04:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1bb08:	ldr	r1, [r1, #40]	; 0x28
   1bb0c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1bb10:	ldr	r0, [r0, #44]	; 0x2c
   1bb14:	str	r0, [sp, #16]
   1bb18:	str	r1, [sp, #12]
   1bb1c:	str	r2, [sp, #8]
   1bb20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bb24:	str	r2, [sp, #4]
   1bb28:	str	r3, [sp]
   1bb2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1bb30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1bb34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bb38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb3c:	bl	19ebc <lchmod@@Base+0x1118>
   1bb40:	bl	116c0 <__errno_location@plt>
   1bb44:	mov	r2, r0
   1bb48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb4c:	str	r3, [r2]
   1bb50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bb54:	mov	r0, r3
   1bb58:	sub	sp, fp, #8
   1bb5c:	pop	{r4, fp, pc}
   1bb60:	muleq	r3, r4, r1
   1bb64:	andeq	r1, r3, r8, lsl #3
   1bb68:	andeq	r1, r3, ip, lsl #3
   1bb6c:	andeq	r1, r3, r4, lsr #4
   1bb70:	push	{fp, lr}
   1bb74:	add	fp, sp, #4
   1bb78:	sub	sp, sp, #8
   1bb7c:	str	r0, [fp, #-8]
   1bb80:	str	r1, [fp, #-12]
   1bb84:	ldr	r3, [pc, #28]	; 1bba8 <lchmod@@Base+0x2e04>
   1bb88:	mvn	r2, #0
   1bb8c:	ldr	r1, [fp, #-12]
   1bb90:	ldr	r0, [fp, #-8]
   1bb94:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bb98:	mov	r3, r0
   1bb9c:	mov	r0, r3
   1bba0:	sub	sp, fp, #4
   1bba4:	pop	{fp, pc}
   1bba8:	strdeq	r1, [r3], -r4
   1bbac:	push	{fp, lr}
   1bbb0:	add	fp, sp, #4
   1bbb4:	sub	sp, sp, #16
   1bbb8:	str	r0, [fp, #-8]
   1bbbc:	str	r1, [fp, #-12]
   1bbc0:	str	r2, [fp, #-16]
   1bbc4:	ldr	r3, [pc, #28]	; 1bbe8 <lchmod@@Base+0x2e44>
   1bbc8:	ldr	r2, [fp, #-16]
   1bbcc:	ldr	r1, [fp, #-12]
   1bbd0:	ldr	r0, [fp, #-8]
   1bbd4:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bbd8:	mov	r3, r0
   1bbdc:	mov	r0, r3
   1bbe0:	sub	sp, fp, #4
   1bbe4:	pop	{fp, pc}
   1bbe8:	strdeq	r1, [r3], -r4
   1bbec:	push	{fp, lr}
   1bbf0:	add	fp, sp, #4
   1bbf4:	sub	sp, sp, #8
   1bbf8:	str	r0, [fp, #-8]
   1bbfc:	ldr	r1, [fp, #-8]
   1bc00:	mov	r0, #0
   1bc04:	bl	1bb70 <lchmod@@Base+0x2dcc>
   1bc08:	mov	r3, r0
   1bc0c:	mov	r0, r3
   1bc10:	sub	sp, fp, #4
   1bc14:	pop	{fp, pc}
   1bc18:	push	{fp, lr}
   1bc1c:	add	fp, sp, #4
   1bc20:	sub	sp, sp, #8
   1bc24:	str	r0, [fp, #-8]
   1bc28:	str	r1, [fp, #-12]
   1bc2c:	ldr	r2, [fp, #-12]
   1bc30:	ldr	r1, [fp, #-8]
   1bc34:	mov	r0, #0
   1bc38:	bl	1bbac <lchmod@@Base+0x2e08>
   1bc3c:	mov	r3, r0
   1bc40:	mov	r0, r3
   1bc44:	sub	sp, fp, #4
   1bc48:	pop	{fp, pc}
   1bc4c:	push	{fp, lr}
   1bc50:	add	fp, sp, #4
   1bc54:	sub	sp, sp, #64	; 0x40
   1bc58:	str	r0, [fp, #-56]	; 0xffffffc8
   1bc5c:	str	r1, [fp, #-60]	; 0xffffffc4
   1bc60:	str	r2, [fp, #-64]	; 0xffffffc0
   1bc64:	sub	r3, fp, #52	; 0x34
   1bc68:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bc6c:	mov	r0, r3
   1bc70:	bl	19d58 <lchmod@@Base+0xfb4>
   1bc74:	sub	r3, fp, #52	; 0x34
   1bc78:	mvn	r2, #0
   1bc7c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bc80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bc84:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bc88:	mov	r3, r0
   1bc8c:	mov	r0, r3
   1bc90:	sub	sp, fp, #4
   1bc94:	pop	{fp, pc}
   1bc98:	push	{fp, lr}
   1bc9c:	add	fp, sp, #4
   1bca0:	sub	sp, sp, #64	; 0x40
   1bca4:	str	r0, [fp, #-56]	; 0xffffffc8
   1bca8:	str	r1, [fp, #-60]	; 0xffffffc4
   1bcac:	str	r2, [fp, #-64]	; 0xffffffc0
   1bcb0:	str	r3, [fp, #-68]	; 0xffffffbc
   1bcb4:	sub	r3, fp, #52	; 0x34
   1bcb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bcbc:	mov	r0, r3
   1bcc0:	bl	19d58 <lchmod@@Base+0xfb4>
   1bcc4:	sub	r3, fp, #52	; 0x34
   1bcc8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1bccc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bcd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bcd4:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bcd8:	mov	r3, r0
   1bcdc:	mov	r0, r3
   1bce0:	sub	sp, fp, #4
   1bce4:	pop	{fp, pc}
   1bce8:	push	{fp, lr}
   1bcec:	add	fp, sp, #4
   1bcf0:	sub	sp, sp, #8
   1bcf4:	str	r0, [fp, #-8]
   1bcf8:	str	r1, [fp, #-12]
   1bcfc:	ldr	r2, [fp, #-12]
   1bd00:	ldr	r1, [fp, #-8]
   1bd04:	mov	r0, #0
   1bd08:	bl	1bc4c <lchmod@@Base+0x2ea8>
   1bd0c:	mov	r3, r0
   1bd10:	mov	r0, r3
   1bd14:	sub	sp, fp, #4
   1bd18:	pop	{fp, pc}
   1bd1c:	push	{fp, lr}
   1bd20:	add	fp, sp, #4
   1bd24:	sub	sp, sp, #16
   1bd28:	str	r0, [fp, #-8]
   1bd2c:	str	r1, [fp, #-12]
   1bd30:	str	r2, [fp, #-16]
   1bd34:	ldr	r3, [fp, #-16]
   1bd38:	ldr	r2, [fp, #-12]
   1bd3c:	ldr	r1, [fp, #-8]
   1bd40:	mov	r0, #0
   1bd44:	bl	1bc98 <lchmod@@Base+0x2ef4>
   1bd48:	mov	r3, r0
   1bd4c:	mov	r0, r3
   1bd50:	sub	sp, fp, #4
   1bd54:	pop	{fp, pc}
   1bd58:	push	{fp, lr}
   1bd5c:	add	fp, sp, #4
   1bd60:	sub	sp, sp, #64	; 0x40
   1bd64:	str	r0, [fp, #-56]	; 0xffffffc8
   1bd68:	str	r1, [fp, #-60]	; 0xffffffc4
   1bd6c:	mov	r3, r2
   1bd70:	strb	r3, [fp, #-61]	; 0xffffffc3
   1bd74:	ldr	r3, [pc, #84]	; 1bdd0 <lchmod@@Base+0x302c>
   1bd78:	sub	ip, fp, #52	; 0x34
   1bd7c:	mov	lr, r3
   1bd80:	ldm	lr!, {r0, r1, r2, r3}
   1bd84:	stmia	ip!, {r0, r1, r2, r3}
   1bd88:	ldm	lr!, {r0, r1, r2, r3}
   1bd8c:	stmia	ip!, {r0, r1, r2, r3}
   1bd90:	ldm	lr, {r0, r1, r2, r3}
   1bd94:	stm	ip, {r0, r1, r2, r3}
   1bd98:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1bd9c:	sub	r3, fp, #52	; 0x34
   1bda0:	mov	r2, #1
   1bda4:	mov	r0, r3
   1bda8:	bl	19bc4 <lchmod@@Base+0xe20>
   1bdac:	sub	r3, fp, #52	; 0x34
   1bdb0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1bdb4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1bdb8:	mov	r0, #0
   1bdbc:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bdc0:	mov	r3, r0
   1bdc4:	mov	r0, r3
   1bdc8:	sub	sp, fp, #4
   1bdcc:	pop	{fp, pc}
   1bdd0:	strdeq	r1, [r3], -r4
   1bdd4:	push	{fp, lr}
   1bdd8:	add	fp, sp, #4
   1bddc:	sub	sp, sp, #8
   1bde0:	str	r0, [fp, #-8]
   1bde4:	mov	r3, r1
   1bde8:	strb	r3, [fp, #-9]
   1bdec:	ldrb	r3, [fp, #-9]
   1bdf0:	mov	r2, r3
   1bdf4:	mvn	r1, #0
   1bdf8:	ldr	r0, [fp, #-8]
   1bdfc:	bl	1bd58 <lchmod@@Base+0x2fb4>
   1be00:	mov	r3, r0
   1be04:	mov	r0, r3
   1be08:	sub	sp, fp, #4
   1be0c:	pop	{fp, pc}
   1be10:	push	{fp, lr}
   1be14:	add	fp, sp, #4
   1be18:	sub	sp, sp, #8
   1be1c:	str	r0, [fp, #-8]
   1be20:	mov	r1, #58	; 0x3a
   1be24:	ldr	r0, [fp, #-8]
   1be28:	bl	1bdd4 <lchmod@@Base+0x3030>
   1be2c:	mov	r3, r0
   1be30:	mov	r0, r3
   1be34:	sub	sp, fp, #4
   1be38:	pop	{fp, pc}
   1be3c:	push	{fp, lr}
   1be40:	add	fp, sp, #4
   1be44:	sub	sp, sp, #8
   1be48:	str	r0, [fp, #-8]
   1be4c:	str	r1, [fp, #-12]
   1be50:	mov	r2, #58	; 0x3a
   1be54:	ldr	r1, [fp, #-12]
   1be58:	ldr	r0, [fp, #-8]
   1be5c:	bl	1bd58 <lchmod@@Base+0x2fb4>
   1be60:	mov	r3, r0
   1be64:	mov	r0, r3
   1be68:	sub	sp, fp, #4
   1be6c:	pop	{fp, pc}
   1be70:	push	{fp, lr}
   1be74:	add	fp, sp, #4
   1be78:	sub	sp, sp, #112	; 0x70
   1be7c:	str	r0, [fp, #-56]	; 0xffffffc8
   1be80:	str	r1, [fp, #-60]	; 0xffffffc4
   1be84:	str	r2, [fp, #-64]	; 0xffffffc0
   1be88:	sub	r3, fp, #116	; 0x74
   1be8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1be90:	mov	r0, r3
   1be94:	bl	19d58 <lchmod@@Base+0xfb4>
   1be98:	sub	ip, fp, #52	; 0x34
   1be9c:	sub	lr, fp, #116	; 0x74
   1bea0:	ldm	lr!, {r0, r1, r2, r3}
   1bea4:	stmia	ip!, {r0, r1, r2, r3}
   1bea8:	ldm	lr!, {r0, r1, r2, r3}
   1beac:	stmia	ip!, {r0, r1, r2, r3}
   1beb0:	ldm	lr, {r0, r1, r2, r3}
   1beb4:	stm	ip, {r0, r1, r2, r3}
   1beb8:	sub	r3, fp, #52	; 0x34
   1bebc:	mov	r2, #1
   1bec0:	mov	r1, #58	; 0x3a
   1bec4:	mov	r0, r3
   1bec8:	bl	19bc4 <lchmod@@Base+0xe20>
   1becc:	sub	r3, fp, #52	; 0x34
   1bed0:	mvn	r2, #0
   1bed4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bed8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bedc:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bee0:	mov	r3, r0
   1bee4:	mov	r0, r3
   1bee8:	sub	sp, fp, #4
   1beec:	pop	{fp, pc}
   1bef0:	push	{fp, lr}
   1bef4:	add	fp, sp, #4
   1bef8:	sub	sp, sp, #24
   1befc:	str	r0, [fp, #-8]
   1bf00:	str	r1, [fp, #-12]
   1bf04:	str	r2, [fp, #-16]
   1bf08:	str	r3, [fp, #-20]	; 0xffffffec
   1bf0c:	mvn	r3, #0
   1bf10:	str	r3, [sp]
   1bf14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf18:	ldr	r2, [fp, #-16]
   1bf1c:	ldr	r1, [fp, #-12]
   1bf20:	ldr	r0, [fp, #-8]
   1bf24:	bl	1bf38 <lchmod@@Base+0x3194>
   1bf28:	mov	r3, r0
   1bf2c:	mov	r0, r3
   1bf30:	sub	sp, fp, #4
   1bf34:	pop	{fp, pc}
   1bf38:	push	{fp, lr}
   1bf3c:	add	fp, sp, #4
   1bf40:	sub	sp, sp, #64	; 0x40
   1bf44:	str	r0, [fp, #-56]	; 0xffffffc8
   1bf48:	str	r1, [fp, #-60]	; 0xffffffc4
   1bf4c:	str	r2, [fp, #-64]	; 0xffffffc0
   1bf50:	str	r3, [fp, #-68]	; 0xffffffbc
   1bf54:	ldr	r3, [pc, #84]	; 1bfb0 <lchmod@@Base+0x320c>
   1bf58:	sub	ip, fp, #52	; 0x34
   1bf5c:	mov	lr, r3
   1bf60:	ldm	lr!, {r0, r1, r2, r3}
   1bf64:	stmia	ip!, {r0, r1, r2, r3}
   1bf68:	ldm	lr!, {r0, r1, r2, r3}
   1bf6c:	stmia	ip!, {r0, r1, r2, r3}
   1bf70:	ldm	lr, {r0, r1, r2, r3}
   1bf74:	stm	ip, {r0, r1, r2, r3}
   1bf78:	sub	r3, fp, #52	; 0x34
   1bf7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bf80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1bf84:	mov	r0, r3
   1bf88:	bl	19cdc <lchmod@@Base+0xf38>
   1bf8c:	sub	r3, fp, #52	; 0x34
   1bf90:	ldr	r2, [fp, #4]
   1bf94:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1bf98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bf9c:	bl	1b8ac <lchmod@@Base+0x2b08>
   1bfa0:	mov	r3, r0
   1bfa4:	mov	r0, r3
   1bfa8:	sub	sp, fp, #4
   1bfac:	pop	{fp, pc}
   1bfb0:	strdeq	r1, [r3], -r4
   1bfb4:	push	{fp, lr}
   1bfb8:	add	fp, sp, #4
   1bfbc:	sub	sp, sp, #16
   1bfc0:	str	r0, [fp, #-8]
   1bfc4:	str	r1, [fp, #-12]
   1bfc8:	str	r2, [fp, #-16]
   1bfcc:	ldr	r3, [fp, #-16]
   1bfd0:	ldr	r2, [fp, #-12]
   1bfd4:	ldr	r1, [fp, #-8]
   1bfd8:	mov	r0, #0
   1bfdc:	bl	1bef0 <lchmod@@Base+0x314c>
   1bfe0:	mov	r3, r0
   1bfe4:	mov	r0, r3
   1bfe8:	sub	sp, fp, #4
   1bfec:	pop	{fp, pc}
   1bff0:	push	{fp, lr}
   1bff4:	add	fp, sp, #4
   1bff8:	sub	sp, sp, #24
   1bffc:	str	r0, [fp, #-8]
   1c000:	str	r1, [fp, #-12]
   1c004:	str	r2, [fp, #-16]
   1c008:	str	r3, [fp, #-20]	; 0xffffffec
   1c00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c010:	str	r3, [sp]
   1c014:	ldr	r3, [fp, #-16]
   1c018:	ldr	r2, [fp, #-12]
   1c01c:	ldr	r1, [fp, #-8]
   1c020:	mov	r0, #0
   1c024:	bl	1bf38 <lchmod@@Base+0x3194>
   1c028:	mov	r3, r0
   1c02c:	mov	r0, r3
   1c030:	sub	sp, fp, #4
   1c034:	pop	{fp, pc}
   1c038:	push	{fp, lr}
   1c03c:	add	fp, sp, #4
   1c040:	sub	sp, sp, #16
   1c044:	str	r0, [fp, #-8]
   1c048:	str	r1, [fp, #-12]
   1c04c:	str	r2, [fp, #-16]
   1c050:	ldr	r3, [pc, #28]	; 1c074 <lchmod@@Base+0x32d0>
   1c054:	ldr	r2, [fp, #-16]
   1c058:	ldr	r1, [fp, #-12]
   1c05c:	ldr	r0, [fp, #-8]
   1c060:	bl	1b8ac <lchmod@@Base+0x2b08>
   1c064:	mov	r3, r0
   1c068:	mov	r0, r3
   1c06c:	sub	sp, fp, #4
   1c070:	pop	{fp, pc}
   1c074:	muleq	r3, r8, r1
   1c078:	push	{fp, lr}
   1c07c:	add	fp, sp, #4
   1c080:	sub	sp, sp, #8
   1c084:	str	r0, [fp, #-8]
   1c088:	str	r1, [fp, #-12]
   1c08c:	ldr	r2, [fp, #-12]
   1c090:	ldr	r1, [fp, #-8]
   1c094:	mov	r0, #0
   1c098:	bl	1c038 <lchmod@@Base+0x3294>
   1c09c:	mov	r3, r0
   1c0a0:	mov	r0, r3
   1c0a4:	sub	sp, fp, #4
   1c0a8:	pop	{fp, pc}
   1c0ac:	push	{fp, lr}
   1c0b0:	add	fp, sp, #4
   1c0b4:	sub	sp, sp, #8
   1c0b8:	str	r0, [fp, #-8]
   1c0bc:	str	r1, [fp, #-12]
   1c0c0:	mvn	r2, #0
   1c0c4:	ldr	r1, [fp, #-12]
   1c0c8:	ldr	r0, [fp, #-8]
   1c0cc:	bl	1c038 <lchmod@@Base+0x3294>
   1c0d0:	mov	r3, r0
   1c0d4:	mov	r0, r3
   1c0d8:	sub	sp, fp, #4
   1c0dc:	pop	{fp, pc}
   1c0e0:	push	{fp, lr}
   1c0e4:	add	fp, sp, #4
   1c0e8:	sub	sp, sp, #8
   1c0ec:	str	r0, [fp, #-8]
   1c0f0:	ldr	r1, [fp, #-8]
   1c0f4:	mov	r0, #0
   1c0f8:	bl	1c0ac <lchmod@@Base+0x3308>
   1c0fc:	mov	r3, r0
   1c100:	mov	r0, r3
   1c104:	sub	sp, fp, #4
   1c108:	pop	{fp, pc}
   1c10c:	push	{fp, lr}
   1c110:	add	fp, sp, #4
   1c114:	sub	sp, sp, #24
   1c118:	str	r0, [fp, #-24]	; 0xffffffe8
   1c11c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c124:	ldr	r3, [r3]
   1c128:	str	r3, [fp, #-8]
   1c12c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c130:	add	r2, r3, #8
   1c134:	ldr	r3, [fp, #-8]
   1c138:	cmp	r2, r3
   1c13c:	bne	1c17c <lchmod@@Base+0x33d8>
   1c140:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c144:	bl	1db78 <lchmod@@Base+0x4dd4>
   1c148:	mov	r3, r0
   1c14c:	str	r3, [fp, #-12]
   1c150:	ldr	r3, [fp, #-12]
   1c154:	cmp	r3, #0
   1c158:	beq	1c174 <lchmod@@Base+0x33d0>
   1c15c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c160:	ldr	r1, [fp, #-8]
   1c164:	ldr	r0, [fp, #-12]
   1c168:	bl	114d4 <memcpy@plt>
   1c16c:	mov	r3, r0
   1c170:	b	1c1a4 <lchmod@@Base+0x3400>
   1c174:	mov	r3, #0
   1c178:	b	1c1a4 <lchmod@@Base+0x3400>
   1c17c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c180:	ldr	r0, [fp, #-8]
   1c184:	bl	1dc20 <lchmod@@Base+0x4e7c>
   1c188:	str	r0, [fp, #-16]
   1c18c:	ldr	r3, [fp, #-16]
   1c190:	cmp	r3, #0
   1c194:	beq	1c1a0 <lchmod@@Base+0x33fc>
   1c198:	ldr	r3, [fp, #-16]
   1c19c:	b	1c1a4 <lchmod@@Base+0x3400>
   1c1a0:	ldr	r3, [fp, #-8]
   1c1a4:	mov	r0, r3
   1c1a8:	sub	sp, fp, #4
   1c1ac:	pop	{fp, pc}
   1c1b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c1b4:	add	fp, sp, #0
   1c1b8:	sub	sp, sp, #12
   1c1bc:	str	r0, [fp, #-8]
   1c1c0:	ldr	r3, [fp, #-8]
   1c1c4:	add	r2, r3, #8
   1c1c8:	ldr	r3, [fp, #-8]
   1c1cc:	str	r2, [r3]
   1c1d0:	ldr	r3, [fp, #-8]
   1c1d4:	mov	r2, #1024	; 0x400
   1c1d8:	str	r2, [r3, #4]
   1c1dc:	nop			; (mov r0, r0)
   1c1e0:	add	sp, fp, #0
   1c1e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1c1e8:	bx	lr
   1c1ec:	push	{fp, lr}
   1c1f0:	add	fp, sp, #4
   1c1f4:	sub	sp, sp, #8
   1c1f8:	str	r0, [fp, #-8]
   1c1fc:	ldr	r3, [fp, #-8]
   1c200:	ldr	r2, [r3]
   1c204:	ldr	r3, [fp, #-8]
   1c208:	add	r3, r3, #8
   1c20c:	cmp	r2, r3
   1c210:	beq	1c224 <lchmod@@Base+0x3480>
   1c214:	ldr	r3, [fp, #-8]
   1c218:	ldr	r3, [r3]
   1c21c:	mov	r0, r3
   1c220:	bl	13c50 <__assert_fail@plt+0x2404>
   1c224:	nop			; (mov r0, r0)
   1c228:	sub	sp, fp, #4
   1c22c:	pop	{fp, pc}
   1c230:	push	{fp, lr}
   1c234:	add	fp, sp, #4
   1c238:	sub	sp, sp, #16
   1c23c:	str	r0, [fp, #-16]
   1c240:	ldr	r3, [fp, #-16]
   1c244:	ldr	r3, [r3, #4]
   1c248:	lsl	r3, r3, #1
   1c24c:	str	r3, [fp, #-12]
   1c250:	ldr	r0, [fp, #-16]
   1c254:	bl	1c1ec <lchmod@@Base+0x3448>
   1c258:	ldr	r3, [fp, #-16]
   1c25c:	ldr	r2, [r3, #4]
   1c260:	ldr	r3, [fp, #-12]
   1c264:	cmp	r2, r3
   1c268:	movls	r3, #1
   1c26c:	movhi	r3, #0
   1c270:	uxtb	r3, r3
   1c274:	cmp	r3, #0
   1c278:	beq	1c290 <lchmod@@Base+0x34ec>
   1c27c:	ldr	r0, [fp, #-12]
   1c280:	bl	1db78 <lchmod@@Base+0x4dd4>
   1c284:	mov	r3, r0
   1c288:	str	r3, [fp, #-8]
   1c28c:	b	1c2a8 <lchmod@@Base+0x3504>
   1c290:	bl	116c0 <__errno_location@plt>
   1c294:	mov	r2, r0
   1c298:	mov	r3, #12
   1c29c:	str	r3, [r2]
   1c2a0:	mov	r3, #0
   1c2a4:	str	r3, [fp, #-8]
   1c2a8:	ldr	r3, [fp, #-8]
   1c2ac:	cmp	r3, #0
   1c2b0:	moveq	r3, #1
   1c2b4:	movne	r3, #0
   1c2b8:	uxtb	r3, r3
   1c2bc:	cmp	r3, #0
   1c2c0:	beq	1c2d4 <lchmod@@Base+0x3530>
   1c2c4:	ldr	r0, [fp, #-16]
   1c2c8:	bl	1c1b0 <lchmod@@Base+0x340c>
   1c2cc:	mov	r3, #0
   1c2d0:	b	1c2f0 <lchmod@@Base+0x354c>
   1c2d4:	ldr	r3, [fp, #-16]
   1c2d8:	ldr	r2, [fp, #-8]
   1c2dc:	str	r2, [r3]
   1c2e0:	ldr	r3, [fp, #-16]
   1c2e4:	ldr	r2, [fp, #-12]
   1c2e8:	str	r2, [r3, #4]
   1c2ec:	mov	r3, #1
   1c2f0:	mov	r0, r3
   1c2f4:	sub	sp, fp, #4
   1c2f8:	pop	{fp, pc}
   1c2fc:	push	{fp}		; (str fp, [sp, #-4]!)
   1c300:	add	fp, sp, #0
   1c304:	sub	sp, sp, #12
   1c308:	str	r0, [fp, #-8]
   1c30c:	ldr	r3, [fp, #-8]
   1c310:	add	r2, r3, #8
   1c314:	ldr	r3, [fp, #-8]
   1c318:	str	r2, [r3]
   1c31c:	ldr	r3, [fp, #-8]
   1c320:	mov	r2, #1024	; 0x400
   1c324:	str	r2, [r3, #4]
   1c328:	nop			; (mov r0, r0)
   1c32c:	add	sp, fp, #0
   1c330:	pop	{fp}		; (ldr fp, [sp], #4)
   1c334:	bx	lr
   1c338:	push	{fp, lr}
   1c33c:	add	fp, sp, #4
   1c340:	sub	sp, sp, #16
   1c344:	str	r0, [fp, #-16]
   1c348:	ldr	r3, [fp, #-16]
   1c34c:	ldr	r3, [r3, #4]
   1c350:	lsl	r3, r3, #1
   1c354:	str	r3, [fp, #-12]
   1c358:	ldr	r3, [fp, #-16]
   1c35c:	ldr	r2, [r3]
   1c360:	ldr	r3, [fp, #-16]
   1c364:	add	r3, r3, #8
   1c368:	cmp	r2, r3
   1c36c:	bne	1c3b4 <lchmod@@Base+0x3610>
   1c370:	ldr	r0, [fp, #-12]
   1c374:	bl	1db78 <lchmod@@Base+0x4dd4>
   1c378:	mov	r3, r0
   1c37c:	str	r3, [fp, #-8]
   1c380:	ldr	r3, [fp, #-8]
   1c384:	cmp	r3, #0
   1c388:	bne	1c394 <lchmod@@Base+0x35f0>
   1c38c:	mov	r3, #0
   1c390:	b	1c464 <lchmod@@Base+0x36c0>
   1c394:	ldr	r3, [fp, #-16]
   1c398:	add	r1, r3, #8
   1c39c:	ldr	r3, [fp, #-16]
   1c3a0:	ldr	r3, [r3, #4]
   1c3a4:	mov	r2, r3
   1c3a8:	ldr	r0, [fp, #-8]
   1c3ac:	bl	114d4 <memcpy@plt>
   1c3b0:	b	1c448 <lchmod@@Base+0x36a4>
   1c3b4:	ldr	r3, [fp, #-16]
   1c3b8:	ldr	r2, [r3, #4]
   1c3bc:	ldr	r3, [fp, #-12]
   1c3c0:	cmp	r2, r3
   1c3c4:	movls	r3, #1
   1c3c8:	movhi	r3, #0
   1c3cc:	uxtb	r3, r3
   1c3d0:	cmp	r3, #0
   1c3d4:	beq	1c3f4 <lchmod@@Base+0x3650>
   1c3d8:	ldr	r3, [fp, #-16]
   1c3dc:	ldr	r3, [r3]
   1c3e0:	ldr	r1, [fp, #-12]
   1c3e4:	mov	r0, r3
   1c3e8:	bl	1dc20 <lchmod@@Base+0x4e7c>
   1c3ec:	str	r0, [fp, #-8]
   1c3f0:	b	1c40c <lchmod@@Base+0x3668>
   1c3f4:	bl	116c0 <__errno_location@plt>
   1c3f8:	mov	r2, r0
   1c3fc:	mov	r3, #12
   1c400:	str	r3, [r2]
   1c404:	mov	r3, #0
   1c408:	str	r3, [fp, #-8]
   1c40c:	ldr	r3, [fp, #-8]
   1c410:	cmp	r3, #0
   1c414:	moveq	r3, #1
   1c418:	movne	r3, #0
   1c41c:	uxtb	r3, r3
   1c420:	cmp	r3, #0
   1c424:	beq	1c448 <lchmod@@Base+0x36a4>
   1c428:	ldr	r3, [fp, #-16]
   1c42c:	ldr	r3, [r3]
   1c430:	mov	r0, r3
   1c434:	bl	13c50 <__assert_fail@plt+0x2404>
   1c438:	ldr	r0, [fp, #-16]
   1c43c:	bl	1c2fc <lchmod@@Base+0x3558>
   1c440:	mov	r3, #0
   1c444:	b	1c464 <lchmod@@Base+0x36c0>
   1c448:	ldr	r3, [fp, #-16]
   1c44c:	ldr	r2, [fp, #-8]
   1c450:	str	r2, [r3]
   1c454:	ldr	r3, [fp, #-16]
   1c458:	ldr	r2, [fp, #-12]
   1c45c:	str	r2, [r3, #4]
   1c460:	mov	r3, #1
   1c464:	mov	r0, r3
   1c468:	sub	sp, fp, #4
   1c46c:	pop	{fp, pc}
   1c470:	push	{fp, lr}
   1c474:	add	fp, sp, #4
   1c478:	sub	sp, sp, #8
   1c47c:	str	r0, [fp, #-8]
   1c480:	str	r1, [fp, #-12]
   1c484:	ldr	r3, [fp, #-8]
   1c488:	cmp	r3, #0
   1c48c:	bne	1c4a8 <lchmod@@Base+0x3704>
   1c490:	bl	116c0 <__errno_location@plt>
   1c494:	mov	r2, r0
   1c498:	mov	r3, #95	; 0x5f
   1c49c:	str	r3, [r2]
   1c4a0:	mvn	r3, #0
   1c4a4:	b	1c50c <lchmod@@Base+0x3768>
   1c4a8:	ldr	r3, [fp, #-8]
   1c4ac:	cmp	r3, #10
   1c4b0:	bne	1c508 <lchmod@@Base+0x3764>
   1c4b4:	ldr	r3, [fp, #-12]
   1c4b8:	ldr	r3, [r3]
   1c4bc:	ldr	r1, [pc, #84]	; 1c518 <lchmod@@Base+0x3774>
   1c4c0:	mov	r0, r3
   1c4c4:	bl	11468 <strcmp@plt>
   1c4c8:	mov	r3, r0
   1c4cc:	cmp	r3, #0
   1c4d0:	bne	1c508 <lchmod@@Base+0x3764>
   1c4d4:	ldr	r3, [fp, #-12]
   1c4d8:	ldr	r3, [r3]
   1c4dc:	mov	r0, r3
   1c4e0:	bl	11798 <freecon@plt>
   1c4e4:	ldr	r3, [fp, #-12]
   1c4e8:	mov	r2, #0
   1c4ec:	str	r2, [r3]
   1c4f0:	bl	116c0 <__errno_location@plt>
   1c4f4:	mov	r2, r0
   1c4f8:	mov	r3, #61	; 0x3d
   1c4fc:	str	r3, [r2]
   1c500:	mvn	r3, #0
   1c504:	b	1c50c <lchmod@@Base+0x3768>
   1c508:	ldr	r3, [fp, #-8]
   1c50c:	mov	r0, r3
   1c510:	sub	sp, fp, #4
   1c514:	pop	{fp, pc}
   1c518:			; <UNDEFINED> instruction: 0x000203b4
   1c51c:	push	{fp, lr}
   1c520:	add	fp, sp, #4
   1c524:	sub	sp, sp, #16
   1c528:	str	r0, [fp, #-16]
   1c52c:	str	r1, [fp, #-20]	; 0xffffffec
   1c530:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c534:	ldr	r0, [fp, #-16]
   1c538:	bl	11678 <getfilecon@plt>
   1c53c:	str	r0, [fp, #-8]
   1c540:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c544:	ldr	r0, [fp, #-8]
   1c548:	bl	1c470 <lchmod@@Base+0x36cc>
   1c54c:	mov	r3, r0
   1c550:	mov	r0, r3
   1c554:	sub	sp, fp, #4
   1c558:	pop	{fp, pc}
   1c55c:	push	{fp, lr}
   1c560:	add	fp, sp, #4
   1c564:	sub	sp, sp, #16
   1c568:	str	r0, [fp, #-16]
   1c56c:	str	r1, [fp, #-20]	; 0xffffffec
   1c570:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c574:	ldr	r0, [fp, #-16]
   1c578:	bl	115e8 <lgetfilecon@plt>
   1c57c:	str	r0, [fp, #-8]
   1c580:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c584:	ldr	r0, [fp, #-8]
   1c588:	bl	1c470 <lchmod@@Base+0x36cc>
   1c58c:	mov	r3, r0
   1c590:	mov	r0, r3
   1c594:	sub	sp, fp, #4
   1c598:	pop	{fp, pc}
   1c59c:	push	{fp, lr}
   1c5a0:	add	fp, sp, #4
   1c5a4:	sub	sp, sp, #16
   1c5a8:	str	r0, [fp, #-16]
   1c5ac:	str	r1, [fp, #-20]	; 0xffffffec
   1c5b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5b4:	ldr	r0, [fp, #-16]
   1c5b8:	bl	11528 <fgetfilecon@plt>
   1c5bc:	str	r0, [fp, #-8]
   1c5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5c4:	ldr	r0, [fp, #-8]
   1c5c8:	bl	1c470 <lchmod@@Base+0x36cc>
   1c5cc:	mov	r3, r0
   1c5d0:	mov	r0, r3
   1c5d4:	sub	sp, fp, #4
   1c5d8:	pop	{fp, pc}
   1c5dc:	push	{fp, lr}
   1c5e0:	add	fp, sp, #4
   1c5e4:	sub	sp, sp, #16
   1c5e8:	str	r0, [fp, #-16]
   1c5ec:	ldr	r3, [fp, #-16]
   1c5f0:	cmp	r3, #0
   1c5f4:	blt	1c640 <lchmod@@Base+0x389c>
   1c5f8:	ldr	r3, [fp, #-16]
   1c5fc:	cmp	r3, #2
   1c600:	bgt	1c640 <lchmod@@Base+0x389c>
   1c604:	ldr	r0, [fp, #-16]
   1c608:	bl	1ee2c <lchmod@@Base+0x6088>
   1c60c:	str	r0, [fp, #-8]
   1c610:	bl	116c0 <__errno_location@plt>
   1c614:	mov	r3, r0
   1c618:	ldr	r3, [r3]
   1c61c:	str	r3, [fp, #-12]
   1c620:	ldr	r0, [fp, #-16]
   1c624:	bl	11804 <close@plt>
   1c628:	bl	116c0 <__errno_location@plt>
   1c62c:	mov	r2, r0
   1c630:	ldr	r3, [fp, #-12]
   1c634:	str	r3, [r2]
   1c638:	ldr	r3, [fp, #-8]
   1c63c:	str	r3, [fp, #-16]
   1c640:	ldr	r3, [fp, #-16]
   1c644:	mov	r0, r3
   1c648:	sub	sp, fp, #4
   1c64c:	pop	{fp, pc}
   1c650:	push	{r4, r5, r6, r7, fp, lr}
   1c654:	add	fp, sp, #20
   1c658:	sub	sp, sp, #48	; 0x30
   1c65c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c660:	str	r1, [fp, #-28]	; 0xffffffe4
   1c664:	str	r2, [fp, #-32]	; 0xffffffe0
   1c668:	str	r3, [fp, #-36]	; 0xffffffdc
   1c66c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c670:	cmp	r3, #0
   1c674:	beq	1c698 <lchmod@@Base+0x38f4>
   1c678:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c67c:	str	r3, [sp]
   1c680:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c684:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c688:	ldr	r1, [pc, #1260]	; 1cb7c <lchmod@@Base+0x3dd8>
   1c68c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c690:	bl	116b4 <fprintf@plt>
   1c694:	b	1c6ac <lchmod@@Base+0x3908>
   1c698:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c69c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c6a0:	ldr	r1, [pc, #1240]	; 1cb80 <lchmod@@Base+0x3ddc>
   1c6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6a8:	bl	116b4 <fprintf@plt>
   1c6ac:	ldr	r0, [pc, #1232]	; 1cb84 <lchmod@@Base+0x3de0>
   1c6b0:	bl	1166c <gettext@plt>
   1c6b4:	mov	r2, r0
   1c6b8:	ldr	r3, [pc, #1224]	; 1cb88 <lchmod@@Base+0x3de4>
   1c6bc:	ldr	r1, [pc, #1224]	; 1cb8c <lchmod@@Base+0x3de8>
   1c6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6c4:	bl	116b4 <fprintf@plt>
   1c6c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6cc:	mov	r0, #10
   1c6d0:	bl	11504 <fputc_unlocked@plt>
   1c6d4:	ldr	r0, [pc, #1204]	; 1cb90 <lchmod@@Base+0x3dec>
   1c6d8:	bl	1166c <gettext@plt>
   1c6dc:	mov	r3, r0
   1c6e0:	ldr	r2, [pc, #1196]	; 1cb94 <lchmod@@Base+0x3df0>
   1c6e4:	mov	r1, r3
   1c6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6ec:	bl	116b4 <fprintf@plt>
   1c6f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6f4:	mov	r0, #10
   1c6f8:	bl	11504 <fputc_unlocked@plt>
   1c6fc:	ldr	r3, [fp, #8]
   1c700:	cmp	r3, #9
   1c704:	ldrls	pc, [pc, r3, lsl #2]
   1c708:	b	1cac4 <lchmod@@Base+0x3d20>
   1c70c:	andeq	ip, r1, ip, ror #22
   1c710:	andeq	ip, r1, r4, lsr r7
   1c714:	andeq	ip, r1, r8, asr r7
   1c718:	andeq	ip, r1, r4, lsl #15
   1c71c:	andeq	ip, r1, r4, asr #15
   1c720:	andeq	ip, r1, ip, lsl r8
   1c724:	andeq	ip, r1, r4, lsl #17
   1c728:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c72c:	andeq	ip, r1, r4, lsl #19
   1c730:	andeq	ip, r1, ip, lsl sl
   1c734:	ldr	r0, [pc, #1116]	; 1cb98 <lchmod@@Base+0x3df4>
   1c738:	bl	1166c <gettext@plt>
   1c73c:	mov	r1, r0
   1c740:	ldr	r3, [fp, #4]
   1c744:	ldr	r3, [r3]
   1c748:	mov	r2, r3
   1c74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c750:	bl	116b4 <fprintf@plt>
   1c754:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c758:	ldr	r0, [pc, #1084]	; 1cb9c <lchmod@@Base+0x3df8>
   1c75c:	bl	1166c <gettext@plt>
   1c760:	mov	r1, r0
   1c764:	ldr	r3, [fp, #4]
   1c768:	ldr	r2, [r3]
   1c76c:	ldr	r3, [fp, #4]
   1c770:	add	r3, r3, #4
   1c774:	ldr	r3, [r3]
   1c778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c77c:	bl	116b4 <fprintf@plt>
   1c780:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c784:	ldr	r0, [pc, #1044]	; 1cba0 <lchmod@@Base+0x3dfc>
   1c788:	bl	1166c <gettext@plt>
   1c78c:	ldr	r3, [fp, #4]
   1c790:	ldr	r2, [r3]
   1c794:	ldr	r3, [fp, #4]
   1c798:	add	r3, r3, #4
   1c79c:	ldr	r1, [r3]
   1c7a0:	ldr	r3, [fp, #4]
   1c7a4:	add	r3, r3, #8
   1c7a8:	ldr	r3, [r3]
   1c7ac:	str	r3, [sp]
   1c7b0:	mov	r3, r1
   1c7b4:	mov	r1, r0
   1c7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7bc:	bl	116b4 <fprintf@plt>
   1c7c0:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c7c4:	ldr	r0, [pc, #984]	; 1cba4 <lchmod@@Base+0x3e00>
   1c7c8:	bl	1166c <gettext@plt>
   1c7cc:	mov	ip, r0
   1c7d0:	ldr	r3, [fp, #4]
   1c7d4:	ldr	r1, [r3]
   1c7d8:	ldr	r3, [fp, #4]
   1c7dc:	add	r3, r3, #4
   1c7e0:	ldr	r0, [r3]
   1c7e4:	ldr	r3, [fp, #4]
   1c7e8:	add	r3, r3, #8
   1c7ec:	ldr	r3, [r3]
   1c7f0:	ldr	r2, [fp, #4]
   1c7f4:	add	r2, r2, #12
   1c7f8:	ldr	r2, [r2]
   1c7fc:	str	r2, [sp, #4]
   1c800:	str	r3, [sp]
   1c804:	mov	r3, r0
   1c808:	mov	r2, r1
   1c80c:	mov	r1, ip
   1c810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c814:	bl	116b4 <fprintf@plt>
   1c818:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c81c:	ldr	r0, [pc, #900]	; 1cba8 <lchmod@@Base+0x3e04>
   1c820:	bl	1166c <gettext@plt>
   1c824:	mov	lr, r0
   1c828:	ldr	r3, [fp, #4]
   1c82c:	ldr	r0, [r3]
   1c830:	ldr	r3, [fp, #4]
   1c834:	add	r3, r3, #4
   1c838:	ldr	ip, [r3]
   1c83c:	ldr	r3, [fp, #4]
   1c840:	add	r3, r3, #8
   1c844:	ldr	r3, [r3]
   1c848:	ldr	r2, [fp, #4]
   1c84c:	add	r2, r2, #12
   1c850:	ldr	r2, [r2]
   1c854:	ldr	r1, [fp, #4]
   1c858:	add	r1, r1, #16
   1c85c:	ldr	r1, [r1]
   1c860:	str	r1, [sp, #8]
   1c864:	str	r2, [sp, #4]
   1c868:	str	r3, [sp]
   1c86c:	mov	r3, ip
   1c870:	mov	r2, r0
   1c874:	mov	r1, lr
   1c878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c87c:	bl	116b4 <fprintf@plt>
   1c880:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c884:	ldr	r0, [pc, #800]	; 1cbac <lchmod@@Base+0x3e08>
   1c888:	bl	1166c <gettext@plt>
   1c88c:	mov	r4, r0
   1c890:	ldr	r3, [fp, #4]
   1c894:	ldr	ip, [r3]
   1c898:	ldr	r3, [fp, #4]
   1c89c:	add	r3, r3, #4
   1c8a0:	ldr	lr, [r3]
   1c8a4:	ldr	r3, [fp, #4]
   1c8a8:	add	r3, r3, #8
   1c8ac:	ldr	r3, [r3]
   1c8b0:	ldr	r2, [fp, #4]
   1c8b4:	add	r2, r2, #12
   1c8b8:	ldr	r2, [r2]
   1c8bc:	ldr	r1, [fp, #4]
   1c8c0:	add	r1, r1, #16
   1c8c4:	ldr	r1, [r1]
   1c8c8:	ldr	r0, [fp, #4]
   1c8cc:	add	r0, r0, #20
   1c8d0:	ldr	r0, [r0]
   1c8d4:	str	r0, [sp, #12]
   1c8d8:	str	r1, [sp, #8]
   1c8dc:	str	r2, [sp, #4]
   1c8e0:	str	r3, [sp]
   1c8e4:	mov	r3, lr
   1c8e8:	mov	r2, ip
   1c8ec:	mov	r1, r4
   1c8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8f4:	bl	116b4 <fprintf@plt>
   1c8f8:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c8fc:	ldr	r0, [pc, #684]	; 1cbb0 <lchmod@@Base+0x3e0c>
   1c900:	bl	1166c <gettext@plt>
   1c904:	mov	r5, r0
   1c908:	ldr	r3, [fp, #4]
   1c90c:	ldr	lr, [r3]
   1c910:	ldr	r3, [fp, #4]
   1c914:	add	r3, r3, #4
   1c918:	ldr	r4, [r3]
   1c91c:	ldr	r3, [fp, #4]
   1c920:	add	r3, r3, #8
   1c924:	ldr	r3, [r3]
   1c928:	ldr	r2, [fp, #4]
   1c92c:	add	r2, r2, #12
   1c930:	ldr	r2, [r2]
   1c934:	ldr	r1, [fp, #4]
   1c938:	add	r1, r1, #16
   1c93c:	ldr	r1, [r1]
   1c940:	ldr	r0, [fp, #4]
   1c944:	add	r0, r0, #20
   1c948:	ldr	r0, [r0]
   1c94c:	ldr	ip, [fp, #4]
   1c950:	add	ip, ip, #24
   1c954:	ldr	ip, [ip]
   1c958:	str	ip, [sp, #16]
   1c95c:	str	r0, [sp, #12]
   1c960:	str	r1, [sp, #8]
   1c964:	str	r2, [sp, #4]
   1c968:	str	r3, [sp]
   1c96c:	mov	r3, r4
   1c970:	mov	r2, lr
   1c974:	mov	r1, r5
   1c978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c97c:	bl	116b4 <fprintf@plt>
   1c980:	b	1cb70 <lchmod@@Base+0x3dcc>
   1c984:	ldr	r0, [pc, #552]	; 1cbb4 <lchmod@@Base+0x3e10>
   1c988:	bl	1166c <gettext@plt>
   1c98c:	mov	r6, r0
   1c990:	ldr	r3, [fp, #4]
   1c994:	ldr	r4, [r3]
   1c998:	ldr	r3, [fp, #4]
   1c99c:	add	r3, r3, #4
   1c9a0:	ldr	r5, [r3]
   1c9a4:	ldr	r3, [fp, #4]
   1c9a8:	add	r3, r3, #8
   1c9ac:	ldr	r3, [r3]
   1c9b0:	ldr	r2, [fp, #4]
   1c9b4:	add	r2, r2, #12
   1c9b8:	ldr	r2, [r2]
   1c9bc:	ldr	r1, [fp, #4]
   1c9c0:	add	r1, r1, #16
   1c9c4:	ldr	r1, [r1]
   1c9c8:	ldr	r0, [fp, #4]
   1c9cc:	add	r0, r0, #20
   1c9d0:	ldr	r0, [r0]
   1c9d4:	ldr	ip, [fp, #4]
   1c9d8:	add	ip, ip, #24
   1c9dc:	ldr	ip, [ip]
   1c9e0:	ldr	lr, [fp, #4]
   1c9e4:	add	lr, lr, #28
   1c9e8:	ldr	lr, [lr]
   1c9ec:	str	lr, [sp, #20]
   1c9f0:	str	ip, [sp, #16]
   1c9f4:	str	r0, [sp, #12]
   1c9f8:	str	r1, [sp, #8]
   1c9fc:	str	r2, [sp, #4]
   1ca00:	str	r3, [sp]
   1ca04:	mov	r3, r5
   1ca08:	mov	r2, r4
   1ca0c:	mov	r1, r6
   1ca10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca14:	bl	116b4 <fprintf@plt>
   1ca18:	b	1cb70 <lchmod@@Base+0x3dcc>
   1ca1c:	ldr	r0, [pc, #404]	; 1cbb8 <lchmod@@Base+0x3e14>
   1ca20:	bl	1166c <gettext@plt>
   1ca24:	mov	r7, r0
   1ca28:	ldr	r3, [fp, #4]
   1ca2c:	ldr	r5, [r3]
   1ca30:	ldr	r3, [fp, #4]
   1ca34:	add	r3, r3, #4
   1ca38:	ldr	r6, [r3]
   1ca3c:	ldr	r3, [fp, #4]
   1ca40:	add	r3, r3, #8
   1ca44:	ldr	r3, [r3]
   1ca48:	ldr	r2, [fp, #4]
   1ca4c:	add	r2, r2, #12
   1ca50:	ldr	r2, [r2]
   1ca54:	ldr	r1, [fp, #4]
   1ca58:	add	r1, r1, #16
   1ca5c:	ldr	r1, [r1]
   1ca60:	ldr	r0, [fp, #4]
   1ca64:	add	r0, r0, #20
   1ca68:	ldr	r0, [r0]
   1ca6c:	ldr	ip, [fp, #4]
   1ca70:	add	ip, ip, #24
   1ca74:	ldr	ip, [ip]
   1ca78:	ldr	lr, [fp, #4]
   1ca7c:	add	lr, lr, #28
   1ca80:	ldr	lr, [lr]
   1ca84:	ldr	r4, [fp, #4]
   1ca88:	add	r4, r4, #32
   1ca8c:	ldr	r4, [r4]
   1ca90:	str	r4, [sp, #24]
   1ca94:	str	lr, [sp, #20]
   1ca98:	str	ip, [sp, #16]
   1ca9c:	str	r0, [sp, #12]
   1caa0:	str	r1, [sp, #8]
   1caa4:	str	r2, [sp, #4]
   1caa8:	str	r3, [sp]
   1caac:	mov	r3, r6
   1cab0:	mov	r2, r5
   1cab4:	mov	r1, r7
   1cab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cabc:	bl	116b4 <fprintf@plt>
   1cac0:	b	1cb70 <lchmod@@Base+0x3dcc>
   1cac4:	ldr	r0, [pc, #240]	; 1cbbc <lchmod@@Base+0x3e18>
   1cac8:	bl	1166c <gettext@plt>
   1cacc:	mov	r7, r0
   1cad0:	ldr	r3, [fp, #4]
   1cad4:	ldr	r5, [r3]
   1cad8:	ldr	r3, [fp, #4]
   1cadc:	add	r3, r3, #4
   1cae0:	ldr	r6, [r3]
   1cae4:	ldr	r3, [fp, #4]
   1cae8:	add	r3, r3, #8
   1caec:	ldr	r3, [r3]
   1caf0:	ldr	r2, [fp, #4]
   1caf4:	add	r2, r2, #12
   1caf8:	ldr	r2, [r2]
   1cafc:	ldr	r1, [fp, #4]
   1cb00:	add	r1, r1, #16
   1cb04:	ldr	r1, [r1]
   1cb08:	ldr	r0, [fp, #4]
   1cb0c:	add	r0, r0, #20
   1cb10:	ldr	r0, [r0]
   1cb14:	ldr	ip, [fp, #4]
   1cb18:	add	ip, ip, #24
   1cb1c:	ldr	ip, [ip]
   1cb20:	ldr	lr, [fp, #4]
   1cb24:	add	lr, lr, #28
   1cb28:	ldr	lr, [lr]
   1cb2c:	ldr	r4, [fp, #4]
   1cb30:	add	r4, r4, #32
   1cb34:	ldr	r4, [r4]
   1cb38:	str	r4, [sp, #24]
   1cb3c:	str	lr, [sp, #20]
   1cb40:	str	ip, [sp, #16]
   1cb44:	str	r0, [sp, #12]
   1cb48:	str	r1, [sp, #8]
   1cb4c:	str	r2, [sp, #4]
   1cb50:	str	r3, [sp]
   1cb54:	mov	r3, r6
   1cb58:	mov	r2, r5
   1cb5c:	mov	r1, r7
   1cb60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb64:	bl	116b4 <fprintf@plt>
   1cb68:	b	1cb70 <lchmod@@Base+0x3dcc>
   1cb6c:	nop			; (mov r0, r0)
   1cb70:	nop			; (mov r0, r0)
   1cb74:	sub	sp, fp, #20
   1cb78:	pop	{r4, r5, r6, r7, fp, pc}
   1cb7c:	andeq	r0, r2, r0, asr #7
   1cb80:	andeq	r0, r2, ip, asr #7
   1cb84:	ldrdeq	r0, [r2], -r4
   1cb88:	andeq	r0, r0, r6, ror #15
   1cb8c:	andeq	r0, r2, r4, ror #13
   1cb90:	ldrdeq	r0, [r2], -r8
   1cb94:	andeq	r0, r2, r4, lsl #9
   1cb98:	andeq	r0, r2, r8, lsr #9
   1cb9c:			; <UNDEFINED> instruction: 0x000204b8
   1cba0:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1cba4:	andeq	r0, r2, ip, ror #9
   1cba8:	andeq	r0, r2, ip, lsl #10
   1cbac:	andeq	r0, r2, r0, lsr r5
   1cbb0:	andeq	r0, r2, r8, asr r5
   1cbb4:	andeq	r0, r2, r4, lsl #11
   1cbb8:			; <UNDEFINED> instruction: 0x000205b4
   1cbbc:	andeq	r0, r2, r8, ror #11
   1cbc0:	push	{fp, lr}
   1cbc4:	add	fp, sp, #4
   1cbc8:	sub	sp, sp, #32
   1cbcc:	str	r0, [fp, #-16]
   1cbd0:	str	r1, [fp, #-20]	; 0xffffffec
   1cbd4:	str	r2, [fp, #-24]	; 0xffffffe8
   1cbd8:	str	r3, [fp, #-28]	; 0xffffffe4
   1cbdc:	mov	r3, #0
   1cbe0:	str	r3, [fp, #-8]
   1cbe4:	b	1cbf4 <lchmod@@Base+0x3e50>
   1cbe8:	ldr	r3, [fp, #-8]
   1cbec:	add	r3, r3, #1
   1cbf0:	str	r3, [fp, #-8]
   1cbf4:	ldr	r3, [fp, #-8]
   1cbf8:	lsl	r3, r3, #2
   1cbfc:	ldr	r2, [fp, #4]
   1cc00:	add	r3, r2, r3
   1cc04:	ldr	r3, [r3]
   1cc08:	cmp	r3, #0
   1cc0c:	bne	1cbe8 <lchmod@@Base+0x3e44>
   1cc10:	ldr	r3, [fp, #-8]
   1cc14:	str	r3, [sp, #4]
   1cc18:	ldr	r3, [fp, #4]
   1cc1c:	str	r3, [sp]
   1cc20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cc28:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cc2c:	ldr	r0, [fp, #-16]
   1cc30:	bl	1c650 <lchmod@@Base+0x38ac>
   1cc34:	nop			; (mov r0, r0)
   1cc38:	sub	sp, fp, #4
   1cc3c:	pop	{fp, pc}
   1cc40:	push	{fp, lr}
   1cc44:	add	fp, sp, #4
   1cc48:	sub	sp, sp, #72	; 0x48
   1cc4c:	str	r0, [fp, #-56]	; 0xffffffc8
   1cc50:	str	r1, [fp, #-60]	; 0xffffffc4
   1cc54:	str	r2, [fp, #-64]	; 0xffffffc0
   1cc58:	str	r3, [fp, #-68]	; 0xffffffbc
   1cc5c:	mov	r3, #0
   1cc60:	str	r3, [fp, #-8]
   1cc64:	b	1cc74 <lchmod@@Base+0x3ed0>
   1cc68:	ldr	r3, [fp, #-8]
   1cc6c:	add	r3, r3, #1
   1cc70:	str	r3, [fp, #-8]
   1cc74:	ldr	r3, [fp, #-8]
   1cc78:	cmp	r3, #9
   1cc7c:	bhi	1ccc0 <lchmod@@Base+0x3f1c>
   1cc80:	ldr	r3, [fp, #4]
   1cc84:	add	r2, r3, #4
   1cc88:	str	r2, [fp, #4]
   1cc8c:	ldr	r2, [r3]
   1cc90:	ldr	r3, [fp, #-8]
   1cc94:	lsl	r3, r3, #2
   1cc98:	sub	r1, fp, #4
   1cc9c:	add	r3, r1, r3
   1cca0:	str	r2, [r3, #-44]	; 0xffffffd4
   1cca4:	ldr	r3, [fp, #-8]
   1cca8:	lsl	r3, r3, #2
   1ccac:	sub	r2, fp, #4
   1ccb0:	add	r3, r2, r3
   1ccb4:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1ccb8:	cmp	r3, #0
   1ccbc:	bne	1cc68 <lchmod@@Base+0x3ec4>
   1ccc0:	ldr	r3, [fp, #-8]
   1ccc4:	str	r3, [sp, #4]
   1ccc8:	sub	r3, fp, #48	; 0x30
   1cccc:	str	r3, [sp]
   1ccd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ccd4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ccd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ccdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cce0:	bl	1c650 <lchmod@@Base+0x38ac>
   1cce4:	nop			; (mov r0, r0)
   1cce8:	sub	sp, fp, #4
   1ccec:	pop	{fp, pc}
   1ccf0:	push	{r3}		; (str r3, [sp, #-4]!)
   1ccf4:	push	{fp, lr}
   1ccf8:	add	fp, sp, #4
   1ccfc:	sub	sp, sp, #36	; 0x24
   1cd00:	str	r0, [fp, #-20]	; 0xffffffec
   1cd04:	str	r1, [fp, #-24]	; 0xffffffe8
   1cd08:	str	r2, [fp, #-28]	; 0xffffffe4
   1cd0c:	add	r3, fp, #8
   1cd10:	str	r3, [fp, #-12]
   1cd14:	ldr	r3, [fp, #-12]
   1cd18:	str	r3, [sp]
   1cd1c:	ldr	r3, [fp, #4]
   1cd20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cd24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cd2c:	bl	1cc40 <lchmod@@Base+0x3e9c>
   1cd30:	nop			; (mov r0, r0)
   1cd34:	sub	sp, fp, #4
   1cd38:	pop	{fp, lr}
   1cd3c:	add	sp, sp, #4
   1cd40:	bx	lr
   1cd44:	push	{fp, lr}
   1cd48:	add	fp, sp, #4
   1cd4c:	ldr	r3, [pc, #96]	; 1cdb4 <lchmod@@Base+0x4010>
   1cd50:	ldr	r3, [r3]
   1cd54:	mov	r1, r3
   1cd58:	mov	r0, #10
   1cd5c:	bl	11504 <fputc_unlocked@plt>
   1cd60:	ldr	r0, [pc, #80]	; 1cdb8 <lchmod@@Base+0x4014>
   1cd64:	bl	1166c <gettext@plt>
   1cd68:	mov	r3, r0
   1cd6c:	ldr	r1, [pc, #72]	; 1cdbc <lchmod@@Base+0x4018>
   1cd70:	mov	r0, r3
   1cd74:	bl	11474 <printf@plt>
   1cd78:	ldr	r0, [pc, #64]	; 1cdc0 <lchmod@@Base+0x401c>
   1cd7c:	bl	1166c <gettext@plt>
   1cd80:	mov	r3, r0
   1cd84:	ldr	r2, [pc, #56]	; 1cdc4 <lchmod@@Base+0x4020>
   1cd88:	ldr	r1, [pc, #56]	; 1cdc8 <lchmod@@Base+0x4024>
   1cd8c:	mov	r0, r3
   1cd90:	bl	11474 <printf@plt>
   1cd94:	ldr	r0, [pc, #48]	; 1cdcc <lchmod@@Base+0x4028>
   1cd98:	bl	1166c <gettext@plt>
   1cd9c:	mov	r3, r0
   1cda0:	ldr	r1, [pc, #40]	; 1cdd0 <lchmod@@Base+0x402c>
   1cda4:	mov	r0, r3
   1cda8:	bl	11474 <printf@plt>
   1cdac:	nop			; (mov r0, r0)
   1cdb0:	pop	{fp, pc}
   1cdb4:	ldrdeq	r1, [r3], -ip
   1cdb8:	andeq	r0, r2, r4, lsr #12
   1cdbc:	andeq	r0, r2, r8, lsr r6
   1cdc0:	andeq	r0, r2, r0, asr r6
   1cdc4:	andeq	r0, r2, r4, ror #12
   1cdc8:	andeq	r0, r2, ip, lsl #13
   1cdcc:	muleq	r2, ip, r6
   1cdd0:	andeq	r0, r2, r4, asr #13
   1cdd4:	push	{fp, lr}
   1cdd8:	add	fp, sp, #4
   1cddc:	sub	sp, sp, #16
   1cde0:	str	r0, [fp, #-8]
   1cde4:	str	r1, [fp, #-12]
   1cde8:	str	r2, [fp, #-16]
   1cdec:	ldr	r2, [fp, #-16]
   1cdf0:	ldr	r1, [fp, #-12]
   1cdf4:	ldr	r0, [fp, #-8]
   1cdf8:	bl	1cf64 <lchmod@@Base+0x41c0>
   1cdfc:	mov	r3, r0
   1ce00:	mov	r0, r3
   1ce04:	sub	sp, fp, #4
   1ce08:	pop	{fp, pc}
   1ce0c:	push	{fp, lr}
   1ce10:	add	fp, sp, #4
   1ce14:	sub	sp, sp, #8
   1ce18:	str	r0, [fp, #-8]
   1ce1c:	ldr	r3, [fp, #-8]
   1ce20:	cmp	r3, #0
   1ce24:	bne	1ce2c <lchmod@@Base+0x4088>
   1ce28:	bl	1d958 <lchmod@@Base+0x4bb4>
   1ce2c:	ldr	r3, [fp, #-8]
   1ce30:	mov	r0, r3
   1ce34:	sub	sp, fp, #4
   1ce38:	pop	{fp, pc}
   1ce3c:	push	{fp, lr}
   1ce40:	add	fp, sp, #4
   1ce44:	sub	sp, sp, #8
   1ce48:	str	r0, [fp, #-8]
   1ce4c:	ldr	r0, [fp, #-8]
   1ce50:	bl	1db78 <lchmod@@Base+0x4dd4>
   1ce54:	mov	r3, r0
   1ce58:	mov	r0, r3
   1ce5c:	bl	1ce0c <lchmod@@Base+0x4068>
   1ce60:	mov	r3, r0
   1ce64:	mov	r0, r3
   1ce68:	sub	sp, fp, #4
   1ce6c:	pop	{fp, pc}
   1ce70:	push	{fp, lr}
   1ce74:	add	fp, sp, #4
   1ce78:	sub	sp, sp, #8
   1ce7c:	str	r0, [fp, #-8]
   1ce80:	ldr	r0, [fp, #-8]
   1ce84:	bl	1eb5c <lchmod@@Base+0x5db8>
   1ce88:	mov	r3, r0
   1ce8c:	mov	r0, r3
   1ce90:	bl	1ce0c <lchmod@@Base+0x4068>
   1ce94:	mov	r3, r0
   1ce98:	mov	r0, r3
   1ce9c:	sub	sp, fp, #4
   1cea0:	pop	{fp, pc}
   1cea4:	push	{fp, lr}
   1cea8:	add	fp, sp, #4
   1ceac:	sub	sp, sp, #8
   1ceb0:	str	r0, [fp, #-8]
   1ceb4:	ldr	r0, [fp, #-8]
   1ceb8:	bl	1ce3c <lchmod@@Base+0x4098>
   1cebc:	mov	r3, r0
   1cec0:	mov	r0, r3
   1cec4:	sub	sp, fp, #4
   1cec8:	pop	{fp, pc}
   1cecc:	push	{fp, lr}
   1ced0:	add	fp, sp, #4
   1ced4:	sub	sp, sp, #16
   1ced8:	str	r0, [fp, #-16]
   1cedc:	str	r1, [fp, #-20]	; 0xffffffec
   1cee0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cee4:	ldr	r0, [fp, #-16]
   1cee8:	bl	1dc20 <lchmod@@Base+0x4e7c>
   1ceec:	str	r0, [fp, #-8]
   1cef0:	ldr	r3, [fp, #-8]
   1cef4:	cmp	r3, #0
   1cef8:	bne	1cf18 <lchmod@@Base+0x4174>
   1cefc:	ldr	r3, [fp, #-16]
   1cf00:	cmp	r3, #0
   1cf04:	beq	1cf14 <lchmod@@Base+0x4170>
   1cf08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf0c:	cmp	r3, #0
   1cf10:	beq	1cf18 <lchmod@@Base+0x4174>
   1cf14:	bl	1d958 <lchmod@@Base+0x4bb4>
   1cf18:	ldr	r3, [fp, #-8]
   1cf1c:	mov	r0, r3
   1cf20:	sub	sp, fp, #4
   1cf24:	pop	{fp, pc}
   1cf28:	push	{fp, lr}
   1cf2c:	add	fp, sp, #4
   1cf30:	sub	sp, sp, #8
   1cf34:	str	r0, [fp, #-8]
   1cf38:	str	r1, [fp, #-12]
   1cf3c:	ldr	r1, [fp, #-12]
   1cf40:	ldr	r0, [fp, #-8]
   1cf44:	bl	1eb88 <lchmod@@Base+0x5de4>
   1cf48:	mov	r3, r0
   1cf4c:	mov	r0, r3
   1cf50:	bl	1ce0c <lchmod@@Base+0x4068>
   1cf54:	mov	r3, r0
   1cf58:	mov	r0, r3
   1cf5c:	sub	sp, fp, #4
   1cf60:	pop	{fp, pc}
   1cf64:	push	{fp, lr}
   1cf68:	add	fp, sp, #4
   1cf6c:	sub	sp, sp, #24
   1cf70:	str	r0, [fp, #-16]
   1cf74:	str	r1, [fp, #-20]	; 0xffffffec
   1cf78:	str	r2, [fp, #-24]	; 0xffffffe8
   1cf7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf80:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cf84:	ldr	r0, [fp, #-16]
   1cf88:	bl	1ed7c <lchmod@@Base+0x5fd8>
   1cf8c:	str	r0, [fp, #-8]
   1cf90:	ldr	r3, [fp, #-8]
   1cf94:	cmp	r3, #0
   1cf98:	bne	1cfc4 <lchmod@@Base+0x4220>
   1cf9c:	ldr	r3, [fp, #-16]
   1cfa0:	cmp	r3, #0
   1cfa4:	beq	1cfc0 <lchmod@@Base+0x421c>
   1cfa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfac:	cmp	r3, #0
   1cfb0:	beq	1cfc4 <lchmod@@Base+0x4220>
   1cfb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfb8:	cmp	r3, #0
   1cfbc:	beq	1cfc4 <lchmod@@Base+0x4220>
   1cfc0:	bl	1d958 <lchmod@@Base+0x4bb4>
   1cfc4:	ldr	r3, [fp, #-8]
   1cfc8:	mov	r0, r3
   1cfcc:	sub	sp, fp, #4
   1cfd0:	pop	{fp, pc}
   1cfd4:	push	{fp, lr}
   1cfd8:	add	fp, sp, #4
   1cfdc:	sub	sp, sp, #16
   1cfe0:	str	r0, [fp, #-8]
   1cfe4:	str	r1, [fp, #-12]
   1cfe8:	str	r2, [fp, #-16]
   1cfec:	ldr	r2, [fp, #-16]
   1cff0:	ldr	r1, [fp, #-12]
   1cff4:	ldr	r0, [fp, #-8]
   1cff8:	bl	1ec10 <lchmod@@Base+0x5e6c>
   1cffc:	mov	r3, r0
   1d000:	mov	r0, r3
   1d004:	bl	1ce0c <lchmod@@Base+0x4068>
   1d008:	mov	r3, r0
   1d00c:	mov	r0, r3
   1d010:	sub	sp, fp, #4
   1d014:	pop	{fp, pc}
   1d018:	push	{fp, lr}
   1d01c:	add	fp, sp, #4
   1d020:	sub	sp, sp, #8
   1d024:	str	r0, [fp, #-8]
   1d028:	str	r1, [fp, #-12]
   1d02c:	ldr	r2, [fp, #-12]
   1d030:	ldr	r1, [fp, #-8]
   1d034:	mov	r0, #0
   1d038:	bl	1cf64 <lchmod@@Base+0x41c0>
   1d03c:	mov	r3, r0
   1d040:	mov	r0, r3
   1d044:	sub	sp, fp, #4
   1d048:	pop	{fp, pc}
   1d04c:	push	{fp, lr}
   1d050:	add	fp, sp, #4
   1d054:	sub	sp, sp, #8
   1d058:	str	r0, [fp, #-8]
   1d05c:	str	r1, [fp, #-12]
   1d060:	ldr	r2, [fp, #-12]
   1d064:	ldr	r1, [fp, #-8]
   1d068:	mov	r0, #0
   1d06c:	bl	1cfd4 <lchmod@@Base+0x4230>
   1d070:	mov	r3, r0
   1d074:	mov	r0, r3
   1d078:	sub	sp, fp, #4
   1d07c:	pop	{fp, pc}
   1d080:	push	{fp, lr}
   1d084:	add	fp, sp, #4
   1d088:	sub	sp, sp, #8
   1d08c:	str	r0, [fp, #-8]
   1d090:	str	r1, [fp, #-12]
   1d094:	mov	r2, #1
   1d098:	ldr	r1, [fp, #-12]
   1d09c:	ldr	r0, [fp, #-8]
   1d0a0:	bl	1d0b4 <lchmod@@Base+0x4310>
   1d0a4:	mov	r3, r0
   1d0a8:	mov	r0, r3
   1d0ac:	sub	sp, fp, #4
   1d0b0:	pop	{fp, pc}
   1d0b4:	push	{fp, lr}
   1d0b8:	add	fp, sp, #4
   1d0bc:	sub	sp, sp, #24
   1d0c0:	str	r0, [fp, #-16]
   1d0c4:	str	r1, [fp, #-20]	; 0xffffffec
   1d0c8:	str	r2, [fp, #-24]	; 0xffffffe8
   1d0cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d0d0:	ldr	r3, [r3]
   1d0d4:	str	r3, [fp, #-8]
   1d0d8:	ldr	r3, [fp, #-16]
   1d0dc:	cmp	r3, #0
   1d0e0:	bne	1d12c <lchmod@@Base+0x4388>
   1d0e4:	ldr	r3, [fp, #-8]
   1d0e8:	cmp	r3, #0
   1d0ec:	bne	1d190 <lchmod@@Base+0x43ec>
   1d0f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0f4:	mov	r0, #64	; 0x40
   1d0f8:	bl	1f554 <lchmod@@Base+0x67b0>
   1d0fc:	mov	r3, r0
   1d100:	str	r3, [fp, #-8]
   1d104:	ldr	r3, [fp, #-8]
   1d108:	cmp	r3, #0
   1d10c:	moveq	r3, #1
   1d110:	movne	r3, #0
   1d114:	uxtb	r3, r3
   1d118:	mov	r2, r3
   1d11c:	ldr	r3, [fp, #-8]
   1d120:	add	r3, r2, r3
   1d124:	str	r3, [fp, #-8]
   1d128:	b	1d190 <lchmod@@Base+0x43ec>
   1d12c:	ldr	r3, [fp, #-8]
   1d130:	lsr	r3, r3, #1
   1d134:	add	r3, r3, #1
   1d138:	mvn	r2, r3
   1d13c:	ldr	r3, [fp, #-8]
   1d140:	cmp	r2, r3
   1d144:	bcs	1d168 <lchmod@@Base+0x43c4>
   1d148:	ldr	r3, [fp, #-8]
   1d14c:	lsr	r2, r3, #1
   1d150:	ldr	r3, [fp, #-8]
   1d154:	add	r3, r2, r3
   1d158:	add	r3, r3, #1
   1d15c:	str	r3, [fp, #-8]
   1d160:	mov	r3, #1
   1d164:	b	1d184 <lchmod@@Base+0x43e0>
   1d168:	ldr	r3, [fp, #-8]
   1d16c:	lsr	r2, r3, #1
   1d170:	ldr	r3, [fp, #-8]
   1d174:	add	r3, r2, r3
   1d178:	add	r3, r3, #1
   1d17c:	str	r3, [fp, #-8]
   1d180:	mov	r3, #0
   1d184:	cmp	r3, #0
   1d188:	beq	1d190 <lchmod@@Base+0x43ec>
   1d18c:	bl	1d958 <lchmod@@Base+0x4bb4>
   1d190:	ldr	r3, [fp, #-8]
   1d194:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d198:	mov	r1, r3
   1d19c:	ldr	r0, [fp, #-16]
   1d1a0:	bl	1cf64 <lchmod@@Base+0x41c0>
   1d1a4:	str	r0, [fp, #-16]
   1d1a8:	ldr	r2, [fp, #-8]
   1d1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1b0:	str	r2, [r3]
   1d1b4:	ldr	r3, [fp, #-16]
   1d1b8:	mov	r0, r3
   1d1bc:	sub	sp, fp, #4
   1d1c0:	pop	{fp, pc}
   1d1c4:	push	{fp, lr}
   1d1c8:	add	fp, sp, #4
   1d1cc:	sub	sp, sp, #32
   1d1d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d1d4:	str	r1, [fp, #-28]	; 0xffffffe4
   1d1d8:	str	r2, [fp, #-32]	; 0xffffffe0
   1d1dc:	str	r3, [fp, #-36]	; 0xffffffdc
   1d1e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1e4:	ldr	r3, [r3]
   1d1e8:	str	r3, [fp, #-8]
   1d1ec:	ldr	r3, [fp, #-8]
   1d1f0:	asr	r3, r3, #1
   1d1f4:	cmp	r3, #0
   1d1f8:	bge	1d220 <lchmod@@Base+0x447c>
   1d1fc:	ldr	r3, [fp, #-8]
   1d200:	asr	r3, r3, #1
   1d204:	rsb	r2, r3, #-2147483648	; 0x80000000
   1d208:	ldr	r3, [fp, #-8]
   1d20c:	cmp	r2, r3
   1d210:	movgt	r3, #1
   1d214:	movle	r3, #0
   1d218:	uxtb	r3, r3
   1d21c:	b	1d274 <lchmod@@Base+0x44d0>
   1d220:	ldr	r3, [fp, #-8]
   1d224:	cmp	r3, #0
   1d228:	bge	1d250 <lchmod@@Base+0x44ac>
   1d22c:	ldr	r3, [fp, #-8]
   1d230:	asr	r2, r3, #1
   1d234:	ldr	r3, [fp, #-8]
   1d238:	rsb	r3, r3, #-2147483648	; 0x80000000
   1d23c:	cmp	r2, r3
   1d240:	movlt	r3, #1
   1d244:	movge	r3, #0
   1d248:	uxtb	r3, r3
   1d24c:	b	1d274 <lchmod@@Base+0x44d0>
   1d250:	ldr	r3, [fp, #-8]
   1d254:	asr	r2, r3, #1
   1d258:	mvn	r3, #-2147483648	; 0x80000000
   1d25c:	sub	r3, r3, r2
   1d260:	ldr	r2, [fp, #-8]
   1d264:	cmp	r3, r2
   1d268:	movlt	r3, #1
   1d26c:	movge	r3, #0
   1d270:	uxtb	r3, r3
   1d274:	cmp	r3, #0
   1d278:	beq	1d29c <lchmod@@Base+0x44f8>
   1d27c:	ldr	r3, [fp, #-8]
   1d280:	asr	r3, r3, #1
   1d284:	mov	r2, r3
   1d288:	ldr	r3, [fp, #-8]
   1d28c:	add	r3, r2, r3
   1d290:	str	r3, [fp, #-16]
   1d294:	mov	r3, #1
   1d298:	b	1d2b8 <lchmod@@Base+0x4514>
   1d29c:	ldr	r3, [fp, #-8]
   1d2a0:	asr	r3, r3, #1
   1d2a4:	mov	r2, r3
   1d2a8:	ldr	r3, [fp, #-8]
   1d2ac:	add	r3, r2, r3
   1d2b0:	str	r3, [fp, #-16]
   1d2b4:	mov	r3, #0
   1d2b8:	cmp	r3, #0
   1d2bc:	beq	1d2c8 <lchmod@@Base+0x4524>
   1d2c0:	mvn	r3, #-2147483648	; 0x80000000
   1d2c4:	str	r3, [fp, #-16]
   1d2c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d2cc:	cmp	r3, #0
   1d2d0:	blt	1d2ec <lchmod@@Base+0x4548>
   1d2d4:	ldr	r3, [fp, #-16]
   1d2d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d2dc:	cmp	r2, r3
   1d2e0:	bge	1d2ec <lchmod@@Base+0x4548>
   1d2e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d2e8:	str	r3, [fp, #-16]
   1d2ec:	ldr	r3, [fp, #4]
   1d2f0:	cmp	r3, #0
   1d2f4:	bge	1d384 <lchmod@@Base+0x45e0>
   1d2f8:	ldr	r3, [fp, #-16]
   1d2fc:	cmp	r3, #0
   1d300:	bge	1d330 <lchmod@@Base+0x458c>
   1d304:	ldr	r1, [fp, #4]
   1d308:	mvn	r0, #-2147483648	; 0x80000000
   1d30c:	bl	1f760 <lchmod@@Base+0x69bc>
   1d310:	mov	r3, r0
   1d314:	mov	r2, r3
   1d318:	ldr	r3, [fp, #-16]
   1d31c:	cmp	r2, r3
   1d320:	movgt	r3, #1
   1d324:	movle	r3, #0
   1d328:	uxtb	r3, r3
   1d32c:	b	1d424 <lchmod@@Base+0x4680>
   1d330:	ldr	r3, [fp, #4]
   1d334:	cmn	r3, #1
   1d338:	bne	1d358 <lchmod@@Base+0x45b4>
   1d33c:	ldr	r3, [fp, #-16]
   1d340:	add	r3, r3, #-2147483648	; 0x80000000
   1d344:	cmp	r3, #0
   1d348:	movgt	r3, #1
   1d34c:	movle	r3, #0
   1d350:	uxtb	r3, r3
   1d354:	b	1d424 <lchmod@@Base+0x4680>
   1d358:	ldr	r1, [fp, #4]
   1d35c:	mov	r0, #-2147483648	; 0x80000000
   1d360:	bl	1f760 <lchmod@@Base+0x69bc>
   1d364:	mov	r3, r0
   1d368:	mov	r2, r3
   1d36c:	ldr	r3, [fp, #-16]
   1d370:	cmp	r2, r3
   1d374:	movlt	r3, #1
   1d378:	movge	r3, #0
   1d37c:	uxtb	r3, r3
   1d380:	b	1d424 <lchmod@@Base+0x4680>
   1d384:	ldr	r3, [fp, #4]
   1d388:	cmp	r3, #0
   1d38c:	beq	1d420 <lchmod@@Base+0x467c>
   1d390:	ldr	r3, [fp, #-16]
   1d394:	cmp	r3, #0
   1d398:	bge	1d3f4 <lchmod@@Base+0x4650>
   1d39c:	ldr	r3, [fp, #-16]
   1d3a0:	cmn	r3, #1
   1d3a4:	bne	1d3c4 <lchmod@@Base+0x4620>
   1d3a8:	ldr	r3, [fp, #4]
   1d3ac:	add	r3, r3, #-2147483648	; 0x80000000
   1d3b0:	cmp	r3, #0
   1d3b4:	movgt	r3, #1
   1d3b8:	movle	r3, #0
   1d3bc:	uxtb	r3, r3
   1d3c0:	b	1d424 <lchmod@@Base+0x4680>
   1d3c4:	ldr	r3, [fp, #-16]
   1d3c8:	mov	r1, r3
   1d3cc:	mov	r0, #-2147483648	; 0x80000000
   1d3d0:	bl	1f760 <lchmod@@Base+0x69bc>
   1d3d4:	mov	r3, r0
   1d3d8:	mov	r2, r3
   1d3dc:	ldr	r3, [fp, #4]
   1d3e0:	cmp	r2, r3
   1d3e4:	movlt	r3, #1
   1d3e8:	movge	r3, #0
   1d3ec:	uxtb	r3, r3
   1d3f0:	b	1d424 <lchmod@@Base+0x4680>
   1d3f4:	ldr	r1, [fp, #4]
   1d3f8:	mvn	r0, #-2147483648	; 0x80000000
   1d3fc:	bl	1f760 <lchmod@@Base+0x69bc>
   1d400:	mov	r3, r0
   1d404:	mov	r2, r3
   1d408:	ldr	r3, [fp, #-16]
   1d40c:	cmp	r2, r3
   1d410:	movlt	r3, #1
   1d414:	movge	r3, #0
   1d418:	uxtb	r3, r3
   1d41c:	b	1d424 <lchmod@@Base+0x4680>
   1d420:	mov	r3, #0
   1d424:	cmp	r3, #0
   1d428:	beq	1d448 <lchmod@@Base+0x46a4>
   1d42c:	ldr	r3, [fp, #-16]
   1d430:	mov	r2, r3
   1d434:	ldr	r3, [fp, #4]
   1d438:	mul	r3, r3, r2
   1d43c:	str	r3, [fp, #-20]	; 0xffffffec
   1d440:	mov	r3, #1
   1d444:	b	1d460 <lchmod@@Base+0x46bc>
   1d448:	ldr	r3, [fp, #-16]
   1d44c:	mov	r2, r3
   1d450:	ldr	r3, [fp, #4]
   1d454:	mul	r3, r3, r2
   1d458:	str	r3, [fp, #-20]	; 0xffffffec
   1d45c:	mov	r3, #0
   1d460:	cmp	r3, #0
   1d464:	beq	1d470 <lchmod@@Base+0x46cc>
   1d468:	mvn	r3, #-2147483648	; 0x80000000
   1d46c:	b	1d488 <lchmod@@Base+0x46e4>
   1d470:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d474:	cmp	r3, #63	; 0x3f
   1d478:	bgt	1d484 <lchmod@@Base+0x46e0>
   1d47c:	mov	r3, #64	; 0x40
   1d480:	b	1d488 <lchmod@@Base+0x46e4>
   1d484:	mov	r3, #0
   1d488:	str	r3, [fp, #-12]
   1d48c:	ldr	r3, [fp, #-12]
   1d490:	cmp	r3, #0
   1d494:	beq	1d4d0 <lchmod@@Base+0x472c>
   1d498:	ldr	r1, [fp, #4]
   1d49c:	ldr	r0, [fp, #-12]
   1d4a0:	bl	1f760 <lchmod@@Base+0x69bc>
   1d4a4:	mov	r3, r0
   1d4a8:	str	r3, [fp, #-16]
   1d4ac:	ldr	r3, [fp, #-12]
   1d4b0:	ldr	r1, [fp, #4]
   1d4b4:	mov	r0, r3
   1d4b8:	bl	1f980 <lchmod@@Base+0x6bdc>
   1d4bc:	mov	r3, r1
   1d4c0:	mov	r2, r3
   1d4c4:	ldr	r3, [fp, #-12]
   1d4c8:	sub	r3, r3, r2
   1d4cc:	str	r3, [fp, #-20]	; 0xffffffec
   1d4d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4d4:	cmp	r3, #0
   1d4d8:	bne	1d4e8 <lchmod@@Base+0x4744>
   1d4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d4e0:	mov	r2, #0
   1d4e4:	str	r2, [r3]
   1d4e8:	ldr	r2, [fp, #-16]
   1d4ec:	ldr	r3, [fp, #-8]
   1d4f0:	sub	r2, r2, r3
   1d4f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d4f8:	cmp	r2, r3
   1d4fc:	bge	1d734 <lchmod@@Base+0x4990>
   1d500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d504:	cmp	r3, #0
   1d508:	bge	1d52c <lchmod@@Base+0x4788>
   1d50c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d510:	rsb	r2, r3, #-2147483648	; 0x80000000
   1d514:	ldr	r3, [fp, #-8]
   1d518:	cmp	r2, r3
   1d51c:	movgt	r3, #1
   1d520:	movle	r3, #0
   1d524:	uxtb	r3, r3
   1d528:	b	1d578 <lchmod@@Base+0x47d4>
   1d52c:	ldr	r3, [fp, #-8]
   1d530:	cmp	r3, #0
   1d534:	bge	1d558 <lchmod@@Base+0x47b4>
   1d538:	ldr	r3, [fp, #-8]
   1d53c:	rsb	r2, r3, #-2147483648	; 0x80000000
   1d540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d544:	cmp	r2, r3
   1d548:	movgt	r3, #1
   1d54c:	movle	r3, #0
   1d550:	uxtb	r3, r3
   1d554:	b	1d578 <lchmod@@Base+0x47d4>
   1d558:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d55c:	mvn	r3, #-2147483648	; 0x80000000
   1d560:	sub	r3, r3, r2
   1d564:	ldr	r2, [fp, #-8]
   1d568:	cmp	r3, r2
   1d56c:	movlt	r3, #1
   1d570:	movge	r3, #0
   1d574:	uxtb	r3, r3
   1d578:	cmp	r3, #0
   1d57c:	beq	1d594 <lchmod@@Base+0x47f0>
   1d580:	ldr	r2, [fp, #-8]
   1d584:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d588:	add	r3, r2, r3
   1d58c:	str	r3, [fp, #-16]
   1d590:	b	1d730 <lchmod@@Base+0x498c>
   1d594:	ldr	r2, [fp, #-8]
   1d598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d59c:	add	r3, r2, r3
   1d5a0:	str	r3, [fp, #-16]
   1d5a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d5a8:	cmp	r3, #0
   1d5ac:	blt	1d5c0 <lchmod@@Base+0x481c>
   1d5b0:	ldr	r3, [fp, #-16]
   1d5b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d5b8:	cmp	r2, r3
   1d5bc:	blt	1d730 <lchmod@@Base+0x498c>
   1d5c0:	ldr	r3, [fp, #4]
   1d5c4:	cmp	r3, #0
   1d5c8:	bge	1d658 <lchmod@@Base+0x48b4>
   1d5cc:	ldr	r3, [fp, #-16]
   1d5d0:	cmp	r3, #0
   1d5d4:	bge	1d604 <lchmod@@Base+0x4860>
   1d5d8:	ldr	r1, [fp, #4]
   1d5dc:	mvn	r0, #-2147483648	; 0x80000000
   1d5e0:	bl	1f760 <lchmod@@Base+0x69bc>
   1d5e4:	mov	r3, r0
   1d5e8:	mov	r2, r3
   1d5ec:	ldr	r3, [fp, #-16]
   1d5f0:	cmp	r2, r3
   1d5f4:	movgt	r3, #1
   1d5f8:	movle	r3, #0
   1d5fc:	uxtb	r3, r3
   1d600:	b	1d6f8 <lchmod@@Base+0x4954>
   1d604:	ldr	r3, [fp, #4]
   1d608:	cmn	r3, #1
   1d60c:	bne	1d62c <lchmod@@Base+0x4888>
   1d610:	ldr	r3, [fp, #-16]
   1d614:	add	r3, r3, #-2147483648	; 0x80000000
   1d618:	cmp	r3, #0
   1d61c:	movgt	r3, #1
   1d620:	movle	r3, #0
   1d624:	uxtb	r3, r3
   1d628:	b	1d6f8 <lchmod@@Base+0x4954>
   1d62c:	ldr	r1, [fp, #4]
   1d630:	mov	r0, #-2147483648	; 0x80000000
   1d634:	bl	1f760 <lchmod@@Base+0x69bc>
   1d638:	mov	r3, r0
   1d63c:	mov	r2, r3
   1d640:	ldr	r3, [fp, #-16]
   1d644:	cmp	r2, r3
   1d648:	movlt	r3, #1
   1d64c:	movge	r3, #0
   1d650:	uxtb	r3, r3
   1d654:	b	1d6f8 <lchmod@@Base+0x4954>
   1d658:	ldr	r3, [fp, #4]
   1d65c:	cmp	r3, #0
   1d660:	beq	1d6f4 <lchmod@@Base+0x4950>
   1d664:	ldr	r3, [fp, #-16]
   1d668:	cmp	r3, #0
   1d66c:	bge	1d6c8 <lchmod@@Base+0x4924>
   1d670:	ldr	r3, [fp, #-16]
   1d674:	cmn	r3, #1
   1d678:	bne	1d698 <lchmod@@Base+0x48f4>
   1d67c:	ldr	r3, [fp, #4]
   1d680:	add	r3, r3, #-2147483648	; 0x80000000
   1d684:	cmp	r3, #0
   1d688:	movgt	r3, #1
   1d68c:	movle	r3, #0
   1d690:	uxtb	r3, r3
   1d694:	b	1d6f8 <lchmod@@Base+0x4954>
   1d698:	ldr	r3, [fp, #-16]
   1d69c:	mov	r1, r3
   1d6a0:	mov	r0, #-2147483648	; 0x80000000
   1d6a4:	bl	1f760 <lchmod@@Base+0x69bc>
   1d6a8:	mov	r3, r0
   1d6ac:	mov	r2, r3
   1d6b0:	ldr	r3, [fp, #4]
   1d6b4:	cmp	r2, r3
   1d6b8:	movlt	r3, #1
   1d6bc:	movge	r3, #0
   1d6c0:	uxtb	r3, r3
   1d6c4:	b	1d6f8 <lchmod@@Base+0x4954>
   1d6c8:	ldr	r1, [fp, #4]
   1d6cc:	mvn	r0, #-2147483648	; 0x80000000
   1d6d0:	bl	1f760 <lchmod@@Base+0x69bc>
   1d6d4:	mov	r3, r0
   1d6d8:	mov	r2, r3
   1d6dc:	ldr	r3, [fp, #-16]
   1d6e0:	cmp	r2, r3
   1d6e4:	movlt	r3, #1
   1d6e8:	movge	r3, #0
   1d6ec:	uxtb	r3, r3
   1d6f0:	b	1d6f8 <lchmod@@Base+0x4954>
   1d6f4:	mov	r3, #0
   1d6f8:	cmp	r3, #0
   1d6fc:	beq	1d718 <lchmod@@Base+0x4974>
   1d700:	ldr	r3, [fp, #-16]
   1d704:	mov	r2, r3
   1d708:	ldr	r3, [fp, #4]
   1d70c:	mul	r3, r3, r2
   1d710:	str	r3, [fp, #-20]	; 0xffffffec
   1d714:	b	1d730 <lchmod@@Base+0x498c>
   1d718:	ldr	r3, [fp, #-16]
   1d71c:	mov	r2, r3
   1d720:	ldr	r3, [fp, #4]
   1d724:	mul	r3, r3, r2
   1d728:	str	r3, [fp, #-20]	; 0xffffffec
   1d72c:	b	1d734 <lchmod@@Base+0x4990>
   1d730:	bl	1d958 <lchmod@@Base+0x4bb4>
   1d734:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d738:	mov	r1, r3
   1d73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d740:	bl	1cecc <lchmod@@Base+0x4128>
   1d744:	str	r0, [fp, #-24]	; 0xffffffe8
   1d748:	ldr	r2, [fp, #-16]
   1d74c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d750:	str	r2, [r3]
   1d754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d758:	mov	r0, r3
   1d75c:	sub	sp, fp, #4
   1d760:	pop	{fp, pc}
   1d764:	push	{fp, lr}
   1d768:	add	fp, sp, #4
   1d76c:	sub	sp, sp, #8
   1d770:	str	r0, [fp, #-8]
   1d774:	mov	r1, #1
   1d778:	ldr	r0, [fp, #-8]
   1d77c:	bl	1d7bc <lchmod@@Base+0x4a18>
   1d780:	mov	r3, r0
   1d784:	mov	r0, r3
   1d788:	sub	sp, fp, #4
   1d78c:	pop	{fp, pc}
   1d790:	push	{fp, lr}
   1d794:	add	fp, sp, #4
   1d798:	sub	sp, sp, #8
   1d79c:	str	r0, [fp, #-8]
   1d7a0:	mov	r1, #1
   1d7a4:	ldr	r0, [fp, #-8]
   1d7a8:	bl	1d7f8 <lchmod@@Base+0x4a54>
   1d7ac:	mov	r3, r0
   1d7b0:	mov	r0, r3
   1d7b4:	sub	sp, fp, #4
   1d7b8:	pop	{fp, pc}
   1d7bc:	push	{fp, lr}
   1d7c0:	add	fp, sp, #4
   1d7c4:	sub	sp, sp, #8
   1d7c8:	str	r0, [fp, #-8]
   1d7cc:	str	r1, [fp, #-12]
   1d7d0:	ldr	r1, [fp, #-12]
   1d7d4:	ldr	r0, [fp, #-8]
   1d7d8:	bl	1dab4 <lchmod@@Base+0x4d10>
   1d7dc:	mov	r3, r0
   1d7e0:	mov	r0, r3
   1d7e4:	bl	1ce0c <lchmod@@Base+0x4068>
   1d7e8:	mov	r3, r0
   1d7ec:	mov	r0, r3
   1d7f0:	sub	sp, fp, #4
   1d7f4:	pop	{fp, pc}
   1d7f8:	push	{fp, lr}
   1d7fc:	add	fp, sp, #4
   1d800:	sub	sp, sp, #8
   1d804:	str	r0, [fp, #-8]
   1d808:	str	r1, [fp, #-12]
   1d80c:	ldr	r1, [fp, #-12]
   1d810:	ldr	r0, [fp, #-8]
   1d814:	bl	1ebd8 <lchmod@@Base+0x5e34>
   1d818:	mov	r3, r0
   1d81c:	mov	r0, r3
   1d820:	bl	1ce0c <lchmod@@Base+0x4068>
   1d824:	mov	r3, r0
   1d828:	mov	r0, r3
   1d82c:	sub	sp, fp, #4
   1d830:	pop	{fp, pc}
   1d834:	push	{fp, lr}
   1d838:	add	fp, sp, #4
   1d83c:	sub	sp, sp, #8
   1d840:	str	r0, [fp, #-8]
   1d844:	str	r1, [fp, #-12]
   1d848:	ldr	r0, [fp, #-12]
   1d84c:	bl	1ce3c <lchmod@@Base+0x4098>
   1d850:	mov	r3, r0
   1d854:	ldr	r2, [fp, #-12]
   1d858:	ldr	r1, [fp, #-8]
   1d85c:	mov	r0, r3
   1d860:	bl	114d4 <memcpy@plt>
   1d864:	mov	r3, r0
   1d868:	mov	r0, r3
   1d86c:	sub	sp, fp, #4
   1d870:	pop	{fp, pc}
   1d874:	push	{fp, lr}
   1d878:	add	fp, sp, #4
   1d87c:	sub	sp, sp, #8
   1d880:	str	r0, [fp, #-8]
   1d884:	str	r1, [fp, #-12]
   1d888:	ldr	r0, [fp, #-12]
   1d88c:	bl	1ce70 <lchmod@@Base+0x40cc>
   1d890:	mov	r3, r0
   1d894:	mov	r0, r3
   1d898:	ldr	r3, [fp, #-12]
   1d89c:	mov	r2, r3
   1d8a0:	ldr	r1, [fp, #-8]
   1d8a4:	bl	114d4 <memcpy@plt>
   1d8a8:	mov	r3, r0
   1d8ac:	mov	r0, r3
   1d8b0:	sub	sp, fp, #4
   1d8b4:	pop	{fp, pc}
   1d8b8:	push	{fp, lr}
   1d8bc:	add	fp, sp, #4
   1d8c0:	sub	sp, sp, #16
   1d8c4:	str	r0, [fp, #-16]
   1d8c8:	str	r1, [fp, #-20]	; 0xffffffec
   1d8cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8d0:	add	r3, r3, #1
   1d8d4:	mov	r0, r3
   1d8d8:	bl	1ce70 <lchmod@@Base+0x40cc>
   1d8dc:	mov	r3, r0
   1d8e0:	str	r3, [fp, #-8]
   1d8e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8e8:	ldr	r2, [fp, #-8]
   1d8ec:	add	r3, r2, r3
   1d8f0:	mov	r2, #0
   1d8f4:	strb	r2, [r3]
   1d8f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8fc:	mov	r2, r3
   1d900:	ldr	r1, [fp, #-16]
   1d904:	ldr	r0, [fp, #-8]
   1d908:	bl	114d4 <memcpy@plt>
   1d90c:	mov	r3, r0
   1d910:	mov	r0, r3
   1d914:	sub	sp, fp, #4
   1d918:	pop	{fp, pc}
   1d91c:	push	{fp, lr}
   1d920:	add	fp, sp, #4
   1d924:	sub	sp, sp, #8
   1d928:	str	r0, [fp, #-8]
   1d92c:	ldr	r0, [fp, #-8]
   1d930:	bl	11684 <strlen@plt>
   1d934:	mov	r3, r0
   1d938:	add	r3, r3, #1
   1d93c:	mov	r1, r3
   1d940:	ldr	r0, [fp, #-8]
   1d944:	bl	1d834 <lchmod@@Base+0x4a90>
   1d948:	mov	r3, r0
   1d94c:	mov	r0, r3
   1d950:	sub	sp, fp, #4
   1d954:	pop	{fp, pc}
   1d958:	push	{r4, r5, fp, lr}
   1d95c:	add	fp, sp, #12
   1d960:	ldr	r3, [pc, #32]	; 1d988 <lchmod@@Base+0x4be4>
   1d964:	ldr	r4, [r3]
   1d968:	ldr	r0, [pc, #28]	; 1d98c <lchmod@@Base+0x4be8>
   1d96c:	bl	1166c <gettext@plt>
   1d970:	mov	r3, r0
   1d974:	ldr	r2, [pc, #20]	; 1d990 <lchmod@@Base+0x4bec>
   1d978:	mov	r1, #0
   1d97c:	mov	r0, r4
   1d980:	bl	115d0 <error@plt>
   1d984:	bl	117f8 <abort@plt>
   1d988:	andeq	r1, r3, r4, lsl #3
   1d98c:	andeq	r0, r2, r4, lsl r7
   1d990:	andeq	r0, r2, r8, lsr #14
   1d994:	push	{fp, lr}
   1d998:	add	fp, sp, #4
   1d99c:	sub	sp, sp, #24
   1d9a0:	str	r0, [fp, #-16]
   1d9a4:	str	r1, [fp, #-20]	; 0xffffffec
   1d9a8:	str	r2, [fp, #-24]	; 0xffffffe8
   1d9ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9b0:	orr	r3, r3, #512	; 0x200
   1d9b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9b8:	mov	r1, r3
   1d9bc:	ldr	r0, [fp, #-16]
   1d9c0:	bl	14448 <__assert_fail@plt+0x2bfc>
   1d9c4:	str	r0, [fp, #-8]
   1d9c8:	ldr	r3, [fp, #-8]
   1d9cc:	cmp	r3, #0
   1d9d0:	bne	1da00 <lchmod@@Base+0x4c5c>
   1d9d4:	bl	116c0 <__errno_location@plt>
   1d9d8:	mov	r3, r0
   1d9dc:	ldr	r3, [r3]
   1d9e0:	cmp	r3, #22
   1d9e4:	bne	1d9fc <lchmod@@Base+0x4c58>
   1d9e8:	ldr	r3, [pc, #32]	; 1da10 <lchmod@@Base+0x4c6c>
   1d9ec:	mov	r2, #41	; 0x29
   1d9f0:	ldr	r1, [pc, #28]	; 1da14 <lchmod@@Base+0x4c70>
   1d9f4:	ldr	r0, [pc, #28]	; 1da18 <lchmod@@Base+0x4c74>
   1d9f8:	bl	1184c <__assert_fail@plt>
   1d9fc:	bl	1d958 <lchmod@@Base+0x4bb4>
   1da00:	ldr	r3, [fp, #-8]
   1da04:	mov	r0, r3
   1da08:	sub	sp, fp, #4
   1da0c:	pop	{fp, pc}
   1da10:	andeq	r0, r2, r8, asr #14
   1da14:	andeq	r0, r2, ip, lsr #14
   1da18:	andeq	r0, r2, r8, lsr r7
   1da1c:	push	{fp}		; (str fp, [sp, #-4]!)
   1da20:	add	fp, sp, #0
   1da24:	sub	sp, sp, #12
   1da28:	str	r0, [fp, #-8]
   1da2c:	str	r1, [fp, #-12]
   1da30:	ldr	r3, [fp, #-8]
   1da34:	ldr	r3, [r3, #48]	; 0x30
   1da38:	and	r3, r3, #16
   1da3c:	cmp	r3, #0
   1da40:	beq	1da58 <lchmod@@Base+0x4cb4>
   1da44:	ldr	r3, [fp, #-8]
   1da48:	ldr	r3, [r3, #48]	; 0x30
   1da4c:	and	r3, r3, #1
   1da50:	cmp	r3, #0
   1da54:	beq	1da90 <lchmod@@Base+0x4cec>
   1da58:	ldr	r3, [fp, #-8]
   1da5c:	ldr	r3, [r3, #48]	; 0x30
   1da60:	and	r3, r3, #16
   1da64:	cmp	r3, #0
   1da68:	beq	1da98 <lchmod@@Base+0x4cf4>
   1da6c:	ldr	r3, [fp, #-8]
   1da70:	ldr	r3, [r3, #48]	; 0x30
   1da74:	and	r3, r3, #1
   1da78:	cmp	r3, #0
   1da7c:	beq	1da98 <lchmod@@Base+0x4cf4>
   1da80:	ldr	r3, [fp, #-12]
   1da84:	ldr	r3, [r3, #48]	; 0x30
   1da88:	cmp	r3, #0
   1da8c:	beq	1da98 <lchmod@@Base+0x4cf4>
   1da90:	mov	r3, #1
   1da94:	b	1da9c <lchmod@@Base+0x4cf8>
   1da98:	mov	r3, #0
   1da9c:	and	r3, r3, #1
   1daa0:	uxtb	r3, r3
   1daa4:	mov	r0, r3
   1daa8:	add	sp, fp, #0
   1daac:	pop	{fp}		; (ldr fp, [sp], #4)
   1dab0:	bx	lr
   1dab4:	push	{r4, r5, fp, lr}
   1dab8:	add	fp, sp, #12
   1dabc:	sub	sp, sp, #16
   1dac0:	str	r0, [fp, #-24]	; 0xffffffe8
   1dac4:	str	r1, [fp, #-28]	; 0xffffffe4
   1dac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dacc:	cmp	r3, #0
   1dad0:	beq	1dae0 <lchmod@@Base+0x4d3c>
   1dad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dad8:	cmp	r3, #0
   1dadc:	bne	1daf0 <lchmod@@Base+0x4d4c>
   1dae0:	mov	r3, #1
   1dae4:	str	r3, [fp, #-28]	; 0xffffffe4
   1dae8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1daec:	str	r3, [fp, #-24]	; 0xffffffe8
   1daf0:	mov	r1, #0
   1daf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1daf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dafc:	umull	r2, r3, r2, r3
   1db00:	mov	r4, r3
   1db04:	mov	r5, #0
   1db08:	cmp	r4, #0
   1db0c:	beq	1db14 <lchmod@@Base+0x4d70>
   1db10:	mov	r1, #1
   1db14:	cmp	r2, #0
   1db18:	bge	1db20 <lchmod@@Base+0x4d7c>
   1db1c:	mov	r1, #1
   1db20:	mov	r3, r2
   1db24:	str	r3, [fp, #-20]	; 0xffffffec
   1db28:	mov	r3, r1
   1db2c:	and	r3, r3, #1
   1db30:	uxtb	r3, r3
   1db34:	cmp	r3, #0
   1db38:	beq	1db54 <lchmod@@Base+0x4db0>
   1db3c:	bl	116c0 <__errno_location@plt>
   1db40:	mov	r2, r0
   1db44:	mov	r3, #12
   1db48:	str	r3, [r2]
   1db4c:	mov	r3, #0
   1db50:	b	1db6c <lchmod@@Base+0x4dc8>
   1db54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db5c:	bl	11438 <calloc@plt>
   1db60:	mov	r3, r0
   1db64:	str	r3, [fp, #-16]
   1db68:	ldr	r3, [fp, #-16]
   1db6c:	mov	r0, r3
   1db70:	sub	sp, fp, #12
   1db74:	pop	{r4, r5, fp, pc}
   1db78:	push	{r4, r5, fp, lr}
   1db7c:	add	fp, sp, #12
   1db80:	sub	sp, sp, #16
   1db84:	str	r0, [fp, #-24]	; 0xffffffe8
   1db88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db8c:	cmp	r3, #0
   1db90:	bne	1db9c <lchmod@@Base+0x4df8>
   1db94:	mov	r3, #1
   1db98:	str	r3, [fp, #-24]	; 0xffffffe8
   1db9c:	mov	r1, #0
   1dba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dba4:	mov	r2, r3
   1dba8:	mov	r3, #0
   1dbac:	mov	r4, r3
   1dbb0:	mov	r5, #0
   1dbb4:	cmp	r4, #0
   1dbb8:	beq	1dbc0 <lchmod@@Base+0x4e1c>
   1dbbc:	mov	r1, #1
   1dbc0:	cmp	r2, #0
   1dbc4:	bge	1dbcc <lchmod@@Base+0x4e28>
   1dbc8:	mov	r1, #1
   1dbcc:	mov	r3, r2
   1dbd0:	str	r3, [fp, #-20]	; 0xffffffec
   1dbd4:	mov	r3, r1
   1dbd8:	and	r3, r3, #1
   1dbdc:	uxtb	r3, r3
   1dbe0:	cmp	r3, #0
   1dbe4:	beq	1dc00 <lchmod@@Base+0x4e5c>
   1dbe8:	bl	116c0 <__errno_location@plt>
   1dbec:	mov	r2, r0
   1dbf0:	mov	r3, #12
   1dbf4:	str	r3, [r2]
   1dbf8:	mov	r3, #0
   1dbfc:	b	1dc14 <lchmod@@Base+0x4e70>
   1dc00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc04:	bl	115f4 <malloc@plt>
   1dc08:	mov	r3, r0
   1dc0c:	str	r3, [fp, #-16]
   1dc10:	ldr	r3, [fp, #-16]
   1dc14:	mov	r0, r3
   1dc18:	sub	sp, fp, #12
   1dc1c:	pop	{r4, r5, fp, pc}
   1dc20:	push	{r4, r5, fp, lr}
   1dc24:	add	fp, sp, #12
   1dc28:	sub	sp, sp, #16
   1dc2c:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc30:	str	r1, [fp, #-28]	; 0xffffffe4
   1dc34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc38:	cmp	r3, #0
   1dc3c:	bne	1dc50 <lchmod@@Base+0x4eac>
   1dc40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc44:	bl	1db78 <lchmod@@Base+0x4dd4>
   1dc48:	mov	r3, r0
   1dc4c:	b	1dce4 <lchmod@@Base+0x4f40>
   1dc50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc54:	cmp	r3, #0
   1dc58:	bne	1dc6c <lchmod@@Base+0x4ec8>
   1dc5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc60:	bl	13c50 <__assert_fail@plt+0x2404>
   1dc64:	mov	r3, #0
   1dc68:	b	1dce4 <lchmod@@Base+0x4f40>
   1dc6c:	mov	r1, #0
   1dc70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc74:	mov	r2, r3
   1dc78:	mov	r3, #0
   1dc7c:	mov	r4, r3
   1dc80:	mov	r5, #0
   1dc84:	cmp	r4, #0
   1dc88:	beq	1dc90 <lchmod@@Base+0x4eec>
   1dc8c:	mov	r1, #1
   1dc90:	cmp	r2, #0
   1dc94:	bge	1dc9c <lchmod@@Base+0x4ef8>
   1dc98:	mov	r1, #1
   1dc9c:	mov	r3, r2
   1dca0:	str	r3, [fp, #-20]	; 0xffffffec
   1dca4:	mov	r3, r1
   1dca8:	and	r3, r3, #1
   1dcac:	uxtb	r3, r3
   1dcb0:	cmp	r3, #0
   1dcb4:	beq	1dcd0 <lchmod@@Base+0x4f2c>
   1dcb8:	bl	116c0 <__errno_location@plt>
   1dcbc:	mov	r2, r0
   1dcc0:	mov	r3, #12
   1dcc4:	str	r3, [r2]
   1dcc8:	mov	r3, #0
   1dccc:	b	1dce4 <lchmod@@Base+0x4f40>
   1dcd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dcd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcd8:	bl	1151c <realloc@plt>
   1dcdc:	str	r0, [fp, #-16]
   1dce0:	ldr	r3, [fp, #-16]
   1dce4:	mov	r0, r3
   1dce8:	sub	sp, fp, #12
   1dcec:	pop	{r4, r5, fp, pc}
   1dcf0:	push	{fp}		; (str fp, [sp, #-4]!)
   1dcf4:	add	fp, sp, #0
   1dcf8:	sub	sp, sp, #28
   1dcfc:	str	r0, [fp, #-24]	; 0xffffffe8
   1dd00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd04:	str	r3, [fp, #-8]
   1dd08:	mov	r3, #0
   1dd0c:	strb	r3, [fp, #-13]
   1dd10:	b	1dd20 <lchmod@@Base+0x4f7c>
   1dd14:	ldr	r3, [fp, #-8]
   1dd18:	add	r3, r3, #1
   1dd1c:	str	r3, [fp, #-8]
   1dd20:	ldr	r3, [fp, #-8]
   1dd24:	ldrb	r3, [r3]
   1dd28:	cmp	r3, #47	; 0x2f
   1dd2c:	beq	1dd14 <lchmod@@Base+0x4f70>
   1dd30:	ldr	r3, [fp, #-8]
   1dd34:	str	r3, [fp, #-12]
   1dd38:	b	1dd80 <lchmod@@Base+0x4fdc>
   1dd3c:	ldr	r3, [fp, #-12]
   1dd40:	ldrb	r3, [r3]
   1dd44:	cmp	r3, #47	; 0x2f
   1dd48:	bne	1dd58 <lchmod@@Base+0x4fb4>
   1dd4c:	mov	r3, #1
   1dd50:	strb	r3, [fp, #-13]
   1dd54:	b	1dd74 <lchmod@@Base+0x4fd0>
   1dd58:	ldrb	r3, [fp, #-13]
   1dd5c:	cmp	r3, #0
   1dd60:	beq	1dd74 <lchmod@@Base+0x4fd0>
   1dd64:	ldr	r3, [fp, #-12]
   1dd68:	str	r3, [fp, #-8]
   1dd6c:	mov	r3, #0
   1dd70:	strb	r3, [fp, #-13]
   1dd74:	ldr	r3, [fp, #-12]
   1dd78:	add	r3, r3, #1
   1dd7c:	str	r3, [fp, #-12]
   1dd80:	ldr	r3, [fp, #-12]
   1dd84:	ldrb	r3, [r3]
   1dd88:	cmp	r3, #0
   1dd8c:	bne	1dd3c <lchmod@@Base+0x4f98>
   1dd90:	ldr	r3, [fp, #-8]
   1dd94:	mov	r0, r3
   1dd98:	add	sp, fp, #0
   1dd9c:	pop	{fp}		; (ldr fp, [sp], #4)
   1dda0:	bx	lr
   1dda4:	push	{fp, lr}
   1dda8:	add	fp, sp, #4
   1ddac:	sub	sp, sp, #16
   1ddb0:	str	r0, [fp, #-16]
   1ddb4:	mov	r3, #0
   1ddb8:	str	r3, [fp, #-12]
   1ddbc:	ldr	r0, [fp, #-16]
   1ddc0:	bl	11684 <strlen@plt>
   1ddc4:	str	r0, [fp, #-8]
   1ddc8:	b	1ddd8 <lchmod@@Base+0x5034>
   1ddcc:	ldr	r3, [fp, #-8]
   1ddd0:	sub	r3, r3, #1
   1ddd4:	str	r3, [fp, #-8]
   1ddd8:	ldr	r3, [fp, #-8]
   1dddc:	cmp	r3, #1
   1dde0:	bls	1de00 <lchmod@@Base+0x505c>
   1dde4:	ldr	r3, [fp, #-8]
   1dde8:	sub	r3, r3, #1
   1ddec:	ldr	r2, [fp, #-16]
   1ddf0:	add	r3, r2, r3
   1ddf4:	ldrb	r3, [r3]
   1ddf8:	cmp	r3, #47	; 0x2f
   1ddfc:	beq	1ddcc <lchmod@@Base+0x5028>
   1de00:	ldr	r3, [fp, #-8]
   1de04:	mov	r0, r3
   1de08:	sub	sp, fp, #4
   1de0c:	pop	{fp, pc}
   1de10:	push	{r4, r5, r6, r7, fp}
   1de14:	add	fp, sp, #16
   1de18:	sub	sp, sp, #20
   1de1c:	strd	r0, [fp, #-28]	; 0xffffffe4
   1de20:	str	r2, [fp, #-32]	; 0xffffffe0
   1de24:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1de28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1de2c:	sub	ip, r1, #32
   1de30:	rsb	r0, r1, #32
   1de34:	lsl	r7, r3, r1
   1de38:	orr	r7, r7, r2, lsl ip
   1de3c:	orr	r7, r7, r2, lsr r0
   1de40:	lsl	r6, r2, r1
   1de44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1de48:	rsb	r1, r1, #0
   1de4c:	and	r1, r1, #63	; 0x3f
   1de50:	rsb	ip, r1, #32
   1de54:	sub	r0, r1, #32
   1de58:	lsr	r4, r2, r1
   1de5c:	orr	r4, r4, r3, lsl ip
   1de60:	orr	r4, r4, r3, lsr r0
   1de64:	lsr	r5, r3, r1
   1de68:	orr	r4, r4, r6
   1de6c:	orr	r5, r5, r7
   1de70:	mov	r2, r4
   1de74:	mov	r3, r5
   1de78:	mov	r0, r2
   1de7c:	mov	r1, r3
   1de80:	sub	sp, fp, #16
   1de84:	pop	{r4, r5, r6, r7, fp}
   1de88:	bx	lr
   1de8c:	push	{r4, r5, r6, r7, fp}
   1de90:	add	fp, sp, #16
   1de94:	sub	sp, sp, #20
   1de98:	strd	r0, [fp, #-28]	; 0xffffffe4
   1de9c:	str	r2, [fp, #-32]	; 0xffffffe0
   1dea0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1dea4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dea8:	rsb	ip, r1, #32
   1deac:	sub	r0, r1, #32
   1deb0:	lsr	r6, r2, r1
   1deb4:	orr	r6, r6, r3, lsl ip
   1deb8:	orr	r6, r6, r3, lsr r0
   1debc:	lsr	r7, r3, r1
   1dec0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dec4:	rsb	r1, r1, #0
   1dec8:	and	r1, r1, #63	; 0x3f
   1decc:	sub	ip, r1, #32
   1ded0:	rsb	r0, r1, #32
   1ded4:	lsl	r5, r3, r1
   1ded8:	orr	r5, r5, r2, lsl ip
   1dedc:	orr	r5, r5, r2, lsr r0
   1dee0:	lsl	r4, r2, r1
   1dee4:	orr	r4, r4, r6
   1dee8:	orr	r5, r5, r7
   1deec:	mov	r2, r4
   1def0:	mov	r3, r5
   1def4:	mov	r0, r2
   1def8:	mov	r1, r3
   1defc:	sub	sp, fp, #16
   1df00:	pop	{r4, r5, r6, r7, fp}
   1df04:	bx	lr
   1df08:	push	{fp}		; (str fp, [sp, #-4]!)
   1df0c:	add	fp, sp, #0
   1df10:	sub	sp, sp, #12
   1df14:	str	r0, [fp, #-8]
   1df18:	str	r1, [fp, #-12]
   1df1c:	ldr	r2, [fp, #-8]
   1df20:	ldr	r3, [fp, #-12]
   1df24:	rsb	r3, r3, #32
   1df28:	ror	r3, r2, r3
   1df2c:	mov	r0, r3
   1df30:	add	sp, fp, #0
   1df34:	pop	{fp}		; (ldr fp, [sp], #4)
   1df38:	bx	lr
   1df3c:	push	{fp}		; (str fp, [sp, #-4]!)
   1df40:	add	fp, sp, #0
   1df44:	sub	sp, sp, #12
   1df48:	str	r0, [fp, #-8]
   1df4c:	str	r1, [fp, #-12]
   1df50:	ldr	r2, [fp, #-8]
   1df54:	ldr	r3, [fp, #-12]
   1df58:	ror	r3, r2, r3
   1df5c:	mov	r0, r3
   1df60:	add	sp, fp, #0
   1df64:	pop	{fp}		; (ldr fp, [sp], #4)
   1df68:	bx	lr
   1df6c:	push	{fp}		; (str fp, [sp, #-4]!)
   1df70:	add	fp, sp, #0
   1df74:	sub	sp, sp, #12
   1df78:	str	r0, [fp, #-8]
   1df7c:	str	r1, [fp, #-12]
   1df80:	ldr	r2, [fp, #-8]
   1df84:	ldr	r3, [fp, #-12]
   1df88:	rsb	r3, r3, #32
   1df8c:	ror	r3, r2, r3
   1df90:	mov	r0, r3
   1df94:	add	sp, fp, #0
   1df98:	pop	{fp}		; (ldr fp, [sp], #4)
   1df9c:	bx	lr
   1dfa0:	push	{fp}		; (str fp, [sp, #-4]!)
   1dfa4:	add	fp, sp, #0
   1dfa8:	sub	sp, sp, #12
   1dfac:	str	r0, [fp, #-8]
   1dfb0:	str	r1, [fp, #-12]
   1dfb4:	ldr	r2, [fp, #-8]
   1dfb8:	ldr	r3, [fp, #-12]
   1dfbc:	ror	r3, r2, r3
   1dfc0:	mov	r0, r3
   1dfc4:	add	sp, fp, #0
   1dfc8:	pop	{fp}		; (ldr fp, [sp], #4)
   1dfcc:	bx	lr
   1dfd0:	push	{fp}		; (str fp, [sp, #-4]!)
   1dfd4:	add	fp, sp, #0
   1dfd8:	sub	sp, sp, #12
   1dfdc:	mov	r3, r0
   1dfe0:	str	r1, [fp, #-12]
   1dfe4:	strh	r3, [fp, #-6]
   1dfe8:	ldrh	r2, [fp, #-6]
   1dfec:	ldr	r3, [fp, #-12]
   1dff0:	lsl	r3, r2, r3
   1dff4:	uxth	r2, r3
   1dff8:	ldrh	r1, [fp, #-6]
   1dffc:	ldr	r3, [fp, #-12]
   1e000:	rsb	r3, r3, #16
   1e004:	lsr	r3, r1, r3
   1e008:	uxth	r3, r3
   1e00c:	orr	r3, r2, r3
   1e010:	uxth	r3, r3
   1e014:	mov	r0, r3
   1e018:	add	sp, fp, #0
   1e01c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e020:	bx	lr
   1e024:	push	{fp}		; (str fp, [sp, #-4]!)
   1e028:	add	fp, sp, #0
   1e02c:	sub	sp, sp, #12
   1e030:	mov	r3, r0
   1e034:	str	r1, [fp, #-12]
   1e038:	strh	r3, [fp, #-6]
   1e03c:	ldrh	r2, [fp, #-6]
   1e040:	ldr	r3, [fp, #-12]
   1e044:	lsr	r3, r2, r3
   1e048:	uxth	r2, r3
   1e04c:	ldrh	r1, [fp, #-6]
   1e050:	ldr	r3, [fp, #-12]
   1e054:	rsb	r3, r3, #16
   1e058:	lsl	r3, r1, r3
   1e05c:	uxth	r3, r3
   1e060:	orr	r3, r2, r3
   1e064:	uxth	r3, r3
   1e068:	mov	r0, r3
   1e06c:	add	sp, fp, #0
   1e070:	pop	{fp}		; (ldr fp, [sp], #4)
   1e074:	bx	lr
   1e078:	push	{fp}		; (str fp, [sp, #-4]!)
   1e07c:	add	fp, sp, #0
   1e080:	sub	sp, sp, #12
   1e084:	mov	r3, r0
   1e088:	str	r1, [fp, #-12]
   1e08c:	strb	r3, [fp, #-5]
   1e090:	ldrb	r2, [fp, #-5]
   1e094:	ldr	r3, [fp, #-12]
   1e098:	lsl	r3, r2, r3
   1e09c:	uxtb	r2, r3
   1e0a0:	ldrb	r1, [fp, #-5]
   1e0a4:	ldr	r3, [fp, #-12]
   1e0a8:	rsb	r3, r3, #8
   1e0ac:	lsr	r3, r1, r3
   1e0b0:	uxtb	r3, r3
   1e0b4:	orr	r3, r2, r3
   1e0b8:	uxtb	r3, r3
   1e0bc:	mov	r0, r3
   1e0c0:	add	sp, fp, #0
   1e0c4:	pop	{fp}		; (ldr fp, [sp], #4)
   1e0c8:	bx	lr
   1e0cc:	push	{fp}		; (str fp, [sp, #-4]!)
   1e0d0:	add	fp, sp, #0
   1e0d4:	sub	sp, sp, #12
   1e0d8:	mov	r3, r0
   1e0dc:	str	r1, [fp, #-12]
   1e0e0:	strb	r3, [fp, #-5]
   1e0e4:	ldrb	r2, [fp, #-5]
   1e0e8:	ldr	r3, [fp, #-12]
   1e0ec:	lsr	r3, r2, r3
   1e0f0:	uxtb	r2, r3
   1e0f4:	ldrb	r1, [fp, #-5]
   1e0f8:	ldr	r3, [fp, #-12]
   1e0fc:	rsb	r3, r3, #8
   1e100:	lsl	r3, r1, r3
   1e104:	uxtb	r3, r3
   1e108:	orr	r3, r2, r3
   1e10c:	uxtb	r3, r3
   1e110:	mov	r0, r3
   1e114:	add	sp, fp, #0
   1e118:	pop	{fp}		; (ldr fp, [sp], #4)
   1e11c:	bx	lr
   1e120:	push	{r4, r5, fp, lr}
   1e124:	add	fp, sp, #12
   1e128:	sub	sp, sp, #16
   1e12c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e130:	str	r1, [fp, #-28]	; 0xffffffe4
   1e134:	ldr	r5, [fp, #-24]	; 0xffffffe8
   1e138:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1e13c:	cmp	r5, r4
   1e140:	bne	1e14c <lchmod@@Base+0x53a8>
   1e144:	mov	r3, #0
   1e148:	b	1e1ac <lchmod@@Base+0x5408>
   1e14c:	ldrb	r3, [r5]
   1e150:	mov	r0, r3
   1e154:	bl	1f2d0 <lchmod@@Base+0x652c>
   1e158:	mov	r3, r0
   1e15c:	strb	r3, [fp, #-13]
   1e160:	ldrb	r3, [r4]
   1e164:	mov	r0, r3
   1e168:	bl	1f2d0 <lchmod@@Base+0x652c>
   1e16c:	mov	r3, r0
   1e170:	strb	r3, [fp, #-14]
   1e174:	ldrb	r3, [fp, #-13]
   1e178:	cmp	r3, #0
   1e17c:	beq	1e19c <lchmod@@Base+0x53f8>
   1e180:	add	r5, r5, #1
   1e184:	add	r4, r4, #1
   1e188:	ldrb	r2, [fp, #-13]
   1e18c:	ldrb	r3, [fp, #-14]
   1e190:	cmp	r2, r3
   1e194:	beq	1e14c <lchmod@@Base+0x53a8>
   1e198:	b	1e1a0 <lchmod@@Base+0x53fc>
   1e19c:	nop			; (mov r0, r0)
   1e1a0:	ldrb	r2, [fp, #-13]
   1e1a4:	ldrb	r3, [fp, #-14]
   1e1a8:	sub	r3, r2, r3
   1e1ac:	mov	r0, r3
   1e1b0:	sub	sp, fp, #12
   1e1b4:	pop	{r4, r5, fp, pc}
   1e1b8:	push	{fp, lr}
   1e1bc:	add	fp, sp, #4
   1e1c0:	sub	sp, sp, #16
   1e1c4:	str	r0, [fp, #-16]
   1e1c8:	ldr	r0, [fp, #-16]
   1e1cc:	bl	115ac <__fpending@plt>
   1e1d0:	mov	r3, r0
   1e1d4:	cmp	r3, #0
   1e1d8:	movne	r3, #1
   1e1dc:	moveq	r3, #0
   1e1e0:	strb	r3, [fp, #-5]
   1e1e4:	ldr	r0, [fp, #-16]
   1e1e8:	bl	115b8 <ferror_unlocked@plt>
   1e1ec:	mov	r3, r0
   1e1f0:	cmp	r3, #0
   1e1f4:	movne	r3, #1
   1e1f8:	moveq	r3, #0
   1e1fc:	strb	r3, [fp, #-6]
   1e200:	ldr	r0, [fp, #-16]
   1e204:	bl	1e438 <lchmod@@Base+0x5694>
   1e208:	mov	r3, r0
   1e20c:	cmp	r3, #0
   1e210:	movne	r3, #1
   1e214:	moveq	r3, #0
   1e218:	strb	r3, [fp, #-7]
   1e21c:	ldrb	r3, [fp, #-6]
   1e220:	cmp	r3, #0
   1e224:	bne	1e254 <lchmod@@Base+0x54b0>
   1e228:	ldrb	r3, [fp, #-7]
   1e22c:	cmp	r3, #0
   1e230:	beq	1e280 <lchmod@@Base+0x54dc>
   1e234:	ldrb	r3, [fp, #-5]
   1e238:	cmp	r3, #0
   1e23c:	bne	1e254 <lchmod@@Base+0x54b0>
   1e240:	bl	116c0 <__errno_location@plt>
   1e244:	mov	r3, r0
   1e248:	ldr	r3, [r3]
   1e24c:	cmp	r3, #9
   1e250:	beq	1e280 <lchmod@@Base+0x54dc>
   1e254:	ldrb	r3, [fp, #-7]
   1e258:	eor	r3, r3, #1
   1e25c:	uxtb	r3, r3
   1e260:	cmp	r3, #0
   1e264:	beq	1e278 <lchmod@@Base+0x54d4>
   1e268:	bl	116c0 <__errno_location@plt>
   1e26c:	mov	r2, r0
   1e270:	mov	r3, #0
   1e274:	str	r3, [r2]
   1e278:	mvn	r3, #0
   1e27c:	b	1e284 <lchmod@@Base+0x54e0>
   1e280:	mov	r3, #0
   1e284:	mov	r0, r3
   1e288:	sub	sp, fp, #4
   1e28c:	pop	{fp, pc}
   1e290:	push	{fp}		; (str fp, [sp, #-4]!)
   1e294:	add	fp, sp, #0
   1e298:	sub	sp, sp, #12
   1e29c:	strd	r0, [fp, #-12]
   1e2a0:	ldrd	r2, [fp, #-12]
   1e2a4:	subs	r0, r2, #1
   1e2a8:	sbc	r1, r3, #0
   1e2ac:	ldrd	r2, [fp, #-12]
   1e2b0:	and	r2, r2, r0
   1e2b4:	and	r3, r3, r1
   1e2b8:	orr	r3, r2, r3
   1e2bc:	cmp	r3, #0
   1e2c0:	moveq	r3, #1
   1e2c4:	movne	r3, #0
   1e2c8:	uxtb	r3, r3
   1e2cc:	mov	r0, r3
   1e2d0:	add	sp, fp, #0
   1e2d4:	pop	{fp}		; (ldr fp, [sp], #4)
   1e2d8:	bx	lr
   1e2dc:	push	{fp}		; (str fp, [sp, #-4]!)
   1e2e0:	add	fp, sp, #0
   1e2e4:	sub	sp, sp, #12
   1e2e8:	str	r0, [fp, #-8]
   1e2ec:	ldr	r1, [fp, #-8]
   1e2f0:	mov	r2, #0
   1e2f4:	mov	r3, #0
   1e2f8:	strd	r2, [r1, #16]
   1e2fc:	ldr	r3, [fp, #-8]
   1e300:	ldr	r2, [pc, #16]	; 1e318 <lchmod@@Base+0x5574>
   1e304:	str	r2, [r3, #24]
   1e308:	nop			; (mov r0, r0)
   1e30c:	add	sp, fp, #0
   1e310:	pop	{fp}		; (ldr fp, [sp], #4)
   1e314:	bx	lr
   1e318:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1e31c:	push	{fp, lr}
   1e320:	add	fp, sp, #4
   1e324:	sub	sp, sp, #8
   1e328:	str	r0, [fp, #-8]
   1e32c:	str	r1, [fp, #-12]
   1e330:	ldr	r3, [fp, #-8]
   1e334:	ldr	r3, [r3, #24]
   1e338:	ldr	r2, [pc, #232]	; 1e428 <lchmod@@Base+0x5684>
   1e33c:	cmp	r3, r2
   1e340:	beq	1e358 <lchmod@@Base+0x55b4>
   1e344:	ldr	r3, [pc, #224]	; 1e42c <lchmod@@Base+0x5688>
   1e348:	mov	r2, #60	; 0x3c
   1e34c:	ldr	r1, [pc, #220]	; 1e430 <lchmod@@Base+0x568c>
   1e350:	ldr	r0, [pc, #220]	; 1e434 <lchmod@@Base+0x5690>
   1e354:	bl	1184c <__assert_fail@plt>
   1e358:	ldr	r3, [fp, #-8]
   1e35c:	ldrd	r2, [r3, #16]
   1e360:	orrs	r3, r2, r3
   1e364:	beq	1e3a8 <lchmod@@Base+0x5604>
   1e368:	ldr	r3, [fp, #-12]
   1e36c:	ldrd	r0, [r3, #96]	; 0x60
   1e370:	ldr	r3, [fp, #-8]
   1e374:	ldrd	r2, [r3]
   1e378:	cmp	r1, r3
   1e37c:	cmpeq	r0, r2
   1e380:	bne	1e3a8 <lchmod@@Base+0x5604>
   1e384:	ldr	r3, [fp, #-12]
   1e388:	ldrd	r0, [r3]
   1e38c:	ldr	r3, [fp, #-8]
   1e390:	ldrd	r2, [r3, #8]
   1e394:	cmp	r1, r3
   1e398:	cmpeq	r0, r2
   1e39c:	bne	1e3a8 <lchmod@@Base+0x5604>
   1e3a0:	mov	r3, #1
   1e3a4:	b	1e41c <lchmod@@Base+0x5678>
   1e3a8:	ldr	r3, [fp, #-8]
   1e3ac:	ldrd	r2, [r3, #16]
   1e3b0:	adds	r2, r2, #1
   1e3b4:	adc	r3, r3, #0
   1e3b8:	ldr	r1, [fp, #-8]
   1e3bc:	strd	r2, [r1, #16]
   1e3c0:	ldr	r3, [fp, #-8]
   1e3c4:	ldrd	r2, [r3, #16]
   1e3c8:	mov	r0, r2
   1e3cc:	mov	r1, r3
   1e3d0:	bl	1e290 <lchmod@@Base+0x54ec>
   1e3d4:	mov	r3, r0
   1e3d8:	cmp	r3, #0
   1e3dc:	beq	1e418 <lchmod@@Base+0x5674>
   1e3e0:	ldr	r3, [fp, #-8]
   1e3e4:	ldrd	r2, [r3, #16]
   1e3e8:	orrs	r3, r2, r3
   1e3ec:	bne	1e3f8 <lchmod@@Base+0x5654>
   1e3f0:	mov	r3, #1
   1e3f4:	b	1e41c <lchmod@@Base+0x5678>
   1e3f8:	ldr	r3, [fp, #-12]
   1e3fc:	ldrd	r2, [r3]
   1e400:	ldr	r1, [fp, #-8]
   1e404:	strd	r2, [r1, #8]
   1e408:	ldr	r3, [fp, #-12]
   1e40c:	ldrd	r2, [r3, #96]	; 0x60
   1e410:	ldr	r1, [fp, #-8]
   1e414:	strd	r2, [r1]
   1e418:	mov	r3, #0
   1e41c:	mov	r0, r3
   1e420:	sub	sp, fp, #4
   1e424:	pop	{fp, pc}
   1e428:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1e42c:	andeq	r0, r2, r0, lsl #15
   1e430:	andeq	r0, r2, r4, asr r7
   1e434:	andeq	r0, r2, r8, ror #14
   1e438:	push	{fp, lr}
   1e43c:	add	fp, sp, #4
   1e440:	sub	sp, sp, #32
   1e444:	str	r0, [fp, #-24]	; 0xffffffe8
   1e448:	mov	r3, #0
   1e44c:	str	r3, [fp, #-8]
   1e450:	mov	r3, #0
   1e454:	str	r3, [fp, #-12]
   1e458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e45c:	bl	116e4 <fileno@plt>
   1e460:	str	r0, [fp, #-16]
   1e464:	ldr	r3, [fp, #-16]
   1e468:	cmp	r3, #0
   1e46c:	bge	1e480 <lchmod@@Base+0x56dc>
   1e470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e474:	bl	116f0 <fclose@plt>
   1e478:	mov	r3, r0
   1e47c:	b	1e524 <lchmod@@Base+0x5780>
   1e480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e484:	bl	1160c <__freading@plt>
   1e488:	mov	r3, r0
   1e48c:	cmp	r3, #0
   1e490:	beq	1e4cc <lchmod@@Base+0x5728>
   1e494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e498:	bl	116e4 <fileno@plt>
   1e49c:	mov	r1, r0
   1e4a0:	mov	r3, #1
   1e4a4:	str	r3, [sp]
   1e4a8:	mov	r2, #0
   1e4ac:	mov	r3, #0
   1e4b0:	mov	r0, r1
   1e4b4:	bl	11588 <lseek64@plt>
   1e4b8:	mvn	r2, #0
   1e4bc:	mvn	r3, #0
   1e4c0:	cmp	r1, r3
   1e4c4:	cmpeq	r0, r2
   1e4c8:	beq	1e4f0 <lchmod@@Base+0x574c>
   1e4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4d0:	bl	1e974 <lchmod@@Base+0x5bd0>
   1e4d4:	mov	r3, r0
   1e4d8:	cmp	r3, #0
   1e4dc:	beq	1e4f0 <lchmod@@Base+0x574c>
   1e4e0:	bl	116c0 <__errno_location@plt>
   1e4e4:	mov	r3, r0
   1e4e8:	ldr	r3, [r3]
   1e4ec:	str	r3, [fp, #-8]
   1e4f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4f4:	bl	116f0 <fclose@plt>
   1e4f8:	str	r0, [fp, #-12]
   1e4fc:	ldr	r3, [fp, #-8]
   1e500:	cmp	r3, #0
   1e504:	beq	1e520 <lchmod@@Base+0x577c>
   1e508:	bl	116c0 <__errno_location@plt>
   1e50c:	mov	r2, r0
   1e510:	ldr	r3, [fp, #-8]
   1e514:	str	r3, [r2]
   1e518:	mvn	r3, #0
   1e51c:	str	r3, [fp, #-12]
   1e520:	ldr	r3, [fp, #-12]
   1e524:	mov	r0, r3
   1e528:	sub	sp, fp, #4
   1e52c:	pop	{fp, pc}
   1e530:	push	{r1, r2, r3}
   1e534:	push	{fp, lr}
   1e538:	add	fp, sp, #4
   1e53c:	sub	sp, sp, #36	; 0x24
   1e540:	str	r0, [fp, #-36]	; 0xffffffdc
   1e544:	mvn	r3, #0
   1e548:	str	r3, [fp, #-12]
   1e54c:	add	r3, fp, #8
   1e550:	str	r3, [fp, #-32]	; 0xffffffe0
   1e554:	ldr	r3, [fp, #4]
   1e558:	cmp	r3, #0
   1e55c:	beq	1e570 <lchmod@@Base+0x57cc>
   1e560:	ldr	r2, [pc, #432]	; 1e718 <lchmod@@Base+0x5974>
   1e564:	cmp	r3, r2
   1e568:	beq	1e598 <lchmod@@Base+0x57f4>
   1e56c:	b	1e5c0 <lchmod@@Base+0x581c>
   1e570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e574:	add	r2, r3, #4
   1e578:	str	r2, [fp, #-32]	; 0xffffffe0
   1e57c:	ldr	r3, [r3]
   1e580:	str	r3, [fp, #-16]
   1e584:	ldr	r1, [fp, #-16]
   1e588:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e58c:	bl	1e730 <lchmod@@Base+0x598c>
   1e590:	str	r0, [fp, #-12]
   1e594:	b	1e700 <lchmod@@Base+0x595c>
   1e598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e59c:	add	r2, r3, #4
   1e5a0:	str	r2, [fp, #-32]	; 0xffffffe0
   1e5a4:	ldr	r3, [r3]
   1e5a8:	str	r3, [fp, #-20]	; 0xffffffec
   1e5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e5b4:	bl	1e768 <lchmod@@Base+0x59c4>
   1e5b8:	str	r0, [fp, #-12]
   1e5bc:	b	1e700 <lchmod@@Base+0x595c>
   1e5c0:	ldr	r3, [fp, #4]
   1e5c4:	cmp	r3, #11
   1e5c8:	beq	1e690 <lchmod@@Base+0x58ec>
   1e5cc:	cmp	r3, #11
   1e5d0:	bgt	1e630 <lchmod@@Base+0x588c>
   1e5d4:	cmp	r3, #3
   1e5d8:	beq	1e690 <lchmod@@Base+0x58ec>
   1e5dc:	cmp	r3, #3
   1e5e0:	bgt	1e600 <lchmod@@Base+0x585c>
   1e5e4:	cmp	r3, #1
   1e5e8:	beq	1e690 <lchmod@@Base+0x58ec>
   1e5ec:	cmp	r3, #1
   1e5f0:	bgt	1e6a4 <lchmod@@Base+0x5900>
   1e5f4:	cmp	r3, #0
   1e5f8:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e5fc:	b	1e6d0 <lchmod@@Base+0x592c>
   1e600:	cmp	r3, #8
   1e604:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e608:	cmp	r3, #8
   1e60c:	bgt	1e61c <lchmod@@Base+0x5878>
   1e610:	cmp	r3, #4
   1e614:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e618:	b	1e6d0 <lchmod@@Base+0x592c>
   1e61c:	cmp	r3, #9
   1e620:	beq	1e690 <lchmod@@Base+0x58ec>
   1e624:	cmp	r3, #10
   1e628:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e62c:	b	1e6d0 <lchmod@@Base+0x592c>
   1e630:	ldr	r2, [pc, #228]	; 1e71c <lchmod@@Base+0x5978>
   1e634:	cmp	r3, r2
   1e638:	bgt	1e66c <lchmod@@Base+0x58c8>
   1e63c:	ldr	r2, [pc, #212]	; 1e718 <lchmod@@Base+0x5974>
   1e640:	cmp	r3, r2
   1e644:	bge	1e6a4 <lchmod@@Base+0x5900>
   1e648:	ldr	r2, [pc, #208]	; 1e720 <lchmod@@Base+0x597c>
   1e64c:	cmp	r3, r2
   1e650:	beq	1e690 <lchmod@@Base+0x58ec>
   1e654:	ldr	r2, [pc, #200]	; 1e724 <lchmod@@Base+0x5980>
   1e658:	cmp	r3, r2
   1e65c:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e660:	cmp	r3, #1024	; 0x400
   1e664:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e668:	b	1e6d0 <lchmod@@Base+0x592c>
   1e66c:	ldr	r2, [pc, #180]	; 1e728 <lchmod@@Base+0x5984>
   1e670:	cmp	r3, r2
   1e674:	beq	1e6a4 <lchmod@@Base+0x5900>
   1e678:	ldr	r2, [pc, #168]	; 1e728 <lchmod@@Base+0x5984>
   1e67c:	cmp	r3, r2
   1e680:	blt	1e690 <lchmod@@Base+0x58ec>
   1e684:	ldr	r2, [pc, #160]	; 1e72c <lchmod@@Base+0x5988>
   1e688:	cmp	r3, r2
   1e68c:	bne	1e6d0 <lchmod@@Base+0x592c>
   1e690:	ldr	r1, [fp, #4]
   1e694:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e698:	bl	11708 <fcntl64@plt>
   1e69c:	str	r0, [fp, #-12]
   1e6a0:	b	1e6fc <lchmod@@Base+0x5958>
   1e6a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e6a8:	add	r2, r3, #4
   1e6ac:	str	r2, [fp, #-32]	; 0xffffffe0
   1e6b0:	ldr	r3, [r3]
   1e6b4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e6b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e6bc:	ldr	r1, [fp, #4]
   1e6c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e6c4:	bl	11708 <fcntl64@plt>
   1e6c8:	str	r0, [fp, #-12]
   1e6cc:	b	1e6fc <lchmod@@Base+0x5958>
   1e6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e6d4:	add	r2, r3, #4
   1e6d8:	str	r2, [fp, #-32]	; 0xffffffe0
   1e6dc:	ldr	r3, [r3]
   1e6e0:	str	r3, [fp, #-28]	; 0xffffffe4
   1e6e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e6e8:	ldr	r1, [fp, #4]
   1e6ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e6f0:	bl	11708 <fcntl64@plt>
   1e6f4:	str	r0, [fp, #-12]
   1e6f8:	nop			; (mov r0, r0)
   1e6fc:	nop			; (mov r0, r0)
   1e700:	ldr	r3, [fp, #-12]
   1e704:	mov	r0, r3
   1e708:	sub	sp, fp, #4
   1e70c:	pop	{fp, lr}
   1e710:	add	sp, sp, #12
   1e714:	bx	lr
   1e718:	andeq	r0, r0, r6, lsl #8
   1e71c:	andeq	r0, r0, r7, lsl #8
   1e720:	andeq	r0, r0, r1, lsl #8
   1e724:	andeq	r0, r0, r2, lsl #8
   1e728:	andeq	r0, r0, r9, lsl #8
   1e72c:	andeq	r0, r0, sl, lsl #8
   1e730:	push	{fp, lr}
   1e734:	add	fp, sp, #4
   1e738:	sub	sp, sp, #16
   1e73c:	str	r0, [fp, #-16]
   1e740:	str	r1, [fp, #-20]	; 0xffffffec
   1e744:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e748:	mov	r1, #0
   1e74c:	ldr	r0, [fp, #-16]
   1e750:	bl	11708 <fcntl64@plt>
   1e754:	str	r0, [fp, #-8]
   1e758:	ldr	r3, [fp, #-8]
   1e75c:	mov	r0, r3
   1e760:	sub	sp, fp, #4
   1e764:	pop	{fp, pc}
   1e768:	push	{fp, lr}
   1e76c:	add	fp, sp, #4
   1e770:	sub	sp, sp, #24
   1e774:	str	r0, [fp, #-24]	; 0xffffffe8
   1e778:	str	r1, [fp, #-28]	; 0xffffffe4
   1e77c:	ldr	r3, [pc, #292]	; 1e8a8 <lchmod@@Base+0x5b04>
   1e780:	ldr	r3, [r3]
   1e784:	cmp	r3, #0
   1e788:	blt	1e7fc <lchmod@@Base+0x5a58>
   1e78c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e790:	ldr	r1, [pc, #276]	; 1e8ac <lchmod@@Base+0x5b08>
   1e794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e798:	bl	11708 <fcntl64@plt>
   1e79c:	str	r0, [fp, #-8]
   1e7a0:	ldr	r3, [fp, #-8]
   1e7a4:	cmp	r3, #0
   1e7a8:	bge	1e7c0 <lchmod@@Base+0x5a1c>
   1e7ac:	bl	116c0 <__errno_location@plt>
   1e7b0:	mov	r3, r0
   1e7b4:	ldr	r3, [r3]
   1e7b8:	cmp	r3, #22
   1e7bc:	beq	1e7d0 <lchmod@@Base+0x5a2c>
   1e7c0:	ldr	r3, [pc, #224]	; 1e8a8 <lchmod@@Base+0x5b04>
   1e7c4:	mov	r2, #1
   1e7c8:	str	r2, [r3]
   1e7cc:	b	1e80c <lchmod@@Base+0x5a68>
   1e7d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7d8:	bl	1e730 <lchmod@@Base+0x598c>
   1e7dc:	str	r0, [fp, #-8]
   1e7e0:	ldr	r3, [fp, #-8]
   1e7e4:	cmp	r3, #0
   1e7e8:	blt	1e80c <lchmod@@Base+0x5a68>
   1e7ec:	ldr	r3, [pc, #180]	; 1e8a8 <lchmod@@Base+0x5b04>
   1e7f0:	mvn	r2, #0
   1e7f4:	str	r2, [r3]
   1e7f8:	b	1e80c <lchmod@@Base+0x5a68>
   1e7fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e804:	bl	1e730 <lchmod@@Base+0x598c>
   1e808:	str	r0, [fp, #-8]
   1e80c:	ldr	r3, [fp, #-8]
   1e810:	cmp	r3, #0
   1e814:	blt	1e898 <lchmod@@Base+0x5af4>
   1e818:	ldr	r3, [pc, #136]	; 1e8a8 <lchmod@@Base+0x5b04>
   1e81c:	ldr	r3, [r3]
   1e820:	cmn	r3, #1
   1e824:	bne	1e898 <lchmod@@Base+0x5af4>
   1e828:	mov	r1, #1
   1e82c:	ldr	r0, [fp, #-8]
   1e830:	bl	11708 <fcntl64@plt>
   1e834:	str	r0, [fp, #-12]
   1e838:	ldr	r3, [fp, #-12]
   1e83c:	cmp	r3, #0
   1e840:	blt	1e868 <lchmod@@Base+0x5ac4>
   1e844:	ldr	r3, [fp, #-12]
   1e848:	orr	r3, r3, #1
   1e84c:	mov	r2, r3
   1e850:	mov	r1, #2
   1e854:	ldr	r0, [fp, #-8]
   1e858:	bl	11708 <fcntl64@plt>
   1e85c:	mov	r3, r0
   1e860:	cmn	r3, #1
   1e864:	bne	1e898 <lchmod@@Base+0x5af4>
   1e868:	bl	116c0 <__errno_location@plt>
   1e86c:	mov	r3, r0
   1e870:	ldr	r3, [r3]
   1e874:	str	r3, [fp, #-16]
   1e878:	ldr	r0, [fp, #-8]
   1e87c:	bl	11804 <close@plt>
   1e880:	bl	116c0 <__errno_location@plt>
   1e884:	mov	r2, r0
   1e888:	ldr	r3, [fp, #-16]
   1e88c:	str	r3, [r2]
   1e890:	mvn	r3, #0
   1e894:	str	r3, [fp, #-8]
   1e898:	ldr	r3, [fp, #-8]
   1e89c:	mov	r0, r3
   1e8a0:	sub	sp, fp, #4
   1e8a4:	pop	{fp, pc}
   1e8a8:	andeq	r1, r3, r4, lsr #6
   1e8ac:	andeq	r0, r0, r6, lsl #8
   1e8b0:	push	{r1, r2, r3}
   1e8b4:	push	{fp, lr}
   1e8b8:	add	fp, sp, #4
   1e8bc:	sub	sp, sp, #20
   1e8c0:	str	r0, [fp, #-20]	; 0xffffffec
   1e8c4:	mov	r3, #0
   1e8c8:	str	r3, [fp, #-12]
   1e8cc:	ldr	r3, [fp, #4]
   1e8d0:	and	r3, r3, #64	; 0x40
   1e8d4:	cmp	r3, #0
   1e8d8:	beq	1e8f8 <lchmod@@Base+0x5b54>
   1e8dc:	add	r3, fp, #8
   1e8e0:	str	r3, [fp, #-16]
   1e8e4:	ldr	r3, [fp, #-16]
   1e8e8:	add	r2, r3, #4
   1e8ec:	str	r2, [fp, #-16]
   1e8f0:	ldr	r3, [r3]
   1e8f4:	str	r3, [fp, #-12]
   1e8f8:	ldr	r2, [fp, #-12]
   1e8fc:	ldr	r1, [fp, #4]
   1e900:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e904:	bl	115dc <open64@plt>
   1e908:	mov	r3, r0
   1e90c:	mov	r0, r3
   1e910:	bl	1c5dc <lchmod@@Base+0x3838>
   1e914:	mov	r3, r0
   1e918:	mov	r0, r3
   1e91c:	sub	sp, fp, #4
   1e920:	pop	{fp, lr}
   1e924:	add	sp, sp, #12
   1e928:	bx	lr
   1e92c:	push	{fp, lr}
   1e930:	add	fp, sp, #4
   1e934:	sub	sp, sp, #16
   1e938:	str	r0, [fp, #-8]
   1e93c:	ldr	r3, [fp, #-8]
   1e940:	ldr	r3, [r3]
   1e944:	and	r3, r3, #256	; 0x100
   1e948:	cmp	r3, #0
   1e94c:	beq	1e968 <lchmod@@Base+0x5bc4>
   1e950:	mov	r3, #1
   1e954:	str	r3, [sp]
   1e958:	mov	r2, #0
   1e95c:	mov	r3, #0
   1e960:	ldr	r0, [fp, #-8]
   1e964:	bl	1e9d4 <lchmod@@Base+0x5c30>
   1e968:	nop			; (mov r0, r0)
   1e96c:	sub	sp, fp, #4
   1e970:	pop	{fp, pc}
   1e974:	push	{fp, lr}
   1e978:	add	fp, sp, #4
   1e97c:	sub	sp, sp, #8
   1e980:	str	r0, [fp, #-8]
   1e984:	ldr	r3, [fp, #-8]
   1e988:	cmp	r3, #0
   1e98c:	beq	1e9a4 <lchmod@@Base+0x5c00>
   1e990:	ldr	r0, [fp, #-8]
   1e994:	bl	1160c <__freading@plt>
   1e998:	mov	r3, r0
   1e99c:	cmp	r3, #0
   1e9a0:	bne	1e9b4 <lchmod@@Base+0x5c10>
   1e9a4:	ldr	r0, [fp, #-8]
   1e9a8:	bl	1148c <fflush@plt>
   1e9ac:	mov	r3, r0
   1e9b0:	b	1e9c8 <lchmod@@Base+0x5c24>
   1e9b4:	ldr	r0, [fp, #-8]
   1e9b8:	bl	1e92c <lchmod@@Base+0x5b88>
   1e9bc:	ldr	r0, [fp, #-8]
   1e9c0:	bl	1148c <fflush@plt>
   1e9c4:	mov	r3, r0
   1e9c8:	mov	r0, r3
   1e9cc:	sub	sp, fp, #4
   1e9d0:	pop	{fp, pc}
   1e9d4:	push	{fp, lr}
   1e9d8:	add	fp, sp, #4
   1e9dc:	sub	sp, sp, #32
   1e9e0:	str	r0, [fp, #-16]
   1e9e4:	strd	r2, [fp, #-28]	; 0xffffffe4
   1e9e8:	ldr	r3, [fp, #-16]
   1e9ec:	ldr	r2, [r3, #8]
   1e9f0:	ldr	r3, [fp, #-16]
   1e9f4:	ldr	r3, [r3, #4]
   1e9f8:	cmp	r2, r3
   1e9fc:	bne	1ea94 <lchmod@@Base+0x5cf0>
   1ea00:	ldr	r3, [fp, #-16]
   1ea04:	ldr	r2, [r3, #20]
   1ea08:	ldr	r3, [fp, #-16]
   1ea0c:	ldr	r3, [r3, #16]
   1ea10:	cmp	r2, r3
   1ea14:	bne	1ea94 <lchmod@@Base+0x5cf0>
   1ea18:	ldr	r3, [fp, #-16]
   1ea1c:	ldr	r3, [r3, #36]	; 0x24
   1ea20:	cmp	r3, #0
   1ea24:	bne	1ea94 <lchmod@@Base+0x5cf0>
   1ea28:	ldr	r0, [fp, #-16]
   1ea2c:	bl	116e4 <fileno@plt>
   1ea30:	mov	r1, r0
   1ea34:	ldr	r3, [fp, #4]
   1ea38:	str	r3, [sp]
   1ea3c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1ea40:	mov	r0, r1
   1ea44:	bl	11588 <lseek64@plt>
   1ea48:	strd	r0, [fp, #-12]
   1ea4c:	ldrd	r2, [fp, #-12]
   1ea50:	mvn	r0, #0
   1ea54:	mvn	r1, #0
   1ea58:	cmp	r3, r1
   1ea5c:	cmpeq	r2, r0
   1ea60:	bne	1ea6c <lchmod@@Base+0x5cc8>
   1ea64:	mvn	r3, #0
   1ea68:	b	1eaac <lchmod@@Base+0x5d08>
   1ea6c:	ldr	r3, [fp, #-16]
   1ea70:	ldr	r3, [r3]
   1ea74:	bic	r2, r3, #16
   1ea78:	ldr	r3, [fp, #-16]
   1ea7c:	str	r2, [r3]
   1ea80:	ldr	r1, [fp, #-16]
   1ea84:	ldrd	r2, [fp, #-12]
   1ea88:	strd	r2, [r1, #80]	; 0x50
   1ea8c:	mov	r3, #0
   1ea90:	b	1eaac <lchmod@@Base+0x5d08>
   1ea94:	ldr	r3, [fp, #4]
   1ea98:	str	r3, [sp]
   1ea9c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1eaa0:	ldr	r0, [fp, #-16]
   1eaa4:	bl	116fc <fseeko64@plt>
   1eaa8:	mov	r3, r0
   1eaac:	mov	r0, r3
   1eab0:	sub	sp, fp, #4
   1eab4:	pop	{fp, pc}
   1eab8:	push	{fp, lr}
   1eabc:	add	fp, sp, #4
   1eac0:	sub	sp, sp, #16
   1eac4:	str	r0, [fp, #-16]
   1eac8:	str	r1, [fp, #-20]	; 0xffffffec
   1eacc:	mov	r3, #0
   1ead0:	str	r3, [fp, #-12]
   1ead4:	ldr	r3, [fp, #-16]
   1ead8:	str	r3, [fp, #-8]
   1eadc:	b	1eb08 <lchmod@@Base+0x5d64>
   1eae0:	ldr	r3, [fp, #-8]
   1eae4:	ldrb	r3, [r3]
   1eae8:	mov	r2, r3
   1eaec:	ldr	r3, [fp, #-12]
   1eaf0:	ror	r3, r3, #23
   1eaf4:	add	r3, r2, r3
   1eaf8:	str	r3, [fp, #-12]
   1eafc:	ldr	r3, [fp, #-8]
   1eb00:	add	r3, r3, #1
   1eb04:	str	r3, [fp, #-8]
   1eb08:	ldr	r3, [fp, #-8]
   1eb0c:	ldrb	r3, [r3]
   1eb10:	cmp	r3, #0
   1eb14:	bne	1eae0 <lchmod@@Base+0x5d3c>
   1eb18:	ldr	r3, [fp, #-12]
   1eb1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eb20:	mov	r0, r3
   1eb24:	bl	1f740 <lchmod@@Base+0x699c>
   1eb28:	mov	r3, r1
   1eb2c:	mov	r0, r3
   1eb30:	sub	sp, fp, #4
   1eb34:	pop	{fp, pc}
   1eb38:	push	{fp, lr}
   1eb3c:	add	fp, sp, #4
   1eb40:	bl	116c0 <__errno_location@plt>
   1eb44:	mov	r2, r0
   1eb48:	mov	r3, #12
   1eb4c:	str	r3, [r2]
   1eb50:	mov	r3, #0
   1eb54:	mov	r0, r3
   1eb58:	pop	{fp, pc}
   1eb5c:	push	{fp, lr}
   1eb60:	add	fp, sp, #4
   1eb64:	sub	sp, sp, #8
   1eb68:	str	r0, [fp, #-8]
   1eb6c:	ldr	r3, [fp, #-8]
   1eb70:	mov	r0, r3
   1eb74:	bl	1db78 <lchmod@@Base+0x4dd4>
   1eb78:	mov	r3, r0
   1eb7c:	mov	r0, r3
   1eb80:	sub	sp, fp, #4
   1eb84:	pop	{fp, pc}
   1eb88:	push	{fp, lr}
   1eb8c:	add	fp, sp, #4
   1eb90:	sub	sp, sp, #8
   1eb94:	str	r0, [fp, #-8]
   1eb98:	str	r1, [fp, #-12]
   1eb9c:	ldr	r3, [fp, #-12]
   1eba0:	cmp	r3, #0
   1eba4:	moveq	r3, #1
   1eba8:	movne	r3, #0
   1ebac:	uxtb	r3, r3
   1ebb0:	mov	r2, r3
   1ebb4:	ldr	r3, [fp, #-12]
   1ebb8:	orr	r3, r2, r3
   1ebbc:	mov	r1, r3
   1ebc0:	ldr	r0, [fp, #-8]
   1ebc4:	bl	1dc20 <lchmod@@Base+0x4e7c>
   1ebc8:	mov	r3, r0
   1ebcc:	mov	r0, r3
   1ebd0:	sub	sp, fp, #4
   1ebd4:	pop	{fp, pc}
   1ebd8:	push	{fp, lr}
   1ebdc:	add	fp, sp, #4
   1ebe0:	sub	sp, sp, #8
   1ebe4:	str	r0, [fp, #-8]
   1ebe8:	str	r1, [fp, #-12]
   1ebec:	ldr	r3, [fp, #-8]
   1ebf0:	ldr	r2, [fp, #-12]
   1ebf4:	mov	r1, r2
   1ebf8:	mov	r0, r3
   1ebfc:	bl	1dab4 <lchmod@@Base+0x4d10>
   1ec00:	mov	r3, r0
   1ec04:	mov	r0, r3
   1ec08:	sub	sp, fp, #4
   1ec0c:	pop	{fp, pc}
   1ec10:	push	{fp, lr}
   1ec14:	add	fp, sp, #4
   1ec18:	sub	sp, sp, #16
   1ec1c:	str	r0, [fp, #-8]
   1ec20:	str	r1, [fp, #-12]
   1ec24:	str	r2, [fp, #-16]
   1ec28:	ldr	r3, [fp, #-12]
   1ec2c:	cmp	r3, #0
   1ec30:	beq	1ec40 <lchmod@@Base+0x5e9c>
   1ec34:	ldr	r3, [fp, #-16]
   1ec38:	cmp	r3, #0
   1ec3c:	bne	1ec50 <lchmod@@Base+0x5eac>
   1ec40:	mov	r3, #1
   1ec44:	str	r3, [fp, #-16]
   1ec48:	ldr	r3, [fp, #-16]
   1ec4c:	str	r3, [fp, #-12]
   1ec50:	ldr	r3, [fp, #-12]
   1ec54:	ldr	r2, [fp, #-16]
   1ec58:	mov	r1, r3
   1ec5c:	ldr	r0, [fp, #-8]
   1ec60:	bl	1ed7c <lchmod@@Base+0x5fd8>
   1ec64:	mov	r3, r0
   1ec68:	mov	r0, r3
   1ec6c:	sub	sp, fp, #4
   1ec70:	pop	{fp, pc}
   1ec74:	push	{fp, lr}
   1ec78:	add	fp, sp, #4
   1ec7c:	sub	sp, sp, #8
   1ec80:	mov	r0, #14
   1ec84:	bl	11738 <nl_langinfo@plt>
   1ec88:	str	r0, [fp, #-8]
   1ec8c:	ldr	r3, [fp, #-8]
   1ec90:	cmp	r3, #0
   1ec94:	bne	1eca0 <lchmod@@Base+0x5efc>
   1ec98:	ldr	r3, [pc, #40]	; 1ecc8 <lchmod@@Base+0x5f24>
   1ec9c:	str	r3, [fp, #-8]
   1eca0:	ldr	r3, [fp, #-8]
   1eca4:	ldrb	r3, [r3]
   1eca8:	cmp	r3, #0
   1ecac:	bne	1ecb8 <lchmod@@Base+0x5f14>
   1ecb0:	ldr	r3, [pc, #20]	; 1eccc <lchmod@@Base+0x5f28>
   1ecb4:	str	r3, [fp, #-8]
   1ecb8:	ldr	r3, [fp, #-8]
   1ecbc:	mov	r0, r3
   1ecc0:	sub	sp, fp, #4
   1ecc4:	pop	{fp, pc}
   1ecc8:	andeq	r0, r2, ip, lsl #15
   1eccc:	muleq	r2, r0, r7
   1ecd0:	push	{fp, lr}
   1ecd4:	add	fp, sp, #4
   1ecd8:	sub	sp, sp, #32
   1ecdc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ece0:	str	r1, [fp, #-28]	; 0xffffffe4
   1ece4:	str	r2, [fp, #-32]	; 0xffffffe0
   1ece8:	str	r3, [fp, #-36]	; 0xffffffdc
   1ecec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ecf0:	cmp	r3, #0
   1ecf4:	bne	1ed00 <lchmod@@Base+0x5f5c>
   1ecf8:	sub	r3, fp, #16
   1ecfc:	str	r3, [fp, #-24]	; 0xffffffe8
   1ed00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ed04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ed08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ed0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed10:	bl	115c4 <mbrtowc@plt>
   1ed14:	str	r0, [fp, #-8]
   1ed18:	ldr	r3, [fp, #-8]
   1ed1c:	cmn	r3, #3
   1ed20:	bls	1ed6c <lchmod@@Base+0x5fc8>
   1ed24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ed28:	cmp	r3, #0
   1ed2c:	beq	1ed6c <lchmod@@Base+0x5fc8>
   1ed30:	mov	r0, #0
   1ed34:	bl	1f350 <lchmod@@Base+0x65ac>
   1ed38:	mov	r3, r0
   1ed3c:	eor	r3, r3, #1
   1ed40:	uxtb	r3, r3
   1ed44:	cmp	r3, #0
   1ed48:	beq	1ed6c <lchmod@@Base+0x5fc8>
   1ed4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ed50:	ldrb	r3, [r3]
   1ed54:	strb	r3, [fp, #-9]
   1ed58:	ldrb	r2, [fp, #-9]
   1ed5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed60:	str	r2, [r3]
   1ed64:	mov	r3, #1
   1ed68:	b	1ed70 <lchmod@@Base+0x5fcc>
   1ed6c:	ldr	r3, [fp, #-8]
   1ed70:	mov	r0, r3
   1ed74:	sub	sp, fp, #4
   1ed78:	pop	{fp, pc}
   1ed7c:	push	{fp, lr}
   1ed80:	add	fp, sp, #4
   1ed84:	sub	sp, sp, #24
   1ed88:	str	r0, [fp, #-16]
   1ed8c:	str	r1, [fp, #-20]	; 0xffffffec
   1ed90:	str	r2, [fp, #-24]	; 0xffffffe8
   1ed94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed98:	cmp	r3, #0
   1ed9c:	beq	1edd8 <lchmod@@Base+0x6034>
   1eda0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eda4:	mvn	r0, #0
   1eda8:	bl	1f554 <lchmod@@Base+0x67b0>
   1edac:	mov	r3, r0
   1edb0:	mov	r2, r3
   1edb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edb8:	cmp	r2, r3
   1edbc:	bcs	1edd8 <lchmod@@Base+0x6034>
   1edc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edc8:	mul	r3, r2, r3
   1edcc:	str	r3, [fp, #-8]
   1edd0:	mov	r3, #1
   1edd4:	b	1edec <lchmod@@Base+0x6048>
   1edd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ede0:	mul	r3, r2, r3
   1ede4:	str	r3, [fp, #-8]
   1ede8:	mov	r3, #0
   1edec:	cmp	r3, #0
   1edf0:	beq	1ee0c <lchmod@@Base+0x6068>
   1edf4:	bl	116c0 <__errno_location@plt>
   1edf8:	mov	r2, r0
   1edfc:	mov	r3, #12
   1ee00:	str	r3, [r2]
   1ee04:	mov	r3, #0
   1ee08:	b	1ee20 <lchmod@@Base+0x607c>
   1ee0c:	ldr	r3, [fp, #-8]
   1ee10:	mov	r1, r3
   1ee14:	ldr	r0, [fp, #-16]
   1ee18:	bl	1dc20 <lchmod@@Base+0x4e7c>
   1ee1c:	mov	r3, r0
   1ee20:	mov	r0, r3
   1ee24:	sub	sp, fp, #4
   1ee28:	pop	{fp, pc}
   1ee2c:	push	{fp, lr}
   1ee30:	add	fp, sp, #4
   1ee34:	sub	sp, sp, #8
   1ee38:	str	r0, [fp, #-8]
   1ee3c:	mov	r2, #3
   1ee40:	mov	r1, #0
   1ee44:	ldr	r0, [fp, #-8]
   1ee48:	bl	1e530 <lchmod@@Base+0x578c>
   1ee4c:	mov	r3, r0
   1ee50:	mov	r0, r3
   1ee54:	sub	sp, fp, #4
   1ee58:	pop	{fp, pc}
   1ee5c:	push	{fp}		; (str fp, [sp, #-4]!)
   1ee60:	add	fp, sp, #0
   1ee64:	sub	sp, sp, #12
   1ee68:	str	r0, [fp, #-8]
   1ee6c:	ldr	r3, [fp, #-8]
   1ee70:	cmp	r3, #90	; 0x5a
   1ee74:	bgt	1ee90 <lchmod@@Base+0x60ec>
   1ee78:	cmp	r3, #65	; 0x41
   1ee7c:	bge	1ee9c <lchmod@@Base+0x60f8>
   1ee80:	sub	r3, r3, #48	; 0x30
   1ee84:	cmp	r3, #9
   1ee88:	bhi	1eea4 <lchmod@@Base+0x6100>
   1ee8c:	b	1ee9c <lchmod@@Base+0x60f8>
   1ee90:	sub	r3, r3, #97	; 0x61
   1ee94:	cmp	r3, #25
   1ee98:	bhi	1eea4 <lchmod@@Base+0x6100>
   1ee9c:	mov	r3, #1
   1eea0:	b	1eea8 <lchmod@@Base+0x6104>
   1eea4:	mov	r3, #0
   1eea8:	mov	r0, r3
   1eeac:	add	sp, fp, #0
   1eeb0:	pop	{fp}		; (ldr fp, [sp], #4)
   1eeb4:	bx	lr
   1eeb8:	push	{fp}		; (str fp, [sp, #-4]!)
   1eebc:	add	fp, sp, #0
   1eec0:	sub	sp, sp, #12
   1eec4:	str	r0, [fp, #-8]
   1eec8:	ldr	r3, [fp, #-8]
   1eecc:	cmp	r3, #65	; 0x41
   1eed0:	blt	1eef0 <lchmod@@Base+0x614c>
   1eed4:	cmp	r3, #90	; 0x5a
   1eed8:	ble	1eee8 <lchmod@@Base+0x6144>
   1eedc:	sub	r3, r3, #97	; 0x61
   1eee0:	cmp	r3, #25
   1eee4:	bhi	1eef0 <lchmod@@Base+0x614c>
   1eee8:	mov	r3, #1
   1eeec:	b	1eef4 <lchmod@@Base+0x6150>
   1eef0:	mov	r3, #0
   1eef4:	mov	r0, r3
   1eef8:	add	sp, fp, #0
   1eefc:	pop	{fp}		; (ldr fp, [sp], #4)
   1ef00:	bx	lr
   1ef04:	push	{fp}		; (str fp, [sp, #-4]!)
   1ef08:	add	fp, sp, #0
   1ef0c:	sub	sp, sp, #12
   1ef10:	str	r0, [fp, #-8]
   1ef14:	ldr	r3, [fp, #-8]
   1ef18:	add	r3, r3, #0
   1ef1c:	cmp	r3, #127	; 0x7f
   1ef20:	bhi	1ef2c <lchmod@@Base+0x6188>
   1ef24:	mov	r3, #1
   1ef28:	b	1ef30 <lchmod@@Base+0x618c>
   1ef2c:	mov	r3, #0
   1ef30:	mov	r0, r3
   1ef34:	add	sp, fp, #0
   1ef38:	pop	{fp}		; (ldr fp, [sp], #4)
   1ef3c:	bx	lr
   1ef40:	push	{fp}		; (str fp, [sp, #-4]!)
   1ef44:	add	fp, sp, #0
   1ef48:	sub	sp, sp, #12
   1ef4c:	str	r0, [fp, #-8]
   1ef50:	ldr	r3, [fp, #-8]
   1ef54:	cmp	r3, #32
   1ef58:	beq	1ef68 <lchmod@@Base+0x61c4>
   1ef5c:	ldr	r3, [fp, #-8]
   1ef60:	cmp	r3, #9
   1ef64:	bne	1ef70 <lchmod@@Base+0x61cc>
   1ef68:	mov	r3, #1
   1ef6c:	b	1ef74 <lchmod@@Base+0x61d0>
   1ef70:	mov	r3, #0
   1ef74:	and	r3, r3, #1
   1ef78:	uxtb	r3, r3
   1ef7c:	mov	r0, r3
   1ef80:	add	sp, fp, #0
   1ef84:	pop	{fp}		; (ldr fp, [sp], #4)
   1ef88:	bx	lr
   1ef8c:	push	{fp}		; (str fp, [sp, #-4]!)
   1ef90:	add	fp, sp, #0
   1ef94:	sub	sp, sp, #12
   1ef98:	str	r0, [fp, #-8]
   1ef9c:	ldr	r3, [fp, #-8]
   1efa0:	cmp	r3, #0
   1efa4:	blt	1efc0 <lchmod@@Base+0x621c>
   1efa8:	cmp	r3, #31
   1efac:	ble	1efb8 <lchmod@@Base+0x6214>
   1efb0:	cmp	r3, #127	; 0x7f
   1efb4:	bne	1efc0 <lchmod@@Base+0x621c>
   1efb8:	mov	r3, #1
   1efbc:	b	1efc4 <lchmod@@Base+0x6220>
   1efc0:	mov	r3, #0
   1efc4:	mov	r0, r3
   1efc8:	add	sp, fp, #0
   1efcc:	pop	{fp}		; (ldr fp, [sp], #4)
   1efd0:	bx	lr
   1efd4:	push	{fp}		; (str fp, [sp, #-4]!)
   1efd8:	add	fp, sp, #0
   1efdc:	sub	sp, sp, #12
   1efe0:	str	r0, [fp, #-8]
   1efe4:	ldr	r3, [fp, #-8]
   1efe8:	sub	r3, r3, #48	; 0x30
   1efec:	cmp	r3, #9
   1eff0:	bhi	1effc <lchmod@@Base+0x6258>
   1eff4:	mov	r3, #1
   1eff8:	b	1f000 <lchmod@@Base+0x625c>
   1effc:	mov	r3, #0
   1f000:	mov	r0, r3
   1f004:	add	sp, fp, #0
   1f008:	pop	{fp}		; (ldr fp, [sp], #4)
   1f00c:	bx	lr
   1f010:	push	{fp}		; (str fp, [sp, #-4]!)
   1f014:	add	fp, sp, #0
   1f018:	sub	sp, sp, #12
   1f01c:	str	r0, [fp, #-8]
   1f020:	ldr	r3, [fp, #-8]
   1f024:	sub	r3, r3, #33	; 0x21
   1f028:	cmp	r3, #93	; 0x5d
   1f02c:	bhi	1f038 <lchmod@@Base+0x6294>
   1f030:	mov	r3, #1
   1f034:	b	1f03c <lchmod@@Base+0x6298>
   1f038:	mov	r3, #0
   1f03c:	mov	r0, r3
   1f040:	add	sp, fp, #0
   1f044:	pop	{fp}		; (ldr fp, [sp], #4)
   1f048:	bx	lr
   1f04c:	push	{fp}		; (str fp, [sp, #-4]!)
   1f050:	add	fp, sp, #0
   1f054:	sub	sp, sp, #12
   1f058:	str	r0, [fp, #-8]
   1f05c:	ldr	r3, [fp, #-8]
   1f060:	sub	r3, r3, #97	; 0x61
   1f064:	cmp	r3, #25
   1f068:	bhi	1f074 <lchmod@@Base+0x62d0>
   1f06c:	mov	r3, #1
   1f070:	b	1f078 <lchmod@@Base+0x62d4>
   1f074:	mov	r3, #0
   1f078:	mov	r0, r3
   1f07c:	add	sp, fp, #0
   1f080:	pop	{fp}		; (ldr fp, [sp], #4)
   1f084:	bx	lr
   1f088:	push	{fp}		; (str fp, [sp, #-4]!)
   1f08c:	add	fp, sp, #0
   1f090:	sub	sp, sp, #12
   1f094:	str	r0, [fp, #-8]
   1f098:	ldr	r3, [fp, #-8]
   1f09c:	sub	r3, r3, #32
   1f0a0:	cmp	r3, #94	; 0x5e
   1f0a4:	bhi	1f0b0 <lchmod@@Base+0x630c>
   1f0a8:	mov	r3, #1
   1f0ac:	b	1f0b4 <lchmod@@Base+0x6310>
   1f0b0:	mov	r3, #0
   1f0b4:	mov	r0, r3
   1f0b8:	add	sp, fp, #0
   1f0bc:	pop	{fp}		; (ldr fp, [sp], #4)
   1f0c0:	bx	lr
   1f0c4:	push	{fp}		; (str fp, [sp, #-4]!)
   1f0c8:	add	fp, sp, #0
   1f0cc:	sub	sp, sp, #12
   1f0d0:	str	r0, [fp, #-8]
   1f0d4:	ldr	r3, [fp, #-8]
   1f0d8:	cmp	r3, #64	; 0x40
   1f0dc:	bgt	1f0f8 <lchmod@@Base+0x6354>
   1f0e0:	cmp	r3, #58	; 0x3a
   1f0e4:	bge	1f114 <lchmod@@Base+0x6370>
   1f0e8:	sub	r3, r3, #33	; 0x21
   1f0ec:	cmp	r3, #14
   1f0f0:	bhi	1f11c <lchmod@@Base+0x6378>
   1f0f4:	b	1f114 <lchmod@@Base+0x6370>
   1f0f8:	cmp	r3, #91	; 0x5b
   1f0fc:	blt	1f11c <lchmod@@Base+0x6378>
   1f100:	cmp	r3, #96	; 0x60
   1f104:	ble	1f114 <lchmod@@Base+0x6370>
   1f108:	sub	r3, r3, #123	; 0x7b
   1f10c:	cmp	r3, #3
   1f110:	bhi	1f11c <lchmod@@Base+0x6378>
   1f114:	mov	r3, #1
   1f118:	b	1f120 <lchmod@@Base+0x637c>
   1f11c:	mov	r3, #0
   1f120:	mov	r0, r3
   1f124:	add	sp, fp, #0
   1f128:	pop	{fp}		; (ldr fp, [sp], #4)
   1f12c:	bx	lr
   1f130:	push	{fp}		; (str fp, [sp, #-4]!)
   1f134:	add	fp, sp, #0
   1f138:	sub	sp, sp, #12
   1f13c:	str	r0, [fp, #-8]
   1f140:	ldr	r3, [fp, #-8]
   1f144:	cmp	r3, #9
   1f148:	blt	1f164 <lchmod@@Base+0x63c0>
   1f14c:	cmp	r3, #13
   1f150:	ble	1f15c <lchmod@@Base+0x63b8>
   1f154:	cmp	r3, #32
   1f158:	bne	1f164 <lchmod@@Base+0x63c0>
   1f15c:	mov	r3, #1
   1f160:	b	1f168 <lchmod@@Base+0x63c4>
   1f164:	mov	r3, #0
   1f168:	mov	r0, r3
   1f16c:	add	sp, fp, #0
   1f170:	pop	{fp}		; (ldr fp, [sp], #4)
   1f174:	bx	lr
   1f178:	push	{fp}		; (str fp, [sp, #-4]!)
   1f17c:	add	fp, sp, #0
   1f180:	sub	sp, sp, #12
   1f184:	str	r0, [fp, #-8]
   1f188:	ldr	r3, [fp, #-8]
   1f18c:	sub	r3, r3, #65	; 0x41
   1f190:	cmp	r3, #25
   1f194:	bhi	1f1a0 <lchmod@@Base+0x63fc>
   1f198:	mov	r3, #1
   1f19c:	b	1f1a4 <lchmod@@Base+0x6400>
   1f1a0:	mov	r3, #0
   1f1a4:	mov	r0, r3
   1f1a8:	add	sp, fp, #0
   1f1ac:	pop	{fp}		; (ldr fp, [sp], #4)
   1f1b0:	bx	lr
   1f1b4:	push	{fp}		; (str fp, [sp, #-4]!)
   1f1b8:	add	fp, sp, #0
   1f1bc:	sub	sp, sp, #12
   1f1c0:	str	r0, [fp, #-8]
   1f1c4:	ldr	r3, [fp, #-8]
   1f1c8:	sub	r3, r3, #48	; 0x30
   1f1cc:	cmp	r3, #54	; 0x36
   1f1d0:	addls	pc, pc, r3, lsl #2
   1f1d4:	b	1f2bc <lchmod@@Base+0x6518>
   1f1d8:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1dc:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1e0:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1e4:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1e8:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1ec:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1f0:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1f4:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1f8:	b	1f2b4 <lchmod@@Base+0x6510>
   1f1fc:	b	1f2b4 <lchmod@@Base+0x6510>
   1f200:	b	1f2bc <lchmod@@Base+0x6518>
   1f204:	b	1f2bc <lchmod@@Base+0x6518>
   1f208:	b	1f2bc <lchmod@@Base+0x6518>
   1f20c:	b	1f2bc <lchmod@@Base+0x6518>
   1f210:	b	1f2bc <lchmod@@Base+0x6518>
   1f214:	b	1f2bc <lchmod@@Base+0x6518>
   1f218:	b	1f2bc <lchmod@@Base+0x6518>
   1f21c:	b	1f2b4 <lchmod@@Base+0x6510>
   1f220:	b	1f2b4 <lchmod@@Base+0x6510>
   1f224:	b	1f2b4 <lchmod@@Base+0x6510>
   1f228:	b	1f2b4 <lchmod@@Base+0x6510>
   1f22c:	b	1f2b4 <lchmod@@Base+0x6510>
   1f230:	b	1f2b4 <lchmod@@Base+0x6510>
   1f234:	b	1f2bc <lchmod@@Base+0x6518>
   1f238:	b	1f2bc <lchmod@@Base+0x6518>
   1f23c:	b	1f2bc <lchmod@@Base+0x6518>
   1f240:	b	1f2bc <lchmod@@Base+0x6518>
   1f244:	b	1f2bc <lchmod@@Base+0x6518>
   1f248:	b	1f2bc <lchmod@@Base+0x6518>
   1f24c:	b	1f2bc <lchmod@@Base+0x6518>
   1f250:	b	1f2bc <lchmod@@Base+0x6518>
   1f254:	b	1f2bc <lchmod@@Base+0x6518>
   1f258:	b	1f2bc <lchmod@@Base+0x6518>
   1f25c:	b	1f2bc <lchmod@@Base+0x6518>
   1f260:	b	1f2bc <lchmod@@Base+0x6518>
   1f264:	b	1f2bc <lchmod@@Base+0x6518>
   1f268:	b	1f2bc <lchmod@@Base+0x6518>
   1f26c:	b	1f2bc <lchmod@@Base+0x6518>
   1f270:	b	1f2bc <lchmod@@Base+0x6518>
   1f274:	b	1f2bc <lchmod@@Base+0x6518>
   1f278:	b	1f2bc <lchmod@@Base+0x6518>
   1f27c:	b	1f2bc <lchmod@@Base+0x6518>
   1f280:	b	1f2bc <lchmod@@Base+0x6518>
   1f284:	b	1f2bc <lchmod@@Base+0x6518>
   1f288:	b	1f2bc <lchmod@@Base+0x6518>
   1f28c:	b	1f2bc <lchmod@@Base+0x6518>
   1f290:	b	1f2bc <lchmod@@Base+0x6518>
   1f294:	b	1f2bc <lchmod@@Base+0x6518>
   1f298:	b	1f2bc <lchmod@@Base+0x6518>
   1f29c:	b	1f2b4 <lchmod@@Base+0x6510>
   1f2a0:	b	1f2b4 <lchmod@@Base+0x6510>
   1f2a4:	b	1f2b4 <lchmod@@Base+0x6510>
   1f2a8:	b	1f2b4 <lchmod@@Base+0x6510>
   1f2ac:	b	1f2b4 <lchmod@@Base+0x6510>
   1f2b0:	b	1f2b4 <lchmod@@Base+0x6510>
   1f2b4:	mov	r3, #1
   1f2b8:	b	1f2c0 <lchmod@@Base+0x651c>
   1f2bc:	mov	r3, #0
   1f2c0:	mov	r0, r3
   1f2c4:	add	sp, fp, #0
   1f2c8:	pop	{fp}		; (ldr fp, [sp], #4)
   1f2cc:	bx	lr
   1f2d0:	push	{fp}		; (str fp, [sp, #-4]!)
   1f2d4:	add	fp, sp, #0
   1f2d8:	sub	sp, sp, #12
   1f2dc:	str	r0, [fp, #-8]
   1f2e0:	ldr	r3, [fp, #-8]
   1f2e4:	sub	r3, r3, #65	; 0x41
   1f2e8:	cmp	r3, #25
   1f2ec:	bhi	1f2fc <lchmod@@Base+0x6558>
   1f2f0:	ldr	r3, [fp, #-8]
   1f2f4:	add	r3, r3, #32
   1f2f8:	b	1f300 <lchmod@@Base+0x655c>
   1f2fc:	ldr	r3, [fp, #-8]
   1f300:	mov	r0, r3
   1f304:	add	sp, fp, #0
   1f308:	pop	{fp}		; (ldr fp, [sp], #4)
   1f30c:	bx	lr
   1f310:	push	{fp}		; (str fp, [sp, #-4]!)
   1f314:	add	fp, sp, #0
   1f318:	sub	sp, sp, #12
   1f31c:	str	r0, [fp, #-8]
   1f320:	ldr	r3, [fp, #-8]
   1f324:	sub	r3, r3, #97	; 0x61
   1f328:	cmp	r3, #25
   1f32c:	bhi	1f33c <lchmod@@Base+0x6598>
   1f330:	ldr	r3, [fp, #-8]
   1f334:	sub	r3, r3, #32
   1f338:	b	1f340 <lchmod@@Base+0x659c>
   1f33c:	ldr	r3, [fp, #-8]
   1f340:	mov	r0, r3
   1f344:	add	sp, fp, #0
   1f348:	pop	{fp}		; (ldr fp, [sp], #4)
   1f34c:	bx	lr
   1f350:	push	{fp, lr}
   1f354:	add	fp, sp, #4
   1f358:	sub	sp, sp, #272	; 0x110
   1f35c:	str	r0, [fp, #-272]	; 0xfffffef0
   1f360:	sub	r3, fp, #264	; 0x108
   1f364:	ldr	r2, [pc, #116]	; 1f3e0 <lchmod@@Base+0x663c>
   1f368:	mov	r1, r3
   1f36c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1f370:	bl	1f4f4 <lchmod@@Base+0x6750>
   1f374:	mov	r3, r0
   1f378:	cmp	r3, #0
   1f37c:	beq	1f388 <lchmod@@Base+0x65e4>
   1f380:	mov	r3, #0
   1f384:	b	1f3d4 <lchmod@@Base+0x6630>
   1f388:	sub	r3, fp, #264	; 0x108
   1f38c:	ldr	r1, [pc, #80]	; 1f3e4 <lchmod@@Base+0x6640>
   1f390:	mov	r0, r3
   1f394:	bl	11468 <strcmp@plt>
   1f398:	mov	r3, r0
   1f39c:	cmp	r3, #0
   1f3a0:	beq	1f3c8 <lchmod@@Base+0x6624>
   1f3a4:	sub	r3, fp, #264	; 0x108
   1f3a8:	ldr	r1, [pc, #56]	; 1f3e8 <lchmod@@Base+0x6644>
   1f3ac:	mov	r0, r3
   1f3b0:	bl	11468 <strcmp@plt>
   1f3b4:	mov	r3, r0
   1f3b8:	cmp	r3, #0
   1f3bc:	beq	1f3c8 <lchmod@@Base+0x6624>
   1f3c0:	mov	r3, #1
   1f3c4:	b	1f3cc <lchmod@@Base+0x6628>
   1f3c8:	mov	r3, #0
   1f3cc:	and	r3, r3, #1
   1f3d0:	uxtb	r3, r3
   1f3d4:	mov	r0, r3
   1f3d8:	sub	sp, fp, #4
   1f3dc:	pop	{fp, pc}
   1f3e0:	andeq	r0, r0, r1, lsl #2
   1f3e4:	muleq	r2, r8, r7
   1f3e8:	muleq	r2, ip, r7
   1f3ec:	push	{fp, lr}
   1f3f0:	add	fp, sp, #4
   1f3f4:	sub	sp, sp, #16
   1f3f8:	str	r0, [fp, #-16]
   1f3fc:	mov	r1, #0
   1f400:	ldr	r0, [fp, #-16]
   1f404:	bl	11714 <setlocale@plt>
   1f408:	str	r0, [fp, #-8]
   1f40c:	ldr	r3, [fp, #-8]
   1f410:	mov	r0, r3
   1f414:	sub	sp, fp, #4
   1f418:	pop	{fp, pc}
   1f41c:	push	{fp, lr}
   1f420:	add	fp, sp, #4
   1f424:	sub	sp, sp, #24
   1f428:	str	r0, [fp, #-16]
   1f42c:	str	r1, [fp, #-20]	; 0xffffffec
   1f430:	str	r2, [fp, #-24]	; 0xffffffe8
   1f434:	ldr	r0, [fp, #-16]
   1f438:	bl	1f3ec <lchmod@@Base+0x6648>
   1f43c:	str	r0, [fp, #-8]
   1f440:	ldr	r3, [fp, #-8]
   1f444:	cmp	r3, #0
   1f448:	bne	1f46c <lchmod@@Base+0x66c8>
   1f44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f450:	cmp	r3, #0
   1f454:	beq	1f464 <lchmod@@Base+0x66c0>
   1f458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f45c:	mov	r2, #0
   1f460:	strb	r2, [r3]
   1f464:	mov	r3, #22
   1f468:	b	1f4e8 <lchmod@@Base+0x6744>
   1f46c:	ldr	r0, [fp, #-8]
   1f470:	bl	11684 <strlen@plt>
   1f474:	str	r0, [fp, #-12]
   1f478:	ldr	r2, [fp, #-12]
   1f47c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f480:	cmp	r2, r3
   1f484:	bcs	1f4a8 <lchmod@@Base+0x6704>
   1f488:	ldr	r3, [fp, #-12]
   1f48c:	add	r3, r3, #1
   1f490:	mov	r2, r3
   1f494:	ldr	r1, [fp, #-8]
   1f498:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f49c:	bl	114d4 <memcpy@plt>
   1f4a0:	mov	r3, #0
   1f4a4:	b	1f4e8 <lchmod@@Base+0x6744>
   1f4a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4ac:	cmp	r3, #0
   1f4b0:	beq	1f4e4 <lchmod@@Base+0x6740>
   1f4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4b8:	sub	r3, r3, #1
   1f4bc:	mov	r2, r3
   1f4c0:	ldr	r1, [fp, #-8]
   1f4c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f4c8:	bl	114d4 <memcpy@plt>
   1f4cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4d0:	sub	r3, r3, #1
   1f4d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f4d8:	add	r3, r2, r3
   1f4dc:	mov	r2, #0
   1f4e0:	strb	r2, [r3]
   1f4e4:	mov	r3, #34	; 0x22
   1f4e8:	mov	r0, r3
   1f4ec:	sub	sp, fp, #4
   1f4f0:	pop	{fp, pc}
   1f4f4:	push	{fp, lr}
   1f4f8:	add	fp, sp, #4
   1f4fc:	sub	sp, sp, #16
   1f500:	str	r0, [fp, #-8]
   1f504:	str	r1, [fp, #-12]
   1f508:	str	r2, [fp, #-16]
   1f50c:	ldr	r2, [fp, #-16]
   1f510:	ldr	r1, [fp, #-12]
   1f514:	ldr	r0, [fp, #-8]
   1f518:	bl	1f41c <lchmod@@Base+0x6678>
   1f51c:	mov	r3, r0
   1f520:	mov	r0, r3
   1f524:	sub	sp, fp, #4
   1f528:	pop	{fp, pc}
   1f52c:	push	{fp, lr}
   1f530:	add	fp, sp, #4
   1f534:	sub	sp, sp, #8
   1f538:	str	r0, [fp, #-8]
   1f53c:	ldr	r0, [fp, #-8]
   1f540:	bl	1f3ec <lchmod@@Base+0x6648>
   1f544:	mov	r3, r0
   1f548:	mov	r0, r3
   1f54c:	sub	sp, fp, #4
   1f550:	pop	{fp, pc}
   1f554:	subs	r2, r1, #1
   1f558:	bxeq	lr
   1f55c:	bcc	1f734 <lchmod@@Base+0x6990>
   1f560:	cmp	r0, r1
   1f564:	bls	1f718 <lchmod@@Base+0x6974>
   1f568:	tst	r1, r2
   1f56c:	beq	1f724 <lchmod@@Base+0x6980>
   1f570:	clz	r3, r0
   1f574:	clz	r2, r1
   1f578:	sub	r3, r2, r3
   1f57c:	rsbs	r3, r3, #31
   1f580:	addne	r3, r3, r3, lsl #1
   1f584:	mov	r2, #0
   1f588:	addne	pc, pc, r3, lsl #2
   1f58c:	nop			; (mov r0, r0)
   1f590:	cmp	r0, r1, lsl #31
   1f594:	adc	r2, r2, r2
   1f598:	subcs	r0, r0, r1, lsl #31
   1f59c:	cmp	r0, r1, lsl #30
   1f5a0:	adc	r2, r2, r2
   1f5a4:	subcs	r0, r0, r1, lsl #30
   1f5a8:	cmp	r0, r1, lsl #29
   1f5ac:	adc	r2, r2, r2
   1f5b0:	subcs	r0, r0, r1, lsl #29
   1f5b4:	cmp	r0, r1, lsl #28
   1f5b8:	adc	r2, r2, r2
   1f5bc:	subcs	r0, r0, r1, lsl #28
   1f5c0:	cmp	r0, r1, lsl #27
   1f5c4:	adc	r2, r2, r2
   1f5c8:	subcs	r0, r0, r1, lsl #27
   1f5cc:	cmp	r0, r1, lsl #26
   1f5d0:	adc	r2, r2, r2
   1f5d4:	subcs	r0, r0, r1, lsl #26
   1f5d8:	cmp	r0, r1, lsl #25
   1f5dc:	adc	r2, r2, r2
   1f5e0:	subcs	r0, r0, r1, lsl #25
   1f5e4:	cmp	r0, r1, lsl #24
   1f5e8:	adc	r2, r2, r2
   1f5ec:	subcs	r0, r0, r1, lsl #24
   1f5f0:	cmp	r0, r1, lsl #23
   1f5f4:	adc	r2, r2, r2
   1f5f8:	subcs	r0, r0, r1, lsl #23
   1f5fc:	cmp	r0, r1, lsl #22
   1f600:	adc	r2, r2, r2
   1f604:	subcs	r0, r0, r1, lsl #22
   1f608:	cmp	r0, r1, lsl #21
   1f60c:	adc	r2, r2, r2
   1f610:	subcs	r0, r0, r1, lsl #21
   1f614:	cmp	r0, r1, lsl #20
   1f618:	adc	r2, r2, r2
   1f61c:	subcs	r0, r0, r1, lsl #20
   1f620:	cmp	r0, r1, lsl #19
   1f624:	adc	r2, r2, r2
   1f628:	subcs	r0, r0, r1, lsl #19
   1f62c:	cmp	r0, r1, lsl #18
   1f630:	adc	r2, r2, r2
   1f634:	subcs	r0, r0, r1, lsl #18
   1f638:	cmp	r0, r1, lsl #17
   1f63c:	adc	r2, r2, r2
   1f640:	subcs	r0, r0, r1, lsl #17
   1f644:	cmp	r0, r1, lsl #16
   1f648:	adc	r2, r2, r2
   1f64c:	subcs	r0, r0, r1, lsl #16
   1f650:	cmp	r0, r1, lsl #15
   1f654:	adc	r2, r2, r2
   1f658:	subcs	r0, r0, r1, lsl #15
   1f65c:	cmp	r0, r1, lsl #14
   1f660:	adc	r2, r2, r2
   1f664:	subcs	r0, r0, r1, lsl #14
   1f668:	cmp	r0, r1, lsl #13
   1f66c:	adc	r2, r2, r2
   1f670:	subcs	r0, r0, r1, lsl #13
   1f674:	cmp	r0, r1, lsl #12
   1f678:	adc	r2, r2, r2
   1f67c:	subcs	r0, r0, r1, lsl #12
   1f680:	cmp	r0, r1, lsl #11
   1f684:	adc	r2, r2, r2
   1f688:	subcs	r0, r0, r1, lsl #11
   1f68c:	cmp	r0, r1, lsl #10
   1f690:	adc	r2, r2, r2
   1f694:	subcs	r0, r0, r1, lsl #10
   1f698:	cmp	r0, r1, lsl #9
   1f69c:	adc	r2, r2, r2
   1f6a0:	subcs	r0, r0, r1, lsl #9
   1f6a4:	cmp	r0, r1, lsl #8
   1f6a8:	adc	r2, r2, r2
   1f6ac:	subcs	r0, r0, r1, lsl #8
   1f6b0:	cmp	r0, r1, lsl #7
   1f6b4:	adc	r2, r2, r2
   1f6b8:	subcs	r0, r0, r1, lsl #7
   1f6bc:	cmp	r0, r1, lsl #6
   1f6c0:	adc	r2, r2, r2
   1f6c4:	subcs	r0, r0, r1, lsl #6
   1f6c8:	cmp	r0, r1, lsl #5
   1f6cc:	adc	r2, r2, r2
   1f6d0:	subcs	r0, r0, r1, lsl #5
   1f6d4:	cmp	r0, r1, lsl #4
   1f6d8:	adc	r2, r2, r2
   1f6dc:	subcs	r0, r0, r1, lsl #4
   1f6e0:	cmp	r0, r1, lsl #3
   1f6e4:	adc	r2, r2, r2
   1f6e8:	subcs	r0, r0, r1, lsl #3
   1f6ec:	cmp	r0, r1, lsl #2
   1f6f0:	adc	r2, r2, r2
   1f6f4:	subcs	r0, r0, r1, lsl #2
   1f6f8:	cmp	r0, r1, lsl #1
   1f6fc:	adc	r2, r2, r2
   1f700:	subcs	r0, r0, r1, lsl #1
   1f704:	cmp	r0, r1
   1f708:	adc	r2, r2, r2
   1f70c:	subcs	r0, r0, r1
   1f710:	mov	r0, r2
   1f714:	bx	lr
   1f718:	moveq	r0, #1
   1f71c:	movne	r0, #0
   1f720:	bx	lr
   1f724:	clz	r2, r1
   1f728:	rsb	r2, r2, #31
   1f72c:	lsr	r0, r0, r2
   1f730:	bx	lr
   1f734:	cmp	r0, #0
   1f738:	mvnne	r0, #0
   1f73c:	b	1f9dc <lchmod@@Base+0x6c38>
   1f740:	cmp	r1, #0
   1f744:	beq	1f734 <lchmod@@Base+0x6990>
   1f748:	push	{r0, r1, lr}
   1f74c:	bl	1f554 <lchmod@@Base+0x67b0>
   1f750:	pop	{r1, r2, lr}
   1f754:	mul	r3, r2, r0
   1f758:	sub	r1, r1, r3
   1f75c:	bx	lr
   1f760:	cmp	r1, #0
   1f764:	beq	1f970 <lchmod@@Base+0x6bcc>
   1f768:	eor	ip, r0, r1
   1f76c:	rsbmi	r1, r1, #0
   1f770:	subs	r2, r1, #1
   1f774:	beq	1f93c <lchmod@@Base+0x6b98>
   1f778:	movs	r3, r0
   1f77c:	rsbmi	r3, r0, #0
   1f780:	cmp	r3, r1
   1f784:	bls	1f948 <lchmod@@Base+0x6ba4>
   1f788:	tst	r1, r2
   1f78c:	beq	1f958 <lchmod@@Base+0x6bb4>
   1f790:	clz	r2, r3
   1f794:	clz	r0, r1
   1f798:	sub	r2, r0, r2
   1f79c:	rsbs	r2, r2, #31
   1f7a0:	addne	r2, r2, r2, lsl #1
   1f7a4:	mov	r0, #0
   1f7a8:	addne	pc, pc, r2, lsl #2
   1f7ac:	nop			; (mov r0, r0)
   1f7b0:	cmp	r3, r1, lsl #31
   1f7b4:	adc	r0, r0, r0
   1f7b8:	subcs	r3, r3, r1, lsl #31
   1f7bc:	cmp	r3, r1, lsl #30
   1f7c0:	adc	r0, r0, r0
   1f7c4:	subcs	r3, r3, r1, lsl #30
   1f7c8:	cmp	r3, r1, lsl #29
   1f7cc:	adc	r0, r0, r0
   1f7d0:	subcs	r3, r3, r1, lsl #29
   1f7d4:	cmp	r3, r1, lsl #28
   1f7d8:	adc	r0, r0, r0
   1f7dc:	subcs	r3, r3, r1, lsl #28
   1f7e0:	cmp	r3, r1, lsl #27
   1f7e4:	adc	r0, r0, r0
   1f7e8:	subcs	r3, r3, r1, lsl #27
   1f7ec:	cmp	r3, r1, lsl #26
   1f7f0:	adc	r0, r0, r0
   1f7f4:	subcs	r3, r3, r1, lsl #26
   1f7f8:	cmp	r3, r1, lsl #25
   1f7fc:	adc	r0, r0, r0
   1f800:	subcs	r3, r3, r1, lsl #25
   1f804:	cmp	r3, r1, lsl #24
   1f808:	adc	r0, r0, r0
   1f80c:	subcs	r3, r3, r1, lsl #24
   1f810:	cmp	r3, r1, lsl #23
   1f814:	adc	r0, r0, r0
   1f818:	subcs	r3, r3, r1, lsl #23
   1f81c:	cmp	r3, r1, lsl #22
   1f820:	adc	r0, r0, r0
   1f824:	subcs	r3, r3, r1, lsl #22
   1f828:	cmp	r3, r1, lsl #21
   1f82c:	adc	r0, r0, r0
   1f830:	subcs	r3, r3, r1, lsl #21
   1f834:	cmp	r3, r1, lsl #20
   1f838:	adc	r0, r0, r0
   1f83c:	subcs	r3, r3, r1, lsl #20
   1f840:	cmp	r3, r1, lsl #19
   1f844:	adc	r0, r0, r0
   1f848:	subcs	r3, r3, r1, lsl #19
   1f84c:	cmp	r3, r1, lsl #18
   1f850:	adc	r0, r0, r0
   1f854:	subcs	r3, r3, r1, lsl #18
   1f858:	cmp	r3, r1, lsl #17
   1f85c:	adc	r0, r0, r0
   1f860:	subcs	r3, r3, r1, lsl #17
   1f864:	cmp	r3, r1, lsl #16
   1f868:	adc	r0, r0, r0
   1f86c:	subcs	r3, r3, r1, lsl #16
   1f870:	cmp	r3, r1, lsl #15
   1f874:	adc	r0, r0, r0
   1f878:	subcs	r3, r3, r1, lsl #15
   1f87c:	cmp	r3, r1, lsl #14
   1f880:	adc	r0, r0, r0
   1f884:	subcs	r3, r3, r1, lsl #14
   1f888:	cmp	r3, r1, lsl #13
   1f88c:	adc	r0, r0, r0
   1f890:	subcs	r3, r3, r1, lsl #13
   1f894:	cmp	r3, r1, lsl #12
   1f898:	adc	r0, r0, r0
   1f89c:	subcs	r3, r3, r1, lsl #12
   1f8a0:	cmp	r3, r1, lsl #11
   1f8a4:	adc	r0, r0, r0
   1f8a8:	subcs	r3, r3, r1, lsl #11
   1f8ac:	cmp	r3, r1, lsl #10
   1f8b0:	adc	r0, r0, r0
   1f8b4:	subcs	r3, r3, r1, lsl #10
   1f8b8:	cmp	r3, r1, lsl #9
   1f8bc:	adc	r0, r0, r0
   1f8c0:	subcs	r3, r3, r1, lsl #9
   1f8c4:	cmp	r3, r1, lsl #8
   1f8c8:	adc	r0, r0, r0
   1f8cc:	subcs	r3, r3, r1, lsl #8
   1f8d0:	cmp	r3, r1, lsl #7
   1f8d4:	adc	r0, r0, r0
   1f8d8:	subcs	r3, r3, r1, lsl #7
   1f8dc:	cmp	r3, r1, lsl #6
   1f8e0:	adc	r0, r0, r0
   1f8e4:	subcs	r3, r3, r1, lsl #6
   1f8e8:	cmp	r3, r1, lsl #5
   1f8ec:	adc	r0, r0, r0
   1f8f0:	subcs	r3, r3, r1, lsl #5
   1f8f4:	cmp	r3, r1, lsl #4
   1f8f8:	adc	r0, r0, r0
   1f8fc:	subcs	r3, r3, r1, lsl #4
   1f900:	cmp	r3, r1, lsl #3
   1f904:	adc	r0, r0, r0
   1f908:	subcs	r3, r3, r1, lsl #3
   1f90c:	cmp	r3, r1, lsl #2
   1f910:	adc	r0, r0, r0
   1f914:	subcs	r3, r3, r1, lsl #2
   1f918:	cmp	r3, r1, lsl #1
   1f91c:	adc	r0, r0, r0
   1f920:	subcs	r3, r3, r1, lsl #1
   1f924:	cmp	r3, r1
   1f928:	adc	r0, r0, r0
   1f92c:	subcs	r3, r3, r1
   1f930:	cmp	ip, #0
   1f934:	rsbmi	r0, r0, #0
   1f938:	bx	lr
   1f93c:	teq	ip, r0
   1f940:	rsbmi	r0, r0, #0
   1f944:	bx	lr
   1f948:	movcc	r0, #0
   1f94c:	asreq	r0, ip, #31
   1f950:	orreq	r0, r0, #1
   1f954:	bx	lr
   1f958:	clz	r2, r1
   1f95c:	rsb	r2, r2, #31
   1f960:	cmp	ip, #0
   1f964:	lsr	r0, r3, r2
   1f968:	rsbmi	r0, r0, #0
   1f96c:	bx	lr
   1f970:	cmp	r0, #0
   1f974:	mvngt	r0, #-2147483648	; 0x80000000
   1f978:	movlt	r0, #-2147483648	; 0x80000000
   1f97c:	b	1f9dc <lchmod@@Base+0x6c38>
   1f980:	cmp	r1, #0
   1f984:	beq	1f970 <lchmod@@Base+0x6bcc>
   1f988:	push	{r0, r1, lr}
   1f98c:	bl	1f768 <lchmod@@Base+0x69c4>
   1f990:	pop	{r1, r2, lr}
   1f994:	mul	r3, r2, r0
   1f998:	sub	r1, r1, r3
   1f99c:	bx	lr
   1f9a0:	cmp	r3, #0
   1f9a4:	cmpeq	r2, #0
   1f9a8:	bne	1f9c0 <lchmod@@Base+0x6c1c>
   1f9ac:	cmp	r1, #0
   1f9b0:	cmpeq	r0, #0
   1f9b4:	mvnne	r1, #0
   1f9b8:	mvnne	r0, #0
   1f9bc:	b	1f9dc <lchmod@@Base+0x6c38>
   1f9c0:	sub	sp, sp, #8
   1f9c4:	push	{sp, lr}
   1f9c8:	bl	1f9ec <lchmod@@Base+0x6c48>
   1f9cc:	ldr	lr, [sp, #4]
   1f9d0:	add	sp, sp, #8
   1f9d4:	pop	{r2, r3}
   1f9d8:	bx	lr
   1f9dc:	push	{r1, lr}
   1f9e0:	mov	r0, #8
   1f9e4:	bl	11450 <raise@plt>
   1f9e8:	pop	{r1, pc}
   1f9ec:	cmp	r1, r3
   1f9f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f9f4:	cmpeq	r0, r2
   1f9f8:	mov	r4, r0
   1f9fc:	mov	r5, r1
   1fa00:	ldr	r9, [sp, #28]
   1fa04:	movcc	r0, #0
   1fa08:	movcc	r1, #0
   1fa0c:	bcc	1fb04 <lchmod@@Base+0x6d60>
   1fa10:	cmp	r3, #0
   1fa14:	clzeq	ip, r2
   1fa18:	clzne	ip, r3
   1fa1c:	addeq	ip, ip, #32
   1fa20:	cmp	r5, #0
   1fa24:	clzeq	r1, r4
   1fa28:	addeq	r1, r1, #32
   1fa2c:	clzne	r1, r5
   1fa30:	sub	ip, ip, r1
   1fa34:	sub	lr, ip, #32
   1fa38:	lsl	r7, r3, ip
   1fa3c:	rsb	r8, ip, #32
   1fa40:	orr	r7, r7, r2, lsl lr
   1fa44:	orr	r7, r7, r2, lsr r8
   1fa48:	lsl	r6, r2, ip
   1fa4c:	cmp	r5, r7
   1fa50:	cmpeq	r4, r6
   1fa54:	movcc	r0, #0
   1fa58:	movcc	r1, #0
   1fa5c:	bcc	1fa78 <lchmod@@Base+0x6cd4>
   1fa60:	mov	r3, #1
   1fa64:	subs	r4, r4, r6
   1fa68:	lsl	r1, r3, lr
   1fa6c:	lsl	r0, r3, ip
   1fa70:	orr	r1, r1, r3, lsr r8
   1fa74:	sbc	r5, r5, r7
   1fa78:	cmp	ip, #0
   1fa7c:	beq	1fb04 <lchmod@@Base+0x6d60>
   1fa80:	lsrs	r3, r7, #1
   1fa84:	rrx	r2, r6
   1fa88:	mov	r6, ip
   1fa8c:	b	1fab0 <lchmod@@Base+0x6d0c>
   1fa90:	subs	r4, r4, r2
   1fa94:	sbc	r5, r5, r3
   1fa98:	adds	r4, r4, r4
   1fa9c:	adc	r5, r5, r5
   1faa0:	adds	r4, r4, #1
   1faa4:	adc	r5, r5, #0
   1faa8:	subs	r6, r6, #1
   1faac:	beq	1facc <lchmod@@Base+0x6d28>
   1fab0:	cmp	r5, r3
   1fab4:	cmpeq	r4, r2
   1fab8:	bcs	1fa90 <lchmod@@Base+0x6cec>
   1fabc:	adds	r4, r4, r4
   1fac0:	adc	r5, r5, r5
   1fac4:	subs	r6, r6, #1
   1fac8:	bne	1fab0 <lchmod@@Base+0x6d0c>
   1facc:	lsr	r6, r4, ip
   1fad0:	lsr	r7, r5, ip
   1fad4:	orr	r6, r6, r5, lsl r8
   1fad8:	adds	r2, r0, r4
   1fadc:	orr	r6, r6, r5, lsr lr
   1fae0:	adc	r3, r1, r5
   1fae4:	lsl	r1, r7, ip
   1fae8:	orr	r1, r1, r6, lsl lr
   1faec:	lsl	r0, r6, ip
   1faf0:	orr	r1, r1, r6, lsr r8
   1faf4:	subs	r0, r2, r0
   1faf8:	mov	r4, r6
   1fafc:	mov	r5, r7
   1fb00:	sbc	r1, r3, r1
   1fb04:	cmp	r9, #0
   1fb08:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1fb0c:	strd	r4, [r9]
   1fb10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fb14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fb18:	mov	r7, r0
   1fb1c:	ldr	r6, [pc, #72]	; 1fb6c <lchmod@@Base+0x6dc8>
   1fb20:	ldr	r5, [pc, #72]	; 1fb70 <lchmod@@Base+0x6dcc>
   1fb24:	add	r6, pc, r6
   1fb28:	add	r5, pc, r5
   1fb2c:	sub	r6, r6, r5
   1fb30:	mov	r8, r1
   1fb34:	mov	r9, r2
   1fb38:	bl	11400 <fstatfs64@plt-0x20>
   1fb3c:	asrs	r6, r6, #2
   1fb40:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fb44:	mov	r4, #0
   1fb48:	add	r4, r4, #1
   1fb4c:	ldr	r3, [r5], #4
   1fb50:	mov	r2, r9
   1fb54:	mov	r1, r8
   1fb58:	mov	r0, r7
   1fb5c:	blx	r3
   1fb60:	cmp	r6, r4
   1fb64:	bne	1fb48 <lchmod@@Base+0x6da4>
   1fb68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fb6c:	ldrdeq	r1, [r1], -ip
   1fb70:	ldrdeq	r1, [r1], -r4
   1fb74:	bx	lr
   1fb78:	ldr	r3, [pc, #12]	; 1fb8c <lchmod@@Base+0x6de8>
   1fb7c:	mov	r1, #0
   1fb80:	add	r3, pc, r3
   1fb84:	ldr	r2, [r3]
   1fb88:	b	116cc <__cxa_atexit@plt>
   1fb8c:	strdeq	r1, [r1], -r4
   1fb90:	mov	r2, r1
   1fb94:	mov	r1, r0
   1fb98:	mov	r0, #3
   1fb9c:	b	117e0 <__xstat64@plt>
   1fba0:	mov	r2, r1
   1fba4:	mov	r1, r0
   1fba8:	mov	r0, #3
   1fbac:	b	11564 <__fxstat64@plt>
   1fbb0:	mov	r2, r1
   1fbb4:	mov	r1, r0
   1fbb8:	mov	r0, #3
   1fbbc:	b	11810 <__lxstat64@plt>
   1fbc0:	push	{lr}		; (str lr, [sp, #-4]!)
   1fbc4:	sub	sp, sp, #12
   1fbc8:	str	r3, [sp]
   1fbcc:	mov	r3, r2
   1fbd0:	mov	r2, r1
   1fbd4:	mov	r1, r0
   1fbd8:	mov	r0, #3
   1fbdc:	bl	1154c <__fxstatat64@plt>
   1fbe0:	add	sp, sp, #12
   1fbe4:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001fbe8 <.fini>:
   1fbe8:	push	{r3, lr}
   1fbec:	pop	{r3, pc}
