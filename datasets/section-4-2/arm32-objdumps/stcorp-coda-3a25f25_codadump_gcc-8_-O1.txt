
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012174 <.init>:
   12174:	push	{r3, lr}
   12178:	bl	12680 <_start@@Base+0x3c>
   1217c:	pop	{r3, pc}

Disassembly of section .plt:

00012180 <coda_cursor_get_byte_size@plt-0x14>:
   12180:	push	{lr}		; (str lr, [sp, #-4]!)
   12184:	ldr	lr, [pc, #4]	; 12190 <coda_cursor_get_byte_size@plt-0x4>
   12188:	add	lr, pc, lr
   1218c:	ldr	pc, [lr, #8]!
   12190:	andeq	r9, r1, r0, ror lr

00012194 <coda_cursor_get_byte_size@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #102400	; 0x19000
   1219c:	ldr	pc, [ip, #3696]!	; 0xe70

000121a0 <coda_type_get_special_type_name@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #102400	; 0x19000
   121a8:	ldr	pc, [ip, #3688]!	; 0xe68

000121ac <coda_set_option_use_fast_size_expressions@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #102400	; 0x19000
   121b4:	ldr	pc, [ip, #3680]!	; 0xe60

000121b8 <raise@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #102400	; 0x19000
   121c0:	ldr	pc, [ip, #3672]!	; 0xe58

000121c4 <coda_get_option_bypass_special_types@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #102400	; 0x19000
   121cc:	ldr	pc, [ip, #3664]!	; 0xe50

000121d0 <coda_set_option_perform_boundary_checks@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #102400	; 0x19000
   121d8:	ldr	pc, [ip, #3656]!	; 0xe48

000121dc <strcmp@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #102400	; 0x19000
   121e4:	ldr	pc, [ip, #3648]!	; 0xe40

000121e8 <strtol@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #102400	; 0x19000
   121f0:	ldr	pc, [ip, #3640]!	; 0xe38

000121f4 <coda_type_get_record_field_hidden_status@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #102400	; 0x19000
   121fc:	ldr	pc, [ip, #3632]!	; 0xe30

00012200 <printf@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #102400	; 0x19000
   12208:	ldr	pc, [ip, #3624]!	; 0xe28

0001220c <coda_cursor_get_record_field_available_status@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #102400	; 0x19000
   12214:	ldr	pc, [ip, #3616]!	; 0xe20

00012218 <fopen@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #102400	; 0x19000
   12220:	ldr	pc, [ip, #3608]!	; 0xe18

00012224 <coda_set_error@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #102400	; 0x19000
   1222c:	ldr	pc, [ip, #3600]!	; 0xe10

00012230 <coda_open@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #102400	; 0x19000
   12238:	ldr	pc, [ip, #3592]!	; 0xe08

0001223c <fflush@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #102400	; 0x19000
   12244:	ldr	pc, [ip, #3584]!	; 0xe00

00012248 <coda_time_double_to_string@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #102400	; 0x19000
   12250:	ldr	pc, [ip, #3576]!	; 0xdf8

00012254 <coda_cursor_get_num_elements@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #102400	; 0x19000
   1225c:	ldr	pc, [ip, #3568]!	; 0xdf0

00012260 <coda_str64u@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #102400	; 0x19000
   12268:	ldr	pc, [ip, #3560]!	; 0xde8

0001226c <free@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #102400	; 0x19000
   12274:	ldr	pc, [ip, #3552]!	; 0xde0

00012278 <coda_set_option_use_mmap@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #102400	; 0x19000
   12280:	ldr	pc, [ip, #3544]!	; 0xdd8

00012284 <coda_set_definition_path_conditional@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #102400	; 0x19000
   1228c:	ldr	pc, [ip, #3536]!	; 0xdd0

00012290 <coda_cursor_read_uint32@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #102400	; 0x19000
   12298:	ldr	pc, [ip, #3528]!	; 0xdc8

0001229c <coda_set_option_bypass_special_types@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #102400	; 0x19000
   122a4:	ldr	pc, [ip, #3520]!	; 0xdc0

000122a8 <coda_type_get_record_field_type@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #102400	; 0x19000
   122b0:	ldr	pc, [ip, #3512]!	; 0xdb8

000122b4 <coda_cursor_get_type@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #102400	; 0x19000
   122bc:	ldr	pc, [ip, #3504]!	; 0xdb0

000122c0 <memcpy@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #102400	; 0x19000
   122c8:	ldr	pc, [ip, #3496]!	; 0xda8

000122cc <coda_isInf@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #102400	; 0x19000
   122d4:	ldr	pc, [ip, #3488]!	; 0xda0

000122d8 <coda_type_get_bit_size@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #102400	; 0x19000
   122e0:	ldr	pc, [ip, #3480]!	; 0xd98

000122e4 <coda_type_get_record_field_available_status@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #102400	; 0x19000
   122ec:	ldr	pc, [ip, #3472]!	; 0xd90

000122f0 <coda_cursor_has_attributes@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #102400	; 0x19000
   122f8:	ldr	pc, [ip, #3464]!	; 0xd88

000122fc <coda_cursor_get_type_class@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #102400	; 0x19000
   12304:	ldr	pc, [ip, #3456]!	; 0xd80

00012308 <coda_set_definition_path@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #102400	; 0x19000
   12310:	ldr	pc, [ip, #3448]!	; 0xd78

00012314 <coda_get_product_format@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #102400	; 0x19000
   1231c:	ldr	pc, [ip, #3440]!	; 0xd70

00012320 <coda_type_get_unit@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #102400	; 0x19000
   12328:	ldr	pc, [ip, #3432]!	; 0xd68

0001232c <coda_type_get_description@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #102400	; 0x19000
   12334:	ldr	pc, [ip, #3424]!	; 0xd60

00012338 <coda_cursor_get_special_type@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #102400	; 0x19000
   12340:	ldr	pc, [ip, #3416]!	; 0xd58

00012344 <coda_cursor_goto_first_array_element@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #102400	; 0x19000
   1234c:	ldr	pc, [ip, #3408]!	; 0xd50

00012350 <fwrite@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #102400	; 0x19000
   12358:	ldr	pc, [ip, #3400]!	; 0xd48

0001235c <coda_cursor_set_product@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #102400	; 0x19000
   12364:	ldr	pc, [ip, #3392]!	; 0xd40

00012368 <coda_cursor_goto_first_record_field@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #102400	; 0x19000
   12370:	ldr	pc, [ip, #3384]!	; 0xd38

00012374 <coda_cursor_goto_record_field_by_index@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #102400	; 0x19000
   1237c:	ldr	pc, [ip, #3376]!	; 0xd30

00012380 <coda_done@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #102400	; 0x19000
   12388:	ldr	pc, [ip, #3368]!	; 0xd28

0001238c <puts@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #102400	; 0x19000
   12394:	ldr	pc, [ip, #3360]!	; 0xd20

00012398 <coda_cursor_get_read_type@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #102400	; 0x19000
   123a0:	ldr	pc, [ip, #3352]!	; 0xd18

000123a4 <malloc@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #102400	; 0x19000
   123ac:	ldr	pc, [ip, #3344]!	; 0xd10

000123b0 <__libc_start_main@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #102400	; 0x19000
   123b8:	ldr	pc, [ip, #3336]!	; 0xd08

000123bc <__gmon_start__@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #102400	; 0x19000
   123c4:	ldr	pc, [ip, #3328]!	; 0xd00

000123c8 <coda_cursor_read_string@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #102400	; 0x19000
   123d0:	ldr	pc, [ip, #3320]!	; 0xcf8

000123d4 <coda_cursor_goto_parent@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #102400	; 0x19000
   123dc:	ldr	pc, [ip, #3312]!	; 0xcf0

000123e0 <coda_type_get_num_record_fields@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #102400	; 0x19000
   123e8:	ldr	pc, [ip, #3304]!	; 0xce8

000123ec <exit@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #102400	; 0x19000
   123f4:	ldr	pc, [ip, #3296]!	; 0xce0

000123f8 <coda_type_get_read_type@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #102400	; 0x19000
   12400:	ldr	pc, [ip, #3288]!	; 0xcd8

00012404 <coda_cursor_get_string_length@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #102400	; 0x19000
   1240c:	ldr	pc, [ip, #3280]!	; 0xcd0

00012410 <coda_cursor_read_uint64@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #102400	; 0x19000
   12418:	ldr	pc, [ip, #3272]!	; 0xcc8

0001241c <coda_cursor_read_double@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #102400	; 0x19000
   12424:	ldr	pc, [ip, #3264]!	; 0xcc0

00012428 <coda_isNaN@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #102400	; 0x19000
   12430:	ldr	pc, [ip, #3256]!	; 0xcb8

00012434 <fprintf@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #102400	; 0x19000
   1243c:	ldr	pc, [ip, #3248]!	; 0xcb0

00012440 <coda_cursor_goto_next_array_element@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #102400	; 0x19000
   12448:	ldr	pc, [ip, #3240]!	; 0xca8

0001244c <coda_open_as@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #102400	; 0x19000
   12454:	ldr	pc, [ip, #3232]!	; 0xca0

00012458 <coda_init@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #102400	; 0x19000
   12460:	ldr	pc, [ip, #3224]!	; 0xc98

00012464 <coda_set_option_perform_conversions@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #102400	; 0x19000
   1246c:	ldr	pc, [ip, #3216]!	; 0xc90

00012470 <coda_cursor_goto_attributes@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #102400	; 0x19000
   12478:	ldr	pc, [ip, #3208]!	; 0xc88

0001247c <coda_cursor_read_char@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #102400	; 0x19000
   12484:	ldr	pc, [ip, #3200]!	; 0xc80

00012488 <memset@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #102400	; 0x19000
   12490:	ldr	pc, [ip, #3192]!	; 0xc78

00012494 <putchar@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #102400	; 0x19000
   1249c:	ldr	pc, [ip, #3184]!	; 0xc70

000124a0 <strncpy@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #102400	; 0x19000
   124a8:	ldr	pc, [ip, #3176]!	; 0xc68

000124ac <coda_type_get_special_type@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #102400	; 0x19000
   124b4:	ldr	pc, [ip, #3168]!	; 0xc60

000124b8 <coda_type_get_record_union_status@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #102400	; 0x19000
   124c0:	ldr	pc, [ip, #3160]!	; 0xc58

000124c4 <coda_cursor_read_complex_double_split@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #102400	; 0x19000
   124cc:	ldr	pc, [ip, #3152]!	; 0xc50

000124d0 <coda_type_get_array_base_type@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #102400	; 0x19000
   124d8:	ldr	pc, [ip, #3144]!	; 0xc48

000124dc <fclose@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #102400	; 0x19000
   124e4:	ldr	pc, [ip, #3136]!	; 0xc40

000124e8 <coda_type_get_string_length@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #102400	; 0x19000
   124f0:	ldr	pc, [ip, #3128]!	; 0xc38

000124f4 <coda_type_get_native_type_name@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #102400	; 0x19000
   124fc:	ldr	pc, [ip, #3120]!	; 0xc30

00012500 <coda_cursor_get_array_dim@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #102400	; 0x19000
   12508:	ldr	pc, [ip, #3112]!	; 0xc28

0001250c <coda_cursor_has_ascii_content@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #102400	; 0x19000
   12514:	ldr	pc, [ip, #3104]!	; 0xc20

00012518 <coda_close@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #102400	; 0x19000
   12520:	ldr	pc, [ip, #3096]!	; 0xc18

00012524 <coda_cursor_read_int64@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #102400	; 0x19000
   1252c:	ldr	pc, [ip, #3088]!	; 0xc10

00012530 <vfprintf@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #102400	; 0x19000
   12538:	ldr	pc, [ip, #3080]!	; 0xc08

0001253c <coda_cursor_goto@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #102400	; 0x19000
   12544:	ldr	pc, [ip, #3072]!	; 0xc00

00012548 <coda_type_get_record_field_index_from_name@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #102400	; 0x19000
   12550:	ldr	pc, [ip, #3064]!	; 0xbf8

00012554 <coda_cursor_read_complex_double_pair@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #102400	; 0x19000
   1255c:	ldr	pc, [ip, #3056]!	; 0xbf0

00012560 <coda_cursor_goto_next_record_field@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #102400	; 0x19000
   12568:	ldr	pc, [ip, #3048]!	; 0xbe8

0001256c <fputc@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #102400	; 0x19000
   12574:	ldr	pc, [ip, #3040]!	; 0xbe0

00012578 <coda_type_get_array_dim@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #102400	; 0x19000
   12580:	ldr	pc, [ip, #3032]!	; 0xbd8

00012584 <coda_cursor_get_bit_size@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #102400	; 0x19000
   1258c:	ldr	pc, [ip, #3024]!	; 0xbd0

00012590 <coda_errno_to_string@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #102400	; 0x19000
   12598:	ldr	pc, [ip, #3016]!	; 0xbc8

0001259c <coda_cursor_use_base_type_of_special_type@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #102400	; 0x19000
   125a4:	ldr	pc, [ip, #3008]!	; 0xbc0

000125a8 <coda_cursor_get_available_union_field_index@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #102400	; 0x19000
   125b0:	ldr	pc, [ip, #3000]!	; 0xbb8

000125b4 <coda_cursor_read_int32@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #102400	; 0x19000
   125bc:	ldr	pc, [ip, #2992]!	; 0xbb0

000125c0 <coda_cursor_get_file_bit_offset@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #102400	; 0x19000
   125c8:	ldr	pc, [ip, #2984]!	; 0xba8

000125cc <coda_get_libcoda_version@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #102400	; 0x19000
   125d4:	ldr	pc, [ip, #2976]!	; 0xba0

000125d8 <coda_get_errno@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #102400	; 0x19000
   125e0:	ldr	pc, [ip, #2968]!	; 0xb98

000125e4 <coda_type_get_special_base_type@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #102400	; 0x19000
   125ec:	ldr	pc, [ip, #2960]!	; 0xb90

000125f0 <coda_type_get_record_field_name@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #102400	; 0x19000
   125f8:	ldr	pc, [ip, #2952]!	; 0xb88

000125fc <fputs@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #102400	; 0x19000
   12604:	ldr	pc, [ip, #2944]!	; 0xb80

00012608 <abort@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #102400	; 0x19000
   12610:	ldr	pc, [ip, #2936]!	; 0xb78

00012614 <coda_cursor_read_bits@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #102400	; 0x19000
   1261c:	ldr	pc, [ip, #2928]!	; 0xb70

00012620 <coda_str64@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #102400	; 0x19000
   12628:	ldr	pc, [ip, #2920]!	; 0xb68

0001262c <__assert_fail@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #102400	; 0x19000
   12634:	ldr	pc, [ip, #2912]!	; 0xb60

00012638 <coda_type_get_class@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #102400	; 0x19000
   12640:	ldr	pc, [ip, #2904]!	; 0xb58

Disassembly of section .text:

00012644 <_start@@Base>:
   12644:	mov	fp, #0
   12648:	mov	lr, #0
   1264c:	pop	{r1}		; (ldr r1, [sp], #4)
   12650:	mov	r2, sp
   12654:	push	{r2}		; (str r2, [sp, #-4]!)
   12658:	push	{r0}		; (str r0, [sp, #-4]!)
   1265c:	ldr	ip, [pc, #16]	; 12674 <_start@@Base+0x30>
   12660:	push	{ip}		; (str ip, [sp, #-4]!)
   12664:	ldr	r0, [pc, #12]	; 12678 <_start@@Base+0x34>
   12668:	ldr	r3, [pc, #12]	; 1267c <_start@@Base+0x38>
   1266c:	bl	123b0 <__libc_start_main@plt>
   12670:	bl	12608 <abort@plt>
   12674:	andeq	sl, r1, r4, lsr #11
   12678:	andeq	r8, r1, r4, lsr #23
   1267c:	andeq	sl, r1, r4, asr #10
   12680:	ldr	r3, [pc, #20]	; 1269c <_start@@Base+0x58>
   12684:	ldr	r2, [pc, #20]	; 126a0 <_start@@Base+0x5c>
   12688:	add	r3, pc, r3
   1268c:	ldr	r2, [r3, r2]
   12690:	cmp	r2, #0
   12694:	bxeq	lr
   12698:	b	123bc <__gmon_start__@plt>
   1269c:	andeq	r9, r1, r0, ror r9
   126a0:	muleq	r0, ip, r1
   126a4:	ldr	r0, [pc, #24]	; 126c4 <_start@@Base+0x80>
   126a8:	ldr	r3, [pc, #24]	; 126c8 <_start@@Base+0x84>
   126ac:	cmp	r3, r0
   126b0:	bxeq	lr
   126b4:	ldr	r3, [pc, #16]	; 126cc <_start@@Base+0x88>
   126b8:	cmp	r3, #0
   126bc:	bxeq	lr
   126c0:	bx	r3
   126c4:			; <UNDEFINED> instruction: 0x0002c1b4
   126c8:			; <UNDEFINED> instruction: 0x0002c1b4
   126cc:	andeq	r0, r0, r0
   126d0:	ldr	r0, [pc, #36]	; 126fc <_start@@Base+0xb8>
   126d4:	ldr	r1, [pc, #36]	; 12700 <_start@@Base+0xbc>
   126d8:	sub	r1, r1, r0
   126dc:	asr	r1, r1, #2
   126e0:	add	r1, r1, r1, lsr #31
   126e4:	asrs	r1, r1, #1
   126e8:	bxeq	lr
   126ec:	ldr	r3, [pc, #16]	; 12704 <_start@@Base+0xc0>
   126f0:	cmp	r3, #0
   126f4:	bxeq	lr
   126f8:	bx	r3
   126fc:			; <UNDEFINED> instruction: 0x0002c1b4
   12700:			; <UNDEFINED> instruction: 0x0002c1b4
   12704:	andeq	r0, r0, r0
   12708:	push	{r4, lr}
   1270c:	ldr	r4, [pc, #24]	; 1272c <_start@@Base+0xe8>
   12710:	ldrb	r3, [r4]
   12714:	cmp	r3, #0
   12718:	popne	{r4, pc}
   1271c:	bl	126a4 <_start@@Base+0x60>
   12720:	mov	r3, #1
   12724:	strb	r3, [r4]
   12728:	pop	{r4, pc}
   1272c:	andeq	ip, r2, r0, asr #3
   12730:	b	126d0 <_start@@Base+0x8c>
   12734:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12738:	strd	r6, [sp, #8]
   1273c:	strd	r8, [sp, #16]
   12740:	strd	sl, [sp, #24]
   12744:	str	lr, [sp, #32]
   12748:	sub	sp, sp, #92	; 0x5c
   1274c:	str	r0, [sp, #16]
   12750:	mov	fp, r1
   12754:	mov	r5, r2
   12758:	mov	sl, r3
   1275c:	movw	r3, #49648	; 0xc1f0
   12760:	movt	r3, #2
   12764:	add	r2, r1, #2
   12768:	add	r1, sp, #84	; 0x54
   1276c:	ldr	r0, [r3, r2, lsl #2]
   12770:	bl	12638 <coda_type_get_class@plt>
   12774:	cmp	r0, #0
   12778:	bne	128f0 <_start@@Base+0x2ac>
   1277c:	ldr	r3, [sp, #84]	; 0x54
   12780:	cmp	r3, #0
   12784:	beq	12a14 <_start@@Base+0x3d0>
   12788:	cmp	r3, #1
   1278c:	bne	12a94 <_start@@Base+0x450>
   12790:	movw	r3, #49648	; 0xc1f0
   12794:	movt	r3, #2
   12798:	add	r2, r5, r5, lsl #2
   1279c:	add	r3, r3, r2, lsl #4
   127a0:	ldr	r3, [r3, #800]	; 0x320
   127a4:	cmp	r5, #0
   127a8:	bne	127bc <_start@@Base+0x178>
   127ac:	movw	r2, #49648	; 0xc1f0
   127b0:	movt	r2, #2
   127b4:	mov	r1, #0
   127b8:	str	r1, [r2, #844]	; 0x34c
   127bc:	movw	r2, #53432	; 0xd0b8
   127c0:	movt	r2, #2
   127c4:	ldr	r6, [r2, #104]	; 0x68
   127c8:	movw	r2, #49648	; 0xc1f0
   127cc:	movt	r2, #2
   127d0:	add	r1, r5, r5, lsl #2
   127d4:	add	r2, r2, r1, lsl #4
   127d8:	ldr	r0, [r2, #804]	; 0x324
   127dc:	add	r7, r0, r3
   127e0:	cmp	r6, r7
   127e4:	blt	1282c <_start@@Base+0x1e8>
   127e8:	movw	r2, #49648	; 0xc1f0
   127ec:	movt	r2, #2
   127f0:	ldr	r2, [r2, #3360]	; 0xd20
   127f4:	sub	r2, r2, #1
   127f8:	cmp	r2, r5
   127fc:	ble	1282c <_start@@Base+0x1e8>
   12800:	movw	r2, #49648	; 0xc1f0
   12804:	movt	r2, #2
   12808:	add	r1, r5, #1
   1280c:	add	r1, r1, r1, lsl #2
   12810:	add	r1, r2, r1, lsl #4
   12814:	add	ip, r5, r5, lsl #2
   12818:	add	r2, r2, ip, lsl #4
   1281c:	ldr	ip, [r2, #844]	; 0x34c
   12820:	ldr	r2, [r2, #840]	; 0x348
   12824:	mul	r2, r2, ip
   12828:	str	r2, [r1, #844]	; 0x34c
   1282c:	cmp	r0, #0
   12830:	ble	132b8 <_start@@Base+0xc74>
   12834:	add	r3, r3, #1
   12838:	movw	r2, #53432	; 0xd0b8
   1283c:	movt	r2, #2
   12840:	add	r3, r2, r3, lsl #2
   12844:	add	r2, sp, #44	; 0x2c
   12848:	add	r1, r5, r5, lsl #2
   1284c:	ldr	ip, [pc, #2692]	; 132d8 <_start@@Base+0xc94>
   12850:	add	r1, ip, r1, lsl #4
   12854:	add	r0, r2, r0, lsl #2
   12858:	mov	r4, #1
   1285c:	movw	lr, #49648	; 0xc1f0
   12860:	movt	lr, #2
   12864:	add	ip, r5, r5, lsl #2
   12868:	add	lr, lr, ip, lsl #4
   1286c:	mov	ip, #0
   12870:	ldr	r8, [r3, #68]	; 0x44
   12874:	cmp	r8, #0
   12878:	ldrne	r9, [lr, #844]	; 0x34c
   1287c:	ldrne	r8, [r3, #104]	; 0x68
   12880:	ldrne	r8, [r8, r9, lsl #2]
   12884:	ldreq	r8, [r3]
   12888:	str	r8, [r2, #4]!
   1288c:	mul	r4, r8, r4
   12890:	str	ip, [r1], #4
   12894:	add	r3, r3, #4
   12898:	cmp	r2, r0
   1289c:	bne	12870 <_start@@Base+0x22c>
   128a0:	cmp	r4, #0
   128a4:	beq	13168 <_start@@Base+0xb24>
   128a8:	ldr	r0, [pc, #2604]	; 132dc <_start@@Base+0xc98>
   128ac:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   128b0:	cmp	r0, #0
   128b4:	bne	132d0 <_start@@Base+0xc8c>
   128b8:	cmp	r4, #0
   128bc:	ble	12a08 <_start@@Base+0x3c4>
   128c0:	add	r3, r5, r5, lsl #2
   128c4:	lsl	r3, r3, #2
   128c8:	str	r3, [sp, #28]
   128cc:	mov	r8, #0
   128d0:	add	r3, r5, #1
   128d4:	str	r3, [sp, #20]
   128d8:	movw	r9, #49648	; 0xc1f0
   128dc:	movt	r9, #2
   128e0:	add	r3, r3, r3, lsl #2
   128e4:	add	r3, r9, r3, lsl #4
   128e8:	str	r3, [sp, #24]
   128ec:	b	12920 <_start@@Base+0x2dc>
   128f0:	bl	18b60 <handle_coda_error@@Base>
   128f4:	b	1277c <_start@@Base+0x138>
   128f8:	bl	18b60 <handle_coda_error@@Base>
   128fc:	b	12950 <_start@@Base+0x30c>
   12900:	movw	r3, #53416	; 0xd0a8
   12904:	movt	r3, #2
   12908:	ldr	r3, [r3]
   1290c:	cmp	r3, #0
   12910:	bne	1297c <_start@@Base+0x338>
   12914:	add	r8, r8, #1
   12918:	cmp	r8, r4
   1291c:	beq	12a08 <_start@@Base+0x3c4>
   12920:	mov	r3, sl
   12924:	ldr	r2, [sp, #20]
   12928:	add	r1, fp, #1
   1292c:	ldr	r0, [sp, #16]
   12930:	bl	12734 <_start@@Base+0xf0>
   12934:	sub	r3, r4, #1
   12938:	cmp	r3, r8
   1293c:	ble	12914 <_start@@Base+0x2d0>
   12940:	ldr	r0, [pc, #2452]	; 132dc <_start@@Base+0xc98>
   12944:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   12948:	cmp	r0, #0
   1294c:	bne	128f8 <_start@@Base+0x2b4>
   12950:	cmp	r6, r7
   12954:	blt	12900 <_start@@Base+0x2bc>
   12958:	ldr	r3, [r9, #3360]	; 0xd20
   1295c:	sub	r3, r3, #1
   12960:	cmp	r3, r5
   12964:	ble	12900 <_start@@Base+0x2bc>
   12968:	ldr	r2, [sp, #24]
   1296c:	ldr	r3, [r2, #844]	; 0x34c
   12970:	add	r3, r3, #1
   12974:	str	r3, [r2, #844]	; 0x34c
   12978:	b	12900 <_start@@Base+0x2bc>
   1297c:	add	r3, r5, r5, lsl #2
   12980:	add	r3, r9, r3, lsl #4
   12984:	ldr	r3, [r3, #804]	; 0x324
   12988:	subs	r1, r3, #1
   1298c:	bmi	12914 <_start@@Base+0x2d0>
   12990:	add	r2, r5, r5, lsl #2
   12994:	add	r2, r1, r2, lsl #2
   12998:	add	r2, r2, #212	; 0xd4
   1299c:	ldr	r0, [r9, r2, lsl #2]
   129a0:	add	r0, r0, #1
   129a4:	str	r0, [r9, r2, lsl #2]
   129a8:	add	r2, sp, #88	; 0x58
   129ac:	add	r2, r2, r1, lsl #2
   129b0:	ldr	r2, [r2, #-40]	; 0xffffffd8
   129b4:	cmp	r0, r2
   129b8:	bne	12914 <_start@@Base+0x2d0>
   129bc:	add	r2, sp, #88	; 0x58
   129c0:	add	r0, r2, r3, lsl #2
   129c4:	sub	r0, r0, #48	; 0x30
   129c8:	ldr	r2, [sp, #28]
   129cc:	add	r3, r2, r3
   129d0:	add	r3, r3, #211	; 0xd3
   129d4:	add	r3, r9, r3, lsl #2
   129d8:	mov	ip, #0
   129dc:	sub	r1, r1, #1
   129e0:	str	ip, [r3], #-4
   129e4:	cmn	r1, #1
   129e8:	beq	12914 <_start@@Base+0x2d0>
   129ec:	ldr	r2, [r3]
   129f0:	add	r2, r2, #1
   129f4:	str	r2, [r3]
   129f8:	ldr	lr, [r0], #-4
   129fc:	cmp	r2, lr
   12a00:	beq	129dc <_start@@Base+0x398>
   12a04:	b	12914 <_start@@Base+0x2d0>
   12a08:	ldr	r0, [pc, #2252]	; 132dc <_start@@Base+0xc98>
   12a0c:	bl	123d4 <coda_cursor_goto_parent@plt>
   12a10:	b	13168 <_start@@Base+0xb24>
   12a14:	movw	r0, #49648	; 0xc1f0
   12a18:	movt	r0, #2
   12a1c:	add	r3, r0, sl, lsl #2
   12a20:	add	r2, sp, #48	; 0x30
   12a24:	ldr	r1, [r3, #3492]	; 0xda4
   12a28:	add	r0, r0, #144	; 0x90
   12a2c:	bl	1220c <coda_cursor_get_record_field_available_status@plt>
   12a30:	cmp	r0, #0
   12a34:	bne	12a84 <_start@@Base+0x440>
   12a38:	ldr	r3, [sp, #48]	; 0x30
   12a3c:	cmp	r3, #0
   12a40:	beq	13168 <_start@@Base+0xb24>
   12a44:	movw	r0, #49648	; 0xc1f0
   12a48:	movt	r0, #2
   12a4c:	add	r3, r0, sl, lsl #2
   12a50:	ldr	r1, [r3, #3492]	; 0xda4
   12a54:	add	r0, r0, #144	; 0x90
   12a58:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   12a5c:	cmp	r0, #0
   12a60:	bne	12a8c <_start@@Base+0x448>
   12a64:	add	r3, sl, #1
   12a68:	mov	r2, r5
   12a6c:	add	r1, fp, #1
   12a70:	ldr	r0, [sp, #16]
   12a74:	bl	12734 <_start@@Base+0xf0>
   12a78:	ldr	r0, [pc, #2140]	; 132dc <_start@@Base+0xc98>
   12a7c:	bl	123d4 <coda_cursor_goto_parent@plt>
   12a80:	b	13168 <_start@@Base+0xb24>
   12a84:	bl	18b60 <handle_coda_error@@Base>
   12a88:	b	12a38 <_start@@Base+0x3f4>
   12a8c:	bl	18b60 <handle_coda_error@@Base>
   12a90:	b	12a64 <_start@@Base+0x420>
   12a94:	movw	r3, #53416	; 0xd0a8
   12a98:	movt	r3, #2
   12a9c:	ldr	r3, [r3]
   12aa0:	cmp	r3, #0
   12aa4:	bne	12af4 <_start@@Base+0x4b0>
   12aa8:	movw	r3, #49648	; 0xc1f0
   12aac:	movt	r3, #2
   12ab0:	add	r2, fp, #2
   12ab4:	add	r1, sp, #32
   12ab8:	ldr	r0, [r3, r2, lsl #2]
   12abc:	bl	12638 <coda_type_get_class@plt>
   12ac0:	cmp	r0, #0
   12ac4:	bne	12bd4 <_start@@Base+0x590>
   12ac8:	ldr	r3, [sp, #32]
   12acc:	cmp	r3, #6
   12ad0:	ldrls	pc, [pc, r3, lsl #2]
   12ad4:	b	1315c <_start@@Base+0xb18>
   12ad8:	muleq	r1, r8, r2
   12adc:	muleq	r1, r8, r2
   12ae0:	ldrdeq	r2, [r1], -ip
   12ae4:	ldrdeq	r2, [r1], -ip
   12ae8:	ldrdeq	r2, [r1], -ip
   12aec:	ldrdeq	r2, [r1], -ip
   12af0:	andeq	r3, r1, r0, ror #1
   12af4:	movw	r3, #49648	; 0xc1f0
   12af8:	movt	r3, #2
   12afc:	ldr	r3, [r3, #136]	; 0x88
   12b00:	cmp	r3, #0
   12b04:	ble	12aa8 <_start@@Base+0x464>
   12b08:	ldr	r7, [pc, #2000]	; 132e0 <_start@@Base+0xc9c>
   12b0c:	mov	r3, #0
   12b10:	mov	r6, r3
   12b14:	movw	r8, #49648	; 0xc1f0
   12b18:	movt	r8, #2
   12b1c:	movw	sl, #53404	; 0xd09c
   12b20:	movt	sl, #2
   12b24:	movw	r2, #42440	; 0xa5c8
   12b28:	movt	r2, #1
   12b2c:	str	r2, [sp, #20]
   12b30:	str	fp, [sp, #24]
   12b34:	mov	fp, r3
   12b38:	b	12b58 <_start@@Base+0x514>
   12b3c:	ldr	r3, [sp, #48]	; 0x30
   12b40:	cmp	r3, #1
   12b44:	beq	12b74 <_start@@Base+0x530>
   12b48:	add	r6, r6, #1
   12b4c:	ldr	r3, [r8, #136]	; 0x88
   12b50:	cmp	r6, r3
   12b54:	bge	12bcc <_start@@Base+0x588>
   12b58:	add	r1, sp, #48	; 0x30
   12b5c:	ldr	r0, [r7, #4]!
   12b60:	bl	12638 <coda_type_get_class@plt>
   12b64:	cmp	r0, #0
   12b68:	beq	12b3c <_start@@Base+0x4f8>
   12b6c:	bl	18b60 <handle_coda_error@@Base>
   12b70:	b	12b3c <_start@@Base+0x4f8>
   12b74:	add	r3, fp, fp, lsl #2
   12b78:	add	r3, r8, r3, lsl #4
   12b7c:	ldr	r3, [r3, #804]	; 0x324
   12b80:	cmp	r3, #0
   12b84:	ble	12bc4 <_start@@Base+0x580>
   12b88:	add	r5, fp, fp, lsl #2
   12b8c:	add	r5, r8, r5, lsl #4
   12b90:	add	r5, r5, #848	; 0x350
   12b94:	mov	r4, #0
   12b98:	add	r9, fp, fp, lsl #2
   12b9c:	add	r9, r8, r9, lsl #4
   12ba0:	ldr	r3, [sl]
   12ba4:	ldr	r2, [r5], #4
   12ba8:	ldr	r1, [sp, #20]
   12bac:	ldr	r0, [sp, #16]
   12bb0:	bl	12434 <fprintf@plt>
   12bb4:	add	r4, r4, #1
   12bb8:	ldr	r3, [r9, #804]	; 0x324
   12bbc:	cmp	r4, r3
   12bc0:	blt	12ba0 <_start@@Base+0x55c>
   12bc4:	add	fp, fp, #1
   12bc8:	b	12b48 <_start@@Base+0x504>
   12bcc:	ldr	fp, [sp, #24]
   12bd0:	b	12aa8 <_start@@Base+0x464>
   12bd4:	bl	18b60 <handle_coda_error@@Base>
   12bd8:	b	12ac8 <_start@@Base+0x484>
   12bdc:	movw	r3, #49648	; 0xc1f0
   12be0:	movt	r3, #2
   12be4:	add	r2, fp, #2
   12be8:	add	r1, sp, #36	; 0x24
   12bec:	ldr	r0, [r3, r2, lsl #2]
   12bf0:	bl	123f8 <coda_type_get_read_type@plt>
   12bf4:	cmp	r0, #0
   12bf8:	bne	12c48 <_start@@Base+0x604>
   12bfc:	ldr	r3, [sp, #36]	; 0x24
   12c00:	add	r3, r3, #1
   12c04:	cmp	r3, #13
   12c08:	ldrls	pc, [pc, r3, lsl #2]
   12c0c:	b	1315c <_start@@Base+0xb18>
   12c10:	andeq	r3, r1, r0, asr #1
   12c14:	andeq	r2, r1, r4, lsr #31
   12c18:	ldrdeq	r2, [r1], -r8
   12c1c:	andeq	r2, r1, r4, lsr #31
   12c20:	ldrdeq	r2, [r1], -r8
   12c24:	andeq	r2, r1, r4, lsr #31
   12c28:	ldrdeq	r2, [r1], -r8
   12c2c:	andeq	r3, r1, ip
   12c30:	andeq	r3, r1, r4, asr #32
   12c34:	andeq	r3, r1, ip, ror r0
   12c38:	andeq	r3, r1, ip, ror r0
   12c3c:	andeq	r2, r1, r0, asr ip
   12c40:	andeq	r2, r1, r8, lsr #25
   12c44:	andeq	r2, r1, r0, ror sp
   12c48:	bl	18b60 <handle_coda_error@@Base>
   12c4c:	b	12bfc <_start@@Base+0x5b8>
   12c50:	add	r1, sp, #48	; 0x30
   12c54:	ldr	r0, [pc, #1664]	; 132dc <_start@@Base+0xc98>
   12c58:	bl	1247c <coda_cursor_read_char@plt>
   12c5c:	cmp	r0, #0
   12c60:	bne	12c90 <_start@@Base+0x64c>
   12c64:	movw	r3, #53804	; 0xd22c
   12c68:	movt	r3, #2
   12c6c:	ldr	r3, [r3]
   12c70:	cmp	r3, #0
   12c74:	beq	12c98 <_start@@Base+0x654>
   12c78:	ldrb	r2, [sp, #48]	; 0x30
   12c7c:	movw	r1, #42448	; 0xa5d0
   12c80:	movt	r1, #1
   12c84:	ldr	r0, [sp, #16]
   12c88:	bl	12434 <fprintf@plt>
   12c8c:	b	1315c <_start@@Base+0xb18>
   12c90:	bl	18b60 <handle_coda_error@@Base>
   12c94:	b	12c64 <_start@@Base+0x620>
   12c98:	ldr	r1, [sp, #16]
   12c9c:	ldrb	r0, [sp, #48]	; 0x30
   12ca0:	bl	1256c <fputc@plt>
   12ca4:	b	1315c <_start@@Base+0xb18>
   12ca8:	add	r1, sp, #48	; 0x30
   12cac:	ldr	r0, [pc, #1576]	; 132dc <_start@@Base+0xc98>
   12cb0:	bl	12404 <coda_cursor_get_string_length@plt>
   12cb4:	cmp	r0, #0
   12cb8:	bne	12d20 <_start@@Base+0x6dc>
   12cbc:	ldr	r0, [sp, #48]	; 0x30
   12cc0:	add	r0, r0, #1
   12cc4:	bl	123a4 <malloc@plt>
   12cc8:	subs	r4, r0, #0
   12ccc:	beq	12d28 <_start@@Base+0x6e4>
   12cd0:	ldr	r2, [sp, #48]	; 0x30
   12cd4:	add	r2, r2, #1
   12cd8:	mov	r1, r4
   12cdc:	ldr	r0, [pc, #1528]	; 132dc <_start@@Base+0xc98>
   12ce0:	bl	123c8 <coda_cursor_read_string@plt>
   12ce4:	cmp	r0, #0
   12ce8:	bne	12d58 <_start@@Base+0x714>
   12cec:	movw	r3, #53804	; 0xd22c
   12cf0:	movt	r3, #2
   12cf4:	ldr	r3, [r3]
   12cf8:	cmp	r3, #0
   12cfc:	beq	12d60 <_start@@Base+0x71c>
   12d00:	mov	r2, r4
   12d04:	movw	r1, #42588	; 0xa65c
   12d08:	movt	r1, #1
   12d0c:	ldr	r0, [sp, #16]
   12d10:	bl	12434 <fprintf@plt>
   12d14:	mov	r0, r4
   12d18:	bl	1226c <free@plt>
   12d1c:	b	1315c <_start@@Base+0xb18>
   12d20:	bl	18b60 <handle_coda_error@@Base>
   12d24:	b	12cbc <_start@@Base+0x678>
   12d28:	mov	r3, #126	; 0x7e
   12d2c:	str	r3, [sp]
   12d30:	movw	r3, #42456	; 0xa5d8
   12d34:	movt	r3, #1
   12d38:	ldr	r2, [sp, #48]	; 0x30
   12d3c:	add	r2, r2, #1
   12d40:	movw	r1, #42532	; 0xa624
   12d44:	movt	r1, #1
   12d48:	mvn	r0, #0
   12d4c:	bl	12224 <coda_set_error@plt>
   12d50:	bl	18b60 <handle_coda_error@@Base>
   12d54:	b	12cd0 <_start@@Base+0x68c>
   12d58:	bl	18b60 <handle_coda_error@@Base>
   12d5c:	b	12cec <_start@@Base+0x6a8>
   12d60:	ldr	r1, [sp, #16]
   12d64:	mov	r0, r4
   12d68:	bl	125fc <fputs@plt>
   12d6c:	b	12d14 <_start@@Base+0x6d0>
   12d70:	add	r1, sp, #48	; 0x30
   12d74:	ldr	r0, [pc, #1376]	; 132dc <_start@@Base+0xc98>
   12d78:	bl	12584 <coda_cursor_get_bit_size@plt>
   12d7c:	cmp	r0, #0
   12d80:	bne	12e10 <_start@@Base+0x7cc>
   12d84:	ldr	r0, [sp, #48]	; 0x30
   12d88:	ldr	ip, [sp, #52]	; 0x34
   12d8c:	ands	r1, r0, #7
   12d90:	movne	r1, #1
   12d94:	lsr	r2, r0, #3
   12d98:	orr	r2, r2, ip, lsl #29
   12d9c:	asr	r3, ip, #3
   12da0:	adds	r6, r2, r1
   12da4:	adc	r7, r3, #0
   12da8:	mov	r0, r6
   12dac:	bl	123a4 <malloc@plt>
   12db0:	subs	r8, r0, #0
   12db4:	beq	12e18 <_start@@Base+0x7d4>
   12db8:	ldrd	r2, [sp, #48]	; 0x30
   12dbc:	strd	r2, [sp]
   12dc0:	mov	r2, #0
   12dc4:	mov	r3, #0
   12dc8:	mov	r1, r8
   12dcc:	ldr	r0, [pc, #1288]	; 132dc <_start@@Base+0xc98>
   12dd0:	bl	12614 <coda_cursor_read_bits@plt>
   12dd4:	cmp	r0, #0
   12dd8:	bne	12e44 <_start@@Base+0x800>
   12ddc:	cmp	r6, #1
   12de0:	sbcs	r3, r7, #0
   12de4:	blt	12f98 <_start@@Base+0x954>
   12de8:	sub	r4, r8, #1
   12dec:	sub	r2, r6, #1
   12df0:	add	r5, r8, r2
   12df4:	movw	r7, #42608	; 0xa670
   12df8:	movt	r7, #1
   12dfc:	movw	r9, #42628	; 0xa684
   12e00:	movt	r9, #1
   12e04:	movw	r6, #42616	; 0xa678
   12e08:	movt	r6, #1
   12e0c:	b	12e80 <_start@@Base+0x83c>
   12e10:	bl	18b60 <handle_coda_error@@Base>
   12e14:	b	12d84 <_start@@Base+0x740>
   12e18:	mov	r3, #163	; 0xa3
   12e1c:	str	r3, [sp]
   12e20:	movw	r3, #42456	; 0xa5d8
   12e24:	movt	r3, #1
   12e28:	mov	r2, r6
   12e2c:	movw	r1, #42532	; 0xa624
   12e30:	movt	r1, #1
   12e34:	mvn	r0, #0
   12e38:	bl	12224 <coda_set_error@plt>
   12e3c:	bl	18b60 <handle_coda_error@@Base>
   12e40:	b	12db8 <_start@@Base+0x774>
   12e44:	bl	18b60 <handle_coda_error@@Base>
   12e48:	b	12ddc <_start@@Base+0x798>
   12e4c:	cmp	r2, #8
   12e50:	beq	12ec8 <_start@@Base+0x884>
   12e54:	bhi	12ee4 <_start@@Base+0x8a0>
   12e58:	cmp	r2, #7
   12e5c:	bne	12f68 <_start@@Base+0x924>
   12e60:	ldr	r3, [sp, #16]
   12e64:	mov	r2, #2
   12e68:	mov	r1, #1
   12e6c:	movw	r0, #42596	; 0xa664
   12e70:	movt	r0, #1
   12e74:	bl	12350 <fwrite@plt>
   12e78:	cmp	r4, r5
   12e7c:	beq	12f98 <_start@@Base+0x954>
   12e80:	ldrb	r2, [r4, #1]!
   12e84:	cmp	r2, #10
   12e88:	beq	12f00 <_start@@Base+0x8bc>
   12e8c:	bls	12e4c <_start@@Base+0x808>
   12e90:	cmp	r2, #12
   12e94:	beq	12f34 <_start@@Base+0x8f0>
   12e98:	bcc	12f18 <_start@@Base+0x8d4>
   12e9c:	cmp	r2, #13
   12ea0:	beq	12f4c <_start@@Base+0x908>
   12ea4:	cmp	r2, #92	; 0x5c
   12ea8:	bne	12f68 <_start@@Base+0x924>
   12eac:	ldr	r3, [sp, #16]
   12eb0:	mov	r2, #2
   12eb4:	mov	r1, #1
   12eb8:	movw	r0, #42624	; 0xa680
   12ebc:	movt	r0, #1
   12ec0:	bl	12350 <fwrite@plt>
   12ec4:	b	12e78 <_start@@Base+0x834>
   12ec8:	ldr	r3, [sp, #16]
   12ecc:	mov	r2, #2
   12ed0:	mov	r1, #1
   12ed4:	movw	r0, #42600	; 0xa668
   12ed8:	movt	r0, #1
   12edc:	bl	12350 <fwrite@plt>
   12ee0:	b	12e78 <_start@@Base+0x834>
   12ee4:	ldr	r3, [sp, #16]
   12ee8:	mov	r2, #2
   12eec:	mov	r1, #1
   12ef0:	movw	r0, #42604	; 0xa66c
   12ef4:	movt	r0, #1
   12ef8:	bl	12350 <fwrite@plt>
   12efc:	b	12e78 <_start@@Base+0x834>
   12f00:	ldr	r3, [sp, #16]
   12f04:	mov	r2, #2
   12f08:	mov	r1, #1
   12f0c:	mov	r0, r7
   12f10:	bl	12350 <fwrite@plt>
   12f14:	b	12e78 <_start@@Base+0x834>
   12f18:	ldr	r3, [sp, #16]
   12f1c:	mov	r2, #2
   12f20:	mov	r1, #1
   12f24:	movw	r0, #42612	; 0xa674
   12f28:	movt	r0, #1
   12f2c:	bl	12350 <fwrite@plt>
   12f30:	b	12e78 <_start@@Base+0x834>
   12f34:	ldr	r3, [sp, #16]
   12f38:	mov	r2, #2
   12f3c:	mov	r1, #1
   12f40:	mov	r0, r6
   12f44:	bl	12350 <fwrite@plt>
   12f48:	b	12e78 <_start@@Base+0x834>
   12f4c:	ldr	r3, [sp, #16]
   12f50:	mov	r2, #2
   12f54:	mov	r1, #1
   12f58:	movw	r0, #42620	; 0xa67c
   12f5c:	movt	r0, #1
   12f60:	bl	12350 <fwrite@plt>
   12f64:	b	12e78 <_start@@Base+0x834>
   12f68:	sub	r3, r2, #32
   12f6c:	uxtb	r3, r3
   12f70:	cmp	r3, #94	; 0x5e
   12f74:	bhi	12f88 <_start@@Base+0x944>
   12f78:	ldr	r1, [sp, #16]
   12f7c:	mov	r0, r2
   12f80:	bl	1256c <fputc@plt>
   12f84:	b	12e78 <_start@@Base+0x834>
   12f88:	mov	r1, r9
   12f8c:	ldr	r0, [sp, #16]
   12f90:	bl	12434 <fprintf@plt>
   12f94:	b	12e78 <_start@@Base+0x834>
   12f98:	mov	r0, r8
   12f9c:	bl	1226c <free@plt>
   12fa0:	b	1315c <_start@@Base+0xb18>
   12fa4:	add	r1, sp, #48	; 0x30
   12fa8:	ldr	r0, [pc, #812]	; 132dc <_start@@Base+0xc98>
   12fac:	bl	125b4 <coda_cursor_read_int32@plt>
   12fb0:	cmp	r0, #0
   12fb4:	bne	12fd0 <_start@@Base+0x98c>
   12fb8:	ldr	r2, [sp, #48]	; 0x30
   12fbc:	movw	r1, #44068	; 0xac24
   12fc0:	movt	r1, #1
   12fc4:	ldr	r0, [sp, #16]
   12fc8:	bl	12434 <fprintf@plt>
   12fcc:	b	1315c <_start@@Base+0xb18>
   12fd0:	bl	18b60 <handle_coda_error@@Base>
   12fd4:	b	12fb8 <_start@@Base+0x974>
   12fd8:	add	r1, sp, #48	; 0x30
   12fdc:	ldr	r0, [pc, #760]	; 132dc <_start@@Base+0xc98>
   12fe0:	bl	12290 <coda_cursor_read_uint32@plt>
   12fe4:	cmp	r0, #0
   12fe8:	bne	13004 <_start@@Base+0x9c0>
   12fec:	ldr	r2, [sp, #48]	; 0x30
   12ff0:	movw	r1, #42636	; 0xa68c
   12ff4:	movt	r1, #1
   12ff8:	ldr	r0, [sp, #16]
   12ffc:	bl	12434 <fprintf@plt>
   13000:	b	1315c <_start@@Base+0xb18>
   13004:	bl	18b60 <handle_coda_error@@Base>
   13008:	b	12fec <_start@@Base+0x9a8>
   1300c:	add	r1, sp, #40	; 0x28
   13010:	ldr	r0, [pc, #708]	; 132dc <_start@@Base+0xc98>
   13014:	bl	12524 <coda_cursor_read_int64@plt>
   13018:	cmp	r0, #0
   1301c:	bne	1303c <_start@@Base+0x9f8>
   13020:	add	r2, sp, #48	; 0x30
   13024:	ldrd	r0, [sp, #40]	; 0x28
   13028:	bl	12620 <coda_str64@plt>
   1302c:	ldr	r1, [sp, #16]
   13030:	add	r0, sp, #48	; 0x30
   13034:	bl	125fc <fputs@plt>
   13038:	b	1315c <_start@@Base+0xb18>
   1303c:	bl	18b60 <handle_coda_error@@Base>
   13040:	b	13020 <_start@@Base+0x9dc>
   13044:	add	r1, sp, #40	; 0x28
   13048:	ldr	r0, [pc, #652]	; 132dc <_start@@Base+0xc98>
   1304c:	bl	12410 <coda_cursor_read_uint64@plt>
   13050:	cmp	r0, #0
   13054:	bne	13074 <_start@@Base+0xa30>
   13058:	add	r2, sp, #48	; 0x30
   1305c:	ldrd	r0, [sp, #40]	; 0x28
   13060:	bl	12260 <coda_str64u@plt>
   13064:	ldr	r1, [sp, #16]
   13068:	add	r0, sp, #48	; 0x30
   1306c:	bl	125fc <fputs@plt>
   13070:	b	1315c <_start@@Base+0xb18>
   13074:	bl	18b60 <handle_coda_error@@Base>
   13078:	b	13058 <_start@@Base+0xa14>
   1307c:	add	r1, sp, #48	; 0x30
   13080:	ldr	r0, [pc, #596]	; 132dc <_start@@Base+0xc98>
   13084:	bl	1241c <coda_cursor_read_double@plt>
   13088:	cmp	r0, #0
   1308c:	bne	130b8 <_start@@Base+0xa74>
   13090:	ldr	r3, [sp, #36]	; 0x24
   13094:	cmp	r3, #8
   13098:	ldrd	r2, [sp, #48]	; 0x30
   1309c:	movweq	r1, #42640	; 0xa690
   130a0:	movteq	r1, #1
   130a4:	movwne	r1, #42648	; 0xa698
   130a8:	movtne	r1, #1
   130ac:	ldr	r0, [sp, #16]
   130b0:	bl	12434 <fprintf@plt>
   130b4:	b	1315c <_start@@Base+0xb18>
   130b8:	bl	18b60 <handle_coda_error@@Base>
   130bc:	b	13090 <_start@@Base+0xa4c>
   130c0:	movw	r3, #42420	; 0xa5b4
   130c4:	movt	r3, #1
   130c8:	movw	r2, #294	; 0x126
   130cc:	movw	r1, #42456	; 0xa5d8
   130d0:	movt	r1, #1
   130d4:	movw	r0, #43484	; 0xa9dc
   130d8:	movt	r0, #1
   130dc:	bl	1262c <__assert_fail@plt>
   130e0:	movw	r3, #49648	; 0xc1f0
   130e4:	movt	r3, #2
   130e8:	add	r2, fp, #2
   130ec:	add	r1, sp, #36	; 0x24
   130f0:	ldr	r0, [r3, r2, lsl #2]
   130f4:	bl	124ac <coda_type_get_special_type@plt>
   130f8:	cmp	r0, #0
   130fc:	bne	13184 <_start@@Base+0xb40>
   13100:	ldr	r3, [sp, #36]	; 0x24
   13104:	cmp	r3, #0
   13108:	beq	1315c <_start@@Base+0xb18>
   1310c:	cmp	r3, #2
   13110:	bls	1318c <_start@@Base+0xb48>
   13114:	cmp	r3, #3
   13118:	bne	1315c <_start@@Base+0xb18>
   1311c:	add	r1, sp, #48	; 0x30
   13120:	ldr	r0, [pc, #436]	; 132dc <_start@@Base+0xc98>
   13124:	bl	12554 <coda_cursor_read_complex_double_pair@plt>
   13128:	cmp	r0, #0
   1312c:	bne	13290 <_start@@Base+0xc4c>
   13130:	ldrd	r2, [sp, #56]	; 0x38
   13134:	strd	r2, [sp, #8]
   13138:	movw	r3, #53404	; 0xd09c
   1313c:	movt	r3, #2
   13140:	ldr	r3, [r3]
   13144:	str	r3, [sp]
   13148:	ldrd	r2, [sp, #48]	; 0x30
   1314c:	movw	r1, #42684	; 0xa6bc
   13150:	movt	r1, #1
   13154:	ldr	r0, [sp, #16]
   13158:	bl	12434 <fprintf@plt>
   1315c:	ldr	r1, [sp, #16]
   13160:	mov	r0, #10
   13164:	bl	1256c <fputc@plt>
   13168:	add	sp, sp, #92	; 0x5c
   1316c:	ldrd	r4, [sp]
   13170:	ldrd	r6, [sp, #8]
   13174:	ldrd	r8, [sp, #16]
   13178:	ldrd	sl, [sp, #24]
   1317c:	add	sp, sp, #32
   13180:	pop	{pc}		; (ldr pc, [sp], #4)
   13184:	bl	18b60 <handle_coda_error@@Base>
   13188:	b	13100 <_start@@Base+0xabc>
   1318c:	add	r1, sp, #40	; 0x28
   13190:	ldr	r0, [pc, #324]	; 132dc <_start@@Base+0xc98>
   13194:	bl	1241c <coda_cursor_read_double@plt>
   13198:	cmp	r0, #0
   1319c:	bne	131d8 <_start@@Base+0xb94>
   131a0:	ldr	r3, [sp, #36]	; 0x24
   131a4:	cmp	r3, #2
   131a8:	bne	131c0 <_start@@Base+0xb7c>
   131ac:	movw	r3, #49636	; 0xc1e4
   131b0:	movt	r3, #2
   131b4:	ldr	r3, [r3]
   131b8:	cmp	r3, #0
   131bc:	bne	131e0 <_start@@Base+0xb9c>
   131c0:	ldrd	r2, [sp, #40]	; 0x28
   131c4:	movw	r1, #42648	; 0xa698
   131c8:	movt	r1, #1
   131cc:	ldr	r0, [sp, #16]
   131d0:	bl	12434 <fprintf@plt>
   131d4:	b	1315c <_start@@Base+0xb18>
   131d8:	bl	18b60 <handle_coda_error@@Base>
   131dc:	b	131a0 <_start@@Base+0xb5c>
   131e0:	vldr	d0, [sp, #40]	; 0x28
   131e4:	bl	12428 <coda_isNaN@plt>
   131e8:	cmp	r0, #0
   131ec:	beq	1324c <_start@@Base+0xc08>
   131f0:	movw	r3, #42692	; 0xa6c4
   131f4:	movt	r3, #1
   131f8:	ldrd	r0, [r3]
   131fc:	strd	r0, [sp, #48]	; 0x30
   13200:	ldrd	r0, [r3, #8]
   13204:	strd	r0, [sp, #56]	; 0x38
   13208:	ldrd	r0, [r3, #16]
   1320c:	strd	r0, [sp, #64]	; 0x40
   13210:	ldrh	r2, [r3, #24]
   13214:	strh	r2, [sp, #72]	; 0x48
   13218:	ldrb	r3, [r3, #26]
   1321c:	strb	r3, [sp, #74]	; 0x4a
   13220:	movw	r3, #53804	; 0xd22c
   13224:	movt	r3, #2
   13228:	ldr	r3, [r3]
   1322c:	cmp	r3, #0
   13230:	beq	13280 <_start@@Base+0xc3c>
   13234:	add	r2, sp, #48	; 0x30
   13238:	movw	r1, #42588	; 0xa65c
   1323c:	movt	r1, #1
   13240:	ldr	r0, [sp, #16]
   13244:	bl	12434 <fprintf@plt>
   13248:	b	1315c <_start@@Base+0xb18>
   1324c:	vldr	d0, [sp, #40]	; 0x28
   13250:	bl	122cc <coda_isInf@plt>
   13254:	cmp	r0, #0
   13258:	bne	131f0 <_start@@Base+0xbac>
   1325c:	add	r1, sp, #48	; 0x30
   13260:	movw	r0, #42656	; 0xa6a0
   13264:	movt	r0, #1
   13268:	vldr	d0, [sp, #40]	; 0x28
   1326c:	bl	12248 <coda_time_double_to_string@plt>
   13270:	cmp	r0, #0
   13274:	beq	13220 <_start@@Base+0xbdc>
   13278:	bl	18b60 <handle_coda_error@@Base>
   1327c:	b	13220 <_start@@Base+0xbdc>
   13280:	ldr	r1, [sp, #16]
   13284:	add	r0, sp, #48	; 0x30
   13288:	bl	125fc <fputs@plt>
   1328c:	b	1315c <_start@@Base+0xb18>
   13290:	bl	18b60 <handle_coda_error@@Base>
   13294:	b	13130 <_start@@Base+0xaec>
   13298:	movw	r3, #42420	; 0xa5b4
   1329c:	movt	r3, #1
   132a0:	mov	r2, #368	; 0x170
   132a4:	movw	r1, #42456	; 0xa5d8
   132a8:	movt	r1, #1
   132ac:	movw	r0, #43484	; 0xa9dc
   132b0:	movt	r0, #1
   132b4:	bl	1262c <__assert_fail@plt>
   132b8:	ldr	r0, [pc, #28]	; 132dc <_start@@Base+0xc98>
   132bc:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   132c0:	cmp	r0, #0
   132c4:	moveq	r4, #1
   132c8:	beq	128c0 <_start@@Base+0x27c>
   132cc:	mov	r4, #1
   132d0:	bl	18b60 <handle_coda_error@@Base>
   132d4:	b	128b8 <_start@@Base+0x274>
   132d8:	andeq	ip, r2, r0, asr #10
   132dc:	andeq	ip, r2, r0, lsl #5
   132e0:	strdeq	ip, [r2], -r4

000132e4 <export_data_element_to_ascii@@Base>:
   132e4:	str	r4, [sp, #-8]!
   132e8:	str	lr, [sp, #4]
   132ec:	movw	r3, #49576	; 0xc1a8
   132f0:	movt	r3, #2
   132f4:	ldr	r3, [r3]
   132f8:	cmp	r3, #0
   132fc:	beq	13380 <export_data_element_to_ascii@@Base+0x9c>
   13300:	movw	r3, #49576	; 0xc1a8
   13304:	movt	r3, #2
   13308:	mov	r2, #0
   1330c:	str	r2, [r3]
   13310:	movw	r3, #53800	; 0xd228
   13314:	movt	r3, #2
   13318:	ldr	r3, [r3]
   1331c:	cmp	r3, #0
   13320:	bne	13398 <export_data_element_to_ascii@@Base+0xb4>
   13324:	movw	r3, #53432	; 0xd0b8
   13328:	movt	r3, #2
   1332c:	ldr	r3, [r3]
   13330:	cmp	r3, #0
   13334:	ble	13358 <export_data_element_to_ascii@@Base+0x74>
   13338:	movw	r2, #53432	; 0xd0b8
   1333c:	movt	r2, #2
   13340:	add	r3, r3, #37	; 0x25
   13344:	lsl	r3, r3, #3
   13348:	add	r2, r2, r3
   1334c:	ldrd	r2, [r2]
   13350:	orrs	r3, r2, r3
   13354:	beq	13374 <export_data_element_to_ascii@@Base+0x90>
   13358:	movw	r0, #53400	; 0xd098
   1335c:	movt	r0, #2
   13360:	mov	r3, #0
   13364:	mov	r2, r3
   13368:	mov	r1, r3
   1336c:	ldr	r0, [r0]
   13370:	bl	12734 <_start@@Base+0xf0>
   13374:	ldr	r4, [sp]
   13378:	add	sp, sp, #4
   1337c:	pop	{pc}		; (ldr pc, [sp], #4)
   13380:	movw	r3, #53400	; 0xd098
   13384:	movt	r3, #2
   13388:	ldr	r1, [r3]
   1338c:	mov	r0, #10
   13390:	bl	1256c <fputc@plt>
   13394:	b	13310 <export_data_element_to_ascii@@Base+0x2c>
   13398:	movw	r4, #53400	; 0xd098
   1339c:	movt	r4, #2
   133a0:	mov	r2, #0
   133a4:	mov	r1, #2
   133a8:	ldr	r0, [r4]
   133ac:	bl	16c48 <print_full_field_name@@Base>
   133b0:	ldr	r1, [r4]
   133b4:	mov	r0, #10
   133b8:	bl	1256c <fputc@plt>
   133bc:	b	13324 <export_data_element_to_ascii@@Base+0x40>
   133c0:	push	{r0, r1, r2, r3}
   133c4:	push	{lr}		; (str lr, [sp, #-4]!)
   133c8:	sub	sp, sp, #12
   133cc:	add	r2, sp, #20
   133d0:	str	r2, [sp, #4]
   133d4:	movw	r3, #53400	; 0xd098
   133d8:	movt	r3, #2
   133dc:	ldr	r1, [sp, #16]
   133e0:	ldr	r0, [r3]
   133e4:	bl	12530 <vfprintf@plt>
   133e8:	add	sp, sp, #12
   133ec:	pop	{lr}		; (ldr lr, [sp], #4)
   133f0:	add	sp, sp, #16
   133f4:	bx	lr
   133f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   133fc:	strd	r6, [sp, #8]
   13400:	str	r8, [sp, #16]
   13404:	str	lr, [sp, #20]
   13408:	subs	r5, r1, #0
   1340c:	ble	13510 <export_data_element_to_ascii@@Base+0x22c>
   13410:	sub	r4, r0, #1
   13414:	add	r5, r4, r5
   13418:	movw	r6, #42608	; 0xa670
   1341c:	movt	r6, #1
   13420:	movw	r8, #42628	; 0xa684
   13424:	movt	r8, #1
   13428:	movw	r7, #42740	; 0xa6f4
   1342c:	movt	r7, #1
   13430:	b	1345c <export_data_element_to_ascii@@Base+0x178>
   13434:	cmp	r1, #8
   13438:	beq	13498 <export_data_element_to_ascii@@Base+0x1b4>
   1343c:	bhi	134a8 <export_data_element_to_ascii@@Base+0x1c4>
   13440:	cmp	r1, #7
   13444:	bne	134f4 <export_data_element_to_ascii@@Base+0x210>
   13448:	movw	r0, #42596	; 0xa664
   1344c:	movt	r0, #1
   13450:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13454:	cmp	r4, r5
   13458:	beq	13510 <export_data_element_to_ascii@@Base+0x22c>
   1345c:	ldrb	r1, [r4, #1]!
   13460:	cmp	r1, #10
   13464:	beq	134b8 <export_data_element_to_ascii@@Base+0x1d4>
   13468:	bls	13434 <export_data_element_to_ascii@@Base+0x150>
   1346c:	cmp	r1, #12
   13470:	beq	134d4 <export_data_element_to_ascii@@Base+0x1f0>
   13474:	bcc	134c4 <export_data_element_to_ascii@@Base+0x1e0>
   13478:	cmp	r1, #13
   1347c:	beq	134e4 <export_data_element_to_ascii@@Base+0x200>
   13480:	cmp	r1, #92	; 0x5c
   13484:	bne	134f4 <export_data_element_to_ascii@@Base+0x210>
   13488:	movw	r0, #42624	; 0xa680
   1348c:	movt	r0, #1
   13490:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13494:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   13498:	movw	r0, #42600	; 0xa668
   1349c:	movt	r0, #1
   134a0:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   134a4:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   134a8:	movw	r0, #42604	; 0xa66c
   134ac:	movt	r0, #1
   134b0:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   134b4:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   134b8:	mov	r0, r6
   134bc:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   134c0:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   134c4:	movw	r0, #42612	; 0xa674
   134c8:	movt	r0, #1
   134cc:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   134d0:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   134d4:	movw	r0, #42616	; 0xa678
   134d8:	movt	r0, #1
   134dc:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   134e0:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   134e4:	movw	r0, #42620	; 0xa67c
   134e8:	movt	r0, #1
   134ec:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   134f0:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   134f4:	sub	r3, r1, #32
   134f8:	uxtb	r3, r3
   134fc:	cmp	r3, #94	; 0x5e
   13500:	movls	r0, r7
   13504:	movhi	r0, r8
   13508:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   1350c:	b	13454 <export_data_element_to_ascii@@Base+0x170>
   13510:	ldrd	r4, [sp]
   13514:	ldrd	r6, [sp, #8]
   13518:	ldr	r8, [sp, #16]
   1351c:	add	sp, sp, #20
   13520:	pop	{pc}		; (ldr pc, [sp], #4)
   13524:	push	{r0, r1, r2, r3}
   13528:	strd	r4, [sp, #-20]!	; 0xffffffec
   1352c:	strd	r6, [sp, #8]
   13530:	str	lr, [sp, #16]
   13534:	sub	sp, sp, #12
   13538:	movw	r3, #49604	; 0xc1c4
   1353c:	movt	r3, #2
   13540:	ldr	r4, [r3]
   13544:	cmp	r4, #0
   13548:	blt	135b8 <export_data_element_to_ascii@@Base+0x2d4>
   1354c:	ble	13580 <export_data_element_to_ascii@@Base+0x29c>
   13550:	movw	r6, #53400	; 0xd098
   13554:	movt	r6, #2
   13558:	movw	r5, #42716	; 0xa6dc
   1355c:	movt	r5, #1
   13560:	mov	r7, #2
   13564:	ldr	r3, [r6]
   13568:	mov	r2, r7
   1356c:	mov	r1, #1
   13570:	mov	r0, r5
   13574:	bl	12350 <fwrite@plt>
   13578:	subs	r4, r4, #1
   1357c:	bne	13564 <export_data_element_to_ascii@@Base+0x280>
   13580:	add	r2, sp, #36	; 0x24
   13584:	str	r2, [sp, #4]
   13588:	movw	r3, #53400	; 0xd098
   1358c:	movt	r3, #2
   13590:	ldr	r1, [sp, #32]
   13594:	ldr	r0, [r3]
   13598:	bl	12530 <vfprintf@plt>
   1359c:	add	sp, sp, #12
   135a0:	ldrd	r4, [sp]
   135a4:	ldrd	r6, [sp, #8]
   135a8:	ldr	lr, [sp, #16]
   135ac:	add	sp, sp, #20
   135b0:	add	sp, sp, #16
   135b4:	bx	lr
   135b8:	movw	r3, #42720	; 0xa6e0
   135bc:	movt	r3, #1
   135c0:	mov	r2, #44	; 0x2c
   135c4:	movw	r1, #42744	; 0xa6f8
   135c8:	movt	r1, #1
   135cc:	movw	r0, #42820	; 0xa744
   135d0:	movt	r0, #1
   135d4:	bl	1262c <__assert_fail@plt>
   135d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   135dc:	strd	r6, [sp, #8]
   135e0:	strd	r8, [sp, #16]
   135e4:	strd	sl, [sp, #24]
   135e8:	str	lr, [sp, #32]
   135ec:	sub	sp, sp, #644	; 0x284
   135f0:	mov	r5, r0
   135f4:	mov	r8, r1
   135f8:	add	r1, sp, #632	; 0x278
   135fc:	bl	122f0 <coda_cursor_has_attributes@plt>
   13600:	cmp	r0, #0
   13604:	bne	13654 <export_data_element_to_ascii@@Base+0x370>
   13608:	ldr	r3, [sp, #632]	; 0x278
   1360c:	cmp	r3, #0
   13610:	bne	1365c <export_data_element_to_ascii@@Base+0x378>
   13614:	add	r1, sp, #636	; 0x27c
   13618:	mov	r0, r5
   1361c:	bl	122fc <coda_cursor_get_type_class@plt>
   13620:	cmp	r0, #0
   13624:	bne	136b8 <export_data_element_to_ascii@@Base+0x3d4>
   13628:	ldr	r3, [sp, #636]	; 0x27c
   1362c:	cmp	r3, #6
   13630:	ldrls	pc, [pc, r3, lsl #2]
   13634:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13638:	andeq	r3, r1, r0, asr #13
   1363c:	andeq	r3, r1, r4, ror sl
   13640:	andeq	r3, r1, r0, lsr sp
   13644:	andeq	r3, r1, r0, lsr sp
   13648:	andeq	r3, r1, r0, lsr sp
   1364c:	andeq	r3, r1, r0, lsr sp
   13650:	andeq	r4, r1, r8, ror #1
   13654:	bl	18b60 <handle_coda_error@@Base>
   13658:	b	13608 <export_data_element_to_ascii@@Base+0x324>
   1365c:	mov	r0, r5
   13660:	bl	12470 <coda_cursor_goto_attributes@plt>
   13664:	cmp	r0, #0
   13668:	bne	136b0 <export_data_element_to_ascii@@Base+0x3cc>
   1366c:	movw	r0, #42832	; 0xa750
   13670:	movt	r0, #1
   13674:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13678:	movw	r4, #49604	; 0xc1c4
   1367c:	movt	r4, #2
   13680:	ldr	r3, [r4]
   13684:	add	r3, r3, #1
   13688:	str	r3, [r4]
   1368c:	mov	r1, r8
   13690:	mov	r0, r5
   13694:	bl	135d8 <export_data_element_to_ascii@@Base+0x2f4>
   13698:	ldr	r3, [r4]
   1369c:	sub	r3, r3, #1
   136a0:	str	r3, [r4]
   136a4:	mov	r0, r5
   136a8:	bl	123d4 <coda_cursor_goto_parent@plt>
   136ac:	b	13614 <export_data_element_to_ascii@@Base+0x330>
   136b0:	bl	18b60 <handle_coda_error@@Base>
   136b4:	b	1366c <export_data_element_to_ascii@@Base+0x388>
   136b8:	bl	18b60 <handle_coda_error@@Base>
   136bc:	b	13628 <export_data_element_to_ascii@@Base+0x344>
   136c0:	add	r1, sp, #36	; 0x24
   136c4:	mov	r0, r5
   136c8:	bl	12254 <coda_cursor_get_num_elements@plt>
   136cc:	cmp	r0, #0
   136d0:	bne	136fc <export_data_element_to_ascii@@Base+0x418>
   136d4:	ldr	r3, [sp, #36]	; 0x24
   136d8:	cmp	r3, #0
   136dc:	bgt	13704 <export_data_element_to_ascii@@Base+0x420>
   136e0:	add	sp, sp, #644	; 0x284
   136e4:	ldrd	r4, [sp]
   136e8:	ldrd	r6, [sp, #8]
   136ec:	ldrd	r8, [sp, #16]
   136f0:	ldrd	sl, [sp, #24]
   136f4:	add	sp, sp, #32
   136f8:	pop	{pc}		; (ldr pc, [sp], #4)
   136fc:	bl	18b60 <handle_coda_error@@Base>
   13700:	b	136d4 <export_data_element_to_ascii@@Base+0x3f0>
   13704:	add	r1, sp, #40	; 0x28
   13708:	mov	r0, r5
   1370c:	bl	122b4 <coda_cursor_get_type@plt>
   13710:	cmp	r0, #0
   13714:	bne	13808 <export_data_element_to_ascii@@Base+0x524>
   13718:	add	r1, sp, #44	; 0x2c
   1371c:	ldr	r0, [sp, #40]	; 0x28
   13720:	bl	124b8 <coda_type_get_record_union_status@plt>
   13724:	cmp	r0, #0
   13728:	bne	13810 <export_data_element_to_ascii@@Base+0x52c>
   1372c:	ldr	r4, [sp, #44]	; 0x2c
   13730:	cmp	r4, #0
   13734:	beq	138b8 <export_data_element_to_ascii@@Base+0x5d4>
   13738:	add	r1, sp, #48	; 0x30
   1373c:	mov	r0, r5
   13740:	bl	125a8 <coda_cursor_get_available_union_field_index@plt>
   13744:	cmp	r0, #0
   13748:	bne	13818 <export_data_element_to_ascii@@Base+0x534>
   1374c:	add	r2, sp, #56	; 0x38
   13750:	ldr	r1, [sp, #48]	; 0x30
   13754:	ldr	r0, [sp, #40]	; 0x28
   13758:	bl	125f0 <coda_type_get_record_field_name@plt>
   1375c:	cmp	r0, #0
   13760:	bne	13820 <export_data_element_to_ascii@@Base+0x53c>
   13764:	ldr	r1, [sp, #48]	; 0x30
   13768:	mov	r0, r5
   1376c:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   13770:	cmp	r0, #0
   13774:	bne	13828 <export_data_element_to_ascii@@Base+0x544>
   13778:	ldr	r1, [sp, #56]	; 0x38
   1377c:	movw	r0, #42848	; 0xa760
   13780:	movt	r0, #1
   13784:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13788:	movw	r3, #49580	; 0xc1ac
   1378c:	movt	r3, #2
   13790:	ldr	r3, [r3]
   13794:	cmp	r3, #0
   13798:	bne	13830 <export_data_element_to_ascii@@Base+0x54c>
   1379c:	movw	r0, #48776	; 0xbe88
   137a0:	movt	r0, #1
   137a4:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   137a8:	movw	r3, #49604	; 0xc1c4
   137ac:	movt	r3, #2
   137b0:	ldr	r2, [r3]
   137b4:	add	r2, r2, #1
   137b8:	str	r2, [r3]
   137bc:	movw	r3, #49584	; 0xc1b0
   137c0:	movt	r3, #2
   137c4:	ldr	r3, [r3]
   137c8:	cmp	r3, r8
   137cc:	movle	r2, #0
   137d0:	movgt	r2, #1
   137d4:	orrs	r3, r2, r3, lsr #31
   137d8:	beq	138a8 <export_data_element_to_ascii@@Base+0x5c4>
   137dc:	add	r1, r8, #1
   137e0:	mov	r0, r5
   137e4:	bl	135d8 <export_data_element_to_ascii@@Base+0x2f4>
   137e8:	movw	r3, #49604	; 0xc1c4
   137ec:	movt	r3, #2
   137f0:	ldr	r2, [r3]
   137f4:	sub	r2, r2, #1
   137f8:	str	r2, [r3]
   137fc:	mov	r0, r5
   13800:	bl	123d4 <coda_cursor_goto_parent@plt>
   13804:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13808:	bl	18b60 <handle_coda_error@@Base>
   1380c:	b	13718 <export_data_element_to_ascii@@Base+0x434>
   13810:	bl	18b60 <handle_coda_error@@Base>
   13814:	b	1372c <export_data_element_to_ascii@@Base+0x448>
   13818:	bl	18b60 <handle_coda_error@@Base>
   1381c:	b	1374c <export_data_element_to_ascii@@Base+0x468>
   13820:	bl	18b60 <handle_coda_error@@Base>
   13824:	b	13764 <export_data_element_to_ascii@@Base+0x480>
   13828:	bl	18b60 <handle_coda_error@@Base>
   1382c:	b	13778 <export_data_element_to_ascii@@Base+0x494>
   13830:	add	r1, sp, #80	; 0x50
   13834:	mov	r0, r5
   13838:	bl	125c0 <coda_cursor_get_file_bit_offset@plt>
   1383c:	cmp	r0, #0
   13840:	bne	138a0 <export_data_element_to_ascii@@Base+0x5bc>
   13844:	ldrd	r6, [sp, #80]	; 0x50
   13848:	cmp	r6, #0
   1384c:	sbcs	r3, r7, #0
   13850:	blt	1379c <export_data_element_to_ascii@@Base+0x4b8>
   13854:	lsr	r0, r6, #3
   13858:	add	r2, sp, #112	; 0x70
   1385c:	orr	r0, r0, r7, lsl #29
   13860:	asr	r1, r7, #3
   13864:	bl	12620 <coda_str64@plt>
   13868:	add	r1, sp, #112	; 0x70
   1386c:	movw	r0, #42856	; 0xa768
   13870:	movt	r0, #1
   13874:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13878:	ldr	r1, [sp, #80]	; 0x50
   1387c:	and	r2, r1, #7
   13880:	mov	r3, #0
   13884:	orrs	r3, r2, r3
   13888:	beq	1379c <export_data_element_to_ascii@@Base+0x4b8>
   1388c:	mov	r1, r2
   13890:	movw	r0, #42860	; 0xa76c
   13894:	movt	r0, #1
   13898:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   1389c:	b	1379c <export_data_element_to_ascii@@Base+0x4b8>
   138a0:	bl	18b60 <handle_coda_error@@Base>
   138a4:	b	13844 <export_data_element_to_ascii@@Base+0x560>
   138a8:	movw	r0, #42864	; 0xa770
   138ac:	movt	r0, #1
   138b0:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   138b4:	b	137e8 <export_data_element_to_ascii@@Base+0x504>
   138b8:	mov	r0, r5
   138bc:	bl	12368 <coda_cursor_goto_first_record_field@plt>
   138c0:	cmp	r0, #0
   138c4:	bne	13900 <export_data_element_to_ascii@@Base+0x61c>
   138c8:	mov	r3, #0
   138cc:	str	r3, [sp, #48]	; 0x30
   138d0:	ldr	r3, [sp, #36]	; 0x24
   138d4:	cmp	r3, #0
   138d8:	ble	13a68 <export_data_element_to_ascii@@Base+0x784>
   138dc:	movw	fp, #42848	; 0xa760
   138e0:	movt	fp, #1
   138e4:	movw	sl, #49580	; 0xc1ac
   138e8:	movt	sl, #2
   138ec:	movw	r9, #49604	; 0xc1c4
   138f0:	movt	r9, #2
   138f4:	mov	r1, r4
   138f8:	mov	r6, r5
   138fc:	b	139c0 <export_data_element_to_ascii@@Base+0x6dc>
   13900:	bl	18b60 <handle_coda_error@@Base>
   13904:	b	138c8 <export_data_element_to_ascii@@Base+0x5e4>
   13908:	bl	18b60 <handle_coda_error@@Base>
   1390c:	b	139d4 <export_data_element_to_ascii@@Base+0x6f0>
   13910:	add	r1, sp, #80	; 0x50
   13914:	mov	r0, r6
   13918:	bl	125c0 <coda_cursor_get_file_bit_offset@plt>
   1391c:	cmp	r0, #0
   13920:	bne	1398c <export_data_element_to_ascii@@Base+0x6a8>
   13924:	ldrd	r4, [sp, #80]	; 0x50
   13928:	cmp	r4, #0
   1392c:	sbcs	r3, r5, #0
   13930:	blt	139ec <export_data_element_to_ascii@@Base+0x708>
   13934:	lsr	r0, r4, #3
   13938:	add	r2, sp, #112	; 0x70
   1393c:	orr	r0, r0, r5, lsl #29
   13940:	asr	r1, r5, #3
   13944:	bl	12620 <coda_str64@plt>
   13948:	add	r1, sp, #112	; 0x70
   1394c:	movw	r0, #42856	; 0xa768
   13950:	movt	r0, #1
   13954:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13958:	ldr	r1, [sp, #80]	; 0x50
   1395c:	and	r3, r1, #7
   13960:	str	r3, [sp, #8]
   13964:	mov	r3, #0
   13968:	str	r3, [sp, #12]
   1396c:	ldrd	r2, [sp, #8]
   13970:	orrs	r3, r2, r3
   13974:	beq	139ec <export_data_element_to_ascii@@Base+0x708>
   13978:	and	r1, r1, #7
   1397c:	movw	r0, #42860	; 0xa76c
   13980:	movt	r0, #1
   13984:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13988:	b	139ec <export_data_element_to_ascii@@Base+0x708>
   1398c:	bl	18b60 <handle_coda_error@@Base>
   13990:	b	13924 <export_data_element_to_ascii@@Base+0x640>
   13994:	movw	r0, #42864	; 0xa770
   13998:	movt	r0, #1
   1399c:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   139a0:	b	13a30 <export_data_element_to_ascii@@Base+0x74c>
   139a4:	bl	18b60 <handle_coda_error@@Base>
   139a8:	ldr	r1, [sp, #48]	; 0x30
   139ac:	add	r1, r1, #1
   139b0:	str	r1, [sp, #48]	; 0x30
   139b4:	ldr	r3, [sp, #36]	; 0x24
   139b8:	cmp	r1, r3
   139bc:	bge	13a64 <export_data_element_to_ascii@@Base+0x780>
   139c0:	add	r2, sp, #56	; 0x38
   139c4:	ldr	r0, [sp, #40]	; 0x28
   139c8:	bl	125f0 <coda_type_get_record_field_name@plt>
   139cc:	cmp	r0, #0
   139d0:	bne	13908 <export_data_element_to_ascii@@Base+0x624>
   139d4:	ldr	r1, [sp, #56]	; 0x38
   139d8:	mov	r0, fp
   139dc:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   139e0:	ldr	r3, [sl]
   139e4:	cmp	r3, #0
   139e8:	bne	13910 <export_data_element_to_ascii@@Base+0x62c>
   139ec:	movw	r0, #48776	; 0xbe88
   139f0:	movt	r0, #1
   139f4:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   139f8:	ldr	r3, [r9]
   139fc:	add	r3, r3, #1
   13a00:	str	r3, [r9]
   13a04:	movw	r3, #49584	; 0xc1b0
   13a08:	movt	r3, #2
   13a0c:	ldr	r3, [r3]
   13a10:	cmp	r3, r8
   13a14:	movle	r2, #0
   13a18:	movgt	r2, #1
   13a1c:	orrs	r3, r2, r3, lsr #31
   13a20:	beq	13994 <export_data_element_to_ascii@@Base+0x6b0>
   13a24:	add	r1, r8, #1
   13a28:	mov	r0, r6
   13a2c:	bl	135d8 <export_data_element_to_ascii@@Base+0x2f4>
   13a30:	ldr	r3, [r9]
   13a34:	sub	r3, r3, #1
   13a38:	str	r3, [r9]
   13a3c:	ldr	r3, [sp, #36]	; 0x24
   13a40:	sub	r3, r3, #1
   13a44:	ldr	r2, [sp, #48]	; 0x30
   13a48:	cmp	r3, r2
   13a4c:	ble	139a8 <export_data_element_to_ascii@@Base+0x6c4>
   13a50:	mov	r0, r6
   13a54:	bl	12560 <coda_cursor_goto_next_record_field@plt>
   13a58:	cmp	r0, #0
   13a5c:	beq	139a8 <export_data_element_to_ascii@@Base+0x6c4>
   13a60:	b	139a4 <export_data_element_to_ascii@@Base+0x6c0>
   13a64:	mov	r5, r6
   13a68:	mov	r0, r5
   13a6c:	bl	123d4 <coda_cursor_goto_parent@plt>
   13a70:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13a74:	add	r2, sp, #80	; 0x50
   13a78:	add	r1, sp, #44	; 0x2c
   13a7c:	mov	r0, r5
   13a80:	bl	12500 <coda_cursor_get_array_dim@plt>
   13a84:	cmp	r0, #0
   13a88:	bne	13afc <export_data_element_to_ascii@@Base+0x818>
   13a8c:	ldr	r0, [sp, #44]	; 0x2c
   13a90:	cmp	r0, #0
   13a94:	blt	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13a98:	ble	13b04 <export_data_element_to_ascii@@Base+0x820>
   13a9c:	add	r3, sp, #76	; 0x4c
   13aa0:	add	r2, sp, #108	; 0x6c
   13aa4:	add	r0, r3, r0, lsl #2
   13aa8:	mov	r7, #1
   13aac:	mov	ip, #0
   13ab0:	ldr	r1, [r3, #4]!
   13ab4:	mul	r7, r1, r7
   13ab8:	str	ip, [r2, #4]!
   13abc:	cmp	r3, r0
   13ac0:	bne	13ab0 <export_data_element_to_ascii@@Base+0x7cc>
   13ac4:	cmp	r7, #0
   13ac8:	ble	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13acc:	mov	r0, r5
   13ad0:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   13ad4:	cmp	r0, #0
   13ad8:	bne	13b0c <export_data_element_to_ascii@@Base+0x828>
   13adc:	mov	fp, #0
   13ae0:	movw	r3, #42880	; 0xa780
   13ae4:	movt	r3, #1
   13ae8:	str	r3, [sp, #8]
   13aec:	movw	sl, #49604	; 0xc1c4
   13af0:	movt	sl, #2
   13af4:	str	r5, [sp, #20]
   13af8:	b	13c48 <export_data_element_to_ascii@@Base+0x964>
   13afc:	bl	18b60 <handle_coda_error@@Base>
   13b00:	b	13a8c <export_data_element_to_ascii@@Base+0x7a8>
   13b04:	mov	r7, #1
   13b08:	b	13acc <export_data_element_to_ascii@@Base+0x7e8>
   13b0c:	bl	18b60 <handle_coda_error@@Base>
   13b10:	b	13adc <export_data_element_to_ascii@@Base+0x7f8>
   13b14:	ldr	r0, [sp, #8]
   13b18:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13b1c:	add	r4, r4, #1
   13b20:	ldr	r3, [sp, #44]	; 0x2c
   13b24:	cmp	r3, r4
   13b28:	ble	13b4c <export_data_element_to_ascii@@Base+0x868>
   13b2c:	ldr	r1, [r6, #4]!
   13b30:	mov	r0, r9
   13b34:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13b38:	ldr	r3, [sp, #44]	; 0x2c
   13b3c:	sub	r3, r3, #1
   13b40:	cmp	r3, r4
   13b44:	ble	13b1c <export_data_element_to_ascii@@Base+0x838>
   13b48:	b	13b14 <export_data_element_to_ascii@@Base+0x830>
   13b4c:	movw	r0, #47852	; 0xbaec
   13b50:	movt	r0, #1
   13b54:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13b58:	movw	r3, #49580	; 0xc1ac
   13b5c:	movt	r3, #2
   13b60:	ldr	r3, [r3]
   13b64:	cmp	r3, #0
   13b68:	bne	13c74 <export_data_element_to_ascii@@Base+0x990>
   13b6c:	movw	r0, #48776	; 0xbe88
   13b70:	movt	r0, #1
   13b74:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13b78:	ldr	r3, [sl]
   13b7c:	add	r3, r3, #1
   13b80:	str	r3, [sl]
   13b84:	movw	r3, #49584	; 0xc1b0
   13b88:	movt	r3, #2
   13b8c:	ldr	r3, [r3]
   13b90:	cmp	r3, r8
   13b94:	movle	r2, #0
   13b98:	movgt	r2, #1
   13b9c:	orrs	r3, r2, r3, lsr #31
   13ba0:	beq	13cf8 <export_data_element_to_ascii@@Base+0xa14>
   13ba4:	add	r1, r8, #1
   13ba8:	ldr	r0, [sp, #20]
   13bac:	bl	135d8 <export_data_element_to_ascii@@Base+0x2f4>
   13bb0:	ldr	r3, [sl]
   13bb4:	sub	r3, r3, #1
   13bb8:	str	r3, [sl]
   13bbc:	ldr	r3, [sp, #44]	; 0x2c
   13bc0:	subs	r1, r3, #1
   13bc4:	bmi	13c30 <export_data_element_to_ascii@@Base+0x94c>
   13bc8:	add	r2, sp, #640	; 0x280
   13bcc:	add	r0, r2, r1, lsl #2
   13bd0:	ldr	r2, [r0, #-528]	; 0xfffffdf0
   13bd4:	add	r2, r2, #1
   13bd8:	str	r2, [r0, #-528]	; 0xfffffdf0
   13bdc:	ldr	r0, [r0, #-560]	; 0xfffffdd0
   13be0:	cmp	r2, r0
   13be4:	bne	13c30 <export_data_element_to_ascii@@Base+0x94c>
   13be8:	sub	r3, r3, #-1073741822	; 0xc0000002
   13bec:	lsl	r3, r3, #2
   13bf0:	add	r2, sp, #80	; 0x50
   13bf4:	add	r0, r2, r3
   13bf8:	add	r2, sp, #640	; 0x280
   13bfc:	add	r3, r2, r3
   13c00:	sub	r3, r3, #524	; 0x20c
   13c04:	mov	lr, #0
   13c08:	sub	r1, r1, #1
   13c0c:	str	lr, [r3], #-4
   13c10:	cmn	r1, #1
   13c14:	beq	13c30 <export_data_element_to_ascii@@Base+0x94c>
   13c18:	ldr	r2, [r3]
   13c1c:	add	r2, r2, #1
   13c20:	str	r2, [r3]
   13c24:	ldr	ip, [r0], #-4
   13c28:	cmp	r2, ip
   13c2c:	beq	13c08 <export_data_element_to_ascii@@Base+0x924>
   13c30:	sub	r3, r7, #1
   13c34:	cmp	r3, fp
   13c38:	bgt	13d08 <export_data_element_to_ascii@@Base+0xa24>
   13c3c:	add	fp, fp, #1
   13c40:	cmp	r7, fp
   13c44:	ble	13d20 <export_data_element_to_ascii@@Base+0xa3c>
   13c48:	movw	r0, #42872	; 0xa778
   13c4c:	movt	r0, #1
   13c50:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13c54:	ldr	r3, [sp, #44]	; 0x2c
   13c58:	cmp	r3, #0
   13c5c:	ble	13b4c <export_data_element_to_ascii@@Base+0x868>
   13c60:	add	r6, sp, #108	; 0x6c
   13c64:	mov	r4, #0
   13c68:	movw	r9, #42876	; 0xa77c
   13c6c:	movt	r9, #1
   13c70:	b	13b2c <export_data_element_to_ascii@@Base+0x848>
   13c74:	add	r1, sp, #48	; 0x30
   13c78:	ldr	r0, [sp, #20]
   13c7c:	bl	125c0 <coda_cursor_get_file_bit_offset@plt>
   13c80:	cmp	r0, #0
   13c84:	bne	13cf0 <export_data_element_to_ascii@@Base+0xa0c>
   13c88:	ldrd	r4, [sp, #48]	; 0x30
   13c8c:	cmp	r4, #0
   13c90:	sbcs	r3, r5, #0
   13c94:	blt	13b6c <export_data_element_to_ascii@@Base+0x888>
   13c98:	lsr	r0, r4, #3
   13c9c:	add	r2, sp, #56	; 0x38
   13ca0:	orr	r0, r0, r5, lsl #29
   13ca4:	asr	r1, r5, #3
   13ca8:	bl	12620 <coda_str64@plt>
   13cac:	add	r1, sp, #56	; 0x38
   13cb0:	movw	r0, #42856	; 0xa768
   13cb4:	movt	r0, #1
   13cb8:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13cbc:	ldr	r1, [sp, #48]	; 0x30
   13cc0:	and	r3, r1, #7
   13cc4:	str	r3, [sp, #24]
   13cc8:	mov	r3, #0
   13ccc:	str	r3, [sp, #28]
   13cd0:	ldrd	r2, [sp, #24]
   13cd4:	orrs	r3, r2, r3
   13cd8:	beq	13b6c <export_data_element_to_ascii@@Base+0x888>
   13cdc:	and	r1, r1, #7
   13ce0:	movw	r0, #42860	; 0xa76c
   13ce4:	movt	r0, #1
   13ce8:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13cec:	b	13b6c <export_data_element_to_ascii@@Base+0x888>
   13cf0:	bl	18b60 <handle_coda_error@@Base>
   13cf4:	b	13c88 <export_data_element_to_ascii@@Base+0x9a4>
   13cf8:	movw	r0, #42864	; 0xa770
   13cfc:	movt	r0, #1
   13d00:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13d04:	b	13bb0 <export_data_element_to_ascii@@Base+0x8cc>
   13d08:	ldr	r0, [sp, #20]
   13d0c:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   13d10:	cmp	r0, #0
   13d14:	beq	13c3c <export_data_element_to_ascii@@Base+0x958>
   13d18:	bl	18b60 <handle_coda_error@@Base>
   13d1c:	b	13c3c <export_data_element_to_ascii@@Base+0x958>
   13d20:	ldr	r5, [sp, #20]
   13d24:	mov	r0, r5
   13d28:	bl	123d4 <coda_cursor_goto_parent@plt>
   13d2c:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13d30:	add	r1, sp, #56	; 0x38
   13d34:	mov	r0, r5
   13d38:	bl	1250c <coda_cursor_has_ascii_content@plt>
   13d3c:	cmp	r0, #0
   13d40:	bne	13db0 <export_data_element_to_ascii@@Base+0xacc>
   13d44:	ldr	r3, [sp, #56]	; 0x38
   13d48:	cmp	r3, #0
   13d4c:	bne	13db8 <export_data_element_to_ascii@@Base+0xad4>
   13d50:	add	r1, sp, #48	; 0x30
   13d54:	mov	r0, r5
   13d58:	bl	12398 <coda_cursor_get_read_type@plt>
   13d5c:	cmp	r0, #0
   13d60:	bne	13e70 <export_data_element_to_ascii@@Base+0xb8c>
   13d64:	ldr	r3, [sp, #48]	; 0x30
   13d68:	add	r3, r3, #1
   13d6c:	cmp	r3, #13
   13d70:	ldrls	pc, [pc, r3, lsl #2]
   13d74:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13d78:	andeq	r4, r1, r0, asr #1
   13d7c:	andeq	r3, r1, r8, lsr #31
   13d80:	ldrdeq	r3, [r1], -r8
   13d84:	andeq	r3, r1, r8, lsr #31
   13d88:	ldrdeq	r3, [r1], -r8
   13d8c:	andeq	r3, r1, r8, lsr #31
   13d90:	ldrdeq	r3, [r1], -r8
   13d94:	andeq	r4, r1, r8
   13d98:	andeq	r4, r1, r4, asr #32
   13d9c:	andeq	r4, r1, r0, lsl #1
   13da0:	andeq	r4, r1, r0, lsl #1
   13da4:	andeq	r4, r1, r0, asr #1
   13da8:	andeq	r4, r1, r0, asr #1
   13dac:	andeq	r3, r1, r8, ror lr
   13db0:	bl	18b60 <handle_coda_error@@Base>
   13db4:	b	13d44 <export_data_element_to_ascii@@Base+0xa60>
   13db8:	add	r1, sp, #112	; 0x70
   13dbc:	mov	r0, r5
   13dc0:	bl	12404 <coda_cursor_get_string_length@plt>
   13dc4:	cmp	r0, #0
   13dc8:	bne	13e30 <export_data_element_to_ascii@@Base+0xb4c>
   13dcc:	ldr	r0, [sp, #112]	; 0x70
   13dd0:	add	r0, r0, #1
   13dd4:	bl	123a4 <malloc@plt>
   13dd8:	subs	r4, r0, #0
   13ddc:	beq	13e38 <export_data_element_to_ascii@@Base+0xb54>
   13de0:	ldr	r2, [sp, #112]	; 0x70
   13de4:	add	r2, r2, #1
   13de8:	mov	r1, r4
   13dec:	mov	r0, r5
   13df0:	bl	123c8 <coda_cursor_read_string@plt>
   13df4:	cmp	r0, #0
   13df8:	bne	13e68 <export_data_element_to_ascii@@Base+0xb84>
   13dfc:	movw	r0, #44208	; 0xacb0
   13e00:	movt	r0, #1
   13e04:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13e08:	ldr	r1, [sp, #112]	; 0x70
   13e0c:	mov	r0, r4
   13e10:	bl	133f8 <export_data_element_to_ascii@@Base+0x114>
   13e14:	ldr	r1, [sp, #112]	; 0x70
   13e18:	movw	r0, #42884	; 0xa784
   13e1c:	movt	r0, #1
   13e20:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13e24:	mov	r0, r4
   13e28:	bl	1226c <free@plt>
   13e2c:	b	13d50 <export_data_element_to_ascii@@Base+0xa6c>
   13e30:	bl	18b60 <handle_coda_error@@Base>
   13e34:	b	13dcc <export_data_element_to_ascii@@Base+0xae8>
   13e38:	movw	r3, #410	; 0x19a
   13e3c:	str	r3, [sp]
   13e40:	movw	r3, #42744	; 0xa6f8
   13e44:	movt	r3, #1
   13e48:	ldr	r2, [sp, #112]	; 0x70
   13e4c:	add	r2, r2, #1
   13e50:	movw	r1, #42532	; 0xa624
   13e54:	movt	r1, #1
   13e58:	mvn	r0, #0
   13e5c:	bl	12224 <coda_set_error@plt>
   13e60:	bl	18b60 <handle_coda_error@@Base>
   13e64:	b	13de0 <export_data_element_to_ascii@@Base+0xafc>
   13e68:	bl	18b60 <handle_coda_error@@Base>
   13e6c:	b	13dfc <export_data_element_to_ascii@@Base+0xb18>
   13e70:	bl	18b60 <handle_coda_error@@Base>
   13e74:	b	13d64 <export_data_element_to_ascii@@Base+0xa80>
   13e78:	add	r1, sp, #80	; 0x50
   13e7c:	mov	r0, r5
   13e80:	bl	12584 <coda_cursor_get_bit_size@plt>
   13e84:	cmp	r0, #0
   13e88:	bne	13f58 <export_data_element_to_ascii@@Base+0xc74>
   13e8c:	ldr	r0, [sp, #80]	; 0x50
   13e90:	ldr	ip, [sp, #84]	; 0x54
   13e94:	ands	r1, r0, #7
   13e98:	movne	r1, #1
   13e9c:	lsr	r2, r0, #3
   13ea0:	orr	r2, r2, ip, lsl #29
   13ea4:	adds	r6, r2, r1
   13ea8:	mov	r0, r6
   13eac:	bl	123a4 <malloc@plt>
   13eb0:	subs	r4, r0, #0
   13eb4:	beq	13f60 <export_data_element_to_ascii@@Base+0xc7c>
   13eb8:	ldrd	r2, [sp, #80]	; 0x50
   13ebc:	strd	r2, [sp]
   13ec0:	mov	r2, #0
   13ec4:	mov	r3, #0
   13ec8:	mov	r1, r4
   13ecc:	mov	r0, r5
   13ed0:	bl	12614 <coda_cursor_read_bits@plt>
   13ed4:	cmp	r0, #0
   13ed8:	bne	13f8c <export_data_element_to_ascii@@Base+0xca8>
   13edc:	movw	r0, #44208	; 0xacb0
   13ee0:	movt	r0, #1
   13ee4:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13ee8:	mov	r1, r6
   13eec:	mov	r0, r4
   13ef0:	bl	133f8 <export_data_element_to_ascii@@Base+0x114>
   13ef4:	movw	r0, #42900	; 0xa794
   13ef8:	movt	r0, #1
   13efc:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13f00:	ldr	r1, [sp, #84]	; 0x54
   13f04:	ldr	r0, [sp, #80]	; 0x50
   13f08:	lsr	r0, r0, #3
   13f0c:	add	r2, sp, #112	; 0x70
   13f10:	orr	r0, r0, r1, lsl #29
   13f14:	asr	r1, r1, #3
   13f18:	bl	12620 <coda_str64@plt>
   13f1c:	add	r1, sp, #112	; 0x70
   13f20:	movw	r0, #42912	; 0xa7a0
   13f24:	movt	r0, #1
   13f28:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13f2c:	ldr	r1, [sp, #80]	; 0x50
   13f30:	and	r2, r1, #7
   13f34:	mov	r3, #0
   13f38:	orrs	r3, r2, r3
   13f3c:	bne	13f94 <export_data_element_to_ascii@@Base+0xcb0>
   13f40:	movw	r0, #42916	; 0xa7a4
   13f44:	movt	r0, #1
   13f48:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13f4c:	mov	r0, r4
   13f50:	bl	1226c <free@plt>
   13f54:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13f58:	bl	18b60 <handle_coda_error@@Base>
   13f5c:	b	13e8c <export_data_element_to_ascii@@Base+0xba8>
   13f60:	movw	r3, #447	; 0x1bf
   13f64:	str	r3, [sp]
   13f68:	movw	r3, #42744	; 0xa6f8
   13f6c:	movt	r3, #1
   13f70:	mov	r2, r6
   13f74:	movw	r1, #42532	; 0xa624
   13f78:	movt	r1, #1
   13f7c:	mvn	r0, #0
   13f80:	bl	12224 <coda_set_error@plt>
   13f84:	bl	18b60 <handle_coda_error@@Base>
   13f88:	b	13eb8 <export_data_element_to_ascii@@Base+0xbd4>
   13f8c:	bl	18b60 <handle_coda_error@@Base>
   13f90:	b	13edc <export_data_element_to_ascii@@Base+0xbf8>
   13f94:	mov	r1, r2
   13f98:	movw	r0, #42860	; 0xa76c
   13f9c:	movt	r0, #1
   13fa0:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   13fa4:	b	13f40 <export_data_element_to_ascii@@Base+0xc5c>
   13fa8:	add	r1, sp, #112	; 0x70
   13fac:	mov	r0, r5
   13fb0:	bl	125b4 <coda_cursor_read_int32@plt>
   13fb4:	cmp	r0, #0
   13fb8:	bne	13fd0 <export_data_element_to_ascii@@Base+0xcec>
   13fbc:	ldr	r1, [sp, #112]	; 0x70
   13fc0:	movw	r0, #42920	; 0xa7a8
   13fc4:	movt	r0, #1
   13fc8:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13fcc:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   13fd0:	bl	18b60 <handle_coda_error@@Base>
   13fd4:	b	13fbc <export_data_element_to_ascii@@Base+0xcd8>
   13fd8:	add	r1, sp, #112	; 0x70
   13fdc:	mov	r0, r5
   13fe0:	bl	12290 <coda_cursor_read_uint32@plt>
   13fe4:	cmp	r0, #0
   13fe8:	bne	14000 <export_data_element_to_ascii@@Base+0xd1c>
   13fec:	ldr	r1, [sp, #112]	; 0x70
   13ff0:	movw	r0, #42928	; 0xa7b0
   13ff4:	movt	r0, #1
   13ff8:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   13ffc:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14000:	bl	18b60 <handle_coda_error@@Base>
   14004:	b	13fec <export_data_element_to_ascii@@Base+0xd08>
   14008:	add	r1, sp, #80	; 0x50
   1400c:	mov	r0, r5
   14010:	bl	12524 <coda_cursor_read_int64@plt>
   14014:	cmp	r0, #0
   14018:	bne	1403c <export_data_element_to_ascii@@Base+0xd58>
   1401c:	add	r2, sp, #112	; 0x70
   14020:	ldrd	r0, [sp, #80]	; 0x50
   14024:	bl	12620 <coda_str64@plt>
   14028:	add	r1, sp, #112	; 0x70
   1402c:	movw	r0, #42936	; 0xa7b8
   14030:	movt	r0, #1
   14034:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   14038:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   1403c:	bl	18b60 <handle_coda_error@@Base>
   14040:	b	1401c <export_data_element_to_ascii@@Base+0xd38>
   14044:	add	r1, sp, #80	; 0x50
   14048:	mov	r0, r5
   1404c:	bl	12410 <coda_cursor_read_uint64@plt>
   14050:	cmp	r0, #0
   14054:	bne	14078 <export_data_element_to_ascii@@Base+0xd94>
   14058:	add	r2, sp, #112	; 0x70
   1405c:	ldrd	r0, [sp, #80]	; 0x50
   14060:	bl	12260 <coda_str64u@plt>
   14064:	add	r1, sp, #112	; 0x70
   14068:	movw	r0, #42936	; 0xa7b8
   1406c:	movt	r0, #1
   14070:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   14074:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14078:	bl	18b60 <handle_coda_error@@Base>
   1407c:	b	14058 <export_data_element_to_ascii@@Base+0xd74>
   14080:	add	r1, sp, #112	; 0x70
   14084:	mov	r0, r5
   14088:	bl	1241c <coda_cursor_read_double@plt>
   1408c:	cmp	r0, #0
   14090:	bne	140b8 <export_data_element_to_ascii@@Base+0xdd4>
   14094:	ldr	r3, [sp, #48]	; 0x30
   14098:	cmp	r3, #8
   1409c:	ldrd	r2, [sp, #112]	; 0x70
   140a0:	movweq	r0, #42940	; 0xa7bc
   140a4:	movteq	r0, #1
   140a8:	movwne	r0, #42948	; 0xa7c4
   140ac:	movtne	r0, #1
   140b0:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   140b4:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   140b8:	bl	18b60 <handle_coda_error@@Base>
   140bc:	b	14094 <export_data_element_to_ascii@@Base+0xdb0>
   140c0:	ldr	r3, [sp, #56]	; 0x38
   140c4:	cmp	r3, #0
   140c8:	bne	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   140cc:	ldr	r3, [pc, #440]	; 1428c <export_data_element_to_ascii@@Base+0xfa8>
   140d0:	mov	r2, #548	; 0x224
   140d4:	movw	r1, #42744	; 0xa6f8
   140d8:	movt	r1, #1
   140dc:	movw	r0, #42956	; 0xa7cc
   140e0:	movt	r0, #1
   140e4:	bl	1262c <__assert_fail@plt>
   140e8:	add	r1, sp, #56	; 0x38
   140ec:	mov	r0, r5
   140f0:	bl	12338 <coda_cursor_get_special_type@plt>
   140f4:	cmp	r0, #0
   140f8:	bne	14140 <export_data_element_to_ascii@@Base+0xe5c>
   140fc:	ldr	r3, [sp, #56]	; 0x38
   14100:	cmp	r3, #0
   14104:	bne	14148 <export_data_element_to_ascii@@Base+0xe64>
   14108:	ldr	r0, [sp, #56]	; 0x38
   1410c:	bl	121a0 <coda_type_get_special_type_name@plt>
   14110:	mov	r1, r0
   14114:	movw	r0, #42976	; 0xa7e0
   14118:	movt	r0, #1
   1411c:	bl	13524 <export_data_element_to_ascii@@Base+0x240>
   14120:	ldr	r3, [sp, #56]	; 0x38
   14124:	cmp	r3, #3
   14128:	ldrls	pc, [pc, r3, lsl #2]
   1412c:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14130:	andeq	r4, r1, r0, lsl #3
   14134:	muleq	r1, r0, r1
   14138:	andeq	r4, r1, r0, asr #3
   1413c:	andeq	r4, r1, r0, asr r2
   14140:	bl	18b60 <handle_coda_error@@Base>
   14144:	b	140fc <export_data_element_to_ascii@@Base+0xe18>
   14148:	mov	r2, #520	; 0x208
   1414c:	mov	r1, r5
   14150:	add	r0, sp, #112	; 0x70
   14154:	bl	122c0 <memcpy@plt>
   14158:	add	r0, sp, #112	; 0x70
   1415c:	bl	1259c <coda_cursor_use_base_type_of_special_type@plt>
   14160:	cmp	r0, #0
   14164:	bne	14178 <export_data_element_to_ascii@@Base+0xe94>
   14168:	mov	r1, r8
   1416c:	add	r0, sp, #112	; 0x70
   14170:	bl	135d8 <export_data_element_to_ascii@@Base+0x2f4>
   14174:	b	14108 <export_data_element_to_ascii@@Base+0xe24>
   14178:	bl	18b60 <handle_coda_error@@Base>
   1417c:	b	14168 <export_data_element_to_ascii@@Base+0xe84>
   14180:	movw	r0, #48776	; 0xbe88
   14184:	movt	r0, #1
   14188:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   1418c:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14190:	add	r1, sp, #112	; 0x70
   14194:	mov	r0, r5
   14198:	bl	1241c <coda_cursor_read_double@plt>
   1419c:	cmp	r0, #0
   141a0:	bne	141b8 <export_data_element_to_ascii@@Base+0xed4>
   141a4:	ldrd	r2, [sp, #112]	; 0x70
   141a8:	movw	r0, #42948	; 0xa7c4
   141ac:	movt	r0, #1
   141b0:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   141b4:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   141b8:	bl	18b60 <handle_coda_error@@Base>
   141bc:	b	141a4 <export_data_element_to_ascii@@Base+0xec0>
   141c0:	add	r1, sp, #80	; 0x50
   141c4:	mov	r0, r5
   141c8:	bl	1241c <coda_cursor_read_double@plt>
   141cc:	cmp	r0, #0
   141d0:	bne	14208 <export_data_element_to_ascii@@Base+0xf24>
   141d4:	vldr	d0, [sp, #80]	; 0x50
   141d8:	bl	12428 <coda_isNaN@plt>
   141dc:	cmp	r0, #0
   141e0:	bne	141f4 <export_data_element_to_ascii@@Base+0xf10>
   141e4:	vldr	d0, [sp, #80]	; 0x50
   141e8:	bl	122cc <coda_isInf@plt>
   141ec:	cmp	r0, #0
   141f0:	beq	14210 <export_data_element_to_ascii@@Base+0xf2c>
   141f4:	ldrd	r2, [sp, #80]	; 0x50
   141f8:	movw	r0, #42984	; 0xa7e8
   141fc:	movt	r0, #1
   14200:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   14204:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14208:	bl	18b60 <handle_coda_error@@Base>
   1420c:	b	141d4 <export_data_element_to_ascii@@Base+0xef0>
   14210:	add	r1, sp, #112	; 0x70
   14214:	movw	r0, #42656	; 0xa6a0
   14218:	movt	r0, #1
   1421c:	vldr	d0, [sp, #80]	; 0x50
   14220:	bl	12248 <coda_time_double_to_string@plt>
   14224:	cmp	r0, #0
   14228:	beq	1423c <export_data_element_to_ascii@@Base+0xf58>
   1422c:	movw	r0, #42992	; 0xa7f0
   14230:	movt	r0, #1
   14234:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   14238:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   1423c:	add	r1, sp, #112	; 0x70
   14240:	movw	r0, #48468	; 0xbd54
   14244:	movt	r0, #1
   14248:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   1424c:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14250:	add	r2, sp, #112	; 0x70
   14254:	add	r1, sp, #80	; 0x50
   14258:	mov	r0, r5
   1425c:	bl	124c4 <coda_cursor_read_complex_double_split@plt>
   14260:	cmp	r0, #0
   14264:	bne	14284 <export_data_element_to_ascii@@Base+0xfa0>
   14268:	ldrd	r2, [sp, #112]	; 0x70
   1426c:	strd	r2, [sp]
   14270:	ldrd	r2, [sp, #80]	; 0x50
   14274:	movw	r0, #43020	; 0xa80c
   14278:	movt	r0, #1
   1427c:	bl	133c0 <export_data_element_to_ascii@@Base+0xdc>
   14280:	b	136e0 <export_data_element_to_ascii@@Base+0x3fc>
   14284:	bl	18b60 <handle_coda_error@@Base>
   14288:	b	14268 <export_data_element_to_ascii@@Base+0xf84>
   1428c:	andeq	sl, r1, r8, ror #13

00014290 <print_debug_data@@Base>:
   14290:	strd	r4, [sp, #-16]!
   14294:	str	r6, [sp, #8]
   14298:	str	lr, [sp, #12]
   1429c:	sub	sp, sp, #544	; 0x220
   142a0:	mov	r5, r1
   142a4:	mov	r6, r2
   142a8:	subs	r4, r0, #0
   142ac:	beq	14374 <print_debug_data@@Base+0xe4>
   142b0:	movw	r0, #49648	; 0xc1f0
   142b4:	movt	r0, #2
   142b8:	add	r3, sp, #540	; 0x21c
   142bc:	str	r3, [sp]
   142c0:	mov	r3, r2
   142c4:	mov	r2, r1
   142c8:	mov	r1, r4
   142cc:	ldr	r0, [r0]
   142d0:	bl	1244c <coda_open_as@plt>
   142d4:	cmp	r0, #0
   142d8:	bne	1438c <print_debug_data@@Base+0xfc>
   142dc:	add	r1, sp, #12
   142e0:	ldr	r0, [sp, #540]	; 0x21c
   142e4:	bl	12314 <coda_get_product_format@plt>
   142e8:	cmp	r0, #0
   142ec:	bne	1440c <print_debug_data@@Base+0x17c>
   142f0:	movw	r3, #49580	; 0xc1ac
   142f4:	movt	r3, #2
   142f8:	ldr	r2, [sp, #12]
   142fc:	cmp	r2, #2
   14300:	movhi	r2, #0
   14304:	movls	r2, #1
   14308:	str	r2, [r3]
   1430c:	ldr	r1, [sp, #540]	; 0x21c
   14310:	add	r0, sp, #16
   14314:	bl	1235c <coda_cursor_set_product@plt>
   14318:	cmp	r0, #0
   1431c:	bne	14414 <print_debug_data@@Base+0x184>
   14320:	movw	r3, #53424	; 0xd0b0
   14324:	movt	r3, #2
   14328:	ldr	r1, [r3]
   1432c:	cmp	r1, #0
   14330:	beq	14344 <print_debug_data@@Base+0xb4>
   14334:	add	r0, sp, #16
   14338:	bl	1253c <coda_cursor_goto@plt>
   1433c:	cmp	r0, #0
   14340:	bne	1441c <print_debug_data@@Base+0x18c>
   14344:	mov	r0, #0
   14348:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   1434c:	mov	r1, #0
   14350:	add	r0, sp, #16
   14354:	bl	135d8 <export_data_element_to_ascii@@Base+0x2f4>
   14358:	ldr	r0, [sp, #540]	; 0x21c
   1435c:	bl	12518 <coda_close@plt>
   14360:	add	sp, sp, #544	; 0x220
   14364:	ldrd	r4, [sp]
   14368:	ldr	r6, [sp, #8]
   1436c:	add	sp, sp, #12
   14370:	pop	{pc}		; (ldr pc, [sp], #4)
   14374:	movw	r3, #49648	; 0xc1f0
   14378:	movt	r3, #2
   1437c:	add	r1, sp, #540	; 0x21c
   14380:	ldr	r0, [r3]
   14384:	bl	12230 <coda_open@plt>
   14388:	b	142d4 <print_debug_data@@Base+0x44>
   1438c:	bl	125d8 <coda_get_errno@plt>
   14390:	ldr	r3, [r0]
   14394:	cmn	r3, #21
   14398:	beq	143a4 <print_debug_data@@Base+0x114>
   1439c:	bl	18b60 <handle_coda_error@@Base>
   143a0:	b	142dc <print_debug_data@@Base+0x4c>
   143a4:	mov	r0, #0
   143a8:	bl	12278 <coda_set_option_use_mmap@plt>
   143ac:	cmp	r4, #0
   143b0:	beq	143f0 <print_debug_data@@Base+0x160>
   143b4:	movw	r0, #49648	; 0xc1f0
   143b8:	movt	r0, #2
   143bc:	add	r3, sp, #540	; 0x21c
   143c0:	str	r3, [sp]
   143c4:	mov	r3, r6
   143c8:	mov	r2, r5
   143cc:	mov	r1, r4
   143d0:	ldr	r0, [r0]
   143d4:	bl	1244c <coda_open_as@plt>
   143d8:	mov	r4, r0
   143dc:	mov	r0, #1
   143e0:	bl	12278 <coda_set_option_use_mmap@plt>
   143e4:	cmp	r4, #0
   143e8:	bne	1439c <print_debug_data@@Base+0x10c>
   143ec:	b	142dc <print_debug_data@@Base+0x4c>
   143f0:	movw	r3, #49648	; 0xc1f0
   143f4:	movt	r3, #2
   143f8:	add	r1, sp, #540	; 0x21c
   143fc:	ldr	r0, [r3]
   14400:	bl	12230 <coda_open@plt>
   14404:	mov	r4, r0
   14408:	b	143dc <print_debug_data@@Base+0x14c>
   1440c:	bl	18b60 <handle_coda_error@@Base>
   14410:	b	142f0 <print_debug_data@@Base+0x60>
   14414:	bl	18b60 <handle_coda_error@@Base>
   14418:	b	14320 <print_debug_data@@Base+0x90>
   1441c:	bl	18b60 <handle_coda_error@@Base>
   14420:	b	14344 <print_debug_data@@Base+0xb4>
   14424:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14428:	strd	r6, [sp, #8]
   1442c:	strd	r8, [sp, #16]
   14430:	strd	sl, [sp, #24]
   14434:	str	lr, [sp, #32]
   14438:	sub	sp, sp, #12
   1443c:	mov	r8, r0
   14440:	mov	r5, r1
   14444:	mov	r6, r2
   14448:	add	r1, sp, #4
   1444c:	ldr	r0, [pc, #688]	; 14704 <print_debug_data@@Base+0x474>
   14450:	bl	122fc <coda_cursor_get_type_class@plt>
   14454:	cmp	r0, #0
   14458:	bne	14570 <print_debug_data@@Base+0x2e0>
   1445c:	ldr	r3, [sp, #4]
   14460:	cmp	r3, #0
   14464:	beq	14618 <print_debug_data@@Base+0x388>
   14468:	cmp	r3, #1
   1446c:	bne	146e4 <print_debug_data@@Base+0x454>
   14470:	movw	r2, #49648	; 0xc1f0
   14474:	movt	r2, #2
   14478:	add	r3, r5, r5, lsl #2
   1447c:	add	r3, r2, r3, lsl #4
   14480:	ldr	r3, [r3, #800]	; 0x320
   14484:	ldr	r2, [r2, #3360]	; 0xd20
   14488:	cmp	r2, r5
   1448c:	ble	14578 <print_debug_data@@Base+0x2e8>
   14490:	cmp	r5, #0
   14494:	bne	144a8 <print_debug_data@@Base+0x218>
   14498:	movw	r2, #49648	; 0xc1f0
   1449c:	movt	r2, #2
   144a0:	mov	r1, #0
   144a4:	str	r1, [r2, #844]	; 0x34c
   144a8:	add	r7, r5, #1
   144ac:	movw	r2, #49648	; 0xc1f0
   144b0:	movt	r2, #2
   144b4:	add	r1, r7, r7, lsl #2
   144b8:	add	r1, r2, r1, lsl #4
   144bc:	add	r0, r5, r5, lsl #2
   144c0:	add	r2, r2, r0, lsl #4
   144c4:	ldr	ip, [r2, #844]	; 0x34c
   144c8:	ldr	r0, [r2, #840]	; 0x348
   144cc:	mul	r0, r0, ip
   144d0:	str	r0, [r1, #844]	; 0x34c
   144d4:	ldr	r0, [r2, #804]	; 0x324
   144d8:	add	r0, r3, r0
   144dc:	cmp	r3, r0
   144e0:	bge	14598 <print_debug_data@@Base+0x308>
   144e4:	add	r3, r3, #1
   144e8:	movw	r2, #53432	; 0xd0b8
   144ec:	movt	r2, #2
   144f0:	add	r3, r2, r3, lsl #2
   144f4:	add	r2, r2, #4
   144f8:	add	r0, r2, r0, lsl #2
   144fc:	mov	r4, #1
   14500:	movw	r2, #49648	; 0xc1f0
   14504:	movt	r2, #2
   14508:	add	r5, r5, r5, lsl #2
   1450c:	add	r5, r2, r5, lsl #4
   14510:	ldr	r2, [r3, #68]	; 0x44
   14514:	cmp	r2, #0
   14518:	ldrne	r1, [r5, #844]	; 0x34c
   1451c:	ldrne	r2, [r3, #104]	; 0x68
   14520:	ldrne	r2, [r2, r1, lsl #2]
   14524:	ldreq	r2, [r3]
   14528:	mul	r4, r2, r4
   1452c:	add	r3, r3, #4
   14530:	cmp	r3, r0
   14534:	bne	14510 <print_debug_data@@Base+0x280>
   14538:	cmp	r4, #0
   1453c:	movle	r9, #0
   14540:	ble	146ac <print_debug_data@@Base+0x41c>
   14544:	ldr	r0, [pc, #440]	; 14704 <print_debug_data@@Base+0x474>
   14548:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   1454c:	cmp	r0, #0
   14550:	bne	145a0 <print_debug_data@@Base+0x310>
   14554:	mov	r5, #0
   14558:	ldr	fp, [pc, #420]	; 14704 <print_debug_data@@Base+0x474>
   1455c:	movw	sl, #49648	; 0xc1f0
   14560:	movt	sl, #2
   14564:	add	r3, r7, r7, lsl #2
   14568:	add	sl, sl, r3, lsl #4
   1456c:	b	145d0 <print_debug_data@@Base+0x340>
   14570:	bl	18b60 <handle_coda_error@@Base>
   14574:	b	1445c <print_debug_data@@Base+0x1cc>
   14578:	movw	r3, #43032	; 0xa818
   1457c:	movt	r3, #1
   14580:	movw	r2, #638	; 0x27e
   14584:	movw	r1, #43148	; 0xa88c
   14588:	movt	r1, #1
   1458c:	movw	r0, #43224	; 0xa8d8
   14590:	movt	r0, #1
   14594:	bl	1262c <__assert_fail@plt>
   14598:	mov	r4, #1
   1459c:	b	14544 <print_debug_data@@Base+0x2b4>
   145a0:	bl	18b60 <handle_coda_error@@Base>
   145a4:	b	14554 <print_debug_data@@Base+0x2c4>
   145a8:	ldr	r0, [pc, #340]	; 14704 <print_debug_data@@Base+0x474>
   145ac:	bl	123d4 <coda_cursor_goto_parent@plt>
   145b0:	mov	r9, #1
   145b4:	b	146ac <print_debug_data@@Base+0x41c>
   145b8:	ldr	r3, [sl, #844]	; 0x34c
   145bc:	add	r3, r3, #1
   145c0:	str	r3, [sl, #844]	; 0x34c
   145c4:	add	r5, r5, #1
   145c8:	cmp	r4, r5
   145cc:	ble	1460c <print_debug_data@@Base+0x37c>
   145d0:	mov	r2, r6
   145d4:	mov	r1, r7
   145d8:	add	r0, r8, #1
   145dc:	bl	14424 <print_debug_data@@Base+0x194>
   145e0:	subs	r9, r0, #0
   145e4:	bne	145a8 <print_debug_data@@Base+0x318>
   145e8:	sub	r3, r4, #1
   145ec:	cmp	r3, r5
   145f0:	ble	145c4 <print_debug_data@@Base+0x334>
   145f4:	mov	r0, fp
   145f8:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   145fc:	cmp	r0, #0
   14600:	beq	145b8 <print_debug_data@@Base+0x328>
   14604:	bl	18b60 <handle_coda_error@@Base>
   14608:	b	145b8 <print_debug_data@@Base+0x328>
   1460c:	ldr	r0, [pc, #240]	; 14704 <print_debug_data@@Base+0x474>
   14610:	bl	123d4 <coda_cursor_goto_parent@plt>
   14614:	b	146ac <print_debug_data@@Base+0x41c>
   14618:	movw	r0, #49648	; 0xc1f0
   1461c:	movt	r0, #2
   14620:	add	r3, r0, r6, lsl #2
   14624:	mov	r2, sp
   14628:	ldr	r1, [r3, #3492]	; 0xda4
   1462c:	add	r0, r0, #144	; 0x90
   14630:	bl	1220c <coda_cursor_get_record_field_available_status@plt>
   14634:	cmp	r0, #0
   14638:	bne	146cc <print_debug_data@@Base+0x43c>
   1463c:	ldr	r3, [sp]
   14640:	cmp	r3, #0
   14644:	beq	146a8 <print_debug_data@@Base+0x418>
   14648:	movw	r3, #49648	; 0xc1f0
   1464c:	movt	r3, #2
   14650:	ldr	r3, [r3, #3748]	; 0xea4
   14654:	sub	r3, r3, #1
   14658:	cmp	r3, r6
   1465c:	beq	146dc <print_debug_data@@Base+0x44c>
   14660:	movw	r0, #49648	; 0xc1f0
   14664:	movt	r0, #2
   14668:	add	r3, r0, r6, lsl #2
   1466c:	ldr	r1, [r3, #3492]	; 0xda4
   14670:	add	r0, r0, #144	; 0x90
   14674:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   14678:	cmp	r0, #0
   1467c:	bne	146d4 <print_debug_data@@Base+0x444>
   14680:	add	r2, r6, #1
   14684:	mov	r1, r5
   14688:	add	r0, r8, #1
   1468c:	bl	14424 <print_debug_data@@Base+0x194>
   14690:	str	r0, [sp]
   14694:	ldr	r0, [pc, #104]	; 14704 <print_debug_data@@Base+0x474>
   14698:	bl	123d4 <coda_cursor_goto_parent@plt>
   1469c:	ldr	r3, [sp]
   146a0:	cmp	r3, #0
   146a4:	bne	146dc <print_debug_data@@Base+0x44c>
   146a8:	mov	r9, #0
   146ac:	mov	r0, r9
   146b0:	add	sp, sp, #12
   146b4:	ldrd	r4, [sp]
   146b8:	ldrd	r6, [sp, #8]
   146bc:	ldrd	r8, [sp, #16]
   146c0:	ldrd	sl, [sp, #24]
   146c4:	add	sp, sp, #32
   146c8:	pop	{pc}		; (ldr pc, [sp], #4)
   146cc:	bl	18b60 <handle_coda_error@@Base>
   146d0:	b	1463c <print_debug_data@@Base+0x3ac>
   146d4:	bl	18b60 <handle_coda_error@@Base>
   146d8:	b	14680 <print_debug_data@@Base+0x3f0>
   146dc:	mov	r9, #1
   146e0:	b	146ac <print_debug_data@@Base+0x41c>
   146e4:	movw	r3, #43032	; 0xa818
   146e8:	movt	r3, #1
   146ec:	movw	r2, #729	; 0x2d9
   146f0:	movw	r1, #43148	; 0xa88c
   146f4:	movt	r1, #1
   146f8:	movw	r0, #43484	; 0xa9dc
   146fc:	movt	r0, #1
   14700:	bl	1262c <__assert_fail@plt>
   14704:	andeq	ip, r2, r0, lsl #5
   14708:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1470c:	strd	r6, [sp, #8]
   14710:	strd	r8, [sp, #16]
   14714:	str	sl, [sp, #24]
   14718:	str	lr, [sp, #28]
   1471c:	sub	sp, sp, #48	; 0x30
   14720:	mov	r7, r0
   14724:	mov	r4, r1
   14728:	mov	r6, r2
   1472c:	add	r1, sp, #44	; 0x2c
   14730:	ldr	r0, [pc, #1312]	; 14c58 <print_debug_data@@Base+0x9c8>
   14734:	bl	122fc <coda_cursor_get_type_class@plt>
   14738:	cmp	r0, #0
   1473c:	bne	14768 <print_debug_data@@Base+0x4d8>
   14740:	ldr	r3, [sp, #44]	; 0x2c
   14744:	cmp	r3, #5
   14748:	ldrls	pc, [pc, r3, lsl #2]
   1474c:	b	14c3c <print_debug_data@@Base+0x9ac>
   14750:	andeq	r4, r1, r8, ror #19
   14754:	andeq	r4, r1, r0, ror r7
   14758:	andeq	r4, r1, ip, lsr ip
   1475c:	andeq	r4, r1, ip, lsr ip
   14760:	strdeq	r4, [r1], -ip
   14764:	strdeq	r4, [r1], -ip
   14768:	bl	18b60 <handle_coda_error@@Base>
   1476c:	b	14740 <print_debug_data@@Base+0x4b0>
   14770:	movw	r3, #49648	; 0xc1f0
   14774:	movt	r3, #2
   14778:	add	r2, r4, r4, lsl #2
   1477c:	add	r2, r3, r2, lsl #4
   14780:	ldr	r5, [r2, #800]	; 0x320
   14784:	ldr	r3, [r3, #3360]	; 0xd20
   14788:	cmp	r3, r4
   1478c:	beq	1485c <print_debug_data@@Base+0x5cc>
   14790:	cmp	r4, #0
   14794:	bne	147a8 <print_debug_data@@Base+0x518>
   14798:	movw	r3, #49648	; 0xc1f0
   1479c:	movt	r3, #2
   147a0:	mov	r2, #0
   147a4:	str	r2, [r3, #844]	; 0x34c
   147a8:	add	r8, r4, #1
   147ac:	movw	r3, #49648	; 0xc1f0
   147b0:	movt	r3, #2
   147b4:	add	r2, r8, r8, lsl #2
   147b8:	add	r2, r3, r2, lsl #4
   147bc:	add	r1, r4, r4, lsl #2
   147c0:	add	r3, r3, r1, lsl #4
   147c4:	ldr	r0, [r3, #844]	; 0x34c
   147c8:	ldr	r1, [r3, #840]	; 0x348
   147cc:	mul	r1, r1, r0
   147d0:	str	r1, [r2, #844]	; 0x34c
   147d4:	ldr	r1, [r3, #804]	; 0x324
   147d8:	add	r1, r5, r1
   147dc:	cmp	r5, r1
   147e0:	bge	14958 <print_debug_data@@Base+0x6c8>
   147e4:	add	r3, r5, #1
   147e8:	movw	r2, #53432	; 0xd0b8
   147ec:	movt	r2, #2
   147f0:	add	r3, r2, r3, lsl #2
   147f4:	add	r2, r2, #4
   147f8:	add	r1, r2, r1, lsl #2
   147fc:	mov	r5, #1
   14800:	movw	r2, #49648	; 0xc1f0
   14804:	movt	r2, #2
   14808:	add	r4, r4, r4, lsl #2
   1480c:	add	r4, r2, r4, lsl #4
   14810:	ldr	r2, [r3, #68]	; 0x44
   14814:	cmp	r2, #0
   14818:	ldrne	r0, [r4, #844]	; 0x34c
   1481c:	ldrne	r2, [r3, #104]	; 0x68
   14820:	ldrne	r2, [r2, r0, lsl #2]
   14824:	ldreq	r2, [r3]
   14828:	mul	r5, r2, r5
   1482c:	add	r3, r3, #4
   14830:	cmp	r3, r1
   14834:	bne	14810 <print_debug_data@@Base+0x580>
   14838:	cmp	r5, #0
   1483c:	bgt	1495c <print_debug_data@@Base+0x6cc>
   14840:	add	sp, sp, #48	; 0x30
   14844:	ldrd	r4, [sp]
   14848:	ldrd	r6, [sp, #8]
   1484c:	ldrd	r8, [sp, #16]
   14850:	ldr	sl, [sp, #24]
   14854:	add	sp, sp, #28
   14858:	pop	{pc}		; (ldr pc, [sp], #4)
   1485c:	add	r2, sp, #8
   14860:	add	r1, sp, #4
   14864:	ldr	r0, [pc, #1004]	; 14c58 <print_debug_data@@Base+0x9c8>
   14868:	bl	12500 <coda_cursor_get_array_dim@plt>
   1486c:	cmp	r0, #0
   14870:	bne	148d4 <print_debug_data@@Base+0x644>
   14874:	movw	r3, #49648	; 0xc1f0
   14878:	movt	r3, #2
   1487c:	add	r2, r4, r4, lsl #2
   14880:	add	r3, r3, r2, lsl #4
   14884:	ldr	r3, [r3, #804]	; 0x324
   14888:	ldr	r2, [sp, #4]
   1488c:	cmp	r3, r2
   14890:	bne	148dc <print_debug_data@@Base+0x64c>
   14894:	cmp	r3, #0
   14898:	ble	14840 <print_debug_data@@Base+0x5b0>
   1489c:	add	r3, r4, r4, lsl #2
   148a0:	ldr	r1, [pc, #948]	; 14c5c <print_debug_data@@Base+0x9cc>
   148a4:	add	r1, r1, r3, lsl #4
   148a8:	add	r5, r5, #1
   148ac:	movw	r3, #53432	; 0xd0b8
   148b0:	movt	r3, #2
   148b4:	add	r3, r3, r5, lsl #2
   148b8:	mov	r2, #0
   148bc:	add	r6, sp, #8
   148c0:	movw	r0, #49648	; 0xc1f0
   148c4:	movt	r0, #2
   148c8:	add	r4, r4, r4, lsl #2
   148cc:	add	r4, r0, r4, lsl #4
   148d0:	b	1490c <print_debug_data@@Base+0x67c>
   148d4:	bl	18b60 <handle_coda_error@@Base>
   148d8:	b	14874 <print_debug_data@@Base+0x5e4>
   148dc:	ldr	r3, [pc, #892]	; 14c60 <print_debug_data@@Base+0x9d0>
   148e0:	mov	r2, #125	; 0x7d
   148e4:	movw	r1, #43148	; 0xa88c
   148e8:	movt	r1, #1
   148ec:	movw	r0, #43264	; 0xa900
   148f0:	movt	r0, #1
   148f4:	bl	1262c <__assert_fail@plt>
   148f8:	add	r2, r2, #1
   148fc:	add	r3, r3, #4
   14900:	ldr	r0, [r4, #804]	; 0x324
   14904:	cmp	r0, r2
   14908:	ble	14840 <print_debug_data@@Base+0x5b0>
   1490c:	ldr	r0, [r1], #4
   14910:	cmn	r0, #1
   14914:	bne	148f8 <print_debug_data@@Base+0x668>
   14918:	mov	lr, r3
   1491c:	ldr	r0, [r6, r2, lsl #2]
   14920:	ldr	r5, [r4, #844]	; 0x34c
   14924:	ldr	ip, [r3, #104]	; 0x68
   14928:	str	r0, [ip, r5, lsl #2]
   1492c:	ldr	ip, [r3]
   14930:	cmn	ip, #1
   14934:	streq	r0, [r3]
   14938:	streq	r0, [r3, #32]
   1493c:	beq	148f8 <print_debug_data@@Base+0x668>
   14940:	cmp	r0, ip
   14944:	strgt	r0, [r3]
   14948:	ldr	ip, [r3, #32]
   1494c:	cmp	r0, ip
   14950:	strlt	r0, [r3, #32]
   14954:	b	148f8 <print_debug_data@@Base+0x668>
   14958:	mov	r5, #1
   1495c:	ldr	r0, [pc, #756]	; 14c58 <print_debug_data@@Base+0x9c8>
   14960:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   14964:	cmp	r0, #0
   14968:	bne	14988 <print_debug_data@@Base+0x6f8>
   1496c:	mov	r4, #0
   14970:	ldr	sl, [pc, #736]	; 14c58 <print_debug_data@@Base+0x9c8>
   14974:	movw	r9, #49648	; 0xc1f0
   14978:	movt	r9, #2
   1497c:	add	r3, r8, r8, lsl #2
   14980:	add	r9, r9, r3, lsl #4
   14984:	b	149a8 <print_debug_data@@Base+0x718>
   14988:	bl	18b60 <handle_coda_error@@Base>
   1498c:	b	1496c <print_debug_data@@Base+0x6dc>
   14990:	ldr	r3, [r9, #844]	; 0x34c
   14994:	add	r3, r3, #1
   14998:	str	r3, [r9, #844]	; 0x34c
   1499c:	add	r4, r4, #1
   149a0:	cmp	r5, r4
   149a4:	ble	149dc <print_debug_data@@Base+0x74c>
   149a8:	mov	r2, r6
   149ac:	mov	r1, r8
   149b0:	add	r0, r7, #1
   149b4:	bl	14708 <print_debug_data@@Base+0x478>
   149b8:	sub	r3, r5, #1
   149bc:	cmp	r3, r4
   149c0:	ble	1499c <print_debug_data@@Base+0x70c>
   149c4:	mov	r0, sl
   149c8:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   149cc:	cmp	r0, #0
   149d0:	beq	14990 <print_debug_data@@Base+0x700>
   149d4:	bl	18b60 <handle_coda_error@@Base>
   149d8:	b	14990 <print_debug_data@@Base+0x700>
   149dc:	ldr	r0, [pc, #628]	; 14c58 <print_debug_data@@Base+0x9c8>
   149e0:	bl	123d4 <coda_cursor_goto_parent@plt>
   149e4:	b	14840 <print_debug_data@@Base+0x5b0>
   149e8:	movw	r0, #49648	; 0xc1f0
   149ec:	movt	r0, #2
   149f0:	add	r3, r0, r6, lsl #2
   149f4:	add	r2, sp, #8
   149f8:	ldr	r1, [r3, #3492]	; 0xda4
   149fc:	add	r0, r0, #144	; 0x90
   14a00:	bl	1220c <coda_cursor_get_record_field_available_status@plt>
   14a04:	cmp	r0, #0
   14a08:	bne	14a70 <print_debug_data@@Base+0x7e0>
   14a0c:	ldr	r2, [sp, #8]
   14a10:	cmp	r2, #0
   14a14:	bne	14a78 <print_debug_data@@Base+0x7e8>
   14a18:	movw	r3, #49648	; 0xc1f0
   14a1c:	movt	r3, #2
   14a20:	ldr	r0, [r3, #3360]	; 0xd20
   14a24:	add	r1, r0, r0, lsl #2
   14a28:	add	r3, r3, r1, lsl #4
   14a2c:	ldr	ip, [r3, #800]	; 0x320
   14a30:	ldr	r3, [r3, #804]	; 0x324
   14a34:	cmp	r3, #0
   14a38:	ble	14840 <print_debug_data@@Base+0x5b0>
   14a3c:	mov	r3, r1
   14a40:	ldr	r1, [pc, #532]	; 14c5c <print_debug_data@@Base+0x9cc>
   14a44:	add	r1, r1, r3, lsl #4
   14a48:	add	ip, ip, #1
   14a4c:	movw	r3, #53432	; 0xd0b8
   14a50:	movt	r3, #2
   14a54:	add	r3, r3, ip, lsl #2
   14a58:	movw	ip, #49648	; 0xc1f0
   14a5c:	movt	ip, #2
   14a60:	add	r0, r0, r0, lsl #2
   14a64:	add	ip, ip, r0, lsl #4
   14a68:	mov	lr, #0
   14a6c:	b	14ad0 <print_debug_data@@Base+0x840>
   14a70:	bl	18b60 <handle_coda_error@@Base>
   14a74:	b	14a0c <print_debug_data@@Base+0x77c>
   14a78:	movw	r0, #49648	; 0xc1f0
   14a7c:	movt	r0, #2
   14a80:	add	r3, r0, r6, lsl #2
   14a84:	ldr	r1, [r3, #3492]	; 0xda4
   14a88:	add	r0, r0, #144	; 0x90
   14a8c:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   14a90:	cmp	r0, #0
   14a94:	bne	14ab4 <print_debug_data@@Base+0x824>
   14a98:	add	r2, r6, #1
   14a9c:	mov	r1, r4
   14aa0:	add	r0, r7, #1
   14aa4:	bl	14708 <print_debug_data@@Base+0x478>
   14aa8:	ldr	r0, [pc, #424]	; 14c58 <print_debug_data@@Base+0x9c8>
   14aac:	bl	123d4 <coda_cursor_goto_parent@plt>
   14ab0:	b	14840 <print_debug_data@@Base+0x5b0>
   14ab4:	bl	18b60 <handle_coda_error@@Base>
   14ab8:	b	14a98 <print_debug_data@@Base+0x808>
   14abc:	add	r2, r2, #1
   14ac0:	add	r3, r3, #4
   14ac4:	ldr	r0, [ip, #804]	; 0x324
   14ac8:	cmp	r0, r2
   14acc:	ble	14840 <print_debug_data@@Base+0x5b0>
   14ad0:	ldr	r0, [r1], #4
   14ad4:	cmn	r0, #1
   14ad8:	bne	14abc <print_debug_data@@Base+0x82c>
   14adc:	ldr	r5, [ip, #844]	; 0x34c
   14ae0:	ldr	r4, [r3, #104]	; 0x68
   14ae4:	str	lr, [r4, r5, lsl #2]
   14ae8:	ldr	r4, [r3]
   14aec:	cmn	r4, #1
   14af0:	streq	lr, [r3]
   14af4:	str	lr, [r3, #32]
   14af8:	b	14abc <print_debug_data@@Base+0x82c>
   14afc:	movw	r2, #49648	; 0xc1f0
   14b00:	movt	r2, #2
   14b04:	ldr	r2, [r2, #3360]	; 0xd20
   14b08:	cmp	r2, r4
   14b0c:	bne	14bd0 <print_debug_data@@Base+0x940>
   14b10:	cmp	r3, #4
   14b14:	beq	14bec <print_debug_data@@Base+0x95c>
   14b18:	add	r1, sp, #8
   14b1c:	ldr	r0, [pc, #308]	; 14c58 <print_debug_data@@Base+0x9c8>
   14b20:	bl	12194 <coda_cursor_get_byte_size@plt>
   14b24:	cmp	r0, #0
   14b28:	bne	14c18 <print_debug_data@@Base+0x988>
   14b2c:	movw	r2, #49648	; 0xc1f0
   14b30:	movt	r2, #2
   14b34:	lsl	r1, r4, #2
   14b38:	add	r3, r1, r4
   14b3c:	add	r3, r2, r3, lsl #4
   14b40:	ldr	r0, [r3, #800]	; 0x320
   14b44:	movw	r3, #53432	; 0xd0b8
   14b48:	movt	r3, #2
   14b4c:	add	ip, r3, r0, lsl #2
   14b50:	add	r4, r1, r4
   14b54:	add	r2, r2, r4, lsl #4
   14b58:	ldr	r1, [r2, #844]	; 0x34c
   14b5c:	ldr	r2, [ip, #108]	; 0x6c
   14b60:	ldr	ip, [sp, #8]
   14b64:	str	ip, [r2, r1, lsl #2]
   14b68:	add	r3, r3, r0, lsl #2
   14b6c:	ldr	r2, [r3, #4]
   14b70:	cmn	r2, #1
   14b74:	beq	14c20 <print_debug_data@@Base+0x990>
   14b78:	ldrd	r4, [sp, #8]
   14b7c:	asr	r3, r2, #31
   14b80:	cmp	r2, r4
   14b84:	sbcs	r3, r3, r5
   14b88:	bge	14b9c <print_debug_data@@Base+0x90c>
   14b8c:	movw	r3, #53432	; 0xd0b8
   14b90:	movt	r3, #2
   14b94:	add	r3, r3, r0, lsl #2
   14b98:	str	r4, [r3, #4]
   14b9c:	movw	r3, #53432	; 0xd0b8
   14ba0:	movt	r3, #2
   14ba4:	add	r3, r3, r0, lsl #2
   14ba8:	ldr	r2, [r3, #36]	; 0x24
   14bac:	asr	r3, r2, #31
   14bb0:	cmp	r4, r2
   14bb4:	sbcs	r3, r5, r3
   14bb8:	bge	14840 <print_debug_data@@Base+0x5b0>
   14bbc:	movw	r3, #53432	; 0xd0b8
   14bc0:	movt	r3, #2
   14bc4:	add	r0, r3, r0, lsl #2
   14bc8:	str	r4, [r0, #36]	; 0x24
   14bcc:	b	14840 <print_debug_data@@Base+0x5b0>
   14bd0:	ldr	r3, [pc, #136]	; 14c60 <print_debug_data@@Base+0x9d0>
   14bd4:	mov	r2, #252	; 0xfc
   14bd8:	movw	r1, #43148	; 0xa88c
   14bdc:	movt	r1, #1
   14be0:	movw	r0, #43300	; 0xa924
   14be4:	movt	r0, #1
   14be8:	bl	1262c <__assert_fail@plt>
   14bec:	add	r1, sp, #4
   14bf0:	ldr	r0, [pc, #96]	; 14c58 <print_debug_data@@Base+0x9c8>
   14bf4:	bl	12404 <coda_cursor_get_string_length@plt>
   14bf8:	cmp	r0, #0
   14bfc:	bne	14c10 <print_debug_data@@Base+0x980>
   14c00:	ldr	r2, [sp, #4]
   14c04:	asr	r3, r2, #31
   14c08:	strd	r2, [sp, #8]
   14c0c:	b	14b2c <print_debug_data@@Base+0x89c>
   14c10:	bl	18b60 <handle_coda_error@@Base>
   14c14:	b	14c00 <print_debug_data@@Base+0x970>
   14c18:	bl	18b60 <handle_coda_error@@Base>
   14c1c:	b	14b2c <print_debug_data@@Base+0x89c>
   14c20:	ldr	r2, [sp, #8]
   14c24:	movw	r3, #53432	; 0xd0b8
   14c28:	movt	r3, #2
   14c2c:	add	r1, r3, r0, lsl #2
   14c30:	str	r2, [r1, #4]
   14c34:	str	r2, [r1, #36]	; 0x24
   14c38:	b	14840 <print_debug_data@@Base+0x5b0>
   14c3c:	ldr	r3, [pc, #28]	; 14c60 <print_debug_data@@Base+0x9d0>
   14c40:	movw	r2, #294	; 0x126
   14c44:	movw	r1, #43148	; 0xa88c
   14c48:	movt	r1, #1
   14c4c:	movw	r0, #43484	; 0xa9dc
   14c50:	movt	r0, #1
   14c54:	bl	1262c <__assert_fail@plt>
   14c58:	andeq	ip, r2, r0, lsl #5
   14c5c:	andeq	ip, r2, r8, lsl r5
   14c60:	andeq	sl, r1, ip, lsr r8

00014c64 <dim_info_init@@Base>:
   14c64:	movw	r3, #53432	; 0xd0b8
   14c68:	movt	r3, #2
   14c6c:	mov	r2, #0
   14c70:	str	r2, [r3]
   14c74:	str	r2, [r3, #68]	; 0x44
   14c78:	mvn	r2, #0
   14c7c:	str	r2, [r3, #104]	; 0x68
   14c80:	bx	lr

00014c84 <dim_info_done@@Base>:
   14c84:	bx	lr

00014c88 <print_all_distinct_dims@@Base>:
   14c88:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14c8c:	strd	r6, [sp, #8]
   14c90:	strd	r8, [sp, #16]
   14c94:	str	lr, [sp, #24]
   14c98:	sub	sp, sp, #12
   14c9c:	movw	r3, #53432	; 0xd0b8
   14ca0:	movt	r3, #2
   14ca4:	ldr	r3, [r3]
   14ca8:	cmp	r3, r0
   14cac:	ble	14ce4 <print_all_distinct_dims@@Base+0x5c>
   14cb0:	mov	r6, r0
   14cb4:	movw	r3, #53432	; 0xd0b8
   14cb8:	movt	r3, #2
   14cbc:	add	r2, r0, #18
   14cc0:	ldr	r3, [r3, r2, lsl #2]
   14cc4:	cmp	r3, #0
   14cc8:	bne	14d00 <print_all_distinct_dims@@Base+0x78>
   14ccc:	add	sp, sp, #12
   14cd0:	ldrd	r4, [sp]
   14cd4:	ldrd	r6, [sp, #8]
   14cd8:	ldrd	r8, [sp, #16]
   14cdc:	add	sp, sp, #24
   14ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ce4:	ldr	r3, [pc, #484]	; 14ed0 <print_all_distinct_dims@@Base+0x248>
   14ce8:	mov	r2, #50	; 0x32
   14cec:	movw	r1, #43148	; 0xa88c
   14cf0:	movt	r1, #1
   14cf4:	movw	r0, #43340	; 0xa94c
   14cf8:	movt	r0, #1
   14cfc:	bl	1262c <__assert_fail@plt>
   14d00:	movw	r3, #53432	; 0xd0b8
   14d04:	movt	r3, #2
   14d08:	add	r3, r3, r0, lsl #2
   14d0c:	ldr	r4, [r3, #4]
   14d10:	add	r4, r4, #1
   14d14:	lsl	r4, r4, #2
   14d18:	mov	r0, r4
   14d1c:	bl	123a4 <malloc@plt>
   14d20:	subs	r5, r0, #0
   14d24:	beq	14d80 <print_all_distinct_dims@@Base+0xf8>
   14d28:	movw	r4, #53432	; 0xd0b8
   14d2c:	movt	r4, #2
   14d30:	add	r3, r4, r6, lsl #2
   14d34:	ldr	r2, [r3, #4]
   14d38:	add	r2, r2, #1
   14d3c:	lsl	r2, r2, #2
   14d40:	mov	r1, #0
   14d44:	mov	r0, r5
   14d48:	bl	12488 <memset@plt>
   14d4c:	add	r3, r4, r6, lsl #2
   14d50:	ldr	r3, [r3, #140]	; 0x8c
   14d54:	add	r4, r4, r3, lsl #3
   14d58:	ldrd	r0, [r4, #232]	; 0xe8
   14d5c:	cmp	r0, #1
   14d60:	sbcs	r3, r1, #0
   14d64:	blt	14dd0 <print_all_distinct_dims@@Base+0x148>
   14d68:	movw	r3, #53432	; 0xd0b8
   14d6c:	movt	r3, #2
   14d70:	add	r3, r3, r6, lsl #2
   14d74:	ldr	r3, [r3, #108]	; 0x6c
   14d78:	add	r0, r3, r0, lsl #2
   14d7c:	b	14db4 <print_all_distinct_dims@@Base+0x12c>
   14d80:	mov	r3, #61	; 0x3d
   14d84:	str	r3, [sp]
   14d88:	movw	r3, #43148	; 0xa88c
   14d8c:	movt	r3, #1
   14d90:	mov	r2, r4
   14d94:	movw	r1, #42532	; 0xa624
   14d98:	movt	r1, #1
   14d9c:	mvn	r0, #0
   14da0:	bl	12224 <coda_set_error@plt>
   14da4:	bl	18b60 <handle_coda_error@@Base>
   14da8:	b	14d28 <print_all_distinct_dims@@Base+0xa0>
   14dac:	cmp	r3, r0
   14db0:	beq	14dd0 <print_all_distinct_dims@@Base+0x148>
   14db4:	ldr	r2, [r3], #4
   14db8:	cmp	r2, #0
   14dbc:	blt	14dac <print_all_distinct_dims@@Base+0x124>
   14dc0:	ldr	r1, [r5, r2, lsl #2]
   14dc4:	add	r1, r1, #1
   14dc8:	str	r1, [r5, r2, lsl #2]
   14dcc:	b	14dac <print_all_distinct_dims@@Base+0x124>
   14dd0:	add	r1, r6, #1
   14dd4:	movw	r0, #43368	; 0xa968
   14dd8:	movt	r0, #1
   14ddc:	bl	12200 <printf@plt>
   14de0:	movw	r3, #53432	; 0xd0b8
   14de4:	movt	r3, #2
   14de8:	add	r2, r3, r6, lsl #2
   14dec:	ldr	r4, [r2, #36]	; 0x24
   14df0:	ldr	r1, [r2, #4]
   14df4:	cmp	r4, r1
   14df8:	bge	14e3c <print_all_distinct_dims@@Base+0x1b4>
   14dfc:	add	r7, r5, r4, lsl #2
   14e00:	movw	r9, #43380	; 0xa974
   14e04:	movt	r9, #1
   14e08:	mov	r8, r2
   14e0c:	b	14e20 <print_all_distinct_dims@@Base+0x198>
   14e10:	add	r4, r4, #1
   14e14:	ldr	r1, [r8, #4]
   14e18:	cmp	r1, r4
   14e1c:	ble	14e3c <print_all_distinct_dims@@Base+0x1b4>
   14e20:	ldr	r3, [r7], #4
   14e24:	cmp	r3, #0
   14e28:	ble	14e10 <print_all_distinct_dims@@Base+0x188>
   14e2c:	mov	r1, r4
   14e30:	mov	r0, r9
   14e34:	bl	12200 <printf@plt>
   14e38:	b	14e10 <print_all_distinct_dims@@Base+0x188>
   14e3c:	movw	r0, #43384	; 0xa978
   14e40:	movt	r0, #1
   14e44:	bl	12200 <printf@plt>
   14e48:	movw	r0, #43388	; 0xa97c
   14e4c:	movt	r0, #1
   14e50:	bl	12200 <printf@plt>
   14e54:	movw	r3, #53432	; 0xd0b8
   14e58:	movt	r3, #2
   14e5c:	add	r2, r3, r6, lsl #2
   14e60:	ldr	r4, [r2, #36]	; 0x24
   14e64:	ldr	r3, [r2, #4]
   14e68:	cmp	r4, r3
   14e6c:	bge	14eac <print_all_distinct_dims@@Base+0x224>
   14e70:	add	r7, r5, r4, lsl #2
   14e74:	movw	r8, #43380	; 0xa974
   14e78:	movt	r8, #1
   14e7c:	mov	r6, r2
   14e80:	b	14e94 <print_all_distinct_dims@@Base+0x20c>
   14e84:	add	r4, r4, #1
   14e88:	ldr	r3, [r6, #4]
   14e8c:	cmp	r3, r4
   14e90:	ble	14eac <print_all_distinct_dims@@Base+0x224>
   14e94:	ldr	r1, [r7], #4
   14e98:	cmp	r1, #0
   14e9c:	ble	14e84 <print_all_distinct_dims@@Base+0x1fc>
   14ea0:	mov	r0, r8
   14ea4:	bl	12200 <printf@plt>
   14ea8:	b	14e84 <print_all_distinct_dims@@Base+0x1fc>
   14eac:	ldr	r1, [r5, r3, lsl #2]
   14eb0:	movw	r0, #43384	; 0xa978
   14eb4:	movt	r0, #1
   14eb8:	bl	12200 <printf@plt>
   14ebc:	mov	r0, #10
   14ec0:	bl	12494 <putchar@plt>
   14ec4:	mov	r0, r5
   14ec8:	bl	1226c <free@plt>
   14ecc:	b	14ccc <print_all_distinct_dims@@Base+0x44>
   14ed0:	andeq	sl, r1, r4, asr r8

00014ed4 <dim_enter_array@@Base>:
   14ed4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14ed8:	strd	r6, [sp, #8]
   14edc:	strd	r8, [sp, #16]
   14ee0:	strd	sl, [sp, #24]
   14ee4:	str	lr, [sp, #32]
   14ee8:	sub	sp, sp, #100	; 0x64
   14eec:	movw	r3, #49648	; 0xc1f0
   14ef0:	movt	r3, #2
   14ef4:	ldr	sl, [r3, #3360]	; 0xd20
   14ef8:	ldr	r2, [r3, #136]	; 0x88
   14efc:	add	r2, r2, #2
   14f00:	add	r1, sp, #92	; 0x5c
   14f04:	ldr	r0, [r3, r2, lsl #2]
   14f08:	bl	12638 <coda_type_get_class@plt>
   14f0c:	cmp	r0, #0
   14f10:	bne	14f40 <dim_enter_array@@Base+0x6c>
   14f14:	ldr	r3, [sp, #92]	; 0x5c
   14f18:	sub	r3, r3, #1
   14f1c:	cmp	r3, #5
   14f20:	ldrls	pc, [pc, r3, lsl #2]
   14f24:	b	152dc <dim_enter_array@@Base+0x408>
   14f28:	andeq	r4, r1, r8, asr #30
   14f2c:	ldrdeq	r5, [r1], -ip
   14f30:	ldrdeq	r5, [r1], -ip
   14f34:	andeq	r5, r1, r4, lsr r0
   14f38:	andeq	r5, r1, r0, asr #4
   14f3c:			; <UNDEFINED> instruction: 0x00014fbc
   14f40:	bl	18b60 <handle_coda_error@@Base>
   14f44:	b	14f14 <dim_enter_array@@Base+0x40>
   14f48:	movw	r3, #49648	; 0xc1f0
   14f4c:	movt	r3, #2
   14f50:	ldr	r0, [r3, #136]	; 0x88
   14f54:	add	r0, r0, #2
   14f58:	add	r2, sp, #56	; 0x38
   14f5c:	add	r1, sp, #52	; 0x34
   14f60:	ldr	r0, [r3, r0, lsl #2]
   14f64:	bl	12578 <coda_type_get_array_dim@plt>
   14f68:	cmp	r0, #0
   14f6c:	bne	14fb4 <dim_enter_array@@Base+0xe0>
   14f70:	ldr	r0, [sp, #52]	; 0x34
   14f74:	movw	r3, #49648	; 0xc1f0
   14f78:	movt	r3, #2
   14f7c:	add	r2, sl, sl, lsl #2
   14f80:	add	r3, r3, r2, lsl #4
   14f84:	str	r0, [r3, #804]	; 0x324
   14f88:	cmp	r0, #0
   14f8c:	ble	15078 <dim_enter_array@@Base+0x1a4>
   14f90:	add	r3, sp, #52	; 0x34
   14f94:	ldr	r1, [pc, #2300]	; 15898 <dim_enter_array@@Base+0x9c4>
   14f98:	add	r2, r1, r2, lsl #4
   14f9c:	add	r0, r3, r0, lsl #2
   14fa0:	ldr	r1, [r3, #4]!
   14fa4:	str	r1, [r2], #4
   14fa8:	cmp	r3, r0
   14fac:	bne	14fa0 <dim_enter_array@@Base+0xcc>
   14fb0:	b	15078 <dim_enter_array@@Base+0x1a4>
   14fb4:	bl	18b60 <handle_coda_error@@Base>
   14fb8:	b	14f70 <dim_enter_array@@Base+0x9c>
   14fbc:	movw	r3, #49648	; 0xc1f0
   14fc0:	movt	r3, #2
   14fc4:	ldr	r2, [r3, #136]	; 0x88
   14fc8:	add	r2, r2, #2
   14fcc:	add	r1, sp, #56	; 0x38
   14fd0:	ldr	r0, [r3, r2, lsl #2]
   14fd4:	bl	124ac <coda_type_get_special_type@plt>
   14fd8:	cmp	r0, #0
   14fdc:	bne	15010 <dim_enter_array@@Base+0x13c>
   14fe0:	ldr	r3, [sp, #56]	; 0x38
   14fe4:	cmp	r3, #3
   14fe8:	bne	15018 <dim_enter_array@@Base+0x144>
   14fec:	movw	r3, #49648	; 0xc1f0
   14ff0:	movt	r3, #2
   14ff4:	add	r2, sl, sl, lsl #2
   14ff8:	add	r3, r3, r2, lsl #4
   14ffc:	mov	r2, #1
   15000:	str	r2, [r3, #804]	; 0x324
   15004:	mov	r2, #2
   15008:	str	r2, [r3, #808]	; 0x328
   1500c:	b	15078 <dim_enter_array@@Base+0x1a4>
   15010:	bl	18b60 <handle_coda_error@@Base>
   15014:	b	14fe0 <dim_enter_array@@Base+0x10c>
   15018:	ldr	r3, [pc, #2172]	; 1589c <dim_enter_array@@Base+0x9c8>
   1501c:	movw	r2, #349	; 0x15d
   15020:	movw	r1, #43148	; 0xa88c
   15024:	movt	r1, #1
   15028:	movw	r0, #43484	; 0xa9dc
   1502c:	movt	r0, #1
   15030:	bl	1262c <__assert_fail@plt>
   15034:	movw	r3, #49648	; 0xc1f0
   15038:	movt	r3, #2
   1503c:	ldr	r2, [r3, #136]	; 0x88
   15040:	add	r2, r2, #2
   15044:	add	r1, sp, #56	; 0x38
   15048:	ldr	r0, [r3, r2, lsl #2]
   1504c:	bl	124e8 <coda_type_get_string_length@plt>
   15050:	cmp	r0, #0
   15054:	bne	15238 <dim_enter_array@@Base+0x364>
   15058:	movw	r3, #49648	; 0xc1f0
   1505c:	movt	r3, #2
   15060:	add	r2, sl, sl, lsl #2
   15064:	add	r3, r3, r2, lsl #4
   15068:	mov	r2, #1
   1506c:	str	r2, [r3, #804]	; 0x324
   15070:	ldr	r2, [sp, #56]	; 0x38
   15074:	str	r2, [r3, #808]	; 0x328
   15078:	movw	r3, #49644	; 0xc1ec
   1507c:	movt	r3, #2
   15080:	ldr	r3, [r3]
   15084:	cmp	r3, #0
   15088:	beq	152f8 <dim_enter_array@@Base+0x424>
   1508c:	movw	r3, #53432	; 0xd0b8
   15090:	movt	r3, #2
   15094:	ldr	fp, [r3]
   15098:	movw	r3, #49648	; 0xc1f0
   1509c:	movt	r3, #2
   150a0:	add	r2, sl, sl, lsl #2
   150a4:	add	r3, r3, r2, lsl #4
   150a8:	str	fp, [r3, #800]	; 0x320
   150ac:	ldr	r0, [r3, #804]	; 0x324
   150b0:	add	r2, r0, fp
   150b4:	cmp	r2, #8
   150b8:	bgt	15324 <dim_enter_array@@Base+0x450>
   150bc:	movw	r3, #53432	; 0xd0b8
   150c0:	movt	r3, #2
   150c4:	str	r2, [r3]
   150c8:	cmp	fp, #0
   150cc:	ble	15340 <dim_enter_array@@Base+0x46c>
   150d0:	movw	r3, #53432	; 0xd0b8
   150d4:	movt	r3, #2
   150d8:	add	r2, r3, fp, lsl #3
   150dc:	ldrd	r4, [r2, #232]	; 0xe8
   150e0:	strd	r4, [sp, #16]
   150e4:	add	r2, fp, #37	; 0x25
   150e8:	lsl	r2, r2, #3
   150ec:	add	r2, r3, r2
   150f0:	ldrd	r2, [r2]
   150f4:	strd	r2, [sp, #32]
   150f8:	cmp	r2, #1
   150fc:	sbcs	r3, r3, #0
   15100:	bge	15350 <dim_enter_array@@Base+0x47c>
   15104:	cmp	r0, #0
   15108:	ble	1513c <dim_enter_array@@Base+0x268>
   1510c:	add	r3, fp, #1
   15110:	movw	r2, #53432	; 0xd0b8
   15114:	movt	r2, #2
   15118:	add	r3, r2, r3, lsl #2
   1511c:	add	r0, r0, fp
   15120:	add	r2, r2, #4
   15124:	add	r0, r2, r0, lsl #2
   15128:	mov	r2, #0
   1512c:	str	r2, [r3], #4
   15130:	str	r2, [r3, #64]	; 0x40
   15134:	cmp	r3, r0
   15138:	bne	1512c <dim_enter_array@@Base+0x258>
   1513c:	mov	r9, #0
   15140:	movw	r3, #53432	; 0xd0b8
   15144:	movt	r3, #2
   15148:	mov	r2, #0
   1514c:	str	r2, [r3, #68]	; 0x44
   15150:	mvn	r2, #0
   15154:	str	r2, [r3, #104]	; 0x68
   15158:	ldr	r6, [r3]
   1515c:	cmp	r6, #0
   15160:	ble	151d0 <dim_enter_array@@Base+0x2fc>
   15164:	add	r5, r3, #72	; 0x48
   15168:	mov	r2, #0
   1516c:	mvn	ip, #0
   15170:	mov	r1, r2
   15174:	mov	r0, r2
   15178:	mov	lr, r2
   1517c:	mov	r7, #1
   15180:	mov	r4, r7
   15184:	ldr	r3, [r5], #4
   15188:	cmp	r3, #0
   1518c:	movne	ip, lr
   15190:	movne	r2, r7
   15194:	movne	r1, r4
   15198:	movne	r0, r4
   1519c:	add	lr, lr, #1
   151a0:	cmp	lr, r6
   151a4:	bne	15184 <dim_enter_array@@Base+0x2b0>
   151a8:	cmp	r1, #0
   151ac:	beq	151bc <dim_enter_array@@Base+0x2e8>
   151b0:	movw	r3, #53432	; 0xd0b8
   151b4:	movt	r3, #2
   151b8:	str	r0, [r3, #68]	; 0x44
   151bc:	cmp	r2, #0
   151c0:	beq	151d0 <dim_enter_array@@Base+0x2fc>
   151c4:	movw	r3, #53432	; 0xd0b8
   151c8:	movt	r3, #2
   151cc:	str	ip, [r3, #104]	; 0x68
   151d0:	movw	r3, #49648	; 0xc1f0
   151d4:	movt	r3, #2
   151d8:	add	r2, sl, sl, lsl #2
   151dc:	add	r3, r3, r2, lsl #4
   151e0:	mov	r2, #1
   151e4:	str	r2, [r3, #840]	; 0x348
   151e8:	ldr	lr, [r3, #804]	; 0x324
   151ec:	cmp	lr, #0
   151f0:	ble	155d0 <dim_enter_array@@Base+0x6fc>
   151f4:	add	ip, fp, r2
   151f8:	movw	r3, #53432	; 0xd0b8
   151fc:	movt	r3, #2
   15200:	add	ip, r3, ip, lsl #2
   15204:	add	r2, fp, #29
   15208:	add	r3, r3, r2, lsl #3
   1520c:	mov	r4, #1
   15210:	mov	r2, #0
   15214:	movw	r5, #53432	; 0xd0b8
   15218:	movt	r5, #2
   1521c:	add	r8, fp, #30
   15220:	add	r8, r5, r8, lsl #3
   15224:	add	r5, r5, fp, lsl #2
   15228:	str	sl, [sp, #28]
   1522c:	str	fp, [sp, #40]	; 0x28
   15230:	ldrd	sl, [sp, #16]
   15234:	b	15594 <dim_enter_array@@Base+0x6c0>
   15238:	bl	18b60 <handle_coda_error@@Base>
   1523c:	b	15058 <dim_enter_array@@Base+0x184>
   15240:	movw	r3, #49648	; 0xc1f0
   15244:	movt	r3, #2
   15248:	ldr	r2, [r3, #136]	; 0x88
   1524c:	add	r2, r2, #2
   15250:	add	r1, sp, #56	; 0x38
   15254:	ldr	r0, [r3, r2, lsl #2]
   15258:	bl	122d8 <coda_type_get_bit_size@plt>
   1525c:	cmp	r0, #0
   15260:	bne	152b8 <dim_enter_array@@Base+0x3e4>
   15264:	movw	r3, #49648	; 0xc1f0
   15268:	movt	r3, #2
   1526c:	add	r2, sl, sl, lsl #2
   15270:	add	r3, r3, r2, lsl #4
   15274:	mov	r2, #1
   15278:	str	r2, [r3, #804]	; 0x324
   1527c:	ldrd	r4, [sp, #56]	; 0x38
   15280:	cmp	r4, #0
   15284:	sbcs	r3, r5, #0
   15288:	blt	152c0 <dim_enter_array@@Base+0x3ec>
   1528c:	movw	r1, #49648	; 0xc1f0
   15290:	movt	r1, #2
   15294:	add	r0, sl, sl, lsl #2
   15298:	add	r1, r1, r0, lsl #4
   1529c:	and	r0, r4, #7
   152a0:	lsr	r2, r4, #3
   152a4:	orr	r2, r2, r5, lsl #29
   152a8:	cmp	r0, #0
   152ac:	addne	r2, r2, #1
   152b0:	str	r2, [r1, #808]	; 0x328
   152b4:	b	15078 <dim_enter_array@@Base+0x1a4>
   152b8:	bl	18b60 <handle_coda_error@@Base>
   152bc:	b	15264 <dim_enter_array@@Base+0x390>
   152c0:	movw	r3, #49648	; 0xc1f0
   152c4:	movt	r3, #2
   152c8:	add	r2, sl, sl, lsl #2
   152cc:	add	r3, r3, r2, lsl #4
   152d0:	mvn	r2, #0
   152d4:	str	r2, [r3, #808]	; 0x328
   152d8:	b	15078 <dim_enter_array@@Base+0x1a4>
   152dc:	ldr	r3, [pc, #1464]	; 1589c <dim_enter_array@@Base+0x9c8>
   152e0:	movw	r2, #386	; 0x182
   152e4:	movw	r1, #43148	; 0xa88c
   152e8:	movt	r1, #1
   152ec:	movw	r0, #43484	; 0xa9dc
   152f0:	movt	r0, #1
   152f4:	bl	1262c <__assert_fail@plt>
   152f8:	movw	r3, #49648	; 0xc1f0
   152fc:	movt	r3, #2
   15300:	lsl	r2, sl, #2
   15304:	add	r1, r2, sl
   15308:	add	r1, r3, r1, lsl #4
   1530c:	mvn	r0, #0
   15310:	str	r0, [r1, #800]	; 0x320
   15314:	mov	r0, #0
   15318:	str	r0, [r1, #840]	; 0x348
   1531c:	str	r0, [r1, #844]	; 0x34c
   15320:	b	157f4 <dim_enter_array@@Base+0x920>
   15324:	ldr	r3, [pc, #1392]	; 1589c <dim_enter_array@@Base+0x9c8>
   15328:	movw	r2, #402	; 0x192
   1532c:	movw	r1, #43148	; 0xa88c
   15330:	movt	r1, #1
   15334:	movw	r0, #43396	; 0xa984
   15338:	movt	r0, #1
   1533c:	bl	1262c <__assert_fail@plt>
   15340:	mov	r2, #1
   15344:	mov	r3, #0
   15348:	strd	r2, [sp, #32]
   1534c:	strd	r2, [sp, #16]
   15350:	cmp	r0, #0
   15354:	ble	1513c <dim_enter_array@@Base+0x268>
   15358:	add	r7, sl, sl, lsl #2
   1535c:	ldr	r3, [pc, #1332]	; 15898 <dim_enter_array@@Base+0x9c4>
   15360:	add	r7, r3, r7, lsl #4
   15364:	add	r4, fp, #1
   15368:	lsl	r3, r4, #2
   1536c:	str	r3, [sp, #8]
   15370:	movw	r2, #53432	; 0xd0b8
   15374:	movt	r2, #2
   15378:	add	r3, r3, r2
   1537c:	add	r0, r0, fp
   15380:	add	r2, r2, #4
   15384:	add	r0, r2, r0, lsl #2
   15388:	mov	r1, r7
   1538c:	mov	r5, #0
   15390:	mov	ip, r5
   15394:	ldr	r2, [r1], #4
   15398:	str	r2, [r3], #4
   1539c:	str	ip, [r3, #64]	; 0x40
   153a0:	cmn	r2, #1
   153a4:	moveq	r5, #1
   153a8:	cmp	r3, r0
   153ac:	bne	15394 <dim_enter_array@@Base+0x4c0>
   153b0:	cmp	r5, #0
   153b4:	moveq	r9, r5
   153b8:	beq	15140 <dim_enter_array@@Base+0x26c>
   153bc:	ldr	r3, [sp, #16]
   153c0:	lsl	r3, r3, #2
   153c4:	str	r3, [sp, #40]	; 0x28
   153c8:	ldr	r4, [pc, #1232]	; 158a0 <dim_enter_array@@Base+0x9cc>
   153cc:	ldr	r3, [sp, #8]
   153d0:	add	r4, r3, r4
   153d4:	mov	r9, r7
   153d8:	mov	r6, #0
   153dc:	movw	r3, #43148	; 0xa88c
   153e0:	movt	r3, #1
   153e4:	str	r3, [sp, #44]	; 0x2c
   153e8:	movw	r8, #49648	; 0xc1f0
   153ec:	movt	r8, #2
   153f0:	add	r3, sl, sl, lsl #2
   153f4:	add	r8, r8, r3, lsl #4
   153f8:	str	sl, [sp, #28]
   153fc:	ldr	r3, [r9], #4
   15400:	cmn	r3, #1
   15404:	movne	r3, #0
   15408:	strne	r3, [r4, #32]
   1540c:	strne	r3, [r4]
   15410:	beq	15488 <dim_enter_array@@Base+0x5b4>
   15414:	add	r6, r6, #1
   15418:	add	r4, r4, #4
   1541c:	ldr	r3, [r8, #804]	; 0x324
   15420:	cmp	r3, r6
   15424:	bgt	153fc <dim_enter_array@@Base+0x528>
   15428:	ldr	sl, [sp, #28]
   1542c:	movw	r4, #49648	; 0xc1f0
   15430:	movt	r4, #2
   15434:	add	r3, sl, sl, lsl #2
   15438:	add	r4, r4, r3, lsl #4
   1543c:	mov	r0, #0
   15440:	str	r0, [r4, #844]	; 0x34c
   15444:	mov	r2, r0
   15448:	mov	r1, r0
   1544c:	bl	14708 <print_debug_data@@Base+0x478>
   15450:	ldr	r3, [r4, #804]	; 0x324
   15454:	cmp	r3, #0
   15458:	ble	1555c <dim_enter_array@@Base+0x688>
   1545c:	movw	r4, #53432	; 0xd0b8
   15460:	movt	r4, #2
   15464:	ldr	r3, [sp, #8]
   15468:	add	r4, r3, r4
   1546c:	mov	r6, #0
   15470:	mov	r9, r6
   15474:	movw	r8, #49648	; 0xc1f0
   15478:	movt	r8, #2
   1547c:	add	r3, sl, sl, lsl #2
   15480:	add	r8, r8, r3, lsl #4
   15484:	b	15530 <dim_enter_array@@Base+0x65c>
   15488:	mov	sl, r4
   1548c:	str	fp, [r4, #32]
   15490:	ldr	r0, [sp, #40]	; 0x28
   15494:	bl	123a4 <malloc@plt>
   15498:	str	r0, [r4]
   1549c:	cmp	r0, #0
   154a0:	beq	154d8 <dim_enter_array@@Base+0x604>
   154a4:	ldrd	r2, [sp, #16]
   154a8:	cmp	r2, #1
   154ac:	sbcs	r3, r3, #0
   154b0:	blt	15414 <dim_enter_array@@Base+0x540>
   154b4:	ldr	r0, [sp, #16]
   154b8:	mov	r3, #0
   154bc:	mvn	r1, #0
   154c0:	ldr	r2, [sl]
   154c4:	str	r1, [r2, r3, lsl #2]
   154c8:	add	r3, r3, #1
   154cc:	cmp	r3, r0
   154d0:	bne	154c0 <dim_enter_array@@Base+0x5ec>
   154d4:	b	15414 <dim_enter_array@@Base+0x540>
   154d8:	mov	r3, #456	; 0x1c8
   154dc:	str	r3, [sp]
   154e0:	ldr	r3, [sp, #44]	; 0x2c
   154e4:	ldr	r2, [sp, #40]	; 0x28
   154e8:	movw	r1, #42532	; 0xa624
   154ec:	movt	r1, #1
   154f0:	mvn	r0, #0
   154f4:	bl	12224 <coda_set_error@plt>
   154f8:	bl	18b60 <handle_coda_error@@Base>
   154fc:	b	154a4 <dim_enter_array@@Base+0x5d0>
   15500:	mov	r3, #0
   15504:	str	r3, [r4, #68]	; 0x44
   15508:	ldr	r0, [r4, #104]	; 0x68
   1550c:	bl	1226c <free@plt>
   15510:	mov	r3, #0
   15514:	str	r3, [r4, #104]	; 0x68
   15518:	str	r3, [r4, #136]	; 0x88
   1551c:	add	r6, r6, #1
   15520:	add	r4, r4, #4
   15524:	ldr	r3, [r8, #804]	; 0x324
   15528:	cmp	r3, r6
   1552c:	ble	15140 <dim_enter_array@@Base+0x26c>
   15530:	ldr	r3, [r7], #4
   15534:	cmn	r3, #1
   15538:	bne	1551c <dim_enter_array@@Base+0x648>
   1553c:	ldr	r2, [r4]
   15540:	ldr	r3, [r4, #32]
   15544:	cmp	r2, r3
   15548:	beq	15500 <dim_enter_array@@Base+0x62c>
   1554c:	mov	r3, #1
   15550:	str	r3, [r4, #68]	; 0x44
   15554:	mov	r9, r5
   15558:	b	1551c <dim_enter_array@@Base+0x648>
   1555c:	mov	r9, #0
   15560:	b	15140 <dim_enter_array@@Base+0x26c>
   15564:	asr	r7, r1, #31
   15568:	ldr	r0, [r3]
   1556c:	mul	r6, r7, r0
   15570:	ldr	r7, [r3, #4]
   15574:	mla	r6, r1, r7, r6
   15578:	umull	r0, r1, r0, r1
   1557c:	add	r1, r6, r1
   15580:	strd	r0, [r3, #8]
   15584:	add	r2, r2, #1
   15588:	add	r3, r3, #8
   1558c:	cmp	r2, lr
   15590:	beq	15810 <dim_enter_array@@Base+0x93c>
   15594:	ldr	r1, [ip], #4
   15598:	mul	r4, r1, r4
   1559c:	cmp	r2, #0
   155a0:	bne	15564 <dim_enter_array@@Base+0x690>
   155a4:	ldr	r0, [r5, #4]
   155a8:	mov	r6, r0
   155ac:	asr	r7, r0, #31
   155b0:	strd	r6, [sp, #8]
   155b4:	mul	r6, r0, fp
   155b8:	ldr	r1, [sp, #12]
   155bc:	mla	r6, sl, r1, r6
   155c0:	umull	r0, r1, r0, sl
   155c4:	add	r1, r6, r1
   155c8:	strd	r0, [r8]
   155cc:	b	15584 <dim_enter_array@@Base+0x6b0>
   155d0:	cmp	r9, #0
   155d4:	bne	15860 <dim_enter_array@@Base+0x98c>
   155d8:	movw	r1, #53432	; 0xd0b8
   155dc:	movt	r1, #2
   155e0:	add	r0, fp, #38	; 0x26
   155e4:	lsl	r0, r0, #3
   155e8:	add	r3, r1, fp, lsl #2
   155ec:	ldr	r2, [r3, #4]
   155f0:	asr	r5, r2, #31
   155f4:	ldrd	r6, [sp, #32]
   155f8:	mul	ip, r2, r7
   155fc:	mla	ip, r6, r5, ip
   15600:	umull	r2, r3, r2, r6
   15604:	add	r3, ip, r3
   15608:	strd	r2, [r1, r0]
   1560c:	b	156f0 <dim_enter_array@@Base+0x81c>
   15610:	add	r6, r6, #1
   15614:	cmp	r6, r8
   15618:	beq	156f0 <dim_enter_array@@Base+0x81c>
   1561c:	cmp	lr, #0
   15620:	lslgt	r5, r6, #2
   15624:	movgt	ip, r7
   15628:	movgt	r3, r9
   1562c:	movgt	r2, #1
   15630:	ble	15610 <dim_enter_array@@Base+0x73c>
   15634:	ldr	r1, [r3, #72]	; 0x48
   15638:	cmp	r1, #0
   1563c:	ldrne	r1, [r3, #108]	; 0x6c
   15640:	ldrne	r1, [r1, r5]
   15644:	ldreq	r1, [r3, #4]
   15648:	mul	r2, r1, r2
   1564c:	ldrd	r0, [ip]
   15650:	adds	r0, r0, r2
   15654:	adc	r1, r1, r2, asr #31
   15658:	strd	r0, [ip], #8
   1565c:	add	r3, r3, #4
   15660:	cmp	r3, r4
   15664:	bne	15634 <dim_enter_array@@Base+0x760>
   15668:	b	15610 <dim_enter_array@@Base+0x73c>
   1566c:	movw	r1, #53432	; 0xd0b8
   15670:	movt	r1, #2
   15674:	add	r0, fp, #38	; 0x26
   15678:	lsl	r0, r0, #3
   1567c:	add	r3, r1, fp, lsl #2
   15680:	ldr	r2, [r3, #4]
   15684:	asr	r5, r2, #31
   15688:	ldrd	r6, [sp, #32]
   1568c:	mul	ip, r2, r7
   15690:	mla	ip, r6, r5, ip
   15694:	umull	r2, r3, r2, r6
   15698:	add	r3, ip, r3
   1569c:	strd	r2, [r1, r0]
   156a0:	cmp	lr, #1
   156a4:	ble	156f0 <dim_enter_array@@Base+0x81c>
   156a8:	add	r0, fp, #38	; 0x26
   156ac:	add	r0, r1, r0, lsl #3
   156b0:	add	ip, fp, #2
   156b4:	add	ip, r1, ip, lsl #2
   156b8:	add	lr, lr, fp
   156bc:	add	r3, r1, #296	; 0x128
   156c0:	add	lr, r3, lr, lsl #3
   156c4:	ldr	r3, [r0]
   156c8:	ldr	r1, [r0, #4]
   156cc:	ldr	r2, [ip], #4
   156d0:	asr	r5, r2, #31
   156d4:	mul	r1, r2, r1
   156d8:	mla	r1, r3, r5, r1
   156dc:	umull	r2, r3, r2, r3
   156e0:	add	r3, r1, r3
   156e4:	strd	r2, [r0, #8]!
   156e8:	cmp	r0, lr
   156ec:	bne	156c4 <dim_enter_array@@Base+0x7f0>
   156f0:	movw	r3, #49648	; 0xc1f0
   156f4:	movt	r3, #2
   156f8:	add	sl, sl, sl, lsl #2
   156fc:	add	r3, r3, sl, lsl #4
   15700:	ldr	r2, [r3, #804]	; 0x324
   15704:	movw	r1, #53432	; 0xd0b8
   15708:	movt	r1, #2
   1570c:	add	r3, r2, fp
   15710:	add	r3, r3, #37	; 0x25
   15714:	lsl	r3, r3, #3
   15718:	ldrd	r0, [r1, r3]
   1571c:	cmp	r0, #1
   15720:	sbcs	r3, r1, #0
   15724:	blt	157f4 <dim_enter_array@@Base+0x920>
   15728:	movw	r3, #53432	; 0xd0b8
   1572c:	movt	r3, #2
   15730:	ldr	r1, [r3]
   15734:	add	ip, r3, r1, lsl #3
   15738:	ldr	r0, [r3, r1, lsl #2]
   1573c:	asr	r1, r0, #31
   15740:	strd	r0, [ip, #168]	; 0xa8
   15744:	cmp	r2, #1
   15748:	ble	1579c <dim_enter_array@@Base+0x8c8>
   1574c:	add	ip, r2, fp
   15750:	movw	r3, #53432	; 0xd0b8
   15754:	movt	r3, #2
   15758:	add	ip, r3, ip, lsl #2
   1575c:	add	r0, r2, fp
   15760:	add	r0, r0, #21
   15764:	add	r0, r3, r0, lsl #3
   15768:	add	r3, r3, #4
   1576c:	add	lr, r3, fp, lsl #2
   15770:	ldr	r3, [ip, #-4]!
   15774:	asr	r5, r3, #31
   15778:	ldr	r2, [r0]
   1577c:	ldr	r1, [r0, #4]
   15780:	mul	r1, r3, r1
   15784:	mla	r1, r2, r5, r1
   15788:	umull	r2, r3, r2, r3
   1578c:	add	r3, r1, r3
   15790:	strd	r2, [r0, #-8]!
   15794:	cmp	lr, ip
   15798:	bne	15770 <dim_enter_array@@Base+0x89c>
   1579c:	cmp	fp, #0
   157a0:	ble	157f4 <dim_enter_array@@Base+0x920>
   157a4:	add	r1, fp, #21
   157a8:	movw	r4, #53432	; 0xd0b8
   157ac:	movt	r4, #2
   157b0:	add	r1, r4, r1, lsl #3
   157b4:	add	r4, r4, #168	; 0xa8
   157b8:	movw	lr, #53432	; 0xd0b8
   157bc:	movt	lr, #2
   157c0:	add	fp, fp, #22
   157c4:	add	lr, lr, fp, lsl #3
   157c8:	ldr	ip, [r1]
   157cc:	ldr	r3, [r1, #4]
   157d0:	ldr	r0, [lr, #4]
   157d4:	ldr	r2, [lr]
   157d8:	mul	r3, r3, r2
   157dc:	mla	r0, ip, r0, r3
   157e0:	umull	r2, r3, r2, ip
   157e4:	add	r3, r0, r3
   157e8:	strd	r2, [r1], #-8
   157ec:	cmp	r4, r1
   157f0:	bne	157c8 <dim_enter_array@@Base+0x8f4>
   157f4:	add	sp, sp, #100	; 0x64
   157f8:	ldrd	r4, [sp]
   157fc:	ldrd	r6, [sp, #8]
   15800:	ldrd	r8, [sp, #16]
   15804:	ldrd	sl, [sp, #24]
   15808:	add	sp, sp, #32
   1580c:	pop	{pc}		; (ldr pc, [sp], #4)
   15810:	ldr	sl, [sp, #28]
   15814:	ldr	fp, [sp, #40]	; 0x28
   15818:	movw	r3, #49648	; 0xc1f0
   1581c:	movt	r3, #2
   15820:	add	r2, sl, sl, lsl #2
   15824:	add	r3, r3, r2, lsl #4
   15828:	str	r4, [r3, #840]	; 0x348
   1582c:	cmp	r9, #0
   15830:	beq	1566c <dim_enter_array@@Base+0x798>
   15834:	add	r2, fp, #38	; 0x26
   15838:	movw	r3, #53432	; 0xd0b8
   1583c:	movt	r3, #2
   15840:	add	r2, r3, r2, lsl #3
   15844:	mov	r3, #0
   15848:	mov	r0, #0
   1584c:	mov	r1, #0
   15850:	strd	r0, [r2], #8
   15854:	add	r3, r3, #1
   15858:	cmp	r3, lr
   1585c:	blt	15850 <dim_enter_array@@Base+0x97c>
   15860:	ldrd	r2, [sp, #16]
   15864:	cmp	r2, #1
   15868:	sbcs	r1, r3, #0
   1586c:	blt	156f0 <dim_enter_array@@Base+0x81c>
   15870:	mov	r8, r2
   15874:	movw	r4, #53432	; 0xd0b8
   15878:	movt	r4, #2
   1587c:	add	r9, r4, fp, lsl #2
   15880:	add	r7, fp, #38	; 0x26
   15884:	add	r7, r4, r7, lsl #3
   15888:	add	r3, lr, fp
   1588c:	add	r4, r4, r3, lsl #2
   15890:	mov	r6, #0
   15894:	b	1561c <dim_enter_array@@Base+0x748>
   15898:	andeq	ip, r2, r8, lsl r5
   1589c:	andeq	sl, r1, ip, ror #16
   158a0:	andeq	sp, r2, r0, lsr #2

000158a4 <dim_leave_array@@Base>:
   158a4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   158a8:	strd	r6, [sp, #8]
   158ac:	strd	r8, [sp, #16]
   158b0:	str	sl, [sp, #24]
   158b4:	str	lr, [sp, #28]
   158b8:	movw	r3, #49648	; 0xc1f0
   158bc:	movt	r3, #2
   158c0:	ldr	r3, [r3, #3360]	; 0xd20
   158c4:	cmp	r3, #0
   158c8:	blt	15928 <dim_leave_array@@Base+0x84>
   158cc:	movw	r2, #49648	; 0xc1f0
   158d0:	movt	r2, #2
   158d4:	add	r1, r3, r3, lsl #2
   158d8:	add	r2, r2, r1, lsl #4
   158dc:	ldr	r6, [r2, #800]	; 0x320
   158e0:	ldr	r7, [r2, #804]	; 0x324
   158e4:	movw	r2, #53432	; 0xd0b8
   158e8:	movt	r2, #2
   158ec:	ldr	r1, [r2]
   158f0:	sub	r1, r1, r7
   158f4:	str	r1, [r2]
   158f8:	cmp	r7, #0
   158fc:	ble	1596c <dim_leave_array@@Base+0xc8>
   15900:	add	r5, r6, #18
   15904:	movw	r2, #53432	; 0xd0b8
   15908:	movt	r2, #2
   1590c:	add	r5, r2, r5, lsl #2
   15910:	mov	r4, #0
   15914:	movw	r8, #49648	; 0xc1f0
   15918:	movt	r8, #2
   1591c:	add	r3, r3, r3, lsl #2
   15920:	add	r8, r8, r3, lsl #4
   15924:	b	1595c <dim_leave_array@@Base+0xb8>
   15928:	ldr	r3, [pc, #336]	; 15a80 <dim_leave_array@@Base+0x1dc>
   1592c:	movw	r2, #579	; 0x243
   15930:	movw	r1, #43148	; 0xa88c
   15934:	movt	r1, #1
   15938:	movw	r0, #43456	; 0xa9c0
   1593c:	movt	r0, #1
   15940:	bl	1262c <__assert_fail@plt>
   15944:	ldr	r0, [r5, #32]
   15948:	bl	1226c <free@plt>
   1594c:	add	r4, r4, #1
   15950:	ldr	r7, [r8, #804]	; 0x324
   15954:	cmp	r7, r4
   15958:	ble	1596c <dim_leave_array@@Base+0xc8>
   1595c:	ldr	r3, [r5], #4
   15960:	cmp	r3, #0
   15964:	beq	1594c <dim_leave_array@@Base+0xa8>
   15968:	b	15944 <dim_leave_array@@Base+0xa0>
   1596c:	movw	r3, #53432	; 0xd0b8
   15970:	movt	r3, #2
   15974:	mov	r2, #0
   15978:	str	r2, [r3, #68]	; 0x44
   1597c:	mvn	r2, #0
   15980:	str	r2, [r3, #104]	; 0x68
   15984:	ldr	r8, [r3]
   15988:	cmp	r8, #0
   1598c:	ble	159fc <dim_leave_array@@Base+0x158>
   15990:	add	r5, r3, #72	; 0x48
   15994:	mov	r2, #0
   15998:	mvn	ip, #0
   1599c:	mov	r1, r2
   159a0:	mov	r0, r2
   159a4:	mov	lr, r2
   159a8:	mov	r9, #1
   159ac:	mov	r4, r9
   159b0:	ldr	r3, [r5], #4
   159b4:	cmp	r3, #0
   159b8:	movne	ip, lr
   159bc:	movne	r2, r9
   159c0:	movne	r1, r4
   159c4:	movne	r0, r4
   159c8:	add	lr, lr, #1
   159cc:	cmp	lr, r8
   159d0:	bne	159b0 <dim_leave_array@@Base+0x10c>
   159d4:	cmp	r1, #0
   159d8:	beq	159e8 <dim_leave_array@@Base+0x144>
   159dc:	movw	r3, #53432	; 0xd0b8
   159e0:	movt	r3, #2
   159e4:	str	r0, [r3, #68]	; 0x44
   159e8:	cmp	r2, #0
   159ec:	beq	159fc <dim_leave_array@@Base+0x158>
   159f0:	movw	r3, #53432	; 0xd0b8
   159f4:	movt	r3, #2
   159f8:	str	ip, [r3, #104]	; 0x68
   159fc:	movw	r2, #53432	; 0xd0b8
   15a00:	movt	r2, #2
   15a04:	add	r3, r7, r6
   15a08:	add	r3, r3, #37	; 0x25
   15a0c:	lsl	r3, r3, #3
   15a10:	add	r2, r2, r3
   15a14:	ldrd	r2, [r2]
   15a18:	cmp	r2, #1
   15a1c:	sbcs	r3, r3, #0
   15a20:	blt	15a68 <dim_leave_array@@Base+0x1c4>
   15a24:	cmp	r6, #0
   15a28:	ble	15a68 <dim_leave_array@@Base+0x1c4>
   15a2c:	add	r4, r6, #21
   15a30:	movw	r5, #53432	; 0xd0b8
   15a34:	movt	r5, #2
   15a38:	add	r4, r5, r4, lsl #3
   15a3c:	add	r5, r5, #168	; 0xa8
   15a40:	movw	r3, #53432	; 0xd0b8
   15a44:	movt	r3, #2
   15a48:	add	r6, r6, #22
   15a4c:	add	r6, r3, r6, lsl #3
   15a50:	ldrd	r2, [r6]
   15a54:	ldrd	r0, [r4]
   15a58:	bl	1a338 <main@@Base+0x1794>
   15a5c:	strd	r0, [r4], #-8
   15a60:	cmp	r4, r5
   15a64:	bne	15a50 <dim_leave_array@@Base+0x1ac>
   15a68:	ldrd	r4, [sp]
   15a6c:	ldrd	r6, [sp, #8]
   15a70:	ldrd	r8, [sp, #16]
   15a74:	ldr	sl, [sp, #24]
   15a78:	add	sp, sp, #28
   15a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15a80:	andeq	sl, r1, ip, ror r8

00015a84 <dim_record_field_available@@Base>:
   15a84:	str	r4, [sp, #-8]!
   15a88:	str	lr, [sp, #4]
   15a8c:	mov	r2, #0
   15a90:	mov	r1, r2
   15a94:	mov	r0, r2
   15a98:	bl	14424 <print_debug_data@@Base+0x194>
   15a9c:	ldr	r4, [sp]
   15aa0:	add	sp, sp, #4
   15aa4:	pop	{pc}		; (ldr pc, [sp], #4)

00015aa8 <codadump_filter_remove@@Base>:
   15aa8:	str	r4, [sp, #-8]!
   15aac:	str	lr, [sp, #4]
   15ab0:	subs	r4, r0, #0
   15ab4:	beq	15b2c <codadump_filter_remove@@Base+0x84>
   15ab8:	ldr	r0, [r4]
   15abc:	cmp	r0, #0
   15ac0:	beq	15b20 <codadump_filter_remove@@Base+0x78>
   15ac4:	ldr	r3, [r0, #8]
   15ac8:	cmp	r3, #0
   15acc:	beq	15ad8 <codadump_filter_remove@@Base+0x30>
   15ad0:	add	r0, r0, #8
   15ad4:	bl	15aa8 <codadump_filter_remove@@Base>
   15ad8:	ldr	r0, [r4]
   15adc:	ldr	r3, [r0, #4]
   15ae0:	cmp	r3, #0
   15ae4:	beq	15af0 <codadump_filter_remove@@Base+0x48>
   15ae8:	add	r0, r0, #4
   15aec:	bl	15aa8 <codadump_filter_remove@@Base>
   15af0:	ldr	r3, [r4]
   15af4:	ldr	r0, [r3]
   15af8:	cmp	r0, #0
   15afc:	beq	15b10 <codadump_filter_remove@@Base+0x68>
   15b00:	bl	1226c <free@plt>
   15b04:	ldr	r3, [r4]
   15b08:	mov	r2, #0
   15b0c:	str	r2, [r3]
   15b10:	ldr	r0, [r4]
   15b14:	bl	1226c <free@plt>
   15b18:	mov	r3, #0
   15b1c:	str	r3, [r4]
   15b20:	ldr	r4, [sp]
   15b24:	add	sp, sp, #4
   15b28:	pop	{pc}		; (ldr pc, [sp], #4)
   15b2c:	movw	r3, #43488	; 0xa9e0
   15b30:	movt	r3, #1
   15b34:	mov	r2, #192	; 0xc0
   15b38:	movw	r1, #43636	; 0xaa74
   15b3c:	movt	r1, #1
   15b40:	movw	r0, #43712	; 0xaac0
   15b44:	movt	r0, #1
   15b48:	bl	1262c <__assert_fail@plt>
   15b4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15b50:	strd	r6, [sp, #8]
   15b54:	strd	r8, [sp, #16]
   15b58:	strd	sl, [sp, #24]
   15b5c:	str	lr, [sp, #32]
   15b60:	sub	sp, sp, #12
   15b64:	subs	r4, r0, #0
   15b68:	beq	15bec <codadump_filter_remove@@Base+0x144>
   15b6c:	mov	r5, r1
   15b70:	mov	r6, r2
   15b74:	cmp	r1, #0
   15b78:	beq	15c08 <codadump_filter_remove@@Base+0x160>
   15b7c:	cmp	r2, #0
   15b80:	beq	15c24 <codadump_filter_remove@@Base+0x17c>
   15b84:	ldrb	r2, [r4]
   15b88:	sub	r3, r2, #9
   15b8c:	uxtb	r3, r3
   15b90:	cmp	r2, #32
   15b94:	cmpne	r3, #1
   15b98:	bhi	15bb4 <codadump_filter_remove@@Base+0x10c>
   15b9c:	ldrb	r2, [r4, #1]!
   15ba0:	sub	r3, r2, #9
   15ba4:	uxtb	r3, r3
   15ba8:	cmp	r2, #32
   15bac:	cmpne	r3, #1
   15bb0:	bls	15b9c <codadump_filter_remove@@Base+0xf4>
   15bb4:	ldrb	r2, [r4]
   15bb8:	subs	r3, r2, #59	; 0x3b
   15bbc:	movne	r3, #1
   15bc0:	cmp	r2, #0
   15bc4:	moveq	r3, #0
   15bc8:	and	r2, r2, #253	; 0xfd
   15bcc:	cmp	r2, #44	; 0x2c
   15bd0:	moveq	r3, #0
   15bd4:	andne	r3, r3, #1
   15bd8:	cmp	r3, #0
   15bdc:	beq	15c84 <codadump_filter_remove@@Base+0x1dc>
   15be0:	add	r1, r4, #1
   15be4:	mov	r7, #0
   15be8:	b	15c44 <codadump_filter_remove@@Base+0x19c>
   15bec:	ldr	r3, [pc, #540]	; 15e10 <codadump_filter_remove@@Base+0x368>
   15bf0:	mov	r2, #44	; 0x2c
   15bf4:	movw	r1, #43636	; 0xaa74
   15bf8:	movt	r1, #1
   15bfc:	movw	r0, #43728	; 0xaad0
   15c00:	movt	r0, #1
   15c04:	bl	1262c <__assert_fail@plt>
   15c08:	ldr	r3, [pc, #512]	; 15e10 <codadump_filter_remove@@Base+0x368>
   15c0c:	mov	r2, #45	; 0x2d
   15c10:	movw	r1, #43636	; 0xaa74
   15c14:	movt	r1, #1
   15c18:	movw	r0, #43712	; 0xaac0
   15c1c:	movt	r0, #1
   15c20:	bl	1262c <__assert_fail@plt>
   15c24:	ldr	r3, [pc, #484]	; 15e10 <codadump_filter_remove@@Base+0x368>
   15c28:	mov	r2, #46	; 0x2e
   15c2c:	movw	r1, #43636	; 0xaa74
   15c30:	movt	r1, #1
   15c34:	movw	r0, #43748	; 0xaae4
   15c38:	movt	r0, #1
   15c3c:	bl	1262c <__assert_fail@plt>
   15c40:	mov	r7, r0
   15c44:	add	r0, r7, #1
   15c48:	mov	r8, r0
   15c4c:	mov	r9, r1
   15c50:	ldrb	r2, [r1], #1
   15c54:	subs	r3, r2, #59	; 0x3b
   15c58:	movne	r3, #1
   15c5c:	cmp	r2, #0
   15c60:	moveq	r3, #0
   15c64:	and	r2, r2, #253	; 0xfd
   15c68:	cmp	r2, #44	; 0x2c
   15c6c:	moveq	r3, #0
   15c70:	andne	r3, r3, #1
   15c74:	cmp	r3, #0
   15c78:	bne	15c40 <codadump_filter_remove@@Base+0x198>
   15c7c:	cmp	r0, #0
   15c80:	bgt	15ca8 <codadump_filter_remove@@Base+0x200>
   15c84:	mov	r3, #0
   15c88:	str	r3, [r5]
   15c8c:	add	sp, sp, #12
   15c90:	ldrd	r4, [sp]
   15c94:	ldrd	r6, [sp, #8]
   15c98:	ldrd	r8, [sp, #16]
   15c9c:	ldrd	sl, [sp, #24]
   15ca0:	add	sp, sp, #32
   15ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ca8:	mov	r0, #12
   15cac:	bl	123a4 <malloc@plt>
   15cb0:	str	r0, [r5]
   15cb4:	cmp	r0, #0
   15cb8:	beq	15d84 <codadump_filter_remove@@Base+0x2dc>
   15cbc:	add	sl, r7, #2
   15cc0:	ldr	fp, [r5]
   15cc4:	mov	r0, sl
   15cc8:	bl	123a4 <malloc@plt>
   15ccc:	str	r0, [fp]
   15cd0:	ldr	r3, [r5]
   15cd4:	ldr	r3, [r3]
   15cd8:	cmp	r3, #0
   15cdc:	beq	15db0 <codadump_filter_remove@@Base+0x308>
   15ce0:	ldr	r3, [r5]
   15ce4:	mov	r2, r8
   15ce8:	mov	r1, r4
   15cec:	ldr	r0, [r3]
   15cf0:	bl	124a0 <strncpy@plt>
   15cf4:	ldr	r2, [r5]
   15cf8:	mov	r3, #0
   15cfc:	str	r3, [r2, #4]
   15d00:	ldr	r2, [r5]
   15d04:	str	r3, [r2, #8]
   15d08:	ldr	r3, [r5]
   15d0c:	ldr	r0, [r3]
   15d10:	mov	ip, r7
   15d14:	ldrb	r2, [r0, r7]
   15d18:	sub	r3, r2, #9
   15d1c:	uxtb	r3, r3
   15d20:	cmp	r2, #32
   15d24:	cmpne	r3, #1
   15d28:	bhi	15d54 <codadump_filter_remove@@Base+0x2ac>
   15d2c:	sub	r7, r7, #1
   15d30:	add	r7, r0, r7
   15d34:	rsb	r1, r0, #1
   15d38:	add	r8, r1, r7
   15d3c:	ldrb	r2, [r7], #-1
   15d40:	sub	r3, r2, #9
   15d44:	uxtb	r3, r3
   15d48:	cmp	r2, #32
   15d4c:	cmpne	r3, #1
   15d50:	bls	15d38 <codadump_filter_remove@@Base+0x290>
   15d54:	mov	r3, #0
   15d58:	strb	r3, [r0, r8]
   15d5c:	ldrb	r3, [r9]
   15d60:	cmp	r3, #46	; 0x2e
   15d64:	beq	15ddc <codadump_filter_remove@@Base+0x334>
   15d68:	cmp	r3, #44	; 0x2c
   15d6c:	cmpne	r3, #59	; 0x3b
   15d70:	addeq	ip, ip, #2
   15d74:	addeq	r4, r4, ip
   15d78:	streq	r4, [r6]
   15d7c:	strne	r9, [r6]
   15d80:	b	15c8c <codadump_filter_remove@@Base+0x1e4>
   15d84:	mov	r3, #69	; 0x45
   15d88:	str	r3, [sp]
   15d8c:	movw	r3, #43636	; 0xaa74
   15d90:	movt	r3, #1
   15d94:	mov	r2, #12
   15d98:	movw	r1, #42532	; 0xa624
   15d9c:	movt	r1, #1
   15da0:	mvn	r0, #0
   15da4:	bl	12224 <coda_set_error@plt>
   15da8:	bl	18b60 <handle_coda_error@@Base>
   15dac:	b	15cbc <codadump_filter_remove@@Base+0x214>
   15db0:	mov	r3, #76	; 0x4c
   15db4:	str	r3, [sp]
   15db8:	movw	r3, #43636	; 0xaa74
   15dbc:	movt	r3, #1
   15dc0:	mov	r2, sl
   15dc4:	movw	r1, #43764	; 0xaaf4
   15dc8:	movt	r1, #1
   15dcc:	mvn	r0, #0
   15dd0:	bl	12224 <coda_set_error@plt>
   15dd4:	bl	18b60 <handle_coda_error@@Base>
   15dd8:	b	15ce0 <codadump_filter_remove@@Base+0x238>
   15ddc:	ldr	r1, [r5]
   15de0:	add	r0, ip, #2
   15de4:	mov	r2, r6
   15de8:	add	r1, r1, #4
   15dec:	add	r0, r4, r0
   15df0:	bl	15b4c <codadump_filter_remove@@Base+0xa4>
   15df4:	ldr	r3, [r5]
   15df8:	ldr	r3, [r3, #4]
   15dfc:	cmp	r3, #0
   15e00:	bne	15c8c <codadump_filter_remove@@Base+0x1e4>
   15e04:	mov	r0, r5
   15e08:	bl	15aa8 <codadump_filter_remove@@Base>
   15e0c:	b	15c8c <codadump_filter_remove@@Base+0x1e4>
   15e10:	strdeq	sl, [r1], -r8
   15e14:	strd	r4, [sp, #-12]!
   15e18:	str	lr, [sp, #8]
   15e1c:	sub	sp, sp, #12
   15e20:	str	r1, [sp, #4]
   15e24:	cmp	r0, #0
   15e28:	beq	15e88 <codadump_filter_remove@@Base+0x3e0>
   15e2c:	ldr	r5, [sp, #4]
   15e30:	cmp	r5, #0
   15e34:	beq	15e78 <codadump_filter_remove@@Base+0x3d0>
   15e38:	ldr	r4, [r0]
   15e3c:	cmp	r4, #0
   15e40:	streq	r5, [r0]
   15e44:	beq	15e78 <codadump_filter_remove@@Base+0x3d0>
   15e48:	ldr	r1, [r5]
   15e4c:	ldr	r0, [r4]
   15e50:	bl	121dc <strcmp@plt>
   15e54:	cmp	r0, #0
   15e58:	beq	15ea4 <codadump_filter_remove@@Base+0x3fc>
   15e5c:	ldr	r3, [r4, #8]
   15e60:	cmp	r3, #0
   15e64:	streq	r5, [r4, #8]
   15e68:	beq	15e78 <codadump_filter_remove@@Base+0x3d0>
   15e6c:	mov	r1, r5
   15e70:	add	r0, r4, #8
   15e74:	bl	15e14 <codadump_filter_remove@@Base+0x36c>
   15e78:	add	sp, sp, #12
   15e7c:	ldrd	r4, [sp]
   15e80:	add	sp, sp, #8
   15e84:	pop	{pc}		; (ldr pc, [sp], #4)
   15e88:	ldr	r3, [pc, #88]	; 15ee8 <codadump_filter_remove@@Base+0x440>
   15e8c:	mov	r2, #117	; 0x75
   15e90:	movw	r1, #43636	; 0xaa74
   15e94:	movt	r1, #1
   15e98:	movw	r0, #43712	; 0xaac0
   15e9c:	movt	r0, #1
   15ea0:	bl	1262c <__assert_fail@plt>
   15ea4:	ldr	r3, [r4, #4]
   15ea8:	cmp	r3, #0
   15eac:	beq	15ed0 <codadump_filter_remove@@Base+0x428>
   15eb0:	ldr	r1, [r5, #4]
   15eb4:	cmp	r1, #0
   15eb8:	beq	15edc <codadump_filter_remove@@Base+0x434>
   15ebc:	add	r0, r4, #4
   15ec0:	bl	15e14 <codadump_filter_remove@@Base+0x36c>
   15ec4:	ldr	r3, [sp, #4]
   15ec8:	mov	r2, #0
   15ecc:	str	r2, [r3, #4]
   15ed0:	add	r0, sp, #4
   15ed4:	bl	15aa8 <codadump_filter_remove@@Base>
   15ed8:	b	15e78 <codadump_filter_remove@@Base+0x3d0>
   15edc:	add	r0, r4, #4
   15ee0:	bl	15aa8 <codadump_filter_remove@@Base>
   15ee4:	b	15ed0 <codadump_filter_remove@@Base+0x428>
   15ee8:	andeq	sl, r1, r8, lsl #20

00015eec <codadump_filter_create@@Base>:
   15eec:	push	{lr}		; (str lr, [sp, #-4]!)
   15ef0:	sub	sp, sp, #20
   15ef4:	mov	r3, #0
   15ef8:	str	r3, [sp, #12]
   15efc:	str	r3, [sp, #4]
   15f00:	str	r0, [sp, #8]
   15f04:	cmp	r0, r3
   15f08:	beq	15f5c <codadump_filter_create@@Base+0x70>
   15f0c:	ldrb	r3, [r0]
   15f10:	cmp	r3, #0
   15f14:	beq	15f5c <codadump_filter_create@@Base+0x70>
   15f18:	add	r2, sp, #8
   15f1c:	add	r1, sp, #4
   15f20:	bl	15b4c <codadump_filter_remove@@Base+0xa4>
   15f24:	ldr	r1, [sp, #4]
   15f28:	cmp	r1, #0
   15f2c:	beq	15f54 <codadump_filter_create@@Base+0x68>
   15f30:	add	r0, sp, #12
   15f34:	bl	15e14 <codadump_filter_remove@@Base+0x36c>
   15f38:	mov	r3, #0
   15f3c:	str	r3, [sp, #4]
   15f40:	ldr	r0, [sp, #8]
   15f44:	ldrb	r3, [r0]
   15f48:	cmp	r3, #0
   15f4c:	bne	15f18 <codadump_filter_create@@Base+0x2c>
   15f50:	b	15f5c <codadump_filter_create@@Base+0x70>
   15f54:	add	r0, sp, #12
   15f58:	bl	15aa8 <codadump_filter_remove@@Base>
   15f5c:	ldr	r0, [sp, #12]
   15f60:	add	sp, sp, #20
   15f64:	pop	{pc}		; (ldr pc, [sp], #4)

00015f68 <codadump_filter_get_fieldname@@Base>:
   15f68:	cmp	r0, #0
   15f6c:	beq	15f78 <codadump_filter_get_fieldname@@Base+0x10>
   15f70:	ldr	r0, [r0]
   15f74:	bx	lr
   15f78:	str	r4, [sp, #-8]!
   15f7c:	str	lr, [sp, #4]
   15f80:	ldr	r3, [pc, #20]	; 15f9c <codadump_filter_get_fieldname@@Base+0x34>
   15f84:	mov	r2, #216	; 0xd8
   15f88:	movw	r1, #43636	; 0xaa74
   15f8c:	movt	r1, #1
   15f90:	movw	r0, #43712	; 0xaac0
   15f94:	movt	r0, #1
   15f98:	bl	1262c <__assert_fail@plt>
   15f9c:	andeq	sl, r1, r4, lsl sl

00015fa0 <codadump_filter_get_subfilter@@Base>:
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fb0 <codadump_filter_get_subfilter@@Base+0x10>
   15fa8:	ldr	r0, [r0, #4]
   15fac:	bx	lr
   15fb0:	str	r4, [sp, #-8]!
   15fb4:	str	lr, [sp, #4]
   15fb8:	ldr	r3, [pc, #20]	; 15fd4 <codadump_filter_get_subfilter@@Base+0x34>
   15fbc:	mov	r2, #223	; 0xdf
   15fc0:	movw	r1, #43636	; 0xaa74
   15fc4:	movt	r1, #1
   15fc8:	movw	r0, #43712	; 0xaac0
   15fcc:	movt	r0, #1
   15fd0:	bl	1262c <__assert_fail@plt>
   15fd4:	andeq	sl, r1, r4, lsr sl

00015fd8 <codadump_filter_get_next_filter@@Base>:
   15fd8:	cmp	r0, #0
   15fdc:	beq	15fe8 <codadump_filter_get_next_filter@@Base+0x10>
   15fe0:	ldr	r0, [r0, #8]
   15fe4:	bx	lr
   15fe8:	str	r4, [sp, #-8]!
   15fec:	str	lr, [sp, #4]
   15ff0:	ldr	r3, [pc, #20]	; 1600c <codadump_filter_get_next_filter@@Base+0x34>
   15ff4:	mov	r2, #230	; 0xe6
   15ff8:	movw	r1, #43636	; 0xaa74
   15ffc:	movt	r1, #1
   16000:	movw	r0, #43712	; 0xaac0
   16004:	movt	r0, #1
   16008:	bl	1262c <__assert_fail@plt>
   1600c:	andeq	sl, r1, r4, asr sl
   16010:	push	{r0, r1, r2, r3}
   16014:	push	{lr}		; (str lr, [sp, #-4]!)
   16018:	sub	sp, sp, #12
   1601c:	add	r2, sp, #20
   16020:	str	r2, [sp, #4]
   16024:	movw	r3, #53400	; 0xd098
   16028:	movt	r3, #2
   1602c:	ldr	r1, [sp, #16]
   16030:	ldr	r0, [r3]
   16034:	bl	12530 <vfprintf@plt>
   16038:	add	sp, sp, #12
   1603c:	pop	{lr}		; (ldr lr, [sp], #4)
   16040:	add	sp, sp, #16
   16044:	bx	lr
   16048:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1604c:	strd	r6, [sp, #8]
   16050:	str	r8, [sp, #16]
   16054:	str	lr, [sp, #20]
   16058:	subs	r5, r1, #0
   1605c:	ble	16150 <codadump_filter_get_next_filter@@Base+0x178>
   16060:	sub	r4, r0, #1
   16064:	add	r5, r4, r5
   16068:	movw	r6, #42616	; 0xa678
   1606c:	movt	r6, #1
   16070:	movw	r8, #43820	; 0xab2c
   16074:	movt	r8, #1
   16078:	movw	r7, #42740	; 0xa6f4
   1607c:	movt	r7, #1
   16080:	b	160c0 <codadump_filter_get_next_filter@@Base+0xe8>
   16084:	cmp	r1, #34	; 0x22
   16088:	beq	16130 <codadump_filter_get_next_filter@@Base+0x158>
   1608c:	cmp	r1, #92	; 0x5c
   16090:	beq	16140 <codadump_filter_get_next_filter@@Base+0x168>
   16094:	cmp	r1, #13
   16098:	bne	160e8 <codadump_filter_get_next_filter@@Base+0x110>
   1609c:	movw	r0, #42620	; 0xa67c
   160a0:	movt	r0, #1
   160a4:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   160a8:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   160ac:	movw	r0, #42600	; 0xa668
   160b0:	movt	r0, #1
   160b4:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   160b8:	cmp	r4, r5
   160bc:	beq	16150 <codadump_filter_get_next_filter@@Base+0x178>
   160c0:	ldrb	r1, [r4, #1]!
   160c4:	cmp	r1, #12
   160c8:	beq	16104 <codadump_filter_get_next_filter@@Base+0x12c>
   160cc:	bhi	16084 <codadump_filter_get_next_filter@@Base+0xac>
   160d0:	cmp	r1, #9
   160d4:	beq	16120 <codadump_filter_get_next_filter@@Base+0x148>
   160d8:	cmp	r1, #10
   160dc:	beq	16110 <codadump_filter_get_next_filter@@Base+0x138>
   160e0:	cmp	r1, #8
   160e4:	beq	160ac <codadump_filter_get_next_filter@@Base+0xd4>
   160e8:	sub	r3, r1, #32
   160ec:	uxtb	r3, r3
   160f0:	cmp	r3, #94	; 0x5e
   160f4:	movls	r0, r7
   160f8:	movhi	r0, r8
   160fc:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16100:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   16104:	mov	r0, r6
   16108:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1610c:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   16110:	movw	r0, #42608	; 0xa670
   16114:	movt	r0, #1
   16118:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1611c:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   16120:	movw	r0, #42604	; 0xa66c
   16124:	movt	r0, #1
   16128:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1612c:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   16130:	movw	r0, #43816	; 0xab28
   16134:	movt	r0, #1
   16138:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1613c:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   16140:	movw	r0, #42624	; 0xa680
   16144:	movt	r0, #1
   16148:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1614c:	b	160b8 <codadump_filter_get_next_filter@@Base+0xe0>
   16150:	ldrd	r4, [sp]
   16154:	ldrd	r6, [sp, #8]
   16158:	ldr	r8, [sp, #16]
   1615c:	add	sp, sp, #20
   16160:	pop	{pc}		; (ldr pc, [sp], #4)
   16164:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16168:	strd	r6, [sp, #8]
   1616c:	str	r8, [sp, #16]
   16170:	str	lr, [sp, #20]
   16174:	sub	sp, sp, #72	; 0x48
   16178:	mov	r4, r0
   1617c:	mov	r3, #0
   16180:	str	r3, [sp, #64]	; 0x40
   16184:	movw	r3, #49608	; 0xc1c8
   16188:	movt	r3, #2
   1618c:	ldr	r3, [r3]
   16190:	cmp	r3, #0
   16194:	bne	161d8 <codadump_filter_get_next_filter@@Base+0x200>
   16198:	add	r1, sp, #68	; 0x44
   1619c:	mov	r0, r4
   161a0:	bl	122fc <coda_cursor_get_type_class@plt>
   161a4:	cmp	r0, #0
   161a8:	bne	16240 <codadump_filter_get_next_filter@@Base+0x268>
   161ac:	ldr	r3, [sp, #68]	; 0x44
   161b0:	cmp	r3, #6
   161b4:	ldrls	pc, [pc, r3, lsl #2]
   161b8:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   161bc:	andeq	r6, r1, r8, asr #4
   161c0:	andeq	r6, r1, r8, ror r4
   161c4:	andeq	r6, r1, r0, ror #10
   161c8:	andeq	r6, r1, r0, ror #10
   161cc:	andeq	r6, r1, r0, ror #10
   161d0:	andeq	r6, r1, r0, ror #10
   161d4:			; <UNDEFINED> instruction: 0x000168bc
   161d8:	add	r1, sp, #64	; 0x40
   161dc:	bl	122f0 <coda_cursor_has_attributes@plt>
   161e0:	cmp	r0, #0
   161e4:	bne	16230 <codadump_filter_get_next_filter@@Base+0x258>
   161e8:	ldr	r3, [sp, #64]	; 0x40
   161ec:	cmp	r3, #0
   161f0:	beq	16198 <codadump_filter_get_next_filter@@Base+0x1c0>
   161f4:	movw	r0, #43828	; 0xab34
   161f8:	movt	r0, #1
   161fc:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16200:	mov	r0, r4
   16204:	bl	12470 <coda_cursor_goto_attributes@plt>
   16208:	cmp	r0, #0
   1620c:	bne	16238 <codadump_filter_get_next_filter@@Base+0x260>
   16210:	mov	r0, r4
   16214:	bl	16164 <codadump_filter_get_next_filter@@Base+0x18c>
   16218:	mov	r0, r4
   1621c:	bl	123d4 <coda_cursor_goto_parent@plt>
   16220:	movw	r0, #43840	; 0xab40
   16224:	movt	r0, #1
   16228:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1622c:	b	16198 <codadump_filter_get_next_filter@@Base+0x1c0>
   16230:	bl	18b60 <handle_coda_error@@Base>
   16234:	b	161e8 <codadump_filter_get_next_filter@@Base+0x210>
   16238:	bl	18b60 <handle_coda_error@@Base>
   1623c:	b	16210 <codadump_filter_get_next_filter@@Base+0x238>
   16240:	bl	18b60 <handle_coda_error@@Base>
   16244:	b	161ac <codadump_filter_get_next_filter@@Base+0x1d4>
   16248:	movw	r0, #43852	; 0xab4c
   1624c:	movt	r0, #1
   16250:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16254:	add	r1, sp, #8
   16258:	mov	r0, r4
   1625c:	bl	12254 <coda_cursor_get_num_elements@plt>
   16260:	cmp	r0, #0
   16264:	bne	162a4 <codadump_filter_get_next_filter@@Base+0x2cc>
   16268:	ldr	r3, [sp, #8]
   1626c:	cmp	r3, #0
   16270:	bgt	162ac <codadump_filter_get_next_filter@@Base+0x2d4>
   16274:	movw	r0, #43864	; 0xab58
   16278:	movt	r0, #1
   1627c:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16280:	ldr	r3, [sp, #64]	; 0x40
   16284:	cmp	r3, #0
   16288:	bne	16a04 <codadump_filter_get_next_filter@@Base+0xa2c>
   1628c:	add	sp, sp, #72	; 0x48
   16290:	ldrd	r4, [sp]
   16294:	ldrd	r6, [sp, #8]
   16298:	ldr	r8, [sp, #16]
   1629c:	add	sp, sp, #20
   162a0:	pop	{pc}		; (ldr pc, [sp], #4)
   162a4:	bl	18b60 <handle_coda_error@@Base>
   162a8:	b	16268 <codadump_filter_get_next_filter@@Base+0x290>
   162ac:	add	r1, sp, #12
   162b0:	mov	r0, r4
   162b4:	bl	122b4 <coda_cursor_get_type@plt>
   162b8:	cmp	r0, #0
   162bc:	bne	16344 <codadump_filter_get_next_filter@@Base+0x36c>
   162c0:	add	r1, sp, #16
   162c4:	ldr	r0, [sp, #12]
   162c8:	bl	124b8 <coda_type_get_record_union_status@plt>
   162cc:	cmp	r0, #0
   162d0:	bne	1634c <codadump_filter_get_next_filter@@Base+0x374>
   162d4:	ldr	r5, [sp, #16]
   162d8:	cmp	r5, #0
   162dc:	beq	1636c <codadump_filter_get_next_filter@@Base+0x394>
   162e0:	add	r1, sp, #20
   162e4:	mov	r0, r4
   162e8:	bl	125a8 <coda_cursor_get_available_union_field_index@plt>
   162ec:	cmp	r0, #0
   162f0:	bne	16354 <codadump_filter_get_next_filter@@Base+0x37c>
   162f4:	add	r2, sp, #32
   162f8:	ldr	r1, [sp, #20]
   162fc:	ldr	r0, [sp, #12]
   16300:	bl	125f0 <coda_type_get_record_field_name@plt>
   16304:	cmp	r0, #0
   16308:	bne	1635c <codadump_filter_get_next_filter@@Base+0x384>
   1630c:	ldr	r1, [sp, #20]
   16310:	mov	r0, r4
   16314:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   16318:	cmp	r0, #0
   1631c:	bne	16364 <codadump_filter_get_next_filter@@Base+0x38c>
   16320:	ldr	r1, [sp, #32]
   16324:	movw	r0, #43856	; 0xab50
   16328:	movt	r0, #1
   1632c:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16330:	mov	r0, r4
   16334:	bl	16164 <codadump_filter_get_next_filter@@Base+0x18c>
   16338:	mov	r0, r4
   1633c:	bl	123d4 <coda_cursor_goto_parent@plt>
   16340:	b	16274 <codadump_filter_get_next_filter@@Base+0x29c>
   16344:	bl	18b60 <handle_coda_error@@Base>
   16348:	b	162c0 <codadump_filter_get_next_filter@@Base+0x2e8>
   1634c:	bl	18b60 <handle_coda_error@@Base>
   16350:	b	162d4 <codadump_filter_get_next_filter@@Base+0x2fc>
   16354:	bl	18b60 <handle_coda_error@@Base>
   16358:	b	162f4 <codadump_filter_get_next_filter@@Base+0x31c>
   1635c:	bl	18b60 <handle_coda_error@@Base>
   16360:	b	1630c <codadump_filter_get_next_filter@@Base+0x334>
   16364:	bl	18b60 <handle_coda_error@@Base>
   16368:	b	16320 <codadump_filter_get_next_filter@@Base+0x348>
   1636c:	mov	r0, r4
   16370:	bl	12368 <coda_cursor_goto_first_record_field@plt>
   16374:	cmp	r0, #0
   16378:	bne	163a8 <codadump_filter_get_next_filter@@Base+0x3d0>
   1637c:	mov	r3, #0
   16380:	str	r3, [sp, #20]
   16384:	ldr	r3, [sp, #8]
   16388:	cmp	r3, #0
   1638c:	ble	1646c <codadump_filter_get_next_filter@@Base+0x494>
   16390:	mov	r6, #1
   16394:	movw	r7, #43856	; 0xab50
   16398:	movt	r7, #1
   1639c:	movw	r8, #42880	; 0xa780
   163a0:	movt	r8, #1
   163a4:	b	16408 <codadump_filter_get_next_filter@@Base+0x430>
   163a8:	bl	18b60 <handle_coda_error@@Base>
   163ac:	b	1637c <codadump_filter_get_next_filter@@Base+0x3a4>
   163b0:	bl	18b60 <handle_coda_error@@Base>
   163b4:	b	16420 <codadump_filter_get_next_filter@@Base+0x448>
   163b8:	mov	r0, r8
   163bc:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   163c0:	b	16434 <codadump_filter_get_next_filter@@Base+0x45c>
   163c4:	ldr	r1, [sp, #24]
   163c8:	mov	r0, r7
   163cc:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   163d0:	mov	r0, r4
   163d4:	bl	16164 <codadump_filter_get_next_filter@@Base+0x18c>
   163d8:	mov	r6, r5
   163dc:	ldr	r3, [sp, #8]
   163e0:	sub	r3, r3, #1
   163e4:	ldr	r2, [sp, #20]
   163e8:	cmp	r3, r2
   163ec:	bgt	16454 <codadump_filter_get_next_filter@@Base+0x47c>
   163f0:	ldr	r5, [sp, #20]
   163f4:	add	r5, r5, #1
   163f8:	str	r5, [sp, #20]
   163fc:	ldr	r3, [sp, #8]
   16400:	cmp	r5, r3
   16404:	bge	1646c <codadump_filter_get_next_filter@@Base+0x494>
   16408:	add	r2, sp, #32
   1640c:	mov	r1, r5
   16410:	ldr	r0, [sp, #12]
   16414:	bl	121f4 <coda_type_get_record_field_hidden_status@plt>
   16418:	cmp	r0, #0
   1641c:	bne	163b0 <codadump_filter_get_next_filter@@Base+0x3d8>
   16420:	ldr	r5, [sp, #32]
   16424:	cmp	r5, #0
   16428:	bne	163dc <codadump_filter_get_next_filter@@Base+0x404>
   1642c:	cmp	r6, #0
   16430:	beq	163b8 <codadump_filter_get_next_filter@@Base+0x3e0>
   16434:	add	r2, sp, #24
   16438:	ldr	r1, [sp, #20]
   1643c:	ldr	r0, [sp, #12]
   16440:	bl	125f0 <coda_type_get_record_field_name@plt>
   16444:	cmp	r0, #0
   16448:	beq	163c4 <codadump_filter_get_next_filter@@Base+0x3ec>
   1644c:	bl	18b60 <handle_coda_error@@Base>
   16450:	b	163c4 <codadump_filter_get_next_filter@@Base+0x3ec>
   16454:	mov	r0, r4
   16458:	bl	12560 <coda_cursor_goto_next_record_field@plt>
   1645c:	cmp	r0, #0
   16460:	beq	163f0 <codadump_filter_get_next_filter@@Base+0x418>
   16464:	bl	18b60 <handle_coda_error@@Base>
   16468:	b	163f0 <codadump_filter_get_next_filter@@Base+0x418>
   1646c:	mov	r0, r4
   16470:	bl	123d4 <coda_cursor_goto_parent@plt>
   16474:	b	16274 <codadump_filter_get_next_filter@@Base+0x29c>
   16478:	movw	r0, #43868	; 0xab5c
   1647c:	movt	r0, #1
   16480:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16484:	add	r2, sp, #32
   16488:	add	r1, sp, #24
   1648c:	mov	r0, r4
   16490:	bl	12500 <coda_cursor_get_array_dim@plt>
   16494:	cmp	r0, #0
   16498:	bne	164e0 <codadump_filter_get_next_filter@@Base+0x508>
   1649c:	ldr	r1, [sp, #24]
   164a0:	cmp	r1, #0
   164a4:	blt	164d0 <codadump_filter_get_next_filter@@Base+0x4f8>
   164a8:	ble	164e8 <codadump_filter_get_next_filter@@Base+0x510>
   164ac:	add	r3, sp, #28
   164b0:	add	r1, r3, r1, lsl #2
   164b4:	mov	r5, #1
   164b8:	ldr	r2, [r3, #4]!
   164bc:	mul	r5, r2, r5
   164c0:	cmp	r3, r1
   164c4:	bne	164b8 <codadump_filter_get_next_filter@@Base+0x4e0>
   164c8:	cmp	r5, #0
   164cc:	bgt	164ec <codadump_filter_get_next_filter@@Base+0x514>
   164d0:	movw	r0, #44200	; 0xaca8
   164d4:	movt	r0, #1
   164d8:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   164dc:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   164e0:	bl	18b60 <handle_coda_error@@Base>
   164e4:	b	1649c <codadump_filter_get_next_filter@@Base+0x4c4>
   164e8:	mov	r5, #1
   164ec:	mov	r0, r4
   164f0:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   164f4:	cmp	r0, #0
   164f8:	bne	16510 <codadump_filter_get_next_filter@@Base+0x538>
   164fc:	mov	r6, #0
   16500:	sub	r8, r5, #1
   16504:	movw	r7, #42880	; 0xa780
   16508:	movt	r7, #1
   1650c:	b	16524 <codadump_filter_get_next_filter@@Base+0x54c>
   16510:	bl	18b60 <handle_coda_error@@Base>
   16514:	b	164fc <codadump_filter_get_next_filter@@Base+0x524>
   16518:	add	r6, r6, #1
   1651c:	cmp	r6, r5
   16520:	bge	16554 <codadump_filter_get_next_filter@@Base+0x57c>
   16524:	mov	r0, r4
   16528:	bl	16164 <codadump_filter_get_next_filter@@Base+0x18c>
   1652c:	cmp	r8, r6
   16530:	ble	16518 <codadump_filter_get_next_filter@@Base+0x540>
   16534:	mov	r0, r7
   16538:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1653c:	mov	r0, r4
   16540:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   16544:	cmp	r0, #0
   16548:	beq	16518 <codadump_filter_get_next_filter@@Base+0x540>
   1654c:	bl	18b60 <handle_coda_error@@Base>
   16550:	b	16518 <codadump_filter_get_next_filter@@Base+0x540>
   16554:	mov	r0, r4
   16558:	bl	123d4 <coda_cursor_goto_parent@plt>
   1655c:	b	164d0 <codadump_filter_get_next_filter@@Base+0x4f8>
   16560:	add	r1, sp, #20
   16564:	mov	r0, r4
   16568:	bl	12398 <coda_cursor_get_read_type@plt>
   1656c:	cmp	r0, #0
   16570:	bne	165c0 <codadump_filter_get_next_filter@@Base+0x5e8>
   16574:	ldr	r3, [sp, #20]
   16578:	add	r3, r3, #1
   1657c:	cmp	r3, #13
   16580:	ldrls	pc, [pc, r3, lsl #2]
   16584:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16588:	andeq	r6, r1, ip, lsr #17
   1658c:	muleq	r1, r4, r7
   16590:	andeq	r6, r1, r4, asr #15
   16594:	muleq	r1, r4, r7
   16598:	andeq	r6, r1, r4, asr #15
   1659c:	muleq	r1, r4, r7
   165a0:	andeq	r6, r1, r4, asr #15
   165a4:	strdeq	r6, [r1], -r4
   165a8:	andeq	r6, r1, r0, lsr r8
   165ac:	andeq	r6, r1, ip, ror #16
   165b0:	andeq	r6, r1, ip, ror #16
   165b4:	andeq	r6, r1, r8, asr #11
   165b8:	andeq	r6, r1, ip, lsl #12
   165bc:	andeq	r6, r1, r4, asr #13
   165c0:	bl	18b60 <handle_coda_error@@Base>
   165c4:	b	16574 <codadump_filter_get_next_filter@@Base+0x59c>
   165c8:	add	r1, sp, #32
   165cc:	mov	r0, r4
   165d0:	bl	1247c <coda_cursor_read_char@plt>
   165d4:	cmp	r0, #0
   165d8:	bne	16604 <codadump_filter_get_next_filter@@Base+0x62c>
   165dc:	movw	r4, #44208	; 0xacb0
   165e0:	movt	r4, #1
   165e4:	mov	r0, r4
   165e8:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   165ec:	mov	r1, #1
   165f0:	add	r0, sp, #32
   165f4:	bl	16048 <codadump_filter_get_next_filter@@Base+0x70>
   165f8:	mov	r0, r4
   165fc:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16600:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16604:	bl	18b60 <handle_coda_error@@Base>
   16608:	b	165dc <codadump_filter_get_next_filter@@Base+0x604>
   1660c:	add	r1, sp, #32
   16610:	mov	r0, r4
   16614:	bl	12404 <coda_cursor_get_string_length@plt>
   16618:	cmp	r0, #0
   1661c:	bne	16684 <codadump_filter_get_next_filter@@Base+0x6ac>
   16620:	ldr	r0, [sp, #32]
   16624:	add	r0, r0, #1
   16628:	bl	123a4 <malloc@plt>
   1662c:	subs	r5, r0, #0
   16630:	beq	1668c <codadump_filter_get_next_filter@@Base+0x6b4>
   16634:	ldr	r2, [sp, #32]
   16638:	add	r2, r2, #1
   1663c:	mov	r1, r5
   16640:	mov	r0, r4
   16644:	bl	123c8 <coda_cursor_read_string@plt>
   16648:	cmp	r0, #0
   1664c:	bne	166bc <codadump_filter_get_next_filter@@Base+0x6e4>
   16650:	movw	r4, #44208	; 0xacb0
   16654:	movt	r4, #1
   16658:	mov	r0, r4
   1665c:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16660:	ldr	r1, [sp, #32]
   16664:	mov	r0, r5
   16668:	bl	16048 <codadump_filter_get_next_filter@@Base+0x70>
   1666c:	ldr	r1, [sp, #32]
   16670:	mov	r0, r4
   16674:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16678:	mov	r0, r5
   1667c:	bl	1226c <free@plt>
   16680:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16684:	bl	18b60 <handle_coda_error@@Base>
   16688:	b	16620 <codadump_filter_get_next_filter@@Base+0x648>
   1668c:	movw	r3, #303	; 0x12f
   16690:	str	r3, [sp]
   16694:	movw	r3, #43872	; 0xab60
   16698:	movt	r3, #1
   1669c:	ldr	r2, [sp, #32]
   166a0:	add	r2, r2, #1
   166a4:	movw	r1, #42532	; 0xa624
   166a8:	movt	r1, #1
   166ac:	mvn	r0, #0
   166b0:	bl	12224 <coda_set_error@plt>
   166b4:	bl	18b60 <handle_coda_error@@Base>
   166b8:	b	16634 <codadump_filter_get_next_filter@@Base+0x65c>
   166bc:	bl	18b60 <handle_coda_error@@Base>
   166c0:	b	16650 <codadump_filter_get_next_filter@@Base+0x678>
   166c4:	add	r1, sp, #32
   166c8:	mov	r0, r4
   166cc:	bl	12584 <coda_cursor_get_bit_size@plt>
   166d0:	cmp	r0, #0
   166d4:	bne	16758 <codadump_filter_get_next_filter@@Base+0x780>
   166d8:	ldr	r0, [sp, #32]
   166dc:	ldr	ip, [sp, #36]	; 0x24
   166e0:	ands	r1, r0, #7
   166e4:	movne	r1, #1
   166e8:	lsr	r2, r0, #3
   166ec:	orr	r2, r2, ip, lsl #29
   166f0:	adds	r6, r2, r1
   166f4:	mov	r0, r6
   166f8:	bl	123a4 <malloc@plt>
   166fc:	subs	r5, r0, #0
   16700:	beq	16760 <codadump_filter_get_next_filter@@Base+0x788>
   16704:	ldrd	r2, [sp, #32]
   16708:	strd	r2, [sp]
   1670c:	mov	r2, #0
   16710:	mov	r3, #0
   16714:	mov	r1, r5
   16718:	mov	r0, r4
   1671c:	bl	12614 <coda_cursor_read_bits@plt>
   16720:	cmp	r0, #0
   16724:	bne	1678c <codadump_filter_get_next_filter@@Base+0x7b4>
   16728:	movw	r4, #44208	; 0xacb0
   1672c:	movt	r4, #1
   16730:	mov	r0, r4
   16734:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16738:	mov	r1, r6
   1673c:	mov	r0, r5
   16740:	bl	16048 <codadump_filter_get_next_filter@@Base+0x70>
   16744:	mov	r0, r4
   16748:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1674c:	mov	r0, r5
   16750:	bl	1226c <free@plt>
   16754:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16758:	bl	18b60 <handle_coda_error@@Base>
   1675c:	b	166d8 <codadump_filter_get_next_filter@@Base+0x700>
   16760:	movw	r3, #334	; 0x14e
   16764:	str	r3, [sp]
   16768:	movw	r3, #43872	; 0xab60
   1676c:	movt	r3, #1
   16770:	mov	r2, r6
   16774:	movw	r1, #42532	; 0xa624
   16778:	movt	r1, #1
   1677c:	mvn	r0, #0
   16780:	bl	12224 <coda_set_error@plt>
   16784:	bl	18b60 <handle_coda_error@@Base>
   16788:	b	16704 <codadump_filter_get_next_filter@@Base+0x72c>
   1678c:	bl	18b60 <handle_coda_error@@Base>
   16790:	b	16728 <codadump_filter_get_next_filter@@Base+0x750>
   16794:	add	r1, sp, #32
   16798:	mov	r0, r4
   1679c:	bl	125b4 <coda_cursor_read_int32@plt>
   167a0:	cmp	r0, #0
   167a4:	bne	167bc <codadump_filter_get_next_filter@@Base+0x7e4>
   167a8:	ldr	r1, [sp, #32]
   167ac:	movw	r0, #44068	; 0xac24
   167b0:	movt	r0, #1
   167b4:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   167b8:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   167bc:	bl	18b60 <handle_coda_error@@Base>
   167c0:	b	167a8 <codadump_filter_get_next_filter@@Base+0x7d0>
   167c4:	add	r1, sp, #32
   167c8:	mov	r0, r4
   167cc:	bl	12290 <coda_cursor_read_uint32@plt>
   167d0:	cmp	r0, #0
   167d4:	bne	167ec <codadump_filter_get_next_filter@@Base+0x814>
   167d8:	ldr	r1, [sp, #32]
   167dc:	movw	r0, #42636	; 0xa68c
   167e0:	movt	r0, #1
   167e4:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   167e8:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   167ec:	bl	18b60 <handle_coda_error@@Base>
   167f0:	b	167d8 <codadump_filter_get_next_filter@@Base+0x800>
   167f4:	add	r1, sp, #24
   167f8:	mov	r0, r4
   167fc:	bl	12524 <coda_cursor_read_int64@plt>
   16800:	cmp	r0, #0
   16804:	bne	16828 <codadump_filter_get_next_filter@@Base+0x850>
   16808:	add	r2, sp, #32
   1680c:	ldrd	r0, [sp, #24]
   16810:	bl	12620 <coda_str64@plt>
   16814:	add	r1, sp, #32
   16818:	movw	r0, #42912	; 0xa7a0
   1681c:	movt	r0, #1
   16820:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16824:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16828:	bl	18b60 <handle_coda_error@@Base>
   1682c:	b	16808 <codadump_filter_get_next_filter@@Base+0x830>
   16830:	add	r1, sp, #24
   16834:	mov	r0, r4
   16838:	bl	12410 <coda_cursor_read_uint64@plt>
   1683c:	cmp	r0, #0
   16840:	bne	16864 <codadump_filter_get_next_filter@@Base+0x88c>
   16844:	add	r2, sp, #32
   16848:	ldrd	r0, [sp, #24]
   1684c:	bl	12260 <coda_str64u@plt>
   16850:	add	r1, sp, #32
   16854:	movw	r0, #42912	; 0xa7a0
   16858:	movt	r0, #1
   1685c:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16860:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16864:	bl	18b60 <handle_coda_error@@Base>
   16868:	b	16844 <codadump_filter_get_next_filter@@Base+0x86c>
   1686c:	add	r1, sp, #32
   16870:	mov	r0, r4
   16874:	bl	1241c <coda_cursor_read_double@plt>
   16878:	cmp	r0, #0
   1687c:	bne	168a4 <codadump_filter_get_next_filter@@Base+0x8cc>
   16880:	ldr	r3, [sp, #20]
   16884:	cmp	r3, #8
   16888:	ldrd	r2, [sp, #32]
   1688c:	movweq	r0, #42640	; 0xa690
   16890:	movteq	r0, #1
   16894:	movwne	r0, #42648	; 0xa698
   16898:	movtne	r0, #1
   1689c:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   168a0:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   168a4:	bl	18b60 <handle_coda_error@@Base>
   168a8:	b	16880 <codadump_filter_get_next_filter@@Base+0x8a8>
   168ac:	movw	r0, #43948	; 0xabac
   168b0:	movt	r0, #1
   168b4:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   168b8:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   168bc:	add	r1, sp, #20
   168c0:	mov	r0, r4
   168c4:	bl	12338 <coda_cursor_get_special_type@plt>
   168c8:	cmp	r0, #0
   168cc:	bne	168f0 <codadump_filter_get_next_filter@@Base+0x918>
   168d0:	ldr	r3, [sp, #20]
   168d4:	cmp	r3, #3
   168d8:	ldrls	pc, [pc, r3, lsl #2]
   168dc:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   168e0:	strdeq	r6, [r1], -r8
   168e4:	andeq	r6, r1, r8, lsl #18
   168e8:	andeq	r6, r1, r8, lsr r9
   168ec:	andeq	r6, r1, r8, asr #19
   168f0:	bl	18b60 <handle_coda_error@@Base>
   168f4:	b	168d0 <codadump_filter_get_next_filter@@Base+0x8f8>
   168f8:	movw	r0, #43948	; 0xabac
   168fc:	movt	r0, #1
   16900:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16904:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16908:	add	r1, sp, #32
   1690c:	mov	r0, r4
   16910:	bl	1241c <coda_cursor_read_double@plt>
   16914:	cmp	r0, #0
   16918:	bne	16930 <codadump_filter_get_next_filter@@Base+0x958>
   1691c:	ldrd	r2, [sp, #32]
   16920:	movw	r0, #42648	; 0xa698
   16924:	movt	r0, #1
   16928:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1692c:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16930:	bl	18b60 <handle_coda_error@@Base>
   16934:	b	1691c <codadump_filter_get_next_filter@@Base+0x944>
   16938:	add	r1, sp, #24
   1693c:	mov	r0, r4
   16940:	bl	1241c <coda_cursor_read_double@plt>
   16944:	cmp	r0, #0
   16948:	bne	16980 <codadump_filter_get_next_filter@@Base+0x9a8>
   1694c:	vldr	d0, [sp, #24]
   16950:	bl	12428 <coda_isNaN@plt>
   16954:	cmp	r0, #0
   16958:	bne	1696c <codadump_filter_get_next_filter@@Base+0x994>
   1695c:	vldr	d0, [sp, #24]
   16960:	bl	122cc <coda_isInf@plt>
   16964:	cmp	r0, #0
   16968:	beq	16988 <codadump_filter_get_next_filter@@Base+0x9b0>
   1696c:	ldrd	r2, [sp, #24]
   16970:	movw	r0, #42648	; 0xa698
   16974:	movt	r0, #1
   16978:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   1697c:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   16980:	bl	18b60 <handle_coda_error@@Base>
   16984:	b	1694c <codadump_filter_get_next_filter@@Base+0x974>
   16988:	add	r1, sp, #32
   1698c:	movw	r0, #43956	; 0xabb4
   16990:	movt	r0, #1
   16994:	vldr	d0, [sp, #24]
   16998:	bl	12248 <coda_time_double_to_string@plt>
   1699c:	cmp	r0, #0
   169a0:	beq	169b4 <codadump_filter_get_next_filter@@Base+0x9dc>
   169a4:	movw	r0, #43988	; 0xabd4
   169a8:	movt	r0, #1
   169ac:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   169b0:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   169b4:	add	r1, sp, #32
   169b8:	movw	r0, #42588	; 0xa65c
   169bc:	movt	r0, #1
   169c0:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   169c4:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   169c8:	add	r2, sp, #32
   169cc:	add	r1, sp, #24
   169d0:	mov	r0, r4
   169d4:	bl	124c4 <coda_cursor_read_complex_double_split@plt>
   169d8:	cmp	r0, #0
   169dc:	bne	169fc <codadump_filter_get_next_filter@@Base+0xa24>
   169e0:	ldrd	r2, [sp, #32]
   169e4:	strd	r2, [sp]
   169e8:	ldrd	r2, [sp, #24]
   169ec:	movw	r0, #44016	; 0xabf0
   169f0:	movt	r0, #1
   169f4:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   169f8:	b	16280 <codadump_filter_get_next_filter@@Base+0x2a8>
   169fc:	bl	18b60 <handle_coda_error@@Base>
   16a00:	b	169e0 <codadump_filter_get_next_filter@@Base+0xa08>
   16a04:	movw	r0, #43864	; 0xab58
   16a08:	movt	r0, #1
   16a0c:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16a10:	b	1628c <codadump_filter_get_next_filter@@Base+0x2b4>

00016a14 <print_json_data@@Base>:
   16a14:	str	r4, [sp, #-8]!
   16a18:	str	lr, [sp, #4]
   16a1c:	sub	sp, sp, #528	; 0x210
   16a20:	movw	r3, #49608	; 0xc1c8
   16a24:	movt	r3, #2
   16a28:	str	r0, [r3]
   16a2c:	movw	r3, #49648	; 0xc1f0
   16a30:	movt	r3, #2
   16a34:	add	r1, sp, #524	; 0x20c
   16a38:	ldr	r0, [r3]
   16a3c:	bl	12230 <coda_open@plt>
   16a40:	cmp	r0, #0
   16a44:	bne	16ab4 <print_json_data@@Base+0xa0>
   16a48:	ldr	r1, [sp, #524]	; 0x20c
   16a4c:	mov	r0, sp
   16a50:	bl	1235c <coda_cursor_set_product@plt>
   16a54:	cmp	r0, #0
   16a58:	bne	16b00 <print_json_data@@Base+0xec>
   16a5c:	movw	r3, #53424	; 0xd0b0
   16a60:	movt	r3, #2
   16a64:	ldr	r1, [r3]
   16a68:	cmp	r1, #0
   16a6c:	beq	16a80 <print_json_data@@Base+0x6c>
   16a70:	mov	r0, sp
   16a74:	bl	1253c <coda_cursor_goto@plt>
   16a78:	cmp	r0, #0
   16a7c:	bne	16b08 <print_json_data@@Base+0xf4>
   16a80:	mov	r0, #0
   16a84:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   16a88:	mov	r0, sp
   16a8c:	bl	16164 <codadump_filter_get_next_filter@@Base+0x18c>
   16a90:	movw	r0, #48776	; 0xbe88
   16a94:	movt	r0, #1
   16a98:	bl	16010 <codadump_filter_get_next_filter@@Base+0x38>
   16a9c:	ldr	r0, [sp, #524]	; 0x20c
   16aa0:	bl	12518 <coda_close@plt>
   16aa4:	add	sp, sp, #528	; 0x210
   16aa8:	ldr	r4, [sp]
   16aac:	add	sp, sp, #4
   16ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ab4:	bl	125d8 <coda_get_errno@plt>
   16ab8:	ldr	r3, [r0]
   16abc:	cmn	r3, #21
   16ac0:	beq	16acc <print_json_data@@Base+0xb8>
   16ac4:	bl	18b60 <handle_coda_error@@Base>
   16ac8:	b	16a48 <print_json_data@@Base+0x34>
   16acc:	mov	r0, #0
   16ad0:	bl	12278 <coda_set_option_use_mmap@plt>
   16ad4:	movw	r3, #49648	; 0xc1f0
   16ad8:	movt	r3, #2
   16adc:	add	r1, sp, #524	; 0x20c
   16ae0:	ldr	r0, [r3]
   16ae4:	bl	12230 <coda_open@plt>
   16ae8:	mov	r4, r0
   16aec:	mov	r0, #1
   16af0:	bl	12278 <coda_set_option_use_mmap@plt>
   16af4:	cmp	r4, #0
   16af8:	bne	16ac4 <print_json_data@@Base+0xb0>
   16afc:	b	16a48 <print_json_data@@Base+0x34>
   16b00:	bl	18b60 <handle_coda_error@@Base>
   16b04:	b	16a5c <print_json_data@@Base+0x48>
   16b08:	bl	18b60 <handle_coda_error@@Base>
   16b0c:	b	16a80 <print_json_data@@Base+0x6c>
   16b10:	movw	r3, #49648	; 0xc1f0
   16b14:	movt	r3, #2
   16b18:	add	r2, r1, r1, lsl #2
   16b1c:	add	r3, r3, r2, lsl #4
   16b20:	ldr	r3, [r3, #804]	; 0x324
   16b24:	cmp	r3, #0
   16b28:	bxle	lr
   16b2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16b30:	strd	r6, [sp, #8]
   16b34:	str	r8, [sp, #16]
   16b38:	str	lr, [sp, #20]
   16b3c:	mov	r6, r0
   16b40:	ldr	r8, [pc, #252]	; 16c44 <print_json_data@@Base+0x230>
   16b44:	add	r8, r8, r2, lsl #4
   16b48:	mov	r4, #0
   16b4c:	movw	r7, #49644	; 0xc1ec
   16b50:	movt	r7, #2
   16b54:	movw	r5, #49648	; 0xc1f0
   16b58:	movt	r5, #2
   16b5c:	add	r5, r5, r2, lsl #4
   16b60:	b	16bcc <print_json_data@@Base+0x1b8>
   16b64:	mov	r1, r6
   16b68:	mov	r0, #44	; 0x2c
   16b6c:	bl	1256c <fputc@plt>
   16b70:	b	16bcc <print_json_data@@Base+0x1b8>
   16b74:	movw	r2, #53432	; 0xd0b8
   16b78:	movt	r2, #2
   16b7c:	add	r3, r2, r3, lsl #2
   16b80:	ldr	r2, [r3, #4]
   16b84:	movw	r1, #44068	; 0xac24
   16b88:	movt	r1, #1
   16b8c:	mov	r0, r6
   16b90:	bl	12434 <fprintf@plt>
   16b94:	b	16bb4 <print_json_data@@Base+0x1a0>
   16b98:	ldr	r2, [r8, r4, lsl #2]
   16b9c:	cmn	r2, #1
   16ba0:	beq	16c20 <print_json_data@@Base+0x20c>
   16ba4:	movw	r1, #44068	; 0xac24
   16ba8:	movt	r1, #1
   16bac:	mov	r0, r6
   16bb0:	bl	12434 <fprintf@plt>
   16bb4:	add	r4, r4, #1
   16bb8:	ldr	r3, [r5, #804]	; 0x324
   16bbc:	cmp	r3, r4
   16bc0:	ble	16c30 <print_json_data@@Base+0x21c>
   16bc4:	cmp	r4, #0
   16bc8:	bgt	16b64 <print_json_data@@Base+0x150>
   16bcc:	ldr	r3, [r7]
   16bd0:	cmp	r3, #0
   16bd4:	beq	16b98 <print_json_data@@Base+0x184>
   16bd8:	ldr	r3, [r5, #800]	; 0x320
   16bdc:	add	r3, r4, r3
   16be0:	movw	r2, #53432	; 0xd0b8
   16be4:	movt	r2, #2
   16be8:	add	r1, r3, #18
   16bec:	ldr	r2, [r2, r1, lsl #2]
   16bf0:	cmp	r2, #0
   16bf4:	beq	16b74 <print_json_data@@Base+0x160>
   16bf8:	movw	r2, #53432	; 0xd0b8
   16bfc:	movt	r2, #2
   16c00:	add	r1, r2, r3, lsl #2
   16c04:	ldr	r3, [r1, #4]
   16c08:	ldr	r2, [r1, #36]	; 0x24
   16c0c:	movw	r1, #44064	; 0xac20
   16c10:	movt	r1, #1
   16c14:	mov	r0, r6
   16c18:	bl	12434 <fprintf@plt>
   16c1c:	b	16bb4 <print_json_data@@Base+0x1a0>
   16c20:	mov	r1, r6
   16c24:	mov	r0, #63	; 0x3f
   16c28:	bl	1256c <fputc@plt>
   16c2c:	b	16bb4 <print_json_data@@Base+0x1a0>
   16c30:	ldrd	r4, [sp]
   16c34:	ldrd	r6, [sp, #8]
   16c38:	ldr	r8, [sp, #16]
   16c3c:	add	sp, sp, #20
   16c40:	pop	{pc}		; (ldr pc, [sp], #4)
   16c44:	andeq	ip, r2, r8, lsl r5

00016c48 <print_full_field_name@@Base>:
   16c48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16c4c:	strd	r6, [sp, #8]
   16c50:	strd	r8, [sp, #16]
   16c54:	strd	sl, [sp, #24]
   16c58:	str	lr, [sp, #32]
   16c5c:	sub	sp, sp, #12
   16c60:	mov	r5, r0
   16c64:	mov	r8, r2
   16c68:	cmp	r1, #1
   16c6c:	beq	16cd0 <print_full_field_name@@Base+0x88>
   16c70:	mov	sl, r1
   16c74:	movw	r3, #49648	; 0xc1f0
   16c78:	movt	r3, #2
   16c7c:	ldr	r3, [r3, #3748]	; 0xea4
   16c80:	cmp	r3, #0
   16c84:	ble	16e04 <print_full_field_name@@Base+0x1bc>
   16c88:	ldr	r6, [pc, #780]	; 16f9c <print_full_field_name@@Base+0x354>
   16c8c:	mov	r4, #0
   16c90:	movw	r7, #49648	; 0xc1f0
   16c94:	movt	r7, #2
   16c98:	mov	r9, #46	; 0x2e
   16c9c:	mov	r1, r5
   16ca0:	ldr	r0, [r6, #4]!
   16ca4:	bl	125fc <fputs@plt>
   16ca8:	add	r4, r4, #1
   16cac:	ldr	r3, [r7, #3748]	; 0xea4
   16cb0:	cmp	r3, r4
   16cb4:	ble	16e04 <print_full_field_name@@Base+0x1bc>
   16cb8:	cmp	r4, #0
   16cbc:	ble	16c9c <print_full_field_name@@Base+0x54>
   16cc0:	mov	r1, r5
   16cc4:	mov	r0, r9
   16cc8:	bl	1256c <fputc@plt>
   16ccc:	b	16c9c <print_full_field_name@@Base+0x54>
   16cd0:	movw	r3, #49648	; 0xc1f0
   16cd4:	movt	r3, #2
   16cd8:	ldr	r3, [r3, #136]	; 0x88
   16cdc:	cmp	r3, #0
   16ce0:	ble	16dbc <print_full_field_name@@Base+0x174>
   16ce4:	ldr	r6, [pc, #692]	; 16fa0 <print_full_field_name@@Base+0x358>
   16ce8:	mov	r9, #0
   16cec:	mov	sl, r9
   16cf0:	mov	r4, r9
   16cf4:	movw	r7, #49648	; 0xc1f0
   16cf8:	movt	r7, #2
   16cfc:	movw	fp, #44072	; 0xac28
   16d00:	movt	fp, #1
   16d04:	b	16d38 <print_full_field_name@@Base+0xf0>
   16d08:	bl	18b60 <handle_coda_error@@Base>
   16d0c:	b	16d4c <print_full_field_name@@Base+0x104>
   16d10:	add	r3, r7, sl, lsl #2
   16d14:	ldr	r2, [r3, #3620]	; 0xe24
   16d18:	mov	r1, fp
   16d1c:	mov	r0, r5
   16d20:	bl	12434 <fprintf@plt>
   16d24:	add	sl, sl, #1
   16d28:	add	r4, r4, #1
   16d2c:	ldr	r3, [r7, #136]	; 0x88
   16d30:	cmp	r3, r4
   16d34:	ble	16dc0 <print_full_field_name@@Base+0x178>
   16d38:	add	r1, sp, #4
   16d3c:	ldr	r0, [r6, #4]!
   16d40:	bl	12638 <coda_type_get_class@plt>
   16d44:	cmp	r0, #0
   16d48:	bne	16d08 <print_full_field_name@@Base+0xc0>
   16d4c:	ldr	r3, [sp, #4]
   16d50:	cmp	r3, #0
   16d54:	beq	16d10 <print_full_field_name@@Base+0xc8>
   16d58:	cmp	r3, #1
   16d5c:	bne	16d28 <print_full_field_name@@Base+0xe0>
   16d60:	cmp	r4, #0
   16d64:	beq	16d84 <print_full_field_name@@Base+0x13c>
   16d68:	add	r3, r9, r9, lsl #2
   16d6c:	add	r3, r7, r3, lsl #4
   16d70:	ldr	r3, [r3, #804]	; 0x324
   16d74:	cmp	r3, #0
   16d78:	bgt	16d94 <print_full_field_name@@Base+0x14c>
   16d7c:	add	r9, r9, #1
   16d80:	b	16d28 <print_full_field_name@@Base+0xe0>
   16d84:	mov	r1, r5
   16d88:	mov	r0, #47	; 0x2f
   16d8c:	bl	1256c <fputc@plt>
   16d90:	b	16d68 <print_full_field_name@@Base+0x120>
   16d94:	mov	r1, r5
   16d98:	mov	r0, #91	; 0x5b
   16d9c:	bl	1256c <fputc@plt>
   16da0:	mov	r1, r9
   16da4:	mov	r0, r5
   16da8:	bl	16b10 <print_json_data@@Base+0xfc>
   16dac:	mov	r1, r5
   16db0:	mov	r0, #93	; 0x5d
   16db4:	bl	1256c <fputc@plt>
   16db8:	b	16d7c <print_full_field_name@@Base+0x134>
   16dbc:	mov	r9, #0
   16dc0:	cmp	r8, #0
   16dc4:	beq	16e0c <print_full_field_name@@Base+0x1c4>
   16dc8:	movw	r3, #49648	; 0xc1f0
   16dcc:	movt	r3, #2
   16dd0:	ldr	r3, [r3, #3360]	; 0xd20
   16dd4:	cmp	r3, r9
   16dd8:	ble	16e0c <print_full_field_name@@Base+0x1c4>
   16ddc:	mov	r1, r5
   16de0:	mov	r0, #91	; 0x5b
   16de4:	bl	1256c <fputc@plt>
   16de8:	mov	r1, r9
   16dec:	mov	r0, r5
   16df0:	bl	16b10 <print_json_data@@Base+0xfc>
   16df4:	mov	r1, r5
   16df8:	mov	r0, #93	; 0x5d
   16dfc:	bl	1256c <fputc@plt>
   16e00:	b	16e0c <print_full_field_name@@Base+0x1c4>
   16e04:	cmp	sl, #2
   16e08:	beq	16e28 <print_full_field_name@@Base+0x1e0>
   16e0c:	add	sp, sp, #12
   16e10:	ldrd	r4, [sp]
   16e14:	ldrd	r6, [sp, #8]
   16e18:	ldrd	r8, [sp, #16]
   16e1c:	ldrd	sl, [sp, #24]
   16e20:	add	sp, sp, #32
   16e24:	pop	{pc}		; (ldr pc, [sp], #4)
   16e28:	movw	r3, #49648	; 0xc1f0
   16e2c:	movt	r3, #2
   16e30:	ldr	r3, [r3, #136]	; 0x88
   16e34:	cmp	r3, #0
   16e38:	ble	16f78 <print_full_field_name@@Base+0x330>
   16e3c:	ldr	r7, [pc, #348]	; 16fa0 <print_full_field_name@@Base+0x358>
   16e40:	mov	r6, #0
   16e44:	mov	r4, r6
   16e48:	movw	r9, #49648	; 0xc1f0
   16e4c:	movt	r9, #2
   16e50:	movw	sl, #44076	; 0xac2c
   16e54:	movt	sl, #1
   16e58:	b	16e90 <print_full_field_name@@Base+0x248>
   16e5c:	bl	18b60 <handle_coda_error@@Base>
   16e60:	b	16ea4 <print_full_field_name@@Base+0x25c>
   16e64:	mov	r1, r5
   16e68:	mov	r0, #44	; 0x2c
   16e6c:	bl	1256c <fputc@plt>
   16e70:	mov	r1, r6
   16e74:	mov	r0, r5
   16e78:	bl	16b10 <print_json_data@@Base+0xfc>
   16e7c:	add	r6, r6, #1
   16e80:	add	r4, r4, #1
   16e84:	ldr	r3, [r9, #136]	; 0x88
   16e88:	cmp	r3, r4
   16e8c:	ble	16ef0 <print_full_field_name@@Base+0x2a8>
   16e90:	add	r1, sp, #4
   16e94:	ldr	r0, [r7, #4]!
   16e98:	bl	12638 <coda_type_get_class@plt>
   16e9c:	cmp	r0, #0
   16ea0:	bne	16e5c <print_full_field_name@@Base+0x214>
   16ea4:	ldr	r3, [sp, #4]
   16ea8:	cmp	r3, #1
   16eac:	bne	16e80 <print_full_field_name@@Base+0x238>
   16eb0:	add	r3, r6, r6, lsl #2
   16eb4:	add	r3, r9, r3, lsl #4
   16eb8:	ldr	r3, [r3, #804]	; 0x324
   16ebc:	cmp	r3, #0
   16ec0:	ble	16e80 <print_full_field_name@@Base+0x238>
   16ec4:	add	r3, r6, r6, lsl #2
   16ec8:	add	r3, r9, r3, lsl #4
   16ecc:	ldr	r3, [r3, #800]	; 0x320
   16ed0:	cmp	r3, #0
   16ed4:	bne	16e64 <print_full_field_name@@Base+0x21c>
   16ed8:	mov	r3, r5
   16edc:	mov	r2, #2
   16ee0:	mov	r1, #1
   16ee4:	mov	r0, sl
   16ee8:	bl	12350 <fwrite@plt>
   16eec:	b	16e70 <print_full_field_name@@Base+0x228>
   16ef0:	cmp	r8, #0
   16ef4:	beq	16f50 <print_full_field_name@@Base+0x308>
   16ef8:	movw	r3, #49648	; 0xc1f0
   16efc:	movt	r3, #2
   16f00:	ldr	r3, [r3, #3360]	; 0xd20
   16f04:	cmp	r3, r6
   16f08:	ble	16f50 <print_full_field_name@@Base+0x308>
   16f0c:	movw	r3, #49648	; 0xc1f0
   16f10:	movt	r3, #2
   16f14:	add	r2, r6, r6, lsl #2
   16f18:	add	r3, r3, r2, lsl #4
   16f1c:	ldr	r3, [r3, #800]	; 0x320
   16f20:	cmp	r3, #0
   16f24:	bne	16f68 <print_full_field_name@@Base+0x320>
   16f28:	mov	r3, r5
   16f2c:	mov	r2, #2
   16f30:	mov	r1, #1
   16f34:	movw	r0, #44076	; 0xac2c
   16f38:	movt	r0, #1
   16f3c:	bl	12350 <fwrite@plt>
   16f40:	mov	r1, r6
   16f44:	mov	r0, r5
   16f48:	bl	16b10 <print_json_data@@Base+0xfc>
   16f4c:	add	r6, r6, #1
   16f50:	cmp	r6, #0
   16f54:	ble	16e0c <print_full_field_name@@Base+0x1c4>
   16f58:	mov	r1, r5
   16f5c:	mov	r0, #93	; 0x5d
   16f60:	bl	1256c <fputc@plt>
   16f64:	b	16e0c <print_full_field_name@@Base+0x1c4>
   16f68:	mov	r1, r5
   16f6c:	mov	r0, #44	; 0x2c
   16f70:	bl	1256c <fputc@plt>
   16f74:	b	16f40 <print_full_field_name@@Base+0x2f8>
   16f78:	cmp	r8, #0
   16f7c:	beq	16e0c <print_full_field_name@@Base+0x1c4>
   16f80:	movw	r3, #49648	; 0xc1f0
   16f84:	movt	r3, #2
   16f88:	ldr	r3, [r3, #3360]	; 0xd20
   16f8c:	cmp	r3, #0
   16f90:	ble	16e0c <print_full_field_name@@Base+0x1c4>
   16f94:	mov	r6, #0
   16f98:	b	16f0c <print_full_field_name@@Base+0x2c4>
   16f9c:	andeq	sp, r2, r0, lsl r0
   16fa0:	strdeq	ip, [r2], -r4
   16fa4:	strd	r4, [sp, #-12]!
   16fa8:	str	lr, [sp, #8]
   16fac:	sub	sp, sp, #12
   16fb0:	movw	r3, #53420	; 0xd0ac
   16fb4:	movt	r3, #2
   16fb8:	ldr	r3, [r3]
   16fbc:	cmp	r3, #0
   16fc0:	beq	16fdc <print_full_field_name@@Base+0x394>
   16fc4:	cmp	r3, #1
   16fc8:	beq	17260 <print_full_field_name@@Base+0x618>
   16fcc:	add	sp, sp, #12
   16fd0:	ldrd	r4, [sp]
   16fd4:	add	sp, sp, #8
   16fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   16fdc:	movw	r3, #49596	; 0xc1bc
   16fe0:	movt	r3, #2
   16fe4:	mov	r2, #0
   16fe8:	mov	r1, #1
   16fec:	ldr	r0, [r3]
   16ff0:	bl	16c48 <print_full_field_name@@Base>
   16ff4:	movw	r3, #53408	; 0xd0a0
   16ff8:	movt	r3, #2
   16ffc:	ldr	r3, [r3]
   17000:	cmp	r3, #0
   17004:	bne	17088 <print_full_field_name@@Base+0x440>
   17008:	movw	r3, #49640	; 0xc1e8
   1700c:	movt	r3, #2
   17010:	ldr	r3, [r3]
   17014:	cmp	r3, #0
   17018:	bne	171b8 <print_full_field_name@@Base+0x570>
   1701c:	movw	r3, #53412	; 0xd0a4
   17020:	movt	r3, #2
   17024:	ldr	r3, [r3]
   17028:	cmp	r3, #0
   1702c:	bne	1720c <print_full_field_name@@Base+0x5c4>
   17030:	mov	r0, #10
   17034:	bl	12494 <putchar@plt>
   17038:	movw	r3, #49628	; 0xc1dc
   1703c:	movt	r3, #2
   17040:	ldr	r3, [r3]
   17044:	cmp	r3, #0
   17048:	beq	16fcc <print_full_field_name@@Base+0x384>
   1704c:	movw	r3, #53432	; 0xd0b8
   17050:	movt	r3, #2
   17054:	ldr	r3, [r3]
   17058:	cmp	r3, #0
   1705c:	ble	16fcc <print_full_field_name@@Base+0x384>
   17060:	mov	r4, #0
   17064:	movw	r5, #53432	; 0xd0b8
   17068:	movt	r5, #2
   1706c:	mov	r0, r4
   17070:	bl	14c88 <print_all_distinct_dims@@Base>
   17074:	add	r4, r4, #1
   17078:	ldr	r3, [r5]
   1707c:	cmp	r3, r4
   17080:	bgt	1706c <print_full_field_name@@Base+0x424>
   17084:	b	16fcc <print_full_field_name@@Base+0x384>
   17088:	movw	r3, #49648	; 0xc1f0
   1708c:	movt	r3, #2
   17090:	ldr	r2, [r3, #136]	; 0x88
   17094:	add	r2, r2, #2
   17098:	mov	r1, sp
   1709c:	ldr	r0, [r3, r2, lsl #2]
   170a0:	bl	12638 <coda_type_get_class@plt>
   170a4:	cmp	r0, #0
   170a8:	bne	17140 <print_full_field_name@@Base+0x4f8>
   170ac:	ldr	r3, [sp]
   170b0:	cmp	r3, #6
   170b4:	beq	17148 <print_full_field_name@@Base+0x500>
   170b8:	movw	r3, #49648	; 0xc1f0
   170bc:	movt	r3, #2
   170c0:	ldr	r2, [r3, #136]	; 0x88
   170c4:	add	r2, r2, #2
   170c8:	add	r1, sp, #4
   170cc:	ldr	r0, [r3, r2, lsl #2]
   170d0:	bl	123f8 <coda_type_get_read_type@plt>
   170d4:	cmp	r0, #0
   170d8:	bne	17190 <print_full_field_name@@Base+0x548>
   170dc:	ldr	r0, [sp, #4]
   170e0:	bl	124f4 <coda_type_get_native_type_name@plt>
   170e4:	mov	r1, r0
   170e8:	movw	r0, #44080	; 0xac30
   170ec:	movt	r0, #1
   170f0:	bl	12200 <printf@plt>
   170f4:	ldr	r3, [sp, #4]
   170f8:	sub	r3, r3, #11
   170fc:	cmp	r3, #1
   17100:	bhi	17008 <print_full_field_name@@Base+0x3c0>
   17104:	mov	r0, #40	; 0x28
   17108:	bl	12494 <putchar@plt>
   1710c:	movw	r3, #49648	; 0xc1f0
   17110:	movt	r3, #2
   17114:	ldr	r1, [r3, #3360]	; 0xd20
   17118:	cmp	r1, #0
   1711c:	ble	17198 <print_full_field_name@@Base+0x550>
   17120:	movw	r3, #49596	; 0xc1bc
   17124:	movt	r3, #2
   17128:	sub	r1, r1, #1
   1712c:	ldr	r0, [r3]
   17130:	bl	16b10 <print_json_data@@Base+0xfc>
   17134:	mov	r0, #41	; 0x29
   17138:	bl	12494 <putchar@plt>
   1713c:	b	17008 <print_full_field_name@@Base+0x3c0>
   17140:	bl	18b60 <handle_coda_error@@Base>
   17144:	b	170ac <print_full_field_name@@Base+0x464>
   17148:	movw	r3, #49648	; 0xc1f0
   1714c:	movt	r3, #2
   17150:	ldr	r2, [r3, #136]	; 0x88
   17154:	add	r2, r2, #2
   17158:	add	r1, sp, #4
   1715c:	ldr	r0, [r3, r2, lsl #2]
   17160:	bl	124ac <coda_type_get_special_type@plt>
   17164:	cmp	r0, #0
   17168:	bne	17188 <print_full_field_name@@Base+0x540>
   1716c:	ldr	r0, [sp, #4]
   17170:	bl	121a0 <coda_type_get_special_type_name@plt>
   17174:	mov	r1, r0
   17178:	movw	r0, #44080	; 0xac30
   1717c:	movt	r0, #1
   17180:	bl	12200 <printf@plt>
   17184:	b	17008 <print_full_field_name@@Base+0x3c0>
   17188:	bl	18b60 <handle_coda_error@@Base>
   1718c:	b	1716c <print_full_field_name@@Base+0x524>
   17190:	bl	18b60 <handle_coda_error@@Base>
   17194:	b	170dc <print_full_field_name@@Base+0x494>
   17198:	movw	r3, #44028	; 0xabfc
   1719c:	movt	r3, #1
   171a0:	mov	r2, #238	; 0xee
   171a4:	movw	r1, #44084	; 0xac34
   171a8:	movt	r1, #1
   171ac:	movw	r0, #44164	; 0xac84
   171b0:	movt	r0, #1
   171b4:	bl	1262c <__assert_fail@plt>
   171b8:	movw	r3, #49648	; 0xc1f0
   171bc:	movt	r3, #2
   171c0:	ldr	r2, [r3, #136]	; 0x88
   171c4:	add	r2, r2, #2
   171c8:	add	r1, sp, #4
   171cc:	ldr	r0, [r3, r2, lsl #2]
   171d0:	bl	12320 <coda_type_get_unit@plt>
   171d4:	cmp	r0, #0
   171d8:	bne	17204 <print_full_field_name@@Base+0x5bc>
   171dc:	ldr	r1, [sp, #4]
   171e0:	cmp	r1, #0
   171e4:	beq	1701c <print_full_field_name@@Base+0x3d4>
   171e8:	ldrb	r3, [r1]
   171ec:	cmp	r3, #0
   171f0:	beq	1701c <print_full_field_name@@Base+0x3d4>
   171f4:	movw	r0, #44196	; 0xaca4
   171f8:	movt	r0, #1
   171fc:	bl	12200 <printf@plt>
   17200:	b	1701c <print_full_field_name@@Base+0x3d4>
   17204:	bl	18b60 <handle_coda_error@@Base>
   17208:	b	171dc <print_full_field_name@@Base+0x594>
   1720c:	movw	r3, #49648	; 0xc1f0
   17210:	movt	r3, #2
   17214:	ldr	r2, [r3, #136]	; 0x88
   17218:	add	r2, r2, #2
   1721c:	add	r1, sp, #4
   17220:	ldr	r0, [r3, r2, lsl #2]
   17224:	bl	1232c <coda_type_get_description@plt>
   17228:	cmp	r0, #0
   1722c:	bne	17258 <print_full_field_name@@Base+0x610>
   17230:	ldr	r1, [sp, #4]
   17234:	cmp	r1, #0
   17238:	beq	17030 <print_full_field_name@@Base+0x3e8>
   1723c:	ldrb	r3, [r1]
   17240:	cmp	r3, #0
   17244:	beq	17030 <print_full_field_name@@Base+0x3e8>
   17248:	movw	r0, #44204	; 0xacac
   1724c:	movt	r0, #1
   17250:	bl	12200 <printf@plt>
   17254:	b	17030 <print_full_field_name@@Base+0x3e8>
   17258:	bl	18b60 <handle_coda_error@@Base>
   1725c:	b	17230 <print_full_field_name@@Base+0x5e8>
   17260:	bl	132e4 <export_data_element_to_ascii@@Base>
   17264:	b	16fcc <print_full_field_name@@Base+0x384>
   17268:	strd	r4, [sp, #-20]!	; 0xffffffec
   1726c:	strd	r6, [sp, #8]
   17270:	str	lr, [sp, #16]
   17274:	sub	sp, sp, #20
   17278:	movw	r3, #49648	; 0xc1f0
   1727c:	movt	r3, #2
   17280:	ldr	r2, [r3, #136]	; 0x88
   17284:	add	r2, r2, #2
   17288:	add	r1, sp, #12
   1728c:	ldr	r0, [r3, r2, lsl #2]
   17290:	bl	12638 <coda_type_get_class@plt>
   17294:	cmp	r0, #0
   17298:	bne	172c8 <print_full_field_name@@Base+0x680>
   1729c:	ldr	r3, [sp, #12]
   172a0:	cmp	r3, #6
   172a4:	ldrls	pc, [pc, r3, lsl #2]
   172a8:	b	172e4 <print_full_field_name@@Base+0x69c>
   172ac:	ldrdeq	r7, [r1], -r0
   172b0:			; <UNDEFINED> instruction: 0x000174bc
   172b4:	andeq	r7, r1, r4, asr #10
   172b8:	andeq	r7, r1, r4, asr #10
   172bc:	andeq	r7, r1, r4, asr #10
   172c0:	andeq	r7, r1, r4, asr #10
   172c4:			; <UNDEFINED> instruction: 0x000175b8
   172c8:	bl	18b60 <handle_coda_error@@Base>
   172cc:	b	1729c <print_full_field_name@@Base+0x654>
   172d0:	movw	r3, #49648	; 0xc1f0
   172d4:	movt	r3, #2
   172d8:	ldr	r3, [r3, #136]	; 0x88
   172dc:	cmp	r3, #30
   172e0:	ble	172f8 <print_full_field_name@@Base+0x6b0>
   172e4:	add	sp, sp, #20
   172e8:	ldrd	r4, [sp]
   172ec:	ldrd	r6, [sp, #8]
   172f0:	add	sp, sp, #16
   172f4:	pop	{pc}		; (ldr pc, [sp], #4)
   172f8:	movw	r2, #49648	; 0xc1f0
   172fc:	movt	r2, #2
   17300:	ldr	r1, [r2, #3748]	; 0xea4
   17304:	add	r1, r1, #1
   17308:	str	r1, [r2, #3748]	; 0xea4
   1730c:	add	r3, r3, #2
   17310:	add	r1, sp, #4
   17314:	ldr	r0, [r2, r3, lsl #2]
   17318:	bl	123e0 <coda_type_get_num_record_fields@plt>
   1731c:	cmp	r0, #0
   17320:	bne	1735c <print_full_field_name@@Base+0x714>
   17324:	movw	r3, #49648	; 0xc1f0
   17328:	movt	r3, #2
   1732c:	ldr	r2, [r3, #136]	; 0x88
   17330:	add	r2, r2, #1
   17334:	str	r2, [r3, #136]	; 0x88
   17338:	ldr	r2, [r3, #796]	; 0x31c
   1733c:	add	r2, r2, #166	; 0xa6
   17340:	ldr	r7, [r3, r2, lsl #2]
   17344:	cmp	r7, #0
   17348:	beq	1747c <print_full_field_name@@Base+0x834>
   1734c:	mov	r0, r7
   17350:	mov	r4, r3
   17354:	mov	r6, #1
   17358:	b	17404 <print_full_field_name@@Base+0x7bc>
   1735c:	bl	18b60 <handle_coda_error@@Base>
   17360:	b	17324 <print_full_field_name@@Base+0x6dc>
   17364:	ldr	r3, [pc, #784]	; 1767c <print_full_field_name@@Base+0xa34>
   17368:	movw	r2, #393	; 0x189
   1736c:	movw	r1, #44084	; 0xac34
   17370:	movt	r1, #1
   17374:	movw	r0, #44212	; 0xacb4
   17378:	movt	r0, #1
   1737c:	bl	1262c <__assert_fail@plt>
   17380:	movw	r3, #49592	; 0xc1b8
   17384:	movt	r3, #2
   17388:	mov	r2, r5
   1738c:	movw	r1, #44228	; 0xacc4
   17390:	movt	r1, #1
   17394:	ldr	r0, [r3]
   17398:	bl	12434 <fprintf@plt>
   1739c:	mov	r0, #1
   173a0:	bl	123ec <exit@plt>
   173a4:	ldr	r5, [r4, #796]	; 0x31c
   173a8:	add	r3, r5, #166	; 0xa6
   173ac:	ldr	r0, [r4, r3, lsl #2]
   173b0:	bl	15fa0 <codadump_filter_get_subfilter@@Base>
   173b4:	add	r5, r5, #167	; 0xa7
   173b8:	str	r0, [r4, r5, lsl #2]
   173bc:	ldr	r3, [r4, #796]	; 0x31c
   173c0:	add	r3, r3, #1
   173c4:	str	r3, [r4, #796]	; 0x31c
   173c8:	mov	r1, r6
   173cc:	ldr	r0, [sp, #8]
   173d0:	bl	17680 <print_full_field_name@@Base+0xa38>
   173d4:	ldr	r5, [r4, #796]	; 0x31c
   173d8:	sub	r3, r5, #1
   173dc:	str	r3, [r4, #796]	; 0x31c
   173e0:	add	r5, r5, #165	; 0xa5
   173e4:	ldr	r0, [r4, r5, lsl #2]
   173e8:	bl	15fd8 <codadump_filter_get_next_filter@@Base>
   173ec:	str	r0, [r4, r5, lsl #2]
   173f0:	ldr	r3, [r4, #796]	; 0x31c
   173f4:	add	r2, r3, #166	; 0xa6
   173f8:	ldr	r0, [r4, r2, lsl #2]
   173fc:	cmp	r0, #0
   17400:	beq	17448 <print_full_field_name@@Base+0x800>
   17404:	bl	15f68 <codadump_filter_get_fieldname@@Base>
   17408:	subs	r5, r0, #0
   1740c:	beq	17364 <print_full_field_name@@Base+0x71c>
   17410:	ldr	r3, [r4, #136]	; 0x88
   17414:	add	r3, r3, #1
   17418:	add	r2, sp, #8
   1741c:	mov	r1, r5
   17420:	ldr	r0, [r4, r3, lsl #2]
   17424:	bl	12548 <coda_type_get_record_field_index_from_name@plt>
   17428:	cmp	r0, #0
   1742c:	beq	173a4 <print_full_field_name@@Base+0x75c>
   17430:	bl	125d8 <coda_get_errno@plt>
   17434:	ldr	r3, [r0]
   17438:	cmn	r3, #102	; 0x66
   1743c:	beq	17380 <print_full_field_name@@Base+0x738>
   17440:	bl	18b60 <handle_coda_error@@Base>
   17444:	b	173a4 <print_full_field_name@@Base+0x75c>
   17448:	movw	r2, #49648	; 0xc1f0
   1744c:	movt	r2, #2
   17450:	add	r3, r3, #166	; 0xa6
   17454:	str	r7, [r2, r3, lsl #2]
   17458:	movw	r3, #49648	; 0xc1f0
   1745c:	movt	r3, #2
   17460:	ldr	r2, [r3, #136]	; 0x88
   17464:	sub	r2, r2, #1
   17468:	str	r2, [r3, #136]	; 0x88
   1746c:	ldr	r2, [r3, #3748]	; 0xea4
   17470:	sub	r2, r2, #1
   17474:	str	r2, [r3, #3748]	; 0xea4
   17478:	b	172e4 <print_full_field_name@@Base+0x69c>
   1747c:	mov	r3, #0
   17480:	str	r3, [sp, #8]
   17484:	ldr	r3, [sp, #4]
   17488:	cmp	r3, #0
   1748c:	ble	17458 <print_full_field_name@@Base+0x810>
   17490:	mov	r0, #0
   17494:	mov	r4, r0
   17498:	mov	r1, r4
   1749c:	bl	17680 <print_full_field_name@@Base+0xa38>
   174a0:	ldr	r0, [sp, #8]
   174a4:	add	r0, r0, #1
   174a8:	str	r0, [sp, #8]
   174ac:	ldr	r3, [sp, #4]
   174b0:	cmp	r0, r3
   174b4:	blt	17498 <print_full_field_name@@Base+0x850>
   174b8:	b	17458 <print_full_field_name@@Base+0x810>
   174bc:	movw	r3, #49648	; 0xc1f0
   174c0:	movt	r3, #2
   174c4:	ldr	r3, [r3, #136]	; 0x88
   174c8:	cmp	r3, #30
   174cc:	bgt	172e4 <print_full_field_name@@Base+0x69c>
   174d0:	bl	14ed4 <dim_enter_array@@Base>
   174d4:	movw	r3, #49648	; 0xc1f0
   174d8:	movt	r3, #2
   174dc:	ldr	r2, [r3, #3360]	; 0xd20
   174e0:	add	r2, r2, #1
   174e4:	str	r2, [r3, #3360]	; 0xd20
   174e8:	ldr	r2, [r3, #136]	; 0x88
   174ec:	add	r1, r2, #1
   174f0:	str	r1, [r3, #136]	; 0x88
   174f4:	add	r1, r2, #3
   174f8:	add	r2, r2, #2
   174fc:	add	r1, r3, r1, lsl #2
   17500:	ldr	r0, [r3, r2, lsl #2]
   17504:	bl	124d0 <coda_type_get_array_base_type@plt>
   17508:	cmp	r0, #0
   1750c:	bne	1753c <print_full_field_name@@Base+0x8f4>
   17510:	bl	17268 <print_full_field_name@@Base+0x620>
   17514:	movw	r3, #49648	; 0xc1f0
   17518:	movt	r3, #2
   1751c:	ldr	r2, [r3, #136]	; 0x88
   17520:	sub	r2, r2, #1
   17524:	str	r2, [r3, #136]	; 0x88
   17528:	ldr	r2, [r3, #3360]	; 0xd20
   1752c:	sub	r2, r2, #1
   17530:	str	r2, [r3, #3360]	; 0xd20
   17534:	bl	158a4 <dim_leave_array@@Base>
   17538:	b	172e4 <print_full_field_name@@Base+0x69c>
   1753c:	bl	18b60 <handle_coda_error@@Base>
   17540:	b	17510 <print_full_field_name@@Base+0x8c8>
   17544:	movw	r3, #49648	; 0xc1f0
   17548:	movt	r3, #2
   1754c:	ldr	r2, [r3, #136]	; 0x88
   17550:	add	r2, r2, #2
   17554:	add	r1, sp, #8
   17558:	ldr	r0, [r3, r2, lsl #2]
   1755c:	bl	123f8 <coda_type_get_read_type@plt>
   17560:	cmp	r0, #0
   17564:	bne	17580 <print_full_field_name@@Base+0x938>
   17568:	ldr	r3, [sp, #8]
   1756c:	sub	r3, r3, #11
   17570:	cmp	r3, #1
   17574:	bls	17588 <print_full_field_name@@Base+0x940>
   17578:	bl	16fa4 <print_full_field_name@@Base+0x35c>
   1757c:	b	172e4 <print_full_field_name@@Base+0x69c>
   17580:	bl	18b60 <handle_coda_error@@Base>
   17584:	b	17568 <print_full_field_name@@Base+0x920>
   17588:	bl	14ed4 <dim_enter_array@@Base>
   1758c:	movw	r4, #49648	; 0xc1f0
   17590:	movt	r4, #2
   17594:	ldr	r3, [r4, #3360]	; 0xd20
   17598:	add	r3, r3, #1
   1759c:	str	r3, [r4, #3360]	; 0xd20
   175a0:	bl	16fa4 <print_full_field_name@@Base+0x35c>
   175a4:	ldr	r3, [r4, #3360]	; 0xd20
   175a8:	sub	r3, r3, #1
   175ac:	str	r3, [r4, #3360]	; 0xd20
   175b0:	bl	158a4 <dim_leave_array@@Base>
   175b4:	b	172e4 <print_full_field_name@@Base+0x69c>
   175b8:	bl	121c4 <coda_get_option_bypass_special_types@plt>
   175bc:	cmp	r0, #0
   175c0:	bne	17608 <print_full_field_name@@Base+0x9c0>
   175c4:	movw	r3, #49648	; 0xc1f0
   175c8:	movt	r3, #2
   175cc:	ldr	r2, [r3, #136]	; 0x88
   175d0:	add	r2, r2, #2
   175d4:	add	r1, sp, #8
   175d8:	ldr	r0, [r3, r2, lsl #2]
   175dc:	bl	124ac <coda_type_get_special_type@plt>
   175e0:	cmp	r0, #0
   175e4:	bne	1763c <print_full_field_name@@Base+0x9f4>
   175e8:	ldr	r3, [sp, #8]
   175ec:	cmp	r3, #3
   175f0:	ldrls	pc, [pc, r3, lsl #2]
   175f4:	b	172e4 <print_full_field_name@@Base+0x69c>
   175f8:	andeq	r7, r1, r4, ror #5
   175fc:	andeq	r7, r1, r4, asr #12
   17600:	andeq	r7, r1, r4, asr #12
   17604:	andeq	r7, r1, ip, asr #12
   17608:	movw	r3, #49648	; 0xc1f0
   1760c:	movt	r3, #2
   17610:	ldr	r2, [r3, #136]	; 0x88
   17614:	add	r2, r2, #2
   17618:	add	r1, r3, r2, lsl #2
   1761c:	ldr	r0, [r3, r2, lsl #2]
   17620:	bl	125e4 <coda_type_get_special_base_type@plt>
   17624:	cmp	r0, #0
   17628:	bne	17634 <print_full_field_name@@Base+0x9ec>
   1762c:	bl	17268 <print_full_field_name@@Base+0x620>
   17630:	b	172e4 <print_full_field_name@@Base+0x69c>
   17634:	bl	18b60 <handle_coda_error@@Base>
   17638:	b	1762c <print_full_field_name@@Base+0x9e4>
   1763c:	bl	18b60 <handle_coda_error@@Base>
   17640:	b	175e8 <print_full_field_name@@Base+0x9a0>
   17644:	bl	16fa4 <print_full_field_name@@Base+0x35c>
   17648:	b	172e4 <print_full_field_name@@Base+0x69c>
   1764c:	bl	14ed4 <dim_enter_array@@Base>
   17650:	movw	r4, #49648	; 0xc1f0
   17654:	movt	r4, #2
   17658:	ldr	r3, [r4, #3360]	; 0xd20
   1765c:	add	r3, r3, #1
   17660:	str	r3, [r4, #3360]	; 0xd20
   17664:	bl	16fa4 <print_full_field_name@@Base+0x35c>
   17668:	ldr	r3, [r4, #3360]	; 0xd20
   1766c:	sub	r3, r3, #1
   17670:	str	r3, [r4, #3360]	; 0xd20
   17674:	bl	158a4 <dim_leave_array@@Base>
   17678:	b	172e4 <print_full_field_name@@Base+0x69c>
   1767c:	andeq	sl, r1, r0, lsl ip
   17680:	strd	r4, [sp, #-12]!
   17684:	str	lr, [sp, #8]
   17688:	sub	sp, sp, #12
   1768c:	mov	r5, r0
   17690:	mov	r4, r1
   17694:	movw	r3, #49648	; 0xc1f0
   17698:	movt	r3, #2
   1769c:	ldr	r2, [r3, #3748]	; 0xea4
   176a0:	add	r2, r3, r2, lsl #2
   176a4:	str	r0, [r2, #3488]	; 0xda0
   176a8:	ldr	r0, [r3, #136]	; 0x88
   176ac:	add	r0, r0, #1
   176b0:	add	r2, sp, #4
   176b4:	mov	r1, r5
   176b8:	ldr	r0, [r3, r0, lsl #2]
   176bc:	bl	121f4 <coda_type_get_record_field_hidden_status@plt>
   176c0:	cmp	r0, #0
   176c4:	bne	177b4 <print_full_field_name@@Base+0xb6c>
   176c8:	clz	r1, r4
   176cc:	lsr	r1, r1, #5
   176d0:	ldr	r3, [sp, #4]
   176d4:	cmp	r3, #0
   176d8:	moveq	r1, #0
   176dc:	cmp	r1, #0
   176e0:	bne	177a4 <print_full_field_name@@Base+0xb5c>
   176e4:	movw	r3, #49644	; 0xc1ec
   176e8:	movt	r3, #2
   176ec:	ldr	r3, [r3]
   176f0:	cmp	r3, #0
   176f4:	beq	17744 <print_full_field_name@@Base+0xafc>
   176f8:	movw	r3, #49648	; 0xc1f0
   176fc:	movt	r3, #2
   17700:	ldr	r0, [r3, #136]	; 0x88
   17704:	add	r0, r0, #1
   17708:	mov	r2, sp
   1770c:	mov	r1, r5
   17710:	ldr	r0, [r3, r0, lsl #2]
   17714:	bl	122e4 <coda_type_get_record_field_available_status@plt>
   17718:	cmp	r0, #0
   1771c:	bne	177bc <print_full_field_name@@Base+0xb74>
   17720:	ldr	r3, [sp]
   17724:	cmn	r3, #1
   17728:	beq	177c4 <print_full_field_name@@Base+0xb7c>
   1772c:	movw	r3, #49648	; 0xc1f0
   17730:	movt	r3, #2
   17734:	ldr	r2, [r3, #136]	; 0x88
   17738:	add	r3, r3, r2, lsl #2
   1773c:	ldr	r2, [sp]
   17740:	str	r2, [r3, #3360]	; 0xd20
   17744:	movw	r3, #49648	; 0xc1f0
   17748:	movt	r3, #2
   1774c:	ldr	r2, [r3, #3748]	; 0xea4
   17750:	add	r2, r2, #904	; 0x388
   17754:	ldr	r0, [r3, #136]	; 0x88
   17758:	add	r0, r0, #1
   1775c:	add	r2, r3, r2, lsl #2
   17760:	mov	r1, r5
   17764:	ldr	r0, [r3, r0, lsl #2]
   17768:	bl	125f0 <coda_type_get_record_field_name@plt>
   1776c:	cmp	r0, #0
   17770:	bne	177d4 <print_full_field_name@@Base+0xb8c>
   17774:	movw	r3, #49648	; 0xc1f0
   17778:	movt	r3, #2
   1777c:	ldr	r1, [r3, #136]	; 0x88
   17780:	add	r2, r1, #2
   17784:	add	r0, r1, #1
   17788:	add	r2, r3, r2, lsl #2
   1778c:	mov	r1, r5
   17790:	ldr	r0, [r3, r0, lsl #2]
   17794:	bl	122a8 <coda_type_get_record_field_type@plt>
   17798:	cmp	r0, #0
   1779c:	bne	177dc <print_full_field_name@@Base+0xb94>
   177a0:	bl	17268 <print_full_field_name@@Base+0x620>
   177a4:	add	sp, sp, #12
   177a8:	ldrd	r4, [sp]
   177ac:	add	sp, sp, #8
   177b0:	pop	{pc}		; (ldr pc, [sp], #4)
   177b4:	bl	18b60 <handle_coda_error@@Base>
   177b8:	b	176c8 <print_full_field_name@@Base+0xa80>
   177bc:	bl	18b60 <handle_coda_error@@Base>
   177c0:	b	17720 <print_full_field_name@@Base+0xad8>
   177c4:	bl	15a84 <dim_record_field_available@@Base>
   177c8:	cmp	r0, #0
   177cc:	bne	1772c <print_full_field_name@@Base+0xae4>
   177d0:	b	177a4 <print_full_field_name@@Base+0xb5c>
   177d4:	bl	18b60 <handle_coda_error@@Base>
   177d8:	b	17774 <print_full_field_name@@Base+0xb2c>
   177dc:	bl	18b60 <handle_coda_error@@Base>
   177e0:	b	177a0 <print_full_field_name@@Base+0xb58>

000177e4 <traverse_info_init@@Base>:
   177e4:	movw	r3, #49648	; 0xc1f0
   177e8:	movt	r3, #2
   177ec:	mov	r2, #0
   177f0:	str	r2, [r3, #4]
   177f4:	str	r2, [r3, #136]	; 0x88
   177f8:	str	r2, [r3, #3360]	; 0xd20
   177fc:	str	r2, [r3, #3748]	; 0xea4
   17800:	bx	lr

00017804 <traverse_info_done@@Base>:
   17804:	str	r4, [sp, #-8]!
   17808:	str	lr, [sp, #4]
   1780c:	movw	r3, #49648	; 0xc1f0
   17810:	movt	r3, #2
   17814:	ldr	r0, [r3, #4]
   17818:	cmp	r0, #0
   1781c:	beq	17824 <traverse_info_done@@Base+0x20>
   17820:	bl	12518 <coda_close@plt>
   17824:	movw	r3, #49648	; 0xc1f0
   17828:	movt	r3, #2
   1782c:	ldr	r3, [r3, #664]	; 0x298
   17830:	cmp	r3, #0
   17834:	beq	17840 <traverse_info_done@@Base+0x3c>
   17838:	ldr	r0, [pc, #12]	; 1784c <traverse_info_done@@Base+0x48>
   1783c:	bl	15aa8 <codadump_filter_remove@@Base>
   17840:	ldr	r4, [sp]
   17844:	add	sp, sp, #4
   17848:	pop	{pc}		; (ldr pc, [sp], #4)
   1784c:	andeq	ip, r2, r8, lsl #9

00017850 <traverse_product@@Base>:
   17850:	str	r4, [sp, #-8]!
   17854:	str	lr, [sp, #4]
   17858:	ldr	r3, [pc, #208]	; 17930 <traverse_product@@Base+0xe0>
   1785c:	mov	r1, r3
   17860:	ldr	r0, [r3, #-4]
   17864:	bl	12230 <coda_open@plt>
   17868:	cmp	r0, #0
   1786c:	bne	178d8 <traverse_product@@Base+0x88>
   17870:	movw	r0, #49648	; 0xc1f0
   17874:	movt	r0, #2
   17878:	ldr	r1, [r0, #4]
   1787c:	add	r0, r0, #144	; 0x90
   17880:	bl	1235c <coda_cursor_set_product@plt>
   17884:	cmp	r0, #0
   17888:	bne	17920 <traverse_product@@Base+0xd0>
   1788c:	movw	r0, #49648	; 0xc1f0
   17890:	movt	r0, #2
   17894:	ldr	r1, [r0, #136]	; 0x88
   17898:	add	r1, r1, #2
   1789c:	add	r1, r0, r1, lsl #2
   178a0:	add	r0, r0, #144	; 0x90
   178a4:	bl	122b4 <coda_cursor_get_type@plt>
   178a8:	cmp	r0, #0
   178ac:	bne	17928 <traverse_product@@Base+0xd8>
   178b0:	bl	17268 <print_full_field_name@@Base+0x620>
   178b4:	movw	r4, #49648	; 0xc1f0
   178b8:	movt	r4, #2
   178bc:	ldr	r0, [r4, #4]
   178c0:	bl	12518 <coda_close@plt>
   178c4:	mov	r3, #0
   178c8:	str	r3, [r4, #4]
   178cc:	ldr	r4, [sp]
   178d0:	add	sp, sp, #4
   178d4:	pop	{pc}		; (ldr pc, [sp], #4)
   178d8:	bl	125d8 <coda_get_errno@plt>
   178dc:	ldr	r3, [r0]
   178e0:	cmn	r3, #21
   178e4:	beq	178f0 <traverse_product@@Base+0xa0>
   178e8:	bl	18b60 <handle_coda_error@@Base>
   178ec:	b	17870 <traverse_product@@Base+0x20>
   178f0:	mov	r0, #0
   178f4:	bl	12278 <coda_set_option_use_mmap@plt>
   178f8:	ldr	r3, [pc, #48]	; 17930 <traverse_product@@Base+0xe0>
   178fc:	mov	r1, r3
   17900:	ldr	r0, [r3, #-4]
   17904:	bl	12230 <coda_open@plt>
   17908:	mov	r4, r0
   1790c:	mov	r0, #1
   17910:	bl	12278 <coda_set_option_use_mmap@plt>
   17914:	cmp	r4, #0
   17918:	bne	178e8 <traverse_product@@Base+0x98>
   1791c:	b	17870 <traverse_product@@Base+0x20>
   17920:	bl	18b60 <handle_coda_error@@Base>
   17924:	b	1788c <traverse_product@@Base+0x3c>
   17928:	bl	18b60 <handle_coda_error@@Base>
   1792c:	b	178b0 <traverse_product@@Base+0x60>
   17930:	strdeq	ip, [r2], -r4
   17934:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17938:	strd	r6, [sp, #8]
   1793c:	str	r8, [sp, #16]
   17940:	str	lr, [sp, #20]
   17944:	movw	r3, #49612	; 0xc1cc
   17948:	movt	r3, #2
   1794c:	ldr	r4, [r3]
   17950:	cmp	r4, #0
   17954:	blt	179a0 <traverse_product@@Base+0x150>
   17958:	ble	1798c <traverse_product@@Base+0x13c>
   1795c:	movw	r6, #53400	; 0xd098
   17960:	movt	r6, #2
   17964:	movw	r5, #42716	; 0xa6dc
   17968:	movt	r5, #1
   1796c:	mov	r7, #2
   17970:	ldr	r3, [r6]
   17974:	mov	r2, r7
   17978:	mov	r1, #1
   1797c:	mov	r0, r5
   17980:	bl	12350 <fwrite@plt>
   17984:	subs	r4, r4, #1
   17988:	bne	17970 <traverse_product@@Base+0x120>
   1798c:	ldrd	r4, [sp]
   17990:	ldrd	r6, [sp, #8]
   17994:	ldr	r8, [sp, #16]
   17998:	add	sp, sp, #20
   1799c:	pop	{pc}		; (ldr pc, [sp], #4)
   179a0:	movw	r3, #44280	; 0xacf8
   179a4:	movt	r3, #1
   179a8:	mov	r2, #44	; 0x2c
   179ac:	movw	r1, #44288	; 0xad00
   179b0:	movt	r1, #1
   179b4:	movw	r0, #42820	; 0xa744
   179b8:	movt	r0, #1
   179bc:	bl	1262c <__assert_fail@plt>
   179c0:	push	{r0, r1, r2, r3}
   179c4:	push	{lr}		; (str lr, [sp, #-4]!)
   179c8:	sub	sp, sp, #12
   179cc:	bl	17934 <traverse_product@@Base+0xe4>
   179d0:	add	r2, sp, #20
   179d4:	str	r2, [sp, #4]
   179d8:	movw	r3, #53400	; 0xd098
   179dc:	movt	r3, #2
   179e0:	ldr	r1, [sp, #16]
   179e4:	ldr	r0, [r3]
   179e8:	bl	12530 <vfprintf@plt>
   179ec:	add	sp, sp, #12
   179f0:	pop	{lr}		; (ldr lr, [sp], #4)
   179f4:	add	sp, sp, #16
   179f8:	bx	lr
   179fc:	push	{r0, r1, r2, r3}
   17a00:	push	{lr}		; (str lr, [sp, #-4]!)
   17a04:	sub	sp, sp, #12
   17a08:	add	r2, sp, #20
   17a0c:	str	r2, [sp, #4]
   17a10:	movw	r3, #53400	; 0xd098
   17a14:	movt	r3, #2
   17a18:	ldr	r1, [sp, #16]
   17a1c:	ldr	r0, [r3]
   17a20:	bl	12530 <vfprintf@plt>
   17a24:	add	sp, sp, #12
   17a28:	pop	{lr}		; (ldr lr, [sp], #4)
   17a2c:	add	sp, sp, #16
   17a30:	bx	lr
   17a34:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17a38:	strd	r6, [sp, #8]
   17a3c:	str	r8, [sp, #16]
   17a40:	str	lr, [sp, #20]
   17a44:	subs	r5, r1, #0
   17a48:	ble	17b3c <traverse_product@@Base+0x2ec>
   17a4c:	sub	r4, r0, #1
   17a50:	add	r5, r4, r5
   17a54:	movw	r6, #42616	; 0xa678
   17a58:	movt	r6, #1
   17a5c:	movw	r8, #43820	; 0xab2c
   17a60:	movt	r8, #1
   17a64:	movw	r7, #42740	; 0xa6f4
   17a68:	movt	r7, #1
   17a6c:	b	17aac <traverse_product@@Base+0x25c>
   17a70:	cmp	r1, #34	; 0x22
   17a74:	beq	17b1c <traverse_product@@Base+0x2cc>
   17a78:	cmp	r1, #92	; 0x5c
   17a7c:	beq	17b2c <traverse_product@@Base+0x2dc>
   17a80:	cmp	r1, #13
   17a84:	bne	17ad4 <traverse_product@@Base+0x284>
   17a88:	movw	r0, #42620	; 0xa67c
   17a8c:	movt	r0, #1
   17a90:	bl	179fc <traverse_product@@Base+0x1ac>
   17a94:	b	17aa4 <traverse_product@@Base+0x254>
   17a98:	movw	r0, #42600	; 0xa668
   17a9c:	movt	r0, #1
   17aa0:	bl	179fc <traverse_product@@Base+0x1ac>
   17aa4:	cmp	r4, r5
   17aa8:	beq	17b3c <traverse_product@@Base+0x2ec>
   17aac:	ldrb	r1, [r4, #1]!
   17ab0:	cmp	r1, #12
   17ab4:	beq	17af0 <traverse_product@@Base+0x2a0>
   17ab8:	bhi	17a70 <traverse_product@@Base+0x220>
   17abc:	cmp	r1, #9
   17ac0:	beq	17b0c <traverse_product@@Base+0x2bc>
   17ac4:	cmp	r1, #10
   17ac8:	beq	17afc <traverse_product@@Base+0x2ac>
   17acc:	cmp	r1, #8
   17ad0:	beq	17a98 <traverse_product@@Base+0x248>
   17ad4:	sub	r3, r1, #32
   17ad8:	uxtb	r3, r3
   17adc:	cmp	r3, #94	; 0x5e
   17ae0:	movls	r0, r7
   17ae4:	movhi	r0, r8
   17ae8:	bl	179fc <traverse_product@@Base+0x1ac>
   17aec:	b	17aa4 <traverse_product@@Base+0x254>
   17af0:	mov	r0, r6
   17af4:	bl	179fc <traverse_product@@Base+0x1ac>
   17af8:	b	17aa4 <traverse_product@@Base+0x254>
   17afc:	movw	r0, #42608	; 0xa670
   17b00:	movt	r0, #1
   17b04:	bl	179fc <traverse_product@@Base+0x1ac>
   17b08:	b	17aa4 <traverse_product@@Base+0x254>
   17b0c:	movw	r0, #42604	; 0xa66c
   17b10:	movt	r0, #1
   17b14:	bl	179fc <traverse_product@@Base+0x1ac>
   17b18:	b	17aa4 <traverse_product@@Base+0x254>
   17b1c:	movw	r0, #43816	; 0xab28
   17b20:	movt	r0, #1
   17b24:	bl	179fc <traverse_product@@Base+0x1ac>
   17b28:	b	17aa4 <traverse_product@@Base+0x254>
   17b2c:	movw	r0, #42624	; 0xa680
   17b30:	movt	r0, #1
   17b34:	bl	179fc <traverse_product@@Base+0x1ac>
   17b38:	b	17aa4 <traverse_product@@Base+0x254>
   17b3c:	ldrd	r4, [sp]
   17b40:	ldrd	r6, [sp, #8]
   17b44:	ldr	r8, [sp, #16]
   17b48:	add	sp, sp, #20
   17b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b50:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17b54:	strd	r6, [sp, #8]
   17b58:	strd	r8, [sp, #16]
   17b5c:	str	lr, [sp, #24]
   17b60:	sub	sp, sp, #76	; 0x4c
   17b64:	mov	r4, r0
   17b68:	mov	r6, r1
   17b6c:	mov	r3, #0
   17b70:	str	r3, [sp, #64]	; 0x40
   17b74:	movw	r3, #49612	; 0xc1cc
   17b78:	movt	r3, #2
   17b7c:	ldr	r3, [r3, #4]
   17b80:	cmp	r3, #0
   17b84:	bne	17bc8 <traverse_product@@Base+0x378>
   17b88:	add	r1, sp, #68	; 0x44
   17b8c:	mov	r0, r4
   17b90:	bl	122fc <coda_cursor_get_type_class@plt>
   17b94:	cmp	r0, #0
   17b98:	bne	17c7c <traverse_product@@Base+0x42c>
   17b9c:	ldr	r3, [sp, #68]	; 0x44
   17ba0:	cmp	r3, #6
   17ba4:	ldrls	pc, [pc, r3, lsl #2]
   17ba8:	b	18000 <traverse_product@@Base+0x7b0>
   17bac:	andeq	r7, r1, r4, lsl #25
   17bb0:	andeq	r7, r1, r0, lsl #30
   17bb4:	andeq	r8, r1, r8, asr r0
   17bb8:	andeq	r8, r1, r8, asr r0
   17bbc:	andeq	r8, r1, r8, asr r0
   17bc0:	andeq	r8, r1, r8, asr r0
   17bc4:			; <UNDEFINED> instruction: 0x000183b4
   17bc8:	add	r1, sp, #64	; 0x40
   17bcc:	bl	122f0 <coda_cursor_has_attributes@plt>
   17bd0:	cmp	r0, #0
   17bd4:	bne	17c58 <traverse_product@@Base+0x408>
   17bd8:	ldr	r3, [sp, #64]	; 0x40
   17bdc:	cmp	r3, #0
   17be0:	beq	17b88 <traverse_product@@Base+0x338>
   17be4:	cmp	r6, #0
   17be8:	bne	17c60 <traverse_product@@Base+0x410>
   17bec:	movw	r0, #44364	; 0xad4c
   17bf0:	movt	r0, #1
   17bf4:	bl	179fc <traverse_product@@Base+0x1ac>
   17bf8:	mov	r0, r4
   17bfc:	bl	12470 <coda_cursor_goto_attributes@plt>
   17c00:	cmp	r0, #0
   17c04:	bne	17c74 <traverse_product@@Base+0x424>
   17c08:	movw	r5, #49612	; 0xc1cc
   17c0c:	movt	r5, #2
   17c10:	ldr	r3, [r5]
   17c14:	add	r3, r3, #1
   17c18:	str	r3, [r5]
   17c1c:	mov	r1, #1
   17c20:	mov	r0, r4
   17c24:	bl	17b50 <traverse_product@@Base+0x300>
   17c28:	ldr	r3, [r5]
   17c2c:	sub	r3, r3, #1
   17c30:	str	r3, [r5]
   17c34:	mov	r0, r4
   17c38:	bl	123d4 <coda_cursor_goto_parent@plt>
   17c3c:	movw	r0, #44372	; 0xad54
   17c40:	movt	r0, #1
   17c44:	bl	179c0 <traverse_product@@Base+0x170>
   17c48:	ldr	r3, [r5]
   17c4c:	add	r3, r3, #1
   17c50:	str	r3, [r5]
   17c54:	b	17b88 <traverse_product@@Base+0x338>
   17c58:	bl	18b60 <handle_coda_error@@Base>
   17c5c:	b	17bd8 <traverse_product@@Base+0x388>
   17c60:	movw	r0, #48776	; 0xbe88
   17c64:	movt	r0, #1
   17c68:	bl	179fc <traverse_product@@Base+0x1ac>
   17c6c:	bl	17934 <traverse_product@@Base+0xe4>
   17c70:	b	17bec <traverse_product@@Base+0x39c>
   17c74:	bl	18b60 <handle_coda_error@@Base>
   17c78:	b	17c08 <traverse_product@@Base+0x3b8>
   17c7c:	bl	18b60 <handle_coda_error@@Base>
   17c80:	b	17b9c <traverse_product@@Base+0x34c>
   17c84:	add	r1, sp, #8
   17c88:	mov	r0, r4
   17c8c:	bl	12254 <coda_cursor_get_num_elements@plt>
   17c90:	cmp	r0, #0
   17c94:	bne	17d70 <traverse_product@@Base+0x520>
   17c98:	ldr	r3, [sp, #8]
   17c9c:	cmp	r3, #0
   17ca0:	ble	17ef0 <traverse_product@@Base+0x6a0>
   17ca4:	cmp	r6, #0
   17ca8:	bne	17d78 <traverse_product@@Base+0x528>
   17cac:	add	r1, sp, #12
   17cb0:	mov	r0, r4
   17cb4:	bl	122b4 <coda_cursor_get_type@plt>
   17cb8:	cmp	r0, #0
   17cbc:	bne	17d88 <traverse_product@@Base+0x538>
   17cc0:	add	r1, sp, #16
   17cc4:	ldr	r0, [sp, #12]
   17cc8:	bl	124b8 <coda_type_get_record_union_status@plt>
   17ccc:	cmp	r0, #0
   17cd0:	bne	17d90 <traverse_product@@Base+0x540>
   17cd4:	ldr	r5, [sp, #16]
   17cd8:	cmp	r5, #0
   17cdc:	beq	17db8 <traverse_product@@Base+0x568>
   17ce0:	add	r1, sp, #20
   17ce4:	mov	r0, r4
   17ce8:	bl	125a8 <coda_cursor_get_available_union_field_index@plt>
   17cec:	cmp	r0, #0
   17cf0:	bne	17d98 <traverse_product@@Base+0x548>
   17cf4:	add	r2, sp, #32
   17cf8:	ldr	r1, [sp, #20]
   17cfc:	ldr	r0, [sp, #12]
   17d00:	bl	125f0 <coda_type_get_record_field_name@plt>
   17d04:	cmp	r0, #0
   17d08:	bne	17da0 <traverse_product@@Base+0x550>
   17d0c:	ldr	r1, [sp, #20]
   17d10:	mov	r0, r4
   17d14:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   17d18:	cmp	r0, #0
   17d1c:	bne	17da8 <traverse_product@@Base+0x558>
   17d20:	cmp	r6, #0
   17d24:	bne	17db0 <traverse_product@@Base+0x560>
   17d28:	ldr	r1, [sp, #32]
   17d2c:	movw	r0, #44380	; 0xad5c
   17d30:	movt	r0, #1
   17d34:	bl	179fc <traverse_product@@Base+0x1ac>
   17d38:	movw	r5, #49612	; 0xc1cc
   17d3c:	movt	r5, #2
   17d40:	ldr	r3, [r5]
   17d44:	add	r3, r3, #1
   17d48:	str	r3, [r5]
   17d4c:	mov	r1, #1
   17d50:	mov	r0, r4
   17d54:	bl	17b50 <traverse_product@@Base+0x300>
   17d58:	ldr	r3, [r5]
   17d5c:	sub	r3, r3, #1
   17d60:	str	r3, [r5]
   17d64:	mov	r0, r4
   17d68:	bl	123d4 <coda_cursor_goto_parent@plt>
   17d6c:	b	18000 <traverse_product@@Base+0x7b0>
   17d70:	bl	18b60 <handle_coda_error@@Base>
   17d74:	b	17c98 <traverse_product@@Base+0x448>
   17d78:	movw	r0, #48776	; 0xbe88
   17d7c:	movt	r0, #1
   17d80:	bl	179fc <traverse_product@@Base+0x1ac>
   17d84:	b	17cac <traverse_product@@Base+0x45c>
   17d88:	bl	18b60 <handle_coda_error@@Base>
   17d8c:	b	17cc0 <traverse_product@@Base+0x470>
   17d90:	bl	18b60 <handle_coda_error@@Base>
   17d94:	b	17cd4 <traverse_product@@Base+0x484>
   17d98:	bl	18b60 <handle_coda_error@@Base>
   17d9c:	b	17cf4 <traverse_product@@Base+0x4a4>
   17da0:	bl	18b60 <handle_coda_error@@Base>
   17da4:	b	17d0c <traverse_product@@Base+0x4bc>
   17da8:	bl	18b60 <handle_coda_error@@Base>
   17dac:	b	17d20 <traverse_product@@Base+0x4d0>
   17db0:	bl	17934 <traverse_product@@Base+0xe4>
   17db4:	b	17d28 <traverse_product@@Base+0x4d8>
   17db8:	mov	r0, r4
   17dbc:	bl	12368 <coda_cursor_goto_first_record_field@plt>
   17dc0:	cmp	r0, #0
   17dc4:	bne	17df4 <traverse_product@@Base+0x5a4>
   17dc8:	mov	r3, #0
   17dcc:	str	r3, [sp, #20]
   17dd0:	ldr	r3, [sp, #8]
   17dd4:	cmp	r3, #0
   17dd8:	ble	17ee4 <traverse_product@@Base+0x694>
   17ddc:	mov	r7, #1
   17de0:	movw	r9, #44380	; 0xad5c
   17de4:	movt	r9, #1
   17de8:	movw	r8, #49612	; 0xc1cc
   17dec:	movt	r8, #2
   17df0:	b	17e94 <traverse_product@@Base+0x644>
   17df4:	bl	18b60 <handle_coda_error@@Base>
   17df8:	b	17dc8 <traverse_product@@Base+0x578>
   17dfc:	bl	18b60 <handle_coda_error@@Base>
   17e00:	b	17eac <traverse_product@@Base+0x65c>
   17e04:	add	r2, sp, #24
   17e08:	ldr	r1, [sp, #20]
   17e0c:	ldr	r0, [sp, #12]
   17e10:	bl	125f0 <coda_type_get_record_field_name@plt>
   17e14:	cmp	r0, #0
   17e18:	bne	17e6c <traverse_product@@Base+0x61c>
   17e1c:	clz	r7, r7
   17e20:	lsr	r7, r7, #5
   17e24:	cmp	r6, #0
   17e28:	movne	r7, #1
   17e2c:	cmp	r7, #0
   17e30:	bne	17e74 <traverse_product@@Base+0x624>
   17e34:	ldr	r1, [sp, #24]
   17e38:	mov	r0, r9
   17e3c:	bl	179fc <traverse_product@@Base+0x1ac>
   17e40:	ldr	r3, [r8]
   17e44:	add	r3, r3, #1
   17e48:	str	r3, [r8]
   17e4c:	mov	r1, #1
   17e50:	mov	r0, r4
   17e54:	bl	17b50 <traverse_product@@Base+0x300>
   17e58:	ldr	r3, [r8]
   17e5c:	sub	r3, r3, #1
   17e60:	str	r3, [r8]
   17e64:	mov	r7, r5
   17e68:	b	17eb8 <traverse_product@@Base+0x668>
   17e6c:	bl	18b60 <handle_coda_error@@Base>
   17e70:	b	17e1c <traverse_product@@Base+0x5cc>
   17e74:	bl	17934 <traverse_product@@Base+0xe4>
   17e78:	b	17e34 <traverse_product@@Base+0x5e4>
   17e7c:	ldr	r5, [sp, #20]
   17e80:	add	r5, r5, #1
   17e84:	str	r5, [sp, #20]
   17e88:	ldr	r3, [sp, #8]
   17e8c:	cmp	r5, r3
   17e90:	bge	17ee4 <traverse_product@@Base+0x694>
   17e94:	add	r2, sp, #32
   17e98:	mov	r1, r5
   17e9c:	ldr	r0, [sp, #12]
   17ea0:	bl	121f4 <coda_type_get_record_field_hidden_status@plt>
   17ea4:	cmp	r0, #0
   17ea8:	bne	17dfc <traverse_product@@Base+0x5ac>
   17eac:	ldr	r5, [sp, #32]
   17eb0:	cmp	r5, #0
   17eb4:	beq	17e04 <traverse_product@@Base+0x5b4>
   17eb8:	ldr	r3, [sp, #8]
   17ebc:	sub	r3, r3, #1
   17ec0:	ldr	r2, [sp, #20]
   17ec4:	cmp	r3, r2
   17ec8:	ble	17e7c <traverse_product@@Base+0x62c>
   17ecc:	mov	r0, r4
   17ed0:	bl	12560 <coda_cursor_goto_next_record_field@plt>
   17ed4:	cmp	r0, #0
   17ed8:	beq	17e7c <traverse_product@@Base+0x62c>
   17edc:	bl	18b60 <handle_coda_error@@Base>
   17ee0:	b	17e7c <traverse_product@@Base+0x62c>
   17ee4:	mov	r0, r4
   17ee8:	bl	123d4 <coda_cursor_goto_parent@plt>
   17eec:	b	18000 <traverse_product@@Base+0x7b0>
   17ef0:	movw	r0, #44388	; 0xad64
   17ef4:	movt	r0, #1
   17ef8:	bl	179fc <traverse_product@@Base+0x1ac>
   17efc:	b	18000 <traverse_product@@Base+0x7b0>
   17f00:	add	r2, sp, #32
   17f04:	add	r1, sp, #24
   17f08:	mov	r0, r4
   17f0c:	bl	12500 <coda_cursor_get_array_dim@plt>
   17f10:	cmp	r0, #0
   17f14:	bne	17f84 <traverse_product@@Base+0x734>
   17f18:	ldr	r1, [sp, #24]
   17f1c:	cmp	r1, #0
   17f20:	blt	18048 <traverse_product@@Base+0x7f8>
   17f24:	ble	17f8c <traverse_product@@Base+0x73c>
   17f28:	add	r3, sp, #28
   17f2c:	add	r1, r3, r1, lsl #2
   17f30:	mov	r5, #1
   17f34:	ldr	r2, [r3, #4]!
   17f38:	mul	r5, r2, r5
   17f3c:	cmp	r1, r3
   17f40:	bne	17f34 <traverse_product@@Base+0x6e4>
   17f44:	cmp	r5, #0
   17f48:	ble	18038 <traverse_product@@Base+0x7e8>
   17f4c:	movw	r0, #48776	; 0xbe88
   17f50:	movt	r0, #1
   17f54:	bl	179fc <traverse_product@@Base+0x1ac>
   17f58:	mov	r0, r4
   17f5c:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   17f60:	cmp	r0, #0
   17f64:	bne	17f94 <traverse_product@@Base+0x744>
   17f68:	mov	r7, #0
   17f6c:	movw	r8, #44392	; 0xad68
   17f70:	movt	r8, #1
   17f74:	movw	r6, #49612	; 0xc1cc
   17f78:	movt	r6, #2
   17f7c:	mov	r9, r7
   17f80:	b	17fa8 <traverse_product@@Base+0x758>
   17f84:	bl	18b60 <handle_coda_error@@Base>
   17f88:	b	17f18 <traverse_product@@Base+0x6c8>
   17f8c:	mov	r5, #1
   17f90:	b	17f4c <traverse_product@@Base+0x6fc>
   17f94:	bl	18b60 <handle_coda_error@@Base>
   17f98:	b	17f68 <traverse_product@@Base+0x718>
   17f9c:	add	r7, r7, #1
   17fa0:	cmp	r7, r5
   17fa4:	bge	17ff8 <traverse_product@@Base+0x7a8>
   17fa8:	mov	r0, r8
   17fac:	bl	179c0 <traverse_product@@Base+0x170>
   17fb0:	ldr	r3, [r6]
   17fb4:	add	r3, r3, #1
   17fb8:	str	r3, [r6]
   17fbc:	mov	r1, r9
   17fc0:	mov	r0, r4
   17fc4:	bl	17b50 <traverse_product@@Base+0x300>
   17fc8:	ldr	r3, [r6]
   17fcc:	sub	r3, r3, #1
   17fd0:	str	r3, [r6]
   17fd4:	sub	r3, r5, #1
   17fd8:	cmp	r3, r7
   17fdc:	ble	17f9c <traverse_product@@Base+0x74c>
   17fe0:	mov	r0, r4
   17fe4:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   17fe8:	cmp	r0, #0
   17fec:	beq	17f9c <traverse_product@@Base+0x74c>
   17ff0:	bl	18b60 <handle_coda_error@@Base>
   17ff4:	b	17f9c <traverse_product@@Base+0x74c>
   17ff8:	mov	r0, r4
   17ffc:	bl	123d4 <coda_cursor_goto_parent@plt>
   18000:	ldr	r3, [sp, #64]	; 0x40
   18004:	cmp	r3, #0
   18008:	beq	18020 <traverse_product@@Base+0x7d0>
   1800c:	movw	r3, #49612	; 0xc1cc
   18010:	movt	r3, #2
   18014:	ldr	r2, [r3]
   18018:	sub	r2, r2, #1
   1801c:	str	r2, [r3]
   18020:	add	sp, sp, #76	; 0x4c
   18024:	ldrd	r4, [sp]
   18028:	ldrd	r6, [sp, #8]
   1802c:	ldrd	r8, [sp, #16]
   18030:	add	sp, sp, #24
   18034:	pop	{pc}		; (ldr pc, [sp], #4)
   18038:	movw	r0, #44396	; 0xad6c
   1803c:	movt	r0, #1
   18040:	bl	179fc <traverse_product@@Base+0x1ac>
   18044:	b	18000 <traverse_product@@Base+0x7b0>
   18048:	movw	r0, #44396	; 0xad6c
   1804c:	movt	r0, #1
   18050:	bl	179fc <traverse_product@@Base+0x1ac>
   18054:	b	18000 <traverse_product@@Base+0x7b0>
   18058:	add	r1, sp, #20
   1805c:	mov	r0, r4
   18060:	bl	12398 <coda_cursor_get_read_type@plt>
   18064:	cmp	r0, #0
   18068:	bne	180b8 <traverse_product@@Base+0x868>
   1806c:	ldr	r3, [sp, #20]
   18070:	add	r3, r3, #1
   18074:	cmp	r3, #13
   18078:	ldrls	pc, [pc, r3, lsl #2]
   1807c:	b	18000 <traverse_product@@Base+0x7b0>
   18080:	andeq	r8, r1, r4, lsr #7
   18084:	andeq	r8, r1, ip, lsl #5
   18088:			; <UNDEFINED> instruction: 0x000182bc
   1808c:	andeq	r8, r1, ip, lsl #5
   18090:			; <UNDEFINED> instruction: 0x000182bc
   18094:	andeq	r8, r1, ip, lsl #5
   18098:			; <UNDEFINED> instruction: 0x000182bc
   1809c:	andeq	r8, r1, ip, ror #5
   180a0:	andeq	r8, r1, r8, lsr #6
   180a4:	andeq	r8, r1, r4, ror #6
   180a8:	andeq	r8, r1, r4, ror #6
   180ac:	andeq	r8, r1, r0, asr #1
   180b0:	andeq	r8, r1, r4, lsl #2
   180b4:			; <UNDEFINED> instruction: 0x000181bc
   180b8:	bl	18b60 <handle_coda_error@@Base>
   180bc:	b	1806c <traverse_product@@Base+0x81c>
   180c0:	add	r1, sp, #32
   180c4:	mov	r0, r4
   180c8:	bl	1247c <coda_cursor_read_char@plt>
   180cc:	cmp	r0, #0
   180d0:	bne	180fc <traverse_product@@Base+0x8ac>
   180d4:	movw	r0, #44208	; 0xacb0
   180d8:	movt	r0, #1
   180dc:	bl	179fc <traverse_product@@Base+0x1ac>
   180e0:	mov	r1, #1
   180e4:	add	r0, sp, #32
   180e8:	bl	17a34 <traverse_product@@Base+0x1e4>
   180ec:	movw	r0, #44400	; 0xad70
   180f0:	movt	r0, #1
   180f4:	bl	179fc <traverse_product@@Base+0x1ac>
   180f8:	b	18000 <traverse_product@@Base+0x7b0>
   180fc:	bl	18b60 <handle_coda_error@@Base>
   18100:	b	180d4 <traverse_product@@Base+0x884>
   18104:	add	r1, sp, #32
   18108:	mov	r0, r4
   1810c:	bl	12404 <coda_cursor_get_string_length@plt>
   18110:	cmp	r0, #0
   18114:	bne	1817c <traverse_product@@Base+0x92c>
   18118:	ldr	r0, [sp, #32]
   1811c:	add	r0, r0, #1
   18120:	bl	123a4 <malloc@plt>
   18124:	subs	r5, r0, #0
   18128:	beq	18184 <traverse_product@@Base+0x934>
   1812c:	ldr	r2, [sp, #32]
   18130:	add	r2, r2, #1
   18134:	mov	r1, r5
   18138:	mov	r0, r4
   1813c:	bl	123c8 <coda_cursor_read_string@plt>
   18140:	cmp	r0, #0
   18144:	bne	181b4 <traverse_product@@Base+0x964>
   18148:	movw	r0, #44208	; 0xacb0
   1814c:	movt	r0, #1
   18150:	bl	179fc <traverse_product@@Base+0x1ac>
   18154:	ldr	r1, [sp, #32]
   18158:	mov	r0, r5
   1815c:	bl	17a34 <traverse_product@@Base+0x1e4>
   18160:	ldr	r1, [sp, #32]
   18164:	movw	r0, #44400	; 0xad70
   18168:	movt	r0, #1
   1816c:	bl	179fc <traverse_product@@Base+0x1ac>
   18170:	mov	r0, r5
   18174:	bl	1226c <free@plt>
   18178:	b	18000 <traverse_product@@Base+0x7b0>
   1817c:	bl	18b60 <handle_coda_error@@Base>
   18180:	b	18118 <traverse_product@@Base+0x8c8>
   18184:	movw	r3, #361	; 0x169
   18188:	str	r3, [sp]
   1818c:	movw	r3, #44288	; 0xad00
   18190:	movt	r3, #1
   18194:	ldr	r2, [sp, #32]
   18198:	add	r2, r2, #1
   1819c:	movw	r1, #42532	; 0xa624
   181a0:	movt	r1, #1
   181a4:	mvn	r0, #0
   181a8:	bl	12224 <coda_set_error@plt>
   181ac:	bl	18b60 <handle_coda_error@@Base>
   181b0:	b	1812c <traverse_product@@Base+0x8dc>
   181b4:	bl	18b60 <handle_coda_error@@Base>
   181b8:	b	18148 <traverse_product@@Base+0x8f8>
   181bc:	add	r1, sp, #32
   181c0:	mov	r0, r4
   181c4:	bl	12584 <coda_cursor_get_bit_size@plt>
   181c8:	cmp	r0, #0
   181cc:	bne	18250 <traverse_product@@Base+0xa00>
   181d0:	ldr	r0, [sp, #32]
   181d4:	ldr	ip, [sp, #36]	; 0x24
   181d8:	ands	r1, r0, #7
   181dc:	movne	r1, #1
   181e0:	lsr	r2, r0, #3
   181e4:	orr	r2, r2, ip, lsl #29
   181e8:	adds	r6, r2, r1
   181ec:	mov	r0, r6
   181f0:	bl	123a4 <malloc@plt>
   181f4:	subs	r5, r0, #0
   181f8:	beq	18258 <traverse_product@@Base+0xa08>
   181fc:	ldrd	r2, [sp, #32]
   18200:	strd	r2, [sp]
   18204:	mov	r2, #0
   18208:	mov	r3, #0
   1820c:	mov	r1, r5
   18210:	mov	r0, r4
   18214:	bl	12614 <coda_cursor_read_bits@plt>
   18218:	cmp	r0, #0
   1821c:	bne	18284 <traverse_product@@Base+0xa34>
   18220:	movw	r0, #44208	; 0xacb0
   18224:	movt	r0, #1
   18228:	bl	179fc <traverse_product@@Base+0x1ac>
   1822c:	mov	r1, r6
   18230:	mov	r0, r5
   18234:	bl	17a34 <traverse_product@@Base+0x1e4>
   18238:	movw	r0, #44400	; 0xad70
   1823c:	movt	r0, #1
   18240:	bl	179fc <traverse_product@@Base+0x1ac>
   18244:	mov	r0, r5
   18248:	bl	1226c <free@plt>
   1824c:	b	18000 <traverse_product@@Base+0x7b0>
   18250:	bl	18b60 <handle_coda_error@@Base>
   18254:	b	181d0 <traverse_product@@Base+0x980>
   18258:	mov	r3, #392	; 0x188
   1825c:	str	r3, [sp]
   18260:	movw	r3, #44288	; 0xad00
   18264:	movt	r3, #1
   18268:	mov	r2, r6
   1826c:	movw	r1, #42532	; 0xa624
   18270:	movt	r1, #1
   18274:	mvn	r0, #0
   18278:	bl	12224 <coda_set_error@plt>
   1827c:	bl	18b60 <handle_coda_error@@Base>
   18280:	b	181fc <traverse_product@@Base+0x9ac>
   18284:	bl	18b60 <handle_coda_error@@Base>
   18288:	b	18220 <traverse_product@@Base+0x9d0>
   1828c:	add	r1, sp, #32
   18290:	mov	r0, r4
   18294:	bl	125b4 <coda_cursor_read_int32@plt>
   18298:	cmp	r0, #0
   1829c:	bne	182b4 <traverse_product@@Base+0xa64>
   182a0:	ldr	r1, [sp, #32]
   182a4:	movw	r0, #42920	; 0xa7a8
   182a8:	movt	r0, #1
   182ac:	bl	179fc <traverse_product@@Base+0x1ac>
   182b0:	b	18000 <traverse_product@@Base+0x7b0>
   182b4:	bl	18b60 <handle_coda_error@@Base>
   182b8:	b	182a0 <traverse_product@@Base+0xa50>
   182bc:	add	r1, sp, #32
   182c0:	mov	r0, r4
   182c4:	bl	12290 <coda_cursor_read_uint32@plt>
   182c8:	cmp	r0, #0
   182cc:	bne	182e4 <traverse_product@@Base+0xa94>
   182d0:	ldr	r1, [sp, #32]
   182d4:	movw	r0, #42928	; 0xa7b0
   182d8:	movt	r0, #1
   182dc:	bl	179fc <traverse_product@@Base+0x1ac>
   182e0:	b	18000 <traverse_product@@Base+0x7b0>
   182e4:	bl	18b60 <handle_coda_error@@Base>
   182e8:	b	182d0 <traverse_product@@Base+0xa80>
   182ec:	add	r1, sp, #24
   182f0:	mov	r0, r4
   182f4:	bl	12524 <coda_cursor_read_int64@plt>
   182f8:	cmp	r0, #0
   182fc:	bne	18320 <traverse_product@@Base+0xad0>
   18300:	add	r2, sp, #32
   18304:	ldrd	r0, [sp, #24]
   18308:	bl	12620 <coda_str64@plt>
   1830c:	add	r1, sp, #32
   18310:	movw	r0, #42936	; 0xa7b8
   18314:	movt	r0, #1
   18318:	bl	179fc <traverse_product@@Base+0x1ac>
   1831c:	b	18000 <traverse_product@@Base+0x7b0>
   18320:	bl	18b60 <handle_coda_error@@Base>
   18324:	b	18300 <traverse_product@@Base+0xab0>
   18328:	add	r1, sp, #24
   1832c:	mov	r0, r4
   18330:	bl	12410 <coda_cursor_read_uint64@plt>
   18334:	cmp	r0, #0
   18338:	bne	1835c <traverse_product@@Base+0xb0c>
   1833c:	add	r2, sp, #32
   18340:	ldrd	r0, [sp, #24]
   18344:	bl	12260 <coda_str64u@plt>
   18348:	add	r1, sp, #32
   1834c:	movw	r0, #42936	; 0xa7b8
   18350:	movt	r0, #1
   18354:	bl	179fc <traverse_product@@Base+0x1ac>
   18358:	b	18000 <traverse_product@@Base+0x7b0>
   1835c:	bl	18b60 <handle_coda_error@@Base>
   18360:	b	1833c <traverse_product@@Base+0xaec>
   18364:	add	r1, sp, #32
   18368:	mov	r0, r4
   1836c:	bl	1241c <coda_cursor_read_double@plt>
   18370:	cmp	r0, #0
   18374:	bne	1839c <traverse_product@@Base+0xb4c>
   18378:	ldr	r3, [sp, #20]
   1837c:	cmp	r3, #8
   18380:	ldrd	r2, [sp, #32]
   18384:	movweq	r0, #42940	; 0xa7bc
   18388:	movteq	r0, #1
   1838c:	movwne	r0, #42948	; 0xa7c4
   18390:	movtne	r0, #1
   18394:	bl	179fc <traverse_product@@Base+0x1ac>
   18398:	b	18000 <traverse_product@@Base+0x7b0>
   1839c:	bl	18b60 <handle_coda_error@@Base>
   183a0:	b	18378 <traverse_product@@Base+0xb28>
   183a4:	movw	r0, #44404	; 0xad74
   183a8:	movt	r0, #1
   183ac:	bl	179fc <traverse_product@@Base+0x1ac>
   183b0:	b	18000 <traverse_product@@Base+0x7b0>
   183b4:	add	r1, sp, #20
   183b8:	mov	r0, r4
   183bc:	bl	12338 <coda_cursor_get_special_type@plt>
   183c0:	cmp	r0, #0
   183c4:	bne	183e8 <traverse_product@@Base+0xb98>
   183c8:	ldr	r3, [sp, #20]
   183cc:	cmp	r3, #3
   183d0:	ldrls	pc, [pc, r3, lsl #2]
   183d4:	b	18000 <traverse_product@@Base+0x7b0>
   183d8:	strdeq	r8, [r1], -r0
   183dc:	andeq	r8, r1, r0, lsl #8
   183e0:	andeq	r8, r1, r0, lsr r4
   183e4:	andeq	r8, r1, r0, asr #9
   183e8:	bl	18b60 <handle_coda_error@@Base>
   183ec:	b	183c8 <traverse_product@@Base+0xb78>
   183f0:	movw	r0, #44404	; 0xad74
   183f4:	movt	r0, #1
   183f8:	bl	179fc <traverse_product@@Base+0x1ac>
   183fc:	b	18000 <traverse_product@@Base+0x7b0>
   18400:	add	r1, sp, #32
   18404:	mov	r0, r4
   18408:	bl	1241c <coda_cursor_read_double@plt>
   1840c:	cmp	r0, #0
   18410:	bne	18428 <traverse_product@@Base+0xbd8>
   18414:	ldrd	r2, [sp, #32]
   18418:	movw	r0, #42948	; 0xa7c4
   1841c:	movt	r0, #1
   18420:	bl	179fc <traverse_product@@Base+0x1ac>
   18424:	b	18000 <traverse_product@@Base+0x7b0>
   18428:	bl	18b60 <handle_coda_error@@Base>
   1842c:	b	18414 <traverse_product@@Base+0xbc4>
   18430:	add	r1, sp, #24
   18434:	mov	r0, r4
   18438:	bl	1241c <coda_cursor_read_double@plt>
   1843c:	cmp	r0, #0
   18440:	bne	18478 <traverse_product@@Base+0xc28>
   18444:	vldr	d0, [sp, #24]
   18448:	bl	12428 <coda_isNaN@plt>
   1844c:	cmp	r0, #0
   18450:	bne	18464 <traverse_product@@Base+0xc14>
   18454:	vldr	d0, [sp, #24]
   18458:	bl	122cc <coda_isInf@plt>
   1845c:	cmp	r0, #0
   18460:	beq	18480 <traverse_product@@Base+0xc30>
   18464:	ldrd	r2, [sp, #24]
   18468:	movw	r0, #42948	; 0xa7c4
   1846c:	movt	r0, #1
   18470:	bl	179fc <traverse_product@@Base+0x1ac>
   18474:	b	18000 <traverse_product@@Base+0x7b0>
   18478:	bl	18b60 <handle_coda_error@@Base>
   1847c:	b	18444 <traverse_product@@Base+0xbf4>
   18480:	add	r1, sp, #32
   18484:	movw	r0, #43956	; 0xabb4
   18488:	movt	r0, #1
   1848c:	vldr	d0, [sp, #24]
   18490:	bl	12248 <coda_time_double_to_string@plt>
   18494:	cmp	r0, #0
   18498:	beq	184ac <traverse_product@@Base+0xc5c>
   1849c:	movw	r0, #43988	; 0xabd4
   184a0:	movt	r0, #1
   184a4:	bl	179fc <traverse_product@@Base+0x1ac>
   184a8:	b	18000 <traverse_product@@Base+0x7b0>
   184ac:	add	r1, sp, #32
   184b0:	movw	r0, #42936	; 0xa7b8
   184b4:	movt	r0, #1
   184b8:	bl	179fc <traverse_product@@Base+0x1ac>
   184bc:	b	18000 <traverse_product@@Base+0x7b0>
   184c0:	add	r2, sp, #32
   184c4:	add	r1, sp, #24
   184c8:	mov	r0, r4
   184cc:	bl	124c4 <coda_cursor_read_complex_double_split@plt>
   184d0:	cmp	r0, #0
   184d4:	bne	184f4 <traverse_product@@Base+0xca4>
   184d8:	ldrd	r2, [sp, #32]
   184dc:	strd	r2, [sp]
   184e0:	ldrd	r2, [sp, #24]
   184e4:	movw	r0, #44412	; 0xad7c
   184e8:	movt	r0, #1
   184ec:	bl	179fc <traverse_product@@Base+0x1ac>
   184f0:	b	18000 <traverse_product@@Base+0x7b0>
   184f4:	bl	18b60 <handle_coda_error@@Base>
   184f8:	b	184d8 <traverse_product@@Base+0xc88>

000184fc <print_yaml_data@@Base>:
   184fc:	str	r4, [sp, #-8]!
   18500:	str	lr, [sp, #4]
   18504:	sub	sp, sp, #528	; 0x210
   18508:	movw	r3, #49612	; 0xc1cc
   1850c:	movt	r3, #2
   18510:	str	r0, [r3, #4]
   18514:	movw	r3, #49648	; 0xc1f0
   18518:	movt	r3, #2
   1851c:	add	r1, sp, #524	; 0x20c
   18520:	ldr	r0, [r3]
   18524:	bl	12230 <coda_open@plt>
   18528:	cmp	r0, #0
   1852c:	bne	18594 <print_yaml_data@@Base+0x98>
   18530:	ldr	r1, [sp, #524]	; 0x20c
   18534:	mov	r0, sp
   18538:	bl	1235c <coda_cursor_set_product@plt>
   1853c:	cmp	r0, #0
   18540:	bne	185e0 <print_yaml_data@@Base+0xe4>
   18544:	movw	r3, #53424	; 0xd0b0
   18548:	movt	r3, #2
   1854c:	ldr	r1, [r3]
   18550:	cmp	r1, #0
   18554:	beq	18568 <print_yaml_data@@Base+0x6c>
   18558:	mov	r0, sp
   1855c:	bl	1253c <coda_cursor_goto@plt>
   18560:	cmp	r0, #0
   18564:	bne	185e8 <print_yaml_data@@Base+0xec>
   18568:	mov	r0, #0
   1856c:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   18570:	mov	r1, #0
   18574:	mov	r0, sp
   18578:	bl	17b50 <traverse_product@@Base+0x300>
   1857c:	ldr	r0, [sp, #524]	; 0x20c
   18580:	bl	12518 <coda_close@plt>
   18584:	add	sp, sp, #528	; 0x210
   18588:	ldr	r4, [sp]
   1858c:	add	sp, sp, #4
   18590:	pop	{pc}		; (ldr pc, [sp], #4)
   18594:	bl	125d8 <coda_get_errno@plt>
   18598:	ldr	r3, [r0]
   1859c:	cmn	r3, #21
   185a0:	beq	185ac <print_yaml_data@@Base+0xb0>
   185a4:	bl	18b60 <handle_coda_error@@Base>
   185a8:	b	18530 <print_yaml_data@@Base+0x34>
   185ac:	mov	r0, #0
   185b0:	bl	12278 <coda_set_option_use_mmap@plt>
   185b4:	movw	r3, #49648	; 0xc1f0
   185b8:	movt	r3, #2
   185bc:	add	r1, sp, #524	; 0x20c
   185c0:	ldr	r0, [r3]
   185c4:	bl	12230 <coda_open@plt>
   185c8:	mov	r4, r0
   185cc:	mov	r0, #1
   185d0:	bl	12278 <coda_set_option_use_mmap@plt>
   185d4:	cmp	r4, #0
   185d8:	bne	185a4 <print_yaml_data@@Base+0xa8>
   185dc:	b	18530 <print_yaml_data@@Base+0x34>
   185e0:	bl	18b60 <handle_coda_error@@Base>
   185e4:	b	18544 <print_yaml_data@@Base+0x48>
   185e8:	bl	18b60 <handle_coda_error@@Base>
   185ec:	b	18568 <print_yaml_data@@Base+0x6c>
   185f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   185f4:	strd	r6, [sp, #8]
   185f8:	strd	r8, [sp, #16]
   185fc:	strd	sl, [sp, #24]
   18600:	str	lr, [sp, #32]
   18604:	sub	sp, sp, #28
   18608:	movw	r0, #44424	; 0xad88
   1860c:	movt	r0, #1
   18610:	bl	1238c <puts@plt>
   18614:	movw	r0, #44432	; 0xad90
   18618:	movt	r0, #1
   1861c:	bl	1238c <puts@plt>
   18620:	movw	r0, #44504	; 0xadd8
   18624:	movt	r0, #1
   18628:	bl	1238c <puts@plt>
   1862c:	movw	r7, #44548	; 0xae04
   18630:	movt	r7, #1
   18634:	mov	r0, r7
   18638:	bl	1238c <puts@plt>
   1863c:	movw	r0, #44572	; 0xae1c
   18640:	movt	r0, #1
   18644:	bl	1238c <puts@plt>
   18648:	movw	r0, #44600	; 0xae38
   1864c:	movt	r0, #1
   18650:	bl	1238c <puts@plt>
   18654:	movw	r6, #44656	; 0xae70
   18658:	movt	r6, #1
   1865c:	mov	r0, r6
   18660:	bl	1238c <puts@plt>
   18664:	movw	r3, #44696	; 0xae98
   18668:	movt	r3, #1
   1866c:	str	r3, [sp, #4]
   18670:	mov	r0, r3
   18674:	bl	1238c <puts@plt>
   18678:	movw	r5, #44756	; 0xaed4
   1867c:	movt	r5, #1
   18680:	mov	r0, r5
   18684:	bl	1238c <puts@plt>
   18688:	movw	r4, #44804	; 0xaf04
   1868c:	movt	r4, #1
   18690:	mov	r0, r4
   18694:	bl	1238c <puts@plt>
   18698:	movw	r0, #44876	; 0xaf4c
   1869c:	movt	r0, #1
   186a0:	bl	1238c <puts@plt>
   186a4:	movw	r0, #44900	; 0xaf64
   186a8:	movt	r0, #1
   186ac:	bl	1238c <puts@plt>
   186b0:	movw	r0, #44944	; 0xaf90
   186b4:	movt	r0, #1
   186b8:	bl	1238c <puts@plt>
   186bc:	movw	r0, #44968	; 0xafa8
   186c0:	movt	r0, #1
   186c4:	bl	1238c <puts@plt>
   186c8:	movw	r0, #45012	; 0xafd4
   186cc:	movt	r0, #1
   186d0:	bl	1238c <puts@plt>
   186d4:	movw	r0, #45040	; 0xaff0
   186d8:	movt	r0, #1
   186dc:	bl	1238c <puts@plt>
   186e0:	movw	r0, #45092	; 0xb024
   186e4:	movt	r0, #1
   186e8:	bl	1238c <puts@plt>
   186ec:	movw	r0, #45120	; 0xb040
   186f0:	movt	r0, #1
   186f4:	bl	1238c <puts@plt>
   186f8:	movw	r0, #45192	; 0xb088
   186fc:	movt	r0, #1
   18700:	bl	1238c <puts@plt>
   18704:	movw	r9, #45236	; 0xb0b4
   18708:	movt	r9, #1
   1870c:	mov	r0, r9
   18710:	bl	1238c <puts@plt>
   18714:	movw	r8, #45268	; 0xb0d4
   18718:	movt	r8, #1
   1871c:	mov	r0, r8
   18720:	bl	1238c <puts@plt>
   18724:	movw	fp, #45348	; 0xb124
   18728:	movt	fp, #1
   1872c:	mov	r0, fp
   18730:	bl	1238c <puts@plt>
   18734:	movw	sl, #45428	; 0xb174
   18738:	movt	sl, #1
   1873c:	mov	r0, sl
   18740:	bl	1238c <puts@plt>
   18744:	mov	r0, #10
   18748:	bl	12494 <putchar@plt>
   1874c:	movw	r0, #45460	; 0xb194
   18750:	movt	r0, #1
   18754:	bl	1238c <puts@plt>
   18758:	movw	r0, #45532	; 0xb1dc
   1875c:	movt	r0, #1
   18760:	bl	1238c <puts@plt>
   18764:	mov	r0, r7
   18768:	bl	1238c <puts@plt>
   1876c:	mov	r0, r6
   18770:	bl	1238c <puts@plt>
   18774:	ldr	r7, [sp, #4]
   18778:	mov	r0, r7
   1877c:	bl	1238c <puts@plt>
   18780:	mov	r0, r5
   18784:	bl	1238c <puts@plt>
   18788:	mov	r0, r4
   1878c:	bl	1238c <puts@plt>
   18790:	movw	r0, #45592	; 0xb218
   18794:	movt	r0, #1
   18798:	bl	1238c <puts@plt>
   1879c:	movw	r0, #45616	; 0xb230
   187a0:	movt	r0, #1
   187a4:	bl	1238c <puts@plt>
   187a8:	movw	r0, #45684	; 0xb274
   187ac:	movt	r0, #1
   187b0:	bl	1238c <puts@plt>
   187b4:	movw	r0, #45708	; 0xb28c
   187b8:	movt	r0, #1
   187bc:	bl	1238c <puts@plt>
   187c0:	movw	r5, #45784	; 0xb2d8
   187c4:	movt	r5, #1
   187c8:	mov	r0, r5
   187cc:	bl	1238c <puts@plt>
   187d0:	movw	r4, #45820	; 0xb2fc
   187d4:	movt	r4, #1
   187d8:	mov	r0, r4
   187dc:	bl	1238c <puts@plt>
   187e0:	movw	r0, #45872	; 0xb330
   187e4:	movt	r0, #1
   187e8:	bl	1238c <puts@plt>
   187ec:	movw	r0, #45904	; 0xb350
   187f0:	movt	r0, #1
   187f4:	bl	1238c <puts@plt>
   187f8:	movw	r0, #45980	; 0xb39c
   187fc:	movt	r0, #1
   18800:	bl	1238c <puts@plt>
   18804:	movw	r0, #46036	; 0xb3d4
   18808:	movt	r0, #1
   1880c:	bl	1238c <puts@plt>
   18810:	movw	r0, #46112	; 0xb420
   18814:	movt	r0, #1
   18818:	bl	1238c <puts@plt>
   1881c:	movw	r0, #46148	; 0xb444
   18820:	movt	r0, #1
   18824:	bl	1238c <puts@plt>
   18828:	mov	r0, r9
   1882c:	bl	1238c <puts@plt>
   18830:	mov	r0, r8
   18834:	bl	1238c <puts@plt>
   18838:	mov	r0, fp
   1883c:	bl	1238c <puts@plt>
   18840:	mov	r0, sl
   18844:	bl	1238c <puts@plt>
   18848:	mov	r0, #10
   1884c:	bl	12494 <putchar@plt>
   18850:	movw	r0, #46228	; 0xb494
   18854:	movt	r0, #1
   18858:	bl	1238c <puts@plt>
   1885c:	movw	r0, #46300	; 0xb4dc
   18860:	movt	r0, #1
   18864:	bl	1238c <puts@plt>
   18868:	movw	r0, #46360	; 0xb518
   1886c:	movt	r0, #1
   18870:	bl	1238c <puts@plt>
   18874:	movw	r3, #46384	; 0xb530
   18878:	movt	r3, #1
   1887c:	str	r3, [sp, #12]
   18880:	mov	r0, r3
   18884:	bl	1238c <puts@plt>
   18888:	movw	r2, #46416	; 0xb550
   1888c:	movt	r2, #1
   18890:	str	r2, [sp, #16]
   18894:	mov	r0, r2
   18898:	bl	1238c <puts@plt>
   1889c:	movw	r0, #46488	; 0xb598
   188a0:	movt	r0, #1
   188a4:	bl	1238c <puts@plt>
   188a8:	mov	r0, r6
   188ac:	bl	1238c <puts@plt>
   188b0:	str	r7, [sp, #4]
   188b4:	mov	r0, r7
   188b8:	bl	1238c <puts@plt>
   188bc:	mov	r0, r5
   188c0:	bl	1238c <puts@plt>
   188c4:	mov	r0, r4
   188c8:	bl	1238c <puts@plt>
   188cc:	movw	r3, #46564	; 0xb5e4
   188d0:	movt	r3, #1
   188d4:	str	r3, [sp, #20]
   188d8:	mov	r0, r3
   188dc:	bl	1238c <puts@plt>
   188e0:	movw	r2, #46596	; 0xb604
   188e4:	movt	r2, #1
   188e8:	str	r2, [sp, #8]
   188ec:	mov	r0, r2
   188f0:	bl	1238c <puts@plt>
   188f4:	movw	r7, #46668	; 0xb64c
   188f8:	movt	r7, #1
   188fc:	mov	r0, r7
   18900:	bl	1238c <puts@plt>
   18904:	mov	r0, r9
   18908:	bl	1238c <puts@plt>
   1890c:	mov	r0, r8
   18910:	bl	1238c <puts@plt>
   18914:	mov	r0, fp
   18918:	bl	1238c <puts@plt>
   1891c:	mov	r0, sl
   18920:	bl	1238c <puts@plt>
   18924:	mov	r0, #10
   18928:	bl	12494 <putchar@plt>
   1892c:	movw	r0, #46748	; 0xb69c
   18930:	movt	r0, #1
   18934:	bl	1238c <puts@plt>
   18938:	movw	r0, #46820	; 0xb6e4
   1893c:	movt	r0, #1
   18940:	bl	1238c <puts@plt>
   18944:	movw	r0, #46880	; 0xb720
   18948:	movt	r0, #1
   1894c:	bl	1238c <puts@plt>
   18950:	ldr	r0, [sp, #12]
   18954:	bl	1238c <puts@plt>
   18958:	ldr	r0, [sp, #16]
   1895c:	bl	1238c <puts@plt>
   18960:	movw	r0, #46904	; 0xb738
   18964:	movt	r0, #1
   18968:	bl	1238c <puts@plt>
   1896c:	movw	r0, #46980	; 0xb784
   18970:	movt	r0, #1
   18974:	bl	1238c <puts@plt>
   18978:	mov	r0, r6
   1897c:	bl	1238c <puts@plt>
   18980:	ldr	r0, [sp, #4]
   18984:	bl	1238c <puts@plt>
   18988:	mov	r0, r5
   1898c:	bl	1238c <puts@plt>
   18990:	mov	r0, r4
   18994:	bl	1238c <puts@plt>
   18998:	ldr	r6, [sp, #20]
   1899c:	mov	r0, r6
   189a0:	bl	1238c <puts@plt>
   189a4:	ldr	r0, [sp, #8]
   189a8:	bl	1238c <puts@plt>
   189ac:	mov	r0, r7
   189b0:	bl	1238c <puts@plt>
   189b4:	mov	r0, r9
   189b8:	bl	1238c <puts@plt>
   189bc:	mov	r0, r8
   189c0:	bl	1238c <puts@plt>
   189c4:	mov	r0, fp
   189c8:	bl	1238c <puts@plt>
   189cc:	mov	r0, sl
   189d0:	bl	1238c <puts@plt>
   189d4:	mov	r0, #10
   189d8:	bl	12494 <putchar@plt>
   189dc:	movw	r0, #47012	; 0xb7a4
   189e0:	movt	r0, #1
   189e4:	bl	1238c <puts@plt>
   189e8:	movw	r0, #47084	; 0xb7ec
   189ec:	movt	r0, #1
   189f0:	bl	1238c <puts@plt>
   189f4:	movw	r0, #47160	; 0xb838
   189f8:	movt	r0, #1
   189fc:	bl	1238c <puts@plt>
   18a00:	movw	r0, #47236	; 0xb884
   18a04:	movt	r0, #1
   18a08:	bl	1238c <puts@plt>
   18a0c:	movw	r0, #47284	; 0xb8b4
   18a10:	movt	r0, #1
   18a14:	bl	1238c <puts@plt>
   18a18:	movw	r0, #47308	; 0xb8cc
   18a1c:	movt	r0, #1
   18a20:	bl	1238c <puts@plt>
   18a24:	movw	r0, #47356	; 0xb8fc
   18a28:	movt	r0, #1
   18a2c:	bl	1238c <puts@plt>
   18a30:	mov	r0, r5
   18a34:	bl	1238c <puts@plt>
   18a38:	mov	r0, r4
   18a3c:	bl	1238c <puts@plt>
   18a40:	mov	r0, r6
   18a44:	bl	1238c <puts@plt>
   18a48:	ldr	r0, [sp, #8]
   18a4c:	bl	1238c <puts@plt>
   18a50:	mov	r0, r7
   18a54:	bl	1238c <puts@plt>
   18a58:	movw	r0, #47412	; 0xb934
   18a5c:	movt	r0, #1
   18a60:	bl	1238c <puts@plt>
   18a64:	movw	r0, #47444	; 0xb954
   18a68:	movt	r0, #1
   18a6c:	bl	1238c <puts@plt>
   18a70:	movw	r0, #47524	; 0xb9a4
   18a74:	movt	r0, #1
   18a78:	bl	1238c <puts@plt>
   18a7c:	movw	r0, #47600	; 0xb9f0
   18a80:	movt	r0, #1
   18a84:	bl	1238c <puts@plt>
   18a88:	movw	r0, #47664	; 0xba30
   18a8c:	movt	r0, #1
   18a90:	bl	1238c <puts@plt>
   18a94:	movw	r0, #47744	; 0xba80
   18a98:	movt	r0, #1
   18a9c:	bl	1238c <puts@plt>
   18aa0:	mov	r0, #10
   18aa4:	bl	12494 <putchar@plt>
   18aa8:	movw	r0, #47800	; 0xbab8
   18aac:	movt	r0, #1
   18ab0:	bl	1238c <puts@plt>
   18ab4:	movw	r0, #47824	; 0xbad0
   18ab8:	movt	r0, #1
   18abc:	bl	1238c <puts@plt>
   18ac0:	mov	r0, #10
   18ac4:	bl	12494 <putchar@plt>
   18ac8:	movw	r0, #47856	; 0xbaf0
   18acc:	movt	r0, #1
   18ad0:	bl	1238c <puts@plt>
   18ad4:	movw	r0, #47884	; 0xbb0c
   18ad8:	movt	r0, #1
   18adc:	bl	1238c <puts@plt>
   18ae0:	mov	r0, #10
   18ae4:	bl	12494 <putchar@plt>
   18ae8:	movw	r0, #47936	; 0xbb40
   18aec:	movt	r0, #1
   18af0:	bl	1238c <puts@plt>
   18af4:	movw	r0, #48016	; 0xbb90
   18af8:	movt	r0, #1
   18afc:	bl	1238c <puts@plt>
   18b00:	movw	r0, #48092	; 0xbbdc
   18b04:	movt	r0, #1
   18b08:	bl	1238c <puts@plt>
   18b0c:	movw	r0, #48136	; 0xbc08
   18b10:	movt	r0, #1
   18b14:	bl	1238c <puts@plt>
   18b18:	movw	r0, #48212	; 0xbc54
   18b1c:	movt	r0, #1
   18b20:	bl	1238c <puts@plt>
   18b24:	movw	r0, #48284	; 0xbc9c
   18b28:	movt	r0, #1
   18b2c:	bl	1238c <puts@plt>
   18b30:	movw	r0, #48348	; 0xbcdc
   18b34:	movt	r0, #1
   18b38:	bl	1238c <puts@plt>
   18b3c:	mov	r0, #10
   18b40:	bl	12494 <putchar@plt>
   18b44:	add	sp, sp, #28
   18b48:	ldrd	r4, [sp]
   18b4c:	ldrd	r6, [sp, #8]
   18b50:	ldrd	r8, [sp, #16]
   18b54:	ldrd	sl, [sp, #24]
   18b58:	add	sp, sp, #32
   18b5c:	pop	{pc}		; (ldr pc, [sp], #4)

00018b60 <handle_coda_error@@Base>:
   18b60:	str	r4, [sp, #-8]!
   18b64:	str	lr, [sp, #4]
   18b68:	movw	r4, #49592	; 0xc1b8
   18b6c:	movt	r4, #2
   18b70:	ldr	r5, [r4]
   18b74:	bl	125d8 <coda_get_errno@plt>
   18b78:	ldr	r0, [r0]
   18b7c:	bl	12590 <coda_errno_to_string@plt>
   18b80:	mov	r2, r0
   18b84:	movw	r1, #48412	; 0xbd1c
   18b88:	movt	r1, #1
   18b8c:	mov	r0, r5
   18b90:	bl	12434 <fprintf@plt>
   18b94:	ldr	r0, [r4]
   18b98:	bl	1223c <fflush@plt>
   18b9c:	mov	r0, #1
   18ba0:	bl	123ec <exit@plt>

00018ba4 <main@@Base>:
   18ba4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18ba8:	strd	r6, [sp, #8]
   18bac:	strd	r8, [sp, #16]
   18bb0:	strd	sl, [sp, #24]
   18bb4:	str	lr, [sp, #32]
   18bb8:	sub	sp, sp, #44	; 0x2c
   18bbc:	cmp	r0, #1
   18bc0:	beq	18c00 <main@@Base+0x5c>
   18bc4:	mov	r4, r0
   18bc8:	mov	r6, r1
   18bcc:	ldr	r5, [r1, #4]
   18bd0:	movw	r1, #48424	; 0xbd28
   18bd4:	movt	r1, #1
   18bd8:	mov	r0, r5
   18bdc:	bl	121dc <strcmp@plt>
   18be0:	cmp	r0, #0
   18be4:	beq	18c00 <main@@Base+0x5c>
   18be8:	movw	r1, #48428	; 0xbd2c
   18bec:	movt	r1, #1
   18bf0:	mov	r0, r5
   18bf4:	bl	121dc <strcmp@plt>
   18bf8:	cmp	r0, #0
   18bfc:	bne	18c0c <main@@Base+0x68>
   18c00:	bl	185f0 <print_yaml_data@@Base+0xf4>
   18c04:	mov	r0, #0
   18c08:	bl	123ec <exit@plt>
   18c0c:	movw	r1, #48436	; 0xbd34
   18c10:	movt	r1, #1
   18c14:	mov	r0, r5
   18c18:	bl	121dc <strcmp@plt>
   18c1c:	cmp	r0, #0
   18c20:	beq	18c3c <main@@Base+0x98>
   18c24:	movw	r1, #48440	; 0xbd38
   18c28:	movt	r1, #1
   18c2c:	mov	r0, r5
   18c30:	bl	121dc <strcmp@plt>
   18c34:	cmp	r0, #0
   18c38:	bne	18c6c <main@@Base+0xc8>
   18c3c:	bl	125cc <coda_get_libcoda_version@plt>
   18c40:	mov	r1, r0
   18c44:	movw	r0, #48452	; 0xbd44
   18c48:	movt	r0, #1
   18c4c:	bl	12200 <printf@plt>
   18c50:	movw	r0, #48476	; 0xbd5c
   18c54:	movt	r0, #1
   18c58:	bl	1238c <puts@plt>
   18c5c:	mov	r0, #10
   18c60:	bl	12494 <putchar@plt>
   18c64:	mov	r0, #0
   18c68:	bl	123ec <exit@plt>
   18c6c:	cmp	r4, #2
   18c70:	ble	18c8c <main@@Base+0xe8>
   18c74:	movw	r1, #48524	; 0xbd8c
   18c78:	movt	r1, #1
   18c7c:	mov	r0, r5
   18c80:	bl	121dc <strcmp@plt>
   18c84:	cmp	r0, #0
   18c88:	beq	18dc4 <main@@Base+0x220>
   18c8c:	movw	r2, #48528	; 0xbd90
   18c90:	movt	r2, #1
   18c94:	mov	r1, #0
   18c98:	ldr	r0, [r6]
   18c9c:	bl	12284 <coda_set_definition_path_conditional@plt>
   18ca0:	cmp	r0, #0
   18ca4:	moveq	sl, #1
   18ca8:	bne	18dd4 <main@@Base+0x230>
   18cac:	lsl	r8, sl, #2
   18cb0:	ldr	fp, [r6, sl, lsl #2]
   18cb4:	movw	r1, #48556	; 0xbdac
   18cb8:	movt	r1, #1
   18cbc:	mov	r0, fp
   18cc0:	bl	121dc <strcmp@plt>
   18cc4:	subs	r5, r0, #0
   18cc8:	beq	18e08 <main@@Base+0x264>
   18ccc:	movw	r1, #48668	; 0xbe1c
   18cd0:	movt	r1, #1
   18cd4:	mov	r0, fp
   18cd8:	bl	121dc <strcmp@plt>
   18cdc:	subs	r7, r0, #0
   18ce0:	beq	19210 <main@@Base+0x66c>
   18ce4:	movw	r1, #48780	; 0xbe8c
   18ce8:	movt	r1, #1
   18cec:	mov	r0, fp
   18cf0:	bl	121dc <strcmp@plt>
   18cf4:	subs	r9, r0, #0
   18cf8:	beq	19764 <main@@Base+0xbc0>
   18cfc:	movw	r1, #48804	; 0xbea4
   18d00:	movt	r1, #1
   18d04:	mov	r0, fp
   18d08:	bl	121dc <strcmp@plt>
   18d0c:	subs	r7, r0, #0
   18d10:	beq	19b1c <main@@Base+0xf78>
   18d14:	movw	r1, #47152	; 0xb830
   18d18:	movt	r1, #1
   18d1c:	mov	r0, fp
   18d20:	bl	121dc <strcmp@plt>
   18d24:	cmp	r0, #0
   18d28:	str	r0, [sp, #20]
   18d2c:	bne	1a164 <main@@Base+0x15c0>
   18d30:	movw	r3, #53420	; 0xd0ac
   18d34:	movt	r3, #2
   18d38:	mov	r2, #5
   18d3c:	str	r2, [r3]
   18d40:	add	sl, sl, #1
   18d44:	sub	r4, r4, sl
   18d48:	add	r5, r8, #4
   18d4c:	add	r5, r6, r5
   18d50:	movw	r2, #49648	; 0xc1f0
   18d54:	movt	r2, #2
   18d58:	mov	r3, #0
   18d5c:	str	r3, [r2]
   18d60:	movw	r2, #49632	; 0xc1e0
   18d64:	movt	r2, #2
   18d68:	str	r3, [r2]
   18d6c:	movw	r2, #53424	; 0xd0b0
   18d70:	movt	r2, #2
   18d74:	str	r3, [r2]
   18d78:	movw	r2, #53400	; 0xd098
   18d7c:	movt	r2, #2
   18d80:	movw	r1, #49596	; 0xc1bc
   18d84:	movt	r1, #2
   18d88:	ldr	r1, [r1]
   18d8c:	str	r1, [r2]
   18d90:	mov	r6, r0
   18d94:	mov	r2, #1
   18d98:	str	r2, [sp, #4]
   18d9c:	str	r3, [sp, #16]
   18da0:	str	r3, [sp, #12]
   18da4:	movw	sl, #48568	; 0xbdb8
   18da8:	movt	sl, #1
   18dac:	movw	fp, #47324	; 0xb8dc
   18db0:	movt	fp, #1
   18db4:	movw	r3, #48688	; 0xbe30
   18db8:	movt	r3, #1
   18dbc:	str	r3, [sp, #8]
   18dc0:	b	19f8c <main@@Base+0x13e8>
   18dc4:	ldr	r0, [r6, #8]
   18dc8:	bl	12308 <coda_set_definition_path@plt>
   18dcc:	mov	sl, #3
   18dd0:	b	18cac <main@@Base+0x108>
   18dd4:	movw	r3, #49592	; 0xc1b8
   18dd8:	movt	r3, #2
   18ddc:	ldr	r4, [r3]
   18de0:	bl	125d8 <coda_get_errno@plt>
   18de4:	ldr	r0, [r0]
   18de8:	bl	12590 <coda_errno_to_string@plt>
   18dec:	mov	r2, r0
   18df0:	movw	r1, #48412	; 0xbd1c
   18df4:	movt	r1, #1
   18df8:	mov	r0, r4
   18dfc:	bl	12434 <fprintf@plt>
   18e00:	mov	r0, #1
   18e04:	bl	123ec <exit@plt>
   18e08:	movw	r2, #53420	; 0xd0ac
   18e0c:	movt	r2, #2
   18e10:	mov	r3, #0
   18e14:	str	r3, [r2]
   18e18:	add	sl, sl, #1
   18e1c:	sub	r4, r4, sl
   18e20:	add	r8, r8, #4
   18e24:	add	r6, r6, r8
   18e28:	movw	r2, #49648	; 0xc1f0
   18e2c:	movt	r2, #2
   18e30:	str	r3, [r2]
   18e34:	str	r3, [r2, #664]	; 0x298
   18e38:	movw	r2, #49624	; 0xc1d8
   18e3c:	movt	r2, #2
   18e40:	mov	r1, #1
   18e44:	str	r1, [r2]
   18e48:	movw	r2, #49644	; 0xc1ec
   18e4c:	movt	r2, #2
   18e50:	str	r3, [r2]
   18e54:	movw	r2, #49628	; 0xc1dc
   18e58:	movt	r2, #2
   18e5c:	str	r3, [r2]
   18e60:	movw	r2, #53408	; 0xd0a0
   18e64:	movt	r2, #2
   18e68:	str	r3, [r2]
   18e6c:	movw	r2, #49640	; 0xc1e8
   18e70:	movt	r2, #2
   18e74:	str	r3, [r2]
   18e78:	movw	r2, #53412	; 0xd0a4
   18e7c:	movt	r2, #2
   18e80:	str	r3, [r2]
   18e84:	cmp	r4, r3
   18e88:	ble	191b0 <main@@Base+0x60c>
   18e8c:	str	r1, [sp, #8]
   18e90:	str	r1, [sp, #12]
   18e94:	movw	r8, #48564	; 0xbdb4
   18e98:	movt	r8, #1
   18e9c:	movw	sl, #49644	; 0xc1ec
   18ea0:	movt	sl, #2
   18ea4:	movw	fp, #44588	; 0xae2c
   18ea8:	movt	fp, #1
   18eac:	str	fp, [sp, #4]
   18eb0:	b	18ec8 <main@@Base+0x324>
   18eb4:	mov	r3, #1
   18eb8:	str	r3, [sl]
   18ebc:	add	r5, r5, #1
   18ec0:	cmp	r4, r5
   18ec4:	ble	1912c <main@@Base+0x588>
   18ec8:	lsl	r9, r5, #2
   18ecc:	ldr	r7, [r6, r5, lsl #2]
   18ed0:	mov	r1, r8
   18ed4:	mov	r0, r7
   18ed8:	bl	121dc <strcmp@plt>
   18edc:	cmp	r0, #0
   18ee0:	beq	18eb4 <main@@Base+0x310>
   18ee4:	ldr	r1, [sp, #4]
   18ee8:	mov	r0, r7
   18eec:	bl	121dc <strcmp@plt>
   18ef0:	cmp	r0, #0
   18ef4:	beq	18eb4 <main@@Base+0x310>
   18ef8:	movw	r1, #48568	; 0xbdb8
   18efc:	movt	r1, #1
   18f00:	mov	r0, r7
   18f04:	bl	121dc <strcmp@plt>
   18f08:	cmp	r0, #0
   18f0c:	beq	19114 <main@@Base+0x570>
   18f10:	movw	r1, #44672	; 0xae80
   18f14:	movt	r1, #1
   18f18:	mov	r0, r7
   18f1c:	bl	121dc <strcmp@plt>
   18f20:	cmp	r0, #0
   18f24:	beq	1911c <main@@Base+0x578>
   18f28:	movw	r1, #48572	; 0xbdbc
   18f2c:	movt	r1, #1
   18f30:	mov	r0, r7
   18f34:	bl	121dc <strcmp@plt>
   18f38:	cmp	r0, #0
   18f3c:	beq	18f58 <main@@Base+0x3b4>
   18f40:	movw	r1, #48576	; 0xbdc0
   18f44:	movt	r1, #1
   18f48:	mov	r0, r7
   18f4c:	bl	121dc <strcmp@plt>
   18f50:	cmp	r0, #0
   18f54:	bne	18f78 <main@@Base+0x3d4>
   18f58:	add	fp, r5, #1
   18f5c:	cmp	r4, fp
   18f60:	ble	18f78 <main@@Base+0x3d4>
   18f64:	add	r9, r6, r9
   18f68:	ldr	r0, [r9, #4]
   18f6c:	ldrb	r3, [r0]
   18f70:	cmp	r3, #45	; 0x2d
   18f74:	bne	18fbc <main@@Base+0x418>
   18f78:	movw	r1, #48632	; 0xbdf8
   18f7c:	movt	r1, #1
   18f80:	mov	r0, r7
   18f84:	bl	121dc <strcmp@plt>
   18f88:	cmp	r0, #0
   18f8c:	beq	18fa8 <main@@Base+0x404>
   18f90:	movw	r1, #44892	; 0xaf5c
   18f94:	movt	r1, #1
   18f98:	mov	r0, r7
   18f9c:	bl	121dc <strcmp@plt>
   18fa0:	cmp	r0, #0
   18fa4:	bne	19008 <main@@Base+0x464>
   18fa8:	movw	r3, #53408	; 0xd0a0
   18fac:	movt	r3, #2
   18fb0:	mov	r2, #1
   18fb4:	str	r2, [r3]
   18fb8:	b	18ebc <main@@Base+0x318>
   18fbc:	bl	15eec <codadump_filter_create@@Base>
   18fc0:	movw	r3, #49648	; 0xc1f0
   18fc4:	movt	r3, #2
   18fc8:	str	r0, [r3, #664]	; 0x298
   18fcc:	cmp	r0, #0
   18fd0:	beq	18fdc <main@@Base+0x438>
   18fd4:	mov	r5, fp
   18fd8:	b	18ebc <main@@Base+0x318>
   18fdc:	movw	r3, #49592	; 0xc1b8
   18fe0:	movt	r3, #2
   18fe4:	ldr	r3, [r3]
   18fe8:	mov	r2, #40	; 0x28
   18fec:	mov	r1, #1
   18ff0:	movw	r0, #48588	; 0xbdcc
   18ff4:	movt	r0, #1
   18ff8:	bl	12350 <fwrite@plt>
   18ffc:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19000:	mov	r0, #1
   19004:	bl	123ec <exit@plt>
   19008:	movw	r1, #48636	; 0xbdfc
   1900c:	movt	r1, #1
   19010:	mov	r0, r7
   19014:	bl	121dc <strcmp@plt>
   19018:	cmp	r0, #0
   1901c:	beq	19038 <main@@Base+0x494>
   19020:	movw	r1, #44960	; 0xafa0
   19024:	movt	r1, #1
   19028:	mov	r0, r7
   1902c:	bl	121dc <strcmp@plt>
   19030:	cmp	r0, #0
   19034:	bne	1904c <main@@Base+0x4a8>
   19038:	movw	r3, #49640	; 0xc1e8
   1903c:	movt	r3, #2
   19040:	mov	r2, #1
   19044:	str	r2, [r3]
   19048:	b	18ebc <main@@Base+0x318>
   1904c:	movw	r1, #45024	; 0xafe0
   19050:	movt	r1, #1
   19054:	mov	r0, r7
   19058:	bl	121dc <strcmp@plt>
   1905c:	cmp	r0, #0
   19060:	bne	19078 <main@@Base+0x4d4>
   19064:	movw	r3, #53412	; 0xd0a4
   19068:	movt	r3, #2
   1906c:	mov	r2, #1
   19070:	str	r2, [r3]
   19074:	b	18ebc <main@@Base+0x318>
   19078:	movw	r1, #45104	; 0xb030
   1907c:	movt	r1, #1
   19080:	mov	r0, r7
   19084:	bl	121dc <strcmp@plt>
   19088:	cmp	r0, #0
   1908c:	bne	190a8 <main@@Base+0x504>
   19090:	mov	r2, #1
   19094:	str	r2, [sl]
   19098:	movw	r3, #49628	; 0xc1dc
   1909c:	movt	r3, #2
   190a0:	str	r2, [r3]
   190a4:	b	18ebc <main@@Base+0x318>
   190a8:	movw	r1, #45248	; 0xb0c0
   190ac:	movt	r1, #1
   190b0:	mov	r0, r7
   190b4:	bl	121dc <strcmp@plt>
   190b8:	cmp	r0, #0
   190bc:	beq	19124 <main@@Base+0x580>
   190c0:	sub	r3, r4, #1
   190c4:	cmp	r5, r3
   190c8:	bne	190e8 <main@@Base+0x544>
   190cc:	ldrb	r3, [r7]
   190d0:	cmp	r3, #45	; 0x2d
   190d4:	beq	190e8 <main@@Base+0x544>
   190d8:	movw	r3, #49648	; 0xc1f0
   190dc:	movt	r3, #2
   190e0:	str	r7, [r3]
   190e4:	b	18ebc <main@@Base+0x318>
   190e8:	movw	r3, #49592	; 0xc1b8
   190ec:	movt	r3, #2
   190f0:	ldr	r3, [r3]
   190f4:	mov	r2, #25
   190f8:	mov	r1, #1
   190fc:	movw	r0, #48640	; 0xbe00
   19100:	movt	r0, #1
   19104:	bl	12350 <fwrite@plt>
   19108:	bl	185f0 <print_yaml_data@@Base+0xf4>
   1910c:	mov	r0, #1
   19110:	bl	123ec <exit@plt>
   19114:	str	r0, [sp, #8]
   19118:	b	18ebc <main@@Base+0x318>
   1911c:	str	r0, [sp, #8]
   19120:	b	18ebc <main@@Base+0x318>
   19124:	str	r0, [sp, #12]
   19128:	b	18ebc <main@@Base+0x318>
   1912c:	movw	r3, #49648	; 0xc1f0
   19130:	movt	r3, #2
   19134:	ldr	r3, [r3]
   19138:	cmp	r3, #0
   1913c:	beq	191b0 <main@@Base+0x60c>
   19140:	ldrb	r3, [r3]
   19144:	cmp	r3, #0
   19148:	beq	191b0 <main@@Base+0x60c>
   1914c:	bl	12458 <coda_init@plt>
   19150:	cmp	r0, #0
   19154:	bne	191dc <main@@Base+0x638>
   19158:	ldr	r3, [sp, #12]
   1915c:	clz	r0, r3
   19160:	lsr	r0, r0, #5
   19164:	bl	1229c <coda_set_option_bypass_special_types@plt>
   19168:	mov	r0, #0
   1916c:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   19170:	ldr	r0, [sp, #8]
   19174:	bl	12464 <coda_set_option_perform_conversions@plt>
   19178:	bl	177e4 <traverse_info_init@@Base>
   1917c:	bl	14c64 <dim_info_init@@Base>
   19180:	bl	17850 <traverse_product@@Base>
   19184:	bl	14c84 <dim_info_done@@Base>
   19188:	bl	17804 <traverse_info_done@@Base>
   1918c:	bl	12380 <coda_done@plt>
   19190:	mov	r0, #0
   19194:	add	sp, sp, #44	; 0x2c
   19198:	ldrd	r4, [sp]
   1919c:	ldrd	r6, [sp, #8]
   191a0:	ldrd	r8, [sp, #16]
   191a4:	ldrd	sl, [sp, #24]
   191a8:	add	sp, sp, #32
   191ac:	pop	{pc}		; (ldr pc, [sp], #4)
   191b0:	movw	r3, #49592	; 0xc1b8
   191b4:	movt	r3, #2
   191b8:	ldr	r3, [r3]
   191bc:	mov	r2, #25
   191c0:	mov	r1, #1
   191c4:	movw	r0, #48640	; 0xbe00
   191c8:	movt	r0, #1
   191cc:	bl	12350 <fwrite@plt>
   191d0:	bl	185f0 <print_yaml_data@@Base+0xf4>
   191d4:	mov	r0, #1
   191d8:	bl	123ec <exit@plt>
   191dc:	movw	r3, #49592	; 0xc1b8
   191e0:	movt	r3, #2
   191e4:	ldr	r4, [r3]
   191e8:	bl	125d8 <coda_get_errno@plt>
   191ec:	ldr	r0, [r0]
   191f0:	bl	12590 <coda_errno_to_string@plt>
   191f4:	mov	r2, r0
   191f8:	movw	r1, #48412	; 0xbd1c
   191fc:	movt	r1, #1
   19200:	mov	r0, r4
   19204:	bl	12434 <fprintf@plt>
   19208:	mov	r0, #1
   1920c:	bl	123ec <exit@plt>
   19210:	movw	r3, #53420	; 0xd0ac
   19214:	movt	r3, #2
   19218:	mov	r2, #1
   1921c:	str	r2, [r3]
   19220:	add	sl, sl, r2
   19224:	sub	r4, r4, sl
   19228:	add	r5, r8, #4
   1922c:	add	r5, r6, r5
   19230:	movw	r1, #49648	; 0xc1f0
   19234:	movt	r1, #2
   19238:	mov	r3, #0
   1923c:	str	r3, [r1]
   19240:	str	r3, [r1, #664]	; 0x298
   19244:	movw	r1, #49632	; 0xc1e0
   19248:	movt	r1, #2
   1924c:	str	r3, [r1]
   19250:	movw	r1, #53404	; 0xd09c
   19254:	movt	r1, #2
   19258:	movw	r0, #48676	; 0xbe24
   1925c:	movt	r0, #1
   19260:	str	r0, [r1]
   19264:	movw	r1, #53400	; 0xd098
   19268:	movt	r1, #2
   1926c:	movw	r0, #49596	; 0xc1bc
   19270:	movt	r0, #2
   19274:	ldr	r0, [r0]
   19278:	str	r0, [r1]
   1927c:	movw	r1, #49624	; 0xc1d8
   19280:	movt	r1, #2
   19284:	str	r2, [r1]
   19288:	movw	r1, #49644	; 0xc1ec
   1928c:	movt	r1, #2
   19290:	str	r2, [r1]
   19294:	movw	r1, #53416	; 0xd0a8
   19298:	movt	r1, #2
   1929c:	str	r3, [r1]
   192a0:	movw	r1, #53800	; 0xd228
   192a4:	movt	r1, #2
   192a8:	str	r3, [r1]
   192ac:	movw	r1, #53804	; 0xd22c
   192b0:	movt	r1, #2
   192b4:	str	r3, [r1]
   192b8:	movw	r1, #49636	; 0xc1e4
   192bc:	movt	r1, #2
   192c0:	str	r3, [r1]
   192c4:	str	r2, [sp, #4]
   192c8:	str	r2, [sp, #12]
   192cc:	movw	r9, #48568	; 0xbdb8
   192d0:	movt	r9, #1
   192d4:	movw	sl, #44672	; 0xae80
   192d8:	movt	sl, #1
   192dc:	movw	r3, #48572	; 0xbdbc
   192e0:	movt	r3, #1
   192e4:	str	r3, [sp, #8]
   192e8:	b	19540 <main@@Base+0x99c>
   192ec:	bl	15eec <codadump_filter_create@@Base>
   192f0:	movw	r3, #49648	; 0xc1f0
   192f4:	movt	r3, #2
   192f8:	str	r0, [r3, #664]	; 0x298
   192fc:	cmp	r0, #0
   19300:	beq	1930c <main@@Base+0x768>
   19304:	mov	r7, fp
   19308:	b	1953c <main@@Base+0x998>
   1930c:	movw	r3, #49592	; 0xc1b8
   19310:	movt	r3, #2
   19314:	ldr	r3, [r3]
   19318:	mov	r2, #40	; 0x28
   1931c:	mov	r1, #1
   19320:	movw	r0, #48588	; 0xbdcc
   19324:	movt	r0, #1
   19328:	bl	12350 <fwrite@plt>
   1932c:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19330:	mov	r0, #1
   19334:	bl	123ec <exit@plt>
   19338:	movw	r1, #48684	; 0xbe2c
   1933c:	movt	r1, #1
   19340:	mov	r0, r6
   19344:	bl	121dc <strcmp@plt>
   19348:	cmp	r0, #0
   1934c:	beq	19368 <main@@Base+0x7c4>
   19350:	movw	r1, #45700	; 0xb284
   19354:	movt	r1, #1
   19358:	mov	r0, r6
   1935c:	bl	121dc <strcmp@plt>
   19360:	cmp	r0, #0
   19364:	bne	1937c <main@@Base+0x7d8>
   19368:	movw	r3, #53800	; 0xd228
   1936c:	movt	r3, #2
   19370:	mov	r2, #1
   19374:	str	r2, [r3]
   19378:	b	1953c <main@@Base+0x998>
   1937c:	movw	r1, #48688	; 0xbe30
   19380:	movt	r1, #1
   19384:	mov	r0, r6
   19388:	bl	121dc <strcmp@plt>
   1938c:	cmp	r0, #0
   19390:	beq	193ac <main@@Base+0x808>
   19394:	movw	r1, #48692	; 0xbe34
   19398:	movt	r1, #1
   1939c:	mov	r0, r6
   193a0:	bl	121dc <strcmp@plt>
   193a4:	cmp	r0, #0
   193a8:	bne	193e0 <main@@Base+0x83c>
   193ac:	add	r3, r7, #1
   193b0:	cmp	r4, r3
   193b4:	ble	193e0 <main@@Base+0x83c>
   193b8:	add	r2, r5, r8
   193bc:	ldr	r2, [r2, #4]
   193c0:	ldrb	r1, [r2]
   193c4:	cmp	r1, #45	; 0x2d
   193c8:	beq	193e0 <main@@Base+0x83c>
   193cc:	movw	r1, #49632	; 0xc1e0
   193d0:	movt	r1, #2
   193d4:	str	r2, [r1]
   193d8:	mov	r7, r3
   193dc:	b	1953c <main@@Base+0x998>
   193e0:	movw	r1, #48704	; 0xbe40
   193e4:	movt	r1, #1
   193e8:	mov	r0, r6
   193ec:	bl	121dc <strcmp@plt>
   193f0:	cmp	r0, #0
   193f4:	beq	19410 <main@@Base+0x86c>
   193f8:	movw	r1, #45888	; 0xb340
   193fc:	movt	r1, #1
   19400:	mov	r0, r6
   19404:	bl	121dc <strcmp@plt>
   19408:	cmp	r0, #0
   1940c:	bne	19424 <main@@Base+0x880>
   19410:	movw	r3, #53804	; 0xd22c
   19414:	movt	r3, #2
   19418:	mov	r2, #1
   1941c:	str	r2, [r3]
   19420:	b	1953c <main@@Base+0x998>
   19424:	movw	r1, #48708	; 0xbe44
   19428:	movt	r1, #1
   1942c:	mov	r0, r6
   19430:	bl	121dc <strcmp@plt>
   19434:	cmp	r0, #0
   19438:	beq	19454 <main@@Base+0x8b0>
   1943c:	movw	r1, #48712	; 0xbe48
   19440:	movt	r1, #1
   19444:	mov	r0, r6
   19448:	bl	121dc <strcmp@plt>
   1944c:	cmp	r0, #0
   19450:	bne	19488 <main@@Base+0x8e4>
   19454:	add	r2, r7, #1
   19458:	cmp	r4, r2
   1945c:	ble	19488 <main@@Base+0x8e4>
   19460:	add	r8, r5, r8
   19464:	ldr	r1, [r8, #4]
   19468:	ldrb	r3, [r1]
   1946c:	cmp	r3, #45	; 0x2d
   19470:	beq	19488 <main@@Base+0x8e4>
   19474:	movw	r3, #53404	; 0xd09c
   19478:	movt	r3, #2
   1947c:	str	r1, [r3]
   19480:	mov	r7, r2
   19484:	b	1953c <main@@Base+0x998>
   19488:	movw	r1, #48632	; 0xbdf8
   1948c:	movt	r1, #1
   19490:	mov	r0, r6
   19494:	bl	121dc <strcmp@plt>
   19498:	cmp	r0, #0
   1949c:	beq	194b8 <main@@Base+0x914>
   194a0:	movw	r1, #46128	; 0xb430
   194a4:	movt	r1, #1
   194a8:	mov	r0, r6
   194ac:	bl	121dc <strcmp@plt>
   194b0:	cmp	r0, #0
   194b4:	bne	194cc <main@@Base+0x928>
   194b8:	movw	r3, #49636	; 0xc1e4
   194bc:	movt	r3, #2
   194c0:	mov	r2, #1
   194c4:	str	r2, [r3]
   194c8:	b	1953c <main@@Base+0x998>
   194cc:	movw	r1, #45248	; 0xb0c0
   194d0:	movt	r1, #1
   194d4:	mov	r0, r6
   194d8:	bl	121dc <strcmp@plt>
   194dc:	cmp	r0, #0
   194e0:	beq	19610 <main@@Base+0xa6c>
   194e4:	sub	r3, r4, #1
   194e8:	cmp	r7, r3
   194ec:	bne	1950c <main@@Base+0x968>
   194f0:	ldrb	r3, [r6]
   194f4:	cmp	r3, #45	; 0x2d
   194f8:	beq	1950c <main@@Base+0x968>
   194fc:	movw	r3, #49648	; 0xc1f0
   19500:	movt	r3, #2
   19504:	str	r6, [r3]
   19508:	b	1953c <main@@Base+0x998>
   1950c:	movw	r3, #49592	; 0xc1b8
   19510:	movt	r3, #2
   19514:	ldr	r3, [r3]
   19518:	mov	r2, #25
   1951c:	mov	r1, #1
   19520:	movw	r0, #48640	; 0xbe00
   19524:	movt	r0, #1
   19528:	bl	12350 <fwrite@plt>
   1952c:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19530:	mov	r0, #1
   19534:	bl	123ec <exit@plt>
   19538:	str	r0, [sp, #4]
   1953c:	add	r7, r7, #1
   19540:	cmp	r4, r7
   19544:	ble	19618 <main@@Base+0xa74>
   19548:	lsl	r8, r7, #2
   1954c:	ldr	r6, [r5, r7, lsl #2]
   19550:	mov	r1, r9
   19554:	mov	r0, r6
   19558:	bl	121dc <strcmp@plt>
   1955c:	cmp	r0, #0
   19560:	beq	19538 <main@@Base+0x994>
   19564:	mov	r1, sl
   19568:	mov	r0, r6
   1956c:	bl	121dc <strcmp@plt>
   19570:	cmp	r0, #0
   19574:	beq	19608 <main@@Base+0xa64>
   19578:	ldr	r1, [sp, #8]
   1957c:	mov	r0, r6
   19580:	bl	121dc <strcmp@plt>
   19584:	cmp	r0, #0
   19588:	beq	195a4 <main@@Base+0xa00>
   1958c:	movw	r1, #48576	; 0xbdc0
   19590:	movt	r1, #1
   19594:	mov	r0, r6
   19598:	bl	121dc <strcmp@plt>
   1959c:	cmp	r0, #0
   195a0:	bne	195c4 <main@@Base+0xa20>
   195a4:	add	fp, r7, #1
   195a8:	cmp	r4, fp
   195ac:	ble	195c4 <main@@Base+0xa20>
   195b0:	add	r3, r5, r8
   195b4:	ldr	r0, [r3, #4]
   195b8:	ldrb	r3, [r0]
   195bc:	cmp	r3, #45	; 0x2d
   195c0:	bne	192ec <main@@Base+0x748>
   195c4:	movw	r1, #48680	; 0xbe28
   195c8:	movt	r1, #1
   195cc:	mov	r0, r6
   195d0:	bl	121dc <strcmp@plt>
   195d4:	cmp	r0, #0
   195d8:	beq	195f4 <main@@Base+0xa50>
   195dc:	movw	r1, #45608	; 0xb228
   195e0:	movt	r1, #1
   195e4:	mov	r0, r6
   195e8:	bl	121dc <strcmp@plt>
   195ec:	cmp	r0, #0
   195f0:	bne	19338 <main@@Base+0x794>
   195f4:	movw	r3, #53416	; 0xd0a8
   195f8:	movt	r3, #2
   195fc:	mov	r2, #1
   19600:	str	r2, [r3]
   19604:	b	1953c <main@@Base+0x998>
   19608:	str	r0, [sp, #4]
   1960c:	b	1953c <main@@Base+0x998>
   19610:	str	r0, [sp, #12]
   19614:	b	1953c <main@@Base+0x998>
   19618:	movw	r3, #49648	; 0xc1f0
   1961c:	movt	r3, #2
   19620:	ldr	r3, [r3]
   19624:	cmp	r3, #0
   19628:	beq	196d8 <main@@Base+0xb34>
   1962c:	ldrb	r3, [r3]
   19630:	cmp	r3, #0
   19634:	beq	196d8 <main@@Base+0xb34>
   19638:	bl	12458 <coda_init@plt>
   1963c:	cmp	r0, #0
   19640:	bne	19704 <main@@Base+0xb60>
   19644:	ldr	r3, [sp, #12]
   19648:	clz	r0, r3
   1964c:	lsr	r0, r0, #5
   19650:	bl	1229c <coda_set_option_bypass_special_types@plt>
   19654:	mov	r0, #0
   19658:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   1965c:	ldr	r0, [sp, #4]
   19660:	bl	12464 <coda_set_option_perform_conversions@plt>
   19664:	bl	177e4 <traverse_info_init@@Base>
   19668:	bl	14c64 <dim_info_init@@Base>
   1966c:	movw	r3, #49632	; 0xc1e0
   19670:	movt	r3, #2
   19674:	ldr	r0, [r3]
   19678:	cmp	r0, #0
   1967c:	beq	196a0 <main@@Base+0xafc>
   19680:	movw	r1, #48732	; 0xbe5c
   19684:	movt	r1, #1
   19688:	bl	12218 <fopen@plt>
   1968c:	movw	r3, #53400	; 0xd098
   19690:	movt	r3, #2
   19694:	str	r0, [r3]
   19698:	cmp	r0, #0
   1969c:	beq	19738 <main@@Base+0xb94>
   196a0:	bl	17850 <traverse_product@@Base>
   196a4:	movw	r3, #49632	; 0xc1e0
   196a8:	movt	r3, #2
   196ac:	ldr	r3, [r3]
   196b0:	cmp	r3, #0
   196b4:	beq	196c8 <main@@Base+0xb24>
   196b8:	movw	r3, #53400	; 0xd098
   196bc:	movt	r3, #2
   196c0:	ldr	r0, [r3]
   196c4:	bl	124dc <fclose@plt>
   196c8:	bl	14c84 <dim_info_done@@Base>
   196cc:	bl	17804 <traverse_info_done@@Base>
   196d0:	bl	12380 <coda_done@plt>
   196d4:	b	19190 <main@@Base+0x5ec>
   196d8:	movw	r3, #49592	; 0xc1b8
   196dc:	movt	r3, #2
   196e0:	ldr	r3, [r3]
   196e4:	mov	r2, #25
   196e8:	mov	r1, #1
   196ec:	movw	r0, #48640	; 0xbe00
   196f0:	movt	r0, #1
   196f4:	bl	12350 <fwrite@plt>
   196f8:	bl	185f0 <print_yaml_data@@Base+0xf4>
   196fc:	mov	r0, #1
   19700:	bl	123ec <exit@plt>
   19704:	movw	r3, #49592	; 0xc1b8
   19708:	movt	r3, #2
   1970c:	ldr	r4, [r3]
   19710:	bl	125d8 <coda_get_errno@plt>
   19714:	ldr	r0, [r0]
   19718:	bl	12590 <coda_errno_to_string@plt>
   1971c:	mov	r2, r0
   19720:	movw	r1, #48412	; 0xbd1c
   19724:	movt	r1, #1
   19728:	mov	r0, r4
   1972c:	bl	12434 <fprintf@plt>
   19730:	mov	r0, #1
   19734:	bl	123ec <exit@plt>
   19738:	movw	r2, #49632	; 0xc1e0
   1973c:	movt	r2, #2
   19740:	movw	r3, #49592	; 0xc1b8
   19744:	movt	r3, #2
   19748:	ldr	r2, [r2]
   1974c:	movw	r1, #48736	; 0xbe60
   19750:	movt	r1, #1
   19754:	ldr	r0, [r3]
   19758:	bl	12434 <fprintf@plt>
   1975c:	mov	r0, #1
   19760:	bl	123ec <exit@plt>
   19764:	movw	r3, #53420	; 0xd0ac
   19768:	movt	r3, #2
   1976c:	mov	r2, #3
   19770:	str	r2, [r3]
   19774:	add	sl, sl, #1
   19778:	sub	r4, r4, sl
   1977c:	add	r7, r8, #4
   19780:	add	r7, r6, r7
   19784:	movw	r3, #49648	; 0xc1f0
   19788:	movt	r3, #2
   1978c:	mov	r2, #0
   19790:	str	r2, [r3]
   19794:	movw	r3, #49632	; 0xc1e0
   19798:	movt	r3, #2
   1979c:	str	r2, [r3]
   197a0:	movw	r3, #53424	; 0xd0b0
   197a4:	movt	r3, #2
   197a8:	str	r2, [r3]
   197ac:	movw	r3, #53400	; 0xd098
   197b0:	movt	r3, #2
   197b4:	movw	r2, #49596	; 0xc1bc
   197b8:	movt	r2, #2
   197bc:	ldr	r2, [r2]
   197c0:	str	r2, [r3]
   197c4:	mov	r5, r9
   197c8:	mov	r3, #1
   197cc:	str	r3, [sp, #8]
   197d0:	str	r3, [sp, #20]
   197d4:	movw	r8, #48788	; 0xbe94
   197d8:	movt	r8, #1
   197dc:	movw	fp, #46400	; 0xb540
   197e0:	movt	fp, #1
   197e4:	movw	r3, #48568	; 0xbdb8
   197e8:	movt	r3, #1
   197ec:	str	r3, [sp, #4]
   197f0:	movw	r3, #44672	; 0xae80
   197f4:	movt	r3, #1
   197f8:	str	r3, [sp, #12]
   197fc:	movw	r3, #48688	; 0xbe30
   19800:	movt	r3, #1
   19804:	str	r3, [sp, #16]
   19808:	movw	r3, #45248	; 0xb0c0
   1980c:	movt	r3, #1
   19810:	str	r3, [sp, #28]
   19814:	movw	r3, #49648	; 0xc1f0
   19818:	movt	r3, #2
   1981c:	str	r3, [sp, #32]
   19820:	movw	r3, #53424	; 0xd0b0
   19824:	movt	r3, #2
   19828:	str	r3, [sp, #36]	; 0x24
   1982c:	movw	r3, #48792	; 0xbe98
   19830:	movt	r3, #1
   19834:	str	r3, [sp, #24]
   19838:	b	19904 <main@@Base+0xd60>
   1983c:	ldr	r1, [sp, #24]
   19840:	mov	r0, r6
   19844:	bl	121dc <strcmp@plt>
   19848:	cmp	r0, #0
   1984c:	bne	19880 <main@@Base+0xcdc>
   19850:	add	r3, r5, #1
   19854:	cmp	r4, r3
   19858:	ble	19898 <main@@Base+0xcf4>
   1985c:	add	sl, r7, sl
   19860:	ldr	r2, [sl, #4]
   19864:	ldrb	r1, [r2]
   19868:	cmp	r1, #45	; 0x2d
   1986c:	beq	19898 <main@@Base+0xcf4>
   19870:	ldr	r1, [sp, #36]	; 0x24
   19874:	str	r2, [r1]
   19878:	mov	r5, r3
   1987c:	b	19900 <main@@Base+0xd5c>
   19880:	movw	r1, #48796	; 0xbe9c
   19884:	movt	r1, #1
   19888:	mov	r0, r6
   1988c:	bl	121dc <strcmp@plt>
   19890:	cmp	r0, #0
   19894:	beq	19850 <main@@Base+0xcac>
   19898:	ldr	r1, [sp, #28]
   1989c:	mov	r0, r6
   198a0:	bl	121dc <strcmp@plt>
   198a4:	cmp	r0, #0
   198a8:	beq	199dc <main@@Base+0xe38>
   198ac:	sub	r3, r4, #1
   198b0:	cmp	r5, r3
   198b4:	bne	198d0 <main@@Base+0xd2c>
   198b8:	ldrb	r3, [r6]
   198bc:	cmp	r3, #45	; 0x2d
   198c0:	beq	198d0 <main@@Base+0xd2c>
   198c4:	ldr	r3, [sp, #32]
   198c8:	str	r6, [r3]
   198cc:	b	19900 <main@@Base+0xd5c>
   198d0:	movw	r3, #49592	; 0xc1b8
   198d4:	movt	r3, #2
   198d8:	ldr	r3, [r3]
   198dc:	mov	r2, #25
   198e0:	mov	r1, #1
   198e4:	movw	r0, #48640	; 0xbe00
   198e8:	movt	r0, #1
   198ec:	bl	12350 <fwrite@plt>
   198f0:	bl	185f0 <print_yaml_data@@Base+0xf4>
   198f4:	mov	r0, #1
   198f8:	bl	123ec <exit@plt>
   198fc:	mov	r9, #1
   19900:	add	r5, r5, #1
   19904:	cmp	r4, r5
   19908:	ble	199e4 <main@@Base+0xe40>
   1990c:	lsl	sl, r5, #2
   19910:	ldr	r6, [r7, r5, lsl #2]
   19914:	mov	r1, r8
   19918:	mov	r0, r6
   1991c:	bl	121dc <strcmp@plt>
   19920:	cmp	r0, #0
   19924:	beq	198fc <main@@Base+0xd58>
   19928:	mov	r1, fp
   1992c:	mov	r0, r6
   19930:	bl	121dc <strcmp@plt>
   19934:	cmp	r0, #0
   19938:	beq	199c4 <main@@Base+0xe20>
   1993c:	ldr	r1, [sp, #4]
   19940:	mov	r0, r6
   19944:	bl	121dc <strcmp@plt>
   19948:	cmp	r0, #0
   1994c:	beq	199cc <main@@Base+0xe28>
   19950:	ldr	r1, [sp, #12]
   19954:	mov	r0, r6
   19958:	bl	121dc <strcmp@plt>
   1995c:	cmp	r0, #0
   19960:	beq	199d4 <main@@Base+0xe30>
   19964:	ldr	r1, [sp, #16]
   19968:	mov	r0, r6
   1996c:	bl	121dc <strcmp@plt>
   19970:	cmp	r0, #0
   19974:	beq	19990 <main@@Base+0xdec>
   19978:	movw	r1, #48692	; 0xbe34
   1997c:	movt	r1, #1
   19980:	mov	r0, r6
   19984:	bl	121dc <strcmp@plt>
   19988:	cmp	r0, #0
   1998c:	bne	1983c <main@@Base+0xc98>
   19990:	add	r3, r5, #1
   19994:	cmp	r4, r3
   19998:	ble	19898 <main@@Base+0xcf4>
   1999c:	add	r2, r7, sl
   199a0:	ldr	r1, [r2, #4]
   199a4:	ldrb	r2, [r1]
   199a8:	cmp	r2, #45	; 0x2d
   199ac:	beq	1a190 <main@@Base+0x15ec>
   199b0:	movw	r2, #49632	; 0xc1e0
   199b4:	movt	r2, #2
   199b8:	str	r1, [r2]
   199bc:	mov	r5, r3
   199c0:	b	19900 <main@@Base+0xd5c>
   199c4:	mov	r9, #1
   199c8:	b	19900 <main@@Base+0xd5c>
   199cc:	str	r0, [sp, #8]
   199d0:	b	19900 <main@@Base+0xd5c>
   199d4:	str	r0, [sp, #8]
   199d8:	b	19900 <main@@Base+0xd5c>
   199dc:	str	r0, [sp, #20]
   199e0:	b	19900 <main@@Base+0xd5c>
   199e4:	movw	r3, #49648	; 0xc1f0
   199e8:	movt	r3, #2
   199ec:	ldr	r3, [r3]
   199f0:	cmp	r3, #0
   199f4:	beq	19a90 <main@@Base+0xeec>
   199f8:	ldrb	r3, [r3]
   199fc:	cmp	r3, #0
   19a00:	beq	19a90 <main@@Base+0xeec>
   19a04:	bl	12458 <coda_init@plt>
   19a08:	cmp	r0, #0
   19a0c:	bne	19abc <main@@Base+0xf18>
   19a10:	ldr	r3, [sp, #20]
   19a14:	clz	r0, r3
   19a18:	lsr	r0, r0, #5
   19a1c:	bl	1229c <coda_set_option_bypass_special_types@plt>
   19a20:	ldr	r0, [sp, #8]
   19a24:	bl	12464 <coda_set_option_perform_conversions@plt>
   19a28:	movw	r3, #49632	; 0xc1e0
   19a2c:	movt	r3, #2
   19a30:	ldr	r0, [r3]
   19a34:	cmp	r0, #0
   19a38:	beq	19a5c <main@@Base+0xeb8>
   19a3c:	movw	r1, #48732	; 0xbe5c
   19a40:	movt	r1, #1
   19a44:	bl	12218 <fopen@plt>
   19a48:	movw	r3, #53400	; 0xd098
   19a4c:	movt	r3, #2
   19a50:	str	r0, [r3]
   19a54:	cmp	r0, #0
   19a58:	beq	19af0 <main@@Base+0xf4c>
   19a5c:	mov	r0, r9
   19a60:	bl	16a14 <print_json_data@@Base>
   19a64:	movw	r3, #49632	; 0xc1e0
   19a68:	movt	r3, #2
   19a6c:	ldr	r3, [r3]
   19a70:	cmp	r3, #0
   19a74:	beq	19a88 <main@@Base+0xee4>
   19a78:	movw	r3, #53400	; 0xd098
   19a7c:	movt	r3, #2
   19a80:	ldr	r0, [r3]
   19a84:	bl	124dc <fclose@plt>
   19a88:	bl	12380 <coda_done@plt>
   19a8c:	b	19190 <main@@Base+0x5ec>
   19a90:	movw	r3, #49592	; 0xc1b8
   19a94:	movt	r3, #2
   19a98:	ldr	r3, [r3]
   19a9c:	mov	r2, #25
   19aa0:	mov	r1, #1
   19aa4:	movw	r0, #48640	; 0xbe00
   19aa8:	movt	r0, #1
   19aac:	bl	12350 <fwrite@plt>
   19ab0:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19ab4:	mov	r0, #1
   19ab8:	bl	123ec <exit@plt>
   19abc:	movw	r3, #49592	; 0xc1b8
   19ac0:	movt	r3, #2
   19ac4:	ldr	r4, [r3]
   19ac8:	bl	125d8 <coda_get_errno@plt>
   19acc:	ldr	r0, [r0]
   19ad0:	bl	12590 <coda_errno_to_string@plt>
   19ad4:	mov	r2, r0
   19ad8:	movw	r1, #48412	; 0xbd1c
   19adc:	movt	r1, #1
   19ae0:	mov	r0, r4
   19ae4:	bl	12434 <fprintf@plt>
   19ae8:	mov	r0, #1
   19aec:	bl	123ec <exit@plt>
   19af0:	movw	r2, #49632	; 0xc1e0
   19af4:	movt	r2, #2
   19af8:	movw	r3, #49592	; 0xc1b8
   19afc:	movt	r3, #2
   19b00:	ldr	r2, [r2]
   19b04:	movw	r1, #48736	; 0xbe60
   19b08:	movt	r1, #1
   19b0c:	ldr	r0, [r3]
   19b10:	bl	12434 <fprintf@plt>
   19b14:	mov	r0, #1
   19b18:	bl	123ec <exit@plt>
   19b1c:	movw	r3, #53420	; 0xd0ac
   19b20:	movt	r3, #2
   19b24:	mov	r2, #4
   19b28:	str	r2, [r3]
   19b2c:	add	r9, sl, #1
   19b30:	sub	r9, r4, r9
   19b34:	add	r8, r8, r2
   19b38:	add	r6, r6, r8
   19b3c:	movw	r3, #49648	; 0xc1f0
   19b40:	movt	r3, #2
   19b44:	mov	r2, #0
   19b48:	str	r2, [r3]
   19b4c:	movw	r3, #49632	; 0xc1e0
   19b50:	movt	r3, #2
   19b54:	str	r2, [r3]
   19b58:	movw	r3, #53424	; 0xd0b0
   19b5c:	movt	r3, #2
   19b60:	str	r2, [r3]
   19b64:	movw	r3, #53400	; 0xd098
   19b68:	movt	r3, #2
   19b6c:	movw	r2, #49596	; 0xc1bc
   19b70:	movt	r2, #2
   19b74:	ldr	r2, [r2]
   19b78:	str	r2, [r3]
   19b7c:	mov	r4, r7
   19b80:	mov	r3, #1
   19b84:	str	r3, [sp, #8]
   19b88:	str	r3, [sp, #20]
   19b8c:	movw	r8, #48788	; 0xbe94
   19b90:	movt	r8, #1
   19b94:	movw	fp, #46400	; 0xb540
   19b98:	movt	fp, #1
   19b9c:	movw	r3, #48568	; 0xbdb8
   19ba0:	movt	r3, #1
   19ba4:	str	r3, [sp, #4]
   19ba8:	movw	r3, #44672	; 0xae80
   19bac:	movt	r3, #1
   19bb0:	str	r3, [sp, #12]
   19bb4:	movw	r3, #48688	; 0xbe30
   19bb8:	movt	r3, #1
   19bbc:	str	r3, [sp, #16]
   19bc0:	movw	r3, #45248	; 0xb0c0
   19bc4:	movt	r3, #1
   19bc8:	str	r3, [sp, #28]
   19bcc:	movw	r3, #49648	; 0xc1f0
   19bd0:	movt	r3, #2
   19bd4:	str	r3, [sp, #32]
   19bd8:	movw	r3, #53424	; 0xd0b0
   19bdc:	movt	r3, #2
   19be0:	str	r3, [sp, #36]	; 0x24
   19be4:	movw	r3, #48792	; 0xbe98
   19be8:	movt	r3, #1
   19bec:	str	r3, [sp, #24]
   19bf0:	b	19cbc <main@@Base+0x1118>
   19bf4:	ldr	r1, [sp, #24]
   19bf8:	mov	r0, r5
   19bfc:	bl	121dc <strcmp@plt>
   19c00:	cmp	r0, #0
   19c04:	bne	19c38 <main@@Base+0x1094>
   19c08:	add	r3, r4, #1
   19c0c:	cmp	r9, r3
   19c10:	ble	19c50 <main@@Base+0x10ac>
   19c14:	add	sl, r6, sl
   19c18:	ldr	r2, [sl, #4]
   19c1c:	ldrb	r1, [r2]
   19c20:	cmp	r1, #45	; 0x2d
   19c24:	beq	19c50 <main@@Base+0x10ac>
   19c28:	ldr	r1, [sp, #36]	; 0x24
   19c2c:	str	r2, [r1]
   19c30:	mov	r4, r3
   19c34:	b	19cb8 <main@@Base+0x1114>
   19c38:	movw	r1, #48796	; 0xbe9c
   19c3c:	movt	r1, #1
   19c40:	mov	r0, r5
   19c44:	bl	121dc <strcmp@plt>
   19c48:	cmp	r0, #0
   19c4c:	beq	19c08 <main@@Base+0x1064>
   19c50:	ldr	r1, [sp, #28]
   19c54:	mov	r0, r5
   19c58:	bl	121dc <strcmp@plt>
   19c5c:	cmp	r0, #0
   19c60:	beq	19d94 <main@@Base+0x11f0>
   19c64:	sub	r3, r9, #1
   19c68:	cmp	r4, r3
   19c6c:	bne	19c88 <main@@Base+0x10e4>
   19c70:	ldrb	r3, [r5]
   19c74:	cmp	r3, #45	; 0x2d
   19c78:	beq	19c88 <main@@Base+0x10e4>
   19c7c:	ldr	r3, [sp, #32]
   19c80:	str	r5, [r3]
   19c84:	b	19cb8 <main@@Base+0x1114>
   19c88:	movw	r3, #49592	; 0xc1b8
   19c8c:	movt	r3, #2
   19c90:	ldr	r3, [r3]
   19c94:	mov	r2, #25
   19c98:	mov	r1, #1
   19c9c:	movw	r0, #48640	; 0xbe00
   19ca0:	movt	r0, #1
   19ca4:	bl	12350 <fwrite@plt>
   19ca8:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19cac:	mov	r0, #1
   19cb0:	bl	123ec <exit@plt>
   19cb4:	mov	r7, #1
   19cb8:	add	r4, r4, #1
   19cbc:	cmp	r9, r4
   19cc0:	ble	19d9c <main@@Base+0x11f8>
   19cc4:	lsl	sl, r4, #2
   19cc8:	ldr	r5, [r6, r4, lsl #2]
   19ccc:	mov	r1, r8
   19cd0:	mov	r0, r5
   19cd4:	bl	121dc <strcmp@plt>
   19cd8:	cmp	r0, #0
   19cdc:	beq	19cb4 <main@@Base+0x1110>
   19ce0:	mov	r1, fp
   19ce4:	mov	r0, r5
   19ce8:	bl	121dc <strcmp@plt>
   19cec:	cmp	r0, #0
   19cf0:	beq	19d7c <main@@Base+0x11d8>
   19cf4:	ldr	r1, [sp, #4]
   19cf8:	mov	r0, r5
   19cfc:	bl	121dc <strcmp@plt>
   19d00:	cmp	r0, #0
   19d04:	beq	19d84 <main@@Base+0x11e0>
   19d08:	ldr	r1, [sp, #12]
   19d0c:	mov	r0, r5
   19d10:	bl	121dc <strcmp@plt>
   19d14:	cmp	r0, #0
   19d18:	beq	19d8c <main@@Base+0x11e8>
   19d1c:	ldr	r1, [sp, #16]
   19d20:	mov	r0, r5
   19d24:	bl	121dc <strcmp@plt>
   19d28:	cmp	r0, #0
   19d2c:	beq	19d48 <main@@Base+0x11a4>
   19d30:	movw	r1, #48692	; 0xbe34
   19d34:	movt	r1, #1
   19d38:	mov	r0, r5
   19d3c:	bl	121dc <strcmp@plt>
   19d40:	cmp	r0, #0
   19d44:	bne	19bf4 <main@@Base+0x1050>
   19d48:	add	r3, r4, #1
   19d4c:	cmp	r9, r3
   19d50:	ble	19c50 <main@@Base+0x10ac>
   19d54:	add	r2, r6, sl
   19d58:	ldr	r2, [r2, #4]
   19d5c:	ldrb	r1, [r2]
   19d60:	cmp	r1, #45	; 0x2d
   19d64:	beq	1a1c4 <main@@Base+0x1620>
   19d68:	movw	r1, #49632	; 0xc1e0
   19d6c:	movt	r1, #2
   19d70:	str	r2, [r1]
   19d74:	mov	r4, r3
   19d78:	b	19cb8 <main@@Base+0x1114>
   19d7c:	mov	r7, #1
   19d80:	b	19cb8 <main@@Base+0x1114>
   19d84:	str	r0, [sp, #8]
   19d88:	b	19cb8 <main@@Base+0x1114>
   19d8c:	str	r0, [sp, #8]
   19d90:	b	19cb8 <main@@Base+0x1114>
   19d94:	str	r0, [sp, #20]
   19d98:	b	19cb8 <main@@Base+0x1114>
   19d9c:	movw	r3, #49648	; 0xc1f0
   19da0:	movt	r3, #2
   19da4:	ldr	r3, [r3]
   19da8:	cmp	r3, #0
   19dac:	beq	19e48 <main@@Base+0x12a4>
   19db0:	ldrb	r3, [r3]
   19db4:	cmp	r3, #0
   19db8:	beq	19e48 <main@@Base+0x12a4>
   19dbc:	bl	12458 <coda_init@plt>
   19dc0:	cmp	r0, #0
   19dc4:	bne	19e74 <main@@Base+0x12d0>
   19dc8:	ldr	r3, [sp, #20]
   19dcc:	clz	r0, r3
   19dd0:	lsr	r0, r0, #5
   19dd4:	bl	1229c <coda_set_option_bypass_special_types@plt>
   19dd8:	ldr	r0, [sp, #8]
   19ddc:	bl	12464 <coda_set_option_perform_conversions@plt>
   19de0:	movw	r3, #49632	; 0xc1e0
   19de4:	movt	r3, #2
   19de8:	ldr	r0, [r3]
   19dec:	cmp	r0, #0
   19df0:	beq	19e14 <main@@Base+0x1270>
   19df4:	movw	r1, #48732	; 0xbe5c
   19df8:	movt	r1, #1
   19dfc:	bl	12218 <fopen@plt>
   19e00:	movw	r3, #53400	; 0xd098
   19e04:	movt	r3, #2
   19e08:	str	r0, [r3]
   19e0c:	cmp	r0, #0
   19e10:	beq	19ea8 <main@@Base+0x1304>
   19e14:	mov	r0, r7
   19e18:	bl	184fc <print_yaml_data@@Base>
   19e1c:	movw	r3, #49632	; 0xc1e0
   19e20:	movt	r3, #2
   19e24:	ldr	r3, [r3]
   19e28:	cmp	r3, #0
   19e2c:	beq	19e40 <main@@Base+0x129c>
   19e30:	movw	r3, #53400	; 0xd098
   19e34:	movt	r3, #2
   19e38:	ldr	r0, [r3]
   19e3c:	bl	124dc <fclose@plt>
   19e40:	bl	12380 <coda_done@plt>
   19e44:	b	19190 <main@@Base+0x5ec>
   19e48:	movw	r3, #49592	; 0xc1b8
   19e4c:	movt	r3, #2
   19e50:	ldr	r3, [r3]
   19e54:	mov	r2, #25
   19e58:	mov	r1, #1
   19e5c:	movw	r0, #48640	; 0xbe00
   19e60:	movt	r0, #1
   19e64:	bl	12350 <fwrite@plt>
   19e68:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19e6c:	mov	r0, #1
   19e70:	bl	123ec <exit@plt>
   19e74:	movw	r3, #49592	; 0xc1b8
   19e78:	movt	r3, #2
   19e7c:	ldr	r4, [r3]
   19e80:	bl	125d8 <coda_get_errno@plt>
   19e84:	ldr	r0, [r0]
   19e88:	bl	12590 <coda_errno_to_string@plt>
   19e8c:	mov	r2, r0
   19e90:	movw	r1, #48412	; 0xbd1c
   19e94:	movt	r1, #1
   19e98:	mov	r0, r4
   19e9c:	bl	12434 <fprintf@plt>
   19ea0:	mov	r0, #1
   19ea4:	bl	123ec <exit@plt>
   19ea8:	movw	r2, #49632	; 0xc1e0
   19eac:	movt	r2, #2
   19eb0:	movw	r3, #49592	; 0xc1b8
   19eb4:	movt	r3, #2
   19eb8:	ldr	r2, [r2]
   19ebc:	movw	r1, #48736	; 0xbe60
   19ec0:	movt	r1, #1
   19ec4:	ldr	r0, [r3]
   19ec8:	bl	12434 <fprintf@plt>
   19ecc:	mov	r0, #1
   19ed0:	bl	123ec <exit@plt>
   19ed4:	movw	r1, #48792	; 0xbe98
   19ed8:	movt	r1, #1
   19edc:	mov	r0, r7
   19ee0:	bl	121dc <strcmp@plt>
   19ee4:	cmp	r0, #0
   19ee8:	beq	1a304 <main@@Base+0x1760>
   19eec:	b	1a2ec <main@@Base+0x1748>
   19ef0:	add	r9, r6, #1
   19ef4:	cmp	r4, r9
   19ef8:	ble	1a244 <main@@Base+0x16a0>
   19efc:	add	r3, r5, r8
   19f00:	ldr	r0, [r3, #4]
   19f04:	ldrb	r3, [r0]
   19f08:	cmp	r3, #45	; 0x2d
   19f0c:	beq	1a244 <main@@Base+0x16a0>
   19f10:	mov	r2, #10
   19f14:	mov	r1, #0
   19f18:	bl	121e8 <strtol@plt>
   19f1c:	movw	r3, #49584	; 0xc1b0
   19f20:	movt	r3, #2
   19f24:	str	r0, [r3]
   19f28:	mov	r6, r9
   19f2c:	b	19f88 <main@@Base+0x13e4>
   19f30:	mov	r2, #10
   19f34:	mov	r1, #0
   19f38:	bl	121e8 <strtol@plt>
   19f3c:	str	r0, [sp, #20]
   19f40:	mov	r6, r9
   19f44:	ldr	r2, [sp, #28]
   19f48:	str	r2, [sp, #16]
   19f4c:	ldr	r3, [sp, #24]
   19f50:	str	r3, [sp, #12]
   19f54:	b	19f88 <main@@Base+0x13e4>
   19f58:	movw	r3, #49592	; 0xc1b8
   19f5c:	movt	r3, #2
   19f60:	ldr	r3, [r3]
   19f64:	mov	r2, #25
   19f68:	mov	r1, #1
   19f6c:	movw	r0, #48640	; 0xbe00
   19f70:	movt	r0, #1
   19f74:	bl	12350 <fwrite@plt>
   19f78:	bl	185f0 <print_yaml_data@@Base+0xf4>
   19f7c:	mov	r0, #1
   19f80:	bl	123ec <exit@plt>
   19f84:	str	r0, [sp, #4]
   19f88:	add	r6, r6, #1
   19f8c:	cmp	r4, r6
   19f90:	ble	1a02c <main@@Base+0x1488>
   19f94:	lsl	r8, r6, #2
   19f98:	ldr	r7, [r5, r6, lsl #2]
   19f9c:	mov	r1, sl
   19fa0:	mov	r0, r7
   19fa4:	bl	121dc <strcmp@plt>
   19fa8:	cmp	r0, #0
   19fac:	beq	19f84 <main@@Base+0x13e0>
   19fb0:	mov	r1, fp
   19fb4:	mov	r0, r7
   19fb8:	bl	121dc <strcmp@plt>
   19fbc:	cmp	r0, #0
   19fc0:	beq	1a024 <main@@Base+0x1480>
   19fc4:	ldr	r1, [sp, #8]
   19fc8:	mov	r0, r7
   19fcc:	bl	121dc <strcmp@plt>
   19fd0:	cmp	r0, #0
   19fd4:	beq	19ff0 <main@@Base+0x144c>
   19fd8:	movw	r1, #48692	; 0xbe34
   19fdc:	movt	r1, #1
   19fe0:	mov	r0, r7
   19fe4:	bl	121dc <strcmp@plt>
   19fe8:	cmp	r0, #0
   19fec:	bne	19ed4 <main@@Base+0x1330>
   19ff0:	add	r3, r6, #1
   19ff4:	cmp	r4, r3
   19ff8:	ble	1a2d4 <main@@Base+0x1730>
   19ffc:	add	r2, r5, r8
   1a000:	ldr	r2, [r2, #4]
   1a004:	ldrb	r1, [r2]
   1a008:	cmp	r1, #45	; 0x2d
   1a00c:	beq	1a1f8 <main@@Base+0x1654>
   1a010:	movw	r1, #49632	; 0xc1e0
   1a014:	movt	r1, #2
   1a018:	str	r2, [r1]
   1a01c:	mov	r6, r3
   1a020:	b	19f88 <main@@Base+0x13e4>
   1a024:	str	r0, [sp, #4]
   1a028:	b	19f88 <main@@Base+0x13e4>
   1a02c:	movw	r3, #49648	; 0xc1f0
   1a030:	movt	r3, #2
   1a034:	ldr	r3, [r3]
   1a038:	cmp	r3, #0
   1a03c:	beq	1a0d8 <main@@Base+0x1534>
   1a040:	ldrb	r3, [r3]
   1a044:	cmp	r3, #0
   1a048:	beq	1a0d8 <main@@Base+0x1534>
   1a04c:	bl	12458 <coda_init@plt>
   1a050:	cmp	r0, #0
   1a054:	bne	1a104 <main@@Base+0x1560>
   1a058:	mov	r0, #0
   1a05c:	bl	12464 <coda_set_option_perform_conversions@plt>
   1a060:	ldr	r0, [sp, #4]
   1a064:	bl	121ac <coda_set_option_use_fast_size_expressions@plt>
   1a068:	movw	r3, #49632	; 0xc1e0
   1a06c:	movt	r3, #2
   1a070:	ldr	r0, [r3]
   1a074:	cmp	r0, #0
   1a078:	beq	1a09c <main@@Base+0x14f8>
   1a07c:	movw	r1, #48732	; 0xbe5c
   1a080:	movt	r1, #1
   1a084:	bl	12218 <fopen@plt>
   1a088:	movw	r3, #53400	; 0xd098
   1a08c:	movt	r3, #2
   1a090:	str	r0, [r3]
   1a094:	cmp	r0, #0
   1a098:	beq	1a138 <main@@Base+0x1594>
   1a09c:	ldr	r2, [sp, #20]
   1a0a0:	ldr	r1, [sp, #16]
   1a0a4:	ldr	r0, [sp, #12]
   1a0a8:	bl	14290 <print_debug_data@@Base>
   1a0ac:	movw	r3, #49632	; 0xc1e0
   1a0b0:	movt	r3, #2
   1a0b4:	ldr	r3, [r3]
   1a0b8:	cmp	r3, #0
   1a0bc:	beq	1a0d0 <main@@Base+0x152c>
   1a0c0:	movw	r3, #53400	; 0xd098
   1a0c4:	movt	r3, #2
   1a0c8:	ldr	r0, [r3]
   1a0cc:	bl	124dc <fclose@plt>
   1a0d0:	bl	12380 <coda_done@plt>
   1a0d4:	b	19190 <main@@Base+0x5ec>
   1a0d8:	movw	r3, #49592	; 0xc1b8
   1a0dc:	movt	r3, #2
   1a0e0:	ldr	r3, [r3]
   1a0e4:	mov	r2, #25
   1a0e8:	mov	r1, #1
   1a0ec:	movw	r0, #48640	; 0xbe00
   1a0f0:	movt	r0, #1
   1a0f4:	bl	12350 <fwrite@plt>
   1a0f8:	bl	185f0 <print_yaml_data@@Base+0xf4>
   1a0fc:	mov	r0, #1
   1a100:	bl	123ec <exit@plt>
   1a104:	movw	r3, #49592	; 0xc1b8
   1a108:	movt	r3, #2
   1a10c:	ldr	r4, [r3]
   1a110:	bl	125d8 <coda_get_errno@plt>
   1a114:	ldr	r0, [r0]
   1a118:	bl	12590 <coda_errno_to_string@plt>
   1a11c:	mov	r2, r0
   1a120:	movw	r1, #48412	; 0xbd1c
   1a124:	movt	r1, #1
   1a128:	mov	r0, r4
   1a12c:	bl	12434 <fprintf@plt>
   1a130:	mov	r0, #1
   1a134:	bl	123ec <exit@plt>
   1a138:	movw	r2, #49632	; 0xc1e0
   1a13c:	movt	r2, #2
   1a140:	movw	r3, #49592	; 0xc1b8
   1a144:	movt	r3, #2
   1a148:	ldr	r2, [r2]
   1a14c:	movw	r1, #48736	; 0xbe60
   1a150:	movt	r1, #1
   1a154:	ldr	r0, [r3]
   1a158:	bl	12434 <fprintf@plt>
   1a15c:	mov	r0, #1
   1a160:	bl	123ec <exit@plt>
   1a164:	movw	r3, #49592	; 0xc1b8
   1a168:	movt	r3, #2
   1a16c:	ldr	r3, [r3]
   1a170:	mov	r2, #25
   1a174:	mov	r1, #1
   1a178:	movw	r0, #48640	; 0xbe00
   1a17c:	movt	r0, #1
   1a180:	bl	12350 <fwrite@plt>
   1a184:	bl	185f0 <print_yaml_data@@Base+0xf4>
   1a188:	mov	r0, #1
   1a18c:	bl	123ec <exit@plt>
   1a190:	ldr	r1, [sp, #24]
   1a194:	mov	r0, r6
   1a198:	bl	121dc <strcmp@plt>
   1a19c:	cmp	r0, #0
   1a1a0:	beq	19898 <main@@Base+0xcf4>
   1a1a4:	movw	r1, #48796	; 0xbe9c
   1a1a8:	movt	r1, #1
   1a1ac:	mov	r0, r6
   1a1b0:	bl	121dc <strcmp@plt>
   1a1b4:	cmp	r0, #0
   1a1b8:	bne	19898 <main@@Base+0xcf4>
   1a1bc:	add	r3, r5, #1
   1a1c0:	b	1985c <main@@Base+0xcb8>
   1a1c4:	ldr	r1, [sp, #24]
   1a1c8:	mov	r0, r5
   1a1cc:	bl	121dc <strcmp@plt>
   1a1d0:	cmp	r0, #0
   1a1d4:	beq	19c50 <main@@Base+0x10ac>
   1a1d8:	movw	r1, #48796	; 0xbe9c
   1a1dc:	movt	r1, #1
   1a1e0:	mov	r0, r5
   1a1e4:	bl	121dc <strcmp@plt>
   1a1e8:	cmp	r0, #0
   1a1ec:	bne	19c50 <main@@Base+0x10ac>
   1a1f0:	add	r3, r4, #1
   1a1f4:	b	19c14 <main@@Base+0x1070>
   1a1f8:	movw	r1, #48792	; 0xbe98
   1a1fc:	movt	r1, #1
   1a200:	mov	r0, r7
   1a204:	bl	121dc <strcmp@plt>
   1a208:	cmp	r0, #0
   1a20c:	beq	1a244 <main@@Base+0x16a0>
   1a210:	movw	r1, #48796	; 0xbe9c
   1a214:	movt	r1, #1
   1a218:	mov	r0, r7
   1a21c:	bl	121dc <strcmp@plt>
   1a220:	cmp	r0, #0
   1a224:	addeq	r3, r6, #1
   1a228:	beq	1a310 <main@@Base+0x176c>
   1a22c:	movw	r1, #48812	; 0xbeac
   1a230:	movt	r1, #1
   1a234:	mov	r0, r7
   1a238:	bl	121dc <strcmp@plt>
   1a23c:	cmp	r0, #0
   1a240:	beq	19ef0 <main@@Base+0x134c>
   1a244:	movw	r1, #48824	; 0xbeb8
   1a248:	movt	r1, #1
   1a24c:	mov	r0, r7
   1a250:	bl	121dc <strcmp@plt>
   1a254:	cmp	r0, #0
   1a258:	bne	1a2ac <main@@Base+0x1708>
   1a25c:	add	r9, r6, #3
   1a260:	cmp	r4, r9
   1a264:	ble	1a2ac <main@@Base+0x1708>
   1a268:	add	r3, r5, r8
   1a26c:	ldr	r3, [r3, #4]
   1a270:	str	r3, [sp, #24]
   1a274:	ldrb	r3, [r3]
   1a278:	cmp	r3, #45	; 0x2d
   1a27c:	beq	1a2ac <main@@Base+0x1708>
   1a280:	add	r3, r5, r8
   1a284:	ldr	r2, [r3, #8]
   1a288:	str	r2, [sp, #28]
   1a28c:	ldrb	r3, [r2]
   1a290:	cmp	r3, #45	; 0x2d
   1a294:	beq	1a2ac <main@@Base+0x1708>
   1a298:	add	r8, r5, r8
   1a29c:	ldr	r0, [r8, #12]
   1a2a0:	ldrb	r3, [r0]
   1a2a4:	cmp	r3, #45	; 0x2d
   1a2a8:	bne	19f30 <main@@Base+0x138c>
   1a2ac:	sub	r3, r4, #1
   1a2b0:	cmp	r6, r3
   1a2b4:	bne	19f58 <main@@Base+0x13b4>
   1a2b8:	ldrb	r3, [r7]
   1a2bc:	cmp	r3, #45	; 0x2d
   1a2c0:	beq	19f58 <main@@Base+0x13b4>
   1a2c4:	movw	r3, #49648	; 0xc1f0
   1a2c8:	movt	r3, #2
   1a2cc:	str	r7, [r3]
   1a2d0:	b	19f88 <main@@Base+0x13e4>
   1a2d4:	movw	r1, #48792	; 0xbe98
   1a2d8:	movt	r1, #1
   1a2dc:	mov	r0, r7
   1a2e0:	bl	121dc <strcmp@plt>
   1a2e4:	cmp	r0, #0
   1a2e8:	beq	1a244 <main@@Base+0x16a0>
   1a2ec:	movw	r1, #48796	; 0xbe9c
   1a2f0:	movt	r1, #1
   1a2f4:	mov	r0, r7
   1a2f8:	bl	121dc <strcmp@plt>
   1a2fc:	cmp	r0, #0
   1a300:	bne	1a22c <main@@Base+0x1688>
   1a304:	add	r3, r6, #1
   1a308:	cmp	r4, r3
   1a30c:	ble	1a244 <main@@Base+0x16a0>
   1a310:	add	r2, r5, r8
   1a314:	ldr	r1, [r2, #4]
   1a318:	ldrb	r2, [r1]
   1a31c:	cmp	r2, #45	; 0x2d
   1a320:	beq	1a244 <main@@Base+0x16a0>
   1a324:	movw	r2, #53424	; 0xd0b0
   1a328:	movt	r2, #2
   1a32c:	str	r1, [r2]
   1a330:	mov	r6, r3
   1a334:	b	19f88 <main@@Base+0x13e4>
   1a338:	cmp	r3, #0
   1a33c:	cmpeq	r2, #0
   1a340:	bne	1a364 <main@@Base+0x17c0>
   1a344:	cmp	r1, #0
   1a348:	movlt	r1, #-2147483648	; 0x80000000
   1a34c:	movlt	r0, #0
   1a350:	blt	1a360 <main@@Base+0x17bc>
   1a354:	cmpeq	r0, #0
   1a358:	mvnne	r1, #-2147483648	; 0x80000000
   1a35c:	mvnne	r0, #0
   1a360:	b	1a40c <main@@Base+0x1868>
   1a364:	sub	sp, sp, #8
   1a368:	push	{sp, lr}
   1a36c:	cmp	r1, #0
   1a370:	blt	1a390 <main@@Base+0x17ec>
   1a374:	cmp	r3, #0
   1a378:	blt	1a3c4 <main@@Base+0x1820>
   1a37c:	bl	1a41c <main@@Base+0x1878>
   1a380:	ldr	lr, [sp, #4]
   1a384:	add	sp, sp, #8
   1a388:	pop	{r2, r3}
   1a38c:	bx	lr
   1a390:	rsbs	r0, r0, #0
   1a394:	sbc	r1, r1, r1, lsl #1
   1a398:	cmp	r3, #0
   1a39c:	blt	1a3e8 <main@@Base+0x1844>
   1a3a0:	bl	1a41c <main@@Base+0x1878>
   1a3a4:	ldr	lr, [sp, #4]
   1a3a8:	add	sp, sp, #8
   1a3ac:	pop	{r2, r3}
   1a3b0:	rsbs	r0, r0, #0
   1a3b4:	sbc	r1, r1, r1, lsl #1
   1a3b8:	rsbs	r2, r2, #0
   1a3bc:	sbc	r3, r3, r3, lsl #1
   1a3c0:	bx	lr
   1a3c4:	rsbs	r2, r2, #0
   1a3c8:	sbc	r3, r3, r3, lsl #1
   1a3cc:	bl	1a41c <main@@Base+0x1878>
   1a3d0:	ldr	lr, [sp, #4]
   1a3d4:	add	sp, sp, #8
   1a3d8:	pop	{r2, r3}
   1a3dc:	rsbs	r0, r0, #0
   1a3e0:	sbc	r1, r1, r1, lsl #1
   1a3e4:	bx	lr
   1a3e8:	rsbs	r2, r2, #0
   1a3ec:	sbc	r3, r3, r3, lsl #1
   1a3f0:	bl	1a41c <main@@Base+0x1878>
   1a3f4:	ldr	lr, [sp, #4]
   1a3f8:	add	sp, sp, #8
   1a3fc:	pop	{r2, r3}
   1a400:	rsbs	r2, r2, #0
   1a404:	sbc	r3, r3, r3, lsl #1
   1a408:	bx	lr
   1a40c:	push	{r1, lr}
   1a410:	mov	r0, #8
   1a414:	bl	121b8 <raise@plt>
   1a418:	pop	{r1, pc}
   1a41c:	cmp	r1, r3
   1a420:	cmpeq	r0, r2
   1a424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a428:	mov	r4, r0
   1a42c:	movcc	r0, #0
   1a430:	mov	r5, r1
   1a434:	ldr	lr, [sp, #36]	; 0x24
   1a438:	movcc	r1, r0
   1a43c:	bcc	1a538 <main@@Base+0x1994>
   1a440:	cmp	r3, #0
   1a444:	clzeq	ip, r2
   1a448:	clzne	ip, r3
   1a44c:	addeq	ip, ip, #32
   1a450:	cmp	r5, #0
   1a454:	clzeq	r1, r4
   1a458:	addeq	r1, r1, #32
   1a45c:	clzne	r1, r5
   1a460:	sub	ip, ip, r1
   1a464:	sub	sl, ip, #32
   1a468:	lsl	r9, r3, ip
   1a46c:	rsb	fp, ip, #32
   1a470:	orr	r9, r9, r2, lsl sl
   1a474:	orr	r9, r9, r2, lsr fp
   1a478:	lsl	r8, r2, ip
   1a47c:	cmp	r5, r9
   1a480:	cmpeq	r4, r8
   1a484:	movcc	r0, #0
   1a488:	movcc	r1, r0
   1a48c:	bcc	1a4a8 <main@@Base+0x1904>
   1a490:	mov	r0, #1
   1a494:	subs	r4, r4, r8
   1a498:	lsl	r1, r0, sl
   1a49c:	orr	r1, r1, r0, lsr fp
   1a4a0:	lsl	r0, r0, ip
   1a4a4:	sbc	r5, r5, r9
   1a4a8:	cmp	ip, #0
   1a4ac:	beq	1a538 <main@@Base+0x1994>
   1a4b0:	lsr	r6, r8, #1
   1a4b4:	orr	r6, r6, r9, lsl #31
   1a4b8:	lsr	r7, r9, #1
   1a4bc:	mov	r2, ip
   1a4c0:	b	1a4e4 <main@@Base+0x1940>
   1a4c4:	subs	r3, r4, r6
   1a4c8:	sbc	r8, r5, r7
   1a4cc:	adds	r3, r3, r3
   1a4d0:	adc	r8, r8, r8
   1a4d4:	adds	r4, r3, #1
   1a4d8:	adc	r5, r8, #0
   1a4dc:	subs	r2, r2, #1
   1a4e0:	beq	1a500 <main@@Base+0x195c>
   1a4e4:	cmp	r5, r7
   1a4e8:	cmpeq	r4, r6
   1a4ec:	bcs	1a4c4 <main@@Base+0x1920>
   1a4f0:	adds	r4, r4, r4
   1a4f4:	adc	r5, r5, r5
   1a4f8:	subs	r2, r2, #1
   1a4fc:	bne	1a4e4 <main@@Base+0x1940>
   1a500:	lsr	r3, r4, ip
   1a504:	orr	r3, r3, r5, lsl fp
   1a508:	lsr	r2, r5, ip
   1a50c:	orr	r3, r3, r5, lsr sl
   1a510:	adds	r0, r0, r4
   1a514:	mov	r4, r3
   1a518:	lsl	r3, r2, ip
   1a51c:	orr	r3, r3, r4, lsl sl
   1a520:	lsl	ip, r4, ip
   1a524:	orr	r3, r3, r4, lsr fp
   1a528:	adc	r1, r1, r5
   1a52c:	subs	r0, r0, ip
   1a530:	mov	r5, r2
   1a534:	sbc	r1, r1, r3
   1a538:	cmp	lr, #0
   1a53c:	strdne	r4, [lr]
   1a540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a544 <__libc_csu_init@@Base>:
   1a544:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a548:	mov	r7, r0
   1a54c:	ldr	r6, [pc, #72]	; 1a59c <__libc_csu_init@@Base+0x58>
   1a550:	ldr	r5, [pc, #72]	; 1a5a0 <__libc_csu_init@@Base+0x5c>
   1a554:	add	r6, pc, r6
   1a558:	add	r5, pc, r5
   1a55c:	sub	r6, r6, r5
   1a560:	mov	r8, r1
   1a564:	mov	r9, r2
   1a568:	bl	12174 <coda_cursor_get_byte_size@plt-0x20>
   1a56c:	asrs	r6, r6, #2
   1a570:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a574:	mov	r4, #0
   1a578:	add	r4, r4, #1
   1a57c:	ldr	r3, [r5], #4
   1a580:	mov	r2, r9
   1a584:	mov	r1, r8
   1a588:	mov	r0, r7
   1a58c:	blx	r3
   1a590:	cmp	r6, r4
   1a594:	bne	1a578 <__libc_csu_init@@Base+0x34>
   1a598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a59c:	andeq	r1, r1, r0, lsr #19
   1a5a0:	muleq	r1, r8, r9

0001a5a4 <__libc_csu_fini@@Base>:
   1a5a4:	bx	lr

Disassembly of section .fini:

0001a5a8 <.fini>:
   1a5a8:	push	{r3, lr}
   1a5ac:	pop	{r3, pc}
