
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000aec <_init>:
 aec:	push	{r3, lr}
 af0:	bl	cd4 <call_weak_fn>
 af4:	pop	{r3, pc}

Disassembly of section .plt:

00000af8 <.plt>:
 af8:	push	{lr}		; (str lr, [sp, #-4]!)
 afc:	ldr	lr, [pc, #4]	; b08 <.plt+0x10>
 b00:	add	lr, pc, lr
 b04:	ldr	pc, [lr, #8]!
 b08:	.word	0x000124f8

00000b0c <propagate_generic@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #73728	; 0x12000
 b14:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b18 <make_conf@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #73728	; 0x12000
 b20:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b24 <rb_current_time@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #73728	; 0x12000
 b2c:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b30 <sendto_match_servs@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #73728	; 0x12000
 b38:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b3c <__cxa_finalize@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #73728	; 0x12000
 b44:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b48 <strtol@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #73728	; 0x12000
 b50:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b54 <sendto_one@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #73728	; 0x12000
 b5c:	ldr	pc, [ip, #1224]!	; 0x4c8

00000b60 <replace_old_ban@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #73728	; 0x12000
 b68:	ldr	pc, [ip, #1216]!	; 0x4c0

00000b6c <memcpy@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #73728	; 0x12000
 b74:	ldr	pc, [ip, #1208]!	; 0x4b8

00000b78 <rb_outofmemory@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #73728	; 0x12000
 b80:	ldr	pc, [ip, #1200]!	; 0x4b0

00000b84 <operhash_delete@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #1192]!	; 0x4a8

00000b90 <sendto_realops_snomask@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #73728	; 0x12000
 b98:	ldr	pc, [ip, #1184]!	; 0x4a0

00000b9c <bandb_add@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #73728	; 0x12000
 ba4:	ldr	pc, [ip, #1176]!	; 0x498

00000ba8 <deactivate_conf@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #73728	; 0x12000
 bb0:	ldr	pc, [ip, #1168]!	; 0x490

00000bb4 <check_xlines@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #1160]!	; 0x488

00000bc0 <get_oper_name@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #1152]!	; 0x480

00000bcc <rb_free_rb_dlink_node@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #1144]!	; 0x478

00000bd8 <cluster_generic@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #1136]!	; 0x470

00000be4 <operhash_add@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #1128]!	; 0x468

00000bf0 <sendto_server@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #1120]!	; 0x460

00000bfc <malloc@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #73728	; 0x12000
 c04:	ldr	pc, [ip, #1112]!	; 0x458

00000c08 <__gmon_start__@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #73728	; 0x12000
 c10:	ldr	pc, [ip, #1104]!	; 0x450

00000c14 <free_conf@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #73728	; 0x12000
 c1c:	ldr	pc, [ip, #1096]!	; 0x448

00000c20 <rb_make_rb_dlink_node@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #73728	; 0x12000
 c28:	ldr	pc, [ip, #1088]!	; 0x440

00000c2c <strlen@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #73728	; 0x12000
 c34:	ldr	pc, [ip, #1080]!	; 0x438

00000c38 <find_xline_mask@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #73728	; 0x12000
 c40:	ldr	pc, [ip, #1072]!	; 0x430

00000c44 <ilog@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #73728	; 0x12000
 c4c:	ldr	pc, [ip, #1064]!	; 0x428

00000c50 <collapse@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #73728	; 0x12000
 c58:	ldr	pc, [ip, #1056]!	; 0x420

00000c5c <match@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #73728	; 0x12000
 c64:	ldr	pc, [ip, #1048]!	; 0x418

00000c68 <valid_temp_time@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #73728	; 0x12000
 c70:	ldr	pc, [ip, #1040]!	; 0x410

00000c74 <remove_reject_mask@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #1032]!	; 0x408

00000c80 <sendto_one_notice@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #1024]!	; 0x400

00000c8c <bandb_del@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c98 <valid_wild_card_simple@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #1008]!	; 0x3f0

00000ca4 <find_shared_conf@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #1000]!	; 0x3e8

00000cb0 <privilegeset_in_set@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #992]!	; 0x3e0

00000cbc <irccmp@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #984]!	; 0x3d8

00000cc8 <__assert_fail@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #976]!	; 0x3d0

Disassembly of section .text:

00000cd4 <call_weak_fn>:
     cd4:	ldr	r3, [pc, #20]	; cf0 <call_weak_fn+0x1c>
     cd8:	ldr	r2, [pc, #20]	; cf4 <call_weak_fn+0x20>
     cdc:	add	r3, pc, r3
     ce0:	ldr	r2, [r3, r2]
     ce4:	cmp	r2, #0
     ce8:	bxeq	lr
     cec:	b	c08 <__gmon_start__@plt>
     cf0:	.word	0x0001231c
     cf4:	.word	0x000000c0

00000cf8 <deregister_tm_clones>:
     cf8:	ldr	r3, [pc, #52]	; d34 <deregister_tm_clones+0x3c>
     cfc:	ldr	r0, [pc, #52]	; d38 <deregister_tm_clones+0x40>
     d00:	add	r3, pc, r3
     d04:	add	r0, pc, r0
     d08:	add	r3, r3, #3
     d0c:	sub	r3, r3, r0
     d10:	cmp	r3, #6
     d14:	ldr	r3, [pc, #32]	; d3c <deregister_tm_clones+0x44>
     d18:	add	r3, pc, r3
     d1c:	bxls	lr
     d20:	ldr	r2, [pc, #24]	; d40 <deregister_tm_clones+0x48>
     d24:	ldr	r3, [r3, r2]
     d28:	cmp	r3, #0
     d2c:	bxeq	lr
     d30:	bx	r3
     d34:	.word	0x00012494
     d38:	.word	0x00012490
     d3c:	.word	0x000122e0
     d40:	.word	0x000000a8

00000d44 <register_tm_clones>:
     d44:	ldr	r1, [pc, #56]	; d84 <register_tm_clones+0x40>
     d48:	ldr	r0, [pc, #56]	; d88 <register_tm_clones+0x44>
     d4c:	add	r1, pc, r1
     d50:	add	r0, pc, r0
     d54:	sub	r1, r1, r0
     d58:	ldr	r3, [pc, #44]	; d8c <register_tm_clones+0x48>
     d5c:	asr	r1, r1, #2
     d60:	add	r3, pc, r3
     d64:	add	r1, r1, r1, lsr #31
     d68:	asrs	r1, r1, #1
     d6c:	bxeq	lr
     d70:	ldr	r2, [pc, #24]	; d90 <register_tm_clones+0x4c>
     d74:	ldr	r3, [r3, r2]
     d78:	cmp	r3, #0
     d7c:	bxeq	lr
     d80:	bx	r3
     d84:	.word	0x00012448
     d88:	.word	0x00012444
     d8c:	.word	0x00012298
     d90:	.word	0x000000cc

00000d94 <__do_global_dtors_aux>:
     d94:	ldr	r3, [pc, #76]	; de8 <__do_global_dtors_aux+0x54>
     d98:	ldr	r2, [pc, #76]	; dec <__do_global_dtors_aux+0x58>
     d9c:	add	r3, pc, r3
     da0:	add	r2, pc, r2
     da4:	ldrb	r3, [r3]
     da8:	cmp	r3, #0
     dac:	bxne	lr
     db0:	ldr	r3, [pc, #56]	; df0 <__do_global_dtors_aux+0x5c>
     db4:	push	{r4, lr}
     db8:	ldr	r3, [r2, r3]
     dbc:	cmp	r3, #0
     dc0:	beq	dd0 <__do_global_dtors_aux+0x3c>
     dc4:	ldr	r3, [pc, #40]	; df4 <__do_global_dtors_aux+0x60>
     dc8:	ldr	r0, [pc, r3]
     dcc:	bl	b3c <__cxa_finalize@plt>
     dd0:	bl	cf8 <deregister_tm_clones>
     dd4:	ldr	r3, [pc, #28]	; df8 <__do_global_dtors_aux+0x64>
     dd8:	mov	r2, #1
     ddc:	add	r3, pc, r3
     de0:	strb	r2, [r3]
     de4:	pop	{r4, pc}
     de8:	.word	0x000123f8
     dec:	.word	0x00012258
     df0:	.word	0x000000a4
     df4:	.word	0x0001230c
     df8:	.word	0x000123b8

00000dfc <frame_dummy>:
     dfc:	ldr	r0, [pc, #56]	; e3c <frame_dummy+0x40>
     e00:	ldr	r3, [pc, #56]	; e40 <frame_dummy+0x44>
     e04:	add	r0, pc, r0
     e08:	ldr	r2, [r0]
     e0c:	add	r3, pc, r3
     e10:	cmp	r2, #0
     e14:	bne	e1c <frame_dummy+0x20>
     e18:	b	d44 <register_tm_clones>
     e1c:	ldr	r2, [pc, #32]	; e44 <frame_dummy+0x48>
     e20:	ldr	r3, [r3, r2]
     e24:	cmp	r3, #0
     e28:	beq	e18 <frame_dummy+0x1c>
     e2c:	push	{r4, lr}
     e30:	blx	r3
     e34:	pop	{r4, lr}
     e38:	b	d44 <register_tm_clones>
     e3c:	.word	0x000120f0
     e40:	.word	0x000121ec
     e44:	.word	0x000000c8

00000e48 <propagate_xline.part.0>:
     e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     e4c:	sub	sp, sp, #24
     e50:	ldr	r4, [pc, #140]	; ee4 <propagate_xline.part.0+0x9c>
     e54:	ldr	ip, [pc, #140]	; ee8 <propagate_xline.part.0+0xa0>
     e58:	add	r4, pc, r4
     e5c:	ldr	lr, [sp, #56]	; 0x38
     e60:	ldr	sl, [r4, ip]
     e64:	ldr	ip, [pc, #128]	; eec <propagate_xline.part.0+0xa4>
     e68:	ldr	r7, [sp, #60]	; 0x3c
     e6c:	mov	r6, r3
     e70:	ldr	r3, [sl]
     e74:	add	ip, pc, ip
     e78:	mov	r8, r2
     e7c:	str	lr, [sp, #12]
     e80:	mov	r2, r3
     e84:	str	ip, [sp]
     e88:	str	r1, [sp, #4]
     e8c:	str	r6, [sp, #8]
     e90:	str	r7, [sp, #16]
     e94:	mov	r3, #0
     e98:	mov	r5, r1
     e9c:	mov	r9, r0
     ea0:	bl	b30 <sendto_match_servs@plt>
     ea4:	ldr	r2, [pc, #68]	; ef0 <propagate_xline.part.0+0xa8>
     ea8:	ldr	ip, [pc, #68]	; ef4 <propagate_xline.part.0+0xac>
     eac:	ldr	r3, [sl]
     eb0:	ldr	r2, [r4, r2]
     eb4:	add	ip, pc, ip
     eb8:	mov	r0, r9
     ebc:	ldr	r2, [r2]
     ec0:	mov	r1, r5
     ec4:	str	r8, [sp, #8]
     ec8:	str	r7, [sp, #16]
     ecc:	str	r6, [sp, #12]
     ed0:	str	r5, [sp, #4]
     ed4:	str	ip, [sp]
     ed8:	bl	b30 <sendto_match_servs@plt>
     edc:	add	sp, sp, #24
     ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     ee4:	.word	0x000121a0
     ee8:	.word	0x000000b4
     eec:	.word	0x000012fc
     ef0:	.word	0x000000d4
     ef4:	.word	0x000012d0

00000ef8 <valid_xline>:
     ef8:	push	{r4, r5, r6, lr}
     efc:	cmp	r2, #0
     f00:	ldr	r5, [pc, #208]	; fd8 <valid_xline+0xe0>
     f04:	sub	sp, sp, #8
     f08:	mov	r4, r0
     f0c:	add	r5, pc, r5
     f10:	beq	f20 <valid_xline+0x28>
     f14:	ldrb	r3, [r2]
     f18:	cmp	r3, #0
     f1c:	bne	f68 <valid_xline+0x70>
     f20:	ldr	r3, [r4, #36]	; 0x24
     f24:	ldrh	r2, [r3, #80]	; 0x50
     f28:	cmp	r2, #32
     f2c:	beq	fa0 <valid_xline+0xa8>
     f30:	ldr	r2, [pc, #164]	; fdc <valid_xline+0xe4>
     f34:	add	r3, r4, #88	; 0x58
     f38:	ldr	r2, [r5, r2]
     f3c:	add	r2, r2, #88	; 0x58
     f40:	ldr	r1, [pc, #152]	; fe0 <valid_xline+0xe8>
     f44:	mov	r0, r4
     f48:	add	r1, pc, r1
     f4c:	str	r1, [sp]
     f50:	ldr	r1, [pc, #140]	; fe4 <valid_xline+0xec>
     f54:	add	r1, pc, r1
     f58:	bl	b54 <sendto_one@plt>
     f5c:	mov	r0, #0
     f60:	add	sp, sp, #8
     f64:	pop	{r4, r5, r6, pc}
     f68:	mov	r0, r1
     f6c:	bl	c98 <valid_wild_card_simple@plt>
     f70:	subs	r6, r0, #0
     f74:	movne	r0, #1
     f78:	bne	f60 <valid_xline+0x68>
     f7c:	ldr	r3, [pc, #100]	; fe8 <valid_xline+0xf0>
     f80:	ldr	r1, [pc, #100]	; fec <valid_xline+0xf4>
     f84:	mov	r0, r4
     f88:	ldr	r3, [r5, r3]
     f8c:	add	r1, pc, r1
     f90:	ldr	r2, [r3, #240]	; 0xf0
     f94:	bl	c80 <sendto_one_notice@plt>
     f98:	mov	r0, r6
     f9c:	b	f60 <valid_xline+0x68>
     fa0:	ldrb	r3, [r3, #396]	; 0x18c
     fa4:	cmp	r3, #0
     fa8:	beq	f30 <valid_xline+0x38>
     fac:	ldr	r3, [pc, #40]	; fdc <valid_xline+0xe4>
     fb0:	ldr	r2, [r5, r3]
     fb4:	ldrb	r3, [r2, #396]	; 0x18c
     fb8:	cmp	r3, #0
     fbc:	addeq	r2, r2, #88	; 0x58
     fc0:	addne	r2, r2, #396	; 0x18c
     fc4:	ldrb	r3, [r4, #396]	; 0x18c
     fc8:	cmp	r3, #0
     fcc:	addne	r3, r4, #396	; 0x18c
     fd0:	addeq	r3, r4, #88	; 0x58
     fd4:	b	f40 <valid_xline+0x48>
     fd8:	.word	0x000120ec
     fdc:	.word	0x000000d0
     fe0:	.word	0x00001280
     fe4:	.word	0x0000124c
     fe8:	.word	0x000000d8
     fec:	.word	0x00001244

00000ff0 <remove_xline>:
     ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ff4:	mov	r8, r0
     ff8:	ldr	r7, [pc, #956]	; 13bc <remove_xline+0x3cc>
     ffc:	ldr	r3, [pc, #956]	; 13c0 <remove_xline+0x3d0>
    1000:	add	r7, pc, r7
    1004:	sub	sp, sp, #28
    1008:	ldr	r9, [r7, r3]
    100c:	mov	r6, r1
    1010:	mov	sl, r2
    1014:	ldr	r4, [r9]
    1018:	cmp	r4, #0
    101c:	bne	1030 <remove_xline+0x40>
    1020:	b	11b4 <remove_xline+0x1c4>
    1024:	ldr	r4, [r4, #8]
    1028:	cmp	r4, #0
    102c:	beq	11b4 <remove_xline+0x1c4>
    1030:	ldr	r5, [r4]
    1034:	mov	r1, r6
    1038:	ldr	r0, [r5, #16]
    103c:	bl	cbc <irccmp@plt>
    1040:	cmp	r0, #0
    1044:	bne	1024 <remove_xline+0x34>
    1048:	ldr	r3, [r5, #44]	; 0x2c
    104c:	cmp	r3, #0
    1050:	beq	1220 <remove_xline+0x230>
    1054:	cmp	sl, #0
    1058:	beq	136c <remove_xline+0x37c>
    105c:	ldr	r3, [pc, #864]	; 13c4 <remove_xline+0x3d4>
    1060:	ldr	r3, [r7, r3]
    1064:	ldr	r4, [r3]
    1068:	cmp	r4, #0
    106c:	bne	1080 <remove_xline+0x90>
    1070:	b	13b4 <remove_xline+0x3c4>
    1074:	ldr	r4, [r4, #8]
    1078:	cmp	r4, #0
    107c:	beq	13b4 <remove_xline+0x3c4>
    1080:	ldr	r3, [r4]
    1084:	cmp	r5, r3
    1088:	bne	1074 <remove_xline+0x84>
    108c:	ldr	r1, [pc, #820]	; 13c8 <remove_xline+0x3d8>
    1090:	mov	r2, r6
    1094:	add	r1, pc, r1
    1098:	mov	r0, r8
    109c:	bl	c80 <sendto_one_notice@plt>
    10a0:	mov	r0, r8
    10a4:	bl	bc0 <get_oper_name@plt>
    10a8:	ldr	r2, [pc, #796]	; 13cc <remove_xline+0x3dc>
    10ac:	mov	r1, #0
    10b0:	add	r2, pc, r2
    10b4:	str	r6, [sp]
    10b8:	mov	r3, r0
    10bc:	mov	r0, #256	; 0x100
    10c0:	bl	b90 <sendto_realops_snomask@plt>
    10c4:	mov	r0, r8
    10c8:	bl	bc0 <get_oper_name@plt>
    10cc:	ldr	r1, [pc, #764]	; 13d0 <remove_xline+0x3e0>
    10d0:	mov	r3, r6
    10d4:	add	r1, pc, r1
    10d8:	mov	r2, r0
    10dc:	mov	r0, #7
    10e0:	bl	c44 <ilog@plt>
    10e4:	bl	b24 <rb_current_time@plt>
    10e8:	ldr	r3, [r5, #40]	; 0x28
    10ec:	cmp	r0, r3
    10f0:	mov	r9, r0
    10f4:	strgt	r0, [r5, #40]	; 0x28
    10f8:	movgt	r3, r0
    10fc:	addle	r3, r3, #1
    1100:	strle	r3, [r5, #40]	; 0x28
    1104:	str	r3, [r5, #36]	; 0x24
    1108:	ldr	r0, [r5, #12]
    110c:	bl	b84 <operhash_delete@plt>
    1110:	mov	r0, r8
    1114:	bl	bc0 <get_oper_name@plt>
    1118:	bl	be4 <operhash_add@plt>
    111c:	ldr	r3, [r5, #4]
    1120:	ldr	lr, [pc, #684]	; 13d4 <remove_xline+0x3e4>
    1124:	ldr	r2, [pc, #684]	; 13d8 <remove_xline+0x3e8>
    1128:	orr	r3, r3, #8912896	; 0x880000
    112c:	str	r3, [r5, #4]
    1130:	ldr	sl, [r5, #40]	; 0x28
    1134:	ldr	fp, [r5, #44]	; 0x2c
    1138:	mov	r6, #0
    113c:	sub	fp, fp, sl
    1140:	ldr	ip, [pc, #660]	; 13dc <remove_xline+0x3ec>
    1144:	add	r8, r8, #396	; 0x18c
    1148:	add	ip, pc, ip
    114c:	mov	r3, r6
    1150:	mov	r1, r6
    1154:	str	r0, [r5, #12]
    1158:	ldr	r0, [r7, lr]
    115c:	ldr	r2, [r7, r2]
    1160:	str	fp, [sp, #20]
    1164:	ldr	r0, [r0]
    1168:	ldr	r2, [r2]
    116c:	str	sl, [sp, #12]
    1170:	orr	r2, r0, r2
    1174:	str	r6, [sp, #16]
    1178:	ldr	r0, [r5, #16]
    117c:	str	ip, [sp]
    1180:	str	r0, [sp, #8]
    1184:	str	r8, [sp, #4]
    1188:	mov	r0, r6
    118c:	bl	bf0 <sendto_server@plt>
    1190:	mov	r1, r6
    1194:	ldr	r0, [r5, #16]
    1198:	bl	c74 <remove_reject_mask@plt>
    119c:	mov	r2, r9
    11a0:	mov	r1, r4
    11a4:	mov	r0, r5
    11a8:	add	sp, sp, #28
    11ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11b0:	b	ba8 <deactivate_conf@plt>
    11b4:	cmp	sl, #0
    11b8:	bne	11d8 <remove_xline+0x1e8>
    11bc:	ldr	r1, [pc, #540]	; 13e0 <remove_xline+0x3f0>
    11c0:	mov	r2, r6
    11c4:	mov	r0, r8
    11c8:	add	r1, pc, r1
    11cc:	add	sp, sp, #28
    11d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11d4:	b	c80 <sendto_one_notice@plt>
    11d8:	ldr	r3, [pc, #516]	; 13e4 <remove_xline+0x3f4>
    11dc:	ldr	r3, [r7, r3]
    11e0:	ldr	r3, [r3, #8]
    11e4:	cmp	r3, #0
    11e8:	beq	11bc <remove_xline+0x1cc>
    11ec:	ldr	r3, [pc, #500]	; 13e8 <remove_xline+0x3f8>
    11f0:	ldr	r0, [pc, #500]	; 13ec <remove_xline+0x3fc>
    11f4:	ldr	r1, [pc, #500]	; 13f0 <remove_xline+0x400>
    11f8:	ldr	r3, [r7, r3]
    11fc:	add	r0, pc, r0
    1200:	str	r6, [sp, #4]
    1204:	mov	r2, #64	; 0x40
    1208:	ldr	r3, [r3]
    120c:	add	r1, pc, r1
    1210:	str	r0, [sp]
    1214:	mov	r0, r8
    1218:	bl	bd8 <cluster_generic@plt>
    121c:	b	11bc <remove_xline+0x1cc>
    1220:	cmp	sl, #0
    1224:	beq	123c <remove_xline+0x24c>
    1228:	ldr	r3, [pc, #436]	; 13e4 <remove_xline+0x3f4>
    122c:	ldr	r3, [r7, r3]
    1230:	ldr	r3, [r3, #8]
    1234:	cmp	r3, #0
    1238:	bne	1380 <remove_xline+0x390>
    123c:	ldr	r7, [r5, #36]	; 0x24
    1240:	cmp	r7, #0
    1244:	beq	12fc <remove_xline+0x30c>
    1248:	ldr	r1, [pc, #420]	; 13f4 <remove_xline+0x404>
    124c:	mov	r2, r6
    1250:	add	r1, pc, r1
    1254:	mov	r0, r8
    1258:	bl	c80 <sendto_one_notice@plt>
    125c:	mov	r0, r8
    1260:	bl	bc0 <get_oper_name@plt>
    1264:	ldr	r2, [pc, #396]	; 13f8 <remove_xline+0x408>
    1268:	mov	r1, #0
    126c:	add	r2, pc, r2
    1270:	str	r6, [sp]
    1274:	mov	r3, r0
    1278:	mov	r0, #256	; 0x100
    127c:	bl	b90 <sendto_realops_snomask@plt>
    1280:	mov	r0, r8
    1284:	bl	bc0 <get_oper_name@plt>
    1288:	ldr	r1, [pc, #364]	; 13fc <remove_xline+0x40c>
    128c:	mov	r3, r6
    1290:	add	r1, pc, r1
    1294:	mov	r2, r0
    1298:	mov	r0, #7
    129c:	bl	c44 <ilog@plt>
    12a0:	mov	r1, #0
    12a4:	ldr	r0, [r5, #16]
    12a8:	bl	c74 <remove_reject_mask@plt>
    12ac:	mov	r0, r5
    12b0:	bl	c14 <free_conf@plt>
    12b4:	ldmib	r4, {r2, r3}
    12b8:	mov	r0, r4
    12bc:	cmp	r3, #0
    12c0:	strne	r2, [r3, #4]
    12c4:	ldrne	r2, [r4, #4]
    12c8:	streq	r2, [r9, #4]
    12cc:	cmp	r2, #0
    12d0:	strne	r3, [r2, #8]
    12d4:	streq	r3, [r9]
    12d8:	ldr	r3, [r9, #8]
    12dc:	mov	r2, #0
    12e0:	sub	r3, r3, #1
    12e4:	str	r2, [r4, #4]
    12e8:	str	r2, [r4, #8]
    12ec:	str	r3, [r9, #8]
    12f0:	add	sp, sp, #28
    12f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12f8:	b	bcc <rb_free_rb_dlink_node@plt>
    12fc:	mov	r2, r7
    1300:	ldr	r1, [r5, #16]
    1304:	mov	r0, #2
    1308:	bl	c8c <bandb_del@plt>
    130c:	ldr	r1, [pc, #236]	; 1400 <remove_xline+0x410>
    1310:	ldr	r2, [r5, #16]
    1314:	add	r1, pc, r1
    1318:	mov	r0, r8
    131c:	bl	c80 <sendto_one_notice@plt>
    1320:	mov	r0, r8
    1324:	bl	bc0 <get_oper_name@plt>
    1328:	ldr	r3, [r5, #16]
    132c:	ldr	r2, [pc, #208]	; 1404 <remove_xline+0x414>
    1330:	mov	r1, r7
    1334:	str	r3, [sp]
    1338:	add	r2, pc, r2
    133c:	mov	r3, r0
    1340:	mov	r0, #256	; 0x100
    1344:	bl	b90 <sendto_realops_snomask@plt>
    1348:	mov	r0, r8
    134c:	bl	bc0 <get_oper_name@plt>
    1350:	ldr	r1, [pc, #176]	; 1408 <remove_xline+0x418>
    1354:	ldr	r3, [r5, #16]
    1358:	add	r1, pc, r1
    135c:	mov	r2, r0
    1360:	mov	r0, #7
    1364:	bl	c44 <ilog@plt>
    1368:	b	12a0 <remove_xline+0x2b0>
    136c:	ldr	r1, [pc, #152]	; 140c <remove_xline+0x41c>
    1370:	mov	r2, r6
    1374:	mov	r0, r8
    1378:	add	r1, pc, r1
    137c:	b	11cc <remove_xline+0x1dc>
    1380:	ldr	r3, [pc, #96]	; 13e8 <remove_xline+0x3f8>
    1384:	ldr	r0, [pc, #132]	; 1410 <remove_xline+0x420>
    1388:	ldr	r1, [pc, #132]	; 1414 <remove_xline+0x424>
    138c:	ldr	r3, [r7, r3]
    1390:	add	r0, pc, r0
    1394:	str	r6, [sp, #4]
    1398:	mov	r2, #64	; 0x40
    139c:	ldr	r3, [r3]
    13a0:	add	r1, pc, r1
    13a4:	str	r0, [sp]
    13a8:	mov	r0, r8
    13ac:	bl	bd8 <cluster_generic@plt>
    13b0:	b	123c <remove_xline+0x24c>
    13b4:	add	sp, sp, #28
    13b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    13bc:	.word	0x00011ff8
    13c0:	.word	0x000000b0
    13c4:	.word	0x000000ac
    13c8:	.word	0x000011dc
    13cc:	.word	0x00001250
    13d0:	.word	0x000011dc
    13d4:	.word	0x000000b8
    13d8:	.word	0x000000bc
    13dc:	.word	0x00001100
    13e0:	.word	0x00001124
    13e4:	.word	0x000000c4
    13e8:	.word	0x000000b4
    13ec:	.word	0x000013a4
    13f0:	.word	0x0000105c
    13f4:	.word	0x00001020
    13f8:	.word	0x00001050
    13fc:	.word	0x00001020
    1400:	.word	0x00000f5c
    1404:	.word	0x00000f54
    1408:	.word	0x00000f58
    140c:	.word	0x00000e9c
    1410:	.word	0x00001210
    1414:	.word	0x00000ec8

00001418 <mo_unxline>:
    1418:	push	{r4, r5, r6, r7, lr}
    141c:	mov	r4, r2
    1420:	ldr	r2, [r2, #24]
    1424:	sub	sp, sp, #12
    1428:	ldr	r5, [pc, #336]	; 1580 <mo_unxline+0x168>
    142c:	cmp	r2, #0
    1430:	add	r5, pc, r5
    1434:	ldr	r6, [sp, #32]
    1438:	beq	1480 <mo_unxline+0x68>
    143c:	ldr	r0, [r2, #36]	; 0x24
    1440:	cmp	r0, #0
    1444:	beq	1480 <mo_unxline+0x68>
    1448:	ldr	r1, [pc, #308]	; 1584 <mo_unxline+0x16c>
    144c:	mov	r7, r3
    1450:	add	r1, pc, r1
    1454:	bl	cb0 <privilegeset_in_set@plt>
    1458:	cmp	r0, #0
    145c:	beq	1480 <mo_unxline+0x68>
    1460:	cmp	r7, #4
    1464:	beq	14b4 <mo_unxline+0x9c>
    1468:	mov	r2, #1
    146c:	ldr	r1, [r6, #4]
    1470:	mov	r0, r4
    1474:	add	sp, sp, #12
    1478:	pop	{r4, r5, r6, r7, lr}
    147c:	b	ff0 <remove_xline>
    1480:	ldr	r2, [pc, #256]	; 1588 <mo_unxline+0x170>
    1484:	ldr	r1, [pc, #256]	; 158c <mo_unxline+0x174>
    1488:	add	r3, r4, #88	; 0x58
    148c:	add	r1, pc, r1
    1490:	ldr	r2, [r5, r2]
    1494:	str	r1, [sp, #32]
    1498:	ldr	r1, [pc, #240]	; 1590 <mo_unxline+0x178>
    149c:	mov	r0, r4
    14a0:	add	r2, r2, #88	; 0x58
    14a4:	add	r1, pc, r1
    14a8:	add	sp, sp, #12
    14ac:	pop	{r4, r5, r6, r7, lr}
    14b0:	b	b54 <sendto_one@plt>
    14b4:	ldr	r1, [pc, #216]	; 1594 <mo_unxline+0x17c>
    14b8:	ldr	r0, [r6, #8]
    14bc:	add	r1, pc, r1
    14c0:	bl	cbc <irccmp@plt>
    14c4:	subs	r7, r0, #0
    14c8:	bne	1468 <mo_unxline+0x50>
    14cc:	ldr	r3, [r4, #24]
    14d0:	cmp	r3, #0
    14d4:	beq	14f8 <mo_unxline+0xe0>
    14d8:	ldr	r0, [r3, #36]	; 0x24
    14dc:	cmp	r0, #0
    14e0:	beq	14f8 <mo_unxline+0xe0>
    14e4:	ldr	r1, [pc, #172]	; 1598 <mo_unxline+0x180>
    14e8:	add	r1, pc, r1
    14ec:	bl	cb0 <privilegeset_in_set@plt>
    14f0:	cmp	r0, #0
    14f4:	bne	1524 <mo_unxline+0x10c>
    14f8:	ldr	r2, [pc, #136]	; 1588 <mo_unxline+0x170>
    14fc:	ldr	r1, [pc, #152]	; 159c <mo_unxline+0x184>
    1500:	add	r3, r4, #88	; 0x58
    1504:	add	r1, pc, r1
    1508:	ldr	r2, [r5, r2]
    150c:	str	r1, [sp, #32]
    1510:	ldr	r1, [pc, #136]	; 15a0 <mo_unxline+0x188>
    1514:	mov	r0, r4
    1518:	add	r2, r2, #88	; 0x58
    151c:	add	r1, pc, r1
    1520:	b	14a8 <mo_unxline+0x90>
    1524:	ldr	r3, [pc, #120]	; 15a4 <mo_unxline+0x18c>
    1528:	ldr	r1, [pc, #120]	; 15a8 <mo_unxline+0x190>
    152c:	ldr	r2, [r6, #12]
    1530:	ldr	r3, [r5, r3]
    1534:	add	r1, pc, r1
    1538:	ldr	r0, [r6, #4]
    153c:	ldr	r3, [r3]
    1540:	str	r1, [sp]
    1544:	ldr	r1, [pc, #96]	; 15ac <mo_unxline+0x194>
    1548:	str	r0, [sp, #4]
    154c:	add	r1, pc, r1
    1550:	mov	r0, r4
    1554:	bl	b0c <propagate_generic@plt>
    1558:	ldr	r3, [pc, #40]	; 1588 <mo_unxline+0x170>
    155c:	ldr	r0, [r6, #12]
    1560:	ldr	r1, [r5, r3]
    1564:	add	r1, r1, #88	; 0x58
    1568:	bl	c5c <match@plt>
    156c:	cmp	r0, #0
    1570:	movne	r2, r7
    1574:	bne	146c <mo_unxline+0x54>
    1578:	add	sp, sp, #12
    157c:	pop	{r4, r5, r6, r7, pc}
    1580:	.word	0x00011bc8
    1584:	.word	0x00000f0c
    1588:	.word	0x000000d0
    158c:	.word	0x00000ec8
    1590:	.word	0x00000e88
    1594:	.word	0x00000eac
    1598:	.word	0x00000e90
    159c:	.word	0x00000e68
    15a0:	.word	0x00000e10
    15a4:	.word	0x000000b4
    15a8:	.word	0x0000106c
    15ac:	.word	0x00000d1c

000015b0 <handle_remote_unxline>:
    15b0:	ldr	r2, [r0, #32]
    15b4:	push	{r4, r5, r6, lr}
    15b8:	add	r2, r2, #88	; 0x58
    15bc:	mov	r4, r0
    15c0:	mov	r5, r1
    15c4:	mov	r3, #64	; 0x40
    15c8:	add	r1, r0, #163	; 0xa3
    15cc:	add	r0, r0, #152	; 0x98
    15d0:	bl	ca4 <find_shared_conf@plt>
    15d4:	cmp	r0, #0
    15d8:	popeq	{r4, r5, r6, pc}
    15dc:	mov	r1, r5
    15e0:	mov	r0, r4
    15e4:	mov	r2, #0
    15e8:	pop	{r4, r5, r6, lr}
    15ec:	b	ff0 <remove_xline>

000015f0 <me_unxline>:
    15f0:	ldrh	r3, [r2, #80]	; 0x50
    15f4:	ldr	r1, [sp]
    15f8:	cmp	r3, #64	; 0x40
    15fc:	bxne	lr
    1600:	ldr	r3, [r2, #24]
    1604:	cmp	r3, #0
    1608:	bxeq	lr
    160c:	ldr	r1, [r1, #4]
    1610:	mov	r0, r2
    1614:	b	15b0 <handle_remote_unxline>

00001618 <ms_unxline>:
    1618:	push	{r4, r5, r6, lr}
    161c:	sub	sp, sp, #8
    1620:	ldr	r4, [pc, #144]	; 16b8 <ms_unxline+0xa0>
    1624:	ldr	r3, [pc, #144]	; 16bc <ms_unxline+0xa4>
    1628:	add	r4, pc, r4
    162c:	ldr	r5, [sp, #24]
    1630:	ldr	r3, [r4, r3]
    1634:	ldr	r1, [pc, #132]	; 16c0 <ms_unxline+0xa8>
    1638:	ldr	ip, [r5, #4]
    163c:	add	r1, pc, r1
    1640:	ldr	r0, [r5, #8]
    1644:	ldr	r3, [r3]
    1648:	str	r1, [sp]
    164c:	ldr	r1, [pc, #112]	; 16c4 <ms_unxline+0xac>
    1650:	mov	r6, r2
    1654:	str	r0, [sp, #4]
    1658:	mov	r2, ip
    165c:	mov	r0, r6
    1660:	add	r1, pc, r1
    1664:	bl	b0c <propagate_generic@plt>
    1668:	ldr	r3, [pc, #88]	; 16c8 <ms_unxline+0xb0>
    166c:	ldr	r0, [r5, #4]
    1670:	ldr	r1, [r4, r3]
    1674:	add	r1, r1, #88	; 0x58
    1678:	bl	c5c <match@plt>
    167c:	cmp	r0, #0
    1680:	beq	1690 <ms_unxline+0x78>
    1684:	ldrh	r3, [r6, #80]	; 0x50
    1688:	cmp	r3, #64	; 0x40
    168c:	beq	1698 <ms_unxline+0x80>
    1690:	add	sp, sp, #8
    1694:	pop	{r4, r5, r6, pc}
    1698:	ldr	r3, [r6, #24]
    169c:	cmp	r3, #0
    16a0:	beq	1690 <ms_unxline+0x78>
    16a4:	ldr	r1, [r5, #8]
    16a8:	mov	r0, r6
    16ac:	add	sp, sp, #8
    16b0:	pop	{r4, r5, r6, lr}
    16b4:	b	15b0 <handle_remote_unxline>
    16b8:	.word	0x000119d0
    16bc:	.word	0x000000b4
    16c0:	.word	0x00000f64
    16c4:	.word	0x00000c08
    16c8:	.word	0x000000d0

000016cc <apply_xline>:
    16cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16d0:	sub	sp, sp, #44	; 0x2c
    16d4:	mov	r8, r1
    16d8:	mov	r6, r2
    16dc:	mov	r7, r3
    16e0:	mov	r5, r0
    16e4:	ldrb	sl, [sp, #80]	; 0x50
    16e8:	bl	b18 <make_conf@plt>
    16ec:	mov	r3, #128	; 0x80
    16f0:	ldr	r9, [pc, #948]	; 1aac <apply_xline+0x3e0>
    16f4:	add	r9, pc, r9
    16f8:	str	r3, [r0]
    16fc:	mov	r4, r0
    1700:	bl	b24 <rb_current_time@plt>
    1704:	str	r0, [r4, #40]	; 0x28
    1708:	mov	r0, r8
    170c:	bl	c2c <strlen@plt>
    1710:	add	fp, r0, #1
    1714:	mov	r0, fp
    1718:	bl	bfc <malloc@plt>
    171c:	subs	r3, r0, #0
    1720:	beq	190c <apply_xline+0x240>
    1724:	mov	r2, fp
    1728:	mov	r1, r8
    172c:	str	r3, [sp, #36]	; 0x24
    1730:	bl	b6c <memcpy@plt>
    1734:	ldr	r3, [sp, #36]	; 0x24
    1738:	mov	r0, r6
    173c:	str	r3, [r4, #16]
    1740:	bl	c2c <strlen@plt>
    1744:	add	fp, r0, #1
    1748:	mov	r0, fp
    174c:	bl	bfc <malloc@plt>
    1750:	subs	r3, r0, #0
    1754:	str	r3, [sp, #36]	; 0x24
    1758:	beq	190c <apply_xline+0x240>
    175c:	mov	r2, fp
    1760:	mov	r1, r6
    1764:	bl	b6c <memcpy@plt>
    1768:	ldr	r3, [sp, #36]	; 0x24
    176c:	ldr	r0, [r4, #16]
    1770:	str	r3, [r4, #20]
    1774:	bl	c50 <collapse@plt>
    1778:	mov	r0, r5
    177c:	bl	bc0 <get_oper_name@plt>
    1780:	bl	be4 <operhash_add@plt>
    1784:	cmp	sl, #0
    1788:	str	r0, [r4, #12]
    178c:	bne	1920 <apply_xline+0x254>
    1790:	cmp	r7, #0
    1794:	ble	1874 <apply_xline+0x1a8>
    1798:	bl	b24 <rb_current_time@plt>
    179c:	add	r0, r7, r0
    17a0:	str	r0, [r4, #36]	; 0x24
    17a4:	mov	r0, r5
    17a8:	bl	bc0 <get_oper_name@plt>
    17ac:	ldr	r2, [pc, #764]	; 1ab0 <apply_xline+0x3e4>
    17b0:	asr	r3, r7, #31
    17b4:	str	r6, [sp, #8]
    17b8:	smull	r1, r2, r2, r7
    17bc:	ldr	ip, [r4, #16]
    17c0:	add	r7, r2, r7
    17c4:	ldr	r2, [pc, #744]	; 1ab4 <apply_xline+0x3e8>
    17c8:	rsb	r7, r3, r7, asr #5
    17cc:	mov	r1, sl
    17d0:	stm	sp, {r7, ip}
    17d4:	add	r2, pc, r2
    17d8:	mov	r3, r0
    17dc:	mov	r0, #256	; 0x100
    17e0:	bl	b90 <sendto_realops_snomask@plt>
    17e4:	mov	r0, r5
    17e8:	bl	bc0 <get_oper_name@plt>
    17ec:	ldr	r1, [pc, #708]	; 1ab8 <apply_xline+0x3ec>
    17f0:	mov	r3, r7
    17f4:	add	r1, pc, r1
    17f8:	str	r6, [sp, #4]
    17fc:	str	r8, [sp]
    1800:	mov	r2, r0
    1804:	mov	r0, #7
    1808:	bl	c44 <ilog@plt>
    180c:	ldr	r1, [pc, #680]	; 1abc <apply_xline+0x3f0>
    1810:	mov	r2, r7
    1814:	mov	r0, r5
    1818:	ldr	r3, [r4, #16]
    181c:	add	r1, pc, r1
    1820:	bl	c80 <sendto_one_notice@plt>
    1824:	bl	c20 <rb_make_rb_dlink_node@plt>
    1828:	cmp	r0, #0
    182c:	beq	1a8c <apply_xline+0x3c0>
    1830:	ldr	r3, [pc, #648]	; 1ac0 <apply_xline+0x3f4>
    1834:	mov	r2, #0
    1838:	str	r2, [r0, #4]
    183c:	str	r4, [r0]
    1840:	ldr	r3, [r9, r3]
    1844:	ldr	r2, [r3]
    1848:	cmp	r2, #0
    184c:	str	r2, [r0, #8]
    1850:	strne	r0, [r2, #4]
    1854:	beq	1910 <apply_xline+0x244>
    1858:	ldr	r2, [r3, #8]
    185c:	str	r0, [r3]
    1860:	add	r2, r2, #1
    1864:	str	r2, [r3, #8]
    1868:	add	sp, sp, #44	; 0x2c
    186c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1870:	b	bb4 <check_xlines@plt>
    1874:	mov	r0, r5
    1878:	bl	bc0 <get_oper_name@plt>
    187c:	ldr	r3, [r4, #20]
    1880:	ldr	r2, [pc, #572]	; 1ac4 <apply_xline+0x3f8>
    1884:	str	r3, [sp, #4]
    1888:	ldr	r3, [r4, #16]
    188c:	mov	r1, sl
    1890:	str	r3, [sp]
    1894:	add	r2, pc, r2
    1898:	mov	r3, r0
    189c:	mov	r0, #256	; 0x100
    18a0:	bl	b90 <sendto_realops_snomask@plt>
    18a4:	ldr	r1, [pc, #540]	; 1ac8 <apply_xline+0x3fc>
    18a8:	ldr	r3, [r4, #20]
    18ac:	ldr	r2, [r4, #16]
    18b0:	mov	r0, r5
    18b4:	add	r1, pc, r1
    18b8:	bl	c80 <sendto_one_notice@plt>
    18bc:	ldr	r2, [r4, #16]
    18c0:	str	sl, [sp, #8]
    18c4:	str	sl, [sp, #4]
    18c8:	ldr	r1, [r4, #20]
    18cc:	mov	r3, sl
    18d0:	str	r1, [sp]
    18d4:	mov	r0, #2
    18d8:	mov	r1, r5
    18dc:	bl	b9c <bandb_add@plt>
    18e0:	mov	r0, r5
    18e4:	bl	bc0 <get_oper_name@plt>
    18e8:	ldr	r2, [r4, #20]
    18ec:	ldr	r1, [pc, #472]	; 1acc <apply_xline+0x400>
    18f0:	str	r2, [sp]
    18f4:	mov	r3, r8
    18f8:	add	r1, pc, r1
    18fc:	mov	r2, r0
    1900:	mov	r0, #7
    1904:	bl	c44 <ilog@plt>
    1908:	b	1824 <apply_xline+0x158>
    190c:	bl	b78 <rb_outofmemory@plt>
    1910:	ldr	r2, [r3, #4]
    1914:	cmp	r2, #0
    1918:	streq	r0, [r3, #4]
    191c:	b	1858 <apply_xline+0x18c>
    1920:	ldr	r3, [r4, #4]
    1924:	orr	r3, r3, #8912896	; 0x880000
    1928:	str	r3, [r4, #4]
    192c:	bl	b24 <rb_current_time@plt>
    1930:	add	r0, r0, r7
    1934:	str	r0, [r4, #36]	; 0x24
    1938:	str	r0, [r4, #44]	; 0x2c
    193c:	mov	r0, r4
    1940:	bl	b60 <replace_old_ban@plt>
    1944:	bl	c20 <rb_make_rb_dlink_node@plt>
    1948:	subs	r3, r0, #0
    194c:	beq	1a8c <apply_xline+0x3c0>
    1950:	ldr	r2, [pc, #376]	; 1ad0 <apply_xline+0x404>
    1954:	mov	r1, #0
    1958:	str	r1, [r3, #4]
    195c:	str	r4, [r3]
    1960:	ldr	r2, [r9, r2]
    1964:	ldr	r1, [r2]
    1968:	cmp	r1, #0
    196c:	str	r1, [r3, #8]
    1970:	strne	r3, [r1, #4]
    1974:	beq	1a7c <apply_xline+0x3b0>
    1978:	ldr	r1, [r2, #8]
    197c:	mov	r0, r5
    1980:	add	r1, r1, #1
    1984:	str	r1, [r2, #8]
    1988:	str	r3, [r2]
    198c:	bl	bc0 <get_oper_name@plt>
    1990:	ldr	r2, [pc, #280]	; 1ab0 <apply_xline+0x3e4>
    1994:	asr	r3, r7, #31
    1998:	str	r6, [sp, #8]
    199c:	smull	r1, r2, r2, r7
    19a0:	ldr	r1, [r4, #16]
    19a4:	add	r7, r2, r7
    19a8:	ldr	r2, [pc, #292]	; 1ad4 <apply_xline+0x408>
    19ac:	rsb	r7, r3, r7, asr #5
    19b0:	str	r1, [sp, #4]
    19b4:	add	r2, pc, r2
    19b8:	mov	r1, #0
    19bc:	str	r7, [sp]
    19c0:	mov	r3, r0
    19c4:	mov	r0, #256	; 0x100
    19c8:	bl	b90 <sendto_realops_snomask@plt>
    19cc:	mov	r0, r5
    19d0:	bl	bc0 <get_oper_name@plt>
    19d4:	ldr	r1, [pc, #252]	; 1ad8 <apply_xline+0x40c>
    19d8:	mov	r3, r7
    19dc:	str	r6, [sp, #4]
    19e0:	str	r8, [sp]
    19e4:	add	r1, pc, r1
    19e8:	mov	r2, r0
    19ec:	mov	r0, #7
    19f0:	bl	c44 <ilog@plt>
    19f4:	ldr	r1, [pc, #224]	; 1adc <apply_xline+0x410>
    19f8:	mov	r2, r7
    19fc:	ldr	r3, [r4, #16]
    1a00:	mov	r0, r5
    1a04:	add	r1, pc, r1
    1a08:	bl	c80 <sendto_one_notice@plt>
    1a0c:	ldr	r1, [pc, #204]	; 1ae0 <apply_xline+0x414>
    1a10:	ldr	r2, [pc, #204]	; 1ae4 <apply_xline+0x418>
    1a14:	ldr	r3, [r4, #40]	; 0x28
    1a18:	ldr	r0, [r9, r1]
    1a1c:	ldr	r2, [r9, r2]
    1a20:	str	r6, [sp, #24]
    1a24:	ldr	r1, [r4, #44]	; 0x2c
    1a28:	ldr	ip, [r0]
    1a2c:	sub	r1, r1, r3
    1a30:	str	r1, [sp, #20]
    1a34:	ldr	r1, [r4, #36]	; 0x24
    1a38:	ldr	r2, [r2]
    1a3c:	sub	r1, r1, r3
    1a40:	str	r1, [sp, #16]
    1a44:	ldr	r1, [pc, #156]	; 1ae8 <apply_xline+0x41c>
    1a48:	str	r3, [sp, #12]
    1a4c:	ldr	r0, [r4, #16]
    1a50:	mov	r3, #0
    1a54:	add	r1, pc, r1
    1a58:	add	r5, r5, #396	; 0x18c
    1a5c:	str	r0, [sp, #8]
    1a60:	str	r1, [sp]
    1a64:	orr	r2, ip, r2
    1a68:	str	r5, [sp, #4]
    1a6c:	mov	r1, r3
    1a70:	mov	r0, r3
    1a74:	bl	bf0 <sendto_server@plt>
    1a78:	b	1824 <apply_xline+0x158>
    1a7c:	ldr	r1, [r2, #4]
    1a80:	cmp	r1, #0
    1a84:	streq	r3, [r2, #4]
    1a88:	b	1978 <apply_xline+0x2ac>
    1a8c:	ldr	r3, [pc, #88]	; 1aec <apply_xline+0x420>
    1a90:	ldr	r1, [pc, #88]	; 1af0 <apply_xline+0x424>
    1a94:	ldr	r0, [pc, #88]	; 1af4 <apply_xline+0x428>
    1a98:	add	r3, pc, r3
    1a9c:	mov	r2, #144	; 0x90
    1aa0:	add	r1, pc, r1
    1aa4:	add	r0, pc, r0
    1aa8:	bl	cc8 <__assert_fail@plt>
    1aac:	.word	0x00011904
    1ab0:	.word	0x88888889
    1ab4:	.word	0x00000c60
    1ab8:	.word	0x00000bec
    1abc:	.word	0x00000c48
    1ac0:	.word	0x000000b0
    1ac4:	.word	0x00000bf8
    1ac8:	.word	0x00000bf8
    1acc:	.word	0x00000bd0
    1ad0:	.word	0x000000ac
    1ad4:	.word	0x000009fc
    1ad8:	.word	0x000009fc
    1adc:	.word	0x000009ec
    1ae0:	.word	0x000000b8
    1ae4:	.word	0x000000bc
    1ae8:	.word	0x000009c0
    1aec:	.word	0x00000694
    1af0:	.word	0x000008e8
    1af4:	.word	0x00000900

00001af8 <mo_xline>:
    1af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1afc:	mov	fp, r3
    1b00:	ldr	r3, [r2, #24]
    1b04:	sub	sp, sp, #44	; 0x2c
    1b08:	ldr	r5, [pc, #1064]	; 1f38 <mo_xline+0x440>
    1b0c:	cmp	r3, #0
    1b10:	add	r5, pc, r5
    1b14:	mov	r4, r2
    1b18:	ldr	r7, [sp, #80]	; 0x50
    1b1c:	beq	1b4c <mo_xline+0x54>
    1b20:	ldr	r0, [r3, #36]	; 0x24
    1b24:	cmp	r0, #0
    1b28:	beq	1b4c <mo_xline+0x54>
    1b2c:	ldr	r3, [pc, #1032]	; 1f3c <mo_xline+0x444>
    1b30:	ldr	r1, [pc, #1032]	; 1f40 <mo_xline+0x448>
    1b34:	ldr	r3, [r5, r3]
    1b38:	add	r1, pc, r1
    1b3c:	ldr	sl, [r3, #324]	; 0x144
    1b40:	bl	cb0 <privilegeset_in_set@plt>
    1b44:	cmp	r0, #0
    1b48:	bne	1b80 <mo_xline+0x88>
    1b4c:	ldr	r2, [pc, #1008]	; 1f44 <mo_xline+0x44c>
    1b50:	ldr	r1, [pc, #1008]	; 1f48 <mo_xline+0x450>
    1b54:	add	r3, r4, #88	; 0x58
    1b58:	add	r1, pc, r1
    1b5c:	ldr	r2, [r5, r2]
    1b60:	str	r1, [sp, #80]	; 0x50
    1b64:	ldr	r1, [pc, #992]	; 1f4c <mo_xline+0x454>
    1b68:	mov	r0, r4
    1b6c:	add	r2, r2, #88	; 0x58
    1b70:	add	r1, pc, r1
    1b74:	add	sp, sp, #44	; 0x2c
    1b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1b7c:	b	b54 <sendto_one@plt>
    1b80:	ldr	r0, [r7, #4]
    1b84:	bl	c68 <valid_temp_time@plt>
    1b88:	subs	r6, r0, #0
    1b8c:	movlt	r1, #4
    1b90:	movge	r1, #8
    1b94:	movlt	r0, #3
    1b98:	movge	r0, #4
    1b9c:	movlt	r3, #2
    1ba0:	movge	r3, #3
    1ba4:	movlt	r2, #1
    1ba8:	movge	r2, #2
    1bac:	movlt	r6, #0
    1bb0:	cmp	fp, r0
    1bb4:	ldr	r8, [r7, r1]
    1bb8:	movle	r9, #0
    1bbc:	bgt	1cd8 <mo_xline+0x1e0>
    1bc0:	cmp	r3, fp
    1bc4:	addlt	r3, r7, r3, lsl #2
    1bc8:	bge	1ca4 <mo_xline+0x1ac>
    1bcc:	ldr	r7, [r3]
    1bd0:	cmp	r7, #0
    1bd4:	beq	1ca4 <mo_xline+0x1ac>
    1bd8:	ldrb	r3, [r7]
    1bdc:	cmp	r3, #0
    1be0:	beq	1ca4 <mo_xline+0x1ac>
    1be4:	cmp	r9, #0
    1be8:	beq	1d78 <mo_xline+0x280>
    1bec:	cmp	r6, #0
    1bf0:	beq	1d54 <mo_xline+0x25c>
    1bf4:	ldr	r3, [pc, #852]	; 1f50 <mo_xline+0x458>
    1bf8:	ldr	r0, [pc, #852]	; 1f54 <mo_xline+0x45c>
    1bfc:	ldr	r1, [pc, #852]	; 1f58 <mo_xline+0x460>
    1c00:	ldr	r2, [r5, r3]
    1c04:	add	r0, pc, r0
    1c08:	add	r1, pc, r1
    1c0c:	str	r7, [sp, #20]
    1c10:	mov	r3, #0
    1c14:	ldr	r2, [r2]
    1c18:	str	r0, [sp, #16]
    1c1c:	str	r1, [sp]
    1c20:	str	r8, [sp, #12]
    1c24:	str	r6, [sp, #8]
    1c28:	str	r9, [sp, #4]
    1c2c:	mov	r1, r9
    1c30:	mov	r0, r4
    1c34:	bl	b30 <sendto_match_servs@plt>
    1c38:	ldr	r3, [pc, #772]	; 1f44 <mo_xline+0x44c>
    1c3c:	mov	r0, r9
    1c40:	ldr	r1, [r5, r3]
    1c44:	add	r1, r1, #88	; 0x58
    1c48:	bl	c5c <match@plt>
    1c4c:	cmp	r0, #0
    1c50:	beq	1c9c <mo_xline+0x1a4>
    1c54:	mov	r9, #0
    1c58:	mov	r0, r8
    1c5c:	bl	c38 <find_xline_mask@plt>
    1c60:	cmp	r0, #0
    1c64:	beq	1e64 <mo_xline+0x36c>
    1c68:	ldr	r2, [pc, #724]	; 1f44 <mo_xline+0x44c>
    1c6c:	ldr	r1, [r0, #20]
    1c70:	add	r3, r4, #88	; 0x58
    1c74:	ldr	r2, [r5, r2]
    1c78:	str	r1, [sp, #8]
    1c7c:	ldr	r1, [r0, #16]
    1c80:	add	r2, r2, #88	; 0x58
    1c84:	str	r1, [sp, #4]
    1c88:	ldr	r1, [pc, #716]	; 1f5c <mo_xline+0x464>
    1c8c:	str	r8, [sp]
    1c90:	mov	r0, r4
    1c94:	add	r1, pc, r1
    1c98:	bl	b54 <sendto_one@plt>
    1c9c:	add	sp, sp, #44	; 0x2c
    1ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ca4:	ldr	r2, [pc, #664]	; 1f44 <mo_xline+0x44c>
    1ca8:	ldr	r1, [pc, #688]	; 1f60 <mo_xline+0x468>
    1cac:	add	r3, r4, #88	; 0x58
    1cb0:	add	r1, pc, r1
    1cb4:	ldr	r2, [r5, r2]
    1cb8:	str	r1, [sp, #80]	; 0x50
    1cbc:	ldr	r1, [pc, #672]	; 1f64 <mo_xline+0x46c>
    1cc0:	mov	r0, r4
    1cc4:	add	r2, r2, #88	; 0x58
    1cc8:	add	r1, pc, r1
    1ccc:	add	sp, sp, #44	; 0x2c
    1cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1cd4:	b	b54 <sendto_one@plt>
    1cd8:	ldr	r1, [pc, #648]	; 1f68 <mo_xline+0x470>
    1cdc:	ldr	r0, [r7, r3, lsl #2]
    1ce0:	add	r1, pc, r1
    1ce4:	add	r3, r7, r3, lsl #2
    1ce8:	str	r3, [sp, #24]
    1cec:	str	r2, [sp, #28]
    1cf0:	bl	cbc <irccmp@plt>
    1cf4:	ldr	r3, [sp, #24]
    1cf8:	cmp	r0, #0
    1cfc:	bne	1d4c <mo_xline+0x254>
    1d00:	ldr	r1, [r4, #24]
    1d04:	ldr	r2, [sp, #28]
    1d08:	cmp	r1, #0
    1d0c:	beq	1e38 <mo_xline+0x340>
    1d10:	ldr	r0, [r1, #36]	; 0x24
    1d14:	str	r3, [sp, #28]
    1d18:	cmp	r0, #0
    1d1c:	str	r2, [sp, #24]
    1d20:	beq	1e38 <mo_xline+0x340>
    1d24:	ldr	r1, [pc, #576]	; 1f6c <mo_xline+0x474>
    1d28:	add	r1, pc, r1
    1d2c:	bl	cb0 <privilegeset_in_set@plt>
    1d30:	cmp	r0, #0
    1d34:	beq	1e38 <mo_xline+0x340>
    1d38:	ldr	r3, [sp, #28]
    1d3c:	ldr	r2, [sp, #24]
    1d40:	ldr	r9, [r3, #4]
    1d44:	add	r3, r2, #3
    1d48:	b	1bc0 <mo_xline+0xc8>
    1d4c:	mov	r9, #0
    1d50:	b	1bcc <mo_xline+0xd4>
    1d54:	ldr	r3, [pc, #532]	; 1f70 <mo_xline+0x478>
    1d58:	mov	r2, r6
    1d5c:	add	r3, pc, r3
    1d60:	mov	r1, r9
    1d64:	stm	sp, {r3, r7}
    1d68:	mov	r0, r4
    1d6c:	mov	r3, r8
    1d70:	bl	e48 <propagate_xline.part.0>
    1d74:	b	1c38 <mo_xline+0x140>
    1d78:	cmp	sl, #0
    1d7c:	movne	r9, #1
    1d80:	bne	1c58 <mo_xline+0x160>
    1d84:	ldr	r3, [pc, #488]	; 1f74 <mo_xline+0x47c>
    1d88:	ldr	r3, [r5, r3]
    1d8c:	ldr	r2, [r3, #8]
    1d90:	cmp	r2, #0
    1d94:	beq	1c54 <mo_xline+0x15c>
    1d98:	ldr	r9, [r3]
    1d9c:	cmp	r9, #0
    1da0:	beq	1c54 <mo_xline+0x15c>
    1da4:	ldr	r3, [pc, #460]	; 1f78 <mo_xline+0x480>
    1da8:	mov	fp, sl
    1dac:	add	r3, pc, r3
    1db0:	str	r3, [sp, #28]
    1db4:	ldr	r3, [pc, #448]	; 1f7c <mo_xline+0x484>
    1db8:	add	r3, pc, r3
    1dbc:	str	r3, [sp, #32]
    1dc0:	ldr	r3, [pc, #440]	; 1f80 <mo_xline+0x488>
    1dc4:	add	r3, pc, r3
    1dc8:	str	r3, [sp, #36]	; 0x24
    1dcc:	b	1de4 <mo_xline+0x2ec>
    1dd0:	tst	r3, #32
    1dd4:	bne	1eb0 <mo_xline+0x3b8>
    1dd8:	ldr	r9, [r9, #8]
    1ddc:	cmp	r9, #0
    1de0:	beq	1c54 <mo_xline+0x15c>
    1de4:	ldr	sl, [r9]
    1de8:	cmp	r6, #0
    1dec:	ldr	r3, [sl, #12]
    1df0:	beq	1dd0 <mo_xline+0x2d8>
    1df4:	tst	r3, #16
    1df8:	beq	1dd8 <mo_xline+0x2e0>
    1dfc:	ldr	r2, [pc, #332]	; 1f50 <mo_xline+0x458>
    1e00:	ldr	r0, [sl, #8]
    1e04:	mov	r3, fp
    1e08:	ldr	r2, [r5, r2]
    1e0c:	mov	r1, r0
    1e10:	str	r0, [sp, #4]
    1e14:	ldr	r0, [sp, #28]
    1e18:	ldr	r2, [r2]
    1e1c:	str	r0, [sp]
    1e20:	str	r7, [sp, #16]
    1e24:	str	r8, [sp, #12]
    1e28:	str	r6, [sp, #8]
    1e2c:	mov	r0, r4
    1e30:	bl	b30 <sendto_match_servs@plt>
    1e34:	b	1dd8 <mo_xline+0x2e0>
    1e38:	ldr	r2, [pc, #260]	; 1f44 <mo_xline+0x44c>
    1e3c:	ldr	r1, [pc, #320]	; 1f84 <mo_xline+0x48c>
    1e40:	add	r3, r4, #88	; 0x58
    1e44:	add	r1, pc, r1
    1e48:	ldr	r2, [r5, r2]
    1e4c:	str	r1, [sp, #80]	; 0x50
    1e50:	ldr	r1, [pc, #304]	; 1f88 <mo_xline+0x490>
    1e54:	mov	r0, r4
    1e58:	add	r2, r2, #88	; 0x58
    1e5c:	add	r1, pc, r1
    1e60:	b	1b74 <mo_xline+0x7c>
    1e64:	mov	r2, r7
    1e68:	mov	r1, r8
    1e6c:	mov	r0, r4
    1e70:	bl	ef8 <valid_xline>
    1e74:	cmp	r0, #0
    1e78:	beq	1c9c <mo_xline+0x1a4>
    1e7c:	cmp	r6, #0
    1e80:	movne	r3, #0
    1e84:	andeq	r3, r9, #1
    1e88:	cmp	r3, #0
    1e8c:	bne	1f20 <mo_xline+0x428>
    1e90:	str	r9, [sp, #80]	; 0x50
    1e94:	mov	r3, r6
    1e98:	mov	r2, r7
    1e9c:	mov	r1, r8
    1ea0:	mov	r0, r4
    1ea4:	add	sp, sp, #44	; 0x2c
    1ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1eac:	b	16cc <apply_xline>
    1eb0:	ldr	r2, [pc, #212]	; 1f8c <mo_xline+0x494>
    1eb4:	ldr	r0, [sl, #8]
    1eb8:	mov	r3, fp
    1ebc:	ldr	r2, [r5, r2]
    1ec0:	mov	r1, r0
    1ec4:	str	r0, [sp, #4]
    1ec8:	ldr	r0, [sp, #32]
    1ecc:	str	r2, [sp, #24]
    1ed0:	ldr	r2, [r2]
    1ed4:	str	r0, [sp]
    1ed8:	str	r7, [sp, #12]
    1edc:	mov	r0, r4
    1ee0:	str	r8, [sp, #8]
    1ee4:	bl	b30 <sendto_match_servs@plt>
    1ee8:	ldr	r2, [pc, #96]	; 1f50 <mo_xline+0x458>
    1eec:	ldr	r3, [sp, #24]
    1ef0:	ldr	r1, [sl, #8]
    1ef4:	ldr	r2, [r5, r2]
    1ef8:	ldr	r0, [sp, #36]	; 0x24
    1efc:	ldr	r3, [r3]
    1f00:	str	r1, [sp, #4]
    1f04:	ldr	r2, [r2]
    1f08:	str	r0, [sp]
    1f0c:	str	r7, [sp, #12]
    1f10:	str	r8, [sp, #8]
    1f14:	mov	r0, r4
    1f18:	bl	b30 <sendto_match_servs@plt>
    1f1c:	b	1dd8 <mo_xline+0x2e0>
    1f20:	ldr	r1, [pc, #104]	; 1f90 <mo_xline+0x498>
    1f24:	mov	r0, r4
    1f28:	add	r1, pc, r1
    1f2c:	add	sp, sp, #44	; 0x2c
    1f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f34:	b	c80 <sendto_one_notice@plt>
    1f38:	.word	0x000114e8
    1f3c:	.word	0x000000d8
    1f40:	.word	0x00000824
    1f44:	.word	0x000000d0
    1f48:	.word	0x000007fc
    1f4c:	.word	0x000007bc
    1f50:	.word	0x000000d4
    1f54:	.word	0x000008d4
    1f58:	.word	0x000008d4
    1f5c:	.word	0x00000894
    1f60:	.word	0x00000518
    1f64:	.word	0x000004d8
    1f68:	.word	0x00000688
    1f6c:	.word	0x00000650
    1f70:	.word	0x0000077c
    1f74:	.word	0x000000c4
    1f78:	.word	0x000003d8
    1f7c:	.word	0x00000740
    1f80:	.word	0x00000748
    1f84:	.word	0x00000528
    1f88:	.word	0x000004d0
    1f8c:	.word	0x000000b4
    1f90:	.word	0x00000634

00001f94 <handle_remote_xline>:
    1f94:	push	{r4, r5, r6, r7, lr}
    1f98:	mov	r7, r3
    1f9c:	ldr	r3, [r0, #32]
    1fa0:	cmp	r1, #0
    1fa4:	mov	r4, r0
    1fa8:	sub	sp, sp, #12
    1fac:	mov	r6, r2
    1fb0:	mov	r5, r1
    1fb4:	add	r2, r3, #88	; 0x58
    1fb8:	add	r0, r0, #152	; 0x98
    1fbc:	movgt	r3, #16
    1fc0:	movle	r3, #32
    1fc4:	add	r1, r4, #163	; 0xa3
    1fc8:	bl	ca4 <find_shared_conf@plt>
    1fcc:	cmp	r0, #0
    1fd0:	bne	1fdc <handle_remote_xline+0x48>
    1fd4:	add	sp, sp, #12
    1fd8:	pop	{r4, r5, r6, r7, pc}
    1fdc:	mov	r2, r7
    1fe0:	mov	r1, r6
    1fe4:	mov	r0, r4
    1fe8:	bl	ef8 <valid_xline>
    1fec:	cmp	r0, #0
    1ff0:	beq	1fd4 <handle_remote_xline+0x40>
    1ff4:	mov	r0, r6
    1ff8:	bl	c38 <find_xline_mask@plt>
    1ffc:	cmp	r0, #0
    2000:	beq	202c <handle_remote_xline+0x98>
    2004:	ldr	r1, [r0, #20]
    2008:	ldr	r3, [r0, #16]
    200c:	str	r1, [sp]
    2010:	ldr	r1, [pc, #48]	; 2048 <handle_remote_xline+0xb4>
    2014:	mov	r2, r6
    2018:	mov	r0, r4
    201c:	add	r1, pc, r1
    2020:	bl	c80 <sendto_one_notice@plt>
    2024:	add	sp, sp, #12
    2028:	pop	{r4, r5, r6, r7, pc}
    202c:	str	r0, [sp]
    2030:	mov	r3, r5
    2034:	mov	r2, r7
    2038:	mov	r1, r6
    203c:	mov	r0, r4
    2040:	bl	16cc <apply_xline>
    2044:	b	1fd4 <handle_remote_xline+0x40>
    2048:	.word	0x00000564

0000204c <me_xline>:
    204c:	ldrh	r3, [r2, #80]	; 0x50
    2050:	push	{r4, r5, r6, lr}
    2054:	cmp	r3, #64	; 0x40
    2058:	ldr	r5, [sp, #16]
    205c:	popne	{r4, r5, r6, pc}
    2060:	ldr	r3, [r2, #24]
    2064:	cmp	r3, #0
    2068:	popeq	{r4, r5, r6, pc}
    206c:	mov	r4, r2
    2070:	mov	r1, #0
    2074:	mov	r2, #10
    2078:	ldr	r0, [r5, #4]
    207c:	bl	b48 <strtol@plt>
    2080:	ldr	r3, [r5, #16]
    2084:	ldr	r2, [r5, #8]
    2088:	mov	r1, r0
    208c:	mov	r0, r4
    2090:	pop	{r4, r5, r6, lr}
    2094:	b	1f94 <handle_remote_xline>

00002098 <ms_xline>:
    2098:	push	{r4, r5, lr}
    209c:	sub	sp, sp, #12
    20a0:	mov	r5, r2
    20a4:	ldr	r4, [sp, #24]
    20a8:	mov	r0, r2
    20ac:	ldr	ip, [r4, #16]
    20b0:	ldr	r2, [r4, #12]
    20b4:	ldmib	r4, {r1, r3}
    20b8:	stm	sp, {r2, ip}
    20bc:	mov	r2, #0
    20c0:	bl	e48 <propagate_xline.part.0>
    20c4:	ldrh	r2, [r5, #80]	; 0x50
    20c8:	ldr	r3, [pc, #84]	; 2124 <ms_xline+0x8c>
    20cc:	cmp	r2, #64	; 0x40
    20d0:	add	r3, pc, r3
    20d4:	beq	20e0 <ms_xline+0x48>
    20d8:	add	sp, sp, #12
    20dc:	pop	{r4, r5, pc}
    20e0:	ldr	r2, [r5, #24]
    20e4:	cmp	r2, #0
    20e8:	beq	20d8 <ms_xline+0x40>
    20ec:	ldr	r2, [pc, #52]	; 2128 <ms_xline+0x90>
    20f0:	ldr	r0, [r4, #4]
    20f4:	ldr	r1, [r3, r2]
    20f8:	add	r1, r1, #88	; 0x58
    20fc:	bl	c5c <match@plt>
    2100:	cmp	r0, #0
    2104:	beq	20d8 <ms_xline+0x40>
    2108:	mov	r0, r5
    210c:	ldr	r3, [r4, #16]
    2110:	ldr	r2, [r4, #8]
    2114:	mov	r1, #0
    2118:	add	sp, sp, #12
    211c:	pop	{r4, r5, lr}
    2120:	b	1f94 <handle_remote_xline>
    2124:	.word	0x00010f28
    2128:	.word	0x000000d0

Disassembly of section .fini:

0000212c <_fini>:
    212c:	push	{r3, lr}
    2130:	pop	{r3, pc}
