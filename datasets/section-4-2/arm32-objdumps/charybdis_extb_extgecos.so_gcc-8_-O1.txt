
../repos/charybdis/extensions/.libs/extb_extgecos.so:     file format elf32-littlearm


Disassembly of section .init:

0000038c <_init>:
 38c:	push	{r3, lr}
 390:	bl	3dc <call_weak_fn>
 394:	pop	{r3, pc}

Disassembly of section .plt:

00000398 <.plt>:
 398:	push	{lr}		; (str lr, [sp, #-4]!)
 39c:	ldr	lr, [pc, #4]	; 3a8 <.plt+0x10>
 3a0:	add	lr, pc, lr
 3a4:	ldr	pc, [lr, #8]!
 3a8:	.word	0x00010c58

000003ac <__cxa_finalize@plt>:
 3ac:	add	ip, pc, #0, 12
 3b0:	add	ip, ip, #16, 20	; 0x10000
 3b4:	ldr	pc, [ip, #3160]!	; 0xc58

000003b8 <__gmon_start__@plt>:
 3b8:	add	ip, pc, #0, 12
 3bc:	add	ip, ip, #16, 20	; 0x10000
 3c0:	ldr	pc, [ip, #3152]!	; 0xc50

000003c4 <snprintf@plt>:
 3c4:	add	ip, pc, #0, 12
 3c8:	add	ip, ip, #16, 20	; 0x10000
 3cc:	ldr	pc, [ip, #3144]!	; 0xc48

000003d0 <match@plt>:
 3d0:	add	ip, pc, #0, 12
 3d4:	add	ip, ip, #16, 20	; 0x10000
 3d8:	ldr	pc, [ip, #3136]!	; 0xc40

Disassembly of section .text:

000003dc <call_weak_fn>:
 3dc:	ldr	r3, [pc, #20]	; 3f8 <call_weak_fn+0x1c>
 3e0:	ldr	r2, [pc, #20]	; 3fc <call_weak_fn+0x20>
 3e4:	add	r3, pc, r3
 3e8:	ldr	r2, [r3, r2]
 3ec:	cmp	r2, #0
 3f0:	bxeq	lr
 3f4:	b	3b8 <__gmon_start__@plt>
 3f8:	.word	0x00010c14
 3fc:	.word	0x00000024

00000400 <deregister_tm_clones>:
 400:	ldr	r0, [pc, #44]	; 434 <deregister_tm_clones+0x34>
 404:	ldr	r3, [pc, #44]	; 438 <deregister_tm_clones+0x38>
 408:	add	r0, pc, r0
 40c:	add	r3, pc, r3
 410:	cmp	r3, r0
 414:	ldr	r3, [pc, #32]	; 43c <deregister_tm_clones+0x3c>
 418:	add	r3, pc, r3
 41c:	bxeq	lr
 420:	ldr	r2, [pc, #24]	; 440 <deregister_tm_clones+0x40>
 424:	ldr	r3, [r3, r2]
 428:	cmp	r3, #0
 42c:	bxeq	lr
 430:	bx	r3
 434:	.word	0x00010c4c
 438:	.word	0x00010c48
 43c:	.word	0x00010be0
 440:	.word	0x00000020

00000444 <register_tm_clones>:
 444:	ldr	r0, [pc, #56]	; 484 <register_tm_clones+0x40>
 448:	ldr	r3, [pc, #56]	; 488 <register_tm_clones+0x44>
 44c:	add	r0, pc, r0
 450:	add	r3, pc, r3
 454:	sub	r1, r3, r0
 458:	ldr	r3, [pc, #44]	; 48c <register_tm_clones+0x48>
 45c:	asr	r1, r1, #2
 460:	add	r3, pc, r3
 464:	add	r1, r1, r1, lsr #31
 468:	asrs	r1, r1, #1
 46c:	bxeq	lr
 470:	ldr	r2, [pc, #24]	; 490 <register_tm_clones+0x4c>
 474:	ldr	r3, [r3, r2]
 478:	cmp	r3, #0
 47c:	bxeq	lr
 480:	bx	r3
 484:	.word	0x00010c08
 488:	.word	0x00010c04
 48c:	.word	0x00010b98
 490:	.word	0x0000002c

00000494 <__do_global_dtors_aux>:
 494:	ldr	r3, [pc, #76]	; 4e8 <__do_global_dtors_aux+0x54>
 498:	ldr	r2, [pc, #76]	; 4ec <__do_global_dtors_aux+0x58>
 49c:	add	r3, pc, r3
 4a0:	add	r2, pc, r2
 4a4:	ldrb	r3, [r3]
 4a8:	cmp	r3, #0
 4ac:	bxne	lr
 4b0:	ldr	r3, [pc, #56]	; 4f0 <__do_global_dtors_aux+0x5c>
 4b4:	push	{r4, lr}
 4b8:	ldr	r3, [r2, r3]
 4bc:	cmp	r3, #0
 4c0:	beq	4d0 <__do_global_dtors_aux+0x3c>
 4c4:	ldr	r3, [pc, #40]	; 4f4 <__do_global_dtors_aux+0x60>
 4c8:	ldr	r0, [pc, r3]
 4cc:	bl	3ac <__cxa_finalize@plt>
 4d0:	bl	400 <deregister_tm_clones>
 4d4:	ldr	r3, [pc, #28]	; 4f8 <__do_global_dtors_aux+0x64>
 4d8:	mov	r2, #1
 4dc:	add	r3, pc, r3
 4e0:	strb	r2, [r3]
 4e4:	pop	{r4, pc}
 4e8:	.word	0x00010bb8
 4ec:	.word	0x00010b58
 4f0:	.word	0x0000001c
 4f4:	.word	0x00010b60
 4f8:	.word	0x00010b78

000004fc <frame_dummy>:
 4fc:	b	444 <register_tm_clones>

00000500 <_modinit>:
 500:	ldr	r3, [pc, #28]	; 524 <_modinit+0x24>
 504:	add	r3, pc, r3
 508:	ldr	r2, [pc, #24]	; 528 <_modinit+0x28>
 50c:	ldr	r3, [r3, r2]
 510:	ldr	r2, [pc, #20]	; 52c <_modinit+0x2c>
 514:	add	r2, pc, r2
 518:	str	r2, [r3, #480]	; 0x1e0
 51c:	mov	r0, #0
 520:	bx	lr
 524:	.word	0x00010af4
 528:	.word	0x00000028
 52c:	.word	0x00000038

00000530 <_moddeinit>:
 530:	ldr	r3, [pc, #20]	; 54c <_moddeinit+0x1c>
 534:	add	r3, pc, r3
 538:	ldr	r2, [pc, #16]	; 550 <_moddeinit+0x20>
 53c:	ldr	r3, [r3, r2]
 540:	mov	r2, #0
 544:	str	r2, [r3, #480]	; 0x1e0
 548:	bx	lr
 54c:	.word	0x00010ac4
 550:	.word	0x00000028

00000554 <eb_extended>:
 554:	strd	r4, [sp, #-28]!	; 0xffffffe4
 558:	strd	r6, [sp, #8]
 55c:	strd	r8, [sp, #16]
 560:	str	lr, [sp, #24]
 564:	sub	sp, sp, #532	; 0x214
 568:	subs	r7, r0, #0
 56c:	mvneq	r0, #0
 570:	beq	5e4 <eb_extended+0x90>
 574:	mov	r4, r1
 578:	add	r8, r1, #88	; 0x58
 57c:	add	r9, r1, #152	; 0x98
 580:	add	r6, r1, #344	; 0x158
 584:	add	r6, r6, #1
 588:	str	r6, [sp, #8]
 58c:	add	r3, r1, #163	; 0xa3
 590:	str	r3, [sp, #4]
 594:	str	r9, [sp]
 598:	mov	r3, r8
 59c:	ldr	r2, [pc, #156]	; 640 <eb_extended+0xec>
 5a0:	add	r2, pc, r2
 5a4:	mov	r1, #512	; 0x200
 5a8:	add	r5, sp, #16
 5ac:	mov	r0, r5
 5b0:	bl	3c4 <snprintf@plt>
 5b4:	mov	r1, r5
 5b8:	mov	r0, r7
 5bc:	bl	3d0 <match@plt>
 5c0:	cmp	r0, #0
 5c4:	movne	r0, #1
 5c8:	moveq	r0, #0
 5cc:	bne	5e4 <eb_extended+0x90>
 5d0:	ldr	r1, [r4, #64]	; 0x40
 5d4:	and	r2, r1, #131072	; 0x20000
 5d8:	mov	r3, #0
 5dc:	orrs	r3, r2, r3
 5e0:	bne	5fc <eb_extended+0xa8>
 5e4:	add	sp, sp, #532	; 0x214
 5e8:	ldrd	r4, [sp]
 5ec:	ldrd	r6, [sp, #8]
 5f0:	ldrd	r8, [sp, #16]
 5f4:	add	sp, sp, #24
 5f8:	pop	{pc}		; (ldr pc, [sp], #4)
 5fc:	str	r6, [sp, #8]
 600:	add	r4, r4, #227	; 0xe3
 604:	str	r4, [sp, #4]
 608:	str	r9, [sp]
 60c:	mov	r3, r8
 610:	ldr	r2, [pc, #44]	; 644 <eb_extended+0xf0>
 614:	add	r2, pc, r2
 618:	mov	r1, #512	; 0x200
 61c:	add	r4, sp, #16
 620:	mov	r0, r4
 624:	bl	3c4 <snprintf@plt>
 628:	mov	r1, r4
 62c:	mov	r0, r7
 630:	bl	3d0 <match@plt>
 634:	adds	r0, r0, #0
 638:	movne	r0, #1
 63c:	b	5e4 <eb_extended+0x90>
 640:	.word	0x000000c8
 644:	.word	0x00000054

Disassembly of section .fini:

00000648 <_fini>:
 648:	push	{r3, lr}
 64c:	pop	{r3, pc}
