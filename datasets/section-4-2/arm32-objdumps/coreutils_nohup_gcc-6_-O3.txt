
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010c5c <.init>:
   10c5c:	push	{r3, lr}
   10c60:	bl	114b0 <close@plt+0x5c4>
   10c64:	pop	{r3, pc}

Disassembly of section .plt:

00010c68 <calloc@plt-0x14>:
   10c68:	push	{lr}		; (str lr, [sp, #-4]!)
   10c6c:	ldr	lr, [pc, #4]	; 10c78 <calloc@plt-0x4>
   10c70:	add	lr, pc, lr
   10c74:	ldr	pc, [lr, #8]!
   10c78:	andeq	r8, r1, r8, lsl #7

00010c7c <calloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #24, 20	; 0x18000
   10c84:	ldr	pc, [ip, #904]!	; 0x388

00010c88 <fputs_unlocked@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #24, 20	; 0x18000
   10c90:	ldr	pc, [ip, #896]!	; 0x380

00010c94 <raise@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #24, 20	; 0x18000
   10c9c:	ldr	pc, [ip, #888]!	; 0x378

00010ca0 <strcmp@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #24, 20	; 0x18000
   10ca8:	ldr	pc, [ip, #880]!	; 0x370

00010cac <fflush@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #24, 20	; 0x18000
   10cb4:	ldr	pc, [ip, #872]!	; 0x368

00010cb8 <free@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #24, 20	; 0x18000
   10cc0:	ldr	pc, [ip, #864]!	; 0x360

00010cc4 <_exit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #24, 20	; 0x18000
   10ccc:	ldr	pc, [ip, #856]!	; 0x358

00010cd0 <memcpy@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #24, 20	; 0x18000
   10cd8:	ldr	pc, [ip, #848]!	; 0x350

00010cdc <execvp@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #24, 20	; 0x18000
   10ce4:	ldr	pc, [ip, #840]!	; 0x348

00010ce8 <mbsinit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #24, 20	; 0x18000
   10cf0:	ldr	pc, [ip, #832]!	; 0x340

00010cf4 <signal@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #24, 20	; 0x18000
   10cfc:	ldr	pc, [ip, #824]!	; 0x338

00010d00 <memcmp@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #24, 20	; 0x18000
   10d08:	ldr	pc, [ip, #816]!	; 0x330

00010d0c <fputc_unlocked@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #24, 20	; 0x18000
   10d14:	ldr	pc, [ip, #808]!	; 0x328

00010d18 <dcgettext@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #24, 20	; 0x18000
   10d20:	ldr	pc, [ip, #800]!	; 0x320

00010d24 <dup2@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #24, 20	; 0x18000
   10d2c:	ldr	pc, [ip, #792]!	; 0x318

00010d30 <realloc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #24, 20	; 0x18000
   10d38:	ldr	pc, [ip, #784]!	; 0x310

00010d3c <textdomain@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #776]!	; 0x308

00010d48 <iswprint@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #768]!	; 0x300

00010d54 <fwrite@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d60 <lseek64@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #752]!	; 0x2f0

00010d6c <__ctype_get_mb_cur_max@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #744]!	; 0x2e8

00010d78 <__fpending@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #736]!	; 0x2e0

00010d84 <mbrtowc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d90 <error@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #720]!	; 0x2d0

00010d9c <open64@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #712]!	; 0x2c8

00010da8 <getenv@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #704]!	; 0x2c0

00010db4 <malloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc0 <__libc_start_main@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dcc <__freading@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #680]!	; 0x2a8

00010dd8 <__gmon_start__@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #672]!	; 0x2a0

00010de4 <mempcpy@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #664]!	; 0x298

00010df0 <getopt_long@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #656]!	; 0x290

00010dfc <__ctype_b_loc@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #648]!	; 0x288

00010e08 <exit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #640]!	; 0x280

00010e14 <strlen@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #632]!	; 0x278

00010e20 <__errno_location@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #624]!	; 0x270

00010e2c <__cxa_atexit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #616]!	; 0x268

00010e38 <memset@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #608]!	; 0x260

00010e44 <__printf_chk@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #600]!	; 0x258

00010e50 <fileno@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #592]!	; 0x250

00010e5c <__fprintf_chk@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #584]!	; 0x248

00010e68 <fclose@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #576]!	; 0x240

00010e74 <fseeko64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #568]!	; 0x238

00010e80 <fcntl64@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #560]!	; 0x230

00010e8c <setlocale@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #552]!	; 0x228

00010e98 <strrchr@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #24, 20	; 0x18000
   10ea0:	ldr	pc, [ip, #544]!	; 0x220

00010ea4 <nl_langinfo@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #24, 20	; 0x18000
   10eac:	ldr	pc, [ip, #536]!	; 0x218

00010eb0 <bindtextdomain@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #24, 20	; 0x18000
   10eb8:	ldr	pc, [ip, #528]!	; 0x210

00010ebc <umask@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #24, 20	; 0x18000
   10ec4:	ldr	pc, [ip, #520]!	; 0x208

00010ec8 <isatty@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #24, 20	; 0x18000
   10ed0:	ldr	pc, [ip, #512]!	; 0x200

00010ed4 <strncmp@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #24, 20	; 0x18000
   10edc:	ldr	pc, [ip, #504]!	; 0x1f8

00010ee0 <abort@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #24, 20	; 0x18000
   10ee8:	ldr	pc, [ip, #496]!	; 0x1f0

00010eec <close@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #24, 20	; 0x18000
   10ef4:	ldr	pc, [ip, #488]!	; 0x1e8

Disassembly of section .text:

00010ef8 <.text>:
   10ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10efc:	mov	r7, r0
   10f00:	sub	sp, sp, #44	; 0x2c
   10f04:	ldr	r0, [r1]
   10f08:	mov	r4, r1
   10f0c:	bl	11eb8 <close@plt+0xfcc>
   10f10:	ldr	r1, [pc, #1260]	; 11404 <close@plt+0x518>
   10f14:	mov	r0, #6
   10f18:	bl	10e8c <setlocale@plt>
   10f1c:	ldr	r1, [pc, #1252]	; 11408 <close@plt+0x51c>
   10f20:	ldr	r0, [pc, #1252]	; 1140c <close@plt+0x520>
   10f24:	bl	10eb0 <bindtextdomain@plt>
   10f28:	ldr	r0, [pc, #1244]	; 1140c <close@plt+0x520>
   10f2c:	bl	10d3c <textdomain@plt>
   10f30:	ldr	r0, [pc, #1240]	; 11410 <close@plt+0x524>
   10f34:	bl	10da8 <getenv@plt>
   10f38:	mov	r6, #0
   10f3c:	ldr	r3, [pc, #1232]	; 11414 <close@plt+0x528>
   10f40:	ldr	r8, [pc, #1232]	; 11418 <close@plt+0x52c>
   10f44:	cmp	r0, r6
   10f48:	movne	r5, #127	; 0x7f
   10f4c:	moveq	r5, #125	; 0x7d
   10f50:	ldr	r0, [pc, #1220]	; 1141c <close@plt+0x530>
   10f54:	str	r5, [r3]
   10f58:	bl	179e8 <close@plt+0x6afc>
   10f5c:	ldr	r1, [pc, #1212]	; 11420 <close@plt+0x534>
   10f60:	ldr	r2, [pc, #1212]	; 11424 <close@plt+0x538>
   10f64:	ldr	r3, [pc, #1212]	; 11428 <close@plt+0x53c>
   10f68:	ldr	r0, [r1]
   10f6c:	str	r2, [sp, #12]
   10f70:	str	r0, [sp]
   10f74:	str	r3, [sp, #8]
   10f78:	mov	r1, r4
   10f7c:	ldr	r3, [pc, #1192]	; 1142c <close@plt+0x540>
   10f80:	mov	r0, r7
   10f84:	str	r6, [sp, #16]
   10f88:	str	r6, [sp, #4]
   10f8c:	ldr	r2, [pc, #1180]	; 11430 <close@plt+0x544>
   10f90:	bl	11de0 <close@plt+0xef4>
   10f94:	ldr	r3, [r8]
   10f98:	cmp	r7, r3
   10f9c:	ble	113dc <close@plt+0x4f0>
   10fa0:	mov	r0, r6
   10fa4:	bl	10ec8 <isatty@plt>
   10fa8:	mov	r7, r0
   10fac:	mov	r0, #1
   10fb0:	bl	10ec8 <isatty@plt>
   10fb4:	subs	r6, r0, #0
   10fb8:	beq	11014 <close@plt+0x128>
   10fbc:	mov	r0, #2
   10fc0:	bl	10ec8 <isatty@plt>
   10fc4:	adds	fp, r0, #0
   10fc8:	movne	fp, #1
   10fcc:	cmp	r7, #0
   10fd0:	mov	sl, r0
   10fd4:	bne	111d4 <close@plt+0x2e8>
   10fd8:	cmp	r6, #0
   10fdc:	bne	11078 <close@plt+0x18c>
   10fe0:	str	r6, [sp, #32]
   10fe4:	mov	r9, #1
   10fe8:	cmp	fp, #0
   10fec:	moveq	sl, #2
   10ff0:	bne	1118c <close@plt+0x2a0>
   10ff4:	ldr	r3, [pc, #1080]	; 11434 <close@plt+0x548>
   10ff8:	ldr	r3, [r3]
   10ffc:	ldr	r0, [r3]
   11000:	ands	r6, r0, #32
   11004:	beq	11110 <close@plt+0x224>
   11008:	mov	r0, r5
   1100c:	add	sp, sp, #44	; 0x2c
   11010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11014:	bl	10e20 <__errno_location@plt>
   11018:	ldr	r3, [r0]
   1101c:	cmp	r3, #9
   11020:	bne	10fbc <close@plt+0xd0>
   11024:	mov	r0, #2
   11028:	bl	10ec8 <isatty@plt>
   1102c:	mov	r9, #1
   11030:	str	r9, [sp, #32]
   11034:	adds	fp, r0, #0
   11038:	movne	fp, #1
   1103c:	cmp	r7, #0
   11040:	mov	sl, r0
   11044:	bne	111dc <close@plt+0x2f0>
   11048:	ands	r3, fp, r9
   1104c:	str	r3, [sp, #28]
   11050:	beq	10fe4 <close@plt+0xf8>
   11054:	mvn	r0, #384	; 0x180
   11058:	bl	10ebc <umask@plt>
   1105c:	mov	r2, #384	; 0x180
   11060:	ldr	r1, [pc, #976]	; 11438 <close@plt+0x54c>
   11064:	mov	sl, r0
   11068:	ldr	r0, [pc, #972]	; 1143c <close@plt+0x550>
   1106c:	bl	10d9c <open64@plt>
   11070:	mov	r9, r0
   11074:	b	110a4 <close@plt+0x1b8>
   11078:	str	r7, [sp, #32]
   1107c:	mvn	r0, #384	; 0x180
   11080:	bl	10ebc <umask@plt>
   11084:	mov	r3, #384	; 0x180
   11088:	ldr	r2, [pc, #936]	; 11438 <close@plt+0x54c>
   1108c:	ldr	r1, [pc, #936]	; 1143c <close@plt+0x550>
   11090:	str	fp, [sp, #28]
   11094:	mov	sl, r0
   11098:	mov	r0, #1
   1109c:	bl	11b88 <close@plt+0xc9c>
   110a0:	mov	r9, r0
   110a4:	cmp	r9, #0
   110a8:	blt	11240 <close@plt+0x354>
   110ac:	ldr	fp, [pc, #904]	; 1143c <close@plt+0x550>
   110b0:	mov	r3, #0
   110b4:	str	r3, [sp, #24]
   110b8:	mov	r0, sl
   110bc:	bl	10ebc <umask@plt>
   110c0:	ldr	r3, [pc, #888]	; 11440 <close@plt+0x554>
   110c4:	cmp	r7, #0
   110c8:	ldr	r1, [pc, #884]	; 11444 <close@plt+0x558>
   110cc:	mov	r2, #5
   110d0:	moveq	r1, r3
   110d4:	mov	r0, #0
   110d8:	bl	10d18 <dcgettext@plt>
   110dc:	mov	r1, fp
   110e0:	mov	sl, r0
   110e4:	mov	r0, #4
   110e8:	bl	14414 <close@plt+0x3528>
   110ec:	mov	r1, #0
   110f0:	mov	r2, sl
   110f4:	mov	r3, r0
   110f8:	mov	r0, r1
   110fc:	bl	10d90 <error@plt>
   11100:	ldr	r0, [sp, #24]
   11104:	bl	11cd0 <close@plt+0xde4>
   11108:	ldr	fp, [sp, #28]
   1110c:	b	10fe8 <close@plt+0xfc>
   11110:	mov	r1, #1
   11114:	mov	r0, r1
   11118:	bl	10cf4 <signal@plt>
   1111c:	ldr	r7, [r8]
   11120:	add	r1, r4, r7, lsl #2
   11124:	ldr	r0, [r4, r7, lsl #2]
   11128:	bl	10cdc <execvp@plt>
   1112c:	bl	10e20 <__errno_location@plt>
   11130:	mov	r1, #2
   11134:	ldr	r8, [r0]
   11138:	mov	r0, sl
   1113c:	bl	10d24 <dup2@plt>
   11140:	cmp	r8, #2
   11144:	moveq	r5, #127	; 0x7f
   11148:	movne	r5, #126	; 0x7e
   1114c:	cmp	r0, #2
   11150:	bne	11008 <close@plt+0x11c>
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #744]	; 11448 <close@plt+0x55c>
   1115c:	mov	r0, r6
   11160:	bl	10d18 <dcgettext@plt>
   11164:	ldr	r1, [r4, r7, lsl #2]
   11168:	mov	r9, r0
   1116c:	mov	r0, #4
   11170:	bl	14414 <close@plt+0x3528>
   11174:	mov	r2, r9
   11178:	mov	r1, r8
   1117c:	mov	r3, r0
   11180:	mov	r0, r6
   11184:	bl	10d90 <error@plt>
   11188:	b	11008 <close@plt+0x11c>
   1118c:	mov	r2, #3
   11190:	ldr	r1, [pc, #692]	; 1144c <close@plt+0x560>
   11194:	mov	r0, #2
   11198:	bl	119b4 <close@plt+0xac8>
   1119c:	cmp	r6, #0
   111a0:	mov	sl, r0
   111a4:	beq	11210 <close@plt+0x324>
   111a8:	mov	r1, #2
   111ac:	mov	r0, r9
   111b0:	bl	10d24 <dup2@plt>
   111b4:	cmp	r0, #0
   111b8:	blt	11340 <close@plt+0x454>
   111bc:	ldr	r3, [sp, #32]
   111c0:	cmp	r3, #0
   111c4:	beq	10ff4 <close@plt+0x108>
   111c8:	mov	r0, r9
   111cc:	bl	10eec <close@plt>
   111d0:	b	10ff4 <close@plt+0x108>
   111d4:	mov	r9, #0
   111d8:	str	r9, [sp, #32]
   111dc:	mov	r3, #0
   111e0:	mov	r0, r3
   111e4:	mov	r2, #1
   111e8:	ldr	r1, [pc, #608]	; 11450 <close@plt+0x564>
   111ec:	bl	11b88 <close@plt+0xc9c>
   111f0:	cmp	r0, #0
   111f4:	blt	1130c <close@plt+0x420>
   111f8:	cmp	r6, #0
   111fc:	cmpeq	sl, #0
   11200:	beq	112a0 <close@plt+0x3b4>
   11204:	cmp	r6, #0
   11208:	beq	11048 <close@plt+0x15c>
   1120c:	b	1107c <close@plt+0x190>
   11210:	ldr	r3, [pc, #572]	; 11454 <close@plt+0x568>
   11214:	cmp	r7, #0
   11218:	ldr	r1, [pc, #568]	; 11458 <close@plt+0x56c>
   1121c:	mov	r2, #5
   11220:	moveq	r1, r3
   11224:	mov	r0, r6
   11228:	bl	10d18 <dcgettext@plt>
   1122c:	mov	r1, r6
   11230:	mov	r2, r0
   11234:	mov	r0, r6
   11238:	bl	10d90 <error@plt>
   1123c:	b	111a8 <close@plt+0x2bc>
   11240:	bl	10e20 <__errno_location@plt>
   11244:	mov	fp, r0
   11248:	ldr	r0, [pc, #524]	; 1145c <close@plt+0x570>
   1124c:	ldr	r3, [fp]
   11250:	str	r3, [sp, #36]	; 0x24
   11254:	bl	10da8 <getenv@plt>
   11258:	subs	r9, r0, #0
   1125c:	beq	112d8 <close@plt+0x3ec>
   11260:	ldr	r1, [pc, #468]	; 1143c <close@plt+0x550>
   11264:	mov	r2, #0
   11268:	bl	11bec <close@plt+0xd00>
   1126c:	cmp	r6, #0
   11270:	mov	r1, r0
   11274:	str	r0, [sp, #24]
   11278:	beq	112c4 <close@plt+0x3d8>
   1127c:	mov	r3, #384	; 0x180
   11280:	ldr	r2, [pc, #432]	; 11438 <close@plt+0x54c>
   11284:	mov	r0, #1
   11288:	bl	11b88 <close@plt+0xc9c>
   1128c:	mov	r9, r0
   11290:	cmp	r9, #0
   11294:	blt	1136c <close@plt+0x480>
   11298:	ldr	fp, [sp, #24]
   1129c:	b	110b8 <close@plt+0x1cc>
   112a0:	mov	r2, #5
   112a4:	ldr	r1, [pc, #436]	; 11460 <close@plt+0x574>
   112a8:	mov	r0, #0
   112ac:	bl	10d18 <dcgettext@plt>
   112b0:	mov	r1, #0
   112b4:	mov	r2, r0
   112b8:	mov	r0, r1
   112bc:	bl	10d90 <error@plt>
   112c0:	b	11048 <close@plt+0x15c>
   112c4:	mov	r2, #384	; 0x180
   112c8:	ldr	r1, [pc, #360]	; 11438 <close@plt+0x54c>
   112cc:	bl	10d9c <open64@plt>
   112d0:	mov	r9, r0
   112d4:	b	11290 <close@plt+0x3a4>
   112d8:	mov	r2, #5
   112dc:	ldr	r1, [pc, #384]	; 11464 <close@plt+0x578>
   112e0:	bl	10d18 <dcgettext@plt>
   112e4:	ldr	r1, [pc, #336]	; 1143c <close@plt+0x550>
   112e8:	mov	r4, r0
   112ec:	mov	r0, #4
   112f0:	bl	14414 <close@plt+0x3528>
   112f4:	mov	r2, r4
   112f8:	ldr	r1, [sp, #36]	; 0x24
   112fc:	mov	r3, r0
   11300:	mov	r0, r9
   11304:	bl	10d90 <error@plt>
   11308:	b	11008 <close@plt+0x11c>
   1130c:	bl	10e20 <__errno_location@plt>
   11310:	mov	r2, #5
   11314:	ldr	r1, [pc, #332]	; 11468 <close@plt+0x57c>
   11318:	ldr	r3, [r0]
   1131c:	mov	r0, #0
   11320:	str	r3, [sp, #24]
   11324:	bl	10d18 <dcgettext@plt>
   11328:	ldr	r3, [sp, #24]
   1132c:	mov	r1, r3
   11330:	mov	r2, r0
   11334:	mov	r0, r5
   11338:	bl	10d90 <error@plt>
   1133c:	b	111f8 <close@plt+0x30c>
   11340:	bl	10e20 <__errno_location@plt>
   11344:	mov	r2, #5
   11348:	ldr	r1, [pc, #284]	; 1146c <close@plt+0x580>
   1134c:	ldr	r6, [r0]
   11350:	mov	r0, #0
   11354:	bl	10d18 <dcgettext@plt>
   11358:	mov	r1, r6
   1135c:	mov	r2, r0
   11360:	mov	r0, r5
   11364:	bl	10d90 <error@plt>
   11368:	b	111bc <close@plt+0x2d0>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #236]	; 11464 <close@plt+0x578>
   11374:	mov	r0, #0
   11378:	ldr	r4, [fp]
   1137c:	bl	10d18 <dcgettext@plt>
   11380:	ldr	r1, [pc, #180]	; 1143c <close@plt+0x550>
   11384:	mov	r6, r0
   11388:	mov	r0, #4
   1138c:	bl	14414 <close@plt+0x3528>
   11390:	mov	r2, r6
   11394:	ldr	r1, [sp, #36]	; 0x24
   11398:	mov	r3, r0
   1139c:	mov	r0, #0
   113a0:	bl	10d90 <error@plt>
   113a4:	mov	r2, #5
   113a8:	ldr	r1, [pc, #180]	; 11464 <close@plt+0x578>
   113ac:	mov	r0, #0
   113b0:	bl	10d18 <dcgettext@plt>
   113b4:	ldr	r1, [sp, #24]
   113b8:	mov	r6, r0
   113bc:	mov	r0, #4
   113c0:	bl	14414 <close@plt+0x3528>
   113c4:	mov	r2, r6
   113c8:	mov	r1, r4
   113cc:	mov	r3, r0
   113d0:	mov	r0, #0
   113d4:	bl	10d90 <error@plt>
   113d8:	b	11008 <close@plt+0x11c>
   113dc:	mov	r2, #5
   113e0:	ldr	r1, [pc, #136]	; 11470 <close@plt+0x584>
   113e4:	mov	r0, r6
   113e8:	bl	10d18 <dcgettext@plt>
   113ec:	mov	r1, r6
   113f0:	mov	r2, r0
   113f4:	mov	r0, r6
   113f8:	bl	10d90 <error@plt>
   113fc:	mov	r0, r5
   11400:	bl	1159c <close@plt+0x6b0>
   11404:	andeq	r7, r1, r0, lsr #21
   11408:	andeq	r7, r1, r4, lsr #29
   1140c:	andeq	r7, r1, ip, asr sp
   11410:			; <UNDEFINED> instruction: 0x00017ebc
   11414:	strdeq	r9, [r2], -r0
   11418:	andeq	r9, r2, r0, asr #2
   1141c:	ldrdeq	r1, [r1], -r0
   11420:	andeq	r9, r2, ip, ror #1
   11424:	andeq	r7, r1, ip, asr #29
   11428:	muleq	r1, ip, r5
   1142c:	andeq	r7, r1, r8, asr sp
   11430:	andeq	r7, r1, r4, asr #20
   11434:	andeq	r9, r2, r8, asr #2
   11438:	andeq	r0, r0, r1, asr #8
   1143c:	andeq	r7, r1, r4, lsl #28
   11440:	andeq	r7, r1, ip, lsr lr
   11444:	andeq	r7, r1, r0, lsl lr
   11448:	andeq	r7, r1, r0, ror #30
   1144c:	andeq	r0, r0, r6, lsl #8
   11450:	andeq	r7, r1, ip, ror #29
   11454:	andeq	r7, r1, r4, lsl #29
   11458:	andeq	r7, r1, r4, asr lr
   1145c:	andeq	r7, r1, r4, lsr pc
   11460:	andeq	r7, r1, r4, lsr #30
   11464:	andeq	r7, r1, ip, ror pc
   11468:	strdeq	r7, [r1], -r8
   1146c:	andeq	r7, r1, ip, lsr pc
   11470:	ldrdeq	r7, [r1], -ip
   11474:	mov	fp, #0
   11478:	mov	lr, #0
   1147c:	pop	{r1}		; (ldr r1, [sp], #4)
   11480:	mov	r2, sp
   11484:	push	{r2}		; (str r2, [sp, #-4]!)
   11488:	push	{r0}		; (str r0, [sp, #-4]!)
   1148c:	ldr	ip, [pc, #16]	; 114a4 <close@plt+0x5b8>
   11490:	push	{ip}		; (str ip, [sp, #-4]!)
   11494:	ldr	r0, [pc, #12]	; 114a8 <close@plt+0x5bc>
   11498:	ldr	r3, [pc, #12]	; 114ac <close@plt+0x5c0>
   1149c:	bl	10dc0 <__libc_start_main@plt>
   114a0:	bl	10ee0 <abort@plt>
   114a4:	andeq	r7, r1, r4, ror #19
   114a8:	strdeq	r0, [r1], -r8
   114ac:	andeq	r7, r1, r4, lsl #19
   114b0:	ldr	r3, [pc, #20]	; 114cc <close@plt+0x5e0>
   114b4:	ldr	r2, [pc, #20]	; 114d0 <close@plt+0x5e4>
   114b8:	add	r3, pc, r3
   114bc:	ldr	r2, [r3, r2]
   114c0:	cmp	r2, #0
   114c4:	bxeq	lr
   114c8:	b	10dd8 <__gmon_start__@plt>
   114cc:	andeq	r7, r1, r0, asr #22
   114d0:	andeq	r0, r0, r0, ror #1
   114d4:	ldr	r3, [pc, #28]	; 114f8 <close@plt+0x60c>
   114d8:	ldr	r0, [pc, #28]	; 114fc <close@plt+0x610>
   114dc:	sub	r3, r3, r0
   114e0:	cmp	r3, #6
   114e4:	bxls	lr
   114e8:	ldr	r3, [pc, #16]	; 11500 <close@plt+0x614>
   114ec:	cmp	r3, #0
   114f0:	bxeq	lr
   114f4:	bx	r3
   114f8:	andeq	r9, r2, r7, lsr r1
   114fc:	andeq	r9, r2, r4, lsr r1
   11500:	andeq	r0, r0, r0
   11504:	ldr	r1, [pc, #36]	; 11530 <close@plt+0x644>
   11508:	ldr	r0, [pc, #36]	; 11534 <close@plt+0x648>
   1150c:	sub	r1, r1, r0
   11510:	asr	r1, r1, #2
   11514:	add	r1, r1, r1, lsr #31
   11518:	asrs	r1, r1, #1
   1151c:	bxeq	lr
   11520:	ldr	r3, [pc, #16]	; 11538 <close@plt+0x64c>
   11524:	cmp	r3, #0
   11528:	bxeq	lr
   1152c:	bx	r3
   11530:	andeq	r9, r2, r4, lsr r1
   11534:	andeq	r9, r2, r4, lsr r1
   11538:	andeq	r0, r0, r0
   1153c:	push	{r4, lr}
   11540:	ldr	r4, [pc, #24]	; 11560 <close@plt+0x674>
   11544:	ldrb	r3, [r4]
   11548:	cmp	r3, #0
   1154c:	popne	{r4, pc}
   11550:	bl	114d4 <close@plt+0x5e8>
   11554:	mov	r3, #1
   11558:	strb	r3, [r4]
   1155c:	pop	{r4, pc}
   11560:	andeq	r9, r2, r4, asr r1
   11564:	ldr	r0, [pc, #40]	; 11594 <close@plt+0x6a8>
   11568:	ldr	r3, [r0]
   1156c:	cmp	r3, #0
   11570:	bne	11578 <close@plt+0x68c>
   11574:	b	11504 <close@plt+0x618>
   11578:	ldr	r3, [pc, #24]	; 11598 <close@plt+0x6ac>
   1157c:	cmp	r3, #0
   11580:	beq	11574 <close@plt+0x688>
   11584:	push	{r4, lr}
   11588:	blx	r3
   1158c:	pop	{r4, lr}
   11590:	b	11504 <close@plt+0x618>
   11594:	andeq	r8, r2, r4, lsl pc
   11598:	andeq	r0, r0, r0
   1159c:	subs	r6, r0, #0
   115a0:	push	{r7, lr}
   115a4:	sub	sp, sp, #56	; 0x38
   115a8:	beq	115e4 <close@plt+0x6f8>
   115ac:	ldr	r3, [pc, #680]	; 1185c <close@plt+0x970>
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #676]	; 11860 <close@plt+0x974>
   115b8:	mov	r0, #0
   115bc:	ldr	r4, [r3]
   115c0:	bl	10d18 <dcgettext@plt>
   115c4:	ldr	r3, [pc, #664]	; 11864 <close@plt+0x978>
   115c8:	mov	r1, #1
   115cc:	ldr	r3, [r3]
   115d0:	mov	r2, r0
   115d4:	mov	r0, r4
   115d8:	bl	10e5c <__fprintf_chk@plt>
   115dc:	mov	r0, r6
   115e0:	bl	10e08 <exit@plt>
   115e4:	mov	r2, #5
   115e8:	ldr	r1, [pc, #632]	; 11868 <close@plt+0x97c>
   115ec:	bl	10d18 <dcgettext@plt>
   115f0:	ldr	r4, [pc, #620]	; 11864 <close@plt+0x978>
   115f4:	ldr	r7, [pc, #624]	; 1186c <close@plt+0x980>
   115f8:	ldr	r3, [r4]
   115fc:	mov	r2, r3
   11600:	mov	r1, r0
   11604:	mov	r0, #1
   11608:	bl	10e44 <__printf_chk@plt>
   1160c:	mov	r2, #5
   11610:	ldr	r1, [pc, #600]	; 11870 <close@plt+0x984>
   11614:	mov	r0, r6
   11618:	bl	10d18 <dcgettext@plt>
   1161c:	ldr	r1, [r7]
   11620:	bl	10c88 <fputs_unlocked@plt>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #580]	; 11874 <close@plt+0x988>
   1162c:	mov	r0, r6
   11630:	bl	10d18 <dcgettext@plt>
   11634:	ldr	r1, [r7]
   11638:	bl	10c88 <fputs_unlocked@plt>
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #560]	; 11878 <close@plt+0x98c>
   11644:	mov	r0, r6
   11648:	bl	10d18 <dcgettext@plt>
   1164c:	ldr	r1, [r7]
   11650:	bl	10c88 <fputs_unlocked@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #540]	; 1187c <close@plt+0x990>
   1165c:	mov	r0, r6
   11660:	bl	10d18 <dcgettext@plt>
   11664:	ldr	r2, [r4]
   11668:	ldr	r4, [pc, #528]	; 11880 <close@plt+0x994>
   1166c:	mov	r1, r0
   11670:	mov	r0, #1
   11674:	bl	10e44 <__printf_chk@plt>
   11678:	mov	r2, #5
   1167c:	ldr	r1, [pc, #512]	; 11884 <close@plt+0x998>
   11680:	mov	r0, r6
   11684:	bl	10d18 <dcgettext@plt>
   11688:	ldr	r2, [pc, #504]	; 11888 <close@plt+0x99c>
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	bl	10e44 <__printf_chk@plt>
   11698:	ldm	r4!, {r0, r1, r2, r3}
   1169c:	mov	lr, sp
   116a0:	stmia	lr!, {r0, r1, r2, r3}
   116a4:	ldm	r4!, {r0, r1, r2, r3}
   116a8:	ldr	ip, [sp]
   116ac:	stmia	lr!, {r0, r1, r2, r3}
   116b0:	cmp	ip, #0
   116b4:	ldm	r4!, {r0, r1, r2, r3}
   116b8:	stmia	lr!, {r0, r1, r2, r3}
   116bc:	ldm	r4, {r0, r1}
   116c0:	moveq	r4, sp
   116c4:	stm	lr, {r0, r1}
   116c8:	beq	116f8 <close@plt+0x80c>
   116cc:	ldr	r5, [pc, #436]	; 11888 <close@plt+0x99c>
   116d0:	mov	r4, sp
   116d4:	b	116e4 <close@plt+0x7f8>
   116d8:	ldr	ip, [r4, #8]!
   116dc:	cmp	ip, #0
   116e0:	beq	116f8 <close@plt+0x80c>
   116e4:	mov	r1, ip
   116e8:	mov	r0, r5
   116ec:	bl	10ca0 <strcmp@plt>
   116f0:	cmp	r0, #0
   116f4:	bne	116d8 <close@plt+0x7ec>
   116f8:	ldr	r4, [r4, #4]
   116fc:	mov	r2, #5
   11700:	cmp	r4, #0
   11704:	ldr	r1, [pc, #384]	; 1188c <close@plt+0x9a0>
   11708:	beq	117b0 <close@plt+0x8c4>
   1170c:	mov	r0, #0
   11710:	bl	10d18 <dcgettext@plt>
   11714:	ldr	r3, [pc, #372]	; 11890 <close@plt+0x9a4>
   11718:	ldr	r2, [pc, #372]	; 11894 <close@plt+0x9a8>
   1171c:	mov	r1, r0
   11720:	mov	r0, #1
   11724:	bl	10e44 <__printf_chk@plt>
   11728:	mov	r1, #0
   1172c:	mov	r0, #5
   11730:	bl	10e8c <setlocale@plt>
   11734:	cmp	r0, #0
   11738:	ldreq	r5, [pc, #328]	; 11888 <close@plt+0x99c>
   1173c:	beq	11758 <close@plt+0x86c>
   11740:	mov	r2, #3
   11744:	ldr	r1, [pc, #332]	; 11898 <close@plt+0x9ac>
   11748:	bl	10ed4 <strncmp@plt>
   1174c:	ldr	r5, [pc, #308]	; 11888 <close@plt+0x99c>
   11750:	cmp	r0, #0
   11754:	bne	11840 <close@plt+0x954>
   11758:	mov	r2, #5
   1175c:	ldr	r1, [pc, #312]	; 1189c <close@plt+0x9b0>
   11760:	mov	r0, #0
   11764:	bl	10d18 <dcgettext@plt>
   11768:	ldr	r3, [pc, #280]	; 11888 <close@plt+0x99c>
   1176c:	ldr	r2, [pc, #284]	; 11890 <close@plt+0x9a4>
   11770:	mov	r1, r0
   11774:	mov	r0, #1
   11778:	bl	10e44 <__printf_chk@plt>
   1177c:	mov	r2, #5
   11780:	ldr	r1, [pc, #280]	; 118a0 <close@plt+0x9b4>
   11784:	mov	r0, #0
   11788:	bl	10d18 <dcgettext@plt>
   1178c:	ldr	r2, [pc, #272]	; 118a4 <close@plt+0x9b8>
   11790:	cmp	r4, r5
   11794:	ldr	r3, [pc, #268]	; 118a8 <close@plt+0x9bc>
   11798:	movne	r3, r2
   1179c:	mov	r1, r0
   117a0:	mov	r2, r4
   117a4:	mov	r0, #1
   117a8:	bl	10e44 <__printf_chk@plt>
   117ac:	b	115dc <close@plt+0x6f0>
   117b0:	mov	r0, r4
   117b4:	bl	10d18 <dcgettext@plt>
   117b8:	ldr	r3, [pc, #208]	; 11890 <close@plt+0x9a4>
   117bc:	ldr	r2, [pc, #208]	; 11894 <close@plt+0x9a8>
   117c0:	mov	r1, r0
   117c4:	mov	r0, #1
   117c8:	bl	10e44 <__printf_chk@plt>
   117cc:	mov	r1, r4
   117d0:	mov	r0, #5
   117d4:	bl	10e8c <setlocale@plt>
   117d8:	cmp	r0, #0
   117dc:	beq	117f4 <close@plt+0x908>
   117e0:	mov	r2, #3
   117e4:	ldr	r1, [pc, #172]	; 11898 <close@plt+0x9ac>
   117e8:	bl	10ed4 <strncmp@plt>
   117ec:	cmp	r0, #0
   117f0:	bne	11838 <close@plt+0x94c>
   117f4:	mov	r2, #5
   117f8:	ldr	r1, [pc, #156]	; 1189c <close@plt+0x9b0>
   117fc:	mov	r0, #0
   11800:	bl	10d18 <dcgettext@plt>
   11804:	ldr	r3, [pc, #124]	; 11888 <close@plt+0x99c>
   11808:	ldr	r2, [pc, #128]	; 11890 <close@plt+0x9a4>
   1180c:	mov	r4, r3
   11810:	mov	r1, r0
   11814:	mov	r0, #1
   11818:	bl	10e44 <__printf_chk@plt>
   1181c:	ldr	r1, [pc, #124]	; 118a0 <close@plt+0x9b4>
   11820:	mov	r2, #5
   11824:	mov	r0, #0
   11828:	bl	10d18 <dcgettext@plt>
   1182c:	ldr	r3, [pc, #116]	; 118a8 <close@plt+0x9bc>
   11830:	mov	r1, r0
   11834:	b	117a0 <close@plt+0x8b4>
   11838:	ldr	r5, [pc, #72]	; 11888 <close@plt+0x99c>
   1183c:	mov	r4, r5
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #96]	; 118ac <close@plt+0x9c0>
   11848:	mov	r0, #0
   1184c:	bl	10d18 <dcgettext@plt>
   11850:	ldr	r1, [r7]
   11854:	bl	10c88 <fputs_unlocked@plt>
   11858:	b	11758 <close@plt+0x86c>
   1185c:	andeq	r9, r2, r8, asr #2
   11860:	andeq	r7, r1, ip, asr #20
   11864:	andeq	r9, r2, r4, ror #2
   11868:	andeq	r7, r1, r4, ror sl
   1186c:	andeq	r9, r2, ip, asr #2
   11870:	andeq	r7, r1, r4, lsr #21
   11874:	andeq	r7, r1, ip, asr #21
   11878:	strdeq	r7, [r1], -ip
   1187c:	andeq	r7, r1, r4, lsr fp
   11880:	andeq	r7, r1, ip, lsl #20
   11884:	andeq	r7, r1, r8, asr ip
   11888:	andeq	r7, r1, r4, asr #20
   1188c:	andeq	r7, r1, r8, lsl sp
   11890:	andeq	r7, r1, r0, lsr sp
   11894:	andeq	r7, r1, r8, asr sp
   11898:	andeq	r7, r1, r8, ror #26
   1189c:			; <UNDEFINED> instruction: 0x00017db4
   118a0:	ldrdeq	r7, [r1], -r0
   118a4:	andeq	r7, r1, r0, lsr #21
   118a8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   118ac:	andeq	r7, r1, ip, ror #26
   118b0:	ldr	r3, [pc, #4]	; 118bc <close@plt+0x9d0>
   118b4:	str	r0, [r3]
   118b8:	bx	lr
   118bc:	andeq	r9, r2, r8, asr r1
   118c0:	ldr	r3, [pc, #4]	; 118cc <close@plt+0x9e0>
   118c4:	strb	r0, [r3, #4]
   118c8:	bx	lr
   118cc:	andeq	r9, r2, r8, asr r1
   118d0:	ldr	r3, [pc, #192]	; 11998 <close@plt+0xaac>
   118d4:	push	{r4, r5, r6, lr}
   118d8:	sub	sp, sp, #8
   118dc:	ldr	r0, [r3]
   118e0:	bl	17144 <close@plt+0x6258>
   118e4:	cmp	r0, #0
   118e8:	beq	1190c <close@plt+0xa20>
   118ec:	ldr	r4, [pc, #168]	; 1199c <close@plt+0xab0>
   118f0:	ldrb	r3, [r4, #4]
   118f4:	cmp	r3, #0
   118f8:	beq	11928 <close@plt+0xa3c>
   118fc:	bl	10e20 <__errno_location@plt>
   11900:	ldr	r3, [r0]
   11904:	cmp	r3, #32
   11908:	bne	11928 <close@plt+0xa3c>
   1190c:	ldr	r3, [pc, #140]	; 119a0 <close@plt+0xab4>
   11910:	ldr	r0, [r3]
   11914:	bl	17144 <close@plt+0x6258>
   11918:	cmp	r0, #0
   1191c:	bne	11970 <close@plt+0xa84>
   11920:	add	sp, sp, #8
   11924:	pop	{r4, r5, r6, pc}
   11928:	mov	r2, #5
   1192c:	ldr	r1, [pc, #112]	; 119a4 <close@plt+0xab8>
   11930:	mov	r0, #0
   11934:	bl	10d18 <dcgettext@plt>
   11938:	ldr	r4, [r4]
   1193c:	cmp	r4, #0
   11940:	mov	r5, r0
   11944:	beq	1197c <close@plt+0xa90>
   11948:	bl	10e20 <__errno_location@plt>
   1194c:	ldr	r6, [r0]
   11950:	mov	r0, r4
   11954:	bl	14b24 <close@plt+0x3c38>
   11958:	mov	r1, r6
   1195c:	str	r5, [sp]
   11960:	ldr	r2, [pc, #64]	; 119a8 <close@plt+0xabc>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	bl	10d90 <error@plt>
   11970:	ldr	r3, [pc, #52]	; 119ac <close@plt+0xac0>
   11974:	ldr	r0, [r3]
   11978:	bl	10cc4 <_exit@plt>
   1197c:	bl	10e20 <__errno_location@plt>
   11980:	mov	r3, r5
   11984:	ldr	r2, [pc, #36]	; 119b0 <close@plt+0xac4>
   11988:	ldr	r1, [r0]
   1198c:	mov	r0, r4
   11990:	bl	10d90 <error@plt>
   11994:	b	11970 <close@plt+0xa84>
   11998:	andeq	r9, r2, ip, asr #2
   1199c:	andeq	r9, r2, r8, asr r1
   119a0:	andeq	r9, r2, r8, asr #2
   119a4:	andeq	r8, r1, ip
   119a8:	andeq	r8, r1, r8, lsl r0
   119ac:	strdeq	r9, [r2], -r0
   119b0:	andeq	r8, r1, ip, lsl r0
   119b4:	push	{r1, r2, r3}
   119b8:	push	{r4, r5, r6, r7, lr}
   119bc:	sub	sp, sp, #8
   119c0:	add	r3, sp, #32
   119c4:	ldr	r1, [sp, #28]
   119c8:	str	r3, [sp, #4]
   119cc:	cmp	r1, #0
   119d0:	beq	11a68 <close@plt+0xb7c>
   119d4:	ldr	r2, [pc, #412]	; 11b78 <close@plt+0xc8c>
   119d8:	mov	r5, r0
   119dc:	cmp	r1, r2
   119e0:	bne	11a2c <close@plt+0xb40>
   119e4:	ldr	r6, [pc, #400]	; 11b7c <close@plt+0xc90>
   119e8:	ldr	r7, [r3]
   119ec:	add	r2, sp, #36	; 0x24
   119f0:	ldr	r3, [r6]
   119f4:	str	r2, [sp, #4]
   119f8:	cmp	r3, #0
   119fc:	mov	r2, r7
   11a00:	blt	11b2c <close@plt+0xc40>
   11a04:	bl	10e80 <fcntl64@plt>
   11a08:	subs	r4, r0, #0
   11a0c:	blt	11ab0 <close@plt+0xbc4>
   11a10:	mov	r3, #1
   11a14:	str	r3, [r6]
   11a18:	mov	r0, r4
   11a1c:	add	sp, sp, #8
   11a20:	pop	{r4, r5, r6, r7, lr}
   11a24:	add	sp, sp, #12
   11a28:	bx	lr
   11a2c:	cmp	r1, #11
   11a30:	beq	11a58 <close@plt+0xb6c>
   11a34:	bgt	11a78 <close@plt+0xb8c>
   11a38:	cmp	r1, #3
   11a3c:	beq	11a58 <close@plt+0xb6c>
   11a40:	ble	11b6c <close@plt+0xc80>
   11a44:	cmp	r1, #8
   11a48:	beq	11a98 <close@plt+0xbac>
   11a4c:	ble	11a98 <close@plt+0xbac>
   11a50:	cmp	r1, #9
   11a54:	bne	11a98 <close@plt+0xbac>
   11a58:	mov	r0, r5
   11a5c:	bl	10e80 <fcntl64@plt>
   11a60:	mov	r4, r0
   11a64:	b	11a18 <close@plt+0xb2c>
   11a68:	ldr	r2, [sp, #32]
   11a6c:	bl	10e80 <fcntl64@plt>
   11a70:	mov	r4, r0
   11a74:	b	11a18 <close@plt+0xb2c>
   11a78:	ldr	r3, [pc, #256]	; 11b80 <close@plt+0xc94>
   11a7c:	cmp	r1, r3
   11a80:	bgt	11b4c <close@plt+0xc60>
   11a84:	cmp	r1, r2
   11a88:	bge	11a98 <close@plt+0xbac>
   11a8c:	sub	r3, r3, #6
   11a90:	cmp	r1, r3
   11a94:	beq	11a58 <close@plt+0xb6c>
   11a98:	ldr	r3, [sp, #4]
   11a9c:	mov	r0, r5
   11aa0:	ldr	r2, [r3]
   11aa4:	bl	10e80 <fcntl64@plt>
   11aa8:	mov	r4, r0
   11aac:	b	11a18 <close@plt+0xb2c>
   11ab0:	bl	10e20 <__errno_location@plt>
   11ab4:	ldr	r3, [r0]
   11ab8:	cmp	r3, #22
   11abc:	bne	11a10 <close@plt+0xb24>
   11ac0:	mov	r2, r7
   11ac4:	mov	r0, r5
   11ac8:	mov	r1, #0
   11acc:	bl	10e80 <fcntl64@plt>
   11ad0:	subs	r4, r0, #0
   11ad4:	blt	11a18 <close@plt+0xb2c>
   11ad8:	mvn	r3, #0
   11adc:	str	r3, [r6]
   11ae0:	mov	r1, #1
   11ae4:	mov	r0, r4
   11ae8:	bl	10e80 <fcntl64@plt>
   11aec:	subs	r2, r0, #0
   11af0:	blt	11b0c <close@plt+0xc20>
   11af4:	orr	r2, r2, #1
   11af8:	mov	r1, #2
   11afc:	mov	r0, r4
   11b00:	bl	10e80 <fcntl64@plt>
   11b04:	cmn	r0, #1
   11b08:	bne	11a18 <close@plt+0xb2c>
   11b0c:	bl	10e20 <__errno_location@plt>
   11b10:	mov	r5, r0
   11b14:	mov	r0, r4
   11b18:	ldr	r6, [r5]
   11b1c:	mvn	r4, #0
   11b20:	bl	10eec <close@plt>
   11b24:	str	r6, [r5]
   11b28:	b	11a18 <close@plt+0xb2c>
   11b2c:	mov	r1, #0
   11b30:	bl	10e80 <fcntl64@plt>
   11b34:	subs	r4, r0, #0
   11b38:	blt	11a18 <close@plt+0xb2c>
   11b3c:	ldr	r3, [r6]
   11b40:	cmn	r3, #1
   11b44:	beq	11ae0 <close@plt+0xbf4>
   11b48:	b	11a18 <close@plt+0xb2c>
   11b4c:	ldr	r3, [pc, #48]	; 11b84 <close@plt+0xc98>
   11b50:	cmp	r1, r3
   11b54:	beq	11a98 <close@plt+0xbac>
   11b58:	blt	11a58 <close@plt+0xb6c>
   11b5c:	add	r3, r3, #1
   11b60:	cmp	r1, r3
   11b64:	bne	11a98 <close@plt+0xbac>
   11b68:	b	11a58 <close@plt+0xb6c>
   11b6c:	cmp	r1, #1
   11b70:	bne	11a98 <close@plt+0xbac>
   11b74:	b	11a58 <close@plt+0xb6c>
   11b78:	andeq	r0, r0, r6, lsl #8
   11b7c:	andeq	r9, r2, r0, ror #2
   11b80:	andeq	r0, r0, r7, lsl #8
   11b84:	andeq	r0, r0, r9, lsl #8
   11b88:	mov	ip, r1
   11b8c:	push	{r4, r5, r6, r7, r8, lr}
   11b90:	mov	r1, r2
   11b94:	mov	r5, r0
   11b98:	mov	r2, r3
   11b9c:	mov	r0, ip
   11ba0:	bl	10d9c <open64@plt>
   11ba4:	sub	r3, r5, r0
   11ba8:	clz	r3, r3
   11bac:	lsr	r3, r3, #5
   11bb0:	orrs	r3, r3, r0, lsr #31
   11bb4:	mov	r4, r0
   11bb8:	bne	11be4 <close@plt+0xcf8>
   11bbc:	mov	r1, r5
   11bc0:	bl	10d24 <dup2@plt>
   11bc4:	mov	r7, r0
   11bc8:	bl	10e20 <__errno_location@plt>
   11bcc:	mov	r5, r0
   11bd0:	mov	r0, r4
   11bd4:	ldr	r6, [r5]
   11bd8:	mov	r4, r7
   11bdc:	bl	10eec <close@plt>
   11be0:	str	r6, [r5]
   11be4:	mov	r0, r4
   11be8:	pop	{r4, r5, r6, r7, r8, pc}
   11bec:	push	{r4, lr}
   11bf0:	bl	11c00 <close@plt+0xd14>
   11bf4:	cmp	r0, #0
   11bf8:	popne	{r4, pc}
   11bfc:	bl	16f88 <close@plt+0x609c>
   11c00:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c04:	mov	r6, r1
   11c08:	mov	r8, r2
   11c0c:	mov	fp, r0
   11c10:	bl	17098 <close@plt+0x61ac>
   11c14:	mov	r4, r0
   11c18:	bl	170f4 <close@plt+0x6208>
   11c1c:	sub	r4, r4, fp
   11c20:	mov	r5, r0
   11c24:	mov	r0, r6
   11c28:	bl	10e14 <strlen@plt>
   11c2c:	cmp	r5, #0
   11c30:	add	r4, r4, r5
   11c34:	mov	r7, r0
   11c38:	beq	11cac <close@plt+0xdc0>
   11c3c:	add	r3, fp, r4
   11c40:	ldrb	r3, [r3, #-1]
   11c44:	cmp	r3, #47	; 0x2f
   11c48:	beq	11cc4 <close@plt+0xdd8>
   11c4c:	ldrb	r3, [r6]
   11c50:	cmp	r3, #47	; 0x2f
   11c54:	beq	11cc4 <close@plt+0xdd8>
   11c58:	mov	r5, #1
   11c5c:	mov	sl, #47	; 0x2f
   11c60:	add	r0, r7, #1
   11c64:	add	r0, r0, r4
   11c68:	add	r0, r0, r5
   11c6c:	bl	17010 <close@plt+0x6124>
   11c70:	subs	r9, r0, #0
   11c74:	beq	11ca4 <close@plt+0xdb8>
   11c78:	mov	r2, r4
   11c7c:	mov	r1, fp
   11c80:	bl	10de4 <mempcpy@plt>
   11c84:	cmp	r8, #0
   11c88:	mov	r2, r7
   11c8c:	mov	r1, r6
   11c90:	strb	sl, [r0], r5
   11c94:	strne	r0, [r8]
   11c98:	bl	10de4 <mempcpy@plt>
   11c9c:	mov	r3, #0
   11ca0:	strb	r3, [r0]
   11ca4:	mov	r0, r9
   11ca8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cac:	ldrb	r3, [r6]
   11cb0:	cmp	r3, #47	; 0x2f
   11cb4:	moveq	r5, #1
   11cb8:	moveq	sl, #46	; 0x2e
   11cbc:	movne	sl, r5
   11cc0:	b	11c60 <close@plt+0xd74>
   11cc4:	mov	r5, #0
   11cc8:	mov	sl, r5
   11ccc:	b	11c60 <close@plt+0xd74>
   11cd0:	push	{r4, r5, lr}
   11cd4:	sub	sp, sp, #12
   11cd8:	mov	r5, r0
   11cdc:	bl	10e20 <__errno_location@plt>
   11ce0:	mov	r2, #0
   11ce4:	mov	r4, r0
   11ce8:	ldr	r3, [r0]
   11cec:	str	r2, [r4]
   11cf0:	mov	r0, r5
   11cf4:	str	r3, [sp]
   11cf8:	str	r3, [sp, #4]
   11cfc:	bl	10cb8 <free@plt>
   11d00:	ldr	r3, [r4]
   11d04:	add	r2, sp, #8
   11d08:	cmp	r3, #0
   11d0c:	moveq	r3, #4
   11d10:	movne	r3, #0
   11d14:	add	r3, r2, r3
   11d18:	ldr	r3, [r3, #-8]
   11d1c:	str	r3, [r4]
   11d20:	add	sp, sp, #12
   11d24:	pop	{r4, r5, pc}
   11d28:	push	{r4, r5, r6, r7, r8, lr}
   11d2c:	cmp	r0, #2
   11d30:	ldr	r4, [pc, #148]	; 11dcc <close@plt+0xee0>
   11d34:	mov	r5, #0
   11d38:	sub	sp, sp, #16
   11d3c:	ldr	r6, [r4]
   11d40:	str	r5, [r4]
   11d44:	beq	11d60 <close@plt+0xe74>
   11d48:	ldr	r3, [pc, #128]	; 11dd0 <close@plt+0xee4>
   11d4c:	mov	r2, #0
   11d50:	str	r6, [r4]
   11d54:	str	r2, [r3]
   11d58:	add	sp, sp, #16
   11d5c:	pop	{r4, r5, r6, r7, r8, pc}
   11d60:	mov	r8, r3
   11d64:	mov	r7, r2
   11d68:	str	r5, [sp]
   11d6c:	ldr	r3, [pc, #96]	; 11dd4 <close@plt+0xee8>
   11d70:	ldr	r2, [pc, #96]	; 11dd8 <close@plt+0xeec>
   11d74:	bl	10df0 <getopt_long@plt>
   11d78:	cmn	r0, #1
   11d7c:	beq	11d48 <close@plt+0xe5c>
   11d80:	cmp	r0, #104	; 0x68
   11d84:	beq	11dbc <close@plt+0xed0>
   11d88:	cmp	r0, #118	; 0x76
   11d8c:	bne	11d48 <close@plt+0xe5c>
   11d90:	ldr	r3, [pc, #68]	; 11ddc <close@plt+0xef0>
   11d94:	add	ip, sp, #48	; 0x30
   11d98:	mov	r2, r8
   11d9c:	ldr	r0, [r3]
   11da0:	mov	r1, r7
   11da4:	str	ip, [sp]
   11da8:	ldr	r3, [sp, #40]	; 0x28
   11dac:	str	ip, [sp, #12]
   11db0:	bl	162dc <close@plt+0x53f0>
   11db4:	mov	r0, r5
   11db8:	bl	10e08 <exit@plt>
   11dbc:	mov	r0, r5
   11dc0:	ldr	r3, [sp, #44]	; 0x2c
   11dc4:	blx	r3
   11dc8:	b	11d48 <close@plt+0xe5c>
   11dcc:	andeq	r9, r2, r0, asr r1
   11dd0:	andeq	r9, r2, r0, asr #2
   11dd4:	andeq	r8, r1, r0, lsr #32
   11dd8:	andeq	r8, r1, r0, asr r0
   11ddc:	andeq	r9, r2, ip, asr #2
   11de0:	push	{r4, r5, r6, r7, r8, lr}
   11de4:	sub	sp, sp, #16
   11de8:	ldr	r5, [pc, #176]	; 11ea0 <close@plt+0xfb4>
   11dec:	ldrb	r8, [sp, #44]	; 0x2c
   11df0:	ldr	r4, [pc, #172]	; 11ea4 <close@plt+0xfb8>
   11df4:	ldr	lr, [pc, #172]	; 11ea8 <close@plt+0xfbc>
   11df8:	cmp	r8, #0
   11dfc:	mov	r6, r2
   11e00:	movne	r2, r5
   11e04:	mov	r5, #0
   11e08:	mov	ip, #1
   11e0c:	moveq	r2, lr
   11e10:	mov	r7, r3
   11e14:	str	r5, [sp]
   11e18:	ldr	r3, [pc, #140]	; 11eac <close@plt+0xfc0>
   11e1c:	ldr	r8, [r4]
   11e20:	str	ip, [r4]
   11e24:	bl	10df0 <getopt_long@plt>
   11e28:	cmn	r0, #1
   11e2c:	beq	11e7c <close@plt+0xf90>
   11e30:	cmp	r0, #104	; 0x68
   11e34:	beq	11e88 <close@plt+0xf9c>
   11e38:	cmp	r0, #118	; 0x76
   11e3c:	bne	11e6c <close@plt+0xf80>
   11e40:	ldr	r3, [pc, #104]	; 11eb0 <close@plt+0xfc4>
   11e44:	add	ip, sp, #52	; 0x34
   11e48:	mov	r2, r7
   11e4c:	ldr	r0, [r3]
   11e50:	mov	r1, r6
   11e54:	str	ip, [sp]
   11e58:	ldr	r3, [sp, #40]	; 0x28
   11e5c:	str	ip, [sp, #12]
   11e60:	bl	162dc <close@plt+0x53f0>
   11e64:	mov	r0, r5
   11e68:	bl	10e08 <exit@plt>
   11e6c:	ldr	r3, [pc, #64]	; 11eb4 <close@plt+0xfc8>
   11e70:	ldr	r0, [r3]
   11e74:	ldr	r3, [sp, #48]	; 0x30
   11e78:	blx	r3
   11e7c:	str	r8, [r4]
   11e80:	add	sp, sp, #16
   11e84:	pop	{r4, r5, r6, r7, r8, pc}
   11e88:	mov	r0, r5
   11e8c:	ldr	r3, [sp, #48]	; 0x30
   11e90:	blx	r3
   11e94:	str	r8, [r4]
   11e98:	add	sp, sp, #16
   11e9c:	pop	{r4, r5, r6, r7, r8, pc}
   11ea0:	andeq	r7, r1, r0, lsr #21
   11ea4:	andeq	r9, r2, r0, asr r1
   11ea8:	andeq	r8, r1, r0, asr r0
   11eac:	andeq	r8, r1, r0, lsr #32
   11eb0:	andeq	r9, r2, ip, asr #2
   11eb4:	strdeq	r9, [r2], -r0
   11eb8:	push	{r4, r5, r6, lr}
   11ebc:	subs	r4, r0, #0
   11ec0:	beq	11f34 <close@plt+0x1048>
   11ec4:	mov	r1, #47	; 0x2f
   11ec8:	bl	10e98 <strrchr@plt>
   11ecc:	subs	r5, r0, #0
   11ed0:	beq	11f20 <close@plt+0x1034>
   11ed4:	add	r6, r5, #1
   11ed8:	sub	r3, r6, r4
   11edc:	cmp	r3, #6
   11ee0:	ble	11f20 <close@plt+0x1034>
   11ee4:	mov	r2, #7
   11ee8:	ldr	r1, [pc, #96]	; 11f50 <close@plt+0x1064>
   11eec:	sub	r0, r5, #6
   11ef0:	bl	10ed4 <strncmp@plt>
   11ef4:	cmp	r0, #0
   11ef8:	bne	11f20 <close@plt+0x1034>
   11efc:	mov	r2, #3
   11f00:	ldr	r1, [pc, #76]	; 11f54 <close@plt+0x1068>
   11f04:	mov	r0, r6
   11f08:	bl	10ed4 <strncmp@plt>
   11f0c:	cmp	r0, #0
   11f10:	movne	r4, r6
   11f14:	ldreq	r3, [pc, #60]	; 11f58 <close@plt+0x106c>
   11f18:	addeq	r4, r5, #4
   11f1c:	streq	r4, [r3]
   11f20:	ldr	r2, [pc, #52]	; 11f5c <close@plt+0x1070>
   11f24:	ldr	r3, [pc, #52]	; 11f60 <close@plt+0x1074>
   11f28:	str	r4, [r2]
   11f2c:	str	r4, [r3]
   11f30:	pop	{r4, r5, r6, pc}
   11f34:	ldr	r3, [pc, #40]	; 11f64 <close@plt+0x1078>
   11f38:	mov	r2, #55	; 0x37
   11f3c:	mov	r1, #1
   11f40:	ldr	r3, [r3]
   11f44:	ldr	r0, [pc, #28]	; 11f68 <close@plt+0x107c>
   11f48:	bl	10d54 <fwrite@plt>
   11f4c:	bl	10ee0 <abort@plt>
   11f50:	muleq	r1, ip, r0
   11f54:	andeq	r8, r1, r4, lsr #1
   11f58:	andeq	r9, r2, r8, lsr r1
   11f5c:	andeq	r9, r2, r4, ror #2
   11f60:	andeq	r9, r2, ip, lsr r1
   11f64:	andeq	r9, r2, r8, asr #2
   11f68:	andeq	r8, r1, r4, rrx
   11f6c:	push	{r4, r5, r6, lr}
   11f70:	mov	r4, r0
   11f74:	mov	r5, r1
   11f78:	bl	17360 <close@plt+0x6474>
   11f7c:	ldrb	r3, [r0]
   11f80:	bic	r3, r3, #32
   11f84:	cmp	r3, #85	; 0x55
   11f88:	bne	11fe8 <close@plt+0x10fc>
   11f8c:	ldrb	r3, [r0, #1]
   11f90:	bic	r3, r3, #32
   11f94:	cmp	r3, #84	; 0x54
   11f98:	bne	12024 <close@plt+0x1138>
   11f9c:	ldrb	r3, [r0, #2]
   11fa0:	bic	r3, r3, #32
   11fa4:	cmp	r3, #70	; 0x46
   11fa8:	bne	12024 <close@plt+0x1138>
   11fac:	ldrb	r3, [r0, #3]
   11fb0:	cmp	r3, #45	; 0x2d
   11fb4:	bne	12024 <close@plt+0x1138>
   11fb8:	ldrb	r3, [r0, #4]
   11fbc:	cmp	r3, #56	; 0x38
   11fc0:	bne	12024 <close@plt+0x1138>
   11fc4:	ldrb	r3, [r0, #5]
   11fc8:	cmp	r3, #0
   11fcc:	bne	12024 <close@plt+0x1138>
   11fd0:	ldrb	r2, [r4]
   11fd4:	ldr	r3, [pc, #152]	; 12074 <close@plt+0x1188>
   11fd8:	ldr	r0, [pc, #152]	; 12078 <close@plt+0x118c>
   11fdc:	cmp	r2, #96	; 0x60
   11fe0:	movne	r0, r3
   11fe4:	pop	{r4, r5, r6, pc}
   11fe8:	cmp	r3, #71	; 0x47
   11fec:	bne	12024 <close@plt+0x1138>
   11ff0:	ldrb	r3, [r0, #1]
   11ff4:	bic	r3, r3, #32
   11ff8:	cmp	r3, #66	; 0x42
   11ffc:	bne	12024 <close@plt+0x1138>
   12000:	ldrb	r3, [r0, #2]
   12004:	cmp	r3, #49	; 0x31
   12008:	bne	12024 <close@plt+0x1138>
   1200c:	ldrb	r3, [r0, #3]
   12010:	cmp	r3, #56	; 0x38
   12014:	bne	12024 <close@plt+0x1138>
   12018:	ldrb	r3, [r0, #4]
   1201c:	cmp	r3, #48	; 0x30
   12020:	beq	12038 <close@plt+0x114c>
   12024:	ldr	r3, [pc, #80]	; 1207c <close@plt+0x1190>
   12028:	cmp	r5, #9
   1202c:	ldr	r0, [pc, #76]	; 12080 <close@plt+0x1194>
   12030:	movne	r0, r3
   12034:	pop	{r4, r5, r6, pc}
   12038:	ldrb	r3, [r0, #5]
   1203c:	cmp	r3, #51	; 0x33
   12040:	bne	12024 <close@plt+0x1138>
   12044:	ldrb	r3, [r0, #6]
   12048:	cmp	r3, #48	; 0x30
   1204c:	bne	12024 <close@plt+0x1138>
   12050:	ldrb	r3, [r0, #7]
   12054:	cmp	r3, #0
   12058:	bne	12024 <close@plt+0x1138>
   1205c:	ldrb	r2, [r4]
   12060:	ldr	r3, [pc, #28]	; 12084 <close@plt+0x1198>
   12064:	ldr	r0, [pc, #28]	; 12088 <close@plt+0x119c>
   12068:	cmp	r2, #96	; 0x60
   1206c:	movne	r0, r3
   12070:	pop	{r4, r5, r6, pc}
   12074:	andeq	r8, r1, r0, lsl #2
   12078:	strdeq	r8, [r1], -ip
   1207c:	andeq	r8, r1, r0, lsl r1
   12080:	andeq	r8, r1, ip, lsl #2
   12084:	andeq	r8, r1, r8, lsl #2
   12088:	andeq	r8, r1, r4, lsl #2
   1208c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12090:	sub	sp, sp, #140	; 0x8c
   12094:	mov	r9, r1
   12098:	str	r3, [sp, #24]
   1209c:	mov	r3, #1
   120a0:	mov	sl, r0
   120a4:	str	r2, [sp, #44]	; 0x2c
   120a8:	str	r3, [sp, #28]
   120ac:	bl	10d6c <__ctype_get_mb_cur_max@plt>
   120b0:	ldr	r3, [sp, #180]	; 0xb4
   120b4:	mov	fp, r9
   120b8:	mov	r9, sl
   120bc:	lsr	r3, r3, #1
   120c0:	and	r3, r3, #1
   120c4:	str	r3, [sp, #40]	; 0x28
   120c8:	ldr	r3, [sp, #180]	; 0xb4
   120cc:	mov	r2, #0
   120d0:	and	r3, r3, #4
   120d4:	str	r3, [sp, #100]	; 0x64
   120d8:	ldr	r3, [sp, #180]	; 0xb4
   120dc:	str	r2, [sp, #76]	; 0x4c
   120e0:	and	r3, r3, #1
   120e4:	str	r3, [sp, #96]	; 0x60
   120e8:	str	r2, [sp, #36]	; 0x24
   120ec:	str	r2, [sp, #56]	; 0x38
   120f0:	str	r2, [sp, #68]	; 0x44
   120f4:	str	r2, [sp, #72]	; 0x48
   120f8:	str	r2, [sp, #84]	; 0x54
   120fc:	str	r0, [sp, #80]	; 0x50
   12100:	ldr	r3, [sp, #176]	; 0xb0
   12104:	cmp	r3, #10
   12108:	ldrls	pc, [pc, r3, lsl #2]
   1210c:	b	132e4 <close@plt+0x23f8>
   12110:	andeq	r2, r1, ip, lsr r1
   12114:	andeq	r2, r1, ip, asr r4
   12118:			; <UNDEFINED> instruction: 0x000125b4
   1211c:	muleq	r1, r0, r4
   12120:	andeq	r2, r1, r8, lsl #12
   12124:	andeq	r2, r1, r8, ror #11
   12128:			; <UNDEFINED> instruction: 0x000124b0
   1212c:	ldrdeq	r2, [r1], -r4
   12130:	strdeq	r2, [r1], -ip
   12134:	strdeq	r2, [r1], -ip
   12138:	strdeq	r2, [r1], -ip
   1213c:	mov	r3, #0
   12140:	ldr	r1, [sp, #56]	; 0x38
   12144:	ldr	r2, [sp, #176]	; 0xb0
   12148:	ldr	lr, [sp, #176]	; 0xb0
   1214c:	mov	r8, r3
   12150:	mov	ip, r3
   12154:	str	r3, [sp, #40]	; 0x28
   12158:	mov	r3, r1
   1215c:	cmp	r2, #2
   12160:	moveq	r3, #0
   12164:	andne	r3, r3, #1
   12168:	mov	r0, r3
   1216c:	str	r3, [sp, #92]	; 0x5c
   12170:	ldr	r3, [sp, #68]	; 0x44
   12174:	sub	lr, lr, #2
   12178:	adds	r2, r3, #0
   1217c:	movne	r2, #1
   12180:	and	r3, r1, ip
   12184:	and	r3, r2, r3
   12188:	clz	lr, lr
   1218c:	str	r3, [sp, #88]	; 0x58
   12190:	lsr	lr, lr, #5
   12194:	mov	r3, ip
   12198:	and	r3, r3, lr
   1219c:	mov	sl, #0
   121a0:	and	r0, r2, r0
   121a4:	str	r3, [sp, #64]	; 0x40
   121a8:	eor	r3, r1, #1
   121ac:	str	lr, [sp, #52]	; 0x34
   121b0:	str	r0, [sp, #48]	; 0x30
   121b4:	str	r3, [sp, #60]	; 0x3c
   121b8:	ldr	r3, [sp, #24]
   121bc:	cmn	r3, #1
   121c0:	beq	126f0 <close@plt+0x1804>
   121c4:	subs	r7, r3, sl
   121c8:	movne	r7, #1
   121cc:	cmp	r7, #0
   121d0:	beq	12708 <close@plt+0x181c>
   121d4:	ldr	r3, [sp, #48]	; 0x30
   121d8:	cmp	r3, #0
   121dc:	beq	12a74 <close@plt+0x1b88>
   121e0:	ldr	r2, [sp, #68]	; 0x44
   121e4:	ldr	r1, [sp, #24]
   121e8:	cmp	r2, #1
   121ec:	mov	r3, r2
   121f0:	movls	r3, #0
   121f4:	movhi	r3, #1
   121f8:	cmn	r1, #1
   121fc:	movne	r3, #0
   12200:	cmp	r3, #0
   12204:	add	r4, sl, r2
   12208:	beq	12218 <close@plt+0x132c>
   1220c:	ldr	r0, [sp, #44]	; 0x2c
   12210:	bl	10e14 <strlen@plt>
   12214:	str	r0, [sp, #24]
   12218:	ldr	r3, [sp, #24]
   1221c:	cmp	r3, r4
   12220:	ldr	r3, [sp, #44]	; 0x2c
   12224:	add	r5, r3, sl
   12228:	bcc	12a7c <close@plt+0x1b90>
   1222c:	mov	r0, r5
   12230:	ldr	r2, [sp, #68]	; 0x44
   12234:	ldr	r1, [sp, #72]	; 0x48
   12238:	bl	10d00 <memcmp@plt>
   1223c:	cmp	r0, #0
   12240:	bne	12a7c <close@plt+0x1b90>
   12244:	ldr	r3, [sp, #40]	; 0x28
   12248:	cmp	r3, #0
   1224c:	bne	13438 <close@plt+0x254c>
   12250:	ldrb	r4, [r5]
   12254:	cmp	r4, #126	; 0x7e
   12258:	ldrls	pc, [pc, r4, lsl #2]
   1225c:	b	13374 <close@plt+0x2488>
   12260:	andeq	r2, r1, r4, lsr r9
   12264:	andeq	r3, r1, r4, ror r3
   12268:	andeq	r3, r1, r4, ror r3
   1226c:	andeq	r3, r1, r4, ror r3
   12270:	andeq	r3, r1, r4, ror r3
   12274:	andeq	r3, r1, r4, ror r3
   12278:	andeq	r3, r1, r4, ror r3
   1227c:	andeq	r2, r1, r0, lsr #18
   12280:	andeq	r2, r1, ip, lsl #18
   12284:	andeq	r2, r1, r8, ror #17
   12288:	andeq	r2, r1, r8, asr #17
   1228c:	strdeq	r2, [r1], -r8
   12290:	andeq	r2, r1, r0, lsr r8
   12294:	andeq	r2, r1, r4, ror #20
   12298:	andeq	r3, r1, r4, ror r3
   1229c:	andeq	r3, r1, r4, ror r3
   122a0:	andeq	r3, r1, r4, ror r3
   122a4:	andeq	r3, r1, r4, ror r3
   122a8:	andeq	r3, r1, r4, ror r3
   122ac:	andeq	r3, r1, r4, ror r3
   122b0:	andeq	r3, r1, r4, ror r3
   122b4:	andeq	r3, r1, r4, ror r3
   122b8:	andeq	r3, r1, r4, ror r3
   122bc:	andeq	r3, r1, r4, ror r3
   122c0:	andeq	r3, r1, r4, ror r3
   122c4:	andeq	r3, r1, r4, ror r3
   122c8:	andeq	r3, r1, r4, ror r3
   122cc:	andeq	r3, r1, r4, ror r3
   122d0:	andeq	r3, r1, r4, ror r3
   122d4:	andeq	r3, r1, r4, ror r3
   122d8:	andeq	r3, r1, r4, ror r3
   122dc:	andeq	r3, r1, r4, ror r3
   122e0:	andeq	r2, r1, r4, asr sl
   122e4:	andeq	r2, r1, r4, lsr sl
   122e8:	andeq	r2, r1, r4, lsr sl
   122ec:	andeq	r2, r1, r4, lsl sl
   122f0:	andeq	r2, r1, r4, lsr sl
   122f4:	andeq	r2, r1, r0, lsr #16
   122f8:	andeq	r2, r1, r4, lsr sl
   122fc:	strdeq	r2, [r1], -ip
   12300:	andeq	r2, r1, r4, lsr sl
   12304:	andeq	r2, r1, r4, lsr sl
   12308:	andeq	r2, r1, r4, lsr sl
   1230c:	andeq	r2, r1, r0, lsr #16
   12310:	andeq	r2, r1, r0, lsr #16
   12314:	andeq	r2, r1, r0, lsr #16
   12318:	andeq	r2, r1, r0, lsr #16
   1231c:	andeq	r2, r1, r0, lsr #16
   12320:	andeq	r2, r1, r0, lsr #16
   12324:	andeq	r2, r1, r0, lsr #16
   12328:	andeq	r2, r1, r0, lsr #16
   1232c:	andeq	r2, r1, r0, lsr #16
   12330:	andeq	r2, r1, r0, lsr #16
   12334:	andeq	r2, r1, r0, lsr #16
   12338:	andeq	r2, r1, r0, lsr #16
   1233c:	andeq	r2, r1, r0, lsr #16
   12340:	andeq	r2, r1, r0, lsr #16
   12344:	andeq	r2, r1, r0, lsr #16
   12348:	andeq	r2, r1, r0, lsr #16
   1234c:	andeq	r2, r1, r4, lsr sl
   12350:	andeq	r2, r1, r4, lsr sl
   12354:	andeq	r2, r1, r4, lsr sl
   12358:	andeq	r2, r1, r4, lsr sl
   1235c:	andeq	r2, r1, ip, lsr #15
   12360:	andeq	r3, r1, r4, ror r3
   12364:	andeq	r2, r1, r0, lsr #16
   12368:	andeq	r2, r1, r0, lsr #16
   1236c:	andeq	r2, r1, r0, lsr #16
   12370:	andeq	r2, r1, r0, lsr #16
   12374:	andeq	r2, r1, r0, lsr #16
   12378:	andeq	r2, r1, r0, lsr #16
   1237c:	andeq	r2, r1, r0, lsr #16
   12380:	andeq	r2, r1, r0, lsr #16
   12384:	andeq	r2, r1, r0, lsr #16
   12388:	andeq	r2, r1, r0, lsr #16
   1238c:	andeq	r2, r1, r0, lsr #16
   12390:	andeq	r2, r1, r0, lsr #16
   12394:	andeq	r2, r1, r0, lsr #16
   12398:	andeq	r2, r1, r0, lsr #16
   1239c:	andeq	r2, r1, r0, lsr #16
   123a0:	andeq	r2, r1, r0, lsr #16
   123a4:	andeq	r2, r1, r0, lsr #16
   123a8:	andeq	r2, r1, r0, lsr #16
   123ac:	andeq	r2, r1, r0, lsr #16
   123b0:	andeq	r2, r1, r0, lsr #16
   123b4:	andeq	r2, r1, r0, lsr #16
   123b8:	andeq	r2, r1, r0, lsr #16
   123bc:	andeq	r2, r1, r0, lsr #16
   123c0:	andeq	r2, r1, r0, lsr #16
   123c4:	andeq	r2, r1, r0, lsr #16
   123c8:	andeq	r2, r1, r0, lsr #16
   123cc:	andeq	r2, r1, r4, lsr sl
   123d0:	andeq	r2, r1, r8, ror r7
   123d4:	andeq	r2, r1, r0, lsr #16
   123d8:	andeq	r2, r1, r4, lsr sl
   123dc:	andeq	r2, r1, r0, lsr #16
   123e0:	andeq	r2, r1, r4, lsr sl
   123e4:	andeq	r2, r1, r0, lsr #16
   123e8:	andeq	r2, r1, r0, lsr #16
   123ec:	andeq	r2, r1, r0, lsr #16
   123f0:	andeq	r2, r1, r0, lsr #16
   123f4:	andeq	r2, r1, r0, lsr #16
   123f8:	andeq	r2, r1, r0, lsr #16
   123fc:	andeq	r2, r1, r0, lsr #16
   12400:	andeq	r2, r1, r0, lsr #16
   12404:	andeq	r2, r1, r0, lsr #16
   12408:	andeq	r2, r1, r0, lsr #16
   1240c:	andeq	r2, r1, r0, lsr #16
   12410:	andeq	r2, r1, r0, lsr #16
   12414:	andeq	r2, r1, r0, lsr #16
   12418:	andeq	r2, r1, r0, lsr #16
   1241c:	andeq	r2, r1, r0, lsr #16
   12420:	andeq	r2, r1, r0, lsr #16
   12424:	andeq	r2, r1, r0, lsr #16
   12428:	andeq	r2, r1, r0, lsr #16
   1242c:	andeq	r2, r1, r0, lsr #16
   12430:	andeq	r2, r1, r0, lsr #16
   12434:	andeq	r2, r1, r0, lsr #16
   12438:	andeq	r2, r1, r0, lsr #16
   1243c:	andeq	r2, r1, r0, lsr #16
   12440:	andeq	r2, r1, r0, lsr #16
   12444:	andeq	r2, r1, r0, lsr #16
   12448:	andeq	r2, r1, r0, lsr #16
   1244c:	andeq	r2, r1, r0, lsr r6
   12450:	andeq	r2, r1, r4, lsr sl
   12454:	andeq	r2, r1, r0, lsr r6
   12458:	andeq	r2, r1, r4, lsl sl
   1245c:	mov	r3, #1
   12460:	str	r3, [sp, #40]	; 0x28
   12464:	str	r3, [sp, #68]	; 0x44
   12468:	mov	r8, #0
   1246c:	ldr	r3, [pc, #4056]	; 1344c <close@plt+0x2560>
   12470:	str	r3, [sp, #72]	; 0x48
   12474:	mov	r3, #2
   12478:	str	r3, [sp, #176]	; 0xb0
   1247c:	ldr	r1, [sp, #56]	; 0x38
   12480:	mov	r2, r3
   12484:	ldr	ip, [sp, #40]	; 0x28
   12488:	mov	lr, r3
   1248c:	b	12158 <close@plt+0x126c>
   12490:	mov	r3, #1
   12494:	str	r3, [sp, #56]	; 0x38
   12498:	str	r3, [sp, #68]	; 0x44
   1249c:	str	r3, [sp, #40]	; 0x28
   124a0:	ldr	r3, [pc, #4004]	; 1344c <close@plt+0x2560>
   124a4:	mov	r8, #0
   124a8:	str	r3, [sp, #72]	; 0x48
   124ac:	b	12474 <close@plt+0x1588>
   124b0:	mov	r3, #1
   124b4:	str	r3, [sp, #56]	; 0x38
   124b8:	str	r3, [sp, #68]	; 0x44
   124bc:	str	r3, [sp, #40]	; 0x28
   124c0:	ldr	r3, [pc, #3976]	; 13450 <close@plt+0x2564>
   124c4:	mov	r8, #0
   124c8:	str	r3, [sp, #72]	; 0x48
   124cc:	mov	r3, #5
   124d0:	b	12478 <close@plt+0x158c>
   124d4:	mov	r3, #0
   124d8:	str	r3, [sp, #40]	; 0x28
   124dc:	mov	r3, #1
   124e0:	str	r3, [sp, #56]	; 0x38
   124e4:	mov	r8, #0
   124e8:	mov	r1, r3
   124ec:	ldr	r2, [sp, #176]	; 0xb0
   124f0:	ldr	ip, [sp, #40]	; 0x28
   124f4:	ldr	lr, [sp, #176]	; 0xb0
   124f8:	b	12158 <close@plt+0x126c>
   124fc:	ldr	r3, [sp, #176]	; 0xb0
   12500:	cmp	r3, #10
   12504:	beq	12548 <close@plt+0x165c>
   12508:	mov	r2, #5
   1250c:	ldr	r1, [pc, #3904]	; 13454 <close@plt+0x2568>
   12510:	mov	r0, #0
   12514:	bl	10d18 <dcgettext@plt>
   12518:	ldr	r2, [pc, #3892]	; 13454 <close@plt+0x2568>
   1251c:	cmp	r0, r2
   12520:	str	r0, [sp, #188]	; 0xbc
   12524:	beq	135e0 <close@plt+0x26f4>
   12528:	mov	r2, #5
   1252c:	ldr	r1, [pc, #3864]	; 1344c <close@plt+0x2560>
   12530:	mov	r0, #0
   12534:	bl	10d18 <dcgettext@plt>
   12538:	ldr	r2, [pc, #3852]	; 1344c <close@plt+0x2560>
   1253c:	cmp	r0, r2
   12540:	str	r0, [sp, #192]	; 0xc0
   12544:	beq	135d0 <close@plt+0x26e4>
   12548:	ldr	r8, [sp, #40]	; 0x28
   1254c:	cmp	r8, #0
   12550:	movne	r8, #0
   12554:	bne	12584 <close@plt+0x1698>
   12558:	ldr	r3, [sp, #188]	; 0xbc
   1255c:	ldrb	r3, [r3]
   12560:	cmp	r3, #0
   12564:	beq	12584 <close@plt+0x1698>
   12568:	ldr	r2, [sp, #188]	; 0xbc
   1256c:	cmp	fp, r8
   12570:	strbhi	r3, [r9, r8]
   12574:	ldrb	r3, [r2, #1]!
   12578:	add	r8, r8, #1
   1257c:	cmp	r3, #0
   12580:	bne	1256c <close@plt+0x1680>
   12584:	ldr	r0, [sp, #192]	; 0xc0
   12588:	bl	10e14 <strlen@plt>
   1258c:	ldr	r3, [sp, #192]	; 0xc0
   12590:	ldr	r2, [sp, #176]	; 0xb0
   12594:	str	r3, [sp, #72]	; 0x48
   12598:	mov	r3, #1
   1259c:	str	r3, [sp, #56]	; 0x38
   125a0:	mov	r1, r3
   125a4:	ldr	ip, [sp, #40]	; 0x28
   125a8:	ldr	lr, [sp, #176]	; 0xb0
   125ac:	str	r0, [sp, #68]	; 0x44
   125b0:	b	12158 <close@plt+0x126c>
   125b4:	ldr	r3, [sp, #40]	; 0x28
   125b8:	cmp	r3, #0
   125bc:	beq	13264 <close@plt+0x2378>
   125c0:	mov	r3, #1
   125c4:	str	r3, [sp, #68]	; 0x44
   125c8:	ldr	r3, [pc, #3708]	; 1344c <close@plt+0x2560>
   125cc:	str	r3, [sp, #72]	; 0x48
   125d0:	mov	r8, #0
   125d4:	ldr	r1, [sp, #56]	; 0x38
   125d8:	ldr	r2, [sp, #176]	; 0xb0
   125dc:	ldr	ip, [sp, #40]	; 0x28
   125e0:	ldr	lr, [sp, #176]	; 0xb0
   125e4:	b	12158 <close@plt+0x126c>
   125e8:	ldr	r3, [sp, #40]	; 0x28
   125ec:	cmp	r3, #0
   125f0:	beq	132e8 <close@plt+0x23fc>
   125f4:	str	r3, [sp, #56]	; 0x38
   125f8:	mov	r3, #1
   125fc:	str	r3, [sp, #68]	; 0x44
   12600:	ldr	r3, [pc, #3656]	; 13450 <close@plt+0x2564>
   12604:	b	125cc <close@plt+0x16e0>
   12608:	ldr	r3, [sp, #40]	; 0x28
   1260c:	cmp	r3, #0
   12610:	mov	r3, #1
   12614:	streq	r3, [sp, #56]	; 0x38
   12618:	beq	13264 <close@plt+0x2378>
   1261c:	str	r3, [sp, #68]	; 0x44
   12620:	ldr	r3, [pc, #3620]	; 1344c <close@plt+0x2560>
   12624:	mov	r8, #0
   12628:	str	r3, [sp, #72]	; 0x48
   1262c:	b	12474 <close@plt+0x1588>
   12630:	ldr	r3, [sp, #24]
   12634:	ldr	r6, [sp, #48]	; 0x30
   12638:	cmn	r3, #1
   1263c:	beq	12c98 <close@plt+0x1dac>
   12640:	subs	r3, r3, #1
   12644:	movne	r3, #1
   12648:	cmp	r3, #0
   1264c:	beq	12a18 <close@plt+0x1b2c>
   12650:	ldr	r1, [sp, #52]	; 0x34
   12654:	mov	r7, r3
   12658:	mov	r3, #0
   1265c:	str	r3, [sp, #32]
   12660:	ldr	r3, [sp, #60]	; 0x3c
   12664:	orr	r2, r1, r3
   12668:	ldr	r3, [sp, #40]	; 0x28
   1266c:	eor	r2, r2, #1
   12670:	orr	r2, r3, r2
   12674:	tst	r2, #255	; 0xff
   12678:	bne	12f9c <close@plt+0x20b0>
   1267c:	cmp	r6, #0
   12680:	bne	1285c <close@plt+0x1970>
   12684:	ldr	r3, [sp, #36]	; 0x24
   12688:	add	sl, sl, #1
   1268c:	and	r3, r3, r7
   12690:	uxtb	r6, r3
   12694:	cmp	r6, #0
   12698:	beq	126c4 <close@plt+0x17d8>
   1269c:	cmp	fp, r8
   126a0:	movhi	r3, #39	; 0x27
   126a4:	strbhi	r3, [r9, r8]
   126a8:	add	r3, r8, #1
   126ac:	cmp	fp, r3
   126b0:	movhi	r2, #39	; 0x27
   126b4:	add	r8, r8, #2
   126b8:	strbhi	r2, [r9, r3]
   126bc:	mov	r3, #0
   126c0:	str	r3, [sp, #36]	; 0x24
   126c4:	ldr	r2, [sp, #32]
   126c8:	cmp	r8, fp
   126cc:	ldr	r3, [sp, #28]
   126d0:	strbcc	r4, [r9, r8]
   126d4:	cmp	r2, #0
   126d8:	moveq	r3, #0
   126dc:	str	r3, [sp, #28]
   126e0:	ldr	r3, [sp, #24]
   126e4:	add	r8, r8, #1
   126e8:	cmn	r3, #1
   126ec:	bne	121c4 <close@plt+0x12d8>
   126f0:	ldr	r3, [sp, #44]	; 0x2c
   126f4:	ldrb	r3, [r3, sl]
   126f8:	adds	r7, r3, #0
   126fc:	movne	r7, #1
   12700:	cmp	r7, #0
   12704:	bne	121d4 <close@plt+0x12e8>
   12708:	ldr	r3, [sp, #64]	; 0x40
   1270c:	cmp	r8, #0
   12710:	movne	r3, #0
   12714:	andeq	r3, r3, #1
   12718:	cmp	r3, #0
   1271c:	str	r3, [sp, #64]	; 0x40
   12720:	bne	131c4 <close@plt+0x22d8>
   12724:	ldr	r3, [sp, #40]	; 0x28
   12728:	ldr	r2, [sp, #52]	; 0x34
   1272c:	eor	r3, r3, #1
   12730:	ands	r2, r2, r3
   12734:	beq	135f0 <close@plt+0x2704>
   12738:	ldr	r3, [sp, #76]	; 0x4c
   1273c:	cmp	r3, #0
   12740:	beq	135c0 <close@plt+0x26d4>
   12744:	ldr	r3, [sp, #28]
   12748:	cmp	r3, #0
   1274c:	bne	1357c <close@plt+0x2690>
   12750:	ldr	r2, [sp, #84]	; 0x54
   12754:	clz	r3, fp
   12758:	cmp	r2, #0
   1275c:	lsr	r3, r3, #5
   12760:	moveq	r3, #0
   12764:	cmp	r3, #0
   12768:	beq	1351c <close@plt+0x2630>
   1276c:	mov	fp, r2
   12770:	str	r3, [sp, #76]	; 0x4c
   12774:	b	12100 <close@plt+0x1214>
   12778:	ldr	r3, [sp, #176]	; 0xb0
   1277c:	ldr	r6, [sp, #48]	; 0x30
   12780:	cmp	r3, #2
   12784:	beq	12cbc <close@plt+0x1dd0>
   12788:	ldr	r3, [sp, #88]	; 0x58
   1278c:	cmp	r3, #0
   12790:	beq	13240 <close@plt+0x2354>
   12794:	mov	r3, #0
   12798:	add	sl, sl, #1
   1279c:	ldr	r6, [sp, #36]	; 0x24
   127a0:	str	r3, [sp, #32]
   127a4:	mov	r4, #92	; 0x5c
   127a8:	b	12694 <close@plt+0x17a8>
   127ac:	ldr	r3, [sp, #176]	; 0xb0
   127b0:	ldr	r6, [sp, #48]	; 0x30
   127b4:	cmp	r3, #2
   127b8:	beq	12cec <close@plt+0x1e00>
   127bc:	cmp	r3, #5
   127c0:	bne	13250 <close@plt+0x2364>
   127c4:	ldr	r3, [sp, #100]	; 0x64
   127c8:	cmp	r3, #0
   127cc:	beq	132b4 <close@plt+0x23c8>
   127d0:	ldr	r2, [sp, #24]
   127d4:	add	r3, sl, #2
   127d8:	cmp	r2, r3
   127dc:	bls	127ec <close@plt+0x1900>
   127e0:	ldrb	r4, [r5, #1]
   127e4:	cmp	r4, #63	; 0x3f
   127e8:	beq	1345c <close@plt+0x2570>
   127ec:	mov	r1, #0
   127f0:	str	r1, [sp, #32]
   127f4:	mov	r4, #63	; 0x3f
   127f8:	b	12660 <close@plt+0x1774>
   127fc:	ldr	r3, [sp, #176]	; 0xb0
   12800:	ldr	r6, [sp, #48]	; 0x30
   12804:	cmp	r3, #2
   12808:	beq	12d18 <close@plt+0x1e2c>
   1280c:	str	r7, [sp, #32]
   12810:	str	r7, [sp, #76]	; 0x4c
   12814:	mov	r1, #0
   12818:	mov	r4, #39	; 0x27
   1281c:	b	12660 <close@plt+0x1774>
   12820:	ldr	r6, [sp, #48]	; 0x30
   12824:	ldr	r1, [sp, #52]	; 0x34
   12828:	str	r7, [sp, #32]
   1282c:	b	12660 <close@plt+0x1774>
   12830:	ldr	r6, [sp, #48]	; 0x30
   12834:	ldr	r1, [sp, #52]	; 0x34
   12838:	mov	r4, #12
   1283c:	mov	r3, #102	; 0x66
   12840:	ldr	r2, [sp, #56]	; 0x38
   12844:	cmp	r2, #0
   12848:	streq	r2, [sp, #32]
   1284c:	beq	12660 <close@plt+0x1774>
   12850:	mov	r4, r3
   12854:	mov	r3, #0
   12858:	str	r3, [sp, #32]
   1285c:	ldr	r3, [sp, #40]	; 0x28
   12860:	cmp	r3, #0
   12864:	bne	12fd4 <close@plt+0x20e8>
   12868:	ldr	r3, [sp, #36]	; 0x24
   1286c:	eor	r3, r3, #1
   12870:	and	r3, r3, r1
   12874:	ands	r3, r3, #255	; 0xff
   12878:	beq	128b0 <close@plt+0x19c4>
   1287c:	cmp	fp, r8
   12880:	movhi	r2, #39	; 0x27
   12884:	strbhi	r2, [r9, r8]
   12888:	add	r2, r8, #1
   1288c:	cmp	fp, r2
   12890:	movhi	r1, #36	; 0x24
   12894:	strbhi	r1, [r9, r2]
   12898:	add	r2, r8, #2
   1289c:	cmp	fp, r2
   128a0:	add	r8, r8, #3
   128a4:	movhi	r1, #39	; 0x27
   128a8:	strbhi	r1, [r9, r2]
   128ac:	str	r3, [sp, #36]	; 0x24
   128b0:	cmp	fp, r8
   128b4:	movhi	r3, #92	; 0x5c
   128b8:	strbhi	r3, [r9, r8]
   128bc:	add	sl, sl, #1
   128c0:	add	r8, r8, #1
   128c4:	b	126c4 <close@plt+0x17d8>
   128c8:	ldr	r6, [sp, #48]	; 0x30
   128cc:	mov	r4, #10
   128d0:	mov	r3, #110	; 0x6e
   128d4:	ldr	r2, [sp, #64]	; 0x40
   128d8:	cmp	r2, #0
   128dc:	bne	1335c <close@plt+0x2470>
   128e0:	ldr	r1, [sp, #52]	; 0x34
   128e4:	b	12840 <close@plt+0x1954>
   128e8:	ldr	r6, [sp, #48]	; 0x30
   128ec:	ldr	r1, [sp, #52]	; 0x34
   128f0:	mov	r3, #116	; 0x74
   128f4:	b	12840 <close@plt+0x1954>
   128f8:	ldr	r6, [sp, #48]	; 0x30
   128fc:	ldr	r1, [sp, #52]	; 0x34
   12900:	mov	r4, #11
   12904:	mov	r3, #118	; 0x76
   12908:	b	12840 <close@plt+0x1954>
   1290c:	ldr	r6, [sp, #48]	; 0x30
   12910:	ldr	r1, [sp, #52]	; 0x34
   12914:	mov	r4, #8
   12918:	mov	r3, #98	; 0x62
   1291c:	b	12840 <close@plt+0x1954>
   12920:	ldr	r6, [sp, #48]	; 0x30
   12924:	ldr	r1, [sp, #52]	; 0x34
   12928:	mov	r4, #7
   1292c:	mov	r3, #97	; 0x61
   12930:	b	12840 <close@plt+0x1954>
   12934:	ldr	r3, [sp, #56]	; 0x38
   12938:	ldr	r6, [sp, #48]	; 0x30
   1293c:	cmp	r3, #0
   12940:	beq	12e04 <close@plt+0x1f18>
   12944:	ldr	r3, [sp, #40]	; 0x28
   12948:	cmp	r3, #0
   1294c:	bne	13438 <close@plt+0x254c>
   12950:	ldr	r3, [sp, #36]	; 0x24
   12954:	ldr	r2, [sp, #52]	; 0x34
   12958:	eor	r3, r3, #1
   1295c:	ands	r3, r2, r3
   12960:	moveq	r2, r8
   12964:	beq	1299c <close@plt+0x1ab0>
   12968:	cmp	fp, r8
   1296c:	movhi	r2, #39	; 0x27
   12970:	strbhi	r2, [r9, r8]
   12974:	add	r2, r8, #1
   12978:	cmp	fp, r2
   1297c:	movhi	r1, #36	; 0x24
   12980:	strbhi	r1, [r9, r2]
   12984:	add	r2, r8, #2
   12988:	cmp	fp, r2
   1298c:	movhi	r1, #39	; 0x27
   12990:	strbhi	r1, [r9, r2]
   12994:	add	r2, r8, #3
   12998:	str	r3, [sp, #36]	; 0x24
   1299c:	cmp	fp, r2
   129a0:	movhi	r3, #92	; 0x5c
   129a4:	strbhi	r3, [r9, r2]
   129a8:	ldr	r3, [sp, #92]	; 0x5c
   129ac:	add	r8, r2, #1
   129b0:	cmp	r3, #0
   129b4:	beq	13338 <close@plt+0x244c>
   129b8:	ldr	r1, [sp, #24]
   129bc:	add	r3, sl, #1
   129c0:	cmp	r1, r3
   129c4:	bls	129fc <close@plt+0x1b10>
   129c8:	ldr	r1, [sp, #44]	; 0x2c
   129cc:	ldrb	r3, [r1, r3]
   129d0:	sub	r3, r3, #48	; 0x30
   129d4:	cmp	r3, #9
   129d8:	bhi	129fc <close@plt+0x1b10>
   129dc:	cmp	fp, r8
   129e0:	movhi	r3, #48	; 0x30
   129e4:	strbhi	r3, [r9, r8]
   129e8:	add	r3, r2, #2
   129ec:	cmp	fp, r3
   129f0:	add	r8, r2, #3
   129f4:	movhi	r1, #48	; 0x30
   129f8:	strbhi	r1, [r9, r3]
   129fc:	ldr	r3, [sp, #40]	; 0x28
   12a00:	ldr	r1, [sp, #52]	; 0x34
   12a04:	mov	r7, r3
   12a08:	str	r3, [sp, #32]
   12a0c:	mov	r4, #48	; 0x30
   12a10:	b	12660 <close@plt+0x1774>
   12a14:	ldr	r6, [sp, #48]	; 0x30
   12a18:	cmp	sl, #0
   12a1c:	streq	r7, [sp, #32]
   12a20:	beq	12a40 <close@plt+0x1b54>
   12a24:	mov	r3, #0
   12a28:	ldr	r1, [sp, #52]	; 0x34
   12a2c:	str	r3, [sp, #32]
   12a30:	b	12660 <close@plt+0x1774>
   12a34:	ldr	r6, [sp, #48]	; 0x30
   12a38:	mov	r3, #0
   12a3c:	str	r3, [sp, #32]
   12a40:	ldr	r3, [sp, #64]	; 0x40
   12a44:	cmp	r3, #0
   12a48:	bne	131c4 <close@plt+0x22d8>
   12a4c:	ldr	r1, [sp, #52]	; 0x34
   12a50:	b	12660 <close@plt+0x1774>
   12a54:	ldr	r3, [sp, #48]	; 0x30
   12a58:	mov	r6, r3
   12a5c:	str	r3, [sp, #32]
   12a60:	b	12a40 <close@plt+0x1b54>
   12a64:	ldr	r6, [sp, #48]	; 0x30
   12a68:	mov	r4, #13
   12a6c:	mov	r3, #114	; 0x72
   12a70:	b	128d4 <close@plt+0x19e8>
   12a74:	ldr	r3, [sp, #44]	; 0x2c
   12a78:	add	r5, r3, sl
   12a7c:	ldrb	r4, [r5]
   12a80:	cmp	r4, #126	; 0x7e
   12a84:	ldrls	pc, [pc, r4, lsl #2]
   12a88:	b	12e24 <close@plt+0x1f38>
   12a8c:	strdeq	r2, [r1], -r4
   12a90:	andeq	r2, r1, r4, lsr #28
   12a94:	andeq	r2, r1, r4, lsr #28
   12a98:	andeq	r2, r1, r4, lsr #28
   12a9c:	andeq	r2, r1, r4, lsr #28
   12aa0:	andeq	r2, r1, r4, lsr #28
   12aa4:	andeq	r2, r1, r4, lsr #28
   12aa8:	andeq	r2, r1, ip, ror #27
   12aac:	andeq	r2, r1, r4, ror #27
   12ab0:	ldrdeq	r2, [r1], -r8
   12ab4:	ldrdeq	r2, [r1], -r0
   12ab8:	andeq	r2, r1, r8, asr #27
   12abc:	andeq	r2, r1, r0, asr #27
   12ac0:			; <UNDEFINED> instruction: 0x00012db8
   12ac4:	andeq	r2, r1, r4, lsr #28
   12ac8:	andeq	r2, r1, r4, lsr #28
   12acc:	andeq	r2, r1, r4, lsr #28
   12ad0:	andeq	r2, r1, r4, lsr #28
   12ad4:	andeq	r2, r1, r4, lsr #28
   12ad8:	andeq	r2, r1, r4, lsr #28
   12adc:	andeq	r2, r1, r4, lsr #28
   12ae0:	andeq	r2, r1, r4, lsr #28
   12ae4:	andeq	r2, r1, r4, lsr #28
   12ae8:	andeq	r2, r1, r4, lsr #28
   12aec:	andeq	r2, r1, r4, lsr #28
   12af0:	andeq	r2, r1, r4, lsr #28
   12af4:	andeq	r2, r1, r4, lsr #28
   12af8:	andeq	r2, r1, r4, lsr #28
   12afc:	andeq	r2, r1, r4, lsr #28
   12b00:	andeq	r2, r1, r4, lsr #28
   12b04:	andeq	r2, r1, r4, lsr #28
   12b08:	andeq	r2, r1, r4, lsr #28
   12b0c:	andeq	r2, r1, ip, lsr #27
   12b10:	andeq	r2, r1, r4, lsr #27
   12b14:	andeq	r2, r1, r4, lsr #27
   12b18:	muleq	r1, ip, sp
   12b1c:	andeq	r2, r1, r4, lsr #27
   12b20:	muleq	r1, r4, sp
   12b24:	andeq	r2, r1, r4, lsr #27
   12b28:	andeq	r2, r1, r8, lsl #26
   12b2c:	andeq	r2, r1, r4, lsr #27
   12b30:	andeq	r2, r1, r4, lsr #27
   12b34:	andeq	r2, r1, r4, lsr #27
   12b38:	muleq	r1, r4, sp
   12b3c:	muleq	r1, r4, sp
   12b40:	muleq	r1, r4, sp
   12b44:	muleq	r1, r4, sp
   12b48:	muleq	r1, r4, sp
   12b4c:	muleq	r1, r4, sp
   12b50:	muleq	r1, r4, sp
   12b54:	muleq	r1, r4, sp
   12b58:	muleq	r1, r4, sp
   12b5c:	muleq	r1, r4, sp
   12b60:	muleq	r1, r4, sp
   12b64:	muleq	r1, r4, sp
   12b68:	muleq	r1, r4, sp
   12b6c:	muleq	r1, r4, sp
   12b70:	muleq	r1, r4, sp
   12b74:	muleq	r1, r4, sp
   12b78:	andeq	r2, r1, r4, lsr #27
   12b7c:	andeq	r2, r1, r4, lsr #27
   12b80:	andeq	r2, r1, r4, lsr #27
   12b84:	andeq	r2, r1, r4, lsr #27
   12b88:	ldrdeq	r2, [r1], -ip
   12b8c:	andeq	r2, r1, r4, lsr #28
   12b90:	muleq	r1, r4, sp
   12b94:	muleq	r1, r4, sp
   12b98:	muleq	r1, r4, sp
   12b9c:	muleq	r1, r4, sp
   12ba0:	muleq	r1, r4, sp
   12ba4:	muleq	r1, r4, sp
   12ba8:	muleq	r1, r4, sp
   12bac:	muleq	r1, r4, sp
   12bb0:	muleq	r1, r4, sp
   12bb4:	muleq	r1, r4, sp
   12bb8:	muleq	r1, r4, sp
   12bbc:	muleq	r1, r4, sp
   12bc0:	muleq	r1, r4, sp
   12bc4:	muleq	r1, r4, sp
   12bc8:	muleq	r1, r4, sp
   12bcc:	muleq	r1, r4, sp
   12bd0:	muleq	r1, r4, sp
   12bd4:	muleq	r1, r4, sp
   12bd8:	muleq	r1, r4, sp
   12bdc:	muleq	r1, r4, sp
   12be0:	muleq	r1, r4, sp
   12be4:	muleq	r1, r4, sp
   12be8:	muleq	r1, r4, sp
   12bec:	muleq	r1, r4, sp
   12bf0:	muleq	r1, r4, sp
   12bf4:	muleq	r1, r4, sp
   12bf8:	andeq	r2, r1, r4, lsr #27
   12bfc:	andeq	r2, r1, ip, lsr #25
   12c00:	muleq	r1, r4, sp
   12c04:	andeq	r2, r1, r4, lsr #27
   12c08:	muleq	r1, r4, sp
   12c0c:	andeq	r2, r1, r4, lsr #27
   12c10:	muleq	r1, r4, sp
   12c14:	muleq	r1, r4, sp
   12c18:	muleq	r1, r4, sp
   12c1c:	muleq	r1, r4, sp
   12c20:	muleq	r1, r4, sp
   12c24:	muleq	r1, r4, sp
   12c28:	muleq	r1, r4, sp
   12c2c:	muleq	r1, r4, sp
   12c30:	muleq	r1, r4, sp
   12c34:	muleq	r1, r4, sp
   12c38:	muleq	r1, r4, sp
   12c3c:	muleq	r1, r4, sp
   12c40:	muleq	r1, r4, sp
   12c44:	muleq	r1, r4, sp
   12c48:	muleq	r1, r4, sp
   12c4c:	muleq	r1, r4, sp
   12c50:	muleq	r1, r4, sp
   12c54:	muleq	r1, r4, sp
   12c58:	muleq	r1, r4, sp
   12c5c:	muleq	r1, r4, sp
   12c60:	muleq	r1, r4, sp
   12c64:	muleq	r1, r4, sp
   12c68:	muleq	r1, r4, sp
   12c6c:	muleq	r1, r4, sp
   12c70:	muleq	r1, r4, sp
   12c74:	muleq	r1, r4, sp
   12c78:	andeq	r2, r1, r8, lsl #25
   12c7c:	andeq	r2, r1, r4, lsr #27
   12c80:	andeq	r2, r1, r8, lsl #25
   12c84:	muleq	r1, ip, sp
   12c88:	ldr	r3, [sp, #24]
   12c8c:	mov	r6, #0
   12c90:	cmn	r3, #1
   12c94:	bne	12640 <close@plt+0x1754>
   12c98:	ldr	r3, [sp, #44]	; 0x2c
   12c9c:	ldrb	r3, [r3, #1]
   12ca0:	adds	r3, r3, #0
   12ca4:	movne	r3, #1
   12ca8:	b	12648 <close@plt+0x175c>
   12cac:	ldr	r3, [sp, #176]	; 0xb0
   12cb0:	mov	r6, #0
   12cb4:	cmp	r3, #2
   12cb8:	bne	12788 <close@plt+0x189c>
   12cbc:	ldr	r3, [sp, #64]	; 0x40
   12cc0:	cmp	r3, #0
   12cc4:	bne	134fc <close@plt+0x2610>
   12cc8:	add	sl, sl, #1
   12ccc:	ldr	r6, [sp, #36]	; 0x24
   12cd0:	str	r3, [sp, #32]
   12cd4:	mov	r4, #92	; 0x5c
   12cd8:	b	12694 <close@plt+0x17a8>
   12cdc:	ldr	r3, [sp, #176]	; 0xb0
   12ce0:	mov	r6, #0
   12ce4:	cmp	r3, #2
   12ce8:	bne	127bc <close@plt+0x18d0>
   12cec:	ldr	r3, [sp, #40]	; 0x28
   12cf0:	cmp	r3, #0
   12cf4:	bne	12fd8 <close@plt+0x20ec>
   12cf8:	mov	r1, r7
   12cfc:	str	r3, [sp, #32]
   12d00:	mov	r4, #63	; 0x3f
   12d04:	b	12660 <close@plt+0x1774>
   12d08:	ldr	r3, [sp, #176]	; 0xb0
   12d0c:	mov	r6, #0
   12d10:	cmp	r3, #2
   12d14:	bne	1280c <close@plt+0x1920>
   12d18:	ldr	r3, [sp, #64]	; 0x40
   12d1c:	cmp	r3, #0
   12d20:	bne	134fc <close@plt+0x2610>
   12d24:	ldr	r2, [sp, #84]	; 0x54
   12d28:	adds	r3, fp, #0
   12d2c:	movne	r3, #1
   12d30:	cmp	r2, #0
   12d34:	movne	r3, #0
   12d38:	cmp	r3, #0
   12d3c:	strne	fp, [sp, #84]	; 0x54
   12d40:	movne	fp, #0
   12d44:	bne	12d74 <close@plt+0x1e88>
   12d48:	cmp	fp, r8
   12d4c:	movhi	r3, #39	; 0x27
   12d50:	strbhi	r3, [r9, r8]
   12d54:	add	r3, r8, #1
   12d58:	cmp	fp, r3
   12d5c:	movhi	r2, #92	; 0x5c
   12d60:	strbhi	r2, [r9, r3]
   12d64:	add	r3, r8, #2
   12d68:	cmp	fp, r3
   12d6c:	movhi	r2, #39	; 0x27
   12d70:	strbhi	r2, [r9, r3]
   12d74:	ldr	r3, [sp, #64]	; 0x40
   12d78:	add	r8, r8, #3
   12d7c:	mov	r1, r7
   12d80:	str	r7, [sp, #32]
   12d84:	str	r7, [sp, #76]	; 0x4c
   12d88:	str	r3, [sp, #36]	; 0x24
   12d8c:	mov	r4, #39	; 0x27
   12d90:	b	12660 <close@plt+0x1774>
   12d94:	mov	r6, #0
   12d98:	b	12824 <close@plt+0x1938>
   12d9c:	mov	r6, #0
   12da0:	b	12a18 <close@plt+0x1b2c>
   12da4:	mov	r6, #0
   12da8:	b	12a38 <close@plt+0x1b4c>
   12dac:	str	r7, [sp, #32]
   12db0:	mov	r6, #0
   12db4:	b	12a40 <close@plt+0x1b54>
   12db8:	mov	r6, #0
   12dbc:	b	12a68 <close@plt+0x1b7c>
   12dc0:	mov	r6, #0
   12dc4:	b	12834 <close@plt+0x1948>
   12dc8:	mov	r6, #0
   12dcc:	b	128fc <close@plt+0x1a10>
   12dd0:	mov	r6, #0
   12dd4:	b	128cc <close@plt+0x19e0>
   12dd8:	mov	r6, #0
   12ddc:	mov	r3, #116	; 0x74
   12de0:	b	128d4 <close@plt+0x19e8>
   12de4:	mov	r6, #0
   12de8:	b	12910 <close@plt+0x1a24>
   12dec:	mov	r6, #0
   12df0:	b	12924 <close@plt+0x1a38>
   12df4:	ldr	r3, [sp, #56]	; 0x38
   12df8:	mov	r6, #0
   12dfc:	cmp	r3, #0
   12e00:	bne	12944 <close@plt+0x1a58>
   12e04:	ldr	r3, [sp, #96]	; 0x60
   12e08:	cmp	r3, #0
   12e0c:	addne	sl, sl, #1
   12e10:	bne	121b8 <close@plt+0x12cc>
   12e14:	ldr	r1, [sp, #52]	; 0x34
   12e18:	str	r3, [sp, #32]
   12e1c:	mov	r4, r3
   12e20:	b	12660 <close@plt+0x1774>
   12e24:	mov	r6, #0
   12e28:	ldr	r3, [sp, #80]	; 0x50
   12e2c:	cmp	r3, #1
   12e30:	bne	13020 <close@plt+0x2134>
   12e34:	bl	10dfc <__ctype_b_loc@plt>
   12e38:	ldr	r2, [sp, #80]	; 0x50
   12e3c:	sxth	r3, r4
   12e40:	mov	r1, r2
   12e44:	lsl	r3, r3, #1
   12e48:	ldr	r2, [r0]
   12e4c:	ldrh	r3, [r2, r3]
   12e50:	and	r3, r3, #16384	; 0x4000
   12e54:	cmp	r3, #0
   12e58:	movne	r3, #1
   12e5c:	moveq	r3, #0
   12e60:	str	r3, [sp, #32]
   12e64:	moveq	r3, #1
   12e68:	movne	r3, #0
   12e6c:	ldr	r2, [sp, #56]	; 0x38
   12e70:	and	r3, r3, r2
   12e74:	ands	r3, r3, #255	; 0xff
   12e78:	beq	12a4c <close@plt+0x1b60>
   12e7c:	add	r1, sl, r1
   12e80:	mov	r0, #0
   12e84:	ldr	r7, [sp, #40]	; 0x28
   12e88:	ldr	r2, [sp, #36]	; 0x24
   12e8c:	ldr	lr, [sp, #52]	; 0x34
   12e90:	b	12f40 <close@plt+0x2054>
   12e94:	cmp	r7, #0
   12e98:	bne	13294 <close@plt+0x23a8>
   12e9c:	eor	r0, r2, #1
   12ea0:	ands	r0, lr, r0
   12ea4:	beq	12edc <close@plt+0x1ff0>
   12ea8:	cmp	fp, r8
   12eac:	movhi	r2, #39	; 0x27
   12eb0:	strbhi	r2, [r9, r8]
   12eb4:	add	r2, r8, #1
   12eb8:	cmp	fp, r2
   12ebc:	movhi	ip, #36	; 0x24
   12ec0:	strbhi	ip, [r9, r2]
   12ec4:	add	r2, r8, #2
   12ec8:	cmp	fp, r2
   12ecc:	movhi	ip, #39	; 0x27
   12ed0:	strbhi	ip, [r9, r2]
   12ed4:	add	r8, r8, #3
   12ed8:	mov	r2, r0
   12edc:	cmp	fp, r8
   12ee0:	movhi	r0, #92	; 0x5c
   12ee4:	strbhi	r0, [r9, r8]
   12ee8:	add	r0, r8, #1
   12eec:	cmp	fp, r0
   12ef0:	lsrhi	ip, r4, #6
   12ef4:	addhi	ip, ip, #48	; 0x30
   12ef8:	strbhi	ip, [r9, r0]
   12efc:	add	ip, r8, #2
   12f00:	cmp	fp, ip
   12f04:	lsrhi	r0, r4, #3
   12f08:	andhi	r0, r0, #7
   12f0c:	addhi	r0, r0, #48	; 0x30
   12f10:	add	sl, sl, #1
   12f14:	strbhi	r0, [r9, ip]
   12f18:	and	r4, r4, #7
   12f1c:	cmp	sl, r1
   12f20:	add	r4, r4, #48	; 0x30
   12f24:	add	r8, r8, #3
   12f28:	bcs	132ac <close@plt+0x23c0>
   12f2c:	mov	r0, r3
   12f30:	cmp	fp, r8
   12f34:	strbhi	r4, [r9, r8]
   12f38:	ldrb	r4, [r5, #1]!
   12f3c:	add	r8, r8, #1
   12f40:	cmp	r3, #0
   12f44:	bne	12e94 <close@plt+0x1fa8>
   12f48:	cmp	r6, #0
   12f4c:	bne	12ff0 <close@plt+0x2104>
   12f50:	eor	r6, r0, #1
   12f54:	and	r6, r6, r2
   12f58:	add	sl, sl, #1
   12f5c:	cmp	r1, sl
   12f60:	uxtb	r6, r6
   12f64:	bls	13018 <close@plt+0x212c>
   12f68:	cmp	r6, #0
   12f6c:	beq	12f30 <close@plt+0x2044>
   12f70:	cmp	fp, r8
   12f74:	movhi	r2, #39	; 0x27
   12f78:	strbhi	r2, [r9, r8]
   12f7c:	add	r2, r8, #1
   12f80:	cmp	fp, r2
   12f84:	movhi	ip, #39	; 0x27
   12f88:	strbhi	ip, [r9, r2]
   12f8c:	add	r8, r8, #2
   12f90:	mov	r6, r3
   12f94:	mov	r2, r3
   12f98:	b	12f30 <close@plt+0x2044>
   12f9c:	ldr	r3, [sp, #184]	; 0xb8
   12fa0:	cmp	r3, #0
   12fa4:	beq	1267c <close@plt+0x1790>
   12fa8:	lsr	r2, r4, #5
   12fac:	mov	r0, r3
   12fb0:	uxtb	r2, r2
   12fb4:	and	r3, r4, #31
   12fb8:	ldr	r2, [r0, r2, lsl #2]
   12fbc:	lsr	r3, r2, r3
   12fc0:	tst	r3, #1
   12fc4:	beq	1267c <close@plt+0x1790>
   12fc8:	ldr	r3, [sp, #40]	; 0x28
   12fcc:	cmp	r3, #0
   12fd0:	beq	12868 <close@plt+0x197c>
   12fd4:	mov	r3, r1
   12fd8:	str	r3, [sp, #64]	; 0x40
   12fdc:	mov	sl, r9
   12fe0:	ldr	r3, [sp, #56]	; 0x38
   12fe4:	mov	r9, fp
   12fe8:	ldr	r2, [sp, #64]	; 0x40
   12fec:	b	131dc <close@plt+0x22f0>
   12ff0:	cmp	fp, r8
   12ff4:	eor	r6, r0, #1
   12ff8:	movhi	ip, #92	; 0x5c
   12ffc:	and	r6, r6, r2
   13000:	add	sl, sl, #1
   13004:	strbhi	ip, [r9, r8]
   13008:	cmp	r1, sl
   1300c:	add	r8, r8, #1
   13010:	uxtb	r6, r6
   13014:	bhi	12f68 <close@plt+0x207c>
   13018:	str	r2, [sp, #36]	; 0x24
   1301c:	b	12694 <close@plt+0x17a8>
   13020:	ldr	r3, [sp, #24]
   13024:	cmn	r3, #1
   13028:	mov	r3, #0
   1302c:	str	r3, [sp, #128]	; 0x80
   13030:	str	r3, [sp, #132]	; 0x84
   13034:	beq	13328 <close@plt+0x243c>
   13038:	mov	r2, r7
   1303c:	mov	r3, #0
   13040:	str	r7, [sp, #104]	; 0x68
   13044:	str	r5, [sp, #116]	; 0x74
   13048:	mov	r7, r3
   1304c:	mov	r5, r2
   13050:	str	r4, [sp, #32]
   13054:	str	r6, [sp, #108]	; 0x6c
   13058:	str	r8, [sp, #112]	; 0x70
   1305c:	ldr	r3, [sp, #44]	; 0x2c
   13060:	add	r6, sl, r7
   13064:	add	r4, r3, r6
   13068:	ldr	r3, [sp, #24]
   1306c:	mov	r1, r4
   13070:	sub	r2, r3, r6
   13074:	add	r0, sp, #124	; 0x7c
   13078:	add	r3, sp, #128	; 0x80
   1307c:	bl	17394 <close@plt+0x64a8>
   13080:	subs	r8, r0, #0
   13084:	beq	1340c <close@plt+0x2520>
   13088:	cmn	r8, #1
   1308c:	beq	133e4 <close@plt+0x24f8>
   13090:	cmn	r8, #2
   13094:	beq	1337c <close@plt+0x2490>
   13098:	ldr	r3, [sp, #64]	; 0x40
   1309c:	cmp	r3, #0
   130a0:	beq	13160 <close@plt+0x2274>
   130a4:	cmp	r8, #1
   130a8:	beq	13160 <close@plt+0x2274>
   130ac:	sub	r3, r8, #1
   130b0:	add	r6, r3, r6
   130b4:	ldr	r3, [sp, #44]	; 0x2c
   130b8:	add	r6, r3, r6
   130bc:	ldrb	r3, [r4, #1]!
   130c0:	sub	r3, r3, #91	; 0x5b
   130c4:	cmp	r3, #33	; 0x21
   130c8:	ldrls	pc, [pc, r3, lsl #2]
   130cc:	b	13158 <close@plt+0x226c>
   130d0:	andeq	r3, r1, r4, asr #3
   130d4:	andeq	r3, r1, r4, asr #3
   130d8:	andeq	r3, r1, r8, asr r1
   130dc:	andeq	r3, r1, r4, asr #3
   130e0:	andeq	r3, r1, r8, asr r1
   130e4:	andeq	r3, r1, r4, asr #3
   130e8:	andeq	r3, r1, r8, asr r1
   130ec:	andeq	r3, r1, r8, asr r1
   130f0:	andeq	r3, r1, r8, asr r1
   130f4:	andeq	r3, r1, r8, asr r1
   130f8:	andeq	r3, r1, r8, asr r1
   130fc:	andeq	r3, r1, r8, asr r1
   13100:	andeq	r3, r1, r8, asr r1
   13104:	andeq	r3, r1, r8, asr r1
   13108:	andeq	r3, r1, r8, asr r1
   1310c:	andeq	r3, r1, r8, asr r1
   13110:	andeq	r3, r1, r8, asr r1
   13114:	andeq	r3, r1, r8, asr r1
   13118:	andeq	r3, r1, r8, asr r1
   1311c:	andeq	r3, r1, r8, asr r1
   13120:	andeq	r3, r1, r8, asr r1
   13124:	andeq	r3, r1, r8, asr r1
   13128:	andeq	r3, r1, r8, asr r1
   1312c:	andeq	r3, r1, r8, asr r1
   13130:	andeq	r3, r1, r8, asr r1
   13134:	andeq	r3, r1, r8, asr r1
   13138:	andeq	r3, r1, r8, asr r1
   1313c:	andeq	r3, r1, r8, asr r1
   13140:	andeq	r3, r1, r8, asr r1
   13144:	andeq	r3, r1, r8, asr r1
   13148:	andeq	r3, r1, r8, asr r1
   1314c:	andeq	r3, r1, r8, asr r1
   13150:	andeq	r3, r1, r8, asr r1
   13154:	andeq	r3, r1, r4, asr #3
   13158:	cmp	r6, r4
   1315c:	bne	130bc <close@plt+0x21d0>
   13160:	ldr	r0, [sp, #124]	; 0x7c
   13164:	bl	10d48 <iswprint@plt>
   13168:	add	r7, r7, r8
   1316c:	cmp	r0, #0
   13170:	add	r0, sp, #128	; 0x80
   13174:	moveq	r5, #0
   13178:	bl	10ce8 <mbsinit@plt>
   1317c:	cmp	r0, #0
   13180:	beq	1305c <close@plt+0x2170>
   13184:	ldr	r4, [sp, #32]
   13188:	str	r5, [sp, #32]
   1318c:	ldr	r3, [sp, #32]
   13190:	mov	r1, r7
   13194:	eor	r3, r3, #1
   13198:	ldr	r7, [sp, #104]	; 0x68
   1319c:	ldr	r6, [sp, #108]	; 0x6c
   131a0:	ldr	r8, [sp, #112]	; 0x70
   131a4:	ldr	r5, [sp, #116]	; 0x74
   131a8:	uxtb	r3, r3
   131ac:	cmp	r1, #1
   131b0:	bls	12e6c <close@plt+0x1f80>
   131b4:	ldr	r2, [sp, #56]	; 0x38
   131b8:	and	r3, r3, r2
   131bc:	uxtb	r3, r3
   131c0:	b	12e7c <close@plt+0x1f90>
   131c4:	mov	r3, #2
   131c8:	str	r3, [sp, #176]	; 0xb0
   131cc:	ldr	r2, [sp, #64]	; 0x40
   131d0:	ldr	r3, [sp, #56]	; 0x38
   131d4:	mov	sl, r9
   131d8:	mov	r9, fp
   131dc:	and	r3, r3, r2
   131e0:	tst	r3, #255	; 0xff
   131e4:	ldr	r3, [sp, #176]	; 0xb0
   131e8:	movne	r3, #4
   131ec:	str	r3, [sp, #176]	; 0xb0
   131f0:	ldr	r3, [sp, #180]	; 0xb4
   131f4:	mov	ip, #0
   131f8:	bic	r3, r3, #2
   131fc:	str	r3, [sp, #4]
   13200:	ldr	r3, [sp, #192]	; 0xc0
   13204:	ldr	r2, [sp, #44]	; 0x2c
   13208:	str	r3, [sp, #16]
   1320c:	ldr	r3, [sp, #188]	; 0xbc
   13210:	mov	r1, r9
   13214:	str	r3, [sp, #12]
   13218:	ldr	r3, [sp, #176]	; 0xb0
   1321c:	mov	r0, sl
   13220:	str	r3, [sp]
   13224:	str	ip, [sp, #8]
   13228:	ldr	r3, [sp, #24]
   1322c:	bl	1208c <close@plt+0x11a0>
   13230:	mov	fp, r0
   13234:	mov	r0, fp
   13238:	add	sp, sp, #140	; 0x8c
   1323c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13240:	mov	r4, #92	; 0x5c
   13244:	mov	r1, #0
   13248:	mov	r3, r4
   1324c:	b	12840 <close@plt+0x1954>
   13250:	mov	r3, #0
   13254:	ldr	r1, [sp, #52]	; 0x34
   13258:	str	r3, [sp, #32]
   1325c:	mov	r4, #63	; 0x3f
   13260:	b	12660 <close@plt+0x1774>
   13264:	cmp	fp, #0
   13268:	beq	132c4 <close@plt+0x23d8>
   1326c:	mov	r3, #39	; 0x27
   13270:	strb	r3, [r9]
   13274:	mov	r3, #0
   13278:	str	r3, [sp, #40]	; 0x28
   1327c:	mov	r3, #1
   13280:	str	r3, [sp, #68]	; 0x44
   13284:	ldr	r3, [pc, #448]	; 1344c <close@plt+0x2560>
   13288:	mov	r8, #1
   1328c:	str	r3, [sp, #72]	; 0x48
   13290:	b	12474 <close@plt+0x1588>
   13294:	ldr	r3, [sp, #40]	; 0x28
   13298:	mov	sl, r9
   1329c:	str	r3, [sp, #56]	; 0x38
   132a0:	mov	r9, fp
   132a4:	ldr	r2, [sp, #64]	; 0x40
   132a8:	b	131dc <close@plt+0x22f0>
   132ac:	str	r2, [sp, #36]	; 0x24
   132b0:	b	126c4 <close@plt+0x17d8>
   132b4:	mov	r1, #0
   132b8:	str	r3, [sp, #32]
   132bc:	mov	r4, #63	; 0x3f
   132c0:	b	12660 <close@plt+0x1774>
   132c4:	ldr	r3, [pc, #384]	; 1344c <close@plt+0x2560>
   132c8:	str	r3, [sp, #72]	; 0x48
   132cc:	mov	r3, #0
   132d0:	str	r3, [sp, #40]	; 0x28
   132d4:	mov	r3, #1
   132d8:	str	r3, [sp, #68]	; 0x44
   132dc:	mov	r8, r3
   132e0:	b	12474 <close@plt+0x1588>
   132e4:	bl	10ee0 <abort@plt>
   132e8:	cmp	fp, #0
   132ec:	beq	1334c <close@plt+0x2460>
   132f0:	mov	r2, #1
   132f4:	mov	r3, #34	; 0x22
   132f8:	strb	r3, [r9]
   132fc:	mov	r8, r2
   13300:	mov	r3, r2
   13304:	str	r2, [sp, #68]	; 0x44
   13308:	str	r3, [sp, #56]	; 0x38
   1330c:	ldr	r3, [pc, #316]	; 13450 <close@plt+0x2564>
   13310:	ldr	r1, [sp, #56]	; 0x38
   13314:	str	r3, [sp, #72]	; 0x48
   13318:	ldr	r2, [sp, #176]	; 0xb0
   1331c:	ldr	ip, [sp, #40]	; 0x28
   13320:	ldr	lr, [sp, #176]	; 0xb0
   13324:	b	12158 <close@plt+0x126c>
   13328:	ldr	r0, [sp, #44]	; 0x2c
   1332c:	bl	10e14 <strlen@plt>
   13330:	str	r0, [sp, #24]
   13334:	b	13038 <close@plt+0x214c>
   13338:	mov	r7, #0
   1333c:	ldr	r1, [sp, #52]	; 0x34
   13340:	str	r3, [sp, #32]
   13344:	mov	r4, #48	; 0x30
   13348:	b	12660 <close@plt+0x1774>
   1334c:	mov	r3, #1
   13350:	str	r3, [sp, #68]	; 0x44
   13354:	mov	r8, r3
   13358:	b	13308 <close@plt+0x241c>
   1335c:	mov	r3, #2
   13360:	mov	sl, r9
   13364:	str	r3, [sp, #176]	; 0xb0
   13368:	mov	r9, fp
   1336c:	ldr	r3, [sp, #56]	; 0x38
   13370:	b	131dc <close@plt+0x22f0>
   13374:	ldr	r6, [sp, #48]	; 0x30
   13378:	b	12e28 <close@plt+0x1f3c>
   1337c:	ldr	r0, [sp, #24]
   13380:	mov	ip, r6
   13384:	cmp	r0, ip
   13388:	mov	r1, r7
   1338c:	mov	r2, r4
   13390:	ldr	r7, [sp, #104]	; 0x68
   13394:	ldr	r4, [sp, #32]
   13398:	ldr	r6, [sp, #108]	; 0x6c
   1339c:	ldr	r8, [sp, #112]	; 0x70
   133a0:	ldr	r5, [sp, #116]	; 0x74
   133a4:	bls	133d4 <close@plt+0x24e8>
   133a8:	ldrb	r3, [r2]
   133ac:	cmp	r3, #0
   133b0:	bne	133c4 <close@plt+0x24d8>
   133b4:	b	134e4 <close@plt+0x25f8>
   133b8:	ldrb	r3, [r2, #1]!
   133bc:	cmp	r3, #0
   133c0:	beq	134e4 <close@plt+0x25f8>
   133c4:	add	r1, r1, #1
   133c8:	add	r3, sl, r1
   133cc:	cmp	r0, r3
   133d0:	bhi	133b8 <close@plt+0x24cc>
   133d4:	mov	r2, #0
   133d8:	mov	r3, r7
   133dc:	str	r2, [sp, #32]
   133e0:	b	131ac <close@plt+0x22c0>
   133e4:	mov	r1, r7
   133e8:	ldr	r7, [sp, #104]	; 0x68
   133ec:	mov	r2, #0
   133f0:	ldr	r4, [sp, #32]
   133f4:	ldr	r6, [sp, #108]	; 0x6c
   133f8:	ldr	r8, [sp, #112]	; 0x70
   133fc:	ldr	r5, [sp, #116]	; 0x74
   13400:	mov	r3, r7
   13404:	str	r2, [sp, #32]
   13408:	b	131ac <close@plt+0x22c0>
   1340c:	mov	r3, r5
   13410:	eor	r3, r3, #1
   13414:	ldr	r4, [sp, #32]
   13418:	mov	r1, r7
   1341c:	str	r5, [sp, #32]
   13420:	ldr	r7, [sp, #104]	; 0x68
   13424:	ldr	r6, [sp, #108]	; 0x6c
   13428:	ldr	r8, [sp, #112]	; 0x70
   1342c:	ldr	r5, [sp, #116]	; 0x74
   13430:	uxtb	r3, r3
   13434:	b	131ac <close@plt+0x22c0>
   13438:	mov	sl, r9
   1343c:	str	r3, [sp, #56]	; 0x38
   13440:	mov	r9, fp
   13444:	ldr	r2, [sp, #64]	; 0x40
   13448:	b	131dc <close@plt+0x22f0>
   1344c:	andeq	r8, r1, r0, lsl r1
   13450:	andeq	r8, r1, ip, lsl #2
   13454:	andeq	r8, r1, r4, lsl r1
   13458:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1345c:	ldr	r2, [sp, #44]	; 0x2c
   13460:	ldrb	r1, [r2, r3]
   13464:	sub	r2, r1, #33	; 0x21
   13468:	uxtb	r2, r2
   1346c:	cmp	r2, #29
   13470:	bhi	134f0 <close@plt+0x2604>
   13474:	ldr	r0, [pc, #-36]	; 13458 <close@plt+0x256c>
   13478:	mov	ip, #1
   1347c:	ands	r2, r0, ip, lsl r2
   13480:	beq	13510 <close@plt+0x2624>
   13484:	ldr	r2, [sp, #40]	; 0x28
   13488:	cmp	r2, #0
   1348c:	bne	13604 <close@plt+0x2718>
   13490:	add	r2, r8, #1
   13494:	cmp	fp, r8
   13498:	strbhi	r4, [r9, r8]
   1349c:	cmp	fp, r2
   134a0:	movhi	r0, #34	; 0x22
   134a4:	strbhi	r0, [r9, r2]
   134a8:	add	r2, r8, #2
   134ac:	cmp	fp, r2
   134b0:	movhi	r0, #34	; 0x22
   134b4:	strbhi	r0, [r9, r2]
   134b8:	add	r2, r8, #3
   134bc:	cmp	fp, r2
   134c0:	mov	sl, r3
   134c4:	ldr	r3, [sp, #40]	; 0x28
   134c8:	movhi	r0, #63	; 0x3f
   134cc:	mov	r4, r1
   134d0:	strbhi	r0, [r9, r2]
   134d4:	add	r8, r8, #4
   134d8:	mov	r1, r3
   134dc:	str	r3, [sp, #32]
   134e0:	b	12660 <close@plt+0x1774>
   134e4:	str	r3, [sp, #32]
   134e8:	mov	r3, r7
   134ec:	b	131ac <close@plt+0x22c0>
   134f0:	mov	r1, #0
   134f4:	str	r1, [sp, #32]
   134f8:	b	12660 <close@plt+0x1774>
   134fc:	mov	sl, r9
   13500:	ldr	r3, [sp, #56]	; 0x38
   13504:	mov	r9, fp
   13508:	ldr	r2, [sp, #64]	; 0x40
   1350c:	b	131dc <close@plt+0x22f0>
   13510:	str	r2, [sp, #32]
   13514:	mov	r1, #0
   13518:	b	12660 <close@plt+0x1774>
   1351c:	ldr	r2, [sp, #76]	; 0x4c
   13520:	mov	sl, r9
   13524:	mov	r9, fp
   13528:	mov	fp, r8
   1352c:	ldr	r1, [sp, #72]	; 0x48
   13530:	cmp	r1, #0
   13534:	moveq	r3, #0
   13538:	andne	r3, r2, #1
   1353c:	cmp	r3, #0
   13540:	beq	1356c <close@plt+0x2680>
   13544:	ldrb	r3, [r1]
   13548:	cmp	r3, #0
   1354c:	beq	1356c <close@plt+0x2680>
   13550:	mov	r2, r1
   13554:	cmp	r9, fp
   13558:	strbhi	r3, [sl, fp]
   1355c:	ldrb	r3, [r2, #1]!
   13560:	add	fp, fp, #1
   13564:	cmp	r3, #0
   13568:	bne	13554 <close@plt+0x2668>
   1356c:	cmp	r9, fp
   13570:	movhi	r3, #0
   13574:	strbhi	r3, [sl, fp]
   13578:	b	13234 <close@plt+0x2348>
   1357c:	ldr	r3, [sp, #192]	; 0xc0
   13580:	mov	ip, #5
   13584:	str	r3, [sp, #16]
   13588:	ldr	r3, [sp, #188]	; 0xbc
   1358c:	ldr	r2, [sp, #44]	; 0x2c
   13590:	str	r3, [sp, #12]
   13594:	ldr	r3, [sp, #184]	; 0xb8
   13598:	ldr	r1, [sp, #84]	; 0x54
   1359c:	str	r3, [sp, #8]
   135a0:	ldr	r3, [sp, #180]	; 0xb4
   135a4:	mov	r0, r9
   135a8:	str	r3, [sp, #4]
   135ac:	str	ip, [sp]
   135b0:	ldr	r3, [sp, #24]
   135b4:	bl	1208c <close@plt+0x11a0>
   135b8:	mov	fp, r0
   135bc:	b	13234 <close@plt+0x2348>
   135c0:	mov	sl, r9
   135c4:	mov	r9, fp
   135c8:	mov	fp, r8
   135cc:	b	1352c <close@plt+0x2640>
   135d0:	ldr	r1, [sp, #176]	; 0xb0
   135d4:	bl	11f6c <close@plt+0x1080>
   135d8:	str	r0, [sp, #192]	; 0xc0
   135dc:	b	12548 <close@plt+0x165c>
   135e0:	ldr	r1, [sp, #176]	; 0xb0
   135e4:	bl	11f6c <close@plt+0x1080>
   135e8:	str	r0, [sp, #188]	; 0xbc
   135ec:	b	12528 <close@plt+0x163c>
   135f0:	mov	sl, r9
   135f4:	mov	r2, r3
   135f8:	mov	r9, fp
   135fc:	mov	fp, r8
   13600:	b	1352c <close@plt+0x2640>
   13604:	mov	sl, r9
   13608:	mov	r9, fp
   1360c:	b	131f0 <close@plt+0x2304>
   13610:	push	{r4, r5, r6, lr}
   13614:	mov	r5, r0
   13618:	bl	10e20 <__errno_location@plt>
   1361c:	cmp	r5, #0
   13620:	mov	r1, #48	; 0x30
   13624:	mov	r4, r0
   13628:	ldr	r0, [pc, #16]	; 13640 <close@plt+0x2754>
   1362c:	ldr	r6, [r4]
   13630:	movne	r0, r5
   13634:	bl	16eac <close@plt+0x5fc0>
   13638:	str	r6, [r4]
   1363c:	pop	{r4, r5, r6, pc}
   13640:	andeq	r9, r2, r8, ror #2
   13644:	ldr	r3, [pc, #12]	; 13658 <close@plt+0x276c>
   13648:	cmp	r0, #0
   1364c:	moveq	r0, r3
   13650:	ldr	r0, [r0]
   13654:	bx	lr
   13658:	andeq	r9, r2, r8, ror #2
   1365c:	ldr	r3, [pc, #12]	; 13670 <close@plt+0x2784>
   13660:	cmp	r0, #0
   13664:	moveq	r0, r3
   13668:	str	r1, [r0]
   1366c:	bx	lr
   13670:	andeq	r9, r2, r8, ror #2
   13674:	ldr	r3, [pc, #52]	; 136b0 <close@plt+0x27c4>
   13678:	cmp	r0, #0
   1367c:	moveq	r0, r3
   13680:	add	r3, r0, #8
   13684:	push	{lr}		; (str lr, [sp, #-4]!)
   13688:	lsr	lr, r1, #5
   1368c:	and	r1, r1, #31
   13690:	ldr	ip, [r3, lr, lsl #2]
   13694:	lsr	r0, ip, r1
   13698:	eor	r2, r2, r0
   1369c:	and	r2, r2, #1
   136a0:	and	r0, r0, #1
   136a4:	eor	r1, ip, r2, lsl r1
   136a8:	str	r1, [r3, lr, lsl #2]
   136ac:	pop	{pc}		; (ldr pc, [sp], #4)
   136b0:	andeq	r9, r2, r8, ror #2
   136b4:	ldr	r3, [pc, #16]	; 136cc <close@plt+0x27e0>
   136b8:	cmp	r0, #0
   136bc:	movne	r3, r0
   136c0:	ldr	r0, [r3, #4]
   136c4:	str	r1, [r3, #4]
   136c8:	bx	lr
   136cc:	andeq	r9, r2, r8, ror #2
   136d0:	ldr	r3, [pc, #44]	; 13704 <close@plt+0x2818>
   136d4:	cmp	r0, #0
   136d8:	moveq	r0, r3
   136dc:	mov	ip, #10
   136e0:	cmp	r2, #0
   136e4:	cmpne	r1, #0
   136e8:	str	ip, [r0]
   136ec:	beq	136fc <close@plt+0x2810>
   136f0:	str	r1, [r0, #40]	; 0x28
   136f4:	str	r2, [r0, #44]	; 0x2c
   136f8:	bx	lr
   136fc:	push	{r4, lr}
   13700:	bl	10ee0 <abort@plt>
   13704:	andeq	r9, r2, r8, ror #2
   13708:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1370c:	sub	sp, sp, #24
   13710:	ldr	ip, [pc, #108]	; 13784 <close@plt+0x2898>
   13714:	ldr	r4, [sp, #56]	; 0x38
   13718:	mov	r9, r2
   1371c:	cmp	r4, #0
   13720:	moveq	r4, ip
   13724:	mov	sl, r3
   13728:	mov	r7, r0
   1372c:	mov	r8, r1
   13730:	bl	10e20 <__errno_location@plt>
   13734:	ldr	r3, [r4, #44]	; 0x2c
   13738:	mov	r1, r8
   1373c:	ldr	r6, [r0]
   13740:	str	r3, [sp, #16]
   13744:	ldr	r2, [r4, #40]	; 0x28
   13748:	add	r3, r4, #8
   1374c:	str	r3, [sp, #8]
   13750:	str	r2, [sp, #12]
   13754:	ldr	r2, [r4, #4]
   13758:	mov	r5, r0
   1375c:	str	r2, [sp, #4]
   13760:	ldr	ip, [r4]
   13764:	mov	r3, sl
   13768:	mov	r2, r9
   1376c:	mov	r0, r7
   13770:	str	ip, [sp]
   13774:	bl	1208c <close@plt+0x11a0>
   13778:	str	r6, [r5]
   1377c:	add	sp, sp, #24
   13780:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13784:	andeq	r9, r2, r8, ror #2
   13788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1378c:	cmp	r2, #0
   13790:	sub	sp, sp, #36	; 0x24
   13794:	ldr	r4, [pc, #164]	; 13840 <close@plt+0x2954>
   13798:	mov	r8, r1
   1379c:	movne	r4, r2
   137a0:	mov	r7, r0
   137a4:	bl	10e20 <__errno_location@plt>
   137a8:	ldr	r3, [r4, #44]	; 0x2c
   137ac:	ldr	r5, [r4, #4]
   137b0:	add	r9, r4, #8
   137b4:	orr	r5, r5, #1
   137b8:	mov	r1, #0
   137bc:	mov	r2, r7
   137c0:	ldr	fp, [r0]
   137c4:	str	r3, [sp, #16]
   137c8:	ldr	r3, [r4, #40]	; 0x28
   137cc:	stmib	sp, {r5, r9}
   137d0:	str	r3, [sp, #12]
   137d4:	ldr	r3, [r4]
   137d8:	mov	r6, r0
   137dc:	str	r3, [sp]
   137e0:	mov	r0, r1
   137e4:	mov	r3, r8
   137e8:	bl	1208c <close@plt+0x11a0>
   137ec:	add	r1, r0, #1
   137f0:	mov	r0, r1
   137f4:	str	r1, [sp, #28]
   137f8:	bl	16968 <close@plt+0x5a7c>
   137fc:	ldr	r3, [r4, #44]	; 0x2c
   13800:	ldr	r1, [sp, #28]
   13804:	str	r3, [sp, #16]
   13808:	ldr	r3, [r4, #40]	; 0x28
   1380c:	str	r5, [sp, #4]
   13810:	str	r3, [sp, #12]
   13814:	str	r9, [sp, #8]
   13818:	ldr	ip, [r4]
   1381c:	mov	r3, r8
   13820:	mov	r2, r7
   13824:	str	ip, [sp]
   13828:	mov	sl, r0
   1382c:	bl	1208c <close@plt+0x11a0>
   13830:	mov	r0, sl
   13834:	str	fp, [r6]
   13838:	add	sp, sp, #36	; 0x24
   1383c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13840:	andeq	r9, r2, r8, ror #2
   13844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13848:	cmp	r3, #0
   1384c:	sub	sp, sp, #44	; 0x2c
   13850:	ldr	r4, [pc, #192]	; 13918 <close@plt+0x2a2c>
   13854:	mov	r6, r2
   13858:	movne	r4, r3
   1385c:	mov	r9, r1
   13860:	mov	r8, r0
   13864:	bl	10e20 <__errno_location@plt>
   13868:	ldr	r3, [r4, #44]	; 0x2c
   1386c:	ldr	r5, [r4, #4]
   13870:	add	sl, r4, #8
   13874:	cmp	r6, #0
   13878:	orreq	r5, r5, #1
   1387c:	mov	r1, #0
   13880:	ldr	r2, [r0]
   13884:	str	r3, [sp, #16]
   13888:	ldr	r3, [r4, #40]	; 0x28
   1388c:	stmib	sp, {r5, sl}
   13890:	str	r3, [sp, #12]
   13894:	ldr	r3, [r4]
   13898:	mov	r7, r0
   1389c:	str	r2, [sp, #28]
   138a0:	str	r3, [sp]
   138a4:	mov	r2, r8
   138a8:	mov	r3, r9
   138ac:	mov	r0, r1
   138b0:	bl	1208c <close@plt+0x11a0>
   138b4:	add	r1, r0, #1
   138b8:	mov	fp, r0
   138bc:	mov	r0, r1
   138c0:	str	r1, [sp, #36]	; 0x24
   138c4:	bl	16968 <close@plt+0x5a7c>
   138c8:	ldr	r3, [r4, #44]	; 0x2c
   138cc:	mov	r2, r8
   138d0:	str	r3, [sp, #16]
   138d4:	ldr	r3, [r4, #40]	; 0x28
   138d8:	str	r5, [sp, #4]
   138dc:	str	r3, [sp, #12]
   138e0:	str	sl, [sp, #8]
   138e4:	ldr	ip, [r4]
   138e8:	ldr	r1, [sp, #36]	; 0x24
   138ec:	mov	r3, r9
   138f0:	str	ip, [sp]
   138f4:	str	r0, [sp, #32]
   138f8:	bl	1208c <close@plt+0x11a0>
   138fc:	ldr	r2, [sp, #28]
   13900:	cmp	r6, #0
   13904:	str	r2, [r7]
   13908:	ldr	r0, [sp, #32]
   1390c:	strne	fp, [r6]
   13910:	add	sp, sp, #44	; 0x2c
   13914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13918:	andeq	r9, r2, r8, ror #2
   1391c:	push	{r4, r5, r6, r7, r8, lr}
   13920:	ldr	r6, [pc, #116]	; 1399c <close@plt+0x2ab0>
   13924:	ldr	r3, [r6, #4]
   13928:	ldr	r7, [r6]
   1392c:	cmp	r3, #1
   13930:	movgt	r5, r7
   13934:	movgt	r4, #1
   13938:	ble	13958 <close@plt+0x2a6c>
   1393c:	ldr	r0, [r5, #12]
   13940:	bl	11cd0 <close@plt+0xde4>
   13944:	ldr	r3, [r6, #4]
   13948:	add	r4, r4, #1
   1394c:	cmp	r3, r4
   13950:	add	r5, r5, #8
   13954:	bgt	1393c <close@plt+0x2a50>
   13958:	ldr	r0, [r7, #4]
   1395c:	ldr	r4, [pc, #60]	; 139a0 <close@plt+0x2ab4>
   13960:	cmp	r0, r4
   13964:	beq	13978 <close@plt+0x2a8c>
   13968:	bl	11cd0 <close@plt+0xde4>
   1396c:	mov	r3, #256	; 0x100
   13970:	str	r4, [r6, #12]
   13974:	str	r3, [r6, #8]
   13978:	ldr	r4, [pc, #36]	; 139a4 <close@plt+0x2ab8>
   1397c:	cmp	r7, r4
   13980:	beq	13990 <close@plt+0x2aa4>
   13984:	mov	r0, r7
   13988:	bl	11cd0 <close@plt+0xde4>
   1398c:	str	r4, [r6]
   13990:	mov	r3, #1
   13994:	str	r3, [r6, #4]
   13998:	pop	{r4, r5, r6, r7, r8, pc}
   1399c:	strdeq	r9, [r2], -r4
   139a0:	muleq	r2, r8, r1
   139a4:	strdeq	r9, [r2], -ip
   139a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139ac:	sub	sp, sp, #44	; 0x2c
   139b0:	mov	r5, r0
   139b4:	mov	sl, r1
   139b8:	bl	10e20 <__errno_location@plt>
   139bc:	ldr	r4, [pc, #400]	; 13b54 <close@plt+0x2c68>
   139c0:	cmn	r5, #-2147483647	; 0x80000001
   139c4:	ldr	r6, [r4]
   139c8:	mov	r8, r0
   139cc:	movne	r0, #0
   139d0:	moveq	r0, #1
   139d4:	ldr	r3, [r8]
   139d8:	orrs	r0, r0, r5, lsr #31
   139dc:	str	r3, [sp, #24]
   139e0:	bne	13b50 <close@plt+0x2c64>
   139e4:	ldr	r2, [r4, #4]
   139e8:	cmp	r5, r2
   139ec:	blt	13a4c <close@plt+0x2b60>
   139f0:	add	r7, r4, #8
   139f4:	cmp	r6, r7
   139f8:	str	r2, [sp, #36]	; 0x24
   139fc:	beq	13b20 <close@plt+0x2c34>
   13a00:	mov	r3, #8
   13a04:	sub	r2, r5, r2
   13a08:	mov	r0, r6
   13a0c:	str	r3, [sp]
   13a10:	add	r2, r2, #1
   13a14:	mvn	r3, #-2147483648	; 0x80000000
   13a18:	add	r1, sp, #36	; 0x24
   13a1c:	bl	16b84 <close@plt+0x5c98>
   13a20:	mov	r6, r0
   13a24:	str	r0, [r4]
   13a28:	ldr	r0, [r4, #4]
   13a2c:	ldr	r2, [sp, #36]	; 0x24
   13a30:	mov	r1, #0
   13a34:	sub	r2, r2, r0
   13a38:	add	r0, r6, r0, lsl #3
   13a3c:	lsl	r2, r2, #3
   13a40:	bl	10e38 <memset@plt>
   13a44:	ldr	r3, [sp, #36]	; 0x24
   13a48:	str	r3, [r4, #4]
   13a4c:	ldr	r4, [pc, #260]	; 13b58 <close@plt+0x2c6c>
   13a50:	add	fp, r6, r5, lsl #3
   13a54:	ldr	r9, [r6, r5, lsl #3]
   13a58:	ldr	r0, [r4, #4]
   13a5c:	ldr	r3, [r4]
   13a60:	ldr	r7, [fp, #4]
   13a64:	ldr	r1, [r4, #44]	; 0x2c
   13a68:	ldr	r2, [r4, #40]	; 0x28
   13a6c:	orr	r0, r0, #1
   13a70:	str	r3, [sp]
   13a74:	add	r3, r4, #8
   13a78:	str	r0, [sp, #28]
   13a7c:	str	r0, [sp, #4]
   13a80:	str	r1, [sp, #16]
   13a84:	str	r2, [sp, #12]
   13a88:	str	r3, [sp, #8]
   13a8c:	mov	r0, r7
   13a90:	mov	r1, r9
   13a94:	mvn	r3, #0
   13a98:	mov	r2, sl
   13a9c:	bl	1208c <close@plt+0x11a0>
   13aa0:	cmp	r9, r0
   13aa4:	bhi	13b0c <close@plt+0x2c20>
   13aa8:	add	r3, r4, #48	; 0x30
   13aac:	add	r9, r0, #1
   13ab0:	cmp	r7, r3
   13ab4:	str	r9, [r6, r5, lsl #3]
   13ab8:	beq	13ac4 <close@plt+0x2bd8>
   13abc:	mov	r0, r7
   13ac0:	bl	11cd0 <close@plt+0xde4>
   13ac4:	mov	r0, r9
   13ac8:	bl	16968 <close@plt+0x5a7c>
   13acc:	ldr	ip, [r4, #44]	; 0x2c
   13ad0:	ldr	r3, [r4]
   13ad4:	ldr	lr, [r4, #40]	; 0x28
   13ad8:	ldr	r4, [pc, #124]	; 13b5c <close@plt+0x2c70>
   13adc:	mov	r2, sl
   13ae0:	mov	r1, r9
   13ae4:	str	r0, [fp, #4]
   13ae8:	str	r4, [sp, #8]
   13aec:	ldr	r4, [sp, #28]
   13af0:	str	r3, [sp]
   13af4:	str	r4, [sp, #4]
   13af8:	str	ip, [sp, #16]
   13afc:	str	lr, [sp, #12]
   13b00:	mvn	r3, #0
   13b04:	mov	r7, r0
   13b08:	bl	1208c <close@plt+0x11a0>
   13b0c:	ldr	r3, [sp, #24]
   13b10:	mov	r0, r7
   13b14:	str	r3, [r8]
   13b18:	add	sp, sp, #44	; 0x2c
   13b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b20:	mov	r3, #8
   13b24:	sub	r2, r5, r2
   13b28:	str	r3, [sp]
   13b2c:	add	r1, sp, #36	; 0x24
   13b30:	add	r2, r2, #1
   13b34:	mvn	r3, #-2147483648	; 0x80000000
   13b38:	bl	16b84 <close@plt+0x5c98>
   13b3c:	mov	r6, r0
   13b40:	ldm	r7, {r0, r1}
   13b44:	str	r6, [r4]
   13b48:	stm	r6, {r0, r1}
   13b4c:	b	13a28 <close@plt+0x2b3c>
   13b50:	bl	10ee0 <abort@plt>
   13b54:	strdeq	r9, [r2], -r4
   13b58:	andeq	r9, r2, r8, ror #2
   13b5c:	andeq	r9, r2, r0, ror r1
   13b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b64:	sub	sp, sp, #52	; 0x34
   13b68:	mov	r5, r0
   13b6c:	mov	sl, r1
   13b70:	mov	fp, r2
   13b74:	bl	10e20 <__errno_location@plt>
   13b78:	ldr	r4, [pc, #408]	; 13d18 <close@plt+0x2e2c>
   13b7c:	cmn	r5, #-2147483647	; 0x80000001
   13b80:	ldr	r6, [r4]
   13b84:	mov	r8, r0
   13b88:	movne	r0, #0
   13b8c:	moveq	r0, #1
   13b90:	ldr	r3, [r8]
   13b94:	orrs	r0, r0, r5, lsr #31
   13b98:	str	r3, [sp, #28]
   13b9c:	bne	13d14 <close@plt+0x2e28>
   13ba0:	ldr	r2, [r4, #4]
   13ba4:	cmp	r5, r2
   13ba8:	blt	13c08 <close@plt+0x2d1c>
   13bac:	add	r7, r4, #8
   13bb0:	cmp	r6, r7
   13bb4:	str	r2, [sp, #44]	; 0x2c
   13bb8:	beq	13ce4 <close@plt+0x2df8>
   13bbc:	mov	r3, #8
   13bc0:	sub	r2, r5, r2
   13bc4:	mov	r0, r6
   13bc8:	str	r3, [sp]
   13bcc:	add	r2, r2, #1
   13bd0:	mvn	r3, #-2147483648	; 0x80000000
   13bd4:	add	r1, sp, #44	; 0x2c
   13bd8:	bl	16b84 <close@plt+0x5c98>
   13bdc:	mov	r6, r0
   13be0:	str	r0, [r4]
   13be4:	ldr	r0, [r4, #4]
   13be8:	ldr	r2, [sp, #44]	; 0x2c
   13bec:	mov	r1, #0
   13bf0:	sub	r2, r2, r0
   13bf4:	add	r0, r6, r0, lsl #3
   13bf8:	lsl	r2, r2, #3
   13bfc:	bl	10e38 <memset@plt>
   13c00:	ldr	r3, [sp, #44]	; 0x2c
   13c04:	str	r3, [r4, #4]
   13c08:	ldr	r4, [pc, #268]	; 13d1c <close@plt+0x2e30>
   13c0c:	add	r3, r6, r5, lsl #3
   13c10:	str	r3, [sp, #32]
   13c14:	ldr	r7, [r3, #4]
   13c18:	ldr	r0, [r4, #4]
   13c1c:	ldr	r3, [r4]
   13c20:	ldr	r9, [r6, r5, lsl #3]
   13c24:	ldr	r1, [r4, #44]	; 0x2c
   13c28:	ldr	r2, [r4, #40]	; 0x28
   13c2c:	orr	r0, r0, #1
   13c30:	str	r3, [sp]
   13c34:	add	r3, r4, #8
   13c38:	str	r0, [sp, #36]	; 0x24
   13c3c:	str	r0, [sp, #4]
   13c40:	str	r1, [sp, #16]
   13c44:	str	r2, [sp, #12]
   13c48:	str	r3, [sp, #8]
   13c4c:	mov	r0, r7
   13c50:	mov	r1, r9
   13c54:	mov	r3, fp
   13c58:	mov	r2, sl
   13c5c:	bl	1208c <close@plt+0x11a0>
   13c60:	cmp	r9, r0
   13c64:	bhi	13cd0 <close@plt+0x2de4>
   13c68:	add	r3, r4, #48	; 0x30
   13c6c:	add	r9, r0, #1
   13c70:	cmp	r7, r3
   13c74:	str	r9, [r6, r5, lsl #3]
   13c78:	beq	13c84 <close@plt+0x2d98>
   13c7c:	mov	r0, r7
   13c80:	bl	11cd0 <close@plt+0xde4>
   13c84:	mov	r0, r9
   13c88:	bl	16968 <close@plt+0x5a7c>
   13c8c:	ldr	ip, [sp, #32]
   13c90:	ldr	lr, [r4, #44]	; 0x2c
   13c94:	ldr	r5, [r4, #40]	; 0x28
   13c98:	mov	r3, fp
   13c9c:	mov	r2, sl
   13ca0:	mov	r1, r9
   13ca4:	str	r0, [ip, #4]
   13ca8:	ldr	ip, [r4]
   13cac:	ldr	r4, [pc, #108]	; 13d20 <close@plt+0x2e34>
   13cb0:	str	lr, [sp, #16]
   13cb4:	str	r4, [sp, #8]
   13cb8:	ldr	r4, [sp, #36]	; 0x24
   13cbc:	str	r5, [sp, #12]
   13cc0:	str	r4, [sp, #4]
   13cc4:	str	ip, [sp]
   13cc8:	mov	r7, r0
   13ccc:	bl	1208c <close@plt+0x11a0>
   13cd0:	ldr	r3, [sp, #28]
   13cd4:	mov	r0, r7
   13cd8:	str	r3, [r8]
   13cdc:	add	sp, sp, #52	; 0x34
   13ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ce4:	mov	r3, #8
   13ce8:	sub	r2, r5, r2
   13cec:	str	r3, [sp]
   13cf0:	add	r1, sp, #44	; 0x2c
   13cf4:	add	r2, r2, #1
   13cf8:	mvn	r3, #-2147483648	; 0x80000000
   13cfc:	bl	16b84 <close@plt+0x5c98>
   13d00:	mov	r6, r0
   13d04:	ldm	r7, {r0, r1}
   13d08:	str	r6, [r4]
   13d0c:	stm	r6, {r0, r1}
   13d10:	b	13be4 <close@plt+0x2cf8>
   13d14:	bl	10ee0 <abort@plt>
   13d18:	strdeq	r9, [r2], -r4
   13d1c:	andeq	r9, r2, r8, ror #2
   13d20:	andeq	r9, r2, r0, ror r1
   13d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d28:	sub	sp, sp, #44	; 0x2c
   13d2c:	mov	sl, r0
   13d30:	bl	10e20 <__errno_location@plt>
   13d34:	ldr	r4, [pc, #352]	; 13e9c <close@plt+0x2fb0>
   13d38:	ldr	r2, [r4, #4]
   13d3c:	ldr	r5, [r4]
   13d40:	cmp	r2, #0
   13d44:	ldr	r3, [r0]
   13d48:	mov	r8, r0
   13d4c:	str	r3, [sp, #28]
   13d50:	bgt	13dac <close@plt+0x2ec0>
   13d54:	add	r6, r4, #8
   13d58:	cmp	r5, r6
   13d5c:	str	r2, [sp, #36]	; 0x24
   13d60:	beq	13e6c <close@plt+0x2f80>
   13d64:	mov	r3, #8
   13d68:	mov	r0, r5
   13d6c:	str	r3, [sp]
   13d70:	rsb	r2, r2, #1
   13d74:	mvn	r3, #-2147483648	; 0x80000000
   13d78:	add	r1, sp, #36	; 0x24
   13d7c:	bl	16b84 <close@plt+0x5c98>
   13d80:	mov	r5, r0
   13d84:	str	r0, [r4]
   13d88:	ldr	r0, [r4, #4]
   13d8c:	ldr	r2, [sp, #36]	; 0x24
   13d90:	mov	r1, #0
   13d94:	sub	r2, r2, r0
   13d98:	add	r0, r5, r0, lsl #3
   13d9c:	lsl	r2, r2, #3
   13da0:	bl	10e38 <memset@plt>
   13da4:	ldr	r3, [sp, #36]	; 0x24
   13da8:	str	r3, [r4, #4]
   13dac:	ldr	r4, [pc, #236]	; 13ea0 <close@plt+0x2fb4>
   13db0:	ldr	r9, [r5]
   13db4:	ldr	r6, [r5, #4]
   13db8:	ldr	r7, [r4, #4]
   13dbc:	ldr	r1, [r4, #44]	; 0x2c
   13dc0:	ldr	r2, [r4, #40]	; 0x28
   13dc4:	ldr	r3, [r4]
   13dc8:	orr	r7, r7, #1
   13dcc:	add	fp, r4, #8
   13dd0:	str	r1, [sp, #16]
   13dd4:	str	r2, [sp, #12]
   13dd8:	str	r3, [sp]
   13ddc:	str	r7, [sp, #4]
   13de0:	str	fp, [sp, #8]
   13de4:	mov	r1, r9
   13de8:	mov	r0, r6
   13dec:	mvn	r3, #0
   13df0:	mov	r2, sl
   13df4:	bl	1208c <close@plt+0x11a0>
   13df8:	cmp	r9, r0
   13dfc:	bhi	13e58 <close@plt+0x2f6c>
   13e00:	add	r3, r4, #48	; 0x30
   13e04:	add	r9, r0, #1
   13e08:	cmp	r6, r3
   13e0c:	str	r9, [r5]
   13e10:	beq	13e1c <close@plt+0x2f30>
   13e14:	mov	r0, r6
   13e18:	bl	11cd0 <close@plt+0xde4>
   13e1c:	mov	r0, r9
   13e20:	bl	16968 <close@plt+0x5a7c>
   13e24:	ldr	ip, [r4, #44]	; 0x2c
   13e28:	ldr	r3, [r4]
   13e2c:	ldr	lr, [r4, #40]	; 0x28
   13e30:	mov	r2, sl
   13e34:	mov	r1, r9
   13e38:	str	r0, [r5, #4]
   13e3c:	str	r3, [sp]
   13e40:	stmib	sp, {r7, fp}
   13e44:	str	ip, [sp, #16]
   13e48:	str	lr, [sp, #12]
   13e4c:	mvn	r3, #0
   13e50:	mov	r6, r0
   13e54:	bl	1208c <close@plt+0x11a0>
   13e58:	ldr	r3, [sp, #28]
   13e5c:	mov	r0, r6
   13e60:	str	r3, [r8]
   13e64:	add	sp, sp, #44	; 0x2c
   13e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e6c:	mov	r3, #8
   13e70:	str	r3, [sp]
   13e74:	add	r1, sp, #36	; 0x24
   13e78:	rsb	r2, r2, #1
   13e7c:	mvn	r3, #-2147483648	; 0x80000000
   13e80:	mov	r0, #0
   13e84:	bl	16b84 <close@plt+0x5c98>
   13e88:	mov	r5, r0
   13e8c:	ldm	r6, {r0, r1}
   13e90:	str	r5, [r4]
   13e94:	stm	r5, {r0, r1}
   13e98:	b	13d88 <close@plt+0x2e9c>
   13e9c:	strdeq	r9, [r2], -r4
   13ea0:	andeq	r9, r2, r8, ror #2
   13ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ea8:	sub	sp, sp, #44	; 0x2c
   13eac:	mov	r9, r0
   13eb0:	mov	sl, r1
   13eb4:	bl	10e20 <__errno_location@plt>
   13eb8:	ldr	r4, [pc, #364]	; 1402c <close@plt+0x3140>
   13ebc:	ldr	r2, [r4, #4]
   13ec0:	ldr	r5, [r4]
   13ec4:	cmp	r2, #0
   13ec8:	ldr	r3, [r0]
   13ecc:	mov	r7, r0
   13ed0:	str	r3, [sp, #24]
   13ed4:	bgt	13f30 <close@plt+0x3044>
   13ed8:	add	r6, r4, #8
   13edc:	cmp	r5, r6
   13ee0:	str	r2, [sp, #36]	; 0x24
   13ee4:	beq	13ffc <close@plt+0x3110>
   13ee8:	mov	r3, #8
   13eec:	mov	r0, r5
   13ef0:	str	r3, [sp]
   13ef4:	rsb	r2, r2, #1
   13ef8:	mvn	r3, #-2147483648	; 0x80000000
   13efc:	add	r1, sp, #36	; 0x24
   13f00:	bl	16b84 <close@plt+0x5c98>
   13f04:	mov	r5, r0
   13f08:	str	r0, [r4]
   13f0c:	ldr	r0, [r4, #4]
   13f10:	ldr	r2, [sp, #36]	; 0x24
   13f14:	mov	r1, #0
   13f18:	sub	r2, r2, r0
   13f1c:	add	r0, r5, r0, lsl #3
   13f20:	lsl	r2, r2, #3
   13f24:	bl	10e38 <memset@plt>
   13f28:	ldr	r3, [sp, #36]	; 0x24
   13f2c:	str	r3, [r4, #4]
   13f30:	ldr	r4, [pc, #248]	; 14030 <close@plt+0x3144>
   13f34:	ldr	r8, [r5]
   13f38:	ldr	r6, [r5, #4]
   13f3c:	ldr	r0, [r4, #4]
   13f40:	ldr	r1, [r4, #44]	; 0x2c
   13f44:	ldr	r2, [r4, #40]	; 0x28
   13f48:	ldr	r3, [r4]
   13f4c:	orr	r0, r0, #1
   13f50:	add	fp, r4, #8
   13f54:	str	r0, [sp, #28]
   13f58:	str	r0, [sp, #4]
   13f5c:	str	r1, [sp, #16]
   13f60:	str	r2, [sp, #12]
   13f64:	str	r3, [sp]
   13f68:	str	fp, [sp, #8]
   13f6c:	mov	r1, r8
   13f70:	mov	r0, r6
   13f74:	mov	r3, sl
   13f78:	mov	r2, r9
   13f7c:	bl	1208c <close@plt+0x11a0>
   13f80:	cmp	r8, r0
   13f84:	bhi	13fe8 <close@plt+0x30fc>
   13f88:	add	r3, r4, #48	; 0x30
   13f8c:	add	r8, r0, #1
   13f90:	cmp	r6, r3
   13f94:	str	r8, [r5]
   13f98:	beq	13fa4 <close@plt+0x30b8>
   13f9c:	mov	r0, r6
   13fa0:	bl	11cd0 <close@plt+0xde4>
   13fa4:	mov	r0, r8
   13fa8:	bl	16968 <close@plt+0x5a7c>
   13fac:	ldr	lr, [r4, #44]	; 0x2c
   13fb0:	ldr	ip, [r4]
   13fb4:	mov	r3, sl
   13fb8:	mov	r2, r9
   13fbc:	mov	r1, r8
   13fc0:	str	r0, [r5, #4]
   13fc4:	ldr	r5, [r4, #40]	; 0x28
   13fc8:	ldr	r4, [sp, #28]
   13fcc:	str	fp, [sp, #8]
   13fd0:	str	r4, [sp, #4]
   13fd4:	str	lr, [sp, #16]
   13fd8:	str	r5, [sp, #12]
   13fdc:	str	ip, [sp]
   13fe0:	mov	r6, r0
   13fe4:	bl	1208c <close@plt+0x11a0>
   13fe8:	ldr	r3, [sp, #24]
   13fec:	mov	r0, r6
   13ff0:	str	r3, [r7]
   13ff4:	add	sp, sp, #44	; 0x2c
   13ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ffc:	mov	r3, #8
   14000:	str	r3, [sp]
   14004:	add	r1, sp, #36	; 0x24
   14008:	rsb	r2, r2, #1
   1400c:	mvn	r3, #-2147483648	; 0x80000000
   14010:	mov	r0, #0
   14014:	bl	16b84 <close@plt+0x5c98>
   14018:	mov	r5, r0
   1401c:	ldm	r6, {r0, r1}
   14020:	str	r5, [r4]
   14024:	stm	r5, {r0, r1}
   14028:	b	13f0c <close@plt+0x3020>
   1402c:	strdeq	r9, [r2], -r4
   14030:	andeq	r9, r2, r8, ror #2
   14034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14038:	sub	sp, sp, #132	; 0x84
   1403c:	mov	r5, r1
   14040:	mov	r4, r0
   14044:	mov	r9, r2
   14048:	add	r0, sp, #80	; 0x50
   1404c:	mov	r2, #48	; 0x30
   14050:	mov	r1, #0
   14054:	bl	10e38 <memset@plt>
   14058:	cmp	r5, #10
   1405c:	beq	14214 <close@plt+0x3328>
   14060:	add	lr, sp, #80	; 0x50
   14064:	str	r5, [sp, #80]	; 0x50
   14068:	ldm	lr!, {r0, r1, r2, r3}
   1406c:	add	ip, sp, #32
   14070:	ldr	r6, [pc, #416]	; 14218 <close@plt+0x332c>
   14074:	stmia	ip!, {r0, r1, r2, r3}
   14078:	ldm	lr!, {r0, r1, r2, r3}
   1407c:	stmia	ip!, {r0, r1, r2, r3}
   14080:	ldm	lr, {r0, r1, r2, r3}
   14084:	stm	ip, {r0, r1, r2, r3}
   14088:	bl	10e20 <__errno_location@plt>
   1408c:	cmn	r4, #-2147483647	; 0x80000001
   14090:	ldr	r5, [r6]
   14094:	mov	r7, r0
   14098:	movne	r0, #0
   1409c:	moveq	r0, #1
   140a0:	ldr	r3, [r7]
   140a4:	orrs	r0, r0, r4, lsr #31
   140a8:	str	r3, [sp, #24]
   140ac:	bne	14214 <close@plt+0x3328>
   140b0:	ldr	r2, [r6, #4]
   140b4:	cmp	r4, r2
   140b8:	blt	14118 <close@plt+0x322c>
   140bc:	add	r8, r6, #8
   140c0:	cmp	r5, r8
   140c4:	str	r2, [sp, #80]	; 0x50
   140c8:	beq	141e4 <close@plt+0x32f8>
   140cc:	mov	r3, #8
   140d0:	sub	r2, r4, r2
   140d4:	mov	r0, r5
   140d8:	str	r3, [sp]
   140dc:	add	r2, r2, #1
   140e0:	add	r1, sp, #80	; 0x50
   140e4:	mvn	r3, #-2147483648	; 0x80000000
   140e8:	bl	16b84 <close@plt+0x5c98>
   140ec:	mov	r5, r0
   140f0:	str	r0, [r6]
   140f4:	ldr	r0, [r6, #4]
   140f8:	ldr	r2, [sp, #80]	; 0x50
   140fc:	mov	r1, #0
   14100:	sub	r2, r2, r0
   14104:	add	r0, r5, r0, lsl #3
   14108:	lsl	r2, r2, #3
   1410c:	bl	10e38 <memset@plt>
   14110:	ldr	r3, [sp, #80]	; 0x50
   14114:	str	r3, [r6, #4]
   14118:	add	fp, r5, r4, lsl #3
   1411c:	ldr	r1, [sp, #36]	; 0x24
   14120:	ldr	r8, [r5, r4, lsl #3]
   14124:	ldr	r6, [fp, #4]
   14128:	ldr	r2, [sp, #72]	; 0x48
   1412c:	ldr	r3, [sp, #32]
   14130:	ldr	ip, [sp, #76]	; 0x4c
   14134:	orr	r1, r1, #1
   14138:	add	sl, sp, #40	; 0x28
   1413c:	str	r1, [sp, #28]
   14140:	str	r1, [sp, #4]
   14144:	str	r2, [sp, #12]
   14148:	str	r3, [sp]
   1414c:	mov	r0, r6
   14150:	mov	r1, r8
   14154:	str	ip, [sp, #16]
   14158:	str	sl, [sp, #8]
   1415c:	mvn	r3, #0
   14160:	mov	r2, r9
   14164:	bl	1208c <close@plt+0x11a0>
   14168:	cmp	r8, r0
   1416c:	bhi	141d0 <close@plt+0x32e4>
   14170:	ldr	r3, [pc, #164]	; 1421c <close@plt+0x3330>
   14174:	add	r8, r0, #1
   14178:	cmp	r6, r3
   1417c:	str	r8, [r5, r4, lsl #3]
   14180:	beq	1418c <close@plt+0x32a0>
   14184:	mov	r0, r6
   14188:	bl	11cd0 <close@plt+0xde4>
   1418c:	mov	r0, r8
   14190:	bl	16968 <close@plt+0x5a7c>
   14194:	ldr	lr, [sp, #76]	; 0x4c
   14198:	ldr	r3, [sp, #32]
   1419c:	ldr	ip, [sp, #72]	; 0x48
   141a0:	ldr	r4, [sp, #28]
   141a4:	mov	r2, r9
   141a8:	mov	r1, r8
   141ac:	str	r0, [fp, #4]
   141b0:	str	r3, [sp]
   141b4:	str	sl, [sp, #8]
   141b8:	str	r4, [sp, #4]
   141bc:	str	lr, [sp, #16]
   141c0:	str	ip, [sp, #12]
   141c4:	mvn	r3, #0
   141c8:	mov	r6, r0
   141cc:	bl	1208c <close@plt+0x11a0>
   141d0:	ldr	r3, [sp, #24]
   141d4:	mov	r0, r6
   141d8:	str	r3, [r7]
   141dc:	add	sp, sp, #132	; 0x84
   141e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141e4:	mov	r3, #8
   141e8:	sub	r2, r4, r2
   141ec:	add	r1, sp, #80	; 0x50
   141f0:	str	r3, [sp]
   141f4:	add	r2, r2, #1
   141f8:	mvn	r3, #-2147483648	; 0x80000000
   141fc:	bl	16b84 <close@plt+0x5c98>
   14200:	mov	r5, r0
   14204:	ldm	r8, {r0, r1}
   14208:	str	r5, [r6]
   1420c:	stm	r5, {r0, r1}
   14210:	b	140f4 <close@plt+0x3208>
   14214:	bl	10ee0 <abort@plt>
   14218:	strdeq	r9, [r2], -r4
   1421c:	muleq	r2, r8, r1
   14220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14224:	sub	sp, sp, #132	; 0x84
   14228:	mov	r5, r1
   1422c:	mov	r4, r0
   14230:	mov	r9, r2
   14234:	add	r0, sp, #80	; 0x50
   14238:	mov	r2, #48	; 0x30
   1423c:	mov	r1, #0
   14240:	mov	sl, r3
   14244:	bl	10e38 <memset@plt>
   14248:	cmp	r5, #10
   1424c:	beq	14408 <close@plt+0x351c>
   14250:	add	lr, sp, #80	; 0x50
   14254:	str	r5, [sp, #80]	; 0x50
   14258:	ldm	lr!, {r0, r1, r2, r3}
   1425c:	add	ip, sp, #32
   14260:	ldr	r6, [pc, #420]	; 1440c <close@plt+0x3520>
   14264:	stmia	ip!, {r0, r1, r2, r3}
   14268:	ldm	lr!, {r0, r1, r2, r3}
   1426c:	stmia	ip!, {r0, r1, r2, r3}
   14270:	ldm	lr, {r0, r1, r2, r3}
   14274:	stm	ip, {r0, r1, r2, r3}
   14278:	bl	10e20 <__errno_location@plt>
   1427c:	cmn	r4, #-2147483647	; 0x80000001
   14280:	ldr	r5, [r6]
   14284:	mov	r7, r0
   14288:	movne	r0, #0
   1428c:	moveq	r0, #1
   14290:	ldr	r3, [r7]
   14294:	orrs	r0, r0, r4, lsr #31
   14298:	str	r3, [sp, #24]
   1429c:	bne	14408 <close@plt+0x351c>
   142a0:	ldr	r2, [r6, #4]
   142a4:	cmp	r4, r2
   142a8:	blt	14308 <close@plt+0x341c>
   142ac:	add	r8, r6, #8
   142b0:	cmp	r5, r8
   142b4:	str	r2, [sp, #80]	; 0x50
   142b8:	beq	143d8 <close@plt+0x34ec>
   142bc:	mov	r3, #8
   142c0:	sub	r2, r4, r2
   142c4:	mov	r0, r5
   142c8:	str	r3, [sp]
   142cc:	add	r2, r2, #1
   142d0:	add	r1, sp, #80	; 0x50
   142d4:	mvn	r3, #-2147483648	; 0x80000000
   142d8:	bl	16b84 <close@plt+0x5c98>
   142dc:	mov	r5, r0
   142e0:	str	r0, [r6]
   142e4:	ldr	r0, [r6, #4]
   142e8:	ldr	r2, [sp, #80]	; 0x50
   142ec:	mov	r1, #0
   142f0:	sub	r2, r2, r0
   142f4:	add	r0, r5, r0, lsl #3
   142f8:	lsl	r2, r2, #3
   142fc:	bl	10e38 <memset@plt>
   14300:	ldr	r3, [sp, #80]	; 0x50
   14304:	str	r3, [r6, #4]
   14308:	add	fp, r5, r4, lsl #3
   1430c:	ldr	r3, [sp, #32]
   14310:	ldr	r1, [sp, #36]	; 0x24
   14314:	ldr	r8, [r5, r4, lsl #3]
   14318:	ldr	r6, [fp, #4]
   1431c:	ldr	r2, [sp, #72]	; 0x48
   14320:	ldr	ip, [sp, #76]	; 0x4c
   14324:	orr	r1, r1, #1
   14328:	str	r3, [sp]
   1432c:	add	r3, sp, #40	; 0x28
   14330:	str	r1, [sp, #28]
   14334:	str	r1, [sp, #4]
   14338:	str	r2, [sp, #12]
   1433c:	str	r3, [sp, #8]
   14340:	mov	r0, r6
   14344:	mov	r1, r8
   14348:	str	ip, [sp, #16]
   1434c:	mov	r3, sl
   14350:	mov	r2, r9
   14354:	bl	1208c <close@plt+0x11a0>
   14358:	cmp	r8, r0
   1435c:	bhi	143c4 <close@plt+0x34d8>
   14360:	ldr	r3, [pc, #168]	; 14410 <close@plt+0x3524>
   14364:	add	r8, r0, #1
   14368:	cmp	r6, r3
   1436c:	str	r8, [r5, r4, lsl #3]
   14370:	beq	1437c <close@plt+0x3490>
   14374:	mov	r0, r6
   14378:	bl	11cd0 <close@plt+0xde4>
   1437c:	mov	r0, r8
   14380:	bl	16968 <close@plt+0x5a7c>
   14384:	add	lr, sp, #40	; 0x28
   14388:	ldr	ip, [sp, #76]	; 0x4c
   1438c:	ldr	r4, [sp, #72]	; 0x48
   14390:	ldr	r5, [sp, #28]
   14394:	mov	r3, sl
   14398:	mov	r2, r9
   1439c:	mov	r1, r8
   143a0:	str	r0, [fp, #4]
   143a4:	str	lr, [sp, #8]
   143a8:	ldr	lr, [sp, #32]
   143ac:	str	r5, [sp, #4]
   143b0:	str	ip, [sp, #16]
   143b4:	str	r4, [sp, #12]
   143b8:	str	lr, [sp]
   143bc:	mov	r6, r0
   143c0:	bl	1208c <close@plt+0x11a0>
   143c4:	ldr	r3, [sp, #24]
   143c8:	mov	r0, r6
   143cc:	str	r3, [r7]
   143d0:	add	sp, sp, #132	; 0x84
   143d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143d8:	mov	r3, #8
   143dc:	sub	r2, r4, r2
   143e0:	add	r1, sp, #80	; 0x50
   143e4:	str	r3, [sp]
   143e8:	add	r2, r2, #1
   143ec:	mvn	r3, #-2147483648	; 0x80000000
   143f0:	bl	16b84 <close@plt+0x5c98>
   143f4:	mov	r5, r0
   143f8:	ldm	r8, {r0, r1}
   143fc:	str	r5, [r6]
   14400:	stm	r5, {r0, r1}
   14404:	b	142e4 <close@plt+0x33f8>
   14408:	bl	10ee0 <abort@plt>
   1440c:	strdeq	r9, [r2], -r4
   14410:	muleq	r2, r8, r1
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14418:	sub	sp, sp, #124	; 0x7c
   1441c:	mov	r4, r0
   14420:	mov	r9, r1
   14424:	add	r0, sp, #72	; 0x48
   14428:	mov	r2, #48	; 0x30
   1442c:	mov	r1, #0
   14430:	bl	10e38 <memset@plt>
   14434:	cmp	r4, #10
   14438:	beq	145c4 <close@plt+0x36d8>
   1443c:	add	lr, sp, #72	; 0x48
   14440:	str	r4, [sp, #72]	; 0x48
   14444:	ldm	lr!, {r0, r1, r2, r3}
   14448:	add	ip, sp, #24
   1444c:	ldr	r5, [pc, #372]	; 145c8 <close@plt+0x36dc>
   14450:	stmia	ip!, {r0, r1, r2, r3}
   14454:	ldm	lr!, {r0, r1, r2, r3}
   14458:	stmia	ip!, {r0, r1, r2, r3}
   1445c:	ldm	lr, {r0, r1, r2, r3}
   14460:	stm	ip, {r0, r1, r2, r3}
   14464:	bl	10e20 <__errno_location@plt>
   14468:	ldr	r2, [r5, #4]
   1446c:	ldr	r4, [r5]
   14470:	cmp	r2, #0
   14474:	mov	r7, r0
   14478:	ldr	fp, [r0]
   1447c:	bgt	144d8 <close@plt+0x35ec>
   14480:	add	r6, r5, #8
   14484:	cmp	r4, r6
   14488:	str	r2, [sp, #72]	; 0x48
   1448c:	beq	14594 <close@plt+0x36a8>
   14490:	mov	r3, #8
   14494:	mov	r0, r4
   14498:	str	r3, [sp]
   1449c:	rsb	r2, r2, #1
   144a0:	add	r1, sp, #72	; 0x48
   144a4:	mvn	r3, #-2147483648	; 0x80000000
   144a8:	bl	16b84 <close@plt+0x5c98>
   144ac:	mov	r4, r0
   144b0:	str	r0, [r5]
   144b4:	ldr	r0, [r5, #4]
   144b8:	ldr	r2, [sp, #72]	; 0x48
   144bc:	mov	r1, #0
   144c0:	sub	r2, r2, r0
   144c4:	add	r0, r4, r0, lsl #3
   144c8:	lsl	r2, r2, #3
   144cc:	bl	10e38 <memset@plt>
   144d0:	ldr	r3, [sp, #72]	; 0x48
   144d4:	str	r3, [r5, #4]
   144d8:	ldr	r6, [sp, #28]
   144dc:	ldr	r8, [r4]
   144e0:	ldr	r5, [r4, #4]
   144e4:	ldr	r2, [sp, #64]	; 0x40
   144e8:	ldr	r3, [sp, #24]
   144ec:	ldr	ip, [sp, #68]	; 0x44
   144f0:	orr	r6, r6, #1
   144f4:	add	sl, sp, #32
   144f8:	str	r2, [sp, #12]
   144fc:	str	r3, [sp]
   14500:	str	r6, [sp, #4]
   14504:	mov	r1, r8
   14508:	mov	r0, r5
   1450c:	str	ip, [sp, #16]
   14510:	str	sl, [sp, #8]
   14514:	mvn	r3, #0
   14518:	mov	r2, r9
   1451c:	bl	1208c <close@plt+0x11a0>
   14520:	cmp	r8, r0
   14524:	bhi	14584 <close@plt+0x3698>
   14528:	ldr	r3, [pc, #156]	; 145cc <close@plt+0x36e0>
   1452c:	add	r8, r0, #1
   14530:	cmp	r5, r3
   14534:	str	r8, [r4]
   14538:	beq	14544 <close@plt+0x3658>
   1453c:	mov	r0, r5
   14540:	bl	11cd0 <close@plt+0xde4>
   14544:	mov	r0, r8
   14548:	bl	16968 <close@plt+0x5a7c>
   1454c:	ldr	lr, [sp, #68]	; 0x44
   14550:	ldr	r3, [sp, #24]
   14554:	ldr	ip, [sp, #64]	; 0x40
   14558:	mov	r2, r9
   1455c:	mov	r1, r8
   14560:	str	r0, [r4, #4]
   14564:	str	r3, [sp]
   14568:	str	sl, [sp, #8]
   1456c:	str	r6, [sp, #4]
   14570:	str	lr, [sp, #16]
   14574:	str	ip, [sp, #12]
   14578:	mvn	r3, #0
   1457c:	mov	r5, r0
   14580:	bl	1208c <close@plt+0x11a0>
   14584:	mov	r0, r5
   14588:	str	fp, [r7]
   1458c:	add	sp, sp, #124	; 0x7c
   14590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14594:	mov	r3, #8
   14598:	add	r1, sp, #72	; 0x48
   1459c:	str	r3, [sp]
   145a0:	rsb	r2, r2, #1
   145a4:	mvn	r3, #-2147483648	; 0x80000000
   145a8:	mov	r0, #0
   145ac:	bl	16b84 <close@plt+0x5c98>
   145b0:	mov	r4, r0
   145b4:	ldm	r6, {r0, r1}
   145b8:	str	r4, [r5]
   145bc:	stm	r4, {r0, r1}
   145c0:	b	144b4 <close@plt+0x35c8>
   145c4:	bl	10ee0 <abort@plt>
   145c8:	strdeq	r9, [r2], -r4
   145cc:	muleq	r2, r8, r1
   145d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145d4:	sub	sp, sp, #132	; 0x84
   145d8:	mov	r4, r0
   145dc:	mov	r9, r1
   145e0:	mov	sl, r2
   145e4:	add	r0, sp, #80	; 0x50
   145e8:	mov	r2, #48	; 0x30
   145ec:	mov	r1, #0
   145f0:	bl	10e38 <memset@plt>
   145f4:	cmp	r4, #10
   145f8:	beq	1478c <close@plt+0x38a0>
   145fc:	add	lr, sp, #80	; 0x50
   14600:	str	r4, [sp, #80]	; 0x50
   14604:	ldm	lr!, {r0, r1, r2, r3}
   14608:	add	ip, sp, #32
   1460c:	ldr	r5, [pc, #380]	; 14790 <close@plt+0x38a4>
   14610:	stmia	ip!, {r0, r1, r2, r3}
   14614:	ldm	lr!, {r0, r1, r2, r3}
   14618:	stmia	ip!, {r0, r1, r2, r3}
   1461c:	ldm	lr, {r0, r1, r2, r3}
   14620:	stm	ip, {r0, r1, r2, r3}
   14624:	bl	10e20 <__errno_location@plt>
   14628:	ldr	r2, [r5, #4]
   1462c:	ldr	r4, [r5]
   14630:	cmp	r2, #0
   14634:	ldr	r3, [r0]
   14638:	mov	r7, r0
   1463c:	str	r3, [sp, #28]
   14640:	bgt	1469c <close@plt+0x37b0>
   14644:	add	r6, r5, #8
   14648:	cmp	r4, r6
   1464c:	str	r2, [sp, #80]	; 0x50
   14650:	beq	1475c <close@plt+0x3870>
   14654:	mov	r3, #8
   14658:	mov	r0, r4
   1465c:	str	r3, [sp]
   14660:	rsb	r2, r2, #1
   14664:	add	r1, sp, #80	; 0x50
   14668:	mvn	r3, #-2147483648	; 0x80000000
   1466c:	bl	16b84 <close@plt+0x5c98>
   14670:	mov	r4, r0
   14674:	str	r0, [r5]
   14678:	ldr	r0, [r5, #4]
   1467c:	ldr	r2, [sp, #80]	; 0x50
   14680:	mov	r1, #0
   14684:	sub	r2, r2, r0
   14688:	add	r0, r4, r0, lsl #3
   1468c:	lsl	r2, r2, #3
   14690:	bl	10e38 <memset@plt>
   14694:	ldr	r3, [sp, #80]	; 0x50
   14698:	str	r3, [r5, #4]
   1469c:	ldr	r6, [sp, #36]	; 0x24
   146a0:	ldr	r8, [r4]
   146a4:	ldr	r5, [r4, #4]
   146a8:	ldr	r2, [sp, #72]	; 0x48
   146ac:	ldr	r3, [sp, #32]
   146b0:	ldr	ip, [sp, #76]	; 0x4c
   146b4:	orr	r6, r6, #1
   146b8:	add	fp, sp, #40	; 0x28
   146bc:	str	r2, [sp, #12]
   146c0:	str	r3, [sp]
   146c4:	str	r6, [sp, #4]
   146c8:	mov	r1, r8
   146cc:	mov	r0, r5
   146d0:	str	ip, [sp, #16]
   146d4:	str	fp, [sp, #8]
   146d8:	mov	r3, sl
   146dc:	mov	r2, r9
   146e0:	bl	1208c <close@plt+0x11a0>
   146e4:	cmp	r8, r0
   146e8:	bhi	14748 <close@plt+0x385c>
   146ec:	ldr	r3, [pc, #160]	; 14794 <close@plt+0x38a8>
   146f0:	add	r8, r0, #1
   146f4:	cmp	r5, r3
   146f8:	str	r8, [r4]
   146fc:	beq	14708 <close@plt+0x381c>
   14700:	mov	r0, r5
   14704:	bl	11cd0 <close@plt+0xde4>
   14708:	mov	r0, r8
   1470c:	bl	16968 <close@plt+0x5a7c>
   14710:	ldr	ip, [sp, #76]	; 0x4c
   14714:	ldr	lr, [sp, #32]
   14718:	mov	r3, sl
   1471c:	mov	r2, r9
   14720:	mov	r1, r8
   14724:	str	r0, [r4, #4]
   14728:	ldr	r4, [sp, #72]	; 0x48
   1472c:	str	fp, [sp, #8]
   14730:	str	r6, [sp, #4]
   14734:	str	ip, [sp, #16]
   14738:	str	r4, [sp, #12]
   1473c:	str	lr, [sp]
   14740:	mov	r5, r0
   14744:	bl	1208c <close@plt+0x11a0>
   14748:	ldr	r3, [sp, #28]
   1474c:	mov	r0, r5
   14750:	str	r3, [r7]
   14754:	add	sp, sp, #132	; 0x84
   14758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1475c:	mov	r3, #8
   14760:	add	r1, sp, #80	; 0x50
   14764:	str	r3, [sp]
   14768:	rsb	r2, r2, #1
   1476c:	mvn	r3, #-2147483648	; 0x80000000
   14770:	mov	r0, #0
   14774:	bl	16b84 <close@plt+0x5c98>
   14778:	mov	r4, r0
   1477c:	ldm	r6, {r0, r1}
   14780:	str	r4, [r5]
   14784:	stm	r4, {r0, r1}
   14788:	b	14678 <close@plt+0x378c>
   1478c:	bl	10ee0 <abort@plt>
   14790:	strdeq	r9, [r2], -r4
   14794:	muleq	r2, r8, r1
   14798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1479c:	mov	r4, r2
   147a0:	ldr	lr, [pc, #432]	; 14958 <close@plt+0x3a6c>
   147a4:	mov	sl, r0
   147a8:	mov	fp, r1
   147ac:	ldm	lr!, {r0, r1, r2, r3}
   147b0:	sub	sp, sp, #92	; 0x5c
   147b4:	add	ip, sp, #40	; 0x28
   147b8:	lsr	r7, r4, #5
   147bc:	stmia	ip!, {r0, r1, r2, r3}
   147c0:	add	r6, sp, #48	; 0x30
   147c4:	ldm	lr!, {r0, r1, r2, r3}
   147c8:	and	r4, r4, #31
   147cc:	ldr	r5, [pc, #392]	; 1495c <close@plt+0x3a70>
   147d0:	stmia	ip!, {r0, r1, r2, r3}
   147d4:	ldm	lr, {r0, r1, r2, r3}
   147d8:	stm	ip, {r0, r1, r2, r3}
   147dc:	ldr	r2, [r6, r7, lsl #2]
   147e0:	lsr	r3, r2, r4
   147e4:	eor	r3, r3, #1
   147e8:	and	r3, r3, #1
   147ec:	eor	r4, r2, r3, lsl r4
   147f0:	str	r4, [r6, r7, lsl #2]
   147f4:	bl	10e20 <__errno_location@plt>
   147f8:	ldr	r2, [r5, #4]
   147fc:	ldr	r4, [r5]
   14800:	cmp	r2, #0
   14804:	ldr	r3, [r0]
   14808:	mov	r8, r0
   1480c:	str	r3, [sp, #28]
   14810:	bgt	1486c <close@plt+0x3980>
   14814:	add	r7, r5, #8
   14818:	cmp	r4, r7
   1481c:	str	r2, [sp, #36]	; 0x24
   14820:	beq	14928 <close@plt+0x3a3c>
   14824:	mov	r3, #8
   14828:	mov	r0, r4
   1482c:	str	r3, [sp]
   14830:	rsb	r2, r2, #1
   14834:	mvn	r3, #-2147483648	; 0x80000000
   14838:	add	r1, sp, #36	; 0x24
   1483c:	bl	16b84 <close@plt+0x5c98>
   14840:	mov	r4, r0
   14844:	str	r0, [r5]
   14848:	ldr	r0, [r5, #4]
   1484c:	ldr	r2, [sp, #36]	; 0x24
   14850:	mov	r1, #0
   14854:	sub	r2, r2, r0
   14858:	add	r0, r4, r0, lsl #3
   1485c:	lsl	r2, r2, #3
   14860:	bl	10e38 <memset@plt>
   14864:	ldr	r3, [sp, #36]	; 0x24
   14868:	str	r3, [r5, #4]
   1486c:	ldr	r7, [sp, #44]	; 0x2c
   14870:	ldr	r9, [r4]
   14874:	ldr	r5, [r4, #4]
   14878:	ldr	r2, [sp, #80]	; 0x50
   1487c:	ldr	r3, [sp, #40]	; 0x28
   14880:	ldr	ip, [sp, #84]	; 0x54
   14884:	orr	r7, r7, #1
   14888:	str	r2, [sp, #12]
   1488c:	str	r3, [sp]
   14890:	str	r7, [sp, #4]
   14894:	str	r6, [sp, #8]
   14898:	mov	r1, r9
   1489c:	mov	r0, r5
   148a0:	str	ip, [sp, #16]
   148a4:	mov	r3, fp
   148a8:	mov	r2, sl
   148ac:	bl	1208c <close@plt+0x11a0>
   148b0:	cmp	r9, r0
   148b4:	bhi	14914 <close@plt+0x3a28>
   148b8:	ldr	r3, [pc, #160]	; 14960 <close@plt+0x3a74>
   148bc:	add	r9, r0, #1
   148c0:	cmp	r5, r3
   148c4:	str	r9, [r4]
   148c8:	beq	148d4 <close@plt+0x39e8>
   148cc:	mov	r0, r5
   148d0:	bl	11cd0 <close@plt+0xde4>
   148d4:	mov	r0, r9
   148d8:	bl	16968 <close@plt+0x5a7c>
   148dc:	ldr	ip, [sp, #84]	; 0x54
   148e0:	ldr	lr, [sp, #40]	; 0x28
   148e4:	mov	r3, fp
   148e8:	mov	r2, sl
   148ec:	mov	r1, r9
   148f0:	str	r0, [r4, #4]
   148f4:	ldr	r4, [sp, #80]	; 0x50
   148f8:	str	r6, [sp, #8]
   148fc:	str	r7, [sp, #4]
   14900:	str	ip, [sp, #16]
   14904:	str	r4, [sp, #12]
   14908:	str	lr, [sp]
   1490c:	mov	r5, r0
   14910:	bl	1208c <close@plt+0x11a0>
   14914:	ldr	r3, [sp, #28]
   14918:	mov	r0, r5
   1491c:	str	r3, [r8]
   14920:	add	sp, sp, #92	; 0x5c
   14924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14928:	mov	r3, #8
   1492c:	str	r3, [sp]
   14930:	add	r1, sp, #36	; 0x24
   14934:	rsb	r2, r2, #1
   14938:	mvn	r3, #-2147483648	; 0x80000000
   1493c:	mov	r0, #0
   14940:	bl	16b84 <close@plt+0x5c98>
   14944:	mov	r4, r0
   14948:	ldm	r7, {r0, r1}
   1494c:	str	r4, [r5]
   14950:	stm	r4, {r0, r1}
   14954:	b	14848 <close@plt+0x395c>
   14958:	andeq	r9, r2, r8, ror #2
   1495c:	strdeq	r9, [r2], -r4
   14960:	muleq	r2, r8, r1
   14964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14968:	mov	r4, r1
   1496c:	ldr	lr, [pc, #420]	; 14b18 <close@plt+0x3c2c>
   14970:	mov	r6, r0
   14974:	sub	sp, sp, #84	; 0x54
   14978:	ldm	lr!, {r0, r1, r2, r3}
   1497c:	add	ip, sp, #32
   14980:	lsr	r8, r4, #5
   14984:	add	r5, sp, #40	; 0x28
   14988:	stmia	ip!, {r0, r1, r2, r3}
   1498c:	and	r4, r4, #31
   14990:	ldm	lr!, {r0, r1, r2, r3}
   14994:	ldr	r7, [pc, #384]	; 14b1c <close@plt+0x3c30>
   14998:	stmia	ip!, {r0, r1, r2, r3}
   1499c:	ldm	lr, {r0, r1, r2, r3}
   149a0:	stm	ip, {r0, r1, r2, r3}
   149a4:	ldr	r2, [r5, r8, lsl #2]
   149a8:	lsr	r3, r2, r4
   149ac:	eor	r3, r3, #1
   149b0:	and	r3, r3, #1
   149b4:	eor	r4, r2, r3, lsl r4
   149b8:	str	r4, [r5, r8, lsl #2]
   149bc:	bl	10e20 <__errno_location@plt>
   149c0:	ldr	r2, [r7, #4]
   149c4:	ldr	r4, [r7]
   149c8:	cmp	r2, #0
   149cc:	mov	r9, r0
   149d0:	ldr	sl, [r0]
   149d4:	bgt	14a30 <close@plt+0x3b44>
   149d8:	add	r8, r7, #8
   149dc:	cmp	r4, r8
   149e0:	str	r2, [sp, #28]
   149e4:	beq	14ae8 <close@plt+0x3bfc>
   149e8:	mov	r3, #8
   149ec:	mov	r0, r4
   149f0:	str	r3, [sp]
   149f4:	rsb	r2, r2, #1
   149f8:	mvn	r3, #-2147483648	; 0x80000000
   149fc:	add	r1, sp, #28
   14a00:	bl	16b84 <close@plt+0x5c98>
   14a04:	mov	r4, r0
   14a08:	str	r0, [r7]
   14a0c:	ldr	r0, [r7, #4]
   14a10:	ldr	r2, [sp, #28]
   14a14:	mov	r1, #0
   14a18:	sub	r2, r2, r0
   14a1c:	add	r0, r4, r0, lsl #3
   14a20:	lsl	r2, r2, #3
   14a24:	bl	10e38 <memset@plt>
   14a28:	ldr	r3, [sp, #28]
   14a2c:	str	r3, [r7, #4]
   14a30:	ldr	r8, [sp, #36]	; 0x24
   14a34:	ldr	fp, [r4]
   14a38:	ldr	r7, [r4, #4]
   14a3c:	ldr	r2, [sp, #72]	; 0x48
   14a40:	ldr	r3, [sp, #32]
   14a44:	ldr	ip, [sp, #76]	; 0x4c
   14a48:	orr	r8, r8, #1
   14a4c:	str	r2, [sp, #12]
   14a50:	str	r3, [sp]
   14a54:	str	r8, [sp, #4]
   14a58:	str	r5, [sp, #8]
   14a5c:	mov	r1, fp
   14a60:	mov	r0, r7
   14a64:	str	ip, [sp, #16]
   14a68:	mvn	r3, #0
   14a6c:	mov	r2, r6
   14a70:	bl	1208c <close@plt+0x11a0>
   14a74:	cmp	fp, r0
   14a78:	bhi	14ad8 <close@plt+0x3bec>
   14a7c:	ldr	r3, [pc, #156]	; 14b20 <close@plt+0x3c34>
   14a80:	add	fp, r0, #1
   14a84:	cmp	r7, r3
   14a88:	str	fp, [r4]
   14a8c:	beq	14a98 <close@plt+0x3bac>
   14a90:	mov	r0, r7
   14a94:	bl	11cd0 <close@plt+0xde4>
   14a98:	mov	r0, fp
   14a9c:	bl	16968 <close@plt+0x5a7c>
   14aa0:	ldr	lr, [sp, #76]	; 0x4c
   14aa4:	ldr	r3, [sp, #32]
   14aa8:	ldr	ip, [sp, #72]	; 0x48
   14aac:	mov	r2, r6
   14ab0:	mov	r1, fp
   14ab4:	str	r0, [r4, #4]
   14ab8:	str	r3, [sp]
   14abc:	str	r5, [sp, #8]
   14ac0:	str	r8, [sp, #4]
   14ac4:	str	lr, [sp, #16]
   14ac8:	str	ip, [sp, #12]
   14acc:	mvn	r3, #0
   14ad0:	mov	r7, r0
   14ad4:	bl	1208c <close@plt+0x11a0>
   14ad8:	mov	r0, r7
   14adc:	str	sl, [r9]
   14ae0:	add	sp, sp, #84	; 0x54
   14ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ae8:	mov	r3, #8
   14aec:	str	r3, [sp]
   14af0:	add	r1, sp, #28
   14af4:	rsb	r2, r2, #1
   14af8:	mvn	r3, #-2147483648	; 0x80000000
   14afc:	mov	r0, #0
   14b00:	bl	16b84 <close@plt+0x5c98>
   14b04:	mov	r4, r0
   14b08:	ldm	r8, {r0, r1}
   14b0c:	str	r4, [r7]
   14b10:	stm	r4, {r0, r1}
   14b14:	b	14a0c <close@plt+0x3b20>
   14b18:	andeq	r9, r2, r8, ror #2
   14b1c:	strdeq	r9, [r2], -r4
   14b20:	muleq	r2, r8, r1
   14b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b28:	mov	r6, r0
   14b2c:	ldr	lr, [pc, #404]	; 14cc8 <close@plt+0x3ddc>
   14b30:	sub	sp, sp, #84	; 0x54
   14b34:	add	ip, sp, #32
   14b38:	ldm	lr!, {r0, r1, r2, r3}
   14b3c:	ldr	r5, [pc, #392]	; 14ccc <close@plt+0x3de0>
   14b40:	stmia	ip!, {r0, r1, r2, r3}
   14b44:	ldm	lr!, {r0, r1, r2, r3}
   14b48:	ldr	r4, [sp, #44]	; 0x2c
   14b4c:	stmia	ip!, {r0, r1, r2, r3}
   14b50:	ldm	lr, {r0, r1, r2, r3}
   14b54:	mvn	lr, r4
   14b58:	and	lr, lr, #67108864	; 0x4000000
   14b5c:	eor	lr, lr, r4
   14b60:	stm	ip, {r0, r1, r2, r3}
   14b64:	str	lr, [sp, #44]	; 0x2c
   14b68:	bl	10e20 <__errno_location@plt>
   14b6c:	ldr	r2, [r5, #4]
   14b70:	ldr	r4, [r5]
   14b74:	cmp	r2, #0
   14b78:	mov	r8, r0
   14b7c:	ldr	sl, [r0]
   14b80:	bgt	14bdc <close@plt+0x3cf0>
   14b84:	add	r7, r5, #8
   14b88:	cmp	r4, r7
   14b8c:	str	r2, [sp, #28]
   14b90:	beq	14c98 <close@plt+0x3dac>
   14b94:	mov	r3, #8
   14b98:	mov	r0, r4
   14b9c:	str	r3, [sp]
   14ba0:	rsb	r2, r2, #1
   14ba4:	mvn	r3, #-2147483648	; 0x80000000
   14ba8:	add	r1, sp, #28
   14bac:	bl	16b84 <close@plt+0x5c98>
   14bb0:	mov	r4, r0
   14bb4:	str	r0, [r5]
   14bb8:	ldr	r0, [r5, #4]
   14bbc:	ldr	r2, [sp, #28]
   14bc0:	mov	r1, #0
   14bc4:	sub	r2, r2, r0
   14bc8:	add	r0, r4, r0, lsl #3
   14bcc:	lsl	r2, r2, #3
   14bd0:	bl	10e38 <memset@plt>
   14bd4:	ldr	r3, [sp, #28]
   14bd8:	str	r3, [r5, #4]
   14bdc:	ldr	r7, [sp, #36]	; 0x24
   14be0:	ldr	r9, [r4]
   14be4:	ldr	r5, [r4, #4]
   14be8:	ldr	r2, [sp, #72]	; 0x48
   14bec:	ldr	r3, [sp, #32]
   14bf0:	ldr	ip, [sp, #76]	; 0x4c
   14bf4:	orr	r7, r7, #1
   14bf8:	add	fp, sp, #40	; 0x28
   14bfc:	str	r2, [sp, #12]
   14c00:	str	r3, [sp]
   14c04:	str	r7, [sp, #4]
   14c08:	mov	r1, r9
   14c0c:	mov	r0, r5
   14c10:	str	ip, [sp, #16]
   14c14:	str	fp, [sp, #8]
   14c18:	mvn	r3, #0
   14c1c:	mov	r2, r6
   14c20:	bl	1208c <close@plt+0x11a0>
   14c24:	cmp	r9, r0
   14c28:	bhi	14c88 <close@plt+0x3d9c>
   14c2c:	ldr	r3, [pc, #156]	; 14cd0 <close@plt+0x3de4>
   14c30:	add	r9, r0, #1
   14c34:	cmp	r5, r3
   14c38:	str	r9, [r4]
   14c3c:	beq	14c48 <close@plt+0x3d5c>
   14c40:	mov	r0, r5
   14c44:	bl	11cd0 <close@plt+0xde4>
   14c48:	mov	r0, r9
   14c4c:	bl	16968 <close@plt+0x5a7c>
   14c50:	ldr	lr, [sp, #76]	; 0x4c
   14c54:	ldr	r3, [sp, #32]
   14c58:	ldr	ip, [sp, #72]	; 0x48
   14c5c:	mov	r2, r6
   14c60:	mov	r1, r9
   14c64:	str	r0, [r4, #4]
   14c68:	str	r3, [sp]
   14c6c:	str	fp, [sp, #8]
   14c70:	str	r7, [sp, #4]
   14c74:	str	lr, [sp, #16]
   14c78:	str	ip, [sp, #12]
   14c7c:	mvn	r3, #0
   14c80:	mov	r5, r0
   14c84:	bl	1208c <close@plt+0x11a0>
   14c88:	mov	r0, r5
   14c8c:	str	sl, [r8]
   14c90:	add	sp, sp, #84	; 0x54
   14c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c98:	mov	r3, #8
   14c9c:	str	r3, [sp]
   14ca0:	add	r1, sp, #28
   14ca4:	rsb	r2, r2, #1
   14ca8:	mvn	r3, #-2147483648	; 0x80000000
   14cac:	mov	r0, #0
   14cb0:	bl	16b84 <close@plt+0x5c98>
   14cb4:	mov	r4, r0
   14cb8:	ldm	r7, {r0, r1}
   14cbc:	str	r4, [r5]
   14cc0:	stm	r4, {r0, r1}
   14cc4:	b	14bb8 <close@plt+0x3ccc>
   14cc8:	andeq	r9, r2, r8, ror #2
   14ccc:	strdeq	r9, [r2], -r4
   14cd0:	muleq	r2, r8, r1
   14cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cd8:	mov	r9, r0
   14cdc:	ldr	lr, [pc, #416]	; 14e84 <close@plt+0x3f98>
   14ce0:	mov	sl, r1
   14ce4:	sub	sp, sp, #92	; 0x5c
   14ce8:	ldm	lr!, {r0, r1, r2, r3}
   14cec:	add	ip, sp, #40	; 0x28
   14cf0:	ldr	r5, [pc, #400]	; 14e88 <close@plt+0x3f9c>
   14cf4:	stmia	ip!, {r0, r1, r2, r3}
   14cf8:	ldm	lr!, {r0, r1, r2, r3}
   14cfc:	ldr	r4, [sp, #52]	; 0x34
   14d00:	stmia	ip!, {r0, r1, r2, r3}
   14d04:	ldm	lr, {r0, r1, r2, r3}
   14d08:	mvn	lr, r4
   14d0c:	and	lr, lr, #67108864	; 0x4000000
   14d10:	eor	lr, lr, r4
   14d14:	stm	ip, {r0, r1, r2, r3}
   14d18:	str	lr, [sp, #52]	; 0x34
   14d1c:	bl	10e20 <__errno_location@plt>
   14d20:	ldr	r2, [r5, #4]
   14d24:	ldr	r4, [r5]
   14d28:	cmp	r2, #0
   14d2c:	ldr	r3, [r0]
   14d30:	mov	r7, r0
   14d34:	str	r3, [sp, #28]
   14d38:	bgt	14d94 <close@plt+0x3ea8>
   14d3c:	add	r6, r5, #8
   14d40:	cmp	r4, r6
   14d44:	str	r2, [sp, #36]	; 0x24
   14d48:	beq	14e54 <close@plt+0x3f68>
   14d4c:	mov	r3, #8
   14d50:	mov	r0, r4
   14d54:	str	r3, [sp]
   14d58:	rsb	r2, r2, #1
   14d5c:	mvn	r3, #-2147483648	; 0x80000000
   14d60:	add	r1, sp, #36	; 0x24
   14d64:	bl	16b84 <close@plt+0x5c98>
   14d68:	mov	r4, r0
   14d6c:	str	r0, [r5]
   14d70:	ldr	r0, [r5, #4]
   14d74:	ldr	r2, [sp, #36]	; 0x24
   14d78:	mov	r1, #0
   14d7c:	sub	r2, r2, r0
   14d80:	add	r0, r4, r0, lsl #3
   14d84:	lsl	r2, r2, #3
   14d88:	bl	10e38 <memset@plt>
   14d8c:	ldr	r3, [sp, #36]	; 0x24
   14d90:	str	r3, [r5, #4]
   14d94:	ldr	r6, [sp, #44]	; 0x2c
   14d98:	ldr	r8, [r4]
   14d9c:	ldr	r5, [r4, #4]
   14da0:	ldr	r2, [sp, #80]	; 0x50
   14da4:	ldr	r3, [sp, #40]	; 0x28
   14da8:	ldr	ip, [sp, #84]	; 0x54
   14dac:	orr	r6, r6, #1
   14db0:	add	fp, sp, #48	; 0x30
   14db4:	str	r2, [sp, #12]
   14db8:	str	r3, [sp]
   14dbc:	str	r6, [sp, #4]
   14dc0:	mov	r1, r8
   14dc4:	mov	r0, r5
   14dc8:	str	ip, [sp, #16]
   14dcc:	str	fp, [sp, #8]
   14dd0:	mov	r3, sl
   14dd4:	mov	r2, r9
   14dd8:	bl	1208c <close@plt+0x11a0>
   14ddc:	cmp	r8, r0
   14de0:	bhi	14e40 <close@plt+0x3f54>
   14de4:	ldr	r3, [pc, #160]	; 14e8c <close@plt+0x3fa0>
   14de8:	add	r8, r0, #1
   14dec:	cmp	r5, r3
   14df0:	str	r8, [r4]
   14df4:	beq	14e00 <close@plt+0x3f14>
   14df8:	mov	r0, r5
   14dfc:	bl	11cd0 <close@plt+0xde4>
   14e00:	mov	r0, r8
   14e04:	bl	16968 <close@plt+0x5a7c>
   14e08:	ldr	ip, [sp, #84]	; 0x54
   14e0c:	ldr	lr, [sp, #40]	; 0x28
   14e10:	mov	r3, sl
   14e14:	mov	r2, r9
   14e18:	mov	r1, r8
   14e1c:	str	r0, [r4, #4]
   14e20:	ldr	r4, [sp, #80]	; 0x50
   14e24:	str	fp, [sp, #8]
   14e28:	str	r6, [sp, #4]
   14e2c:	str	ip, [sp, #16]
   14e30:	str	r4, [sp, #12]
   14e34:	str	lr, [sp]
   14e38:	mov	r5, r0
   14e3c:	bl	1208c <close@plt+0x11a0>
   14e40:	ldr	r3, [sp, #28]
   14e44:	mov	r0, r5
   14e48:	str	r3, [r7]
   14e4c:	add	sp, sp, #92	; 0x5c
   14e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e54:	mov	r3, #8
   14e58:	str	r3, [sp]
   14e5c:	add	r1, sp, #36	; 0x24
   14e60:	rsb	r2, r2, #1
   14e64:	mvn	r3, #-2147483648	; 0x80000000
   14e68:	mov	r0, #0
   14e6c:	bl	16b84 <close@plt+0x5c98>
   14e70:	mov	r4, r0
   14e74:	ldm	r6, {r0, r1}
   14e78:	str	r4, [r5]
   14e7c:	stm	r4, {r0, r1}
   14e80:	b	14d70 <close@plt+0x3e84>
   14e84:	andeq	r9, r2, r8, ror #2
   14e88:	strdeq	r9, [r2], -r4
   14e8c:	muleq	r2, r8, r1
   14e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e94:	sub	sp, sp, #180	; 0xb4
   14e98:	mov	r6, r1
   14e9c:	mov	r4, r0
   14ea0:	mov	r9, r2
   14ea4:	add	r0, sp, #80	; 0x50
   14ea8:	mov	r2, #48	; 0x30
   14eac:	mov	r1, #0
   14eb0:	bl	10e38 <memset@plt>
   14eb4:	cmp	r6, #10
   14eb8:	beq	15098 <close@plt+0x41ac>
   14ebc:	add	r5, sp, #80	; 0x50
   14ec0:	str	r6, [sp, #80]	; 0x50
   14ec4:	ldm	r5!, {r0, r1, r2, r3}
   14ec8:	add	ip, sp, #128	; 0x80
   14ecc:	mov	r7, ip
   14ed0:	add	lr, sp, #32
   14ed4:	stmia	ip!, {r0, r1, r2, r3}
   14ed8:	mov	r8, #67108864	; 0x4000000
   14edc:	ldm	r5!, {r0, r1, r2, r3}
   14ee0:	ldr	r6, [pc, #436]	; 1509c <close@plt+0x41b0>
   14ee4:	stmia	ip!, {r0, r1, r2, r3}
   14ee8:	ldm	r5, {r0, r1, r2, r3}
   14eec:	stm	ip, {r0, r1, r2, r3}
   14ef0:	ldm	r7!, {r0, r1, r2, r3}
   14ef4:	stmia	lr!, {r0, r1, r2, r3}
   14ef8:	ldm	r7!, {r0, r1, r2, r3}
   14efc:	str	r8, [sp, #44]	; 0x2c
   14f00:	stmia	lr!, {r0, r1, r2, r3}
   14f04:	ldm	ip, {r0, r1, r2, r3}
   14f08:	stm	lr, {r0, r1, r2, r3}
   14f0c:	bl	10e20 <__errno_location@plt>
   14f10:	cmn	r4, #-2147483647	; 0x80000001
   14f14:	ldr	r5, [r6]
   14f18:	mov	r7, r0
   14f1c:	movne	r0, #0
   14f20:	moveq	r0, #1
   14f24:	ldr	r3, [r7]
   14f28:	orrs	r0, r0, r4, lsr #31
   14f2c:	str	r3, [sp, #24]
   14f30:	bne	15098 <close@plt+0x41ac>
   14f34:	ldr	r2, [r6, #4]
   14f38:	cmp	r4, r2
   14f3c:	blt	14f9c <close@plt+0x40b0>
   14f40:	add	r8, r6, #8
   14f44:	cmp	r5, r8
   14f48:	str	r2, [sp, #80]	; 0x50
   14f4c:	beq	15068 <close@plt+0x417c>
   14f50:	mov	r3, #8
   14f54:	sub	r2, r4, r2
   14f58:	mov	r0, r5
   14f5c:	str	r3, [sp]
   14f60:	add	r2, r2, #1
   14f64:	add	r1, sp, #80	; 0x50
   14f68:	mvn	r3, #-2147483648	; 0x80000000
   14f6c:	bl	16b84 <close@plt+0x5c98>
   14f70:	mov	r5, r0
   14f74:	str	r0, [r6]
   14f78:	ldr	r0, [r6, #4]
   14f7c:	ldr	r2, [sp, #80]	; 0x50
   14f80:	mov	r1, #0
   14f84:	sub	r2, r2, r0
   14f88:	add	r0, r5, r0, lsl #3
   14f8c:	lsl	r2, r2, #3
   14f90:	bl	10e38 <memset@plt>
   14f94:	ldr	r3, [sp, #80]	; 0x50
   14f98:	str	r3, [r6, #4]
   14f9c:	add	fp, r5, r4, lsl #3
   14fa0:	ldr	r1, [sp, #36]	; 0x24
   14fa4:	ldr	r8, [r5, r4, lsl #3]
   14fa8:	ldr	r6, [fp, #4]
   14fac:	ldr	r2, [sp, #72]	; 0x48
   14fb0:	ldr	r3, [sp, #32]
   14fb4:	ldr	ip, [sp, #76]	; 0x4c
   14fb8:	orr	r1, r1, #1
   14fbc:	add	sl, sp, #40	; 0x28
   14fc0:	str	r1, [sp, #28]
   14fc4:	str	r1, [sp, #4]
   14fc8:	str	r2, [sp, #12]
   14fcc:	str	r3, [sp]
   14fd0:	mov	r0, r6
   14fd4:	mov	r1, r8
   14fd8:	str	ip, [sp, #16]
   14fdc:	str	sl, [sp, #8]
   14fe0:	mvn	r3, #0
   14fe4:	mov	r2, r9
   14fe8:	bl	1208c <close@plt+0x11a0>
   14fec:	cmp	r8, r0
   14ff0:	bhi	15054 <close@plt+0x4168>
   14ff4:	ldr	r3, [pc, #164]	; 150a0 <close@plt+0x41b4>
   14ff8:	add	r8, r0, #1
   14ffc:	cmp	r6, r3
   15000:	str	r8, [r5, r4, lsl #3]
   15004:	beq	15010 <close@plt+0x4124>
   15008:	mov	r0, r6
   1500c:	bl	11cd0 <close@plt+0xde4>
   15010:	mov	r0, r8
   15014:	bl	16968 <close@plt+0x5a7c>
   15018:	ldr	lr, [sp, #76]	; 0x4c
   1501c:	ldr	r3, [sp, #32]
   15020:	ldr	ip, [sp, #72]	; 0x48
   15024:	ldr	r4, [sp, #28]
   15028:	mov	r2, r9
   1502c:	mov	r1, r8
   15030:	str	r0, [fp, #4]
   15034:	str	r3, [sp]
   15038:	str	sl, [sp, #8]
   1503c:	str	r4, [sp, #4]
   15040:	str	lr, [sp, #16]
   15044:	str	ip, [sp, #12]
   15048:	mvn	r3, #0
   1504c:	mov	r6, r0
   15050:	bl	1208c <close@plt+0x11a0>
   15054:	ldr	r3, [sp, #24]
   15058:	mov	r0, r6
   1505c:	str	r3, [r7]
   15060:	add	sp, sp, #180	; 0xb4
   15064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15068:	mov	r3, #8
   1506c:	sub	r2, r4, r2
   15070:	add	r1, sp, #80	; 0x50
   15074:	str	r3, [sp]
   15078:	add	r2, r2, #1
   1507c:	mvn	r3, #-2147483648	; 0x80000000
   15080:	bl	16b84 <close@plt+0x5c98>
   15084:	mov	r5, r0
   15088:	ldm	r8, {r0, r1}
   1508c:	str	r5, [r6]
   15090:	stm	r5, {r0, r1}
   15094:	b	14f78 <close@plt+0x408c>
   15098:	bl	10ee0 <abort@plt>
   1509c:	strdeq	r9, [r2], -r4
   150a0:	muleq	r2, r8, r1
   150a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150a8:	mov	r7, r1
   150ac:	ldr	lr, [pc, #492]	; 152a0 <close@plt+0x43b4>
   150b0:	mov	r8, r2
   150b4:	mov	r4, r0
   150b8:	mov	fp, r3
   150bc:	ldm	lr!, {r0, r1, r2, r3}
   150c0:	sub	sp, sp, #100	; 0x64
   150c4:	add	ip, sp, #48	; 0x30
   150c8:	mov	sl, #10
   150cc:	stmia	ip!, {r0, r1, r2, r3}
   150d0:	cmp	r8, #0
   150d4:	cmpne	r7, #0
   150d8:	ldm	lr!, {r0, r1, r2, r3}
   150dc:	str	sl, [sp, #48]	; 0x30
   150e0:	stmia	ip!, {r0, r1, r2, r3}
   150e4:	ldm	lr, {r0, r1, r2, r3}
   150e8:	stm	ip, {r0, r1, r2, r3}
   150ec:	beq	1529c <close@plt+0x43b0>
   150f0:	str	r7, [sp, #88]	; 0x58
   150f4:	str	r8, [sp, #92]	; 0x5c
   150f8:	bl	10e20 <__errno_location@plt>
   150fc:	ldr	r6, [pc, #416]	; 152a4 <close@plt+0x43b8>
   15100:	cmn	r4, #-2147483647	; 0x80000001
   15104:	ldr	r5, [r6]
   15108:	mov	r9, r0
   1510c:	movne	r0, #0
   15110:	moveq	r0, #1
   15114:	ldr	r3, [r9]
   15118:	orrs	r0, r0, r4, lsr #31
   1511c:	str	r3, [sp, #28]
   15120:	bne	1529c <close@plt+0x43b0>
   15124:	ldr	r2, [r6, #4]
   15128:	cmp	r4, r2
   1512c:	movlt	r3, sl
   15130:	blt	1519c <close@plt+0x42b0>
   15134:	add	r7, r6, #8
   15138:	cmp	r5, r7
   1513c:	str	r2, [sp, #44]	; 0x2c
   15140:	beq	1526c <close@plt+0x4380>
   15144:	mov	r3, #8
   15148:	sub	r2, r4, r2
   1514c:	mov	r0, r5
   15150:	str	r3, [sp]
   15154:	add	r2, r2, #1
   15158:	mvn	r3, #-2147483648	; 0x80000000
   1515c:	add	r1, sp, #44	; 0x2c
   15160:	bl	16b84 <close@plt+0x5c98>
   15164:	mov	r5, r0
   15168:	str	r0, [r6]
   1516c:	ldr	r0, [r6, #4]
   15170:	ldr	r2, [sp, #44]	; 0x2c
   15174:	mov	r1, #0
   15178:	sub	r2, r2, r0
   1517c:	add	r0, r5, r0, lsl #3
   15180:	lsl	r2, r2, #3
   15184:	bl	10e38 <memset@plt>
   15188:	ldr	r3, [sp, #48]	; 0x30
   1518c:	ldr	r7, [sp, #88]	; 0x58
   15190:	ldr	r8, [sp, #92]	; 0x5c
   15194:	ldr	r2, [sp, #44]	; 0x2c
   15198:	str	r2, [r6, #4]
   1519c:	add	r2, r5, r4, lsl #3
   151a0:	mov	r1, r2
   151a4:	str	r2, [sp, #32]
   151a8:	ldr	r2, [sp, #52]	; 0x34
   151ac:	ldr	r6, [r1, #4]
   151b0:	ldr	sl, [r5, r4, lsl #3]
   151b4:	orr	r2, r2, #1
   151b8:	str	r3, [sp]
   151bc:	add	r3, sp, #56	; 0x38
   151c0:	str	r2, [sp, #36]	; 0x24
   151c4:	str	r2, [sp, #4]
   151c8:	str	r3, [sp, #8]
   151cc:	mov	r0, r6
   151d0:	str	r8, [sp, #16]
   151d4:	str	r7, [sp, #12]
   151d8:	mov	r1, sl
   151dc:	mvn	r3, #0
   151e0:	mov	r2, fp
   151e4:	bl	1208c <close@plt+0x11a0>
   151e8:	cmp	sl, r0
   151ec:	bhi	15258 <close@plt+0x436c>
   151f0:	ldr	r3, [pc, #176]	; 152a8 <close@plt+0x43bc>
   151f4:	add	r7, r0, #1
   151f8:	cmp	r6, r3
   151fc:	str	r7, [r5, r4, lsl #3]
   15200:	beq	1520c <close@plt+0x4320>
   15204:	mov	r0, r6
   15208:	bl	11cd0 <close@plt+0xde4>
   1520c:	mov	r0, r7
   15210:	bl	16968 <close@plt+0x5a7c>
   15214:	ldr	r3, [sp, #32]
   15218:	ldr	lr, [sp, #92]	; 0x5c
   1521c:	ldr	ip, [sp, #88]	; 0x58
   15220:	ldr	r4, [sp, #36]	; 0x24
   15224:	mov	r2, fp
   15228:	mov	r1, r7
   1522c:	str	r0, [r3, #4]
   15230:	add	r3, sp, #56	; 0x38
   15234:	str	r3, [sp, #8]
   15238:	ldr	r3, [sp, #48]	; 0x30
   1523c:	str	r4, [sp, #4]
   15240:	str	r3, [sp]
   15244:	str	lr, [sp, #16]
   15248:	str	ip, [sp, #12]
   1524c:	mvn	r3, #0
   15250:	mov	r6, r0
   15254:	bl	1208c <close@plt+0x11a0>
   15258:	ldr	r3, [sp, #28]
   1525c:	mov	r0, r6
   15260:	str	r3, [r9]
   15264:	add	sp, sp, #100	; 0x64
   15268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1526c:	mov	r3, #8
   15270:	sub	r2, r4, r2
   15274:	str	r3, [sp]
   15278:	add	r1, sp, #44	; 0x2c
   1527c:	add	r2, r2, #1
   15280:	mvn	r3, #-2147483648	; 0x80000000
   15284:	bl	16b84 <close@plt+0x5c98>
   15288:	mov	r5, r0
   1528c:	ldm	r7, {r0, r1}
   15290:	str	r5, [r6]
   15294:	stm	r5, {r0, r1}
   15298:	b	1516c <close@plt+0x4280>
   1529c:	bl	10ee0 <abort@plt>
   152a0:	andeq	r9, r2, r8, ror #2
   152a4:	strdeq	r9, [r2], -r4
   152a8:	muleq	r2, r8, r1
   152ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152b0:	mov	r7, r1
   152b4:	ldr	lr, [pc, #492]	; 154a8 <close@plt+0x45bc>
   152b8:	mov	r8, r2
   152bc:	mov	r4, r0
   152c0:	mov	fp, r3
   152c4:	ldm	lr!, {r0, r1, r2, r3}
   152c8:	sub	sp, sp, #100	; 0x64
   152cc:	add	ip, sp, #48	; 0x30
   152d0:	mov	sl, #10
   152d4:	stmia	ip!, {r0, r1, r2, r3}
   152d8:	cmp	r8, #0
   152dc:	cmpne	r7, #0
   152e0:	ldm	lr!, {r0, r1, r2, r3}
   152e4:	str	sl, [sp, #48]	; 0x30
   152e8:	stmia	ip!, {r0, r1, r2, r3}
   152ec:	ldm	lr, {r0, r1, r2, r3}
   152f0:	stm	ip, {r0, r1, r2, r3}
   152f4:	beq	154a4 <close@plt+0x45b8>
   152f8:	str	r7, [sp, #88]	; 0x58
   152fc:	str	r8, [sp, #92]	; 0x5c
   15300:	bl	10e20 <__errno_location@plt>
   15304:	ldr	r6, [pc, #416]	; 154ac <close@plt+0x45c0>
   15308:	cmn	r4, #-2147483647	; 0x80000001
   1530c:	ldr	r5, [r6]
   15310:	mov	r9, r0
   15314:	movne	r0, #0
   15318:	moveq	r0, #1
   1531c:	ldr	r3, [r9]
   15320:	orrs	r0, r0, r4, lsr #31
   15324:	str	r3, [sp, #28]
   15328:	bne	154a4 <close@plt+0x45b8>
   1532c:	ldr	r2, [r6, #4]
   15330:	cmp	r4, r2
   15334:	movlt	r3, sl
   15338:	blt	153a4 <close@plt+0x44b8>
   1533c:	add	r7, r6, #8
   15340:	cmp	r5, r7
   15344:	str	r2, [sp, #44]	; 0x2c
   15348:	beq	15474 <close@plt+0x4588>
   1534c:	mov	r3, #8
   15350:	sub	r2, r4, r2
   15354:	mov	r0, r5
   15358:	str	r3, [sp]
   1535c:	add	r2, r2, #1
   15360:	mvn	r3, #-2147483648	; 0x80000000
   15364:	add	r1, sp, #44	; 0x2c
   15368:	bl	16b84 <close@plt+0x5c98>
   1536c:	mov	r5, r0
   15370:	str	r0, [r6]
   15374:	ldr	r0, [r6, #4]
   15378:	ldr	r2, [sp, #44]	; 0x2c
   1537c:	mov	r1, #0
   15380:	sub	r2, r2, r0
   15384:	add	r0, r5, r0, lsl #3
   15388:	lsl	r2, r2, #3
   1538c:	bl	10e38 <memset@plt>
   15390:	ldr	r3, [sp, #48]	; 0x30
   15394:	ldr	r7, [sp, #88]	; 0x58
   15398:	ldr	r8, [sp, #92]	; 0x5c
   1539c:	ldr	r2, [sp, #44]	; 0x2c
   153a0:	str	r2, [r6, #4]
   153a4:	add	r2, r5, r4, lsl #3
   153a8:	mov	r1, r2
   153ac:	str	r2, [sp, #32]
   153b0:	ldr	r2, [sp, #52]	; 0x34
   153b4:	ldr	r6, [r1, #4]
   153b8:	ldr	sl, [r5, r4, lsl #3]
   153bc:	orr	r2, r2, #1
   153c0:	str	r3, [sp]
   153c4:	add	r3, sp, #56	; 0x38
   153c8:	str	r2, [sp, #36]	; 0x24
   153cc:	str	r2, [sp, #4]
   153d0:	str	r3, [sp, #8]
   153d4:	mov	r0, r6
   153d8:	str	r8, [sp, #16]
   153dc:	str	r7, [sp, #12]
   153e0:	mov	r1, sl
   153e4:	ldr	r3, [sp, #136]	; 0x88
   153e8:	mov	r2, fp
   153ec:	bl	1208c <close@plt+0x11a0>
   153f0:	cmp	sl, r0
   153f4:	bhi	15460 <close@plt+0x4574>
   153f8:	ldr	r3, [pc, #176]	; 154b0 <close@plt+0x45c4>
   153fc:	add	r7, r0, #1
   15400:	cmp	r6, r3
   15404:	str	r7, [r5, r4, lsl #3]
   15408:	beq	15414 <close@plt+0x4528>
   1540c:	mov	r0, r6
   15410:	bl	11cd0 <close@plt+0xde4>
   15414:	mov	r0, r7
   15418:	bl	16968 <close@plt+0x5a7c>
   1541c:	ldr	r3, [sp, #32]
   15420:	ldr	lr, [sp, #92]	; 0x5c
   15424:	ldr	ip, [sp, #88]	; 0x58
   15428:	ldr	r4, [sp, #36]	; 0x24
   1542c:	mov	r2, fp
   15430:	mov	r1, r7
   15434:	str	r0, [r3, #4]
   15438:	add	r3, sp, #56	; 0x38
   1543c:	str	r3, [sp, #8]
   15440:	ldr	r3, [sp, #48]	; 0x30
   15444:	str	r4, [sp, #4]
   15448:	str	r3, [sp]
   1544c:	str	lr, [sp, #16]
   15450:	str	ip, [sp, #12]
   15454:	ldr	r3, [sp, #136]	; 0x88
   15458:	mov	r6, r0
   1545c:	bl	1208c <close@plt+0x11a0>
   15460:	ldr	r3, [sp, #28]
   15464:	mov	r0, r6
   15468:	str	r3, [r9]
   1546c:	add	sp, sp, #100	; 0x64
   15470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15474:	mov	r3, #8
   15478:	sub	r2, r4, r2
   1547c:	str	r3, [sp]
   15480:	add	r1, sp, #44	; 0x2c
   15484:	add	r2, r2, #1
   15488:	mvn	r3, #-2147483648	; 0x80000000
   1548c:	bl	16b84 <close@plt+0x5c98>
   15490:	mov	r5, r0
   15494:	ldm	r7, {r0, r1}
   15498:	str	r5, [r6]
   1549c:	stm	r5, {r0, r1}
   154a0:	b	15374 <close@plt+0x4488>
   154a4:	bl	10ee0 <abort@plt>
   154a8:	andeq	r9, r2, r8, ror #2
   154ac:	strdeq	r9, [r2], -r4
   154b0:	muleq	r2, r8, r1
   154b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154b8:	mov	r5, r0
   154bc:	ldr	lr, [pc, #452]	; 15688 <close@plt+0x479c>
   154c0:	mov	r6, r1
   154c4:	mov	sl, r2
   154c8:	ldm	lr!, {r0, r1, r2, r3}
   154cc:	sub	sp, sp, #92	; 0x5c
   154d0:	add	ip, sp, #40	; 0x28
   154d4:	cmp	r6, #0
   154d8:	cmpne	r5, #0
   154dc:	stmia	ip!, {r0, r1, r2, r3}
   154e0:	mov	r9, #10
   154e4:	ldm	lr!, {r0, r1, r2, r3}
   154e8:	moveq	fp, #1
   154ec:	movne	fp, #0
   154f0:	str	r9, [sp, #40]	; 0x28
   154f4:	stmia	ip!, {r0, r1, r2, r3}
   154f8:	ldm	lr, {r0, r1, r2, r3}
   154fc:	stm	ip, {r0, r1, r2, r3}
   15500:	beq	15684 <close@plt+0x4798>
   15504:	str	r5, [sp, #80]	; 0x50
   15508:	str	r6, [sp, #84]	; 0x54
   1550c:	bl	10e20 <__errno_location@plt>
   15510:	ldr	r7, [pc, #372]	; 1568c <close@plt+0x47a0>
   15514:	ldr	r2, [r7, #4]
   15518:	ldr	r4, [r7]
   1551c:	cmp	r2, #0
   15520:	ldr	r3, [r0]
   15524:	mov	r8, r0
   15528:	str	r3, [sp, #24]
   1552c:	movgt	r3, r9
   15530:	bgt	15598 <close@plt+0x46ac>
   15534:	add	r5, r7, #8
   15538:	cmp	r4, r5
   1553c:	str	r2, [sp, #36]	; 0x24
   15540:	beq	15654 <close@plt+0x4768>
   15544:	mov	r3, #8
   15548:	mov	r0, r4
   1554c:	str	r3, [sp]
   15550:	rsb	r2, r2, #1
   15554:	mvn	r3, #-2147483648	; 0x80000000
   15558:	add	r1, sp, #36	; 0x24
   1555c:	bl	16b84 <close@plt+0x5c98>
   15560:	mov	r4, r0
   15564:	str	r0, [r7]
   15568:	ldr	r0, [r7, #4]
   1556c:	ldr	r2, [sp, #36]	; 0x24
   15570:	mov	r1, #0
   15574:	sub	r2, r2, r0
   15578:	add	r0, r4, r0, lsl #3
   1557c:	lsl	r2, r2, #3
   15580:	bl	10e38 <memset@plt>
   15584:	ldr	r3, [sp, #40]	; 0x28
   15588:	ldr	r5, [sp, #80]	; 0x50
   1558c:	ldr	r6, [sp, #84]	; 0x54
   15590:	ldr	r2, [sp, #36]	; 0x24
   15594:	str	r2, [r7, #4]
   15598:	ldr	r2, [sp, #44]	; 0x2c
   1559c:	ldr	r9, [r4]
   155a0:	ldr	r7, [r4, #4]
   155a4:	orr	r2, r2, #1
   155a8:	add	fp, sp, #48	; 0x30
   155ac:	str	r2, [sp, #28]
   155b0:	str	r2, [sp, #4]
   155b4:	str	r3, [sp]
   155b8:	str	r6, [sp, #16]
   155bc:	str	r5, [sp, #12]
   155c0:	mov	r1, r9
   155c4:	mov	r0, r7
   155c8:	str	fp, [sp, #8]
   155cc:	mvn	r3, #0
   155d0:	mov	r2, sl
   155d4:	bl	1208c <close@plt+0x11a0>
   155d8:	cmp	r9, r0
   155dc:	bhi	15640 <close@plt+0x4754>
   155e0:	ldr	r3, [pc, #168]	; 15690 <close@plt+0x47a4>
   155e4:	add	r5, r0, #1
   155e8:	cmp	r7, r3
   155ec:	str	r5, [r4]
   155f0:	beq	155fc <close@plt+0x4710>
   155f4:	mov	r0, r7
   155f8:	bl	11cd0 <close@plt+0xde4>
   155fc:	mov	r0, r5
   15600:	bl	16968 <close@plt+0x5a7c>
   15604:	ldr	lr, [sp, #84]	; 0x54
   15608:	ldr	r3, [sp, #40]	; 0x28
   1560c:	ldr	ip, [sp, #80]	; 0x50
   15610:	mov	r2, sl
   15614:	mov	r1, r5
   15618:	str	r0, [r4, #4]
   1561c:	ldr	r4, [sp, #28]
   15620:	str	r3, [sp]
   15624:	str	fp, [sp, #8]
   15628:	str	r4, [sp, #4]
   1562c:	str	lr, [sp, #16]
   15630:	str	ip, [sp, #12]
   15634:	mvn	r3, #0
   15638:	mov	r7, r0
   1563c:	bl	1208c <close@plt+0x11a0>
   15640:	ldr	r3, [sp, #24]
   15644:	mov	r0, r7
   15648:	str	r3, [r8]
   1564c:	add	sp, sp, #92	; 0x5c
   15650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15654:	mov	r3, #8
   15658:	str	r3, [sp]
   1565c:	add	r1, sp, #36	; 0x24
   15660:	rsb	r2, r2, #1
   15664:	mov	r0, fp
   15668:	mvn	r3, #-2147483648	; 0x80000000
   1566c:	bl	16b84 <close@plt+0x5c98>
   15670:	mov	r4, r0
   15674:	ldm	r5, {r0, r1}
   15678:	str	r4, [r7]
   1567c:	stm	r4, {r0, r1}
   15680:	b	15568 <close@plt+0x467c>
   15684:	bl	10ee0 <abort@plt>
   15688:	andeq	r9, r2, r8, ror #2
   1568c:	strdeq	r9, [r2], -r4
   15690:	muleq	r2, r8, r1
   15694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15698:	mov	r5, r0
   1569c:	ldr	lr, [pc, #464]	; 15874 <close@plt+0x4988>
   156a0:	mov	r6, r1
   156a4:	mov	sl, r2
   156a8:	mov	fp, r3
   156ac:	ldm	lr!, {r0, r1, r2, r3}
   156b0:	sub	sp, sp, #92	; 0x5c
   156b4:	add	ip, sp, #40	; 0x28
   156b8:	cmp	r6, #0
   156bc:	cmpne	r5, #0
   156c0:	stmia	ip!, {r0, r1, r2, r3}
   156c4:	moveq	r4, #1
   156c8:	ldm	lr!, {r0, r1, r2, r3}
   156cc:	movne	r4, #0
   156d0:	mov	r9, #10
   156d4:	str	r4, [sp, #28]
   156d8:	stmia	ip!, {r0, r1, r2, r3}
   156dc:	ldm	lr, {r0, r1, r2, r3}
   156e0:	str	r9, [sp, #40]	; 0x28
   156e4:	stm	ip, {r0, r1, r2, r3}
   156e8:	beq	15870 <close@plt+0x4984>
   156ec:	str	r5, [sp, #80]	; 0x50
   156f0:	str	r6, [sp, #84]	; 0x54
   156f4:	bl	10e20 <__errno_location@plt>
   156f8:	ldr	r7, [pc, #376]	; 15878 <close@plt+0x498c>
   156fc:	ldr	r2, [r7, #4]
   15700:	ldr	r4, [r7]
   15704:	cmp	r2, #0
   15708:	ldr	r3, [r0]
   1570c:	mov	r8, r0
   15710:	str	r3, [sp, #24]
   15714:	movgt	r3, r9
   15718:	bgt	15780 <close@plt+0x4894>
   1571c:	add	r5, r7, #8
   15720:	cmp	r4, r5
   15724:	str	r2, [sp, #36]	; 0x24
   15728:	beq	15840 <close@plt+0x4954>
   1572c:	mov	r3, #8
   15730:	mov	r0, r4
   15734:	str	r3, [sp]
   15738:	rsb	r2, r2, #1
   1573c:	mvn	r3, #-2147483648	; 0x80000000
   15740:	add	r1, sp, #36	; 0x24
   15744:	bl	16b84 <close@plt+0x5c98>
   15748:	mov	r4, r0
   1574c:	str	r0, [r7]
   15750:	ldr	r0, [r7, #4]
   15754:	ldr	r2, [sp, #36]	; 0x24
   15758:	mov	r1, #0
   1575c:	sub	r2, r2, r0
   15760:	add	r0, r4, r0, lsl #3
   15764:	lsl	r2, r2, #3
   15768:	bl	10e38 <memset@plt>
   1576c:	ldr	r3, [sp, #40]	; 0x28
   15770:	ldr	r5, [sp, #80]	; 0x50
   15774:	ldr	r6, [sp, #84]	; 0x54
   15778:	ldr	r2, [sp, #36]	; 0x24
   1577c:	str	r2, [r7, #4]
   15780:	ldr	r2, [sp, #44]	; 0x2c
   15784:	ldr	r9, [r4]
   15788:	ldr	r7, [r4, #4]
   1578c:	orr	r2, r2, #1
   15790:	str	r3, [sp]
   15794:	add	r3, sp, #48	; 0x30
   15798:	str	r2, [sp, #28]
   1579c:	str	r2, [sp, #4]
   157a0:	str	r3, [sp, #8]
   157a4:	str	r6, [sp, #16]
   157a8:	str	r5, [sp, #12]
   157ac:	mov	r1, r9
   157b0:	mov	r0, r7
   157b4:	mov	r3, fp
   157b8:	mov	r2, sl
   157bc:	bl	1208c <close@plt+0x11a0>
   157c0:	cmp	r9, r0
   157c4:	bhi	1582c <close@plt+0x4940>
   157c8:	ldr	r3, [pc, #172]	; 1587c <close@plt+0x4990>
   157cc:	add	r5, r0, #1
   157d0:	cmp	r7, r3
   157d4:	str	r5, [r4]
   157d8:	beq	157e4 <close@plt+0x48f8>
   157dc:	mov	r0, r7
   157e0:	bl	11cd0 <close@plt+0xde4>
   157e4:	mov	r0, r5
   157e8:	bl	16968 <close@plt+0x5a7c>
   157ec:	add	lr, sp, #48	; 0x30
   157f0:	ldr	ip, [sp, #84]	; 0x54
   157f4:	mov	r1, r5
   157f8:	ldr	r5, [sp, #28]
   157fc:	mov	r3, fp
   15800:	mov	r2, sl
   15804:	str	r0, [r4, #4]
   15808:	ldr	r4, [sp, #80]	; 0x50
   1580c:	str	lr, [sp, #8]
   15810:	ldr	lr, [sp, #40]	; 0x28
   15814:	str	r5, [sp, #4]
   15818:	str	ip, [sp, #16]
   1581c:	str	r4, [sp, #12]
   15820:	str	lr, [sp]
   15824:	mov	r7, r0
   15828:	bl	1208c <close@plt+0x11a0>
   1582c:	ldr	r3, [sp, #24]
   15830:	mov	r0, r7
   15834:	str	r3, [r8]
   15838:	add	sp, sp, #92	; 0x5c
   1583c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15840:	mov	r3, #8
   15844:	str	r3, [sp]
   15848:	add	r1, sp, #36	; 0x24
   1584c:	rsb	r2, r2, #1
   15850:	ldr	r0, [sp, #28]
   15854:	mvn	r3, #-2147483648	; 0x80000000
   15858:	bl	16b84 <close@plt+0x5c98>
   1585c:	mov	r4, r0
   15860:	ldm	r5, {r0, r1}
   15864:	str	r4, [r7]
   15868:	stm	r4, {r0, r1}
   1586c:	b	15750 <close@plt+0x4864>
   15870:	bl	10ee0 <abort@plt>
   15874:	andeq	r9, r2, r8, ror #2
   15878:	strdeq	r9, [r2], -r4
   1587c:	muleq	r2, r8, r1
   15880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15884:	sub	sp, sp, #52	; 0x34
   15888:	mov	r5, r0
   1588c:	mov	sl, r1
   15890:	mov	fp, r2
   15894:	bl	10e20 <__errno_location@plt>
   15898:	ldr	r4, [pc, #404]	; 15a34 <close@plt+0x4b48>
   1589c:	cmn	r5, #-2147483647	; 0x80000001
   158a0:	ldr	r6, [r4]
   158a4:	mov	r8, r0
   158a8:	movne	r0, #0
   158ac:	moveq	r0, #1
   158b0:	ldr	r3, [r8]
   158b4:	orrs	r0, r0, r5, lsr #31
   158b8:	str	r3, [sp, #28]
   158bc:	bne	15a30 <close@plt+0x4b44>
   158c0:	ldr	r2, [r4, #4]
   158c4:	cmp	r5, r2
   158c8:	blt	15928 <close@plt+0x4a3c>
   158cc:	add	r7, r4, #8
   158d0:	cmp	r6, r7
   158d4:	str	r2, [sp, #44]	; 0x2c
   158d8:	beq	15a00 <close@plt+0x4b14>
   158dc:	mov	r3, #8
   158e0:	sub	r2, r5, r2
   158e4:	mov	r0, r6
   158e8:	str	r3, [sp]
   158ec:	add	r2, r2, #1
   158f0:	mvn	r3, #-2147483648	; 0x80000000
   158f4:	add	r1, sp, #44	; 0x2c
   158f8:	bl	16b84 <close@plt+0x5c98>
   158fc:	mov	r6, r0
   15900:	str	r0, [r4]
   15904:	ldr	r0, [r4, #4]
   15908:	ldr	r2, [sp, #44]	; 0x2c
   1590c:	mov	r1, #0
   15910:	sub	r2, r2, r0
   15914:	add	r0, r6, r0, lsl #3
   15918:	lsl	r2, r2, #3
   1591c:	bl	10e38 <memset@plt>
   15920:	ldr	r3, [sp, #44]	; 0x2c
   15924:	str	r3, [r4, #4]
   15928:	ldr	r2, [r4, #56]	; 0x38
   1592c:	add	r3, r6, r5, lsl #3
   15930:	ldr	r1, [r4, #20]
   15934:	ldr	r7, [r3, #4]
   15938:	ldr	r9, [r6, r5, lsl #3]
   1593c:	ldr	ip, [r4, #60]	; 0x3c
   15940:	str	r3, [sp, #32]
   15944:	ldr	r3, [r4, #16]
   15948:	str	r2, [sp, #12]
   1594c:	ldr	r2, [pc, #228]	; 15a38 <close@plt+0x4b4c>
   15950:	orr	r1, r1, #1
   15954:	str	r1, [sp, #36]	; 0x24
   15958:	str	r1, [sp, #4]
   1595c:	str	r2, [sp, #8]
   15960:	str	r3, [sp]
   15964:	mov	r0, r7
   15968:	mov	r1, r9
   1596c:	str	ip, [sp, #16]
   15970:	mov	r3, fp
   15974:	mov	r2, sl
   15978:	bl	1208c <close@plt+0x11a0>
   1597c:	cmp	r9, r0
   15980:	bhi	159ec <close@plt+0x4b00>
   15984:	ldr	r3, [pc, #176]	; 15a3c <close@plt+0x4b50>
   15988:	add	r9, r0, #1
   1598c:	cmp	r7, r3
   15990:	str	r9, [r6, r5, lsl #3]
   15994:	beq	159a0 <close@plt+0x4ab4>
   15998:	mov	r0, r7
   1599c:	bl	11cd0 <close@plt+0xde4>
   159a0:	mov	r0, r9
   159a4:	bl	16968 <close@plt+0x5a7c>
   159a8:	ldr	ip, [sp, #32]
   159ac:	ldr	lr, [r4, #60]	; 0x3c
   159b0:	ldr	r5, [r4, #56]	; 0x38
   159b4:	mov	r3, fp
   159b8:	mov	r2, sl
   159bc:	mov	r1, r9
   159c0:	str	r0, [ip, #4]
   159c4:	ldr	ip, [r4, #16]
   159c8:	ldr	r4, [pc, #104]	; 15a38 <close@plt+0x4b4c>
   159cc:	str	lr, [sp, #16]
   159d0:	str	r4, [sp, #8]
   159d4:	ldr	r4, [sp, #36]	; 0x24
   159d8:	str	r5, [sp, #12]
   159dc:	str	r4, [sp, #4]
   159e0:	str	ip, [sp]
   159e4:	mov	r7, r0
   159e8:	bl	1208c <close@plt+0x11a0>
   159ec:	ldr	r3, [sp, #28]
   159f0:	mov	r0, r7
   159f4:	str	r3, [r8]
   159f8:	add	sp, sp, #52	; 0x34
   159fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a00:	mov	r3, #8
   15a04:	sub	r2, r5, r2
   15a08:	str	r3, [sp]
   15a0c:	add	r1, sp, #44	; 0x2c
   15a10:	add	r2, r2, #1
   15a14:	mvn	r3, #-2147483648	; 0x80000000
   15a18:	bl	16b84 <close@plt+0x5c98>
   15a1c:	mov	r6, r0
   15a20:	ldm	r7, {r0, r1}
   15a24:	str	r6, [r4]
   15a28:	stm	r6, {r0, r1}
   15a2c:	b	15904 <close@plt+0x4a18>
   15a30:	bl	10ee0 <abort@plt>
   15a34:	strdeq	r9, [r2], -r4
   15a38:	andeq	r9, r2, ip, lsl #2
   15a3c:	muleq	r2, r8, r1
   15a40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a44:	sub	sp, sp, #44	; 0x2c
   15a48:	mov	r9, r0
   15a4c:	mov	sl, r1
   15a50:	bl	10e20 <__errno_location@plt>
   15a54:	ldr	r4, [pc, #360]	; 15bc4 <close@plt+0x4cd8>
   15a58:	ldr	r2, [r4, #4]
   15a5c:	ldr	r5, [r4]
   15a60:	cmp	r2, #0
   15a64:	ldr	r3, [r0]
   15a68:	mov	r7, r0
   15a6c:	str	r3, [sp, #24]
   15a70:	bgt	15acc <close@plt+0x4be0>
   15a74:	add	r6, r4, #8
   15a78:	cmp	r5, r6
   15a7c:	str	r2, [sp, #36]	; 0x24
   15a80:	beq	15b94 <close@plt+0x4ca8>
   15a84:	mov	r3, #8
   15a88:	mov	r0, r5
   15a8c:	str	r3, [sp]
   15a90:	rsb	r2, r2, #1
   15a94:	mvn	r3, #-2147483648	; 0x80000000
   15a98:	add	r1, sp, #36	; 0x24
   15a9c:	bl	16b84 <close@plt+0x5c98>
   15aa0:	mov	r5, r0
   15aa4:	str	r0, [r4]
   15aa8:	ldr	r0, [r4, #4]
   15aac:	ldr	r2, [sp, #36]	; 0x24
   15ab0:	mov	r1, #0
   15ab4:	sub	r2, r2, r0
   15ab8:	add	r0, r5, r0, lsl #3
   15abc:	lsl	r2, r2, #3
   15ac0:	bl	10e38 <memset@plt>
   15ac4:	ldr	r3, [sp, #36]	; 0x24
   15ac8:	str	r3, [r4, #4]
   15acc:	ldr	r1, [r4, #20]
   15ad0:	ldr	r8, [r5]
   15ad4:	ldr	r6, [r5, #4]
   15ad8:	ldr	r2, [r4, #56]	; 0x38
   15adc:	ldr	r3, [r4, #16]
   15ae0:	ldr	ip, [r4, #60]	; 0x3c
   15ae4:	ldr	fp, [pc, #220]	; 15bc8 <close@plt+0x4cdc>
   15ae8:	orr	r1, r1, #1
   15aec:	str	r1, [sp, #28]
   15af0:	str	r1, [sp, #4]
   15af4:	str	r2, [sp, #12]
   15af8:	str	r3, [sp]
   15afc:	mov	r1, r8
   15b00:	mov	r0, r6
   15b04:	str	ip, [sp, #16]
   15b08:	str	fp, [sp, #8]
   15b0c:	mov	r3, sl
   15b10:	mov	r2, r9
   15b14:	bl	1208c <close@plt+0x11a0>
   15b18:	cmp	r8, r0
   15b1c:	bhi	15b80 <close@plt+0x4c94>
   15b20:	ldr	r3, [pc, #164]	; 15bcc <close@plt+0x4ce0>
   15b24:	add	r8, r0, #1
   15b28:	cmp	r6, r3
   15b2c:	str	r8, [r5]
   15b30:	beq	15b3c <close@plt+0x4c50>
   15b34:	mov	r0, r6
   15b38:	bl	11cd0 <close@plt+0xde4>
   15b3c:	mov	r0, r8
   15b40:	bl	16968 <close@plt+0x5a7c>
   15b44:	ldr	lr, [r4, #60]	; 0x3c
   15b48:	ldr	ip, [r4, #16]
   15b4c:	mov	r3, sl
   15b50:	mov	r2, r9
   15b54:	mov	r1, r8
   15b58:	str	r0, [r5, #4]
   15b5c:	ldr	r5, [r4, #56]	; 0x38
   15b60:	ldr	r4, [sp, #28]
   15b64:	str	fp, [sp, #8]
   15b68:	str	r4, [sp, #4]
   15b6c:	str	lr, [sp, #16]
   15b70:	str	r5, [sp, #12]
   15b74:	str	ip, [sp]
   15b78:	mov	r6, r0
   15b7c:	bl	1208c <close@plt+0x11a0>
   15b80:	ldr	r3, [sp, #24]
   15b84:	mov	r0, r6
   15b88:	str	r3, [r7]
   15b8c:	add	sp, sp, #44	; 0x2c
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b94:	mov	r3, #8
   15b98:	str	r3, [sp]
   15b9c:	add	r1, sp, #36	; 0x24
   15ba0:	rsb	r2, r2, #1
   15ba4:	mvn	r3, #-2147483648	; 0x80000000
   15ba8:	mov	r0, #0
   15bac:	bl	16b84 <close@plt+0x5c98>
   15bb0:	mov	r5, r0
   15bb4:	ldm	r6, {r0, r1}
   15bb8:	str	r5, [r4]
   15bbc:	stm	r5, {r0, r1}
   15bc0:	b	15aa8 <close@plt+0x4bbc>
   15bc4:	strdeq	r9, [r2], -r4
   15bc8:	andeq	r9, r2, ip, lsl #2
   15bcc:	muleq	r2, r8, r1
   15bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bd4:	sub	sp, sp, #44	; 0x2c
   15bd8:	mov	r5, r0
   15bdc:	mov	sl, r1
   15be0:	bl	10e20 <__errno_location@plt>
   15be4:	ldr	r4, [pc, #396]	; 15d78 <close@plt+0x4e8c>
   15be8:	cmn	r5, #-2147483647	; 0x80000001
   15bec:	ldr	r6, [r4]
   15bf0:	mov	r8, r0
   15bf4:	movne	r0, #0
   15bf8:	moveq	r0, #1
   15bfc:	ldr	r3, [r8]
   15c00:	orrs	r0, r0, r5, lsr #31
   15c04:	str	r3, [sp, #24]
   15c08:	bne	15d74 <close@plt+0x4e88>
   15c0c:	ldr	r2, [r4, #4]
   15c10:	cmp	r5, r2
   15c14:	blt	15c74 <close@plt+0x4d88>
   15c18:	add	r7, r4, #8
   15c1c:	cmp	r6, r7
   15c20:	str	r2, [sp, #36]	; 0x24
   15c24:	beq	15d44 <close@plt+0x4e58>
   15c28:	mov	r3, #8
   15c2c:	sub	r2, r5, r2
   15c30:	mov	r0, r6
   15c34:	str	r3, [sp]
   15c38:	add	r2, r2, #1
   15c3c:	mvn	r3, #-2147483648	; 0x80000000
   15c40:	add	r1, sp, #36	; 0x24
   15c44:	bl	16b84 <close@plt+0x5c98>
   15c48:	mov	r6, r0
   15c4c:	str	r0, [r4]
   15c50:	ldr	r0, [r4, #4]
   15c54:	ldr	r2, [sp, #36]	; 0x24
   15c58:	mov	r1, #0
   15c5c:	sub	r2, r2, r0
   15c60:	add	r0, r6, r0, lsl #3
   15c64:	lsl	r2, r2, #3
   15c68:	bl	10e38 <memset@plt>
   15c6c:	ldr	r3, [sp, #36]	; 0x24
   15c70:	str	r3, [r4, #4]
   15c74:	ldr	r2, [r4, #56]	; 0x38
   15c78:	add	fp, r6, r5, lsl #3
   15c7c:	ldr	r1, [r4, #20]
   15c80:	ldr	r9, [r6, r5, lsl #3]
   15c84:	ldr	r7, [fp, #4]
   15c88:	ldr	r3, [r4, #16]
   15c8c:	ldr	ip, [r4, #60]	; 0x3c
   15c90:	str	r2, [sp, #12]
   15c94:	ldr	r2, [pc, #224]	; 15d7c <close@plt+0x4e90>
   15c98:	orr	r1, r1, #1
   15c9c:	str	r1, [sp, #28]
   15ca0:	str	r1, [sp, #4]
   15ca4:	str	r2, [sp, #8]
   15ca8:	str	r3, [sp]
   15cac:	mov	r0, r7
   15cb0:	mov	r1, r9
   15cb4:	str	ip, [sp, #16]
   15cb8:	mvn	r3, #0
   15cbc:	mov	r2, sl
   15cc0:	bl	1208c <close@plt+0x11a0>
   15cc4:	cmp	r9, r0
   15cc8:	bhi	15d30 <close@plt+0x4e44>
   15ccc:	ldr	r3, [pc, #172]	; 15d80 <close@plt+0x4e94>
   15cd0:	add	r9, r0, #1
   15cd4:	cmp	r7, r3
   15cd8:	str	r9, [r6, r5, lsl #3]
   15cdc:	beq	15ce8 <close@plt+0x4dfc>
   15ce0:	mov	r0, r7
   15ce4:	bl	11cd0 <close@plt+0xde4>
   15ce8:	mov	r0, r9
   15cec:	bl	16968 <close@plt+0x5a7c>
   15cf0:	ldr	ip, [r4, #60]	; 0x3c
   15cf4:	ldr	r3, [r4, #16]
   15cf8:	ldr	lr, [r4, #56]	; 0x38
   15cfc:	ldr	r4, [pc, #120]	; 15d7c <close@plt+0x4e90>
   15d00:	mov	r2, sl
   15d04:	mov	r1, r9
   15d08:	str	r0, [fp, #4]
   15d0c:	str	r4, [sp, #8]
   15d10:	ldr	r4, [sp, #28]
   15d14:	str	r3, [sp]
   15d18:	str	r4, [sp, #4]
   15d1c:	str	ip, [sp, #16]
   15d20:	str	lr, [sp, #12]
   15d24:	mvn	r3, #0
   15d28:	mov	r7, r0
   15d2c:	bl	1208c <close@plt+0x11a0>
   15d30:	ldr	r3, [sp, #24]
   15d34:	mov	r0, r7
   15d38:	str	r3, [r8]
   15d3c:	add	sp, sp, #44	; 0x2c
   15d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d44:	mov	r3, #8
   15d48:	sub	r2, r5, r2
   15d4c:	str	r3, [sp]
   15d50:	add	r1, sp, #36	; 0x24
   15d54:	add	r2, r2, #1
   15d58:	mvn	r3, #-2147483648	; 0x80000000
   15d5c:	bl	16b84 <close@plt+0x5c98>
   15d60:	mov	r6, r0
   15d64:	ldm	r7, {r0, r1}
   15d68:	str	r6, [r4]
   15d6c:	stm	r6, {r0, r1}
   15d70:	b	15c50 <close@plt+0x4d64>
   15d74:	bl	10ee0 <abort@plt>
   15d78:	strdeq	r9, [r2], -r4
   15d7c:	andeq	r9, r2, ip, lsl #2
   15d80:	muleq	r2, r8, r1
   15d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d88:	sub	sp, sp, #44	; 0x2c
   15d8c:	mov	sl, r0
   15d90:	bl	10e20 <__errno_location@plt>
   15d94:	ldr	r4, [pc, #348]	; 15ef8 <close@plt+0x500c>
   15d98:	ldr	r2, [r4, #4]
   15d9c:	ldr	r5, [r4]
   15da0:	cmp	r2, #0
   15da4:	ldr	r3, [r0]
   15da8:	mov	r8, r0
   15dac:	str	r3, [sp, #28]
   15db0:	bgt	15e0c <close@plt+0x4f20>
   15db4:	add	r6, r4, #8
   15db8:	cmp	r5, r6
   15dbc:	str	r2, [sp, #36]	; 0x24
   15dc0:	beq	15ec8 <close@plt+0x4fdc>
   15dc4:	mov	r3, #8
   15dc8:	mov	r0, r5
   15dcc:	str	r3, [sp]
   15dd0:	rsb	r2, r2, #1
   15dd4:	mvn	r3, #-2147483648	; 0x80000000
   15dd8:	add	r1, sp, #36	; 0x24
   15ddc:	bl	16b84 <close@plt+0x5c98>
   15de0:	mov	r5, r0
   15de4:	str	r0, [r4]
   15de8:	ldr	r0, [r4, #4]
   15dec:	ldr	r2, [sp, #36]	; 0x24
   15df0:	mov	r1, #0
   15df4:	sub	r2, r2, r0
   15df8:	add	r0, r5, r0, lsl #3
   15dfc:	lsl	r2, r2, #3
   15e00:	bl	10e38 <memset@plt>
   15e04:	ldr	r3, [sp, #36]	; 0x24
   15e08:	str	r3, [r4, #4]
   15e0c:	ldr	r7, [r4, #20]
   15e10:	ldr	r9, [r5]
   15e14:	ldr	r6, [r5, #4]
   15e18:	ldr	r2, [r4, #56]	; 0x38
   15e1c:	ldr	r3, [r4, #16]
   15e20:	ldr	ip, [r4, #60]	; 0x3c
   15e24:	ldr	fp, [pc, #208]	; 15efc <close@plt+0x5010>
   15e28:	orr	r7, r7, #1
   15e2c:	str	r2, [sp, #12]
   15e30:	str	r3, [sp]
   15e34:	str	r7, [sp, #4]
   15e38:	mov	r1, r9
   15e3c:	mov	r0, r6
   15e40:	str	ip, [sp, #16]
   15e44:	str	fp, [sp, #8]
   15e48:	mvn	r3, #0
   15e4c:	mov	r2, sl
   15e50:	bl	1208c <close@plt+0x11a0>
   15e54:	cmp	r9, r0
   15e58:	bhi	15eb4 <close@plt+0x4fc8>
   15e5c:	ldr	r3, [pc, #156]	; 15f00 <close@plt+0x5014>
   15e60:	add	r9, r0, #1
   15e64:	cmp	r6, r3
   15e68:	str	r9, [r5]
   15e6c:	beq	15e78 <close@plt+0x4f8c>
   15e70:	mov	r0, r6
   15e74:	bl	11cd0 <close@plt+0xde4>
   15e78:	mov	r0, r9
   15e7c:	bl	16968 <close@plt+0x5a7c>
   15e80:	ldr	ip, [r4, #60]	; 0x3c
   15e84:	ldr	r3, [r4, #16]
   15e88:	ldr	lr, [r4, #56]	; 0x38
   15e8c:	mov	r2, sl
   15e90:	mov	r1, r9
   15e94:	str	r0, [r5, #4]
   15e98:	str	r3, [sp]
   15e9c:	stmib	sp, {r7, fp}
   15ea0:	str	ip, [sp, #16]
   15ea4:	str	lr, [sp, #12]
   15ea8:	mvn	r3, #0
   15eac:	mov	r6, r0
   15eb0:	bl	1208c <close@plt+0x11a0>
   15eb4:	ldr	r3, [sp, #28]
   15eb8:	mov	r0, r6
   15ebc:	str	r3, [r8]
   15ec0:	add	sp, sp, #44	; 0x2c
   15ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ec8:	mov	r3, #8
   15ecc:	str	r3, [sp]
   15ed0:	add	r1, sp, #36	; 0x24
   15ed4:	rsb	r2, r2, #1
   15ed8:	mvn	r3, #-2147483648	; 0x80000000
   15edc:	mov	r0, #0
   15ee0:	bl	16b84 <close@plt+0x5c98>
   15ee4:	mov	r5, r0
   15ee8:	ldm	r6, {r0, r1}
   15eec:	str	r5, [r4]
   15ef0:	stm	r5, {r0, r1}
   15ef4:	b	15de8 <close@plt+0x4efc>
   15ef8:	strdeq	r9, [r2], -r4
   15efc:	andeq	r9, r2, ip, lsl #2
   15f00:	muleq	r2, r8, r1
   15f04:	push	{r4, r5, r6, lr}
   15f08:	sub	sp, sp, #32
   15f0c:	cmp	r1, #0
   15f10:	mov	r4, r0
   15f14:	ldr	r5, [sp, #48]	; 0x30
   15f18:	ldr	r6, [sp, #52]	; 0x34
   15f1c:	beq	16234 <close@plt+0x5348>
   15f20:	stm	sp, {r2, r3}
   15f24:	mov	r3, r1
   15f28:	ldr	r2, [pc, #808]	; 16258 <close@plt+0x536c>
   15f2c:	mov	r1, #1
   15f30:	bl	10e5c <__fprintf_chk@plt>
   15f34:	mov	r2, #5
   15f38:	ldr	r1, [pc, #796]	; 1625c <close@plt+0x5370>
   15f3c:	mov	r0, #0
   15f40:	bl	10d18 <dcgettext@plt>
   15f44:	ldr	r3, [pc, #788]	; 16260 <close@plt+0x5374>
   15f48:	ldr	r2, [pc, #788]	; 16264 <close@plt+0x5378>
   15f4c:	str	r3, [sp]
   15f50:	mov	r1, #1
   15f54:	mov	r3, r0
   15f58:	mov	r0, r4
   15f5c:	bl	10e5c <__fprintf_chk@plt>
   15f60:	mov	r1, r4
   15f64:	mov	r0, #10
   15f68:	bl	10d0c <fputc_unlocked@plt>
   15f6c:	mov	r2, #5
   15f70:	ldr	r1, [pc, #752]	; 16268 <close@plt+0x537c>
   15f74:	mov	r0, #0
   15f78:	bl	10d18 <dcgettext@plt>
   15f7c:	mov	r1, #1
   15f80:	ldr	r3, [pc, #740]	; 1626c <close@plt+0x5380>
   15f84:	mov	r2, r0
   15f88:	mov	r0, r4
   15f8c:	bl	10e5c <__fprintf_chk@plt>
   15f90:	mov	r1, r4
   15f94:	mov	r0, #10
   15f98:	bl	10d0c <fputc_unlocked@plt>
   15f9c:	cmp	r6, #9
   15fa0:	ldrls	pc, [pc, r6, lsl #2]
   15fa4:	b	1624c <close@plt+0x5360>
   15fa8:	andeq	r6, r1, ip, lsr #32
   15fac:	andeq	r6, r1, r4, lsr r0
   15fb0:	andeq	r6, r1, r0, rrx
   15fb4:	muleq	r1, r4, r0
   15fb8:	ldrdeq	r6, [r1], -r0
   15fbc:	andeq	r6, r1, ip, lsl #2
   15fc0:	andeq	r6, r1, r8, asr #2
   15fc4:	andeq	r6, r1, ip, lsl #3
   15fc8:	ldrdeq	r6, [r1], -ip
   15fcc:	ldrdeq	r5, [r1], -r0
   15fd0:	ldr	r1, [pc, #664]	; 16270 <close@plt+0x5384>
   15fd4:	mov	r2, #5
   15fd8:	mov	r0, #0
   15fdc:	bl	10d18 <dcgettext@plt>
   15fe0:	ldr	ip, [r5, #32]
   15fe4:	ldr	r1, [r5, #28]
   15fe8:	ldr	r2, [r5, #24]
   15fec:	ldr	r3, [r5]
   15ff0:	ldr	r6, [r5, #20]
   15ff4:	str	ip, [sp, #28]
   15ff8:	ldr	lr, [r5, #16]
   15ffc:	str	r1, [sp, #24]
   16000:	ldr	ip, [r5, #12]
   16004:	str	r2, [sp, #20]
   16008:	ldr	r1, [r5, #8]
   1600c:	ldr	r2, [r5, #4]
   16010:	str	r6, [sp, #16]
   16014:	stmib	sp, {r1, ip, lr}
   16018:	mov	r1, #1
   1601c:	str	r2, [sp]
   16020:	mov	r2, r0
   16024:	mov	r0, r4
   16028:	bl	10e5c <__fprintf_chk@plt>
   1602c:	add	sp, sp, #32
   16030:	pop	{r4, r5, r6, pc}
   16034:	mov	r2, #5
   16038:	ldr	r1, [pc, #564]	; 16274 <close@plt+0x5388>
   1603c:	mov	r0, #0
   16040:	bl	10d18 <dcgettext@plt>
   16044:	ldr	r3, [r5]
   16048:	mov	r1, #1
   1604c:	mov	r2, r0
   16050:	mov	r0, r4
   16054:	add	sp, sp, #32
   16058:	pop	{r4, r5, r6, lr}
   1605c:	b	10e5c <__fprintf_chk@plt>
   16060:	mov	r2, #5
   16064:	ldr	r1, [pc, #524]	; 16278 <close@plt+0x538c>
   16068:	mov	r0, #0
   1606c:	bl	10d18 <dcgettext@plt>
   16070:	ldr	r2, [r5, #4]
   16074:	ldr	r3, [r5]
   16078:	mov	r1, #1
   1607c:	str	r2, [sp, #48]	; 0x30
   16080:	mov	r2, r0
   16084:	mov	r0, r4
   16088:	add	sp, sp, #32
   1608c:	pop	{r4, r5, r6, lr}
   16090:	b	10e5c <__fprintf_chk@plt>
   16094:	mov	r2, #5
   16098:	ldr	r1, [pc, #476]	; 1627c <close@plt+0x5390>
   1609c:	mov	r0, #0
   160a0:	bl	10d18 <dcgettext@plt>
   160a4:	ldr	r1, [r5, #8]
   160a8:	ldr	r2, [r5, #4]
   160ac:	ldr	r3, [r5]
   160b0:	str	r1, [sp, #52]	; 0x34
   160b4:	str	r2, [sp, #48]	; 0x30
   160b8:	mov	r1, #1
   160bc:	mov	r2, r0
   160c0:	mov	r0, r4
   160c4:	add	sp, sp, #32
   160c8:	pop	{r4, r5, r6, lr}
   160cc:	b	10e5c <__fprintf_chk@plt>
   160d0:	mov	r2, #5
   160d4:	ldr	r1, [pc, #420]	; 16280 <close@plt+0x5394>
   160d8:	mov	r0, #0
   160dc:	bl	10d18 <dcgettext@plt>
   160e0:	ldr	r1, [r5, #8]
   160e4:	ldr	ip, [r5, #12]
   160e8:	ldr	r2, [r5, #4]
   160ec:	ldr	r3, [r5]
   160f0:	stmib	sp, {r1, ip}
   160f4:	str	r2, [sp]
   160f8:	mov	r1, #1
   160fc:	mov	r2, r0
   16100:	mov	r0, r4
   16104:	bl	10e5c <__fprintf_chk@plt>
   16108:	b	1602c <close@plt+0x5140>
   1610c:	mov	r2, #5
   16110:	ldr	r1, [pc, #364]	; 16284 <close@plt+0x5398>
   16114:	mov	r0, #0
   16118:	bl	10d18 <dcgettext@plt>
   1611c:	add	r1, r5, #8
   16120:	ldr	r2, [r5, #4]
   16124:	ldm	r1, {r1, ip, lr}
   16128:	ldr	r3, [r5]
   1612c:	str	r2, [sp]
   16130:	stmib	sp, {r1, ip, lr}
   16134:	mov	r1, #1
   16138:	mov	r2, r0
   1613c:	mov	r0, r4
   16140:	bl	10e5c <__fprintf_chk@plt>
   16144:	b	1602c <close@plt+0x5140>
   16148:	mov	r2, #5
   1614c:	ldr	r1, [pc, #308]	; 16288 <close@plt+0x539c>
   16150:	mov	r0, #0
   16154:	bl	10d18 <dcgettext@plt>
   16158:	add	r1, r5, #8
   1615c:	ldr	r2, [r5, #4]
   16160:	ldm	r1, {r1, ip, lr}
   16164:	ldr	r6, [r5, #20]
   16168:	ldr	r3, [r5]
   1616c:	stmib	sp, {r1, ip, lr}
   16170:	mov	r1, #1
   16174:	str	r2, [sp]
   16178:	str	r6, [sp, #16]
   1617c:	mov	r2, r0
   16180:	mov	r0, r4
   16184:	bl	10e5c <__fprintf_chk@plt>
   16188:	b	1602c <close@plt+0x5140>
   1618c:	mov	r2, #5
   16190:	ldr	r1, [pc, #244]	; 1628c <close@plt+0x53a0>
   16194:	mov	r0, #0
   16198:	bl	10d18 <dcgettext@plt>
   1619c:	ldr	r2, [r5, #24]
   161a0:	ldr	r3, [r5]
   161a4:	ldr	r6, [r5, #20]
   161a8:	ldr	lr, [r5, #16]
   161ac:	ldr	ip, [r5, #12]
   161b0:	str	r2, [sp, #20]
   161b4:	ldr	r1, [r5, #8]
   161b8:	ldr	r2, [r5, #4]
   161bc:	str	r6, [sp, #16]
   161c0:	stmib	sp, {r1, ip, lr}
   161c4:	mov	r1, #1
   161c8:	str	r2, [sp]
   161cc:	mov	r2, r0
   161d0:	mov	r0, r4
   161d4:	bl	10e5c <__fprintf_chk@plt>
   161d8:	b	1602c <close@plt+0x5140>
   161dc:	mov	r2, #5
   161e0:	ldr	r1, [pc, #168]	; 16290 <close@plt+0x53a4>
   161e4:	mov	r0, #0
   161e8:	bl	10d18 <dcgettext@plt>
   161ec:	ldr	r1, [r5, #28]
   161f0:	ldr	r2, [r5, #24]
   161f4:	ldr	r3, [r5]
   161f8:	ldr	r6, [r5, #20]
   161fc:	ldr	lr, [r5, #16]
   16200:	str	r1, [sp, #24]
   16204:	ldr	ip, [r5, #12]
   16208:	str	r2, [sp, #20]
   1620c:	ldr	r1, [r5, #8]
   16210:	ldr	r2, [r5, #4]
   16214:	str	r6, [sp, #16]
   16218:	stmib	sp, {r1, ip, lr}
   1621c:	mov	r1, #1
   16220:	str	r2, [sp]
   16224:	mov	r2, r0
   16228:	mov	r0, r4
   1622c:	bl	10e5c <__fprintf_chk@plt>
   16230:	b	1602c <close@plt+0x5140>
   16234:	str	r3, [sp]
   16238:	mov	r1, #1
   1623c:	mov	r3, r2
   16240:	ldr	r2, [pc, #76]	; 16294 <close@plt+0x53a8>
   16244:	bl	10e5c <__fprintf_chk@plt>
   16248:	b	15f34 <close@plt+0x5048>
   1624c:	mov	r2, #5
   16250:	ldr	r1, [pc, #64]	; 16298 <close@plt+0x53ac>
   16254:	b	15fd8 <close@plt+0x50ec>
   16258:	andeq	r8, r1, r0, lsl #3
   1625c:	muleq	r1, r4, r1
   16260:	andeq	r0, r0, r6, ror #15
   16264:	andeq	r8, r1, ip, ror #8
   16268:	muleq	r1, r8, r1
   1626c:	andeq	r8, r1, r4, asr #4
   16270:	andeq	r8, r1, r4, ror r3
   16274:	andeq	r8, r1, r8, ror #4
   16278:	andeq	r8, r1, r8, ror r2
   1627c:	muleq	r1, r0, r2
   16280:	andeq	r8, r1, ip, lsr #5
   16284:	andeq	r8, r1, ip, asr #5
   16288:	strdeq	r8, [r1], -r0
   1628c:	andeq	r8, r1, r8, lsl r3
   16290:	andeq	r8, r1, r4, asr #6
   16294:	andeq	r8, r1, ip, lsl #3
   16298:	andeq	r8, r1, r8, lsr #7
   1629c:	push	{r4, r5, lr}
   162a0:	sub	sp, sp, #12
   162a4:	ldr	r5, [sp, #24]
   162a8:	ldr	ip, [r5]
   162ac:	cmp	ip, #0
   162b0:	beq	162cc <close@plt+0x53e0>
   162b4:	mov	lr, r5
   162b8:	mov	ip, #0
   162bc:	ldr	r4, [lr, #4]!
   162c0:	add	ip, ip, #1
   162c4:	cmp	r4, #0
   162c8:	bne	162bc <close@plt+0x53d0>
   162cc:	stm	sp, {r5, ip}
   162d0:	bl	15f04 <close@plt+0x5018>
   162d4:	add	sp, sp, #12
   162d8:	pop	{r4, r5, pc}
   162dc:	push	{r4, r5, lr}
   162e0:	sub	sp, sp, #76	; 0x4c
   162e4:	mov	r5, r0
   162e8:	ldr	ip, [sp, #88]	; 0x58
   162ec:	ldr	r0, [ip]
   162f0:	cmp	r0, #0
   162f4:	str	r0, [sp, #32]
   162f8:	beq	166cc <close@plt+0x57e0>
   162fc:	ldr	r0, [ip, #4]
   16300:	cmp	r0, #0
   16304:	str	r0, [sp, #36]	; 0x24
   16308:	beq	166d4 <close@plt+0x57e8>
   1630c:	ldr	r0, [ip, #8]
   16310:	cmp	r0, #0
   16314:	str	r0, [sp, #40]	; 0x28
   16318:	beq	166dc <close@plt+0x57f0>
   1631c:	ldr	r0, [ip, #12]
   16320:	cmp	r0, #0
   16324:	str	r0, [sp, #44]	; 0x2c
   16328:	beq	166e4 <close@plt+0x57f8>
   1632c:	ldr	r0, [ip, #16]
   16330:	cmp	r0, #0
   16334:	str	r0, [sp, #48]	; 0x30
   16338:	beq	166ec <close@plt+0x5800>
   1633c:	ldr	r0, [ip, #20]
   16340:	cmp	r0, #0
   16344:	str	r0, [sp, #52]	; 0x34
   16348:	beq	166f4 <close@plt+0x5808>
   1634c:	ldr	r0, [ip, #24]
   16350:	cmp	r0, #0
   16354:	str	r0, [sp, #56]	; 0x38
   16358:	beq	166fc <close@plt+0x5810>
   1635c:	ldr	r0, [ip, #28]
   16360:	cmp	r0, #0
   16364:	str	r0, [sp, #60]	; 0x3c
   16368:	beq	16704 <close@plt+0x5818>
   1636c:	ldr	r0, [ip, #32]
   16370:	cmp	r0, #0
   16374:	str	r0, [sp, #64]	; 0x40
   16378:	beq	1670c <close@plt+0x5820>
   1637c:	ldr	r0, [ip, #36]	; 0x24
   16380:	cmp	r0, #0
   16384:	movne	r4, #10
   16388:	moveq	r4, #9
   1638c:	cmp	r1, #0
   16390:	beq	166a4 <close@plt+0x57b8>
   16394:	stm	sp, {r2, r3}
   16398:	mov	r0, r5
   1639c:	mov	r3, r1
   163a0:	ldr	r2, [pc, #876]	; 16714 <close@plt+0x5828>
   163a4:	mov	r1, #1
   163a8:	bl	10e5c <__fprintf_chk@plt>
   163ac:	mov	r2, #5
   163b0:	ldr	r1, [pc, #864]	; 16718 <close@plt+0x582c>
   163b4:	mov	r0, #0
   163b8:	bl	10d18 <dcgettext@plt>
   163bc:	ldr	r3, [pc, #856]	; 1671c <close@plt+0x5830>
   163c0:	ldr	r2, [pc, #856]	; 16720 <close@plt+0x5834>
   163c4:	str	r3, [sp]
   163c8:	mov	r1, #1
   163cc:	mov	r3, r0
   163d0:	mov	r0, r5
   163d4:	bl	10e5c <__fprintf_chk@plt>
   163d8:	mov	r1, r5
   163dc:	mov	r0, #10
   163e0:	bl	10d0c <fputc_unlocked@plt>
   163e4:	mov	r2, #5
   163e8:	ldr	r1, [pc, #820]	; 16724 <close@plt+0x5838>
   163ec:	mov	r0, #0
   163f0:	bl	10d18 <dcgettext@plt>
   163f4:	mov	r1, #1
   163f8:	ldr	r3, [pc, #808]	; 16728 <close@plt+0x583c>
   163fc:	mov	r2, r0
   16400:	mov	r0, r5
   16404:	bl	10e5c <__fprintf_chk@plt>
   16408:	mov	r1, r5
   1640c:	mov	r0, #10
   16410:	bl	10d0c <fputc_unlocked@plt>
   16414:	cmp	r4, #9
   16418:	ldrls	pc, [pc, r4, lsl #2]
   1641c:	b	166c0 <close@plt+0x57d4>
   16420:	andeq	r6, r1, r4, lsr #9
   16424:	andeq	r6, r1, ip, lsr #9
   16428:	ldrdeq	r6, [r1], -r8
   1642c:	andeq	r6, r1, ip, lsl #10
   16430:	andeq	r6, r1, r4, asr #10
   16434:	andeq	r6, r1, r0, lsl #11
   16438:			; <UNDEFINED> instruction: 0x000165bc
   1643c:	andeq	r6, r1, r0, lsl #12
   16440:	andeq	r6, r1, ip, asr #12
   16444:	andeq	r6, r1, r8, asr #8
   16448:	ldr	r1, [pc, #732]	; 1672c <close@plt+0x5840>
   1644c:	mov	r2, #5
   16450:	mov	r0, #0
   16454:	bl	10d18 <dcgettext@plt>
   16458:	ldr	ip, [sp, #64]	; 0x40
   1645c:	ldr	r1, [sp, #60]	; 0x3c
   16460:	ldr	r2, [sp, #56]	; 0x38
   16464:	ldr	lr, [sp, #48]	; 0x30
   16468:	str	ip, [sp, #28]
   1646c:	str	r1, [sp, #24]
   16470:	ldr	ip, [sp, #44]	; 0x2c
   16474:	ldr	r1, [sp, #40]	; 0x28
   16478:	ldr	r4, [sp, #52]	; 0x34
   1647c:	str	r2, [sp, #20]
   16480:	ldr	r2, [sp, #36]	; 0x24
   16484:	stmib	sp, {r1, ip, lr}
   16488:	mov	r1, #1
   1648c:	str	r2, [sp]
   16490:	ldr	r3, [sp, #32]
   16494:	str	r4, [sp, #16]
   16498:	mov	r2, r0
   1649c:	mov	r0, r5
   164a0:	bl	10e5c <__fprintf_chk@plt>
   164a4:	add	sp, sp, #76	; 0x4c
   164a8:	pop	{r4, r5, pc}
   164ac:	mov	r2, #5
   164b0:	ldr	r1, [pc, #632]	; 16730 <close@plt+0x5844>
   164b4:	mov	r0, #0
   164b8:	bl	10d18 <dcgettext@plt>
   164bc:	ldr	r3, [sp, #32]
   164c0:	mov	r1, #1
   164c4:	mov	r2, r0
   164c8:	mov	r0, r5
   164cc:	add	sp, sp, #76	; 0x4c
   164d0:	pop	{r4, r5, lr}
   164d4:	b	10e5c <__fprintf_chk@plt>
   164d8:	mov	r2, #5
   164dc:	ldr	r1, [pc, #592]	; 16734 <close@plt+0x5848>
   164e0:	mov	r0, #0
   164e4:	bl	10d18 <dcgettext@plt>
   164e8:	ldr	r2, [sp, #36]	; 0x24
   164ec:	ldr	r3, [sp, #32]
   164f0:	str	r2, [sp, #88]	; 0x58
   164f4:	mov	r1, #1
   164f8:	mov	r2, r0
   164fc:	mov	r0, r5
   16500:	add	sp, sp, #76	; 0x4c
   16504:	pop	{r4, r5, lr}
   16508:	b	10e5c <__fprintf_chk@plt>
   1650c:	mov	r2, #5
   16510:	ldr	r1, [pc, #544]	; 16738 <close@plt+0x584c>
   16514:	mov	r0, #0
   16518:	bl	10d18 <dcgettext@plt>
   1651c:	ldr	r1, [sp, #40]	; 0x28
   16520:	ldr	r2, [sp, #36]	; 0x24
   16524:	str	r1, [sp, #4]
   16528:	str	r2, [sp]
   1652c:	ldr	r3, [sp, #32]
   16530:	mov	r1, #1
   16534:	mov	r2, r0
   16538:	mov	r0, r5
   1653c:	bl	10e5c <__fprintf_chk@plt>
   16540:	b	164a4 <close@plt+0x55b8>
   16544:	mov	r2, #5
   16548:	ldr	r1, [pc, #492]	; 1673c <close@plt+0x5850>
   1654c:	mov	r0, #0
   16550:	bl	10d18 <dcgettext@plt>
   16554:	ldr	r1, [sp, #40]	; 0x28
   16558:	ldr	ip, [sp, #44]	; 0x2c
   1655c:	ldr	r2, [sp, #36]	; 0x24
   16560:	ldr	r3, [sp, #32]
   16564:	stmib	sp, {r1, ip}
   16568:	str	r2, [sp]
   1656c:	mov	r1, #1
   16570:	mov	r2, r0
   16574:	mov	r0, r5
   16578:	bl	10e5c <__fprintf_chk@plt>
   1657c:	b	164a4 <close@plt+0x55b8>
   16580:	mov	r2, #5
   16584:	ldr	r1, [pc, #436]	; 16740 <close@plt+0x5854>
   16588:	mov	r0, #0
   1658c:	bl	10d18 <dcgettext@plt>
   16590:	add	r1, sp, #40	; 0x28
   16594:	ldr	r2, [sp, #36]	; 0x24
   16598:	ldm	r1, {r1, ip, lr}
   1659c:	ldr	r3, [sp, #32]
   165a0:	str	r2, [sp]
   165a4:	stmib	sp, {r1, ip, lr}
   165a8:	mov	r1, #1
   165ac:	mov	r2, r0
   165b0:	mov	r0, r5
   165b4:	bl	10e5c <__fprintf_chk@plt>
   165b8:	b	164a4 <close@plt+0x55b8>
   165bc:	mov	r2, #5
   165c0:	ldr	r1, [pc, #380]	; 16744 <close@plt+0x5858>
   165c4:	mov	r0, #0
   165c8:	bl	10d18 <dcgettext@plt>
   165cc:	add	r1, sp, #40	; 0x28
   165d0:	ldr	r2, [sp, #36]	; 0x24
   165d4:	ldm	r1, {r1, ip, lr}
   165d8:	ldr	r4, [sp, #52]	; 0x34
   165dc:	str	r2, [sp]
   165e0:	stmib	sp, {r1, ip, lr}
   165e4:	mov	r1, #1
   165e8:	ldr	r3, [sp, #32]
   165ec:	str	r4, [sp, #16]
   165f0:	mov	r2, r0
   165f4:	mov	r0, r5
   165f8:	bl	10e5c <__fprintf_chk@plt>
   165fc:	b	164a4 <close@plt+0x55b8>
   16600:	mov	r2, #5
   16604:	ldr	r1, [pc, #316]	; 16748 <close@plt+0x585c>
   16608:	mov	r0, #0
   1660c:	bl	10d18 <dcgettext@plt>
   16610:	add	r1, sp, #40	; 0x28
   16614:	ldr	r2, [sp, #56]	; 0x38
   16618:	ldm	r1, {r1, ip, lr}
   1661c:	ldr	r4, [sp, #52]	; 0x34
   16620:	str	r2, [sp, #20]
   16624:	ldr	r2, [sp, #36]	; 0x24
   16628:	stmib	sp, {r1, ip, lr}
   1662c:	mov	r1, #1
   16630:	str	r2, [sp]
   16634:	ldr	r3, [sp, #32]
   16638:	str	r4, [sp, #16]
   1663c:	mov	r2, r0
   16640:	mov	r0, r5
   16644:	bl	10e5c <__fprintf_chk@plt>
   16648:	b	164a4 <close@plt+0x55b8>
   1664c:	mov	r2, #5
   16650:	ldr	r1, [pc, #244]	; 1674c <close@plt+0x5860>
   16654:	mov	r0, #0
   16658:	bl	10d18 <dcgettext@plt>
   1665c:	ldr	r1, [sp, #60]	; 0x3c
   16660:	ldr	r2, [sp, #56]	; 0x38
   16664:	ldr	lr, [sp, #48]	; 0x30
   16668:	ldr	ip, [sp, #44]	; 0x2c
   1666c:	str	r1, [sp, #24]
   16670:	ldr	r1, [sp, #40]	; 0x28
   16674:	ldr	r4, [sp, #52]	; 0x34
   16678:	str	r2, [sp, #20]
   1667c:	ldr	r2, [sp, #36]	; 0x24
   16680:	stmib	sp, {r1, ip, lr}
   16684:	mov	r1, #1
   16688:	str	r2, [sp]
   1668c:	ldr	r3, [sp, #32]
   16690:	str	r4, [sp, #16]
   16694:	mov	r2, r0
   16698:	mov	r0, r5
   1669c:	bl	10e5c <__fprintf_chk@plt>
   166a0:	b	164a4 <close@plt+0x55b8>
   166a4:	str	r3, [sp]
   166a8:	mov	r1, #1
   166ac:	mov	r3, r2
   166b0:	mov	r0, r5
   166b4:	ldr	r2, [pc, #148]	; 16750 <close@plt+0x5864>
   166b8:	bl	10e5c <__fprintf_chk@plt>
   166bc:	b	163ac <close@plt+0x54c0>
   166c0:	mov	r2, #5
   166c4:	ldr	r1, [pc, #136]	; 16754 <close@plt+0x5868>
   166c8:	b	16450 <close@plt+0x5564>
   166cc:	mov	r4, r0
   166d0:	b	1638c <close@plt+0x54a0>
   166d4:	mov	r4, #1
   166d8:	b	1638c <close@plt+0x54a0>
   166dc:	mov	r4, #2
   166e0:	b	1638c <close@plt+0x54a0>
   166e4:	mov	r4, #3
   166e8:	b	1638c <close@plt+0x54a0>
   166ec:	mov	r4, #4
   166f0:	b	1638c <close@plt+0x54a0>
   166f4:	mov	r4, #5
   166f8:	b	1638c <close@plt+0x54a0>
   166fc:	mov	r4, #6
   16700:	b	1638c <close@plt+0x54a0>
   16704:	mov	r4, #7
   16708:	b	1638c <close@plt+0x54a0>
   1670c:	mov	r4, #8
   16710:	b	1638c <close@plt+0x54a0>
   16714:	andeq	r8, r1, r0, lsl #3
   16718:	muleq	r1, r4, r1
   1671c:	andeq	r0, r0, r6, ror #15
   16720:	andeq	r8, r1, ip, ror #8
   16724:	muleq	r1, r8, r1
   16728:	andeq	r8, r1, r4, asr #4
   1672c:	andeq	r8, r1, r4, ror r3
   16730:	andeq	r8, r1, r8, ror #4
   16734:	andeq	r8, r1, r8, ror r2
   16738:	muleq	r1, r0, r2
   1673c:	andeq	r8, r1, ip, lsr #5
   16740:	andeq	r8, r1, ip, asr #5
   16744:	strdeq	r8, [r1], -r0
   16748:	andeq	r8, r1, r8, lsl r3
   1674c:	andeq	r8, r1, r4, asr #6
   16750:	andeq	r8, r1, ip, lsl #3
   16754:	andeq	r8, r1, r8, lsr #7
   16758:	push	{r3}		; (str r3, [sp, #-4]!)
   1675c:	push	{lr}		; (str lr, [sp, #-4]!)
   16760:	sub	sp, sp, #56	; 0x38
   16764:	add	r3, sp, #64	; 0x40
   16768:	ldr	ip, [sp, #64]	; 0x40
   1676c:	str	r3, [sp, #12]
   16770:	cmp	ip, #0
   16774:	str	ip, [sp, #16]
   16778:	beq	16810 <close@plt+0x5924>
   1677c:	ldr	ip, [sp, #68]	; 0x44
   16780:	cmp	ip, #0
   16784:	str	ip, [sp, #20]
   16788:	beq	16830 <close@plt+0x5944>
   1678c:	ldr	ip, [sp, #72]	; 0x48
   16790:	cmp	ip, #0
   16794:	str	ip, [sp, #24]
   16798:	beq	16838 <close@plt+0x594c>
   1679c:	ldr	ip, [sp, #76]	; 0x4c
   167a0:	cmp	ip, #0
   167a4:	str	ip, [sp, #28]
   167a8:	beq	16840 <close@plt+0x5954>
   167ac:	ldr	ip, [sp, #80]	; 0x50
   167b0:	cmp	ip, #0
   167b4:	str	ip, [sp, #32]
   167b8:	beq	16848 <close@plt+0x595c>
   167bc:	ldr	ip, [sp, #84]	; 0x54
   167c0:	cmp	ip, #0
   167c4:	str	ip, [sp, #36]	; 0x24
   167c8:	beq	16850 <close@plt+0x5964>
   167cc:	ldr	ip, [sp, #88]	; 0x58
   167d0:	cmp	ip, #0
   167d4:	str	ip, [sp, #40]	; 0x28
   167d8:	beq	16858 <close@plt+0x596c>
   167dc:	ldr	ip, [sp, #92]	; 0x5c
   167e0:	cmp	ip, #0
   167e4:	str	ip, [sp, #44]	; 0x2c
   167e8:	beq	16860 <close@plt+0x5974>
   167ec:	ldr	ip, [sp, #96]	; 0x60
   167f0:	cmp	ip, #0
   167f4:	str	ip, [sp, #48]	; 0x30
   167f8:	beq	16868 <close@plt+0x597c>
   167fc:	ldr	ip, [sp, #100]	; 0x64
   16800:	cmp	ip, #0
   16804:	str	ip, [sp, #52]	; 0x34
   16808:	movne	ip, #10
   1680c:	moveq	ip, #9
   16810:	add	r3, sp, #16
   16814:	stm	sp, {r3, ip}
   16818:	ldr	r3, [sp, #60]	; 0x3c
   1681c:	bl	15f04 <close@plt+0x5018>
   16820:	add	sp, sp, #56	; 0x38
   16824:	pop	{lr}		; (ldr lr, [sp], #4)
   16828:	add	sp, sp, #4
   1682c:	bx	lr
   16830:	mov	ip, #1
   16834:	b	16810 <close@plt+0x5924>
   16838:	mov	ip, #2
   1683c:	b	16810 <close@plt+0x5924>
   16840:	mov	ip, #3
   16844:	b	16810 <close@plt+0x5924>
   16848:	mov	ip, #4
   1684c:	b	16810 <close@plt+0x5924>
   16850:	mov	ip, #5
   16854:	b	16810 <close@plt+0x5924>
   16858:	mov	ip, #6
   1685c:	b	16810 <close@plt+0x5924>
   16860:	mov	ip, #7
   16864:	b	16810 <close@plt+0x5924>
   16868:	mov	ip, #8
   1686c:	b	16810 <close@plt+0x5924>
   16870:	ldr	r3, [pc, #116]	; 168ec <close@plt+0x5a00>
   16874:	push	{r4, lr}
   16878:	mov	r0, #10
   1687c:	ldr	r1, [r3]
   16880:	bl	10d0c <fputc_unlocked@plt>
   16884:	mov	r2, #5
   16888:	ldr	r1, [pc, #96]	; 168f0 <close@plt+0x5a04>
   1688c:	mov	r0, #0
   16890:	bl	10d18 <dcgettext@plt>
   16894:	ldr	r2, [pc, #88]	; 168f4 <close@plt+0x5a08>
   16898:	mov	r1, r0
   1689c:	mov	r0, #1
   168a0:	bl	10e44 <__printf_chk@plt>
   168a4:	mov	r2, #5
   168a8:	ldr	r1, [pc, #72]	; 168f8 <close@plt+0x5a0c>
   168ac:	mov	r0, #0
   168b0:	bl	10d18 <dcgettext@plt>
   168b4:	ldr	r3, [pc, #64]	; 168fc <close@plt+0x5a10>
   168b8:	ldr	r2, [pc, #64]	; 16900 <close@plt+0x5a14>
   168bc:	mov	r1, r0
   168c0:	mov	r0, #1
   168c4:	bl	10e44 <__printf_chk@plt>
   168c8:	mov	r2, #5
   168cc:	ldr	r1, [pc, #48]	; 16904 <close@plt+0x5a18>
   168d0:	mov	r0, #0
   168d4:	bl	10d18 <dcgettext@plt>
   168d8:	ldr	r2, [pc, #40]	; 16908 <close@plt+0x5a1c>
   168dc:	pop	{r4, lr}
   168e0:	mov	r1, r0
   168e4:	mov	r0, #1
   168e8:	b	10e44 <__printf_chk@plt>
   168ec:	andeq	r9, r2, ip, asr #2
   168f0:	andeq	r8, r1, r4, ror #7
   168f4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   168f8:	andeq	r8, r1, r0, lsl r4
   168fc:	andeq	r7, r1, r0, lsr sp
   16900:	andeq	r7, r1, r8, asr sp
   16904:	andeq	r8, r1, r4, lsr #8
   16908:	andeq	r8, r1, ip, asr #8
   1690c:	push	{r4, r5, r6, lr}
   16910:	mov	r6, r0
   16914:	mov	r5, r1
   16918:	mov	r4, r2
   1691c:	bl	173e8 <close@plt+0x64fc>
   16920:	cmp	r0, #0
   16924:	popne	{r4, r5, r6, pc}
   16928:	cmp	r6, #0
   1692c:	beq	1693c <close@plt+0x5a50>
   16930:	cmp	r5, #0
   16934:	cmpne	r4, #0
   16938:	popeq	{r4, r5, r6, pc}
   1693c:	bl	16f88 <close@plt+0x609c>
   16940:	push	{r4, lr}
   16944:	bl	17010 <close@plt+0x6124>
   16948:	cmp	r0, #0
   1694c:	popne	{r4, pc}
   16950:	bl	16f88 <close@plt+0x609c>
   16954:	push	{r4, lr}
   16958:	bl	17010 <close@plt+0x6124>
   1695c:	cmp	r0, #0
   16960:	popne	{r4, pc}
   16964:	bl	16f88 <close@plt+0x609c>
   16968:	push	{r4, lr}
   1696c:	bl	17010 <close@plt+0x6124>
   16970:	cmp	r0, #0
   16974:	popne	{r4, pc}
   16978:	bl	16f88 <close@plt+0x609c>
   1697c:	push	{r4, r5, r6, lr}
   16980:	mov	r5, r0
   16984:	mov	r4, r1
   16988:	bl	1703c <close@plt+0x6150>
   1698c:	cmp	r0, #0
   16990:	popne	{r4, r5, r6, pc}
   16994:	adds	r4, r4, #0
   16998:	movne	r4, #1
   1699c:	cmp	r5, #0
   169a0:	orreq	r4, r4, #1
   169a4:	cmp	r4, #0
   169a8:	popeq	{r4, r5, r6, pc}
   169ac:	bl	16f88 <close@plt+0x609c>
   169b0:	push	{r4, lr}
   169b4:	cmp	r1, #0
   169b8:	orreq	r1, r1, #1
   169bc:	bl	1703c <close@plt+0x6150>
   169c0:	cmp	r0, #0
   169c4:	popne	{r4, pc}
   169c8:	bl	16f88 <close@plt+0x609c>
   169cc:	push	{r4, r5, r6, lr}
   169d0:	mov	r6, r0
   169d4:	mov	r5, r1
   169d8:	mov	r4, r2
   169dc:	bl	173e8 <close@plt+0x64fc>
   169e0:	cmp	r0, #0
   169e4:	popne	{r4, r5, r6, pc}
   169e8:	cmp	r6, #0
   169ec:	beq	169fc <close@plt+0x5b10>
   169f0:	cmp	r5, #0
   169f4:	cmpne	r4, #0
   169f8:	popeq	{r4, r5, r6, pc}
   169fc:	bl	16f88 <close@plt+0x609c>
   16a00:	cmp	r2, #0
   16a04:	cmpne	r1, #0
   16a08:	moveq	r2, #1
   16a0c:	moveq	r1, r2
   16a10:	push	{r4, lr}
   16a14:	bl	173e8 <close@plt+0x64fc>
   16a18:	cmp	r0, #0
   16a1c:	popne	{r4, pc}
   16a20:	bl	16f88 <close@plt+0x609c>
   16a24:	push	{r4, lr}
   16a28:	mov	r2, r1
   16a2c:	mov	r1, r0
   16a30:	mov	r0, #0
   16a34:	bl	173e8 <close@plt+0x64fc>
   16a38:	cmp	r0, #0
   16a3c:	popne	{r4, pc}
   16a40:	bl	16f88 <close@plt+0x609c>
   16a44:	cmp	r1, #0
   16a48:	cmpne	r0, #0
   16a4c:	moveq	r2, #1
   16a50:	movne	r2, r1
   16a54:	moveq	r1, r2
   16a58:	movne	r1, r0
   16a5c:	push	{r4, lr}
   16a60:	mov	r0, #0
   16a64:	bl	173e8 <close@plt+0x64fc>
   16a68:	cmp	r0, #0
   16a6c:	popne	{r4, pc}
   16a70:	bl	16f88 <close@plt+0x609c>
   16a74:	cmp	r0, #0
   16a78:	push	{r4, r5, r6, lr}
   16a7c:	mov	r5, r1
   16a80:	ldr	r4, [r1]
   16a84:	beq	16ac0 <close@plt+0x5bd4>
   16a88:	lsr	r2, r4, #1
   16a8c:	add	r3, r2, #1
   16a90:	mvn	r3, r3
   16a94:	cmp	r4, r3
   16a98:	bhi	16adc <close@plt+0x5bf0>
   16a9c:	add	r4, r4, #1
   16aa0:	add	r4, r4, r2
   16aa4:	mov	r1, r4
   16aa8:	mov	r2, #1
   16aac:	bl	173e8 <close@plt+0x64fc>
   16ab0:	cmp	r0, #0
   16ab4:	beq	16ae0 <close@plt+0x5bf4>
   16ab8:	str	r4, [r5]
   16abc:	pop	{r4, r5, r6, pc}
   16ac0:	cmp	r4, #0
   16ac4:	moveq	r4, #64	; 0x40
   16ac8:	mov	r1, r4
   16acc:	mov	r2, #1
   16ad0:	bl	173e8 <close@plt+0x64fc>
   16ad4:	cmp	r0, #0
   16ad8:	bne	16ab8 <close@plt+0x5bcc>
   16adc:	bl	16f88 <close@plt+0x609c>
   16ae0:	cmp	r4, #0
   16ae4:	bne	16adc <close@plt+0x5bf0>
   16ae8:	str	r4, [r5]
   16aec:	pop	{r4, r5, r6, pc}
   16af0:	cmp	r0, #0
   16af4:	push	{r4, r5, r6, lr}
   16af8:	mov	r5, r1
   16afc:	ldr	r4, [r1]
   16b00:	mov	r6, r2
   16b04:	beq	16b48 <close@plt+0x5c5c>
   16b08:	lsr	r1, r4, #1
   16b0c:	add	r3, r1, #1
   16b10:	mvn	r3, r3
   16b14:	cmp	r4, r3
   16b18:	bhi	16b80 <close@plt+0x5c94>
   16b1c:	add	r4, r4, #1
   16b20:	add	r4, r4, r1
   16b24:	mov	r1, r4
   16b28:	bl	173e8 <close@plt+0x64fc>
   16b2c:	cmp	r0, #0
   16b30:	bne	16b40 <close@plt+0x5c54>
   16b34:	cmp	r4, #0
   16b38:	cmpne	r6, #0
   16b3c:	bne	16b80 <close@plt+0x5c94>
   16b40:	str	r4, [r5]
   16b44:	pop	{r4, r5, r6, pc}
   16b48:	cmp	r4, #0
   16b4c:	bne	16b68 <close@plt+0x5c7c>
   16b50:	mov	r1, r2
   16b54:	mov	r0, #64	; 0x40
   16b58:	bl	17528 <close@plt+0x663c>
   16b5c:	cmp	r0, #0
   16b60:	movne	r4, r0
   16b64:	addeq	r4, r0, #1
   16b68:	mov	r2, r6
   16b6c:	mov	r1, r4
   16b70:	mov	r0, #0
   16b74:	bl	173e8 <close@plt+0x64fc>
   16b78:	cmp	r0, #0
   16b7c:	bne	16b40 <close@plt+0x5c54>
   16b80:	bl	16f88 <close@plt+0x609c>
   16b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b88:	sub	sp, sp, #12
   16b8c:	ldr	r6, [r1]
   16b90:	mov	r8, r1
   16b94:	mov	r9, r0
   16b98:	asrs	r4, r6, #1
   16b9c:	mov	sl, r2
   16ba0:	mov	fp, r3
   16ba4:	ldr	r7, [sp, #48]	; 0x30
   16ba8:	bmi	16d24 <close@plt+0x5e38>
   16bac:	mvn	r1, #-2147483648	; 0x80000000
   16bb0:	sub	r1, r1, r4
   16bb4:	cmp	r6, r1
   16bb8:	movle	r1, #0
   16bbc:	movgt	r1, #1
   16bc0:	mvn	r3, fp
   16bc4:	cmp	r1, #0
   16bc8:	addeq	r4, r4, r6
   16bcc:	mvnne	r4, #-2147483648	; 0x80000000
   16bd0:	lsr	r3, r3, #31
   16bd4:	cmp	fp, r4
   16bd8:	movge	r2, #0
   16bdc:	andlt	r2, r3, #1
   16be0:	cmp	r2, #0
   16be4:	beq	16cd4 <close@plt+0x5de8>
   16be8:	cmp	r7, #0
   16bec:	blt	16dbc <close@plt+0x5ed0>
   16bf0:	bne	16db4 <close@plt+0x5ec8>
   16bf4:	mov	r5, #64	; 0x40
   16bf8:	mov	r1, r7
   16bfc:	mov	r0, r5
   16c00:	str	r3, [sp, #4]
   16c04:	bl	17734 <close@plt+0x6848>
   16c08:	mov	r1, r7
   16c0c:	mov	r4, r0
   16c10:	mov	r0, r5
   16c14:	bl	17954 <close@plt+0x6a68>
   16c18:	ldr	r3, [sp, #4]
   16c1c:	sub	r5, r5, r1
   16c20:	cmp	r9, #0
   16c24:	sub	r2, r4, r6
   16c28:	streq	r9, [r8]
   16c2c:	cmp	r2, sl
   16c30:	bge	16cb4 <close@plt+0x5dc8>
   16c34:	cmp	sl, #0
   16c38:	blt	16d54 <close@plt+0x5e68>
   16c3c:	cmp	r6, #0
   16c40:	blt	16c60 <close@plt+0x5d74>
   16c44:	mvn	r2, #-2147483648	; 0x80000000
   16c48:	sub	r2, r2, sl
   16c4c:	cmp	r6, r2
   16c50:	movle	r2, #0
   16c54:	movgt	r2, #1
   16c58:	cmp	r2, #0
   16c5c:	bne	16d50 <close@plt+0x5e64>
   16c60:	add	r6, r6, sl
   16c64:	cmp	fp, r6
   16c68:	movge	r3, #0
   16c6c:	andlt	r3, r3, #1
   16c70:	cmp	r3, #0
   16c74:	mov	r4, r6
   16c78:	bne	16d50 <close@plt+0x5e64>
   16c7c:	cmp	r7, #0
   16c80:	blt	16d68 <close@plt+0x5e7c>
   16c84:	beq	16cb0 <close@plt+0x5dc4>
   16c88:	cmp	r6, #0
   16c8c:	blt	16e0c <close@plt+0x5f20>
   16c90:	mov	r1, r7
   16c94:	mvn	r0, #-2147483648	; 0x80000000
   16c98:	bl	17734 <close@plt+0x6848>
   16c9c:	cmp	r6, r0
   16ca0:	movle	r0, #0
   16ca4:	movgt	r0, #1
   16ca8:	cmp	r0, #0
   16cac:	bne	16d50 <close@plt+0x5e64>
   16cb0:	mul	r5, r6, r7
   16cb4:	mov	r1, r5
   16cb8:	mov	r0, r9
   16cbc:	bl	1703c <close@plt+0x6150>
   16cc0:	cmp	r0, #0
   16cc4:	beq	16d38 <close@plt+0x5e4c>
   16cc8:	str	r4, [r8]
   16ccc:	add	sp, sp, #12
   16cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cd4:	cmp	r7, #0
   16cd8:	blt	16d94 <close@plt+0x5ea8>
   16cdc:	beq	16bf4 <close@plt+0x5d08>
   16ce0:	cmp	r4, #0
   16ce4:	blt	16dc4 <close@plt+0x5ed8>
   16ce8:	mov	r1, r7
   16cec:	mvn	r0, #-2147483648	; 0x80000000
   16cf0:	str	r3, [sp, #4]
   16cf4:	bl	17734 <close@plt+0x6848>
   16cf8:	ldr	r3, [sp, #4]
   16cfc:	cmp	r0, r4
   16d00:	movge	r0, #0
   16d04:	movlt	r0, #1
   16d08:	cmp	r0, #0
   16d0c:	mvnne	r5, #-2147483648	; 0x80000000
   16d10:	bne	16bf8 <close@plt+0x5d0c>
   16d14:	mul	r5, r7, r4
   16d18:	cmp	r5, #63	; 0x3f
   16d1c:	bgt	16c20 <close@plt+0x5d34>
   16d20:	b	16bf4 <close@plt+0x5d08>
   16d24:	rsb	r1, r4, #-2147483648	; 0x80000000
   16d28:	cmp	r6, r1
   16d2c:	movge	r1, #0
   16d30:	movlt	r1, #1
   16d34:	b	16bc0 <close@plt+0x5cd4>
   16d38:	adds	r5, r5, #0
   16d3c:	movne	r5, #1
   16d40:	cmp	r9, #0
   16d44:	orreq	r5, r5, #1
   16d48:	cmp	r5, #0
   16d4c:	beq	16cc8 <close@plt+0x5ddc>
   16d50:	bl	16f88 <close@plt+0x609c>
   16d54:	rsb	r2, sl, #-2147483648	; 0x80000000
   16d58:	cmp	r6, r2
   16d5c:	movge	r2, #0
   16d60:	movlt	r2, #1
   16d64:	b	16c58 <close@plt+0x5d6c>
   16d68:	cmp	r6, #0
   16d6c:	blt	16df0 <close@plt+0x5f04>
   16d70:	cmn	r7, #1
   16d74:	beq	16cb0 <close@plt+0x5dc4>
   16d78:	mov	r1, r7
   16d7c:	mov	r0, #-2147483648	; 0x80000000
   16d80:	bl	17734 <close@plt+0x6848>
   16d84:	cmp	r6, r0
   16d88:	movle	r0, #0
   16d8c:	movgt	r0, #1
   16d90:	b	16ca8 <close@plt+0x5dbc>
   16d94:	cmp	r4, #0
   16d98:	blt	16e30 <close@plt+0x5f44>
   16d9c:	cmn	r7, #1
   16da0:	beq	16d14 <close@plt+0x5e28>
   16da4:	str	r3, [sp, #4]
   16da8:	mov	r1, r7
   16dac:	mov	r0, #-2147483648	; 0x80000000
   16db0:	b	16cf4 <close@plt+0x5e08>
   16db4:	mov	r4, fp
   16db8:	b	16ce8 <close@plt+0x5dfc>
   16dbc:	mov	r4, fp
   16dc0:	b	16d9c <close@plt+0x5eb0>
   16dc4:	cmn	r4, #1
   16dc8:	beq	16d14 <close@plt+0x5e28>
   16dcc:	mov	r1, r4
   16dd0:	mov	r0, #-2147483648	; 0x80000000
   16dd4:	str	r3, [sp, #4]
   16dd8:	bl	17734 <close@plt+0x6848>
   16ddc:	ldr	r3, [sp, #4]
   16de0:	cmp	r7, r0
   16de4:	movle	r0, #0
   16de8:	movgt	r0, #1
   16dec:	b	16d08 <close@plt+0x5e1c>
   16df0:	mov	r1, r7
   16df4:	mvn	r0, #-2147483648	; 0x80000000
   16df8:	bl	17734 <close@plt+0x6848>
   16dfc:	cmp	r6, r0
   16e00:	movge	r0, #0
   16e04:	movlt	r0, #1
   16e08:	b	16ca8 <close@plt+0x5dbc>
   16e0c:	cmn	r6, #1
   16e10:	beq	16cb0 <close@plt+0x5dc4>
   16e14:	mov	r1, r6
   16e18:	mov	r0, #-2147483648	; 0x80000000
   16e1c:	bl	17734 <close@plt+0x6848>
   16e20:	cmp	r7, r0
   16e24:	movle	r0, #0
   16e28:	movgt	r0, #1
   16e2c:	b	16ca8 <close@plt+0x5dbc>
   16e30:	mov	r1, r7
   16e34:	mvn	r0, #-2147483648	; 0x80000000
   16e38:	str	r3, [sp, #4]
   16e3c:	bl	17734 <close@plt+0x6848>
   16e40:	ldr	r3, [sp, #4]
   16e44:	cmp	r0, r4
   16e48:	movle	r0, #0
   16e4c:	movgt	r0, #1
   16e50:	b	16d08 <close@plt+0x5e1c>
   16e54:	push	{r4, lr}
   16e58:	mov	r1, #1
   16e5c:	bl	16fc8 <close@plt+0x60dc>
   16e60:	cmp	r0, #0
   16e64:	popne	{r4, pc}
   16e68:	bl	16f88 <close@plt+0x609c>
   16e6c:	push	{r4, lr}
   16e70:	mov	r1, #1
   16e74:	bl	16fc8 <close@plt+0x60dc>
   16e78:	cmp	r0, #0
   16e7c:	popne	{r4, pc}
   16e80:	bl	16f88 <close@plt+0x609c>
   16e84:	push	{r4, lr}
   16e88:	bl	16fc8 <close@plt+0x60dc>
   16e8c:	cmp	r0, #0
   16e90:	popne	{r4, pc}
   16e94:	bl	16f88 <close@plt+0x609c>
   16e98:	push	{r4, lr}
   16e9c:	bl	16fc8 <close@plt+0x60dc>
   16ea0:	cmp	r0, #0
   16ea4:	popne	{r4, pc}
   16ea8:	bl	16f88 <close@plt+0x609c>
   16eac:	push	{r4, r5, r6, lr}
   16eb0:	mov	r6, r0
   16eb4:	mov	r0, r1
   16eb8:	mov	r4, r1
   16ebc:	bl	17010 <close@plt+0x6124>
   16ec0:	subs	r5, r0, #0
   16ec4:	beq	16edc <close@plt+0x5ff0>
   16ec8:	mov	r2, r4
   16ecc:	mov	r1, r6
   16ed0:	bl	10cd0 <memcpy@plt>
   16ed4:	mov	r0, r5
   16ed8:	pop	{r4, r5, r6, pc}
   16edc:	bl	16f88 <close@plt+0x609c>
   16ee0:	push	{r4, r5, r6, lr}
   16ee4:	mov	r6, r0
   16ee8:	mov	r0, r1
   16eec:	mov	r4, r1
   16ef0:	bl	17010 <close@plt+0x6124>
   16ef4:	subs	r5, r0, #0
   16ef8:	beq	16f10 <close@plt+0x6024>
   16efc:	mov	r2, r4
   16f00:	mov	r1, r6
   16f04:	bl	10cd0 <memcpy@plt>
   16f08:	mov	r0, r5
   16f0c:	pop	{r4, r5, r6, pc}
   16f10:	bl	16f88 <close@plt+0x609c>
   16f14:	push	{r4, r5, r6, lr}
   16f18:	mov	r6, r0
   16f1c:	add	r0, r1, #1
   16f20:	mov	r4, r1
   16f24:	bl	17010 <close@plt+0x6124>
   16f28:	subs	r5, r0, #0
   16f2c:	beq	16f4c <close@plt+0x6060>
   16f30:	mov	r3, #0
   16f34:	mov	r1, r6
   16f38:	strb	r3, [r5, r4]
   16f3c:	mov	r2, r4
   16f40:	bl	10cd0 <memcpy@plt>
   16f44:	mov	r0, r5
   16f48:	pop	{r4, r5, r6, pc}
   16f4c:	bl	16f88 <close@plt+0x609c>
   16f50:	push	{r4, r5, r6, lr}
   16f54:	mov	r6, r0
   16f58:	bl	10e14 <strlen@plt>
   16f5c:	add	r4, r0, #1
   16f60:	mov	r0, r4
   16f64:	bl	17010 <close@plt+0x6124>
   16f68:	subs	r5, r0, #0
   16f6c:	beq	16f84 <close@plt+0x6098>
   16f70:	mov	r2, r4
   16f74:	mov	r1, r6
   16f78:	bl	10cd0 <memcpy@plt>
   16f7c:	mov	r0, r5
   16f80:	pop	{r4, r5, r6, pc}
   16f84:	bl	16f88 <close@plt+0x609c>
   16f88:	ldr	r3, [pc, #44]	; 16fbc <close@plt+0x60d0>
   16f8c:	push	{r4, lr}
   16f90:	mov	r2, #5
   16f94:	ldr	r1, [pc, #36]	; 16fc0 <close@plt+0x60d4>
   16f98:	mov	r0, #0
   16f9c:	ldr	r4, [r3]
   16fa0:	bl	10d18 <dcgettext@plt>
   16fa4:	ldr	r2, [pc, #24]	; 16fc4 <close@plt+0x60d8>
   16fa8:	mov	r1, #0
   16fac:	mov	r3, r0
   16fb0:	mov	r0, r4
   16fb4:	bl	10d90 <error@plt>
   16fb8:	bl	10ee0 <abort@plt>
   16fbc:	strdeq	r9, [r2], -r0
   16fc0:	muleq	r1, ip, r4
   16fc4:	andeq	r8, r1, ip, lsl r0
   16fc8:	cmp	r1, #0
   16fcc:	cmpne	r0, #0
   16fd0:	moveq	r1, #1
   16fd4:	moveq	r0, r1
   16fd8:	umull	r2, r3, r0, r1
   16fdc:	adds	r3, r3, #0
   16fe0:	movne	r3, #1
   16fe4:	cmp	r2, #0
   16fe8:	blt	16ff8 <close@plt+0x610c>
   16fec:	cmp	r3, #0
   16ff0:	bne	16ff8 <close@plt+0x610c>
   16ff4:	b	10c7c <calloc@plt>
   16ff8:	push	{r4, lr}
   16ffc:	bl	10e20 <__errno_location@plt>
   17000:	mov	r3, #12
   17004:	str	r3, [r0]
   17008:	mov	r0, #0
   1700c:	pop	{r4, pc}
   17010:	cmp	r0, #0
   17014:	moveq	r0, #1
   17018:	cmp	r0, #0
   1701c:	blt	17024 <close@plt+0x6138>
   17020:	b	10db4 <malloc@plt>
   17024:	push	{r4, lr}
   17028:	bl	10e20 <__errno_location@plt>
   1702c:	mov	r3, #12
   17030:	str	r3, [r0]
   17034:	mov	r0, #0
   17038:	pop	{r4, pc}
   1703c:	cmp	r0, #0
   17040:	beq	17064 <close@plt+0x6178>
   17044:	cmp	r1, #0
   17048:	push	{lr}		; (str lr, [sp, #-4]!)
   1704c:	sub	sp, sp, #12
   17050:	beq	1706c <close@plt+0x6180>
   17054:	blt	17084 <close@plt+0x6198>
   17058:	add	sp, sp, #12
   1705c:	pop	{lr}		; (ldr lr, [sp], #4)
   17060:	b	10d30 <realloc@plt>
   17064:	mov	r0, r1
   17068:	b	17010 <close@plt+0x6124>
   1706c:	str	r1, [sp, #4]
   17070:	bl	11cd0 <close@plt+0xde4>
   17074:	ldr	r3, [sp, #4]
   17078:	mov	r0, r3
   1707c:	add	sp, sp, #12
   17080:	pop	{pc}		; (ldr pc, [sp], #4)
   17084:	bl	10e20 <__errno_location@plt>
   17088:	mov	r2, #12
   1708c:	mov	r3, #0
   17090:	str	r2, [r0]
   17094:	b	17078 <close@plt+0x618c>
   17098:	ldrb	r3, [r0]
   1709c:	cmp	r3, #47	; 0x2f
   170a0:	bne	170b0 <close@plt+0x61c4>
   170a4:	ldrb	r3, [r0, #1]!
   170a8:	cmp	r3, #47	; 0x2f
   170ac:	beq	170a4 <close@plt+0x61b8>
   170b0:	cmp	r3, #0
   170b4:	bxeq	lr
   170b8:	mov	r2, #0
   170bc:	push	{lr}		; (str lr, [sp, #-4]!)
   170c0:	mov	ip, r2
   170c4:	mov	r1, r0
   170c8:	mov	lr, #1
   170cc:	cmp	r3, #47	; 0x2f
   170d0:	moveq	r2, lr
   170d4:	beq	170e4 <close@plt+0x61f8>
   170d8:	cmp	r2, #0
   170dc:	movne	r0, r1
   170e0:	movne	r2, ip
   170e4:	ldrb	r3, [r1, #1]!
   170e8:	cmp	r3, #0
   170ec:	bne	170cc <close@plt+0x61e0>
   170f0:	pop	{pc}		; (ldr pc, [sp], #4)
   170f4:	push	{r4, lr}
   170f8:	mov	r4, r0
   170fc:	bl	10e14 <strlen@plt>
   17100:	cmp	r0, #1
   17104:	popls	{r4, pc}
   17108:	sub	r3, r0, #1
   1710c:	add	r2, r4, r3
   17110:	ldrb	r1, [r4, r3]
   17114:	cmp	r1, #47	; 0x2f
   17118:	popne	{r4, pc}
   1711c:	cmp	r3, #1
   17120:	beq	17134 <close@plt+0x6248>
   17124:	ldrb	r1, [r2, #-1]!
   17128:	sub	r0, r3, #1
   1712c:	cmp	r1, #47	; 0x2f
   17130:	beq	1713c <close@plt+0x6250>
   17134:	mov	r0, r3
   17138:	pop	{r4, pc}
   1713c:	mov	r3, r0
   17140:	b	1711c <close@plt+0x6230>
   17144:	push	{r4, r5, r6, lr}
   17148:	mov	r4, r0
   1714c:	bl	10d78 <__fpending@plt>
   17150:	ldr	r5, [r4]
   17154:	and	r5, r5, #32
   17158:	mov	r6, r0
   1715c:	mov	r0, r4
   17160:	bl	171c0 <close@plt+0x62d4>
   17164:	cmp	r5, #0
   17168:	mov	r4, r0
   1716c:	bne	1718c <close@plt+0x62a0>
   17170:	cmp	r0, #0
   17174:	beq	17184 <close@plt+0x6298>
   17178:	cmp	r6, #0
   1717c:	beq	171a8 <close@plt+0x62bc>
   17180:	mvn	r4, #0
   17184:	mov	r0, r4
   17188:	pop	{r4, r5, r6, pc}
   1718c:	cmp	r0, #0
   17190:	bne	17180 <close@plt+0x6294>
   17194:	bl	10e20 <__errno_location@plt>
   17198:	str	r4, [r0]
   1719c:	mvn	r4, #0
   171a0:	mov	r0, r4
   171a4:	pop	{r4, r5, r6, pc}
   171a8:	bl	10e20 <__errno_location@plt>
   171ac:	ldr	r4, [r0]
   171b0:	subs	r4, r4, #9
   171b4:	mvnne	r4, #0
   171b8:	mov	r0, r4
   171bc:	pop	{r4, r5, r6, pc}
   171c0:	push	{r4, r5, lr}
   171c4:	sub	sp, sp, #12
   171c8:	mov	r4, r0
   171cc:	bl	10e50 <fileno@plt>
   171d0:	cmp	r0, #0
   171d4:	mov	r0, r4
   171d8:	blt	17254 <close@plt+0x6368>
   171dc:	bl	10dcc <__freading@plt>
   171e0:	cmp	r0, #0
   171e4:	bne	17220 <close@plt+0x6334>
   171e8:	mov	r0, r4
   171ec:	bl	17260 <close@plt+0x6374>
   171f0:	cmp	r0, #0
   171f4:	beq	17250 <close@plt+0x6364>
   171f8:	bl	10e20 <__errno_location@plt>
   171fc:	mov	r5, r0
   17200:	mov	r0, r4
   17204:	ldr	r4, [r5]
   17208:	bl	10e68 <fclose@plt>
   1720c:	cmp	r4, #0
   17210:	mvnne	r0, #0
   17214:	strne	r4, [r5]
   17218:	add	sp, sp, #12
   1721c:	pop	{r4, r5, pc}
   17220:	mov	r0, r4
   17224:	bl	10e50 <fileno@plt>
   17228:	mov	r3, #1
   1722c:	str	r3, [sp]
   17230:	mov	r2, #0
   17234:	mov	r3, #0
   17238:	bl	10d60 <lseek64@plt>
   1723c:	mvn	r3, #0
   17240:	mvn	r2, #0
   17244:	cmp	r1, r3
   17248:	cmpeq	r0, r2
   1724c:	bne	171e8 <close@plt+0x62fc>
   17250:	mov	r0, r4
   17254:	add	sp, sp, #12
   17258:	pop	{r4, r5, lr}
   1725c:	b	10e68 <fclose@plt>
   17260:	push	{r4, lr}
   17264:	subs	r4, r0, #0
   17268:	sub	sp, sp, #8
   1726c:	beq	17288 <close@plt+0x639c>
   17270:	bl	10dcc <__freading@plt>
   17274:	cmp	r0, #0
   17278:	beq	17288 <close@plt+0x639c>
   1727c:	ldr	r3, [r4]
   17280:	tst	r3, #256	; 0x100
   17284:	bne	17298 <close@plt+0x63ac>
   17288:	mov	r0, r4
   1728c:	add	sp, sp, #8
   17290:	pop	{r4, lr}
   17294:	b	10cac <fflush@plt>
   17298:	mov	r3, #1
   1729c:	str	r3, [sp]
   172a0:	mov	r2, #0
   172a4:	mov	r3, #0
   172a8:	mov	r0, r4
   172ac:	bl	172c0 <close@plt+0x63d4>
   172b0:	mov	r0, r4
   172b4:	add	sp, sp, #8
   172b8:	pop	{r4, lr}
   172bc:	b	10cac <fflush@plt>
   172c0:	push	{r4, r5, r6, r7, r8, lr}
   172c4:	sub	sp, sp, #8
   172c8:	ldmib	r0, {ip, lr}
   172cc:	mov	r4, r0
   172d0:	ldr	r5, [sp, #32]
   172d4:	cmp	lr, ip
   172d8:	beq	172f0 <close@plt+0x6404>
   172dc:	str	r5, [sp, #32]
   172e0:	mov	r0, r4
   172e4:	add	sp, sp, #8
   172e8:	pop	{r4, r5, r6, r7, r8, lr}
   172ec:	b	10e74 <fseeko64@plt>
   172f0:	ldr	lr, [r0, #20]
   172f4:	ldr	ip, [r0, #16]
   172f8:	cmp	lr, ip
   172fc:	bne	172dc <close@plt+0x63f0>
   17300:	ldr	r8, [r0, #36]	; 0x24
   17304:	cmp	r8, #0
   17308:	bne	172dc <close@plt+0x63f0>
   1730c:	mov	r6, r2
   17310:	mov	r7, r3
   17314:	bl	10e50 <fileno@plt>
   17318:	mov	r2, r6
   1731c:	mov	r3, r7
   17320:	str	r5, [sp]
   17324:	bl	10d60 <lseek64@plt>
   17328:	mvn	r3, #0
   1732c:	mvn	r2, #0
   17330:	cmp	r1, r3
   17334:	cmpeq	r0, r2
   17338:	beq	17358 <close@plt+0x646c>
   1733c:	ldr	r3, [r4]
   17340:	strd	r0, [r4, #80]	; 0x50
   17344:	mov	r0, r8
   17348:	bic	r3, r3, #16
   1734c:	str	r3, [r4]
   17350:	add	sp, sp, #8
   17354:	pop	{r4, r5, r6, r7, r8, pc}
   17358:	mvn	r0, #0
   1735c:	b	17350 <close@plt+0x6464>
   17360:	push	{r4, lr}
   17364:	mov	r0, #14
   17368:	bl	10ea4 <nl_langinfo@plt>
   1736c:	cmp	r0, #0
   17370:	beq	17388 <close@plt+0x649c>
   17374:	ldrb	r2, [r0]
   17378:	ldr	r3, [pc, #16]	; 17390 <close@plt+0x64a4>
   1737c:	cmp	r2, #0
   17380:	moveq	r0, r3
   17384:	pop	{r4, pc}
   17388:	ldr	r0, [pc]	; 17390 <close@plt+0x64a4>
   1738c:	pop	{r4, pc}
   17390:			; <UNDEFINED> instruction: 0x000184b0
   17394:	push	{r4, r5, r6, r7, lr}
   17398:	subs	r6, r0, #0
   1739c:	sub	sp, sp, #12
   173a0:	addeq	r6, sp, #4
   173a4:	mov	r0, r6
   173a8:	mov	r5, r2
   173ac:	mov	r7, r1
   173b0:	bl	10d84 <mbrtowc@plt>
   173b4:	cmp	r5, #0
   173b8:	cmnne	r0, #3
   173bc:	mov	r4, r0
   173c0:	bls	173dc <close@plt+0x64f0>
   173c4:	mov	r0, #0
   173c8:	bl	17434 <close@plt+0x6548>
   173cc:	cmp	r0, #0
   173d0:	moveq	r4, #1
   173d4:	ldrbeq	r3, [r7]
   173d8:	streq	r3, [r6]
   173dc:	mov	r0, r4
   173e0:	add	sp, sp, #12
   173e4:	pop	{r4, r5, r6, r7, pc}
   173e8:	push	{r4, r5, r6, lr}
   173ec:	subs	r4, r2, #0
   173f0:	mov	r6, r0
   173f4:	mov	r5, r1
   173f8:	beq	17424 <close@plt+0x6538>
   173fc:	mov	r1, r4
   17400:	mvn	r0, #0
   17404:	bl	17528 <close@plt+0x663c>
   17408:	cmp	r0, r5
   1740c:	bcs	17424 <close@plt+0x6538>
   17410:	bl	10e20 <__errno_location@plt>
   17414:	mov	r3, #12
   17418:	str	r3, [r0]
   1741c:	mov	r0, #0
   17420:	pop	{r4, r5, r6, pc}
   17424:	mul	r1, r5, r4
   17428:	mov	r0, r6
   1742c:	pop	{r4, r5, r6, lr}
   17430:	b	1703c <close@plt+0x6150>
   17434:	push	{lr}		; (str lr, [sp, #-4]!)
   17438:	sub	sp, sp, #268	; 0x10c
   1743c:	add	r1, sp, #4
   17440:	ldr	r2, [pc, #60]	; 17484 <close@plt+0x6598>
   17444:	bl	17490 <close@plt+0x65a4>
   17448:	cmp	r0, #0
   1744c:	movne	r0, #0
   17450:	bne	1747c <close@plt+0x6590>
   17454:	ldr	r1, [pc, #44]	; 17488 <close@plt+0x659c>
   17458:	add	r0, sp, #4
   1745c:	bl	10ca0 <strcmp@plt>
   17460:	cmp	r0, #0
   17464:	beq	1747c <close@plt+0x6590>
   17468:	add	r0, sp, #4
   1746c:	ldr	r1, [pc, #24]	; 1748c <close@plt+0x65a0>
   17470:	bl	10ca0 <strcmp@plt>
   17474:	adds	r0, r0, #0
   17478:	movne	r0, #1
   1747c:	add	sp, sp, #268	; 0x10c
   17480:	pop	{pc}		; (ldr pc, [sp], #4)
   17484:	andeq	r0, r0, r1, lsl #2
   17488:			; <UNDEFINED> instruction: 0x000184b8
   1748c:			; <UNDEFINED> instruction: 0x000184bc
   17490:	push	{r4, r5, r6, lr}
   17494:	mov	r5, r1
   17498:	mov	r1, #0
   1749c:	mov	r4, r2
   174a0:	bl	10e8c <setlocale@plt>
   174a4:	subs	r6, r0, #0
   174a8:	beq	17504 <close@plt+0x6618>
   174ac:	bl	10e14 <strlen@plt>
   174b0:	cmp	r4, r0
   174b4:	bhi	174ec <close@plt+0x6600>
   174b8:	cmp	r4, #0
   174bc:	bne	174c8 <close@plt+0x65dc>
   174c0:	mov	r0, #34	; 0x22
   174c4:	pop	{r4, r5, r6, pc}
   174c8:	sub	r4, r4, #1
   174cc:	mov	r1, r6
   174d0:	mov	r2, r4
   174d4:	mov	r0, r5
   174d8:	bl	10cd0 <memcpy@plt>
   174dc:	mov	r3, #0
   174e0:	strb	r3, [r5, r4]
   174e4:	mov	r0, #34	; 0x22
   174e8:	pop	{r4, r5, r6, pc}
   174ec:	add	r2, r0, #1
   174f0:	mov	r1, r6
   174f4:	mov	r0, r5
   174f8:	bl	10cd0 <memcpy@plt>
   174fc:	mov	r0, #0
   17500:	pop	{r4, r5, r6, pc}
   17504:	cmp	r4, #0
   17508:	beq	17518 <close@plt+0x662c>
   1750c:	strb	r6, [r5]
   17510:	mov	r0, #22
   17514:	pop	{r4, r5, r6, pc}
   17518:	mov	r0, #22
   1751c:	pop	{r4, r5, r6, pc}
   17520:	mov	r1, #0
   17524:	b	10e8c <setlocale@plt>
   17528:	subs	r2, r1, #1
   1752c:	bxeq	lr
   17530:	bcc	17708 <close@plt+0x681c>
   17534:	cmp	r0, r1
   17538:	bls	176ec <close@plt+0x6800>
   1753c:	tst	r1, r2
   17540:	beq	176f8 <close@plt+0x680c>
   17544:	clz	r3, r0
   17548:	clz	r2, r1
   1754c:	sub	r3, r2, r3
   17550:	rsbs	r3, r3, #31
   17554:	addne	r3, r3, r3, lsl #1
   17558:	mov	r2, #0
   1755c:	addne	pc, pc, r3, lsl #2
   17560:	nop			; (mov r0, r0)
   17564:	cmp	r0, r1, lsl #31
   17568:	adc	r2, r2, r2
   1756c:	subcs	r0, r0, r1, lsl #31
   17570:	cmp	r0, r1, lsl #30
   17574:	adc	r2, r2, r2
   17578:	subcs	r0, r0, r1, lsl #30
   1757c:	cmp	r0, r1, lsl #29
   17580:	adc	r2, r2, r2
   17584:	subcs	r0, r0, r1, lsl #29
   17588:	cmp	r0, r1, lsl #28
   1758c:	adc	r2, r2, r2
   17590:	subcs	r0, r0, r1, lsl #28
   17594:	cmp	r0, r1, lsl #27
   17598:	adc	r2, r2, r2
   1759c:	subcs	r0, r0, r1, lsl #27
   175a0:	cmp	r0, r1, lsl #26
   175a4:	adc	r2, r2, r2
   175a8:	subcs	r0, r0, r1, lsl #26
   175ac:	cmp	r0, r1, lsl #25
   175b0:	adc	r2, r2, r2
   175b4:	subcs	r0, r0, r1, lsl #25
   175b8:	cmp	r0, r1, lsl #24
   175bc:	adc	r2, r2, r2
   175c0:	subcs	r0, r0, r1, lsl #24
   175c4:	cmp	r0, r1, lsl #23
   175c8:	adc	r2, r2, r2
   175cc:	subcs	r0, r0, r1, lsl #23
   175d0:	cmp	r0, r1, lsl #22
   175d4:	adc	r2, r2, r2
   175d8:	subcs	r0, r0, r1, lsl #22
   175dc:	cmp	r0, r1, lsl #21
   175e0:	adc	r2, r2, r2
   175e4:	subcs	r0, r0, r1, lsl #21
   175e8:	cmp	r0, r1, lsl #20
   175ec:	adc	r2, r2, r2
   175f0:	subcs	r0, r0, r1, lsl #20
   175f4:	cmp	r0, r1, lsl #19
   175f8:	adc	r2, r2, r2
   175fc:	subcs	r0, r0, r1, lsl #19
   17600:	cmp	r0, r1, lsl #18
   17604:	adc	r2, r2, r2
   17608:	subcs	r0, r0, r1, lsl #18
   1760c:	cmp	r0, r1, lsl #17
   17610:	adc	r2, r2, r2
   17614:	subcs	r0, r0, r1, lsl #17
   17618:	cmp	r0, r1, lsl #16
   1761c:	adc	r2, r2, r2
   17620:	subcs	r0, r0, r1, lsl #16
   17624:	cmp	r0, r1, lsl #15
   17628:	adc	r2, r2, r2
   1762c:	subcs	r0, r0, r1, lsl #15
   17630:	cmp	r0, r1, lsl #14
   17634:	adc	r2, r2, r2
   17638:	subcs	r0, r0, r1, lsl #14
   1763c:	cmp	r0, r1, lsl #13
   17640:	adc	r2, r2, r2
   17644:	subcs	r0, r0, r1, lsl #13
   17648:	cmp	r0, r1, lsl #12
   1764c:	adc	r2, r2, r2
   17650:	subcs	r0, r0, r1, lsl #12
   17654:	cmp	r0, r1, lsl #11
   17658:	adc	r2, r2, r2
   1765c:	subcs	r0, r0, r1, lsl #11
   17660:	cmp	r0, r1, lsl #10
   17664:	adc	r2, r2, r2
   17668:	subcs	r0, r0, r1, lsl #10
   1766c:	cmp	r0, r1, lsl #9
   17670:	adc	r2, r2, r2
   17674:	subcs	r0, r0, r1, lsl #9
   17678:	cmp	r0, r1, lsl #8
   1767c:	adc	r2, r2, r2
   17680:	subcs	r0, r0, r1, lsl #8
   17684:	cmp	r0, r1, lsl #7
   17688:	adc	r2, r2, r2
   1768c:	subcs	r0, r0, r1, lsl #7
   17690:	cmp	r0, r1, lsl #6
   17694:	adc	r2, r2, r2
   17698:	subcs	r0, r0, r1, lsl #6
   1769c:	cmp	r0, r1, lsl #5
   176a0:	adc	r2, r2, r2
   176a4:	subcs	r0, r0, r1, lsl #5
   176a8:	cmp	r0, r1, lsl #4
   176ac:	adc	r2, r2, r2
   176b0:	subcs	r0, r0, r1, lsl #4
   176b4:	cmp	r0, r1, lsl #3
   176b8:	adc	r2, r2, r2
   176bc:	subcs	r0, r0, r1, lsl #3
   176c0:	cmp	r0, r1, lsl #2
   176c4:	adc	r2, r2, r2
   176c8:	subcs	r0, r0, r1, lsl #2
   176cc:	cmp	r0, r1, lsl #1
   176d0:	adc	r2, r2, r2
   176d4:	subcs	r0, r0, r1, lsl #1
   176d8:	cmp	r0, r1
   176dc:	adc	r2, r2, r2
   176e0:	subcs	r0, r0, r1
   176e4:	mov	r0, r2
   176e8:	bx	lr
   176ec:	moveq	r0, #1
   176f0:	movne	r0, #0
   176f4:	bx	lr
   176f8:	clz	r2, r1
   176fc:	rsb	r2, r2, #31
   17700:	lsr	r0, r0, r2
   17704:	bx	lr
   17708:	cmp	r0, #0
   1770c:	mvnne	r0, #0
   17710:	b	17974 <close@plt+0x6a88>
   17714:	cmp	r1, #0
   17718:	beq	17708 <close@plt+0x681c>
   1771c:	push	{r0, r1, lr}
   17720:	bl	17528 <close@plt+0x663c>
   17724:	pop	{r1, r2, lr}
   17728:	mul	r3, r2, r0
   1772c:	sub	r1, r1, r3
   17730:	bx	lr
   17734:	cmp	r1, #0
   17738:	beq	17944 <close@plt+0x6a58>
   1773c:	eor	ip, r0, r1
   17740:	rsbmi	r1, r1, #0
   17744:	subs	r2, r1, #1
   17748:	beq	17910 <close@plt+0x6a24>
   1774c:	movs	r3, r0
   17750:	rsbmi	r3, r0, #0
   17754:	cmp	r3, r1
   17758:	bls	1791c <close@plt+0x6a30>
   1775c:	tst	r1, r2
   17760:	beq	1792c <close@plt+0x6a40>
   17764:	clz	r2, r3
   17768:	clz	r0, r1
   1776c:	sub	r2, r0, r2
   17770:	rsbs	r2, r2, #31
   17774:	addne	r2, r2, r2, lsl #1
   17778:	mov	r0, #0
   1777c:	addne	pc, pc, r2, lsl #2
   17780:	nop			; (mov r0, r0)
   17784:	cmp	r3, r1, lsl #31
   17788:	adc	r0, r0, r0
   1778c:	subcs	r3, r3, r1, lsl #31
   17790:	cmp	r3, r1, lsl #30
   17794:	adc	r0, r0, r0
   17798:	subcs	r3, r3, r1, lsl #30
   1779c:	cmp	r3, r1, lsl #29
   177a0:	adc	r0, r0, r0
   177a4:	subcs	r3, r3, r1, lsl #29
   177a8:	cmp	r3, r1, lsl #28
   177ac:	adc	r0, r0, r0
   177b0:	subcs	r3, r3, r1, lsl #28
   177b4:	cmp	r3, r1, lsl #27
   177b8:	adc	r0, r0, r0
   177bc:	subcs	r3, r3, r1, lsl #27
   177c0:	cmp	r3, r1, lsl #26
   177c4:	adc	r0, r0, r0
   177c8:	subcs	r3, r3, r1, lsl #26
   177cc:	cmp	r3, r1, lsl #25
   177d0:	adc	r0, r0, r0
   177d4:	subcs	r3, r3, r1, lsl #25
   177d8:	cmp	r3, r1, lsl #24
   177dc:	adc	r0, r0, r0
   177e0:	subcs	r3, r3, r1, lsl #24
   177e4:	cmp	r3, r1, lsl #23
   177e8:	adc	r0, r0, r0
   177ec:	subcs	r3, r3, r1, lsl #23
   177f0:	cmp	r3, r1, lsl #22
   177f4:	adc	r0, r0, r0
   177f8:	subcs	r3, r3, r1, lsl #22
   177fc:	cmp	r3, r1, lsl #21
   17800:	adc	r0, r0, r0
   17804:	subcs	r3, r3, r1, lsl #21
   17808:	cmp	r3, r1, lsl #20
   1780c:	adc	r0, r0, r0
   17810:	subcs	r3, r3, r1, lsl #20
   17814:	cmp	r3, r1, lsl #19
   17818:	adc	r0, r0, r0
   1781c:	subcs	r3, r3, r1, lsl #19
   17820:	cmp	r3, r1, lsl #18
   17824:	adc	r0, r0, r0
   17828:	subcs	r3, r3, r1, lsl #18
   1782c:	cmp	r3, r1, lsl #17
   17830:	adc	r0, r0, r0
   17834:	subcs	r3, r3, r1, lsl #17
   17838:	cmp	r3, r1, lsl #16
   1783c:	adc	r0, r0, r0
   17840:	subcs	r3, r3, r1, lsl #16
   17844:	cmp	r3, r1, lsl #15
   17848:	adc	r0, r0, r0
   1784c:	subcs	r3, r3, r1, lsl #15
   17850:	cmp	r3, r1, lsl #14
   17854:	adc	r0, r0, r0
   17858:	subcs	r3, r3, r1, lsl #14
   1785c:	cmp	r3, r1, lsl #13
   17860:	adc	r0, r0, r0
   17864:	subcs	r3, r3, r1, lsl #13
   17868:	cmp	r3, r1, lsl #12
   1786c:	adc	r0, r0, r0
   17870:	subcs	r3, r3, r1, lsl #12
   17874:	cmp	r3, r1, lsl #11
   17878:	adc	r0, r0, r0
   1787c:	subcs	r3, r3, r1, lsl #11
   17880:	cmp	r3, r1, lsl #10
   17884:	adc	r0, r0, r0
   17888:	subcs	r3, r3, r1, lsl #10
   1788c:	cmp	r3, r1, lsl #9
   17890:	adc	r0, r0, r0
   17894:	subcs	r3, r3, r1, lsl #9
   17898:	cmp	r3, r1, lsl #8
   1789c:	adc	r0, r0, r0
   178a0:	subcs	r3, r3, r1, lsl #8
   178a4:	cmp	r3, r1, lsl #7
   178a8:	adc	r0, r0, r0
   178ac:	subcs	r3, r3, r1, lsl #7
   178b0:	cmp	r3, r1, lsl #6
   178b4:	adc	r0, r0, r0
   178b8:	subcs	r3, r3, r1, lsl #6
   178bc:	cmp	r3, r1, lsl #5
   178c0:	adc	r0, r0, r0
   178c4:	subcs	r3, r3, r1, lsl #5
   178c8:	cmp	r3, r1, lsl #4
   178cc:	adc	r0, r0, r0
   178d0:	subcs	r3, r3, r1, lsl #4
   178d4:	cmp	r3, r1, lsl #3
   178d8:	adc	r0, r0, r0
   178dc:	subcs	r3, r3, r1, lsl #3
   178e0:	cmp	r3, r1, lsl #2
   178e4:	adc	r0, r0, r0
   178e8:	subcs	r3, r3, r1, lsl #2
   178ec:	cmp	r3, r1, lsl #1
   178f0:	adc	r0, r0, r0
   178f4:	subcs	r3, r3, r1, lsl #1
   178f8:	cmp	r3, r1
   178fc:	adc	r0, r0, r0
   17900:	subcs	r3, r3, r1
   17904:	cmp	ip, #0
   17908:	rsbmi	r0, r0, #0
   1790c:	bx	lr
   17910:	teq	ip, r0
   17914:	rsbmi	r0, r0, #0
   17918:	bx	lr
   1791c:	movcc	r0, #0
   17920:	asreq	r0, ip, #31
   17924:	orreq	r0, r0, #1
   17928:	bx	lr
   1792c:	clz	r2, r1
   17930:	rsb	r2, r2, #31
   17934:	cmp	ip, #0
   17938:	lsr	r0, r3, r2
   1793c:	rsbmi	r0, r0, #0
   17940:	bx	lr
   17944:	cmp	r0, #0
   17948:	mvngt	r0, #-2147483648	; 0x80000000
   1794c:	movlt	r0, #-2147483648	; 0x80000000
   17950:	b	17974 <close@plt+0x6a88>
   17954:	cmp	r1, #0
   17958:	beq	17944 <close@plt+0x6a58>
   1795c:	push	{r0, r1, lr}
   17960:	bl	1773c <close@plt+0x6850>
   17964:	pop	{r1, r2, lr}
   17968:	mul	r3, r2, r0
   1796c:	sub	r1, r1, r3
   17970:	bx	lr
   17974:	push	{r1, lr}
   17978:	mov	r0, #8
   1797c:	bl	10c94 <raise@plt>
   17980:	pop	{r1, pc}
   17984:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17988:	mov	r7, r0
   1798c:	ldr	r6, [pc, #72]	; 179dc <close@plt+0x6af0>
   17990:	ldr	r5, [pc, #72]	; 179e0 <close@plt+0x6af4>
   17994:	add	r6, pc, r6
   17998:	add	r5, pc, r5
   1799c:	sub	r6, r6, r5
   179a0:	mov	r8, r1
   179a4:	mov	r9, r2
   179a8:	bl	10c5c <calloc@plt-0x20>
   179ac:	asrs	r6, r6, #2
   179b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   179b4:	mov	r4, #0
   179b8:	add	r4, r4, #1
   179bc:	ldr	r3, [r5], #4
   179c0:	mov	r2, r9
   179c4:	mov	r1, r8
   179c8:	mov	r0, r7
   179cc:	blx	r3
   179d0:	cmp	r6, r4
   179d4:	bne	179b8 <close@plt+0x6acc>
   179d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   179dc:	andeq	r1, r1, r4, ror r5
   179e0:	andeq	r1, r1, ip, ror #10
   179e4:	bx	lr
   179e8:	ldr	r3, [pc, #12]	; 179fc <close@plt+0x6b10>
   179ec:	mov	r1, #0
   179f0:	add	r3, pc, r3
   179f4:	ldr	r2, [r3]
   179f8:	b	10e2c <__cxa_atexit@plt>
   179fc:	strdeq	r1, [r1], -r0

Disassembly of section .fini:

00017a00 <.fini>:
   17a00:	push	{r3, lr}
   17a04:	pop	{r3, pc}
