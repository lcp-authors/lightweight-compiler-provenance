
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011f9c <.init>:
   11f9c:	push	{r3, lr}
   11fa0:	bl	120ac <_start@@Base+0x3c>
   11fa4:	pop	{r3, pc}

Disassembly of section .plt:

00011fa8 <strcmp@plt-0x14>:
   11fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fac:	ldr	lr, [pc, #4]	; 11fb8 <strcmp@plt-0x4>
   11fb0:	add	lr, pc, lr
   11fb4:	ldr	pc, [lr, #8]!
   11fb8:	andeq	r4, r1, r8, asr #32

00011fbc <strcmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #72]!	; 0x48

00011fc8 <printf@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #64]!	; 0x40

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #56]!	; 0x38

00011fe0 <time@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #48]!	; 0x30

00011fec <realloc@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #40]!	; 0x28

00011ff8 <strcpy@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #32]!

00012004 <malloc@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #24]!

00012010 <__libc_start_main@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #16]!

0001201c <__gmon_start__@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #8]!

00012028 <strlen@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #0]!

00012034 <srand@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #77824	; 0x13000
   1203c:	ldr	pc, [ip, #4088]!	; 0xff8

00012040 <snprintf@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #77824	; 0x13000
   12048:	ldr	pc, [ip, #4080]!	; 0xff0

0001204c <__isoc99_sscanf@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #77824	; 0x13000
   12054:	ldr	pc, [ip, #4072]!	; 0xfe8

00012058 <rand@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #77824	; 0x13000
   12060:	ldr	pc, [ip, #4064]!	; 0xfe0

00012064 <abort@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #77824	; 0x13000
   1206c:	ldr	pc, [ip, #4056]!	; 0xfd8

Disassembly of section .text:

00012070 <_start@@Base>:
   12070:	mov	fp, #0
   12074:	mov	lr, #0
   12078:	pop	{r1}		; (ldr r1, [sp], #4)
   1207c:	mov	r2, sp
   12080:	push	{r2}		; (str r2, [sp, #-4]!)
   12084:	push	{r0}		; (str r0, [sp, #-4]!)
   12088:	ldr	ip, [pc, #16]	; 120a0 <_start@@Base+0x30>
   1208c:	push	{ip}		; (str ip, [sp, #-4]!)
   12090:	ldr	r0, [pc, #12]	; 120a4 <_start@@Base+0x34>
   12094:	ldr	r3, [pc, #12]	; 120a8 <_start@@Base+0x38>
   12098:	bl	12010 <__libc_start_main@plt>
   1209c:	bl	12064 <abort@plt>
   120a0:	andeq	r5, r1, r0, asr #16
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	andeq	r5, r1, r0, ror #15
   120ac:	ldr	r3, [pc, #20]	; 120c8 <_start@@Base+0x58>
   120b0:	ldr	r2, [pc, #20]	; 120cc <_start@@Base+0x5c>
   120b4:	add	r3, pc, r3
   120b8:	ldr	r2, [r3, r2]
   120bc:	cmp	r2, #0
   120c0:	bxeq	lr
   120c4:	b	1201c <__gmon_start__@plt>
   120c8:	andeq	r3, r1, r4, asr #30
   120cc:	andeq	r0, r0, r8, asr #32
   120d0:	ldr	r0, [pc, #24]	; 120f0 <_start@@Base+0x80>
   120d4:	ldr	r3, [pc, #24]	; 120f4 <_start@@Base+0x84>
   120d8:	cmp	r3, r0
   120dc:	bxeq	lr
   120e0:	ldr	r3, [pc, #16]	; 120f8 <_start@@Base+0x88>
   120e4:	cmp	r3, #0
   120e8:	bxeq	lr
   120ec:	bx	r3
   120f0:	andeq	r6, r2, r4, asr r0
   120f4:	andeq	r6, r2, r4, asr r0
   120f8:	andeq	r0, r0, r0
   120fc:	ldr	r0, [pc, #36]	; 12128 <_start@@Base+0xb8>
   12100:	ldr	r1, [pc, #36]	; 1212c <_start@@Base+0xbc>
   12104:	sub	r1, r1, r0
   12108:	asr	r1, r1, #2
   1210c:	add	r1, r1, r1, lsr #31
   12110:	asrs	r1, r1, #1
   12114:	bxeq	lr
   12118:	ldr	r3, [pc, #16]	; 12130 <_start@@Base+0xc0>
   1211c:	cmp	r3, #0
   12120:	bxeq	lr
   12124:	bx	r3
   12128:	andeq	r6, r2, r4, asr r0
   1212c:	andeq	r6, r2, r4, asr r0
   12130:	andeq	r0, r0, r0
   12134:	push	{r4, lr}
   12138:	ldr	r4, [pc, #24]	; 12158 <_start@@Base+0xe8>
   1213c:	ldrb	r3, [r4]
   12140:	cmp	r3, #0
   12144:	popne	{r4, pc}
   12148:	bl	120d0 <_start@@Base+0x60>
   1214c:	mov	r3, #1
   12150:	strb	r3, [r4]
   12154:	pop	{r4, pc}
   12158:	andeq	r6, r2, r4, asr r0
   1215c:	b	120fc <_start@@Base+0x8c>

00012160 <main@@Base>:
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	sub	sp, sp, #64	; 0x40
   1216c:	add	r4, sp, #4
   12170:	mov	r0, r4
   12174:	bl	11fe0 <time@plt>
   12178:	bl	12034 <srand@plt>
   1217c:	bl	12058 <rand@plt>
   12180:	mov	r5, r0
   12184:	mov	r0, r4
   12188:	bl	11fe0 <time@plt>
   1218c:	bl	12034 <srand@plt>
   12190:	bl	12058 <rand@plt>
   12194:	add	r4, sp, #8
   12198:	mov	r6, r0
   1219c:	mov	r0, r4
   121a0:	bl	12358 <table_init@@Base>
   121a4:	mov	r0, r4
   121a8:	mov	r1, r5
   121ac:	bl	14c14 <table_row_is_valid@@Base>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <main@@Base+0x70>
   121b8:	ldr	r0, [pc, #300]	; 122ec <main@@Base+0x18c>
   121bc:	mov	r1, r5
   121c0:	add	r0, pc, r0
   121c4:	bl	11fc8 <printf@plt>
   121c8:	mvn	r4, #0
   121cc:	b	121d4 <main@@Base+0x74>
   121d0:	mov	r4, #0
   121d4:	add	r0, sp, #8
   121d8:	mov	r1, r6
   121dc:	bl	14bd8 <table_column_is_valid@@Base>
   121e0:	cmp	r0, #0
   121e4:	beq	121fc <main@@Base+0x9c>
   121e8:	ldr	r0, [pc, #256]	; 122f0 <main@@Base+0x190>
   121ec:	mov	r1, r6
   121f0:	add	r0, pc, r0
   121f4:	bl	11fc8 <printf@plt>
   121f8:	mvn	r4, #0
   121fc:	add	r0, sp, #8
   12200:	mov	r1, r5
   12204:	mov	r2, r6
   12208:	bl	14c50 <table_cell_is_valid@@Base>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <main@@Base+0xcc>
   12214:	ldr	r0, [pc, #216]	; 122f4 <main@@Base+0x194>
   12218:	mov	r1, r5
   1221c:	mov	r2, r6
   12220:	add	r0, pc, r0
   12224:	bl	11fc8 <printf@plt>
   12228:	mvn	r4, #0
   1222c:	add	r6, sp, #8
   12230:	mov	r0, r6
   12234:	bl	13af0 <table_add_row@@Base>
   12238:	mov	r5, r0
   1223c:	mov	r0, r6
   12240:	mov	r1, r5
   12244:	bl	14c14 <table_row_is_valid@@Base>
   12248:	cmp	r0, #0
   1224c:	bne	12264 <main@@Base+0x104>
   12250:	ldr	r0, [pc, #160]	; 122f8 <main@@Base+0x198>
   12254:	mov	r1, r5
   12258:	add	r0, pc, r0
   1225c:	bl	11fc8 <printf@plt>
   12260:	mvn	r4, #0
   12264:	ldr	r1, [pc, #144]	; 122fc <main@@Base+0x19c>
   12268:	add	r7, sp, #8
   1226c:	mov	r2, #0
   12270:	mov	r0, r7
   12274:	add	r1, pc, r1
   12278:	bl	12dd4 <table_add_column@@Base>
   1227c:	mov	r6, r0
   12280:	mov	r0, r7
   12284:	mov	r1, r6
   12288:	bl	14bd8 <table_column_is_valid@@Base>
   1228c:	cmp	r0, #0
   12290:	bne	122a8 <main@@Base+0x148>
   12294:	ldr	r0, [pc, #100]	; 12300 <main@@Base+0x1a0>
   12298:	mov	r1, r6
   1229c:	add	r0, pc, r0
   122a0:	bl	11fc8 <printf@plt>
   122a4:	mvn	r4, #0
   122a8:	add	r0, sp, #8
   122ac:	mov	r1, r5
   122b0:	mov	r2, r6
   122b4:	bl	14c50 <table_cell_is_valid@@Base>
   122b8:	cmp	r0, #0
   122bc:	bne	122d8 <main@@Base+0x178>
   122c0:	ldr	r0, [pc, #60]	; 12304 <main@@Base+0x1a4>
   122c4:	mov	r1, r5
   122c8:	mov	r2, r6
   122cc:	add	r0, pc, r0
   122d0:	bl	11fc8 <printf@plt>
   122d4:	mvn	r4, #0
   122d8:	add	r0, sp, #8
   122dc:	bl	123b4 <table_destroy@@Base>
   122e0:	mov	r0, r4
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}
   122ec:	andeq	r3, r0, r8, lsl #13
   122f0:	andeq	r3, r0, r3, ror r6
   122f4:	andeq	r3, r0, r1, ror #12
   122f8:	andeq	r3, r0, r9, asr #12
   122fc:	andeq	r3, r0, r7, ror r6
   12300:	andeq	r3, r0, ip, lsl r6
   12304:	andeq	r3, r0, r6, lsl #12

00012308 <table_new@@Base>:
   12308:	push	{fp, lr}
   1230c:	mov	fp, sp
   12310:	mov	r0, #56	; 0x38
   12314:	bl	12004 <malloc@plt>
   12318:	vmov.i32	q8, #0	; 0x00000000
   1231c:	mov	r1, #0
   12320:	mov	r2, #10
   12324:	mov	r3, #20
   12328:	str	r1, [r0]
   1232c:	stmib	r0, {r1, r2}
   12330:	str	r1, [r0, #12]
   12334:	str	r1, [r0, #16]
   12338:	str	r1, [r0, #20]
   1233c:	str	r3, [r0, #24]
   12340:	str	r1, [r0, #28]
   12344:	str	r2, [r0, #48]	; 0x30
   12348:	str	r1, [r0, #52]	; 0x34
   1234c:	add	r1, r0, #32
   12350:	vst1.32	{d16-d17}, [r1]
   12354:	pop	{fp, pc}

00012358 <table_init@@Base>:
   12358:	vmov.i32	q8, #0	; 0x00000000
   1235c:	mov	r1, #0
   12360:	mov	r2, #10
   12364:	mov	r3, #20
   12368:	str	r1, [r0]
   1236c:	stmib	r0, {r1, r2}
   12370:	str	r1, [r0, #12]
   12374:	str	r1, [r0, #16]
   12378:	str	r1, [r0, #20]
   1237c:	str	r3, [r0, #24]
   12380:	str	r1, [r0, #28]
   12384:	str	r2, [r0, #48]	; 0x30
   12388:	str	r1, [r0, #52]	; 0x34
   1238c:	add	r0, r0, #32
   12390:	vst1.32	{d16-d17}, [r0]
   12394:	bx	lr

00012398 <table_delete@@Base>:
   12398:	push	{r4, sl, fp, lr}
   1239c:	add	fp, sp, #8
   123a0:	mov	r4, r0
   123a4:	bl	123b4 <table_destroy@@Base>
   123a8:	mov	r0, r4
   123ac:	pop	{r4, sl, fp, lr}
   123b0:	b	11fd4 <free@plt>

000123b4 <table_destroy@@Base>:
   123b4:	cmp	r0, #0
   123b8:	bxeq	lr
   123bc:	push	{r4, r5, r6, sl, fp, lr}
   123c0:	add	fp, sp, #16
   123c4:	mvn	r1, #0
   123c8:	mvn	r2, #0
   123cc:	mov	r3, #64	; 0x40
   123d0:	mov	r4, r0
   123d4:	bl	12c4c <table_notify@@Base>
   123d8:	mov	r0, r4
   123dc:	bl	13ae8 <table_get_row_length@@Base>
   123e0:	cmp	r0, #1
   123e4:	blt	12408 <table_destroy@@Base+0x54>
   123e8:	mov	r5, r0
   123ec:	mov	r6, #0
   123f0:	mov	r0, r4
   123f4:	mov	r1, r6
   123f8:	bl	13a8c <table_row_destroy@@Base>
   123fc:	add	r6, r6, #1
   12400:	cmp	r5, r6
   12404:	bne	123f0 <table_destroy@@Base+0x3c>
   12408:	ldr	r0, [r4, #16]
   1240c:	cmp	r0, #0
   12410:	beq	12418 <table_destroy@@Base+0x64>
   12414:	bl	11fd4 <free@plt>
   12418:	mov	r0, r4
   1241c:	bl	12d48 <table_get_column_length@@Base>
   12420:	cmp	r0, #1
   12424:	blt	12448 <table_destroy@@Base+0x94>
   12428:	mov	r5, r0
   1242c:	mov	r6, #0
   12430:	mov	r0, r4
   12434:	mov	r1, r6
   12438:	bl	12d30 <table_column_destroy@@Base>
   1243c:	add	r6, r6, #1
   12440:	cmp	r5, r6
   12444:	bne	12430 <table_destroy@@Base+0x7c>
   12448:	ldr	r0, [r4]
   1244c:	cmp	r0, #0
   12450:	beq	12458 <table_destroy@@Base+0xa4>
   12454:	bl	11fd4 <free@plt>
   12458:	ldr	r0, [r4, #36]	; 0x24
   1245c:	cmp	r0, #0
   12460:	beq	12468 <table_destroy@@Base+0xb4>
   12464:	bl	11fd4 <free@plt>
   12468:	ldr	r0, [r4, #40]	; 0x28
   1246c:	cmp	r0, #0
   12470:	beq	12478 <table_destroy@@Base+0xc4>
   12474:	bl	11fd4 <free@plt>
   12478:	ldr	r0, [r4, #44]	; 0x2c
   1247c:	cmp	r0, #0
   12480:	pop	{r4, r5, r6, sl, fp, lr}
   12484:	beq	1248c <table_destroy@@Base+0xd8>
   12488:	b	11fd4 <free@plt>
   1248c:	bx	lr

00012490 <table_dupe@@Base>:
   12490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12494:	add	fp, sp, #28
   12498:	sub	sp, sp, #12
   1249c:	mov	r4, r0
   124a0:	bl	13ae8 <table_get_row_length@@Base>
   124a4:	mov	r8, r0
   124a8:	mov	r0, r4
   124ac:	bl	12d48 <table_get_column_length@@Base>
   124b0:	mov	r6, r0
   124b4:	mov	r0, #56	; 0x38
   124b8:	bl	12004 <malloc@plt>
   124bc:	vmov.i32	q8, #0	; 0x00000000
   124c0:	mov	sl, r0
   124c4:	mov	r5, #0
   124c8:	mov	r0, #10
   124cc:	mov	r1, #20
   124d0:	cmp	r6, #1
   124d4:	str	r5, [sl]
   124d8:	str	r5, [sl, #4]
   124dc:	str	r0, [sl, #8]
   124e0:	str	r5, [sl, #12]
   124e4:	str	r5, [sl, #16]
   124e8:	str	r5, [sl, #20]
   124ec:	str	r1, [sl, #24]
   124f0:	str	r5, [sl, #28]
   124f4:	str	r0, [sl, #48]	; 0x30
   124f8:	add	r0, sl, #32
   124fc:	str	r5, [sl, #52]	; 0x34
   12500:	vst1.32	{d16-d17}, [r0]
   12504:	blt	12540 <table_dupe@@Base+0xb0>
   12508:	mov	r0, r4
   1250c:	mov	r1, r5
   12510:	bl	12db0 <table_get_column_name@@Base>
   12514:	mov	r7, r0
   12518:	mov	r0, r4
   1251c:	mov	r1, r5
   12520:	bl	12dc0 <table_get_column_data_type@@Base>
   12524:	mov	r2, r0
   12528:	mov	r0, sl
   1252c:	mov	r1, r7
   12530:	bl	12dd4 <table_add_column@@Base>
   12534:	add	r5, r5, #1
   12538:	cmp	r6, r5
   1253c:	bne	12508 <table_dupe@@Base+0x78>
   12540:	cmp	r8, #1
   12544:	blt	129b8 <table_dupe@@Base+0x528>
   12548:	mov	r5, #0
   1254c:	add	r9, sp, #8
   12550:	b	12560 <table_dupe@@Base+0xd0>
   12554:	add	r5, r5, #1
   12558:	cmp	r5, r8
   1255c:	beq	129b8 <table_dupe@@Base+0x528>
   12560:	mov	r0, sl
   12564:	bl	13af0 <table_add_row@@Base>
   12568:	cmp	r6, #1
   1256c:	blt	12554 <table_dupe@@Base+0xc4>
   12570:	mov	r7, #0
   12574:	b	125ac <table_dupe@@Base+0x11c>
   12578:	mov	r0, r4
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	13a48 <table_get_ptr@@Base>
   12588:	str	r0, [sp, #8]
   1258c:	mov	r0, sl
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	mov	r3, r9
   1259c:	bl	14b7c <table_set_ptr@@Base>
   125a0:	add	r7, r7, #1
   125a4:	cmp	r6, r7
   125a8:	beq	12554 <table_dupe@@Base+0xc4>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r7
   125b4:	bl	12dc0 <table_get_column_data_type@@Base>
   125b8:	cmp	r0, #23
   125bc:	bhi	125a0 <table_dupe@@Base+0x110>
   125c0:	add	r1, pc, #4
   125c4:	ldr	r0, [r1, r0, lsl #2]
   125c8:	add	pc, r1, r0
   125cc:	andeq	r0, r0, r0, rrx
   125d0:	andeq	r0, r0, r8, lsl #1
   125d4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   125d8:	ldrdeq	r0, [r0], -r8
   125dc:	andeq	r0, r0, r0, lsl #2
   125e0:	andeq	r0, r0, r8, lsr #2
   125e4:	andeq	r0, r0, r0, asr r1
   125e8:	andeq	r0, r0, r8, ror r1
   125ec:	andeq	r0, r0, r0, lsr #3
   125f0:	andeq	r0, r0, r8, asr #3
   125f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   125f8:	andeq	r0, r0, r8, lsl r2
   125fc:	andeq	r0, r0, r0, asr #4
   12600:	andeq	r0, r0, r8, ror #4
   12604:	muleq	r0, r0, r2
   12608:			; <UNDEFINED> instruction: 0x000002b8
   1260c:	andeq	r0, r0, r0, ror #5
   12610:	andeq	r0, r0, r4, lsl #6
   12614:	andeq	r0, r0, r8, lsr #6
   12618:	andeq	r0, r0, ip, asr #6
   1261c:	andeq	r0, r0, r4, ror r3
   12620:	muleq	r0, ip, r3
   12624:	andeq	r0, r0, r4, asr #7
   12628:			; <UNDEFINED> instruction: 0xffffffac
   1262c:	mov	r0, r4
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	1383c <table_get_int@@Base>
   1263c:	mov	r3, r0
   12640:	mov	r0, sl
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	140a0 <table_set_int@@Base>
   12650:	b	125a0 <table_dupe@@Base+0x110>
   12654:	mov	r0, r4
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	13854 <table_get_uint@@Base>
   12664:	mov	r3, r0
   12668:	mov	r0, sl
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	14120 <table_set_uint@@Base>
   12678:	b	125a0 <table_dupe@@Base+0x110>
   1267c:	mov	r0, r4
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	1386c <table_get_int8@@Base>
   1268c:	mov	r3, r0
   12690:	mov	r0, sl
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	141a0 <table_set_int8@@Base>
   126a0:	b	125a0 <table_dupe@@Base+0x110>
   126a4:	mov	r0, r4
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	13884 <table_get_uint8@@Base>
   126b4:	mov	r3, r0
   126b8:	mov	r0, sl
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	14220 <table_set_uint8@@Base>
   126c8:	b	125a0 <table_dupe@@Base+0x110>
   126cc:	mov	r0, r4
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	1389c <table_get_int16@@Base>
   126dc:	mov	r3, r0
   126e0:	mov	r0, sl
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	142a0 <table_set_int16@@Base>
   126f0:	b	125a0 <table_dupe@@Base+0x110>
   126f4:	mov	r0, r4
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	138b4 <table_get_uint16@@Base>
   12704:	mov	r3, r0
   12708:	mov	r0, sl
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	14320 <table_set_uint16@@Base>
   12718:	b	125a0 <table_dupe@@Base+0x110>
   1271c:	mov	r0, r4
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	138cc <table_get_int32@@Base>
   1272c:	mov	r3, r0
   12730:	mov	r0, sl
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	143a0 <table_set_int32@@Base>
   12740:	b	125a0 <table_dupe@@Base+0x110>
   12744:	mov	r0, r4
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	138e4 <table_get_uint32@@Base>
   12754:	mov	r3, r0
   12758:	mov	r0, sl
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	14420 <table_set_uint32@@Base>
   12768:	b	125a0 <table_dupe@@Base+0x110>
   1276c:	mov	r0, r4
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	138fc <table_get_int64@@Base>
   1277c:	stm	sp, {r0, r1}
   12780:	mov	r0, sl
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	144a0 <table_set_int64@@Base>
   12790:	b	125a0 <table_dupe@@Base+0x110>
   12794:	mov	r0, r4
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	13914 <table_get_uint64@@Base>
   127a4:	stm	sp, {r0, r1}
   127a8:	mov	r0, sl
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	14528 <table_set_uint64@@Base>
   127b8:	b	125a0 <table_dupe@@Base+0x110>
   127bc:	mov	r0, r4
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	1392c <table_get_short@@Base>
   127cc:	mov	r3, r0
   127d0:	mov	r0, sl
   127d4:	mov	r1, r5
   127d8:	mov	r2, r7
   127dc:	bl	145b0 <table_set_short@@Base>
   127e0:	b	125a0 <table_dupe@@Base+0x110>
   127e4:	mov	r0, r4
   127e8:	mov	r1, r5
   127ec:	mov	r2, r7
   127f0:	bl	13944 <table_get_ushort@@Base>
   127f4:	mov	r3, r0
   127f8:	mov	r0, sl
   127fc:	mov	r1, r5
   12800:	mov	r2, r7
   12804:	bl	14630 <table_set_ushort@@Base>
   12808:	b	125a0 <table_dupe@@Base+0x110>
   1280c:	mov	r0, r4
   12810:	mov	r1, r5
   12814:	mov	r2, r7
   12818:	bl	1395c <table_get_long@@Base>
   1281c:	mov	r3, r0
   12820:	mov	r0, sl
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	146b0 <table_set_long@@Base>
   12830:	b	125a0 <table_dupe@@Base+0x110>
   12834:	mov	r0, r4
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	13974 <table_get_ulong@@Base>
   12844:	mov	r3, r0
   12848:	mov	r0, sl
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	14730 <table_set_ulong@@Base>
   12858:	b	125a0 <table_dupe@@Base+0x110>
   1285c:	mov	r0, r4
   12860:	mov	r1, r5
   12864:	mov	r2, r7
   12868:	bl	1398c <table_get_llong@@Base>
   1286c:	stm	sp, {r0, r1}
   12870:	mov	r0, sl
   12874:	mov	r1, r5
   12878:	mov	r2, r7
   1287c:	bl	147b0 <table_set_llong@@Base>
   12880:	b	125a0 <table_dupe@@Base+0x110>
   12884:	mov	r0, r4
   12888:	mov	r1, r5
   1288c:	mov	r2, r7
   12890:	bl	139a4 <table_get_ullong@@Base>
   12894:	stm	sp, {r0, r1}
   12898:	mov	r0, sl
   1289c:	mov	r1, r5
   128a0:	mov	r2, r7
   128a4:	bl	14838 <table_set_ullong@@Base>
   128a8:	b	125a0 <table_dupe@@Base+0x110>
   128ac:	mov	r0, r4
   128b0:	mov	r1, r5
   128b4:	mov	r2, r7
   128b8:	bl	139bc <table_get_float@@Base>
   128bc:	mov	r0, sl
   128c0:	mov	r1, r5
   128c4:	mov	r2, r7
   128c8:	bl	148c0 <table_set_float@@Base>
   128cc:	b	125a0 <table_dupe@@Base+0x110>
   128d0:	mov	r0, r4
   128d4:	mov	r1, r5
   128d8:	mov	r2, r7
   128dc:	bl	139d4 <table_get_double@@Base>
   128e0:	mov	r0, sl
   128e4:	mov	r1, r5
   128e8:	mov	r2, r7
   128ec:	bl	1494c <table_set_double@@Base>
   128f0:	b	125a0 <table_dupe@@Base+0x110>
   128f4:	mov	r0, r4
   128f8:	mov	r1, r5
   128fc:	mov	r2, r7
   12900:	bl	139ec <table_get_ldouble@@Base>
   12904:	mov	r0, sl
   12908:	mov	r1, r5
   1290c:	mov	r2, r7
   12910:	bl	149d4 <table_set_ldouble@@Base>
   12914:	b	125a0 <table_dupe@@Base+0x110>
   12918:	mov	r0, r4
   1291c:	mov	r1, r5
   12920:	mov	r2, r7
   12924:	bl	13a04 <table_get_char@@Base>
   12928:	mov	r3, r0
   1292c:	mov	r0, sl
   12930:	mov	r1, r5
   12934:	mov	r2, r7
   12938:	bl	14a7c <table_set_char@@Base>
   1293c:	b	125a0 <table_dupe@@Base+0x110>
   12940:	mov	r0, r4
   12944:	mov	r1, r5
   12948:	mov	r2, r7
   1294c:	bl	13a1c <table_get_uchar@@Base>
   12950:	mov	r3, r0
   12954:	mov	r0, sl
   12958:	mov	r1, r5
   1295c:	mov	r2, r7
   12960:	bl	14afc <table_set_uchar@@Base>
   12964:	b	125a0 <table_dupe@@Base+0x110>
   12968:	mov	r0, r4
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	bl	13a34 <table_get_string@@Base>
   12978:	mov	r3, r0
   1297c:	mov	r0, sl
   12980:	mov	r1, r5
   12984:	mov	r2, r7
   12988:	bl	14a5c <table_set_string@@Base>
   1298c:	b	125a0 <table_dupe@@Base+0x110>
   12990:	mov	r0, r4
   12994:	mov	r1, r5
   12998:	mov	r2, r7
   1299c:	bl	13824 <table_get_bool@@Base>
   129a0:	mov	r3, r0
   129a4:	mov	r0, sl
   129a8:	mov	r1, r5
   129ac:	mov	r2, r7
   129b0:	bl	14020 <table_set_bool@@Base>
   129b4:	b	125a0 <table_dupe@@Base+0x110>
   129b8:	mov	r0, sl
   129bc:	sub	sp, fp, #28
   129c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000129c4 <table_get_major_version@@Base>:
   129c4:	mov	r0, #0
   129c8:	bx	lr

000129cc <table_get_minor_version@@Base>:
   129cc:	mov	r0, #0
   129d0:	bx	lr

000129d4 <table_get_patch_version@@Base>:
   129d4:	mov	r0, #0
   129d8:	bx	lr

000129dc <table_get_version@@Base>:
   129dc:	ldr	r0, [pc, #4]	; 129e8 <table_get_version@@Base+0xc>
   129e0:	add	r0, pc, r0
   129e4:	bx	lr
   129e8:	andeq	r2, r0, lr, lsr pc

000129ec <table_get_callback_length@@Base>:
   129ec:	ldr	r0, [r0, #32]
   129f0:	bx	lr

000129f4 <table_register_callback@@Base>:
   129f4:	push	{r4, r5, r6, r7, fp, lr}
   129f8:	add	fp, sp, #16
   129fc:	mov	r5, r0
   12a00:	ldr	r0, [r0, #32]
   12a04:	mov	r4, r3
   12a08:	mov	r6, r2
   12a0c:	mov	r7, r1
   12a10:	cmp	r0, #1
   12a14:	blt	12a68 <table_register_callback@@Base+0x74>
   12a18:	ldr	r2, [r5, #36]	; 0x24
   12a1c:	mov	r1, #0
   12a20:	b	12a30 <table_register_callback@@Base+0x3c>
   12a24:	add	r1, r1, #1
   12a28:	cmp	r0, r1
   12a2c:	beq	12a68 <table_register_callback@@Base+0x74>
   12a30:	ldr	r3, [r2, r1, lsl #2]
   12a34:	cmp	r3, r7
   12a38:	bne	12a24 <table_register_callback@@Base+0x30>
   12a3c:	ldr	r3, [r5, #40]	; 0x28
   12a40:	ldr	r3, [r3, r1, lsl #2]
   12a44:	cmp	r3, r6
   12a48:	bne	12a24 <table_register_callback@@Base+0x30>
   12a4c:	cmp	r1, #0
   12a50:	beq	12a68 <table_register_callback@@Base+0x74>
   12a54:	ldr	r0, [r5, #44]	; 0x2c
   12a58:	ldr	r2, [r0, r1, lsl #2]
   12a5c:	orr	r2, r2, r4
   12a60:	str	r2, [r0, r1, lsl #2]
   12a64:	pop	{r4, r5, r6, r7, fp, pc}
   12a68:	ldr	r1, [r5, #48]	; 0x30
   12a6c:	udiv	r2, r0, r1
   12a70:	mls	r2, r2, r1, r0
   12a74:	cmp	r2, #0
   12a78:	bne	12ac4 <table_register_callback@@Base+0xd0>
   12a7c:	ldr	r2, [r5, #52]	; 0x34
   12a80:	ldr	r0, [r5, #36]	; 0x24
   12a84:	add	r1, r2, r1
   12a88:	str	r1, [r5, #52]	; 0x34
   12a8c:	lsl	r1, r1, #2
   12a90:	bl	11fec <realloc@plt>
   12a94:	str	r0, [r5, #36]	; 0x24
   12a98:	ldr	r1, [r5, #52]	; 0x34
   12a9c:	ldr	r0, [r5, #40]	; 0x28
   12aa0:	lsl	r1, r1, #2
   12aa4:	bl	11fec <realloc@plt>
   12aa8:	str	r0, [r5, #40]	; 0x28
   12aac:	ldr	r1, [r5, #52]	; 0x34
   12ab0:	ldr	r0, [r5, #44]	; 0x2c
   12ab4:	lsl	r1, r1, #2
   12ab8:	bl	11fec <realloc@plt>
   12abc:	str	r0, [r5, #44]	; 0x2c
   12ac0:	ldr	r0, [r5, #32]
   12ac4:	ldr	r1, [r5, #36]	; 0x24
   12ac8:	str	r7, [r1, r0, lsl #2]
   12acc:	ldr	r1, [r5, #40]	; 0x28
   12ad0:	str	r6, [r1, r0, lsl #2]
   12ad4:	ldr	r1, [r5, #44]	; 0x2c
   12ad8:	str	r4, [r1, r0, lsl #2]
   12adc:	ldr	r0, [r5, #32]
   12ae0:	add	r0, r0, #1
   12ae4:	str	r0, [r5, #32]
   12ae8:	pop	{r4, r5, r6, r7, fp, pc}

00012aec <table_unregister_callback@@Base>:
   12aec:	push	{r4, r5, r6, sl, fp, lr}
   12af0:	add	fp, sp, #16
   12af4:	ldr	r4, [r0, #32]
   12af8:	cmp	r4, #1
   12afc:	blt	12c48 <table_unregister_callback@@Base+0x15c>
   12b00:	ldr	r3, [r0, #36]	; 0x24
   12b04:	mov	r6, r0
   12b08:	mov	r0, #0
   12b0c:	b	12b1c <table_unregister_callback@@Base+0x30>
   12b10:	add	r0, r0, #1
   12b14:	cmp	r0, r4
   12b18:	beq	12c48 <table_unregister_callback@@Base+0x15c>
   12b1c:	ldr	r5, [r3, r0, lsl #2]
   12b20:	cmp	r5, r1
   12b24:	bne	12b10 <table_unregister_callback@@Base+0x24>
   12b28:	ldr	r5, [r6, #40]	; 0x28
   12b2c:	ldr	r5, [r5, r0, lsl #2]
   12b30:	cmp	r5, r2
   12b34:	bne	12b10 <table_unregister_callback@@Base+0x24>
   12b38:	sub	r1, r4, #1
   12b3c:	cmp	r0, r1
   12b40:	bge	12bc4 <table_unregister_callback@@Base+0xd8>
   12b44:	add	r2, r0, #1
   12b48:	ldr	r1, [r3, r2, lsl #2]
   12b4c:	str	r1, [r3, r0, lsl #2]
   12b50:	ldr	r1, [r6, #40]	; 0x28
   12b54:	ldr	r3, [r1, r2, lsl #2]
   12b58:	str	r3, [r1, r0, lsl #2]
   12b5c:	ldr	r1, [r6, #44]	; 0x2c
   12b60:	ldr	r3, [r1, r2, lsl #2]
   12b64:	str	r3, [r1, r0, lsl #2]
   12b68:	ldr	r1, [r6, #32]
   12b6c:	sub	r1, r1, #1
   12b70:	cmp	r2, r1
   12b74:	bge	12bc4 <table_unregister_callback@@Base+0xd8>
   12b78:	ldr	r1, [r6, #36]	; 0x24
   12b7c:	add	r1, r1, r0, lsl #2
   12b80:	ldr	r2, [r1, #8]
   12b84:	str	r2, [r1, #4]
   12b88:	ldr	r1, [r6, #40]	; 0x28
   12b8c:	add	r1, r1, r0, lsl #2
   12b90:	ldr	r2, [r1, #8]
   12b94:	str	r2, [r1, #4]
   12b98:	ldr	r1, [r6, #44]	; 0x2c
   12b9c:	add	r1, r1, r0, lsl #2
   12ba0:	ldr	r2, [r1, #8]
   12ba4:	str	r2, [r1, #4]
   12ba8:	add	r2, r0, #1
   12bac:	add	r0, r0, #2
   12bb0:	ldr	r1, [r6, #32]
   12bb4:	sub	r1, r1, #1
   12bb8:	cmp	r0, r1
   12bbc:	mov	r0, r2
   12bc0:	blt	12b78 <table_unregister_callback@@Base+0x8c>
   12bc4:	str	r1, [r6, #32]
   12bc8:	ldr	r2, [r6, #48]	; 0x30
   12bcc:	udiv	r0, r1, r2
   12bd0:	mls	r0, r0, r2, r1
   12bd4:	cmp	r0, #0
   12bd8:	popne	{r4, r5, r6, sl, fp, pc}
   12bdc:	ldr	r1, [r6, #52]	; 0x34
   12be0:	ldr	r0, [r6, #36]	; 0x24
   12be4:	subs	r1, r1, r2
   12be8:	str	r1, [r6, #52]	; 0x34
   12bec:	beq	12c24 <table_unregister_callback@@Base+0x138>
   12bf0:	lsl	r1, r1, #2
   12bf4:	bl	11fec <realloc@plt>
   12bf8:	str	r0, [r6, #36]	; 0x24
   12bfc:	ldr	r1, [r6, #52]	; 0x34
   12c00:	ldr	r0, [r6, #40]	; 0x28
   12c04:	lsl	r1, r1, #2
   12c08:	bl	11fec <realloc@plt>
   12c0c:	str	r0, [r6, #40]	; 0x28
   12c10:	ldr	r1, [r6, #52]	; 0x34
   12c14:	ldr	r0, [r6, #44]	; 0x2c
   12c18:	lsl	r1, r1, #2
   12c1c:	bl	11fec <realloc@plt>
   12c20:	b	12c44 <table_unregister_callback@@Base+0x158>
   12c24:	bl	11fd4 <free@plt>
   12c28:	ldr	r0, [r6, #40]	; 0x28
   12c2c:	bl	11fd4 <free@plt>
   12c30:	ldr	r0, [r6, #44]	; 0x2c
   12c34:	bl	11fd4 <free@plt>
   12c38:	mov	r0, #0
   12c3c:	str	r0, [r6, #36]	; 0x24
   12c40:	str	r0, [r6, #40]	; 0x28
   12c44:	str	r0, [r6, #44]	; 0x2c
   12c48:	pop	{r4, r5, r6, sl, fp, pc}

00012c4c <table_notify@@Base>:
   12c4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c50:	add	fp, sp, #24
   12c54:	sub	sp, sp, #8
   12c58:	mov	r7, r0
   12c5c:	ldr	r0, [r0, #32]
   12c60:	cmp	r0, #1
   12c64:	blt	12cc8 <table_notify@@Base+0x7c>
   12c68:	mov	r4, r3
   12c6c:	mov	r8, r2
   12c70:	mov	r9, r1
   12c74:	mov	r5, #0
   12c78:	b	12c88 <table_notify@@Base+0x3c>
   12c7c:	add	r5, r5, #1
   12c80:	cmp	r5, r0
   12c84:	bge	12cc8 <table_notify@@Base+0x7c>
   12c88:	ldr	r1, [r7, #44]	; 0x2c
   12c8c:	ldr	r1, [r1, r5, lsl #2]
   12c90:	tst	r1, r4
   12c94:	beq	12c7c <table_notify@@Base+0x30>
   12c98:	ldr	r0, [r7, #36]	; 0x24
   12c9c:	ldr	r1, [r7, #40]	; 0x28
   12ca0:	mov	r2, r8
   12ca4:	mov	r3, r4
   12ca8:	ldr	r6, [r0, r5, lsl #2]
   12cac:	ldr	r0, [r1, r5, lsl #2]
   12cb0:	mov	r1, r9
   12cb4:	str	r0, [sp]
   12cb8:	mov	r0, r7
   12cbc:	blx	r6
   12cc0:	ldr	r0, [r7, #32]
   12cc4:	b	12c7c <table_notify@@Base+0x30>
   12cc8:	sub	sp, fp, #24
   12ccc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012cd0 <table_column_init@@Base>:
   12cd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12cd4:	add	fp, sp, #24
   12cd8:	ldr	r7, [r0]
   12cdc:	mov	r0, r2
   12ce0:	mov	r4, r3
   12ce4:	mov	r5, r2
   12ce8:	mov	r6, r1
   12cec:	bl	12028 <strlen@plt>
   12cf0:	add	r0, r0, #1
   12cf4:	bl	12004 <malloc@plt>
   12cf8:	ldr	r8, [fp, #8]
   12cfc:	add	r6, r6, r6, lsl #1
   12d00:	cmp	r0, #0
   12d04:	str	r0, [r7, r6, lsl #2]
   12d08:	beq	12d14 <table_column_init@@Base+0x44>
   12d0c:	mov	r1, r5
   12d10:	bl	11ff8 <strcpy@plt>
   12d14:	add	r0, r7, r6, lsl #2
   12d18:	stmib	r0, {r4, r8}
   12d1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012d20 <table_get_col_ptr@@Base>:
   12d20:	ldr	r0, [r0]
   12d24:	add	r1, r1, r1, lsl #1
   12d28:	add	r0, r0, r1, lsl #2
   12d2c:	bx	lr

00012d30 <table_column_destroy@@Base>:
   12d30:	ldr	r0, [r0]
   12d34:	add	r1, r1, r1, lsl #1
   12d38:	ldr	r0, [r0, r1, lsl #2]
   12d3c:	cmp	r0, #0
   12d40:	bxeq	lr
   12d44:	b	11fd4 <free@plt>

00012d48 <table_get_column_length@@Base>:
   12d48:	ldr	r0, [r0, #4]
   12d4c:	bx	lr

00012d50 <table_get_column@@Base>:
   12d50:	push	{r4, r5, r6, r7, fp, lr}
   12d54:	add	fp, sp, #16
   12d58:	ldr	r6, [r0, #4]
   12d5c:	cmp	r6, #1
   12d60:	blt	12d9c <table_get_column@@Base+0x4c>
   12d64:	ldr	r7, [r0]
   12d68:	mov	r5, r1
   12d6c:	mov	r4, #0
   12d70:	ldr	r0, [r7]
   12d74:	mov	r1, r5
   12d78:	bl	11fbc <strcmp@plt>
   12d7c:	cmp	r0, #0
   12d80:	beq	12da0 <table_get_column@@Base+0x50>
   12d84:	add	r4, r4, #1
   12d88:	add	r7, r7, #12
   12d8c:	cmp	r6, r4
   12d90:	bne	12d70 <table_get_column@@Base+0x20>
   12d94:	mov	r4, r6
   12d98:	b	12da0 <table_get_column@@Base+0x50>
   12d9c:	mov	r4, #0
   12da0:	cmp	r4, r6
   12da4:	mvneq	r4, #0
   12da8:	mov	r0, r4
   12dac:	pop	{r4, r5, r6, r7, fp, pc}

00012db0 <table_get_column_name@@Base>:
   12db0:	ldr	r0, [r0]
   12db4:	add	r1, r1, r1, lsl #1
   12db8:	ldr	r0, [r0, r1, lsl #2]
   12dbc:	bx	lr

00012dc0 <table_get_column_data_type@@Base>:
   12dc0:	ldr	r0, [r0]
   12dc4:	add	r1, r1, r1, lsl #1
   12dc8:	add	r0, r0, r1, lsl #2
   12dcc:	ldr	r0, [r0, #4]
   12dd0:	bx	lr

00012dd4 <table_add_column@@Base>:
   12dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dd8:	add	fp, sp, #28
   12ddc:	sub	sp, sp, #4
   12de0:	mov	r4, r0
   12de4:	mov	r8, r1
   12de8:	ldr	r0, [r0, #4]
   12dec:	mov	r9, r2
   12df0:	ldr	r1, [r4, #8]
   12df4:	udiv	r2, r0, r1
   12df8:	mls	r0, r2, r1, r0
   12dfc:	cmp	r0, #0
   12e00:	bne	12e6c <table_add_column@@Base+0x98>
   12e04:	ldr	r2, [r4, #12]
   12e08:	ldr	r0, [r4]
   12e0c:	add	r1, r2, r1
   12e10:	str	r1, [r4, #12]
   12e14:	add	r1, r1, r1, lsl #1
   12e18:	lsl	r1, r1, #2
   12e1c:	bl	11fec <realloc@plt>
   12e20:	str	r0, [r4]
   12e24:	mov	r0, r4
   12e28:	bl	13ae8 <table_get_row_length@@Base>
   12e2c:	cmp	r0, #1
   12e30:	blt	12e6c <table_add_column@@Base+0x98>
   12e34:	mov	r6, r0
   12e38:	mov	r5, #0
   12e3c:	mov	r0, r4
   12e40:	mov	r1, r5
   12e44:	bl	13a80 <table_get_row_ptr@@Base>
   12e48:	ldr	r1, [r4, #12]
   12e4c:	mov	r7, r0
   12e50:	ldr	r0, [r0]
   12e54:	lsl	r1, r1, #2
   12e58:	bl	11fec <realloc@plt>
   12e5c:	add	r5, r5, #1
   12e60:	str	r0, [r7]
   12e64:	cmp	r6, r5
   12e68:	bne	12e3c <table_add_column@@Base+0x68>
   12e6c:	mov	r0, r4
   12e70:	bl	13ae8 <table_get_row_length@@Base>
   12e74:	ldr	r6, [r4, #4]
   12e78:	mov	r7, r0
   12e7c:	mov	r0, r9
   12e80:	bl	137f0 <table_get_default_compare_function_for_data_type@@Base>
   12e84:	ldr	r5, [r4]
   12e88:	mov	sl, r0
   12e8c:	mov	r0, r8
   12e90:	bl	12028 <strlen@plt>
   12e94:	add	r0, r0, #1
   12e98:	bl	12004 <malloc@plt>
   12e9c:	mov	r1, r8
   12ea0:	add	r8, r6, r6, lsl #1
   12ea4:	cmp	r0, #0
   12ea8:	str	r0, [r5, r8, lsl #2]
   12eac:	beq	12eb4 <table_add_column@@Base+0xe0>
   12eb0:	bl	11ff8 <strcpy@plt>
   12eb4:	add	r0, r5, r8, lsl #2
   12eb8:	cmp	r7, #1
   12ebc:	stmib	r0, {r9, sl}
   12ec0:	blt	12ee4 <table_add_column@@Base+0x110>
   12ec4:	mov	r5, #0
   12ec8:	mov	r0, r4
   12ecc:	mov	r1, r5
   12ed0:	mov	r2, r6
   12ed4:	bl	14cdc <table_cell_init@@Base>
   12ed8:	add	r5, r5, #1
   12edc:	cmp	r7, r5
   12ee0:	bne	12ec8 <table_add_column@@Base+0xf4>
   12ee4:	ldr	r2, [r4, #4]
   12ee8:	mov	r0, r4
   12eec:	mvn	r1, #0
   12ef0:	mov	r3, #8
   12ef4:	bl	12c4c <table_notify@@Base>
   12ef8:	ldr	r0, [r4, #4]
   12efc:	add	r1, r0, #1
   12f00:	str	r1, [r4, #4]
   12f04:	sub	sp, fp, #28
   12f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012f0c <table_remove_column@@Base>:
   12f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f10:	add	fp, sp, #28
   12f14:	sub	sp, sp, #12
   12f18:	mov	r5, r0
   12f1c:	ldr	r0, [r0]
   12f20:	add	r6, r1, r1, lsl #1
   12f24:	mov	r4, r1
   12f28:	ldr	r0, [r0, r6, lsl #2]
   12f2c:	cmp	r0, #0
   12f30:	beq	12f38 <table_remove_column@@Base+0x2c>
   12f34:	bl	11fd4 <free@plt>
   12f38:	ldr	r7, [r5, #4]
   12f3c:	sub	r8, r7, #1
   12f40:	cmp	r8, r4
   12f44:	ble	12f78 <table_remove_column@@Base+0x6c>
   12f48:	mvn	r0, r4
   12f4c:	lsl	r1, r6, #2
   12f50:	add	r0, r0, r7
   12f54:	ldr	r2, [r5]
   12f58:	subs	r0, r0, #1
   12f5c:	add	r2, r2, r1
   12f60:	add	r1, r1, #12
   12f64:	vldr	d16, [r2, #12]
   12f68:	ldr	r3, [r2, #20]
   12f6c:	str	r3, [r2, #8]
   12f70:	vstr	d16, [r2]
   12f74:	bne	12f54 <table_remove_column@@Base+0x48>
   12f78:	mov	r0, r5
   12f7c:	bl	13ae8 <table_get_row_length@@Base>
   12f80:	cmp	r0, #1
   12f84:	blt	13044 <table_remove_column@@Base+0x138>
   12f88:	mov	r9, r0
   12f8c:	mvn	r0, r4
   12f90:	sub	sl, r7, #2
   12f94:	add	r0, r7, r0
   12f98:	mov	r7, #0
   12f9c:	and	r0, r0, #1
   12fa0:	str	r0, [sp, #8]
   12fa4:	add	r0, r4, #1
   12fa8:	str	r0, [sp, #4]
   12fac:	b	12fbc <table_remove_column@@Base+0xb0>
   12fb0:	add	r7, r7, #1
   12fb4:	cmp	r7, r9
   12fb8:	beq	13044 <table_remove_column@@Base+0x138>
   12fbc:	mov	r0, r5
   12fc0:	mov	r1, r7
   12fc4:	mov	r2, r4
   12fc8:	bl	14d18 <table_cell_destroy@@Base>
   12fcc:	mov	r0, r5
   12fd0:	mov	r1, r7
   12fd4:	bl	13a80 <table_get_row_ptr@@Base>
   12fd8:	cmp	r8, r4
   12fdc:	ble	12fb0 <table_remove_column@@Base+0xa4>
   12fe0:	ldr	r1, [sp, #8]
   12fe4:	mov	r2, r4
   12fe8:	cmp	r1, #0
   12fec:	beq	13004 <table_remove_column@@Base+0xf8>
   12ff0:	ldr	r1, [r0]
   12ff4:	add	r2, r1, r4, lsl #2
   12ff8:	ldr	r2, [r2, #4]
   12ffc:	str	r2, [r1, r4, lsl #2]
   13000:	ldr	r2, [sp, #4]
   13004:	cmp	sl, r4
   13008:	beq	12fb0 <table_remove_column@@Base+0xa4>
   1300c:	sub	r1, r8, r2
   13010:	lsl	r2, r2, #2
   13014:	ldr	r3, [r0]
   13018:	subs	r1, r1, #2
   1301c:	add	r6, r3, r2
   13020:	ldr	r6, [r6, #4]
   13024:	str	r6, [r3, r2]
   13028:	ldr	r3, [r0]
   1302c:	add	r3, r3, r2
   13030:	add	r2, r2, #8
   13034:	ldr	r6, [r3, #8]
   13038:	str	r6, [r3, #4]
   1303c:	bne	13014 <table_remove_column@@Base+0x108>
   13040:	b	12fb0 <table_remove_column@@Base+0xa4>
   13044:	ldmib	r5, {r0, r1}
   13048:	sub	r0, r0, #1
   1304c:	udiv	r2, r0, r1
   13050:	str	r0, [r5, #4]
   13054:	mls	r0, r2, r1, r0
   13058:	cmp	r0, #0
   1305c:	bne	130c8 <table_remove_column@@Base+0x1bc>
   13060:	ldr	r2, [r5, #12]
   13064:	ldr	r0, [r5]
   13068:	sub	r1, r2, r1
   1306c:	str	r1, [r5, #12]
   13070:	add	r1, r1, r1, lsl #1
   13074:	lsl	r1, r1, #2
   13078:	bl	11fec <realloc@plt>
   1307c:	str	r0, [r5]
   13080:	mov	r0, r5
   13084:	bl	13ae8 <table_get_row_length@@Base>
   13088:	cmp	r0, #1
   1308c:	blt	130c8 <table_remove_column@@Base+0x1bc>
   13090:	mov	r8, r0
   13094:	mov	r7, #0
   13098:	mov	r0, r5
   1309c:	mov	r1, r7
   130a0:	bl	13a80 <table_get_row_ptr@@Base>
   130a4:	ldr	r1, [r5, #12]
   130a8:	mov	r6, r0
   130ac:	ldr	r0, [r0]
   130b0:	lsl	r1, r1, #2
   130b4:	bl	11fec <realloc@plt>
   130b8:	add	r7, r7, #1
   130bc:	str	r0, [r6]
   130c0:	cmp	r8, r7
   130c4:	bne	13098 <table_remove_column@@Base+0x18c>
   130c8:	mov	r0, r5
   130cc:	mvn	r1, #0
   130d0:	mov	r2, r4
   130d4:	mov	r3, #16
   130d8:	bl	12c4c <table_notify@@Base>
   130dc:	mov	r0, #0
   130e0:	sub	sp, fp, #28
   130e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000130e8 <table_get_column_compare_function@@Base>:
   130e8:	ldr	r0, [r0]
   130ec:	add	r1, r1, r1, lsl #1
   130f0:	add	r0, r0, r1, lsl #2
   130f4:	ldr	r0, [r0, #8]
   130f8:	bx	lr

000130fc <table_set_column_compare_function@@Base>:
   130fc:	ldr	r0, [r0]
   13100:	add	r1, r1, r1, lsl #1
   13104:	add	r0, r0, r1, lsl #2
   13108:	str	r2, [r0, #8]
   1310c:	bx	lr

00013110 <table_compare_bool@@Base>:
   13110:	cmp	r0, #0
   13114:	beq	13148 <table_compare_bool@@Base+0x38>
   13118:	cmp	r1, #0
   1311c:	moveq	r1, #1
   13120:	moveq	r0, r1
   13124:	bxeq	lr
   13128:	ldrb	r2, [r1]
   1312c:	ldrb	r0, [r0]
   13130:	mov	r1, #0
   13134:	cmp	r0, r2
   13138:	mvncc	r1, #0
   1313c:	movwhi	r1, #1
   13140:	mov	r0, r1
   13144:	bx	lr
   13148:	cmp	r1, #0
   1314c:	mvnne	r1, #0
   13150:	mov	r0, r1
   13154:	bx	lr

00013158 <table_compare_int@@Base>:
   13158:	cmp	r0, #0
   1315c:	beq	13190 <table_compare_int@@Base+0x38>
   13160:	cmp	r1, #0
   13164:	moveq	r1, #1
   13168:	moveq	r0, r1
   1316c:	bxeq	lr
   13170:	ldr	r2, [r1]
   13174:	ldr	r0, [r0]
   13178:	mov	r1, #0
   1317c:	cmp	r0, r2
   13180:	mvnlt	r1, #0
   13184:	movwgt	r1, #1
   13188:	mov	r0, r1
   1318c:	bx	lr
   13190:	cmp	r1, #0
   13194:	mvnne	r1, #0
   13198:	mov	r0, r1
   1319c:	bx	lr

000131a0 <table_compare_uint@@Base>:
   131a0:	cmp	r0, #0
   131a4:	beq	131d8 <table_compare_uint@@Base+0x38>
   131a8:	cmp	r1, #0
   131ac:	moveq	r1, #1
   131b0:	moveq	r0, r1
   131b4:	bxeq	lr
   131b8:	ldr	r2, [r1]
   131bc:	ldr	r0, [r0]
   131c0:	mov	r1, #0
   131c4:	cmp	r0, r2
   131c8:	mvncc	r1, #0
   131cc:	movwhi	r1, #1
   131d0:	mov	r0, r1
   131d4:	bx	lr
   131d8:	cmp	r1, #0
   131dc:	mvnne	r1, #0
   131e0:	mov	r0, r1
   131e4:	bx	lr

000131e8 <table_compare_int8@@Base>:
   131e8:	cmp	r0, #0
   131ec:	beq	13220 <table_compare_int8@@Base+0x38>
   131f0:	cmp	r1, #0
   131f4:	moveq	r1, #1
   131f8:	moveq	r0, r1
   131fc:	bxeq	lr
   13200:	ldrsb	r2, [r1]
   13204:	ldrsb	r0, [r0]
   13208:	mov	r1, #0
   1320c:	cmp	r0, r2
   13210:	mvnlt	r1, #0
   13214:	movwgt	r1, #1
   13218:	mov	r0, r1
   1321c:	bx	lr
   13220:	cmp	r1, #0
   13224:	mvnne	r1, #0
   13228:	mov	r0, r1
   1322c:	bx	lr

00013230 <table_compare_uint8@@Base>:
   13230:	cmp	r0, #0
   13234:	beq	13268 <table_compare_uint8@@Base+0x38>
   13238:	cmp	r1, #0
   1323c:	moveq	r1, #1
   13240:	moveq	r0, r1
   13244:	bxeq	lr
   13248:	ldrb	r2, [r1]
   1324c:	ldrb	r0, [r0]
   13250:	mov	r1, #0
   13254:	cmp	r0, r2
   13258:	mvncc	r1, #0
   1325c:	movwhi	r1, #1
   13260:	mov	r0, r1
   13264:	bx	lr
   13268:	cmp	r1, #0
   1326c:	mvnne	r1, #0
   13270:	mov	r0, r1
   13274:	bx	lr

00013278 <table_compare_int16@@Base>:
   13278:	cmp	r0, #0
   1327c:	beq	132b0 <table_compare_int16@@Base+0x38>
   13280:	cmp	r1, #0
   13284:	moveq	r1, #1
   13288:	moveq	r0, r1
   1328c:	bxeq	lr
   13290:	ldrsh	r2, [r1]
   13294:	ldrsh	r0, [r0]
   13298:	mov	r1, #0
   1329c:	cmp	r0, r2
   132a0:	mvnlt	r1, #0
   132a4:	movwgt	r1, #1
   132a8:	mov	r0, r1
   132ac:	bx	lr
   132b0:	cmp	r1, #0
   132b4:	mvnne	r1, #0
   132b8:	mov	r0, r1
   132bc:	bx	lr

000132c0 <table_compare_uint16@@Base>:
   132c0:	cmp	r0, #0
   132c4:	beq	132f8 <table_compare_uint16@@Base+0x38>
   132c8:	cmp	r1, #0
   132cc:	moveq	r1, #1
   132d0:	moveq	r0, r1
   132d4:	bxeq	lr
   132d8:	ldrh	r2, [r1]
   132dc:	ldrh	r0, [r0]
   132e0:	mov	r1, #0
   132e4:	cmp	r0, r2
   132e8:	mvncc	r1, #0
   132ec:	movwhi	r1, #1
   132f0:	mov	r0, r1
   132f4:	bx	lr
   132f8:	cmp	r1, #0
   132fc:	mvnne	r1, #0
   13300:	mov	r0, r1
   13304:	bx	lr

00013308 <table_compare_int32@@Base>:
   13308:	cmp	r0, #0
   1330c:	beq	13340 <table_compare_int32@@Base+0x38>
   13310:	cmp	r1, #0
   13314:	moveq	r1, #1
   13318:	moveq	r0, r1
   1331c:	bxeq	lr
   13320:	ldr	r2, [r1]
   13324:	ldr	r0, [r0]
   13328:	mov	r1, #0
   1332c:	cmp	r0, r2
   13330:	mvnlt	r1, #0
   13334:	movwgt	r1, #1
   13338:	mov	r0, r1
   1333c:	bx	lr
   13340:	cmp	r1, #0
   13344:	mvnne	r1, #0
   13348:	mov	r0, r1
   1334c:	bx	lr

00013350 <table_compare_uint32@@Base>:
   13350:	cmp	r0, #0
   13354:	beq	13388 <table_compare_uint32@@Base+0x38>
   13358:	cmp	r1, #0
   1335c:	moveq	r1, #1
   13360:	moveq	r0, r1
   13364:	bxeq	lr
   13368:	ldr	r2, [r1]
   1336c:	ldr	r0, [r0]
   13370:	mov	r1, #0
   13374:	cmp	r0, r2
   13378:	mvncc	r1, #0
   1337c:	movwhi	r1, #1
   13380:	mov	r0, r1
   13384:	bx	lr
   13388:	cmp	r1, #0
   1338c:	mvnne	r1, #0
   13390:	mov	r0, r1
   13394:	bx	lr

00013398 <table_compare_int64@@Base>:
   13398:	cmp	r0, #0
   1339c:	beq	133f0 <table_compare_int64@@Base+0x58>
   133a0:	cmp	r1, #0
   133a4:	moveq	r1, #1
   133a8:	moveq	r0, r1
   133ac:	bxeq	lr
   133b0:	push	{r5, r7, fp, lr}
   133b4:	add	fp, sp, #8
   133b8:	ldm	r0, {r0, r5}
   133bc:	ldm	r1, {r2, r7}
   133c0:	mov	r1, #0
   133c4:	subs	r3, r0, r2
   133c8:	sbcs	r3, r5, r7
   133cc:	movwlt	r1, #1
   133d0:	cmp	r1, #0
   133d4:	mvnne	r1, #0
   133d8:	subs	r0, r2, r0
   133dc:	sbcs	r0, r7, r5
   133e0:	movwlt	r1, #1
   133e4:	pop	{r5, r7, fp, lr}
   133e8:	mov	r0, r1
   133ec:	bx	lr
   133f0:	cmp	r1, #0
   133f4:	mvnne	r1, #0
   133f8:	mov	r0, r1
   133fc:	bx	lr

00013400 <table_compare_uint64@@Base>:
   13400:	cmp	r0, #0
   13404:	beq	13458 <table_compare_uint64@@Base+0x58>
   13408:	cmp	r1, #0
   1340c:	moveq	r1, #1
   13410:	moveq	r0, r1
   13414:	bxeq	lr
   13418:	push	{r5, r7, fp, lr}
   1341c:	add	fp, sp, #8
   13420:	ldm	r0, {r0, r5}
   13424:	ldm	r1, {r2, r7}
   13428:	mov	r1, #0
   1342c:	subs	r3, r0, r2
   13430:	sbcs	r3, r5, r7
   13434:	movwcc	r1, #1
   13438:	cmp	r1, #0
   1343c:	mvnne	r1, #0
   13440:	subs	r0, r2, r0
   13444:	sbcs	r0, r7, r5
   13448:	movwcc	r1, #1
   1344c:	pop	{r5, r7, fp, lr}
   13450:	mov	r0, r1
   13454:	bx	lr
   13458:	cmp	r1, #0
   1345c:	mvnne	r1, #0
   13460:	mov	r0, r1
   13464:	bx	lr

00013468 <table_compare_short@@Base>:
   13468:	cmp	r0, #0
   1346c:	beq	134a0 <table_compare_short@@Base+0x38>
   13470:	cmp	r1, #0
   13474:	moveq	r1, #1
   13478:	moveq	r0, r1
   1347c:	bxeq	lr
   13480:	ldrsh	r2, [r1]
   13484:	ldrsh	r0, [r0]
   13488:	mov	r1, #0
   1348c:	cmp	r0, r2
   13490:	mvnlt	r1, #0
   13494:	movwgt	r1, #1
   13498:	mov	r0, r1
   1349c:	bx	lr
   134a0:	cmp	r1, #0
   134a4:	mvnne	r1, #0
   134a8:	mov	r0, r1
   134ac:	bx	lr

000134b0 <table_compare_ushort@@Base>:
   134b0:	cmp	r0, #0
   134b4:	beq	134e8 <table_compare_ushort@@Base+0x38>
   134b8:	cmp	r1, #0
   134bc:	moveq	r1, #1
   134c0:	moveq	r0, r1
   134c4:	bxeq	lr
   134c8:	ldrh	r2, [r1]
   134cc:	ldrh	r0, [r0]
   134d0:	mov	r1, #0
   134d4:	cmp	r0, r2
   134d8:	mvncc	r1, #0
   134dc:	movwhi	r1, #1
   134e0:	mov	r0, r1
   134e4:	bx	lr
   134e8:	cmp	r1, #0
   134ec:	mvnne	r1, #0
   134f0:	mov	r0, r1
   134f4:	bx	lr

000134f8 <table_compare_long@@Base>:
   134f8:	cmp	r0, #0
   134fc:	beq	13530 <table_compare_long@@Base+0x38>
   13500:	cmp	r1, #0
   13504:	moveq	r1, #1
   13508:	moveq	r0, r1
   1350c:	bxeq	lr
   13510:	ldr	r2, [r1]
   13514:	ldr	r0, [r0]
   13518:	mov	r1, #0
   1351c:	cmp	r0, r2
   13520:	mvnlt	r1, #0
   13524:	movwgt	r1, #1
   13528:	mov	r0, r1
   1352c:	bx	lr
   13530:	cmp	r1, #0
   13534:	mvnne	r1, #0
   13538:	mov	r0, r1
   1353c:	bx	lr

00013540 <table_compare_ulong@@Base>:
   13540:	cmp	r0, #0
   13544:	beq	13578 <table_compare_ulong@@Base+0x38>
   13548:	cmp	r1, #0
   1354c:	moveq	r1, #1
   13550:	moveq	r0, r1
   13554:	bxeq	lr
   13558:	ldr	r2, [r1]
   1355c:	ldr	r0, [r0]
   13560:	mov	r1, #0
   13564:	cmp	r0, r2
   13568:	mvncc	r1, #0
   1356c:	movwhi	r1, #1
   13570:	mov	r0, r1
   13574:	bx	lr
   13578:	cmp	r1, #0
   1357c:	mvnne	r1, #0
   13580:	mov	r0, r1
   13584:	bx	lr

00013588 <table_compare_llong@@Base>:
   13588:	cmp	r0, #0
   1358c:	beq	135e0 <table_compare_llong@@Base+0x58>
   13590:	cmp	r1, #0
   13594:	moveq	r1, #1
   13598:	moveq	r0, r1
   1359c:	bxeq	lr
   135a0:	push	{r5, r7, fp, lr}
   135a4:	add	fp, sp, #8
   135a8:	ldm	r0, {r0, r5}
   135ac:	ldm	r1, {r2, r7}
   135b0:	mov	r1, #0
   135b4:	subs	r3, r0, r2
   135b8:	sbcs	r3, r5, r7
   135bc:	movwlt	r1, #1
   135c0:	cmp	r1, #0
   135c4:	mvnne	r1, #0
   135c8:	subs	r0, r2, r0
   135cc:	sbcs	r0, r7, r5
   135d0:	movwlt	r1, #1
   135d4:	pop	{r5, r7, fp, lr}
   135d8:	mov	r0, r1
   135dc:	bx	lr
   135e0:	cmp	r1, #0
   135e4:	mvnne	r1, #0
   135e8:	mov	r0, r1
   135ec:	bx	lr

000135f0 <table_compare_ullong@@Base>:
   135f0:	cmp	r0, #0
   135f4:	beq	13628 <table_compare_ullong@@Base+0x38>
   135f8:	cmp	r1, #0
   135fc:	moveq	r1, #1
   13600:	moveq	r0, r1
   13604:	bxeq	lr
   13608:	ldr	r2, [r1]
   1360c:	ldr	r0, [r0]
   13610:	mov	r1, #0
   13614:	cmp	r0, r2
   13618:	mvncc	r1, #0
   1361c:	movwhi	r1, #1
   13620:	mov	r0, r1
   13624:	bx	lr
   13628:	cmp	r1, #0
   1362c:	mvnne	r1, #0
   13630:	mov	r0, r1
   13634:	bx	lr

00013638 <table_compare_float@@Base>:
   13638:	cmp	r0, #0
   1363c:	beq	13674 <table_compare_float@@Base+0x3c>
   13640:	cmp	r1, #0
   13644:	moveq	r1, #1
   13648:	moveq	r0, r1
   1364c:	bxeq	lr
   13650:	vldr	s0, [r1]
   13654:	vldr	s2, [r0]
   13658:	mov	r1, #0
   1365c:	vcmpe.f32	s2, s0
   13660:	vmrs	APSR_nzcv, fpscr
   13664:	mvnmi	r1, #0
   13668:	movwgt	r1, #1
   1366c:	mov	r0, r1
   13670:	bx	lr
   13674:	cmp	r1, #0
   13678:	mvnne	r1, #0
   1367c:	mov	r0, r1
   13680:	bx	lr

00013684 <table_compare_double@@Base>:
   13684:	cmp	r0, #0
   13688:	beq	136c0 <table_compare_double@@Base+0x3c>
   1368c:	cmp	r1, #0
   13690:	moveq	r1, #1
   13694:	moveq	r0, r1
   13698:	bxeq	lr
   1369c:	vldr	d16, [r1]
   136a0:	vldr	d17, [r0]
   136a4:	mov	r1, #0
   136a8:	vcmpe.f64	d17, d16
   136ac:	vmrs	APSR_nzcv, fpscr
   136b0:	mvnmi	r1, #0
   136b4:	movwgt	r1, #1
   136b8:	mov	r0, r1
   136bc:	bx	lr
   136c0:	cmp	r1, #0
   136c4:	mvnne	r1, #0
   136c8:	mov	r0, r1
   136cc:	bx	lr

000136d0 <table_compare_ldouble@@Base>:
   136d0:	cmp	r0, #0
   136d4:	beq	1370c <table_compare_ldouble@@Base+0x3c>
   136d8:	cmp	r1, #0
   136dc:	moveq	r1, #1
   136e0:	moveq	r0, r1
   136e4:	bxeq	lr
   136e8:	vldr	d16, [r1]
   136ec:	vldr	d17, [r0]
   136f0:	mov	r1, #0
   136f4:	vcmpe.f64	d17, d16
   136f8:	vmrs	APSR_nzcv, fpscr
   136fc:	mvnmi	r1, #0
   13700:	movwgt	r1, #1
   13704:	mov	r0, r1
   13708:	bx	lr
   1370c:	cmp	r1, #0
   13710:	mvnne	r1, #0
   13714:	mov	r0, r1
   13718:	bx	lr

0001371c <table_compare_char@@Base>:
   1371c:	cmp	r0, #0
   13720:	beq	13754 <table_compare_char@@Base+0x38>
   13724:	cmp	r1, #0
   13728:	moveq	r1, #1
   1372c:	moveq	r0, r1
   13730:	bxeq	lr
   13734:	ldrb	r2, [r1]
   13738:	ldrb	r0, [r0]
   1373c:	mov	r1, #0
   13740:	cmp	r0, r2
   13744:	mvncc	r1, #0
   13748:	movwhi	r1, #1
   1374c:	mov	r0, r1
   13750:	bx	lr
   13754:	cmp	r1, #0
   13758:	mvnne	r1, #0
   1375c:	mov	r0, r1
   13760:	bx	lr

00013764 <table_compare_uchar@@Base>:
   13764:	cmp	r0, #0
   13768:	beq	1379c <table_compare_uchar@@Base+0x38>
   1376c:	cmp	r1, #0
   13770:	moveq	r1, #1
   13774:	moveq	r0, r1
   13778:	bxeq	lr
   1377c:	ldrb	r2, [r1]
   13780:	ldrb	r0, [r0]
   13784:	mov	r1, #0
   13788:	cmp	r0, r2
   1378c:	mvncc	r1, #0
   13790:	movwhi	r1, #1
   13794:	mov	r0, r1
   13798:	bx	lr
   1379c:	cmp	r1, #0
   137a0:	mvnne	r1, #0
   137a4:	mov	r0, r1
   137a8:	bx	lr

000137ac <table_compare_string@@Base>:
   137ac:	cmp	r0, #0
   137b0:	beq	137c8 <table_compare_string@@Base+0x1c>
   137b4:	cmp	r1, #0
   137b8:	moveq	r1, #1
   137bc:	moveq	r0, r1
   137c0:	bxeq	lr
   137c4:	b	11fbc <strcmp@plt>
   137c8:	cmp	r1, #0
   137cc:	mvnne	r1, #0
   137d0:	mov	r0, r1
   137d4:	bx	lr

000137d8 <table_compare_ptr@@Base>:
   137d8:	cmp	r0, r1
   137dc:	mov	r2, #0
   137e0:	mvncc	r2, #0
   137e4:	movwhi	r2, #1
   137e8:	mov	r0, r2
   137ec:	bx	lr

000137f0 <table_get_default_compare_function_for_data_type@@Base>:
   137f0:	cmp	r0, #23
   137f4:	movhi	r0, #0
   137f8:	bxhi	lr
   137fc:	ldr	r1, [pc, #8]	; 1380c <table_get_default_compare_function_for_data_type@@Base+0x1c>
   13800:	add	r1, pc, r1
   13804:	ldr	r0, [r1, r0, lsl #2]
   13808:	bx	lr
   1380c:	andeq	r2, r1, r8, lsr #13

00013810 <table_get@@Base>:
   13810:	push	{fp, lr}
   13814:	mov	fp, sp
   13818:	bl	14cfc <table_get_cell_ptr@@Base>
   1381c:	ldr	r0, [r0]
   13820:	pop	{fp, pc}

00013824 <table_get_bool@@Base>:
   13824:	push	{fp, lr}
   13828:	mov	fp, sp
   1382c:	bl	14cfc <table_get_cell_ptr@@Base>
   13830:	ldr	r0, [r0]
   13834:	ldrb	r0, [r0]
   13838:	pop	{fp, pc}

0001383c <table_get_int@@Base>:
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	bl	14cfc <table_get_cell_ptr@@Base>
   13848:	ldr	r0, [r0]
   1384c:	ldr	r0, [r0]
   13850:	pop	{fp, pc}

00013854 <table_get_uint@@Base>:
   13854:	push	{fp, lr}
   13858:	mov	fp, sp
   1385c:	bl	14cfc <table_get_cell_ptr@@Base>
   13860:	ldr	r0, [r0]
   13864:	ldr	r0, [r0]
   13868:	pop	{fp, pc}

0001386c <table_get_int8@@Base>:
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	14cfc <table_get_cell_ptr@@Base>
   13878:	ldr	r0, [r0]
   1387c:	ldrsb	r0, [r0]
   13880:	pop	{fp, pc}

00013884 <table_get_uint8@@Base>:
   13884:	push	{fp, lr}
   13888:	mov	fp, sp
   1388c:	bl	14cfc <table_get_cell_ptr@@Base>
   13890:	ldr	r0, [r0]
   13894:	ldrb	r0, [r0]
   13898:	pop	{fp, pc}

0001389c <table_get_int16@@Base>:
   1389c:	push	{fp, lr}
   138a0:	mov	fp, sp
   138a4:	bl	14cfc <table_get_cell_ptr@@Base>
   138a8:	ldr	r0, [r0]
   138ac:	ldrsh	r0, [r0]
   138b0:	pop	{fp, pc}

000138b4 <table_get_uint16@@Base>:
   138b4:	push	{fp, lr}
   138b8:	mov	fp, sp
   138bc:	bl	14cfc <table_get_cell_ptr@@Base>
   138c0:	ldr	r0, [r0]
   138c4:	ldrh	r0, [r0]
   138c8:	pop	{fp, pc}

000138cc <table_get_int32@@Base>:
   138cc:	push	{fp, lr}
   138d0:	mov	fp, sp
   138d4:	bl	14cfc <table_get_cell_ptr@@Base>
   138d8:	ldr	r0, [r0]
   138dc:	ldr	r0, [r0]
   138e0:	pop	{fp, pc}

000138e4 <table_get_uint32@@Base>:
   138e4:	push	{fp, lr}
   138e8:	mov	fp, sp
   138ec:	bl	14cfc <table_get_cell_ptr@@Base>
   138f0:	ldr	r0, [r0]
   138f4:	ldr	r0, [r0]
   138f8:	pop	{fp, pc}

000138fc <table_get_int64@@Base>:
   138fc:	push	{fp, lr}
   13900:	mov	fp, sp
   13904:	bl	14cfc <table_get_cell_ptr@@Base>
   13908:	ldr	r0, [r0]
   1390c:	ldrd	r0, [r0]
   13910:	pop	{fp, pc}

00013914 <table_get_uint64@@Base>:
   13914:	push	{fp, lr}
   13918:	mov	fp, sp
   1391c:	bl	14cfc <table_get_cell_ptr@@Base>
   13920:	ldr	r0, [r0]
   13924:	ldrd	r0, [r0]
   13928:	pop	{fp, pc}

0001392c <table_get_short@@Base>:
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	bl	14cfc <table_get_cell_ptr@@Base>
   13938:	ldr	r0, [r0]
   1393c:	ldrsh	r0, [r0]
   13940:	pop	{fp, pc}

00013944 <table_get_ushort@@Base>:
   13944:	push	{fp, lr}
   13948:	mov	fp, sp
   1394c:	bl	14cfc <table_get_cell_ptr@@Base>
   13950:	ldr	r0, [r0]
   13954:	ldrh	r0, [r0]
   13958:	pop	{fp, pc}

0001395c <table_get_long@@Base>:
   1395c:	push	{fp, lr}
   13960:	mov	fp, sp
   13964:	bl	14cfc <table_get_cell_ptr@@Base>
   13968:	ldr	r0, [r0]
   1396c:	ldr	r0, [r0]
   13970:	pop	{fp, pc}

00013974 <table_get_ulong@@Base>:
   13974:	push	{fp, lr}
   13978:	mov	fp, sp
   1397c:	bl	14cfc <table_get_cell_ptr@@Base>
   13980:	ldr	r0, [r0]
   13984:	ldr	r0, [r0]
   13988:	pop	{fp, pc}

0001398c <table_get_llong@@Base>:
   1398c:	push	{fp, lr}
   13990:	mov	fp, sp
   13994:	bl	14cfc <table_get_cell_ptr@@Base>
   13998:	ldr	r0, [r0]
   1399c:	ldrd	r0, [r0]
   139a0:	pop	{fp, pc}

000139a4 <table_get_ullong@@Base>:
   139a4:	push	{fp, lr}
   139a8:	mov	fp, sp
   139ac:	bl	14cfc <table_get_cell_ptr@@Base>
   139b0:	ldr	r0, [r0]
   139b4:	ldrd	r0, [r0]
   139b8:	pop	{fp, pc}

000139bc <table_get_float@@Base>:
   139bc:	push	{fp, lr}
   139c0:	mov	fp, sp
   139c4:	bl	14cfc <table_get_cell_ptr@@Base>
   139c8:	ldr	r0, [r0]
   139cc:	vldr	s0, [r0]
   139d0:	pop	{fp, pc}

000139d4 <table_get_double@@Base>:
   139d4:	push	{fp, lr}
   139d8:	mov	fp, sp
   139dc:	bl	14cfc <table_get_cell_ptr@@Base>
   139e0:	ldr	r0, [r0]
   139e4:	vldr	d0, [r0]
   139e8:	pop	{fp, pc}

000139ec <table_get_ldouble@@Base>:
   139ec:	push	{fp, lr}
   139f0:	mov	fp, sp
   139f4:	bl	14cfc <table_get_cell_ptr@@Base>
   139f8:	ldr	r0, [r0]
   139fc:	vldr	d0, [r0]
   13a00:	pop	{fp, pc}

00013a04 <table_get_char@@Base>:
   13a04:	push	{fp, lr}
   13a08:	mov	fp, sp
   13a0c:	bl	14cfc <table_get_cell_ptr@@Base>
   13a10:	ldr	r0, [r0]
   13a14:	ldrb	r0, [r0]
   13a18:	pop	{fp, pc}

00013a1c <table_get_uchar@@Base>:
   13a1c:	push	{fp, lr}
   13a20:	mov	fp, sp
   13a24:	bl	14cfc <table_get_cell_ptr@@Base>
   13a28:	ldr	r0, [r0]
   13a2c:	ldrb	r0, [r0]
   13a30:	pop	{fp, pc}

00013a34 <table_get_string@@Base>:
   13a34:	push	{fp, lr}
   13a38:	mov	fp, sp
   13a3c:	bl	14cfc <table_get_cell_ptr@@Base>
   13a40:	ldr	r0, [r0]
   13a44:	pop	{fp, pc}

00013a48 <table_get_ptr@@Base>:
   13a48:	push	{fp, lr}
   13a4c:	mov	fp, sp
   13a50:	bl	14cfc <table_get_cell_ptr@@Base>
   13a54:	ldr	r0, [r0]
   13a58:	pop	{fp, pc}

00013a5c <table_row_init@@Base>:
   13a5c:	push	{r4, r5, fp, lr}
   13a60:	add	fp, sp, #8
   13a64:	mov	r4, r1
   13a68:	ldr	r1, [r0, #12]
   13a6c:	ldr	r5, [r0, #16]
   13a70:	lsl	r0, r1, #2
   13a74:	bl	12004 <malloc@plt>
   13a78:	str	r0, [r5, r4, lsl #2]
   13a7c:	pop	{r4, r5, fp, pc}

00013a80 <table_get_row_ptr@@Base>:
   13a80:	ldr	r0, [r0, #16]
   13a84:	add	r0, r0, r1, lsl #2
   13a88:	bx	lr

00013a8c <table_row_destroy@@Base>:
   13a8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a90:	add	fp, sp, #24
   13a94:	mov	r4, r1
   13a98:	mov	r5, r0
   13a9c:	bl	12d48 <table_get_column_length@@Base>
   13aa0:	ldr	r8, [r5, #16]
   13aa4:	cmp	r0, #1
   13aa8:	blt	13ad0 <table_row_destroy@@Base+0x44>
   13aac:	mov	r6, r0
   13ab0:	mov	r7, #0
   13ab4:	mov	r0, r5
   13ab8:	mov	r1, r4
   13abc:	mov	r2, r7
   13ac0:	bl	14d18 <table_cell_destroy@@Base>
   13ac4:	add	r7, r7, #1
   13ac8:	cmp	r6, r7
   13acc:	bne	13ab4 <table_row_destroy@@Base+0x28>
   13ad0:	ldr	r0, [r8, r4, lsl #2]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13ae4 <table_row_destroy@@Base+0x58>
   13adc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ae0:	b	11fd4 <free@plt>
   13ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ae8 <table_get_row_length@@Base>:
   13ae8:	ldr	r0, [r0, #20]
   13aec:	bx	lr

00013af0 <table_add_row@@Base>:
   13af0:	push	{r4, r5, r6, r7, fp, lr}
   13af4:	add	fp, sp, #16
   13af8:	ldr	r5, [r0, #20]
   13afc:	ldr	r1, [r0, #24]
   13b00:	mov	r4, r0
   13b04:	udiv	r0, r5, r1
   13b08:	mls	r0, r0, r1, r5
   13b0c:	cmp	r0, #0
   13b10:	bne	13b34 <table_add_row@@Base+0x44>
   13b14:	ldr	r2, [r4, #28]
   13b18:	ldr	r0, [r4, #16]
   13b1c:	add	r1, r2, r1
   13b20:	str	r1, [r4, #28]
   13b24:	lsl	r1, r1, #2
   13b28:	bl	11fec <realloc@plt>
   13b2c:	str	r0, [r4, #16]
   13b30:	ldr	r5, [r4, #20]
   13b34:	mov	r0, r4
   13b38:	bl	12d48 <table_get_column_length@@Base>
   13b3c:	mov	r6, r0
   13b40:	ldr	r0, [r4, #12]
   13b44:	ldr	r7, [r4, #16]
   13b48:	lsl	r0, r0, #2
   13b4c:	bl	12004 <malloc@plt>
   13b50:	cmp	r6, #1
   13b54:	str	r0, [r7, r5, lsl #2]
   13b58:	blt	13b7c <table_add_row@@Base+0x8c>
   13b5c:	mov	r7, #0
   13b60:	mov	r0, r4
   13b64:	mov	r1, r5
   13b68:	mov	r2, r7
   13b6c:	bl	14cdc <table_cell_init@@Base>
   13b70:	add	r7, r7, #1
   13b74:	cmp	r6, r7
   13b78:	bne	13b60 <table_add_row@@Base+0x70>
   13b7c:	ldr	r1, [r4, #20]
   13b80:	mov	r0, r4
   13b84:	mvn	r2, #0
   13b88:	mov	r3, #2
   13b8c:	bl	12c4c <table_notify@@Base>
   13b90:	ldr	r0, [r4, #20]
   13b94:	add	r1, r0, #1
   13b98:	str	r1, [r4, #20]
   13b9c:	pop	{r4, r5, r6, r7, fp, pc}

00013ba0 <table_remove_row@@Base>:
   13ba0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ba4:	add	fp, sp, #24
   13ba8:	ldr	r8, [r0, #20]
   13bac:	mov	r4, r1
   13bb0:	mov	r5, r0
   13bb4:	bl	12d48 <table_get_column_length@@Base>
   13bb8:	cmp	r0, #1
   13bbc:	blt	13c10 <table_remove_row@@Base+0x70>
   13bc0:	mov	r6, r0
   13bc4:	mov	r7, #0
   13bc8:	b	13bd8 <table_remove_row@@Base+0x38>
   13bcc:	add	r7, r7, #1
   13bd0:	cmp	r6, r7
   13bd4:	beq	13c10 <table_remove_row@@Base+0x70>
   13bd8:	mov	r0, r5
   13bdc:	mov	r1, r7
   13be0:	bl	12dc0 <table_get_column_data_type@@Base>
   13be4:	cmp	r0, #23
   13be8:	beq	13bcc <table_remove_row@@Base+0x2c>
   13bec:	mov	r0, r5
   13bf0:	mov	r1, r4
   13bf4:	mov	r2, r7
   13bf8:	bl	14cfc <table_get_cell_ptr@@Base>
   13bfc:	ldr	r0, [r0]
   13c00:	cmp	r0, #0
   13c04:	beq	13bcc <table_remove_row@@Base+0x2c>
   13c08:	bl	11fd4 <free@plt>
   13c0c:	b	13bcc <table_remove_row@@Base+0x2c>
   13c10:	ldr	r0, [r5, #16]
   13c14:	ldr	r0, [r0, r4, lsl #2]
   13c18:	cmp	r0, #0
   13c1c:	beq	13c24 <table_remove_row@@Base+0x84>
   13c20:	bl	11fd4 <free@plt>
   13c24:	sub	r0, r8, #1
   13c28:	cmp	r0, r4
   13c2c:	ble	13c9c <table_remove_row@@Base+0xfc>
   13c30:	mvn	r0, r4
   13c34:	add	r1, r8, r0
   13c38:	sub	r0, r8, #2
   13c3c:	tst	r1, #1
   13c40:	mov	r1, r4
   13c44:	beq	13c5c <table_remove_row@@Base+0xbc>
   13c48:	ldr	r1, [r5, #16]
   13c4c:	add	r2, r1, r4, lsl #2
   13c50:	ldr	r2, [r2, #4]
   13c54:	str	r2, [r1, r4, lsl #2]
   13c58:	add	r1, r4, #1
   13c5c:	cmp	r0, r4
   13c60:	beq	13c9c <table_remove_row@@Base+0xfc>
   13c64:	mvn	r0, r1
   13c68:	lsl	r1, r1, #2
   13c6c:	add	r0, r0, r8
   13c70:	ldr	r2, [r5, #16]
   13c74:	subs	r0, r0, #2
   13c78:	add	r3, r2, r1
   13c7c:	ldr	r3, [r3, #4]
   13c80:	str	r3, [r2, r1]
   13c84:	ldr	r2, [r5, #16]
   13c88:	add	r2, r2, r1
   13c8c:	add	r1, r1, #8
   13c90:	ldr	r3, [r2, #8]
   13c94:	str	r3, [r2, #4]
   13c98:	bne	13c70 <table_remove_row@@Base+0xd0>
   13c9c:	ldr	r0, [r5, #20]
   13ca0:	ldr	r1, [r5, #24]
   13ca4:	sub	r0, r0, #1
   13ca8:	udiv	r2, r0, r1
   13cac:	str	r0, [r5, #20]
   13cb0:	mls	r0, r2, r1, r0
   13cb4:	cmp	r0, #0
   13cb8:	bne	13cd8 <table_remove_row@@Base+0x138>
   13cbc:	ldr	r2, [r5, #28]
   13cc0:	ldr	r0, [r5, #16]
   13cc4:	sub	r1, r2, r1
   13cc8:	str	r1, [r5, #28]
   13ccc:	lsl	r1, r1, #2
   13cd0:	bl	11fec <realloc@plt>
   13cd4:	str	r0, [r5, #16]
   13cd8:	mov	r0, r5
   13cdc:	mov	r1, r4
   13ce0:	mvn	r2, #0
   13ce4:	mov	r3, #4
   13ce8:	bl	12c4c <table_notify@@Base>
   13cec:	mov	r0, #0
   13cf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013cf4 <table_set_row_ptr@@Base>:
   13cf4:	ldr	r2, [r2]
   13cf8:	ldr	r0, [r0, #16]
   13cfc:	str	r2, [r0, r1, lsl #2]
   13d00:	bx	lr

00013d04 <table_set@@Base>:
   13d04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d08:	add	fp, sp, #24
   13d0c:	mov	r8, r3
   13d10:	mov	r4, r2
   13d14:	mov	r9, r1
   13d18:	mov	r6, r0
   13d1c:	bl	14cfc <table_get_cell_ptr@@Base>
   13d20:	mov	r5, r0
   13d24:	mov	r0, r6
   13d28:	mov	r1, r4
   13d2c:	bl	12d20 <table_get_col_ptr@@Base>
   13d30:	ldr	r1, [fp, #8]
   13d34:	mvn	r7, #0
   13d38:	cmp	r1, #23
   13d3c:	bhi	14004 <table_set@@Base+0x300>
   13d40:	add	r2, pc, #4
   13d44:	ldr	r1, [r2, r1, lsl #2]
   13d48:	add	pc, r2, r1
   13d4c:	andeq	r0, r0, r0, rrx
   13d50:	andeq	r0, r0, r0, ror r0
   13d54:	andeq	r0, r0, r0, lsl #1
   13d58:	muleq	r0, r0, r0
   13d5c:	andeq	r0, r0, r0, lsr #1
   13d60:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13d64:	andeq	r0, r0, r0, asr #1
   13d68:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13d6c:	andeq	r0, r0, r0, ror #1
   13d70:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13d74:	andeq	r0, r0, r0, lsl #2
   13d78:	andeq	r0, r0, r0, lsl r1
   13d7c:	andeq	r0, r0, r8, asr #2
   13d80:	andeq	r0, r0, r8, asr r1
   13d84:	andeq	r0, r0, r8, ror #2
   13d88:	andeq	r0, r0, r8, ror r1
   13d8c:	andeq	r0, r0, r8, lsl #3
   13d90:	andeq	r0, r0, r0, asr #3
   13d94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13d98:	andeq	r0, r0, r0, lsl r2
   13d9c:	andeq	r0, r0, r0, lsr #4
   13da0:	andeq	r0, r0, r0, lsr r2
   13da4:	andeq	r0, r0, ip, ror #4
   13da8:	andeq	r0, r0, r0, asr #5
   13dac:	ldr	r0, [r0, #4]
   13db0:	cmp	r0, #0
   13db4:	bne	14004 <table_set@@Base+0x300>
   13db8:	b	13ee0 <table_set@@Base+0x1dc>
   13dbc:	ldr	r0, [r0, #4]
   13dc0:	cmp	r0, #1
   13dc4:	beq	13ee0 <table_set@@Base+0x1dc>
   13dc8:	b	14004 <table_set@@Base+0x300>
   13dcc:	ldr	r0, [r0, #4]
   13dd0:	cmp	r0, #2
   13dd4:	beq	13fc4 <table_set@@Base+0x2c0>
   13dd8:	b	14004 <table_set@@Base+0x300>
   13ddc:	ldr	r0, [r0, #4]
   13de0:	cmp	r0, #3
   13de4:	beq	13fc4 <table_set@@Base+0x2c0>
   13de8:	b	14004 <table_set@@Base+0x300>
   13dec:	ldr	r0, [r0, #4]
   13df0:	cmp	r0, #4
   13df4:	beq	13e68 <table_set@@Base+0x164>
   13df8:	b	14004 <table_set@@Base+0x300>
   13dfc:	ldr	r0, [r0, #4]
   13e00:	cmp	r0, #5
   13e04:	beq	13e68 <table_set@@Base+0x164>
   13e08:	b	14004 <table_set@@Base+0x300>
   13e0c:	ldr	r0, [r0, #4]
   13e10:	cmp	r0, #6
   13e14:	beq	13ee0 <table_set@@Base+0x1dc>
   13e18:	b	14004 <table_set@@Base+0x300>
   13e1c:	ldr	r0, [r0, #4]
   13e20:	cmp	r0, #7
   13e24:	beq	13ee0 <table_set@@Base+0x1dc>
   13e28:	b	14004 <table_set@@Base+0x300>
   13e2c:	ldr	r0, [r0, #4]
   13e30:	cmp	r0, #8
   13e34:	beq	13f28 <table_set@@Base+0x224>
   13e38:	b	14004 <table_set@@Base+0x300>
   13e3c:	ldr	r0, [r0, #4]
   13e40:	cmp	r0, #9
   13e44:	beq	13f28 <table_set@@Base+0x224>
   13e48:	b	14004 <table_set@@Base+0x300>
   13e4c:	ldr	r0, [r0, #4]
   13e50:	cmp	r0, #10
   13e54:	beq	13e68 <table_set@@Base+0x164>
   13e58:	b	14004 <table_set@@Base+0x300>
   13e5c:	ldr	r0, [r0, #4]
   13e60:	cmp	r0, #11
   13e64:	bne	14004 <table_set@@Base+0x300>
   13e68:	ldr	r0, [r5]
   13e6c:	cmp	r0, #0
   13e70:	bne	13e88 <table_set@@Base+0x184>
   13e74:	mov	r0, #2
   13e78:	bl	12004 <malloc@plt>
   13e7c:	cmp	r0, #0
   13e80:	str	r0, [r5]
   13e84:	beq	14004 <table_set@@Base+0x300>
   13e88:	ldrh	r1, [r8]
   13e8c:	strh	r1, [r0]
   13e90:	b	13fec <table_set@@Base+0x2e8>
   13e94:	ldr	r0, [r0, #4]
   13e98:	cmp	r0, #12
   13e9c:	beq	13ee0 <table_set@@Base+0x1dc>
   13ea0:	b	14004 <table_set@@Base+0x300>
   13ea4:	ldr	r0, [r0, #4]
   13ea8:	cmp	r0, #13
   13eac:	beq	13ee0 <table_set@@Base+0x1dc>
   13eb0:	b	14004 <table_set@@Base+0x300>
   13eb4:	ldr	r0, [r0, #4]
   13eb8:	cmp	r0, #14
   13ebc:	beq	13f28 <table_set@@Base+0x224>
   13ec0:	b	14004 <table_set@@Base+0x300>
   13ec4:	ldr	r0, [r0, #4]
   13ec8:	cmp	r0, #15
   13ecc:	beq	13f28 <table_set@@Base+0x224>
   13ed0:	b	14004 <table_set@@Base+0x300>
   13ed4:	ldr	r0, [r0, #4]
   13ed8:	cmp	r0, #16
   13edc:	bne	14004 <table_set@@Base+0x300>
   13ee0:	ldr	r0, [r5]
   13ee4:	cmp	r0, #0
   13ee8:	bne	13f00 <table_set@@Base+0x1fc>
   13eec:	mov	r0, #4
   13ef0:	bl	12004 <malloc@plt>
   13ef4:	cmp	r0, #0
   13ef8:	str	r0, [r5]
   13efc:	beq	14004 <table_set@@Base+0x300>
   13f00:	ldr	r1, [r8]
   13f04:	str	r1, [r0]
   13f08:	b	13fec <table_set@@Base+0x2e8>
   13f0c:	ldr	r0, [r0, #4]
   13f10:	cmp	r0, #17
   13f14:	beq	13f28 <table_set@@Base+0x224>
   13f18:	b	14004 <table_set@@Base+0x300>
   13f1c:	ldr	r0, [r0, #4]
   13f20:	cmp	r0, #18
   13f24:	bne	14004 <table_set@@Base+0x300>
   13f28:	ldr	r0, [r5]
   13f2c:	cmp	r0, #0
   13f30:	bne	13f48 <table_set@@Base+0x244>
   13f34:	mov	r0, #8
   13f38:	bl	12004 <malloc@plt>
   13f3c:	cmp	r0, #0
   13f40:	str	r0, [r5]
   13f44:	beq	14004 <table_set@@Base+0x300>
   13f48:	ldr	r1, [r8]
   13f4c:	ldr	r2, [r8, #4]
   13f50:	str	r2, [r0, #4]
   13f54:	str	r1, [r0]
   13f58:	b	13fec <table_set@@Base+0x2e8>
   13f5c:	ldr	r0, [r0, #4]
   13f60:	cmp	r0, #19
   13f64:	beq	13fc4 <table_set@@Base+0x2c0>
   13f68:	b	14004 <table_set@@Base+0x300>
   13f6c:	ldr	r0, [r0, #4]
   13f70:	cmp	r0, #20
   13f74:	beq	13fc4 <table_set@@Base+0x2c0>
   13f78:	b	14004 <table_set@@Base+0x300>
   13f7c:	ldr	r0, [r0, #4]
   13f80:	cmp	r0, #21
   13f84:	bne	14004 <table_set@@Base+0x300>
   13f88:	mov	r0, r8
   13f8c:	bl	12028 <strlen@plt>
   13f90:	ldr	r2, [r5]
   13f94:	add	r1, r0, #1
   13f98:	mov	r0, r2
   13f9c:	bl	11fec <realloc@plt>
   13fa0:	cmp	r0, #0
   13fa4:	str	r0, [r5]
   13fa8:	beq	14004 <table_set@@Base+0x300>
   13fac:	mov	r1, r8
   13fb0:	bl	11ff8 <strcpy@plt>
   13fb4:	b	13fec <table_set@@Base+0x2e8>
   13fb8:	ldr	r0, [r0, #4]
   13fbc:	cmp	r0, #22
   13fc0:	bne	14004 <table_set@@Base+0x300>
   13fc4:	ldr	r0, [r5]
   13fc8:	cmp	r0, #0
   13fcc:	bne	13fe4 <table_set@@Base+0x2e0>
   13fd0:	mov	r0, #1
   13fd4:	bl	12004 <malloc@plt>
   13fd8:	cmp	r0, #0
   13fdc:	str	r0, [r5]
   13fe0:	beq	14004 <table_set@@Base+0x300>
   13fe4:	ldrb	r1, [r8]
   13fe8:	strb	r1, [r0]
   13fec:	mov	r0, r6
   13ff0:	mov	r1, r9
   13ff4:	mov	r2, r4
   13ff8:	mov	r3, #1
   13ffc:	bl	12c4c <table_notify@@Base>
   14000:	mov	r7, #0
   14004:	mov	r0, r7
   14008:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1400c:	ldr	r0, [r0, #4]
   14010:	cmp	r0, #23
   14014:	bne	14004 <table_set@@Base+0x300>
   14018:	str	r8, [r5]
   1401c:	b	13fec <table_set@@Base+0x2e8>

00014020 <table_set_bool@@Base>:
   14020:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14024:	add	fp, sp, #24
   14028:	mov	r8, r3
   1402c:	mov	r4, r2
   14030:	mov	r9, r1
   14034:	mov	r6, r0
   14038:	bl	14cfc <table_get_cell_ptr@@Base>
   1403c:	mov	r5, r0
   14040:	mov	r0, r6
   14044:	mov	r1, r4
   14048:	bl	12d20 <table_get_col_ptr@@Base>
   1404c:	ldr	r0, [r0, #4]
   14050:	mvn	r7, #0
   14054:	cmp	r0, #22
   14058:	bne	14098 <table_set_bool@@Base+0x78>
   1405c:	ldr	r0, [r5]
   14060:	cmp	r0, #0
   14064:	bne	1407c <table_set_bool@@Base+0x5c>
   14068:	mov	r0, #1
   1406c:	bl	12004 <malloc@plt>
   14070:	cmp	r0, #0
   14074:	str	r0, [r5]
   14078:	beq	14098 <table_set_bool@@Base+0x78>
   1407c:	strb	r8, [r0]
   14080:	mov	r0, r6
   14084:	mov	r1, r9
   14088:	mov	r2, r4
   1408c:	mov	r3, #1
   14090:	bl	12c4c <table_notify@@Base>
   14094:	mov	r7, #0
   14098:	mov	r0, r7
   1409c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140a0 <table_set_int@@Base>:
   140a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140a4:	add	fp, sp, #24
   140a8:	mov	r8, r3
   140ac:	mov	r4, r2
   140b0:	mov	r5, r1
   140b4:	mov	r6, r0
   140b8:	bl	14cfc <table_get_cell_ptr@@Base>
   140bc:	mov	r9, r0
   140c0:	mov	r0, r6
   140c4:	mov	r1, r4
   140c8:	bl	12d20 <table_get_col_ptr@@Base>
   140cc:	ldr	r0, [r0, #4]
   140d0:	mvn	r7, #0
   140d4:	cmp	r0, #0
   140d8:	bne	14118 <table_set_int@@Base+0x78>
   140dc:	ldr	r0, [r9]
   140e0:	cmp	r0, #0
   140e4:	bne	140fc <table_set_int@@Base+0x5c>
   140e8:	mov	r0, #4
   140ec:	bl	12004 <malloc@plt>
   140f0:	cmp	r0, #0
   140f4:	str	r0, [r9]
   140f8:	beq	14118 <table_set_int@@Base+0x78>
   140fc:	str	r8, [r0]
   14100:	mov	r0, r6
   14104:	mov	r1, r5
   14108:	mov	r2, r4
   1410c:	mov	r3, #1
   14110:	bl	12c4c <table_notify@@Base>
   14114:	mov	r7, #0
   14118:	mov	r0, r7
   1411c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014120 <table_set_uint@@Base>:
   14120:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14124:	add	fp, sp, #24
   14128:	mov	r8, r3
   1412c:	mov	r4, r2
   14130:	mov	r5, r1
   14134:	mov	r6, r0
   14138:	bl	14cfc <table_get_cell_ptr@@Base>
   1413c:	mov	r9, r0
   14140:	mov	r0, r6
   14144:	mov	r1, r4
   14148:	bl	12d20 <table_get_col_ptr@@Base>
   1414c:	ldr	r0, [r0, #4]
   14150:	mvn	r7, #0
   14154:	cmp	r0, #1
   14158:	bne	14198 <table_set_uint@@Base+0x78>
   1415c:	ldr	r0, [r9]
   14160:	cmp	r0, #0
   14164:	bne	1417c <table_set_uint@@Base+0x5c>
   14168:	mov	r0, #4
   1416c:	bl	12004 <malloc@plt>
   14170:	cmp	r0, #0
   14174:	str	r0, [r9]
   14178:	beq	14198 <table_set_uint@@Base+0x78>
   1417c:	str	r8, [r0]
   14180:	mov	r0, r6
   14184:	mov	r1, r5
   14188:	mov	r2, r4
   1418c:	mov	r3, #1
   14190:	bl	12c4c <table_notify@@Base>
   14194:	mov	r7, #0
   14198:	mov	r0, r7
   1419c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141a0 <table_set_int8@@Base>:
   141a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141a4:	add	fp, sp, #24
   141a8:	mov	r8, r3
   141ac:	mov	r4, r2
   141b0:	mov	r9, r1
   141b4:	mov	r6, r0
   141b8:	bl	14cfc <table_get_cell_ptr@@Base>
   141bc:	mov	r5, r0
   141c0:	mov	r0, r6
   141c4:	mov	r1, r4
   141c8:	bl	12d20 <table_get_col_ptr@@Base>
   141cc:	ldr	r0, [r0, #4]
   141d0:	mvn	r7, #0
   141d4:	cmp	r0, #2
   141d8:	bne	14218 <table_set_int8@@Base+0x78>
   141dc:	ldr	r0, [r5]
   141e0:	cmp	r0, #0
   141e4:	bne	141fc <table_set_int8@@Base+0x5c>
   141e8:	mov	r0, #1
   141ec:	bl	12004 <malloc@plt>
   141f0:	cmp	r0, #0
   141f4:	str	r0, [r5]
   141f8:	beq	14218 <table_set_int8@@Base+0x78>
   141fc:	strb	r8, [r0]
   14200:	mov	r0, r6
   14204:	mov	r1, r9
   14208:	mov	r2, r4
   1420c:	mov	r3, #1
   14210:	bl	12c4c <table_notify@@Base>
   14214:	mov	r7, #0
   14218:	mov	r0, r7
   1421c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014220 <table_set_uint8@@Base>:
   14220:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14224:	add	fp, sp, #24
   14228:	mov	r8, r3
   1422c:	mov	r4, r2
   14230:	mov	r9, r1
   14234:	mov	r6, r0
   14238:	bl	14cfc <table_get_cell_ptr@@Base>
   1423c:	mov	r5, r0
   14240:	mov	r0, r6
   14244:	mov	r1, r4
   14248:	bl	12d20 <table_get_col_ptr@@Base>
   1424c:	ldr	r0, [r0, #4]
   14250:	mvn	r7, #0
   14254:	cmp	r0, #3
   14258:	bne	14298 <table_set_uint8@@Base+0x78>
   1425c:	ldr	r0, [r5]
   14260:	cmp	r0, #0
   14264:	bne	1427c <table_set_uint8@@Base+0x5c>
   14268:	mov	r0, #1
   1426c:	bl	12004 <malloc@plt>
   14270:	cmp	r0, #0
   14274:	str	r0, [r5]
   14278:	beq	14298 <table_set_uint8@@Base+0x78>
   1427c:	strb	r8, [r0]
   14280:	mov	r0, r6
   14284:	mov	r1, r9
   14288:	mov	r2, r4
   1428c:	mov	r3, #1
   14290:	bl	12c4c <table_notify@@Base>
   14294:	mov	r7, #0
   14298:	mov	r0, r7
   1429c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142a0 <table_set_int16@@Base>:
   142a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142a4:	add	fp, sp, #24
   142a8:	mov	r8, r3
   142ac:	mov	r4, r2
   142b0:	mov	r9, r1
   142b4:	mov	r6, r0
   142b8:	bl	14cfc <table_get_cell_ptr@@Base>
   142bc:	mov	r5, r0
   142c0:	mov	r0, r6
   142c4:	mov	r1, r4
   142c8:	bl	12d20 <table_get_col_ptr@@Base>
   142cc:	ldr	r0, [r0, #4]
   142d0:	mvn	r7, #0
   142d4:	cmp	r0, #4
   142d8:	bne	14318 <table_set_int16@@Base+0x78>
   142dc:	ldr	r0, [r5]
   142e0:	cmp	r0, #0
   142e4:	bne	142fc <table_set_int16@@Base+0x5c>
   142e8:	mov	r0, #2
   142ec:	bl	12004 <malloc@plt>
   142f0:	cmp	r0, #0
   142f4:	str	r0, [r5]
   142f8:	beq	14318 <table_set_int16@@Base+0x78>
   142fc:	strh	r8, [r0]
   14300:	mov	r0, r6
   14304:	mov	r1, r9
   14308:	mov	r2, r4
   1430c:	mov	r3, #1
   14310:	bl	12c4c <table_notify@@Base>
   14314:	mov	r7, #0
   14318:	mov	r0, r7
   1431c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014320 <table_set_uint16@@Base>:
   14320:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14324:	add	fp, sp, #24
   14328:	mov	r8, r3
   1432c:	mov	r4, r2
   14330:	mov	r9, r1
   14334:	mov	r6, r0
   14338:	bl	14cfc <table_get_cell_ptr@@Base>
   1433c:	mov	r5, r0
   14340:	mov	r0, r6
   14344:	mov	r1, r4
   14348:	bl	12d20 <table_get_col_ptr@@Base>
   1434c:	ldr	r0, [r0, #4]
   14350:	mvn	r7, #0
   14354:	cmp	r0, #5
   14358:	bne	14398 <table_set_uint16@@Base+0x78>
   1435c:	ldr	r0, [r5]
   14360:	cmp	r0, #0
   14364:	bne	1437c <table_set_uint16@@Base+0x5c>
   14368:	mov	r0, #2
   1436c:	bl	12004 <malloc@plt>
   14370:	cmp	r0, #0
   14374:	str	r0, [r5]
   14378:	beq	14398 <table_set_uint16@@Base+0x78>
   1437c:	strh	r8, [r0]
   14380:	mov	r0, r6
   14384:	mov	r1, r9
   14388:	mov	r2, r4
   1438c:	mov	r3, #1
   14390:	bl	12c4c <table_notify@@Base>
   14394:	mov	r7, #0
   14398:	mov	r0, r7
   1439c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143a0 <table_set_int32@@Base>:
   143a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143a4:	add	fp, sp, #24
   143a8:	mov	r8, r3
   143ac:	mov	r4, r2
   143b0:	mov	r5, r1
   143b4:	mov	r6, r0
   143b8:	bl	14cfc <table_get_cell_ptr@@Base>
   143bc:	mov	r9, r0
   143c0:	mov	r0, r6
   143c4:	mov	r1, r4
   143c8:	bl	12d20 <table_get_col_ptr@@Base>
   143cc:	ldr	r0, [r0, #4]
   143d0:	mvn	r7, #0
   143d4:	cmp	r0, #6
   143d8:	bne	14418 <table_set_int32@@Base+0x78>
   143dc:	ldr	r0, [r9]
   143e0:	cmp	r0, #0
   143e4:	bne	143fc <table_set_int32@@Base+0x5c>
   143e8:	mov	r0, #4
   143ec:	bl	12004 <malloc@plt>
   143f0:	cmp	r0, #0
   143f4:	str	r0, [r9]
   143f8:	beq	14418 <table_set_int32@@Base+0x78>
   143fc:	str	r8, [r0]
   14400:	mov	r0, r6
   14404:	mov	r1, r5
   14408:	mov	r2, r4
   1440c:	mov	r3, #1
   14410:	bl	12c4c <table_notify@@Base>
   14414:	mov	r7, #0
   14418:	mov	r0, r7
   1441c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014420 <table_set_uint32@@Base>:
   14420:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14424:	add	fp, sp, #24
   14428:	mov	r8, r3
   1442c:	mov	r4, r2
   14430:	mov	r5, r1
   14434:	mov	r6, r0
   14438:	bl	14cfc <table_get_cell_ptr@@Base>
   1443c:	mov	r9, r0
   14440:	mov	r0, r6
   14444:	mov	r1, r4
   14448:	bl	12d20 <table_get_col_ptr@@Base>
   1444c:	ldr	r0, [r0, #4]
   14450:	mvn	r7, #0
   14454:	cmp	r0, #7
   14458:	bne	14498 <table_set_uint32@@Base+0x78>
   1445c:	ldr	r0, [r9]
   14460:	cmp	r0, #0
   14464:	bne	1447c <table_set_uint32@@Base+0x5c>
   14468:	mov	r0, #4
   1446c:	bl	12004 <malloc@plt>
   14470:	cmp	r0, #0
   14474:	str	r0, [r9]
   14478:	beq	14498 <table_set_uint32@@Base+0x78>
   1447c:	str	r8, [r0]
   14480:	mov	r0, r6
   14484:	mov	r1, r5
   14488:	mov	r2, r4
   1448c:	mov	r3, #1
   14490:	bl	12c4c <table_notify@@Base>
   14494:	mov	r7, #0
   14498:	mov	r0, r7
   1449c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144a0 <table_set_int64@@Base>:
   144a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144a4:	add	fp, sp, #24
   144a8:	mov	r4, r2
   144ac:	mov	r8, r1
   144b0:	mov	r6, r0
   144b4:	bl	14cfc <table_get_cell_ptr@@Base>
   144b8:	mov	r5, r0
   144bc:	mov	r0, r6
   144c0:	mov	r1, r4
   144c4:	bl	12d20 <table_get_col_ptr@@Base>
   144c8:	ldr	r0, [r0, #4]
   144cc:	mvn	r7, #0
   144d0:	cmp	r0, #8
   144d4:	bne	14520 <table_set_int64@@Base+0x80>
   144d8:	ldr	r0, [r5]
   144dc:	cmp	r0, #0
   144e0:	bne	144f8 <table_set_int64@@Base+0x58>
   144e4:	mov	r0, #8
   144e8:	bl	12004 <malloc@plt>
   144ec:	cmp	r0, #0
   144f0:	str	r0, [r5]
   144f4:	beq	14520 <table_set_int64@@Base+0x80>
   144f8:	ldr	r1, [fp, #12]
   144fc:	ldr	r2, [fp, #8]
   14500:	mov	r3, #1
   14504:	str	r2, [r0]
   14508:	str	r1, [r0, #4]
   1450c:	mov	r0, r6
   14510:	mov	r1, r8
   14514:	mov	r2, r4
   14518:	bl	12c4c <table_notify@@Base>
   1451c:	mov	r7, #0
   14520:	mov	r0, r7
   14524:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014528 <table_set_uint64@@Base>:
   14528:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1452c:	add	fp, sp, #24
   14530:	mov	r4, r2
   14534:	mov	r8, r1
   14538:	mov	r6, r0
   1453c:	bl	14cfc <table_get_cell_ptr@@Base>
   14540:	mov	r5, r0
   14544:	mov	r0, r6
   14548:	mov	r1, r4
   1454c:	bl	12d20 <table_get_col_ptr@@Base>
   14550:	ldr	r0, [r0, #4]
   14554:	mvn	r7, #0
   14558:	cmp	r0, #9
   1455c:	bne	145a8 <table_set_uint64@@Base+0x80>
   14560:	ldr	r0, [r5]
   14564:	cmp	r0, #0
   14568:	bne	14580 <table_set_uint64@@Base+0x58>
   1456c:	mov	r0, #8
   14570:	bl	12004 <malloc@plt>
   14574:	cmp	r0, #0
   14578:	str	r0, [r5]
   1457c:	beq	145a8 <table_set_uint64@@Base+0x80>
   14580:	ldr	r1, [fp, #12]
   14584:	ldr	r2, [fp, #8]
   14588:	mov	r3, #1
   1458c:	str	r2, [r0]
   14590:	str	r1, [r0, #4]
   14594:	mov	r0, r6
   14598:	mov	r1, r8
   1459c:	mov	r2, r4
   145a0:	bl	12c4c <table_notify@@Base>
   145a4:	mov	r7, #0
   145a8:	mov	r0, r7
   145ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145b0 <table_set_short@@Base>:
   145b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145b4:	add	fp, sp, #24
   145b8:	mov	r8, r3
   145bc:	mov	r4, r2
   145c0:	mov	r9, r1
   145c4:	mov	r6, r0
   145c8:	bl	14cfc <table_get_cell_ptr@@Base>
   145cc:	mov	r5, r0
   145d0:	mov	r0, r6
   145d4:	mov	r1, r4
   145d8:	bl	12d20 <table_get_col_ptr@@Base>
   145dc:	ldr	r0, [r0, #4]
   145e0:	mvn	r7, #0
   145e4:	cmp	r0, #10
   145e8:	bne	14628 <table_set_short@@Base+0x78>
   145ec:	ldr	r0, [r5]
   145f0:	cmp	r0, #0
   145f4:	bne	1460c <table_set_short@@Base+0x5c>
   145f8:	mov	r0, #2
   145fc:	bl	12004 <malloc@plt>
   14600:	cmp	r0, #0
   14604:	str	r0, [r5]
   14608:	beq	14628 <table_set_short@@Base+0x78>
   1460c:	strh	r8, [r0]
   14610:	mov	r0, r6
   14614:	mov	r1, r9
   14618:	mov	r2, r4
   1461c:	mov	r3, #1
   14620:	bl	12c4c <table_notify@@Base>
   14624:	mov	r7, #0
   14628:	mov	r0, r7
   1462c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014630 <table_set_ushort@@Base>:
   14630:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14634:	add	fp, sp, #24
   14638:	mov	r8, r3
   1463c:	mov	r4, r2
   14640:	mov	r9, r1
   14644:	mov	r6, r0
   14648:	bl	14cfc <table_get_cell_ptr@@Base>
   1464c:	mov	r5, r0
   14650:	mov	r0, r6
   14654:	mov	r1, r4
   14658:	bl	12d20 <table_get_col_ptr@@Base>
   1465c:	ldr	r0, [r0, #4]
   14660:	mvn	r7, #0
   14664:	cmp	r0, #11
   14668:	bne	146a8 <table_set_ushort@@Base+0x78>
   1466c:	ldr	r0, [r5]
   14670:	cmp	r0, #0
   14674:	bne	1468c <table_set_ushort@@Base+0x5c>
   14678:	mov	r0, #2
   1467c:	bl	12004 <malloc@plt>
   14680:	cmp	r0, #0
   14684:	str	r0, [r5]
   14688:	beq	146a8 <table_set_ushort@@Base+0x78>
   1468c:	strh	r8, [r0]
   14690:	mov	r0, r6
   14694:	mov	r1, r9
   14698:	mov	r2, r4
   1469c:	mov	r3, #1
   146a0:	bl	12c4c <table_notify@@Base>
   146a4:	mov	r7, #0
   146a8:	mov	r0, r7
   146ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146b0 <table_set_long@@Base>:
   146b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146b4:	add	fp, sp, #24
   146b8:	mov	r8, r3
   146bc:	mov	r4, r2
   146c0:	mov	r5, r1
   146c4:	mov	r6, r0
   146c8:	bl	14cfc <table_get_cell_ptr@@Base>
   146cc:	mov	r9, r0
   146d0:	mov	r0, r6
   146d4:	mov	r1, r4
   146d8:	bl	12d20 <table_get_col_ptr@@Base>
   146dc:	ldr	r0, [r0, #4]
   146e0:	mvn	r7, #0
   146e4:	cmp	r0, #12
   146e8:	bne	14728 <table_set_long@@Base+0x78>
   146ec:	ldr	r0, [r9]
   146f0:	cmp	r0, #0
   146f4:	bne	1470c <table_set_long@@Base+0x5c>
   146f8:	mov	r0, #4
   146fc:	bl	12004 <malloc@plt>
   14700:	cmp	r0, #0
   14704:	str	r0, [r9]
   14708:	beq	14728 <table_set_long@@Base+0x78>
   1470c:	str	r8, [r0]
   14710:	mov	r0, r6
   14714:	mov	r1, r5
   14718:	mov	r2, r4
   1471c:	mov	r3, #1
   14720:	bl	12c4c <table_notify@@Base>
   14724:	mov	r7, #0
   14728:	mov	r0, r7
   1472c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014730 <table_set_ulong@@Base>:
   14730:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14734:	add	fp, sp, #24
   14738:	mov	r8, r3
   1473c:	mov	r4, r2
   14740:	mov	r5, r1
   14744:	mov	r6, r0
   14748:	bl	14cfc <table_get_cell_ptr@@Base>
   1474c:	mov	r9, r0
   14750:	mov	r0, r6
   14754:	mov	r1, r4
   14758:	bl	12d20 <table_get_col_ptr@@Base>
   1475c:	ldr	r0, [r0, #4]
   14760:	mvn	r7, #0
   14764:	cmp	r0, #13
   14768:	bne	147a8 <table_set_ulong@@Base+0x78>
   1476c:	ldr	r0, [r9]
   14770:	cmp	r0, #0
   14774:	bne	1478c <table_set_ulong@@Base+0x5c>
   14778:	mov	r0, #4
   1477c:	bl	12004 <malloc@plt>
   14780:	cmp	r0, #0
   14784:	str	r0, [r9]
   14788:	beq	147a8 <table_set_ulong@@Base+0x78>
   1478c:	str	r8, [r0]
   14790:	mov	r0, r6
   14794:	mov	r1, r5
   14798:	mov	r2, r4
   1479c:	mov	r3, #1
   147a0:	bl	12c4c <table_notify@@Base>
   147a4:	mov	r7, #0
   147a8:	mov	r0, r7
   147ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147b0 <table_set_llong@@Base>:
   147b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147b4:	add	fp, sp, #24
   147b8:	mov	r4, r2
   147bc:	mov	r8, r1
   147c0:	mov	r6, r0
   147c4:	bl	14cfc <table_get_cell_ptr@@Base>
   147c8:	mov	r5, r0
   147cc:	mov	r0, r6
   147d0:	mov	r1, r4
   147d4:	bl	12d20 <table_get_col_ptr@@Base>
   147d8:	ldr	r0, [r0, #4]
   147dc:	mvn	r7, #0
   147e0:	cmp	r0, #14
   147e4:	bne	14830 <table_set_llong@@Base+0x80>
   147e8:	ldr	r0, [r5]
   147ec:	cmp	r0, #0
   147f0:	bne	14808 <table_set_llong@@Base+0x58>
   147f4:	mov	r0, #8
   147f8:	bl	12004 <malloc@plt>
   147fc:	cmp	r0, #0
   14800:	str	r0, [r5]
   14804:	beq	14830 <table_set_llong@@Base+0x80>
   14808:	ldr	r1, [fp, #12]
   1480c:	ldr	r2, [fp, #8]
   14810:	mov	r3, #1
   14814:	str	r2, [r0]
   14818:	str	r1, [r0, #4]
   1481c:	mov	r0, r6
   14820:	mov	r1, r8
   14824:	mov	r2, r4
   14828:	bl	12c4c <table_notify@@Base>
   1482c:	mov	r7, #0
   14830:	mov	r0, r7
   14834:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014838 <table_set_ullong@@Base>:
   14838:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1483c:	add	fp, sp, #24
   14840:	mov	r4, r2
   14844:	mov	r8, r1
   14848:	mov	r6, r0
   1484c:	bl	14cfc <table_get_cell_ptr@@Base>
   14850:	mov	r5, r0
   14854:	mov	r0, r6
   14858:	mov	r1, r4
   1485c:	bl	12d20 <table_get_col_ptr@@Base>
   14860:	ldr	r0, [r0, #4]
   14864:	mvn	r7, #0
   14868:	cmp	r0, #15
   1486c:	bne	148b8 <table_set_ullong@@Base+0x80>
   14870:	ldr	r0, [r5]
   14874:	cmp	r0, #0
   14878:	bne	14890 <table_set_ullong@@Base+0x58>
   1487c:	mov	r0, #8
   14880:	bl	12004 <malloc@plt>
   14884:	cmp	r0, #0
   14888:	str	r0, [r5]
   1488c:	beq	148b8 <table_set_ullong@@Base+0x80>
   14890:	ldr	r1, [fp, #12]
   14894:	ldr	r2, [fp, #8]
   14898:	mov	r3, #1
   1489c:	str	r2, [r0]
   148a0:	str	r1, [r0, #4]
   148a4:	mov	r0, r6
   148a8:	mov	r1, r8
   148ac:	mov	r2, r4
   148b0:	bl	12c4c <table_notify@@Base>
   148b4:	mov	r7, #0
   148b8:	mov	r0, r7
   148bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148c0 <table_set_float@@Base>:
   148c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148c4:	add	fp, sp, #24
   148c8:	vpush	{d8}
   148cc:	vmov.f32	s16, s0
   148d0:	mov	r4, r2
   148d4:	mov	r8, r1
   148d8:	mov	r6, r0
   148dc:	bl	14cfc <table_get_cell_ptr@@Base>
   148e0:	mov	r5, r0
   148e4:	mov	r0, r6
   148e8:	mov	r1, r4
   148ec:	bl	12d20 <table_get_col_ptr@@Base>
   148f0:	ldr	r0, [r0, #4]
   148f4:	mvn	r7, #0
   148f8:	cmp	r0, #16
   148fc:	bne	14940 <table_set_float@@Base+0x80>
   14900:	ldr	r0, [r5]
   14904:	cmp	r0, #0
   14908:	bne	14920 <table_set_float@@Base+0x60>
   1490c:	mov	r0, #4
   14910:	bl	12004 <malloc@plt>
   14914:	cmp	r0, #0
   14918:	str	r0, [r5]
   1491c:	beq	14940 <table_set_float@@Base+0x80>
   14920:	vmov	r1, s16
   14924:	mov	r2, r4
   14928:	mov	r3, #1
   1492c:	str	r1, [r0]
   14930:	mov	r0, r6
   14934:	mov	r1, r8
   14938:	bl	12c4c <table_notify@@Base>
   1493c:	mov	r7, #0
   14940:	mov	r0, r7
   14944:	vpop	{d8}
   14948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001494c <table_set_double@@Base>:
   1494c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14950:	add	fp, sp, #24
   14954:	vpush	{d8}
   14958:	vorr	d8, d0, d0
   1495c:	mov	r4, r2
   14960:	mov	r5, r1
   14964:	mov	r6, r0
   14968:	bl	14cfc <table_get_cell_ptr@@Base>
   1496c:	mov	r8, r0
   14970:	mov	r0, r6
   14974:	mov	r1, r4
   14978:	bl	12d20 <table_get_col_ptr@@Base>
   1497c:	ldr	r0, [r0, #4]
   14980:	mvn	r7, #0
   14984:	cmp	r0, #17
   14988:	bne	149c8 <table_set_double@@Base+0x7c>
   1498c:	ldr	r0, [r8]
   14990:	cmp	r0, #0
   14994:	bne	149ac <table_set_double@@Base+0x60>
   14998:	mov	r0, #8
   1499c:	bl	12004 <malloc@plt>
   149a0:	cmp	r0, #0
   149a4:	str	r0, [r8]
   149a8:	beq	149c8 <table_set_double@@Base+0x7c>
   149ac:	vst1.8	{d8}, [r0]
   149b0:	mov	r0, r6
   149b4:	mov	r1, r5
   149b8:	mov	r2, r4
   149bc:	mov	r3, #1
   149c0:	bl	12c4c <table_notify@@Base>
   149c4:	mov	r7, #0
   149c8:	mov	r0, r7
   149cc:	vpop	{d8}
   149d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149d4 <table_set_ldouble@@Base>:
   149d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149d8:	add	fp, sp, #24
   149dc:	vpush	{d8}
   149e0:	vorr	d8, d0, d0
   149e4:	mov	r4, r2
   149e8:	mov	r5, r1
   149ec:	mov	r6, r0
   149f0:	bl	14cfc <table_get_cell_ptr@@Base>
   149f4:	mov	r8, r0
   149f8:	mov	r0, r6
   149fc:	mov	r1, r4
   14a00:	bl	12d20 <table_get_col_ptr@@Base>
   14a04:	ldr	r0, [r0, #4]
   14a08:	mvn	r7, #0
   14a0c:	cmp	r0, #18
   14a10:	bne	14a50 <table_set_ldouble@@Base+0x7c>
   14a14:	ldr	r0, [r8]
   14a18:	cmp	r0, #0
   14a1c:	bne	14a34 <table_set_ldouble@@Base+0x60>
   14a20:	mov	r0, #8
   14a24:	bl	12004 <malloc@plt>
   14a28:	cmp	r0, #0
   14a2c:	str	r0, [r8]
   14a30:	beq	14a50 <table_set_ldouble@@Base+0x7c>
   14a34:	vst1.8	{d8}, [r0]
   14a38:	mov	r0, r6
   14a3c:	mov	r1, r5
   14a40:	mov	r2, r4
   14a44:	mov	r3, #1
   14a48:	bl	12c4c <table_notify@@Base>
   14a4c:	mov	r7, #0
   14a50:	mov	r0, r7
   14a54:	vpop	{d8}
   14a58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a5c <table_set_string@@Base>:
   14a5c:	push	{fp, lr}
   14a60:	mov	fp, sp
   14a64:	sub	sp, sp, #8
   14a68:	mov	ip, #21
   14a6c:	str	ip, [sp]
   14a70:	bl	13d04 <table_set@@Base>
   14a74:	mov	sp, fp
   14a78:	pop	{fp, pc}

00014a7c <table_set_char@@Base>:
   14a7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a80:	add	fp, sp, #24
   14a84:	mov	r8, r3
   14a88:	mov	r4, r2
   14a8c:	mov	r9, r1
   14a90:	mov	r6, r0
   14a94:	bl	14cfc <table_get_cell_ptr@@Base>
   14a98:	mov	r5, r0
   14a9c:	mov	r0, r6
   14aa0:	mov	r1, r4
   14aa4:	bl	12d20 <table_get_col_ptr@@Base>
   14aa8:	ldr	r0, [r0, #4]
   14aac:	mvn	r7, #0
   14ab0:	cmp	r0, #19
   14ab4:	bne	14af4 <table_set_char@@Base+0x78>
   14ab8:	ldr	r0, [r5]
   14abc:	cmp	r0, #0
   14ac0:	bne	14ad8 <table_set_char@@Base+0x5c>
   14ac4:	mov	r0, #1
   14ac8:	bl	12004 <malloc@plt>
   14acc:	cmp	r0, #0
   14ad0:	str	r0, [r5]
   14ad4:	beq	14af4 <table_set_char@@Base+0x78>
   14ad8:	strb	r8, [r0]
   14adc:	mov	r0, r6
   14ae0:	mov	r1, r9
   14ae4:	mov	r2, r4
   14ae8:	mov	r3, #1
   14aec:	bl	12c4c <table_notify@@Base>
   14af0:	mov	r7, #0
   14af4:	mov	r0, r7
   14af8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014afc <table_set_uchar@@Base>:
   14afc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b00:	add	fp, sp, #24
   14b04:	mov	r8, r3
   14b08:	mov	r4, r2
   14b0c:	mov	r9, r1
   14b10:	mov	r6, r0
   14b14:	bl	14cfc <table_get_cell_ptr@@Base>
   14b18:	mov	r5, r0
   14b1c:	mov	r0, r6
   14b20:	mov	r1, r4
   14b24:	bl	12d20 <table_get_col_ptr@@Base>
   14b28:	ldr	r0, [r0, #4]
   14b2c:	mvn	r7, #0
   14b30:	cmp	r0, #20
   14b34:	bne	14b74 <table_set_uchar@@Base+0x78>
   14b38:	ldr	r0, [r5]
   14b3c:	cmp	r0, #0
   14b40:	bne	14b58 <table_set_uchar@@Base+0x5c>
   14b44:	mov	r0, #1
   14b48:	bl	12004 <malloc@plt>
   14b4c:	cmp	r0, #0
   14b50:	str	r0, [r5]
   14b54:	beq	14b74 <table_set_uchar@@Base+0x78>
   14b58:	strb	r8, [r0]
   14b5c:	mov	r0, r6
   14b60:	mov	r1, r9
   14b64:	mov	r2, r4
   14b68:	mov	r3, #1
   14b6c:	bl	12c4c <table_notify@@Base>
   14b70:	mov	r7, #0
   14b74:	mov	r0, r7
   14b78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b7c <table_set_ptr@@Base>:
   14b7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b80:	add	fp, sp, #24
   14b84:	mov	r8, r3
   14b88:	mov	r4, r2
   14b8c:	mov	r5, r1
   14b90:	mov	r6, r0
   14b94:	bl	14cfc <table_get_cell_ptr@@Base>
   14b98:	mov	r7, r0
   14b9c:	mov	r0, r6
   14ba0:	mov	r1, r4
   14ba4:	bl	12d20 <table_get_col_ptr@@Base>
   14ba8:	ldr	r1, [r0, #4]
   14bac:	mvn	r0, #0
   14bb0:	cmp	r1, #23
   14bb4:	bne	14bd4 <table_set_ptr@@Base+0x58>
   14bb8:	mov	r0, r6
   14bbc:	mov	r1, r5
   14bc0:	mov	r2, r4
   14bc4:	mov	r3, #1
   14bc8:	str	r8, [r7]
   14bcc:	bl	12c4c <table_notify@@Base>
   14bd0:	mov	r0, #0
   14bd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014bd8 <table_column_is_valid@@Base>:
   14bd8:	cmp	r0, #0
   14bdc:	moveq	r0, #0
   14be0:	bxeq	lr
   14be4:	push	{r4, sl, fp, lr}
   14be8:	add	fp, sp, #8
   14bec:	mov	r4, r1
   14bf0:	bl	12d48 <table_get_column_length@@Base>
   14bf4:	cmp	r0, r4
   14bf8:	mov	r0, #0
   14bfc:	mov	r1, #0
   14c00:	movwgt	r0, #1
   14c04:	cmn	r4, #1
   14c08:	movwgt	r1, #1
   14c0c:	and	r0, r1, r0
   14c10:	pop	{r4, sl, fp, pc}

00014c14 <table_row_is_valid@@Base>:
   14c14:	cmp	r0, #0
   14c18:	moveq	r0, #0
   14c1c:	bxeq	lr
   14c20:	push	{r4, sl, fp, lr}
   14c24:	add	fp, sp, #8
   14c28:	mov	r4, r1
   14c2c:	bl	13ae8 <table_get_row_length@@Base>
   14c30:	cmp	r0, r4
   14c34:	mov	r0, #0
   14c38:	mov	r1, #0
   14c3c:	movwgt	r0, #1
   14c40:	cmn	r4, #1
   14c44:	movwgt	r1, #1
   14c48:	and	r0, r1, r0
   14c4c:	pop	{r4, sl, fp, pc}

00014c50 <table_cell_is_valid@@Base>:
   14c50:	push	{r4, r5, r6, r7, fp, lr}
   14c54:	add	fp, sp, #16
   14c58:	mov	r5, #0
   14c5c:	cmp	r0, #0
   14c60:	beq	14ca8 <table_cell_is_valid@@Base+0x58>
   14c64:	mov	r7, r2
   14c68:	mov	r4, r1
   14c6c:	mov	r6, r0
   14c70:	bl	12d48 <table_get_column_length@@Base>
   14c74:	cmp	r7, #0
   14c78:	bmi	14ca8 <table_cell_is_valid@@Base+0x58>
   14c7c:	cmp	r0, r7
   14c80:	ble	14ca8 <table_cell_is_valid@@Base+0x58>
   14c84:	mov	r0, r6
   14c88:	bl	13ae8 <table_get_row_length@@Base>
   14c8c:	cmp	r0, r4
   14c90:	mov	r0, #0
   14c94:	mov	r1, #0
   14c98:	movwgt	r0, #1
   14c9c:	cmn	r4, #1
   14ca0:	movwgt	r1, #1
   14ca4:	and	r5, r1, r0
   14ca8:	mov	r0, r5
   14cac:	pop	{r4, r5, r6, r7, fp, pc}

00014cb0 <table_cell_has_value@@Base>:
   14cb0:	push	{fp, lr}
   14cb4:	mov	fp, sp
   14cb8:	bl	14cfc <table_get_cell_ptr@@Base>
   14cbc:	cmp	r0, #0
   14cc0:	beq	14cd4 <table_cell_has_value@@Base+0x24>
   14cc4:	ldr	r0, [r0]
   14cc8:	cmp	r0, #0
   14ccc:	movwne	r0, #1
   14cd0:	pop	{fp, pc}
   14cd4:	mov	r0, #0
   14cd8:	pop	{fp, pc}

00014cdc <table_cell_init@@Base>:
   14cdc:	push	{r4, sl, fp, lr}
   14ce0:	add	fp, sp, #8
   14ce4:	mov	r4, r2
   14ce8:	bl	13a80 <table_get_row_ptr@@Base>
   14cec:	ldr	r0, [r0]
   14cf0:	mov	r1, #0
   14cf4:	str	r1, [r0, r4, lsl #2]
   14cf8:	pop	{r4, sl, fp, pc}

00014cfc <table_get_cell_ptr@@Base>:
   14cfc:	push	{r4, sl, fp, lr}
   14d00:	add	fp, sp, #8
   14d04:	mov	r4, r2
   14d08:	bl	13a80 <table_get_row_ptr@@Base>
   14d0c:	ldr	r0, [r0]
   14d10:	add	r0, r0, r4, lsl #2
   14d14:	pop	{r4, sl, fp, pc}

00014d18 <table_cell_destroy@@Base>:
   14d18:	push	{r4, r5, r6, sl, fp, lr}
   14d1c:	add	fp, sp, #16
   14d20:	mov	r5, r1
   14d24:	mov	r1, r2
   14d28:	mov	r4, r2
   14d2c:	mov	r6, r0
   14d30:	bl	12dc0 <table_get_column_data_type@@Base>
   14d34:	cmp	r0, #23
   14d38:	popeq	{r4, r5, r6, sl, fp, pc}
   14d3c:	mov	r0, r6
   14d40:	mov	r1, r5
   14d44:	bl	13a80 <table_get_row_ptr@@Base>
   14d48:	ldr	r0, [r0]
   14d4c:	ldr	r0, [r0, r4, lsl #2]
   14d50:	cmp	r0, #0
   14d54:	beq	14d60 <table_cell_destroy@@Base+0x48>
   14d58:	pop	{r4, r5, r6, sl, fp, lr}
   14d5c:	b	11fd4 <free@plt>
   14d60:	pop	{r4, r5, r6, sl, fp, pc}

00014d64 <table_cell_to_buffer@@Base>:
   14d64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d68:	add	fp, sp, #24
   14d6c:	sub	sp, sp, #8
   14d70:	mov	r7, r1
   14d74:	mov	r1, r2
   14d78:	mov	r5, r3
   14d7c:	mov	r6, r2
   14d80:	mov	r4, r0
   14d84:	bl	12dc0 <table_get_column_data_type@@Base>
   14d88:	cmp	r0, #23
   14d8c:	bhi	15080 <table_cell_to_buffer@@Base+0x31c>
   14d90:	add	r1, pc, #8
   14d94:	ldr	r8, [fp, #8]
   14d98:	ldr	r0, [r1, r0, lsl #2]
   14d9c:	add	pc, r1, r0
   14da0:	andeq	r0, r0, r0, rrx
   14da4:	andeq	r0, r0, r4, ror r0
   14da8:	andeq	r0, r0, r8, lsl #1
   14dac:	muleq	r0, ip, r0
   14db0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14db4:	andeq	r0, r0, r4, asr #1
   14db8:	ldrdeq	r0, [r0], -r8
   14dbc:	andeq	r0, r0, ip, ror #1
   14dc0:	andeq	r0, r0, ip, lsl #2
   14dc4:	andeq	r0, r0, r0, lsr #2
   14dc8:	andeq	r0, r0, r4, lsr r1
   14dcc:	andeq	r0, r0, r4, asr r1
   14dd0:	andeq	r0, r0, r4, ror r1
   14dd4:	muleq	r0, r4, r1
   14dd8:			; <UNDEFINED> instruction: 0x000001b4
   14ddc:	ldrdeq	r0, [r0], -r4
   14de0:	strdeq	r0, [r0], -r4
   14de4:	andeq	r0, r0, r8, lsl r2
   14de8:	andeq	r0, r0, r8, lsr r2
   14dec:	andeq	r0, r0, r4, ror #4
   14df0:	andeq	r0, r0, r8, ror r2
   14df4:	muleq	r0, r8, r2
   14df8:			; <UNDEFINED> instruction: 0x000002b8
   14dfc:	andeq	r0, r0, ip, ror #5
   14e00:	mov	r0, r4
   14e04:	mov	r1, r7
   14e08:	mov	r2, r6
   14e0c:	bl	1383c <table_get_int@@Base>
   14e10:	b	15068 <table_cell_to_buffer@@Base+0x304>
   14e14:	mov	r0, r4
   14e18:	mov	r1, r7
   14e1c:	mov	r2, r6
   14e20:	bl	13854 <table_get_uint@@Base>
   14e24:	b	14e9c <table_cell_to_buffer@@Base+0x138>
   14e28:	mov	r0, r4
   14e2c:	mov	r1, r7
   14e30:	mov	r2, r6
   14e34:	bl	1386c <table_get_int8@@Base>
   14e38:	b	15068 <table_cell_to_buffer@@Base+0x304>
   14e3c:	mov	r0, r4
   14e40:	mov	r1, r7
   14e44:	mov	r2, r6
   14e48:	bl	13884 <table_get_uint8@@Base>
   14e4c:	b	14e9c <table_cell_to_buffer@@Base+0x138>
   14e50:	mov	r0, r4
   14e54:	mov	r1, r7
   14e58:	mov	r2, r6
   14e5c:	bl	1389c <table_get_int16@@Base>
   14e60:	b	15068 <table_cell_to_buffer@@Base+0x304>
   14e64:	mov	r0, r4
   14e68:	mov	r1, r7
   14e6c:	mov	r2, r6
   14e70:	bl	138b4 <table_get_uint16@@Base>
   14e74:	b	14e9c <table_cell_to_buffer@@Base+0x138>
   14e78:	mov	r0, r4
   14e7c:	mov	r1, r7
   14e80:	mov	r2, r6
   14e84:	bl	138cc <table_get_int32@@Base>
   14e88:	b	15068 <table_cell_to_buffer@@Base+0x304>
   14e8c:	mov	r0, r4
   14e90:	mov	r1, r7
   14e94:	mov	r2, r6
   14e98:	bl	138e4 <table_get_uint32@@Base>
   14e9c:	ldr	r2, [pc, #524]	; 150b0 <table_cell_to_buffer@@Base+0x34c>
   14ea0:	mov	r3, r0
   14ea4:	add	r2, pc, r2
   14ea8:	b	15074 <table_cell_to_buffer@@Base+0x310>
   14eac:	mov	r0, r4
   14eb0:	mov	r1, r7
   14eb4:	mov	r2, r6
   14eb8:	bl	138fc <table_get_int64@@Base>
   14ebc:	b	14f64 <table_cell_to_buffer@@Base+0x200>
   14ec0:	mov	r0, r4
   14ec4:	mov	r1, r7
   14ec8:	mov	r2, r6
   14ecc:	bl	13914 <table_get_uint64@@Base>
   14ed0:	b	14f84 <table_cell_to_buffer@@Base+0x220>
   14ed4:	mov	r0, r4
   14ed8:	mov	r1, r7
   14edc:	mov	r2, r6
   14ee0:	bl	1392c <table_get_short@@Base>
   14ee4:	ldr	r2, [pc, #464]	; 150bc <table_cell_to_buffer@@Base+0x358>
   14ee8:	mov	r3, r0
   14eec:	add	r2, pc, r2
   14ef0:	b	15074 <table_cell_to_buffer@@Base+0x310>
   14ef4:	mov	r0, r4
   14ef8:	mov	r1, r7
   14efc:	mov	r2, r6
   14f00:	bl	13944 <table_get_ushort@@Base>
   14f04:	ldr	r2, [pc, #436]	; 150c0 <table_cell_to_buffer@@Base+0x35c>
   14f08:	mov	r3, r0
   14f0c:	add	r2, pc, r2
   14f10:	b	15074 <table_cell_to_buffer@@Base+0x310>
   14f14:	mov	r0, r4
   14f18:	mov	r1, r7
   14f1c:	mov	r2, r6
   14f20:	bl	1395c <table_get_long@@Base>
   14f24:	ldr	r2, [pc, #408]	; 150c4 <table_cell_to_buffer@@Base+0x360>
   14f28:	mov	r3, r0
   14f2c:	add	r2, pc, r2
   14f30:	b	15074 <table_cell_to_buffer@@Base+0x310>
   14f34:	mov	r0, r4
   14f38:	mov	r1, r7
   14f3c:	mov	r2, r6
   14f40:	bl	13974 <table_get_ulong@@Base>
   14f44:	ldr	r2, [pc, #380]	; 150c8 <table_cell_to_buffer@@Base+0x364>
   14f48:	mov	r3, r0
   14f4c:	add	r2, pc, r2
   14f50:	b	15074 <table_cell_to_buffer@@Base+0x310>
   14f54:	mov	r0, r4
   14f58:	mov	r1, r7
   14f5c:	mov	r2, r6
   14f60:	bl	1398c <table_get_llong@@Base>
   14f64:	stm	sp, {r0, r1}
   14f68:	ldr	r2, [pc, #324]	; 150b4 <table_cell_to_buffer@@Base+0x350>
   14f6c:	add	r2, pc, r2
   14f70:	b	14ff4 <table_cell_to_buffer@@Base+0x290>
   14f74:	mov	r0, r4
   14f78:	mov	r1, r7
   14f7c:	mov	r2, r6
   14f80:	bl	139a4 <table_get_ullong@@Base>
   14f84:	stm	sp, {r0, r1}
   14f88:	ldr	r2, [pc, #296]	; 150b8 <table_cell_to_buffer@@Base+0x354>
   14f8c:	add	r2, pc, r2
   14f90:	b	14ff4 <table_cell_to_buffer@@Base+0x290>
   14f94:	mov	r0, r4
   14f98:	mov	r1, r7
   14f9c:	mov	r2, r6
   14fa0:	bl	139bc <table_get_float@@Base>
   14fa4:	vcvt.f64.f32	d16, s0
   14fa8:	vstr	d16, [sp]
   14fac:	ldr	r2, [pc, #284]	; 150d0 <table_cell_to_buffer@@Base+0x36c>
   14fb0:	add	r2, pc, r2
   14fb4:	b	14ff4 <table_cell_to_buffer@@Base+0x290>
   14fb8:	mov	r0, r4
   14fbc:	mov	r1, r7
   14fc0:	mov	r2, r6
   14fc4:	bl	139d4 <table_get_double@@Base>
   14fc8:	vstr	d0, [sp]
   14fcc:	ldr	r2, [pc, #256]	; 150d4 <table_cell_to_buffer@@Base+0x370>
   14fd0:	add	r2, pc, r2
   14fd4:	b	14ff4 <table_cell_to_buffer@@Base+0x290>
   14fd8:	mov	r0, r4
   14fdc:	mov	r1, r7
   14fe0:	mov	r2, r6
   14fe4:	bl	139ec <table_get_ldouble@@Base>
   14fe8:	vstr	d0, [sp]
   14fec:	ldr	r2, [pc, #228]	; 150d8 <table_cell_to_buffer@@Base+0x374>
   14ff0:	add	r2, pc, r2
   14ff4:	mov	r0, r5
   14ff8:	mov	r1, r8
   14ffc:	bl	12040 <snprintf@plt>
   15000:	b	15080 <table_cell_to_buffer@@Base+0x31c>
   15004:	mov	r0, r4
   15008:	mov	r1, r7
   1500c:	mov	r2, r6
   15010:	bl	13a04 <table_get_char@@Base>
   15014:	b	15028 <table_cell_to_buffer@@Base+0x2c4>
   15018:	mov	r0, r4
   1501c:	mov	r1, r7
   15020:	mov	r2, r6
   15024:	bl	13a1c <table_get_uchar@@Base>
   15028:	ldr	r2, [pc, #172]	; 150dc <table_cell_to_buffer@@Base+0x378>
   1502c:	mov	r3, r0
   15030:	add	r2, pc, r2
   15034:	b	15074 <table_cell_to_buffer@@Base+0x310>
   15038:	mov	r0, r4
   1503c:	mov	r1, r7
   15040:	mov	r2, r6
   15044:	bl	13a34 <table_get_string@@Base>
   15048:	ldr	r2, [pc, #124]	; 150cc <table_cell_to_buffer@@Base+0x368>
   1504c:	mov	r3, r0
   15050:	add	r2, pc, r2
   15054:	b	15074 <table_cell_to_buffer@@Base+0x310>
   15058:	mov	r0, r4
   1505c:	mov	r1, r7
   15060:	mov	r2, r6
   15064:	bl	13824 <table_get_bool@@Base>
   15068:	ldr	r2, [pc, #60]	; 150ac <table_cell_to_buffer@@Base+0x348>
   1506c:	mov	r3, r0
   15070:	add	r2, pc, r2
   15074:	mov	r0, r5
   15078:	mov	r1, r8
   1507c:	bl	12040 <snprintf@plt>
   15080:	mov	r0, #0
   15084:	sub	sp, fp, #24
   15088:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1508c:	mov	r0, r4
   15090:	mov	r1, r7
   15094:	mov	r2, r6
   15098:	bl	13a48 <table_get_ptr@@Base>
   1509c:	ldr	r2, [pc, #60]	; 150e0 <table_cell_to_buffer@@Base+0x37c>
   150a0:	mov	r3, r0
   150a4:	add	r2, pc, r2
   150a8:	b	15074 <table_cell_to_buffer@@Base+0x310>
   150ac:	andeq	r0, r0, lr, ror r8
   150b0:	andeq	r0, r0, sp, asr #20
   150b4:	andeq	r0, r0, r8, lsl #19
   150b8:	andeq	r0, r0, sp, ror #18
   150bc:	andeq	r0, r0, r2, lsl sl
   150c0:	strdeq	r0, [r0], -r6
   150c4:	ldrdeq	r0, [r0], -sl
   150c8:			; <UNDEFINED> instruction: 0x000009be
   150cc:			; <UNDEFINED> instruction: 0x000008be
   150d0:	andeq	r0, r0, r1, ror #18
   150d4:	andeq	r0, r0, r4, asr #18
   150d8:	andeq	r0, r0, r8, lsr #18
   150dc:	andeq	r0, r0, ip, ror #17
   150e0:	andeq	r0, r0, fp, ror r8

000150e4 <table_cell_from_buffer@@Base>:
   150e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   150e8:	add	fp, sp, #24
   150ec:	sub	sp, sp, #264	; 0x108
   150f0:	mov	r5, r1
   150f4:	mov	r1, r2
   150f8:	mov	r7, r3
   150fc:	mov	r4, r2
   15100:	mov	r6, r0
   15104:	bl	12dc0 <table_get_column_data_type@@Base>
   15108:	cmp	r0, #23
   1510c:	bhi	15740 <table_cell_from_buffer@@Base+0x65c>
   15110:	add	r1, pc, #4
   15114:	ldr	r0, [r1, r0, lsl #2]
   15118:	add	pc, r1, r0
   1511c:	andeq	r0, r0, r0, rrx
   15120:	muleq	r0, ip, r0
   15124:	ldrdeq	r0, [r0], -r8
   15128:	andeq	r0, r0, r4, lsl r1
   1512c:	andeq	r0, r0, r0, asr r1
   15130:	andeq	r0, r0, ip, lsl #3
   15134:	andeq	r0, r0, r8, asr #3
   15138:	andeq	r0, r0, r4, lsl #4
   1513c:	andeq	r0, r0, r0, asr #4
   15140:	andeq	r0, r0, r4, lsl #5
   15144:	andeq	r0, r0, r8, asr #5
   15148:	andeq	r0, r0, r4, lsl #6
   1514c:	andeq	r0, r0, r0, asr #6
   15150:	andeq	r0, r0, ip, ror r3
   15154:			; <UNDEFINED> instruction: 0x000003b8
   15158:	strdeq	r0, [r0], -ip
   1515c:	andeq	r0, r0, r0, asr #8
   15160:	andeq	r0, r0, ip, ror r4
   15164:			; <UNDEFINED> instruction: 0x000004b8
   15168:	strdeq	r0, [r0], -r4
   1516c:	andeq	r0, r0, r0, lsr r5
   15170:	andeq	r0, r0, ip, ror #10
   15174:	andeq	r0, r0, r8, lsr #11
   15178:	andeq	r0, r0, ip, ror #11
   1517c:	ldr	r1, [pc, #1480]	; 1574c <table_cell_from_buffer@@Base+0x668>
   15180:	add	r2, sp, #8
   15184:	mov	r0, r7
   15188:	add	r1, pc, r1
   1518c:	bl	1204c <__isoc99_sscanf@plt>
   15190:	mov	r1, r0
   15194:	mvn	r0, #0
   15198:	cmp	r1, #1
   1519c:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   151a0:	ldr	r3, [sp, #8]
   151a4:	mov	r0, r6
   151a8:	mov	r1, r5
   151ac:	mov	r2, r4
   151b0:	bl	140a0 <table_set_int@@Base>
   151b4:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   151b8:	ldr	r1, [pc, #1424]	; 15750 <table_cell_from_buffer@@Base+0x66c>
   151bc:	add	r2, sp, #8
   151c0:	mov	r0, r7
   151c4:	add	r1, pc, r1
   151c8:	bl	1204c <__isoc99_sscanf@plt>
   151cc:	mov	r1, r0
   151d0:	mvn	r0, #0
   151d4:	cmp	r1, #1
   151d8:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   151dc:	ldr	r3, [sp, #8]
   151e0:	mov	r0, r6
   151e4:	mov	r1, r5
   151e8:	mov	r2, r4
   151ec:	bl	14120 <table_set_uint@@Base>
   151f0:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   151f4:	ldr	r1, [pc, #1368]	; 15754 <table_cell_from_buffer@@Base+0x670>
   151f8:	add	r2, sp, #8
   151fc:	mov	r0, r7
   15200:	add	r1, pc, r1
   15204:	bl	1204c <__isoc99_sscanf@plt>
   15208:	mov	r1, r0
   1520c:	mvn	r0, #0
   15210:	cmp	r1, #1
   15214:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15218:	ldrsb	r3, [sp, #8]
   1521c:	mov	r0, r6
   15220:	mov	r1, r5
   15224:	mov	r2, r4
   15228:	bl	141a0 <table_set_int8@@Base>
   1522c:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15230:	ldr	r1, [pc, #1312]	; 15758 <table_cell_from_buffer@@Base+0x674>
   15234:	add	r2, sp, #8
   15238:	mov	r0, r7
   1523c:	add	r1, pc, r1
   15240:	bl	1204c <__isoc99_sscanf@plt>
   15244:	mov	r1, r0
   15248:	mvn	r0, #0
   1524c:	cmp	r1, #1
   15250:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15254:	ldrb	r3, [sp, #8]
   15258:	mov	r0, r6
   1525c:	mov	r1, r5
   15260:	mov	r2, r4
   15264:	bl	14220 <table_set_uint8@@Base>
   15268:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   1526c:	ldr	r1, [pc, #1256]	; 1575c <table_cell_from_buffer@@Base+0x678>
   15270:	add	r2, sp, #8
   15274:	mov	r0, r7
   15278:	add	r1, pc, r1
   1527c:	bl	1204c <__isoc99_sscanf@plt>
   15280:	mov	r1, r0
   15284:	mvn	r0, #0
   15288:	cmp	r1, #1
   1528c:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15290:	ldrsh	r3, [sp, #8]
   15294:	mov	r0, r6
   15298:	mov	r1, r5
   1529c:	mov	r2, r4
   152a0:	bl	142a0 <table_set_int16@@Base>
   152a4:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   152a8:	ldr	r1, [pc, #1200]	; 15760 <table_cell_from_buffer@@Base+0x67c>
   152ac:	add	r2, sp, #8
   152b0:	mov	r0, r7
   152b4:	add	r1, pc, r1
   152b8:	bl	1204c <__isoc99_sscanf@plt>
   152bc:	mov	r1, r0
   152c0:	mvn	r0, #0
   152c4:	cmp	r1, #1
   152c8:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   152cc:	ldrh	r3, [sp, #8]
   152d0:	mov	r0, r6
   152d4:	mov	r1, r5
   152d8:	mov	r2, r4
   152dc:	bl	14320 <table_set_uint16@@Base>
   152e0:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   152e4:	ldr	r1, [pc, #1144]	; 15764 <table_cell_from_buffer@@Base+0x680>
   152e8:	add	r2, sp, #8
   152ec:	mov	r0, r7
   152f0:	add	r1, pc, r1
   152f4:	bl	1204c <__isoc99_sscanf@plt>
   152f8:	mov	r1, r0
   152fc:	mvn	r0, #0
   15300:	cmp	r1, #1
   15304:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15308:	ldr	r3, [sp, #8]
   1530c:	mov	r0, r6
   15310:	mov	r1, r5
   15314:	mov	r2, r4
   15318:	bl	143a0 <table_set_int32@@Base>
   1531c:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15320:	ldr	r1, [pc, #1088]	; 15768 <table_cell_from_buffer@@Base+0x684>
   15324:	add	r2, sp, #8
   15328:	mov	r0, r7
   1532c:	add	r1, pc, r1
   15330:	bl	1204c <__isoc99_sscanf@plt>
   15334:	mov	r1, r0
   15338:	mvn	r0, #0
   1533c:	cmp	r1, #1
   15340:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15344:	ldr	r3, [sp, #8]
   15348:	mov	r0, r6
   1534c:	mov	r1, r5
   15350:	mov	r2, r4
   15354:	bl	14420 <table_set_uint32@@Base>
   15358:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   1535c:	ldr	r1, [pc, #1032]	; 1576c <table_cell_from_buffer@@Base+0x688>
   15360:	add	r2, sp, #8
   15364:	mov	r0, r7
   15368:	add	r1, pc, r1
   1536c:	bl	1204c <__isoc99_sscanf@plt>
   15370:	mov	r1, r0
   15374:	mvn	r0, #0
   15378:	cmp	r1, #1
   1537c:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15380:	ldr	r0, [sp, #8]
   15384:	ldr	r1, [sp, #12]
   15388:	mov	r2, r4
   1538c:	stm	sp, {r0, r1}
   15390:	mov	r0, r6
   15394:	mov	r1, r5
   15398:	bl	144a0 <table_set_int64@@Base>
   1539c:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   153a0:	ldr	r1, [pc, #968]	; 15770 <table_cell_from_buffer@@Base+0x68c>
   153a4:	add	r2, sp, #8
   153a8:	mov	r0, r7
   153ac:	add	r1, pc, r1
   153b0:	bl	1204c <__isoc99_sscanf@plt>
   153b4:	mov	r1, r0
   153b8:	mvn	r0, #0
   153bc:	cmp	r1, #1
   153c0:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   153c4:	ldr	r0, [sp, #8]
   153c8:	ldr	r1, [sp, #12]
   153cc:	mov	r2, r4
   153d0:	stm	sp, {r0, r1}
   153d4:	mov	r0, r6
   153d8:	mov	r1, r5
   153dc:	bl	14528 <table_set_uint64@@Base>
   153e0:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   153e4:	ldr	r1, [pc, #904]	; 15774 <table_cell_from_buffer@@Base+0x690>
   153e8:	add	r2, sp, #8
   153ec:	mov	r0, r7
   153f0:	add	r1, pc, r1
   153f4:	bl	1204c <__isoc99_sscanf@plt>
   153f8:	mov	r1, r0
   153fc:	mvn	r0, #0
   15400:	cmp	r1, #1
   15404:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15408:	ldrsh	r3, [sp, #8]
   1540c:	mov	r0, r6
   15410:	mov	r1, r5
   15414:	mov	r2, r4
   15418:	bl	145b0 <table_set_short@@Base>
   1541c:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15420:	ldr	r1, [pc, #848]	; 15778 <table_cell_from_buffer@@Base+0x694>
   15424:	add	r2, sp, #8
   15428:	mov	r0, r7
   1542c:	add	r1, pc, r1
   15430:	bl	1204c <__isoc99_sscanf@plt>
   15434:	mov	r1, r0
   15438:	mvn	r0, #0
   1543c:	cmp	r1, #1
   15440:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15444:	ldrh	r3, [sp, #8]
   15448:	mov	r0, r6
   1544c:	mov	r1, r5
   15450:	mov	r2, r4
   15454:	bl	14630 <table_set_ushort@@Base>
   15458:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   1545c:	ldr	r1, [pc, #792]	; 1577c <table_cell_from_buffer@@Base+0x698>
   15460:	add	r2, sp, #8
   15464:	mov	r0, r7
   15468:	add	r1, pc, r1
   1546c:	bl	1204c <__isoc99_sscanf@plt>
   15470:	mov	r1, r0
   15474:	mvn	r0, #0
   15478:	cmp	r1, #1
   1547c:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15480:	ldr	r3, [sp, #8]
   15484:	mov	r0, r6
   15488:	mov	r1, r5
   1548c:	mov	r2, r4
   15490:	bl	146b0 <table_set_long@@Base>
   15494:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15498:	ldr	r1, [pc, #736]	; 15780 <table_cell_from_buffer@@Base+0x69c>
   1549c:	add	r2, sp, #8
   154a0:	mov	r0, r7
   154a4:	add	r1, pc, r1
   154a8:	bl	1204c <__isoc99_sscanf@plt>
   154ac:	mov	r1, r0
   154b0:	mvn	r0, #0
   154b4:	cmp	r1, #1
   154b8:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   154bc:	ldr	r3, [sp, #8]
   154c0:	mov	r0, r6
   154c4:	mov	r1, r5
   154c8:	mov	r2, r4
   154cc:	bl	14730 <table_set_ulong@@Base>
   154d0:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   154d4:	ldr	r1, [pc, #680]	; 15784 <table_cell_from_buffer@@Base+0x6a0>
   154d8:	add	r2, sp, #8
   154dc:	mov	r0, r7
   154e0:	add	r1, pc, r1
   154e4:	bl	1204c <__isoc99_sscanf@plt>
   154e8:	mov	r1, r0
   154ec:	mvn	r0, #0
   154f0:	cmp	r1, #1
   154f4:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   154f8:	ldr	r0, [sp, #8]
   154fc:	ldr	r1, [sp, #12]
   15500:	mov	r2, r4
   15504:	stm	sp, {r0, r1}
   15508:	mov	r0, r6
   1550c:	mov	r1, r5
   15510:	bl	147b0 <table_set_llong@@Base>
   15514:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15518:	ldr	r1, [pc, #616]	; 15788 <table_cell_from_buffer@@Base+0x6a4>
   1551c:	add	r2, sp, #8
   15520:	mov	r0, r7
   15524:	add	r1, pc, r1
   15528:	bl	1204c <__isoc99_sscanf@plt>
   1552c:	mov	r1, r0
   15530:	mvn	r0, #0
   15534:	cmp	r1, #1
   15538:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   1553c:	ldr	r0, [sp, #8]
   15540:	ldr	r1, [sp, #12]
   15544:	mov	r2, r4
   15548:	stm	sp, {r0, r1}
   1554c:	mov	r0, r6
   15550:	mov	r1, r5
   15554:	bl	14838 <table_set_ullong@@Base>
   15558:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   1555c:	ldr	r1, [pc, #556]	; 15790 <table_cell_from_buffer@@Base+0x6ac>
   15560:	add	r2, sp, #8
   15564:	mov	r0, r7
   15568:	add	r1, pc, r1
   1556c:	bl	1204c <__isoc99_sscanf@plt>
   15570:	mov	r1, r0
   15574:	mvn	r0, #0
   15578:	cmp	r1, #1
   1557c:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15580:	vldr	s0, [sp, #8]
   15584:	mov	r0, r6
   15588:	mov	r1, r5
   1558c:	mov	r2, r4
   15590:	bl	148c0 <table_set_float@@Base>
   15594:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15598:	ldr	r1, [pc, #500]	; 15794 <table_cell_from_buffer@@Base+0x6b0>
   1559c:	add	r2, sp, #8
   155a0:	mov	r0, r7
   155a4:	add	r1, pc, r1
   155a8:	bl	1204c <__isoc99_sscanf@plt>
   155ac:	mov	r1, r0
   155b0:	mvn	r0, #0
   155b4:	cmp	r1, #1
   155b8:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   155bc:	vldr	d0, [sp, #8]
   155c0:	mov	r0, r6
   155c4:	mov	r1, r5
   155c8:	mov	r2, r4
   155cc:	bl	1494c <table_set_double@@Base>
   155d0:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   155d4:	ldr	r1, [pc, #444]	; 15798 <table_cell_from_buffer@@Base+0x6b4>
   155d8:	add	r2, sp, #8
   155dc:	mov	r0, r7
   155e0:	add	r1, pc, r1
   155e4:	bl	1204c <__isoc99_sscanf@plt>
   155e8:	mov	r1, r0
   155ec:	mvn	r0, #0
   155f0:	cmp	r1, #1
   155f4:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   155f8:	vldr	d0, [sp, #8]
   155fc:	mov	r0, r6
   15600:	mov	r1, r5
   15604:	mov	r2, r4
   15608:	bl	149d4 <table_set_ldouble@@Base>
   1560c:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15610:	ldr	r1, [pc, #392]	; 157a0 <table_cell_from_buffer@@Base+0x6bc>
   15614:	add	r2, sp, #8
   15618:	mov	r0, r7
   1561c:	add	r1, pc, r1
   15620:	bl	1204c <__isoc99_sscanf@plt>
   15624:	mov	r1, r0
   15628:	mvn	r0, #0
   1562c:	cmp	r1, #1
   15630:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15634:	ldrb	r3, [sp, #8]
   15638:	mov	r0, r6
   1563c:	mov	r1, r5
   15640:	mov	r2, r4
   15644:	bl	14a7c <table_set_char@@Base>
   15648:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   1564c:	ldr	r1, [pc, #336]	; 157a4 <table_cell_from_buffer@@Base+0x6c0>
   15650:	add	r2, sp, #8
   15654:	mov	r0, r7
   15658:	add	r1, pc, r1
   1565c:	bl	1204c <__isoc99_sscanf@plt>
   15660:	mov	r1, r0
   15664:	mvn	r0, #0
   15668:	cmp	r1, #1
   1566c:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   15670:	ldrb	r3, [sp, #8]
   15674:	mov	r0, r6
   15678:	mov	r1, r5
   1567c:	mov	r2, r4
   15680:	bl	14afc <table_set_uchar@@Base>
   15684:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15688:	ldr	r1, [pc, #252]	; 1578c <table_cell_from_buffer@@Base+0x6a8>
   1568c:	add	r2, sp, #8
   15690:	mov	r0, r7
   15694:	add	r1, pc, r1
   15698:	bl	1204c <__isoc99_sscanf@plt>
   1569c:	mov	r1, r0
   156a0:	mvn	r0, #0
   156a4:	cmp	r1, #1
   156a8:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   156ac:	add	r3, sp, #8
   156b0:	mov	r0, r6
   156b4:	mov	r1, r5
   156b8:	mov	r2, r4
   156bc:	bl	14a5c <table_set_string@@Base>
   156c0:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   156c4:	ldr	r1, [pc, #208]	; 1579c <table_cell_from_buffer@@Base+0x6b8>
   156c8:	add	r2, sp, #8
   156cc:	mov	r0, r7
   156d0:	add	r1, pc, r1
   156d4:	bl	1204c <__isoc99_sscanf@plt>
   156d8:	mov	r1, r0
   156dc:	mvn	r0, #0
   156e0:	cmp	r1, #1
   156e4:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   156e8:	ldr	r3, [sp, #8]
   156ec:	mov	r0, r6
   156f0:	mov	r1, r5
   156f4:	mov	r2, r4
   156f8:	cmp	r3, #0
   156fc:	movwne	r3, #1
   15700:	bl	14020 <table_set_bool@@Base>
   15704:	b	15740 <table_cell_from_buffer@@Base+0x65c>
   15708:	ldr	r1, [pc, #152]	; 157a8 <table_cell_from_buffer@@Base+0x6c4>
   1570c:	add	r2, sp, #8
   15710:	mov	r0, r7
   15714:	add	r1, pc, r1
   15718:	bl	1204c <__isoc99_sscanf@plt>
   1571c:	mov	r1, r0
   15720:	mvn	r0, #0
   15724:	cmp	r1, #1
   15728:	bne	15744 <table_cell_from_buffer@@Base+0x660>
   1572c:	ldr	r3, [sp, #8]
   15730:	mov	r0, r6
   15734:	mov	r1, r5
   15738:	mov	r2, r4
   1573c:	bl	14b7c <table_set_ptr@@Base>
   15740:	mov	r0, #0
   15744:	sub	sp, fp, #24
   15748:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1574c:	andeq	r0, r0, r6, ror #14
   15750:	andeq	r0, r0, sp, lsr #14
   15754:	andeq	r0, r0, r2, lsr #14
   15758:	andeq	r0, r0, fp, ror #13
   1575c:	andeq	r0, r0, r6, lsl #13
   15760:	andeq	r0, r0, lr, asr #12
   15764:	strdeq	r0, [r0], -lr
   15768:	andeq	r0, r0, r5, asr #11
   1576c:	andeq	r0, r0, ip, lsl #11
   15770:	andeq	r0, r0, sp, asr #10
   15774:	andeq	r0, r0, lr, lsl #10
   15778:	ldrdeq	r0, [r0], -r6
   1577c:	muleq	r0, lr, r4
   15780:	andeq	r0, r0, r6, ror #8
   15784:	andeq	r0, r0, r4, lsl r4
   15788:	ldrdeq	r0, [r0], -r5
   1578c:	andeq	r0, r0, sl, ror r2
   15790:	andeq	r0, r0, r9, lsr #7
   15794:	andeq	r0, r0, r0, ror r3
   15798:	andeq	r0, r0, r8, lsr r3
   1579c:	andeq	r0, r0, lr, lsl r2
   157a0:	andeq	r0, r0, r0, lsl #6
   157a4:	andeq	r0, r0, r4, asr #5
   157a8:	andeq	r0, r0, fp, lsl #4

000157ac <table_cell_nullify@@Base>:
   157ac:	push	{r4, r5, fp, lr}
   157b0:	add	fp, sp, #8
   157b4:	mov	r4, r2
   157b8:	bl	13a80 <table_get_row_ptr@@Base>
   157bc:	ldr	r5, [r0]
   157c0:	ldr	r0, [r5, r4, lsl #2]
   157c4:	cmp	r0, #0
   157c8:	beq	157d8 <table_cell_nullify@@Base+0x2c>
   157cc:	bl	11fd4 <free@plt>
   157d0:	mov	r0, #0
   157d4:	str	r0, [r5, r4, lsl #2]
   157d8:	mov	r0, #0
   157dc:	pop	{r4, r5, fp, pc}

000157e0 <__libc_csu_init@@Base>:
   157e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   157e4:	mov	r7, r0
   157e8:	ldr	r6, [pc, #72]	; 15838 <__libc_csu_init@@Base+0x58>
   157ec:	ldr	r5, [pc, #72]	; 1583c <__libc_csu_init@@Base+0x5c>
   157f0:	add	r6, pc, r6
   157f4:	add	r5, pc, r5
   157f8:	sub	r6, r6, r5
   157fc:	mov	r8, r1
   15800:	mov	r9, r2
   15804:	bl	11f9c <strcmp@plt-0x20>
   15808:	asrs	r6, r6, #2
   1580c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15810:	mov	r4, #0
   15814:	add	r4, r4, #1
   15818:	ldr	r3, [r5], #4
   1581c:	mov	r2, r9
   15820:	mov	r1, r8
   15824:	mov	r0, r7
   15828:	blx	r3
   1582c:	cmp	r6, r4
   15830:	bne	15814 <__libc_csu_init@@Base+0x34>
   15834:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15838:			; <UNDEFINED> instruction: 0x000106b4
   1583c:	andeq	r0, r1, ip, lsr #13

00015840 <__libc_csu_fini@@Base>:
   15840:	bx	lr

Disassembly of section .fini:

00015844 <.fini>:
   15844:	push	{r3, lr}
   15848:	pop	{r3, pc}
