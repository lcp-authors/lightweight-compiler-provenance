
../repos/coreutils/src/tac:     file format elf32-littlearm


Disassembly of section .init:

0001126c <.init>:
   1126c:	push	{r3, lr}
   11270:	bl	1162c <__mempcpy_chk@plt+0x4c>
   11274:	pop	{r3, pc}

Disassembly of section .plt:

00011278 <pthread_mutex_unlock@plt-0x14>:
   11278:	push	{lr}		; (str lr, [sp, #-4]!)
   1127c:	ldr	lr, [pc, #4]	; 11288 <pthread_mutex_unlock@plt-0x4>
   11280:	add	lr, pc, lr
   11284:	ldr	pc, [lr, #8]!
   11288:	andeq	r2, r2, r8, ror sp

0001128c <pthread_mutex_unlock@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #139264	; 0x22000
   11294:	ldr	pc, [ip, #3448]!	; 0xd78

00011298 <fdopen@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #139264	; 0x22000
   112a0:	ldr	pc, [ip, #3440]!	; 0xd70

000112a4 <calloc@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #139264	; 0x22000
   112ac:	ldr	pc, [ip, #3432]!	; 0xd68

000112b0 <fputs_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #139264	; 0x22000
   112b8:	ldr	pc, [ip, #3424]!	; 0xd60

000112bc <wctype@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #139264	; 0x22000
   112c4:	ldr	pc, [ip, #3416]!	; 0xd58

000112c8 <raise@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #139264	; 0x22000
   112d0:	ldr	pc, [ip, #3408]!	; 0xd50

000112d4 <wcrtomb@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #139264	; 0x22000
   112dc:	ldr	pc, [ip, #3400]!	; 0xd48

000112e0 <iswctype@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #139264	; 0x22000
   112e8:	ldr	pc, [ip, #3392]!	; 0xd40

000112ec <strcmp@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #139264	; 0x22000
   112f4:	ldr	pc, [ip, #3384]!	; 0xd38

000112f8 <read@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #139264	; 0x22000
   11300:	ldr	pc, [ip, #3376]!	; 0xd30

00011304 <pthread_mutex_destroy@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #139264	; 0x22000
   1130c:	ldr	pc, [ip, #3368]!	; 0xd28

00011310 <fflush@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #139264	; 0x22000
   11318:	ldr	pc, [ip, #3360]!	; 0xd20

0001131c <memmove@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #139264	; 0x22000
   11324:	ldr	pc, [ip, #3352]!	; 0xd18

00011328 <free@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #139264	; 0x22000
   11330:	ldr	pc, [ip, #3344]!	; 0xd10

00011334 <pthread_mutex_lock@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #139264	; 0x22000
   1133c:	ldr	pc, [ip, #3336]!	; 0xd08

00011340 <_exit@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #139264	; 0x22000
   11348:	ldr	pc, [ip, #3328]!	; 0xd00

0001134c <memcpy@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #139264	; 0x22000
   11354:	ldr	pc, [ip, #3320]!	; 0xcf8

00011358 <tolower@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #139264	; 0x22000
   11360:	ldr	pc, [ip, #3312]!	; 0xcf0

00011364 <pthread_mutex_init@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #139264	; 0x22000
   1136c:	ldr	pc, [ip, #3304]!	; 0xce8

00011370 <towlower@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #139264	; 0x22000
   11378:	ldr	pc, [ip, #3296]!	; 0xce0

0001137c <mbsinit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #139264	; 0x22000
   11384:	ldr	pc, [ip, #3288]!	; 0xcd8

00011388 <ftruncate64@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #139264	; 0x22000
   11390:	ldr	pc, [ip, #3280]!	; 0xcd0

00011394 <fwrite_unlocked@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #139264	; 0x22000
   1139c:	ldr	pc, [ip, #3272]!	; 0xcc8

000113a0 <dcgettext@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #139264	; 0x22000
   113a8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113ac <unlink@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #139264	; 0x22000
   113b4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113b8 <realloc@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #139264	; 0x22000
   113c0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113c4 <textdomain@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #139264	; 0x22000
   113cc:	ldr	pc, [ip, #3240]!	; 0xca8

000113d0 <fflush_unlocked@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #139264	; 0x22000
   113d8:	ldr	pc, [ip, #3232]!	; 0xca0

000113dc <iswprint@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #139264	; 0x22000
   113e4:	ldr	pc, [ip, #3224]!	; 0xc98

000113e8 <mkostemp64@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #139264	; 0x22000
   113f0:	ldr	pc, [ip, #3216]!	; 0xc90

000113f4 <lseek64@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #139264	; 0x22000
   113fc:	ldr	pc, [ip, #3208]!	; 0xc88

00011400 <__ctype_get_mb_cur_max@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #139264	; 0x22000
   11408:	ldr	pc, [ip, #3200]!	; 0xc80

0001140c <__fpending@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #139264	; 0x22000
   11414:	ldr	pc, [ip, #3192]!	; 0xc78

00011418 <ferror_unlocked@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #139264	; 0x22000
   11420:	ldr	pc, [ip, #3184]!	; 0xc70

00011424 <mbrtowc@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #139264	; 0x22000
   1142c:	ldr	pc, [ip, #3176]!	; 0xc68

00011430 <error@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #139264	; 0x22000
   11438:	ldr	pc, [ip, #3168]!	; 0xc60

0001143c <open64@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #139264	; 0x22000
   11444:	ldr	pc, [ip, #3160]!	; 0xc58

00011448 <getenv@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #139264	; 0x22000
   11450:	ldr	pc, [ip, #3152]!	; 0xc50

00011454 <mkstemp64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #139264	; 0x22000
   1145c:	ldr	pc, [ip, #3144]!	; 0xc48

00011460 <malloc@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #139264	; 0x22000
   11468:	ldr	pc, [ip, #3136]!	; 0xc40

0001146c <__libc_start_main@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #139264	; 0x22000
   11474:	ldr	pc, [ip, #3128]!	; 0xc38

00011478 <__freading@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #139264	; 0x22000
   11480:	ldr	pc, [ip, #3120]!	; 0xc30

00011484 <__gmon_start__@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #139264	; 0x22000
   1148c:	ldr	pc, [ip, #3112]!	; 0xc28

00011490 <getopt_long@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #139264	; 0x22000
   11498:	ldr	pc, [ip, #3104]!	; 0xc20

0001149c <__ctype_b_loc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #139264	; 0x22000
   114a4:	ldr	pc, [ip, #3096]!	; 0xc18

000114a8 <exit@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #139264	; 0x22000
   114b0:	ldr	pc, [ip, #3088]!	; 0xc10

000114b4 <bcmp@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #139264	; 0x22000
   114bc:	ldr	pc, [ip, #3080]!	; 0xc08

000114c0 <strlen@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #139264	; 0x22000
   114c8:	ldr	pc, [ip, #3072]!	; 0xc00

000114cc <__errno_location@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #139264	; 0x22000
   114d4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114d8 <iswalnum@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #139264	; 0x22000
   114e0:	ldr	pc, [ip, #3056]!	; 0xbf0

000114e4 <__cxa_atexit@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #139264	; 0x22000
   114ec:	ldr	pc, [ip, #3048]!	; 0xbe8

000114f0 <memset@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #139264	; 0x22000
   114f8:	ldr	pc, [ip, #3040]!	; 0xbe0

000114fc <btowc@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #139264	; 0x22000
   11504:	ldr	pc, [ip, #3032]!	; 0xbd8

00011508 <__printf_chk@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #139264	; 0x22000
   11510:	ldr	pc, [ip, #3024]!	; 0xbd0

00011514 <fileno@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #139264	; 0x22000
   1151c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011520 <__fprintf_chk@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #139264	; 0x22000
   11528:	ldr	pc, [ip, #3008]!	; 0xbc0

0001152c <fclose@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #139264	; 0x22000
   11534:	ldr	pc, [ip, #3000]!	; 0xbb8

00011538 <fseeko64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #139264	; 0x22000
   11540:	ldr	pc, [ip, #2992]!	; 0xbb0

00011544 <fcntl64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #139264	; 0x22000
   1154c:	ldr	pc, [ip, #2984]!	; 0xba8

00011550 <setlocale@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #139264	; 0x22000
   11558:	ldr	pc, [ip, #2976]!	; 0xba0

0001155c <toupper@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #139264	; 0x22000
   11564:	ldr	pc, [ip, #2968]!	; 0xb98

00011568 <strrchr@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #139264	; 0x22000
   11570:	ldr	pc, [ip, #2960]!	; 0xb90

00011574 <nl_langinfo@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #139264	; 0x22000
   1157c:	ldr	pc, [ip, #2952]!	; 0xb88

00011580 <clearerr_unlocked@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #139264	; 0x22000
   11588:	ldr	pc, [ip, #2944]!	; 0xb80

0001158c <bindtextdomain@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #139264	; 0x22000
   11594:	ldr	pc, [ip, #2936]!	; 0xb78

00011598 <isatty@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #139264	; 0x22000
   115a0:	ldr	pc, [ip, #2928]!	; 0xb70

000115a4 <towupper@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #139264	; 0x22000
   115ac:	ldr	pc, [ip, #2920]!	; 0xb68

000115b0 <fputs@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #139264	; 0x22000
   115b8:	ldr	pc, [ip, #2912]!	; 0xb60

000115bc <strncmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #139264	; 0x22000
   115c4:	ldr	pc, [ip, #2904]!	; 0xb58

000115c8 <abort@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #139264	; 0x22000
   115d0:	ldr	pc, [ip, #2896]!	; 0xb50

000115d4 <close@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #139264	; 0x22000
   115dc:	ldr	pc, [ip, #2888]!	; 0xb48

000115e0 <__mempcpy_chk@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #139264	; 0x22000
   115e8:	ldr	pc, [ip, #2880]!	; 0xb40

Disassembly of section .text:

000115f0 <.text>:
   115f0:	mov	fp, #0
   115f4:	mov	lr, #0
   115f8:	pop	{r1}		; (ldr r1, [sp], #4)
   115fc:	mov	r2, sp
   11600:	push	{r2}		; (str r2, [sp, #-4]!)
   11604:	push	{r0}		; (str r0, [sp, #-4]!)
   11608:	ldr	ip, [pc, #16]	; 11620 <__mempcpy_chk@plt+0x40>
   1160c:	push	{ip}		; (str ip, [sp, #-4]!)
   11610:	ldr	r0, [pc, #12]	; 11624 <__mempcpy_chk@plt+0x44>
   11614:	ldr	r3, [pc, #12]	; 11628 <__mempcpy_chk@plt+0x48>
   11618:	bl	1146c <__libc_start_main@plt>
   1161c:	bl	115c8 <abort@plt>
   11620:	ldrdeq	r2, [r2], -ip
   11624:	andeq	r1, r1, r8, asr r9
   11628:	andeq	r2, r2, ip, ror r3
   1162c:	ldr	r3, [pc, #20]	; 11648 <__mempcpy_chk@plt+0x68>
   11630:	ldr	r2, [pc, #20]	; 1164c <__mempcpy_chk@plt+0x6c>
   11634:	add	r3, pc, r3
   11638:	ldr	r2, [r3, r2]
   1163c:	cmp	r2, #0
   11640:	bxeq	lr
   11644:	b	11484 <__gmon_start__@plt>
   11648:	andeq	r2, r2, r4, asr #19
   1164c:	andeq	r0, r0, ip, lsr #2
   11650:	ldr	r0, [pc, #24]	; 11670 <__mempcpy_chk@plt+0x90>
   11654:	ldr	r3, [pc, #24]	; 11674 <__mempcpy_chk@plt+0x94>
   11658:	cmp	r3, r0
   1165c:	bxeq	lr
   11660:	ldr	r3, [pc, #16]	; 11678 <__mempcpy_chk@plt+0x98>
   11664:	cmp	r3, #0
   11668:	bxeq	lr
   1166c:	bx	r3
   11670:	andeq	r4, r3, r0, lsl #3
   11674:	andeq	r4, r3, r0, lsl #3
   11678:	andeq	r0, r0, r0
   1167c:	ldr	r0, [pc, #36]	; 116a8 <__mempcpy_chk@plt+0xc8>
   11680:	ldr	r1, [pc, #36]	; 116ac <__mempcpy_chk@plt+0xcc>
   11684:	sub	r1, r1, r0
   11688:	asr	r1, r1, #2
   1168c:	add	r1, r1, r1, lsr #31
   11690:	asrs	r1, r1, #1
   11694:	bxeq	lr
   11698:	ldr	r3, [pc, #16]	; 116b0 <__mempcpy_chk@plt+0xd0>
   1169c:	cmp	r3, #0
   116a0:	bxeq	lr
   116a4:	bx	r3
   116a8:	andeq	r4, r3, r0, lsl #3
   116ac:	andeq	r4, r3, r0, lsl #3
   116b0:	andeq	r0, r0, r0
   116b4:	push	{r4, lr}
   116b8:	ldr	r4, [pc, #24]	; 116d8 <__mempcpy_chk@plt+0xf8>
   116bc:	ldrb	r3, [r4]
   116c0:	cmp	r3, #0
   116c4:	popne	{r4, pc}
   116c8:	bl	11650 <__mempcpy_chk@plt+0x70>
   116cc:	mov	r3, #1
   116d0:	strb	r3, [r4]
   116d4:	pop	{r4, pc}
   116d8:	muleq	r3, ip, r1
   116dc:	b	1167c <__mempcpy_chk@plt+0x9c>
   116e0:	push	{fp, lr}
   116e4:	mov	fp, sp
   116e8:	sub	sp, sp, #56	; 0x38
   116ec:	mov	r8, r0
   116f0:	cmp	r0, #0
   116f4:	bne	11918 <__mempcpy_chk@plt+0x338>
   116f8:	movw	r1, #9259	; 0x242b
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	movt	r1, #2
   11708:	bl	113a0 <dcgettext@plt>
   1170c:	mov	r1, r0
   11710:	movw	r0, #25344	; 0x6300
   11714:	movt	r0, #3
   11718:	ldr	r2, [r0]
   1171c:	mov	r0, #1
   11720:	bl	11508 <__printf_chk@plt>
   11724:	movw	r1, #9292	; 0x244c
   11728:	mov	r0, #0
   1172c:	mov	r2, #5
   11730:	movt	r1, #2
   11734:	bl	113a0 <dcgettext@plt>
   11738:	movw	r9, #16788	; 0x4194
   1173c:	movt	r9, #3
   11740:	ldr	r1, [r9]
   11744:	bl	112b0 <fputs_unlocked@plt>
   11748:	movw	r1, #9768	; 0x2628
   1174c:	mov	r0, #0
   11750:	mov	r2, #5
   11754:	movt	r1, #2
   11758:	bl	113a0 <dcgettext@plt>
   1175c:	ldr	r1, [r9]
   11760:	bl	112b0 <fputs_unlocked@plt>
   11764:	movw	r1, #9824	; 0x2660
   11768:	mov	r0, #0
   1176c:	mov	r2, #5
   11770:	movt	r1, #2
   11774:	bl	113a0 <dcgettext@plt>
   11778:	ldr	r1, [r9]
   1177c:	bl	112b0 <fputs_unlocked@plt>
   11780:	movw	r1, #9346	; 0x2482
   11784:	mov	r0, #0
   11788:	mov	r2, #5
   1178c:	movt	r1, #2
   11790:	bl	113a0 <dcgettext@plt>
   11794:	ldr	r1, [r9]
   11798:	bl	112b0 <fputs_unlocked@plt>
   1179c:	movw	r1, #9568	; 0x2560
   117a0:	mov	r0, #0
   117a4:	mov	r2, #5
   117a8:	movt	r1, #2
   117ac:	bl	113a0 <dcgettext@plt>
   117b0:	ldr	r1, [r9]
   117b4:	bl	112b0 <fputs_unlocked@plt>
   117b8:	movw	r1, #9613	; 0x258d
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #2
   117c8:	bl	113a0 <dcgettext@plt>
   117cc:	ldr	r1, [r9]
   117d0:	bl	112b0 <fputs_unlocked@plt>
   117d4:	movw	r0, #10624	; 0x2980
   117d8:	mov	r6, sp
   117dc:	movt	r0, #2
   117e0:	mov	r1, r6
   117e4:	ldm	r0!, {r2, r3, r4, r5}
   117e8:	stmia	r1!, {r2, r3, r4, r5}
   117ec:	ldm	r0!, {r2, r3, r4, r5, r7}
   117f0:	stmia	r1!, {r2, r3, r4, r5, r7}
   117f4:	ldm	r0, {r2, r3, r4, r5, r7}
   117f8:	stm	r1, {r2, r3, r4, r5, r7}
   117fc:	movw	r1, #9899	; 0x26ab
   11800:	movw	r5, #9667	; 0x25c3
   11804:	movt	r1, #2
   11808:	movt	r5, #2
   1180c:	mov	r0, r5
   11810:	bl	112ec <strcmp@plt>
   11814:	cmp	r0, #0
   11818:	ldrne	r1, [r6, #8]!
   1181c:	cmpne	r1, #0
   11820:	bne	1180c <__mempcpy_chk@plt+0x22c>
   11824:	movw	r1, #9994	; 0x270a
   11828:	ldr	r6, [r6, #4]
   1182c:	mov	r0, #0
   11830:	mov	r2, #5
   11834:	movt	r1, #2
   11838:	bl	113a0 <dcgettext@plt>
   1183c:	movw	r2, #9700	; 0x25e4
   11840:	movw	r3, #10017	; 0x2721
   11844:	mov	r1, r0
   11848:	mov	r0, #1
   1184c:	movt	r2, #2
   11850:	movt	r3, #2
   11854:	bl	11508 <__printf_chk@plt>
   11858:	cmp	r6, #0
   1185c:	mov	r0, #5
   11860:	mov	r1, #0
   11864:	moveq	r6, r5
   11868:	bl	11550 <setlocale@plt>
   1186c:	cmp	r0, #0
   11870:	beq	118a8 <__mempcpy_chk@plt+0x2c8>
   11874:	movw	r1, #10057	; 0x2749
   11878:	mov	r2, #3
   1187c:	movt	r1, #2
   11880:	bl	115bc <strncmp@plt>
   11884:	cmp	r0, #0
   11888:	beq	118a8 <__mempcpy_chk@plt+0x2c8>
   1188c:	movw	r1, #10061	; 0x274d
   11890:	mov	r0, #0
   11894:	mov	r2, #5
   11898:	movt	r1, #2
   1189c:	bl	113a0 <dcgettext@plt>
   118a0:	ldr	r1, [r9]
   118a4:	bl	112b0 <fputs_unlocked@plt>
   118a8:	movw	r1, #10132	; 0x2794
   118ac:	mov	r0, #0
   118b0:	mov	r2, #5
   118b4:	movt	r1, #2
   118b8:	bl	113a0 <dcgettext@plt>
   118bc:	movw	r2, #10017	; 0x2721
   118c0:	mov	r1, r0
   118c4:	mov	r0, #1
   118c8:	mov	r3, r5
   118cc:	movt	r2, #2
   118d0:	bl	11508 <__printf_chk@plt>
   118d4:	movw	r1, #10159	; 0x27af
   118d8:	mov	r0, #0
   118dc:	mov	r2, #5
   118e0:	movt	r1, #2
   118e4:	bl	113a0 <dcgettext@plt>
   118e8:	mov	r1, r0
   118ec:	movw	r0, #9927	; 0x26c7
   118f0:	movw	r3, #10209	; 0x27e1
   118f4:	cmp	r6, r5
   118f8:	mov	r2, r6
   118fc:	movt	r0, #2
   11900:	movt	r3, #2
   11904:	moveq	r3, r0
   11908:	mov	r0, #1
   1190c:	bl	11508 <__printf_chk@plt>
   11910:	mov	r0, r8
   11914:	bl	114a8 <exit@plt>
   11918:	movw	r0, #16784	; 0x4190
   1191c:	movw	r1, #9220	; 0x2404
   11920:	mov	r2, #5
   11924:	movt	r0, #3
   11928:	movt	r1, #2
   1192c:	ldr	r5, [r0]
   11930:	mov	r0, #0
   11934:	bl	113a0 <dcgettext@plt>
   11938:	mov	r2, r0
   1193c:	movw	r0, #25344	; 0x6300
   11940:	mov	r1, #1
   11944:	movt	r0, #3
   11948:	ldr	r3, [r0]
   1194c:	mov	r0, r5
   11950:	bl	11520 <__fprintf_chk@plt>
   11954:	b	11910 <__mempcpy_chk@plt+0x330>
   11958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1195c:	add	fp, sp, #28
   11960:	sub	sp, sp, #36	; 0x24
   11964:	mov	sl, r0
   11968:	ldr	r0, [r1]
   1196c:	mov	r9, r1
   11970:	bl	12b54 <__mempcpy_chk@plt+0x1574>
   11974:	movw	r1, #10209	; 0x27e1
   11978:	mov	r0, #6
   1197c:	movt	r1, #2
   11980:	bl	11550 <setlocale@plt>
   11984:	movw	r6, #9704	; 0x25e8
   11988:	movw	r1, #9671	; 0x25c7
   1198c:	movt	r6, #2
   11990:	movt	r1, #2
   11994:	mov	r0, r6
   11998:	bl	1158c <bindtextdomain@plt>
   1199c:	mov	r0, r6
   119a0:	bl	113c4 <textdomain@plt>
   119a4:	movw	r0, #10432	; 0x28c0
   119a8:	movt	r0, #1
   119ac:	bl	223e0 <__mempcpy_chk@plt+0x10e00>
   119b0:	movw	r1, #16800	; 0x41a0
   119b4:	movw	r0, #10208	; 0x27e0
   119b8:	movw	r5, #16808	; 0x41a8
   119bc:	movw	r6, #9695	; 0x25df
   119c0:	movw	r7, #10528	; 0x2920
   119c4:	mov	r8, #0
   119c8:	movt	r1, #3
   119cc:	movt	r0, #2
   119d0:	movt	r5, #3
   119d4:	movt	r6, #2
   119d8:	movt	r7, #2
   119dc:	str	r0, [r1]
   119e0:	movw	r1, #16804	; 0x41a4
   119e4:	mov	r0, #1
   119e8:	movt	r1, #3
   119ec:	strb	r0, [r5]
   119f0:	mov	r4, r1
   119f4:	str	r0, [r1]
   119f8:	mov	r0, sl
   119fc:	mov	r1, r9
   11a00:	mov	r2, r6
   11a04:	mov	r3, r7
   11a08:	str	r8, [sp]
   11a0c:	bl	11490 <getopt_long@plt>
   11a10:	cmp	r0, #97	; 0x61
   11a14:	ble	11a5c <__mempcpy_chk@plt+0x47c>
   11a18:	cmp	r0, #115	; 0x73
   11a1c:	beq	11a30 <__mempcpy_chk@plt+0x450>
   11a20:	cmp	r0, #114	; 0x72
   11a24:	bne	11a4c <__mempcpy_chk@plt+0x46c>
   11a28:	str	r8, [r4]
   11a2c:	b	119f8 <__mempcpy_chk@plt+0x418>
   11a30:	movw	r0, #16792	; 0x4198
   11a34:	movw	r1, #16800	; 0x41a0
   11a38:	movt	r0, #3
   11a3c:	movt	r1, #3
   11a40:	ldr	r0, [r0]
   11a44:	str	r0, [r1]
   11a48:	b	119f8 <__mempcpy_chk@plt+0x418>
   11a4c:	cmp	r0, #98	; 0x62
   11a50:	bne	12180 <__mempcpy_chk@plt+0xba0>
   11a54:	strb	r8, [r5]
   11a58:	b	119f8 <__mempcpy_chk@plt+0x418>
   11a5c:	cmn	r0, #1
   11a60:	bne	12114 <__mempcpy_chk@plt+0xb34>
   11a64:	movw	r8, #16800	; 0x41a0
   11a68:	ldr	r1, [r4]
   11a6c:	mov	r5, r4
   11a70:	movt	r8, #3
   11a74:	ldr	r6, [r8]
   11a78:	cmp	r1, #0
   11a7c:	ldrb	r0, [r6]
   11a80:	beq	11a98 <__mempcpy_chk@plt+0x4b8>
   11a84:	cmp	r0, #0
   11a88:	beq	11aec <__mempcpy_chk@plt+0x50c>
   11a8c:	mov	r0, r6
   11a90:	bl	114c0 <strlen@plt>
   11a94:	b	11af0 <__mempcpy_chk@plt+0x510>
   11a98:	cmp	r0, #0
   11a9c:	beq	12188 <__mempcpy_chk@plt+0xba8>
   11aa0:	movw	r7, #16812	; 0x41ac
   11aa4:	movw	r1, #16844	; 0x41cc
   11aa8:	mov	r0, #0
   11aac:	movt	r7, #3
   11ab0:	movt	r1, #3
   11ab4:	str	r1, [r7, #16]
   11ab8:	str	r0, [r7, #20]
   11abc:	str	r0, [r7]
   11ac0:	str	r0, [r7, #4]
   11ac4:	mov	r0, r6
   11ac8:	bl	114c0 <strlen@plt>
   11acc:	mov	r1, r0
   11ad0:	mov	r0, r6
   11ad4:	mov	r2, r7
   11ad8:	bl	14690 <__mempcpy_chk@plt+0x30b0>
   11adc:	cmp	r0, #0
   11ae0:	bne	121ac <__mempcpy_chk@plt+0xbcc>
   11ae4:	ldr	r0, [r5]
   11ae8:	b	11b00 <__mempcpy_chk@plt+0x520>
   11aec:	mov	r0, #1
   11af0:	movw	r1, #17100	; 0x42cc
   11af4:	str	r0, [r5]
   11af8:	movt	r1, #3
   11afc:	str	r0, [r1]
   11b00:	movw	r2, #17104	; 0x42d0
   11b04:	mov	r1, #8192	; 0x2000
   11b08:	cmp	r0, #4096	; 0x1000
   11b0c:	movt	r2, #3
   11b10:	str	r1, [r2]
   11b14:	bcc	11b44 <__mempcpy_chk@plt+0x564>
   11b18:	mov	r2, #8192	; 0x2000
   11b1c:	cmn	r2, #1
   11b20:	ble	12104 <__mempcpy_chk@plt+0xb24>
   11b24:	lsl	r1, r2, #1
   11b28:	bic	r2, r2, #-2147483647	; 0x80000001
   11b2c:	cmp	r0, r2
   11b30:	mov	r2, r1
   11b34:	bcs	11b1c <__mempcpy_chk@plt+0x53c>
   11b38:	movw	r2, #17104	; 0x42d0
   11b3c:	movt	r2, #3
   11b40:	str	r1, [r2]
   11b44:	orr	r2, r1, #1
   11b48:	movw	r3, #17108	; 0x42d4
   11b4c:	add	r2, r2, r0
   11b50:	movt	r3, #3
   11b54:	lsl	r0, r2, #1
   11b58:	cmp	r1, r2
   11b5c:	cmpcc	r2, r0
   11b60:	str	r0, [r3]
   11b64:	bcc	11b6c <__mempcpy_chk@plt+0x58c>
   11b68:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   11b6c:	bl	21560 <__mempcpy_chk@plt+0xff80>
   11b70:	ldr	r5, [r5]
   11b74:	movw	r4, #17112	; 0x42d8
   11b78:	mov	r6, r0
   11b7c:	mov	r7, #1
   11b80:	movt	r4, #3
   11b84:	str	r0, [r4]
   11b88:	mov	r0, #1
   11b8c:	cmp	r5, #0
   11b90:	beq	11ba8 <__mempcpy_chk@plt+0x5c8>
   11b94:	ldr	r1, [r8]
   11b98:	add	r2, r5, #1
   11b9c:	mov	r0, r6
   11ba0:	bl	1134c <memcpy@plt>
   11ba4:	mov	r0, r5
   11ba8:	add	r0, r6, r0
   11bac:	movw	r1, #10520	; 0x2918
   11bb0:	str	r0, [r4]
   11bb4:	movw	r0, #16776	; 0x4188
   11bb8:	movt	r1, #2
   11bbc:	movt	r0, #3
   11bc0:	ldr	r0, [r0]
   11bc4:	cmp	r0, sl
   11bc8:	movw	sl, #17116	; 0x42dc
   11bcc:	addlt	r1, r9, r0, lsl #2
   11bd0:	movt	sl, #3
   11bd4:	ldr	r8, [r1]
   11bd8:	str	r1, [sp, #24]
   11bdc:	cmp	r8, #0
   11be0:	beq	12090 <__mempcpy_chk@plt+0xab0>
   11be4:	movw	r6, #17120	; 0x42e0
   11be8:	mov	r1, #0
   11bec:	mov	r7, #1
   11bf0:	movt	r6, #3
   11bf4:	str	r1, [sp, #32]
   11bf8:	movw	r1, #10768	; 0x2a10
   11bfc:	mov	r0, r8
   11c00:	movt	r1, #2
   11c04:	bl	112ec <strcmp@plt>
   11c08:	mov	r4, r0
   11c0c:	cmp	r0, #0
   11c10:	beq	11c34 <__mempcpy_chk@plt+0x654>
   11c14:	mov	r0, r8
   11c18:	mov	r1, #0
   11c1c:	bl	1143c <open64@plt>
   11c20:	cmn	r0, #1
   11c24:	ble	11d34 <__mempcpy_chk@plt+0x754>
   11c28:	mov	r9, r0
   11c2c:	str	r4, [sp, #28]
   11c30:	b	11c5c <__mempcpy_chk@plt+0x67c>
   11c34:	movw	r1, #10246	; 0x2806
   11c38:	mov	r0, #1
   11c3c:	mov	r2, #5
   11c40:	str	r4, [sp, #28]
   11c44:	mov	r9, #0
   11c48:	movt	r1, #2
   11c4c:	strb	r0, [sl]
   11c50:	mov	r0, #0
   11c54:	bl	113a0 <dcgettext@plt>
   11c58:	mov	r8, r0
   11c5c:	mov	r0, #2
   11c60:	mov	r2, #0
   11c64:	mov	r3, #0
   11c68:	str	r0, [sp]
   11c6c:	mov	r0, r9
   11c70:	bl	113f4 <lseek64@plt>
   11c74:	cmp	r1, #0
   11c78:	bmi	11c94 <__mempcpy_chk@plt+0x6b4>
   11c7c:	mov	r4, r0
   11c80:	mov	r0, r9
   11c84:	mov	r5, r1
   11c88:	bl	11598 <isatty@plt>
   11c8c:	cmp	r0, #0
   11c90:	beq	11e54 <__mempcpy_chk@plt+0x874>
   11c94:	ldr	r0, [r6]
   11c98:	cmp	r0, #0
   11c9c:	beq	11d68 <__mempcpy_chk@plt+0x788>
   11ca0:	movw	r5, #17124	; 0x42e4
   11ca4:	movt	r5, #3
   11ca8:	ldr	r0, [r5]
   11cac:	bl	11580 <clearerr_unlocked@plt>
   11cb0:	ldr	r0, [r5]
   11cb4:	mov	r1, #0
   11cb8:	mov	r2, #0
   11cbc:	mov	r3, #0
   11cc0:	str	r1, [sp]
   11cc4:	bl	12ab0 <__mempcpy_chk@plt+0x14d0>
   11cc8:	cmp	r0, #0
   11ccc:	bmi	11cec <__mempcpy_chk@plt+0x70c>
   11cd0:	ldr	r0, [r5]
   11cd4:	bl	11514 <fileno@plt>
   11cd8:	mov	r2, #0
   11cdc:	mov	r3, #0
   11ce0:	bl	11388 <ftruncate64@plt>
   11ce4:	cmn	r0, #1
   11ce8:	bgt	11dd8 <__mempcpy_chk@plt+0x7f8>
   11cec:	bl	114cc <__errno_location@plt>
   11cf0:	movw	r1, #10415	; 0x28af
   11cf4:	ldr	r4, [r0]
   11cf8:	mov	r0, #0
   11cfc:	mov	r2, #5
   11d00:	movt	r1, #2
   11d04:	bl	113a0 <dcgettext@plt>
   11d08:	ldr	r1, [r6]
   11d0c:	mov	r5, r0
   11d10:	mov	r0, #4
   11d14:	mov	r6, #0
   11d18:	bl	14208 <__mempcpy_chk@plt+0x2c28>
   11d1c:	mov	r3, r0
   11d20:	mov	r0, #0
   11d24:	mov	r1, r4
   11d28:	mov	r2, r5
   11d2c:	bl	11430 <error@plt>
   11d30:	b	11fc8 <__mempcpy_chk@plt+0x9e8>
   11d34:	bl	114cc <__errno_location@plt>
   11d38:	movw	r1, #10261	; 0x2815
   11d3c:	ldr	r4, [r0]
   11d40:	mov	r0, #0
   11d44:	mov	r2, #5
   11d48:	mov	r6, #0
   11d4c:	movt	r1, #2
   11d50:	bl	113a0 <dcgettext@plt>
   11d54:	mov	r5, r0
   11d58:	mov	r0, #4
   11d5c:	mov	r1, r8
   11d60:	bl	14208 <__mempcpy_chk@plt+0x2c28>
   11d64:	b	12018 <__mempcpy_chk@plt+0xa38>
   11d68:	movw	r0, #10322	; 0x2852
   11d6c:	movt	r0, #2
   11d70:	bl	11448 <getenv@plt>
   11d74:	mov	r5, r0
   11d78:	cmp	r0, #0
   11d7c:	movw	r0, #10329	; 0x2859
   11d80:	movw	r1, #10334	; 0x285e
   11d84:	mov	r2, #0
   11d88:	movt	r0, #2
   11d8c:	movt	r1, #2
   11d90:	moveq	r5, r0
   11d94:	mov	r0, r5
   11d98:	bl	129a8 <__mempcpy_chk@plt+0x13c8>
   11d9c:	str	r0, [r6]
   11da0:	bl	21028 <__mempcpy_chk@plt+0xfa48>
   11da4:	cmn	r0, #1
   11da8:	ble	11e70 <__mempcpy_chk@plt+0x890>
   11dac:	movw	r1, #10382	; 0x288e
   11db0:	mov	r4, r0
   11db4:	movt	r1, #2
   11db8:	bl	11298 <fdopen@plt>
   11dbc:	movw	r5, #17124	; 0x42e4
   11dc0:	cmp	r0, #0
   11dc4:	movt	r5, #3
   11dc8:	str	r0, [r5]
   11dcc:	beq	11f58 <__mempcpy_chk@plt+0x978>
   11dd0:	ldr	r0, [r6]
   11dd4:	bl	113ac <unlink@plt>
   11dd8:	str	r7, [sp, #20]
   11ddc:	ldr	r0, [r6]
   11de0:	ldr	r7, [r5]
   11de4:	movw	sl, #17112	; 0x42d8
   11de8:	mov	r5, #0
   11dec:	mov	r4, #0
   11df0:	movt	sl, #3
   11df4:	str	r0, [sp, #16]
   11df8:	movw	r0, #17104	; 0x42d0
   11dfc:	ldr	r1, [sl]
   11e00:	movt	r0, #3
   11e04:	ldr	r2, [r0]
   11e08:	mov	r0, r9
   11e0c:	bl	20fc4 <__mempcpy_chk@plt+0xf9e4>
   11e10:	cmp	r0, #0
   11e14:	beq	11ef0 <__mempcpy_chk@plt+0x910>
   11e18:	mov	r6, r0
   11e1c:	cmn	r0, #1
   11e20:	beq	11ebc <__mempcpy_chk@plt+0x8dc>
   11e24:	movw	sl, #17112	; 0x42d8
   11e28:	mov	r1, #1
   11e2c:	mov	r2, r6
   11e30:	mov	r3, r7
   11e34:	movt	sl, #3
   11e38:	ldr	r0, [sl]
   11e3c:	bl	11394 <fwrite_unlocked@plt>
   11e40:	adds	r5, r5, r6
   11e44:	adc	r4, r4, #0
   11e48:	cmp	r0, r6
   11e4c:	beq	11df8 <__mempcpy_chk@plt+0x818>
   11e50:	b	11f00 <__mempcpy_chk@plt+0x920>
   11e54:	mov	r0, r9
   11e58:	mov	r1, r8
   11e5c:	mov	r2, r4
   11e60:	mov	r3, r5
   11e64:	bl	12294 <__mempcpy_chk@plt+0xcb4>
   11e68:	mov	r6, r0
   11e6c:	b	11fc8 <__mempcpy_chk@plt+0x9e8>
   11e70:	bl	114cc <__errno_location@plt>
   11e74:	movw	r1, #10344	; 0x2868
   11e78:	ldr	r4, [r0]
   11e7c:	mov	r0, #0
   11e80:	mov	r2, #5
   11e84:	movt	r1, #2
   11e88:	bl	113a0 <dcgettext@plt>
   11e8c:	mov	r6, r0
   11e90:	mov	r0, #4
   11e94:	mov	r1, r5
   11e98:	bl	14208 <__mempcpy_chk@plt+0x2c28>
   11e9c:	movw	r5, #17120	; 0x42e0
   11ea0:	mov	r3, r0
   11ea4:	mov	r0, #0
   11ea8:	mov	r1, r4
   11eac:	mov	r2, r6
   11eb0:	movt	r5, #3
   11eb4:	bl	11430 <error@plt>
   11eb8:	b	11fb8 <__mempcpy_chk@plt+0x9d8>
   11ebc:	bl	114cc <__errno_location@plt>
   11ec0:	movw	r1, #10291	; 0x2833
   11ec4:	ldr	r4, [r0]
   11ec8:	mov	r0, #0
   11ecc:	mov	r2, #5
   11ed0:	mov	r6, #0
   11ed4:	movt	r1, #2
   11ed8:	bl	113a0 <dcgettext@plt>
   11edc:	mov	r5, r0
   11ee0:	mov	r0, #0
   11ee4:	mov	r1, #3
   11ee8:	mov	r2, r8
   11eec:	b	11f30 <__mempcpy_chk@plt+0x950>
   11ef0:	mov	r0, r7
   11ef4:	bl	113d0 <fflush_unlocked@plt>
   11ef8:	cmp	r0, #0
   11efc:	beq	12054 <__mempcpy_chk@plt+0xa74>
   11f00:	bl	114cc <__errno_location@plt>
   11f04:	movw	r1, #10306	; 0x2842
   11f08:	ldr	r4, [r0]
   11f0c:	mov	r0, #0
   11f10:	mov	r2, #5
   11f14:	mov	r6, #0
   11f18:	movt	r1, #2
   11f1c:	bl	113a0 <dcgettext@plt>
   11f20:	ldr	r2, [sp, #16]
   11f24:	mov	r5, r0
   11f28:	mov	r0, #0
   11f2c:	mov	r1, #3
   11f30:	bl	143ac <__mempcpy_chk@plt+0x2dcc>
   11f34:	mov	r3, r0
   11f38:	mov	r0, #0
   11f3c:	mov	r1, r4
   11f40:	mov	r2, r5
   11f44:	bl	11430 <error@plt>
   11f48:	ldr	r7, [sp, #20]
   11f4c:	movw	sl, #17116	; 0x42dc
   11f50:	movt	sl, #3
   11f54:	b	11fc8 <__mempcpy_chk@plt+0x9e8>
   11f58:	bl	114cc <__errno_location@plt>
   11f5c:	movw	r1, #10385	; 0x2891
   11f60:	ldr	r5, [r0]
   11f64:	mov	r0, #0
   11f68:	mov	r2, #5
   11f6c:	movt	r1, #2
   11f70:	bl	113a0 <dcgettext@plt>
   11f74:	mov	r6, r0
   11f78:	movw	r0, #17120	; 0x42e0
   11f7c:	movt	r0, #3
   11f80:	ldr	r1, [r0]
   11f84:	mov	r0, #4
   11f88:	bl	14208 <__mempcpy_chk@plt+0x2c28>
   11f8c:	mov	r3, r0
   11f90:	mov	r1, r5
   11f94:	movw	r5, #17120	; 0x42e0
   11f98:	mov	r0, #0
   11f9c:	mov	r2, r6
   11fa0:	movt	r5, #3
   11fa4:	bl	11430 <error@plt>
   11fa8:	mov	r0, r4
   11fac:	bl	115d4 <close@plt>
   11fb0:	ldr	r0, [r5]
   11fb4:	bl	113ac <unlink@plt>
   11fb8:	ldr	r0, [r5]
   11fbc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   11fc0:	mov	r6, #0
   11fc4:	str	r6, [r5]
   11fc8:	ldr	r0, [sp, #28]
   11fcc:	cmp	r0, #0
   11fd0:	beq	1202c <__mempcpy_chk@plt+0xa4c>
   11fd4:	mov	r0, r9
   11fd8:	bl	115d4 <close@plt>
   11fdc:	cmp	r0, #0
   11fe0:	beq	1202c <__mempcpy_chk@plt+0xa4c>
   11fe4:	bl	114cc <__errno_location@plt>
   11fe8:	movw	r1, #10291	; 0x2833
   11fec:	ldr	r4, [r0]
   11ff0:	mov	r0, #0
   11ff4:	mov	r2, #5
   11ff8:	mov	r6, #0
   11ffc:	movt	r1, #2
   12000:	bl	113a0 <dcgettext@plt>
   12004:	mov	r5, r0
   12008:	mov	r0, #0
   1200c:	mov	r1, #3
   12010:	mov	r2, r8
   12014:	bl	143ac <__mempcpy_chk@plt+0x2dcc>
   12018:	mov	r3, r0
   1201c:	mov	r0, #0
   12020:	mov	r1, r4
   12024:	mov	r2, r5
   12028:	bl	11430 <error@plt>
   1202c:	ldr	r1, [sp, #32]
   12030:	ldr	r0, [sp, #24]
   12034:	and	r7, r7, r6
   12038:	movw	r6, #17120	; 0x42e0
   1203c:	movt	r6, #3
   12040:	add	r1, r1, #1
   12044:	ldr	r8, [r0, r1, lsl #2]
   12048:	cmp	r8, #0
   1204c:	bne	11bf4 <__mempcpy_chk@plt+0x614>
   12050:	b	12090 <__mempcpy_chk@plt+0xab0>
   12054:	movw	sl, #17116	; 0x42dc
   12058:	cmp	r4, #0
   1205c:	movt	sl, #3
   12060:	bmi	12084 <__mempcpy_chk@plt+0xaa4>
   12064:	mov	r0, r7
   12068:	bl	11514 <fileno@plt>
   1206c:	ldr	r1, [sp, #16]
   12070:	mov	r2, r5
   12074:	mov	r3, r4
   12078:	bl	12294 <__mempcpy_chk@plt+0xcb4>
   1207c:	mov	r6, r0
   12080:	b	12088 <__mempcpy_chk@plt+0xaa8>
   12084:	mov	r6, #0
   12088:	ldr	r7, [sp, #20]
   1208c:	b	11fc8 <__mempcpy_chk@plt+0x9e8>
   12090:	movw	r0, #16788	; 0x4194
   12094:	movw	r4, #25332	; 0x62f4
   12098:	mov	r1, #1
   1209c:	movt	r0, #3
   120a0:	movt	r4, #3
   120a4:	ldr	r3, [r0]
   120a8:	ldr	r2, [r4]
   120ac:	movw	r0, #17140	; 0x42f4
   120b0:	movt	r0, #3
   120b4:	bl	11394 <fwrite_unlocked@plt>
   120b8:	mov	r0, #0
   120bc:	str	r0, [r4]
   120c0:	ldrb	r0, [sl]
   120c4:	cmp	r0, #0
   120c8:	beq	120f8 <__mempcpy_chk@plt+0xb18>
   120cc:	mov	r0, #0
   120d0:	bl	115d4 <close@plt>
   120d4:	cmn	r0, #1
   120d8:	bgt	120f8 <__mempcpy_chk@plt+0xb18>
   120dc:	bl	114cc <__errno_location@plt>
   120e0:	ldr	r1, [r0]
   120e4:	movw	r2, #10768	; 0x2a10
   120e8:	mov	r0, #0
   120ec:	movt	r2, #2
   120f0:	bl	11430 <error@plt>
   120f4:	mov	r7, #0
   120f8:	eor	r0, r7, #1
   120fc:	sub	sp, fp, #28
   12100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12104:	movw	r0, #17104	; 0x42d0
   12108:	movt	r0, #3
   1210c:	str	r2, [r0]
   12110:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   12114:	cmn	r0, #3
   12118:	bne	12170 <__mempcpy_chk@plt+0xb90>
   1211c:	movw	r0, #16696	; 0x4138
   12120:	movw	r2, #9726	; 0x25fe
   12124:	mov	r1, #0
   12128:	movw	r7, #9714	; 0x25f2
   1212c:	movt	r0, #3
   12130:	movt	r2, #2
   12134:	str	r1, [sp, #8]
   12138:	movw	r1, #9667	; 0x25c3
   1213c:	movt	r7, #2
   12140:	movt	r1, #2
   12144:	ldr	r3, [r0]
   12148:	movw	r0, #16788	; 0x4194
   1214c:	str	r2, [sp, #4]
   12150:	movw	r2, #9700	; 0x25e4
   12154:	str	r7, [sp]
   12158:	movt	r0, #3
   1215c:	movt	r2, #2
   12160:	ldr	r0, [r0]
   12164:	bl	21458 <__mempcpy_chk@plt+0xfe78>
   12168:	mov	r0, #0
   1216c:	bl	114a8 <exit@plt>
   12170:	cmn	r0, #2
   12174:	bne	12180 <__mempcpy_chk@plt+0xba0>
   12178:	mov	r0, #0
   1217c:	bl	116e0 <__mempcpy_chk@plt+0x100>
   12180:	mov	r0, #1
   12184:	bl	116e0 <__mempcpy_chk@plt+0x100>
   12188:	movw	r1, #9742	; 0x260e
   1218c:	mov	r0, #0
   12190:	mov	r2, #5
   12194:	movt	r1, #2
   12198:	bl	113a0 <dcgettext@plt>
   1219c:	mov	r2, r0
   121a0:	mov	r0, #1
   121a4:	mov	r1, #0
   121a8:	bl	11430 <error@plt>
   121ac:	movw	r2, #10699	; 0x29cb
   121b0:	mov	r3, r0
   121b4:	mov	r0, #1
   121b8:	mov	r1, #0
   121bc:	movt	r2, #2
   121c0:	bl	11430 <error@plt>
   121c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121c8:	add	fp, sp, #28
   121cc:	sub	sp, sp, #4
   121d0:	movw	r9, #25332	; 0x62f4
   121d4:	cmp	r0, #0
   121d8:	movt	r9, #3
   121dc:	ldr	r6, [r9]
   121e0:	beq	12264 <__mempcpy_chk@plt+0xc84>
   121e4:	movw	r8, #17140	; 0x42f4
   121e8:	sub	r5, r1, r0
   121ec:	rsb	r7, r6, #8192	; 0x2000
   121f0:	mov	r4, r0
   121f4:	movt	r8, #3
   121f8:	cmp	r5, r7
   121fc:	add	r0, r8, r6
   12200:	bcc	12250 <__mempcpy_chk@plt+0xc70>
   12204:	movw	sl, #16788	; 0x4194
   12208:	mov	r6, #0
   1220c:	movt	sl, #3
   12210:	mov	r1, r4
   12214:	mov	r2, r7
   12218:	bl	1134c <memcpy@plt>
   1221c:	ldr	r3, [sl]
   12220:	mov	r0, r8
   12224:	mov	r1, #1
   12228:	mov	r2, #8192	; 0x2000
   1222c:	bl	11394 <fwrite_unlocked@plt>
   12230:	sub	r5, r5, r7
   12234:	add	r4, r4, r7
   12238:	mov	r0, r8
   1223c:	mov	r7, #8192	; 0x2000
   12240:	str	r6, [r9]
   12244:	cmp	r6, r5, lsr #13
   12248:	bne	12210 <__mempcpy_chk@plt+0xc30>
   1224c:	mov	r0, r8
   12250:	mov	r1, r4
   12254:	mov	r2, r5
   12258:	bl	1134c <memcpy@plt>
   1225c:	add	r0, r6, r5
   12260:	b	12288 <__mempcpy_chk@plt+0xca8>
   12264:	movw	r0, #16788	; 0x4194
   12268:	mov	r1, #1
   1226c:	mov	r2, r6
   12270:	movt	r0, #3
   12274:	ldr	r3, [r0]
   12278:	movw	r0, #17140	; 0x42f4
   1227c:	movt	r0, #3
   12280:	bl	11394 <fwrite_unlocked@plt>
   12284:	mov	r0, #0
   12288:	str	r0, [r9]
   1228c:	sub	sp, fp, #28
   12290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12298:	add	fp, sp, #28
   1229c:	sub	sp, sp, #36	; 0x24
   122a0:	movw	r8, #17104	; 0x42d0
   122a4:	mov	r5, r2
   122a8:	str	r1, [sp, #16]
   122ac:	mov	r9, r0
   122b0:	mov	r7, r3
   122b4:	mov	r1, r3
   122b8:	mov	r3, #0
   122bc:	mov	r4, #0
   122c0:	movt	r8, #3
   122c4:	mov	r0, r5
   122c8:	ldr	r2, [r8]
   122cc:	bl	22170 <__mempcpy_chk@plt+0x10b90>
   122d0:	movw	r0, #17100	; 0x42cc
   122d4:	cmp	r2, #0
   122d8:	movt	r0, #3
   122dc:	ldr	r0, [r0]
   122e0:	str	r0, [sp, #24]
   122e4:	movw	r0, #16800	; 0x41a0
   122e8:	movt	r0, #3
   122ec:	ldr	r0, [r0]
   122f0:	ldrb	r1, [r0], #1
   122f4:	str	r0, [sp, #28]
   122f8:	str	r1, [sp, #32]
   122fc:	beq	12368 <__mempcpy_chk@plt+0xd88>
   12300:	subs	r5, r5, r2
   12304:	mov	r0, r9
   12308:	str	r4, [sp]
   1230c:	sbc	r7, r7, #0
   12310:	mov	r2, r5
   12314:	mov	r3, r7
   12318:	bl	113f4 <lseek64@plt>
   1231c:	cmn	r1, #1
   12320:	bgt	12368 <__mempcpy_chk@plt+0xd88>
   12324:	bl	114cc <__errno_location@plt>
   12328:	movw	r1, #10446	; 0x28ce
   1232c:	ldr	r4, [r0]
   12330:	mov	r0, #0
   12334:	mov	r2, #5
   12338:	movt	r1, #2
   1233c:	bl	113a0 <dcgettext@plt>
   12340:	ldr	r2, [sp, #16]
   12344:	mov	r6, r0
   12348:	mov	r0, #0
   1234c:	mov	r1, #3
   12350:	bl	143ac <__mempcpy_chk@plt+0x2dcc>
   12354:	mov	r3, r0
   12358:	mov	r0, #0
   1235c:	mov	r1, r4
   12360:	mov	r2, r6
   12364:	bl	11430 <error@plt>
   12368:	movw	r0, #17112	; 0x42d8
   1236c:	ldr	r2, [r8]
   12370:	movt	r0, #3
   12374:	ldr	r1, [r0]
   12378:	mov	r0, r9
   1237c:	bl	20fc4 <__mempcpy_chk@plt+0xf9e4>
   12380:	mov	r4, r0
   12384:	orrs	r0, r5, r7
   12388:	beq	12440 <__mempcpy_chk@plt+0xe60>
   1238c:	cmp	r4, #0
   12390:	bne	12440 <__mempcpy_chk@plt+0xe60>
   12394:	mov	sl, #0
   12398:	ldr	r0, [r8]
   1239c:	mov	r1, #1
   123a0:	str	r1, [sp]
   123a4:	rsbs	r2, r0, #0
   123a8:	mov	r0, r9
   123ac:	sbc	r3, sl, #0
   123b0:	bl	113f4 <lseek64@plt>
   123b4:	cmn	r1, #1
   123b8:	bgt	12400 <__mempcpy_chk@plt+0xe20>
   123bc:	bl	114cc <__errno_location@plt>
   123c0:	movw	r1, #10446	; 0x28ce
   123c4:	ldr	r4, [r0]
   123c8:	mov	r0, #0
   123cc:	mov	r2, #5
   123d0:	movt	r1, #2
   123d4:	bl	113a0 <dcgettext@plt>
   123d8:	ldr	r2, [sp, #16]
   123dc:	mov	r6, r0
   123e0:	mov	r0, #0
   123e4:	mov	r1, #3
   123e8:	bl	143ac <__mempcpy_chk@plt+0x2dcc>
   123ec:	mov	r3, r0
   123f0:	mov	r0, #0
   123f4:	mov	r1, r4
   123f8:	mov	r2, r6
   123fc:	bl	11430 <error@plt>
   12400:	movw	r0, #17112	; 0x42d8
   12404:	ldr	r6, [r8]
   12408:	movt	r0, #3
   1240c:	ldr	r1, [r0]
   12410:	mov	r0, r9
   12414:	mov	r2, r6
   12418:	bl	20fc4 <__mempcpy_chk@plt+0xf9e4>
   1241c:	subs	r5, r5, r6
   12420:	mov	r4, r0
   12424:	mov	r0, r7
   12428:	sbc	r0, r7, #0
   1242c:	mov	r7, r0
   12430:	orrs	r0, r5, r0
   12434:	beq	12440 <__mempcpy_chk@plt+0xe60>
   12438:	cmp	r4, #0
   1243c:	beq	12398 <__mempcpy_chk@plt+0xdb8>
   12440:	ldr	r0, [r8]
   12444:	cmp	r4, r0
   12448:	bne	12490 <__mempcpy_chk@plt+0xeb0>
   1244c:	movw	r0, #17112	; 0x42d8
   12450:	mov	r2, r4
   12454:	movt	r0, #3
   12458:	ldr	r1, [r0]
   1245c:	mov	r0, r9
   12460:	bl	20fc4 <__mempcpy_chk@plt+0xf9e4>
   12464:	cmn	r0, #1
   12468:	beq	12804 <__mempcpy_chk@plt+0x1224>
   1246c:	cmp	r0, #0
   12470:	beq	12490 <__mempcpy_chk@plt+0xeb0>
   12474:	ldr	r1, [r8]
   12478:	adds	r5, r5, r0
   1247c:	mov	r4, r0
   12480:	adc	r7, r7, #0
   12484:	cmp	r0, r1
   12488:	beq	1244c <__mempcpy_chk@plt+0xe6c>
   1248c:	b	1249c <__mempcpy_chk@plt+0xebc>
   12490:	mov	r0, r4
   12494:	cmn	r4, #1
   12498:	beq	12804 <__mempcpy_chk@plt+0x1224>
   1249c:	movw	r1, #17112	; 0x42d8
   124a0:	ldr	r2, [sp, #24]
   124a4:	movt	r1, #3
   124a8:	ldr	r1, [r1]
   124ac:	sub	r6, r2, #1
   124b0:	str	r6, [sp, #12]
   124b4:	add	r4, r1, r0
   124b8:	movw	r0, #16804	; 0x41a4
   124bc:	movt	r0, #3
   124c0:	sub	r1, r4, r2
   124c4:	mov	sl, r4
   124c8:	ldr	r0, [r0]
   124cc:	cmp	r0, #0
   124d0:	addne	sl, r1, #1
   124d4:	mov	r1, #1
   124d8:	str	r1, [sp, #8]
   124dc:	cmp	r0, #0
   124e0:	beq	126c4 <__mempcpy_chk@plt+0x10e4>
   124e4:	sub	sl, sl, #1
   124e8:	ldr	r2, [sp, #32]
   124ec:	mov	r0, sl
   124f0:	ldrb	r1, [r0], #1
   124f4:	cmp	r1, r2
   124f8:	bne	124e4 <__mempcpy_chk@plt+0xf04>
   124fc:	cmp	r6, #0
   12500:	beq	12518 <__mempcpy_chk@plt+0xf38>
   12504:	ldr	r1, [sp, #28]
   12508:	mov	r2, r6
   1250c:	bl	115bc <strncmp@plt>
   12510:	cmp	r0, #0
   12514:	bne	124e4 <__mempcpy_chk@plt+0xf04>
   12518:	movw	r0, #17112	; 0x42d8
   1251c:	movt	r0, #3
   12520:	ldr	r1, [r0]
   12524:	cmp	sl, r1
   12528:	bcs	12768 <__mempcpy_chk@plt+0x1188>
   1252c:	orrs	r0, r5, r7
   12530:	beq	12850 <__mempcpy_chk@plt+0x1270>
   12534:	ldr	r0, [r8]
   12538:	sub	r6, r4, r1
   1253c:	cmp	r6, r0
   12540:	bls	125a8 <__mempcpy_chk@plt+0xfc8>
   12544:	lsl	r2, r0, #1
   12548:	str	r2, [r8]
   1254c:	mov	r2, #2
   12550:	orr	r0, r2, r0, lsl #2
   12554:	movw	r2, #16804	; 0x41a4
   12558:	movt	r2, #3
   1255c:	ldr	r4, [r2]
   12560:	add	r2, r0, r4
   12564:	movw	r0, #17108	; 0x42d4
   12568:	cmp	r4, #0
   1256c:	movt	r0, #3
   12570:	movweq	r4, #1
   12574:	mov	r3, r0
   12578:	ldr	r0, [r0]
   1257c:	str	r2, [r3]
   12580:	cmp	r2, r0
   12584:	bcc	1286c <__mempcpy_chk@plt+0x128c>
   12588:	sub	r0, r1, r4
   1258c:	mov	r1, r2
   12590:	bl	215a8 <__mempcpy_chk@plt+0xffc8>
   12594:	movw	r1, #17112	; 0x42d8
   12598:	add	r0, r0, r4
   1259c:	movt	r1, #3
   125a0:	str	r0, [r1]
   125a4:	ldr	r0, [r8]
   125a8:	subs	r1, r5, r0
   125ac:	sbcs	r1, r7, #0
   125b0:	bge	125c4 <__mempcpy_chk@plt+0xfe4>
   125b4:	str	r5, [r8]
   125b8:	mov	r5, #0
   125bc:	mov	r7, #0
   125c0:	b	125cc <__mempcpy_chk@plt+0xfec>
   125c4:	subs	r5, r5, r0
   125c8:	sbc	r7, r7, #0
   125cc:	mov	r0, #0
   125d0:	mov	r2, r5
   125d4:	mov	r3, r7
   125d8:	str	r5, [sp, #20]
   125dc:	str	r7, [sp, #24]
   125e0:	str	r0, [sp]
   125e4:	mov	r0, r9
   125e8:	bl	113f4 <lseek64@plt>
   125ec:	cmn	r1, #1
   125f0:	mov	r5, r9
   125f4:	bgt	1263c <__mempcpy_chk@plt+0x105c>
   125f8:	bl	114cc <__errno_location@plt>
   125fc:	movw	r1, #10446	; 0x28ce
   12600:	ldr	r4, [r0]
   12604:	mov	r0, #0
   12608:	mov	r2, #5
   1260c:	movt	r1, #2
   12610:	bl	113a0 <dcgettext@plt>
   12614:	ldr	r2, [sp, #16]
   12618:	mov	sl, r0
   1261c:	mov	r0, #0
   12620:	mov	r1, #3
   12624:	bl	143ac <__mempcpy_chk@plt+0x2dcc>
   12628:	mov	r3, r0
   1262c:	mov	r0, #0
   12630:	mov	r1, r4
   12634:	mov	r2, sl
   12638:	bl	11430 <error@plt>
   1263c:	movw	r0, #17104	; 0x42d0
   12640:	mov	r2, r6
   12644:	movt	r0, #3
   12648:	ldr	r4, [r0]
   1264c:	movw	r0, #17112	; 0x42d8
   12650:	movt	r0, #3
   12654:	ldr	r9, [r0]
   12658:	add	sl, r9, r4
   1265c:	mov	r1, r9
   12660:	mov	r0, sl
   12664:	bl	1131c <memmove@plt>
   12668:	movw	r8, #16804	; 0x41a4
   1266c:	mov	r0, r5
   12670:	mov	r1, r9
   12674:	mov	r2, r4
   12678:	movt	r8, #3
   1267c:	ldr	r7, [r8]
   12680:	bl	20fc4 <__mempcpy_chk@plt+0xf9e4>
   12684:	movw	r1, #17104	; 0x42d0
   12688:	movt	r1, #3
   1268c:	mov	r2, r1
   12690:	ldr	r1, [r1]
   12694:	cmp	r0, r1
   12698:	bne	12804 <__mempcpy_chk@plt+0x1224>
   1269c:	add	r4, sl, r6
   126a0:	cmp	r7, #0
   126a4:	ldr	r0, [r8]
   126a8:	mov	r9, r5
   126ac:	ldr	r5, [sp, #20]
   126b0:	ldr	r7, [sp, #24]
   126b4:	ldr	r6, [sp, #12]
   126b8:	mov	r8, r2
   126bc:	moveq	sl, r4
   126c0:	b	124dc <__mempcpy_chk@plt+0xefc>
   126c4:	movw	r0, #17112	; 0x42d8
   126c8:	movt	r0, #3
   126cc:	ldr	r1, [r0]
   126d0:	sub	r2, sl, r1
   126d4:	cmn	r2, #1
   126d8:	ble	12870 <__mempcpy_chk@plt+0x1290>
   126dc:	cmp	r2, #0
   126e0:	beq	1252c <__mempcpy_chk@plt+0xf4c>
   126e4:	rsb	r0, r2, #1
   126e8:	sub	r3, r2, #1
   126ec:	str	r0, [sp]
   126f0:	movw	r0, #17128	; 0x42e8
   126f4:	movt	r0, #3
   126f8:	str	r0, [sp, #4]
   126fc:	movw	r0, #16812	; 0x41ac
   12700:	movt	r0, #3
   12704:	bl	17784 <__mempcpy_chk@plt+0x61a4>
   12708:	cmn	r0, #1
   1270c:	beq	12758 <__mempcpy_chk@plt+0x1178>
   12710:	cmn	r0, #2
   12714:	beq	1287c <__mempcpy_chk@plt+0x129c>
   12718:	movw	r0, #17128	; 0x42e8
   1271c:	movw	r2, #17100	; 0x42cc
   12720:	movt	r0, #3
   12724:	movt	r2, #3
   12728:	mov	r1, r0
   1272c:	ldr	r0, [r0, #4]
   12730:	ldr	r1, [r1, #8]
   12734:	ldr	r0, [r0]
   12738:	ldr	r1, [r1]
   1273c:	sub	r1, r1, r0
   12740:	str	r1, [r2]
   12744:	movw	r1, #17112	; 0x42d8
   12748:	movt	r1, #3
   1274c:	ldr	r1, [r1]
   12750:	add	sl, r1, r0
   12754:	b	12524 <__mempcpy_chk@plt+0xf44>
   12758:	movw	r0, #17112	; 0x42d8
   1275c:	movt	r0, #3
   12760:	ldr	r1, [r0]
   12764:	b	1252c <__mempcpy_chk@plt+0xf4c>
   12768:	movw	r0, #16808	; 0x41a8
   1276c:	str	r7, [sp, #24]
   12770:	movt	r0, #3
   12774:	ldrb	r0, [r0]
   12778:	cmp	r0, #1
   1277c:	bne	127b0 <__mempcpy_chk@plt+0x11d0>
   12780:	movw	r0, #17100	; 0x42cc
   12784:	ldr	r1, [sp, #8]
   12788:	mov	r2, #0
   1278c:	movt	r0, #3
   12790:	ldr	r0, [r0]
   12794:	add	r7, sl, r0
   12798:	sub	r0, r7, r4
   1279c:	clz	r0, r0
   127a0:	lsr	r0, r0, #5
   127a4:	tst	r1, r0
   127a8:	beq	127b8 <__mempcpy_chk@plt+0x11d8>
   127ac:	b	127d0 <__mempcpy_chk@plt+0x11f0>
   127b0:	ldr	r2, [sp, #8]
   127b4:	mov	r7, sl
   127b8:	mov	r1, r4
   127bc:	mov	r0, r7
   127c0:	mov	r4, r2
   127c4:	bl	121c4 <__mempcpy_chk@plt+0xbe4>
   127c8:	mov	r2, r4
   127cc:	mov	r4, r7
   127d0:	movw	r0, #17100	; 0x42cc
   127d4:	ldr	r7, [sp, #24]
   127d8:	str	r2, [sp, #8]
   127dc:	movt	r0, #3
   127e0:	ldr	r0, [r0]
   127e4:	sub	r1, sl, r0
   127e8:	movw	r0, #16804	; 0x41a4
   127ec:	movt	r0, #3
   127f0:	ldr	r0, [r0]
   127f4:	cmp	r0, #0
   127f8:	addne	sl, r1, #1
   127fc:	movne	r0, r0
   12800:	b	124dc <__mempcpy_chk@plt+0xefc>
   12804:	bl	114cc <__errno_location@plt>
   12808:	movw	r1, #10291	; 0x2833
   1280c:	ldr	r5, [r0]
   12810:	mov	r0, #0
   12814:	mov	r2, #5
   12818:	mov	r4, #0
   1281c:	movt	r1, #2
   12820:	bl	113a0 <dcgettext@plt>
   12824:	ldr	r2, [sp, #16]
   12828:	mov	r6, r0
   1282c:	mov	r0, #0
   12830:	mov	r1, #3
   12834:	bl	143ac <__mempcpy_chk@plt+0x2dcc>
   12838:	mov	r3, r0
   1283c:	mov	r0, #0
   12840:	mov	r1, r5
   12844:	mov	r2, r6
   12848:	bl	11430 <error@plt>
   1284c:	b	12860 <__mempcpy_chk@plt+0x1280>
   12850:	mov	r0, r1
   12854:	mov	r1, r4
   12858:	bl	121c4 <__mempcpy_chk@plt+0xbe4>
   1285c:	mov	r4, #1
   12860:	mov	r0, r4
   12864:	sub	sp, fp, #28
   12868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1286c:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   12870:	movw	r1, #10462	; 0x28de
   12874:	movt	r1, #2
   12878:	b	12884 <__mempcpy_chk@plt+0x12a4>
   1287c:	movw	r1, #10479	; 0x28ef
   12880:	movt	r1, #2
   12884:	mov	r0, #0
   12888:	mov	r2, #5
   1288c:	bl	113a0 <dcgettext@plt>
   12890:	mov	r2, r0
   12894:	mov	r0, #1
   12898:	mov	r1, #0
   1289c:	bl	11430 <error@plt>
   128a0:	movw	r1, #25336	; 0x62f8
   128a4:	movt	r1, #3
   128a8:	str	r0, [r1]
   128ac:	bx	lr
   128b0:	movw	r1, #25340	; 0x62fc
   128b4:	movt	r1, #3
   128b8:	strb	r0, [r1]
   128bc:	bx	lr
   128c0:	push	{r4, r5, r6, sl, fp, lr}
   128c4:	add	fp, sp, #16
   128c8:	sub	sp, sp, #8
   128cc:	movw	r0, #16788	; 0x4194
   128d0:	movt	r0, #3
   128d4:	ldr	r0, [r0]
   128d8:	bl	21b24 <__mempcpy_chk@plt+0x10544>
   128dc:	cmp	r0, #0
   128e0:	beq	12908 <__mempcpy_chk@plt+0x1328>
   128e4:	movw	r0, #25340	; 0x62fc
   128e8:	movt	r0, #3
   128ec:	ldrb	r0, [r0]
   128f0:	cmp	r0, #0
   128f4:	beq	12928 <__mempcpy_chk@plt+0x1348>
   128f8:	bl	114cc <__errno_location@plt>
   128fc:	ldr	r0, [r0]
   12900:	cmp	r0, #32
   12904:	bne	12928 <__mempcpy_chk@plt+0x1348>
   12908:	movw	r0, #16784	; 0x4190
   1290c:	movt	r0, #3
   12910:	ldr	r0, [r0]
   12914:	bl	21b24 <__mempcpy_chk@plt+0x10544>
   12918:	cmp	r0, #0
   1291c:	subeq	sp, fp, #16
   12920:	popeq	{r4, r5, r6, sl, fp, pc}
   12924:	b	12998 <__mempcpy_chk@plt+0x13b8>
   12928:	movw	r1, #10310	; 0x2846
   1292c:	mov	r0, #0
   12930:	mov	r2, #5
   12934:	movt	r1, #2
   12938:	bl	113a0 <dcgettext@plt>
   1293c:	mov	r4, r0
   12940:	movw	r0, #25336	; 0x62f8
   12944:	movt	r0, #3
   12948:	ldr	r6, [r0]
   1294c:	bl	114cc <__errno_location@plt>
   12950:	ldr	r5, [r0]
   12954:	cmp	r6, #0
   12958:	bne	12974 <__mempcpy_chk@plt+0x1394>
   1295c:	movw	r2, #10699	; 0x29cb
   12960:	mov	r0, #0
   12964:	mov	r1, r5
   12968:	mov	r3, r4
   1296c:	movt	r2, #2
   12970:	b	12994 <__mempcpy_chk@plt+0x13b4>
   12974:	mov	r0, r6
   12978:	bl	14300 <__mempcpy_chk@plt+0x2d20>
   1297c:	movw	r2, #10695	; 0x29c7
   12980:	mov	r3, r0
   12984:	str	r4, [sp]
   12988:	mov	r0, #0
   1298c:	mov	r1, r5
   12990:	movt	r2, #2
   12994:	bl	11430 <error@plt>
   12998:	movw	r0, #16700	; 0x413c
   1299c:	movt	r0, #3
   129a0:	ldr	r0, [r0]
   129a4:	bl	11340 <_exit@plt>
   129a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129ac:	add	fp, sp, #28
   129b0:	push	{r2}		; (str r2, [sp, #-4]!)
   129b4:	mov	sl, r1
   129b8:	mov	r7, r0
   129bc:	bl	21aa4 <__mempcpy_chk@plt+0x104c4>
   129c0:	sub	r4, r0, r7
   129c4:	bl	21aec <__mempcpy_chk@plt+0x1050c>
   129c8:	mov	r6, r0
   129cc:	add	r5, r4, r0
   129d0:	mov	r0, sl
   129d4:	bl	114c0 <strlen@plt>
   129d8:	mov	r9, r0
   129dc:	cmp	r6, #0
   129e0:	beq	12a08 <__mempcpy_chk@plt+0x1428>
   129e4:	add	r0, r5, r7
   129e8:	mov	r4, #0
   129ec:	ldrb	r0, [r0, #-1]
   129f0:	cmp	r0, #47	; 0x2f
   129f4:	beq	12a18 <__mempcpy_chk@plt+0x1438>
   129f8:	ldrb	r0, [sl]
   129fc:	subs	r4, r0, #47	; 0x2f
   12a00:	movwne	r4, #47	; 0x2f
   12a04:	b	12a18 <__mempcpy_chk@plt+0x1438>
   12a08:	ldrb	r0, [sl]
   12a0c:	mov	r4, #0
   12a10:	cmp	r0, #47	; 0x2f
   12a14:	movweq	r4, #46	; 0x2e
   12a18:	uxtb	r8, r4
   12a1c:	add	r0, r9, r5
   12a20:	cmp	r8, #0
   12a24:	movwne	r8, #1
   12a28:	add	r0, r0, r8
   12a2c:	add	r0, r0, #1
   12a30:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   12a34:	mov	r6, r0
   12a38:	cmp	r0, #0
   12a3c:	beq	12a7c <__mempcpy_chk@plt+0x149c>
   12a40:	mov	r0, r6
   12a44:	mov	r1, r7
   12a48:	mov	r2, r5
   12a4c:	mvn	r3, #0
   12a50:	bl	115e0 <__mempcpy_chk@plt>
   12a54:	ldr	r1, [sp]
   12a58:	strb	r4, [r0], r8
   12a5c:	mov	r2, r9
   12a60:	mvn	r3, #0
   12a64:	cmp	r1, #0
   12a68:	strne	r0, [r1]
   12a6c:	mov	r1, sl
   12a70:	bl	115e0 <__mempcpy_chk@plt>
   12a74:	mov	r1, #0
   12a78:	strb	r1, [r0]
   12a7c:	mov	r0, r6
   12a80:	sub	sp, fp, #28
   12a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a88:	push	{r4, r5, r6, sl, fp, lr}
   12a8c:	add	fp, sp, #16
   12a90:	mov	r4, r0
   12a94:	bl	114cc <__errno_location@plt>
   12a98:	ldr	r6, [r0]
   12a9c:	mov	r5, r0
   12aa0:	mov	r0, r4
   12aa4:	bl	11328 <free@plt>
   12aa8:	str	r6, [r5]
   12aac:	pop	{r4, r5, r6, sl, fp, pc}
   12ab0:	push	{r4, r5, r6, r7, fp, lr}
   12ab4:	add	fp, sp, #16
   12ab8:	sub	sp, sp, #8
   12abc:	mov	r4, r0
   12ac0:	ldr	r0, [r0, #4]
   12ac4:	mov	r5, r3
   12ac8:	mov	r6, r2
   12acc:	ldr	r1, [r4, #8]
   12ad0:	cmp	r1, r0
   12ad4:	bne	12af0 <__mempcpy_chk@plt+0x1510>
   12ad8:	ldrd	r0, [r4, #16]
   12adc:	cmp	r1, r0
   12ae0:	bne	12af0 <__mempcpy_chk@plt+0x1510>
   12ae4:	ldr	r0, [r4, #36]	; 0x24
   12ae8:	cmp	r0, #0
   12aec:	beq	12b08 <__mempcpy_chk@plt+0x1528>
   12af0:	mov	r0, r4
   12af4:	mov	r2, r6
   12af8:	mov	r3, r5
   12afc:	sub	sp, fp, #16
   12b00:	pop	{r4, r5, r6, r7, fp, lr}
   12b04:	b	11538 <fseeko64@plt>
   12b08:	ldr	r7, [fp, #8]
   12b0c:	mov	r0, r4
   12b10:	bl	11514 <fileno@plt>
   12b14:	mov	r2, r6
   12b18:	mov	r3, r5
   12b1c:	str	r7, [sp]
   12b20:	bl	113f4 <lseek64@plt>
   12b24:	and	r2, r0, r1
   12b28:	cmn	r2, #1
   12b2c:	beq	12b48 <__mempcpy_chk@plt+0x1568>
   12b30:	strd	r0, [r4, #80]	; 0x50
   12b34:	ldr	r0, [r4]
   12b38:	bic	r0, r0, #16
   12b3c:	str	r0, [r4]
   12b40:	mov	r0, #0
   12b44:	b	12b4c <__mempcpy_chk@plt+0x156c>
   12b48:	mvn	r0, #0
   12b4c:	sub	sp, fp, #16
   12b50:	pop	{r4, r5, r6, r7, fp, pc}
   12b54:	push	{r4, r5, fp, lr}
   12b58:	add	fp, sp, #8
   12b5c:	cmp	r0, #0
   12b60:	beq	12bf4 <__mempcpy_chk@plt+0x1614>
   12b64:	mov	r1, #47	; 0x2f
   12b68:	mov	r4, r0
   12b6c:	bl	11568 <strrchr@plt>
   12b70:	cmp	r0, #0
   12b74:	mov	r5, r4
   12b78:	addne	r5, r0, #1
   12b7c:	sub	r0, r5, r4
   12b80:	cmp	r0, #7
   12b84:	blt	12bd8 <__mempcpy_chk@plt+0x15f8>
   12b88:	movw	r1, #10758	; 0x2a06
   12b8c:	sub	r0, r5, #7
   12b90:	mov	r2, #7
   12b94:	movt	r1, #2
   12b98:	bl	115bc <strncmp@plt>
   12b9c:	cmp	r0, #0
   12ba0:	bne	12bd8 <__mempcpy_chk@plt+0x15f8>
   12ba4:	movw	r1, #10766	; 0x2a0e
   12ba8:	mov	r0, r5
   12bac:	mov	r2, #3
   12bb0:	movt	r1, #2
   12bb4:	bl	115bc <strncmp@plt>
   12bb8:	cmp	r0, #0
   12bbc:	beq	12bc8 <__mempcpy_chk@plt+0x15e8>
   12bc0:	mov	r4, r5
   12bc4:	b	12bd8 <__mempcpy_chk@plt+0x15f8>
   12bc8:	movw	r0, #16768	; 0x4180
   12bcc:	add	r4, r5, #3
   12bd0:	movt	r0, #3
   12bd4:	str	r4, [r0]
   12bd8:	movw	r0, #16772	; 0x4184
   12bdc:	movt	r0, #3
   12be0:	str	r4, [r0]
   12be4:	movw	r0, #25344	; 0x6300
   12be8:	movt	r0, #3
   12bec:	str	r4, [r0]
   12bf0:	pop	{r4, r5, fp, pc}
   12bf4:	movw	r0, #16784	; 0x4190
   12bf8:	movt	r0, #3
   12bfc:	ldr	r1, [r0]
   12c00:	movw	r0, #10702	; 0x29ce
   12c04:	movt	r0, #2
   12c08:	bl	115b0 <fputs@plt>
   12c0c:	bl	115c8 <abort@plt>
   12c10:	push	{r4, r5, r6, sl, fp, lr}
   12c14:	add	fp, sp, #16
   12c18:	mov	r4, r0
   12c1c:	movw	r0, #25352	; 0x6308
   12c20:	movt	r0, #3
   12c24:	cmp	r4, #0
   12c28:	moveq	r4, r0
   12c2c:	bl	114cc <__errno_location@plt>
   12c30:	ldr	r6, [r0]
   12c34:	mov	r5, r0
   12c38:	mov	r0, r4
   12c3c:	mov	r1, #48	; 0x30
   12c40:	bl	218b0 <__mempcpy_chk@plt+0x102d0>
   12c44:	str	r6, [r5]
   12c48:	pop	{r4, r5, r6, sl, fp, pc}
   12c4c:	movw	r1, #25352	; 0x6308
   12c50:	cmp	r0, #0
   12c54:	movt	r1, #3
   12c58:	movne	r1, r0
   12c5c:	ldr	r0, [r1]
   12c60:	bx	lr
   12c64:	movw	r2, #25352	; 0x6308
   12c68:	cmp	r0, #0
   12c6c:	movt	r2, #3
   12c70:	movne	r2, r0
   12c74:	str	r1, [r2]
   12c78:	bx	lr
   12c7c:	movw	r3, #25352	; 0x6308
   12c80:	cmp	r0, #0
   12c84:	and	r2, r2, #1
   12c88:	movt	r3, #3
   12c8c:	movne	r3, r0
   12c90:	ubfx	r0, r1, #5, #3
   12c94:	and	r1, r1, #31
   12c98:	add	ip, r3, r0, lsl #2
   12c9c:	mov	r0, #1
   12ca0:	ldr	r3, [ip, #8]
   12ca4:	and	r0, r0, r3, lsr r1
   12ca8:	eor	r2, r0, r2
   12cac:	eor	r1, r3, r2, lsl r1
   12cb0:	str	r1, [ip, #8]
   12cb4:	bx	lr
   12cb8:	movw	r2, #25352	; 0x6308
   12cbc:	cmp	r0, #0
   12cc0:	movt	r2, #3
   12cc4:	movne	r2, r0
   12cc8:	ldr	r0, [r2, #4]
   12ccc:	str	r1, [r2, #4]
   12cd0:	bx	lr
   12cd4:	push	{fp, lr}
   12cd8:	mov	fp, sp
   12cdc:	movw	r3, #25352	; 0x6308
   12ce0:	cmp	r0, #0
   12ce4:	movt	r3, #3
   12ce8:	movne	r3, r0
   12cec:	cmp	r1, #0
   12cf0:	mov	r0, #10
   12cf4:	cmpne	r2, #0
   12cf8:	str	r0, [r3]
   12cfc:	bne	12d04 <__mempcpy_chk@plt+0x1724>
   12d00:	bl	115c8 <abort@plt>
   12d04:	str	r1, [r3, #40]	; 0x28
   12d08:	str	r2, [r3, #44]	; 0x2c
   12d0c:	pop	{fp, pc}
   12d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d14:	add	fp, sp, #28
   12d18:	sub	sp, sp, #20
   12d1c:	mov	r7, r0
   12d20:	ldr	r0, [fp, #8]
   12d24:	movw	r5, #25352	; 0x6308
   12d28:	mov	r8, r3
   12d2c:	mov	r9, r2
   12d30:	mov	sl, r1
   12d34:	movt	r5, #3
   12d38:	cmp	r0, #0
   12d3c:	movne	r5, r0
   12d40:	bl	114cc <__errno_location@plt>
   12d44:	ldr	r2, [r5, #40]	; 0x28
   12d48:	ldr	r3, [r5, #44]	; 0x2c
   12d4c:	mov	r4, r0
   12d50:	ldm	r5, {r0, r1}
   12d54:	add	r5, r5, #8
   12d58:	ldr	r6, [r4]
   12d5c:	stm	sp, {r0, r1, r5}
   12d60:	mov	r0, r7
   12d64:	mov	r1, sl
   12d68:	str	r2, [sp, #12]
   12d6c:	str	r3, [sp, #16]
   12d70:	mov	r2, r9
   12d74:	mov	r3, r8
   12d78:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   12d7c:	str	r6, [r4]
   12d80:	sub	sp, fp, #28
   12d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d8c:	add	fp, sp, #28
   12d90:	sub	sp, sp, #156	; 0x9c
   12d94:	mov	r5, r0
   12d98:	add	r0, r2, #1
   12d9c:	mov	r6, r1
   12da0:	mov	sl, r3
   12da4:	str	r2, [fp, #-80]	; 0xffffffb0
   12da8:	str	r0, [sp, #72]	; 0x48
   12dac:	ldr	r0, [fp, #12]
   12db0:	and	r1, r0, #1
   12db4:	str	r1, [sp, #32]
   12db8:	and	r1, r0, #4
   12dbc:	str	r1, [sp, #28]
   12dc0:	ubfx	r9, r0, #1, #1
   12dc4:	bl	11400 <__ctype_get_mb_cur_max@plt>
   12dc8:	str	r0, [sp, #40]	; 0x28
   12dcc:	ldr	r0, [fp, #24]
   12dd0:	ldr	r7, [fp, #8]
   12dd4:	mov	r1, #0
   12dd8:	mov	lr, #0
   12ddc:	str	r5, [fp, #-84]	; 0xffffffac
   12de0:	str	r1, [sp, #60]	; 0x3c
   12de4:	mov	r1, #1
   12de8:	str	r1, [fp, #-48]	; 0xffffffd0
   12dec:	str	r0, [sp, #80]	; 0x50
   12df0:	ldr	r0, [fp, #20]
   12df4:	str	r0, [sp, #76]	; 0x4c
   12df8:	mov	r0, #0
   12dfc:	str	r0, [sp, #56]	; 0x38
   12e00:	mov	r0, #0
   12e04:	str	r0, [fp, #-88]	; 0xffffffa8
   12e08:	mov	r0, #0
   12e0c:	str	r0, [fp, #-72]	; 0xffffffb8
   12e10:	mov	r0, #0
   12e14:	cmp	r7, #10
   12e18:	bhi	13df4 <__mempcpy_chk@plt+0x2814>
   12e1c:	add	r1, pc, #24
   12e20:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12e24:	mov	ip, r6
   12e28:	mov	r8, #0
   12e2c:	mov	r2, #1
   12e30:	mov	r6, #0
   12e34:	mov	r3, sl
   12e38:	ldr	pc, [r1, r7, lsl #2]
   12e3c:	andeq	r2, r1, r8, lsr #30
   12e40:	andeq	r2, r1, ip, ror pc
   12e44:	andeq	r2, r1, ip, lsr pc
   12e48:	andeq	r2, r1, r0, lsr #30
   12e4c:	andeq	r2, r1, r0, ror pc
   12e50:	andeq	r2, r1, r4, lsr #31
   12e54:	andeq	r2, r1, ip, asr #30
   12e58:	andeq	r3, r1, r8, lsr #32
   12e5c:	andeq	r2, r1, r8, ror #28
   12e60:	andeq	r2, r1, r8, ror #28
   12e64:	andeq	r2, r1, r8, lsr #29
   12e68:	movw	r0, #10848	; 0x2a60
   12e6c:	mov	r1, r7
   12e70:	mov	r6, r5
   12e74:	mov	r4, ip
   12e78:	mov	r5, lr
   12e7c:	movt	r0, #2
   12e80:	bl	14558 <__mempcpy_chk@plt+0x2f78>
   12e84:	str	r0, [sp, #76]	; 0x4c
   12e88:	movw	r0, #10850	; 0x2a62
   12e8c:	mov	r1, r7
   12e90:	movt	r0, #2
   12e94:	bl	14558 <__mempcpy_chk@plt+0x2f78>
   12e98:	mov	lr, r5
   12e9c:	mov	r5, r6
   12ea0:	mov	ip, r4
   12ea4:	str	r0, [sp, #80]	; 0x50
   12ea8:	mov	r8, #0
   12eac:	tst	r9, #1
   12eb0:	str	lr, [sp, #44]	; 0x2c
   12eb4:	bne	12eec <__mempcpy_chk@plt+0x190c>
   12eb8:	ldr	r0, [sp, #76]	; 0x4c
   12ebc:	ldrb	r0, [r0]
   12ec0:	cmp	r0, #0
   12ec4:	beq	12eec <__mempcpy_chk@plt+0x190c>
   12ec8:	ldr	r1, [sp, #76]	; 0x4c
   12ecc:	mov	r8, #0
   12ed0:	add	r1, r1, #1
   12ed4:	cmp	r8, ip
   12ed8:	strbcc	r0, [r5, r8]
   12edc:	ldrb	r0, [r1, r8]
   12ee0:	add	r8, r8, #1
   12ee4:	cmp	r0, #0
   12ee8:	bne	12ed4 <__mempcpy_chk@plt+0x18f4>
   12eec:	ldr	r6, [sp, #80]	; 0x50
   12ef0:	mov	r4, ip
   12ef4:	mov	r0, r6
   12ef8:	bl	114c0 <strlen@plt>
   12efc:	mov	ip, r4
   12f00:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12f04:	ldr	lr, [sp, #44]	; 0x2c
   12f08:	str	r6, [fp, #-88]	; 0xffffffa8
   12f0c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f10:	mov	r2, #1
   12f14:	mov	r6, r9
   12f18:	mov	r3, sl
   12f1c:	b	13028 <__mempcpy_chk@plt+0x1a48>
   12f20:	mov	r0, #1
   12f24:	b	12f7c <__mempcpy_chk@plt+0x199c>
   12f28:	mov	r7, #0
   12f2c:	mov	r8, #0
   12f30:	mov	r2, r0
   12f34:	mov	r6, #0
   12f38:	b	13028 <__mempcpy_chk@plt+0x1a48>
   12f3c:	tst	r9, #1
   12f40:	bne	12f7c <__mempcpy_chk@plt+0x199c>
   12f44:	mov	r2, r0
   12f48:	b	12fd4 <__mempcpy_chk@plt+0x19f4>
   12f4c:	mov	r0, #1
   12f50:	mov	r8, #0
   12f54:	mov	r7, #5
   12f58:	mov	r2, #1
   12f5c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f60:	movw	r0, #10846	; 0x2a5e
   12f64:	movt	r0, #2
   12f68:	str	r0, [fp, #-88]	; 0xffffffa8
   12f6c:	b	12f9c <__mempcpy_chk@plt+0x19bc>
   12f70:	mov	r2, #1
   12f74:	tst	r9, #1
   12f78:	beq	12fd4 <__mempcpy_chk@plt+0x19f4>
   12f7c:	mov	r1, #1
   12f80:	mov	r8, #0
   12f84:	mov	r7, #2
   12f88:	mov	r2, r0
   12f8c:	str	r1, [fp, #-72]	; 0xffffffb8
   12f90:	movw	r1, #10850	; 0x2a62
   12f94:	movt	r1, #2
   12f98:	str	r1, [fp, #-88]	; 0xffffffa8
   12f9c:	mov	r6, #1
   12fa0:	b	13028 <__mempcpy_chk@plt+0x1a48>
   12fa4:	tst	r9, #1
   12fa8:	beq	12ff8 <__mempcpy_chk@plt+0x1a18>
   12fac:	mov	r0, #1
   12fb0:	mov	r8, #0
   12fb4:	mov	r2, #1
   12fb8:	mov	r6, #1
   12fbc:	mov	r7, #5
   12fc0:	str	r0, [fp, #-72]	; 0xffffffb8
   12fc4:	movw	r0, #10846	; 0x2a5e
   12fc8:	movt	r0, #2
   12fcc:	str	r0, [fp, #-88]	; 0xffffffa8
   12fd0:	b	13028 <__mempcpy_chk@plt+0x1a48>
   12fd4:	cmp	ip, #0
   12fd8:	mov	r8, #1
   12fdc:	mov	r6, #0
   12fe0:	mov	r7, #2
   12fe4:	movne	r0, #39	; 0x27
   12fe8:	strbne	r0, [r5]
   12fec:	movw	r0, #10850	; 0x2a62
   12ff0:	movt	r0, #2
   12ff4:	b	1301c <__mempcpy_chk@plt+0x1a3c>
   12ff8:	cmp	ip, #0
   12ffc:	mov	r8, #1
   13000:	mov	r2, #1
   13004:	mov	r7, #5
   13008:	mov	r6, #0
   1300c:	movne	r0, #34	; 0x22
   13010:	strbne	r0, [r5]
   13014:	movw	r0, #10846	; 0x2a5e
   13018:	movt	r0, #2
   1301c:	str	r0, [fp, #-88]	; 0xffffffa8
   13020:	mov	r0, #1
   13024:	str	r0, [fp, #-72]	; 0xffffffb8
   13028:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1302c:	str	r7, [fp, #-68]	; 0xffffffbc
   13030:	str	r6, [fp, #-76]	; 0xffffffb4
   13034:	str	r2, [sp, #84]	; 0x54
   13038:	cmp	r0, #0
   1303c:	movwne	r0, #1
   13040:	and	r1, r0, r6
   13044:	and	r1, r2, r1
   13048:	str	r1, [sp, #48]	; 0x30
   1304c:	sub	r1, r7, #2
   13050:	clz	r1, r1
   13054:	lsr	r1, r1, #5
   13058:	and	r1, r1, r6
   1305c:	str	r1, [sp, #64]	; 0x40
   13060:	subs	r1, r7, #2
   13064:	eor	r7, r6, #1
   13068:	movwne	r1, #1
   1306c:	str	r7, [sp, #92]	; 0x5c
   13070:	orr	r7, r1, r7
   13074:	and	r1, r1, r2
   13078:	and	r0, r0, r1
   1307c:	str	r7, [sp, #68]	; 0x44
   13080:	mov	r7, #0
   13084:	str	r0, [fp, #-60]	; 0xffffffc4
   13088:	orr	r0, r1, r6
   1308c:	ldr	r1, [fp, #16]
   13090:	eor	r0, r0, #1
   13094:	clz	r1, r1
   13098:	lsr	r1, r1, #5
   1309c:	orr	r0, r1, r0
   130a0:	str	r0, [fp, #-64]	; 0xffffffc0
   130a4:	eor	r0, r2, #1
   130a8:	str	r0, [sp, #52]	; 0x34
   130ac:	cmn	r3, #1
   130b0:	beq	130c0 <__mempcpy_chk@plt+0x1ae0>
   130b4:	cmp	r7, r3
   130b8:	bne	130cc <__mempcpy_chk@plt+0x1aec>
   130bc:	b	13c28 <__mempcpy_chk@plt+0x2648>
   130c0:	ldrb	r0, [r4, r7]
   130c4:	cmp	r0, #0
   130c8:	beq	13c30 <__mempcpy_chk@plt+0x2650>
   130cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   130d0:	cmp	r0, #0
   130d4:	beq	1311c <__mempcpy_chk@plt+0x1b3c>
   130d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   130dc:	add	r5, r7, r0
   130e0:	cmp	r0, #2
   130e4:	bcc	13130 <__mempcpy_chk@plt+0x1b50>
   130e8:	mov	r0, #0
   130ec:	cmn	r3, #1
   130f0:	str	r0, [fp, #-56]	; 0xffffffc8
   130f4:	bne	13138 <__mempcpy_chk@plt+0x1b58>
   130f8:	mov	r0, r4
   130fc:	mov	r4, ip
   13100:	mov	r6, lr
   13104:	bl	114c0 <strlen@plt>
   13108:	mov	ip, r4
   1310c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13110:	mov	lr, r6
   13114:	mov	r3, r0
   13118:	b	13138 <__mempcpy_chk@plt+0x1b58>
   1311c:	mov	r0, #0
   13120:	mov	sl, r3
   13124:	str	r0, [fp, #-56]	; 0xffffffc8
   13128:	mov	r0, #0
   1312c:	b	131a4 <__mempcpy_chk@plt+0x1bc4>
   13130:	mov	r0, #0
   13134:	str	r0, [fp, #-56]	; 0xffffffc8
   13138:	cmp	r5, r3
   1313c:	bls	13150 <__mempcpy_chk@plt+0x1b70>
   13140:	ldr	r5, [fp, #-84]	; 0xffffffac
   13144:	mov	r0, #0
   13148:	mov	sl, r3
   1314c:	b	131a4 <__mempcpy_chk@plt+0x1bc4>
   13150:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13154:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13158:	add	r0, r4, r7
   1315c:	mov	r5, lr
   13160:	mov	r6, ip
   13164:	mov	sl, r3
   13168:	bl	114b4 <bcmp@plt>
   1316c:	ldr	r2, [sp, #92]	; 0x5c
   13170:	cmp	r0, #0
   13174:	ldr	r3, [fp, #-84]	; 0xffffffac
   13178:	mov	r1, r0
   1317c:	movwne	r1, #1
   13180:	orr	r1, r1, r2
   13184:	tst	r1, #1
   13188:	beq	13cb4 <__mempcpy_chk@plt+0x26d4>
   1318c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13190:	clz	r0, r0
   13194:	mov	lr, r5
   13198:	mov	ip, r6
   1319c:	mov	r5, r3
   131a0:	lsr	r0, r0, #5
   131a4:	str	r0, [fp, #-52]	; 0xffffffcc
   131a8:	ldrb	r6, [r4, r7]
   131ac:	cmp	r6, #126	; 0x7e
   131b0:	bhi	136d8 <__mempcpy_chk@plt+0x20f8>
   131b4:	add	r3, pc, #16
   131b8:	mov	r9, #1
   131bc:	mov	r2, #110	; 0x6e
   131c0:	mov	r0, #97	; 0x61
   131c4:	mov	r1, #0
   131c8:	ldr	pc, [r3, r6, lsl #2]
   131cc:	andeq	r3, r1, ip, lsr r5
   131d0:	ldrdeq	r3, [r1], -r8
   131d4:	ldrdeq	r3, [r1], -r8
   131d8:	ldrdeq	r3, [r1], -r8
   131dc:	ldrdeq	r3, [r1], -r8
   131e0:	ldrdeq	r3, [r1], -r8
   131e4:	ldrdeq	r3, [r1], -r8
   131e8:	andeq	r3, r1, r8, asr r7
   131ec:	andeq	r3, r1, ip, lsl r5
   131f0:	andeq	r3, r1, r4, lsl r5
   131f4:	andeq	r3, r1, r8, lsr #10
   131f8:	andeq	r3, r1, r0, asr #12
   131fc:	andeq	r3, r1, ip, lsl #10
   13200:	andeq	r3, r1, r4, lsr #10
   13204:	ldrdeq	r3, [r1], -r8
   13208:	ldrdeq	r3, [r1], -r8
   1320c:	ldrdeq	r3, [r1], -r8
   13210:	ldrdeq	r3, [r1], -r8
   13214:	ldrdeq	r3, [r1], -r8
   13218:	ldrdeq	r3, [r1], -r8
   1321c:	ldrdeq	r3, [r1], -r8
   13220:	ldrdeq	r3, [r1], -r8
   13224:	ldrdeq	r3, [r1], -r8
   13228:	ldrdeq	r3, [r1], -r8
   1322c:	ldrdeq	r3, [r1], -r8
   13230:	ldrdeq	r3, [r1], -r8
   13234:	ldrdeq	r3, [r1], -r8
   13238:	ldrdeq	r3, [r1], -r8
   1323c:	ldrdeq	r3, [r1], -r8
   13240:	ldrdeq	r3, [r1], -r8
   13244:	ldrdeq	r3, [r1], -r8
   13248:	ldrdeq	r3, [r1], -r8
   1324c:			; <UNDEFINED> instruction: 0x000134bc
   13250:	andeq	r3, r1, r0, asr #9
   13254:	andeq	r3, r1, r0, asr #9
   13258:	andeq	r3, r1, r4, lsr #9
   1325c:	andeq	r3, r1, r0, asr #9
   13260:	andeq	r3, r1, r8, asr #7
   13264:	andeq	r3, r1, r0, asr #9
   13268:	andeq	r3, r1, r8, asr #12
   1326c:	andeq	r3, r1, r0, asr #9
   13270:	andeq	r3, r1, r0, asr #9
   13274:	andeq	r3, r1, r0, asr #9
   13278:	andeq	r3, r1, r8, asr #7
   1327c:	andeq	r3, r1, r8, asr #7
   13280:	andeq	r3, r1, r8, asr #7
   13284:	andeq	r3, r1, r8, asr #7
   13288:	andeq	r3, r1, r8, asr #7
   1328c:	andeq	r3, r1, r8, asr #7
   13290:	andeq	r3, r1, r8, asr #7
   13294:	andeq	r3, r1, r8, asr #7
   13298:	andeq	r3, r1, r8, asr #7
   1329c:	andeq	r3, r1, r8, asr #7
   132a0:	andeq	r3, r1, r8, asr #7
   132a4:	andeq	r3, r1, r8, asr #7
   132a8:	andeq	r3, r1, r8, asr #7
   132ac:	andeq	r3, r1, r8, asr #7
   132b0:	andeq	r3, r1, r8, asr #7
   132b4:	andeq	r3, r1, r8, asr #7
   132b8:	andeq	r3, r1, r0, asr #9
   132bc:	andeq	r3, r1, r0, asr #9
   132c0:	andeq	r3, r1, r0, asr #9
   132c4:	andeq	r3, r1, r0, asr #9
   132c8:	andeq	r3, r1, r4, lsl r6
   132cc:	ldrdeq	r3, [r1], -r8
   132d0:	andeq	r3, r1, r8, asr #7
   132d4:	andeq	r3, r1, r8, asr #7
   132d8:	andeq	r3, r1, r8, asr #7
   132dc:	andeq	r3, r1, r8, asr #7
   132e0:	andeq	r3, r1, r8, asr #7
   132e4:	andeq	r3, r1, r8, asr #7
   132e8:	andeq	r3, r1, r8, asr #7
   132ec:	andeq	r3, r1, r8, asr #7
   132f0:	andeq	r3, r1, r8, asr #7
   132f4:	andeq	r3, r1, r8, asr #7
   132f8:	andeq	r3, r1, r8, asr #7
   132fc:	andeq	r3, r1, r8, asr #7
   13300:	andeq	r3, r1, r8, asr #7
   13304:	andeq	r3, r1, r8, asr #7
   13308:	andeq	r3, r1, r8, asr #7
   1330c:	andeq	r3, r1, r8, asr #7
   13310:	andeq	r3, r1, r8, asr #7
   13314:	andeq	r3, r1, r8, asr #7
   13318:	andeq	r3, r1, r8, asr #7
   1331c:	andeq	r3, r1, r8, asr #7
   13320:	andeq	r3, r1, r8, asr #7
   13324:	andeq	r3, r1, r8, asr #7
   13328:	andeq	r3, r1, r8, asr #7
   1332c:	andeq	r3, r1, r8, asr #7
   13330:	andeq	r3, r1, r8, asr #7
   13334:	andeq	r3, r1, r8, asr #7
   13338:	andeq	r3, r1, r0, asr #9
   1333c:	andeq	r3, r1, r8, ror #9
   13340:	andeq	r3, r1, r8, asr #7
   13344:	andeq	r3, r1, r0, asr #9
   13348:	andeq	r3, r1, r8, asr #7
   1334c:	andeq	r3, r1, r0, asr #9
   13350:	andeq	r3, r1, r8, asr #7
   13354:	andeq	r3, r1, r8, asr #7
   13358:	andeq	r3, r1, r8, asr #7
   1335c:	andeq	r3, r1, r8, asr #7
   13360:	andeq	r3, r1, r8, asr #7
   13364:	andeq	r3, r1, r8, asr #7
   13368:	andeq	r3, r1, r8, asr #7
   1336c:	andeq	r3, r1, r8, asr #7
   13370:	andeq	r3, r1, r8, asr #7
   13374:	andeq	r3, r1, r8, asr #7
   13378:	andeq	r3, r1, r8, asr #7
   1337c:	andeq	r3, r1, r8, asr #7
   13380:	andeq	r3, r1, r8, asr #7
   13384:	andeq	r3, r1, r8, asr #7
   13388:	andeq	r3, r1, r8, asr #7
   1338c:	andeq	r3, r1, r8, asr #7
   13390:	andeq	r3, r1, r8, asr #7
   13394:	andeq	r3, r1, r8, asr #7
   13398:	andeq	r3, r1, r8, asr #7
   1339c:	andeq	r3, r1, r8, asr #7
   133a0:	andeq	r3, r1, r8, asr #7
   133a4:	andeq	r3, r1, r8, asr #7
   133a8:	andeq	r3, r1, r8, asr #7
   133ac:	andeq	r3, r1, r8, asr #7
   133b0:	andeq	r3, r1, r8, asr #7
   133b4:	andeq	r3, r1, r8, asr #7
   133b8:	andeq	r3, r1, ip, ror r4
   133bc:	andeq	r3, r1, r0, asr #9
   133c0:	andeq	r3, r1, ip, ror r4
   133c4:	andeq	r3, r1, r4, lsr #9
   133c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   133cc:	tst	r0, #1
   133d0:	bne	133fc <__mempcpy_chk@plt+0x1e1c>
   133d4:	ldr	r1, [fp, #16]
   133d8:	ubfx	r0, r6, #5, #3
   133dc:	mov	r2, #1
   133e0:	ldr	r0, [r1, r0, lsl #2]
   133e4:	and	r1, r6, #31
   133e8:	tst	r0, r2, lsl r1
   133ec:	beq	133fc <__mempcpy_chk@plt+0x1e1c>
   133f0:	mov	r0, r6
   133f4:	mov	r1, r9
   133f8:	b	13410 <__mempcpy_chk@plt+0x1e30>
   133fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13400:	mov	r1, r9
   13404:	cmp	r0, #0
   13408:	mov	r0, r6
   1340c:	beq	13b5c <__mempcpy_chk@plt+0x257c>
   13410:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13414:	tst	r2, #1
   13418:	bne	13cf8 <__mempcpy_chk@plt+0x2718>
   1341c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13420:	subs	r2, r2, #2
   13424:	movwne	r2, #1
   13428:	orr	r2, r2, lr
   1342c:	tst	r2, #1
   13430:	bne	13468 <__mempcpy_chk@plt+0x1e88>
   13434:	cmp	r8, ip
   13438:	mov	lr, #1
   1343c:	movcc	r2, #39	; 0x27
   13440:	strbcc	r2, [r5, r8]
   13444:	add	r2, r8, #1
   13448:	cmp	r2, ip
   1344c:	movcc	r3, #36	; 0x24
   13450:	strbcc	r3, [r5, r2]
   13454:	add	r2, r8, #2
   13458:	add	r8, r8, #3
   1345c:	cmp	r2, ip
   13460:	movcc	r3, #39	; 0x27
   13464:	strbcc	r3, [r5, r2]
   13468:	cmp	r8, ip
   1346c:	movcc	r2, #92	; 0x5c
   13470:	strbcc	r2, [r5, r8]
   13474:	add	r8, r8, #1
   13478:	b	13b9c <__mempcpy_chk@plt+0x25bc>
   1347c:	cmp	sl, #1
   13480:	beq	134a4 <__mempcpy_chk@plt+0x1ec4>
   13484:	mov	r9, #0
   13488:	cmn	sl, #1
   1348c:	bne	134b0 <__mempcpy_chk@plt+0x1ed0>
   13490:	ldrb	r0, [r4, #1]
   13494:	cmp	r0, #0
   13498:	beq	134a4 <__mempcpy_chk@plt+0x1ec4>
   1349c:	mvn	sl, #0
   134a0:	b	134b0 <__mempcpy_chk@plt+0x1ed0>
   134a4:	mov	r9, #0
   134a8:	cmp	r7, #0
   134ac:	beq	134bc <__mempcpy_chk@plt+0x1edc>
   134b0:	mov	r0, #0
   134b4:	str	r0, [fp, #-56]	; 0xffffffc8
   134b8:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   134bc:	mov	r1, #1
   134c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134c4:	cmp	r0, #2
   134c8:	bne	134e0 <__mempcpy_chk@plt+0x1f00>
   134cc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   134d0:	mov	r9, r1
   134d4:	tst	r0, #1
   134d8:	beq	133c8 <__mempcpy_chk@plt+0x1de8>
   134dc:	b	13cf8 <__mempcpy_chk@plt+0x2718>
   134e0:	mov	r9, r1
   134e4:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   134e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134ec:	cmp	r0, #2
   134f0:	bne	13734 <__mempcpy_chk@plt+0x2154>
   134f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   134f8:	tst	r0, #1
   134fc:	bne	13cf8 <__mempcpy_chk@plt+0x2718>
   13500:	mov	r0, #0
   13504:	str	r0, [fp, #-56]	; 0xffffffc8
   13508:	b	1374c <__mempcpy_chk@plt+0x216c>
   1350c:	mov	r0, #102	; 0x66
   13510:	b	13758 <__mempcpy_chk@plt+0x2178>
   13514:	mov	r2, #116	; 0x74
   13518:	b	13528 <__mempcpy_chk@plt+0x1f48>
   1351c:	mov	r0, #98	; 0x62
   13520:	b	13758 <__mempcpy_chk@plt+0x2178>
   13524:	mov	r2, #114	; 0x72
   13528:	ldr	r0, [sp, #68]	; 0x44
   1352c:	tst	r0, #1
   13530:	mov	r0, r2
   13534:	bne	13758 <__mempcpy_chk@plt+0x2178>
   13538:	b	13cf8 <__mempcpy_chk@plt+0x2718>
   1353c:	ldr	r0, [sp, #84]	; 0x54
   13540:	tst	r0, #1
   13544:	beq	13778 <__mempcpy_chk@plt+0x2198>
   13548:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1354c:	tst	r0, #1
   13550:	bne	13de4 <__mempcpy_chk@plt+0x2804>
   13554:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13558:	mov	r2, sl
   1355c:	subs	r0, r0, #2
   13560:	movwne	r0, #1
   13564:	orr	r0, r0, lr
   13568:	tst	r0, #1
   1356c:	bne	135a4 <__mempcpy_chk@plt+0x1fc4>
   13570:	cmp	r8, ip
   13574:	mov	lr, #1
   13578:	movcc	r0, #39	; 0x27
   1357c:	strbcc	r0, [r5, r8]
   13580:	add	r0, r8, #1
   13584:	cmp	r0, ip
   13588:	movcc	r1, #36	; 0x24
   1358c:	strbcc	r1, [r5, r0]
   13590:	add	r0, r8, #2
   13594:	add	r8, r8, #3
   13598:	cmp	r0, ip
   1359c:	movcc	r1, #39	; 0x27
   135a0:	strbcc	r1, [r5, r0]
   135a4:	mov	r1, #1
   135a8:	cmp	r8, ip
   135ac:	mov	r9, #0
   135b0:	mov	r6, #48	; 0x30
   135b4:	str	r1, [fp, #-56]	; 0xffffffc8
   135b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   135bc:	movcc	r0, #92	; 0x5c
   135c0:	strbcc	r0, [r5, r8]
   135c4:	add	r0, r8, #1
   135c8:	cmp	r1, #2
   135cc:	beq	138d4 <__mempcpy_chk@plt+0x22f4>
   135d0:	add	r1, r7, #1
   135d4:	cmp	r1, r2
   135d8:	bcs	138d4 <__mempcpy_chk@plt+0x22f4>
   135dc:	ldrb	r1, [r4, r1]
   135e0:	sub	r1, r1, #48	; 0x30
   135e4:	uxtb	r1, r1
   135e8:	cmp	r1, #9
   135ec:	bhi	138d4 <__mempcpy_chk@plt+0x22f4>
   135f0:	cmp	r0, ip
   135f4:	movcc	r1, #48	; 0x30
   135f8:	strbcc	r1, [r5, r0]
   135fc:	add	r0, r8, #2
   13600:	add	r8, r8, #3
   13604:	cmp	r0, ip
   13608:	movcc	r1, #48	; 0x30
   1360c:	strbcc	r1, [r5, r0]
   13610:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   13614:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13618:	mov	r6, #63	; 0x3f
   1361c:	cmp	r0, #5
   13620:	beq	138dc <__mempcpy_chk@plt+0x22fc>
   13624:	mov	r1, #0
   13628:	cmp	r0, #2
   1362c:	str	r1, [fp, #-56]	; 0xffffffc8
   13630:	bne	13990 <__mempcpy_chk@plt+0x23b0>
   13634:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13638:	mov	r9, #0
   1363c:	b	134d4 <__mempcpy_chk@plt+0x1ef4>
   13640:	mov	r0, #118	; 0x76
   13644:	b	13758 <__mempcpy_chk@plt+0x2178>
   13648:	mov	r0, #1
   1364c:	mov	r6, #39	; 0x27
   13650:	str	r0, [sp, #60]	; 0x3c
   13654:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13658:	cmp	r0, #2
   1365c:	bne	136d0 <__mempcpy_chk@plt+0x20f0>
   13660:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13664:	tst	r0, #1
   13668:	bne	13cf8 <__mempcpy_chk@plt+0x2718>
   1366c:	ldr	r2, [sp, #56]	; 0x38
   13670:	clz	r1, ip
   13674:	mov	lr, #0
   13678:	lsr	r1, r1, #5
   1367c:	cmp	r2, #0
   13680:	mov	r0, r2
   13684:	movwne	r0, #1
   13688:	orrs	r0, r0, r1
   1368c:	moveq	r2, ip
   13690:	moveq	ip, r0
   13694:	cmp	r8, ip
   13698:	str	r2, [sp, #56]	; 0x38
   1369c:	movcc	r0, #39	; 0x27
   136a0:	strbcc	r0, [r5, r8]
   136a4:	add	r0, r8, #1
   136a8:	cmp	r0, ip
   136ac:	movcc	r1, #92	; 0x5c
   136b0:	strbcc	r1, [r5, r0]
   136b4:	add	r0, r8, #2
   136b8:	add	r8, r8, #3
   136bc:	cmp	r0, ip
   136c0:	movcc	r1, #39	; 0x27
   136c4:	strbcc	r1, [r5, r0]
   136c8:	mov	r0, #0
   136cc:	str	r0, [fp, #-56]	; 0xffffffc8
   136d0:	mov	r9, #1
   136d4:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   136d8:	ldr	r0, [sp, #40]	; 0x28
   136dc:	str	lr, [sp, #44]	; 0x2c
   136e0:	str	ip, [sp, #88]	; 0x58
   136e4:	cmp	r0, #1
   136e8:	bne	13798 <__mempcpy_chk@plt+0x21b8>
   136ec:	str	sl, [sp, #36]	; 0x24
   136f0:	bl	1149c <__ctype_b_loc@plt>
   136f4:	ldr	r0, [r0]
   136f8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   136fc:	mov	r1, #1
   13700:	add	r0, r0, r6, lsl #1
   13704:	ldrb	r0, [r0, #1]
   13708:	ubfx	r9, r0, #6, #1
   1370c:	ldr	r0, [sp, #52]	; 0x34
   13710:	ldr	lr, [sp, #44]	; 0x2c
   13714:	cmp	r1, #1
   13718:	orr	r3, r9, r0
   1371c:	bhi	13998 <__mempcpy_chk@plt+0x23b8>
   13720:	tst	r3, #1
   13724:	beq	13998 <__mempcpy_chk@plt+0x23b8>
   13728:	ldr	sl, [sp, #36]	; 0x24
   1372c:	ldr	ip, [sp, #88]	; 0x58
   13730:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   13734:	ldr	r1, [sp, #48]	; 0x30
   13738:	mov	r0, #0
   1373c:	str	r0, [fp, #-56]	; 0xffffffc8
   13740:	mov	r0, #92	; 0x5c
   13744:	cmp	r1, #0
   13748:	beq	13758 <__mempcpy_chk@plt+0x2178>
   1374c:	mov	r6, #92	; 0x5c
   13750:	mov	r9, #0
   13754:	b	13b5c <__mempcpy_chk@plt+0x257c>
   13758:	mov	r1, #0
   1375c:	mov	r9, #0
   13760:	str	r1, [fp, #-56]	; 0xffffffc8
   13764:	ldr	r1, [sp, #84]	; 0x54
   13768:	tst	r1, #1
   1376c:	mov	r1, #0
   13770:	beq	133c8 <__mempcpy_chk@plt+0x1de8>
   13774:	b	13410 <__mempcpy_chk@plt+0x1e30>
   13778:	ldr	r0, [sp, #32]
   1377c:	mov	r6, #0
   13780:	mov	r9, #0
   13784:	cmp	r0, #0
   13788:	mov	r0, #0
   1378c:	str	r0, [fp, #-56]	; 0xffffffc8
   13790:	beq	133c8 <__mempcpy_chk@plt+0x1de8>
   13794:	b	13bb4 <__mempcpy_chk@plt+0x25d4>
   13798:	mov	r0, #0
   1379c:	cmn	sl, #1
   137a0:	sub	r3, fp, #40	; 0x28
   137a4:	str	r0, [fp, #-36]	; 0xffffffdc
   137a8:	str	r0, [fp, #-40]	; 0xffffffd8
   137ac:	bne	137c4 <__mempcpy_chk@plt+0x21e4>
   137b0:	mov	r0, r4
   137b4:	bl	114c0 <strlen@plt>
   137b8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   137bc:	sub	r3, fp, #40	; 0x28
   137c0:	mov	sl, r0
   137c4:	ldr	r0, [sp, #72]	; 0x48
   137c8:	mov	r9, #1
   137cc:	mov	r1, #0
   137d0:	str	sl, [sp, #36]	; 0x24
   137d4:	add	r0, r0, r7
   137d8:	str	r0, [sp, #20]
   137dc:	add	r0, r1, r7
   137e0:	str	r1, [sp, #24]
   137e4:	add	r1, r4, r0
   137e8:	mov	r4, r0
   137ec:	sub	r2, sl, r0
   137f0:	sub	r0, fp, #44	; 0x2c
   137f4:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   137f8:	cmp	r0, #0
   137fc:	beq	13c08 <__mempcpy_chk@plt+0x2628>
   13800:	cmn	r0, #1
   13804:	beq	13bc0 <__mempcpy_chk@plt+0x25e0>
   13808:	ldr	r2, [sp, #36]	; 0x24
   1380c:	cmn	r0, #2
   13810:	beq	13bc8 <__mempcpy_chk@plt+0x25e8>
   13814:	ldr	r2, [sp, #64]	; 0x40
   13818:	ldr	ip, [sp, #88]	; 0x58
   1381c:	ldr	r4, [sp, #84]	; 0x54
   13820:	ldr	lr, [fp, #-48]	; 0xffffffd0
   13824:	cmp	r0, #2
   13828:	mov	r1, #0
   1382c:	movwcc	r1, #1
   13830:	eor	r2, r2, #1
   13834:	orrs	r1, r2, r1
   13838:	bne	13888 <__mempcpy_chk@plt+0x22a8>
   1383c:	ldr	r1, [sp, #24]
   13840:	ldr	r2, [sp, #20]
   13844:	add	r1, r2, r1
   13848:	sub	r2, r0, #1
   1384c:	ldrb	r3, [r1]
   13850:	sub	r5, r3, #94	; 0x5e
   13854:	cmp	r5, #30
   13858:	bhi	13870 <__mempcpy_chk@plt+0x2290>
   1385c:	mov	r4, #1
   13860:	mov	sl, #1073741829	; 0x40000005
   13864:	tst	sl, r4, lsl r5
   13868:	ldr	r4, [sp, #84]	; 0x54
   1386c:	bne	13cd0 <__mempcpy_chk@plt+0x26f0>
   13870:	sub	r3, r3, #91	; 0x5b
   13874:	cmp	r3, #2
   13878:	bcc	13cd0 <__mempcpy_chk@plt+0x26f0>
   1387c:	add	r1, r1, #1
   13880:	subs	r2, r2, #1
   13884:	bne	1384c <__mempcpy_chk@plt+0x226c>
   13888:	ldr	r5, [sp, #24]
   1388c:	str	lr, [fp, #-48]	; 0xffffffd0
   13890:	add	r5, r0, r5
   13894:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13898:	bl	113dc <iswprint@plt>
   1389c:	cmp	r0, #0
   138a0:	sub	r4, fp, #40	; 0x28
   138a4:	movwne	r0, #1
   138a8:	and	r9, r9, r0
   138ac:	mov	r0, r4
   138b0:	bl	1137c <mbsinit@plt>
   138b4:	mov	r1, r5
   138b8:	mov	r3, r4
   138bc:	ldr	sl, [sp, #36]	; 0x24
   138c0:	ldr	r5, [fp, #-84]	; 0xffffffac
   138c4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   138c8:	cmp	r0, #0
   138cc:	beq	137dc <__mempcpy_chk@plt+0x21fc>
   138d0:	b	1370c <__mempcpy_chk@plt+0x212c>
   138d4:	mov	r8, r0
   138d8:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   138dc:	mov	r0, #0
   138e0:	str	r0, [fp, #-56]	; 0xffffffc8
   138e4:	ldr	r0, [sp, #28]
   138e8:	cmp	r0, #0
   138ec:	beq	13990 <__mempcpy_chk@plt+0x23b0>
   138f0:	add	r0, r7, #2
   138f4:	mov	r1, sl
   138f8:	cmp	r0, sl
   138fc:	bcs	13990 <__mempcpy_chk@plt+0x23b0>
   13900:	add	r1, r7, r4
   13904:	ldrb	r1, [r1, #1]
   13908:	cmp	r1, #63	; 0x3f
   1390c:	bne	13990 <__mempcpy_chk@plt+0x23b0>
   13910:	ldrb	r9, [r4, r0]
   13914:	sub	r2, r9, #33	; 0x21
   13918:	cmp	r2, #29
   1391c:	bhi	13990 <__mempcpy_chk@plt+0x23b0>
   13920:	mov	r1, r4
   13924:	movw	r4, #20929	; 0x51c1
   13928:	mov	r3, #1
   1392c:	movt	r4, #14336	; 0x3800
   13930:	tst	r4, r3, lsl r2
   13934:	beq	13c1c <__mempcpy_chk@plt+0x263c>
   13938:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1393c:	tst	r2, #1
   13940:	bne	13dec <__mempcpy_chk@plt+0x280c>
   13944:	cmp	r8, ip
   13948:	mov	r4, r1
   1394c:	mov	r7, r0
   13950:	mov	r6, r9
   13954:	movcc	r2, #63	; 0x3f
   13958:	strbcc	r2, [r5, r8]
   1395c:	add	r2, r8, #1
   13960:	cmp	r2, ip
   13964:	movcc	r3, #34	; 0x22
   13968:	strbcc	r3, [r5, r2]
   1396c:	add	r2, r8, #2
   13970:	cmp	r2, ip
   13974:	movcc	r3, #34	; 0x22
   13978:	strbcc	r3, [r5, r2]
   1397c:	add	r2, r8, #3
   13980:	add	r8, r8, #4
   13984:	cmp	r2, ip
   13988:	movcc	r3, #63	; 0x3f
   1398c:	strbcc	r3, [r5, r2]
   13990:	mov	r9, #0
   13994:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   13998:	ldr	sl, [sp, #36]	; 0x24
   1399c:	add	r0, r1, r7
   139a0:	mov	r2, #0
   139a4:	str	r3, [sp, #24]
   139a8:	str	r0, [fp, #-56]	; 0xffffffc8
   139ac:	tst	r3, #1
   139b0:	beq	139dc <__mempcpy_chk@plt+0x23fc>
   139b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   139b8:	tst	r0, #1
   139bc:	beq	13aa4 <__mempcpy_chk@plt+0x24c4>
   139c0:	ldr	r1, [sp, #88]	; 0x58
   139c4:	mov	r0, r3
   139c8:	cmp	r8, r1
   139cc:	movcc	r1, #92	; 0x5c
   139d0:	strbcc	r1, [r5, r8]
   139d4:	add	r8, r8, #1
   139d8:	b	13aa8 <__mempcpy_chk@plt+0x24c8>
   139dc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   139e0:	tst	r1, #1
   139e4:	bne	13cf4 <__mempcpy_chk@plt+0x2714>
   139e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   139ec:	subs	r2, r1, #2
   139f0:	movwne	r2, #1
   139f4:	orr	r2, r2, lr
   139f8:	tst	r2, #1
   139fc:	bne	13a40 <__mempcpy_chk@plt+0x2460>
   13a00:	ldr	r1, [sp, #88]	; 0x58
   13a04:	add	r2, r8, #1
   13a08:	mov	lr, #1
   13a0c:	cmp	r8, r1
   13a10:	movcc	r1, #39	; 0x27
   13a14:	strbcc	r1, [r5, r8]
   13a18:	ldr	r1, [sp, #88]	; 0x58
   13a1c:	cmp	r2, r1
   13a20:	movcc	r1, #36	; 0x24
   13a24:	strbcc	r1, [r5, r2]
   13a28:	ldr	r1, [sp, #88]	; 0x58
   13a2c:	add	r2, r8, #2
   13a30:	add	r8, r8, #3
   13a34:	cmp	r2, r1
   13a38:	movcc	r1, #39	; 0x27
   13a3c:	strbcc	r1, [r5, r2]
   13a40:	ldr	r1, [sp, #88]	; 0x58
   13a44:	add	r2, r8, #1
   13a48:	mov	r0, r3
   13a4c:	cmp	r8, r1
   13a50:	movcc	r1, #92	; 0x5c
   13a54:	strbcc	r1, [r5, r8]
   13a58:	ldr	r1, [sp, #88]	; 0x58
   13a5c:	cmp	r2, r1
   13a60:	bcs	13a74 <__mempcpy_chk@plt+0x2494>
   13a64:	uxtb	r3, r6
   13a68:	mov	r1, #48	; 0x30
   13a6c:	orr	r3, r1, r3, lsr #6
   13a70:	strb	r3, [r5, r2]
   13a74:	ldr	r1, [sp, #88]	; 0x58
   13a78:	add	r2, r8, #2
   13a7c:	add	r8, r8, #3
   13a80:	cmp	r2, r1
   13a84:	lsrcc	r3, r6, #3
   13a88:	movcc	r1, #6
   13a8c:	bficc	r3, r1, #3, #29
   13a90:	mov	r1, #6
   13a94:	bfi	r6, r1, #3, #29
   13a98:	strbcc	r3, [r5, r2]
   13a9c:	mov	r2, #1
   13aa0:	b	13ab0 <__mempcpy_chk@plt+0x24d0>
   13aa4:	mov	r0, r3
   13aa8:	mov	r1, #0
   13aac:	str	r1, [fp, #-52]	; 0xffffffcc
   13ab0:	mov	ip, r2
   13ab4:	and	r1, r2, #1
   13ab8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13abc:	add	r3, r7, #1
   13ac0:	cmp	r2, r3
   13ac4:	bls	13b4c <__mempcpy_chk@plt+0x256c>
   13ac8:	cmp	r1, #0
   13acc:	mvn	r5, lr
   13ad0:	movwne	r1, #1
   13ad4:	orr	r5, r5, r1
   13ad8:	tst	r5, #1
   13adc:	bne	13b20 <__mempcpy_chk@plt+0x2540>
   13ae0:	ldr	r1, [sp, #88]	; 0x58
   13ae4:	ldr	r5, [fp, #-84]	; 0xffffffac
   13ae8:	mov	r2, r4
   13aec:	ldr	r4, [sp, #88]	; 0x58
   13af0:	ldr	r0, [sp, #24]
   13af4:	mov	lr, #0
   13af8:	cmp	r8, r1
   13afc:	movcc	r1, #39	; 0x27
   13b00:	strbcc	r1, [r5, r8]
   13b04:	add	r1, r8, #1
   13b08:	add	r8, r8, #2
   13b0c:	cmp	r1, r4
   13b10:	movcc	r4, #39	; 0x27
   13b14:	strbcc	r4, [r5, r1]
   13b18:	mov	r4, r2
   13b1c:	b	13b24 <__mempcpy_chk@plt+0x2544>
   13b20:	ldr	r5, [fp, #-84]	; 0xffffffac
   13b24:	ldr	r1, [sp, #88]	; 0x58
   13b28:	mov	r2, ip
   13b2c:	cmp	r8, r1
   13b30:	ldr	r1, [sp, #72]	; 0x48
   13b34:	strbcc	r6, [r5, r8]
   13b38:	add	r8, r8, #1
   13b3c:	ldrb	r6, [r1, r7]
   13b40:	mov	r7, r3
   13b44:	mov	r3, r0
   13b48:	b	139ac <__mempcpy_chk@plt+0x23cc>
   13b4c:	ldr	ip, [sp, #88]	; 0x58
   13b50:	cmp	r1, #0
   13b54:	movwne	r1, #1
   13b58:	str	r1, [fp, #-56]	; 0xffffffc8
   13b5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13b60:	cmp	r0, #0
   13b64:	bne	13b94 <__mempcpy_chk@plt+0x25b4>
   13b68:	tst	lr, #1
   13b6c:	beq	13b94 <__mempcpy_chk@plt+0x25b4>
   13b70:	cmp	r8, ip
   13b74:	mov	lr, #0
   13b78:	movcc	r0, #39	; 0x27
   13b7c:	strbcc	r0, [r5, r8]
   13b80:	add	r0, r8, #1
   13b84:	add	r8, r8, #2
   13b88:	cmp	r0, ip
   13b8c:	movcc	r1, #39	; 0x27
   13b90:	strbcc	r1, [r5, r0]
   13b94:	mov	r1, r9
   13b98:	mov	r0, r6
   13b9c:	cmp	r8, ip
   13ba0:	strbcc	r0, [r5, r8]
   13ba4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13ba8:	add	r8, r8, #1
   13bac:	and	r0, r0, r1
   13bb0:	str	r0, [fp, #-48]	; 0xffffffd0
   13bb4:	mov	r3, sl
   13bb8:	add	r7, r7, #1
   13bbc:	b	130ac <__mempcpy_chk@plt+0x1acc>
   13bc0:	mov	r9, #0
   13bc4:	b	13c08 <__mempcpy_chk@plt+0x2628>
   13bc8:	mov	r9, #0
   13bcc:	cmp	r2, r4
   13bd0:	bls	13c08 <__mempcpy_chk@plt+0x2628>
   13bd4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13bd8:	ldr	r1, [sp, #24]
   13bdc:	add	r0, r4, r7
   13be0:	mov	r3, r1
   13be4:	ldrb	r1, [r0, r1]
   13be8:	cmp	r1, #0
   13bec:	beq	13c14 <__mempcpy_chk@plt+0x2634>
   13bf0:	add	r3, r3, #1
   13bf4:	add	r1, r7, r3
   13bf8:	cmp	r1, r2
   13bfc:	mov	r1, r3
   13c00:	bcc	13be0 <__mempcpy_chk@plt+0x2600>
   13c04:	b	1370c <__mempcpy_chk@plt+0x212c>
   13c08:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13c0c:	ldr	r1, [sp, #24]
   13c10:	b	1370c <__mempcpy_chk@plt+0x212c>
   13c14:	mov	r1, r3
   13c18:	b	1370c <__mempcpy_chk@plt+0x212c>
   13c1c:	mov	r9, #0
   13c20:	mov	r4, r1
   13c24:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   13c28:	mov	sl, r7
   13c2c:	b	13c34 <__mempcpy_chk@plt+0x2654>
   13c30:	mvn	sl, #0
   13c34:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13c38:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13c3c:	eor	r0, r1, #2
   13c40:	orr	r0, r0, r8
   13c44:	clz	r0, r0
   13c48:	lsr	r0, r0, #5
   13c4c:	tst	r2, r0
   13c50:	bne	13cf8 <__mempcpy_chk@plt+0x2718>
   13c54:	subs	r0, r1, #2
   13c58:	movwne	r0, #1
   13c5c:	orr	r0, r2, r0
   13c60:	tst	r0, #1
   13c64:	ldreq	r0, [sp, #60]	; 0x3c
   13c68:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   13c6c:	eoreq	r0, r0, #1
   13c70:	tsteq	r0, #1
   13c74:	bne	13d8c <__mempcpy_chk@plt+0x27ac>
   13c78:	tst	r1, #1
   13c7c:	bne	13d58 <__mempcpy_chk@plt+0x2778>
   13c80:	ldr	r6, [sp, #56]	; 0x38
   13c84:	mov	r9, #0
   13c88:	cmp	r6, #0
   13c8c:	beq	13d84 <__mempcpy_chk@plt+0x27a4>
   13c90:	ldr	r0, [sp, #84]	; 0x54
   13c94:	mov	r1, #0
   13c98:	mov	r7, #2
   13c9c:	cmp	ip, #0
   13ca0:	str	r1, [fp, #-48]	; 0xffffffd0
   13ca4:	mov	r1, #0
   13ca8:	str	r1, [fp, #-76]	; 0xffffffb4
   13cac:	beq	12e14 <__mempcpy_chk@plt+0x1834>
   13cb0:	b	13d8c <__mempcpy_chk@plt+0x27ac>
   13cb4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13cb8:	ldr	r1, [fp, #12]
   13cbc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13cc0:	mov	r5, r3
   13cc4:	mov	ip, r6
   13cc8:	mov	r3, sl
   13ccc:	b	13d1c <__mempcpy_chk@plt+0x273c>
   13cd0:	tst	r4, #1
   13cd4:	ldr	r5, [fp, #-84]	; 0xffffffac
   13cd8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13cdc:	ldr	r1, [fp, #12]
   13ce0:	ldr	r3, [sp, #36]	; 0x24
   13ce4:	mov	r0, #2
   13ce8:	movwne	r0, #4
   13cec:	mov	r2, r0
   13cf0:	b	13d1c <__mempcpy_chk@plt+0x273c>
   13cf4:	ldr	ip, [sp, #88]	; 0x58
   13cf8:	ldr	r1, [sp, #84]	; 0x54
   13cfc:	mov	r0, #2
   13d00:	tst	r1, #1
   13d04:	movwne	r0, #4
   13d08:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13d0c:	ldr	r1, [fp, #12]
   13d10:	mov	r3, sl
   13d14:	cmp	r2, #2
   13d18:	moveq	r2, r0
   13d1c:	mov	r0, #0
   13d20:	bic	r1, r1, #2
   13d24:	str	r2, [sp]
   13d28:	mov	r2, r4
   13d2c:	str	r0, [sp, #8]
   13d30:	ldr	r0, [sp, #76]	; 0x4c
   13d34:	str	r1, [sp, #4]
   13d38:	mov	r1, ip
   13d3c:	str	r0, [sp, #12]
   13d40:	ldr	r0, [sp, #80]	; 0x50
   13d44:	str	r0, [sp, #16]
   13d48:	mov	r0, r5
   13d4c:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   13d50:	mov	r8, r0
   13d54:	b	13dd8 <__mempcpy_chk@plt+0x27f8>
   13d58:	mov	r0, #5
   13d5c:	ldr	r1, [sp, #56]	; 0x38
   13d60:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13d64:	mov	r3, sl
   13d68:	str	r0, [sp]
   13d6c:	ldr	r0, [fp, #12]
   13d70:	str	r0, [sp, #4]
   13d74:	ldr	r0, [fp, #16]
   13d78:	str	r0, [sp, #8]
   13d7c:	ldr	r0, [sp, #76]	; 0x4c
   13d80:	b	13d3c <__mempcpy_chk@plt+0x275c>
   13d84:	mov	r0, #0
   13d88:	str	r0, [fp, #-76]	; 0xffffffb4
   13d8c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13d90:	cmp	r1, #0
   13d94:	beq	13dcc <__mempcpy_chk@plt+0x27ec>
   13d98:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13d9c:	tst	r0, #1
   13da0:	bne	13dcc <__mempcpy_chk@plt+0x27ec>
   13da4:	ldrb	r0, [r1]
   13da8:	cmp	r0, #0
   13dac:	beq	13dcc <__mempcpy_chk@plt+0x27ec>
   13db0:	add	r1, r1, #1
   13db4:	cmp	r8, ip
   13db8:	strbcc	r0, [r5, r8]
   13dbc:	add	r8, r8, #1
   13dc0:	ldrb	r0, [r1], #1
   13dc4:	cmp	r0, #0
   13dc8:	bne	13db4 <__mempcpy_chk@plt+0x27d4>
   13dcc:	cmp	r8, ip
   13dd0:	movcc	r0, #0
   13dd4:	strbcc	r0, [r5, r8]
   13dd8:	mov	r0, r8
   13ddc:	sub	sp, fp, #28
   13de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13de4:	mov	r0, #4
   13de8:	b	13d08 <__mempcpy_chk@plt+0x2728>
   13dec:	mov	r4, r1
   13df0:	b	13cf8 <__mempcpy_chk@plt+0x2718>
   13df4:	bl	115c8 <abort@plt>
   13df8:	mov	r3, r2
   13dfc:	mov	r2, #0
   13e00:	b	13e04 <__mempcpy_chk@plt+0x2824>
   13e04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e08:	add	fp, sp, #28
   13e0c:	sub	sp, sp, #36	; 0x24
   13e10:	movw	r8, #25352	; 0x6308
   13e14:	cmp	r3, #0
   13e18:	mov	r4, r2
   13e1c:	str	r2, [sp, #24]
   13e20:	mov	r5, r1
   13e24:	mov	r6, r0
   13e28:	str	r0, [sp, #20]
   13e2c:	movt	r8, #3
   13e30:	movne	r8, r3
   13e34:	bl	114cc <__errno_location@plt>
   13e38:	str	r0, [sp, #28]
   13e3c:	ldr	r1, [r8, #40]	; 0x28
   13e40:	ldr	r2, [r8, #44]	; 0x2c
   13e44:	ldr	r7, [r0]
   13e48:	cmp	r4, #0
   13e4c:	add	sl, r8, #8
   13e50:	mov	r0, #0
   13e54:	ldm	r8, {r3, r9}
   13e58:	orreq	r9, r9, #1
   13e5c:	stm	sp, {r3, r9, sl}
   13e60:	str	r1, [sp, #12]
   13e64:	str	r2, [sp, #16]
   13e68:	mov	r1, #0
   13e6c:	mov	r2, r6
   13e70:	mov	r3, r5
   13e74:	str	r7, [sp, #32]
   13e78:	mov	r7, r5
   13e7c:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   13e80:	add	r4, r0, #1
   13e84:	mov	r5, r0
   13e88:	mov	r0, r4
   13e8c:	bl	21590 <__mempcpy_chk@plt+0xffb0>
   13e90:	mov	r6, r0
   13e94:	ldr	r0, [r8]
   13e98:	ldr	r2, [r8, #44]	; 0x2c
   13e9c:	ldr	r1, [r8, #40]	; 0x28
   13ea0:	mov	r3, r7
   13ea4:	stm	sp, {r0, r9, sl}
   13ea8:	str	r2, [sp, #16]
   13eac:	ldr	r2, [sp, #20]
   13eb0:	str	r1, [sp, #12]
   13eb4:	mov	r0, r6
   13eb8:	mov	r1, r4
   13ebc:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   13ec0:	ldr	r0, [sp, #24]
   13ec4:	ldr	r1, [sp, #32]
   13ec8:	ldr	r2, [sp, #28]
   13ecc:	cmp	r0, #0
   13ed0:	str	r1, [r2]
   13ed4:	strne	r5, [r0]
   13ed8:	mov	r0, r6
   13edc:	sub	sp, fp, #28
   13ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ee4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ee8:	add	fp, sp, #24
   13eec:	movw	r5, #16708	; 0x4144
   13ef0:	movw	r8, #16704	; 0x4140
   13ef4:	movt	r5, #3
   13ef8:	movt	r8, #3
   13efc:	ldr	r0, [r5]
   13f00:	ldr	r4, [r8]
   13f04:	cmp	r0, #2
   13f08:	blt	13f34 <__mempcpy_chk@plt+0x2954>
   13f0c:	add	r7, r4, #12
   13f10:	mov	r6, #0
   13f14:	ldr	r0, [r7, r6, lsl #3]
   13f18:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   13f1c:	ldr	r1, [r5]
   13f20:	add	r2, r6, #2
   13f24:	add	r0, r6, #1
   13f28:	mov	r6, r0
   13f2c:	cmp	r2, r1
   13f30:	blt	13f14 <__mempcpy_chk@plt+0x2934>
   13f34:	ldr	r0, [r4, #4]
   13f38:	movw	r9, #25400	; 0x6338
   13f3c:	movw	r7, #16712	; 0x4148
   13f40:	movt	r9, #3
   13f44:	movt	r7, #3
   13f48:	cmp	r0, r9
   13f4c:	beq	13f5c <__mempcpy_chk@plt+0x297c>
   13f50:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   13f54:	mov	r0, #256	; 0x100
   13f58:	stm	r7, {r0, r9}
   13f5c:	cmp	r4, r7
   13f60:	beq	13f70 <__mempcpy_chk@plt+0x2990>
   13f64:	mov	r0, r4
   13f68:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   13f6c:	str	r7, [r8]
   13f70:	mov	r0, #1
   13f74:	str	r0, [r5]
   13f78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f7c:	movw	r3, #25352	; 0x6308
   13f80:	mvn	r2, #0
   13f84:	movt	r3, #3
   13f88:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   13f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f90:	add	fp, sp, #28
   13f94:	sub	sp, sp, #44	; 0x2c
   13f98:	mov	r7, r3
   13f9c:	str	r2, [sp, #36]	; 0x24
   13fa0:	str	r1, [sp, #32]
   13fa4:	mov	r5, r0
   13fa8:	bl	114cc <__errno_location@plt>
   13fac:	cmp	r5, #0
   13fb0:	bmi	14120 <__mempcpy_chk@plt+0x2b40>
   13fb4:	cmn	r5, #-2147483647	; 0x80000001
   13fb8:	beq	14120 <__mempcpy_chk@plt+0x2b40>
   13fbc:	movw	r8, #16708	; 0x4144
   13fc0:	movw	r4, #16704	; 0x4140
   13fc4:	str	r0, [sp, #28]
   13fc8:	ldr	r0, [r0]
   13fcc:	movt	r8, #3
   13fd0:	movt	r4, #3
   13fd4:	ldr	r1, [r8]
   13fd8:	ldr	r6, [r4]
   13fdc:	str	r0, [sp, #24]
   13fe0:	cmp	r1, r5
   13fe4:	ble	13ff0 <__mempcpy_chk@plt+0x2a10>
   13fe8:	mov	sl, r6
   13fec:	b	1405c <__mempcpy_chk@plt+0x2a7c>
   13ff0:	movw	r9, #16712	; 0x4148
   13ff4:	mov	r0, #8
   13ff8:	str	r1, [fp, #-32]	; 0xffffffe0
   13ffc:	sub	r1, r5, r1
   14000:	mvn	r3, #-2147483648	; 0x80000000
   14004:	movt	r9, #3
   14008:	str	r0, [sp]
   1400c:	add	r2, r1, #1
   14010:	sub	r1, fp, #32
   14014:	subs	r0, r6, r9
   14018:	movne	r0, r6
   1401c:	bl	216c0 <__mempcpy_chk@plt+0x100e0>
   14020:	mov	sl, r0
   14024:	cmp	r6, r9
   14028:	str	r0, [r4]
   1402c:	bne	14038 <__mempcpy_chk@plt+0x2a58>
   14030:	ldrd	r0, [r9]
   14034:	stm	sl, {r0, r1}
   14038:	ldr	r1, [r8]
   1403c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14040:	add	r0, sl, r1, lsl #3
   14044:	sub	r1, r2, r1
   14048:	lsl	r2, r1, #3
   1404c:	mov	r1, #0
   14050:	bl	114f0 <memset@plt>
   14054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14058:	str	r0, [r8]
   1405c:	mov	r9, sl
   14060:	ldm	r7, {r0, r1}
   14064:	orr	r8, r1, #1
   14068:	add	r1, r7, #8
   1406c:	ldr	r2, [r7, #40]	; 0x28
   14070:	ldr	r3, [r7, #44]	; 0x2c
   14074:	ldr	r6, [r9, r5, lsl #3]!
   14078:	str	r1, [sp, #20]
   1407c:	ldr	r4, [r9, #4]!
   14080:	stm	sp, {r0, r8}
   14084:	add	r0, sp, #8
   14088:	stm	r0, {r1, r2, r3}
   1408c:	ldr	r2, [sp, #32]
   14090:	ldr	r3, [sp, #36]	; 0x24
   14094:	mov	r1, r6
   14098:	mov	r0, r4
   1409c:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   140a0:	cmp	r6, r0
   140a4:	bhi	14108 <__mempcpy_chk@plt+0x2b28>
   140a8:	add	r6, r0, #1
   140ac:	movw	r0, #25400	; 0x6338
   140b0:	movt	r0, #3
   140b4:	str	r6, [sl, r5, lsl #3]
   140b8:	cmp	r4, r0
   140bc:	beq	140c8 <__mempcpy_chk@plt+0x2ae8>
   140c0:	mov	r0, r4
   140c4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   140c8:	mov	r0, r6
   140cc:	bl	21590 <__mempcpy_chk@plt+0xffb0>
   140d0:	str	r0, [r9]
   140d4:	mov	r4, r0
   140d8:	add	r3, sp, #8
   140dc:	ldr	r0, [r7]
   140e0:	ldr	r1, [r7, #40]	; 0x28
   140e4:	ldr	r2, [r7, #44]	; 0x2c
   140e8:	stm	sp, {r0, r8}
   140ec:	ldr	r0, [sp, #20]
   140f0:	stm	r3, {r0, r1, r2}
   140f4:	ldr	r2, [sp, #32]
   140f8:	ldr	r3, [sp, #36]	; 0x24
   140fc:	mov	r0, r4
   14100:	mov	r1, r6
   14104:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   14108:	ldr	r0, [sp, #28]
   1410c:	ldr	r1, [sp, #24]
   14110:	str	r1, [r0]
   14114:	mov	r0, r4
   14118:	sub	sp, fp, #28
   1411c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14120:	bl	115c8 <abort@plt>
   14124:	movw	r3, #25352	; 0x6308
   14128:	movt	r3, #3
   1412c:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14130:	movw	r3, #25352	; 0x6308
   14134:	mov	r1, r0
   14138:	mov	r0, #0
   1413c:	mvn	r2, #0
   14140:	movt	r3, #3
   14144:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14148:	movw	r3, #25352	; 0x6308
   1414c:	mov	r2, r1
   14150:	mov	r1, r0
   14154:	mov	r0, #0
   14158:	movt	r3, #3
   1415c:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14160:	push	{fp, lr}
   14164:	mov	fp, sp
   14168:	sub	sp, sp, #48	; 0x30
   1416c:	vmov.i32	q8, #0	; 0x00000000
   14170:	mov	ip, #32
   14174:	mov	r3, sp
   14178:	mov	lr, r2
   1417c:	cmp	r1, #10
   14180:	add	r2, r3, #16
   14184:	vst1.64	{d16-d17}, [r3], ip
   14188:	vst1.64	{d16-d17}, [r2]
   1418c:	vst1.64	{d16-d17}, [r3]
   14190:	beq	141b0 <__mempcpy_chk@plt+0x2bd0>
   14194:	str	r1, [sp]
   14198:	mov	r3, sp
   1419c:	mov	r1, lr
   141a0:	mvn	r2, #0
   141a4:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   141a8:	mov	sp, fp
   141ac:	pop	{fp, pc}
   141b0:	bl	115c8 <abort@plt>
   141b4:	push	{r4, sl, fp, lr}
   141b8:	add	fp, sp, #8
   141bc:	sub	sp, sp, #48	; 0x30
   141c0:	vmov.i32	q8, #0	; 0x00000000
   141c4:	mov	ip, r3
   141c8:	mov	r3, sp
   141cc:	mov	lr, #32
   141d0:	cmp	r1, #10
   141d4:	add	r4, r3, #16
   141d8:	vst1.64	{d16-d17}, [r3], lr
   141dc:	vst1.64	{d16-d17}, [r4]
   141e0:	vst1.64	{d16-d17}, [r3]
   141e4:	beq	14204 <__mempcpy_chk@plt+0x2c24>
   141e8:	str	r1, [sp]
   141ec:	mov	r1, r2
   141f0:	mov	r3, sp
   141f4:	mov	r2, ip
   141f8:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   141fc:	sub	sp, fp, #8
   14200:	pop	{r4, sl, fp, pc}
   14204:	bl	115c8 <abort@plt>
   14208:	mov	r2, r1
   1420c:	mov	r1, r0
   14210:	mov	r0, #0
   14214:	b	14160 <__mempcpy_chk@plt+0x2b80>
   14218:	mov	r3, r2
   1421c:	mov	r2, r1
   14220:	mov	r1, r0
   14224:	mov	r0, #0
   14228:	b	141b4 <__mempcpy_chk@plt+0x2bd4>
   1422c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14230:	add	fp, sp, #24
   14234:	sub	sp, sp, #48	; 0x30
   14238:	movw	r8, #25352	; 0x6308
   1423c:	mov	lr, r0
   14240:	mov	r3, sp
   14244:	mov	ip, r1
   14248:	movt	r8, #3
   1424c:	mov	r1, r3
   14250:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14254:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14258:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   1425c:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14260:	ubfx	r0, r2, #5, #3
   14264:	and	r2, r2, #31
   14268:	mov	r4, #1
   1426c:	add	r0, r3, r0, lsl #2
   14270:	ldr	r1, [r0, #8]
   14274:	bic	r4, r4, r1, lsr r2
   14278:	eor	r1, r1, r4, lsl r2
   1427c:	mov	r2, ip
   14280:	str	r1, [r0, #8]
   14284:	mov	r0, #0
   14288:	mov	r1, lr
   1428c:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   14290:	sub	sp, fp, #24
   14294:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14298:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1429c:	add	fp, sp, #24
   142a0:	sub	sp, sp, #48	; 0x30
   142a4:	movw	lr, #25352	; 0x6308
   142a8:	mov	ip, r0
   142ac:	mov	r3, sp
   142b0:	movt	lr, #3
   142b4:	mov	r2, r3
   142b8:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   142bc:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   142c0:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   142c4:	stm	r2, {r0, r4, r5, r6, r7, r8}
   142c8:	ubfx	r0, r1, #5, #3
   142cc:	and	r1, r1, #31
   142d0:	mov	r7, #1
   142d4:	add	r0, r3, r0, lsl #2
   142d8:	ldr	r2, [r0, #8]
   142dc:	bic	r7, r7, r2, lsr r1
   142e0:	eor	r1, r2, r7, lsl r1
   142e4:	mvn	r2, #0
   142e8:	str	r1, [r0, #8]
   142ec:	mov	r0, #0
   142f0:	mov	r1, ip
   142f4:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   142f8:	sub	sp, fp, #24
   142fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14300:	push	{r4, r5, r6, r7, fp, lr}
   14304:	add	fp, sp, #16
   14308:	sub	sp, sp, #48	; 0x30
   1430c:	movw	lr, #25352	; 0x6308
   14310:	mov	ip, r0
   14314:	mov	r3, sp
   14318:	movt	lr, #3
   1431c:	mov	r2, r3
   14320:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14324:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14328:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   1432c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14330:	mov	r1, ip
   14334:	mvn	r2, #0
   14338:	ldr	r0, [sp, #12]
   1433c:	orr	r0, r0, #67108864	; 0x4000000
   14340:	str	r0, [sp, #12]
   14344:	mov	r0, #0
   14348:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   1434c:	sub	sp, fp, #16
   14350:	pop	{r4, r5, r6, r7, fp, pc}
   14354:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14358:	add	fp, sp, #24
   1435c:	sub	sp, sp, #48	; 0x30
   14360:	movw	r8, #25352	; 0x6308
   14364:	mov	ip, r1
   14368:	mov	lr, r0
   1436c:	mov	r3, sp
   14370:	movt	r8, #3
   14374:	mov	r2, r3
   14378:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   1437c:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14380:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14384:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14388:	mov	r1, lr
   1438c:	mov	r2, ip
   14390:	ldr	r0, [sp, #12]
   14394:	orr	r0, r0, #67108864	; 0x4000000
   14398:	str	r0, [sp, #12]
   1439c:	mov	r0, #0
   143a0:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   143a4:	sub	sp, fp, #24
   143a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143b0:	add	fp, sp, #24
   143b4:	sub	sp, sp, #96	; 0x60
   143b8:	vmov.i32	q8, #0	; 0x00000000
   143bc:	mov	lr, sp
   143c0:	mov	ip, r2
   143c4:	cmp	r1, #10
   143c8:	add	r3, lr, #16
   143cc:	mov	r2, lr
   143d0:	vst1.64	{d16-d17}, [r3]
   143d4:	mov	r3, #28
   143d8:	vst1.64	{d16-d17}, [r2], r3
   143dc:	vst1.32	{d16-d17}, [r2]
   143e0:	beq	14420 <__mempcpy_chk@plt+0x2e40>
   143e4:	str	r1, [sp, #48]	; 0x30
   143e8:	add	r3, sp, #48	; 0x30
   143ec:	ldm	lr!, {r2, r4, r5, r6, r7}
   143f0:	add	r1, r3, #4
   143f4:	stmia	r1!, {r2, r4, r5, r6, r7}
   143f8:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   143fc:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14400:	mvn	r2, #0
   14404:	ldr	r1, [sp, #60]	; 0x3c
   14408:	orr	r1, r1, #67108864	; 0x4000000
   1440c:	str	r1, [sp, #60]	; 0x3c
   14410:	mov	r1, ip
   14414:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   14418:	sub	sp, fp, #24
   1441c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14420:	bl	115c8 <abort@plt>
   14424:	push	{fp, lr}
   14428:	mov	fp, sp
   1442c:	sub	sp, sp, #8
   14430:	mvn	ip, #0
   14434:	str	ip, [sp]
   14438:	bl	14444 <__mempcpy_chk@plt+0x2e64>
   1443c:	mov	sp, fp
   14440:	pop	{fp, pc}
   14444:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14448:	add	fp, sp, #24
   1444c:	sub	sp, sp, #48	; 0x30
   14450:	movw	ip, #25352	; 0x6308
   14454:	mov	lr, r3
   14458:	mov	r3, sp
   1445c:	cmp	r1, #0
   14460:	movt	ip, #3
   14464:	cmpne	r2, #0
   14468:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   1446c:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   14470:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14474:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14478:	mov	r3, #10
   1447c:	str	r3, [sp]
   14480:	bne	14488 <__mempcpy_chk@plt+0x2ea8>
   14484:	bl	115c8 <abort@plt>
   14488:	ldr	ip, [fp, #8]
   1448c:	str	r2, [sp, #44]	; 0x2c
   14490:	str	r1, [sp, #40]	; 0x28
   14494:	mov	r3, sp
   14498:	mov	r1, lr
   1449c:	mov	r2, ip
   144a0:	bl	13f8c <__mempcpy_chk@plt+0x29ac>
   144a4:	sub	sp, fp, #24
   144a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   144ac:	push	{fp, lr}
   144b0:	mov	fp, sp
   144b4:	sub	sp, sp, #8
   144b8:	mov	r3, r2
   144bc:	mov	r2, r1
   144c0:	mov	r1, r0
   144c4:	mvn	r0, #0
   144c8:	str	r0, [sp]
   144cc:	mov	r0, #0
   144d0:	bl	14444 <__mempcpy_chk@plt+0x2e64>
   144d4:	mov	sp, fp
   144d8:	pop	{fp, pc}
   144dc:	push	{fp, lr}
   144e0:	mov	fp, sp
   144e4:	sub	sp, sp, #8
   144e8:	mov	ip, r2
   144ec:	mov	r2, r1
   144f0:	mov	r1, r0
   144f4:	str	r3, [sp]
   144f8:	mov	r0, #0
   144fc:	mov	r3, ip
   14500:	bl	14444 <__mempcpy_chk@plt+0x2e64>
   14504:	mov	sp, fp
   14508:	pop	{fp, pc}
   1450c:	movw	r3, #16720	; 0x4150
   14510:	movt	r3, #3
   14514:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14518:	movw	r3, #16720	; 0x4150
   1451c:	mov	r2, r1
   14520:	mov	r1, r0
   14524:	mov	r0, #0
   14528:	movt	r3, #3
   1452c:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14530:	movw	r3, #16720	; 0x4150
   14534:	mvn	r2, #0
   14538:	movt	r3, #3
   1453c:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14540:	movw	r3, #16720	; 0x4150
   14544:	mov	r1, r0
   14548:	mov	r0, #0
   1454c:	mvn	r2, #0
   14550:	movt	r3, #3
   14554:	b	13f8c <__mempcpy_chk@plt+0x29ac>
   14558:	push	{r4, r5, fp, lr}
   1455c:	add	fp, sp, #8
   14560:	mov	r5, r0
   14564:	mov	r4, r1
   14568:	mov	r0, #0
   1456c:	mov	r2, #5
   14570:	mov	r1, r5
   14574:	bl	113a0 <dcgettext@plt>
   14578:	cmp	r0, r5
   1457c:	popne	{r4, r5, fp, pc}
   14580:	bl	21db4 <__mempcpy_chk@plt+0x107d4>
   14584:	ldrb	r1, [r0]
   14588:	and	r1, r1, #223	; 0xdf
   1458c:	cmp	r1, #71	; 0x47
   14590:	beq	145f8 <__mempcpy_chk@plt+0x3018>
   14594:	cmp	r1, #85	; 0x55
   14598:	bne	14650 <__mempcpy_chk@plt+0x3070>
   1459c:	ldrb	r1, [r0, #1]
   145a0:	and	r1, r1, #223	; 0xdf
   145a4:	cmp	r1, #84	; 0x54
   145a8:	bne	14650 <__mempcpy_chk@plt+0x3070>
   145ac:	ldrb	r1, [r0, #2]
   145b0:	and	r1, r1, #223	; 0xdf
   145b4:	cmp	r1, #70	; 0x46
   145b8:	bne	14650 <__mempcpy_chk@plt+0x3070>
   145bc:	ldrb	r1, [r0, #3]
   145c0:	cmp	r1, #45	; 0x2d
   145c4:	bne	14650 <__mempcpy_chk@plt+0x3070>
   145c8:	ldrb	r1, [r0, #4]
   145cc:	cmp	r1, #56	; 0x38
   145d0:	bne	14650 <__mempcpy_chk@plt+0x3070>
   145d4:	ldrb	r0, [r0, #5]
   145d8:	cmp	r0, #0
   145dc:	bne	14650 <__mempcpy_chk@plt+0x3070>
   145e0:	ldrb	r1, [r5]
   145e4:	movw	r2, #10852	; 0x2a64
   145e8:	movw	r0, #10856	; 0x2a68
   145ec:	movt	r2, #2
   145f0:	movt	r0, #2
   145f4:	b	14680 <__mempcpy_chk@plt+0x30a0>
   145f8:	ldrb	r1, [r0, #1]
   145fc:	and	r1, r1, #223	; 0xdf
   14600:	cmp	r1, #66	; 0x42
   14604:	bne	14650 <__mempcpy_chk@plt+0x3070>
   14608:	ldrb	r1, [r0, #2]
   1460c:	cmp	r1, #49	; 0x31
   14610:	bne	14650 <__mempcpy_chk@plt+0x3070>
   14614:	ldrb	r1, [r0, #3]
   14618:	cmp	r1, #56	; 0x38
   1461c:	bne	14650 <__mempcpy_chk@plt+0x3070>
   14620:	ldrb	r1, [r0, #4]
   14624:	cmp	r1, #48	; 0x30
   14628:	bne	14650 <__mempcpy_chk@plt+0x3070>
   1462c:	ldrb	r1, [r0, #5]
   14630:	cmp	r1, #51	; 0x33
   14634:	bne	14650 <__mempcpy_chk@plt+0x3070>
   14638:	ldrb	r1, [r0, #6]
   1463c:	cmp	r1, #48	; 0x30
   14640:	bne	14650 <__mempcpy_chk@plt+0x3070>
   14644:	ldrb	r0, [r0, #7]
   14648:	cmp	r0, #0
   1464c:	beq	1466c <__mempcpy_chk@plt+0x308c>
   14650:	movw	r1, #10846	; 0x2a5e
   14654:	movw	r0, #10850	; 0x2a62
   14658:	cmp	r4, #9
   1465c:	movt	r1, #2
   14660:	movt	r0, #2
   14664:	moveq	r0, r1
   14668:	pop	{r4, r5, fp, pc}
   1466c:	ldrb	r1, [r5]
   14670:	movw	r2, #10860	; 0x2a6c
   14674:	movw	r0, #10864	; 0x2a70
   14678:	movt	r2, #2
   1467c:	movt	r0, #2
   14680:	cmp	r1, #96	; 0x60
   14684:	moveq	r0, r2
   14688:	pop	{r4, r5, fp, pc}
   1468c:	andeq	r0, r0, r0
   14690:	push	{fp, lr}
   14694:	mov	fp, sp
   14698:	mov	lr, r0
   1469c:	movw	r0, #25660	; 0x643c
   146a0:	mov	ip, r1
   146a4:	ldrb	r1, [r2, #28]
   146a8:	movt	r0, #3
   146ac:	ldr	r3, [r0]
   146b0:	mov	r0, #16
   146b4:	and	r1, r1, #111	; 0x6f
   146b8:	and	r0, r0, r3, lsr #21
   146bc:	orr	r0, r1, r0
   146c0:	mov	r1, lr
   146c4:	orr	r0, r0, #128	; 0x80
   146c8:	strb	r0, [r2, #28]
   146cc:	mov	r0, r2
   146d0:	mov	r2, ip
   146d4:	bl	14710 <__mempcpy_chk@plt+0x3130>
   146d8:	cmp	r0, #0
   146dc:	beq	14708 <__mempcpy_chk@plt+0x3128>
   146e0:	movw	r1, #11336	; 0x2c48
   146e4:	mov	r2, #5
   146e8:	movt	r1, #2
   146ec:	ldr	r0, [r1, r0, lsl #2]
   146f0:	movw	r1, #10952	; 0x2ac8
   146f4:	movt	r1, #2
   146f8:	add	r1, r1, r0
   146fc:	mov	r0, #0
   14700:	pop	{fp, lr}
   14704:	b	113a0 <dcgettext@plt>
   14708:	mov	r0, #0
   1470c:	pop	{fp, pc}
   14710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14714:	add	fp, sp, #28
   14718:	sub	sp, sp, #140	; 0x8c
   1471c:	str	r1, [sp, #24]
   14720:	mov	r1, #0
   14724:	str	r0, [sp, #28]
   14728:	mov	sl, r2
   1472c:	str	r3, [sp, #20]
   14730:	str	r1, [fp, #-52]	; 0xffffffcc
   14734:	str	r1, [r0, #24]
   14738:	str	r1, [r0, #8]
   1473c:	str	r3, [r0, #12]
   14740:	ldrb	r1, [r0, #28]
   14744:	and	r1, r1, #144	; 0x90
   14748:	strb	r1, [r0, #28]
   1474c:	ldr	r9, [r0]
   14750:	ldr	r0, [r0, #4]
   14754:	cmp	r0, #159	; 0x9f
   14758:	bls	15300 <__mempcpy_chk@plt+0x3d20>
   1475c:	ldr	r1, [sp, #28]
   14760:	mov	r0, #160	; 0xa0
   14764:	mov	r2, #160	; 0xa0
   14768:	str	r0, [r1, #8]
   1476c:	mov	r0, r9
   14770:	mov	r1, #0
   14774:	bl	114f0 <memset@plt>
   14778:	mov	r0, #31
   1477c:	str	r0, [r9, #64]	; 0x40
   14780:	movw	r0, #43689	; 0xaaa9
   14784:	movt	r0, #2730	; 0xaaa
   14788:	cmp	sl, r0
   1478c:	bhi	14904 <__mempcpy_chk@plt+0x3324>
   14790:	add	r0, sl, #1
   14794:	str	r0, [r9, #4]
   14798:	str	r0, [sp, #12]
   1479c:	lsl	r0, r0, #3
   147a0:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   147a4:	str	r0, [r9]
   147a8:	mov	r0, #1
   147ac:	mov	r4, r0
   147b0:	lsl	r0, r0, #1
   147b4:	cmp	r4, sl
   147b8:	bls	147ac <__mempcpy_chk@plt+0x31cc>
   147bc:	mov	r0, #12
   147c0:	mov	r1, r4
   147c4:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   147c8:	sub	r1, r4, #1
   147cc:	str	r1, [r9, #68]	; 0x44
   147d0:	str	r0, [r9, #32]
   147d4:	bl	11400 <__ctype_get_mb_cur_max@plt>
   147d8:	str	r0, [r9, #92]	; 0x5c
   147dc:	mov	r0, #14
   147e0:	bl	11574 <nl_langinfo@plt>
   147e4:	ldrb	r1, [r0]
   147e8:	orr	r1, r1, #32
   147ec:	cmp	r1, #117	; 0x75
   147f0:	bne	14840 <__mempcpy_chk@plt+0x3260>
   147f4:	ldrb	r1, [r0, #1]
   147f8:	orr	r1, r1, #32
   147fc:	cmp	r1, #116	; 0x74
   14800:	bne	14840 <__mempcpy_chk@plt+0x3260>
   14804:	ldrb	r1, [r0, #2]
   14808:	orr	r1, r1, #32
   1480c:	cmp	r1, #102	; 0x66
   14810:	bne	14840 <__mempcpy_chk@plt+0x3260>
   14814:	ldrb	r1, [r0, #3]!
   14818:	cmp	r1, #45	; 0x2d
   1481c:	movw	r1, #11452	; 0x2cbc
   14820:	movt	r1, #2
   14824:	addeq	r0, r0, #1
   14828:	bl	112ec <strcmp@plt>
   1482c:	cmp	r0, #0
   14830:	bne	14840 <__mempcpy_chk@plt+0x3260>
   14834:	ldrb	r0, [r9, #88]	; 0x58
   14838:	orr	r0, r0, #4
   1483c:	strb	r0, [r9, #88]	; 0x58
   14840:	ldrb	r0, [r9, #88]	; 0x58
   14844:	and	r1, r0, #247	; 0xf7
   14848:	strb	r1, [r9, #88]	; 0x58
   1484c:	ldr	r1, [r9, #92]	; 0x5c
   14850:	cmp	r1, #2
   14854:	blt	148f0 <__mempcpy_chk@plt+0x3310>
   14858:	tst	r0, #4
   1485c:	bne	148e4 <__mempcpy_chk@plt+0x3304>
   14860:	mov	r0, #32
   14864:	mov	r1, #1
   14868:	mov	r8, #1
   1486c:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   14870:	cmp	r0, #0
   14874:	str	r0, [r9, #60]	; 0x3c
   14878:	beq	14904 <__mempcpy_chk@plt+0x3324>
   1487c:	mov	r7, #0
   14880:	mov	r5, #0
   14884:	mov	r6, #0
   14888:	add	r4, r7, r6
   1488c:	mov	r0, r4
   14890:	bl	114fc <btowc@plt>
   14894:	cmn	r0, #1
   14898:	beq	148ac <__mempcpy_chk@plt+0x32cc>
   1489c:	ldr	r1, [r9, #60]	; 0x3c
   148a0:	ldr	r2, [r1, r5, lsl #2]
   148a4:	orr	r2, r2, r8, lsl r6
   148a8:	str	r2, [r1, r5, lsl #2]
   148ac:	cmp	r4, #127	; 0x7f
   148b0:	bhi	148c4 <__mempcpy_chk@plt+0x32e4>
   148b4:	cmp	r4, r0
   148b8:	ldrbne	r0, [r9, #88]	; 0x58
   148bc:	orrne	r0, r0, #8
   148c0:	strbne	r0, [r9, #88]	; 0x58
   148c4:	add	r6, r6, #1
   148c8:	cmp	r6, #32
   148cc:	bne	14888 <__mempcpy_chk@plt+0x32a8>
   148d0:	add	r5, r5, #1
   148d4:	add	r7, r7, r6
   148d8:	cmp	r5, #8
   148dc:	bne	14884 <__mempcpy_chk@plt+0x32a4>
   148e0:	b	148f0 <__mempcpy_chk@plt+0x3310>
   148e4:	movw	r0, #11404	; 0x2c8c
   148e8:	movt	r0, #2
   148ec:	str	r0, [r9, #60]	; 0x3c
   148f0:	ldr	r0, [r9]
   148f4:	cmp	r0, #0
   148f8:	ldrne	r0, [r9, #32]
   148fc:	cmpne	r0, #0
   14900:	bne	14928 <__mempcpy_chk@plt+0x3348>
   14904:	mov	r4, #12
   14908:	mov	r0, r9
   1490c:	str	r4, [fp, #-52]	; 0xffffffcc
   14910:	bl	15970 <__mempcpy_chk@plt+0x4390>
   14914:	ldr	r0, [sp, #28]
   14918:	mov	r1, #0
   1491c:	str	r1, [r0]
   14920:	str	r1, [r0, #4]
   14924:	b	15288 <__mempcpy_chk@plt+0x3ca8>
   14928:	movw	r0, #0
   1492c:	movw	r1, #0
   14930:	mov	r4, #0
   14934:	movt	r0, #0
   14938:	movt	r1, #0
   1493c:	str	r4, [fp, #-52]	; 0xffffffcc
   14940:	orrs	r0, r1, r0
   14944:	str	r0, [sp, #8]
   14948:	beq	14960 <__mempcpy_chk@plt+0x3380>
   1494c:	add	r0, r9, #136	; 0x88
   14950:	mov	r1, #0
   14954:	bl	11364 <pthread_mutex_init@plt>
   14958:	cmp	r0, #0
   1495c:	bne	14904 <__mempcpy_chk@plt+0x3324>
   14960:	ldr	r0, [sp, #28]
   14964:	add	r5, sp, #32
   14968:	mov	r1, #0
   1496c:	mov	r2, #76	; 0x4c
   14970:	ldr	r8, [r0, #20]
   14974:	add	r0, r5, #4
   14978:	bl	114f0 <memset@plt>
   1497c:	ldr	r1, [sp, #20]
   14980:	vdup.32	q8, sl
   14984:	add	r3, r5, #44	; 0x2c
   14988:	ubfx	r0, r1, #22, #1
   1498c:	strb	r0, [sp, #104]	; 0x68
   14990:	ldr	r0, [sp, #24]
   14994:	str	r8, [sp, #96]	; 0x60
   14998:	str	r0, [sp, #32]
   1499c:	and	r0, r1, #4194304	; 0x400000
   149a0:	orrs	r1, r0, r8
   149a4:	str	r0, [sp, #16]
   149a8:	movwne	r1, #1
   149ac:	cmp	sl, #1
   149b0:	strb	r1, [sp, #107]	; 0x6b
   149b4:	ldr	r0, [r9, #92]	; 0x5c
   149b8:	str	r0, [sp, #112]	; 0x70
   149bc:	ldrb	r2, [r9, #88]	; 0x58
   149c0:	vst1.32	{d16-d17}, [r3]
   149c4:	ubfx	r3, r2, #2, #1
   149c8:	strb	r3, [sp, #105]	; 0x69
   149cc:	ubfx	r2, r2, #3, #1
   149d0:	strb	r2, [sp, #106]	; 0x6a
   149d4:	blt	149f8 <__mempcpy_chk@plt+0x3418>
   149d8:	ldr	r1, [sp, #12]
   149dc:	add	r0, sp, #32
   149e0:	bl	17aa8 <__mempcpy_chk@plt+0x64c8>
   149e4:	cmp	r0, #0
   149e8:	bne	14a68 <__mempcpy_chk@plt+0x3488>
   149ec:	ldr	r0, [r9, #92]	; 0x5c
   149f0:	ldr	r4, [sp, #36]	; 0x24
   149f4:	ldrb	r1, [sp, #107]	; 0x6b
   149f8:	cmp	r1, #0
   149fc:	ldr	r1, [sp, #24]
   14a00:	moveq	r4, r1
   14a04:	ldr	r1, [sp, #16]
   14a08:	str	r4, [sp, #36]	; 0x24
   14a0c:	cmp	r1, #0
   14a10:	beq	14a70 <__mempcpy_chk@plt+0x3490>
   14a14:	cmp	r0, #2
   14a18:	blt	14a84 <__mempcpy_chk@plt+0x34a4>
   14a1c:	add	r4, sp, #32
   14a20:	mov	r0, r4
   14a24:	bl	17b48 <__mempcpy_chk@plt+0x6568>
   14a28:	cmp	r0, #0
   14a2c:	bne	14a68 <__mempcpy_chk@plt+0x3488>
   14a30:	ldr	r0, [sp, #64]	; 0x40
   14a34:	cmp	r0, sl
   14a38:	bge	14b14 <__mempcpy_chk@plt+0x3534>
   14a3c:	ldr	r1, [r9, #92]	; 0x5c
   14a40:	ldr	r2, [sp, #60]	; 0x3c
   14a44:	ldr	r0, [sp, #68]	; 0x44
   14a48:	add	r1, r1, r2
   14a4c:	cmp	r0, r1
   14a50:	bgt	14b14 <__mempcpy_chk@plt+0x3534>
   14a54:	lsl	r1, r0, #1
   14a58:	mov	r0, r4
   14a5c:	bl	17aa8 <__mempcpy_chk@plt+0x64c8>
   14a60:	cmp	r0, #0
   14a64:	beq	14a20 <__mempcpy_chk@plt+0x3440>
   14a68:	ldr	sl, [sp, #28]
   14a6c:	b	14c68 <__mempcpy_chk@plt+0x3688>
   14a70:	cmp	r0, #2
   14a74:	blt	14a90 <__mempcpy_chk@plt+0x34b0>
   14a78:	add	r0, sp, #32
   14a7c:	bl	18184 <__mempcpy_chk@plt+0x6ba4>
   14a80:	b	14b14 <__mempcpy_chk@plt+0x3534>
   14a84:	add	r0, sp, #32
   14a88:	bl	18118 <__mempcpy_chk@plt+0x6b38>
   14a8c:	b	14b14 <__mempcpy_chk@plt+0x3534>
   14a90:	ldr	r1, [sp, #68]	; 0x44
   14a94:	cmp	r8, #0
   14a98:	beq	14b0c <__mempcpy_chk@plt+0x352c>
   14a9c:	ldr	r2, [sp, #80]	; 0x50
   14aa0:	ldr	r0, [sp, #60]	; 0x3c
   14aa4:	cmp	r1, r2
   14aa8:	movgt	r1, r2
   14aac:	cmp	r0, r1
   14ab0:	bge	14b00 <__mempcpy_chk@plt+0x3520>
   14ab4:	ldr	r3, [sp, #56]	; 0x38
   14ab8:	ldr	r2, [sp, #32]
   14abc:	ldr	r7, [sp, #96]	; 0x60
   14ac0:	add	r3, r3, r0
   14ac4:	ldrb	r2, [r2, r3]
   14ac8:	ldrb	r2, [r7, r2]
   14acc:	strb	r2, [r4, r0]
   14ad0:	add	r0, r0, #1
   14ad4:	cmp	r0, r1
   14ad8:	bge	14b00 <__mempcpy_chk@plt+0x3520>
   14adc:	ldr	r2, [sp, #32]
   14ae0:	ldr	r7, [sp, #56]	; 0x38
   14ae4:	ldr	r6, [sp, #96]	; 0x60
   14ae8:	ldr	r3, [sp, #36]	; 0x24
   14aec:	add	r2, r2, r7
   14af0:	ldrb	r2, [r2, r0]
   14af4:	ldrb	r2, [r6, r2]
   14af8:	strb	r2, [r3, r0]
   14afc:	b	14ad0 <__mempcpy_chk@plt+0x34f0>
   14b00:	str	r0, [sp, #64]	; 0x40
   14b04:	str	r0, [sp, #60]	; 0x3c
   14b08:	b	14b14 <__mempcpy_chk@plt+0x3534>
   14b0c:	str	r1, [sp, #64]	; 0x40
   14b10:	str	r1, [sp, #60]	; 0x3c
   14b14:	ldr	sl, [sp, #28]
   14b18:	mov	r5, #0
   14b1c:	ldr	r6, [sp, #20]
   14b20:	sub	r8, fp, #48	; 0x30
   14b24:	add	r7, sp, #32
   14b28:	str	r5, [fp, #-52]	; 0xffffffcc
   14b2c:	mov	r0, r8
   14b30:	mov	r1, r7
   14b34:	str	r5, [sl, #24]
   14b38:	orr	r2, r6, #8388608	; 0x800000
   14b3c:	ldr	r4, [sl]
   14b40:	str	r6, [r4, #128]	; 0x80
   14b44:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   14b48:	ldr	r1, [sp, #72]	; 0x48
   14b4c:	mov	r2, r8
   14b50:	mov	r3, r6
   14b54:	str	r5, [sp]
   14b58:	add	r0, r1, r0
   14b5c:	mov	r1, sl
   14b60:	str	r0, [sp, #72]	; 0x48
   14b64:	sub	r0, fp, #52	; 0x34
   14b68:	str	r0, [sp, #4]
   14b6c:	mov	r0, r7
   14b70:	bl	183c4 <__mempcpy_chk@plt+0x6de4>
   14b74:	mov	r6, r0
   14b78:	cmp	r0, #0
   14b7c:	bne	14b8c <__mempcpy_chk@plt+0x35ac>
   14b80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b84:	cmp	r0, #0
   14b88:	bne	15334 <__mempcpy_chk@plt+0x3d54>
   14b8c:	mov	r0, #2
   14b90:	sub	r3, fp, #40	; 0x28
   14b94:	mov	r1, #0
   14b98:	mov	r2, #0
   14b9c:	str	r0, [fp, #-36]	; 0xffffffdc
   14ba0:	mov	r0, r4
   14ba4:	str	r5, [fp, #-40]	; 0xffffffd8
   14ba8:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   14bac:	mov	r7, r0
   14bb0:	cmp	r6, #0
   14bb4:	beq	14be0 <__mempcpy_chk@plt+0x3600>
   14bb8:	mov	r0, #16
   14bbc:	sub	r3, fp, #40	; 0x28
   14bc0:	mov	r1, r6
   14bc4:	mov	r2, r7
   14bc8:	str	r0, [fp, #-36]	; 0xffffffdc
   14bcc:	mov	r0, #0
   14bd0:	str	r0, [fp, #-40]	; 0xffffffd8
   14bd4:	mov	r0, r4
   14bd8:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   14bdc:	b	14be4 <__mempcpy_chk@plt+0x3604>
   14be0:	mov	r0, r7
   14be4:	cmp	r7, #0
   14be8:	cmpne	r0, #0
   14bec:	beq	1532c <__mempcpy_chk@plt+0x3d4c>
   14bf0:	str	r0, [r9, #52]	; 0x34
   14bf4:	ldr	r8, [sl]
   14bf8:	ldr	r0, [r8, #4]
   14bfc:	lsl	r0, r0, #2
   14c00:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   14c04:	str	r0, [r8, #12]
   14c08:	ldr	r0, [r8, #4]
   14c0c:	lsl	r0, r0, #2
   14c10:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   14c14:	str	r0, [r8, #16]
   14c18:	ldr	r0, [r8, #4]
   14c1c:	add	r0, r0, r0, lsl #1
   14c20:	lsl	r0, r0, #2
   14c24:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   14c28:	str	r0, [r8, #20]
   14c2c:	ldr	r0, [r8, #4]
   14c30:	add	r0, r0, r0, lsl #1
   14c34:	lsl	r0, r0, #2
   14c38:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   14c3c:	str	r0, [r8, #24]
   14c40:	ldr	r1, [r8, #12]
   14c44:	cmp	r1, #0
   14c48:	ldrne	r1, [r8, #16]
   14c4c:	cmpne	r1, #0
   14c50:	beq	14c64 <__mempcpy_chk@plt+0x3684>
   14c54:	cmp	r0, #0
   14c58:	ldrne	r0, [r8, #20]
   14c5c:	cmpne	r0, #0
   14c60:	bne	14cac <__mempcpy_chk@plt+0x36cc>
   14c64:	mov	r0, #12
   14c68:	str	r0, [fp, #-52]	; 0xffffffcc
   14c6c:	mov	r0, sl
   14c70:	bl	17a24 <__mempcpy_chk@plt+0x6444>
   14c74:	add	r0, sp, #32
   14c78:	bl	17a74 <__mempcpy_chk@plt+0x6494>
   14c7c:	ldr	r0, [sp, #8]
   14c80:	cmp	r0, #0
   14c84:	beq	14c90 <__mempcpy_chk@plt+0x36b0>
   14c88:	add	r0, r9, #136	; 0x88
   14c8c:	bl	11304 <pthread_mutex_destroy@plt>
   14c90:	mov	r0, r9
   14c94:	bl	15970 <__mempcpy_chk@plt+0x4390>
   14c98:	mov	r0, #0
   14c9c:	str	r0, [sl]
   14ca0:	str	r0, [sl, #4]
   14ca4:	ldr	r4, [fp, #-52]	; 0xffffffcc
   14ca8:	b	15288 <__mempcpy_chk@plt+0x3ca8>
   14cac:	ldr	r0, [sl, #24]
   14cb0:	lsl	r0, r0, #2
   14cb4:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   14cb8:	cmp	r0, #0
   14cbc:	str	r0, [r8, #132]	; 0x84
   14cc0:	beq	14d44 <__mempcpy_chk@plt+0x3764>
   14cc4:	ldr	r1, [sl, #24]
   14cc8:	cmp	r1, #0
   14ccc:	beq	14ce4 <__mempcpy_chk@plt+0x3704>
   14cd0:	mov	r2, #0
   14cd4:	str	r2, [r0, r2, lsl #2]
   14cd8:	add	r2, r2, #1
   14cdc:	cmp	r1, r2
   14ce0:	bne	14cd4 <__mempcpy_chk@plt+0x36f4>
   14ce4:	ldr	r0, [r8, #52]	; 0x34
   14ce8:	movw	r1, #46388	; 0xb534
   14cec:	mov	r2, r8
   14cf0:	movt	r1, #1
   14cf4:	bl	1b4b0 <__mempcpy_chk@plt+0x9ed0>
   14cf8:	ldr	r1, [sl, #24]
   14cfc:	cmp	r1, #0
   14d00:	beq	14d28 <__mempcpy_chk@plt+0x3748>
   14d04:	ldr	r0, [r8, #132]	; 0x84
   14d08:	mov	r2, #0
   14d0c:	ldr	r3, [r0, r2, lsl #2]
   14d10:	cmp	r2, r3
   14d14:	bne	14d30 <__mempcpy_chk@plt+0x3750>
   14d18:	add	r2, r2, #1
   14d1c:	cmp	r1, r2
   14d20:	bne	14d0c <__mempcpy_chk@plt+0x372c>
   14d24:	b	14d38 <__mempcpy_chk@plt+0x3758>
   14d28:	ldr	r0, [r8, #132]	; 0x84
   14d2c:	b	14d38 <__mempcpy_chk@plt+0x3758>
   14d30:	cmp	r1, r2
   14d34:	bne	14d44 <__mempcpy_chk@plt+0x3764>
   14d38:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   14d3c:	mov	r0, #0
   14d40:	str	r0, [r8, #132]	; 0x84
   14d44:	ldr	r0, [r8, #52]	; 0x34
   14d48:	movw	r1, #46540	; 0xb5cc
   14d4c:	mov	r2, sl
   14d50:	movt	r1, #1
   14d54:	bl	18e20 <__mempcpy_chk@plt+0x7840>
   14d58:	cmp	r0, #0
   14d5c:	bne	14c68 <__mempcpy_chk@plt+0x3688>
   14d60:	ldr	r0, [r8, #52]	; 0x34
   14d64:	movw	r1, #46676	; 0xb654
   14d68:	mov	r2, r8
   14d6c:	movt	r1, #1
   14d70:	bl	18e20 <__mempcpy_chk@plt+0x7840>
   14d74:	cmp	r0, #0
   14d78:	bne	14c68 <__mempcpy_chk@plt+0x3688>
   14d7c:	ldr	r0, [r8, #52]	; 0x34
   14d80:	movw	r1, #46820	; 0xb6e4
   14d84:	mov	r2, r8
   14d88:	movt	r1, #1
   14d8c:	bl	1b4b0 <__mempcpy_chk@plt+0x9ed0>
   14d90:	ldr	r0, [r8, #52]	; 0x34
   14d94:	movw	r1, #46916	; 0xb744
   14d98:	mov	r2, r8
   14d9c:	movt	r1, #1
   14da0:	bl	1b4b0 <__mempcpy_chk@plt+0x9ed0>
   14da4:	cmp	r0, #0
   14da8:	bne	14c68 <__mempcpy_chk@plt+0x3688>
   14dac:	mov	r5, #0
   14db0:	sub	r7, fp, #40	; 0x28
   14db4:	mov	r4, #0
   14db8:	ldr	r0, [r8, #24]
   14dbc:	add	r6, r4, r4, lsl #1
   14dc0:	add	r0, r0, r6, lsl #2
   14dc4:	ldr	r0, [r0, #4]
   14dc8:	cmp	r0, #0
   14dcc:	beq	14dd8 <__mempcpy_chk@plt+0x37f8>
   14dd0:	mov	r1, r5
   14dd4:	b	14e18 <__mempcpy_chk@plt+0x3838>
   14dd8:	mov	r0, r7
   14ddc:	mov	r1, r8
   14de0:	mov	r2, r4
   14de4:	mov	r3, #1
   14de8:	bl	1bbf4 <__mempcpy_chk@plt+0xa614>
   14dec:	cmp	r0, #0
   14df0:	bne	14c68 <__mempcpy_chk@plt+0x3688>
   14df4:	ldr	r0, [r8, #24]
   14df8:	mov	r1, r5
   14dfc:	add	r0, r0, r6, lsl #2
   14e00:	ldr	r0, [r0, #4]
   14e04:	cmp	r0, #0
   14e08:	bne	14e18 <__mempcpy_chk@plt+0x3838>
   14e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e10:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   14e14:	mov	r1, #1
   14e18:	ldr	r2, [r8, #8]
   14e1c:	add	r0, r4, #1
   14e20:	subs	r3, r0, r2
   14e24:	mov	r4, r3
   14e28:	movwne	r3, #1
   14e2c:	movne	r4, r0
   14e30:	tst	r1, #1
   14e34:	and	r5, r1, r3
   14e38:	cmpeq	r0, r2
   14e3c:	bne	14db8 <__mempcpy_chk@plt+0x37d8>
   14e40:	ldrb	r1, [sl, #28]
   14e44:	tst	r1, #16
   14e48:	bne	14e64 <__mempcpy_chk@plt+0x3884>
   14e4c:	ldr	r1, [sl, #24]
   14e50:	cmp	r1, #0
   14e54:	beq	14e64 <__mempcpy_chk@plt+0x3884>
   14e58:	ldrb	r1, [r8, #88]	; 0x58
   14e5c:	tst	r1, #1
   14e60:	bne	14e70 <__mempcpy_chk@plt+0x3890>
   14e64:	ldr	r1, [r8, #76]	; 0x4c
   14e68:	cmp	r1, #0
   14e6c:	beq	14f50 <__mempcpy_chk@plt+0x3970>
   14e70:	add	r0, r0, r0, lsl #1
   14e74:	lsl	r0, r0, #2
   14e78:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   14e7c:	cmp	r0, #0
   14e80:	str	r0, [r8, #28]
   14e84:	beq	14c64 <__mempcpy_chk@plt+0x3684>
   14e88:	ldr	r1, [r8, #8]
   14e8c:	cmp	r1, #0
   14e90:	beq	14f50 <__mempcpy_chk@plt+0x3970>
   14e94:	mov	r1, #0
   14e98:	str	r1, [r0]
   14e9c:	str	r1, [r0, #4]
   14ea0:	str	r1, [r0, #8]
   14ea4:	ldr	r0, [r8, #8]
   14ea8:	cmp	r0, #2
   14eac:	bcc	14edc <__mempcpy_chk@plt+0x38fc>
   14eb0:	mov	r2, #1
   14eb4:	mov	r3, #12
   14eb8:	ldr	r0, [r8, #28]
   14ebc:	add	r2, r2, #1
   14ec0:	str	r1, [r0, r3]!
   14ec4:	add	r3, r3, #12
   14ec8:	str	r1, [r0, #4]
   14ecc:	str	r1, [r0, #8]
   14ed0:	ldr	r0, [r8, #8]
   14ed4:	cmp	r2, r0
   14ed8:	bcc	14eb8 <__mempcpy_chk@plt+0x38d8>
   14edc:	cmp	r0, #0
   14ee0:	beq	14f50 <__mempcpy_chk@plt+0x3970>
   14ee4:	ldr	r1, [r8, #24]
   14ee8:	mov	r4, #0
   14eec:	add	r5, r4, r4, lsl #1
   14ef0:	add	r2, r1, r5, lsl #2
   14ef4:	ldr	r3, [r2, #4]
   14ef8:	cmp	r3, #1
   14efc:	blt	14f44 <__mempcpy_chk@plt+0x3964>
   14f00:	ldr	r7, [r2, #8]
   14f04:	mov	r6, #0
   14f08:	ldr	r0, [r7, r6, lsl #2]
   14f0c:	ldr	r1, [r8, #28]
   14f10:	add	r0, r0, r0, lsl #1
   14f14:	add	r0, r1, r0, lsl #2
   14f18:	mov	r1, r4
   14f1c:	bl	1c40c <__mempcpy_chk@plt+0xae2c>
   14f20:	cmp	r0, #0
   14f24:	beq	14c64 <__mempcpy_chk@plt+0x3684>
   14f28:	ldr	r1, [r8, #24]
   14f2c:	add	r6, r6, #1
   14f30:	add	r0, r1, r5, lsl #2
   14f34:	ldr	r0, [r0, #4]
   14f38:	cmp	r6, r0
   14f3c:	blt	14f08 <__mempcpy_chk@plt+0x3928>
   14f40:	ldr	r0, [r8, #8]
   14f44:	add	r4, r4, #1
   14f48:	cmp	r4, r0
   14f4c:	bcc	14eec <__mempcpy_chk@plt+0x390c>
   14f50:	mov	r0, #0
   14f54:	str	r0, [fp, #-52]	; 0xffffffcc
   14f58:	ldr	r0, [sp, #16]
   14f5c:	cmp	r0, #0
   14f60:	bne	15098 <__mempcpy_chk@plt+0x3ab8>
   14f64:	ldrb	r2, [r9, #88]	; 0x58
   14f68:	ands	r0, r2, #4
   14f6c:	beq	15098 <__mempcpy_chk@plt+0x3ab8>
   14f70:	ldr	r0, [sp, #28]
   14f74:	ldr	r0, [r0, #20]
   14f78:	cmp	r0, #0
   14f7c:	bne	15098 <__mempcpy_chk@plt+0x3ab8>
   14f80:	ldr	r7, [r9, #8]
   14f84:	mov	sl, #0
   14f88:	cmp	r7, #0
   14f8c:	beq	1506c <__mempcpy_chk@plt+0x3a8c>
   14f90:	ldr	r3, [r9]
   14f94:	mov	r8, #0
   14f98:	mov	ip, #1
   14f9c:	mov	lr, #139	; 0x8b
   14fa0:	mov	r6, #0
   14fa4:	mov	r4, #0
   14fa8:	add	r1, r3, r4, lsl #3
   14fac:	ldrb	r5, [r1, #4]
   14fb0:	sub	r5, r5, #1
   14fb4:	cmp	r5, #11
   14fb8:	bhi	15350 <__mempcpy_chk@plt+0x3d70>
   14fbc:	add	r0, pc, #0
   14fc0:	ldr	pc, [r0, r5, lsl #2]
   14fc4:	andeq	r5, r1, ip, asr #32
   14fc8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14fcc:	andeq	r5, r1, r4
   14fd0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14fd4:	andeq	r5, r1, r4, rrx
   14fd8:	muleq	r1, r8, r0
   14fdc:	andeq	r5, r1, r0, asr r3
   14fe0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14fe4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14fe8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14fec:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ff0:	andeq	r5, r1, ip, lsr #32
   14ff4:	add	r4, r4, #1
   14ff8:	cmp	r4, r7
   14ffc:	bne	14fa8 <__mempcpy_chk@plt+0x39c8>
   15000:	b	15294 <__mempcpy_chk@plt+0x3cb4>
   15004:	ldr	r0, [r3, r4, lsl #3]
   15008:	mov	r1, #0
   1500c:	add	r5, r0, #16
   15010:	ldr	r0, [r5, r1, lsl #2]
   15014:	cmp	r0, #0
   15018:	bne	15098 <__mempcpy_chk@plt+0x3ab8>
   1501c:	add	r1, r1, #1
   15020:	cmp	r1, #4
   15024:	bne	15010 <__mempcpy_chk@plt+0x3a30>
   15028:	b	14ff4 <__mempcpy_chk@plt+0x3a14>
   1502c:	ldr	r0, [r3, r4, lsl #3]
   15030:	sub	r0, r0, #16
   15034:	ror	r1, r0, #4
   15038:	cmp	r1, #7
   1503c:	bhi	15098 <__mempcpy_chk@plt+0x3ab8>
   15040:	tst	lr, ip, lsl r1
   15044:	bne	14ff4 <__mempcpy_chk@plt+0x3a14>
   15048:	b	15098 <__mempcpy_chk@plt+0x3ab8>
   1504c:	ldrsb	r0, [r1]
   15050:	cmp	r0, #0
   15054:	mov	r0, #0
   15058:	movwmi	r0, #1
   1505c:	orr	r6, r6, r0
   15060:	b	14ff4 <__mempcpy_chk@plt+0x3a14>
   15064:	mov	r8, #1
   15068:	b	14ff4 <__mempcpy_chk@plt+0x3a14>
   1506c:	mov	r8, #0
   15070:	mov	r0, #1
   15074:	and	r1, r2, #249	; 0xf9
   15078:	str	r0, [r9, #92]	; 0x5c
   1507c:	ldr	r0, [r9, #76]	; 0x4c
   15080:	cmp	r0, #0
   15084:	movwgt	sl, #1
   15088:	orr	r0, r8, sl
   1508c:	and	r0, r0, #1
   15090:	orr	r0, r1, r0, lsl #1
   15094:	strb	r0, [r9, #88]	; 0x58
   15098:	ldr	r1, [r9, #52]	; 0x34
   1509c:	ldr	r0, [r9, #24]
   150a0:	ldr	r1, [r1, #12]
   150a4:	ldr	r1, [r1, #28]
   150a8:	str	r1, [r9, #72]	; 0x48
   150ac:	add	r1, r1, r1, lsl #1
   150b0:	add	r1, r0, r1, lsl #2
   150b4:	sub	r0, fp, #40	; 0x28
   150b8:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   150bc:	cmp	r0, #0
   150c0:	str	r0, [fp, #-48]	; 0xffffffd0
   150c4:	bne	15348 <__mempcpy_chk@plt+0x3d68>
   150c8:	ldr	r0, [r9, #76]	; 0x4c
   150cc:	ldr	sl, [sp, #28]
   150d0:	cmp	r0, #1
   150d4:	blt	151a8 <__mempcpy_chk@plt+0x3bc8>
   150d8:	ldr	r7, [fp, #-36]	; 0xffffffdc
   150dc:	cmp	r7, #1
   150e0:	blt	151a8 <__mempcpy_chk@plt+0x3bc8>
   150e4:	mov	r6, #0
   150e8:	sub	r8, fp, #40	; 0x28
   150ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   150f0:	ldr	r2, [r9]
   150f4:	ldr	r0, [r1, r6, lsl #2]
   150f8:	add	r3, r2, r0, lsl #3
   150fc:	ldrb	r3, [r3, #4]
   15100:	cmp	r3, #4
   15104:	bne	1519c <__mempcpy_chk@plt+0x3bbc>
   15108:	mov	r3, #0
   1510c:	cmp	r7, #1
   15110:	blt	15148 <__mempcpy_chk@plt+0x3b68>
   15114:	ldr	r5, [r1, r3, lsl #2]
   15118:	add	r4, r2, r5, lsl #3
   1511c:	ldrb	r4, [r4, #4]
   15120:	cmp	r4, #9
   15124:	bne	15138 <__mempcpy_chk@plt+0x3b58>
   15128:	ldr	r4, [r2, r0, lsl #3]
   1512c:	ldr	r5, [r2, r5, lsl #3]
   15130:	cmp	r5, r4
   15134:	beq	15148 <__mempcpy_chk@plt+0x3b68>
   15138:	add	r3, r3, #1
   1513c:	cmp	r7, r3
   15140:	bne	15114 <__mempcpy_chk@plt+0x3b34>
   15144:	b	1519c <__mempcpy_chk@plt+0x3bbc>
   15148:	cmp	r3, r7
   1514c:	beq	1519c <__mempcpy_chk@plt+0x3bbc>
   15150:	ldr	r1, [r9, #20]
   15154:	add	r0, r0, r0, lsl #1
   15158:	add	r0, r1, r0, lsl #2
   1515c:	ldr	r0, [r0, #8]
   15160:	ldr	r4, [r0]
   15164:	mov	r0, r8
   15168:	mov	r1, r4
   1516c:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   15170:	cmp	r0, #0
   15174:	bne	1519c <__mempcpy_chk@plt+0x3bbc>
   15178:	ldr	r0, [r9, #24]
   1517c:	add	r1, r4, r4, lsl #1
   15180:	add	r1, r0, r1, lsl #2
   15184:	mov	r0, r8
   15188:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1518c:	cmp	r0, #0
   15190:	bne	15264 <__mempcpy_chk@plt+0x3c84>
   15194:	ldr	r7, [fp, #-36]	; 0xffffffdc
   15198:	mov	r6, #0
   1519c:	add	r6, r6, #1
   151a0:	cmp	r6, r7
   151a4:	blt	150ec <__mempcpy_chk@plt+0x3b0c>
   151a8:	sub	r0, fp, #48	; 0x30
   151ac:	sub	r2, fp, #40	; 0x28
   151b0:	mov	r1, r9
   151b4:	mov	r3, #0
   151b8:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   151bc:	cmp	r0, #0
   151c0:	str	r0, [r9, #36]	; 0x24
   151c4:	beq	15244 <__mempcpy_chk@plt+0x3c64>
   151c8:	ldrsb	r1, [r0, #52]	; 0x34
   151cc:	cmn	r1, #1
   151d0:	ble	151e4 <__mempcpy_chk@plt+0x3c04>
   151d4:	str	r0, [r9, #40]	; 0x28
   151d8:	str	r0, [r9, #44]	; 0x2c
   151dc:	str	r0, [r9, #48]	; 0x30
   151e0:	b	15258 <__mempcpy_chk@plt+0x3c78>
   151e4:	sub	r4, fp, #48	; 0x30
   151e8:	sub	r6, fp, #40	; 0x28
   151ec:	mov	r1, r9
   151f0:	mov	r3, #1
   151f4:	mov	r0, r4
   151f8:	mov	r2, r6
   151fc:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   15200:	str	r0, [r9, #40]	; 0x28
   15204:	mov	r0, r4
   15208:	mov	r1, r9
   1520c:	mov	r2, r6
   15210:	mov	r3, #2
   15214:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   15218:	str	r0, [r9, #44]	; 0x2c
   1521c:	mov	r0, r4
   15220:	mov	r1, r9
   15224:	mov	r2, r6
   15228:	mov	r3, #6
   1522c:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   15230:	str	r0, [r9, #48]	; 0x30
   15234:	ldr	r1, [r9, #40]	; 0x28
   15238:	cmp	r1, #0
   1523c:	cmpne	r0, #0
   15240:	bne	1524c <__mempcpy_chk@plt+0x3c6c>
   15244:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15248:	b	15264 <__mempcpy_chk@plt+0x3c84>
   1524c:	ldr	r0, [r9, #44]	; 0x2c
   15250:	cmp	r0, #0
   15254:	beq	15244 <__mempcpy_chk@plt+0x3c64>
   15258:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1525c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15260:	mov	r0, #0
   15264:	str	r0, [fp, #-52]	; 0xffffffcc
   15268:	mov	r0, sl
   1526c:	bl	17a24 <__mempcpy_chk@plt+0x6444>
   15270:	add	r0, sp, #32
   15274:	bl	17a74 <__mempcpy_chk@plt+0x6494>
   15278:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1527c:	mov	r4, #0
   15280:	cmp	r0, #0
   15284:	bne	14c7c <__mempcpy_chk@plt+0x369c>
   15288:	mov	r0, r4
   1528c:	sub	sp, fp, #28
   15290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15294:	orr	r0, r6, r8
   15298:	tst	r0, #1
   1529c:	beq	15070 <__mempcpy_chk@plt+0x3a90>
   152a0:	mov	r2, #0
   152a4:	mov	r7, #7
   152a8:	add	r3, r3, r2, lsl #3
   152ac:	ldr	r6, [r3, #4]
   152b0:	uxtb	r1, r6
   152b4:	cmp	r1, #5
   152b8:	beq	152d8 <__mempcpy_chk@plt+0x3cf8>
   152bc:	cmp	r1, #1
   152c0:	bne	152e0 <__mempcpy_chk@plt+0x3d00>
   152c4:	ldrsb	r0, [r3]
   152c8:	cmn	r0, #1
   152cc:	bicle	r0, r6, #2097152	; 0x200000
   152d0:	strle	r0, [r3, #4]
   152d4:	b	152e0 <__mempcpy_chk@plt+0x3d00>
   152d8:	bfi	r6, r7, #0, #8
   152dc:	str	r6, [r3, #4]
   152e0:	ldr	r0, [r9, #8]
   152e4:	add	r2, r2, #1
   152e8:	cmp	r2, r0
   152ec:	bcs	152f8 <__mempcpy_chk@plt+0x3d18>
   152f0:	ldr	r3, [r9]
   152f4:	b	152a8 <__mempcpy_chk@plt+0x3cc8>
   152f8:	ldrb	r2, [r9, #88]	; 0x58
   152fc:	b	15070 <__mempcpy_chk@plt+0x3a90>
   15300:	mov	r0, r9
   15304:	mov	r1, #160	; 0xa0
   15308:	mov	r4, #160	; 0xa0
   1530c:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   15310:	cmp	r0, #0
   15314:	beq	15340 <__mempcpy_chk@plt+0x3d60>
   15318:	mov	r9, r0
   1531c:	ldr	r0, [sp, #28]
   15320:	str	r9, [r0]
   15324:	str	r4, [r0, #4]
   15328:	b	1475c <__mempcpy_chk@plt+0x317c>
   1532c:	mov	r0, #12
   15330:	str	r0, [fp, #-52]	; 0xffffffcc
   15334:	mov	r0, #0
   15338:	str	r0, [r9, #52]	; 0x34
   1533c:	b	14c6c <__mempcpy_chk@plt+0x368c>
   15340:	mov	r4, #12
   15344:	b	15288 <__mempcpy_chk@plt+0x3ca8>
   15348:	ldr	sl, [sp, #28]
   1534c:	b	15264 <__mempcpy_chk@plt+0x3c84>
   15350:	bl	115c8 <abort@plt>
   15354:	movw	r2, #25660	; 0x643c
   15358:	movt	r2, #3
   1535c:	ldr	r1, [r2]
   15360:	str	r0, [r2]
   15364:	mov	r0, r1
   15368:	bx	lr
   1536c:	push	{r4, r5, r6, sl, fp, lr}
   15370:	add	fp, sp, #16
   15374:	ldr	r5, [r0, #16]
   15378:	ldr	r6, [r0]
   1537c:	mov	r4, r0
   15380:	mov	r1, #0
   15384:	mov	r2, #256	; 0x100
   15388:	mov	r0, r5
   1538c:	bl	114f0 <memset@plt>
   15390:	ldr	r1, [r6, #36]	; 0x24
   15394:	mov	r0, r4
   15398:	mov	r2, r5
   1539c:	bl	15404 <__mempcpy_chk@plt+0x3e24>
   153a0:	ldr	r0, [r6, #36]	; 0x24
   153a4:	ldr	r1, [r6, #40]	; 0x28
   153a8:	cmp	r0, r1
   153ac:	beq	153c0 <__mempcpy_chk@plt+0x3de0>
   153b0:	mov	r0, r4
   153b4:	mov	r2, r5
   153b8:	bl	15404 <__mempcpy_chk@plt+0x3e24>
   153bc:	ldr	r0, [r6, #36]	; 0x24
   153c0:	ldr	r1, [r6, #44]	; 0x2c
   153c4:	cmp	r0, r1
   153c8:	beq	153dc <__mempcpy_chk@plt+0x3dfc>
   153cc:	mov	r0, r4
   153d0:	mov	r2, r5
   153d4:	bl	15404 <__mempcpy_chk@plt+0x3e24>
   153d8:	ldr	r0, [r6, #36]	; 0x24
   153dc:	ldr	r1, [r6, #48]	; 0x30
   153e0:	cmp	r0, r1
   153e4:	movne	r0, r4
   153e8:	movne	r2, r5
   153ec:	blne	15404 <__mempcpy_chk@plt+0x3e24>
   153f0:	ldrb	r0, [r4, #28]
   153f4:	orr	r0, r0, #8
   153f8:	strb	r0, [r4, #28]
   153fc:	mov	r0, #0
   15400:	pop	{r4, r5, r6, sl, fp, pc}
   15404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15408:	add	fp, sp, #28
   1540c:	sub	sp, sp, #308	; 0x134
   15410:	ldr	r8, [r0]
   15414:	str	r0, [sp, #20]
   15418:	mov	r5, r2
   1541c:	mov	r9, #0
   15420:	ldr	r0, [r8, #92]	; 0x5c
   15424:	cmp	r0, #1
   15428:	bne	15438 <__mempcpy_chk@plt+0x3e58>
   1542c:	ldr	r0, [sp, #20]
   15430:	ldrb	r0, [r0, #14]
   15434:	ubfx	r9, r0, #6, #1
   15438:	ldr	r0, [r1, #8]
   1543c:	cmp	r0, #1
   15440:	blt	1577c <__mempcpy_chk@plt+0x419c>
   15444:	add	r0, sp, #32
   15448:	mov	r7, #1
   1544c:	mov	r2, #0
   15450:	str	r1, [sp, #12]
   15454:	str	r8, [sp, #24]
   15458:	add	r0, r0, #1
   1545c:	str	r0, [sp, #4]
   15460:	movw	r0, #1
   15464:	movt	r0, #32
   15468:	add	r0, r0, #254	; 0xfe
   1546c:	str	r0, [sp, #8]
   15470:	ldr	r0, [r1, #12]
   15474:	str	r2, [sp, #16]
   15478:	ldr	sl, [r0, r2, lsl #2]
   1547c:	ldr	r0, [r8]
   15480:	add	r1, r0, sl, lsl #3
   15484:	ldrb	r4, [r1, #4]
   15488:	sub	r1, r4, #1
   1548c:	cmp	r1, #6
   15490:	bhi	15738 <__mempcpy_chk@plt+0x4158>
   15494:	add	r2, pc, #0
   15498:	ldr	pc, [r2, r1, lsl #2]
   1549c:			; <UNDEFINED> instruction: 0x000154b8
   154a0:	andeq	r5, r1, r4, asr r7
   154a4:	andeq	r5, r1, ip, lsr #11
   154a8:	andeq	r5, r1, r8, lsr r7
   154ac:	andeq	r5, r1, r4, asr r7
   154b0:	andeq	r5, r1, r4, lsl r6
   154b4:	andeq	r5, r1, r4, asr r7
   154b8:	ldrb	r0, [r0, sl, lsl #3]
   154bc:	cmp	r9, #0
   154c0:	strb	r7, [r5, r0]
   154c4:	beq	154d0 <__mempcpy_chk@plt+0x3ef0>
   154c8:	bl	11358 <tolower@plt>
   154cc:	strb	r7, [r5, r0]
   154d0:	ldr	r0, [sp, #20]
   154d4:	ldrb	r0, [r0, #14]
   154d8:	tst	r0, #64	; 0x40
   154dc:	beq	15738 <__mempcpy_chk@plt+0x4158>
   154e0:	ldr	r0, [r8, #92]	; 0x5c
   154e4:	cmp	r0, #2
   154e8:	blt	15738 <__mempcpy_chk@plt+0x4158>
   154ec:	ldr	r0, [r8]
   154f0:	add	r1, sl, #1
   154f4:	movw	r4, #1
   154f8:	add	r6, sp, #32
   154fc:	movt	r4, #32
   15500:	ldrb	r0, [r0, sl, lsl #3]
   15504:	strb	r0, [sp, #32]
   15508:	ldr	r0, [r8, #8]
   1550c:	cmp	r1, r0
   15510:	ldr	r0, [sp, #4]
   15514:	bcs	15558 <__mempcpy_chk@plt+0x3f78>
   15518:	ldr	r0, [sp, #4]
   1551c:	ldr	r1, [r8]
   15520:	ldr	r3, [sp, #8]
   15524:	add	r1, r1, sl, lsl #3
   15528:	ldr	r2, [r1, #12]
   1552c:	and	r2, r2, r3
   15530:	cmp	r2, r4
   15534:	bne	15558 <__mempcpy_chk@plt+0x3f78>
   15538:	ldrb	r1, [r1, #8]
   1553c:	add	r3, sl, #2
   15540:	strb	r1, [r0], #1
   15544:	add	r1, sl, #1
   15548:	ldr	r2, [r8, #8]
   1554c:	mov	sl, r1
   15550:	cmp	r3, r2
   15554:	bcc	1551c <__mempcpy_chk@plt+0x3f3c>
   15558:	mov	r1, #0
   1555c:	sub	r4, r0, r6
   15560:	sub	r0, fp, #36	; 0x24
   15564:	sub	r3, fp, #48	; 0x30
   15568:	str	r1, [fp, #-44]	; 0xffffffd4
   1556c:	str	r1, [fp, #-48]	; 0xffffffd0
   15570:	mov	r1, r6
   15574:	mov	r2, r4
   15578:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   1557c:	cmp	r0, r4
   15580:	bne	15738 <__mempcpy_chk@plt+0x4158>
   15584:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15588:	bl	11370 <towlower@plt>
   1558c:	mov	r1, r0
   15590:	mov	r0, r6
   15594:	sub	r2, fp, #48	; 0x30
   15598:	bl	112d4 <wcrtomb@plt>
   1559c:	cmn	r0, #1
   155a0:	ldrbne	r0, [sp, #32]
   155a4:	strbne	r7, [r5, r0]
   155a8:	b	15738 <__mempcpy_chk@plt+0x4158>
   155ac:	mov	r4, #0
   155b0:	mov	r6, #0
   155b4:	str	sl, [sp, #28]
   155b8:	ldr	r0, [r0, sl, lsl #3]
   155bc:	mov	sl, #0
   155c0:	ldr	r8, [r0, r6, lsl #2]
   155c4:	tst	r8, r7, lsl sl
   155c8:	strbne	r7, [r5, r4]
   155cc:	cmpne	r9, #0
   155d0:	bne	155e8 <__mempcpy_chk@plt+0x4008>
   155d4:	add	sl, sl, #1
   155d8:	add	r4, r4, #1
   155dc:	cmp	sl, #32
   155e0:	bne	155c4 <__mempcpy_chk@plt+0x3fe4>
   155e4:	b	155f8 <__mempcpy_chk@plt+0x4018>
   155e8:	mov	r0, r4
   155ec:	bl	11358 <tolower@plt>
   155f0:	strb	r7, [r5, r0]
   155f4:	b	155d4 <__mempcpy_chk@plt+0x3ff4>
   155f8:	ldr	r8, [sp, #24]
   155fc:	ldr	sl, [sp, #28]
   15600:	add	r6, r6, #1
   15604:	cmp	r6, #8
   15608:	beq	15738 <__mempcpy_chk@plt+0x4158>
   1560c:	ldr	r0, [r8]
   15610:	b	155b8 <__mempcpy_chk@plt+0x3fd8>
   15614:	ldr	r4, [r0, sl, lsl #3]
   15618:	ldr	r0, [r8, #92]	; 0x5c
   1561c:	cmp	r0, #2
   15620:	blt	15694 <__mempcpy_chk@plt+0x40b4>
   15624:	ldr	r0, [r4, #36]	; 0x24
   15628:	cmp	r0, #0
   1562c:	bne	15648 <__mempcpy_chk@plt+0x4068>
   15630:	ldrb	r0, [r4, #16]
   15634:	tst	r0, #1
   15638:	bne	15648 <__mempcpy_chk@plt+0x4068>
   1563c:	ldr	r0, [r4, #32]
   15640:	cmp	r0, #0
   15644:	beq	15694 <__mempcpy_chk@plt+0x40b4>
   15648:	mov	r6, #0
   1564c:	add	r4, sp, #32
   15650:	strb	r6, [fp, #-48]	; 0xffffffd0
   15654:	mov	r0, #0
   15658:	sub	r1, fp, #48	; 0x30
   1565c:	mov	r2, #1
   15660:	mov	r3, r4
   15664:	str	r6, [sp, #36]	; 0x24
   15668:	str	r6, [sp, #32]
   1566c:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   15670:	ldrb	r1, [fp, #-48]	; 0xffffffd0
   15674:	cmn	r0, #2
   15678:	add	r0, r1, #1
   1567c:	strbeq	r7, [r5, r1]
   15680:	uxtb	r1, r0
   15684:	strb	r0, [fp, #-48]	; 0xffffffd0
   15688:	cmp	r1, r0
   1568c:	beq	15654 <__mempcpy_chk@plt+0x4074>
   15690:	b	15738 <__mempcpy_chk@plt+0x4158>
   15694:	ldr	r0, [r4, #20]
   15698:	cmp	r0, #1
   1569c:	blt	15738 <__mempcpy_chk@plt+0x4158>
   156a0:	mov	r6, #0
   156a4:	mov	r0, #0
   156a8:	sub	r2, fp, #48	; 0x30
   156ac:	str	r0, [fp, #-44]	; 0xffffffd4
   156b0:	str	r0, [fp, #-48]	; 0xffffffd0
   156b4:	ldr	r0, [r4]
   156b8:	ldr	r1, [r0, r6, lsl #2]
   156bc:	add	r0, sp, #32
   156c0:	bl	112d4 <wcrtomb@plt>
   156c4:	cmn	r0, #1
   156c8:	beq	156e4 <__mempcpy_chk@plt+0x4104>
   156cc:	ldrb	r0, [sp, #32]
   156d0:	cmp	r9, #0
   156d4:	strb	r7, [r5, r0]
   156d8:	beq	156e4 <__mempcpy_chk@plt+0x4104>
   156dc:	bl	11358 <tolower@plt>
   156e0:	strb	r7, [r5, r0]
   156e4:	ldr	r0, [sp, #20]
   156e8:	ldrb	r0, [r0, #14]
   156ec:	tst	r0, #64	; 0x40
   156f0:	beq	15728 <__mempcpy_chk@plt+0x4148>
   156f4:	ldr	r0, [r8, #92]	; 0x5c
   156f8:	cmp	r0, #2
   156fc:	blt	15728 <__mempcpy_chk@plt+0x4148>
   15700:	ldr	r0, [r4]
   15704:	ldr	r0, [r0, r6, lsl #2]
   15708:	bl	11370 <towlower@plt>
   1570c:	mov	r1, r0
   15710:	add	r0, sp, #32
   15714:	sub	r2, fp, #48	; 0x30
   15718:	bl	112d4 <wcrtomb@plt>
   1571c:	cmn	r0, #1
   15720:	ldrbne	r0, [sp, #32]
   15724:	strbne	r7, [r5, r0]
   15728:	ldr	r0, [r4, #20]
   1572c:	add	r6, r6, #1
   15730:	cmp	r6, r0
   15734:	blt	156a4 <__mempcpy_chk@plt+0x40c4>
   15738:	ldr	r1, [sp, #12]
   1573c:	ldr	r2, [sp, #16]
   15740:	ldr	r0, [r1, #8]
   15744:	add	r2, r2, #1
   15748:	cmp	r2, r0
   1574c:	blt	15470 <__mempcpy_chk@plt+0x3e90>
   15750:	b	1577c <__mempcpy_chk@plt+0x419c>
   15754:	mov	r0, r5
   15758:	mov	r1, #1
   1575c:	mov	r2, #256	; 0x100
   15760:	bl	114f0 <memset@plt>
   15764:	cmp	r4, #2
   15768:	bne	1577c <__mempcpy_chk@plt+0x419c>
   1576c:	ldr	r1, [sp, #20]
   15770:	ldrb	r0, [r1, #28]
   15774:	orr	r0, r0, #1
   15778:	strb	r0, [r1, #28]
   1577c:	sub	sp, fp, #28
   15780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15784:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15788:	add	fp, sp, #24
   1578c:	mov	r4, r0
   15790:	mov	r0, #0
   15794:	mov	r6, r2
   15798:	mov	r8, r1
   1579c:	str	r0, [r4]
   157a0:	str	r0, [r4, #4]
   157a4:	str	r0, [r4, #8]
   157a8:	mov	r0, #256	; 0x100
   157ac:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   157b0:	cmp	r0, #0
   157b4:	str	r0, [r4, #16]
   157b8:	beq	15868 <__mempcpy_chk@plt+0x4288>
   157bc:	movw	r0, #45820	; 0xb2fc
   157c0:	tst	r6, #1
   157c4:	and	r1, r6, #2
   157c8:	movt	r0, #3
   157cc:	movweq	r0, #710	; 0x2c6
   157d0:	movteq	r0, #257	; 0x101
   157d4:	tst	r6, #4
   157d8:	orr	r5, r0, r1, lsl #21
   157dc:	bne	157f0 <__mempcpy_chk@plt+0x4210>
   157e0:	ldrb	r0, [r4, #28]
   157e4:	and	r0, r0, #127	; 0x7f
   157e8:	strb	r0, [r4, #28]
   157ec:	b	15810 <__mempcpy_chk@plt+0x4230>
   157f0:	ldrb	r0, [r4, #28]
   157f4:	mvn	r1, #127	; 0x7f
   157f8:	orr	r0, r0, r1
   157fc:	movw	r1, #45758	; 0xb2be
   15800:	movt	r1, #323	; 0x143
   15804:	strb	r0, [r4, #28]
   15808:	and	r1, r5, r1
   1580c:	orr	r5, r1, #256	; 0x100
   15810:	and	r1, r6, #8
   15814:	and	r0, r0, #239	; 0xef
   15818:	mov	r7, #0
   1581c:	orr	r0, r0, r1, lsl #1
   15820:	str	r7, [r4, #20]
   15824:	strb	r0, [r4, #28]
   15828:	mov	r0, r8
   1582c:	bl	114c0 <strlen@plt>
   15830:	mov	r2, r0
   15834:	mov	r0, r4
   15838:	mov	r1, r8
   1583c:	mov	r3, r5
   15840:	bl	14710 <__mempcpy_chk@plt+0x3130>
   15844:	cmp	r0, #16
   15848:	mov	r5, r0
   1584c:	movweq	r5, #8
   15850:	cmp	r5, #0
   15854:	bne	15870 <__mempcpy_chk@plt+0x4290>
   15858:	mov	r0, r4
   1585c:	bl	1536c <__mempcpy_chk@plt+0x3d8c>
   15860:	mov	r0, r7
   15864:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15868:	mov	r7, #12
   1586c:	b	15860 <__mempcpy_chk@plt+0x4280>
   15870:	ldr	r0, [r4, #16]
   15874:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15878:	str	r7, [r4, #16]
   1587c:	mov	r7, r5
   15880:	b	15860 <__mempcpy_chk@plt+0x4280>
   15884:	push	{r4, r5, r6, r7, fp, lr}
   15888:	add	fp, sp, #16
   1588c:	cmp	r0, #17
   15890:	bcs	15904 <__mempcpy_chk@plt+0x4324>
   15894:	movw	r1, #11336	; 0x2c48
   15898:	mov	r4, r2
   1589c:	mov	r2, #5
   158a0:	mov	r5, r3
   158a4:	movt	r1, #2
   158a8:	ldr	r0, [r1, r0, lsl #2]
   158ac:	movw	r1, #10952	; 0x2ac8
   158b0:	movt	r1, #2
   158b4:	add	r1, r1, r0
   158b8:	mov	r0, #0
   158bc:	bl	113a0 <dcgettext@plt>
   158c0:	mov	r6, r0
   158c4:	bl	114c0 <strlen@plt>
   158c8:	add	r7, r0, #1
   158cc:	cmp	r5, #0
   158d0:	beq	158ec <__mempcpy_chk@plt+0x430c>
   158d4:	cmp	r7, r5
   158d8:	mov	r2, r7
   158dc:	bhi	158f4 <__mempcpy_chk@plt+0x4314>
   158e0:	mov	r0, r4
   158e4:	mov	r1, r6
   158e8:	bl	1134c <memcpy@plt>
   158ec:	mov	r0, r7
   158f0:	pop	{r4, r5, r6, r7, fp, pc}
   158f4:	sub	r2, r5, #1
   158f8:	mov	r0, #0
   158fc:	strb	r0, [r4, r2]
   15900:	b	158e0 <__mempcpy_chk@plt+0x4300>
   15904:	bl	115c8 <abort@plt>
   15908:	push	{r4, r5, fp, lr}
   1590c:	add	fp, sp, #8
   15910:	ldr	r5, [r0]
   15914:	mov	r4, r0
   15918:	cmp	r5, #0
   1591c:	beq	15948 <__mempcpy_chk@plt+0x4368>
   15920:	movw	r0, #0
   15924:	movw	r1, #0
   15928:	movt	r0, #0
   1592c:	movt	r1, #0
   15930:	orrs	r0, r1, r0
   15934:	beq	15940 <__mempcpy_chk@plt+0x4360>
   15938:	add	r0, r5, #136	; 0x88
   1593c:	bl	11304 <pthread_mutex_destroy@plt>
   15940:	mov	r0, r5
   15944:	bl	15970 <__mempcpy_chk@plt+0x4390>
   15948:	mov	r5, #0
   1594c:	str	r5, [r4]
   15950:	str	r5, [r4, #4]
   15954:	ldr	r0, [r4, #16]
   15958:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1595c:	str	r5, [r4, #16]
   15960:	ldr	r0, [r4, #20]
   15964:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15968:	str	r5, [r4, #20]
   1596c:	pop	{r4, r5, fp, pc}
   15970:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15974:	add	fp, sp, #24
   15978:	mov	r8, r0
   1597c:	ldr	r0, [r0]
   15980:	cmp	r0, #0
   15984:	beq	159cc <__mempcpy_chk@plt+0x43ec>
   15988:	ldr	r1, [r8, #8]
   1598c:	cmp	r1, #0
   15990:	beq	159cc <__mempcpy_chk@plt+0x43ec>
   15994:	bl	1795c <__mempcpy_chk@plt+0x637c>
   15998:	ldr	r0, [r8, #8]
   1599c:	cmp	r0, #2
   159a0:	bcc	159cc <__mempcpy_chk@plt+0x43ec>
   159a4:	mov	r5, #1
   159a8:	mov	r6, #8
   159ac:	ldr	r0, [r8]
   159b0:	add	r0, r0, r6
   159b4:	bl	1795c <__mempcpy_chk@plt+0x637c>
   159b8:	ldr	r0, [r8, #8]
   159bc:	add	r5, r5, #1
   159c0:	add	r6, r6, #8
   159c4:	cmp	r5, r0
   159c8:	bcc	159ac <__mempcpy_chk@plt+0x43cc>
   159cc:	ldr	r0, [r8, #12]
   159d0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   159d4:	ldr	r0, [r8, #8]
   159d8:	cmp	r0, #0
   159dc:	beq	15a38 <__mempcpy_chk@plt+0x4458>
   159e0:	mov	r5, #0
   159e4:	mov	r6, #8
   159e8:	ldr	r0, [r8, #24]
   159ec:	cmp	r0, #0
   159f0:	beq	159fc <__mempcpy_chk@plt+0x441c>
   159f4:	ldr	r0, [r0, r6]
   159f8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   159fc:	ldr	r0, [r8, #28]
   15a00:	cmp	r0, #0
   15a04:	beq	15a10 <__mempcpy_chk@plt+0x4430>
   15a08:	ldr	r0, [r0, r6]
   15a0c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15a10:	ldr	r0, [r8, #20]
   15a14:	cmp	r0, #0
   15a18:	beq	15a24 <__mempcpy_chk@plt+0x4444>
   15a1c:	ldr	r0, [r0, r6]
   15a20:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15a24:	ldr	r0, [r8, #8]
   15a28:	add	r5, r5, #1
   15a2c:	add	r6, r6, #12
   15a30:	cmp	r5, r0
   15a34:	bcc	159e8 <__mempcpy_chk@plt+0x4408>
   15a38:	ldr	r0, [r8, #20]
   15a3c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15a40:	ldr	r0, [r8, #24]
   15a44:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15a48:	ldr	r0, [r8, #28]
   15a4c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15a50:	ldr	r0, [r8]
   15a54:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15a58:	ldr	r5, [r8, #32]
   15a5c:	cmp	r5, #0
   15a60:	beq	15ac0 <__mempcpy_chk@plt+0x44e0>
   15a64:	mov	r6, #0
   15a68:	add	r0, r6, r6, lsl #1
   15a6c:	ldr	r0, [r5, r0, lsl #2]!
   15a70:	add	r7, r5, #8
   15a74:	cmp	r0, #1
   15a78:	blt	15a9c <__mempcpy_chk@plt+0x44bc>
   15a7c:	mov	r4, #0
   15a80:	ldr	r0, [r7]
   15a84:	ldr	r0, [r0, r4, lsl #2]
   15a88:	bl	1798c <__mempcpy_chk@plt+0x63ac>
   15a8c:	ldr	r0, [r5]
   15a90:	add	r4, r4, #1
   15a94:	cmp	r4, r0
   15a98:	blt	15a80 <__mempcpy_chk@plt+0x44a0>
   15a9c:	ldr	r0, [r7]
   15aa0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15aa4:	ldr	r0, [r8, #68]	; 0x44
   15aa8:	cmp	r6, r0
   15aac:	bcs	15abc <__mempcpy_chk@plt+0x44dc>
   15ab0:	ldr	r5, [r8, #32]
   15ab4:	add	r6, r6, #1
   15ab8:	b	15a68 <__mempcpy_chk@plt+0x4488>
   15abc:	ldr	r5, [r8, #32]
   15ac0:	mov	r0, r5
   15ac4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15ac8:	ldr	r0, [r8, #60]	; 0x3c
   15acc:	movw	r1, #11404	; 0x2c8c
   15ad0:	movt	r1, #2
   15ad4:	cmp	r0, r1
   15ad8:	beq	15ae0 <__mempcpy_chk@plt+0x4500>
   15adc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15ae0:	ldr	r0, [r8, #132]	; 0x84
   15ae4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   15ae8:	mov	r0, r8
   15aec:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15af0:	b	12a88 <__mempcpy_chk@plt+0x14a8>
   15af4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15af8:	add	fp, sp, #28
   15afc:	sub	sp, sp, #28
   15b00:	ldr	sl, [fp, #8]
   15b04:	mov	r7, #2
   15b08:	cmp	sl, #7
   15b0c:	bhi	15be0 <__mempcpy_chk@plt+0x4600>
   15b10:	mov	r5, r0
   15b14:	ldr	r0, [r0]
   15b18:	mov	r6, r3
   15b1c:	mov	r9, r2
   15b20:	mov	r4, r1
   15b24:	tst	sl, #4
   15b28:	str	r0, [sp, #24]
   15b2c:	bne	15b44 <__mempcpy_chk@plt+0x4564>
   15b30:	mov	r0, r4
   15b34:	bl	114c0 <strlen@plt>
   15b38:	mov	r7, r0
   15b3c:	mov	r8, #0
   15b40:	b	15b4c <__mempcpy_chk@plt+0x456c>
   15b44:	ldr	r8, [r6]
   15b48:	ldr	r7, [r6, #4]
   15b4c:	movw	r0, #0
   15b50:	movw	r1, #0
   15b54:	movt	r0, #0
   15b58:	movt	r1, #0
   15b5c:	orrs	r0, r1, r0
   15b60:	str	r0, [sp, #20]
   15b64:	beq	15b74 <__mempcpy_chk@plt+0x4594>
   15b68:	ldr	r0, [sp, #24]
   15b6c:	add	r0, r0, #136	; 0x88
   15b70:	bl	11334 <pthread_mutex_lock@plt>
   15b74:	ldrb	r0, [r5, #28]
   15b78:	tst	r0, #16
   15b7c:	bne	15b90 <__mempcpy_chk@plt+0x45b0>
   15b80:	str	r7, [sp]
   15b84:	stmib	sp, {r7, r9}
   15b88:	str	r6, [sp, #12]
   15b8c:	b	15ba4 <__mempcpy_chk@plt+0x45c4>
   15b90:	mov	r0, #0
   15b94:	str	r7, [sp]
   15b98:	str	r7, [sp, #4]
   15b9c:	str	r0, [sp, #8]
   15ba0:	str	r0, [sp, #12]
   15ba4:	mov	r0, r5
   15ba8:	mov	r1, r4
   15bac:	mov	r2, r7
   15bb0:	mov	r3, r8
   15bb4:	str	sl, [sp, #16]
   15bb8:	bl	15bec <__mempcpy_chk@plt+0x460c>
   15bbc:	mov	r7, r0
   15bc0:	ldr	r0, [sp, #20]
   15bc4:	cmp	r0, #0
   15bc8:	beq	15bd8 <__mempcpy_chk@plt+0x45f8>
   15bcc:	ldr	r0, [sp, #24]
   15bd0:	add	r0, r0, #136	; 0x88
   15bd4:	bl	1128c <pthread_mutex_unlock@plt>
   15bd8:	cmp	r7, #0
   15bdc:	movwne	r7, #1
   15be0:	mov	r0, r7
   15be4:	sub	sp, fp, #28
   15be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bf0:	add	fp, sp, #28
   15bf4:	sub	sp, sp, #436	; 0x1b4
   15bf8:	ldr	r5, [r0]
   15bfc:	str	r2, [sp, #80]	; 0x50
   15c00:	mov	r7, r1
   15c04:	mov	r6, r0
   15c08:	add	r0, sp, #112	; 0x70
   15c0c:	mov	r1, #0
   15c10:	mov	r2, #136	; 0x88
   15c14:	mov	r4, r3
   15c18:	mov	r8, #0
   15c1c:	bl	114f0 <memset@plt>
   15c20:	str	r5, [sp, #196]	; 0xc4
   15c24:	ldr	r9, [fp, #16]
   15c28:	ldr	ip, [fp, #8]
   15c2c:	mov	r0, #0
   15c30:	ldr	r1, [r6, #16]
   15c34:	cmp	r1, #0
   15c38:	beq	15c54 <__mempcpy_chk@plt+0x4674>
   15c3c:	ldrb	r2, [r6, #28]
   15c40:	and	r2, r2, #9
   15c44:	cmp	r2, #8
   15c48:	movne	r1, #0
   15c4c:	subs	r0, r4, ip
   15c50:	movne	r0, r1
   15c54:	ldr	r2, [r6, #24]
   15c58:	ldr	r1, [r6, #8]
   15c5c:	mov	sl, #1
   15c60:	mvn	r3, r2
   15c64:	cmp	r2, r9
   15c68:	addcc	r8, r3, r9
   15c6c:	cmp	r1, #0
   15c70:	beq	173bc <__mempcpy_chk@plt+0x5ddc>
   15c74:	ldr	r1, [r5, #36]	; 0x24
   15c78:	cmp	r1, #0
   15c7c:	ldrne	r2, [r5, #40]	; 0x28
   15c80:	cmpne	r2, #0
   15c84:	beq	173bc <__mempcpy_chk@plt+0x5ddc>
   15c88:	ldr	r3, [r5, #44]	; 0x2c
   15c8c:	cmp	r3, #0
   15c90:	strne	r7, [sp, #104]	; 0x68
   15c94:	ldrne	r7, [r5, #48]	; 0x30
   15c98:	cmpne	r7, #0
   15c9c:	beq	173bc <__mempcpy_chk@plt+0x5ddc>
   15ca0:	ldr	r1, [r1, #8]
   15ca4:	ldr	r7, [r6, #20]
   15ca8:	str	r0, [sp, #100]	; 0x64
   15cac:	cmp	r1, #0
   15cb0:	str	r7, [sp, #108]	; 0x6c
   15cb4:	beq	15cc0 <__mempcpy_chk@plt+0x46e0>
   15cb8:	ldr	lr, [sp, #104]	; 0x68
   15cbc:	b	15cd0 <__mempcpy_chk@plt+0x46f0>
   15cc0:	ldr	r1, [r2, #8]
   15cc4:	ldr	lr, [sp, #104]	; 0x68
   15cc8:	cmp	r1, #0
   15ccc:	beq	16c24 <__mempcpy_chk@plt+0x5644>
   15cd0:	mov	r0, ip
   15cd4:	str	r0, [sp, #92]	; 0x5c
   15cd8:	subs	r9, r9, r8
   15cdc:	mov	r0, #1
   15ce0:	str	r0, [sp, #60]	; 0x3c
   15ce4:	bne	15cf8 <__mempcpy_chk@plt+0x4718>
   15ce8:	ldr	r0, [r5, #76]	; 0x4c
   15cec:	cmp	r0, #0
   15cf0:	movwne	r0, #1
   15cf4:	str	r0, [sp, #60]	; 0x3c
   15cf8:	ldr	r0, [r6, #12]
   15cfc:	ldr	r2, [r5, #92]	; 0x5c
   15d00:	ldr	r7, [sp, #108]	; 0x6c
   15d04:	ldr	ip, [r5, #8]
   15d08:	str	r7, [sp, #176]	; 0xb0
   15d0c:	str	lr, [sp, #112]	; 0x70
   15d10:	str	r2, [sp, #192]	; 0xc0
   15d14:	ubfx	r3, r0, #22, #1
   15d18:	and	r0, r0, #4194304	; 0x400000
   15d1c:	orrs	r0, r7, r0
   15d20:	ldr	r7, [sp, #80]	; 0x50
   15d24:	strb	r3, [sp, #184]	; 0xb8
   15d28:	movwne	r0, #1
   15d2c:	strb	r0, [sp, #187]	; 0xbb
   15d30:	add	r0, sp, #112	; 0x70
   15d34:	ldrb	r1, [r5, #88]	; 0x58
   15d38:	add	r3, r0, #44	; 0x2c
   15d3c:	vdup.32	q8, r7
   15d40:	vst1.32	{d16-d17}, [r3]
   15d44:	ubfx	r3, r1, #3, #1
   15d48:	strb	r3, [sp, #186]	; 0xba
   15d4c:	ubfx	r1, r1, #2, #1
   15d50:	strb	r1, [sp, #185]	; 0xb9
   15d54:	add	r1, ip, #1
   15d58:	cmp	r2, r1
   15d5c:	movgt	r1, r2
   15d60:	add	r2, r7, #1
   15d64:	cmp	r2, r1
   15d68:	movlt	r1, r2
   15d6c:	bl	17aa8 <__mempcpy_chk@plt+0x64c8>
   15d70:	cmp	r0, #0
   15d74:	str	r5, [sp, #96]	; 0x60
   15d78:	bne	173e0 <__mempcpy_chk@plt+0x5e00>
   15d7c:	add	r1, r5, #96	; 0x60
   15d80:	str	r9, [sp, #84]	; 0x54
   15d84:	str	r8, [sp, #32]
   15d88:	ldr	r3, [fp, #24]
   15d8c:	ldr	r0, [fp, #12]
   15d90:	str	r1, [sp, #180]	; 0xb4
   15d94:	ldrb	r1, [r5, #88]	; 0x58
   15d98:	ubfx	r1, r1, #4, #1
   15d9c:	ldr	r9, [sp, #104]	; 0x68
   15da0:	strb	r1, [sp, #190]	; 0xbe
   15da4:	mov	r1, #0
   15da8:	ldrb	r2, [sp, #187]	; 0xbb
   15dac:	cmp	r2, #0
   15db0:	bne	15dc8 <__mempcpy_chk@plt+0x47e8>
   15db4:	str	r9, [sp, #116]	; 0x74
   15db8:	ldr	r1, [r5, #92]	; 0x5c
   15dbc:	cmp	r1, #1
   15dc0:	ldr	r1, [sp, #80]	; 0x50
   15dc4:	movwgt	r1, #0
   15dc8:	str	r0, [sp, #168]	; 0xa8
   15dcc:	str	r1, [sp, #144]	; 0x90
   15dd0:	str	r1, [sp, #140]	; 0x8c
   15dd4:	str	r0, [sp, #164]	; 0xa4
   15dd8:	str	r6, [sp, #68]	; 0x44
   15ddc:	ldr	sl, [sp, #108]	; 0x6c
   15de0:	ldrb	r0, [r6, #28]
   15de4:	ldr	r6, [sp, #100]	; 0x64
   15de8:	lsr	r0, r0, #7
   15dec:	strb	r0, [sp, #189]	; 0xbd
   15df0:	mvn	r0, #0
   15df4:	ldr	r8, [r5, #76]	; 0x4c
   15df8:	str	r0, [sp, #204]	; 0xcc
   15dfc:	str	r3, [sp, #200]	; 0xc8
   15e00:	lsl	r5, r8, #1
   15e04:	cmp	r8, #1
   15e08:	blt	15e5c <__mempcpy_chk@plt+0x487c>
   15e0c:	movw	r0, #43690	; 0xaaaa
   15e10:	mov	r2, #12
   15e14:	movt	r0, #2730	; 0xaaa
   15e18:	cmp	r5, r0
   15e1c:	bhi	17380 <__mempcpy_chk@plt+0x5da0>
   15e20:	add	r0, r8, r8, lsl #1
   15e24:	lsl	r0, r0, #4
   15e28:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   15e2c:	mov	r6, r0
   15e30:	str	r0, [sp, #228]	; 0xe4
   15e34:	lsl	r0, r8, #3
   15e38:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   15e3c:	cmp	r0, #0
   15e40:	str	r0, [sp, #244]	; 0xf4
   15e44:	beq	17408 <__mempcpy_chk@plt+0x5e28>
   15e48:	cmp	r6, #0
   15e4c:	ldr	sl, [sp, #108]	; 0x6c
   15e50:	ldr	r6, [sp, #100]	; 0x64
   15e54:	mov	r2, #12
   15e58:	beq	17380 <__mempcpy_chk@plt+0x5da0>
   15e5c:	mov	r0, #1
   15e60:	str	r5, [sp, #240]	; 0xf0
   15e64:	str	r0, [sp, #232]	; 0xe8
   15e68:	ldr	r0, [sp, #84]	; 0x54
   15e6c:	str	r5, [sp, #224]	; 0xe0
   15e70:	cmp	r0, #1
   15e74:	bhi	15e88 <__mempcpy_chk@plt+0x48a8>
   15e78:	ldr	r0, [sp, #96]	; 0x60
   15e7c:	ldrb	r0, [r0, #88]	; 0x58
   15e80:	tst	r0, #2
   15e84:	beq	15eb8 <__mempcpy_chk@plt+0x48d8>
   15e88:	ldr	r0, [sp, #148]	; 0x94
   15e8c:	mov	r2, #12
   15e90:	cmn	r0, #-1073741822	; 0xc0000002
   15e94:	bhi	17380 <__mempcpy_chk@plt+0x5da0>
   15e98:	mov	r1, #4
   15e9c:	add	r0, r1, r0, lsl #2
   15ea0:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   15ea4:	ldr	r6, [sp, #100]	; 0x64
   15ea8:	mov	r2, #12
   15eac:	cmp	r0, #0
   15eb0:	str	r0, [sp, #212]	; 0xd4
   15eb4:	beq	17380 <__mempcpy_chk@plt+0x5da0>
   15eb8:	ldr	r1, [fp, #24]
   15ebc:	ldr	r2, [sp, #92]	; 0x5c
   15ec0:	str	r4, [fp, #-212]	; 0xffffff2c
   15ec4:	mov	r0, #4
   15ec8:	mov	r8, #1
   15ecc:	mov	r7, r4
   15ed0:	tst	r1, #1
   15ed4:	mov	r1, #4
   15ed8:	mov	r5, r2
   15edc:	movweq	r1, #6
   15ee0:	cmp	r2, r4
   15ee4:	str	r1, [sp, #172]	; 0xac
   15ee8:	ldr	r1, [sp, #96]	; 0x60
   15eec:	mvnlt	r8, #0
   15ef0:	movlt	r5, r4
   15ef4:	movlt	r7, r2
   15ef8:	cmp	r6, #0
   15efc:	ldr	r1, [r1, #92]	; 0x5c
   15f00:	str	r1, [sp, #64]	; 0x40
   15f04:	beq	15f48 <__mempcpy_chk@plt+0x4968>
   15f08:	cmp	r1, #1
   15f0c:	beq	15f2c <__mempcpy_chk@plt+0x494c>
   15f10:	ldr	r0, [sp, #68]	; 0x44
   15f14:	ldr	r0, [r0, #12]
   15f18:	and	r0, r0, #4194304	; 0x400000
   15f1c:	orr	r0, sl, r0
   15f20:	clz	r0, r0
   15f24:	lsr	r0, r0, #5
   15f28:	lsl	r0, r0, #2
   15f2c:	cmp	sl, #0
   15f30:	mov	r1, sl
   15f34:	movwne	r1, #1
   15f38:	cmp	r2, r4
   15f3c:	orrge	r1, r1, #2
   15f40:	orr	r0, r1, r0
   15f44:	b	15f4c <__mempcpy_chk@plt+0x496c>
   15f48:	mov	r0, #8
   15f4c:	add	r1, sp, #112	; 0x70
   15f50:	cmp	r2, r4
   15f54:	str	r7, [sp, #56]	; 0x38
   15f58:	str	r8, [sp, #76]	; 0x4c
   15f5c:	str	r5, [sp, #72]	; 0x48
   15f60:	add	r1, r1, #32
   15f64:	str	r1, [sp, #28]
   15f68:	sub	r1, fp, #212	; 0xd4
   15f6c:	movwlt	r1, #0
   15f70:	cmp	r1, #0
   15f74:	str	r1, [sp, #48]	; 0x30
   15f78:	movwne	r1, #1
   15f7c:	str	r1, [sp, #52]	; 0x34
   15f80:	sub	r1, fp, #208	; 0xd0
   15f84:	add	r1, r1, #16
   15f88:	str	r1, [sp, #36]	; 0x24
   15f8c:	sub	r1, r0, #4
   15f90:	str	r1, [sp, #44]	; 0x2c
   15f94:	cmp	r1, #4
   15f98:	bhi	16080 <__mempcpy_chk@plt+0x4aa0>
   15f9c:	ldr	r2, [fp, #24]
   15fa0:	add	r0, pc, #0
   15fa4:	ldr	pc, [r0, r1, lsl #2]
   15fa8:			; <UNDEFINED> instruction: 0x00015fbc
   15fac:			; <UNDEFINED> instruction: 0x00015fbc
   15fb0:	andeq	r6, r1, r4, lsr r0
   15fb4:	andeq	r6, r1, ip
   15fb8:	andeq	r6, r1, ip, lsl #2
   15fbc:	mov	r2, #1
   15fc0:	cmp	r4, r7
   15fc4:	blt	17380 <__mempcpy_chk@plt+0x5da0>
   15fc8:	ldr	r1, [sp, #80]	; 0x50
   15fcc:	cmp	r4, r1
   15fd0:	mov	r0, #0
   15fd4:	ldrblt	r0, [r9, r4]
   15fd8:	cmp	sl, #0
   15fdc:	ldrbne	r0, [sl, r0]
   15fe0:	ldrb	r0, [r6, r0]
   15fe4:	cmp	r0, #0
   15fe8:	bne	16108 <__mempcpy_chk@plt+0x4b28>
   15fec:	sub	r0, r4, #1
   15ff0:	cmp	r4, r7
   15ff4:	mov	r4, r0
   15ff8:	str	r0, [fp, #-212]	; 0xffffff2c
   15ffc:	bgt	15fcc <__mempcpy_chk@plt+0x49ec>
   16000:	b	17380 <__mempcpy_chk@plt+0x5da0>
   16004:	add	r4, r4, #1
   16008:	str	r4, [fp, #-212]	; 0xffffff2c
   1600c:	cmp	r4, r5
   16010:	bge	1604c <__mempcpy_chk@plt+0x4a6c>
   16014:	ldrb	r0, [r9, r4]
   16018:	ldrb	r0, [sl, r0]
   1601c:	ldrb	r0, [r6, r0]
   16020:	cmp	r0, #0
   16024:	beq	16004 <__mempcpy_chk@plt+0x4a24>
   16028:	b	1604c <__mempcpy_chk@plt+0x4a6c>
   1602c:	add	r4, r4, #1
   16030:	str	r4, [fp, #-212]	; 0xffffff2c
   16034:	cmp	r4, r5
   16038:	bge	1604c <__mempcpy_chk@plt+0x4a6c>
   1603c:	ldrb	r0, [r9, r4]
   16040:	ldrb	r0, [r6, r0]
   16044:	cmp	r0, #0
   16048:	beq	1602c <__mempcpy_chk@plt+0x4a4c>
   1604c:	cmp	r4, r5
   16050:	bne	1610c <__mempcpy_chk@plt+0x4b2c>
   16054:	ldr	r1, [sp, #80]	; 0x50
   16058:	mov	r0, #0
   1605c:	mov	r4, r5
   16060:	cmp	r5, r1
   16064:	ldrblt	r0, [r9, r5]
   16068:	cmp	sl, #0
   1606c:	ldrbne	r0, [sl, r0]
   16070:	ldrb	r0, [r6, r0]
   16074:	cmp	r0, #0
   16078:	bne	1610c <__mempcpy_chk@plt+0x4b2c>
   1607c:	b	17410 <__mempcpy_chk@plt+0x5e30>
   16080:	ldr	r0, [sp, #136]	; 0x88
   16084:	ldr	r2, [sp, #144]	; 0x90
   16088:	sub	r1, r4, r0
   1608c:	cmp	r1, r2
   16090:	bcs	160d8 <__mempcpy_chk@plt+0x4af8>
   16094:	ldr	r3, [sp, #140]	; 0x8c
   16098:	mov	r2, #0
   1609c:	cmp	r1, r3
   160a0:	bcs	160ac <__mempcpy_chk@plt+0x4acc>
   160a4:	ldr	r2, [sp, #116]	; 0x74
   160a8:	ldrb	r2, [r2, r1]
   160ac:	ldrb	r1, [r6, r2]
   160b0:	cmp	r1, #0
   160b4:	bne	16108 <__mempcpy_chk@plt+0x4b28>
   160b8:	add	r4, r4, r8
   160bc:	mov	r2, #1
   160c0:	cmp	r4, r7
   160c4:	str	r4, [fp, #-212]	; 0xffffff2c
   160c8:	blt	17380 <__mempcpy_chk@plt+0x5da0>
   160cc:	cmp	r4, r5
   160d0:	ble	16084 <__mempcpy_chk@plt+0x4aa4>
   160d4:	b	17380 <__mempcpy_chk@plt+0x5da0>
   160d8:	ldr	r2, [fp, #24]
   160dc:	add	r0, sp, #112	; 0x70
   160e0:	mov	r1, r4
   160e4:	bl	1c99c <__mempcpy_chk@plt+0xb3bc>
   160e8:	cmp	r0, #0
   160ec:	bne	173e0 <__mempcpy_chk@plt+0x5e00>
   160f0:	ldr	r0, [sp, #136]	; 0x88
   160f4:	ldr	r4, [fp, #-212]	; 0xffffff2c
   160f8:	ldr	r7, [sp, #56]	; 0x38
   160fc:	ldr	r6, [sp, #100]	; 0x64
   16100:	sub	r1, r4, r0
   16104:	b	16094 <__mempcpy_chk@plt+0x4ab4>
   16108:	ldr	r2, [fp, #24]
   1610c:	add	r0, sp, #112	; 0x70
   16110:	mov	r1, r4
   16114:	bl	1c99c <__mempcpy_chk@plt+0xb3bc>
   16118:	cmp	r0, #0
   1611c:	bne	173e0 <__mempcpy_chk@plt+0x5e00>
   16120:	ldr	r0, [sp, #64]	; 0x40
   16124:	cmp	r0, #1
   16128:	ldrne	r0, [sp, #140]	; 0x8c
   1612c:	cmpne	r0, #0
   16130:	bne	16168 <__mempcpy_chk@plt+0x4b88>
   16134:	mov	r0, #0
   16138:	str	r0, [sp, #220]	; 0xdc
   1613c:	str	r0, [sp, #232]	; 0xe8
   16140:	str	r0, [sp, #216]	; 0xd8
   16144:	str	r0, [fp, #-64]	; 0xffffffc0
   16148:	ldr	r4, [sp, #196]	; 0xc4
   1614c:	ldr	r7, [sp, #152]	; 0x98
   16150:	ldr	r8, [r4, #36]	; 0x24
   16154:	ldrsb	r0, [r8, #52]	; 0x34
   16158:	cmn	r0, #1
   1615c:	ble	1617c <__mempcpy_chk@plt+0x4b9c>
   16160:	ldr	r5, [sp, #52]	; 0x34
   16164:	b	161e0 <__mempcpy_chk@plt+0x4c00>
   16168:	ldr	r0, [sp, #120]	; 0x78
   1616c:	ldr	r0, [r0]
   16170:	cmn	r0, #1
   16174:	bne	16134 <__mempcpy_chk@plt+0x4b54>
   16178:	b	16968 <__mempcpy_chk@plt+0x5388>
   1617c:	ldr	r2, [sp, #200]	; 0xc8
   16180:	sub	r1, r7, #1
   16184:	add	r0, sp, #112	; 0x70
   16188:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1618c:	ldr	r5, [sp, #52]	; 0x34
   16190:	tst	r0, #1
   16194:	bne	161dc <__mempcpy_chk@plt+0x4bfc>
   16198:	mov	r3, r0
   1619c:	cmp	r0, #0
   161a0:	beq	161e0 <__mempcpy_chk@plt+0x4c00>
   161a4:	ands	r1, r3, #2
   161a8:	and	r0, r3, #4
   161ac:	cmpne	r0, #0
   161b0:	bne	16998 <__mempcpy_chk@plt+0x53b8>
   161b4:	cmp	r1, #0
   161b8:	bne	169a0 <__mempcpy_chk@plt+0x53c0>
   161bc:	cmp	r0, #0
   161c0:	beq	161e0 <__mempcpy_chk@plt+0x4c00>
   161c4:	ldr	r2, [r8, #40]	; 0x28
   161c8:	sub	r0, fp, #64	; 0x40
   161cc:	mov	r1, r4
   161d0:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   161d4:	mov	r8, r0
   161d8:	b	161e0 <__mempcpy_chk@plt+0x4c00>
   161dc:	ldr	r8, [r4, #40]	; 0x28
   161e0:	cmp	r8, #0
   161e4:	beq	17408 <__mempcpy_chk@plt+0x5e28>
   161e8:	ldr	r0, [sp, #212]	; 0xd4
   161ec:	mov	r6, r5
   161f0:	cmp	r0, #0
   161f4:	beq	1620c <__mempcpy_chk@plt+0x4c2c>
   161f8:	str	r8, [r0, r7, lsl #2]
   161fc:	mov	r6, r5
   16200:	ldr	r0, [r4, #76]	; 0x4c
   16204:	cmp	r0, #0
   16208:	bne	169c4 <__mempcpy_chk@plt+0x53e4>
   1620c:	ldrb	r0, [r8, #52]	; 0x34
   16210:	tst	r0, #16
   16214:	bne	169a8 <__mempcpy_chk@plt+0x53c8>
   16218:	mvn	r0, #0
   1621c:	mov	r2, #0
   16220:	str	r0, [sp, #88]	; 0x58
   16224:	ldr	r0, [sp, #152]	; 0x98
   16228:	ldr	r1, [sp, #168]	; 0xa8
   1622c:	cmp	r1, r0
   16230:	ble	16648 <__mempcpy_chk@plt+0x5068>
   16234:	ldr	r5, [sp, #48]	; 0x30
   16238:	str	r2, [sp, #40]	; 0x28
   1623c:	ldr	r2, [sp, #148]	; 0x94
   16240:	ldr	r1, [sp, #160]	; 0xa0
   16244:	str	r7, [sp, #92]	; 0x5c
   16248:	add	r7, r0, #1
   1624c:	mov	r9, r6
   16250:	mov	r6, r8
   16254:	cmp	r7, r2
   16258:	blt	16264 <__mempcpy_chk@plt+0x4c84>
   1625c:	cmp	r2, r1
   16260:	blt	16600 <__mempcpy_chk@plt+0x5020>
   16264:	ldr	r2, [sp, #140]	; 0x8c
   16268:	cmp	r7, r2
   1626c:	blt	16278 <__mempcpy_chk@plt+0x4c98>
   16270:	cmp	r2, r1
   16274:	blt	16600 <__mempcpy_chk@plt+0x5020>
   16278:	ldrb	r0, [r6, #52]	; 0x34
   1627c:	tst	r0, #32
   16280:	bne	16428 <__mempcpy_chk@plt+0x4e48>
   16284:	ldr	r1, [sp, #152]	; 0x98
   16288:	ldr	r0, [sp, #116]	; 0x74
   1628c:	add	r2, r1, #1
   16290:	str	r2, [sp, #152]	; 0x98
   16294:	ldrb	r4, [r0, r1]
   16298:	ldr	r0, [r6, #44]	; 0x2c
   1629c:	cmp	r0, #0
   162a0:	bne	162cc <__mempcpy_chk@plt+0x4cec>
   162a4:	ldr	r8, [r6, #48]	; 0x30
   162a8:	cmp	r8, #0
   162ac:	bne	1661c <__mempcpy_chk@plt+0x503c>
   162b0:	ldr	r0, [sp, #196]	; 0xc4
   162b4:	mov	r1, r6
   162b8:	bl	1f220 <__mempcpy_chk@plt+0xdc40>
   162bc:	cmp	r0, #0
   162c0:	bne	16298 <__mempcpy_chk@plt+0x4cb8>
   162c4:	mov	r0, #12
   162c8:	b	1663c <__mempcpy_chk@plt+0x505c>
   162cc:	ldr	r8, [r0, r4, lsl #2]
   162d0:	ldr	r0, [sp, #212]	; 0xd4
   162d4:	cmp	r0, #0
   162d8:	beq	162f0 <__mempcpy_chk@plt+0x4d10>
   162dc:	sub	r0, fp, #64	; 0x40
   162e0:	add	r1, sp, #112	; 0x70
   162e4:	mov	r2, r8
   162e8:	bl	1db8c <__mempcpy_chk@plt+0xc5ac>
   162ec:	mov	r8, r0
   162f0:	cmp	r8, #0
   162f4:	beq	16330 <__mempcpy_chk@plt+0x4d50>
   162f8:	sub	r0, r6, r8
   162fc:	mov	r6, r9
   16300:	clz	r0, r0
   16304:	lsr	r0, r0, #5
   16308:	ands	r6, r9, r0
   1630c:	ldr	r0, [sp, #92]	; 0x5c
   16310:	movne	r0, r7
   16314:	mov	r7, r0
   16318:	ldrb	r0, [r8, #52]	; 0x34
   1631c:	tst	r0, #16
   16320:	bne	163bc <__mempcpy_chk@plt+0x4ddc>
   16324:	ldr	r9, [sp, #104]	; 0x68
   16328:	ldr	sl, [sp, #108]	; 0x6c
   1632c:	b	16408 <__mempcpy_chk@plt+0x4e28>
   16330:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16334:	cmp	r0, #0
   16338:	bne	17408 <__mempcpy_chk@plt+0x5e28>
   1633c:	ldr	r0, [sp, #40]	; 0x28
   16340:	ldr	r1, [sp, #60]	; 0x3c
   16344:	cmp	r0, #0
   16348:	mvn	r1, r1
   1634c:	movwne	r0, #1
   16350:	tst	r1, r0
   16354:	bne	16650 <__mempcpy_chk@plt+0x5070>
   16358:	ldr	r0, [sp, #212]	; 0xd4
   1635c:	cmp	r0, #0
   16360:	beq	16650 <__mempcpy_chk@plt+0x5070>
   16364:	ldr	r2, [sp, #152]	; 0x98
   16368:	ldr	r1, [sp, #216]	; 0xd8
   1636c:	add	r0, r0, #4
   16370:	cmp	r2, r1
   16374:	bge	16650 <__mempcpy_chk@plt+0x5070>
   16378:	add	r3, r2, #1
   1637c:	str	r3, [sp, #152]	; 0x98
   16380:	ldr	r2, [r0, r2, lsl #2]
   16384:	cmp	r2, #0
   16388:	mov	r2, r3
   1638c:	beq	16370 <__mempcpy_chk@plt+0x4d90>
   16390:	sub	r0, fp, #64	; 0x40
   16394:	add	r1, sp, #112	; 0x70
   16398:	mov	r2, #0
   1639c:	bl	1db8c <__mempcpy_chk@plt+0xc5ac>
   163a0:	cmp	r0, #0
   163a4:	mov	r8, r0
   163a8:	ldreq	r0, [fp, #-64]	; 0xffffffc0
   163ac:	cmpeq	r0, #0
   163b0:	bne	1641c <__mempcpy_chk@plt+0x4e3c>
   163b4:	ldr	r0, [sp, #212]	; 0xd4
   163b8:	b	16364 <__mempcpy_chk@plt+0x4d84>
   163bc:	ldr	r9, [sp, #104]	; 0x68
   163c0:	ldr	sl, [sp, #108]	; 0x6c
   163c4:	sxtb	r0, r0
   163c8:	cmn	r0, #1
   163cc:	bgt	163e8 <__mempcpy_chk@plt+0x4e08>
   163d0:	ldr	r2, [sp, #152]	; 0x98
   163d4:	add	r0, sp, #112	; 0x70
   163d8:	mov	r1, r8
   163dc:	bl	1d06c <__mempcpy_chk@plt+0xba8c>
   163e0:	cmp	r0, #0
   163e4:	beq	16408 <__mempcpy_chk@plt+0x4e28>
   163e8:	ldr	r0, [sp, #152]	; 0x98
   163ec:	str	r0, [sp, #88]	; 0x58
   163f0:	ldr	r0, [sp, #60]	; 0x3c
   163f4:	cmp	r0, #0
   163f8:	beq	16670 <__mempcpy_chk@plt+0x5090>
   163fc:	mov	r5, #0
   16400:	mov	r0, #1
   16404:	str	r0, [sp, #40]	; 0x28
   16408:	ldr	r0, [sp, #152]	; 0x98
   1640c:	ldr	r1, [sp, #168]	; 0xa8
   16410:	cmp	r1, r0
   16414:	bgt	1623c <__mempcpy_chk@plt+0x4c5c>
   16418:	b	1665c <__mempcpy_chk@plt+0x507c>
   1641c:	cmp	r8, #0
   16420:	bne	162f8 <__mempcpy_chk@plt+0x4d18>
   16424:	b	16650 <__mempcpy_chk@plt+0x5070>
   16428:	ldr	r0, [r6, #8]
   1642c:	cmp	r0, #1
   16430:	blt	165f4 <__mempcpy_chk@plt+0x5014>
   16434:	ldr	sl, [sp, #196]	; 0xc4
   16438:	mov	r4, #0
   1643c:	str	sl, [sp, #20]
   16440:	ldr	r0, [r6, #12]
   16444:	ldr	r1, [r0, r4, lsl #2]
   16448:	ldr	r0, [sl]
   1644c:	add	r0, r0, r1, lsl #3
   16450:	ldr	r8, [r0, #4]
   16454:	tst	r8, #1048576	; 0x100000
   16458:	beq	165e4 <__mempcpy_chk@plt+0x5004>
   1645c:	movw	r0, #65280	; 0xff00
   16460:	ldr	r3, [sp, #152]	; 0x98
   16464:	str	r1, [sp, #24]
   16468:	movt	r0, #3
   1646c:	tst	r8, r0
   16470:	beq	164d4 <__mempcpy_chk@plt+0x4ef4>
   16474:	ldr	r2, [sp, #200]	; 0xc8
   16478:	add	r0, sp, #112	; 0x70
   1647c:	mov	r1, r3
   16480:	mov	sl, r3
   16484:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   16488:	mov	r3, sl
   1648c:	ldr	r1, [sp, #24]
   16490:	ldr	sl, [sp, #20]
   16494:	and	r2, r0, #1
   16498:	tst	r8, #1024	; 0x400
   1649c:	beq	164a8 <__mempcpy_chk@plt+0x4ec8>
   164a0:	cmp	r2, #0
   164a4:	beq	165e4 <__mempcpy_chk@plt+0x5004>
   164a8:	tst	r8, #2048	; 0x800
   164ac:	cmpne	r2, #0
   164b0:	bne	165e4 <__mempcpy_chk@plt+0x5004>
   164b4:	tst	r8, #8192	; 0x2000
   164b8:	beq	164c4 <__mempcpy_chk@plt+0x4ee4>
   164bc:	ands	r2, r0, #2
   164c0:	beq	165e4 <__mempcpy_chk@plt+0x5004>
   164c4:	tst	r8, #32768	; 0x8000
   164c8:	beq	164d4 <__mempcpy_chk@plt+0x4ef4>
   164cc:	ands	r0, r0, #8
   164d0:	beq	165e4 <__mempcpy_chk@plt+0x5004>
   164d4:	mov	r0, sl
   164d8:	add	r2, sp, #112	; 0x70
   164dc:	bl	1edf4 <__mempcpy_chk@plt+0xd814>
   164e0:	cmp	r0, #0
   164e4:	beq	165e4 <__mempcpy_chk@plt+0x5004>
   164e8:	ldr	r1, [sp, #152]	; 0x98
   164ec:	ldr	r2, [sp, #232]	; 0xe8
   164f0:	cmp	r2, r0
   164f4:	add	r8, r1, r0
   164f8:	movlt	r2, r0
   164fc:	add	r0, sp, #112	; 0x70
   16500:	mov	r1, r8
   16504:	str	r2, [sp, #232]	; 0xe8
   16508:	bl	1df70 <__mempcpy_chk@plt+0xc990>
   1650c:	cmp	r0, #0
   16510:	str	r0, [fp, #-48]	; 0xffffffd0
   16514:	bne	1663c <__mempcpy_chk@plt+0x505c>
   16518:	ldr	r0, [sp, #212]	; 0xd4
   1651c:	ldr	r2, [sp, #24]
   16520:	ldr	r1, [sl, #24]
   16524:	str	r4, [sp, #16]
   16528:	str	r8, [sp, #12]
   1652c:	ldr	r3, [r0, r8, lsl #2]
   16530:	ldr	r0, [sl, #12]
   16534:	ldr	r0, [r0, r2, lsl #2]
   16538:	cmp	r3, #0
   1653c:	str	r3, [sp, #8]
   16540:	add	r0, r0, r0, lsl #1
   16544:	add	r2, r1, r0, lsl #2
   16548:	beq	1656c <__mempcpy_chk@plt+0x4f8c>
   1654c:	ldr	r1, [r3, #40]	; 0x28
   16550:	sub	r4, fp, #208	; 0xd0
   16554:	mov	r0, r4
   16558:	bl	1dce0 <__mempcpy_chk@plt+0xc700>
   1655c:	cmp	r0, #0
   16560:	str	r0, [fp, #-48]	; 0xffffffd0
   16564:	beq	16580 <__mempcpy_chk@plt+0x4fa0>
   16568:	b	1663c <__mempcpy_chk@plt+0x505c>
   1656c:	vldr	d16, [r2]
   16570:	ldr	r0, [r2, #8]
   16574:	sub	r4, fp, #208	; 0xd0
   16578:	str	r0, [fp, #-200]	; 0xffffff38
   1657c:	vstr	d16, [fp, #-208]	; 0xffffff30
   16580:	ldr	r8, [sp, #12]
   16584:	ldr	r2, [sp, #200]	; 0xc8
   16588:	add	r0, sp, #112	; 0x70
   1658c:	sub	r1, r8, #1
   16590:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   16594:	mov	r3, r0
   16598:	sub	r0, fp, #48	; 0x30
   1659c:	mov	r1, sl
   165a0:	mov	r2, r4
   165a4:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   165a8:	ldr	r1, [sp, #212]	; 0xd4
   165ac:	str	r0, [r1, r8, lsl #2]
   165b0:	ldr	r0, [sp, #8]
   165b4:	cmp	r0, #0
   165b8:	beq	165c4 <__mempcpy_chk@plt+0x4fe4>
   165bc:	ldr	r0, [fp, #-200]	; 0xffffff38
   165c0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   165c4:	ldr	r0, [sp, #212]	; 0xd4
   165c8:	ldr	r4, [sp, #16]
   165cc:	ldr	r0, [r0, r8, lsl #2]
   165d0:	cmp	r0, #0
   165d4:	bne	165e4 <__mempcpy_chk@plt+0x5004>
   165d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165dc:	cmp	r0, #0
   165e0:	bne	1663c <__mempcpy_chk@plt+0x505c>
   165e4:	ldr	r0, [r6, #8]
   165e8:	add	r4, r4, #1
   165ec:	cmp	r4, r0
   165f0:	blt	16440 <__mempcpy_chk@plt+0x4e60>
   165f4:	mov	r0, #0
   165f8:	str	r0, [fp, #-64]	; 0xffffffc0
   165fc:	b	16284 <__mempcpy_chk@plt+0x4ca4>
   16600:	add	r1, r0, #2
   16604:	add	r0, sp, #112	; 0x70
   16608:	bl	1dab4 <__mempcpy_chk@plt+0xc4d4>
   1660c:	cmp	r0, #0
   16610:	str	r0, [fp, #-64]	; 0xffffffc0
   16614:	beq	16278 <__mempcpy_chk@plt+0x4c98>
   16618:	b	17408 <__mempcpy_chk@plt+0x5e28>
   1661c:	ldr	r0, [sp, #152]	; 0x98
   16620:	ldr	r2, [sp, #200]	; 0xc8
   16624:	sub	r1, r0, #1
   16628:	add	r0, sp, #112	; 0x70
   1662c:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   16630:	bfi	r4, r0, #8, #1
   16634:	ldr	r8, [r8, r4, lsl #2]
   16638:	b	162d0 <__mempcpy_chk@plt+0x4cf0>
   1663c:	mov	r8, #0
   16640:	str	r0, [fp, #-64]	; 0xffffffc0
   16644:	b	162d0 <__mempcpy_chk@plt+0x4cf0>
   16648:	ldr	r5, [sp, #48]	; 0x30
   1664c:	b	1665c <__mempcpy_chk@plt+0x507c>
   16650:	ldr	r9, [sp, #104]	; 0x68
   16654:	ldr	sl, [sp, #108]	; 0x6c
   16658:	ldr	r7, [sp, #92]	; 0x5c
   1665c:	cmp	r5, #0
   16660:	beq	16670 <__mempcpy_chk@plt+0x5090>
   16664:	ldr	r0, [r5]
   16668:	add	r0, r0, r7
   1666c:	str	r0, [r5]
   16670:	ldr	r8, [sp, #76]	; 0x4c
   16674:	ldr	r5, [sp, #72]	; 0x48
   16678:	ldr	r7, [sp, #88]	; 0x58
   1667c:	cmn	r7, #1
   16680:	beq	16960 <__mempcpy_chk@plt+0x5380>
   16684:	mov	r2, #12
   16688:	cmn	r7, #2
   1668c:	beq	17380 <__mempcpy_chk@plt+0x5da0>
   16690:	ldr	r0, [sp, #68]	; 0x44
   16694:	str	r7, [sp, #204]	; 0xcc
   16698:	ldr	r8, [sp, #84]	; 0x54
   1669c:	ldr	r4, [sp, #96]	; 0x60
   166a0:	ldrb	r0, [r0, #28]
   166a4:	cmp	r8, #2
   166a8:	bcc	166b4 <__mempcpy_chk@plt+0x50d4>
   166ac:	ands	r1, r0, #16
   166b0:	beq	166c0 <__mempcpy_chk@plt+0x50e0>
   166b4:	ldr	r1, [r4, #76]	; 0x4c
   166b8:	cmp	r1, #0
   166bc:	beq	166e4 <__mempcpy_chk@plt+0x5104>
   166c0:	ldr	r0, [sp, #212]	; 0xd4
   166c4:	mov	r2, r7
   166c8:	ldr	r1, [r0, r7, lsl #2]
   166cc:	add	r0, sp, #112	; 0x70
   166d0:	bl	1d06c <__mempcpy_chk@plt+0xba8c>
   166d4:	str	r0, [sp, #208]	; 0xd0
   166d8:	ldr	r0, [sp, #68]	; 0x44
   166dc:	mov	r2, #12
   166e0:	ldrb	r0, [r0, #28]
   166e4:	cmp	r8, #2
   166e8:	bcc	16700 <__mempcpy_chk@plt+0x5120>
   166ec:	ands	r0, r0, #16
   166f0:	bne	16700 <__mempcpy_chk@plt+0x5120>
   166f4:	ldrb	r0, [r4, #88]	; 0x58
   166f8:	tst	r0, #1
   166fc:	bne	1670c <__mempcpy_chk@plt+0x512c>
   16700:	ldr	r0, [r4, #76]	; 0x4c
   16704:	cmp	r0, #0
   16708:	beq	16ae4 <__mempcpy_chk@plt+0x5504>
   1670c:	ldr	r6, [sp, #204]	; 0xcc
   16710:	cmn	r6, #-1073741823	; 0xc0000001
   16714:	bcs	17380 <__mempcpy_chk@plt+0x5da0>
   16718:	mov	r0, #4
   1671c:	ldr	r7, [sp, #196]	; 0xc4
   16720:	ldr	r5, [sp, #208]	; 0xd0
   16724:	add	r4, r0, r6, lsl #2
   16728:	mov	r0, r4
   1672c:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   16730:	mov	sl, r0
   16734:	cmp	r0, #0
   16738:	beq	173f8 <__mempcpy_chk@plt+0x5e18>
   1673c:	ldr	r0, [r7, #76]	; 0x4c
   16740:	cmp	r0, #0
   16744:	beq	167f4 <__mempcpy_chk@plt+0x5214>
   16748:	mov	r0, r4
   1674c:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   16750:	cmp	r0, #0
   16754:	beq	173f8 <__mempcpy_chk@plt+0x5e18>
   16758:	mov	r9, r0
   1675c:	add	r0, r6, #1
   16760:	mov	r1, #0
   16764:	str	r0, [sp, #92]	; 0x5c
   16768:	lsl	r2, r0, #2
   1676c:	mov	r0, r9
   16770:	bl	114f0 <memset@plt>
   16774:	ldr	r0, [sp, #36]	; 0x24
   16778:	mov	r1, #0
   1677c:	str	r6, [fp, #-196]	; 0xffffff3c
   16780:	str	r5, [fp, #-200]	; 0xffffff38
   16784:	str	r9, [fp, #-204]	; 0xffffff34
   16788:	str	sl, [fp, #-208]	; 0xffffff30
   1678c:	str	r1, [r0]
   16790:	str	r1, [r0, #4]
   16794:	str	r1, [r0, #8]
   16798:	add	r0, sp, #112	; 0x70
   1679c:	sub	r1, fp, #208	; 0xd0
   167a0:	bl	1fd1c <__mempcpy_chk@plt+0xe73c>
   167a4:	mov	r4, r0
   167a8:	mov	r0, #0
   167ac:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   167b0:	cmp	r4, #0
   167b4:	bne	16a70 <__mempcpy_chk@plt+0x5490>
   167b8:	ldr	r0, [sl]
   167bc:	cmp	r0, #0
   167c0:	beq	1684c <__mempcpy_chk@plt+0x526c>
   167c4:	ldr	r3, [sp, #92]	; 0x5c
   167c8:	mov	r0, r7
   167cc:	mov	r1, sl
   167d0:	mov	r2, r9
   167d4:	bl	1ffb4 <__mempcpy_chk@plt+0xe9d4>
   167d8:	mov	r4, r0
   167dc:	mov	r0, r9
   167e0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   167e4:	cmp	r4, #0
   167e8:	beq	16abc <__mempcpy_chk@plt+0x54dc>
   167ec:	mov	r9, #0
   167f0:	b	16a6c <__mempcpy_chk@plt+0x548c>
   167f4:	ldr	r0, [sp, #36]	; 0x24
   167f8:	mov	r9, #0
   167fc:	str	r6, [fp, #-196]	; 0xffffff3c
   16800:	str	r5, [fp, #-200]	; 0xffffff38
   16804:	sub	r1, fp, #208	; 0xd0
   16808:	str	r9, [fp, #-204]	; 0xffffff34
   1680c:	str	sl, [fp, #-208]	; 0xffffff30
   16810:	str	r9, [r0]
   16814:	str	r9, [r0, #4]
   16818:	str	r9, [r0, #8]
   1681c:	add	r0, sp, #112	; 0x70
   16820:	bl	1fd1c <__mempcpy_chk@plt+0xe73c>
   16824:	mov	r4, r0
   16828:	mov	r0, #0
   1682c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16830:	cmp	r4, #0
   16834:	bne	16a70 <__mempcpy_chk@plt+0x5490>
   16838:	ldr	r0, [sl]
   1683c:	mov	r9, #0
   16840:	cmp	r0, #0
   16844:	beq	16940 <__mempcpy_chk@plt+0x5360>
   16848:	b	16abc <__mempcpy_chk@plt+0x54dc>
   1684c:	ldr	r0, [r9]
   16850:	cmp	r0, #0
   16854:	bne	167c4 <__mempcpy_chk@plt+0x51e4>
   16858:	cmp	r6, #1
   1685c:	blt	16940 <__mempcpy_chk@plt+0x5360>
   16860:	ldr	r0, [sp, #212]	; 0xd4
   16864:	str	r7, [sp, #88]	; 0x58
   16868:	lsl	r4, r6, #2
   1686c:	add	r8, r6, #1
   16870:	mov	r7, sl
   16874:	sub	r0, r0, #4
   16878:	ldr	r1, [r0, r4]
   1687c:	cmp	r1, #0
   16880:	beq	16890 <__mempcpy_chk@plt+0x52b0>
   16884:	ldrb	r2, [r1, #52]	; 0x34
   16888:	tst	r2, #16
   1688c:	bne	168a4 <__mempcpy_chk@plt+0x52c4>
   16890:	sub	r8, r8, #1
   16894:	sub	r4, r4, #4
   16898:	cmp	r8, #2
   1689c:	bge	16878 <__mempcpy_chk@plt+0x5298>
   168a0:	b	16940 <__mempcpy_chk@plt+0x5360>
   168a4:	sub	r6, r8, #2
   168a8:	add	r5, sp, #112	; 0x70
   168ac:	mov	r0, r5
   168b0:	mov	r2, r6
   168b4:	bl	1d06c <__mempcpy_chk@plt+0xba8c>
   168b8:	mov	sl, r0
   168bc:	mov	r0, r9
   168c0:	mov	r1, #0
   168c4:	mov	r2, r4
   168c8:	bl	114f0 <memset@plt>
   168cc:	ldr	r0, [sp, #36]	; 0x24
   168d0:	mov	r1, #0
   168d4:	str	r6, [fp, #-196]	; 0xffffff3c
   168d8:	str	sl, [fp, #-200]	; 0xffffff38
   168dc:	str	r9, [fp, #-204]	; 0xffffff34
   168e0:	str	r7, [fp, #-208]	; 0xffffff30
   168e4:	mov	r5, sl
   168e8:	mov	sl, r7
   168ec:	str	r1, [r0]
   168f0:	str	r1, [r0, #4]
   168f4:	str	r1, [r0, #8]
   168f8:	add	r0, sp, #112	; 0x70
   168fc:	sub	r1, fp, #208	; 0xd0
   16900:	bl	1fd1c <__mempcpy_chk@plt+0xe73c>
   16904:	mov	r4, r0
   16908:	mov	r0, #0
   1690c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16910:	cmp	r4, #0
   16914:	bne	16a6c <__mempcpy_chk@plt+0x548c>
   16918:	sub	r0, r8, #1
   1691c:	ldr	r7, [sp, #88]	; 0x58
   16920:	str	r0, [sp, #92]	; 0x5c
   16924:	ldr	r0, [sl]
   16928:	cmp	r0, #0
   1692c:	beq	1684c <__mempcpy_chk@plt+0x526c>
   16930:	sub	r6, r8, #2
   16934:	sub	r0, r8, #1
   16938:	str	r0, [sp, #92]	; 0x5c
   1693c:	b	167c4 <__mempcpy_chk@plt+0x51e4>
   16940:	mov	r0, sl
   16944:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16948:	mov	r0, r9
   1694c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16950:	ldr	r9, [sp, #104]	; 0x68
   16954:	ldr	sl, [sp, #108]	; 0x6c
   16958:	ldr	r8, [sp, #76]	; 0x4c
   1695c:	ldr	r5, [sp, #72]	; 0x48
   16960:	add	r0, sp, #112	; 0x70
   16964:	bl	1d12c <__mempcpy_chk@plt+0xbb4c>
   16968:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1696c:	ldr	r7, [sp, #56]	; 0x38
   16970:	mov	r2, #1
   16974:	add	r4, r0, r8
   16978:	cmp	r4, r7
   1697c:	str	r4, [fp, #-212]	; 0xffffff2c
   16980:	blt	17380 <__mempcpy_chk@plt+0x5da0>
   16984:	ldr	r6, [sp, #100]	; 0x64
   16988:	ldr	r1, [sp, #44]	; 0x2c
   1698c:	cmp	r5, r4
   16990:	bge	15f94 <__mempcpy_chk@plt+0x49b4>
   16994:	b	17380 <__mempcpy_chk@plt+0x5da0>
   16998:	ldr	r8, [r4, #48]	; 0x30
   1699c:	b	161e0 <__mempcpy_chk@plt+0x4c00>
   169a0:	ldr	r8, [r4, #44]	; 0x2c
   169a4:	b	161e0 <__mempcpy_chk@plt+0x4c00>
   169a8:	sxtb	r0, r0
   169ac:	cmn	r0, #1
   169b0:	ble	169fc <__mempcpy_chk@plt+0x541c>
   169b4:	ldr	r0, [sp, #60]	; 0x3c
   169b8:	mov	r2, #1
   169bc:	str	r7, [sp, #88]	; 0x58
   169c0:	b	16a34 <__mempcpy_chk@plt+0x5454>
   169c4:	add	r6, r8, #4
   169c8:	add	r0, sp, #112	; 0x70
   169cc:	mov	r2, #0
   169d0:	mov	r1, r6
   169d4:	bl	1d2b0 <__mempcpy_chk@plt+0xbcd0>
   169d8:	cmp	r0, #0
   169dc:	str	r0, [fp, #-64]	; 0xffffffc0
   169e0:	bne	16aa8 <__mempcpy_chk@plt+0x54c8>
   169e4:	ldrb	r0, [r8, #52]	; 0x34
   169e8:	tst	r0, #64	; 0x40
   169ec:	bne	16a48 <__mempcpy_chk@plt+0x5468>
   169f0:	ldr	sl, [sp, #108]	; 0x6c
   169f4:	mov	r6, #0
   169f8:	b	1620c <__mempcpy_chk@plt+0x4c2c>
   169fc:	add	r0, sp, #112	; 0x70
   16a00:	mov	r1, r8
   16a04:	mov	r2, r7
   16a08:	bl	1d06c <__mempcpy_chk@plt+0xba8c>
   16a0c:	cmp	r0, #0
   16a10:	ldr	r1, [sp, #60]	; 0x3c
   16a14:	mov	r2, r0
   16a18:	mov	r0, r7
   16a1c:	mvneq	r0, #0
   16a20:	str	r0, [sp, #88]	; 0x58
   16a24:	clz	r0, r2
   16a28:	movwne	r2, #1
   16a2c:	lsr	r0, r0, #5
   16a30:	orr	r0, r1, r0
   16a34:	cmp	r0, #0
   16a38:	bne	16224 <__mempcpy_chk@plt+0x4c44>
   16a3c:	ldr	r8, [sp, #76]	; 0x4c
   16a40:	ldr	r5, [sp, #72]	; 0x48
   16a44:	b	1667c <__mempcpy_chk@plt+0x509c>
   16a48:	add	r0, sp, #112	; 0x70
   16a4c:	mov	r1, r6
   16a50:	bl	1d3a8 <__mempcpy_chk@plt+0xbdc8>
   16a54:	ldr	sl, [sp, #108]	; 0x6c
   16a58:	cmp	r0, #0
   16a5c:	mov	r6, #0
   16a60:	str	r0, [fp, #-64]	; 0xffffffc0
   16a64:	beq	1620c <__mempcpy_chk@plt+0x4c2c>
   16a68:	b	16aac <__mempcpy_chk@plt+0x54cc>
   16a6c:	ldr	r8, [sp, #84]	; 0x54
   16a70:	mov	r0, sl
   16a74:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16a78:	mov	r0, r9
   16a7c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16a80:	ldr	r9, [sp, #104]	; 0x68
   16a84:	cmp	r4, #0
   16a88:	beq	16ae4 <__mempcpy_chk@plt+0x5504>
   16a8c:	ldr	sl, [sp, #108]	; 0x6c
   16a90:	ldr	r8, [sp, #76]	; 0x4c
   16a94:	ldr	r5, [sp, #72]	; 0x48
   16a98:	mov	r2, r4
   16a9c:	cmp	r4, #1
   16aa0:	beq	16960 <__mempcpy_chk@plt+0x5380>
   16aa4:	b	17380 <__mempcpy_chk@plt+0x5da0>
   16aa8:	ldr	sl, [sp, #108]	; 0x6c
   16aac:	ldr	r8, [sp, #76]	; 0x4c
   16ab0:	ldr	r5, [sp, #72]	; 0x48
   16ab4:	mov	r7, r0
   16ab8:	b	1667c <__mempcpy_chk@plt+0x509c>
   16abc:	ldr	r0, [sp, #212]	; 0xd4
   16ac0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16ac4:	mov	r0, #0
   16ac8:	str	r5, [sp, #208]	; 0xd0
   16acc:	str	sl, [sp, #212]	; 0xd4
   16ad0:	str	r6, [sp, #204]	; 0xcc
   16ad4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16ad8:	mov	r0, #0
   16adc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16ae0:	ldr	r8, [sp, #84]	; 0x54
   16ae4:	cmp	r8, #0
   16ae8:	beq	1737c <__mempcpy_chk@plt+0x5d9c>
   16aec:	ldr	r4, [fp, #20]
   16af0:	cmp	r8, #1
   16af4:	beq	16b18 <__mempcpy_chk@plt+0x5538>
   16af8:	ldr	r0, [sp, #32]
   16afc:	ldr	r1, [fp, #16]
   16b00:	mvn	r0, r0
   16b04:	add	r0, r0, r1
   16b08:	mov	r1, #255	; 0xff
   16b0c:	lsl	r2, r0, #3
   16b10:	add	r0, r4, #8
   16b14:	bl	114f0 <memset@plt>
   16b18:	cmp	r8, #2
   16b1c:	mov	r0, #0
   16b20:	ldr	r1, [sp, #204]	; 0xcc
   16b24:	stm	r4, {r0, r1}
   16b28:	bcc	17264 <__mempcpy_chk@plt+0x5c84>
   16b2c:	ldr	r0, [sp, #68]	; 0x44
   16b30:	ldrb	r0, [r0, #28]
   16b34:	ands	r0, r0, #16
   16b38:	bne	17264 <__mempcpy_chk@plt+0x5c84>
   16b3c:	ldr	r2, [sp, #96]	; 0x60
   16b40:	mov	r0, #0
   16b44:	ldrb	r1, [r2, #88]	; 0x58
   16b48:	tst	r1, #1
   16b4c:	mov	r1, #0
   16b50:	beq	16b64 <__mempcpy_chk@plt+0x5584>
   16b54:	ldr	r2, [r2, #76]	; 0x4c
   16b58:	mov	r1, #0
   16b5c:	cmp	r2, #0
   16b60:	movwgt	r1, #1
   16b64:	ldr	r2, [sp, #68]	; 0x44
   16b68:	ldr	r5, [sp, #84]	; 0x54
   16b6c:	ldr	r4, [fp, #20]
   16b70:	cmp	r1, #0
   16b74:	mov	r6, #0
   16b78:	ldr	r8, [r2]
   16b7c:	movw	r2, #11440	; 0x2cb0
   16b80:	movt	r2, #2
   16b84:	vldr	d16, [r2]
   16b88:	ldr	r2, [r2, #8]
   16b8c:	str	r2, [fp, #-56]	; 0xffffffc8
   16b90:	sub	r2, fp, #208	; 0xd0
   16b94:	add	sl, r2, #12
   16b98:	mov	r2, #16
   16b9c:	vstr	d16, [fp, #-64]	; 0xffffffc0
   16ba0:	str	sl, [fp, #-200]	; 0xffffff38
   16ba4:	str	r2, [fp, #-204]	; 0xffffff34
   16ba8:	str	r0, [fp, #-208]	; 0xffffff30
   16bac:	beq	16bcc <__mempcpy_chk@plt+0x55ec>
   16bb0:	mov	r0, #48	; 0x30
   16bb4:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   16bb8:	cmp	r0, #0
   16bbc:	str	r0, [fp, #-56]	; 0xffffffc8
   16bc0:	beq	173d0 <__mempcpy_chk@plt+0x5df0>
   16bc4:	ldr	r0, [fp, #-208]	; 0xffffff30
   16bc8:	sub	r6, fp, #64	; 0x40
   16bcc:	ldr	r9, [r8, #72]	; 0x48
   16bd0:	mov	r1, #0
   16bd4:	cmp	r0, r5
   16bd8:	str	r1, [fp, #-44]	; 0xffffffd4
   16bdc:	str	r1, [fp, #-48]	; 0xffffffd0
   16be0:	str	r1, [fp, #-40]	; 0xffffffd8
   16be4:	bcs	16c58 <__mempcpy_chk@plt+0x5678>
   16be8:	sub	r0, fp, #208	; 0xd0
   16bec:	mov	r1, r5
   16bf0:	mov	r2, sl
   16bf4:	mov	r3, #8
   16bf8:	bl	21ba4 <__mempcpy_chk@plt+0x105c4>
   16bfc:	cmp	r0, #0
   16c00:	bne	16c5c <__mempcpy_chk@plt+0x567c>
   16c04:	ldr	r0, [fp, #-200]	; 0xffffff38
   16c08:	mov	r4, #12
   16c0c:	mov	r5, sl
   16c10:	cmp	r0, sl
   16c14:	beq	16c1c <__mempcpy_chk@plt+0x563c>
   16c18:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16c1c:	mov	sl, r5
   16c20:	b	1723c <__mempcpy_chk@plt+0x5c5c>
   16c24:	ldr	r1, [r3, #8]
   16c28:	cmp	r1, #0
   16c2c:	beq	16c3c <__mempcpy_chk@plt+0x565c>
   16c30:	ldrsb	r1, [r6, #28]
   16c34:	cmp	r1, #0
   16c38:	bmi	15cd0 <__mempcpy_chk@plt+0x46f0>
   16c3c:	mov	r0, #0
   16c40:	cmp	r4, #0
   16c44:	beq	173c8 <__mempcpy_chk@plt+0x5de8>
   16c48:	cmp	ip, #0
   16c4c:	mov	r4, #0
   16c50:	bne	173bc <__mempcpy_chk@plt+0x5ddc>
   16c54:	b	15cd4 <__mempcpy_chk@plt+0x46f4>
   16c58:	str	r5, [fp, #-208]	; 0xffffff30
   16c5c:	ldr	r7, [fp, #-200]	; 0xffffff38
   16c60:	lsl	r2, r5, #3
   16c64:	mov	r1, r4
   16c68:	str	r2, [sp, #104]	; 0x68
   16c6c:	mov	r0, r7
   16c70:	bl	1134c <memcpy@plt>
   16c74:	ldr	r3, [r4]
   16c78:	ldr	r0, [r4, #4]
   16c7c:	cmp	r3, r0
   16c80:	mov	r0, #0
   16c84:	str	r3, [fp, #-36]	; 0xffffffdc
   16c88:	ble	16c98 <__mempcpy_chk@plt+0x56b8>
   16c8c:	mov	r4, #0
   16c90:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   16c94:	b	1722c <__mempcpy_chk@plt+0x5c4c>
   16c98:	lsl	r0, r5, #4
   16c9c:	str	r6, [sp, #108]	; 0x6c
   16ca0:	str	r8, [sp, #92]	; 0x5c
   16ca4:	str	r7, [sp, #100]	; 0x64
   16ca8:	str	r0, [sp, #88]	; 0x58
   16cac:	ldr	r0, [r8]
   16cb0:	add	r1, r0, r9, lsl #3
   16cb4:	ldr	r1, [r1, #4]
   16cb8:	uxtb	r2, r1
   16cbc:	cmp	r2, #9
   16cc0:	beq	16cf0 <__mempcpy_chk@plt+0x5710>
   16cc4:	cmp	r2, #8
   16cc8:	bne	16d60 <__mempcpy_chk@plt+0x5780>
   16ccc:	ldr	r0, [r0, r9, lsl #3]
   16cd0:	add	r0, r0, #1
   16cd4:	cmp	r0, r5
   16cd8:	bge	16d60 <__mempcpy_chk@plt+0x5780>
   16cdc:	mov	r1, r4
   16ce0:	str	r3, [r1, r0, lsl #3]!
   16ce4:	mvn	r0, #0
   16ce8:	str	r0, [r1, #4]
   16cec:	b	16d60 <__mempcpy_chk@plt+0x5780>
   16cf0:	ldr	r0, [r0, r9, lsl #3]
   16cf4:	add	r0, r0, #1
   16cf8:	cmp	r0, r5
   16cfc:	bge	16d60 <__mempcpy_chk@plt+0x5780>
   16d00:	ldr	r2, [r4, r0, lsl #3]
   16d04:	cmp	r2, r3
   16d08:	bge	16d20 <__mempcpy_chk@plt+0x5740>
   16d0c:	add	r0, r4, r0, lsl #3
   16d10:	mov	r1, r4
   16d14:	str	r3, [r0, #4]
   16d18:	mov	r0, r7
   16d1c:	b	16d3c <__mempcpy_chk@plt+0x575c>
   16d20:	tst	r1, #524288	; 0x80000
   16d24:	beq	16d58 <__mempcpy_chk@plt+0x5778>
   16d28:	ldr	r1, [r7, r0, lsl #3]
   16d2c:	cmn	r1, #1
   16d30:	beq	16d58 <__mempcpy_chk@plt+0x5778>
   16d34:	mov	r0, r4
   16d38:	mov	r1, r7
   16d3c:	ldr	r2, [sp, #104]	; 0x68
   16d40:	str	sl, [sp, #80]	; 0x50
   16d44:	mov	sl, r3
   16d48:	bl	1134c <memcpy@plt>
   16d4c:	mov	r3, sl
   16d50:	ldr	sl, [sp, #80]	; 0x50
   16d54:	b	16d60 <__mempcpy_chk@plt+0x5780>
   16d58:	add	r0, r4, r0, lsl #3
   16d5c:	str	r3, [r0, #4]
   16d60:	ldr	r0, [r4, #4]
   16d64:	cmp	r3, r0
   16d68:	ldreq	r0, [sp, #208]	; 0xd0
   16d6c:	cmpeq	r9, r0
   16d70:	beq	16d94 <__mempcpy_chk@plt+0x57b4>
   16d74:	cmp	r6, #0
   16d78:	beq	16df8 <__mempcpy_chk@plt+0x5818>
   16d7c:	sub	r0, fp, #48	; 0x30
   16d80:	mov	r1, r9
   16d84:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   16d88:	cmp	r0, #0
   16d8c:	bne	16d9c <__mempcpy_chk@plt+0x57bc>
   16d90:	b	16df8 <__mempcpy_chk@plt+0x5818>
   16d94:	cmp	r6, #0
   16d98:	beq	17220 <__mempcpy_chk@plt+0x5c40>
   16d9c:	mov	r0, #0
   16da0:	ldr	r1, [r4, r0, lsl #3]
   16da4:	cmp	r1, #0
   16da8:	bmi	16dbc <__mempcpy_chk@plt+0x57dc>
   16dac:	add	r1, r4, r0, lsl #3
   16db0:	ldr	r1, [r1, #4]
   16db4:	cmn	r1, #1
   16db8:	beq	16dcc <__mempcpy_chk@plt+0x57ec>
   16dbc:	add	r0, r0, #1
   16dc0:	cmp	r5, r0
   16dc4:	bne	16da0 <__mempcpy_chk@plt+0x57c0>
   16dc8:	b	17220 <__mempcpy_chk@plt+0x5c40>
   16dcc:	sub	r0, fp, #48	; 0x30
   16dd0:	sub	r1, fp, #36	; 0x24
   16dd4:	mov	r2, r5
   16dd8:	mov	r3, r4
   16ddc:	str	r7, [sp]
   16de0:	str	r0, [sp, #4]
   16de4:	mov	r0, r6
   16de8:	bl	20f0c <__mempcpy_chk@plt+0xf92c>
   16dec:	mov	r9, r0
   16df0:	cmn	r0, #1
   16df4:	ble	17220 <__mempcpy_chk@plt+0x5c40>
   16df8:	ldr	r4, [sp, #196]	; 0xc4
   16dfc:	ldr	r0, [r4]
   16e00:	add	r1, r0, r9, lsl #3
   16e04:	ldr	r1, [r1, #4]
   16e08:	tst	r1, #8
   16e0c:	bne	16ec8 <__mempcpy_chk@plt+0x58e8>
   16e10:	tst	r1, #1048576	; 0x100000
   16e14:	bne	16f5c <__mempcpy_chk@plt+0x597c>
   16e18:	uxtb	r1, r1
   16e1c:	cmp	r1, #4
   16e20:	bne	16f84 <__mempcpy_chk@plt+0x59a4>
   16e24:	ldr	r0, [r0, r9, lsl #3]
   16e28:	mov	r7, #0
   16e2c:	add	r0, r0, #1
   16e30:	cmp	r0, r5
   16e34:	bge	16e48 <__mempcpy_chk@plt+0x5868>
   16e38:	ldr	r1, [fp, #20]
   16e3c:	ldr	r2, [r1, r0, lsl #3]!
   16e40:	ldr	r1, [r1, #4]
   16e44:	sub	r7, r1, r2
   16e48:	cmp	r6, #0
   16e4c:	beq	1706c <__mempcpy_chk@plt+0x5a8c>
   16e50:	cmp	r0, r5
   16e54:	bge	17008 <__mempcpy_chk@plt+0x5a28>
   16e58:	ldr	r1, [fp, #20]
   16e5c:	ldr	r1, [r1, r0, lsl #3]
   16e60:	cmn	r1, #1
   16e64:	beq	17008 <__mempcpy_chk@plt+0x5a28>
   16e68:	ldr	r2, [fp, #20]
   16e6c:	add	r0, r2, r0, lsl #3
   16e70:	ldr	r0, [r0, #4]
   16e74:	cmn	r0, #1
   16e78:	beq	17008 <__mempcpy_chk@plt+0x5a28>
   16e7c:	cmp	r7, #0
   16e80:	beq	17118 <__mempcpy_chk@plt+0x5b38>
   16e84:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16e88:	ldr	r0, [sp, #140]	; 0x8c
   16e8c:	sub	r0, r0, r5
   16e90:	cmp	r0, r7
   16e94:	blt	17008 <__mempcpy_chk@plt+0x5a28>
   16e98:	ldr	r2, [sp, #116]	; 0x74
   16e9c:	add	r0, r2, r1
   16ea0:	add	r1, r2, r5
   16ea4:	mov	r2, r7
   16ea8:	bl	114b4 <bcmp@plt>
   16eac:	cmp	r0, #0
   16eb0:	bne	17008 <__mempcpy_chk@plt+0x5a28>
   16eb4:	ldr	r0, [r4, #12]
   16eb8:	add	r3, r5, r7
   16ebc:	ldr	r8, [r0, r9, lsl #2]
   16ec0:	str	r3, [fp, #-36]	; 0xffffffdc
   16ec4:	b	16fd0 <__mempcpy_chk@plt+0x59f0>
   16ec8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16ecc:	ldr	r0, [sp, #212]	; 0xd4
   16ed0:	ldr	r4, [r4, #20]
   16ed4:	ldr	r6, [r0, r1, lsl #2]
   16ed8:	str	r1, [sp, #80]	; 0x50
   16edc:	sub	r0, fp, #48	; 0x30
   16ee0:	mov	r1, r9
   16ee4:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   16ee8:	cmp	r0, #0
   16eec:	bne	16f04 <__mempcpy_chk@plt+0x5924>
   16ef0:	sub	r0, fp, #48	; 0x30
   16ef4:	mov	r1, r9
   16ef8:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   16efc:	cmp	r0, #0
   16f00:	beq	171fc <__mempcpy_chk@plt+0x5c1c>
   16f04:	add	r0, r9, r9, lsl #1
   16f08:	add	r0, r4, r0, lsl #2
   16f0c:	ldr	r5, [r0, #4]
   16f10:	cmp	r5, #1
   16f14:	blt	17008 <__mempcpy_chk@plt+0x5a28>
   16f18:	ldr	r7, [r0, #8]
   16f1c:	add	r6, r6, #4
   16f20:	mvn	r4, #0
   16f24:	ldr	r8, [r7]
   16f28:	mov	r0, r6
   16f2c:	mov	r1, r8
   16f30:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   16f34:	cmp	r0, #0
   16f38:	beq	16f48 <__mempcpy_chk@plt+0x5968>
   16f3c:	cmn	r4, #1
   16f40:	bne	17050 <__mempcpy_chk@plt+0x5a70>
   16f44:	mov	r4, r8
   16f48:	add	r7, r7, #4
   16f4c:	subs	r5, r5, #1
   16f50:	bne	16f24 <__mempcpy_chk@plt+0x5944>
   16f54:	mov	r8, r4
   16f58:	b	17064 <__mempcpy_chk@plt+0x5a84>
   16f5c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16f60:	mov	r0, r4
   16f64:	mov	r1, r9
   16f68:	add	r2, sp, #112	; 0x70
   16f6c:	mov	r3, r5
   16f70:	bl	1edf4 <__mempcpy_chk@plt+0xd814>
   16f74:	mov	r3, r5
   16f78:	cmp	r0, #0
   16f7c:	bne	16fb4 <__mempcpy_chk@plt+0x59d4>
   16f80:	b	16f88 <__mempcpy_chk@plt+0x59a8>
   16f84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f88:	ldr	r0, [r4]
   16f8c:	mov	r2, r3
   16f90:	mov	r5, r3
   16f94:	add	r1, r0, r9, lsl #3
   16f98:	add	r0, sp, #112	; 0x70
   16f9c:	bl	1f0ec <__mempcpy_chk@plt+0xdb0c>
   16fa0:	mov	r1, r0
   16fa4:	mov	r3, r5
   16fa8:	mov	r0, #1
   16fac:	cmp	r1, #0
   16fb0:	beq	17008 <__mempcpy_chk@plt+0x5a28>
   16fb4:	ldr	r1, [r4, #12]
   16fb8:	add	r3, r0, r3
   16fbc:	ldr	r0, [sp, #108]	; 0x6c
   16fc0:	ldr	r8, [r1, r9, lsl #2]
   16fc4:	cmp	r0, #0
   16fc8:	str	r3, [fp, #-36]	; 0xffffffdc
   16fcc:	beq	17088 <__mempcpy_chk@plt+0x5aa8>
   16fd0:	ldr	r0, [sp, #204]	; 0xcc
   16fd4:	cmp	r3, r0
   16fd8:	bgt	17008 <__mempcpy_chk@plt+0x5a28>
   16fdc:	ldr	r0, [sp, #212]	; 0xd4
   16fe0:	ldr	r0, [r0, r3, lsl #2]
   16fe4:	cmp	r0, #0
   16fe8:	beq	17008 <__mempcpy_chk@plt+0x5a28>
   16fec:	add	r0, r0, #4
   16ff0:	mov	r1, r8
   16ff4:	mov	r4, r3
   16ff8:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   16ffc:	mov	r3, r4
   17000:	cmp	r0, #0
   17004:	bne	17088 <__mempcpy_chk@plt+0x5aa8>
   17008:	ldr	r5, [sp, #84]	; 0x54
   1700c:	ldr	r4, [fp, #20]
   17010:	ldr	r6, [sp, #108]	; 0x6c
   17014:	ldr	r7, [sp, #100]	; 0x64
   17018:	sub	r0, fp, #48	; 0x30
   1701c:	sub	r1, fp, #36	; 0x24
   17020:	str	r0, [sp, #4]
   17024:	mov	r0, r6
   17028:	mov	r2, r5
   1702c:	mov	r3, r4
   17030:	str	r7, [sp]
   17034:	bl	20f0c <__mempcpy_chk@plt+0xf92c>
   17038:	cmp	r0, #0
   1703c:	bmi	173e8 <__mempcpy_chk@plt+0x5e08>
   17040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17044:	ldr	r8, [sp, #92]	; 0x5c
   17048:	mov	r9, r0
   1704c:	b	170b0 <__mempcpy_chk@plt+0x5ad0>
   17050:	sub	r0, fp, #48	; 0x30
   17054:	mov	r1, r4
   17058:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1705c:	cmp	r0, #0
   17060:	beq	170c0 <__mempcpy_chk@plt+0x5ae0>
   17064:	ldr	r3, [sp, #80]	; 0x50
   17068:	b	17090 <__mempcpy_chk@plt+0x5ab0>
   1706c:	cmp	r7, #0
   17070:	beq	17118 <__mempcpy_chk@plt+0x5b38>
   17074:	ldr	r0, [r4, #12]
   17078:	ldr	r8, [r0, r9, lsl #2]
   1707c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17080:	add	r3, r0, r7
   17084:	str	r3, [fp, #-36]	; 0xffffffdc
   17088:	mov	r0, #0
   1708c:	str	r0, [fp, #-44]	; 0xffffffd4
   17090:	cmn	r8, #1
   17094:	ble	171f4 <__mempcpy_chk@plt+0x5c14>
   17098:	mov	r9, r8
   1709c:	ldr	r5, [sp, #84]	; 0x54
   170a0:	ldr	r4, [fp, #20]
   170a4:	ldr	r6, [sp, #108]	; 0x6c
   170a8:	ldr	r8, [sp, #92]	; 0x5c
   170ac:	ldr	r7, [sp, #100]	; 0x64
   170b0:	ldr	r0, [r4, #4]
   170b4:	cmp	r3, r0
   170b8:	ble	16cac <__mempcpy_chk@plt+0x56cc>
   170bc:	b	173d8 <__mempcpy_chk@plt+0x5df8>
   170c0:	ldr	r7, [sp, #108]	; 0x6c
   170c4:	ldr	r3, [sp, #80]	; 0x50
   170c8:	cmp	r7, #0
   170cc:	beq	17168 <__mempcpy_chk@plt+0x5b88>
   170d0:	ldr	r5, [r7]
   170d4:	ldr	r0, [r7, #4]
   170d8:	add	r1, r5, #1
   170dc:	cmp	r1, r0
   170e0:	str	r1, [r7]
   170e4:	bne	17170 <__mempcpy_chk@plt+0x5b90>
   170e8:	ldr	r0, [r7, #8]
   170ec:	add	r1, r1, r1, lsl #1
   170f0:	lsl	r1, r1, #4
   170f4:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   170f8:	cmp	r0, #0
   170fc:	beq	171ec <__mempcpy_chk@plt+0x5c0c>
   17100:	str	r0, [r7, #8]
   17104:	ldr	r3, [sp, #80]	; 0x50
   17108:	ldr	r1, [r7, #4]
   1710c:	lsl	r1, r1, #1
   17110:	str	r1, [r7, #4]
   17114:	b	17174 <__mempcpy_chk@plt+0x5b94>
   17118:	sub	r0, fp, #48	; 0x30
   1711c:	mov	r1, r9
   17120:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   17124:	cmp	r0, #0
   17128:	beq	171fc <__mempcpy_chk@plt+0x5c1c>
   1712c:	ldr	r0, [r4, #20]
   17130:	add	r1, r9, r9, lsl #1
   17134:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17138:	add	r0, r0, r1, lsl #2
   1713c:	ldr	r0, [r0, #8]
   17140:	ldr	r8, [r0]
   17144:	ldr	r0, [sp, #212]	; 0xd4
   17148:	ldr	r0, [r0, r5, lsl #2]
   1714c:	mov	r1, r8
   17150:	add	r0, r0, #4
   17154:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   17158:	mov	r3, r5
   1715c:	cmp	r0, #0
   17160:	bne	17090 <__mempcpy_chk@plt+0x5ab0>
   17164:	b	16f88 <__mempcpy_chk@plt+0x59a8>
   17168:	mov	r8, r4
   1716c:	b	17090 <__mempcpy_chk@plt+0x5ab0>
   17170:	ldr	r0, [r7, #8]
   17174:	add	r5, r5, r5, lsl #1
   17178:	str	r3, [r0, r5, lsl #3]!
   1717c:	str	r8, [r0, #4]
   17180:	ldr	r0, [sp, #88]	; 0x58
   17184:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   17188:	ldr	r1, [r7, #8]
   1718c:	mvn	r8, #1
   17190:	cmp	r0, #0
   17194:	add	r6, r1, r5, lsl #3
   17198:	str	r0, [r6, #8]!
   1719c:	beq	17064 <__mempcpy_chk@plt+0x5a84>
   171a0:	ldr	r9, [sp, #104]	; 0x68
   171a4:	ldr	r1, [fp, #20]
   171a8:	mov	r2, r9
   171ac:	bl	1134c <memcpy@plt>
   171b0:	ldr	r0, [r6]
   171b4:	ldr	r1, [sp, #84]	; 0x54
   171b8:	mov	r2, r9
   171bc:	add	r0, r0, r1, lsl #3
   171c0:	ldr	r1, [sp, #100]	; 0x64
   171c4:	bl	1134c <memcpy@plt>
   171c8:	ldr	r0, [r7, #8]
   171cc:	sub	r1, fp, #48	; 0x30
   171d0:	add	r0, r0, r5, lsl #3
   171d4:	add	r0, r0, #12
   171d8:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   171dc:	ldr	r3, [sp, #80]	; 0x50
   171e0:	cmp	r0, #0
   171e4:	moveq	r8, r4
   171e8:	b	17090 <__mempcpy_chk@plt+0x5ab0>
   171ec:	mvn	r8, #1
   171f0:	b	17064 <__mempcpy_chk@plt+0x5a84>
   171f4:	cmn	r8, #2
   171f8:	bne	17008 <__mempcpy_chk@plt+0x5a28>
   171fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17200:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17204:	ldr	r0, [fp, #-200]	; 0xffffff38
   17208:	mov	r4, #12
   1720c:	cmp	r0, sl
   17210:	beq	17218 <__mempcpy_chk@plt+0x5c38>
   17214:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17218:	ldr	r6, [sp, #108]	; 0x6c
   1721c:	b	1723c <__mempcpy_chk@plt+0x5c5c>
   17220:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17224:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17228:	mov	r4, #0
   1722c:	ldr	r0, [fp, #-200]	; 0xffffff38
   17230:	cmp	r0, sl
   17234:	beq	1723c <__mempcpy_chk@plt+0x5c5c>
   17238:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1723c:	mov	r0, #16
   17240:	str	sl, [fp, #-200]	; 0xffffff38
   17244:	str	r0, [fp, #-204]	; 0xffffff34
   17248:	mov	r0, #0
   1724c:	str	r0, [fp, #-208]	; 0xffffff30
   17250:	mov	r0, r6
   17254:	bl	20ea4 <__mempcpy_chk@plt+0xf8c4>
   17258:	mov	r2, r4
   1725c:	cmp	r2, #0
   17260:	bne	17380 <__mempcpy_chk@plt+0x5da0>
   17264:	ldr	r0, [fp, #20]
   17268:	ldrb	r1, [sp, #188]	; 0xbc
   1726c:	ldr	r2, [fp, #16]
   17270:	ldr	r8, [sp, #96]	; 0x60
   17274:	ldr	r4, [sp, #32]
   17278:	add	r0, r0, #4
   1727c:	ldr	r3, [r0, #-4]
   17280:	cmn	r3, #1
   17284:	beq	172a4 <__mempcpy_chk@plt+0x5cc4>
   17288:	cmp	r1, #0
   1728c:	bne	172b8 <__mempcpy_chk@plt+0x5cd8>
   17290:	ldr	r7, [r0]
   17294:	ldr	r6, [fp, #-212]	; 0xffffff2c
   17298:	add	r3, r3, r6
   1729c:	add	r7, r7, r6
   172a0:	stmda	r0, {r3, r7}
   172a4:	sub	r2, r2, #1
   172a8:	add	r0, r0, #8
   172ac:	cmp	r4, r2
   172b0:	bne	1727c <__mempcpy_chk@plt+0x5c9c>
   172b4:	b	172f0 <__mempcpy_chk@plt+0x5d10>
   172b8:	ldr	r7, [sp, #140]	; 0x8c
   172bc:	ldr	r6, [sp, #28]
   172c0:	ldr	ip, [sp, #124]	; 0x7c
   172c4:	cmp	r3, r7
   172c8:	mov	r5, r6
   172cc:	addne	r5, ip, r3, lsl #2
   172d0:	ldr	r3, [r5]
   172d4:	str	r3, [r0, #-4]
   172d8:	ldr	r5, [r0]
   172dc:	cmp	r5, r7
   172e0:	addne	r6, ip, r5, lsl #2
   172e4:	ldr	r7, [r6]
   172e8:	str	r7, [r0]
   172ec:	b	17294 <__mempcpy_chk@plt+0x5cb4>
   172f0:	cmp	r4, #1
   172f4:	blt	17310 <__mempcpy_chk@plt+0x5d30>
   172f8:	ldr	r0, [sp, #84]	; 0x54
   172fc:	ldr	r1, [fp, #20]
   17300:	lsl	r2, r4, #3
   17304:	add	r0, r1, r0, lsl #3
   17308:	mov	r1, #255	; 0xff
   1730c:	bl	114f0 <memset@plt>
   17310:	ldr	r0, [r8, #132]	; 0x84
   17314:	mov	r2, #0
   17318:	cmp	r0, #0
   1731c:	beq	17380 <__mempcpy_chk@plt+0x5da0>
   17320:	ldr	r1, [sp, #84]	; 0x54
   17324:	cmp	r1, #2
   17328:	bcc	17380 <__mempcpy_chk@plt+0x5da0>
   1732c:	ldr	r1, [sp, #32]
   17330:	ldr	r2, [fp, #16]
   17334:	ldr	r6, [fp, #20]
   17338:	mvn	r1, r1
   1733c:	add	r1, r1, r2
   17340:	mov	r2, #0
   17344:	ldr	r3, [r0, r2, lsl #2]
   17348:	cmp	r2, r3
   1734c:	beq	17370 <__mempcpy_chk@plt+0x5d90>
   17350:	add	r3, r6, r3, lsl #3
   17354:	add	r7, r6, r2, lsl #3
   17358:	ldr	r3, [r3, #8]
   1735c:	str	r3, [r7, #8]
   17360:	ldr	r3, [r0, r2, lsl #2]
   17364:	add	r3, r6, r3, lsl #3
   17368:	ldr	r3, [r3, #12]
   1736c:	str	r3, [r7, #12]
   17370:	add	r2, r2, #1
   17374:	cmp	r1, r2
   17378:	bne	17344 <__mempcpy_chk@plt+0x5d64>
   1737c:	mov	r2, #0
   17380:	ldr	r0, [sp, #212]	; 0xd4
   17384:	mov	sl, r2
   17388:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1738c:	ldr	r0, [sp, #96]	; 0x60
   17390:	ldr	r0, [r0, #76]	; 0x4c
   17394:	cmp	r0, #0
   17398:	beq	173b4 <__mempcpy_chk@plt+0x5dd4>
   1739c:	add	r0, sp, #112	; 0x70
   173a0:	bl	1d12c <__mempcpy_chk@plt+0xbb4c>
   173a4:	ldr	r0, [sp, #244]	; 0xf4
   173a8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   173ac:	ldr	r0, [sp, #228]	; 0xe4
   173b0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   173b4:	add	r0, sp, #112	; 0x70
   173b8:	bl	17a74 <__mempcpy_chk@plt+0x6494>
   173bc:	mov	r0, sl
   173c0:	sub	sp, fp, #28
   173c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173c8:	mov	r4, #0
   173cc:	b	15cd4 <__mempcpy_chk@plt+0x46f4>
   173d0:	mov	r2, #12
   173d4:	b	1725c <__mempcpy_chk@plt+0x5c7c>
   173d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   173dc:	b	16c8c <__mempcpy_chk@plt+0x56ac>
   173e0:	mov	r2, r0
   173e4:	b	17380 <__mempcpy_chk@plt+0x5da0>
   173e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   173ec:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   173f0:	mov	r4, #1
   173f4:	b	1722c <__mempcpy_chk@plt+0x5c4c>
   173f8:	mov	r0, sl
   173fc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17400:	mov	r0, #0
   17404:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17408:	mov	r2, #12
   1740c:	b	17380 <__mempcpy_chk@plt+0x5da0>
   17410:	mov	r2, #1
   17414:	b	17380 <__mempcpy_chk@plt+0x5da0>
   17418:	push	{fp, lr}
   1741c:	mov	fp, sp
   17420:	sub	sp, sp, #16
   17424:	mov	ip, #1
   17428:	str	r2, [sp, #4]
   1742c:	str	ip, [sp, #12]
   17430:	mov	ip, #0
   17434:	str	ip, [sp]
   17438:	ldr	ip, [fp, #8]
   1743c:	str	ip, [sp, #8]
   17440:	bl	1744c <__mempcpy_chk@plt+0x5e6c>
   17444:	mov	sp, fp
   17448:	pop	{fp, pc}
   1744c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17450:	add	fp, sp, #28
   17454:	sub	sp, sp, #44	; 0x2c
   17458:	mvn	r6, #0
   1745c:	cmp	r3, #0
   17460:	bmi	17710 <__mempcpy_chk@plt+0x6130>
   17464:	mov	r5, r3
   17468:	mov	r9, r2
   1746c:	cmp	r3, r2
   17470:	bgt	17710 <__mempcpy_chk@plt+0x6130>
   17474:	mov	r7, r0
   17478:	ldr	r0, [fp, #8]
   1747c:	mov	sl, r1
   17480:	movw	r1, #0
   17484:	mov	r8, r9
   17488:	ldr	r6, [r7]
   1748c:	movt	r1, #0
   17490:	add	r0, r0, r5
   17494:	cmp	r0, r9
   17498:	bicle	r8, r0, r0, asr #31
   1749c:	movw	r0, #0
   174a0:	movt	r0, #0
   174a4:	orrs	r4, r1, r0
   174a8:	beq	174b4 <__mempcpy_chk@plt+0x5ed4>
   174ac:	add	r0, r6, #136	; 0x88
   174b0:	bl	11334 <pthread_mutex_lock@plt>
   174b4:	ldrb	r0, [r7, #28]
   174b8:	str	r6, [sp, #24]
   174bc:	ldr	r6, [fp, #16]
   174c0:	cmp	r8, r5
   174c4:	ubfx	r1, r0, #5, #2
   174c8:	str	r4, [sp, #36]	; 0x24
   174cc:	str	sl, [sp, #32]
   174d0:	str	r1, [sp, #28]
   174d4:	ble	174f8 <__mempcpy_chk@plt+0x5f18>
   174d8:	tst	r0, #8
   174dc:	bne	174f8 <__mempcpy_chk@plt+0x5f18>
   174e0:	ldr	r1, [r7, #16]
   174e4:	cmp	r1, #0
   174e8:	beq	174f8 <__mempcpy_chk@plt+0x5f18>
   174ec:	mov	r0, r7
   174f0:	bl	1536c <__mempcpy_chk@plt+0x3d8c>
   174f4:	ldrb	r0, [r7, #28]
   174f8:	str	r7, [fp, #-32]	; 0xffffffe0
   174fc:	mov	sl, #1
   17500:	mov	r7, #0
   17504:	cmp	r6, #0
   17508:	beq	17554 <__mempcpy_chk@plt+0x5f74>
   1750c:	ands	r1, r0, #16
   17510:	bne	17554 <__mempcpy_chk@plt+0x5f74>
   17514:	and	r0, r0, #6
   17518:	cmp	r0, #4
   1751c:	bne	17544 <__mempcpy_chk@plt+0x5f64>
   17520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17524:	ldr	sl, [r6]
   17528:	ldr	r0, [r0, #24]
   1752c:	cmp	sl, r0
   17530:	bhi	1754c <__mempcpy_chk@plt+0x5f6c>
   17534:	cmp	sl, #1
   17538:	movwlt	r6, #0
   1753c:	movwlt	sl, #1
   17540:	b	17550 <__mempcpy_chk@plt+0x5f70>
   17544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17548:	ldr	r0, [r0, #24]
   1754c:	add	sl, r0, #1
   17550:	mov	r7, r6
   17554:	lsl	r0, sl, #3
   17558:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1755c:	cmp	r0, #0
   17560:	beq	1771c <__mempcpy_chk@plt+0x613c>
   17564:	ldr	r1, [fp, #12]
   17568:	str	r8, [sp]
   1756c:	mov	r8, r0
   17570:	mov	r2, r9
   17574:	mov	r3, r5
   17578:	stmib	sp, {r1, sl}
   1757c:	str	r0, [sp, #12]
   17580:	ldr	r0, [sp, #28]
   17584:	ldr	r1, [sp, #32]
   17588:	str	r0, [sp, #16]
   1758c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17590:	bl	15bec <__mempcpy_chk@plt+0x460c>
   17594:	cmp	r0, #0
   17598:	beq	175b4 <__mempcpy_chk@plt+0x5fd4>
   1759c:	ldr	r4, [sp, #36]	; 0x24
   175a0:	cmp	r0, #1
   175a4:	mvn	r6, #1
   175a8:	mov	r5, r8
   175ac:	mvneq	r6, #0
   175b0:	b	176f4 <__mempcpy_chk@plt+0x6114>
   175b4:	str	r5, [sp, #32]
   175b8:	cmp	r7, #0
   175bc:	mov	r5, r8
   175c0:	beq	176c8 <__mempcpy_chk@plt+0x60e8>
   175c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175c8:	add	r9, sl, #1
   175cc:	ldrb	r0, [r0, #28]
   175d0:	ubfx	r0, r0, #1, #2
   175d4:	cmp	r0, #1
   175d8:	beq	17624 <__mempcpy_chk@plt+0x6044>
   175dc:	cmp	r0, #0
   175e0:	bne	1763c <__mempcpy_chk@plt+0x605c>
   175e4:	lsl	r5, r9, #2
   175e8:	mov	r0, r5
   175ec:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   175f0:	mov	r6, #0
   175f4:	cmp	r0, #0
   175f8:	str	r0, [r7, #4]
   175fc:	beq	17774 <__mempcpy_chk@plt+0x6194>
   17600:	mov	r0, r5
   17604:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   17608:	cmp	r0, #0
   1760c:	str	r0, [r7, #8]
   17610:	beq	1776c <__mempcpy_chk@plt+0x618c>
   17614:	str	r9, [r7]
   17618:	mov	r4, #1
   1761c:	mov	r5, r8
   17620:	b	17644 <__mempcpy_chk@plt+0x6064>
   17624:	ldr	r0, [r7]
   17628:	mov	r4, #1
   1762c:	cmp	r9, r0
   17630:	bhi	17728 <__mempcpy_chk@plt+0x6148>
   17634:	mov	r9, r0
   17638:	b	17644 <__mempcpy_chk@plt+0x6064>
   1763c:	ldr	r9, [r7]
   17640:	mov	r4, #2
   17644:	cmp	sl, #1
   17648:	blt	1767c <__mempcpy_chk@plt+0x609c>
   1764c:	ldmib	r7, {r1, r2}
   17650:	add	r0, r5, #4
   17654:	mov	r3, sl
   17658:	ldr	r6, [r0, #-4]
   1765c:	subs	r3, r3, #1
   17660:	str	r6, [r1], #4
   17664:	ldr	r6, [r0]
   17668:	add	r0, r0, #8
   1766c:	str	r6, [r2], #4
   17670:	bne	17658 <__mempcpy_chk@plt+0x6078>
   17674:	ldr	r9, [r7]
   17678:	b	17680 <__mempcpy_chk@plt+0x60a0>
   1767c:	mov	sl, #0
   17680:	cmp	sl, r9
   17684:	bcs	176a8 <__mempcpy_chk@plt+0x60c8>
   17688:	ldmib	r7, {r0, r1}
   1768c:	mvn	r2, #0
   17690:	str	r2, [r1, sl, lsl #2]
   17694:	str	r2, [r0, sl, lsl #2]
   17698:	add	sl, sl, #1
   1769c:	ldr	r3, [r7]
   176a0:	cmp	sl, r3
   176a4:	bcc	17690 <__mempcpy_chk@plt+0x60b0>
   176a8:	mov	r6, r4
   176ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   176b0:	cmp	r6, #0
   176b4:	ldrb	r0, [r1, #28]
   176b8:	and	r0, r0, #249	; 0xf9
   176bc:	orr	r0, r0, r6, lsl #1
   176c0:	strb	r0, [r1, #28]
   176c4:	beq	176ec <__mempcpy_chk@plt+0x610c>
   176c8:	ldr	r0, [fp, #20]
   176cc:	cmp	r0, #0
   176d0:	beq	176e4 <__mempcpy_chk@plt+0x6104>
   176d4:	ldr	r0, [r5, #4]
   176d8:	ldr	r1, [sp, #32]
   176dc:	sub	r6, r0, r1
   176e0:	b	176f0 <__mempcpy_chk@plt+0x6110>
   176e4:	ldr	r6, [r5]
   176e8:	b	176f0 <__mempcpy_chk@plt+0x6110>
   176ec:	mvn	r6, #1
   176f0:	ldr	r4, [sp, #36]	; 0x24
   176f4:	mov	r0, r5
   176f8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   176fc:	cmp	r4, #0
   17700:	beq	17710 <__mempcpy_chk@plt+0x6130>
   17704:	ldr	r0, [sp, #24]
   17708:	add	r0, r0, #136	; 0x88
   1770c:	bl	1128c <pthread_mutex_unlock@plt>
   17710:	mov	r0, r6
   17714:	sub	sp, fp, #28
   17718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1771c:	ldr	r4, [sp, #36]	; 0x24
   17720:	mvn	r6, #1
   17724:	b	176fc <__mempcpy_chk@plt+0x611c>
   17728:	ldr	r0, [r7, #4]
   1772c:	lsl	r1, r9, #2
   17730:	str	r1, [sp, #28]
   17734:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   17738:	mov	r6, #0
   1773c:	cmp	r0, #0
   17740:	beq	17774 <__mempcpy_chk@plt+0x6194>
   17744:	mov	r5, r0
   17748:	ldr	r0, [r7, #8]
   1774c:	ldr	r1, [sp, #28]
   17750:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   17754:	cmp	r0, #0
   17758:	beq	1777c <__mempcpy_chk@plt+0x619c>
   1775c:	str	r9, [r7]
   17760:	str	r5, [r7, #4]
   17764:	str	r0, [r7, #8]
   17768:	b	1761c <__mempcpy_chk@plt+0x603c>
   1776c:	ldr	r0, [r7, #4]
   17770:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17774:	mov	r5, r8
   17778:	b	176ac <__mempcpy_chk@plt+0x60cc>
   1777c:	mov	r0, r5
   17780:	b	17770 <__mempcpy_chk@plt+0x6190>
   17784:	push	{fp, lr}
   17788:	mov	fp, sp
   1778c:	sub	sp, sp, #16
   17790:	mov	ip, #0
   17794:	str	r2, [sp, #4]
   17798:	str	ip, [sp, #12]
   1779c:	ldr	ip, [fp, #12]
   177a0:	str	ip, [sp, #8]
   177a4:	ldr	ip, [fp, #8]
   177a8:	str	ip, [sp]
   177ac:	bl	1744c <__mempcpy_chk@plt+0x5e6c>
   177b0:	mov	sp, fp
   177b4:	pop	{fp, pc}
   177b8:	push	{fp, lr}
   177bc:	mov	fp, sp
   177c0:	sub	sp, sp, #24
   177c4:	mov	ip, #1
   177c8:	str	ip, [sp, #20]
   177cc:	mov	ip, #0
   177d0:	str	ip, [sp, #8]
   177d4:	ldr	ip, [fp, #20]
   177d8:	str	ip, [sp, #16]
   177dc:	ldr	ip, [fp, #16]
   177e0:	str	ip, [sp, #12]
   177e4:	ldr	ip, [fp, #12]
   177e8:	str	ip, [sp, #4]
   177ec:	ldr	ip, [fp, #8]
   177f0:	str	ip, [sp]
   177f4:	bl	17800 <__mempcpy_chk@plt+0x6220>
   177f8:	mov	sp, fp
   177fc:	pop	{fp, pc}
   17800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17804:	add	fp, sp, #28
   17808:	sub	sp, sp, #20
   1780c:	ldr	r4, [fp, #8]
   17810:	mov	r8, r1
   17814:	mov	r1, r0
   17818:	mov	r6, r2
   1781c:	orr	r0, r4, r2
   17820:	ldr	r2, [fp, #24]
   17824:	orrs	r0, r0, r2
   17828:	bmi	178dc <__mempcpy_chk@plt+0x62fc>
   1782c:	adds	sl, r6, r4
   17830:	bvs	178dc <__mempcpy_chk@plt+0x62fc>
   17834:	mov	r5, #0
   17838:	cmp	r4, #1
   1783c:	blt	17890 <__mempcpy_chk@plt+0x62b0>
   17840:	mov	r9, r3
   17844:	cmp	r6, #1
   17848:	blt	17898 <__mempcpy_chk@plt+0x62b8>
   1784c:	mov	r0, sl
   17850:	mov	r5, r1
   17854:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   17858:	cmp	r0, #0
   1785c:	beq	178dc <__mempcpy_chk@plt+0x62fc>
   17860:	mov	r1, r8
   17864:	mov	r2, r6
   17868:	mov	r7, r0
   1786c:	bl	1134c <memcpy@plt>
   17870:	add	r0, r7, r6
   17874:	mov	r1, r9
   17878:	mov	r2, r4
   1787c:	bl	1134c <memcpy@plt>
   17880:	ldr	r2, [fp, #24]
   17884:	mov	r1, r5
   17888:	mov	r5, r7
   1788c:	b	1789c <__mempcpy_chk@plt+0x62bc>
   17890:	mov	r7, r8
   17894:	b	1789c <__mempcpy_chk@plt+0x62bc>
   17898:	mov	r7, r9
   1789c:	add	r6, fp, #12
   178a0:	ldr	r0, [fp, #28]
   178a4:	ldm	r6, {r3, r4, r6}
   178a8:	str	r4, [sp]
   178ac:	stmib	sp, {r2, r6}
   178b0:	mov	r2, sl
   178b4:	str	r0, [sp, #12]
   178b8:	mov	r0, r1
   178bc:	mov	r1, r7
   178c0:	bl	1744c <__mempcpy_chk@plt+0x5e6c>
   178c4:	mov	r4, r0
   178c8:	mov	r0, r5
   178cc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   178d0:	mov	r0, r4
   178d4:	sub	sp, fp, #28
   178d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178dc:	mvn	r0, #1
   178e0:	b	178d4 <__mempcpy_chk@plt+0x62f4>
   178e4:	push	{fp, lr}
   178e8:	mov	fp, sp
   178ec:	sub	sp, sp, #24
   178f0:	mov	ip, #0
   178f4:	str	ip, [sp, #20]
   178f8:	ldr	ip, [fp, #24]
   178fc:	str	ip, [sp, #16]
   17900:	ldr	ip, [fp, #20]
   17904:	str	ip, [sp, #12]
   17908:	ldr	ip, [fp, #16]
   1790c:	str	ip, [sp, #8]
   17910:	ldr	ip, [fp, #12]
   17914:	str	ip, [sp, #4]
   17918:	ldr	ip, [fp, #8]
   1791c:	str	ip, [sp]
   17920:	bl	17800 <__mempcpy_chk@plt+0x6220>
   17924:	mov	sp, fp
   17928:	pop	{fp, pc}
   1792c:	ldrb	ip, [r0, #28]
   17930:	cmp	r2, #0
   17934:	bic	ip, ip, #6
   17938:	orrne	ip, ip, #2
   1793c:	strb	ip, [r0, #28]
   17940:	ldr	r0, [sp]
   17944:	moveq	r0, r2
   17948:	cmp	r2, #0
   1794c:	moveq	r3, r2
   17950:	stm	r1, {r2, r3}
   17954:	str	r0, [r1, #8]
   17958:	bx	lr
   1795c:	ldr	r1, [r0, #4]
   17960:	movw	r2, #255	; 0xff
   17964:	movt	r2, #4
   17968:	and	r1, r1, r2
   1796c:	cmp	r1, #3
   17970:	beq	17984 <__mempcpy_chk@plt+0x63a4>
   17974:	cmp	r1, #6
   17978:	bxne	lr
   1797c:	ldr	r0, [r0]
   17980:	b	179ec <__mempcpy_chk@plt+0x640c>
   17984:	ldr	r0, [r0]
   17988:	b	12a88 <__mempcpy_chk@plt+0x14a8>
   1798c:	push	{r4, sl, fp, lr}
   17990:	add	fp, sp, #8
   17994:	mov	r4, r0
   17998:	ldr	r0, [r0, #24]
   1799c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179a0:	ldr	r0, [r4, #36]	; 0x24
   179a4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179a8:	ldr	r0, [r4, #40]	; 0x28
   179ac:	add	r1, r4, #4
   179b0:	cmp	r0, r1
   179b4:	beq	179c8 <__mempcpy_chk@plt+0x63e8>
   179b8:	ldr	r0, [r0, #8]
   179bc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179c0:	ldr	r0, [r4, #40]	; 0x28
   179c4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179c8:	ldr	r0, [r4, #12]
   179cc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179d0:	ldr	r0, [r4, #48]	; 0x30
   179d4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179d8:	ldr	r0, [r4, #44]	; 0x2c
   179dc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   179e0:	mov	r0, r4
   179e4:	pop	{r4, sl, fp, lr}
   179e8:	b	12a88 <__mempcpy_chk@plt+0x14a8>
   179ec:	push	{r4, sl, fp, lr}
   179f0:	add	fp, sp, #8
   179f4:	mov	r4, r0
   179f8:	ldr	r0, [r0]
   179fc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a00:	ldr	r0, [r4, #4]
   17a04:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a08:	ldr	r0, [r4, #8]
   17a0c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a10:	ldr	r0, [r4, #12]
   17a14:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a18:	mov	r0, r4
   17a1c:	pop	{r4, sl, fp, lr}
   17a20:	b	12a88 <__mempcpy_chk@plt+0x14a8>
   17a24:	push	{r4, r5, fp, lr}
   17a28:	add	fp, sp, #8
   17a2c:	ldr	r4, [r0]
   17a30:	ldr	r0, [r4, #56]	; 0x38
   17a34:	cmp	r0, #0
   17a38:	beq	17a50 <__mempcpy_chk@plt+0x6470>
   17a3c:	ldr	r5, [r0]
   17a40:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a44:	cmp	r5, #0
   17a48:	mov	r0, r5
   17a4c:	bne	17a3c <__mempcpy_chk@plt+0x645c>
   17a50:	mov	r0, #31
   17a54:	mov	r5, #0
   17a58:	str	r0, [r4, #64]	; 0x40
   17a5c:	str	r5, [r4, #52]	; 0x34
   17a60:	str	r5, [r4, #56]	; 0x38
   17a64:	ldr	r0, [r4, #16]
   17a68:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a6c:	str	r5, [r4, #16]
   17a70:	pop	{r4, r5, fp, pc}
   17a74:	push	{r4, sl, fp, lr}
   17a78:	add	fp, sp, #8
   17a7c:	mov	r4, r0
   17a80:	ldr	r0, [r0, #8]
   17a84:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a88:	ldr	r0, [r4, #12]
   17a8c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   17a90:	ldrb	r0, [r4, #75]	; 0x4b
   17a94:	cmp	r0, #0
   17a98:	popeq	{r4, sl, fp, pc}
   17a9c:	ldr	r0, [r4, #4]
   17aa0:	pop	{r4, sl, fp, lr}
   17aa4:	b	12a88 <__mempcpy_chk@plt+0x14a8>
   17aa8:	push	{r4, r5, r6, r7, fp, lr}
   17aac:	add	fp, sp, #16
   17ab0:	mov	r5, r0
   17ab4:	ldr	r0, [r0, #80]	; 0x50
   17ab8:	mov	r4, r1
   17abc:	cmp	r0, #2
   17ac0:	blt	17b0c <__mempcpy_chk@plt+0x652c>
   17ac4:	mov	r6, #12
   17ac8:	cmn	r4, #-1073741823	; 0xc0000001
   17acc:	bhi	17b38 <__mempcpy_chk@plt+0x6558>
   17ad0:	ldr	r0, [r5, #8]
   17ad4:	lsl	r7, r4, #2
   17ad8:	mov	r1, r7
   17adc:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   17ae0:	cmp	r0, #0
   17ae4:	beq	17b38 <__mempcpy_chk@plt+0x6558>
   17ae8:	str	r0, [r5, #8]
   17aec:	ldr	r0, [r5, #12]
   17af0:	cmp	r0, #0
   17af4:	beq	17b0c <__mempcpy_chk@plt+0x652c>
   17af8:	mov	r1, r7
   17afc:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   17b00:	cmp	r0, #0
   17b04:	beq	17b38 <__mempcpy_chk@plt+0x6558>
   17b08:	str	r0, [r5, #12]
   17b0c:	ldrb	r0, [r5, #75]	; 0x4b
   17b10:	cmp	r0, #0
   17b14:	beq	17b30 <__mempcpy_chk@plt+0x6550>
   17b18:	ldr	r0, [r5, #4]
   17b1c:	mov	r1, r4
   17b20:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   17b24:	cmp	r0, #0
   17b28:	beq	17b40 <__mempcpy_chk@plt+0x6560>
   17b2c:	str	r0, [r5, #4]
   17b30:	mov	r6, #0
   17b34:	str	r4, [r5, #36]	; 0x24
   17b38:	mov	r0, r6
   17b3c:	pop	{r4, r5, r6, r7, fp, pc}
   17b40:	mov	r6, #12
   17b44:	b	17b38 <__mempcpy_chk@plt+0x6558>
   17b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b4c:	add	fp, sp, #28
   17b50:	sub	sp, sp, #92	; 0x5c
   17b54:	mov	r6, r0
   17b58:	ldrb	r0, [r0, #74]	; 0x4a
   17b5c:	ldr	r8, [r6, #36]	; 0x24
   17b60:	ldr	r1, [r6, #48]	; 0x30
   17b64:	ldr	sl, [r6, #28]
   17b68:	str	r6, [sp]
   17b6c:	cmp	r8, r1
   17b70:	movgt	r8, r1
   17b74:	cmp	r0, #0
   17b78:	bne	17b94 <__mempcpy_chk@plt+0x65b4>
   17b7c:	ldr	r0, [r6, #64]	; 0x40
   17b80:	cmp	r0, #0
   17b84:	bne	17b94 <__mempcpy_chk@plt+0x65b4>
   17b88:	ldrb	r0, [r6, #76]	; 0x4c
   17b8c:	cmp	r0, #0
   17b90:	beq	17b9c <__mempcpy_chk@plt+0x65bc>
   17b94:	ldr	r7, [r6, #32]
   17b98:	b	17d8c <__mempcpy_chk@plt+0x67ac>
   17b9c:	cmp	r8, sl
   17ba0:	ble	17d60 <__mempcpy_chk@plt+0x6780>
   17ba4:	add	r9, r6, #16
   17ba8:	str	r8, [sp, #4]
   17bac:	ldr	r7, [r6, #24]
   17bb0:	ldr	r4, [r6]
   17bb4:	mov	r5, sl
   17bb8:	add	r0, r7, sl
   17bbc:	ldrb	r6, [r4, r0]
   17bc0:	tst	r6, #128	; 0x80
   17bc4:	bne	17c08 <__mempcpy_chk@plt+0x6628>
   17bc8:	mov	r0, r9
   17bcc:	bl	1137c <mbsinit@plt>
   17bd0:	cmp	r0, #0
   17bd4:	add	sl, sp, #16
   17bd8:	beq	17c1c <__mempcpy_chk@plt+0x663c>
   17bdc:	mov	r0, r6
   17be0:	bl	115a4 <towupper@plt>
   17be4:	cmp	r0, #128	; 0x80
   17be8:	bcs	17c10 <__mempcpy_chk@plt+0x6630>
   17bec:	ldr	r2, [sp]
   17bf0:	add	sl, r5, #1
   17bf4:	ldr	r1, [r2, #4]
   17bf8:	strb	r0, [r1, r5]
   17bfc:	ldr	r1, [r2, #8]
   17c00:	str	r0, [r1, r5, lsl #2]
   17c04:	b	17cf8 <__mempcpy_chk@plt+0x6718>
   17c08:	add	sl, sp, #16
   17c0c:	b	17c1c <__mempcpy_chk@plt+0x663c>
   17c10:	ldr	r0, [sp]
   17c14:	ldr	r4, [r0]
   17c18:	ldr	r7, [r0, #24]
   17c1c:	ldm	r9, {r0, r1}
   17c20:	str	r1, [fp, #-36]	; 0xffffffdc
   17c24:	sub	r2, r8, r5
   17c28:	mov	r3, r9
   17c2c:	str	r0, [fp, #-40]	; 0xffffffd8
   17c30:	add	r0, r4, r7
   17c34:	mov	r7, r5
   17c38:	add	r1, r0, r5
   17c3c:	add	r0, sp, #12
   17c40:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   17c44:	sub	r8, r0, #1
   17c48:	mov	r4, r0
   17c4c:	cmn	r8, #4
   17c50:	bhi	17d10 <__mempcpy_chk@plt+0x6730>
   17c54:	ldr	r0, [sp, #12]
   17c58:	bl	115a4 <towupper@plt>
   17c5c:	mov	r6, r0
   17c60:	ldr	r0, [sp, #12]
   17c64:	cmp	r6, r0
   17c68:	bne	17c8c <__mempcpy_chk@plt+0x66ac>
   17c6c:	ldr	r5, [sp]
   17c70:	ldr	r1, [r5]
   17c74:	ldr	r2, [r5, #24]
   17c78:	ldr	r0, [r5, #4]
   17c7c:	add	r1, r1, r2
   17c80:	add	r0, r0, r7
   17c84:	add	r1, r1, r7
   17c88:	b	17cb4 <__mempcpy_chk@plt+0x66d4>
   17c8c:	mov	r0, sl
   17c90:	mov	r1, r6
   17c94:	sub	r2, fp, #40	; 0x28
   17c98:	bl	112d4 <wcrtomb@plt>
   17c9c:	cmp	r4, r0
   17ca0:	bne	17d68 <__mempcpy_chk@plt+0x6788>
   17ca4:	ldr	r5, [sp]
   17ca8:	mov	r1, sl
   17cac:	ldr	r0, [r5, #4]
   17cb0:	add	r0, r0, r7
   17cb4:	mov	r2, r4
   17cb8:	bl	1134c <memcpy@plt>
   17cbc:	ldr	r0, [r5, #8]
   17cc0:	add	sl, r7, #1
   17cc4:	str	r6, [r0, r7, lsl #2]
   17cc8:	add	r6, r4, r7
   17ccc:	cmp	sl, r6
   17cd0:	bge	17cf8 <__mempcpy_chk@plt+0x6718>
   17cd4:	add	r0, r0, r7, lsl #2
   17cd8:	mvn	r1, #3
   17cdc:	add	r2, r1, r4, lsl #2
   17ce0:	mov	r1, #255	; 0xff
   17ce4:	add	r0, r0, #4
   17ce8:	bl	114f0 <memset@plt>
   17cec:	subs	r8, r8, #1
   17cf0:	bne	17cec <__mempcpy_chk@plt+0x670c>
   17cf4:	mov	sl, r6
   17cf8:	ldr	r8, [sp, #4]
   17cfc:	ldr	r6, [sp]
   17d00:	mov	r7, sl
   17d04:	cmp	r8, sl
   17d08:	bgt	17bac <__mempcpy_chk@plt+0x65cc>
   17d0c:	b	180d8 <__mempcpy_chk@plt+0x6af8>
   17d10:	add	r0, r4, #1
   17d14:	cmp	r0, #2
   17d18:	bcc	17d30 <__mempcpy_chk@plt+0x6750>
   17d1c:	ldr	r1, [sp]
   17d20:	ldr	r0, [r1, #36]	; 0x24
   17d24:	ldr	r1, [r1, #48]	; 0x30
   17d28:	cmp	r0, r1
   17d2c:	blt	17d74 <__mempcpy_chk@plt+0x6794>
   17d30:	ldr	r1, [sp]
   17d34:	add	sl, r7, #1
   17d38:	cmn	r4, #1
   17d3c:	ldr	r0, [r1, #4]
   17d40:	strb	r6, [r0, r7]
   17d44:	ldr	r0, [r1, #8]
   17d48:	str	r6, [r0, r7, lsl #2]
   17d4c:	bne	17cf8 <__mempcpy_chk@plt+0x6718>
   17d50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17d58:	stm	r9, {r0, r1}
   17d5c:	b	17cf8 <__mempcpy_chk@plt+0x6718>
   17d60:	mov	r7, sl
   17d64:	b	180d8 <__mempcpy_chk@plt+0x6af8>
   17d68:	ldm	sp, {r6, r8}
   17d6c:	mov	sl, r7
   17d70:	b	17d94 <__mempcpy_chk@plt+0x67b4>
   17d74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17d7c:	mov	sl, r7
   17d80:	stm	r9, {r0, r1}
   17d84:	ldr	r6, [sp]
   17d88:	b	180d8 <__mempcpy_chk@plt+0x6af8>
   17d8c:	cmp	sl, r8
   17d90:	bge	180d8 <__mempcpy_chk@plt+0x6af8>
   17d94:	mov	r3, r6
   17d98:	ldr	r0, [r6, #16]!
   17d9c:	sub	r2, r8, sl
   17da0:	str	r7, [sp, #4]
   17da4:	ldr	r1, [r6, #4]
   17da8:	str	r0, [fp, #-40]	; 0xffffffd8
   17dac:	str	r1, [fp, #-36]	; 0xffffffdc
   17db0:	ldr	r0, [r6, #48]	; 0x30
   17db4:	cmp	r0, #0
   17db8:	bne	17e98 <__mempcpy_chk@plt+0x68b8>
   17dbc:	ldr	r0, [r3]
   17dc0:	ldr	r1, [r3, #24]
   17dc4:	add	r0, r0, r1
   17dc8:	add	r4, r0, r7
   17dcc:	add	r0, sp, #8
   17dd0:	mov	r1, r4
   17dd4:	mov	r3, r6
   17dd8:	mov	r9, r8
   17ddc:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   17de0:	sub	r8, r0, #1
   17de4:	mov	r5, r0
   17de8:	cmn	r8, #4
   17dec:	bhi	17ef8 <__mempcpy_chk@plt+0x6918>
   17df0:	ldr	r0, [sp, #8]
   17df4:	bl	115a4 <towupper@plt>
   17df8:	mov	r7, r0
   17dfc:	ldr	r0, [sp, #8]
   17e00:	cmp	r7, r0
   17e04:	bne	17e14 <__mempcpy_chk@plt+0x6834>
   17e08:	ldr	r6, [sp]
   17e0c:	mov	r1, r4
   17e10:	b	17e34 <__mempcpy_chk@plt+0x6854>
   17e14:	add	r0, sp, #16
   17e18:	sub	r2, fp, #40	; 0x28
   17e1c:	mov	r1, r7
   17e20:	bl	112d4 <wcrtomb@plt>
   17e24:	cmp	r0, r5
   17e28:	bne	17f74 <__mempcpy_chk@plt+0x6994>
   17e2c:	ldr	r6, [sp]
   17e30:	add	r1, sp, #16
   17e34:	ldr	r0, [r6, #4]
   17e38:	add	r0, r0, sl
   17e3c:	mov	r2, r5
   17e40:	bl	1134c <memcpy@plt>
   17e44:	ldrb	r0, [r6, #76]	; 0x4c
   17e48:	cmp	r0, #0
   17e4c:	bne	180a0 <__mempcpy_chk@plt+0x6ac0>
   17e50:	ldr	r0, [r6, #8]
   17e54:	add	r4, r5, sl
   17e58:	str	r7, [r0, sl, lsl #2]
   17e5c:	ldr	r7, [sp, #4]
   17e60:	add	sl, sl, #1
   17e64:	cmp	sl, r4
   17e68:	add	r7, r5, r7
   17e6c:	bge	17e90 <__mempcpy_chk@plt+0x68b0>
   17e70:	mvn	r1, #3
   17e74:	add	r0, r0, sl, lsl #2
   17e78:	add	r2, r1, r5, lsl #2
   17e7c:	mov	r1, #255	; 0xff
   17e80:	bl	114f0 <memset@plt>
   17e84:	subs	r8, r8, #1
   17e88:	bne	17e84 <__mempcpy_chk@plt+0x68a4>
   17e8c:	mov	sl, r4
   17e90:	mov	r8, r9
   17e94:	b	17d8c <__mempcpy_chk@plt+0x67ac>
   17e98:	add	r4, sp, #16
   17e9c:	cmp	r2, #1
   17ea0:	blt	17dcc <__mempcpy_chk@plt+0x67ec>
   17ea4:	ldr	r1, [sp]
   17ea8:	ldr	r1, [r1, #80]	; 0x50
   17eac:	cmp	r1, #1
   17eb0:	blt	17dcc <__mempcpy_chk@plt+0x67ec>
   17eb4:	ldr	r4, [sp]
   17eb8:	mov	r5, r7
   17ebc:	ldr	r7, [r4, #24]
   17ec0:	ldr	r3, [r4]
   17ec4:	add	r4, sp, #16
   17ec8:	add	r7, r5, r7
   17ecc:	add	r3, r3, r7
   17ed0:	mov	r7, #0
   17ed4:	ldrb	r5, [r3, r7]
   17ed8:	ldrb	r5, [r0, r5]
   17edc:	strb	r5, [r4, r7]
   17ee0:	add	r7, r7, #1
   17ee4:	cmp	r7, r2
   17ee8:	bge	17dcc <__mempcpy_chk@plt+0x67ec>
   17eec:	cmp	r7, r1
   17ef0:	blt	17ed4 <__mempcpy_chk@plt+0x68f4>
   17ef4:	b	17dcc <__mempcpy_chk@plt+0x67ec>
   17ef8:	ldr	r3, [sp]
   17efc:	add	r0, r5, #1
   17f00:	cmp	r0, #2
   17f04:	bcc	17f18 <__mempcpy_chk@plt+0x6938>
   17f08:	ldr	r0, [r3, #36]	; 0x24
   17f0c:	ldr	r1, [r3, #48]	; 0x30
   17f10:	cmp	r0, r1
   17f14:	blt	180c4 <__mempcpy_chk@plt+0x6ae4>
   17f18:	ldr	r2, [r3, #24]
   17f1c:	ldr	r7, [sp, #4]
   17f20:	ldr	r0, [r3]
   17f24:	ldr	r1, [r3, #64]	; 0x40
   17f28:	add	r2, r2, r7
   17f2c:	cmp	r1, #0
   17f30:	ldrb	r0, [r0, r2]
   17f34:	bne	180f4 <__mempcpy_chk@plt+0x6b14>
   17f38:	ldr	r2, [sp]
   17f3c:	mov	r8, r9
   17f40:	ldr	r1, [r2, #4]
   17f44:	strb	r0, [r1, sl]
   17f48:	ldrb	r1, [r2, #76]	; 0x4c
   17f4c:	cmp	r1, #0
   17f50:	bne	180fc <__mempcpy_chk@plt+0x6b1c>
   17f54:	ldr	r1, [r2, #8]
   17f58:	add	r7, r7, #1
   17f5c:	cmn	r5, #1
   17f60:	str	r0, [r1, sl, lsl #2]
   17f64:	add	sl, sl, #1
   17f68:	beq	18108 <__mempcpy_chk@plt+0x6b28>
   17f6c:	ldr	r6, [sp]
   17f70:	b	17d8c <__mempcpy_chk@plt+0x67ac>
   17f74:	mov	r2, r0
   17f78:	cmn	r0, #1
   17f7c:	beq	17e08 <__mempcpy_chk@plt+0x6828>
   17f80:	ldr	r3, [sp]
   17f84:	add	r9, r2, sl
   17f88:	ldr	r1, [r3, #36]	; 0x24
   17f8c:	cmp	r9, r1
   17f90:	bhi	180c4 <__mempcpy_chk@plt+0x6ae4>
   17f94:	ldr	r0, [r3, #12]
   17f98:	mov	r6, r3
   17f9c:	cmp	r0, #0
   17fa0:	bne	17fc0 <__mempcpy_chk@plt+0x69e0>
   17fa4:	lsl	r0, r1, #2
   17fa8:	mov	r4, r2
   17fac:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   17fb0:	mov	r2, r4
   17fb4:	cmp	r0, #0
   17fb8:	str	r0, [r6, #12]
   17fbc:	beq	180ec <__mempcpy_chk@plt+0x6b0c>
   17fc0:	ldrb	r1, [r6, #76]	; 0x4c
   17fc4:	cmp	r1, #0
   17fc8:	bne	17ff0 <__mempcpy_chk@plt+0x6a10>
   17fcc:	cmp	sl, #0
   17fd0:	beq	17fe8 <__mempcpy_chk@plt+0x6a08>
   17fd4:	mov	r1, #0
   17fd8:	str	r1, [r0, r1, lsl #2]
   17fdc:	add	r1, r1, #1
   17fe0:	cmp	sl, r1
   17fe4:	bne	17fd8 <__mempcpy_chk@plt+0x69f8>
   17fe8:	mov	r0, #1
   17fec:	strb	r0, [r6, #76]	; 0x4c
   17ff0:	ldr	r0, [r6, #4]
   17ff4:	add	r1, sp, #16
   17ff8:	mov	r4, r2
   17ffc:	add	r0, r0, sl
   18000:	bl	1134c <memcpy@plt>
   18004:	ldr	r1, [r6, #8]
   18008:	cmp	r4, #2
   1800c:	str	r7, [r1, sl, lsl #2]
   18010:	ldr	r0, [r6, #12]
   18014:	ldr	r6, [sp, #4]
   18018:	str	r6, [r0, sl, lsl #2]
   1801c:	bcc	18054 <__mempcpy_chk@plt+0x6a74>
   18020:	add	r0, r0, sl, lsl #2
   18024:	add	r1, r1, sl, lsl #2
   18028:	mov	r2, #1
   1802c:	mvn	r3, #0
   18030:	cmp	r2, r5
   18034:	mov	r7, r8
   18038:	movcc	r7, r2
   1803c:	add	r7, r7, r6
   18040:	str	r7, [r0, r2, lsl #2]
   18044:	str	r3, [r1, r2, lsl #2]
   18048:	add	r2, r2, #1
   1804c:	cmp	r4, r2
   18050:	bne	18030 <__mempcpy_chk@plt+0x6a50>
   18054:	ldr	r3, [sp]
   18058:	sub	r1, r4, r5
   1805c:	mov	r7, r6
   18060:	ldr	r0, [r3, #48]	; 0x30
   18064:	ldr	r2, [r3, #52]	; 0x34
   18068:	add	r0, r0, r1
   1806c:	cmp	r2, r6
   18070:	mov	r6, r3
   18074:	str	r0, [r3, #48]	; 0x30
   18078:	ble	18088 <__mempcpy_chk@plt+0x6aa8>
   1807c:	ldr	r2, [r6, #56]	; 0x38
   18080:	add	r1, r2, r1
   18084:	str	r1, [r6, #56]	; 0x38
   18088:	ldr	r8, [r6, #36]	; 0x24
   1808c:	add	r7, r5, r7
   18090:	mov	sl, r9
   18094:	cmp	r8, r0
   18098:	movgt	r8, r0
   1809c:	b	17d8c <__mempcpy_chk@plt+0x67ac>
   180a0:	ldr	r0, [r6, #12]
   180a4:	ldr	r1, [sp, #4]
   180a8:	mov	r2, r5
   180ac:	add	r0, r0, sl, lsl #2
   180b0:	str	r1, [r0], #4
   180b4:	add	r1, r1, #1
   180b8:	subs	r2, r2, #1
   180bc:	bne	180b0 <__mempcpy_chk@plt+0x6ad0>
   180c0:	b	17e50 <__mempcpy_chk@plt+0x6870>
   180c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   180c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   180cc:	stm	r6, {r0, r1}
   180d0:	mov	r6, r3
   180d4:	ldr	r7, [sp, #4]
   180d8:	mov	r0, #0
   180dc:	str	sl, [r6, #28]
   180e0:	str	r7, [r6, #32]
   180e4:	sub	sp, fp, #28
   180e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180ec:	mov	r0, #12
   180f0:	b	180e4 <__mempcpy_chk@plt+0x6b04>
   180f4:	ldrb	r0, [r1, r0]
   180f8:	b	17f38 <__mempcpy_chk@plt+0x6958>
   180fc:	ldr	r1, [r2, #12]
   18100:	str	r7, [r1, sl, lsl #2]
   18104:	b	17f54 <__mempcpy_chk@plt+0x6974>
   18108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1810c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18110:	stm	r6, {r0, r1}
   18114:	b	17f6c <__mempcpy_chk@plt+0x698c>
   18118:	push	{r4, r5, r6, sl, fp, lr}
   1811c:	add	fp, sp, #16
   18120:	mov	r4, r0
   18124:	ldr	r5, [r0, #28]
   18128:	ldr	r6, [r0, #36]	; 0x24
   1812c:	ldr	r0, [r0, #48]	; 0x30
   18130:	cmp	r6, r0
   18134:	movgt	r6, r0
   18138:	cmp	r5, r6
   1813c:	bge	18178 <__mempcpy_chk@plt+0x6b98>
   18140:	ldr	r0, [r4]
   18144:	ldr	r2, [r4, #24]
   18148:	ldr	r1, [r4, #64]	; 0x40
   1814c:	add	r0, r0, r2
   18150:	cmp	r1, #0
   18154:	ldrb	r0, [r0, r5]
   18158:	bne	18170 <__mempcpy_chk@plt+0x6b90>
   1815c:	bl	1155c <toupper@plt>
   18160:	ldr	r1, [r4, #4]
   18164:	strb	r0, [r1, r5]
   18168:	add	r5, r5, #1
   1816c:	b	18138 <__mempcpy_chk@plt+0x6b58>
   18170:	ldrb	r0, [r1, r0]
   18174:	b	1815c <__mempcpy_chk@plt+0x6b7c>
   18178:	str	r5, [r4, #28]
   1817c:	str	r5, [r4, #32]
   18180:	pop	{r4, r5, r6, sl, fp, pc}
   18184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18188:	add	fp, sp, #28
   1818c:	sub	sp, sp, #76	; 0x4c
   18190:	mov	r4, r0
   18194:	ldr	sl, [r0, #28]
   18198:	ldr	r6, [r0, #36]	; 0x24
   1819c:	ldr	r0, [r0, #48]	; 0x30
   181a0:	cmp	r6, r0
   181a4:	movgt	r6, r0
   181a8:	cmp	r6, sl
   181ac:	ble	1835c <__mempcpy_chk@plt+0x6d7c>
   181b0:	add	r9, r4, #16
   181b4:	add	r0, sp, #8
   181b8:	ldr	r3, [r4, #64]	; 0x40
   181bc:	ldm	r9, {r1, r5}
   181c0:	sub	r2, r6, sl
   181c4:	str	r1, [sp, #4]
   181c8:	cmp	r3, #0
   181cc:	bne	1829c <__mempcpy_chk@plt+0x6cbc>
   181d0:	ldr	r3, [r4]
   181d4:	ldr	r1, [r4, #24]
   181d8:	add	r1, r3, r1
   181dc:	add	r1, r1, sl
   181e0:	mov	r3, r9
   181e4:	mov	r8, r0
   181e8:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   181ec:	mov	r7, r0
   181f0:	add	r0, r0, #1
   181f4:	cmp	r0, #2
   181f8:	bcc	18214 <__mempcpy_chk@plt+0x6c34>
   181fc:	cmn	r7, #2
   18200:	bne	18244 <__mempcpy_chk@plt+0x6c64>
   18204:	ldr	r0, [r4, #36]	; 0x24
   18208:	ldr	r1, [r4, #48]	; 0x30
   1820c:	cmp	r0, r1
   18210:	blt	18354 <__mempcpy_chk@plt+0x6d74>
   18214:	ldr	r1, [r4, #24]
   18218:	ldr	r0, [r4]
   1821c:	add	r1, r1, sl
   18220:	ldrb	r0, [r0, r1]
   18224:	str	r0, [sp, #8]
   18228:	ldr	r1, [r4, #64]	; 0x40
   1822c:	cmp	r1, #0
   18230:	bne	18348 <__mempcpy_chk@plt+0x6d68>
   18234:	ldr	r1, [sp, #4]
   18238:	mov	r7, #1
   1823c:	stm	r9, {r1, r5}
   18240:	b	18248 <__mempcpy_chk@plt+0x6c68>
   18244:	ldr	r0, [sp, #8]
   18248:	ldr	r1, [r4, #8]
   1824c:	add	r5, r7, sl
   18250:	add	r2, sl, #1
   18254:	cmp	r2, r5
   18258:	str	r0, [r1, sl, lsl #2]
   1825c:	bge	18288 <__mempcpy_chk@plt+0x6ca8>
   18260:	mvn	r0, #3
   18264:	add	r2, r0, r7, lsl #2
   18268:	add	r0, r1, sl, lsl #2
   1826c:	mov	r1, #255	; 0xff
   18270:	add	r0, r0, #4
   18274:	bl	114f0 <memset@plt>
   18278:	sub	r0, r7, #1
   1827c:	subs	r0, r0, #1
   18280:	bne	1827c <__mempcpy_chk@plt+0x6c9c>
   18284:	mov	r2, r5
   18288:	cmp	r6, r2
   1828c:	mov	sl, r2
   18290:	mov	r0, r8
   18294:	bgt	181b8 <__mempcpy_chk@plt+0x6bd8>
   18298:	b	18360 <__mempcpy_chk@plt+0x6d80>
   1829c:	cmp	r2, #1
   182a0:	add	r1, sp, #12
   182a4:	blt	181e0 <__mempcpy_chk@plt+0x6c00>
   182a8:	ldr	r1, [r4, #80]	; 0x50
   182ac:	cmp	r1, #1
   182b0:	add	r1, sp, #12
   182b4:	blt	181e0 <__mempcpy_chk@plt+0x6c00>
   182b8:	ldr	r7, [r4, #24]
   182bc:	ldm	r4, {r1, ip}
   182c0:	cmp	r2, #2
   182c4:	add	r7, sl, r7
   182c8:	ldrb	r1, [r1, r7]
   182cc:	ldrb	r1, [r3, r1]
   182d0:	strb	r1, [ip, sl]
   182d4:	strb	r1, [sp, #12]
   182d8:	add	r1, sp, #12
   182dc:	blt	181e0 <__mempcpy_chk@plt+0x6c00>
   182e0:	ldr	r1, [r4, #80]	; 0x50
   182e4:	cmp	r1, #2
   182e8:	add	r1, sp, #12
   182ec:	blt	181e0 <__mempcpy_chk@plt+0x6c00>
   182f0:	mov	lr, r0
   182f4:	mov	r0, #1
   182f8:	ldr	r7, [r4, #24]
   182fc:	ldm	r4, {r1, ip}
   18300:	ldr	r3, [r4, #64]	; 0x40
   18304:	add	r1, r1, r7
   18308:	add	r1, r1, sl
   1830c:	ldrb	r1, [r1, r0]
   18310:	ldrb	r1, [r3, r1]
   18314:	add	r3, ip, sl
   18318:	strb	r1, [r3, r0]
   1831c:	add	r3, sp, #12
   18320:	strb	r1, [r3, r0]
   18324:	add	r0, r0, #1
   18328:	cmp	r0, r2
   1832c:	bge	1833c <__mempcpy_chk@plt+0x6d5c>
   18330:	ldr	r1, [r4, #80]	; 0x50
   18334:	cmp	r0, r1
   18338:	blt	182f8 <__mempcpy_chk@plt+0x6d18>
   1833c:	add	r1, sp, #12
   18340:	mov	r0, lr
   18344:	b	181e0 <__mempcpy_chk@plt+0x6c00>
   18348:	ldrb	r0, [r1, r0]
   1834c:	str	r0, [sp, #8]
   18350:	b	18234 <__mempcpy_chk@plt+0x6c54>
   18354:	ldr	r0, [sp, #4]
   18358:	stm	r9, {r0, r5}
   1835c:	mov	r2, sl
   18360:	str	r2, [r4, #28]
   18364:	str	r2, [r4, #32]
   18368:	sub	sp, fp, #28
   1836c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18370:	push	{r4, sl, fp, lr}
   18374:	add	fp, sp, #8
   18378:	ldr	ip, [r0, #36]	; 0x24
   1837c:	ldr	r3, [r0, #48]	; 0x30
   18380:	ldr	r1, [r0, #28]
   18384:	cmp	ip, r3
   18388:	movgt	ip, r3
   1838c:	cmp	r1, ip
   18390:	bge	183b8 <__mempcpy_chk@plt+0x6dd8>
   18394:	ldr	r2, [r0, #24]
   18398:	ldm	r0, {r3, lr}
   1839c:	ldr	r4, [r0, #64]	; 0x40
   183a0:	add	r2, r3, r2
   183a4:	ldrb	r2, [r2, r1]
   183a8:	ldrb	r2, [r4, r2]
   183ac:	strb	r2, [lr, r1]
   183b0:	add	r1, r1, #1
   183b4:	b	1838c <__mempcpy_chk@plt+0x6dac>
   183b8:	str	r1, [r0, #28]
   183bc:	str	r1, [r0, #32]
   183c0:	pop	{r4, sl, fp, pc}
   183c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183c8:	add	fp, sp, #28
   183cc:	sub	sp, sp, #28
   183d0:	ldr	r9, [r1]
   183d4:	mov	r5, r0
   183d8:	ldr	r8, [fp, #12]
   183dc:	mov	r6, r2
   183e0:	str	r1, [sp, #12]
   183e4:	str	r3, [sp, #16]
   183e8:	ldr	r0, [r9, #84]	; 0x54
   183ec:	str	r8, [sp, #4]
   183f0:	str	r0, [sp, #8]
   183f4:	ldr	r0, [fp, #8]
   183f8:	str	r0, [sp]
   183fc:	mov	r0, r5
   18400:	bl	18c04 <__mempcpy_chk@plt+0x7624>
   18404:	mov	r4, r0
   18408:	cmp	r0, #0
   1840c:	bne	1841c <__mempcpy_chk@plt+0x6e3c>
   18410:	ldr	r0, [r8]
   18414:	cmp	r0, #0
   18418:	bne	1850c <__mempcpy_chk@plt+0x6f2c>
   1841c:	ldr	r0, [sp, #16]
   18420:	ldr	r8, [fp, #8]
   18424:	mov	r7, #10
   18428:	orr	sl, r0, #8388608	; 0x800000
   1842c:	ldrb	r0, [r6, #4]
   18430:	cmp	r0, #10
   18434:	bne	18510 <__mempcpy_chk@plt+0x6f30>
   18438:	mov	r0, r6
   1843c:	mov	r1, r5
   18440:	mov	r2, sl
   18444:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   18448:	ldr	r1, [r5, #40]	; 0x28
   1844c:	mov	r2, #0
   18450:	add	r0, r1, r0
   18454:	str	r0, [r5, #40]	; 0x28
   18458:	ldrb	r0, [r6, #4]
   1845c:	orr	r1, r0, #8
   18460:	cmp	r1, #10
   18464:	bne	18494 <__mempcpy_chk@plt+0x6eb4>
   18468:	mov	r0, #0
   1846c:	str	r7, [sp, #24]
   18470:	mov	r1, r4
   18474:	add	r3, sp, #20
   18478:	str	r0, [sp, #20]
   1847c:	mov	r0, r9
   18480:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   18484:	mov	r4, r0
   18488:	cmp	r0, #0
   1848c:	bne	1842c <__mempcpy_chk@plt+0x6e4c>
   18490:	b	18500 <__mempcpy_chk@plt+0x6f20>
   18494:	cmp	r8, #0
   18498:	beq	184a4 <__mempcpy_chk@plt+0x6ec4>
   1849c:	cmp	r0, #9
   184a0:	beq	18468 <__mempcpy_chk@plt+0x6e88>
   184a4:	ldr	r0, [sp, #8]
   184a8:	ldr	r7, [r9, #84]	; 0x54
   184ac:	ldr	r1, [sp, #12]
   184b0:	ldr	r3, [sp, #16]
   184b4:	mov	r2, r6
   184b8:	str	r0, [r9, #84]	; 0x54
   184bc:	str	r8, [sp]
   184c0:	ldr	r8, [fp, #12]
   184c4:	mov	r0, r5
   184c8:	str	r8, [sp, #4]
   184cc:	bl	18c04 <__mempcpy_chk@plt+0x7624>
   184d0:	mov	r2, r0
   184d4:	cmp	r0, #0
   184d8:	bne	184e8 <__mempcpy_chk@plt+0x6f08>
   184dc:	ldr	r0, [r8]
   184e0:	cmp	r0, #0
   184e4:	bne	1851c <__mempcpy_chk@plt+0x6f3c>
   184e8:	ldr	r0, [r9, #84]	; 0x54
   184ec:	ldr	r8, [fp, #8]
   184f0:	orr	r0, r0, r7
   184f4:	mov	r7, #10
   184f8:	str	r0, [r9, #84]	; 0x54
   184fc:	b	18468 <__mempcpy_chk@plt+0x6e88>
   18500:	ldr	r1, [fp, #12]
   18504:	mov	r0, #12
   18508:	str	r0, [r1]
   1850c:	mov	r4, #0
   18510:	mov	r0, r4
   18514:	sub	sp, fp, #28
   18518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1851c:	cmp	r4, #0
   18520:	beq	1850c <__mempcpy_chk@plt+0x6f2c>
   18524:	mov	r5, r4
   18528:	ldr	r4, [r4, #4]
   1852c:	cmp	r4, #0
   18530:	bne	18524 <__mempcpy_chk@plt+0x6f44>
   18534:	ldr	r4, [r5, #8]
   18538:	cmp	r4, #0
   1853c:	bne	18524 <__mempcpy_chk@plt+0x6f44>
   18540:	add	r0, r5, #20
   18544:	bl	1795c <__mempcpy_chk@plt+0x637c>
   18548:	ldr	r0, [r5]
   1854c:	cmp	r0, #0
   18550:	beq	1850c <__mempcpy_chk@plt+0x6f2c>
   18554:	ldr	r4, [r0, #8]
   18558:	cmp	r4, r5
   1855c:	mov	r5, r0
   18560:	beq	18540 <__mempcpy_chk@plt+0x6f60>
   18564:	cmp	r4, #0
   18568:	mov	r5, r0
   1856c:	beq	18540 <__mempcpy_chk@plt+0x6f60>
   18570:	b	18524 <__mempcpy_chk@plt+0x6f44>
   18574:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18578:	add	fp, sp, #24
   1857c:	sub	sp, sp, #8
   18580:	mov	r9, r0
   18584:	mov	r7, r1
   18588:	ldr	r0, [r1, #40]	; 0x28
   1858c:	ldr	r1, [r1, #56]	; 0x38
   18590:	cmp	r1, r0
   18594:	ble	1867c <__mempcpy_chk@plt+0x709c>
   18598:	ldr	r1, [r7, #4]
   1859c:	mov	r5, r9
   185a0:	mov	r8, r2
   185a4:	ldrb	r6, [r1, r0]
   185a8:	strb	r6, [r5], #4
   185ac:	ldr	r0, [r5]
   185b0:	bic	r1, r0, #6291456	; 0x600000
   185b4:	str	r1, [r5]
   185b8:	ldr	r3, [r7, #80]	; 0x50
   185bc:	cmp	r3, #2
   185c0:	blt	185e4 <__mempcpy_chk@plt+0x7004>
   185c4:	ldr	r2, [r7, #28]
   185c8:	ldr	r1, [r7, #40]	; 0x28
   185cc:	cmp	r1, r2
   185d0:	beq	185e4 <__mempcpy_chk@plt+0x7004>
   185d4:	ldr	r2, [r7, #8]
   185d8:	ldr	r1, [r2, r1, lsl #2]
   185dc:	cmn	r1, #1
   185e0:	beq	18938 <__mempcpy_chk@plt+0x7358>
   185e4:	movw	r1, #65280	; 0xff00
   185e8:	cmp	r6, #92	; 0x5c
   185ec:	movt	r1, #65439	; 0xff9f
   185f0:	bne	1868c <__mempcpy_chk@plt+0x70ac>
   185f4:	ldr	r6, [r7, #40]	; 0x28
   185f8:	ldr	r4, [r7, #48]	; 0x30
   185fc:	add	r2, r6, #1
   18600:	cmp	r2, r4
   18604:	bge	186e0 <__mempcpy_chk@plt+0x7100>
   18608:	ldrb	r4, [r7, #75]	; 0x4b
   1860c:	cmp	r4, #0
   18610:	bne	18b90 <__mempcpy_chk@plt+0x75b0>
   18614:	ldr	r3, [r7, #4]
   18618:	ldrb	r6, [r3, r2]
   1861c:	and	r0, r0, r1
   18620:	strb	r6, [r9]
   18624:	orr	r4, r0, #1
   18628:	str	r4, [r9, #4]
   1862c:	ldr	r0, [r7, #80]	; 0x50
   18630:	cmp	r0, #2
   18634:	blt	187f0 <__mempcpy_chk@plt+0x7210>
   18638:	ldr	r0, [r7, #8]
   1863c:	ldr	r1, [r7, #40]	; 0x28
   18640:	add	r0, r0, r1, lsl #2
   18644:	ldr	r4, [r0, #4]
   18648:	mov	r0, r4
   1864c:	bl	114d8 <iswalnum@plt>
   18650:	sub	r1, r4, #95	; 0x5f
   18654:	cmp	r0, #0
   18658:	clz	r1, r1
   1865c:	movwne	r0, #1
   18660:	lsr	r1, r1, #5
   18664:	orr	r0, r1, r0
   18668:	ldr	r1, [r5]
   1866c:	bic	r1, r1, #4194304	; 0x400000
   18670:	orr	r0, r1, r0, lsl #22
   18674:	uxtb	r1, r6
   18678:	b	18814 <__mempcpy_chk@plt+0x7234>
   1867c:	mov	r0, #2
   18680:	mov	r4, #0
   18684:	strb	r0, [r9, #4]
   18688:	b	18b64 <__mempcpy_chk@plt+0x7584>
   1868c:	and	r0, r0, r1
   18690:	orr	r4, r0, #1
   18694:	str	r4, [r5]
   18698:	ldr	r0, [r7, #80]	; 0x50
   1869c:	cmp	r0, #2
   186a0:	blt	186ec <__mempcpy_chk@plt+0x710c>
   186a4:	ldr	r0, [r7, #8]
   186a8:	ldr	r1, [r7, #40]	; 0x28
   186ac:	ldr	r4, [r0, r1, lsl #2]
   186b0:	mov	r0, r4
   186b4:	bl	114d8 <iswalnum@plt>
   186b8:	sub	r1, r4, #95	; 0x5f
   186bc:	cmp	r0, #0
   186c0:	clz	r1, r1
   186c4:	movwne	r0, #1
   186c8:	lsr	r1, r1, #5
   186cc:	orr	r0, r1, r0
   186d0:	ldr	r1, [r5]
   186d4:	bic	r1, r1, #4194304	; 0x400000
   186d8:	orr	r0, r1, r0, lsl #22
   186dc:	b	1870c <__mempcpy_chk@plt+0x712c>
   186e0:	and	r0, r0, r1
   186e4:	orr	r0, r0, #36	; 0x24
   186e8:	b	1894c <__mempcpy_chk@plt+0x736c>
   186ec:	bl	1149c <__ctype_b_loc@plt>
   186f0:	ldr	r0, [r0]
   186f4:	cmp	r6, #95	; 0x5f
   186f8:	add	r0, r0, r6, lsl #1
   186fc:	ldrh	r0, [r0]
   18700:	ubfx	r0, r0, #3, #1
   18704:	movweq	r0, #1
   18708:	orr	r0, r4, r0, lsl #22
   1870c:	mov	r4, #1
   18710:	cmp	r6, #62	; 0x3e
   18714:	str	r0, [r5]
   18718:	bgt	187b4 <__mempcpy_chk@plt+0x71d4>
   1871c:	sub	r1, r6, #36	; 0x24
   18720:	cmp	r1, #10
   18724:	bhi	189a8 <__mempcpy_chk@plt+0x73c8>
   18728:	add	r2, pc, #0
   1872c:	ldr	pc, [r2, r1, lsl #2]
   18730:	andeq	r8, r1, ip, asr r7
   18734:	andeq	r8, r1, r4, ror #22
   18738:	andeq	r8, r1, r4, ror #22
   1873c:	andeq	r8, r1, r4, ror #22
   18740:			; <UNDEFINED> instruction: 0x000189bc
   18744:	andeq	r8, r1, ip, asr #19
   18748:	ldrdeq	r8, [r1], -ip
   1874c:	andeq	r8, r1, r4, ror #19
   18750:	andeq	r8, r1, r4, ror #22
   18754:	andeq	r8, r1, r4, ror #22
   18758:	strdeq	r8, [r1], -r4
   1875c:	tst	r8, #8
   18760:	bne	187ac <__mempcpy_chk@plt+0x71cc>
   18764:	ldr	r1, [r7, #40]	; 0x28
   18768:	ldr	r2, [r7, #48]	; 0x30
   1876c:	add	r1, r1, #1
   18770:	cmp	r1, r2
   18774:	beq	187ac <__mempcpy_chk@plt+0x71cc>
   18778:	str	r1, [r7, #40]	; 0x28
   1877c:	mov	r0, sp
   18780:	mov	r1, r7
   18784:	mov	r2, r8
   18788:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   1878c:	ldr	r0, [r7, #40]	; 0x28
   18790:	sub	r0, r0, #1
   18794:	str	r0, [r7, #40]	; 0x28
   18798:	ldrb	r0, [sp, #4]
   1879c:	sub	r0, r0, #9
   187a0:	cmp	r0, #1
   187a4:	bhi	18b64 <__mempcpy_chk@plt+0x7584>
   187a8:	ldr	r0, [r5]
   187ac:	mov	r1, #32
   187b0:	b	187e8 <__mempcpy_chk@plt+0x7208>
   187b4:	cmp	r6, #122	; 0x7a
   187b8:	bgt	18910 <__mempcpy_chk@plt+0x7330>
   187bc:	cmp	r6, #63	; 0x3f
   187c0:	beq	189fc <__mempcpy_chk@plt+0x741c>
   187c4:	cmp	r6, #91	; 0x5b
   187c8:	beq	18a0c <__mempcpy_chk@plt+0x742c>
   187cc:	cmp	r6, #94	; 0x5e
   187d0:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   187d4:	movw	r1, #8
   187d8:	movt	r1, #128	; 0x80
   187dc:	tst	r8, r1
   187e0:	beq	18a54 <__mempcpy_chk@plt+0x7474>
   187e4:	mov	r1, #16
   187e8:	mov	r2, #12
   187ec:	b	18900 <__mempcpy_chk@plt+0x7320>
   187f0:	bl	1149c <__ctype_b_loc@plt>
   187f4:	ldr	r0, [r0]
   187f8:	uxtb	r1, r6
   187fc:	cmp	r1, #95	; 0x5f
   18800:	add	r0, r0, r1, lsl #1
   18804:	ldrh	r0, [r0]
   18808:	ubfx	r0, r0, #3, #1
   1880c:	movweq	r0, #1
   18810:	orr	r0, r4, r0, lsl #22
   18814:	uxtb	r2, r6
   18818:	mov	r4, #2
   1881c:	str	r0, [r5]
   18820:	cmp	r2, #95	; 0x5f
   18824:	bgt	18958 <__mempcpy_chk@plt+0x7378>
   18828:	sub	r3, r2, #39	; 0x27
   1882c:	cmp	r3, #44	; 0x2c
   18830:	bhi	18a80 <__mempcpy_chk@plt+0x74a0>
   18834:	add	r2, pc, #0
   18838:	ldr	pc, [r2, r3, lsl #2]
   1883c:	andeq	r8, r1, r8, ror #21
   18840:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18844:	andeq	r8, r1, r4, lsl #22
   18848:	andeq	r8, r1, r4, ror #22
   1884c:	andeq	r8, r1, r0, lsl fp
   18850:	andeq	r8, r1, r4, ror #22
   18854:	andeq	r8, r1, r4, ror #22
   18858:	andeq	r8, r1, r4, ror #22
   1885c:	andeq	r8, r1, r4, ror #22
   18860:	andeq	r8, r1, r4, ror #22
   18864:	strdeq	r8, [r1], -r0
   18868:	strdeq	r8, [r1], -r0
   1886c:	strdeq	r8, [r1], -r0
   18870:	strdeq	r8, [r1], -r0
   18874:	strdeq	r8, [r1], -r0
   18878:	strdeq	r8, [r1], -r0
   1887c:	strdeq	r8, [r1], -r0
   18880:	strdeq	r8, [r1], -r0
   18884:	strdeq	r8, [r1], -r0
   18888:	andeq	r8, r1, r4, ror #22
   1888c:	andeq	r8, r1, r4, ror #22
   18890:	andeq	r8, r1, r8, lsr #22
   18894:	andeq	r8, r1, r4, ror #22
   18898:	andeq	r8, r1, r8, lsr fp
   1889c:	andeq	r8, r1, r8, asr #22
   188a0:	andeq	r8, r1, r4, ror #22
   188a4:	andeq	r8, r1, r4, ror #22
   188a8:	andeq	r8, r1, r0, ror fp
   188ac:	andeq	r8, r1, r4, ror #22
   188b0:	andeq	r8, r1, r4, ror #22
   188b4:	andeq	r8, r1, r4, ror #22
   188b8:	andeq	r8, r1, r4, ror #22
   188bc:	andeq	r8, r1, r4, ror #22
   188c0:	andeq	r8, r1, r4, ror #22
   188c4:	andeq	r8, r1, r4, ror #22
   188c8:	andeq	r8, r1, r4, ror #22
   188cc:	andeq	r8, r1, r4, ror #22
   188d0:	andeq	r8, r1, r4, ror #22
   188d4:	andeq	r8, r1, r4, ror #22
   188d8:	andeq	r8, r1, r4, ror #22
   188dc:	andeq	r8, r1, r4, ror #22
   188e0:	andeq	r8, r1, r4, ror #22
   188e4:	andeq	r8, r1, r4, ror #22
   188e8:	andeq	r8, r1, r4, ror #22
   188ec:	andeq	r8, r1, r0, lsl #23
   188f0:	tst	r8, #16384	; 0x4000
   188f4:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   188f8:	sub	r1, r1, #49	; 0x31
   188fc:	mov	r2, #4
   18900:	bfi	r0, r2, #0, #8
   18904:	str	r1, [r9]
   18908:	str	r0, [r9, #4]
   1890c:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18910:	cmp	r6, #123	; 0x7b
   18914:	beq	18a14 <__mempcpy_chk@plt+0x7434>
   18918:	cmp	r6, #124	; 0x7c
   1891c:	beq	18a24 <__mempcpy_chk@plt+0x7444>
   18920:	cmp	r6, #125	; 0x7d
   18924:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18928:	and	r1, r8, #4608	; 0x1200
   1892c:	cmp	r1, #4608	; 0x1200
   18930:	beq	18ad0 <__mempcpy_chk@plt+0x74f0>
   18934:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18938:	movw	r1, #65280	; 0xff00
   1893c:	movt	r1, #65439	; 0xff9f
   18940:	and	r0, r0, r1
   18944:	orr	r0, r0, #1
   18948:	orr	r0, r0, #2097152	; 0x200000
   1894c:	str	r0, [r5]
   18950:	mov	r4, #1
   18954:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18958:	sub	r1, r2, #115	; 0x73
   1895c:	cmp	r1, #10
   18960:	bhi	18a38 <__mempcpy_chk@plt+0x7458>
   18964:	add	r2, pc, #0
   18968:	ldr	pc, [r2, r1, lsl #2]
   1896c:	muleq	r1, r8, r9
   18970:	andeq	r8, r1, r4, ror #22
   18974:	andeq	r8, r1, r4, ror #22
   18978:	andeq	r8, r1, r4, ror #22
   1897c:	muleq	r1, r4, sl
   18980:	andeq	r8, r1, r4, ror #22
   18984:	andeq	r8, r1, r4, ror #22
   18988:	andeq	r8, r1, r4, ror #22
   1898c:	andeq	r8, r1, r4, lsr #21
   18990:			; <UNDEFINED> instruction: 0x00018ab8
   18994:	andeq	r8, r1, r4, asr #21
   18998:	tst	r8, #524288	; 0x80000
   1899c:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   189a0:	mov	r1, #34	; 0x22
   189a4:	b	18b5c <__mempcpy_chk@plt+0x757c>
   189a8:	cmp	r6, #10
   189ac:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   189b0:	tst	r8, #2048	; 0x800
   189b4:	bne	18a30 <__mempcpy_chk@plt+0x7450>
   189b8:	b	18b64 <__mempcpy_chk@plt+0x7584>
   189bc:	tst	r8, #8192	; 0x2000
   189c0:	beq	18b64 <__mempcpy_chk@plt+0x7584>
   189c4:	mov	r1, #8
   189c8:	b	18b5c <__mempcpy_chk@plt+0x757c>
   189cc:	tst	r8, #8192	; 0x2000
   189d0:	beq	18b64 <__mempcpy_chk@plt+0x7584>
   189d4:	mov	r1, #9
   189d8:	b	18b5c <__mempcpy_chk@plt+0x757c>
   189dc:	mov	r1, #11
   189e0:	b	18b5c <__mempcpy_chk@plt+0x757c>
   189e4:	movw	r1, #1026	; 0x402
   189e8:	tst	r8, r1
   189ec:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   189f0:	b	18b20 <__mempcpy_chk@plt+0x7540>
   189f4:	mov	r1, #5
   189f8:	b	18b5c <__mempcpy_chk@plt+0x757c>
   189fc:	movw	r1, #1026	; 0x402
   18a00:	tst	r8, r1
   18a04:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18a08:	b	18b58 <__mempcpy_chk@plt+0x7578>
   18a0c:	mov	r1, #20
   18a10:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18a14:	and	r1, r8, #4608	; 0x1200
   18a18:	cmp	r1, #4608	; 0x1200
   18a1c:	beq	18ab0 <__mempcpy_chk@plt+0x74d0>
   18a20:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18a24:	and	r1, r8, #33792	; 0x8400
   18a28:	cmp	r1, #32768	; 0x8000
   18a2c:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18a30:	mov	r1, #10
   18a34:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18a38:	cmp	r2, #96	; 0x60
   18a3c:	beq	18ad8 <__mempcpy_chk@plt+0x74f8>
   18a40:	cmp	r2, #98	; 0x62
   18a44:	tsteq	r8, #524288	; 0x80000
   18a48:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18a4c:	mov	r1, #256	; 0x100
   18a50:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18a54:	ldr	r1, [r7, #40]	; 0x28
   18a58:	cmp	r1, #0
   18a5c:	beq	187e4 <__mempcpy_chk@plt+0x7204>
   18a60:	tst	r8, #2048	; 0x800
   18a64:	beq	18b64 <__mempcpy_chk@plt+0x7584>
   18a68:	ldr	r2, [r7, #4]
   18a6c:	add	r1, r1, r2
   18a70:	ldrb	r1, [r1, #-1]
   18a74:	cmp	r1, #10
   18a78:	beq	187e4 <__mempcpy_chk@plt+0x7204>
   18a7c:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18a80:	cmp	r2, #87	; 0x57
   18a84:	tsteq	r8, #524288	; 0x80000
   18a88:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18a8c:	mov	r1, #33	; 0x21
   18a90:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18a94:	tst	r8, #524288	; 0x80000
   18a98:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18a9c:	mov	r1, #32
   18aa0:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18aa4:	and	r1, r8, #4608	; 0x1200
   18aa8:	cmp	r1, #512	; 0x200
   18aac:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18ab0:	mov	r1, #23
   18ab4:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18ab8:	tst	r8, #33792	; 0x8400
   18abc:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18ac0:	b	18a30 <__mempcpy_chk@plt+0x7450>
   18ac4:	and	r1, r8, #4608	; 0x1200
   18ac8:	cmp	r1, #512	; 0x200
   18acc:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18ad0:	mov	r1, #24
   18ad4:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18ad8:	tst	r8, #524288	; 0x80000
   18adc:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18ae0:	mov	r1, #64	; 0x40
   18ae4:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18ae8:	tst	r8, #524288	; 0x80000
   18aec:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18af0:	mov	r1, #128	; 0x80
   18af4:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18af8:	tst	r8, #8192	; 0x2000
   18afc:	beq	189c4 <__mempcpy_chk@plt+0x73e4>
   18b00:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18b04:	tst	r8, #8192	; 0x2000
   18b08:	beq	189d4 <__mempcpy_chk@plt+0x73f4>
   18b0c:	b	18b64 <__mempcpy_chk@plt+0x7584>
   18b10:	movw	r1, #1026	; 0x402
   18b14:	and	r1, r8, r1
   18b18:	cmp	r1, #2
   18b1c:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18b20:	mov	r1, #18
   18b24:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18b28:	tst	r8, #524288	; 0x80000
   18b2c:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18b30:	mov	r1, #6
   18b34:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18b38:	tst	r8, #524288	; 0x80000
   18b3c:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18b40:	mov	r1, #9
   18b44:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18b48:	movw	r1, #1026	; 0x402
   18b4c:	and	r1, r8, r1
   18b50:	cmp	r1, #2
   18b54:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18b58:	mov	r1, #19
   18b5c:	bfi	r0, r1, #0, #8
   18b60:	str	r0, [r5]
   18b64:	mov	r0, r4
   18b68:	sub	sp, fp, #24
   18b6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18b70:	tst	r8, #524288	; 0x80000
   18b74:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18b78:	mov	r1, #512	; 0x200
   18b7c:	b	187e8 <__mempcpy_chk@plt+0x7208>
   18b80:	tst	r8, #524288	; 0x80000
   18b84:	bne	18b64 <__mempcpy_chk@plt+0x7584>
   18b88:	mov	r1, #35	; 0x23
   18b8c:	b	18b5c <__mempcpy_chk@plt+0x757c>
   18b90:	cmp	r3, #2
   18b94:	blt	18bc4 <__mempcpy_chk@plt+0x75e4>
   18b98:	ldr	r3, [r7, #8]
   18b9c:	ldr	r4, [r3, r2, lsl #2]
   18ba0:	cmn	r4, #1
   18ba4:	beq	18614 <__mempcpy_chk@plt+0x7034>
   18ba8:	ldr	r4, [r7, #28]
   18bac:	add	r6, r6, #2
   18bb0:	cmp	r4, r6
   18bb4:	beq	18bc4 <__mempcpy_chk@plt+0x75e4>
   18bb8:	ldr	r3, [r3, r6, lsl #2]
   18bbc:	cmn	r3, #1
   18bc0:	beq	18614 <__mempcpy_chk@plt+0x7034>
   18bc4:	ldrb	r3, [r7, #76]	; 0x4c
   18bc8:	mov	r6, r2
   18bcc:	cmp	r3, #0
   18bd0:	beq	18bdc <__mempcpy_chk@plt+0x75fc>
   18bd4:	ldr	r6, [r7, #12]
   18bd8:	ldr	r6, [r6, r2, lsl #2]
   18bdc:	ldr	r4, [r7, #24]
   18be0:	ldr	ip, [r7]
   18be4:	cmp	r3, #0
   18be8:	add	r6, r4, r6
   18bec:	add	r6, ip, r6
   18bf0:	ldrsb	r6, [r6]
   18bf4:	beq	1861c <__mempcpy_chk@plt+0x703c>
   18bf8:	cmn	r6, #1
   18bfc:	ble	18614 <__mempcpy_chk@plt+0x7034>
   18c00:	b	1861c <__mempcpy_chk@plt+0x703c>
   18c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c08:	add	fp, sp, #28
   18c0c:	sub	sp, sp, #28
   18c10:	mov	r7, r1
   18c14:	mov	r1, r0
   18c18:	ldr	r4, [fp, #12]
   18c1c:	ldr	r5, [fp, #8]
   18c20:	mov	r6, r2
   18c24:	str	r3, [sp, #16]
   18c28:	ldr	r0, [r7]
   18c2c:	str	r1, [sp, #12]
   18c30:	str	r4, [sp, #4]
   18c34:	str	r5, [sp]
   18c38:	str	r0, [sp, #8]
   18c3c:	mov	r0, r1
   18c40:	mov	r1, r7
   18c44:	bl	18e90 <__mempcpy_chk@plt+0x78b0>
   18c48:	cmp	r0, #0
   18c4c:	bne	18c5c <__mempcpy_chk@plt+0x767c>
   18c50:	ldr	r1, [r4]
   18c54:	cmp	r1, #0
   18c58:	bne	18db8 <__mempcpy_chk@plt+0x77d8>
   18c5c:	mov	r4, r0
   18c60:	ldrb	r0, [r6, #4]
   18c64:	orr	r1, r0, #8
   18c68:	cmp	r1, #10
   18c6c:	beq	18dbc <__mempcpy_chk@plt+0x77dc>
   18c70:	cmp	r5, #0
   18c74:	beq	18c80 <__mempcpy_chk@plt+0x76a0>
   18c78:	cmp	r0, #9
   18c7c:	beq	18dbc <__mempcpy_chk@plt+0x77dc>
   18c80:	ldr	r8, [fp, #12]
   18c84:	ldr	r0, [sp, #12]
   18c88:	ldr	r3, [sp, #16]
   18c8c:	mov	r1, r7
   18c90:	mov	r2, r6
   18c94:	mov	r9, r5
   18c98:	str	r5, [sp]
   18c9c:	str	r8, [sp, #4]
   18ca0:	bl	18e90 <__mempcpy_chk@plt+0x78b0>
   18ca4:	mov	sl, r0
   18ca8:	cmp	r0, #0
   18cac:	bne	18cbc <__mempcpy_chk@plt+0x76dc>
   18cb0:	ldr	r0, [r8]
   18cb4:	cmp	r0, #0
   18cb8:	bne	18dc8 <__mempcpy_chk@plt+0x77e8>
   18cbc:	cmp	r4, #0
   18cc0:	cmpne	sl, #0
   18cc4:	bne	18cdc <__mempcpy_chk@plt+0x76fc>
   18cc8:	cmp	r4, #0
   18ccc:	mov	r5, r9
   18cd0:	movne	sl, r4
   18cd4:	mov	r0, sl
   18cd8:	b	18c5c <__mempcpy_chk@plt+0x767c>
   18cdc:	mov	r0, #16
   18ce0:	mov	r1, r4
   18ce4:	mov	r2, sl
   18ce8:	add	r3, sp, #20
   18cec:	str	r0, [sp, #24]
   18cf0:	mov	r0, #0
   18cf4:	str	r0, [sp, #20]
   18cf8:	ldr	r0, [sp, #8]
   18cfc:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   18d00:	cmp	r0, #0
   18d04:	mov	r5, r9
   18d08:	bne	18c5c <__mempcpy_chk@plt+0x767c>
   18d0c:	mov	r5, sl
   18d10:	ldr	sl, [sl, #4]
   18d14:	cmp	sl, #0
   18d18:	bne	18d0c <__mempcpy_chk@plt+0x772c>
   18d1c:	ldr	sl, [r5, #8]
   18d20:	cmp	sl, #0
   18d24:	bne	18d0c <__mempcpy_chk@plt+0x772c>
   18d28:	add	r0, r5, #20
   18d2c:	bl	1795c <__mempcpy_chk@plt+0x637c>
   18d30:	ldr	r0, [r5]
   18d34:	cmp	r0, #0
   18d38:	beq	18d5c <__mempcpy_chk@plt+0x777c>
   18d3c:	ldr	sl, [r0, #8]
   18d40:	cmp	sl, r5
   18d44:	mov	r5, r0
   18d48:	beq	18d28 <__mempcpy_chk@plt+0x7748>
   18d4c:	cmp	sl, #0
   18d50:	mov	r5, r0
   18d54:	beq	18d28 <__mempcpy_chk@plt+0x7748>
   18d58:	b	18d0c <__mempcpy_chk@plt+0x772c>
   18d5c:	mov	r5, r4
   18d60:	ldr	r4, [r4, #4]
   18d64:	cmp	r4, #0
   18d68:	bne	18d5c <__mempcpy_chk@plt+0x777c>
   18d6c:	ldr	r4, [r5, #8]
   18d70:	cmp	r4, #0
   18d74:	bne	18d5c <__mempcpy_chk@plt+0x777c>
   18d78:	add	r0, r5, #20
   18d7c:	bl	1795c <__mempcpy_chk@plt+0x637c>
   18d80:	ldr	r0, [r5]
   18d84:	cmp	r0, #0
   18d88:	beq	18dac <__mempcpy_chk@plt+0x77cc>
   18d8c:	ldr	r4, [r0, #8]
   18d90:	cmp	r4, r5
   18d94:	mov	r5, r0
   18d98:	beq	18d78 <__mempcpy_chk@plt+0x7798>
   18d9c:	cmp	r4, #0
   18da0:	mov	r5, r0
   18da4:	beq	18d78 <__mempcpy_chk@plt+0x7798>
   18da8:	b	18d5c <__mempcpy_chk@plt+0x777c>
   18dac:	ldr	r1, [fp, #12]
   18db0:	mov	r0, #12
   18db4:	str	r0, [r1]
   18db8:	mov	r4, #0
   18dbc:	mov	r0, r4
   18dc0:	sub	sp, fp, #28
   18dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18dc8:	cmp	r4, #0
   18dcc:	beq	18db8 <__mempcpy_chk@plt+0x77d8>
   18dd0:	mov	r5, r4
   18dd4:	ldr	r4, [r4, #4]
   18dd8:	cmp	r4, #0
   18ddc:	bne	18dd0 <__mempcpy_chk@plt+0x77f0>
   18de0:	ldr	r4, [r5, #8]
   18de4:	cmp	r4, #0
   18de8:	bne	18dd0 <__mempcpy_chk@plt+0x77f0>
   18dec:	add	r0, r5, #20
   18df0:	bl	1795c <__mempcpy_chk@plt+0x637c>
   18df4:	ldr	r0, [r5]
   18df8:	cmp	r0, #0
   18dfc:	beq	18db8 <__mempcpy_chk@plt+0x77d8>
   18e00:	ldr	r4, [r0, #8]
   18e04:	cmp	r4, r5
   18e08:	mov	r5, r0
   18e0c:	beq	18dec <__mempcpy_chk@plt+0x780c>
   18e10:	cmp	r4, #0
   18e14:	mov	r5, r0
   18e18:	beq	18dec <__mempcpy_chk@plt+0x780c>
   18e1c:	b	18dd0 <__mempcpy_chk@plt+0x77f0>
   18e20:	push	{r4, r5, r6, sl, fp, lr}
   18e24:	add	fp, sp, #16
   18e28:	mov	r4, r2
   18e2c:	mov	r5, r1
   18e30:	mov	r6, r0
   18e34:	ldr	r0, [r0, #4]
   18e38:	cmp	r0, #0
   18e3c:	bne	18e30 <__mempcpy_chk@plt+0x7850>
   18e40:	ldr	r0, [r6, #8]
   18e44:	cmp	r0, #0
   18e48:	bne	18e30 <__mempcpy_chk@plt+0x7850>
   18e4c:	mov	r0, r4
   18e50:	mov	r1, r6
   18e54:	blx	r5
   18e58:	cmp	r0, #0
   18e5c:	bne	18e8c <__mempcpy_chk@plt+0x78ac>
   18e60:	ldr	r1, [r6]
   18e64:	cmp	r1, #0
   18e68:	beq	18e8c <__mempcpy_chk@plt+0x78ac>
   18e6c:	ldr	r0, [r1, #8]
   18e70:	cmp	r0, r6
   18e74:	mov	r6, r1
   18e78:	beq	18e4c <__mempcpy_chk@plt+0x786c>
   18e7c:	cmp	r0, #0
   18e80:	mov	r6, r1
   18e84:	beq	18e4c <__mempcpy_chk@plt+0x786c>
   18e88:	b	18e30 <__mempcpy_chk@plt+0x7850>
   18e8c:	pop	{r4, r5, r6, sl, fp, pc}
   18e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e94:	add	fp, sp, #28
   18e98:	sub	sp, sp, #140	; 0x8c
   18e9c:	mov	r5, r1
   18ea0:	mov	sl, r0
   18ea4:	mov	r4, r2
   18ea8:	ldr	r0, [r2, #4]
   18eac:	mvn	r1, #0
   18eb0:	mov	r8, #0
   18eb4:	ldr	r2, [r5]
   18eb8:	uxtab	r1, r1, r0
   18ebc:	str	r2, [sp, #44]	; 0x2c
   18ec0:	ldr	r6, [fp, #12]
   18ec4:	ldr	r7, [fp, #8]
   18ec8:	add	r2, pc, #12
   18ecc:	str	sl, [sp, #40]	; 0x28
   18ed0:	str	r3, [sp, #36]	; 0x24
   18ed4:	str	r4, [sp, #20]
   18ed8:	ldr	pc, [r2, r1, lsl #2]
   18edc:	andeq	r9, r1, r4, lsr r1
   18ee0:	andeq	sl, r1, r4, rrx
   18ee4:	muleq	r1, r4, r3
   18ee8:	andeq	r9, r1, ip, lsl r2
   18eec:	andeq	r9, r1, r8, ror r2
   18ef0:	muleq	r1, r4, r3
   18ef4:	muleq	r1, r4, r3
   18ef8:	andeq	r9, r1, r4, asr #5
   18efc:	andeq	r8, r1, ip, ror pc
   18f00:	andeq	sl, r1, r4, rrx
   18f04:	andeq	r8, r1, ip, ror #30
   18f08:	andeq	r9, r1, ip, lsr r0
   18f0c:	muleq	r1, r4, r3
   18f10:	muleq	r1, r4, r3
   18f14:	muleq	r1, r4, r3
   18f18:	muleq	r1, r4, r3
   18f1c:	muleq	r1, r4, r3
   18f20:	andeq	r8, r1, ip, ror #30
   18f24:	andeq	r8, r1, ip, ror #30
   18f28:	strheq	r9, [r1], -ip
   18f2c:	muleq	r1, r4, r3
   18f30:	muleq	r1, r4, r3
   18f34:	muleq	r1, r4, r3
   18f38:	andeq	r8, r1, ip, lsl #31
   18f3c:	muleq	r1, r4, r3
   18f40:	muleq	r1, r4, r3
   18f44:	muleq	r1, r4, r3
   18f48:	muleq	r1, r4, r3
   18f4c:	muleq	r1, r4, r3
   18f50:	muleq	r1, r4, r3
   18f54:	muleq	r1, r4, r3
   18f58:	andeq	r8, r1, r8, asr #31
   18f5c:	andeq	r8, r1, r8, asr #31
   18f60:	andeq	r8, r1, r8, ror #31
   18f64:	andeq	r8, r1, r8, ror #31
   18f68:	andeq	r9, r1, r4, lsr #7
   18f6c:	tst	r3, #32
   18f70:	bne	1939c <__mempcpy_chk@plt+0x7dbc>
   18f74:	tst	r3, #16
   18f78:	bne	193ac <__mempcpy_chk@plt+0x7dcc>
   18f7c:	tst	r3, #131072	; 0x20000
   18f80:	uxtbeq	r1, r0
   18f84:	cmpeq	r1, #9
   18f88:	beq	193e8 <__mempcpy_chk@plt+0x7e08>
   18f8c:	mov	r1, #1
   18f90:	mov	r2, #0
   18f94:	mov	r3, r4
   18f98:	mov	r8, #0
   18f9c:	bfi	r0, r1, #0, #8
   18fa0:	mov	r1, #0
   18fa4:	str	r0, [r4, #4]
   18fa8:	ldr	r0, [sp, #44]	; 0x2c
   18fac:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   18fb0:	ldr	r5, [sp, #20]
   18fb4:	ldr	r2, [sp, #36]	; 0x24
   18fb8:	mov	r9, r0
   18fbc:	cmp	r0, #0
   18fc0:	bne	19abc <__mempcpy_chk@plt+0x84dc>
   18fc4:	b	1a1d8 <__mempcpy_chk@plt+0x8bf8>
   18fc8:	mvn	r2, #32
   18fcc:	ldr	r1, [sl, #64]	; 0x40
   18fd0:	movw	r3, #10059	; 0x274b
   18fd4:	uxtab	r0, r2, r0
   18fd8:	movw	r2, #11454	; 0x2cbe
   18fdc:	movt	r3, #2
   18fe0:	movt	r2, #2
   18fe4:	b	19004 <__mempcpy_chk@plt+0x7a24>
   18fe8:	mvn	r2, #34	; 0x22
   18fec:	ldr	r1, [sl, #64]	; 0x40
   18ff0:	movw	r3, #10209	; 0x27e1
   18ff4:	uxtab	r0, r2, r0
   18ff8:	movw	r2, #11460	; 0x2cc4
   18ffc:	movt	r3, #2
   19000:	movt	r2, #2
   19004:	clz	r0, r0
   19008:	lsr	r0, r0, #5
   1900c:	stm	sp, {r0, r6}
   19010:	ldr	r0, [sp, #44]	; 0x2c
   19014:	bl	1a43c <__mempcpy_chk@plt+0x8e5c>
   19018:	mov	r9, r0
   1901c:	cmp	r0, #0
   19020:	bne	192b8 <__mempcpy_chk@plt+0x7cd8>
   19024:	ldr	r0, [r6]
   19028:	ldr	r2, [sp, #36]	; 0x24
   1902c:	ldr	r5, [sp, #20]
   19030:	cmp	r0, #0
   19034:	beq	19abc <__mempcpy_chk@plt+0x84dc>
   19038:	b	1a064 <__mempcpy_chk@plt+0x8a84>
   1903c:	ldr	r0, [r4]
   19040:	movw	r1, #783	; 0x30f
   19044:	tst	r0, r1
   19048:	beq	19098 <__mempcpy_chk@plt+0x7ab8>
   1904c:	ldr	r0, [sp, #44]	; 0x2c
   19050:	ldrb	r0, [r0, #88]	; 0x58
   19054:	tst	r0, #16
   19058:	bne	19094 <__mempcpy_chk@plt+0x7ab4>
   1905c:	ldr	r2, [sp, #44]	; 0x2c
   19060:	orr	r1, r0, #16
   19064:	tst	r0, #8
   19068:	strb	r1, [r2, #88]	; 0x58
   1906c:	bne	1a238 <__mempcpy_chk@plt+0x8c58>
   19070:	add	r1, pc, #896	; 0x380
   19074:	tst	r0, #4
   19078:	vld1.64	{d16-d17}, [r1]
   1907c:	add	r1, r2, #96	; 0x60
   19080:	vst1.32	{d16-d17}, [r1]
   19084:	beq	1a248 <__mempcpy_chk@plt+0x8c68>
   19088:	vmov.i32	q8, #0	; 0x00000000
   1908c:	add	r0, r2, #112	; 0x70
   19090:	vst1.32	{d16-d17}, [r0]
   19094:	ldr	r0, [r4]
   19098:	mov	r9, r6
   1909c:	ldr	r6, [sp, #44]	; 0x2c
   190a0:	cmp	r0, #256	; 0x100
   190a4:	beq	1a070 <__mempcpy_chk@plt+0x8a90>
   190a8:	cmp	r0, #512	; 0x200
   190ac:	bne	1a0ec <__mempcpy_chk@plt+0x8b0c>
   190b0:	mov	r5, #10
   190b4:	mov	r0, #5
   190b8:	b	1a078 <__mempcpy_chk@plt+0x8a98>
   190bc:	mov	r0, #0
   190c0:	mov	r1, #1
   190c4:	str	r6, [sp, #16]
   190c8:	mov	r9, #0
   190cc:	str	r0, [fp, #-32]	; 0xffffffe0
   190d0:	mov	r0, #32
   190d4:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   190d8:	mov	r4, r0
   190dc:	mov	r0, #40	; 0x28
   190e0:	mov	r1, #1
   190e4:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   190e8:	mov	r8, r0
   190ec:	cmp	r4, #0
   190f0:	cmpne	r8, #0
   190f4:	beq	1a1f8 <__mempcpy_chk@plt+0x8c18>
   190f8:	ldr	r6, [sp, #20]
   190fc:	ldr	r5, [sp, #36]	; 0x24
   19100:	mov	r1, sl
   19104:	mov	r0, r6
   19108:	mov	r2, r5
   1910c:	bl	1a668 <__mempcpy_chk@plt+0x9088>
   19110:	mov	r3, r0
   19114:	ldr	r0, [r6, #4]
   19118:	uxtb	r1, r0
   1911c:	cmp	r1, #25
   19120:	beq	19408 <__mempcpy_chk@plt+0x7e28>
   19124:	cmp	r1, #2
   19128:	beq	1a1f0 <__mempcpy_chk@plt+0x8c10>
   1912c:	mov	r9, #0
   19130:	b	19460 <__mempcpy_chk@plt+0x7e80>
   19134:	ldr	r5, [sp, #44]	; 0x2c
   19138:	mov	r1, #0
   1913c:	mov	r2, #0
   19140:	mov	r3, r4
   19144:	mov	r8, #0
   19148:	mov	r0, r5
   1914c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19150:	cmp	r0, #0
   19154:	beq	1a1d8 <__mempcpy_chk@plt+0x8bf8>
   19158:	mov	r9, r0
   1915c:	ldr	r0, [r5, #92]	; 0x5c
   19160:	cmp	r0, #2
   19164:	blt	192b8 <__mempcpy_chk@plt+0x7cd8>
   19168:	mov	r7, #16
   1916c:	sub	r4, fp, #80	; 0x50
   19170:	ldr	r0, [sl, #40]	; 0x28
   19174:	ldr	r1, [sl, #56]	; 0x38
   19178:	cmp	r1, r0
   1917c:	ble	192b8 <__mempcpy_chk@plt+0x7cd8>
   19180:	ldr	r1, [sl, #28]
   19184:	ldr	r2, [sp, #36]	; 0x24
   19188:	ldr	r5, [sp, #20]
   1918c:	cmp	r0, r1
   19190:	beq	19abc <__mempcpy_chk@plt+0x84dc>
   19194:	ldr	r1, [sl, #8]
   19198:	ldr	r0, [r1, r0, lsl #2]
   1919c:	cmn	r0, #1
   191a0:	bne	19abc <__mempcpy_chk@plt+0x84dc>
   191a4:	mov	r0, r5
   191a8:	mov	r1, sl
   191ac:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   191b0:	ldr	r1, [sl, #40]	; 0x28
   191b4:	mov	r8, r6
   191b8:	ldr	r6, [sp, #44]	; 0x2c
   191bc:	mov	r2, #0
   191c0:	mov	r3, r5
   191c4:	add	r0, r1, r0
   191c8:	mov	r1, #0
   191cc:	str	r0, [sl, #40]	; 0x28
   191d0:	mov	r0, r6
   191d4:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   191d8:	mov	r5, r0
   191dc:	mov	r0, #0
   191e0:	str	r7, [fp, #-76]	; 0xffffffb4
   191e4:	mov	r1, r9
   191e8:	mov	r3, r4
   191ec:	str	r0, [fp, #-80]	; 0xffffffb0
   191f0:	mov	r0, r6
   191f4:	mov	r2, r5
   191f8:	mov	r6, r8
   191fc:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19200:	cmp	r5, #0
   19204:	movne	r9, r0
   19208:	cmpne	r0, #0
   1920c:	bne	19170 <__mempcpy_chk@plt+0x7b90>
   19210:	mov	r0, #12
   19214:	str	r0, [r6]
   19218:	b	1a060 <__mempcpy_chk@plt+0x8a80>
   1921c:	ldr	r5, [sp, #44]	; 0x2c
   19220:	ldr	r0, [r4]
   19224:	mov	r1, #1
   19228:	ldr	r2, [r5, #84]	; 0x54
   1922c:	tst	r2, r1, lsl r0
   19230:	beq	1a218 <__mempcpy_chk@plt+0x8c38>
   19234:	lsl	r0, r1, r0
   19238:	ldr	r1, [r5, #80]	; 0x50
   1923c:	mov	r2, #0
   19240:	mov	r3, r4
   19244:	mov	r8, #0
   19248:	orr	r0, r1, r0
   1924c:	mov	r1, #0
   19250:	str	r0, [r5, #80]	; 0x50
   19254:	mov	r0, r5
   19258:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1925c:	cmp	r0, #0
   19260:	beq	1a1d8 <__mempcpy_chk@plt+0x8bf8>
   19264:	mov	r9, r0
   19268:	ldr	r0, [r5, #76]	; 0x4c
   1926c:	add	r0, r0, #1
   19270:	str	r0, [r5, #76]	; 0x4c
   19274:	b	192ac <__mempcpy_chk@plt+0x7ccc>
   19278:	ldr	r5, [sp, #44]	; 0x2c
   1927c:	mov	r1, #0
   19280:	mov	r2, #0
   19284:	mov	r3, r4
   19288:	mov	r8, #0
   1928c:	mov	r0, r5
   19290:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19294:	cmp	r0, #0
   19298:	beq	1a1d8 <__mempcpy_chk@plt+0x8bf8>
   1929c:	mov	r9, r0
   192a0:	ldr	r0, [r5, #92]	; 0x5c
   192a4:	cmp	r0, #2
   192a8:	blt	192b8 <__mempcpy_chk@plt+0x7cd8>
   192ac:	ldrb	r0, [r5, #88]	; 0x58
   192b0:	orr	r0, r0, #2
   192b4:	strb	r0, [r5, #88]	; 0x58
   192b8:	ldr	r2, [sp, #36]	; 0x24
   192bc:	ldr	r5, [sp, #20]
   192c0:	b	19abc <__mempcpy_chk@plt+0x84dc>
   192c4:	str	r6, [sp, #16]
   192c8:	ldr	r6, [r5, #24]
   192cc:	orr	r2, r3, #8388608	; 0x800000
   192d0:	mov	r1, sl
   192d4:	add	r0, r6, #1
   192d8:	str	r0, [r5, #24]
   192dc:	mov	r0, r4
   192e0:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   192e4:	ldr	r1, [sl, #40]	; 0x28
   192e8:	ldr	r2, [sp, #20]
   192ec:	add	r0, r1, r0
   192f0:	mov	r1, #0
   192f4:	str	r0, [sl, #40]	; 0x28
   192f8:	ldrb	r0, [r2, #4]
   192fc:	cmp	r0, #9
   19300:	beq	19348 <__mempcpy_chk@plt+0x7d68>
   19304:	add	r0, r7, #1
   19308:	mov	r1, r5
   1930c:	mov	r4, r2
   19310:	str	r0, [sp]
   19314:	mov	r0, sl
   19318:	ldr	r7, [sp, #16]
   1931c:	str	r7, [sp, #4]
   19320:	ldr	r3, [sp, #36]	; 0x24
   19324:	bl	183c4 <__mempcpy_chk@plt+0x6de4>
   19328:	mov	r1, r0
   1932c:	ldr	r0, [r7]
   19330:	mov	r8, #0
   19334:	cmp	r0, #0
   19338:	bne	1a064 <__mempcpy_chk@plt+0x8a84>
   1933c:	ldrb	r0, [r4, #4]
   19340:	cmp	r0, #9
   19344:	bne	1a2d8 <__mempcpy_chk@plt+0x8cf8>
   19348:	ldr	r0, [sp, #44]	; 0x2c
   1934c:	cmp	r6, #8
   19350:	bhi	19364 <__mempcpy_chk@plt+0x7d84>
   19354:	ldr	r3, [r0, #84]	; 0x54
   19358:	mov	r2, #1
   1935c:	orr	r2, r3, r2, lsl r6
   19360:	str	r2, [r0, #84]	; 0x54
   19364:	mov	r2, #17
   19368:	mov	r8, #0
   1936c:	sub	r3, fp, #80	; 0x50
   19370:	str	r2, [fp, #-76]	; 0xffffffb4
   19374:	mov	r2, #0
   19378:	str	r8, [fp, #-80]	; 0xffffffb0
   1937c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19380:	cmp	r0, #0
   19384:	beq	1a228 <__mempcpy_chk@plt+0x8c48>
   19388:	mov	r9, r0
   1938c:	str	r6, [r0, #20]
   19390:	b	19ab0 <__mempcpy_chk@plt+0x84d0>
   19394:	tst	r3, #16777216	; 0x1000000
   19398:	beq	18f6c <__mempcpy_chk@plt+0x798c>
   1939c:	mov	r0, #13
   193a0:	b	193ec <__mempcpy_chk@plt+0x7e0c>
   193a4:	mov	r0, #5
   193a8:	b	193ec <__mempcpy_chk@plt+0x7e0c>
   193ac:	mov	r0, r4
   193b0:	mov	r1, sl
   193b4:	mov	r2, r3
   193b8:	mov	r6, r3
   193bc:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   193c0:	ldr	r1, [sl, #40]	; 0x28
   193c4:	mov	r2, r4
   193c8:	mov	r3, r6
   193cc:	add	r0, r1, r0
   193d0:	mov	r1, r5
   193d4:	str	r0, [sl, #40]	; 0x28
   193d8:	mov	r0, sl
   193dc:	sub	sp, fp, #28
   193e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193e4:	b	18e90 <__mempcpy_chk@plt+0x78b0>
   193e8:	mov	r0, #16
   193ec:	str	r0, [r6]
   193f0:	b	1a064 <__mempcpy_chk@plt+0x8a84>
   193f4:	nop	{0}
   193f8:	andeq	r0, r0, r0
   193fc:	mvnseq	r0, #0
   19400:			; <UNDEFINED> instruction: 0x87fffffe
   19404:			; <UNDEFINED> instruction: 0x07fffffe
   19408:	ldrb	r0, [r8, #16]
   1940c:	tst	r5, #256	; 0x100
   19410:	orr	r0, r0, #1
   19414:	strb	r0, [r8, #16]
   19418:	beq	19428 <__mempcpy_chk@plt+0x7e48>
   1941c:	ldr	r0, [r4]
   19420:	orr	r0, r0, #1024	; 0x400
   19424:	str	r0, [r4]
   19428:	ldr	r0, [sl, #40]	; 0x28
   1942c:	ldr	r2, [sp, #36]	; 0x24
   19430:	mov	r1, sl
   19434:	add	r0, r0, r3
   19438:	str	r0, [sl, #40]	; 0x28
   1943c:	mov	r0, r6
   19440:	bl	1a668 <__mempcpy_chk@plt+0x9088>
   19444:	ldr	r6, [sp, #20]
   19448:	mov	r3, r0
   1944c:	ldr	r0, [r6, #4]
   19450:	uxtb	r1, r0
   19454:	cmp	r1, #2
   19458:	beq	1a1f0 <__mempcpy_chk@plt+0x8c10>
   1945c:	mov	r9, #1
   19460:	uxtb	r1, r0
   19464:	str	r8, [sp, #32]
   19468:	mov	r2, r6
   1946c:	ldr	r5, [sp, #36]	; 0x24
   19470:	cmp	r1, #21
   19474:	moveq	r1, #1
   19478:	bfieq	r0, r1, #0, #8
   1947c:	mov	r1, sl
   19480:	streq	r0, [r6, #4]
   19484:	sub	r0, fp, #80	; 0x50
   19488:	str	r0, [fp, #-36]	; 0xffffffdc
   1948c:	mov	r0, #3
   19490:	str	r0, [fp, #-40]	; 0xffffffd8
   19494:	mov	r0, #1
   19498:	str	r5, [sp]
   1949c:	str	r0, [sp, #4]
   194a0:	sub	r0, fp, #40	; 0x28
   194a4:	bl	1a7d0 <__mempcpy_chk@plt+0x91f0>
   194a8:	cmp	r0, #0
   194ac:	bne	1a1e0 <__mempcpy_chk@plt+0x8c00>
   194b0:	and	r0, r5, #65536	; 0x10000
   194b4:	mov	r2, r5
   194b8:	str	r0, [sp, #24]
   194bc:	mov	r0, #0
   194c0:	str	r0, [sp, #12]
   194c4:	mov	r0, #0
   194c8:	str	r0, [sp, #8]
   194cc:	ldr	r5, [sp, #20]
   194d0:	mov	r0, r5
   194d4:	mov	r1, sl
   194d8:	bl	1a668 <__mempcpy_chk@plt+0x9088>
   194dc:	ldr	r7, [fp, #-40]	; 0xffffffd8
   194e0:	ldr	r6, [sp, #16]
   194e4:	mov	r8, r0
   194e8:	cmp	r7, #2
   194ec:	beq	1966c <__mempcpy_chk@plt+0x808c>
   194f0:	cmp	r7, #4
   194f4:	bne	19530 <__mempcpy_chk@plt+0x7f50>
   194f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   194fc:	ldr	r0, [sl, #64]	; 0x40
   19500:	sub	r3, fp, #32
   19504:	str	r1, [sp]
   19508:	ldr	r1, [sp, #36]	; 0x24
   1950c:	str	r1, [sp, #4]
   19510:	mov	r1, r4
   19514:	ldr	r2, [sp, #32]
   19518:	bl	1aa94 <__mempcpy_chk@plt+0x94b4>
   1951c:	ldr	r2, [sp, #20]
   19520:	cmp	r0, #0
   19524:	str	r0, [r6]
   19528:	beq	196a8 <__mempcpy_chk@plt+0x80c8>
   1952c:	b	1a34c <__mempcpy_chk@plt+0x8d6c>
   19530:	ldr	r0, [sp, #20]
   19534:	mov	r6, #7
   19538:	str	r9, [sp, #28]
   1953c:	ldrb	r0, [r0, #4]
   19540:	cmp	r0, #22
   19544:	beq	19554 <__mempcpy_chk@plt+0x7f74>
   19548:	cmp	r0, #2
   1954c:	bne	1964c <__mempcpy_chk@plt+0x806c>
   19550:	b	1a344 <__mempcpy_chk@plt+0x8d64>
   19554:	ldr	r0, [sl, #40]	; 0x28
   19558:	ldr	r2, [sp, #36]	; 0x24
   1955c:	mov	r1, sl
   19560:	add	r0, r0, r8
   19564:	str	r0, [sl, #40]	; 0x28
   19568:	add	r0, sp, #48	; 0x30
   1956c:	bl	1a668 <__mempcpy_chk@plt+0x9088>
   19570:	mov	r3, r0
   19574:	ldrb	r0, [sp, #52]	; 0x34
   19578:	cmp	r0, #21
   1957c:	beq	19634 <__mempcpy_chk@plt+0x8054>
   19580:	cmp	r0, #2
   19584:	beq	1a344 <__mempcpy_chk@plt+0x8d64>
   19588:	mov	r0, #3
   1958c:	ldr	r5, [sp, #36]	; 0x24
   19590:	mov	r1, sl
   19594:	add	r2, sp, #48	; 0x30
   19598:	str	r0, [fp, #-48]	; 0xffffffd0
   1959c:	add	r0, sp, #56	; 0x38
   195a0:	str	r0, [fp, #-44]	; 0xffffffd4
   195a4:	mov	r0, #1
   195a8:	str	r0, [sp, #4]
   195ac:	sub	r0, fp, #48	; 0x30
   195b0:	str	r5, [sp]
   195b4:	bl	1a7d0 <__mempcpy_chk@plt+0x91f0>
   195b8:	cmp	r0, #0
   195bc:	bne	1a1e0 <__mempcpy_chk@plt+0x8c00>
   195c0:	ldr	r0, [sp, #20]
   195c4:	mov	r1, sl
   195c8:	mov	r2, r5
   195cc:	bl	1a668 <__mempcpy_chk@plt+0x9088>
   195d0:	ldr	sl, [fp, #-48]	; 0xffffffd0
   195d4:	mov	r6, #11
   195d8:	cmp	sl, #2
   195dc:	cmpne	sl, #4
   195e0:	beq	1a340 <__mempcpy_chk@plt+0x8d60>
   195e4:	mov	r8, r0
   195e8:	cmp	r7, #3
   195ec:	bne	19600 <__mempcpy_chk@plt+0x8020>
   195f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   195f4:	bl	114c0 <strlen@plt>
   195f8:	cmp	r0, #1
   195fc:	bhi	1a33c <__mempcpy_chk@plt+0x8d5c>
   19600:	cmp	sl, #3
   19604:	bne	19618 <__mempcpy_chk@plt+0x8038>
   19608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1960c:	bl	114c0 <strlen@plt>
   19610:	cmp	r0, #1
   19614:	bhi	1a33c <__mempcpy_chk@plt+0x8d5c>
   19618:	ldr	r2, [sp, #20]
   1961c:	cmp	r7, #3
   19620:	beq	1975c <__mempcpy_chk@plt+0x817c>
   19624:	cmp	r7, #0
   19628:	mov	r5, #0
   1962c:	ldrbeq	r5, [fp, #-36]	; 0xffffffdc
   19630:	b	19764 <__mempcpy_chk@plt+0x8184>
   19634:	ldr	r0, [sl, #40]	; 0x28
   19638:	mov	r1, #1
   1963c:	sub	r0, r0, r8
   19640:	str	r0, [sl, #40]	; 0x28
   19644:	ldr	r0, [sp, #20]
   19648:	strb	r1, [r0, #4]
   1964c:	add	r0, pc, #8
   19650:	ldr	r6, [sp, #16]
   19654:	ldr	r9, [sp, #28]
   19658:	ldr	pc, [r0, r7, lsl #2]
   1965c:	andeq	r9, r1, r0, lsl #14
   19660:	andeq	r9, r1, r4, lsr #14
   19664:	andeq	r9, r1, ip, ror #12
   19668:	andeq	r9, r1, ip, ror #12
   1966c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19670:	mov	r0, r5
   19674:	bl	114c0 <strlen@plt>
   19678:	cmp	r0, #1
   1967c:	bne	1a220 <__mempcpy_chk@plt+0x8c40>
   19680:	ldrb	r0, [r5]
   19684:	mov	r3, #1
   19688:	ubfx	r1, r0, #5, #3
   1968c:	and	r0, r0, #31
   19690:	ldr	r2, [r4, r1, lsl #2]
   19694:	orr	r0, r2, r3, lsl r0
   19698:	str	r0, [r4, r1, lsl #2]
   1969c:	mov	r0, #0
   196a0:	ldr	r2, [sp, #20]
   196a4:	str	r0, [r6]
   196a8:	ldrb	r0, [r2, #4]
   196ac:	cmp	r0, #21
   196b0:	beq	19930 <__mempcpy_chk@plt+0x8350>
   196b4:	cmp	r0, #2
   196b8:	ldr	r0, [sp, #36]	; 0x24
   196bc:	beq	1a1e8 <__mempcpy_chk@plt+0x8c08>
   196c0:	sub	r1, fp, #80	; 0x50
   196c4:	mov	r3, r8
   196c8:	mov	r5, r2
   196cc:	str	r1, [fp, #-36]	; 0xffffffdc
   196d0:	mov	r1, #3
   196d4:	str	r1, [fp, #-40]	; 0xffffffd8
   196d8:	str	r0, [sp]
   196dc:	mov	r0, #0
   196e0:	mov	r1, sl
   196e4:	str	r0, [sp, #4]
   196e8:	sub	r0, fp, #40	; 0x28
   196ec:	bl	1a7d0 <__mempcpy_chk@plt+0x91f0>
   196f0:	ldr	r2, [sp, #36]	; 0x24
   196f4:	cmp	r0, #0
   196f8:	beq	194d0 <__mempcpy_chk@plt+0x7ef0>
   196fc:	b	1a1e0 <__mempcpy_chk@plt+0x8c00>
   19700:	ldrb	r0, [fp, #-36]	; 0xffffffdc
   19704:	mov	r3, #1
   19708:	ubfx	r1, r0, #5, #3
   1970c:	and	r0, r0, #31
   19710:	ldr	r2, [r4, r1, lsl #2]
   19714:	orr	r0, r2, r3, lsl r0
   19718:	ldr	r2, [sp, #20]
   1971c:	str	r0, [r4, r1, lsl #2]
   19720:	b	196a8 <__mempcpy_chk@plt+0x80c8>
   19724:	ldr	r6, [sp, #32]
   19728:	ldr	r0, [sp, #12]
   1972c:	mov	r5, r9
   19730:	ldr	r1, [r6, #20]
   19734:	cmp	r0, r1
   19738:	beq	19898 <__mempcpy_chk@plt+0x82b8>
   1973c:	ldr	r0, [r6]
   19740:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19744:	ldr	r2, [sp, #20]
   19748:	add	r7, r1, #1
   1974c:	mov	r9, r5
   19750:	str	r7, [r6, #20]
   19754:	str	r3, [r0, r1, lsl #2]
   19758:	b	196a8 <__mempcpy_chk@plt+0x80c8>
   1975c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19760:	ldrb	r5, [r0]
   19764:	cmp	sl, #3
   19768:	beq	1977c <__mempcpy_chk@plt+0x819c>
   1976c:	cmp	sl, #0
   19770:	mov	r9, #0
   19774:	ldrbeq	r9, [fp, #-44]	; 0xffffffd4
   19778:	b	19784 <__mempcpy_chk@plt+0x81a4>
   1977c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19780:	ldrb	r9, [r0]
   19784:	cmp	r7, #3
   19788:	cmpne	r7, #0
   1978c:	bne	197b4 <__mempcpy_chk@plt+0x81d4>
   19790:	ldr	r6, [sp, #44]	; 0x2c
   19794:	ldr	r0, [r6, #92]	; 0x5c
   19798:	cmp	r0, #2
   1979c:	blt	197bc <__mempcpy_chk@plt+0x81dc>
   197a0:	mov	r0, r5
   197a4:	bl	114fc <btowc@plt>
   197a8:	ldr	r2, [sp, #20]
   197ac:	mov	r5, r0
   197b0:	b	197bc <__mempcpy_chk@plt+0x81dc>
   197b4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   197b8:	ldr	r6, [sp, #44]	; 0x2c
   197bc:	cmp	sl, #3
   197c0:	cmpne	sl, #0
   197c4:	bne	197e8 <__mempcpy_chk@plt+0x8208>
   197c8:	ldr	r0, [r6, #92]	; 0x5c
   197cc:	cmp	r0, #2
   197d0:	blt	197ec <__mempcpy_chk@plt+0x820c>
   197d4:	mov	r0, r9
   197d8:	bl	114fc <btowc@plt>
   197dc:	ldr	r2, [sp, #20]
   197e0:	mov	r9, r0
   197e4:	b	197ec <__mempcpy_chk@plt+0x820c>
   197e8:	ldr	r9, [fp, #-44]	; 0xffffffd4
   197ec:	ldr	sl, [sp, #40]	; 0x28
   197f0:	cmn	r5, #1
   197f4:	mov	r6, #3
   197f8:	cmnne	r9, #1
   197fc:	beq	1a344 <__mempcpy_chk@plt+0x8d64>
   19800:	ldr	r0, [sp, #24]
   19804:	cmp	r0, #0
   19808:	beq	19818 <__mempcpy_chk@plt+0x8238>
   1980c:	cmp	r5, r9
   19810:	mov	r6, #11
   19814:	bhi	1a344 <__mempcpy_chk@plt+0x8d64>
   19818:	ldr	r0, [sp, #44]	; 0x2c
   1981c:	ldr	r0, [r0, #92]	; 0x5c
   19820:	cmp	r0, #2
   19824:	blt	19854 <__mempcpy_chk@plt+0x8274>
   19828:	ldr	r7, [sp, #32]
   1982c:	ldr	r1, [sp, #8]
   19830:	ldr	r0, [r7, #32]
   19834:	cmp	r1, r0
   19838:	beq	198d0 <__mempcpy_chk@plt+0x82f0>
   1983c:	ldmib	r7, {r1, r6}
   19840:	str	r5, [r1, r0, lsl #2]
   19844:	ldr	r0, [r7, #32]
   19848:	add	r1, r0, #1
   1984c:	str	r1, [r7, #32]
   19850:	str	r9, [r6, r0, lsl #2]
   19854:	mov	r0, #0
   19858:	mov	r6, #1
   1985c:	cmp	r5, r0
   19860:	cmpls	r0, r9
   19864:	bhi	1987c <__mempcpy_chk@plt+0x829c>
   19868:	ubfx	r1, r0, #5, #3
   1986c:	and	r3, r0, #31
   19870:	ldr	r7, [r4, r1, lsl #2]
   19874:	orr	r3, r7, r6, lsl r3
   19878:	str	r3, [r4, r1, lsl #2]
   1987c:	add	r0, r0, #1
   19880:	cmp	r0, #256	; 0x100
   19884:	bne	1985c <__mempcpy_chk@plt+0x827c>
   19888:	ldr	r6, [sp, #16]
   1988c:	ldr	r9, [sp, #28]
   19890:	mov	r0, #0
   19894:	b	196a4 <__mempcpy_chk@plt+0x80c4>
   19898:	ldr	r1, [sp, #12]
   1989c:	mov	r0, #1
   198a0:	orr	r1, r0, r1, lsl #1
   198a4:	ldr	r0, [r6]
   198a8:	str	r1, [sp, #12]
   198ac:	lsl	r1, r1, #2
   198b0:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   198b4:	cmp	r0, #0
   198b8:	beq	1a368 <__mempcpy_chk@plt+0x8d88>
   198bc:	ldr	r6, [sp, #32]
   198c0:	ldr	sl, [sp, #40]	; 0x28
   198c4:	str	r0, [r6]
   198c8:	ldr	r1, [r6, #20]
   198cc:	b	19740 <__mempcpy_chk@plt+0x8160>
   198d0:	ldr	r1, [sp, #8]
   198d4:	mov	r0, #1
   198d8:	orr	r1, r0, r1, lsl #1
   198dc:	ldr	r0, [r7, #4]
   198e0:	lsl	r6, r1, #2
   198e4:	str	r1, [sp, #8]
   198e8:	mov	r1, r6
   198ec:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   198f0:	mov	sl, r0
   198f4:	ldr	r0, [r7, #8]
   198f8:	mov	r1, r6
   198fc:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   19900:	mov	r6, r0
   19904:	cmp	sl, #0
   19908:	mov	r0, sl
   1990c:	cmpne	r6, #0
   19910:	beq	1a380 <__mempcpy_chk@plt+0x8da0>
   19914:	ldr	r7, [sp, #32]
   19918:	mov	r1, r0
   1991c:	stmib	r7, {r0, r6}
   19920:	ldr	r0, [r7, #32]
   19924:	ldr	sl, [sp, #40]	; 0x28
   19928:	ldr	r2, [sp, #20]
   1992c:	b	19840 <__mempcpy_chk@plt+0x8260>
   19930:	ldr	r0, [sl, #40]	; 0x28
   19934:	ldr	r2, [sp, #44]	; 0x2c
   19938:	cmp	r9, #0
   1993c:	add	r0, r0, r8
   19940:	str	r0, [sl, #40]	; 0x28
   19944:	beq	19968 <__mempcpy_chk@plt+0x8388>
   19948:	mov	r0, #0
   1994c:	add	r1, r4, r0
   19950:	add	r0, r0, #16
   19954:	vld1.32	{d16-d17}, [r1]
   19958:	cmp	r0, #32
   1995c:	vmvn	q8, q8
   19960:	vst1.32	{d16-d17}, [r1]
   19964:	bne	1994c <__mempcpy_chk@plt+0x836c>
   19968:	ldr	r0, [r2, #92]	; 0x5c
   1996c:	ldr	r8, [sp, #32]
   19970:	cmp	r0, #2
   19974:	blt	199a0 <__mempcpy_chk@plt+0x83c0>
   19978:	ldr	r1, [sp, #44]	; 0x2c
   1997c:	mov	r2, #0
   19980:	ldr	r1, [r1, #60]	; 0x3c
   19984:	ldr	r3, [r1, r2, lsl #2]
   19988:	ldr	r7, [r4, r2, lsl #2]
   1998c:	and	r3, r7, r3
   19990:	str	r3, [r4, r2, lsl #2]
   19994:	add	r2, r2, #1
   19998:	cmp	r2, #8
   1999c:	bne	19984 <__mempcpy_chk@plt+0x83a4>
   199a0:	ldr	r1, [r8, #20]
   199a4:	cmp	r1, #0
   199a8:	bne	199d0 <__mempcpy_chk@plt+0x83f0>
   199ac:	ldr	r1, [r8, #24]
   199b0:	cmp	r1, #0
   199b4:	bne	199d0 <__mempcpy_chk@plt+0x83f0>
   199b8:	ldr	r1, [r8, #28]
   199bc:	cmp	r1, #0
   199c0:	bne	199d0 <__mempcpy_chk@plt+0x83f0>
   199c4:	ldr	r1, [r8, #32]
   199c8:	cmp	r1, #0
   199cc:	beq	1a190 <__mempcpy_chk@plt+0x8bb0>
   199d0:	ldr	r6, [sp, #44]	; 0x2c
   199d4:	add	r3, sp, #56	; 0x38
   199d8:	mov	r1, #0
   199dc:	mov	r2, #0
   199e0:	mov	r5, #0
   199e4:	ldrb	r0, [r6, #88]	; 0x58
   199e8:	orr	r0, r0, #2
   199ec:	strb	r0, [r6, #88]	; 0x58
   199f0:	mov	r0, #6
   199f4:	str	r8, [sp, #56]	; 0x38
   199f8:	str	r0, [sp, #60]	; 0x3c
   199fc:	mov	r0, r6
   19a00:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19a04:	cmp	r0, #0
   19a08:	beq	1a370 <__mempcpy_chk@plt+0x8d90>
   19a0c:	mov	r9, r0
   19a10:	ldr	r0, [r4, r5, lsl #2]
   19a14:	cmp	r0, #0
   19a18:	bne	19a34 <__mempcpy_chk@plt+0x8454>
   19a1c:	add	r5, r5, #1
   19a20:	cmp	r5, #8
   19a24:	bne	19a10 <__mempcpy_chk@plt+0x8430>
   19a28:	mov	r0, r4
   19a2c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   19a30:	b	19a8c <__mempcpy_chk@plt+0x84ac>
   19a34:	mov	r0, #3
   19a38:	str	r4, [sp, #56]	; 0x38
   19a3c:	add	r3, sp, #56	; 0x38
   19a40:	mov	r1, #0
   19a44:	mov	r2, #0
   19a48:	mov	r5, #0
   19a4c:	str	r0, [sp, #60]	; 0x3c
   19a50:	mov	r0, r6
   19a54:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19a58:	cmp	r0, #0
   19a5c:	beq	1a370 <__mempcpy_chk@plt+0x8d90>
   19a60:	mov	r1, r0
   19a64:	mov	r0, #10
   19a68:	sub	r3, fp, #80	; 0x50
   19a6c:	mov	r2, r9
   19a70:	str	r0, [fp, #-76]	; 0xffffffb4
   19a74:	str	r5, [fp, #-80]	; 0xffffffb0
   19a78:	mov	r0, r6
   19a7c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19a80:	mov	r9, r0
   19a84:	cmp	r0, #0
   19a88:	beq	1a370 <__mempcpy_chk@plt+0x8d90>
   19a8c:	cmp	r9, #0
   19a90:	bne	19ab0 <__mempcpy_chk@plt+0x84d0>
   19a94:	ldr	r6, [sp, #16]
   19a98:	ldr	r2, [sp, #36]	; 0x24
   19a9c:	ldr	r5, [sp, #20]
   19aa0:	ldr	r0, [r6]
   19aa4:	cmp	r0, #0
   19aa8:	beq	19abc <__mempcpy_chk@plt+0x84dc>
   19aac:	b	1a060 <__mempcpy_chk@plt+0x8a80>
   19ab0:	ldr	r2, [sp, #36]	; 0x24
   19ab4:	ldr	r5, [sp, #20]
   19ab8:	ldr	r6, [sp, #16]
   19abc:	mov	r0, r5
   19ac0:	mov	r1, sl
   19ac4:	str	r6, [sp, #16]
   19ac8:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   19acc:	ldr	r1, [sl, #40]	; 0x28
   19ad0:	ldr	r2, [sp, #36]	; 0x24
   19ad4:	ldr	r3, [sp, #20]
   19ad8:	mov	r7, #0
   19adc:	sub	r4, fp, #80	; 0x50
   19ae0:	add	r0, r1, r0
   19ae4:	str	r0, [sl, #40]	; 0x28
   19ae8:	and	r0, r2, #16777216	; 0x1000000
   19aec:	str	r0, [sp, #24]
   19af0:	and	r0, r2, #2097152	; 0x200000
   19af4:	str	r0, [sp, #12]
   19af8:	ldrb	r0, [r3, #4]
   19afc:	cmp	r0, #23
   19b00:	bhi	19ff4 <__mempcpy_chk@plt+0x8a14>
   19b04:	movw	r6, #2048	; 0x800
   19b08:	mov	r1, #1
   19b0c:	movt	r6, #140	; 0x8c
   19b10:	tst	r6, r1, lsl r0
   19b14:	beq	19ff4 <__mempcpy_chk@plt+0x8a14>
   19b18:	cmp	r0, #23
   19b1c:	bne	19b78 <__mempcpy_chk@plt+0x8598>
   19b20:	ldr	r0, [r3]
   19b24:	ldr	r5, [r3, #4]
   19b28:	mov	r1, r3
   19b2c:	mov	r8, sl
   19b30:	str	r0, [sp, #32]
   19b34:	ldr	r0, [sl, #40]	; 0x28
   19b38:	str	r0, [sp, #28]
   19b3c:	mov	r0, sl
   19b40:	mov	sl, r3
   19b44:	bl	1b324 <__mempcpy_chk@plt+0x9d44>
   19b48:	cmn	r0, #1
   19b4c:	bne	19b94 <__mempcpy_chk@plt+0x85b4>
   19b50:	ldrb	r0, [sl, #4]
   19b54:	mov	r3, sl
   19b58:	cmp	r0, #1
   19b5c:	bne	19dd8 <__mempcpy_chk@plt+0x87f8>
   19b60:	ldrb	r1, [r3]
   19b64:	cmp	r1, #44	; 0x2c
   19b68:	bne	19dd8 <__mempcpy_chk@plt+0x87f8>
   19b6c:	ldr	r2, [sp, #36]	; 0x24
   19b70:	mov	r6, #0
   19b74:	b	19bac <__mempcpy_chk@plt+0x85cc>
   19b78:	cmp	r0, #19
   19b7c:	sub	r0, r0, #18
   19b80:	mvn	sl, #0
   19b84:	clz	r0, r0
   19b88:	movweq	sl, #1
   19b8c:	lsr	r6, r0, #5
   19b90:	b	19c20 <__mempcpy_chk@plt+0x8640>
   19b94:	ldr	r2, [sp, #36]	; 0x24
   19b98:	mov	r6, r0
   19b9c:	cmn	r0, #2
   19ba0:	mov	r3, sl
   19ba4:	beq	19df4 <__mempcpy_chk@plt+0x8814>
   19ba8:	ldr	r0, [r3, #4]
   19bac:	uxtb	r0, r0
   19bb0:	mov	sl, r6
   19bb4:	cmp	r0, #24
   19bb8:	beq	19bf0 <__mempcpy_chk@plt+0x8610>
   19bbc:	cmp	r0, #1
   19bc0:	bne	19df4 <__mempcpy_chk@plt+0x8814>
   19bc4:	ldrb	r0, [r3]
   19bc8:	cmp	r0, #44	; 0x2c
   19bcc:	bne	19df4 <__mempcpy_chk@plt+0x8814>
   19bd0:	ldr	r0, [sp, #40]	; 0x28
   19bd4:	mov	r1, r3
   19bd8:	bl	1b324 <__mempcpy_chk@plt+0x9d44>
   19bdc:	ldr	r3, [sp, #20]
   19be0:	ldr	r2, [sp, #36]	; 0x24
   19be4:	mov	sl, r0
   19be8:	cmn	r0, #2
   19bec:	beq	19df4 <__mempcpy_chk@plt+0x8814>
   19bf0:	cmn	sl, #1
   19bf4:	beq	19c00 <__mempcpy_chk@plt+0x8620>
   19bf8:	cmp	r6, sl
   19bfc:	bgt	19fb4 <__mempcpy_chk@plt+0x89d4>
   19c00:	ldrb	r0, [r3, #4]
   19c04:	cmp	r0, #24
   19c08:	bne	19fb4 <__mempcpy_chk@plt+0x89d4>
   19c0c:	cmn	sl, #1
   19c10:	mov	r0, sl
   19c14:	moveq	r0, r6
   19c18:	cmp	r0, #32768	; 0x8000
   19c1c:	bge	19fdc <__mempcpy_chk@plt+0x89fc>
   19c20:	ldr	r5, [sp, #40]	; 0x28
   19c24:	mov	r0, r3
   19c28:	mov	r1, r5
   19c2c:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   19c30:	ldr	r1, [r5, #40]	; 0x28
   19c34:	cmp	r9, #0
   19c38:	add	r0, r1, r0
   19c3c:	str	r0, [r5, #40]	; 0x28
   19c40:	mov	r5, #0
   19c44:	beq	19e38 <__mempcpy_chk@plt+0x8858>
   19c48:	orrs	r0, sl, r6
   19c4c:	beq	19e48 <__mempcpy_chk@plt+0x8868>
   19c50:	mov	r0, #0
   19c54:	cmp	r6, #1
   19c58:	mov	r8, r9
   19c5c:	str	r0, [sp, #32]
   19c60:	str	r9, [sp, #28]
   19c64:	bge	19eac <__mempcpy_chk@plt+0x88cc>
   19c68:	ldrb	r0, [r8, #24]
   19c6c:	cmp	r0, #17
   19c70:	bne	19ce4 <__mempcpy_chk@plt+0x8704>
   19c74:	ldr	r0, [r8, #20]
   19c78:	mov	r2, r8
   19c7c:	mov	r1, r2
   19c80:	ldr	r2, [r2, #4]
   19c84:	cmp	r2, #0
   19c88:	bne	19c7c <__mempcpy_chk@plt+0x869c>
   19c8c:	ldr	r2, [r1, #8]
   19c90:	cmp	r2, #0
   19c94:	bne	19c7c <__mempcpy_chk@plt+0x869c>
   19c98:	ldr	r2, [r1, #24]
   19c9c:	uxtb	r3, r2
   19ca0:	cmp	r3, #17
   19ca4:	bne	19cb8 <__mempcpy_chk@plt+0x86d8>
   19ca8:	ldr	r3, [r1, #20]
   19cac:	cmp	r3, r0
   19cb0:	orreq	r2, r2, #524288	; 0x80000
   19cb4:	streq	r2, [r1, #24]
   19cb8:	ldr	r3, [r1]
   19cbc:	cmp	r3, #0
   19cc0:	beq	19ce4 <__mempcpy_chk@plt+0x8704>
   19cc4:	ldr	r2, [r3, #8]
   19cc8:	cmp	r2, r1
   19ccc:	mov	r1, r3
   19cd0:	beq	19c98 <__mempcpy_chk@plt+0x86b8>
   19cd4:	cmp	r2, #0
   19cd8:	mov	r1, r3
   19cdc:	beq	19c98 <__mempcpy_chk@plt+0x86b8>
   19ce0:	b	19c7c <__mempcpy_chk@plt+0x869c>
   19ce4:	cmn	sl, #1
   19ce8:	mov	r0, #10
   19cec:	str	r7, [fp, #-80]	; 0xffffffb0
   19cf0:	mov	r1, r8
   19cf4:	mov	r2, #0
   19cf8:	mov	r3, r4
   19cfc:	movweq	r0, #11
   19d00:	str	r0, [fp, #-76]	; 0xffffffb4
   19d04:	ldr	r0, [sp, #44]	; 0x2c
   19d08:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19d0c:	cmp	r0, #0
   19d10:	beq	19f48 <__mempcpy_chk@plt+0x8968>
   19d14:	mov	r5, r0
   19d18:	add	r0, r6, #2
   19d1c:	cmp	r0, sl
   19d20:	ble	19d58 <__mempcpy_chk@plt+0x8778>
   19d24:	ldr	r1, [sp, #32]
   19d28:	ldr	sl, [sp, #40]	; 0x28
   19d2c:	cmp	r1, #0
   19d30:	beq	19e24 <__mempcpy_chk@plt+0x8844>
   19d34:	mov	r0, #16
   19d38:	mov	r2, r5
   19d3c:	mov	r3, r4
   19d40:	str	r0, [fp, #-76]	; 0xffffffb4
   19d44:	ldr	r0, [sp, #44]	; 0x2c
   19d48:	str	r7, [fp, #-80]	; 0xffffffb0
   19d4c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19d50:	mov	r5, r0
   19d54:	b	19f5c <__mempcpy_chk@plt+0x897c>
   19d58:	add	r6, r6, #1
   19d5c:	ldr	r9, [sp, #44]	; 0x2c
   19d60:	mov	r0, r8
   19d64:	mov	r1, r9
   19d68:	bl	1b3d0 <__mempcpy_chk@plt+0x9df0>
   19d6c:	mov	r8, r0
   19d70:	mov	r0, #16
   19d74:	mov	r1, r5
   19d78:	mov	r3, r4
   19d7c:	str	r0, [fp, #-76]	; 0xffffffb4
   19d80:	mov	r0, r9
   19d84:	mov	r2, r8
   19d88:	str	r7, [fp, #-80]	; 0xffffffb0
   19d8c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19d90:	cmp	r8, #0
   19d94:	movne	r1, r0
   19d98:	cmpne	r0, #0
   19d9c:	beq	19f48 <__mempcpy_chk@plt+0x8968>
   19da0:	mov	r0, #10
   19da4:	mov	r2, #0
   19da8:	mov	r3, r4
   19dac:	str	r0, [fp, #-76]	; 0xffffffb4
   19db0:	ldr	r0, [sp, #44]	; 0x2c
   19db4:	str	r7, [fp, #-80]	; 0xffffffb0
   19db8:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19dbc:	cmp	r0, #0
   19dc0:	beq	19f48 <__mempcpy_chk@plt+0x8968>
   19dc4:	add	r6, r6, #1
   19dc8:	mov	r5, r0
   19dcc:	cmp	r6, sl
   19dd0:	blt	19d5c <__mempcpy_chk@plt+0x877c>
   19dd4:	b	19d24 <__mempcpy_chk@plt+0x8744>
   19dd8:	ldr	r0, [sp, #16]
   19ddc:	ldr	r2, [sp, #36]	; 0x24
   19de0:	mov	r1, #10
   19de4:	mov	r5, #0
   19de8:	mov	sl, r8
   19dec:	str	r1, [r0]
   19df0:	b	19f68 <__mempcpy_chk@plt+0x8988>
   19df4:	ldr	r0, [sp, #12]
   19df8:	cmp	r0, #0
   19dfc:	beq	19fc0 <__mempcpy_chk@plt+0x89e0>
   19e00:	ldr	sl, [sp, #40]	; 0x28
   19e04:	ldr	r0, [sp, #28]
   19e08:	str	r0, [sl, #40]	; 0x28
   19e0c:	mov	r0, #1
   19e10:	bfi	r5, r0, #0, #8
   19e14:	ldr	r0, [sp, #32]
   19e18:	stm	r3, {r0, r5}
   19e1c:	mov	r5, r9
   19e20:	b	19f68 <__mempcpy_chk@plt+0x8988>
   19e24:	ldr	r2, [sp, #36]	; 0x24
   19e28:	ldr	r3, [sp, #20]
   19e2c:	clz	r0, r5
   19e30:	lsr	r0, r0, #5
   19e34:	b	19f88 <__mempcpy_chk@plt+0x89a8>
   19e38:	ldr	sl, [sp, #40]	; 0x28
   19e3c:	ldr	r2, [sp, #36]	; 0x24
   19e40:	ldr	r3, [sp, #20]
   19e44:	b	19f68 <__mempcpy_chk@plt+0x8988>
   19e48:	ldr	sl, [sp, #40]	; 0x28
   19e4c:	mov	r0, r9
   19e50:	mov	r5, r0
   19e54:	ldr	r0, [r0, #4]
   19e58:	cmp	r0, #0
   19e5c:	bne	19e50 <__mempcpy_chk@plt+0x8870>
   19e60:	ldr	r0, [r5, #8]
   19e64:	cmp	r0, #0
   19e68:	bne	19e50 <__mempcpy_chk@plt+0x8870>
   19e6c:	add	r0, r5, #20
   19e70:	bl	1795c <__mempcpy_chk@plt+0x637c>
   19e74:	ldr	r1, [r5]
   19e78:	cmp	r1, #0
   19e7c:	beq	19ea0 <__mempcpy_chk@plt+0x88c0>
   19e80:	ldr	r0, [r1, #8]
   19e84:	cmp	r0, r5
   19e88:	mov	r5, r1
   19e8c:	beq	19e6c <__mempcpy_chk@plt+0x888c>
   19e90:	cmp	r0, #0
   19e94:	mov	r5, r1
   19e98:	beq	19e6c <__mempcpy_chk@plt+0x888c>
   19e9c:	b	19e50 <__mempcpy_chk@plt+0x8870>
   19ea0:	ldr	r2, [sp, #36]	; 0x24
   19ea4:	ldr	r3, [sp, #20]
   19ea8:	b	19fec <__mempcpy_chk@plt+0x8a0c>
   19eac:	ldr	r9, [sp, #28]
   19eb0:	str	r9, [sp, #32]
   19eb4:	beq	19f18 <__mempcpy_chk@plt+0x8938>
   19eb8:	ldr	r0, [sp, #28]
   19ebc:	sub	r5, r6, #1
   19ec0:	mov	r9, r0
   19ec4:	str	r0, [sp, #32]
   19ec8:	ldr	r8, [sp, #44]	; 0x2c
   19ecc:	mov	r0, r9
   19ed0:	mov	r1, r8
   19ed4:	bl	1b3d0 <__mempcpy_chk@plt+0x9df0>
   19ed8:	ldr	r1, [sp, #32]
   19edc:	mov	r9, r0
   19ee0:	mov	r0, #16
   19ee4:	mov	r3, r4
   19ee8:	str	r0, [fp, #-76]	; 0xffffffb4
   19eec:	mov	r0, r8
   19ef0:	mov	r2, r9
   19ef4:	str	r7, [fp, #-80]	; 0xffffffb0
   19ef8:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   19efc:	str	r0, [sp, #32]
   19f00:	cmp	r9, #0
   19f04:	ldrne	r0, [sp, #32]
   19f08:	cmpne	r0, #0
   19f0c:	beq	19f48 <__mempcpy_chk@plt+0x8968>
   19f10:	subs	r5, r5, #1
   19f14:	bne	19ec8 <__mempcpy_chk@plt+0x88e8>
   19f18:	cmp	r6, sl
   19f1c:	bne	19f30 <__mempcpy_chk@plt+0x8950>
   19f20:	ldr	sl, [sp, #40]	; 0x28
   19f24:	ldr	r2, [sp, #36]	; 0x24
   19f28:	ldr	r5, [sp, #32]
   19f2c:	b	19e28 <__mempcpy_chk@plt+0x8848>
   19f30:	ldr	r1, [sp, #44]	; 0x2c
   19f34:	mov	r0, r9
   19f38:	bl	1b3d0 <__mempcpy_chk@plt+0x9df0>
   19f3c:	mov	r8, r0
   19f40:	cmp	r0, #0
   19f44:	bne	19c68 <__mempcpy_chk@plt+0x8688>
   19f48:	ldr	r0, [sp, #16]
   19f4c:	ldr	sl, [sp, #40]	; 0x28
   19f50:	mov	r1, #12
   19f54:	mov	r5, #0
   19f58:	str	r1, [r0]
   19f5c:	ldr	r2, [sp, #36]	; 0x24
   19f60:	ldr	r3, [sp, #20]
   19f64:	ldr	r9, [sp, #28]
   19f68:	clz	r0, r5
   19f6c:	cmp	r5, #0
   19f70:	lsr	r0, r0, #5
   19f74:	bne	19f88 <__mempcpy_chk@plt+0x89a8>
   19f78:	ldr	r1, [sp, #16]
   19f7c:	ldr	r1, [r1]
   19f80:	cmp	r1, #0
   19f84:	bne	1a134 <__mempcpy_chk@plt+0x8b54>
   19f88:	ldr	r1, [sp, #24]
   19f8c:	mov	r9, r5
   19f90:	cmp	r1, #0
   19f94:	beq	19af8 <__mempcpy_chk@plt+0x8518>
   19f98:	ldrb	r1, [r3, #4]
   19f9c:	cmp	r1, #23
   19fa0:	beq	19ffc <__mempcpy_chk@plt+0x8a1c>
   19fa4:	cmp	r1, #11
   19fa8:	mov	r9, r5
   19fac:	bne	19af8 <__mempcpy_chk@plt+0x8518>
   19fb0:	b	19ffc <__mempcpy_chk@plt+0x8a1c>
   19fb4:	ldr	r0, [sp, #16]
   19fb8:	mov	r1, #10
   19fbc:	b	19fe4 <__mempcpy_chk@plt+0x8a04>
   19fc0:	ldrb	r0, [r3, #4]
   19fc4:	ldr	r1, [sp, #16]
   19fc8:	cmp	r0, #2
   19fcc:	mov	r0, #10
   19fd0:	movweq	r0, #9
   19fd4:	str	r0, [r1]
   19fd8:	b	19fe8 <__mempcpy_chk@plt+0x8a08>
   19fdc:	ldr	r0, [sp, #16]
   19fe0:	mov	r1, #15
   19fe4:	str	r1, [r0]
   19fe8:	ldr	sl, [sp, #40]	; 0x28
   19fec:	mov	r5, #0
   19ff0:	b	19f68 <__mempcpy_chk@plt+0x8988>
   19ff4:	mov	r8, r9
   19ff8:	b	1a064 <__mempcpy_chk@plt+0x8a84>
   19ffc:	cmp	r0, #0
   1a000:	bne	1a054 <__mempcpy_chk@plt+0x8a74>
   1a004:	mov	r4, r5
   1a008:	ldr	r5, [r5, #4]
   1a00c:	cmp	r5, #0
   1a010:	bne	1a004 <__mempcpy_chk@plt+0x8a24>
   1a014:	ldr	r5, [r4, #8]
   1a018:	cmp	r5, #0
   1a01c:	bne	1a004 <__mempcpy_chk@plt+0x8a24>
   1a020:	add	r0, r4, #20
   1a024:	bl	1795c <__mempcpy_chk@plt+0x637c>
   1a028:	ldr	r0, [r4]
   1a02c:	cmp	r0, #0
   1a030:	beq	1a054 <__mempcpy_chk@plt+0x8a74>
   1a034:	ldr	r5, [r0, #8]
   1a038:	cmp	r5, r4
   1a03c:	mov	r4, r0
   1a040:	beq	1a020 <__mempcpy_chk@plt+0x8a40>
   1a044:	cmp	r5, #0
   1a048:	mov	r4, r0
   1a04c:	beq	1a020 <__mempcpy_chk@plt+0x8a40>
   1a050:	b	1a004 <__mempcpy_chk@plt+0x8a24>
   1a054:	ldr	r1, [sp, #16]
   1a058:	mov	r0, #13
   1a05c:	str	r0, [r1]
   1a060:	mov	r8, #0
   1a064:	mov	r0, r8
   1a068:	sub	sp, fp, #28
   1a06c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a070:	mov	r5, #9
   1a074:	mov	r0, #6
   1a078:	str	r0, [r4]
   1a07c:	mov	r0, r6
   1a080:	mov	r1, #0
   1a084:	mov	r2, #0
   1a088:	mov	r3, r4
   1a08c:	mov	r8, #0
   1a090:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a094:	mov	r7, r0
   1a098:	mov	r0, r6
   1a09c:	mov	r1, #0
   1a0a0:	mov	r2, #0
   1a0a4:	mov	r3, r4
   1a0a8:	str	r5, [r4]
   1a0ac:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a0b0:	mov	r4, r0
   1a0b4:	mov	r0, #10
   1a0b8:	sub	r3, fp, #80	; 0x50
   1a0bc:	mov	r1, r7
   1a0c0:	str	r0, [fp, #-76]	; 0xffffffb4
   1a0c4:	mov	r0, r6
   1a0c8:	mov	r2, r4
   1a0cc:	str	r8, [fp, #-80]	; 0xffffffb0
   1a0d0:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a0d4:	cmp	r7, #0
   1a0d8:	cmpne	r4, #0
   1a0dc:	bne	1a104 <__mempcpy_chk@plt+0x8b24>
   1a0e0:	mov	r0, #12
   1a0e4:	str	r0, [r9]
   1a0e8:	b	1a064 <__mempcpy_chk@plt+0x8a84>
   1a0ec:	mov	r0, r6
   1a0f0:	mov	r1, #0
   1a0f4:	mov	r2, #0
   1a0f8:	mov	r3, r4
   1a0fc:	mov	r8, #0
   1a100:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a104:	mov	r5, r0
   1a108:	cmp	r0, #0
   1a10c:	beq	1a0e0 <__mempcpy_chk@plt+0x8b00>
   1a110:	ldr	r0, [sp, #20]
   1a114:	ldr	r2, [sp, #36]	; 0x24
   1a118:	mov	r1, sl
   1a11c:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   1a120:	ldr	r1, [sl, #40]	; 0x28
   1a124:	mov	r8, r5
   1a128:	add	r0, r1, r0
   1a12c:	str	r0, [sl, #40]	; 0x28
   1a130:	b	1a064 <__mempcpy_chk@plt+0x8a84>
   1a134:	mov	r8, #0
   1a138:	cmp	r9, #0
   1a13c:	beq	1a064 <__mempcpy_chk@plt+0x8a84>
   1a140:	mov	r5, r9
   1a144:	ldr	r9, [r9, #4]
   1a148:	cmp	r9, #0
   1a14c:	bne	1a140 <__mempcpy_chk@plt+0x8b60>
   1a150:	ldr	r9, [r5, #8]
   1a154:	cmp	r9, #0
   1a158:	bne	1a140 <__mempcpy_chk@plt+0x8b60>
   1a15c:	add	r0, r5, #20
   1a160:	bl	1795c <__mempcpy_chk@plt+0x637c>
   1a164:	ldr	r0, [r5]
   1a168:	cmp	r0, #0
   1a16c:	beq	1a064 <__mempcpy_chk@plt+0x8a84>
   1a170:	ldr	r9, [r0, #8]
   1a174:	cmp	r9, r5
   1a178:	mov	r5, r0
   1a17c:	beq	1a15c <__mempcpy_chk@plt+0x8b7c>
   1a180:	cmp	r9, #0
   1a184:	mov	r5, r0
   1a188:	beq	1a15c <__mempcpy_chk@plt+0x8b7c>
   1a18c:	b	1a140 <__mempcpy_chk@plt+0x8b60>
   1a190:	cmp	r0, #2
   1a194:	blt	1a1b0 <__mempcpy_chk@plt+0x8bd0>
   1a198:	ldr	r0, [r8, #36]	; 0x24
   1a19c:	cmp	r0, #0
   1a1a0:	bne	199d0 <__mempcpy_chk@plt+0x83f0>
   1a1a4:	ldrb	r0, [r8, #16]
   1a1a8:	tst	r0, #1
   1a1ac:	bne	199d0 <__mempcpy_chk@plt+0x83f0>
   1a1b0:	mov	r0, r8
   1a1b4:	bl	179ec <__mempcpy_chk@plt+0x640c>
   1a1b8:	mov	r0, #3
   1a1bc:	str	r4, [sp, #56]	; 0x38
   1a1c0:	add	r3, sp, #56	; 0x38
   1a1c4:	mov	r1, #0
   1a1c8:	mov	r2, #0
   1a1cc:	str	r0, [sp, #60]	; 0x3c
   1a1d0:	ldr	r0, [sp, #44]	; 0x2c
   1a1d4:	b	19a7c <__mempcpy_chk@plt+0x849c>
   1a1d8:	mov	r0, #12
   1a1dc:	b	193ec <__mempcpy_chk@plt+0x7e0c>
   1a1e0:	mov	r6, r0
   1a1e4:	b	1a344 <__mempcpy_chk@plt+0x8d64>
   1a1e8:	mov	r6, #7
   1a1ec:	b	1a344 <__mempcpy_chk@plt+0x8d64>
   1a1f0:	mov	r0, #2
   1a1f4:	b	1a374 <__mempcpy_chk@plt+0x8d94>
   1a1f8:	mov	r0, r4
   1a1fc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a200:	mov	r0, r8
   1a204:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a208:	ldr	r1, [sp, #16]
   1a20c:	mov	r0, #12
   1a210:	str	r0, [r1]
   1a214:	b	19a8c <__mempcpy_chk@plt+0x84ac>
   1a218:	mov	r0, #6
   1a21c:	b	193ec <__mempcpy_chk@plt+0x7e0c>
   1a220:	mov	r6, #3
   1a224:	b	1a344 <__mempcpy_chk@plt+0x8d64>
   1a228:	ldr	r1, [sp, #16]
   1a22c:	mov	r0, #12
   1a230:	str	r0, [r1]
   1a234:	b	1a064 <__mempcpy_chk@plt+0x8a84>
   1a238:	mov	r9, r6
   1a23c:	mov	r5, #0
   1a240:	mov	r8, #0
   1a244:	b	1a254 <__mempcpy_chk@plt+0x8c74>
   1a248:	mov	r9, r6
   1a24c:	mov	r8, #4
   1a250:	mov	r5, #128	; 0x80
   1a254:	bl	1149c <__ctype_b_loc@plt>
   1a258:	ldr	r0, [r0]
   1a25c:	ldr	sl, [sp, #40]	; 0x28
   1a260:	ldr	r4, [sp, #20]
   1a264:	mov	r1, #1
   1a268:	mov	r6, r9
   1a26c:	add	r7, r0, r5, lsl #1
   1a270:	ldr	r0, [sp, #44]	; 0x2c
   1a274:	mov	ip, r6
   1a278:	mov	r3, #0
   1a27c:	add	r0, r0, r8, lsl #2
   1a280:	add	r2, r0, #96	; 0x60
   1a284:	mov	r0, r7
   1a288:	add	r6, r5, r3
   1a28c:	cmp	r6, #95	; 0x5f
   1a290:	beq	1a2a0 <__mempcpy_chk@plt+0x8cc0>
   1a294:	ldrh	r6, [r0]
   1a298:	ands	r6, r6, #8
   1a29c:	beq	1a2ac <__mempcpy_chk@plt+0x8ccc>
   1a2a0:	ldr	r6, [r2]
   1a2a4:	orr	r6, r6, r1, lsl r3
   1a2a8:	str	r6, [r2]
   1a2ac:	add	r3, r3, #1
   1a2b0:	add	r0, r0, #2
   1a2b4:	cmp	r3, #32
   1a2b8:	bne	1a288 <__mempcpy_chk@plt+0x8ca8>
   1a2bc:	add	r8, r8, #1
   1a2c0:	add	r7, r7, #64	; 0x40
   1a2c4:	add	r5, r5, #32
   1a2c8:	mov	r6, ip
   1a2cc:	cmp	r8, #8
   1a2d0:	bne	1a270 <__mempcpy_chk@plt+0x8c90>
   1a2d4:	b	19094 <__mempcpy_chk@plt+0x7ab4>
   1a2d8:	ldr	r9, [sp, #16]
   1a2dc:	cmp	r1, #0
   1a2e0:	beq	1a334 <__mempcpy_chk@plt+0x8d54>
   1a2e4:	mov	r5, r1
   1a2e8:	ldr	r1, [r1, #4]
   1a2ec:	cmp	r1, #0
   1a2f0:	bne	1a2e4 <__mempcpy_chk@plt+0x8d04>
   1a2f4:	ldr	r1, [r5, #8]
   1a2f8:	cmp	r1, #0
   1a2fc:	bne	1a2e4 <__mempcpy_chk@plt+0x8d04>
   1a300:	add	r0, r5, #20
   1a304:	bl	1795c <__mempcpy_chk@plt+0x637c>
   1a308:	ldr	r0, [r5]
   1a30c:	cmp	r0, #0
   1a310:	beq	1a334 <__mempcpy_chk@plt+0x8d54>
   1a314:	ldr	r1, [r0, #8]
   1a318:	cmp	r1, r5
   1a31c:	mov	r5, r0
   1a320:	beq	1a300 <__mempcpy_chk@plt+0x8d20>
   1a324:	cmp	r1, #0
   1a328:	mov	r5, r0
   1a32c:	beq	1a300 <__mempcpy_chk@plt+0x8d20>
   1a330:	b	1a2e4 <__mempcpy_chk@plt+0x8d04>
   1a334:	mov	r0, #8
   1a338:	b	1a0e4 <__mempcpy_chk@plt+0x8b04>
   1a33c:	mov	r6, #3
   1a340:	ldr	sl, [sp, #40]	; 0x28
   1a344:	ldr	r0, [sp, #16]
   1a348:	str	r6, [r0]
   1a34c:	ldr	r8, [sp, #32]
   1a350:	mov	r0, r4
   1a354:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a358:	mov	r0, r8
   1a35c:	bl	179ec <__mempcpy_chk@plt+0x640c>
   1a360:	mov	r9, #0
   1a364:	b	19a8c <__mempcpy_chk@plt+0x84ac>
   1a368:	ldr	sl, [sp, #40]	; 0x28
   1a36c:	ldr	r8, [sp, #32]
   1a370:	mov	r0, #12
   1a374:	ldr	r1, [sp, #16]
   1a378:	str	r0, [r1]
   1a37c:	b	1a350 <__mempcpy_chk@plt+0x8d70>
   1a380:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a384:	mov	r0, r6
   1a388:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a38c:	mov	r6, #12
   1a390:	b	1a340 <__mempcpy_chk@plt+0x8d60>
   1a394:	push	{r4, r5, r6, r7, fp, lr}
   1a398:	add	fp, sp, #16
   1a39c:	mov	r5, r1
   1a3a0:	ldr	r1, [r0, #64]	; 0x40
   1a3a4:	mov	r6, r3
   1a3a8:	mov	r4, r2
   1a3ac:	mov	r7, r0
   1a3b0:	cmp	r1, #31
   1a3b4:	beq	1a40c <__mempcpy_chk@plt+0x8e2c>
   1a3b8:	ldr	r0, [r7, #56]	; 0x38
   1a3bc:	add	r0, r0, r1, lsl #5
   1a3c0:	add	r2, r1, #1
   1a3c4:	mov	r1, #0
   1a3c8:	cmp	r5, #0
   1a3cc:	str	r2, [r7, #64]	; 0x40
   1a3d0:	mvn	r7, #0
   1a3d4:	str	r1, [r0, #4]!
   1a3d8:	str	r4, [r0, #8]
   1a3dc:	str	r5, [r0, #4]
   1a3e0:	ldm	r6, {r2, r3}
   1a3e4:	str	r7, [r0, #28]
   1a3e8:	str	r1, [r0, #16]
   1a3ec:	str	r1, [r0, #12]
   1a3f0:	bic	r1, r3, #786432	; 0xc0000
   1a3f4:	str	r2, [r0, #20]
   1a3f8:	str	r1, [r0, #24]
   1a3fc:	strne	r0, [r5]
   1a400:	cmp	r4, #0
   1a404:	strne	r0, [r4]
   1a408:	pop	{r4, r5, r6, r7, fp, pc}
   1a40c:	mov	r0, #996	; 0x3e4
   1a410:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1a414:	cmp	r0, #0
   1a418:	beq	1a434 <__mempcpy_chk@plt+0x8e54>
   1a41c:	ldr	r1, [r7, #56]	; 0x38
   1a420:	str	r1, [r0]
   1a424:	mov	r1, #0
   1a428:	str	r1, [r7, #64]	; 0x40
   1a42c:	str	r0, [r7, #56]	; 0x38
   1a430:	b	1a3bc <__mempcpy_chk@plt+0x8ddc>
   1a434:	mov	r0, #0
   1a438:	pop	{r4, r5, r6, r7, fp, pc}
   1a43c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a440:	add	fp, sp, #28
   1a444:	sub	sp, sp, #28
   1a448:	mov	sl, r1
   1a44c:	mov	r9, r0
   1a450:	mov	r7, #0
   1a454:	mov	r0, #32
   1a458:	mov	r1, #1
   1a45c:	mov	r8, r3
   1a460:	mov	r4, r2
   1a464:	str	r7, [sp, #16]
   1a468:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1a46c:	ldr	r1, [fp, #12]
   1a470:	cmp	r0, #0
   1a474:	beq	1a624 <__mempcpy_chk@plt+0x9044>
   1a478:	mov	r5, r0
   1a47c:	mov	r0, #40	; 0x28
   1a480:	mov	r1, #1
   1a484:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1a488:	cmp	r0, #0
   1a48c:	beq	1a62c <__mempcpy_chk@plt+0x904c>
   1a490:	mov	r6, r0
   1a494:	ldrb	r0, [r0, #16]
   1a498:	ldr	r1, [fp, #8]
   1a49c:	add	r3, sp, #16
   1a4a0:	mov	r7, #0
   1a4a4:	stm	sp, {r4, r7}
   1a4a8:	mov	r2, r6
   1a4ac:	and	r0, r0, #254	; 0xfe
   1a4b0:	orr	r0, r0, r1
   1a4b4:	mov	r1, r5
   1a4b8:	strb	r0, [r6, #16]
   1a4bc:	mov	r0, sl
   1a4c0:	bl	1aa94 <__mempcpy_chk@plt+0x94b4>
   1a4c4:	cmp	r0, #0
   1a4c8:	bne	1a648 <__mempcpy_chk@plt+0x9068>
   1a4cc:	ldrb	r0, [r8]
   1a4d0:	cmp	r0, #0
   1a4d4:	beq	1a500 <__mempcpy_chk@plt+0x8f20>
   1a4d8:	add	r1, r8, #1
   1a4dc:	mov	r2, #1
   1a4e0:	ubfx	r3, r0, #5, #3
   1a4e4:	and	r0, r0, #31
   1a4e8:	ldr	r7, [r5, r3, lsl #2]
   1a4ec:	orr	r0, r7, r2, lsl r0
   1a4f0:	str	r0, [r5, r3, lsl #2]
   1a4f4:	ldrb	r0, [r1], #1
   1a4f8:	cmp	r0, #0
   1a4fc:	bne	1a4e0 <__mempcpy_chk@plt+0x8f00>
   1a500:	ldr	r0, [fp, #8]
   1a504:	cmp	r0, #0
   1a508:	beq	1a52c <__mempcpy_chk@plt+0x8f4c>
   1a50c:	mov	r0, #0
   1a510:	add	r1, r5, r0
   1a514:	add	r0, r0, #16
   1a518:	vld1.32	{d16-d17}, [r1]
   1a51c:	cmp	r0, #32
   1a520:	vmvn	q8, q8
   1a524:	vst1.32	{d16-d17}, [r1]
   1a528:	bne	1a510 <__mempcpy_chk@plt+0x8f30>
   1a52c:	ldr	r0, [r9, #92]	; 0x5c
   1a530:	cmp	r0, #2
   1a534:	blt	1a55c <__mempcpy_chk@plt+0x8f7c>
   1a538:	ldr	r0, [r9, #60]	; 0x3c
   1a53c:	mov	r1, #0
   1a540:	ldr	r2, [r0, r1, lsl #2]
   1a544:	ldr	r3, [r5, r1, lsl #2]
   1a548:	and	r2, r3, r2
   1a54c:	str	r2, [r5, r1, lsl #2]
   1a550:	add	r1, r1, #1
   1a554:	cmp	r1, #8
   1a558:	bne	1a540 <__mempcpy_chk@plt+0x8f60>
   1a55c:	mov	r0, #3
   1a560:	add	r3, sp, #8
   1a564:	mov	r1, #0
   1a568:	mov	r2, #0
   1a56c:	mov	r7, #0
   1a570:	str	r0, [sp, #12]
   1a574:	mov	r0, r9
   1a578:	str	r5, [sp, #8]
   1a57c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a580:	cmp	r0, #0
   1a584:	beq	1a610 <__mempcpy_chk@plt+0x9030>
   1a588:	mov	r4, r0
   1a58c:	ldr	r0, [r9, #92]	; 0x5c
   1a590:	cmp	r0, #2
   1a594:	blt	1a5f8 <__mempcpy_chk@plt+0x9018>
   1a598:	mov	r0, #6
   1a59c:	str	r6, [sp, #8]
   1a5a0:	add	r3, sp, #8
   1a5a4:	mov	r1, #0
   1a5a8:	mov	r2, #0
   1a5ac:	mov	r8, #0
   1a5b0:	str	r0, [sp, #12]
   1a5b4:	ldrb	r0, [r9, #88]	; 0x58
   1a5b8:	orr	r0, r0, #2
   1a5bc:	strb	r0, [r9, #88]	; 0x58
   1a5c0:	mov	r0, r9
   1a5c4:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a5c8:	cmp	r0, #0
   1a5cc:	beq	1a610 <__mempcpy_chk@plt+0x9030>
   1a5d0:	mov	r2, r0
   1a5d4:	mov	r0, #10
   1a5d8:	add	r3, sp, #20
   1a5dc:	mov	r1, r4
   1a5e0:	str	r0, [sp, #24]
   1a5e4:	mov	r0, r9
   1a5e8:	str	r8, [sp, #20]
   1a5ec:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1a5f0:	mov	r7, r0
   1a5f4:	b	1a604 <__mempcpy_chk@plt+0x9024>
   1a5f8:	mov	r0, r6
   1a5fc:	bl	179ec <__mempcpy_chk@plt+0x640c>
   1a600:	mov	r7, r4
   1a604:	mov	r0, r7
   1a608:	sub	sp, fp, #28
   1a60c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a610:	mov	r0, r5
   1a614:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a618:	mov	r0, r6
   1a61c:	bl	179ec <__mempcpy_chk@plt+0x640c>
   1a620:	ldr	r1, [fp, #12]
   1a624:	mov	r0, #12
   1a628:	b	1a640 <__mempcpy_chk@plt+0x9060>
   1a62c:	mov	r0, r5
   1a630:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a634:	ldr	r1, [fp, #12]
   1a638:	mov	r0, #12
   1a63c:	mov	r7, #0
   1a640:	str	r0, [r1]
   1a644:	b	1a604 <__mempcpy_chk@plt+0x9024>
   1a648:	mov	r4, r0
   1a64c:	mov	r0, r5
   1a650:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1a654:	mov	r0, r6
   1a658:	bl	179ec <__mempcpy_chk@plt+0x640c>
   1a65c:	ldr	r0, [fp, #12]
   1a660:	str	r4, [r0]
   1a664:	b	1a604 <__mempcpy_chk@plt+0x9024>
   1a668:	push	{fp, lr}
   1a66c:	mov	fp, sp
   1a670:	ldr	ip, [r1, #40]	; 0x28
   1a674:	ldr	r3, [r1, #56]	; 0x38
   1a678:	cmp	r3, ip
   1a67c:	ble	1a6f8 <__mempcpy_chk@plt+0x9118>
   1a680:	ldr	r3, [r1, #4]
   1a684:	ldrb	lr, [r3, ip]
   1a688:	strb	lr, [r0]
   1a68c:	ldr	r3, [r1, #80]	; 0x50
   1a690:	cmp	r3, #2
   1a694:	blt	1a6b8 <__mempcpy_chk@plt+0x90d8>
   1a698:	ldr	r3, [r1, #28]
   1a69c:	ldr	ip, [r1, #40]	; 0x28
   1a6a0:	cmp	ip, r3
   1a6a4:	beq	1a6b8 <__mempcpy_chk@plt+0x90d8>
   1a6a8:	ldr	r3, [r1, #8]
   1a6ac:	ldr	r3, [r3, ip, lsl #2]
   1a6b0:	cmn	r3, #1
   1a6b4:	beq	1a7a0 <__mempcpy_chk@plt+0x91c0>
   1a6b8:	tst	r2, #1
   1a6bc:	beq	1a708 <__mempcpy_chk@plt+0x9128>
   1a6c0:	cmp	lr, #92	; 0x5c
   1a6c4:	bne	1a708 <__mempcpy_chk@plt+0x9128>
   1a6c8:	ldr	r2, [r1, #40]	; 0x28
   1a6cc:	ldr	r3, [r1, #48]	; 0x30
   1a6d0:	add	r2, r2, #1
   1a6d4:	cmp	r2, r3
   1a6d8:	bge	1a7a0 <__mempcpy_chk@plt+0x91c0>
   1a6dc:	str	r2, [r1, #40]	; 0x28
   1a6e0:	ldr	r1, [r1, #4]
   1a6e4:	ldrb	r2, [r1, r2]
   1a6e8:	mov	r1, #1
   1a6ec:	strb	r1, [r0, #4]
   1a6f0:	strb	r2, [r0]
   1a6f4:	b	1a7a8 <__mempcpy_chk@plt+0x91c8>
   1a6f8:	mov	r1, #2
   1a6fc:	strb	r1, [r0, #4]
   1a700:	mov	r1, #0
   1a704:	b	1a7a8 <__mempcpy_chk@plt+0x91c8>
   1a708:	cmp	lr, #92	; 0x5c
   1a70c:	bgt	1a760 <__mempcpy_chk@plt+0x9180>
   1a710:	cmp	lr, #45	; 0x2d
   1a714:	beq	1a778 <__mempcpy_chk@plt+0x9198>
   1a718:	cmp	lr, #91	; 0x5b
   1a71c:	bne	1a7a0 <__mempcpy_chk@plt+0x91c0>
   1a720:	ldr	r3, [r1, #40]	; 0x28
   1a724:	ldr	ip, [r1, #48]	; 0x30
   1a728:	add	r3, r3, #1
   1a72c:	cmp	r3, ip
   1a730:	bge	1a790 <__mempcpy_chk@plt+0x91b0>
   1a734:	ldr	r1, [r1, #4]
   1a738:	ldrb	r1, [r1, r3]
   1a73c:	cmp	r1, #61	; 0x3d
   1a740:	strb	r1, [r0]
   1a744:	beq	1a7b0 <__mempcpy_chk@plt+0x91d0>
   1a748:	cmp	r1, #58	; 0x3a
   1a74c:	beq	1a7b8 <__mempcpy_chk@plt+0x91d8>
   1a750:	cmp	r1, #46	; 0x2e
   1a754:	bne	1a798 <__mempcpy_chk@plt+0x91b8>
   1a758:	mov	r1, #26
   1a75c:	b	1a7c4 <__mempcpy_chk@plt+0x91e4>
   1a760:	cmp	lr, #93	; 0x5d
   1a764:	beq	1a780 <__mempcpy_chk@plt+0x91a0>
   1a768:	cmp	lr, #94	; 0x5e
   1a76c:	bne	1a7a0 <__mempcpy_chk@plt+0x91c0>
   1a770:	mov	r1, #25
   1a774:	b	1a784 <__mempcpy_chk@plt+0x91a4>
   1a778:	mov	r1, #22
   1a77c:	b	1a784 <__mempcpy_chk@plt+0x91a4>
   1a780:	mov	r1, #21
   1a784:	strb	r1, [r0, #4]
   1a788:	mov	r1, #1
   1a78c:	b	1a7a8 <__mempcpy_chk@plt+0x91c8>
   1a790:	mov	r1, #0
   1a794:	strb	r1, [r0]
   1a798:	mov	r1, #91	; 0x5b
   1a79c:	strb	r1, [r0]
   1a7a0:	mov	r1, #1
   1a7a4:	strb	r1, [r0, #4]
   1a7a8:	mov	r0, r1
   1a7ac:	pop	{fp, pc}
   1a7b0:	mov	r1, #28
   1a7b4:	b	1a7c4 <__mempcpy_chk@plt+0x91e4>
   1a7b8:	tst	r2, #4
   1a7bc:	beq	1a798 <__mempcpy_chk@plt+0x91b8>
   1a7c0:	mov	r1, #30
   1a7c4:	strb	r1, [r0, #4]
   1a7c8:	mov	r1, #2
   1a7cc:	b	1a7a8 <__mempcpy_chk@plt+0x91c8>
   1a7d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a7d4:	add	fp, sp, #24
   1a7d8:	sub	sp, sp, #8
   1a7dc:	mov	r5, r2
   1a7e0:	ldr	r2, [r1, #80]	; 0x50
   1a7e4:	mov	r9, r0
   1a7e8:	ldr	r0, [r1, #40]	; 0x28
   1a7ec:	cmp	r2, #1
   1a7f0:	beq	1a864 <__mempcpy_chk@plt+0x9284>
   1a7f4:	ldr	r2, [r1, #28]
   1a7f8:	add	r6, r0, #1
   1a7fc:	cmp	r6, r2
   1a800:	bge	1a864 <__mempcpy_chk@plt+0x9284>
   1a804:	ldr	lr, [r1, #8]
   1a808:	sub	r4, r0, r2
   1a80c:	sub	ip, r2, r0
   1a810:	mvn	r2, #0
   1a814:	add	r6, lr, r0, lsl #2
   1a818:	ldr	r7, [r6, -r2, lsl #2]
   1a81c:	cmn	r7, #1
   1a820:	bne	1a834 <__mempcpy_chk@plt+0x9254>
   1a824:	sub	r2, r2, #1
   1a828:	cmp	r4, r2
   1a82c:	bne	1a818 <__mempcpy_chk@plt+0x9238>
   1a830:	b	1a840 <__mempcpy_chk@plt+0x9260>
   1a834:	rsb	ip, r2, #0
   1a838:	cmp	ip, #2
   1a83c:	bcc	1a864 <__mempcpy_chk@plt+0x9284>
   1a840:	mov	r2, #1
   1a844:	str	r2, [r9]
   1a848:	ldr	r0, [lr, r0, lsl #2]
   1a84c:	str	r0, [r9, #4]
   1a850:	ldr	r0, [r1, #40]	; 0x28
   1a854:	add	r0, r0, ip
   1a858:	str	r0, [r1, #40]	; 0x28
   1a85c:	mov	r0, #0
   1a860:	b	1aa8c <__mempcpy_chk@plt+0x94ac>
   1a864:	add	r2, r0, r3
   1a868:	str	r2, [r1, #40]	; 0x28
   1a86c:	ldrb	r6, [r5, #4]
   1a870:	sub	r0, r6, #22
   1a874:	cmp	r0, #8
   1a878:	bhi	1aa7c <__mempcpy_chk@plt+0x949c>
   1a87c:	add	r3, pc, #0
   1a880:	ldr	pc, [r3, r0, lsl #2]
   1a884:	andeq	sl, r1, r4, asr sl
   1a888:	andeq	sl, r1, ip, ror sl
   1a88c:	andeq	sl, r1, ip, ror sl
   1a890:	andeq	sl, r1, ip, ror sl
   1a894:	andeq	sl, r1, r8, lsr #17
   1a898:	andeq	sl, r1, ip, ror sl
   1a89c:	andeq	sl, r1, r8, lsr #17
   1a8a0:	andeq	sl, r1, ip, ror sl
   1a8a4:	andeq	sl, r1, r8, lsr #17
   1a8a8:	ldr	r3, [r1, #56]	; 0x38
   1a8ac:	mov	r0, #7
   1a8b0:	cmp	r3, r2
   1a8b4:	ble	1aa8c <__mempcpy_chk@plt+0x94ac>
   1a8b8:	ldrb	r3, [r5]
   1a8bc:	mov	r2, #0
   1a8c0:	uxtb	r7, r6
   1a8c4:	cmp	r7, #30
   1a8c8:	bne	1a8d8 <__mempcpy_chk@plt+0x92f8>
   1a8cc:	ldrb	r7, [r1, #75]	; 0x4b
   1a8d0:	cmp	r7, #0
   1a8d4:	bne	1a930 <__mempcpy_chk@plt+0x9350>
   1a8d8:	ldr	r4, [r1, #40]	; 0x28
   1a8dc:	ldr	r7, [r1, #4]
   1a8e0:	add	r6, r4, #1
   1a8e4:	str	r6, [r1, #40]	; 0x28
   1a8e8:	ldrb	r4, [r7, r4]
   1a8ec:	ldr	r7, [r1, #56]	; 0x38
   1a8f0:	cmp	r7, r6
   1a8f4:	ble	1aa8c <__mempcpy_chk@plt+0x94ac>
   1a8f8:	uxtb	r7, r4
   1a8fc:	cmp	r7, r3
   1a900:	bne	1a914 <__mempcpy_chk@plt+0x9334>
   1a904:	ldr	r7, [r1, #4]
   1a908:	ldrb	r7, [r7, r6]
   1a90c:	cmp	r7, #93	; 0x5d
   1a910:	beq	1aa08 <__mempcpy_chk@plt+0x9428>
   1a914:	ldr	r7, [r9, #4]
   1a918:	strb	r4, [r7, r2]
   1a91c:	add	r2, r2, #1
   1a920:	cmp	r2, #32
   1a924:	beq	1aa8c <__mempcpy_chk@plt+0x94ac>
   1a928:	ldrb	r6, [r5, #4]
   1a92c:	b	1a8c0 <__mempcpy_chk@plt+0x92e0>
   1a930:	ldrb	r7, [r1, #76]	; 0x4c
   1a934:	cmp	r7, #0
   1a938:	beq	1a9d4 <__mempcpy_chk@plt+0x93f4>
   1a93c:	ldr	lr, [r1, #28]
   1a940:	ldr	ip, [r1, #40]	; 0x28
   1a944:	cmp	lr, ip
   1a948:	beq	1a95c <__mempcpy_chk@plt+0x937c>
   1a94c:	ldr	r4, [r1, #8]
   1a950:	ldr	r4, [r4, ip, lsl #2]
   1a954:	cmn	r4, #1
   1a958:	beq	1a9f4 <__mempcpy_chk@plt+0x9414>
   1a95c:	ldr	r6, [r1, #12]
   1a960:	ldr	r7, [r1, #24]
   1a964:	ldr	r4, [r1]
   1a968:	ldr	r6, [r6, ip, lsl #2]
   1a96c:	add	r6, r7, r6
   1a970:	add	r4, r4, r6
   1a974:	ldrsb	r4, [r4]
   1a978:	cmn	r4, #1
   1a97c:	ble	1a9f4 <__mempcpy_chk@plt+0x9414>
   1a980:	ldr	r7, [r1, #80]	; 0x50
   1a984:	mov	r6, #1
   1a988:	cmp	r7, #1
   1a98c:	beq	1a9c8 <__mempcpy_chk@plt+0x93e8>
   1a990:	add	r7, ip, #1
   1a994:	cmp	r7, lr
   1a998:	bge	1a9c8 <__mempcpy_chk@plt+0x93e8>
   1a99c:	ldr	r6, [r1, #8]
   1a9a0:	sub	lr, lr, ip
   1a9a4:	add	r8, r6, ip, lsl #2
   1a9a8:	mov	r6, #1
   1a9ac:	ldr	r7, [r8, r6, lsl #2]
   1a9b0:	cmn	r7, #1
   1a9b4:	bne	1a9c8 <__mempcpy_chk@plt+0x93e8>
   1a9b8:	add	r6, r6, #1
   1a9bc:	cmp	lr, r6
   1a9c0:	bne	1a9ac <__mempcpy_chk@plt+0x93cc>
   1a9c4:	mov	r6, lr
   1a9c8:	add	r6, r6, ip
   1a9cc:	str	r6, [r1, #40]	; 0x28
   1a9d0:	b	1a8ec <__mempcpy_chk@plt+0x930c>
   1a9d4:	ldr	r7, [r1, #40]	; 0x28
   1a9d8:	ldr	r4, [r1, #24]
   1a9dc:	ldr	ip, [r1]
   1a9e0:	add	r6, r7, #1
   1a9e4:	add	r7, r7, r4
   1a9e8:	str	r6, [r1, #40]	; 0x28
   1a9ec:	ldrb	r4, [ip, r7]
   1a9f0:	b	1a8ec <__mempcpy_chk@plt+0x930c>
   1a9f4:	add	r6, ip, #1
   1a9f8:	str	r6, [r1, #40]	; 0x28
   1a9fc:	ldr	r7, [r1, #4]
   1aa00:	ldrb	r4, [r7, ip]
   1aa04:	b	1a8ec <__mempcpy_chk@plt+0x930c>
   1aa08:	add	r0, r6, #1
   1aa0c:	str	r0, [r1, #40]	; 0x28
   1aa10:	mov	r0, #0
   1aa14:	ldr	r1, [r9, #4]
   1aa18:	strb	r0, [r1, r2]
   1aa1c:	ldrb	r1, [r5, #4]
   1aa20:	cmp	r1, #30
   1aa24:	beq	1aa40 <__mempcpy_chk@plt+0x9460>
   1aa28:	cmp	r1, #28
   1aa2c:	beq	1aa48 <__mempcpy_chk@plt+0x9468>
   1aa30:	cmp	r1, #26
   1aa34:	moveq	r1, #3
   1aa38:	streq	r1, [r9]
   1aa3c:	b	1aa8c <__mempcpy_chk@plt+0x94ac>
   1aa40:	mov	r1, #4
   1aa44:	b	1aa4c <__mempcpy_chk@plt+0x946c>
   1aa48:	mov	r1, #2
   1aa4c:	str	r1, [r9]
   1aa50:	b	1aa8c <__mempcpy_chk@plt+0x94ac>
   1aa54:	ldr	r0, [fp, #12]
   1aa58:	cmp	r0, #0
   1aa5c:	bne	1aa7c <__mempcpy_chk@plt+0x949c>
   1aa60:	ldr	r2, [fp, #8]
   1aa64:	mov	r0, sp
   1aa68:	bl	1a668 <__mempcpy_chk@plt+0x9088>
   1aa6c:	ldrb	r1, [sp, #4]
   1aa70:	mov	r0, #11
   1aa74:	cmp	r1, #21
   1aa78:	bne	1aa8c <__mempcpy_chk@plt+0x94ac>
   1aa7c:	mov	r0, #0
   1aa80:	str	r0, [r9]
   1aa84:	ldrb	r1, [r5]
   1aa88:	strb	r1, [r9, #4]
   1aa8c:	sub	sp, fp, #24
   1aa90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1aa94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1aa98:	add	fp, sp, #24
   1aa9c:	mov	r8, r0
   1aaa0:	ldrb	r0, [fp, #14]
   1aaa4:	ldr	r6, [fp, #8]
   1aaa8:	mov	r5, r3
   1aaac:	mov	r7, r2
   1aab0:	mov	r4, r1
   1aab4:	tst	r0, #64	; 0x40
   1aab8:	beq	1aaf4 <__mempcpy_chk@plt+0x9514>
   1aabc:	movw	r1, #11466	; 0x2cca
   1aac0:	mov	r0, r6
   1aac4:	movt	r1, #2
   1aac8:	bl	112ec <strcmp@plt>
   1aacc:	cmp	r0, #0
   1aad0:	beq	1aaec <__mempcpy_chk@plt+0x950c>
   1aad4:	movw	r1, #11472	; 0x2cd0
   1aad8:	mov	r0, r6
   1aadc:	movt	r1, #2
   1aae0:	bl	112ec <strcmp@plt>
   1aae4:	cmp	r0, #0
   1aae8:	bne	1aaf4 <__mempcpy_chk@plt+0x9514>
   1aaec:	movw	r6, #11478	; 0x2cd6
   1aaf0:	movt	r6, #2
   1aaf4:	ldr	r0, [r5]
   1aaf8:	ldr	r1, [r7, #36]	; 0x24
   1aafc:	cmp	r0, r1
   1ab00:	beq	1aff4 <__mempcpy_chk@plt+0x9a14>
   1ab04:	mov	r0, r6
   1ab08:	bl	112bc <wctype@plt>
   1ab0c:	ldr	r2, [r7, #36]	; 0x24
   1ab10:	ldr	r1, [r7, #12]
   1ab14:	add	r3, r2, #1
   1ab18:	str	r3, [r7, #36]	; 0x24
   1ab1c:	str	r0, [r1, r2, lsl #2]
   1ab20:	movw	r1, #11454	; 0x2cbe
   1ab24:	mov	r0, r6
   1ab28:	movt	r1, #2
   1ab2c:	bl	112ec <strcmp@plt>
   1ab30:	cmp	r0, #0
   1ab34:	beq	1ac98 <__mempcpy_chk@plt+0x96b8>
   1ab38:	movw	r1, #11484	; 0x2cdc
   1ab3c:	mov	r0, r6
   1ab40:	movt	r1, #2
   1ab44:	bl	112ec <strcmp@plt>
   1ab48:	cmp	r0, #0
   1ab4c:	beq	1ace4 <__mempcpy_chk@plt+0x9704>
   1ab50:	movw	r1, #11472	; 0x2cd0
   1ab54:	mov	r0, r6
   1ab58:	movt	r1, #2
   1ab5c:	bl	112ec <strcmp@plt>
   1ab60:	cmp	r0, #0
   1ab64:	beq	1ad30 <__mempcpy_chk@plt+0x9750>
   1ab68:	movw	r1, #11460	; 0x2cc4
   1ab6c:	mov	r0, r6
   1ab70:	movt	r1, #2
   1ab74:	bl	112ec <strcmp@plt>
   1ab78:	cmp	r0, #0
   1ab7c:	beq	1ad7c <__mempcpy_chk@plt+0x979c>
   1ab80:	movw	r1, #11478	; 0x2cd6
   1ab84:	mov	r0, r6
   1ab88:	movt	r1, #2
   1ab8c:	bl	112ec <strcmp@plt>
   1ab90:	cmp	r0, #0
   1ab94:	beq	1adc8 <__mempcpy_chk@plt+0x97e8>
   1ab98:	movw	r1, #11515	; 0x2cfb
   1ab9c:	mov	r0, r6
   1aba0:	movt	r1, #2
   1aba4:	bl	112ec <strcmp@plt>
   1aba8:	cmp	r0, #0
   1abac:	beq	1ae14 <__mempcpy_chk@plt+0x9834>
   1abb0:	movw	r1, #11490	; 0x2ce2
   1abb4:	mov	r0, r6
   1abb8:	movt	r1, #2
   1abbc:	bl	112ec <strcmp@plt>
   1abc0:	cmp	r0, #0
   1abc4:	beq	1ae64 <__mempcpy_chk@plt+0x9884>
   1abc8:	movw	r1, #11466	; 0x2cca
   1abcc:	mov	r0, r6
   1abd0:	movt	r1, #2
   1abd4:	bl	112ec <strcmp@plt>
   1abd8:	cmp	r0, #0
   1abdc:	beq	1aeb4 <__mempcpy_chk@plt+0x98d4>
   1abe0:	movw	r1, #11496	; 0x2ce8
   1abe4:	mov	r0, r6
   1abe8:	movt	r1, #2
   1abec:	bl	112ec <strcmp@plt>
   1abf0:	cmp	r0, #0
   1abf4:	beq	1af04 <__mempcpy_chk@plt+0x9924>
   1abf8:	movw	r1, #11502	; 0x2cee
   1abfc:	mov	r0, r6
   1ac00:	movt	r1, #2
   1ac04:	bl	112ec <strcmp@plt>
   1ac08:	cmp	r0, #0
   1ac0c:	beq	1af54 <__mempcpy_chk@plt+0x9974>
   1ac10:	movw	r1, #11508	; 0x2cf4
   1ac14:	mov	r0, r6
   1ac18:	movt	r1, #2
   1ac1c:	bl	112ec <strcmp@plt>
   1ac20:	cmp	r0, #0
   1ac24:	beq	1afa4 <__mempcpy_chk@plt+0x99c4>
   1ac28:	movw	r1, #11514	; 0x2cfa
   1ac2c:	mov	r0, r6
   1ac30:	movt	r1, #2
   1ac34:	bl	112ec <strcmp@plt>
   1ac38:	mov	r1, r0
   1ac3c:	mov	r0, #4
   1ac40:	cmp	r1, #0
   1ac44:	bne	1aff0 <__mempcpy_chk@plt+0x9a10>
   1ac48:	bl	1149c <__ctype_b_loc@plt>
   1ac4c:	ldr	r1, [r0]
   1ac50:	mov	r2, #0
   1ac54:	mov	r3, #1
   1ac58:	cmp	r8, #0
   1ac5c:	bne	1b258 <__mempcpy_chk@plt+0x9c78>
   1ac60:	ldrb	r0, [r1, #1]
   1ac64:	tst	r0, #16
   1ac68:	beq	1ac80 <__mempcpy_chk@plt+0x96a0>
   1ac6c:	ubfx	r0, r2, #5, #3
   1ac70:	and	r6, r2, #31
   1ac74:	ldr	r7, [r4, r0, lsl #2]
   1ac78:	orr	r7, r7, r3, lsl r6
   1ac7c:	str	r7, [r4, r0, lsl #2]
   1ac80:	add	r2, r2, #1
   1ac84:	add	r1, r1, #2
   1ac88:	mov	r0, #0
   1ac8c:	cmp	r2, #256	; 0x100
   1ac90:	bne	1ac60 <__mempcpy_chk@plt+0x9680>
   1ac94:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1ac98:	bl	1149c <__ctype_b_loc@plt>
   1ac9c:	ldr	r1, [r0]
   1aca0:	cmp	r8, #0
   1aca4:	bne	1b094 <__mempcpy_chk@plt+0x9ab4>
   1aca8:	mov	r0, #0
   1acac:	mov	r2, #1
   1acb0:	ldrb	r3, [r1]
   1acb4:	tst	r3, #8
   1acb8:	beq	1acd0 <__mempcpy_chk@plt+0x96f0>
   1acbc:	ubfx	r3, r0, #5, #3
   1acc0:	and	r6, r0, #31
   1acc4:	ldr	r7, [r4, r3, lsl #2]
   1acc8:	orr	r7, r7, r2, lsl r6
   1accc:	str	r7, [r4, r3, lsl #2]
   1acd0:	add	r0, r0, #1
   1acd4:	add	r1, r1, #2
   1acd8:	cmp	r0, #256	; 0x100
   1acdc:	bne	1acb0 <__mempcpy_chk@plt+0x96d0>
   1ace0:	b	1ae5c <__mempcpy_chk@plt+0x987c>
   1ace4:	bl	1149c <__ctype_b_loc@plt>
   1ace8:	ldr	r1, [r0]
   1acec:	cmp	r8, #0
   1acf0:	bne	1b114 <__mempcpy_chk@plt+0x9b34>
   1acf4:	mov	r0, #0
   1acf8:	mov	r2, #1
   1acfc:	ldrb	r3, [r1]
   1ad00:	tst	r3, #2
   1ad04:	beq	1ad1c <__mempcpy_chk@plt+0x973c>
   1ad08:	ubfx	r3, r0, #5, #3
   1ad0c:	and	r6, r0, #31
   1ad10:	ldr	r7, [r4, r3, lsl #2]
   1ad14:	orr	r7, r7, r2, lsl r6
   1ad18:	str	r7, [r4, r3, lsl #2]
   1ad1c:	add	r0, r0, #1
   1ad20:	add	r1, r1, #2
   1ad24:	cmp	r0, #256	; 0x100
   1ad28:	bne	1acfc <__mempcpy_chk@plt+0x971c>
   1ad2c:	b	1ae5c <__mempcpy_chk@plt+0x987c>
   1ad30:	bl	1149c <__ctype_b_loc@plt>
   1ad34:	ldr	r1, [r0]
   1ad38:	cmp	r8, #0
   1ad3c:	bne	1b194 <__mempcpy_chk@plt+0x9bb4>
   1ad40:	mov	r0, #0
   1ad44:	mov	r2, #1
   1ad48:	ldrb	r3, [r1, #1]
   1ad4c:	tst	r3, #2
   1ad50:	beq	1ad68 <__mempcpy_chk@plt+0x9788>
   1ad54:	ubfx	r3, r0, #5, #3
   1ad58:	and	r6, r0, #31
   1ad5c:	ldr	r7, [r4, r3, lsl #2]
   1ad60:	orr	r7, r7, r2, lsl r6
   1ad64:	str	r7, [r4, r3, lsl #2]
   1ad68:	add	r0, r0, #1
   1ad6c:	add	r1, r1, #2
   1ad70:	cmp	r0, #256	; 0x100
   1ad74:	bne	1ad48 <__mempcpy_chk@plt+0x9768>
   1ad78:	b	1ae5c <__mempcpy_chk@plt+0x987c>
   1ad7c:	bl	1149c <__ctype_b_loc@plt>
   1ad80:	ldr	r1, [r0]
   1ad84:	cmp	r8, #0
   1ad88:	bne	1b214 <__mempcpy_chk@plt+0x9c34>
   1ad8c:	mov	r0, #0
   1ad90:	mov	r2, #1
   1ad94:	ldrb	r3, [r1, #1]
   1ad98:	tst	r3, #32
   1ad9c:	beq	1adb4 <__mempcpy_chk@plt+0x97d4>
   1ada0:	ubfx	r3, r0, #5, #3
   1ada4:	and	r6, r0, #31
   1ada8:	ldr	r7, [r4, r3, lsl #2]
   1adac:	orr	r7, r7, r2, lsl r6
   1adb0:	str	r7, [r4, r3, lsl #2]
   1adb4:	add	r0, r0, #1
   1adb8:	add	r1, r1, #2
   1adbc:	cmp	r0, #256	; 0x100
   1adc0:	bne	1ad94 <__mempcpy_chk@plt+0x97b4>
   1adc4:	b	1ae5c <__mempcpy_chk@plt+0x987c>
   1adc8:	bl	1149c <__ctype_b_loc@plt>
   1adcc:	ldr	r1, [r0]
   1add0:	cmp	r8, #0
   1add4:	bne	1b294 <__mempcpy_chk@plt+0x9cb4>
   1add8:	mov	r0, #0
   1addc:	mov	r2, #1
   1ade0:	ldrb	r3, [r1, #1]
   1ade4:	tst	r3, #4
   1ade8:	beq	1ae00 <__mempcpy_chk@plt+0x9820>
   1adec:	ubfx	r3, r0, #5, #3
   1adf0:	and	r6, r0, #31
   1adf4:	ldr	r7, [r4, r3, lsl #2]
   1adf8:	orr	r7, r7, r2, lsl r6
   1adfc:	str	r7, [r4, r3, lsl #2]
   1ae00:	add	r0, r0, #1
   1ae04:	add	r1, r1, #2
   1ae08:	cmp	r0, #256	; 0x100
   1ae0c:	bne	1ade0 <__mempcpy_chk@plt+0x9800>
   1ae10:	b	1ae5c <__mempcpy_chk@plt+0x987c>
   1ae14:	bl	1149c <__ctype_b_loc@plt>
   1ae18:	ldr	r1, [r0]
   1ae1c:	cmp	r8, #0
   1ae20:	bne	1b2d8 <__mempcpy_chk@plt+0x9cf8>
   1ae24:	mov	r0, #0
   1ae28:	mov	r2, #1
   1ae2c:	ldrb	r3, [r1, #1]
   1ae30:	tst	r3, #8
   1ae34:	beq	1ae4c <__mempcpy_chk@plt+0x986c>
   1ae38:	ubfx	r3, r0, #5, #3
   1ae3c:	and	r6, r0, #31
   1ae40:	ldr	r7, [r4, r3, lsl #2]
   1ae44:	orr	r7, r7, r2, lsl r6
   1ae48:	str	r7, [r4, r3, lsl #2]
   1ae4c:	add	r0, r0, #1
   1ae50:	add	r1, r1, #2
   1ae54:	cmp	r0, #256	; 0x100
   1ae58:	bne	1ae2c <__mempcpy_chk@plt+0x984c>
   1ae5c:	mov	r0, #0
   1ae60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ae64:	bl	1149c <__ctype_b_loc@plt>
   1ae68:	ldr	r1, [r0]
   1ae6c:	mov	r2, #0
   1ae70:	mov	r3, #1
   1ae74:	cmp	r8, #0
   1ae78:	bne	1b01c <__mempcpy_chk@plt+0x9a3c>
   1ae7c:	ldrb	r0, [r1, #1]
   1ae80:	tst	r0, #64	; 0x40
   1ae84:	beq	1ae9c <__mempcpy_chk@plt+0x98bc>
   1ae88:	ubfx	r0, r2, #5, #3
   1ae8c:	and	r6, r2, #31
   1ae90:	ldr	r7, [r4, r0, lsl #2]
   1ae94:	orr	r7, r7, r3, lsl r6
   1ae98:	str	r7, [r4, r0, lsl #2]
   1ae9c:	add	r2, r2, #1
   1aea0:	add	r1, r1, #2
   1aea4:	mov	r0, #0
   1aea8:	cmp	r2, #256	; 0x100
   1aeac:	bne	1ae7c <__mempcpy_chk@plt+0x989c>
   1aeb0:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1aeb4:	bl	1149c <__ctype_b_loc@plt>
   1aeb8:	ldr	r1, [r0]
   1aebc:	mov	r2, #0
   1aec0:	mov	r3, #1
   1aec4:	cmp	r8, #0
   1aec8:	bne	1b058 <__mempcpy_chk@plt+0x9a78>
   1aecc:	ldrb	r0, [r1, #1]
   1aed0:	tst	r0, #1
   1aed4:	beq	1aeec <__mempcpy_chk@plt+0x990c>
   1aed8:	ubfx	r0, r2, #5, #3
   1aedc:	and	r6, r2, #31
   1aee0:	ldr	r7, [r4, r0, lsl #2]
   1aee4:	orr	r7, r7, r3, lsl r6
   1aee8:	str	r7, [r4, r0, lsl #2]
   1aeec:	add	r2, r2, #1
   1aef0:	add	r1, r1, #2
   1aef4:	mov	r0, #0
   1aef8:	cmp	r2, #256	; 0x100
   1aefc:	bne	1aecc <__mempcpy_chk@plt+0x98ec>
   1af00:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1af04:	bl	1149c <__ctype_b_loc@plt>
   1af08:	ldr	r1, [r0]
   1af0c:	mov	r2, #0
   1af10:	mov	r3, #1
   1af14:	cmp	r8, #0
   1af18:	bne	1b0d8 <__mempcpy_chk@plt+0x9af8>
   1af1c:	ldrb	r0, [r1]
   1af20:	tst	r0, #1
   1af24:	beq	1af3c <__mempcpy_chk@plt+0x995c>
   1af28:	ubfx	r0, r2, #5, #3
   1af2c:	and	r6, r2, #31
   1af30:	ldr	r7, [r4, r0, lsl #2]
   1af34:	orr	r7, r7, r3, lsl r6
   1af38:	str	r7, [r4, r0, lsl #2]
   1af3c:	add	r2, r2, #1
   1af40:	add	r1, r1, #2
   1af44:	mov	r0, #0
   1af48:	cmp	r2, #256	; 0x100
   1af4c:	bne	1af1c <__mempcpy_chk@plt+0x993c>
   1af50:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1af54:	bl	1149c <__ctype_b_loc@plt>
   1af58:	ldr	r1, [r0]
   1af5c:	mov	r2, #0
   1af60:	mov	r3, #1
   1af64:	cmp	r8, #0
   1af68:	bne	1b158 <__mempcpy_chk@plt+0x9b78>
   1af6c:	ldrsh	r0, [r1]
   1af70:	cmn	r0, #1
   1af74:	bgt	1af8c <__mempcpy_chk@plt+0x99ac>
   1af78:	ubfx	r0, r2, #5, #3
   1af7c:	and	r6, r2, #31
   1af80:	ldr	r7, [r4, r0, lsl #2]
   1af84:	orr	r7, r7, r3, lsl r6
   1af88:	str	r7, [r4, r0, lsl #2]
   1af8c:	add	r2, r2, #1
   1af90:	add	r1, r1, #2
   1af94:	mov	r0, #0
   1af98:	cmp	r2, #256	; 0x100
   1af9c:	bne	1af6c <__mempcpy_chk@plt+0x998c>
   1afa0:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1afa4:	bl	1149c <__ctype_b_loc@plt>
   1afa8:	ldr	r1, [r0]
   1afac:	mov	r2, #0
   1afb0:	mov	r3, #1
   1afb4:	cmp	r8, #0
   1afb8:	bne	1b1d8 <__mempcpy_chk@plt+0x9bf8>
   1afbc:	ldrb	r0, [r1]
   1afc0:	tst	r0, #4
   1afc4:	beq	1afdc <__mempcpy_chk@plt+0x99fc>
   1afc8:	ubfx	r0, r2, #5, #3
   1afcc:	and	r6, r2, #31
   1afd0:	ldr	r7, [r4, r0, lsl #2]
   1afd4:	orr	r7, r7, r3, lsl r6
   1afd8:	str	r7, [r4, r0, lsl #2]
   1afdc:	add	r2, r2, #1
   1afe0:	add	r1, r1, #2
   1afe4:	mov	r0, #0
   1afe8:	cmp	r2, #256	; 0x100
   1afec:	bne	1afbc <__mempcpy_chk@plt+0x99dc>
   1aff0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1aff4:	mov	r1, #1
   1aff8:	orr	r9, r1, r0, lsl #1
   1affc:	ldr	r0, [r7, #12]
   1b000:	lsl	r1, r9, #2
   1b004:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1b008:	cmp	r0, #0
   1b00c:	beq	1b31c <__mempcpy_chk@plt+0x9d3c>
   1b010:	str	r0, [r7, #12]
   1b014:	str	r9, [r5]
   1b018:	b	1ab04 <__mempcpy_chk@plt+0x9524>
   1b01c:	ldrb	r0, [r1, #1]
   1b020:	tst	r0, #64	; 0x40
   1b024:	beq	1b040 <__mempcpy_chk@plt+0x9a60>
   1b028:	ldrb	r0, [r8, r2]
   1b02c:	ubfx	r7, r0, #5, #3
   1b030:	and	r0, r0, #31
   1b034:	ldr	r6, [r4, r7, lsl #2]
   1b038:	orr	r0, r6, r3, lsl r0
   1b03c:	str	r0, [r4, r7, lsl #2]
   1b040:	add	r2, r2, #1
   1b044:	add	r1, r1, #2
   1b048:	mov	r0, #0
   1b04c:	cmp	r2, #256	; 0x100
   1b050:	bne	1b01c <__mempcpy_chk@plt+0x9a3c>
   1b054:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b058:	ldrb	r0, [r1, #1]
   1b05c:	tst	r0, #1
   1b060:	beq	1b07c <__mempcpy_chk@plt+0x9a9c>
   1b064:	ldrb	r0, [r8, r2]
   1b068:	ubfx	r7, r0, #5, #3
   1b06c:	and	r0, r0, #31
   1b070:	ldr	r6, [r4, r7, lsl #2]
   1b074:	orr	r0, r6, r3, lsl r0
   1b078:	str	r0, [r4, r7, lsl #2]
   1b07c:	add	r2, r2, #1
   1b080:	add	r1, r1, #2
   1b084:	mov	r0, #0
   1b088:	cmp	r2, #256	; 0x100
   1b08c:	bne	1b058 <__mempcpy_chk@plt+0x9a78>
   1b090:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b094:	mov	r2, #0
   1b098:	mov	r3, #1
   1b09c:	ldrb	r0, [r1]
   1b0a0:	tst	r0, #8
   1b0a4:	beq	1b0c0 <__mempcpy_chk@plt+0x9ae0>
   1b0a8:	ldrb	r0, [r8, r2]
   1b0ac:	ubfx	r7, r0, #5, #3
   1b0b0:	and	r0, r0, #31
   1b0b4:	ldr	r6, [r4, r7, lsl #2]
   1b0b8:	orr	r0, r6, r3, lsl r0
   1b0bc:	str	r0, [r4, r7, lsl #2]
   1b0c0:	add	r2, r2, #1
   1b0c4:	add	r1, r1, #2
   1b0c8:	mov	r0, #0
   1b0cc:	cmp	r2, #256	; 0x100
   1b0d0:	bne	1b09c <__mempcpy_chk@plt+0x9abc>
   1b0d4:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b0d8:	ldrb	r0, [r1]
   1b0dc:	tst	r0, #1
   1b0e0:	beq	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1b0e4:	ldrb	r0, [r8, r2]
   1b0e8:	ubfx	r7, r0, #5, #3
   1b0ec:	and	r0, r0, #31
   1b0f0:	ldr	r6, [r4, r7, lsl #2]
   1b0f4:	orr	r0, r6, r3, lsl r0
   1b0f8:	str	r0, [r4, r7, lsl #2]
   1b0fc:	add	r2, r2, #1
   1b100:	add	r1, r1, #2
   1b104:	mov	r0, #0
   1b108:	cmp	r2, #256	; 0x100
   1b10c:	bne	1b0d8 <__mempcpy_chk@plt+0x9af8>
   1b110:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b114:	mov	r2, #0
   1b118:	mov	r3, #1
   1b11c:	ldrb	r0, [r1]
   1b120:	tst	r0, #2
   1b124:	beq	1b140 <__mempcpy_chk@plt+0x9b60>
   1b128:	ldrb	r0, [r8, r2]
   1b12c:	ubfx	r7, r0, #5, #3
   1b130:	and	r0, r0, #31
   1b134:	ldr	r6, [r4, r7, lsl #2]
   1b138:	orr	r0, r6, r3, lsl r0
   1b13c:	str	r0, [r4, r7, lsl #2]
   1b140:	add	r2, r2, #1
   1b144:	add	r1, r1, #2
   1b148:	mov	r0, #0
   1b14c:	cmp	r2, #256	; 0x100
   1b150:	bne	1b11c <__mempcpy_chk@plt+0x9b3c>
   1b154:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b158:	ldrsh	r0, [r1]
   1b15c:	cmn	r0, #1
   1b160:	bgt	1b17c <__mempcpy_chk@plt+0x9b9c>
   1b164:	ldrb	r0, [r8, r2]
   1b168:	ubfx	r7, r0, #5, #3
   1b16c:	and	r0, r0, #31
   1b170:	ldr	r6, [r4, r7, lsl #2]
   1b174:	orr	r0, r6, r3, lsl r0
   1b178:	str	r0, [r4, r7, lsl #2]
   1b17c:	add	r2, r2, #1
   1b180:	add	r1, r1, #2
   1b184:	mov	r0, #0
   1b188:	cmp	r2, #256	; 0x100
   1b18c:	bne	1b158 <__mempcpy_chk@plt+0x9b78>
   1b190:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b194:	mov	r2, #0
   1b198:	mov	r3, #1
   1b19c:	ldrb	r0, [r1, #1]
   1b1a0:	tst	r0, #2
   1b1a4:	beq	1b1c0 <__mempcpy_chk@plt+0x9be0>
   1b1a8:	ldrb	r0, [r8, r2]
   1b1ac:	ubfx	r7, r0, #5, #3
   1b1b0:	and	r0, r0, #31
   1b1b4:	ldr	r6, [r4, r7, lsl #2]
   1b1b8:	orr	r0, r6, r3, lsl r0
   1b1bc:	str	r0, [r4, r7, lsl #2]
   1b1c0:	add	r2, r2, #1
   1b1c4:	add	r1, r1, #2
   1b1c8:	mov	r0, #0
   1b1cc:	cmp	r2, #256	; 0x100
   1b1d0:	bne	1b19c <__mempcpy_chk@plt+0x9bbc>
   1b1d4:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b1d8:	ldrb	r0, [r1]
   1b1dc:	tst	r0, #4
   1b1e0:	beq	1b1fc <__mempcpy_chk@plt+0x9c1c>
   1b1e4:	ldrb	r0, [r8, r2]
   1b1e8:	ubfx	r7, r0, #5, #3
   1b1ec:	and	r0, r0, #31
   1b1f0:	ldr	r6, [r4, r7, lsl #2]
   1b1f4:	orr	r0, r6, r3, lsl r0
   1b1f8:	str	r0, [r4, r7, lsl #2]
   1b1fc:	add	r2, r2, #1
   1b200:	add	r1, r1, #2
   1b204:	mov	r0, #0
   1b208:	cmp	r2, #256	; 0x100
   1b20c:	bne	1b1d8 <__mempcpy_chk@plt+0x9bf8>
   1b210:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b214:	mov	r2, #0
   1b218:	mov	r3, #1
   1b21c:	ldrb	r0, [r1, #1]
   1b220:	tst	r0, #32
   1b224:	beq	1b240 <__mempcpy_chk@plt+0x9c60>
   1b228:	ldrb	r0, [r8, r2]
   1b22c:	ubfx	r7, r0, #5, #3
   1b230:	and	r0, r0, #31
   1b234:	ldr	r6, [r4, r7, lsl #2]
   1b238:	orr	r0, r6, r3, lsl r0
   1b23c:	str	r0, [r4, r7, lsl #2]
   1b240:	add	r2, r2, #1
   1b244:	add	r1, r1, #2
   1b248:	mov	r0, #0
   1b24c:	cmp	r2, #256	; 0x100
   1b250:	bne	1b21c <__mempcpy_chk@plt+0x9c3c>
   1b254:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b258:	ldrb	r0, [r1, #1]
   1b25c:	tst	r0, #16
   1b260:	beq	1b27c <__mempcpy_chk@plt+0x9c9c>
   1b264:	ldrb	r0, [r8, r2]
   1b268:	ubfx	r7, r0, #5, #3
   1b26c:	and	r0, r0, #31
   1b270:	ldr	r6, [r4, r7, lsl #2]
   1b274:	orr	r0, r6, r3, lsl r0
   1b278:	str	r0, [r4, r7, lsl #2]
   1b27c:	add	r2, r2, #1
   1b280:	add	r1, r1, #2
   1b284:	mov	r0, #0
   1b288:	cmp	r2, #256	; 0x100
   1b28c:	bne	1b258 <__mempcpy_chk@plt+0x9c78>
   1b290:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b294:	mov	r2, #0
   1b298:	mov	r3, #1
   1b29c:	ldrb	r0, [r1, #1]
   1b2a0:	tst	r0, #4
   1b2a4:	beq	1b2c0 <__mempcpy_chk@plt+0x9ce0>
   1b2a8:	ldrb	r0, [r8, r2]
   1b2ac:	ubfx	r7, r0, #5, #3
   1b2b0:	and	r0, r0, #31
   1b2b4:	ldr	r6, [r4, r7, lsl #2]
   1b2b8:	orr	r0, r6, r3, lsl r0
   1b2bc:	str	r0, [r4, r7, lsl #2]
   1b2c0:	add	r2, r2, #1
   1b2c4:	add	r1, r1, #2
   1b2c8:	mov	r0, #0
   1b2cc:	cmp	r2, #256	; 0x100
   1b2d0:	bne	1b29c <__mempcpy_chk@plt+0x9cbc>
   1b2d4:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b2d8:	mov	r2, #0
   1b2dc:	mov	r3, #1
   1b2e0:	ldrb	r0, [r1, #1]
   1b2e4:	tst	r0, #8
   1b2e8:	beq	1b304 <__mempcpy_chk@plt+0x9d24>
   1b2ec:	ldrb	r0, [r8, r2]
   1b2f0:	ubfx	r7, r0, #5, #3
   1b2f4:	and	r0, r0, #31
   1b2f8:	ldr	r6, [r4, r7, lsl #2]
   1b2fc:	orr	r0, r6, r3, lsl r0
   1b300:	str	r0, [r4, r7, lsl #2]
   1b304:	add	r2, r2, #1
   1b308:	add	r1, r1, #2
   1b30c:	mov	r0, #0
   1b310:	cmp	r2, #256	; 0x100
   1b314:	bne	1b2e0 <__mempcpy_chk@plt+0x9d00>
   1b318:	b	1aff0 <__mempcpy_chk@plt+0x9a10>
   1b31c:	mov	r0, #12
   1b320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b324:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b328:	add	fp, sp, #24
   1b32c:	mov	r5, r1
   1b330:	mov	r4, r2
   1b334:	mov	r6, r0
   1b338:	mvn	r1, #0
   1b33c:	movw	r8, #32816	; 0x8030
   1b340:	mov	r7, r1
   1b344:	mov	r0, r5
   1b348:	mov	r1, r6
   1b34c:	mov	r2, r4
   1b350:	bl	18574 <__mempcpy_chk@plt+0x6f94>
   1b354:	ldr	r1, [r6, #40]	; 0x28
   1b358:	add	r0, r1, r0
   1b35c:	str	r0, [r6, #40]	; 0x28
   1b360:	ldrb	r2, [r5, #4]
   1b364:	cmp	r2, #24
   1b368:	beq	1b3c8 <__mempcpy_chk@plt+0x9de8>
   1b36c:	cmp	r2, #2
   1b370:	beq	1b3c4 <__mempcpy_chk@plt+0x9de4>
   1b374:	ldrb	r0, [r5]
   1b378:	cmp	r0, #44	; 0x2c
   1b37c:	beq	1b3c8 <__mempcpy_chk@plt+0x9de8>
   1b380:	mvn	r1, #1
   1b384:	cmp	r0, #48	; 0x30
   1b388:	bcc	1b340 <__mempcpy_chk@plt+0x9d60>
   1b38c:	cmp	r2, #1
   1b390:	bne	1b340 <__mempcpy_chk@plt+0x9d60>
   1b394:	cmn	r7, #2
   1b398:	beq	1b340 <__mempcpy_chk@plt+0x9d60>
   1b39c:	cmp	r0, #57	; 0x39
   1b3a0:	bhi	1b340 <__mempcpy_chk@plt+0x9d60>
   1b3a4:	cmn	r7, #1
   1b3a8:	beq	1b3bc <__mempcpy_chk@plt+0x9ddc>
   1b3ac:	add	r1, r7, r7, lsl #2
   1b3b0:	add	r0, r0, r1, lsl #1
   1b3b4:	cmp	r0, r8
   1b3b8:	movge	r0, r8
   1b3bc:	sub	r1, r0, #48	; 0x30
   1b3c0:	b	1b340 <__mempcpy_chk@plt+0x9d60>
   1b3c4:	mvn	r7, #1
   1b3c8:	mov	r0, r7
   1b3cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b3d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b3d4:	add	fp, sp, #24
   1b3d8:	sub	sp, sp, #8
   1b3dc:	mov	r3, r0
   1b3e0:	mov	r5, r0
   1b3e4:	mov	r8, r1
   1b3e8:	mov	r0, r1
   1b3ec:	mov	r1, #0
   1b3f0:	mov	r2, #0
   1b3f4:	mov	r7, #0
   1b3f8:	ldr	r4, [r3], #20
   1b3fc:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1b400:	cmp	r0, #0
   1b404:	str	r0, [sp, #4]
   1b408:	beq	1b4a4 <__mempcpy_chk@plt+0x9ec4>
   1b40c:	mov	r9, r0
   1b410:	add	r6, sp, #4
   1b414:	mov	r7, #0
   1b418:	str	r4, [r0]
   1b41c:	ldr	r0, [r6]
   1b420:	ldr	r1, [r0, #24]
   1b424:	orr	r1, r1, #262144	; 0x40000
   1b428:	str	r1, [r0, #24]
   1b42c:	ldr	r0, [r5, #4]
   1b430:	ldr	r4, [r6]
   1b434:	cmp	r0, #0
   1b438:	beq	1b448 <__mempcpy_chk@plt+0x9e68>
   1b43c:	add	r6, r4, #4
   1b440:	mov	r5, r0
   1b444:	b	1b47c <__mempcpy_chk@plt+0x9e9c>
   1b448:	mov	r1, #0
   1b44c:	mov	r0, r5
   1b450:	ldr	r5, [r5, #8]
   1b454:	cmp	r5, r1
   1b458:	cmpne	r5, #0
   1b45c:	bne	1b478 <__mempcpy_chk@plt+0x9e98>
   1b460:	ldr	r5, [r0]
   1b464:	ldr	r4, [r4]
   1b468:	mov	r1, r0
   1b46c:	cmp	r5, #0
   1b470:	bne	1b44c <__mempcpy_chk@plt+0x9e6c>
   1b474:	b	1b4a0 <__mempcpy_chk@plt+0x9ec0>
   1b478:	add	r6, r4, #8
   1b47c:	add	r3, r5, #20
   1b480:	mov	r0, r8
   1b484:	mov	r1, #0
   1b488:	mov	r2, #0
   1b48c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1b490:	cmp	r0, #0
   1b494:	str	r0, [r6]
   1b498:	bne	1b418 <__mempcpy_chk@plt+0x9e38>
   1b49c:	b	1b4a4 <__mempcpy_chk@plt+0x9ec4>
   1b4a0:	mov	r7, r9
   1b4a4:	mov	r0, r7
   1b4a8:	sub	sp, fp, #24
   1b4ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b4b0:	push	{r4, r5, r6, r7, fp, lr}
   1b4b4:	add	fp, sp, #16
   1b4b8:	mov	r6, r0
   1b4bc:	mov	r5, r1
   1b4c0:	mov	r0, r2
   1b4c4:	mov	r4, r2
   1b4c8:	mov	r1, r6
   1b4cc:	blx	r5
   1b4d0:	cmp	r0, #0
   1b4d4:	bne	1b528 <__mempcpy_chk@plt+0x9f48>
   1b4d8:	ldr	r7, [r6, #4]
   1b4dc:	cmp	r7, #0
   1b4e0:	bne	1b510 <__mempcpy_chk@plt+0x9f30>
   1b4e4:	mov	r1, #0
   1b4e8:	ldr	r7, [r6, #8]
   1b4ec:	mov	r0, r6
   1b4f0:	cmp	r7, r1
   1b4f4:	cmpne	r7, #0
   1b4f8:	bne	1b510 <__mempcpy_chk@plt+0x9f30>
   1b4fc:	ldr	r6, [r0]
   1b500:	mov	r1, r0
   1b504:	cmp	r6, #0
   1b508:	bne	1b4e8 <__mempcpy_chk@plt+0x9f08>
   1b50c:	b	1b52c <__mempcpy_chk@plt+0x9f4c>
   1b510:	mov	r0, r4
   1b514:	mov	r1, r7
   1b518:	blx	r5
   1b51c:	cmp	r0, #0
   1b520:	mov	r6, r7
   1b524:	beq	1b4d8 <__mempcpy_chk@plt+0x9ef8>
   1b528:	pop	{r4, r5, r6, r7, fp, pc}
   1b52c:	mov	r0, #0
   1b530:	pop	{r4, r5, r6, r7, fp, pc}
   1b534:	ldrb	r2, [r1, #24]
   1b538:	cmp	r2, #17
   1b53c:	beq	1b570 <__mempcpy_chk@plt+0x9f90>
   1b540:	cmp	r2, #4
   1b544:	bne	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b548:	ldr	r2, [r0, #132]	; 0x84
   1b54c:	cmp	r2, #0
   1b550:	beq	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b554:	ldr	r3, [r1, #20]
   1b558:	ldr	r2, [r2, r3, lsl #2]
   1b55c:	mov	r3, #1
   1b560:	str	r2, [r1, #20]
   1b564:	ldr	r1, [r0, #80]	; 0x50
   1b568:	orr	r1, r1, r3, lsl r2
   1b56c:	b	1b5c0 <__mempcpy_chk@plt+0x9fe0>
   1b570:	ldr	r2, [r1, #4]
   1b574:	cmp	r2, #0
   1b578:	beq	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b57c:	ldrb	r3, [r2, #24]
   1b580:	cmp	r3, #17
   1b584:	bne	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b588:	ldr	r3, [r2, #4]
   1b58c:	ldr	r2, [r2, #20]
   1b590:	cmp	r3, #0
   1b594:	str	r3, [r1, #4]
   1b598:	strne	r1, [r3]
   1b59c:	cmp	r2, #31
   1b5a0:	ldr	r1, [r1, #20]
   1b5a4:	ldr	r3, [r0, #132]	; 0x84
   1b5a8:	ldr	r1, [r3, r1, lsl #2]
   1b5ac:	str	r1, [r3, r2, lsl #2]
   1b5b0:	bgt	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b5b4:	ldr	r1, [r0, #80]	; 0x50
   1b5b8:	mov	r3, #1
   1b5bc:	bic	r1, r1, r3, lsl r2
   1b5c0:	str	r1, [r0, #80]	; 0x50
   1b5c4:	mov	r0, #0
   1b5c8:	bx	lr
   1b5cc:	push	{r4, r5, fp, lr}
   1b5d0:	add	fp, sp, #8
   1b5d4:	sub	sp, sp, #8
   1b5d8:	mov	r5, r0
   1b5dc:	mov	r0, #0
   1b5e0:	mov	r4, r1
   1b5e4:	str	r0, [sp, #4]
   1b5e8:	ldr	r2, [r1, #4]
   1b5ec:	cmp	r2, #0
   1b5f0:	beq	1b618 <__mempcpy_chk@plt+0xa038>
   1b5f4:	ldrb	r0, [r2, #24]
   1b5f8:	cmp	r0, #17
   1b5fc:	bne	1b618 <__mempcpy_chk@plt+0xa038>
   1b600:	add	r0, sp, #4
   1b604:	mov	r1, r5
   1b608:	bl	1b8d0 <__mempcpy_chk@plt+0xa2f0>
   1b60c:	cmp	r0, #0
   1b610:	str	r0, [r4, #4]
   1b614:	strne	r4, [r0]
   1b618:	ldr	r2, [r4, #8]
   1b61c:	cmp	r2, #0
   1b620:	beq	1b648 <__mempcpy_chk@plt+0xa068>
   1b624:	ldrb	r0, [r2, #24]
   1b628:	cmp	r0, #17
   1b62c:	bne	1b648 <__mempcpy_chk@plt+0xa068>
   1b630:	add	r0, sp, #4
   1b634:	mov	r1, r5
   1b638:	bl	1b8d0 <__mempcpy_chk@plt+0xa2f0>
   1b63c:	cmp	r0, #0
   1b640:	str	r0, [r4, #8]
   1b644:	strne	r4, [r0]
   1b648:	ldr	r0, [sp, #4]
   1b64c:	sub	sp, fp, #8
   1b650:	pop	{r4, r5, fp, pc}
   1b654:	push	{r4, r5, fp, lr}
   1b658:	add	fp, sp, #8
   1b65c:	ldr	r2, [r1, #24]
   1b660:	mov	r5, r0
   1b664:	mov	r4, r1
   1b668:	uxtb	r0, r2
   1b66c:	cmp	r0, #16
   1b670:	bne	1b690 <__mempcpy_chk@plt+0xa0b0>
   1b674:	ldr	r0, [r4, #4]
   1b678:	ldr	r1, [r0, #12]
   1b67c:	str	r1, [r4, #12]
   1b680:	ldr	r0, [r0, #28]
   1b684:	str	r0, [r4, #28]
   1b688:	mov	r0, #0
   1b68c:	pop	{r4, r5, fp, pc}
   1b690:	str	r4, [r4, #12]
   1b694:	mov	r0, r5
   1b698:	ldr	r1, [r4, #20]
   1b69c:	bl	1ba24 <__mempcpy_chk@plt+0xa444>
   1b6a0:	cmn	r0, #1
   1b6a4:	str	r0, [r4, #28]
   1b6a8:	beq	1b6dc <__mempcpy_chk@plt+0xa0fc>
   1b6ac:	ldrb	r2, [r4, #24]
   1b6b0:	mov	r1, r0
   1b6b4:	mov	r0, #0
   1b6b8:	cmp	r2, #12
   1b6bc:	popne	{r4, r5, fp, pc}
   1b6c0:	ldr	r2, [r5]
   1b6c4:	ldr	r3, [r4, #20]
   1b6c8:	add	r1, r2, r1, lsl #3
   1b6cc:	ldr	r2, [r1, #4]
   1b6d0:	bfi	r2, r3, #8, #10
   1b6d4:	str	r2, [r1, #4]
   1b6d8:	pop	{r4, r5, fp, pc}
   1b6dc:	mov	r0, #12
   1b6e0:	pop	{r4, r5, fp, pc}
   1b6e4:	ldrb	r0, [r1, #24]
   1b6e8:	cmp	r0, #16
   1b6ec:	beq	1b700 <__mempcpy_chk@plt+0xa120>
   1b6f0:	cmp	r0, #11
   1b6f4:	bne	1b718 <__mempcpy_chk@plt+0xa138>
   1b6f8:	ldr	r0, [r1, #4]
   1b6fc:	b	1b738 <__mempcpy_chk@plt+0xa158>
   1b700:	ldmib	r1, {r0, r2}
   1b704:	ldr	r3, [r2, #12]
   1b708:	str	r3, [r0, #16]
   1b70c:	ldr	r0, [r1, #16]
   1b710:	str	r0, [r2, #16]
   1b714:	b	1b73c <__mempcpy_chk@plt+0xa15c>
   1b718:	ldr	r0, [r1, #4]
   1b71c:	cmp	r0, #0
   1b720:	ldrne	r2, [r1, #16]
   1b724:	strne	r2, [r0, #16]
   1b728:	ldr	r0, [r1, #8]
   1b72c:	cmp	r0, #0
   1b730:	beq	1b73c <__mempcpy_chk@plt+0xa15c>
   1b734:	ldr	r1, [r1, #16]
   1b738:	str	r1, [r0, #16]
   1b73c:	mov	r0, #0
   1b740:	bx	lr
   1b744:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b748:	add	fp, sp, #24
   1b74c:	ldr	r3, [r1, #24]
   1b750:	mvn	r7, #1
   1b754:	ldr	r2, [r1, #28]
   1b758:	mov	r4, #0
   1b75c:	uxtab	r3, r7, r3
   1b760:	cmp	r3, #14
   1b764:	bhi	1b86c <__mempcpy_chk@plt+0xa28c>
   1b768:	add	r7, pc, #0
   1b76c:	ldr	pc, [r7, r3, lsl #2]
   1b770:			; <UNDEFINED> instruction: 0x0001b8b4
   1b774:	andeq	fp, r1, ip, ror #16
   1b778:	andeq	fp, r1, r0, lsl #17
   1b77c:	andeq	fp, r1, ip, ror #16
   1b780:	andeq	fp, r1, ip, ror #16
   1b784:	andeq	fp, r1, ip, ror #16
   1b788:	andeq	fp, r1, ip, lsr #15
   1b78c:	andeq	fp, r1, ip, lsr #15
   1b790:	andeq	fp, r1, r8, ror #15
   1b794:	andeq	fp, r1, r8, ror #15
   1b798:	andeq	fp, r1, ip, lsr #15
   1b79c:	andeq	fp, r1, ip, ror #16
   1b7a0:	andeq	fp, r1, ip, ror #16
   1b7a4:	andeq	fp, r1, ip, ror #16
   1b7a8:			; <UNDEFINED> instruction: 0x0001b8b4
   1b7ac:	ldr	r1, [r1, #16]
   1b7b0:	ldr	r5, [r1, #28]
   1b7b4:	ldr	r6, [r0, #20]
   1b7b8:	add	r0, r2, r2, lsl #1
   1b7bc:	mov	r1, #1
   1b7c0:	str	r1, [r6, r0, lsl #2]!
   1b7c4:	mov	r0, #4
   1b7c8:	mov	r7, r6
   1b7cc:	str	r1, [r7, #4]!
   1b7d0:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1b7d4:	cmp	r0, #0
   1b7d8:	str	r0, [r6, #8]
   1b7dc:	beq	1b8bc <__mempcpy_chk@plt+0xa2dc>
   1b7e0:	str	r5, [r0]
   1b7e4:	b	1b8b4 <__mempcpy_chk@plt+0xa2d4>
   1b7e8:	ldrb	r3, [r0, #88]	; 0x58
   1b7ec:	add	r6, r1, #16
   1b7f0:	add	r5, r2, r2, lsl #1
   1b7f4:	orr	r3, r3, #1
   1b7f8:	strb	r3, [r0, #88]	; 0x58
   1b7fc:	mov	r3, r6
   1b800:	ldr	r7, [r1, #4]
   1b804:	ldr	r1, [r1, #8]
   1b808:	cmp	r1, #0
   1b80c:	addne	r3, r1, #12
   1b810:	cmp	r7, #0
   1b814:	ldr	r1, [r3]
   1b818:	addne	r6, r7, #12
   1b81c:	ldr	r8, [r1, #28]
   1b820:	ldr	r1, [r6]
   1b824:	ldr	r6, [r0, #20]
   1b828:	mov	r0, #2
   1b82c:	ldr	r9, [r1, #28]
   1b830:	mov	r7, r6
   1b834:	str	r0, [r7, r5, lsl #2]!
   1b838:	mov	r0, #8
   1b83c:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1b840:	cmp	r0, #0
   1b844:	str	r0, [r7, #8]
   1b848:	beq	1b8c8 <__mempcpy_chk@plt+0xa2e8>
   1b84c:	add	r1, r6, r5, lsl #2
   1b850:	cmp	r9, r8
   1b854:	add	r1, r1, #4
   1b858:	bne	1b8a0 <__mempcpy_chk@plt+0xa2c0>
   1b85c:	mov	r2, #1
   1b860:	str	r2, [r1]
   1b864:	str	r9, [r0]
   1b868:	b	1b8b4 <__mempcpy_chk@plt+0xa2d4>
   1b86c:	ldr	r1, [r1, #16]
   1b870:	ldr	r0, [r0, #12]
   1b874:	ldr	r1, [r1, #28]
   1b878:	str	r1, [r0, r2, lsl #2]
   1b87c:	b	1b8b4 <__mempcpy_chk@plt+0xa2d4>
   1b880:	ldr	r7, [r1, #16]
   1b884:	ldr	r3, [r0, #12]
   1b888:	ldr	r5, [r7, #28]
   1b88c:	str	r5, [r3, r2, lsl #2]
   1b890:	ldrb	r1, [r1, #24]
   1b894:	cmp	r1, #4
   1b898:	beq	1b7b4 <__mempcpy_chk@plt+0xa1d4>
   1b89c:	b	1b8b4 <__mempcpy_chk@plt+0xa2d4>
   1b8a0:	mov	r2, #2
   1b8a4:	str	r2, [r1]
   1b8a8:	stmcs	r0, {r8, r9}
   1b8ac:	strcc	r9, [r0]
   1b8b0:	strcc	r8, [r0, #4]
   1b8b4:	mov	r0, r4
   1b8b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b8bc:	mov	r0, #0
   1b8c0:	str	r0, [r7]
   1b8c4:	str	r0, [r6]
   1b8c8:	mov	r4, #12
   1b8cc:	b	1b8b4 <__mempcpy_chk@plt+0xa2d4>
   1b8d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8d4:	add	fp, sp, #28
   1b8d8:	sub	sp, sp, #12
   1b8dc:	ldr	r5, [r2, #4]
   1b8e0:	ldr	sl, [r1]
   1b8e4:	mov	r9, r2
   1b8e8:	cmp	r5, #0
   1b8ec:	ldrbne	r1, [r1, #28]
   1b8f0:	andsne	r1, r1, #16
   1b8f4:	bne	1b9fc <__mempcpy_chk@plt+0xa41c>
   1b8f8:	str	r0, [sp]
   1b8fc:	mov	r0, #8
   1b900:	mov	r8, #0
   1b904:	add	r3, sp, #4
   1b908:	mov	r1, #0
   1b90c:	mov	r2, #0
   1b910:	str	r0, [sp, #8]
   1b914:	mov	r0, sl
   1b918:	str	r8, [sp, #4]
   1b91c:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1b920:	mov	r7, r0
   1b924:	mov	r0, #9
   1b928:	add	r3, sp, #4
   1b92c:	mov	r1, #0
   1b930:	mov	r2, #0
   1b934:	str	r0, [sp, #8]
   1b938:	mov	r0, sl
   1b93c:	str	r8, [sp, #4]
   1b940:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1b944:	mov	r4, r0
   1b948:	cmp	r5, #0
   1b94c:	mov	r6, r0
   1b950:	beq	1b978 <__mempcpy_chk@plt+0xa398>
   1b954:	mov	r0, #16
   1b958:	add	r3, sp, #4
   1b95c:	mov	r1, r5
   1b960:	mov	r2, r4
   1b964:	str	r0, [sp, #8]
   1b968:	mov	r0, sl
   1b96c:	str	r8, [sp, #4]
   1b970:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1b974:	mov	r6, r0
   1b978:	mov	r0, #16
   1b97c:	add	r3, sp, #4
   1b980:	mov	r1, r7
   1b984:	mov	r2, r6
   1b988:	str	r0, [sp, #8]
   1b98c:	mov	r0, sl
   1b990:	str	r8, [sp, #4]
   1b994:	bl	1a394 <__mempcpy_chk@plt+0x8db4>
   1b998:	cmp	r4, #0
   1b99c:	beq	1b9ac <__mempcpy_chk@plt+0xa3cc>
   1b9a0:	cmp	r7, #0
   1b9a4:	cmpne	r6, #0
   1b9a8:	bne	1b9c0 <__mempcpy_chk@plt+0xa3e0>
   1b9ac:	ldr	r1, [sp]
   1b9b0:	mov	r0, #12
   1b9b4:	mov	r5, #0
   1b9b8:	str	r0, [r1]
   1b9bc:	b	1ba18 <__mempcpy_chk@plt+0xa438>
   1b9c0:	mov	r5, r0
   1b9c4:	cmp	r0, #0
   1b9c8:	beq	1b9ac <__mempcpy_chk@plt+0xa3cc>
   1b9cc:	ldr	r0, [r9, #20]
   1b9d0:	str	r0, [r4, #20]
   1b9d4:	str	r0, [r7, #20]
   1b9d8:	ldr	r1, [r9, #24]
   1b9dc:	ldr	r0, [r4, #24]
   1b9e0:	lsr	r1, r1, #19
   1b9e4:	bfi	r0, r1, #19, #1
   1b9e8:	str	r0, [r4, #24]
   1b9ec:	ldr	r0, [r7, #24]
   1b9f0:	bfi	r0, r1, #19, #1
   1b9f4:	str	r0, [r7, #24]
   1b9f8:	b	1ba18 <__mempcpy_chk@plt+0xa438>
   1b9fc:	ldr	r3, [r9, #20]
   1ba00:	cmp	r3, #31
   1ba04:	bgt	1ba18 <__mempcpy_chk@plt+0xa438>
   1ba08:	ldr	r1, [sl, #80]	; 0x50
   1ba0c:	mov	r2, #1
   1ba10:	tst	r1, r2, lsl r3
   1ba14:	bne	1b8f8 <__mempcpy_chk@plt+0xa318>
   1ba18:	mov	r0, r5
   1ba1c:	sub	sp, fp, #28
   1ba20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba28:	add	fp, sp, #28
   1ba2c:	sub	sp, sp, #12
   1ba30:	mov	r4, r0
   1ba34:	ldr	r7, [r0, #4]
   1ba38:	ldr	r0, [r0, #8]
   1ba3c:	mov	r5, r2
   1ba40:	mov	r9, r1
   1ba44:	cmp	r0, r7
   1ba48:	bcs	1bb14 <__mempcpy_chk@plt+0xa534>
   1ba4c:	ldr	r1, [r4]
   1ba50:	str	r9, [r1, r0, lsl #3]!
   1ba54:	str	r5, [r1, #4]
   1ba58:	ldr	r0, [r4]
   1ba5c:	ldr	r1, [r4, #8]
   1ba60:	add	r0, r0, r1, lsl #3
   1ba64:	ldr	r1, [r0, #4]
   1ba68:	bfc	r1, #8, #10
   1ba6c:	str	r1, [r0, #4]
   1ba70:	uxtb	r1, r5
   1ba74:	cmp	r1, #5
   1ba78:	bne	1ba8c <__mempcpy_chk@plt+0xa4ac>
   1ba7c:	ldr	r2, [r4, #92]	; 0x5c
   1ba80:	mov	r0, #1048576	; 0x100000
   1ba84:	cmp	r2, #1
   1ba88:	bgt	1ba9c <__mempcpy_chk@plt+0xa4bc>
   1ba8c:	sub	r0, r1, #6
   1ba90:	clz	r0, r0
   1ba94:	lsr	r0, r0, #5
   1ba98:	lsl	r0, r0, #20
   1ba9c:	ldr	r1, [r4]
   1baa0:	ldr	r2, [r4, #8]
   1baa4:	add	r1, r1, r2, lsl #3
   1baa8:	ldr	r2, [r1, #4]
   1baac:	bic	r2, r2, #1048576	; 0x100000
   1bab0:	orr	r0, r2, r0
   1bab4:	mvn	r2, #0
   1bab8:	str	r0, [r1, #4]
   1babc:	ldr	r0, [r4, #8]
   1bac0:	ldr	r1, [r4, #12]
   1bac4:	str	r2, [r1, r0, lsl #2]
   1bac8:	mov	r2, #0
   1bacc:	ldr	r0, [r4, #8]
   1bad0:	ldr	r1, [r4, #20]
   1bad4:	add	r0, r0, r0, lsl #1
   1bad8:	str	r2, [r1, r0, lsl #2]!
   1badc:	str	r2, [r1, #4]
   1bae0:	str	r2, [r1, #8]
   1bae4:	ldr	r0, [r4, #8]
   1bae8:	ldr	r1, [r4, #24]
   1baec:	add	r0, r0, r0, lsl #1
   1baf0:	str	r2, [r1, r0, lsl #2]!
   1baf4:	str	r2, [r1, #4]
   1baf8:	str	r2, [r1, #8]
   1bafc:	ldr	r6, [r4, #8]
   1bb00:	add	r0, r6, #1
   1bb04:	str	r0, [r4, #8]
   1bb08:	mov	r0, r6
   1bb0c:	sub	sp, fp, #28
   1bb10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb14:	movw	r0, #21845	; 0x5555
   1bb18:	lsl	r1, r7, #1
   1bb1c:	mvn	r6, #0
   1bb20:	movt	r0, #5461	; 0x1555
   1bb24:	cmp	r1, r0
   1bb28:	bhi	1bb08 <__mempcpy_chk@plt+0xa528>
   1bb2c:	ldr	r0, [r4]
   1bb30:	str	r1, [sp, #8]
   1bb34:	lsl	r1, r7, #4
   1bb38:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1bb3c:	cmp	r0, #0
   1bb40:	beq	1bb08 <__mempcpy_chk@plt+0xa528>
   1bb44:	str	r0, [r4]
   1bb48:	lsl	r8, r7, #3
   1bb4c:	ldr	r0, [r4, #12]
   1bb50:	mov	r1, r8
   1bb54:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1bb58:	str	r0, [sp, #4]
   1bb5c:	ldr	r0, [r4, #16]
   1bb60:	mov	r1, r8
   1bb64:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1bb68:	mov	r2, r0
   1bb6c:	add	r1, r7, r7, lsl #1
   1bb70:	ldr	r0, [r4, #20]
   1bb74:	mov	r7, r2
   1bb78:	lsl	r8, r1, #3
   1bb7c:	mov	r1, r8
   1bb80:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1bb84:	mov	sl, r0
   1bb88:	ldr	r0, [r4, #24]
   1bb8c:	mov	r1, r8
   1bb90:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1bb94:	mov	r8, r0
   1bb98:	ldr	r0, [sp, #4]
   1bb9c:	cmp	r0, #0
   1bba0:	beq	1bbb0 <__mempcpy_chk@plt+0xa5d0>
   1bba4:	cmp	r7, #0
   1bba8:	cmpne	sl, #0
   1bbac:	bne	1bbd0 <__mempcpy_chk@plt+0xa5f0>
   1bbb0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1bbb4:	mov	r0, r7
   1bbb8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1bbbc:	mov	r0, sl
   1bbc0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1bbc4:	mov	r0, r8
   1bbc8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1bbcc:	b	1bb08 <__mempcpy_chk@plt+0xa528>
   1bbd0:	cmp	r8, #0
   1bbd4:	beq	1bbb0 <__mempcpy_chk@plt+0xa5d0>
   1bbd8:	add	r1, r4, #12
   1bbdc:	stm	r1, {r0, r7, sl}
   1bbe0:	str	r8, [r4, #24]
   1bbe4:	ldr	r0, [sp, #8]
   1bbe8:	str	r0, [r4, #4]
   1bbec:	ldr	r0, [r4, #8]
   1bbf0:	b	1ba4c <__mempcpy_chk@plt+0xa46c>
   1bbf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bbf8:	add	fp, sp, #28
   1bbfc:	sub	sp, sp, #44	; 0x2c
   1bc00:	mov	r8, r0
   1bc04:	ldr	r0, [r1, #20]
   1bc08:	add	r4, r2, r2, lsl #1
   1bc0c:	mov	r5, r1
   1bc10:	mov	r1, #0
   1bc14:	mov	r9, r3
   1bc18:	mov	r6, r2
   1bc1c:	add	r0, r0, r4, lsl #2
   1bc20:	ldr	r0, [r0, #4]
   1bc24:	str	r1, [sp, #36]	; 0x24
   1bc28:	add	r0, r0, #1
   1bc2c:	str	r0, [sp, #32]
   1bc30:	lsl	r0, r0, #2
   1bc34:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1bc38:	cmp	r0, #0
   1bc3c:	str	r0, [sp, #40]	; 0x28
   1bc40:	beq	1be08 <__mempcpy_chk@plt+0xa828>
   1bc44:	mov	r1, #1
   1bc48:	str	r6, [r0]
   1bc4c:	str	r1, [sp, #36]	; 0x24
   1bc50:	mvn	r1, #0
   1bc54:	ldr	r0, [r5, #24]
   1bc58:	add	r0, r0, r4, lsl #2
   1bc5c:	str	r1, [r0, #4]
   1bc60:	ldr	r2, [r5]
   1bc64:	add	r0, r2, r6, lsl #3
   1bc68:	ldr	r0, [r0, #4]
   1bc6c:	ubfx	r1, r0, #8, #10
   1bc70:	cmp	r1, #0
   1bc74:	beq	1bcd0 <__mempcpy_chk@plt+0xa6f0>
   1bc78:	ldr	r3, [r5, #20]
   1bc7c:	add	r3, r3, r4, lsl #2
   1bc80:	ldr	r7, [r3, #4]
   1bc84:	cmp	r7, #0
   1bc88:	beq	1bcd0 <__mempcpy_chk@plt+0xa6f0>
   1bc8c:	ldr	r3, [r3, #8]
   1bc90:	ldr	r3, [r3]
   1bc94:	add	r2, r2, r3, lsl #3
   1bc98:	ldrb	r2, [r2, #6]
   1bc9c:	tst	r2, #4
   1bca0:	bne	1bcd0 <__mempcpy_chk@plt+0xa6f0>
   1bca4:	str	r1, [sp]
   1bca8:	mov	r0, r5
   1bcac:	mov	r1, r6
   1bcb0:	mov	r2, r6
   1bcb4:	mov	r3, r6
   1bcb8:	bl	1be10 <__mempcpy_chk@plt+0xa830>
   1bcbc:	cmp	r0, #0
   1bcc0:	bne	1be00 <__mempcpy_chk@plt+0xa820>
   1bcc4:	ldr	r0, [r5]
   1bcc8:	add	r0, r0, r6, lsl #3
   1bccc:	ldr	r0, [r0, #4]
   1bcd0:	tst	r0, #8
   1bcd4:	beq	1bdd4 <__mempcpy_chk@plt+0xa7f4>
   1bcd8:	ldr	r0, [r5, #20]
   1bcdc:	add	r1, r0, r4, lsl #2
   1bce0:	ldr	r1, [r1, #4]
   1bce4:	cmp	r1, #1
   1bce8:	blt	1bdd4 <__mempcpy_chk@plt+0xa7f4>
   1bcec:	str	r8, [sp, #12]
   1bcf0:	mov	r8, #0
   1bcf4:	add	r7, sp, #16
   1bcf8:	add	sl, sp, #32
   1bcfc:	mov	r6, #0
   1bd00:	str	r9, [sp, #8]
   1bd04:	add	r0, r0, r4, lsl #2
   1bd08:	ldr	r0, [r0, #8]
   1bd0c:	ldr	r2, [r0, r6, lsl #2]
   1bd10:	ldr	r0, [r5, #24]
   1bd14:	add	r9, r2, r2, lsl #1
   1bd18:	add	r0, r0, r9, lsl #2
   1bd1c:	ldr	r1, [r0, #4]
   1bd20:	cmn	r1, #1
   1bd24:	beq	1bd8c <__mempcpy_chk@plt+0xa7ac>
   1bd28:	cmp	r1, #0
   1bd2c:	bne	1bd4c <__mempcpy_chk@plt+0xa76c>
   1bd30:	mov	r0, r7
   1bd34:	mov	r1, r5
   1bd38:	mov	r3, #0
   1bd3c:	bl	1bbf4 <__mempcpy_chk@plt+0xa614>
   1bd40:	cmp	r0, #0
   1bd44:	beq	1bd5c <__mempcpy_chk@plt+0xa77c>
   1bd48:	b	1be00 <__mempcpy_chk@plt+0xa820>
   1bd4c:	vldr	d16, [r0]
   1bd50:	ldr	r0, [r0, #8]
   1bd54:	str	r0, [sp, #24]
   1bd58:	vstr	d16, [sp, #16]
   1bd5c:	mov	r0, sl
   1bd60:	mov	r1, r7
   1bd64:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1bd68:	cmp	r0, #0
   1bd6c:	bne	1be00 <__mempcpy_chk@plt+0xa820>
   1bd70:	ldr	r0, [r5, #24]
   1bd74:	add	r0, r0, r9, lsl #2
   1bd78:	ldr	r0, [r0, #4]
   1bd7c:	cmp	r0, #0
   1bd80:	bne	1bd90 <__mempcpy_chk@plt+0xa7b0>
   1bd84:	ldr	r0, [sp, #24]
   1bd88:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1bd8c:	mov	r8, #1
   1bd90:	ldr	r0, [r5, #20]
   1bd94:	add	r6, r6, #1
   1bd98:	add	r1, r0, r4, lsl #2
   1bd9c:	ldr	r1, [r1, #4]
   1bda0:	cmp	r6, r1
   1bda4:	blt	1bd04 <__mempcpy_chk@plt+0xa724>
   1bda8:	tst	r8, #1
   1bdac:	ldr	r8, [sp, #12]
   1bdb0:	ldr	r0, [sp, #8]
   1bdb4:	beq	1bdd4 <__mempcpy_chk@plt+0xa7f4>
   1bdb8:	cmp	r0, #0
   1bdbc:	bne	1bdd4 <__mempcpy_chk@plt+0xa7f4>
   1bdc0:	ldr	r0, [r5, #24]
   1bdc4:	mov	r1, #0
   1bdc8:	add	r0, r0, r4, lsl #2
   1bdcc:	str	r1, [r0, #4]
   1bdd0:	b	1bdec <__mempcpy_chk@plt+0xa80c>
   1bdd4:	ldr	r0, [r5, #24]
   1bdd8:	vldr	d16, [sp, #32]
   1bddc:	ldr	r1, [sp, #40]	; 0x28
   1bde0:	add	r0, r0, r4, lsl #2
   1bde4:	str	r1, [r0, #8]
   1bde8:	vstr	d16, [r0]
   1bdec:	ldr	r0, [sp, #40]	; 0x28
   1bdf0:	vldr	d16, [sp, #32]
   1bdf4:	str	r0, [r8, #8]
   1bdf8:	mov	r0, #0
   1bdfc:	vstr	d16, [r8]
   1be00:	sub	sp, fp, #28
   1be04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be08:	mov	r0, #12
   1be0c:	b	1be00 <__mempcpy_chk@plt+0xa820>
   1be10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be14:	add	fp, sp, #28
   1be18:	sub	sp, sp, #20
   1be1c:	mov	sl, r0
   1be20:	ldr	r0, [fp, #8]
   1be24:	mov	r8, r2
   1be28:	mov	r5, r1
   1be2c:	str	r3, [sp, #8]
   1be30:	str	r0, [sp, #16]
   1be34:	ldr	r2, [sl]
   1be38:	add	r1, r2, r5, lsl #3
   1be3c:	ldrb	r0, [r1, #4]!
   1be40:	cmp	r0, #4
   1be44:	bne	1beb4 <__mempcpy_chk@plt+0xa8d4>
   1be48:	ldr	r0, [sl, #12]
   1be4c:	ldr	r1, [sl, #20]
   1be50:	add	r6, r8, r8, lsl #1
   1be54:	ldr	r2, [sp, #16]
   1be58:	ldr	r7, [r0, r5, lsl #2]
   1be5c:	add	r0, r1, r6, lsl #2
   1be60:	mov	r1, #0
   1be64:	str	r1, [r0, #4]
   1be68:	mov	r0, sl
   1be6c:	mov	r1, r7
   1be70:	bl	1c254 <__mempcpy_chk@plt+0xac74>
   1be74:	mov	r9, #12
   1be78:	cmn	r0, #1
   1be7c:	beq	1c09c <__mempcpy_chk@plt+0xaabc>
   1be80:	mov	r4, r0
   1be84:	ldr	r0, [sl, #12]
   1be88:	ldr	r1, [r0, r5, lsl #2]
   1be8c:	str	r1, [r0, r8, lsl #2]
   1be90:	mov	r1, r4
   1be94:	ldr	r0, [sl, #20]
   1be98:	add	r0, r0, r6, lsl #2
   1be9c:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1bea0:	cmp	r0, #0
   1bea4:	mov	r5, r7
   1bea8:	mov	r8, r4
   1beac:	bne	1be34 <__mempcpy_chk@plt+0xa854>
   1beb0:	b	1c09c <__mempcpy_chk@plt+0xaabc>
   1beb4:	ldr	r0, [sl, #20]
   1beb8:	add	ip, r5, r5, lsl #1
   1bebc:	add	r7, r0, ip, lsl #2
   1bec0:	ldr	r3, [r7, #4]
   1bec4:	cmp	r3, #0
   1bec8:	beq	1c084 <__mempcpy_chk@plt+0xaaa4>
   1becc:	ldr	r7, [r7, #8]
   1bed0:	add	r6, r8, r8, lsl #1
   1bed4:	cmp	r3, #1
   1bed8:	add	r0, r0, r6, lsl #2
   1bedc:	str	r6, [sp, #12]
   1bee0:	mov	r6, #0
   1bee4:	ldr	r7, [r7]
   1bee8:	str	r6, [r0, #4]
   1beec:	beq	1c01c <__mempcpy_chk@plt+0xaa3c>
   1bef0:	ldr	r1, [sl, #8]
   1bef4:	ldr	r4, [sp, #16]
   1bef8:	sub	r3, r1, #1
   1befc:	cmp	r3, #1
   1bf00:	blt	1bf50 <__mempcpy_chk@plt+0xa970>
   1bf04:	add	r3, r2, r3, lsl #3
   1bf08:	ldr	r6, [r3, #4]
   1bf0c:	ands	r3, r6, #262144	; 0x40000
   1bf10:	beq	1bf50 <__mempcpy_chk@plt+0xa970>
   1bf14:	ldr	r3, [sl, #16]
   1bf18:	sub	r2, r2, #12
   1bf1c:	sub	r3, r3, #4
   1bf20:	ldr	r5, [r3, r1, lsl #2]
   1bf24:	cmp	r5, r7
   1bf28:	ubfxeq	r6, r6, #8, #10
   1bf2c:	cmpeq	r6, r4
   1bf30:	beq	1c000 <__mempcpy_chk@plt+0xaa20>
   1bf34:	sub	r6, r1, #2
   1bf38:	cmp	r6, #1
   1bf3c:	blt	1bf50 <__mempcpy_chk@plt+0xa970>
   1bf40:	ldr	r6, [r2, r1, lsl #3]
   1bf44:	sub	r1, r1, #1
   1bf48:	ands	r5, r6, #262144	; 0x40000
   1bf4c:	bne	1bf20 <__mempcpy_chk@plt+0xa940>
   1bf50:	mov	r0, sl
   1bf54:	mov	r1, r7
   1bf58:	mov	r2, r4
   1bf5c:	mov	r8, ip
   1bf60:	bl	1c254 <__mempcpy_chk@plt+0xac74>
   1bf64:	mov	r9, #12
   1bf68:	cmn	r0, #1
   1bf6c:	beq	1c09c <__mempcpy_chk@plt+0xaabc>
   1bf70:	mov	r5, r0
   1bf74:	ldr	r0, [sl, #20]
   1bf78:	ldr	r6, [sp, #12]
   1bf7c:	mov	r1, r5
   1bf80:	add	r0, r0, r6, lsl #2
   1bf84:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1bf88:	cmp	r0, #0
   1bf8c:	beq	1c09c <__mempcpy_chk@plt+0xaabc>
   1bf90:	ldr	r4, [sp, #16]
   1bf94:	ldr	r3, [sp, #8]
   1bf98:	mov	r0, sl
   1bf9c:	mov	r1, r7
   1bfa0:	mov	r2, r5
   1bfa4:	str	r4, [sp]
   1bfa8:	bl	1be10 <__mempcpy_chk@plt+0xa830>
   1bfac:	cmp	r0, #0
   1bfb0:	bne	1c098 <__mempcpy_chk@plt+0xaab8>
   1bfb4:	ldr	r0, [sl, #20]
   1bfb8:	mov	r2, r4
   1bfbc:	add	r0, r0, r8, lsl #2
   1bfc0:	ldr	r0, [r0, #8]
   1bfc4:	ldr	r5, [r0, #4]
   1bfc8:	mov	r0, sl
   1bfcc:	mov	r1, r5
   1bfd0:	bl	1c254 <__mempcpy_chk@plt+0xac74>
   1bfd4:	mov	r9, #12
   1bfd8:	cmn	r0, #1
   1bfdc:	beq	1c09c <__mempcpy_chk@plt+0xaabc>
   1bfe0:	mov	r8, r0
   1bfe4:	ldr	r0, [sl, #20]
   1bfe8:	mov	r1, r8
   1bfec:	add	r0, r0, r6, lsl #2
   1bff0:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1bff4:	cmp	r0, #0
   1bff8:	bne	1be34 <__mempcpy_chk@plt+0xa854>
   1bffc:	b	1c09c <__mempcpy_chk@plt+0xaabc>
   1c000:	sub	r1, r1, #1
   1c004:	mov	r8, ip
   1c008:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1c00c:	ldr	r6, [sp, #12]
   1c010:	cmp	r0, #0
   1c014:	bne	1bfb4 <__mempcpy_chk@plt+0xa9d4>
   1c018:	b	1c0c8 <__mempcpy_chk@plt+0xaae8>
   1c01c:	ldr	r2, [sp, #8]
   1c020:	cmp	r5, r2
   1c024:	bne	1c030 <__mempcpy_chk@plt+0xaa50>
   1c028:	cmp	r8, r5
   1c02c:	bne	1c0a8 <__mempcpy_chk@plt+0xaac8>
   1c030:	ldr	r0, [r1]
   1c034:	mov	r1, r7
   1c038:	ubfx	r0, r0, #8, #10
   1c03c:	ldr	r2, [sp, #16]
   1c040:	orr	r2, r0, r2
   1c044:	mov	r0, sl
   1c048:	str	r2, [sp, #16]
   1c04c:	bl	1c254 <__mempcpy_chk@plt+0xac74>
   1c050:	mov	r9, #12
   1c054:	cmn	r0, #1
   1c058:	beq	1c09c <__mempcpy_chk@plt+0xaabc>
   1c05c:	mov	r8, r0
   1c060:	ldr	r0, [sl, #20]
   1c064:	ldr	r1, [sp, #12]
   1c068:	add	r0, r0, r1, lsl #2
   1c06c:	mov	r1, r8
   1c070:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1c074:	cmp	r0, #0
   1c078:	mov	r5, r7
   1c07c:	bne	1be34 <__mempcpy_chk@plt+0xa854>
   1c080:	b	1c09c <__mempcpy_chk@plt+0xaabc>
   1c084:	ldr	r0, [sl, #12]
   1c088:	ldr	r1, [r0, r5, lsl #2]
   1c08c:	str	r1, [r0, r8, lsl #2]
   1c090:	mov	r0, #0
   1c094:	b	1c0a0 <__mempcpy_chk@plt+0xaac0>
   1c098:	mov	r9, r0
   1c09c:	mov	r0, r9
   1c0a0:	sub	sp, fp, #28
   1c0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c0a8:	mov	r1, r7
   1c0ac:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1c0b0:	mov	r1, r0
   1c0b4:	mov	r9, #12
   1c0b8:	mov	r0, #0
   1c0bc:	cmp	r1, #0
   1c0c0:	moveq	r0, r9
   1c0c4:	b	1c0a0 <__mempcpy_chk@plt+0xaac0>
   1c0c8:	mov	r9, #12
   1c0cc:	b	1c09c <__mempcpy_chk@plt+0xaabc>
   1c0d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c0d4:	add	fp, sp, #24
   1c0d8:	mov	r8, #0
   1c0dc:	cmp	r1, #0
   1c0e0:	beq	1c22c <__mempcpy_chk@plt+0xac4c>
   1c0e4:	mov	r6, r1
   1c0e8:	ldr	r1, [r1, #4]
   1c0ec:	cmp	r1, #0
   1c0f0:	beq	1c22c <__mempcpy_chk@plt+0xac4c>
   1c0f4:	mov	r9, r0
   1c0f8:	ldr	r2, [r0]
   1c0fc:	ldr	r0, [r0, #4]
   1c100:	add	r3, r0, r1, lsl #1
   1c104:	cmp	r2, r3
   1c108:	bge	1c134 <__mempcpy_chk@plt+0xab54>
   1c10c:	ldr	r0, [r9, #8]
   1c110:	add	r7, r2, r1
   1c114:	lsl	r1, r7, #3
   1c118:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1c11c:	cmp	r0, #0
   1c120:	beq	1c24c <__mempcpy_chk@plt+0xac6c>
   1c124:	str	r0, [r9, #8]
   1c128:	lsl	r0, r7, #1
   1c12c:	str	r0, [r9]
   1c130:	ldr	r0, [r9, #4]
   1c134:	cmp	r0, #0
   1c138:	beq	1c234 <__mempcpy_chk@plt+0xac54>
   1c13c:	ldr	r2, [r6, #4]
   1c140:	sub	r1, r0, #1
   1c144:	add	r7, r0, r2, lsl #1
   1c148:	sub	r0, r2, #1
   1c14c:	orrs	r2, r0, r1
   1c150:	bmi	1c194 <__mempcpy_chk@plt+0xabb4>
   1c154:	ldr	r2, [r6, #8]
   1c158:	ldr	r3, [r9, #8]
   1c15c:	ldr	r4, [r2, r0, lsl #2]
   1c160:	ldr	r5, [r3, r1, lsl #2]
   1c164:	cmp	r5, r4
   1c168:	bne	1c178 <__mempcpy_chk@plt+0xab98>
   1c16c:	sub	r1, r1, #1
   1c170:	sub	r0, r0, #1
   1c174:	b	1c188 <__mempcpy_chk@plt+0xaba8>
   1c178:	sublt	r7, r7, #1
   1c17c:	subge	r1, r1, #1
   1c180:	sublt	r0, r0, #1
   1c184:	strlt	r4, [r3, r7, lsl #2]
   1c188:	orr	r5, r0, r1
   1c18c:	cmn	r5, #1
   1c190:	bgt	1c15c <__mempcpy_chk@plt+0xab7c>
   1c194:	cmp	r0, #0
   1c198:	bmi	1c1b8 <__mempcpy_chk@plt+0xabd8>
   1c19c:	add	r2, r0, #1
   1c1a0:	ldr	r0, [r9, #8]
   1c1a4:	ldr	r1, [r6, #8]
   1c1a8:	sub	r7, r7, r2
   1c1ac:	lsl	r2, r2, #2
   1c1b0:	add	r0, r0, r7, lsl #2
   1c1b4:	bl	1134c <memcpy@plt>
   1c1b8:	ldr	r0, [r9, #4]
   1c1bc:	ldr	r2, [r6, #4]
   1c1c0:	sub	r1, r0, #1
   1c1c4:	add	r3, r1, r2, lsl #1
   1c1c8:	sub	r2, r3, r7
   1c1cc:	adds	r2, r2, #1
   1c1d0:	bcs	1c22c <__mempcpy_chk@plt+0xac4c>
   1c1d4:	add	r0, r2, r0
   1c1d8:	str	r0, [r9, #4]
   1c1dc:	ldr	r0, [r9, #8]
   1c1e0:	ldr	r6, [r0, r1, lsl #2]
   1c1e4:	ldr	r5, [r0, r3, lsl #2]
   1c1e8:	cmp	r5, r6
   1c1ec:	ble	1c208 <__mempcpy_chk@plt+0xac28>
   1c1f0:	add	r6, r2, r1
   1c1f4:	subs	r2, r2, #1
   1c1f8:	sub	r3, r3, #1
   1c1fc:	str	r5, [r0, r6, lsl #2]
   1c200:	bne	1c1e0 <__mempcpy_chk@plt+0xac00>
   1c204:	b	1c22c <__mempcpy_chk@plt+0xac4c>
   1c208:	add	r5, r2, r1
   1c20c:	cmp	r1, #0
   1c210:	str	r6, [r0, r5, lsl #2]
   1c214:	sub	r6, r1, #1
   1c218:	mov	r1, r6
   1c21c:	bgt	1c1e0 <__mempcpy_chk@plt+0xac00>
   1c220:	add	r1, r0, r7, lsl #2
   1c224:	lsl	r2, r2, #2
   1c228:	bl	1134c <memcpy@plt>
   1c22c:	mov	r0, r8
   1c230:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c234:	ldr	r0, [r6, #4]
   1c238:	str	r0, [r9, #4]
   1c23c:	ldr	r0, [r9, #8]
   1c240:	ldr	r2, [r6, #4]
   1c244:	ldr	r1, [r6, #8]
   1c248:	b	1c224 <__mempcpy_chk@plt+0xac44>
   1c24c:	mov	r8, #12
   1c250:	b	1c22c <__mempcpy_chk@plt+0xac4c>
   1c254:	push	{r4, r5, r6, sl, fp, lr}
   1c258:	add	fp, sp, #16
   1c25c:	mov	r5, r0
   1c260:	ldr	r0, [r0]
   1c264:	mov	r4, r1
   1c268:	mov	r6, r2
   1c26c:	ldr	r1, [r0, r1, lsl #3]!
   1c270:	ldr	r2, [r0, #4]
   1c274:	mov	r0, r5
   1c278:	bl	1ba24 <__mempcpy_chk@plt+0xa444>
   1c27c:	cmn	r0, #1
   1c280:	ldrne	r1, [r5]
   1c284:	movwne	r3, #65280	; 0xff00
   1c288:	movtne	r3, #3
   1c28c:	addne	r1, r1, r0, lsl #3
   1c290:	ldrne	r2, [r1, #4]
   1c294:	bfine	r2, r6, #8, #10
   1c298:	strne	r2, [r1, #4]
   1c29c:	ldrne	r1, [r5]
   1c2a0:	addne	r2, r1, r4, lsl #3
   1c2a4:	addne	r1, r1, r0, lsl #3
   1c2a8:	ldrne	r2, [r2, #4]
   1c2ac:	andne	r2, r2, r3
   1c2b0:	ldrne	r3, [r1, #4]
   1c2b4:	orrne	r2, r2, r3
   1c2b8:	strne	r2, [r1, #4]
   1c2bc:	ldrne	r1, [r5]
   1c2c0:	addne	r1, r1, r0, lsl #3
   1c2c4:	ldrne	r2, [r1, #4]
   1c2c8:	orrne	r2, r2, #262144	; 0x40000
   1c2cc:	strne	r2, [r1, #4]
   1c2d0:	ldrne	r1, [r5, #16]
   1c2d4:	strne	r4, [r1, r0, lsl #2]
   1c2d8:	pop	{r4, r5, r6, sl, fp, pc}
   1c2dc:	push	{r4, r5, r6, sl, fp, lr}
   1c2e0:	add	fp, sp, #16
   1c2e4:	ldr	r2, [r0]
   1c2e8:	mov	r5, r1
   1c2ec:	mov	r4, r0
   1c2f0:	cmp	r2, #0
   1c2f4:	beq	1c320 <__mempcpy_chk@plt+0xad40>
   1c2f8:	ldr	r1, [r4, #4]
   1c2fc:	cmp	r1, #0
   1c300:	bne	1c34c <__mempcpy_chk@plt+0xad6c>
   1c304:	ldr	r0, [r4, #8]
   1c308:	str	r5, [r0]
   1c30c:	ldr	r0, [r4, #4]
   1c310:	mov	r6, #1
   1c314:	add	r0, r0, #1
   1c318:	str	r0, [r4, #4]
   1c31c:	b	1c344 <__mempcpy_chk@plt+0xad64>
   1c320:	mov	r6, #1
   1c324:	mov	r0, #4
   1c328:	str	r6, [r4]
   1c32c:	str	r6, [r4, #4]
   1c330:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1c334:	cmp	r0, #0
   1c338:	str	r0, [r4, #8]
   1c33c:	beq	1c37c <__mempcpy_chk@plt+0xad9c>
   1c340:	str	r5, [r0]
   1c344:	mov	r0, r6
   1c348:	pop	{r4, r5, r6, sl, fp, pc}
   1c34c:	cmp	r2, r1
   1c350:	bne	1c38c <__mempcpy_chk@plt+0xadac>
   1c354:	lsl	r0, r2, #1
   1c358:	lsl	r1, r2, #3
   1c35c:	str	r0, [r4]
   1c360:	ldr	r0, [r4, #8]
   1c364:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1c368:	cmp	r0, #0
   1c36c:	beq	1c404 <__mempcpy_chk@plt+0xae24>
   1c370:	str	r0, [r4, #8]
   1c374:	ldr	r1, [r4, #4]
   1c378:	b	1c390 <__mempcpy_chk@plt+0xadb0>
   1c37c:	mov	r6, #0
   1c380:	str	r6, [r4]
   1c384:	str	r6, [r4, #4]
   1c388:	b	1c344 <__mempcpy_chk@plt+0xad64>
   1c38c:	ldr	r0, [r4, #8]
   1c390:	ldr	r2, [r0]
   1c394:	cmp	r2, r5
   1c398:	ble	1c3cc <__mempcpy_chk@plt+0xadec>
   1c39c:	cmp	r1, #1
   1c3a0:	blt	1c3fc <__mempcpy_chk@plt+0xae1c>
   1c3a4:	add	r3, r0, r1, lsl #2
   1c3a8:	mov	r2, r3
   1c3ac:	ldr	r6, [r2, #-4]!
   1c3b0:	sub	r1, r1, #1
   1c3b4:	cmp	r1, #0
   1c3b8:	str	r6, [r3]
   1c3bc:	mov	r3, r2
   1c3c0:	bgt	1c3ac <__mempcpy_chk@plt+0xadcc>
   1c3c4:	mov	r1, #0
   1c3c8:	b	1c3fc <__mempcpy_chk@plt+0xae1c>
   1c3cc:	add	r2, r0, r1, lsl #2
   1c3d0:	ldr	r3, [r2, #-4]
   1c3d4:	cmp	r3, r5
   1c3d8:	ble	1c3fc <__mempcpy_chk@plt+0xae1c>
   1c3dc:	sub	r1, r1, #2
   1c3e0:	str	r3, [r2]
   1c3e4:	sub	r1, r1, #1
   1c3e8:	ldr	r3, [r2, #-8]
   1c3ec:	sub	r2, r2, #4
   1c3f0:	cmp	r3, r5
   1c3f4:	bgt	1c3e0 <__mempcpy_chk@plt+0xae00>
   1c3f8:	add	r1, r1, #2
   1c3fc:	str	r5, [r0, r1, lsl #2]
   1c400:	b	1c30c <__mempcpy_chk@plt+0xad2c>
   1c404:	mov	r6, #0
   1c408:	b	1c344 <__mempcpy_chk@plt+0xad64>
   1c40c:	push	{r4, r5, fp, lr}
   1c410:	add	fp, sp, #8
   1c414:	mov	r5, r0
   1c418:	mov	r4, r1
   1c41c:	ldr	r0, [r0]
   1c420:	ldr	r1, [r5, #4]
   1c424:	cmp	r0, r1
   1c428:	bne	1c458 <__mempcpy_chk@plt+0xae78>
   1c42c:	mov	r1, #2
   1c430:	add	r0, r1, r0, lsl #1
   1c434:	str	r0, [r5]
   1c438:	lsl	r1, r0, #2
   1c43c:	ldr	r0, [r5, #8]
   1c440:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1c444:	cmp	r0, #0
   1c448:	beq	1c470 <__mempcpy_chk@plt+0xae90>
   1c44c:	str	r0, [r5, #8]
   1c450:	ldr	r1, [r5, #4]
   1c454:	b	1c45c <__mempcpy_chk@plt+0xae7c>
   1c458:	ldr	r0, [r5, #8]
   1c45c:	add	r2, r1, #1
   1c460:	str	r2, [r5, #4]
   1c464:	str	r4, [r0, r1, lsl #2]
   1c468:	mov	r0, #1
   1c46c:	pop	{r4, r5, fp, pc}
   1c470:	mov	r0, #0
   1c474:	pop	{r4, r5, fp, pc}
   1c478:	push	{r4, r5, fp, lr}
   1c47c:	add	fp, sp, #8
   1c480:	mov	r4, r0
   1c484:	ldr	r0, [r1, #4]
   1c488:	mov	r5, r1
   1c48c:	str	r0, [r4, #4]
   1c490:	ldr	r1, [r1, #4]
   1c494:	cmp	r1, #1
   1c498:	blt	1c4cc <__mempcpy_chk@plt+0xaeec>
   1c49c:	str	r0, [r4]
   1c4a0:	lsl	r0, r0, #2
   1c4a4:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1c4a8:	cmp	r0, #0
   1c4ac:	str	r0, [r4, #8]
   1c4b0:	beq	1c4e0 <__mempcpy_chk@plt+0xaf00>
   1c4b4:	ldr	r2, [r5, #4]
   1c4b8:	ldr	r1, [r5, #8]
   1c4bc:	lsl	r2, r2, #2
   1c4c0:	bl	1134c <memcpy@plt>
   1c4c4:	mov	r0, #0
   1c4c8:	pop	{r4, r5, fp, pc}
   1c4cc:	mov	r0, #0
   1c4d0:	str	r0, [r4]
   1c4d4:	str	r0, [r4, #4]
   1c4d8:	str	r0, [r4, #8]
   1c4dc:	pop	{r4, r5, fp, pc}
   1c4e0:	mov	r0, #0
   1c4e4:	str	r0, [r4]
   1c4e8:	str	r0, [r4, #4]
   1c4ec:	mov	r0, #12
   1c4f0:	pop	{r4, r5, fp, pc}
   1c4f4:	push	{r4, r5, r6, sl, fp, lr}
   1c4f8:	add	fp, sp, #16
   1c4fc:	ldr	r2, [r0, #4]
   1c500:	cmp	r2, #1
   1c504:	blt	1c554 <__mempcpy_chk@plt+0xaf74>
   1c508:	ldr	ip, [r0, #8]
   1c50c:	subs	r2, r2, #1
   1c510:	mov	r0, #0
   1c514:	mov	r3, #0
   1c518:	beq	1c544 <__mempcpy_chk@plt+0xaf64>
   1c51c:	mov	r3, #0
   1c520:	mov	lr, #1
   1c524:	add	r4, r2, r3
   1c528:	lsr	r5, r4, #1
   1c52c:	ldr	r6, [ip, r5, lsl #2]
   1c530:	cmp	r6, r1
   1c534:	addlt	r3, lr, r4, lsr #1
   1c538:	movge	r2, r5
   1c53c:	cmp	r3, r2
   1c540:	bcc	1c524 <__mempcpy_chk@plt+0xaf44>
   1c544:	ldr	r2, [ip, r3, lsl #2]
   1c548:	cmp	r2, r1
   1c54c:	addeq	r0, r3, #1
   1c550:	pop	{r4, r5, r6, sl, fp, pc}
   1c554:	mov	r0, #0
   1c558:	pop	{r4, r5, r6, sl, fp, pc}
   1c55c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c560:	add	fp, sp, #28
   1c564:	sub	sp, sp, #20
   1c568:	ldr	lr, [r2, #4]
   1c56c:	cmp	lr, #0
   1c570:	beq	1c874 <__mempcpy_chk@plt+0xb294>
   1c574:	mov	r8, r3
   1c578:	mov	sl, r2
   1c57c:	add	r7, lr, r3
   1c580:	cmp	lr, #1
   1c584:	str	r0, [sp, #4]
   1c588:	blt	1c5a4 <__mempcpy_chk@plt+0xafc4>
   1c58c:	ldr	r3, [sl, #8]
   1c590:	mov	r2, lr
   1c594:	ldr	r0, [r3], #4
   1c598:	subs	r2, r2, #1
   1c59c:	add	r7, r0, r7
   1c5a0:	bne	1c594 <__mempcpy_chk@plt+0xafb4>
   1c5a4:	ldr	r0, [r1, #32]
   1c5a8:	str	r1, [sp, #12]
   1c5ac:	ldr	r1, [r1, #68]	; 0x44
   1c5b0:	and	r1, r1, r7
   1c5b4:	add	r2, r1, r1, lsl #1
   1c5b8:	ldr	r1, [r0, r2, lsl #2]
   1c5bc:	cmp	r1, #1
   1c5c0:	blt	1c650 <__mempcpy_chk@plt+0xb070>
   1c5c4:	add	r0, r0, r2, lsl #2
   1c5c8:	sub	ip, lr, #1
   1c5cc:	mov	r3, #0
   1c5d0:	ldr	r9, [r0, #8]
   1c5d4:	ldr	r4, [r9, r3, lsl #2]
   1c5d8:	ldr	r0, [r4]
   1c5dc:	cmp	r0, r7
   1c5e0:	bne	1c604 <__mempcpy_chk@plt+0xb024>
   1c5e4:	ldrb	r0, [r4, #52]	; 0x34
   1c5e8:	and	r0, r0, #15
   1c5ec:	cmp	r0, r8
   1c5f0:	bne	1c604 <__mempcpy_chk@plt+0xb024>
   1c5f4:	cmp	sl, #0
   1c5f8:	ldrne	r5, [r4, #40]	; 0x28
   1c5fc:	cmpne	r5, #0
   1c600:	bne	1c614 <__mempcpy_chk@plt+0xb034>
   1c604:	add	r3, r3, #1
   1c608:	cmp	r3, r1
   1c60c:	blt	1c5d4 <__mempcpy_chk@plt+0xaff4>
   1c610:	b	1c650 <__mempcpy_chk@plt+0xb070>
   1c614:	ldr	r0, [r5, #4]
   1c618:	cmp	r0, lr
   1c61c:	bne	1c604 <__mempcpy_chk@plt+0xb024>
   1c620:	mov	r0, ip
   1c624:	add	r6, r0, #1
   1c628:	cmp	r6, #1
   1c62c:	blt	1c87c <__mempcpy_chk@plt+0xb29c>
   1c630:	ldr	r6, [sl, #8]
   1c634:	ldr	r2, [r5, #8]
   1c638:	ldr	r6, [r6, r0, lsl #2]
   1c63c:	ldr	r2, [r2, r0, lsl #2]
   1c640:	sub	r0, r0, #1
   1c644:	cmp	r2, r6
   1c648:	beq	1c624 <__mempcpy_chk@plt+0xb044>
   1c64c:	b	1c604 <__mempcpy_chk@plt+0xb024>
   1c650:	mov	r0, #56	; 0x38
   1c654:	mov	r1, #1
   1c658:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1c65c:	cmp	r0, #0
   1c660:	beq	1c860 <__mempcpy_chk@plt+0xb280>
   1c664:	add	r5, r0, #4
   1c668:	mov	r4, r0
   1c66c:	mov	r1, sl
   1c670:	mov	r0, r5
   1c674:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   1c678:	cmp	r0, #0
   1c67c:	bne	1c888 <__mempcpy_chk@plt+0xb2a8>
   1c680:	str	r5, [r4, #40]	; 0x28
   1c684:	and	r0, r8, #15
   1c688:	ldr	r6, [sp, #12]
   1c68c:	ldrb	r1, [r4, #52]	; 0x34
   1c690:	and	r1, r1, #240	; 0xf0
   1c694:	orr	r0, r1, r0
   1c698:	strb	r0, [r4, #52]	; 0x34
   1c69c:	ldr	r0, [sl, #4]
   1c6a0:	cmp	r0, #1
   1c6a4:	blt	1c840 <__mempcpy_chk@plt+0xb260>
   1c6a8:	movw	r9, #65280	; 0xff00
   1c6ac:	and	r0, r8, #4
   1c6b0:	mov	ip, r5
   1c6b4:	and	lr, r8, #1
   1c6b8:	movt	r9, #3
   1c6bc:	str	r0, [sp]
   1c6c0:	and	r0, r8, #2
   1c6c4:	mov	r8, #0
   1c6c8:	str	r0, [sp, #8]
   1c6cc:	mov	r0, #0
   1c6d0:	add	r3, r9, #255	; 0xff
   1c6d4:	str	r3, [sp, #16]
   1c6d8:	ldr	r1, [sl, #8]
   1c6dc:	ldr	r2, [r6]
   1c6e0:	ldr	r1, [r1, r8, lsl #2]
   1c6e4:	add	r1, r2, r1, lsl #3
   1c6e8:	ldr	r5, [r1, #4]
   1c6ec:	and	r1, r5, r3
   1c6f0:	cmp	r1, #1
   1c6f4:	beq	1c808 <__mempcpy_chk@plt+0xb228>
   1c6f8:	ldrb	r3, [r4, #52]	; 0x34
   1c6fc:	mov	r2, #32
   1c700:	and	r1, r5, r9
   1c704:	and	r2, r2, r5, lsr #15
   1c708:	orr	r2, r3, r2
   1c70c:	uxtb	r3, r5
   1c710:	strb	r2, [r4, #52]	; 0x34
   1c714:	cmp	r3, #2
   1c718:	beq	1c72c <__mempcpy_chk@plt+0xb14c>
   1c71c:	cmp	r3, #4
   1c720:	bne	1c738 <__mempcpy_chk@plt+0xb158>
   1c724:	mov	r3, #64	; 0x40
   1c728:	b	1c730 <__mempcpy_chk@plt+0xb150>
   1c72c:	mov	r3, #16
   1c730:	orr	r2, r2, r3
   1c734:	strb	r2, [r4, #52]	; 0x34
   1c738:	cmp	r1, #0
   1c73c:	beq	1c804 <__mempcpy_chk@plt+0xb224>
   1c740:	ldr	r1, [r4, #40]	; 0x28
   1c744:	cmp	r1, ip
   1c748:	bne	1c79c <__mempcpy_chk@plt+0xb1bc>
   1c74c:	mov	r0, #12
   1c750:	mov	r6, lr
   1c754:	mov	r9, ip
   1c758:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1c75c:	cmp	r0, #0
   1c760:	beq	1c858 <__mempcpy_chk@plt+0xb278>
   1c764:	mov	r1, sl
   1c768:	str	r0, [r4, #40]	; 0x28
   1c76c:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   1c770:	cmp	r0, #0
   1c774:	bne	1c858 <__mempcpy_chk@plt+0xb278>
   1c778:	ldrb	r0, [r4, #52]	; 0x34
   1c77c:	mov	lr, r6
   1c780:	ldr	r6, [sp, #12]
   1c784:	mov	ip, r9
   1c788:	movw	r9, #65280	; 0xff00
   1c78c:	movt	r9, #3
   1c790:	orr	r0, r0, #128	; 0x80
   1c794:	strb	r0, [r4, #52]	; 0x34
   1c798:	mov	r0, #0
   1c79c:	cmp	lr, #0
   1c7a0:	bne	1c7ac <__mempcpy_chk@plt+0xb1cc>
   1c7a4:	ands	r1, r5, #256	; 0x100
   1c7a8:	bne	1c7e0 <__mempcpy_chk@plt+0xb200>
   1c7ac:	cmp	lr, #0
   1c7b0:	andsne	r1, r5, #512	; 0x200
   1c7b4:	bne	1c7e0 <__mempcpy_chk@plt+0xb200>
   1c7b8:	ldr	r1, [sp, #8]
   1c7bc:	cmp	r1, #0
   1c7c0:	bne	1c7cc <__mempcpy_chk@plt+0xb1ec>
   1c7c4:	ands	r1, r5, #4096	; 0x1000
   1c7c8:	bne	1c7e0 <__mempcpy_chk@plt+0xb200>
   1c7cc:	ldr	r1, [sp]
   1c7d0:	cmp	r1, #0
   1c7d4:	bne	1c804 <__mempcpy_chk@plt+0xb224>
   1c7d8:	ands	r1, r5, #16384	; 0x4000
   1c7dc:	beq	1c804 <__mempcpy_chk@plt+0xb224>
   1c7e0:	subs	r1, r8, r0
   1c7e4:	bmi	1c800 <__mempcpy_chk@plt+0xb220>
   1c7e8:	ldr	r2, [r4, #8]
   1c7ec:	cmp	r2, r1
   1c7f0:	subgt	r2, r2, #1
   1c7f4:	strgt	r2, [r4, #8]
   1c7f8:	cmpgt	r2, r1
   1c7fc:	bgt	1c81c <__mempcpy_chk@plt+0xb23c>
   1c800:	add	r0, r0, #1
   1c804:	ldr	r3, [sp, #16]
   1c808:	ldr	r1, [sl, #4]
   1c80c:	add	r8, r8, #1
   1c810:	cmp	r8, r1
   1c814:	blt	1c6d8 <__mempcpy_chk@plt+0xb0f8>
   1c818:	b	1c840 <__mempcpy_chk@plt+0xb260>
   1c81c:	ldr	r2, [r4, #12]
   1c820:	add	r3, r2, r1, lsl #2
   1c824:	ldr	r3, [r3, #4]
   1c828:	str	r3, [r2, r1, lsl #2]
   1c82c:	add	r1, r1, #1
   1c830:	ldr	r3, [r4, #8]
   1c834:	cmp	r1, r3
   1c838:	blt	1c820 <__mempcpy_chk@plt+0xb240>
   1c83c:	b	1c800 <__mempcpy_chk@plt+0xb220>
   1c840:	mov	r0, r6
   1c844:	mov	r1, r4
   1c848:	mov	r2, r7
   1c84c:	bl	1c894 <__mempcpy_chk@plt+0xb2b4>
   1c850:	cmp	r0, #0
   1c854:	beq	1c87c <__mempcpy_chk@plt+0xb29c>
   1c858:	mov	r0, r4
   1c85c:	bl	1798c <__mempcpy_chk@plt+0x63ac>
   1c860:	ldr	r1, [sp, #4]
   1c864:	mov	r0, #12
   1c868:	mov	r4, #0
   1c86c:	str	r0, [r1]
   1c870:	b	1c87c <__mempcpy_chk@plt+0xb29c>
   1c874:	mov	r4, #0
   1c878:	str	r4, [r0]
   1c87c:	mov	r0, r4
   1c880:	sub	sp, fp, #28
   1c884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c888:	mov	r0, r4
   1c88c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1c890:	b	1c860 <__mempcpy_chk@plt+0xb280>
   1c894:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c898:	add	fp, sp, #24
   1c89c:	mov	r7, r0
   1c8a0:	mov	r0, #0
   1c8a4:	str	r2, [r1]
   1c8a8:	mov	r5, r1
   1c8ac:	mov	r9, r2
   1c8b0:	mov	r4, r1
   1c8b4:	str	r0, [r1, #20]
   1c8b8:	ldr	r0, [r1, #8]
   1c8bc:	str	r0, [r5, #16]!
   1c8c0:	lsl	r0, r0, #2
   1c8c4:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1c8c8:	mov	r8, #12
   1c8cc:	cmp	r0, #0
   1c8d0:	str	r0, [r4, #24]
   1c8d4:	beq	1c964 <__mempcpy_chk@plt+0xb384>
   1c8d8:	ldr	r0, [r4, #8]
   1c8dc:	cmp	r0, #1
   1c8e0:	blt	1c924 <__mempcpy_chk@plt+0xb344>
   1c8e4:	mov	r6, #0
   1c8e8:	ldr	r1, [r4, #12]
   1c8ec:	ldr	r2, [r7]
   1c8f0:	ldr	r1, [r1, r6, lsl #2]
   1c8f4:	add	r2, r2, r1, lsl #3
   1c8f8:	ldrb	r2, [r2, #4]
   1c8fc:	tst	r2, #8
   1c900:	bne	1c918 <__mempcpy_chk@plt+0xb338>
   1c904:	mov	r0, r5
   1c908:	bl	1c40c <__mempcpy_chk@plt+0xae2c>
   1c90c:	cmp	r0, #0
   1c910:	beq	1c964 <__mempcpy_chk@plt+0xb384>
   1c914:	ldr	r0, [r4, #8]
   1c918:	add	r6, r6, #1
   1c91c:	cmp	r6, r0
   1c920:	blt	1c8e8 <__mempcpy_chk@plt+0xb308>
   1c924:	ldr	r1, [r7, #68]	; 0x44
   1c928:	ldr	r0, [r7, #32]
   1c92c:	and	r1, r1, r9
   1c930:	mov	r5, r0
   1c934:	add	r2, r1, r1, lsl #1
   1c938:	ldr	r1, [r5, r2, lsl #2]!
   1c93c:	mov	r6, r5
   1c940:	ldr	r3, [r6, #4]!
   1c944:	cmp	r3, r1
   1c948:	ble	1c96c <__mempcpy_chk@plt+0xb38c>
   1c94c:	add	r0, r0, r2, lsl #2
   1c950:	ldr	r0, [r0, #8]
   1c954:	add	r2, r1, #1
   1c958:	mov	r8, #0
   1c95c:	str	r2, [r5]
   1c960:	str	r4, [r0, r1, lsl #2]
   1c964:	mov	r0, r8
   1c968:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c96c:	add	r7, r0, r2, lsl #2
   1c970:	mov	r2, #2
   1c974:	add	r9, r2, r1, lsl #1
   1c978:	ldr	r0, [r7, #8]!
   1c97c:	lsl	r1, r9, #2
   1c980:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1c984:	cmp	r0, #0
   1c988:	beq	1c964 <__mempcpy_chk@plt+0xb384>
   1c98c:	str	r0, [r7]
   1c990:	str	r9, [r6]
   1c994:	ldr	r1, [r5]
   1c998:	b	1c954 <__mempcpy_chk@plt+0xb374>
   1c99c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9a0:	add	fp, sp, #28
   1c9a4:	sub	sp, sp, #36	; 0x24
   1c9a8:	mov	r4, r0
   1c9ac:	ldr	r0, [r0, #24]
   1c9b0:	mov	r6, r2
   1c9b4:	mov	r9, r1
   1c9b8:	cmp	r0, r1
   1c9bc:	ble	1cb24 <__mempcpy_chk@plt+0xb544>
   1c9c0:	ldr	r0, [r4, #80]	; 0x50
   1c9c4:	mov	r1, #4
   1c9c8:	cmp	r0, #2
   1c9cc:	movge	r0, #0
   1c9d0:	strge	r0, [r4, #16]
   1c9d4:	strge	r0, [r4, #20]
   1c9d8:	mov	r0, #0
   1c9dc:	tst	r6, #1
   1c9e0:	strb	r0, [r4, #76]	; 0x4c
   1c9e4:	str	r0, [r4, #24]
   1c9e8:	str	r0, [r4, #28]
   1c9ec:	str	r0, [r4, #32]
   1c9f0:	movweq	r1, #6
   1c9f4:	ldr	r2, [r4, #44]	; 0x2c
   1c9f8:	ldr	r3, [r4, #52]	; 0x34
   1c9fc:	str	r2, [r4, #48]	; 0x30
   1ca00:	str	r3, [r4, #56]	; 0x38
   1ca04:	str	r1, [r4, #60]	; 0x3c
   1ca08:	ldrb	r1, [r4, #75]	; 0x4b
   1ca0c:	cmp	r1, #0
   1ca10:	bne	1ca1c <__mempcpy_chk@plt+0xb43c>
   1ca14:	ldr	r1, [r4]
   1ca18:	str	r1, [r4, #4]
   1ca1c:	mov	r5, r9
   1ca20:	cmp	r5, #0
   1ca24:	beq	1cab0 <__mempcpy_chk@plt+0xb4d0>
   1ca28:	ldr	r1, [r4, #32]
   1ca2c:	cmp	r5, r1
   1ca30:	bge	1cb2c <__mempcpy_chk@plt+0xb54c>
   1ca34:	ldrb	r0, [r4, #76]	; 0x4c
   1ca38:	cmp	r0, #0
   1ca3c:	bne	1cca4 <__mempcpy_chk@plt+0xb6c4>
   1ca40:	sub	r1, r5, #1
   1ca44:	mov	r0, r4
   1ca48:	mov	r2, r6
   1ca4c:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1ca50:	str	r0, [r4, #60]	; 0x3c
   1ca54:	ldr	r0, [r4, #80]	; 0x50
   1ca58:	cmp	r0, #2
   1ca5c:	blt	1ca78 <__mempcpy_chk@plt+0xb498>
   1ca60:	ldr	r2, [r4, #28]
   1ca64:	ldr	r0, [r4, #8]
   1ca68:	sub	r2, r2, r5
   1ca6c:	add	r1, r0, r5, lsl #2
   1ca70:	lsl	r2, r2, #2
   1ca74:	bl	1131c <memmove@plt>
   1ca78:	ldrb	r0, [r4, #75]	; 0x4b
   1ca7c:	cmp	r0, #0
   1ca80:	bne	1cd94 <__mempcpy_chk@plt+0xb7b4>
   1ca84:	ldr	r0, [r4, #28]
   1ca88:	ldr	r1, [r4, #32]
   1ca8c:	sub	r0, r0, r5
   1ca90:	sub	r1, r1, r5
   1ca94:	str	r0, [r4, #28]
   1ca98:	str	r1, [r4, #32]
   1ca9c:	ldrb	r0, [r4, #75]	; 0x4b
   1caa0:	cmp	r0, #0
   1caa4:	ldreq	r0, [r4, #4]
   1caa8:	addeq	r0, r0, r5
   1caac:	streq	r0, [r4, #4]
   1cab0:	str	r9, [r4, #24]
   1cab4:	ldr	r0, [r4, #48]	; 0x30
   1cab8:	ldr	r1, [r4, #56]	; 0x38
   1cabc:	ldr	r2, [r4, #80]	; 0x50
   1cac0:	sub	r0, r0, r5
   1cac4:	cmp	r2, #2
   1cac8:	sub	r1, r1, r5
   1cacc:	str	r0, [r4, #48]	; 0x30
   1cad0:	str	r1, [r4, #56]	; 0x38
   1cad4:	blt	1caf8 <__mempcpy_chk@plt+0xb518>
   1cad8:	ldrb	r0, [r4, #72]	; 0x48
   1cadc:	cmp	r0, #0
   1cae0:	beq	1cb0c <__mempcpy_chk@plt+0xb52c>
   1cae4:	mov	r0, r4
   1cae8:	bl	17b48 <__mempcpy_chk@plt+0x6568>
   1caec:	cmp	r0, #0
   1caf0:	bne	1cb1c <__mempcpy_chk@plt+0xb53c>
   1caf4:	b	1cb14 <__mempcpy_chk@plt+0xb534>
   1caf8:	ldrb	r1, [r4, #75]	; 0x4b
   1cafc:	cmp	r1, #0
   1cb00:	bne	1ce2c <__mempcpy_chk@plt+0xb84c>
   1cb04:	str	r0, [r4, #28]
   1cb08:	b	1cb14 <__mempcpy_chk@plt+0xb534>
   1cb0c:	mov	r0, r4
   1cb10:	bl	18184 <__mempcpy_chk@plt+0x6ba4>
   1cb14:	mov	r0, #0
   1cb18:	str	r0, [r4, #40]	; 0x28
   1cb1c:	sub	sp, fp, #28
   1cb20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb24:	sub	r5, r9, r0
   1cb28:	b	1ca20 <__mempcpy_chk@plt+0xb440>
   1cb2c:	ldrb	r2, [r4, #76]	; 0x4c
   1cb30:	ldr	lr, [r4, #28]
   1cb34:	cmp	r2, #0
   1cb38:	bne	1cf8c <__mempcpy_chk@plt+0xb9ac>
   1cb3c:	mov	r2, #0
   1cb40:	str	r2, [r4, #28]
   1cb44:	ldr	r3, [r4, #80]	; 0x50
   1cb48:	cmp	r3, #2
   1cb4c:	blt	1ce44 <__mempcpy_chk@plt+0xb864>
   1cb50:	ldrb	r2, [r4, #73]	; 0x49
   1cb54:	cmp	r2, #0
   1cb58:	beq	1cc14 <__mempcpy_chk@plt+0xb634>
   1cb5c:	ldr	r7, [r4]
   1cb60:	sub	r3, r5, r3
   1cb64:	add	ip, r7, r0
   1cb68:	add	r3, ip, r3
   1cb6c:	add	r8, ip, r5
   1cb70:	cmp	r3, r7
   1cb74:	movcc	r3, r7
   1cb78:	mov	r7, r8
   1cb7c:	sub	r7, r7, #1
   1cb80:	cmp	r7, r3
   1cb84:	bcc	1cc14 <__mempcpy_chk@plt+0xb634>
   1cb88:	ldrb	r2, [r7]
   1cb8c:	and	r2, r2, #192	; 0xc0
   1cb90:	cmp	r2, #128	; 0x80
   1cb94:	beq	1cb7c <__mempcpy_chk@plt+0xb59c>
   1cb98:	ldr	r0, [r4, #48]	; 0x30
   1cb9c:	mov	sl, lr
   1cba0:	mov	r1, r7
   1cba4:	add	r0, ip, r0
   1cba8:	sub	r2, r0, r7
   1cbac:	ldr	r0, [r4, #64]	; 0x40
   1cbb0:	cmp	r0, #0
   1cbb4:	bne	1d028 <__mempcpy_chk@plt+0xba48>
   1cbb8:	mov	r0, #0
   1cbbc:	add	r3, sp, #24
   1cbc0:	str	r0, [sp, #28]
   1cbc4:	str	r0, [sp, #24]
   1cbc8:	add	r0, sp, #20
   1cbcc:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   1cbd0:	sub	r1, r8, r7
   1cbd4:	mvn	r2, #0
   1cbd8:	cmp	r0, r1
   1cbdc:	bcc	1cc00 <__mempcpy_chk@plt+0xb620>
   1cbe0:	cmn	r0, #3
   1cbe4:	bhi	1cc00 <__mempcpy_chk@plt+0xb620>
   1cbe8:	mov	r2, #0
   1cbec:	sub	r0, r0, r1
   1cbf0:	str	r2, [r4, #16]
   1cbf4:	str	r2, [r4, #20]
   1cbf8:	str	r0, [r4, #28]
   1cbfc:	ldr	r2, [sp, #20]
   1cc00:	cmn	r2, #1
   1cc04:	bne	1cefc <__mempcpy_chk@plt+0xb91c>
   1cc08:	ldr	r0, [r4, #24]
   1cc0c:	ldr	r1, [r4, #32]
   1cc10:	mov	lr, sl
   1cc14:	add	r8, r1, r0
   1cc18:	cmp	r8, r9
   1cc1c:	bge	1cedc <__mempcpy_chk@plt+0xb8fc>
   1cc20:	add	sl, r4, #16
   1cc24:	str	lr, [sp]
   1cc28:	ldr	r0, [r4]
   1cc2c:	ldr	r2, [r4, #44]	; 0x2c
   1cc30:	mov	r3, sl
   1cc34:	add	r1, r0, r8
   1cc38:	ldr	r0, [sl]
   1cc3c:	sub	r7, r2, r8
   1cc40:	mov	r2, r7
   1cc44:	str	r0, [sp, #8]
   1cc48:	ldr	r0, [sl, #4]
   1cc4c:	str	r0, [sp, #4]
   1cc50:	add	r0, sp, #24
   1cc54:	bl	21dec <__mempcpy_chk@plt+0x1080c>
   1cc58:	sub	r1, r0, #1
   1cc5c:	cmn	r1, #3
   1cc60:	bcs	1cc78 <__mempcpy_chk@plt+0xb698>
   1cc64:	ldr	r2, [sp, #24]
   1cc68:	add	r8, r0, r8
   1cc6c:	cmp	r8, r9
   1cc70:	blt	1cc28 <__mempcpy_chk@plt+0xb648>
   1cc74:	b	1cee8 <__mempcpy_chk@plt+0xb908>
   1cc78:	ldr	r3, [sp, #4]
   1cc7c:	ldr	r1, [sp, #8]
   1cc80:	cmp	r7, #0
   1cc84:	mov	r2, #0
   1cc88:	cmpne	r0, #0
   1cc8c:	beq	1cc98 <__mempcpy_chk@plt+0xb6b8>
   1cc90:	ldr	r0, [r4]
   1cc94:	ldrb	r2, [r0, r8]
   1cc98:	stm	sl, {r1, r3}
   1cc9c:	mov	r0, #1
   1cca0:	b	1cc68 <__mempcpy_chk@plt+0xb688>
   1cca4:	ldr	r8, [r4, #28]
   1cca8:	ldr	sl, [r4, #12]
   1ccac:	mov	r0, #0
   1ccb0:	mov	r1, r8
   1ccb4:	add	r2, r0, r1
   1ccb8:	add	r2, r2, r2, lsr #31
   1ccbc:	asr	r7, r2, #1
   1ccc0:	ldr	r2, [sl, r7, lsl #2]
   1ccc4:	mov	r3, r7
   1ccc8:	cmp	r2, r5
   1cccc:	bgt	1ccdc <__mempcpy_chk@plt+0xb6fc>
   1ccd0:	bge	1cce8 <__mempcpy_chk@plt+0xb708>
   1ccd4:	add	r0, r7, #1
   1ccd8:	mov	r3, r1
   1ccdc:	cmp	r0, r3
   1cce0:	mov	r1, r3
   1cce4:	blt	1ccb4 <__mempcpy_chk@plt+0xb6d4>
   1cce8:	cmp	r2, r5
   1ccec:	mov	r0, r4
   1ccf0:	mov	r2, r6
   1ccf4:	addlt	r7, r7, #1
   1ccf8:	sub	r1, r7, #1
   1ccfc:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1cd00:	cmp	r8, r5
   1cd04:	str	r0, [r4, #60]	; 0x3c
   1cd08:	ble	1cdac <__mempcpy_chk@plt+0xb7cc>
   1cd0c:	cmp	r7, r5
   1cd10:	bne	1cdac <__mempcpy_chk@plt+0xb7cc>
   1cd14:	ldr	r0, [sl, r5, lsl #2]
   1cd18:	cmp	r0, r5
   1cd1c:	bne	1cdac <__mempcpy_chk@plt+0xb7cc>
   1cd20:	ldr	r0, [r4, #8]
   1cd24:	sub	r2, r8, r5
   1cd28:	lsl	r2, r2, #2
   1cd2c:	add	r1, r0, r5, lsl #2
   1cd30:	bl	1131c <memmove@plt>
   1cd34:	ldr	r2, [r4, #28]
   1cd38:	ldr	r0, [r4, #4]
   1cd3c:	add	r1, r0, r5
   1cd40:	sub	r2, r2, r5
   1cd44:	bl	1131c <memmove@plt>
   1cd48:	ldr	r0, [r4, #28]
   1cd4c:	ldr	r1, [r4, #32]
   1cd50:	sub	r0, r0, r5
   1cd54:	sub	r1, r1, r5
   1cd58:	cmp	r0, #1
   1cd5c:	str	r0, [r4, #28]
   1cd60:	str	r1, [r4, #32]
   1cd64:	blt	1ca9c <__mempcpy_chk@plt+0xb4bc>
   1cd68:	ldr	r0, [r4, #12]
   1cd6c:	mov	r2, #0
   1cd70:	add	r1, r0, r5, lsl #2
   1cd74:	ldr	r3, [r1, r2, lsl #2]
   1cd78:	sub	r3, r3, r5
   1cd7c:	str	r3, [r0, r2, lsl #2]
   1cd80:	add	r2, r2, #1
   1cd84:	ldr	r3, [r4, #28]
   1cd88:	cmp	r2, r3
   1cd8c:	blt	1cd74 <__mempcpy_chk@plt+0xb794>
   1cd90:	b	1ca9c <__mempcpy_chk@plt+0xb4bc>
   1cd94:	ldr	r2, [r4, #28]
   1cd98:	ldr	r0, [r4, #4]
   1cd9c:	add	r1, r0, r5
   1cda0:	sub	r2, r2, r5
   1cda4:	bl	1131c <memmove@plt>
   1cda8:	b	1ca84 <__mempcpy_chk@plt+0xb4a4>
   1cdac:	mov	r0, #0
   1cdb0:	strb	r0, [r4, #76]	; 0x4c
   1cdb4:	sub	r0, r5, r9
   1cdb8:	ldr	r1, [r4, #44]	; 0x2c
   1cdbc:	ldr	r2, [r4, #52]	; 0x34
   1cdc0:	add	r1, r0, r1
   1cdc4:	add	r0, r0, r2
   1cdc8:	str	r1, [r4, #48]	; 0x30
   1cdcc:	sub	r1, sl, #4
   1cdd0:	str	r0, [r4, #56]	; 0x38
   1cdd4:	mov	r0, r7
   1cdd8:	cmp	r7, #1
   1cddc:	blt	1cdf0 <__mempcpy_chk@plt+0xb810>
   1cde0:	ldr	r2, [r1, r0, lsl #2]
   1cde4:	sub	r7, r0, #1
   1cde8:	cmp	r2, r5
   1cdec:	beq	1cdd4 <__mempcpy_chk@plt+0xb7f4>
   1cdf0:	cmp	r0, r8
   1cdf4:	bge	1ce18 <__mempcpy_chk@plt+0xb838>
   1cdf8:	ldr	r1, [r4, #8]
   1cdfc:	ldr	r2, [r1, r0, lsl #2]
   1ce00:	cmn	r2, #1
   1ce04:	bne	1ce18 <__mempcpy_chk@plt+0xb838>
   1ce08:	add	r0, r0, #1
   1ce0c:	cmp	r8, r0
   1ce10:	bne	1cdfc <__mempcpy_chk@plt+0xb81c>
   1ce14:	b	1ce20 <__mempcpy_chk@plt+0xb840>
   1ce18:	cmp	r0, r8
   1ce1c:	bne	1ce90 <__mempcpy_chk@plt+0xb8b0>
   1ce20:	mov	r0, #0
   1ce24:	str	r0, [r4, #28]
   1ce28:	b	1cf50 <__mempcpy_chk@plt+0xb970>
   1ce2c:	ldrb	r0, [r4, #72]	; 0x48
   1ce30:	cmp	r0, #0
   1ce34:	beq	1cf58 <__mempcpy_chk@plt+0xb978>
   1ce38:	mov	r0, r4
   1ce3c:	bl	18118 <__mempcpy_chk@plt+0x6b38>
   1ce40:	b	1cb14 <__mempcpy_chk@plt+0xb534>
   1ce44:	ldr	r3, [r4]
   1ce48:	add	r0, r5, r0
   1ce4c:	ldr	r1, [r4, #64]	; 0x40
   1ce50:	add	r0, r0, r3
   1ce54:	cmp	r1, #0
   1ce58:	ldrb	r0, [r0, #-1]
   1ce5c:	str	r2, [r4, #32]
   1ce60:	ldrbne	r0, [r1, r0]
   1ce64:	ldr	r1, [r4, #68]	; 0x44
   1ce68:	ubfx	r2, r0, #5, #3
   1ce6c:	and	r3, r0, #31
   1ce70:	ldr	r2, [r1, r2, lsl #2]
   1ce74:	mov	r1, #1
   1ce78:	tst	r2, r1, lsl r3
   1ce7c:	moveq	r1, #0
   1ce80:	cmpeq	r0, #10
   1ce84:	beq	1cf78 <__mempcpy_chk@plt+0xb998>
   1ce88:	str	r1, [r4, #60]	; 0x3c
   1ce8c:	b	1ca9c <__mempcpy_chk@plt+0xb4bc>
   1ce90:	ldr	r0, [sl, r0, lsl #2]
   1ce94:	subs	r2, r0, r5
   1ce98:	str	r2, [r4, #28]
   1ce9c:	beq	1cf70 <__mempcpy_chk@plt+0xb990>
   1cea0:	cmp	r2, #1
   1cea4:	blt	1cec8 <__mempcpy_chk@plt+0xb8e8>
   1cea8:	ldr	r0, [r4, #8]
   1ceac:	mov	r1, #0
   1ceb0:	mvn	r3, #0
   1ceb4:	str	r3, [r0, r1, lsl #2]
   1ceb8:	add	r1, r1, #1
   1cebc:	ldr	r2, [r4, #28]
   1cec0:	cmp	r1, r2
   1cec4:	blt	1ceb4 <__mempcpy_chk@plt+0xb8d4>
   1cec8:	ldr	r0, [r4, #4]
   1cecc:	mov	r1, #255	; 0xff
   1ced0:	bl	114f0 <memset@plt>
   1ced4:	ldr	r0, [r4, #28]
   1ced8:	b	1cf50 <__mempcpy_chk@plt+0xb970>
   1cedc:	sub	r7, r8, r9
   1cee0:	str	r7, [r4, #28]
   1cee4:	b	1cf30 <__mempcpy_chk@plt+0xb950>
   1cee8:	ldr	lr, [sp]
   1ceec:	sub	r7, r8, r9
   1cef0:	cmn	r2, #1
   1cef4:	str	r7, [r4, #28]
   1cef8:	beq	1cf30 <__mempcpy_chk@plt+0xb950>
   1cefc:	ldrb	r0, [r4, #78]	; 0x4e
   1cf00:	cmp	r0, #0
   1cf04:	bne	1cff8 <__mempcpy_chk@plt+0xba18>
   1cf08:	mov	r1, #0
   1cf0c:	cmp	r2, #10
   1cf10:	bne	1cf24 <__mempcpy_chk@plt+0xb944>
   1cf14:	ldrb	r0, [r4, #77]	; 0x4d
   1cf18:	cmp	r0, #0
   1cf1c:	movwne	r0, #1
   1cf20:	lsl	r1, r0, #1
   1cf24:	str	r1, [r4, #60]	; 0x3c
   1cf28:	ldr	r7, [r4, #28]
   1cf2c:	b	1cf44 <__mempcpy_chk@plt+0xb964>
   1cf30:	sub	r1, lr, #1
   1cf34:	mov	r0, r4
   1cf38:	mov	r2, r6
   1cf3c:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1cf40:	str	r0, [r4, #60]	; 0x3c
   1cf44:	mov	r0, #0
   1cf48:	cmp	r7, #0
   1cf4c:	bne	1cfb4 <__mempcpy_chk@plt+0xb9d4>
   1cf50:	str	r0, [r4, #32]
   1cf54:	b	1ca9c <__mempcpy_chk@plt+0xb4bc>
   1cf58:	ldr	r0, [r4, #64]	; 0x40
   1cf5c:	cmp	r0, #0
   1cf60:	beq	1cb14 <__mempcpy_chk@plt+0xb534>
   1cf64:	mov	r0, r4
   1cf68:	bl	18370 <__mempcpy_chk@plt+0x6d90>
   1cf6c:	b	1cb14 <__mempcpy_chk@plt+0xb534>
   1cf70:	mov	r0, #0
   1cf74:	b	1cf50 <__mempcpy_chk@plt+0xb970>
   1cf78:	ldrb	r0, [r4, #77]	; 0x4d
   1cf7c:	cmp	r0, #0
   1cf80:	movwne	r0, #1
   1cf84:	lsl	r1, r0, #1
   1cf88:	b	1ce88 <__mempcpy_chk@plt+0xb8a8>
   1cf8c:	mov	r2, #0
   1cf90:	strb	r2, [r4, #76]	; 0x4c
   1cf94:	sub	r2, r5, r9
   1cf98:	ldr	r3, [r4, #44]	; 0x2c
   1cf9c:	ldr	r7, [r4, #52]	; 0x34
   1cfa0:	add	r3, r2, r3
   1cfa4:	add	r2, r2, r7
   1cfa8:	str	r3, [r4, #48]	; 0x30
   1cfac:	str	r2, [r4, #56]	; 0x38
   1cfb0:	b	1cb3c <__mempcpy_chk@plt+0xb55c>
   1cfb4:	cmp	r7, #1
   1cfb8:	blt	1cfdc <__mempcpy_chk@plt+0xb9fc>
   1cfbc:	ldr	r0, [r4, #8]
   1cfc0:	mov	r1, #0
   1cfc4:	mvn	r2, #0
   1cfc8:	str	r2, [r0, r1, lsl #2]
   1cfcc:	add	r1, r1, #1
   1cfd0:	ldr	r7, [r4, #28]
   1cfd4:	cmp	r1, r7
   1cfd8:	blt	1cfc8 <__mempcpy_chk@plt+0xb9e8>
   1cfdc:	ldrb	r0, [r4, #75]	; 0x4b
   1cfe0:	cmp	r0, #0
   1cfe4:	beq	1d020 <__mempcpy_chk@plt+0xba40>
   1cfe8:	ldr	r0, [r4, #4]
   1cfec:	mov	r1, #255	; 0xff
   1cff0:	mov	r2, r7
   1cff4:	b	1ced0 <__mempcpy_chk@plt+0xb8f0>
   1cff8:	mov	r0, r2
   1cffc:	mov	r6, r2
   1d000:	bl	114d8 <iswalnum@plt>
   1d004:	mov	r1, #1
   1d008:	cmp	r6, #95	; 0x5f
   1d00c:	beq	1cf24 <__mempcpy_chk@plt+0xb944>
   1d010:	mov	r2, r6
   1d014:	cmp	r0, #0
   1d018:	beq	1cf08 <__mempcpy_chk@plt+0xb928>
   1d01c:	b	1cf24 <__mempcpy_chk@plt+0xb944>
   1d020:	mov	r0, r7
   1d024:	b	1cf50 <__mempcpy_chk@plt+0xb970>
   1d028:	cmp	r2, #1
   1d02c:	blt	1d064 <__mempcpy_chk@plt+0xba84>
   1d030:	cmp	r2, #6
   1d034:	mov	r1, r2
   1d038:	movge	r1, #6
   1d03c:	sub	ip, r1, #1
   1d040:	add	r1, sp, #14
   1d044:	ldrb	r3, [r7, ip]
   1d048:	cmp	ip, #0
   1d04c:	ldrb	r3, [r0, r3]
   1d050:	strb	r3, [r1, ip]
   1d054:	sub	r3, ip, #1
   1d058:	mov	ip, r3
   1d05c:	bgt	1d044 <__mempcpy_chk@plt+0xba64>
   1d060:	b	1cbb8 <__mempcpy_chk@plt+0xb5d8>
   1d064:	add	r1, sp, #14
   1d068:	b	1cbb8 <__mempcpy_chk@plt+0xb5d8>
   1d06c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d070:	add	fp, sp, #24
   1d074:	mov	r3, r2
   1d078:	ldr	r2, [r0, #88]	; 0x58
   1d07c:	mov	r5, r1
   1d080:	mov	r4, r0
   1d084:	mov	r1, r3
   1d088:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1d08c:	ldr	r1, [r5, #8]
   1d090:	cmp	r1, #1
   1d094:	blt	1d124 <__mempcpy_chk@plt+0xbb44>
   1d098:	and	ip, r0, #8
   1d09c:	and	lr, r0, #2
   1d0a0:	and	r2, r0, #1
   1d0a4:	ldr	r0, [r4, #84]	; 0x54
   1d0a8:	ldr	r5, [r5, #12]
   1d0ac:	movw	r8, #65280	; 0xff00
   1d0b0:	mov	r3, #0
   1d0b4:	movt	r8, #3
   1d0b8:	ldr	r4, [r0]
   1d0bc:	ldr	r0, [r5, r3, lsl #2]
   1d0c0:	add	r7, r4, r0, lsl #3
   1d0c4:	ldr	r7, [r7, #4]
   1d0c8:	uxtb	r6, r7
   1d0cc:	cmp	r6, #2
   1d0d0:	bne	1d118 <__mempcpy_chk@plt+0xbb38>
   1d0d4:	tst	r7, r8
   1d0d8:	beq	1d128 <__mempcpy_chk@plt+0xbb48>
   1d0dc:	cmp	r2, #0
   1d0e0:	bne	1d0ec <__mempcpy_chk@plt+0xbb0c>
   1d0e4:	ands	r6, r7, #1024	; 0x400
   1d0e8:	bne	1d118 <__mempcpy_chk@plt+0xbb38>
   1d0ec:	cmp	r2, #0
   1d0f0:	andsne	r6, r7, #2048	; 0x800
   1d0f4:	bne	1d118 <__mempcpy_chk@plt+0xbb38>
   1d0f8:	cmp	lr, #0
   1d0fc:	bne	1d108 <__mempcpy_chk@plt+0xbb28>
   1d100:	ands	r6, r7, #8192	; 0x2000
   1d104:	bne	1d118 <__mempcpy_chk@plt+0xbb38>
   1d108:	cmp	ip, #0
   1d10c:	bne	1d128 <__mempcpy_chk@plt+0xbb48>
   1d110:	ands	r6, r7, #32768	; 0x8000
   1d114:	beq	1d128 <__mempcpy_chk@plt+0xbb48>
   1d118:	add	r3, r3, #1
   1d11c:	cmp	r3, r1
   1d120:	blt	1d0bc <__mempcpy_chk@plt+0xbadc>
   1d124:	mov	r0, #0
   1d128:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d12c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d130:	add	fp, sp, #24
   1d134:	mov	r8, r0
   1d138:	ldr	r0, [r0, #124]	; 0x7c
   1d13c:	cmp	r0, #1
   1d140:	blt	1d1c4 <__mempcpy_chk@plt+0xbbe4>
   1d144:	mov	r7, #0
   1d148:	ldr	r0, [r8, #132]	; 0x84
   1d14c:	ldr	r5, [r0, r7, lsl #2]
   1d150:	ldr	r0, [r5, #16]
   1d154:	cmp	r0, #1
   1d158:	blt	1d188 <__mempcpy_chk@plt+0xbba8>
   1d15c:	mov	r4, #0
   1d160:	ldr	r0, [r5, #20]
   1d164:	ldr	r6, [r0, r4, lsl #2]
   1d168:	ldr	r0, [r6, #16]
   1d16c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d170:	mov	r0, r6
   1d174:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d178:	ldr	r0, [r5, #16]
   1d17c:	add	r4, r4, #1
   1d180:	cmp	r4, r0
   1d184:	blt	1d160 <__mempcpy_chk@plt+0xbb80>
   1d188:	ldr	r0, [r5, #20]
   1d18c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d190:	ldr	r0, [r5, #8]
   1d194:	cmp	r0, #0
   1d198:	beq	1d1ac <__mempcpy_chk@plt+0xbbcc>
   1d19c:	ldr	r0, [r0, #8]
   1d1a0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d1a4:	ldr	r0, [r5, #8]
   1d1a8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d1ac:	mov	r0, r5
   1d1b0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d1b4:	ldr	r0, [r8, #124]	; 0x7c
   1d1b8:	add	r7, r7, #1
   1d1bc:	cmp	r7, r0
   1d1c0:	blt	1d148 <__mempcpy_chk@plt+0xbb68>
   1d1c4:	mov	r0, #0
   1d1c8:	str	r0, [r8, #108]	; 0x6c
   1d1cc:	str	r0, [r8, #124]	; 0x7c
   1d1d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d1d4:	push	{r4, r5, fp, lr}
   1d1d8:	add	fp, sp, #8
   1d1dc:	mov	r4, r0
   1d1e0:	cmn	r1, #1
   1d1e4:	ble	1d21c <__mempcpy_chk@plt+0xbc3c>
   1d1e8:	ldr	r0, [r4, #48]	; 0x30
   1d1ec:	cmp	r0, r1
   1d1f0:	beq	1d280 <__mempcpy_chk@plt+0xbca0>
   1d1f4:	ldr	r0, [r4, #80]	; 0x50
   1d1f8:	cmp	r0, #2
   1d1fc:	blt	1d224 <__mempcpy_chk@plt+0xbc44>
   1d200:	ldr	r0, [r4, #8]
   1d204:	ldr	r5, [r0, r1, lsl #2]
   1d208:	cmn	r5, #1
   1d20c:	bne	1d254 <__mempcpy_chk@plt+0xbc74>
   1d210:	sub	r1, r1, #1
   1d214:	cmn	r1, #1
   1d218:	bne	1d204 <__mempcpy_chk@plt+0xbc24>
   1d21c:	ldr	r0, [r4, #60]	; 0x3c
   1d220:	pop	{r4, r5, fp, pc}
   1d224:	ldr	r0, [r4, #4]
   1d228:	ldr	r2, [r4, #68]	; 0x44
   1d22c:	ldrb	r1, [r0, r1]
   1d230:	ubfx	r0, r1, #5, #3
   1d234:	and	r3, r1, #31
   1d238:	ldr	r2, [r2, r0, lsl #2]
   1d23c:	mov	r0, #1
   1d240:	tst	r2, r0, lsl r3
   1d244:	moveq	r0, #0
   1d248:	cmpeq	r1, #10
   1d24c:	bne	1d27c <__mempcpy_chk@plt+0xbc9c>
   1d250:	b	1d26c <__mempcpy_chk@plt+0xbc8c>
   1d254:	ldrb	r0, [r4, #78]	; 0x4e
   1d258:	cmp	r0, #0
   1d25c:	bne	1d28c <__mempcpy_chk@plt+0xbcac>
   1d260:	mov	r0, #0
   1d264:	cmp	r5, #10
   1d268:	popne	{r4, r5, fp, pc}
   1d26c:	ldrb	r0, [r4, #77]	; 0x4d
   1d270:	cmp	r0, #0
   1d274:	movwne	r0, #1
   1d278:	lsl	r0, r0, #1
   1d27c:	pop	{r4, r5, fp, pc}
   1d280:	and	r0, r2, #2
   1d284:	eor	r0, r0, #10
   1d288:	pop	{r4, r5, fp, pc}
   1d28c:	mov	r0, r5
   1d290:	bl	114d8 <iswalnum@plt>
   1d294:	mov	r1, r0
   1d298:	mov	r0, #1
   1d29c:	cmp	r5, #95	; 0x5f
   1d2a0:	beq	1d27c <__mempcpy_chk@plt+0xbc9c>
   1d2a4:	cmp	r1, #0
   1d2a8:	beq	1d260 <__mempcpy_chk@plt+0xbc80>
   1d2ac:	b	1d27c <__mempcpy_chk@plt+0xbc9c>
   1d2b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2b4:	add	fp, sp, #28
   1d2b8:	sub	sp, sp, #4
   1d2bc:	mov	sl, r0
   1d2c0:	ldr	r0, [r1, #4]
   1d2c4:	cmp	r0, #1
   1d2c8:	blt	1d394 <__mempcpy_chk@plt+0xbdb4>
   1d2cc:	ldr	r7, [sl, #84]	; 0x54
   1d2d0:	mov	r8, r2
   1d2d4:	mov	r5, r1
   1d2d8:	mov	r4, #0
   1d2dc:	ldr	r1, [r5, #8]
   1d2e0:	ldr	r6, [r1, r4, lsl #2]
   1d2e4:	ldr	r1, [r7]
   1d2e8:	add	r2, r1, r6, lsl #3
   1d2ec:	ldrb	r2, [r2, #4]
   1d2f0:	cmp	r2, #8
   1d2f4:	bne	1d360 <__mempcpy_chk@plt+0xbd80>
   1d2f8:	ldr	r1, [r1, r6, lsl #3]
   1d2fc:	cmp	r1, #31
   1d300:	bgt	1d360 <__mempcpy_chk@plt+0xbd80>
   1d304:	ldr	r2, [r7, #80]	; 0x50
   1d308:	mov	r3, #1
   1d30c:	tst	r2, r3, lsl r1
   1d310:	beq	1d360 <__mempcpy_chk@plt+0xbd80>
   1d314:	ldr	r0, [sl, #124]	; 0x7c
   1d318:	ldr	r9, [sl, #128]	; 0x80
   1d31c:	cmp	r0, r9
   1d320:	beq	1d370 <__mempcpy_chk@plt+0xbd90>
   1d324:	mov	r0, #1
   1d328:	mov	r1, #24
   1d32c:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1d330:	ldr	r1, [sl, #124]	; 0x7c
   1d334:	ldr	r2, [sl, #132]	; 0x84
   1d338:	str	r0, [r2, r1, lsl #2]
   1d33c:	ldr	r0, [sl, #132]	; 0x84
   1d340:	ldr	r0, [r0, r1, lsl #2]
   1d344:	cmp	r0, #0
   1d348:	beq	1d3a0 <__mempcpy_chk@plt+0xbdc0>
   1d34c:	add	r1, r1, #1
   1d350:	str	r6, [r0, #4]
   1d354:	str	r1, [sl, #124]	; 0x7c
   1d358:	str	r8, [r0]
   1d35c:	ldr	r0, [r5, #4]
   1d360:	add	r4, r4, #1
   1d364:	cmp	r4, r0
   1d368:	blt	1d2dc <__mempcpy_chk@plt+0xbcfc>
   1d36c:	b	1d394 <__mempcpy_chk@plt+0xbdb4>
   1d370:	ldr	r0, [sl, #132]	; 0x84
   1d374:	lsl	r1, r9, #3
   1d378:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1d37c:	cmp	r0, #0
   1d380:	beq	1d3a0 <__mempcpy_chk@plt+0xbdc0>
   1d384:	lsl	r1, r9, #1
   1d388:	str	r1, [sl, #128]	; 0x80
   1d38c:	str	r0, [sl, #132]	; 0x84
   1d390:	b	1d324 <__mempcpy_chk@plt+0xbd44>
   1d394:	mov	r0, #0
   1d398:	sub	sp, fp, #28
   1d39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d3a0:	mov	r0, #12
   1d3a4:	b	1d398 <__mempcpy_chk@plt+0xbdb8>
   1d3a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3ac:	add	fp, sp, #28
   1d3b0:	sub	sp, sp, #76	; 0x4c
   1d3b4:	mov	r7, r0
   1d3b8:	ldr	r0, [r1, #4]
   1d3bc:	cmp	r0, #1
   1d3c0:	blt	1da74 <__mempcpy_chk@plt+0xc494>
   1d3c4:	ldr	r2, [r7, #84]	; 0x54
   1d3c8:	ldr	r0, [r7, #40]	; 0x28
   1d3cc:	mov	r3, #0
   1d3d0:	str	r7, [sp, #40]	; 0x28
   1d3d4:	str	r1, [sp, #12]
   1d3d8:	str	r0, [sp, #52]	; 0x34
   1d3dc:	str	r2, [sp, #24]
   1d3e0:	ldr	r0, [r1, #8]
   1d3e4:	str	r3, [sp, #20]
   1d3e8:	ldr	r3, [r0, r3, lsl #2]
   1d3ec:	ldr	r0, [r2]
   1d3f0:	add	r0, r0, r3, lsl #3
   1d3f4:	mov	r1, r3
   1d3f8:	str	r3, [sp, #48]	; 0x30
   1d3fc:	ldr	r4, [r0, #4]
   1d400:	uxtb	r0, r4
   1d404:	cmp	r0, #4
   1d408:	bne	1da58 <__mempcpy_chk@plt+0xc478>
   1d40c:	movw	r0, #65280	; 0xff00
   1d410:	movt	r0, #3
   1d414:	tst	r4, r0
   1d418:	beq	1d46c <__mempcpy_chk@plt+0xbe8c>
   1d41c:	ldr	r2, [r7, #88]	; 0x58
   1d420:	ldr	r1, [sp, #52]	; 0x34
   1d424:	mov	r0, r7
   1d428:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1d42c:	and	r1, r0, #1
   1d430:	tst	r4, #1024	; 0x400
   1d434:	beq	1d440 <__mempcpy_chk@plt+0xbe60>
   1d438:	cmp	r1, #0
   1d43c:	beq	1da58 <__mempcpy_chk@plt+0xc478>
   1d440:	tst	r4, #2048	; 0x800
   1d444:	cmpne	r1, #0
   1d448:	bne	1da58 <__mempcpy_chk@plt+0xc478>
   1d44c:	tst	r4, #8192	; 0x2000
   1d450:	beq	1d45c <__mempcpy_chk@plt+0xbe7c>
   1d454:	ands	r1, r0, #2
   1d458:	beq	1da58 <__mempcpy_chk@plt+0xc478>
   1d45c:	tst	r4, #32768	; 0x8000
   1d460:	beq	1d46c <__mempcpy_chk@plt+0xbe8c>
   1d464:	ands	r0, r0, #8
   1d468:	beq	1da58 <__mempcpy_chk@plt+0xc478>
   1d46c:	ldr	r0, [r7, #84]	; 0x54
   1d470:	ldr	r1, [sp, #52]	; 0x34
   1d474:	ldr	r4, [r7, #4]
   1d478:	ldr	r8, [r7, #108]	; 0x6c
   1d47c:	str	r0, [sp, #36]	; 0x24
   1d480:	mov	r0, r7
   1d484:	bl	1dee8 <__mempcpy_chk@plt+0xc908>
   1d488:	cmn	r0, #1
   1d48c:	beq	1d4bc <__mempcpy_chk@plt+0xbedc>
   1d490:	ldr	r1, [r7, #116]	; 0x74
   1d494:	add	r0, r0, r0, lsl #1
   1d498:	add	r0, r1, r0, lsl #3
   1d49c:	ldr	r1, [r0]
   1d4a0:	ldr	r2, [sp, #48]	; 0x30
   1d4a4:	cmp	r1, r2
   1d4a8:	beq	1d848 <__mempcpy_chk@plt+0xc268>
   1d4ac:	ldrb	r1, [r0, #20]
   1d4b0:	add	r0, r0, #24
   1d4b4:	cmp	r1, #0
   1d4b8:	bne	1d49c <__mempcpy_chk@plt+0xbebc>
   1d4bc:	ldr	r0, [r7, #124]	; 0x7c
   1d4c0:	cmp	r0, #1
   1d4c4:	mov	r0, r8
   1d4c8:	blt	1d84c <__mempcpy_chk@plt+0xc26c>
   1d4cc:	ldr	r0, [sp, #36]	; 0x24
   1d4d0:	ldr	r1, [sp, #48]	; 0x30
   1d4d4:	mov	r3, #0
   1d4d8:	mov	ip, r4
   1d4dc:	str	r8, [sp, #16]
   1d4e0:	ldr	r0, [r0]
   1d4e4:	ldr	r2, [r0, r1, lsl #3]
   1d4e8:	str	r2, [sp, #32]
   1d4ec:	ldr	r1, [r7, #132]	; 0x84
   1d4f0:	str	r3, [sp, #28]
   1d4f4:	ldr	r4, [r1, r3, lsl #2]
   1d4f8:	ldr	r1, [r4, #4]
   1d4fc:	ldr	r0, [r0, r1, lsl #3]
   1d500:	cmp	r0, r2
   1d504:	bne	1d614 <__mempcpy_chk@plt+0xc034>
   1d508:	ldr	r0, [r4, #16]
   1d50c:	ldr	r2, [r4]
   1d510:	mov	r8, #0
   1d514:	str	r4, [sp, #44]	; 0x2c
   1d518:	cmp	r0, #1
   1d51c:	blt	1d5e4 <__mempcpy_chk@plt+0xc004>
   1d520:	ldr	r6, [sp, #52]	; 0x34
   1d524:	mov	r5, r2
   1d528:	ldr	r1, [r4, #20]
   1d52c:	ldr	sl, [r1, r8, lsl #2]
   1d530:	ldr	r1, [sl, #4]
   1d534:	sub	r9, r1, r5
   1d538:	str	r1, [fp, #-48]	; 0xffffffd0
   1d53c:	cmp	r9, #1
   1d540:	blt	1d578 <__mempcpy_chk@plt+0xbf98>
   1d544:	ldr	r2, [r7, #28]
   1d548:	add	r1, r9, r6
   1d54c:	cmp	r1, r2
   1d550:	bgt	1d5c0 <__mempcpy_chk@plt+0xbfe0>
   1d554:	add	r0, ip, r6
   1d558:	add	r1, ip, r5
   1d55c:	mov	r2, r9
   1d560:	mov	r4, ip
   1d564:	bl	114b4 <bcmp@plt>
   1d568:	mov	ip, r4
   1d56c:	ldr	r4, [sp, #44]	; 0x2c
   1d570:	cmp	r0, #0
   1d574:	bne	1d5ec <__mempcpy_chk@plt+0xc00c>
   1d578:	ldr	r0, [sp, #52]	; 0x34
   1d57c:	ldr	r3, [sp, #48]	; 0x30
   1d580:	mov	r1, r4
   1d584:	mov	r2, sl
   1d588:	str	r0, [sp]
   1d58c:	mov	r0, r7
   1d590:	bl	1e004 <__mempcpy_chk@plt+0xca24>
   1d594:	cmp	r0, #1
   1d598:	bhi	1da84 <__mempcpy_chk@plt+0xc4a4>
   1d59c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d5a0:	ldr	r0, [r4, #16]
   1d5a4:	ldr	ip, [r7, #4]
   1d5a8:	add	r8, r8, #1
   1d5ac:	add	r6, r9, r6
   1d5b0:	cmp	r8, r0
   1d5b4:	mov	r5, r2
   1d5b8:	blt	1d528 <__mempcpy_chk@plt+0xbf48>
   1d5bc:	b	1d5f4 <__mempcpy_chk@plt+0xc014>
   1d5c0:	ldr	r2, [r7, #48]	; 0x30
   1d5c4:	cmp	r1, r2
   1d5c8:	bgt	1d5f0 <__mempcpy_chk@plt+0xc010>
   1d5cc:	mov	r0, r7
   1d5d0:	bl	1df70 <__mempcpy_chk@plt+0xc990>
   1d5d4:	cmp	r0, #0
   1d5d8:	bne	1da84 <__mempcpy_chk@plt+0xc4a4>
   1d5dc:	ldr	ip, [r7, #4]
   1d5e0:	b	1d554 <__mempcpy_chk@plt+0xbf74>
   1d5e4:	ldr	r6, [sp, #52]	; 0x34
   1d5e8:	b	1d5f4 <__mempcpy_chk@plt+0xc014>
   1d5ec:	ldr	r0, [r4, #16]
   1d5f0:	mov	r2, r5
   1d5f4:	cmp	r8, r0
   1d5f8:	blt	1d610 <__mempcpy_chk@plt+0xc030>
   1d5fc:	ldr	r0, [sp, #52]	; 0x34
   1d600:	cmp	r8, #0
   1d604:	addne	r2, r2, #1
   1d608:	cmp	r2, r0
   1d60c:	ble	1d638 <__mempcpy_chk@plt+0xc058>
   1d610:	ldr	r8, [sp, #16]
   1d614:	ldr	r3, [sp, #28]
   1d618:	ldr	r0, [r7, #124]	; 0x7c
   1d61c:	add	r3, r3, #1
   1d620:	cmp	r3, r0
   1d624:	bge	1d840 <__mempcpy_chk@plt+0xc260>
   1d628:	ldr	r0, [sp, #36]	; 0x24
   1d62c:	ldr	r2, [sp, #32]
   1d630:	ldr	r0, [r0]
   1d634:	b	1d4ec <__mempcpy_chk@plt+0xbf0c>
   1d638:	ldr	r8, [sp, #16]
   1d63c:	ldr	r0, [r4]
   1d640:	mov	sl, r2
   1d644:	cmp	r2, r0
   1d648:	ble	1d674 <__mempcpy_chk@plt+0xc094>
   1d64c:	ldr	r0, [r7, #28]
   1d650:	cmp	r6, r0
   1d654:	bge	1d7e0 <__mempcpy_chk@plt+0xc200>
   1d658:	add	r5, r6, #1
   1d65c:	add	r1, sl, ip
   1d660:	ldrb	r0, [ip, r6]
   1d664:	ldrb	r1, [r1, #-1]
   1d668:	cmp	r0, r1
   1d66c:	beq	1d678 <__mempcpy_chk@plt+0xc098>
   1d670:	b	1d614 <__mempcpy_chk@plt+0xc034>
   1d674:	mov	r5, r6
   1d678:	ldr	r0, [r7, #100]	; 0x64
   1d67c:	mov	r6, r5
   1d680:	ldr	r2, [r0, sl, lsl #2]
   1d684:	cmp	r2, #0
   1d688:	beq	1d6d4 <__mempcpy_chk@plt+0xc0f4>
   1d68c:	ldr	r0, [r2, #8]
   1d690:	cmp	r0, #1
   1d694:	blt	1d6d4 <__mempcpy_chk@plt+0xc0f4>
   1d698:	ldr	r1, [sp, #36]	; 0x24
   1d69c:	ldr	r2, [r2, #12]
   1d6a0:	ldr	r7, [sp, #32]
   1d6a4:	ldr	r1, [r1]
   1d6a8:	ldr	r5, [r2]
   1d6ac:	add	r3, r1, r5, lsl #3
   1d6b0:	ldrb	r3, [r3, #4]
   1d6b4:	cmp	r3, #9
   1d6b8:	bne	1d6c8 <__mempcpy_chk@plt+0xc0e8>
   1d6bc:	ldr	r3, [r1, r5, lsl #3]
   1d6c0:	cmp	r3, r7
   1d6c4:	beq	1d6ec <__mempcpy_chk@plt+0xc10c>
   1d6c8:	add	r2, r2, #4
   1d6cc:	subs	r0, r0, #1
   1d6d0:	bne	1d6a8 <__mempcpy_chk@plt+0xc0c8>
   1d6d4:	ldr	r0, [sp, #52]	; 0x34
   1d6d8:	ldr	r7, [sp, #40]	; 0x28
   1d6dc:	add	r2, sl, #1
   1d6e0:	cmp	sl, r0
   1d6e4:	blt	1d63c <__mempcpy_chk@plt+0xc05c>
   1d6e8:	b	1d614 <__mempcpy_chk@plt+0xc034>
   1d6ec:	cmn	r5, #1
   1d6f0:	beq	1d6d4 <__mempcpy_chk@plt+0xc0f4>
   1d6f4:	ldr	r1, [r4, #8]
   1d6f8:	mov	r9, r6
   1d6fc:	mov	r6, ip
   1d700:	cmp	r1, #0
   1d704:	bne	1d734 <__mempcpy_chk@plt+0xc154>
   1d708:	ldr	r0, [r4]
   1d70c:	mov	r7, #12
   1d710:	sub	r0, sl, r0
   1d714:	add	r1, r0, #1
   1d718:	mov	r0, #12
   1d71c:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1d720:	ldr	r4, [sp, #44]	; 0x2c
   1d724:	mov	r1, r0
   1d728:	cmp	r0, #0
   1d72c:	str	r0, [r4, #8]
   1d730:	beq	1da88 <__mempcpy_chk@plt+0xc4a8>
   1d734:	mov	r0, #9
   1d738:	ldr	r3, [r4]
   1d73c:	ldr	r2, [r4, #4]
   1d740:	stm	sp, {r5, sl}
   1d744:	str	r0, [sp, #8]
   1d748:	ldr	r0, [sp, #40]	; 0x28
   1d74c:	bl	1e154 <__mempcpy_chk@plt+0xcb74>
   1d750:	ldr	r4, [sp, #44]	; 0x2c
   1d754:	mov	ip, r6
   1d758:	cmp	r0, #1
   1d75c:	mov	r6, r9
   1d760:	beq	1d6d4 <__mempcpy_chk@plt+0xc0f4>
   1d764:	cmp	r0, #0
   1d768:	bne	1da84 <__mempcpy_chk@plt+0xc4a4>
   1d76c:	ldr	r1, [r4, #12]
   1d770:	ldr	r0, [r4, #16]
   1d774:	ldr	r7, [sp, #40]	; 0x28
   1d778:	cmp	r0, r1
   1d77c:	beq	1d818 <__mempcpy_chk@plt+0xc238>
   1d780:	mov	r0, #1
   1d784:	mov	r1, #20
   1d788:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1d78c:	cmp	r0, #0
   1d790:	beq	1daac <__mempcpy_chk@plt+0xc4cc>
   1d794:	ldr	r1, [sp, #44]	; 0x2c
   1d798:	mov	r2, r0
   1d79c:	ldr	r0, [r1, #16]
   1d7a0:	ldr	r3, [r1, #20]
   1d7a4:	str	r2, [r3, r0, lsl #2]
   1d7a8:	add	r0, r0, #1
   1d7ac:	stm	r2, {r5, sl}
   1d7b0:	ldr	r3, [sp, #48]	; 0x30
   1d7b4:	str	r0, [r1, #16]
   1d7b8:	ldr	r0, [sp, #52]	; 0x34
   1d7bc:	str	r0, [sp]
   1d7c0:	mov	r0, r7
   1d7c4:	bl	1e004 <__mempcpy_chk@plt+0xca24>
   1d7c8:	cmp	r0, #1
   1d7cc:	bhi	1da84 <__mempcpy_chk@plt+0xc4a4>
   1d7d0:	ldr	ip, [r7, #4]
   1d7d4:	ldr	r4, [sp, #44]	; 0x2c
   1d7d8:	mov	r6, r9
   1d7dc:	b	1d6d4 <__mempcpy_chk@plt+0xc0f4>
   1d7e0:	ldr	r0, [r7, #48]	; 0x30
   1d7e4:	cmp	r6, r0
   1d7e8:	bge	1d614 <__mempcpy_chk@plt+0xc034>
   1d7ec:	add	r5, r6, #1
   1d7f0:	mov	r0, r7
   1d7f4:	mov	r9, r6
   1d7f8:	mov	r1, r5
   1d7fc:	bl	1dab4 <__mempcpy_chk@plt+0xc4d4>
   1d800:	cmp	r0, #0
   1d804:	bne	1da84 <__mempcpy_chk@plt+0xc4a4>
   1d808:	ldr	ip, [r7, #4]
   1d80c:	ldr	r4, [sp, #44]	; 0x2c
   1d810:	mov	r6, r9
   1d814:	b	1d65c <__mempcpy_chk@plt+0xc07c>
   1d818:	mov	r1, #1
   1d81c:	orr	r6, r1, r0, lsl #1
   1d820:	ldr	r0, [r4, #20]
   1d824:	lsl	r1, r6, #2
   1d828:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1d82c:	cmp	r0, #0
   1d830:	beq	1daac <__mempcpy_chk@plt+0xc4cc>
   1d834:	str	r6, [r4, #12]
   1d838:	str	r0, [r4, #20]
   1d83c:	b	1d780 <__mempcpy_chk@plt+0xc1a0>
   1d840:	ldr	r0, [r7, #108]	; 0x6c
   1d844:	b	1d84c <__mempcpy_chk@plt+0xc26c>
   1d848:	mov	r0, r8
   1d84c:	mov	r1, #0
   1d850:	cmp	r8, r0
   1d854:	str	r1, [fp, #-32]	; 0xffffffe0
   1d858:	bge	1da58 <__mempcpy_chk@plt+0xc478>
   1d85c:	add	r0, r8, r8, lsl #1
   1d860:	lsl	r4, r0, #3
   1d864:	ldr	r0, [r7, #116]	; 0x74
   1d868:	ldr	r2, [sp, #48]	; 0x30
   1d86c:	ldr	r1, [r0, r4]
   1d870:	cmp	r1, r2
   1d874:	bne	1da40 <__mempcpy_chk@plt+0xc460>
   1d878:	add	r0, r0, r4
   1d87c:	ldr	r2, [sp, #52]	; 0x34
   1d880:	ldr	r1, [r0, #4]
   1d884:	cmp	r1, r2
   1d888:	bne	1da40 <__mempcpy_chk@plt+0xc460>
   1d88c:	ldr	r2, [r0, #8]
   1d890:	ldr	r3, [r0, #12]
   1d894:	ldr	r0, [sp, #24]
   1d898:	mov	r9, r8
   1d89c:	ldr	r6, [r0, #24]
   1d8a0:	cmp	r3, r2
   1d8a4:	bne	1d8c0 <__mempcpy_chk@plt+0xc2e0>
   1d8a8:	ldr	r1, [sp, #48]	; 0x30
   1d8ac:	ldr	r0, [r0, #20]
   1d8b0:	add	r1, r1, r1, lsl #1
   1d8b4:	add	r0, r0, r1, lsl #2
   1d8b8:	ldr	r0, [r0, #8]
   1d8bc:	b	1d8cc <__mempcpy_chk@plt+0xc2ec>
   1d8c0:	ldr	r0, [r0, #12]
   1d8c4:	ldr	r1, [sp, #48]	; 0x30
   1d8c8:	add	r0, r0, r1, lsl #2
   1d8cc:	ldr	r0, [r0]
   1d8d0:	ldr	r8, [sp, #52]	; 0x34
   1d8d4:	ldr	r5, [sp, #40]	; 0x28
   1d8d8:	str	r2, [fp, #-48]	; 0xffffffd0
   1d8dc:	str	r3, [sp, #44]	; 0x2c
   1d8e0:	add	r7, r0, r0, lsl #1
   1d8e4:	add	r0, r3, r8
   1d8e8:	sub	sl, r0, r2
   1d8ec:	ldr	r2, [r5, #88]	; 0x58
   1d8f0:	mov	r0, r5
   1d8f4:	sub	r1, sl, #1
   1d8f8:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1d8fc:	mov	r3, r0
   1d900:	ldr	r0, [r5, #100]	; 0x64
   1d904:	ldr	r1, [r0, r8, lsl #2]
   1d908:	ldr	r2, [r0, sl, lsl #2]
   1d90c:	cmp	r1, #0
   1d910:	beq	1d91c <__mempcpy_chk@plt+0xc33c>
   1d914:	ldr	r0, [r1, #8]
   1d918:	b	1d920 <__mempcpy_chk@plt+0xc340>
   1d91c:	mov	r0, #0
   1d920:	add	r7, r6, r7, lsl #2
   1d924:	str	r0, [sp, #36]	; 0x24
   1d928:	sub	r0, fp, #44	; 0x2c
   1d92c:	cmp	r2, #0
   1d930:	mov	r8, r9
   1d934:	beq	1d9a0 <__mempcpy_chk@plt+0xc3c0>
   1d938:	ldr	r1, [r2, #40]	; 0x28
   1d93c:	mov	r2, r7
   1d940:	mov	r6, r3
   1d944:	mov	r5, r0
   1d948:	bl	1dce0 <__mempcpy_chk@plt+0xc700>
   1d94c:	cmp	r0, #0
   1d950:	str	r0, [fp, #-32]	; 0xffffffe0
   1d954:	bne	1da94 <__mempcpy_chk@plt+0xc4b4>
   1d958:	ldr	r1, [sp, #24]
   1d95c:	sub	r0, fp, #32
   1d960:	mov	r2, r5
   1d964:	mov	r3, r6
   1d968:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1d96c:	ldr	r5, [sp, #40]	; 0x28
   1d970:	ldr	r1, [r5, #100]	; 0x64
   1d974:	str	r0, [r1, sl, lsl #2]
   1d978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d97c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1d980:	ldr	r3, [r5, #100]	; 0x64
   1d984:	ldr	r1, [r3, sl, lsl #2]
   1d988:	cmp	r1, #0
   1d98c:	bne	1d9e0 <__mempcpy_chk@plt+0xc400>
   1d990:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d994:	cmp	r0, #0
   1d998:	beq	1d9e0 <__mempcpy_chk@plt+0xc400>
   1d99c:	b	1da7c <__mempcpy_chk@plt+0xc49c>
   1d9a0:	ldr	r1, [sp, #24]
   1d9a4:	sub	r0, fp, #32
   1d9a8:	mov	r2, r7
   1d9ac:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1d9b0:	ldr	r1, [r5, #100]	; 0x64
   1d9b4:	str	r0, [r1, sl, lsl #2]
   1d9b8:	ldr	r3, [r5, #100]	; 0x64
   1d9bc:	ldr	r1, [r3, sl, lsl #2]
   1d9c0:	cmp	r1, #0
   1d9c4:	bne	1d9e0 <__mempcpy_chk@plt+0xc400>
   1d9c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d9cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1d9d0:	ldr	r2, [sp, #44]	; 0x2c
   1d9d4:	cmp	r0, #0
   1d9d8:	beq	1d9e8 <__mempcpy_chk@plt+0xc408>
   1d9dc:	b	1da7c <__mempcpy_chk@plt+0xc49c>
   1d9e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1d9e4:	ldr	r2, [sp, #44]	; 0x2c
   1d9e8:	cmp	r2, r1
   1d9ec:	bne	1da40 <__mempcpy_chk@plt+0xc460>
   1d9f0:	ldr	r1, [sp, #52]	; 0x34
   1d9f4:	ldr	r0, [r3, r1, lsl #2]
   1d9f8:	ldr	r1, [sp, #36]	; 0x24
   1d9fc:	ldr	r0, [r0, #8]
   1da00:	cmp	r0, r1
   1da04:	ble	1da40 <__mempcpy_chk@plt+0xc460>
   1da08:	ldr	r5, [sp, #40]	; 0x28
   1da0c:	ldr	r2, [sp, #52]	; 0x34
   1da10:	mov	r1, r7
   1da14:	mov	r0, r5
   1da18:	bl	1d2b0 <__mempcpy_chk@plt+0xbcd0>
   1da1c:	cmp	r0, #0
   1da20:	str	r0, [fp, #-32]	; 0xffffffe0
   1da24:	bne	1da7c <__mempcpy_chk@plt+0xc49c>
   1da28:	mov	r0, r5
   1da2c:	mov	r1, r7
   1da30:	bl	1d3a8 <__mempcpy_chk@plt+0xbdc8>
   1da34:	cmp	r0, #0
   1da38:	str	r0, [fp, #-32]	; 0xffffffe0
   1da3c:	bne	1da7c <__mempcpy_chk@plt+0xc49c>
   1da40:	ldr	r7, [sp, #40]	; 0x28
   1da44:	add	r8, r8, #1
   1da48:	add	r4, r4, #24
   1da4c:	ldr	r0, [r7, #108]	; 0x6c
   1da50:	cmp	r8, r0
   1da54:	blt	1d864 <__mempcpy_chk@plt+0xc284>
   1da58:	ldr	r1, [sp, #12]
   1da5c:	ldr	r3, [sp, #20]
   1da60:	ldr	r2, [sp, #24]
   1da64:	ldr	r0, [r1, #4]
   1da68:	add	r3, r3, #1
   1da6c:	cmp	r3, r0
   1da70:	blt	1d3e0 <__mempcpy_chk@plt+0xbe00>
   1da74:	mov	r0, #0
   1da78:	str	r0, [fp, #-32]	; 0xffffffe0
   1da7c:	sub	sp, fp, #28
   1da80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da84:	mov	r7, r0
   1da88:	str	r7, [fp, #-32]	; 0xffffffe0
   1da8c:	mov	r0, r7
   1da90:	b	1da7c <__mempcpy_chk@plt+0xc49c>
   1da94:	mov	r1, r0
   1da98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1da9c:	mov	r4, r1
   1daa0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1daa4:	mov	r0, r4
   1daa8:	b	1da7c <__mempcpy_chk@plt+0xc49c>
   1daac:	mov	r7, #12
   1dab0:	b	1da88 <__mempcpy_chk@plt+0xc4a8>
   1dab4:	push	{r4, r5, fp, lr}
   1dab8:	add	fp, sp, #8
   1dabc:	mov	r4, r0
   1dac0:	ldr	r0, [r0, #36]	; 0x24
   1dac4:	mov	r5, #12
   1dac8:	cmn	r0, #-536870910	; 0xe0000002
   1dacc:	bhi	1db84 <__mempcpy_chk@plt+0xc5a4>
   1dad0:	ldr	r2, [r4, #48]	; 0x30
   1dad4:	cmp	r2, r0, lsl #1
   1dad8:	lslge	r2, r0, #1
   1dadc:	mov	r0, r4
   1dae0:	cmp	r2, r1
   1dae4:	movle	r2, r1
   1dae8:	mov	r1, r2
   1daec:	bl	17aa8 <__mempcpy_chk@plt+0x64c8>
   1daf0:	cmp	r0, #0
   1daf4:	bne	1db48 <__mempcpy_chk@plt+0xc568>
   1daf8:	ldr	r0, [r4, #100]	; 0x64
   1dafc:	cmp	r0, #0
   1db00:	beq	1db20 <__mempcpy_chk@plt+0xc540>
   1db04:	ldr	r1, [r4, #36]	; 0x24
   1db08:	mov	r2, #4
   1db0c:	add	r1, r2, r1, lsl #2
   1db10:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1db14:	cmp	r0, #0
   1db18:	beq	1db84 <__mempcpy_chk@plt+0xc5a4>
   1db1c:	str	r0, [r4, #100]	; 0x64
   1db20:	ldrb	r1, [r4, #72]	; 0x48
   1db24:	ldr	r0, [r4, #80]	; 0x50
   1db28:	cmp	r1, #0
   1db2c:	beq	1db50 <__mempcpy_chk@plt+0xc570>
   1db30:	cmp	r0, #2
   1db34:	blt	1db64 <__mempcpy_chk@plt+0xc584>
   1db38:	mov	r0, r4
   1db3c:	bl	17b48 <__mempcpy_chk@plt+0x6568>
   1db40:	cmp	r0, #0
   1db44:	beq	1db80 <__mempcpy_chk@plt+0xc5a0>
   1db48:	mov	r5, r0
   1db4c:	b	1db84 <__mempcpy_chk@plt+0xc5a4>
   1db50:	cmp	r0, #2
   1db54:	blt	1db70 <__mempcpy_chk@plt+0xc590>
   1db58:	mov	r0, r4
   1db5c:	bl	18184 <__mempcpy_chk@plt+0x6ba4>
   1db60:	b	1db80 <__mempcpy_chk@plt+0xc5a0>
   1db64:	mov	r0, r4
   1db68:	bl	18118 <__mempcpy_chk@plt+0x6b38>
   1db6c:	b	1db80 <__mempcpy_chk@plt+0xc5a0>
   1db70:	ldr	r0, [r4, #64]	; 0x40
   1db74:	cmp	r0, #0
   1db78:	movne	r0, r4
   1db7c:	blne	18370 <__mempcpy_chk@plt+0x6d90>
   1db80:	mov	r5, #0
   1db84:	mov	r0, r5
   1db88:	pop	{r4, r5, fp, pc}
   1db8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1db90:	add	fp, sp, #24
   1db94:	sub	sp, sp, #16
   1db98:	mov	r8, r0
   1db9c:	mov	r4, r1
   1dba0:	ldr	r5, [r1, #40]	; 0x28
   1dba4:	ldr	r7, [r1, #84]	; 0x54
   1dba8:	ldr	r0, [r1, #100]	; 0x64
   1dbac:	ldr	r1, [r1, #104]	; 0x68
   1dbb0:	mov	r6, r2
   1dbb4:	cmp	r5, r1
   1dbb8:	ble	1dbc8 <__mempcpy_chk@plt+0xc5e8>
   1dbbc:	str	r6, [r0, r5, lsl #2]
   1dbc0:	str	r5, [r4, #104]	; 0x68
   1dbc4:	b	1dc6c <__mempcpy_chk@plt+0xc68c>
   1dbc8:	ldr	r1, [r0, r5, lsl #2]
   1dbcc:	cmp	r1, #0
   1dbd0:	beq	1dc0c <__mempcpy_chk@plt+0xc62c>
   1dbd4:	ldr	r2, [r1, #40]	; 0x28
   1dbd8:	cmp	r6, #0
   1dbdc:	beq	1dc14 <__mempcpy_chk@plt+0xc634>
   1dbe0:	ldr	r6, [r6, #40]	; 0x28
   1dbe4:	mov	r0, sp
   1dbe8:	mov	r1, r6
   1dbec:	bl	1dce0 <__mempcpy_chk@plt+0xc700>
   1dbf0:	cmp	r0, #0
   1dbf4:	str	r0, [r8]
   1dbf8:	bne	1dcd8 <__mempcpy_chk@plt+0xc6f8>
   1dbfc:	ldr	r0, [r4, #40]	; 0x28
   1dc00:	clz	r1, r6
   1dc04:	lsr	r9, r1, #5
   1dc08:	b	1dc2c <__mempcpy_chk@plt+0xc64c>
   1dc0c:	str	r6, [r0, r5, lsl #2]
   1dc10:	b	1dc6c <__mempcpy_chk@plt+0xc68c>
   1dc14:	vldr	d16, [r2]
   1dc18:	ldr	r0, [r2, #8]
   1dc1c:	mov	r9, #1
   1dc20:	str	r0, [sp, #8]
   1dc24:	mov	r0, r5
   1dc28:	vstr	d16, [sp]
   1dc2c:	ldr	r2, [r4, #88]	; 0x58
   1dc30:	sub	r1, r0, #1
   1dc34:	mov	r0, r4
   1dc38:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1dc3c:	mov	r3, r0
   1dc40:	mov	r2, sp
   1dc44:	mov	r0, r8
   1dc48:	mov	r1, r7
   1dc4c:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1dc50:	mov	r6, r0
   1dc54:	ldr	r0, [r4, #100]	; 0x64
   1dc58:	cmp	r9, #0
   1dc5c:	str	r6, [r0, r5, lsl #2]
   1dc60:	bne	1dc6c <__mempcpy_chk@plt+0xc68c>
   1dc64:	ldr	r0, [sp, #8]
   1dc68:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1dc6c:	cmp	r6, #0
   1dc70:	ldrne	r0, [r7, #76]	; 0x4c
   1dc74:	cmpne	r0, #0
   1dc78:	bne	1dc88 <__mempcpy_chk@plt+0xc6a8>
   1dc7c:	mov	r0, r6
   1dc80:	sub	sp, fp, #24
   1dc84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1dc88:	add	r7, r6, #4
   1dc8c:	mov	r0, r4
   1dc90:	mov	r2, r5
   1dc94:	mov	r1, r7
   1dc98:	bl	1d2b0 <__mempcpy_chk@plt+0xbcd0>
   1dc9c:	cmp	r0, #0
   1dca0:	str	r0, [r8]
   1dca4:	bne	1dcd8 <__mempcpy_chk@plt+0xc6f8>
   1dca8:	ldrb	r0, [r6, #52]	; 0x34
   1dcac:	tst	r0, #64	; 0x40
   1dcb0:	beq	1dc7c <__mempcpy_chk@plt+0xc69c>
   1dcb4:	mov	r0, r4
   1dcb8:	mov	r1, r7
   1dcbc:	bl	1d3a8 <__mempcpy_chk@plt+0xbdc8>
   1dcc0:	str	r0, [r8]
   1dcc4:	cmp	r0, #0
   1dcc8:	mov	r6, #0
   1dccc:	ldreq	r0, [r4, #100]	; 0x64
   1dcd0:	ldreq	r6, [r0, r5, lsl #2]
   1dcd4:	b	1dc7c <__mempcpy_chk@plt+0xc69c>
   1dcd8:	mov	r6, #0
   1dcdc:	b	1dc7c <__mempcpy_chk@plt+0xc69c>
   1dce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dce4:	add	fp, sp, #28
   1dce8:	sub	sp, sp, #20
   1dcec:	mov	r8, r2
   1dcf0:	cmp	r1, #0
   1dcf4:	str	r0, [sp, #16]
   1dcf8:	beq	1de34 <__mempcpy_chk@plt+0xc854>
   1dcfc:	ldr	r0, [r1, #4]
   1dd00:	mov	r6, r1
   1dd04:	cmp	r8, #0
   1dd08:	beq	1de20 <__mempcpy_chk@plt+0xc840>
   1dd0c:	cmp	r0, #1
   1dd10:	blt	1de20 <__mempcpy_chk@plt+0xc840>
   1dd14:	ldr	r1, [r8, #4]
   1dd18:	cmp	r1, #1
   1dd1c:	blt	1de20 <__mempcpy_chk@plt+0xc840>
   1dd20:	ldr	r4, [sp, #16]
   1dd24:	add	r0, r1, r0
   1dd28:	str	r0, [r4]
   1dd2c:	lsl	r0, r0, #2
   1dd30:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1dd34:	cmp	r0, #0
   1dd38:	str	r0, [r4, #8]
   1dd3c:	beq	1dee0 <__mempcpy_chk@plt+0xc900>
   1dd40:	ldr	r9, [r8, #4]
   1dd44:	ldr	lr, [r6, #4]
   1dd48:	mov	r7, #0
   1dd4c:	mov	r1, #0
   1dd50:	cmp	r9, #0
   1dd54:	movwgt	r1, #1
   1dd58:	cmp	lr, #1
   1dd5c:	blt	1de74 <__mempcpy_chk@plt+0xc894>
   1dd60:	mov	r2, #0
   1dd64:	mov	ip, #0
   1dd68:	str	r2, [sp, #8]
   1dd6c:	mov	r2, #0
   1dd70:	str	r2, [sp, #12]
   1dd74:	mov	r2, #0
   1dd78:	ldr	r4, [sp, #12]
   1dd7c:	mov	r7, ip
   1dd80:	tst	r1, #1
   1dd84:	beq	1dea4 <__mempcpy_chk@plt+0xc8c4>
   1dd88:	ldr	r1, [r8, #8]
   1dd8c:	ldr	r3, [r1, r7, lsl #2]
   1dd90:	ldr	r1, [r6, #8]
   1dd94:	ldr	sl, [r1, r2, lsl #2]
   1dd98:	cmp	sl, r3
   1dd9c:	ble	1ddc4 <__mempcpy_chk@plt+0xc7e4>
   1dda0:	add	r7, r7, #1
   1dda4:	str	r3, [r0, r4, lsl #2]
   1dda8:	mov	r1, #0
   1ddac:	add	r4, r4, #1
   1ddb0:	cmp	r9, r7
   1ddb4:	movwgt	r1, #1
   1ddb8:	cmp	lr, r2
   1ddbc:	bgt	1dd80 <__mempcpy_chk@plt+0xc7a0>
   1ddc0:	b	1de78 <__mempcpy_chk@plt+0xc898>
   1ddc4:	add	r1, r7, #1
   1ddc8:	str	sl, [r0, r4, lsl #2]
   1ddcc:	mov	ip, r7
   1ddd0:	add	r2, r2, #1
   1ddd4:	str	r1, [sp, #4]
   1ddd8:	ldr	r9, [r8, #4]
   1dddc:	ldr	lr, [r6, #4]
   1dde0:	moveq	ip, r1
   1dde4:	mov	r1, #0
   1dde8:	ldr	r5, [sp, #8]
   1ddec:	cmp	r9, ip
   1ddf0:	sub	r5, r5, #1
   1ddf4:	movwgt	r1, #1
   1ddf8:	cmp	lr, r2
   1ddfc:	str	r5, [sp, #8]
   1de00:	add	r5, r4, #1
   1de04:	str	r5, [sp, #12]
   1de08:	bgt	1dd78 <__mempcpy_chk@plt+0xc798>
   1de0c:	ldr	r2, [sp, #4]
   1de10:	cmp	sl, r3
   1de14:	add	r4, r4, #1
   1de18:	moveq	r7, r2
   1de1c:	b	1de78 <__mempcpy_chk@plt+0xc898>
   1de20:	cmp	r0, #1
   1de24:	blt	1de34 <__mempcpy_chk@plt+0xc854>
   1de28:	ldr	r0, [sp, #16]
   1de2c:	mov	r1, r6
   1de30:	b	1de50 <__mempcpy_chk@plt+0xc870>
   1de34:	cmp	r8, #0
   1de38:	beq	1de5c <__mempcpy_chk@plt+0xc87c>
   1de3c:	ldr	r0, [r8, #4]
   1de40:	cmp	r0, #1
   1de44:	blt	1de5c <__mempcpy_chk@plt+0xc87c>
   1de48:	ldr	r0, [sp, #16]
   1de4c:	mov	r1, r8
   1de50:	sub	sp, fp, #28
   1de54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de58:	b	1c478 <__mempcpy_chk@plt+0xae98>
   1de5c:	ldr	r1, [sp, #16]
   1de60:	mov	r0, #0
   1de64:	str	r0, [r1]
   1de68:	str	r0, [r1, #4]
   1de6c:	str	r0, [r1, #8]
   1de70:	b	1ded8 <__mempcpy_chk@plt+0xc8f8>
   1de74:	mov	r4, #0
   1de78:	cmp	r1, #0
   1de7c:	beq	1decc <__mempcpy_chk@plt+0xc8ec>
   1de80:	ldr	r1, [r8, #8]
   1de84:	sub	r2, r9, r7
   1de88:	add	r0, r0, r4, lsl #2
   1de8c:	lsl	r2, r2, #2
   1de90:	add	r1, r1, r7, lsl #2
   1de94:	bl	1134c <memcpy@plt>
   1de98:	sub	r0, r4, r7
   1de9c:	add	r4, r0, r9
   1dea0:	b	1decc <__mempcpy_chk@plt+0xc8ec>
   1dea4:	ldr	r1, [r6, #8]
   1dea8:	add	r0, r0, r4, lsl #2
   1deac:	add	r1, r1, r2, lsl #2
   1deb0:	sub	r2, lr, r2
   1deb4:	lsl	r2, r2, #2
   1deb8:	bl	1134c <memcpy@plt>
   1debc:	ldr	r0, [r6, #4]
   1dec0:	ldr	r1, [sp, #8]
   1dec4:	add	r0, r0, r1
   1dec8:	add	r4, r0, r4
   1decc:	ldr	r0, [sp, #16]
   1ded0:	str	r4, [r0, #4]
   1ded4:	mov	r0, #0
   1ded8:	sub	sp, fp, #28
   1dedc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dee0:	mov	r0, #12
   1dee4:	b	1ded8 <__mempcpy_chk@plt+0xc8f8>
   1dee8:	push	{r4, r5, r6, r7, fp, lr}
   1deec:	add	fp, sp, #16
   1def0:	ldr	lr, [r0, #108]	; 0x6c
   1def4:	mov	ip, r0
   1def8:	cmp	lr, #1
   1defc:	blt	1df40 <__mempcpy_chk@plt+0xc960>
   1df00:	ldr	r2, [ip, #116]	; 0x74
   1df04:	mov	r0, #0
   1df08:	mov	r3, #1
   1df0c:	mov	r4, lr
   1df10:	add	r5, r0, r4
   1df14:	add	r5, r5, r5, lsr #31
   1df18:	asr	r6, r5, #1
   1df1c:	add	r7, r6, r6, lsl #1
   1df20:	add	r7, r2, r7, lsl #3
   1df24:	ldr	r7, [r7, #4]
   1df28:	cmp	r7, r1
   1df2c:	addlt	r0, r3, r5, asr #1
   1df30:	movge	r4, r6
   1df34:	cmp	r0, r4
   1df38:	blt	1df10 <__mempcpy_chk@plt+0xc930>
   1df3c:	b	1df44 <__mempcpy_chk@plt+0xc964>
   1df40:	mov	r0, #0
   1df44:	cmp	r0, lr
   1df48:	bge	1df68 <__mempcpy_chk@plt+0xc988>
   1df4c:	ldr	r2, [ip, #116]	; 0x74
   1df50:	add	r3, r0, r0, lsl #1
   1df54:	add	r2, r2, r3, lsl #3
   1df58:	ldr	r2, [r2, #4]
   1df5c:	cmp	r2, r1
   1df60:	mvnne	r0, #0
   1df64:	pop	{r4, r5, r6, r7, fp, pc}
   1df68:	mvn	r0, #0
   1df6c:	pop	{r4, r5, r6, r7, fp, pc}
   1df70:	push	{r4, r5, r6, r7, fp, lr}
   1df74:	add	fp, sp, #16
   1df78:	mov	r5, r0
   1df7c:	ldr	r0, [r0, #36]	; 0x24
   1df80:	mov	r4, r1
   1df84:	ldr	r7, [r5, #104]	; 0x68
   1df88:	cmp	r0, r1
   1df8c:	bgt	1df9c <__mempcpy_chk@plt+0xc9bc>
   1df90:	ldr	r1, [r5, #48]	; 0x30
   1df94:	cmp	r0, r1
   1df98:	blt	1dfb4 <__mempcpy_chk@plt+0xc9d4>
   1df9c:	ldr	r0, [r5, #28]
   1dfa0:	cmp	r0, r4
   1dfa4:	bgt	1dfcc <__mempcpy_chk@plt+0xc9ec>
   1dfa8:	ldr	r1, [r5, #48]	; 0x30
   1dfac:	cmp	r0, r1
   1dfb0:	bge	1dfcc <__mempcpy_chk@plt+0xc9ec>
   1dfb4:	add	r1, r4, #1
   1dfb8:	mov	r0, r5
   1dfbc:	bl	1dab4 <__mempcpy_chk@plt+0xc4d4>
   1dfc0:	mov	r6, r0
   1dfc4:	cmp	r0, #0
   1dfc8:	bne	1dffc <__mempcpy_chk@plt+0xca1c>
   1dfcc:	mov	r6, #0
   1dfd0:	cmp	r7, r4
   1dfd4:	bge	1dffc <__mempcpy_chk@plt+0xca1c>
   1dfd8:	sub	r0, r4, r7
   1dfdc:	mov	r1, #0
   1dfe0:	mov	r6, #0
   1dfe4:	lsl	r2, r0, #2
   1dfe8:	ldr	r0, [r5, #100]	; 0x64
   1dfec:	add	r0, r0, r7, lsl #2
   1dff0:	add	r0, r0, #4
   1dff4:	bl	114f0 <memset@plt>
   1dff8:	str	r4, [r5, #104]	; 0x68
   1dffc:	mov	r0, r6
   1e000:	pop	{r4, r5, r6, r7, fp, pc}
   1e004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e008:	add	fp, sp, #28
   1e00c:	sub	sp, sp, #12
   1e010:	mov	r6, r2
   1e014:	mov	r4, r0
   1e018:	mov	r0, #8
   1e01c:	mov	r7, r3
   1e020:	ldr	r2, [r2]
   1e024:	mov	r8, r1
   1e028:	ldr	r3, [r6, #4]
   1e02c:	str	r0, [sp, #8]
   1e030:	add	r1, r6, #8
   1e034:	mov	r0, r4
   1e038:	ldr	r5, [fp, #8]
   1e03c:	str	r7, [sp]
   1e040:	str	r5, [sp, #4]
   1e044:	bl	1e154 <__mempcpy_chk@plt+0xcb74>
   1e048:	cmp	r0, #0
   1e04c:	beq	1e058 <__mempcpy_chk@plt+0xca78>
   1e050:	sub	sp, fp, #28
   1e054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e058:	ldr	r0, [r4, #108]	; 0x6c
   1e05c:	ldr	r1, [r4, #112]	; 0x70
   1e060:	ldr	r9, [r6, #4]
   1e064:	ldr	sl, [r8]
   1e068:	cmp	r0, r1
   1e06c:	blt	1e0bc <__mempcpy_chk@plt+0xcadc>
   1e070:	ldr	r0, [r4, #116]	; 0x74
   1e074:	add	r1, r1, r1, lsl #1
   1e078:	lsl	r1, r1, #4
   1e07c:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1e080:	cmp	r0, #0
   1e084:	beq	1e144 <__mempcpy_chk@plt+0xcb64>
   1e088:	str	r0, [r4, #116]	; 0x74
   1e08c:	ldr	r1, [r4, #108]	; 0x6c
   1e090:	ldr	r2, [r4, #112]	; 0x70
   1e094:	add	r1, r1, r1, lsl #1
   1e098:	add	r0, r0, r1, lsl #3
   1e09c:	add	r1, r2, r2, lsl #1
   1e0a0:	lsl	r2, r1, #3
   1e0a4:	mov	r1, #0
   1e0a8:	bl	114f0 <memset@plt>
   1e0ac:	ldr	r1, [r4, #112]	; 0x70
   1e0b0:	ldr	r0, [r4, #108]	; 0x6c
   1e0b4:	lsl	r1, r1, #1
   1e0b8:	str	r1, [r4, #112]	; 0x70
   1e0bc:	ldr	r1, [r4, #116]	; 0x74
   1e0c0:	cmp	r0, #1
   1e0c4:	blt	1e0e4 <__mempcpy_chk@plt+0xcb04>
   1e0c8:	sub	r2, r0, #1
   1e0cc:	add	r2, r2, r2, lsl #1
   1e0d0:	add	r2, r1, r2, lsl #3
   1e0d4:	ldr	r3, [r2, #4]
   1e0d8:	cmp	r3, r5
   1e0dc:	moveq	r3, #1
   1e0e0:	strbeq	r3, [r2, #20]
   1e0e4:	add	r2, r0, r0, lsl #1
   1e0e8:	cmp	r9, sl
   1e0ec:	mov	r3, #0
   1e0f0:	mov	ip, #0
   1e0f4:	add	r0, r0, #1
   1e0f8:	mvneq	r3, #0
   1e0fc:	str	r7, [r1, r2, lsl #3]!
   1e100:	stmib	r1, {r5, sl}
   1e104:	str	r9, [r1, #12]
   1e108:	str	r3, [r1, #16]
   1e10c:	str	r0, [r4, #108]	; 0x6c
   1e110:	strb	ip, [r1, #20]
   1e114:	sub	r0, r9, sl
   1e118:	ldr	r1, [r4, #120]	; 0x78
   1e11c:	cmp	r1, r0
   1e120:	strlt	r0, [r4, #120]	; 0x78
   1e124:	ldr	r0, [r6, #4]
   1e128:	ldr	r1, [r8]
   1e12c:	add	r0, r0, r5
   1e130:	sub	r1, r0, r1
   1e134:	mov	r0, r4
   1e138:	sub	sp, fp, #28
   1e13c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e140:	b	1df70 <__mempcpy_chk@plt+0xc990>
   1e144:	ldr	r0, [r4, #116]	; 0x74
   1e148:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e14c:	mov	r0, #12
   1e150:	b	1e050 <__mempcpy_chk@plt+0xca70>
   1e154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e158:	add	fp, sp, #28
   1e15c:	sub	sp, sp, #84	; 0x54
   1e160:	ldr	sl, [r0, #84]	; 0x54
   1e164:	mov	r6, r3
   1e168:	mov	r3, r1
   1e16c:	mov	r1, #0
   1e170:	ldr	r5, [fp, #12]
   1e174:	mov	r8, r2
   1e178:	str	r0, [sp, #36]	; 0x24
   1e17c:	str	r1, [fp, #-52]	; 0xffffffcc
   1e180:	ldr	r4, [r3, #4]
   1e184:	ldr	r1, [sl]
   1e188:	str	sl, [sp, #20]
   1e18c:	ldr	r7, [r1, r2, lsl #3]
   1e190:	ldr	r1, [r0, #120]	; 0x78
   1e194:	add	r2, r1, r5
   1e198:	cmp	r4, r2
   1e19c:	str	r7, [sp, #24]
   1e1a0:	ble	1e65c <__mempcpy_chk@plt+0xd07c>
   1e1a4:	ldr	r1, [r0, #40]	; 0x28
   1e1a8:	ldr	r4, [r3]
   1e1ac:	ldr	r2, [r0, #88]	; 0x58
   1e1b0:	ldr	r9, [r3, #8]
   1e1b4:	str	r3, [sp, #16]
   1e1b8:	str	r1, [sp, #12]
   1e1bc:	ldr	r1, [r0, #100]	; 0x64
   1e1c0:	cmp	r4, #0
   1e1c4:	str	r9, [r0, #100]	; 0x64
   1e1c8:	moveq	r4, r6
   1e1cc:	str	r4, [r0, #40]	; 0x28
   1e1d0:	str	r1, [sp, #8]
   1e1d4:	sub	r1, r4, #1
   1e1d8:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1e1dc:	cmp	r4, r6
   1e1e0:	bne	1e2a8 <__mempcpy_chk@plt+0xccc8>
   1e1e4:	str	r0, [sp, #44]	; 0x2c
   1e1e8:	mov	r0, #1
   1e1ec:	str	r0, [sp, #52]	; 0x34
   1e1f0:	str	r0, [sp, #48]	; 0x30
   1e1f4:	mov	r0, #4
   1e1f8:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1e1fc:	cmp	r0, #0
   1e200:	str	r0, [sp, #56]	; 0x38
   1e204:	beq	1e6d8 <__mempcpy_chk@plt+0xd0f8>
   1e208:	ldr	r3, [fp, #16]
   1e20c:	str	r8, [r0]
   1e210:	mov	r0, #0
   1e214:	add	r1, sp, #48	; 0x30
   1e218:	mov	r2, r7
   1e21c:	str	r0, [fp, #-52]	; 0xffffffcc
   1e220:	mov	r0, sl
   1e224:	bl	1e6f8 <__mempcpy_chk@plt+0xd118>
   1e228:	ldr	r8, [sp, #36]	; 0x24
   1e22c:	cmp	r0, #0
   1e230:	mov	r9, r5
   1e234:	str	r0, [fp, #-52]	; 0xffffffcc
   1e238:	bne	1e6c8 <__mempcpy_chk@plt+0xd0e8>
   1e23c:	ldr	r0, [sp, #52]	; 0x34
   1e240:	cmp	r0, #0
   1e244:	beq	1e270 <__mempcpy_chk@plt+0xcc90>
   1e248:	ldr	r0, [fp, #16]
   1e24c:	ldr	r3, [sp, #24]
   1e250:	add	r1, sp, #48	; 0x30
   1e254:	mov	r2, r4
   1e258:	str	r0, [sp]
   1e25c:	mov	r0, r8
   1e260:	bl	1e828 <__mempcpy_chk@plt+0xd248>
   1e264:	cmp	r0, #0
   1e268:	str	r0, [fp, #-52]	; 0xffffffcc
   1e26c:	bne	1e6c8 <__mempcpy_chk@plt+0xd0e8>
   1e270:	ldr	r3, [sp, #44]	; 0x2c
   1e274:	sub	r0, fp, #52	; 0x34
   1e278:	add	r2, sp, #48	; 0x30
   1e27c:	mov	r1, sl
   1e280:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1e284:	mov	r6, r0
   1e288:	cmp	r0, #0
   1e28c:	bne	1e29c <__mempcpy_chk@plt+0xccbc>
   1e290:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e294:	cmp	r0, #0
   1e298:	bne	1e644 <__mempcpy_chk@plt+0xd064>
   1e29c:	ldr	r0, [r8, #100]	; 0x64
   1e2a0:	str	r6, [r0, r4, lsl #2]
   1e2a4:	b	1e320 <__mempcpy_chk@plt+0xcd40>
   1e2a8:	ldr	r6, [r9, r4, lsl #2]
   1e2ac:	cmp	r6, #0
   1e2b0:	beq	1e2dc <__mempcpy_chk@plt+0xccfc>
   1e2b4:	ldrb	r1, [r6, #52]	; 0x34
   1e2b8:	ldr	r8, [sp, #36]	; 0x24
   1e2bc:	mov	r9, r5
   1e2c0:	tst	r1, #64	; 0x40
   1e2c4:	bne	1e2f8 <__mempcpy_chk@plt+0xcd18>
   1e2c8:	mov	r0, #0
   1e2cc:	str	r0, [sp, #52]	; 0x34
   1e2d0:	str	r0, [sp, #48]	; 0x30
   1e2d4:	str	r0, [sp, #56]	; 0x38
   1e2d8:	b	1e320 <__mempcpy_chk@plt+0xcd40>
   1e2dc:	ldr	r8, [sp, #36]	; 0x24
   1e2e0:	mov	r6, #0
   1e2e4:	mov	r9, r5
   1e2e8:	str	r6, [sp, #52]	; 0x34
   1e2ec:	str	r6, [sp, #48]	; 0x30
   1e2f0:	str	r6, [sp, #56]	; 0x38
   1e2f4:	b	1e320 <__mempcpy_chk@plt+0xcd40>
   1e2f8:	str	r0, [sp, #44]	; 0x2c
   1e2fc:	add	r1, r6, #4
   1e300:	add	r0, sp, #48	; 0x30
   1e304:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   1e308:	cmp	r0, #0
   1e30c:	str	r0, [fp, #-52]	; 0xffffffcc
   1e310:	bne	1e6f0 <__mempcpy_chk@plt+0xd110>
   1e314:	ldrb	r0, [r6, #52]	; 0x34
   1e318:	tst	r0, #64	; 0x40
   1e31c:	bne	1e23c <__mempcpy_chk@plt+0xcc5c>
   1e320:	cmp	r4, r9
   1e324:	bge	1e5d8 <__mempcpy_chk@plt+0xcff8>
   1e328:	str	r4, [sp, #44]	; 0x2c
   1e32c:	ldr	r4, [sp, #24]
   1e330:	add	r5, sp, #48	; 0x30
   1e334:	mov	r1, #0
   1e338:	ldr	r0, [r8, #120]	; 0x78
   1e33c:	cmp	r1, r0
   1e340:	bgt	1e5d4 <__mempcpy_chk@plt+0xcff4>
   1e344:	mov	r0, #0
   1e348:	str	r1, [sp, #32]
   1e34c:	ldr	r1, [sp, #44]	; 0x2c
   1e350:	str	r0, [sp, #52]	; 0x34
   1e354:	ldr	r0, [r8, #100]	; 0x64
   1e358:	add	r7, r1, #1
   1e35c:	ldr	r0, [r0, r7, lsl #2]
   1e360:	cmp	r0, #0
   1e364:	beq	1e380 <__mempcpy_chk@plt+0xcda0>
   1e368:	add	r1, r0, #4
   1e36c:	mov	r0, r5
   1e370:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1e374:	cmp	r0, #0
   1e378:	str	r0, [fp, #-52]	; 0xffffffcc
   1e37c:	bne	1e644 <__mempcpy_chk@plt+0xd064>
   1e380:	cmp	r6, #0
   1e384:	beq	1e50c <__mempcpy_chk@plt+0xcf2c>
   1e388:	mov	r0, #0
   1e38c:	str	r7, [sp, #28]
   1e390:	ldr	r7, [r8, #84]	; 0x54
   1e394:	str	r0, [fp, #-32]	; 0xffffffe0
   1e398:	str	r0, [fp, #-44]	; 0xffffffd4
   1e39c:	str	r0, [fp, #-48]	; 0xffffffd0
   1e3a0:	str	r0, [fp, #-40]	; 0xffffffd8
   1e3a4:	ldr	r1, [r6, #20]
   1e3a8:	cmp	r1, #1
   1e3ac:	blt	1e4f8 <__mempcpy_chk@plt+0xcf18>
   1e3b0:	ldr	r4, [sp, #44]	; 0x2c
   1e3b4:	mov	r5, #0
   1e3b8:	str	r6, [sp, #40]	; 0x28
   1e3bc:	ldr	r0, [r6, #24]
   1e3c0:	ldr	sl, [r0, r5, lsl #2]
   1e3c4:	ldr	r0, [r7]
   1e3c8:	add	r1, r0, sl, lsl #3
   1e3cc:	ldrb	r1, [r1, #6]
   1e3d0:	tst	r1, #16
   1e3d4:	bne	1e3f4 <__mempcpy_chk@plt+0xce14>
   1e3d8:	add	r1, r0, sl, lsl #3
   1e3dc:	mov	r0, r8
   1e3e0:	mov	r2, r4
   1e3e4:	bl	1f0ec <__mempcpy_chk@plt+0xdb0c>
   1e3e8:	cmp	r0, #0
   1e3ec:	bne	1e4b0 <__mempcpy_chk@plt+0xced0>
   1e3f0:	b	1e4c8 <__mempcpy_chk@plt+0xcee8>
   1e3f4:	mov	r0, r7
   1e3f8:	mov	r1, sl
   1e3fc:	mov	r2, r8
   1e400:	mov	r3, r4
   1e404:	bl	1edf4 <__mempcpy_chk@plt+0xd814>
   1e408:	cmp	r0, #2
   1e40c:	blt	1e4a8 <__mempcpy_chk@plt+0xcec8>
   1e410:	add	r4, r0, r4
   1e414:	ldr	r0, [r8, #100]	; 0x64
   1e418:	ldr	r1, [r7, #12]
   1e41c:	sub	r8, fp, #48	; 0x30
   1e420:	ldr	r0, [r0, r4, lsl #2]
   1e424:	ldr	r6, [r1, sl, lsl #2]
   1e428:	mov	r1, #0
   1e42c:	str	r1, [fp, #-44]	; 0xffffffd4
   1e430:	cmp	r0, #0
   1e434:	beq	1e450 <__mempcpy_chk@plt+0xce70>
   1e438:	add	r1, r0, #4
   1e43c:	mov	r0, r8
   1e440:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1e444:	cmp	r0, #0
   1e448:	str	r0, [fp, #-32]	; 0xffffffe0
   1e44c:	bne	1e654 <__mempcpy_chk@plt+0xd074>
   1e450:	mov	r0, r8
   1e454:	mov	r1, r6
   1e458:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1e45c:	cmp	r0, #0
   1e460:	beq	1e634 <__mempcpy_chk@plt+0xd054>
   1e464:	sub	r0, fp, #32
   1e468:	mov	r1, r7
   1e46c:	mov	r2, r8
   1e470:	bl	1ebfc <__mempcpy_chk@plt+0xd61c>
   1e474:	ldr	r8, [sp, #36]	; 0x24
   1e478:	ldr	r6, [sp, #40]	; 0x28
   1e47c:	ldr	r1, [r8, #100]	; 0x64
   1e480:	str	r0, [r1, r4, lsl #2]
   1e484:	ldr	r0, [r8, #100]	; 0x64
   1e488:	ldr	r0, [r0, r4, lsl #2]
   1e48c:	ldr	r4, [sp, #44]	; 0x2c
   1e490:	cmp	r0, #0
   1e494:	bne	1e4b0 <__mempcpy_chk@plt+0xced0>
   1e498:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1e49c:	cmp	r9, #0
   1e4a0:	beq	1e4b0 <__mempcpy_chk@plt+0xced0>
   1e4a4:	b	1e638 <__mempcpy_chk@plt+0xd058>
   1e4a8:	cmp	r0, #0
   1e4ac:	beq	1e4dc <__mempcpy_chk@plt+0xcefc>
   1e4b0:	ldr	r0, [r7, #12]
   1e4b4:	ldr	r1, [r0, sl, lsl #2]
   1e4b8:	add	r0, sp, #48	; 0x30
   1e4bc:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1e4c0:	cmp	r0, #0
   1e4c4:	beq	1e634 <__mempcpy_chk@plt+0xd054>
   1e4c8:	ldr	r0, [r6, #20]
   1e4cc:	add	r5, r5, #1
   1e4d0:	cmp	r5, r0
   1e4d4:	blt	1e3bc <__mempcpy_chk@plt+0xcddc>
   1e4d8:	b	1e4e4 <__mempcpy_chk@plt+0xcf04>
   1e4dc:	ldr	r0, [r7]
   1e4e0:	b	1e3d8 <__mempcpy_chk@plt+0xcdf8>
   1e4e4:	ldr	r5, [fp, #12]
   1e4e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e4ec:	ldr	sl, [sp, #20]
   1e4f0:	mov	r9, r5
   1e4f4:	add	r5, sp, #48	; 0x30
   1e4f8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e4fc:	ldr	r4, [sp, #24]
   1e500:	ldr	r7, [sp, #28]
   1e504:	mov	r0, #0
   1e508:	str	r0, [fp, #-52]	; 0xffffffcc
   1e50c:	ldr	r0, [sp, #52]	; 0x34
   1e510:	cmp	r0, #0
   1e514:	beq	1e568 <__mempcpy_chk@plt+0xcf88>
   1e518:	mov	r6, r7
   1e51c:	ldr	r7, [fp, #16]
   1e520:	mov	r0, sl
   1e524:	mov	r1, r5
   1e528:	mov	r2, r4
   1e52c:	mov	r3, r7
   1e530:	bl	1e6f8 <__mempcpy_chk@plt+0xd118>
   1e534:	cmp	r0, #0
   1e538:	str	r0, [fp, #-52]	; 0xffffffcc
   1e53c:	bne	1e644 <__mempcpy_chk@plt+0xd064>
   1e540:	mov	r0, r8
   1e544:	mov	r1, r5
   1e548:	mov	r2, r6
   1e54c:	mov	r3, r4
   1e550:	str	r7, [sp]
   1e554:	mov	r7, r6
   1e558:	bl	1e828 <__mempcpy_chk@plt+0xd248>
   1e55c:	cmp	r0, #0
   1e560:	str	r0, [fp, #-52]	; 0xffffffcc
   1e564:	bne	1e644 <__mempcpy_chk@plt+0xd064>
   1e568:	ldr	r2, [r8, #88]	; 0x58
   1e56c:	ldr	r1, [sp, #44]	; 0x2c
   1e570:	mov	r0, r8
   1e574:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1e578:	mov	r3, r0
   1e57c:	sub	r0, fp, #52	; 0x34
   1e580:	mov	r1, sl
   1e584:	mov	r2, r5
   1e588:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1e58c:	mov	r6, r0
   1e590:	cmp	r0, #0
   1e594:	bne	1e5a4 <__mempcpy_chk@plt+0xcfc4>
   1e598:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e59c:	cmp	r0, #0
   1e5a0:	bne	1e644 <__mempcpy_chk@plt+0xd064>
   1e5a4:	ldr	r0, [r8, #100]	; 0x64
   1e5a8:	ldr	r1, [sp, #32]
   1e5ac:	cmp	r6, #0
   1e5b0:	str	r7, [sp, #44]	; 0x2c
   1e5b4:	str	r6, [r0, r7, lsl #2]
   1e5b8:	mov	r0, #0
   1e5bc:	addeq	r0, r1, #1
   1e5c0:	cmp	r7, r9
   1e5c4:	mov	r1, r0
   1e5c8:	bne	1e338 <__mempcpy_chk@plt+0xcd58>
   1e5cc:	mov	r4, r9
   1e5d0:	b	1e5d8 <__mempcpy_chk@plt+0xcff8>
   1e5d4:	ldr	r4, [sp, #44]	; 0x2c
   1e5d8:	ldr	r0, [sp, #56]	; 0x38
   1e5dc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e5e0:	ldr	r0, [r8, #100]	; 0x64
   1e5e4:	ldr	r1, [sp, #16]
   1e5e8:	ldr	r0, [r0, r9, lsl #2]
   1e5ec:	str	r4, [r1]
   1e5f0:	ldr	r1, [sp, #12]
   1e5f4:	str	r1, [r8, #40]	; 0x28
   1e5f8:	ldr	r1, [sp, #8]
   1e5fc:	cmp	r0, #0
   1e600:	str	r1, [r8, #100]	; 0x64
   1e604:	beq	1e624 <__mempcpy_chk@plt+0xd044>
   1e608:	ldr	r1, [fp, #8]
   1e60c:	add	r0, r0, #4
   1e610:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1e614:	cmp	r0, #0
   1e618:	mov	r7, #0
   1e61c:	moveq	r7, #1
   1e620:	b	1e628 <__mempcpy_chk@plt+0xd048>
   1e624:	mov	r7, #1
   1e628:	mov	r0, r7
   1e62c:	sub	sp, fp, #28
   1e630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e634:	mov	r9, #12
   1e638:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e63c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e640:	str	r9, [fp, #-52]	; 0xffffffcc
   1e644:	ldr	r0, [sp, #56]	; 0x38
   1e648:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e64c:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e650:	b	1e628 <__mempcpy_chk@plt+0xd048>
   1e654:	mov	r9, r0
   1e658:	b	1e638 <__mempcpy_chk@plt+0xd058>
   1e65c:	mvn	r1, #-2147483648	; 0x80000000
   1e660:	mov	r7, #12
   1e664:	sub	r1, r1, r4
   1e668:	cmp	r1, r2
   1e66c:	ble	1e628 <__mempcpy_chk@plt+0xd048>
   1e670:	add	r9, r2, #1
   1e674:	add	r5, r9, r4
   1e678:	cmn	r5, #-1073741823	; 0xc0000001
   1e67c:	bhi	1e628 <__mempcpy_chk@plt+0xd048>
   1e680:	ldr	r0, [r3, #8]
   1e684:	lsl	r1, r5, #2
   1e688:	mov	sl, r3
   1e68c:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   1e690:	cmp	r0, #0
   1e694:	beq	1e628 <__mempcpy_chk@plt+0xd048>
   1e698:	str	r5, [sl, #4]
   1e69c:	str	r0, [sl, #8]
   1e6a0:	add	r0, r0, r4, lsl #2
   1e6a4:	lsl	r2, r9, #2
   1e6a8:	mov	r1, #0
   1e6ac:	bl	114f0 <memset@plt>
   1e6b0:	mov	r3, sl
   1e6b4:	ldr	r0, [sp, #36]	; 0x24
   1e6b8:	ldr	r5, [fp, #12]
   1e6bc:	ldr	sl, [sp, #20]
   1e6c0:	ldr	r7, [sp, #24]
   1e6c4:	b	1e1a4 <__mempcpy_chk@plt+0xcbc4>
   1e6c8:	mov	r7, r0
   1e6cc:	ldr	r0, [sp, #56]	; 0x38
   1e6d0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e6d4:	b	1e628 <__mempcpy_chk@plt+0xd048>
   1e6d8:	mov	r0, #0
   1e6dc:	mov	r7, #12
   1e6e0:	str	r0, [sp, #48]	; 0x30
   1e6e4:	str	r0, [sp, #52]	; 0x34
   1e6e8:	str	r7, [fp, #-52]	; 0xffffffcc
   1e6ec:	b	1e628 <__mempcpy_chk@plt+0xd048>
   1e6f0:	mov	r7, r0
   1e6f4:	b	1e628 <__mempcpy_chk@plt+0xd048>
   1e6f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6fc:	add	fp, sp, #28
   1e700:	sub	sp, sp, #20
   1e704:	str	r0, [sp, #4]
   1e708:	ldr	r0, [r1, #4]
   1e70c:	mov	sl, r1
   1e710:	mov	r1, #0
   1e714:	mov	r5, r3
   1e718:	mov	r8, r2
   1e71c:	str	r1, [sp, #12]
   1e720:	str	r0, [sp, #8]
   1e724:	lsl	r0, r0, #2
   1e728:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1e72c:	cmp	r0, #0
   1e730:	str	r0, [sp, #16]
   1e734:	beq	1e820 <__mempcpy_chk@plt+0xd240>
   1e738:	ldr	r0, [sl, #4]
   1e73c:	cmp	r0, #1
   1e740:	blt	1e7e8 <__mempcpy_chk@plt+0xd208>
   1e744:	mov	r9, #0
   1e748:	ldr	r0, [sl, #8]
   1e74c:	ldr	r1, [sp, #4]
   1e750:	ldr	r2, [r0, r9, lsl #2]
   1e754:	ldr	r1, [r1, #24]
   1e758:	add	r0, r2, r2, lsl #1
   1e75c:	add	r1, r1, r0, lsl #2
   1e760:	ldr	r0, [r1, #4]
   1e764:	cmp	r0, #1
   1e768:	blt	1e7a4 <__mempcpy_chk@plt+0xd1c4>
   1e76c:	ldr	r7, [sp, #4]
   1e770:	ldr	r3, [r1, #8]
   1e774:	ldr	r7, [r7]
   1e778:	ldr	r6, [r3]
   1e77c:	add	r4, r7, r6, lsl #3
   1e780:	ldrb	r4, [r4, #4]
   1e784:	cmp	r4, r5
   1e788:	bne	1e798 <__mempcpy_chk@plt+0xd1b8>
   1e78c:	ldr	r4, [r7, r6, lsl #3]
   1e790:	cmp	r4, r8
   1e794:	beq	1e7c8 <__mempcpy_chk@plt+0xd1e8>
   1e798:	add	r3, r3, #4
   1e79c:	subs	r0, r0, #1
   1e7a0:	bne	1e778 <__mempcpy_chk@plt+0xd198>
   1e7a4:	add	r0, sp, #8
   1e7a8:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1e7ac:	cmp	r0, #0
   1e7b0:	bne	1e810 <__mempcpy_chk@plt+0xd230>
   1e7b4:	ldr	r0, [sl, #4]
   1e7b8:	add	r9, r9, #1
   1e7bc:	cmp	r9, r0
   1e7c0:	blt	1e748 <__mempcpy_chk@plt+0xd168>
   1e7c4:	b	1e7e8 <__mempcpy_chk@plt+0xd208>
   1e7c8:	cmn	r6, #1
   1e7cc:	beq	1e7a4 <__mempcpy_chk@plt+0xd1c4>
   1e7d0:	ldr	r0, [sp, #4]
   1e7d4:	add	r1, sp, #8
   1e7d8:	mov	r3, r8
   1e7dc:	str	r5, [sp]
   1e7e0:	bl	1eaf4 <__mempcpy_chk@plt+0xd514>
   1e7e4:	b	1e7ac <__mempcpy_chk@plt+0xd1cc>
   1e7e8:	ldr	r0, [sl, #8]
   1e7ec:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e7f0:	vldr	d16, [sp, #8]
   1e7f4:	ldr	r0, [sp, #16]
   1e7f8:	mov	r7, #0
   1e7fc:	str	r0, [sl, #8]
   1e800:	vstr	d16, [sl]
   1e804:	mov	r0, r7
   1e808:	sub	sp, fp, #28
   1e80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e810:	mov	r7, r0
   1e814:	ldr	r0, [sp, #16]
   1e818:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e81c:	b	1e804 <__mempcpy_chk@plt+0xd224>
   1e820:	mov	r7, #12
   1e824:	b	1e804 <__mempcpy_chk@plt+0xd224>
   1e828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e82c:	add	fp, sp, #28
   1e830:	sub	sp, sp, #36	; 0x24
   1e834:	mov	r6, r1
   1e838:	ldr	r1, [r0, #84]	; 0x54
   1e83c:	str	r3, [sp, #4]
   1e840:	mov	r4, r2
   1e844:	str	r0, [sp, #12]
   1e848:	str	r1, [sp, #16]
   1e84c:	mov	r1, r2
   1e850:	bl	1dee8 <__mempcpy_chk@plt+0xc908>
   1e854:	cmn	r0, #1
   1e858:	beq	1eae0 <__mempcpy_chk@plt+0xd500>
   1e85c:	add	r1, r0, r0, lsl #1
   1e860:	str	r1, [sp]
   1e864:	ldr	r0, [sp, #12]
   1e868:	ldr	r0, [r0, #116]	; 0x74
   1e86c:	add	r0, r0, r1, lsl #3
   1e870:	add	r0, r0, #8
   1e874:	ldr	r7, [r0, #-8]
   1e878:	mov	sl, r0
   1e87c:	mov	r0, r6
   1e880:	mov	r1, r7
   1e884:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1e888:	cmp	r0, #0
   1e88c:	beq	1ea88 <__mempcpy_chk@plt+0xd4a8>
   1e890:	ldm	sl, {r0, r1}
   1e894:	add	r1, r1, r4
   1e898:	sub	r9, r1, r0
   1e89c:	cmp	r9, r4
   1e8a0:	bne	1e964 <__mempcpy_chk@plt+0xd384>
   1e8a4:	ldr	r0, [sp, #16]
   1e8a8:	add	r1, r7, r7, lsl #1
   1e8ac:	ldr	r0, [r0, #20]
   1e8b0:	add	r0, r0, r1, lsl #2
   1e8b4:	ldr	r0, [r0, #8]
   1e8b8:	ldr	r7, [r0]
   1e8bc:	mov	r0, r6
   1e8c0:	mov	r1, r7
   1e8c4:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1e8c8:	mov	r1, #4
   1e8cc:	cmp	r0, #0
   1e8d0:	bne	1ea7c <__mempcpy_chk@plt+0xd49c>
   1e8d4:	mov	r0, #1
   1e8d8:	str	r0, [sp, #24]
   1e8dc:	str	r0, [sp, #20]
   1e8e0:	mov	r0, #4
   1e8e4:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1e8e8:	cmp	r0, #0
   1e8ec:	str	r0, [sp, #28]
   1e8f0:	beq	1ea9c <__mempcpy_chk@plt+0xd4bc>
   1e8f4:	mov	r5, #0
   1e8f8:	str	r7, [r0]
   1e8fc:	ldr	r0, [sp, #16]
   1e900:	ldr	r2, [sp, #4]
   1e904:	ldr	r3, [fp, #8]
   1e908:	add	r7, sp, #20
   1e90c:	str	r5, [sp, #32]
   1e910:	mov	r1, r7
   1e914:	bl	1e6f8 <__mempcpy_chk@plt+0xd118>
   1e918:	mov	r9, r0
   1e91c:	mov	r0, r6
   1e920:	mov	r1, r7
   1e924:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1e928:	mov	r8, r0
   1e92c:	ldr	r0, [sp, #28]
   1e930:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e934:	orr	r0, r9, r5
   1e938:	mov	r1, #2
   1e93c:	orrs	r0, r0, r8
   1e940:	beq	1ea7c <__mempcpy_chk@plt+0xd49c>
   1e944:	cmp	r9, #0
   1e948:	mov	r1, #1
   1e94c:	movne	r8, r9
   1e950:	cmp	r5, #0
   1e954:	movne	r8, r5
   1e958:	str	r8, [sp, #32]
   1e95c:	str	r8, [sp, #8]
   1e960:	b	1ea7c <__mempcpy_chk@plt+0xd49c>
   1e964:	ldr	r0, [sp, #12]
   1e968:	ldr	r1, [sp, #16]
   1e96c:	mov	r5, r4
   1e970:	ldr	r0, [r0, #100]	; 0x64
   1e974:	ldr	r1, [r1, #12]
   1e978:	ldr	r0, [r0, r9, lsl #2]
   1e97c:	ldr	r8, [r1, r7, lsl #2]
   1e980:	cmp	r0, #0
   1e984:	beq	1e9f8 <__mempcpy_chk@plt+0xd418>
   1e988:	add	r4, r0, #4
   1e98c:	mov	r1, r8
   1e990:	mov	r0, r4
   1e994:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1e998:	mov	r1, #4
   1e99c:	cmp	r0, #0
   1e9a0:	bne	1ea78 <__mempcpy_chk@plt+0xd498>
   1e9a4:	add	r7, sp, #20
   1e9a8:	mov	r1, r4
   1e9ac:	mov	r0, r7
   1e9b0:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   1e9b4:	mov	r4, r0
   1e9b8:	str	r0, [sp, #32]
   1e9bc:	mov	r0, r7
   1e9c0:	mov	r1, r8
   1e9c4:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1e9c8:	cmp	r4, #0
   1e9cc:	bne	1e9d8 <__mempcpy_chk@plt+0xd3f8>
   1e9d0:	cmp	r0, #0
   1e9d4:	bne	1ea24 <__mempcpy_chk@plt+0xd444>
   1e9d8:	ldr	r0, [sp, #28]
   1e9dc:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1e9e0:	cmp	r4, #0
   1e9e4:	mov	r1, #1
   1e9e8:	movweq	r4, #12
   1e9ec:	str	r4, [sp, #32]
   1e9f0:	str	r4, [sp, #8]
   1e9f4:	b	1ea78 <__mempcpy_chk@plt+0xd498>
   1e9f8:	mov	r0, #1
   1e9fc:	str	r0, [sp, #24]
   1ea00:	str	r0, [sp, #20]
   1ea04:	mov	r0, #4
   1ea08:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1ea0c:	cmp	r0, #0
   1ea10:	str	r0, [sp, #28]
   1ea14:	beq	1eab0 <__mempcpy_chk@plt+0xd4d0>
   1ea18:	str	r8, [r0]
   1ea1c:	mov	r0, #0
   1ea20:	str	r0, [sp, #32]
   1ea24:	ldr	r1, [sp, #16]
   1ea28:	add	r0, sp, #32
   1ea2c:	add	r2, sp, #20
   1ea30:	bl	1ebfc <__mempcpy_chk@plt+0xd61c>
   1ea34:	ldr	r4, [sp, #12]
   1ea38:	ldr	r1, [r4, #100]	; 0x64
   1ea3c:	str	r0, [r1, r9, lsl #2]
   1ea40:	ldr	r0, [sp, #28]
   1ea44:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1ea48:	ldr	r0, [r4, #100]	; 0x64
   1ea4c:	ldr	r2, [sp, #32]
   1ea50:	ldr	r0, [r0, r9, lsl #2]
   1ea54:	cmp	r2, #0
   1ea58:	mov	r1, r2
   1ea5c:	movwne	r1, #1
   1ea60:	clz	r0, r0
   1ea64:	lsr	r0, r0, #5
   1ea68:	ands	r1, r0, r1
   1ea6c:	ldr	r0, [sp, #8]
   1ea70:	movne	r0, r2
   1ea74:	str	r0, [sp, #8]
   1ea78:	mov	r4, r5
   1ea7c:	cmp	r1, #0
   1ea80:	cmpne	r1, #4
   1ea84:	bne	1ead0 <__mempcpy_chk@plt+0xd4f0>
   1ea88:	ldrb	r1, [sl, #12]
   1ea8c:	add	r0, sl, #24
   1ea90:	cmp	r1, #0
   1ea94:	bne	1e874 <__mempcpy_chk@plt+0xd294>
   1ea98:	b	1eae0 <__mempcpy_chk@plt+0xd500>
   1ea9c:	mov	r0, #0
   1eaa0:	mov	r5, #12
   1eaa4:	str	r0, [sp, #20]
   1eaa8:	str	r0, [sp, #24]
   1eaac:	b	1e8fc <__mempcpy_chk@plt+0xd31c>
   1eab0:	mov	r0, #0
   1eab4:	mov	r1, #12
   1eab8:	str	r0, [sp, #20]
   1eabc:	str	r0, [sp, #24]
   1eac0:	mov	r0, #12
   1eac4:	str	r1, [sp, #32]
   1eac8:	mov	r1, #1
   1eacc:	b	1ea74 <__mempcpy_chk@plt+0xd494>
   1ead0:	cmp	r1, #2
   1ead4:	bne	1eaec <__mempcpy_chk@plt+0xd50c>
   1ead8:	ldr	r1, [sp]
   1eadc:	b	1e864 <__mempcpy_chk@plt+0xd284>
   1eae0:	mov	r0, #0
   1eae4:	sub	sp, fp, #28
   1eae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eaec:	ldr	r0, [sp, #8]
   1eaf0:	b	1eae4 <__mempcpy_chk@plt+0xd504>
   1eaf4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1eaf8:	add	fp, sp, #24
   1eafc:	sub	sp, sp, #8
   1eb00:	mov	r6, r0
   1eb04:	mov	r4, r1
   1eb08:	mov	r0, r1
   1eb0c:	mov	r1, r2
   1eb10:	mov	r5, r3
   1eb14:	mov	r7, r2
   1eb18:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1eb1c:	cmp	r0, #0
   1eb20:	beq	1eb30 <__mempcpy_chk@plt+0xd550>
   1eb24:	mov	r0, #0
   1eb28:	sub	sp, fp, #24
   1eb2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eb30:	ldr	r8, [fp, #8]
   1eb34:	ldr	r0, [r6]
   1eb38:	add	r1, r0, r7, lsl #3
   1eb3c:	ldrb	r1, [r1, #4]
   1eb40:	cmp	r1, r8
   1eb44:	bne	1eb54 <__mempcpy_chk@plt+0xd574>
   1eb48:	ldr	r0, [r0, r7, lsl #3]
   1eb4c:	cmp	r0, r5
   1eb50:	beq	1ebd8 <__mempcpy_chk@plt+0xd5f8>
   1eb54:	mov	r0, r4
   1eb58:	mov	r1, r7
   1eb5c:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1eb60:	cmp	r0, #0
   1eb64:	beq	1ebf4 <__mempcpy_chk@plt+0xd614>
   1eb68:	ldr	r0, [r6, #20]
   1eb6c:	add	r7, r7, r7, lsl #1
   1eb70:	add	r1, r0, r7, lsl #2
   1eb74:	ldr	r2, [r1, #4]
   1eb78:	cmp	r2, #2
   1eb7c:	beq	1eb8c <__mempcpy_chk@plt+0xd5ac>
   1eb80:	cmp	r2, #0
   1eb84:	bne	1ebb4 <__mempcpy_chk@plt+0xd5d4>
   1eb88:	b	1eb24 <__mempcpy_chk@plt+0xd544>
   1eb8c:	ldr	r0, [r1, #8]
   1eb90:	mov	r1, r4
   1eb94:	mov	r3, r5
   1eb98:	ldr	r2, [r0, #4]
   1eb9c:	mov	r0, r6
   1eba0:	str	r8, [sp]
   1eba4:	bl	1eaf4 <__mempcpy_chk@plt+0xd514>
   1eba8:	cmp	r0, #0
   1ebac:	bne	1eb28 <__mempcpy_chk@plt+0xd548>
   1ebb0:	ldr	r0, [r6, #20]
   1ebb4:	add	r0, r0, r7, lsl #2
   1ebb8:	ldr	r0, [r0, #8]
   1ebbc:	ldr	r7, [r0]
   1ebc0:	mov	r0, r4
   1ebc4:	mov	r1, r7
   1ebc8:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1ebcc:	cmp	r0, #0
   1ebd0:	beq	1eb34 <__mempcpy_chk@plt+0xd554>
   1ebd4:	b	1eb24 <__mempcpy_chk@plt+0xd544>
   1ebd8:	cmp	r8, #9
   1ebdc:	bne	1eb24 <__mempcpy_chk@plt+0xd544>
   1ebe0:	mov	r0, r4
   1ebe4:	mov	r1, r7
   1ebe8:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1ebec:	cmp	r0, #0
   1ebf0:	bne	1eb24 <__mempcpy_chk@plt+0xd544>
   1ebf4:	mov	r0, #12
   1ebf8:	b	1eb28 <__mempcpy_chk@plt+0xd548>
   1ebfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec00:	add	fp, sp, #28
   1ec04:	sub	sp, sp, #4
   1ec08:	ldr	sl, [r2, #4]
   1ec0c:	cmp	sl, #0
   1ec10:	beq	1edc0 <__mempcpy_chk@plt+0xd7e0>
   1ec14:	mov	r4, r2
   1ec18:	mov	r9, r1
   1ec1c:	cmp	sl, #1
   1ec20:	mov	r6, sl
   1ec24:	str	r0, [sp]
   1ec28:	blt	1ec48 <__mempcpy_chk@plt+0xd668>
   1ec2c:	ldr	r1, [r4, #8]
   1ec30:	mov	r2, sl
   1ec34:	mov	r6, sl
   1ec38:	ldr	r3, [r1], #4
   1ec3c:	subs	r2, r2, #1
   1ec40:	add	r6, r3, r6
   1ec44:	bne	1ec38 <__mempcpy_chk@plt+0xd658>
   1ec48:	ldr	r1, [r9, #68]	; 0x44
   1ec4c:	ldr	r2, [r9, #32]
   1ec50:	and	r1, r1, r6
   1ec54:	add	r3, r1, r1, lsl #1
   1ec58:	ldr	r1, [r2, r3, lsl #2]
   1ec5c:	cmp	r1, #1
   1ec60:	blt	1ecd0 <__mempcpy_chk@plt+0xd6f0>
   1ec64:	add	r2, r2, r3, lsl #2
   1ec68:	sub	ip, sl, #1
   1ec6c:	mov	r5, #0
   1ec70:	ldr	lr, [r2, #8]
   1ec74:	cmp	r4, #0
   1ec78:	beq	1ecc4 <__mempcpy_chk@plt+0xd6e4>
   1ec7c:	ldr	r7, [lr, r5, lsl #2]
   1ec80:	ldr	r3, [r7]
   1ec84:	cmp	r6, r3
   1ec88:	bne	1ecc4 <__mempcpy_chk@plt+0xd6e4>
   1ec8c:	ldr	r3, [r7, #8]
   1ec90:	cmp	r3, sl
   1ec94:	bne	1ecc4 <__mempcpy_chk@plt+0xd6e4>
   1ec98:	mov	r3, ip
   1ec9c:	add	r2, r3, #1
   1eca0:	cmp	r2, #1
   1eca4:	blt	1edb4 <__mempcpy_chk@plt+0xd7d4>
   1eca8:	ldr	r2, [r4, #8]
   1ecac:	ldr	r0, [r7, #12]
   1ecb0:	ldr	r2, [r2, r3, lsl #2]
   1ecb4:	ldr	r0, [r0, r3, lsl #2]
   1ecb8:	sub	r3, r3, #1
   1ecbc:	cmp	r0, r2
   1ecc0:	beq	1ec9c <__mempcpy_chk@plt+0xd6bc>
   1ecc4:	add	r5, r5, #1
   1ecc8:	cmp	r5, r1
   1eccc:	blt	1ec74 <__mempcpy_chk@plt+0xd694>
   1ecd0:	mov	r0, #56	; 0x38
   1ecd4:	mov	r1, #1
   1ecd8:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1ecdc:	cmp	r0, #0
   1ece0:	beq	1ede0 <__mempcpy_chk@plt+0xd800>
   1ece4:	add	r5, r0, #4
   1ece8:	mov	r7, r0
   1ecec:	mov	r1, r4
   1ecf0:	mov	r0, r5
   1ecf4:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   1ecf8:	cmp	r0, #0
   1ecfc:	bne	1edcc <__mempcpy_chk@plt+0xd7ec>
   1ed00:	str	r5, [r7, #40]	; 0x28
   1ed04:	ldr	r0, [r4, #4]
   1ed08:	cmp	r0, #1
   1ed0c:	blt	1ed9c <__mempcpy_chk@plt+0xd7bc>
   1ed10:	movw	ip, #65280	; 0xff00
   1ed14:	ldr	r1, [r4, #8]
   1ed18:	ldr	sl, [r9]
   1ed1c:	mov	lr, #32
   1ed20:	movt	ip, #3
   1ed24:	add	r5, ip, #255	; 0xff
   1ed28:	ldr	r2, [r1]
   1ed2c:	add	r3, sl, r2, lsl #3
   1ed30:	ldr	r2, [r3, #4]!
   1ed34:	and	r4, r2, r5
   1ed38:	cmp	r4, #1
   1ed3c:	beq	1ed90 <__mempcpy_chk@plt+0xd7b0>
   1ed40:	ldrb	r8, [r7, #52]	; 0x34
   1ed44:	and	r4, lr, r2, lsr #15
   1ed48:	uxtb	r2, r2
   1ed4c:	cmp	r2, #12
   1ed50:	orr	r4, r8, r4
   1ed54:	strb	r4, [r7, #52]	; 0x34
   1ed58:	beq	1ed88 <__mempcpy_chk@plt+0xd7a8>
   1ed5c:	cmp	r2, #4
   1ed60:	beq	1ed74 <__mempcpy_chk@plt+0xd794>
   1ed64:	cmp	r2, #2
   1ed68:	bne	1ed7c <__mempcpy_chk@plt+0xd79c>
   1ed6c:	orr	r2, r4, #16
   1ed70:	b	1ed8c <__mempcpy_chk@plt+0xd7ac>
   1ed74:	orr	r2, r4, #64	; 0x40
   1ed78:	b	1ed8c <__mempcpy_chk@plt+0xd7ac>
   1ed7c:	ldr	r2, [r3]
   1ed80:	tst	r2, ip
   1ed84:	beq	1ed90 <__mempcpy_chk@plt+0xd7b0>
   1ed88:	orr	r2, r4, #128	; 0x80
   1ed8c:	strb	r2, [r7, #52]	; 0x34
   1ed90:	add	r1, r1, #4
   1ed94:	subs	r0, r0, #1
   1ed98:	bne	1ed28 <__mempcpy_chk@plt+0xd748>
   1ed9c:	mov	r0, r9
   1eda0:	mov	r1, r7
   1eda4:	mov	r2, r6
   1eda8:	bl	1c894 <__mempcpy_chk@plt+0xb2b4>
   1edac:	cmp	r0, #0
   1edb0:	bne	1edd8 <__mempcpy_chk@plt+0xd7f8>
   1edb4:	mov	r0, r7
   1edb8:	sub	sp, fp, #28
   1edbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edc0:	mov	r7, #0
   1edc4:	str	r7, [r0]
   1edc8:	b	1edb4 <__mempcpy_chk@plt+0xd7d4>
   1edcc:	mov	r0, r7
   1edd0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1edd4:	b	1ede0 <__mempcpy_chk@plt+0xd800>
   1edd8:	mov	r0, r7
   1eddc:	bl	1798c <__mempcpy_chk@plt+0x63ac>
   1ede0:	ldr	r1, [sp]
   1ede4:	mov	r0, #12
   1ede8:	mov	r7, #0
   1edec:	str	r0, [r1]
   1edf0:	b	1edb4 <__mempcpy_chk@plt+0xd7d4>
   1edf4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1edf8:	add	fp, sp, #24
   1edfc:	ldr	lr, [r0]
   1ee00:	add	r7, lr, r1, lsl #3
   1ee04:	ldrb	r9, [r7, #4]
   1ee08:	cmp	r9, #7
   1ee0c:	beq	1efe0 <__mempcpy_chk@plt+0xda00>
   1ee10:	ldr	ip, [r2, #80]	; 0x50
   1ee14:	mov	r6, #1
   1ee18:	cmp	ip, #1
   1ee1c:	beq	1ee5c <__mempcpy_chk@plt+0xd87c>
   1ee20:	ldr	r5, [r2, #28]
   1ee24:	add	r7, r3, #1
   1ee28:	cmp	r7, r5
   1ee2c:	bge	1ee5c <__mempcpy_chk@plt+0xd87c>
   1ee30:	ldr	r6, [r2, #8]
   1ee34:	sub	r5, r5, r3
   1ee38:	add	r7, r6, r3, lsl #2
   1ee3c:	mov	r6, #1
   1ee40:	ldr	r4, [r7, r6, lsl #2]
   1ee44:	cmn	r4, #1
   1ee48:	bne	1ee5c <__mempcpy_chk@plt+0xd87c>
   1ee4c:	add	r6, r6, #1
   1ee50:	cmp	r5, r6
   1ee54:	bne	1ee40 <__mempcpy_chk@plt+0xd860>
   1ee58:	mov	r6, r5
   1ee5c:	mov	r8, #0
   1ee60:	cmp	r9, #5
   1ee64:	bne	1eea8 <__mempcpy_chk@plt+0xd8c8>
   1ee68:	cmp	r6, #2
   1ee6c:	blt	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1ee70:	ldr	r0, [r0, #128]	; 0x80
   1ee74:	tst	r0, #64	; 0x40
   1ee78:	bne	1ee8c <__mempcpy_chk@plt+0xd8ac>
   1ee7c:	ldr	r1, [r2, #4]
   1ee80:	ldrb	r1, [r1, r3]
   1ee84:	cmp	r1, #10
   1ee88:	beq	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1ee8c:	tst	r0, #128	; 0x80
   1ee90:	beq	1efcc <__mempcpy_chk@plt+0xd9ec>
   1ee94:	ldr	r0, [r2, #4]
   1ee98:	ldrb	r0, [r0, r3]
   1ee9c:	cmp	r0, #0
   1eea0:	movne	r8, r6
   1eea4:	b	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1eea8:	cmp	r9, #6
   1eeac:	bne	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1eeb0:	cmp	r6, #2
   1eeb4:	blt	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1eeb8:	ldr	r7, [lr, r1, lsl #3]
   1eebc:	ldr	r0, [r7, #32]
   1eec0:	cmp	r0, #0
   1eec4:	bne	1eee0 <__mempcpy_chk@plt+0xd900>
   1eec8:	ldr	r1, [r7, #36]	; 0x24
   1eecc:	cmp	r1, #0
   1eed0:	bne	1eee0 <__mempcpy_chk@plt+0xd900>
   1eed4:	ldr	r1, [r7, #20]
   1eed8:	cmp	r1, #0
   1eedc:	beq	1efd8 <__mempcpy_chk@plt+0xd9f8>
   1eee0:	cmp	ip, #1
   1eee4:	bne	1eef4 <__mempcpy_chk@plt+0xd914>
   1eee8:	ldr	r1, [r2, #4]
   1eeec:	ldrb	r5, [r1, r3]
   1eef0:	b	1eefc <__mempcpy_chk@plt+0xd91c>
   1eef4:	ldr	r1, [r2, #8]
   1eef8:	ldr	r5, [r1, r3, lsl #2]
   1eefc:	ldr	r1, [r7, #20]
   1ef00:	cmp	r1, #1
   1ef04:	blt	1ef28 <__mempcpy_chk@plt+0xd948>
   1ef08:	ldr	r2, [r7]
   1ef0c:	mov	r3, #0
   1ef10:	ldr	r4, [r2, r3, lsl #2]
   1ef14:	cmp	r5, r4
   1ef18:	beq	1efa4 <__mempcpy_chk@plt+0xd9c4>
   1ef1c:	add	r3, r3, #1
   1ef20:	cmp	r3, r1
   1ef24:	blt	1ef10 <__mempcpy_chk@plt+0xd930>
   1ef28:	ldr	r1, [r7, #36]	; 0x24
   1ef2c:	cmp	r1, #1
   1ef30:	blt	1ef64 <__mempcpy_chk@plt+0xd984>
   1ef34:	mov	r4, #0
   1ef38:	ldr	r0, [r7, #12]
   1ef3c:	ldr	r1, [r0, r4, lsl #2]
   1ef40:	mov	r0, r5
   1ef44:	bl	112e0 <iswctype@plt>
   1ef48:	cmp	r0, #0
   1ef4c:	bne	1efa4 <__mempcpy_chk@plt+0xd9c4>
   1ef50:	ldr	r0, [r7, #36]	; 0x24
   1ef54:	add	r4, r4, #1
   1ef58:	cmp	r4, r0
   1ef5c:	blt	1ef38 <__mempcpy_chk@plt+0xd958>
   1ef60:	ldr	r0, [r7, #32]
   1ef64:	cmp	r0, #1
   1ef68:	blt	1ef9c <__mempcpy_chk@plt+0xd9bc>
   1ef6c:	ldr	r1, [r7, #4]
   1ef70:	mov	r2, #0
   1ef74:	ldr	r3, [r1, r2, lsl #2]
   1ef78:	cmp	r3, r5
   1ef7c:	bhi	1ef90 <__mempcpy_chk@plt+0xd9b0>
   1ef80:	ldr	r3, [r7, #8]
   1ef84:	ldr	r3, [r3, r2, lsl #2]
   1ef88:	cmp	r5, r3
   1ef8c:	bls	1efa4 <__mempcpy_chk@plt+0xd9c4>
   1ef90:	add	r2, r2, #1
   1ef94:	cmp	r2, r0
   1ef98:	blt	1ef74 <__mempcpy_chk@plt+0xd994>
   1ef9c:	mov	r0, #0
   1efa0:	b	1efa8 <__mempcpy_chk@plt+0xd9c8>
   1efa4:	mov	r0, r6
   1efa8:	ldrb	r1, [r7, #16]
   1efac:	tst	r1, #1
   1efb0:	bne	1efbc <__mempcpy_chk@plt+0xd9dc>
   1efb4:	mov	r8, r0
   1efb8:	b	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1efbc:	cmp	r0, #0
   1efc0:	bgt	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1efc4:	cmp	r6, #1
   1efc8:	movle	r6, #1
   1efcc:	mov	r8, r6
   1efd0:	mov	r0, r8
   1efd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1efd8:	mov	r5, #0
   1efdc:	b	1eefc <__mempcpy_chk@plt+0xd91c>
   1efe0:	ldr	r0, [r2, #4]
   1efe4:	mov	r8, #0
   1efe8:	ldrb	r6, [r0, r3]
   1efec:	cmp	r6, #194	; 0xc2
   1eff0:	bcc	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1eff4:	ldr	r1, [r2, #48]	; 0x30
   1eff8:	add	r2, r3, #2
   1effc:	cmp	r2, r1
   1f000:	bgt	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f004:	add	r0, r3, r0
   1f008:	cmp	r6, #223	; 0xdf
   1f00c:	ldrb	r7, [r0, #1]
   1f010:	bhi	1f034 <__mempcpy_chk@plt+0xda54>
   1f014:	cmp	r7, #192	; 0xc0
   1f018:	mov	r0, #0
   1f01c:	movwcc	r0, #1
   1f020:	lsl	r8, r0, #1
   1f024:	sxtb	r0, r7
   1f028:	cmn	r0, #1
   1f02c:	movwgt	r8, #0
   1f030:	b	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f034:	cmp	r6, #239	; 0xef
   1f038:	bhi	1f054 <__mempcpy_chk@plt+0xda74>
   1f03c:	mov	r2, #3
   1f040:	cmp	r6, #224	; 0xe0
   1f044:	bne	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f048:	cmp	r7, #160	; 0xa0
   1f04c:	bcc	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f050:	b	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f054:	cmp	r6, #247	; 0xf7
   1f058:	bhi	1f074 <__mempcpy_chk@plt+0xda94>
   1f05c:	mov	r2, #4
   1f060:	cmp	r6, #240	; 0xf0
   1f064:	bne	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f068:	cmp	r7, #144	; 0x90
   1f06c:	bcc	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f070:	b	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f074:	cmp	r6, #251	; 0xfb
   1f078:	bhi	1f094 <__mempcpy_chk@plt+0xdab4>
   1f07c:	mov	r2, #5
   1f080:	cmp	r6, #248	; 0xf8
   1f084:	bne	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f088:	cmp	r7, #136	; 0x88
   1f08c:	bcc	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f090:	b	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f094:	cmp	r6, #253	; 0xfd
   1f098:	bhi	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f09c:	mov	r2, #6
   1f0a0:	cmp	r6, #252	; 0xfc
   1f0a4:	bne	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f0a8:	cmp	r7, #132	; 0x84
   1f0ac:	bcc	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f0b0:	add	r3, r2, r3
   1f0b4:	cmp	r3, r1
   1f0b8:	bgt	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f0bc:	mov	r1, #1
   1f0c0:	ldrb	r3, [r0, r1]
   1f0c4:	sxtb	r7, r3
   1f0c8:	cmn	r7, #1
   1f0cc:	bgt	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f0d0:	cmp	r3, #191	; 0xbf
   1f0d4:	bhi	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f0d8:	add	r1, r1, #1
   1f0dc:	cmp	r2, r1
   1f0e0:	bne	1f0c0 <__mempcpy_chk@plt+0xdae0>
   1f0e4:	mov	r8, r2
   1f0e8:	b	1efd0 <__mempcpy_chk@plt+0xd9f0>
   1f0ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f0f0:	add	fp, sp, #24
   1f0f4:	ldr	r5, [r1, #4]
   1f0f8:	mvn	r3, #0
   1f0fc:	mov	r8, #0
   1f100:	uxtab	r4, r3, r5
   1f104:	cmp	r4, #6
   1f108:	bhi	1f218 <__mempcpy_chk@plt+0xdc38>
   1f10c:	ldr	r3, [r0, #4]
   1f110:	ldrb	r3, [r3, r2]
   1f114:	add	r7, pc, #4
   1f118:	sxtb	r6, r3
   1f11c:	ldr	pc, [r7, r4, lsl #2]
   1f120:	andeq	pc, r1, ip, lsr r1	; <UNPREDICTABLE>
   1f124:	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   1f128:	andeq	pc, r1, r0, asr r1	; <UNPREDICTABLE>
   1f12c:	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   1f130:	andeq	pc, r1, r8, ror r1	; <UNPREDICTABLE>
   1f134:	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   1f138:	andeq	pc, r1, r0, ror r1	; <UNPREDICTABLE>
   1f13c:	ldrb	r1, [r1]
   1f140:	uxtb	r3, r6
   1f144:	cmp	r1, r3
   1f148:	beq	1f1ac <__mempcpy_chk@plt+0xdbcc>
   1f14c:	b	1f218 <__mempcpy_chk@plt+0xdc38>
   1f150:	ldr	r1, [r1]
   1f154:	ubfx	r7, r3, #5, #3
   1f158:	and	r3, r3, #31
   1f15c:	ldr	r1, [r1, r7, lsl #2]
   1f160:	mov	r7, #1
   1f164:	tst	r1, r7, lsl r3
   1f168:	bne	1f1ac <__mempcpy_chk@plt+0xdbcc>
   1f16c:	b	1f218 <__mempcpy_chk@plt+0xdc38>
   1f170:	cmp	r6, #0
   1f174:	bmi	1f218 <__mempcpy_chk@plt+0xdc38>
   1f178:	cmp	r3, #0
   1f17c:	beq	1f19c <__mempcpy_chk@plt+0xdbbc>
   1f180:	cmp	r3, #10
   1f184:	bne	1f1ac <__mempcpy_chk@plt+0xdbcc>
   1f188:	ldr	r1, [r0, #84]	; 0x54
   1f18c:	ldrb	r1, [r1, #128]	; 0x80
   1f190:	tst	r1, #64	; 0x40
   1f194:	bne	1f1ac <__mempcpy_chk@plt+0xdbcc>
   1f198:	b	1f218 <__mempcpy_chk@plt+0xdc38>
   1f19c:	ldr	r1, [r0, #84]	; 0x54
   1f1a0:	ldrb	r1, [r1, #128]	; 0x80
   1f1a4:	tst	r1, #128	; 0x80
   1f1a8:	bne	1f218 <__mempcpy_chk@plt+0xdc38>
   1f1ac:	movw	r1, #65280	; 0xff00
   1f1b0:	movt	r1, #3
   1f1b4:	tst	r5, r1
   1f1b8:	beq	1f214 <__mempcpy_chk@plt+0xdc34>
   1f1bc:	ldr	r3, [r0, #88]	; 0x58
   1f1c0:	mov	r1, r2
   1f1c4:	mov	r2, r3
   1f1c8:	bl	1d1d4 <__mempcpy_chk@plt+0xbbf4>
   1f1cc:	and	r1, r0, #1
   1f1d0:	tst	r5, #1024	; 0x400
   1f1d4:	beq	1f1e0 <__mempcpy_chk@plt+0xdc00>
   1f1d8:	cmp	r1, #0
   1f1dc:	beq	1f218 <__mempcpy_chk@plt+0xdc38>
   1f1e0:	tst	r5, #2048	; 0x800
   1f1e4:	cmpne	r1, #0
   1f1e8:	bne	1f218 <__mempcpy_chk@plt+0xdc38>
   1f1ec:	tst	r5, #8192	; 0x2000
   1f1f0:	beq	1f1fc <__mempcpy_chk@plt+0xdc1c>
   1f1f4:	ands	r1, r0, #2
   1f1f8:	beq	1f218 <__mempcpy_chk@plt+0xdc38>
   1f1fc:	uxth	r1, r5
   1f200:	mov	r2, #1
   1f204:	and	r0, r0, #8
   1f208:	eor	r1, r2, r1, lsr #15
   1f20c:	orr	r0, r1, r0, lsr #3
   1f210:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f214:	mov	r8, #1
   1f218:	mov	r0, r8
   1f21c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f224:	add	fp, sp, #28
   1f228:	sub	sp, sp, #4
   1f22c:	vpush	{d8-d11}
   1f230:	sub	sp, sp, #88	; 0x58
   1f234:	sub	sp, sp, #14336	; 0x3800
   1f238:	sub	lr, fp, #1024	; 0x400
   1f23c:	vmov.i32	q4, #0	; 0x00000000
   1f240:	mov	sl, r1
   1f244:	mov	r1, #0
   1f248:	mov	ip, r0
   1f24c:	sub	r9, lr, #72	; 0x48
   1f250:	str	r1, [sl, #44]	; 0x2c
   1f254:	str	r1, [sl, #48]	; 0x30
   1f258:	mov	r0, r9
   1f25c:	vst1.64	{d8-d9}, [r0]!
   1f260:	vst1.64	{d8-d9}, [r0]
   1f264:	ldr	r0, [sl, #8]
   1f268:	cmp	r0, #0
   1f26c:	ble	1fc18 <__mempcpy_chk@plt+0xe638>
   1f270:	sub	lr, fp, #2048	; 0x800
   1f274:	add	r0, ip, #96	; 0x60
   1f278:	mov	r6, #0
   1f27c:	str	ip, [sp, #28]
   1f280:	str	sl, [sp, #16]
   1f284:	sub	r4, lr, #72	; 0x48
   1f288:	sub	lr, fp, #3072	; 0xc00
   1f28c:	str	r0, [sp, #4]
   1f290:	sub	r8, lr, #72	; 0x48
   1f294:	sub	lr, fp, #6144	; 0x1800
   1f298:	sub	r5, lr, #120	; 0x78
   1f29c:	ldr	r0, [sl, #12]
   1f2a0:	str	r1, [sp, #24]
   1f2a4:	ldr	lr, [r0, r1, lsl #2]
   1f2a8:	ldr	r1, [ip]
   1f2ac:	add	r0, r1, lr, lsl #3
   1f2b0:	str	lr, [sp, #12]
   1f2b4:	ldr	r7, [r0, #4]
   1f2b8:	uxtb	r0, r7
   1f2bc:	cmp	r0, #1
   1f2c0:	str	r0, [sp, #20]
   1f2c4:	bne	1f3a0 <__mempcpy_chk@plt+0xddc0>
   1f2c8:	ldrb	r0, [r1, lr, lsl #3]
   1f2cc:	str	r1, [sp, #8]
   1f2d0:	mov	r3, #1
   1f2d4:	ubfx	r1, r0, #5, #3
   1f2d8:	and	r0, r0, #31
   1f2dc:	ldr	r2, [r9, r1, lsl #2]
   1f2e0:	orr	r0, r2, r3, lsl r0
   1f2e4:	str	r0, [r9, r1, lsl #2]
   1f2e8:	movw	r0, #65280	; 0xff00
   1f2ec:	ldr	r3, [sp, #20]
   1f2f0:	movt	r0, #3
   1f2f4:	ands	r0, r7, r0
   1f2f8:	beq	1f5e0 <__mempcpy_chk@plt+0xe000>
   1f2fc:	tst	r7, #8192	; 0x2000
   1f300:	beq	1f324 <__mempcpy_chk@plt+0xdd44>
   1f304:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
   1f308:	mov	r1, r9
   1f30c:	vst1.64	{d8-d9}, [r1]!
   1f310:	vst1.64	{d8-d9}, [r1]
   1f314:	tst	r0, #1024	; 0x400
   1f318:	beq	1f810 <__mempcpy_chk@plt+0xe230>
   1f31c:	mov	r0, #1024	; 0x400
   1f320:	str	r0, [fp, #-1096]	; 0xfffffbb8
   1f324:	tst	r7, #32768	; 0x8000
   1f328:	bne	1f534 <__mempcpy_chk@plt+0xdf54>
   1f32c:	tst	r7, #1024	; 0x400
   1f330:	beq	1f51c <__mempcpy_chk@plt+0xdf3c>
   1f334:	movw	r0, #255	; 0xff
   1f338:	movt	r0, #64	; 0x40
   1f33c:	and	r0, r7, r0
   1f340:	cmp	r0, #1
   1f344:	beq	1f534 <__mempcpy_chk@plt+0xdf54>
   1f348:	ldr	r0, [ip, #92]	; 0x5c
   1f34c:	vmov.i32	q8, #0	; 0x00000000
   1f350:	mov	lr, r5
   1f354:	cmp	r0, #1
   1f358:	ble	1f4c4 <__mempcpy_chk@plt+0xdee4>
   1f35c:	ldr	r0, [ip, #60]	; 0x3c
   1f360:	ldr	r5, [sp, #4]
   1f364:	mov	r1, #0
   1f368:	add	r2, r5, r1
   1f36c:	add	r3, r0, r1
   1f370:	vld1.32	{d20-d21}, [r2]
   1f374:	vld1.32	{d18-d19}, [r3]
   1f378:	add	r2, r9, r1
   1f37c:	add	r1, r1, #16
   1f380:	vld1.32	{d22-d23}, [r2]
   1f384:	cmp	r1, #32
   1f388:	vorn	q9, q10, q9
   1f38c:	vand	q9, q11, q9
   1f390:	vorr	q8, q9, q8
   1f394:	vst1.32	{d18-d19}, [r2]
   1f398:	bne	1f368 <__mempcpy_chk@plt+0xdd88>
   1f39c:	b	1f4f4 <__mempcpy_chk@plt+0xdf14>
   1f3a0:	cmp	r0, #7
   1f3a4:	beq	1f3ec <__mempcpy_chk@plt+0xde0c>
   1f3a8:	cmp	r0, #5
   1f3ac:	beq	1f43c <__mempcpy_chk@plt+0xde5c>
   1f3b0:	cmp	r0, #3
   1f3b4:	bne	1f810 <__mempcpy_chk@plt+0xe230>
   1f3b8:	ldr	r0, [r1, lr, lsl #3]
   1f3bc:	str	r1, [sp, #8]
   1f3c0:	mov	r1, #0
   1f3c4:	add	r2, r9, r1
   1f3c8:	add	r3, r0, r1
   1f3cc:	add	r1, r1, #16
   1f3d0:	vld1.32	{d16-d17}, [r3]
   1f3d4:	vld1.32	{d18-d19}, [r2]
   1f3d8:	cmp	r1, #32
   1f3dc:	vorr	q8, q9, q8
   1f3e0:	vst1.32	{d16-d17}, [r2]
   1f3e4:	bne	1f3c4 <__mempcpy_chk@plt+0xdde4>
   1f3e8:	b	1f2e8 <__mempcpy_chk@plt+0xdd08>
   1f3ec:	mvn	r0, #0
   1f3f0:	str	r1, [sp, #8]
   1f3f4:	str	r0, [fp, #-1084]	; 0xfffffbc4
   1f3f8:	str	r0, [fp, #-1088]	; 0xfffffbc0
   1f3fc:	str	r0, [fp, #-1092]	; 0xfffffbbc
   1f400:	str	r0, [fp, #-1096]	; 0xfffffbb8
   1f404:	ldr	r1, [ip, #128]	; 0x80
   1f408:	and	r0, r1, #128	; 0x80
   1f40c:	ands	r1, r1, #64	; 0x40
   1f410:	beq	1f41c <__mempcpy_chk@plt+0xde3c>
   1f414:	cmp	r0, #0
   1f418:	beq	1f2e8 <__mempcpy_chk@plt+0xdd08>
   1f41c:	cmp	r1, #0
   1f420:	mvn	r1, #1
   1f424:	movweq	r1, #64510	; 0xfbfe
   1f428:	movteq	r1, #65535	; 0xffff
   1f42c:	cmp	r0, #0
   1f430:	mvneq	r1, #1024	; 0x400
   1f434:	str	r1, [fp, #-1096]	; 0xfffffbb8
   1f438:	b	1f2e8 <__mempcpy_chk@plt+0xdd08>
   1f43c:	ldr	r0, [ip, #92]	; 0x5c
   1f440:	str	r1, [sp, #8]
   1f444:	cmp	r0, #2
   1f448:	blt	1f47c <__mempcpy_chk@plt+0xde9c>
   1f44c:	ldr	r0, [ip, #60]	; 0x3c
   1f450:	mov	r1, #0
   1f454:	add	r2, r9, r1
   1f458:	add	r3, r0, r1
   1f45c:	add	r1, r1, #16
   1f460:	vld1.32	{d16-d17}, [r3]
   1f464:	vld1.32	{d18-d19}, [r2]
   1f468:	cmp	r1, #32
   1f46c:	vorr	q8, q9, q8
   1f470:	vst1.32	{d16-d17}, [r2]
   1f474:	bne	1f454 <__mempcpy_chk@plt+0xde74>
   1f478:	b	1f494 <__mempcpy_chk@plt+0xdeb4>
   1f47c:	mov	r0, r9
   1f480:	mov	r1, #255	; 0xff
   1f484:	mov	r2, #32
   1f488:	bl	114f0 <memset@plt>
   1f48c:	ldr	lr, [sp, #12]
   1f490:	ldr	ip, [sp, #28]
   1f494:	ldr	r0, [ip, #128]	; 0x80
   1f498:	tst	r0, #64	; 0x40
   1f49c:	bne	1f4ac <__mempcpy_chk@plt+0xdecc>
   1f4a0:	ldr	r1, [fp, #-1096]	; 0xfffffbb8
   1f4a4:	bic	r1, r1, #1024	; 0x400
   1f4a8:	str	r1, [fp, #-1096]	; 0xfffffbb8
   1f4ac:	tst	r0, #128	; 0x80
   1f4b0:	beq	1f2e8 <__mempcpy_chk@plt+0xdd08>
   1f4b4:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
   1f4b8:	bic	r0, r0, #1
   1f4bc:	str	r0, [fp, #-1096]	; 0xfffffbb8
   1f4c0:	b	1f2e8 <__mempcpy_chk@plt+0xdd08>
   1f4c4:	ldr	r3, [sp, #4]
   1f4c8:	mov	r0, #0
   1f4cc:	add	r1, r9, r0
   1f4d0:	add	r2, r3, r0
   1f4d4:	add	r0, r0, #16
   1f4d8:	vld1.32	{d18-d19}, [r2]
   1f4dc:	vld1.32	{d20-d21}, [r1]
   1f4e0:	cmp	r0, #32
   1f4e4:	vand	q9, q10, q9
   1f4e8:	vorr	q8, q9, q8
   1f4ec:	vst1.32	{d18-d19}, [r1]
   1f4f0:	bne	1f4cc <__mempcpy_chk@plt+0xdeec>
   1f4f4:	vext.8	q9, q8, q8, #8
   1f4f8:	mov	r5, lr
   1f4fc:	ldr	lr, [sp, #12]
   1f500:	ldr	r3, [sp, #20]
   1f504:	vorr	q8, q8, q9
   1f508:	vdup.32	q9, d16[1]
   1f50c:	vorr	q8, q8, q9
   1f510:	vmov.32	r0, d16[0]
   1f514:	cmp	r0, #0
   1f518:	beq	1f810 <__mempcpy_chk@plt+0xe230>
   1f51c:	tst	r7, #2048	; 0x800
   1f520:	beq	1f5e0 <__mempcpy_chk@plt+0xe000>
   1f524:	tst	r7, #4194304	; 0x400000
   1f528:	beq	1f540 <__mempcpy_chk@plt+0xdf60>
   1f52c:	cmp	r3, #1
   1f530:	bne	1f540 <__mempcpy_chk@plt+0xdf60>
   1f534:	mov	r0, r9
   1f538:	vst1.64	{d8-d9}, [r0]!
   1f53c:	b	1f80c <__mempcpy_chk@plt+0xe22c>
   1f540:	ldr	r0, [ip, #92]	; 0x5c
   1f544:	ldr	r7, [sp, #4]
   1f548:	vmov.i32	q8, #0	; 0x00000000
   1f54c:	cmp	r0, #1
   1f550:	ble	1f594 <__mempcpy_chk@plt+0xdfb4>
   1f554:	ldr	r0, [ip, #60]	; 0x3c
   1f558:	mov	r1, #0
   1f55c:	add	r2, r0, r1
   1f560:	add	r3, r7, r1
   1f564:	vld1.32	{d20-d21}, [r2]
   1f568:	vld1.32	{d18-d19}, [r3]
   1f56c:	add	r2, r9, r1
   1f570:	add	r1, r1, #16
   1f574:	vld1.32	{d22-d23}, [r2]
   1f578:	cmp	r1, #32
   1f57c:	vand	q9, q10, q9
   1f580:	vbic	q9, q11, q9
   1f584:	vorr	q8, q9, q8
   1f588:	vst1.32	{d18-d19}, [r2]
   1f58c:	bne	1f55c <__mempcpy_chk@plt+0xdf7c>
   1f590:	b	1f5c0 <__mempcpy_chk@plt+0xdfe0>
   1f594:	mov	r0, #0
   1f598:	add	r1, r9, r0
   1f59c:	add	r2, r7, r0
   1f5a0:	add	r0, r0, #16
   1f5a4:	vld1.32	{d18-d19}, [r2]
   1f5a8:	vld1.32	{d20-d21}, [r1]
   1f5ac:	cmp	r0, #32
   1f5b0:	vbic	q9, q10, q9
   1f5b4:	vorr	q8, q9, q8
   1f5b8:	vst1.32	{d18-d19}, [r1]
   1f5bc:	bne	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f5c0:	vext.8	q9, q8, q8, #8
   1f5c4:	ldr	r3, [sp, #20]
   1f5c8:	vorr	q8, q8, q9
   1f5cc:	vdup.32	q9, d16[1]
   1f5d0:	vorr	q8, q8, q9
   1f5d4:	vmov.32	r0, d16[0]
   1f5d8:	cmp	r0, #0
   1f5dc:	beq	1f810 <__mempcpy_chk@plt+0xe230>
   1f5e0:	mov	r7, #0
   1f5e4:	cmp	r6, #1
   1f5e8:	blt	1f78c <__mempcpy_chk@plt+0xe1ac>
   1f5ec:	add	sl, sp, #32
   1f5f0:	cmp	r3, #1
   1f5f4:	bne	1f620 <__mempcpy_chk@plt+0xe040>
   1f5f8:	ldr	r1, [sp, #8]
   1f5fc:	add	r0, sp, #32
   1f600:	add	r0, r0, r7, lsl #5
   1f604:	ldrb	r1, [r1, lr, lsl #3]
   1f608:	ubfx	r2, r1, #5, #3
   1f60c:	and	r1, r1, #31
   1f610:	ldr	r0, [r0, r2, lsl #2]
   1f614:	mov	r2, #1
   1f618:	tst	r0, r2, lsl r1
   1f61c:	beq	1f774 <__mempcpy_chk@plt+0xe194>
   1f620:	vmov.i32	q8, #0	; 0x00000000
   1f624:	mov	r0, #0
   1f628:	add	r1, sl, r0
   1f62c:	add	r2, r9, r0
   1f630:	vld1.32	{d20-d21}, [r1]
   1f634:	vld1.32	{d18-d19}, [r2]
   1f638:	add	r1, r4, r0
   1f63c:	add	r0, r0, #16
   1f640:	cmp	r0, #32
   1f644:	vand	q9, q10, q9
   1f648:	vorr	q8, q9, q8
   1f64c:	vst1.32	{d18-d19}, [r1]
   1f650:	bne	1f628 <__mempcpy_chk@plt+0xe048>
   1f654:	vext.8	q9, q8, q8, #8
   1f658:	vorr	q8, q8, q9
   1f65c:	vdup.32	q9, d16[1]
   1f660:	vorr	q8, q8, q9
   1f664:	vmov.32	r0, d16[0]
   1f668:	cmp	r0, #0
   1f66c:	beq	1f774 <__mempcpy_chk@plt+0xe194>
   1f670:	vmov.i32	q5, #0	; 0x00000000
   1f674:	vmov.i32	q8, #0	; 0x00000000
   1f678:	mov	r0, #0
   1f67c:	add	r1, r9, r0
   1f680:	add	r2, sl, r0
   1f684:	vld1.32	{d18-d19}, [r2]
   1f688:	vld1.32	{d20-d21}, [r1]
   1f68c:	add	r2, r8, r0
   1f690:	add	r0, r0, #16
   1f694:	cmp	r0, #32
   1f698:	vbic	q11, q10, q9
   1f69c:	vbic	q9, q9, q10
   1f6a0:	vorr	q5, q11, q5
   1f6a4:	vorr	q8, q9, q8
   1f6a8:	vst1.32	{d18-d19}, [r2]
   1f6ac:	vst1.32	{d22-d23}, [r1]
   1f6b0:	bne	1f67c <__mempcpy_chk@plt+0xe09c>
   1f6b4:	vext.8	q9, q8, q8, #8
   1f6b8:	vorr	q8, q8, q9
   1f6bc:	vdup.32	q9, d16[1]
   1f6c0:	vorr	q8, q8, q9
   1f6c4:	vmov.32	r0, d16[0]
   1f6c8:	cmp	r0, #0
   1f6cc:	beq	1f728 <__mempcpy_chk@plt+0xe148>
   1f6d0:	mov	r0, r8
   1f6d4:	add	r2, sp, #32
   1f6d8:	mov	r1, r4
   1f6dc:	vld1.32	{d16-d17}, [r0]!
   1f6e0:	mov	r3, r2
   1f6e4:	add	r2, r2, r6, lsl #5
   1f6e8:	vld1.32	{d18-d19}, [r1]!
   1f6ec:	vld1.64	{d20-d21}, [r0]
   1f6f0:	add	r0, r3, r7, lsl #5
   1f6f4:	vst1.32	{d16-d17}, [r2]!
   1f6f8:	vld1.64	{d16-d17}, [r1]
   1f6fc:	add	r1, r7, r7, lsl #1
   1f700:	vst1.32	{d20-d21}, [r2]
   1f704:	vst1.32	{d18-d19}, [r0]!
   1f708:	add	r1, r5, r1, lsl #2
   1f70c:	vst1.32	{d16-d17}, [r0]
   1f710:	add	r0, r6, r6, lsl #1
   1f714:	add	r0, r5, r0, lsl #2
   1f718:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   1f71c:	cmp	r0, #0
   1f720:	bne	1fbd4 <__mempcpy_chk@plt+0xe5f4>
   1f724:	add	r6, r6, #1
   1f728:	ldr	r0, [sp, #16]
   1f72c:	ldr	r1, [sp, #24]
   1f730:	ldr	r0, [r0, #12]
   1f734:	ldr	r1, [r0, r1, lsl #2]
   1f738:	add	r0, r7, r7, lsl #1
   1f73c:	add	r0, r5, r0, lsl #2
   1f740:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1f744:	cmp	r0, #0
   1f748:	beq	1fbd4 <__mempcpy_chk@plt+0xe5f4>
   1f74c:	vext.8	q8, q5, q8, #8
   1f750:	vorr	q8, q5, q8
   1f754:	vdup.32	q9, d16[1]
   1f758:	vorr	q8, q8, q9
   1f75c:	vmov.32	r0, d16[0]
   1f760:	cmp	r0, #0
   1f764:	beq	1f788 <__mempcpy_chk@plt+0xe1a8>
   1f768:	ldr	ip, [sp, #28]
   1f76c:	ldr	lr, [sp, #12]
   1f770:	ldr	r3, [sp, #20]
   1f774:	add	r7, r7, #1
   1f778:	add	sl, sl, #32
   1f77c:	cmp	r7, r6
   1f780:	blt	1f5f0 <__mempcpy_chk@plt+0xe010>
   1f784:	b	1f78c <__mempcpy_chk@plt+0xe1ac>
   1f788:	ldr	ip, [sp, #28]
   1f78c:	ldr	sl, [sp, #16]
   1f790:	cmp	r7, r6
   1f794:	bne	1f810 <__mempcpy_chk@plt+0xe230>
   1f798:	mov	r0, r9
   1f79c:	ldr	r1, [sp, #24]
   1f7a0:	vld1.32	{d16-d17}, [r0]!
   1f7a4:	vld1.64	{d18-d19}, [r0]
   1f7a8:	add	r0, sp, #32
   1f7ac:	add	r0, r0, r7, lsl #5
   1f7b0:	vst1.32	{d16-d17}, [r0]!
   1f7b4:	vst1.32	{d18-d19}, [r0]
   1f7b8:	ldr	r0, [sl, #12]
   1f7bc:	ldr	sl, [r0, r1, lsl #2]
   1f7c0:	add	r0, r7, r7, lsl #1
   1f7c4:	mov	r1, #1
   1f7c8:	str	r1, [r5, r0, lsl #2]
   1f7cc:	add	r5, r5, r0, lsl #2
   1f7d0:	mov	r0, #4
   1f7d4:	mov	r6, r5
   1f7d8:	str	r1, [r6, #4]!
   1f7dc:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1f7e0:	cmp	r0, #0
   1f7e4:	str	r0, [r5, #8]
   1f7e8:	beq	1fbfc <__mempcpy_chk@plt+0xe61c>
   1f7ec:	str	sl, [r0]
   1f7f0:	ldr	ip, [sp, #28]
   1f7f4:	ldr	sl, [sp, #16]
   1f7f8:	mov	r0, r9
   1f7fc:	sub	lr, fp, #6144	; 0x1800
   1f800:	add	r6, r7, #1
   1f804:	vst1.64	{d8-d9}, [r0]!
   1f808:	sub	r5, lr, #120	; 0x78
   1f80c:	vst1.64	{d8-d9}, [r0]
   1f810:	ldr	r1, [sp, #24]
   1f814:	ldr	r0, [sl, #8]
   1f818:	add	r1, r1, #1
   1f81c:	cmp	r1, r0
   1f820:	blt	1f29c <__mempcpy_chk@plt+0xdcbc>
   1f824:	mov	r0, #0
   1f828:	cmp	r6, #0
   1f82c:	ble	1fc14 <__mempcpy_chk@plt+0xe634>
   1f830:	str	r0, [fp, #-3152]	; 0xfffff3b0
   1f834:	add	r0, r6, #1
   1f838:	str	r6, [sp, #20]
   1f83c:	str	r0, [fp, #-3156]	; 0xfffff3ac
   1f840:	lsl	r0, r0, #2
   1f844:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1f848:	cmp	r0, #0
   1f84c:	str	r0, [fp, #-3148]	; 0xfffff3b4
   1f850:	mov	r0, #0
   1f854:	movweq	r0, #12
   1f858:	str	r0, [fp, #-72]	; 0xffffffb8
   1f85c:	beq	1fc40 <__mempcpy_chk@plt+0xe660>
   1f860:	vmov.i32	q8, #0	; 0x00000000
   1f864:	sub	lr, fp, #3072	; 0xc00
   1f868:	ldr	r1, [sp, #28]
   1f86c:	add	r7, sp, #32
   1f870:	mov	r4, #0
   1f874:	mov	r2, #0
   1f878:	sub	r0, lr, #120	; 0x78
   1f87c:	vst1.64	{d16-d17}, [r0]!
   1f880:	vst1.64	{d16-d17}, [r0]
   1f884:	mov	r0, #0
   1f888:	str	r0, [sp, #12]
   1f88c:	mov	r0, #0
   1f890:	str	r2, [sp, #24]
   1f894:	str	r0, [fp, #-3152]	; 0xfffff3b0
   1f898:	add	r0, r2, r2, lsl #1
   1f89c:	add	r0, r5, r0, lsl #2
   1f8a0:	ldr	r6, [r0, #4]
   1f8a4:	cmp	r6, #1
   1f8a8:	blt	1f90c <__mempcpy_chk@plt+0xe32c>
   1f8ac:	ldr	sl, [r0, #8]
   1f8b0:	mov	r5, #0
   1f8b4:	ldr	r0, [sl, r5, lsl #2]
   1f8b8:	ldr	r2, [r1, #12]
   1f8bc:	ldr	r0, [r2, r0, lsl #2]
   1f8c0:	cmn	r0, #1
   1f8c4:	beq	1f8f0 <__mempcpy_chk@plt+0xe310>
   1f8c8:	ldr	r1, [r1, #24]
   1f8cc:	add	r0, r0, r0, lsl #1
   1f8d0:	sub	lr, fp, #3072	; 0xc00
   1f8d4:	add	r1, r1, r0, lsl #2
   1f8d8:	sub	r0, lr, #84	; 0x54
   1f8dc:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   1f8e0:	ldr	r1, [sp, #28]
   1f8e4:	mov	r4, #0
   1f8e8:	cmp	r0, #0
   1f8ec:	bne	1fb94 <__mempcpy_chk@plt+0xe5b4>
   1f8f0:	add	r5, r5, #1
   1f8f4:	cmp	r5, r6
   1f8f8:	blt	1f8b4 <__mempcpy_chk@plt+0xe2d4>
   1f8fc:	ldr	sl, [sp, #16]
   1f900:	sub	lr, fp, #6144	; 0x1800
   1f904:	str	r4, [fp, #-72]	; 0xffffffb8
   1f908:	sub	r5, lr, #120	; 0x78
   1f90c:	sub	lr, fp, #3072	; 0xc00
   1f910:	sub	r0, fp, #72	; 0x48
   1f914:	mov	r3, #0
   1f918:	sub	r2, lr, #84	; 0x54
   1f91c:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1f920:	ldr	r1, [sp, #24]
   1f924:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1f928:	mov	r6, r0
   1f92c:	cmp	r0, #0
   1f930:	str	r0, [r9, r1, lsl #2]
   1f934:	bne	1f940 <__mempcpy_chk@plt+0xe360>
   1f938:	cmp	r4, #0
   1f93c:	bne	1fba0 <__mempcpy_chk@plt+0xe5c0>
   1f940:	ldrsb	r0, [r6, #52]	; 0x34
   1f944:	cmn	r0, #1
   1f948:	ble	1f960 <__mempcpy_chk@plt+0xe380>
   1f94c:	sub	lr, fp, #2048	; 0x800
   1f950:	str	r6, [r8, r1, lsl #2]
   1f954:	sub	r0, lr, #72	; 0x48
   1f958:	str	r6, [r0, r1, lsl #2]
   1f95c:	b	1f9fc <__mempcpy_chk@plt+0xe41c>
   1f960:	ldr	r1, [sp, #28]
   1f964:	sub	lr, fp, #3072	; 0xc00
   1f968:	sub	r0, fp, #72	; 0x48
   1f96c:	mov	r3, #1
   1f970:	sub	r2, lr, #84	; 0x54
   1f974:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1f978:	ldr	r2, [sp, #24]
   1f97c:	sub	lr, fp, #2048	; 0x800
   1f980:	cmp	r0, #0
   1f984:	sub	r1, lr, #72	; 0x48
   1f988:	str	r0, [r1, r2, lsl #2]
   1f98c:	bne	1f99c <__mempcpy_chk@plt+0xe3bc>
   1f990:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1f994:	cmp	r1, #0
   1f998:	bne	1fba0 <__mempcpy_chk@plt+0xe5c0>
   1f99c:	cmp	r6, r0
   1f9a0:	beq	1f9c8 <__mempcpy_chk@plt+0xe3e8>
   1f9a4:	ldr	r1, [sp, #28]
   1f9a8:	ldr	r2, [sp, #12]
   1f9ac:	ldr	r0, [r1, #92]	; 0x5c
   1f9b0:	cmp	r0, #1
   1f9b4:	mov	r0, #0
   1f9b8:	movwgt	r0, #1
   1f9bc:	orr	r2, r2, r0
   1f9c0:	str	r2, [sp, #12]
   1f9c4:	b	1f9cc <__mempcpy_chk@plt+0xe3ec>
   1f9c8:	ldr	r1, [sp, #28]
   1f9cc:	sub	lr, fp, #3072	; 0xc00
   1f9d0:	sub	r0, fp, #72	; 0x48
   1f9d4:	mov	r3, #2
   1f9d8:	sub	r2, lr, #84	; 0x54
   1f9dc:	bl	1c55c <__mempcpy_chk@plt+0xaf7c>
   1f9e0:	ldr	r1, [sp, #24]
   1f9e4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1f9e8:	cmp	r0, #0
   1f9ec:	str	r0, [r8, r1, lsl #2]
   1f9f0:	bne	1f9fc <__mempcpy_chk@plt+0xe41c>
   1f9f4:	cmp	r4, #0
   1f9f8:	bne	1fba0 <__mempcpy_chk@plt+0xe5c0>
   1f9fc:	sub	lr, fp, #3072	; 0xc00
   1fa00:	mov	r0, #0
   1fa04:	sub	r1, lr, #120	; 0x78
   1fa08:	add	r2, r1, r0
   1fa0c:	add	r3, r7, r0
   1fa10:	add	r0, r0, #16
   1fa14:	vld1.32	{d16-d17}, [r3]
   1fa18:	vld1.32	{d18-d19}, [r2]
   1fa1c:	cmp	r0, #32
   1fa20:	vorr	q8, q9, q8
   1fa24:	vst1.32	{d16-d17}, [r2]
   1fa28:	bne	1fa08 <__mempcpy_chk@plt+0xe428>
   1fa2c:	ldr	r2, [sp, #24]
   1fa30:	ldr	r0, [sp, #20]
   1fa34:	ldr	r1, [sp, #28]
   1fa38:	add	r7, r7, #32
   1fa3c:	add	r2, r2, #1
   1fa40:	cmp	r2, r0
   1fa44:	bne	1f88c <__mempcpy_chk@plt+0xe2ac>
   1fa48:	ldr	r0, [sp, #12]
   1fa4c:	tst	r0, #1
   1fa50:	bne	1fc50 <__mempcpy_chk@plt+0xe670>
   1fa54:	mov	r0, #4
   1fa58:	mov	r1, #256	; 0x100
   1fa5c:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1fa60:	cmp	r0, #0
   1fa64:	str	r0, [sl, #44]	; 0x2c
   1fa68:	beq	1fba0 <__mempcpy_chk@plt+0xe5c0>
   1fa6c:	ldr	r4, [sp, #28]
   1fa70:	mov	sl, r0
   1fa74:	mov	r1, #0
   1fa78:	add	ip, sp, #32
   1fa7c:	mov	r3, #0
   1fa80:	sub	lr, fp, #3072	; 0xc00
   1fa84:	sub	r0, lr, #120	; 0x78
   1fa88:	ldr	r7, [r0, r3, lsl #2]
   1fa8c:	cmp	r7, #0
   1fa90:	beq	1fb0c <__mempcpy_chk@plt+0xe52c>
   1fa94:	add	r6, r4, r3, lsl #2
   1fa98:	lsl	r5, r3, #5
   1fa9c:	add	r0, r6, #96	; 0x60
   1faa0:	mov	r6, #1
   1faa4:	tst	r7, #1
   1faa8:	bne	1fac8 <__mempcpy_chk@plt+0xe4e8>
   1faac:	lsr	r2, r7, #1
   1fab0:	cmp	r1, r7, lsr #1
   1fab4:	add	r5, r5, #1
   1fab8:	lsl	r6, r6, #1
   1fabc:	mov	r7, r2
   1fac0:	bne	1faa4 <__mempcpy_chk@plt+0xe4c4>
   1fac4:	b	1fb0c <__mempcpy_chk@plt+0xe52c>
   1fac8:	mov	r4, sl
   1facc:	mov	lr, #0
   1fad0:	ldr	sl, [ip, lr, lsl #3]
   1fad4:	add	lr, lr, #4
   1fad8:	tst	sl, r6
   1fadc:	beq	1fad0 <__mempcpy_chk@plt+0xe4f0>
   1fae0:	ldr	r2, [r0]
   1fae4:	mov	sl, r4
   1fae8:	tst	r2, r6
   1faec:	sub	r2, fp, #2048	; 0x800
   1faf0:	sub	r2, r2, #72	; 0x48
   1faf4:	moveq	r2, r9
   1faf8:	add	r2, r2, lr
   1fafc:	ldr	r2, [r2, #-4]
   1fb00:	str	r2, [r4, r5, lsl #2]
   1fb04:	ldr	r4, [sp, #28]
   1fb08:	b	1faac <__mempcpy_chk@plt+0xe4cc>
   1fb0c:	add	r3, r3, #1
   1fb10:	add	ip, ip, #4
   1fb14:	cmp	r3, #8
   1fb18:	bne	1fa80 <__mempcpy_chk@plt+0xe4a0>
   1fb1c:	ldrb	r0, [fp, #-3191]	; 0xfffff389
   1fb20:	ldr	r5, [sp, #20]
   1fb24:	sub	lr, fp, #6144	; 0x1800
   1fb28:	sub	r4, lr, #120	; 0x78
   1fb2c:	tst	r0, #4
   1fb30:	beq	1fb70 <__mempcpy_chk@plt+0xe590>
   1fb34:	add	r1, sp, #32
   1fb38:	mov	r2, r5
   1fb3c:	ldrb	r0, [r1, #1]
   1fb40:	tst	r0, #4
   1fb44:	bne	1fb5c <__mempcpy_chk@plt+0xe57c>
   1fb48:	add	r1, r1, #32
   1fb4c:	subs	r2, r2, #1
   1fb50:	add	r8, r8, #4
   1fb54:	bne	1fb3c <__mempcpy_chk@plt+0xe55c>
   1fb58:	b	1fb70 <__mempcpy_chk@plt+0xe590>
   1fb5c:	ldr	r0, [sp, #12]
   1fb60:	ldr	r1, [r8]
   1fb64:	tst	r0, #1
   1fb68:	str	r1, [sl, #40]	; 0x28
   1fb6c:	strne	r1, [sl, #1064]	; 0x428
   1fb70:	ldr	r0, [fp, #-3148]	; 0xfffff3b4
   1fb74:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1fb78:	add	r4, r4, #8
   1fb7c:	ldr	r0, [r4], #12
   1fb80:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1fb84:	subs	r5, r5, #1
   1fb88:	bne	1fb7c <__mempcpy_chk@plt+0xe59c>
   1fb8c:	mov	r0, #1
   1fb90:	b	1fc30 <__mempcpy_chk@plt+0xe650>
   1fb94:	sub	lr, fp, #6144	; 0x1800
   1fb98:	str	r0, [fp, #-72]	; 0xffffffb8
   1fb9c:	sub	r5, lr, #120	; 0x78
   1fba0:	ldr	r0, [fp, #-3148]	; 0xfffff3b4
   1fba4:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1fba8:	ldr	r1, [sp, #20]
   1fbac:	cmp	r1, #1
   1fbb0:	blt	1fbf4 <__mempcpy_chk@plt+0xe614>
   1fbb4:	add	r4, r5, #8
   1fbb8:	ldr	r0, [r4], #12
   1fbbc:	mov	r5, r1
   1fbc0:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1fbc4:	mov	r1, r5
   1fbc8:	subs	r1, r5, #1
   1fbcc:	bne	1fbb8 <__mempcpy_chk@plt+0xe5d8>
   1fbd0:	b	1fbf4 <__mempcpy_chk@plt+0xe614>
   1fbd4:	mov	r7, r6
   1fbd8:	cmp	r7, #1
   1fbdc:	blt	1fbf4 <__mempcpy_chk@plt+0xe614>
   1fbe0:	add	r4, r5, #8
   1fbe4:	ldr	r0, [r4], #12
   1fbe8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1fbec:	subs	r7, r7, #1
   1fbf0:	bne	1fbe4 <__mempcpy_chk@plt+0xe604>
   1fbf4:	mov	r0, #0
   1fbf8:	b	1fc30 <__mempcpy_chk@plt+0xe650>
   1fbfc:	mov	r0, #0
   1fc00:	sub	lr, fp, #6144	; 0x1800
   1fc04:	str	r0, [r6]
   1fc08:	str	r0, [r5]
   1fc0c:	sub	r5, lr, #120	; 0x78
   1fc10:	b	1fbd8 <__mempcpy_chk@plt+0xe5f8>
   1fc14:	bne	1fc30 <__mempcpy_chk@plt+0xe650>
   1fc18:	mov	r0, #4
   1fc1c:	mov	r1, #256	; 0x100
   1fc20:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1fc24:	cmp	r0, #0
   1fc28:	str	r0, [sl, #44]	; 0x2c
   1fc2c:	movwne	r0, #1
   1fc30:	sub	sp, fp, #64	; 0x40
   1fc34:	vpop	{d8-d11}
   1fc38:	add	sp, sp, #4
   1fc3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc40:	ldr	r0, [fp, #-3148]	; 0xfffff3b4
   1fc44:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1fc48:	ldr	r1, [sp, #20]
   1fc4c:	b	1fbb4 <__mempcpy_chk@plt+0xe5d4>
   1fc50:	mov	r0, #4
   1fc54:	mov	r1, #512	; 0x200
   1fc58:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   1fc5c:	cmp	r0, #0
   1fc60:	str	r0, [sl, #48]	; 0x30
   1fc64:	beq	1fba0 <__mempcpy_chk@plt+0xe5c0>
   1fc68:	sub	lr, fp, #2048	; 0x800
   1fc6c:	mov	sl, r0
   1fc70:	sub	ip, r9, #4
   1fc74:	mov	r3, #0
   1fc78:	add	r7, sp, #32
   1fc7c:	mov	r6, #0
   1fc80:	sub	r0, lr, #72	; 0x48
   1fc84:	sub	lr, r0, #4
   1fc88:	sub	r0, fp, #3072	; 0xc00
   1fc8c:	sub	r0, r0, #120	; 0x78
   1fc90:	ldr	r5, [r0, r6, lsl #2]
   1fc94:	cmp	r5, #0
   1fc98:	beq	1fd08 <__mempcpy_chk@plt+0xe728>
   1fc9c:	lsl	r4, r6, #5
   1fca0:	mov	r1, #1
   1fca4:	tst	r5, #1
   1fca8:	bne	1fcc8 <__mempcpy_chk@plt+0xe6e8>
   1fcac:	lsr	r0, r5, #1
   1fcb0:	cmp	r3, r5, lsr #1
   1fcb4:	add	r4, r4, #1
   1fcb8:	lsl	r1, r1, #1
   1fcbc:	mov	r5, r0
   1fcc0:	bne	1fca4 <__mempcpy_chk@plt+0xe6c4>
   1fcc4:	b	1fd08 <__mempcpy_chk@plt+0xe728>
   1fcc8:	str	sl, [sp, #28]
   1fccc:	mov	r2, r7
   1fcd0:	mov	sl, ip
   1fcd4:	mov	r9, lr
   1fcd8:	ldr	r0, [r2], #32
   1fcdc:	add	sl, sl, #4
   1fce0:	add	r9, r9, #4
   1fce4:	tst	r0, r1
   1fce8:	beq	1fcd8 <__mempcpy_chk@plt+0xe6f8>
   1fcec:	ldr	r0, [sl]
   1fcf0:	ldr	sl, [sp, #28]
   1fcf4:	mov	r2, sl
   1fcf8:	str	r0, [r2, r4, lsl #2]!
   1fcfc:	ldr	r0, [r9]
   1fd00:	str	r0, [r2, #1024]	; 0x400
   1fd04:	b	1fcac <__mempcpy_chk@plt+0xe6cc>
   1fd08:	add	r6, r6, #1
   1fd0c:	add	r7, r7, #4
   1fd10:	cmp	r6, #8
   1fd14:	bne	1fc88 <__mempcpy_chk@plt+0xe6a8>
   1fd18:	b	1fb1c <__mempcpy_chk@plt+0xe53c>
   1fd1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd20:	add	fp, sp, #28
   1fd24:	sub	sp, sp, #44	; 0x2c
   1fd28:	ldr	r4, [r1, #8]
   1fd2c:	ldr	r6, [r1, #12]
   1fd30:	mov	r9, r0
   1fd34:	mov	r0, #1
   1fd38:	mov	sl, r1
   1fd3c:	str	r0, [sp, #36]	; 0x24
   1fd40:	str	r0, [sp, #32]
   1fd44:	mov	r0, #4
   1fd48:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   1fd4c:	cmp	r0, #0
   1fd50:	str	r0, [sp, #40]	; 0x28
   1fd54:	beq	1ffa0 <__mempcpy_chk@plt+0xe9c0>
   1fd58:	str	r4, [r0]
   1fd5c:	add	r3, sp, #32
   1fd60:	mov	r0, r9
   1fd64:	mov	r1, sl
   1fd68:	mov	r2, r6
   1fd6c:	bl	20060 <__mempcpy_chk@plt+0xea80>
   1fd70:	cmp	r0, #0
   1fd74:	bne	1ff64 <__mempcpy_chk@plt+0xe984>
   1fd78:	add	r0, sl, #16
   1fd7c:	mov	r1, #0
   1fd80:	str	r0, [sp, #12]
   1fd84:	cmp	r6, #1
   1fd88:	blt	1ff74 <__mempcpy_chk@plt+0xe994>
   1fd8c:	ldr	r0, [sl]
   1fd90:	ldr	r2, [r0, r6, lsl #2]
   1fd94:	cmp	r2, #0
   1fd98:	mov	r2, #0
   1fd9c:	addeq	r2, r1, #1
   1fda0:	ldr	r1, [r9, #120]	; 0x78
   1fda4:	cmp	r2, r1
   1fda8:	bgt	1ff7c <__mempcpy_chk@plt+0xe99c>
   1fdac:	mov	r0, #0
   1fdb0:	str	r6, [sp, #16]
   1fdb4:	sub	r6, r6, #1
   1fdb8:	str	r2, [sp, #8]
   1fdbc:	str	r0, [sp, #36]	; 0x24
   1fdc0:	ldr	r0, [r9, #100]	; 0x64
   1fdc4:	ldr	r1, [r0, r6, lsl #2]
   1fdc8:	cmp	r1, #0
   1fdcc:	beq	1ff44 <__mempcpy_chk@plt+0xe964>
   1fdd0:	ldr	r0, [r1, #20]
   1fdd4:	cmp	r0, #1
   1fdd8:	blt	1ff44 <__mempcpy_chk@plt+0xe964>
   1fddc:	ldr	r0, [r9, #84]	; 0x54
   1fde0:	mov	r5, #0
   1fde4:	str	r1, [sp, #24]
   1fde8:	str	r0, [sp, #28]
   1fdec:	ldr	r0, [r1, #24]
   1fdf0:	ldr	r7, [r0, r5, lsl #2]
   1fdf4:	ldr	r0, [sp, #28]
   1fdf8:	ldr	r0, [r0]
   1fdfc:	add	r0, r0, r7, lsl #3
   1fe00:	ldrb	r0, [r0, #6]
   1fe04:	tst	r0, #16
   1fe08:	bne	1fe64 <__mempcpy_chk@plt+0xe884>
   1fe0c:	ldr	r0, [sp, #28]
   1fe10:	mov	r2, r6
   1fe14:	ldr	r0, [r0]
   1fe18:	add	r1, r0, r7, lsl #3
   1fe1c:	mov	r0, r9
   1fe20:	bl	1f0ec <__mempcpy_chk@plt+0xdb0c>
   1fe24:	cmp	r0, #0
   1fe28:	beq	1ff30 <__mempcpy_chk@plt+0xe950>
   1fe2c:	ldr	r0, [sl]
   1fe30:	ldr	r1, [sp, #16]
   1fe34:	ldr	r0, [r0, r1, lsl #2]
   1fe38:	cmp	r0, #0
   1fe3c:	beq	1ff30 <__mempcpy_chk@plt+0xe950>
   1fe40:	ldr	r1, [sp, #28]
   1fe44:	add	r0, r0, #4
   1fe48:	ldr	r1, [r1, #12]
   1fe4c:	ldr	r1, [r1, r7, lsl #2]
   1fe50:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1fe54:	mov	r4, #1
   1fe58:	cmp	r0, #0
   1fe5c:	bne	1fee4 <__mempcpy_chk@plt+0xe904>
   1fe60:	b	1ff30 <__mempcpy_chk@plt+0xe950>
   1fe64:	ldr	r0, [sl, #12]
   1fe68:	ldr	r8, [r9, #84]	; 0x54
   1fe6c:	mov	r2, r9
   1fe70:	mov	r1, r7
   1fe74:	mov	r3, r6
   1fe78:	str	r0, [sp, #20]
   1fe7c:	mov	r0, r8
   1fe80:	bl	1edf4 <__mempcpy_chk@plt+0xd814>
   1fe84:	mov	r4, r0
   1fe88:	cmp	r0, #1
   1fe8c:	blt	1feac <__mempcpy_chk@plt+0xe8cc>
   1fe90:	ldr	r1, [sp, #20]
   1fe94:	add	r0, r4, r6
   1fe98:	mov	r2, r6
   1fe9c:	cmp	r0, r1
   1fea0:	ble	1feb8 <__mempcpy_chk@plt+0xe8d8>
   1fea4:	mov	r6, r2
   1fea8:	b	1fee4 <__mempcpy_chk@plt+0xe904>
   1feac:	cmp	r4, #0
   1feb0:	bne	1fee4 <__mempcpy_chk@plt+0xe904>
   1feb4:	b	1fe0c <__mempcpy_chk@plt+0xe82c>
   1feb8:	ldr	r1, [sl]
   1febc:	mov	r6, r2
   1fec0:	ldr	r0, [r1, r0, lsl #2]
   1fec4:	cmp	r0, #0
   1fec8:	beq	1fe0c <__mempcpy_chk@plt+0xe82c>
   1fecc:	ldr	r1, [r8, #12]
   1fed0:	add	r0, r0, #4
   1fed4:	ldr	r1, [r1, r7, lsl #2]
   1fed8:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   1fedc:	cmp	r0, #0
   1fee0:	beq	1fe0c <__mempcpy_chk@plt+0xe82c>
   1fee4:	ldr	r0, [sl, #20]
   1fee8:	cmp	r0, #0
   1feec:	beq	1ff1c <__mempcpy_chk@plt+0xe93c>
   1fef0:	ldr	r0, [sp, #28]
   1fef4:	ldr	r1, [sp, #12]
   1fef8:	add	r3, r4, r6
   1fefc:	ldr	r0, [r0, #12]
   1ff00:	ldr	r2, [r0, r7, lsl #2]
   1ff04:	mov	r0, r9
   1ff08:	str	r7, [sp]
   1ff0c:	str	r6, [sp, #4]
   1ff10:	bl	20b54 <__mempcpy_chk@plt+0xf574>
   1ff14:	cmp	r0, #0
   1ff18:	bne	1ff30 <__mempcpy_chk@plt+0xe950>
   1ff1c:	add	r0, sp, #32
   1ff20:	mov	r1, r7
   1ff24:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   1ff28:	cmp	r0, #0
   1ff2c:	beq	1ff6c <__mempcpy_chk@plt+0xe98c>
   1ff30:	ldr	r1, [sp, #24]
   1ff34:	add	r5, r5, #1
   1ff38:	ldr	r0, [r1, #20]
   1ff3c:	cmp	r5, r0
   1ff40:	blt	1fdec <__mempcpy_chk@plt+0xe80c>
   1ff44:	mov	r0, r9
   1ff48:	mov	r1, sl
   1ff4c:	mov	r2, r6
   1ff50:	add	r3, sp, #32
   1ff54:	bl	20060 <__mempcpy_chk@plt+0xea80>
   1ff58:	ldr	r1, [sp, #8]
   1ff5c:	cmp	r0, #0
   1ff60:	beq	1fd84 <__mempcpy_chk@plt+0xe7a4>
   1ff64:	mov	r4, r0
   1ff68:	b	1ff8c <__mempcpy_chk@plt+0xe9ac>
   1ff6c:	mov	r4, #12
   1ff70:	b	1ff8c <__mempcpy_chk@plt+0xe9ac>
   1ff74:	mov	r4, #0
   1ff78:	b	1ff8c <__mempcpy_chk@plt+0xe9ac>
   1ff7c:	lsl	r2, r6, #2
   1ff80:	mov	r1, #0
   1ff84:	mov	r4, #0
   1ff88:	bl	114f0 <memset@plt>
   1ff8c:	ldr	r0, [sp, #40]	; 0x28
   1ff90:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   1ff94:	mov	r0, r4
   1ff98:	sub	sp, fp, #28
   1ff9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffa0:	mov	r0, #0
   1ffa4:	mov	r4, #12
   1ffa8:	str	r0, [sp, #32]
   1ffac:	str	r0, [sp, #36]	; 0x24
   1ffb0:	b	1ff94 <__mempcpy_chk@plt+0xe9b4>
   1ffb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ffb8:	add	fp, sp, #24
   1ffbc:	sub	sp, sp, #16
   1ffc0:	cmp	r3, #1
   1ffc4:	blt	20054 <__mempcpy_chk@plt+0xea74>
   1ffc8:	mov	r4, r3
   1ffcc:	mov	r5, r2
   1ffd0:	mov	r6, r1
   1ffd4:	mov	r7, r0
   1ffd8:	mov	r8, sp
   1ffdc:	add	r9, sp, #12
   1ffe0:	ldr	r1, [r6]
   1ffe4:	ldr	r0, [r5]
   1ffe8:	cmp	r1, #0
   1ffec:	beq	20040 <__mempcpy_chk@plt+0xea60>
   1fff0:	cmp	r0, #0
   1fff4:	beq	20044 <__mempcpy_chk@plt+0xea64>
   1fff8:	add	r2, r0, #4
   1fffc:	add	r1, r1, #4
   20000:	mov	r0, r8
   20004:	bl	1dce0 <__mempcpy_chk@plt+0xc700>
   20008:	cmp	r0, #0
   2000c:	str	r0, [sp, #12]
   20010:	bne	20058 <__mempcpy_chk@plt+0xea78>
   20014:	mov	r0, r9
   20018:	mov	r1, r7
   2001c:	mov	r2, r8
   20020:	bl	1ebfc <__mempcpy_chk@plt+0xd61c>
   20024:	str	r0, [r6]
   20028:	ldr	r0, [sp, #8]
   2002c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20030:	ldr	r0, [sp, #12]
   20034:	cmp	r0, #0
   20038:	beq	20044 <__mempcpy_chk@plt+0xea64>
   2003c:	b	20058 <__mempcpy_chk@plt+0xea78>
   20040:	str	r0, [r6]
   20044:	add	r6, r6, #4
   20048:	add	r5, r5, #4
   2004c:	subs	r4, r4, #1
   20050:	bne	1ffe0 <__mempcpy_chk@plt+0xea00>
   20054:	mov	r0, #0
   20058:	sub	sp, fp, #24
   2005c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20064:	add	fp, sp, #28
   20068:	sub	sp, sp, #84	; 0x54
   2006c:	mov	r6, r3
   20070:	mov	r3, #0
   20074:	ldr	r7, [r0, #84]	; 0x54
   20078:	mov	r4, r2
   2007c:	str	r0, [sp, #44]	; 0x2c
   20080:	str	r1, [sp, #48]	; 0x30
   20084:	str	r3, [sp, #52]	; 0x34
   20088:	str	r4, [sp, #40]	; 0x28
   2008c:	ldr	r2, [r0, #100]	; 0x64
   20090:	ldr	r8, [r2, r4, lsl #2]
   20094:	ldr	r2, [r6, #4]
   20098:	cmp	r8, #0
   2009c:	mov	r0, r8
   200a0:	addne	r0, r0, #4
   200a4:	cmp	r2, #0
   200a8:	str	r0, [sp, #36]	; 0x24
   200ac:	beq	20428 <__mempcpy_chk@plt+0xee48>
   200b0:	cmp	r8, #0
   200b4:	beq	203fc <__mempcpy_chk@plt+0xee1c>
   200b8:	mov	r0, #0
   200bc:	mov	r1, r7
   200c0:	mov	r2, r6
   200c4:	str	r7, [sp, #28]
   200c8:	str	r6, [sp, #20]
   200cc:	str	r0, [sp, #56]	; 0x38
   200d0:	add	r0, sp, #56	; 0x38
   200d4:	bl	1ebfc <__mempcpy_chk@plt+0xd61c>
   200d8:	ldr	r9, [sp, #56]	; 0x38
   200dc:	cmp	r9, #0
   200e0:	bne	20744 <__mempcpy_chk@plt+0xf164>
   200e4:	mov	r6, r0
   200e8:	mov	r5, r0
   200ec:	ldr	r2, [sp, #20]
   200f0:	ldr	r0, [r6, #28]!
   200f4:	cmp	r0, #0
   200f8:	bne	2018c <__mempcpy_chk@plt+0xebac>
   200fc:	ldr	r0, [r2, #4]
   20100:	mov	r4, #0
   20104:	mov	r7, r2
   20108:	str	r0, [r5, #28]
   2010c:	lsl	r0, r0, #2
   20110:	str	r4, [r5, #32]
   20114:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   20118:	cmp	r0, #0
   2011c:	mov	r9, #12
   20120:	str	r0, [r5, #36]	; 0x24
   20124:	movweq	r4, #12
   20128:	str	r4, [sp, #56]	; 0x38
   2012c:	beq	20744 <__mempcpy_chk@plt+0xf164>
   20130:	ldr	r0, [r7, #4]
   20134:	mov	r2, r7
   20138:	cmp	r0, #1
   2013c:	blt	2018c <__mempcpy_chk@plt+0xebac>
   20140:	mov	r5, #0
   20144:	ldr	r0, [r2, #8]
   20148:	ldr	r1, [sp, #28]
   2014c:	mov	r4, r2
   20150:	ldr	r0, [r0, r5, lsl #2]
   20154:	ldr	r1, [r1, #28]
   20158:	add	r0, r0, r0, lsl #1
   2015c:	add	r1, r1, r0, lsl #2
   20160:	mov	r0, r6
   20164:	bl	1c0d0 <__mempcpy_chk@plt+0xaaf0>
   20168:	cmp	r0, #0
   2016c:	bne	20754 <__mempcpy_chk@plt+0xf174>
   20170:	ldr	r0, [r4, #4]
   20174:	add	r5, r5, #1
   20178:	mov	r2, r4
   2017c:	cmp	r5, r0
   20180:	blt	20144 <__mempcpy_chk@plt+0xeb64>
   20184:	mov	r0, #0
   20188:	str	r0, [sp, #56]	; 0x38
   2018c:	ldr	r1, [sp, #36]	; 0x24
   20190:	mov	r0, r2
   20194:	mov	r2, r6
   20198:	bl	20770 <__mempcpy_chk@plt+0xf190>
   2019c:	cmp	r0, #0
   201a0:	str	r0, [sp, #52]	; 0x34
   201a4:	bne	20768 <__mempcpy_chk@plt+0xf188>
   201a8:	ldr	ip, [sp, #48]	; 0x30
   201ac:	ldr	r4, [sp, #40]	; 0x28
   201b0:	ldr	r7, [sp, #28]
   201b4:	ldr	r6, [sp, #20]
   201b8:	ldr	r0, [ip, #20]
   201bc:	cmp	r0, #0
   201c0:	beq	203fc <__mempcpy_chk@plt+0xee1c>
   201c4:	cmp	r0, #1
   201c8:	str	r8, [sp, #12]
   201cc:	blt	203f0 <__mempcpy_chk@plt+0xee10>
   201d0:	ldr	r0, [sp, #44]	; 0x2c
   201d4:	mov	r8, #0
   201d8:	ldr	r0, [r0, #116]	; 0x74
   201dc:	str	r0, [sp, #24]
   201e0:	ldr	r0, [ip, #24]
   201e4:	ldr	r1, [sp, #24]
   201e8:	ldr	r0, [r0, r8, lsl #2]
   201ec:	add	r0, r0, r0, lsl #1
   201f0:	add	r1, r1, r0, lsl #3
   201f4:	ldr	r2, [r1, #8]
   201f8:	cmp	r2, r4
   201fc:	bge	203e0 <__mempcpy_chk@plt+0xee00>
   20200:	ldr	r1, [r1, #4]
   20204:	cmp	r1, r4
   20208:	blt	203e0 <__mempcpy_chk@plt+0xee00>
   2020c:	ldr	r1, [sp, #24]
   20210:	ldr	r2, [r7]
   20214:	ldr	r0, [r1, r0, lsl #3]!
   20218:	ldr	r1, [r1, #12]
   2021c:	ldr	sl, [r2, r0, lsl #3]
   20220:	ldr	r0, [r6, #4]
   20224:	cmp	r1, r4
   20228:	bne	20370 <__mempcpy_chk@plt+0xed90>
   2022c:	cmp	r0, #1
   20230:	blt	203e0 <__mempcpy_chk@plt+0xee00>
   20234:	ldr	r3, [r6, #8]
   20238:	mvn	r1, #0
   2023c:	str	r1, [sp, #32]
   20240:	mvn	r1, #0
   20244:	ldr	r5, [r3]
   20248:	add	r4, r2, r5, lsl #3
   2024c:	ldrb	r4, [r4, #4]
   20250:	cmp	r4, #9
   20254:	beq	20270 <__mempcpy_chk@plt+0xec90>
   20258:	cmp	r4, #8
   2025c:	bne	20284 <__mempcpy_chk@plt+0xeca4>
   20260:	ldr	r4, [r2, r5, lsl #3]
   20264:	cmp	sl, r4
   20268:	moveq	r1, r5
   2026c:	b	20284 <__mempcpy_chk@plt+0xeca4>
   20270:	ldr	r4, [r2, r5, lsl #3]
   20274:	cmp	sl, r4
   20278:	ldr	r4, [sp, #32]
   2027c:	moveq	r4, r5
   20280:	str	r4, [sp, #32]
   20284:	add	r3, r3, #4
   20288:	subs	r0, r0, #1
   2028c:	bne	20244 <__mempcpy_chk@plt+0xec64>
   20290:	cmp	r1, #0
   20294:	bmi	202bc <__mempcpy_chk@plt+0xecdc>
   20298:	ldr	r3, [sp, #36]	; 0x24
   2029c:	mov	r0, r7
   202a0:	mov	r2, r6
   202a4:	bl	20950 <__mempcpy_chk@plt+0xf370>
   202a8:	ldr	r6, [sp, #20]
   202ac:	ldr	r7, [sp, #28]
   202b0:	ldr	ip, [sp, #48]	; 0x30
   202b4:	cmp	r0, #0
   202b8:	bne	20740 <__mempcpy_chk@plt+0xf160>
   202bc:	ldr	sl, [sp, #32]
   202c0:	ldr	r4, [sp, #40]	; 0x28
   202c4:	cmp	sl, #0
   202c8:	bmi	203e0 <__mempcpy_chk@plt+0xee00>
   202cc:	ldr	r0, [r6, #4]
   202d0:	cmp	r0, #1
   202d4:	str	r0, [sp, #16]
   202d8:	blt	203e0 <__mempcpy_chk@plt+0xee00>
   202dc:	mov	r5, #0
   202e0:	ldr	r0, [r6, #8]
   202e4:	mov	r1, sl
   202e8:	ldr	r6, [r0, r5, lsl #2]
   202ec:	ldr	r0, [r7, #28]
   202f0:	add	r9, r6, r6, lsl #1
   202f4:	add	r0, r0, r9, lsl #2
   202f8:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   202fc:	cmp	r0, #0
   20300:	bne	2031c <__mempcpy_chk@plt+0xed3c>
   20304:	ldr	r0, [r7, #24]
   20308:	mov	r1, sl
   2030c:	add	r0, r0, r9, lsl #2
   20310:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20314:	cmp	r0, #0
   20318:	beq	2033c <__mempcpy_chk@plt+0xed5c>
   2031c:	ldr	r6, [sp, #20]
   20320:	ldr	r0, [sp, #16]
   20324:	ldr	r4, [sp, #40]	; 0x28
   20328:	ldr	ip, [sp, #48]	; 0x30
   2032c:	add	r5, r5, #1
   20330:	cmp	r5, r0
   20334:	blt	202e0 <__mempcpy_chk@plt+0xed00>
   20338:	b	203e0 <__mempcpy_chk@plt+0xee00>
   2033c:	mov	r1, r6
   20340:	ldr	r6, [sp, #20]
   20344:	ldr	r3, [sp, #36]	; 0x24
   20348:	mov	r0, r7
   2034c:	mov	r2, r6
   20350:	bl	20950 <__mempcpy_chk@plt+0xf370>
   20354:	cmp	r0, #0
   20358:	bne	20740 <__mempcpy_chk@plt+0xf160>
   2035c:	ldr	r0, [r6, #4]
   20360:	ldr	r7, [sp, #28]
   20364:	sub	r5, r5, #1
   20368:	str	r0, [sp, #16]
   2036c:	b	20320 <__mempcpy_chk@plt+0xed40>
   20370:	cmp	r0, #1
   20374:	blt	203e0 <__mempcpy_chk@plt+0xee00>
   20378:	mov	r5, #0
   2037c:	ldr	r1, [r6, #8]
   20380:	ldr	r1, [r1, r5, lsl #2]
   20384:	add	r3, r2, r1, lsl #3
   20388:	ldrb	r3, [r3, #4]
   2038c:	orr	r3, r3, #1
   20390:	cmp	r3, #9
   20394:	bne	203cc <__mempcpy_chk@plt+0xedec>
   20398:	ldr	r2, [r2, r1, lsl #3]
   2039c:	cmp	sl, r2
   203a0:	bne	203cc <__mempcpy_chk@plt+0xedec>
   203a4:	ldr	r3, [sp, #36]	; 0x24
   203a8:	mov	r0, r7
   203ac:	mov	r2, r6
   203b0:	bl	20950 <__mempcpy_chk@plt+0xf370>
   203b4:	cmp	r0, #0
   203b8:	bne	20740 <__mempcpy_chk@plt+0xf160>
   203bc:	ldr	r0, [r6, #4]
   203c0:	ldr	r4, [sp, #40]	; 0x28
   203c4:	ldr	ip, [sp, #48]	; 0x30
   203c8:	ldr	r7, [sp, #28]
   203cc:	add	r5, r5, #1
   203d0:	cmp	r5, r0
   203d4:	bge	203e0 <__mempcpy_chk@plt+0xee00>
   203d8:	ldr	r2, [r7]
   203dc:	b	2037c <__mempcpy_chk@plt+0xed9c>
   203e0:	ldr	r0, [ip, #20]
   203e4:	add	r8, r8, #1
   203e8:	cmp	r8, r0
   203ec:	blt	201e0 <__mempcpy_chk@plt+0xec00>
   203f0:	ldr	r8, [sp, #12]
   203f4:	mov	r0, #0
   203f8:	str	r0, [sp, #52]	; 0x34
   203fc:	add	r0, sp, #52	; 0x34
   20400:	mov	r1, r7
   20404:	mov	r2, r6
   20408:	bl	1ebfc <__mempcpy_chk@plt+0xd61c>
   2040c:	ldr	r1, [sp, #48]	; 0x30
   20410:	ldr	r1, [r1]
   20414:	str	r0, [r1, r4, lsl #2]
   20418:	ldr	r9, [sp, #52]	; 0x34
   2041c:	cmp	r9, #0
   20420:	beq	20430 <__mempcpy_chk@plt+0xee50>
   20424:	b	20734 <__mempcpy_chk@plt+0xf154>
   20428:	ldr	r1, [r1]
   2042c:	str	r3, [r1, r4, lsl #2]
   20430:	cmp	r8, #0
   20434:	beq	20730 <__mempcpy_chk@plt+0xf150>
   20438:	ldr	r0, [sp, #44]	; 0x2c
   2043c:	ldr	r1, [sp, #40]	; 0x28
   20440:	ldr	r0, [r0, #100]	; 0x64
   20444:	ldr	r0, [r0, r1, lsl #2]
   20448:	ldrb	r0, [r0, #52]	; 0x34
   2044c:	tst	r0, #64	; 0x40
   20450:	beq	20730 <__mempcpy_chk@plt+0xf150>
   20454:	ldr	r0, [sp, #44]	; 0x2c
   20458:	ldr	r9, [sp, #40]	; 0x28
   2045c:	ldr	r8, [r0, #84]	; 0x54
   20460:	mov	r1, r9
   20464:	bl	1dee8 <__mempcpy_chk@plt+0xc908>
   20468:	cmn	r0, #1
   2046c:	str	r0, [sp, #16]
   20470:	beq	20720 <__mempcpy_chk@plt+0xf140>
   20474:	ldr	r0, [sp, #36]	; 0x24
   20478:	mov	r6, #0
   2047c:	str	r6, [sp, #56]	; 0x38
   20480:	ldr	r0, [r0, #4]
   20484:	cmp	r0, #0
   20488:	ble	2072c <__mempcpy_chk@plt+0xf14c>
   2048c:	ldr	r3, [sp, #48]	; 0x30
   20490:	add	r1, r9, #1
   20494:	mov	r7, #0
   20498:	str	r1, [sp, #8]
   2049c:	add	r1, sp, #56	; 0x38
   204a0:	add	r1, r1, #16
   204a4:	str	r1, [sp, #24]
   204a8:	add	r1, r3, #16
   204ac:	str	r1, [sp, #28]
   204b0:	ldr	r1, [sp, #16]
   204b4:	add	r1, r1, r1, lsl #1
   204b8:	str	r1, [sp, #12]
   204bc:	ldr	r1, [sp, #36]	; 0x24
   204c0:	ldr	r2, [r3, #8]
   204c4:	ldr	r1, [r1, #8]
   204c8:	ldr	sl, [r1, r7, lsl #2]
   204cc:	ldr	r1, [r8]
   204d0:	add	r1, r1, sl, lsl #3
   204d4:	cmp	sl, r2
   204d8:	ldrb	r1, [r1, #4]
   204dc:	bne	204f8 <__mempcpy_chk@plt+0xef18>
   204e0:	cmp	r1, #4
   204e4:	bne	206f0 <__mempcpy_chk@plt+0xf110>
   204e8:	ldr	r1, [r3, #12]
   204ec:	cmp	r1, r9
   204f0:	bne	20500 <__mempcpy_chk@plt+0xef20>
   204f4:	b	206f0 <__mempcpy_chk@plt+0xf110>
   204f8:	cmp	r1, #4
   204fc:	bne	206f0 <__mempcpy_chk@plt+0xf110>
   20500:	ldr	r0, [sp, #44]	; 0x2c
   20504:	ldr	r1, [sp, #12]
   20508:	str	r7, [sp, #20]
   2050c:	ldr	r7, [sp, #16]
   20510:	str	r6, [sp, #32]
   20514:	ldr	r0, [r0, #116]	; 0x74
   20518:	add	r5, r0, r1, lsl #3
   2051c:	ldr	r0, [r5]
   20520:	cmp	r0, sl
   20524:	bne	205b4 <__mempcpy_chk@plt+0xefd4>
   20528:	ldr	r0, [r5, #8]
   2052c:	ldr	r1, [r5, #12]
   20530:	subs	r0, r1, r0
   20534:	add	r6, r0, r9
   20538:	beq	20548 <__mempcpy_chk@plt+0xef68>
   2053c:	ldr	r0, [r8, #12]
   20540:	add	r0, r0, sl, lsl #2
   20544:	b	20558 <__mempcpy_chk@plt+0xef78>
   20548:	ldr	r0, [r8, #20]
   2054c:	add	r1, sl, sl, lsl #1
   20550:	add	r0, r0, r1, lsl #2
   20554:	ldr	r0, [r0, #8]
   20558:	ldr	r1, [r3, #12]
   2055c:	cmp	r6, r1
   20560:	bgt	205b4 <__mempcpy_chk@plt+0xefd4>
   20564:	ldr	r1, [r3]
   20568:	ldr	r1, [r1, r6, lsl #2]
   2056c:	cmp	r1, #0
   20570:	beq	205b4 <__mempcpy_chk@plt+0xefd4>
   20574:	ldr	r4, [r0]
   20578:	add	r0, r1, #4
   2057c:	mov	r1, r4
   20580:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20584:	cmp	r0, #0
   20588:	beq	205ac <__mempcpy_chk@plt+0xefcc>
   2058c:	ldr	r0, [sp, #44]	; 0x2c
   20590:	ldr	r1, [sp, #28]
   20594:	mov	r2, sl
   20598:	mov	r3, r9
   2059c:	stm	sp, {r4, r6}
   205a0:	bl	20b54 <__mempcpy_chk@plt+0xf574>
   205a4:	cmp	r0, #0
   205a8:	beq	205d0 <__mempcpy_chk@plt+0xeff0>
   205ac:	mov	r0, r5
   205b0:	b	206b4 <__mempcpy_chk@plt+0xf0d4>
   205b4:	mov	r0, r5
   205b8:	add	r5, r0, #24
   205bc:	ldrb	r0, [r0, #20]
   205c0:	add	r7, r7, #1
   205c4:	cmp	r0, #0
   205c8:	bne	2051c <__mempcpy_chk@plt+0xef3c>
   205cc:	b	206e0 <__mempcpy_chk@plt+0xf100>
   205d0:	ldr	r0, [sp, #32]
   205d4:	cmp	r0, #0
   205d8:	bne	2060c <__mempcpy_chk@plt+0xf02c>
   205dc:	ldr	r0, [sp, #48]	; 0x30
   205e0:	mov	r1, #12
   205e4:	vld1.32	{d16-d17}, [r0], r1
   205e8:	vld1.32	{d18-d19}, [r0]
   205ec:	add	r0, sp, #56	; 0x38
   205f0:	vst1.64	{d16-d17}, [r0], r1
   205f4:	ldr	r1, [sp, #28]
   205f8:	vst1.32	{d18-d19}, [r0]
   205fc:	ldr	r0, [sp, #24]
   20600:	bl	1c478 <__mempcpy_chk@plt+0xae98>
   20604:	cmp	r0, #0
   20608:	bne	2074c <__mempcpy_chk@plt+0xf16c>
   2060c:	ldr	r4, [sp, #40]	; 0x28
   20610:	ldr	r0, [sp, #24]
   20614:	mov	r1, r7
   20618:	str	r4, [sp, #68]	; 0x44
   2061c:	str	sl, [sp, #64]	; 0x40
   20620:	bl	1c2dc <__mempcpy_chk@plt+0xacfc>
   20624:	cmp	r0, #0
   20628:	beq	2075c <__mempcpy_chk@plt+0xf17c>
   2062c:	ldr	r5, [sp, #56]	; 0x38
   20630:	ldr	r0, [sp, #44]	; 0x2c
   20634:	add	r1, sp, #56	; 0x38
   20638:	ldr	r4, [r5, r4, lsl #2]
   2063c:	bl	1fd1c <__mempcpy_chk@plt+0xe73c>
   20640:	cmp	r0, #0
   20644:	bne	2074c <__mempcpy_chk@plt+0xf16c>
   20648:	ldr	r0, [sp, #48]	; 0x30
   2064c:	ldr	r1, [r0, #4]
   20650:	cmp	r1, #0
   20654:	beq	20670 <__mempcpy_chk@plt+0xf090>
   20658:	ldr	r3, [sp, #8]
   2065c:	mov	r0, r8
   20660:	mov	r2, r5
   20664:	bl	1ffb4 <__mempcpy_chk@plt+0xe9d4>
   20668:	cmp	r0, #0
   2066c:	bne	2074c <__mempcpy_chk@plt+0xf16c>
   20670:	ldr	r9, [sp, #40]	; 0x28
   20674:	ldr	r0, [sp, #24]
   20678:	mov	r1, r7
   2067c:	str	r5, [sp, #32]
   20680:	str	r4, [r5, r9, lsl #2]
   20684:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20688:	subs	r1, r0, #1
   2068c:	blt	206a4 <__mempcpy_chk@plt+0xf0c4>
   20690:	ldr	r2, [sp, #76]	; 0x4c
   20694:	cmp	r2, r0
   20698:	subge	r2, r2, #1
   2069c:	strge	r2, [sp, #76]	; 0x4c
   206a0:	bgt	206bc <__mempcpy_chk@plt+0xf0dc>
   206a4:	ldr	r0, [sp, #44]	; 0x2c
   206a8:	add	r1, r7, r7, lsl #1
   206ac:	ldr	r0, [r0, #116]	; 0x74
   206b0:	add	r0, r0, r1, lsl #3
   206b4:	ldr	r3, [sp, #48]	; 0x30
   206b8:	b	205b8 <__mempcpy_chk@plt+0xefd8>
   206bc:	ldr	r3, [sp, #80]	; 0x50
   206c0:	add	r0, r3, r0, lsl #2
   206c4:	ldr	r3, [r0]
   206c8:	add	r1, r1, #1
   206cc:	cmp	r1, r2
   206d0:	str	r3, [r0, #-4]
   206d4:	add	r0, r0, #4
   206d8:	blt	206c4 <__mempcpy_chk@plt+0xf0e4>
   206dc:	b	206a4 <__mempcpy_chk@plt+0xf0c4>
   206e0:	ldr	r0, [sp, #36]	; 0x24
   206e4:	ldr	r7, [sp, #20]
   206e8:	ldr	r6, [sp, #32]
   206ec:	ldr	r0, [r0, #4]
   206f0:	add	r7, r7, #1
   206f4:	cmp	r7, r0
   206f8:	blt	204bc <__mempcpy_chk@plt+0xeedc>
   206fc:	mov	r9, #0
   20700:	cmp	r6, #0
   20704:	beq	20710 <__mempcpy_chk@plt+0xf130>
   20708:	ldr	r0, [sp, #80]	; 0x50
   2070c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20710:	cmp	r9, #0
   20714:	str	r9, [sp, #52]	; 0x34
   20718:	moveq	r9, #0
   2071c:	b	20734 <__mempcpy_chk@plt+0xf154>
   20720:	mov	r0, #0
   20724:	str	r0, [sp, #52]	; 0x34
   20728:	b	20730 <__mempcpy_chk@plt+0xf150>
   2072c:	str	r6, [sp, #52]	; 0x34
   20730:	mov	r9, #0
   20734:	mov	r0, r9
   20738:	sub	sp, fp, #28
   2073c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20740:	mov	r9, r0
   20744:	str	r9, [sp, #52]	; 0x34
   20748:	b	20734 <__mempcpy_chk@plt+0xf154>
   2074c:	mov	r9, r0
   20750:	b	20760 <__mempcpy_chk@plt+0xf180>
   20754:	str	r0, [sp, #56]	; 0x38
   20758:	b	20744 <__mempcpy_chk@plt+0xf164>
   2075c:	mov	r9, #12
   20760:	ldr	r6, [sp, #56]	; 0x38
   20764:	b	20700 <__mempcpy_chk@plt+0xf120>
   20768:	mov	r9, r0
   2076c:	b	20734 <__mempcpy_chk@plt+0xf154>
   20770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20774:	add	fp, sp, #28
   20778:	sub	sp, sp, #4
   2077c:	mov	r9, r0
   20780:	ldr	r0, [r1, #4]
   20784:	mov	r8, #0
   20788:	cmp	r0, #0
   2078c:	beq	2093c <__mempcpy_chk@plt+0xf35c>
   20790:	mov	r5, r2
   20794:	ldr	r2, [r2, #4]
   20798:	cmp	r2, #0
   2079c:	beq	2093c <__mempcpy_chk@plt+0xf35c>
   207a0:	mov	sl, r1
   207a4:	ldr	r1, [r9, #4]
   207a8:	ldr	r7, [r9]
   207ac:	add	r3, r2, r0
   207b0:	add	r6, r1, r3
   207b4:	cmp	r6, r7
   207b8:	ble	207e8 <__mempcpy_chk@plt+0xf208>
   207bc:	ldr	r0, [r9, #8]
   207c0:	add	r4, r7, r3
   207c4:	lsl	r1, r4, #2
   207c8:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   207cc:	cmp	r0, #0
   207d0:	beq	20948 <__mempcpy_chk@plt+0xf368>
   207d4:	str	r4, [r9]
   207d8:	str	r0, [r9, #8]
   207dc:	ldr	r1, [r9, #4]
   207e0:	ldr	r2, [r5, #4]
   207e4:	ldr	r0, [sl, #4]
   207e8:	ldr	lr, [r5, #8]
   207ec:	ldr	r4, [sl, #8]
   207f0:	add	r3, r0, r1
   207f4:	sub	r7, r1, #1
   207f8:	add	ip, r3, r2
   207fc:	sub	r0, r0, #1
   20800:	sub	r3, r2, #1
   20804:	ldr	r1, [lr, r3, lsl #2]
   20808:	ldr	r6, [r4, r0, lsl #2]
   2080c:	cmp	r6, r1
   20810:	beq	2083c <__mempcpy_chk@plt+0xf25c>
   20814:	blt	2082c <__mempcpy_chk@plt+0xf24c>
   20818:	sub	r6, r0, #1
   2081c:	cmp	r0, #0
   20820:	mov	r0, r6
   20824:	bgt	20808 <__mempcpy_chk@plt+0xf228>
   20828:	b	208a0 <__mempcpy_chk@plt+0xf2c0>
   2082c:	cmp	r2, #2
   20830:	mov	r2, r3
   20834:	bge	20800 <__mempcpy_chk@plt+0xf220>
   20838:	b	208a0 <__mempcpy_chk@plt+0xf2c0>
   2083c:	cmp	r7, #0
   20840:	bmi	2087c <__mempcpy_chk@plt+0xf29c>
   20844:	ldr	r8, [r9, #8]
   20848:	mov	r1, r7
   2084c:	ldr	r7, [r8, r1, lsl #2]
   20850:	cmp	r7, r6
   20854:	ble	2086c <__mempcpy_chk@plt+0xf28c>
   20858:	sub	r7, r1, #1
   2085c:	cmp	r1, #0
   20860:	mov	r1, r7
   20864:	bgt	2084c <__mempcpy_chk@plt+0xf26c>
   20868:	b	2087c <__mempcpy_chk@plt+0xf29c>
   2086c:	mov	r7, r1
   20870:	bne	2087c <__mempcpy_chk@plt+0xf29c>
   20874:	mov	r7, r1
   20878:	b	20888 <__mempcpy_chk@plt+0xf2a8>
   2087c:	ldr	r1, [r9, #8]
   20880:	sub	ip, ip, #1
   20884:	str	r6, [r1, ip, lsl #2]
   20888:	cmp	r0, #1
   2088c:	mov	r8, #0
   20890:	blt	208a0 <__mempcpy_chk@plt+0xf2c0>
   20894:	cmp	r2, #2
   20898:	mov	r2, r3
   2089c:	bge	207fc <__mempcpy_chk@plt+0xf21c>
   208a0:	ldr	r2, [r9, #4]
   208a4:	ldr	lr, [sl, #4]
   208a8:	ldr	r4, [r5, #4]
   208ac:	ldr	r0, [r9, #8]
   208b0:	subs	r1, r2, #1
   208b4:	add	r3, r1, lr
   208b8:	add	r3, r3, r4
   208bc:	sub	r7, r3, ip
   208c0:	add	r6, r7, #1
   208c4:	add	r5, r6, r2
   208c8:	str	r5, [r9, #4]
   208cc:	blt	2092c <__mempcpy_chk@plt+0xf34c>
   208d0:	cmp	r7, #0
   208d4:	bmi	2092c <__mempcpy_chk@plt+0xf34c>
   208d8:	add	r2, r2, r4
   208dc:	add	r2, r2, lr
   208e0:	sub	r2, r2, ip
   208e4:	add	r7, r0, r2, lsl #2
   208e8:	ldr	r2, [r0, r1, lsl #2]
   208ec:	ldr	r5, [r0, r3, lsl #2]
   208f0:	cmp	r5, r2
   208f4:	bgt	20910 <__mempcpy_chk@plt+0xf330>
   208f8:	str	r2, [r7, r1, lsl #2]
   208fc:	sub	r2, r1, #1
   20900:	cmp	r1, #0
   20904:	mov	r1, r2
   20908:	bgt	208e8 <__mempcpy_chk@plt+0xf308>
   2090c:	b	2092c <__mempcpy_chk@plt+0xf34c>
   20910:	str	r5, [r7, r1, lsl #2]
   20914:	sub	r7, r7, #4
   20918:	subs	r6, r6, #1
   2091c:	sub	r3, r3, #1
   20920:	mov	r2, #0
   20924:	bne	208e8 <__mempcpy_chk@plt+0xf308>
   20928:	b	20930 <__mempcpy_chk@plt+0xf350>
   2092c:	mov	r2, r6
   20930:	add	r1, r0, ip, lsl #2
   20934:	lsl	r2, r2, #2
   20938:	bl	1134c <memcpy@plt>
   2093c:	mov	r0, r8
   20940:	sub	sp, fp, #28
   20944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20948:	mov	r8, #12
   2094c:	b	2093c <__mempcpy_chk@plt+0xf35c>
   20950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20954:	add	fp, sp, #28
   20958:	sub	sp, sp, #36	; 0x24
   2095c:	mov	r4, r2
   20960:	mov	r2, r0
   20964:	ldr	r0, [r0, #28]
   20968:	str	r1, [sp, #20]
   2096c:	add	r1, r1, r1, lsl #1
   20970:	mov	r5, #0
   20974:	str	r3, [sp, #4]
   20978:	str	r5, [sp, #28]
   2097c:	str	r5, [sp, #24]
   20980:	str	r5, [sp, #32]
   20984:	add	r1, r0, r1, lsl #2
   20988:	mov	r0, r1
   2098c:	ldr	r7, [r0, #4]!
   20990:	cmp	r7, #1
   20994:	blt	20b38 <__mempcpy_chk@plt+0xf558>
   20998:	add	r8, r1, #8
   2099c:	mov	sl, #0
   209a0:	str	r0, [sp, #8]
   209a4:	str	r1, [sp, #16]
   209a8:	ldr	r0, [r8]
   209ac:	ldr	r1, [sp, #20]
   209b0:	ldr	r0, [r0, sl, lsl #2]
   209b4:	cmp	r0, r1
   209b8:	beq	20a90 <__mempcpy_chk@plt+0xf4b0>
   209bc:	ldr	r1, [r2]
   209c0:	add	r1, r1, r0, lsl #3
   209c4:	ldrb	r1, [r1, #4]
   209c8:	tst	r1, #8
   209cc:	beq	20a90 <__mempcpy_chk@plt+0xf4b0>
   209d0:	ldr	r1, [r2, #20]
   209d4:	add	r0, r0, r0, lsl #1
   209d8:	mvn	r5, #0
   209dc:	mov	r6, r2
   209e0:	str	r0, [sp, #12]
   209e4:	add	r0, r1, r0, lsl #2
   209e8:	ldr	r1, [r0, #4]
   209ec:	ldr	r0, [r0, #8]
   209f0:	cmp	r1, #2
   209f4:	ldr	r9, [r0]
   209f8:	ldrge	r5, [r0, #4]
   209fc:	ldr	r0, [sp, #16]
   20a00:	mov	r1, r9
   20a04:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20a08:	cmp	r0, #0
   20a0c:	mov	r2, r6
   20a10:	beq	20a4c <__mempcpy_chk@plt+0xf46c>
   20a14:	cmp	r5, #1
   20a18:	blt	20a90 <__mempcpy_chk@plt+0xf4b0>
   20a1c:	ldr	r0, [sp, #16]
   20a20:	mov	r1, r5
   20a24:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20a28:	cmp	r0, #0
   20a2c:	bne	20a8c <__mempcpy_chk@plt+0xf4ac>
   20a30:	mov	r0, r4
   20a34:	mov	r1, r5
   20a38:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20a3c:	cmp	r0, #0
   20a40:	mov	r2, r6
   20a44:	bne	20a64 <__mempcpy_chk@plt+0xf484>
   20a48:	b	20a90 <__mempcpy_chk@plt+0xf4b0>
   20a4c:	mov	r0, r4
   20a50:	mov	r1, r9
   20a54:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20a58:	mov	r2, r6
   20a5c:	cmp	r0, #0
   20a60:	beq	20a14 <__mempcpy_chk@plt+0xf434>
   20a64:	ldr	r0, [r2, #28]
   20a68:	ldr	r1, [sp, #12]
   20a6c:	add	r2, r0, r1, lsl #2
   20a70:	ldr	r1, [sp, #4]
   20a74:	add	r0, sp, #24
   20a78:	bl	20770 <__mempcpy_chk@plt+0xf190>
   20a7c:	cmp	r0, #0
   20a80:	bne	20b4c <__mempcpy_chk@plt+0xf56c>
   20a84:	ldr	r0, [sp, #8]
   20a88:	ldr	r7, [r0]
   20a8c:	mov	r2, r6
   20a90:	add	sl, sl, #1
   20a94:	cmp	sl, r7
   20a98:	blt	209a8 <__mempcpy_chk@plt+0xf3c8>
   20a9c:	cmp	r7, #1
   20aa0:	blt	20b34 <__mempcpy_chk@plt+0xf554>
   20aa4:	ldr	r0, [sp, #16]
   20aa8:	ldr	r7, [sp, #8]
   20aac:	mov	r5, #0
   20ab0:	add	r8, sp, #24
   20ab4:	ldr	r9, [r0, #8]
   20ab8:	ldr	r6, [r9, r5, lsl #2]
   20abc:	mov	r0, r8
   20ac0:	mov	r1, r6
   20ac4:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20ac8:	cmp	r0, #0
   20acc:	bne	20af8 <__mempcpy_chk@plt+0xf518>
   20ad0:	mov	r0, r4
   20ad4:	mov	r1, r6
   20ad8:	bl	1c4f4 <__mempcpy_chk@plt+0xaf14>
   20adc:	subs	r1, r0, #1
   20ae0:	blt	20af8 <__mempcpy_chk@plt+0xf518>
   20ae4:	ldr	r2, [r4, #4]
   20ae8:	cmp	r2, r0
   20aec:	subge	r2, r2, #1
   20af0:	strge	r2, [r4, #4]
   20af4:	bgt	20b0c <__mempcpy_chk@plt+0xf52c>
   20af8:	ldr	r0, [r7]
   20afc:	add	r5, r5, #1
   20b00:	cmp	r5, r0
   20b04:	blt	20ab8 <__mempcpy_chk@plt+0xf4d8>
   20b08:	b	20b34 <__mempcpy_chk@plt+0xf554>
   20b0c:	ldr	r2, [r4, #8]
   20b10:	add	r0, r2, r0, lsl #2
   20b14:	ldr	r2, [r0]
   20b18:	add	r1, r1, #1
   20b1c:	str	r2, [r0, #-4]
   20b20:	add	r0, r0, #4
   20b24:	ldr	r2, [r4, #4]
   20b28:	cmp	r1, r2
   20b2c:	blt	20b14 <__mempcpy_chk@plt+0xf534>
   20b30:	b	20af8 <__mempcpy_chk@plt+0xf518>
   20b34:	mov	r5, #0
   20b38:	ldr	r0, [sp, #32]
   20b3c:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20b40:	mov	r0, r5
   20b44:	sub	sp, fp, #28
   20b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b4c:	mov	r5, r0
   20b50:	b	20b38 <__mempcpy_chk@plt+0xf558>
   20b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b58:	add	fp, sp, #28
   20b5c:	sub	sp, sp, #20
   20b60:	mov	r6, r1
   20b64:	mov	r1, r3
   20b68:	str	r2, [sp, #12]
   20b6c:	mov	r7, r0
   20b70:	str	r3, [sp, #16]
   20b74:	bl	1dee8 <__mempcpy_chk@plt+0xc908>
   20b78:	ldr	r1, [fp, #12]
   20b7c:	str	r0, [sp, #8]
   20b80:	mov	r0, r7
   20b84:	bl	1dee8 <__mempcpy_chk@plt+0xc908>
   20b88:	mov	r4, r0
   20b8c:	ldr	r0, [r6, #4]
   20b90:	cmp	r0, #1
   20b94:	blt	20c18 <__mempcpy_chk@plt+0xf638>
   20b98:	ldr	sl, [r7, #84]	; 0x54
   20b9c:	mov	r5, #0
   20ba0:	ldr	r0, [r6, #8]
   20ba4:	ldr	r2, [r7, #116]	; 0x74
   20ba8:	ldr	r3, [sp, #12]
   20bac:	ldr	r1, [r0, r5, lsl #2]
   20bb0:	add	r0, r1, r1, lsl #1
   20bb4:	ldr	r0, [r2, r0, lsl #3]
   20bb8:	ldr	r2, [sl]
   20bbc:	ldr	r9, [r2, r0, lsl #3]
   20bc0:	ldr	r0, [sp, #16]
   20bc4:	str	r0, [sp]
   20bc8:	ldr	r0, [sp, #8]
   20bcc:	mov	r2, r9
   20bd0:	str	r0, [sp, #4]
   20bd4:	mov	r0, r7
   20bd8:	bl	20c2c <__mempcpy_chk@plt+0xf64c>
   20bdc:	mov	r8, r0
   20be0:	ldr	r0, [r6, #8]
   20be4:	ldr	r3, [fp, #8]
   20be8:	mov	r2, r9
   20bec:	ldr	r1, [r0, r5, lsl #2]
   20bf0:	ldr	r0, [fp, #12]
   20bf4:	stm	sp, {r0, r4}
   20bf8:	mov	r0, r7
   20bfc:	bl	20c2c <__mempcpy_chk@plt+0xf64c>
   20c00:	cmp	r0, r8
   20c04:	bne	20c20 <__mempcpy_chk@plt+0xf640>
   20c08:	ldr	r0, [r6, #4]
   20c0c:	add	r5, r5, #1
   20c10:	cmp	r5, r0
   20c14:	blt	20ba0 <__mempcpy_chk@plt+0xf5c0>
   20c18:	mov	r0, #0
   20c1c:	b	20c24 <__mempcpy_chk@plt+0xf644>
   20c20:	mov	r0, #1
   20c24:	sub	sp, fp, #28
   20c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20c2c:	push	{r4, r5, fp, lr}
   20c30:	add	fp, sp, #8
   20c34:	sub	sp, sp, #8
   20c38:	ldr	r4, [r0, #116]	; 0x74
   20c3c:	add	r1, r1, r1, lsl #1
   20c40:	ldr	lr, [fp, #8]
   20c44:	add	r4, r4, r1, lsl #3
   20c48:	mvn	r1, #0
   20c4c:	ldr	ip, [r4, #8]
   20c50:	cmp	ip, lr
   20c54:	bgt	20ca0 <__mempcpy_chk@plt+0xf6c0>
   20c58:	ldr	r4, [r4, #12]
   20c5c:	mov	r1, #1
   20c60:	cmp	r4, lr
   20c64:	blt	20ca0 <__mempcpy_chk@plt+0xf6c0>
   20c68:	sub	r1, r4, lr
   20c6c:	mov	r5, #1
   20c70:	cmp	ip, lr
   20c74:	clz	r1, r1
   20c78:	lsr	r4, r1, #5
   20c7c:	lsl	r1, r4, #1
   20c80:	orreq	r1, r5, r4, lsl #1
   20c84:	cmp	r1, #0
   20c88:	beq	20c9c <__mempcpy_chk@plt+0xf6bc>
   20c8c:	ldr	r5, [fp, #12]
   20c90:	str	r5, [sp]
   20c94:	bl	20cac <__mempcpy_chk@plt+0xf6cc>
   20c98:	b	20ca4 <__mempcpy_chk@plt+0xf6c4>
   20c9c:	mov	r1, #0
   20ca0:	mov	r0, r1
   20ca4:	sub	sp, fp, #8
   20ca8:	pop	{r4, r5, fp, pc}
   20cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cb0:	add	fp, sp, #28
   20cb4:	sub	sp, sp, #36	; 0x24
   20cb8:	ldr	r4, [r0, #84]	; 0x54
   20cbc:	mov	r7, r0
   20cc0:	mov	r5, r1
   20cc4:	add	r1, r3, r3, lsl #1
   20cc8:	str	r3, [sp, #32]
   20ccc:	ldr	r0, [r4, #24]
   20cd0:	add	r1, r0, r1, lsl #2
   20cd4:	mov	lr, r1
   20cd8:	ldr	r0, [lr, #4]!
   20cdc:	cmp	r0, #1
   20ce0:	blt	20e7c <__mempcpy_chk@plt+0xf89c>
   20ce4:	mov	ip, #1
   20ce8:	mov	r6, r2
   20cec:	and	r3, r5, #2
   20cf0:	mov	sl, #0
   20cf4:	mvn	r2, ip, lsl r2
   20cf8:	cmp	r6, #31
   20cfc:	str	r3, [sp, #16]
   20d00:	str	r2, [sp, #24]
   20d04:	lsl	r2, ip, r6
   20d08:	and	ip, r5, #1
   20d0c:	str	r2, [sp, #28]
   20d10:	mov	r2, #0
   20d14:	movwgt	r2, #1
   20d18:	str	ip, [sp, #12]
   20d1c:	orr	r2, r2, r3, lsr #1
   20d20:	add	r3, r1, #8
   20d24:	stmib	sp, {r3, lr}
   20d28:	str	r2, [sp, #20]
   20d2c:	ldr	r1, [r3]
   20d30:	ldr	r9, [r1, sl, lsl #2]
   20d34:	ldr	r1, [r4]
   20d38:	add	r2, r1, r9, lsl #3
   20d3c:	ldrb	r2, [r2, #4]
   20d40:	cmp	r2, #9
   20d44:	beq	20e40 <__mempcpy_chk@plt+0xf860>
   20d48:	cmp	r2, #8
   20d4c:	beq	20e5c <__mempcpy_chk@plt+0xf87c>
   20d50:	cmp	r2, #4
   20d54:	bne	20e70 <__mempcpy_chk@plt+0xf890>
   20d58:	ldr	r1, [fp, #8]
   20d5c:	cmn	r1, #1
   20d60:	beq	20e70 <__mempcpy_chk@plt+0xf890>
   20d64:	ldr	r1, [fp, #8]
   20d68:	ldr	r0, [r7, #116]	; 0x74
   20d6c:	add	r1, r1, r1, lsl #1
   20d70:	add	r0, r0, r1, lsl #3
   20d74:	add	r8, r0, #16
   20d78:	ldr	r0, [r8, #-16]
   20d7c:	cmp	r0, r9
   20d80:	bne	20e1c <__mempcpy_chk@plt+0xf83c>
   20d84:	cmp	r6, #31
   20d88:	bgt	20d9c <__mempcpy_chk@plt+0xf7bc>
   20d8c:	ldr	r0, [r8]
   20d90:	ldr	r1, [sp, #28]
   20d94:	tst	r0, r1
   20d98:	beq	20e1c <__mempcpy_chk@plt+0xf83c>
   20d9c:	ldr	r0, [r4, #20]
   20da0:	add	r1, r9, r9, lsl #1
   20da4:	add	r0, r0, r1, lsl #2
   20da8:	ldr	r0, [r0, #8]
   20dac:	ldr	r3, [r0]
   20db0:	ldr	r0, [sp, #32]
   20db4:	cmp	r3, r0
   20db8:	beq	20e84 <__mempcpy_chk@plt+0xf8a4>
   20dbc:	ldr	r0, [fp, #8]
   20dc0:	mov	r1, r5
   20dc4:	mov	r2, r6
   20dc8:	str	r0, [sp]
   20dcc:	mov	r0, r7
   20dd0:	bl	20cac <__mempcpy_chk@plt+0xf6cc>
   20dd4:	cmp	r0, #0
   20dd8:	beq	20df0 <__mempcpy_chk@plt+0xf810>
   20ddc:	cmn	r0, #1
   20de0:	beq	20e9c <__mempcpy_chk@plt+0xf8bc>
   20de4:	cmp	r6, #31
   20de8:	ble	20e0c <__mempcpy_chk@plt+0xf82c>
   20dec:	b	20e1c <__mempcpy_chk@plt+0xf83c>
   20df0:	ldr	r0, [sp, #20]
   20df4:	cmp	r0, #0
   20df8:	beq	20e0c <__mempcpy_chk@plt+0xf82c>
   20dfc:	ldr	r0, [sp, #16]
   20e00:	cmp	r0, #0
   20e04:	beq	20e1c <__mempcpy_chk@plt+0xf83c>
   20e08:	b	20e90 <__mempcpy_chk@plt+0xf8b0>
   20e0c:	ldr	r0, [r8]
   20e10:	ldr	r1, [sp, #24]
   20e14:	and	r0, r0, r1
   20e18:	str	r0, [r8]
   20e1c:	ldrb	r0, [r8, #4]
   20e20:	add	r8, r8, #24
   20e24:	cmp	r0, #0
   20e28:	bne	20d78 <__mempcpy_chk@plt+0xf798>
   20e2c:	ldr	lr, [sp, #8]
   20e30:	ldr	ip, [sp, #12]
   20e34:	ldr	r3, [sp, #4]
   20e38:	ldr	r0, [lr]
   20e3c:	b	20e70 <__mempcpy_chk@plt+0xf890>
   20e40:	ldr	r2, [sp, #16]
   20e44:	cmp	r2, #0
   20e48:	beq	20e70 <__mempcpy_chk@plt+0xf890>
   20e4c:	ldr	r1, [r1, r9, lsl #3]
   20e50:	cmp	r1, r6
   20e54:	bne	20e70 <__mempcpy_chk@plt+0xf890>
   20e58:	b	20e90 <__mempcpy_chk@plt+0xf8b0>
   20e5c:	cmp	ip, #0
   20e60:	beq	20e70 <__mempcpy_chk@plt+0xf890>
   20e64:	ldr	r1, [r1, r9, lsl #3]
   20e68:	cmp	r1, r6
   20e6c:	beq	20e98 <__mempcpy_chk@plt+0xf8b8>
   20e70:	add	sl, sl, #1
   20e74:	cmp	sl, r0
   20e78:	blt	20d2c <__mempcpy_chk@plt+0xf74c>
   20e7c:	ubfx	r0, r5, #1, #1
   20e80:	b	20e9c <__mempcpy_chk@plt+0xf8bc>
   20e84:	ldr	r0, [sp, #12]
   20e88:	rsb	r0, r0, #0
   20e8c:	b	20e9c <__mempcpy_chk@plt+0xf8bc>
   20e90:	mov	r0, #0
   20e94:	b	20e9c <__mempcpy_chk@plt+0xf8bc>
   20e98:	mvn	r0, #0
   20e9c:	sub	sp, fp, #28
   20ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ea4:	cmp	r0, #0
   20ea8:	bxeq	lr
   20eac:	push	{r4, r5, r6, sl, fp, lr}
   20eb0:	add	fp, sp, #16
   20eb4:	ldr	r1, [r0]
   20eb8:	mov	r4, r0
   20ebc:	ldr	r0, [r0, #8]
   20ec0:	cmp	r1, #1
   20ec4:	blt	20f04 <__mempcpy_chk@plt+0xf924>
   20ec8:	mov	r5, #0
   20ecc:	mov	r6, #0
   20ed0:	add	r0, r0, r5
   20ed4:	ldr	r0, [r0, #20]
   20ed8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20edc:	ldr	r0, [r4, #8]
   20ee0:	add	r0, r0, r5
   20ee4:	ldr	r0, [r0, #8]
   20ee8:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20eec:	ldr	r1, [r4]
   20ef0:	ldr	r0, [r4, #8]
   20ef4:	add	r6, r6, #1
   20ef8:	add	r5, r5, #24
   20efc:	cmp	r6, r1
   20f00:	blt	20ed0 <__mempcpy_chk@plt+0xf8f0>
   20f04:	pop	{r4, r5, r6, sl, fp, lr}
   20f08:	b	12a88 <__mempcpy_chk@plt+0x14a8>
   20f0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20f10:	add	fp, sp, #24
   20f14:	mov	r4, r0
   20f18:	mvn	r0, #0
   20f1c:	cmp	r4, #0
   20f20:	beq	20fc0 <__mempcpy_chk@plt+0xf9e0>
   20f24:	mov	r5, r2
   20f28:	ldr	r2, [r4]
   20f2c:	cmp	r2, #0
   20f30:	beq	20fc0 <__mempcpy_chk@plt+0xf9e0>
   20f34:	sub	r0, r2, #1
   20f38:	ldr	r9, [fp, #12]
   20f3c:	ldr	r8, [fp, #8]
   20f40:	lsl	r7, r5, #3
   20f44:	str	r0, [r4]
   20f48:	add	r6, r0, r0, lsl #1
   20f4c:	ldr	r2, [r4, #8]
   20f50:	ldr	r0, [r2, r6, lsl #3]!
   20f54:	str	r0, [r1]
   20f58:	mov	r0, r3
   20f5c:	ldr	r1, [r2, #8]
   20f60:	mov	r2, r7
   20f64:	bl	1134c <memcpy@plt>
   20f68:	ldr	r0, [r4, #8]
   20f6c:	mov	r2, r7
   20f70:	add	r0, r0, r6, lsl #3
   20f74:	ldr	r0, [r0, #8]
   20f78:	add	r1, r0, r5, lsl #3
   20f7c:	mov	r0, r8
   20f80:	bl	1134c <memcpy@plt>
   20f84:	ldr	r0, [r9, #8]
   20f88:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20f8c:	ldr	r0, [r4, #8]
   20f90:	add	r0, r0, r6, lsl #3
   20f94:	ldr	r0, [r0, #8]
   20f98:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   20f9c:	ldr	r0, [r4, #8]
   20fa0:	add	r0, r0, r6, lsl #3
   20fa4:	vldr	d16, [r0, #12]
   20fa8:	ldr	r0, [r0, #20]
   20fac:	str	r0, [r9, #8]
   20fb0:	vstr	d16, [r9]
   20fb4:	ldr	r0, [r4, #8]
   20fb8:	add	r0, r0, r6, lsl #3
   20fbc:	ldr	r0, [r0, #4]
   20fc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20fc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20fc8:	add	fp, sp, #24
   20fcc:	movw	r8, #0
   20fd0:	mov	r6, r2
   20fd4:	mov	r4, r1
   20fd8:	mov	r5, r0
   20fdc:	movt	r8, #32752	; 0x7ff0
   20fe0:	mov	r0, r5
   20fe4:	mov	r1, r4
   20fe8:	mov	r2, r6
   20fec:	bl	112f8 <read@plt>
   20ff0:	mov	r7, r0
   20ff4:	cmn	r0, #1
   20ff8:	bgt	21020 <__mempcpy_chk@plt+0xfa40>
   20ffc:	bl	114cc <__errno_location@plt>
   21000:	ldr	r0, [r0]
   21004:	cmp	r0, #4
   21008:	beq	20fe0 <__mempcpy_chk@plt+0xfa00>
   2100c:	cmp	r6, r8
   21010:	bls	21020 <__mempcpy_chk@plt+0xfa40>
   21014:	cmp	r0, #22
   21018:	mov	r6, r8
   2101c:	beq	20fe0 <__mempcpy_chk@plt+0xfa00>
   21020:	mov	r0, r7
   21024:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21028:	push	{fp, lr}
   2102c:	mov	fp, sp
   21030:	bl	11454 <mkstemp64@plt>
   21034:	pop	{fp, lr}
   21038:	b	21058 <__mempcpy_chk@plt+0xfa78>
   2103c:	push	{r4, sl, fp, lr}
   21040:	add	fp, sp, #8
   21044:	mov	r4, r1
   21048:	bl	113e8 <mkostemp64@plt>
   2104c:	mov	r1, r4
   21050:	pop	{r4, sl, fp, lr}
   21054:	b	21cfc <__mempcpy_chk@plt+0x1071c>
   21058:	push	{r4, r5, r6, r7, fp, lr}
   2105c:	add	fp, sp, #16
   21060:	mov	r4, r0
   21064:	cmp	r0, #2
   21068:	bhi	21098 <__mempcpy_chk@plt+0xfab8>
   2106c:	mov	r0, r4
   21070:	bl	21e8c <__mempcpy_chk@plt+0x108ac>
   21074:	mov	r5, r0
   21078:	bl	114cc <__errno_location@plt>
   2107c:	ldr	r7, [r0]
   21080:	mov	r6, r0
   21084:	mov	r0, r4
   21088:	bl	115d4 <close@plt>
   2108c:	mov	r0, r5
   21090:	str	r7, [r6]
   21094:	pop	{r4, r5, r6, r7, fp, pc}
   21098:	mov	r0, r4
   2109c:	pop	{r4, r5, r6, r7, fp, pc}
   210a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   210a4:	add	fp, sp, #24
   210a8:	sub	sp, sp, #32
   210ac:	ldr	r6, [fp, #12]
   210b0:	ldr	r7, [fp, #8]
   210b4:	mov	r4, r2
   210b8:	mov	r8, r0
   210bc:	cmp	r1, #0
   210c0:	beq	210e8 <__mempcpy_chk@plt+0xfb08>
   210c4:	movw	r2, #11521	; 0x2d01
   210c8:	mov	r5, r1
   210cc:	str	r3, [sp, #4]
   210d0:	str	r4, [sp]
   210d4:	mov	r0, r8
   210d8:	mov	r1, #1
   210dc:	movt	r2, #2
   210e0:	mov	r3, r5
   210e4:	b	21100 <__mempcpy_chk@plt+0xfb20>
   210e8:	movw	r2, #11533	; 0x2d0d
   210ec:	str	r3, [sp]
   210f0:	mov	r0, r8
   210f4:	mov	r1, #1
   210f8:	mov	r3, r4
   210fc:	movt	r2, #2
   21100:	bl	11520 <__fprintf_chk@plt>
   21104:	movw	r1, #11540	; 0x2d14
   21108:	mov	r0, #0
   2110c:	mov	r2, #5
   21110:	movt	r1, #2
   21114:	bl	113a0 <dcgettext@plt>
   21118:	movw	r2, #12258	; 0x2fe2
   2111c:	mov	r3, r0
   21120:	movw	r0, #2022	; 0x7e6
   21124:	mov	r1, #1
   21128:	movt	r2, #2
   2112c:	str	r0, [sp]
   21130:	mov	r0, r8
   21134:	bl	11520 <__fprintf_chk@plt>
   21138:	movw	r4, #10208	; 0x27e0
   2113c:	mov	r1, r8
   21140:	movt	r4, #2
   21144:	mov	r0, r4
   21148:	bl	112b0 <fputs_unlocked@plt>
   2114c:	movw	r1, #11544	; 0x2d18
   21150:	mov	r0, #0
   21154:	mov	r2, #5
   21158:	movt	r1, #2
   2115c:	bl	113a0 <dcgettext@plt>
   21160:	movw	r3, #11715	; 0x2dc3
   21164:	mov	r2, r0
   21168:	mov	r0, r8
   2116c:	mov	r1, #1
   21170:	movt	r3, #2
   21174:	bl	11520 <__fprintf_chk@plt>
   21178:	mov	r0, r4
   2117c:	mov	r1, r8
   21180:	bl	112b0 <fputs_unlocked@plt>
   21184:	cmp	r6, #9
   21188:	bhi	211ec <__mempcpy_chk@plt+0xfc0c>
   2118c:	add	r0, pc, #0
   21190:	ldr	pc, [r0, r6, lsl #2]
   21194:	andeq	r1, r2, r4, asr #7
   21198:			; <UNDEFINED> instruction: 0x000211bc
   2119c:	strdeq	r1, [r2], -r8
   211a0:	andeq	r1, r2, r0, lsr #4
   211a4:	andeq	r1, r2, r8, asr #4
   211a8:	andeq	r1, r2, r0, ror r2
   211ac:	muleq	r2, r8, r2
   211b0:	ldrdeq	r1, [r2], -r0
   211b4:	andeq	r1, r2, r0, ror r3
   211b8:	andeq	r1, r2, r8, lsl r3
   211bc:	movw	r1, #11749	; 0x2de5
   211c0:	mov	r0, #0
   211c4:	mov	r2, #5
   211c8:	movt	r1, #2
   211cc:	bl	113a0 <dcgettext@plt>
   211d0:	ldr	r3, [r7]
   211d4:	mov	r2, r0
   211d8:	mov	r0, r8
   211dc:	mov	r1, #1
   211e0:	sub	sp, fp, #24
   211e4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   211e8:	b	11520 <__fprintf_chk@plt>
   211ec:	movw	r1, #12068	; 0x2f24
   211f0:	movt	r1, #2
   211f4:	b	21320 <__mempcpy_chk@plt+0xfd40>
   211f8:	movw	r1, #11765	; 0x2df5
   211fc:	mov	r0, #0
   21200:	mov	r2, #5
   21204:	movt	r1, #2
   21208:	bl	113a0 <dcgettext@plt>
   2120c:	mov	r2, r0
   21210:	ldr	r3, [r7]
   21214:	ldr	r0, [r7, #4]
   21218:	str	r0, [sp]
   2121c:	b	2130c <__mempcpy_chk@plt+0xfd2c>
   21220:	movw	r1, #11788	; 0x2e0c
   21224:	mov	r0, #0
   21228:	mov	r2, #5
   2122c:	movt	r1, #2
   21230:	bl	113a0 <dcgettext@plt>
   21234:	mov	r2, r0
   21238:	ldr	r3, [r7]
   2123c:	ldmib	r7, {r0, r1}
   21240:	stm	sp, {r0, r1}
   21244:	b	2130c <__mempcpy_chk@plt+0xfd2c>
   21248:	movw	r1, #11816	; 0x2e28
   2124c:	mov	r0, #0
   21250:	mov	r2, #5
   21254:	movt	r1, #2
   21258:	bl	113a0 <dcgettext@plt>
   2125c:	ldr	r3, [r7]
   21260:	mov	r2, r0
   21264:	ldmib	r7, {r0, r1, r7}
   21268:	stm	sp, {r0, r1, r7}
   2126c:	b	2130c <__mempcpy_chk@plt+0xfd2c>
   21270:	movw	r1, #11848	; 0x2e48
   21274:	mov	r0, #0
   21278:	mov	r2, #5
   2127c:	movt	r1, #2
   21280:	bl	113a0 <dcgettext@plt>
   21284:	ldr	r3, [r7]
   21288:	mov	r2, r0
   2128c:	ldmib	r7, {r0, r1, r6, r7}
   21290:	stm	sp, {r0, r1, r6, r7}
   21294:	b	2130c <__mempcpy_chk@plt+0xfd2c>
   21298:	movw	r1, #11884	; 0x2e6c
   2129c:	mov	r0, #0
   212a0:	mov	r2, #5
   212a4:	movt	r1, #2
   212a8:	bl	113a0 <dcgettext@plt>
   212ac:	mov	r2, r0
   212b0:	ldr	r3, [r7]
   212b4:	ldmib	r7, {r0, r1, r6}
   212b8:	ldr	r5, [r7, #16]
   212bc:	ldr	r7, [r7, #20]
   212c0:	stm	sp, {r0, r1, r6}
   212c4:	str	r5, [sp, #12]
   212c8:	str	r7, [sp, #16]
   212cc:	b	2130c <__mempcpy_chk@plt+0xfd2c>
   212d0:	movw	r1, #11924	; 0x2e94
   212d4:	mov	r0, #0
   212d8:	mov	r2, #5
   212dc:	movt	r1, #2
   212e0:	bl	113a0 <dcgettext@plt>
   212e4:	mov	r2, r0
   212e8:	ldr	r3, [r7]
   212ec:	ldmib	r7, {r0, r1, r6}
   212f0:	ldr	r5, [r7, #16]
   212f4:	ldr	r4, [r7, #20]
   212f8:	ldr	r7, [r7, #24]
   212fc:	stm	sp, {r0, r1, r6}
   21300:	str	r5, [sp, #12]
   21304:	str	r4, [sp, #16]
   21308:	str	r7, [sp, #20]
   2130c:	mov	r0, r8
   21310:	mov	r1, #1
   21314:	b	213c0 <__mempcpy_chk@plt+0xfde0>
   21318:	movw	r1, #12016	; 0x2ef0
   2131c:	movt	r1, #2
   21320:	mov	r0, #0
   21324:	mov	r2, #5
   21328:	bl	113a0 <dcgettext@plt>
   2132c:	mov	ip, r0
   21330:	ldr	r3, [r7]
   21334:	ldr	r0, [r7, #4]
   21338:	ldr	r1, [r7, #8]
   2133c:	ldr	r6, [r7, #12]
   21340:	ldr	r5, [r7, #16]
   21344:	ldr	r4, [r7, #20]
   21348:	ldr	r2, [r7, #24]
   2134c:	ldr	lr, [r7, #28]
   21350:	ldr	r7, [r7, #32]
   21354:	stm	sp, {r0, r1, r6}
   21358:	str	r5, [sp, #12]
   2135c:	str	r4, [sp, #16]
   21360:	str	r2, [sp, #20]
   21364:	str	lr, [sp, #24]
   21368:	str	r7, [sp, #28]
   2136c:	b	213b4 <__mempcpy_chk@plt+0xfdd4>
   21370:	movw	r1, #11968	; 0x2ec0
   21374:	mov	r0, #0
   21378:	mov	r2, #5
   2137c:	movt	r1, #2
   21380:	bl	113a0 <dcgettext@plt>
   21384:	mov	ip, r0
   21388:	ldr	r3, [r7]
   2138c:	ldmib	r7, {r0, r1, r6}
   21390:	ldr	r5, [r7, #16]
   21394:	ldr	r4, [r7, #20]
   21398:	ldr	r2, [r7, #24]
   2139c:	ldr	r7, [r7, #28]
   213a0:	stm	sp, {r0, r1, r6}
   213a4:	str	r5, [sp, #12]
   213a8:	str	r4, [sp, #16]
   213ac:	str	r2, [sp, #20]
   213b0:	str	r7, [sp, #24]
   213b4:	mov	r0, r8
   213b8:	mov	r1, #1
   213bc:	mov	r2, ip
   213c0:	bl	11520 <__fprintf_chk@plt>
   213c4:	sub	sp, fp, #24
   213c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   213cc:	push	{r4, sl, fp, lr}
   213d0:	add	fp, sp, #8
   213d4:	sub	sp, sp, #8
   213d8:	ldr	ip, [fp, #8]
   213dc:	mov	lr, #0
   213e0:	ldr	r4, [ip, lr, lsl #2]
   213e4:	add	lr, lr, #1
   213e8:	cmp	r4, #0
   213ec:	bne	213e0 <__mempcpy_chk@plt+0xfe00>
   213f0:	sub	r4, lr, #1
   213f4:	str	ip, [sp]
   213f8:	str	r4, [sp, #4]
   213fc:	bl	210a0 <__mempcpy_chk@plt+0xfac0>
   21400:	sub	sp, fp, #8
   21404:	pop	{r4, sl, fp, pc}
   21408:	push	{r4, r5, fp, lr}
   2140c:	add	fp, sp, #8
   21410:	sub	sp, sp, #48	; 0x30
   21414:	ldr	r4, [fp, #8]
   21418:	mov	ip, #0
   2141c:	add	lr, sp, #8
   21420:	ldr	r5, [r4]
   21424:	cmp	r5, #0
   21428:	str	r5, [lr, ip, lsl #2]
   2142c:	beq	21444 <__mempcpy_chk@plt+0xfe64>
   21430:	add	ip, ip, #1
   21434:	add	r4, r4, #4
   21438:	cmp	ip, #10
   2143c:	bne	21420 <__mempcpy_chk@plt+0xfe40>
   21440:	mov	ip, #10
   21444:	str	lr, [sp]
   21448:	str	ip, [sp, #4]
   2144c:	bl	210a0 <__mempcpy_chk@plt+0xfac0>
   21450:	sub	sp, fp, #8
   21454:	pop	{r4, r5, fp, pc}
   21458:	push	{fp, lr}
   2145c:	mov	fp, sp
   21460:	sub	sp, sp, #8
   21464:	add	ip, fp, #8
   21468:	str	ip, [sp, #4]
   2146c:	str	ip, [sp]
   21470:	bl	21408 <__mempcpy_chk@plt+0xfe28>
   21474:	mov	sp, fp
   21478:	pop	{fp, pc}
   2147c:	push	{fp, lr}
   21480:	mov	fp, sp
   21484:	movw	r0, #16788	; 0x4194
   21488:	movt	r0, #3
   2148c:	ldr	r1, [r0]
   21490:	movw	r0, #10208	; 0x27e0
   21494:	movt	r0, #2
   21498:	bl	112b0 <fputs_unlocked@plt>
   2149c:	movw	r1, #12128	; 0x2f60
   214a0:	mov	r0, #0
   214a4:	mov	r2, #5
   214a8:	movt	r1, #2
   214ac:	bl	113a0 <dcgettext@plt>
   214b0:	movw	r2, #12148	; 0x2f74
   214b4:	mov	r1, r0
   214b8:	mov	r0, #1
   214bc:	movt	r2, #2
   214c0:	bl	11508 <__printf_chk@plt>
   214c4:	movw	r1, #12170	; 0x2f8a
   214c8:	mov	r0, #0
   214cc:	mov	r2, #5
   214d0:	movt	r1, #2
   214d4:	bl	113a0 <dcgettext@plt>
   214d8:	movw	r2, #9700	; 0x25e4
   214dc:	movw	r3, #10017	; 0x2721
   214e0:	mov	r1, r0
   214e4:	mov	r0, #1
   214e8:	movt	r2, #2
   214ec:	movt	r3, #2
   214f0:	bl	11508 <__printf_chk@plt>
   214f4:	movw	r1, #12190	; 0x2f9e
   214f8:	mov	r0, #0
   214fc:	mov	r2, #5
   21500:	movt	r1, #2
   21504:	bl	113a0 <dcgettext@plt>
   21508:	movw	r2, #12229	; 0x2fc5
   2150c:	mov	r1, r0
   21510:	mov	r0, #1
   21514:	movt	r2, #2
   21518:	pop	{fp, lr}
   2151c:	b	11508 <__printf_chk@plt>
   21520:	b	21524 <__mempcpy_chk@plt+0xff44>
   21524:	push	{r4, r5, r6, sl, fp, lr}
   21528:	add	fp, sp, #16
   2152c:	mov	r4, r2
   21530:	mov	r5, r1
   21534:	mov	r6, r0
   21538:	bl	21e50 <__mempcpy_chk@plt+0x10870>
   2153c:	cmp	r0, #0
   21540:	popne	{r4, r5, r6, sl, fp, pc}
   21544:	cmp	r6, #0
   21548:	beq	2155c <__mempcpy_chk@plt+0xff7c>
   2154c:	cmp	r5, #0
   21550:	cmpne	r4, #0
   21554:	bne	2155c <__mempcpy_chk@plt+0xff7c>
   21558:	pop	{r4, r5, r6, sl, fp, pc}
   2155c:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21560:	push	{fp, lr}
   21564:	mov	fp, sp
   21568:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   2156c:	cmp	r0, #0
   21570:	popne	{fp, pc}
   21574:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21578:	push	{fp, lr}
   2157c:	mov	fp, sp
   21580:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   21584:	cmp	r0, #0
   21588:	popne	{fp, pc}
   2158c:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21590:	push	{fp, lr}
   21594:	mov	fp, sp
   21598:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   2159c:	cmp	r0, #0
   215a0:	popne	{fp, pc}
   215a4:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   215a8:	push	{r4, r5, fp, lr}
   215ac:	add	fp, sp, #8
   215b0:	mov	r4, r1
   215b4:	mov	r5, r0
   215b8:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   215bc:	cmp	r0, #0
   215c0:	popne	{r4, r5, fp, pc}
   215c4:	cmp	r5, #0
   215c8:	beq	215d8 <__mempcpy_chk@plt+0xfff8>
   215cc:	cmp	r4, #0
   215d0:	bne	215d8 <__mempcpy_chk@plt+0xfff8>
   215d4:	pop	{r4, r5, fp, pc}
   215d8:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   215dc:	push	{fp, lr}
   215e0:	mov	fp, sp
   215e4:	cmp	r1, #0
   215e8:	orreq	r1, r1, #1
   215ec:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   215f0:	cmp	r0, #0
   215f4:	popne	{fp, pc}
   215f8:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   215fc:	push	{fp, lr}
   21600:	mov	fp, sp
   21604:	clz	r3, r2
   21608:	lsr	ip, r3, #5
   2160c:	clz	r3, r1
   21610:	lsr	r3, r3, #5
   21614:	orrs	r3, r3, ip
   21618:	movwne	r1, #1
   2161c:	movwne	r2, #1
   21620:	bl	21e50 <__mempcpy_chk@plt+0x10870>
   21624:	cmp	r0, #0
   21628:	popne	{fp, pc}
   2162c:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21630:	push	{fp, lr}
   21634:	mov	fp, sp
   21638:	mov	r2, r1
   2163c:	mov	r1, r0
   21640:	mov	r0, #0
   21644:	bl	21e50 <__mempcpy_chk@plt+0x10870>
   21648:	cmp	r0, #0
   2164c:	popne	{fp, pc}
   21650:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21654:	mov	r2, r1
   21658:	mov	r1, r0
   2165c:	mov	r0, #0
   21660:	b	215fc <__mempcpy_chk@plt+0x1001c>
   21664:	mov	r2, #1
   21668:	b	2166c <__mempcpy_chk@plt+0x1008c>
   2166c:	push	{r4, r5, fp, lr}
   21670:	add	fp, sp, #8
   21674:	ldr	r5, [r1]
   21678:	mov	r4, r1
   2167c:	cmp	r0, #0
   21680:	beq	21698 <__mempcpy_chk@plt+0x100b8>
   21684:	mov	r1, #1
   21688:	add	r1, r1, r5, lsr #1
   2168c:	adds	r5, r5, r1
   21690:	bcc	216b0 <__mempcpy_chk@plt+0x100d0>
   21694:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21698:	cmp	r5, #0
   2169c:	bne	216b0 <__mempcpy_chk@plt+0x100d0>
   216a0:	mov	r1, #64	; 0x40
   216a4:	cmp	r2, #64	; 0x40
   216a8:	udiv	r5, r1, r2
   216ac:	addhi	r5, r5, #1
   216b0:	mov	r1, r5
   216b4:	bl	21524 <__mempcpy_chk@plt+0xff44>
   216b8:	str	r5, [r4]
   216bc:	pop	{r4, r5, fp, pc}
   216c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   216c4:	add	fp, sp, #24
   216c8:	ldr	r6, [r1]
   216cc:	mov	r8, r1
   216d0:	ldr	r4, [fp, #8]
   216d4:	add	r1, r6, r6, asr #1
   216d8:	cmp	r1, r6
   216dc:	mvnvs	r1, #-2147483648	; 0x80000000
   216e0:	cmp	r1, r3
   216e4:	mov	r5, r1
   216e8:	movgt	r5, r3
   216ec:	cmn	r3, #1
   216f0:	movle	r5, r1
   216f4:	cmn	r4, #1
   216f8:	ble	21718 <__mempcpy_chk@plt+0x10138>
   216fc:	cmp	r4, #0
   21700:	beq	2176c <__mempcpy_chk@plt+0x1018c>
   21704:	cmn	r5, #1
   21708:	ble	21740 <__mempcpy_chk@plt+0x10160>
   2170c:	mvn	r7, #-2147483648	; 0x80000000
   21710:	udiv	r1, r7, r4
   21714:	b	21734 <__mempcpy_chk@plt+0x10154>
   21718:	cmn	r5, #1
   2171c:	ble	2175c <__mempcpy_chk@plt+0x1017c>
   21720:	cmn	r4, #1
   21724:	beq	2176c <__mempcpy_chk@plt+0x1018c>
   21728:	mov	r1, #-2147483648	; 0x80000000
   2172c:	mvn	r7, #-2147483648	; 0x80000000
   21730:	sdiv	r1, r1, r4
   21734:	cmp	r1, r5
   21738:	bge	2176c <__mempcpy_chk@plt+0x1018c>
   2173c:	b	2177c <__mempcpy_chk@plt+0x1019c>
   21740:	beq	2176c <__mempcpy_chk@plt+0x1018c>
   21744:	mov	r1, #-2147483648	; 0x80000000
   21748:	mvn	r7, #-2147483648	; 0x80000000
   2174c:	sdiv	r1, r1, r5
   21750:	cmp	r1, r4
   21754:	bge	2176c <__mempcpy_chk@plt+0x1018c>
   21758:	b	2177c <__mempcpy_chk@plt+0x1019c>
   2175c:	mvn	r7, #-2147483648	; 0x80000000
   21760:	sdiv	r1, r7, r4
   21764:	cmp	r5, r1
   21768:	blt	2177c <__mempcpy_chk@plt+0x1019c>
   2176c:	mul	r1, r5, r4
   21770:	mov	r7, #64	; 0x40
   21774:	cmp	r1, #63	; 0x3f
   21778:	bgt	21784 <__mempcpy_chk@plt+0x101a4>
   2177c:	sdiv	r5, r7, r4
   21780:	mul	r1, r5, r4
   21784:	cmp	r0, #0
   21788:	moveq	r7, #0
   2178c:	streq	r7, [r8]
   21790:	sub	r7, r5, r6
   21794:	cmp	r7, r2
   21798:	bge	2183c <__mempcpy_chk@plt+0x1025c>
   2179c:	add	r5, r6, r2
   217a0:	mov	r2, #0
   217a4:	mov	r1, #0
   217a8:	cmp	r5, r3
   217ac:	movwgt	r2, #1
   217b0:	cmn	r3, #1
   217b4:	movwgt	r1, #1
   217b8:	cmp	r5, r6
   217bc:	bvs	21824 <__mempcpy_chk@plt+0x10244>
   217c0:	ands	r1, r1, r2
   217c4:	bne	21824 <__mempcpy_chk@plt+0x10244>
   217c8:	cmn	r4, #1
   217cc:	ble	217ec <__mempcpy_chk@plt+0x1020c>
   217d0:	cmp	r4, #0
   217d4:	beq	21838 <__mempcpy_chk@plt+0x10258>
   217d8:	cmn	r5, #1
   217dc:	ble	21810 <__mempcpy_chk@plt+0x10230>
   217e0:	mvn	r1, #-2147483648	; 0x80000000
   217e4:	udiv	r1, r1, r4
   217e8:	b	21804 <__mempcpy_chk@plt+0x10224>
   217ec:	cmn	r5, #1
   217f0:	ble	21828 <__mempcpy_chk@plt+0x10248>
   217f4:	cmn	r4, #1
   217f8:	beq	21838 <__mempcpy_chk@plt+0x10258>
   217fc:	mov	r1, #-2147483648	; 0x80000000
   21800:	sdiv	r1, r1, r4
   21804:	cmp	r1, r5
   21808:	bge	21838 <__mempcpy_chk@plt+0x10258>
   2180c:	b	21824 <__mempcpy_chk@plt+0x10244>
   21810:	beq	21838 <__mempcpy_chk@plt+0x10258>
   21814:	mov	r1, #-2147483648	; 0x80000000
   21818:	sdiv	r1, r1, r5
   2181c:	cmp	r1, r4
   21820:	bge	21838 <__mempcpy_chk@plt+0x10258>
   21824:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21828:	mvn	r1, #-2147483648	; 0x80000000
   2182c:	sdiv	r1, r1, r4
   21830:	cmp	r5, r1
   21834:	blt	21824 <__mempcpy_chk@plt+0x10244>
   21838:	mul	r1, r5, r4
   2183c:	bl	215a8 <__mempcpy_chk@plt+0xffc8>
   21840:	str	r5, [r8]
   21844:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21848:	push	{fp, lr}
   2184c:	mov	fp, sp
   21850:	mov	r1, #1
   21854:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   21858:	cmp	r0, #0
   2185c:	popne	{fp, pc}
   21860:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21864:	push	{fp, lr}
   21868:	mov	fp, sp
   2186c:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   21870:	cmp	r0, #0
   21874:	popne	{fp, pc}
   21878:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   2187c:	push	{fp, lr}
   21880:	mov	fp, sp
   21884:	mov	r1, #1
   21888:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   2188c:	cmp	r0, #0
   21890:	popne	{fp, pc}
   21894:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21898:	push	{fp, lr}
   2189c:	mov	fp, sp
   218a0:	bl	219d0 <__mempcpy_chk@plt+0x103f0>
   218a4:	cmp	r0, #0
   218a8:	popne	{fp, pc}
   218ac:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   218b0:	push	{r4, r5, fp, lr}
   218b4:	add	fp, sp, #8
   218b8:	mov	r5, r0
   218bc:	mov	r0, r1
   218c0:	mov	r4, r1
   218c4:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   218c8:	cmp	r0, #0
   218cc:	beq	218e0 <__mempcpy_chk@plt+0x10300>
   218d0:	mov	r1, r5
   218d4:	mov	r2, r4
   218d8:	pop	{r4, r5, fp, lr}
   218dc:	b	1134c <memcpy@plt>
   218e0:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   218e4:	push	{r4, r5, fp, lr}
   218e8:	add	fp, sp, #8
   218ec:	mov	r5, r0
   218f0:	mov	r0, r1
   218f4:	mov	r4, r1
   218f8:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   218fc:	cmp	r0, #0
   21900:	beq	21914 <__mempcpy_chk@plt+0x10334>
   21904:	mov	r1, r5
   21908:	mov	r2, r4
   2190c:	pop	{r4, r5, fp, lr}
   21910:	b	1134c <memcpy@plt>
   21914:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21918:	push	{r4, r5, fp, lr}
   2191c:	add	fp, sp, #8
   21920:	mov	r5, r0
   21924:	add	r0, r1, #1
   21928:	mov	r4, r1
   2192c:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   21930:	cmp	r0, #0
   21934:	beq	21950 <__mempcpy_chk@plt+0x10370>
   21938:	mov	r1, #0
   2193c:	mov	r2, r4
   21940:	strb	r1, [r0, r4]
   21944:	mov	r1, r5
   21948:	pop	{r4, r5, fp, lr}
   2194c:	b	1134c <memcpy@plt>
   21950:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   21954:	push	{r4, r5, fp, lr}
   21958:	add	fp, sp, #8
   2195c:	mov	r4, r0
   21960:	bl	114c0 <strlen@plt>
   21964:	add	r5, r0, #1
   21968:	mov	r0, r5
   2196c:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   21970:	cmp	r0, #0
   21974:	beq	21988 <__mempcpy_chk@plt+0x103a8>
   21978:	mov	r1, r4
   2197c:	mov	r2, r5
   21980:	pop	{r4, r5, fp, lr}
   21984:	b	1134c <memcpy@plt>
   21988:	bl	2198c <__mempcpy_chk@plt+0x103ac>
   2198c:	push	{fp, lr}
   21990:	mov	fp, sp
   21994:	movw	r0, #16700	; 0x413c
   21998:	movw	r1, #12305	; 0x3011
   2199c:	mov	r2, #5
   219a0:	movt	r0, #3
   219a4:	movt	r1, #2
   219a8:	ldr	r4, [r0]
   219ac:	mov	r0, #0
   219b0:	bl	113a0 <dcgettext@plt>
   219b4:	movw	r2, #10699	; 0x29cb
   219b8:	mov	r3, r0
   219bc:	mov	r0, r4
   219c0:	mov	r1, #0
   219c4:	movt	r2, #2
   219c8:	bl	11430 <error@plt>
   219cc:	bl	115c8 <abort@plt>
   219d0:	clz	r2, r1
   219d4:	clz	r3, r0
   219d8:	lsr	r2, r2, #5
   219dc:	lsr	r3, r3, #5
   219e0:	orrs	r2, r3, r2
   219e4:	movwne	r1, #1
   219e8:	movwne	r0, #1
   219ec:	cmp	r1, #0
   219f0:	beq	21a20 <__mempcpy_chk@plt+0x10440>
   219f4:	mvn	r2, #-2147483648	; 0x80000000
   219f8:	udiv	r2, r2, r1
   219fc:	cmp	r2, r0
   21a00:	bcs	21a20 <__mempcpy_chk@plt+0x10440>
   21a04:	push	{fp, lr}
   21a08:	mov	fp, sp
   21a0c:	bl	114cc <__errno_location@plt>
   21a10:	mov	r1, #12
   21a14:	str	r1, [r0]
   21a18:	mov	r0, #0
   21a1c:	pop	{fp, pc}
   21a20:	b	112a4 <calloc@plt>
   21a24:	cmp	r0, #0
   21a28:	movweq	r0, #1
   21a2c:	cmn	r0, #1
   21a30:	ble	21a38 <__mempcpy_chk@plt+0x10458>
   21a34:	b	11460 <malloc@plt>
   21a38:	push	{fp, lr}
   21a3c:	mov	fp, sp
   21a40:	bl	114cc <__errno_location@plt>
   21a44:	mov	r1, #12
   21a48:	str	r1, [r0]
   21a4c:	mov	r0, #0
   21a50:	pop	{fp, pc}
   21a54:	push	{fp, lr}
   21a58:	mov	fp, sp
   21a5c:	cmp	r0, #0
   21a60:	beq	21a7c <__mempcpy_chk@plt+0x1049c>
   21a64:	cmp	r1, #0
   21a68:	beq	21a88 <__mempcpy_chk@plt+0x104a8>
   21a6c:	cmn	r1, #1
   21a70:	ble	21a90 <__mempcpy_chk@plt+0x104b0>
   21a74:	pop	{fp, lr}
   21a78:	b	113b8 <realloc@plt>
   21a7c:	mov	r0, r1
   21a80:	pop	{fp, lr}
   21a84:	b	21a24 <__mempcpy_chk@plt+0x10444>
   21a88:	bl	12a88 <__mempcpy_chk@plt+0x14a8>
   21a8c:	b	21a9c <__mempcpy_chk@plt+0x104bc>
   21a90:	bl	114cc <__errno_location@plt>
   21a94:	mov	r1, #12
   21a98:	str	r1, [r0]
   21a9c:	mov	r0, #0
   21aa0:	pop	{fp, pc}
   21aa4:	sub	r0, r0, #1
   21aa8:	ldrb	r3, [r0, #1]!
   21aac:	cmp	r3, #47	; 0x2f
   21ab0:	beq	21aa8 <__mempcpy_chk@plt+0x104c8>
   21ab4:	mov	r2, #0
   21ab8:	mov	r1, r0
   21abc:	uxtb	r3, r3
   21ac0:	cmp	r3, #47	; 0x2f
   21ac4:	beq	21ae0 <__mempcpy_chk@plt+0x10500>
   21ac8:	cmp	r3, #0
   21acc:	bxeq	lr
   21ad0:	tst	r2, #1
   21ad4:	mov	r2, #0
   21ad8:	movne	r0, r1
   21adc:	b	21ae4 <__mempcpy_chk@plt+0x10504>
   21ae0:	mov	r2, #1
   21ae4:	ldrb	r3, [r1, #1]!
   21ae8:	b	21abc <__mempcpy_chk@plt+0x104dc>
   21aec:	push	{r4, sl, fp, lr}
   21af0:	add	fp, sp, #8
   21af4:	mov	r4, r0
   21af8:	bl	114c0 <strlen@plt>
   21afc:	mov	r1, r0
   21b00:	sub	r2, r4, #1
   21b04:	mov	r0, r1
   21b08:	cmp	r1, #2
   21b0c:	bcc	21b20 <__mempcpy_chk@plt+0x10540>
   21b10:	ldrb	r3, [r2, r0]
   21b14:	sub	r1, r0, #1
   21b18:	cmp	r3, #47	; 0x2f
   21b1c:	beq	21b04 <__mempcpy_chk@plt+0x10524>
   21b20:	pop	{r4, sl, fp, pc}
   21b24:	push	{r4, r5, r6, sl, fp, lr}
   21b28:	add	fp, sp, #16
   21b2c:	mov	r4, r0
   21b30:	bl	1140c <__fpending@plt>
   21b34:	mov	r5, r0
   21b38:	mov	r0, r4
   21b3c:	bl	11418 <ferror_unlocked@plt>
   21b40:	mov	r6, r0
   21b44:	mov	r0, r4
   21b48:	bl	21c60 <__mempcpy_chk@plt+0x10680>
   21b4c:	cmp	r6, #0
   21b50:	beq	21b70 <__mempcpy_chk@plt+0x10590>
   21b54:	mvn	r4, #0
   21b58:	cmp	r0, #0
   21b5c:	bne	21b9c <__mempcpy_chk@plt+0x105bc>
   21b60:	bl	114cc <__errno_location@plt>
   21b64:	mov	r1, #0
   21b68:	str	r1, [r0]
   21b6c:	b	21b9c <__mempcpy_chk@plt+0x105bc>
   21b70:	cmp	r0, #0
   21b74:	mov	r4, r0
   21b78:	mvnne	r4, #0
   21b7c:	cmp	r5, #0
   21b80:	bne	21b9c <__mempcpy_chk@plt+0x105bc>
   21b84:	cmp	r0, #0
   21b88:	beq	21b9c <__mempcpy_chk@plt+0x105bc>
   21b8c:	bl	114cc <__errno_location@plt>
   21b90:	ldr	r0, [r0]
   21b94:	subs	r4, r0, #9
   21b98:	mvnne	r4, #0
   21b9c:	mov	r0, r4
   21ba0:	pop	{r4, r5, r6, sl, fp, pc}
   21ba4:	push	{r4, r5, r6, r7, fp, lr}
   21ba8:	add	fp, sp, #16
   21bac:	mov	r4, r0
   21bb0:	ldr	r0, [r0, #4]
   21bb4:	mov	r5, r1
   21bb8:	cmp	r0, r1
   21bbc:	bcs	21bec <__mempcpy_chk@plt+0x1060c>
   21bc0:	mov	r6, r3
   21bc4:	cmp	r3, #0
   21bc8:	beq	21bf4 <__mempcpy_chk@plt+0x10614>
   21bcc:	mvn	r0, #0
   21bd0:	udiv	r0, r0, r6
   21bd4:	cmp	r0, r5
   21bd8:	bcs	21bf4 <__mempcpy_chk@plt+0x10614>
   21bdc:	bl	114cc <__errno_location@plt>
   21be0:	mov	r1, #12
   21be4:	str	r1, [r0]
   21be8:	b	21c58 <__mempcpy_chk@plt+0x10678>
   21bec:	str	r5, [r4]
   21bf0:	b	21c50 <__mempcpy_chk@plt+0x10670>
   21bf4:	ldr	r0, [r4, #8]
   21bf8:	mul	r1, r6, r5
   21bfc:	cmp	r0, r2
   21c00:	beq	21c18 <__mempcpy_chk@plt+0x10638>
   21c04:	bl	21a54 <__mempcpy_chk@plt+0x10474>
   21c08:	mov	r7, r0
   21c0c:	cmp	r0, #0
   21c10:	bne	21c48 <__mempcpy_chk@plt+0x10668>
   21c14:	b	21c58 <__mempcpy_chk@plt+0x10678>
   21c18:	mov	r0, r1
   21c1c:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   21c20:	cmp	r0, #0
   21c24:	beq	21c58 <__mempcpy_chk@plt+0x10678>
   21c28:	ldr	r1, [r4, #8]
   21c2c:	mov	r7, r0
   21c30:	cmp	r1, #0
   21c34:	beq	21c48 <__mempcpy_chk@plt+0x10668>
   21c38:	ldr	r0, [r4]
   21c3c:	mul	r2, r0, r6
   21c40:	mov	r0, r7
   21c44:	bl	1134c <memcpy@plt>
   21c48:	str	r5, [r4]
   21c4c:	stmib	r4, {r5, r7}
   21c50:	mov	r0, #1
   21c54:	pop	{r4, r5, r6, r7, fp, pc}
   21c58:	mov	r0, #0
   21c5c:	pop	{r4, r5, r6, r7, fp, pc}
   21c60:	push	{r4, r5, r6, sl, fp, lr}
   21c64:	add	fp, sp, #16
   21c68:	sub	sp, sp, #8
   21c6c:	mov	r4, r0
   21c70:	bl	11514 <fileno@plt>
   21c74:	cmn	r0, #1
   21c78:	ble	21cec <__mempcpy_chk@plt+0x1070c>
   21c7c:	mov	r0, r4
   21c80:	bl	11478 <__freading@plt>
   21c84:	cmp	r0, #0
   21c88:	beq	21cb4 <__mempcpy_chk@plt+0x106d4>
   21c8c:	mov	r0, r4
   21c90:	bl	11514 <fileno@plt>
   21c94:	mov	r1, #1
   21c98:	mov	r2, #0
   21c9c:	mov	r3, #0
   21ca0:	str	r1, [sp]
   21ca4:	bl	113f4 <lseek64@plt>
   21ca8:	and	r0, r0, r1
   21cac:	cmn	r0, #1
   21cb0:	beq	21cec <__mempcpy_chk@plt+0x1070c>
   21cb4:	mov	r0, r4
   21cb8:	bl	21d58 <__mempcpy_chk@plt+0x10778>
   21cbc:	cmp	r0, #0
   21cc0:	beq	21cec <__mempcpy_chk@plt+0x1070c>
   21cc4:	bl	114cc <__errno_location@plt>
   21cc8:	ldr	r6, [r0]
   21ccc:	mov	r5, r0
   21cd0:	mov	r0, r4
   21cd4:	bl	1152c <fclose@plt>
   21cd8:	cmp	r6, #0
   21cdc:	strne	r6, [r5]
   21ce0:	mvnne	r0, #0
   21ce4:	sub	sp, fp, #16
   21ce8:	pop	{r4, r5, r6, sl, fp, pc}
   21cec:	mov	r0, r4
   21cf0:	sub	sp, fp, #16
   21cf4:	pop	{r4, r5, r6, sl, fp, lr}
   21cf8:	b	1152c <fclose@plt>
   21cfc:	push	{r4, r5, r6, r7, fp, lr}
   21d00:	add	fp, sp, #16
   21d04:	mov	r4, r0
   21d08:	cmp	r0, #2
   21d0c:	bhi	21d3c <__mempcpy_chk@plt+0x1075c>
   21d10:	mov	r0, r4
   21d14:	bl	21d44 <__mempcpy_chk@plt+0x10764>
   21d18:	mov	r5, r0
   21d1c:	bl	114cc <__errno_location@plt>
   21d20:	ldr	r7, [r0]
   21d24:	mov	r6, r0
   21d28:	mov	r0, r4
   21d2c:	bl	115d4 <close@plt>
   21d30:	mov	r0, r5
   21d34:	str	r7, [r6]
   21d38:	pop	{r4, r5, r6, r7, fp, pc}
   21d3c:	mov	r0, r4
   21d40:	pop	{r4, r5, r6, r7, fp, pc}
   21d44:	lsl	r1, r1, #12
   21d48:	movw	r2, #1030	; 0x406
   21d4c:	and	r1, r2, r1, asr #31
   21d50:	mov	r2, #3
   21d54:	b	21e98 <__mempcpy_chk@plt+0x108b8>
   21d58:	push	{r4, sl, fp, lr}
   21d5c:	add	fp, sp, #8
   21d60:	sub	sp, sp, #8
   21d64:	mov	r4, r0
   21d68:	cmp	r0, #0
   21d6c:	beq	21da4 <__mempcpy_chk@plt+0x107c4>
   21d70:	mov	r0, r4
   21d74:	bl	11478 <__freading@plt>
   21d78:	cmp	r0, #0
   21d7c:	beq	21da4 <__mempcpy_chk@plt+0x107c4>
   21d80:	ldrb	r0, [r4, #1]
   21d84:	tst	r0, #1
   21d88:	beq	21da4 <__mempcpy_chk@plt+0x107c4>
   21d8c:	mov	r0, #1
   21d90:	mov	r2, #0
   21d94:	mov	r3, #0
   21d98:	str	r0, [sp]
   21d9c:	mov	r0, r4
   21da0:	bl	12ab0 <__mempcpy_chk@plt+0x14d0>
   21da4:	mov	r0, r4
   21da8:	sub	sp, fp, #8
   21dac:	pop	{r4, sl, fp, lr}
   21db0:	b	11310 <fflush@plt>
   21db4:	push	{fp, lr}
   21db8:	mov	fp, sp
   21dbc:	mov	r0, #14
   21dc0:	bl	11574 <nl_langinfo@plt>
   21dc4:	movw	r1, #10209	; 0x27e1
   21dc8:	cmp	r0, #0
   21dcc:	movt	r1, #2
   21dd0:	movne	r1, r0
   21dd4:	movw	r0, #12322	; 0x3022
   21dd8:	ldrb	r2, [r1]
   21ddc:	movt	r0, #2
   21de0:	cmp	r2, #0
   21de4:	movne	r0, r1
   21de8:	pop	{fp, pc}
   21dec:	push	{r4, r5, r6, r7, fp, lr}
   21df0:	add	fp, sp, #16
   21df4:	sub	sp, sp, #8
   21df8:	cmp	r0, #0
   21dfc:	add	r5, sp, #4
   21e00:	mov	r7, r2
   21e04:	mov	r4, r1
   21e08:	movne	r5, r0
   21e0c:	mov	r0, r5
   21e10:	bl	11424 <mbrtowc@plt>
   21e14:	mov	r6, r0
   21e18:	cmp	r7, #0
   21e1c:	beq	21e44 <__mempcpy_chk@plt+0x10864>
   21e20:	cmn	r6, #2
   21e24:	bcc	21e44 <__mempcpy_chk@plt+0x10864>
   21e28:	mov	r0, #0
   21e2c:	bl	22070 <__mempcpy_chk@plt+0x10a90>
   21e30:	cmp	r0, #0
   21e34:	bne	21e44 <__mempcpy_chk@plt+0x10864>
   21e38:	ldrb	r0, [r4]
   21e3c:	mov	r6, #1
   21e40:	str	r0, [r5]
   21e44:	mov	r0, r6
   21e48:	sub	sp, fp, #16
   21e4c:	pop	{r4, r5, r6, r7, fp, pc}
   21e50:	cmp	r2, #0
   21e54:	beq	21e84 <__mempcpy_chk@plt+0x108a4>
   21e58:	mvn	r3, #0
   21e5c:	udiv	r3, r3, r2
   21e60:	cmp	r3, r1
   21e64:	bcs	21e84 <__mempcpy_chk@plt+0x108a4>
   21e68:	push	{fp, lr}
   21e6c:	mov	fp, sp
   21e70:	bl	114cc <__errno_location@plt>
   21e74:	mov	r1, #12
   21e78:	str	r1, [r0]
   21e7c:	mov	r0, #0
   21e80:	pop	{fp, pc}
   21e84:	mul	r1, r2, r1
   21e88:	b	21a54 <__mempcpy_chk@plt+0x10474>
   21e8c:	mov	r1, #0
   21e90:	mov	r2, #3
   21e94:	b	21e98 <__mempcpy_chk@plt+0x108b8>
   21e98:	sub	sp, sp, #8
   21e9c:	push	{r4, r5, r6, r7, fp, lr}
   21ea0:	add	fp, sp, #16
   21ea4:	sub	sp, sp, #8
   21ea8:	mov	r5, r0
   21eac:	add	r0, fp, #8
   21eb0:	cmp	r1, #11
   21eb4:	str	r2, [fp, #8]
   21eb8:	str	r3, [fp, #12]
   21ebc:	str	r0, [sp, #4]
   21ec0:	bhi	21efc <__mempcpy_chk@plt+0x1091c>
   21ec4:	mov	r0, #1
   21ec8:	movw	r2, #1300	; 0x514
   21ecc:	tst	r2, r0, lsl r1
   21ed0:	bne	21fb4 <__mempcpy_chk@plt+0x109d4>
   21ed4:	movw	r2, #2570	; 0xa0a
   21ed8:	tst	r2, r0, lsl r1
   21edc:	bne	21f24 <__mempcpy_chk@plt+0x10944>
   21ee0:	cmp	r1, #0
   21ee4:	bne	21efc <__mempcpy_chk@plt+0x1091c>
   21ee8:	ldr	r0, [sp, #4]
   21eec:	add	r1, r0, #4
   21ef0:	str	r1, [sp, #4]
   21ef4:	mov	r1, #0
   21ef8:	b	21fc0 <__mempcpy_chk@plt+0x109e0>
   21efc:	sub	r0, r1, #1024	; 0x400
   21f00:	cmp	r0, #10
   21f04:	bhi	21fb4 <__mempcpy_chk@plt+0x109d4>
   21f08:	mov	r2, #1
   21f0c:	movw	r3, #645	; 0x285
   21f10:	tst	r3, r2, lsl r0
   21f14:	bne	21fb4 <__mempcpy_chk@plt+0x109d4>
   21f18:	movw	r3, #1282	; 0x502
   21f1c:	tst	r3, r2, lsl r0
   21f20:	beq	21f30 <__mempcpy_chk@plt+0x10950>
   21f24:	mov	r0, r5
   21f28:	bl	11544 <fcntl64@plt>
   21f2c:	b	21fcc <__mempcpy_chk@plt+0x109ec>
   21f30:	cmp	r0, #6
   21f34:	bne	21fb4 <__mempcpy_chk@plt+0x109d4>
   21f38:	ldr	r0, [sp, #4]
   21f3c:	movw	r7, #25656	; 0x6438
   21f40:	movt	r7, #3
   21f44:	add	r1, r0, #4
   21f48:	str	r1, [sp, #4]
   21f4c:	ldr	r6, [r0]
   21f50:	ldr	r0, [r7]
   21f54:	cmp	r0, #0
   21f58:	bmi	21ff0 <__mempcpy_chk@plt+0x10a10>
   21f5c:	mov	r0, r5
   21f60:	movw	r1, #1030	; 0x406
   21f64:	mov	r2, r6
   21f68:	bl	11544 <fcntl64@plt>
   21f6c:	mov	r4, r0
   21f70:	cmn	r0, #1
   21f74:	bgt	21fe4 <__mempcpy_chk@plt+0x10a04>
   21f78:	bl	114cc <__errno_location@plt>
   21f7c:	ldr	r0, [r0]
   21f80:	cmp	r0, #22
   21f84:	bne	21fe4 <__mempcpy_chk@plt+0x10a04>
   21f88:	mov	r0, r5
   21f8c:	mov	r1, #0
   21f90:	mov	r2, r6
   21f94:	bl	11544 <fcntl64@plt>
   21f98:	mov	r4, r0
   21f9c:	cmp	r0, #0
   21fa0:	bmi	21fd0 <__mempcpy_chk@plt+0x109f0>
   21fa4:	mvn	r0, #0
   21fa8:	str	r0, [r7]
   21fac:	mov	r0, #1
   21fb0:	b	22014 <__mempcpy_chk@plt+0x10a34>
   21fb4:	ldr	r0, [sp, #4]
   21fb8:	add	r2, r0, #4
   21fbc:	str	r2, [sp, #4]
   21fc0:	ldr	r2, [r0]
   21fc4:	mov	r0, r5
   21fc8:	bl	11544 <fcntl64@plt>
   21fcc:	mov	r4, r0
   21fd0:	mov	r0, r4
   21fd4:	sub	sp, fp, #16
   21fd8:	pop	{r4, r5, r6, r7, fp, lr}
   21fdc:	add	sp, sp, #8
   21fe0:	bx	lr
   21fe4:	mov	r0, #1
   21fe8:	str	r0, [r7]
   21fec:	b	21fd0 <__mempcpy_chk@plt+0x109f0>
   21ff0:	mov	r0, r5
   21ff4:	mov	r1, #0
   21ff8:	mov	r2, r6
   21ffc:	bl	11544 <fcntl64@plt>
   22000:	mov	r4, r0
   22004:	ldr	r0, [r7]
   22008:	add	r0, r0, #1
   2200c:	clz	r0, r0
   22010:	lsr	r0, r0, #5
   22014:	cmp	r0, #0
   22018:	beq	21fd0 <__mempcpy_chk@plt+0x109f0>
   2201c:	cmp	r4, #0
   22020:	bmi	21fd0 <__mempcpy_chk@plt+0x109f0>
   22024:	mov	r0, r4
   22028:	mov	r1, #1
   2202c:	bl	11544 <fcntl64@plt>
   22030:	cmp	r0, #0
   22034:	bmi	22050 <__mempcpy_chk@plt+0x10a70>
   22038:	orr	r2, r0, #1
   2203c:	mov	r0, r4
   22040:	mov	r1, #2
   22044:	bl	11544 <fcntl64@plt>
   22048:	cmn	r0, #1
   2204c:	bne	21fd0 <__mempcpy_chk@plt+0x109f0>
   22050:	bl	114cc <__errno_location@plt>
   22054:	ldr	r6, [r0]
   22058:	mov	r5, r0
   2205c:	mov	r0, r4
   22060:	bl	115d4 <close@plt>
   22064:	str	r6, [r5]
   22068:	mvn	r4, #0
   2206c:	b	21fd0 <__mempcpy_chk@plt+0x109f0>
   22070:	push	{r4, sl, fp, lr}
   22074:	add	fp, sp, #8
   22078:	sub	sp, sp, #264	; 0x108
   2207c:	add	r1, sp, #7
   22080:	movw	r2, #257	; 0x101
   22084:	bl	220dc <__mempcpy_chk@plt+0x10afc>
   22088:	mov	r4, #0
   2208c:	cmp	r0, #0
   22090:	bne	220d0 <__mempcpy_chk@plt+0x10af0>
   22094:	movw	r1, #12328	; 0x3028
   22098:	add	r0, sp, #7
   2209c:	mov	r2, #2
   220a0:	movt	r1, #2
   220a4:	bl	114b4 <bcmp@plt>
   220a8:	cmp	r0, #0
   220ac:	beq	220d0 <__mempcpy_chk@plt+0x10af0>
   220b0:	movw	r1, #12330	; 0x302a
   220b4:	add	r0, sp, #7
   220b8:	mov	r2, #6
   220bc:	movt	r1, #2
   220c0:	bl	114b4 <bcmp@plt>
   220c4:	cmp	r0, #0
   220c8:	mov	r4, r0
   220cc:	movwne	r4, #1
   220d0:	mov	r0, r4
   220d4:	sub	sp, fp, #8
   220d8:	pop	{r4, sl, fp, pc}
   220dc:	push	{r4, r5, r6, r7, fp, lr}
   220e0:	add	fp, sp, #16
   220e4:	mov	r4, r1
   220e8:	mov	r1, #0
   220ec:	mov	r6, r2
   220f0:	bl	11550 <setlocale@plt>
   220f4:	cmp	r0, #0
   220f8:	beq	22124 <__mempcpy_chk@plt+0x10b44>
   220fc:	mov	r7, r0
   22100:	bl	114c0 <strlen@plt>
   22104:	cmp	r0, r6
   22108:	bcs	22138 <__mempcpy_chk@plt+0x10b58>
   2210c:	add	r2, r0, #1
   22110:	mov	r0, r4
   22114:	mov	r1, r7
   22118:	bl	1134c <memcpy@plt>
   2211c:	mov	r5, #0
   22120:	b	22160 <__mempcpy_chk@plt+0x10b80>
   22124:	cmp	r6, #0
   22128:	mov	r5, #22
   2212c:	movne	r0, #0
   22130:	strbne	r0, [r4]
   22134:	b	22160 <__mempcpy_chk@plt+0x10b80>
   22138:	mov	r5, #34	; 0x22
   2213c:	cmp	r6, #0
   22140:	beq	22160 <__mempcpy_chk@plt+0x10b80>
   22144:	sub	r6, r6, #1
   22148:	mov	r0, r4
   2214c:	mov	r1, r7
   22150:	mov	r2, r6
   22154:	bl	1134c <memcpy@plt>
   22158:	mov	r0, #0
   2215c:	strb	r0, [r4, r6]
   22160:	mov	r0, r5
   22164:	pop	{r4, r5, r6, r7, fp, pc}
   22168:	mov	r1, #0
   2216c:	b	11550 <setlocale@plt>
   22170:	cmp	r3, #0
   22174:	cmpeq	r2, #0
   22178:	bne	2219c <__mempcpy_chk@plt+0x10bbc>
   2217c:	cmp	r1, #0
   22180:	movlt	r1, #-2147483648	; 0x80000000
   22184:	movlt	r0, #0
   22188:	blt	22198 <__mempcpy_chk@plt+0x10bb8>
   2218c:	cmpeq	r0, #0
   22190:	mvnne	r1, #-2147483648	; 0x80000000
   22194:	mvnne	r0, #0
   22198:	b	22244 <__mempcpy_chk@plt+0x10c64>
   2219c:	sub	sp, sp, #8
   221a0:	push	{sp, lr}
   221a4:	cmp	r1, #0
   221a8:	blt	221c8 <__mempcpy_chk@plt+0x10be8>
   221ac:	cmp	r3, #0
   221b0:	blt	221fc <__mempcpy_chk@plt+0x10c1c>
   221b4:	bl	22254 <__mempcpy_chk@plt+0x10c74>
   221b8:	ldr	lr, [sp, #4]
   221bc:	add	sp, sp, #8
   221c0:	pop	{r2, r3}
   221c4:	bx	lr
   221c8:	rsbs	r0, r0, #0
   221cc:	sbc	r1, r1, r1, lsl #1
   221d0:	cmp	r3, #0
   221d4:	blt	22220 <__mempcpy_chk@plt+0x10c40>
   221d8:	bl	22254 <__mempcpy_chk@plt+0x10c74>
   221dc:	ldr	lr, [sp, #4]
   221e0:	add	sp, sp, #8
   221e4:	pop	{r2, r3}
   221e8:	rsbs	r0, r0, #0
   221ec:	sbc	r1, r1, r1, lsl #1
   221f0:	rsbs	r2, r2, #0
   221f4:	sbc	r3, r3, r3, lsl #1
   221f8:	bx	lr
   221fc:	rsbs	r2, r2, #0
   22200:	sbc	r3, r3, r3, lsl #1
   22204:	bl	22254 <__mempcpy_chk@plt+0x10c74>
   22208:	ldr	lr, [sp, #4]
   2220c:	add	sp, sp, #8
   22210:	pop	{r2, r3}
   22214:	rsbs	r0, r0, #0
   22218:	sbc	r1, r1, r1, lsl #1
   2221c:	bx	lr
   22220:	rsbs	r2, r2, #0
   22224:	sbc	r3, r3, r3, lsl #1
   22228:	bl	22254 <__mempcpy_chk@plt+0x10c74>
   2222c:	ldr	lr, [sp, #4]
   22230:	add	sp, sp, #8
   22234:	pop	{r2, r3}
   22238:	rsbs	r2, r2, #0
   2223c:	sbc	r3, r3, r3, lsl #1
   22240:	bx	lr
   22244:	push	{r1, lr}
   22248:	mov	r0, #8
   2224c:	bl	112c8 <raise@plt>
   22250:	pop	{r1, pc}
   22254:	cmp	r1, r3
   22258:	cmpeq	r0, r2
   2225c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22260:	mov	r4, r0
   22264:	movcc	r0, #0
   22268:	mov	r5, r1
   2226c:	ldr	lr, [sp, #36]	; 0x24
   22270:	movcc	r1, r0
   22274:	bcc	22370 <__mempcpy_chk@plt+0x10d90>
   22278:	cmp	r3, #0
   2227c:	clzeq	ip, r2
   22280:	clzne	ip, r3
   22284:	addeq	ip, ip, #32
   22288:	cmp	r5, #0
   2228c:	clzeq	r1, r4
   22290:	addeq	r1, r1, #32
   22294:	clzne	r1, r5
   22298:	sub	ip, ip, r1
   2229c:	sub	sl, ip, #32
   222a0:	lsl	r9, r3, ip
   222a4:	rsb	fp, ip, #32
   222a8:	orr	r9, r9, r2, lsl sl
   222ac:	orr	r9, r9, r2, lsr fp
   222b0:	lsl	r8, r2, ip
   222b4:	cmp	r5, r9
   222b8:	cmpeq	r4, r8
   222bc:	movcc	r0, #0
   222c0:	movcc	r1, r0
   222c4:	bcc	222e0 <__mempcpy_chk@plt+0x10d00>
   222c8:	mov	r0, #1
   222cc:	subs	r4, r4, r8
   222d0:	lsl	r1, r0, sl
   222d4:	orr	r1, r1, r0, lsr fp
   222d8:	lsl	r0, r0, ip
   222dc:	sbc	r5, r5, r9
   222e0:	cmp	ip, #0
   222e4:	beq	22370 <__mempcpy_chk@plt+0x10d90>
   222e8:	lsr	r6, r8, #1
   222ec:	orr	r6, r6, r9, lsl #31
   222f0:	lsr	r7, r9, #1
   222f4:	mov	r2, ip
   222f8:	b	2231c <__mempcpy_chk@plt+0x10d3c>
   222fc:	subs	r3, r4, r6
   22300:	sbc	r8, r5, r7
   22304:	adds	r3, r3, r3
   22308:	adc	r8, r8, r8
   2230c:	adds	r4, r3, #1
   22310:	adc	r5, r8, #0
   22314:	subs	r2, r2, #1
   22318:	beq	22338 <__mempcpy_chk@plt+0x10d58>
   2231c:	cmp	r5, r7
   22320:	cmpeq	r4, r6
   22324:	bcs	222fc <__mempcpy_chk@plt+0x10d1c>
   22328:	adds	r4, r4, r4
   2232c:	adc	r5, r5, r5
   22330:	subs	r2, r2, #1
   22334:	bne	2231c <__mempcpy_chk@plt+0x10d3c>
   22338:	lsr	r3, r4, ip
   2233c:	orr	r3, r3, r5, lsl fp
   22340:	lsr	r2, r5, ip
   22344:	orr	r3, r3, r5, lsr sl
   22348:	adds	r0, r0, r4
   2234c:	mov	r4, r3
   22350:	lsl	r3, r2, ip
   22354:	orr	r3, r3, r4, lsl sl
   22358:	lsl	ip, r4, ip
   2235c:	orr	r3, r3, r4, lsr fp
   22360:	adc	r1, r1, r5
   22364:	subs	r0, r0, ip
   22368:	mov	r5, r2
   2236c:	sbc	r1, r1, r3
   22370:	cmp	lr, #0
   22374:	strdne	r4, [lr]
   22378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2237c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22380:	mov	r7, r0
   22384:	ldr	r6, [pc, #72]	; 223d4 <__mempcpy_chk@plt+0x10df4>
   22388:	ldr	r5, [pc, #72]	; 223d8 <__mempcpy_chk@plt+0x10df8>
   2238c:	add	r6, pc, r6
   22390:	add	r5, pc, r5
   22394:	sub	r6, r6, r5
   22398:	mov	r8, r1
   2239c:	mov	r9, r2
   223a0:	bl	1126c <pthread_mutex_unlock@plt-0x20>
   223a4:	asrs	r6, r6, #2
   223a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   223ac:	mov	r4, #0
   223b0:	add	r4, r4, #1
   223b4:	ldr	r3, [r5], #4
   223b8:	mov	r2, r9
   223bc:	mov	r1, r8
   223c0:	mov	r0, r7
   223c4:	blx	r3
   223c8:	cmp	r6, r4
   223cc:	bne	223b0 <__mempcpy_chk@plt+0x10dd0>
   223d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223d4:	andeq	r1, r1, r8, ror fp
   223d8:	andeq	r1, r1, r0, ror fp
   223dc:	bx	lr
   223e0:	ldr	r3, [pc, #12]	; 223f4 <__mempcpy_chk@plt+0x10e14>
   223e4:	mov	r1, #0
   223e8:	add	r3, pc, r3
   223ec:	ldr	r2, [r3]
   223f0:	b	114e4 <__cxa_atexit@plt>
   223f4:	andeq	r1, r1, r4, asr #26

Disassembly of section .fini:

000223f8 <.fini>:
   223f8:	push	{r3, lr}
   223fc:	pop	{r3, pc}
